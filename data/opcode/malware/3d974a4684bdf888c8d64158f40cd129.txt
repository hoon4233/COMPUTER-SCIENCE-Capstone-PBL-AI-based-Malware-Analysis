(bad)
(bad)
(bad)
call
in
mov
mov
mov
mov
pop
ret
sbb
mov
inc
test
jne
sub
mov
ret
jne
add
or
call
(bad)
cmp
add
aaa
sar
push
push
mov
idiv
stc
mov
test
je
cmp
je
or
je
mov
cmp
je
jo
dec
jnp
neg
jne
or
push
cmp
push
or
(bad)
jg
test
jle
mov
mov
and
pop
pop
ret
push
mov
xor
mov
dec
lock
outs
dec
xor
mov
dec
clc
idiv
jmp
adc
ins
cmp
jne
mov
cmp
sar
call
or
cld
xchg
fmul
mov
sbb
pushf
and
mov
fsubr
ret
arpl
lock
pop
and
cld
stos
push
push
call
fistp
neg
push
add
pop
pop
test
jbe
inc
and
or
sbb
cmp
or
(bad)
sbb
rcl
sub
test
mov
jo
neg
fisubr
jns
push
push
fnstsw
push
push
add
push
push
in
pop
cmp
push
clc
push
mov
fistp
cld
inc
add
gs
adc
sbb
push
cmp
mov
popa
fcomp
and
xchg
rcr
ficomp
sahf
push
lea
cmp
push
push
(bad)
stos
push
push
cld
mov
add
sar
sbb
enter
rol
test
jg
push
mov
push
call
jmp
push
fs
pop
es
mov
cmp
jb
cmp
sub
dec
inc
push
push
mov
dec
(bad)
shr
enter
std
mov
sub
std
adc
pop
jmp
in
pop
xor
pop
ret
mov
icebp
push
(bad)
dec
js
xor
push
mov
outs
sub
es
add
ins
pop
lock
mov
add
mov
cmp
push
mov
or
push
mov
sub
xchg
cmp
push
call
pop
idiv
dec
cmp
mov
push
je
mov
mov
add
adc
mov
mov
cmp
adc
sbb
enter
fstp
add
mov
ss
ja
sbb
in
or
leave
ja
fadd
add
lock
div
sbb
jae
adc
rol
es
sub
or
test
jns
jae
mov
push
mov
pop
(bad)
mov
inc
and
pop
push
jge
push
add
push
sbb
push
jo
jle
jo
fdivr
add
adc
xor
pop
mov
mov
ret
push
shl
push
adc
aad
adc
mov
fist
sbb
aad
add
jo
ds
js
mov
push
xor
mov
aaa
mov
fwait
or
popa
out
or
lock
jge
jo
jne
jns
adc
adc
add
add
pop
pop
mov
sar
in
add
pop
mov
add
xor
ret
sbb
adc
sbb
add
aad
outs
inc
cmc
inc
add
add
ret
dec
add
pop
hlt
sub
jo
adc
clc
int
mov
push
sbb
jo
jo
jp
cwde
adc
std
inc
pop
je
(bad)
pushf
cmp
jge
ret
inc
push
lea
push
div
mov
xor
mov
push
(bad)
jecxz
int
adc
push
mov
pop
leave
jne
mov
cmp
cmp
jl
adc
mov
push
enter
sbb
adc
jo
mov
jle
add
push
cld
or
sub
fisubr
maxps
dec
scas
cmp
enter
sub
mov
mov
clc
or
je
cmp
and
xor
jbe
dec
cmp
sub
xchg
pop
fcom
pop
sub
jle
mov
mov
pop
lds
fist
popf
std
dec
jo
mov
sub
cmp
jae
mov
mov
inc
mov
push
lea
cmp
jae
ficom
push
add
push
push
sub
push
add
push
jmp
xor
push
lea
pop
adc
add
mov
stc
mov
icebp
out
add
into
lar
jbe
adc
and
or
shr
ins
in
pusha
cmp
pop
div
mov
dec
cmps
in
cmp
jae
push
pop
sub
cmp
ja
xor
ins
push
push
loopne
fiadd
lods
dec
mov
adc
call
gs
add
mov
imul
in
inc
add
mov
ret
mov
push
aaa
enter
cmp
inc
inc
jae
jbe
lea
dec
push
mov
fistp
iret
sbb
das
mov
jae
inc
mov
popf
and
ja
mov
not
in
push
push
add
mov
sti
sub
call
outs
mov
repnz
ins
inc
add
sbb
in
and
inc
sub
dec
mov
mov
(bad)
js
jle
add
ret
push
jge
push
push
test
push
xor
lea
stos
cli
cld
pop
push
cmp
in
and
dec
pop
leave
adc
mov
es
data16
push
in
jb
or
xchg
jg
cmp
jo
scas
pop
movs
dec
iret
xor
cld
add
movs
das
cmp
ret
xchg
jbe
mov
(bad)
jl
sti
lock
test
imul
sub
jle
sbb
jae
mov
pop
jl
cmp
jae
(bad)
push
push
jmp
jmp
inc
push
pop
jo
(bad)
sbb
pop
neg
push
int
aas
adc
add
push
(bad)
call
dec
push
imul
std
fstp
pop
test
inc
add
leave
dec
mov
cmp
scas
mov
aaa
mov
add
inc
ret
push
aad
adc
push
test
push
(bad)
fstp
retf
fnstcw
jnp
adc
mov
push
inc
sbb
or
pop
lds
add
add
mov
inc
sub
cmps
add
or
jge
bound
xchg
jl
rol
repnz
ror
mov
dec
movs
adc
mov
into
or
inc
or
lea
daa
lds
jns
adc
push
mov
cmp
ja
cs
cmp
hlt
outs
mov
cld
mov
xor
fbstp
push
add
addr16
jp
retf
push
pop
jmp
adc
paddusb
xchg
test
aaa
mov
out
mov
sbb
push
inc
stos
or
clc
push
mov
add
push
push
sub
iret
jmp
ds
pop
push
adc
jno
or
les
xchg
xchg
fdivr
mov
nop
add
retf
pop
mov
mov
test
je
loope
loope
push
mov
add
xchg
cmovle
pop
test
cmp
or
mov
xabort
push
cmp
jb
adc
xor
mov
std
and
dec
sub
pop
loope
xlat
dec
or
sub
adc
push
mov
mov
add
stos
cmp
lods
or
popf
add
add
mov
(bad)
cmp
loopne
lahf
adc
mov
inc
test
loope
ins
sbb
jae
dec
sbb
sbb
call
mov
pop
stc
xor
dec
add
or
(bad)
aaa
add
add
or
inc
ins
out
nop
push
enter
pop
add
ror
adc
(bad)
pop
stos
inc
add
mov
and
add
ficom
xor
add
ficomp
add
cdq
jnp
inc
push
add
in
cmp
jp
or
hlt
mov
in
add
cdq
mov
mov
sbb
stos
fsubp
add
add
pop
pop
aas
mov
dec
push
pop
mov
je
shld
and
cmps
fisub
xor
mov
dec
out
jmp
clc
jne
xor
jmp
cmp
sbb
mov
retf
mov
mov
(bad)
push
pop
mov
pop
fistp
mov
sub
push
(bad)
sar
cmp
ja
inc
and
lods
call
ss
dec
call
popf
jno
jmp
pop
call
std
mov
adc
xchg
shl
aam
imul
ret
jp
xor
movs
or
mov
out
mov
aad
shr
xlat
lock
xchg
out
ror
shl
and
neg
sbb
push
jae
add
pop
ret
push
inc
dec
hlt
mov
ror
shl
or
inc
inc
(bad)
loop
mov
and
xor
xor
xor
(bad)
jg
hlt
cmp
je
cmp
test
jne
add
inc
cmp
jb
inc
pop
and
cmp
jb
mov
mov
push
dec
inc
shl
add
jmp
xor
sbb
cmps
sbb
xor
push
sbb
push
or
ja
dec
dec
push
in
adc
cmc
aam
adc
and
pusha
ja
enter
cmp
je
pop
pushf
sbb
push
push
fsub
sbb
xor
adc
or
push
adc
add
or
xor
mov
addr16
dec
sub
retf
mov
cmps
push
mov
stos
fisttp
ret
test
cmp
push
stos
and
(bad)
pop
mov
mov
and
test
in
fst
jmp
stc
out
fstp
and
dec
fstp
pop
pop
inc
mov
pop
pop
sbb
cmp
push
and
adc
imul
clc
push
call
add
rcr
jae
scas
mov
push
fadd
sub
add
imul
push
mov
scas
add
add
pop
outs
lods
inc
neg
out
push
mov
push
setg
pop
xchg
pop
push
cmp
mov
adc
push
inc
and
adc
or
jecxz
inc
push
add
cmp
add
outs
xchg
pop
pop
push
jo
push
add
outs
mov
cld
ss
or
adc
inc
jo
inc
or
pop
rcl
leave
and
or
ins
mov
sbb
push
fst
add
add
retf
mov
jg
mov
bound
std
add
iret
or
cld
push
jo
xchg
add
mov
cmp
je
push
sub
sar
and
add
lea
test
jle
cwde
rol
or
test
loopne
xor
jmp
push
inc
out
loop
mov
push
ret
pop
jmp
xor
push
jb
and
or
add
mov
xchg
sub
les
aam
or
adc
fiadd
mov
ja
adc
and
mov
cs
bound
les
xor
int3
(bad)
idiv
add
loopne
repnz
sbb
fwait
movs
imul
and
dec
add
and
(bad)
loopne
test
shl
push
aam
mov
cli
loopne
inc
call
push
js
push
inc
or
inc
fdiv
push
xor
outs
hlt
mov
push
dec
scas
ret
fld
xor
lds
out
mov
call
test
jb
xor
jecxz
and
push
mov
ret
sbb
add
dec
cmp
cdq
nop
sbb
nop
or
or
mov
lods
push
int
add
pusha
sub
mov
push
enter
repz
add
jl
lock
add
pop
push
ins
lock
ins
sub
inc
jo
fistp
add
adc
adc
sbb
or
ret
add
push
sbb
stos
mov
jns
push
lds
mov
sbb
xchg
adc
cmps
dec
shl
sbb
adc
sub
mov
mov
es
inc
push
xor
jmp
push
push
ins
adc
pop
push
xor
add
push
leave
stos
jmp
pusha
dec
push
adc
pop
pop
pop
cmp
cli
push
int
shr
adc
xor
jmp
dec
je
mov
mov
es
jne
clc
daa
aad
inc
mov
push
and
push
loopne
push
and
adc
jmp
test
and
not
and
and
jbe
inc
clc
dec
test
jne
or
pop
out
rcl
je
sub
call
inc
mov
add
push
jmp
inc
mov
xor
and
jno
push
add
cmp
je
outs
(bad)
out
ror
adc
or
adc
adc
sub
push
pop
fcom
xor
test
clc
cmpxchg
add
pop
pop
pop
hlt
pusha
fsub
jmp
into
and
fistp
jo
jbe
ror
je
fcmovnu
add
addr16
cmp
ret
adc
jp
xchg
push
mov
cmps
push
mov
xor
mov
mov
loopne
fldcw
lock
xor
cmp
jle
sub
push
xchg
dec
adc
cwde
push
pop
push
adc
cmp
push
adc
es
xorps
movs
mov
or
jbe
jbe
sub
sub
mov
xchg
sbb
in
mov
pop
leave
lods
mov
call
or
aam
add
dec
jbe
and
sbb
push
jne
sar
mov
retf
mov
jb
mov
or
add
push
add
fdiv
push
ins
retf
mov
fcmove
sub
push
mov
dec
jmp
cmps
inc
clc
popa
push
push
(bad)
dec
movs
jo
jmp
adc
hlt
jmp
mov
jo
push
movs
loop
add
xchg
sub
lods
test
sbb
cs
jg
adc
cld
aaa
push
jne
mov
jmp
and
or
leave
pop
lods
xor
enter
jl
cmp
in
lock
cmp
add
sub
push
mov
(bad)
stos
js
push
sbb
data16
cmc
add
mov
inc
lds
mov
aam
push
paddsb
lock
mov
cmp
je
js
stc
jmp
adc
dec
mov
add
xor
add
or
jne
mov
mov
dec
mov
int3
or
dec
jmp
add
mov
sbb
cmp
add
sub
pop
ret
mov
mov
push
jge
adc
push
mov
test
push
jo
push
daa
ja
movmskps
test
mov
sub
icebp
cmp
inc
pusha
jge
cs
jo
jbe
jbe
xchg
lea
ret
adc
inc
ret
mov
je
(bad)
pop
fist
mov
fcomp
icebp
test
pop
std
jge
pop
call
ins
mov
add
addr16
and
or
or
pop
shr
rol
les
push
mov
rol
arpl
cmc
lock
rcl
loopne
aaa
shl
shl
imul
or
pop
cli
pusha
xchg
dec
push
ret
add
mov
ret
test
mov
push
jbe
pop
push
and
push
fidivr
mov
sahf
test
mov
dec
and
hlt
cmp
test
neg
jmp
int3
mov
es
lock
outs
(bad)
sti
push
pop
mov
pop
or
jne
or
jge
pop
inc
sbb
add
repnz
retf
repnz
retf
imul
ret
sbb
test
jne
bound
in
mov
dec
pushf
push
test
je
mov
push
cld
(bad)
mov
push
add
ret
in
jg
pop
xlat
add
adc
add
aaa
adc
add
xchg
push
aad
leave
loope
pop
lods
jmp
push
ds
push
push
or
loop
mov
(bad)
mov
cmp
jae
and
inc
pop
add
repnz
mov
pop
or
cmps
mov
cmp
push
xlat
fwait
arpl
aam
jl
mov
lea
xor
js
push
push
call
cmc
or
sub
dec
les
jb
inc
cmp
and
pop
add
fadd
jnp
fs
add
push
push
jmp
popa
test
std
add
cmps
inc
pop
cmp
jb
xor
add
fs
(bad)
aaa
add
cmp
push
mov
cmp
and
and
mov
data16
sbb
sbb
add
test
add
xchg
jb
mov
call
ret
inc
jg
mov
xchg
mov
mov
and
ret
or
inc
adc
rol
xchg
lock
pop
pop
mov
or
sub
fs
aas
jnp
mov
jne
mov
xchg
adc
inc
adc
adc
ja
jmp
push
(bad)
out
test
push
aad
jo
mov
sbb
jne
xor
or
(bad)
mov
add
or
mov
sub
stc
or
jae
xor
pop
nop
or
cmp
add
push
loopne
jmp
push
or
sbb
inc
fcom
sbb
pusha
add
adc
je
inc
js
fcom
push
xor
es
pop
cmp
inc
inc
or
pop
pop
lock
inc
add
ret
push
loopne
push
adc
adc
add
mov
loopne
sbb
and
pusha
addr16
lock
jg
enter
(bad)
adc
add
mov
inc
dec
cmp
je
in
jge
fisttp
sbb
imul
inc
mov
and
in
shr
or
sbb
mov
jo
push
mov
lock
add
inc
inc
add
cwde
leave
mov
dec
clc
push
inc
fisub
int3
call
jno
loopne
mov
cmps
sub
mov
fs
dec
jnp
mov
jns
cmp
sub
jae
retf
in
add
jmp
(bad)
in
int
(bad)
mov
inc
mov
movsx
inc
push
sub
not
test
in
xor
pop
jne
mov
in
aaa
cmp
fmul
scas
sbb
fdiv
int
ret
pop
test
hlt
or
push
or
add
inc
push
push
add
push
adc
adc
and
dec
in
inc
and
adc
outs
pop
pop
xor
push
or
mov
stos
or
test
xor
jne
pop
cmp
inc
and
mov
pusha
leave
and
sbb
cs
add
xor
mov
addr16
or
sub
push
push
sub
pop
push
mov
pop
adc
fisttp
test
nop
sahf
hlt
xchg
jmp
cmp
mov
sar
shl
adc
mov
(bad)
(bad)
call
jae
jno
lods
(bad)
jmp
add
cmp
and
or
xchg
sub
inc
mov
retf
lea
jp
das
cmp
imul
js
or
jmp
adc
rcl
or
loope
js
enter
push
push
sbb
fcomi
mov
mov
lahf
gs
jbe
(bad)
and
outs
into
dec
data16
test
fcomp
les
shl
jne
js
mov
sub
add
and
cs
add
stos
test
push
xchg
and
ins
adc
sub
fild
jns
aam
jmp
mov
jecxz
and
sub
out
push
push
push
jns
ins
xor
ins
jnp
add
not
loop
sbb
add
ret
add
and
or
pop
in
leave
sub
jmp
pushf
dec
pop
sbb
xor
scas
and
in
mov
push
push
aas
sub
mov
pop
inc
inc
mov
pop
and
cmp
inc
pop
icebp
mov
cmp
fild
dec
fdiv
jle
inc
dec
pop
jbe
mov
pop
ins
shr
push
push
adc
mov
hlt
je
push
inc
cmp
push
bound
push
mov
mov
inc
mov
and
xor
xor
cld
or
mov
add
adc
sbb
jne
inc
lea
fdiv
pop
sub
stos
mov
jae
rol
mov
mov
(bad)
cli
in
aas
es
cmp
jg
test
mov
pop
mov
mov
test
adc
lods
cmp
xchg
mov
cs
push
or
loop
div
out
inc
or
adc
cmp
pop
or
test
(bad)
jmp
mov
or
cli
jae
lds
and
jmp
test
call
inc
push
inc
mov
or
stos
inc
mov
mov
push
adc
daa
push
mul
cwde
add
sbb
xlat
rcl
lock
xor
scas
xchg
popa
sbb
movs
jmp
lock
jbe
add
pop
jne
push
sbb
sbb
add
out
je
add
jo
adc
adc
(bad)
sahf
enter
push
jnp
push
sub
push
pop
ret
jno
adc
push
ror
jmp
outs
(bad)
aad
loopne
pushf
jae
push
lods
cmp
add
fcomp
pop
stos
aam
add
xchg
es
pop
rol
jmp
push
push
das
xchg
jmp
loope
inc
sti
in
clc
cmp
stc
pushf
mov
add
xchg
push
call
adc
shl
or
rcr
push
pop
jbe
lock
cmp
je
push
je
or
ss
and
adc
and
cld
or
call
jle
and
daa
xchg
add
ins
add
in
push
xor
sub
push
xor
mov
add
add
mov
fst
sub
and
mov
add
les
jbe
mov
mov
lea
call
repnz
or
push
add
(bad)
pop
aas
push
loop
out
ins
add
sub
push
push
mov
leave
push
outs
icebp
push
dec
ss
jmp
(bad)
add
push
inc
push
and
adc
push
adc
pop
mov
pop
adc
hlt
dec
movs
mov
push
aaa
gs
pop
test
sub
pusha
lea
mov
inc
inc
callw
sub
clc
inc
push
(bad)
(bad)
in
lds
cmc
xchg
lea
or
xor
ret
in
adc
push
fs
cmp
pop
pop
leave
(bad)
sub
mov
mov
jecxz
push
dec
and
call
mov
mov
push
ins
test
rol
outs
cmp
and
scas
jae
mov
cdq
push
pusha
and
stc
mov
xlat
or
mov
sbb
add
neg
sbb
not
and
or
stos
or
dec
or
or
mov
shl
fdiv
pop
mov
popf
push
or
ret
mov
sub
or
jae
imul
mov
pop
sbb
inc
adc
adc
adc
inc
pop
adc
sbb
jl
and
add
adc
mov
gs
inc
mov
dec
adc
pop
mov
mov
stc
jmp
loop
sub
lock
adc
xchg
jbe
bound
int3
pop
daa
push
ret
cmp
fadd
push
daa
xor
mov
test
mov
mov
mov
and
pop
push
pop
inc
hlt
push
or
xor
push
or
add
mov
xor
mov
push
(bad)
xor
jns
leave
dec
jmp
cmp
ds
lds
aad
pop
pop
xor
jmp
mov
or
add
enter
add
rol
mov
lea
inc
ret
ins
adc
mov
sbb
mov
aas
and
xor
mov
mov
xchg
in
push
push
push
push
sar
lock
jne
lea
or
movs
mov
mov
inc
or
sbb
jbe
push
xor
mov
add
mov
jae
pop
(bad)
ds
dec
lea
das
xor
push
or
je
sbb
inc
(bad)
ds
or
sbb
fcom
pop
mov
pop
adc
xchg
fisub
pop
xor
rcl
adc
xchg
out
dec
and
les
je
nop
pop
(bad)
arpl
jecxz
in
inc
jo
push
push
pop
cmp
pop
adc
sbb
lea
stos
adc
push
xor
sbb
(bad)
or
pop
pop
lock
push
dec
sbb
(bad)
adc
dec
fmul
cmp
or
shr
or
out
cmps
ss
mov
adc
in
mov
int3
cli
add
jmp
es
shr
xor
xchg
xchg
add
push
movs
and
push
nop
sub
or
inc
hlt
or
xchg
inc
clc
neg
add
adc
xchg
xchg
mov
call
push
pop
ficom
sub
push
push
inc
je
inc
shl
in
xchg
and
loopne
jmp
adc
repz
int3
mov
sbb
in
int3
in
ins
add
jmp
adc
retf
xor
pop
call
push
lock
and
or
sbb
ja
xor
push
test
stc
mov
jns
inc
push
push
sbb
fnstcw
inc
cld
mov
push
scas
add
loopne
fucomip
aad
pop
adc
icebp
shl
jne
fs
in
add
movs
cmp
hlt
ins
test
aad
arpl
sbb
fs
adc
(bad)
mov
mov
bound
sub
sbb
adc
sub
bound
pop
(bad)
and
pop
and
out
dec
lock
or
ins
adc
xor
test
mov
mov
push
cmp
and
dec
and
xor
xor
push
xor
inc
dec
std
and
pusha
loop
or
inc
shl
add
stos
xor
pop
add
or
push
call
adc
fimul
mov
mov
or
(bad)
sub
or
loop
pop
sbb
pop
daa
jbe
outs
enter
jne
xor
pop
ret
jb
and
in
adc
nop
mov
add
lea
mov
sbb
sub
xor
shr
hlt
mov
push
sub
mov
inc
sub
and
xor
test
xor
or
sbb
inc
nop
pusha
imul
mov
sar
aaa
sub
add
in
aad
inc
pusha
test
addr16
jnp
outs
sub
mov
(bad)
or
fmul
jmp
test
test
add
loope
mov
jae
sbb
repnz
loope
daa
push
sub
push
pop
jecxz
in
pop
or
setge
jae
cmp
leave
push
imul
or
jmp
add
jle
add
add
test
sub
pusha
dec
in
std
jne
xchg
jmp
jnp
sbb
add
jmp
jge
sti
sbb
jmp
mov
cmps
pop
cli
inc
sbb
sti
or
or
adc
(bad)
cmp
sbb
xor
xchg
and
or
jle
lea
les
(bad)
sbb
cmp
inc
fadd
aaa
inc
movs
push
adc
idiv
xor
adc
lods
adc
mov
clc
push
push
xchg
jge
pop
aad
sub
movzx
js
or
sub
shl
pop
sub
mov
mov
mov
or
push
lock
adc
mov
stc
push
mov
adc
and
clc
sub
adc
shl
jo
shl
inc
gs
adc
adc
test
and
dec
jl
leave
cmp
xor
push
inc
sbb
lods
add
lds
mov
pop
inc
sub
jnp
mov
(bad)
aad
dec
or
jp
scas
(bad)
push
ds
pop
add
xor
dec
in
jl
test
push
mov
push
enter
pop
sbb
adc
fadd
inc
add
clc
push
and
push
push
cwde
adc
int3
and
mov
push
sbb
retf
push
imul
rol
push
call
xchg
or
stos
add
or
push
xor
mov
(bad)
clc
mov
(bad)
push
fiadd
nop
push
push
fs
(bad)
mov
jg
jmp
mov
sbb
in
in
arpl
push
adc
adc
cmp
jb
rcr
mov
jl
push
inc
inc
sar
mov
jmp
fisttp
lock
push
sahf
cmp
je
inc
sbb
jae
xor
add
push
mov
xor
push
pop
push
cmp
mov
mov
xchg
or
ret
pop
loopne
(bad)
mov
inc
ss
aad
cld
rcr
lea
push
xor
inc
cli
or
call
jg
(bad)
inc
pop
add
clc
jmp
jns
inc
hlt
inc
add
pop
imul
js
and
pop
sub
pop
imul
adc
or
jo
outs
adc
retf
xor
sbb
repz
stos
je
sbb
popa
aas
pop
mov
cmp
xchg
jmp
mov
add
adc
jle
xchg
daa
cmp
in
push
add
cwde
push
add
or
mov
push
jmp
sub
jmp
jl
inc
and
pop
fdiv
mov
xchg
jle
sbb
or
pop
loopne
ja
lea
mov
test
add
jmp
mov
movs
push
add
and
push
dec
cdq
call
push
mov
push
sub
jecxz
jbe
cmp
inc
jae
and
push
pusha
push
jne
or
dec
pop
shr
arpl
mov
inc
je
fnstsw
jp
dec
mov
cmp
add
mov
imul
out
pop
cld
scas
fcmovbe
fidivr
xor
fucompp
lahf
jo
mov
pushf
pop
pop
pop
ins
mov
aas
mov
push
and
cmp
pop
add
or
popa
push
aad
iret
xchg
and
pop
ret
imul
neg
dec
pop
jbe
pop
in
mov
push
jne
dec
mov
mov
add
jmp
fwait
jbe
(bad)
aam
out
in
add
xor
lea
push
add
inc
sbb
pop
les
ins
push
movs
mov
or
dec
pop
bound
or
loope
mov
cmp
xor
shr
dec
mov
xor
jmp
add
scas
mov
inc
imul
xchg
add
pushaw
push
(bad)
in
xor
inc
and
add
cli
scas
xor
add
or
shl
mov
adc
and
scas
xchg
adc
sti
inc
push
inc
mov
gs
ds
(bad)
or
inc
xlat
dec
mov
push
push
mov
or
fs
ret
push
push
sbb
dec
xor
in
mov
add
les
sbb
in
inc
mov
jg
inc
xchg
push
push
lds
pop
or
sbb
adc
add
ss
push
sbb
mov
pop
lds
sbb
je
push
dec
lods
clc
inc
gs
pop
pop
pop
and
xor
adc
adc
pop
jb
sbb
outs
add
add
sbb
sbb
(bad)
jmp
(bad)
aaa
push
push
sbb
pop
pop
aad
xor
inc
mov
pop
ins
or
nop
fs
push
adc
fiadd
inc
rcr
and
sbb
adc
daa
mov
in
push
in
cwde
stos
and
in
mov
push
mov
(bad)
pop
cmp
xchg
ror
push
push
push
dec
xchg
inc
mov
loope
add
inc
xchg
adc
mov
mov
push
inc
mov
mov
add
ins
pop
fcomp
inc
mov
out
retf
call
xchg
jg
int3
add
aas
cli
dec
dec
clc
out
push
dec
shl
sar
jmp
cwde
adc
jne
retf
jge
adc
jle
cmp
inc
and
dec
xor
sub
test
xor
in
outs
mov
push
xor
xor
cld
loope
mov
add
add
jmp
adc
or
call
or
mov
dec
adc
jg
xor
jb
(bad)
pop
leave
outs
cmc
or
pushf
lahf
loope
and
pop
hlt
leave
test
imul
push
add
icebp
stc
jb
push
push
cmc
pusha
nop
dec
in
and
pop
xchg
outs
adc
pop
push
cld
push
add
stc
or
inc
test
leave
jg
stc
popa
push
dec
pop
adc
push
push
movs
dec
lods
stc
pop
push
and
or
jbe
lock
inc
adc
push
add
push
xor
mov
jl
dec
sbb
retf
(bad)
adc
sbb
in
cmp
mov
cdq
clc
scas
mov
push
cmp
je
push
sbb
retf
jmp
inc
jne
push
popa
sbb
dec
cdq
test
or
pmullw
cmp
sbb
inc
xchg
nop
fidivr
push
xor
adc
mov
jg
js
iret
sub
mov
add
mov
imul
cmp
and
shr
jbe
add
or
repnz
mov
pop
dec
pop
ins
push
iret
sahf
dec
or
mov
xchg
and
cld
or
push
push
pop
dec
jno
ret
and
dec
fldcw
or
and
inc
rcl
adc
push
push
pop
push
imul
repz
je
xor
fld
daa
jae
push
push
pushf
xchg
inc
and
jecxz
cli
or
add
jle
push
or
cmp
jmp
inc
dec
push
arpl
cwde
pop
or
shl
adc
push
inc
inc
imul
call
inc
cli
mov
add
add
sub
call
or
cmp
ja
cmp
jbe
cmp
(bad)
mov
adc
mov
mov
(bad)
mov
ret
add
push
icebp
mov
ins
add
jmp
mov
or
inc
adc
mov
test
loopne
clc
sbb
xor
test
cmp
push
les
adc
cwde
adc
(bad)
jmp
repz
aas
je
mov
mov
and
mov
push
pop
or
mov
mov
fcom
pop
scas
mov
fstp
sbb
test
add
mov
mov
adc
pop
fs
ins
test
arpl
leave
sub
adc
cmp
clc
push
mov
pop
or
pop
xor
lods
mov
sbb
ret
jmp
adc
push
mov
xor
lods
inc
sub
repz
pop
jo
push
adc
lea
data16
sub
cwde
rol
sbb
test
je
ror
cmp
xchg
sbb
push
adc
jge
or
xor
lock
or
or
xchg
xchg
pop
in
pop
sar
push
push
mov
push
je
dec
stos
mov
xor
mov
cmp
jae
retf
sbb
jae
loopne
cwde
cmps
das
mov
ret
mov
in
pop
inc
dec
pop
cmp
push
mov
mov
dec
mov
push
sbb
mov
inc
mov
jne
ret
or
dec
mov
sub
add
shr
cmp
das
push
and
ds
fdivp
inc
fdivr
cmp
jae
xor
icebp
or
enter
pop
lea
rol
xor
jne
add
(bad)
popf
jp
mov
push
push
(bad)
push
dec
cld
scas
push
xchg
add
xor
scas
(bad)
ja
inc
out
inc
out
cld
mov
add
mov
xor
adc
fnstsw
cdq
jne
or
jnp
popa
shr
add
ret
cmp
mov
fist
sub
add
mov
add
mov
imul
and
outs
sti
pop
or
cmp
pop
inc
inc
outs
shl
inc
push
xchg
mov
or
inc
push
ret
pop
sbb
inc
or
cli
and
gs
xchg
jmp
clc
cmp
sar
mov
pop
pop
dec
out
jne
sbb
add
ror
call
push
cmp
cs
outs
mov
bound
inc
push
push
push
lea
sub
ror
outs
inc
loop
test
ss
push
push
test
sub
(bad)
mul
scas
pop
inc
push
dec
add
add
cmp
xor
jne
pop
sbb
add
dec
rol
and
lea
or
fdivr
push
mov
push
mov
mov
loopne
loope
leave
test
ret
dec
ins
sbb
push
inc
sub
ret
cmp
js
pushf
ret
aaa
(bad)
popa
dec
push
inc
pop
inc
fcom
dec
xor
add
movs
(bad)
and
add
pop
repnz
pop
call
add
add
pop
pop
(bad)
call
movs
out
pop
pop
jecxz
das
sub
push
pop
or
push
bnd
and
cmp
aaa
ss
hlt
(bad)
test
hlt
aaa
adc
add
(bad)
clc
xchg
inc
hlt
lea
test
or
hlt
inc
lea
mov
(bad)
std
adc
lea
pop
jb
sub
loopne
and
push
mov
jne
ja
or
js
add
cmp
jge
shr
mov
fidivr
jg
sbb
shr
ficom
add
mov
cmp
mov
(bad)
xchg
jnp
das
sar
jle
mov
mov
fld
call
jle
sar
sub
repnz
xchg
push
push
push
fcom
push
cmp
xor
into
or
sbb
pushf
add
mov
leave
add
call
into
sub
cmps
mov
pop
pop
and
or
add
cwde
inc
mov
jb
(bad)
fisub
cmp
add
je
inc
adc
inc
and
mov
pusha
or
and
test
imul
rol
inc
add
lods
mov
mov
adc
and
jno
xor
data16
jo
xchg
or
or
xor
dec
and
cmp
cmc
aad
mov
push
jae
add
jne
pop
scas
fst
lods
push
lods
jp
push
loopne
push
daa
test
add
std
loope
inc
aad
sub
jl
cdq
ret
adc
cmp
xor
loopne
dec
jb
int
or
jae
cmp
jns
push
ins
pop
dec
ins
inc
cmp
fmul
(bad)
fisttp
cmp
sahf
ror
mov
mov
or
ret
clc
mov
adc
add
add
mov
add
push
and
add
xchg
fwait
jecxz
dec
gs
pop
or
lods
pop
jl
movs
int
sub
stos
iret
mov
test
scas
pop
add
mov
add
pop
in
inc
ja
mov
pop
inc
cmp
cwde
pop
nop
xor
sub
pop
ins
dec
or
push
push
sub
js
fmul
cmp
pop
push
frstor
(bad)
aas
sbb
mov
pop
push
push
out
mov
pop
out
bound
or
sub
arpl
les
nop
xchg
sub
or
inc
cwde
sbb
leave
fmulp
rcl
jne
cs
mov
push
pop
fs
push
js
or
sub
arpl
rdpmc
mov
in
adc
pop
arpl
sbb
jnp
sti
jle
adc
mov
or
xchg
mov
jmp
repz
stc
rol
pop
inc
push
lods
loopne
pop
jle
pop
cmps
pop
push
push
xor
outs
and
je
test
xchg
push
push
out
pop
push
call
sbb
cmp
add
xor
clc
jo
xor
or
sub
push
sti
mov
pop
leave
movs
pop
pusha
lods
push
pushf
(bad)
push
push
xor
jo
pop
sbb
or
adc
add
jle
push
pop
shl
mov
add
arpl
lds
inc
adc
bound
cmp
test
mov
fstp
aas
in
retf
adc
adc
pop
fsubr
cmp
test
enter
pop
adc
push
ret
sub
popa
scas
dec
add
js
mov
call
ret
push
inc
mov
test
mov
cmp
je
push
xor
es
rcr
int
cli
(bad)
in
add
enter
xchg
arpl
sbb
fistp
dec
jp
sub
xor
cs
add
fdiv
cmp
imul
sub
ss
(bad)
xchg
and
dec
add
sbb
or
in
sbb
jae
pusha
or
sbb
loope
rcl
sbb
mov
cmp
inc
in
outs
sbb
aam
pop
pusha
push
push
(bad)
sub
adc
xchg
push
pop
out
rol
mov
pop
jmp
add
mov
add
push
mov
push
(bad)
fisttp
pop
cmp
out
mov
sti
adc
cwde
mov
daa
bound
arpl
add
pop
ja
add
mov
inc
nop
add
jno
mov
gs
mov
add
and
xchg
jl
xor
xchg
iret
test
or
rcr
dec
mov
add
loopne
mov
dec
or
xchg
and
enter
cmp
(bad)
mov
cmp
or
push
movs
fsubr
lods
test
std
push
in
pop
mov
mov
sbb
sbb
pop
sbb
and
imul
int3
push
shr
out
inc
enter
rol
call
mov
add
js
fcomp
push
adc
inc
adc
inc
and
fwait
and
adc
lahf
mov
(bad)
cmp
mov
pop
ret
pop
mov
push
(bad)
fisttp
fadd
pop
fbstp
(bad)
in
sti
inc
push
or
jne
pushf
mov
inc
pop
into
adc
xor
push
pop
scas
mov
(bad)
sub
dec
mov
mov
shl
add
mov
sbb
es
xor
ror
mov
jne
or
dec
and
add
lods
mov
lds
ret
call
jno
mov
xchg
jecxz
jp
addr16
in
dec
test
int3
ror
push
mov
xor
lods
or
xor
inc
daa
cmp
sbb
out
sbb
push
fbld
and
inc
xor
ret
pusha
jl
jge
shl
test
sbb
test
outs
fadd
jbe
(bad)
(bad)
pop
jb
mov
cmp
bound
mov
test
sbb
popf
add
sub
jo
out
push
push
loope
or
mov
movs
and
enter
dec
add
arpl
mov
ffree
xor
pushf
jo
jecxz
cmp
jp
cmp
xchg
add
(bad)
xchg
jbe
jb
cmc
fs
jo
jle
sub
sbb
mov
push
mov
loopne
jb
shl
or
mov
add
pop
jae
cmp
mov
xor
test
mov
in
or
repz
push
lock
xchg
mov
and
and
push
pop
pop
pop
das
sar
mov
leave
nop
mov
fcom
cmps
out
or
cmp
jnp
loope
mov
push
mov
dec
int
jns
mov
cmps
and
imul
test
push
push
push
cdq
sbb
add
pusha
adc
cli
push
lods
call
add
add
int3
lock
and
sbb
cwde
cmp
xor
xchg
in
push
sbb
popf
shl
add
test
jae
cmp
adc
mov
adc
or
inc
push
pop
mov
add
and
dec
adc
push
sbb
popa
push
add
(bad)
test
jne
sub
inc
xchg
push
xor
xlat
jp
add
pop
inc
dec
add
add
ins
xchg
test
rcr
mov
and
(bad)
mov
cmps
add
pop
push
adc
(bad)
mov
jnp
xor
rol
mov
push
(bad)
(bad)
(bad)
ja
sar
sub
pop
test
je
aam
and
jle
add
jae
and
(bad)
sub
fld
and
mov
lods
mov
dec
add
cmp
nop
sub
add
sub
or
or
repnz
add
movs
pusha
ret
pop
pop
mov
aas
add
xchg
dec
pop
movs
inc
lods
cmp
inc
in
addr16
cwde
pop
shr
jecxz
cld
aas
add
mov
sbb
adc
mov
outs
ret
loop
sub
dec
aad
ret
outs
mov
mul
pop
mov
mov
sar
mov
test
inc
xor
cmp
jle
cmp
jle
nop
fmul
test
pop
call
repz
lods
xor
clc
loopne
pop
or
inc
in
sbb
int
or
jns
ja
and
je
js
sub
popf
mov
mov
ds
fwait
dec
ins
inc
xor
(bad)
add
in
jne
jg
xor
call
and
imul
fcomp
retf
mov
pop
dec
adc
sub
ret
and
(bad)
jb
ret
add
sub
xchg
xchg
xchg
mov
cmps
mov
mov
xchg
and
rcl
outs
or
test
ret
test
xchg
mov
dec
dec
dec
nop
or
dec
xor
loopne
call
sar
(bad)
push
fdivr
cmp
mov
rol
jb
outs
jbe
jl
in
or
or
mov
mov
inc
in
lods
sbb
jae
jmp
or
pop
aaa
inc
mov
call
mov
xor
ins
sub
push
sbb
ja
pop
or
cmp
pop
sbb
jb
pop
call
nop
push
and
int
xor
out
je
push
int
ss
fild
loopne
inc
inc
ficomp
inc
xor
cmp
push
xor
test
lock
push
adc
and
lea
rcr
add
aas
sbb
ins
adc
inc
xchg
or
push
push
cmc
(bad)
clc
in
mov
push
sar
and
pop
or
div
shr
or
into
mov
inc
movs
mov
cli
outs
enter
push
cmp
jne
aaa
sbb
sbb
cmp
rol
aaa
hlt
call
xor
mov
outs
cld
push
push
push
mov
movs
pop
ret
cwde
add
leave
ret
bound
xchg
push
xor
and
add
jp
fstp
pop
xor
bound
adc
push
lods
adc
cdq
movs
xor
adc
xchg
out
jae
gs
(bad)
push
pop
inc
mov
ins
adc
clc
in
shl
push
and
or
ret
xor
adc
or
clc
add
ret
mov
cdq
or
sbb
addr16
stc
cmps
push
pop
cmp
hlt
jle
push
js
or
xlat
push
adc
and
sbb
add
pop
pop
mov
leave
add
(bad)
enter
je
mov
daa
add
lahf
fist
or
jge
mov
pop
or
jmp
or
pop
dec
sbb
sbb
inc
push
ror
and
(bad)
mov
imul
retf
jns
mov
call
xchg
daa
in
push
movs
jg
nop
xchg
pop
jne
stos
sbb
push
xor
push
sub
or
and
nop
xlat
imul
add
cmp
pop
and
rol
in
fxch
dec
loope
loop
push
push
dec
(bad)
xor
or
in
sbb
push
lods
ins
rol
inc
adc
adc
sub
daa
adc
dec
and
and
dec
or
inc
and
push
pop
pop
adc
dec
cmp
loop
add
cld
pusha
jcxz
ror
dec
out
imul
and
fdecstp
mov
cmp
je
inc
xor
mov
adc
cmp
xlat
or
inc
dec
(bad)
mov
or
scas
sub
mov
sar
js
in
xor
ret
pop
popf
cld
fisttp
enter
mov
inc
data16
pop
(bad)
mov
ss
hlt
xchg
cdq
mov
push
and
test
mov
sbb
push
daa
xor
jbe
pop
pop
cmp
hlt
inc
or
lea
clc
ins
cli
pop
js
into
je
mov
push
int3
push
push
inc
add
add
jnp
mov
or
iret
xchg
pop
inc
(bad)
(bad)
push
xor
jns
or
sub
and
or
les
iret
push
and
add
pop
ja
pop
cmps
smsw
(bad)
leave
or
jecxz
leave
call
movs
or
push
add
mov
mov
or
mov
add
jbe
mov
test
sub
mov
add
clc
cmps
sbb
push
fimul
or
or
into
(bad)
aas
enter
clc
jecxz
mov
jl
das
jno
lock
les
sbb
cmp
das
push
cmps
sbb
loopne
dec
in
push
test
mov
or
adc
add
lods
xor
or
pop
das
into
loopne
fiadd
jnp
mov
pop
xchg
xchg
repnz
data16
aam
sbb
(bad)
into
call
dec
or
fdivr
lods
in
movs
dec
pop
jo
push
dec
popf
mov
jmp
mov
pushf
xor
mov
inc
loopne
mov
inc
adc
sbb
adc
xchg
fs
jmp
pop
lods
ret
push
push
push
push
jl
scas
or
mov
adc
and
add
imul
rcl
cmp
mov
ins
push
sub
std
and
cmp
cmp
dec
pop
in
inc
in
mov
adc
loopne
test
sbb
adc
das
sub
pop
rol
test
mov
sbb
adc
scas
pusha
neg
ja
out
call
sub
cmp
sbb
sub
arpl
shr
xor
int
or
xchg
(bad)
or
stc
lock
shl
add
sub
dec
repnz
cmps
cmp
pop
cli
lock
fadd
jg
inc
test
jne
cmps
gs
xchg
cmp
cmp
ds
pop
addr16
loopne
test
dec
out
push
xor
xchg
in
mov
add
(bad)
pop
xor
adc
lock
dec
and
push
add
mov
push
add
xchg
pop
mov
in
add
or
test
jg
push
pop
out
imul
dec
add
pop
or
test
jle
loopne
pusha
cs
add
and
or
fdiv
(bad)
repz
push
pop
jl
or
or
aam
lea
js
es
or
sbb
mov
inc
inc
cmps
sahf
add
jge
cmp
cmp
mov
pop
loopne
push
cmp
jbe
iret
aam
or
adc
adc
popf
or
lock
inc
or
iret
add
sti
pusha
or
inc
pop
iret
inc
fwait
mov
shl
adc
adc
js
movs
ror
sub
rcl
and
loopne
add
mov
sbb
adc
push
jo
loopne
lahf
and
shl
add
adc
out
rcl
add
enter
adc
adc
leave
adc
add
xchg
das
ret
dec
push
dec
adc
stos
pop
movs
push
cwde
in
xor
push
xor
push
mov
(bad)
fnstsw
mov
push
and
jle
jle
or
adc
in
add
pusha
push
shr
inc
cmp
jle
imul
mov
adc
adc
int3
or
fiadd
adc
jecxz
inc
add
pop
pop
xchg
popa
sbb
adc
sub
xor
loopne
mov
test
mov
add
mov
leave
in
cld
push
nop
pop
dec
dec
nop
xor
xchg
pop
push
dec
sbb
movs
xchg
sbb
in
(bad)
aad
les
inc
in
dec
movs
dec
pop
test
xchg
pusha
cmp
in
aaa
sub
ja
retf
push
or
jmp
dec
cs
push
enter
cs
mov
push
leave
in
inc
ds
iret
mov
imul
test
cmp
out
push
(bad)
xchg
inc
addr16
repnz
push
sub
adc
or
stos
test
test
add
adc
arpl
xchg
jo
add
and
fwait
or
(bad)
fbld
std
and
add
test
lock
pop
ret
push
mov
bound
sar
retf
dec
mov
xor
pop
test
mov
pop
ret
mov
mov
mov
push
or
or
mov
add
add
or
add
shl
push
psubusb
(bad)
ret
mov
(bad)
outs
sbb
rol
mov
mov
mov
inc
call
xor
mov
xor
xor
xor
sub
jbe
jl
jg
and
mov
xor
cmp
inc
inc
and
xchg
cmp
inc
int
push
call
outs
ret
(bad)
sahf
(bad)
clc
push
std
cs
mov
jbe
dec
add
add
add
jne
sbb
ret
inc
sbb
(bad)
cmps
lock
add
and
es
in
movs
cmp
inc
sbb
add
sbb
into
pop
pop
imul
add
or
push
jno
push
or
push
pop
push
cld
bound
or
xor
dec
add
inc
fisub
out
dec
jne
js
adc
or
adc
adc
dec
jo
test
ds
adc
xor
nop
lea
push
test
mov
pop
pop
dec
loopne
imul
jmp
pop
rol
dec
mov
enter
adc
adc
rol
cmp
retf
mov
(bad)
jg
add
jne
mov
mov
and
neg
sbb
or
shr
xor
mov
push
cmp
xor
mov
sahf
dec
sbb
sbb
call
push
lea
push
mov
sub
sub
(bad)
sub
adc
ror
inc
fistp
and
dec
dec
or
lock
cmp
xor
jo
sbb
sub
mov
inc
adc
leave
jl
adc
and
retf
out
test
or
jle
je
lea
jbe
xchg
mov
sub
mov
sbb
push
gs
aam
add
sub
ret
and
cmps
pop
mov
or
inc
ficom
test
mov
push
mov
jmp
test
cmp
jl
mov
or
mov
sub
imul
inc
xor
and
push
jle
add
jl
sub
dec
add
pushf
inc
mov
(bad)
fisub
inc
jo
cmp
(bad)
lea
jne
cmp
jle
inc
mov
or
pop
add
lea
add
cmp
jl
xor
mov
mov
sub
push
fild
and
cdq
push
clc
sar
cmp
xchg
mov
sbb
clc
add
push
out
pop
xor
mov
sub
sub
je
in
js
out
pop
inc
jg
in
jmp
pop
jmp
lea
push
scas
xor
sbb
mov
jne
mov
outs
push
push
jmp
and
mov
lock
jno
inc
mov
sub
dec
shl
or
icebp
out
jnp
push
cmp
mov
mov
ror
fdiv
inc
clc
adc
dec
add
sbb
pop
(bad)
cld
pop
add
pop
out
sub
sub
(bad)
jmp
sar
invd
add
inc
jge
jl
push
pop
xchg
dec
loopne
xchg
mov
dec
mov
pop
dec
mov
sub
les
and
jmp
pop
mov
pop
repnz
call
outs
cli
in
shr
sbb
mov
or
add
and
mov
jae
xor
imul
dec
int3
or
xor
cli
dec
outs
popa
retf
xor
cmps
xor
mov
jg
xor
mov
push
or
rol
push
jg
int3
imul
bound
shr
xor
call
call
(bad)
stos
pop
fwait
shr
jno
xor
xchg
mov
sub
loopne
add
shr
aaa
sbb
mov
das
mov
xor
lea
hlt
mov
sub
mov
pop
lea
dec
fbld
rep
mov
retf
adc
dec
mov
add
push
jl
add
xor
push
not
or
xor
inc
add
test
fcmovnbe
int3
les
xchg
ins
sbb
push
push
int3
cs
pushf
xor
(bad)
mov
xor
mov
xchg
mov
add
adc
ret
fidiv
cmp
fdiv
cmp
cld
xor
mov
xchg
sub
cmp
mov
enter
enter
jnp
repnz
xor
xor
mov
xor
pop
jnp
cmp
jnp
das
mov
test
test
mov
adc
adc
call
mov
pop
aaa
retf
scas
test
mov
add
cdq
fs
xchg
add
sbb
arpl
dec
cmp
push
add
test
sub
xchg
cwde
pushf
xor
xor
dec
push
and
xchg
test
sbb
xor
mov
mov
pop
scas
mov
sub
(bad)
enter
add
(bad)
xor
and
xchg
dec
jb
rcl
fcomp
and
xchg
sbb
loopne
in
mov
cwde
in
pop
gs
add
or
lock
mov
daa
hlt
mov
inc
cmps
outs
call
jge
aam
fndisi(8087
cmp
add
jb
bound
mov
pop
cli
xchg
aas
cmps
pop
loop
push
cmp
mov
shr
or
inc
call
les
adc
scas
loopne
or
push
or
or
ficom
pop
sbb
pop
sbb
rcr
mov
ror
shr
icebp
or
ins
xor
cli
ror
call
out
add
dec
shl
xchg
add
xor
pop
sar
enter
popf
lds
es
cmp
mov
xchg
cmp
movs
inc
jle
je
movs
jae
loope
and
jmp
mov
xor
cld
out
and
pop
or
xor
and
in
sahf
push
jmp
call
call
push
loopne
fs
gs
pop
xchg
clc
sub
les
lock
sbb
xchg
test
cmp
les
mov
xor
xor
dec
add
cmp
enter
and
xor
imul
int3
mov
pop
pop
jo
ret
jnp
cmp
lea
mov
ss
cwde
sbb
jo
cs
sbb
ret
inc
sub
cwde
pop
xor
cmps
and
rol
stc
mov
xchg
lahf
lea
adc
adc
adc
lahf
and
sub
call
popa
popa
jb
lock
and
sub
or
push
or
iret
nop
mov
ins
and
cmp
icebp
xlat
les
push
js
cmp
std
and
dec
(bad)
jne
mov
or
inc
sbb
dec
cs
or
imul
repnz
jnp
add
cmp
or
mov
sub
inc
cmps
sub
shl
call
inc
or
cld
push
push
push
jb
jl
syscall
mov
add
adc
loopne
sub
lea
or
out
lock
add
mov
and
in
mov
pop
xchg
xor
and
cmps
ins
and
sbb
add
dec
mov
sbb
inc
xor
xchg
mov
pop
mov
inc
adc
inc
rol
cwde
mov
mov
xlat
shl
repnz
inc
sbb
leave
popa
adc
jge
movs
add
inc
push
pop
inc
aad
mov
push
xor
pop
or
cs
push
test
movs
inc
jge
push
pop
dec
lds
pop
test
nop
sub
rcl
adc
add
pop
(bad)
mov
push
es
xor
sub
cld
sbb
push
adc
add
aam
dec
add
or
popf
ret
add
test
pop
xor
test
or
test
jb
enter
sub
and
xor
cdq
cmp
xchg
and
dec
cmps
lods
dec
and
cmp
inc
dec
sbb
dec
test
push
sub
leave
jno
pop
test
pop
pusha
push
xor
adc
sbb
stos
inc
test
stos
imul
cmps
or
jle
dec
mov
mov
pop
enter
std
jge
lea
ret
dec
sbb
aas
repz
shl
bound
in
imul
mov
inc
rsqrtps
mov
push
xor
xor
xor
mov
jo
adc
xor
pop
mov
(bad)
out
and
and
je
push
push
pop
sub
pop
dec
cs
xchg
add
push
push
add
(bad)
pop
pop
cmc
add
lods
shr
cmp
and
out
cmp
push
sub
std
cmp
fs
aam
(bad)
jne
xchg
clc
mov
lock
dec
nop
neg
inc
mov
das
out
add
neg
push
add
sbb
loop
or
push
clc
adc
loop
les
mov
inc
mov
iret
jl
mov
loop
lea
cmp
out
jbe
fwait
and
mov
push
cdq
idiv
dec
mov
out
nop
adc
leave
or
cmc
ret
ret
ds
ja
popa
push
push
jle
cmp
jne
cmp
sbb
mov
jge
jl
add
pop
jnp
add
cmc
xchg
(bad)
push
mov
push
fidivr
sbb
cli
mov
(bad)
imul
sub
not
push
sbb
sub
adc
mov
push
mov
cmp
pop
pop
cs
mov
mov
push
and
int
jge
push
xor
stos
add
jge
mov
lea
shl
add
mov
inc
mov
shl
repz
jb
neg
pop
call
jo
sub
jnp
repz
call
in
mov
dec
add
pop
xor
push
dec
and
push
data16
jae
lea
adc
(bad)
pop
xor
cmp
add
adc
inc
xchg
cmp
push
dec
push
shr
cdq
add
bound
bound
enter
push
sbb
xor
inc
xor
leave
xor
ror
mov
loopne
xor
call
inc
data16
push
push
jo
ror
inc
mov
fist
movs
sbb
inc
adc
dec
jne
sub
adc
sub
xchg
mov
mov
cdq
inc
ins
(bad)
xlat
dec
pop
adc
or
xor
mov
nop
popa
fisttp
jnp
mov
push
xchg
retf
adc
(bad)
movs
adc
inc
add
xchg
shl
push
xor
in
sub
movs
test
push
aaa
sbb
ss
add
and
dec
cmps
mov
mov
mov
daa
sbb
sub
rcl
jb
shr
enter
add
imul
shl
adc
in
mov
add
scas
jo
sbb
dec
sbb
loopne
in
sub
in
fisttp
mov
clc
mov
add
sub
inc
or
or
adc
mov
xchg
aaa
xchg
(bad)
aas
adc
aaa
and
jge
sub
dec
cmp
add
push
dec
mov
inc
(bad)
and
int
cbw
test
rol
or
lea
je
out
xchg
push
sub
and
popf
jnp
or
adc
aaa
js
or
mov
lods
sbb
cld
xchg
xor
test
daa
ret
xchg
ret
adc
or
mov
aas
das
mov
lods
pop
test
or
rol
sar
(bad)
sar
or
jmp
inc
jb
xor
inc
(bad)
clc
pop
inc
cmp
add
xchg
sbb
cmp
adc
cmp
hlt
adc
loop
out
xor
dec
mov
ret
push
imul
mov
ret
enter
imul
mov
mov
lea
scas
xor
lods
or
enter
inc
xor
mov
cmp
or
or
daa
or
or
sub
push
pusha
dec
shl
in
or
test
xor
or
and
in
or
push
rcr
movs
jo
push
sbb
add
js
add
add
int3
mov
mov
jo
dec
sbb
dec
cwde
inc
sub
enter
pusha
sub
hlt
lods
retf
push
inc
sbb
fcomi
or
leave
or
scas
into
imul
out
daa
(bad)
loopne
addr16
loope
adc
in
popa
(bad)
imul
or
xchg
fucomi
in
or
xor
sbb
adc
mov
shr
call
add
push
inc
push
(bad)
ret
sbb
or
fcom
and
adc
nop
movs
dec
inc
icebp
mov
or
mov
jne
pop
ds
push
add
inc
inc
xlat
das
mov
dec
jnp
enter
xchg
fist
or
jge
mov
xor
fcomp
fwait
jle
adc
ret
lock
lock
repnz
into
cmp
sbb
and
shl
das
dec
xor
inc
add
dec
xchg
jbe
mov
(bad)
pop
adc
or
imul
add
mov
pop
jo
and
jnp
mov
pop
retf
rol
stos
mov
inc
ret
scas
pop
scas
sub
xchg
and
mov
pop
xchg
imul
sbb
mov
add
add
loopne
mov
int
adc
lock
sbb
adc
daa
test
sub
(bad)
mov
or
add
or
xchg
lods
mov
sub
cmp
xchg
inc
bound
adc
xchg
pusha
inc
adc
movs
jle
cmps
and
adc
push
add
push
push
jl
mov
adc
pop
imul
mov
add
dec
mov
sub
and
mov
inc
arpl
loope
fmul
push
into
pop
sub
add
arpl
aas
inc
push
mov
fmul
mov
mov
mov
loopne
fist
clc
inc
adc
sbb
dec
jno
dec
mov
js
jo
or
sbb
push
loop
inc
ret
mov
leave
shl
jo
fld
inc
jecxz
cmp
(bad)
cmp
inc
and
lahf
or
inc
or
xchg
inc
gs
add
inc
gs
dec
add
mov
dec
xor
or
add
inc
clc
adc
mov
mov
mov
xor
cmp
xchg
cmc
push
adc
add
mov
shr
mov
and
(bad)
inc
sbb
inc
push
jne
mov
xor
movs
adc
pop
adc
cmp
fwait
lods
ja
lds
and
mov
and
mov
cld
mov
pop
mov
push
adc
lea
adc
adc
jg
das
gs
xchg
mov
adc
xchg
mov
jns
adc
mov
sub
sub
xor
and
dec
pop
enter
movs
add
inc
sub
call
add
jmp
cmp
iret
jbe
push
pop
pop
icebp
arpl
lds
aam
cmp
stc
xlat
jle
fbstp
jb
adc
inc
xor
add
xor
push
pop
add
ja
mov
jb
jl
dec
inc
adc
mov
add
add
cmp
hlt
mov
int
mov
push
add
push
add
push
add
pop
push
push
pop
fs
or
push
data16
push
or
push
or
aas
add
loope
dec
mov
push
pop
mov
and
loope
mov
dec
xor
sub
pop
mov
or
jecxz
bswap
test
movs
adc
enter
sbb
addr16
mov
test
test
jmp
add
or
in
push
sub
(bad)
inc
cwde
inc
sub
xchg
retf
repz
and
xchg
or
es
enter
pop
adc
jno
adc
mov
fwait
les
xchg
adc
retf
pop
jns
retf
adc
add
or
cmp
ror
retf
sbb
sub
mov
add
lock
arpl
imul
or
pop
inc
icebp
jg
mov
sub
mov
jg
(bad)
fmul
push
dec
lar
inc
dec
mov
jle
mov
pop
or
mov
pop
sub
(bad)
inc
iret
cmp
dec
xor
movs
jecxz
xor
sahf
bound
cmp
call
and
mov
fadd
shl
and
add
pop
inc
inc
inc
mov
jmp
mov
test
and
and
into
push
add
arpl
sub
cmp
(bad)
inc
push
stos
sub
mov
lock
(bad)
xor
hlt
imul
sahf
out
inc
inc
inc
inc
sahf
out
sahf
inc
inc
inc
inc
inc
inc
stos
inc
(bad)
jns
es
jl
fcmovnb
shr
iret
cwde
clc
push
dec
mov
pop
aaa
pop
shl
add
add
mov
sbb
inc
add
shr
mov
pop
or
xchg
add
jne
cld
push
inc
pop
dec
pop
in
xor
neg
add
stos
or
sbb
clc
pop
push
mov
repz
sar
cmp
push
push
push
ins
out
and
(bad)
cmp
xor
add
push
add
int3
je
leave
inc
dec
and
add
nop
sbb
push
data16
fisub
mov
push
or
cmp
and
(bad)
push
push
push
pushw
adc
outs
or
add
or
scas
add
and
push
lods
imul
push
jno
adc
and
adc
and
lock
mov
xor
cmp
sete
mov
ds
fcom
(bad)
add
add
and
push
in
mov
add
add
and
dec
sub
dec
xor
add
add
xor
xor
cmp
dec
xor
cmp
inc
out
xor
pop
pop
or
xchg
dec
or
or
push
push
jmp
pop
adc
dec
xor
pusha
adc
and
out
pop
adc
adc
mov
sbb
inc
nop
not
sbb
dec
or
mov
popa
and
bound
imul
cmp
ins
pop
pop
ins
adc
inc
push
push
ja
push
cmps
cmps
loope
pushf
push
push
xlat
push
push
pop
push
push
ret
imul
addr16
push
xchg
shl
dec
push
push
(bad)
push
push
not
push
pushf
mov
push
push
push
push
push
test
push
push
mov
push
out
cmp
push
push
pop
push
push
inc
push
push
rcr
shl
or
add
ret
mov
push
mov
sub
push
or
add
shl
adc
sub
scas
cmp
(bad)
or
add
test
add
hlt
push
push
push
push
dec
movs
adc
mov
dec
(bad)
test
inc
sbb
mov
in
adc
ret
and
mov
inc
sbb
or
enter
inc
mov
and
xor
pop
addr16
mov
sbb
clc
pop
inc
fcom
jo
xor
fisttp
test
sub
push
push
add
push
icebp
(bad)
and
sub
addr16
inc
jecxz
mov
mov
sub
add
jmp
mov
inc
mov
hlt
dec
xchg
mov
das
xor
add
rcr
or
push
stos
inc
icebp
sar
adc
or
ins
into
and
mov
xor
(bad)
inc
sbb
or
inc
pop
xor
cdq
ret
sbb
jl
ss
inc
int3
push
cmp
and
mov
jl
mov
or
cmp
ret
scas
sbb
adc
pop
fs
popa
sbb
dec
dec
pop
sbb
pop
add
scas
pusha
in
or
or
dec
adc
mov
sbb
mov
pop
push
add
pop
jecxz
push
cs
pop
pusha
adc
xchg
add
add
pop
add
and
fisttp
and
fs
aas
retf
fild
jne
jbe
add
cld
mov
not
sub
or
rol
in
push
test
inc
mov
mov
dec
mov
into
push
xor
xchg
add
push
xchg
xchg
mov
jge
mov
inc
sti
or
bound
nop
sti
bound
into
jno
mov
add
add
or
mov
or
lahf
xchg
dec
nop
add
out
adc
or
inc
call
mov
loope
xchg
add
jge
add
iret
stos
ret
jnp
data16
push
pop
and
xchg
dec
xor
sub
xchg
dec
xor
xor
cmp
dec
xor
and
dec
dec
xor
and
push
push
pop
or
xchg
dec
pop
xchg
enter
push
pop
add
leave
sbb
jnp
int
jge
sbb
push
daa
jns
jmp
add
inc
sbb
and
rcr
hlt
add
sub
or
stos
sub
and
sbb
mov
lods
pop
shl
sbb
push
add
mov
cmp
jmp
cdq
mov
cwde
xor
mov
push
push
or
cmp
jae
adc
add
cmp
cmp
mov
lock
xor
add
call
adc
jb
stos
fst
push
cmp
dec
in
stc
lock
fld
add
inc
js
add
loope
add
(bad)
inc
jo
lock
loopne
pop
sbb
xlat
lea
mov
lock
shl
retf
nop
loope
test
cwde
into
xchg
push
fld
aad
cdq
sub
inc
xor
mov
pusha
jne
mov
shl
dec
cmp
jmp
or
inc
xor
outs
out
mov
fisttp
in
push
pusha
pop
test
adc
jg
or
add
jle
xor
add
jg
popa
inc
push
in
jl
add
lods
loopne
cmp
jne
mov
es
add
imul
push
dec
sar
dec
push
pop
pop
add
or
inc
sub
sbb
sub
add
jge
or
test
jge
dec
enter
jge
add
adc
xor
push
jb
inc
add
sbb
sbb
and
jl
jl
mov
jne
mov
mov
stos
and
ins
push
cmps
add
cmp
or
push
call
in
and
in
mov
or
pop
or
mov
pop
pop
es
push
sub
add
test
cld
jg
inc
hlt
dec
push
sar
jg
dec
(bad)
mov
sar
je
ins
add
inc
jg
adc
jns
jo
pop
pop
jecxz
cmps
mov
adc
arpl
shl
sbb
xor
ret
mov
mov
push
add
js
nop
dec
add
inc
pop
cmp
sbb
pop
push
fld
pop
call
add
in
ret
imul
retf
dec
add
leave
enter
call
shr
sub
add
dec
nop
sbb
outs
ins
clc
les
inc
cmp
sbb
push
das
outs
imul
(bad)
mov
pop
pusha
xchg
mov
adc
cmp
or
add
jb
or
sbb
mov
test
ds
jl
mov
cmp
add
ins
je
shr
push
out
(bad)
cmp
enter
neg
sbb
inc
inc
ret
sti
idiv
xchg
(bad)
adc
push
pushf
cs
addr16
cmp
push
or
or
xchg
inc
imul
sub
cmps
fs
jae
test
xchg
or
js
cs
or
cmps
es
lea
push
repnz
sbb
or
lock
dec
and
add
and
xchg
enter
sub
push
jb
dec
pop
cmp
in
inc
popa
push
(bad)
in
paddusw
and
jb
sub
lods
aas
jbe
mov
mov
fwait
in
mov
xadd
sub
test
push
into
adc
mov
push
nop
rdtsc
push
cmp
clc
xchg
lahf
das
pop
push
mov
dec
and
pop
hlt
jne
xchg
dec
push
loope
xchg
in
add
scas
add
gs
inc
out
inc
jmp
push
xor
jns
jmp
jns
mov
cmovnp
sbb
jo
sbb
xchg
cmp
dec
sbb
jge
outs
in
xchg
sbb
sub
sar
ins
shr
cmp
mov
nop
fstp
or
add
or
add
or
nop
test
or
or
test
sbb
dec
push
fmul
pop
sub
fisttp
outs
jl
imul
mov
pop
mov
and
adc
push
in
aam
push
rsqrtps
push
xor
add
adc
xchg
test
or
and
pop
dec
js
cwde
and
sbb
inc
push
in
addr16
rcl
dec
push
push
pushf
mov
scas
lock
sub
or
xor
add
add
pop
ret
jmp
dec
adc
jns
jo
test
std
push
(bad)
xor
call
fldlg2
jp
sub
iret
pop
xor
sub
loope
inc
xchg
inc
ret
jmp
adc
inc
dec
jg
or
add
sub
xor
loop
pop
xchg
dec
pop
shr
mov
mov
sar
push
repnz
jns
or
add
jmp
and
or
add
sbb
add
iret
loopne
push
mov
jmp
mov
mov
imul
and
push
scas
sbb
ret
loope
add
push
out
push
and
jbe
ret
test
ficomp
or
rol
jnp
ror
jmp
adc
or
in
fwait
sub
iret
add
push
js
xchg
ret
pop
sub
fwait
add
add
cmp
loop
add
sti
mov
lea
test
in
xchg
nop
or
add
dec
pop
xor
add
add
mov
adc
add
ror
and
push
lods
push
sub
sbb
sub
mov
jno
mov
push
or
call
and
and
cmp
and
inc
sub
xchg
and
pushf
add
jecxz
sbb
sbb
or
pushf
out
call
mov
daa
sar
sar
in
popf
or
xor
push
mov
push
push
ja
jl
adc
push
sar
inc
ret
jecxz
adc
ret
inc
jne
je
and
out
push
sbb
jle
mov
push
jae
sub
cmp
ja
pusha
mov
mov
adc
icebp
inc
ret
loopne
push
or
call
jle
sub
jle
ja
mov
jmp
sbb
dec
sbb
shl
cmps
push
sub
js
sub
lea
inc
push
sub
retf
push
das
imul
jmp
fs
sbb
test
adc
cmc
popf
dec
mov
sub
jmp
lea
and
add
jl
jnp
jne
inc
jnp
test
pop
inc
jmp
ret
daa
iret
call
popa
or
mov
mov
mov
clc
push
ss
sub
dec
ret
imul
(bad)
in
in
jge
xor
pop
lock
push
jge
or
ja
mov
adc
xchg
ret
jle
cmp
jge
mov
mov
mov
pop
jmp
or
nop
lea
pop
lock
in
das
xor
test
js
fist
ret
gs
or
adc
xchg
adc
inc
push
push
ja
mov
xor
les
sbb
jbe
add
sbb
sub
push
outs
out
bound
(bad)
sub
add
mov
cmp
data16
jo
fimul
adc
jle
sub
or
in
xchg
enter
cmc
sbb
pop
xchg
adc
sbb
push
in
mov
or
or
lock
ins
icebp
ss
mov
test
jge
test
dec
add
xor
hlt
jl
in
mov
rol
stos
push
push
mov
or
mov
frstor
dec
out
xchg
outs
loope
sbb
sub
push
pxor
pop
lahf
inc
and
lock
adc
scas
cmp
sbb
add
sub
adc
sub
imul
dec
ja
inc
or
cmp
mov
add
push
in
adc
out
add
test
xchg
rol
jmp
pop
cmp
jne
mov
lahf
push
inc
lods
test
mov
adc
adc
cmp
ret
call
rol
and
rol
adc
(bad)
xor
xor
fistp
xor
fmul
sub
adc
retf
push
(bad)
out
(bad)
clc
inc
mov
inc
das
ficom
mov
xor
or
mov
jg
adc
mov
or
jbe
push
and
adc
mov
lea
inc
mov
mov
push
dec
push
mov
xor
cmp
shl
add
ret
inc
(bad)
push
leave
cmp
mov
mov
inc
test
mov
aas
push
pop
test
push
add
mov
mov
pusha
mov
ret
add
cmp
or
add
icebp
adc
bound
lea
cmp
fdiv
sub
(bad)
xchg
int3
daa
repnz
and
adc
and
stos
int3
pop
or
jl
cld
adc
stos
mov
mov
test
xchg
clc
add
jmp
pop
push
in
cmps
loopne
and
mov
dec
adc
sub
bound
mov
cmp
ror
xchg
jmp
repnz
pusha
inc
stc
or
push
push
clc
add
or
push
icebp
sub
inc
xor
mov
add
jno
xlat
sub
ins
leave
push
mov
add
popa
or
add
movs
mov
sbb
cmp
add
jg
adc
mov
mov
sbb
test
and
mov
or
xor
mov
pusha
or
enter
jecxz
xchg
or
xor
xor
adc
and
outs
dec
nop
or
jle
add
inc
sbb
rcr
jo
daa
mov
fmul
(bad)
ins
push
mov
push
mov
pop
push
mov
mov
es
cld
je
xchg
out
mov
inc
and
xchg
inc
xor
movs
retf
mov
mov
lds
inc
call
and
test
adc
inc
ret
add
adc
mov
xchg
push
adc
adc
cmp
mov
xchg
add
xlat
clc
out
mov
mov
sbb
add
jns
dec
dec
adc
or
imul
pushf
sub
sbb
les
cmps
xor
push
push
stos
test
arpl
adc
hlt
daa
mov
test
cli
sar
sbb
int3
ja
pop
mov
dec
cmp
push
in
imul
push
cmps
jne
es
mov
cmps
jno
inc
jne
cdq
jo
cli
stc
(bad)
xor
imul
call
xchg
dec
js
sub
fstp
call
icebp
sub
and
hlt
dec
add
xchg
jo
ret
sub
add
inc
and
or
retf
sub
pop
ds
sbb
inc
pushf
sbb
dec
pop
or
adc
or
inc
push
push
sub
shl
adc
les
or
jg
sub
popa
stc
dec
out
shl
ins
fadd
cld
or
dec
sub
ret
push
ret
pop
adc
lds
cmp
jnp
daa
or
cmp
je
cmp
je
push
sub
push
push
clc
ss
lock
mov
leave
or
inc
dec
hlt
sbb
repz
push
lea
push
dec
or
mov
xor
retf
rcr
mov
or
inc
inc
cmps
test
xlat
or
adc
jnp
enter
mov
das
mov
mov
inc
or
ret
add
jmp
inc
aaa
pop
push
mov
test
iret
sar
xchg
lock
sbb
cmp
push
xor
cwde
or
or
inc
mov
shl
mov
sti
not
jl
mov
imul
pop
aaa
das
jp
repnz
wbinvd
les
pop
ret
arpl
lea
cmp
ja
data16
or
push
enter
sbb
ja
push
jecxz
fst
imul
sbb
inc
pop
ret
push
std
shl
push
or
stos
loop
sub
push
mov
shr
mov
into
pusha
and
add
adc
push
mov
add
sti
or
inc
(bad)
and
cmp
or
inc
jle
dec
or
add
sub
push
add
adc
js
inc
inc
dec
in
(bad)
jle
jne
adc
div
ss
and
xchg
mov
and
or
and
cmp
jge
inc
jle
or
adc
test
(bad)
mov
loope
pop
pop
fisttp
mov
pop
popf
les
out
mov
sar
outs
xchg
daa
pop
pop
(bad)
jmp
push
rcl
pop
push
cdq
cmp
dec
dec
or
leave
adc
scas
movs
and
aaa
sbb
and
dec
fbstp
jne
inc
ins
je
sub
jp
sub
call
xlat
jge
mov
sub
inc
rcl
xchg
pop
push
sbb
jo
pop
ja
push
dec
add
outs
imul
mov
les
pusha
mov
mul
add
pop
call
xor
fimul
sub
add
jbe
rcr
cmc
out
or
ret
sub
in
mov
push
lea
dec
add
cdq
or
pop
movs
inc
mov
inc
mov
mov
imul
loope
mov
mul
add
loopne
addr16
inc
sbb
mov
paddusw
sbb
and
dec
push
xchg
loope
cmps
xor
or
pushf
push
ror
xchg
push
ds
cld
mov
fisubr
cwde
push
outs
cld
jle
ja
fadd
inc
in
mov
js
ficom
test
jl
or
ds
pop
mov
pop
adc
xchg
and
lock
push
pop
and
mov
push
add
push
(bad)
(bad)
int3
add
or
push
icebp
adc
jo
mov
push
mov
mov
xor
sub
nop
(bad)
shl
imul
les
add
daa
loope
mov
rcr
inc
mov
das
push
cmps
movs
nop
xchg
push
arpl
mov
rol
adc
and
mov
mov
push
jo
xchg
pavgw
cli
xchg
mov
adc
mov
call
inc
stos
in
pop
test
clc
(bad)
inc
sbb
fucomp
sbb
jg
and
cmp
add
push
call
lods
push
cmp
mov
and
cmp
adc
push
out
jo
imul
jnp
cmp
sbb
outs
adc
or
std
xor
or
add
xor
pop
arpl
mov
sub
rcl
lds
(bad)
outs
xor
pop
xor
dec
inc
pop
adc
movs
push
xlat
or
ror
adc
pop
push
and
mov
push
pop
cmp
add
pushf
mov
add
popa
xlat
lods
add
xor
daa
or
add
imul
clc
cdq
fild
mov
push
or
(bad)
lock
sub
int
sbb
pop
adc
cld
sub
jbe
popf
loopne
addr16
xor
sub
jae
lea
in
dec
or
(bad)
fcomp
push
add
mov
xor
call
xor
das
mov
adc
(bad)
(bad)
push
in
sbb
pushf
gs
jnp
mov
in
or
ja
push
mov
lods
dec
ret
das
sti
lea
std
test
xchg
or
mov
cdq
mov
inc
arpl
push
and
adc
xchg
cmovg
lods
sti
test
sbb
dec
and
test
add
pop
sti
sti
or
mov
and
in
adc
cmp
push
pop
inc
(bad)
imul
pop
pop
or
ins
lock
adc
stc
push
(bad)
push
mov
push
adc
movs
jecxz
sahf
neg
stos
and
sbb
outs
adc
in
das
push
mov
add
es
repnz
retf
xchg
dec
push
pop
rcl
mov
jg
fdiv
inc
std
(bad)
cs
adc
js
xchg
rcl
mov
xchg
mov
js
dec
mov
jae
add
mov
xor
mov
dec
fild
adc
test
test
pop
sbb
scas
jecxz
adc
adc
imul
dec
sbb
adc
jb
lods
lods
lock
inc
and
test
arpl
adc
retfw
mov
ret
neg
pushf
pop
jno
sbb
cwde
push
pop
or
or
or
mov
mov
mov
xchg
mov
lahf
push
jb
push
mov
or
jmp
movs
ins
imul
xor
adc
sbb
jl
push
jg
pop
loopne
shl
(bad)
lock
stc
jecxz
mov
mov
sub
arpl
ja
sub
and
adc
or
jmp
sbb
push
xchg
push
xor
and
ret
rol
(bad)
pop
fs
sub
dec
dec
push
jo
sti
shl
mov
jmp
call
inc
sti
(bad)
test
ror
stos
sti
jnp
out
mov
dec
in
shr
ja
test
push
push
jo
repz
push
mov
pusha
mov
scas
adc
add
fisubr
push
or
sbb
mov
pop
add
cmp
xchg
mov
add
add
test
add
in
aam
push
push
nop
daa
nop
and
xchg
inc
xchg
and
arpl
shl
sub
pop
push
rol
xor
scas
repz
inc
fcom
push
jae
fisttp
add
(bad)
mov
pop
inc
push
fild
xor
sub
mov
or
jo
xlat
out
ret
lds
xchg
iret
imul
lods
and
add
inc
dec
add
sbb
(bad)
(bad)
jg
and
mov
or
add
es
mov
out
inc
lahf
ret
and
dec
add
popa
or
int3
aaa
mov
mov
mov
mov
mov
loope
push
cmp
je
jmp
pop
dec
add
fs
cmp
mov
and
mov
cmp
cmp
add
shl
mov
jmp
pop
into
or
sub
pop
lods
sub
das
mov
adc
add
adc
ror
data16
pop
add
push
cmp
ret
outs
nop
push
pop
pcmpgtd
inc
jmp
loopne
fild
push
inc
inc
push
inc
data16
in
not
pop
cmp
neg
xor
pop
or
lods
mov
loop
xor
jmp
push
push
jl
inc
mov
ja
fwait
nop
sbb
(bad)
pop
data16
je
or
je
or
push
sub
jmp
or
pusha
es
in
add
add
das
int
push
pushf
aam
call
pushf
jne
ins
dec
pop
pop
mov
jb
sub
jne
inc
les
pop
mov
lock
adc
inc
loopne
pushf
push
mov
inc
mov
adc
mov
sbb
add
push
rol
daa
sub
inc
pusha
popf
push
pop
pop
adc
sub
mov
pop
and
mov
movs
aad
test
dec
add
mov
mov
add
add
add
bound
shr
inc
mov
mov
ret
jge
push
or
xlat
mov
add
cmp
aaa
cmc
loopne
ja
arpl
shr
clc
lahf
ja
int
outs
push
and
or
inc
rcr
ja
dec
add
add
cmp
push
lods
dec
hlt
dec
inc
push
push
in
sbb
shl
pop
xchg
pop
adc
add
pop
and
(bad)
shl
jle
or
add
loopne
push
out
mov
movs
arpl
add
call
and
inc
test
push
call
mov
adc
pop
aas
adc
and
in
adc
inc
cmp
jnp
sub
add
pop
test
inc
ss
push
inc
or
inc
rcr
push
pusha
test
ds
aas
push
xchg
push
or
inc
push
call
add
pusha
test
fidivr
icebp
adc
add
je
mov
inc
adc
jmp
push
and
push
adc
inc
push
sub
shl
adc
add
adc
rol
fiadd
div
add
data16
cmp
push
popa
jmp
adc
xchg
ret
adc
mov
ins
cmp
ret
push
mov
dec
(bad)
fild
call
dec
and
dec
loop
push
xor
jg
inc
loopne
and
add
outs
jmp
mov
and
out
add
shl
movs
ror
rol
pop
(bad)
jmp
jno
sbb
hlt
int3
es
lea
mov
mov
jmp
mov
dec
ret
pop
inc
and
cmc
mov
mov
dec
das
dec
add
leave
sbb
inc
bound
inc
sbb
inc
cmp
push
adc
mov
jmp
inc
adc
leave
xor
pop
cmp
pop
test
adc
(bad)
push
cmp
lock
push
add
loope
xor
pop
mov
add
aaa
push
inc
xchg
adc
mov
mov
in
mov
pop
inc
add
or
fisubr
mov
sti
(bad)
adc
xor
cs
(bad)
(bad)
or
inc
xor
push
push
xor
sbb
jnp
lods
adc
push
inc
sbb
test
shl
pop
gs
adc
and
dec
cmp
push
iret
adc
and
inc
test
add
dec
push
add
mov
in
das
xchg
inc
dec
scas
fstp
push
push
xor
jb
pop
dec
adc
imul
or
and
and
dec
inc
imul
fwait
dec
and
or
or
add
and
add
int3
push
or
cmp
jmp
pop
mov
mov
jmp
and
repnz
cmps
stos
sub
pop
ror
sbb
es
fimul
(bad)
add
scas
sub
push
mov
add
or
mov
sub
loope
pusha
data16
imul
rol
mov
rcr
pop
pop
test
pop
pop
dec
sbb
ja
add
rcl
push
xor
jnp
add
ret
sbb
jp
fidiv
push
cwde
or
or
je
pop
pop
inc
or
mov
jg
daa
push
fcom
xchg
push
fst
leave
ja
retf
ret
xchg
and
nop
out
mov
add
pop
mov
xchg
dec
mov
je
xchg
jmp
mov
push
in
and
mov
pop
(bad)
or
adc
inc
adc
add
push
add
sbb
les
add
sub
sbb
cs
add
(bad)
mov
xor
pop
inc
lds
pop
inc
dec
mov
dec
jmp
sub
je
xchg
dec
or
repnz
add
ret
mov
pop
leave
ret
jne
ret
add
cwde
test
in
arpl
femms
adc
push
or
(bad)
ror
add
repnz
pop
sbb
and
sbb
dec
ins
les
jo
push
mov
aas
or
sbb
pop
out
push
dec
sbb
and
cmc
sbb
out
mov
adc
mov
pop
add
test
sub
data16
movs
pop
movs
pop
add
mov
pushf
and
imul
push
int3
xchg
gs
ficomp
cli
fcom
dec
jecxz
mov
je
xor
ror
stos
add
test
adc
iret
add
xor
jp
and
xchg
pop
test
ret
ins
push
iret
in
add
jmp
push
xor
inc
or
xor
sbb
sub
or
test
pop
add
stos
cmp
and
test
push
pop
pop
adc
and
adc
push
sbb
adc
ins
cmp
dec
loope
mov
nop
cmps
add
push
mov
cmp
sbb
shl
mov
inc
cld
aas
xor
push
mov
lods
pop
lds
daa
inc
loopne
cmp
jb
loope
or
pop
test
(bad)
cs
data16
cmp
push
and
shl
add
int
push
fsub
inc
ret
cmps
xor
jae
sub
xchg
std
sbb
cmp
je
push
cmp
pop
push
or
dec
or
push
popf
std
add
add
push
hlt
mov
into
xchg
cmp
retf
shl
pop
push
push
push
push
or
ins
jo
adc
rcl
jbe
add
push
add
push
lea
mov
ja
addr16
or
es
adc
(bad)
retf
and
xchg
cwde
mov
adc
or
xchg
add
ficom
sbb
jecxz
jne
iret
push
addr16
add
fcmovne
ins
jo
xor
aam
inc
mov
popa
pushaw
pop
ja
shl
fdiv
jmp
mov
inc
xor
push
cmc
fisttp
add
or
jmp
xchg
adc
out
nop
mov
cmp
mov
jno
sti
or
jmp
push
sub
push
pop
cmp
sbb
add
adc
es
in
mov
mov
sar
bound
arpl
sbb
sub
mov
add
xor
xbegin
add
jmp
(bad)
push
cmp
clc
push
rcr
aam
lods
jmp
add
add
mov
dec
and
nop
or
dec
and
aam
push
int
mov
les
fist
dec
mov
xlat
pop
push
add
sub
and
ret
stc
inc
test
mov
call
enter
sar
push
mov
sub
or
or
sub
inc
push
jne
es
aaa
daa
mov
daa
xchg
and
cs
add
mov
mov
int
add
jbe
or
movs
inc
add
nop
dec
or
les
sbb
or
or
(bad)
sbb
or
fld
and
mov
add
(bad)
adc
cwde
fnstsw
nop
inc
xor
cmp
or
or
lahf
xor
push
ins
jg
mov
jmp
sbb
aaa
jo
add
test
xchg
push
sbb
ret
cmp
pushf
nop
or
pop
add
daa
push
and
(bad)
mov
inc
mov
xlat
sub
str
sbb
imul
push
ret
mov
jb
mov
call
les
add
cmp
mov
pop
fsubr
mov
and
or
pop
mov
ins
xchg
mov
mov
jns
imul
push
push
add
ja
sbb
inc
add
data16
mov
sbb
or
fs
push
test
mov
adc
dec
adc
enter
mov
pop
jmp
stos
or
xchg
push
mov
in
lods
push
hlt
dec
sub
fsub
jecxz
jp
mov
push
cs
xchg
jbe
pop
sbb
ret
(bad)
aas
mov
(bad)
adc
lds
pusha
cwde
dec
xor
jge
inc
sbb
or
mov
push
inc
mov
aas
sub
dec
mov
lods
or
gs
mov
jbe
mov
pop
dec
and
sub
das
jmp
imul
imul
(bad)
fs
mov
or
nop
add
and
cmovno
push
dec
sbb
adc
sub
addr16
je
push
push
xchg
ja
inc
mov
add
sahf
ror
aaa
xor
jbe
lea
mov
jmp
push
sbb
sbb
dec
or
adc
xor
adc
or
or
pop
hlt
push
xor
fidivr
push
ror
int
jo
mov
cwde
rcr
pop
adc
jl
test
or
xor
add
call
pop
jne
shr
cwde
push
mov
enter
adc
and
shl
loope
ret
ror
jbe
mov
lea
dec
retf
aas
mov
std
rol
rol
lea
mov
les
jmp
das
std
inc
aam
jmp
pop
or
pop
pusha
push
xchg
dec
dec
das
js
dec
cmp
jge
or
outs
fcmovnb
(bad)
jp
add
jmp
sbb
jne
adc
xchg
cmp
jge
pop
inc
sbb
pop
pop
pop
sar
ret
jge
push
xor
mov
mov
add
add
iret
xor
adc
jmp
sahf
shr
inc
sub
push
pop
xchg
xchg
mov
pop
pop
inc
xlat
push
adc
fsubr
aaa
mov
les
pop
stos
pusha
fsubr
pushf
push
push
pop
retf
(bad)
mov
sbb
sbb
nop
nop
inc
sbb
mov
xchg
sbb
sub
sbb
inc
ret
xchg
and
dec
push
add
mov
bound
sub
ret
cwde
or
out
add
xor
fdiv
adc
ss
cli
adc
call
push
or
sbb
fild
call
into
sbb
adc
xlat
sub
call
enter
dec
shr
dec
cmp
jae
fwait
add
sbb
inc
add
fist
jo
sar
retf
sar
push
ret
dec
sbb
add
add
movs
push
sub
sbb
push
hlt
outs
dec
aas
movs
retf
add
sahf
push
shr
jecxz
rol
mov
jmp
movs
xlat
sub
stc
dec
mov
hlt
push
cmp
mov
or
xor
push
pop
shl
mov
ret
jb
adc
dec
jp
add
cmp
push
leave
jl
shl
data16
iret
push
mov
dec
sbb
sbb
out
adc
jp
add
movs
fs
and
jnp
ins
ja
das
jnp
and
jmp
add
repnz
retf
(bad)
in
or
rol
push
mov
add
jl
cmp
add
push
gs
sub
scas
add
movs
xor
mov
pop
push
fwait
sbb
pop
mov
cdq
mov
xor
sub
xchg
jge
mov
lahf
jle
sub
mov
mov
adc
jns
shl
or
aam
add
and
push
push
add
je
std
add
add
adc
xchg
mov
adc
mov
or
or
test
das
pop
lahf
sub
push
push
adc
and
jecxz
sbb
or
mov
icebp
les
and
and
xor
sub
push
or
adc
rol
and
call
inc
xchg
call
je
hlt
popf
mov
add
jbe
pusha
pop
cmp
or
add
xor
imul
mov
pop
test
xor
mov
cdq
inc
dec
(bad)
push
call
fcmovnu
sbb
jecxz
push
retf
pop
out
mov
jp
jge
add
mov
cmp
push
call
add
loopne
jmp
sbb
sub
popa
jmp
mov
cmc
ret
call
test
in
xchg
push
add
jns
add
pop
lods
cmp
jns
add
test
aaa
mov
pop
or
fsub
pusha
push
pop
mov
mov
add
retf
mov
or
enter
push
repnz
push
push
loope
dec
fidivr
mov
xchg
jmp
rcl
xchg
xor
or
add
xor
retf
inc
dec
outs
sub
cmp
retf
add
add
(bad)
nop
iret
adc
mov
or
and
xor
lock
out
add
test
inc
rcl
sbb
and
lock
push
fnstenv
mov
in
inc
pusha
aam
mov
popa
add
ficomp
pop
xchg
xchg
sub
and
adc
add
jge
dec
in
ins
dec
ja
add
test
push
adc
xchg
sbb
rol
ins
add
and
mov
pop
sbb
or
and
(bad)
adc
xchg
mov
es
lods
cli
jne
cs
or
push
imul
adc
jl
sbb
mov
nop
test
mov
xor
cli
add
sbb
xchg
into
daa
inc
outs
cmp
retf
or
cmp
repnz
repz
scas
sub
add
ins
repnz
push
cwde
mov
mov
inc
add
inc
add
jmp
sub
js
cmp
ins
(bad)
aas
sbb
lds
inc
mov
jmp
push
mov
xor
mov
sbb
pop
sbb
shr
mov
out
pop
jmp
adc
cmps
sti
call
arpl
mov
and
mov
iret
int3
jle
call
inc
or
mov
inc
icebp
es
sbb
and
sub
pop
push
pusha
daa
inc
sub
and
call
mov
shl
xchg
imul
mov
nop
enter
sbb
mov
xor
stc
xchg
add
jo
cmc
call
sub
stos
clc
sbb
xor
pop
cmps
lea
push
hlt
xchg
pushf
mov
out
and
and
mov
dec
xchg
or
mov
mov
mov
mov
or
push
hlt
movs
(bad)
shr
xor
lods
push
lods
addr16
push
pop
mov
mov
sbb
mov
mov
and
add
inc
sub
jle
inc
cld
xor
mov
test
or
in
sbb
add
adc
outs
and
sbb
jle
punpckhdq
and
jnp
retf
and
adc
adc
and
cwde
push
push
or
adc
mov
add
inc
test
add
inc
rol
mov
xor
retf
lea
(bad)
xchg
ss
xchg
mov
sub
jle
push
and
test
rcl
mov
movs
xor
sti
mov
cwde
lock
cmp
jne
mov
mov
test
call
inc
sub
es
and
xor
fdivp
push
xchg
add
ins
sub
dec
sbb
xor
dec
(bad)
out
or
enter
jmp
mov
push
sbb
push
or
add
jne
dec
and
sbb
cmp
mov
test
rcl
dec
or
sbb
sbb
push
invd
std
inc
inc
inc
pushf
sbb
fmul
inc
fistp
cmp
and
sti
mov
sbb
push
add
sbb
push
in
and
push
pushf
xchg
sub
push
xor
add
sub
pop
rcl
xor
arpl
cwde
sub
add
aas
cmp
dec
test
mov
mov
pusha
es
sbb
lahf
pop
shr
nop
icebp
xor
inc
sub
jbe
push
mov
(bad)
not
movs
inc
xchg
sub
pop
(bad)
dec
ja
sbb
int3
pop
mov
xchg
jp
sub
inc
jge
jo
pop
cmps
mov
scas
jbe
pop
pop
ss
mov
and
aaa
clc
stc
(bad)
pop
leave
inc
mov
add
and
cmp
mov
mov
js
add
pop
jne
mov
mov
add
ins
add
and
mov
mov
retf
out
je
and
cmps
dec
pop
pop
jb
push
enter
xor
mov
(bad)
sar
sar
pop
sub
shr
sub
push
(bad)
in
popa
mov
or
fimul
mov
inc
loope
pop
adc
nop
jmp
dec
jo
cld
jle
(bad)
jle
cmp
jbe
sub
cwde
push
ror
test
pusha
lock
push
dec
mov
cmp
push
sub
pop
jl
js
pop
int3
push
inc
dec
mov
dec
nop
sub
cmp
or
xor
es
mov
or
mov
mov
jbe
cmp
idiv
xor
mov
stc
xor
mov
mov
in
xor
xlat
push
aaa
push
loop
cmp
mov
mov
push
pop
imul
pop
mov
push
add
or
das
sub
mov
ret
or
jmp
adc
dec
xchg
cmps
inc
inc
sub
les
out
loopne
arpl
pushw
test
and
pop
aaa
sar
jle
sub
and
inc
push
mov
dec
cwde
adc
and
outs
and
mov
and
xor
dec
aam
js
and
cs
and
mov
clc
aas
mov
cdq
and
add
push
dec
aam
ret
popa
dec
movs
xor
pop
dec
dec
xchg
daa
cmp
add
inc
gs
in
fs
xchg
add
sub
add
adc
adc
and
maskmovq
test
dec
in
inc
jnp
dec
je
call
push
pop
arpl
stos
in
jg
sub
add
push
jl
mov
mov
push
jg
jmp
loope
and
add
pop
in
sub
mov
shr
rcr
jecxz
loopne
add
and
shl
es
in
ss
mov
jge
(bad)
aam
addr16
xor
or
test
mov
jl
xor
cmps
xchg
pusha
dec
or
out
jg
into
and
push
pop
sub
push
jo
push
sbb
cwde
loopne
jl
fist
or
loopne
ds
in
push
pop
jl
dec
mov
inc
and
dec
hlt
adc
push
es
jle
mov
pusha
sbb
hlt
cmp
lock
gs
inc
cmp
jl
add
test
xchg
add
pop
adc
add
push
loopne
clc
add
inc
fld
push
cmp
cmp
imul
add
pushf
sbb
mov
aam
add
cmp
iret
sbb
gs
jnp
add
rcl
mov
jmp
xchg
(bad)
adc
sbb
mov
rcl
ja
loope
mov
add
mov
pop
shr
or
mov
shl
je
aam
mov
inc
jecxz
icebp
push
jo
add
sar
sbb
cmps
in
pop
clc
mov
xor
fmul
sub
sub
dec
movs
sbb
add
push
xor
or
push
sub
dec
fbld
inc
add
call
add
and
push
hlt
mov
call
add
lods
les
(bad)
mov
mov
ror
xchg
rol
pop
dec
inc
loopne
cld
clc
(bad)
pop
xchg
test
xlat
adc
add
loop
push
sub
retf
loope
xor
pop
or
add
sub
wbinvd
in
call
fist
retf
mov
nop
loopne
in
jg
test
adc
stc
push
pop
cmp
push
xor
adc
add
mov
sbb
adc
and
push
cmp
jmp
fld
fucomp
fnstsw
test
jnp
fcom
cli
pop
cmps
ficomp
mov
jmp
pop
sti
xor
mov
ds
inc
in
fstp
sbb
dec
jnp
fstp
jmp
cmp
jl
into
(bad)
mov
icebp
fdivr
add
push
fcom
mov
fstp
fxch
add
sbb
xlat
inc
jl
je
in
and
pop
cld
add
cli
adc
(bad)
fld
je
dec
jo
gs
test
pop
stos
push
sar
or
inc
sbb
mov
ror
test
popf
mov
rcl
pop
cmp
inc
jnp
sbb
arpl
loope
and
mov
js
push
rcl
(bad)
je
leave
fld
pop
or
sub
inc
xchg
inc
xchg
mov
fwait
and
mov
jnp
push
xchg
dec
bound
loope
jmp
leave
cmp
out
mov
jmp
fsub
adc
popf
adc
mov
xchg
pop
fld
pop
je
mov
xor
ror
ret
sbb
sbb
mov
es
xchg
jno
adc
popf
cs
mov
outs
cmps
mov
mov
add
das
or
repz
dec
shl
fwait
je
mov
mov
jmp
rcl
add
sub
cmp
mov
sub
call
call
aad
dec
shr
(bad)
int
push
inc
or
inc
mov
xchg
mov
sbb
xchg
dec
rol
stos
pusha
inc
mov
(bad)
iret
pop
je
stos
lds
cmp
ss
scas
push
sbb
adc
inc
popf
mov
mov
shl
ret
rcr
sar
mov
(bad)
and
add
loopne
std
pop
inc
mov
loop
or
pop
shr
or
call
loopne
(bad)
fdiv
into
mov
push
loopne
sub
ja
mov
and
clc
adc
sbb
push
fldcw
adc
(bad)
in
xchg
call
cdq
seto
hlt
sub
dec
cmps
dec
sub
cdq
outs
cmp
or
call
or
xchg
add
enter
lea
ret
movs
and
fmul
push
fnstcw
push
add
or
pop
pop
fdivr
in
inc
inc
sub
scas
push
test
adc
shl
sbb
mov
ja
sub
das
popa
mov
cmp
iret
xchg
lock
(bad)
shr
adc
(bad)
les
das
loope
adc
les
fdivr
pop
adc
pop
inc
dec
ins
ins
mov
shl
enter
or
inc
adc
je
iret
jmp
sub
push
xchg
sub
add
(bad)
and
enter
mov
sub
(bad)
daa
out
dec
ds
das
sbb
and
mov
vaddpd
xchg
pop
jno
loope
int3
sti
mov
push
jns
mov
jge
jle
mov
inc
sbb
push
scas
sbb
sbb
sbb
inc
pop
jnp
adc
push
add
inc
cmc
or
inc
fcomp
add
test
mov
sar
or
inc
jo
add
call
int3
push
(bad)
lock
mov
push
inc
jmp
add
repz
and
pop
outs
shl
jno
gs
push
fisub
enter
add
push
push
sub
mov
push
ja
mov
movs
sbb
mov
push
jp
pop
jg
or
enter
jg
push
scas
shr
test
xchg
fldcw
leave
push
add
loopne
sub
add
inc
or
ftst
push
xlat
cmps
cmp
add
adc
xor
pusha
and
stos
or
add
sub
push
lea
pop
test
mov
jge
or
repnz
std
push
mov
mov
mov
push
(bad)
lods
pop
ret
and
cs
and
mov
cmp
push
jno
inc
dec
in
push
inc
inc
lea
jmp
push
pop
push
rcl
add
push
retf
sub
mov
rcl
adc
popf
inc
pusha
inc
ins
pop
fcmovnbe
in
add
mov
push
ror
loope
xchg
movs
or
loopne
sahf
fadd
push
lds
in
or
aaa
int3
jl
test
pushf
ror
xchg
test
or
inc
movs
pop
and
push
mov
push
dec
call
dec
in
adc
and
inc
in
inc
test
xchg
ret
pop
pop
adc
or
movs
scas
js
add
sub
dec
scas
and
sub
imul
add
addr16
add
icebp
xor
push
lods
icebp
jb
xchg
pushf
xchg
(bad)
test
lea
mov
int
(bad)
lock
sub
cmp
push
int3
nop
rcl
mov
mov
inc
or
mov
or
dec
or
push
push
or
add
add
or
sbb
or
cld
xchg
jecxz
outs
mov
call
mov
or
sbb
lods
add
inc
add
or
add
xchg
pop
enter
adc
or
pusha
pop
ja
mov
das
shr
and
jnp
mov
arpl
cmp
fld
xor
fidivr
pop
invlpg
ret
sbb
fcmovne
cld
jne
movlps
fbld
lods
iret
adc
push
mov
cmp
daa
xchg
inc
and
scas
cmp
xchg
sub
lods
cld
scas
lods
inc
push
xchg
(bad)
lock
in
jb
out
iret
dec
mov
cmp
fistp
enter
jmp
in
inc
dec
loopne
shr
adc
rol
mov
add
and
sub
unpcklps
fwait
jge
add
or
push
popa
clc
mov
data16
push
inc
xor
push
lock
test
retf
das
push
and
ds
push
xor
push
inc
sbb
push
mov
or
jns
or
pop
push
add
sbb
add
add
sub
test
xchg
jns
mov
jg
pop
or
imul
cmp
fist
js
inc
add
lea
pusha
or
cld
adc
sub
inc
into
add
loopne
jo
enter
lods
fmul
lock
pop
lock
push
mov
inc
outs
push
push
clc
push
push
or
sbb
clc
push
push
mul
push
sub
movs
adc
std
inc
pop
pop
pop
leave
rcr
sub
iret
hlt
dec
add
add
cmp
bound
clc
inc
add
push
pop
ror
cmp
and
inc
verw
cmp
clc
retf
mov
jle
adc
jl
mov
and
adc
or
add
call
daa
test
sub
repnz
sti
test
pushf
mov
add
call
push
mov
sbb
pop
rcl
cmp
loopne
mov
pop
je
dec
adc
push
fbstp
in
adc
sbb
sbb
mov
daa
iret
lods
jno
dec
xor
adc
adc
lea
push
push
or
jl
out
mov
mov
push
sbb
xor
xor
lods
jbe
xchg
xchg
ja
jmp
sar
add
dec
jnp
cld
adc
push
xchg
shr
nop
xor
push
test
xor
mov
dec
push
push
mov
in
out
sub
cmp
push
sub
sbb
imul
and
je
jo
repz
shl
out
stos
loopne
loop
sbb
jno
enter
jnp
mov
aaa
push
je
sar
add
sahf
sbb
push
jmp
loopne
add
or
retf
int3
arpl
not
inc
add
add
lea
pop
outs
mov
test
xchg
push
aad
jne
push
cmp
xchg
pop
movs
add
call
mov
(bad)
fadd
rcr
and
or
mov
cdq
mov
nop
dec
push
les
lea
in
daa
(bad)
mov
xchg
dec
ja
sti
sahf
pop
inc
dec
aam
xchg
and
rcr
cmp
mov
loope
sti
shl
cmp
outs
xchg
test
push
fisub
fdivr
inc
dec
fdiv
adc
pop
fmul
sti
enter
clc
or
ins
scas
pop
cmp
adc
ds
push
push
push
rol
call
jmp
pop
(bad)
popa
dec
or
movs
dec
es
add
xchg
jb
(bad)
(bad)
iret
les
scas
popa
aam
mov
enter
cmp
and
adc
sbb
imul
mov
les
dec
aad
mov
movs
or
xchg
and
adc
pop
mov
popa
xchg
cmp
repz
daa
test
fnstenv
pusha
dec
dec
mov
(bad)
push
and
(bad)
icebp
sysret
jle
mov
arpl
test
daa
loop
cmp
inc
ret
fadd
scas
dec
adc
sbb
cmps
fwait
or
mov
lahf
ret
push
sbb
aaa
popa
or
or
pop
and
cdq
add
aas
daa
pop
jo
xchg
add
cmp
jge
push
mov
adc
in
stc
pop
adc
sbb
aaa
movs
add
mul
loope
dec
push
cmc
mov
adc
sar
iret
imul
xor
and
in
dec
push
iret
sbb
pop
jl
adc
or
push
pop
sbb
mov
dec
xor
or
push
pusha
mov
in
jp
push
rcl
ss
add
xor
mov
dec
adc
lahf
inc
or
dec
or
push
inc
ins
fdiv
xchg
data16
sbb
jp
dec
push
sub
cmp
jo
push
push
enter
mov
xchg
je
sub
push
sub
push
sub
xor
cmp
les
jo
aas
sbb
popa
push
pop
inc
mov
cmp
rcr
loopne
inc
leave
fnstsw
ins
test
dec
sbb
cwde
or
jne
inc
xor
arpl
nop
mov
pop
mov
inc
pop
dec
adc
hlt
add
dec
cmp
push
neg
add
add
sbb
pop
loopne
inc
inc
outs
jmp
mov
or
dec
push
add
mov
add
(bad)
jne
cmp
push
inc
pop
imul
push
xchg
nop
inc
xchg
xchg
add
fs
cmps
adc
or
je
or
cdq
sub
pop
idiv
mov
cmp
data16
mov
lea
fdiv
add
(bad)
ds
cmp
nop
mov
shl
and
mov
daa
clc
mov
test
and
xchg
int3
and
adc
retf
push
adc
fxch
gs
or
inc
popa
mov
add
movs
loopne
aas
cmp
push
idiv
mov
or
ror
mov
pop
call
fnstenv
ins
fdivr
xchg
mov
enter
add
add
mov
lea
adc
js
push
mov
jl
or
cmp
or
push
adc
pop
xor
pop
jb
nop
enter
or
jae
xor
push
inc
xlat
push
push
add
psraw
jl
pop
xor
cmp
adc
loopne
or
cmp
(bad)
cmp
sbb
cmp
sbb
mov
and
cmp
sysret
sbb
neg
push
in
add
adc
pop
adc
lds
adc
add
sbb
ret
mov
xchg
(bad)
fmul
(bad)
push
xchg
(bad)
sub
aad
add
xor
cmp
mov
xor
lds
cmps
jb
and
sub
test
and
mov
inc
adc
xor
or
retf
dec
and
lea
and
cmp
test
push
mov
add
jp
mov
lods
test
popa
scas
mov
daa
jae
push
add
mov
sbb
sub
dec
sbb
adc
loope
push
xor
frstor
xor
xor
add
pop
fnstsw
dec
(bad)
mov
xor
inc
sub
movs
and
inc
dec
mov
mov
inc
cdq
xchg
add
dec
add
push
sub
(bad)
rcl
dec
mov
mov
xchg
bound
test
pop
sbb
stc
xor
lea
inc
mov
mov
cmps
test
adc
or
adc
outs
jnp
and
test
test
ss
ret
add
lock
icebp
ja
test
or
dec
xor
mov
xor
outs
inc
bound
aas
jb
inc
ins
gs
dec
add
dec
sub
push
push
jg
sub
not
push
push
jne
mov
inc
jge
or
pop
pop
push
mov
sub
cmp
jae
cmp
rol
adc
fs
daa
lods
xchg
mov
inc
cmc
ret
jmp
sub
pop
push
sbb
pop
ins
xchg
xchg
or
bnd
lods
xchg
lods
gs
sbb
pop
lods
push
sub
inc
sbb
jo
js
adc
ror
nop
xor
aam
pusha
sti
jmp
clc
pop
cmp
je
and
cs
loopne
popf
inc
mov
push
xor
inc
add
mov
aam
xchg
xchg
test
or
xchg
test
and
popf
adc
(bad)
dec
jns
mov
lods
xchg
add
mov
xchg
cwde
jne
push
push
test
push
xchg
ins
push
jecxz
fcomp
gs
or
fsub
cdq
int3
sub
dec
aam
push
rcr
sbb
xor
icebp
jbe
push
je
cmp
bound
cmp
outs
mov
push
movs
setg
iret
retf
pop
in
fwait
lea
pop
iret
jmp
cmps
mov
push
push
lea
test
mov
fadd
mov
inc
iret
mov
enter
fcomp
dec
cmp
adc
and
inc
pop
repz
sbb
mov
mov
push
call
mov
stos
test
test
pop
mov
sub
inc
jl
push
rcl
ret
jo
lock
movs
mov
push
mov
out
push
push
retf
sub
push
popf
test
add
push
es
sub
jb
jge
jnp
(bad)
sub
push
mov
jp
xor
jbe
jae
jl
inc
adc
into
dec
fild
mov
adc
pop
scas
add
sub
add
lahf
mov
lock
or
cmps
dec
call
jg
call
jne
jecxz
les
push
pusha
mov
ret
mov
call
adc
inc
rol
aam
mov
pop
loop
jne
xor
sub
jl
jne
mov
das
and
mov
adc
stc
adc
sbb
xchg
sub
pop
aas
xor
sub
and
and
cmp
cmp
xor
xor
(bad)
push
push
(bad)
adc
out
loope
jbe
ins
mov
push
add
sub
add
fadd
adc
scas
xchg
movs
(bad)
push
add
add
loope
jp
fdecstp
inc
dec
shl
imul
fisttp
imul
cmp
je
push
test
and
push
je
or
mov
popa
push
add
not
push
xchg
xchg
sub
repz
dec
or
rol
retf
add
mov
js
repnz
xchg
jne
add
ficom
jmp
and
icebp
mov
jns
movs
inc
cmps
push
pop
int3
push
ja
mov
ror
mov
mov
or
lods
cs
enter
fdiv
nop
push
enter
push
sbb
or
add
and
shr
push
sbb
int3
dec
or
shl
leave
push
enter
movs
pop
xchg
xchg
mov
(bad)
iret
loop
ret
add
cs
into
sub
into
xor
jne
aaa
add
je
(bad)
and
add
call
in
jne
xor
add
mov
dec
je
pushf
cld
add
jno
imul
inc
clc
add
les
pop
ds
test
push
or
cmc
scas
pop
jo
mov
sbb
adc
and
pushf
inc
loop
movs
mov
add
sub
clc
imul
dec
xor
dec
or
inc
mov
adc
adc
lock
ja
pop
add
adc
or
inc
mov
or
jb
aam
addr16
cld
pop
push
xchg
push
xor
push
mov
jl
inc
jb
jne
inc
inc
adc
ret
ret
into
add
int
cmp
xchg
push
jo
jmp
ss
inc
ss
adc
pop
xor
mov
pop
into
mov
add
in
mov
fnsave
mov
sbb
pop
sbb
lods
cmp
dec
lods
dec
dec
mov
sub
cmc
daa
push
popf
jns
ins
mov
pop
clc
push
push
pop
pusha
adc
add
daa
add
mov
push
push
fnsave
mov
dec
nop
clc
pop
int3
add
adc
pop
lea
addr16
xor
push
xchg
icebp
jno
in
cmp
iret
mov
add
mov
pop
popa
jb
fs
mov
aam
cmp
mov
cmc
add
lods
aam
dec
dec
xchg
add
adc
outs
les
mov
imul
imul
and
xchg
adc
adc
mov
add
mov
out
inc
dec
jle
adc
(bad)
test
clc
xchg
test
es
call
mov
pop
shl
ja
push
sahf
cdq
cmp
or
sbb
es
jmp
test
fbstp
and
pop
dec
in
xor
add
add
call
sbb
scas
mov
lahf
sti
adc
xor
dec
dec
mov
imul
das
add
dec
jae
and
pusha
jno
sub
mov
out
pusha
je
jo
int3
daa
sbb
in
add
repnz
popa
inc
xchg
push
popa
mov
mov
xor
dec
dec
aaa
or
mov
sahf
push
push
push
rcl
adc
mov
sbb
clc
xchg
cmp
jo
mov
clc
or
inc
call
add
push
push
push
and
loope
push
mov
and
dec
test
push
rol
movs
or
pop
sub
jae
and
xchg
cmp
jmp
ins
mov
rcl
xchg
jnp
push
pop
dec
outs
fild
inc
add
inc
mov
xchg
call
adc
mov
adc
push
fs
popf
push
pushf
(bad)
jecxz
aad
pop
push
rol
loope
ror
mov
cdq
push
pop
test
dec
inc
rcr
xor
pop
push
mov
add
inc
cmp
gs
push
imul
add
push
push
push
adc
rol
or
sbb
test
in
sbb
add
xlat
sbb
je
aam
and
icebp
push
cmp
lods
mov
xchg
leave
or
stc
outs
loopne
sub
in
mov
cmp
pop
adc
pop
bound
loope
loope
or
das
inc
or
lock
mov
iret
add
fwait
cmps
cmp
sub
in
push
cmp
add
sbb
cli
inc
cmp
dec
cmp
push
ret
and
lea
cwde
and
dec
shl
dec
nop
dec
jnp
xor
add
jnp
das
push
sbb
retf
dec
movs
pop
pop
sbb
mov
xor
je
int3
xor
rol
bound
or
ret
js
cmp
shl
adc
mov
iret
pushf
mov
dec
adc
and
or
ss
push
adc
in
pusha
add
xchg
mov
push
loop
test
sub
repnz
jne
movs
or
xchg
add
pop
hlt
test
push
add
push
cmp
in
add
add
pop
sbb
xlat
dec
dec
icebp
or
and
add
neg
sar
or
or
ret
rol
jns
dec
adc
cwde
nop
pop
or
ins
xchg
mov
ja
hlt
aam
jmp
mov
sub
and
adc
push
push
movs
(bad)
xchg
jb
ror
add
jne
push
pop
pusha
add
out
add
mov
cmp
into
xor
pop
or
das
test
test
stc
lock
push
pop
call
aam
and
sbb
movs
test
add
add
pusha
jl
movs
mov
test
imul
cdq
sub
jae
test
(bad)
fcom
sbb
adc
fcom
jmp
push
dec
jne
adc
push
(bad)
mov
jne
rol
pop
or
sub
push
imul
sbb
lods
sti
jns
cmp
setno
push
iret
jmp
jmp
hlt
(bad)
mov
enter
add
mov
cmp
ror
mov
cmc
add
pop
add
lock
retf
add
mov
pop
retf
add
inc
stos
adc
sbb
push
(bad)
or
cmp
adc
pushf
sar
add
xlat
leave
add
or
rol
mov
or
mov
push
push
xchg
dec
or
xchg
push
add
mov
cli
fiadd
push
sbb
ret
call
adc
les
sbb
imul
xor
or
or
inc
in
scas
movs
xchg
fidivr
aam
les
sub
xchg
or
jmp
xchg
in
or
lods
add
int3
or
push
and
push
and
popa
sbb
jne
hlt
sbb
jg
mov
in
xchg
lahf
test
mov
pop
push
cmp
cdq
or
outs
inc
push
loopne
aad
inc
stc
pop
lea
ret
and
inc
mov
fwait
rol
xor
cmp
mov
into
cli
xor
adc
mov
add
or
mov
push
xchg
cs
xor
lods
cli
frstor
lahf
ret
fisubr
push
ins
pop
mov
mov
jmp
mov
(bad)
pop
mov
dec
adc
loope
retf
lock
lods
jge
adc
mov
js
xchg
jo
add
add
fbstp
add
push
ret
test
adc
loopne
jp
add
in
push
mov
jp
dec
mov
sti
not
or
dec
jo
fcmovnu
add
cld
cmp
je
cld
xchg
test
test
sbb
pop
sbb
fcom
push
ud1
popa
xor
push
or
shr
xor
mov
or
pop
mov
xchg
inc
push
sbb
push
jg
jmp
inc
rcr
xor
inc
retf
stc
mov
sahf
retf
stc
adc
retf
stc
adc
stc
jp
sbb
adc
jns
cmovnp
imul
or
ds
adc
ja
dec
dec
push
mov
cwde
je
pusha
retf
cmp
mov
add
jecxz
mov
mov
pop
out
pop
pushf
dec
popa
out
test
inc
pop
push
xchg
adc
cmp
retf
mov
dec
push
je
push
push
call
dec
test
add
or
call
pop
bound
push
add
xchg
(bad)
in
push
cmp
rcr
mov
sbb
bound
jl
jg
push
aaa
cs
cs
push
add
enter
mov
and
mov
or
daa
adc
mov
adc
cwde
clc
jne
or
mov
ds
dec
sub
inc
call
(bad)
loop
sbb
jmp
mov
push
push
mov
xchg
fisub
pop
dec
xor
aad
jmp
arpl
xchg
(bad)
xor
jg
enter
loopne
sub
ffree
fmul
push
ja
inc
sub
pop
inc
xchg
shr
shl
daa
(bad)
push
pop
(bad)
add
mov
cmc
sub
loop
popa
xor
inc
pop
add
cmps
or
or
mov
in
and
cmps
and
and
push
loope
dec
or
push
inc
pusha
fdivr
or
test
jo
mov
lock
cmp
jp
xor
rol
inc
mov
cld
daa
cs
add
push
or
mov
mov
or
test
inc
xor
scas
add
mov
fmul
clc
iret
iret
add
out
pop
mov
xchg
int3
jg
push
pusha
rol
add
sub
popa
xor
mov
inc
pop
aaa
pop
push
mov
sbb
jbe
retf
test
add
stos
add
cmp
jle
jp
inc
mov
push
adc
adc
jg
dec
or
pop
adc
dec
mov
dec
adc
push
pop
rcl
add
push
or
repz
ret
imul
cwde
and
or
lea
and
and
ins
ret
js
gs
add
add
xor
out
and
add
std
imul
mov
out
scas
xchg
push
adc
mov
rcl
add
sbb
sbb
mov
mov
or
push
cmps
mov
nop
sub
inc
cld
or
loopne
xor
or
push
dec
pop
adc
add
aad
xor
(bad)
sbb
pusha
aam
or
and
mov
add
in
or
movs
fisttp
in
add
inc
pushf
clc
xlat
cmps
add
push
and
adc
ror
or
xchg
inc
fadd
mov
or
popf
rcl
sbb
adc
add
pop
adc
sub
or
mov
adc
je
push
or
push
cmc
inc
mov
je
aas
and
sysenter
jbe
sbb
push
xchg
or
mov
rcr
mov
jo
fcmovb
adc
neg
je
test
and
call
adc
pop
sub
mov
cmp
leave
mov
pop
enter
inc
fcom
adc
js
or
inc
mov
or
add
loopne
push
mov
xchg
mul
(bad)
mov
pop
clc
jmp
inc
rol
stos
fmul
add
jge
push
sub
popf
push
or
push
mov
(bad)
out
mov
cmp
int3
jbe
and
xchg
lds
pop
mov
cmp
cmp
jne
push
add
inc
(bad)
pop
push
push
adc
cli
das
sub
sti
inc
or
pop
adc
lods
or
mov
mov
or
inc
mov
pop
adc
outs
or
iret
ins
pop
pop
and
je
or
das
div
(bad)
jnp
and
fild
mov
dec
inc
lea
loopne
push
push
push
push
adc
inc
or
xchg
test
xor
push
je
in
je
ret
jns
jne
mov
pop
cmp
sub
jmp
dec
mov
xrelease
push
add
jmp
data16
bswap
push
and
arpl
es
mov
mov
xor
adc
clc
push
xor
pop
mov
pushw
pop
mov
and
jecxz
mov
adc
and
pop
xlat
or
or
sub
add
push
pop
rcl
sub
outs
push
mov
or
inc
add
pop
sbb
icebp
pop
std
repnz
add
mov
or
or
in
jge
imul
mov
repnz
xor
fisubr
push
add
mov
shr
ja
push
sub
test
in
pop
sub
les
or
xor
push
jae
lock
pop
add
mov
mov
lahf
jb
or
xchg
mov
jmp
ror
add
inc
and
cmc
and
and
adc
pop
outs
xor
mov
outs
sbb
or
daa
mov
dec
add
add
jp
arpl
push
xchg
or
pop
push
or
or
scas
add
jne
adc
js
and
add
loopne
imul
gs
lds
out
jg
add
cmp
mov
xchg
push
xor
adc
sub
clc
or
jnp
add
jne
mov
lock
cmp
add
or
ds
mov
cmps
adc
xor
mov
(bad)
jmp
push
gs
adc
lds
sbb
inc
ins
cmp
push
xor
pop
add
mov
lods
int3
cdq
mov
jo
int3
mov
xor
(bad)
cmovns
lahf
or
add
(bad)
adc
lea
add
add
or
int
jg
add
test
or
mov
fsub
ins
mov
jge
xor
je
dec
push
neg
outs
mov
mov
cmp
mov
fstp
cmp
je
jne
xor
inc
push
lock
in
push
mov
mov
mov
xchg
add
push
scas
movs
jmp
rcl
ins
fdiv
adc
xchg
test
pop
scas
dec
jbe
mov
rcr
repnz
adc
cmp
push
pop
std
dec
mov
sti
add
(bad)
stc
xchg
mov
loopne
test
xchg
test
adc
lods
dec
mov
inc
imul
add
mov
sub
mov
das
xchg
or
test
lahf
inc
sub
cmp
inc
lea
xor
jo
aam
(bad)
pop
cdq
(bad)
lock
dec
rcr
adc
and
cmp
xor
mov
cs
ja
xchg
inc
jecxz
or
cmp
sti
fidiv
sahf
fistp
movs
push
dec
add
push
inc
xor
sub
daa
push
push
fld
into
inc
push
rcr
test
sub
cmp
inc
sbb
jmp
xchg
sub
fwait
loope
mov
and
jg
jnp
adc
or
add
cmp
scas
jae
inc
aam
xor
mov
xchg
(bad)
mov
rol
lea
fst
jg
clc
cld
mov
mov
inc
push
add
fsubr
or
mov
inc
jns
test
ror
enter
add
lds
fmul
lods
mov
test
sub
(bad)
scas
xor
dec
add
cmp
sub
sub
pushf
(bad)
out
jg
das
push
sbb
neg
daa
dec
out
dec
push
mov
imul
push
or
ins
ret
test
test
int
xor
mov
sub
cmp
mov
mov
out
cmp
sar
push
jnp
inc
loope
add
xor
cmp
lods
mov
pusha
movs
and
xchg
cmp
mov
mov
sub
mov
pop
nop
ja
fnsave
pop
in
sub
xchg
ja
aaa
mov
adc
movs
je
movs
inc
movs
or
mov
fwait
aam
inc
or
add
push
jmp
mov
mov
movs
dec
and
mov
sbb
mov
sub
pushf
pop
(bad)
fadd
mov
ret
inc
fcomp
pushf
add
xor
jmp
fmul
jg
loope
cmp
sbb
add
scas
push
jne
cwde
xchg
mov
push
das
add
call
rcr
xor
mov
bound
lods
enter
fmul
jmp
cmp
inc
jl
or
pop
push
and
jmp
dec
mov
push
lods
mov
inc
push
cmc
stos
adc
inc
mov
push
mov
iret
mov
inc
mov
mov
iret
xchg
retf
sar
loopne
jl
pop
cmps
popf
and
stos
fs
mov
loopne
je
dec
pop
and
pop
push
int
mov
push
mov
inc
mov
mov
jb
enter
popf
add
shl
pop
and
cmp
(bad)
sbb
inc
pop
loopne
adc
or
xor
add
or
clc
lea
and
mov
sbb
push
xchg
fld
loop
movs
push
(bad)
xlat
push
sbb
ret
xchg
lock
mov
shl
add
enter
push
pop
jo
lea
mov
popa
adc
jecxz
mov
sub
or
jecxz
jns
or
mov
sub
jb
enter
(bad)
nop
xchg
sub
fsub
xor
xchg
arpl
mov
lods
mov
aaa
sub
fs
and
fsub
and
dec
dec
nop
jecxz
mov
loope
ja
and
adc
push
push
out
and
or
and
or
cmp
push
inc
jmp
es
push
xchg
jge
jbe
mov
add
jo
push
mov
in
bound
cs
inc
push
scas
popa
adc
xor
jmp
push
add
js
out
stos
and
and
mov
pop
adc
mov
retf
loop
call
add
cwde
out
test
dec
stos
dec
sbb
jmp
jo
and
or
and
lock
(bad)
call
das
in
mov
mov
daa
push
daa
icebp
jns
cwde
add
add
mov
push
and
sbb
pop
jns
and
sub
hlt
test
test
mov
jo
rcl
mov
pop
call
fwait
cmc
add
(bad)
fwait
push
add
pop
push
adc
sbb
fist
jge
xor
iret
push
mov
xchg
inc
mov
ret
cmp
cmp
aaa
mov
fisttp
(bad)
sbb
and
lods
cmps
lock
repz
jmp
mov
inc
xchg
cmp
sub
xchg
into
inc
mov
inc
push
sub
push
add
pop
cmp
mov
loopne
push
adc
lea
movlps
(bad)
stc
lahf
sub
add
xchg
adc
add
sub
loop
cmp
aad
mov
mov
inc
inc
jmp
sbb
or
lods
push
into
sub
mov
arpl
pushf
cmps
sti
mov
cwde
pusha
in
movs
adc
cmp
pop
add
dec
int
pop
stc
sub
jne
push
test
test
int3
and
or
imul
jmp
xor
shr
in
ins
dec
xor
push
pop
inc
cmp
and
mov
push
jne
inc
movs
inc
push
dec
mov
shl
popa
inc
lds
push
pop
pop
jp
xchg
push
add
jp
scas
(bad)
mov
jno
sub
sub
push
adc
add
mov
xchg
movs
mov
test
pushf
jmp
or
or
fild
lahf
and
(bad)
push
add
dec
ret
and
je
movs
add
push
movs
int
jmp
sub
mov
lods
push
loopne
and
aad
push
pop
mov
xchg
mov
inc
(bad)
mov
sub
ret
out
push
push
les
adc
in
mov
mov
mov
mov
xchg
mov
sub
out
div
test
sbb
jne
aaa
jo
add
push
add
jno
pop
cwde
mov
loop
aaa
sahf
shr
nop
out
loop
pop
adc
and
or
or
dec
enter
inc
mov
retf
and
mov
push
jnp
inc
or
test
cmp
cwde
icebp
dec
adc
adc
and
mov
mov
pushf
sub
out
or
add
push
out
sbb
dec
inc
das
adc
add
add
in
mov
xor
int
mov
mov
xor
hlt
pop
lds
or
out
mov
sub
add
cs
add
push
mov
fucomi
nop
shl
xor
push
in
fisttp
fadd
(bad)
pushf
mov
pusha
xor
and
pop
add
adc
or
fist
push
jo
dec
sbb
in
jle
(bad)
(bad)
addr16
arpl
scas
and
enter
enter
pusha
out
or
pop
cmp
jle
jp
fisttp
pusha
xchg
mov
sbb
mov
ins
mov
in
sub
xor
add
add
mov
mov
cmp
sub
lahf
cmp
add
jns
jo
inc
mov
pop
push
cmps
add
jb
inc
or
sbb
pop
sbb
ins
dec
jmp
sub
cwde
inc
adc
adc
add
fiadd
pop
jbe
push
push
jmp
push
test
test
fs
inc
inc
inc
inc
loope
cmps
jns
adc
add
add
inc
movs
cmp
repz
pop
dec
add
in
push
push
fisub
dec
add
sbb
popf
loope
jns
scas
pop
repz
or
adc
add
xchg
or
pop
mov
jge
add
xlat
aam
push
cmp
or
popa
dec
push
sbb
pop
jmp
fidiv
xchg
in
lds
aam
mov
cmps
and
idiv
aam
xor
pop
mov
add
mov
sbb
mov
mov
pop
jl
shl
fmul
lock
pop
cmp
sub
mov
pop
stc
int3
and
adc
lods
jge
cmp
jo
and
shr
and
mov
add
pop
fstp
repnz
sbb
mov
mov
pop
ret
push
stc
or
push
mov
pop
out
sbb
pop
das
add
push
and
xchg
outs
cmps
pop
rcr
push
xchg
and
xchg
dec
add
outs
push
jp
out
int
dec
fs
adc
cmovnp
push
lds
cmp
pop
loope
sbb
sub
jge
and
pusha
cwde
or
(bad)
inc
stc
lock
mul
dec
pop
dec
mov
les
mov
(bad)
cmp
and
loope
push
sbb
mov
xor
push
mov
sbb
mov
mov
inc
dec
jl
in
mov
ret
cmp
mov
add
lea
shl
stos
mov
shl
push
outs
add
jg
cmp
bound
cs
and
xchg
ja
aad
push
inc
inc
jp
lods
jnp
ret
xchg
in
movs
inc
test
inc
mov
out
pop
repnz
mov
adc
pop
or
icebp
jmp
cmps
(bad)
or
or
or
loopne
add
or
dec
xor
xchg
adc
push
xchg
call
loope
xor
mov
int3
xlat
push
add
mul
shr
cdq
adc
or
dec
jb
ins
dec
sub
sub
or
test
mov
mov
imul
xlat
push
jae
dec
and
add
inc
inc
bound
xor
mov
jle
mov
pop
or
aam
iret
add
shr
test
leave
mov
xor
mov
push
test
dec
hlt
fwait
and
pop
daa
test
push
call
xor
lea
mov
iret
push
mov
mov
push
add
inc
in
enter
jmp
xchg
add
clc
add
push
cwde
pop
cmc
mov
mov
sbb
or
xchg
les
test
add
and
adc
jmp
sub
pop
es
push
or
add
mov
jb
sub
pushf
ret
popf
fild
xchg
hlt
adc
jne
push
and
add
popa
add
movs
and
inc
dec
adc
add
jge
shl
cmps
sub
add
sub
ret
mov
mov
mov
push
and
sbb
fidiv
ins
pop
push
loope
cmp
out
cmp
into
inc
(bad)
and
call
sar
jno
push
fistp
cli
retf
clc
sub
out
arpl
mov
mov
xlat
or
sbb
pop
push
sub
push
push
test
jle
pop
or
jmp
std
mov
je
in
fdiv
sub
add
jecxz
cli
inc
das
adc
cld
fisubr
sbb
dec
retf
inc
pop
pushf
dec
pop
mov
sar
mov
call
(bad)
sub
xor
pop
adc
lods
out
inc
inc
pop
stc
add
sub
loop
inc
sbb
pop
or
clc
or
cld
mov
add
cmc
cld
mov
mov
sti
mov
je
xchg
add
dec
enter
xor
gs
add
clc
cld
pop
adc
outs
sti
sbb
adc
jge
adc
mov
fadd
test
test
shr
mov
sub
add
out
or
in
call
push
shl
jno
push
push
xchg
and
fisub
rcl
repnz
sti
and
push
push
xor
add
inc
or
push
add
ret
jns
aam
adc
sbb
mov
mov
mov
xchg
xchg
adc
add
pusha
loopne
mov
mov
clc
add
pop
inc
js
add
rol
cmc
push
rcr
sbb
aam
xor
push
sbb
shl
ret
shl
lea
mov
jnp
sub
push
mov
sbb
xor
push
call
cs
or
pop
or
sbb
sbb
or
ret
loopne
add
pop
test
loope
sti
popa
add
mov
sbb
call
cmp
jno
sub
out
xchg
sub
rcl
inc
jecxz
std
or
loop
imul
add
clc
mov
adc
mov
xor
outs
sbb
in
or
xor
and
add
retf
pop
addr16
int
mov
shl
or
adc
dec
add
sbb
push
test
push
inc
pop
adc
dec
js
pop
mov
(bad)
inc
inc
mov
popf
nop
(bad)
and
push
xchg
inc
ins
mov
fwait
xchg
enter
sbb
imul
add
bt
seta
cmp
mov
add
cwde
sub
adc
lock
mov
adc
push
mov
add
xlat
sbb
in
imul
jo
add
adc
aaa
push
nop
mov
inc
add
rcl
loope
mov
inc
adc
pop
ret
inc
add
je
cmp
out
or
or
sub
test
in
mov
or
push
iret
or
or
inc
xor
push
mov
adc
push
mov
or
xchg
add
mov
or
push
xor
add
and
push
adc
pop
push
test
pop
dec
cmp
and
mov
ret
fimul
or
rcl
xor
add
xchg
stos
pop
jne
dec
and
adc
adc
dec
or
imul
or
rol
and
or
scas
adc
call
pushf
cwde
and
add
pop
fadd
jns
xor
repnz
sbb
aam
xor
fadd
dec
or
outs
das
ror
add
mov
dec
adc
cmp
jnp
add
cld
push
sbb
add
add
dec
and
rol
cmc
pop
outs
and
not
or
xchg
and
mov
add
arpl
out
adc
call
ror
(bad)
fcomp
outs
or
call
rcr
fstp
jecxz
(bad)
xor
fdivp
cmp
sub
mov
and
push
fwait
jbe
sbb
add
mov
out
cmp
mov
movs
(bad)
add
xor
pop
int
or
xchg
inc
xor
adc
mov
cmp
dec
mov
mov
pop
push
xor
nop
and
nop
stos
popa
sub
dec
mov
and
add
and
push
jo
lea
cmp
nop
inc
enter
mov
push
xor
and
add
and
push
xor
add
cmp
and
stos
jmp
icebp
or
xchg
aas
adc
int
adc
sidtd
cdq
pop
and
lock
sub
daa
sub
add
pop
or
mov
add
clc
inc
xchg
fsubp
inc
js
aad
and
(bad)
fmulp
pop
pop
int
in
and
adc
push
rcr
mov
pop
mov
outs
add
mov
test
retf
adc
ja
and
adc
mov
je
lds
mov
jg
fdiv
push
sub
pop
aaa
push
xchg
jbe
dec
xchg
shl
or
mov
push
mov
push
test
sub
movs
shl
fs
lahf
add
and
mov
mov
adc
imul
fmul
mov
jno
adc
cmps
ja
fwait
lea
jo
or
adc
add
jge
out
cwde
mov
push
pop
ret
pusha
add
push
hlt
loopne
jns
push
or
inc
sub
add
push
jg
pop
dec
push
add
adc
push
(bad)
(bad)
sbb
add
adc
ficomp
je
xor
scas
cmp
or
pop
ret
rcr
sti
ja
(bad)
push
and
scas
das
mov
sbb
push
adc
aas
xchg
popa
xchg
neg
add
jge
inc
cli
push
push
mov
mov
adc
mov
pop
xchg
out
xchg
and
mov
nop
inc
mov
and
fnstcw
mov
adc
push
mov
mov
add
xchg
push
push
cvtps2pi
jb
fld
push
add
leave
into
xchg
adc
push
(bad)
scas
mov
ja
and
adc
fcmovbe
sbb
or
sub
outs
pop
in
popa
pop
adc
mov
dec
xor
mov
in
add
or
sub
aad
push
sub
push
fs
jne
add
shr
adc
nop
push
pop
ss
les
dec
lock
mov
lock
lea
test
int3
out
mov
adc
mov
lea
int
adc
xor
mov
inc
lock
pop
jno
jb
push
add
xor
jmp
movs
cmp
jmp
mov
fdivr
(bad)
fcomp
test
popa
sar
jne
retf
(bad)
not
mov
or
push
lea
inc
mov
jne
sub
push
mov
sbb
jl
shl
lea
push
pop
and
jl
cwde
jnp
mov
jne
mov
ins
hlt
sub
jbe
cmp
or
imul
jle
rcl
add
jo
cmp
ins
add
mov
xlat
jle
mov
js
jmp
cmp
fwait
xchg
jae
push
and
lea
sub
xchg
adc
adc
push
es
mov
(bad)
add
sub
mov
jmp
sub
jb
fstp
loope
and
gs
enter
and
iret
cmp
cmp
or
and
(bad)
xchg
add
or
dec
sub
in
aad
and
and
mov
sub
test
sub
dec
push
and
and
jecxz
mov
or
and
or
aas
sub
and
and
mov
push
push
jecxz
xchg
nop
mov
push
and
(bad)
movs
jmp
rcl
fs
(bad)
(bad)
pop
loope
xchg
dec
push
or
fsub
push
sti
add
int3
push
aas
sbb
inc
adc
fstp
and
or
pusha
or
loopne
mov
add
div
mov
cld
lds
std
call
inc
fcom
(bad)
je
jmp
adc
sub
in
mov
cmc
rol
lock
add
js
add
add
dec
aaa
or
jmp
mov
push
add
inc
add
add
fdivp
push
fst
daa
or
inc
add
das
pop
movs
int
push
add
sub
inc
jb
xchg
stos
xor
mov
mov
add
or
aaa
je
popa
cmps
shr
mov
iret
lods
sbb
push
and
popa
retf
add
pop
add
(bad)
in
enter
int3
shr
or
mov
cdq
lods
test
mov
dec
pop
in
dec
adc
and
push
mov
lds
loopne
inc
or
cmp
pop
push
or
xor
sbb
je
dec
lds
cmp
jmp
fiadd
xchg
fild
leave
cmp
pop
cmp
cmc
cmp
(bad)
pop
add
push
cmp
sub
add
hlt
or
fsub
pop
nop
add
pusha
add
loopne
inc
inc
dec
mov
jmp
repnz
jmp
test
pop
mov
inc
pop
jb
adc
in
jp
leave
xlat
loop
imul
jmp
mov
jne
jno
xlat
mov
daa
or
pop
push
adc
push
push
sbb
sbb
enter
or
scas
adc
mov
leave
and
xor
in
test
(bad)
shr
(bad)
ftst
adc
ret
adc
rcr
lea
pop
and
push
add
and
inc
adc
enter
int
loopne
inc
mov
add
add
loopne
add
add
mov
mov
icebp
and
clc
or
pop
rcr
sub
add
in
add
pop
rcr
mov
lea
mov
add
loopne
sbb
or
js
scas
sub
inc
or
in
or
imul
movs
movs
dec
or
and
jge
mov
fnstsw
lea
mov
cmps
dec
inc
jo
ret
sar
cmc
call
scas
ror
das
sbb
mov
or
into
cmp
dec
in
and
popa
mov
je
mov
gs
add
mov
pop
lods
add
rcr
loope
ffreep
push
push
adc
sbb
xchg
icebp
ds
les
popa
jp
xchg
call
inc
mov
jno
lock
or
xor
lea
sbb
mov
ror
arpl
loopne
add
adc
inc
int
add
adc
rol
nop
pushf
adc
in
add
imul
int
pop
sbb
add
or
mov
inc
enter
and
and
push
jns
neg
adc
mov
sbb
nop
or
int
adc
push
test
aaa
add
push
repnz
and
pop
push
push
or
nop
adc
hlt
je
sbb
ror
add
mov
or
hlt
movs
enter
pop
jecxz
in
nop
push
lods
xor
jp
add
add
cmc
shr
mov
dec
mov
ret
xchg
mov
mov
rcl
int3
fdiv
fdiv
sar
(bad)
inc
or
cmc
mov
add
jmp
daa
cmps
imul
jmp
call
sar
add
(bad)
std
or
pop
ret
mov
push
adc
sti
ins
cmp
inc
stc
or
cmp
push
add
dec
xchg
or
sbb
mov
ror
and
add
mov
popa
test
pop
mov
add
dec
mov
mov
in
and
sub
adc
(bad)
fwait
or
cmps
nop
push
enter
cmp
mov
push
out
ret
lods
adc
cmp
pop
add
imul
mov
ret
ins
fadd
inc
mov
jne
pop
or
xor
mov
inc
xor
xchg
cmp
lods
or
inc
shl
adc
mov
fsubr
and
aaa
dec
add
or
ret
jg
test
dec
xlat
inc
cmps
jg
jmp
mov
push
cmp
add
mov
and
xor
ds
mov
mov
pop
sub
(bad)
shr
cmp
sub
les
lods
pop
adc
les
scas
or
pusha
cmp
mov
adc
sbb
add
inc
daa
in
xor
adc
leave
jge
ins
jg
sub
daa
pusha
ror
imul
add
neg
dec
shr
dec
pop
shl
sub
adc
xor
je
sbb
inc
add
and
jmp
in
jb
adc
sbb
xchg
push
enter
cmp
pop
enter
outs
adc
lds
or
out
and
pushf
jmp
push
adc
test
ins
sbb
add
popf
mov
cmc
in
ins
lds
cmp
add
push
add
add
(bad)
out
or
pop
mov
push
cmc
out
add
aam
dec
lahf
fcomp
dec
or
add
dec
sbb
stos
das
jecxz
pop
dec
inc
clc
(bad)
xchg
mov
push
push
loope
rcl
or
je
lock
mov
leave
js
shl
jbe
lock
ins
mov
inc
mov
les
push
fidivr
push
push
jb
or
arpl
dec
push
push
ds
pop
dec
mov
pop
xor
inc
push
sbb
or
xchg
call
xor
or
rcl
stos
sbb
call
xchg
fistp
add
adc
mov
or
ins
pushf
jno
ror
xchg
xor
adc
mov
adc
jp
pusha
xor
jg
dec
cli
adc
xchg
push
push
sbb
adc
xlat
je
xor
push
shl
mov
pushf
add
ror
jb
xor
add
rol
adc
mov
xchg
push
enter
dec
ds
pop
enter
repnz
loop
and
mov
retf
xchg
sub
xor
adc
ret
mov
add
inc
push
fnstsw
xchg
inc
inc
test
jns
mov
push
cmps
mov
cmc
add
jle
in
add
inc
dec
dec
hlt
loopne
xor
push
or
sub
sahf
inc
push
cmp
adc
cmp
inc
mov
sbb
sbb
leave
adc
nop
pop
leave
add
xor
dec
and
test
push
das
in
sbb
sbb
pop
or
xlat
aam
mov
loopne
aam
pop
sbb
loopne
cmc
sub
mov
scas
iret
cmc
mov
aam
mul
test
out
aam
enter
mov
add
mov
mov
inc
jb
out
xchg
lods
xchg
inc
int3
add
and
(bad)
out
sbb
add
add
sbb
lea
nop
add
and
icebp
(bad)
lea
and
xor
clc
mov
es
or
sbb
and
adc
mov
ror
movs
add
loopne
add
adc
mov
pop
sbb
add
jo
fdiv
shufps
add
cld
inc
loopne
inc
enter
pusha
inc
cmc
mov
mov
in
inc
sbb
cdq
jne
mov
ss
cmp
jo
nop
sbb
and
inc
sub
and
stc
sub
lods
add
push
test
adc
push
loopne
add
add
sbb
inc
sti
or
pop
aaa
and
and
movs
in
or
push
add
daa
inc
mov
adc
inc
sbb
adc
add
jge
ja
sbb
gs
mov
add
rol
fcomp
ret
leave
jne
enter
cmps
xor
push
adc
mov
call
fstp
bound
sub
test
rcl
sub
inc
sub
add
mov
popf
mov
mov
pop
call
or
fadd
shl
jo
and
cli
lock
push
sub
std
jmp
adc
add
dec
mov
add
mov
sbb
fwait
sbb
adc
mov
int3
jecxz
scas
dec
pop
add
adc
pop
fcomp
sbb
les
xchg
popf
pop
add
pop
xchg
jae
ret
inc
xor
push
test
and
add
dec
sbb
add
mov
sub
and
sbb
jecxz
pop
std
adc
and
or
ror
or
sti
cmc
arpl
aam
or
js
fadd
jbe
or
mov
or
pop
mov
test
xchg
clc
dec
or
test
mov
test
jbe
xor
mov
push
add
xor
call
mov
out
ffreep
xor
mov
add
pop
mov
loop
cmp
test
and
push
push
adc
add
add
pop
imul
movs
dec
lods
loopne
dec
or
xlat
inc
stos
add
(bad)
stos
xchg
sub
loopne
lods
inc
mov
fst
daa
fwait
xchg
add
nop
inc
push
adc
rcl
push
mov
pop
push
pop
jo
mov
sbb
push
ins
sub
mov
jp
enter
lock
test
and
fist
xchg
or
add
sbb
add
loopne
movs
push
cmp
jmp
xor
int3
cmp
adc
js
dec
test
adc
rol
jo
push
push
js
mov
and
adc
add
aam
pop
popa
pop
pop
ret
sub
test
(bad)
test
jge
inc
push
push
rol
and
jbe
or
call
out
sbb
iret
dec
or
inc
mov
cmp
add
movs
pop
adc
mov
push
rol
movs
adc
xor
cmp
or
bound
cmp
push
adc
test
or
out
xor
push
dec
and
aam
sbb
inc
push
fcmovnbe
sbb
jge
push
adc
push
push
sti
sbb
jge
test
mov
shr
adc
cmp
sub
sub
xor
adc
adc
lahf
mov
xchg
pop
ja
sub
aad
or
inc
push
shr
cmp
add
push
leave
xchg
loop
lock
adc
add
nop
inc
movs
add
sbb
mov
mov
xchg
icebp
fcom
imul
push
xchg
and
cdq
mov
xchg
js
add
dec
sbb
dec
or
or
iret
test
sbb
adc
fcompp
daa
(bad)
sub
sub
sub
and
add
push
(bad)
xor
addr16
loope
and
loop
adc
add
push
fsub
js
rol
test
adc
jg
inc
test
pop
jg
movs
das
sbb
or
cmp
add
pushf
push
xchg
or
xchg
push
clc
sub
nop
lea
mov
ret
dec
mov
cmp
sbb
or
das
nop
pop
push
pushf
fcom
call
xchg
fnstsw
test
bound
inc
push
fsubr
inc
adc
dec
add
and
mov
sbb
sbb
sub
sub
adc
push
adc
jmp
jnp
dec
inc
cs
std
jmp
gs
push
or
stos
add
bound
xchg
sub
xor
adc
xor
mov
adc
push
mov
add
xchg
out
inc
bound
jmp
aam
add
add
aam
(bad)
scas
stos
add
lods
pushf
mov
mov
adc
gs
dec
ins
dec
test
and
ror
leave
add
dec
sbb
and
sbb
sbb
loopne
sbb
dec
and
push
cmp
pop
push
dec
leave
add
push
adc
sbb
cmp
adc
mov
(bad)
popa
jmp
mov
push
push
inc
or
imul
dec
sbb
gs
sub
sub
dec
inc
mov
mov
gs
aam
mov
loop
add
(bad)
fdiv
and
push
fs
cwde
add
ret
mov
push
mov
aaa
mov
pop
sbb
scas
mov
add
pop
add
nop
xchg
push
sub
lods
sub
adc
sbb
xor
test
inc
fs
add
iret
mov
and
shl
add
mov
mov
sub
and
adc
test
(bad)
mov
push
fcomp
push
das
add
retf
leave
and
pop
sub
enter
push
or
cwde
test
fbld
sub
pop
gs
jl
cmc
add
bound
fadd
bound
cmp
mov
(bad)
test
jge
and
jge
push
dec
or
and
jecxz
loope
pushf
cmp
or
loope
push
(bad)
fsub
ficomp
mov
adc
ss
lds
ret
sbb
xchg
sub
neg
mov
das
xor
ficomp
and
test
dec
push
and
punpckhbw
or
imul
push
adc
adc
cmp
je
fwait
or
call
popf
dec
ins
nop
inc
fcom
in
add
scas
jmp
out
jo
enter
test
pusha
lods
icebp
rcr
sub
mov
adc
mov
stc
test
dec
push
mov
and
cmp
nop
push
stos
inc
out
xchg
push
aas
shl
(bad)
xor
pop
dec
xor
push
pop
pop
pop
or
pop
mov
mov
or
or
ret
or
xor
xor
pop
jae
les
cmp
fistp
arpl
push
adc
pop
adc
lock
stos
movs
xor
add
sbb
dec
inc
js
xchg
js
ins
add
sub
daa
pop
and
lods
rcr
inc
sub
mov
lds
cmp
pop
inc
adc
ja
xchg
add
adc
test
sbb
xlat
clc
push
pop
push
jnp
xor
popf
pop
cmp
and
push
dec
xor
and
dec
add
cmp
add
ds
push
mov
push
daa
add
push
jo
push
push
cmp
dec
push
adc
daa
push
in
pusha
push
aaa
pusha
adc
test
push
mov
mul
push
pusha
xchg
mov
jno
sbb
ss
pop
jge
jecxz
inc
or
mov
mov
xor
loopne
lods
sub
les
pop
mov
pop
jb
inc
sbb
popa
ret
sbb
push
mov
pop
add
nop
rcl
xchg
test
nop
arpl
adc
mov
cmp
cmp
sbb
ss
pop
rol
xor
js
je
cmp
cmps
pushf
sub
fst
mov
push
mov
enter
and
rcl
and
push
nop
lea
and
fs
pusha
and
mov
and
cmp
cwde
in
cmp
dec
pusha
jnp
push
dec
cmp
xchg
lea
dec
xchg
lea
push
stos
shl
rol
mov
sub
mov
int
sbb
xchg
out
push
and
and
cld
xchg
pusha
and
push
sbb
push
or
and
mov
mov
mov
mov
mov
popf
mov
inc
mov
je
push
sar
loop
push
stos
je
cmp
xchg
jno
mov
sbb
movs
cs
stos
enter
or
aam
pushf
dec
push
xor
sbb
dec
scas
pop
rcl
pop
push
lahf
or
push
push
iret
(bad)
mov
cld
add
push
dec
shl
lock
push
inc
lea
mov
add
scas
dec
mov
push
scas
add
add
jle
(bad)
xor
push
mov
mov
cmp
sub
outs
or
inc
xor
or
rcl
add
mov
arpl
mov
aaa
sbb
jle
jo
iret
in
fistp
xor
cwde
mov
and
and
or
out
dec
or
mov
inc
aad
mov
adc
pop
aad
mov
ror
and
pop
push
add
dec
pusha
popa
cmps
or
jp
aad
rcl
push
jl
lahf
xor
dec
iret
pop
test
in
push
test
bound
sub
or
xor
or
add
fs
push
nop
popa
or
add
pushf
inc
cmps
fs
bswap
pusha
xchg
add
xchg
cwde
pusha
adc
ret
adc
nop
clc
xchg
jne
ins
ins
pusha
jecxz
dec
(bad)
jmp
adc
xor
inc
push
sbb
or
inc
mov
mov
aam
ret
cwde
adc
mov
pop
cmps
movs
daa
push
sub
push
and
add
mov
xchg
ficom
xchg
xchg
inc
bound
lods
sub
mov
ds
and
mov
rol
add
sbb
dec
pop
push
test
sbb
pop
push
jno
xlat
or
sub
std
and
daa
sbb
cmp
(bad)
mov
mov
dec
sbb
adc
(bad)
or
xor
xor
arpl
inc
xor
inc
push
adc
jo
push
sub
xchg
clc
add
gs
pop
add
sub
and
mov
clc
fs
repnz
xchg
sub
and
cwde
fs
data16
es
pop
(bad)
mov
jne
arpl
and
dec
inc
mov
push
adc
sbb
add
xchg
jl
mov
icebp
jae
mov
(bad)
repz
lea
push
lea
cld
icebp
pop
cmp
aad
cmp
in
inc
or
cmp
ror
inc
jno
sbb
xchg
pusha
and
fadd
into
add
jb
test
fcom
sbb
ins
out
sub
ret
xor
mov
pusha
sub
or
inc
add
sub
or
lea
icebp
int3
cmp
cmp
ins
clc
and
loope
or
and
inc
mov
push
xchg
pop
leave
mov
(bad)
mov
add
int3
sahf
sub
inc
cmc
enter
and
add
xchg
dec
pop
add
add
and
pop
sub
pop
pop
pop
sub
add
rcr
or
adc
mov
mov
add
mov
test
push
xor
nop
sbb
leave
popa
adc
js
xchg
test
mov
push
pushf
cmp
jge
adc
inc
clc
mov
shl
dec
cs
and
fcomp
es
mov
jp
add
push
lds
push
push
pop
les
std
push
imul
or
loopne
mov
push
mov
rol
mov
out
sub
and
push
jg
inc
das
adc
push
push
rcl
pop
lods
sbb
sub
sub
nop
rol
xor
jbe
push
inc
mov
mov
sbb
push
jb
sbb
sbb
sub
cmp
push
xor
cmp
stos
or
mov
pop
icebp
ins
call
clc
sbb
inc
and
cmp
adc
aas
test
(bad)
push
pop
jmp
xor
clc
in
push
jmp
jmp
inc
pushf
loope
fdivr
mov
imul
clc
mov
sbb
push
sub
gs
or
pusha
loopne
and
or
push
cmp
dec
pop
fdivr
and
push
and
pop
or
test
mov
push
inc
mov
arpl
add
cmp
push
xor
sbb
lock
inc
ret
add
sbb
std
imul
sub
add
push
dec
or
aad
push
icebp
mov
jo
push
push
nop
and
add
mov
hlt
add
sbb
mov
bound
dec
mov
je
in
mov
sar
sbb
jmp
cmp
jae
inc
sbb
mov
inc
inc
inc
lods
cmp
jne
add
jb
pop
mov
inc
or
idiv
adc
mov
rcr
outs
cmp
and
add
addr16
or
aam
loope
adc
repnz
adc
mov
dec
mov
fwait
pop
cmps
adc
shl
dec
fcom
cmp
cmp
loopne
xor
mov
in
arpl
rcl
lea
retf
pop
push
in
or
fisubr
pop
jno
adc
lods
mov
aad
inc
and
outs
mov
pop
or
push
jmp
stos
adc
dec
lahf
push
mov
mov
lock
cmp
movs
fadd
mov
push
out
imul
into
out
dec
sub
cmc
cmp
push
adc
jecxz
into
mov
add
cmp
add
push
xchg
iret
loopne
jbe
or
imul
inc
pop
pop
mov
imul
loopne
or
add
mov
mov
inc
and
and
es
shr
sbb
push
sub
popa
pop
pop
sub
lds
push
pop
mov
popa
inc
jae
imul
fstp
rcr
test
pop
je
and
es
adc
or
adc
fdiv
icebp
adc
dec
mov
and
sub
or
pop
mov
cmp
jno
dec
or
inc
inc
or
adc
push
adc
dec
fdiv
sbb
movs
dec
cmp
call
imul
inc
inc
aam
add
loope
mov
les
gs
fld
or
mov
sbb
aam
push
sbb
lods
pop
(bad)
mov
aas
xchg
sbb
std
adc
add
push
sub
rcl
int
add
test
je
cmp
jne
mov
inc
fmul
inc
inc
jae
call
popa
mov
add
mov
pop
push
ins
and
repz
add
fadd
add
mov
int3
inc
call
and
dec
cmp
or
out
aas
fstp
arpl
push
fwait
(bad)
push
jmp
push
sbb
bound
and
cmovb
loope
push
adc
imul
pop
in
cmc
nop
fild
mov
pop
fcom
dec
xchg
xor
mov
lds
jns
mov
test
cmp
add
push
int
or
and
sub
stc
sbb
jl
sub
loopne
fstp
add
aam
(bad)
dec
retf
inc
push
lock
(bad)
cmp
inc
push
imul
mov
lea
dec
inc
cmps
add
mov
loopne
add
and
inc
dec
fisubr
lea
push
dec
les
add
enter
mov
clc
mov
jo
test
in
adc
je
jbe
das
adc
scas
les
js
push
dec
sbb
dec
popa
lea
mov
or
pop
sub
rcr
mov
adc
add
push
fistp
xchg
pop
mov
cdq
jge
dec
ret
js
push
and
or
inc
rol
loope
sahf
push
ins
sbb
inc
cmc
nop
push
imul
push
ror
movs
jmp
stos
add
stc
test
push
shr
sub
xor
adc
push
pop
or
or
loopne
jl
pop
cwde
enter
inc
cmp
std
ins
movs
test
or
lea
push
popa
or
push
in
push
test
jle
lea
cmps
call
sub
fbstp
sbb
add
or
cmp
jl
inc
rol
mov
xchg
imul
add
inc
sub
lock
pop
test
call
add
ret
je
mov
cmp
mov
mov
hlt
add
push
adc
jmp
inc
pop
pop
aas
rol
xor
ror
push
sub
push
push
or
es
out
cmp
es
leave
mov
ret
je
inc
sbb
add
out
inc
sbb
mov
and
or
retf
fsubr
pop
rcl
dec
loop
ror
or
cmp
sahf
cmp
push
and
dec
mov
or
and
jle
neg
aad
ss
cmp
je
in
jl
push
shl
mov
mov
push
xor
into
je
and
jb
cdq
ret
xor
sbb
pop
xchg
cwde
mov
xchg
std
int3
xchg
and
sbb
mov
mov
sbb
adc
and
or
and
jmp
adc
push
mov
fist
push
mul
mov
add
push
fadd
jne
sbb
test
jne
shl
or
push
jmp
mov
mov
push
std
pop
inc
mov
mov
(bad)
ss
jle
cmp
push
cmp
push
outs
jg
out
or
scas
xor
xor
jne
push
dec
jae
add
mov
pop
push
(bad)
into
mov
inc
and
push
lods
and
rcl
mov
(bad)
ins
xchg
or
rol
add
add
fadd
mov
sbb
lds
cmp
xchg
lock
push
rcl
call
and
cmpxchg
xchg
push
lea
sub
dec
mov
je
or
dec
fmul
fcomi
cmp
xchg
push
cmp
test
inc
fisub
rcl
lock
js
dec
shr
fld
pop
add
dec
mov
das
idiv
push
dec
repnz
xchg
mov
cmp
add
jg
lods
xor
fisttp
inc
sbb
cmp
pop
leave
(bad)
out
add
inc
(bad)
std
or
push
xor
das
add
je
xor
ss
jle
and
push
inc
jo
ss
and
push
push
add
ret
cmp
xlat
adc
xor
jl
adc
mov
(bad)
call
mov
mov
sbb
adc
out
sti
adc
je
or
push
aas
lods
and
mul
adc
and
and
sub
cwde
cwde
push
scas
mov
aaa
inc
mov
cmps
adc
clc
add
(bad)
adc
mov
dec
sbb
pop
pop
pop
jae
(bad)
or
ret
and
dec
fs
aas
and
mov
out
or
cmps
test
or
inc
daa
pop
jp
add
ficomp
xchg
dec
push
jl
sbb
iret
rcr
sar
mov
mov
or
daa
push
sbb
or
loop
and
fld
xchg
ds
inc
push
dec
movlps
or
dec
sbb
cmp
pop
das
inc
pop
sub
inc
pop
and
and
push
sub
push
push
call
rcl
mov
push
(bad)
pop
add
cmc
ret
dec
and
std
sbb
or
sub
xor
jne
mov
clc
lock
xor
test
jle
adc
xor
fs
repnz
pop
xor
push
jge
jmp
test
ret
fnstsw
or
adc
mov
xor
sbb
push
mov
dec
clc
cmp
push
inc
dec
dec
xchg
add
xor
sahf
pop
int
xor
push
cmp
int3
mov
push
push
add
bt
js
jmp
cs
inc
push
inc
mov
inc
jg
(bad)
fisttp
jne
mov
jne
mov
aaa
jmp
test
out
jne
or
aam
imul
add
lods
inc
fld
or
loopne
fcomp
enter
jns
mov
inc
or
dec
aam
fidivr
add
sub
and
jp
add
add
xchg
pop
arpl
or
jge
jecxz
jmp
and
scas
cmp
jle
and
outs
mov
enter
cmp
ja
in
sub
jmp
xor
daa
and
pop
test
inc
inc
or
aaa
xchg
adc
and
or
(bad)
jne
enter
shr
mov
add
shl
call
sub
arpl
add
pusha
or
push
mov
xchg
mov
js
retf
and
fadd
add
xchg
js
mov
adc
test
or
sbb
inc
xor
add
pusha
js
fcom
xor
dec
inc
mov
push
sbb
pop
and
fwait
mov
add
cwde
imul
mov
xchg
push
jge
or
loopne
movs
dec
cmps
mov
shr
adc
sub
in
mov
test
pop
ins
push
and
outs
call
mov
adc
icebp
push
xchg
add
and
jb
nop
or
adc
mov
mov
rcl
inc
pop
mov
mov
pop
test
push
add
or
mov
adc
in
push
sbb
aas
or
mov
sub
pop
mov
adc
shr
ja
push
sbb
(bad)
pop
out
pop
and
push
sbb
dec
outs
scas
sub
movzx
fstp
leave
cli
add
mov
popf
xchg
dec
shr
sbb
es
shr
cmps
sub
push
and
and
mov
nop
or
push
dec
push
push
inc
add
outs
cmp
inc
loopne
sub
cmp
je
xor
mov
pop
movs
mov
add
xchg
xlat
mov
add
adc
jl
inc
iret
add
push
movs
add
in
aam
jecxz
and
ins
xor
sub
push
ins
loopne
scas
inc
cmp
test
ins
dec
mov
push
call
xchg
shr
mov
pop
pop
aaa
test
lods
sbb
call
test
pop
inc
add
or
sar
aam
adc
mov
adc
ret
ror
inc
xchg
cld
lods
fwait
pop
mov
cld
cmovns
jmp
lods
imul
or
mov
mov
add
call
stos
sub
pop
test
mov
sub
add
add
punpckhdq
or
push
adc
and
loope
sbb
rcl
retf
push
ficom
stos
nop
jno
mov
sub
or
outs
push
push
and
dec
popf
repz
dec
xchg
nop
aad
daa
ret
pop
sub
dec
fimul
in
jle
and
mov
ss
jnp
add
inc
test
mov
pop
sub
adc
pop
repz
pop
or
sub
lock
and
push
add
push
and
inc
jb
smsw
sbb
pop
pop
jo
adc
sub
psubsb
cmc
xchg
add
ror
lock
add
add
xor
xor
sahf
push
xor
and
mov
je
dec
leave
push
mov
out
mov
add
sbb
add
add
enter
jmp
retf
test
sbb
add
(bad)
mov
push
pusha
rcl
pop
cmp
jb
nop
lea
dec
pushf
add
bound
or
add
cwde
jne
lahf
sub
and
ror
push
enter
push
push
inc
dec
and
xchg
push
cdq
pop
idiv
jae
int3
or
call
mov
sbb
or
call
pop
fimul
add
fldenv
aas
push
xchg
das
fwait
call
or
daa
sbb
mov
or
and
and
dec
push
add
or
push
inc
mov
test
mov
retf
push
inc
pop
test
lds
shr
not
not
and
mov
or
sbb
adc
call
jmp
out
add
pop
pop
jae
push
push
add
inc
jmp
and
jle
jle
scas
and
ss
jbe
mov
lods
mov
(bad)
inc
cmp
jne
inc
inc
shr
inc
idiv
(bad)
jb
out
adc
adc
adc
jl
mov
out
push
lock
mov
lods
das
add
jne
std
adc
retf
add
cmp
jp
test
or
add
mov
fwait
movs
ds
add
mov
js
pop
or
ret
xchg
push
push
mov
adc
jo
push
jg
cmp
clc
aam
aad
push
mov
mov
dec
add
or
js
or
or
(bad)
sub
or
data16
or
(bad)
cmps
xor
sbb
loopne
mov
pop
push
push
mov
add
xchg
test
or
frstor
jge
test
lea
jbe
adc
fucomp
mov
cmp
pusha
adc
and
dec
push
jecxz
fsubr
xor
push
ret
sti
sub
ja
jne
(bad)
jo
cmp
xchg
je
jle
in
inc
sbb
inc
lahf
lock
push
xchg
daa
xor
add
cs
mov
in
das
push
add
cmp
push
xchg
push
pop
(bad)
(bad)
pop
les
adc
adc
and
or
lods
xor
cmp
inc
dec
lea
repnz
xchg
cmp
ins
or
pop
or
fdiv
ja
or
or
sysenter
ss
dec
add
ret
das
add
mov
lock
jnp
pminub
push
adc
clc
or
or
je
or
cmp
add
pop
or
add
pop
ss
dec
mov
pop
(bad)
push
sub
pusha
loope
mov
ss
pop
xchg
sub
sbb
outs
shl
add
cmc
push
and
and
dec
cmc
xchg
add
ins
jmp
push
pop
std
and
jecxz
xor
fnstsw
and
div
shl
cdq
jnp
sbb
inc
call
and
inc
mov
lea
xor
lock
rcl
or
pop
repnz
cmp
jmp
lahf
jg
or
push
cmp
or
or
push
cmp
jne
push
inc
pop
fisttp
pop
mov
leave
repnz
inc
pop
jmp
adc
or
mov
sbb
mov
in
(bad)
call
lock
je
push
test
sub
add
or
lock
dec
(bad)
lods
sub
add
stos
cs
enter
popa
popa
and
or
popa
adc
xchg
mov
xor
pop
aad
retf
and
inc
add
push
out
rcl
aam
test
push
and
cld
push
and
xchg
fcom
rcl
fnstenv
shl
mov
mov
fstp
pop
inc
ror
test
movs
mov
cmps
shl
add
or
les
sbb
bound
cld
data16
aaa
in
movs
jne
xor
cmp
jb
or
(bad)
and
mov
stos
icebp
retf
leave
sub
xchg
mov
movs
inc
jno
dec
movs
cmp
cmp
add
xor
and
dec
add
jg
mov
cmp
add
and
and
and
xchg
nop
or
xchg
push
xor
pop
pop
ror
call
pusha
adc
and
ds
add
xor
adc
pop
mov
sar
mov
lea
jbe
xor
push
xor
add
or
adc
rcr
dec
sbb
push
lock
inc
cmp
add
xor
aad
adc
clc
push
pusha
lock
jmp
inc
xor
and
xchg
fwait
(bad)
push
dec
and
mov
lahf
adc
dec
enter
pusha
jle
leave
ret
xor
clc
sbb
ret
outs
adc
pop
pusha
add
das
dec
or
sub
xchg
mov
ret
and
adc
inc
add
or
adc
repnz
js
ret
inc
subps
add
add
les
jnp
mov
inc
int
xor
sub
dec
out
movs
xor
xor
test
or
or
and
jne
sbb
push
adc
mov
sub
lea
ror
add
push
push
pop
ins
imul
push
test
ror
pop
and
or
mov
sbb
retf
push
xor
or
jmp
push
or
je
sub
add
add
adc
add
adc
or
xchg
sbb
adc
add
and
sbb
dec
add
cmp
adc
pop
cmp
inc
inc
cmp
fdiv
mov
cmp
sar
nop
adc
add
sbb
retf
mov
xchg
mov
sbb
fmul
xor
out
cdq
(bad)
xor
sbb
jle
imul
jge
in
shl
cwde
pop
pop
ins
inc
sub
inc
xor
pop
cmp
jecxz
push
push
inc
movs
lock
push
stos
or
xchg
mov
add
dec
pop
out
and
add
push
dec
or
mov
rcr
inc
pop
and
inc
jnp
xchg
inc
popa
jmp
cmps
mov
push
add
ins
inc
fdivr
push
mov
daa
repz
jg
sub
or
inc
sub
lods
lods
dec
lahf
fsubr
push
add
je
push
fist
dec
or
ror
jno
mov
xor
mov
(bad)
mov
xor
xchg
ins
outs
sar
adc
mov
mov
inc
inc
cmp
sub
and
clc
test
pushf
shr
cmp
shr
pop
pop
pop
ret
test
inc
rcr
jnp
mov
cmp
jo
cli
ret
je
mov
mov
jge
add
mov
push
lds
out
ficom
or
add
or
jmp
add
push
hlt
stos
ss
mov
inc
add
mov
jo
rcl
and
and
xor
xorps
(bad)
pop
dec
pop
lea
jg
pop
adc
pusha
lock
add
daa
push
and
mov
inc
shl
pop
or
xchg
xor
rol
loope
xchg
enter
out
movs
add
inc
pop
sub
push
(bad)
pop
jnp
sbb
mov
adc
sub
jbe
add
add
xchg
add
sub
(bad)
ficomp
xor
aas
inc
fsubr
push
add
mov
xlat
xchg
push
test
and
sbb
and
mov
je
mov
mov
add
lods
imul
mov
pop
dec
nop
sbb
clc
and
lock
jae
dec
cmp
je
push
push
or
fisub
xlat
inc
sbb
pop
pop
or
inc
in
adc
add
jnp
pop
adc
sbb
sub
add
dec
or
test
and
mov
jp
jle
adc
nop
pop
pop
inc
pop
add
mov
into
ret
adc
or
cmp
(bad)
mov
stc
loopne
mov
ja
cmp
add
mov
mov
fs
(bad)
call
push
mov
push
nop
add
inc
dec
dec
sub
sub
rol
or
xor
out
or
add
inc
pop
adc
push
ret
dec
cmp
adc
ror
fbstp
sbb
and
and
adc
xor
int
shr
ror
inc
mov
add
mov
ret
push
bswap
ret
pop
fistp
mov
mov
pop
sub
inc
add
mov
popf
loope
test
xor
and
ficomp
adc
(bad)
lock
jge
pop
fwait
(bad)
dec
sbb
mov
xchg
pop
(bad)
xchg
and
xchg
jle
bound
fcom
dec
imul
outs
lock
jmp
add
and
dec
lods
push
imul
push
inc
sbb
mov
shl
sub
sub
xor
mov
retf
inc
cmp
outs
sub
cld
push
jg
test
inc
data16
mov
mov
in
out
jmp
je
mov
jne
adc
add
mov
inc
xor
leave
call
test
mov
adc
cmc
dec
fs
push
(bad)
arpl
push
nop
cmp
sbb
adc
push
jnp
jmp
lea
push
ss
jmp
je
pop
pop
fsubr
into
adc
fdivr
repnz
aam
or
push
adc
cmp
add
push
cmp
push
push
pusha
not
pop
pushf
or
or
add
cmp
mov
sbb
cmc
inc
add
push
jmp
push
add
adc
test
cmp
ucomiss
test
pop
push
mov
aaa
js
jae
push
imul
adc
dec
test
push
jmp
push
cmp
xor
pop
inc
push
aam
imul
imul
or
(bad)
cwde
inc
mov
mov
jle
push
push
push
or
enter
mov
aaa
inc
and
or
adc
and
movs
jb
ins
jmp
jns
and
sbb
and
adc
dec
or
mov
pop
push
test
xor
mov
mov
lds
adc
loope
xchg
mov
add
inc
add
cmp
mov
into
dec
and
add
in
add
adc
inc
and
cmp
cwde
add
add
or
cmp
cmps
sbb
cdq
popa
lea
jne
jmp
adc
jmp
mov
or
add
inc
jo
and
fcom
call
inc
inc
add
ja
mov
mov
inc
sbb
test
add
or
dec
dec
cmp
ja
cmp
je
dec
or
inc
xchg
and
add
out
test
ins
sbb
test
(bad)
imul
or
adc
aad
sbb
lods
pop
and
outs
div
inc
push
add
adc
cmp
lods
add
and
rol
mov
mov
inc
add
cmp
js
sbb
call
sahf
and
retf
jmp
test
add
jp
and
or
mov
movs
add
movs
and
or
test
nop
add
cmps
or
sbb
inc
test
dec
jmp
clc
clc
lods
xchg
and
push
clc
ja
test
or
test
enter
shr
push
pop
add
adc
gs
ja
add
jmp
add
push
add
add
add
pop
adc
xor
pop
xor
rcr
or
(bad)
jmp
push
mov
mov
cmp
pop
in
inc
cmp
push
lds
inc
pop
xor
add
aaa
rol
data16
pusha
aas
push
adc
nop
jb
push
sbb
xchg
or
and
inc
cs
lea
lods
mov
xchg
lea
ins
xor
cmp
and
and
cmp
adc
mov
int3
adc
cs
mov
sbb
rol
mov
and
pop
sbb
imul
rol
fadd
xor
cmp
fs
add
and
adc
aam
and
and
ret
add
imul
imul
pop
js
aaa
inc
mov
inc
sub
inc
fdivr
adc
cmp
add
(bad)
rol
mov
test
sbb
mov
rol
inc
mov
xchg
add
push
enter
cs
dec
and
cwde
enter
xor
and
enter
cdq
inc
mov
test
test
add
mov
push
pop
sbb
push
sub
push
fwait
or
jae
adc
pusha
shl
xor
pushf
add
rol
cmp
and
loopne
mov
xchg
call
push
push
bound
push
xchg
adc
mov
sub
add
sahf
fst
loope
scas
push
nop
push
dec
cmps
jle
mov
cmp
mov
lods
lock
ins
mov
sahf
jmp
add
stc
sub
lea
cwde
and
inc
push
aad
int
pop
mov
pop
sbb
(bad)
sub
imul
add
es
iret
test
sbb
(bad)
mov
pop
inc
and
push
push
loope
es
mov
pop
mov
pop
pop
pop
jp
dec
shr
fs
sbb
repnz
xor
mov
sbb
loop
sbb
cmp
xor
push
ins
or
inc
adc
add
sbb
arpl
cdq
push
mov
and
movs
sti
test
sbb
mov
sbb
into
inc
jg
adc
cmp
loope
fiadd
dec
(bad)
sub
push
cmp
jge
push
std
inc
sub
push
or
fucomi
cmps
mov
ins
jae
jg
sbb
rol
pop
inc
add
cmps
or
repz
not
fcomp
fst
daa
div
adc
add
repz
or
add
(bad)
daa
imul
movs
hlt
and
xchg
inc
mov
test
into
jle
xchg
movs
push
sub
adc
iret
enter
adc
dec
call
rol
enter
xor
pop
sbb
cmp
fcomp
push
push
add
adc
dec
cli
sbb
(bad)
cmp
add
adc
mov
add
dec
ror
cs
dec
nop
stos
ja
cmp
jbe
in
xchg
fcom
js
cmps
cdq
add
imul
xchg
adc
sbb
dec
add
cs
xor
push
adc
push
xor
outs
push
and
ret
add
adc
cmp
adc
aaa
shl
lods
mov
jl
push
fnstenv
test
push
sbb
clc
cmp
clc
lea
test
jne
lea
cmp
je
sbb
aas
adc
and
cld
mov
sbb
add
push
jne
dec
cdq
dec
jno
rcr
inc
inc
inc
adc
movs
add
pop
jno
lahf
dec
inc
loop
fst
adc
cmp
pushf
push
add
ret
paddusw
mov
jge
dec
mov
pop
sub
out
ret
imul
sub
add
push
jno
sbb
cmp
std
sar
rol
or
pushf
loopne
and
mov
jbe
sub
icebp
fisub
adc
or
add
cmp
adc
push
(bad)
sub
push
push
outs
inc
adc
cmc
add
xor
adc
arpl
cmp
xor
adc
adc
les
ret
sar
add
push
ret
add
adc
and
push
or
jo
adc
mov
lods
inc
xchg
xchg
cmp
and
and
out
add
xchg
loope
repnz
xchg
sbb
rcl
inc
add
adc
xor
and
dec
ret
rol
mov
cmp
loopne
shl
adc
out
sbb
sub
sbb
push
aam
add
das
pop
adc
ins
mov
mov
xor
test
or
nop
jmp
add
sti
mov
add
push
mov
adc
inc
inc
daa
repz
inc
sbb
ins
ret
xchg
mov
rcr
cmp
and
inc
push
pop
cwde
push
lahf
les
ret
ret
jl
aad
xchg
mov
or
add
add
and
ins
sub
push
adc
into
mov
add
cmp
adc
cmp
rcl
std
add
jp
cdq
xor
lods
add
sbb
sbb
inc
(bad)
fisttp
sbb
or
test
mov
pop
sbb
bound
or
or
xchg
pop
adc
or
add
add
or
jge
fbld
adc
mov
loope
cdq
scas
xor
loop
xchg
xor
mov
fwait
test
std
mov
gs
push
push
icebp
(bad)
sub
cs
dec
inc
and
inc
loopne
sti
jmp
fisttp
(bad)
int
push
and
lock
pop
ins
or
jp
push
xor
xchg
adc
mov
addr16
and
adc
ja
mov
js
mov
mov
rcr
add
xor
fs
and
and
add
add
inc
dec
add
lds
nop
xor
inc
dec
pop
loopne
sbb
mov
push
and
fwait
push
and
fisttp
retf
add
sub
jg
and
jo
add
fimul
stos
fdiv
add
sub
outs
repnz
ror
daa
add
leave
(bad)
lock
pop
jb
div
add
jbe
sub
iret
pop
mov
sbb
cmp
into
xchg
mov
sbb
xchg
push
push
or
out
loopne
add
add
push
arpl
lods
sbb
stc
outs
cwde
rcl
push
mov
loopne
fdivr
outs
pop
(bad)
out
xor
inc
add
push
ss
jmp
scas
inc
sbb
mov
pop
pop
mov
mov
sbb
pop
ins
add
push
es
mov
mov
pop
adc
(bad)
int
fwait
add
les
fsubr
out
fucomi
stos
adc
push
or
jle
jle
or
jnp
out
int
movntps
test
(bad)
add
and
or
add
or
pusha
bound
add
loop
(bad)
adc
mov
push
add
sub
add
cmp
xchg
mov
outs
adc
sar
(bad)
mov
call
dec
je
adc
sub
addr16
jo
out
add
pop
or
push
das
inc
rol
jg
les
mov
inc
sbb
ret
add
or
inc
fs
popa
movs
stos
icebp
jg
loope
mov
call
add
mov
push
mov
jge
sub
adc
pop
sub
xchg
pop
cmp
imul
dec
xor
push
xor
loope
rcl
retf
test
je
test
in
dec
mov
cwde
mov
inc
sub
jbe
mov
jle
sub
loop
jge
sbb
jne
pop
mov
cmp
cld
imul
push
into
jmp
adc
jne
push
sub
sub
stc
jbe
dec
ret
sub
and
sbb
jg
jmp
push
imul
adc
inc
and
fs
add
je
aam
pop
stos
out
fadd
or
xor
jmp
movzx
pop
or
xlat
dec
sbb
fistp
data16
imul
xor
enter
dec
sub
adc
jl
add
(bad)
fcomp
jnp
scas
push
std
and
gs
setne
pop
out
dec
jmp
(bad)
sub
out
push
test
add
ret
adc
add
jmp
and
adc
mov
inc
sbb
jae
lahf
sub
adc
add
pop
je
test
add
push
rcr
mov
call
xchg
sbb
loopne
ins
cmp
test
xchg
cmps
js
movs
pop
outs
cmp
add
sub
xor
push
pop
das
repnz
pop
xor
xor
adc
test
ret
loop
aad
mov
mov
inc
imul
jp
aad
add
xchg
xchg
in
push
inc
rol
push
xor
mov
bnd
add
xor
push
sbb
fisttp
fwait
popaw
shr
lea
push
xlat
jge
pop
add
xor
mov
in
in
and
push
adc
fs
mov
scas
push
shr
ror
add
and
add
sub
pusha
add
or
in
add
cmp
popf
and
or
adc
into
inc
retf
ins
mov
mov
mov
and
stos
fld
test
sbb
or
sbb
xlat
jge
or
lods
ret
mov
or
jge
ret
push
mov
aas
fwait
test
push
in
je
arpl
or
(bad)
push
(bad)
pop
mov
repnz
mov
add
push
mov
push
adc
clc
adc
add
or
sub
dec
mov
push
add
add
gs
mov
inc
ret
dec
add
fs
js
or
and
add
mov
int
or
sub
or
sub
mov
sub
mov
and
add
or
sub
and
push
push
add
les
loopne
add
lods
jb
js
dec
inc
jno
popf
jg
push
mov
loope
pop
cmp
push
pop
inc
or
test
scas
push
or
adc
popf
clc
(bad)
nop
rcr
push
sbb
cmp
js
add
add
mov
and
mov
add
push
movs
test
or
pop
xchg
arpl
sahf
cmp
mov
mov
pop
add
test
in
out
or
and
sub
dec
cmp
add
inc
lods
jnp
jle
das
and
mov
sub
add
shl
and
movs
repnz
xor
jb
les
cmp
imul
mov
mov
inc
add
retf
cmp
or
into
ror
push
leave
mov
add
dec
fisttp
push
je
push
sbb
add
xor
sub
and
cs
es
nop
int3
gs
das
and
test
(bad)
push
inc
leave
mov
fdivr
jo
mov
shl
mov
add
jmp
push
xchg
dec
push
or
add
jmp
push
push
pop
daa
add
cdq
add
fnstcw
push
ror
ficomp
fmul
int3
(bad)
mov
in
push
cmp
and
xor
sbb
or
ss
inc
cwde
loopne
jne
scas
add
mov
movs
test
dec
dec
arpl
dec
jp
leave
pop
push
in
movs
push
lock
inc
add
sub
fdivrp
push
push
dec
inc
sub
dec
div
add
jne
push
mov
inc
fisttp
mov
push
dec
test
jnp
inc
mov
mov
sbb
xchg
mov
mov
add
lahf
inc
inc
jmp
test
push
scas
add
je
call
push
jo
xor
sub
jbe
or
push
or
(bad)
jns
inc
xor
and
add
popf
bound
xchg
int
jg
popa
push
jecxz
xor
and
xchg
mov
dec
in
popf
mov
push
test
xor
or
and
pop
shl
inc
loop
sub
adc
mov
inc
test
fadd
call
xchg
push
add
inc
loopne
adc
xlat
dec
mov
jl
fdivr
push
inc
add
fcom
inc
int3
mul
pop
adc
add
mov
cli
and
xor
xchg
sbb
or
adc
out
pusha
adc
jne
addr16
push
mov
sbb
adc
(bad)
fstp
lahf
pusha
sub
call
sub
push
outs
les
add
test
lea
xchg
xchg
test
pushf
mov
aaa
sub
and
mov
push
hlt
adc
fsubr
inc
hlt
(bad)
fcom
push
das
mov
mov
pop
je
and
es
mov
add
popf
fst
adc
je
add
in
add
sbb
add
cli
lods
mov
push
sub
hlt
adc
lods
adc
push
or
mov
xchg
das
pop
stos
or
mov
stos
pop
pop
lahf
loopne
xchg
daa
add
pop
inc
aaa
inc
push
sbb
jmp
(bad)
not
rol
add
adc
push
push
mov
mov
adc
stc
mov
aad
pop
jmp
mov
add
pop
mov
or
or
pushf
and
pop
adc
ds
push
popf
and
push
push
lahf
mov
or
sub
or
dec
push
adc
or
vmread
adc
and
test
sbb
lods
cwde
mov
mov
and
xchg
xchg
xlat
push
stos
mov
test
call
mov
scas
pop
cmp
xchg
push
xchg
ror
push
or
dec
cmp
sti
loop
clc
mov
adc
mov
add
pop
les
and
icebp
mov
aad
mov
sub
pop
adc
mov
cmp
mov
xchg
bound
mov
adc
rol
cmps
xchg
fist
push
bound
cmp
cwde
or
rcr
push
das
mov
adc
cmp
add
retf
jle
je
push
mov
adc
lahf
dec
mov
sar
mov
sub
cmp
jne
pop
xor
and
dec
dec
test
pop
push
pop
test
outs
sbb
push
push
mov
and
js
add
or
stos
xor
call
in
xor
ja
and
or
stos
dec
fmul
add
xchg
jle
es
dec
pop
sbb
adc
mov
mov
pop
xor
dec
xchg
cmp
cmp
push
add
xchg
pop
cmp
bound
jo
xchg
movs
jno
lock
add
dec
test
inc
retf
shl
mov
push
inc
test
or
add
pop
mov
jg
mov
adc
stc
es
pop
add
dec
xor
hlt
sbb
lods
aad
sub
sbb
sbb
(bad)
sbb
xchg
xchg
lock
and
outs
mov
movsx
push
add
add
add
sub
xchg
mov
mov
xchg
mov
mov
iret
stc
jnp
adc
xor
aam
sbb
xchg
add
adc
or
mov
push
stos
clc
loop
les
pop
pop
push
cs
xchg
fiadd
jge
mov
mov
(bad)
push
mov
push
push
test
movs
in
mov
test
or
add
xor
cmp
sbb
pop
inc
pop
sub
jmp
test
setne
dec
cmp
std
mov
push
aas
mov
jmp
into
sahf
pop
je
rcl
cmps
cmp
pop
mov
fs
retf
loope
je
inc
push
rcr
jp
mov
adc
pop
es
dec
mov
aaa
inc
movs
sub
loopne
dec
push
sar
push
lahf
push
nop
rcl
fadd
nop
mov
and
sub
pop
idiv
mov
in
sub
cld
cmp
mov
(bad)
sub
sub
sbb
inc
shr
inc
shl
add
add
stc
xchg
push
fst
inc
cmc
and
adc
xchg
and
mov
or
fcom
cmc
jns
pop
mov
fiadd
adc
jae
sub
cdq
xchg
fmulp
jb
popa
push
aas
cmp
rcr
fs
sub
leave
add
push
adc
sahf
outs
mov
ror
stc
mov
sbb
jl
clc
mov
or
stos
ss
push
and
outs
stos
test
test
not
jge
cmp
sbb
jae
or
retf
(bad)
js
adc
push
push
push
and
add
sbb
jnp
xor
jno
sub
or
adc
pop
sub
pop
test
imul
push
add
jo
fidivr
ret
pop
pusha
pop
xchg
push
or
imul
test
push
pop
cmps
mov
xchg
push
fcom
push
add
fadd
adc
and
inc
leave
add
popa
or
adc
(bad)
and
add
fwait
dec
in
es
inc
ror
cmps
sahf
adc
push
mov
push
push
dec
push
pop
add
xor
ret
push
sub
inc
mov
xchg
sub
push
or
sub
or
sbb
je
jbe
add
stos
scas
cmps
int3
cs
push
or
lods
mov
imul
pop
jne
xor
jne
sbb
je
cmp
je
cmp
inc
cmp
or
or
jl
ds
xor
je
test
cli
dec
dec
sub
test
cmp
je
adc
cmp
and
jnp
into
mov
sub
mov
inc
and
das
jne
cbw
mov
and
into
pusha
or
jne
add
pop
add
push
xor
mov
in
add
xchg
or
add
cli
and
xchg
push
retf
rol
inc
nop
mov
pushf
mov
ret
pop
and
addr16
ffree
cwde
xor
and
fmulp
add
dec
inc
xor
mov
add
adc
and
and
xor
daa
jge
add
cmp
cmp
imul
mov
cmc
mov
mov
sub
add
or
(bad)
cmp
fxtract
into
sbb
or
inc
sub
xor
mov
ror
or
daa
add
dec
and
iret
jle
mov
fist
add
sbb
mov
popa
fisubr
and
or
add
sub
add
mov
je
and
mov
dec
in
inc
adc
push
xor
jo
(bad)
pop
xor
cmp
lods
pop
mov
mov
pop
sbb
adc
stc
cmp
popf
add
sub
add
add
and
add
add
add
mov
push
sub
add
xchg
dec
ins
or
popf
lods
bound
jge
imul
add
mov
fnstsw
adc
pop
push
or
cs
mov
es
pusha
sbb
in
or
or
ins
add
mov
push
push
mov
push
jno
out
test
stc
pop
xchg
xor
ja
push
pop
jg
adc
lock
cwde
adc
enter
es
psubsb
and
xchg
lahf
jmp
sub
fst
push
and
ins
cmp
imul
mov
(bad)
sub
iret
adc
sbb
mov
call
inc
sbb
and
add
push
gs
inc
adc
add
loopne
(bad)
(bad)
std
push
add
imul
or
js
add
mov
stos
push
sbb
test
mov
ret
fs
push
aas
add
xchg
aas
sub
pop
pop
push
sbb
out
mov
add
xor
inc
js
dec
xor
push
push
inc
fcomp
loop
cwde
dec
cmp
inc
and
cmp
sbb
nop
or
adc
adc
mov
mov
jge
pusha
sbb
mov
or
jecxz
cdq
inc
mov
mov
sahf
inc
push
and
cmp
cmp
pop
call
test
rol
in
in
pop
add
inc
mov
dec
sbb
jne
push
or
les
loope
movs
ret
sbb
add
sub
add
mov
ret
or
jo
retf
mov
sbb
sub
cld
lock
mov
movs
gs
push
lock
add
test
aad
call
ror
push
call
in
mov
xor
or
out
inc
and
xor
mov
inc
and
pop
xor
xor
dec
mov
sub
adc
add
sti
adc
call
in
or
cmp
or
adc
cdq
inc
pusha
ss
push
mov
sbb
pop
out
(bad)
and
retf
rcr
jp
lea
push
inc
dec
cld
retf
sbb
ss
mov
xor
push
(bad)
sub
(bad)
mov
imul
(bad)
adc
adc
mov
pusha
std
mov
clts
lds
and
in
sub
dec
and
jecxz
jmp
adc
movs
ror
sub
sbb
mov
inc
loope
and
push
aam
pop
pop
jmp
xor
shl
push
or
rol
mov
les
inc
inc
pushf
or
or
push
xchg
test
enter
pop
shr
jno
fwait
or
movs
jno
cmp
sti
and
int3
stos
add
inc
(bad)
shr
pop
jmp
test
daa
sub
inc
fst
sbb
stos
mov
sub
and
cmp
jo
(bad)
in
stos
and
fstp
sub
shl
xor
inc
loop
pop
adc
mov
in
mov
aaa
add
sbb
fimul
adc
add
cmp
inc
or
jge
xchg
cld
mov
adc
out
fs
or
(bad)
adc
rcl
push
add
test
dec
pop
sub
adc
sar
push
(bad)
and
add
adc
inc
adc
lds
lods
push
pop
mov
je
cmp
sti
loopne
call
xor
arpl
xor
daa
xor
add
inc
cdq
test
pop
sbb
ror
into
and
sti
mov
dec
enter
cwde
shl
pop
cmp
jne
mov
in
je
sub
cmp
add
shr
pop
inc
fcom
push
adc
or
and
and
and
sti
movups
cmp
icebp
push
pop
adc
cmp
jae
mov
pop
mov
inc
pusha
and
push
jge
ins
mov
daa
ret
rcr
jge
or
and
mov
sub
add
test
lock
mov
cmps
add
popa
shr
push
adc
pop
jmp
or
not
pusha
jmp
cmp
and
push
pop
push
test
sti
inc
je
or
fwait
sbb
pop
cwde
mov
pop
or
jne
or
add
push
sub
imul
mov
push
push
pop
push
or
retf
cmp
pop
add
mov
and
sbb
jp
test
cmp
mov
sahf
cmps
in
adc
bound
movs
and
sub
sar
ror
add
sbb
or
mov
cmps
in
jb
fwait
std
sar
shl
xchg
and
and
xor
inc
mov
or
sub
in
and
lahf
push
int
adc
adc
sub
push
ret
adc
mov
mov
les
test
push
ins
loop
test
bound
xor
fadd
or
mov
nop
or
cli
ret
popa
das
push
jmp
mov
adc
push
ret
aaa
enter
adc
movs
dec
sbb
xchg
push
ss
imul
add
xchg
adc
enter
sbb
retf
inc
and
jg
or
ja
dec
test
fldcw
cmp
ret
jns
cmp
add
sbb
(bad)
fdivrp
xor
adc
and
dec
lds
or
adc
sar
cs
ret
fiadd
inc
push
xor
adc
xor
popa
int3
sbb
push
and
lock
add
cmp
push
push
inc
test
add
dec
sbb
int
lock
pop
test
fmul
sahf
bound
xchg
icebp
or
sbb
fdivr
push
xor
movs
pushf
sbb
mov
in
fild
pop
jmp
add
adc
add
push
(bad)
lods
dec
lea
push
add
ret
mov
cmps
push
(bad)
xlat
xor
ret
pop
xor
add
xor
movs
(bad)
pop
cmp
add
retf
and
jg
adc
cld
xor
gs
mov
add
jae
pop
icebp
add
std
aad
add
je
mov
std
and
jmp
and
fwait
imul
ins
add
rol
jno
sbb
mov
mov
sub
xor
adc
and
les
fcmovne
sub
or
mov
lods
add
shl
rcl
xchg
or
test
(bad)
mov
add
loopne
sub
jnp
lea
or
mov
xchg
xor
or
test
in
dec
sub
add
mov
imul
mov
fsub
adc
mov
inc
adc
ja
add
cwde
(bad)
and
inc
fsubr
sbb
push
dec
cwde
push
add
mov
outs
pusha
dec
in
inc
dec
jne
clc
shl
js
rcr
and
dec
xchg
cmps
fadd
cmps
loopne
sbb
push
add
and
rcpps
mov
int
in
sar
xor
or
sbb
push
ds
pop
cs
lock
xor
(bad)
cmps
xchg
bound
inc
push
mov
mov
int3
inc
push
sub
loope
push
push
cmps
mov
jns
ret
push
jge
dec
inc
or
push
add
iret
mov
push
push
or
(bad)
or
mov
adc
or
add
jmp
mov
js
test
sub
jecxz
add
push
mov
add
(bad)
stc
push
mov
scas
movs
sub
imul
pop
sbb
sub
jbe
lock
inc
loopne
inc
cld
pop
call
movs
add
xor
push
adc
(bad)
test
cmp
cmp
scas
or
inc
xor
fimul
pusha
(bad)
dec
adc
xchg
gs
inc
pop
xor
add
xor
and
push
mov
sahf
add
add
test
push
xor
or
dec
adc
mov
push
mov
push
daa
mov
test
and
or
pop
mov
sbb
icebp
(bad)
sbb
je
inc
jg
jle
inc
sbb
add
sub
popa
mov
lea
xchg
clc
mov
push
fwait
not
push
push
jp
or
add
mov
jo
add
lock
push
or
jecxz
je
pop
and
fsub
pop
inc
dec
repz
cs
push
popa
lock
mov
xor
sub
fidiv
sub
pop
add
or
sbb
mov
das
jecxz
or
push
dec
inc
push
adc
adc
dec
sbb
test
cvtps2pd
mov
inc
fstp
or
mov
popa
push
mov
adc
and
aam
add
ins
test
pop
add
sbb
popa
cmp
xor
es
ds
xchg
pop
push
push
jmp
add
mov
add
out
xor
ins
and
lea
jne
mov
or
fisubr
mov
pusha
pusha
push
and
dec
rcr
sub
(bad)
repz
push
xchg
xor
mov
add
shl
shl
jle
sub
dec
inc
mov
or
inc
add
je
sbb
out
push
xor
jne
stos
hlt
xor
add
add
aaa
jnp
mov
dec
pop
inc
in
retf
popf
cwde
push
pushf
call
or
rol
out
and
push
inc
leave
inc
push
pop
add
push
and
mov
or
lea
sub
add
(bad)
sub
add
lods
mov
rcr
ret
loopne
outs
fist
adc
mov
outs
pop
dec
aam
cmp
and
inc
in
movs
adc
add
(bad)
xor
in
xchg
bound
sbb
cmp
rol
adc
cmp
stos
retf
iret
adc
pop
retf
mov
add
jne
inc
jmp
js
movs
mov
jmp
aas
push
push
nop
mov
mov
mov
or
push
sub
out
sub
jle
mov
mov
es
sub
push
xor
jge
pop
pop
or
add
pop
push
cmp
inc
mov
pop
push
bound
xor
adc
inc
sbb
fild
add
pushf
movs
and
adc
push
sub
and
lods
pop
test
rcl
push
or
add
pop
sub
sub
adc
add
jmp
push
jmp
fimul
in
clc
cmp
adc
test
jmp
add
test
add
sbb
xor
add
or
pushf
add
fs
sbb
popa
sbb
add
or
mov
mov
xchg
out
inc
rcl
jle
pop
or
adc
add
sub
cld
add
cwde
clc
xchg
jno
add
lds
jmp
mov
fistp
cmp
(bad)
aaa
mov
test
popf
aam
inc
inc
jne
mov
push
sub
xchg
xchg
shl
jb
loopne
xor
add
jecxz
xchg
mov
and
and
add
in
jmp
loope
aam
xchg
sub
cwde
rol
and
cld
movs
mov
std
add
lods
push
add
pop
pushf
cwde
xchg
in
xor
mov
or
xor
push
cmc
push
xor
pop
in
mov
in
and
xor
push
and
xor
add
push
rcl
mov
cmp
cmp
add
sub
adc
push
fadd
sub
inc
es
xor
fs
add
mov
push
add
dec
add
cmps
loopne
and
mov
sar
mov
adc
cld
stos
and
stos
mov
mov
in
shl
mov
scas
fcom
push
pushf
lea
or
pop
xchg
dec
movs
or
dec
ins
sub
leave
dec
mov
shl
cmc
out
mov
sub
add
pop
test
movs
dec
scas
mov
push
or
or
mov
lock
push
add
or
add
ret
stc
fadd
push
mov
or
and
add
lock
xchg
sbb
loop
xor
xor
or
adc
cli
pop
imul
stos
sbb
pop
fbld
lods
cmp
inc
dec
pop
out
ror
adc
xchg
mov
dec
add
cmp
loopne
repz
mov
loope
adc
mov
or
dec
adc
mov
adc
sbb
sbb
or
and
push
mov
add
inc
daa
sub
sbb
add
(bad)
add
push
ins
jo
sbb
push
push
add
add
(bad)
shl
ret
pop
sub
mov
popa
pusha
add
out
es
jns
pop
sbb
test
invd
sahf
(bad)
sbb
xchg
jne
add
add
or
popf
cmps
xchg
xchg
imul
fistp
sar
scas
sbb
cmp
jle
push
mov
adc
je
pop
xchg
mov
(bad)
and
jbe
jnp
cmps
xor
add
mov
int
loop
jmp
jne
movs
cmps
add
mov
imul
jl
pop
and
movs
mov
xor
mov
lea
dec
add
in
xchg
in
adc
lods
out
ss
xor
push
jmp
test
mov
das
and
push
xchg
mov
mov
rol
and
add
(bad)
mov
sahf
adc
dec
dec
scas
daa
mov
xchg
(bad)
popf
bound
pop
iret
cmp
fwait
inc
call
adc
call
jno
xor
dec
xor
push
sub
pushf
add
out
lock
xor
pop
mov
daa
and
pop
cmp
jne
inc
pop
rol
adc
inc
pusha
or
dec
add
call
ret
dec
add
iret
sbb
inc
add
pop
and
sbb
les
test
add
mov
and
sbb
or
(bad)
pop
inc
addr16
ds
inc
dec
sub
arpl
les
adc
sbb
imul
push
adc
in
inc
mov
pop
sbb
mov
inc
mov
push
pop
sbb
shl
add
pop
pop
xor
mov
dec
les
in
test
les
repz
dec
push
ret
add
sbb
sub
add
push
push
in
imul
lock
fs
call
cmp
in
jo
mov
or
or
xor
cmp
push
loope
sbb
xor
sbb
mov
dec
jg
or
ret
adc
jmp
adc
(bad)
dec
jmp
sbb
and
adc
aad
inc
sub
or
pop
cmps
pop
data16
jmp
jmp
addr16
call
push
cmp
shl
push
std
lods
jne
or
add
sbb
sar
rcl
or
aam
jae
inc
mov
adc
rol
jg
movs
jbe
test
fsubr
xchg
in
dec
adc
clc
xchg
pop
cmp
ds
dec
popf
inc
adc
outs
or
lods
xchg
lock
shl
in
pop
inc
add
mov
jge
out
adc
inc
dec
aaa
or
test
push
mov
cwde
fsub
(bad)
xor
mov
sub
or
inc
adc
test
scas
rcr
mov
cmp
jecxz
or
xchg
and
neg
pushf
inc
pop
ins
test
sbb
jb
mov
inc
add
pop
or
fmul
or
loopne
mov
les
adc
enter
xchg
push
iret
dec
aad
mov
and
lahf
add
retf
cmc
pop
mov
ret
jmp
mov
or
push
mov
call
retf
test
es
test
jne
mov
add
loope
rsqrtps
inc
(bad)
push
mov
mov
sub
lock
scas
mov
push
add
push
lahf
inc
pop
mov
cmps
cmp
jbe
sub
add
or
ret
add
ror
inc
stos
and
pop
dec
add
ret
adc
cmp
cwde
test
pop
cmp
inc
gs
sub
adc
pop
jns
inc
push
ret
pop
cmp
push
adc
loop
jnp
cmp
lahf
aas
mov
fisubr
imul
add
test
ss
repnz
cli
cmps
add
scas
movs
add
xor
sub
push
pop
jo
inc
(bad)
(bad)
mov
mov
sbb
sub
shl
xchg
mov
cmp
xchg
mov
sub
and
out
fdivr
call
inc
add
test
push
ficomp
jmp
mov
jmp
adc
jo
repnz
xor
sbb
mov
fcmovnbe
mov
add
inc
in
jg
movs
xor
mov
cmp
push
mov
sub
pop
fs
dec
cmp
adc
inc
or
pop
lods
(bad)
not
in
jmp
push
pop
in
(bad)
jne
dec
jmp
push
lahf
jl
add
(bad)
sub
sub
jno
frstor
mov
mov
jb
mov
cmp
stos
or
mov
aad
lock
lods
mov
mov
ins
test
jle
mov
retf
cli
fst
mov
adc
mov
out
fmul
jle
fdiv
ss
xchg
or
mov
lods
pusha
add
test
sar
push
xor
push
cs
mov
cmp
sub
icebp
mov
test
xor
mov
adc
pop
dec
push
enter
dec
mov
push
or
retf
or
inc
adc
out
mov
prefetchnta
rcl
std
sar
ret
cmp
call
test
sub
call
mov
rcr
mov
sub
mov
add
push
popa
xor
ret
outs
sub
cmps
lock
js
cmp
push
add
bound
sub
add
push
sbb
loop
sbb
jg
or
call
jg
outs
sub
add
and
mov
and
and
imul
xchg
mov
mov
dec
add
add
and
or
cdq
shl
pop
enter
loope
cmp
icebp
xchg
test
adc
jmp
adc
inc
mov
cmps
in
std
sar
rol
or
sub
or
pop
cs
pusha
mov
mov
add
rol
push
jb
pop
test
je
movs
cmp
adc
jg
je
dec
je
xor
and
sub
test
lods
call
ror
sti
cmp
cs
sbb
mov
pop
sbb
dec
push
mov
jne
add
xor
scas
rol
mov
add
push
mov
dec
xor
xchg
add
(bad)
push
int3
fwait
or
mov
mul
xchg
je
xchg
push
cmps
pop
or
mov
mov
or
dec
lahf
or
test
inc
pop
jb
and
dec
inc
inc
loope
sbb
push
mov
and
push
push
cmp
popf
or
popf
(bad)
and
adc
or
mov
lea
sbb
sbb
or
fidiv
xor
out
data16
mov
push
push
dec
push
push
push
add
frstor
inc
sbb
dec
mov
sub
sbb
or
add
cmp
ficomp
add
jne
jecxz
xchg
div
push
cmp
xor
add
xchg
icebp
pop
sbb
cmp
add
jne
dec
ss
test
rol
nop
sbb
inc
test
lock
cmp
ja
pop
add
xor
ret
mov
stc
popa
sub
(bad)
and
ret
add
cmp
push
sub
sub
inc
dec
mov
xor
sahf
pop
dec
adc
pop
or
rol
mov
mov
push
(bad)
test
mov
in
xor
cmp
or
add
and
xor
mov
adc
or
mov
shr
or
enter
sub
xor
cmp
xor
or
pop
jl
or
out
xor
add
das
push
push
sahf
inc
jno
jns
xor
inc
sub
stos
add
and
out
fwait
test
js
mov
mov
and
xor
lods
inc
push
add
or
adc
dec
inc
mov
fs
mov
cmp
cmp
mov
or
mov
sub
dec
ret
or
cmp
aad
jmp
in
and
adc
shl
test
ins
push
or
adc
or
mov
mov
inc
in
push
or
mov
lea
mov
or
cmp
cmp
je
mov
sub
add
retf
rcl
push
repz
loope
rol
fsubr
jno
cmp
(bad)
sub
jle
sbb
or
call
sub
cmp
aas
stos
add
sbb
sbb
adc
dec
add
push
rol
push
dec
or
adc
jg
mov
mov
pop
mul
gs
jge
cmps
loopne
add
rol
(bad)
mov
sub
sub
jmp
pop
std
shr
jo
push
lea
repz
mov
mov
leave
dec
lahf
xchg
jne
ss
lea
jp
cmp
cdq
push
pop
sar
in
mov
mov
mov
sbb
imul
xchg
(bad)
lods
mov
inc
or
cmp
add
cmp
nop
test
sahf
cmps
stc
mov
push
(bad)
daa
std
jle
(bad)
inc
mov
add
adc
push
idiv
jnp
aas
out
push
add
(bad)
mov
mov
lods
jnp
pop
mov
(bad)
mov
mov
mov
(bad)
(bad)
jge
mov
inc
in
jle
retf
jecxz
jge
add
shr
dec
jl
xor
mov
sbb
dec
and
adc
and
mov
scas
dec
loopne
jmp
aaa
add
les
and
push
sub
mov
es
ret
xor
popa
adc
scas
lods
int3
mov
xchg
xchg
(bad)
mov
(bad)
aam
add
fsub
mov
push
in
adc
and
add
mov
retf
shl
pop
stos
lea
sub
jne
hlt
cs
and
lea
add
and
xrelease
adc
pop
or
je
js
jle
enter
ret
push
les
shl
les
hlt
not
mov
cmp
test
push
sub
ds
sub
je
test
pop
ret
rcl
push
lods
adc
cdq
shr
inc
cmp
retf
or
add
jno
add
and
adc
je
mov
push
retf
scas
enter
or
sub
add
jg
cmp
dec
imul
lds
rol
lea
push
add
sbb
lea
add
jl
push
push
dec
ror
push
xchg
add
dec
mov
push
xchg
in
pop
enter
mov
dec
jmp
mov
xchg
movs
jle
push
lea
addr16
push
mov
neg
inc
or
xchg
lock
xchg
ret
retf
test
and
pop
jb
mov
sbb
inc
mov
mov
and
jmp
push
add
mov
push
sub
add
and
push
ret
cmp
jb
mov
pop
mov
in
xchg
sub
jae
sbb
sub
rol
adc
and
mov
mov
sub
xor
popa
pop
ret
movs
push
aaa
push
sbb
push
add
test
or
inc
jle
dec
loope
push
jmp
das
inc
loop
mov
sub
call
adc
mov
ror
ins
sub
in
test
cmps
push
cmc
imul
rcr
test
sub
inc
and
jge
mov
xor
daa
push
mov
add
enter
cmp
add
out
je
inc
icebp
je
cmp
jne
add
adc
pushf
xchg
and
mov
loope
mov
xor
mov
outs
inc
or
jmp
adc
pop
and
add
pop
aam
outs
adc
lea
jmp
mov
push
mov
jecxz
push
lock
clc
fistp
arpl
inc
sbb
pop
or
(bad)
ffreep
call
sub
sub
not
inc
push
jno
lock
out
add
adc
or
xor
ret
scas
test
push
aas
ffreep
fwait
add
ret
pop
jne
pop
test
scas
inc
push
mov
mov
cmp
add
jb
or
ret
je
(bad)
and
add
repnz
pop
jne
test
mov
mov
dec
(bad)
cmp
push
jmp
imul
hlt
cmp
(bad)
in
pop
add
pop
test
jl
add
(bad)
jg
call
cdq
xor
pop
pop
inc
cmp
rol
xchg
xor
lock
sub
add
mov
add
test
cmp
in
mov
je
mov
loopne
dec
push
movs
jne
loopne
outs
adc
dec
and
out
adc
sbb
loope
div
or
sub
cmps
or
fwait
sub
and
cli
cld
push
adc
cld
jo
js
nop
loop
ret
xchg
jge
jg
lahf
push
repnz
mov
imul
jl
je
cmp
mov
in
jne
dec
mov
(bad)
cmp
mov
mov
lds
mov
adc
in
jb
pop
jne
push
dec
sti
adc
mov
sar
cmp
push
(bad)
imul
dec
pop
aam
push
in
jno
ins
lds
mov
sbb
adc
fs
sub
mov
push
jnp
ret
or
jle
mov
popf
loopne
fs
push
cdq
push
nop
lds
pop
pop
and
fist
enter
xchg
cld
xchg
jne
mov
ja
mov
xchg
mov
mov
mov
inc
fild
sbb
sub
fadd
or
jp
mov
jp
dec
sti
adc
pop
stc
sbb
and
sub
test
scas
stc
sub
aas
je
push
int
out
je
jge
or
dec
push
cmp
add
addr16
repnz
push
test
hlt
lock
add
and
in
push
mov
mov
push
pop
pop
xor
lahf
shl
or
(bad)
je
jne
aad
push
ror
(bad)
fst
jmp
jecxz
push
adc
push
jne
pop
in
jle
(bad)
sub
ja
aad
bound
sub
in
push
imul
test
pop
sbb
(bad)
out
sbb
dec
enter
xchg
jle
loope
or
fcom
es
fadd
lea
push
adc
lock
mov
push
icebp
pop
(bad)
or
add
sub
push
and
push
pusha
pushf
mov
xchg
test
fild
add
mov
in
add
jp
xchg
jno
pop
cli
scas
or
jns
push
dec
test
test
or
loope
jno
ds
imul
mov
fmul
or
add
nop
jecxz
cmp
push
and
xchg
jo
loop
sub
cli
daa
inc
and
lahf
clc
dec
push
pop
arpl
mov
cmp
add
adc
imul
imul
or
inc
push
inc
add
and
ret
pop
and
sbb
xor
inc
cmc
mov
test
mov
or
movs
sbb
adc
and
test
or
jecxz
and
sub
mov
movs
push
push
add
jnp
and
je
add
sub
sbb
sbb
mov
sbb
or
adc
pushf
es
add
pusha
mov
push
and
test
mov
test
cmps
and
jne
sbb
stos
mov
adc
mov
stos
sub
add
loopne
add
jne
push
aam
push
jae
dec
sub
adc
push
inc
dec
adc
cs
aas
les
std
push
add
cmps
cmp
pop
xor
push
(bad)
ror
jmp
push
rcl
push
jo
push
and
icebp
fst
xor
or
dec
adc
adc
ins
popa
rcr
ja
mov
dec
ret
das
cmp
or
pop
ficom
call
jae
push
adc
and
jge
lods
cmp
inc
or
test
daa
pop
add
xchg
sti
out
mov
add
sub
mov
mov
and
sub
adc
adc
dec
scas
pop
js
adc
inc
ror
cli
mov
dec
mov
push
push
push
pop
mov
add
adc
pop
call
pop
mov
inc
pusha
or
jbe
and
inc
test
movs
js
test
imul
sbb
iret
xor
imul
pop
cmps
mov
push
sub
add
mov
jecxz
mov
fadd
jo
fnstsw
and
or
cdq
or
sbb
inc
adc
lock
inc
scas
popa
lock
leave
pop
pop
test
into
push
sub
push
adc
cdq
add
mov
mov
ror
test
add
leave
cmp
std
mov
les
inc
and
inc
or
add
cwde
icebp
sbb
fiadd
das
std
push
rol
dec
shl
xchg
and
or
call
hlt
cmp
adc
mov
mov
aaa
mov
mov
cmp
or
push
ins
add
ror
mov
loope
addr16
iret
or
dec
jbe
lock
jmp
inc
sbb
mov
int
adc
and
jle
es
push
cmp
je
in
xchg
cld
repnz
ins
cdq
popa
ins
jl
pop
push
push
loopne
add
inc
mov
imul
add
mov
cdq
mov
jmp
xor
push
js
adc
adc
mov
shr
push
mov
fisttp
lock
(bad)
mov
fnstcw
jmp
sbb
xor
mov
pop
ja
xchg
inc
add
lods
aam
sub
or
xchg
inc
gs
lock
lds
cmp
pop
sbb
js
dec
push
jbe
cli
adc
push
push
nop
xor
add
cs
hlt
fwait
pushf
rcl
sbb
adc
lahf
mov
jne
dec
loope
gs
adc
pop
push
xchg
lock
aad
in
test
jnp
add
and
cmp
or
xor
push
(bad)
or
sbb
cmp
js
(bad)
xor
add
fdiv
sub
or
mov
jmp
xor
xchg
add
and
int
int3
add
(bad)
fcom
cwde
sbb
js
mov
dec
(bad)
pop
add
std
cli
push
push
les
mov
xchg
loop
or
push
push
test
mov
sub
adc
mov
js
popa
loopne
mov
xor
nop
pop
jo
dec
push
push
or
xor
lds
gs
and
movs
jl
sbb
dec
adc
pop
inc
imul
xor
stos
cmp
mov
inc
aam
push
sbb
lds
inc
fld
adc
inc
fcomp
sar
push
les
hlt
xor
(bad)
rcl
jg
ror
rol
ror
pop
ss
push
mov
jp
push
dec
sbb
loope
and
call
sub
pop
xor
(bad)
rcr
ror
(bad)
xor
fnstcw
push
arpl
xor
lahf
push
lahf
shl
sub
push
je
stos
mov
shl
fild
xor
push
sub
jp
test
inc
inc
repnz
adc
or
inc
add
or
mov
mov
cwde
jp
dec
cmps
iret
and
or
mov
bound
jns
dec
cmc
mov
pusha
test
lock
or
dec
pop
pop
xchg
adc
push
or
push
fiadd
test
push
mov
mov
jp
or
mov
ror
daa
not
push
adc
inc
push
push
(bad)
push
jne
nop
xor
int3
iret
push
inc
xor
ret
ins
in
mov
fistp
mov
or
daa
dec
push
push
(bad)
sub
js
jecxz
adc
and
mov
popa
test
adc
enter
fwait
rcr
cs
(bad)
rol
cmps
movs
inc
adc
inc
and
hlt
mov
push
push
dec
add
arpl
and
les
xor
or
push
add
ss
adc
pushf
adc
push
sbb
xchg
push
mul
add
xchg
dec
sbb
(bad)
jne
cld
loop
test
push
or
adc
pop
das
repz
add
sbb
add
sub
or
dec
or
add
add
pop
or
popf
sub
mov
ret
mov
xor
mov
inc
add
or
test
add
push
push
xor
or
jp
pop
es
das
and
and
sahf
cld
sub
push
jge
or
add
push
aaa
jb
fcomp
(bad)
hlt
mov
hlt
pop
hlt
ins
add
es
das
or
test
das
mov
and
loope
jmp
add
das
mov
daa
inc
retf
xchg
sbb
mov
(bad)
cmp
xchg
push
nop
jbe
mov
and
and
popf
inc
sbb
dec
mov
std
push
out
mov
lahf
push
ss
movs
push
adc
fsub
push
sub
mov
sbb
add
shr
add
jmp
iret
xor
add
push
mov
ret
arpl
pop
or
sub
nop
inc
cmps
mov
sub
or
mov
mov
or
push
and
arpl
lods
sbb
stc
shufps
mov
ins
(bad)
sbb
pop
adc
cli
adc
xchg
push
push
pop
and
stos
movs
arpl
pop
sar
add
stc
test
inc
pop
mov
mov
fs
cld
das
mov
add
or
or
mov
xchg
push
or
mov
adc
leave
clc
cmp
sbb
outs
inc
cwde
xor
pop
test
add
(bad)
js
add
call
loopne
or
or
mov
popa
arpl
in
movs
test
in
jecxz
vmaxps
push
jmp
test
jmp
dec
mov
lar
mov
in
or
and
jno
mov
rcl
inc
bound
adc
lods
cdq
adc
adc
imul
pop
xchg
sbb
aam
xor
test
or
fsub
mov
daa
push
add
or
push
les
lods
inc
dec
test
stos
mov
adc
mov
and
sub
repz
or
retf
fcom
and
out
pop
cmp
loope
icebp
lock
ja
mov
add
cld
jmp
push
add
add
xor
movhps
dec
inc
push
mov
add
dec
cld
or
(bad)
nop
mov
push
dec
inc
stc
cs
mov
inc
xor
clc
sub
mov
in
push
mov
and
add
and
aas
push
mov
into
push
push
mov
ret
inc
cmovb
call
hlt
mov
or
std
lods
pop
pop
xchg
mov
xor
outs
das
dec
or
and
icebp
call
push
ja
xchg
dec
js
inc
clc
lock
jo
aaa
ins
or
ret
scas
and
sar
add
adc
jecxz
push
and
dec
mov
and
jo
rol
shl
xor
inc
add
xchg
call
mov
rol
cs
push
jmp
arpl
or
cwde
or
in
pop
imul
fadd
nop
ror
or
mov
dec
push
and
jge
push
and
enter
or
js
(bad)
fadd
aaa
add
cmps
out
cmp
add
cli
je
push
test
fsubr
leave
std
dec
dec
aam
aam
jge
add
or
push
imul
rol
cmp
and
test
mov
xor
pop
rcr
sub
movs
test
sub
jno
cwde
push
les
test
dec
mov
or
rcl
cmp
leave
or
mov
or
sbb
sbb
jmp
mov
push
xor
push
inc
add
les
or
movs
ja
pop
jo
lea
push
das
or
rol
call
push
add
jno
sbb
jne
shl
out
add
dec
test
add
ja
sub
push
cdq
push
add
shl
ret
adc
or
adc
retf
add
push
sbb
pop
(bad)
les
inc
dec
loopne
pop
in
inc
push
mov
inc
bound
(bad)
dec
dec
xor
push
and
es
push
test
mov
ins
(bad)
mov
std
adc
sbb
cdq
pusha
clc
adc
push
add
pop
pop
ffree
mov
(bad)
(bad)
xor
push
fnstsw
push
push
mov
jge
jecxz
mov
mov
or
(bad)
ins
jmp
and
xchg
lea
xor
addr16
es
sbb
add
xor
mov
or
std
push
inc
mov
mov
jmp
mov
or
nop
daa
add
mov
ret
nop
(bad)
cdq
mov
push
push
lock
cmp
sub
xor
popf
add
adc
cmp
cmp
jmp
xchg
test
mov
pop
rcr
cmc
push
pop
dec
cmp
cmp
shl
xor
cli
aaa
xor
dec
or
push
mov
rol
mov
pop
enter
push
dec
jp
movs
bsf
add
mov
cmp
sar
aam
or
xor
cmp
xlat
sbb
push
dec
inc
ret
test
and
pop
or
or
jb
adc
push
dec
test
jo
sbb
fmulp
inc
(bad)
inc
or
lock
or
rcl
push
and
ret
test
rcl
jns
adc
sub
into
and
inc
push
enter
stos
fiadd
repnz
ret
push
test
in
es
cmp
or
rol
sti
in
pusha
test
or
mov
and
test
or
test
xor
push
mov
fsubr
sub
sub
ds
sbb
adc
fs
test
cmp
mov
sahf
push
mov
out
or
adc
syscall
add
and
dec
adc
ret
stc
add
add
std
dec
add
add
cmp
inc
aas
inc
or
pop
cmp
xchg
pusha
xchg
mov
xor
cmp
int
pop
add
test
adc
add
adc
(bad)
test
(bad)
ins
or
dec
mov
or
inc
outs
adc
mov
inc
pop
imul
sub
aam
fs
inc
cmp
call
not
ja
push
push
push
call
fdivr
mov
test
loopne
jl
mov
ret
aad
(bad)
push
or
or
popa
ins
jecxz
es
rcr
rcr
mov
test
aam
and
push
int3
mov
sub
or
xchg
push
or
cmp
lds
adc
lock
xor
lds
sub
cmp
push
or
push
into
outs
test
jmp
or
or
pop
ret
or
les
adc
icebp
push
push
nop
les
push
cwde
inc
push
cdq
push
outs
popa
add
push
adc
mov
jl
and
xor
fwait
outs
add
ret
shl
mov
das
es
rol
add
pusha
call
xchg
ret
movs
sbb
addr16
imul
enter
or
mov
sbb
jnp
adc
stos
add
adc
dec
inc
adc
mov
or
and
cmc
xchg
dec
push
(bad)
std
adc
mov
dec
adc
adc
adc
sbb
daa
lods
fsub
inc
ins
inc
and
mov
xchg
ds
push
adc
xor
adc
bound
push
sbb
add
and
add
or
rcl
push
dec
das
and
add
movs
sub
dec
add
dec
sub
pop
rdmsr
rcl
inc
loopne
sub
fstp
mov
add
and
cmp
or
sub
push
mov
pop
add
clc
bound
push
rcl
dec
adc
movs
inc
push
and
iret
shr
popf
or
out
add
sub
retf
inc
pop
push
sub
in
jle
jl
xor
add
nop
aas
das
mov
retf
or
push
and
xchg
jp
cmp
adc
cwde
leave
add
push
es
dec
icebp
fsub
push
sbb
jno
cmc
mov
outs
sub
cs
inc
imul
(bad)
movs
popa
out
scas
mov
das
daa
push
pop
and
rcl
sbb
cmp
cmps
inc
pop
outs
jge
inc
add
mov
inc
jae
jp
sub
mov
loopne
frstor
inc
push
mov
lods
and
adc
dec
add
push
or
add
shl
ja
fild
xor
inc
inc
push
jo
add
sub
sbb
leave
add
push
or
adc
push
xchg
pop
jo
push
or
test
mov
mov
add
xchg
pop
lahf
add
sbb
add
fld
pop
pop
mov
sub
lea
and
xchg
mov
adc
add
add
repnz
les
fucomi
sub
adc
dec
cmp
sub
add
cmp
rdtsc
cld
or
aam
mov
lahf
add
test
push
icebp
jecxz
mov
test
mov
test
daa
add
inc
popa
push
dec
test
test
movs
mov
loopne
ror
pop
cs
jno
sub
xor
adc
push
clc
iret
fstp
stos
push
dec
iret
sbb
hlt
iret
jge
and
cmc
or
iret
or
test
push
and
jne
pop
inc
sub
jg
jb
mov
or
lods
xor
pop
and
adc
and
sahf
lock
mov
push
adc
push
add
dec
adc
or
adc
test
adc
jae
jmp
and
dec
repnz
mov
bound
xor
sub
or
repz
ret
jecxz
cmp
xchg
bound
add
push
arpl
push
inc
sbb
inc
aam
mov
rcl
jg
rol
pop
pusha
xchg
push
cmps
or
lock
int3
push
and
jmp
push
xor
push
fxch
inc
adc
push
push
adc
into
shl
or
inc
das
call
or
push
js
rcr
lea
lds
jnp
xchg
sbb
fisttp
inc
pop
add
(bad)
rol
add
push
push
xor
loopne
inc
sbb
cmp
or
sub
and
sbb
(bad)
(bad)
loopne
nop
inc
or
dec
aam
sbb
ins
cmps
in
rol
xchg
sahf
retf
into
cmps
in
dec
jnp
(bad)
in
icebp
mov
add
and
mov
dec
add
inc
sub
inc
pop
dec
mov
mov
sub
jg
sbb
cs
int3
hlt
lahf
pop
or
or
popf
add
jae
jmp
adc
push
cmp
mov
pop
ror
jg
movs
push
lahf
add
and
push
adc
lahf
cmp
add
add
xor
mov
sbb
push
in
cs
cwde
ror
stos
dec
pusha
pusha
pop
dec
push
pop
push
call
xchg
aam
sbb
add
scas
in
popa
ins
mov
les
adc
adc
mov
ins
adc
or
sbb
(bad)
test
scas
pop
js
jmp
aad
pop
jo
gs
fcom
cmp
and
and
and
aam
inc
lock
add
mov
xor
rol
xchg
jp
push
mov
popf
cwde
or
mov
and
inc
xchg
cdq
sbb
nop
cli
xlat
push
mov
adc
xchg
and
mov
mov
pusha
dec
pop
adc
add
bound
pop
(bad)
rcl
inc
pop
inc
push
shl
sbb
rcl
inc
adc
sbb
push
and
adc
adc
aaa
inc
adc
mov
sbb
(bad)
ret
push
mov
scas
rcl
or
sbb
pop
mov
inc
or
aam
gs
inc
mov
ret
(bad)
jge
jo
dec
xchg
(bad)
mov
push
mov
dec
or
in
enter
push
fiadd
jbe
loopne
adc
popa
xor
sub
sub
fisub
and
pop
js
lea
and
inc
mov
or
call
or
fisub
adc
sub
xor
jp
cmc
or
inc
pop
call
enter
jo
out
adc
cmp
ins
stos
add
xchg
cs
and
push
clc
pop
push
mov
cld
nop
add
arpl
(bad)
dec
(bad)
sbb
xchg
fcom
fadd
daa
inc
jmp
in
mov
xchg
lea
inc
sub
add
enter
add
leave
mov
mov
or
push
push
add
jo
adc
out
les
sbb
lds
add
lahf
or
pop
push
icebp
cmc
ret
loope
pop
mov
inc
pop
xor
and
add
test
sbb
fst
and
pop
jecxz
cld
xlat
mul
inc
sbb
adc
xlat
adc
xlat
or
jge
xlat
adc
pop
xlat
inc
sbb
mov
jmp
out
cmc
push
jle
mov
and
in
inc
mov
cmp
imul
cmp
inc
or
mov
mov
pop
xor
add
sbb
or
mov
inc
push
rcl
cs
add
or
push
push
or
or
dec
stos
sti
je
and
jp
mov
shr
adc
or
and
in
test
jnp
adc
or
adc
mov
sub
inc
nop
sbb
sub
ins
pop
dec
scas
popa
ror
pop
mov
sbb
fcomp
jne
iret
sub
cmps
and
pextrw
pop
and
xor
cmp
adc
adc
adc
loop
bound
dec
xchg
in
xchg
sub
push
add
stos
add
inc
xlat
xor
ret
bound
push
cmp
mov
imul
push
scas
push
sub
lds
cmp
or
std
or
push
movs
adc
xor
pop
jae
and
or
sub
retf
push
inc
pop
cmc
add
das
inc
or
xchg
jne
adc
sbb
mov
cmp
cwde
(bad)
psubsb
dec
or
mov
pop
mov
jl
and
push
or
mov
push
dec
inc
push
inc
push
push
xor
mov
cmp
push
mov
icebp
(bad)
fnsave
jl
push
and
sub
sbb
mov
int3
sub
add
mov
cmp
int3
mov
or
sbb
ror
out
pop
or
mov
lea
daa
xchg
pop
add
je
arpl
cmp
jg
(bad)
mov
fcomp
adc
stos
add
mov
mov
inc
addr16
popf
dec
adc
das
mov
xor
hlt
pop
xlat
sbb
push
xor
mov
push
push
push
xchg
xchg
pop
dec
repz
aam
rol
in
or
dec
add
shr
cmp
pop
jae
arpl
js
mov
mov
in
and
fcomp
mov
inc
dec
push
pop
sub
dec
mov
push
or
adc
adc
fisttp
enter
cmp
push
clc
cld
es
inc
enter
xor
stos
push
adc
adc
sub
(bad)
cwde
loopne
cmp
mov
mov
sbb
or
or
push
ret
push
inc
sbb
cdq
jmp
push
adc
push
mov
cmp
shl
push
add
mov
pushf
add
adc
stos
rcl
mov
in
jae
inc
fs
(bad)
std
mov
push
cmp
pop
inc
mov
and
push
lods
(bad)
icebp
call
pop
cmp
(bad)
dec
loopne
shl
push
add
ja
movs
test
push
adc
ret
sbb
je
push
pop
test
push
repnz
inc
mov
pushf
loop
adc
cmps
sub
add
add
ins
ror
dec
jns
xor
push
pop
outs
into
adc
or
int
or
nop
or
or
cmp
lds
(bad)
lock
mov
mov
div
add
mov
sub
or
loope
push
and
arpl
outs
jno
mov
sahf
addr16
push
mov
cdq
lods
ret
or
dec
outs
mov
cld
mov
movsx
push
(bad)
(bad)
push
mov
pusha
loope
pop
or
mov
xor
adc
loope
push
adc
dec
adc
loopne
ret
ret
pusha
lods
sbb
add
add
imul
(bad)
push
mov
or
fist
aas
inc
sbb
sar
lea
xor
ret
rcr
inc
push
into
ss
in
mov
data16
add
sahf
mov
nop
adc
dec
and
stc
push
pop
sub
cmp
add
mov
push
in
push
imul
pop
pop
add
pop
cwde
js
mov
inc
mov
xchg
arpl
aaa
inc
xor
push
mov
adc
lahf
mov
and
rol
or
cld
pushf
add
in
jno
and
loopne
add
sbb
cld
and
fiadd
mov
les
push
mov
add
sbb
cdq
repnz
push
dec
repnz
inc
jecxz
fst
jle
push
adc
mov
pop
and
lea
rcl
(bad)
(bad)
adc
pusha
xor
sbb
pop
cmp
or
inc
xchg
aam
mov
jnp
inc
mov
dec
push
dec
dec
and
ins
mov
dec
outs
push
les
leave
sbb
jne
xor
lods
adc
xchg
adc
sbb
pop
aaa
loopne
pop
cli
loop
mov
and
dec
mov
dec
(bad)
pop
pop
mov
rcl
pop
(bad)
adc
adc
rol
mov
(bad)
fiadd
and
aam
adc
or
test
mov
inc
(bad)
cli
xor
xchg
add
push
and
pop
push
cmp
sbb
je
add
imul
and
or
int3
sbb
jl
push
adc
aam
push
push
call
aam
jo
mov
stos
sbb
pop
fsubr
push
das
pusha
clc
sub
push
jnp
and
mov
sar
and
es
outs
in
xchg
mov
addr16
add
mov
xor
xlat
and
pop
call
and
jg
and
es
retf
dec
popf
xlat
adc
shl
loop
inc
mov
pusha
test
ins
and
cmp
adc
jmp
adc
pop
xchg
sub
push
jne
hlt
add
add
dec
fwait
push
add
add
loop
pop
dec
add
dec
mov
js
push
inc
ret
pop
into
das
test
xor
mov
sbb
les
xor
movs
inc
pop
dec
pusha
add
leave
and
dec
or
pop
or
sbb
(bad)
mov
jb
cmp
test
sub
jl
mov
pop
push
or
xor
shl
push
sbb
aas
mov
dec
fstp
jne
retf
adc
nop
test
cmp
(bad)
cmp
mov
adc
inc
and
pop
fwait
mov
add
mov
push
pop
fs
es
xor
fwait
and
jo
or
pop
or
loope
lea
aad
(bad)
mov
dec
in
dec
cwde
pop
jle
push
pop
fisubr
xor
fstp
sbb
gs
lock
mov
pushf
and
adc
and
jle
sub
dec
ss
dec
daa
cmp
(bad)
into
fadd
add
test
dec
dec
push
adc
cmp
(bad)
retf
fadd
xor
push
bound
retf
fild
xchg
push
ds
or
int
pop
and
mov
dec
ja
sbb
pusha
mov
fwait
cmps
es
sbb
ja
lods
test
dec
or
jnp
out
and
sub
sbb
stos
mov
rcpps
add
int3
out
adc
inc
dec
movs
scas
jnp
push
push
mov
dec
pop
pop
es
scas
xor
aam
add
push
and
add
icebp
add
add
push
sbb
fsubr
pushf
ss
cmps
mov
mov
fld
add
nop
(bad)
adc
lods
call
mov
ins
xor
jno
stos
inc
sub
xor
lock
or
xchg
and
js
test
add
shr
cmovno
test
and
mov
inc
rcl
inc
ins
loopne
sbb
or
adc
loopne
add
stos
or
mov
push
add
pop
stos
mov
jmp
bound
add
outs
and
xchg
mov
add
adc
and
push
cmps
cwde
inc
or
nop
inc
sahf
add
add
add
dec
xchg
sub
adc
sub
mov
inc
imul
or
jns
pop
out
pusha
mov
push
jle
inc
dec
loope
sahf
repnz
inc
mov
nop
shr
xchg
daa
or
add
scas
in
cmps
sub
sbb
in
mov
ins
push
pop
test
fidiv
jnp
cmp
mov
add
sub
inc
push
push
inc
sbb
pop
and
xchg
push
pop
cmp
and
movs
jmp
push
ds
movs
scas
jmp
jbe
shl
sbb
cli
test
mov
mov
jbe
and
pop
adc
add
xchg
or
push
ins
adc
adc
iret
jecxz
push
add
xor
aas
adc
pop
add
movs
je
cmp
inc
ror
or
repnz
mov
adc
add
jne
and
xchg
mov
ret
shl
sbb
mov
(bad)
pop
adc
inc
dec
test
xchg
mov
mov
mov
mov
xor
movs
fwait
add
ret
cmp
add
test
loopne
push
jmp
int
jg
or
(bad)
pop
sub
sbb
mov
pop
pop
je
loope
pop
jl
xchg
push
add
inc
mov
jo
xor
cmp
add
adc
pusha
push
test
dec
mov
pop
mov
cmp
jg
add
pcmpgtw
xor
daa
cmps
push
dec
and
int
jg
fs
leave
inc
ror
jmp
arpl
mov
(bad)
mov
cmc
test
fs
test
pop
adc
xchg
mov
sbb
add
(bad)
in
test
in
dec
aaa
dec
xchg
pop
adc
fdivr
add
and
addr16
pop
sub
icebp
sbb
pop
aas
or
dec
popa
inc
adc
sub
inc
psllq
ret
add
xor
rcl
mov
mov
arpl
pop
mov
dec
add
xor
push
push
add
cmp
lods
sbb
adc
and
fmul
pop
pushf
jmp
dec
push
xor
cmp
je
test
add
out
lock
mov
push
popa
inc
cmp
or
xor
(bad)
mul
inc
mov
and
cwde
push
cmp
sti
and
cmp
je
xchg
inc
(bad)
dec
in
scas
add
ds
rcr
cmp
gs
add
fndisi(8087
test
jl
xor
and
clc
lahf
pushf
sub
pcmpeqb
xor
xor
push
dec
dec
xor
push
mov
sub
mov
scas
retf
jne
fmul
ud2
dec
inc
push
add
je
mov
lock
add
sbb
enter
mov
mov
dec
cwde
bound
push
aaa
sbb
dec
pushf
or
test
jge
pop
jge
(bad)
and
shl
pop
xor
xor
ss
retf
or
movs
movs
leave
js
jo
pop
pop
inc
pop
cmp
je
cli
or
cs
arpl
je
adc
xchg
pop
mov
add
jo
arpl
sbb
sub
or
cmp
jmp
or
push
in
lock
or
nop
mov
test
loope
int
iret
pop
xchg
add
dec
sub
sar
xor
or
js
ffree
shr
jmp
fld
push
mov
xchg
imul
or
inc
xor
or
mov
div
sar
inc
test
and
cmc
inc
xchg
add
cmp
xchg
enter
nop
jmp
mov
pusha
sbb
fbstp
add
mov
add
jmp
mov
or
rol
imul
or
inc
std
and
and
mov
sbb
push
lods
sub
push
test
push
fdiv
sbb
xor
push
jmp
add
sti
push
in
imul
xor
push
add
pop
push
xchg
mov
jmp
push
sub
(bad)
nop
jmp
gs
mov
jnp
and
popa
arpl
push
and
std
mov
and
inc
xchg
push
in
push
mov
xchg
scas
(bad)
int3
push
push
add
inc
jge
loope
das
inc
jp
push
ror
aaa
pop
dec
imul
out
dec
les
adc
or
jno
mov
sub
pusha
enter
push
or
std
nop
inc
jb
jge
push
repnz
enter
(bad)
in
js
push
and
in
jmp
mov
popa
mov
cwde
ret
mov
dec
call
pop
pop
ror
aam
and
test
dec
jp
enter
retf
test
int3
push
mov
push
dec
int3
mov
adc
inc
mov
(bad)
nop
cld
and
push
add
and
popa
push
test
push
outs
add
data16
popa
mov
popa
pop
adc
push
das
push
xchg
mov
add
sub
enter
jecxz
push
iret
jmp
xchg
rol
add
adc
xchg
sbb
jbe
int3
scas
push
call
scas
push
mov
xor
jp
leave
mov
push
or
mov
push
rcr
and
je
cmp
adc
enter
popa
or
pop
inc
fld
data16
inc
enter
add
xchg
add
mov
mov
pusha
das
xor
leave
pop
xor
adc
push
mov
mov
test
sbb
inc
das
cwde
xchg
adc
int3
mov
add
jge
sub
aaa
enter
enter
out
mov
adc
les
xchg
mov
add
cs
je
adc
or
fisub
xor
dec
add
rcl
test
add
xor
stos
sbb
int3
cmp
pop
dec
sar
mov
sbb
ret
enter
mov
or
jne
jno
adc
mov
test
stc
cmp
and
stos
adc
jbe
nop
cld
fld
mov
sbb
sbb
in
add
add
pusha
sub
mov
sbb
ret
jbe
mov
push
jns
push
mul
cdq
adc
mov
or
add
movs
xchg
xchg
fimul
and
fisubr
mov
add
movs
je
xchg
push
(bad)
data16
fld
fstp
pushw
clc
imul
inc
add
(bad)
mov
in
gs
mov
es
mov
xchg
and
enter
fstp
lods
adc
lahf
retf
fld
fisttp
and
jns
or
add
cmp
pop
gs
mov
add
add
inc
add
adc
pop
lahf
add
cmp
dec
fist
push
cmp
xchg
inc
mov
push
mov
xchg
add
mov
mov
outs
mov
fwait
jp
xor
pop
test
fld
out
ins
dec
pop
push
ret
add
sbb
mov
mov
sub
bound
fld
add
ficom
mov
and
pop
fucomp
fs
hlt
xchg
out
repz
and
adc
out
adc
adc
inc
mov
dec
repz
and
adc
xchg
push
dec
lods
jmp
aas
es
xor
mov
sub
aaa
and
mov
ror
xor
imul
enter
popf
push
mov
mov
pop
dec
and
inc
jns
sub
inc
leave
stos
xchg
ret
sar
jnp
pusha
sbb
inc
dec
push
pop
sub
sub
cmp
push
mov
aam
xchg
ret
fsubr
push
push
inc
add
push
and
sbb
daa
std
shl
test
push
gs
movs
push
lock
imul
and
jns
pop
ins
clc
add
push
adc
sar
sbb
loop
or
sbb
inc
(bad)
xor
dec
pop
not
push
imul
pop
cmp
ret
cs
inc
addr16
adc
hlt
push
ja
sub
cmp
inc
loop
or
push
mov
adc
adc
mov
adc
adc
cmp
lock
mov
push
mov
rep
jmp
or
lahf
inc
jno
sar
sub
mov
xchg
test
lea
ret
out
xor
push
ins
shl
ins
outs
movs
loopne
imul
or
ds
sbb
jb
js
inc
pop
adc
push
and
jo
aad
cmp
(bad)
mov
(bad)
in
fdivr
fidiv
rol
xor
sbb
sub
neg
and
mov
inc
and
mov
in
es
out
xchg
sbb
sbb
les
and
test
cmp
lahf
push
cmp
out
imul
pop
stc
popa
lea
retf
or
push
inc
lahf
retf
xchg
inc
pop
sbb
sbb
inc
cs
sub
and
adc
pop
xor
xor
mov
in
add
repnz
xchg
mov
rol
ins
(bad)
(bad)
or
xchg
fwait
cwde
ret
rcl
loope
xchg
add
test
data16
adc
add
mov
add
loop
adc
fcom
ror
or
(bad)
and
jns
aaa
mov
rcpps
icebp
mov
cwde
and
push
je
xchg
hlt
adc
(bad)
mov
ja
jle
add
add
add
pop
cmps
add
push
add
aaa
in
jmp
jmp
mov
mov
dec
add
push
xor
fiadd
cmps
enter
(bad)
add
dec
mov
in
dec
int3
sbb
ror
loopne
mov
test
pop
dec
(bad)
mov
pushf
mov
dec
imul
fs
out
mov
mov
adc
aaa
cwde
xor
inc
mov
jmp
xchg
mov
fisttp
das
nop
mov
jmp
pop
add
inc
lahf
sbb
ja
xchg
cmps
xor
test
inc
popa
stos
and
adc
push
popf
ret
xchg
in
add
ret
push
repz
(bad)
daa
adc
inc
pop
xor
dec
add
add
or
shl
ds
cmp
push
loope
arpl
jp
inc
test
stc
or
mov
add
jge
pop
adc
add
inc
scas
mov
cmc
xchg
xor
and
push
lds
and
retf
daa
ror
mov
adc
aad
ror
sub
cmp
inc
pop
fcom
xchg
sub
das
mov
(bad)
lods
mov
addr16
mov
mov
(bad)
sbb
or
adc
fidiv
add
adc
push
stc
push
or
push
pusha
and
or
dec
in
sbb
es
sbb
fild
fcomp
scas
jmp
or
add
push
popa
push
mov
sti
xchg
push
and
dec
mov
mov
je
mov
push
call
pop
in
stos
gs
lds
fdiv
sti
test
sbb
xor
lods
add
push
sub
push
jmp
call
mov
mov
(bad)
hlt
imul
add
adc
scas
inc
mov
mov
xlat
mov
repz
es
push
pop
repz
add
repz
add
inc
(bad)
outs
add
and
lahf
outs
ss
xchg
or
pop
test
(bad)
std
add
imul
loope
dec
(bad)
repnz
loopne
sub
pushf
test
mov
retf
loop
fwait
inc
loope
hlt
add
push
lods
sub
and
fbstp
test
arpl
call
fwait
or
lds
imul
dec
iret
ret
jne
adc
xor
add
push
add
or
jg
jmp
push
mov
add
retf
pop
or
adc
pop
pop
xor
xchg
add
adc
loop
lods
jo
mov
aad
adc
add
test
mov
add
cwde
cmovnp
dec
stos
ret
loope
fcom
xor
lds
fs
adc
and
movs
enter
or
adc
jge
add
js
cmps
push
and
popf
enter
cli
adc
xor
mov
adc
sub
or
adc
clc
mov
add
push
in
enter
ret
push
xor
mov
adc
add
int3
add
push
pop
push
lods
arpl
xchg
or
cmp
sbb
dec
div
or
icebp
sbb
neg
and
push
cmp
pop
sbb
sar
cdq
(bad)
mov
and
xor
sbb
mov
cmp
push
dec
jno
or
cmp
leave
xor
call
add
xchg
adc
imul
push
add
add
dec
dec
sbb
(bad)
pop
xor
in
cwde
adc
out
add
mov
iret
addr16
cwde
fiadd
mov
or
test
(bad)
or
das
dec
test
xchg
mov
inc
call
icebp
clc
add
lock
push
sbb
cwde
movs
je
adc
jecxz
dec
mov
xor
inc
cdq
push
sub
add
lock
sahf
test
test
mov
mov
and
cwde
mov
push
nop
and
pop
dec
ret
cmp
lock
movs
(bad)
icebp
add
pop
mov
pop
inc
cmp
jns
mov
cmp
push
repz
jo
fcomp
sbb
push
jmp
ror
jl
push
test
pusha
daa
jmp
lahf
xchg
mov
ret
mov
jne
or
add
les
fcmovnu
inc
pushf
sbb
xchg
in
cmp
cmp
and
sub
das
test
add
sbb
jmp
add
push
dec
imul
and
jecxz
(bad)
rcl
push
inc
mov
stc
mov
dec
mov
test
fdivr
repnz
imul
hlt
adc
stc
test
je
and
dec
adc
mov
call
dec
and
inc
add
les
push
mov
cdq
enter
sbb
add
int3
xchg
mov
push
cmp
adc
and
cmp
jnp
sub
pop
pop
lea
sbb
lock
mov
sbb
cmp
cdq
add
ins
ror
mov
jns
ins
mov
sub
xlat
or
push
leave
test
xchg
pop
add
(bad)
mov
add
xlat
pop
aas
lods
adc
pop
imul
mov
push
and
adc
adc
cld
adc
loope
pop
rcl
and
adc
push
test
mov
into
push
sbb
and
jge
sbb
adc
clc
sbb
aad
cmp
mov
stc
adc
lods
sti
sbb
jo
inc
jnp
or
test
adc
mov
jmp
sbb
fisttp
or
dec
ss
pop
rcl
mov
push
pop
dec
dec
addr16
ds
test
(bad)
push
mov
mov
push
dec
mov
ss
add
xor
inc
adc
inc
fiadd
call
jge
push
inc
mov
loope
mov
pop
mov
mov
jle
je
or
or
in
test
cmp
mov
jne
jb
add
pop
xadd
jne
push
or
and
addr16
and
mov
je
fisub
std
ja
sub
dec
or
fisub
jb
call
mov
and
fisttp
adc
adc
add
add
sub
jmp
jne
lods
push
xor
popf
sbb
test
jecxz
sbb
ss
fild
and
pop
add
mov
xor
iret
or
pop
xchg
add
popa
sbb
pop
cmp
lea
xchg
sub
mov
push
pop
or
movs
inc
jmp
dec
test
out
xchg
push
push
inc
leave
push
push
mov
es
clc
into
dec
or
xchg
icebp
mov
fcomp
sbb
add
xor
push
add
jae
add
adc
out
rcr
cmp
lods
push
inc
and
rol
push
adc
jmp
dec
add
sbb
(bad)
clc
dec
(bad)
adc
push
pushf
gs
inc
xchg
scas
lock
adc
aaa
ins
cmps
mov
test
inc
(bad)
cmp
adc
xor
jns
cmp
cmp
xchg
out
pop
inc
adc
iret
in
cmp
dec
sbb
jns
push
and
pop
sahf
pop
sub
fs
cmp
xor
jae
cs
jo
je
js
pop
sahf
retf
dec
jl
adc
xchg
out
pop
mov
jns
iret
in
nop
addr16
imul
cwde
ins
pushf
jno
cmp
out
jg
sub
lods
xchg
mov
mov
retf
jae
popf
mov
out
pop
shr
or
mov
cmp
aam
fadd
retf
jae
cs
loopne
out
pop
sahf
in
call
cmp
jmp
lods
jl
iret
clc
sti
cld
add
add
cmp
out
cli
adc
in
or
adc
adc
retf
jae
sbb
and
repnz
and
and
sub
in
cmp
sub
xor
jae
cs
cmp
repnz
sahf
cmp
inc
addr16
in
cmp
outs
dec
jne
jnp
jns
iret
push
jg
test
pop
sahf
retf
lea
cdq
mov
mov
cs
in
jo
je
pop
sahf
retf
jae
mov
xchg
out
leave
test
mov
cs
in
mov
nop
fist
cwde
jmp
repz
out
pop
mov
out
ds
call
or
sbb
jl
lahf
lds
les
xchg
out
cmp
inc
int3
pop
retf
repz
jl
rcr
adc
push
out
pop
sahf
fcomp
pop
loopne
mov
imul
iret
in
ja
xor
cmp
cld
xor
iret
movs
stc
adc
repnz
add
or
or
adc
adc
sbb
cmp
and
and
retf
jae
cs
sub
out
pop
sahf
xor
xor
cmp
mov
stc
inc
add
mov
adc
cs
in
push
sub
sahf
retf
jae
xor
xchg
out
cmp
inc
cs
in
ins
push
jo
je
retf
jae
pop
js
jl
xchg
out
pop
xor
mov
in
cmp
mov
jns
xchg
xchg
cwde
iret
adc
cs
pushf
test
cs
out
adc
sahf
retf
jae
retf
mov
mov
jecxz
mov
loope
pop
(bad)
icebp
enter
repnz
sahf
int3
sti
sar
aam
pop
faddp
pop
add
adc
fmul
mov
sbb
sbb
jns
iret
in
in
daa
lock
hlt
aas
clc
inc
cld
repz
repnz
add
xchg
adc
pop
sahf
retf
push
or
arpl
imul
in
sbb
and
and
sub
repnz
cs
in
cmp
cmp
inc
sahf
retf
jae
int
iret
dec
aad
out
pop
dec
loope
jmp
iret
in
cmp
pop
call
mov
adc
or
cs
push
repnz
sahf
retf
pop
je
js
mov
sub
iret
in
mov
xchg
cs
in
adc
ret
in
sbb
adc
cmp
adc
cs
lods
lahf
mov
mov
pop
sahf
retf
stos
mov
cmp
out
mov
lahf
ret
in
int3
cmps
adc
rcl
mov
iret
in
cmp
loopne
in
in
jl
call
or
lock
adc
xchg
adc
scas
xchg
out
pop
cld
and
hlt
pop
xchg
out
jl
add
or
cmp
adc
dec
retf
jae
sbb
push
out
pop
sahf
and
pop
sub
mov
jns
jg
jns
iret
xor
cmp
retf
popf
inc
mov
xchg
out
lods
dec
mov
in
push
lds
pop
sahf
retf
jae
shl
fs
out
fild
ins
imul
iret
in
jo
je
js
in
jl
pop
call
adc
test
mov
out
pop
sahf
mov
dec
xchg
jae
cmp
dec
cwde
push
pushf
imul
cmp
out
push
movs
popa
test
cs
in
lods
jae
xchg
cs
in
adc
in
sbb
adc
lahf
les
enter
ret
stc
sbb
iret
ror
aam
adc
cmp
ret
in
fdivr
loopne
cs
in
in
call
jo
in
lock
adc
add
or
adc
cld
adc
add
and
or
iret
in
or
adc
pop
sahf
retf
jae
aas
sbb
cmp
out
push
and
pop
cs
in
sub
pop
xor
xor
cmp
cmp
inc
lahf
inc
iret
in
cmp
dec
lods
dec
mov
push
mov
pop
sahf
pop
retf
pop
(bad)
mov
loope
jmp
ins
out
jo
je
pop
lahf
retf
stc
js
or
adc
ds
jae
sbb
sahf
retf
jae
and
xchg
out
pop
xchg
xor
in
cmp
mov
jo
cs
lods
cmps
adc
xchg
adc
jae
adc
in
les
in
sbb
adc
mov
sbb
fmul
adc
(bad)
jae
cs
loopne
in
call
jmp
jg
lock
iret
in
adc
idiv
std
cld
rep
jle
adc
push
jle
add
pop
sahf
retf
and
xor
mov
cmp
cs
in
sbb
and
sahf
retf
jae
sub
cmp
out
jne
jnp
jg
iret
in
cmp
retf
jae
mov
xchg
xchg
out
pop
dec
cdq
push
lahf
push
iret
in
cmp
pop
stos
pop
mov
jae
cs
mov
pop
sahf
push
in
cmp
in
out
in
jae
cs
jl
xor
jns
out
jecxz
or
adc
mov
nop
sbb
repnz
in
movs
inc
test
lods
iret
in
sbb
adc
clc
sbb
mov
adc
mov
(bad)
enter
jae
adc
jg
rcr
aam
fdivr
cmp
loopne
in
in
cmp
adc
fucomp
loope
jns
iret
lock
pop
lahf
retf
sti
cld
pop
or
div
pop
sahf
iret
or
add
or
or
adc
adc
cs
in
sbb
pop
pop
sahf
retf
jae
popa
and
sub
out
jae
ja
sub
in
xor
cmp
jns
inc
popf
inc
mov
out
pop
dec
mov
mov
cmp
push
(bad)
pop
jecxz
jae
cs
in
jmp
repnz
sahf
fs
push
ds
sti
jo
or
cmp
out
(bad)
adc
pop
test
mov
pop
sahf
retf
jae
sub
xchg
out
aas
cwde
dec
pushf
push
cs
in
mov
sahf
retf
jae
sub
mov
mov
les
enter
adc
cs
ror
aam
fdiv
pop
sahf
retf
rcr
aad
fistp
loope
cmps
adc
out
cmp
out
repz
hlt
call
or
call
pop
add
cmp
or
out
daa
or
adc
adc
sbb
sahf
retf
jae
push
and
pop
xchg
out
pop
sub
jno
iret
in
cmp
xor
cmp
cmp
inc
xchg
out
pop
sahf
inc
fwait
dec
mov
in
cmp
mov
mov
cs
pop
rcr
repnz
sahf
retf
(bad)
out
ds
out
stc
jo
ud0
out
adc
js
jl
cs
in
and
jae
xor
repnz
xchg
dec
cwde
dec
pushf
out
mov
adc
test
lods
xchg
adc
out
jg
inc
adc
mov
cs
in
les
retf
jae
mov
mov
jns
adc
rcr
fpatan
cmp
jmp
clc
pop
sahf
retf
sti
in
std
lock
pop
sahf
retf
sti
call
psubb
cld
iret
ja
jns
adc
stc
jle
add
retf
jae
or
or
out
pop
sahf
adc
adc
sbb
mov
jae
jns
add
iret
and
sub
mov
sub
xor
xor
cmp
retf
mov
mov
mov
mov
in
push
leave
pop
out
sahf
retf
jae
icebp
pusha
repz
out
std
push
or
adc
jae
cmp
jl
adc
inc
test
pop
jo
cs
mov
arpl
adc
push
push
jo
mov
iret
in
test
lods
mov
mov
adc
jns
mov
out
pop
(bad)
ror
xlat
int3
out
jl
inc
adc
out
aam
mov
sti
fmul
idiv
adc
cs
in
in
sub
fwait
cs
in
adc
xor
aaa
cld
iret
ja
jns
add
push
add
retf
jae
or
jno
repnz
sahf
adc
jns
in
cmp
jge
(bad)
and
and
sub
retf
mov
mov
xchg
out
sar
rol
std
cs
jecxz
dec
pop
adc
adc
jns
pop
daa
pop
sub
pusha
aaa
fs
push
inc
ins
dec
jo
retf
jae
cs
js
out
pop
sahf
jl
sub
mov
jnp
xor
xchg
mov
xchg
pushf
xchg
mov
out
lahf
test
adc
mov
mov
lahf
ret
in
mov
ror
mov
enter
jns
int3
stc
sar
jae
pop
lahf
aam
adc
adc
fdiv
pop
sahf
retf
das
loopne
in
pop
sahf
iret
loope
jg
in
dec
lock
out
pop
hlt
imul
add
repz
sti
stc
dec
aas
pop
cld
(bad)
sti
ficom
or
iret
in
or
adc
adc
sbb
repnz
cs
in
sub
sub
xor
in
jl
adc
adc
jae
cs
inc
pop
out
pop
sahf
inc
and
mov
aaa
push
cmp
pop
inc
pop
inc
pusha
repnz
sahf
retf
dec
fs
push
out
addr16
je
cs
in
js
jl
pop
sahf
retf
jae
pop
repnz
mov
in
xchg
mov
retf
jae
lds
out
pop
test
lods
pop
push
(bad)
adc
adc
mov
mov
jae
adc
repnz
les
enter
test
cmp
stc
sbb
aam
adc
inc
jae
cs
fmul
push
in
pop
sahf
retf
imul
sahf
iret
jecxz
scas
adc
xchg
clc
call
adc
scas
adc
cld
cmp
out
pop
adc
or
or
adc
adc
retf
jae
iret
sbb
sbb
xchg
out
pop
and
and
sub
in
cmp
sub
xor
retf
jae
cs
cmp
jae
pop
lahf
cmp
pop
call
cmove
pop
sahf
retf
and
dec
xor
inc
push
pop
pop
jns
iret
in
pop
ja
jnp
sahf
retf
jae
lea
ins
cmp
out
fwait
jo
je
cs
in
js
jl
sbb
leave
mov
iret
loope
pop
mov
nop
sbb
out
pop
sahf
xchg
jmp
out
xchg
cmc
mov
movs
pop
sbb
out
pop
ficom
adc
xchg
xor
jae
cs
mov
repnz
sahf
retf
dec
enter
lock
adc
jns
iret
out
adc
jge
jg
sahf
retf
jae
test
(bad)
repz
in
popf
lock
iret
loope
pop
hlt
lods
clc
jg
push
add
xchg
jg
or
cmp
adc
adc
adc
shr
iret
in
or
adc
adc
retf
jae
fistp
in
std
scas
retf
jae
mov
std
jae
pop
lahf
sub
xor
popf
mov
adc
or
cmp
inc
sahf
retf
repz
dec
jns
out
pop
dec
adc
cmp
pop
cdq
pop
mov
pusha
test
pop
sahf
push
repnz
sahf
iret
sbb
je
js
jl
xchg
out
in
or
test
sbb
adc
repnz
nop
pop
xchg
and
and
jns
movs
xor
pop
sahf
lods
dec
mov
adc
mov
cmp
out
jge
xchg
mov
xchg
adc
cmps
retf
repz
adc
lods
jae
ds
inc
adc
mov
retf
leave
call
cs
out
lock
hlt
jecxz
mov
jae
repz
sti
add
mov
add
iret
in
and
retf
jae
xor
aaa
sbb
xchg
out
cmp
inc
and
bnd
mov
sub
in
cmp
push
xor
gs
cs
cmp
jae
(bad)
mov
adc
mov
xchg
dec
popf
push
jns
iret
in
push
mov
retf
jae
shl
fs
out
fldcw
ins
not
or
adc
js
in
cmp
jl
sub
arpl
test
adc
cmp
jns
xchg
dec
cwde
das
adc
ret
pushf
das
adc
push
(bad)
repnz
jecxz
loop
adc
cdq
mov
mov
jae
mov
mov
xor
loope
sahf
out
pop
sub
adc
stc
aam
repnz
sbb
bnd
xchg
and
aaa
adc
xor
call
sahf
iret
loopne
(bad)
hlt
fist
clc
push
dec
aam
pop
cld
pop
repnz
sahf
out
call
sahf
out
add
push
jne
adc
out
pop
adc
sbb
push
mov
and
and
sub
fsub
cmp
out
mov
mov
jns
iret
in
inc
xlat
inc
fistp
jae
loope
cmc
push
pop
pop
shl
xchg
add
sub
push
or
adc
or
sbb
or
pusha
(bad)
adc
cmp
ficom
push
jns
iret
jo
je
js
push
sahf
retf
dec
jl
inc
or
ins
pop
pop
pop
pop
mov
mov
pop
pop
pop
cwde
mov
movs
rcr
pop
test
lods
(bad)
mov
mov
adc
pop
pop
mov
sbb
retf
jne
or
inc
das
pop
jg
(bad)
call
in
inc
loopne
icebp
xor
or
sub
or
jae
xchg
sti
add
es
mov
sub
cmp
or
add
call
out
div
mov
fst
pushf
xchg
in
mov
call
enter
add
fld
or
xor
xor
inc
inc
mov
sub
pop
add
sub
or
inc
pop
mov
in
pop
inc
rcl
cdq
movs
mov
inc
add
arpl
jle
push
push
and
inc
adc
xchg
inc
int3
dec
popf
inc
cmp
mov
adc
push
xor
mov
dec
or
inc
jl
mov
daa
mov
mov
mov
push
mov
not
push
cmp
mov
sbb
jnp
pop
add
rol
lods
icebp
outs
sbb
xor
mov
pop
dec
inc
and
data16
add
sbb
jl
mov
test
dec
enter
pop
adc
not
test
jnp
pushf
inc
cmp
add
push
xor
repz
inc
sub
(bad)
jmp
push
fild
cmps
arpl
scas
or
mov
mov
rcpps
cmps
push
inc
mov
push
and
cmp
out
arpl
xor
or
and
mov
dec
or
and
or
mov
sub
setae
test
pop
leave
les
das
fiadd
outs
push
daa
sub
js
and
mov
je
mov
cs
test
add
inc
sbb
mov
push
aam
mov
sub
dec
jmp
dec
ret
cs
push
ss
jecxz
jae
push
cmp
daa
add
add
mov
push
mov
jl
push
lock
xchg
rcl
daa
xchg
push
push
push
xchg
out
pop
sbb
sub
inc
and
les
or
pop
mov
repz
mov
shr
retf
adc
out
mov
push
sub
mov
cmp
push
fstp
push
xchg
xor
sub
sub
out
stos
ror
aaa
and
out
and
mov
daa
rol
add
inc
add
ror
pop
push
adc
xor
mov
mov
add
push
mov
cmc
cmp
clc
mov
add
adc
add
cmp
adc
fidiv
push
push
push
push
fmul
sbb
jecxz
inc
fild
adc
ret
pop
or
cmp
push
xchg
dec
adc
push
push
adc
lds
or
fistp
loopne
jl
aad
js
in
cmp
sbb
into
setge
(bad)
dec
loope
mov
adc
and
test
inc
xchg
xor
jno
pop
(bad)
sbb
inc
push
hlt
add
pop
je
mov
shr
in
xor
mov
push
xchg
jns
inc
fsubr
and
push
ret
add
es
les
inc
adc
jle
stos
mov
mov
imul
jne
in
add
lea
call
sub
push
pusha
loopne
mov
or
push
sub
(bad)
xchg
and
push
adc
adc
hlt
shr
push
mov
push
pop
mul
seto
neg
or
push
outs
dec
mov
out
fiadd
out
loopne
sbb
dec
mov
xchg
hlt
fimul
(bad)
dec
push
xchg
mov
cwde
and
fwait
mov
outs
mov
or
jge
add
add
enter
cmp
cpuid
mov
outs
inc
sar
sbb
add
(bad)
(bad)
jmp
ds
add
or
lock
mov
call
inc
loope
mov
push
nop
mov
push
adc
call
pop
or
retf
cmps
cli
push
sbb
sbb
sbb
or
ret
xchg
mov
push
or
rcl
or
leave
and
jnp
lds
push
retf
adc
bound
cwde
loopne
or
mov
adc
jle
adc
shl
mov
jmp
add
pop
ror
fsubr
retf
cmp
and
test
pop
fiadd
ret
outs
loopne
das
test
inc
ret
and
ror
jmp
sbb
xor
adc
mov
fisubr
lock
aad
cld
aad
jns
test
jnp
mov
jbe
cmp
xlat
fcom
leave
mov
in
add
pop
push
dec
test
cld
dec
pop
cwde
rcr
cli
ss
sub
mov
and
mov
xchg
add
fucom
icebp
and
retf
mov
out
pop
mov
mov
mov
clc
inc
mov
in
cli
mov
mov
add
xor
mov
out
(bad)
imul
test
jnp
dec
ins
mov
jae
inc
loope
test
push
dec
or
adc
loop
dec
cmp
das
adc
icebp
dec
add
shl
adc
adc
loop
sub
je
push
and
dec
adc
cwde
ss
adc
pop
mov
xchg
out
lahf
push
push
retf
(bad)
fisub
jp
jecxz
fcmovne
inc
and
or
adc
mov
inc
and
cmps
push
out
and
jno
and
xor
(bad)
xor
jns
cld
adc
sahf
int
mov
push
fst
les
call
into
lock
push
sbb
and
aam
push
jmp
pop
inc
cmp
inc
adc
jp
xor
jmp
jne
(bad)
pop
mov
mov
dec
in
lahf
dec
xchg
or
imul
hlt
dec
jns
inc
push
mov
push
test
push
adc
xchg
daa
and
js
loopne
adc
sub
shl
mov
pop
push
leave
call
cwde
mov
test
adc
cmp
test
jecxz
out
mov
sbb
or
pop
retf
mov
inc
xchg
or
dec
adc
push
xchg
hlt
test
push
addr16
nop
or
sbb
push
inc
inc
push
sub
adc
cmp
int3
jecxz
sub
inc
xchg
leave
sub
xlat
xchg
cmp
and
rcl
adc
loopne
sbb
add
or
cmp
push
xor
std
add
int3
fadd
pop
ins
bound
or
icebp
retf
int
sub
mov
(bad)
push
and
sti
stc
call
ret
jmp
(bad)
fstp
inc
mov
sbb
xor
or
sbb
or
mov
inc
mov
jge
cmp
dec
xor
cwde
pop
or
push
rol
and
dec
and
ret
adc
jbe
(bad)
mov
adc
fisttp
xor
js
dec
xor
pop
jb
ret
test
push
add
pop
pop
pop
js
mov
js
lock
nop
sbb
shl
push
mov
jge
push
popa
jmp
mov
and
mov
inc
xchg
push
rcr
pop
jne
add
and
xor
loop
mov
push
sbb
dec
aas
cmp
add
add
sub
(bad)
mov
and
dec
inc
loopne
xor
mov
inc
add
adc
sub
mov
push
cmp
sub
shr
(bad)
sub
(bad)
scas
arpl
ror
add
inc
test
ins
xor
js
or
pop
popw
enter
stos
mov
adc
mov
nop
inc
enter
push
add
push
sbb
loope
imul
inc
and
loope
inc
xlat
rcl
clc
ins
push
imul
add
pusha
stos
jmp
xor
dec
add
xor
dec
mov
xor
pop
add
xor
xchg
xchg
sub
pop
inc
es
shr
aam
imul
call
pop
scas
xor
sub
cmp
and
mov
das
inc
dec
or
xchg
out
cmp
imul
add
test
das
movs
push
add
imul
das
mov
jo
push
inc
fsub
das
mov
jae
das
(bad)
or
das
int3
jb
xor
adc
xor
movlps
fadd
jbe
push
or
loopne
or
and
xor
xor
jo
aam
mov
sbb
sub
adc
daa
sbb
and
or
or
dec
lods
mov
inc
gs
test
mov
or
gs
sbb
test
mov
push
xchg
and
pop
jo
js
mov
mov
gs
sub
jl
xor
dec
and
adc
fwait
cs
gs
xor
push
rcl
es
sub
in
pop
cmp
xchg
pop
push
es
mov
gs
call
pop
repnz
das
sub
lea
sub
mov
push
rcr
cld
sahf
mov
daa
sub
mov
das
lea
xchg
and
pop
addr16
or
fadd
adc
and
xor
add
push
and
das
addr16
retf
mov
xchg
or
ja
sbb
les
xchg
das
xchg
inc
cmp
dec
test
sbb
dec
cmp
cld
sbb
jo
xlat
inc
mov
inc
mov
or
add
pop
add
cdq
add
cdq
add
jl
aad
popa
sub
leave
and
xor
pop
adc
mov
mov
adc
and
push
xor
xchg
sbb
sbb
dec
enter
test
add
xlat
xor
jno
xchg
pop
ins
in
sbb
lds
sbb
dec
pusha
std
and
pop
ins
fiadd
lds
and
sub
xor
es
jo
pop
ins
fisubr
lds
aad
cdq
inc
and
cmp
daa
or
mov
leave
aad
cdq
sub
cmp
xor
cs
xor
or
pop
das
test
jmp
ror
adc
mov
xor
(bad)
xor
outs
cmp
xor
xor
cmp
add
add
inc
loope
push
jo
cmp
mov
lods
loope
adc
ins
cmp
cmp
adc
sub
sub
push
dec
adc
daa
pop
cwde
xor
and
push
and
xor
dec
loope
loope
adc
sbb
jl
or
sbb
pop
push
fs
and
sbb
cmp
xchg
inc
jl
cmp
sbb
sbb
jnp
pop
sbb
xchg
cmp
xchg
cwde
outs
jge
push
inc
adc
and
mov
cmp
mov
push
push
mov
push
cwde
sbb
adc
call
cmps
adc
push
sbb
xor
dec
test
xor
xor
in
or
xlat
mov
add
pop
ins
adc
rol
sbb
scas
sbb
add
addr16
add
xlat
mov
xor
cmp
fsubrp
dec
loope
push
or
dec
div
sbb
clc
ss
aaa
inc
push
mov
xchg
xor
mov
call
xor
adc
fcom
cmp
cmp
or
mov
mov
dec
add
or
add
jb
or
mov
xor
jp
clc
xor
adc
into
or
adc
sbb
sbb
push
je
mov
sub
or
add
cmp
lods
adc
adc
xor
and
sub
movs
movs
push
jbe
fld
pop
adc
add
pop
adc
lods
sbb
push
mov
out
les
punpcklbw
mov
mov
add
mov
mov
sub
gs
push
push
push
adc
imul
sbb
and
js
adc
cmp
push
mov
js
push
push
mov
and
pop
and
je
mov
sbb
or
sub
sbb
gs
or
and
add
add
pop
add
lods
mov
or
pop
in
data16
mov
popfw
or
inc
mov
mov
inc
jo
or
or
mov
adc
loopne
mov
daa
loope
std
mul
or
xor
push
or
cmp
adc
ret
adc
repz
sbb
cmp
ja
ret
adc
pusha
pop
ja
sbb
bound
push
push
jp
dec
cmps
pop
fsub
sbb
mov
xor
or
aaa
or
cwde
or
dec
sbb
push
test
rcl
or
mov
mov
cdq
adc
and
enter
push
or
inc
movs
imul
nop
pop
and
aaa
and
or
mov
lock
leave
push
jmp
and
inc
(bad)
shl
(bad)
rcl
and
sbb
xor
adc
or
mov
cmps
sar
add
sub
imul
mov
pop
jge
push
sbb
cmp
les
sbb
mov
cs
cmp
out
sub
adc
jnp
es
and
shl
push
adc
cmp
or
popa
ret
xor
xor
stc
xor
mov
and
mov
sub
adc
aaa
sar
jo
jo
add
arpl
xor
sbb
fs
pop
adc
fs
xchg
cmp
cmps
fs
cmp
fs
inc
lahf
mov
push
loopne
mov
aam
in
mov
xor
or
mov
inc
inc
inc
jmp
adc
adc
cmps
inc
rcr
rcr
pop
cmp
jg
inc
mov
xor
mov
jb
stos
adc
arpl
pop
sbb
fld
je
sub
push
lods
rcl
or
or
ror
dec
in
dec
adc
scas
dec
fcomp
fcom
fstp
scas
loop
or
in
inc
adc
mov
or
or
push
add
jge
sbb
or
sub
adc
test
mov
dec
movs
sbb
outs
push
pop
mov
add
push
xor
pop
sbb
pop
popa
shl
sbb
pop
mov
pop
push
aaa
or
jmp
leave
xor
push
lods
push
xor
sbb
dec
push
aaa
in
les
in
jecxz
(bad)
mov
add
mov
mov
in
pop
xchg
xchg
push
or
mov
lea
stos
dec
jne
and
and
inc
(bad)
mov
int3
dec
inc
sbb
sub
cmps
and
dec
out
cmp
jae
jb
popa
sub
shl
or
in
inc
mov
movzx
xchg
push
push
xchg
imul
fwait
xchg
push
mov
mov
push
push
fst
cmp
inc
movs
or
(bad)
bound
test
sub
or
push
(bad)
adc
sbb
and
js
or
data16
test
int3
sub
jnp
into
fcom
adc
cmp
push
rol
leave
mov
xlat
mov
inc
xchg
add
push
dec
mov
add
leave
xlat
pop
mov
nop
inc
les
jmp
xchg
jmp
xchg
pshufw
popa
jo
or
repz
xchg
fldcw
push
cdq
xchg
sub
jb
push
test
push
cdq
int
push
mov
popa
inc
mov
div
mov
mov
and
cwde
or
pop
sahf
rcl
xchg
inc
mov
mov
jno
(bad)
cs
les
push
sub
sbb
loope
mov
jp
add
xor
jl
ret
cmp
cmp
push
jle
pop
cmps
pop
outs
sub
adc
into
faddp
lock
push
push
aad
jo
adc
shl
dec
mov
imul
xor
imul
or
and
or
push
adc
sub
cld
lock
add
adc
inc
and
cmc
dec
loopne
cmps
dec
sbb
test
sub
adc
add
inc
cmps
scas
test
xchg
push
add
sub
test
xor
pop
dec
das
sub
add
sub
and
es
mov
adc
add
out
dec
and
das
mov
cmps
or
mov
(bad)
lea
adc
pop
add
bound
stos
js
out
nop
test
jge
xchg
push
add
nop
jmp
sti
aam
cdq
xchg
and
popf
mov
sub
ins
test
pop
not
xchg
xchg
cwde
push
aam
sbb
test
sub
fadd
cdq
call
push
test
jmp
icebp
je
jmp
popf
and
sahf
sbb
push
lahf
sbb
popf
and
das
and
mov
dec
mov
cmp
dec
push
adc
inc
push
mov
nop
mov
add
mov
movs
cmp
cmps
push
cmp
jo
adc
mov
test
xor
imul
nop
xor
inc
add
(bad)
cs
inc
push
pop
sti
fdivp
push
jae
dec
(bad)
push
sub
ss
push
(bad)
icebp
mov
push
or
aad
push
push
add
aaa
fld
repnz
jns
push
xor
mov
cmps
(bad)
cs
rcr
add
jp
sub
push
es
dec
arpl
lock
sbb
push
cmc
ds
push
loopne
sbb
fisttp
mov
xchg
shl
ds
clc
push
cli
push
adc
push
imul
imul
and
push
add
push
js
adc
les
dec
arpl
mov
jb
or
ins
fcmovu
bound
mov
or
push
add
or
jno
or
push
mov
scas
nop
inc
add
inc
or
sbb
inc
push
je
jg
cli
add
push
sub
jl
fisttp
add
jle
or
movs
test
or
(bad)
fstp
add
jge
adc
or
and
mov
cmp
jb
sub
dec
or
sub
add
xchg
mov
add
(bad)
mov
xor
xor
adc
adc
xor
stos
js
dec
xor
jecxz
cmp
in
ins
add
mov
sti
inc
and
or
test
mov
(bad)
and
mov
inc
pop
pusha
add
mov
adc
sbb
xchg
xor
and
pop
rcr
or
or
push
loop
mov
outs
je
in
rol
dec
mov
xor
aam
fldln2
test
or
or
inc
jle
or
mov
mov
inc
enter
mov
pop
inc
outs
jb
mov
std
jmp
aas
jbe
mov
ret
pop
xor
push
out
pop
mov
inc
test
or
loop
pop
and
icebp
(bad)
adc
or
invd
xor
xchg
leave
scas
dec
bound
mov
sub
mov
or
or
xor
or
clc
cmp
(bad)
mov
xchg
add
add
or
mov
or
scas
jge
or
mov
push
data16
adc
(bad)
mov
test
rol
adc
mov
or
mov
xchg
pushf
sub
pop
js
inc
xchg
push
mov
js
mov
mov
push
or
add
xchg
repnz
xor
sbb
ret
jbe
pop
mov
push
and
dec
or
adc
mov
fstp
and
add
push
mov
mov
sub
dec
sub
pop
adc
pop
ret
out
mov
inc
or
test
pop
xchg
shr
fs
loopne
push
sbb
cmp
mov
pop
mov
mov
je
mov
pop
inc
test
lahf
sbb
test
dec
jge
inc
adc
add
js
inc
add
loope
dec
sbb
cmp
ror
into
je
dec
fidivr
in
jmp
cmp
jl
cmps
dec
or
jecxz
les
adc
inc
pop
xor
cs
mov
adc
push
xchg
clc
je
ja
add
mov
xor
loopne
stos
ror
stc
adc
xchg
jbe
jnp
mov
push
pushf
shl
or
cmp
imul
out
jbe
dec
js
mov
scas
imul
and
jge
cmp
sbb
div
dec
lea
mul
fs
mov
shr
xchg
or
dec
xlat
or
or
mov
add
ss
cmp
mov
add
je
sbb
mov
(bad)
mov
das
add
sub
fisubr
fmul
add
call
inc
and
push
xchg
add
adc
xor
icebp
push
dec
sbb
ror
stos
jge
cli
pop
sub
out
ror
enter
hlt
mov
cwde
mov
ror
inc
retf
mov
sbb
ins
xor
sbb
add
adc
inc
jmp
(bad)
sbb
push
rcl
pushf
mov
add
sub
fwait
loopne
repnz
fadd
xchg
and
sbb
loop
sub
add
inc
popa
fadd
(bad)
adc
or
sahf
test
mov
inc
push
add
repz
shl
cld
cs
sub
popa
or
nop
push
jo
lods
ret
and
aas
inc
add
and
and
rcr
gs
pop
shl
sar
push
enter
xor
adc
mov
pop
(bad)
jle
repz
push
inc
xchg
add
lea
push
push
add
push
xor
sub
pop
cdq
cmc
lahf
sub
cmc
or
sti
push
gs
add
sti
hlt
push
and
xor
push
lods
dec
push
or
push
sar
loope
push
or
mov
js
ror
and
enter
jo
or
es
adc
push
repz
mov
add
mov
inc
inc
or
jle
xchg
hlt
cmps
imul
pusha
arpl
outs
add
pop
arpl
and
dec
inc
call
and
push
mov
xor
push
dec
loope
test
and
retf
add
pusha
cmp
xor
and
icebp
adc
les
cli
sbb
call
and
clc
xor
lock
jmp
mov
add
pop
cmp
add
jbe
dec
sbb
daa
push
add
js
cmp
mov
sbb
xchg
pusha
ja
je
xchg
dec
sbb
mov
sbb
push
add
shl
sbb
or
outs
xchg
fisubr
sub
loope
shl
pop
xlat
dec
xor
or
xor
arpl
cwde
ss
cmp
jne
mov
test
pop
int3
sahf
jns
push
push
sbb
mov
push
pop
test
icebp
adc
mov
mov
lea
in
sbb
lods
push
xchg
lea
fdiv
sar
outs
or
push
loop
or
ret
rep
adc
adc
leave
data16
dec
jp
sub
call
pop
add
or
adc
mov
movaps
sub
push
dec
add
sbb
dec
dec
cdq
sbb
dec
nop
lea
push
adc
aas
mov
in
inc
pop
sub
mov
push
xlat
(bad)
sahf
push
xchg
inc
add
test
sbb
and
xchg
test
mov
mov
xor
cmc
xor
ds
rcr
jo
push
nop
mov
add
xchg
sub
xor
daa
add
push
sub
cmp
inc
inc
xchg
push
mov
sub
xor
sub
push
sub
mov
cdq
and
sub
mov
mov
push
xchg
sub
and
and
in
(bad)
popa
xor
inc
in
add
add
out
pushf
movs
sbb
mov
repnz
xchg
or
(bad)
retf
push
fadd
lods
mov
push
jb
int3
cld
test
inc
movs
xor
fnstenvw
pusha
les
dec
or
rcr
or
jne
mov
imul
push
inc
inc
or
fild
xchg
add
adc
test
xchg
mov
add
push
xor
inc
and
inc
and
dec
fprem
pusha
xor
pop
ds
adc
jb
push
mov
jmp
ret
or
test
sub
ja
add
sbb
ret
inc
out
or
sbb
mov
cmp
test
jb
sub
popa
and
adc
and
adc
jl
add
adc
push
test
retf
rcr
mov
adc
or
and
pop
lea
jbe
mov
outs
jno
pop
js
shl
or
mov
fdiv
pop
sbb
pop
xchg
sbb
push
push
cli
push
ret
adc
xchg
sbb
jne
daa
push
sbb
ins
adc
ja
jg
add
cmp
shl
xor
adc
and
or
or
adc
rcl
add
neg
and
add
jns
out
popa
push
xchg
sbb
or
adc
add
adc
add
mov
xchg
and
push
xchg
cmc
and
je
icebp
popa
cdq
pusha
xor
lock
add
mov
retf
inc
add
pop
mov
ret
pusha
mov
xor
sbb
(bad)
test
and
xchg
sub
clc
xchg
sbb
add
xor
adc
sub
test
or
or
fistp
xor
aam
mov
or
adc
test
inc
xchg
add
or
ins
jne
test
add
and
pop
sahf
push
repnz
sub
add
inc
mov
(bad)
mov
add
fwait
aam
add
adc
mov
test
enter
fisttp
mov
inc
cli
dec
data16
sub
je
xor
or
outs
mov
je
push
or
pop
pop
ret
or
test
cmps
mov
push
add
push
push
sar
jae
xor
cwde
push
sub
cmp
aas
fnstsw
push
jmp
push
inc
pop
xlat
out
(bad)
xor
xor
lods
(bad)
xor
std
or
jo
mov
push
popf
or
push
jmp
cmps
cmc
mov
imul
sub
sub
push
jne
inc
rol
or
sub
sbb
and
dec
xchg
imul
inc
sub
popf
add
jp
adc
add
xor
arpl
test
or
adc
adc
sbb
jne
add
pop
sar
inc
pop
imul
mov
pop
push
mov
inc
inc
dec
imul
adc
xor
dec
arpl
iret
rol
test
(bad)
cdq
xor
in
imul
sbb
lea
ja
add
xchg
fisub
xchg
add
or
in
add
arpl
push
adc
f2xm1
pusha
add
fadd
addps
dec
mov
push
arpl
sub
in
retf
push
jo
and
les
clc
and
dec
outs
xor
add
mov
fstp
push
cmps
lods
push
add
fwait
dec
adc
xor
outs
sbb
mov
add
sbb
(bad)
fwait
add
mov
leave
mov
(bad)
or
gs
cmp
push
push
mov
fmul
pusha
stc
cmp
add
enter
pop
push
push
sar
fs
or
cmp
lock
sbb
xchg
mov
or
pop
jecxz
push
push
fwait
cmc
sub
rol
adc
movs
push
sub
adc
dec
aaa
cmp
leave
push
add
push
or
mov
mov
out
cmp
lea
(bad)
and
dec
pop
cmps
bound
and
cdq
cmp
sub
je
push
cmp
lock
and
hlt
adc
and
pushf
mov
ins
(bad)
cmp
pop
sbb
push
fidivr
jbe
xchg
pusha
push
(bad)
nop
push
aaa
cmp
je
leave
sub
or
and
out
outs
xor
push
daa
add
ins
inc
dec
mov
ret
jg
dec
fstp
ret
(bad)
lar
rcr
nop
mov
int
push
movs
pop
retf
int
ins
ffree
pop
add
jne
loop
xchg
lea
push
pop
mov
sub
rol
ds
sub
bnd
popa
jmp
or
movzx
mov
daa
fld
mov
sub
loopne
dec
add
ret
push
mov
sub
adc
cmp
fcom
ds
xchg
xor
cmp
test
lea
and
sbb
aam
inc
imul
dec
fcom
gs
pop
dec
cmp
dec
shr
or
nop
test
adc
ins
dec
xchg
or
ror
push
xor
and
movs
movs
pop
in
retf
mov
cmp
fs
dec
pop
and
add
cmp
jmp
stos
xchg
sub
xor
push
sbb
and
and
and
xor
adc
shr
jno
sbb
xor
(bad)
pop
adc
add
sti
adc
(bad)
and
jg
fnstsw
push
add
xchg
rcr
dec
cmp
movs
aas
xor
leave
shl
shl
jmp
xor
cmp
and
jle
lock
lods
fnsave
sub
sbb
push
push
in
mov
shr
in
sub
in
dec
(bad)
push
push
jne
rcl
rol
cmp
push
pop
lods
inc
add
cs
sub
and
fsubp
sbb
push
inc
add
or
adc
cwde
or
add
pop
test
xor
scas
or
jl
movs
xor
add
or
mov
test
inc
dec
add
add
adc
ss
cmp
add
push
sbb
sbb
aaa
lock
adc
xchg
mov
or
sbb
sbb
icebp
or
fsubr
push
add
iret
lods
pop
test
imul
(bad)
sbb
sub
rcr
rol
es
sub
ret
dec
inc
call
pop
xor
mov
fcomi
sbb
icebp
and
xor
fbstp
or
adc
xchg
or
cld
mov
jo
xor
add
and
test
adc
xor
fstp
push
jb
push
and
mov
add
mov
and
push
mov
adc
add
adc
cli
mov
or
fwait
dec
and
test
(bad)
in
loopne
nop
add
or
mov
adc
aas
add
ficomp
adc
add
int3
mov
pusha
add
test
xor
fwait
or
adc
inc
pop
wrmsr
cli
xchg
stos
cdq
xchg
or
fnstenv
les
push
test
or
adc
push
js
jne
adc
push
and
syscall
and
mov
and
jno
or
inc
dec
clc
into
popa
sbb
cs
or
inc
or
or
xor
inc
daa
cmp
adc
and
mov
cs
ret
inc
outs
adc
in
adc
push
mov
movs
jne
stos
arpl
neg
mov
inc
iret
adc
adc
cmp
push
push
add
sbb
sub
mov
pop
xor
popa
arpl
mov
and
dec
push
call
je
xor
or
or
retf
pop
arpl
jmp
push
push
push
in
push
inc
int
mov
push
mov
and
(bad)
imul
or
pop
or
mov
xchg
inc
push
and
loopne
adc
xor
inc
push
dec
cmp
repz
pop
bound
jmp
or
loopne
gs
sub
add
add
clc
add
push
imul
enter
jg
bound
and
or
(bad)
and
aas
movs
or
in
cmp
test
xchg
add
in
cli
les
mov
adc
pop
and
add
test
adc
mov
jecxz
and
xor
cli
in
push
or
mov
stos
mov
imul
jge
sub
sub
shl
sbb
add
adc
xor
sub
icebp
popa
push
cmp
sub
sbb
imul
or
sbb
push
jo
xor
pusha
inc
rcr
and
mov
gs
add
adc
jmp
xor
dec
sub
or
jmp
in
mov
lock
shr
dec
xor
mov
pop
loop
movs
sub
in
mov
mov
mov
adc
cmps
add
dec
call
fwait
inc
imul
dec
mov
inc
cmps
mov
lock
pop
xor
inc
cwde
or
mov
or
rol
ret
push
(bad)
or
pop
ret
and
mov
pop
push
or
loop
mov
test
into
cdq
mov
adc
test
add
dec
push
outs
fmul
or
call
sbb
sbb
xchg
jno
in
xchg
sbb
imul
es
aam
repnz
inc
push
xor
retf
or
test
les
add
cmp
movs
addr16
js
and
loop
mov
in
dec
or
push
add
dec
cli
jns
lods
in
and
inc
loop
ja
mov
xlat
mov
push
push
rol
fsub
dec
mov
cvtdq2ps
push
punpcklbw
adc
xchg
sbb
xchg
adc
or
mov
dec
mov
imul
stos
rcl
xchg
xor
inc
rol
(bad)
inc
jecxz
test
rol
sub
pop
out
and
cmp
stos
aad
adc
pop
out
mov
mov
adc
lar
shr
or
fld
cmp
add
and
xor
inc
jp
std
add
jns
push
aad
es
mov
push
stc
and
in
xor
cdq
sbb
dec
adc
jno
dec
inc
cdq
lods
adc
fmul
rcr
mov
js
mov
pop
pop
or
movs
inc
adc
pop
stos
add
or
rcl
enter
xchg
or
inc
push
jmp
pop
xor
adc
mov
jo
leave
inc
cmp
push
(bad)
sbb
and
add
push
jne
lds
or
xchg
jae
in
dec
mov
push
push
jno
and
mov
call
push
push
fst
cmp
add
or
cmp
adc
or
add
fdiv
test
sbb
and
test
or
clc
add
aaa
mov
dec
pop
mov
(bad)
dec
dec
(bad)
and
mov
test
push
or
cmp
rcr
pop
sbb
jp
inc
inc
inc
enter
mov
mov
sbb
mov
leave
popa
cwde
jne
daa
ins
sbb
popf
and
xchg
add
leave
movs
addr16
and
add
add
cs
add
cld
push
inc
pop
inc
push
mov
jp
sbb
vxorps
adc
adc
and
add
movs
sub
push
(bad)
adc
push
hlt
(bad)
mov
push
jg
sbb
dec
pop
pop
push
dec
add
and
inc
(bad)
loop
jbe
push
and
cmp
sub
lods
test
imul
add
inc
addr16
sti
xchg
ds
cmp
scas
imul
stos
cmp
sbb
hlt
daa
sub
cmp
push
ss
sub
es
test
add
or
mov
in
dec
jae
add
inc
mov
push
nop
add
mov
lods
test
cwde
push
jp
push
push
sbb
add
push
push
pop
push
push
test
and
(bad)
les
mov
inc
fld
push
test
ret
add
test
dec
xchg
fadd
test
lea
sub
jle
leave
xor
rol
jg
arpl
test
movs
stos
push
out
xchg
add
les
adc
dec
cwde
inc
ja
mov
mov
jecxz
and
inc
stos
dec
dec
jle
mov
ds
mov
sbb
shl
fdivr
xchg
or
inc
das
xchg
xchg
mov
sub
pop
push
cmp
lods
dec
push
pushf
test
push
fld
fs
inc
sbb
push
in
xchg
movs
rcl
scas
pop
push
jo
fld
sub
icebp
adc
das
lods
xchg
xchg
jg
push
mov
test
mov
inc
jmp
cmp
push
sbb
pop
sbb
sbb
dec
mov
dec
sbb
inc
cs
mov
add
popa
xor
les
fs
dec
add
pop
int3
cmc
sub
xor
jo
dec
sbb
inc
dec
fld
in
add
dec
mov
xchg
or
rol
imul
add
test
xor
push
stc
pop
inc
push
push
push
nop
dec
adc
data16
push
pushf
fstp
les
mov
mov
or
imul
das
or
or
inc
imul
push
in
pop
xor
pop
dec
mov
test
mov
imul
imul
mov
adc
jp
daa
sar
or
repz
fcomp
sub
add
add
jmp
fs
mov
test
dec
(bad)
fist
or
or
data16
pushf
add
imul
xor
imul
jae
hlt
pop
outs
xchg
add
push
sbb
call
mov
sbb
data16
les
jne
outs
inc
test
in
dec
shl
or
xor
pushf
push
mov
mov
add
inc
inc
pop
out
sbb
push
pusha
pusha
stos
out
aam
and
mov
pop
add
or
dec
jno
es
mov
jno
add
popa
add
js
inc
pop
or
jae
scas
push
loopne
pop
pop
out
dec
mov
add
gs
and
rol
add
or
lock
test
adc
adc
xor
adc
cdq
int3
push
jge
dec
sbb
add
adc
push
call
sub
dec
mov
push
call
repz
daa
aas
inc
push
cmps
ins
sub
and
mov
add
or
lods
dec
xlat
test
nop
adc
mov
adc
jmp
jno
push
dec
xchg
mov
xor
int3
xor
push
aaa
inc
and
xchg
push
test
or
mov
mov
adc
xor
adc
adc
shl
push
push
push
daa
popa
shl
rcr
pop
xchg
arpl
je
or
sub
aas
gs
xor
fisttp
cmp
or
adc
inc
hlt
call
push
or
add
les
(bad)
mov
loopne
inc
daa
cld
push
sbb
cmp
mov
pop
jl
push
in
pop
dec
cmp
lods
sbb
test
and
cmp
add
jp
ror
add
mov
or
inc
or
pop
push
cs
sbb
pop
mov
push
add
fcmovu
adc
mov
test
sub
sbb
inc
mov
enter
or
cmps
std
jbe
repz
les
repz
lock
fcomp
inc
add
stos
mov
and
mov
dec
rol
inc
shl
shl
arpl
dec
push
(bad)
fsub
xchg
cdq
push
dec
and
or
aaa
xchg
inc
stos
or
xchg
sbb
inc
sbb
aaa
in
add
push
mov
xor
sbb
mov
or
push
xchg
retfw
add
push
int3
dec
sbb
ret
popa
iret
test
add
test
or
adc
ins
push
dec
push
ins
lds
or
push
push
mov
scas
rol
push
in
pop
push
jecxz
push
xor
add
adc
sub
jno
adc
mov
or
add
sub
inc
mov
or
cmc
dec
sub
sbb
mov
push
push
mov
addr16
mov
mov
push
cmc
sbb
lods
pop
add
stos
shr
push
mov
test
mov
scas
daa
sub
sbb
adc
sbb
and
test
retf
jns
mov
and
ins
cmp
or
jl
shl
inc
and
sar
ss
ss
adc
fs
fld
sub
lods
out
sub
ret
shl
popf
add
adc
inc
daa
ins
push
push
fucomi
fdiv
popa
in
neg
es
fcom
jns
nop
push
ins
rcl
inc
test
and
pop
popa
xchg
stos
sub
mov
out
out
stc
adc
jo
dec
add
ss
pop
pop
jge
and
add
adc
out
jle
xchg
mov
aam
fsub
dec
cli
cmp
adc
cmp
jns
dec
dec
sbb
loopne
add
dec
sub
(bad)
dec
adc
jb
pop
adc
ins
add
pop
dec
cli
add
in
es
add
or
xchg
loope
sub
sub
push
pushf
dec
dec
add
sbb
mov
fnsave
and
xchg
out
add
dec
in
dec
add
mov
inc
repnz
sub
out
jne
je
cmp
xchg
scas
aam
mov
gs
imul
add
std
and
pop
(bad)
ja
std
add
pop
outs
ret
test
inc
std
lods
push
js
push
outs
sbb
adc
jno
xor
or
jl
ja
dec
or
sbb
push
add
or
sbb
xchg
test
loop
fdivr
je
cmp
xchg
stc
push
inc
shl
outs
imul
sub
scas
push
adc
xadd
mov
mov
and
lock
retf
mov
(bad)
xchg
lods
addr16
nop
pop
xor
clc
xor
aam
mov
clc
add
mov
add
out
mov
and
xor
adc
mov
pop
add
jge
(bad)
pop
cmps
inc
lods
inc
nop
and
rol
jb
inc
or
mov
jns
and
pop
push
add
loop
or
rcr
cmp
xchg
mov
imul
or
push
xchg
add
cld
test
cmp
push
and
adc
dec
clc
test
dec
pusha
stc
(bad)
mov
fcom
das
sub
adc
dec
(bad)
sbb
scas
or
sbb
or
cwde
test
jp
into
dec
inc
inc
out
or
inc
jmp
or
mov
cld
ret
adc
adc
xchg
in
dec
inc
shr
aas
and
dec
test
xor
mov
(bad)
(bad)
cli
(bad)
jmp
push
ret
xor
arpl
(bad)
dec
leave
xor
xor
adc
rcl
push
ds
xor
cmp
lea
aaa
int
push
jmp
fsub
std
mov
sub
mov
xor
push
clc
loopne
or
cmp
lds
sbb
cmp
xor
mov
push
push
cmp
mov
cmps
xchg
adc
pop
mov
lea
cmp
mov
xchg
repz
and
adc
xor
test
loope
dec
mov
in
scas
mov
push
je
fnsave
xor
es
pusha
or
ror
mov
neg
pop
cmps
shr
cli
sub
sub
daa
(bad)
cdq
loopne
or
scas
sub
sub
shl
cmc
loopne
imul
inc
sbb
leave
sub
ret
xchg
les
inc
cli
add
jo
imul
cld
and
nop
imul
mov
mov
or
cmp
pop
inc
inc
imul
push
jns
dec
push
or
sbb
or
dec
mov
mov
lods
xchg
sub
test
gs
movs
inc
in
rol
mov
cmp
adc
add
dec
add
in
xor
xchg
add
push
mov
xchg
and
sbb
scas
call
out
arpl
adc
adc
movs
in
xlat
shl
jae
test
lock
in
js
ror
das
sub
(bad)
enter
jo
push
xlat
pop
pop
push
arpl
push
lahf
enter
adc
inc
pusha
push
mov
ja
sbb
lds
sar
sbb
fidiv
push
and
fcom
adc
aad
sbb
adc
xlat
rcr
and
arpl
push
inc
shl
sbb
jne
inc
ins
sub
arpl
mov
arpl
xchg
les
cmps
movs
mov
and
shl
in
(bad)
(bad)
add
fisub
jmp
scas
adc
xor
sub
fstp
cmp
add
xor
xor
cmp
sbb
lods
inc
inc
fwait
xor
cmp
fistp
add
jmp
outs
test
lea
movs
xor
mov
jne
sbb
push
add
adc
mov
pusha
add
bound
loopne
fwait
or
lods
fld
xchg
pusha
shr
test
pop
add
or
gs
jno
ret
aaa
mov
jnp
xchg
mov
cmps
jge
lahf
fs
push
je
cmp
or
lahf
call
int3
jb
(bad)
sub
mov
jl
push
add
xor
jmp
push
das
mov
or
and
mov
dec
shl
or
add
add
push
or
inc
or
clc
adc
dec
in
push
test
and
or
sbb
xchg
or
cld
leave
mov
imul
xchg
add
fidivr
push
adc
int
ja
loopne
pop
jne
mov
push
push
mov
mov
cdq
call
pop
rcl
cld
ror
fcomp
(bad)
mov
jo
lock
push
xor
in
mov
sbb
aam
adc
add
pop
ins
jl
xor
adc
mov
(bad)
std
ins
add
out
add
inc
cwde
jge
pop
mov
cmp
jle
xor
loope
shl
loop
add
mov
inc
fimul
jge
add
or
sub
pop
ret
iret
add
es
push
pop
sub
push
rol
int3
retf
sahf
daa
adc
sbb
and
add
sbb
sbb
mov
pop
cmp
push
cli
dec
pop
mov
dec
mov
jmp
push
lahf
movs
(bad)
or
adc
jecxz
lock
push
je
inc
mov
sub
adc
cmps
sbb
pop
mov
pop
scas
enter
push
lahf
sbb
sub
dec
cmps
pop
lea
sbb
adc
push
mov
sbb
push
add
add
push
arpl
adc
or
or
leave
and
add
cmc
pop
fwait
sub
xchg
inc
cwde
inc
jns
cmps
and
out
push
cmp
sbb
in
sbb
or
mov
(bad)
ror
aaa
mov
cmp
clc
push
push
out
sbb
imul
in
popa
add
dec
nop
lods
pop
mov
inc
inc
lods
popa
add
popa
pop
rcl
inc
outs
loop
dec
lods
xchg
idiv
add
push
mov
add
loopne
inc
fadd
and
inc
popa
ins
push
sub
dec
mov
push
pusha
mov
in
jmp
addr16
or
or
mov
fwait
push
pop
mov
adc
adc
inc
sbb
sub
lods
dec
(bad)
adc
mov
xchg
mov
cmp
loopne
ror
add
loopne
dec
jo
leave
or
test
xchg
xor
mov
sub
lea
push
shl
loope
and
push
or
or
xor
push
inc
imul
mov
mov
pop
mov
dec
scas
adc
mov
add
sbb
test
or
inc
ins
fcomi
(bad)
aas
or
call
retf
lods
jg
or
sbb
outs
adc
test
dec
mov
add
lods
mov
adc
inc
and
es
pusha
jb
jae
std
cmova
adc
jae
and
test
adc
sbb
adc
rdmsr
mov
mov
ret
add
jne
mov
mov
adc
xlat
out
mov
mov
sub
xchg
push
gs
inc
loope
cmp
mov
add
lahf
inc
mov
inc
push
ret
push
xor
xor
inc
and
ret
push
sub
add
cmp
test
or
in
mov
add
push
jno
sbb
shl
sbb
aam
int3
mov
xchg
adc
jns
(bad)
push
mov
xchg
mov
or
test
jnp
push
add
nop
sbb
int3
pop
cmp
inc
inc
(bad)
jmp
pop
and
sbb
jno
cmps
or
jp
cmp
push
cwde
ins
and
and
ror
pop
and
xchg
and
ret
push
bound
xchg
cdq
daa
adc
push
cmps
inc
and
jecxz
xchg
gs
loope
das
in
and
mov
iret
lock
push
js
jp
cmp
xchg
or
add
and
fild
sub
adc
add
mov
xchg
sub
pop
sub
imul
ret
shl
inc
das
inc
sub
adc
mov
and
in
cmp
mov
mov
xor
ret
movs
lea
xor
aad
pusha
sbb
int
adc
verr
int
push
loopne
or
ror
out
mov
jbe
sbb
out
sbb
or
sbb
out
in
scas
fnsave
add
sbb
add
sbb
mov
dec
or
and
dec
test
ret
jbe
lea
(bad)
mov
and
push
mov
pop
mov
sahf
sub
mov
push
cmp
sbb
test
leave
or
cwde
push
jae
xchg
pusha
bound
or
dec
cmp
jne
mov
or
xor
std
enter
into
push
jb
push
gs
dec
push
pop
aad
push
jno
daa
or
in
jns
imul
pop
jmp
jns
adc
ret
adc
mov
shl
push
rcl
and
cdq
cwde
leave
adc
push
push
inc
adc
dec
or
adc
or
pop
dec
push
pop
sbb
arpl
pop
cs
retf
mov
inc
mov
call
rol
push
int
retf
clc
xor
adc
xchg
mov
fist
in
push
mov
add
inc
add
or
jmp
add
js
push
xchg
adc
push
cmp
sub
push
rcr
adc
and
dec
xchg
sub
std
adc
fisttp
and
in
xchg
pop
mov
fbld
sub
fimul
add
test
add
je
add
xchg
or
hlt
mov
jge
lahf
lea
or
std
les
cs
or
retf
adc
pop
mov
cmp
cs
jns
adc
push
jge
mov
xchg
lea
mov
ret
add
push
cmp
or
minps
jecxz
ds
sbb
cmp
gs
sbb
add
pop
push
dec
push
push
adc
scas
loope
mov
and
push
sub
jbe
adc
xor
(bad)
out
sub
add
(bad)
xor
pop
cmp
push
cmp
adc
xor
das
int
dec
adc
hlt
(bad)
hlt
dec
sbb
loopne
ss
(bad)
add
imul
setae
inc
lods
inc
xchg
mov
xor
sbb
(bad)
push
mov
cmp
mul
sbb
push
outs
add
pop
push
ror
test
sub
dec
push
fwait
aad
sub
call
xchg
xor
push
adc
cmps
pop
int3
stos
leave
movs
and
mov
std
fild
mov
and
push
and
push
and
fidivr
mov
xchg
(bad)
jge
pop
sub
and
jge
lock
cmp
and
ins
inc
adc
sbb
add
inc
mov
adc
cmp
and
xor
mov
add
push
jo
sub
inc
inc
movs
xor
fadd
mov
cmp
sub
sub
sbb
sub
mov
in
mov
adc
xor
sub
inc
loopne
pop
mov
test
fldcw
addr16
or
cmovs
inc
dec
test
js
mov
hlt
push
push
sub
data16
inc
sbb
xchg
mov
jmp
jg
pop
add
push
sub
jmp
sub
push
test
xor
push
push
pop
rol
add
push
pop
ret
adc
dec
jnp
sub
adc
or
popa
loop
xchg
mov
bound
or
test
sub
mov
and
cmp
movs
xchg
mov
add
pop
fdiv
pop
pop
mov
cmp
in
iret
xor
dec
stc
cmc
pop
sub
sbb
xchg
movs
add
add
xor
adc
les
mov
mov
lods
adc
add
inc
mov
adc
aas
or
adc
cmp
(bad)
push
add
mov
adc
jns
sbb
lods
push
sbb
adc
mov
mov
loopne
icebp
add
adc
dec
bound
test
xor
sub
jmp
(bad)
cmp
mov
push
ja
push
nop
push
sbb
push
sbb
inc
enter
dec
cli
bound
inc
sbb
mov
dec
jl
ror
jne
adc
(bad)
xchg
push
and
inc
sub
inc
sbb
aad
push
das
push
or
jge
mov
(bad)
cmp
and
inc
jle
sub
adc
xchg
add
hlt
repz
mov
ins
(bad)
icebp
shl
rol
lea
stc
add
pop
loop
fcom
sti
push
jae
ret
add
jmp
stos
mov
push
nop
sbb
scas
int3
add
pop
aaa
sub
adc
inc
sbb
rcl
aaa
sub
mov
lds
lahf
or
mov
ins
test
add
mov
sub
pushf
add
push
or
bound
add
dec
scas
mov
dec
scas
in
cmp
add
xchg
adc
std
mov
ss
jne
adc
outs
inc
pusha
adc
adc
outs
or
pop
xor
ins
mov
push
nop
add
stos
shl
or
inc
fwait
push
push
push
push
push
call
adc
and
sub
sbb
(bad)
iret
in
mov
mov
rol
mov
add
call
xchg
cmc
lock
popf
ins
dec
inc
or
int
aad
or
and
mov
jno
shl
add
xor
es
movs
mov
cli
and
addr16
and
pop
outs
adc
ins
ins
mov
ins
mov
mov
and
push
fnsave
test
mov
adc
pop
mov
mov
jmp
xor
xor
xchg
repz
adc
or
sub
sbb
int3
pop
push
es
sub
sbb
or
lds
jne
aaa
adc
inc
push
pop
xchg
test
pushf
push
je
cmp
popf
and
jnp
sar
or
xor
push
in
mov
jmp
push
push
sbb
or
sbb
push
add
or
inc
sub
mov
adc
add
mov
sbb
push
xor
push
fwait
add
enter
add
push
inc
jnp
push
pop
test
push
sub
add
call
sub
lock
sub
nop
adc
sub
pop
stos
add
push
dec
js
push
sbb
push
shl
ins
mov
pop
inc
test
cmp
adc
adc
fstp
leave
and
adc
or
mov
sar
xchg
add
or
popa
shl
adc
shr
add
fbld
sbb
ins
jmp
jmp
jb
rol
or
mov
dec
push
pop
jns
pop
dec
shl
push
pop
fbstp
add
push
pop
sbb
test
add
loopne
add
push
pop
jo
pop
or
inc
rol
push
pop
loopne
push
pop
mov
add
jo
pop
aaa
push
pop
inc
or
jae
pop
scas
add
inc
loopne
pop
jmp
pop
adc
pop
arpl
or
lahf
push
push
lods
scas
mov
gs
aas
mov
(bad)
pop
mov
outs
push
adc
inc
sub
or
shl
jo
ins
xor
fild
push
adc
inc
nop
jo
and
aad
xchg
movs
in
in
ficom
jno
test
and
push
repz
adc
xchg
sbb
sbb
inc
and
test
sbb
sub
and
das
les
les
fs
leave
pop
or
aam
in
shl
aaa
popa
mov
inc
or
test
je
push
pop
(bad)
pop
icebp
jno
les
inc
cmp
jl
sub
add
icebp
mov
sub
push
mov
jns
push
add
out
add
cs
lds
scas
and
sbb
test
fnsave
inc
push
mov
ret
fisttp
mov
jne
inc
scas
dec
and
push
inc
inc
mov
nop
sub
or
pop
int
add
xchg
int
out
xor
mov
add
ins
and
ss
ret
inc
dec
inc
or
or
mov
add
inc
aas
push
xchg
imul
cmp
ins
out
loopne
lea
inc
rol
push
cmp
cmp
push
xchg
pop
adc
push
add
cmp
or
sar
mov
les
jle
repnz
enter
and
adc
test
mov
jge
xchg
push
pop
test
enter
arpl
fsubr
sub
add
pop
xchg
ins
aaa
push
push
and
and
add
leave
mov
xor
add
or
test
mov
sar
and
or
loopne
jne
push
cmp
dec
jge
mov
mov
mov
pusha
sbb
stos
lahf
imul
adc
xlat
push
push
leave
cmp
and
cwde
add
or
or
or
in
xchg
or
or
inc
xor
sbb
loop
imul
push
push
ds
(bad)
inc
cmc
or
sub
test
add
xor
cmp
jne
jbe
jb
dec
inc
sbb
xor
daa
and
mov
push
inc
imul
dec
adc
outs
adc
mov
test
test
punpckhbw
scas
adc
sbb
wbinvd
add
jle
inc
push
xchg
outs
jo
cmp
cmp
jmp
jo
sahf
fdivr
or
jne
pop
call
shr
sub
add
imul
pop
sub
lds
call
(bad)
push
and
rcl
xchg
test
xchg
xor
dec
push
and
add
adc
nop
xchg
push
sbb
test
test
adc
jbe
add
sbb
ja
out
jl
inc
cmp
call
mov
fimul
stos
popa
dec
daa
outs
neg
enter
add
pop
and
xchg
pushf
out
ja
jp
rol
adc
(bad)
clc
popa
mov
inc
and
repnz
pop
push
inc
or
and
mov
sbb
(bad)
lock
leave
push
lods
push
pusha
stos
or
mov
movs
in
pop
dec
inc
stos
sbb
and
or
adc
enter
pusha
push
jo
push
fcom
stos
push
pop
movs
gs
mov
fiadd
ret
adc
sbb
es
and
leave
and
xchg
arpl
pop
mov
inc
inc
cmps
in
sbb
jl
ss
mov
dec
leave
mov
ins
mov
sbb
inc
adc
cmps
in
mov
leave
and
and
mov
and
and
and
and
test
inc
and
push
and
leave
and
and
dec
push
jb
mov
and
mov
cwde
mov
push
jb
cs
mov
leave
and
nop
xor
inc
push
xor
leave
and
mov
(bad)
mov
inc
push
jb
jl
aaa
(bad)
in
or
add
sub
mov
ins
cmp
fsub
sub
aas
nop
and
mov
mov
inc
inc
(bad)
fdiv
push
jae
xor
lea
fisubr
xchg
rcl
test
mov
jl
dec
js
dec
retf
jl
fcom
adc
and
or
enter
dec
das
pop
pop
inc
mov
jl
push
ror
push
push
cwde
popa
and
xchg
das
add
cld
es
xchg
data16
test
ins
ins
adc
fwait
xor
pop
cmp
mov
cmp
cwde
add
mov
lea
out
xchg
push
add
movs
movs
movs
cmp
and
movs
out
or
xchg
pop
add
lea
rcr
mov
retf
retf
stos
inc
mul
lea
push
xchg
test
mov
jb
xchg
push
inc
xor
adc
xor
xchg
push
rcr
xchg
inc
mov
jge
inc
ins
pop
bound
lahf
mov
(bad)
or
xchg
cmp
stos
rcr
push
inc
mov
test
add
pop
push
rcl
lods
mov
xchg
push
call
push
les
xor
and
aam
imul
imul
and
mov
add
inc
sbb
xchg
inc
test
jge
mov
sub
movs
test
xchg
ins
sbb
test
test
(bad)
cmps
dec
xchg
lods
in
std
lods
les
xor
mov
mov
test
add
sbb
sub
sub
ror
cmp
xchg
mov
xchg
inc
shl
jnp
mov
pusha
xor
movs
and
inc
sub
and
shl
loopne
xchg
xchg
int
add
add
or
je
push
fwait
test
and
mov
sbb
mov
jmp
xor
xor
rcr
fist
xlat
and
mov
jge
push
inc
arpl
leave
xchg
movs
adc
rol
(bad)
fwait
rol
push
movs
xchg
dec
pop
mov
cmc
aam
rol
inc
lea
sbb
add
mov
sub
sub
in
retf
dec
or
jns
cld
std
xchg
mov
dec
sub
fnstcw
cld
or
ins
in
push
jb
scas
push
ins
jns
std
adc
dec
add
mov
test
stc
nop
out
or
out
fiadd
sbb
sub
test
push
sub
sub
and
add
(bad)
push
(bad)
fadd
dec
and
or
inc
mov
sbb
sbb
xchg
sti
int3
test
add
test
repnz
call
or
jnp
push
add
mov
or
pusha
xchg
das
fld
js
sub
mov
xor
fsubrp
xor
ds
enter
cli
add
and
pusha
test
(bad)
and
cwde
or
es
lock
mov
daa
push
push
pop
pop
push
sub
sub
ret
das
sub
(bad)
pop
and
out
mul
xchg
out
push
mov
and
cmp
ror
mov
cs
push
out
mov
jns
das
fdiv
sar
and
push
push
dec
cli
cmp
add
mov
jp
add
xor
mov
lods
or
mov
test
sub
inc
lea
ret
xor
arpl
cld
sbb
scas
cmps
imul
pop
cmp
cmp
imul
out
and
mov
sbb
jnp
enter
mov
in
lea
push
sub
es
fnsave
cmp
sub
sbb
sbb
xor
cmp
pop
inc
adc
(bad)
adc
ret
mov
adc
adc
xor
jbe
adc
mov
lods
lods
in
scas
fnsave
sbb
ja
ja
jbe
or
cmp
or
fisubr
sbb
push
inc
mov
pop
jecxz
dec
loopne
push
aam
or
test
aaa
push
xlat
xor
add
test
dec
pop
push
frstor
dec
and
inc
loopne
or
mov
pusha
arpl
out
xchg
test
movs
imul
xchg
mov
mov
or
shl
add
popa
and
jb
les
push
loope
into
xor
sub
xor
cmps
scas
add
dec
xor
dec
inc
fwait
aam
and
or
pop
retf
xor
loope
xor
xor
cmovbe
jb
or
add
lods
cmp
call
fnstcw
inc
pop
add
add
mov
add
cs
clc
and
ins
xchg
add
mov
adc
rcl
(bad)
xchg
fs
mov
nop
sbb
push
int3
repnz
inc
retf
repnz
add
or
shr
adc
xor
add
or
pop
stos
sbb
addr16
cmps
adc
push
add
push
aam
nop
mov
arpl
adc
add
add
adc
pusha
inc
xlat
pop
and
dec
xlat
pop
push
call
dec
add
sub
arpl
sbb
and
sbb
dec
pop
cdq
add
aas
mov
or
shr
mov
and
inc
pushf
adc
inc
push
pop
inc
das
sub
rol
mov
jp
mov
sbb
popa
xor
inc
test
push
pop
shr
sub
pop
or
lea
pop
sar
lea
mov
ds
(bad)
(bad)
jmp
(bad)
clc
sbb
inc
dec
add
cmp
cmp
add
push
xor
adc
(bad)
adc
add
xlat
fimul
punpckhdq
pop
jmp
ret
stos
(bad)
adc
sub
test
movs
ss
sub
(bad)
jns
nop
add
pop
pop
adc
bnd
adc
sbb
dec
or
enter
add
xlat
pop
cs
mov
xor
add
sbb
sub
shl
inc
mov
stos
dec
pop
mov
ja
adc
xchg
pop
or
xchg
loopne
bound
fdivr
test
sub
mov
mov
mov
aam
(bad)
out
sti
cmc
xchg
clc
setg
adc
mov
adc
and
xchg
and
pop
push
xor
stos
clc
sub
adc
jne
into
push
jmp
jae
push
sub
fcom
arpl
or
fsubr
rcl
push
mov
push
addr16
add
adc
retf
sar
or
sub
dec
push
adc
movs
cs
sub
imul
pop
test
fadd
dec
mov
mov
bound
call
mov
xchg
cmc
ins
inc
mov
add
mov
and
aaa
out
test
lds
and
leave
(bad)
icebp
call
pop
or
aam
jo
inc
xlat
data16
jbe
xor
jg
in
xor
(bad)
adc
push
inc
repz
add
(bad)
popa
dec
loopne
daa
je
add
add
mov
leave
or
sbb
pop
sbb
cld
cdq
push
add
aaa
leave
lea
or
sub
inc
sub
test
int
in
mov
cmp
dec
push
xlat
imul
push
test
movs
ins
lahf
test
or
mov
push
cwde
cmp
and
je
xor
adc
or
shl
and
mov
mov
mov
and
mov
jle
push
loope
daa
inc
pop
arpl
inc
dec
cmp
mov
cmp
pop
xlat
(bad)
jg
in
mov
and
lods
jecxz
mov
dec
cmp
mov
sub
popf
sub
push
scas
push
scas
inc
mov
mov
rol
pop
xor
adc
xor
in
jmp
add
pop
lea
loopne
and
inc
test
in
mov
dec
popf
push
push
loope
aaa
dec
sub
dec
hlt
dec
rcl
cmp
push
cmp
scas
loope
daa
and
xor
out
cmps
jbe
lea
or
nop
mov
mov
sub
or
or
jno
adc
mov
jno
test
or
popf
push
cmc
sub
call
jne
sbb
test
std
sbb
or
push
mov
or
in
fld
rol
jb
adc
jle
pop
sbb
inc
cmp
dec
dec
sub
mov
lea
and
sahf
push
popa
ss
xchg
or
mov
scas
or
outs
js
arpl
sbb
mov
leave
add
div
je
(bad)
cmp
aam
movs
arpl
pusha
pusha
xor
add
je
sbb
mov
retf
dec
fdivr
and
jge
cmps
lea
test
int
ret
or
add
push
js
sub
add
les
xchg
call
pop
js
je
jmp
dec
in
imul
mov
xor
fs
pop
popa
loopne
or
scas
into
add
inc
in
ins
jge
mov
push
in
add
sbb
aad
lods
test
sbb
xchg
js
or
push
imul
add
scas
or
xor
gs
inc
sbb
add
push
xor
xchg
xchg
ret
movs
push
push
add
addr16
test
popa
xchg
push
lods
xor
or
adc
sub
xchg
jge
mov
adc
jge
cmp
sbb
pop
push
add
fisttp
call
or
cmp
arpl
adc
inc
push
in
jo
pop
gs
mov
adc
mov
scas
push
sub
xchg
pop
dec
in
sbb
inc
leave
daa
add
rol
sub
loopne
jmp
gs
movs
jne
or
movs
sbb
nop
push
mov
ret
das
lods
xchg
fiadd
(bad)
pop
push
out
jge
pop
adc
test
or
pushf
cmp
sbb
push
ret
push
cmp
not
call
adc
and
ins
cwde
xor
clc
and
mov
rcl
(bad)
xchg
add
inc
imul
cwde
or
push
imul
nop
jno
mov
pop
fnsave
and
or
cwde
nop
dec
dec
or
popa
mov
inc
shl
adc
pop
mov
cmp
jecxz
push
xor
cdq
xchg
or
cwde
push
or
pop
or
in
mov
test
adc
lea
jp
inc
mov
jo
out
inc
inc
push
lea
or
jb
or
adc
das
push
sbb
and
cmc
mov
or
inc
mov
inc
arpl
inc
add
inc
mov
xchg
loop
pop
(bad)
inc
add
sub
call
jmp
push
inc
mov
sub
mov
test
dec
in
dec
xchg
mov
daa
cwde
test
inc
inc
jp
and
sbb
and
pop
ret
sub
add
je
push
add
(bad)
push
stc
rcr
bound
enter
sahf
in
aas
cdq
test
(bad)
aam
stos
or
mov
adc
je
in
ss
add
(bad)
aam
and
push
sub
and
cmp
sub
add
xchg
call
or
or
or
leave
adc
lea
pop
daa
jb
inc
les
js
dec
mov
or
xchg
or
or
push
or
mov
adc
push
or
adc
jmp
sbb
test
imul
jno
inc
or
inc
in
stc
add
lea
jle
popa
xchg
cmps
pop
data16
cmp
mov
(bad)
mov
sbb
adc
or
pop
xchg
lods
adc
xor
mov
(bad)
xor
mov
mov
movs
test
clc
adc
mov
mov
mov
jae
add
add
mov
(bad)
test
sahf
add
mov
ds
inc
cwde
or
cmps
mov
xchg
adc
adc
addr16
xor
jno
ret
jg
mov
jbe
addr16
pop
mov
adc
mov
add
jb
jp
sub
xor
jns
sub
cmp
les
fwait
push
pop
outs
cmp
test
jo
jge
in
sub
pop
loopne
out
sar
mov
jge
inc
or
enter
and
xchg
xchg
dec
dec
inc
mov
and
sub
cmps
leave
pop
mov
adc
loopne
adc
cmp
jb
lds
test
mov
push
(bad)
clc
pusha
retf
sbb
test
xor
add
pop
cmp
sbb
or
stos
adc
or
mov
pop
jb
sub
lds
fnstsw
fwait
ret
and
add
pop
and
cdq
xor
(bad)
fs
add
ss
inc
sbb
push
add
and
sub
inc
sbb
test
aas
fsub
adc
dec
lds
jns
inc
or
shr
lahf
pop
and
inc
or
and
sbb
sub
gs
imul
mov
(bad)
jmp
shl
not
fldcw
arpl
and
mov
test
mov
arpl
pop
jb
mov
jo
add
dec
sbb
lahf
out
lock
or
and
xchg
dec
rcl
jle
add
or
push
or
or
push
sti
inc
add
test
fst
xor
pop
nop
addr16
xor
xor
xchg
test
and
jecxz
adc
mov
sub
jge
daa
push
adc
dec
aaa
jmp
adc
ror
sbb
daa
and
jmp
pop
adc
push
mov
cmp
sub
ret
push
xchg
outs
into
sbb
retf
hlt
aad
adc
cld
push
loop
mov
inc
and
and
sub
push
pcmpgtw
pop
cmc
je
retf
push
push
adc
add
mov
movs
outs
scas
xchg
inc
and
add
or
stos
or
dec
xor
add
sbb
add
dec
test
cmp
pop
or
es
push
jge
jb
ins
fs
shl
cmc
scas
adc
push
jp
movs
mov
jb
jbe
sar
sub
rcl
(bad)
push
pop
adc
icebp
mov
xor
fs
xor
cmp
outs
push
pop
or
add
mov
add
std
mov
fs
xchg
dec
outs
or
scas
add
push
push
pop
(bad)
call
ins
loope
mov
add
push
cmps
or
adc
loopne
inc
or
ret
and
stos
mov
bound
mov
mov
pop
mov
movs
add
out
jmp
or
jmp
sar
pop
enter
shl
(bad)
imul
sbb
fucomip
push
clts
fadd
jo
cli
fist
xchg
push
gs
inc
dec
inc
dec
dec
popf
xchg
xchg
push
inc
adc
and
rcl
add
imul
mov
ror
loope
fistp
rcr
jbe
ror
inc
sub
mov
mov
cmp
xlat
outs
js
push
adc
adc
loop
inc
add
or
in
jno
ret
lock
pusha
push
icebp
or
sbb
je
or
jbe
inc
xchg
cld
push
call
add
mov
cmc
push
mov
sbb
das
dec
call
lods
xchg
xchg
ficom
dec
mul
inc
jo
fiadd
jmp
frstor
dec
pop
mov
mov
fisttp
or
mov
je
sbb
imul
dec
aaa
js
dec
cdq
test
js
loopne
test
mov
fdivr
shl
push
and
imul
imul
shl
fidivr
xor
outs
aaa
lock
jle
pop
clc
scas
xor
mov
jmp
pop
sti
push
ret
nop
jmp
ss
inc
xor
scas
jge
test
arpl
sub
mov
xor
or
pushf
psubsw
ret
xchg
pushf
mov
mov
scas
sub
inc
call
jl
push
das
sar
inc
mov
(bad)
and
lahf
pop
push
sti
mov
pop
(bad)
ja
pop
and
sahf
mov
add
cmp
mov
mov
xor
mov
cmp
(bad)
aad
pop
sub
sbb
movs
cmp
call
nop
mov
loop
sub
push
push
ror
push
jmp
push
push
je
mov
pop
push
add
cmp
icebp
push
add
mov
movs
pop
dec
stc
adc
cli
in
adc
sbb
jne
test
push
cdq
pop
rcr
popa
cmp
jge
rcl
sub
enter
push
call
nop
icebp
lods
mov
push
inc
int3
std
inc
cs
or
fsubr
add
ds
push
sbb
jl
fisttp
sbb
ins
loope
mov
pop
test
in
add
in
mov
loopne
mov
or
add
mov
mov
mov
dec
mov
mov
loope
mov
aad
xchg
dec
or
fstp
or
addps
sbb
and
mov
(bad)
jmp
and
ror
les
nop
add
daa
dec
push
clc
addr16
addr16
jp
pop
sbb
push
stos
movs
mov
cdq
pop
idiv
cmp
mov
iret
sahf
mov
cmp
push
inc
sbb
push
dec
ffreep
ror
sbb
sbb
sbb
fistp
imul
adc
dec
or
in
adc
push
cmp
mov
in
dec
nop
pusha
in
sbb
je
cmp
ja
je
cmp
mov
lock
add
lea
sbb
loope
js
add
xor
aaa
dec
es
pusha
(bad)
adc
add
jle
push
inc
pop
jnp
xor
or
push
push
mov
add
call
inc
or
add
mov
fwait
mov
and
mov
sbb
ss
xchg
pop
add
loopne
dec
das
dec
sbb
loopne
and
xor
or
sbb
pushf
out
pop
or
add
inc
hlt
rol
adc
mov
or
add
and
out
add
lock
cmps
add
pop
in
sub
mov
push
fs
cmp
ret
sbb
push
pop
push
push
xchg
pushf
and
sub
(bad)
push
xchg
popa
or
and
xchg
or
push
sbb
call
sbb
sub
movs
mov
call
mov
add
or
movs
pushf
xchg
nop
lds
repnz
in
add
adc
jae
push
jmp
rol
imul
push
aas
cmps
test
adc
pcmpeqb
dec
xchg
in
and
pop
enter
les
les
int3
sub
(bad)
inc
ror
shr
push
aad
sub
xchg
je
xchg
test
xor
and
pop
popa
jnp
inc
call
pop
idiv
mov
test
inc
and
nop
xchg
int3
mov
sub
inc
push
mov
xor
or
lock
popa
or
int
push
or
or
rol
xchg
xchg
push
sub
or
pop
aaa
dec
ror
repz
jo
add
in
or
and
add
push
mov
fild
je
inc
mov
hlt
push
xchg
cmp
mov
or
in
sub
fbld
cli
mov
cmc
fst
xor
js
dec
adc
stos
add
mov
ins
ja
aad
scas
push
in
je
sti
stos
mov
sub
xchg
add
mov
addr16
dec
push
pop
xor
xor
pop
pop
mov
fld
inc
adc
adc
adc
jge
and
adc
inc
add
imul
inc
or
pop
or
sub
aaa
cmc
add
or
xchg
nop
xchg
fisttp
jle
ins
add
or
hlt
aaa
mov
arpl
or
(bad)
sbb
inc
jle
jns
call
in
dec
out
test
or
scas
ins
lahf
mov
call
jecxz
push
push
jbe
test
or
lods
aam
xor
mov
imul
add
sub
cmp
mov
daa
sbb
mov
cmp
push
pop
cmp
xor
pop
or
sub
add
jbe
adc
iret
test
mov
ja
shl
pop
push
and
in
mov
jne
push
cmp
sub
sahf
or
xchg
push
scas
and
adc
or
push
mov
test
les
inc
sti
mov
loop
aam
mov
xchg
dec
xor
mov
pop
xchg
fnstcw
cdq
hlt
adc
stos
push
xchg
xor
das
les
leave
clc
ror
cwde
lods
pop
cmp
pop
xor
(bad)
cmc
mov
mov
push
leave
sbb
add
(bad)
or
sbb
pop
add
jbe
cmp
jbe
test
(bad)
push
sbb
push
(bad)
call
mov
test
mov
das
hlt
and
mov
adc
dec
cmp
cs
daa
sbb
imul
xchg
pop
add
pop
pop
cmc
mov
jl
inc
inc
add
cdq
into
repnz
sub
inc
jp
xchg
add
in
repnz
jmp
mov
movs
lods
jmp
test
mov
mov
push
sbb
pop
in
jo
test
pop
dec
and
ficom
sub
imul
pop
push
sub
movs
pop
jnp
(bad)
call
mov
add
ror
push
add
sar
sub
fcmovnb
sub
jg
add
and
adc
xchg
pop
popf
mov
fstp
ret
es
sub
push
jo
loope
rcl
pop
push
xchg
sbb
dec
cmps
shl
sbb
fdiv
(bad)
or
ret
jle
or
inc
ret
jle
popa
dec
add
xchg
push
pop
inc
add
jp
ret
ret
cmps
cdq
sbb
rol
add
sub
cli
cmp
mov
xchg
cli
pushf
inc
mov
push
xchg
inc
loope
inc
add
pop
mov
add
add
or
add
ins
jge
and
outs
inc
in
or
sbb
repnz
addr16
xor
adc
pusha
mov
outs
test
clc
push
adc
xchg
sub
xchg
mov
stos
test
fs
pop
push
push
mov
das
add
xor
sub
and
(bad)
adc
(bad)
out
add
ins
nop
inc
mov
test
adc
or
mov
adc
inc
retf
or
js
test
call
cwde
mov
jle
xor
xchg
sub
or
xchg
adc
push
cmps
push
gs
xlat
int3
inc
or
cmps
dec
or
add
test
xor
icebp
xor
push
xchg
add
inc
cld
into
dec
in
and
data16
or
mov
loope
inc
or
push
push
nop
sbb
popw
repnz
pop
sbb
repnz
loope
add
inc
adc
dec
loopne
push
mov
fisttp
test
xor
add
sub
jns
push
pop
sbb
jae
push
pop
mov
loope
int3
loop
shl
ret
iret
inc
sub
xchg
sub
in
inc
or
leave
or
sbb
(bad)
xchg
sub
lock
push
push
(bad)
adc
add
sub
movs
jnp
xor
lea
stos
xlat
or
pop
or
jo
add
pusha
jl
jnp
or
push
sub
movs
mov
inc
out
and
mov
mov
int3
xor
dec
cmp
mov
scas
cmp
add
push
xlat
jg
xor
mov
ror
pop
ds
push
mov
nop
jg
pop
inc
dec
mov
sahf
sbb
xor
sub
jb
xchg
cwde
xchg
jmp
inc
push
pop
fdiv
sub
mov
mov
js
sub
xor
mov
or
jo
mov
pop
popa
call
add
or
and
add
push
das
xor
xchg
mov
cmp
(bad)
pushf
cmps
cmps
push
movs
sub
pop
and
mov
adc
lahf
or
mov
push
pop
pop
mov
mov
dec
cmp
mov
jb
pop
xchg
cwde
pushf
push
push
mov
push
mov
ss
xor
jle
je
push
shl
and
dec
cmp
pop
pop
xchg
dec
add
outs
sbb
or
xchg
rcl
add
sbb
test
jbe
icebp
pop
sub
adc
(bad)
mov
mov
add
adc
clc
add
dec
mul
mov
mov
adc
rcr
jne
imul
cmp
sub
pop
aam
ret
loopne
push
add
sub
mov
ds
add
leave
dec
mov
rcl
test
add
int3
sub
sbb
fwait
xor
jb
mov
sbb
push
sbb
and
push
and
retf
xchg
and
cmp
je
push
aas
rcr
dec
imul
dec
push
mov
fbstp
sbb
jae
jo
fdivr
inc
push
and
mov
pusha
leave
shr
pusha
stc
pop
in
cmp
pop
mov
cmp
sub
pop
jb
push
cli
mov
mov
call
push
mov
mov
mov
retf
ret
and
adc
loopne
fst
sub
pop
mov
dec
mov
pop
das
xchg
pop
dec
add
loope
push
add
push
adc
ror
mov
ins
pop
mov
push
fs
add
add
imul
mov
or
mov
aam
js
call
mov
push
xor
jne
push
rol
push
xchg
pop
xor
and
loope
and
cmps
adc
jp
push
or
daa
int3
or
mov
ins
rcr
bound
add
and
jmp
mov
loope
or
or
dec
or
dec
inc
popf
lock
aam
jmp
mov
push
pop
or
sbb
call
jae
jae
and
rcr
add
or
sbb
arpl
addr16
push
lods
inc
and
and
(bad)
cld
push
loopne
xlat
add
cmp
stos
xor
xor
fstp
popf
dec
cld
or
sub
push
pusha
loop
or
inc
and
add
and
add
adc
in
mov
cmp
je
ret
stos
mov
xor
fwait
call
jmp
mov
aam
lock
fcmovb
jmp
test
fwait
push
inc
imul
jmp
sub
or
or
cmps
mov
stos
pop
test
xchg
mov
xchg
test
add
push
push
push
das
in
and
cmp
sub
sub
sub
cmp
jae
icebp
hlt
cmp
sub
or
sti
(bad)
ds
xchg
adc
sar
mov
cmp
pusha
loopne
jge
popa
jnp
out
mov
addr16
pop
call
popa
mov
or
dec
add
cdq
cmp
das
lods
and
adc
sbb
cs
dec
cmp
aam
inc
mov
mov
lea
rcl
mov
dec
sbb
test
mov
(bad)
and
inc
push
jecxz
xchg
pop
std
xor
add
xchg
rcr
mov
pop
inc
jb
ror
cmp
ja
add
add
inc
sbb
mov
jne
nop
in
scas
in
add
pop
mov
cmp
add
mov
outs
mov
in
and
push
je
push
inc
add
sbb
fmul
inc
mov
add
push
dec
add
pop
jno
jnp
add
jne
ss
adc
fimul
leave
ins
nop
hlt
add
dec
imul
cmps
adc
fs
dec
or
or
push
push
in
jns
sub
dec
or
add
je
rol
js
mov
nop
call
and
ins
sub
movs
mov
sti
add
mov
mov
cmps
mov
push
sbb
ret
and
mov
cld
and
call
cmp
loopne
xchg
mov
adc
enter
push
add
fdiv
dec
pop
mov
les
scas
adc
sbb
xor
shl
popa
or
pop
push
inc
mov
pop
add
mov
and
data16
sbb
cmp
clc
or
scas
and
test
or
or
push
leave
cmc
enter
stc
or
ds
or
mov
push
sub
sub
je
dec
je
add
dec
jne
sbb
(bad)
pop
push
pop
jmp
push
cmp
stos
imul
jmp
adc
push
adc
fiadd
sub
pusha
xchg
ins
jmp
pop
mov
cmp
push
push
and
adc
or
popa
push
aam
adc
add
retf
adc
dec
sub
sub
retf
add
shl
nop
inc
and
fwait
in
or
fcmovnu
ret
sbb
push
mov
or
cmp
loope
int3
push
sub
jmp
dec
adc
retf
fiadd
add
ror
adc
sbb
cmp
(bad)
push
out
add
rcr
mov
push
or
pop
mov
(bad)
jns
xor
sub
lock
add
mov
hlt
nop
cmp
and
add
dec
test
mov
pop
outs
inc
cmp
loopne
sbb
inc
xor
push
mov
adc
dec
push
cs
and
adc
lods
fisub
sub
(bad)
mov
or
mov
adc
dec
add
gs
movs
push
push
xor
test
or
cwde
sbb
aam
ins
pusha
imul
or
or
rcr
push
sub
cmp
xchg
mov
adc
lods
cmps
cwde
push
xor
dec
test
shl
xor
in
add
adc
inc
jecxz
inc
push
or
xchg
data16
or
xlat
jl
sbb
int3
(bad)
jo
mov
and
repz
push
(bad)
ret
inc
xchg
push
scas
or
add
cmp
or
movs
fld
adc
xor
(bad)
call
pop
adc
ja
mov
push
adc
adc
or
mov
mov
popa
cmp
(bad)
cmp
or
or
ds
push
test
xor
call
mov
loopne
in
enter
adc
addr16
fist
push
lods
wrmsr
inc
call
jne
mov
cmps
pop
ret
(bad)
xor
loop
add
jp
mov
pop
cmp
dec
in
push
cvtps2pd
in
push
in
mov
test
xor
rcr
mov
xor
inc
shl
(bad)
fmul
and
mov
inc
mov
fadd
cmps
sbb
jmp
sbb
xchg
cmp
shr
inc
jne
rol
xchg
pop
pop
(bad)
adc
add
(bad)
sub
js
lock
push
or
xchg
mov
ins
sbb
adc
cmp
adc
test
ret
(bad)
jb
ret
mov
loopne
adc
push
add
sub
in
push
je
cmp
cs
loopne
or
and
pop
inc
mov
popa
mov
mov
and
sbb
call
adc
cmps
dec
stos
adc
fsubr
lock
adc
inc
adc
push
int
pop
dec
dec
adc
sbb
pop
pusha
jge
sbb
pushf
pusha
add
loopne
inc
mov
xor
mov
push
test
push
pop
pop
call
aam
mov
ins
push
push
dec
(bad)
jle
clc
xchg
test
mov
push
cmp
jne
inc
inc
dec
push
test
adc
call
(bad)
into
jb
add
add
stc
and
dec
pop
je
pop
std
and
or
or
in
leave
nop
mov
cwde
sbb
mov
xchg
xor
mov
xchg
retf
loopne
sahf
add
rcl
outs
inc
xchg
push
loope
push
sbb
xchg
and
add
lds
or
pop
add
inc
push
adc
sub
mov
ror
lods
dec
loopne
xlat
pop
in
pop
add
push
and
push
adc
xchg
enter
(bad)
mov
sub
mov
jne
push
fcomp
enter
lods
mov
and
lods
adc
popf
inc
sti
les
(bad)
call
ret
or
sub
add
or
or
lds
ins
je
inc
or
xor
mov
dec
pop
add
ret
jne
dec
jno
movzx
push
test
cmps
dec
pop
dec
add
xchg
cdq
and
ret
fcomp
inc
nop
adc
cdq
mov
xor
fimul
mov
dec
push
rol
sbb
or
inc
or
lahf
sub
xchg
jecxz
pusha
adc
add
and
pop
inc
xchg
and
scas
cmps
adc
rcr
add
inc
xor
sbb
sub
push
jne
sbb
iret
sbb
test
outs
dec
cmp
out
inc
imul
jbe
in
test
test
sbb
mov
into
out
or
shr
addr16
(bad)
outs
pop
pop
mov
xchg
ret
add
cmp
outs
movs
pop
pop
jns
clc
bound
xor
jno
push
lods
mov
test
xor
in
inc
inc
cmps
sub
jo
mov
leave
pop
mov
mov
and
stc
cmp
lock
or
jo
das
dec
fwait
inc
ret
(bad)
in
aas
jbe
mov
hlt
dec
add
mov
add
or
and
pop
cmp
or
nop
fsub
inc
nop
shl
jno
push
test
inc
ret
sbb
mov
(bad)
and
add
lods
jns
dec
inc
cmps
cs
fisubr
fwait
or
cmps
pop
pop
pusha
add
dec
or
add
mov
mov
(bad)
test
mov
aaa
je
dec
sub
lods
push
pop
xor
sub
xchg
loopne
retf
dec
push
lock
push
inc
or
dec
sbb
or
xchg
push
ss
test
sbb
or
or
in
jge
add
cdq
mov
mov
push
jno
movs
aaa
int3
push
ret
shr
inc
xchg
popa
xor
sub
dec
mov
cmps
mov
mov
sbb
loopne
xchg
jo
xchg
add
mov
sbb
add
jne
inc
(bad)
nop
cmp
and
inc
ret
jecxz
fimul
push
jnp
dec
aam
jnp
and
inc
mov
xchg
mov
xor
les
mov
xchg
cwde
add
icebp
cmps
ret
add
push
push
(bad)
xchg
div
and
cmp
jbe
and
adc
push
push
test
fsubr
daa
shr
push
add
pop
pop
adc
cs
in
inc
push
mov
inc
adc
rcr
mov
je
mov
mov
pop
add
mov
xchg
dec
out
or
jae
cmp
test
sub
mov
inc
call
mov
fadd
and
test
mov
cmp
in
call
ror
add
and
jno
or
push
test
xchg
sub
ss
icebp
push
dec
popa
cmp
and
cmp
fwait
pop
fstp
xor
fstp
adc
sbb
or
pop
mov
jp
xchg
test
imul
xchg
xor
add
pop
pop
cmp
mov
jns
jmp
push
ins
add
xor
call
pusha
loopne
xor
je
sub
es
xor
pop
ds
int
add
in
cli
leave
cmps
add
mov
jae
adc
sbb
push
sub
cwde
loop
mov
add
sbb
jae
and
sbb
sub
dec
mov
jmp
push
and
imul
add
sbb
xor
jb
mov
mov
syscall
adc
pop
mov
aaa
mov
dec
rol
loopne
arpl
inc
enter
adc
jbe
dec
popa
mov
fistp
cs
bound
push
add
repz
std
push
mov
adc
xor
imul
out
adc
aam
add
mov
inc
cdq
sbb
mov
test
push
mov
sbb
mov
ret
daa
xchg
arpl
xchg
mov
or
mov
pop
or
xor
je
scas
rol
add
pop
cld
mov
lds
cdq
push
pop
je
push
and
call
mov
sbb
add
fdivr
pop
sub
cmp
arpl
fisttp
xor
jo
popa
sub
xchg
aad
pop
or
(bad)
xor
loope
or
mov
call
mov
nop
dec
scas
nop
or
or
and
or
or
or
or
and
adc
push
mov
push
daa
or
in
pop
ret
push
mov
movs
shl
sub
fcom
push
or
popa
pop
mov
loopne
popa
sub
(bad)
movs
(bad)
out
xchg
mov
fadd
mov
(bad)
fcom
adc
cmp
ja
add
ja
rol
push
jmp
or
movs
add
or
and
je
add
hlt
add
inc
cmp
add
lods
sar
les
adc
pop
and
or
enter
inc
iret
jno
movs
imul
call
repz
add
ror
sub
adc
push
lock
and
popa
push
daa
mov
and
mov
or
test
(bad)
mov
repz
pop
jae
sbb
inc
xchg
push
dec
jmp
shl
and
mov
fcom
daa
or
dec
sbb
push
and
pop
jge
and
push
adc
imul
imul
movs
or
lods
or
mov
pop
(bad)
aaa
push
xchg
pop
jmp
jmp
test
loope
sub
test
nop
ins
xchg
je
(bad)
inc
pushf
inc
sub
call
xchg
or
add
xchg
rol
or
data16
xor
(bad)
ret
gs
pop
pop
movs
fs
mov
and
push
xchg
dec
bound
and
push
daa
dec
jns
int3
add
or
cdq
push
cmp
ja
or
enter
or
lods
iret
jb
cmp
push
cdq
pop
push
pop
mov
cmp
cmc
sti
imul
fs
and
push
sub
cmovne
or
pop
sub
add
xchg
leave
mov
dec
inc
push
push
cmp
jl
mul
sub
or
mov
cmp
push
inc
inc
mov
mov
pop
pop
mov
push
cmp
mov
sub
xchg
cmp
les
mov
inc
daa
in
fcomp
dec
das
adc
ret
xlat
or
pop
sub
xor
adc
scas
cmp
pushf
jae
int3
popa
sub
pop
cdq
jne
sbb
add
and
push
mov
or
push
or
sbb
add
push
das
and
shl
or
adc
mov
mov
adc
inc
and
pop
adc
push
xchg
mov
test
fsubr
je
test
jecxz
test
inc
inc
fcom
mov
out
movs
adc
aaa
push
cmp
inc
dec
push
push
xchg
inc
or
push
rcl
mov
cmp
shr
or
pop
dec
pushf
repz
dec
rcl
xchg
xor
mov
das
cdq
push
adc
adc
mov
push
pusha
pop
js
std
imul
push
xor
sti
dec
popa
mov
in
aaa
aam
sub
mov
adc
imul
add
pusha
sbb
and
cmp
mov
mov
ror
adc
pushf
push
cmp
js
mov
push
stc
inc
or
jb
add
or
data16
ret
pop
dec
jne
pop
nop
movs
sti
mov
mov
sub
shr
push
add
add
hlt
mov
mov
rol
jmp
int
lahf
xchg
movs
adc
push
cmps
scas
xchg
jne
add
mov
xor
push
xor
sub
push
fdivr
ins
loope
out
xor
push
pop
popf
ss
pop
inc
inc
lahf
mov
cmps
xchg
sub
xchg
add
leave
mov
hlt
je
add
je
xchg
mov
call
mov
xchg
add
push
xchg
add
jl
push
pop
mov
test
mov
test
xchg
sahf
xchg
add
mov
retf
adc
je
(bad)
pop
pop
test
movs
fimul
mov
arpl
js
lahf
jne
mov
add
(bad)
mul
ins
aaa
push
popa
inc
dec
lock
inc
dec
pop
cmp
sub
daa
or
inc
jb
dec
cmps
pop
nop
mov
loopne
nop/reserved
ror
enter
fild
js
int3
adc
stc
lods
mov
fisubr
cli
or
inc
fnstsw
cmp
ret
or
hlt
adc
(bad)
mov
xlat
mov
cmp
adc
movs
test
test
and
dec
xchg
cmps
movs
dec
sub
fdiv
test
adc
sub
add
sbb
mov
je
push
xchg
mov
xlat
push
or
adc
push
icebp
mov
or
mov
jo
sub
xchg
sub
dec
outs
xchg
xchg
sbb
leave
or
adc
jo
pop
dec
add
int
out
lgs
loope
call
push
inc
cdq
cli
add
dec
pop
popa
(bad)
xor
popf
(bad)
or
(bad)
xor
inc
xor
nop
jne
push
push
(bad)
ss
dec
arpl
mov
arpl
xor
push
adc
lods
sti
dec
xchg
inc
adc
call
inc
jmp
in
cmp
shl
or
add
sbb
les
mov
and
pop
dec
stos
fcom
jge
ss
push
cld
into
adc
cmp
mov
adc
or
test
inc
mov
fcomp
dec
sar
jecxz
inc
xor
mov
sbb
aaa
pop
jbe
push
js
pop
je
mov
inc
inc
sub
sbb
sub
lea
call
cmp
cmp
into
xor
out
mov
fdivr
in
(bad)
sbb
sti
and
(bad)
ds
dec
dec
sar
or
test
ret
jmp
mov
xlat
push
or
sbb
int3
jns
aad
or
push
cmps
push
mov
push
movs
loopne
push
cs
clts
loopne
sub
int3
pop
cmps
or
push
cmp
mov
fxtract
daa
push
les
sub
jne
lea
dec
retf
or
lahf
sbb
es
mov
mov
cmps
sub
sub
cld
jne
adc
mov
fst
xor
cmp
mov
mov
cmp
add
xor
mov
xor
dec
popa
ins
xchg
push
pusha
cmp
cli
sub
mov
jbe
dec
inc
inc
sbb
in
xchg
xor
inc
std
cmp
nop
test
xchg
mov
or
aam
stos
lea
aaa
add
jne
fwait
lea
mov
in
xchg
xor
imul
add
xor
pop
fadd
mov
rcr
xor
call
cmps
inc
loopne
cmp
outs
je
xor
pusha
pusha
mov
dec
cmp
adc
jno
(bad)
je
mov
adc
in
pop
push
xchg
nop
fsubr
and
jo
mov
in
in
inc
xor
jno
mov
xor
sub
dec
fmul
pop
and
push
xchg
aas
popa
xor
xchg
lahf
sub
iret
xchg
scas
add
and
loope
movs
mov
inc
and
or
popa
aas
mov
cwde
pop
pop
dec
jo
xchg
adc
jae
lea
lea
(bad)
int
neg
and
mov
adc
lock
jp
daa
pop
out
xor
rol
loope
pop
fadd
push
xor
mov
pusha
add
jmp
cmp
add
call
xor
shl
out
test
je
pusha
lahf
cmp
jl
push
inc
aas
cmps
xchg
dec
sbb
inc
or
jmp
or
cs
and
mov
nop
dec
leave
or
pop
dec
call
call
test
fbld
and
das
pop
sub
adc
movs
lea
inc
adc
cmp
sbb
fisttp
ds
sub
sub
sti
xchg
icebp
rcl
test
sbb
loope
mov
mov
sub
arpl
push
inc
sbb
and
adc
adc
fs
push
movaps
stos
adc
ror
adc
adc
rol
dec
add
or
push
das
dec
dec
cmp
addr16
add
adc
nop
pop
ficom
inc
sub
and
repnz
popa
add
add
fdiv
pusha
rcl
or
test
xor
xor
int3
adc
xor
sbb
inc
mov
ss
ss
xor
inc
push
pop
lds
lock
in
and
inc
add
leave
adc
ins
or
sbb
les
add
pop
les
mov
shl
fwait
add
call
push
fwait
push
push
daa
pop
out
nop
test
xor
pusha
in
or
sub
das
mov
adc
xlat
gs
sar
pop
out
in
movs
and
pop
loopne
repz
push
and
mov
mov
push
and
js
sub
ss
add
test
shr
jo
xor
pop
pop
rcl
mov
xor
push
and
aas
push
mov
xchg
ja
add
int
mov
dec
cmp
lds
rcl
neg
cmp
out
or
jg
and
imul
(bad)
(bad)
leave
push
mov
fs
cmps
fiadd
adc
jmp
pusha
inc
mov
mov
dec
adc
mov
cld
jbe
add
mov
or
mov
xor
(bad)
in
or
add
jmp
push
hlt
or
loope
jg
cwde
inc
and
cmp
fild
or
pop
in
cdq
lods
call
pop
or
pop
xor
inc
pop
mov
data16
aaa
jns
js
out
cmp
push
inc
dec
xor
xchg
pusha
pop
mov
pop
adc
and
adc
pop
add
sbb
or
or
push
dec
inc
mov
dec
inc
mov
push
jecxz
xor
xor
ins
sub
push
sbb
or
sub
cmp
mov
mov
sar
push
inc
ja
or
or
or
cmp
xor
test
push
das
and
cmp
jmp
xor
push
dec
xor
ret
ja
adc
sub
(bad)
xor
and
adc
push
pop
jo
movs
mov
sub
adc
xor
sub
subps
push
sub
ins
inc
outs
inc
pop
inc
add
cmps
es
pop
push
je
jbe
jl
loopne
je
push
push
cdq
hlt
movs
and
shl
lea
fimul
ins
mov
push
jne
mov
and
cmp
cli
mov
mov
push
xchg
add
rcr
lea
sbb
mov
jl
lea
xor
ins
cdq
xor
popa
imul
pop
clc
stc
clc
pop
xor
push
adc
retf
mov
adc
cmps
mov
cdq
push
lods
fs
xchg
sub
adc
sbb
mov
in
movs
cmp
cmp
mov
pop
fcomi
sbb
sbb
ret
cmp
adc
push
sbb
lahf
push
sub
xor
mov
test
pusha
cmp
add
inc
ins
int3
xchg
sbb
sti
sbb
dec
add
or
call
push
inc
scas
or
sbb
jmp
scas
xor
je
or
mov
push
mov
add
mov
and
outs
push
jg
mov
mov
adc
xor
rcl
or
jle
cmp
dec
cmp
mov
gs
js
pop
xor
popa
pop
adc
and
add
test
mov
outs
ins
inc
pop
add
jl
mov
inc
mov
or
push
add
add
dec
test
push
jae
scas
add
rol
and
sub
clc
add
dec
push
pop
add
and
into
fild
jae
sub
add
inc
mov
inc
repz
dec
movs
jmp
dec
popf
fisttp
loopne
jmp
xor
mov
mov
pop
js
je
or
pop
sbb
mov
neg
push
xor
jns
or
aam
mov
jle
jb
ds
ins
and
dec
mul
inc
adc
jbe
cwde
ins
ret
jo
inc
dec
adc
in
mov
push
mov
sbb
fcomp
xchg
or
lea
adc
push
test
add
fistp
ror
fbstp
repnz
daa
mov
sub
mov
aam
popf
sub
inc
pushf
cmp
inc
test
pop
or
push
xor
add
test
mov
push
add
sub
jne
cli
daa
or
push
aas
pop
(bad)
jbe
jae
push
xor
add
sub
dec
fsub
pop
add
sub
inc
inc
or
test
push
test
add
add
or
add
push
mov
pusha
push
and
(bad)
sbb
aad
or
dec
add
cld
sub
add
pop
fwait
dec
adc
xchg
cmps
sbb
es
xor
jno
xor
mov
aaa
pushf
ror
leave
or
rol
push
adc
movs
out
adc
ror
mov
test
mov
inc
xor
add
pop
xchg
mov
sub
sbb
lea
lock
add
inc
jbe
ds
sbb
push
rcl
add
ror
rol
test
push
or
push
in
add
stc
fidiv
mov
mov
or
cli
lock
repz
dec
push
movs
adc
add
or
shl
test
cdq
sbb
test
and
dec
int
dec
xchg
add
adc
add
inc
dec
dec
add
add
test
mov
inc
jmp
push
dec
add
dec
loop
adc
pushf
aad
mov
fadd
adc
test
and
std
fdiv
push
add
xchg
fs
xor
push
loop
pop
retf
push
jecxz
mov
pop
push
sbb
and
push
sbb
scas
push
push
retf
std
call
cmp
sar
pop
cmps
fiadd
(bad)
fmul
pop
inc
sbb
push
hlt
popa
in
addr16
test
pop
push
in
ficom
icebp
add
push
add
inc
mov
lods
(bad)
or
cmp
movs
push
and
xor
add
scas
add
pop
cmp
push
push
push
xchg
dec
call
inc
aad
xchg
push
or
movs
or
push
inc
gs
mov
add
bound
sbb
stos
pushf
xchg
and
sbb
or
jb
(bad)
mov
jns
sbb
in
ss
pushf
mov
mov
sbb
mul
cmp
jmp
mov
inc
push
lock
cmp
and
lea
fwait
imul
cli
fimul
gs
jmp
and
add
enter
jbe
mov
sub
xchg
mov
lock
or
mov
add
sub
or
pop
imul
imul
inc
cs
jnp
mov
icebp
ja
dec
inc
dec
add
mov
test
or
push
pop
jmp
pop
mov
in
push
ret
cmp
ret
popa
pop
xchg
cmp
mov
adc
icebp
mov
sahf
mov
rcl
sub
mov
(bad)
je
aad
push
pop
inc
or
cli
add
ror
mov
je
and
leave
pop
ja
dec
xor
sub
sidtd
pop
inc
popa
iret
push
or
clc
inc
movs
cmp
jge
in
movs
imul
add
mov
data16
dec
pop
clc
jbe
rdpmc
adc
enter
push
push
cmp
in
nop
(bad)
sub
or
cmp
pop
push
inc
push
outs
imul
iret
cmp
or
inc
push
push
std
adc
add
scas
outs
or
cs
js
fs
out
or
hlt
add
and
dec
(bad)
jl
add
enter
xchg
outs
in
and
rol
mov
add
xchg
and
jbe
jae
enter
mov
jbe
jae
push
iret
test
adc
jmp
adc
add
and
cmp
xor
xchg
dec
in
push
jae
in
push
rol
loopne
hlt
sub
leave
(bad)
push
mov
mov
pop
add
inc
sub
popf
inc
bound
and
inc
xor
and
and
sub
push
jae
and
xor
push
or
xor
mov
js
mov
dec
mov
or
jl
mov
popf
add
enter
cmps
xchg
dec
inc
js
pop
add
pop
mov
test
xchg
add
add
or
cmp
add
aam
cmp
cmp
fadd
push
cmp
(bad)
(bad)
add
sub
test
push
push
inc
cmp
in
xor
enter
xor
pop
push
and
retf
sub
pop
bound
stc
adc
mov
into
sub
pushf
imul
mov
bound
push
jne
xor
sbb
push
pop
add
(bad)
xchg
mov
mov
adc
int3
push
pop
add
call
mov
dec
sub
mov
mov
dec
xchg
lods
sub
out
nop
test
or
xchg
cmc
mov
and
ret
dec
ret
mov
inc
(bad)
or
push
xor
push
mov
ins
add
arpl
adc
and
movs
pop
dec
and
les
cwde
pop
xor
inc
sub
sub
stos
cmp
xor
fdiv
es
inc
bound
js
jp
fdiv
sti
(bad)
add
pop
stos
adc
jne
xchg
cmc
add
sub
mov
enter
cmp
ror
or
je
xor
das
mov
add
xor
call
mov
jne
in
retf
enter
add
mov
test
push
cmp
and
sbb
sub
sbb
adc
and
mov
ror
adc
sub
inc
add
cmp
inc
fcomp
jge
and
js
push
sub
lock
add
push
dec
cmp
xchg
or
sbb
jne
int
adc
cmps
fs
cmp
push
push
pop
pop
loopne
loopne
push
call
xlat
ss
js
sbb
and
push
fsubr
xor
pushf
push
and
pusha
cld
or
push
xor
les
and
rcl
bnd
or
push
inc
sub
xor
lods
sub
mov
out
add
mov
dec
sub
push
push
push
add
fidiv
repz
(bad)
shl
adc
inc
cmps
test
push
cmp
mov
xchg
imul
int
call
test
mov
xchg
mov
add
xchg
aam
adc
mov
nop
loop
add
mov
add
dec
and
push
div
inc
test
cld
arpl
dec
jne
cmp
mov
xchg
mov
adc
pop
popa
ins
loope
enter
inc
push
fadd
pop
cmp
dec
into
jbe
sub
sbb
lock
adc
cld
sub
jl
and
jo
adc
loope
ja
cmp
jecxz
or
mov
lock
add
cmp
outs
outs
jb
mov
shl
jle
mov
push
mov
cmps
jo
push
(bad)
pop
call
lock
xor
je
xor
add
xor
mov
out
xlat
test
pusha
and
hlt
pop
sub
ret
mov
dec
add
cdq
adc
enter
push
mov
inc
add
dec
dec
xor
div
addr16
adc
push
and
inc
push
mov
shl
add
push
mov
and
sub
(bad)
adc
xor
adc
mov
jno
fsub
xchg
mov
adc
push
lds
test
clc
jle
jge
(bad)
shr
shr
push
adc
cmps
adc
aam
sets
push
and
retf
xchg
add
mov
mov
dec
adc
into
sub
repnz
adc
clc
fcom
fld
sub
ret
jae
pop
and
es
add
and
ret
jb
cwde
sub
movs
inc
mov
adc
push
aaa
jp
cmp
and
lea
or
lea
dec
adc
ret
add
fidivr
mov
mov
pusha
(bad)
inc
aad
xor
pop
jl
xor
shr
mov
aam
stc
sar
sub
mov
scas
sbb
jb
mov
or
ror
(bad)
and
aam
or
jbe
fs
sub
pushf
lea
and
aam
mov
inc
aaa
inc
cmp
cmp
mov
(bad)
pusha
test
add
clc
jmp
sub
and
into
mov
scas
scas
test
and
jle
aaa
xor
jo
mov
out
inc
or
and
pop
push
les
or
xor
es
shl
jns
add
sub
inc
push
mov
jp
jmp
lock
test
jne
push
jno
fcomp
sub
mov
adc
mov
and
mov
inc
sub
inc
cmp
dec
dec
and
or
les
(bad)
hlt
jne
pop
jp
mov
add
icebp
push
and
hlt
or
ins
inc
cmp
ds
mov
mov
std
pop
repnz
mov
and
and
lods
nop
adc
sbb
cld
push
xchg
push
add
sbb
popa
sub
ins
fcom
rcr
mov
mov
push
adc
cli
inc
sbb
cmp
sbb
je
jp
pop
push
mov
pop
test
mov
(bad)
clc
sub
mov
cld
fstp
sbb
lock
in
adc
and
mov
into
xchg
xor
(bad)
es
ins
xor
sbb
jmp
pop
xchg
addps
loope
inc
pop
inc
dec
xchg
js
jne
hlt
cmp
rcl
xchg
lea
and
jp
pop
dec
lahf
add
fbstp
add
xchg
inc
push
cmp
push
mov
cdq
cmp
mov
mov
and
hlt
cmps
repz
or
aam
mov
mov
pop
pop
cmp
es
jbe
mov
add
push
fsub
push
add
pop
mov
out
push
push
in
inc
add
push
aam
cmps
pop
cld
ja
cmc
xchg
and
and
mov
jmp
sbb
sbb
hlt
mov
test
push
add
mov
icebp
sbb
mov
pop
(bad)
cld
sar
or
jo
lock
(bad)
adc
out
fs
imul
adc
ret
jbe
inc
or
call
cmp
outs
or
xchg
retf
add
enter
cdq
inc
sahf
add
mov
(bad)
int
jmp
sub
mov
xor
inc
cmp
inc
pusha
ins
inc
sbb
mov
int3
dec
inc
or
sub
or
neg
or
push
and
or
sbb
xor
adc
pop
pop
or
cwde
mov
sub
dec
jbe
ds
or
cmp
jb
xor
push
jmp
ins
or
jl
push
xchg
sub
mov
sahf
call
popf
xchg
pop
cld
(bad)
fadd
adc
or
enter
jbe
sub
cmps
mov
sbb
and
addr16
inc
and
sbb
out
and
add
and
jge
ins
sbb
inc
jmp
mov
cmp
add
mov
inc
cs
or
clc
mov
jge
xchg
or
jbe
adc
inc
sub
(bad)
ss
dec
cmp
shr
sub
push
ss
(bad)
cwde
cld
mov
fadd
jecxz
sub
mov
clc
or
int
pushf
push
mov
sub
je
or
mov
and
(bad)
mov
sbb
jge
mov
cdq
(bad)
cmp
mov
adc
dec
or
hlt
add
xor
jbe
or
arpl
and
xchg
pop
mov
xor
mov
into
inc
loop
ffree
jmp
adc
enter
mov
sub
or
call
xchg
rcl
movs
jle
mov
push
pop
xor
loope
loopne
fucomip
jb
out
add
sbb
fsub
pop
push
mov
push
inc
push
hlt
mov
sub
dec
mov
jl
xor
mov
adc
xor
and
xor
jle
mov
jne
pop
xchg
pop
sbb
xchg
sbb
retf
push
mov
dec
jne
mov
inc
les
jbe
ja
imul
inc
mov
shr
xor
inc
xor
push
pop
mov
loope
xor
loope
xchg
or
xor
pop
xchg
dec
add
(bad)
xor
jae
mov
mov
xor
das
movzx
pop
aam
das
imul
fmul
xchg
mov
pop
pusha
(bad)
or
and
cmps
stos
and
pusha
and
pop
jge
fcomi
add
cmp
repz
add
lar
cmp
cmp
add
push
cmp
cmp
pop
or
or
cmp
cmp
or
push
mov
push
xor
pop
retf
stos
stos
mov
and
movzx
inc
sub
jg
pusha
dec
inc
mov
div
xor
or
bnd
retf
sub
repz
cli
ja
mov
lods
adc
sbb
or
sbb
movs
mov
adc
std
adc
loope
jecxz
pop
outs
sar
aad
sbb
retf
push
push
push
(bad)
daa
rcr
mov
and
and
mov
push
aad
inc
and
push
cmp
add
mov
(bad)
xor
or
pop
pushf
arpl
dec
fnstsw
cmp
sbb
pusha
gs
inc
adc
aam
out
test
sbb
or
imul
push
sub
sub
cmp
rcl
push
(bad)
push
cmp
mov
mov
push
and
jns
jle
cmp
or
shr
xor
pop
lock
cld
jmp
mov
or
or
inc
or
inc
cmp
adc
dec
push
and
mov
mov
xchg
push
push
inc
pop
popa
pop
jns
cmp
imul
pusha
adc
je
push
add
or
je
mov
add
mov
fiadd
push
push
xlat
mov
or
pop
xor
pop
icebp
mov
shl
cmc
retf
push
(bad)
adc
push
arpl
imul
js
push
push
ret
sub
and
or
or
xor
add
adc
inc
sbb
mov
sbb
mov
jmp
mov
inc
push
xor
shr
retf
or
cmp
mov
adc
pop
adc
push
xchg
sbb
(bad)
dec
xor
adc
sbb
std
sbb
add
dec
fild
jmp
sbb
add
lods
sbb
sub
mov
out
sbb
div
push
push
mov
sub
pop
idiv
jbe
and
(bad)
xor
cmp
je
cmp
imul
mov
ins
dec
aas
push
ret
jnp
test
or
cmp
add
mov
mov
push
imul
jmp
jae
sub
sbb
pop
hlt
mov
jmp
outs
or
iret
fs
xor
inc
push
loop
push
and
lock
jl
outs
shl
js
push
or
mov
inc
and
dec
inc
mov
or
sub
mul
or
cmp
sub
pusha
stos
mov
inc
dec
add
shr
sbb
jmp
add
cmp
shr
add
sbb
sub
push
daa
add
lea
enter
ret
test
and
jne
and
push
cmp
or
psrlw
push
adc
cmps
or
out
sub
mov
popa
jmp
lods
mov
movs
lea
popf
jns
das
adc
mov
rol
mov
es
pop
xchg
scas
mov
mov
mov
lock
inc
sub
inc
cmp
ja
adc
sbb
dec
int
jo
add
push
adc
cmp
jl
jle
(bad)
pop
xchg
jbe
pop
ret
gs
xor
jne
fdivp
add
and
sub
cmp
mov
sbb
pop
inc
pop
aam
cmp
fwait
inc
cmps
fs
outs
xor
push
sbb
pop
ins
mov
add
xor
shl
xor
cmc
add
pop
retf
lock
push
mov
pop
xchg
lods
xor
add
push
adc
add
hlt
lods
add
ret
pop
cmp
mul
dec
clc
pop
cmp
jecxz
and
ja
pusha
add
or
jp
rol
ja
push
sbb
push
sbb
dec
pop
scas
inc
lea
jmp
dec
cmp
pop
jl
fisub
adc
dec
jne
or
add
dec
dec
add
js
or
retf
sub
mov
xchg
sub
dec
arpl
inc
and
adc
imul
dec
daa
push
call
out
out
pop
or
dec
xchg
fld
loopne
add
adc
or
pop
shr
or
adc
shr
push
sti
bound
loop
add
bound
mov
sbb
pop
mov
push
add
sti
test
mov
inc
rcr
mov
aaa
in
retf
adc
cld
jmp
xor
add
inc
adc
(bad)
adc
fsubr
add
sbb
sub
ins
neg
dec
daa
mov
push
mov
daa
loopne
xchg
lock
dec
or
add
aas
lahf
inc
aad
jbe
shr
enter
mov
aam
mov
mov
daa
sub
jb
in
mov
je
or
sub
test
mov
jae
mov
fisubr
add
pop
jbe
add
xchg
jbe
jl
pop
(bad)
sbb
je
mov
(bad)
add
test
je
lods
int3
movs
mov
or
repz
fiadd
add
ja
jne
int
and
imul
dec
and
and
mov
mov
sub
int3
fnsave
pop
add
xor
fcomp
cld
fwait
and
or
add
or
jecxz
test
sbb
sub
fild
fstp
and
pop
adc
mov
movs
mov
inc
clc
(bad)
cld
pop
pop
pop
leave
dec
pop
mov
dec
xor
(bad)
inc
and
add
cli
adc
nop
push
mov
add
pop
dec
outs
pushf
xor
sbb
mov
mov
pop
pop
pop
add
nop
pushf
jmp
adc
imul
add
mov
mov
mov
add
push
mov
mov
cwde
add
sbb
push
pop
push
sti
cmp
sbb
sbb
dec
mov
push
sub
mov
or
or
xchg
mov
sub
or
xor
rcl
mov
sub
ss
add
push
push
mov
enter
sub
outs
enter
sbb
clc
inc
jb
mov
lds
mov
adc
mov
or
test
or
mov
pusha
cmp
les
sub
push
mov
push
fidiv
fisttp
or
(bad)
ss
imul
or
scas
nop
hlt
lea
mov
xor
pop
cwde
test
daa
ins
jmp
sbb
dec
xor
nop
or
out
clc
or
add
adc
adc
dec
add
cmp
push
add
inc
push
add
inc
test
movs
loope
mov
ins
shl
loopne
jle
jae
add
sub
into
out
inc
cmp
xor
lods
push
xor
inc
add
ficom
sub
pusha
jl
mov
and
inc
pop
or
cwde
xchg
bound
jmp
test
imul
mov
xor
out
inc
dec
xor
ds
sti
push
jo
jg
es
push
rol
push
fwait
push
and
pop
mov
mov
lock
enter
or
cs
add
sub
loope
data16
call
sar
aaa
or
inc
add
cmp
xor
not
pusha
hlt
push
inc
scas
cmp
repnz
jmp
add
add
fmul
mov
push
dec
add
inc
sbb
or
mov
out
push
pusha
inc
sub
xchg
rcr
js
or
shl
enter
lea
leave
add
std
loope
push
and
mov
sub
push
cwde
add
inc
movs
dec
add
imul
lock
mov
pusha
arpl
mov
inc
inc
pop
dec
add
xchg
or
je
dec
dec
sar
dec
pop
mov
cmc
mov
sahf
movs
lahf
fld
setle
loope
cmp
mov
es
(bad)
leave
pop
push
popa
pop
xlat
fcomp
adc
inc
popa
imul
mov
cmp
inc
into
adc
aas
add
mov
repz
imul
inc
aad
popa
adc
add
inc
push
xor
jb
mov
adc
sbb
sub
retf
and
rcr
aaa
fwait
scas
or
jge
imul
nop
cmp
sub
hlt
xor
sub
in
cmc
jno
jae
sahf
bnd
push
or
pop
sub
in
or
jae
inc
mov
push
sub
iret
push
ss
xor
inc
or
ret
mov
stc
ud0
mov
and
sub
data16
pop
push
dec
sbb
adc
add
mov
ins
out
push
mov
mov
loope
mov
xchg
sbb
mov
mov
je
jle
cmp
mov
mov
test
mov
cmp
push
daa
in
push
pop
mov
ror
pop
fs
add
mov
retf
push
aam
lods
or
pop
fs
pop
shr
not
shr
and
xchg
imul
cmps
call
out
mov
xor
pop
out
pop
pusha
test
dec
dec
jne
mov
mov
test
add
sbb
mov
dec
shr
cmp
icebp
ja
cmps
loop
and
fucomp
call
shr
or
test
test
adc
push
or
add
sbb
mov
out
shr
arpl
call
push
pop
lea
out
enter
int3
movs
adc
mov
sub
dec
(bad)
xchg
xchg
imul
mov
adc
sbb
xchg
xchg
push
xor
push
jle
push
push
mov
mov
mov
mov
push
test
jno
mov
jne
repnz
xchg
mov
je
call
sub
lods
sbb
fmul
or
retf
shr
fdivr
mov
int3
adc
cmp
xchg
and
push
(bad)
add
push
jns
mov
xlat
adc
push
or
or
int3
push
dec
lock
xchg
loope
neg
jge
arpl
push
daa
xchg
mov
add
jbe
jno
adc
inc
mov
sbb
mov
out
cmc
pop
ret
dec
mov
fdivr
pop
or
push
add
xchg
sbb
imul
test
fistp
cmp
add
push
mov
mov
in
adc
mov
retf
add
inc
cmp
or
xchg
test
dec
stos
call
loop
nop
or
leave
(bad)
dec
pop
add
out
test
jae
popf
and
add
add
xchg
(bad)
aas
push
or
test
add
out
jno
xchg
and
adc
add
je
jmp
or
adc
into
xor
mov
cmc
add
sahf
or
jmp
sbb
and
cs
loopne
push
or
jp
mov
add
sbb
sbb
xchg
sub
ins
add
cmp
or
call
dec
xor
add
cwde
jmp
adc
xchg
nop
sbb
inc
retf
loop
mov
xlat
and
arpl
mov
inc
sbb
ret
(bad)
xchg
add
in
xor
cmp
pop
cmps
jno
xor
xchg
lea
and
push
rep
mov
xchg
and
and
add
jbe
pop
and
push
mov
pop
cmp
and
inc
push
dec
lock
xor
or
scas
pop
add
adc
add
jae
movs
dec
xchg
or
fucomp
ja
popa
mov
das
call
retf
pop
pop
add
ror
cmps
sbb
or
ror
pop
js
shl
ret
clc
bound
add
jo
sub
mov
sub
xchg
fisubr
int3
(bad)
sub
push
add
mov
sar
sbb
push
sbb
add
dec
pusha
gs
adc
or
bound
push
dec
ret
sub
ss
sub
clc
outs
add
les
or
mov
push
push
push
mov
jge
add
jmp
pusha
inc
stos
add
rcr
lea
inc
gs
add
loopne
cmp
dec
adc
movs
mov
arpl
rcl
add
rol
ins
pushf
sub
xor
fadd
mov
or
mov
rol
add
sbb
dec
cmps
add
ret
xchg
and
or
rcl
or
test
sub
adc
sub
dec
dec
imul
or
cmp
add
bound
sbb
jl
sbb
and
ins
lock
test
loopne
fcmovb
mov
or
add
add
xchg
test
xor
fchs
mov
test
and
cmc
add
or
aad
add
sub
mov
lock
(bad)
add
sub
jb
dec
cmp
stos
dec
mov
(bad)
popf
jge
js
cmp
push
sar
es
fcmovbe
fisttp
test
adc
jle
pop
dec
lods
shl
push
xor
xchg
inc
scas
xor
shl
pop
mov
pushf
adc
inc
jmp
push
ret
in
xor
xor
sbb
inc
outs
jae
sub
sbb
or
mov
add
mov
loope
or
pop
mov
pop
dec
es
mov
jbe
push
push
pop
dec
push
push
and
push
arpl
jne
movs
js
adc
int
loopne
xor
mov
sub
and
or
in
(bad)
jmp
push
pop
jbe
sub
add
cmp
push
mov
je
jp
jge
inc
dec
and
dec
sbb
aas
adc
sub
mov
add
push
jge
fs
push
jl
add
sbb
(bad)
mov
inc
xchg
xor
iret
ror
out
rcl
push
mov
lahf
sub
adc
(bad)
push
cmp
push
mov
mov
cwde
cmp
ins
xor
or
inc
lock
push
enter
and
jbe
imul
add
add
add
sub
sub
ret
adc
mov
sbb
test
pop
add
mov
jl
add
xchg
and
cld
or
cmps
add
add
pushf
call
test
mov
aad
call
add
clc
mov
cmp
dec
jo
jbe
pop
add
loope
push
fild
inc
call
leave
and
test
inc
mov
sub
iret
add
adc
inc
ror
mov
inc
fsub
add
xchg
imul
add
pop
lods
js
mov
sbb
out
into
mov
or
mov
mov
pop
data16
or
call
xor
and
retf
or
mov
add
cli
shr
lods
cli
jb
retf
shl
and
test
loopne
xchg
stos
sahf
inc
popa
(bad)
pop
cwde
mov
das
push
xchg
xchg
shl
adc
in
hlt
inc
jmp
adc
lea
inc
and
mov
shl
les
daa
aas
mov
pop
retf
lock
mov
mov
or
imul
cmp
jnp
js
clc
jno
adc
mov
push
cmp
test
lahf
adc
push
es
repnz
inc
or
(bad)
lock
jp
dec
cld
out
add
outs
or
ret
lea
jne
cdq
mov
lea
pop
hlt
jb
cwde
std
add
sbb
fsubr
imul
xor
and
jo
push
sbb
inc
adc
jecxz
add
jnp
push
mov
neg
lods
or
inc
call
out
add
test
inc
lock
xor
mov
or
daa
pop
bound
test
push
enter
or
pusha
or
dec
and
dec
or
or
lahf
cmps
or
sbb
das
and
cs
sbb
push
int3
jp
rol
jb
jmp
loop
fcomi
xchg
pop
dec
test
add
or
jb
in
or
mov
pushaw
jbe
mov
add
jns
popa
stos
sbb
mov
test
add
pop
es
xchg
into
and
adc
repnz
mov
fimul
adc
and
dec
pop
sub
pop
xchg
mov
push
push
sub
or
jo
pop
in
or
cmp
jo
test
pop
sub
lea
xor
sbb
rcl
jo
or
sbb
add
inc
push
mov
adc
or
retf
or
push
add
and
xchg
shl
sub
jbe
push
cmp
lock
mov
sub
adc
xor
inc
mov
add
xchg
pushf
cmc
into
or
mov
mov
outs
les
jns
pop
xor
les
jmp
mov
dec
shl
inc
jb
add
add
adc
(bad)
iret
lock
aaa
bound
jle
and
or
jae
and
cmp
jecxz
xchg
clc
rcl
ret
mov
cmps
in
xor
mov
add
xor
retf
pop
addr16
sbb
ds
add
push
add
adc
xor
pushf
add
fidiv
dec
clc
xchg
inc
inc
fwait
inc
repnz
jge
mov
add
add
cmp
dec
bound
xchg
mov
and
mov
cld
or
adc
and
mov
mov
cld
push
loop
test
jne
popf
aas
sub
sub
adc
xor
jae
sbb
sbb
add
into
int
xchg
add
and
mov
push
fidiv
adc
fimul
repnz
adc
fiadd
pop
sub
sahf
or
popa
dec
or
mov
in
dec
nop
add
push
aaa
xchg
sbb
xor
push
or
sbb
mov
(bad)
jmp
mov
or
popf
push
int3
ds
and
mov
pop
cmp
ret
sbb
or
sub
lahf
mov
loope
sub
add
xor
pop
push
or
shl
adc
cmp
mov
(bad)
jge
cs
cwde
adc
(bad)
(bad)
xor
push
push
sbb
cmp
jbe
test
mov
data16
mov
or
cld
aaa
or
retf
pop
add
xor
pop
div
sub
test
outs
sbb
ins
xchg
mov
push
fsubr
shl
mov
push
out
clc
pop
leave
test
or
mov
test
lock
pusha
mov
dec
loopne
pop
cmp
or
add
outs
jnp
repz
add
push
mov
or
adc
pop
jb
xchg
push
adc
rol
push
test
pushf
test
test
inc
sbb
aaa
movs
cmc
push
mov
arpl
pop
ins
xchg
jo
push
dec
sbb
dec
pop
xor
push
xor
je
push
or
dec
adc
in
and
cmp
loope
loop
and
les
add
push
dec
les
push
in
or
jmp
inc
add
ret
in
(bad)
pop
add
ret
xchg
mov
adc
bound
fcom
lods
xor
push
add
pop
xlat
fidiv
mov
sbb
in
cmps
lea
sti
cli
mov
repz
pushf
cli
jp
cs
fcomip
cmp
pop
sub
lahf
out
push
je
int3
add
jmp
aam
pop
call
pop
or
outs
inc
jl
dec
mov
mov
mov
loopne
add
and
popa
leave
and
and
clc
adc
sar
dec
add
inc
inc
push
jo
cmp
adc
lahf
xchg
or
imul
cmp
call
add
nop
es
adc
jb
sbb
or
lea
js
pop
jecxz
cmp
(bad)
add
jge
sbb
mov
daa
ret
adc
or
(bad)
sti
pushf
pop
push
pop
lea
mov
push
rep
or
enter
loope
rol
xchg
xor
test
add
pushf
jp
dec
push
rcr
lahf
push
push
cdq
adc
inc
xchg
xchg
inc
in
xchg
ins
je
or
push
jns
adc
aas
push
gs
push
push
cmp
jle
push
jmp
push
and
outs
stos
dec
stos
xchg
repz
add
pop
mov
inc
cmps
push
push
dec
mov
or
adc
adc
fisttp
or
fld
mov
xchg
rcl
xor
adc
test
sbb
pusha
sub
cli
dec
pusha
sbb
push
jmp
push
mov
mov
pop
ror
xchg
test
test
inc
mov
lods
add
inc
pop
mov
mov
sbb
inc
cmp
jno
jne
add
or
mov
xchg
fcom
std
inc
or
add
xor
cwde
je
addr16
and
nop
sbb
hlt
add
shr
mov
push
aam
loopne
les
jmp
pop
mov
mov
add
xor
or
aam
fmul
xor
mov
cmps
push
adc
clc
cmp
aaa
test
and
mov
(bad)
or
jmp
fist
sbb
pushf
mov
xor
iret
imul
inc
aaa
dec
lock
mov
(bad)
rol
or
adc
je
cmp
add
dec
dec
xchg
add
outs
mov
adc
shr
push
push
add
inc
inc
inc
mov
cmp
jne
or
(bad)
cmp
jle
cmp
mov
sub
test
xor
scas
mov
push
xor
cmp
cdq
ror
fisttp
bound
fisubr
sti
ja
and
cmp
mov
sub
pop
test
push
pop
add
xchg
and
pop
xor
leave
mov
ins
fld
bound
xchg
les
xchg
add
push
mov
or
(bad)
addr16
push
add
cmc
adc
cmps
dec
pop
add
adc
add
popa
add
push
push
fistp
adc
ret
xchg
(bad)
push
mov
add
test
enter
aas
mov
add
ins
jo
sti
(bad)
clc
mov
(bad)
outs
cwde
mov
add
jne
int3
cmps
je
xor
pusha
popa
and
jbe
mov
out
or
es
and
scas
cs
inc
fiadd
mov
(bad)
mov
push
sub
lock
fidivr
fiadd
inc
dec
add
inc
out
fiadd
add
push
pop
cld
repnz
mov
or
imul
dec
dec
les
inc
add
gs
nop
inc
adc
fcompp
jno
lock
pop
jne
or
mov
adc
out
sar
sub
mov
mov
jl
icebp
pop
xchg
and
ret
push
sbb
ss
adc
dec
sbb
jmp
jnp
sub
add
push
call
test
cmp
rol
adc
iret
or
cwde
hlt
lock
sar
je
cmp
int3
dec
pop
leave
sbb
cmp
jge
or
sbb
fwait
inc
push
cmp
mov
cmp
sub
nop
jmp
outs
dec
inc
mov
mov
js
fcom
mov
cmps
fstp
scas
pop
cmp
dec
cmp
popa
pop
lock
xchg
out
or
mov
in
add
clc
add
add
cmp
lea
lea
(bad)
(bad)
call
pop
mov
sahf
sbb
ja
div
icebp
and
jne
rol
int3
and
jmp
loopne
jmp
push
add
cmp
inc
into
rol
out
and
mov
clc
loop
push
mov
scas
jne
lea
mov
add
loope
inc
sahf
adc
ret
sub
sbb
repnz
mov
fadd
xorps
fadd
popf
ror
cmc
push
iret
and
mov
imul
adc
sahf
fadd
sbb
add
das
add
cmp
ret
fsub
jo
or
mov
mov
scas
add
test
inc
adc
neg
cmp
cmp
in
xchg
pop
mov
ja
mov
add
push
dec
jne
push
jns
pop
out
outs
xchg
fst
inc
sub
cmp
bound
jmp
stc
dec
das
or
pop
mov
push
mov
(bad)
aaa
ins
clc
scas
push
popa
fninit
fucom
jmp
pop
cld
adc
sub
dec
shl
push
push
xor
shl
pop
shl
pop
and
je
and
fisttp
rcl
ds
adc
nop
mov
xor
inc
push
push
adc
cmp
jbe
test
lea
and
in
mov
add
lock
ins
mov
dec
mov
(bad)
cmp
push
xchg
add
aas
xchg
inc
or
push
adc
add
fidiv
arpl
mov
push
mov
add
(bad)
aaa
cdq
add
not
mov
mov
(bad)
cs
test
jecxz
mov
in
push
xchg
or
nop
sub
int3
inc
dec
jnp
sub
mov
push
add
jmp
and
mov
add
sbb
push
add
xchg
push
and
sub
jae
xor
inc
add
sbb
sub
outs
add
aaa
pop
fwait
xor
pop
and
inc
rcr
fnstenv
pusha
inc
inc
adc
enter
mov
and
sti
xor
cdq
xchg
int
lock
movs
cmp
stos
push
jae
xor
and
add
enter
pusha
movs
cmp
or
inc
sbb
adc
jb
lahf
xor
test
fcom
add
mov
mov
inc
or
lods
push
push
fisttp
fisubr
add
fst
add
and
loope
push
outs
sahf
or
or
test
neg
push
arpl
rcl
movs
and
shl
and
pop
add
ret
pop
movs
nop
dec
pop
lahf
mov
push
lahf
out
scas
inc
xor
xor
fnsave
outs
sahf
jo
nop
xchg
or
add
std
jmp
mov
cmps
call
add
and
add
adc
imul
push
cdq
xchg
or
dec
movs
daa
dec
cld
cmp
mov
sar
ret
cmp
mov
aas
and
lods
or
add
mov
jp
sub
push
adc
push
retf
jmp
cmp
sub
sar
inc
ror
or
das
in
jl
mov
xor
adc
mov
ins
push
adc
repz
mov
or
inc
xchg
add
lods
push
or
(bad)
dec
pop
pop
in
push
clc
and
and
push
pop
add
xadd
outs
dec
sbb
ret
add
xchg
jne
das
ror
xchg
imul
dec
addr16
add
jne
sbb
loopne
pop
add
shl
fmul
in
mov
pusha
push
mov
add
js
mov
int
je
mov
in
ja
mov
mov
push
xchg
mov
xchg
leave
xchg
sbb
xchg
xchg
cwde
pop
test
sbb
inc
movs
push
cmp
sub
push
cwde
sbb
adc
and
or
gs
xor
imul
sub
cld
push
push
inc
cmp
rol
mov
pop
jp
mov
add
mov
test
ffree
push
mov
mov
add
nop
shr
scas
lea
repnz
jecxz
sti
push
enter
pop
invd
jb
jae
ins
test
sub
sbb
xchg
(bad)
test
mov
or
and
inc
aam
sub
cmp
test
pop
add
bnd
or
jo
int3
adc
add
(bad)
adc
test
jg
mov
sub
das
inc
scas
push
add
popa
loope
test
movs
pop
ret
fadd
mov
mov
xor
dec
in
add
jp
mov
shr
das
cmp
push
sbb
or
sbb
pop
call
jns
cdq
loopne
dec
jle
fsubr
scas
fsubr
scas
add
call
inc
adc
xchg
fsubr
inc
add
lods
push
add
(bad)
or
movs
mov
sub
ja
inc
xor
adc
inc
lds
xor
push
cmp
add
jb
cmp
add
and
xor
push
rol
xor
dec
mov
or
leave
inc
xor
xor
push
xor
xor
in
adc
xor
inc
add
jl
inc
mov
sbb
xor
in
push
cmp
push
push
mov
adc
mov
push
xor
xor
movs
jmp
rcl
ja
ss
add
pop
loope
scas
leave
add
add
(bad)
div
sti
add
add
cmp
mov
add
inc
sub
mov
and
in
add
rol
div
add
and
xor
hlt
lahf
xchg
mov
push
test
mov
out
imul
sbb
outs
xchg
fadd
cmps
add
lds
jmp
adc
xchg
out
and
loopne
lds
mov
ins
add
loope
mov
push
pop
mov
add
dec
add
out
add
(bad)
test
and
sbb
xchg
mov
mov
leave
and
leave
mov
scas
add
xor
xchg
push
add
loopne
jo
mov
aaa
and
jne
inc
mov
pop
push
inc
pinsrw
push
or
movs
pop
jecxz
adc
mov
and
popa
add
sti
test
sbb
inc
add
xchg
adc
push
or
mov
add
lods
out
pop
dec
mov
aam
or
sbb
sbb
int3
cmc
rcr
push
inc
add
xor
mov
or
xchg
das
aam
popf
sbb
aaa
mov
mov
ds
dec
loopne
jne
test
and
(bad)
or
mov
cmp
mov
movs
arpl
aam
push
dec
sbb
lds
or
fcmovb
icebp
add
movs
sar
call
cmp
push
and
adc
or
inc
jns
sub
out
sti
(bad)
loope
mov
or
mov
mov
ror
cmp
aam
test
mov
inc
mov
push
jb
jmp
push
rol
push
push
int3
xchg
fist
popf
ror
sub
or
add
imul
mov
push
sub
dec
push
inc
add
lea
push
jge
push
xchg
mov
mov
jge
dec
push
pusha
adc
shl
mov
push
add
fsubr
or
das
mov
jp
das
or
or
push
mov
test
clc
leave
mov
push
xor
push
punpckhbw
add
push
sahf
add
pop
repz
push
nop
inc
jp
xchg
or
lods
push
fs
cdq
cmp
dec
push
enter
and
adc
js
loop
aaa
push
mov
dec
push
cmp
mov
repz
inc
out
jno
ror
cmp
test
clc
loope
fist
sub
mov
add
push
retf
cmps
inc
ins
mov
addr16
cwde
or
and
popa
mov
test
mov
fdivr
xchg
jne
pusha
jl
nop
jmp
mov
mov
xor
sbb
xor
nop
xor
pushf
pop
push
and
xchg
lock
lock
inc
lea
mov
xor
cmps
je
mov
push
in
bound
imul
mov
mov
jecxz
push
enter
inc
inc
daa
pop
and
test
or
xlat
leave
test
sub
xchg
or
cld
sar
out
aad
add
mov
adc
xchg
push
push
jae
adc
das
js
and
mov
or
scas
or
es
push
test
adc
add
inc
add
mov
scas
push
add
or
or
movs
test
nop
mov
lock
ret
pop
nop
jmp
add
push
mov
jle
scas
clc
mov
sub
add
push
push
mov
scas
aaa
and
test
outs
(bad)
aam
jmp
jae
push
clc
movs
cli
movs
mov
popa
shr
cmp
xchg
fdiv
adc
push
test
inc
jne
sbb
les
xor
or
fbld
push
aas
pop
mov
(bad)
jno
pop
push
leave
pop
and
inc
push
in
add
push
jns
lock
xor
xchg
xchg
cmps
repnz
xor
xor
or
enter
adc
xor
push
push
imul
sbb
pusha
adc
mov
mov
stos
push
mov
pop
xor
dec
ror
movs
push
sbb
fst
out
dec
mov
push
pop
inc
add
les
add
xchg
ds
pop
xor
mov
mov
adc
js
or
push
mov
and
and
nop
fimul
push
push
or
mov
push
pop
jecxz
push
xchg
es
call
add
adc
fdiv
mov
mov
xchg
nop
cmp
adc
call
dec
lock
cwde
xchg
xor
dec
and
nop
and
call
rcl
in
nop
retf
test
adc
mov
xor
push
sub
add
bound
mov
cmp
cwde
rcr
mov
mov
push
jo
xor
mov
jae
sbb
adc
mov
imul
lds
ja
mov
jecxz
test
lock
inc
(bad)
pop
mov
outs
sub
cmp
adc
inc
xor
sbb
jl
add
or
pop
xchg
cmps
(bad)
test
fldcw
dec
test
pop
cmp
mov
es
or
dec
mov
adc
jne
std
inc
mov
push
stc
push
mov
or
inc
arpl
jae
ret
sbb
aaa
xchg
ins
push
mov
dec
leave
jmp
mov
call
jge
test
gs
std
add
shl
stc
popf
add
and
xor
mov
or
aas
pop
cmp
adc
dec
dec
mov
xchg
daa
repz
jecxz
shl
lock
dec
enter
call
jge
int3
and
sbb
adc
mov
xchg
sub
or
stos
mov
push
and
inc
jl
mov
jne
ins
aam
push
stos
and
sub
js
add
stos
stos
inc
adc
addr16
adc
cdq
ins
mov
cmp
and
push
imul
dec
in
and
mov
or
xor
cdq
xchg
dec
cmps
je
or
inc
or
mov
sub
dec
pop
xor
push
and
sub
xchg
pop
xor
adc
pop
xor
cmp
ret
xchg
adc
mov
dec
out
jae
mov
fcomp
imul
sbb
jns
inc
mov
pusha
adc
inc
xor
in
test
sbb
scas
or
sub
in
mov
sbb
inc
jno
mov
shr
scas
xor
push
adc
mov
mov
jmp
mov
(bad)
popa
retf
mov
in
imul
inc
test
push
dec
adc
ror
mov
outs
or
and
pop
dec
add
pop
mov
mov
test
rol
inc
dec
dec
sbb
mov
jecxz
push
mov
xchg
das
jle
sbb
fs
loopne
mov
sub
pop
fsubr
jbe
aaa
pop
test
add
rcr
or
and
cli
inc
push
ret
int
pop
jmp
push
fistp
pop
or
dec
or
inc
imul
lods
xchg
push
adc
pop
sar
mov
inc
imul
popa
xor
mov
or
test
inc
add
(bad)
adc
fwait
adc
mov
enter
pop
call
jmp
cmc
shl
adc
and
shl
movs
pop
add
or
nop
enter
push
or
in
nop
daa
add
cmc
add
mov
xor
inc
sar
mov
dec
mov
mov
mov
leave
cmps
dec
or
mov
or
inc
inc
out
jo
popa
inc
mov
adc
mov
and
pop
inc
out
rcl
or
push
push
dec
out
stc
cmp
into
gs
add
fild
nop
and
cmp
inc
dec
adc
out
les
push
xor
pop
adc
out
add
adc
aas
adc
fs
push
inc
and
invd
and
sbb
mov
call
xchg
mov
mov
mov
scas
or
pusha
dec
xchg
mov
or
out
es
sbb
jbe
xchg
xchg
mov
lahf
dec
and
inc
add
jmp
push
fwait
xchg
xchg
and
add
jae
push
gs
movs
inc
leave
xchg
movs
sub
inc
inc
(bad)
jmp
(bad)
fcmovnbe
and
push
push
cmp
add
pop
adc
pop
int3
lds
ins
jne
dec
pop
and
or
add
push
add
loope
mov
and
push
push
xchg
add
bound
arpl
loope
dec
jmp
push
pop
pop
adc
mov
inc
mov
jmp
cmp
cwde
div
ja
in
pop
mov
add
mov
inc
or
add
repz
add
add
cwde
add
sbb
add
sub
mov
rcl
push
adc
or
jl
rcr
xor
mov
or
cmp
and
add
adc
inc
stc
dec
ret
mov
jge
cmp
cmp
inc
(bad)
mov
cmps
lea
retf
sbb
jnp
into
push
or
push
pop
jmp
and
add
add
(bad)
mov
push
jl
mov
add
or
lahf
or
pusha
xchg
aaa
cdq
or
aam
add
inc
mov
mov
clc
cs
jae
je
pop
mov
pushf
jg
inc
jmp
sbb
jb
adc
adc
enter
xor
pop
enter
test
cmp
jb
sbb
adc
and
jb
adc
enter
dec
mov
inc
mov
adc
adc
pop
sbb
jmp
adc
stc
clc
test
rcl
and
lds
adc
enter
sbb
xor
sbb
ror
add
ss
test
cwde
jmp
lods
lods
pusha
pop
mov
(bad)
lods
push
push
std
jne
mov
int
adc
push
mov
aaa
add
push
in
std
sbb
rcr
push
pop
and
out
adc
jmp
loop
test
xor
mov
jmp
sti
addr16
test
cmp
jo
push
push
shl
mov
sub
or
pop
enter
sbb
mov
mov
mov
cwde
dec
and
inc
outs
nop
adc
js
call
mov
pop
cwde
iret
lds
add
pusha
and
push
arpl
or
add
scas
loopne
ficom
and
pusha
aad
das
xor
xchg
and
and
dec
in
cs
pushf
and
nop
dec
call
inc
push
dec
mov
xchg
mov
and
cmp
test
cmp
xor
or
and
(bad)
mov
mov
inc
jl
je
shl
ffreep
add
mov
sub
cmp
movs
jb
loope
call
imul
pop
les
(bad)
addr16
xchg
or
int3
mov
pop
add
ror
ret
adc
aas
jbe
jns
aaa
or
or
int3
aas
mov
mov
mov
sbb
sub
ret
add
pushf
iret
adc
add
or
sbb
popf
cmps
push
xchg
cwde
cmc
cmp
push
push
pop
add
popa
mov
adc
add
jmp
or
adc
loope
push
and
loopne
movs
movs
mov
inc
adc
pop
ret
xor
add
push
dec
mov
fsubrp
sahf
pop
or
sbb
sti
dec
cmp
pop
xchg
in
cld
push
or
mov
imul
call
cmp
ret
pop
sub
sbb
add
ret
pop
adc
jnp
in
aam
mov
int3
int3
aas
inc
mov
adc
push
and
ins
mov
(bad)
mov
cmp
fidivr
test
add
adc
push
add
xor
fild
and
jp
adc
or
cmp
or
mov
das
push
mov
add
jle
outs
pop
pop
scas
mov
add
(bad)
mov
mov
push
add
lock
rcr
dec
jg
xchg
and
ret
mov
mov
or
adc
xchg
xor
add
adc
inc
add
ret
xlat
inc
mov
in
lods
or
mov
lods
or
ds
or
mov
ret
(bad)
mov
and
xchg
xor
xor
addr16
add
jne
push
mov
jge
push
inc
mov
mov
xchg
xor
sbb
push
in
push
call
stos
pop
mov
lea
pop
pusha
pop
jmp
mov
dec
test
or
or
pop
add
and
mov
push
add
dec
add
lods
mov
rcl
push
add
xchg
pop
cmp
test
adc
je
adc
mov
dec
cmp
xor
aas
dec
and
mov
repz
loopne
add
sub
xchg
pop
lods
add
js
push
add
or
jno
inc
js
ret
into
fs
push
adc
jne
fcomp
aad
push
scas
pop
sbb
push
or
sbb
fcmovnbe
rol
lock
or
popa
inc
adc
add
jo
loope
mov
push
addr16
out
sar
nop
les
inc
sahf
inc
mov
rol
fidivr
stos
xor
into
(bad)
push
hlt
ins
add
cld
sub
xchg
and
cmp
clc
inc
pop
pop
fisub
lock
inc
pop
or
pusha
shl
and
int3
xor
jmp
stos
dec
fiadd
push
cwde
cmp
gs
in
imul
sbb
or
add
xchg
mov
dec
addr16
dec
inc
test
imul
or
sbb
push
mov
adc
fadd
xor
jb
lahf
fwait
shl
(bad)
jmp
lahf
add
adc
jae
lea
adc
push
(bad)
(bad)
fwait
sar
push
push
jmp
jmp
xor
add
lahf
adc
frstor
jae
cwde
ds
shl
mov
jl
ds
mov
mov
push
pop
imul
and
outs
and
(bad)
(bad)
adc
pop
pushf
add
je
push
add
mov
sar
adc
sub
pop
mov
enter
sar
and
xor
aas
push
fisttp
dec
sbb
cmc
cmp
mov
jl
sub
cmp
dec
cmc
add
cmc
push
push
stos
lods
test
lods
pavgb
in
retf
fst
pop
ret
dec
inc
fistp
sbb
test
add
xchg
jmp
mov
mov
mov
clc
sub
pop
sub
and
stos
add
and
xor
repnz
cmp
xor
and
push
cli
pop
adc
mov
jne
cmps
sbb
xchg
in
sbb
sti
lods
add
out
add
in
and
rcr
sbb
sub
mov
fsub
adc
add
fcomp
sbb
(bad)
in
and
push
mov
sbb
push
leave
sub
mov
stos
loop
add
fild
inc
jo
cmp
mov
adc
adc
dec
mov
jbe
adc
or
lock
add
jne
push
add
cld
cwde
jmp
daa
jmp
jne
sub
cwde
repnz
rcr
cmp
pop
dec
pop
lea
mov
cmp
fistp
push
jl
cmp
push
add
cmp
and
movzx
or
and
dec
pop
sbb
mul
cmc
jge
inc
pop
push
lods
ja
jmp
dec
lock
sbb
sar
cs
xchg
sub
cwde
nop
cmps
pop
mov
cld
add
dec
int3
int3
pop
retf
sub
popf
and
push
lock
aam
jo
cmp
rol
jmp
push
or
inc
or
ins
(bad)
jns
pop
sub
adc
add
add
and
push
scas
add
push
or
hlt
clc
clc
sbb
adc
loopne
cmc
int3
mov
lahf
or
push
push
inc
push
add
jno
hlt
leave
outs
add
ror
push
fisttp
adc
ret
and
mov
gs
and
mov
or
scas
xor
jle
jmp
sub
les
inc
shl
add
lea
push
loop
add
pop
and
fwait
pop
inc
jmp
call
clc
jnp
shl
or
bound
aam
push
inc
inc
adc
add
loop
dec
or
jo
test
pop
mov
pop
or
loop
das
sti
rcr
dec
jae
in
add
or
shr
add
or
add
nop
popa
retf
loopne
rol
jo
sar
iret
adc
pop
lock
loop
adc
out
mov
test
xchg
or
mov
jecxz
dec
addr16
hlt
push
lock
sbb
mov
(bad)
push
add
pop
rol
loopne
cmp
push
jno
push
jge
add
and
and
xchg
shr
jae
fist
adc
add
inc
or
(bad)
(bad)
pop
jo
add
or
fldenv
cmp
and
add
or
daa
iret
or
xchg
sbb
and
or
push
lahf
ds
korw
xchg
cld
add
and
jl
push
cld
adc
inc
jl
jecxz
cmps
ss
mov
bound
jg
add
dec
add
in
rol
sbb
lods
and
add
mov
popa
inc
add
rcl
or
and
add
mov
and
mov
int3
hlt
jge
add
dec
inc
add
jo
stos
inc
add
push
sub
mov
pop
push
dec
jge
mov
adc
mov
sub
push
div
pop
mov
cmp
mov
or
cmps
jns
mov
jmp
enter
imul
sub
dec
add
data16
enter
pop
push
int3
loope
sbb
cmp
das
ror
sub
aad
inc
cmp
int3
es
xchg
les
(bad)
fmul
mov
adc
add
and
add
inc
mov
mov
push
mov
jle
loope
sub
inc
xchg
push
jg
and
fist
xor
xchg
test
pop
idiv
and
push
cmp
ret
or
aas
aam
clc
mov
jmp
jecxz
and
sbb
mov
lahf
add
lahf
adc
mov
push
adc
mov
shr
xchg
fidiv
push
lods
call
shr
fild
mov
aas
pop
pushf
or
ret
or
loopne
inc
int
jp
aas
push
scas
push
mov
(bad)
(bad)
fmulp
cmps
sahf
inc
mov
xor
inc
adc
sub
and
loopne
push
mov
jo
out
ret
dec
jle
mov
lods
pop
add
or
sub
aam
or
cmp
add
adc
fdiv
out
test
cmps
mov
sub
add
movs
xchg
dec
test
inc
cmp
mov
inc
xchg
fild
push
sbb
(bad)
lds
cmc
jg
scas
cwde
jno
adc
repnz
aam
mov
popf
pop
pop
stc
push
add
adc
sbb
pusha
pop
fild
add
adc
xor
and
dec
pop
adc
das
dec
inc
mov
xchg
push
icebp
sub
sub
ror
jnp
add
and
dec
mov
push
mov
dec
inc
add
idiv
sub
or
jmp
cs
and
inc
jp
add
das
cwde
js
call
xor
xor
mov
aam
mov
pusha
sub
add
inc
adc
ins
mov
adc
push
jl
xor
lods
ins
adc
mov
sbb
mov
sub
pusha
daa
sub
or
fistp
mov
mov
mov
test
adc
dec
mov
jo
push
sub
ret
fs
(bad)
ja
retf
xlat
mov
dec
push
mov
mov
inc
and
push
and
sbb
push
ror
add
jp
pop
xor
sbb
dec
cmp
add
jl
push
inc
xor
icebp
mov
fld
push
iret
push
sub
inc
sbb
je
and
push
cmp
pop
fcmovu
shl
data16
jg
inc
adc
add
pop
pop
sub
mov
jno
push
not
xchg
imul
ficom
mov
pop
inc
or
cmp
pop
jg
jns
sbb
cmps
push
retf
push
lds
call
or
jmp
mov
xchg
lods
jmp
aas
adc
inc
sub
shl
jae
and
mov
pop
inc
push
rcl
test
and
xor
pop
movs
xchg
mov
adc
push
sar
in
add
ins
sbb
add
mov
test
dec
popf
cld
in
fist
push
leave
(bad)
adc
test
test
inc
sub
pop
sub
test
pop
sbb
mov
jl
popf
je
mov
push
mov
or
ret
mov
mov
inc
punpcklbw
adc
cmp
or
cmps
xchg
in
push
xor
inc
sub
addps
push
inc
and
cmp
adc
je
jge
icebp
ins
adc
pop
push
aas
sbb
inc
pop
xor
pusha
cmc
(bad)
mov
mov
jb
lods
adc
adc
rcl
fadd
jmp
sub
lahf
loopne
add
lahf
add
jne
add
std
or
mov
inc
jnp
mov
push
push
add
or
dec
pop
ins
adc
fistp
test
scas
out
push
adc
jmp
jmp
and
push
mov
dec
out
sbb
movs
inc
test
inc
clc
loope
add
std
pop
adc
dec
pop
cld
mov
pop
in
(bad)
pop
popa
dec
dec
cmp
cli
pop
fwait
shl
loopne
sbb
dec
adc
rcl
cmp
add
dec
mov
add
cmc
lock
add
add
mov
outs
bound
pusha
push
jmp
scas
int3
fisubr
mov
mov
mov
push
mov
mov
es
outs
or
dec
adc
mov
icebp
jecxz
sbb
add
sub
jbe
(bad)
inc
jae
push
ja
and
out
test
mov
sbb
jbe
ret
daa
ror
sbb
sub
cmps
xor
pusha
jo
adc
je
test
or
fwait
test
mov
ins
push
popa
and
xor
test
dec
and
or
fist
add
push
std
xor
push
xor
dec
int3
inc
call
pop
fisttp
add
push
lahf
in
mov
or
xor
and
std
ret
and
je
dec
lock
sbb
pop
out
nop
lock
xor
adc
loope
or
inc
sar
mov
pop
cli
mov
adc
imul
jle
xchg
loopne
jne
dec
sub
call
add
in
cmp
cmp
sbb
dec
shr
adc
cld
or
push
mov
aam
sub
jne
cmp
add
popa
or
cmp
inc
or
movs
pop
add
xlat
xchg
mov
das
cs
mov
(bad)
pop
dec
(bad)
or
aas
clc
outs
inc
bswap
ins
adc
inc
movs
aad
add
push
push
add
pop
dec
pusha
adc
mov
mov
sub
in
inc
mov
and
cmp
xor
mov
add
push
je
and
lods
adc
mov
cmp
add
push
les
mov
or
jmp
jg
pop
and
(bad)
int3
mov
mov
ins
xchg
mov
sbb
mov
fdiv
(bad)
sar
adc
push
cld
pop
fsubr
dec
cmp
or
inc
push
out
lock
adc
cmp
adc
loop
jbe
adc
or
xor
or
jb
int
pop
and
mov
adc
xor
inc
loope
in
(bad)
scas
push
inc
mov
sbb
loopne
stos
mov
jl
push
mov
fwait
jl
cmp
lock
lods
and
add
and
icebp
sub
adc
xor
push
add
idiv
or
jmp
pop
add
sub
je
sub
pushf
push
sub
call
inc
shl
fwait
push
add
ret
(bad)
mov
cmp
test
cwde
push
mov
dec
pop
xor
inc
cld
xor
push
sub
xchg
dec
ror
(bad)
or
inc
leave
cmp
stos
shl
or
lods
xchg
and
and
jno
or
pop
jb
loope
bound
push
ja
add
jnp
inc
and
leave
ins
dec
aas
sub
(bad)
gs
xor
(bad)
pop
js
push
inc
or
les
pop
pshufw
adc
xchg
xor
xchg
jne
ins
dec
push
sbb
cmp
jp
push
jnp
or
inc
hlt
and
add
loopne
and
aad
mov
call
mov
fs
inc
jecxz
or
add
sbb
adc
sti
or
stos
hlt
inc
rol
leave
add
in
test
sti
inc
in
adc
pusha
mov
or
mov
movups
lods
mov
xor
(bad)
jnp
dec
dec
mov
pop
ins
pop
mov
xor
add
add
sti
adc
call
cmp
sbb
pop
leave
push
dec
iret
aam
inc
mov
sub
mul
push
clc
push
scas
mov
fadd
inc
ds
push
lahf
sub
add
sub
and
scas
mov
add
fst
sub
in
or
pop
arpl
and
cmp
(bad)
(bad)
or
jae
mov
rcl
pop
clc
jo
jno
xor
or
inc
adc
add
xchg
lock
sub
or
cmp
add
cmps
ins
xchg
push
inc
mov
adc
add
pop
mov
stos
sar
fadd
add
icebp
lods
fild
sub
pop
clc
push
cmp
ds
xchg
or
mov
int3
ret
push
lods
mov
mov
mov
in
push
bound
adc
js
dec
jge
gs
dec
pop
adc
(bad)
xor
popf
and
(bad)
(bad)
inc
sub
mov
repnz
repz
cs
mov
sub
arpl
mov
and
sbb
inc
adc
arpl
jb
add
shl
(bad)
or
push
or
xchg
and
fwait
fwait
fs
mov
or
adc
and
sub
mov
push
je
add
jmp
jne
push
and
add
jl
cld
cld
pop
pop
mov
cld
stc
mov
pop
xlat
or
retf
lds
test
add
in
lock
ret
jnp
daa
iret
adc
adc
sahf
cld
or
adc
int
inc
setl
mov
fist
cs
xor
(bad)
sbb
xor
sub
(bad)
mov
jecxz
cmp
std
std
mov
sbb
es
pushf
add
mov
mov
inc
aad
jmp
jmp
jmp
jmp
icebp
jae
push
packssdw
loope
inc
mov
cmp
loope
cmp
adc
in
mov
mov
popf
mov
imul
aam
ins
lock
test
xor
and
and
out
add
aas
adc
and
pop
pop
int3
int3
mov
jo
lahf
sbb
xchg
sub
jne
pop
jne
jl
imul
mov
add
adc
dec
pop
ret
cmps
sbb
cmp
adc
push
dec
adc
ins
mov
(bad)
jp
sbb
cld
or
dec
jns
das
add
aam
pop
xor
imul
xchg
test
jg
or
int3
or
cmps
cmc
push
add
mov
not
add
jne
or
inc
or
imul
leave
mov
into
and
neg
lea
test
hlt
pop
xor
sub
clc
dec
std
dec
call
add
out
shr
ret
push
add
je
aad
or
jp
xchg
adc
(bad)
ret
push
out
dec
and
popf
xor
add
and
push
(bad)
lock
rcr
or
jp
jb
js
sub
pop
xchg
xor
test
test
movs
inc
rol
ret
retf
cli
mov
jl
popa
pop
sbb
(bad)
or
das
or
inc
lea
mov
test
add
mov
or
or
mov
imul
and
xchg
pop
add
inc
les
xchg
int
or
shl
imul
and
pop
hlt
dec
jmp
or
aas
rcl
mov
or
or
mov
sub
xor
push
jecxz
(bad)
dec
or
pop
cmp
mov
aam
add
pop
and
ins
dec
mov
mov
lods
jg
mov
mov
int
je
sbb
or
iret
adc
jmp
add
add
fstp
mov
cmp
sti
add
cdq
inc
inc
loopne
cmc
and
xlat
dec
rol
mov
jmp
add
hlt
jl
push
cmp
push
ret
push
(bad)
shl
cmp
(bad)
pusha
inc
inc
arpl
add
pop
and
das
in
lods
and
mov
or
mov
mov
les
mov
inc
leave
push
jo
inc
push
or
call
sub
icebp
push
inc
push
dec
aas
lea
xor
sbb
push
shr
retf
or
pop
xchg
mov
mov
arpl
ins
inc
and
sahf
mov
aas
ror
mov
aas
bound
ds
sysenter
jl
inc
sbb
bound
xchg
sti
into
mov
adc
fsubr
imul
or
aad
lahf
pop
or
xchg
mov
fs
jecxz
dec
add
hlt
inc
and
nop
cld
or
inc
leave
test
lods
push
and
cmp
lds
and
cmp
dec
pop
pusha
std
push
or
push
add
add
popf
or
aaa
arpl
push
xlat
add
fisttp
or
cld
and
sub
popf
jmp
push
xor
rcl
fild
jge
and
fcmovnu
adc
icebp
or
push
inc
push
adc
or
or
inc
adc
sub
movs
sub
aad
xor
xor
bound
in
scas
inc
xor
cmp
dec
jmp
add
neg
(bad)
loopne
inc
fild
xchg
adc
test
in
ret
aas
sub
jbe
aas
and
clc
and
xlat
or
sub
or
mov
inc
add
bound
dec
add
or
cmp
jge
dec
sub
mov
add
icebp
rol
sub
and
fisttp
add
lock
mov
inc
jae
lds
push
sub
test
fild
pusha
lea
inc
mov
inc
ret
fild
rol
add
cmp
pop
mov
pop
sbb
inc
dec
rol
lock
mov
inc
xchg
mov
popa
icebp
push
or
mov
inc
cmp
or
add
add
mov
add
add
dec
in
sbb
add
or
add
sbb
inc
mov
add
lds
adc
sti
add
pushf
hlt
jb
aaa
jbe
or
mov
inc
aas
cmp
mov
inc
mov
mov
mov
pop
push
or
cmps
inc
xchg
rcr
or
scas
add
mov
jmp
rcl
xor
xor
and
enter
iret
sbb
mov
mov
adc
dec
aad
jg
adc
aas
sbb
cmps
adc
and
fadd
mov
das
cld
dec
push
or
adc
push
sub
pop
add
movs
cmp
lahf
call
ror
scas
xor
and
push
mov
or
sbb
ss
fild
(bad)
mov
daa
dec
adc
add
cld
(bad)
aas
add
aam
mov
sub
add
add
addr16
or
dec
cld
adc
adc
jecxz
or
ret
mov
pop
and
sub
or
gs
jp
and
adc
add
es
jg
add
fisttp
cwde
mov
xchg
mov
test
push
ror
ret
in
push
gs
and
aas
sbb
pop
and
push
int3
pop
push
or
aas
xchg
add
or
adc
dec
out
fs
aas
xor
or
adc
lahf
es
pop
pop
ins
pop
cmp
dec
sbb
push
(bad)
or
popf
mov
adc
cmps
and
pop
mov
mov
xchg
cli
adc
(bad)
pop
inc
or
or
fld
push
cli
(bad)
in
inc
adc
adc
add
cs
jmp
movs
sub
sbb
aam
lock
mov
sbb
xor
pop
push
push
or
movs
sub
cmp
in
add
lods
push
inc
jb
sbb
adc
shl
arpl
aam
fwait
push
int3
pop
mov
ins
enter
adc
pop
xor
xchg
mov
jmp
(bad)
movlps
(bad)
popf
cwde
cld
es
add
inc
sub
inc
adc
inc
mov
test
mov
sbb
dec
call
test
retf
adc
jae
es
jmp
pop
shl
sbb
jg
adc
sub
or
fstp
add
push
sub
xchg
icebp
mov
and
push
lds
cmp
jmp
or
fdivr
add
jb
push
lahf
loopne
pop
repz
push
jb
push
call
or
mov
dec
dec
ror
pusha
add
dec
dec
loope
sbb
mov
push
ret
add
xor
inc
adc
idiv
pop
inc
sub
data16
add
adc
outs
push
outs
inc
jecxz
xchg
jp
add
push
xor
pop
and
pop
sbb
or
push
fst
mov
push
mov
inc
cmc
mov
dec
xor
and
sub
jns
mov
dec
push
jb
jmp
add
fild
stos
push
jge
fsubr
jmp
add
adc
add
adc
cld
push
sub
jge
xchg
add
nop
fcomp
sti
(bad)
pusha
(bad)
cmp
ss
fadd
es
jmp
add
mov
cmp
sbb
push
retf
sbb
cmp
test
pushf
cld
xor
push
pop
push
clc
push
call
out
in
sbb
add
mov
mov
adc
pushf
pop
push
sub
cvttps2pi
inc
pusha
fwait
rcr
sub
sub
xor
enter
sub
jecxz
and
push
or
in
sub
mov
les
inc
dec
call
jl
add
pop
add
and
add
or
sbb
push
inc
xchg
add
fwait
(bad)
clc
dec
sbb
imul
add
(bad)
cld
add
pop
and
add
push
inc
mov
icebp
ret
dec
adc
test
ret
aas
clc
push
jne
add
retf
mov
xor
clc
data16
sub
sub
dec
(bad)
jb
jecxz
ret
and
stos
push
bound
popa
and
test
push
pop
xchg
sub
mov
shl
clc
push
add
in
jns
fisttp
sti
sbb
push
test
and
xchg
mov
pop
or
jne
loopne
inc
sbb
movs
dec
cmp
test
mov
lock
cmp
mov
ror
add
or
jecxz
js
inc
jmp
jnp
xor
or
not
clc
push
shl
or
inc
xchg
mov
mov
push
jbe
ins
hlt
cmp
inc
lock
loop
mov
popf
int3
jmp
jg
ror
pop
or
add
push
push
enter
xchg
sbb
push
out
daa
ret
shl
or
jmp
fiadd
or
mov
aas
test
and
int3
stos
pop
dec
frstor
aas
or
scas
add
outs
dec
mov
scas
jmp
push
push
adc
jge
add
mov
mov
dec
imul
inc
mov
shr
cwde
leave
cmp
loop
mov
std
mov
mov
test
mov
mov
stos
shr
xchg
cmp
jae
js
dec
add
dec
pop
xchg
inc
mov
pop
pop
push
in
hlt
add
or
lds
xor
bound
mov
push
push
xor
pop
dec
and
jns
or
sub
(bad)
test
xchg
fwait
ds
xor
sub
cmp
inc
daa
shr
stos
dec
jne
and
hlt
loope
add
test
jns
outs
arpl
loop
fwait
lods
ja
dec
fadd
mov
xchg
mov
por
push
aaa
jmp
xor
dec
push
mov
cmp
adc
add
and
stos
in
and
aam
sbb
sub
stos
lock
add
add
aas
push
or
test
or
sbb
fadd
bound
dec
adc
or
rcl
repnz
add
cmp
and
cwde
inc
repnz
add
or
or
arpl
jbe
or
mov
and
je
fwait
mov
jg
popa
jge
inc
sub
ret
jmp
and
dec
shl
mov
shl
rol
sbb
dec
xchg
call
xchg
enter
aam
imul
hlt
jmp
dec
mov
or
repz
mov
sbb
fdiv
push
add
js
or
stos
rcl
cli
es
(bad)
jmp
and
xchg
dec
sub
les
and
push
and
je
inc
mov
je
jmp
jmp
mov
jl
xor
call
jno
push
aaa
pop
mov
add
les
fs
enter
add
mov
(bad)
hlt
push
enter
and
das
sbb
mul
mov
in
sub
pushw
call
pop
imul
dec
(bad)
sub
add
add
push
retf
push
inc
inc
inc
sub
lock
into
hlt
(bad)
cmps
jmp
stc
aaa
rcl
fadd
or
and
les
push
dec
pusha
xor
(bad)
or
data16
pop
aaa
ja
scas
or
enter
push
xchg
or
sub
sbb
mov
or
or
or
jno
mov
in
loop
dec
lock
cmp
aas
jns
cs
or
dec
fisttp
or
sub
xor
mov
jo
jno
sub
push
pusha
lea
sar
sbb
adc
es
cwde
xchg
add
(bad)
in
mov
push
imul
add
pop
fisubr
mov
fist
adc
cmps
pop
pop
add
xchg
int3
push
inc
or
inc
dec
movs
aas
inc
aas
leave
add
sbb
jecxz
fdivr
and
adc
test
out
or
mov
cmps
pop
jecxz
push
in
or
mov
dec
dec
mov
jl
lock
mov
add
test
test
test
mov
outs
aam
aam
aam
aas
dec
fwait
xchg
jmp
test
icebp
jo
mov
pop
dec
or
outs
and
cwde
cmp
pusha
sub
data16
xchg
in
jl
loopne
shr
push
out
xchg
xchg
xor
adc
jle
aam
push
jg
push
xlat
add
pop
or
jmp
push
inc
push
inc
or
and
dec
or
and
adc
and
and
ja
adc
pop
stos
xchg
cmc
or
ins
and
sbb
(bad)
in
mov
mov
jae
in
sbb
lock
rcr
add
and
pop
inc
in
arpl
mov
xchg
in
jno
mov
fisub
jmp
xchg
stc
cmp
mov
jg
push
add
jmp
add
in
add
mov
or
and
call
add
mov
dec
push
jmp
jns
and
clc
loopne
or
dec
jp
lock
xchg
mov
add
inc
dec
jns
ins
mov
jge
jg
adc
jg
stc
xchg
sub
cmps
jg
dec
xor
cmp
cmp
(bad)
add
mov
mov
sbb
sbb
mov
cmp
scas
in
in
push
and
or
mov
clc
xor
pop
daa
sub
lock
mov
adc
fsubr
jmp
pop
in
add
pop
mov
(bad)
daa
mov
push
jmp
adc
cmp
xor
inc
mov
inc
mov
xchg
add
fst
mov
shr
push
scas
aas
and
fsubr
sahf
movs
adc
cmp
add
mov
jge
cmps
fs
jno
mov
cs
jle
lock
push
daa
dec
aaa
lods
push
xor
outs
inc
mov
inc
fsubr
pushf
push
inc
jmp
inc
loopne
loopne
adc
xchg
xor
mov
add
and
call
adc
and
xchg
mov
lea
nop
outs
in
movs
in
mov
leave
mov
ja
xor
inc
inc
call
fucomi
bound
icebp
push
inc
sub
and
push
test
push
loope
sub
push
dec
and
nop
mov
cli
add
test
hlt
outs
mov
dec
push
cmp
ss
sbb
mov
ja
adc
into
adc
push
hlt
fwait
push
popa
adc
fwait
adc
mov
sbb
pop
and
xchg
hlt
ja
pop
xchg
and
dec
jecxz
(bad)
or
add
pop
sbb
pop
inc
push
ins
cld
fild
inc
test
sbb
push
jae
int3
push
inc
inc
ret
jg
xor
lock
mov
jbe
popa
test
cdq
sub
sbb
cmp
inc
cmps
ret
add
inc
dec
in
push
clc
movs
mov
ja
mov
inc
push
cmp
mov
inc
mov
mov
pop
or
mov
sbb
xor
lock
test
ret
pop
popa
push
inc
test
inc
mov
stos
adc
in
pop
and
scas
shl
pop
nop
fdiv
(bad)
pop
push
xor
mov
sbb
pop
xor
add
inc
add
adc
daa
movs
adc
and
push
adc
pop
adc
inc
cmp
add
add
push
mov
pop
mov
and
js
push
push
mov
ins
mov
sbb
out
mov
or
inc
cmp
nop
dec
or
pop
ret
mov
lods
bound
or
jge
inc
add
adc
jne
mov
cmp
and
pop
sub
adc
xor
shl
adc
mov
mov
into
loope
je
xor
mov
lods
add
mov
add
mov
jae
sbb
rol
mul
mov
push
(bad)
aas
or
push
pop
mov
sbb
jo
stc
xchg
and
inc
call
or
add
sbb
jo
or
lahf
adc
inc
cmp
add
jmp
das
adc
clc
pop
fld
push
jne
sbb
xor
cmp
pop
or
push
fstp
call
mov
call
clc
lea
inc
je
sub
add
xchg
mov
stos
or
test
mov
ja
(bad)
and
test
sub
cli
add
or
or
test
dec
repz
or
call
lahf
cmp
or
sbb
adc
rol
imul
adc
jmp
adc
mov
sub
int3
add
pop
icebp
adc
icebp
push
xor
in
xor
xchg
out
mov
or
add
push
cmp
adc
sbb
jmp
jmp
sbb
mov
loopne
mov
cmc
add
std
imul
cmp
jne
dec
push
pop
jne
es
ror
mov
mov
mov
sub
hlt
movs
and
loopne
leave
xchg
mov
xor
cmc
or
sar
jmp
mov
push
or
inc
or
popf
clc
xchg
fidivr
mov
xchg
iret
sub
sub
push
fsub
outs
push
inc
push
add
or
enter
and
ret
mov
mov
xchg
dec
in
add
test
sub
in
retf
inc
sbb
test
les
rol
jb
pop
add
rcl
and
cmp
or
rol
push
int3
aaa
push
sub
push
pop
pcmpgtb
ffreep
cmp
lods
inc
or
sbb
adc
outs
adc
add
push
or
in
ins
rol
fistp
or
pop
test
sub
(bad)
adc
shl
sbb
dec
mov
inc
clc
stos
cs
mov
and
nop
imul
loopne
lds
shl
push
push
nop
call
aaa
in
shl
shl
pop
push
or
mov
loopne
aam
test
movs
aam
xor
add
pop
cmp
mov
movs
push
rcl
xchg
sbb
jbe
ret
sub
mov
mov
movs
mov
dec
sbb
adc
movs
inc
ret
xchg
fsub
sub
cmp
add
hlt
push
das
stos
xchg
in
mov
inc
das
jmp
mov
test
push
inc
push
enter
mov
je
mov
mov
sub
mov
ret
(bad)
push
iret
leave
add
jmp
inc
aas
push
jo
or
sbb
and
inc
popf
xchg
test
je
dec
rcr
nop
test
inc
enter
jge
mov
dec
mov
mov
inc
mov
stc
mov
jmp
jmp
loopne
inc
hlt
aas
push
xchg
inc
popf
lahf
mov
ror
dec
jmp
adc
push
ror
sub
dec
cmp
add
ins
hlt
cli
push
adc
lock
cli
push
aaa
jmp
jae
jge
push
fild
sbb
push
div
rcr
in
add
pop
jb
and
aam
xor
daa
xchg
mov
or
sti
pop
jecxz
lods
clc
push
je
enter
push
or
dec
push
push
add
cmp
inc
push
and
sbb
xchg
scas
shl
push
xlat
jo
pop
mov
mov
pop
sub
mov
push
arpl
mov
sbb
test
sub
adc
aas
ds
jg
mov
std
push
cmp
ret
inc
cmps
in
or
ret
clc
mov
push
mov
inc
sub
mov
push
and
mov
das
xor
mov
lea
mov
xchg
and
pop
hlt
mov
cmps
in
sub
ins
and
xor
pop
mov
enter
sub
ror
add
fsub
into
idiv
fsub
add
fdivr
mov
jb
int
scas
adc
pop
data16
cli
out
cmp
mov
add
dec
inc
jbe
push
inc
inc
jp
aaa
inc
outs
(bad)
int
ja
sub
jnp
and
pop
jb
and
xor
and
adc
jp
ds
adc
inc
and
mov
pop
out
stos
inc
nop
inc
cmp
adc
add
add
dec
inc
cmc
sbb
cmp
int
pop
and
jo
fcmovne
mov
and
nop
pop
js
stos
fidiv
addr16
mov
push
out
dec
adc
ret
loopne
sub
inc
adc
inc
ret
inc
and
(bad)
mov
lock
fs
lods
out
cld
les
sbb
xchg
and
jle
inc
dec
adc
ds
sti
gs
push
xchg
mov
movs
stos
shr
sub
sub
pusha
adc
xchg
add
je
fcomp
dec
out
stc
mov
cld
sub
dec
xor
cmp
add
rcl
push
call
push
push
dec
or
mov
jae
out
xchg
xor
lods
mov
or
or
or
or
inc
test
aad
lock
pop
or
test
adc
lods
aas
addr16
les
pushf
pop
movs
xor
aad
shl
push
test
cmp
cld
sahf
pop
add
or
or
test
daa
(bad)
mov
cmp
rcl
xchg
scas
inc
lds
mov
jg
push
pop
test
xor
add
push
mov
xor
cwde
adc
sti
or
mov
fucomp
cmp
jne
scas
ja
jbe
retf
loopne
mov
xchg
jnp
cmp
xchg
nop
fist
mov
adc
cmp
xchg
xor
loope
and
inc
popa
lahf
or
dec
pop
aad
(bad)
cmp
pop
or
cmp
cmps
xor
mov
pop
nop
ins
or
or
(bad)
jle
enter
sub
or
inc
inc
mov
adc
nop
add
ror
jns
fs
icebp
mov
mov
and
or
sti
mov
mov
aam
jae
mov
mov
(bad)
dec
data16
jae
push
fcom
ficom
or
adc
dec
jge
adc
push
movsx
dec
retf
into
mov
call
push
or
or
rcl
or
push
cmps
cmc
add
mov
sub
iret
mov
and
or
push
les
hlt
xchg
test
sbb
add
push
or
mov
xchg
loopne
ret
call
pop
and
push
out
jbe
mov
jle
hlt
jle
add
mov
sbb
adc
add
imul
sub
xor
add
adc
mov
mov
mov
xlat
sub
pop
ins
inc
or
(bad)
sbb
in
test
or
sahf
add
mov
xor
inc
lahf
and
xor
lea
dec
adc
icebp
fidivr
inc
ins
adc
imul
jbe
and
and
clc
(bad)
enter
test
sbb
mov
sbb
test
shl
ins
fist
out
loopne
aas
jmp
xchg
add
pop
dec
dec
mov
xchg
add
dec
add
aaa
test
into
adc
and
(bad)
call
enter
adc
(bad)
cli
mov
jbe
lods
movlps
dec
fcmovu
rcr
jmp
enter
adc
ror
rol
pusha
loopne
inc
push
mov
xchg
mov
ror
mov
dec
push
mov
and
xchg
cmc
jne
xchg
cld
adc
mov
mov
push
inc
ins
or
or
scas
jmp
pop
cmp
jne
jmp
loopne
dec
and
dec
push
popf
or
xchg
xchg
adc
fisttp
jo
test
sub
mov
lea
add
xor
add
xchg
push
stos
xchg
push
push
dec
leave
and
cld
cwde
in
jmp
xor
jne
xor
add
and
sbb
or
stos
jle
cld
add
xor
lea
and
movs
lock
dec
mov
xchg
adc
or
pushf
rcl
(bad)
add
xor
bound
(bad)
and
sbb
cli
ja
or
loopne
push
sbb
test
loopne
or
fdivp
mov
sti
xchg
xchg
cs
sar
out
(bad)
cmp
push
outs
bound
mov
pop
dec
jmp
xchg
xchg
popa
xchg
sub
cmp
fidivr
sbb
mov
mov
add
popa
jmp
mov
jl
sar
mov
push
mov
ss
and
dec
and
or
add
mov
test
dec
(bad)
and
jmp
jmp
ins
rol
clc
jb
add
and
sub
sub
inc
loope
xlat
sub
dec
popa
enter
aas
inc
cmovs
movs
add
jl
lods
sbb
adc
push
xor
xchg
push
movs
das
inc
sbb
cdq
mov
jmp
test
ja
adc
sahf
sbb
and
and
and
sbb
adc
inc
sbb
jmp
psraw
mov
out
inc
lahf
add
sbb
arpl
inc
and
mov
mov
inc
adc
sub
xchg
mov
cmp
add
ds
mov
inc
push
stos
fisttp
pop
adc
sub
mov
js
fisttp
fistp
sbb
add
mov
jp
psrlq
mov
or
mov
test
mov
in
push
and
xor
gs
loope
mov
es
sbb
mov
inc
xor
lea
out
fldcw
jmp
add
shl
adc
or
mov
push
fisttp
mov
loopne
pop
hlt
aas
add
xor
fisttp
mov
inc
jmp
cdq
mov
ins
mov
sbb
push
cmp
lock
push
lock
xor
fidivr
lahf
push
sub
dec
and
push
xchg
xchg
or
clc
add
pop
shr
mov
movs
push
test
ret
clc
or
push
jno
(bad)
retf
push
fidivr
push
stos
cmp
mov
mov
fadd
push
mov
and
fild
arpl
and
stos
or
and
add
adc
mov
call
ret
pop
mov
popa
pop
pop
cwde
adc
aas
(bad)
in
push
sbb
mov
sbb
sar
in
push
and
ret
dec
ficom
add
mov
aam
enter
mov
push
jae
jge
jo
mov
test
add
inc
sbb
mov
xchg
cmp
sbb
ret
xchg
push
jle
push
mov
xor
fisttp
add
ret
call
or
xchg
push
mov
scas
pop
cwde
add
test
or
xor
adc
add
jnp
(bad)
push
sbb
push
shl
shr
mov
adc
inc
ficomp
adc
mov
lea
jno
xor
dec
inc
movs
adc
int3
add
xor
pop
mov
add
jg
and
jg
mov
xchg
hlt
arpl
aas
cmc
sahf
rcl
pop
sbb
sbb
mov
inc
add
lock
mov
cmp
sahf
mov
cli
hlt
jb
inc
mov
sbb
push
push
pop
out
jne
lods
xlat
mov
xchg
mov
and
cmp
cld
movs
jb
out
add
or
sar
xchg
pushf
jmp
scas
add
mov
mov
push
dec
or
stos
pop
(bad)
xchg
fcomp
sbb
push
pusha
les
xchg
test
adc
or
movs
jb
push
adc
lea
cld
test
adc
or
xor
ret
popa
and
rcr
jno
call
sbb
adc
sbb
sub
push
pop
inc
js
add
inc
cwde
shl
xor
add
push
jbe
push
lock
mov
mov
sub
lock
push
mov
add
idiv
jb
adc
shl
leave
idiv
loopne
adc
repz
pop
xchg
sub
int
pop
loope
jae
adc
or
(bad)
push
pushf
in
dec
add
jp
daa
je
mov
add
dec
pop
call
and
pop
loop
mov
mov
cmp
aaa
dec
inc
or
pop
or
push
icebp
cmp
mov
xchg
pop
aas
pop
mul
or
stos
mov
xchg
lock
mov
cmps
retf
rol
je
mov
pop
pop
mov
inc
sub
or
dec
shl
and
pop
test
or
lods
sbb
in
loop
xor
rol
data16
call
ja
lock
push
or
jns
push
sbb
or
push
int3
movs
jg
add
push
add
and
sbb
test
pushf
mov
pop
sub
jmp
jmp
sbb
pop
jmp
jmp
push
pop
neg
inc
or
daa
pop
push
rcr
add
inc
fisubr
inc
fidivr
jmp
xchg
loopne
lahf
add
lahf
or
and
aaa
or
or
adc
pop
inc
mov
add
or
xchg
jne
xlat
jne
inc
sub
mov
jae
sub
inc
in
pop
test
push
call
stos
lods
sbb
mov
or
sub
fbld
pop
add
push
add
call
cld
pop
ret
aad
adc
mov
mov
adc
and
shl
out
sbb
cmp
mov
push
fld
fcom
or
add
mov
retf
mov
cs
mov
and
arpl
cli
cs
dec
add
dec
aam
or
rol
aam
mov
inc
leave
push
push
xlat
dec
arpl
test
mov
pop
cmp
test
add
loopne
cmp
jp
popa
mov
xor
dec
or
jle
and
cld
js
call
pop
call
mov
mov
add
xchg
push
or
pop
cmp
cmc
in
jp
outs
cmp
sub
push
fcmovbe
add
mov
lea
clc
push
pop
call
out
lock
sbb
dec
or
call
cwde
sbb
pop
loopne
mov
adc
or
aas
xlat
call
xor
cmps
or
call
fsubr
push
inc
or
sbb
rcr
call
jp
cdq
fadd
cmp
xchg
pushf
push
jo
out
cmps
push
outs
push
loopne
or
push
jecxz
dec
dec
stos
(bad)
and
jne
out
scas
mov
add
adc
mov
dec
jno
fadd
dec
add
jne
pop
jmp
or
add
mov
pop
retf
push
fld
or
inc
clc
mov
dec
and
int
push
mov
mov
in
pushf
add
or
inc
or
dec
clc
daa
ret
mov
sbb
and
adc
push
push
loop
mov
pop
adc
test
sbb
dec
pop
test
aad
dec
cld
mov
lea
pop
cmp
lods
mov
hlt
or
adc
sub
pusha
adc
rol
clc
cmps
mov
movs
daa
cld
mov
shr
xor
and
jae
inc
mov
mov
xchg
pusha
int
lea
sub
aam
lods
cs
and
(bad)
mov
push
sbb
clc
fdivr
pop
add
sbb
add
in
icebp
je
jmp
ret
inc
add
sbb
sub
add
fadd
test
(bad)
cmc
jle
adc
adc
mov
lds
add
imul
dec
pop
or
inc
popa
ja
mov
sub
mov
push
dec
fbstp
adc
push
or
push
mov
cmp
push
popa
push
popf
out
xor
jecxz
mov
mov
je
push
and
or
fist
add
sbb
fs
popa
bound
push
or
inc
add
jmp
ins
retf
adc
dec
cld
jmp
and
adc
movs
push
inc
imul
dec
pop
push
jmp
outs
and
test
movs
je
inc
pop
mov
pop
lds
mov
movs
(bad)
cmp
sar
and
sbb
and
inc
stos
jae
or
cmp
add
adc
data16
test
ins
clc
mov
in
mov
cmp
jecxz
and
repz
or
dec
add
dec
jmp
jne
dec
cmp
ss
icebp
or
rcl
mov
(bad)
mov
push
inc
add
fsub
or
mov
jmp
push
cmp
xor
xor
mov
xor
ins
xchg
adc
rcl
repz
lock
push
mov
bound
mov
push
mov
push
push
add
inc
mov
rol
xor
pop
ret
jnp
bound
and
dec
push
bnd
loop
pop
sbb
addr16
jnp
mov
or
ret
test
mov
sub
mov
(bad)
jo
mov
clc
xchg
enter
arpl
test
popf
ret
adc
aaa
mov
jl
and
inc
fldenv
shl
bound
lods
cwde
xor
xchg
push
inc
mov
add
jl
inc
jmp
push
fst
mov
pop
ror
lea
sub
mov
pusha
push
sbb
add
and
dec
cmp
sbb
cmps
in
popf
push
pushf
add
lds
mov
mov
stos
pop
cdq
mov
in
mov
les
add
cmps
and
popa
fmul
lock
push
add
inc
aas
pop
les
inc
mov
in
rol
out
repz
jbe
and
sub
adc
sbb
sti
pop
mov
test
and
imul
mov
adc
loop
test
or
dec
mov
sar
ss
pop
(bad)
sbb
jo
jno
inc
adc
call
sbb
cs
imul
ret
pop
mov
ret
and
or
cs
mov
test
enter
dec
sbb
cmp
hlt
push
inc
and
mov
rcl
fnstenv
cmps
enter
shr
mov
xchg
loope
mov
ins
jo
mov
adc
xor
daa
sbb
shr
les
pusha
imul
leave
jl
ins
or
xor
loopne
das
or
inc
daa
loope
std
sbb
loope
add
inc
or
cmp
ins
movs
dec
and
and
loop
dec
adc
ror
pop
or
ins
loopne
aas
pop
jg
call
or
or
sub
mov
inc
and
rol
out
aas
sbb
add
lods
cmp
inc
fldl2t
mov
mov
push
jl
cmp
out
sbb
or
push
enter
aas
cwde
adc
mov
push
push
add
fld
fs
sbb
push
or
mov
dec
cmp
int3
fwait
lods
jmp
or
ror
icebp
fwait
mov
push
mov
nop
dec
cli
add
scas
mov
add
or
sub
sbb
ins
in
xor
outs
je
loopne
iret
and
sbb
add
scas
scas
jno
push
(bad)
rol
or
not
jl
js
or
and
jmp
inc
push
cmp
out
in
xchg
xchg
add
test
inc
enter
lock
adc
loop
and
add
push
loopne
jbe
loope
and
arpl
sbb
lock
cmp
dec
and
sbb
mov
push
retf
mov
ret
jnp
or
(bad)
pop
call
dec
add
test
jae
push
mov
inc
add
dec
add
push
inc
aaa
mov
movs
jg
jmp
push
fsub
xor
mov
push
or
xor
popa
or
add
adc
xor
push
pop
inc
mov
movs
sbb
cmp
push
adc
pusha
jbe
mov
sbb
mov
loop
inc
cdq
ffreep
push
aad
arpl
adc
jg
ins
mov
lods
sar
jp
(bad)
js
popf
push
lahf
jns
cmps
sar
add
add
fadd
adc
add
cmp
pop
cmp
pushf
mov
mov
and
mov
pop
inc
add
add
jmp
leave
fs
add
(bad)
adc
pop
mov
enter
jmp
add
ficomp
push
addr16
xchg
fistp
cmp
out
sbb
xchg
sbb
dec
push
jmp
sar
mov
fistp
or
in
or
or
xor
in
cmp
mov
imul
lea
jns
fild
push
push
push
xchg
mov
cmp
push
aaa
dec
dec
call
mov
lock
mov
aas
push
inc
clc
int
sbb
(bad)
loope
retf
add
shr
in
or
xchg
adc
add
push
mov
js
js
jne
aas
xor
cmp
add
adc
and
gs
repz
xor
(bad)
dec
push
cli
xchg
xchg
jns
and
push
xchg
fcom
mov
mov
push
iret
js
cmp
push
sub
sub
call
add
int
xchg
movs
jae
inc
add
add
inc
cmp
es
push
mov
mov
loopne
inc
mov
retf
push
xchg
jp
inc
or
mov
or
jb
sub
nop
icebp
mov
popa
jecxz
sub
push
rcr
sub
and
add
push
(bad)
mov
pop
clc
adc
xor
mov
dec
mov
call
xchg
or
sub
mov
lahf
js
adc
das
jmp
jmp
movs
test
or
out
test
pop
dec
push
adc
mov
inc
aas
dec
jecxz
adc
cmp
add
mov
add
push
mov
jmp
push
out
push
push
jle
arpl
or
jno
pop
add
add
fiadd
in
mov
mov
lea
mov
xor
or
fcmovnb
dec
pushf
pop
add
mov
mov
js
xchg
fstp
and
or
mov
nop
(bad)
mov
cld
xchg
jb
mov
pop
add
test
inc
es
inc
mov
and
jl
(bad)
je
adc
jge
inc
adc
mov
out
mov
stc
adc
fucomip
lock
xor
in
xor
dec
cmp
jl
push
xchg
ins
movs
jo
nop
jp
inc
push
jb
sar
ret
into
push
je
rol
div
cld
push
cmp
dec
lods
jb
inc
cld
push
inc
push
ja
add
mov
and
movs
mov
inc
adc
mov
or
mov
call
gs
dec
ret
mov
jne
cmp
and
or
inc
inc
xor
repnz
xor
enter
add
mov
dec
aam
add
aam
push
pop
add
or
ss
sub
push
adc
dec
sbb
mov
jp
dec
cmp
sbb
jne
add
xchg
dec
add
sbb
adc
cld
sbb
(bad)
jne
add
push
add
test
or
pop
sbb
shl
retf
push
inc
adc
and
pop
inc
test
dec
pusha
pop
adc
sub
adc
add
iret
and
xor
adc
in
adc
push
ins
inc
test
(bad)
mov
sahf
call
loope
inc
loopne
popa
aam
xchg
idiv
loopne
sbb
ffreep
mov
jecxz
mov
add
repnz
mov
mov
inc
xor
test
pushf
inc
in
in
pop
xor
jns
sbb
loope
xchg
out
xchg
adc
inc
in
test
sbb
add
jnp
in
dec
add
dec
or
xor
imul
xchg
dec
adc
or
dec
xchg
adc
pop
adc
or
addr16
add
loopne
jbe
cwde
adc
dec
sbb
orps
inc
mov
fs
enter
push
pusha
or
add
inc
stos
xor
xor
adc
mov
nop
cdq
jge
xchg
jno
add
movs
test
pop
jnp
mov
inc
xchg
sbb
inc
cwde
adc
push
mov
in
sbb
ins
fnstsw
and
pop
js
fistp
mov
fadd
lock
add
sub
bound
pop
add
loopne
push
adc
and
ror
pop
mov
cld
dec
inc
push
push
test
rol
mov
inc
(bad)
hlt
push
adc
push
adc
ret
push
rcr
xor
mov
mov
or
mov
mov
jmp
cmp
cmp
mov
mov
jb
or
and
cmp
add
movs
cmp
cmp
inc
and
xor
cmp
ror
ja
mov
pop
mov
out
pop
or
imul
and
adc
mov
push
or
aas
adc
mov
rol
jb
push
sbb
scas
hlt
push
or
sbb
lea
inc
jl
jmp
adc
mov
sbb
lahf
xor
sbb
cld
mov
push
add
and
inc
data16
cmp
add
adc
sbb
sar
bound
mov
lock
in
mov
ror
adc
call
call
xor
lock
(bad)
in
mov
inc
call
mov
sbb
push
lea
push
icebp
dec
ins
ins
lods
jae
mov
inc
lahf
sbb
mov
rcr
cmp
pop
out
mov
loope
outs
or
inc
pop
pop
pop
add
cmp
ins
cmp
pop
cmp
or
inc
ins
fcom
and
add
add
cwde
ret
cwde
jno
pop
add
xchg
lds
mov
je
retf
or
mov
aam
in
mov
nop
xchg
test
leave
mov
mov
mov
add
add
leave
in
(bad)
(bad)
enter
int3
mov
ret
test
test
sub
mov
shl
scas
add
ins
xchg
(bad)
int
cmp
lods
xor
mov
mov
jl
jl
xchg
mov
pop
pushf
movs
cmps
push
jo
mov
bound
jo
dec
xor
je
movzx
cmp
sahf
sub
lea
xchg
in
popf
pusha
movs
lods
sub
mov
mov
add
test
je
imul
dec
movs
mov
mov
leave
xor
in
mov
mov
je
jo
jo
in
inc
movs
ins
movs
or
add
jo
mov
es
mov
ret
loope
or
push
add
cmp
xor
and
arpl
sbb
push
push
and
enter
fs
rol
adc
das
call
cli
mov
shr
call
loopne
add
add
push
or
xchg
mov
pop
mov
mov
mov
inc
xor
adc
inc
sbb
cmp
das
cs
xor
sbb
es
inc
loopne
push
push
cmps
in
cmp
mov
sbb
in
and
pusha
cmp
ja
xchg
mov
dec
test
inc
mov
adc
loopne
retf
ja
dec
xchg
sbb
mov
xchg
push
or
cld
mov
aas
mov
loope
or
push
push
pop
lock
xchg
fadd
(bad)
jbe
sbb
lock
je
pop
push
div
mov
sub
inc
xchg
sub
dec
adc
push
dec
js
pushf
xor
(bad)
sar
dec
xor
jl
loope
inc
outs
cpuid
jl
mov
(bad)
pop
adc
push
dec
inc
or
inc
or
or
ins
(bad)
rol
inc
cmp
push
ud1
xchg
clc
aas
dec
outs
adc
and
push
add
pop
pop
push
aas
movs
cmp
adc
add
loopne
add
fs
push
add
and
push
sub
inc
leave
jne
ret
nop
push
or
imul
mov
sar
fild
nop
push
dec
add
mov
add
popf
mov
les
inc
and
adc
pop
das
repz
sub
jp
bswap
adc
pop
or
cmp
mov
sbb
mov
mov
add
sub
and
pop
sub
inc
or
mov
std
cmp
xchg
dec
cmp
cmp
shl
push
dec
fwait
mov
adc
or
(bad)
(bad)
aaa
jo
and
adc
push
push
mov
jle
add
push
sar
aas
and
fwait
iret
cld
cld
adc
adc
hlt
addr16
mov
xchg
pop
pushf
dec
or
add
les
mov
mov
pop
aas
cmps
clc
push
pop
xchg
movs
push
scas
scas
int
push
clc
push
clc
adc
push
push
imul
sub
add
and
sub
rcl
jno
push
je
xchg
sbb
push
mov
pop
add
(bad)
leave
ret
or
lea
jge
pushf
xacquire
div
and
ins
btc
test
ret
ffreep
xor
(bad)
jo
inc
in
inc
mov
pop
push
test
in
inc
push
clc
push
cmps
fs
add
inc
jge
lock
push
push
pop
inc
data16
bound
add
sub
mov
mov
fadd
stos
mov
ds
push
sbb
push
das
dec
clc
pop
fdiv
inc
dec
push
pop
aas
or
mov
icebp
mov
inc
add
pop
and
pop
add
sbb
add
sbb
inc
inc
or
data16
sub
(bad)
fcmovnb
in
push
push
sub
sbb
jo
xchg
adc
push
add
inc
mov
push
sub
xor
inc
mov
adc
push
iret
push
or
push
dec
imul
frstor
pusha
cmps
pop
dec
push
or
cs
mov
mov
(bad)
sub
scas
mov
pop
adc
js
cmp
add
enter
fild
adc
jecxz
add
mov
push
and
call
ins
add
in
scas
pop
mov
inc
dec
add
daa
fcom
mov
out
wbinvd
loop
pusha
xchg
adc
or
xchg
pop
fild
ins
xchg
xchg
aam
in
or
inc
jo
(bad)
dec
add
or
dec
or
mov
mov
cld
loope
push
add
xor
sub
inc
loope
xor
push
or
push
loope
cmp
loope
xor
pop
push
loope
pop
pusha
mov
mov
push
dec
inc
mov
mov
into
movs
push
xor
inc
adc
add
pop
movs
mov
adc
push
xchg
mov
(bad)
xchg
fcomp
adc
(bad)
sub
pop
scas
and
mov
shr
lahf
add
loope
stc
adc
daa
add
out
dec
int
test
test
hlt
scas
inc
and
icebp
add
leave
jne
ror
mov
add
mov
add
das
in
or
js
shr
adc
add
(bad)
cmp
hlt
mov
add
aaa
or
add
sub
xor
pop
jp
add
inc
pop
add
enter
mov
fidiv
inc
pop
outs
pusha
push
loopne
daa
and
movs
adc
test
dec
mov
fs
push
fs
rol
in
jmp
adc
push
xor
(bad)
lahf
enter
dec
push
sbb
pop
mul
sbb
pusha
add
cmp
fwait
loopne
inc
jp
ficom
adc
pop
mov
(bad)
add
pop
mov
cmp
ds
or
dec
mov
outs
(bad)
cmp
dec
jnp
mov
xchg
lea
add
jge
imul
xor
mov
lds
pop
cmp
pop
mov
lock
mov
adc
mov
add
call
dec
pop
add
adc
inc
cmp
cmp
cmp
movs
inc
rol
mov
inc
push
test
enter
xchg
inc
mov
push
cdq
or
sub
scas
or
ror
test
cdq
pop
sub
mov
stc
aas
add
frndint
mov
pop
mov
pop
inc
add
nop
fsubr
pop
inc
pusha
and
jb
test
sbb
loope
lock
inc
add
leave
test
rcl
bound
pop
add
cmps
aas
mov
scas
icebp
add
inc
test
inc
add
adc
popf
jo
cmp
icebp
push
jnp
jne
sbb
mov
leave
inc
add
mov
xor
xchg
outs
test
pop
or
xchg
pop
enter
and
je
popa
inc
jl
lock
push
jns
push
push
sub
push
cmps
push
mov
sbb
cmp
push
add
jne
scas
aam
jmp
in
hlt
add
lea
jmp
sub
push
and
mov
inc
add
ret
lods
sbb
out
push
cmp
pusha
ins
lods
test
jbe
out
pop
or
je
cmc
sub
mov
and
or
add
push
fild
jno
(bad)
gs
xchg
sub
add
jle
pop
aaa
jnp
add
and
sbb
mov
add
add
addr16
int
aam
or
mov
pop
xor
std
cmp
ss
adc
inc
lods
sbb
bound
push
add
pop
call
mov
xor
in
push
ja
sbb
inc
and
jo
sbb
inc
pop
les
add
add
sar
mov
jg
mov
scas
xchg
jge
push
push
adc
add
xchg
jge
push
test
pushf
or
outs
pop
icebp
mov
fist
rol
sbb
add
mov
add
or
or
adc
cli
scas
mov
adc
pop
xchg
or
push
inc
clc
or
mov
add
aam
adc
jae
xor
add
shl
jne
pop
mov
sahf
xor
jnp
cld
push
adc
add
inc
and
and
push
xchg
mov
fdiv
lahf
dec
clc
frstor
bound
add
hlt
and
push
inc
cli
adc
loop
mov
adc
pusha
sub
into
test
cmp
inc
inc
sbb
mov
pusha
pop
mov
adc
mov
adc
add
mov
xor
out
push
push
fisttp
push
mov
(bad)
mov
(bad)
xor
movs
(bad)
push
jmp
adc
(bad)
jmp
xlat
add
xor
sub
dec
lock
bound
data16
loope
dec
push
xchg
cmps
repnz
inc
aaa
adc
sahf
push
and
cmp
or
nop
js
push
movs
lock
jo
mov
fdivr
inc
hlt
add
and
and
add
leave
or
out
pop
int3
push
rcl
inc
fbstp
sar
pusha
bound
movs
call
frstor
adc
dec
pop
les
and
xchg
xchg
pop
rol
mov
mov
cmp
rcl
ret
out
inc
cmp
cmp
gs
in
lahf
add
jmp
sbb
add
lds
and
jae
mov
sbb
sbb
aam
xchg
cwde
jmp
das
jmp
add
jge
test
xchg
scas
push
jge
adc
stc
out
push
mov
not
xor
or
jo
test
ins
mov
inc
mov
cmp
xchg
in
ret
cmp
inc
push
shl
add
and
out
enter
mov
mov
mov
add
sbb
adc
pop
pop
adc
dec
ror
cmp
dec
dec
ret
dec
retf
inc
inc
fsub
jns
lock
ret
inc
sub
jo
in
or
loope
and
sub
jle
jmp
cmp
aaa
mov
mov
mov
and
lods
ficom
cmp
mov
and
add
mov
add
mov
sar
aaa
add
inc
sub
mov
dec
mov
mov
lahf
pop
fwait
inc
les
popf
(bad)
(bad)
shl
add
xor
mov
ror
ret
mul
dec
and
(bad)
iret
fild
pop
ins
stos
xchg
mov
cs
xchg
test
adc
mov
cmp
lods
into
shl
mov
dec
cmp
inc
test
sbb
lea
cmps
daa
xor
mov
cli
ret
and
ret
push
xchg
push
pushf
or
or
and
mov
add
aas
add
mov
mov
call
jl
test
adc
(bad)
and
mov
jnp
cwde
sbb
adc
xchg
mov
lock
inc
and
and
inc
fisttp
movs
ret
test
sub
js
leave
mov
xor
jne
fdiv
shl
and
sbb
outs
or
add
jle
hlt
cmps
push
and
shr
aaa
out
push
call
and
sbb
inc
gs
cmps
cmp
xor
push
push
and
imul
sbb
xchg
dec
or
sar
scas
jecxz
sbb
add
outs
jmp
inc
pushf
sbb
or
mov
rol
ret
mov
fistp
test
retf
sub
or
jne
movs
and
std
or
(bad)
and
popf
jmp
or
and
je
rol
dec
pop
mov
xlat
lock
sub
lods
inc
addr16
inc
jmp
add
nop
pusha
sbb
push
jl
js
cld
sub
std
adc
adc
fistp
hlt
pop
pop
push
out
jnp
shl
pop
lahf
in
sub
jle
in
push
out
dec
test
sub
mov
jmp
xor
sbb
cmc
inc
loopne
icebp
and
xchg
add
sbb
int3
and
or
pop
aaa
clc
jbe
repz
add
xchg
inc
or
push
push
jbe
adc
fmul
mov
nop
and
jg
ja
or
add
in
arpl
lods
sbb
bound
fild
ret
add
sbb
sub
mov
pop
dec
add
inc
(bad)
in
inc
aas
and
xchg
sbb
iret
pop
inc
push
pop
sub
adc
or
inc
adc
int3
jmp
jne
sub
and
xchg
stos
inc
shl
ins
adc
ins
shl
outs
dec
imul
or
pop
and
clc
popa
sbb
or
js
adc
loopne
lods
sbb
test
push
xchg
pop
jbe
das
push
(bad)
and
sub
jbe
pop
inc
ja
pop
xchg
sbb
cmp
pop
stos
adc
and
lds
push
push
adc
rol
das
stos
(bad)
mov
cdq
sbb
sub
mov
or
pop
jmp
cmp
mov
je
aas
mov
jnp
and
mov
sbb
pop
das
mov
lea
cmp
mov
sar
out
pop
jl
dec
pop
push
add
or
out
fist
inc
mov
inc
bound
push
adc
loopne
lock
lahf
inc
inc
inc
sar
jle
loopne
pop
jns
or
jb
scas
xchg
adc
mov
movzx
add
imul
jg
mov
xor
pop
and
test
pop
pop
and
or
mov
rcr
(bad)
cmp
movs
lock
test
and
das
dec
mov
jge
jo
pop
daa
mov
pusha
or
add
lods
dec
jo
push
mov
pop
lock
add
mov
dec
xchg
xchg
iret
cmp
sbb
rcr
inc
dec
out
cwde
mov
mov
ins
cmps
xchg
and
or
loope
adc
je
adc
data16
lock
loope
pop
fisub
add
pusha
or
mov
mov
fadd
test
repz
(bad)
stos
adc
movzx
or
(bad)
push
add
jecxz
icebp
or
or
xchg
sub
mov
lock
adc
jo
xchg
inc
jmp
mov
ret
test
ret
aam
fsubr
or
sbb
fdiv
mov
xor
mov
loopne
inc
pop
mov
push
scas
nop
scas
inc
adc
push
mov
repz
adc
mov
dec
mov
add
jo
xchg
aas
jne
pop
sbb
ror
arpl
or
adc
imul
daa
idiv
outs
sbb
mov
ds
fadd
add
and
cmp
je
lds
call
arpl
sbb
xor
test
push
pop
xchg
jae
sub
rol
push
(bad)
(bad)
cmp
or
loopne
add
in
inc
fadd
(bad)
or
les
ins
mov
int3
and
inc
xchg
js
daa
lods
inc
lahf
movs
jno
js
sub
movs
sbb
mov
or
cmp
lock
arpl
je
or
in
and
and
in
jnp
test
jo
pop
cmp
inc
fs
dec
hlt
ffreep
test
pop
shl
xor
leave
mov
cwde
mov
push
ret
jge
xor
pop
push
push
adc
inc
inc
pop
je
or
movs
mov
call
push
push
rol
mov
lahf
push
ret
imul
cmp
clc
jne
ins
pop
or
and
test
sub
dec
sub
lahf
leave
sbb
pop
sub
sbb
pop
inc
ror
add
push
repz
dec
add
in
cmps
aas
dec
mov
jp
mov
xor
push
pusha
sub
push
fnstcw
inc
fdivr
stos
jae
jmp
pop
iret
cmps
sbb
push
cmp
and
arpl
xchg
movs
inc
sub
loopne
adc
push
jmp
shl
cmp
push
popa
aas
dec
hlt
sbb
and
cmp
das
add
popa
fcomip
push
adc
xchg
pop
lds
adc
lahf
or
cmp
(bad)
or
mov
add
jbe
ret
push
test
jle
imul
mov
mov
repnz
add
adc
(bad)
stos
adc
push
hlt
scas
sbb
jl
sbb
bound
test
repz
and
add
or
pop
jo
popf
push
cmp
jo
gs
add
hlt
xor
aas
pop
adc
xchg
mov
clc
jmp
sub
ja
loope
add
movs
in
rep
fbld
pop
pushf
xor
add
fs
add
lock
cmp
mov
shl
dec
int
dec
jl
int3
xor
push
clc
jne
dec
cld
ret
push
lock
push
push
inc
pop
or
es
cmp
pop
or
xor
imul
outs
fucomip
shl
movaps
and
mov
ret
xchg
add
in
adc
in
pop
les
sub
jae
or
or
fsubr
je
push
inc
mov
fmul
and
add
and
push
cmp
mov
add
hlt
adc
xor
lock
mov
jp
mov
mov
adc
int3
inc
dec
ja
adc
xchg
mov
jmp
in
ja
lock
popf
xchg
shl
outs
pop
inc
pop
(bad)
ja
dec
test
clc
mov
add
ret
and
add
hlt
push
jmp
and
xor
adc
add
mov
in
push
lea
add
and
pop
adc
sbb
lock
das
add
dec
ret
inc
loope
jne
and
sub
hlt
jae
add
jae
cmp
add
inc
mov
sbb
or
xor
and
pop
mov
inc
mov
inc
daa
sbb
cmp
or
sub
pop
add
dec
dec
jb
aaa
(bad)
adc
mov
add
pushf
cmps
push
rol
call
pop
sub
adc
mov
dec
scas
je
sbb
push
cld
add
mov
and
cmp
push
cmp
fimul
cmp
ror
test
cmps
add
jnp
xchg
xchg
inc
ret
test
push
lds
mov
adc
sbb
shr
aam
stos
inc
mov
sbb
push
xchg
arpl
cmps
jne
bound
xchg
and
jo
shl
add
xor
lds
pop
xor
adc
movs
test
jg
xchg
sub
ficom
or
adc
stos
fldenv
add
add
clc
sub
push
js
push
jmp
mov
(bad)
test
xor
xchg
jge
in
popa
(bad)
fsubr
fadd
push
out
mov
outs
add
(bad)
xchg
xchg
and
xor
and
cmps
imul
daa
xchg
dec
jge
aam
add
push
iret
inc
push
xchg
mov
add
push
pop
mov
mov
gs
cmp
fnsave
xor
rcl
and
adc
jge
pop
test
push
in
(bad)
les
and
fcom
fadd
and
mov
and
aas
cld
dec
pop
push
repnz
loope
cmc
cli
sahf
les
push
(bad)
(bad)
lea
xor
pusha
ins
sbb
pop
into
jmp
scas
data16
add
data16
mov
add
or
mov
sub
inc
cmp
mov
mov
or
dec
or
loopne
inc
test
rcr
jne
lock
jne
pop
xchg
adc
lock
shl
inc
sub
pop
mov
rol
cmp
leave
pop
daa
lods
popf
inc
das
and
adc
or
xchg
hlt
push
cmps
xchg
imul
sub
mov
jo
dec
or
adc
add
xor
pop
adc
loope
out
sbb
sbb
rol
adc
adc
mov
cmp
add
inc
jne
adc
lds
test
aam
xor
enter
mov
cdq
mov
test
pop
or
fwait
sbb
(bad)
(bad)
mov
push
add
and
pop
dec
jg
mov
inc
sbb
call
inc
add
push
dec
sbb
or
shl
cmp
push
dec
sbb
cmp
cmp
arpl
jl
rol
and
and
and
sbb
mov
dec
lods
loopne
push
xchg
add
movs
sbb
xor
stos
pop
in
pop
jl
pop
fbstp
or
push
cmp
dec
cmp
mov
push
and
push
pushf
mov
hlt
ins
icebp
push
jae
and
sbb
jmp
pop
pop
mov
jnp
or
adc
test
push
(bad)
enter
dec
push
int3
jge
loope
and
dec
and
addr16
inc
xor
jne
push
cmps
into
call
push
mov
hlt
lahf
or
or
inc
fdiv
xchg
cmp
sbb
mov
fcomp
xor
jg
add
mov
test
cmp
inc
mov
sbb
std
sbb
in
je
pop
dec
mov
push
mov
push
sbb
xchg
push
jbe
sbb
(bad)
pusha
mov
mov
push
adc
jmp
jmp
xor
adc
(bad)
(bad)
xadd
sub
hlt
sub
repz
sbb
or
jmp
and
aaa
rol
les
inc
mov
mov
pushf
push
sbb
jmp
mov
icebp
mov
or
test
push
push
mov
rcl
push
xchg
loop
jmp
sbb
sbb
jnp
arpl
retf
fwait
add
das
popa
xchg
lods
ins
leave
in
inc
dec
pop
test
je
loop
shld
add
xchg
push
dec
cmp
or
sbb
sub
scas
push
and
retf
sbb
inc
sub
sub
aaa
mov
and
sub
push
xor
pop
setl
movs
xor
dec
xor
mov
xchg
or
sbb
and
shr
out
fistp
lds
sub
adc
fadd
out
pop
fsubr
dec
jmp
mov
jmp
mov
xchg
mov
scas
cld
iret
mov
jmp
pop
cmp
daa
mov
ss
imul
inc
lods
mov
adc
add
arpl
loopne
jp
aas
cmp
push
imul
call
std
add
xor
fcom
inc
adc
adc
cmp
jecxz
jmp
je
fild
inc
je
ins
jo
sbb
jg
fiadd
(bad)
mov
sub
outs
mov
push
fsub
mov
loop
pop
add
nop
xchg
shl
jbe
ficom
in
and
lahf
test
push
scas
mov
and
adc
fisttp
ror
pop
and
pop
mov
rol
or
adc
outs
add
add
pusha
pop
adc
jbe
push
dec
adc
aas
xchg
xchg
and
shl
sti
inc
movs
jnp
fsub
mov
cwde
(bad)
pop
sub
fadd
push
retf
pop
dec
add
push
cld
push
xchg
dec
or
loopne
pop
xchg
pushf
xor
pop
rol
push
icebp
mov
loopne
jnp
push
cld
(bad)
sahf
add
ret
ret
cld
mov
add
arpl
jecxz
inc
mov
mov
outs
mov
inc
sbb
jmp
adc
rcl
lahf
sub
inc
pop
shl
mov
xor
js
mov
mov
inc
enter
js
mov
cmp
dec
and
or
pop
ss
pusha
adc
sub
les
or
mov
movs
adc
or
xchg
jl
add
je
mov
push
xor
inc
mov
mov
cmp
add
test
loopne
and
and
sbb
fmul
ret
or
bound
enter
adc
inc
rol
aaa
xchg
or
inc
push
add
adc
inc
sub
movs
or
sbb
mov
adc
jg
push
pusha
push
lds
pop
or
outs
lea
sub
and
jne
not
je
dec
hlt
jne
aad
xchg
pusha
add
xchg
push
mov
mov
test
xor
ffree
imul
adc
inc
jmp
cld
pop
inc
mov
or
dec
movs
sub
sbb
imul
and
mov
xor
lea
test
pop
sub
dec
or
sti
loopne
enter
call
leave
add
inc
pushf
pop
or
jnp
aam
xor
xor
push
or
sub
loopne
xchg
or
pop
xchg
clc
dec
and
cmc
or
cwde
add
pusha
mov
or
jp
pop
iret
cmp
les
add
mov
lock
adc
or
das
cmp
arpl
mov
and
clc
call
inc
cmp
ds
enter
sbb
xchg
add
sub
xor
(bad)
mov
add
dec
icebp
test
push
aaa
dec
imul
rcl
inc
push
adc
sub
rol
nop
xor
or
add
int3
push
lods
mov
fchs
aad
sbb
adc
inc
les
retf
add
add
sar
sbb
jnp
in
jmp
call
js
inc
pop
and
mov
inc
lods
xchg
xchg
pop
test
out
jmp
adc
pushf
sbb
ds
push
push
xor
adc
push
sbb
and
js
scas
inc
adc
fisubr
or
dec
adc
cmp
daa
pop
mov
push
aas
je
sbb
pusha
sbb
push
xor
push
xchg
sbb
add
inc
das
hlt
jno
ins
outs
pop
sbb
clc
in
cmp
nop
clc
jo
push
inc
push
mov
dec
shr
and
xchg
movs
in
cmp
in
push
sbb
push
pop
pop
mov
dec
dec
in
push
push
push
sbb
xchg
inc
jbe
adc
aas
test
mov
mov
and
ins
fimul
leave
mov
lods
push
arpl
sbb
adc
push
add
lea
jmp
scas
dec
in
or
push
sub
or
lahf
push
bound
and
ins
pop
push
pop
jmp
fadd
sbb
push
mov
cli
push
add
or
mov
pop
dec
arpl
dec
jne
cmc
cmp
cmc
test
mov
push
icebp
push
inc
push
inc
pop
shr
daa
and
gs
push
shr
cmps
mov
cmp
inc
ins
mov
hlt
push
retf
cmp
pop
xchg
jg
pop
pop
adc
call
(bad)
jg
out
cmp
outs
adc
ja
pop
and
pop
mov
mov
and
add
test
jmp
xchg
sbb
cmp
js
fwait
cdq
xor
add
push
sub
mov
lock
add
mov
cmps
dec
test
aad
add
(bad)
in
inc
push
xor
adc
adc
ret
adc
not
sbb
sub
sub
fs
pop
int3
enter
lock
arpl
xor
add
mov
repnz
add
jle
call
and
xor
dec
add
shl
leave
push
js
inc
push
mov
jo
cmp
xchg
jmp
sbb
push
movs
je
push
icebp
adc
pop
cmc
push
mov
push
ins
sbb
fs
push
sbb
mov
cmp
retf
js
pusha
adc
xchg
aaa
pop
xor
shl
push
push
pop
fsub
xor
and
es
loop
sar
push
xor
sbb
aas
jecxz
les
inc
inc
int3
xchg
add
jbe
push
jno
push
pusha
cwde
lods
add
add
js
lods
(bad)
sti
xchg
xchg
fdivr
jmp
sub
xor
icebp
mov
add
jg
int3
int
mov
movs
push
fwait
in
jne
jmp
fmul
mov
mov
mov
xchg
les
mov
das
arpl
(bad)
sub
int
add
mov
call
je
sti
jnp
or
xor
jo
ret
dec
add
cdq
lods
push
es
icebp
fmul
scas
cmp
xchg
pop
clc
stos
sbb
sbb
dec
mov
js
or
xchg
ds
out
enter
sbb
in
mov
repz
pop
cli
and
mov
sbb
pop
dec
pop
call
add
xor
sub
or
(bad)
push
pop
jnp
adc
and
xchg
pop
nop
ret
push
adc
sbb
test
jo
push
inc
ins
ret
fcmovb
add
imul
leave
mov
push
mov
cld
push
mov
in
push
ins
jp
sbb
and
push
or
push
sub
(bad)
add
add
aaa
aad
adc
scas
jecxz
push
(bad)
ficom
or
or
or
ret
je
not
and
xchg
xor
nop
xchg
push
and
adc
pop
jge
fcomp
jmp
std
jl
dec
cmp
cs
xor
adc
(bad)
in
push
inc
(bad)
aad
mov
and
nop
add
jb
call
aam
and
inc
push
push
and
dec
cld
sti
sub
pop
add
lahf
adc
mov
xchg
pop
test
aam
mov
daa
lea
imul
and
push
add
or
loopne
loope
or
aam
inc
nop
dec
sbb
inc
dec
test
outs
inc
out
loopne
push
sub
into
add
sub
xchg
shl
and
xchg
popf
add
movs
test
scas
and
pop
and
xchg
(bad)
mov
xchg
pusha
jne
pop
pop
sub
ins
aas
mov
xor
popa
xor
or
daa
and
loop
mov
(bad)
pop
test
sub
fisttp
cdq
mov
or
(bad)
add
in
or
add
push
jae
movs
add
daa
dec
imul
push
jp
jmp
and
or
adc
or
sbb
jne
or
test
cld
sub
cmp
xchg
clc
dec
inc
adc
xchg
pop
or
pop
add
dec
or
mov
mov
inc
ret
and
xor
in
push
ret
mov
lds
mov
sbb
add
dec
mov
leave
js
scas
mov
lock
push
out
mov
mov
mov
out
add
adc
add
xchg
into
push
mov
cdq
adc
dec
iret
or
pop
sti
arpl
fmul
dec
or
std
fmul
test
or
adc
ror
int3
push
arpl
sbb
push
add
jecxz
adc
ffree
or
push
int3
add
and
addr16
dec
nop
push
jge
mov
aam
xor
fimul
lea
mov
popf
cmp
fs
es
sbb
jo
pop
or
js
add
pushf
xor
mov
inc
cmp
sbb
push
or
or
sbb
test
jle
mov
xor
mov
sbb
popf
mov
bound
xchg
sbb
aam
movs
and
dec
ins
sub
popa
push
mov
add
and
movs
loope
nop
sar
mov
pop
rcl
ret
xchg
(bad)
adc
adc
push
(bad)
loope
lahf
imul
xchg
push
fcom
in
sbb
add
and
pop
fmul
add
clc
and
adc
jle
cmp
cmp
cmp
cmps
lahf
bound
lea
mov
lods
adc
and
or
xchg
in
jmp
rol
ds
test
xchg
push
mov
pop
fadd
cld
mov
mov
jl
dec
add
std
sbb
jno
dec
pusha
sub
push
addr16
lods
rcl
pop
sub
sub
lods
aas
int
dec
lahf
shl
ret
cmp
mov
inc
loopne
xor
loope
sbb
jo
or
adc
int3
or
inc
or
jo
adc
mov
cwde
mov
lock
mov
pop
xchg
cmc
fsubr
sbb
jle
mov
cmp
(bad)
adc
xor
cmc
push
or
sbb
adc
mov
push
xor
push
jge
mov
inc
lods
(bad)
jle
push
cdq
cmp
jle
movs
and
push
fdiv
sub
cmps
xor
or
dec
xor
mov
dec
mov
test
pop
popa
sbb
call
add
cmp
and
popa
test
pop
and
sub
pusha
mov
addr16
test
(bad)
outs
sub
sbb
pop
cmc
pop
inc
sbb
scas
pop
mov
or
call
sub
push
scas
push
aas
(bad)
pushf
(bad)
push
xor
inc
adc
inc
xchg
test
inc
les
or
lahf
adc
mov
pop
jmp
sub
xor
or
or
ret
ret
fidivr
sbb
repz
lea
adc
push
or
(bad)
xor
dec
pop
je
or
je
add
sbb
cld
test
xor
pop
cdq
add
push
add
dec
das
sbb
sbb
inc
or
jmp
add
popa
xor
js
enter
pop
push
push
mov
xor
sbb
lods
aad
or
add
daa
loope
cld
sbb
inc
inc
into
cmps
and
mov
or
push
loopne
hlt
pop
adc
add
pop
cwde
add
add
inc
inc
cmp
dec
adc
mov
arpl
inc
test
or
ret
add
and
xchg
xchg
mov
jmp
jmp
in
jmp
sbb
pop
cmp
retf
and
cmps
test
xor
lahf
sub
addr16
mov
jns
mov
loope
or
(bad)
or
ror
pop
pop
dec
scas
add
pusha
push
je
sub
(bad)
bound
or
mov
or
test
pushf
mov
arpl
push
enter
mov
or
or
hlt
jnp
loopne
jmp
inc
mov
add
add
and
aas
and
pop
add
xchg
and
add
mov
adc
add
(bad)
jg
inc
repnz
add
add
mov
or
push
xchg
addr16
and
test
and
inc
mov
cmc
jb
mov
push
jge
and
repz
or
mov
xchg
mov
aas
dec
xor
clc
pop
aam
loop
test
cld
mov
push
mov
ret
xlat
mov
shr
xor
jg
jne
ret
int
pusha
sbb
sub
pop
sub
clc
pop
shl
jmp
jmp
pushf
or
xchg
mov
sub
loop
les
rcl
dec
fmul
leave
lods
add
mov
mov
leave
fistp
mov
adc
pop
jmp
jmp
mov
loop
sub
mov
aas
add
inc
push
and
pop
es
outs
pushf
inc
ins
arpl
pop
ss
adc
pop
and
mov
mov
gs
mov
fucomip
pushf
xor
mov
dec
cmp
retf
pop
bound
sbb
jmp
addr16
dec
call
adc
inc
je
mov
outs
sbb
loope
mul
dec
loope
pop
add
jmp
cmp
ret
lea
inc
cmp
add
sbb
push
push
sbb
enter
jmp
pop
cmps
test
iret
cld
push
cmps
jno
xor
mov
cmp
pop
cmp
pop
in
push
push
loope
and
and
and
push
cs
and
scas
mov
mov
bound
mov
add
test
rcr
mov
fild
adc
sub
add
inc
sub
clc
adc
pop
das
add
test
pop
clc
adc
aas
inc
aam
movs
jecxz
or
add
inc
div
mov
ret
test
pop
data16
or
xchg
jmp
push
or
aas
jmp
dec
push
push
add
inc
sar
add
dec
xor
retf
shl
pusha
sub
ds
stos
shr
pop
add
add
mov
ret
shr
mov
shl
mov
nop
xchg
je
test
adc
ins
imul
inc
sub
test
rcl
adc
and
ror
mov
sar
mov
fsub
ror
fnstenv
xchg
and
dec
loope
sub
hlt
and
rol
xor
mov
jmp
sub
sub
jne
stos
or
sub
lds
(bad)
mov
sbb
sbb
outs
dec
jno
add
(bad)
mov
sbb
and
in
xor
lock
sub
ins
(bad)
aam
and
adc
stos
jle
pop
fmul
cmp
jmp
jmp
ss
enter
and
pusha
ret
mov
lds
sub
in
test
xchg
add
and
fcmove
ds
pop
mov
das
pop
mov
push
out
jno
inc
mov
es
movs
mov
retf
xor
sub
out
xchg
or
jb
mov
lock
scas
jmp
shl
shl
retf
call
push
mov
(bad)
xchg
icebp
call
and
sub
(bad)
add
add
ja
jg
push
mov
daa
loopne
mov
inc
adc
rcl
cs
inc
xchg
mov
dec
and
test
loopne
loopne
test
sbb
and
pop
loopne
dec
loope
bswap
jmp
sub
ins
retf
cmc
in
sbb
or
pop
sub
shr
mov
jg
sbb
push
rol
jmp
add
loop
hlt
mov
jmp
icebp
and
xor
loop
add
add
aaa
push
sbb
ret
stos
sbb
inc
sub
mov
nop
and
icebp
ret
scas
(bad)
jbe
or
out
pop
cmp
add
inc
sub
xchg
outs
dec
and
js
sub
pop
clc
enter
sub
dec
imul
adc
imul
ins
and
in
inc
call
jmp
cmps
xchg
shr
mov
and
ins
mov
sub
add
jg
push
mov
std
bound
push
mov
stos
popa
fs
loope
jge
clc
push
and
clc
inc
or
jle
mov
(bad)
or
pop
aad
or
sbb
sub
aas
jnp
(bad)
fcmovnu
dec
pusha
mov
jl
adc
push
push
jp
imul
(bad)
loopne
push
mov
push
push
push
adc
call
(bad)
loopne
xor
mov
sub
mov
sbb
jns
loop
pop
loopne
enter
ret
aam
jns
test
adc
inc
or
add
mov
add
pusha
mov
ror
inc
bnd
jecxz
clc
jl
fmul
cwde
dec
pop
and
fnstcw
popa
add
repnz
fsub
hlt
adc
mov
adc
lock
and
or
sub
cld
push
int
cmp
jne
mov
push
and
dec
je
xchg
adc
push
and
in
sbb
add
add
int
rol
shl
test
cmovb
sbb
movs
or
ins
add
out
push
add
xchg
inc
mov
lahf
add
jae
or
push
add
enter
push
and
push
or
add
clc
xchg
inc
adc
and
and
(bad)
xlat
pop
popa
xchg
pop
cmp
cmp
xchg
mov
jle
or
jg
les
or
push
add
or
mov
or
dec
jg
adc
push
jne
sbb
fild
pop
dec
cmps
push
in
push
inc
xchg
adc
inc
sbb
nop
clc
or
imul
or
ins
rol
lea
(bad)
icebp
(bad)
pop
add
test
xchg
sbb
jne
aas
push
not
inc
adc
enter
sub
push
enter
in
cmp
adc
in
mov
dec
rcl
and
repnz
or
in
cmp
and
adc
cmp
nop
pusha
dec
lods
pop
cld
nop
inc
loopne
xchg
or
mov
ror
pop
aad
cwde
cli
adc
mov
inc
stos
or
adc
push
push
shl
fs
mov
inc
and
inc
push
mov
pop
add
movs
add
xor
sbb
aam
enter
or
jnp
or
adc
or
mov
add
mov
sahf
lock
add
push
mov
inc
pop
shl
retf
inc
pop
test
mov
scas
jno
and
adc
ror
push
jg
lock
inc
test
pop
(bad)
cmp
add
or
sti
sbb
test
mov
push
add
sahf
in
push
mov
add
and
add
push
pop
cwde
push
sbb
or
div
imul
add
jb
jo
add
fnstsw
cmp
cmp
mov
and
push
xchg
and
cmps
mov
nop
adc
inc
(bad)
mov
imul
lea
xor
add
pop
lahf
clc
cmp
cmp
or
mov
pushf
push
add
sbb
mov
cmp
bound
jmp
out
or
fisttp
ficom
and
pusha
pop
mov
and
mov
dec
test
jl
xchg
or
pop
pop
cwde
sub
nop
das
inc
(bad)
jg
test
or
push
or
fild
mov
inc
aad
push
sahf
or
add
xor
or
push
ffreep
mov
add
and
fbld
add
es
lds
dec
es
pop
and
(bad)
(bad)
pop
or
or
hlt
push
mov
xor
and
stos
loopne
add
mov
movs
(bad)
not
xor
dec
add
iret
add
sbb
dec
jmp
sar
lds
outs
or
push
add
pop
add
mov
nop
test
mov
lock
and
pop
jmp
ret
not
loope
mov
add
in
addr16
xchg
test
dec
sbb
fnsave
ror
cmp
sbb
mov
push
jg
sbb
jg
ds
loopne
cmc
or
inc
scas
sbb
jae
neg
adc
jbe
mov
push
nop
rcl
cmp
and
jle
add
inc
dec
stc
add
adc
adc
cmp
add
dec
aas
sbb
or
mov
add
sbb
dec
or
or
cdq
add
and
mov
or
jmp
and
cmp
loopne
(bad)
dec
and
lock
sub
sti
xor
or
adc
or
in
int3
jo
mov
pop
fist
or
mov
mov
sbb
pop
fdivr
add
mov
loope
or
fsub
add
pop
push
not
push
jg
add
imul
and
fild
adc
sbb
xlat
push
test
add
popf
mov
add
fdiv
push
add
add
lahf
ret
jb
jb
aam
fs
push
test
retf
mov
add
push
add
add
pop
jg
bound
hlt
push
add
lahf
iret
mov
push
and
cmp
adc
loope
loope
add
adc
rol
icebp
mov
aas
cld
hlt
dec
xor
jmp
lahf
enter
loope
loope
inc
enter
ret
add
enter
mov
imul
rcl
aas
dec
icebp
mov
inc
mov
jns
les
or
sub
les
enter
mov
test
inc
or
xor
out
js
mov
fsub
cld
and
and
aas
pop
or
mov
mov
jl
mov
pop
pop
push
ss
push
mov
cli
movs
mov
ror
ins
push
fld
lods
aaa
or
sbb
sub
(bad)
mov
sub
lahf
mov
call
sti
pop
or
inc
outs
sti
jle
or
les
loope
(bad)
add
sti
shr
movs
jb
rol
sbb
adc
jmp
adc
dec
push
les
and
jmp
pop
and
xlat
push
dec
cwde
cmp
stos
xchg
xor
mov
(bad)
push
in
aas
mov
add
js
clc
push
leave
adc
adc
add
xor
adc
mov
int
lods
or
ror
rol
or
jo
dec
cld
sub
and
push
call
inc
adc
or
cmp
add
sbb
mov
sub
test
mul
or
sub
dec
rol
and
or
sbb
cmp
ret
push
inc
nop
xchg
mov
fild
vrcpss
mov
mov
inc
(bad)
pushf
mov
test
add
jmp
dec
les
sbb
pop
sbb
js
push
mov
add
add
inc
ins
mov
inc
mov
push
aaa
xor
jo
jo
push
not
lds
shl
adc
pop
loopne
jl
or
mov
adc
add
adc
ret
pusha
lods
js
xchg
or
cwde
sub
jne
lds
and
sbb
lods
add
jb
and
daa
push
sbb
add
outs
imul
inc
xchg
mov
xchg
lock
jne
pop
or
dec
ret
or
es
push
sbb
cmp
jge
push
add
add
ja
add
add
xchg
push
inc
mov
aas
sbb
pop
je
and
add
dec
mov
jp
sub
shl
adc
cmps
and
leave
rol
lar
sbb
(bad)
and
mov
dec
js
sub
cmps
imul
cmp
sbb
inc
sub
add
fcmovu
add
cmp
or
inc
inc
cmp
adc
outs
imul
mov
out
cdq
inc
jns
sub
sbb
lock
sbb
stos
lods
sbb
mov
or
mov
test
adc
adc
add
add
sub
adc
xor
and
lods
cmp
test
or
sub
cmp
dec
dec
sar
push
cmp
sub
enter
ins
jno
dec
fild
adc
cmp
daa
jecxz
shl
mov
sub
or
xor
popa
cmp
in
arpl
inc
inc
dec
mov
inc
push
dec
push
lahf
sbb
sbb
xchg
sbb
and
pop
les
xchg
cdq
add
dec
mov
sub
or
and
xor
pop
push
adc
cmp
mov
clc
adc
inc
(bad)
scas
jno
ret
cmp
sub
je
or
and
mov
pop
push
gs
adc
jp
inc
cmc
ret
or
xchg
push
xor
push
mov
in
rol
stc
jge
inc
mov
push
or
mov
inc
in
sub
ud0
pop
adc
(bad)
out
test
pop
and
inc
dec
add
daa
push
pop
jno
sub
add
mov
or
(bad)
adc
jle
inc
push
jmp
test
sbb
or
(bad)
aam
mov
nop
sub
add
(bad)
dec
ins
xor
cdq
sub
test
loopne
sub
jne
sbb
and
mov
or
aam
ss
add
test
jle
ret
sub
lea
mov
push
xchg
clc
loop
and
jne
ins
cmps
bnd
sbb
adc
or
or
add
jne
sub
mov
idiv
and
adc
sbb
je
or
in
sub
push
push
sbb
shl
or
(bad)
pop
jecxz
mov
dec
cmp
cmovae
cmp
inc
push
scas
sub
xor
pop
xchg
mov
or
sbb
pop
push
pop
adc
lea
mov
adc
push
push
repz
inc
inc
push
xchg
cmps
pusha
mov
push
mov
cmp
verw
lods
sbb
or
xor
cs
sub
pop
cli
xor
in
jl
sbb
(bad)
jno
xor
imul
mov
rcr
js
int
inc
dec
jge
out
push
call
add
or
mov
movs
mov
call
sub
mov
rol
xlat
jne
call
adc
sub
add
push
sbb
imul
data16
xchg
cmps
cs
lea
push
jo
je
jo
sbb
pop
test
shl
loopne
das
pusha
xchg
bound
fadd
fistp
rcl
mov
and
xchg
inc
adc
mov
mov
cmc
xchg
popa
rcr
dec
ror
jecxz
icebp
xchg
push
and
int
pusha
push
pop
and
push
and
add
lods
leave
mov
mov
and
int3
inc
and
je
or
adc
adc
xor
xchg
jno
add
adc
mov
lea
add
cmc
add
(bad)
cdq
mov
ret
xor
cld
(bad)
cmp
mov
sahf
and
ss
clc
sub
or
or
push
inc
push
sub
xor
add
loope
ins
or
std
cmp
inc
pop
add
pop
jmp
mov
adc
or
xchg
xchg
push
push
arpl
rcr
fmul
outs
inc
fcom
push
pusha
jg
mov
xor
dec
add
or
push
mov
mov
mov
sbb
inc
mov
adc
push
sub
push
sbb
xchg
dec
inc
add
inc
jg
adc
lahf
jle
xchg
je
aas
test
push
pop
not
mov
test
add
or
pop
and
jnp
dec
out
or
inc
xor
loopne
xchg
inc
(bad)
sub
jb
dec
or
cld
mov
push
iret
pop
jmp
imul
ins
stc
mov
push
mov
pusha
das
inc
enter
lock
xor
adc
sbb
neg
call
push
sub
push
jge
mov
cmp
or
dec
imul
popf
add
aad
sbb
loope
mov
adc
jg
test
dec
mov
add
mov
fld
push
(bad)
bound
mov
dec
mov
dec
int3
repz
push
or
or
push
mov
add
frstor
mov
xor
mov
adc
punpcklbw
cmp
dec
and
pop
mov
push
cmp
(bad)
jge
into
test
adc
or
int
popa
imul
add
loopne
dec
sbb
or
lds
add
mov
fs
enter
xor
popf
cmp
xlat
mov
mov
mov
add
mov
or
test
add
enter
xchg
fst
adc
add
or
adc
or
aaa
inc
dec
push
xchg
pusha
sub
int3
jo
sub
icebp
xchg
cmp
movups
aaa
add
xchg
push
test
ja
mov
icebp
daa
lea
push
test
add
adc
test
imul
data16
dec
add
jl
adc
sub
or
mov
and
clc
mov
push
pop
lods
pop
sbb
sbb
pop
aam
(bad)
in
mov
mov
pop
xor
xor
dec
dec
daa
dec
fcmovb
mov
aas
xchg
adc
stos
dec
pop
aad
xchg
dec
fcom
and
inc
xchg
sbb
add
pop
call
std
test
adc
mov
mov
enter
push
mov
sbb
push
sbb
sub
or
or
adc
pusha
ret
das
add
cmc
cld
and
push
jmp
xor
add
fwait
mov
dec
jne
and
mov
xor
sbb
add
arpl
and
jne
dec
loope
je
push
arpl
pop
sti
movzx
popf
in
add
add
aas
cmc
add
retf
jl
push
cmp
aad
pusha
(bad)
out
adc
neg
test
jmp
mov
cmp
loop
mov
add
sub
jb
add
mov
pop
add
cmps
dec
sub
leave
xchg
ror
jne
sbb
push
xor
push
and
add
and
lods
pop
or
loopne
dec
mov
pop
ret
jmp
cwde
push
push
leave
inc
ja
xor
clc
or
repz
jmp
int
adc
sub
adc
jmp
cmps
jle
cmps
addr16
add
sub
call
add
adc
jge
add
or
lldt
das
ins
jmp
push
clc
test
adc
dec
ret
mov
punpckhbw
xor
shl
mov
mov
and
jmp
jno
adc
and
or
and
dec
sbb
mov
test
or
aad
or
or
mov
mov
stos
mov
(bad)
add
push
sbb
push
mov
inc
xor
or
adc
jle
cwde
inc
and
jne
pop
and
or
pop
add
mov
adc
icebp
add
mov
xor
enter
or
cmc
add
add
mov
imul
sbb
xchg
mov
mov
rcl
fsub
inc
rcr
sub
ret
and
mov
xor
(bad)
xor
add
dec
and
jle
scas
lods
cmp
aad
xor
cwde
iret
loopne
call
add
inc
adc
mov
mov
pop
adc
pop
leave
loope
fs
add
mov
ror
ja
mov
lea
mov
and
aam
and
push
and
add
lea
sub
mov
aas
lods
test
add
(bad)
out
cmp
inc
pusha
pushf
sbb
add
jg
aam
rcl
xor
cmc
add
add
retf
lods
ficom
sbb
pop
inc
es
adc
adc
dec
add
inc
inc
fwait
xchg
inc
xchg
neg
es
aad
push
xor
dec
sbb
gs
xor
jno
in
add
push
adc
push
jns
dec
inc
dec
loopne
mov
sbb
out
std
in
cld
add
xor
adc
push
or
and
aas
loope
pop
push
pop
xor
inc
loop
xor
int
movs
inc
jmp
jp
push
or
inc
pop
mov
xor
aas
cmps
pushf
xor
push
push
loopne
mov
push
adc
pop
mov
pop
outs
dec
xor
fwait
or
or
shl
inc
cmp
push
jae
or
dec
ss
bound
(bad)
jmp
add
cmp
push
mov
out
rol
or
jne
pop
aaa
mov
cmp
sbb
ins
es
pop
mov
retf
pop
fs
xor
sub
and
sahf
dec
add
lods
inc
mov
xchg
ror
dec
dec
mov
das
inc
or
push
xor
jg
mov
lods
adc
imul
dec
pop
mov
mov
mov
xor
add
dec
inc
push
shl
(bad)
les
out
and
cmp
pop
nop
jo
loopne
or
pop
xor
cmp
cld
cmp
movd
lahf
inc
imul
and
call
out
and
xor
push
push
cmp
clc
xchg
push
cmp
iret
out
xchg
fwait
stos
popf
lock
pop
pop
xchg
pop
add
stos
or
les
(bad)
jle
add
test
and
call
inc
push
mov
xchg
ds
mov
xchg
push
add
xchg
or
or
adc
js
push
test
jno
push
dec
loopne
fs
sub
jl
dec
shl
hlt
inc
adc
(bad)
adc
pop
sub
test
mov
or
(bad)
ins
lahf
and
das
mov
xchg
shr
aam
pop
je
aaa
jg
pop
push
ret
test
xor
jl
int3
inc
lods
add
inc
movs
mov
mov
push
pop
and
ret
cmp
sbb
movs
pop
cmps
movs
jge
ins
pop
inc
inc
mov
xor
dec
test
movs
push
mov
adc
mov
push
shl
imul
jl
inc
ficom
stc
cli
(bad)
movs
rol
retf
fadd
and
jg
in
or
sub
sbb
xor
or
cmp
movs
aam
loope
in
aas
push
inc
sar
inc
push
add
dec
cmc
jg
scas
jg
ins
mov
mov
dec
inc
out
idiv
sub
sub
imul
dec
push
mov
sar
push
and
mov
jae
push
dec
dec
sub
or
cs
sub
cmps
inc
dec
or
bound
cdq
add
or
(bad)
(bad)
mov
sbb
ret
add
push
xchg
pop
xor
inc
cld
adc
dec
imul
xor
loope
push
push
pop
std
loope
add
xchg
lock
loopne
aaa
lock
test
or
je
rol
pop
dec
mov
mov
jmp
(bad)
push
ja
gs
and
pop
xor
jo
push
dec
adc
sub
addr16
cmp
jmp
and
add
call
nop
and
aas
xchg
sub
add
cli
pop
lahf
lock
call
push
mov
jno
adc
stos
int
sbb
loope
aam
sbb
lds
lods
mov
sbb
lahf
and
(bad)
repz
mov
cld
jno
cmp
shl
sar
fs
or
test
cmp
in
fdivr
inc
sbb
pop
add
mov
push
retf
daa
xlat
add
xchg
and
call
sbb
jne
dec
dec
and
fild
push
and
ja
add
loope
lock
xchg
test
addr16
add
mov
cmp
xchg
mov
movs
pop
mov
shl
test
adc
or
sub
adc
outs
dec
push
fisubr
scas
adc
mov
rcl
add
jne
ins
loopne
icebp
xchg
xor
sub
sub
lods
(bad)
pop
push
je
imul
cmp
jae
aas
inc
cld
push
mov
fistp
stos
jno
mov
mov
ret
jmp
jnp
dec
push
aas
cwde
push
shr
add
and
outs
stos
inc
adc
retf
aaa
mov
adc
push
or
arpl
bound
sbb
mov
fnstcw
mov
mov
jnp
arpl
or
or
xchg
movs
or
(bad)
jno
xor
jmp
jbe
imul
jecxz
rcl
(bad)
or
fucomip
jecxz
push
add
js
test
hlt
dec
mov
js
popa
cmp
push
(bad)
hlt
imul
push
push
sbb
cmps
ins
in
fild
xlat
clc
pop
or
xchg
push
inc
js
hlt
mov
js
push
push
and
sbb
or
pop
jmp
clc
inc
pop
and
fstp
jge
dec
stos
xchg
sbb
add
add
adc
mov
ret
shr
push
fcom
adc
adc
fsubr
dec
fld
cs
aas
sbb
adc
pop
rol
rcl
mov
aaa
cmp
pop
jne
fild
or
pusha
clc
sbb
lods
add
jge
js
mov
and
push
xor
inc
add
ins
je
jo
inc
jg
clc
sbb
mov
pusha
and
pop
push
push
add
popa
cmp
xchg
retf
pop
jecxz
pop
mov
icebp
push
repnz
pusha
push
add
jmp
and
mov
push
(bad)
cld
lods
adc
je
adc
jb
push
dec
xchg
jo
movs
sbb
fiadd
dec
sub
fwait
mov
pop
outs
adc
sub
pop
ja
cs
cmp
or
pop
adc
and
mov
lock
or
xor
fwait
test
out
popf
xchg
(bad)
xor
push
add
jge
mov
inc
cmp
lods
xchg
add
loop
shl
push
sbb
sub
push
in
(bad)
push
dec
inc
add
inc
inc
jmp
in
mov
ds
add
test
inc
and
in
push
dec
mov
pop
int
inc
retf
in
dec
inc
inc
and
jbe
xor
pusha
jg
enter
xlat
or
rcl
or
push
adc
jecxz
les
popf
sbb
dec
ds
xlat
shl
push
inc
jb
push
call
jne
pop
lahf
jns
imul
ret
add
lods
cs
shl
fadd
mov
je
push
fcom
dec
adc
adc
in
add
xor
out
add
xchg
pop
cmp
or
rol
adc
pop
and
orps
lock
jne
icebp
or
sub
push
add
inc
xchg
push
ret
sub
or
pop
jmp
mov
lods
mov
mov
or
pop
xchg
mov
jmp
sbb
ins
hlt
lock
aam
dec
out
push
sti
into
mov
sbb
int3
pxor
icebp
mov
xlat
stos
mov
mov
nop
aas
loopne
es
loopne
scas
test
fldcw
call
push
adc
inc
test
and
push
mov
retf
cmp
rcr
cmp
add
push
and
or
test
mov
in
pop
jl
mov
call
xor
push
loopne
hlt
dec
sub
adc
ss
call
in
mov
out
repz
paddusw
xor
push
cld
fild
es
mov
cmp
mov
imul
adc
test
prefetch
stos
hlt
push
cmc
add
les
add
push
push
mov
mov
dec
pop
lods
sbb
mov
test
jns
xor
and
or
sbb
or
adc
inc
pop
push
xor
push
jmp
leave
mov
sbb
std
jne
and
pop
pop
sub
add
dec
inc
xchg
test
mov
add
push
mov
push
outs
pop
out
fild
mov
or
enter
and
add
or
add
fsubr
sbb
sbb
or
jge
pop
xor
sbb
xchg
(bad)
sbb
jae
mov
inc
pushf
pop
or
or
daa
retf
pop
ror
xchg
jmp
add
(bad)
jg
add
jmp
cmp
jne
cmp
jb
dec
or
sbb
xchg
adc
ret
dec
xchg
pop
cmp
inc
cld
push
jmp
adc
sub
aas
and
rcr
stos
adc
lahf
jmp
mov
jmp
sub
sbb
mov
push
pop
lds
test
and
jle
sbb
xchg
jno
seto
outs
loope
and
inc
ins
inc
push
or
lods
pop
mov
xor
push
sbb
dec
jne
frstor
dec
push
add
ins
nop
and
sub
add
enter
jne
int3
xchg
rol
mov
and
lock
push
jae
jo
neg
jns
push
lock
ret
lods
sbb
leave
adc
xchg
lock
je
mov
je
jle
push
or
sahf
je
or
adc
and
lgdtd
adc
lock
add
or
test
test
add
call
inc
outs
aaa
pop
adc
inc
xor
or
xor
sahf
rol
sub
push
imul
xchg
add
mov
nop
sbb
pusha
mov
loopne
mov
cmp
pop
call
addr16
cmp
and
mov
cld
(bad)
cmp
xor
ror
dec
dec
jmp
mov
mov
iret
adc
mov
mov
add
add
shr
or
call
mov
xor
inc
(bad)
adc
add
test
jg
xchg
lods
lock
inc
popf
ja
cmp
ret
cmp
(bad)
enter
and
adc
fcom
jmp
jo
dec
sbb
xchg
jmp
push
inc
and
test
add
xor
or
add
gs
cmp
loopne
fmul
add
adc
mov
js
test
cmp
gs
add
arpl
jae
cmp
mov
les
call
add
or
mov
sbb
or
xor
adc
push
or
jge
push
push
inc
push
adc
add
xor
lods
xchg
dec
cdq
inc
sub
xlat
or
aas
dec
in
adc
sub
outs
or
adc
dec
sbb
or
xor
pusha
daa
dec
sbb
js
add
add
lea
ins
add
std
adc
rcl
dec
sub
sub
jno
test
jne
cmp
sbb
pop
sub
out
jmp
sar
mov
add
rol
and
pop
push
or
jmp
mov
stos
call
scas
movs
adc
cwde
movs
test
test
nop
push
mov
sub
imul
fdiv
cmovae
ds
xor
or
dec
loopne
jg
add
loopne
(bad)
sbb
out
lea
xchg
nop
nop
or
lea
push
pop
xor
pop
dec
add
das
rol
sub
das
fldcw
mov
jno
pop
sbb
mov
inc
push
shl
ret
pop
dec
add
cmps
or
or
movs
(bad)
ret
and
xor
mov
mov
mov
mov
or
test
mov
xor
inc
pop
dec
movs
ret
push
adc
push
jmp
lock
scas
xchg
or
jbe
repz
mov
nop
loope
mov
or
xor
cdq
cmp
shl
scas
and
xlat
or
shr
adc
mov
test
adc
pop
push
mov
and
pop
push
cs
or
inc
cmps
hlt
sbb
fs
jl
je
mov
sbb
lea
and
push
std
pop
xor
xchg
sbb
fwait
dec
inc
and
mov
sbb
in
pop
movs
sbb
sub
dec
push
repz
adc
add
es
adc
gs
dec
adc
adc
sbb
sub
or
repz
adc
je
rol
sbb
adc
mov
jbe
mov
xor
and
mov
in
test
shl
mov
lds
jns
add
adc
add
loopne
test
leave
clc
sbb
push
add
aaa
fwait
jo
sbb
daa
fcmovnb
mov
or
(bad)
popa
add
xor
dec
icebp
or
ud0
lds
and
add
add
sub
push
mov
adc
add
js
test
jns
push
test
sar
mov
push
add
add
mov
inc
mov
test
imul
call
cmp
int3
or
(bad)
loopne
jmp
sub
shl
adc
and
add
int3
cmps
adc
out
mov
pop
pop
push
sbb
scas
out
out
jl
pop
sbb
ror
pop
cmp
repz
outs
test
repz
jns
out
jb
retf
ins
sahf
inc
sar
popf
cli
adc
inc
iret
repz
pop
je
rcr
(bad)
jnp
pop
inc
pop
push
pop
push
xchg
pop
cmp
sahf
out
dec
popa
jle
(bad)
sahf
out
in
(bad)
sub
outs
push
js
adc
jns
stos
pop
push
bound
push
mov
out
fidivr
arpl
xor
int
fs
xchg
in
add
jl
adc
dec
jmp
add
in
int
xor
sub
xor
sbb
dec
mov
mov
(bad)
cld
mov
or
(bad)
jl
sub
dec
jne
cmc
lock
or
pop
pop
pop
push
jl
imul
mov
mov
test
and
add
mov
sahf
pusha
hlt
adc
and
daa
or
dec
movs
or
aas
and
loopne
push
into
sub
jp
jns
mov
loopne
scas
pop
bound
arpl
pop
inc
nop
or
push
rcr
(bad)
xor
mov
add
leave
aaa
mov
push
lods
hlt
aad
add
add
adc
xor
inc
aas
cdq
inc
mov
jg
test
pop
cmp
std
add
(bad)
sbb
out
xchg
jg
jnp
push
lock
push
in
into
jne
dec
dec
lock
push
nop
aam
mov
rcr
add
sub
or
test
adc
aas
dec
push
cmps
sbb
mov
add
cmp
and
leave
pop
dec
push
mov
or
lds
mov
and
inc
push
cmps
sub
lock
imul
xchg
sub
jmp
and
or
out
int
(bad)
and
inc
fistp
mov
push
add
mov
sbb
or
push
add
push
pop
push
xchg
sar
(bad)
jns
pop
jecxz
arpl
lea
xchg
movs
out
loope
or
pop
and
mov
loope
or
mov
adc
inc
movs
mov
xor
pop
ins
cmps
mov
mov
adc
push
jno
movs
sbb
(bad)
cld
daa
pop
ins
mov
jno
or
or
xchg
loop
cmps
cmp
test
rcl
add
cmp
adc
mov
test
xor
jg
aas
add
push
add
fisttp
adc
add
push
pop
push
mov
mov
mov
in
mov
fadd
sbb
inc
add
xchg
xlat
push
sbb
inc
or
and
jne
xor
jecxz
pop
test
xchg
jns
pop
jmp
xor
pop
cmp
aas
shl
test
and
push
call
sbb
add
ror
push
xchg
outs
sbb
dec
lock
add
iret
gs
add
adc
xchg
aam
mov
js
sub
xor
in
or
and
xchg
popa
sbb
sub
(bad)
fmul
fadd
pop
inc
(bad)
fst
mov
aam
push
inc
dec
cmp
or
inc
cli
mov
hlt
and
or
sub
test
mov
popa
add
fnstcw
addr16
jmp
aas
jne
adc
div
sbb
dec
adc
mov
aam
adc
ret
pushf
jns
add
xor
movs
push
push
and
mov
retf
add
ror
sbb
rcl
xsha1
cmps
push
cmp
cli
add
pop
or
sbb
sub
shl
xchg
add
in
cmp
sub
inc
in
sub
ret
in
mov
add
push
loopne
pop
and
cmp
pushf
ror
sbb
cmp
(bad)
lock
or
xor
(bad)
jno
sub
mov
or
shr
push
or
pop
sbb
sbb
dec
sbb
popa
cmp
je
pop
mov
inc
dec
sbb
and
xchg
push
test
and
sbb
fld
adc
jecxz
add
adc
adc
dec
push
xchg
push
xchg
stos
mov
add
fist
xchg
cwde
sub
sub
add
sbb
retf
or
adc
mov
add
inc
test
add
adc
pop
pop
ret
sbb
dec
add
mov
fist
and
add
scas
movs
add
mov
sub
dec
cmp
inc
xchg
push
aad
inc
or
pop
push
pop
fcom
adc
pop
add
sti
sub
and
or
pusha
(bad)
add
push
dec
test
mov
lds
jg
movs
dec
(bad)
pop
imul
dec
pop
arpl
dec
add
inc
sbb
cmp
adc
retf
nop
das
dec
mov
add
push
or
cli
add
inc
push
dec
mov
sar
stc
or
xor
mov
inc
adc
xor
aam
(bad)
xchg
mov
mov
dec
mov
jo
es
add
jno
xchg
cmc
cmps
pop
xchg
xchg
mov
add
adc
sti
cmp
lea
or
add
dec
jb
adc
inc
mov
loope
repz
push
cld
repz
push
fmul
sbb
arpl
xchg
fstp
push
push
xor
scas
aam
rcr
adc
sub
fild
fistp
xchg
(bad)
aam
mov
(bad)
fdivr
loopne
or
adc
test
inc
or
jnp
mov
aam
jbe
adc
add
arpl
fld
test
mul
inc
fcomp
inc
pop
inc
lods
mov
or
sbb
mov
mov
jo
adc
sbb
adc
xor
(bad)
sub
lahf
or
add
inc
or
hlt
(bad)
or
cdq
or
jns
mov
in
dec
or
loop
cli
or
shl
adc
int
push
rcl
loope
cmps
cwde
frstor
lock
ret
inc
call
fdivr
cs
mov
mov
scas
in
fild
add
add
add
lds
push
mov
push
and
ret
clc
add
mov
addr16
popf
jg
dec
ret
and
add
call
add
add
les
sbb
add
xor
dec
ret
dec
dec
add
inc
jne
mov
dec
xor
fsub
push
inc
mov
or
or
ins
inc
aaa
add
mov
adc
adc
sub
add
xchg
add
push
mov
cld
or
jmp
push
sbb
pop
jno
cmp
pop
hlt
jne
arpl
push
hlt
push
test
pop
or
test
lods
push
sar
in
ret
pop
repz
pop
and
call
fwait
adc
cmp
xor
cmp
sub
add
fcom
sbb
jmp
jge
add
fadd
and
and
sbb
(bad)
mov
enter
cld
outs
hlt
or
or
or
push
sbb
lea
scas
movs
cmp
pop
cmp
in
test
push
fs
or
jo
cmp
cmp
mov
jge
add
cmps
dec
pop
pop
jge
add
sub
sub
inc
popa
sbb
fidiv
mov
jp
iret
jle
push
pop
cmp
add
add
leave
mov
push
mov
inc
in
sub
or
or
mov
sbb
lahf
and
sbb
sub
adc
cs
movzx
or
and
pop
ins
or
adc
and
dec
and
mov
out
jae
cwde
jp
retf
lea
pop
xor
dec
jbe
xor
mov
push
cmp
mov
call
or
cmp
cmp
mul
loopne
adc
sub
xor
add
leave
xchg
xor
or
hlt
outs
pop
scas
push
adc
mov
jmp
inc
pop
imul
(bad)
push
or
es
add
push
ss
(bad)
call
mov
in
push
mov
pop
jne
xchg
sub
sub
push
test
and
aam
mov
jne
xchg
xchg
pop
fidivr
adc
adc
ja
fs
dec
xor
jo
out
jp
test
mov
or
jge
jo
test
ror
mov
or
mov
xor
and
and
mov
rcr
adc
fisttp
mov
inc
fs
rcl
fadd
rcr
scas
xor
add
clc
and
mov
hlt
movs
lods
jo
jns
xor
(bad)
sub
inc
or
test
test
rcl
add
lea
pop
jle
xchg
or
test
test
lods
push
cmp
in
jns
movs
sub
sbb
xchg
dec
loop
sbb
sub
rol
push
leave
shl
test
add
sahf
xchg
popa
mov
hlt
sbb
call
pop
and
nop
and
imul
adc
adc
loopne
sbb
dec
test
jge
xor
sub
jne
test
dec
xor
dec
or
jns
xchg
or
inc
xchg
sub
xchg
inc
fidiv
pop
xor
daa
mov
nop
(bad)
dec
pop
adc
clc
xchg
cli
cmp
xchg
xchg
cmp
(bad)
mov
push
dec
inc
or
push
mov
and
sbb
movs
mov
in
mov
test
mov
or
aaa
je
inc
jno
test
jecxz
es
stc
sub
or
add
aam
inc
push
or
inc
add
jmp
jl
adc
adc
push
dec
dec
cmp
js
or
jns
adc
call
cmp
inc
js
dec
in
and
dec
push
bound
and
xchg
stos
xor
and
or
pop
out
xchg
pop
test
xchg
dec
femms
(bad)
shl
jb
adc
in
fcomip
push
call
das
jl
mov
dec
mov
shr
xchg
or
push
push
mov
push
and
add
inc
pushf
add
lea
mov
inc
mov
rol
fcmove
addr16
(bad)
xor
cmp
shl
dec
inc
mov
out
adc
enter
jnp
jns
pop
add
mov
or
adc
ins
aas
cmp
pop
imul
and
daa
pop
rcr
mov
cmp
xchg
or
mov
jle
jns
ror
adc
add
jg
and
and
shl
dec
fucomip
sti
test
popa
add
adc
fld
std
mov
fist
lea
or
xchg
sub
push
dec
push
mov
add
xor
adc
add
fs
or
cld
inc
cmp
and
xchg
or
cmp
in
call
(bad)
xchg
ret
mov
hlt
(bad)
arpl
(bad)
sub
in
in
(bad)
lock
hlt
inc
es
cmps
mov
fdivr
fcom
xor
and
in
xor
and
fsub
in
adc
inc
xor
mov
enter
push
mov
mov
jns
in
dec
(bad)
sar
aam
cmps
push
enter
adc
push
push
loopne
cmp
mov
mov
mov
mov
inc
dec
xlat
lods
(bad)
pop
mov
mov
mov
(bad)
mov
mov
ja
out
xchg
mov
add
and
pop
lea
mov
bound
and
inc
or
or
dec
pop
pusha
push
(bad)
mov
add
das
mov
xchg
and
and
rcl
adc
or
add
lea
jb
or
lea
sub
or
test
jb
add
nop
add
inc
push
test
add
ins
jo
jns
gs
or
fs
push
ins
jo
cmps
sbb
test
jmp
inc
push
pop
pop
inc
call
jb
push
push
pop
pop
and
jb
and
adc
xchg
jmp
stos
dec
aad
pusha
cmp
pop
sbb
fs
xor
cmp
test
or
fld
inc
push
cmp
add
pop
mov
call
push
cmp
push
add
or
jns
div
add
push
xchg
xchg
push
popa
loopne
push
in
inc
adc
xor
call
mov
pusha
daa
mov
sti
jmp
pop
sti
add
inc
pop
sub
fcom
jae
and
test
fcom
jnp
xor
sti
jne
je
das
(bad)
cmp
sahf
push
mov
mov
push
sti
fadd
xor
push
mov
adc
and
test
aaa
aas
xor
add
jmp
pop
rcl
jo
or
inc
add
adc
push
or
aas
stos
dec
push
sbb
hlt
movs
shr
adc
mov
sbb
nop
and
sbb
or
inc
test
mov
nop
mov
mov
mov
mov
mov
gs
and
adc
sbb
outs
adc
or
jg
xor
or
test
inc
mov
jg
lahf
add
add
xor
lahf
adc
adc
adc
loope
inc
movs
sbb
sbb
or
adc
in
and
inc
xchg
xor
and
pop
fcom
shl
or
jg
push
sbb
xchg
or
adc
and
in
or
aad
add
call
and
pop
cdq
test
popa
xor
xor
inc
sub
push
xor
fcomip
dec
xchg
movs
push
mov
inc
cmp
hlt
hlt
clc
xor
fs
fisttp
jne
adc
mov
push
(bad)
mov
retf
or
mov
and
pop
sub
es
mov
ret
dec
popa
and
jnp
es
iret
add
sar
fimul
sbb
add
cmp
sub
sbb
rcr
pop
or
lahf
in
xor
js
sub
pop
sbb
lods
std
adc
jbe
(bad)
xlat
and
add
dec
sub
jecxz
adc
cmc
adc
fwait
adc
or
daa
xchg
mov
call
mov
lahf
push
inc
sub
scas
sbb
jb
pop
aad
cmp
cmp
inc
test
add
or
inc
sbb
and
or
push
aas
dec
mov
lahf
dec
scas
sub
adc
mov
push
jns
fwait
or
adc
lds
push
mov
inc
sbb
xor
push
sbb
and
pop
in
mov
dec
aas
pop
call
push
inc
loopne
jbe
jae
add
pusha
call
cmp
pop
in
cmp
or
fs
retf
adc
fs
stos
mov
bound
mov
imul
aas
or
inc
jle
into
ins
sub
pop
iret
jne
xor
adc
call
push
push
sahf
sbb
sbb
pop
sbb
mov
mov
ja
ins
ss
fsubr
inc
(bad)
sub
sub
mov
or
ins
push
into
fdivrp
add
pop
jl
push
push
dec
mov
push
fdivr
retf
lock
xor
mov
ins
jmp
mov
ja
and
mov
jge
xor
cmp
push
int3
push
popa
lods
or
sub
nop
mov
test
mov
adc
sbb
lahf
rol
push
dec
add
sbb
xchg
xchg
add
xchg
add
test
cdq
je
and
jmp
fld
pop
sbb
fistp
retf
add
add
jo
in
mov
sbb
lahf
mov
add
jo
adc
aas
inc
test
movs
psubb
call
arpl
add
rol
ret
scas
add
push
mov
mov
iret
xor
mov
push
cmp
mov
jb
adc
bound
(bad)
aam
mov
adc
dec
xor
sbb
int3
xchg
mov
test
cmps
adc
jecxz
xor
sbb
in
cmps
dec
mov
movups
int3
mov
nop
rcl
jmp
in
mov
and
add
pop
mov
leave
packssdw
pop
dec
popa
push
push
push
xchg
mov
xchg
add
inc
add
adc
mov
inc
test
push
das
test
mov
mov
push
loopne
(bad)
sar
or
xor
jmp
push
mov
xchg
pop
imul
add
rol
inc
cmc
dec
ret
mov
dec
add
mov
xlat
xor
lea
push
stos
inc
dec
mov
sub
imul
into
mov
or
mov
jo
shl
mov
sub
or
rcl
push
mov
retf
push
ja
jmp
lods
mov
loopne
es
sti
mov
add
mov
cdq
(bad)
cmp
jns
jns
cmp
adc
call
pop
fdivr
movlps
sar
dec
pop
jmp
push
pop
jbe
push
jb
push
in
dec
pop
push
add
or
daa
pusha
xchg
nop
add
sub
push
fadd
outs
pop
sbb
sbb
cwde
sbb
fs
xchg
popa
inc
xchg
add
cs
les
pop
lds
dec
cmp
stos
mov
push
adc
enter
inc
push
sahf
pop
add
pop
or
add
fisubr
mov
icebp
mov
pop
and
xchg
or
test
cli
pop
lahf
or
(bad)
sub
shl
loop
ja
inc
in
xor
xchg
pop
inc
xlat
clc
loop
dec
ret
ror
xchg
add
stos
or
add
pop
jle
inc
test
dec
mov
pop
add
fwait
add
test
adc
cmp
add
js
ins
aam
ins
add
in
clc
and
out
push
iret
and
dec
dec
out
and
cmps
or
sti
mov
pop
jmp
push
lock
and
xchg
sub
add
adc
dec
inc
adc
or
div
mov
cmp
inc
pop
pop
test
add
inc
mov
add
inc
ja
sub
add
js
inc
cwde
inc
add
jle
daa
mov
or
and
mov
int3
xchg
jl
fild
mov
pop
inc
push
or
dec
test
lock
inc
cmp
and
rol
clc
push
or
shl
sub
add
fisub
push
adc
xchg
mov
xchg
leave
movs
push
mul
inc
test
ret
rol
xchg
or
test
push
pop
xchg
jne
outs
loope
mov
sub
push
push
push
xchg
pusha
mov
xchg
retf
sub
ja
pop
fwait
dec
es
fwait
dec
add
push
sub
pop
popf
inc
cld
mov
pop
in
mov
jb
mov
push
outs
arpl
add
das
inc
adc
or
aaa
push
scas
movs
xchg
scas
jmp
int3
aas
sub
and
and
inc
cs
mov
cwde
icebp
cmp
ret
hlt
dec
jmp
sbb
adc
jmp
in
or
lock
xchg
jle
cmc
or
mov
movs
adc
lods
push
mov
dec
pop
les
add
test
test
ror
popa
or
jecxz
test
popf
adc
pop
sbb
sbb
aam
into
fwait
or
icebp
fsub
push
or
les
push
push
aam
outs
js
sbb
add
and
or
fwait
push
mov
out
dec
and
adc
and
pushf
lahf
xchg
cmc
add
fstp
loopne
and
sub
aaa
xor
mov
dec
dec
sbb
sbb
sbb
inc
push
push
push
add
jmp
inc
lock
lahf
add
aas
jmp
xchg
add
and
jle
es
cmp
imul
add
sub
je
push
stos
add
inc
and
movs
xchg
dec
sub
inc
repz
add
sbb
sub
add
out
pushf
pop
xor
lds
and
push
lea
and
or
scas
cwde
adc
mov
lahf
call
shr
push
aaa
sub
dec
mov
add
js
adc
ret
pop
clc
sbb
or
dec
dec
jne
adc
mov
dec
push
or
sbb
adc
inc
rol
add
std
cmp
mov
add
in
nop
adc
mov
pop
adc
add
jb
adc
(bad)
push
add
jns
sar
and
add
mov
add
cmps
mov
adc
inc
cs
xor
fdivr
push
or
clc
jg
or
(bad)
pop
lods
inc
enter
inc
xchg
mov
adc
movs
add
add
hlt
sar
xor
or
push
and
adc
retf
cmp
or
neg
pop
sub
in
push
pop
push
mov
xor
and
push
pop
shl
add
je
or
and
inc
sbb
mov
mov
or
push
sbb
sub
add
or
daa
jle
sub
lea
mov
add
jecxz
aas
shr
sbb
sbb
inc
push
loope
mov
add
cdq
fild
imul
dec
stos
ror
inc
add
pop
inc
or
dec
and
dec
adc
add
add
loope
dec
inc
or
jb
pusha
loope
dec
add
loope
pop
outs
pop
and
and
dec
mov
in
inc
dec
xlat
push
test
loope
add
adc
add
loope
add
jb
shr
loope
add
sbb
in
add
or
or
loopne
test
push
lock
sbb
out
sbb
ficom
ins
add
dec
sbb
adc
je
cmp
sbb
push
sete
imul
or
sub
and
dec
push
cmp
cmp
dec
das
and
nop
or
push
(bad)
(bad)
popf
push
dec
push
cmp
sbb
pop
xchg
adc
fmul
les
sbb
mov
or
xor
lahf
fwait
aam
pop
mov
lock
mov
mov
or
cld
mov
nop
test
or
dec
mov
je
sbb
bound
mov
mov
imul
sbb
adc
jb
push
pusha
(bad)
cmp
rol
sbb
pop
loope
mov
ret
push
cmp
jbe
pushf
cld
aaa
mov
sbb
cmp
push
add
add
xchg
add
adc
idiv
inc
dec
ins
sub
add
in
adc
push
cmp
fild
adc
pop
pop
dec
add
rcr
add
adc
xor
outs
loopne
lods
or
mov
ret
mov
inc
aas
sub
sbb
sahf
jno
xor
cld
fmul
clc
cmp
pop
inc
rcl
cmc
mov
push
pop
jmp
stos
fwait
sub
push
add
adc
fsub
lahf
xchg
popa
sub
pop
mov
scas
or
add
push
xchg
add
dec
dec
aam
pop
cmps
jno
push
ret
push
popa
adc
and
shr
loopne
cmps
sbb
stos
fdivr
movs
sbb
jl
cmp
add
add
retf
call
jmp
rep
rcr
int
mov
sbb
inc
mov
push
jne
pop
sub
adc
ror
xchg
daa
jecxz
fiadd
dec
push
retf
shl
fisttp
loope
push
pop
push
scas
inc
add
sub
add
mov
sbb
faddp
rol
and
in
sbb
test
test
jge
inc
aaa
leave
fadd
fldcw
inc
cmps
push
(bad)
fmul
push
sub
aas
push
in
add
mov
adc
mov
dec
and
cmp
sub
popa
jl
sar
push
in
int3
cmp
mov
xor
pop
(bad)
cmps
sub
inc
or
cdq
fsub
xchg
or
add
test
pop
or
mov
in
shl
fild
or
mov
mov
or
(bad)
scas
ins
mov
mov
arpl
daa
push
adc
dec
mov
leave
mov
pop
cdq
jmp
add
push
xchg
call
mov
or
add
or
sbb
xor
(bad)
mov
jmp
push
daa
sub
mov
popa
aas
add
lahf
loopne
add
in
and
dec
cld
int3
inc
add
pop
inc
jae
lsl
or
add
sub
lahf
sbb
push
or
or
call
in
ss
or
add
inc
adc
lahf
or
xchg
mov
sbb
mov
mov
cs
mov
cmp
dec
or
aaa
and
mov
fnsave
or
fst
aad
mov
sbb
mov
or
call
fbld
inc
stos
mov
fild
push
mov
xor
push
fcom
je
push
sbb
fbld
sbb
int
ret
sbb
ror
std
sbb
sbb
xchg
retf
movs
and
sub
inc
call
pop
push
adc
add
cmp
(bad)
and
push
or
out
ret
sbb
add
mov
add
add
outs
push
ror
mov
or
xor
lahf
pop
and
push
imul
mov
es
aas
pop
sbb
ss
sub
push
cs
sub
mov
or
ins
and
adc
inc
adc
dec
or
pop
ret
ins
adc
sbb
sub
xor
call
fild
adc
mov
adc
sub
add
test
inc
pop
push
add
lods
lahf
cmps
sub
(bad)
mov
pop
ret
pop
mov
add
xor
pop
inc
loop
push
mov
daa
dec
jg
mov
and
xor
mov
mov
adc
push
push
outs
loope
add
lods
or
rol
mov
xor
popa
fild
add
adc
or
adc
mov
mov
mov
lods
pop
pop
add
or
push
dec
in
mov
aas
add
icebp
loopne
icebp
mov
add
and
jo
add
mov
lahf
add
xchg
ss
xor
cmp
xchg
jmp
mov
icebp
or
dec
cmps
sahf
fdivr
and
push
shl
push
dec
push
xchg
adc
pushf
jge
adc
inc
sbb
sbb
push
pop
or
dec
pop
mov
sbb
adc
stc
mov
out
xor
push
push
and
cmps
sahf
or
inc
jg
push
nop
cmp
sub
cmp
pop
sar
(bad)
sbb
dec
jb
mov
and
ror
iret
inc
retf
or
push
xor
loopne
enter
adc
or
out
repnz
arpl
loope
xlat
(bad)
rcr
add
adc
pop
xlat
xchg
aam
pop
add
pusha
mov
sbb
inc
cmp
sub
fcom
and
sbb
rcr
or
xchg
ret
and
test
sub
xor
push
mov
or
dec
(bad)
or
or
jl
bound
and
and
test
ins
loop
fwait
jle
enter
les
icebp
jmp
ss
or
add
push
add
add
adc
cs
aam
test
or
inc
js
daa
or
inc
sbb
jns
jl
adc
inc
fidiv
ret
scas
pusha
sbb
mov
ret
xor
lea
pop
pop
clc
cwde
inc
and
(bad)
sar
dec
adc
sbb
adc
dec
loopne
mov
ret
pop
aaa
mov
jb
(bad)
fs
rcr
and
stos
jmp
call
push
stc
cld
push
les
mov
or
lds
cmp
ffreep
inc
adc
data16
pop
mov
inc
imul
cmp
hlt
test
je
xchg
pop
push
xchg
pop
adc
dec
pop
push
sbb
and
inc
adc
xor
xor
add
clc
sahf
xor
adc
mov
ret
adc
dec
cmp
dec
cmps
add
sub
aas
loopne
mov
cmp
and
sub
stos
fs
and
sub
fbld
movs
sub
push
dec
scas
or
popa
cmp
test
adc
fist
bound
dec
push
dec
int3
cmps
mov
sbb
jg
mov
push
adc
mov
and
and
xor
xchg
ins
pusha
or
call
adc
cmp
test
mov
mov
jo
add
lock
pop
xchg
mov
pop
add
imul
sbb
pop
or
adc
xor
mov
sub
add
test
data16
mov
mov
sbb
inc
add
sub
and
inc
and
jg
repz
inc
adc
cmp
and
loope
xchg
xchg
mov
and
jno
jl
je
std
test
push
lock
js
fdivr
sub
test
lock
ffreep
push
aaa
cdq
pop
popa
mov
xor
sti
clc
push
dec
inc
ret
mov
inc
jl
jo
xchg
inc
add
test
f2xm1
add
sub
jmp
and
sub
in
cmp
fidiv
test
bound
push
lea
mov
mov
inc
push
call
push
test
xchg
and
or
popf
dec
dec
sbb
xor
add
pop
test
dec
inc
add
dec
ins
adc
sbb
lds
add
hlt
jo
and
add
and
stos
xor
leave
xchg
mov
in
sahf
ins
sbb
push
pop
inc
or
in
sbb
or
test
in
push
jo
stc
adc
adc
cdq
cmp
loop
shl
addr16
and
dec
dec
fdivr
xchg
fiadd
add
call
popaw
jecxz
cmp
in
push
cmp
(bad)
pop
mov
outs
dec
pop
fmul
cmp
jbe
out
adc
add
add
jbe
xchg
je
sub
push
test
pop
xchg
pop
cmp
test
rcl
dec
mov
shr
dec
jg
jno
sub
cld
xor
inc
sbb
adc
push
inc
inc
pop
mov
shr
loopne
adc
xor
test
sub
or
cmps
aaa
shr
inc
icebp
jno
lds
and
movs
ins
jns
int3
add
adc
sbb
test
sbb
outs
dec
nop
movs
fiadd
in
sar
adc
cmp
inc
or
frstor
add
push
int
call
imul
cs
sub
and
out
mov
cmps
pop
inc
imul
jns
sbb
mov
mov
xchg
pop
mov
and
or
jg
(bad)
std
jne
popf
ret
adc
mov
add
sbb
imul
dec
mov
les
adc
or
call
lock
jnp
or
jle
test
sbb
call
inc
add
or
popa
mov
or
push
mov
or
cmp
je
pop
add
xor
xor
sub
pop
push
dec
xchg
nop
ins
add
sub
adc
adc
or
imul
rol
(bad)
sub
je
nop
dec
or
(bad)
cmc
enter
jmp
adc
rcl
add
and
xlat
pop
loopne
sbb
hlt
jmp
movs
push
add
dec
or
mov
sub
xchg
sbb
dec
jne
push
shl
inc
cld
packsswb
pop
sub
aas
mov
gs
data16
les
int
inc
mov
pop
or
test
jo
dec
push
sbb
mov
xchg
mov
xchg
sbb
adc
mov
jns
sbb
popa
das
daa
push
inc
mov
xor
pop
and
shr
xor
jecxz
inc
adc
adc
rol
mov
mov
call
dec
sbb
mov
pop
test
pop
enter
shr
and
pop
sub
sub
ror
mov
movs
nop
les
or
push
hlt
push
jns
and
std
pop
clc
sbb
mov
adc
push
xchg
sbb
inc
jmp
add
sar
and
push
add
pop
js
ins
sbb
rcr
mov
call
outs
repz
sub
add
sub
mov
sub
jecxz
arpl
sbb
inc
inc
(bad)
mov
movs
les
div
nop
ins
int
into
mov
dec
push
and
shl
fisubr
sub
sahf
in
add
and
pusha
or
and
pop
std
add
push
add
mov
std
shr
movs
dec
ror
jmp
es
add
cmp
adc
nop
les
inc
inc
addr16
enter
add
jmp
movs
push
rcl
lock
inc
out
dec
dec
or
out
push
dec
sub
xchg
lock
and
pop
imul
popa
or
or
push
mov
lods
imul
fst
lock
cdq
dec
std
add
add
or
push
pop
inc
cwde
outs
adc
arpl
jns
jle
cmps
ds
xor
jmp
jne
jp
inc
push
and
dec
xchg
pop
out
sar
div
pop
cmp
push
add
pop
ficomp
je
mov
mov
cmp
inc
sbb
rol
and
(bad)
test
sub
retf
push
xor
add
dec
and
jo
pop
mov
fadd
rcr
inc
in
in
nop
or
mov
and
jl
dec
clc
stos
in
inc
mov
add
hlt
inc
cmp
cwde
sub
jnp
fs
in
or
outs
or
imul
and
push
or
adc
rcr
pop
and
add
adc
mov
mov
mov
movs
add
jo
lea
nop
test
jp
cmp
push
ficom
push
rol
add
gs
ror
or
mov
cmp
sbb
sub
repnz
xchg
cmp
cmp
pop
lock
aam
(bad)
adc
add
sub
jne
cmp
sub
enter
inc
scas
ret
add
push
adc
add
in
mov
mov
rol
jg
mov
loope
and
fs
add
add
adc
ss
jle
out
arpl
pop
xchg
fsubr
dec
ret
lds
inc
mov
ficom
pop
popf
lds
sahf
add
mov
adc
jne
hlt
ror
stc
retf
test
ror
clc
mov
sub
and
jle
dec
xchg
popa
out
das
mov
lods
inc
loop
jmp
pop
daa
fist
xchg
jmp
lea
inc
mov
shl
test
lock
enter
and
pop
jmp
jmp
movs
aam
add
mov
sub
or
shl
not
xchg
xor
xchg
pop
shr
and
mov
add
mov
lea
and
adc
das
pop
or
jle
adc
jmp
jno
add
pop
cmc
jl
hlt
and
push
adc
pop
scas
test
add
jno
pop
mov
mov
push
push
lock
lods
lahf
js
test
bound
adc
or
jmp
cmps
sbb
or
or
and
sub
mov
push
adc
inc
inc
push
or
inc
cmp
jl
dec
cli
adc
fadd
sub
add
inc
sub
mov
fimul
adc
inc
mov
xchg
sbb
adc
dec
mov
loop
xor
mov
or
inc
mov
movs
cmp
test
aad
inc
(bad)
fisttp
or
sub
imul
mov
mov
pop
cmc
std
sub
push
push
lahf
data16
(bad)
pop
imul
inc
dec
mov
cs
add
test
or
arpl
aaa
lods
fbld
sub
jb
fld
sub
push
mov
add
or
mov
mov
or
inc
test
shr
xlat
add
(bad)
sub
cmps
inc
loopne
cmp
loopne
and
or
lock
add
sub
sub
sbb
inc
push
xchg
xor
fdivr
les
iret
xor
ds
hlt
jne
ins
retf
in
add
xchg
push
aas
add
adc
rcr
(bad)
shl
fist
push
icebp
cdq
or
or
sar
les
pop
dec
mov
jecxz
inc
mov
jmp
mov
and
(bad)
pop
adc
inc
cdq
shl
mov
dec
and
rol
xchg
jne
add
xchg
js
push
dec
jmp
mov
or
cmps
mov
ret
call
(bad)
movs
cmp
lea
js
mov
imul
and
jne
inc
mul
push
push
dec
ins
add
xor
cmp
xchg
push
push
or
shr
pop
dec
add
mov
xor
sti
sub
add
mov
sub
fisub
jmp
cwde
loop
pcmpgtd
or
sbb
inc
ins
(bad)
icebp
ret
pop
mov
mov
loopne
add
adc
inc
lock
test
xor
mov
mov
imul
mov
sbb
dec
loopne
add
pop
pop
adc
rcl
repz
rol
or
ss
dec
pop
femms
mov
bound
mov
pop
pop
sub
mov
sbb
scas
xor
loopne
push
pusha
int
enter
les
mov
sub
fld
add
push
dec
and
xor
rol
jne
dec
inc
test
adc
mov
je
mov
adc
int3
xchg
mov
push
xor
shl
xchg
push
xor
in
add
sbb
adc
test
and
mov
mov
retf
lock
pop
mov
dec
and
jo
pop
movs
jle
add
add
fisttp
outs
jmp
dec
or
mov
lds
jmp
push
mov
add
ja
mov
dec
aas
jg
cmps
mov
push
inc
jns
adc
cmp
or
xchg
movs
or
dec
add
icebp
sbb
cdq
sub
add
rcl
jno
add
push
jg
mov
add
push
add
mov
pop
gs
and
shl
add
mov
pop
addr16
sar
push
xor
push
aas
(bad)
rol
adc
adc
cmc
icebp
lods
push
cmc
xchg
mov
jl
repz
jg
cs
aas
cmp
shr
add
add
push
lahf
pop
lock
(bad)
in
in
sar
push
adc
jo
inc
je
jmp
sbb
sbb
xor
xchg
and
jl
iret
cmp
add
jg
jns
cld
xchg
mov
adc
test
scas
lock
adc
nop
aam
cmp
movs
test
fwait
ret
sbb
mov
mov
pop
lahf
push
jecxz
es
xchg
jo
pusha
pop
lock
inc
mov
fwait
or
inc
sbb
and
test
in
call
push
pop
pop
adc
daa
pop
call
mov
(bad)
add
push
push
xor
and
bound
jl
mov
rcl
dec
arpl
js
sbb
mov
mov
sub
adc
add
(bad)
(bad)
and
mov
lock
mov
xchg
add
mov
ret
add
in
xor
fcom
call
pop
jb
shl
mov
push
mov
lea
test
shl
out
sbb
sbb
fbstp
pusha
jne
jp
or
js
adc
lahf
retf
dec
xor
dec
retf
dec
mov
and
add
push
sub
fadd
add
jmp
es
neg
retf
jns
dec
or
js
ja
mov
adc
sti
inc
cmps
or
stos
jnp
mov
dec
cli
sti
and
mov
push
sub
or
cmp
rcl
push
cmp
lock
mov
cdq
adc
movs
lock
xchg
or
arpl
add
add
xor
xor
xor
and
retf
test
xchg
lea
push
in
xor
(bad)
(bad)
mov
lds
por
(bad)
or
aad
cmp
lea
jae
sbb
loopne
test
jne
ret
mov
or
scas
jge
add
pop
enter
test
mov
ds
adc
dec
dec
(bad)
fst
pop
das
cmps
sub
cmc
add
cmp
pop
push
adc
adc
and
in
add
xchg
fucomp
movs
sbb
push
pop
mov
inc
push
sub
mov
repz
fisubr
pop
mov
cmps
adc
add
movs
cmp
inc
add
jmp
jmp
sbb
cdq
sub
dec
cmp
lods
loope
(bad)
mov
imul
arpl
aam
adc
dec
xor
adc
cmps
cdq
ror
ja
or
add
cmp
push
add
add
shr
nop
pop
push
add
mov
and
fs
pop
js
jae
adc
ret
pop
jmp
lods
(bad)
(bad)
ins
stc
jns
pop
lods
or
xor
dec
sbb
and
and
push
mov
nop
add
mov
xor
sbb
ss
sub
pop
lahf
inc
aas
mov
nop
inc
dec
dec
cmc
mov
mov
sbb
xchg
push
adc
inc
pop
loope
mov
cmp
pop
dec
adc
lahf
pop
push
in
mov
inc
mov
je
jmp
cmc
push
add
lahf
jbe
cmp
cmp
add
sub
cmp
rcr
or
or
mov
ret
lahf
jmp
loopne
jg
cmc
int3
hlt
push
add
scas
or
xor
pusha
add
inc
pop
jg
clc
and
pop
push
push
imul
add
pop
and
and
or
lahf
xchg
push
inc
push
stos
dec
sub
rol
mov
adc
mov
or
test
mov
jno
sbb
add
mov
lds
test
test
mov
add
test
add
mov
pop
ret
pop
mov
xchg
into
mov
or
jo
add
test
add
inc
jg
adc
(bad)
pop
or
daa
(bad)
iret
adc
mov
or
add
dec
cs
mov
adc
jg
in
mov
iret
mov
add
and
neg
add
or
or
dec
cmp
and
bound
jl
add
lahf
or
jo
aas
sub
adc
adc
hlt
mov
pop
idiv
add
push
dec
pop
aas
or
push
jns
jmp
sbb
pop
sbb
and
lods
in
lea
or
add
(bad)
mov
and
fild
aas
out
jg
ror
enter
dec
clc
cs
lds
lods
inc
(bad)
inc
inc
add
inc
or
fcmovnb
aas
rol
and
push
adc
aaa
movs
mov
and
mov
pop
inc
pop
add
add
mov
add
push
aas
lods
xchg
fcom
pop
dec
imul
jne
and
aad
dec
push
lds
das
les
test
jl
nop
pop
aam
sbb
sub
dec
enter
ins
add
adc
lahf
sbb
mov
and
dec
add
pop
sbb
ror
cld
test
push
call
int3
movs
push
adc
and
dec
xchg
loope
sbb
cmp
or
fmul
push
ret
add
ror
xchg
push
and
dec
mov
xchg
or
pop
rcl
xchg
mov
push
sub
ret
mov
bound
dec
pop
outs
lock
ins
hlt
xor
sbb
and
dec
fsubr
enter
js
pop
jno
rcr
xor
mov
lea
lahf
lods
pop
mov
lock
pop
ja
xor
call
pop
rol
ror
bound
push
jno
inc
sbb
or
pusha
cmp
mov
sbb
pop
stc
jl
bound
sub
or
loopne
test
push
outs
or
jmp
call
mov
add
pop
or
or
ret
dec
int3
or
xchg
push
push
mov
pusha
pop
and
xchg
test
pop
cmps
movs
cmc
jmp
sbb
or
mov
cmp
push
adc
jecxz
arpl
shr
adc
mov
sbb
test
sbb
or
xor
sbb
or
mov
test
cmc
mov
push
fisttp
add
pop
cmp
inc
xor
aas
hlt
lahf
add
cmp
adc
and
sbb
add
bound
(bad)
les
mov
adc
ret
rcr
sti
not
jmp
and
dec
std
nop
xchg
dec
mov
jg
scas
in
push
and
add
call
sbb
lds
inc
mov
call
pop
pushf
xchg
addr16
(bad)
push
frstor
add
push
adc
xchg
inc
enter
pop
add
arpl
jns
mov
or
and
and
xchg
jl
es
and
aam
jb
ds
inc
shr
jmp
xor
xor
xor
mov
sbb
dec
or
or
outs
push
cld
jmp
jmp
add
test
(bad)
(bad)
cmp
mov
sub
pop
xor
cmc
mov
sub
inc
call
fist
cs
hlt
out
jmp
inc
dec
call
add
xchg
fcom
test
push
or
test
movzx
add
cmp
and
add
cmp
or
add
pop
add
inc
mov
mov
inc
push
fst
jg
sbb
xchg
sub
xor
in
sub
daa
push
adc
fisttp
add
xor
rol
movs
popf
push
sub
sub
(bad)
cdq
call
sub
adc
xchg
and
pop
mov
jmp
pop
push
cmp
scas
or
je
test
fld
ins
or
push
dec
mov
push
push
adc
or
sub
dec
pop
or
jae
or
call
xchg
jecxz
mov
std
popa
pop
(bad)
mov
or
je
sbb
or
cwde
rol
jmp
imul
adc
mov
add
pop
push
push
pop
inc
adc
and
inc
add
pop
add
(bad)
cld
cmp
dec
cmp
mov
add
xor
push
lock
jmp
mov
or
or
and
gs
add
je
add
jo
sbb
mov
popa
or
inc
jo
and
xor
add
dec
push
jo
test
adc
cdq
push
inc
cmp
mov
dec
test
mov
call
or
and
je
out
nop
ret
add
(bad)
or
clc
rcl
mov
int
(bad)
ins
pusha
adc
mov
jne
xor
mov
lahf
dec
sub
add
push
addr16
or
or
adc
push
jne
rcl
add
sbb
outs
jg
popf
out
jmp
adc
nop
movs
push
sub
aam
push
jo
int
fmul
mov
jecxz
(bad)
dec
out
test
inc
add
outs
or
cwde
rol
sub
addr16
sbb
das
cmp
dec
push
and
xor
inc
mov
adc
dec
loopne
sub
jg
fimul
cmp
lahf
pusha
popf
pop
sub
lods
mov
sbb
cmp
mov
push
ja
cmp
lds
(bad)
mov
aad
pop
or
lods
fild
rcl
xchg
pop
fisub
jae
mov
add
rcl
or
(bad)
dec
loope
nop
mov
mov
aaa
inc
das
mov
sbb
sbb
sbb
xor
mov
jo
add
ins
ja
push
(bad)
push
imul
popf
aas
adc
(bad)
cmps
and
retf
or
add
jno
add
or
movs
aad
mov
inc
cmp
jg
(bad)
mov
test
leave
(bad)
jae
ins
ins
and
pop
inc
stos
mov
scas
add
imul
push
xor
adc
stos
lea
push
xor
aad
or
pop
mov
add
jl
add
pop
sbb
test
cmp
mov
mov
sbb
jae
sbb
jae
adc
adc
add
(bad)
lea
push
push
popf
push
aas
pop
inc
cmp
jl
push
inc
inc
jmp
mov
inc
mov
aas
jl
test
stos
aas
adc
cdq
push
jg
adc
dec
(bad)
xor
imul
enter
shr
sub
pop
retf
cmp
and
loope
hlt
test
mov
jnp
imul
test
push
gs
push
mov
jmp
jns
je
xchg
xor
pop
jno
inc
outs
ret
inc
and
inc
lahf
mov
push
or
test
int3
or
pop
mov
add
outs
sbb
inc
cmc
xor
inc
jns
sbb
mov
repz
push
adc
or
mov
hlt
inc
ins
add
nop
jp
addr16
lock
loop
sbb
aad
jo
inc
and
mov
xor
adc
and
push
clc
addr16
push
and
fst
xchg
mov
xchg
xor
push
lock
sub
sbb
clc
or
jb
pop
clc
jmp
jge
mov
push
add
xchg
or
push
add
pusha
pop
int3
add
sub
in
imul
cmps
cld
jmp
add
js
cdq
adc
add
adc
cmc
cmp
and
inc
jmp
out
es
fcom
sub
js
test
jg
sbb
(bad)
add
ret
test
adc
jnp
cld
xchg
and
pop
clc
sbb
sub
adc
xchg
jbe
sub
jne
push
sub
push
inc
aam
inc
dec
pop
(bad)
xchg
test
jmp
mov
or
lahf
or
inc
sub
fistp
adc
js
loope
(bad)
push
mov
pop
test
test
mov
mov
jg
mov
stc
push
and
mov
jno
nop
or
jae
xor
push
rcl
ror
movs
push
sbb
push
pop
cmp
adc
xlat
dec
push
mov
int3
int3
call
sbb
inc
mov
loope
adc
xor
jg
jmp
mov
pop
adc
aas
fcom
mov
nop
xor
mov
pop
jbe
lahf
call
and
lods
adc
outs
pop
sub
and
and
or
sub
in
or
enter
cmp
dec
add
dec
add
lahf
mov
jne
shl
fcom
and
inc
popa
leave
sbb
lock
cmp
dec
or
cmp
les
or
shl
mov
jl
lods
jb
jb
aam
fcomp
or
leave
in
fdivr
ins
loopne
xchg
xchg
in
call
and
cwde
add
push
sub
lods
and
push
jg
inc
add
fisttp
adc
fisubr
enter
inc
dec
adc
pop
and
jo
pop
inc
mov
cs
xchg
shr
hlt
pop
inc
in
bndstx
shl
xor
clc
jl
sub
aas
(bad)
gs
pop
data16
sbb
aas
or
retf
push
push
in
xor
adc
jns
cmp
ins
xchg
sub
ins
cmp
jne
sbb
sbb
scas
loopne
sbb
add
or
in
jns
leave
pop
(bad)
es
lods
push
mov
push
cmc
call
arpl
push
add
inc
fsubr
sbb
push
push
jb
pop
call
mov
add
and
gs
fsubr
push
and
inc
push
shl
adc
shl
adc
xor
div
cmp
pop
iret
pop
or
mov
sbb
xor
inc
dec
push
imul
inc
fist
push
or
pusha
mov
sbb
shl
imul
sbb
dec
add
out
push
add
add
cmp
dec
fistp
lds
pusha
in
shr
push
das
or
popa
or
pop
cs
push
mov
into
cmp
add
and
xor
cli
adc
xchg
jle
js
mov
sbb
push
popa
or
ins
(bad)
adc
dec
repz
rol
cmp
ret
xor
mov
in
or
sbb
femms
dec
dec
ins
ins
mov
aam
xchg
add
xchg
and
pop
add
fmul
cmp
push
rcl
adc
int3
sbb
inc
sub
pop
add
pop
lock
jne
in
and
scas
bound
pop
add
les
fcomp
add
jmp
pop
sub
push
fcom
xor
dec
enter
add
mov
push
or
sbb
xor
add
fcom
dec
inc
enter
mov
rcr
sar
xor
faddp
xchg
enter
add
push
inc
out
and
out
jl
int
enter
sub
push
or
(bad)
cmps
mov
pushf
xor
out
enter
sbb
rcl
jp
ds
ror
adc
or
scas
fild
adc
fistp
push
fs
inc
mov
test
push
mov
xor
jecxz
rcr
mov
fwait
js
lock
retf
das
clc
xchg
inc
sub
leave
mov
(bad)
pop
movs
pop
call
mov
aas
mov
pop
and
pop
pop
sub
(bad)
sub
popa
or
adc
jo
(bad)
in
inc
pop
or
lea
push
push
xchg
sub
cs
xor
mov
enter
add
cmp
pop
jb
jmp
mov
pop
test
test
aas
dec
add
mov
pop
repz
push
test
xor
call
adc
and
sar
add
leave
lds
and
pop
mov
movs
or
xor
sbb
mov
adc
shl
stc
mov
inc
rol
mov
cmps
scas
add
push
(bad)
adc
call
add
out
gs
shl
mov
and
jmp
fadd
and
test
lahf
pop
aad
inc
in
jecxz
mov
and
push
pop
dec
loope
cmps
xchg
div
sub
(bad)
mov
dec
and
xlat
in
or
push
adc
jmp
xchg
arpl
enter
aam
mov
sub
fsub
ss
mov
add
inc
jo
pop
aas
and
jae
test
push
push
xor
and
mov
inc
nop
sbb
push
dec
ins
mov
adc
push
xchg
lds
inc
jae
call
xor
pusha
pusha
and
dec
xor
cmp
cmps
in
push
cmp
ret
fistp
sbb
push
sub
jecxz
cmps
and
dec
(bad)
loopne
pop
lock
sbb
sti
lock
or
in
and
fld
cmp
or
mov
stos
jl
xor
(bad)
fsubrp
add
add
or
adc
xor
jl
push
dec
sbb
jg
cmps
xchg
or
and
aaa
and
cmps
push
sbb
pop
inc
or
inc
dec
dec
in
call
loope
outs
xor
jl
mov
stc
jnp
cmps
pusha
js
xchg
add
mov
push
inc
fs
mov
fld
lea
cmp
fs
sar
inc
mov
xchg
lds
mov
mov
int
jnp
stc
icebp
mov
cdq
inc
mov
cmps
rol
adc
jg
out
mov
adc
pop
cmp
inc
ins
mov
fstp
je
sub
cmp
push
pop
pusha
ror
ret
adc
jp
dec
mov
js
jb
adc
or
and
dec
test
loopne
mov
movs
xor
adc
push
jo
sti
cmp
retf
xor
fwait
sub
rcr
cmp
into
rcr
push
inc
add
mov
sbb
ret
sbb
pop
daa
inc
jmp
xchg
stc
cmps
ret
mov
lock
cmp
jg
jo
ret
pop
or
popf
ret
ss
jo
mov
add
push
mov
arpl
sbb
and
mov
test
dec
rol
inc
es
test
jmp
stos
cwde
bound
lods
push
test
fwait
add
xchg
fisttp
add
xchg
fs
cld
sbb
and
jle
or
nop
add
es
ins
daa
push
rcl
outs
scas
inc
and
mov
popa
mov
sbb
imul
shl
pusha
add
add
pushf
ret
sub
stos
jle
(bad)
mov
ret
inc
add
shl
enter
inc
imul
shr
add
pusha
inc
cwde
add
pusha
add
mov
or
push
sar
or
xchg
and
fwait
push
jl
icebp
jo
add
jns
jo
jo
ror
inc
rol
inc
inc
out
mov
das
jbe
cmps
ins
ins
(bad)
lods
or
inc
ins
ret
mov
dec
mov
pop
and
mov
or
jae
push
test
and
add
cwde
mov
jo
lods
nop
add
adc
mov
mov
mov
push
mov
pop
mov
jmp
dec
jmp
inc
fistp
sbb
jg
inc
movs
or
popf
nop
cmp
pop
mov
inc
adc
ja
fiadd
mov
test
xor
pop
sbb
inc
cmp
push
push
and
sbb
movs
nop
aas
movs
mov
inc
or
and
ins
in
sub
jnp
pop
dec
jecxz
add
adc
enter
mov
mov
shl
adc
mov
mov
pusha
shr
inc
pusha
mov
stos
popa
es
popa
in
sub
sbb
mov
jge
in
inc
lods
addr16
sbb
or
sub
popa
lahf
leave
inc
jmp
sbb
sbb
add
mov
pop
loope
mov
push
sahf
add
in
adc
fadd
xor
cmc
push
xchg
popf
popa
rol
pushf
sbb
inc
lods
add
ret
repz
pop
push
mov
lea
js
movs
ss
adc
lea
test
inc
or
cmp
jno
clc
add
addr16
dec
clc
(bad)
xor
adc
leave
mov
pop
lock
jl
hlt
push
lock
ret
daa
dec
lods
cmp
in
daa
or
mov
and
dec
in
mov
test
jg
jo
xchg
dec
xor
shl
xor
ror
add
dec
or
push
jne
call
mov
adc
std
jge
lea
fmul
or
dec
call
mov
lods
sub
daa
mov
and
add
pusha
mov
sbb
or
mov
jp
test
cmp
je
ins
dec
push
jl
sbb
stos
ror
mov
loop
sub
add
stc
add
sbb
cmp
cmp
adc
xchg
je
les
inc
imul
or
mov
test
or
inc
push
mov
inc
add
add
popa
inc
stos
sti
pop
or
jge
and
div
out
add
aad
xchg
sbb
and
add
mov
add
xor
das
dec
test
je
mov
cwde
icebp
cwde
and
nop
jmp
push
dec
ret
clc
add
sbb
pusha
mov
repnz
sub
add
mov
shr
xchg
dec
dec
adc
fadd
cmc
outs
jecxz
scas
popa
(bad)
imul
jno
mov
scas
pop
and
rol
(bad)
pop
popa
addr16
shl
scas
(bad)
mov
mov
push
cmp
add
push
adc
add
xor
cmc
push
out
xor
sub
dec
mov
(bad)
push
dec
mov
and
mov
mov
add
mov
imul
push
mov
retf
or
mov
and
fsub
xor
test
inc
xor
pop
xchg
pop
rol
add
cmp
adc
ja
mov
in
outs
jb
adc
or
push
movs
test
cmp
jbe
adc
test
sbb
cmp
add
fwait
inc
dec
or
dec
dec
add
cmp
sbb
in
daa
cmc
sub
and
rol
add
stos
mov
sub
xchg
test
and
or
push
movs
movs
and
xor
or
stos
daa
(bad)
xchg
ret
dec
cmc
shr
(bad)
inc
outs
mov
sbb
test
mov
add
sbb
xor
dec
sbb
mov
add
ud1
test
sub
(bad)
lods
aas
ret
pop
mov
test
ret
add
sbb
push
mov
adc
sub
mov
jns
jne
nop
push
(bad)
addr16
loopne
leave
mov
add
mov
inc
push
cmp
fdivr
shl
or
xor
je
jae
cmp
add
ror
adc
xchg
dec
ret
ins
arpl
push
lock
pop
or
and
popa
inc
loope
inc
popa
xor
dec
pop
xchg
pop
mov
test
mov
(bad)
pop
sub
inc
pop
push
adc
sub
rcr
stos
jecxz
or
adc
mov
add
add
adc
pop
lahf
jnp
inc
rcl
loop
enter
and
push
and
add
mov
fsub
mov
push
and
rol
cmp
inc
imul
xchg
out
add
pusha
pop
sbb
add
push
hlt
jg
jno
xchg
mov
cmp
xchg
ds
push
lods
push
inc
test
xor
inc
or
sar
jg
mov
and
enter
das
add
add
lock
dec
jae
push
mov
adc
pop
nop
shr
test
cmp
xlat
ds
sbb
cmp
sub
test
mov
rcr
call
lahf
cdq
clc
jmp
jbe
dec
push
pop
lahf
or
lahf
cmp
add
push
sar
std
adc
xor
add
inc
clc
cmp
pop
dec
jl
stos
loope
cmp
aaa
fisttp
or
mov
jmp
or
push
mov
adc
push
mov
and
add
je
fsubr
dec
xor
xor
inc
fmul
inc
xor
jecxz
lea
push
xchg
or
add
sub
movs
inc
dec
or
or
push
push
or
xor
shr
shr
push
popf
bound
add
push
mov
add
inc
arpl
xor
inc
retf
stos
sub
data16
addr16
stos
outs
add
add
fcmovnbe
add
ret
in
or
or
pop
mov
or
inc
xor
pusha
inc
ins
sub
cmp
in
cdq
or
fs
pop
enter
loope
or
sub
mov
xor
outs
pop
fild
cmp
test
popa
in
cmp
xchg
pop
jnp
jge
sbb
push
pop
inc
loopne
or
xor
lock
mov
pushf
shl
adc
pop
fdiv
cmps
dec
dec
loopne
loopne
xlat
es
lea
jb
pop
dec
clc
sbb
clc
ins
pop
push
inc
(bad)
xchg
lods
ret
or
adc
pop
movs
pop
rol
sub
dec
push
cmp
adc
cmp
sbb
cmp
scas
scas
test
shl
movzx
push
sbb
sbb
or
das
in
jae
inc
mov
or
add
or
lock
jne
or
adc
jl
dec
(bad)
xor
in
nop
loop
imul
or
lea
arpl
hlt
dec
adc
jge
xchg
jno
add
in
jo
adc
jp
pusha
pop
push
ja
call
sbb
mov
mov
inc
repnz
les
loop
ror
sub
xor
cmp
jne
or
test
sbb
adc
rcr
dec
sbb
xor
jo
jecxz
xchg
adc
inc
xor
mov
and
mov
sbb
mov
lock
cdq
in
mov
sub
test
hlt
adc
js
popa
adc
add
fist
xchg
aas
or
sbb
mov
bound
lahf
push
out
stos
cmc
stos
pop
jmp
out
pop
shl
add
mov
xlat
push
cmp
sbb
cmp
jle
inc
cmp
test
and
push
cmp
sub
stc
dec
xchg
push
pop
pop
ror
sub
pop
test
arpl
xchg
movs
sub
fdiv
icebp
lea
pop
ins
jg
mov
push
and
fisttp
clc
cmp
outs
dec
loopne
cmp
sub
inc
fcomp
call
retf
add
clc
add
sub
cld
mov
inc
xchg
mov
ins
out
adc
sbb
add
pop
inc
cmp
inc
pop
pop
shr
xchg
pop
sub
xor
imul
adc
jl
dec
push
lds
sbb
and
mov
push
ja
rcr
retf
xchg
mov
mov
lock
pop
lock
pusha
xor
or
or
jmp
push
cmp
vmovaps
scas
pop
ror
mov
nop
xchg
ret
(bad)
push
and
call
sbb
mov
sub
adc
xchg
stos
ror
jbe
inc
add
test
cmp
jmp
xor
inc
jmp
mov
popa
or
push
pop
mov
cld
adc
jp
adc
mov
clc
test
call
jg
sbb
dec
(bad)
lods
inc
and
xchg
adc
lahf
das
push
dec
sidtd
call
cmp
pop
or
adc
ins
dec
je
ret
pop
mov
ror
push
adc
iret
call
aas
fucomp
cmp
adc
mov
inc
sbb
ins
je
inc
mov
das
adc
mov
push
pop
mov
xor
and
pop
loopne
loope
add
sub
adc
add
push
daa
and
and
aad
sbb
inc
in
iret
pop
adc
push
push
inc
pusha
adc
push
xor
and
sbb
inc
call
sub
mov
add
daa
or
cmp
stos
add
outs
sub
outs
dec
inc
pusha
pop
retf
pop
rol
dec
dec
cmp
adc
adc
sbb
cmps
adc
mov
imul
and
test
add
add
adc
movs
and
retf
jo
and
clc
nop
pop
xor
outs
fistp
nop
xchg
pop
lods
call
cmps
sbb
les
loopne
inc
pop
not
and
cmp
xchg
sub
and
pop
pop
and
rcl
sbb
aas
sbb
dec
loope
and
push
imul
pop
dec
aas
mov
or
or
mov
or
cmps
pop
sub
jg
call
and
test
adc
scas
in
or
data16
jmp
add
pop
in
jl
dec
mov
or
mov
repz
cmps
add
ret
stc
jbe
adc
or
push
or
mov
add
and
or
pop
add
movs
mov
adc
rcr
cli
mov
imul
out
ds
and
xchg
push
xchg
sub
mov
cwde
inc
pop
in
and
ret
pmulhuw
xor
dec
mov
int
xor
or
mov
xchg
in
sub
ret
push
mov
call
sub
and
(bad)
adc
mov
add
shl
ret
dec
popf
and
sub
sub
and
movs
sbb
pop
fisttp
adc
in
and
retf
dec
push
in
les
aaa
aas
cs
dec
pop
inc
push
pop
xor
mov
hlt
clc
fcmovb
mov
or
and
in
mov
mov
pop
mov
sub
add
sbb
jp
daa
movs
or
sub
fist
and
sbb
pop
pop
sbb
adc
inc
sbb
adc
xor
sbb
popf
cld
add
fistp
lahf
sbb
and
push
inc
fwait
dec
adc
add
xor
test
sbb
adc
or
inc
pop
hlt
or
mov
dec
jp
shl
add
mov
imul
out
push
inc
arpl
lock
xchg
or
inc
cmp
add
shl
xchg
adc
ret
sbb
leave
add
xchg
in
imul
xchg
and
sbb
cmc
add
popa
mov
push
pop
jae
clc
pop
pop
xor
test
pusha
dec
jo
test
jp
pushf
stos
dec
daa
cmp
mov
fs
jnp
sub
repz
scas
leave
leave
test
pop
or
sub
imul
and
sub
cmp
dec
iret
or
inc
nop
add
inc
mov
mov
or
pop
pop
test
xchg
and
xor
mov
mov
js
leave
inc
lock
xor
out
pop
and
jp
adc
push
pushf
mov
add
xchg
xor
ret
jo
test
ret
mov
mov
bound
ret
cs
call
ror
bound
push
lahf
pop
dec
imul
add
lods
cmp
and
pusha
mov
adc
adc
cs
push
movs
push
xor
daa
jl
mov
jo
add
xor
cld
jnp
lock
add
stos
ret
cld
push
jo
dec
jne
ret
fild
adc
arpl
xor
push
movs
cmp
mov
fadd
stc
outs
lods
icebp
xchg
adc
daa
push
fs
je
or
jg
cld
pop
ret
jne
pop
pop
ins
cld
sbb
sbb
test
imul
das
xchg
nop
enter
jge
mov
dec
cld
mov
add
sub
cmps
out
mov
cmps
test
(bad)
push
dec
out
daa
mov
lahf
fld
dec
push
mov
nop
outs
add
shl
jge
cld
jo
imul
jo
das
sar
cld
push
cmp
jo
mov
or
sar
aad
lahf
aam
or
pop
std
ret
add
ret
cwde
and
and
fsub
rcr
or
adc
mov
test
sbb
sbb
jge
adc
inc
adc
out
or
fs
in
or
pop
cmp
push
movs
push
gs
sbb
sbb
and
inc
or
xchg
das
push
pop
adc
jo
sub
loope
(bad)
cmp
mov
sbb
inc
std
int
rol
adc
call
add
cmp
lods
pop
(bad)
test
aam
dec
push
sahf
inc
enter
daa
push
xor
movs
xchg
jmp
or
arpl
and
pop
inc
add
idiv
dec
lds
add
in
xor
dec
in
push
inc
dec
loop
repnz
ficomp
std
xchg
xchg
fcmovnbe
adc
add
mov
outs
jg
or
data16
fs
mov
enter
test
mov
mov
ins
sub
push
pop
add
pop
add
test
sbb
lods
push
mov
or
fild
mov
(bad)
into
sar
inc
mov
add
int3
fild
jmp
pop
dec
sub
inc
call
add
jg
stos
mov
xor
mov
mov
push
pop
icebp
xchg
push
outs
add
mov
and
push
sub
mov
call
xor
lahf
sbb
cmp
aaa
dec
lock
push
add
das
cdq
test
dec
sub
push
ret
mov
xor
jo
jnp
pop
adc
dec
adc
imul
adc
dec
mov
das
nop
mov
dec
or
push
add
cmp
push
movs
cmp
dec
jmp
popf
adc
push
lea
dec
and
cmps
sub
jmp
xchg
xor
ins
sbb
lock
push
sbb
inc
jo
jmp
dec
pop
and
pop
mov
stos
pop
sub
xchg
ret
inc
shl
popa
fucomi
xchg
xchg
add
mov
or
push
or
stos
add
fist
push
and
lods
dec
loopne
xor
je
sahf
mov
(bad)
pop
pop
pop
sbb
std
push
push
jbe
sub
int3
loope
inc
push
cmp
movs
mov
mov
ror
cld
sbb
rol
add
stc
or
mov
and
dec
inc
repnz
push
inc
cwde
add
xor
leave
add
enter
push
mov
div
or
movs
add
or
mov
mov
movs
repnz
inc
lods
in
pop
in
inc
dec
nop
push
movs
in
jnp
ja
cmp
pop
dec
adc
mov
or
mov
adc
dec
pop
mov
hlt
or
sbb
repz
jnp
xor
push
mov
ret
adc
push
or
add
bound
popa
add
add
push
aas
fmul
jg
push
scas
sub
in
lock
in
and
jg
aaa
or
bound
sbb
in
sub
scas
sub
push
push
jg
inc
ins
cmp
sti
adc
dec
add
xchg
xchg
or
xchg
and
adc
add
std
lods
jno
enter
(bad)
cmp
xlat
and
adc
xchg
jne
ror
adc
or
and
xchg
mov
pop
ds
rol
arpl
mov
ret
and
mov
sub
int
std
inc
mov
adc
repz
jne
int3
cvtpi2ps
and
push
test
sub
hlt
leave
xchg
add
jmp
and
xor
mov
(bad)
loopne
add
xchg
sub
add
mov
xor
jae
sbb
or
sbb
sbb
enter
mov
add
(bad)
in
pop
mov
(bad)
in
fst
push
cmp
push
cmp
gs
mov
pop
dec
mov
and
mov
and
sbb
sub
loopne
loope
ja
ins
sub
sbb
add
push
push
dec
add
cmp
enter
leave
enter
fsubr
inc
dec
push
push
or
mov
in
push
inc
mov
xchg
and
std
mov
paddsb
xor
pop
cmps
fsub
push
enter
or
and
das
pop
inc
les
lods
mov
movups
pushf
or
push
add
sub
or
sbb
shl
enter
mov
pop
mov
arpl
adc
lods
enter
cwde
in
hlt
loope
cmp
mov
cmp
aad
les
dec
sbb
mov
or
test
dec
lahf
add
and
adc
cmp
mov
dec
cdq
hlt
mov
pop
shr
sbb
mov
std
jmp
xor
test
inc
or
sbb
pop
test
rcl
mov
sahf
adc
lahf
jbe
xor
in
sbb
add
push
shl
push
xor
inc
popw
sub
mov
cmps
or
jge
jnp
les
add
pop
into
dec
dec
pushf
add
loopne
adc
movs
or
add
imul
adc
sub
fstp
mov
sub
mov
mov
and
bound
and
mov
sbb
in
pop
cmp
inc
dec
or
ss
scas
pusha
fisttp
sbb
sbb
and
and
addr16
cmp
pop
add
adc
xchg
add
jne
fmul
inc
fsub
mov
pop
and
mov
(bad)
mov
aas
aam
sub
and
mov
movs
lods
je
frstor
ror
sbb
mov
cmp
fwait
imul
push
mov
lahf
mov
inc
test
lds
xor
rol
hlt
dec
or
push
hlt
pop
lock
(bad)
std
jg
mov
or
push
pop
fcomp
stc
or
adc
sbb
lods
test
ret
add
xor
or
dec
sub
sub
push
cmp
lahf
loopne
xor
icebp
or
outs
movs
or
cmp
push
fst
jg
clc
xor
lahf
mov
ins
call
lea
rcpps
int3
iret
mov
inc
add
mov
test
pop
ret
pop
test
pop
(bad)
and
retf
pusha
xor
int
pop
adc
rol
add
mov
sbb
int3
push
sub
cmp
dec
cmp
adc
pop
adc
lea
inc
xor
xor
and
lock
outs
test
inc
xor
je
ret
xchg
ror
lea
push
dec
or
add
or
xchg
cmp
adc
push
mov
mov
xchg
les
mov
nop
retf
jmp
mov
lock
rcr
add
and
push
sub
cmp
mov
mov
cmp
dec
ret
mov
adc
iret
int3
jmp
test
xchg
cmp
dec
cmp
jb
enter
adc
test
retf
daa
les
pop
fdivr
(bad)
sub
sub
push
sub
push
push
mov
sbb
adc
mov
movs
adc
sbb
in
or
fisttp
push
or
jbe
dec
and
popf
and
mov
sbb
enter
ds
mov
push
rcl
ret
push
dec
aas
xlat
and
fisttp
lods
mov
nop
pop
or
or
dec
pusha
aaa
and
add
add
xchg
push
or
fs
jmp
mov
or
and
dec
xlat
or
jecxz
dec
enter
arpl
inc
inc
add
or
inc
test
leave
push
add
jnp
dec
test
and
push
mov
xor
jp
push
into
mov
mov
and
loopne
cmps
mov
or
and
push
mov
gs
cmp
cmp
mov
adc
test
aam
pop
test
mov
mov
fcomp
mov
sub
and
lock
sbb
adc
fbld
dec
sub
scas
pop
or
std
adc
dec
sbb
rcr
dec
lock
lods
das
outs
test
call
(bad)
sbb
cmp
mov
cmp
xor
call
xor
or
add
retf
fldpi
mov
js
shr
add
ins
in
loopne
push
xchg
outs
jge
xor
fidivr
dec
jmp
jne
sub
mov
(bad)
loop
pop
add
sub
sar
clc
movs
ins
pop
or
adc
sbb
icebp
or
jge
pop
jp
or
or
xor
(bad)
xor
mov
and
cmp
jp
jge
cmps
adc
sbb
push
push
dec
stos
sub
aas
out
imul
rol
loope
jno
rol
xor
aam
push
int
imul
aas
sub
mov
dec
les
pop
or
pop
mov
mov
add
sahf
pop
test
sub
inc
das
arpl
lahf
test
xchg
dec
loopne
push
jl
add
jl
adc
and
test
jae
dec
popf
test
push
or
push
test
cmp
jmp
ds
adc
aam
out
push
movs
inc
dec
push
and
lds
dec
jae
push
dec
pop
xchg
mov
dec
mov
ja
mov
xor
and
(bad)
mov
popa
pop
ja
pcmpeqb
fsub
and
adc
push
mov
stos
ret
inc
inc
shl
test
arpl
or
popa
dec
xchg
shl
lahf
sub
clc
or
rcr
shl
sbb
js
or
bound
addr16
and
sbb
adc
add
daa
mov
call
add
jmp
sub
mov
mov
mov
add
rol
lds
test
add
(bad)
icebp
imul
hlt
or
repz
ret
jge
add
sti
cld
add
cmp
adc
cmp
add
jns
adc
sbb
ret
inc
hlt
inc
xor
adc
mov
sub
mov
fild
jbe
aas
jb
push
inc
mov
adc
movs
adc
stc
ds
into
and
iret
adc
ror
iret
dec
sub
lds
outs
in
mov
add
add
xor
lods
nop
jno
adc
gs
cmp
mov
fld
mov
fs
shl
mov
mul
inc
add
xor
(bad)
or
cld
ret
add
ficomp
mov
fwait
push
(bad)
dec
loope
xor
add
in
cmp
dec
loop
pop
mov
cmp
xor
ret
mov
push
cmp
push
push
inc
enter
ror
hlt
adc
inc
pusha
and
sub
outs
nop
clc
xor
jne
(bad)
add
sbb
pop
in
pop
shr
push
mov
inc
imul
push
test
or
pusha
pushf
push
push
fsubr
push
jne
add
les
js
fadd
sub
pop
add
xor
inc
push
les
xchg
sub
jmp
enter
loope
dec
sbb
inc
test
fs
jmp
mov
push
hlt
and
add
pop
mov
mov
adc
call
aas
jmp
inc
add
pop
mov
loopne
ja
ja
adc
xchg
retf
popa
imul
mov
jle
cmp
fsubr
adc
pop
shl
fnstcw
retf
lock
(bad)
(bad)
lock
inc
sbb
sar
mov
not
xchg
add
add
pop
das
fist
ja
cmp
repz
imul
add
add
add
push
or
lock
push
inc
jb
add
mov
call
aas
add
fmul
jmp
or
loop
das
ret
add
jo
aas
pop
jbe
or
aas
or
sbb
loopne
data16
inc
and
adc
or
loope
sbb
test
dec
loopne
push
scas
sub
add
in
loop
fmul
nop
xchg
add
(bad)
push
stc
out
int3
pop
inc
adc
aas
(bad)
fadd
adc
adc
rcr
ret
pop
cmc
mov
clc
lods
nop
emms
lock
cmp
add
push
(bad)
mov
pop
mov
pop
rcl
enter
cwde
xlat
add
pop
add
ins
sub
push
dec
and
or
add
pusha
add
js
add
xor
dec
xor
lock
or
add
shl
pusha
loopne
test
imul
add
and
sub
add
in
push
xor
les
push
inc
jo
cmp
sqrtps
xor
adc
test
or
inc
jl
push
(bad)
fild
jge
outs
inc
jo
(bad)
aam
loop
js
in
inc
aam
push
mov
test
sub
les
dec
imul
cdq
xor
les
cwde
adc
call
jns
(bad)
into
add
dec
loope
test
dec
or
call
leave
or
aas
add
inc
adc
push
aas
test
or
dec
add
out
pop
pop
push
inc
dec
sar
xor
or
sbb
fdivr
adc
dec
and
or
lea
outs
lea
aad
int3
mov
lahf
and
jmp
adc
adc
dec
pop
inc
test
sbb
push
rcr
inc
(bad)
xor
mov
aad
mov
pop
aas
sub
xor
jecxz
dec
jne
or
jmp
dec
pop
xchg
pop
inc
(bad)
cmp
inc
loope
retw
jecxz
cli
ret
and
stos
push
pop
dec
shl
sbb
push
fcmovbe
xchg
pop
gs
repz
or
sub
and
add
lods
test
hlt
xchg
hlt
leave
out
jp
jo
leave
push
std
pop
xchg
jne
sub
sahf
fadd
(bad)
fmul
sub
inc
fdiv
jnp
bound
sub
adc
push
push
xchg
sub
pusha
sbb
mov
aaa
je
cmps
out
mov
or
or
int3
sbb
retf
or
dec
sbb
jns
outs
push
sub
adc
clc
and
dec
test
lods
push
push
mov
je
cmp
mov
in
inc
sbb
ins
dec
or
mov
pop
imul
mov
mov
cmp
fstp
mov
push
mov
cmp
inc
icebp
inc
in
xchg
push
das
or
sub
outs
ja
gs
and
mov
cld
aaa
and
inc
mov
sub
add
popa
add
jbe
out
xchg
adc
mov
push
add
cmp
pop
add
jb
mov
push
(bad)
adc
ret
sub
mov
in
popa
pminub
aad
dec
xor
jmp
mov
xchg
push
(bad)
pop
cmc
dec
enter
inc
and
or
(bad)
inc
push
mov
xor
sar
mov
and
ins
(bad)
fld
or
xor
add
mov
movs
lea
sbb
add
push
push
xchg
mov
cli
or
test
or
clc
mov
sub
xchg
push
add
clc
add
sub
sub
call
in
push
mov
and
add
test
xlat
dec
or
xlat
sbb
mov
add
outs
inc
adc
adc
(bad)
stos
xor
jmp
dec
lahf
pop
mov
push
rcl
ret
(bad)
aad
inc
pop
gs
adc
lds
ds
sub
pop
ror
lea
inc
daa
pop
(bad)
ja
xor
push
or
sbb
or
inc
jmp
push
push
xchg
dec
(bad)
xchg
mov
mov
mov
mov
sti
(bad)
mov
sbb
mov
push
or
xchg
adc
ret
or
or
outs
pop
cmp
shr
jnp
or
xchg
lea
jne
ret
xchg
sbb
inc
daa
(bad)
dec
adc
add
cmp
adc
pop
xor
fs
cmps
enter
adc
jmp
sub
sbb
scas
cmc
xor
or
ret
push
sub
sub
loopne
xchg
xor
mov
(bad)
aas
sbb
popa
mov
mov
add
push
test
cmp
call
mov
dec
inc
pop
mov
push
je
sbb
and
or
mov
cli
dec
sub
mov
sbb
and
and
imul
or
loop
mov
adc
inc
mov
pop
aam
call
xchg
add
cli
leave
shr
cmp
in
xchg
fwait
inc
or
pop
inc
(bad)
adc
mov
sub
mov
sub
sbb
(bad)
outs
movs
or
push
pushf
call
int
push
loopne
xchg
mov
outs
adc
jge
mov
sub
fwait
add
and
add
neg
(bad)
sbb
movs
shr
pop
cmp
lds
rcr
or
int3
fldcw
pushw
mov
les
sti
ja
rol
es
or
mov
mov
fnsave
mov
fs
neg
mov
pop
jmp
add
inc
sbb
and
leave
pop
loop
xor
jmp
xchg
test
push
dec
movs
or
icebp
inc
inc
mov
sbb
or
pop
(bad)
enter
sldt
cmp
bound
add
adc
pop
aas
addr16
or
sbb
mov
sub
mov
pop
cs
inc
sub
adc
push
jo
and
adc
and
dec
pop
or
lods
stos
push
outs
lock
push
outs
in
cmp
inc
dec
push
jnp
dec
mov
fisub
ss
push
dec
mov
inc
sar
les
dec
dec
test
lea
cmp
xchg
adc
xor
jnp
and
sbb
outs
push
cdq
movs
aad
jmp
loop
xchg
dec
cmp
sub
push
push
(bad)
push
test
xchg
rcl
mov
cmp
inc
sbb
in
mov
or
icebp
(bad)
sub
jge
loope
and
adc
push
add
sbb
xchg
bound
movs
(bad)
bound
inc
cmc
test
add
and
jns
add
ds
movs
cmp
loopne
cmp
fcom
ret
and
lock
mov
and
mov
add
mov
stos
dec
xchg
dec
leave
rcr
cmc
or
xor
xor
sbb
push
mov
push
(bad)
out
shl
push
mov
leave
add
ins
inc
inc
xor
jae
push
inc
adc
push
mov
sahf
ins
adc
mov
pop
mov
cmp
inc
add
inc
jnp
outs
int
mov
or
neg
lds
loope
lock
inc
add
out
sub
add
inc
ret
cmc
mov
pop
push
mov
les
adc
push
arpl
jecxz
mov
pop
sbb
and
push
jb
mov
xor
push
or
sbb
movs
add
les
adc
mov
pop
mov
pop
push
jecxz
add
pop
push
push
inc
rcr
push
ret
or
mov
imul
pusha
mov
dec
sbb
js
mov
lahf
test
and
sbb
sub
clc
push
rol
rcl
and
add
pop
out
test
push
dec
mov
inc
jns
call
pop
add
fsubr
push
and
cld
(bad)
mov
(bad)
pop
add
xchg
movs
jmp
mov
movs
push
adc
xor
xor
in
and
rcl
dec
retf
xor
add
scas
adc
jmp
loope
adc
or
add
les
mov
rcl
xchg
xchg
dec
shr
test
fidivr
cs
mov
and
push
test
cli
enter
cmp
or
lea
xchg
xor
mov
mov
push
fild
cmp
and
sbb
ret
dec
jno
icebp
inc
mov
mov
sar
pop
xchg
sahf
iret
aam
repz
jno
retf
mov
adc
jmp
add
jmp
sub
push
lods
lahf
les
popa
je
cmp
mov
mov
in
dec
ds
jno
lock
add
xchg
aam
jmp
and
or
jns
and
stos
jmp
sbb
popf
push
pop
popf
xchg
sub
xchg
mov
inc
test
rol
gs
arpl
pop
mov
pop
int
push
nop
cmp
inc
aad
fwait
mov
test
add
mov
inc
mov
dec
or
fadd
sub
rcr
adc
dec
adc
repz
and
outs
adc
mov
add
mov
aam
dec
add
bnd
inc
sub
mov
movzx
jo
dec
push
mov
mov
ret
or
mov
mov
icebp
xchg
dec
shl
mov
mov
or
adc
bound
ja
add
cmp
push
or
dec
inc
adc
movs
xor
sub
adc
sbb
adc
add
cmp
push
push
les
mov
cwde
inc
repz
push
sbb
(bad)
dec
mov
add
out
mov
sub
and
daa
aas
test
sub
es
movs
test
shl
clc
sbb
mov
hlt
sbb
add
or
inc
sbb
test
ret
rcl
pop
lahf
sub
pop
mov
test
jne
rol
cmp
in
jo
add
dec
and
add
sahf
sub
add
(bad)
dec
xchg
cwde
add
pop
dec
jg
or
test
mov
test
loope
push
push
rcl
inc
mov
cdq
pop
icebp
test
adc
cmp
jecxz
push
or
test
jo
lahf
mov
sub
or
test
fdivr
test
test
movs
mov
imul
pop
cwde
push
dec
in
sbb
mov
fstp
and
iret
pop
inc
add
xor
test
adc
sub
or
add
jg
push
mov
mov
xor
dec
mov
popf
data16
popa
add
(bad)
lea
cs
cmp
jnp
or
mov
popa
in
and
mov
movs
cmp
clc
sub
inc
fisttp
imul
cmp
popf
add
or
or
iret
or
jns
mov
div
push
dec
mov
cmp
inc
and
mov
out
push
mov
add
push
sbb
pop
dec
fsubr
pushf
sub
fcomp
mov
cmp
dec
test
dec
xchg
daa
imul
push
cmps
add
inc
aam
lods
je
js
jmp
(bad)
adc
jne
xchg
pop
cwde
dec
pop
add
mov
sub
sub
arpl
lea
shl
dec
xchg
add
adc
mov
icebp
call
xor
(bad)
nop
jno
ja
xchg
or
push
sbb
add
xchg
push
pop
pop
and
or
adc
sti
xor
(bad)
xor
(bad)
mov
movs
and
(bad)
xchg
lock
xor
loopne
call
sbb
sub
and
in
popa
add
push
xchg
add
dec
sbb
sub
dec
lds
int
add
or
or
sub
(bad)
and
pop
mov
inc
xor
xor
adc
dec
xor
xor
add
cmp
jbe
cmp
push
(bad)
xor
jmp
adc
sub
push
retf
inc
sub
outs
or
sub
add
fsubr
add
xchg
and
add
add
mov
int
mov
add
sub
push
pop
pop
sbb
mov
mov
jns
test
enter
mov
or
cmps
ja
or
sbb
mov
cld
mov
les
add
dec
bound
mov
push
retf
jge
test
lds
push
mov
add
mov
mov
inc
in
or
or
out
loope
adc
(bad)
dec
adc
std
xchg
mov
test
ss
lods
mov
or
test
outs
adc
mov
aam
sbb
into
add
mov
adc
jnp
jle
push
sbb
movs
ja
dec
add
mov
push
mov
and
inc
jecxz
jae
cmp
(bad)
inc
xor
sahf
dec
gs
or
and
aas
dec
pop
call
movs
adc
ror
adc
les
and
sbb
jg
loopne
cmp
or
inc
loop
aaa
pop
and
and
pop
add
or
dec
add
in
sub
test
pop
dec
pop
add
or
imul
or
or
push
adc
or
xchg
cmp
or
jmp
adc
pop
rol
jno
jmp
jmp
xchg
popa
jmp
in
fnstenv
push
adc
dec
xor
iret
sahf
cmp
adc
xor
jmp
and
jmp
enter
or
pop
sub
add
into
ss
or
nop
cmc
mov
add
repz
rol
adc
xor
iret
repz
pop
ins
jl
call
mov
ds
repz
test
sahf
out
sbb
inc
add
add
or
or
or
adc
add
lahf
and
sbb
sbb
call
addr16
sahf
shr
sub
jbe
add
adc
data16
sbb
and
jg
xchg
add
and
inc
jl
and
inc
movs
mov
retf
or
push
and
cmps
cdq
mov
jge
or
(bad)
icebp
dec
push
push
or
and
dec
sub
nop
outs
jmp
loop
lock
dec
loop
push
lahf
or
jp
mov
dec
mov
push
jae
mov
jne
push
cld
jnp
int3
adc
and
jmp
fmul
inc
ror
pop
inc
push
adc
aas
jg
or
repnz
jp
adc
mov
stos
aam
outs
push
call
adc
sub
push
or
ror
adc
test
push
adc
cmc
cmp
sbb
lock
mov
dec
or
mov
mov
add
sub
sub
sbb
mov
push
call
or
sbb
mov
call
pop
in
adc
es
push
xlat
sub
dec
dec
in
sahf
gs
iret
aaa
push
ss
(bad)
and
add
push
(bad)
push
mov
test
sbb
aaa
or
imul
adc
push
out
pop
sub
cwde
imul
xor
push
or
pop
sub
dec
sbb
add
pop
push
hlt
cmp
xor
ja
out
or
dec
mov
lds
mov
cmp
add
scas
mov
jo
cld
xchg
inc
add
lock
jmp
mov
lahf
bound
ins
das
and
daa
ror
and
push
sbb
dec
adc
(bad)
dec
fwait
fs
imul
add
or
push
cld
test
cmp
(bad)
xor
add
ja
lea
adc
loop
adc
retf
idiv
adc
or
or
mov
pop
sbb
outs
mov
push
lahf
push
and
mov
pop
push
jmp
(bad)
int3
repz
ins
popa
aas
(bad)
xchg
rol
retf
pmaddwd
and
add
lods
aas
adc
nop
sar
dec
push
mov
or
push
in
fld
test
xchg
outs
adc
les
aam
dec
std
test
repnz
push
inc
push
mov
inc
or
fnstsw
sub
inc
cmp
pop
test
sub
sub
inc
out
xchg
dec
add
call
leave
jb
mov
mov
cs
mov
mov
inc
cmp
xor
cmp
leave
leave
or
push
loopne
xor
arpl
mov
jg
fdiv
popa
inc
jl
adc
mov
call
add
mov
ret
clc
xor
es
mov
xchg
add
pusha
rcl
mov
not
dec
aaa
movs
mov
inc
shl
dec
js
pop
jo
or
adc
xchg
outs
imul
daa
and
add
push
shl
add
push
rcr
les
jg
inc
pop
sub
or
stos
fisubr
(bad)
out
or
shl
push
cmps
cmp
cmp
fwait
js
mov
push
and
cld
push
jp
push
ins
inc
add
inc
adc
imul
jb
inc
in
pop
sbb
aam
sub
iret
push
call
inc
rol
loope
push
dec
and
or
inc
xlat
or
adc
or
add
ds
jno
or
fs
mov
dec
retf
mov
mov
jne
lock
movs
adc
sub
call
rol
add
jae
and
aam
push
pop
adc
inc
or
or
or
and
mov
pop
cmp
fld
mov
leave
and
sbb
pop
inc
mov
jae
sar
pop
jne
sbb
pusha
lods
cwde
or
je
add
xchg
pop
add
push
add
test
sbb
(bad)
das
lea
mov
loopne
in
mov
mov
push
push
cmc
adc
mov
mov
cld
test
mov
mov
inc
outs
xchg
pop
lods
dec
pop
or
add
mov
xchg
fld
scas
mov
outs
rcr
adc
xchg
add
jmp
lods
cli
inc
and
fmul
ror
sar
lahf
dec
adc
add
sub
addr16
or
mov
push
popf
or
lods
lods
daa
sub
pop
xchg
clc
mov
xchg
es
popf
mov
sbb
and
daa
loopne
pushf
mov
sub
mov
add
arpl
adc
add
test
and
loope
sub
lock
push
test
jbe
(bad)
sub
push
sub
dec
jb
sub
sub
pop
and
adc
ret
push
sub
or
sub
or
and
or
fisubr
popa
mov
push
mov
push
lds
stc
sbb
sbb
mov
xor
les
or
pop
mov
in
adc
sbb
jbe
xor
cmp
add
push
push
mov
xchg
jle
pop
or
aaa
or
jl
stc
shl
or
jbe
aas
add
sbb
lock
push
fld
ret
sbb
dec
inc
jmp
ins
or
or
jge
push
nop
fadd
in
mov
(bad)
(bad)
pop
mov
fld
fnstsw
nop
add
std
mov
or
std
loope
mov
push
loope
(bad)
lods
shl
hlt
mov
sbb
aam
aaa
jae
sub
int3
shr
adc
fisttp
sbb
push
std
in
ror
jae
mov
mov
jmp
cmp
gs
cwde
in
or
lock
mov
jecxz
add
loop
jmp
aas
repz
ins
cmps
fstp
(bad)
movs
mov
sub
mov
bound
or
push
fld
fdiv
xor
sub
fchs
and
int3
loope
and
pushf
stc
enter
cmp
fmul
mov
sub
jmp
xor
ds
add
out
popf
repnz
push
movsx
mov
ins
mov
dec
or
ds
ret
(bad)
aam
mov
mov
xlat
nop
inc
call
or
sub
mov
adc
out
add
ret
cmp
(bad)
adc
and
das
and
shl
int3
sbb
inc
mov
sbb
adc
loop
mov
mov
rol
ds
jl
jns
mov
mov
add
adc
pusha
(bad)
jg
retf
in
mov
enter
mov
les
nop
test
add
les
cmp
adc
or
push
stos
imul
rol
ret
adc
xlat
mov
jmp
jg
neg
jns
pop
lds
fwait
sub
push
mov
xchg
adc
or
push
adc
or
adc
or
movs
movs
add
add
add
es
inc
clc
pop
cmp
xchg
mov
dec
or
and
dec
(bad)
or
fwait
movs
add
fdiv
ror
sbb
or
das
sbb
dec
cmp
dec
in
daa
mov
inc
adc
pop
stos
dec
sbb
movs
hlt
and
retf
hlt
test
fisub
mov
and
test
call
cli
call
fild
inc
inc
add
or
stos
adc
dec
in
test
sub
push
mov
in
retf
sub
or
sub
xor
es
mov
or
lds
pop
xchg
xchg
arpl
adc
loope
push
addr16
int
cmp
sgdtd
lock
pop
or
push
cmc
xchg
ds
jnp
(bad)
cmc
inc
sbb
dec
adc
jl
inc
push
cmovb
xchg
sub
mov
push
add
cmp
fsubr
ins
jmp
int3
mov
std
xor
and
adc
pop
sub
leave
sub
push
test
jo
fcomp
push
iret
and
inc
or
adc
dec
inc
sbb
(bad)
shr
enter
and
int3
mov
pushf
dec
push
gs
retf
movs
movs
dec
or
push
pop
and
or
mov
xor
pop
mov
fwait
jg
sbb
adc
inc
or
xor
mov
add
and
test
pop
(bad)
popa
pop
xchg
mov
add
mov
je
imul
xor
ins
sbb
test
imul
cmp
jo
push
ret
dec
lods
add
repz
push
call
shr
iret
add
dec
loop
inc
test
push
inc
icebp
xor
sub
xor
ins
or
pop
xchg
loopne
add
loope
push
inc
in
mov
or
xor
js
lods
xchg
std
jbe
cmps
mov
aam
dec
xchg
outs
cmp
and
dec
movs
lock
or
pop
out
dec
das
xor
dec
outs
push
mov
lods
push
push
outs
(bad)
or
push
outs
stos
and
dec
dec
les
jno
loopne
push
adc
addps
adc
stc
push
sbb
dec
or
mov
push
leave
leave
in
fwait
stos
jo
inc
add
aam
sub
dec
or
xchg
or
add
adc
add
push
(bad)
jnp
enter
je
push
rcl
fcomp
mov
xchg
or
push
jbe
ret
dec
cmp
cmp
or
dec
push
cmp
add
or
clc
sbb
cmp
mov
fwait
xchg
sub
ss
rcr
bound
mov
adc
push
adc
and
adc
adc
sti
or
mov
sbb
fwait
xor
bnd
push
imul
push
aad
push
mov
test
mov
ret
and
leave
or
dec
pushf
shl
push
dec
xchg
mov
adc
imul
xor
xchg
or
inc
es
adc
and
xlat
sub
push
add
push
and
loope
fld
sub
dec
scas
test
push
inc
iret
mov
mov
imul
and
and
arpl
inc
and
ss
mov
jmp
push
fistp
xchg
mov
pusha
pop
or
in
jle
mov
nop
inc
xchg
push
out
or
lahf
push
dec
loope
cmp
push
sub
mov
add
cmp
add
fadd
add
or
mov
retf
ret
push
jl
add
add
push
add
or
leave
cmps
add
add
sbb
or
jmp
or
or
xchg
jbe
pop
ret
ret
jl
push
mov
sub
pop
out
or
loope
jns
jp
or
aas
pop
inc
test
adc
and
push
or
add
mov
xor
or
pop
mov
iret
fstp
inc
fmul
fmul
push
imul
mov
cli
or
cmp
or
cmp
xor
mov
mov
stos
xor
sub
mov
or
jecxz
dec
in
mov
push
cmp
or
addr16
and
js
mov
jnp
or
push
leave
daa
inc
aam
sar
ret
xor
sti
mov
ds
adc
test
add
push
cmp
xor
jmp
jmp
lea
and
or
aaa
aaa
test
adc
adc
dec
sub
ficom
jne
add
lock
add
dec
cmp
adc
jl
mov
cmp
jge
or
leave
test
jmp
adc
jno
lds
mov
inc
bound
or
jnp
inc
lods
test
push
adc
xor
test
arpl
add
mov
call
ins
xchg
ror
stc
cmp
test
iret
sbb
out
jns
push
ja
sahf
inc
push
jmp
(bad)
sysret
add
cmovb
add
daa
aam
aam
push
lds
jge
stc
add
add
cdq
mov
mov
shl
call
mov
pop
out
mov
and
loope
mov
test
(bad)
or
pusha
sub
mov
mov
ins
sar
loopne
jno
les
xchg
int
adc
xchg
cdq
popa
or
or
xor
(bad)
push
inc
lahf
rol
ror
xor
sti
mov
fchs
or
dec
sub
std
loopne
or
sti
add
lahf
or
cmp
push
js
and
imul
jle
or
push
jns
sub
xor
xchg
jne
sbb
sub
mov
mov
clc
push
jae
sub
out
xchg
dec
adc
add
test
lods
hlt
add
push
sub
das
outs
hlt
adc
sbb
ret
dec
dec
dec
add
aas
test
test
daa
xor
std
retf
mov
and
daa
mov
cld
popa
cld
xchg
add
lds
jmp
js
adc
inc
daa
xchg
cmp
lock
leave
les
test
rcr
pop
mov
lahf
mov
fst
je
mov
push
daa
or
ficom
call
aam
lahf
jno
push
loope
or
mov
es
xor
sbb
adc
je
lock
adc
xor
int3
cmp
test
xor
mov
lods
mov
test
mov
push
pop
push
dec
inc
or
cmp
or
movs
test
movs
push
inc
test
in
dec
push
psrlw
sahf
sbb
push
inc
pop
and
test
mov
inc
sub
out
mov
mov
xchg
push
xchg
dec
pusha
xor
inc
lock
in
fs
xor
hlt
xchg
lock
cmp
xor
js
add
dec
cdq
pop
sub
jle
xor
pop
adc
out
or
imul
and
or
lock
xchg
or
adc
add
add
rcr
xchg
enter
push
test
aad
call
nop
adc
jo
mov
or
xchg
cld
jmp
xor
and
sub
inc
add
inc
xchg
lahf
outs
pop
push
push
sub
scas
and
cmps
fs
or
lahf
cmp
inc
hlt
xchg
jmp
jo
push
adc
in
add
out
mov
jg
pop
pop
or
push
loopne
dec
add
or
push
les
imul
pop
inc
mov
shr
pop
fwait
mov
repz
push
je
or
je
add
rol
pop
popa
loopne
dec
inc
stc
or
sub
lods
fistp
sbb
adc
adc
loopne
or
ins
fsubr
pop
push
adc
enter
jnp
add
fxtract
jmp
mov
cmp
outs
ss
jmp
shl
int3
add
sar
and
inc
sbb
pop
and
lock
pop
jecxz
xor
inc
lock
push
mov
and
dec
inc
movs
call
pop
add
dec
push
adc
jle
add
xchg
por
pop
pushf
add
test
sbb
mov
jmp
sub
and
inc
inc
or
add
nop
pop
and
cld
cmp
cmp
add
pop
sbb
lds
aam
lds
pop
lods
mov
inc
add
pop
pop
push
cwde
cs
mov
jno
dec
mov
mov
add
(bad)
rcr
xchg
les
les
rcl
shl
cmp
test
pop
inc
mov
scas
mov
xor
sub
inc
and
sbb
add
dec
mov
in
and
inc
dec
in
ror
mov
xor
pop
cmp
sub
into
cmp
loopne
xor
das
sar
sbb
ret
mov
adc
movs
ret
ror
adc
and
or
mov
pop
sub
push
ja
jo
cmp
mov
out
lods
or
icebp
scas
mov
xor
pop
pop
xor
pop
cmp
ja
imul
sbb
push
pop
and
imul
(bad)
daa
push
push
rcr
dec
add
retf
lock
sar
je
dec
push
xor
shl
pop
out
sahf
ja
inc
push
push
aaa
fs
cs
pop
mov
test
add
pop
pop
add
add
pop
add
pop
call
lahf
inc
test
mov
push
push
imul
aas
je
cli
push
add
or
add
push
push
mov
fisttp
pop
dec
adc
or
lock
pop
pusha
dec
sbb
rcl
add
fdivr
add
mov
dec
jne
fldcw
xor
mov
add
dec
mov
icebp
jge
push
jge
mov
push
jge
les
enter
imul
sbb
mov
sbb
adc
loopne
xchg
and
nop
xchg
out
popf
push
cmps
scas
sbb
mov
lahf
mov
fmul
repz
lock
aas
lods
lods
or
repnz
jmp
fld
push
add
test
daa
outs
mov
scas
in
pop
popf
in
add
push
shl
imul
gs
pop
bound
push
add
mov
fimul
xchg
xchg
mov
pop
mov
add
(bad)
ret
xor
ins
xor
mov
ss
jne
rol
and
jecxz
jmp
ret
or
in
adc
push
loopne
cmp
xchg
inc
lods
adc
test
movs
inc
dec
das
inc
fistp
adc
push
mov
fst
jg
js
jle
mov
mov
adc
push
es
daa
mov
cmp
jmp
hlt
push
std
iret
repz
push
jmp
push
rol
repz
add
xchg
and
add
mov
pushf
loopne
pop
adc
cmp
adc
jns
cmp
push
aaa
not
popf
bound
mov
xor
and
fwait
nop
prefetchwt1
jle
pop
inc
lock
dec
fisub
and
xchg
invd
pop
dec
cwde
enter
fs
lock
jns
stos
inc
xchg
cld
cmp
je
lock
(bad)
cmp
adc
shl
fsubr
dec
add
or
inc
adc
add
pop
lods
mov
add
mov
lock
add
push
sbb
pop
jg
in
ret
and
shl
adc
jecxz
mov
(bad)
fistp
mov
inc
mov
add
adc
dec
mov
mov
cmp
pop
repz
or
add
outs
adc
xchg
jmp
ffreep
and
dec
add
ds
inc
and
or
and
jmp
fldcw
neg
mov
or
call
fcom
cdq
jp
fbstp
add
jne
or
inc
xchg
cmp
and
sti
push
mov
in
add
add
jmp
in
pop
gs
push
or
loopne
call
add
test
inc
sbb
fdivr
ins
push
push
lds
jno
inc
adc
mov
pop
adc
fmul
and
repnz
or
mov
in
mov
push
dec
or
pop
shl
sti
fisttp
sbb
ror
push
outs
pop
dec
push
in
mov
xor
mov
fwait
lock
test
cmp
push
or
mov
pop
lea
cdq
dec
cld
jae
mov
jle
xchg
sub
ins
add
loope
repz
in
in
fld
add
mov
call
add
push
adc
adc
add
mov
hlt
push
add
es
inc
pop
dec
es
cld
adc
or
shl
sub
sbb
mov
xchg
add
and
out
push
cdq
or
pop
(bad)
jnp
sbb
jecxz
pop
add
in
or
add
pop
nop
jp
or
dec
cld
inc
cmp
inc
cmc
add
jg
xchg
xor
in
cmpps
ret
xchg
push
dec
gs
xchg
or
neg
int3
inc
sahf
shl
sar
sbb
leave
mov
cli
clc
mov
or
and
and
inc
or
rcl
aad
test
fwait
dec
adc
hlt
pop
adc
push
cmp
scas
inc
out
sub
hlt
btr
scas
test
dec
hlt
(bad)
rol
aaa
push
mov
add
pop
xor
lahf
add
lahf
pushf
add
cmp
push
xchg
adc
cld
and
jmp
or
pushf
iret
ror
and
sbb
outs
sub
in
mov
repnz
push
and
sysret
in
int3
rcr
mov
push
push
xchg
call
repz
sbb
(bad)
sub
dec
adc
fild
inc
or
jge
add
mov
rol
push
js
pop
cmc
sbb
cwde
dec
jecxz
cmc
add
lock
xor
inc
js
push
mov
jmp
push
sub
jg
movs
hlt
and
cmp
cmp
pop
lahf
or
or
(bad)
sub
arpl
or
mov
inc
ret
add
push
and
adc
fisttp
inc
scas
sub
leave
or
dec
or
dec
pop
xchg
add
test
adc
ror
dec
cmc
call
add
pop
and
add
mov
shl
dec
inc
inc
sbb
popa
add
adc
add
mov
fadd
movs
add
mov
test
add
ds
nop
pop
xor
jo
enter
clc
popa
inc
or
sub
int
fimul
xchg
aas
cld
ds
and
inc
jb
aas
js
push
or
pop
pop
pop
(bad)
push
mov
sbb
(bad)
push
mov
icebp
add
sub
add
rcl
xchg
test
inc
and
jo
mov
lea
mov
or
dec
push
inc
lock
lock
push
ret
inc
add
push
sub
(bad)
aas
sbb
add
mov
dec
pushf
aas
and
aaa
cmps
xchg
aas
sbb
adc
xor
add
sbb
xor
mov
mov
test
imul
add
dec
je
call
push
adc
enter
push
sub
and
push
(bad)
push
add
inc
or
cwde
mov
dec
cmp
or
mov
or
popf
mov
mov
icebp
add
add
xor
add
fld
fstp
or
dec
push
fld
fstp
(bad)
or
or
enter
sbb
(bad)
jmp
adc
lea
dec
in
push
push
sub
hlt
xor
jl
pop
or
and
cmp
gs
mov
and
lahf
pop
add
loop
test
add
or
fistp
xor
inc
add
pop
inc
mov
(bad)
and
or
adc
and
xchg
mov
js
test
add
and
add
mov
(bad)
or
test
addr16
and
pusha
add
and
add
adc
nop
or
ss
hlt
cmc
inc
clc
sub
les
cmp
mov
sar
test
imul
inc
gs
inc
repz
pop
call
push
ds
and
rcl
(bad)
enter
mov
mov
jmp
adc
mov
hlt
sbb
(bad)
cld
or
int3
ss
fsub
cmp
lea
mov
dec
mov
cmps
xor
ss
sbb
fnstsw
jle
jne
fild
dec
bound
add
add
loope
outs
sub
jmp
pop
xchg
pop
aam
neg
(bad)
push
aam
mov
add
mov
sahf
add
xchg
or
call
pop
dec
add
xchg
xor
ret
shr
sub
push
sbb
adc
bound
jnp
fcomp
cmp
movs
cmp
ds
inc
in
dec
in
not
in
lock
fcom
adc
(bad)
(bad)
hlt
pop
mov
jp
xchg
mov
and
cld
aas
aas
dec
mov
xor
mov
ret
mov
add
cld
lahf
nop
xor
fild
mov
mov
mov
cmps
inc
jmp
ret
retf
(bad)
jb
fcomp
cmp
inc
sbb
loop
and
xlat
pusha
or
lock
xchg
and
jmp
adc
jl
inc
push
mov
mov
or
mov
mov
aas
add
mov
bound
push
pop
test
inc
popa
xor
push
inc
pop
add
push
fidiv
cmp
sar
into
movs
pop
enter
mov
xchg
test
adc
aaa
sbb
test
xor
xor
les
or
loope
cmp
pushf
in
call
cmp
rcr
movs
xlat
xchg
cs
and
adc
rol
mov
in
nop
mov
xchg
sti
xor
inc
dec
xchg
fs
scas
adc
(bad)
cmp
push
dec
xor
sub
push
in
shl
fld
lods
popa
and
fdiv
or
add
add
mov
ficomp
popf
or
pushf
fwait
dec
jl
xor
adc
enter
mov
sbb
add
dec
ror
add
adc
xchg
add
rcr
jmp
pop
mov
fisttp
xor
push
retf
add
cld
ror
or
in
sbb
and
outs
and
mov
cmp
cli
cmc
ror
jg
sbb
adc
or
pop
fistp
aam
pop
inc
enter
pop
dec
les
pop
pop
or
cld
fs
sbb
into
les
in
je
sbb
push
iret
call
jp
je
mov
push
cmp
sbb
popa
cs
inc
stos
icebp
loope
cwde
jp
fmul
pop
and
or
jmp
xor
push
mov
push
cmp
aam
dec
fcom
push
cs
add
outs
jge
call
adc
jle
dec
sub
push
push
fsubr
push
jne
adc
xchg
jae
call
xor
jns
scas
dec
cmp
and
das
push
cmp
or
movs
sar
das
loopne
pop
or
adc
or
inc
cmps
cmp
aam
xchg
or
test
adc
adc
jl
shl
cmp
cmp
adc
or
sub
loope
fisttp
mov
or
xor
and
xor
aas
add
enter
pusha
int
inc
add
pop
outs
xor
mov
loopne
sub
lock
imul
ret
rol
jne
and
pop
sbb
aam
cs
repnz
ror
js
pop
test
dec
loope
and
inc
(bad)
int3
in
shr
add
lods
xlat
sub
adc
mov
xchg
mov
add
rcl
add
(bad)
ja
je
rcr
adc
mov
adc
xor
push
or
out
sti
dec
aad
add
mov
xor
dec
inc
std
sahf
mov
mov
add
add
xchg
inc
jnp
call
inc
mov
and
sahf
inc
sbb
jmp
add
add
aaa
inc
les
add
ins
call
sbb
inc
pusha
add
sub
inc
sbb
mov
mov
in
push
clc
scas
push
and
jp
inc
retf
inc
into
mov
into
dec
repz
inc
inc
movd
add
add
mov
xlat
mov
loope
mov
fs
add
xor
adc
fs
mov
and
aaa
add
aad
cwde
fild
sub
repnz
rol
or
jg
ret
or
rcl
arpl
in
mov
push
pop
dec
mov
add
nop
adc
inc
mov
adc
adc
jo
adc
test
mov
adc
ret
adc
mov
cmp
jno
cmp
pushf
and
(bad)
mov
add
inc
inc
cmp
ret
inc
fisttp
mov
in
or
push
inc
stc
fsub
jnp
push
imul
nop
cs
and
pop
cmp
add
(bad)
int3
push
add
mov
test
and
mov
add
xor
ret
push
or
data16
push
cdq
dec
data16
mov
fiadd
and
lea
push
or
xor
(bad)
pop
pusha
scas
and
or
or
push
test
mov
in
xchg
pop
mov
inc
xor
imul
add
je
imul
je
xchg
fs
adc
xchg
aas
test
in
xbegin
jne
ins
ret
mov
add
add
add
or
inc
dec
dec
sbb
inc
aam
xor
dec
arpl
aad
and
fcomp
or
stos
or
loop
mov
add
retf
adc
dec
clc
inc
mov
les
rcl
xor
jns
add
arpl
pop
add
movs
adc
aaa
aas
mov
dec
or
data16
pop
cld
or
dec
ins
sbb
fist
xchg
rcr
xor
xchg
call
movs
test
pop
jge
add
(bad)
mov
retf
inc
sbb
inc
push
inc
call
inc
push
push
mov
inc
loope
cmp
add
add
add
sbb
pop
mov
or
jl
add
cmp
fild
inc
jp
inc
pop
jecxz
aaa
dec
or
xchg
hlt
add
and
jmp
mov
add
add
push
push
movs
and
addr16
adc
into
cmp
dec
pop
dec
imul
add
jo
push
lods
add
ret
cdq
dec
loopne
xor
rol
push
sub
js
adc
mov
fst
sbb
dec
adc
add
or
cld
sub
and
add
jns
cld
mov
call
hlt
add
aas
add
push
push
sti
or
mov
mov
(bad)
ret
pop
push
mov
fisttp
iret
inc
cmp
rcl
mov
ror
xor
or
add
inc
(bad)
add
data16
add
das
push
mov
ss
xor
xor
popa
xchg
in
jecxz
popa
sub
xlat
js
push
jge
enter
test
adc
ins
jae
ret
add
or
xchg
mov
pop
jmp
out
push
sbb
add
add
pusha
add
jg
or
test
mov
push
jmp
push
mov
push
pop
adc
in
pushf
adc
sbb
jle
push
mov
or
mov
lods
sub
pop
lods
lods
sbb
cld
adc
jns
gs
cli
sub
inc
push
pop
pop
ins
pop
add
aam
or
xor
inc
cmp
dec
sbb
(bad)
mov
add
or
and
mov
js
adc
je
imul
jle
inc
push
cmp
push
and
nop
sub
adc
mov
popf
mov
leave
cmp
add
inc
add
or
jne
inc
jbe
mov
jo
pop
adc
adc
add
imul
push
dec
inc
sub
jecxz
fiadd
mov
adc
frstor
sbb
xor
ja
adc
jo
cmps
mov
call
(bad)
fdivrp
shl
xchg
aas
fdiv
mov
pop
dec
clc
push
dec
dec
sub
std
push
xchg
movs
clc
enter
in
pop
fadd
ror
cs
pop
jp
inc
rol
(bad)
cmp
dec
jecxz
push
xor
push
pop
les
inc
ret
fsub
icebp
ins
nop
xchg
fcomp
stos
lock
push
int
sub
or
imul
mov
or
repz
stos
jo
inc
add
adc
clc
xchg
and
lea
mov
test
dec
jge
arpl
mov
out
popf
mov
pop
repz
and
(bad)
sub
pop
ss
jge
dec
cmp
or
dec
adc
jg
dec
pop
cmp
hlt
pop
into
inc
and
jge
mov
call
push
push
and
jg
out
push
dec
add
ja
push
or
add
es
sbb
inc
out
add
cs
imul
sbb
(bad)
dec
call
and
loope
and
or
xor
dec
call
xchg
mov
add
loopne
pop
test
adc
inc
inc
movs
aaa
sti
dec
cmps
add
adc
shr
and
push
pop
or
inc
jl
add
dec
iret
push
pop
dec
pop
or
pop
or
clc
inc
or
xchg
add
jmp
xchg
push
and
daa
jmp
mov
jmp
pop
ins
popa
stos
xchg
cmp
rol
clc
sbb
adc
or
cmc
or
aas
xor
int
inc
cwde
aaa
leave
cmp
add
push
sbb
inc
in
mov
loopne
pop
test
retf
loopne
adc
je
and
xor
ja
jne
iret
leave
(bad)
call
je
inc
sbb
ss
sub
or
jne
lods
iret
push
xchg
add
ins
adc
test
add
adc
or
add
or
mov
add
or
das
fs
xor
sbb
xor
cli
ror
neg
es
push
test
fadd
sbb
ins
shl
rcl
jmp
mov
in
jae
or
push
mov
test
inc
and
adc
mov
dec
or
les
les
lock
sar
ret
repnz
and
and
inc
mov
enter
cwde
iret
adc
sahf
add
imul
rcr
sbb
sbb
adc
push
mov
or
sbb
push
test
(bad)
and
jl
adc
add
jg
mov
(bad)
xchg
ficom
pop
and
pop
pusha
mov
cmp
pop
icebp
or
mov
sub
sub
lahf
arpl
sub
dec
xchg
push
lock
add
sub
push
pop
push
and
lea
and
inc
sahf
test
jle
adc
jb
(bad)
and
mov
jg
inc
or
sub
call
stos
sub
mov
call
push
push
and
sbb
dec
outs
jne
aaa
add
aas
add
adc
scas
leave
adc
or
ror
les
aas
adc
or
xchg
or
rcr
add
xchg
mov
pop
inc
les
adc
mov
sbb
jg
jl
mov
fistp
push
adc
lahf
adc
(bad)
shl
pop
adc
call
dec
sbb
scas
or
inc
mov
ret
mov
and
leave
les
cmp
je
or
or
push
outs
push
and
pop
mov
inc
ja
loopne
push
je
fiadd
add
and
test
inc
dec
dec
pop
mov
inc
icebp
aad
sub
or
add
loopne
gs
or
cmp
or
jns
sub
fisttp
test
adc
gs
popf
retf
cmp
fdivr
push
push
xor
nop
imul
sbb
jg
push
inc
daa
or
movs
movs
iret
add
pusha
cmc
shl
rol
add
sbb
mov
push
pushf
mov
dec
xor
cmps
pushf
push
mov
out
jmp
dec
inc
xchg
adc
sub
adc
add
pop
cdq
popa
cmp
sub
add
lock
or
cmp
cmps
add
mov
push
cmp
add
cmp
xchg
cmp
mov
jg
adc
cmc
push
int3
and
jecxz
or
add
adc
xchg
int3
sub
mov
mov
dec
jmp
and
mov
fild
add
aaa
and
pop
int3
stos
push
inc
push
and
add
sub
add
dec
jl
or
or
and
mov
mov
add
lods
outs
add
mov
xchg
shl
fnstenv
fisttp
sbb
stos
cli
rol
xor
mov
mov
xor
add
pushf
mov
jg
pushf
sbb
jge
inc
cmc
sub
call
jmp
add
adc
sbb
es
mov
or
mov
push
rcl
(bad)
int3
cmps
push
or
adc
xlat
ror
loope
or
mov
pushf
dec
mov
dec
fdivr
add
cmp
mov
bound
inc
sbb
add
and
and
cmp
clc
mov
and
add
push
xchg
sub
sbb
sbb
push
fcmovbe
aam
or
push
fwait
or
mov
fld
mov
xchg
fdivr
or
call
push
mov
push
daa
adc
retf
and
ror
mov
loop
push
loop
je
nop
aam
in
inc
mov
in
mov
mov
cld
das
int3
ss
xlat
cld
push
test
xchg
mov
pop
sbb
sub
pop
push
cmc
inc
test
inc
(bad)
mov
mov
pop
int3
pop
cld
jmp
(bad)
(bad)
push
mov
inc
and
adc
in
not
fild
inc
mov
sub
xchg
fmul
xor
test
adc
mov
lahf
cmp
test
(bad)
pop
imul
pop
jmp
push
inc
fcom
ret
or
or
int3
push
pop
adc
add
and
or
and
jg
mov
pextrw
adc
popa
push
xchg
mov
sub
into
(bad)
jae
sub
sub
mov
inc
or
and
and
dec
clc
repz
pusha
imul
add
push
xor
pop
or
dec
mov
mov
movs
or
jmp
jg
and
push
jbe
adc
movs
mov
push
test
push
and
repnz
lea
jg
add
pop
xchg
inc
xlat
xor
mov
mov
je
inc
or
add
adc
sub
mov
mov
adc
out
sub
dec
scas
lahf
add
and
sub
loop
add
punpcklwd
pop
je
jne
xchg
xor
mov
jg
mov
jno
mov
add
inc
lock
nop
popf
push
fwait
sub
ins
aam
pop
inc
add
push
jne
adc
inc
sub
ror
jmp
call
mov
jmp
xchg
test
pop
or
jb
stos
lods
mov
sbb
iret
add
inc
cmp
xchg
movs
adc
lock
lock
and
xchg
cmp
int
cld
mov
dec
fcomp
fsubr
xchg
jns
adc
inc
sub
jne
adc
cmps
test
adc
pop
jo
test
(bad)
push
sub
or
test
ins
sbb
mov
xor
dec
add
dec
ror
shr
test
(bad)
mov
fisubr
ror
aaa
push
sub
mov
pop
test
sub
mov
jne
jl
push
nop
ret
dec
cld
xchg
xlat
mov
or
mov
add
cwde
cs
cwde
sbb
and
cld
icebp
inc
and
and
or
push
and
pop
stc
cdq
or
push
push
rol
mov
adc
adc
icebp
xchg
fisub
xchg
cdq
imul
add
cld
push
pop
pop
and
xchg
jmp
lock
add
push
inc
popa
call
or
aam
aam
sbb
adc
in
in
adc
and
dec
inc
loope
sbb
pop
add
fisttp
scas
add
and
xor
mov
mov
mov
pop
loopne
mov
or
loopne
in
jg
in
arpl
jg
mov
jg
mov
or
jg
mov
jg
inc
push
in
cmp
mov
leave
adc
xlat
cmp
or
rcl
add
dec
mov
adc
sbb
xor
pop
clc
or
adc
sti
pop
jae
add
push
pop
add
push
push
sbb
cld
sbb
add
mov
or
sbb
(bad)
dec
or
shl
mov
les
out
gs
es
(bad)
into
xchg
lahf
daa
jecxz
pop
les
add
add
mov
mov
in
cs
out
inc
inc
repnz
cmp
add
dec
rol
icebp
sbb
test
in
icebp
or
adc
inc
or
adc
das
(bad)
retf
hlt
fld
inc
pop
xor
add
sbb
adc
xchg
push
pop
sbb
adc
or
sub
push
jbe
iret
push
inc
hlt
push
cmp
outs
or
js
inc
push
scas
add
mov
nop
or
clc
out
add
xor
pop
cld
hlt
and
push
and
loope
loop
push
ins
outs
adc
inc
sub
aaa
je
call
repnz
or
cmp
mov
or
or
or
jmp
push
add
mov
inc
adc
dec
mov
mov
mov
enter
lahf
mov
(bad)
mov
add
dec
daa
ror
hlt
or
inc
xor
jo
lahf
adc
mov
and
mov
lods
mov
xchg
push
push
cdq
inc
push
inc
inc
pop
nop
push
cmp
ss
push
jb
inc
inc
daa
jecxz
mov
test
mov
mov
dec
loop
aad
inc
push
inc
jmp
xchg
sbb
je
pop
sbb
and
mov
pop
ja
(bad)
mov
add
shr
ja
fdiv
jnp
jecxz
mov
push
push
mov
dec
aad
ret
cmp
jecxz
add
adc
cmp
dec
mov
sub
arpl
dec
mov
cmp
xchg
enter
xor
pop
jl
loopne
fld
rcr
movs
sub
rcl
mov
adc
mov
lahf
and
loopne
and
inc
and
cld
rol
inc
xchg
movs
pop
add
add
add
outs
arpl
pop
test
mov
ret
jno
push
sbb
inc
mov
clc
jecxz
inc
jmp
test
cmp
ror
rol
cmp
push
or
enter
add
cld
xor
fidivr
or
jmp
push
or
outs
sbb
adc
push
cmp
cdq
int3
inc
or
mov
xor
xchg
mov
test
fist
push
or
or
mov
sub
jp
sub
arpl
dec
add
sbb
pop
mov
lahf
ds
not
add
dec
nop
mov
inc
dec
(bad)
dec
ficomp
add
loope
push
sahf
clc
iret
sbb
mov
mov
lahf
sahf
ins
fbld
daa
adc
xchg
xchg
scas
pusha
dec
jmp
push
adc
push
cmp
shr
sbb
jg
and
dec
xor
movs
xchg
fisub
push
sub
mov
mov
loope
lahf
ret
(bad)
sbb
push
mov
adc
inc
sbb
xor
out
cmp
xchg
scas
xchg
xor
nop
pushf
mov
sbb
jo
xchg
mov
or
jo
xchg
mov
out
je
xchg
mov
xor
xchg
sub
pop
ret
inc
mov
push
mov
dec
retf
in
push
xchg
mov
pop
retf
pop
push
mov
cmp
inc
and
jle
push
jg
inc
or
push
je
lock
mov
add
jl
cmps
test
das
call
jo
xor
adc
mov
cmp
inc
lahf
jecxz
aaa
icebp
adc
pop
or
call
add
mov
inc
push
dec
ror
lahf
mov
adc
cmp
or
inc
or
inc
pop
add
mov
aas
fdiv
and
leave
mov
inc
sub
add
pop
sub
inc
pop
pushf
add
cwde
sbb
and
cmp
sbb
jns
ds
stos
arpl
dec
or
test
push
inc
and
mov
enter
sub
inc
pop
inc
jns
scas
xor
das
ja
in
pop
loop
adc
inc
nop
add
mov
cmp
test
add
add
push
inc
add
in
cmps
add
and
outs
jge
lea
or
dec
dec
cmp
xchg
loop
add
mov
or
retf
daa
cld
fsubr
cmp
clc
sub
push
dec
cmp
add
idiv
sub
mov
rcr
popa
or
aam
add
sbb
pop
cwde
dec
mov
adc
mov
adc
outs
clc
sahf
nop
or
push
adc
add
sub
or
fist
push
xchg
push
and
sub
stos
add
rcl
inc
sub
fadd
sub
jmp
lods
mov
jnp
xor
test
add
push
pop
loopne
mov
movs
push
fild
pusha
or
mov
pop
rol
nop
int3
push
pop
sub
mov
sub
mov
inc
mov
jae
arpl
imul
ins
jg
je
or
loop
adc
add
hlt
xchg
pusha
fsubr
dec
xchg
je
ins
les
ins
sbb
and
inc
ds
xchg
daa
test
add
mov
cmps
movs
ds
test
hlt
pop
jo
mov
push
add
add
push
xor
rcr
push
mov
fistp
jge
(bad)
lds
mov
push
fucom
pop
sub
aas
inc
shl
cmps
sbb
jge
add
movs
mov
cmp
fist
(bad)
lock
dec
popa
cmp
jecxz
mov
add
pop
mov
pop
add
pop
jecxz
test
inc
ror
push
mov
ins
sub
adc
dec
loope
daa
jp
jle
add
mov
enter
adc
fnstenv
hlt
sbb
mov
add
test
add
sbb
push
lea
int3
jp
popf
push
xchg
lods
xlat
(bad)
test
nop
fild
mov
xor
add
push
push
mov
inc
bound
popf
xchg
or
xor
mov
inc
dec
mov
inc
push
pusha
mov
sbb
dec
and
and
adc
dec
push
jmp
dec
dec
jmp
pushf
dec
add
pop
jge
xchg
mov
push
add
add
(bad)
gs
cmp
rcr
lods
and
cmp
dec
xchg
add
xchg
cmp
push
repz
jmp
mov
and
mov
push
les
xchg
in
test
in
lea
or
pop
add
adc
pop
(bad)
push
in
inc
test
rol
in
and
xor
leave
add
push
push
mov
adc
pop
xchg
inc
ss
inc
hlt
push
jg
sub
push
pop
popa
jg
pusha
sub
jg
inc
fmul
call
fimul
add
or
cmp
ins
or
xchg
mov
add
fsubr
adc
adc
mov
inc
pop
js
sbb
imul
leave
cmp
lds
in
push
push
sub
int
sub
add
jg
dec
dec
sbb
inc
or
mov
cmp
adc
push
dec
and
mov
aas
ret
add
ror
(bad)
loopne
mov
cmps
xor
mov
add
cmp
mov
sbb
add
jno
cli
popf
cmp
xor
push
and
test
jo
test
popa
add
add
add
or
ds
(bad)
iret
jmp
jmp
mov
adc
lock
dec
adc
dec
das
sbb
sbb
and
add
sub
or
push
push
scas
movs
arpl
xchg
push
dec
pop
xchg
sub
aaa
jl
mov
push
xor
pop
or
mov
(bad)
sub
push
inc
push
idiv
add
or
add
dec
adc
inc
add
xchg
fistp
(bad)
pusha
test
nop
pop
xor
xor
adc
mov
sub
bound
add
jmp
in
or
sub
add
push
aad
adc
inc
(bad)
in
fcom
inc
or
jo
push
push
push
pop
outs
out
retf
or
cwde
sub
aas
je
inc
mov
and
cmp
push
leave
je
add
xchg
fstp
xor
sbb
pop
sub
(bad)
fdivr
inc
and
cld
cwde
fmul
add
sub
push
push
mov
mov
dec
jb
dec
pop
mov
xchg
rol
sub
mov
mov
pop
fnstenv
nop
and
or
ds
aaa
pushf
push
xchg
jo
cmp
inc
jo
je
add
pop
in
lods
xchg
pop
cmp
mov
xor
jg
cwde
add
cmp
mov
gs
cwde
and
push
cmp
sub
add
pop
cwde
push
and
pop
sbb
sub
xor
mov
sub
leave
sub
cwde
ret
push
jmp
outs
xor
push
out
push
bound
fsubr
cmp
ror
cs
cld
xor
sbb
push
or
or
mov
pop
hlt
adc
or
ror
lahf
or
shr
test
(bad)
xor
clc
das
call
or
or
sub
sti
inc
movs
sub
lahf
push
sub
push
dec
add
sbb
dec
leave
int3
(bad)
cwde
add
lods
sub
add
lods
jg
adc
add
fadd
and
dec
ss
inc
lahf
jmp
leave
shl
sub
repnz
loopne
push
leave
or
push
inc
cmp
cdq
je
push
or
pop
mov
adc
jp
retf
push
adc
add
and
add
jbe
pop
mov
sbb
neg
push
mov
cmp
dec
jp
fild
add
cmps
cmp
dec
ss
sahf
adc
call
cmp
test
js
(bad)
mov
fcmovnbe
adc
test
es
ds
daa
mov
and
mov
in
je
test
xchg
cmp
in
test
and
push
xor
xor
sete
je
jecxz
push
adc
xchg
gs
cmp
push
sub
sbb
adc
mov
pop
sahf
cmp
sub
inc
in
xor
data16
gs
loop
mov
and
mov
test
push
fcom
jne
push
mov
(bad)
in
fdivr
sbb
dec
or
or
ret
add
in
(bad)
je
add
jecxz
dec
icebp
cmp
cmp
aad
mov
mov
(bad)
inc
push
mov
mov
shr
mov
aad
jge
inc
mov
sbb
sbb
or
shl
xor
mov
xchg
call
call
add
mov
adc
in
xor
xchg
pop
pusha
mov
rcr
jecxz
daa
push
cmp
lock
(bad)
fbstp
add
loop
iret
or
jns
test
mov
push
mov
cwde
in
cwde
pop
mov
pop
sbb
pop
add
adc
adc
aaa
sbb
test
inc
xor
and
xchg
jno
jno
gs
loope
and
outs
xchg
sub
dec
stos
pushf
mov
jne
(bad)
rol
mov
inc
fbld
push
inc
xor
or
and
ret
in
sbb
or
add
push
pop
in
inc
add
push
fisttp
ror
rol
cmp
xchg
lock
and
xchg
leave
in
mov
add
shr
daa
lods
cdq
mov
scas
les
and
sysexit
inc
ins
add
retf
jecxz
or
push
nop
shl
or
call
xor
pusha
mov
stos
ins
xchg
sub
call
lods
lods
shr
cmp
add
bound
repz
cmps
nop
add
fwait
pop
movs
lods
idiv
ins
add
and
add
dec
(bad)
test
sbb
lock
or
add
add
(bad)
mov
or
jecxz
pop
fsub
es
mov
pop
popf
ja
and
mov
imul
push
je
and
pop
retf
xchg
and
mov
pop
or
ror
adc
and
adc
add
mov
and
fisttp
fxch
adc
les
fadd
rol
or
xor
addr16
aaa
push
rcl
leave
xchg
adc
ror
adc
sbb
inc
in
(bad)
push
inc
push
ins
icebp
xor
mov
inc
push
inc
mov
cs
mov
dec
mov
xchg
add
or
sbb
dec
push
lds
mov
loope
mov
mov
xor
push
call
mov
sbb
push
call
and
xchg
mov
add
xchg
or
jns
jecxz
pusha
pop
dec
xchg
dec
or
pop
enter
stos
aam
sbb
mov
and
push
inc
pop
lods
mov
fild
mov
adc
add
add
or
xor
push
add
(bad)
(bad)
dec
xchg
sub
mov
mov
ins
sub
aas
and
dec
test
and
dec
or
pop
dec
xor
pop
shl
mov
sbb
or
mov
test
ins
push
and
add
mov
pop
clc
cmps
add
mov
xor
push
sub
movs
ret
scas
pop
ret
adc
sbb
out
sti
cmp
cmp
pop
pop
dec
lds
call
xchg
and
stos
mov
and
pusha
int
adc
and
dec
cmp
push
inc
push
add
jne
inc
bound
inc
add
xor
push
xchg
daa
shl
data16
lock
pop
inc
test
sbb
add
aas
cmp
pop
loope
adc
xor
pop
psubd
mov
je
and
test
push
or
mul
xchg
jns
xchg
mov
xchg
add
dec
xor
in
adc
or
bound
add
add
adc
lahf
(bad)
aad
jg
or
das
push
xchg
sbb
push
dec
pop
fucomp
or
pusha
int3
jle
or
push
sub
add
jmp
(bad)
jmp
(bad)
rcl
(bad)
cmp
sahf
and
push
aaa
pop
and
inc
sub
add
xchg
add
xor
xchg
add
push
add
add
and
sbb
add
retfw
jo
cmc
pop
xchg
adc
adc
(bad)
xchg
in
xor
inc
or
ja
push
jne
shrd
stos
mov
enter
call
ins
xchg
sbb
pop
fadd
cmp
inc
pop
add
(bad)
dec
or
cld
pop
xor
les
dec
push
lds
push
add
lea
test
mov
lds
sar
les
add
cmp
xchg
imul
inc
ds
inc
and
fistp
pop
jo
dec
cmp
mov
das
lds
dec
dec
addr16
adc
xor
inc
mov
int
push
push
sub
push
out
or
lods
sti
lods
push
add
and
repnz
jno
adc
mov
dec
jecxz
add
mov
add
ret
outs
sbb
hlt
push
fbstp
xor
sub
(bad)
mov
xor
jp
xchg
sbb
mov
cmp
dec
adc
lahf
daa
adc
jmp
dec
loop
dec
jb
pusha
ja
fadd
mov
test
dec
push
sar
(bad)
test
sub
adc
and
jle
cmp
push
cld
push
xchg
inc
cli
push
add
xor
or
add
sbb
inc
aad
cld
push
sbb
mov
test
pop
adc
and
push
lea
int3
leave
shl
sbb
ja
shr
les
add
fiadd
jp
push
cmp
cld
xor
xor
xchg
lahf
or
imul
fwait
ja
int
xchg
in
add
dec
pop
sub
push
test
jmp
pop
pusha
or
inc
inc
jmp
mov
sub
add
pop
xor
cmp
fisttp
sbb
mov
add
push
enter
bound
retf
push
or
inc
lahf
test
je
ja
sub
jl
arpl
pop
push
mov
shl
dec
dec
add
rol
or
add
dec
jno
jg
push
inc
inc
mov
mov
dec
xchg
add
xor
enter
adc
(bad)
in
fsub
xor
and
arpl
push
or
sub
stos
ins
nop
icebp
enter
push
mov
cmp
into
clc
les
sbb
cmp
cmps
test
popa
dec
stc
sub
add
dec
sub
cmp
xchg
enter
xchg
add
inc
imul
(bad)
jmp
retf
add
xchg
js
ins
dec
test
mov
rol
sbb
loope
inc
xor
(bad)
loop
mov
xor
mov
xor
sub
bound
scas
add
jnp
mov
lea
rep
data16
inc
jl
pop
push
fst
or
(bad)
jecxz
dec
int3
jns
in
aam
adc
cmp
add
aam
add
pop
mov
mov
aaa
aas
and
sub
adc
or
mov
or
sub
pop
mov
inc
aas
popf
inc
or
aas
inc
inc
call
xor
adc
cmp
ror
sub
ret
aam
lds
cwde
gs
inc
mov
jmp
jo
or
fistp
xchg
pop
mov
mov
adc
inc
dec
popa
push
imul
add
push
daa
adc
imul
push
push
add
(bad)
sbb
or
imul
sbb
les
push
dec
push
(bad)
or
xor
sub
inc
push
adc
ficomp
movs
das
pushf
xor
jne
mov
xchg
pop
lds
push
mov
or
pusha
inc
add
jmp
inc
dec
sub
and
ficom
or
(bad)
sbb
mov
pop
add
popa
inc
pop
mov
cmps
add
sbb
push
es
xor
call
pop
add
adc
inc
cmovnp
fnstcw
add
test
sbb
cmp
sub
nop
test
add
sbb
inc
enter
push
mov
mov
hlt
aas
adc
retf
sar
xor
sahf
js
ins
pop
enter
and
into
inc
ret
jge
lods
clc
loop
jp
or
xor
inc
push
outs
adc
(bad)
inc
add
xor
add
mov
add
mov
or
sbb
lock
xlat
aam
jnp
js
and
ret
jno
mov
inc
mov
inc
(bad)
(bad)
(bad)
sti
shr
shl
sti
movs
xor
or
mov
fisttp
jle
(bad)
add
mov
dec
or
inc
clc
outs
or
fwait
sub
(bad)
iret
push
leave
push
adc
xchg
or
cmc
xchg
rcl
sub
pop
adc
outs
add
mov
push
mov
xchg
xor
or
sbb
mov
cmp
or
inc
or
ins
mov
cmp
and
fadd
test
add
pusha
jmp
add
push
shl
outs
sbb
lods
inc
ror
push
scas
cld
mov
xor
js
idiv
cwde
cmp
add
rol
cwde
sti
mov
and
cld
std
in
mov
inc
scas
(bad)
jle
or
add
push
or
lds
sub
xchg
pop
or
push
mov
mov
add
cmp
adc
push
inc
retf
adc
adc
adc
xor
xchg
cmp
ret
or
pop
mov
jno
mov
lods
pop
stc
fistp
daa
idiv
jl
or
mov
loope
sub
push
mov
pop
mov
cmp
pop
fstp
and
inc
push
or
bound
pop
outs
pop
or
mov
inc
das
adc
shl
inc
and
adc
mov
xlat
sbb
add
mov
adc
cmp
jmp
mov
push
add
jecxz
popa
and
push
lods
sahf
or
mov
jge
mov
jmp
inc
sbb
lods
sar
and
hlt
and
inc
sub
add
or
in
sub
and
sbb
clc
inc
adc
mov
sub
mov
dec
sbb
push
jg
stos
push
pop
inc
(bad)
call
rcr
push
pop
pop
dec
shr
lock
cwde
test
mov
sub
sub
jno
dec
arpl
and
push
sbb
outs
push
and
loopne
dec
sbb
icebp
sub
adc
sub
aam
add
mov
(bad)
loopne
push
aam
shl
add
dec
ret
adc
enter
loope
aas
enter
push
fld
je
pop
fwait
cs
adc
fidiv
mov
xor
aaa
inc
mov
icebp
es
adc
xchg
push
outs
mov
add
push
mov
push
imul
xchg
je
push
add
or
in
push
rcl
out
out
push
sub
test
jmp
push
or
jno
call
adc
outs
rcr
dec
add
add
inc
xor
adc
xor
or
and
dec
or
js
mov
fsub
inc
ss
xchg
adc
inc
and
push
inc
movs
test
pop
ds
pop
ret
inc
cld
pop
fs
loopne
jge
out
aam
aam
sbb
ficom
stos
fdivr
bndstx
xchg
ret
adc
push
jns
jp
nop
adc
imul
dec
and
enter
ret
and
imul
xor
push
add
add
and
pusha
pop
add
fldenv
lahf
mov
fstp
xor
add
sbb
mov
cmps
or
cmp
mov
mov
mov
mov
test
cmps
and
dec
movs
push
fs
cmp
in
aas
das
out
mov
add
or
mov
(bad)
clc
mov
repnz
adc
or
in
add
cwde
imul
call
(bad)
(bad)
xlat
mov
fs
mov
sbb
rol
stc
and
call
das
mov
xor
int3
test
sub
push
add
sbb
(bad)
jl
mov
push
and
xor
popa
jno
mov
rcl
rcr
scas
sub
cmc
sub
pop
lea
and
pop
stos
pop
pop
pop
adc
out
sbb
ss
popa
aas
stos
pop
adc
in
add
add
out
and
movzx
ins
mov
mov
rol
xchg
xchg
test
and
in
xchg
ins
push
add
push
popf
pusha
adc
mov
jle
loope
nop
mov
adc
push
sbb
mov
or
mov
lea
xor
push
mov
out
mov
dec
jmp
popa
repz
jo
pop
adc
addr16
movs
mov
cdq
pop
js
fsubr
test
lds
outs
inc
cmps
maxps
and
loope
pop
jno
outs
or
stc
lds
and
int3
addr16
mov
enter
call
ja
lods
jno
dec
bound
lea
or
cmp
int3
adc
sub
pop
dec
lock
dec
test
and
mov
add
lock
cmp
test
sub
ins
clc
out
adc
sub
inc
add
push
inc
mov
inc
push
rol
ins
mov
sub
ret
test
aam
adc
call
dec
pop
xor
or
popa
pusha
sbb
add
sub
movs
sbb
push
call
mov
pop
pop
sbb
pop
retf
pop
mov
mov
or
pop
dec
daa
add
cmp
sub
and
cmp
and
lea
call
adc
lea
cmp
xchg
cmp
mov
ss
sbb
cmp
ffree
aad
pop
mov
xchg
xor
push
mov
js
or
jmp
rcr
add
lock
loope
or
stos
and
jecxz
xchg
mov
out
mov
test
stos
add
mov
xchg
outs
adc
mov
inc
or
lea
adc
sub
mov
test
fwait
leave
pop
xchg
sbb
mov
push
icebp
mov
push
xor
xor
outs
ins
aad
lock
or
jecxz
stc
push
or
and
mov
mov
pop
jg
mov
aad
push
xor
jne
adc
pop
add
mov
cmp
push
jecxz
inc
into
add
add
popf
push
cld
xor
ret
push
sti
pusha
push
or
sub
ror
pop
mov
pop
cmp
imul
mov
mov
pusha
inc
inc
pop
mov
cmp
test
xor
jge
jno
mov
fwait
push
mov
int
test
inc
sub
push
fild
clc
and
scas
mov
or
xchg
inc
cmps
add
jns
add
adc
inc
xchg
jg
mov
pop
push
shl
adc
or
loope
push
add
mov
fcom
jge
sbb
dec
xor
and
sub
xor
and
xor
xor
and
cmp
inc
leave
and
dec
dec
dec
push
and
dec
xor
xchg
dec
xor
pusha
fs
and
je
mov
and
mov
sbb
sbb
enter
enter
mov
sbb
enter
enter
rol
sbb
sbb
enter
enter
loopne
call
in
lock
sbb
inc
push
in
add
push
in
push
or
adc
push
in
sbb
inc
push
in
and
push
in
push
sub
xor
push
in
cmp
inc
push
in
inc
dec
push
in
push
dec
push
push
inc
push
in
pop
pop
in
push
in
fs
ins
jo
inc
push
in
js
pop
inc
push
in
test
lahf
add
fistp
adc
leave
xchg
movs
xor
jne
mov
add
add
mov
or
add
xchg
inc
mov
mov
inc
pop
adc
and
lahf
mov
and
mov
jp
xchg
or
xor
xor
fs
movs
mov
lods
pop
and
mov
sub
mov
das
cmp
mov
jne
fbld
jl
nop
jo
push
dec
mov
leave
sbb
ins
lods
sbb
mov
mov
or
lods
add
push
or
rcl
js
fs
loopne
and
push
mov
jecxz
pop
lock
push
popa
add
sub
push
lea
jno
into
xchg
inc
pop
ins
mov
popa
data16
add
movs
mov
sbb
pop
in
dec
into
mov
(bad)
jecxz
xchg
or
or
ffreep
(bad)
pop
aam
sbb
sbb
cli
imul
push
(bad)
aam
and
adc
push
jno
push
jecxz
dec
pop
ret
add
pop
sub
xor
xchg
or
or
dec
pop
sbb
mov
add
lock
mov
test
add
fcmovnb
push
ja
scas
lock
pushf
add
leave
mov
xor
push
mov
sbb
loopne
jmp
mov
adc
mov
add
or
or
mov
inc
pop
xor
leave
dec
arpl
int3
test
push
in
mov
mov
(bad)
popa
or
jl
enter
inc
and
mov
add
xchg
xor
sub
lea
push
adc
in
(bad)
adc
pop
push
or
push
push
pop
pop
nop
ret
inc
or
cdq
mov
fist
xchg
enter
add
(bad)
jge
cwde
imul
mov
movs
add
push
or
into
pop
or
mov
sbb
movs
retf
cld
sbb
inc
and
lea
inc
(bad)
in
das
ins
add
mov
mov
repz
stos
lds
push
sbb
loope
jb
(bad)
sbb
ret
stc
inc
imul
xor
pop
or
js
in
mov
js
aas
jb
or
cwde
jg
icebp
ret
sar
add
xchg
add
loopne
fnstenv
cmp
pusha
push
leave
inc
fdiv
adc
cs
or
inc
jecxz
mov
add
sub
inc
push
rol
cmp
movs
lock
dec
test
(bad)
pusha
cwde
aad
push
(bad)
adc
sbb
rcl
sar
add
out
movs
ins
add
inc
mov
shr
pop
out
inc
push
mov
ret
ror
popa
repz
jmp
out
mov
popa
pusha
sti
add
mov
sbb
cld
xor
dec
mov
test
pop
movs
xor
xchg
and
cmp
in
add
pop
imul
dec
jne
cdq
sbb
cmp
ret
mov
push
nop
or
cmovo
shl
and
aas
rol
(bad)
iret
pushf
movs
mov
imul
cld
cmp
int3
jmp
fsub
xor
cld
seta
out
dec
push
fbstp
shl
mov
dec
adc
inc
loopne
scas
or
rcr
inc
enter
mov
add
shr
cmps
lods
mov
scas
lds
aas
push
xor
and
add
(bad)
clc
cmps
ret
lods
outs
mov
mov
imul
stos
mov
enter
add
shl
int
ins
dec
cmp
pop
mov
test
hlt
fs
test
retf
jno
or
or
inc
jmp
add
xor
jne
or
js
xchg
or
add
fcomp
ret
xor
or
scas
test
pop
add
hlt
popf
jo
mov
enter
mov
adc
push
mov
ds
daa
in
out
inc
xor
or
imul
cmps
mov
stos
or
call
mov
(bad)
pusha
js
sbb
and
cmp
hlt
add
lods
test
add
ja
and
scas
xor
xchg
loopne
mov
cmc
sub
xor
adc
lahf
xchg
cmp
xchg
adc
add
jne
xor
adc
enter
inc
pushf
bound
push
jmp
lods
mov
fld
add
add
cmp
cmp
sub
jge
loopne
pop
dec
inc
fild
jbe
dec
out
add
push
test
add
or
sahf
mov
mov
add
push
sbb
sub
push
cmp
outs
push
imul
inc
or
add
mov
adc
arpl
sbb
add
cmp
push
inc
pavgb
addr16
lock
cmps
and
adc
xor
xchg
inc
jp
cs
repz
dec
enter
ret
xor
pushf
sbb
xor
btr
xor
arpl
adc
xchg
or
inc
test
mov
ror
jl
enter
out
adc
(bad)
xchg
mov
dec
fcom
push
dec
out
push
push
add
pop
cmps
scas
jo
cs
xlat
push
cwde
cmp
addr16
dec
out
je
push
jmp
pop
ss
jno
call
mov
in
ins
cmp
push
int3
push
(bad)
fwait
aam
(bad)
push
xor
or
adc
sub
jmp
or
pop
test
inc
inc
dec
xchg
jge
sbb
fadd
fcomp
mov
cmp
add
fimul
push
dec
in
sti
jne
cs
enter
push
shl
push
xor
fbstp
or
jge
popf
mov
or
popa
sbb
cmp
adc
js
push
xor
push
lock
outs
aas
pop
inc
push
not
popf
or
xchg
mov
lock
push
pop
inc
jno
and
cwde
xor
shl
aas
push
pop
or
adc
iret
into
xchg
lock
inc
sub
xchg
and
enter
pop
rcr
ror
mov
pop
push
cmp
std
sbb
jmp
sbb
loope
rol
push
fimul
or
and
adc
jne
push
jno
inc
mov
push
dec
inc
movs
pop
movzx
inc
in
jb
dec
xor
rcr
push
mov
sub
(bad)
pop
mov
setae
mov
and
(bad)
cmps
std
inc
lock
adc
ror
add
(bad)
int
sbb
mov
add
sbb
(bad)
aad
ror
push
pop
xadd
sub
test
or
adc
or
push
hlt
add
movs
inc
loop
aaa
push
or
cmp
adc
shl
adc
aad
dec
xor
retf
add
add
pop
call
add
xchg
and
out
add
test
fcom
aad
and
xor
push
retf
rcl
rcr
and
push
pop
shl
imul
push
inc
sbb
xor
mov
test
test
imul
or
(bad)
xlat
inc
mov
test
test
inc
aam
or
push
xor
pop
or
or
mov
add
aas
and
add
dec
mov
mov
or
push
xor
dec
dec
fstp
pop
sub
mov
inc
sub
pop
xchg
sub
pop
rcr
add
add
push
push
js
mov
test
pop
push
dec
dec
cld
cmp
add
sub
adc
cmp
add
sub
ss
xchg
popa
add
or
sub
mov
iret
adc
jo
inc
sub
add
add
sub
jmp
pop
cmps
scas
add
jmp
pop
xor
or
add
imul
loopne
adc
sbb
xor
mov
inc
push
or
xor
aam
pop
inc
ins
sbb
add
pop
or
adc
repz
or
mov
(bad)
push
arpl
push
les
fidiv
jge
ss
add
cwde
shr
adc
push
cdq
mov
cmp
or
retf
push
jmp
fistp
xchg
cmp
jmp
lea
add
cmp
push
mov
dec
mov
call
jmp
mov
add
inc
lock
and
lahf
ret
popa
repz
or
(bad)
popa
mov
call
or
jnp
ss
movzx
mov
cmp
jb
push
jae
jnp
inc
inc
js
mov
dec
idiv
popa
cmp
mov
or
inc
xor
push
dec
add
leave
push
adc
or
dec
and
dec
(bad)
dec
adc
add
ss
and
loopne
adc
jecxz
adc
and
mov
push
loopne
sub
or
ficomp
enter
iret
sbb
rcl
xor
pop
and
or
adc
cdq
and
mov
xor
cmp
jae
xchg
push
(bad)
les
xor
rcl
cmp
inc
adc
pop
push
cmp
mov
adc
push
pop
outs
movs
mov
pop
ror
ret
ret
das
pop
jno
js
or
or
add
mov
add
xchg
enter
enter
outs
ret
aaa
mov
or
pusha
fbld
rcr
adc
pusha
mov
mov
cmps
and
les
add
sar
dec
mov
loopne
mov
outs
mov
mov
sub
adc
add
adc
imul
rol
add
add
adc
adc
cmp
repnz
inc
inc
inc
mov
inc
and
mov
add
dec
inc
sbb
add
and
or
inc
repnz
add
gs
inc
jge
cs
jno
add
xor
add
sub
(bad)
lds
mov
xor
mov
rol
ret
mov
pop
add
call
mov
push
pop
and
adc
or
inc
jmp
xchg
or
jp
dec
imul
imul
mov
ins
xor
pop
ins
sub
inc
stc
adc
jg
aaa
fwait
mov
fsubr
or
sub
pop
stos
xor
push
fsub
push
pop
xchg
xlat
or
mov
lds
test
dec
mov
dec
rcr
and
sbb
sbb
pop
lock
push
mov
imul
mov
rol
mov
add
xor
aam
inc
inc
jg
cmc
xor
xchg
push
or
sub
xor
jge
pop
or
inc
test
adc
inc
sub
sub
mov
outs
sbb
stos
enter
jbe
(bad)
cmc
test
sub
add
adc
test
add
into
call
dec
or
sbb
lods
test
cld
ja
call
inc
add
mov
or
pop
je
pop
test
imul
inc
inc
mov
xchg
je
inc
xchg
iret
cmp
inc
je
push
mov
or
mov
xor
cs
loopne
add
jbe
loopne
push
test
cmp
push
add
push
cmp
xchg
shl
test
fbstp
add
sub
nop
imul
movs
jb
adc
sub
dec
inc
xor
test
inc
sbb
imul
js
sub
(bad)
xor
mov
iret
xchg
and
jb
scas
inc
mov
cmc
mov
in
das
or
sub
jbe
xor
adc
ror
pusha
push
mov
add
or
arpl
cmp
pop
fcomp
add
jmp
sbb
add
inc
sbb
pop
sbb
add
add
jmp
dec
sbb
inc
cmc
je
sub
inc
sub
xor
cmp
pop
pop
shl
jno
ja
iret
cwde
enter
lds
and
cmp
(bad)
pop
sbb
lock
pop
dec
shl
and
pop
xor
dec
in
sbb
jne
push
in
out
push
rcl
push
xchg
ja
test
mov
push
mov
repz
sub
and
dec
or
adc
or
scas
push
cmp
lea
pop
pop
ins
and
adc
or
dec
pop
dec
xchg
xchg
in
push
shl
jne
int
in
mov
mov
and
or
jecxz
mov
loope
xor
das
pop
mov
loopne
in
push
jo
inc
call
clc
test
int3
jbe
sub
outs
mov
dec
mov
add
add
or
pusha
pop
ret
stos
das
jp
jg
push
push
std
adc
inc
hlt
fistp
xchg
fsubr
bound
ret
cmps
cmp
jae
or
fidiv
cwde
out
adc
jbe
imul
icebp
xchg
pop
cmovne
mov
fldenv
jns
inc
(bad)
mov
or
imul
aad
and
mov
out
cli
adc
add
aam
push
mov
pop
push
or
mov
dec
scas
add
dec
mov
mov
mov
adc
lock
lock
outs
or
add
lock
fadd
push
aas
xchg
adc
add
dec
lock
movs
adc
cmp
jle
add
sbb
or
push
ins
sar
pop
push
mov
lock
jp
push
push
adc
sub
xor
pop
mov
mov
inc
(bad)
or
lock
lock
jmp
loopne
cmp
add
aas
je
inc
inc
push
bsr
or
add
mov
movs
add
dec
stos
sbb
pop
mov
bound
aaa
or
or
xchg
and
xchg
je
cld
cmp
add
lds
add
dec
pop
mov
ret
je
leave
neg
push
loopne
xchg
fcmovbe
arpl
mov
test
retf
mov
push
loope
clc
sete
pop
add
mov
ret
adc
xor
or
mov
mov
pop
xor
cld
rcl
retf
add
dec
sub
dec
sub
adc
in
(bad)
sub
push
dec
cld
inc
adc
arpl
push
cld
fwait
cld
adc
loope
mov
cld
dec
push
test
je
jns
je
push
add
cdq
neg
cdq
push
push
adc
or
xor
ror
sub
add
xchg
(bad)
les
and
popa
cmp
cmp
lahf
xor
imul
mov
test
movs
repz
popa
xlat
xor
adc
push
jno
cld
(bad)
cld
and
cld
(bad)
shl
cld
sub
lea
mov
inc
mov
lds
jnp
(bad)
adc
push
sub
cmps
arpl
and
loopne
mov
pop
aas
inc
and
xor
loopne
loopne
adc
add
loopne
cmp
mov
mov
dec
sub
cmp
ja
mov
sbb
and
cmp
cmp
cmp
inc
sub
push
pusha
outs
loopne
jp
nop
jge
push
inc
and
lods
popa
loopne
sub
xchg
jg
cmp
sbb
pop
pop
push
or
and
inc
adc
sub
ret
cmc
outs
and
xor
xchg
jbe
inc
popf
jle
out
ja
or
pop
cmp
cmp
and
xor
and
adc
nop
mov
call
rol
sbb
or
dec
xlat
push
ds
loopne
nop
retf
loopne
call
es
cdq
loopne
int3
lea
pop
loopne
loopne
dec
sbb
dec
out
xor
pop
push
loopne
cmps
pop
xchg
loopne
loopne
loopne
fwait
sub
push
push
and
je
loope
adc
xor
adc
in
fcmovnb
or
sub
jo
shl
add
inc
pop
mov
rdtsc
int3
add
jno
sbb
mov
je
dec
jecxz
cld
add
pop
xchg
jge
out
fdiv
ret
adc
leave
or
test
les
mov
xor
add
jo
mov
push
xchg
rol
add
aam
js
test
stc
and
xchg
iret
mov
lods
xchg
push
xchg
les
push
jno
add
bound
adc
cwde
int
inc
dec
jno
jge
aam
mov
mov
cmp
mov
push
and
xor
mov
movs
jne
and
cli
sub
ror
add
in
je
xchg
cs
sbb
fcmovbe
or
sub
sbb
jle
and
push
xor
or
pop
outs
mov
push
cwde
test
aad
mov
aaa
xchg
add
sbb
cmps
out
mov
cwde
or
sbb
mov
fwait
shr
or
cmp
jmp
movups
pusha
shl
ja
inc
or
mov
mov
sub
outs
lock
mov
adc
dec
and
ds
(bad)
cwde
sub
dec
out
cmp
jg
adc
sub
jo
inc
add
sub
(bad)
adc
xor
add
ins
rcl
lea
inc
and
push
fmul
and
inc
dec
sub
clc
shl
test
sub
sub
test
enter
lds
add
imul
jne
push
out
inc
je
inc
sbb
imul
inc
sub
push
adc
sbb
sbb
sbb
sub
adc
mov
shr
or
jmp
pop
mov
shl
out
jmp
adc
inc
adc
sbb
mov
imul
dec
add
cld
jnp
add
out
xchg
call
cmp
adc
xor
pop
popf
pop
push
test
and
inc
and
cmp
fwait
les
xchg
add
cmp
sub
fwait
or
sub
adc
lods
or
or
fwait
nop
out
loopne
int
xlat
fwait
jmp
push
xchg
pushf
nop
(bad)
or
in
add
lahf
sbb
jb
call
pop
or
xchg
icebp
fwait
jns
mov
push
ins
sbb
lea
push
fbstp
dec
in
and
mov
test
xor
mov
mov
inc
cmp
mov
sbb
ret
ret
pop
fadd
and
adc
or
lock
(bad)
pop
(bad)
xor
xchg
mov
dec
lods
xchg
rcl
push
adc
xor
out
jmp
sub
adc
adc
add
xor
mov
cmp
mov
loop
push
add
or
push
and
pop
push
add
test
loope
adc
add
imul
dec
js
rcl
cmp
and
aam
aam
push
shr
shr
inc
shr
sar
daa
or
fwait
jmp
ret
adc
ss
jbe
push
addr16
(bad)
mov
or
push
dec
sub
jg
dec
cmovns
xchg
les
or
push
je
jmp
lahf
in
or
retf
pusha
pop
mov
push
push
mov
mov
jmp
xor
sub
into
loop
arpl
xchg
add
or
fisttp
or
leave
rcr
push
jl
data16
retf
push
mov
or
add
add
nop
dec
loopne
fs
imul
sub
push
adc
arpl
inc
rol
ss
sar
jle
jge
shr
xchg
in
scas
push
popw
adc
add
push
nop
dec
mov
inc
add
xchg
dec
mov
test
inc
sti
mov
adc
xchg
add
mov
or
hlt
pop
imul
das
imul
xor
xchg
dec
or
adc
int
je
push
and
ror
sbb
fs
sbb
sub
inc
pusha
xchg
nop
add
(bad)
cdq
les
mov
inc
lea
shl
std
push
nop
cmc
xlat
fs
push
xchg
mov
(bad)
(bad)
push
ins
push
sahf
push
rol
fisub
cmp
jb
aam
push
jnp
or
add
adc
les
or
or
outs
adc
in
or
inc
and
xchg
(bad)
jl
rol
xchg
cmp
int3
sbb
sub
shl
mov
test
call
enter
call
sbb
or
mov
and
adc
pop
cld
cmp
mov
add
popa
add
jl
adc
mov
ins
pop
add
dec
aas
sbb
test
or
or
ret
add
mov
ins
jmp
dec
cmp
or
pop
sbb
je
aas
or
sti
adc
add
cli
adc
fistp
in
or
dec
int
mov
and
cmps
mov
sbb
xor
or
js
inc
sbb
fs
aam
or
dec
fadd
mov
sbb
outs
push
adc
sbb
or
cmc
movs
test
sar
jg
xor
loop
shl
cmp
fsubr
daa
push
ja
add
adc
inc
dec
add
lods
je
add
mov
push
movs
loopne
arpl
inc
push
adc
sub
and
nop
inc
pusha
push
adc
mov
mov
jnp
mov
push
adc
neg
or
aaa
dec
adc
je
add
cmp
inc
sub
cwde
jl
int
inc
sub
adc
movs
adc
lea
js
mov
mov
push
in
or
xchg
dec
(bad)
jl
sbb
loop
push
jl
xor
add
add
js
mov
add
cmp
or
int
lock
cmp
cmps
inc
popa
add
(bad)
es
fcom
and
add
and
repnz
push
or
or
xor
push
nop
dec
cli
in
or
daa
add
mov
ret
push
mov
ret
aam
and
pop
sbb
ss
pop
add
stc
mov
adc
lods
pop
es
mov
adc
push
les
add
mov
popf
cmps
add
adc
adc
or
(bad)
jne
push
and
dec
ins
cmp
push
sub
sbb
or
push
mov
push
adc
xchg
je
or
sub
or
mov
mov
add
mov
add
in
std
sbb
je
or
push
jb
outs
mov
test
add
push
add
(bad)
mov
mov
fs
ret
xor
xchg
icebp
adc
clc
push
test
push
rol
add
in
sbb
test
push
pop
add
cmp
push
add
popa
pop
xchg
xor
sub
or
mov
mov
xchg
or
and
test
mov
sub
aas
lods
and
push
(bad)
hlt
or
leave
dec
mov
push
push
fst
ins
pop
cmp
mov
pop
mov
dec
jmp
imul
out
adc
ror
daa
push
pop
rol
add
stos
xchg
add
xchg
aaa
fadd
push
and
jle
pusha
adc
push
mov
mov
mov
cmp
sar
or
ins
test
dec
mov
hlt
cmp
iret
sbb
popw
mov
push
push
loop
or
push
cwde
popf
or
inc
rol
(bad)
lods
adc
fnstsw
xor
mov
cmp
push
rcr
or
dec
xor
mov
jmp
rcr
push
inc
mov
sub
xor
inc
mov
push
arpl
cs
mov
sbb
adc
push
sbb
out
push
mov
stos
inc
jnp
add
dec
jnp
mov
adc
pop
test
or
add
inc
lods
cmp
push
add
sbb
or
adc
sbb
sbb
inc
mov
std
xor
and
push
and
js
popa
cmp
sbb
fcomp
ror
add
cs
and
sbb
in
icebp
dec
or
adc
sbb
add
daa
xor
adc
(bad)
out
add
dec
xchg
push
inc
mov
dec
pop
int
dec
in
xor
out
jnp
ins
or
das
adc
xor
loope
clc
inc
adc
push
xchg
jns
(bad)
dec
dec
xchg
sub
ss
pop
xor
loope
xor
xor
or
xor
daa
cmp
bound
in
scas
inc
dec
push
popa
aas
pop
scas
add
mov
(bad)
fild
loop
adc
test
sub
cmp
sbb
xchg
or
push
fnstsw
cmp
mov
dec
lds
outs
xor
dec
push
xchg
or
cmp
and
cs
jno
jp
add
sub
adc
popa
in
fxch
jne
test
sahf
scas
add
popa
(bad)
add
add
fmul
or
jecxz
je
sub
cmp
push
shr
inc
loopne
stc
outs
sbb
inc
jmp
sub
mov
or
sbb
jb
or
inc
or
inc
movs
mov
and
sbb
stos
push
push
mov
pop
clc
enter
leave
mov
xchg
lods
sbb
dec
push
push
dec
add
jmp
pusha
or
pop
push
push
add
repnz
lahf
jmp
adc
das
add
sub
push
mov
cmp
push
leave
sbb
jg
or
or
mov
add
mov
jo
inc
sbb
adc
sub
rol
inc
xchg
sbb
stc
jmp
inc
or
add
mov
(bad)
(bad)
or
inc
sbb
popa
inc
xchg
pop
(bad)
fdivr
push
mov
leave
ret
int
pusha
mov
add
clc
push
add
sbb
loopne
icebp
push
fcomp
adc
ror
loop
add
dec
sub
mul
nop
sbb
or
adc
or
(bad)
test
add
dec
adc
dec
cmovp
or
adc
mov
jbe
and
clc
mov
les
xchg
lahf
test
or
push
(bad)
push
sub
xchg
call
popa
and
in
jmp
pop
and
es
pop
popa
xor
adc
xchg
js
add
pop
les
test
pop
mov
pop
inc
add
dec
and
adc
inc
ret
and
repnz
stos
jmp
add
xchg
daa
push
call
das
mov
adc
mov
call
or
gs
sub
sbb
jge
imul
sti
and
test
add
dec
xor
adc
(bad)
fcomp
mov
inc
sub
jns
sub
sub
icebp
add
or
aam
stos
call
add
scas
daa
jmp
rol
push
xor
dec
arpl
mov
add
outs
add
mov
cmp
pop
movs
xor
adc
retf
adc
jp
mov
or
es
push
jnp
or
(bad)
cmp
aas
jnp
dec
dec
pop
or
add
mov
xchg
jnp
imul
std
push
xor
mov
es
lock
cmp
dec
lock
jae
aas
sbb
inc
hlt
fdiv
push
inc
retf
inc
repz
pop
outs
dec
mov
lsl
daa
or
or
shl
lock
les
scas
jo
fsub
xchg
adc
popa
mov
and
imul
adc
or
mov
and
ja
js
xor
push
dec
xor
sub
je
retf
cdq
xor
outs
jp
dec
in
movs
or
dec
sub
adc
or
jmp
shl
shr
inc
sub
cs
mov
adc
inc
clc
inc
sub
mov
js
(bad)
dec
sub
xor
jecxz
mov
mov
or
loopne
adc
jg
add
adc
jnp
sub
jae
cmp
sbb
push
loopne
dec
jge
dec
sub
(bad)
and
cld
lods
xchg
mov
leave
scas
inc
ret
ss
jno
scas
sub
xor
xlat
xor
add
test
pop
test
xchg
inc
call
pop
push
mov
adc
or
sbb
rcl
loopne
mov
xchg
ret
xor
pop
add
shl
inc
push
in
ins
in
xor
sub
in
cdq
cmp
lea
inc
pop
ret
mov
iret
cmp
es
inc
in
dec
mov
or
adc
cld
mov
movs
pop
in
push
xchg
inc
cmp
mov
xor
int
rcr
add
adc
push
sbb
mov
out
add
movs
mov
add
test
mov
pop
shr
xor
add
dec
xchg
mov
mov
adc
pop
sbb
movs
mov
in
rol
push
jmp
out
pop
shl
push
ret
or
xor
loop
ret
push
xor
leave
sub
adc
(bad)
clc
or
pop
and
enter
xchg
mov
push
mov
cld
ds
or
hlt
mov
and
add
das
pop
dec
test
push
sub
out
lock
cmp
mov
or
jo
loope
mov
pop
dec
adc
or
xchg
das
out
push
and
add
pop
add
xchg
pop
adc
mov
xor
sbb
adc
push
mov
rcl
cs
(bad)
sti
inc
fcom
ds
push
ss
aaa
ds
aas
or
cmc
data16
inc
lahf
jg
arpl
mov
shl
iret
xchg
adc
shr
test
push
jmp
(bad)
je
xchg
or
cdq
fsubr
fcomp
or
jmp
cmps
movs
push
and
push
adc
or
or
xchg
sbb
je
fwait
ins
ret
add
sub
add
les
ret
adc
mov
add
inc
jl
fist
ret
mov
and
push
out
adc
mov
jmp
add
dec
imul
adc
or
jmp
xchg
hlt
fcom
or
fld
mov
or
xchg
lods
push
adc
pop
jmp
adc
dec
ret
dec
sbb
lahf
mov
je
xchg
inc
lahf
in
cmp
cmp
and
enter
sbb
in
(bad)
sub
or
jbe
daa
xor
and
cmp
dec
xchg
adc
pop
fst
push
or
pop
sub
fild
mov
cmp
popa
cld
adc
xchg
push
push
inc
and
xchg
aas
in
pop
jg
adc
mov
add
jmp
add
lock
or
dec
add
hlt
pop
cmp
mov
mov
or
rol
push
mov
idiv
adc
or
add
add
or
pop
or
jno
push
xor
jg
ret
lds
jmp
pop
ret
adc
mov
(bad)
scas
and
into
cmp
inc
arpl
add
dec
rol
sbb
nop
or
arpl
inc
push
loop
ins
icebp
in
loopne
sbb
nop
(bad)
pusha
int
push
jp
mov
es
sbb
adc
inc
adc
in
aas
inc
add
jae
pusha
cwde
in
or
call
daa
push
or
dec
jmp
jg
xor
test
xor
fist
add
xchg
inc
or
cld
add
pop
in
loope
jmp
pop
sbb
nop
pop
push
and
aaa
and
push
ret
and
adc
add
add
mov
xlat
out
pop
push
lods
add
mov
and
xor
fsubr
test
loope
or
retf
sar
and
popf
push
jo
mov
adc
bound
movs
cmp
sub
inc
nop
call
or
mov
out
xlat
cmp
dec
adc
test
sub
add
xor
push
xor
daa
(bad)
push
test
out
adc
fist
dec
xchg
add
lahf
add
pop
addr16
or
js
cmp
xor
inc
xor
push
mov
pop
pop
lea
daa
mov
pop
or
scas
and
sbb
inc
int
jle
push
gs
add
je
sbb
cli
xchg
in
das
je
sub
jl
mov
lock
jmp
add
std
add
pop
add
enter
xchg
or
sub
lds
or
add
pop
dec
and
clc
xchg
sub
addr16
xchg
ret
and
mov
mov
fiadd
(bad)
push
inc
pop
add
aaa
lahf
repnz
js
sub
dec
push
inc
or
mov
push
xor
call
and
je
push
cmp
mov
dec
imul
rol
clc
or
cld
mov
and
jecxz
cmps
xchg
cmp
jbe
or
ret
test
cdq
add
push
outs
or
mov
or
adc
jg
xor
xlat
sbb
or
add
lds
mov
aas
and
or
mov
adc
jmp
ds
mov
adc
push
adc
lock
pop
pop
cmps
mov
sub
and
sbb
or
mov
nop
lods
inc
sbb
pop
rol
ret
and
add
lea
or
or
or
lods
(bad)
mov
adc
mov
ror
outs
aad
iret
cli
mov
cdq
fsubr
adc
xchg
cwde
xor
nop
mov
jo
or
jl
and
ret
mov
dec
in
mov
fsubp
pop
add
adc
push
inc
jmp
imul
in
push
inc
and
dec
cmp
sbb
fs
adc
cli
mov
adc
imul
add
jl
loope
add
ret
xor
call
or
adc
and
cdq
push
add
ss
dec
inc
and
and
rcr
shl
mov
push
icebp
bound
or
lahf
imul
xchg
or
adc
and
and
sbb
add
add
pop
cwde
or
loop
or
aaa
test
push
sbb
dec
(bad)
mov
sub
daa
pop
fcom
lock
les
cld
push
dec
xchg
cs
sub
inc
add
sub
and
sahf
std
add
cmp
shr
xchg
lock
mov
call
push
jne
dec
and
push
ret
inc
or
movs
dec
int3
push
shr
push
ja
aaa
push
mov
inc
mov
cmp
xor
movs
es
inc
lds
sub
push
lock
add
dec
sub
pop
ss
bound
fnsave
xor
sbb
movs
adc
jmp
push
scas
or
lds
pop
or
sbb
or
(bad)
adc
pusha
cmp
sbb
mov
pop
mov
push
dec
or
leave
add
aas
and
mov
xchg
pop
mov
aas
mov
inc
hlt
adc
mov
xor
add
enter
add
call
(bad)
sub
ret
or
ret
jb
mov
push
jle
mov
nop
sub
sar
push
rcr
pop
repnz
adc
test
mov
inc
xor
push
mov
test
xor
inc
rol
sub
dec
inc
adc
sbb
or
or
sbb
nop
mov
pop
hlt
pusha
push
aas
add
inc
rcl
inc
dec
dec
sub
jne
and
xchg
add
movs
mov
pmuludq
pop
push
shl
lahf
sub
pop
mov
mov
or
sbb
add
stos
push
add
add
adc
loop
cmp
das
jmp
js
xchg
or
adc
les
fwait
dec
and
les
lock
call
add
xchg
ror
add
mov
push
aas
xor
jne
shl
and
daa
add
js
je
imul
call
lock
cmp
pop
push
and
fld
add
and
aas
scas
xchg
or
js
je
mov
pop
and
add
cwde
inc
fcom
push
inc
fdiv
and
push
pop
inc
in
popa
and
mov
pop
mov
or
arpl
push
cmp
inc
in
pop
cmp
inc
mov
sbb
push
add
pop
xchg
or
mov
inc
xchg
test
ror
push
xor
rcl
xor
dec
xlat
mov
ror
in
and
xchg
sbb
call
adc
mov
mov
shr
cmp
lock
cmp
jno
adc
add
or
xchg
dec
out
mov
xor
pop
das
mov
add
and
or
add
or
sub
xor
and
inc
adc
ret
jno
sbb
add
push
ins
fisttp
jmp
add
rcl
mov
aam
cwde
xchg
jg
popa
ret
mov
adc
and
adc
loope
or
lea
mov
mov
in
fs
add
sbb
sub
adc
(bad)
cmp
mov
pusha
mov
pushf
add
cmp
or
repz
ss
push
ins
adc
xchg
mov
jno
adc
mov
mov
in
adc
cmp
mov
daa
mov
jmp
mov
mov
xchg
and
jno
rcr
xchg
and
or
cdq
mov
mov
(bad)
xchg
add
push
mov
xchg
mov
or
movs
movs
push
retf
rcl
inc
and
jmp
arpl
add
and
inc
sbb
aaa
mov
and
jbe
pop
xor
sahf
(bad)
xchg
add
pop
enter
add
pop
sub
test
outs
add
or
mov
loop
pushf
and
add
js
mov
unpcklps
mov
pop
jg
popa
(bad)
mov
pop
popa
adc
(bad)
or
fs
or
ds
sub
clc
repz
push
xor
or
mov
dec
jl
mov
push
pop
test
popa
pop
jmp
adc
aaa
sbb
cmp
push
adc
shl
scas
add
jne
stos
add
sbb
jo
adc
inc
cld
aas
push
inc
lahf
sbb
out
and
and
adc
push
mov
cmp
aas
xor
cmp
sub
adc
lahf
push
mov
mov
push
and
cmp
sub
je
dec
sbb
sub
mov
addr16
sub
sbb
push
mov
hlt
cmp
(bad)
push
cld
fnstsw
or
jg
inc
inc
and
test
dec
loop
add
xchg
xor
cmp
cmp
jmp
cmp
ret
cld
leave
adc
lock
push
dec
xor
test
mov
mov
push
mov
inc
inc
adc
mov
lahf
dec
clc
jg
inc
mov
cld
add
les
fild
pop
je
je
dec
arpl
ror
or
jae
shr
or
dec
aas
push
sbb
add
pop
aaa
adc
and
clc
loop
sbb
in
adc
test
mov
in
fld
sub
jg
mov
mov
xor
jp
pop
cdq
aas
push
jecxz
xor
fwait
rcl
sbb
mov
sbb
lods
pop
xchg
mov
jg
scas
xchg
rcl
add
or
add
dec
pusha
mov
xor
mov
mov
sub
add
imul
outs
in
mov
push
sbb
inc
xchg
(bad)
mov
pop
pop
inc
movs
mov
ins
loope
rcl
add
push
pop
and
push
add
jne
push
cmp
jp
lods
retf
cmps
mov
fadd
inc
pusha
fsub
je
adc
and
lea
adc
or
mov
and
pop
cs
dec
jne
fucomip
pusha
sub
jbe
movs
movs
je
jnp
out
pop
xor
push
dec
sbb
sahf
ret
mov
add
ins
push
ret
mov
ret
retf
xchg
jle
add
les
shr
add
mov
clc
test
push
push
mov
jno
out
popa
push
ins
pop
cmp
or
icebp
dec
pop
imul
pop
mov
wrmsr
mov
lea
push
call
add
cld
cmc
add
loope
xchg
sub
xor
or
xchg
ror
lea
pushf
out
adc
xor
adc
xor
add
or
fstp
mov
push
mov
mov
or
stc
and
daa
add
jge
imul
mov
xor
dec
pop
imul
xor
in
xchg
pop
call
test
div
add
jno
(bad)
and
imul
jne
imul
xchg
or
dec
loopne
cdq
inc
or
enter
cld
inc
jg
xchg
jb
hlt
push
add
adc
mov
or
xchg
xor
test
loop
rol
dec
in
xchg
jbe
jecxz
inc
push
call
inc
jl
cli
shl
mov
sbb
sbb
xchg
dec
jl
sub
adc
mov
movs
add
ja
sbb
push
call
rol
arpl
xchg
xor
mov
js
arpl
enter
test
sub
pusha
movzx
add
add
lock
mov
(bad)
sbb
sbb
add
push
add
and
sbb
and
cmp
clc
cmps
cmc
jmp
inc
xor
mov
test
leave
movs
gs
jnp
pop
xchg
cmp
iret
(bad)
fisttp
aam
lock
pusha
pop
in
pop
xor
add
dec
add
or
jl
pop
pop
add
dec
hlt
and
xor
test
mov
(bad)
sub
and
les
adc
fistp
and
mov
sub
jecxz
and
push
sub
pop
ins
adc
sti
jg
sub
or
dec
lods
inc
ret
sub
pop
mov
fiadd
mov
test
gs
push
mov
jo
or
shl
loop
mov
cmc
dec
popa
nop
add
xor
push
int
push
adc
les
or
test
cmp
xlat
loopne
mov
xchg
and
mov
mov
bound
or
push
(bad)
cmps
sub
idiv
ja
adc
test
and
xor
xchg
cvtpi2ps
jg
sub
add
and
mov
ins
dec
out
xor
dec
add
sbb
sbb
dec
add
dec
push
cmp
daa
pop
mov
pop
add
adc
dec
scas
jbe
push
daa
add
or
or
push
adc
add
add
or
push
add
add
loop
sbb
dec
or
or
or
or
in
push
mov
adc
mov
jle
jmp
xor
outs
sbb
or
or
push
jmp
fldenv
xchg
fldpi
dec
sbb
ss
das
popw
mov
or
sbb
inc
or
fistp
call
sub
xchg
push
mov
repz
enter
stc
cmp
out
cli
add
push
sahf
out
sahf
sbb
sub
inc
dec
jns
out
push
pop
push
sahf
out
nop
call
mov
jmp
or
sbb
cmp
repz
inc
dec
iret
repz
pop
bound
mov
repz
sahf
test
mov
(bad)
rcr
in
out
ds
cmc
cld
add
jns
sbb
es
out
inc
ins
rol
or
dec
add
pop
push
pop
inc
and
pop
sti
dec
push
dec
pop
sbb
dec
sbb
sbb
add
and
and
and
dec
es
sub
test
sub
movs
or
imul
xor
dec
add
xor
xor
ss
or
pop
xchg
cmp
cmp
dec
ds
adc
mov
int
inc
or
inc
dec
inc
inc
adc
add
inc
dec
inc
lds
dec
sahf
push
or
push
scas
push
push
pop
(bad)
gs
push
pop
mov
fild
add
mov
add
lods
pop
cmp
fcmovnu
or
inc
add
dec
popa
(bad)
clc
lods
cmps
push
adc
movs
stos
xor
je
or
sub
nop
jb
adc
adc
mov
dec
popa
add
or
xor
xchg
sub
add
jge
xor
jg
mov
adc
cwde
pusha
fmul
cmp
adc
push
jb
adc
dec
push
mov
je
and
adc
adc
mov
rdmsr
xor
std
mov
sbb
or
or
fstp
mov
and
shr
or
pusha
push
dec
or
sub
scas
hlt
ret
mov
(bad)
xor
jno
pop
gs
inc
les
mov
mov
cmp
xchg
mov
or
sbb
(bad)
mov
pop
enter
inc
inc
xchg
ins
or
jecxz
test
dec
in
pop
js
or
xchg
xchg
das
push
nop
adc
mov
mov
adc
sbb
std
fwait
add
xchg
call
pop
in
or
dec
xor
lea
lds
cmp
pop
sub
out
and
inc
mov
and
addr16
mov
mov
push
int
rcl
jne
fistp
jbe
scas
lea
nop
sub
test
sub
and
fstp
cmp
mov
lds
jmp
sub
xor
bound
aaa
and
sub
push
jmp
xor
sub
mov
add
jne
and
clc
push
mov
lahf
sbb
xchg
xor
pop
push
adc
xor
fs
xor
adc
loopne
push
and
mov
ss
push
jmp
jae
push
sbb
jb
push
sbb
mov
rcl
push
pop
cmp
push
adc
int3
stc
pop
retf
mov
and
popf
add
movs
call
pop
push
div
es
jecxz
xor
xchg
fnsave
enter
dec
loope
xor
hlt
mov
add
jmp
xor
fnop
inc
mov
add
stos
xchg
mov
or
mov
cmc
mov
xchg
adc
imul
fld
mov
cs
xor
ret
add
adc
call
mov
mov
xchg
mov
sbb
shl
int3
sub
retf
aas
pop
enter
int
inc
adc
je
or
pop
in
add
mov
sbb
adc
sub
pop
inc
js
inc
cld
jmp
push
pop
js
ins
push
ss
ins
scas
jmp
and
or
mov
inc
add
inc
xor
adc
adc
and
cmp
test
xor
inc
mov
xchg
push
sbb
in
aaa
rcl
xchg
sub
add
push
mov
mov
cmp
push
xchg
pusha
and
xor
rcr
adc
lea
mov
sub
inc
pusha
or
xor
mov
lahf
and
fidivr
adc
push
sub
adc
out
xchg
das
stc
xor
xor
push
cmp
hlt
div
and
jo
test
inc
push
dec
and
jno
mov
inc
jecxz
bound
stos
jo
push
or
pop
add
popf
pop
cld
retf
push
sbb
mov
push
shl
or
add
pop
fcmovnu
sbb
pusha
lock
(bad)
pop
mov
adc
mov
int3
hlt
push
add
jge
or
cwde
jne
aad
or
sub
popa
loope
ins
pop
popa
sbb
pusha
push
adc
fwait
popf
daa
push
aas
inc
add
mov
sbb
or
sub
cmp
mov
test
lea
mov
mov
adc
in
xor
sbb
js
lods
test
daa
and
cmp
dec
mov
call
and
mov
add
test
dec
cmps
sub
jne
push
inc
inc
ret
mov
js
push
xchg
push
add
gs
mov
pop
cmp
mov
adc
and
popf
and
push
pop
add
je
repnz
mov
cmp
and
adc
out
inc
ror
jns
or
mov
or
xor
das
js
or
sub
or
aaa
mov
stos
push
jne
mov
shl
pop
movups
push
popa
cmp
mov
pop
leave
pop
jo
xor
add
pop
test
jne
cmp
sub
ror
test
popa
ret
sbb
mov
or
imul
add
pop
sub
cmps
inc
xchg
jge
adc
fadd
pop
jge
lds
xor
pop
jnp
lock
lock
lock
pop
in
imul
xor
cmp
(bad)
lods
addr16
add
pop
pop
xor
jmp
out
dec
jae
push
xor
retf
adc
or
cld
lahf
ss
cwde
js
mov
or
push
add
adc
inc
std
add
and
inc
sub
and
dec
fbld
fadd
or
xchg
push
push
dec
or
xchg
push
xchg
push
movs
push
push
and
movs
sbb
push
ins
bound
or
mov
adc
xchg
mov
inc
push
push
sub
or
mov
pop
jecxz
iret
and
cmp
hlt
imul
enter
pop
loopne
mov
aad
and
cmp
push
cmp
mov
daa
nop
xchg
ss
mov
cmps
adc
sub
adc
sbb
jecxz
add
loop
add
adc
clc
sub
sub
mov
ret
or
cmp
aas
sbb
movs
fidivr
mov
sub
and
movs
ret
arpl
movs
jbe
inc
iret
pop
pusha
or
popf
repz
cld
pop
add
or
add
shl
test
jl
lock
adc
mov
dec
mov
inc
cmp
fldenv
adc
mov
nop
lea
adc
lds
fwait
and
adc
loopne
outs
xor
sbb
add
cmp
xchg
sub
mov
icebp
push
or
clc
imul
loope
fwait
cdq
push
xchg
cmp
scas
in
imul
imul
mov
push
mov
add
inc
or
fistp
xchg
and
xchg
sub
cmps
add
xor
sub
inc
jg
adc
or
stos
imul
fdiv
mov
popa
add
inc
fld
call
outs
push
mov
add
in
in
and
inc
xchg
jmp
js
pop
pop
sbb
mov
outs
jmp
sbb
loopne
add
adc
or
or
push
or
pop
or
sbb
popa
rcr
or
ret
in
push
jp
nop
imul
mov
adc
add
push
adc
sub
int3
arpl
and
(bad)
es
push
call
sub
pop
imul
je
pop
or
xchg
cdq
lds
lods
jp
movs
jmp
(bad)
push
mov
push
jae
inc
push
or
in
movs
sbb
or
rcl
push
pop
movs
adc
fnstcw
jne
int
fldenv
ds
inc
ss
pop
cdq
xor
outs
(bad)
pop
push
inc
xor
inc
inc
xor
cmp
fwait
inc
aaa
pop
sub
inc
xor
pop
sbb
pop
rcr
je
inc
sbb
jmp
(bad)
adc
gs
jle
stos
pop
push
push
inc
cmp
add
add
push
into
call
add
inc
xor
push
daa
mov
mov
sub
and
shl
or
mov
(bad)
adc
je
shl
xchg
or
pop
das
shl
pop
mov
and
mov
pushf
in
add
sbb
inc
inc
test
aad
dec
or
and
cmp
add
sub
aas
mov
jno
jmp
sub
test
or
push
nop
dec
xchg
aaa
ret
outs
int3
pop
loopne
jb
sti
call
(bad)
ja
sar
or
add
push
mov
add
sub
fld
rol
loope
jb
cmc
ret
dec
pop
(bad)
rcl
lock
push
or
cmp
pop
cmp
dec
and
jmp
jnp
ret
cdq
in
xchg
xor
push
ret
cmp
ret
and
pop
stc
leave
add
mov
mov
clc
cdq
in
cwde
add
add
pop
sbb
inc
add
add
inc
and
aas
mov
sbb
loop
icebp
dec
xor
js
mov
dec
call
xchg
or
test
in
jecxz
mov
pop
mov
xchg
lock
xchg
inc
sbb
xchg
mov
and
nop
inc
add
mov
push
xor
jl
xor
movs
popa
xor
mov
aaa
nop
adc
sbb
and
mov
add
or
and
jnp
cmp
(bad)
cmp
add
std
push
and
outs
jb
jmp
mov
hlt
adc
jae
in
call
mov
xor
stos
test
xor
(bad)
mov
test
push
leave
mov
mov
push
dec
and
add
pop
push
pop
or
out
mov
in
loope
lods
inc
hlt
xchg
retf
add
sbb
pop
test
movs
and
mov
imul
dec
gs
mov
sbb
inc
adc
adc
arpl
test
jo
jecxz
or
adc
call
add
imul
sub
sub
adc
cmp
and
idiv
jo
and
jp
push
jnp
dec
movs
mov
call
mov
push
fadd
in
cmp
or
(bad)
sar
lods
add
xor
dec
push
sbb
popf
push
xchg
rcr
pop
ret
inc
je
test
push
xchg
movs
xor
jl
mov
push
add
or
sbb
shl
popa
dec
pop
dec
or
popf
push
cmps
push
fadd
(bad)
in
or
push
sbb
or
xor
(bad)
sub
addr16
or
(bad)
nop
(bad)
and
adc
in
add
(bad)
test
jl
and
inc
mov
arpl
or
and
add
xchg
push
bound
add
add
sahf
or
jae
add
or
mov
or
js
sub
push
jp
call
in
mov
add
xor
popa
loop
cld
pop
xor
and
push
test
and
inc
pop
xor
retf
push
add
dec
mov
jp
mov
inc
pop
add
jl
iret
cmp
inc
enter
inc
and
cmc
test
cmp
(bad)
iret
push
outs
add
inc
jge
pop
(bad)
mov
test
ret
sar
xchg
and
xchg
into
push
xchg
sub
inc
cwde
inc
(bad)
ss
mov
dec
fcom
xor
popa
cmp
outs
mov
sub
(bad)
jno
xchg
add
pop
in
sub
loopne
xor
int3
shr
add
sbb
mov
sub
je
push
les
xchg
ss
or
js
jae
or
and
and
and
jno
jno
dec
popa
or
cmp
sub
aam
and
add
lock
mov
fist
aad
xchg
mov
imul
pop
jmp
add
or
out
push
and
fisttp
and
aad
idiv
mov
add
cmp
pop
movs
aad
dec
fidiv
push
and
sbb
cld
jne
add
enter
fdiv
push
inc
dec
pop
jne
fiadd
dec
loopne
fs
retf
sub
inc
add
or
inc
jl
(bad)
lea
pop
cmp
mov
adc
inc
lds
xor
xchg
sub
jns
pop
popf
jo
std
xor
xor
mov
mov
add
outs
or
push
mov
shl
iret
dec
ret
mov
dec
or
mov
jo
mov
aam
ret
sbb
mov
scas
jae
add
sbb
mov
retf
dec
clc
and
into
cmps
push
rol
inc
adc
mov
in
pop
and
adc
push
or
add
inc
ins
mov
push
(bad)
jl
test
pop
add
inc
in
popa
icebp
or
sub
adc
cmc
or
js
int3
pop
lods
jno
cmp
pop
push
add
push
fsub
xchg
ret
imul
jl
or
xchg
iret
shl
xchg
and
add
mov
(bad)
push
xchg
dec
mov
ror
adc
inc
stos
mov
push
jae
mov
push
out
or
and
in
pop
mov
dec
stc
(bad)
cmp
and
xchg
in
jne
pusha
inc
mov
ss
push
repnz
inc
or
push
jbe
add
lea
add
add
es
(bad)
mov
inc
jno
bound
mov
js
push
repnz
iret
rol
sar
sub
mul
sub
inc
inc
push
pop
sar
test
cmp
imul
fs
int
jmp
mov
lods
inc
retf
movs
call
adc
mov
inc
mov
nop
sub
ins
lahf
mov
inc
push
mov
in
add
sub
lahf
xchg
cmps
add
mov
push
or
popa
push
xchg
loopne
out
mov
or
jg
inc
jb
pop
or
lahf
ins
dec
inc
ins
sub
pand
and
movs
add
enter
and
sub
or
aas
dec
jl
jg
lds
xor
inc
adc
and
cmps
mov
jle
cmp
loope
or
mov
push
outs
inc
mov
test
rol
xor
add
(bad)
cmp
jns
push
xchg
inc
pop
adc
hlt
icebp
adc
popa
dec
pop
adc
shl
push
int
add
test
jl
clc
sbb
rcl
adc
adc
xor
outs
aaa
push
mov
pop
pop
push
add
sar
jg
add
cmc
or
jg
(bad)
jne
push
cmp
aaa
ret
aaa
add
jp
dec
in
and
test
ins
dec
ret
push
adc
mov
add
push
add
fdivr
and
push
inc
inc
bound
or
sbb
enter
inc
fmul
movs
inc
cld
pop
push
adc
jnp
mov
lock
add
adc
xor
push
outs
or
pop
cmps
sub
dec
xchg
add
fadd
or
sbb
fsub
fcom
movs
xor
in
inc
enter
cmp
and
shr
sub
cmp
push
or
rcl
inc
inc
push
movs
in
in
dec
(bad)
and
jl
jmp
fadd
pop
(bad)
stos
dec
pop
movs
sub
ins
dec
cmps
mov
leave
aam
sar
popa
mov
movs
and
sub
mov
jle
push
ja
outs
loopne
jge
stc
hlt
mov
(bad)
lock
loop
iretw
xor
hlt
cs
add
push
adc
push
mov
inc
lock
xchg
or
hlt
push
mov
(bad)
jg
stc
das
ds
aaa
lods
add
ins
loopne
lock
push
jecxz
add
push
cmp
leave
cmp
jno
cmps
dec
lods
push
add
dec
xchg
adc
pop
and
and
inc
imul
les
ss
loop
mov
and
xchg
cs
setb
push
mov
pusha
in
dec
adc
in
or
stos
xchg
push
hlt
jge
and
sub
sar
aas
jmp
jmp
ret
jno
in
std
dec
dec
outs
popa
std
push
test
push
dec
push
shr
mov
and
cdq
ins
cld
mov
jmp
je
add
sbb
test
sbb
or
movs
sub
adc
xchg
test
dec
push
push
adc
sbb
mov
mov
mov
movs
jne
jge
dec
in
sbb
stos
sbb
jge
inc
dec
inc
mov
add
mov
add
or
loopne
pop
aam
xchg
ret
lahf
js
xchg
hlt
mov
lahf
or
dec
jl
ror
push
dec
fbld
adc
push
and
popa
push
aas
mov
add
or
cmp
mov
mov
shl
pop
adc
loope
scas
cmc
loopne
loopne
pop
adc
loopne
je
imul
cmc
call
or
loopne
adc
or
xchg
ret
fdiv
jne
in
pusha
fwait
loopne
jecxz
nop
int
fwait
aas
inc
call
xchg
or
lea
movs
adc
sub
xchg
dec
popa
jmp
jge
pop
mov
or
xchg
loopne
ret
shr
shl
xor
sar
adc
add
inc
std
sub
sbb
dec
jle
inc
mov
rcl
add
cmp
jbe
stos
push
es
aas
mov
sbb
shl
sbb
mov
sub
dec
inc
dec
xor
movlps
icebp
or
jno
stos
and
fwait
rol
ds
mov
inc
leave
dec
adc
add
inc
loop
loop
and
jge
or
xchg
cmp
mov
repnz
fbstp
cmps
inc
pop
repnz
scas
nop
rol
push
xchg
pop
and
rol
loope
xor
shl
jecxz
sub
mov
vmwrite
nop
push
and
inc
or
add
add
jle
adc
dec
sbb
sbb
jns
enter
pop
jmp
bound
imul
gs
inc
or
cwde
xor
jmp
mov
jecxz
sbb
enter
daa
frstor
push
xchg
in
dec
push
enter
sbb
ret
xchg
sub
test
jle
jle
ret
sbb
mov
or
in
push
push
adc
adc
jae
mov
push
loopne
inc
pop
or
mov
adc
dec
add
lock
cld
add
clc
shl
jns
and
test
mov
js
cmc
inc
clc
add
popa
cmp
lock
cld
push
or
pop
outs
xchg
movs
jno
cmp
push
xchg
add
movs
inc
cmps
mov
mov
push
enter
sbb
sbb
test
jle
pop
leave
sub
sbb
aad
and
xor
push
sbb
pop
cld
les
packsswb
mov
inc
arpl
cmp
pushf
sub
imul
xor
in
imul
enter
add
xchg
and
pop
ficomp
xchg
mov
shl
inc
or
xchg
mov
add
dec
inc
push
fs
jl
or
imul
pop
nop
cmp
dec
cdq
and
inc
pusha
xor
add
loope
(bad)
shr
and
mov
push
bound
or
ins
imul
mov
mov
sbb
adc
sbb
loope
or
jmp
add
xchg
sbb
in
sub
sub
ds
aas
inc
jge
or
and
aas
test
mov
lock
fcomp
repnz
fdiv
enter
cmp
add
outs
mov
fs
lock
sub
outs
mov
xor
leave
aas
add
inc
hlt
hlt
hlt
push
jl
sbb
aas
cld
jne
and
lock
sub
xor
cld
lock
cld
aas
clc
push
lods
rol
aas
add
test
xchg
mov
(bad)
ins
pusha
inc
or
mov
call
imul
add
cmps
inc
push
call
inc
mov
out
xchg
sub
aam
dec
add
add
movs
clc
in
add
pop
(bad)
sahf
hlt
aad
jge
hlt
lea
dec
inc
rol
push
add
lock
ds
dec
pop
in
cwde
aas
pop
jge
scas
or
ss
mov
pop
rol
dec
mov
lods
jg
add
fwait
mov
jb
repnz
pushf
jno
int3
inc
add
or
nop
jg
rcl
adc
jg
jg
movs
mov
aaa
inc
lds
ret
xor
sbb
pop
je
push
es
fbstp
imul
(bad)
aam
ror
and
leave
mov
xor
hlt
sbb
bound
gs
add
xchg
dec
jo
shr
clc
leave
clc
add
cmp
nop
jecxz
sti
cmp
lock
dec
or
cdq
sbb
sub
push
jae
xor
lods
cmp
loopne
pop
adc
aas
je
popa
xor
popa
add
dec
sub
mov
arpl
retf
adc
add
in
in
adc
in
in
ficom
rcr
mov
cld
test
or
inc
test
inc
and
mov
in
leave
ret
mov
add
add
or
sub
fisttp
popf
dec
add
mov
int3
call
mov
jge
bound
or
adc
outs
xchg
or
or
ins
sbb
add
mov
test
xchg
icebp
loop
sbb
mov
imul
sub
js
je
xchg
mov
std
push
and
add
fistp
sub
cmp
nop
xchg
inc
(bad)
mov
xor
or
or
ret
or
lock
test
push
push
sar
mov
push
jno
mov
or
mov
popa
adc
fnsave
pop
loope
or
leave
sbb
and
daa
add
add
icebp
mov
mov
add
and
bound
dec
jmp
test
inc
jae
cmp
std
xor
push
mov
push
or
clc
add
nop
adc
push
mov
mov
and
psubq
stos
int
jl
hlt
sub
arpl
or
in
add
mov
or
ins
add
push
cdq
jne
dec
pop
inc
jp
or
jmp
jbe
scas
push
mov
xor
inc
or
icebp
cwde
push
sbb
and
repnz
arpl
add
pop
pop
test
rcl
imul
pop
lea
add
jae
mov
add
pop
dec
inc
or
daa
add
and
pusha
aaa
(bad)
and
push
movs
je
pop
retf
add
push
mov
push
and
adc
dec
mov
loop
xchg
mov
outs
daa
dec
cmp
jnp
leave
loopne
adc
cmp
push
cmps
mov
fcmovb
push
xchg
stos
rcr
dec
add
xor
jp
adc
add
add
jg
movs
adc
lahf
mov
xchg
test
dec
pushf
push
push
adc
inc
inc
add
pusha
sub
in
movs
add
and
pop
mov
mov
dec
jl
lods
bound
mov
pop
or
fild
xor
and
cmp
adc
push
jg
sbb
or
jle
mov
inc
push
nop
mov
add
mov
pop
repnz
push
lock
mov
leave
push
test
in
dec
push
imul
cmp
and
cmp
(bad)
clc
imul
cmp
leave
bound
adc
test
shr
pop
pop
pop
js
push
mov
in
jl
jne
jg
rcl
(bad)
jl
movd
cmps
lds
jg
test
jl
jnp
aas
jg
adc
sub
inc
aad
add
xor
fldenv
addr16
jg
movzx
dec
adc
retf
cmps
call
sub
rcl
test
add
aad
mov
lods
repz
mov
mov
test
jnp
fcmovb
(bad)
fld
push
sub
pop
push
lock
jae
iret
cmp
popa
lods
sbb
pop
mov
or
test
mov
pop
sbb
sub
ror
inc
mov
or
scas
sub
lea
retf
(bad)
rol
adc
pop
mov
jmp
test
mov
pop
fistp
or
push
inc
cmp
inc
mov
pop
add
stos
push
aas
bound
dec
inc
mov
inc
fcomip
pop
mov
jne
je
push
pop
nop
iret
jb
mov
jnp
xor
push
repnz
xchg
push
adc
adc
adc
loop
or
xchg
cmp
xor
inc
lods
(bad)
fidivr
sub
out
dec
xchg
fild
mov
push
je
add
shr
jg
adc
cld
sbb
inc
clc
lods
sub
sub
xchg
repz
cmp
jmp
int
and
xchg
(bad)
sub
ror
lock
adc
push
and
jb
add
les
add
adc
test
jle
call
mov
and
call
sbb
call
dec
(bad)
(bad)
pop
mov
mov
test
test
cmps
mov
xor
adc
push
add
sub
fist
sbb
pop
adc
push
leave
sub
mov
push
inc
pop
cs
adc
adc
fistp
dec
adc
les
sub
pop
test
xchg
push
test
imul
push
and
shl
or
xlat
aas
mov
rcl
jg
mov
and
adc
lods
jge
je
into
pop
xchg
jl
cld
inc
daa
sub
add
inc
lahf
into
adc
popf
cmp
je
xchg
xchg
or
shl
pop
dec
daa
inc
mov
movs
ret
pop
lahf
(bad)
hlt
daa
pop
dec
adc
adc
lahf
cmp
lahf
or
mov
loop
lahf
adc
cwde
dec
add
test
mov
add
mov
mov
sbb
push
mov
mov
enter
or
inc
jg
daa
ret
daa
fisttp
test
fwait
add
fstp
mov
and
jp
add
mov
pop
hlt
mov
adc
fucomp
test
inc
sub
popa
push
lods
sub
sub
das
push
(bad)
movs
inc
(bad)
shr
stos
jmp
loopne
push
shl
jmp
test
cmp
or
or
push
add
movs
dec
add
in
lods
adc
push
adc
pop
add
bound
inc
mov
mov
lods
les
pop
sub
mov
ins
add
sub
sbb
pop
int3
add
push
pop
adc
jns
and
pop
mov
mov
or
stos
aas
lahf
mov
cmp
dec
adc
in
xchg
lea
enter
and
mov
xor
jb
xchg
sbb
and
enter
xor
adc
js
pop
and
cs
popf
les
rol
call
int3
jmp
jmp
jno
pop
or
dec
adc
adc
adc
xchg
lahf
xchg
cld
call
lods
or
or
in
push
int3
aas
xchg
or
push
cmp
lods
inc
add
mov
mov
fdivr
iret
jge
call
addr16
inc
jge
in
sbb
in
xor
inc
in
jl
add
fnstcw
fmul
hlt
fcom
jmp
cmc
jecxz
mov
inc
lock
push
mov
xchg
fwait
sbb
js
rcr
popa
mov
adc
inc
or
jl
add
inc
(bad)
mov
lahf
cmp
cmp
aaa
jecxz
sub
or
xor
dec
mov
or
fcomip
in
xor
adc
xchg
cld
inc
ret
push
xchg
sub
add
xlat
js
arpl
push
sub
fisttp
mov
push
mov
mov
push
inc
mov
xchg
lahf
(bad)
fld
push
mov
and
mov
add
or
jmp
cmp
loopne
mov
mov
cdq
and
shr
imul
clc
xor
sbb
or
push
mov
push
xchg
lods
sti
mov
stos
add
add
arpl
mov
add
xlat
jg
rol
pop
lahf
mov
push
sbb
mov
add
jg
mov
sbb
jle
and
xchg
pop
and
sub
mov
mov
adc
aaa
fbstp
push
rol
aas
push
push
stc
dec
aas
ins
setp
leave
aas
add
lea
mov
nop
cmp
sbb
or
push
push
pop
fwait
jl
pop
push
mov
cmp
adc
mov
adc
shr
and
xchg
mov
lahf
dec
adc
stos
pusha
test
add
or
lahf
xchg
fist
mov
lea
aas
cmps
inc
inc
loop
inc
fbld
cmp
(bad)
fsub
hlt
lods
popf
rcr
jo
test
and
mov
ss
mov
add
add
ins
loopne
add
adc
sbb
or
hlt
imul
mov
push
jp
fst
fwait
int
aas
pop
inc
dec
or
sub
cmp
or
lahf
in
xchg
mov
cdq
mov
pop
jge
mov
add
movs
inc
ins
push
pop
add
hlt
sub
imul
in
and
and
mov
mov
sbb
imul
jg
push
and
lods
daa
ret
sbb
imul
dec
stos
and
pop
outs
icebp
popa
jecxz
ror
mov
push
jo
sbb
pop
sbb
out
les
data16
sbb
ret
sub
sbb
jo
inc
dec
mov
inc
in
enter
xor
mov
mov
cdq
cmp
into
add
ss
inc
xor
jge
pop
dec
jmp
mov
inc
in
bound
loopne
inc
push
aam
sbb
add
adc
(bad)
js
jo
ss
push
add
lea
sahf
push
xor
adc
pushf
fistp
adc
inc
mov
inc
nop
js
lahf
ror
xor
fwait
pop
mov
mov
dec
lea
push
mov
adc
jne
sub
sbb
int3
jns
jne
inc
sbb
loopne
mov
ret
add
sub
aam
loope
out
nop
sbb
push
pop
inc
pop
sub
or
mov
pop
sbb
aaa
je
and
jae
add
rol
jecxz
dec
pop
aas
add
push
or
dec
mov
or
push
inc
or
ret
inc
sbb
mov
and
adc
movs
xor
mov
loopne
sub
ror
mov
cmps
adc
cmps
dec
stc
push
inc
test
add
fsubr
imul
or
je
test
or
lea
and
adc
loope
mov
mov
adc
mov
(bad)
xor
sbb
int
ror
or
out
dec
pop
dec
hlt
imul
xchg
add
or
(bad)
fs
add
ret
sub
adc
add
adc
adc
xchg
sbb
shr
aam
push
aas
push
dec
mov
arpl
and
dec
sbb
lock
sahf
sub
sub
movs
les
pop
ins
dec
inc
int3
call
mov
mov
xchg
mov
add
dec
adc
cmp
pop
xchg
loope
dec
add
adc
in
test
ds
inc
add
xchg
cdq
das
ret
jno
and
or
mov
sbb
or
mov
shl
aaa
mov
cwde
xor
fisttp
movs
mov
jne
(bad)
sub
hlt
mov
mov
fsubr
push
mov
jge
test
aas
lods
add
mov
inc
pop
or
mov
or
xchg
jle
movs
lea
sbb
mov
or
mov
pop
jns
stc
inc
mov
cmps
cmovs
adc
lock
or
pop
fbld
ja
sbb
push
test
sbb
add
or
jne
arpl
pop
pushf
inc
mov
pusha
das
pop
(bad)
adc
js
push
nop
mov
sub
das
jbe
fsub
nop
retf
cli
inc
cmp
imul
fwait
or
lock
add
fs
adc
mov
pop
add
or
aam
dec
adc
cdq
jp
or
lock
aad
push
popf
adc
and
sub
nop
add
lock
push
adc
add
(bad)
mov
push
addr16
xor
repz
movs
daa
mov
sbb
dec
sub
push
dec
ficomp
clc
movs
mov
jno
dec
mov
add
cmp
fs
add
add
stc
sbb
popa
and
xchg
je
and
(bad)
lahf
mov
or
aaa
jmp
sbb
push
leave
adc
test
push
mov
ds
clc
sub
jno
in
push
outs
dec
xlat
xor
dec
sbb
and
or
pop
pop
leave
mov
or
cld
dec
xor
outs
enter
adc
mov
adc
adc
add
mov
dec
mov
cmp
xor
mov
dec
xchg
push
and
add
add
sub
jg
adc
test
mov
xchg
and
xchg
pusha
aas
add
and
das
cmp
push
popf
push
lock
ins
mov
pop
push
rol
pop
or
popa
xor
add
and
xchg
cld
add
jmp
sub
pop
cwde
ins
outs
sub
mov
push
add
adc
ins
in
outs
inc
push
sar
push
dec
les
or
dec
cmp
mov
push
adc
dec
jnp
fnstenv
xor
push
adc
jg
mov
cld
push
sbb
xchg
inc
xchg
sti
sub
and
inc
sub
lock
ins
xor
aaa
add
into
add
jmp
imul
out
mov
jmp
cmp
sbb
inc
jge
call
mov
dec
xor
dec
out
sbb
test
sub
fdiv
aas
push
nop
add
sbb
or
ds
and
jbe
push
sub
aam
pusha
shr
and
stos
out
clc
jb
ja
test
and
adc
popa
(bad)
mov
pusha
lock
jb
or
pop
inc
push
or
mov
hlt
xchg
and
or
pusha
lahf
push
add
loop
pop
cmp
lods
imul
add
add
push
enter
sub
(bad)
punpckhbw
jbe
icebp
add
sub
sar
ja
movs
ja
mov
adc
ins
sbb
dec
adc
and
cmp
and
push
adc
adc
les
int
pusha
mov
imul
(bad)
test
jg
add
xchg
aas
add
leave
or
loop
push
and
jecxz
out
xor
pop
sub
lea
sbb
(bad)
push
sbb
dec
and
aas
repnz
pop
add
push
and
add
adc
stc
fs
mov
aas
ret
and
sbb
lods
nop
or
inc
sbb
sti
out
sbb
sbb
clc
lahf
add
push
mov
nop
add
scas
mov
cdq
hlt
in
leave
xor
jae
and
pop
dec
(bad)
or
pop
and
jge
scas
lahf
fiadd
sbb
pop
adc
pop
jmp
shr
adc
loop
adc
jg
pop
jbe
loopne
inc
jae
pop
sbb
sub
mov
cdq
adc
jl
adc
add
jmp
adc
adc
push
hlt
add
inc
xlat
pop
xchg
aas
push
or
packuswb
fbstp
dec
pop
inc
adc
adc
xchg
and
and
sbb
pusha
into
es
fcmovb
push
dec
jmp
popa
sbb
lds
and
or
adc
and
adc
pop
outs
sbb
xor
push
add
adc
inc
xchg
fild
pop
imul
inc
inc
inc
adc
es
arpl
mov
inc
add
hlt
or
stc
jne
sbb
add
xor
mov
cmp
cmp
xor
and
adc
push
shl
bound
cld
arpl
push
cmp
call
xchg
cmc
and
das
popf
xor
ins
rcl
cmp
arpl
or
jne
jle
xchg
pop
or
add
inc
aad
mov
(bad)
mov
and
add
push
lds
push
cwde
add
and
bound
adc
push
add
lds
push
jae
cmp
arpl
clc
or
popa
test
dec
cmp
or
sub
ins
push
retf
jne
push
sbb
or
je
mov
or
xor
mov
or
cs
add
cli
mov
loop
pusha
adc
adc
lds
sub
push
rol
cmps
test
outs
sub
mov
aas
cmc
and
pop
push
mov
mov
add
mov
cmp
xchg
or
jb
rcl
mov
push
scas
add
cmp
frstor
sbb
jo
inc
repz
add
sbb
test
mov
push
mov
mov
lods
das
adc
retf
mov
jge
call
push
lods
mov
out
adc
imul
add
and
es
(bad)
sar
test
sbb
dec
fucomip
sub
das
sub
jns
rcl
xor
aam
mov
or
push
jg
inc
jo
adc
push
add
test
sbb
stos
or
int
pop
nop
movs
sti
dec
(bad)
push
or
mov
retf
adc
es
or
ss
test
movs
sub
sub
xlat
push
and
push
push
push
pop
push
ror
or
cmc
pop
popa
or
push
add
nop
es
fild
movs
sub
push
sub
sub
dec
shl
or
add
bound
jg
dec
mov
mov
mov
mov
add
call
rcl
add
or
or
jg
adc
xchg
aas
aas
cmp
jo
add
add
dec
sub
dec
jmp
cmps
into
lds
cwde
sub
rol
aam
mov
fiadd
rcr
inc
push
cmp
push
add
or
or
aas
arpl
sub
add
push
imul
mov
push
aaa
inc
xor
adc
pusha
jmp
cwde
sub
sbb
arpl
rcl
push
sub
cmp
jo
mov
pop
cmp
shr
pop
call
xchg
test
mov
xor
mov
inc
pop
mov
out
or
retf
dec
lock
mov
add
dec
clc
(bad)
retf
add
pop
add
cmp
and
pop
dec
add
xchg
xor
mov
inc
xor
sbb
in
inc
fadd
(bad)
cmc
xchg
movups
dec
mov
sub
mov
or
add
test
ds
sub
popf
xor
push
dec
pop
cld
add
add
fld
gs
cmp
stos
jge
mov
cs
stc
inc
mov
aam
shr
rcl
inc
(bad)
cld
jmp
add
xor
retf
pusha
inc
arpl
div
cwde
(bad)
cmp
xor
mov
and
punpcklwd
rol
jmp
mov
xchg
or
add
xchg
xor
mov
pop
cld
xor
or
inc
mov
aas
mov
xchg
or
push
mov
outs
in
jne
pop
in
loop
adc
out
repz
or
shr
sub
(bad)
cld
es
or
ins
icebp
and
(bad)
fs
sub
adc
dec
in
aaa
jmp
or
fisub
retf
xor
cmp
aaa
add
cmp
add
lahf
push
mov
lahf
aaa
lods
rol
add
adc
adc
or
or
xchg
dec
add
popf
dec
test
mov
int3
lds
add
mov
adc
repnz
push
push
and
test
pop
sub
rol
dec
sbb
lods
inc
or
jne
cmp
lock
add
mov
push
xor
push
push
cmp
xchg
xor
cmp
popf
xchg
xor
dec
std
dec
and
push
mov
jl
add
loop
jmp
movs
repz
add
cmp
push
add
xchg
dec
push
cmc
sub
popa
gs
leave
add
jno
mov
(bad)
stc
std
or
push
add
test
gs
xchg
or
in
push
rcl
daa
int3
adc
ins
jge
jae
or
out
je
not
rcl
xchg
hlt
shl
xor
or
js
pusha
jp
xchg
sbb
sbb
test
xor
es
push
push
or
push
add
push
sbb
fadd
and
jns
add
push
sub
push
inc
shl
jns
femms
adc
add
cld
pop
enter
cld
test
ret
xchg
bound
in
lods
test
les
bound
dec
rcr
inc
inc
xor
dec
icebp
in
pop
push
lods
imul
mov
sub
add
pop
aas
ins
bound
xchg
sar
fucomp
adc
jmp
xchg
add
mov
pusha
xor
xchg
fbstp
sbb
mov
add
mov
add
sub
dec
rol
pop
lock
mov
bound
jmp
iret
or
cmp
(bad)
lock
and
dec
sahf
mov
xchg
dec
add
add
pushf
aas
inc
or
dec
pop
and
jmp
aam
add
lds
xchg
dec
js
imul
xor
push
nop
idiv
sbb
sub
and
rol
xchg
push
xor
sbb
cld
aaa
inc
inc
das
mov
add
add
dec
add
movs
push
lds
add
das
add
pushf
push
mov
and
or
aaa
add
inc
inc
xchg
cmps
cmp
push
cdq
js
fwait
nop
inc
scas
dec
or
mov
inc
add
pop
pop
xor
or
pushf
aas
push
pop
pop
pop
push
xor
gs
cmp
and
adc
mov
cli
(bad)
cmp
or
test
stos
cmp
loopne
ret
loope
hlt
mov
popa
xor
lds
je
xchg
and
or
cmp
xlat
jg
adc
aam
mov
push
sbb
mov
push
test
movs
ss
push
pop
mov
fiadd
xchg
fnstsw
push
add
inc
mov
(bad)
and
add
xchg
add
adc
lods
push
xchg
add
lea
or
xchg
sbb
inc
add
lock
arpl
mov
sbb
push
cdq
clc
adc
mov
sbb
dec
pusha
inc
and
and
xor
(bad)
ins
retf
dec
mov
cmp
push
mov
and
adc
mov
shr
pop
dec
xchg
add
inc
lahf
mov
inc
dec
pop
push
icebp
test
pusha
sbb
hlt
adc
fistp
inc
xchg
add
and
push
jecxz
xchg
cwde
xchg
sahf
or
mov
jg
lahf
sub
inc
and
add
retf
test
jl
and
cmp
add
lods
cdq
or
ins
shl
aas
add
pushf
fadd
js
pop
mov
adc
xchg
clc
pop
mov
in
push
(bad)
pusha
lea
sbb
in
nop
adc
leave
pop
mov
sub
pop
call
fild
or
xchg
add
add
jmp
add
imul
add
sbb
mov
mov
adc
shl
xor
inc
fldcw
xchg
jo
sbb
leave
rcl
cmps
dec
xchg
push
push
sbb
lahf
add
push
mov
add
add
mov
mov
loope
xchg
(bad)
imul
add
inc
add
xchg
aas
retf
sbb
les
mov
mov
xor
sub
pop
fwait
mov
stc
pushf
xor
add
sbb
out
in
or
mov
jns
inc
ss
xchg
fbld
stc
mov
test
cmp
mov
sub
push
mov
cmps
bound
and
loopne
dec
inc
movs
and
popa
addr16
push
and
inc
add
loop
and
arpl
repz
xchg
adc
push
jbe
test
pushf
cli
adc
ficomp
and
outs
or
sbb
fiadd
test
push
sahf
test
or
push
dec
cli
xchg
lods
push
gs
fistp
dec
ins
add
mov
add
imul
jne
xor
pop
popa
cmp
loopne
je
in
adc
inc
daa
icebp
xchg
push
cmp
das
clc
test
test
add
rcl
and
imul
xchg
or
mov
inc
and
xchg
cmp
pop
adc
ds
sti
loopne
xor
retf
fcom
sbb
ficomp
aad
add
jbe
addr16
(bad)
sbb
call
or
inc
jo
xor
add
or
test
jl
or
les
add
or
inc
push
lds
add
fwait
lds
clc
xchg
or
push
fwait
mov
push
fwait
inc
sub
je
shl
lock
push
inc
and
scas
add
add
test
sbb
dec
cmp
cmp
dec
pop
and
jg
lods
pop
mov
cmp
sub
dec
add
jo
jmp
or
mul
mov
sbb
add
aas
fild
and
fcomp
loopne
sub
dec
mov
pop
popa
or
inc
pop
sbb
or
dec
mov
jbe
sbb
imul
shr
sub
inc
ins
pop
loop
push
gs
add
mov
lahf
xchg
xor
dec
cmp
je
xor
sbb
rcr
push
xchg
add
fcomp
adc
jmp
inc
mov
cmps
mov
aas
sbb
jmp
stc
mov
push
sbb
dec
add
xchg
or
loope
add
mov
mov
fbstp
lea
push
xor
push
mov
push
mov
aam
jnp
xchg
pop
rol
out
test
sbb
inc
das
xor
push
fld
push
mov
pushf
mov
rol
repz
loope
icebp
dec
jp
sub
adc
inc
mov
mov
sub
punpckhbw
jle
sbb
ret
sub
mov
movs
xchg
mov
leave
add
xchg
xchg
inc
and
push
cmp
dec
sbb
jl
add
pop
or
clc
pop
inc
mov
les
adc
dec
pop
cmp
sub
push
adc
(bad)
adc
fisttp
sbb
imul
aas
mov
lahf
lahf
inc
jb
sbb
or
idiv
sbb
es
xchg
pop
adc
dec
xor
mov
adc
in
xchg
and
xchg
pusha
mov
inc
inc
mov
push
(bad)
fcos
das
sub
hlt
sub
aas
inc
mov
shr
aas
lea
push
mov
lea
or
pop
dec
shl
rcr
pop
mov
adc
adc
leave
lds
cmp
adc
inc
push
inc
adc
sub
shr
dec
pop
add
inc
xchg
jg
test
fcmove
pop
fidivr
push
(bad)
mov
xchg
or
adc
jp
clc
mov
dec
mov
call
or
sub
fdivr
stos
fwait
dec
add
add
add
call
or
xor
push
push
or
add
mov
mov
je
mov
rsm
jg
push
xrelease
push
inc
test
jg
xchg
fisub
sub
adc
mov
rcr
push
pop
adc
(bad)
mov
sub
inc
or
add
inc
arpl
add
sub
push
add
sbb
shl
sbb
fbstp
push
inc
sbb
lea
test
sbb
inc
cmp
nop
aas
and
and
xchg
adc
adc
jge
neg
ret
les
or
imul
jne
inc
jo
sub
repz
cmp
and
xor
outs
or
push
sahf
or
add
inc
in
(bad)
mov
loope
or
pop
dec
push
aaa
xor
jbe
jae
lock
mov
shl
movs
jecxz
or
ret
jnp
inc
or
and
pop
sahf
dec
jmp
pop
add
sbb
fild
or
sbb
test
sahf
add
inc
pusha
add
or
mov
sbb
add
repz
xchg
inc
test
(bad)
call
cmp
loopne
add
or
or
rol
mov
add
inc
pop
sub
rol
dec
cld
sahf
dec
and
add
dec
arpl
stos
adc
and
stc
dec
dec
movs
push
add
ret
imul
pop
mov
push
cmp
xor
mov
fwait
push
mov
fld
loop
adc
or
ja
test
es
or
push
push
pop
pop
sbb
push
loopne
mov
mov
ror
in
add
inc
xor
pop
or
(bad)
cld
call
sub
cld
popf
sahf
ins
loopne
pop
repnz
(bad)
test
popa
ins
push
sub
popa
add
cli
mov
push
test
pop
push
shl
push
shl
xor
jg
jae
ret
mov
add
dec
mov
(bad)
mov
aas
add
mov
pop
pop
and
pop
mov
adc
inc
inc
test
dec
add
pushf
loopne
and
sub
movs
xchg
xor
sbb
pushf
inc
add
and
xlat
std
and
cmp
add
jmp
pop
sub
mov
cmp
dec
cmp
lea
pop
cmp
bound
dec
mov
cmps
pop
cs
push
adc
cwde
inc
dec
cmp
add
sbb
dec
cld
mov
push
xchg
fisubr
mov
cmp
xchg
adc
mov
cmp
adc
nop
outs
lahf
or
gs
inc
jbe
fcomip
sti
sub
aas
sbb
inc
clc
mov
pop
or
push
or
fsub
dec
xchg
arpl
push
or
ret
or
adc
sub
and
cmp
xor
aas
mov
or
sub
mov
dec
adc
test
fadd
adc
add
les
xchg
or
enter
pop
cmps
pusha
jno
add
mov
icebp
adc
mov
sub
lea
mov
inc
pop
and
mov
adc
icebp
dec
sub
add
dec
or
dec
inc
add
xchg
call
mov
mov
mov
in
or
into
nop
inc
enter
adc
dec
mov
les
rcl
or
aas
mov
test
movs
rcl
inc
(bad)
cmp
push
add
adc
dec
call
arpl
xor
mov
in
add
popf
dec
loope
lea
or
mov
sbb
push
fsubr
dec
mov
add
ds
cmp
sar
or
xor
int
jmp
out
js
das
jle
mov
mov
jmp
stos
test
push
or
test
sbb
aad
sbb
cwde
sbb
push
inc
add
movs
and
inc
xchg
mov
mov
loopne
xor
fsubr
shr
push
cmp
ror
add
cmp
adc
test
dec
cmp
fsub
jmp
xchg
cli
or
mov
gs
dec
pusha
push
aam
nop
add
clc
or
les
push
icebp
pusha
push
add
cwde
xchg
enter
or
sbb
inc
adc
daa
xchg
int3
shl
daa
xchg
sbb
dec
es
nop
loopne
adc
dec
jecxz
xor
stos
sub
push
test
pop
js
in
ss
sub
les
or
and
sub
xchg
int
icebp
jmp
aad
inc
push
sbb
cmp
cmp
clc
mov
in
fimul
jns
fnstsw
pop
xchg
add
pop
popa
and
mov
dec
adc
push
xchg
mov
and
aas
inc
(bad)
outs
xchg
mov
sbb
mov
add
adc
imul
push
or
fstp
pop
aad
mov
fstp
fstp
xchg
sbb
jae
jp
mov
frstor
dec
ficom
mov
pop
add
out
cmovno
lock
mov
ins
dec
xchg
mov
dec
push
or
jb
add
sub
dec
cld
sbb
cli
sbb
mov
fidivr
push
icebp
fdiv
push
push
out
sahf
out
test
sahf
or
sahf
fpatan
or
enter
mov
mov
cmp
jae
test
addr16
psubb
inc
pop
repz
repz
ja
(bad)
cmps
jge
stc
test
stc
xchg
fld
jnp
lea
jle
es
sahf
out
sahf
lods
mov
out
xchg
js
cli
adc
and
sahf
out
xchg
dec
jno
xor
mov
sar
jg
push
dec
outs
adc
and
adc
clc
xchg
mov
mov
adc
retf
cmp
jb
sar
xchg
mov
adc
ret
clc
xor
mov
adc
xchg
and
dec
cmp
push
inc
call
cmp
aam
push
mov
xor
outs
fisttp
repnz
sub
pop
fwait
pop
lea
add
enter
dec
add
mov
sbb
and
push
add
add
xor
sahf
mov
mov
cs
adc
xor
icebp
sbb
mov
aas
or
sar
sti
dec
pop
adc
cmp
cli
in
pop
in
xchg
inc
hlt
mov
ins
xor
sbb
icebp
lock
dec
daa
ror
pop
or
ins
add
or
mov
xlat
add
inc
or
lds
xor
or
cmp
nop
cmp
or
mov
lahf
add
xchg
scas
imul
shl
cmp
or
or
add
call
fld
pop
ret
jne
test
rol
cmps
xchg
mov
cmps
jmp
jae
lock
mov
ror
js
dec
jae
mov
rol
shl
test
mov
adc
test
test
mov
test
sar
or
nop
mov
in
dec
adc
lea
push
or
cmp
fwait
cmp
and
ret
mov
and
push
in
stos
movs
icebp
loopne
sbb
retf
lahf
xor
push
push
movs
mov
div
cli
popa
or
add
inc
pop
sub
(bad)
pop
ror
add
pop
inc
(bad)
shr
lods
mov
clc
inc
mov
ins
movs
push
and
test
xor
sbb
dec
and
xor
mov
std
lock
add
jp
or
movs
inc
inc
in
mov
adc
popa
jno
pop
cmp
push
outs
mov
mov
mov
adc
rcl
mov
ja
movs
mov
lahf
pushf
mov
movs
dec
cdq
inc
ss
mov
adc
dec
mov
jge
push
xchg
pop
cmp
imul
xchg
mov
inc
loopne
add
fwait
inc
xchg
xchg
cmpxchg
mov
and
fwait
inc
lds
xchg
xchg
sbb
ror
xchg
adc
inc
not
inc
add
dec
aas
dec
dec
mov
fdivr
mov
cmps
movs
dec
lds
dec
fsub
cmp
mov
pop
fadd
push
push
inc
sbb
pop
adc
sbb
dec
adc
mov
lds
sub
fwait
jmp
cs
aam
mov
push
cld
aam
push
sbb
xor
mov
inc
sbb
inc
shl
int
xchg
popf
xor
and
repz
aam
ror
pop
test
std
pusha
adc
js
mov
ror
cs
call
rol
inc
inc
add
dec
xor
add
ror
add
mov
mov
das
inc
cld
pop
sti
int3
pop
aas
loope
dec
mov
inc
ins
pop
xor
fwait
xchg
pop
stos
fidiv
or
add
mov
xchg
adc
sub
xchg
push
fiadd
xchg
aas
stos
add
jb
fwait
xchg
aas
and
dec
mov
fstp
ss
sub
ds
adc
(bad)
test
std
ds
push
fmul
jns
pop
mov
sub
mov
mov
aas
adc
movs
mov
lahf
movs
add
ret
cmps
and
lock
cmps
mov
fwait
nop
jl
inc
or
test
push
add
inc
sahf
cwde
pop
repnz
sbb
daa
in
jns
push
and
popa
inc
sahf
nop
cmp
push
sbb
mov
call
addr16
mov
add
and
test
loopne
sbb
mov
add
test
jge
pop
sub
mov
inc
ret
mov
add
xchg
push
rol
dec
(bad)
(bad)
add
mov
addr16
adc
das
mov
add
inc
outs
push
push
adc
or
pop
sub
xor
unpcklps
push
inc
ret
stos
jl
push
sbb
pusha
pop
dec
icebp
aaa
xchg
cmc
outs
loop
add
cmp
pop
ins
movs
pop
ret
sbb
pop
jne
push
cmps
jmp
ds
xchg
nop
test
dec
scas
or
and
fwait
clc
xor
add
sub
jp
mov
ja
xor
adc
dec
xchg
jo
xchg
sub
cld
push
or
mov
sbb
daa
mov
xor
or
jbe
in
es
arpl
push
fisttp
lahf
or
scas
fcomp
inc
or
or
cmps
sub
imul
sbb
adc
ja
pushf
and
test
aas
or
dec
sub
clc
inc
mov
pop
das
bound
dec
add
mov
mov
pop
aas
sub
adc
sti
jl
pop
adc
movs
push
bound
and
push
push
shr
add
dec
sub
add
and
dec
call
and
dec
in
adc
in
mov
xor
call
and
aas
int3
mov
aas
dec
cmp
and
js
dec
aas
cwde
push
enter
adc
push
dec
xchg
mov
adc
ret
adc
and
dec
and
and
test
jo
mov
fstp
cdq
or
mov
xchg
add
popf
add
ins
bound
push
and
jb
fdiv
fdiv
fcomp
pop
js
pop
push
adc
nop
push
and
add
repz
in
sbb
nop
nop
adc
cwde
xor
add
pop
sbb
stos
cdq
rol
pop
pop
mov
lahf
fs
mov
push
lods
xor
sbb
sub
pop
add
or
add
xor
pop
cli
mov
imul
add
gs
cmp
mov
jg
or
jg
lea
add
and
pusha
sbb
xor
sub
mov
jl
adc
xor
inc
and
inc
push
pop
imul
add
fsub
pop
leave
add
mov
aaa
cmp
jns
xor
addr16
aaa
cmp
ror
outs
sbb
fisub
add
push
xor
pop
pop
push
sub
sub
push
add
aas
push
call
mov
nop
sbb
mov
sbb
sub
mov
pop
push
add
inc
xor
adc
push
lods
pop
xchg
mov
call
inc
popa
jmp
push
int3
in
pop
ret
dec
lock
sub
lock
push
mov
inc
pop
push
iret
sbb
rcr
sbb
inc
jle
cmp
adc
aas
outs
shr
test
adc
fcom
push
and
and
cmps
or
jg
rol
add
and
test
fs
jns
mov
push
fcmovb
pop
test
and
xchg
mov
jp
sub
adc
add
icebp
add
inc
les
bnd
loopne
leave
sub
pop
push
jmp
sbb
cmp
lods
pop
dec
mov
jns
dec
mov
push
rol
ret
scas
mov
adc
dec
mov
enter
loopne
push
or
or
sbb
pop
fadd
mov
pop
inc
arpl
push
je
fstp
or
fsub
sbb
test
fcom
scas
and
pushf
sbb
aam
add
mov
pusha
cmps
adc
push
inc
or
mov
add
dec
push
cdq
inc
lods
pop
xor
inc
and
imul
sbb
inc
loopne
sub
or
inc
js
fsubr
jns
fmul
inc
es
push
scas
add
xlat
pop
(bad)
and
or
mov
hlt
or
and
mov
cmc
adc
cmp
push
push
and
inc
loopne
call
lahf
xor
and
or
ins
test
loope
push
or
push
xchg
push
je
les
push
push
xor
test
inc
pop
jmp
adc
xchg
call
or
or
retf
rol
mov
dec
and
mov
dec
adc
inc
in
cmp
and
inc
loopne
aam
cli
and
mov
adc
cs
xor
push
push
cli
jnp
push
push
jb
add
dec
ds
jl
inc
pop
jg
ja
mov
jmp
dec
call
or
hlt
mov
leave
adc
or
sub
mov
xchg
test
addr16
test
sub
xor
je
sub
push
outs
push
push
mov
stos
jne
adc
pushf
and
add
add
and
inc
scas
cmc
add
adc
std
pop
xor
pop
in
in
das
dec
test
int
and
push
fdivr
dec
lahf
fwait
clc
les
cmp
dec
jmp
sub
nop
iret
in
mov
push
pop
add
popf
retf
push
xchg
xor
pop
jnp
aaa
inc
inc
mov
push
xor
or
xor
and
aas
lods
in
rcl
sbb
jecxz
mov
dec
jmp
sbb
aas
loop
fwait
rol
lea
push
jl
lods
inc
add
push
rcl
adc
sub
or
sbb
mov
lea
loopne
lods
add
aas
pop
pop
xchg
sub
daa
adc
push
clc
push
jmp
adc
push
add
bound
lods
cmps
popf
or
jl
rcl
clc
dec
jge
dec
ret
xchg
and
loopne
add
movs
ins
pop
push
adc
add
cmp
mov
sub
push
adc
loope
or
add
add
ret
clc
rcl
mov
pop
mov
and
pop
mov
(bad)
xor
mov
aad
jno
and
add
sub
aas
movs
or
or
mov
or
sbb
push
adc
les
dec
aaa
or
cmp
jmp
xor
leave
test
pop
adc
fild
clc
push
push
jge
pop
adc
sbb
cmp
pop
adc
sbb
add
inc
js
mov
sub
inc
add
xchg
or
sbb
scas
std
ins
cwde
dec
out
push
out
sub
inc
mov
add
mov
rol
loope
pop
mov
sub
or
jle
xchg
hlt
hlt
jmp
adc
push
popa
dec
xor
push
lods
(bad)
retf
rcl
dec
dec
jbe
or
inc
lock
fild
or
jmp
loop
jecxz
movs
jno
dec
add
xchg
add
shr
lock
popa
push
pop
sub
out
or
xor
sub
push
cmp
lea
fdiv
sub
das
inc
sti
lea
adc
push
movs
bound
mov
sar
lods
mov
arpl
pop
(bad)
adc
sub
push
adc
sub
inc
jl
cmp
and
sbb
or
pop
call
dec
imul
dec
sub
and
and
repnz
add
and
daa
push
stc
and
or
fs
cmp
or
add
or
push
rol
in
cmp
das
aas
(bad)
loopne
popa
mov
aam
or
push
lock
in
aam
sahf
popa
jnp
ror
inc
pop
fdiv
add
push
sahf
xchg
in
ret
xor
inc
push
fcom
pop
loop
sub
cmp
fmul
cmp
jbe
jo
hlt
xor
fiadd
push
or
(bad)
loope
push
loopne
or
xchg
scas
xor
and
sub
mov
push
jne
dec
in
shr
clc
add
fcomp
enter
enter
lea
pusha
add
popf
or
or
mov
sbb
mov
in
inc
add
test
fisubr
adc
xor
xchg
pop
addr16
clc
or
mov
inc
mov
inc
mov
lock
nop
push
or
js
test
dec
inc
shl
cli
jecxz
es
arpl
xor
adc
pop
jo
pushf
push
shl
mov
inc
scas
or
sub
inc
inc
push
arpl
sub
pop
into
lahf
in
push
mov
in
sbb
lods
mov
lods
les
cdq
jb
shl
mov
pop
iret
and
xor
dec
xchg
push
iret
mov
nop
arpl
pusha
inc
movups
push
loopne
sub
and
repz
adc
mov
dec
inc
or
and
ins
sub
add
adc
and
xchg
xor
push
inc
dec
pop
call
scas
pop
lods
mov
cmp
lock
xchg
push
mov
adc
add
mov
je
dec
pop
and
sub
xchg
or
add
mov
(bad)
mov
pop
sbb
inc
push
or
push
sub
cwde
add
pop
pop
add
hlt
sbb
push
and
gs
mov
cdq
pusha
bound
jmp
or
xchg
cmc
push
push
in
aad
push
push
inc
movs
push
push
cs
inc
adc
xor
fcomp
or
call
mov
mov
or
cmp
sbb
mov
rcl
or
mov
or
and
inc
push
ficom
inc
std
int
enter
js
adc
int
arpl
push
push
pop
xchg
mov
xchg
push
mov
dec
aaa
sbb
mov
push
mov
push
pop
add
or
push
ins
cmp
mov
pusha
inc
or
ret
cmp
ret
sar
dec
cmp
or
test
or
xchg
test
pop
in
adc
nop
mov
pop
or
cmc
mov
inc
or
inc
or
xor
jno
xchg
xchg
mov
je
xor
and
sbb
sub
test
test
imul
movsx
jb
mov
aam
fadd
jne
sub
test
or
ror
je
jne
inc
add
sub
mov
ret
mov
and
jmp
cmp
(bad)
xchg
inc
scas
in
pop
mov
mov
je
shl
push
das
fs
add
xchg
adc
or
pop
loopne
push
add
inc
xchg
dec
mov
add
adc
pop
push
jl
rcr
add
pop
adc
jo
mov
das
push
adc
pop
add
sbb
popa
or
pop
add
push
gs
adc
dec
jge
adc
mov
sub
pop
retf
push
jne
xchg
mov
iret
clc
push
or
pop
rol
and
push
fild
popf
test
pop
push
dec
jnp
lds
fnstsw
dec
add
adc
popa
movs
loope
push
sbb
mov
stos
push
pop
mov
push
inc
dec
dec
ret
adc
jl
and
jo
setp
pushf
imul
push
fwait
sbb
cwde
and
rcr
dec
ficomp
jge
int3
add
jp
scas
adc
push
push
add
inc
adc
pop
sbb
mov
mov
dec
dec
push
or
iret
(bad)
sbb
mov
lea
xorps
call
cmps
jecxz
inc
in
test
les
inc
or
js
imul
in
inc
(bad)
jne
push
jg
add
fs
in
xor
sub
dec
inc
pusha
push
or
retf
dec
pop
and
(bad)
jmp
jecxz
push
push
pop
lods
inc
or
scas
adc
aad
adc
add
add
add
and
push
mov
call
adc
test
or
sbb
test
pop
les
aam
adc
and
add
ret
adc
in
push
cwde
shl
shl
inc
ja
cmp
sub
cdq
lahf
add
sub
and
movs
aas
inc
and
cmp
cs
mov
push
add
inc
push
cmp
sub
lods
lds
rcl
adc
fcmovbe
add
aad
loope
adc
or
pusha
jecxz
test
adc
sahf
push
int
inc
test
xchg
inc
mov
fild
nop
pop
dec
add
pop
clc
rol
jne
mov
rcr
mov
push
fist
popf
jp
pop
fwait
inc
xor
add
rcl
sbb
or
adc
pop
push
pop
inc
loopne
mov
sbb
mov
call
add
imul
mov
and
mov
mov
jp
mov
pop
sbb
inc
lahf
idiv
(bad)
mov
adc
dec
sbb
scas
dec
and
sbb
pop
sar
pop
adc
cmp
mov
cmp
jp
add
shl
push
jmp
test
call
inc
push
or
pop
sub
mov
ins
pop
add
pop
push
stos
ins
jecxz
adc
imul
inc
push
or
lea
(bad)
push
test
aas
in
xor
js
call
mov
push
or
inc
mov
inc
pop
popa
lock
mov
in
push
adc
push
hlt
shr
lock
inc
shl
pusha
retf
or
inc
push
xchg
or
mov
push
pop
into
push
mov
mov
scas
fcmovnbe
sub
nop
push
das
sub
add
jl
or
or
pop
pop
enter
sti
mov
dec
adc
or
and
or
push
lock
jb
jb
les
push
test
nop
test
aas
pusha
ins
pusha
or
sbb
jns
mov
xor
repnz
add
mov
dec
mov
pop
iret
mov
add
push
test
inc
ret
test
sbb
int3
adc
ja
and
jl
push
or
dec
loope
add
mov
xchg
ficomp
xor
and
xor
and
adc
jecxz
mov
sbb
adc
jg
scas
sbb
and
inc
cmp
xchg
inc
pop
aas
or
push
and
lahf
sub
in
rcl
inc
es
test
jmp
jmp
sar
les
gs
lahf
fldenv
cmp
push
jmp
adc
sub
mov
mov
aad
aaa
or
mov
push
push
gs
mov
jae
enter
aad
or
xchg
dec
call
xchg
jg
sub
pop
call
adc
dec
sbb
or
nop
cmp
retf
pushf
sbb
pushf
mov
loopne
mov
sti
jmp
inc
cmps
lea
jbe
test
mov
mov
jmp
adc
and
test
ss
inc
jge
jg
inc
test
arpl
lods
call
sbb
inc
jno
and
enter
adc
pop
scas
sbb
stos
jl
inc
pop
jge
lock
adc
push
pop
test
mul
and
scas
sbb
test
and
test
push
rol
sbb
push
les
ficom
hlt
(bad)
dec
pushf
dec
mov
in
and
mov
add
shl
push
call
fmul
inc
xchg
jne
and
and
loope
gs
mov
mov
push
aas
mov
add
hlt
lea
xchg
das
dec
jae
(bad)
cdq
aaa
sub
cmp
fs
nop
fimul
push
mov
mov
adc
pop
add
jae
dec
or
dec
mov
mov
test
mov
rcr
and
inc
rol
inc
or
adc
mov
mov
add
shl
mov
lahf
dec
dec
mov
xchg
pop
adc
dec
movs
and
sbb
xor
pusha
jg
jl
adc
daa
popf
mov
ret
in
inc
arpl
mov
ret
push
out
cmp
adc
nop
add
add
ret
sahf
(bad)
lock
std
fldenv
hlt
sub
test
inc
push
dec
ss
test
in
jge
push
push
(bad)
jmp
aad
dec
and
inc
pop
inc
cld
or
jg
pop
add
and
push
jb
aas
aad
push
lea
push
sbb
mov
add
push
inc
dec
dec
inc
int
pop
or
push
imul
jae
inc
xchg
rcr
cmp
mov
mov
ins
fnstsw
jnp
outs
mov
repnz
jp
xchg
push
adc
(bad)
mov
add
jl
lock
sub
or
lock
jne
mov
pop
adc
cmp
movs
aaa
pop
popa
dec
bound
pop
jle
mov
lahf
sub
shl
pop
imul
pushf
or
sbb
add
or
out
adc
jg
cmp
(bad)
add
and
mov
sub
test
sbb
sbb
xchg
outs
popf
adc
and
loopne
push
fmul
add
sbb
and
jbe
ret
inc
ret
call
dec
enter
jp
add
mov
and
or
popf
mov
pop
dec
fnstcw
lock
add
fdivr
xchg
or
dec
xor
xchg
lods
sub
jecxz
add
fst
daa
adc
pop
mov
inc
add
add
mov
sbb
fsub
push
pop
pop
xor
aam
adc
in
cmp
dec
js
push
jge
arpl
push
lds
mov
sbb
add
jo
push
or
mov
mov
or
cmp
stos
or
or
add
add
sbb
mov
mov
fsub
xlat
xor
add
mov
mov
bound
int
mov
inc
add
mov
scas
pop
shr
cs
pusha
dec
jmp
xor
fwait
xchg
mov
dec
pop
adc
sub
add
xchg
or
mov
aas
lods
test
inc
pushf
xchg
add
cwde
pop
dec
pop
pop
(bad)
mov
push
push
and
push
icebp
test
adc
scas
xor
jmp
mov
mov
mov
scas
aaa
inc
(bad)
aaa
mov
or
and
(bad)
pop
add
dec
dec
add
cmp
or
loop
outs
xchg
pop
mov
or
pop
xor
ins
inc
aaa
mov
(bad)
add
or
fwait
or
cdq
or
mov
xchg
or
xchg
mov
inc
(bad)
sbb
movs
xor
or
dec
inc
pop
(bad)
jae
add
or
sbb
sar
pop
cmps
mov
es
mov
mov
sbb
shl
sbb
ret
jae
gs
add
fidivr
aam
xchg
and
mov
cmp
popf
pop
or
popa
sar
add
cmp
dec
repz
(bad)
call
out
dec
arpl
out
mov
outs
fild
adc
push
pop
pop
scas
inc
out
lahf
sbb
push
sbb
enter
rcr
xor
cmp
dec
fimul
pusha
call
dec
or
daa
aam
rcr
(bad)
fwait
cmp
dec
lahf
clc
mov
or
gs
push
mov
push
push
mov
mov
test
or
xor
icebp
mov
inc
loope
sbb
mov
int3
sbb
or
jmp
cmp
das
int3
das
push
imul
inc
inc
or
sub
ret
adc
jbe
mov
pusha
sbb
dec
xchg
rcr
int3
cmp
test
test
lahf
adc
ret
add
in
rcl
cmp
je
js
jo
xchg
lds
and
adc
add
std
aaa
inc
and
ret
mov
daa
mov
ror
shl
sub
mov
mov
cmp
cmp
and
xor
jo
mov
or
mov
daa
xchg
adc
sbb
push
jge
ret
xor
out
sub
ss
sub
and
jns
push
add
jae
adc
push
shl
pushf
push
ins
or
ins
mov
dec
mov
gs
push
push
enter
xor
std
loop
(bad)
pop
call
add
mov
loopne
cmp
aaa
cld
or
dec
mov
loopne
test
loope
rcl
js
(bad)
mov
cdq
popa
std
mov
xchg
leave
sbb
xor
or
push
xor
loopne
mov
fstp
or
idiv
fwait
inc
fstp
or
cmp
jmp
aas
cmp
dec
loopne
add
mov
fnop
out
pop
pop
dec
test
add
mov
jo
sahf
movs
push
pop
xor
xchg
xor
shr
mov
inc
lds
mov
aas
jmp
idiv
rol
mov
inc
mov
pop
xchg
movs
stos
xlat
fiadd
or
mov
test
test
fisttp
test
push
xchg
sbb
mov
sbb
push
xchg
mov
lea
mov
jmp
loope
jne
das
retf
clc
add
dec
pop
test
std
adc
pop
and
mov
aaa
imul
adc
add
cld
pop
or
stos
adc
inc
pop
mul
xchg
inc
xchg
imul
lods
mov
aam
mov
test
call
daa
fld
fstp
jmp
sbb
data16
fst
and
push
cmps
pop
mov
dec
adc
aaa
pop
fimul
cmps
push
mov
add
pusha
adc
mov
cmps
stos
jmp
add
push
mov
xchg
or
inc
mov
or
and
or
or
pop
xchg
sbb
mov
push
or
and
pusha
add
and
bound
or
dec
test
mov
test
or
inc
push
mov
sbb
cmp
(bad)
out
push
push
adc
xor
add
inc
int
add
mov
repz
rcl
sbb
cmp
iret
inc
dec
popw
mov
lds
ja
push
jg
pop
mov
pop
adc
shl
xor
loopne
fdivr
jo
xchg
inc
test
inc
ins
sbb
out
mov
add
and
fsubr
lods
sti
dec
cld
mov
in
jge
xor
adc
sbb
adc
loopne
test
(bad)
fmul
mov
ror
les
fdiv
dec
pop
mov
test
add
std
xor
sti
jb
sbb
mov
popf
test
mov
adc
bound
add
sbb
outs
fmul
sbb
movs
jg
int3
dec
add
dec
mov
xchg
and
movs
out
mov
add
sub
addr16
ss
inc
and
lods
or
mov
cwde
test
dec
sub
hlt
std
cmp
sub
mov
scas
daa
call
sbb
pop
dec
bound
test
mov
test
lock
mov
test
jbe
test
fstp
movs
adc
and
ss
push
push
repnz
popa
jnp
movs
sbb
ins
add
push
mov
or
push
or
or
rol
nop
cli
mov
icebp
dec
add
and
std
xor
or
add
imul
(bad)
sahf
push
push
push
add
mov
push
(bad)
cmp
ins
rcr
dec
mov
mov
test
push
mov
dec
mov
test
mov
rol
and
dec
mov
popf
int3
int3
shl
or
loopne
dec
clc
lods
mov
fs
or
cwde
inc
jg
add
dec
sar
add
sbb
push
xor
retf
xchg
inc
jmp
or
and
and
pop
nop
aad
add
cmp
inc
or
ficomp
(bad)
add
jg
cmps
popf
and
inc
in
and
push
sbb
push
pop
add
push
fs
jg
jne
add
(bad)
cmp
stos
mov
test
dec
mov
test
stos
add
(bad)
shl
add
or
xlat
pop
or
inc
add
fimul
dec
jno
and
js
push
test
rcr
and
pop
inc
test
mov
adc
jne
ror
add
or
and
mov
mov
add
add
mov
ins
dec
rcl
shl
add
hlt
xor
mul
cmp
cmp
daa
sbb
mov
cmp
ja
jmp
sub
cdq
fstp
inc
inc
add
add
pop
dec
pop
inc
or
pop
rcl
sbb
das
cdq
inc
cwde
add
lahf
add
inc
lahf
dec
sbb
push
adc
mov
and
pop
rcr
lea
pop
(bad)
sysexit
test
mov
jo
mov
jp
pop
pop
dec
xor
push
aaa
mov
ror
(bad)
es
xor
test
mov
mov
cmp
or
jmp
imul
ret
push
add
push
mov
adc
fs
sub
push
or
lahf
and
push
add
pop
jp
jae
push
cmp
rcr
pop
or
in
inc
shl
push
in
in
div
xor
push
push
je
adc
nop
mov
or
scas
or
or
xor
aad
aad
push
mov
leave
(bad)
xchg
pop
xlat
test
aas
rol
push
adc
xchg
xchg
lea
popa
sub
ins
mov
maskmovq
mul
push
(bad)
aas
bound
jne
push
adc
fmul
out
add
jge
inc
cmp
and
daa
lds
loop
inc
mov
xor
mov
inc
add
and
sbb
leave
sbb
popa
or
stos
add
push
bound
push
rcr
xor
es
mov
fcom
inc
test
ret
xor
add
popf
pop
adc
or
and
push
cmp
push
inc
mov
adc
das
fisttp
mov
mov
and
lahf
repz
or
adc
push
mov
icebp
mov
jo
push
jge
mov
adc
push
add
jmp
inc
sub
aaa
pop
push
sbb
call
and
xor
mov
sub
int
jmp
cmp
cmp
adc
push
fadd
sbb
dec
leave
jns
nop
or
adc
add
add
movs
cmp
xchg
shr
or
dec
fsub
inc
call
cld
jne
or
sub
adc
add
mov
push
pop
add
cmp
loop
fcom
fdivr
call
pop
hlt
xchg
push
push
or
popa
or
out
leave
rol
mov
xchg
cmc
sar
cmp
cmp
jmp
jecxz
cmp
ds
mov
ins
int3
scas
int3
mov
lahf
inc
sbb
lahf
fadd
add
pop
jae
call
push
lods
xor
in
push
jl
jmp
lods
add
mov
add
stc
adc
sbb
push
dec
xchg
add
call
xchg
add
mov
stos
and
ins
cdq
push
add
or
adc
xchg
imul
or
out
test
(bad)
aam
pmaddwd
xor
pop
mov
adc
push
push
push
ror
repnz
pop
xchg
inc
daa
aad
sub
clc
fsqrt
movs
not
mov
xor
mov
adc
ffreep
inc
arpl
and
sar
leave
or
push
mov
test
pop
or
adc
or
add
fwait
and
fistp
or
push
add
push
and
lock
push
dec
push
imul
les
outs
outs
lahf
add
cwde
mov
push
xor
add
dec
cdq
cmp
aas
nop
imul
adc
les
(bad)
or
add
and
and
loop
lods
data16
xor
add
inc
test
dec
xor
lds
and
cmp
ins
sbb
inc
pop
popf
aam
fwait
sub
(bad)
fadd
xor
ja
jecxz
aaa
and
push
or
mov
gs
mov
shl
imul
inc
push
push
pop
dec
ss
cmc
cmp
adc
add
fistp
mov
xor
dec
in
rol
inc
enter
and
dec
add
push
mov
adc
mov
ret
inc
ret
jnp
retf
ja
and
add
add
in
daa
(bad)
aam
xchg
aaa
add
fild
or
add
repz
adc
xor
cmp
fcom
and
pushf
xor
cmps
adc
(bad)
je
imul
pop
clc
or
push
pusha
push
add
mov
and
lea
add
cmps
and
rcr
fadd
xor
dec
mov
push
adc
push
pop
ds
mov
mov
or
adc
sbb
push
adc
jo
arpl
push
stos
inc
and
out
or
add
or
mov
push
jo
push
pushf
and
dec
add
push
jno
es
push
xchg
loope
push
and
inc
adc
test
pop
push
xor
ret
add
call
add
pop
in
adc
fmul
nop
mov
xchg
mov
outs
xchg
dec
and
pop
pop
mov
adc
or
mov
sub
mov
pop
test
add
and
cmp
mov
jmp
adc
dec
cli
imul
xor
push
sub
lds
loope
mov
test
je
and
or
xor
inc
es
mov
cmp
jns
add
add
lahf
dec
dec
push
aaa
lods
add
mov
jp
jg
push
inc
pusha
pop
test
xor
push
jp
mov
pop
js
fsubr
sub
call
jl
add
rcl
and
adc
cli
aad
ja
and
dec
sbb
aad
adc
push
sbb
je
or
lahf
push
jbe
add
sbb
adc
ret
outs
and
inc
dec
sar
sub
movs
sub
loope
ret
pop
xadd
daa
call
pop
push
pop
mov
les
and
and
pop
sbb
mov
add
mov
sub
(bad)
push
jmp
jne
xchg
adc
fdiv
dec
in
leave
and
dec
fdivr
adc
aam
push
daa
inc
addr16
movs
lea
inc
or
adc
(bad)
shl
push
xchg
cmps
xor
xchg
hlt
adc
ss
and
mov
dec
mov
add
mov
(bad)
push
xchg
sbb
cwde
rcl
push
ror
or
sbb
cmp
rol
add
mov
push
movs
inc
fist
mov
sti
movs
out
inc
mov
add
push
fild
inc
add
cld
inc
add
add
xor
test
mov
jg
ins
mov
scas
xchg
add
and
push
hlt
or
sub
mov
or
lock
pop
sbb
inc
lock
jmp
or
xchg
std
lock
mov
leave
cs
mov
xchg
push
stos
add
xchg
dec
dec
cld
clc
mov
lea
push
inc
jge
add
push
adc
loope
inc
call
push
aas
jg
add
cdq
and
daa
push
or
jns
adc
in
mov
adc
addr16
mov
add
mov
sar
push
mov
and
(bad)
adc
push
or
loopne
pop
fsub
aas
mov
or
mov
mov
push
inc
aas
mov
mov
adc
(bad)
add
(bad)
push
add
or
jne
fild
pop
add
ss
mov
lock
or
cmp
jle
adc
ret
adc
cli
loope
pop
jmp
jmp
push
rol
mov
or
or
or
leave
hlt
push
adc
add
in
push
adc
cmp
test
mov
xchg
fiadd
jg
push
push
sbb
jg
fld
add
pop
inc
mov
mov
mov
mov
cmp
or
and
adc
scas
pusha
aas
fcomp
push
xchg
test
pop
ror
mov
or
jg
hlt
pusha
inc
xchg
lods
jo
add
or
and
add
loop
mov
mov
sbb
cwde
jmp
mov
push
add
add
inc
push
mov
inc
pop
cmp
rol
and
xchg
cmp
add
rcr
movs
outs
push
mov
dec
push
mov
mov
jo
mov
pusha
cwde
add
test
or
test
jmp
sub
xor
mov
mov
sub
sbb
inc
add
add
inc
xchg
push
ror
sub
in
cmp
or
movs
hlt
int
pop
sbb
or
jl
or
dec
inc
mov
imul
cdq
sub
scas
sbb
div
sbb
repz
call
arpl
setge
mov
mov
and
into
adc
inc
call
loopne
imul
loop
add
dec
imul
and
fisttp
aas
add
and
or
mov
xor
stc
or
mov
out
adc
cli
mov
nop
ror
adc
mov
and
pop
push
mov
add
imul
or
cmc
or
cmp
retf
inc
mov
dec
mov
xor
jmp
push
std
add
test
add
adc
or
sub
push
scas
and
mov
test
enter
push
ret
and
inc
dec
inc
and
cmp
mov
(bad)
sub
das
xor
lea
xchg
sub
add
lods
mov
movs
xor
xchg
loopne
add
jnp
cld
fdiv
and
and
dec
and
sbb
(bad)
arpl
push
dec
aas
leave
push
rol
sub
movs
xor
js
push
jle
lods
push
movs
push
xor
xor
cmp
lock
xor
test
cwde
dec
pop
xchg
es
mov
test
push
fadd
mov
dec
int
adc
mov
popa
or
mov
(bad)
adc
add
push
or
and
inc
gs
bound
mov
mov
add
mov
adc
pop
shl
rol
pop
add
push
and
aaa
push
leave
sqrtps
push
push
push
sbb
push
loopne
es
loop
test
add
and
test
in
pop
enter
add
or
aad
sar
mov
(bad)
sbb
and
add
mov
jno
dec
cmp
or
cmps
adc
fild
cmp
dec
je
push
clc
dec
out
test
and
cmp
je
push
push
inc
in
mov
sub
and
cmp
ret
in
retf
jp
ftst
stos
pusha
push
mov
xchg
xchg
dec
and
mov
push
dec
psadbw
or
ror
fcmovnb
adc
rol
fisub
arpl
pop
jge
adc
jp
mov
or
adc
pop
xchg
or
adc
push
push
rcl
pop
in
pushf
cmc
shl
and
mov
fbld
cmps
arpl
xor
jp
call
pop
sar
mov
adc
xchg
xor
cmc
pop
inc
push
xor
in
push
xchg
or
adc
scas
(bad)
out
xchg
xchg
(bad)
mov
inc
dec
stc
xor
fs
pop
or
sub
adc
inc
adc
call
cmp
sbb
sbb
fldenv
cmc
pop
push
jge
mov
and
add
cld
push
jne
pop
or
mov
jno
fs
mov
add
mov
sbb
push
sbb
cmp
mov
and
fbstp
pop
out
aam
mov
mov
adc
inc
and
or
sar
add
or
shl
jno
jnp
js
mov
jecxz
lahf
add
loopne
lds
add
lock
push
push
sbb
mov
xchg
call
add
retf
adc
and
cmp
mov
jne
ret
nop
iret
xchg
xchg
test
cmp
or
jl
sbb
dec
push
lahf
aam
push
jno
jle
xor
pop
test
mov
sub
or
mov
dec
mov
mov
(bad)
add
xchg
adc
or
sub
push
pop
in
mov
rcl
mov
inc
mov
pusha
ret
adc
jl
pop
cmp
ror
cmp
dec
jb
pop
add
mov
daa
push
dec
ror
or
add
jno
add
cmp
cmc
dec
or
inc
popa
inc
or
mov
or
xchg
add
inc
mov
outs
dec
push
push
xor
rol
push
cmp
add
iret
xchg
jecxz
jmp
push
inc
inc
sbb
sbb
and
je
push
(bad)
mov
mov
mov
sbb
(bad)
sub
sbb
push
or
push
pop
pop
sbb
sub
dec
or
pop
add
or
jge
nop
ins
aam
sub
xor
fsubr
sub
push
cmps
xor
or
pop
push
add
pop
pusha
loope
push
jo
pusha
das
enter
push
call
rol
test
xor
add
jg
add
pop
mov
clc
jg
cmp
movs
gs
dec
sub
add
xchg
lock
dec
out
jae
or
dec
outs
int
jae
std
push
mov
push
push
pusha
or
xchg
jae
out
add
pop
mov
shr
add
or
or
test
adc
addr16
rcr
clc
sbb
jmp
or
call
or
push
mov
sar
je
inc
and
vmread
movs
dec
idiv
jae
sbb
inc
out
ret
dec
sbb
jmp
pusha
div
xor
sub
jb
jecxz
(bad)
out
imul
lods
sti
js
in
rcr
call
push
int
js
fs
ds
fimul
dec
stc
in
jmp
xor
in
mov
push
cs
adc
jmp
out
xchg
dec
loope
sbb
mov
daa
je
add
cld
arpl
in
out
push
test
push
fld
stc
aam
inc
pusha
lds
sub
mov
cld
push
push
push
daa
dec
inc
test
push
and
scas
adc
push
clc
ins
std
mov
ja
xor
cli
mov
inc
and
aas
lock
pushf
and
or
sbb
push
cmp
(bad)
popa
or
test
push
xchg
mov
daa
jmp
xchg
repz
inc
mov
add
or
dec
ficom
add
sub
outs
pop
adc
daa
fcomp
inc
push
sub
inc
ficom
adc
or
push
adc
aas
jge
dec
add
mov
test
xchg
or
cdq
lahf
mov
jne
sub
je
aas
and
mov
sbb
fdivr
lock
iret
repz
ins
mov
adc
sar
mov
test
mov
jle
and
retf
xchg
pop
rcr
jno
int3
je
fisubr
cmps
fiadd
push
push
and
clc
add
fstp
hlt
push
ins
dec
or
inc
and
add
arpl
gs
lahf
dec
dec
add
loop
ins
rol
sub
push
fbstp
adc
mov
arpl
add
es
pop
shl
je
cmp
ja
xchg
imul
pop
out
or
fldcw
je
xor
inc
movs
adc
mov
cld
mov
sbb
or
outs
cld
cmps
in
add
xchg
push
pop
mov
mov
inc
pop
inc
push
icebp
dec
pop
imul
pop
add
add
loopne
push
jge
test
jp
cmp
xchg
idiv
mov
add
cdq
and
cmp
lock
pushf
dec
lds
adc
cld
lods
adc
add
ficomp
adc
adc
pusha
and
mov
repz
aam
cdq
inc
xor
xor
mov
les
and
xor
or
push
mov
xor
loop
add
dec
inc
cmc
enter
xor
pop
mov
imul
and
push
aam
add
and
jg
xor
push
into
add
sahf
sbb
jmp
cmp
in
add
jne
test
xor
daa
dec
dec
icebp
call
call
or
mov
add
xchg
aas
sbb
push
jae
inc
cmp
push
mov
das
call
jmp
dec
stos
jne
push
mov
(bad)
jg
push
mov
mov
push
mov
ffreep
add
push
cmp
add
fld
sbb
mov
pusha
iret
in
cmp
and
jb
push
push
push
push
pop
jb
fild
add
xor
(bad)
je
xor
and
sub
xor
push
adc
into
xor
jmp
sbb
int3
mov
movs
scas
icebp
jmp
push
clc
jb
jne
pop
ret
sbb
lock
adc
jl
ror
js
daa
or
sti
mov
fs
loope
fld
sub
add
stos
push
cmp
loopne
dec
inc
ins
mov
xchg
pop
nop
shl
push
loope
inc
and
test
movs
push
xchg
add
(bad)
fistp
add
mov
add
sub
loop
xor
and
inc
or
pop
xor
retf
mov
push
fisub
lods
rcl
pop
dec
xor
rcl
pop
rcr
fadd
loope
cmps
test
test
add
loop
shl
mov
cmp
inc
pop
pop
mov
or
les
pop
mov
cmp
gs
shl
mov
sub
sub
sbb
(bad)
jg
mov
mov
popf
in
jg
cmp
sub
pusha
repz
lahf
inc
data16
arpl
inc
std
pusha
add
test
iret
push
push
popf
and
popa
inc
call
jp
xchg
aaa
and
pop
lock
cmp
inc
sbb
jg
jg
mov
dec
dec
dec
arpl
gs
test
adc
adc
movzx
or
add
push
jb
clc
sub
push
(bad)
sub
sub
xchg
in
nop
jns
push
popa
mov
xor
inc
sar
or
or
push
or
pop
xchg
xchg
and
jbe
or
(bad)
jmp
push
jle
outs
mov
jne
cdq
cmp
jne
in
inc
add
js
or
movs
mov
push
push
cli
pop
cmp
cmp
sbb
xor
or
or
mov
int3
ins
test
adc
add
pop
and
fldenv
or
and
sbb
fadd
xchg
fisub
xor
mov
push
mov
or
add
and
in
fimul
sub
adc
and
inc
add
inc
sbb
or
ins
push
lock
dec
xchg
imul
adc
or
(bad)
jg
movsx
dec
sbb
jb
test
add
mov
(bad)
clc
je
movs
and
sub
or
push
sub
sub
outs
stc
sub
adc
(bad)
sar
mov
test
or
dec
adc
push
gs
dec
push
cmp
sbb
in
mov
rcl
cwde
in
pop
sti
movs
movs
(bad)
push
sbb
mov
inc
cmp
jne
scas
and
or
xchg
in
xchg
sti
int3
je
pop
(bad)
dec
ja
pop
sti
push
jne
and
cs
xor
ins
popf
or
adc
(bad)
mov
rol
sub
mov
cld
cmp
jmp
aas
lock
nop
adc
aas
in
in
(bad)
cs
aas
in
call
sbb
call
cdq
loope
add
mov
in
xchg
cmp
add
xor
int3
test
adc
jb
jl
imul
cmp
jb
mov
fwait
xor
ret
jbe
imul
mov
adc
in
movs
xor
ja
fstp
rol
es
popa
or
inc
leave
adc
outs
clc
mov
fmul
add
add
cmp
pop
sbb
push
fdivr
sbb
rol
push
rcl
sub
out
pop
mov
out
rol
ds
int3
daa
shl
int3
mov
int3
mov
rcr
xchg
xchg
mov
cmp
rcr
fs
rcl
in
sub
xchg
pop
cmps
rcl
rcl
ror
scas
add
ret
or
mov
popa
test
mov
push
lock
sbb
js
xchg
or
jb
rcl
xor
xor
popf
loopne
add
loopne
jmp
and
pop
cld
inc
adc
add
and
add
adc
mov
push
mov
pop
add
cmp
pop
or
or
mov
and
mov
pop
shl
aaa
or
jge
fidivr
mov
clc
enter
add
les
mov
and
mov
xor
repnz
cmp
sub
add
lods
cli
and
cmc
outs
sub
popf
xchg
(bad)
sbb
nop
push
dec
je
stos
push
fild
xchg
pop
pop
adc
cmp
mov
sbb
pop
sbb
js
pop
sbb
jge
xor
lods
dec
lds
push
js
mov
lods
shl
inc
ins
mov
or
rol
ins
or
sub
pop
loope
test
jmp
sub
sub
inc
mov
fmul
clc
jmp
test
mov
in
fstp
jo
or
jge
or
and
jb
je
fadd
mov
cmp
sbb
sbb
or
or
inc
jmp
scas
adc
push
jae
fld
jns
push
xchg
js
mov
adc
xor
inc
test
fs
push
push
jo
dec
add
jp
add
adc
add
pop
adc
dec
(bad)
sub
or
fcom
es
lahf
sub
mov
mov
or
or
adc
cmps
cmp
jmp
pop
mov
sbb
shl
jns
mov
or
fcomp
cmp
mov
in
add
(bad)
fsub
push
(bad)
dec
test
cmp
call
and
je
fcomp
xchg
fadd
movs
adc
add
pop
push
mov
jmp
fild
hlt
test
mov
xor
and
mov
aaa
add
outs
sub
inc
cmp
xchg
inc
aas
cdq
loopne
pop
inc
sub
pop
add
xchg
retf
lahf
adc
adc
sbb
adc
adc
mov
in
lds
hlt
mov
(bad)
cld
loopne
add
imul
rcl
neg
add
jmp
mov
cmp
mov
(bad)
adc
lea
xchg
or
imul
push
add
rol
mov
test
sti
push
add
lock
adc
or
dec
jmp
sbb
mov
pop
jl
fld
or
inc
jno
add
and
sub
or
add
pusha
mov
movs
fadd
lahf
pushf
rol
xchg
sub
sbb
std
mov
and
xchg
or
inc
and
call
sub
in
addr16
sub
and
add
pop
add
loopne
mov
nop
enter
jmp
leave
out
mov
sub
inc
fsub
or
frstor
int3
xchg
call
ret
sbb
and
adc
adc
test
push
das
and
or
leave
movs
loopne
mov
mov
pop
lea
loop
push
enter
fdiv
adc
pop
inc
jns
das
lock
loop
ins
fdiv
push
sbb
and
mov
adc
icebp
not
jmp
lea
das
nop
repnz
and
dec
dec
xor
adc
adc
mov
add
sbb
pop
sbb
div
sbb
not
test
fucom
or
enter
xchg
js
xchg
pop
(bad)
sti
aas
sbb
adc
nop
sub
xlat
imul
mov
das
sub
pop
dec
imul
mov
cmps
jecxz
mov
not
sbb
mov
out
das
cmp
jae
imul
xlat
cmp
pop
out
mov
shl
cmp
adc
rcl
dec
pop
movs
adc
shr
retf
cld
shr
pop
sbb
mov
or
rcr
jmp
adc
idiv
rcr
jmp
inc
lock
push
popa
ror
and
xor
cmps
scas
or
dec
rol
aam
imul
idiv
repz
or
and
mov
adc
aam
sub
xor
popf
mov
lahf
xor
mov
pop
mov
rol
adc
(bad)
fstp
mov
add
hlt
jne
mov
push
add
pop
inc
bound
xor
ror
mov
nop
fxch
mov
mov
mov
push
or
pop
int3
and
sbb
sahf
add
xor
push
mov
jmp
inc
shl
int3
into
xchg
and
retf
push
mov
sbb
sti
movs
mov
sti
cmp
add
ja
fiadd
xor
jp
imul
aas
xchg
ins
or
pop
out
inc
adc
add
cmp
lods
jmp
fdiv
xor
out
loopne
mov
mov
das
jno
les
xchg
add
pop
adc
and
fs
jo
mov
add
cld
call
mov
adc
jne
push
fistp
or
or
cdq
mov
jne
mov
dec
fild
test
pop
jno
xor
movs
jl
test
ror
push
retf
sub
jl
les
mov
hlt
xchg
pop
jmp
push
or
imul
lock
mov
inc
pop
mov
addr16
cmp
adc
(bad)
add
xchg
shl
je
push
add
std
pop
push
push
pop
mov
inc
jl
xor
add
inc
aas
ins
or
xor
cdq
push
cmp
cmp
or
adc
mov
adc
add
jecxz
push
nop
xchg
jb
lock
and
adc
and
inc
popf
or
pop
cwde
add
nop
clc
adc
add
hlt
gs
rcr
mov
dec
jbe
xor
jle
push
out
xchg
mov
and
xchg
test
adc
sub
mov
pop
pop
push
dec
adc
(bad)
ins
dec
mov
push
sbb
add
movs
push
add
or
pop
and
lahf
add
and
clc
xor
test
push
or
xor
xor
aad
push
pop
xor
push
mov
dec
retf
cmp
mov
(bad)
retf
test
jne
add
jl
adc
outs
adc
cwde
test
lea
xchg
adc
(bad)
or
sub
mov
mov
adc
in
fcom
inc
shl
rol
popa
push
push
inc
mov
push
or
cwde
sbb
push
sbb
mov
push
pushf
mov
pop
or
inc
and
int3
mov
enter
add
xor
ins
lods
sbb
mov
mov
call
lea
repnz
add
xchg
adc
cmp
add
ret
je
mov
or
and
or
mov
stos
gs
mov
and
xor
or
fwait
in
xchg
and
push
xor
add
xchg
sbb
inc
xchg
imul
or
inc
inc
jae
ret
cmp
xchg
or
adc
xchg
push
push
pop
ret
dec
popa
and
lock
add
mov
inc
cld
push
add
or
scas
or
jg
or
or
cmp
(bad)
ror
xchg
imul
mov
cmp
popf
adc
sub
or
cdq
pop
lea
xlat
cld
add
outs
push
lea
mov
xor
je
jo
and
ds
or
or
inc
add
and
cmp
lock
shl
or
or
in
mov
and
loopne
push
sbb
mov
or
shl
cmovo
dec
iret
movs
pop
or
add
dec
cmp
mov
jg
lods
ins
pop
loop
add
mov
shl
pop
cmc
iret
clc
inc
jge
inc
add
jnp
shl
ret
mov
pop
dec
movs
bnd
cwde
ret
push
cmp
aas
adc
pop
sbb
mov
repnz
sbb
fld
pop
adc
or
cdq
retf
or
pop
jo
loope
mov
ins
pop
add
inc
push
mov
cmp
fs
fisttp
adc
add
lods
imul
mov
(bad)
xor
dec
ja
xor
enter
popa
sub
pop
mov
adc
inc
mov
nop
retf
adc
adc
mov
add
mov
addr16
adc
ins
mov
mov
mov
mov
xor
icebp
mov
mov
sbb
push
mov
lods
cdq
xchg
sbb
stos
mov
or
adc
sbb
popf
adc
jp
jns
add
add
dec
inc
push
or
jmp
mov
add
shl
jno
push
adc
or
cmp
cli
jmp
movs
fwait
push
dec
test
dec
sbb
mov
add
push
sbb
mov
add
push
push
shr
inc
shr
dec
fild
into
and
ja
pop
(bad)
mov
pushf
push
and
jns
ins
sbb
hlt
mov
dec
aad
mov
ss
mov
and
mov
add
das
push
add
and
push
test
leave
or
aad
out
fistp
pop
adc
push
arpl
inc
mov
cmp
sti
test
rol
xchg
and
pop
fs
xor
loope
or
(bad)
aaa
test
mov
jmp
adc
adc
inc
cld
fisttp
mov
or
or
mov
push
add
pop
imul
outs
and
or
jne
ror
adc
fldenv
xchg
cli
or
xor
jmp
cld
mov
stos
add
mov
mov
inc
or
mov
retf
cmp
ret
mov
aas
or
dec
xchg
cld
dec
xor
add
lahf
sub
and
or
dec
or
into
push
mov
lea
and
ret
cmc
jg
mov
xor
bound
jno
aam
jmp
xchg
in
and
push
cmps
call
push
in
or
sar
inc
mov
jo
sbb
sbb
push
movs
mov
fsubr
pop
mov
xchg
dec
mov
add
or
rcl
and
dec
adc
popf
xchg
movs
cmp
xlat
inc
out
pusha
test
iret
pusha
adc
outs
dec
adc
push
pop
xor
adc
xor
les
mov
add
inc
jmp
icebp
aad
or
mov
mov
adc
or
cs
or
push
mov
int3
jmp
mov
call
push
imul
push
mov
(bad)
push
adc
pusha
mov
jmp
aas
in
add
movs
mov
sub
jo
lods
ss
adc
adc
aas
mov
ror
sbb
add
dec
pop
test
psrld
fistp
or
sbb
and
inc
(bad)
cmp
fcomp
imul
data16
in
xor
loope
sub
sbb
in
sub
sub
(bad)
xor
ds
add
ins
aad
mov
pop
dec
sbb
jne
sbb
je
inc
fdiv
sbb
add
call
add
ins
push
lahf
sub
push
push
mov
or
adc
pop
mov
hlt
adc
jne
lds
iret
cli
or
mov
add
mov
mov
(bad)
mov
add
mov
out
add
inc
stc
or
shl
mov
or
outs
push
mov
push
es
xor
push
cmps
addr16
or
add
mov
jo
add
ins
hlt
movs
test
xor
mov
ds
fsubr
dec
jmp
call
mov
ret
loopne
cmp
xor
lock
sub
pop
adc
das
loop
aam
sub
jle
pusha
or
shl
xchg
push
jo
jne
or
or
mov
mov
xor
outs
mov
pusha
or
lods
rol
call
pusha
push
jg
mov
mov
lods
mov
ins
add
jg
mov
mov
rol
sub
push
add
cmc
inc
push
cmp
mov
ret
sub
cdq
enter
mov
repnz
inc
imul
jns
xor
sbb
lahf
movs
mov
lock
adc
cmp
inc
(bad)
push
adc
lds
add
add
and
fistp
sub
xor
pop
add
gs
lods
ss
pop
push
mov
pop
jno
mov
mov
mov
adc
aaa
or
or
mov
ins
add
pop
in
mov
mov
cmps
les
gs
or
add
daa
and
adc
push
dec
pop
mov
sbb
ins
or
push
repnz
out
inc
xchg
inc
iret
xor
repnz
xor
xchg
pop
and
iret
neg
aad
clc
test
jo
inc
add
loope
test
add
add
or
adc
add
add
push
(bad)
or
iret
dec
nop
adc
fistp
in
sbb
call
mov
dec
add
push
std
dec
adc
leave
and
lahf
dec
pusha
lock
jb
test
push
and
xchg
jno
ror
mov
icebp
add
shr
mov
jbe
test
inc
mov
lea
cmps
or
mov
mov
iret
push
xor
add
add
or
adc
push
xor
mov
lahf
aaa
mov
(bad)
std
lahf
out
jl
ret
pop
adc
mov
lahf
pop
adc
mov
sbb
ins
sub
adc
or
and
je
clc
and
add
jecxz
mov
clc
das
cmp
or
xchg
and
add
imul
jecxz
ret
sub
and
pop
dec
and
sub
inc
mov
lock
push
cmp
or
sub
dec
xor
(bad)
xor
fstp
add
bound
mov
add
mov
and
pop
lea
data16
test
imul
adc
imul
sub
pusha
mov
lods
add
pop
sbb
out
xchg
adc
loopne
add
dec
xchg
sbb
mov
outs
movs
adc
(bad)
and
cdq
in
sub
add
rol
les
sbb
add
push
cmp
icebp
xchg
test
pop
add
jp
add
or
mov
ins
es
and
adc
sub
imul
dec
mov
mov
pop
adc
jae
jge
rcl
sbb
sbb
sbb
add
clc
and
arpl
jne
dec
aaa
nop
test
and
test
push
hlt
lock
(bad)
or
in
inc
mov
enter
mov
xchg
sbb
dec
jecxz
add
jae
test
mov
sbb
jb
jo
sub
jne
add
dec
lahf
cmc
retf
rcl
int3
mov
mov
inc
adc
mov
pop
or
and
jo
cmp
push
add
adc
lods
or
cmp
imul
movs
mov
(bad)
add
sbb
mov
daa
ret
sub
adc
mov
jmp
add
in
mov
jmp
pusha
stos
push
cmp
cmp
mov
dec
push
outs
xchg
xchg
xor
popf
inc
xchg
mov
cmp
or
adc
icebp
ret
push
inc
test
push
push
push
inc
dec
imul
test
mov
inc
call
mov
and
outs
or
mov
jo
dec
jp
xor
xchg
mov
jb
aas
dec
add
add
mov
je
pop
inc
ret
(bad)
mov
dec
iret
je
scas
pop
push
adc
repz
push
leave
mov
sub
lahf
or
adc
push
push
lds
inc
pushf
shl
stos
fiadd
in
mov
dec
popa
addr16
clc
mov
inc
fdivr
cld
jge
sbb
ret
xor
dec
xchg
imul
icebp
add
fldcw
aas
sbb
pop
cmp
push
or
cmp
jae
rcr
xchg
adc
dec
add
dec
cmp
scas
pop
push
das
or
jmp
rcr
cwde
sbb
mov
add
cmp
jg
pop
ds
pop
push
xchg
mov
(bad)
aam
cmp
xchg
or
or
pop
xchg
add
icebp
fiadd
push
hlt
jge
and
pop
xchg
push
out
dec
sub
inc
clc
adc
or
pushf
or
add
cwde
inc
inc
mov
fcomp
dec
xor
lock
ret
ins
scas
dec
xchg
cmp
shl
mov
ror
pop
mov
add
mov
add
nop
adc
xor
into
pop
lahf
inc
add
mov
dec
mov
push
(bad)
loopne
leave
sub
rol
cmp
test
fsubr
mov
add
into
pop
retf
and
add
push
pop
pop
sahf
cwde
add
sub
mov
(bad)
aam
cmp
sbb
arpl
mov
push
push
push
fwait
push
add
pop
aam
mov
xchg
outs
lods
daa
mov
or
push
mov
in
sbb
lods
xchg
sub
add
mov
or
jmp
mov
sbb
or
ins
out
add
bound
add
call
lock
fcomp
out
mov
mov
imul
inc
push
add
in
and
cmp
or
and
or
sub
push
dec
adc
in
adc
ja
or
jns
adc
jae
popa
and
retf
or
add
(bad)
or
and
ins
push
in
and
sti
in
ins
add
or
inc
inc
add
xchg
jnp
add
xor
adc
and
dec
add
pop
in
xchg
pusha
jns
sbb
nop
push
push
dec
ror
aam
push
mov
call
int3
fdiv
xor
lods
xor
sub
cmps
push
test
push
pop
pusha
sbb
push
xchg
or
and
fwait
aaa
mov
ins
int
jg
jecxz
and
add
dec
inc
pop
mov
and
xchg
jne
add
dec
arpl
and
xchg
mov
adc
(bad)
xchg
aas
xchg
or
or
stos
jae
xor
std
inc
jmp
imul
or
(bad)
adc
and
pusha
xchg
dec
jmp
mov
xor
icebp
mov
adc
mov
loop
adc
iret
mov
ins
iret
js
push
inc
shr
or
mov
das
mov
mov
adc
pop
add
mov
or
sbb
cmp
std
out
(bad)
xchg
pushf
mov
xchg
in
mov
mov
dec
or
mov
and
pop
adc
inc
pushf
jnp
shl
mov
cdq
call
aaa
and
sbb
popf
adc
jb
loope
sbb
(bad)
pusha
add
or
mov
iret
je
xor
or
xor
pop
aas
dec
mov
cmp
mov
jo
sub
inc
mov
pusha
adc
dec
nop
adc
inc
adc
lods
nop
sub
push
xor
mov
test
iret
cmp
fwait
and
or
add
push
imul
add
or
mov
pop
adc
add
mov
push
inc
xor
ins
dec
sbb
iret
inc
imul
mov
cmp
adc
mov
xchg
sub
add
inc
and
shr
jns
js
pop
mov
aaa
push
or
dec
xor
add
push
inc
out
xor
mov
mov
adc
or
ja
(bad)
pop
xor
jge
adc
cdq
ins
adc
dec
add
add
and
inc
nop
sbb
mov
adc
imul
ds
and
sbb
adc
jmp
jno
mov
iret
push
ror
mov
xor
adc
and
rcl
call
push
pop
push
push
or
rcl
aaa
retf
ret
fcmovbe
mov
aaa
retf
xlat
or
or
cmp
xlat
and
bound
or
icebp
add
push
mov
enter
aaa
add
or
(bad)
adc
loope
and
loopne
sti
test
xchg
xor
dec
adc
mov
rcr
(bad)
dec
add
dec
add
cmpps
and
sub
scas
std
cs
add
cmp
call
lea
fadd
clc
mov
or
mov
add
and
(bad)
pop
mov
in
sub
jbe
rcr
mov
xor
fist
inc
xchg
add
outs
es
push
adc
mov
and
test
xor
pop
add
inc
lock
cld
(bad)
xor
and
mov
push
sub
popa
retf
(bad)
test
push
xchg
mov
mov
or
push
adc
into
in
and
or
push
push
xor
in
cmps
aas
out
fsub
sbb
in
gs
push
les
xor
in
adc
cdq
mov
gs
mov
neg
lea
mov
add
mov
sbb
popa
mov
lahf
mov
test
in
jp
fcom
push
push
aam
enter
and
(bad)
fild
sub
fmul
push
mov
movs
mov
adc
inc
mov
pop
sub
xchg
push
jbe
je
add
mov
loopne
test
mov
dec
and
pop
ror
ffree
shr
sub
jmp
or
cmp
and
out
sbb
inc
sub
inc
mov
sahf
jo
push
mov
cmp
(bad)
or
add
or
push
dec
lea
cmp
or
and
nop
jge
jp
and
sbb
inc
pop
inc
je
sub
clc
mov
adc
inc
mov
mov
mov
add
ja
cmp
jbe
dec
shl
shl
sbb
dec
mov
sub
push
dec
add
mov
pop
or
dec
pop
xor
mov
or
jbe
push
cmp
cmc
pop
ret
xor
mov
push
popa
mov
cdq
jne
pop
fwait
pop
mov
mov
arpl
icebp
or
adc
cmp
inc
jmp
sub
pop
push
repz
inc
cld
mov
lea
or
repnz
mov
add
jne
push
ret
jg
ret
dec
test
add
add
add
ja
push
aas
scas
ret
push
lock
cwde
dec
sbb
pop
sub
add
ins
mov
rcr
enter
mov
cwde
aas
dec
leave
lods
int
icebp
or
push
push
scas
pop
mov
pop
push
add
sar
lds
scas
xor
or
xchg
and
fild
inc
clc
test
jno
adc
clc
popa
inc
or
rcl
jmp
push
inc
lods
leave
and
adc
push
add
xor
mov
scas
mov
jmp
inc
xor
mov
lock
and
and
sbb
mov
outs
dec
dec
or
mov
or
loop
add
or
or
bound
mov
pop
or
in
nop
ret
inc
jo
mov
push
add
js
fs
add
bound
pop
sbb
add
fmul
scas
sub
mov
popf
or
lods
sbb
jnp
outs
dec
pop
push
mov
leave
and
and
jg
push
xchg
or
pop
clc
and
pop
(bad)
inc
cdq
add
pop
jno
bound
pop
pop
and
mov
inc
sbb
add
add
or
test
add
mov
test
sub
pop
and
push
sub
jl
adc
lea
loope
mov
ins
and
call
dec
push
loopne
arpl
xchg
mov
cmp
mov
adc
fidivr
leave
push
ins
pop
fld
mov
std
clc
push
mov
xchg
clc
inc
jbe
add
test
std
clc
and
aam
cmp
xchg
push
mov
push
ret
sub
sar
mov
outs
rcl
push
mov
imul
test
adc
in
push
xchg
dec
jmp
push
cld
adc
ret
scas
dec
mov
jmp
aam
loopne
pop
add
pop
inc
(bad)
push
adc
pop
dec
sub
or
fsubr
mov
jmp
int3
xor
movs
jno
fisttp
mov
enter
enter
cmp
jp
jnp
mov
(bad)
ins
rcr
ins
(bad)
mov
cmc
pusha
mov
dec
aam
ins
mov
pop
ins
mov
aaa
and
mov
adc
or
jne
daa
dec
mov
xchg
mov
mov
adc
jae
outs
cmps
lods
adc
idiv
push
test
test
pop
movs
in
lea
jmp
sbb
cdq
sub
sar
lods
test
adc
lock
or
test
mov
movs
pcmpeqw
jecxz
test
push
sbb
push
inc
mov
xchg
and
fstp
cmp
jmp
sar
and
imul
push
inc
aas
mov
dec
add
fidivr
add
fdiv
mov
or
sub
add
add
adc
sub
aas
add
sbb
xor
inc
out
pop
je
dec
or
jg
or
pop
cvtdq2ps
cmp
mov
test
or
jg
and
add
dec
movs
hlt
dec
mov
sbb
movs
or
inc
push
enter
add
jl
inc
gs
inc
jp
cmp
(bad)
mov
mov
push
or
mov
outs
push
loope
sbb
sub
xor
cmp
nop
xor
push
pusha
adc
inc
pushf
sbb
pop
int3
int3
xchg
in
fadd
int3
stos
inc
sar
or
xchg
sub
test
dec
leave
inc
sar
popa
add
cmp
(bad)
(bad)
aas
jnp
or
jmp
shl
cmp
add
add
push
add
xor
xor
ret
loop
adc
fisub
popa
add
adc
or
or
and
mov
js
add
or
adc
rol
clc
popa
push
ror
dec
rcr
mov
pop
(bad)
sbb
mov
add
push
mov
cmc
add
push
mov
dec
(bad)
jg
and
dec
xor
jo
ss
sub
aad
or
and
push
ret
mov
movs
aas
aas
jge
loop
inc
dec
cmp
popa
or
or
pop
push
ja
test
pop
and
mov
xor
push
or
(bad)
fsub
and
ins
push
push
push
adc
jmp
rcr
loop
hlt
push
test
sbb
and
leave
dec
and
sbb
inc
jle
mov
inc
cmp
adc
or
mov
dec
pop
mov
push
xor
add
jne
leave
je
es
push
(bad)
sahf
call
cmp
and
add
dec
enter
jmp
pop
cld
mov
and
pop
and
fimul
dec
loope
cmp
mov
or
add
cmp
mov
adc
adc
dec
push
add
int3
adc
add
in
pop
test
inc
add
dec
adc
mov
adc
hlt
pop
and
pop
dec
test
pop
cmp
inc
xor
popa
or
and
ins
call
(bad)
call
mov
xor
add
or
shr
jle
xchg
jbe
(bad)
and
add
push
mov
mov
aaa
popa
pop
push
adc
dec
jge
jb
pop
add
cmp
lods
or
push
cmp
inc
mov
mov
(bad)
push
dec
sub
lock
jmp
jns
add
rcr
add
inc
(bad)
lods
and
add
adc
bound
or
loopne
add
sbb
sbb
and
cmp
mov
pop
nop
xchg
dec
es
and
push
sub
ins
sub
sbb
pop
push
lea
and
int3
dec
(bad)
movs
in
inc
mov
sbb
je
push
pop
out
sbb
pop
add
jmp
xchg
fwait
and
mov
or
or
or
push
dec
adc
es
fstp
add
bound
inc
and
mov
or
and
add
add
sub
mov
and
push
inc
xchg
mov
pusha
jecxz
test
fisttp
mov
rcl
xchg
call
or
test
mov
mov
add
add
hlt
arpl
lea
xchg
lea
push
and
push
fs
sub
rol
out
push
cmp
push
jo
js
outs
enter
or
ins
adc
ret
push
mov
cmp
sbb
sub
icebp
push
add
xor
ja
div
scas
stmxcsr
popa
adc
inc
push
and
clc
scas
sub
or
fnstcw
pusha
xchg
imul
add
xor
fs
sbb
call
jmp
movq
movaps
mov
clc
jae
xor
jle
push
push
add
mov
ror
sbb
nop
push
xchg
jl
and
retf
mov
jg
adc
dec
mov
xchg
ret
ret
mov
and
bound
xchg
shl
adc
or
xor
(bad)
sub
outs
and
add
fadd
ret
mov
jge
dec
xor
enter
sar
sbb
sbb
sbb
fdiv
shr
mov
pop
sub
loop
test
aas
jg
mov
mov
sahf
pop
dec
adc
sti
dec
push
ins
adc
sti
sahf
push
adc
pop
adc
daa
pop
arpl
adc
push
std
jmp
dec
add
pop
sub
or
in
jle
sub
mov
aaa
adc
add
pop
lahf
aas
add
lock
fnstenv
fistp
fild
push
addr16
push
push
and
(bad)
xchg
cmp
jmp
fstp
icebp
pop
pusha
inc
loop
shl
rol
push
adc
jo
mov
(bad)
enter
cmp
fcomp
or
adc
ret
mov
(bad)
dec
je
leave
jg
add
add
or
int3
add
jne
or
push
imul
es
ret
popa
loopne
sbb
add
jecxz
les
pop
pop
ffree
jecxz
dec
inc
in
push
push
inc
adc
ret
mov
mov
and
push
push
jns
mov
sub
inc
jmp
lea
pop
out
push
inc
stc
cmp
icebp
or
jnp
pop
ins
add
or
in
mov
rol
out
add
mov
dec
cs
adc
adc
mov
and
inc
or
jbe
inc
sbb
mov
pop
adc
add
loopne
mov
mov
retf
and
jmp
sbb
inc
jecxz
loope
push
loope
fild
or
add
xor
je
mov
fcomp
dec
cs
sbb
mov
dec
adc
adc
test
inc
mov
xchg
xor
adc
and
or
shl
sbb
aam
add
mov
add
enter
rol
jne
(bad)
and
sbb
ret
shl
sbb
loop
pop
aam
push
and
pop
aas
and
adc
das
mov
mov
jmp
inc
mov
inc
sub
sbb
loope
sub
mov
adc
lods
add
mov
mov
pop
or
cli
mov
sub
xchg
xor
push
adc
push
add
xor
fdecstp
rcl
pop
adc
mov
enter
add
ror
retf
or
cmp
stos
add
div
pop
ret
mov
xchg
cdq
mov
sbb
pop
test
test
pop
les
mov
test
jmp
sbb
sub
mov
add
adc
adc
ss
jo
adc
mov
and
push
sbb
int3
mov
and
test
je
(bad)
sbb
pop
push
sbb
test
push
sbb
inc
push
cmps
sbb
add
jo
bound
adc
call
ror
test
je
dec
add
mov
rol
fistp
ret
pusha
daa
fs
cld
leave
mov
add
loope
(bad)
test
call
sbb
clc
bound
jge
pop
int3
nop
les
stc
jmp
push
pop
nop
test
fstp
sbb
in
xor
es
fmul
sub
jle
lea
push
js
xchg
mov
pop
push
inc
pop
inc
pop
not
cdq
xchg
or
add
or
cmps
fs
add
xchg
cmp
es
ins
inc
leave
xchg
dec
or
add
sbb
and
push
sbb
mov
imul
adc
cs
or
and
or
add
(bad)
adc
xor
pusha
xor
mov
lock
add
or
adc
ds
mov
ror
mov
clc
sbb
jecxz
jmp
and
jae
jl
jo
pop
pop
outs
stos
lods
sub
mov
fisttp
pop
pop
jg
into
rol
shr
push
push
lock
ins
je
dec
imul
pop
fwait
hlt
adc
out
adc
mov
clc
xor
ret
inc
add
rol
push
or
adc
jge
dec
mov
pusha
add
xor
mov
push
mov
xor
repz
mov
inc
cld
adc
sub
fisub
or
lahf
bound
ins
std
mov
int3
fld
add
nop
cwde
pop
out
jo
dec
jae
fadd
mov
das
inc
pop
js
push
(bad)
hlt
mov
clc
cmp
or
dec
retf
inc
inc
xor
mov
sbb
add
jmp
popa
mov
test
and
add
xor
jne
or
mov
mov
cmp
xchg
rol
(bad)
adc
adc
or
scas
fist
ret
or
mov
jne
add
inc
sbb
add
mov
mov
pop
dec
in
sub
ret
adc
adc
fcom
push
and
cmp
scas
sub
jne
fcomp
push
sbb
ds
inc
mov
test
push
jmp
mov
je
mov
sbb
cs
and
outs
add
adc
push
cli
or
into
stos
xor
push
xchg
je
mov
pop
cmps
fs
jnp
(bad)
adc
push
mov
aad
bound
xchg
jb
or
cld
push
cmp
je
add
push
adc
hlt
ret
fs
cmps
shr
push
add
daa
pop
sbb
test
out
ret
adc
xchg
or
adc
jle
ror
jae
push
movs
out
fcom
adc
loopne
mov
fdivr
sub
adc
add
xchg
mov
(bad)
inc
adc
adc
add
cmp
int3
(bad)
or
or
test
les
sub
xor
ins
sbb
push
push
je
mov
call
mov
inc
pop
xor
shl
cwde
jns
mov
push
ficom
adc
mov
add
jp
into
movzx
ins
add
movs
xchg
pop
add
xor
test
inc
xor
and
push
push
popa
pusha
push
xlat
pushf
xor
fs
stc
(bad)
fdiv
or
shr
or
dec
add
lock
fwait
pop
aad
lahf
jbe
rol
imul
adc
jnp
in
sar
ret
add
and
xor
out
push
push
or
movs
scas
rcl
sbb
or
bound
xchg
or
movs
ror
xor
(bad)
cld
aam
mov
dec
or
dec
pop
mov
inc
xchg
sub
pop
hlt
fs
nop
add
or
or
inc
ins
nop
cwde
loope
mov
fdiv
cs
jecxz
lahf
and
mov
pop
lock
jmp
jne
or
pop
pop
sar
sbb
test
fdiv
inc
push
cmc
pop
mov
xor
and
or
jns
push
or
sbb
sub
or
jnp
push
xchg
retf
popf
test
and
pop
push
enter
dec
std
ss
mov
jo
sbb
and
adc
mov
(bad)
retf
or
cmc
lods
xor
push
pop
rcl
or
xrelease
mov
push
outs
mov
dec
sub
mov
sub
in
pusha
and
js
jge
test
popa
loop
sub
(bad)
xor
and
xchg
test
mov
ror
mov
call
push
jge
hlt
jne
push
movs
sbb
(bad)
sub
adc
test
nop
xchg
test
jne
xchg
inc
adc
xchg
mov
jae
ror
xlat
test
pop
and
sbb
add
and
js
add
sti
pop
lods
mov
or
ret
push
mov
inc
push
lea
repnz
jae
lock
jnp
inc
adc
add
jnp
dec
sub
mov
dec
pop
add
adc
adc
int3
or
add
inc
loopne
push
and
adc
mov
or
mov
loope
add
add
in
inc
or
cld
and
push
or
add
inc
idiv
ins
movs
das
or
je
mov
fwait
and
dec
or
adc
sub
jbe
push
mov
in
mov
push
jbe
xchg
sbb
mov
fadd
mov
jno
mov
hlt
mov
arpl
sbb
aad
movsx
sbb
fwait
sbb
data16
pushf
lahf
or
mov
push
mov
nop
add
lock
mov
add
push
ss
cmp
push
mov
nop
data16
inc
ret
mov
jbe
xchg
pop
loope
es
mov
mov
sbb
sub
pop
add
ds
mov
addr16
ret
sub
(bad)
scas
xor
inc
inc
test
push
cld
push
and
pop
sub
daa
sbb
retf
sbb
test
mov
fist
mov
or
nop
nop
sub
lahf
jb
leave
cmps
mov
add
loopne
pop
pop
xlat
lock
push
arpl
jo
shl
jmp
xchg
or
inc
cmp
mov
popf
xchg
xor
push
or
pop
adc
in
cmp
or
in
or
add
cmp
fisttp
mov
add
fwait
push
xchg
jno
sbb
mov
or
and
pusha
lock
add
rol
cmps
or
das
xchg
movs
cmp
sti
int
test
push
inc
icebp
mov
add
call
and
ins
cwde
pusha
push
and
icebp
lahf
and
test
pop
add
or
add
jbe
je
xor
je
add
enter
mov
sub
ins
add
or
xchg
pop
jb
sub
adc
ins
inc
xchg
push
sub
popf
add
push
or
or
icebp
pop
xor
mov
shl
push
jo
fild
mov
mov
neg
and
inc
mov
retf
and
movs
cmp
sub
jae
retf
sbb
push
mov
daa
sub
ror
call
inc
sbb
fst
lods
shl
pop
mov
pusha
icebp
inc
js
pop
fild
dec
arpl
loopne
push
add
adc
test
loope
or
inc
and
sbb
xchg
int
add
adc
das
adc
adc
mov
jl
inc
dec
pusha
test
mov
dec
pop
smsw
cmp
push
mov
enter
sub
push
adc
and
mov
aas
add
mov
jg
mov
(bad)
in
pop
in
loope
arpl
rol
fadd
and
adc
push
adc
mov
cmp
in
add
ret
add
sbb
out
xor
add
sub
inc
cwde
scas
retf
add
xlat
repnz
add
icebp
cmps
and
pop
in
lods
loopne
and
add
push
lods
mov
and
inc
add
add
push
mov
lahf
or
retf
and
fistp
retf
test
push
jmp
mov
jle
loopne
mov
add
loop
push
das
adc
int3
ins
xlat
dec
ret
adc
sbb
cmps
jno
loopne
pop
push
xor
call
push
push
test
mov
or
iret
rcr
adc
add
dec
cwde
inc
xchg
das
xchg
das
inc
push
je
dec
and
or
dec
div
xchg
mov
pop
sub
nop
sub
add
movs
in
retf
adc
or
sbb
imul
and
mov
xor
add
imul
and
mov
add
cwde
lock
iret
push
mov
test
mov
loope
jb
cmp
in
aam
popa
and
xor
xor
push
jo
cmp
aam
outs
add
cmps
xor
sti
sbb
mov
rcl
in
xchg
outs
dec
pop
jle
in
jns
and
xor
or
lock
retf
daa
mov
aam
push
mov
cmp
ror
lods
popa
in
dec
mov
adc
push
fs
xor
or
fcomp
or
push
push
icebp
or
push
inc
loopne
and
movs
xchg
or
mov
outs
(bad)
ror
and
xchg
xchg
inc
sub
and
cmp
pop
cmp
nop
xchg
fcomp
stos
and
push
mov
adc
and
mov
cwde
inc
pop
rol
xor
pop
pop
inc
sub
bound
call
sub
popa
pop
or
xor
pop
push
pop
inc
pop
por
or
xchg
dec
push
jle
add
mov
int3
mov
ins
mov
and
dec
add
dec
add
nop
inc
pop
xlat
or
sbb
ret
test
adc
cs
pop
mov
cld
jne
dec
repz
push
xor
add
pop
shl
push
dec
mov
xor
or
sbb
loope
ins
pop
sub
and
cmp
ret
push
xor
inc
lods
lds
push
ror
sti
cld
inc
and
sbb
pop
int3
jmp
mov
sahf
mov
mov
push
repnz
adc
(bad)
sbb
push
dec
pop
push
mov
icebp
and
sbb
sub
scas
or
mov
bnd
push
add
lods
mov
nop
sbb
mov
mov
rol
std
int3
mov
loopne
adc
ret
xor
jl
mov
mov
scas
push
leave
xchg
dec
fimul
add
add
sbb
dec
add
push
(bad)
add
add
es
inc
and
shl
mov
push
les
das
jge
sub
push
inc
add
push
fcmovnb
adc
mov
sub
jp
mov
dec
sub
mov
imul
add
add
es
mov
call
in
add
test
cmc
fcom
inc
or
and
push
jno
sbb
daa
add
fst
pop
mov
sub
mov
sbb
leave
repnz
dec
shr
inc
adc
je
add
(bad)
lock
pop
jne
pop
sysexit
xchg
mov
jle
ret
add
mov
xor
retf
cmps
dec
push
inc
add
ret
inc
clc
dec
or
sbb
push
dec
push
mov
pop
push
mov
rcr
xor
or
adc
clc
sar
icebp
inc
dec
aad
push
mov
cmp
and
add
jne
imul
cmp
and
pop
or
push
(bad)
fidiv
stos
jae
cmps
cmp
jo
loopne
xchg
xlat
dec
in
cmp
sub
jmp
mov
dec
(bad)
or
sub
call
pop
sub
inc
dec
sbb
adc
pop
adc
adc
cmc
call
adc
or
or
add
adc
push
xchg
jge
and
mov
or
fs
cmp
sub
pusha
mov
in
and
cmp
mov
in
mov
sub
test
inc
pop
clc
sub
mov
popa
cmp
pop
cmp
sub
add
add
sti
cwde
fs
xchg
stos
leave
cli
loopne
gs
loopne
add
scas
add
cmp
mov
les
test
inc
arpl
cmp
inc
sar
inc
adc
adc
popa
push
inc
mov
sbb
inc
retf
js
(bad)
push
scas
sub
cdq
bound
fsubr
add
nop
ret
or
add
push
xor
add
fmul
shl
push
jle
pop
sbb
mov
push
test
lahf
mov
adc
inc
mov
retf
les
sbb
adc
rcl
or
fisttp
mov
retf
mov
es
enter
cmp
push
lods
pop
sub
xchg
mov
and
imul
aaa
jmp
push
dec
pop
mov
inc
sub
adc
push
xchg
clc
xor
arpl
push
lock
jb
or
and
sub
add
test
xor
repz
cmp
or
nop
push
mov
push
lahf
jno
or
ffreep
nop
js
call
and
(bad)
dec
mov
xlat
add
adc
dec
clc
push
lea
repnz
cmp
mov
mov
lods
(bad)
clc
push
imul
dec
fs
es
mov
jmp
inc
mov
sbb
and
lea
xor
adc
and
adc
push
sub
pop
add
or
sub
or
mov
sbb
jne
push
jmp
inc
and
loope
xor
lahf
cmc
movs
test
adc
adc
mov
leave
std
adc
or
add
mov
push
ror
call
shl
add
cmps
cmp
sbb
(bad)
jbe
pcmpgtb
sbb
stc
mov
cmp
mov
push
pop
and
out
dec
mov
dec
loopne
pop
jne
mov
les
(bad)
pop
jne
fs
mov
sub
movs
add
sub
jecxz
xor
mov
push
dec
dec
xchg
ins
aam
enter
xor
aas
push
cwde
xor
or
inc
and
and
je
jnp
add
add
scas
in
and
fwait
adc
int3
lea
or
dec
add
pop
sub
pop
xchg
inc
xor
mov
cmp
push
loopne
aas
iret
repz
enter
inc
mov
cmp
sti
in
inc
(bad)
in
call
repz
lock
hlt
clc
clc
shr
cmp
clc
lea
add
add
fldenv
sbb
pop
mov
and
leave
ret
nop
inc
rcl
inc
(bad)
or
and
lea
xchg
sub
jl
cld
or
push
(bad)
cld
out
mov
push
ss
inc
xchg
fbld
stc
sub
pop
nop
mov
fadd
add
fiadd
cs
call
out
mov
mov
inc
push
out
push
outs
in
fimul
dec
dec
sbb
out
mov
ficomp
push
or
push
fs
out
ins
je
test
pop
aaa
sbb
sbb
sbb
adc
iret
repz
adc
or
push
cmp
repz
add
aaa
jl
fwait
and
or
sub
adc
push
add
lock
add
push
xor
xchg
or
cmp
or
dec
push
xor
rcr
fst
mov
push
push
adc
pop
or
mov
pop
mov
repz
dec
sub
rcl
jbe
and
lods
or
pop
xchg
je
sub
sub
sub
jns
sub
xor
mov
mov
dec
(bad)
add
and
lahf
push
pop
es
push
cli
fadd
pop
push
jmp
sub
inc
aam
jmp
inc
aam
icebp
add
sahf
es
pop
movs
push
dec
lahf
inc
inc
or
mov
rol
add
rcl
adc
jno
mov
nop
dec
xor
(bad)
loopne
cdq
ror
in
dec
in
dec
hlt
stc
rcl
cdq
hlt
stc
jecxz
xchg
adc
lock
lahf
pop
push
push
sbb
inc
aaa
inc
mov
mov
bound
imul
sub
inc
or
push
mov
inc
xchg
lahf
push
sub
arpl
cmp
adc
jmp
dec
das
add
xor
or
sbb
sub
jg
add
xor
inc
aam
jb
xchg
lahf
mov
sbb
jle
cmp
nop
pop
push
xchg
dec
pop
mov
or
xchg
add
nop
test
addr16
and
inc
lea
add
push
sub
rol
push
dec
xchg
mov
push
bound
in
test
push
and
jg
enter
jp
cld
cld
xchg
mov
inc
cmp
mov
mov
inc
sub
push
sub
test
adc
test
add
and
add
retf
outs
inc
mov
rol
pusha
add
xor
xchg
push
add
push
ret
pusha
xchg
ud0
mov
mov
ret
push
mov
xor
je
fidiv
jne
and
je
jg
adc
sti
shl
fisttp
mul
push
pushf
je
arpl
repnz
ret
push
jmp
inc
in
retf
mov
add
inc
outs
add
xor
add
fiadd
sbb
pop
and
jmp
sbb
pop
jo
mov
or
enter
jp
jae
ss
pop
or
cld
adc
rcr
ret
dec
adc
xchg
test
aad
and
jb
fstp
pusha
les
add
ror
inc
adc
mov
(bad)
push
push
je
jmp
inc
jp
test
cmp
sub
xor
push
lock
or
push
xor
ror
xchg
(bad)
pop
enter
je
pop
hlt
jle
mov
push
outs
push
pop
add
or
fwait
clc
loope
arpl
add
add
sahf
cmc
dec
sbb
sahf
add
or
loopne
dec
cdq
push
popa
push
pop
lock
jge
gs
pop
mov
sbb
loope
adc
and
or
dec
adc
or
inc
mov
addr16
cmp
test
or
or
jns
clc
jmp
add
mov
mov
adc
xchg
cmp
mov
push
push
jecxz
dec
call
push
push
add
push
add
dec
in
loope
ja
imul
pop
xchg
nop
cmc
mov
popa
or
add
push
test
inc
jo
or
fdivr
pop
push
aam
rcr
mov
sub
mov
jbe
ss
push
push
rcl
dec
sbb
jno
xor
mov
dec
cmps
or
push
and
aad
push
cmp
and
enter
pushf
aam
xchg
adc
call
and
repnz
sub
push
xor
sbb
adc
loopne
inc
mov
push
inc
or
div
jle
lea
jecxz
add
or
sbb
xor
shl
mov
inc
pop
dec
adc
cld
adc
adc
rcl
or
(bad)
mov
or
fiadd
adc
aas
mov
xchg
xchg
push
or
push
xchg
fwait
shl
mov
mov
xchg
add
aad
xor
adc
and
inc
or
adc
jno
adc
push
mov
pmulhuw
test
adc
mov
rcr
rcr
sbb
cmp
sbb
xor
push
fnsetpm(287
inc
outs
xor
add
and
sbb
jg
jne
pop
test
jg
or
sub
retf
neg
repnz
jmp
inc
or
and
icebp
inc
ret
xchg
(bad)
adc
test
cmp
cmp
jmp
mov
and
xchg
and
add
inc
nop
les
mov
inc
(bad)
repz
stos
push
arpl
xor
pop
dec
and
in
adc
jmp
int3
dec
add
fnstsw
movs
mov
sbb
mov
adc
xchg
jne
retf
dec
mov
jne
cmp
cdq
sbb
enter
add
pop
cdq
inc
mov
mov
adc
lea
ss
pop
lock
sbb
xchg
xor
mov
pop
jmp
inc
sbb
xor
sbb
jl
mov
ffreep
sub
xlat
mov
or
das
xchg
add
addr16
push
aaa
imul
dec
test
xchg
sti
test
inc
adc
inc
and
mov
mov
and
js
jp
shl
and
movs
je
loope
retf
or
test
mov
xor
cmps
inc
xchg
mov
and
inc
cmovp
vmread
cli
inc
cmc
and
mov
or
add
adc
sar
add
ret
(bad)
aas
sub
mov
(bad)
jmp
adc
add
sub
inc
mov
and
sub
push
push
loopne
mov
adc
inc
push
cmp
cmp
or
and
or
mov
sbb
pop
push
fdiv
or
cmps
clc
mov
mov
jge
add
xchg
test
add
push
(bad)
jo
arpl
jge
xchg
dec
clc
out
sub
fist
retf
and
mov
lahf
push
clc
loop
imul
or
popa
push
pop
mov
adc
push
movs
or
push
and
hlt
dec
adc
xchg
xor
pop
fild
jae
and
add
pop
or
and
xor
xchg
adc
fwait
adc
mov
jmp
outs
inc
inc
clc
and
or
pop
sub
add
out
add
outs
pop
test
pop
out
adc
sbb
or
loopne
jecxz
adc
ins
lock
inc
jge
jne
dec
and
inc
mov
leave
int3
sar
call
or
add
(bad)
jmp
arpl
scas
movs
push
pop
xor
mov
dec
adc
and
lock
xchg
jmp
add
mov
pop
mov
sub
pop
and
inc
xchg
jecxz
pop
mov
lock
shl
add
loopne
repnz
or
push
add
dec
imul
je
sbb
loopne
dec
add
mov
inc
test
push
mov
fs
movs
stos
or
add
jg
test
pop
call
into
add
sbb
jbe
lahf
jo
jmp
mov
call
scas
mov
jo
jg
pop
sbb
in
inc
pop
jo
mov
aaa
jmp
out
add
sbb
mov
adc
mov
jmp
lock
rol
sub
stos
sbb
xchg
leave
or
gs
or
mov
and
fbld
sti
mov
(bad)
lds
je
rcr
icebp
xlat
or
xchg
add
popf
ror
xchg
call
dec
movs
aas
push
cmp
mov
shl
ficomp
mov
mov
sbb
push
push
call
inc
xor
dec
and
add
xor
pusha
(bad)
push
and
sub
mov
pop
into
lock
and
ret
cmp
xchg
pop
aam
jo
or
push
add
fisttp
je
pusha
int3
xchg
inc
or
test
jnp
sbb
rcl
mov
(bad)
ins
fist
jl
pop
pop
push
dec
inc
loopne
mov
mov
stos
add
aas
fxch
fld
pop
push
(bad)
push
cmc
inc
shr
mov
add
pop
popa
aad
push
jnp
lock
inc
mov
pop
sub
mov
daa
jo
or
xor
jl
mov
sbb
pop
push
lahf
sub
(bad)
mov
adc
add
loope
js
mov
outs
xchg
jb
pushf
nop
adc
sub
imul
xor
xchg
in
jno
mov
sbb
hlt
outs
dec
sbb
push
mov
dec
in
add
push
inc
inc
jmp
fnsave
add
push
adc
inc
stos
lahf
dec
lock
dec
adc
loopne
push
dec
lods
pop
push
cmps
adc
inc
shr
adc
sbb
and
cmp
popf
fisttp
adc
xchg
add
adc
push
leave
mov
test
jg
adc
and
mov
pop
push
fld
fucom
les
push
mov
pop
rcr
sub
cwde
mov
popf
or
lods
fwait
push
adc
jl
and
or
ins
sbb
je
pop
pop
adc
sub
shl
ret
sub
add
xchg
pop
call
nop
rol
es
leave
add
add
inc
out
and
test
adc
mov
dec
test
fnstsw
mov
sbb
dec
out
es
dec
mov
adc
fucomi
nop
shl
(bad)
enter
test
sub
or
or
outs
prefetcht2
stc
sub
add
or
data16
and
je
cs
mov
or
add
adc
ror
push
cmp
pusha
push
movs
js
or
jne
adc
or
jnp
clc
cdq
pop
or
gs
mov
jnp
jne
add
jne
push
xor
mov
imul
add
push
cmc
mov
and
mov
cmc
gs
mov
add
jmp
movs
dec
js
mov
sbb
adc
cmps
jp
or
imul
cmp
(bad)
popf
dec
adc
push
fild
out
adc
adc
push
sbb
cli
sar
add
mov
push
aas
add
sub
push
in
ja
inc
test
adc
pop
mov
xchg
shr
adc
add
sub
fild
jmp
sti
add
dec
sbb
jge
sbb
jne
shl
xchg
pop
and
mov
inc
add
jmp
add
and
xor
sub
push
nop
push
jnp
in
jmp
cmp
jg
lock
dec
or
mov
rcr
mov
or
icebp
push
add
or
fidiv
add
push
cmp
stos
add
jmp
je
xor
dec
test
dec
xchg
mov
xor
sbb
jae
jl
and
mov
sub
dec
cmp
or
add
popf
dec
fdivr
in
jbe
nop
fist
int3
or
or
or
fisttp
adc
fisub
daa
sub
push
inc
repz
sbb
or
test
xchg
xor
push
add
hlt
imul
add
loopne
and
ret
(bad)
bound
jmp
or
pop
inc
dec
cld
push
jo
jno
xor
call
inc
push
addr16
ror
lock
(bad)
rol
movs
mov
adc
xor
sbb
add
push
mov
imul
jb
shl
xchg
push
dec
push
xchg
adc
loop
adc
nop
inc
inc
add
imul
lahf
test
or
add
out
xchg
fsub
sbb
fst
cmp
pop
loop
xor
mov
push
ins
push
mov
push
xchg
mov
mov
push
push
ds
movs
fcom
(bad)
mov
add
je
test
adc
xchg
popf
fwait
jmp
mov
push
loop
ret
sub
add
popa
popf
mov
(bad)
fwait
xor
and
mov
loopne
(bad)
sub
or
adc
shl
mov
push
inc
add
fwait
or
add
in
(bad)
test
rcr
test
loopne
loope
fisttp
retf
mov
fld
fcmovu
pop
xchg
test
add
sbb
rol
jo
adc
adc
push
dec
test
xor
or
(bad)
packssdw
or
aas
or
dec
add
add
add
std
ins
jmp
jbe
pop
sub
fdivr
out
mov
imul
lods
inc
aam
dec
rcl
(bad)
xor
adc
mov
inc
xchg
sahf
sub
dec
mov
push
push
lock
or
rcl
lock
dec
ret
mov
cmp
dec
fnsave
pop
jo
cmp
xchg
add
ret
dec
lods
nop
test
add
out
sub
add
jp
es
iret
mov
dec
cs
rol
call
dec
push
or
inc
inc
jmp
mov
add
xchg
lods
push
lds
fsubr
adc
or
sub
mov
add
xchg
push
add
inc
jp
setae
leave
js
das
jb
and
add
sub
push
ret
in
sub
add
ror
push
mov
or
add
mov
mov
sbb
mov
mov
adc
rol
sar
loop
cmp
pop
movs
test
stos
cmp
dec
dec
adc
pusha
xchg
test
and
jmp
pop
scas
rcl
cmp
das
adc
dec
sub
and
cmp
and
cmc
ss
movs
sub
add
loop
jp
xchg
jge
stos
das
test
movs
xor
pop
sbb
ud1
jne
dec
and
in
inc
push
xor
enter
adc
sbb
add
addr16
in
in
or
stc
add
add
and
jne
gs
sbb
movs
and
cmp
sbb
femms
mov
adc
push
xor
lods
and
mov
cdq
(bad)
jmp
mov
jg
adc
lock
adc
add
dec
xchg
pushf
loopne
pusha
fnstsw
cmp
push
xchg
aad
adc
add
pusha
fnstsw
dec
or
nop
jg
jl
and
aas
mov
les
popa
and
pop
(bad)
icebp
mov
and
lock
mov
adc
xor
mov
fmul
enter
xchg
adc
sbb
xor
xchg
cmp
xchg
inc
and
xchg
lea
push
fcmovbe
hlt
cld
(bad)
ds
adc
jg
xor
nop
frstor
inc
xchg
mov
push
push
adc
adc
jg
pop
dec
retf
fdiv
pop
jbe
inc
call
rol
test
and
sbb
fcom
adc
(bad)
scas
jp
add
sub
jl
pop
mov
dec
call
dec
loop
xchg
push
movs
enter
mov
cdq
or
int3
jmp
inc
outs
or
inc
push
mov
movs
nop
add
adc
pop
adc
cmp
sub
pop
push
inc
test
add
push
addr16
jo
aaa
push
inc
retf
dec
push
mov
pop
and
and
imul
jne
mov
nop
js
gs
idiv
cs
daa
lock
aam
push
shr
aas
xchg
fdiv
lds
lds
inc
or
jnp
rol
popa
inc
test
movs
adc
pop
adc
addr16
or
inc
pop
retf
lock
cmp
mov
sbb
sbb
and
or
outs
pop
or
in
dec
outs
imul
ret
imul
call
lahf
push
je
add
cmp
add
add
jmp
adc
clc
call
mov
in
mov
mov
test
sub
in
or
or
or
jg
dec
xor
fbld
sub
cli
hlt
push
call
jg
adc
outs
mov
fdiv
fs
inc
cmp
xor
ja
cmp
inc
or
dec
daa
inc
loop
and
pop
shl
xor
cmp
xchg
jne
and
push
je
and
sub
cmc
inc
add
mov
push
add
mov
add
push
sbb
ss
and
scas
cmp
(bad)
dec
sub
dec
pop
dec
jno
xchg
iret
cs
lods
mov
mov
jge
xchg
inc
jmp
add
adc
dec
sar
sbb
lods
in
or
shl
aas
pop
aam
add
push
pop
enter
loope
lods
mov
loop
jno
sahf
or
xor
adc
ins
dec
pop
rcl
lods
jns
dec
or
push
icebp
add
mov
add
pop
fnstenv
mov
adc
push
retf
sbb
adc
sub
loope
add
dec
clc
mov
adc
xchg
icebp
and
or
fisubr
adc
fisttp
xor
adc
xchg
add
fiadd
dec
or
nop
imul
sub
jns
mov
test
sub
add
sub
adc
test
xor
rcr
dec
mov
inc
mov
adc
sbb
inc
adc
cmc
enter
shr
sub
jno
test
or
or
push
and
lock
mov
cdq
gs
movs
dec
pop
jge
and
xor
rcr
frstor
enter
adc
pop
icebp
mov
xchg
aam
cdq
dec
rcr
push
cmp
dec
enter
mov
adc
or
or
sbb
mov
sbb
cmp
sub
retf
mov
lods
mov
xchg
dec
jo
mov
lods
cwde
or
mov
lods
jae
sbb
lock
and
lock
lock
(bad)
lock
ins
rol
les
out
add
push
adc
jle
rol
out
pop
test
fcomp
inc
test
adc
xchg
sub
or
sub
jge
inc
mov
loopne
mov
or
movs
test
movs
jmp
sti
push
arpl
mov
(bad)
mov
push
sub
mov
addr16
push
inc
fld
xchg
push
mov
or
cmps
adc
push
sbb
mul
daa
in
cwde
cmps
pop
dec
cwde
cwde
jmp
dec
sbb
xchg
jmp
sbb
outs
pop
ror
sbb
and
and
sbb
or
mov
and
push
or
repz
jmp
mov
pop
dec
mov
add
popa
sbb
inc
inc
and
pop
shl
xor
shl
cmc
or
add
and
sbb
cmp
add
cwde
test
inc
dec
xor
pop
push
fist
push
nop
sbb
push
cmp
adc
or
jbe
add
or
nop
cmp
mov
mov
xchg
pop
mov
in
inc
fistp
cwde
pop
shl
push
nop
call
sbb
xor
lds
push
add
addr16
fdiv
and
movs
(bad)
sbb
adc
xor
jbe
(bad)
popf
call
pop
push
cdq
loopne
add
dec
aas
cmp
mov
mov
or
dec
aas
or
xchg
imul
cwde
inc
data16
push
call
test
inc
pop
hlt
inc
inc
lds
aad
es
imul
add
jns
sub
dec
or
or
nop
lock
ins
adc
in
xchg
fld
add
pop
jno
sahf
inc
in
fild
lods
push
std
mov
out
jae
inc
daa
xor
and
add
xor
add
ins
jo
movs
test
mov
cmp
jb
in
adc
sbb
in
leave
in
and
sub
retf
and
mov
imul
and
(bad)
retf
in
in
test
jmp
fld
xor
adc
jae
xchg
cld
movs
ja
add
scas
dec
mov
jmp
cmps
add
adc
xchg
cld
add
jmp
shl
and
iret
sub
xor
and
sti
js
add
pop
call
lock
sub
jne
pop
(bad)
and
cld
jmp
and
and
pop
cs
cli
mov
sub
pop
mov
sub
jnp
mov
push
xchg
add
pop
adc
adc
and
pop
imul
cs
push
stos
scas
and
test
xor
cwde
in
jne
or
sub
aam
inc
ja
ret
push
bound
popa
jmp
cmp
mov
xor
pop
inc
fimul
push
ds
fadd
sub
mov
jns
addr16
ins
ror
js
xor
push
mov
or
adc
sbb
or
rcl
ret
jge
ds
xchg
sbb
and
sub
imul
xchg
hlt
cmc
push
and
push
and
cmc
push
add
and
adc
out
lea
or
mov
jecxz
shl
pop
or
inc
loopne
fmul
fdivr
add
inc
loopne
adc
and
pop
fs
xchg
jle
mov
fist
enter
sub
loop
inc
(bad)
mov
push
add
mov
push
(bad)
mov
sti
or
fldenv
or
shl
mov
pop
lock
repnz
rcl
mov
shl
sar
movsx
push
inc
repnz
cwde
cmp
fmul
sbb
fxch
mov
sar
xchg
xor
mov
xor
jg
or
test
lds
dec
scas
loope
xor
sub
sar
mov
sub
add
ror
xor
clc
adc
pop
js
lods
enter
adc
jnp
dec
xchg
jno
fild
out
jo
and
sub
adc
or
mov
jecxz
sub
mov
fstp
test
popa
jb
and
or
add
add
push
jno
dec
lahf
push
retf
in
and
or
rol
pop
xchg
mov
js
lods
or
push
push
aaa
les
das
mov
jmp
jmp
ins
mov
iret
movs
pop
xchg
jmp
xchg
shl
mov
xor
ror
or
ret
xor
cwde
mov
cwde
call
jg
shr
loopne
inc
jae
loope
mov
rcl
xor
or
adc
inc
jmp
jmp
hlt
outs
push
or
in
das
in
jge
pop
or
das
hlt
sub
call
imul
ins
shl
push
les
adc
mov
mov
sbb
jnp
xchg
and
ins
mov
xchg
or
je
dec
or
arpl
or
pop
dec
sub
xchg
or
inc
loopne
push
dec
or
and
add
gs
rcr
and
inc
mov
out
dec
test
adc
mov
or
dec
adc
je
imul
mov
daa
call
xchg
add
add
ret
ins
add
or
xor
enter
hlt
inc
sub
ja
inc
dec
xchg
xor
inc
adc
add
je
jne
jno
add
nop
(bad)
push
push
mov
push
push
int
add
inc
jnp
fdiv
push
jg
frstor
movs
sub
push
lahf
loopne
sub
add
sub
jecxz
in
mov
adc
push
or
sbb
add
popf
imul
popa
jmp
in
xchg
outs
or
clc
jne
lea
adc
ins
push
hlt
inc
std
add
outs
aaa
jmp
enter
test
mov
test
add
mov
xchg
cmp
les
add
sti
loopne
or
add
add
xor
loopne
inc
stc
sahf
fwait
add
push
je
sbb
cmp
push
pop
fist
xchg
push
adc
data16
dec
dec
shr
aam
mov
lods
inc
cmc
mov
sub
adc
mov
sub
jle
mul
jmp
jae
retf
scas
add
lock
mov
jnp
pop
mov
pop
or
mov
add
sub
mov
loope
jmp
repz
pop
and
test
and
pop
cwde
fcom
xchg
xor
(bad)
in
add
clc
ss
adc
push
push
out
mov
popa
adc
adc
adc
sbb
pop
gs
in
in
cs
cmp
cmp
imul
jne
mov
lea
jb
or
add
dec
and
int3
xchg
pop
enter
aam
xchg
pop
jb
push
xchg
inc
mov
repz
sub
dec
and
inc
and
dec
dec
dec
sbb
add
ja
ret
fst
dec
sub
je
inc
leave
add
sbb
fst
mov
and
js
pop
test
add
sub
sbb
or
and
jno
push
mov
adc
test
stos
dec
or
adc
or
add
adc
inc
dec
or
sbb
ret
das
sar
jmp
jmp
(bad)
shl
adc
sar
sbb
jl
cmp
dec
movs
cmp
sahf
or
push
push
test
cmps
sbb
sub
sub
jb
mov
mov
stos
pop
and
test
mov
sub
push
dec
mov
ins
fcom
push
lds
dec
xlat
inc
add
xchg
or
mov
aam
clc
mov
inc
cwde
in
aam
pop
cmp
clc
in
sar
les
test
sub
enter
or
ret
sub
lea
xchg
ret
mov
sbb
add
nop
adc
xchg
retf
mov
sub
lahf
or
ror
dec
adc
lea
mov
and
add
call
push
inc
adc
mov
push
imul
sbb
loop
push
idiv
mov
out
(bad)
mov
push
and
sub
inc
adc
out
icebp
int3
int
inc
pusha
inc
sbb
inc
ins
dec
gs
dec
jno
inc
sbb
adc
xor
mov
and
call
movs
cmps
xchg
cwde
ret
(bad)
loopne
imul
cmp
jae
ret
push
xor
push
jmp
(bad)
in
fst
cmp
push
add
test
pop
test
pop
cmp
jno
mov
sbb
jle
mov
add
cli
and
jle
mov
test
add
jns
push
pop
loop
jmp
push
or
jge
cmp
popa
dec
out
ficom
or
adc
(bad)
dec
cmp
xor
push
mov
mov
adc
jo
out
and
or
pop
xor
pop
mov
push
call
pop
jmp
add
sub
mov
rcr
push
dec
das
push
jae
add
cmps
sbb
adc
lods
add
fucomip
add
adc
popf
mov
cmp
mov
or
or
push
add
jo
sub
xor
sbb
paddusb
out
movlps
push
xchg
(bad)
xlat
push
add
add
or
shl
inc
cmp
cdq
sub
sub
test
popf
pop
jbe
test
mov
pop
cmp
adc
xor
jnp
mov
push
cmp
xchg
or
mov
aas
add
aas
outs
adc
leave
add
add
and
and
push
sbb
mov
outs
add
cwde
sbb
loope
mov
mov
lahf
(bad)
adc
shr
out
cmp
imul
add
add
cdq
nop
hlt
hlt
xor
lock
shl
in
jmp
add
adc
test
push
(bad)
movs
mov
mov
sub
jmp
loope
daa
cmp
test
fcom
push
mov
or
fmul
inc
lods
sbb
mov
fadd
push
mov
adc
sub
imul
mov
add
sbb
xlat
bound
xor
inc
fmul
aam
jno
push
adc
push
mov
inc
mov
or
ins
push
dec
in
push
dec
arpl
add
add
mov
popa
mov
sub
lds
call
sub
add
mov
mov
ds
cmps
or
(bad)
loopne
push
int3
je
adc
adc
xor
xchg
push
dec
cli
push
and
push
add
dec
push
and
xchg
test
inc
mov
xchg
sbb
and
xchg
fwait
add
mov
adc
cmp
xchg
mov
cmps
mov
push
push
pop
fstp
or
add
add
cmps
nop
sub
mov
mov
pop
int3
ja
pop
adc
push
add
or
or
jg
xor
imul
adc
push
das
xor
push
and
ins
lods
pop
pop
popf
push
sbb
nop
xchg
cld
inc
scas
pop
stos
lods
int3
lods
mov
rol
or
pushf
lahf
test
pop
push
fcmovnbe
cmps
dec
jo
add
adc
xchg
mov
sbb
pop
test
or
ficomp
push
aaa
bound
and
stc
push
stos
jnp
test
sub
and
and
test
push
sub
scas
cmps
std
add
out
pushf
mov
push
in
icebp
or
das
in
inc
fcom
pop
adc
in
xchg
xchg
inc
icebp
pop
test
and
in
retf
push
dec
(bad)
or
push
mov
stc
cmp
xchg
xor
mov
adc
dec
cmc
xchg
or
mov
push
rcr
sbb
inc
jge
sub
or
cmp
(bad)
mov
aad
pop
rol
add
stc
aam
adc
add
rcr
push
dec
cwde
popa
in
rol
sbb
and
add
xor
xchg
ret
and
(bad)
fbstp
push
adc
adc
jp
verr
or
mov
cmp
jne
stos
sub
call
cmovno
jge
xchg
call
xchg
stc
test
add
push
je
cdq
cmp
and
cmp
inc
inc
push
or
rcl
pop
or
sub
lea
mov
loopne
(bad)
je
shl
sbb
push
xor
lds
ret
movs
and
inc
call
mov
and
or
loopne
inc
jg
xor
or
inc
dec
clc
push
sbb
fisttp
dec
cld
or
ss
xchg
inc
sub
mov
inc
ds
and
and
dec
enter
add
sbb
in
inc
jl
xor
jge
ficomp
pop
jo
subps
int
cmp
icebp
fldz
mov
add
push
inc
push
mov
nop
out
stos
push
rcr
xor
add
cmp
cdq
clc
stc
add
popf
jno
jmp
call
xchg
push
push
add
inc
mov
and
(bad)
cmp
or
pop
call
icebp
dec
fmul
add
xchg
pop
call
cdq
das
test
or
jae
xchg
mov
sub
cmc
push
cld
add
jl
(bad)
adc
jmp
xchg
jbe
cli
xchg
pusha
popa
dec
mov
popa
fst
not
and
dec
sbb
pop
mov
dec
pop
sub
xchg
mov
or
in
or
sbb
pop
mov
sbb
aam
mov
or
sub
bound
xchg
adc
mov
xor
xchg
add
ret
xor
in
mov
cmp
pop
and
scas
cmp
push
dec
xor
mov
aas
int
pushf
or
dec
xor
lea
add
inc
rol
cmc
aaa
and
add
push
add
adc
add
sbb
fwait
mov
or
mov
out
dec
xchg
add
inc
ret
(bad)
jecxz
push
mov
pusha
inc
call
and
xchg
cmp
std
int
sub
sbb
in
loop
inc
inc
sar
adc
test
adc
and
add
dec
add
or
and
test
jno
or
cwde
sbb
or
add
sub
or
push
dec
enter
add
push
or
dec
popa
and
xor
test
jno
jns
sbb
mov
es
mov
add
ja
test
sbb
pusha
sar
imul
frstor
ins
rcr
call
loope
xchg
adc
cmp
movs
int
test
inc
inc
adc
gs
push
inc
in
jmp
popa
ret
aaa
add
xor
pop
pop
or
int3
and
lea
pop
je
add
or
fist
(bad)
mov
stos
test
cs
pop
push
pop
sub
pop
jmp
cdq
cmps
lock
mov
movs
add
shl
push
dec
or
pop
jmp
hlt
or
pop
in
pop
dec
in
stos
lds
inc
or
sub
inc
fisttp
fistp
push
sbb
movzx
xchg
dec
test
sbb
leave
add
mov
xor
mov
xchg
aad
push
cmp
mov
jns
jmp
add
add
pop
inc
push
or
test
add
rep
push
test
shl
inc
jecxz
cmp
add
ja
xor
retf
je
xchg
mov
fidiv
jno
aaa
jmp
rcl
cld
ret
and
mov
pop
imul
xor
add
or
pop
add
add
add
mov
sbb
psrlq
mov
clc
movs
xor
imul
cld
bound
clc
cmp
cmp
daa
test
je
mov
iret
repz
aam
xchg
pop
ins
inc
loopne
pop
outs
pop
or
cld
jmp
add
push
mov
mov
pop
arpl
pop
mov
(bad)
and
or
std
mov
add
jno
cli
jmp
imul
jp
add
(bad)
popf
stos
add
adc
inc
mov
shl
nop
outs
hlt
jmp
add
mov
mov
enter
lahf
int3
std
jno
jb
push
shl
sub
mov
popa
pop
test
add
add
fadd
mov
mov
inc
cmp
pop
inc
push
movs
out
sti
std
or
or
and
aaa
or
dec
mov
enter
lods
fwait
xchg
int3
and
jb
xchg
lods
movs
or
cdq
sbb
mov
adc
(bad)
dec
and
ror
dec
inc
xor
sbb
ret
adc
cmps
retf
push
or
mov
test
xchg
add
outs
mov
test
bound
pop
push
popfw
popa
lods
and
test
inc
add
push
or
add
mov
mov
and
leave
aam
pop
dec
inc
daa
jecxz
push
cwde
sbb
xchg
jecxz
call
fs
inc
addr16
mov
retf
popa
push
ja
jo
cmp
jmp
mov
lods
in
dec
call
adc
push
xchg
cwde
rcl
mov
sbb
movs
add
(bad)
dec
lods
not
pop
sub
inc
test
fmul
mov
adc
nop
mov
lods
jbe
xchg
inc
mov
mov
add
add
add
test
sub
push
push
jg
or
loopne
push
push
cmp
lock
ror
stc
jecxz
add
or
dec
or
sbb
test
xor
pop
push
mov
cmps
inc
stos
cmp
jle
push
sbb
jmp
dec
cmp
cmp
les
mov
and
cld
dec
push
push
sbb
sar
or
cld
sub
inc
xchg
or
cmp
out
add
test
mov
jmp
inc
dec
test
das
or
xor
inc
jo
add
mov
push
dec
dec
adc
nop
and
and
mov
dec
dec
push
leave
xchg
dec
call
sub
adc
out
xchg
mov
and
mov
xchg
xor
rol
pop
cmp
add
movs
and
push
sbb
adc
in
adc
and
in
call
mov
and
xchg
dec
jmp
mov
sahf
mov
lock
daa
popa
dec
xor
outs
sub
loopne
add
pop
arpl
xor
sbb
mov
ret
test
xor
in
or
or
cwde
cwde
xchg
movs
aam
add
stos
xor
xchg
in
xor
gs
adc
stos
in
push
sahf
mov
add
pop
xchg
push
adc
adc
mov
or
xchg
loopne
mov
add
nop
sbb
nop
or
mov
stos
in
call
mov
and
and
clc
push
add
xor
repz
movs
rcl
dec
adc
mov
adc
push
enter
inc
mov
and
inc
jne
dec
push
cmp
js
sbb
pop
inc
xor
and
push
mov
xor
loopne
push
aam
mov
push
add
push
add
sbb
test
jno
xor
in
ror
xchg
dec
adc
mov
push
inc
dec
enter
add
add
dec
shl
xor
jg
xor
mov
icebp
push
inc
jg
cwde
sbb
or
sbb
clc
fld
pop
rcl
adc
mov
pop
adc
sbb
fimul
popa
shl
mov
xchg
inc
adc
mov
in
ins
add
out
xor
xchg
sbb
inc
(bad)
xchg
or
cmp
xor
fisttp
xchg
or
cmp
or
je
add
je
push
fadd
pop
adc
push
inc
sub
pop
mov
jo
jo
dec
add
or
xor
cli
mov
call
loop
pop
or
sbb
imul
xchg
cmp
sbb
cmp
pop
ins
cmps
or
movs
add
leave
xchg
sub
mov
in
cmp
pop
movs
call
xchg
sub
sti
mov
or
and
nop
inc
test
loop
push
and
clc
clc
cmp
inc
mov
sub
inc
or
jmp
push
push
and
(bad)
push
xor
inc
popf
or
add
mov
in
jns
inc
enter
sbb
ret
add
inc
stos
data16
mov
and
loope
or
adc
movs
mov
mov
cmp
xchg
test
scas
add
loopne
or
xchg
and
test
adc
fs
mov
mov
cdq
cmp
add
jnp
add
fistp
and
adc
pop
push
or
nop
xchg
sbb
into
cmp
dec
ffreep
add
add
pop
sbb
dec
or
xor
nop
inc
enter
add
and
xor
xchg
jle
jo
push
scas
stos
xor
dec
jb
push
scas
lods
pop
ret
push
daa
mov
mov
inc
xlat
ins
ss
mov
mov
mov
mov
jl
pop
push
cmps
lods
xchg
scas
pop
sti
or
scas
pop
jge
push
into
in
idiv
mov
pop
add
pop
fild
in
add
add
or
mov
pop
pop
or
outs
dec
adc
je
adc
push
(bad)
mov
add
adc
add
or
push
add
and
sbb
je
outs
or
sahf
inc
or
movs
or
adc
xor
adc
jbe
mov
mov
mov
jmp
jo
jge
add
sbb
imul
adc
cmp
hlt
push
mov
cdq
inc
push
add
adc
movs
xchg
pop
pop
ret
xor
movs
movs
and
mov
sub
and
xchg
and
mov
xor
shr
test
add
icebp
cld
mov
and
imul
adc
mov
xor
mov
imul
sti
lea
add
hlt
leave
xor
push
xor
ins
cmp
and
adc
enter
adc
push
mov
stos
sbb
xor
cmp
or
in
sub
mov
cmp
stos
call
mov
adc
inc
out
mov
jmp
ret
jbe
xchg
xchg
sub
cmps
rol
lods
(bad)
(bad)
cli
mov
adc
or
mov
dec
add
fimul
inc
loopne
loop
and
xor
add
or
adc
push
sar
imul
sub
retf
add
add
out
in
cwde
xchg
xchg
retf
hlt
adc
sar
jcxz
sub
jo
leave
cmps
or
jbe
xor
mov
dec
(bad)
rcr
rcl
add
inc
adc
out
mov
or
retf
add
cmp
mov
je
repnz
adc
hlt
icebp
ret
aaa
sbb
inc
test
iret
in
push
adc
add
mov
pop
mov
rcl
bound
stos
es
jne
lock
rcl
adc
fldcw
adc
add
sar
sar
sbb
or
jnp
cld
or
add
nop
mov
jne
les
xchg
push
jne
jne
fisub
iret
mov
jne
inc
pop
dec
jb
out
add
mov
pop
mov
add
mov
neg
inc
jmp
movs
scas
and
mov
clc
inc
inc
mov
in
sub
dec
aad
inc
lods
inc
sub
mov
pop
repnz
test
push
or
(bad)
les
fisubr
adc
stos
adc
push
sub
xor
lods
inc
repz
add
add
sbb
and
jg
or
jmp
add
sti
pushf
les
adc
sbb
and
mov
add
loopne
mov
jg
xchg
add
push
add
sub
enter
sub
test
add
mov
xor
xor
add
sub
lahf
add
inc
ja
les
sub
test
mov
outs
cdq
call
dec
pop
xor
or
and
add
adc
leave
add
cli
nop
inc
dec
icebp
(bad)
daa
jne
test
xchg
inc
das
scas
xor
nop
xchg
sti
pop
hlt
shl
pop
mov
aad
push
test
or
adc
cmps
mov
ret
pop
ret
adc
nop
push
and
jecxz
clc
cmp
aad
loope
push
scas
add
pop
push
cmps
nop
dec
add
mov
inc
pop
loopne
push
les
imul
arpl
mov
push
stc
ja
add
dec
or
push
push
xor
icebp
add
mov
clc
call
cs
lods
or
push
xchg
clc
sahf
out
jbe
out
ret
or
sbb
add
mov
or
pop
push
and
or
or
nop
mov
push
popf
mov
pushf
out
ficomp
sub
mov
fld
sbb
mov
adc
popa
sbb
or
mov
or
leave
imul
jne
adc
mov
sub
add
sbb
adc
retf
inc
push
(bad)
ret
cmp
and
enter
xor
jge
push
push
or
ins
repnz
fnstcw
mov
out
fwait
push
fdiv
xchg
sbb
sar
hlt
mov
lea
pop
push
sbb
pop
mov
je
dec
loopne
xchg
repnz
ror
jmp
or
repnz
ret
arpl
add
or
dec
ror
cli
enter
ss
jge
enter
popf
or
mov
or
rcl
into
sar
pop
adc
push
adc
mov
inc
popa
les
inc
popa
jl
pop
add
push
add
cmp
in
leave
lds
fmul
xor
lahf
movs
pop
vsqrtss
mov
jmp
adc
ror
imul
sub
test
push
xchg
mov
and
or
in
cmp
cmp
in
dec
pusha
jno
push
sub
and
imul
jle
adc
popa
das
loopne
mov
xchg
add
iretw
das
fadd
push
arpl
and
dec
pop
xchg
mov
and
mov
inc
ins
xor
sub
int
cmps
scas
movs
push
dec
sub
add
in
mov
fidiv
rol
scas
push
adc
(bad)
mov
in
adc
mov
adc
push
aam
jmp
or
xor
pop
mov
sub
outs
popa
or
or
fcom
push
int3
cmp
fiadd
or
cmps
inc
mov
in
popa
jl
or
push
pop
enter
mov
and
cmp
adc
test
les
lahf
(bad)
aad
add
or
add
mov
cmp
dec
mov
ss
add
pop
cmp
in
repz
retf
adc
mov
(bad)
pop
dec
je
icebp
mov
mov
jb
sbb
call
mov
loopne
add
inc
add
inc
cwde
clc
and
or
jecxz
ret
imul
jmp
cmp
aam
adc
xchg
les
cmp
daa
je
mov
push
fcom
sub
sbb
and
test
out
pop
mov
jmp
add
jb
fwait
dec
mov
add
dec
nop
loop
or
push
jnp
push
cmp
jp
cmp
xor
and
add
add
mov
rcl
adc
push
push
sub
jbe
xchg
or
jne
sbb
jmp
and
push
mov
test
dec
push
sbb
add
sti
add
jle
sub
xor
mov
sbb
push
mov
nop
cmp
mov
shr
adc
pop
xor
(bad)
(bad)
jnp
pop
dec
mov
ret
adc
mov
les
inc
jmp
push
or
ror
fcomi
and
gs
jne
mov
bound
cmp
pshufw
xor
lock
and
lahf
icebp
push
rol
les
inc
hlt
movs
add
imul
add
sbb
xor
imul
es
or
mov
ret
or
mov
cmp
nop
pusha
dec
hlt
inc
jecxz
daa
xor
aam
push
ret
dec
lds
lds
push
inc
jb
and
inc
mov
enter
lock
sbb
fisttp
xchg
nop
cmp
sbb
adc
jge
xchg
es
push
add
ret
out
sub
jo
jmp
xor
mov
mov
xor
es
pop
cmp
mov
jmp
add
adc
sbb
and
dec
mov
add
pop
lahf
and
(bad)
rol
out
xchg
sub
nop
outs
add
test
and
or
push
push
push
les
and
and
add
out
mov
cdq
jbe
mov
jbe
ret
sub
enter
in
adc
mov
mov
rol
dec
dec
and
ret
push
rol
daa
inc
inc
jl
js
or
pop
jg
aas
mov
jae
shl
jmp
xor
push
inc
mov
pop
jmp
sub
xchg
mov
adc
outs
inc
sub
add
and
les
and
fwait
pop
gs
repz
pshufw
adc
or
cmp
add
outs
inc
int3
or
dec
mov
repz
xchg
adc
pop
and
dec
xlat
push
pop
push
xor
inc
or
mov
pop
jb
mov
sub
push
dec
push
push
retf
push
enter
add
in
cdq
jmp
sub
mov
and
scas
inc
xor
mov
mov
(bad)
std
hlt
jmp
xchg
hlt
sub
adc
pop
and
and
or
adc
add
addr16
leave
xor
ss
inc
adc
xchg
mov
and
or
iret
mov
xchg
je
ret
sub
push
test
pop
(bad)
or
add
repnz
inc
hlt
cmp
and
sub
idiv
xor
(bad)
mov
les
xor
cmps
adc
xor
adc
loopne
test
lea
imul
mov
sub
inc
fmul
jmp
cdq
test
adc
int
sbb
fld
and
inc
adc
les
xor
lahf
jg
sbb
pusha
cwde
loopne
inc
lahf
cmp
xchg
xchg
push
xor
lahf
jmp
pop
sar
adc
and
loope
dec
push
sub
adc
jns
or
xlat
dec
sbb
inc
lahf
les
cmp
sub
lds
mov
leave
cmp
aas
or
dec
ret
dec
in
les
enter
adc
pop
mov
add
cmc
aaa
mov
mov
inc
aas
data16
mov
mov
xor
arpl
inc
adc
ins
inc
iret
mov
push
mov
mov
sub
shl
jmp
lods
or
add
add
outs
xchg
and
xor
addr16
(bad)
mov
push
lahf
add
or
cmp
cmp
mov
cs
sub
inc
inc
xchg
lea
xor
jmp
add
test
lods
and
lods
push
inc
popa
push
sahf
or
jg
lods
in
int3
int3
pop
xchg
daa
push
mov
or
enter
xchg
mov
int3
int3
lods
pop
popa
and
or
lock
bound
fnstsw
mov
xor
pop
pusha
or
inc
in
and
iret
inc
inc
imul
sub
cdq
lods
test
stos
jmp
add
jne
mov
adc
inc
xchg
(bad)
sub
cmps
nop
inc
cmps
and
pop
or
jne
arpl
cdq
push
xor
mov
pop
xor
lahf
sub
jno
mov
pushf
in
inc
jl
lock
popa
jl
dec
or
xor
xchg
jnp
js
push
xor
mov
cmp
call
aaa
sub
add
stos
call
adc
or
mov
jb
mov
push
cs
add
or
xchg
push
push
ret
pop
sbb
sub
retf
xor
add
pop
add
loope
cmp
fiadd
inc
sbb
dec
xchg
adc
or
dec
fldenv
fstp
and
ror
dec
or
inc
adc
mov
fdiv
fsubr
mov
dec
mov
sar
add
dec
cmp
dec
add
mov
in
imul
and
ss
mov
cdq
pop
mov
or
inc
loope
ror
push
jl
leave
js
jecxz
test
bound
mov
clc
cwde
inc
lds
xor
dec
adc
jg
push
add
add
pop
lahf
sbb
lea
xor
loop
sbb
test
(bad)
lea
fimul
inc
xchg
ror
adc
addr16
push
push
and
movs
jbe
pop
inc
imul
inc
jmp
mov
ss
dec
push
add
scas
test
or
loope
or
es
push
xchg
xor
loopne
jle
mov
pop
pop
mov
mov
retf
lahf
cmps
stos
test
fld
dec
imul
int3
inc
ss
int3
cmps
and
sbb
or
sbb
cmp
and
adc
mov
push
lds
jbe
mov
iret
int3
movs
inc
mov
mov
test
or
stos
sub
pop
rol
mov
int
adc
sahf
into
or
or
xchg
or
mov
push
xor
pop
xchg
adc
mov
ror
mov
call
jae
js
add
push
xor
aam
jb
pop
add
in
sub
inc
cmp
popa
jp
add
nop
jmp
fs
mov
sub
idiv
test
xlat
xor
push
call
add
dec
inc
shl
add
stos
into
add
(bad)
pop
mov
add
add
jp
or
jmp
fcomp
sti
or
test
sahf
dec
xchg
jp
cli
rcl
or
or
mov
sbb
mov
cld
sub
iret
adc
or
ds
xchg
mov
les
push
and
jo
push
adc
sub
mov
(bad)
retf
mov
xor
ret
or
adc
fist
and
pusha
out
mov
and
sbb
pop
mov
pusha
(bad)
js
data16
cmp
ja
loop
shl
repz
rol
mov
adc
into
inc
xor
mov
dec
and
hlt
sbb
mov
push
pop
xchg
xchg
sub
movs
icebp
in
mov
aas
push
adc
sub
in
cs
outs
xor
push
push
sub
push
mov
or
xor
movs
add
dec
sbb
dec
mov
dec
adc
stos
jne
push
shl
add
data16
cli
ins
and
pop
pop
std
push
aaa
mov
dec
and
inc
fadd
aas
jbe
loop
(bad)
mov
push
mov
outs
cdq
aam
sbb
ins
pusha
add
or
add
icebp
mov
dec
sbb
rcl
ss
adc
ja
inc
xchg
mov
add
sub
dec
adc
jo
xchg
ret
imul
or
mov
sub
mov
imul
add
retf
pop
xchg
mov
inc
add
add
jge
push
push
fcomp
aam
adc
sbb
fcomp
push
inc
jo
jl
add
mov
push
mov
jecxz
inc
dec
xor
out
cmp
ret
sub
adc
add
dec
movntps
sbb
dec
or
and
inc
aaa
and
add
jmp
pop
add
in
stos
mov
mov
arpl
mov
push
sbb
adc
add
mov
div
jb
div
pop
lock
or
mul
sbb
pop
mov
sub
adc
test
add
sbb
ficom
pop
and
lods
lea
pop
inc
fwait
sbb
in
sbb
test
push
ds
stos
xor
or
add
add
fdivr
add
add
vmovss
push
add
stos
xor
add
lods
test
ret
call
lods
sbb
cwde
sub
aad
sub
jmp
xchg
adc
inc
sbb
imul
cmp
inc
rcl
or
sbb
adc
in
ret
sub
ror
ss
inc
mov
xor
mov
add
mov
daa
(bad)
add
mov
(bad)
cmp
outs
sbb
cmp
fcomp
xchg
mov
not
(bad)
push
call
sbb
test
dec
arpl
in
shr
arpl
ret
test
enter
add
nop
pushf
mov
sbb
mov
or
add
mov
push
aam
mul
test
mov
clc
in
mov
and
add
loope
rcr
and
ffreep
cmp
push
mov
push
sbb
add
mov
lock
mov
or
and
push
xor
dec
xchg
dec
dec
add
cmp
add
adc
add
rol
xor
cs
mov
push
out
sbb
mov
sahf
pop
push
push
popf
adc
stc
dec
inc
stc
gs
dec
push
push
jbe
mov
inc
pop
cwde
ret
in
imul
int
or
xor
xchg
pop
and
and
jb
cmp
enter
xor
add
mov
sbb
xchg
cld
jo
mov
loopne
sbb
adc
xor
push
adc
loopne
sbb
repz
adc
and
daa
aaa
repz
mov
xchg
mov
sub
or
jmp
cmc
xor
loopne
cmp
sbb
mov
dec
or
inc
cld
jnp
rcr
or
and
rcr
dec
fnstsw
add
adc
mov
fimul
cmp
dec
push
sub
push
add
or
cli
retf
sbb
mov
mov
hlt
mov
dec
icebp
inc
add
js
pop
mov
ret
(bad)
mov
ret
loopne
loopne
or
or
je
mov
ret
xchg
adc
mov
ret
(bad)
fs
test
ret
push
shl
cli
pop
xchg
or
push
lock
dec
push
jmp
jmp
and
xor
mov
inc
in
or
mov
xor
out
cwde
pop
xor
jns
adc
in
pop
loopne
add
pusha
popa
add
ret
inc
dec
pop
sub
stc
xor
adc
cmp
cmps
popa
xchg
enter
push
adc
in
jmp
jmp
push
adc
xchg
jecxz
stos
or
mov
nop
push
jle
add
or
fisttp
sbb
shl
jmp
dec
cmp
pop
pop
xor
dec
adc
mov
push
push
or
mov
in
int
or
popa
add
add
je
lods
rol
sbb
mov
add
dec
cmp
add
dec
in
and
push
pop
jge
xchg
add
mov
sbb
jecxz
pop
add
mov
push
dec
rol
adc
add
push
in
pusha
test
inc
or
ret
pop
mov
out
inc
push
dec
ret
icebp
in
in
ret
adc
ret
dec
icebp
push
push
or
inc
xchg
and
test
inc
xchg
pop
or
xchg
ret
pop
pop
lock
pop
jb
pop
(bad)
es
fild
jne
adc
(bad)
sub
xlat
push
test
mov
retf
jmp
fadd
rcl
add
or
ins
pop
ret
pop
sub
das
sbb
rcl
addr16
and
sbb
adc
sbb
mov
icebp
loopne
retf
inc
clc
and
and
dec
loop
and
add
mov
sbb
pop
(bad)
adc
or
or
sub
adc
adc
test
pop
fisub
add
ins
add
adc
jo
add
aaa
ror
or
adc
or
cld
or
mov
push
mov
shl
cmp
jg
xchg
lock
mov
pop
add
sub
pop
mov
lds
push
adc
or
or
imul
loope
(bad)
xor
retf
or
xchg
add
dec
inc
pop
mov
jne
stos
sub
xchg
rol
jb
inc
add
bound
push
inc
inc
push
enter
call
add
outs
or
and
add
adc
ins
in
adc
add
dec
xlat
ficomp
rol
xor
mov
aam
push
add
sub
cmp
pusha
mov
adc
sub
cmp
imul
stos
push
xor
jmp
test
add
mov
xor
add
adc
and
pop
lea
adc
data16
add
or
or
imul
xchg
dec
js
hlt
add
add
dec
sbb
mov
in
in
sbb
add
pop
inc
clc
adc
push
push
imul
aad
mov
frstor
xchg
xchg
dec
fsubr
sbb
test
add
add
xlat
mov
repnz
fsubr
sbb
or
lea
sbb
fdivr
xor
mov
nop
aaa
repnz
xor
and
fdivrp
dec
add
sbb
add
xor
sub
sti
sub
xchg
ret
retf
jae
lahf
jne
ins
jmp
dec
adc
push
add
bound
dec
fst
or
test
dec
mov
dec
dec
fcom
dec
xchg
mov
mov
pop
mov
(bad)
or
adc
inc
xor
adc
and
leave
enter
sbb
ret
or
sbb
mov
adc
mov
sbb
sahf
std
(bad)
add
aas
add
xchg
jno
pop
dec
loop
(bad)
xor
dec
add
inc
jmp
sbb
pushf
dec
ds
jmp
int3
xor
inc
xor
or
or
and
pop
leave
or
and
ror
shl
sbb
sbb
adc
adc
cs
xchg
mov
dec
inc
or
and
add
rcr
push
sbb
push
and
jmp
in
push
or
cs
or
push
arpl
mov
push
jb
mov
pop
sbb
enter
pop
pop
mov
adc
adc
sbb
or
mov
mov
jecxz
add
add
and
(bad)
hlt
jmp
dec
add
xchg
mov
mov
jbe
add
dec
lock
sar
inc
hlt
sbb
int3
movs
test
fwait
ins
jns
push
movs
add
add
push
push
sahf
out
sahf
jle
adc
push
and
sahf
jg
dec
xor
sahf
out
fld
push
xor
mov
push
ja
mov
jo
out
push
dec
pop
pop
mov
cdq
add
lock
push
push
mov
mov
inc
stos
pop
sbb
pop
dec
sub
mov
mov
add
pop
and
popa
movs
imul
and
cmp
fstp
xchg
popf
aad
inc
push
rol
pop
jmp
out
xor
dec
add
lock
xor
pusha
dec
loopne
sbb
add
add
add
mov
(bad)
(bad)
sub
jl
mov
fistp
mov
xchg
and
cmp
sub
(bad)
add
imul
sbb
imul
femms
bound
or
aam
pop
jno
adc
js
adc
out
ins
add
fs
cld
mov
loopne
in
jmp
loop
add
ret
and
in
inc
sbb
inc
and
or
sub
or
xlat
adc
loopne
sti
xchg
rol
pop
js
push
lods
imul
pop
dec
les
jmp
fbld
idiv
or
push
enter
push
mov
and
adc
pop
imul
aad
mov
or
pop
(bad)
xchg
add
pop
lods
mov
adc
pop
in
inc
pop
in
push
(bad)
push
mov
and
adc
fcmovb
push
pusha
stos
es
enter
aad
outs
fwait
pop
call
js
jo
and
add
cld
mul
dec
and
pop
sub
and
dec
push
inc
cwde
add
iret
mov
sbb
fs
jne
dec
adc
call
test
mov
dec
loopne
(bad)
sbb
dec
jne
add
lods
jge
push
popf
xor
add
aas
loopne
add
push
xchg
je
test
or
aam
cmp
mov
push
push
dec
sbb
icebp
loopne
ficom
arpl
call
mov
dec
add
push
mov
xor
(bad)
mov
inc
mov
ins
or
gs
xor
mov
add
sbb
cmp
mov
mov
bound
push
rcl
push
pushf
xor
sbb
ror
xor
xor
push
(bad)
xchg
imul
sbb
push
ds
and
jecxz
add
xor
movs
ds
xor
mov
movq
or
std
jle
jb
and
sbb
sar
je
push
add
cs
adc
dec
sub
in
push
adc
or
in
jmp
in
dec
stos
push
cdq
mov
adc
sub
push
gs
in
mov
cmp
cmp
and
enter
and
adc
(bad)
xor
std
mov
or
pop
inc
mov
or
cwde
in
pop
scas
inc
pop
leave
push
int3
push
adc
icebp
or
test
sub
sbb
mov
inc
jb
xchg
or
fs
cmps
or
test
das
dec
inc
jge
sbb
fadd
sbb
add
and
push
add
mov
mov
add
sbb
mov
cmp
rcl
inc
or
push
clc
push
adc
test
add
pushf
cmc
out
ret
lahf
add
xchg
loopne
mov
fsubr
(bad)
sbb
mov
popa
and
xchg
out
pop
mov
fsubr
fcom
or
mov
aam
dec
call
movs
aas
shr
adc
shl
adc
push
add
or
push
sar
ins
les
ret
sub
sbb
push
ror
ret
or
push
repnz
loopne
jae
adc
in
cmp
mov
in
cld
cmps
mov
fstp
ja
aaa
mov
mov
mov
xchg
xchg
test
sbb
repnz
mov
out
mov
cs
out
out
out
out
sub
mov
sub
push
xor
push
pushf
loopne
push
push
(bad)
push
(bad)
lock
mov
cld
push
aam
call
adc
or
pop
cwde
fsub
cwde
es
std
push
jmp
xchg
push
and
push
dec
dec
lea
in
or
aas
test
popf
mov
test
push
in
arpl
cmp
cmp
sub
pop
pop
nop
fmul
mov
enter
ss
por
cmps
dec
loopne
cmp
adc
or
jae
shld
shl
call
or
push
ret
(bad)
jl
pop
jbe
aas
lods
rcl
jmp
aas
call
test
inc
and
or
cmp
add
add
fstp
or
je
mov
es
ss
sbb
cs
adc
sbb
and
add
add
call
jmp
mov
xor
jmp
(bad)
jmp
sbb
add
dec
mov
and
movs
out
shl
cmp
ficom
push
jbe
dec
cmp
loope
dec
mov
push
fiadd
inc
mov
loop
lock
inc
mov
mov
ins
add
sbb
or
and
jle
test
sub
inc
and
and
sbb
inc
repz
bound
xor
or
leave
push
xlat
leave
adc
mov
and
xor
cmp
mov
lahf
dec
imul
add
iret
lods
add
push
fistp
(bad)
popa
adc
mov
je
imul
stos
and
(bad)
mov
shr
mov
fld
ret
mov
pop
pop
pusha
adc
js
add
add
fist
leave
imul
out
retf
ret
add
gs
popf
add
ins
mov
or
push
pop
pop
dec
sar
xor
jno
cld
adc
es
adc
and
dec
adc
push
lea
outs
push
jns
jmp
inc
mov
jmp
xor
sbb
outs
pop
add
cmp
clc
call
fstp
adc
cmp
pop
adc
js
lea
arpl
or
adc
imul
push
aad
leave
push
push
pop
outs
cmp
jmp
imul
or
(bad)
jmp
adc
(bad)
push
pop
mov
fadd
cmp
mov
lea
xor
dec
push
push
(bad)
cmps
or
or
pop
inc
jge
adc
mov
je
mov
out
fadd
popf
xchg
loope
inc
and
scas
push
mov
(bad)
int3
push
jae
add
push
dec
ins
mov
sub
add
arpl
or
cmp
add
lock
push
scas
jl
imul
mov
jge
or
dec
scas
or
jmp
inc
fs
scas
popa
ins
and
jp
xchg
adc
sbb
add
ror
pop
outs
push
inc
mov
ss
adc
cmp
inc
push
fsubr
imul
imul
call
add
or
inc
mov
aaa
add
loope
push
adc
pusha
lods
test
pop
inc
sar
test
mov
cld
xchg
pusha
adc
or
inc
lock
sahf
jno
jmp
xor
inc
inc
add
add
and
push
push
mov
aad
add
rcr
fdiv
add
xor
fmul
mov
pop
or
sbb
pop
push
mov
mov
or
add
mov
jl
ret
jae
dec
(bad)
dec
sbb
push
mov
and
sub
retf
or
inc
pop
pop
push
push
(bad)
push
mov
or
cs
sbb
cmc
sbb
pop
fld
push
sbb
nop
sbb
pusha
(bad)
mov
sbb
sbb
mov
rol
call
mov
sbb
xor
imul
inc
add
(bad)
mov
or
(bad)
loopne
js
push
fisttp
push
fist
scas
or
(bad)
daa
adc
mov
adc
(bad)
adc
jne
or
sub
add
or
rcl
or
add
and
aas
sub
add
cmp
push
sub
jecxz
push
push
xor
xchg
mov
pminub
add
adc
fwait
inc
adc
bsf
lods
cmp
inc
add
call
cmp
adc
lods
add
sbb
add
or
sub
aas
add
or
and
xchg
stc
ret
out
sub
add
leave
and
sub
mov
xor
push
push
push
xchg
loopne
arpl
adc
xchg
add
stc
jo
inc
test
sub
pop
cmps
cmp
retf
inc
jmp
les
jne
or
push
int3
loope
xchg
inc
adc
mov
fistp
jecxz
clc
sbb
enter
add
adc
mov
mov
xchg
adc
push
and
jecxz
repnz
test
ret
fcomp
cmp
adc
dec
add
mov
xor
and
shr
and
or
jmp
inc
aad
sbb
add
js
das
mov
in
fdivr
and
or
push
fadd
push
mov
fnstenv
add
xchg
push
adc
xlat
pop
cmp
cwde
sub
or
mov
sub
mov
popa
push
xchg
ret
test
dec
sbb
dec
test
(bad)
and
loope
jmp
mov
inc
or
jge
inc
add
adc
aas
inc
in
sub
inc
mov
jb
push
push
inc
add
add
add
je
clc
sub
push
cmp
push
dec
xor
push
jmp
sub
pusha
add
sar
push
push
add
add
adc
adc
adc
adc
mov
rol
sub
int3
jns
aas
and
aaa
sub
add
mov
add
enter
dec
cs
cmp
cmp
sbb
mov
and
out
ds
add
or
or
std
pop
xor
mov
jge
popa
je
or
lds
push
or
jbe
(bad)
xor
add
jmp
adc
adc
ror
push
pusha
or
push
or
mov
mov
aam
or
inc
push
mov
add
stc
cdq
dec
add
loope
stc
clc
inc
or
or
mov
stos
add
popa
inc
fistp
fs
cmp
mov
lahf
pop
pop
add
out
or
mov
popa
loope
jmp
dec
loopne
fistp
sub
xchg
xchg
je
fmul
mov
fisttp
adc
fist
fisub
test
mov
mov
dec
test
dec
jmp
mov
cmc
fsubr
xor
adc
sti
or
push
mov
push
add
stc
outs
fucomi
jmp
mov
dec
pop
(bad)
mov
inc
pop
xor
mov
inc
jmp
adc
and
or
jns
jg
js
cmp
or
and
pop
iret
jae
cmp
mov
mov
int
add
cmps
cmp
add
add
add
jg
push
pop
push
cmp
aam
and
or
mov
in
add
aas
inc
jb
or
add
mov
ret
mov
push
jo
jg
inc
add
push
push
into
add
or
push
in
or
sbb
sbb
leave
add
add
xchg
sbb
xor
mov
mov
mov
test
frstor
rcr
and
lods
sbb
jmp
push
(bad)
in
das
fadd
push
mov
jno
mov
adc
sub
dec
das
adc
loopne
mov
inc
lds
or
les
adc
xor
stos
js
test
add
popf
push
push
popf
sbb
popf
jnp
test
sub
leave
sbb
jmp
ret
xchg
mov
or
cmp
dec
leave
and
ror
add
inc
lods
push
xchg
rol
add
pop
push
je
repz
lock
dec
movzx
cmp
and
push
push
cmp
add
or
bound
mov
ret
cmc
add
dec
(bad)
mov
mov
xchg
sbb
test
sbb
stos
ss
test
ret
loop
push
scas
xchg
inc
aad
push
push
add
mov
aad
dec
push
bound
aas
mov
inc
xchg
and
je
outs
adc
fild
xor
inc
pop
ret
cmp
lahf
loopne
std
es
jle
mov
scas
sbb
dec
inc
jne
sti
xor
aas
(bad)
hlt
push
dec
call
sub
mov
push
cwde
arpl
xor
icebp
jnp
loopne
loope
sbb
add
test
and
mov
mov
or
push
or
jmp
push
ret
sub
pop
and
pop
int
push
mov
cli
adc
or
jbe
and
and
add
push
test
jno
xchg
add
shl
sar
hlt
gs
sub
add
inc
adc
mov
leave
push
cmp
adc
jno
or
in
sbb
cmp
lods
punpcklbw
jae
cmp
ret
or
add
sub
add
mov
in
dec
cs
repnz
lea
sub
pop
push
dec
nop
lahf
add
mov
aas
imul
jge
cmps
jno
jecxz
cs
mov
push
cmps
lock
repnz
dec
in
into
pop
push
xor
mov
push
in
mov
mov
sub
fbld
nop
push
(bad)
jns
xchg
pop
hlt
aaa
jns
xor
shr
jno
and
cld
and
sbb
adc
cmp
sbb
mov
mov
or
fldcw
dec
inc
sbb
iret
popa
jne
cwde
jno
sar
fst
mov
adc
gs
or
repnz
into
pop
push
pop
ja
(bad)
scas
cdq
(bad)
xchg
add
scas
je
loopne
mov
rcl
add
push
and
bound
jmp
clc
mov
or
push
cmp
gs
mov
adc
push
sub
push
loope
or
xchg
in
scas
lods
sti
mov
inc
mov
sti
jo
push
push
das
lock
popf
dec
mov
retf
stos
add
lock
test
leave
int3
add
mov
or
scas
aas
inc
dec
pop
call
xor
sti
ror
jle
and
mov
xchg
pop
sub
push
pop
enter
push
or
xor
push
or
shr
lock
inc
cwde
inc
xor
rcr
pop
sbb
xchg
pop
scas
mov
or
ret
mov
dec
enter
ror
lock
sub
jmp
add
rcr
cdq
shl
inc
push
outs
js
and
or
ffree
inc
mov
sub
adc
outs
push
pushf
mov
push
iret
jg
sbb
popa
sbb
popf
cmp
cmc
inc
fcom
jg
or
add
mov
sub
cmp
and
mov
ins
and
aaa
mov
inc
mov
mov
sbb
push
cmp
cmp
pop
out
push
or
push
jecxz
aas
push
loope
fmul
not
mov
in
cmp
icebp
sub
adc
fdivr
inc
rcr
repz
mov
pop
add
cmova
push
xchg
fistp
mov
inc
inc
cmp
cmp
inc
sub
add
sbb
pop
clc
or
and
cmp
and
(bad)
fild
ja
rcr
outs
in
gs
xchg
dec
push
sbb
enter
loopne
inc
scas
nop
inc
mov
mov
ret
push
test
ret
rcpps
xor
push
das
inc
aas
loopne
cdq
jnp
sbb
(bad)
adc
fist
jecxz
out
add
daa
lods
cmp
sbb
pop
sbb
xor
je
in
xchg
lea
mov
ja
push
add
inc
or
sahf
dec
clc
pop
aaa
add
ja
cmp
es
cmp
or
adc
es
lea
mov
sbb
and
push
gs
cdq
sub
xor
adc
xor
or
sub
adc
jo
rol
fnsetpm(287
xor
sbb
or
ds
pop
or
push
out
pop
sub
scas
jmp
shr
pop
fmul
fcmove
loopne
xchg
xchg
out
loope
ja
(bad)
cmp
mov
ror
push
dec
xor
nop
adc
inc
lock
test
imul
das
cmp
lock
clc
repz
and
push
dec
mov
mov
inc
mov
and
sub
add
dec
addr16
das
in
inc
or
ret
test
js
jmp
jmp
push
adc
push
add
pop
dec
je
pop
enter
mov
jg
adc
push
jb
mov
(bad)
push
test
(bad)
dec
rol
mov
pop
cdq
dec
sub
int3
and
and
push
stos
or
push
push
(bad)
jle
push
adc
js
imul
add
(bad)
(bad)
frstor
add
xchg
sbb
push
(bad)
push
mov
sub
pop
or
mov
pusha
inc
xor
sbb
fistp
cmp
and
bound
(bad)
cmc
and
or
sbb
mov
or
jae
andnps
fmul
add
mov
test
ins
jo
jbe
xchg
jnp
inc
repnz
mov
add
xor
loop
xchg
mov
inc
jns
pop
push
or
out
or
sbb
sub
or
(bad)
mov
or
mov
scas
enter
adc
cmp
mov
and
outs
sub
and
mov
mov
ins
or
mov
jno
sub
enter
in
test
neg
mov
mov
and
or
xchg
inc
mov
(bad)
push
or
test
jmp
add
add
bound
cmp
in
adc
add
test
or
add
clc
sbb
aam
in
push
pop
cmp
(bad)
or
out
dec
xchg
test
loopne
xchg
fisttp
adc
lea
gs
pop
xor
adc
push
lea
imul
pusha
mov
fstp
rol
add
cdq
mov
add
add
push
xchg
add
bound
add
test
outs
pushf
add
ret
aaa
aaa
adc
lea
adc
test
(bad)
xchg
jl
out
das
repz
nop
add
mov
pop
test
cmp
or
add
pop
stos
sub
sbb
sub
or
and
or
mov
add
add
out
add
(bad)
adc
sar
xor
js
add
push
mov
add
mov
add
sub
or
cmp
(bad)
sti
and
cld
xchg
lea
mov
inc
aad
push
retf
ret
or
pop
sub
add
shl
cmp
outs
cmps
and
or
mov
sbb
pop
or
add
pusha
repz
inc
iret
jmp
mov
enter
(bad)
call
push
mov
sub
jo
dec
cmp
nop
imul
das
pop
add
mov
imul
hlt
and
adc
adc
push
add
jg
jno
cli
or
outs
fadd
jecxz
sub
mov
and
mov
loope
cmp
rcr
pop
(bad)
je
ror
dec
gs
inc
add
les
mov
movsx
mov
ins
loopne
inc
stc
add
aas
mov
fcmovnb
mov
jb
adc
jo
pusha
or
in
pop
adc
or
push
push
inc
das
jmp
add
add
jbe
or
ret
push
jbe
push
pushf
pop
xor
or
or
sub
js
xor
jg
(bad)
std
sub
and
ss
and
mov
leave
pop
enter
loope
and
test
mov
adc
loopne
dec
and
xlat
ss
stc
movs
and
mov
mov
aaa
sar
ret
xor
call
mov
sub
sub
test
mov
add
add
add
lea
xchg
out
retf
sub
ret
adc
std
cld
mov
pop
(bad)
add
aas
dec
fwait
pop
jno
xor
xchg
inc
xor
mov
fistp
iret
dec
adc
adc
call
push
dec
jne
dec
jge
add
mov
or
into
int
sub
cld
jnp
fs
jge
or
cmp
fwait
sbb
mov
sub
cmovns
jecxz
cld
add
in
mov
data16
sbb
and
adc
inc
and
cmc
popa
or
push
neg
loop
sar
inc
ret
test
push
xor
and
cwde
inc
fadd
pop
frstor
fsub
outs
mov
outs
sbb
push
xchg
inc
add
dec
pusha
call
aaa
in
sub
cs
or
or
ja
ja
hlt
xor
sub
push
(bad)
retf
loopne
push
mov
xchg
test
mov
sbb
shl
shr
xor
xchg
movs
arpl
rol
pushw
sub
push
inc
nop
pop
mul
arpl
jmp
rol
fist
mov
jmp
and
add
add
xor
out
in
sub
or
push
push
adc
mov
add
jmp
add
inc
sbb
xchg
nop
push
push
jno
test
xchg
leave
in
popa
xchg
add
push
mov
pop
mov
fnsave
mov
rcl
add
ror
push
retf
mov
rol
add
popa
and
test
mov
dec
sub
or
ret
dec
ins
test
mov
mov
pop
sub
dec
int
mov
nop
fsub
jle
pop
aam
cmp
xor
jno
popa
fsubr
and
mov
add
mov
mov
mov
les
out
push
push
ror
inc
sbb
pop
cmp
fnstcw
jmp
out
sub
addr16
xor
jp
and
(bad)
push
and
test
and
or
xchg
dec
out
ror
shl
pop
loopne
loopne
sub
cmp
adc
jmp
sbb
adc
fbstp
add
add
inc
mov
jne
jns
inc
add
jne
inc
add
or
inc
pop
xor
add
or
and
hlt
push
xor
popa
fs
sbb
fiadd
xchg
aas
xchg
mov
pop
push
imul
bound
add
and
push
or
int3
push
xor
jl
push
shr
cdq
ret
in
aad
mov
lock
sub
mov
or
cmp
xchg
or
push
lahf
dec
sub
outs
adc
xor
mov
xor
mov
inc
loope
dec
push
fistp
xlat
test
sti
xchg
in
lods
pop
add
push
and
push
sbb
sub
mov
icebp
mov
dec
or
sub
sar
mov
inc
add
sub
push
mov
rcl
mov
ja
cmp
loopne
mov
or
adc
shl
js
clc
adc
jae
inc
xchg
push
cmp
iret
enter
push
push
idiv
push
sbb
outs
aaa
std
mov
test
or
inc
add
es
js
inc
jg
mov
icebp
loope
fstp
add
inc
and
shl
mov
add
push
add
xchg
nop
jmp
(bad)
dec
jle
mov
sbb
call
stos
cmp
xchg
push
inc
xor
dec
mov
push
enter
ins
or
call
fld
push
push
dec
mov
ror
pop
push
loopne
aam
lea
or
dec
mov
push
(bad)
shr
sub
or
mov
mov
add
scas
in
lahf
pop
push
xor
dec
inc
inc
aas
fwait
sub
lods
sbb
adc
mov
cmp
add
sub
enter
nop
(bad)
in
sbb
loope
push
stos
and
int3
inc
add
adc
dec
and
and
mov
inc
inc
push
ror
push
add
movs
and
cmp
push
hlt
adc
sbb
rol
inc
in
je
(bad)
or
xor
adc
aas
ja
sbb
std
or
push
mov
mov
cmps
loope
aas
mov
mov
daa
or
mov
es
fild
xchg
add
add
add
adc
pop
ror
je
mov
imul
mov
mov
mov
loop
popa
push
jmp
mov
loope
cmp
jo
push
pusha
pop
add
adc
mov
lahf
xor
mov
cmp
pop
xchg
mov
and
or
push
cwde
add
xlat
bound
mov
push
xchg
push
jecxz
dec
popa
mov
scas
push
aad
(bad)
popa
(bad)
jmp
sar
inc
sbb
mov
scas
aam
loopne
je
sbb
add
inc
aam
inc
xchg
loopne
fbld
int
sub
mov
inc
aam
jnp
jp
lock
add
movs
fidiv
jl
dec
mov
dec
pop
mov
in
jl
push
stc
into
and
xchg
mov
loopne
or
sbb
daa
shl
jb
dec
sbb
test
push
mov
inc
mov
mov
pop
push
data16
ss
sbb
scas
sar
mov
jb
sub
xor
loopne
cmp
daa
daa
lea
jo
stc
or
jmp
mov
outs
jmp
out
mov
in
std
mov
add
aaa
xchg
or
xchg
dec
cs
rol
mov
sbb
mov
mov
push
cmp
sub
push
movs
and
push
cmp
and
pop
adc
icebp
add
stos
xor
pop
inc
clc
popa
and
pushf
bound
push
dec
repz
shl
or
test
repz
or
adc
repz
inc
dec
test
repz
loop
inc
push
aas
cmp
movs
rol
jg
movs
rcl
cmp
inc
add
or
jge
mov
mov
fcmovb
inc
fs
dec
mov
and
or
jmp
or
fbld
push
cmp
pop
push
or
mov
dec
mov
adc
dec
(bad)
mov
popa
mov
test
sbb
mov
sbb
pop
fwait
or
adc
dec
call
xchg
adc
cmp
push
js
dec
cmp
or
(bad)
pusha
ja
xchg
imul
mov
or
adc
adc
movs
sbb
bound
or
add
push
add
fst
cmp
dec
sub
fwait
and
arpl
clc
adc
ror
repz
mov
sub
mul
inc
jg
and
mov
dec
imul
or
add
lds
xor
mov
push
push
shl
inc
add
cs
loopne
ss
pop
sbb
dec
inc
clc
and
pop
pop
les
pop
mov
fmul
dec
rol
or
jo
ret
adc
dec
int
and
add
mov
pop
push
add
sbb
movs
arpl
or
xor
mov
aam
xchg
dec
and
fadd
lods
cmp
add
popf
ins
push
movs
adc
xor
mov
dec
cmp
(bad)
fnstenv
ins
dec
cld
retf
inc
xchg
rol
repnz
lods
push
add
sub
shl
and
call
add
dec
push
xchg
add
mov
mov
and
pusha
cwde
sub
sub
and
and
mov
cmp
push
add
shr
dec
sbb
sbb
fnstsw
das
dec
dec
jmp
pop
loopne
adc
sbb
and
lea
push
mov
push
push
adc
pop
ror
imul
outs
mov
les
and
retf
and
ss
adc
mov
jp
lea
lea
add
dec
test
or
adc
in
fistp
push
aam
cld
jmp
sbb
mov
inc
add
dec
out
add
xor
or
jne
test
inc
cmp
aaa
inc
push
pop
jne
mov
and
or
mov
(bad)
fcomp
cmps
add
mov
daa
sbb
sbb
adc
fist
daa
jecxz
adc
push
fst
and
cvttps2pi
test
scas
dec
mov
ins
retf
ja
dec
inc
sbb
(bad)
jmp
ret
(bad)
and
jb
loopne
pop
cmp
mov
push
add
and
repz
or
or
int3
cmp
adc
inc
adc
scas
jb
pop
ss
clc
js
shl
adc
and
dec
sti
push
test
jae
icebp
ins
dec
ret
push
mov
mov
xor
lea
adc
test
mov
add
add
js
cmp
ror
adc
add
mov
aaa
(bad)
das
or
push
add
push
sub
push
jae
les
aas
sbb
push
cmps
lds
push
cmps
mov
cdq
sbb
adc
dec
push
dec
or
movs
lea
xor
mov
arpl
dec
push
arpl
xchg
push
push
push
aas
loopne
xchg
lock
gs
add
jo
xchg
in
jmp
and
sbb
je
add
mov
add
aaa
dec
lods
inc
add
add
test
add
jo
jg
add
pop
xchg
sub
pop
(bad)
inc
and
push
adc
test
adc
ja
dec
and
ins
sub
adc
movs
sub
daa
push
add
push
or
and
or
add
and
pop
lahf
or
lea
jp
xor
or
push
xor
dec
movs
add
es
mov
push
and
adc
(bad)
(bad)
jmp
mov
jo
mov
ret
hlt
call
neg
jecxz
sub
inc
push
cmp
jecxz
add
add
mov
aaa
add
mov
inc
or
adc
mov
xor
pop
mov
test
inc
rol
xor
inc
dec
fidiv
addr16
arpl
clc
(bad)
cld
mov
dec
xchg
gs
sub
(bad)
inc
cmp
(bad)
ret
and
fimul
xchg
pop
pop
popa
lea
sti
sahf
cmp
jne
cmp
shl
xor
or
test
adc
aam
shl
pop
sub
ror
pop
enter
add
sbb
out
sbb
pop
test
xchg
dec
sub
xchg
rol
loop
call
sbb
jl
daa
mov
ja
add
mov
adc
push
mov
fnsave
lds
pop
out
fistp
or
and
inc
movsx
rol
mov
jmp
sbb
or
jmp
test
enter
or
sub
or
sub
xchg
outs
ret
dec
sar
jne
mov
call
add
test
inc
or
adc
or
test
sbb
fisttp
dec
out
test
push
jmp
(bad)
retf
repz
mul
mov
add
cmp
push
add
arpl
leave
xor
jne
sbb
push
aas
pusha
pop
pusha
(bad)
push
xor
push
test
xchg
and
sub
inc
xor
jge
inc
adc
je
mov
in
pop
push
int
xchg
add
and
sbb
sbb
push
sub
lock
in
or
sub
jge
inc
in
push
inc
cmp
push
xor
or
add
scas
rol
or
enter
push
nop
sub
lock
loopne
rol
inc
call
inc
add
mov
cmp
dec
lock
push
mov
or
(bad)
movd
push
inc
stos
pop
sti
dec
scas
dec
add
mov
call
cmp
xor
pop
xchg
jne
push
das
jno
inc
or
push
or
inc
or
and
lods
or
pushf
movs
pop
or
pop
test
sub
dec
mov
or
dec
lods
push
dec
jb
mov
in
mov
test
ss
fisub
(bad)
sub
inc
push
dec
or
adc
and
add
rcl
mov
je
jae
xor
pop
rol
scas
pop
lock
add
sbb
pop
ret
add
imul
retf
cmp
jne
cmp
mov
and
out
sbb
or
xor
mov
or
xor
rol
adc
ins
mov
vpmacsww
inc
or
mov
jae
inc
and
mov
jae
rcl
or
pusha
das
jmp
inc
mov
inc
push
dec
or
mov
std
pop
pop
cmp
adc
xchg
loopne
sahf
test
dec
unpcklps
mov
lods
mov
mov
loopne
push
lds
dec
test
test
sbb
add
mov
jmp
inc
outs
sbb
daa
mov
sbb
icebp
inc
call
xor
add
loop
data16
stc
add
pop
and
xor
sub
mov
xor
lock
lea
cmps
popf
inc
inc
lock
dec
adc
or
sbb
mov
and
fisub
mov
push
add
cld
cmp
sbb
scas
add
movs
adc
int3
mov
add
add
dec
test
clc
sub
adc
cs
nop
ds
dec
add
dec
and
or
mov
cwde
fcmovnbe
aad
ror
fld
daa
lock
sub
push
jne
or
and
jmp
push
lods
dec
int3
inc
push
sub
add
xchg
les
dec
(bad)
jne
cmp
jae
xchg
pop
mov
cs
es
mov
sub
mov
xor
add
popf
or
sahf
imul
dec
imul
or
pushf
loope
ds
icebp
mov
lea
jmp
pushf
adc
rol
or
dec
in
pop
xor
push
rol
or
jmp
dec
ror
add
sbb
sbb
mov
adc
add
push
hlt
test
aam
in
push
pop
neg
pop
pop
nop
mov
cmp
push
sub
aad
pop
inc
push
inc
push
sub
dec
call
jo
adc
mov
dec
adc
push
pop
and
les
test
test
jne
pop
pop
rcr
pusha
cmp
sbb
inc
cmp
add
xchg
sbb
inc
add
test
jne
add
xor
add
and
and
cmp
shr
jnp
or
dec
stos
es
(bad)
(bad)
mov
and
movs
(bad)
and
jb
jnp
arpl
push
pop
push
adc
jb
leave
aam
lea
popa
mov
pop
fild
movzx
nop
mov
mov
push
sub
ret
inc
out
push
and
(bad)
and
mov
rcr
inc
or
ds
lock
test
inc
jg
cmp
int
xchg
or
daa
les
or
xor
stos
ins
inc
inc
loop
clc
jne
adc
cmp
add
sbb
or
inc
cmp
xchg
sbb
xor
push
sub
push
dec
fs
sbb
inc
inc
rol
sbb
adc
or
mov
cmp
cs
xor
sbb
jbe
dec
jne
and
and
mov
xchg
dec
xor
sbb
cmp
xchg
or
or
or
sub
outs
sub
inc
lock
push
int3
dec
aad
nop
nop
and
inc
loopne
cmps
push
enter
sub
xor
imul
ret
push
shl
std
jns
pusha
inc
sbb
rcl
ss
mov
mov
jbe
mov
fisub
inc
loopne
push
call
cmp
and
add
or
or
jg
mov
add
retf
push
lea
fs
loopne
cmp
adc
aad
mov
dec
adc
inc
in
pop
add
dec
fcomp
sbb
ins
in
data16
adc
dec
pop
mov
jle
adc
fsub
shl
loopne
addr16
inc
add
into
test
push
sti
repz
sbb
or
(bad)
test
bound
es
pop
lods
push
pop
jbe
jo
movzx
lahf
ret
dec
mov
cmp
add
push
mov
push
int3
int
sub
jb
ror
mov
push
or
ja
packsswb
rol
sub
and
inc
(bad)
in
inc
add
rol
into
adc
sbb
adc
jo
(bad)
jne
in
cld
xchg
dec
mov
xor
and
xor
lea
pusha
pop
call
dec
add
loopne
push
aas
ror
inc
aas
dec
add
test
mov
jb
mov
data16
aad
pop
dec
jg
test
aam
jl
xchg
daa
cmp
dec
inc
loopne
sub
and
les
add
add
push
stos
les
cld
jmp
adc
or
mov
pop
or
push
adc
es
sbb
or
dec
(bad)
lock
push
popa
sub
sub
popf
xor
mov
dec
or
out
or
mov
mov
sbb
add
add
push
addr16
push
mov
xor
inc
(bad)
mov
retf
add
push
int
loopne
dec
sbb
or
jg
sub
push
push
or
mov
mov
adc
inc
add
je
pop
mov
add
inc
mov
ins
bound
jge
(bad)
leave
fld
into
xor
(bad)
cmovno
addr16
mov
add
and
inc
or
or
inc
add
fbld
adc
mov
push
jmp
jle
rcl
or
lahf
jecxz
mov
xor
inc
js
push
jle
or
inc
aas
add
dec
or
out
add
daa
and
push
sbb
sub
fmul
add
test
jle
push
aaa
mov
cmp
push
mov
add
adc
add
fs
sub
cs
out
dec
sub
push
mov
(bad)
push
jne
dec
leave
pop
mov
sbb
loope
xor
rcl
push
cmp
jmp
fstp
xchg
cmp
mov
ret
jg
pop
push
push
mov
ror
or
and
scas
les
outs
add
inc
xchg
adc
jae
movs
(bad)
mov
push
sbb
push
add
aam
dec
xchg
or
sub
(bad)
add
mov
or
mov
dec
int3
pop
inc
(bad)
aam
aas
cmp
mov
rol
clc
push
jp
xor
neg
daa
inc
daa
sbb
push
repz
mov
inc
call
nop
cmp
mov
mov
xor
aam
push
jp
in
repnz
imul
cmp
or
and
ins
stc
add
add
jp
mov
sahf
push
dec
xlat
adc
(bad)
mov
xchg
sub
dec
lea
(bad)
rcl
dec
sub
mov
push
adc
data16
mov
leave
jb
enter
cmp
jle
and
jg
adc
mov
retf
inc
shr
movs
std
adc
adc
mov
xchg
adc
pop
add
loopne
push
std
in
retf
icebp
and
ins
push
in
push
sbb
sbb
int3
jb
int3
pop
test
(bad)
push
das
jg
ret
sbb
outs
xor
fcomp
mov
loopne
or
mov
int
mov
dec
cmp
add
dec
jecxz
inc
cdq
stc
and
add
push
cld
cmp
xor
dec
pop
jne
jmp
adc
or
mov
adc
jno
push
dec
push
jnp
inc
or
xchg
adc
xchg
cwde
adc
addr16
xor
mov
movs
or
xor
dec
mov
and
pop
pop
pop
push
xor
sbb
sbb
sbb
jmp
movs
jno
popf
clc
cld
xchg
xor
hlt
add
inc
jno
shl
jle
mov
movs
sbb
in
js
adc
sbb
adc
mov
xchg
lock
jge
add
and
(bad)
adc
loopne
sbb
loopne
or
and
add
je
add
cmp
mov
dec
xchg
sub
inc
inc
sbb
retf
in
push
fsubr
pop
mov
das
sbb
mov
ja
and
or
fs
stos
xor
mov
imul
adc
add
or
dec
add
mov
push
sti
or
sub
dec
sbb
fnstcw
sar
jl
cmp
adc
inc
mov
jmp
inc
xchg
or
inc
imul
pushf
jmp
push
push
bound
push
sbb
(bad)
aas
lahf
mov
and
inc
ins
adc
mov
addr16
dec
lods
sub
cmp
xor
popa
or
scas
and
movs
push
rcl
gs
sub
sbb
or
add
sbb
inc
stos
dec
adc
push
scas
or
inc
fwait
dec
push
dec
inc
add
fs
pop
dec
xor
xor
or
xchg
and
add
xchg
jne
or
cmps
push
aad
adc
(bad)
push
or
cmp
adc
ins
pop
and
ret
clc
(bad)
fistp
inc
xchg
cs
rol
xor
hlt
fwait
imul
and
sub
add
push
and
dec
loopne
push
or
jmp
mov
lahf
sbb
dec
loop
pop
push
jne
les
mov
and
stos
cmp
and
add
fwait
xchg
add
adc
xchg
mov
inc
test
leave
mov
aas
arpl
mov
xchg
mov
clc
push
bound
push
push
mul
add
ins
or
mov
fimul
xor
call
inc
call
inc
ds
fldl2e
retf
out
in
aad
inc
jo
cmp
jmp
mov
sbb
imul
and
xchg
jbe
and
xchg
xchg
int3
int3
add
push
xor
inc
leave
push
mov
daa
sbb
or
and
sbb
sub
sbb
sbb
jge
sub
and
jle
fwait
dec
je
movs
xor
and
je
movs
mov
cmp
dec
mov
mov
dec
loope
lods
push
and
cmc
push
test
ret
xchg
sub
retf
je
mov
(bad)
dec
shr
push
mov
sub
data16
xor
adc
push
fneni(8087
dec
cmp
add
dec
sbb
or
mov
inc
ins
xor
(bad)
adc
or
fwait
xchg
mov
mov
lds
movs
or
add
arpl
dec
push
cmp
jne
sub
jle
pop
sbb
call
and
push
xor
popf
sbb
add
jno
(bad)
add
push
arpl
xchg
add
pop
pusha
push
pop
rcr
add
gs
jmp
adc
pop
or
fcom
xor
cmp
jl
sub
fs
and
adc
jg
jmp
mov
cmc
in
dec
sbb
clc
push
add
xchg
lock
cmp
xchg
xor
sbb
push
in
int
fadd
sub
push
shr
cmp
call
shr
call
test
sub
lds
and
and
cmp
or
(bad)
sub
ror
push
iret
push
pusha
or
nop
(bad)
mov
stos
jg
xchg
fs
ins
pop
xor
inc
mov
push
add
xchg
mov
lods
pop
call
shl
hlt
or
aam
pop
jno
lahf
loope
xor
jecxz
mov
inc
add
sub
es
adc
or
mov
add
adc
add
or
jge
cs
push
inc
mov
pop
inc
pop
rol
cmps
js
mov
inc
adc
push
loope
sbb
or
mov
test
or
or
jmp
sub
adc
rcl
popf
adc
dec
sbb
aam
test
or
sbb
sbb
add
sbb
mov
inc
push
push
mov
cmps
mov
enter
fidiv
jb
aaa
ret
inc
(bad)
xchg
retf
sbb
inc
or
pop
dec
cmp
cdq
sbb
adc
inc
clc
out
sub
js
inc
imul
sbb
push
test
test
shl
cld
push
int3
jnp
outs
aas
add
inc
js
ss
or
loopne
or
pusha
jmp
sbb
jnp
(bad)
out
xor
popf
dec
sbb
mov
pop
adc
jp
sbb
fldz
push
rcr
adc
xchg
add
test
test
imul
jle
mov
jmp
mov
mov
push
sub
test
xor
inc
and
mov
sub
or
(bad)
pop
xchg
mov
xor
cmc
sbb
push
push
cmp
ret
movs
adc
shr
pusha
clc
movs
test
idiv
adc
push
inc
push
ret
mov
loope
and
inc
xor
xor
or
scas
push
mov
les
dec
and
dec
jp
mov
movs
jo
aad
dec
or
sbb
or
mov
add
and
cld
adc
sub
enter
adc
and
mov
xrelease
cmps
cld
pop
fwait
dec
movs
push
mov
jb
lods
and
stos
lods
add
adc
sbb
push
adc
cmp
in
sbb
sbb
jns
inc
adc
jns
jmp
sbb
or
(bad)
sbb
ja
shl
pop
dec
rcr
loopne
add
arpl
xlat
in
mov
(bad)
bound
test
div
je
test
ffree
jo
jo
retf
mov
mov
test
ins
ins
adc
or
mov
mul
pop
aaa
dec
sub
push
jo
xchg
pusha
sub
add
mov
daa
ja
or
or
fsubr
add
cmp
loopne
mov
push
push
mov
hlt
cmps
movs
les
jg
jl
dec
jg
push
inc
push
(bad)
jmp
fnop
lods
mov
mov
jbe
dec
add
sahf
mov
mov
mov
inc
cdq
pop
push
inc
mov
pop
cli
xchg
sbb
lock
xchg
dec
xchg
xor
xor
or
xchg
ror
push
or
add
or
nop
add
out
cmps
push
adc
jge
sbb
xchg
ins
lock
(bad)
mov
add
lock
xor
lds
add
jns
sub
cld
inc
inc
(bad)
cmps
lea
repnz
add
daa
sbb
enter
mov
ror
dec
and
add
sub
or
inc
test
movlps
pop
retf
movs
sub
fist
sbb
adc
sbb
sbb
lock
push
mov
xchg
cld
push
mov
dec
add
xchg
fild
fwait
dec
in
mov
xor
cmp
sbb
shl
in
call
sub
sub
sahf
adc
dec
or
sbb
inc
add
cmp
add
call
mov
inc
push
or
lock
(bad)
arpl
fisttp
(bad)
xor
add
sar
ror
imul
cdq
popa
pop
add
inc
mov
and
pop
dec
dec
js
sbb
jo
push
adc
pop
or
dec
jns
loopne
push
sbb
adc
push
push
sub
xchg
adc
or
inc
sub
and
add
and
movs
test
mov
mov
popf
cmp
mov
adc
sub
add
push
movs
mov
or
mov
rcl
pop
mov
repz
lahf
xor
test
int
xor
mov
or
ins
dec
gs
test
push
(bad)
xchg
xor
jmp
or
and
test
inc
cmp
mov
clc
ffreep
mov
ds
mov
and
sub
mov
pop
mov
push
or
shl
inc
add
call
pop
adc
xor
jne
popa
jl
add
lds
sub
mov
push
pusha
add
loopne
pop
mov
pop
inc
rcl
daa
xor
mov
cmp
cmp
dec
ss
pop
dec
or
rcl
rol
(bad)
ror
adc
cld
xchg
movs
push
cmp
xor
adc
add
cmp
push
push
fs
jmp
ds
inc
(bad)
or
jmp
in
jmp
pop
(bad)
xchg
sub
mov
sub
dec
loope
sti
mov
lods
or
cmp
sbb
sahf
mov
add
inc
ins
ss
push
add
ins
pop
xor
adc
aam
push
sbb
adc
and
mov
cld
push
inc
fcmovne
(bad)
cmp
iret
push
icebp
pop
js
and
inc
push
or
and
lahf
adc
pushf
add
or
and
ja
add
dec
mov
jg
jno
push
push
(bad)
sub
dec
and
clc
jecxz
cmc
fidiv
jne
pop
fdiv
mov
rcr
pop
aas
mov
mov
test
jmp
add
ret
add
shl
lods
adc
and
pop
adc
sar
movs
hlt
xchg
and
rcr
xchg
add
xor
push
adc
mov
cld
lods
dec
add
lock
test
pop
fldcw
stc
add
repz
imul
clc
xor
inc
fidiv
icebp
bound
mov
sub
mov
retf
or
push
adc
inc
sub
add
nop
mul
(bad)
stc
ret
mov
fst
add
sbb
fild
mov
call
jo
cmc
ss
sbb
nop
sbb
loope
sub
int
or
dec
jns
aad
mov
pop
je
mov
outs
mov
ins
mov
sbb
pop
jno
and
jb
nop
xor
cmp
jns
xchg
inc
adc
retf
mov
nop
dec
cmp
js
(bad)
daa
ins
adc
add
sbb
jmp
adc
test
daa
and
gs
inc
imul
adc
ds
cwde
inc
dec
pusha
mov
push
imul
or
or
and
xchg
out
and
adc
cmp
and
in
mov
rol
mov
jae
and
test
push
lock
adc
add
pop
sbb
mov
(bad)
pop
cli
and
ret
push
or
inc
jne
retf
inc
dec
jmp
add
inc
add
ret
and
enter
and
or
scas
jmp
jne
(bad)
rol
and
ret
adc
adc
sbb
or
add
add
mov
ins
sub
jne
and
xchg
push
sbb
jg
loope
cmp
cmp
mov
icebp
push
xor
cdq
sbb
test
or
adc
or
gs
in
shr
sub
sbb
inc
hlt
sub
int3
and
sub
xchg
sub
jp
adc
sbb
xlat
cmp
jmp
mov
xor
jg
loopne
mov
mov
cli
inc
cmp
xchg
jl
xor
sbb
inc
mov
jl
xchg
movs
jae
push
test
ret
push
push
push
or
mov
lods
dec
shl
add
push
pop
pop
push
or
mov
push
lock
xchg
push
xchg
dec
mov
and
sbb
or
cs
sar
sub
stos
ins
sub
push
hlt
sbb
iret
xchg
jmp
sub
inc
loope
or
stos
pop
icebp
push
adc
mov
enter
dec
or
ret
test
xchg
pop
setns
cwde
sub
jl
push
pop
push
add
ror
clc
push
xor
bound
loope
xor
or
movs
iret
and
dec
and
jo
add
in
jb
dec
mov
inc
adc
pop
pop
sub
test
test
jb
sub
mov
sbb
inc
and
or
cmp
xor
mov
sbb
in
sub
push
das
inc
sub
push
inc
push
jmp
mov
dec
pop
ins
sbb
sub
dec
loopne
cmp
xor
nop
and
sbb
test
or
nop
dec
and
cvttps2pi
cmp
shl
cmps
pop
push
pop
push
or
aam
cmp
xor
or
adc
ins
dec
bound
in
clc
or
push
rol
pop
xchg
sbb
add
xchg
cmp
add
and
dec
(bad)
loopne
pop
retf
dec
push
ret
jo
inc
(bad)
mov
dec
pop
cs
inc
cmp
xor
dec
inc
mov
add
xchg
mov
jp
xchg
movs
js
push
cmps
lea
add
push
xchg
aaa
xchg
jmp
xor
fiadd
repz
and
dec
add
mov
test
mov
and
sar
xor
rcl
jbe
lods
jnp
inc
(bad)
jmp
or
cmp
push
cmp
pop
adc
(bad)
mov
out
idiv
push
xchg
mov
adc
cmc
mov
ins
in
jo
mov
aas
ins
loop
xlat
mov
dec
mov
mov
cwde
stc
je
push
lock
dec
or
pushf
test
mov
jnp
lock
add
cwde
dec
sbb
aam
repnz
ins
fisubr
push
aaa
pop
ret
add
cmp
mov
push
gs
or
movs
inc
loopne
mov
mov
and
inc
and
pop
add
sub
or
inc
mov
(bad)
cld
or
(bad)
mov
(bad)
cmp
jo
push
mov
jno
xchg
and
pop
sub
in
add
inc
lods
jle
lahf
xchg
mov
inc
add
and
sub
mov
lods
adc
jb
and
push
dec
add
jp
dec
cmc
mov
xchg
mov
int3
sub
or
retf
not
aam
push
mov
movs
xor
adc
mov
xlat
push
add
mov
sub
inc
or
push
pop
cs
or
(bad)
cld
and
inc
inc
or
js
(bad)
or
loopne
or
cmp
lahf
mov
test
lods
add
out
cmp
test
xchg
shl
movs
adc
arpl
pop
inc
out
push
mov
call
jg
add
(bad)
(bad)
lods
xchg
pusha
hlt
aaa
popf
push
sub
or
cmp
movs
or
dec
push
sub
lock
popa
push
bound
lods
mov
dec
cmp
mov
fs
out
cmp
inc
mov
getsec
and
jae
(bad)
sti
mov
mov
ret
(bad)
sub
test
shl
xor
movs
adc
fsubr
ins
mov
lea
mov
or
daa
stc
dec
jne
pop
inc
outs
sbb
lods
test
jne
adc
pop
shr
pop
cmps
sbb
jmp
push
sub
and
dec
mov
sbb
mov
stos
fwait
pusha
push
sub
lea
sbb
jns
add
clc
mov
add
mov
inc
fild
popa
(bad)
dec
mov
lds
xchg
xor
ds
add
aas
mov
sbb
inc
fcomip
xchg
add
inc
pop
loopne
mov
aam
push
mov
cmp
and
jge
in
xchg
or
add
movs
test
cld
inc
fst
jmp
enter
or
jl
push
sbb
out
and
add
dec
fcomp
int
dec
inc
ins
cli
and
rcr
mov
int3
shl
daa
imul
pusha
or
push
pop
and
lahf
cmps
test
loopne
and
pop
nop
cmp
jg
dec
add
add
sbb
sub
dec
dec
and
sub
sbb
dec
and
adc
pushf
add
push
mov
cmp
test
cmc
sbb
mov
cmps
adc
nop
add
add
loopne
cmp
or
pop
add
pop
movs
mov
jg
lods
and
rol
mov
xor
sub
test
xor
and
xor
cmp
inc
and
inc
jmp
dec
cmp
cmp
cdq
sbb
push
push
pop
and
inc
int
and
push
pop
loopne
adc
mov
add
push
inc
push
add
xor
jb
clc
add
in
jp
sub
add
xor
xchg
fnsave
loop
jo
sub
adc
jg
aas
sub
sub
mov
push
or
dec
xor
test
mov
push
push
or
stos
adc
dec
and
pop
sub
into
pushf
pop
inc
retf
cmp
mov
sqrtps
and
sub
jae
sbb
add
outs
jl
pusha
mov
cmp
or
jnp
xchg
xchg
bound
push
push
dec
cvtpi2ps
je
sbb
mov
cld
icebp
inc
mov
sbb
nop
pop
sbb
pop
jae
cmp
cmp
mov
in
xor
adc
fsubr
ss
pop
push
push
fs
jbe
cli
lds
push
mov
mov
call
push
dec
push
gs
pop
inc
in
inc
das
push
(bad)
cmps
xor
bound
pop
jb
pop
aad
addr16
jl
(bad)
clc
retf
movs
retf
xor
and
mov
imul
push
adc
pop
and
and
cmp
test
pop
add
push
loopne
add
mov
sbb
and
out
nop
cwde
add
push
in
fcom
test
test
movs
ss
das
jno
xor
add
jbe
das
les
mov
mov
aad
shl
add
ss
and
push
mov
sub
add
adc
fcomp
push
jnp
push
add
jmp
test
mov
mov
pop
pop
push
ja
xlat
and
adc
xor
aas
and
pop
inc
out
adc
add
lahf
push
push
and
mov
push
iret
adc
fs
push
call
loopne
xor
enter
rol
mov
lahf
iret
jnp
adc
xor
cmp
repz
sbb
or
add
lahf
frndint
mov
ins
push
js
mov
dec
adc
mov
daa
mov
daa
add
jnp
pop
nop
add
sub
push
add
push
lahf
lock
xchg
scas
lahf
jns
mov
lods
push
mov
add
out
int3
aam
mov
push
lahf
inc
add
out
mov
pop
push
shr
sbb
or
add
push
loope
loop
ss
push
(bad)
in
add
cld
jb
js
and
ins
mov
pop
fstp
pop
jmp
jne
inc
clc
xlat
or
pop
leave
inc
push
mov
mov
dec
aas
fs
push
add
jo
and
sub
mov
and
push
rcr
das
inc
stos
add
xor
jo
lahf
stos
mov
inc
jl
cwde
and
jecxz
or
enter
icebp
and
test
hlt
test
and
jle
mov
fld
mov
push
fistp
data16
sbb
pop
add
dec
pushf
pop
sub
add
and
loopne
push
or
ror
add
sbb
cmp
and
dec
and
or
les
ins
cmp
add
cs
and
or
clc
push
xchg
or
mov
sbb
and
push
div
test
push
add
js
or
mov
aas
pop
ror
push
adc
aam
sub
test
hlt
push
xor
jne
fimul
xor
push
mov
or
scas
xor
retf
xor
in
lds
inc
xor
pop
sub
aaa
push
push
bound
sbb
in
sahf
xor
cmp
xor
or
push
adc
stos
inc
in
or
jbe
add
stos
push
pop
ja
push
jns
add
or
je
jmp
shl
adc
xor
fdivr
ret
jne
call
sbb
rcl
add
add
mov
ss
push
ficom
add
fsubr
add
ja
mov
lds
shr
mov
lea
icebp
or
and
pop
mov
int
scas
push
dec
rcl
and
cmp
(bad)
aaa
das
lds
scas
push
add
cmps
les
cmps
clc
hlt
das
icebp
dec
loope
ja
add
cwde
cmps
pop
jmp
mov
mov
daa
fadd
and
push
gs
sub
jecxz
xor
xor
add
test
popa
mov
lock
jmp
push
dec
cmp
push
int3
cdq
mov
xor
pop
cmps
push
inc
hlt
stos
int
mov
fisttp
inc
pop
xor
dec
sbb
adc
imul
pop
pop
inc
and
hlt
loope
push
sub
pop
es
push
xchg
pop
pushf
jecxz
push
pop
and
aad
or
pop
jno
lods
jne
and
and
(bad)
in
sbb
xchg
fsubr
(bad)
jmp
popa
add
and
adc
aad
mov
(bad)
in
jne
rol
popf
cmps
loope
test
push
adc
adc
or
or
adc
push
add
cmp
adc
fsub
xor
jb
dec
dec
aas
sub
adc
or
xor
lods
aam
clc
ret
jmp
mov
aam
jecxz
or
cmp
sbb
daa
rol
nop
add
pop
add
dec
push
fcmovbe
add
or
adc
xor
adc
lea
inc
pop
(bad)
mov
fcom
test
ror
ja
jmp
xor
shl
push
dec
sar
xchg
ror
or
call
adc
mov
inc
aad
push
mov
test
in
xchg
cdq
add
add
cmp
cmp
loop
add
fwait
sub
or
dec
jmp
jecxz
popa
pop
outs
or
out
ins
leave
or
test
mov
push
les
cmp
cwde
retf
popf
popf
mov
pop
adc
aam
loopne
push
les
(bad)
shr
or
inc
int3
dec
int
or
adc
mov
jmp
pop
jbe
ret
push
and
in
or
sahf
dec
fist
add
add
xor
mov
or
ret
out
pop
(bad)
dec
shr
push
test
sahf
cld
add
loop
mov
cmp
pop
push
add
sub
mov
dec
sub
add
les
loope
lahf
mov
gs
pop
xchg
retf
cmp
ret
jbe
jae
mov
inc
sbb
sbb
or
and
outs
and
and
cmp
test
out
jns
push
pop
pusha
fst
add
in
dec
fidivr
sbb
dec
fcom
lahf
pop
sub
inc
and
cmp
or
xchg
add
dec
loopne
stos
or
jle
mov
adc
pop
xor
mov
sbb
aam
or
inc
inc
stos
cmps
dec
cmp
xor
or
aad
xchg
ret
or
ret
xor
lock
test
mov
pop
and
and
pop
les
adc
int
out
sbb
pop
gs
dec
das
push
xchg
int3
mov
pop
xchg
or
cmp
aaa
inc
and
dec
add
outs
inc
push
enter
popf
dec
ret
das
pop
shl
xor
call
movs
int
pop
aaa
ficom
test
push
lds
(bad)
dec
or
xor
or
adc
add
lods
ror
int
jl
adc
xor
sbb
jge
add
inc
je
push
rcr
dec
clc
fcmovnbe
cwde
fadd
es
inc
adc
dec
mov
sub
iret
adc
mov
or
and
and
sub
(bad)
fsubr
sbb
add
ins
mov
nop
fwait
ret
mov
add
aas
leave
comiss
nop
pop
push
xchg
add
ficom
stc
iret
adc
pop
xor
or
xor
std
mov
add
add
clc
lock
ss
mov
xchg
or
imul
pop
dec
cmp
add
sub
or
cmc
inc
sub
(bad)
mov
xchg
ret
les
shl
adc
xor
jmp
adc
ficom
les
xchg
sub
lea
jmp
or
lahf
in
sub
mov
fwait
jno
cs
jne
jns
in
mov
or
int3
nop
addr16
cld
push
add
fadd
jmp
sbb
pusha
pushf
or
sbb
push
dec
push
inc
push
adc
mov
xchg
rol
pusha
and
add
loopne
daa
pop
nop
xchg
and
xlat
addr16
push
dec
cwde
sets
mov
inc
cwde
pop
inc
xor
daa
hlt
mov
test
sbb
inc
push
nop
cmps
push
movs
mov
shl
mov
xor
add
or
cmp
mov
lahf
inc
add
mov
mov
js
pushf
jl
popa
daa
and
retf
push
jg
xor
mov
add
xor
je
mov
mov
pop
setno
jb
movs
mov
adc
(bad)
push
sbb
loope
cmp
mov
sti
call
sbb
in
fadd
popa
loopne
add
jecxz
or
ret
mov
xchg
mov
or
js
dec
pop
out
cmps
in
and
add
pop
inc
inc
fs
xor
push
pop
dec
sbb
dec
fmul
dec
mov
mov
or
sbb
or
fnstcw
or
add
add
loope
lock
movs
mov
adc
and
mov
pusha
inc
push
enter
inc
(bad)
jbe
js
jmp
sub
mov
and
sbb
pusha
loope
gs
push
call
mov
out
lea
sub
ror
cmp
push
lea
fild
inc
mov
ins
jg
je
leave
or
mov
xchg
and
sub
adc
push
aaa
mov
xchg
xchg
sbb
sub
dec
cmp
pop
add
jne
add
inc
sub
adc
adc
cs
and
fcomp
mov
xor
(bad)
xor
sbb
jb
push
mov
repnz
xor
xor
mov
or
lock
lock
sub
inc
inc
outs
je
inc
jne
push
adc
popf
or
push
add
pop
xchg
or
add
xchg
sbb
je
ja
adc
inc
mov
mov
dec
xor
push
xchg
fnstenv
jl
xlat
movs
adc
mov
pop
inc
sub
mov
or
inc
push
jb
jnp
and
sbb
jno
mov
gs
daa
cs
ret
pop
and
mov
jmp
mov
inc
xor
or
sti
leave
fadd
push
(bad)
test
xlat
inc
lods
rol
lea
jns
repnz
jl
xor
test
lods
xor
inc
bound
test
add
mov
pop
sub
pusha
mov
mov
sub
mov
cmp
lock
mov
imul
sbb
and
(bad)
add
sbb
sbb
push
mov
xchg
ficom
mov
test
and
cdq
jge
mov
cmp
pop
mov
pusha
and
mov
add
punpckhbw
or
add
shr
fs
pop
add
ss
push
scas
mov
or
std
lods
fmul
jmp
cmp
add
repz
popf
or
jl
ret
test
jnp
sbb
jne
loope
fst
xchg
jl
jl
aam
xor
inc
add
push
sbb
cmp
push
mov
nop
cmp
xor
retf
mov
mov
outs
shr
clc
and
fldenv
inc
sub
imul
and
icebp
xchg
or
imul
mov
rol
fwait
or
movntps
dec
push
addr16
nop
cmp
xor
xor
pop
(bad)
addr16
jle
popf
jnp
aam
or
arpl
sub
mov
add
popf
or
and
jnp
es
ins
mov
(bad)
inc
add
ins
mov
xor
cs
cmp
aad
or
push
lea
xor
lea
scas
out
dec
or
and
mov
xor
push
adc
jne
scas
retf
popa
and
push
outs
jnp
rol
mov
xlat
sub
xlat
xor
gs
mov
sbb
shl
cmp
test
jl
frstor
dec
jp
xchg
sub
cmp
or
in
mov
test
dec
call
imul
xchg
shl
add
ins
or
lock
outs
mov
test
fs
jle
dec
inc
adc
sbb
mov
addr16
jmp
cmp
or
sbb
xchg
or
repnz
outs
adc
mov
fwait
sbb
xor
add
sbb
jg
jl
cmp
scas
xor
push
sub
enter
lea
pop
jg
pop
xchg
sbb
pop
dec
add
or
test
test
push
in
fadd
sbb
jl
xchg
sbb
sub
pop
xor
test
xor
or
ret
lea
or
xlat
xchg
gs
and
cmp
pop
call
xchg
or
cmp
lods
rcl
jne
add
or
mov
iret
(bad)
imul
in
adc
xchg
mov
lea
push
jb
repz
push
and
xchg
jnp
add
sbb
ret
add
les
jno
push
or
es
cdq
fsubr
pusha
gs
loope
lds
dec
std
dec
sar
add
mov
fdivr
inc
add
mov
xchg
push
xor
rcr
and
psubsb
xor
and
stc
or
test
call
push
enter
lea
mov
jo
xor
pop
dec
pop
retf
and
add
cmps
sbb
loope
cmc
aad
ins
jle
adc
dec
retf
or
add
xchg
retf
inc
mov
mov
mov
xchg
or
or
ror
fldcw
fucomp
and
xchg
add
mov
mov
push
xor
popa
add
mov
add
sbb
mov
cdq
cs
cwde
pop
xor
xor
cmp
shl
adc
or
xor
lahf
out
push
sti
jno
jbe
out
xor
int
into
dec
push
push
push
aas
adc
repz
arpl
add
push
add
aas
dec
jns
sub
aaa
inc
into
dec
add
add
shl
inc
pop
sti
add
outs
retf
iret
out
add
es
neg
mov
push
adc
ss
fiadd
rcl
push
add
add
add
loopne
mov
add
add
push
pop
sbb
and
or
or
and
lods
or
aam
inc
scas
rcl
adc
and
bound
in
rol
or
cmp
movups
aas
mov
sbb
cmp
ret
sub
sub
inc
aas
pop
or
sahf
fbld
add
add
pop
or
xchg
pop
ror
push
test
in
mov
jmp
lods
cmp
mov
mov
push
lods
cmp
adc
dec
adc
fistp
pushf
in
push
pop
push
mov
pusha
inc
nop
inc
inc
inc
sub
sub
mov
in
mov
add
test
jecxz
cdq
xor
adc
aad
and
adc
pusha
nop
xor
push
mov
or
pusha
inc
jb
adc
push
cmp
push
fsubr
and
and
fcmovbe
fs
aam
popa
sbb
sbb
inc
mov
sbb
adc
pop
jmp
cmp
adc
fcmovbe
fcmovbe
xchg
imul
and
sbb
mov
cmp
pushf
jp
ret
sbb
adc
add
cmp
rcr
inc
mov
mov
adc
xchg
pop
cmps
jle
mov
jmp
inc
cmp
nop
xchg
nop
sbb
fcomp
xchg
inc
popf
bound
xchg
je
xor
cmp
popf
call
test
add
jne
sbb
aam
imul
test
mov
inc
fnstcw
test
push
std
jmp
sbb
mov
dec
or
test
or
jle
adc
cmp
js
cmp
es
pop
fwait
xor
fs
xchg
jl
and
add
jns
and
fcomp
xlat
and
xchg
cmp
xlat
and
mov
(bad)
add
pop
inc
int3
push
ret
pop
jecxz
adc
dec
or
pusha
cmps
xor
or
mov
adc
dec
or
ret
lods
cmc
or
xchg
add
mov
cmp
test
xor
sub
mov
aaa
sbb
mov
rcr
data16
cs
sbb
loopne
(bad)
(bad)
out
sub
push
loopne
imul
je
pop
push
or
cdq
dec
push
push
hlt
sub
(bad)
loopne
and
scas
fnstcw
add
push
in
in
push
cmp
lods
out
jns
mov
sahf
out
bound
mov
fisttp
stc
push
loopne
(bad)
xor
ret
aam
adc
popf
or
or
(bad)
les
pushf
xor
xor
sub
fwait
jo
xor
sar
xchg
fwait
jmp
and
pop
jmp
int
sbb
aad
cmp
mov
mov
(bad)
jmp
add
inc
test
mov
clc
and
(bad)
adc
pusha
cmp
out
sahf
xchg
push
fstp
fnstsw
shr
loope
lock
in
in
repz
out
call
(bad)
adc
ds
push
in
push
out
repz
push
loope
lock
out
test
repnz
iret
repz
stos
lods
lods
scas
sahf
out
out
mov
cmc
div
clc
fidivr
jns
cli
mov
rol
sar
jns
aam
(bad)
xlat
sub
cmp
les
adc
jo
sbb
cmp
mov
adc
adc
imul
jg
adc
shl
inc
cmp
jmp
mov
mov
or
sub
dec
pushf
aam
or
aam
gs
add
mov
add
xchg
xchg
lods
inc
pop
mov
mov
mov
mov
fs
cs
push
cwde
jmp
ja
jp
and
jmp
rcl
add
mov
mov
add
cmp
or
in
rcl
sub
enter
cmp
das
dec
xchg
sbb
scas
sub
and
js
and
mov
add
(bad)
adc
in
test
fstp
inc
pusha
add
jo
jne
retf
xchg
add
push
add
and
test
mov
and
sbb
cmp
adc
cmps
pop
xchg
fs
dec
pop
mov
xor
sbb
mov
mov
movzx
or
sbb
sub
push
daa
nop
sub
dec
inc
scas
sub
je
cmp
in
or
outs
add
cmp
inc
icebp
sub
dec
in
jmp
or
dec
in
xchg
jmp
adc
xor
xchg
push
adc
mov
in
cmp
ror
shl
repz
sbb
or
out
iret
imul
loope
icebp
cmp
cdq
repnz
in
cmp
test
add
add
(bad)
lds
retf
(bad)
xchg
(bad)
push
or
pop
or
cli
add
push
inc
hlt
scas
push
std
lock
mov
add
sub
cmp
cmps
push
cdq
repnz
test
mov
or
sbb
jle
hlt
mov
inc
out
cmovb
jo
and
imul
jne
ins
mov
sbb
push
inc
sub
cmp
lods
jle
in
add
mov
pushf
in
add
xor
aad
mov
(bad)
in
mov
mov
test
mov
ds
aaa
outs
xor
add
out
inc
push
push
pop
or
or
mov
jnp
xor
pop
adc
mul
or
push
or
mov
add
ss
and
aaa
and
movs
aas
into
fs
nop
mov
lock
adc
mov
rcl
ret
or
push
inc
adc
push
inc
mov
rol
pop
sbb
add
mov
repnz
jle
fdiv
push
call
dec
mov
bound
mov
mov
test
movs
mov
nop
cmp
dec
pop
stos
sub
adc
push
sub
ja
sub
xor
pop
adc
add
arpl
test
std
cmp
je
xchg
cwde
(bad)
fisttp
test
pop
inc
push
pop
js
or
ret
fisttp
push
(bad)
ins
jmp
mov
fnstcw
mov
dec
jmp
xor
push
dec
add
add
std
xlat
jb
pop
cmps
arpl
rcl
rol
mov
jne
in
aaa
dec
cmp
icebp
mov
loopne
(bad)
int3
leave
or
or
arpl
mov
cmps
aas
and
pop
push
mov
inc
je
mov
aad
or
fs
or
add
lock
and
jnp
push
(bad)
sub
mov
ret
xor
xor
pop
add
xchg
add
mov
add
lock
je
shr
sub
or
push
and
jno
sbb
or
enter
jl
mov
pop
or
push
or
adc
mov
loopne
pop
xor
push
sbb
fadd
lods
inc
lds
repz
ret
xor
adc
jecxz
or
lock
sbb
pop
push
or
out
sub
mov
xor
xchg
dec
mov
mov
iret
shl
enter
push
fst
ss
push
test
shl
mov
adc
rol
test
ja
rcl
retf
or
adc
and
jg
mov
xor
pop
out
or
add
sbb
inc
mov
sbb
icebp
or
xor
fcom
add
out
bound
push
mov
sbb
dec
or
std
or
retf
jmp
pop
xor
jl
adc
pop
push
movs
cs
pushw
pcmpgtb
dec
or
sbb
adc
dec
jmp
mov
jo
int3
das
adc
push
sahf
mov
rol
in
imul
and
or
fs
sub
and
cmp
daa
and
enter
pusha
xor
or
js
mov
gs
mov
lahf
rcl
xor
push
add
mov
(bad)
sub
jg
add
push
es
popa
cmp
mov
repz
add
jnp
ins
mov
add
dec
sbb
add
dec
xor
jmp
pop
or
sti
sub
dec
das
popa
mov
push
mov
push
push
push
imul
rol
or
xor
fist
or
xchg
lea
js
push
xor
dec
sbb
clc
jns
add
adc
dec
(bad)
fs
mov
mov
dec
pop
add
mov
xchg
outs
or
cdq
inc
dec
or
loopne
or
push
clc
add
pop
ins
cld
mov
and
or
sahf
fs
cmp
xchg
mov
dec
push
mov
outs
add
or
mov
pop
cwde
sub
cmp
dec
jg
in
pushf
ret
adc
repz
adc
xchg
sar
dec
adc
les
jne
adc
lds
add
xor
and
pop
sbb
or
adc
ins
cmps
xchg
add
stos
and
push
mov
dec
pop
(bad)
lea
cld
inc
movs
(bad)
add
shr
fwait
scas
test
lods
inc
daa
jmp
lods
daa
retf
les
scas
inc
mov
or
adc
(bad)
cmp
sbb
lds
out
das
std
test
in
pushf
fsubr
std
test
pushf
and
push
pushf
or
adc
clc
adc
xor
pushf
and
mov
loop
xor
cmp
inc
sub
sub
mov
out
movs
nop
hlt
or
test
and
push
outs
add
mov
repz
movs
mov
push
dec
sbb
aam
or
sbb
rol
comiss
test
sub
push
mov
jge
xor
push
loopne
sar
or
push
(bad)
xor
cmps
les
ins
push
rol
sbb
(bad)
jo
loope
imul
sbb
inc
inc
popa
cdq
aas
rcl
jo
retf
cmp
and
je
push
leave
sbb
popa
cli
mov
mov
adc
das
test
fst
inc
xchg
pop
or
push
lock
and
mov
or
xchg
adc
jl
push
inc
dec
ins
ins
jo
arpl
push
add
rol
int
push
push
lock
seta
popa
or
mov
imul
xor
js
jmp
adc
push
fs
cdq
mov
push
adc
mov
inc
verr
mov
sub
or
xchg
jbe
push
sub
xchg
out
fsub
or
add
pop
add
jns
inc
push
push
ins
inc
fcomp
push
mov
or
imul
cmp
mov
dec
and
xchg
xor
loopne
(bad)
aaa
and
inc
mov
cmp
jmp
add
adc
lods
or
mov
mov
adc
push
jmp
adc
adc
and
fdiv
hlt
rol
cs
jo
arpl
push
adc
adc
call
mov
inc
jmp
lea
jne
cmp
dec
pop
ins
push
je
imul
rcl
xchg
std
fmul
rcr
int
add
and
or
jmp
fwait
xchg
inc
test
test
cmc
xor
loopne
in
fs
jl
push
mov
add
das
adc
shl
jo
cmp
cmp
(bad)
push
mov
fs
mov
sbb
jecxz
jb
shr
xor
mov
loopne
fiadd
xor
rol
neg
sub
push
mov
xor
dec
ins
loopne
jb
outs
fld
inc
push
dec
in
sbb
mov
add
pop
shl
dec
dec
push
push
push
mov
rol
nop
sub
inc
xchg
js
dec
fs
fild
mov
jae
js
push
adc
jg
mov
les
mov
push
adc
or
and
bt
mov
add
rcr
adc
pop
dec
cmp
enter
dec
adc
push
push
and
cld
jecxz
add
mov
inc
call
jo
xchg
test
push
push
fist
je
inc
add
adc
push
fld
pop
xor
les
ds
jecxz
call
lock
shl
xor
sbb
das
inc
sub
push
test
loopne
sbb
ja
adc
push
pop
sbb
lds
mov
inc
and
and
fmul
dec
push
pop
and
mov
dec
hlt
or
jbe
stos
jae
pop
jmp
loopne
lea
and
call
push
cli
rol
bound
mov
push
sub
ret
fs
aam
mov
test
ret
jne
jnp
push
adc
xchg
jg
sbb
sub
ret
fbstp
sbb
xchg
popa
fsub
lock
test
xchg
pop
xor
imul
mov
mov
jge
loopne
add
jp
xlat
jo
mov
pop
popf
adc
es
aam
adc
neg
mov
sahf
test
jge
int3
jmp
sub
dec
mov
sub
pop
xor
push
stos
xor
add
call
dec
push
mov
out
mov
inc
nop
xor
mov
into
sbb
loopne
mov
sbb
les
mov
jecxz
(bad)
lea
push
pop
daa
push
add
and
iret
mov
aad
nop
in
into
mov
addr16
std
lock
in
cmp
stc
adc
adc
jmp
fsubr
pop
sub
mov
aas
popf
sbb
fs
xor
and
loopne
(bad)
or
adc
movs
inc
adc
mov
fdivr
mov
lods
push
push
jmp
enter
add
fwait
imul
or
dec
xchg
rol
add
xor
and
jno
sbb
add
and
sbb
mov
jmp
push
data16
mov
adc
pop
ja
dec
sbb
fucomi
push
dec
loopne
jo
popa
scas
inc
cdq
adc
repz
scas
and
or
sbb
pop
ret
test
lds
test
mov
and
rcl
inc
movs
setge
xchg
inc
dec
jg
iret
add
test
pop
adc
movs
mov
ss
and
fnsave
inc
xor
std
push
add
and
cmp
xchg
std
call
jb
mov
sub
adc
cwde
rol
sahf
mov
or
call
mov
dec
pusha
mov
push
xchg
cdq
je
adc
ja
mov
xchg
inc
and
adc
xchg
sub
cmps
or
das
push
test
add
sub
lea
or
or
mov
es
loope
outs
sbb
or
add
sbb
sbb
and
test
nop
nop
cmp
imul
and
add
mov
jo
(bad)
popf
lock
mov
jbe
out
test
push
mov
or
jl
popa
int
inc
push
fs
adc
dec
inc
sahf
or
cdq
mov
inc
or
adc
addr16
inc
cli
inc
or
or
add
rol
ror
dec
pusha
mov
ss
inc
cmps
push
dec
mov
and
mov
inc
push
and
rcr
stc
sbb
xor
ret
nop
bswap
(bad)
loopne
les
loop
and
enter
jb
xchg
cmp
inc
push
sbb
dec
dec
or
ror
or
ss
push
test
pop
aas
test
mov
sub
pop
pop
ret
or
ja
and
adc
mov
add
inc
mov
jbe
cmc
push
mov
loopne
sub
jmp
test
into
retf
shl
sahf
adc
inc
push
mov
mov
sub
gs
pop
js
call
mov
xchg
shr
jge
or
rcr
and
scas
push
dec
call
ror
or
dec
shl
call
clc
dec
mov
mov
cmp
scas
(bad)
clc
sub
and
xchg
and
fs
clc
je
lock
cs
xor
pop
ss
adc
and
jne
shl
pslld
dec
popa
push
xor
add
and
jne
mov
sbb
inc
test
ins
or
inc
xchg
mov
mov
sub
inc
mov
shl
push
push
shr
jmp
inc
dec
call
fsubr
pop
in
hlt
xchg
or
mov
test
enterw
jne
dec
data16
cmps
or
adc
mov
push
push
sub
adc
inc
or
int3
cmps
pop
mov
lds
dec
adc
jle
adc
je
loop
xchg
adc
lods
lea
mov
(bad)
std
mov
jp
out
adc
and
std
mov
mov
jl
sub
push
inc
or
mov
imul
jne
jns
cld
sbb
mov
xor
cmps
je
xor
sar
mov
dec
jo
sbb
xchg
or
cmp
cmp
jno
mov
add
adc
leave
cmp
das
adc
inc
rcr
push
ins
popa
mov
je
pop
std
adc
stc
mov
mov
and
icebp
mov
add
arpl
sub
pop
imul
cld
scas
and
dec
pop
pop
imul
mov
test
push
leave
or
call
sbb
jmp
and
or
mov
inc
cmps
xchg
fs
sbb
(bad)
ss
test
add
pop
pop
test
aaa
shl
adc
mov
lods
inc
or
cmp
jb
pop
inc
rol
inc
sbb
shl
sbb
adc
xchg
dec
call
pop
push
or
adc
jge
dec
mov
add
fs
arpl
xor
movs
rcl
leave
and
push
out
xchg
pop
inc
pop
and
pusha
mov
rol
adc
mov
mov
repz
rcl
jp
pop
and
or
cmp
adc
jne
adc
mov
xor
mov
adc
shl
std
std
imul
rcl
mov
push
mov
call
push
cmc
push
sub
adc
push
dec
pop
mov
pop
pop
xchg
push
push
cmp
fiadd
dec
or
and
std
push
std
sub
or
jne
xchg
mov
cmp
and
inc
sub
nop
push
test
dec
push
addr16
push
inc
(bad)
adc
mov
mov
mov
jne
push
mov
std
pusha
enter
std
dec
std
fst
jb
stc
cmp
or
xor
xchg
shl
or
adc
xor
aas
or
mov
sti
sub
mov
sub
addr16
sub
add
inc
daa
inc
std
dec
enter
mov
in
push
pusha
mov
xor
fs
xor
into
or
push
daa
les
pop
inc
cmp
cmp
dec
and
lahf
or
sub
jno
push
push
sub
sub
(bad)
jmp
or
xchg
push
mov
jle
loope
cdq
fucomip
inc
mov
sti
jne
(bad)
dec
or
adc
lods
cmp
mov
jle
cmp
adc
sbb
inc
cmp
dec
xchg
inc
outs
mov
fsub
inc
ins
or
daa
jl
adc
mov
push
push
test
loopne
push
push
push
imul
(bad)
sub
sub
adc
pop
les
dec
add
pop
push
repz
imul
add
aas
jns
neg
push
aaa
sub
ja
inc
out
pop
jo
and
repz
and
push
das
cmp
dec
pop
ins
pop
cmp
sbb
sbb
pushf
pop
(bad)
mov
es
jp
fcomp
fst
out
mov
shl
mov
test
and
cwde
test
sub
add
jge
cdq
gs
mov
push
scas
dec
mov
outs
inc
inc
lds
pusha
dec
add
retf
sub
mov
test
das
or
sub
fs
cmp
mov
neg
add
lock
xor
(bad)
rol
enter
scas
dec
hlt
inc
adc
add
pop
pop
out
xchg
or
imul
int
loope
jmp
rcl
push
sub
inc
adc
and
inc
push
lock
mov
mov
mov
or
lahf
inc
shl
sub
test
push
add
xor
inc
mov
cdq
adc
push
or
scas
loope
inc
sbb
neg
mov
xchg
cmps
and
xor
jo
mov
mov
and
out
jecxz
sbb
xor
daa
lea
mov
xchg
mov
call
inc
pusha
mov
pop
push
xor
jl
jl
(bad)
jg
mov
sub
inc
loopne
mov
loopne
or
loopne
sbb
movs
sbb
dec
sub
std
pusha
pushf
add
mov
bound
xor
push
dec
imul
add
je
in
sahf
dec
loopne
mov
adc
sub
push
shl
push
popf
rcr
add
pusha
movs
sbb
mov
call
xor
xchg
pop
cmp
fcomip
and
or
xchg
and
inc
and
cmp
stos
add
or
in
in
dec
movs
mov
mov
imul
loope
add
and
mov
jbe
or
ins
imul
and
shr
sbb
mov
push
sbb
out
enter
loopne
pop
inc
push
(bad)
sbb
or
mov
imul
cwde
dec
push
add
mov
add
add
and
lods
scas
mov
loopne
add
aad
mov
lods
mov
and
loopne
dec
push
sbb
xor
push
movs
and
ret
mov
xor
and
and
daa
mov
bound
add
cmps
fs
mov
sub
mov
fcom
adc
cli
add
pop
add
aas
retf
mov
(bad)
aam
fild
pop
inc
dec
(bad)
or
and
call
sbb
sbb
inc
cmps
mov
sub
pusha
lods
push
loopne
sti
movs
add
or
xchg
rcl
dec
js
inc
loopne
jmp
push
add
hlt
popa
sbb
jb
cmp
stc
sbb
sub
inc
and
and
add
scas
fwait
inc
loopne
push
sbb
inc
add
add
push
aas
or
es
xor
leave
ror
inc
add
sti
or
(bad)
jne
pop
popa
loope
push
or
or
jmp
push
and
in
std
movs
and
mov
cmp
jle
xor
pop
cld
jne
(bad)
test
jecxz
push
aam
aam
push
inc
sti
add
rol
sub
add
add
push
sub
out
or
jo
adc
and
rol
lock
loop
movs
xor
add
pop
(bad)
sti
test
fdivr
sub
js
(bad)
xor
ror
or
fld
add
jmp
mov
add
jnp
arpl
lock
lea
jns
rol
mov
xor
adc
fidivr
jb
ja
fwait
scas
cwde
rcl
movs
and
outs
sbb
or
div
mov
jmp
jmp
and
push
dec
or
ret
or
xchg
sbb
adc
sbb
or
js
retf
popf
push
jae
sbb
jae
(bad)
test
call
mov
loopne
jns
pop
or
mov
or
adc
je
clc
ja
loopne
ins
dec
dec
jl
adc
add
mov
xchg
jne
inc
mov
aad
add
dec
push
jo
xchg
push
ror
mov
ret
inc
(bad)
fcom
inc
mov
sbb
mov
aam
add
dec
(bad)
outs
fadd
sub
shr
test
mov
xchg
and
(bad)
test
inc
sbb
xchg
retf
mov
(bad)
xor
cdq
dec
call
sbb
inc
movs
sub
sub
lods
test
daa
push
(bad)
push
inc
or
popa
lods
dec
dec
sbb
ret
adc
sbb
push
aas
cmc
loop
lea
and
adc
div
and
in
ja
sub
cmc
push
add
or
xor
add
(bad)
and
jne
sbb
adc
or
fwait
push
jmp
jp
out
das
push
ss
cmp
das
cs
pop
add
add
sub
sbb
mov
dec
das
mov
push
push
dec
add
sbb
cdq
jge
je
or
mov
stos
fs
mov
adc
stos
fsubr
lock
mov
jmp
sbb
pop
inc
mov
cmp
adc
jmp
pop
push
test
add
push
fdivr
(bad)
loope
xchg
arpl
xchg
pop
sub
int
sti
xchg
sub
push
inc
mov
adc
xchg
or
(bad)
cli
pushf
rol
test
and
or
minps
add
out
adc
cmps
in
inc
aaa
or
popa
aas
and
adc
test
shr
iret
jmp
push
test
add
sti
or
rcl
jbe
xchg
lahf
pop
add
aaa
adc
pop
mov
adc
lds
fisub
adc
movs
dec
ins
mov
and
sti
add
mov
sbb
adc
test
or
push
jg
cmp
xchg
xor
push
lahf
out
add
mov
mov
test
xchg
mov
xchg
dec
out
stos
aam
cmp
and
pop
sub
jge
aaa
mov
mov
fisttp
sbb
mov
add
sti
repz
inc
jb
adc
ss
or
or
fwait
and
pop
jge
ret
sbb
popa
(bad)
jp
and
cwde
pusha
and
jmp
or
and
adc
std
add
add
jmp
or
lods
jmp
test
lahf
ins
arpl
push
mov
xor
cld
push
add
mov
sub
movs
push
or
int3
add
xor
cmp
getsec
ins
cmp
or
mov
pop
ja
xor
add
aad
jmp
mov
xchg
aam
ds
xchg
adc
dec
or
adc
xchg
jp
jmp
retf
and
inc
cmps
imul
adc
sub
and
aas
push
or
add
sbb
ror
xor
es
clc
in
jecxz
push
or
inc
push
jmp
adc
dec
mov
sbb
and
dec
pop
addr16
cli
xchg
pop
std
rol
lock
mov
sub
or
push
xor
ret
aas
dec
adc
test
and
call
mov
hlt
mov
retf
push
sub
and
nop
cs
sub
das
adc
or
shl
jnp
loope
and
push
and
fcomp
cmps
call
sub
inc
push
adc
lds
jl
sbb
loop
xchg
or
adc
add
sbb
add
or
xchg
dec
lds
xlat
push
jge
add
sbb
xor
cmp
add
or
inc
ja
nop
lock
or
icebp
mov
mov
in
adc
rol
test
push
pop
cli
hlt
push
cmp
sbb
call
xor
xor
add
add
cld
icebp
pop
int3
adc
mov
dec
mov
pop
jno
sbb
lock
mov
adc
sub
pop
mov
xor
arpl
jb
add
mov
mov
arpl
sbb
mov
call
es
xchg
mov
xor
add
enter
inc
sub
and
push
cmp
push
jl
jp
xlat
lock
dec
ins
xchg
(bad)
push
push
loopne
loopne
xlat
out
into
adc
add
pop
xor
mov
das
mov
nop
dec
scas
and
rol
iret
xor
popa
adc
add
mov
cmp
pop
inc
xor
add
dec
jecxz
call
mov
loope
mov
imul
retf
add
mov
push
adc
fiadd
adc
xor
out
xchg
jmp
xor
nop
sbb
pop
ftst
jo
cmp
cmps
out
pop
cdq
add
sub
sbb
faddp
sub
pusha
add
test
cmp
mov
or
push
adc
rcl
ret
rcl
push
or
call
and
sbb
xor
pop
lock
adc
inc
and
lds
aas
hlt
add
or
das
mov
mov
add
outs
arpl
mov
pop
(bad)
mov
cmp
xchg
and
imul
adc
(bad)
push
adc
cmp
inc
add
pop
(bad)
in
sbb
mov
add
pop
cmp
adc
push
fwait
inc
cdq
sub
sub
sbb
test
dec
jne
std
sub
cld
inc
add
jmp
or
push
push
adc
out
pop
stos
and
sub
clc
mov
inc
movs
(bad)
js
mov
ret
adc
adc
ja
add
pop
mov
lock
adc
add
mov
and
pop
sub
mov
lods
mov
mov
xlat
add
jg
jmp
adc
add
mov
shr
push
push
sbb
adc
rol
lock
mov
sbb
nop
bound
pcmpeqw
scas
add
and
je
sub
lock
test
dec
push
and
add
cwde
inc
imul
jl
lea
xor
sub
mul
adc
and
loop
aaa
push
add
les
inc
xor
push
and
mov
cmp
into
sbb
xchg
inc
jl
adc
or
nop
icebp
mov
add
dec
pusha
aas
inc
or
clc
sar
dec
lock
mov
aas
lock
not
paddq
push
add
push
aam
mov
sub
(bad)
pop
addr16
add
pop
fadd
sbb
add
sbb
je
adc
add
mov
jb
jecxz
mov
mov
mov
mov
cs
pushf
gs
adc
and
push
mov
push
inc
les
add
sbb
jg
dec
xchg
js
sub
cmp
dec
adc
rol
pop
in
push
pop
rcr
jecxz
jmp
add
xchg
add
xchg
xchg
mov
sbb
or
and
cwde
shr
xor
mov
inc
xchg
retf
cmp
add
jmp
and
ror
test
jbe
xchg
arpl
rcl
push
out
pop
fs
add
jmp
and
jmp
hlt
hlt
and
hlt
and
iret
mov
mov
xchg
cmp
or
inc
push
pop
loop
ins
lea
mov
add
xchg
jo
pop
adc
or
dec
add
fnstcw
sub
rcr
in
inc
push
aas
test
in
ret
xor
dec
mov
add
ret
mov
or
dec
enter
xchg
jl
dec
daa
test
or
jmp
lods
jo
xchg
sbb
mov
inc
outs
arpl
xor
mov
stc
mov
and
pop
pop
add
imul
sahf
cdq
fmul
pop
mov
cmp
iret
or
es
or
add
inc
sub
push
jl
mov
add
mov
push
dec
mov
push
iret
rcl
jnp
cmp
inc
mov
sbb
mov
int
xchg
lock
popa
and
pop
test
mov
or
ucomiss
(bad)
dec
and
cmp
mov
leave
adc
push
push
and
inc
mov
cli
ret
jmp
retf
lea
adc
iret
pop
adc
cmp
mov
cmp
(bad)
not
sbb
cmp
push
add
(bad)
das
int
addr16
mov
mov
rol
fs
mov
adc
sub
xchg
int3
ror
adc
or
(bad)
sti
test
popf
lock
inc
cld
sub
and
xchg
fdiv
nop
or
mov
add
aaa
mov
aaa
xchg
fild
add
add
popa
arpl
and
add
or
adc
outs
push
(bad)
loop
sub
dec
aad
shl
adc
loopne
inc
sub
push
sbb
test
cmp
dec
adc
mov
cmp
dec
sbb
ss
add
lods
pop
xchg
(bad)
je
mov
jl
fcom
pop
lahf
or
or
test
loope
jne
cdq
movs
fld
jno
dec
nop
inc
sbb
ret
icebp
into
jne
dec
jmp
or
fcomp
fcomp
cmp
pop
sbb
and
cmps
daa
jl
adc
cld
shl
dec
push
ret
fmul
lds
ins
sub
test
mov
mov
cld
int3
pop
stos
mov
retf
sub
push
fsub
mov
fsub
popa
fadd
push
int3
sub
ret
fdivr
mov
xchg
test
daa
popa
and
bound
hlt
xchg
add
cmp
fdivr
popa
pop
ins
lds
xchg
fist
jp
in
in
cld
rol
xorps
push
lea
cmp
loopne
mov
pop
or
dec
mov
dec
inc
sbb
inc
xor
inc
pusha
imul
push
rol
push
cmp
jo
shr
mov
das
jo
or
daa
push
in
rcl
or
jmp
lods
sbb
setl
ja
jmp
lea
xor
add
pop
test
sub
test
adc
fcmovnb
enter
mov
(bad)
(bad)
into
aam
mov
pop
ret
adc
add
mov
mov
inc
cld
cmp
adc
outs
int3
adc
sbb
pop
and
icebp
push
push
jne
add
in
jl
and
lock
dec
mov
lea
(bad)
push
or
and
push
xchg
or
(bad)
lock
scas
push
cmp
mov
mov
pmullw
jmp
test
lds
and
cli
mov
hlt
jbe
mov
push
xor
add
push
ror
shr
xor
retf
sbb
ret
das
add
sub
scas
loop
ss
lods
ret
mov
rcl
fnstsw
pusha
mov
inc
aad
push
add
sbb
push
rol
div
fmul
loop
arpl
stos
test
icebp
xlat
xchg
add
push
in
test
aas
jge
xor
shl
icebp
adc
xchg
call
shl
pop
lahf
sbb
fs
(bad)
hlt
adc
test
add
aas
test
add
xchg
(bad)
jo
mov
test
xchg
jb
add
xor
mov
ja
movs
inc
clc
ficom
cmp
push
js
imul
jge
enter
movs
sar
cs
fnstcw
clc
(bad)
movups
in
ds
arpl
(bad)
pop
inc
pop
hlt
sbb
add
sbb
push
push
fadd
(bad)
cmp
cld
cmp
and
movs
fisttp
inc
ja
test
xchg
stc
call
mov
inc
add
push
mov
repnz
aaa
cmps
adc
js
xchg
add
shl
xor
mov
nop
mov
push
mov
inc
jg
outs
or
lods
pop
mov
mov
inc
xchg
test
add
cmp
nop
iret
fsub
movs
pusha
js
pop
sub
fistp
mov
int
add
mov
add
ss
mov
ss
popf
test
push
aaa
adc
unpckhps
clc
xchg
mov
(bad)
clc
xlat
(bad)
pop
sub
cmp
fsubr
dec
add
dec
sbb
daa
jge
cmc
lods
mov
cli
rol
cmp
mov
fild
xchg
sti
push
cmc
pop
push
rol
fnstsw
sub
push
xor
fdivp
inc
push
mov
pop
add
ds
sar
pop
jbe
and
xor
call
nop
sub
div
shl
das
mov
adc
nop
mov
pop
push
fstp
add
mov
sub
fprem
shl
movs
add
daa
pop
or
jmp
lods
sbb
ins
adc
cld
push
xor
jo
sbb
mov
movups
add
dec
movs
lock
rcl
call
in
cld
add
dec
cmp
inc
dec
lea
mov
push
movs
mov
pop
jo
push
sbb
mov
mov
and
add
int
sub
sbb
enter
std
aas
xor
nop
jns
movs
adc
into
or
xchg
push
add
les
pop
cdq
lock
sbb
adc
xor
stc
lds
inc
cdq
sub
nop
xor
adc
inc
int
retf
rol
mov
xchg
sub
mov
in
inc
push
aam
aam
mov
aam
jmp
xchg
xor
push
adc
mov
or
push
cld
jg
in
ins
add
sahf
or
add
and
loop
or
dec
inc
in
ret
(bad)
push
cmp
fwait
mov
add
xchg
adc
add
xor
adc
mov
push
fwait
pop
out
aaa
jle
mov
add
pop
or
adc
sbb
mov
jo
dec
popa
sub
bt
push
or
add
mov
cwde
cmps
pushf
dec
cmps
add
std
jnp
jge
mov
test
mov
and
pusha
sbb
js
mov
(bad)
in
pop
test
jge
dec
lea
add
cmps
add
cdq
rcl
stos
xor
call
ret
mov
sti
fdiv
loopne
jo
out
or
push
scas
add
(bad)
pusha
add
cwde
cmc
inc
or
jmp
out
dec
retf
cmps
loopne
mov
add
test
add
mov
test
adc
repnz
scas
pcmpeqw
aam
psubw
jo
mov
scas
cmp
jp
xchg
push
or
sub
jmp
dec
loopne
add
outs
fsub
inc
mov
pop
or
ror
js
inc
pushf
sbb
int
mov
mov
mov
or
mov
inc
add
fdiv
dec
or
scas
add
xor
jmp
mov
mov
jb
lds
lock
add
or
fprem
add
rol
cmc
add
push
ins
or
rcl
cs
mov
inc
aam
fidiv
loopne
cmc
mov
int3
add
clc
inc
leave
test
or
or
hlt
ja
xchg
repz
mov
dec
xor
mov
mov
icebp
mov
popf
shr
sub
scas
cmp
or
add
cld
pop
int3
jmp
xlat
push
xor
mov
add
xlat
arpl
add
add
fwait
movs
fmul
into
mov
leave
repnz
adc
shl
cmp
icebp
scas
rol
or
cmps
inc
inc
fsubr
fwait
outs
push
hlt
cmp
mov
mov
adc
push
movs
clc
lock
xor
sbb
cmp
sbb
loopne
loopne
mov
sbb
ss
inc
fld
movs
pop
sub
inc
enter
and
sbb
ret
jge
inc
sbb
adc
js
shl
aaa
ror
retf
sbb
adc
mov
ds
push
add
xchg
adc
icebp
push
push
mov
dec
mov
stos
ja
dec
mov
rol
ret
sbb
add
sahf
test
ret
add
repz
push
inc
call
neg
mov
loope
or
nop
mov
mov
cmp
cmps
and
ins
dec
dec
ret
jmp
dec
rol
pop
es
rol
fiadd
push
xor
loopne
mov
adc
xor
mov
push
dec
adc
push
and
mov
dec
push
pop
and
inc
fcomip
stc
jl
outs
push
jbe
jle
xor
or
dec
add
ja
jg
lea
inc
stc
mov
xor
xchg
in
dec
stc
fadd
push
sub
jp
test
pop
int
cld
cld
pop
push
out
mov
lahf
cld
cld
inc
outs
pop
and
adc
retf
lahf
hlt
cld
sub
hlt
cld
and
and
adc
lahf
inc
rcl
adc
or
dec
repnz
add
mov
pusha
inc
popf
rcl
addr16
and
xchg
lock
lahf
imul
loope
cld
test
inc
cmp
sub
ror
lea
xchg
pop
adc
rcl
xor
xlat
adc
sbb
movs
xchg
ficomp
push
xor
jmp
and
sbb
cmp
movs
std
pop
add
mov
mov
mov
in
push
aaa
push
std
in
outs
push
xor
sub
outs
std
pop
push
jb
nop
add
add
add
xor
movs
jle
test
loopne
xchg
loopne
inc
sub
sub
test
test
inc
push
popf
push
aas
push
push
cmp
pop
and
fwait
adc
sub
inc
dec
pop
xchg
cmp
sar
std
jl
in
push
jl
(bad)
push
jmp
pop
test
js
pop
xor
shl
movs
push
std
sub
in
xchg
std
fcomp
movs
jp
(bad)
mov
mov
ins
inc
and
jo
lea
jo
jo
pushf
pop
xor
ins
ins
inc
sub
push
arpl
jo
mov
je
cmp
mov
adc
aam
aam
dec
mov
fs
fs
or
std
fadd
push
and
mov
std
push
push
sbb
pop
xor
dec
test
std
pop
and
cmp
dec
pop
dec
or
push
pop
mov
pop
pop
(bad)
std
cmp
inc
std
push
adc
dec
dec
(bad)
aam
enter
inc
std
sbb
ficomp
cmps
cmp
stos
xchg
std
dec
test
cli
ins
std
test
push
push
sbb
inc
pop
jb
nop
inc
inc
inc
push
inc
xchg
retf
and
inc
stc
inc
jmp
xor
push
push
pop
add
sub
add
cmp
inc
cmp
fist
mov
xor
or
xor
cmp
sar
jb
sub
and
cmp
fisttp
adc
cmp
xor
sub
push
and
pop
stc
cmp
jo
push
dec
(bad)
aaa
cdq
inc
lea
int3
and
adc
mov
lea
ret
and
and
std
xchg
or
fadd
dec
add
addr16
stc
test
std
aaa
aam
daa
xor
pusha
int
imul
sahf
xchg
cli
cmp
mov
jmp
(bad)
fdivp
scas
dec
dec
out
mov
lds
mov
imul
xlat
data16
outs
cmp
sbb
fs
push
stc
push
cs
push
int
jle
inc
or
daa
push
add
add
adc
adc
inc
pop
into
dec
jae
add
or
gs
cmp
xchg
xor
ins
xor
xor
push
cmp
sub
popf
push
add
test
mov
loope
xchg
icebp
add
popf
dec
adc
pop
ret
mov
adc
add
pop
fist
ret
mov
or
inc
and
fistp
pusha
(bad)
push
jge
inc
int3
fwait
(bad)
mov
les
and
or
mov
push
mov
add
jmp
adc
cmp
sub
jne
push
add
xchg
add
xchg
jne
and
add
push
or
mov
lods
add
fimul
and
adc
jbe
jbe
jmp
jecxz
lds
sbb
adc
cmp
push
arpl
jo
push
push
pop
test
push
addr16
or
pop
sub
jo
push
adc
fyl2x
mov
loope
adc
pop
mul
add
push
jne
lock
pop
cmp
je
xchg
dec
mov
or
sbb
xlat
sub
add
mov
or
adc
add
divps
clc
adc
fs
ret
add
or
pop
or
xchg
je
pop
push
jae
cli
or
or
push
not
xor
sbb
or
pop
push
push
adc
xor
cmps
imul
add
pop
push
push
xor
addr16
jbe
xchg
or
or
add
xor
add
inc
or
cdq
dec
ins
outs
repnz
inc
sub
pop
or
adc
push
mov
cld
add
push
inc
or
aaa
or
mov
test
lahf
mov
sub
cs
nop
lock
pop
sbb
lods
or
or
sbb
dec
push
sub
mov
test
and
cld
cld
arpl
shl
loope
cmp
ss
add
cmp
loope
adc
add
cmp
jne
mov
or
ret
je
stos
mov
rcl
int
mov
xor
test
cli
idiv
and
add
nop
dec
jo
sbb
imul
push
adc
add
inc
jg
mov
and
imul
pop
xor
sub
pusha
mov
call
cdq
push
fstp
xlat
scas
sub
push
(bad)
sub
lods
add
inc
dec
push
lock
mov
pop
push
sbb
or
sbb
sbb
xchg
xor
jle
mov
or
fmul
mov
hlt
leave
xor
out
out
sbb
inc
xchg
sbb
out
sub
push
loopne
xor
add
mov
jno
sar
pop
adc
rol
call
mov
sti
test
test
push
mov
in
add
arpl
add
arpl
cld
inc
or
jmp
add
jmp
xchg
loop
and
mov
popw
cmps
sub
mov
dec
cmps
nop
nop
mov
or
or
inc
push
aaa
icebp
xchg
or
shl
shl
mov
mov
mov
cmp
jmp
cmps
jl
dec
rcr
cmps
smsw
mov
inc
push
into
mov
mov
cdq
lods
lods
mov
pop
inc
fldcw
nop
stc
add
nop
add
or
sub
ss
rcl
xchg
stc
mov
mov
pop
popa
xor
inc
and
adc
xchg
jmp
cmp
cld
adc
cdq
mov
or
out
out
mov
sbb
mov
adc
test
xor
mov
enter
or
out
adc
cmps
dec
shl
add
mov
add
imul
or
add
inc
pop
mov
xchg
movs
lea
or
fld
jno
iret
mov
inc
int3
pop
inc
adc
cmp
and
adc
shr
shl
push
adc
or
ret
adc
mov
loop
dec
(bad)
int3
sbb
jmp
jnp
mov
lds
dec
pop
pusha
and
fnstcw
mov
add
sub
lahf
aad
or
or
cmc
or
es
popa
mov
enter
das
or
or
push
rol
sub
ss
or
pop
inc
jb
or
pop
xlat
push
adc
mov
ja
ror
ret
sbb
jge
jmp
push
ins
jne
and
outs
inc
jg
sbb
sub
pop
mov
scas
int3
ror
ret
sahf
dec
(bad)
scas
sub
in
add
sbb
test
ror
mov
retf
cmp
jp
popa
jmp
mov
add
add
dec
inc
movs
pop
jne
rol
xor
or
enter
sbb
ins
add
fldcw
lock
cmc
inc
jne
fwait
add
add
lock
adc
sbb
xchg
pop
movs
ss
pop
xchg
push
out
inc
test
enter
test
mov
enter
push
pusha
or
xchg
popa
lds
mov
mov
(bad)
clc
xor
push
(bad)
jp
mov
fdiv
inc
push
les
add
mov
push
add
and
fcom
fcomp
(bad)
pop
dec
jmp
adc
pusha
test
dec
push
pop
jo
lea
push
sbb
push
or
add
jns
add
adc
and
mov
or
mov
xor
xchg
dec
repz
adc
lds
or
or
xchg
add
mov
sahf
cli
dec
jmp
add
std
jmp
pop
add
push
jmp
test
repz
arpl
cmp
(bad)
jno
fsubr
jno
sbb
jo
xchg
out
jae
call
iret
fcom
xchg
adc
scas
loope
sbb
in
mov
dec
test
mov
movs
cmp
adc
mov
add
sbb
popa
pop
inc
and
jb
sub
sar
push
movs
jns
jmp
mov
add
pusha
aas
pop
add
ds
add
jne
mov
cmp
retf
dec
pop
sbb
dec
rol
mov
ror
mov
add
pop
adc
cld
inc
mov
jne
lahf
popa
adc
mov
(bad)
loope
fsub
pop
xor
pop
push
mov
popa
es
les
out
adc
cld
shr
aaa
pop
mov
push
add
mov
int
fistp
or
adc
dec
es
mov
ret
add
add
mov
int3
inc
int3
imul
push
call
leave
add
and
rol
adc
arpl
das
jmp
add
dec
shr
das
sbb
fwait
inc
dec
inc
and
inc
popa
adc
loopne
xor
loopne
xor
rcl
or
or
and
clc
call
and
jo
sub
jecxz
push
and
pop
jnp
rcr
mov
and
mov
mov
int3
pop
push
add
lock
jo
daa
dec
push
inc
jo
add
pop
add
or
add
mov
jo
mov
dec
dec
or
mov
dec
test
jl
adc
cmp
push
jge
retf
pushf
xor
mov
cmp
add
pop
dec
adc
xor
or
stc
mov
cmp
je
mov
push
sbb
xor
cmps
xchg
xchg
(bad)
mov
dec
fbstp
or
adc
xor
stos
xor
mov
(bad)
jmp
add
mov
nop
aas
xor
push
mov
or
imul
and
adc
inc
or
and
lods
add
inc
lods
loope
sub
inc
xor
xchg
inc
stos
in
loope
sti
push
add
dec
pop
add
xor
inc
adc
and
movs
aaa
inc
cmc
cmp
sub
sbb
fdiv
dec
mov
cmp
pop
adc
std
out
rol
lahf
push
mov
sub
aaa
bound
test
sub
add
add
ds
add
add
or
mov
es
pusha
push
add
add
jge
popa
je
icebp
jnp
ror
les
pop
jmp
cmp
in
imul
and
jge
mov
mov
adc
jno
cmc
adc
lea
and
cmp
movs
xchg
and
lahf
or
fldcw
push
push
sahf
sbb
push
xor
inc
and
push
fstp
add
sub
pop
add
inc
xchg
push
mov
and
xchg
cmp
je
inc
or
jg
es
add
or
fbld
dec
pop
enter
xchg
shr
in
add
xchg
adc
loopne
mov
loopne
pop
js
cmp
mov
sub
in
add
(bad)
outs
inc
outs
pop
pop
bound
and
sub
cld
push
es
or
cmp
mov
inc
dec
call
sub
popf
leave
and
inc
jb
in
jo
sbb
adc
fiadd
inc
inc
sti
sbb
popa
or
mov
inc
leave
add
ret
xor
dec
daa
pop
ja
cmp
xor
je
dec
add
pusha
and
dec
retf
or
sbb
add
pop
shr
lahf
scas
or
loopne
mov
xchg
adc
clc
jnp
dec
rcl
jo
cwde
xchg
xor
ret
ja
shl
or
gs
adc
fst
fstp
repnz
rcr
aad
cmp
or
out
leave
adc
rol
test
jmp
fdiv
dec
std
ins
lds
arpl
inc
(bad)
dec
adc
sbb
hlt
mov
inc
xor
mov
or
xor
sbb
inc
cs
jae
pop
push
pop
dec
adc
add
mov
lods
mov
inc
add
xchg
inc
jb
int3
add
add
mov
ret
in
mov
adc
enter
mov
lock
mov
push
test
xor
lds
xlat
adc
mov
adc
in
mov
sub
cmovb
add
lods
xchg
mov
addr16
adc
mov
aad
dec
add
push
dec
(bad)
repz
cmps
sbb
ror
cmp
pop
pusha
xchg
add
or
arpl
add
or
adc
cmps
add
add
cmp
mov
pop
or
or
inc
pop
adc
inc
jg
adc
add
ror
mov
fst
test
add
popa
push
shr
rcl
pop
xchg
icebp
dec
or
jnp
xor
icebp
sti
pop
hlt
add
or
rcr
jmp
mov
popa
and
aas
lods
stc
push
xchg
pusha
inc
add
in
jb
pop
in
test
mov
ror
or
push
pusha
in
arpl
mov
loopne
mov
and
(bad)
cmp
add
push
pop
cmp
lods
cmp
daa
cmp
jo
inc
add
push
inc
push
or
inc
rcl
xchg
cmp
xor
push
scas
test
out
or
pusha
sub
sbb
inc
inc
loopne
jl
mov
loopne
cmp
jmp
xchg
adc
add
push
push
or
add
xchg
adc
pop
add
ds
mov
inc
xchg
dec
pop
dec
ror
les
and
xor
inc
out
sub
div
mov
pop
sub
enter
(bad)
je
in
jmp
jp
xor
adc
bnd
lea
lea
or
stos
xor
mov
jnp
int3
jecxz
inc
adc
pop
and
sub
(bad)
icebp
addr16
aad
mov
add
test
loopne
sahf
inc
add
(bad)
ret
ret
popa
repnz
xchg
enter
test
sbb
enter
jo
xchg
pop
out
mov
mov
add
sub
jno
or
arpl
push
jno
push
sub
loop
mov
lods
mov
div
and
and
and
and
shl
cmp
ds
inc
ret
push
ins
and
dec
mov
ss
and
adc
push
push
inc
and
data16
xor
add
lock
mov
or
push
shl
cmp
(bad)
retf
(bad)
jno
sbb
nop
sub
fcom
paddb
adc
xchg
add
xor
sbb
cmp
daa
jne
and
inc
and
push
xor
int3
scas
pop
or
es
sbb
das
adc
sti
sbb
add
sub
push
add
xor
sub
mov
add
pop
mov
mov
push
int
adc
sbb
dec
xor
cmc
int
mov
pop
dec
cmp
lock
js
mov
(bad)
out
(bad)
push
test
sub
mov
pop
ss
adc
cmps
xchg
sbb
and
dec
add
pop
mov
sbb
fadd
mov
loopne
push
cmp
fs
push
mov
scas
sub
push
hlt
cmp
xchg
mov
add
(bad)
or
loopne
cwde
rcl
cs
das
mov
xlat
popa
inc
pop
push
xor
test
je
retf
mov
sub
div
adc
shl
jne
jmp
fwait
es
loop
sar
jge
movs
add
or
in
jle
mov
sub
rol
push
add
jg
(bad)
int3
and
inc
adc
shr
add
in
pop
shr
mov
push
sub
xchg
outs
cmp
lock
push
mov
jecxz
das
cmp
add
or
mov
bound
dec
mov
or
xor
sbb
mov
mov
dec
xchg
test
or
neg
(bad)
pop
popf
mov
mov
cld
inc
jno
mov
sbb
dec
adc
lea
movs
adc
sbb
add
test
inc
ror
jle
sar
adc
inc
push
or
(bad)
pop
sti
sbb
out
out
xchg
and
mov
and
das
sti
lea
xor
mov
adc
scas
mov
adc
inc
add
and
sbb
rol
jae
push
fld
xchg
sbb
jle
adc
mov
push
jbe
inc
adc
push
and
test
mov
sbb
and
arpl
mov
fwait
test
loopne
imul
push
or
out
dec
cmp
(bad)
data16
scas
ins
loopne
fsubrp
push
xchg
fist
sbb
in
retf
addr16
rcl
mov
jmp
ret
pop
pop
add
and
inc
sbb
inc
pop
add
add
jo
dec
(bad)
pushf
sub
inc
sub
or
scas
fistp
add
cmp
xor
dec
jne
loopne
xor
mov
pop
mov
clc
mov
cdq
sub
mov
cmc
mov
jnp
inc
sub
and
lahf
enter
lea
sar
leave
xor
pop
sub
shr
imul
retf
mov
aaa
xor
fcmovnb
rol
sbb
test
cld
cmps
sub
repz
sbb
push
or
adc
or
xchg
mov
fcomp
inc
mov
loopne
das
ds
out
fst
adc
and
xor
pop
or
icebp
xchg
add
inc
retf
fild
jmp
push
add
popf
mov
dec
ins
data16
clc
out
in
and
sub
push
xchg
add
imul
xchg
sbb
jl
pop
out
out
ins
or
mov
jo
add
in
push
cwde
add
add
sbb
fcmovbe
pop
outs
sbb
adc
dec
push
xor
jo
push
and
(bad)
scas
shr
xchg
jo
nop
sub
mov
mov
mov
pop
or
inc
movs
add
dec
sub
or
loope
dec
or
ins
dec
adc
fistp
scas
int
xchg
mov
jmp
xchg
cdq
xchg
xor
adc
shl
inc
sbb
inc
out
or
add
xor
jg
adc
cmp
mov
xor
or
pop
xor
test
lock
cmp
cmc
sbb
add
adc
and
mov
test
repnz
xchg
push
sbb
jae
jmp
loope
retf
sub
or
mov
mov
lods
or
inc
sbb
pop
fistp
and
add
mov
iret
inc
and
js
xor
or
fist
fbstp
xor
leave
inc
inc
lods
add
xchg
sbb
mov
mov
jmp
jl
xor
mov
pop
adc
cmp
inc
ins
adc
inc
(bad)
mov
cmps
push
mov
dec
arpl
cwde
mov
xchg
inc
mov
fadd
fcom
mov
push
push
sti
push
pop
sub
sub
scas
mov
ds
push
sbb
cmps
sub
and
js
xor
rcl
test
xchg
and
add
add
xor
fistp
mov
adc
xchg
push
daa
inc
ss
adc
mov
retf
adc
jb
mov
mov
loop
mov
sbb
inc
adc
jae
or
rol
mov
mov
add
add
outs
in
call
add
mov
add
outs
test
inc
adc
stc
or
mov
mov
mov
inc
sub
pop
imul
scas
mov
inc
xchg
xchg
adc
mov
and
xor
cmp
mov
pop
xchg
pop
push
lods
xchg
or
enter
icebp
les
rdmsr
in
mov
jecxz
lods
sbb
(bad)
cdq
(bad)
sub
add
or
cwde
add
mov
stc
add
ror
jno
dec
pop
inc
in
inc
shl
push
cmp
or
ja
stos
bound
adc
dec
shl
sbb
aad
pop
cdq
jmp
add
nop
jne
(bad)
mov
and
or
sbb
jne
adc
add
or
mov
xor
fist
cld
and
pop
and
adc
test
sub
dec
sbb
jae
add
int3
ret
or
or
dec
dec
pop
pusha
dec
or
sub
lea
sbb
xor
bound
jecxz
pop
or
jnp
mov
ret
sub
ret
enter
sub
cmp
jne
cmps
xor
push
rcl
movs
or
push
xchg
data16
push
clc
shl
push
xchg
out
loop
pusha
ins
cdq
jno
dec
or
push
imul
or
or
out
push
jmp
pop
sbb
jbe
adc
adc
xchg
fld
out
push
sbb
inc
inc
and
ja
mov
lea
sub
cmp
(bad)
jae
mov
pop
push
out
jae
mov
dec
retf
movs
adc
mov
cmp
add
inc
in
mov
add
sbb
xchg
arpl
cli
mov
pushf
push
(bad)
call
sub
push
cmp
cmp
push
sbb
ins
stc
imul
sub
mov
inc
icebp
cmp
mov
pushf
xor
cs
xchg
dec
push
mov
imul
popa
js
xlat
sbb
pop
dec
lods
mov
lea
lea
cdq
shr
test
scas
test
lock
xor
jne
stos
inc
cmp
outs
cmp
xchg
or
sub
cmps
lock
inc
es
loop
add
in
sti
shl
or
xchg
adc
imul
outs
outs
add
mov
xchg
and
or
adc
jnp
or
push
mov
fs
jns
lea
test
cmp
popf
ja
popa
and
(bad)
rol
ja
sbb
sbb
clc
fld
in
ret
std
mov
mov
lea
cmp
enter
push
aam
cmp
push
jb
out
fsub
jb
retf
adc
sub
sbb
loope
mov
repz
das
mov
fdivr
mov
pop
das
dec
push
mov
push
cmp
addr16
add
add
das
cdq
mov
cmp
and
dec
mov
not
xchg
sub
ss
jg
lea
arpl
sub
fldcw
cmps
jbe
cmp
or
mov
cmp
popf
aaa
js
(bad)
ret
out
jmp
sbb
xchg
sbb
pop
pmaddwd
add
retf
stc
cmp
sbb
and
jne
pushf
sub
lods
cmp
and
or
ds
jmp
sub
adc
push
js
lods
sbb
push
pop
shr
jmp
mov
push
or
lods
mov
add
sbb
cdq
inc
adc
xor
dec
repz
push
or
sub
test
push
cdq
cmp
mov
fwait
push
jg
xchg
pusha
cmp
lahf
rol
inc
rcl
pop
das
inc
xor
sub
and
cmc
or
inc
jmp
add
movs
lds
or
out
icebp
loop
mov
call
es
mul
lods
test
sub
add
dec
xchg
ror
inc
stc
lock
add
clc
aam
push
sub
adc
pop
or
cli
add
arpl
pop
shr
lods
mov
adc
es
(bad)
or
mov
or
push
cld
dec
or
push
adc
ss
les
add
or
mov
ja
out
mov
xchg
jae
push
add
jne
das
adc
mov
je
test
jo
pop
jmp
sub
sbb
xchg
fcom
lods
retf
inc
test
xor
or
push
loope
mov
cmp
jbe
and
or
adc
xor
inc
xchg
mov
mov
mov
adc
ret
or
test
iret
inc
push
loop
jmp
or
jns
sbb
sub
push
push
push
sub
int
rcl
lea
xchg
pop
popa
(bad)
arpl
xchg
ror
dec
add
pop
and
fnstcw
xchg
or
and
imul
test
sub
test
add
xor
movs
rol
rcl
pop
inc
dec
sub
jbe
inc
outs
push
push
xchg
in
jmp
sbb
stc
add
pushf
sub
pushf
inc
xor
push
mov
loope
sub
or
test
sub
add
dec
add
jb
adc
in
cmp
pop
add
cdq
xor
dec
iret
xor
push
and
movs
imul
mov
and
and
xchg
or
jnp
or
in
inc
pop
xchg
inc
jg
mov
call
scas
add
dec
popa
or
pop
popf
sub
and
add
and
jb
add
loop
dec
lock
cld
mov
fdiv
or
push
dec
rcl
adc
adc
test
and
movs
jo
ins
add
rol
ds
ret
pop
jne
fisttp
in
rcr
sbb
aad
pop
xor
nop
xor
je
inc
pop
inc
lea
test
popf
sbb
jmp
dec
popf
aas
add
stos
pusha
lods
inc
adc
jne
pop
inc
in
xchg
mov
xchg
cld
mov
or
jmp
pop
je
test
int3
shl
xchg
add
push
(bad)
aad
mov
je
inc
add
lock
sub
cwde
ret
add
jecxz
sub
(bad)
ja
mov
add
mov
push
inc
xor
add
adc
sti
cmp
mov
or
mov
push
add
hlt
scas
pop
(bad)
inc
xchg
hlt
imul
xchg
out
hlt
dec
push
fst
sahf
and
and
push
jns
cmp
push
sbb
dec
push
and
or
adc
mov
push
xor
sub
ret
inc
or
dec
xchg
jp
test
test
cmc
sub
adc
stos
mov
sbb
stos
pop
jo
ret
jp
and
outs
shr
(bad)
les
and
test
xchg
or
adc
lock
fst
adc
sar
mov
scas
cmp
mov
rcr
loope
sub
sahf
in
sub
mov
test
rcl
pop
call
add
and
popa
push
movs
dec
ja
mov
imul
call
sub
inc
add
idiv
lods
pop
add
std
jns
ss
pop
push
dec
and
mov
adc
mov
add
jnp
int
add
ins
loopne
movs
adc
jmp
push
mov
mov
and
add
fldenv
cld
xor
add
lds
xchg
xchg
add
adc
fidiv
jge
scas
dec
cmp
jne
cmp
dec
aaa
add
mov
or
test
js
adc
xchg
mov
outs
add
mov
sbb
shl
add
sub
push
mov
loopne
mov
jge
inc
ret
mov
or
mov
lea
scas
xchg
loopne
retf
jo
pop
je
dec
push
cwde
add
addr16
inc
out
sub
aas
sub
mov
or
sbb
pushf
rcl
mov
sub
pop
xchg
and
add
xor
adc
cmps
xor
stc
cmp
xor
add
ror
retf
push
and
add
push
lahf
(bad)
jg
mov
mov
or
aaa
push
jb
inc
jg
es
xchg
cmp
or
sub
or
xor
or
js
mov
test
inc
loope
or
ror
dec
inc
adc
jg
fistp
sbb
xor
test
sub
xchg
pop
repz
sar
lds
dec
adc
push
mov
push
loope
pop
xor
mov
push
adc
mov
and
mov
jo
xchg
fldenv
mov
lds
pop
or
mov
or
sbb
add
cs
dec
mov
in
dec
add
ss
xor
hlt
add
add
cmp
movs
xchg
or
xlat
inc
mov
mov
adc
call
in
sub
cmp
sar
xor
pop
sbb
loope
jge
stos
pusha
in
pop
sub
cmps
fs
push
sbb
pushf
sub
add
cmps
mov
or
add
(bad)
or
repz
pop
cmc
xlat
sti
or
inc
aas
and
inc
and
scas
and
jnp
iret
push
or
push
loopne
mov
or
mov
and
lahf
or
inc
mov
mov
pop
and
rcl
push
pop
xor
mov
adc
adc
in
adc
(bad)
or
(bad)
cdq
les
xchg
stc
mov
lock
lods
jmp
pop
and
inc
enter
dec
jl
les
xor
dec
inc
imul
jle
pop
imul
cmp
pop
sub
mov
push
xchg
push
add
add
ins
adc
adc
je
les
daa
add
inc
dec
adc
test
sbb
mov
rcr
add
daa
mov
push
push
jg
pop
and
cmp
and
(bad)
jmp
sub
mov
xor
xor
nop
mov
cmp
or
and
movs
adc
sbb
or
adc
adc
dec
movs
adc
aam
mov
call
pop
add
add
push
stos
pop
or
xor
pop
xchg
cs
sub
fadd
mov
cs
sahf
adc
inc
movs
fild
sub
pop
pop
add
pop
movs
cld
xor
fbld
nop
mov
add
and
xor
arpl
jae
mov
push
cmp
lods
call
or
push
jo
icebp
je
sbb
xor
add
rol
loopne
push
push
push
cs
xor
dec
xor
retf
xor
add
inc
jns
imul
inc
popf
cs
movs
inc
daa
adc
add
fdiv
enter
inc
jmp
neg
test
loop
imul
cmp
inc
add
cs
fdivp
add
sbb
xchg
out
mov
movs
push
mov
sbb
pop
mov
pop
test
jge
add
xor
dec
add
mov
or
add
inc
xchg
dec
pop
mov
push
push
lods
dec
xor
int
loope
xchg
add
fadd
or
and
(bad)
sbb
daa
jl
int
or
aaa
jle
sub
cmp
mov
xchg
fadd
jns
push
imul
pop
mov
jle
addr16
jge
pop
mov
add
mov
bound
retf
mov
enter
add
(bad)
cs
mov
jmp
pushf
out
or
cdq
cwde
add
(bad)
test
or
push
cmp
xor
fwait
push
jecxz
mov
sbb
mov
cmp
mov
js
and
lock
clc
std
inc
xor
ins
ins
jp
sbb
xor
(bad)
mov
add
mov
shr
add
add
cmp
or
and
xor
lahf
push
push
lock
and
mov
sub
push
leave
pop
mov
cmp
mov
push
shl
movs
fwait
imul
inc
ret
lock
imul
and
sbb
mov
and
in
jle
xor
in
or
pop
jmp
xor
sub
pop
call
sbb
jo
sub
dec
inc
mov
fmul
(bad)
xlat
or
sub
sub
cmp
add
xor
or
mov
xchg
add
pushf
test
xor
sbb
jae
cli
scas
jb
or
mov
add
cwde
jp
call
jmp
cmp
mov
jmp
icebp
pop
mov
add
push
inc
add
mov
add
and
pop
dec
jmp
dec
or
mov
out
push
test
mov
mov
pop
inc
dec
mov
pop
ins
aaa
xor
(bad)
mov
pusha
cmp
ss
outs
push
or
mov
test
mov
mov
adc
inc
mov
shr
jnp
call
sbb
jge
fcmovnu
retf
rol
sbb
jne
sub
push
retf
es
add
dec
fmul
mov
pop
retf
mov
xchg
movs
and
sahf
ins
push
mov
push
or
inc
sub
push
cmp
or
xchg
jnp
call
or
pop
xchg
test
add
cmp
push
push
push
pop
inc
add
or
(bad)
sub
imul
test
adc
int3
cdq
pop
mov
ds
mov
sbb
mov
xor
or
pop
test
adc
or
and
and
inc
adc
push
test
mov
out
loope
pop
sbb
add
mov
imul
test
mov
test
fsub
dec
inc
sub
loopne
or
js
inc
repz
push
adc
mov
jmp
or
scas
stos
jg
dec
mov
out
dec
lods
or
test
inc
call
mov
sub
cld
sbb
add
or
movzx
shl
add
and
mov
push
sub
in
jne
inc
jg
sub
js
adc
in
jne
and
inc
inc
arpl
or
loope
jmp
inc
int3
add
xor
test
lods
add
or
inc
xchg
clc
imul
test
or
sahf
adc
mov
ret
jle
xchg
sbb
cdq
sbb
inc
fist
or
pop
jg
and
iret
add
fdiv
mov
stc
push
or
movs
and
adc
mov
sahf
mov
pop
rcr
jg
imul
add
jnp
fldcw
xor
push
ret
add
push
(bad)
sar
arpl
ins
test
add
mov
jmp
stc
push
adc
inc
pop
pop
lods
lds
ror
push
vpsubd
shl
sbb
adc
xor
sbb
add
mov
and
call
push
sbb
xchg
sbb
(bad)
pushf
adc
sbb
dec
cld
add
arpl
aas
pusha
xchg
clc
imul
or
leave
pusha
(bad)
cmp
push
mov
ss
out
imul
jmp
adc
in
sub
cmps
and
pop
mov
aam
add
or
pop
push
and
ret
cdq
mov
cmp
mov
test
in
or
add
push
(bad)
in
and
and
add
movs
or
xor
xchg
lahf
sbb
push
push
push
cmp
pop
push
cmps
lea
add
xor
cld
dec
clc
or
and
sub
je
(bad)
shl
and
adc
hlt
jae
sub
xchg
add
ret
xchg
out
adc
pop
sub
dec
inc
loopne
rcr
mov
adc
cmp
or
and
out
mov
dec
or
in
sub
adc
push
inc
push
jl
xchg
add
mov
in
outs
or
cmp
sub
adc
xor
xchg
or
test
xor
dec
shr
mov
and
data16
adc
or
add
hlt
into
xor
outs
add
in
pop
sbb
dec
adc
ret
xlat
repz
mov
mov
mov
mov
out
dec
or
push
push
or
or
or
jnp
or
adc
xchg
ins
sbb
add
adc
adc
ja
dec
inc
enter
mov
mov
iret
sub
and
and
cmp
les
fwait
ret
clc
push
sahf
or
jl
mov
pusha
sbb
mov
dec
sbb
pop
inc
jmp
add
pop
add
sub
jmp
jae
mov
xor
and
cmp
rcr
outs
popa
test
inc
fadd
call
and
das
repz
cwde
int3
loopne
shr
scas
sub
xor
add
call
daa
loope
or
mov
jmp
sub
mov
popa
sub
push
dec
cmp
das
mov
hlt
das
daa
sub
push
or
sub
jmp
jmp
movs
jmp
inc
push
fs
or
push
cmp
add
mov
popa
push
push
mov
(bad)
sub
mov
cmp
mov
or
(bad)
stos
add
pusha
jecxz
xor
inc
div
add
and
js
ret
adc
adc
add
arpl
pop
or
pop
adc
push
xor
fwait
xor
lods
inc
dec
cmps
sbb
ror
mov
or
movs
mov
and
and
xor
adc
jne
xchg
and
test
jle
mov
mov
pop
or
scas
mov
into
nop
inc
push
fcmovnu
sbb
mov
shl
pop
or
shr
popf
mov
mov
movs
mov
add
bound
daa
pop
test
mov
jle
out
jbe
nop
test
pop
mov
inc
and
pop
and
add
mov
adc
cmp
cmc
aam
jge
add
jmp
dec
pushf
movs
adc
xchg
or
sub
lea
aam
mov
jb
nop
xor
les
add
xchg
xor
push
pop
jg
add
ja
push
push
sbb
pop
fbstp
inc
jge
and
les
ret
xor
loope
xchg
pop
jmp
movs
test
icebp
pop
xchg
adc
mov
sbb
pop
mov
int
add
rcl
mov
xor
push
dec
cli
cmp
cmp
call
mov
fsubr
fsubr
push
js
outs
dec
in
sub
and
aad
mov
sbb
movs
xor
mov
xchg
gs
inc
xor
dec
cmp
nop
jb
jl
cs
push
arpl
mov
cmp
jge
pop
and
sbb
xor
mov
int
xor
mov
aam
imul
jbe
(bad)
fiadd
je
neg
push
ds
sub
xor
and
xor
pop
push
mov
add
ds
xchg
(bad)
lea
test
cwde
xor
imul
xchg
add
add
add
pop
push
mov
push
popf
pop
sub
push
and
xor
test
pusha
ins
ret
dec
lahf
and
enter
mov
cs
dec
jne
sbb
and
push
daa
cmp
inc
add
push
xor
aaa
lods
inc
loopne
jo
stc
add
test
dec
add
call
inc
cld
mov
popf
cmps
jl
adc
mov
fiadd
out
jnp
lea
ja
push
aas
in
rcl
jmp
inc
or
pop
arpl
add
or
(bad)
fsubr
mov
cld
or
inc
push
add
or
pop
(bad)
(bad)
push
xchg
shl
rcr
rol
dec
test
and
or
sbb
adc
add
fst
cli
aaa
or
cmp
scas
mov
xor
xor
les
mov
ret
cmp
jg
mov
mov
dec
cmc
dec
add
int
(bad)
pusha
daa
test
jl
and
adc
ss
add
and
fdiv
xchg
and
icebp
dec
fnstenv
pop
mov
or
gs
or
pop
dec
dec
rol
or
push
and
xor
add
sub
es
dec
jne
jmp
test
sub
fidivr
add
sbb
dec
rcl
xchg
xchg
or
jp
mov
pop
pop
enter
push
jle
rol
push
lods
add
imul
data16
js
pusha
cld
jp
les
in
add
and
and
imul
sub
cmp
xchg
(bad)
sub
adc
adc
or
mov
or
enter
add
lods
gs
int3
or
mov
aam
pop
fwait
sub
rcr
cmps
je
cmps
lea
push
inc
test
or
and
mov
mov
push
retf
adc
rcr
sbb
or
fnstenv
ret
add
push
ret
jmp
ret
jge
cli
fcom
in
(bad)
fcmovnbe
fsub
mov
jb
pop
ficomp
push
(bad)
leave
adc
fadd
loop
fcomp
popa
ret
sub
push
mov
ficomp
ficomp
cmp
mov
loop
popf
inc
push
adc
jecxz
pusha
ror
loop
loop
rcl
iret
loopne
sub
xor
mov
fcmovb
fnstcw
daa
das
lock
sub
adc
daa
loopne
xchg
or
inc
mov
lds
jno
mov
mov
adc
test
movs
adc
add
xchg
pop
add
adc
or
aad
add
daa
or
inc
cmp
jno
loop
fwait
add
repnz
push
cld
pop
or
and
out
push
rol
aas
and
out
outs
cmps
xor
pop
inc
xor
ret
dec
sub
xchg
loopne
lods
sbb
jmp
push
or
or
aas
pop
cvtpi2ps
adc
sub
cli
sub
in
pushf
test
push
loope
sbb
and
pop
mov
mov
shl
xchg
jmp
add
xchg
mov
pop
call
mov
arpl
push
cwde
mov
push
push
xchg
jb
and
cwde
test
lea
pusha
push
jb
and
add
dec
mov
imul
in
xchg
cmp
sub
sub
and
add
pop
test
and
sbb
xchg
jmp
dec
inc
and
xor
repz
inc
js
and
adc
sbb
cwde
loope
lock
or
(bad)
mov
inc
sub
test
mov
jle
adc
(bad)
xchg
add
pop
movs
inc
(bad)
xor
sub
or
mov
cwde
cwde
push
test
xor
xor
xor
xchg
lods
nop
and
movs
push
sub
xchg
xor
movs
or
js
add
cmp
push
movs
inc
gs
xchg
xor
adc
(bad)
xchg
pusha
adc
xor
dec
sbb
loope
pop
cmp
sub
pop
cmp
aam
mov
or
aas
xor
push
ficom
aam
jmp
add
fyl2xp1
jmp
and
adc
test
inc
and
dec
inc
and
add
cmps
adc
jmp
clc
xor
int
jmp
in
dec
in
mov
test
jae
inc
(bad)
cmp
cmp
dec
mov
push
push
jmp
inc
movs
into
ds
and
push
sbb
aaa
inc
iret
push
call
jmp
shl
jge
out
mov
jge
xor
xor
jle
xchg
hlt
shl
(bad)
retf
pop
sahf
fdivr
test
push
add
outs
cmp
jmp
push
cmp
cs
mov
cmp
lock
xchg
fsub
pop
xor
push
lock
lock
mov
lea
bswap
and
or
jl
cmps
dec
lock
out
or
dec
cmp
or
sub
or
pop
or
cdq
in
es
or
mov
mov
fsub
jns
(bad)
push
pop
push
pop
cmps
in
lock
push
(bad)
push
fimul
mov
mov
(bad)
nop
popf
sub
pop
and
cmovo
ret
dec
dec
and
inc
rol
cmp
xchg
pop
jne
pop
dec
aaa
in
ins
fsubr
inc
jnp
sbb
outs
sbb
dec
mov
retf
jmp
sbb
or
mov
add
aas
add
add
popa
imul
sub
jle
inc
or
adc
or
push
add
or
mov
pop
cmp
imul
dec
adc
adc
adc
aaa
dec
adc
and
clc
mov
fadd
jne
(bad)
es
test
cwde
add
imul
xchg
xor
push
push
mov
ja
inc
mov
adc
loopne
add
enter
(bad)
adc
ret
arpl
add
or
repz
push
ret
hlt
and
jle
lds
lock
and
add
clc
jne
mov
in
mov
jno
shl
and
xchg
xchg
lock
ins
mov
inc
lea
mov
pop
pop
pop
push
or
or
push
xlat
das
ret
fst
ror
jmp
cmp
mov
fst
mov
and
and
in
int3
adc
or
loope
pop
inc
adc
sbb
or
mov
push
aas
jg
nop
pop
repnz
call
pop
dec
sbb
hlt
fild
push
fwait
jg
jmp
push
pop
cmp
push
neg
neg
mov
push
jg
push
fiadd
dec
pusha
idiv
scas
dec
sbb
push
or
ss
neg
inc
test
in
jb
neg
pop
div
and
xchg
push
not
inc
adc
inc
pop
shl
xchg
clc
sub
push
test
and
or
sub
push
jmp
sbb
test
lock
jmp
xchg
pcmpeqb
call
mov
jl
add
iret
push
cmps
dec
xor
push
cdq
mov
mov
add
pop
mov
pop
push
jne
fbld
icebp
in
sub
pop
inc
add
jns
or
xchg
dec
inc
mov
jecxz
icebp
daa
jbe
ror
icebp
pop
add
xor
and
(bad)
fpatan
dec
add
or
(bad)
mov
js
jb
jp
pop
and
cli
jmp
mov
add
xor
loope
push
jge
shr
xchg
or
js
bound
inc
in
jge
sub
xchg
adc
sub
push
inc
adc
lock
adc
push
or
dec
js
add
jo
cmp
adc
or
jl
(bad)
and
add
lock
push
push
inc
pop
hlt
push
jns
sbb
cvtpi2ps
das
lds
inc
or
inc
ds
push
dec
or
les
mov
inc
inc
or
adc
adc
jmp
jecxz
sub
or
cdq
add
inc
in
and
pop
dec
inc
gs
add
lock
xor
push
xchg
rcr
or
mov
test
loop
adc
jp
push
push
xchg
xchg
jle
lock
jno
push
out
jge
sub
imul
or
or
jno
sbb
sti
jno
xor
mov
and
jmp
rol
clc
sub
push
lahf
imul
or
mov
clc
jge
jnp
bound
mov
mov
xchg
add
test
adc
sbb
xchg
test
ret
rol
pop
pop
nop
into
or
repz
pop
add
push
add
sub
sub
inc
cmps
hlt
mov
jmp
mov
push
cld
add
pop
ret
fld
aas
inc
inc
test
jecxz
dec
sub
pop
or
or
inc
or
pop
mov
adc
xchg
test
dec
mov
sysret
and
push
pop
push
les
fldenv
jmp
sbb
mov
fadd
and
nop
pop
and
and
push
fistp
cwde
ds
mov
dec
or
and
fadd
mov
test
xor
jmp
and
and
clc
or
pop
mov
in
pop
or
adc
inc
call
adc
leave
adc
xor
jb
sti
out
enter
movsx
or
out
mov
jmp
mov
mov
pop
bndldx
mov
nop
cwde
push
mov
dec
test
daa
push
jmp
push
add
xor
sub
in
ins
retf
dec
jo
aas
ja
and
or
pop
lahf
movs
nop
dec
sbb
inc
cmp
hlt
cmps
add
xor
cmp
add
daa
xor
add
(bad)
sti
pop
jns
or
icebp
mov
xchg
mov
(bad)
jle
or
dec
scas
loopne
sbb
pop
shl
add
or
push
pop
(bad)
and
cmp
or
loopne
mov
adc
ror
dec
adc
clc
mov
and
aam
jmp
push
and
or
imul
xor
es
test
jp
call
add
shl
js
sub
add
add
cs
xchg
ret
mov
sub
pop
call
push
xchg
cmc
cmp
push
shl
add
add
fistp
cdq
stc
pop
or
add
test
test
loopne
dec
retf
sub
or
and
adc
in
popa
inc
ret
or
and
or
mov
inc
mov
ror
push
rcr
addr16
or
cmp
dec
xor
and
sub
pushf
nop
(bad)
je
sub
and
and
rcr
mov
inc
test
cld
loopne
jl
and
lods
dec
sar
cmp
scas
add
gs
sub
adc
sbb
push
test
add
and
add
xchg
mov
inc
sbb
lahf
test
fmul
inc
sbb
jg
(bad)
mov
hlt
mov
cmp
or
pop
mov
call
jno
gs
and
stos
push
test
es
add
cmp
aam
and
and
sub
das
or
mov
fld
xchg
imul
adc
add
ret
sub
pop
test
inc
jecxz
or
outs
xchg
push
out
jne
and
and
jle
or
test
or
mov
mov
lock
cld
dec
lock
lods
add
push
mov
invd
cmp
das
sbb
add
mov
push
or
shl
mov
popa
inc
clc
xchg
or
call
ins
add
inc
sbb
inc
xchg
or
psubusw
loopne
adc
mov
push
stc
lock
data16
add
dec
lock
xchg
adc
jne
pop
dec
ror
push
push
pop
test
dec
xchg
or
clc
sbb
jo
shr
mov
shl
push
xchg
jb
and
test
adc
rol
test
add
or
adc
and
bound
cmp
sbb
rcl
out
icebp
mov
add
arpl
mov
and
sbb
push
sub
and
mov
jns
inc
add
movs
xchg
add
mov
nop
stos
add
aas
addr16
sbb
xchg
xor
push
mov
je
lods
sbb
pop
enter
mov
in
xor
sbb
dec
cmp
inc
jecxz
in
fwait
push
cmps
add
cmps
adc
sbb
repz
xchg
je
xor
rcl
adc
cmp
or
in
pop
push
mov
add
xor
or
mov
add
das
xchg
adc
test
sbb
ret
sub
xor
test
sbb
jmp
mov
enter
add
push
xor
dec
and
inc
xor
ret
push
mov
add
pop
not
push
add
lods
sbb
rcr
mov
or
mov
daa
dec
inc
sub
pop
xchg
rcl
sub
mov
jmp
or
loopne
test
in
and
push
push
or
push
cwde
shl
cmps
mov
pop
inc
cmp
and
cmp
adc
xor
sbb
cmp
jge
inc
sub
sub
dec
call
and
cmp
cmp
cmp
inc
movs
cmp
inc
inc
inc
inc
cmp
or
dec
call
and
movs
cmp
dec
movs
cmp
pusha
dec
fs
cmp
sub
dec
call
and
movs
cmp
cmp
mov
and
test
mov
mov
cs
leave
in
inc
xchg
inc
inc
jb
dec
cwde
sub
xchg
retf
pushf
sub
pop
cmps
nop
cld
movs
and
mov
popa
push
add
dec
mov
adc
enter
(bad)
pop
pop
scas
lods
add
add
add
jno
mov
add
xchg
rol
ret
add
loopne
sub
pushf
sbb
xor
sbb
jbe
or
xchg
mov
sub
sbb
sbb
sbb
and
xchg
inc
inc
dec
sbb
push
and
xchg
and
xchg
and
xchg
pusha
fs
ins
jo
sbb
xchg
and
mov
sub
xchg
test
add
ret
sbb
leave
aad
push
mov
pop
leave
xchg
pop
xchg
cwde
pushf
xchg
pop
leave
xchg
mov
enter
lods
les
xor
movs
(bad)
outs
imul
or
jne
xchg
xchg
js
push
push
sbb
push
sbb
sbb
daa
xor
mov
or
mov
cmps
test
pusha
cmp
mov
jno
lds
sbb
adc
lea
loopne
add
sti
or
in
aaa
push
fist
jge
aad
xchg
or
lods
scas
xor
sar
sub
popf
inc
xor
inc
pusha
mov
ret
call
out
xchg
push
out
push
loopne
ror
xor
adc
cmp
dec
test
mov
xor
fcom
sub
in
out
cmp
add
rcl
pushf
pop
dec
or
inc
pop
inc
jge
fisttp
pop
mov
xchg
mov
imul
ins
push
push
jecxz
cmp
dec
or
cmp
sbb
or
pop
inc
pop
sub
push
adc
adc
rol
pop
cwde
add
sbb
mov
retf
clc
mov
xor
(bad)
and
imul
iret
je
shl
rol
sub
sbb
das
sub
arpl
in
cmp
push
push
xor
test
dec
clc
xchg
(bad)
fldcw
enter
add
xor
xchg
std
cwde
push
sub
xchg
push
pop
push
mov
add
mov
call
inc
mov
aad
movs
mov
jne
add
inc
bound
cwde
sbb
lods
and
jae
shr
fimul
xchg
inc
adc
adc
(bad)
and
sbb
and
inc
jmp
sbb
push
int
rcr
push
sub
imul
sub
push
xchg
out
sub
out
imul
push
sub
push
xchg
push
das
push
add
and
je
xor
in
adc
dec
dec
sti
jns
sbb
dec
pop
inc
mov
add
ror
mov
sbb
rep
pop
adc
add
ror
mov
push
test
loopne
add
das
inc
enter
lock
pop
xchg
jmp
in
add
sbb
in
cmp
in
inc
push
(bad)
loopne
xchg
pop
leave
mov
jb
and
call
lahf
mov
imul
jl
and
sbb
cmp
dec
mov
icebp
mov
inc
cmp
cmps
test
push
fiadd
mov
hlt
dec
adc
inc
dec
add
and
xor
iret
mov
or
mov
add
jmp
scas
add
adc
add
xchg
adc
push
not
and
lods
mov
inc
xchg
mov
and
test
and
and
dec
and
and
loope
xor
(bad)
stc
sbb
sub
adc
adc
cdq
adc
xor
cwde
push
push
mov
mov
push
push
push
pop
adc
sub
mov
adc
or
mov
(bad)
sbb
cmps
and
jns
(bad)
dec
or
sub
sub
pop
jno
mov
pusha
adc
mov
inc
push
daa
fadd
pop
pop
cli
and
movs
lock
mov
(bad)
int
adc
and
loopne
push
(bad)
dec
mov
adc
add
cwde
adc
push
xchg
push
sub
test
push
push
dec
or
repz
in
add
mov
push
es
push
inc
call
and
mov
pop
sub
push
test
xlat
push
ret
stc
inc
dec
xchg
mov
xchg
inc
mov
dec
add
jl
movs
and
icebp
sub
sub
popf
push
inc
or
xchg
sbb
or
mov
cdq
add
enter
loop
sbb
add
pop
lods
pop
pop
inc
loope
js
int
sbb
inc
pop
inc
sub
dec
push
adc
or
pop
loopne
or
sbb
rol
cmp
mov
jl
dec
inc
(bad)
rol
or
or
push
mov
cmp
jmp
dec
aam
pop
in
and
add
scas
add
pop
or
movs
inc
lahf
mov
rcl
and
xchg
dec
push
es
cs
stc
test
mov
mov
ret
dec
cli
inc
mov
jo
test
aas
add
push
add
stos
fcomp
or
jae
or
dec
rol
or
ret
and
and
sub
xchg
lock
cmp
lock
std
sub
inc
sbb
fisub
inc
add
or
inc
and
inc
mov
or
(bad)
xlat
pop
fdiv
(bad)
loope
sub
add
test
pop
gs
mov
mov
pop
xchg
rol
xchg
push
or
or
clc
jmp
dec
jmp
sub
or
popa
or
pop
dec
clc
add
movs
add
sbb
cmp
daa
dec
adc
xor
mov
pop
cmp
hlt
push
pop
jmp
adc
or
xor
(bad)
and
dec
fcmovbe
or
add
daa
lock
dec
sub
fadd
push
dec
out
pop
jne
sbb
fnsave
mov
test
pop
sbb
sbb
push
les
xor
leave
push
xchg
jle
jo
push
mov
add
or
push
enter
jmp
pop
push
xor
push
cld
scas
push
fadd
xor
movs
push
mov
jb
js
sbb
adc
enter
sbb
xchg
adc
nop
pop
scas
retf
lea
adc
shr
or
jne
jge
or
movs
add
cld
sub
add
sbb
popf
sub
inc
jl
add
or
je
xor
fmul
cmc
jno
loope
jae
pop
add
xor
icebp
adc
in
jae
pop
inc
or
andnps
or
push
inc
dec
and
xor
xor
retf
cwde
or
push
or
pop
push
call
movs
jo
sbb
call
and
xchg
retf
push
pop
cmp
test
mov
adc
push
jecxz
add
dec
and
inc
add
cmps
loop
cmp
add
cmovnp
stos
dec
arpl
scas
aas
mov
and
dec
test
xchg
shr
sub
xor
in
add
sbb
aas
sbb
test
jne
push
pushf
mov
mov
xor
shl
adc
mov
and
adc
retf
gs
mov
mov
clc
jecxz
xor
or
leave
dec
enter
inc
mov
das
add
outs
inc
mov
jg
add
ror
or
gs
or
jecxz
pop
pusha
mov
push
pushf
and
xor
sub
sbb
test
add
icebp
push
inc
jo
cmps
and
mov
and
and
add
pushf
add
(bad)
leave
add
stos
arpl
cmp
jg
add
adc
ret
out
arpl
mov
or
pushf
sub
jmp
pop
xor
push
xor
(bad)
inc
mov
lahf
or
mov
call
cmp
or
push
aaa
sbb
add
or
sbb
or
pop
pusha
xchg
inc
arpl
popa
pop
and
push
inc
push
enter
add
sbb
xchg
xor
sub
or
sub
xor
cmp
cmp
mov
mov
push
lods
xor
pop
rcl
lahf
or
ret
add
mov
and
mov
or
movs
or
nop
sahf
cmp
xchg
cmp
aas
push
test
add
enter
lds
sbb
int
mov
xor
sub
mov
mov
mov
je
or
lock
pop
loope
adc
mov
sti
lods
mov
or
pop
push
xor
pop
data16
mov
push
or
sbb
and
jns
jl
inc
jg
pop
or
daa
mov
(bad)
ins
retf
xor
cld
jmp
pop
sub
call
adc
les
add
lds
cmp
lds
and
loope
jg
push
mov
in
sub
rcl
mov
jge
mov
or
jae
adc
xor
mov
and
test
push
popa
pop
and
cmp
or
pop
add
js
adc
jl
xor
sub
mov
popa
dec
cmp
ret
and
cmp
cmp
and
and
lods
mov
and
test
dec
rcl
push
inc
rcl
sbb
shl
les
loop
and
sub
xor
shl
inc
and
and
dec
test
outs
inc
and
inc
shl
adc
rol
lahf
scas
fs
xor
inc
shl
les
add
enter
xlat
lods
mov
sbb
inc
add
xchg
pop
inc
ror
push
inc
loop
dec
popa
or
call
pop
pop
frstor
and
adc
pop
pop
xchg
mov
push
push
and
inc
and
adc
rcr
in
repz
pop
test
add
idiv
mov
push
(bad)
clc
dec
cld
mov
push
dec
mov
test
mov
pop
mov
jl
or
inc
adc
ret
aaa
and
jmp
je
ficomp
mov
leave
add
dec
adc
inc
xchg
sbb
aad
inc
xchg
js
pusha
push
xchg
mov
fstp
push
adc
shl
imul
in
mov
loop
or
mov
sub
mov
xor
dec
cld
lahf
push
push
add
ins
imul
mov
sub
aam
sub
adc
dec
inc
sbb
push
sar
dec
or
and
movs
mov
or
adc
les
and
and
nop
fdiv
mov
sub
sub
or
mov
adc
add
and
inc
mov
mov
stos
mov
xchg
add
adc
rcr
mov
mov
pop
sub
push
or
or
and
pop
cld
dec
dec
push
push
mov
adc
mov
or
imul
xchg
sbb
or
or
add
adc
inc
(bad)
call
dec
inc
fwait
and
jecxz
dec
ucomiss
inc
and
mov
ds
push
mov
mov
imul
add
cmps
fsub
mov
fsub
cmp
and
inc
adc
sub
jmp
mov
addr16
push
cvtps2pd
xchg
mov
pop
or
or
xor
jno
call
ins
mov
mov
cmp
jne
pop
add
movs
mov
and
sbb
jmp
push
add
and
push
sbb
or
push
ins
loop
dec
mov
ds
movs
mov
dec
mov
movs
wrmsr
enter
cwde
and
jg
or
add
and
push
test
in
push
push
lea
and
or
sbb
mov
and
mov
(bad)
mov
dec
xor
fbld
pop
and
pop
rdmsr
loop
jne
push
push
add
ins
inc
sbb
xchg
lds
mov
mov
les
jle
lock
cmps
add
imul
inc
dec
inc
rol
sub
and
fscale
in
or
and
loope
mov
add
mov
cmp
cmps
push
les
movs
dec
adc
mov
jl
popa
push
mov
sub
and
scas
lods
lock
scas
jbe
mov
inc
add
mov
movs
inc
push
fidiv
lds
and
add
mov
add
jmp
adc
inc
(bad)
adc
push
lock
and
mov
lea
xchg
loopne
cmp
jae
xor
add
mov
or
ret
dec
mov
stc
push
pushf
pop
mov
xchg
and
push
popf
pushf
pop
sub
je
jne
mov
sub
xor
push
add
and
movs
or
add
push
xor
pop
xor
ret
inc
and
mov
or
inc
pop
sub
adc
sbb
je
adc
test
js
mov
sub
jg
shl
pusha
enter
imul
or
(bad)
ins
mov
jg
clc
(bad)
popf
inc
adc
pop
or
fldz
cmp
outs
or
or
and
and
and
add
inc
into
call
adc
pop
adc
test
add
call
cmp
mov
rcl
cmp
or
and
adc
es
aas
add
inc
adc
sub
data16
inc
sbb
inc
adc
pusha
(bad)
and
dec
xor
ds
and
loopne
inc
inc
sbb
and
and
inc
add
inc
or
dec
pusha
and
out
sub
sub
pop
mov
dec
mov
enter
add
cmp
inc
sbb
fild
ret
mov
cmp
mov
or
nop
mov
ins
and
adc
mov
add
data16
push
out
or
mov
cld
loop
daa
lock
or
push
shl
aaa
push
dec
jl
or
add
push
loope
xor
fwait
add
shl
and
rol
repnz
and
std
or
jb
and
(bad)
pusha
or
xor
int3
imul
inc
add
movs
add
push
mov
(bad)
jg
pop
test
inc
adc
jne
je
cmp
cdq
in
add
add
call
add
sbb
jne
ficom
je
add
sar
dec
adc
fnstcw
xor
test
xor
cld
jecxz
pop
adc
fs
aas
xor
nop
jno
cwde
mov
je
and
cli
lock
xor
jecxz
and
push
test
jmp
mov
popf
or
test
and
adc
dec
je
push
xor
sub
loop
push
sbb
adc
bnd
sbb
dec
sbb
ret
lock
cld
add
pop
push
jmp
stc
stos
and
inc
outs
sbb
jnp
daa
mov
fstp
loope
(bad)
mov
sbb
jne
sub
imul
inc
loopne
in
inc
or
sub
mov
cmp
shr
or
sub
mov
int3
jmp
js
test
movs
data16
jns
add
in
dec
mov
sbb
mov
cdq
fistp
or
cdq
rol
add
cmps
and
in
out
shr
fimul
dec
cmp
cmp
inc
dec
cmp
fs
mov
inc
das
or
ficom
in
dec
ret
dec
call
pop
xchg
push
mov
add
cmp
or
jnp
and
leave
and
and
cmc
push
mov
and
inc
push
fstp
lock
inc
push
cmp
cwde
push
daa
ret
ins
lods
push
push
xor
cmp
cmp
or
jg
xor
xchg
in
inc
sti
int3
sub
sub
and
jns
or
(bad)
push
sahf
pop
inc
fstp
dec
add
es
in
sti
add
idiv
push
stos
imul
mov
mov
push
jnp
imul
ficom
jno
cmp
sbb
and
mov
(bad)
fisttp
fld
add
fcmovnu
jmp
fchs
sbb
xor
inc
fcomp
sbb
sbb
add
push
call
jb
ja
cmp
push
pop
sbb
add
in
enter
inc
pop
fwait
test
sbb
mov
loope
add
sbb
fstp
push
inc
aad
dec
adc
adc
sbb
shl
fmul
inc
(bad)
add
mov
pop
pop
fdiv
pop
into
sbb
sub
fistp
les
test
nop
clc
inc
call
lods
sti
mov
push
cmp
cmps
inc
cmp
hlt
mov
inc
jne
or
in
test
rcr
cwde
aad
aam
stos
push
adc
or
adc
or
adc
(bad)
cmp
ret
in
mov
mov
jo
jl
or
cmp
adc
xchg
push
sub
inc
popa
call
xor
pop
scas
ret
inc
add
jmp
push
adc
and
cmp
and
inc
out
ret
push
push
gs
std
leave
sbb
lahf
xchg
(bad)
sub
popa
mov
xchg
imul
jmp
jns
pop
movs
and
fwait
sub
mov
ds
sub
push
xor
and
add
addr16
add
mov
and
test
or
ss
add
mov
sar
sbb
or
loopne
mov
sbb
adc
or
cmp
jmp
xor
popf
test
test
and
jne
dec
mov
test
cmp
mov
imul
sbb
add
add
pop
test
or
adc
cs
stos
add
xchg
jne
xchg
mov
test
and
pop
test
jne
jb
add
loope
inc
jbe
inc
aam
pop
ja
aam
clc
mov
mov
mov
(bad)
push
add
sbb
mov
dec
jmp
or
loopne
mov
mov
sbb
or
and
movs
push
cmovno
jmp
pop
add
out
jne
xchg
call
lea
pushf
sar
pop
out
xchg
jnp
xchg
xchg
push
das
mov
jp
nop
and
push
inc
sbb
mov
pop
out
dec
dec
cmp
sbb
aas
push
push
sbb
in
shl
jmp
push
dec
mov
das
ds
ret
add
xchg
xor
sbb
jo
jo
lahf
fwait
xchg
mov
fstp
mov
fistp
loop
mov
pop
fldenv
(bad)
mov
and
adc
xlat
push
retf
movs
std
leave
hlt
clc
fldcw
jne
pop
inc
mov
das
jp
add
fwait
test
fwait
je
retf
sub
fwait
sbb
test
or
push
and
sbb
or
mov
fstp
jne
push
fldpi
cmp
jg
inc
and
sub
dec
mov
inc
sub
inc
push
dec
(bad)
scas
push
or
and
xor
pop
call
daa
test
lahf
rol
cmps
push
loope
sbb
or
fisubr
push
jg
and
mov
xchg
lods
and
and
lock
or
test
mov
cli
add
cli
setge
xor
je
mov
aad
mov
push
push
push
cmp
imul
adc
iret
push
push
jns
imul
sub
mov
jmp
sub
pop
ins
inc
adc
jno
jno
inc
out
push
add
loope
in
clc
sbb
and
and
jne
inc
aam
mov
mov
mov
xlat
inc
push
daa
test
mov
inc
aas
aaa
int3
iret
push
push
inc
call
xor
cmp
and
push
add
sahf
fcom
jmp
add
xchg
stos
xor
pop
call
imul
int
icebp
aas
and
std
or
sbb
push
cmp
push
js
out
and
lock
imul
ret
sub
cmp
mov
ret
add
add
fbld
in
out
loopne
cmp
in
dec
cmp
out
loopne
and
mov
enter
ror
call
mov
mov
cld
jno
or
ret
inc
lar
push
add
add
stc
pop
inc
in
and
add
dec
mov
mov
call
jmp
imul
ds
adc
jnp
xor
lods
inc
pop
daa
cmp
jmp
iret
in
lods
out
push
add
shl
or
test
add
es
(bad)
sub
adc
inc
or
mov
movzx
ret
mov
pop
out
nop
je
movs
repnz
shl
out
add
pushf
std
sbb
push
inc
pop
cmp
cld
pop
leave
aas
add
stos
dec
das
pop
mov
hlt
and
or
push
iret
and
mov
pop
dec
xchg
dec
or
xor
jp
test
jbe
fmul
es
push
ja
adc
push
push
test
call
or
test
xchg
ret
jle
add
sbb
or
xor
push
adc
or
jns
(bad)
push
imul
and
or
pop
ror
pop
xor
fmul
and
lods
add
bound
xlat
jo
mov
rol
mov
ss
ror
jg
add
in
mov
add
mov
push
push
lahf
(bad)
sbb
or
inc
adc
xchg
mov
aaa
stos
mov
or
dec
and
mov
pop
push
pop
inc
cmp
loop
adc
rol
nop
call
add
add
inc
enter
rcl
std
loopne
add
les
push
ret
dec
aas
inc
xlat
loop
pop
mov
sbb
mov
xor
sbb
outs
push
sbb
pop
mov
jne
jp
dec
pop
push
sbb
inc
bound
mov
std
dec
xchg
dec
and
int3
ins
jmp
dec
enter
xchg
add
dec
and
(bad)
dec
mov
add
jmp
dec
aam
lock
inc
push
rcr
imul
push
jge
dec
mov
pop
and
test
jb
jmp
and
mov
add
aad
mov
jmp
jnp
inc
push
adc
inc
fs
xchg
sbb
retf
sbb
out
imul
inc
cmp
lahf
sub
mov
dec
pusha
add
dec
sbb
or
push
and
and
cdq
rol
jmp
mov
mov
sbb
add
dec
jo
inc
cli
add
int
adc
pop
ins
gs
sbb
or
jp
inc
pop
fimul
dec
(bad)
mov
adc
and
les
pop
and
sbb
cmp
test
dec
xchg
adc
loop
adc
cld
sbb
xchg
adc
je
jmp
gs
movs
or
or
inc
mov
int
mov
adc
sub
dec
movs
lock
pop
cld
test
cmp
je
inc
xchg
dec
and
aad
aad
in
outs
js
inc
enter
(bad)
jmp
mov
pop
mov
ss
adc
cld
jge
jo
pop
les
dec
xlat
fwait
xor
push
shl
jb
in
push
cmps
pop
fucomip
stc
jb
cmp
stc
push
or
add
cmp
cmp
push
or
(bad)
je
dec
mov
pop
ins
add
cdq
inc
data16
xor
lods
adc
test
test
jns
add
dec
add
fistp
xchg
je
sbb
lock
fs
or
pop
adc
out
cmps
and
push
xlat
test
je
jmp
cmp
push
fstp
cmps
outs
pop
add
add
popa
add
js
cdq
or
pop
popa
fldenv
arpl
cmp
dec
inc
sub
pop
les
fcmovnb
adc
sbb
pop
add
je
sbb
fwait
aas
inc
sbb
rcl
in
enter
and
and
mov
out
xchg
cmp
test
in
and
sub
aaa
adc
mov
or
adc
lock
add
int3
sbb
or
sbb
sub
inc
or
pop
cmp
pop
mov
add
imul
xor
mov
pop
pop
inc
sbb
mov
cmp
mov
iret
adc
pop
cmps
cmp
mov
pop
add
xchg
and
pop
inc
sar
scas
add
cmp
pop
xchg
and
adc
push
rol
lea
and
pop
adc
lock
sbb
shl
iret
push
jmp
and
lds
sub
mov
ret
sub
cli
mov
xchg
fadd
fsub
inc
es
pusha
sub
inc
add
les
loopne
inc
or
push
cmp
jg
adc
cmp
imul
sbb
pop
sub
push
xchg
dec
jmp
and
and
and
loopne
inc
gs
jno
and
adc
pop
adc
xor
cmp
mov
and
xor
mov
dec
xor
cdq
push
jmp
pop
mov
shl
add
or
cmp
sbb
sbb
mov
push
or
and
fild
iret
push
lahf
imul
aas
es
inc
pop
and
data16
inc
shld
xor
xchg
pop
dec
sbb
mov
das
scas
out
cmp
push
adc
inc
mov
push
dec
enter
addr16
or
mov
dec
inc
dec
add
or
cmp
mov
mov
(bad)
jp
xor
je
test
das
pop
pop
xchg
ins
push
cmp
push
cs
test
aaa
dec
dec
xchg
push
nop
xor
add
fstp
js
daa
loop
and
fisubr
movs
cmp
add
or
push
sbb
add
push
mov
jg
inc
lods
or
outs
fwait
push
xlat
retf
add
or
out
xor
popa
sub
aaa
inc
sbb
xor
retf
inc
call
add
sbb
dec
sar
xchg
xchg
sbb
pusha
adc
xchg
fst
outs
leave
push
imul
adc
adc
xchg
or
add
xchg
fmul
mov
je
pop
aaa
adc
pop
cmp
or
(bad)
cli
pop
or
sbb
xor
shl
xor
pusha
or
jb
add
pop
xchg
add
sbb
repnz
adc
pop
je
ja
pop
push
dec
adc
ja
fwait
push
cdq
mov
sbb
and
inc
jmp
cmc
push
sbb
das
popa
and
lea
jle
pop
xor
pop
and
add
mov
xchg
mov
xchg
dec
enter
and
pop
adc
je
aas
sub
add
pop
mov
jge
out
pushf
xchg
fcmovnb
mov
sbb
call
cmp
mov
sub
inc
sub
push
adc
lock
push
mov
js
or
and
fsubr
cmp
add
pop
test
lods
addr16
nop
mov
add
scas
cmp
and
xchg
sahf
gs
or
gs
nop
dec
outs
ret
dec
sbb
mov
add
sbb
retf
mov
dec
test
push
ja
shl
push
push
jnp
pop
cmps
jne
mov
jle
cdq
or
pusha
dec
loop
inc
and
push
or
add
ins
test
mov
push
jmp
pop
out
and
mov
or
push
add
call
adc
sub
add
and
jge
xchg
shl
mov
loope
or
out
clc
not
pusha
call
dec
bound
enter
daa
inc
xor
adc
retf
cs
or
cmp
rol
add
cs
cdq
inc
dec
movs
(bad)
sub
jecxz
imul
mov
mov
xchg
pushf
test
fisubr
push
jmp
inc
adc
js
sbb
imul
iret
pusha
mov
push
out
push
dec
add
add
mov
add
add
mov
and
enter
das
push
mov
dec
loop
dec
add
pop
adc
mov
(bad)
jge
add
ds
cmp
stos
push
(bad)
int
aad
inc
test
arpl
out
adc
pop
push
adc
mov
pop
sub
rol
test
jno
inc
pushf
or
jo
add
add
test
add
add
xor
xchg
xor
aam
xchg
ins
jo
in
stc
in
loopne
test
dec
ins
jo
inc
fs
rol
sub
mov
outs
mov
fnsave
data16
stos
and
or
outs
mov
or
cmp
popa
sbb
fcom
mov
push
ret
mov
adc
or
or
pop
dec
dec
or
or
and
rcl
lods
mov
inc
shl
in
push
mov
jl
sub
dec
push
adc
bnd
xor
dec
mov
mov
add
add
cld
jmp
arpl
push
sti
outs
cmp
xor
mov
nop
ret
pusha
sbb
inc
xor
mov
push
pusha
mov
lds
mov
and
jg
inc
sbb
cmp
fist
loop
pop
inc
and
inc
mov
push
or
lods
and
leave
lahf
cmp
adc
rcr
or
iret
loop
sbb
cdq
sbb
adc
sub
adc
sbb
in
cmovg
clc
adc
jmp
arpl
mov
loop
fdivr
mov
lods
sub
or
push
inc
clc
out
mov
or
sub
jo
test
mov
add
cmp
sub
setg
adc
adc
mov
xor
jne
or
outs
inc
call
add
and
call
pop
mov
add
jg
adc
xor
data16
loopne
pop
adc
or
adc
adc
sub
int
pop
js
add
ds
sbb
je
sbb
add
pop
aas
in
test
in
pushf
push
data16
add
xchg
je
mov
rol
ret
data16
(bad)
adc
or
or
fcom
mov
pop
jl
adc
jno
or
push
inc
pop
push
clc
pop
add
inc
push
clc
dec
mov
add
push
jmp
enter
jns
repz
clc
or
dec
xor
ret
mov
test
sbb
retf
and
mov
int3
jne
or
add
dec
add
xor
aas
jmp
pop
repnz
cdq
ret
pushf
cmp
sub
xor
or
xor
test
loopne
inc
jecxz
addr16
sbb
xor
test
adc
outs
xor
xchg
add
dec
dec
push
sbb
jnp
or
jmp
push
or
cld
mov
jne
adc
out
sub
sub
sbb
pop
lahf
xor
in
or
mov
sub
sbb
rcl
or
and
inc
add
call
lock
mov
xor
repz
int3
sbb
and
push
sbb
sbb
xor
out
enter
sbb
enter
in
lds
add
inc
loopne
adc
add
inc
push
push
popa
sar
xchg
jl
shr
add
jne
dec
xor
ret
mov
sub
clc
clc
mov
fwait
push
cs
mov
add
nop
and
push
pop
mov
or
sub
dec
adc
or
outs
sbb
push
outs
loope
(bad)
fadd
cdq
xor
cmps
xor
jmp
loopne
lea
xor
xchg
daa
dec
sbb
fadd
and
imul
cmp
mov
xchg
and
outs
sbb
mov
ror
das
mov
iret
xchg
mov
jmp
addr16
sub
inc
xchg
adc
enter
fidiv
sti
and
mov
push
add
mov
jne
(bad)
inc
sbb
lods
jge
add
scas
push
and
mov
fmul
cmp
push
test
mov
pop
aam
inc
test
inc
mov
pop
sub
aam
ret
aad
xor
sub
add
or
ret
xor
imul
add
inc
pop
inc
sub
push
jno
xchg
inc
dec
int3
jmp
(bad)
sbb
jmp
push
add
sbb
add
xor
pop
xor
clc
adc
ss
and
and
adc
xor
(bad)
or
push
cmp
add
mov
sar
xor
pop
dec
fld
inc
bound
scas
aaa
test
fsub
adc
xor
aas
movs
jo
clc
mov
mov
ret
int3
imul
hlt
je
or
and
imul
imul
or
mov
xor
or
jge
out
jo
sub
retf
mov
hlt
push
fldcw
adc
loope
fsub
cli
clc
mov
adc
test
jns
mov
and
xor
or
dec
jmp
jmp
jl
cmp
pop
sub
mov
in
loopne
fisttp
fimul
inc
add
mov
das
sbb
add
cmps
loopne
add
and
mov
push
and
ss
and
loopne
mov
test
cmps
add
add
inc
pop
inc
jne
ret
loope
addr16
outs
fadd
adc
and
and
dec
call
or
test
xchg
dec
pop
push
and
add
mov
fwait
outs
loopne
mov
push
les
mov
fwait
jne
js
sub
jmp
inc
aas
xchg
outs
dec
(bad)
bound
les
ja
neg
dec
inc
in
(bad)
jg
retf
add
js
adc
push
adc
cmp
(bad)
or
add
jecxz
dec
pop
jmp
mov
jo
adc
pop
xor
and
lea
jmp
mov
das
push
fild
hlt
dec
sbb
xor
pop
xor
mov
outs
xor
adc
inc
rcl
push
movs
movs
adc
jb
lock
or
push
fild
ror
jb
add
stos
lock
inc
cmp
call
and
ins
add
mov
sbb
fisttp
adc
inc
and
push
push
add
sub
pop
cmp
mov
or
add
fistp
retf
push
push
jp
test
push
bound
xchg
rcr
add
sbb
fisttp
movs
xchg
mov
fwait
aas
mov
jg
or
inc
and
xchg
pop
enter
test
pusha
movs
call
mov
and
sbb
cmp
or
mov
ret
ja
inc
add
dec
cwde
jl
call
xchg
mov
pop
mov
(bad)
xchg
mov
or
adc
push
cmp
mov
clc
mov
push
or
jmp
adc
adc
mov
imul
dec
je
add
dec
sbb
cs
or
inc
jbe
and
add
(bad)
int3
aaa
les
mov
in
add
sbb
fadd
push
gs
jb
and
inc
mov
hlt
cmps
fld
call
sbb
add
adc
jmp
mov
das
sub
xor
inc
push
push
and
and
(bad)
and
test
fdiv
repnz
or
nop
pop
mov
hlt
add
sub
or
mov
ret
add
inc
and
lds
or
fcmovbe
ret
sbb
and
(bad)
das
ret
movntq
or
add
or
and
imul
aaa
add
add
cwde
or
popa
inc
and
or
adc
add
jg
cmps
and
and
enter
clc
adc
jmp
fimul
cmp
and
jno
inc
xchg
dec
enter
pop
add
sbb
add
add
popa
xchg
dec
xor
inc
dec
ret
fcmovnb
dec
out
mov
lods
dec
loop
pop
loopne
ins
push
xor
imul
and
sub
mov
cmps
xchg
pop
js
cwde
xor
(bad)
movs
sbb
or
dec
jnp
push
scas
rcr
adc
ret
pop
mov
xor
fcom
loope
mov
in
mov
sub
inc
cs
push
ins
retf
adc
mov
or
jp
or
sub
xor
ret
xor
add
add
jno
or
gs
les
jge
sbb
push
sbb
adc
sub
movs
shl
cmc
mov
cmp
frstpm(287
retf
ins
dec
add
bound
adc
and
inc
call
push
sbb
xchg
dec
jmp
mov
shl
jp
(bad)
cli
push
mov
lea
adc
aam
pop
fxch
xor
adc
mov
dec
aas
movs
mov
call
es
adc
cmp
lods
ror
shr
sahf
out
ret
(bad)
(bad)
out
popa
cmp
enter
or
es
aas
inc
pop
sub
or
xchg
test
and
xor
sbb
push
test
mov
sbb
sub
loope
adc
inc
add
mov
push
inc
mov
xor
inc
dec
and
or
or
repz
js
xchg
jle
push
add
imul
arpl
div
cmps
add
jae
mov
sub
xchg
mov
adc
loopne
cli
not
sbb
xor
ins
cld
xor
cmp
ins
add
mov
fld
sub
inc
out
add
add
(bad)
int3
leave
sbb
add
je
int
mov
test
mov
push
lods
fwait
sub
sbb
add
jnp
lods
inc
mov
mov
sub
lods
or
dec
loope
sbb
bound
(bad)
cmp
jmp
jge
dec
fimul
sub
cmp
sub
cmc
jg
inc
mov
mov
jg
or
inc
mov
and
xchg
inc
jmp
movs
adc
dec
in
xor
adc
mov
int
enter
xchg
sub
fistp
sub
inc
sar
aas
in
cmps
enter
mov
xchg
add
outs
test
pop
and
ret
fdiv
or
(bad)
stos
sub
test
push
mov
adc
and
mov
mov
int
sbb
mov
add
rol
mov
and
rol
bound
xor
pop
outs
repz
add
loope
sbb
and
mov
or
rol
push
cmp
add
mov
add
jnp
sbb
xor
push
mov
ds
ret
mov
mov
inc
add
fadd
inc
or
cmp
cwde
dec
add
pop
xor
fwait
jle
lods
mov
rcr
or
mov
test
sbb
mov
popf
pop
push
int3
adc
xor
sub
mov
or
adc
pause
cdq
inc
mov
pusha
sbb
and
sbb
add
or
lods
dec
loope
add
inc
mov
cmp
and
popa
sbb
fstp
and
mov
mov
(bad)
fcmovnb
push
fild
ds
mov
mov
(bad)
jns
or
jmp
fnstsw
adc
iret
jmp
add
xor
pop
mov
into
cmp
ret
add
dec
shl
adc
inc
and
push
inc
ffree
or
test
cmp
je
cmp
push
push
push
xor
jmp
adc
add
sub
push
and
adc
add
inc
xor
fmul
test
sub
in
and
lahf
lods
mov
scas
xor
mov
dec
les
leave
adc
(bad)
cld
mov
int
or
jmp
sbb
add
mov
pop
jnp
push
cmc
imul
ret
push
enter
pop
jo
dec
xchg
sbb
jg
add
ins
or
inc
push
sbb
cld
inc
pop
(bad)
jl
hlt
je
jae
and
push
and
add
xor
sbb
and
xor
push
mov
xchg
test
pop
inc
shl
sbb
jae
sar
dec
sbb
and
mov
xchg
jg
sbb
and
or
test
or
mov
dec
call
repnz
les
fadd
scas
xchg
adc
and
jns
xchg
sub
in
cmp
bound
mov
jb
leave
lahf
sbb
pop
xchg
xchg
cmp
or
lahf
xchg
sub
inc
push
mov
or
push
or
lahf
bound
jb
sub
or
push
repz
repz
add
es
lahf
dec
inc
inc
nop
cmp
sub
sbb
mov
shl
movs
int3
ss
jnp
rcl
mov
test
cli
mov
push
mov
ret
ror
outs
xor
cmc
cmp
ret
movs
inc
enter
or
imul
push
adc
inc
aas
pusha
ja
mov
mov
push
inc
cmps
addr16
push
sahf
fs
xor
pop
adc
inc
xchg
cmp
add
enter
mov
and
retf
test
mov
add
and
lea
push
test
mov
daa
test
lahf
pop
sub
xchg
test
pop
mov
aam
fild
and
lahf
ja
cmp
jmp
test
push
ja
lds
push
cdq
test
mov
add
lahf
sub
cmovge
and
add
test
adc
xchg
mov
dec
or
add
or
jno
pop
dec
sub
mov
push
xor
sbb
mov
sbb
mov
xchg
or
sahf
and
inc
lahf
dec
mov
rol
xchg
adc
and
lahf
sar
pushf
add
or
popa
add
xlat
mov
and
test
add
fcomp
add
out
mov
loope
test
les
mov
or
aad
dec
call
mov
pushf
enter
pop
dec
xor
cmp
loopne
clc
inc
shl
inc
mov
bound
rcl
adc
mov
adc
icebp
jae
popf
and
inc
xchg
shl
jo
or
popf
xchg
sub
or
iret
sub
push
xchg
mov
mov
lahf
cs
sub
mov
pop
mov
jno
mov
or
adc
int3
or
pop
pop
sub
or
outs
jne
aad
cmp
push
push
push
arpl
mov
cwde
inc
cmp
fs
bound
mov
add
cmc
mov
or
nop
test
add
nop
lea
fcomp
fdivr
aam
aam
add
jecxz
mov
fstp
fcmovnb
cwde
leave
mov
xchg
aaa
and
jno
xor
inc
xchg
fs
sub
cdq
or
jno
xchg
call
shl
lahf
nop
push
jb
jno
jns
add
lods
ins
inc
mov
add
ins
loopne
and
pop
add
jns
retf
and
sub
push
enter
push
in
inc
ss
sbb
in
pop
jb
cmp
sbb
cmp
xor
arpl
push
test
adc
and
or
ror
adc
push
(bad)
mov
je
imul
pop
clc
add
in
and
and
pop
xor
out
movs
dec
sbb
shl
scas
icebp
lea
aam
jmp
aad
or
lock
or
pop
push
test
add
xor
ins
add
add
js
adc
push
and
push
shl
sbb
pop
pop
sbb
or
hlt
stos
push
mov
add
add
push
add
inc
inc
(bad)
xor
js
sub
lss
jno
sbb
push
ror
in
push
and
in
dec
sbb
dec
jecxz
add
mov
jae
add
cmp
inc
push
xor
sti
lea
pop
icebp
lea
or
inc
add
mov
xchg
outs
imul
dec
imul
push
and
push
add
cmp
add
ret
aas
mov
dec
mov
je
icebp
add
loope
fst
(bad)
adc
aas
in
mov
pop
mov
sahf
retf
add
ret
scas
and
ins
sbb
and
mov
xchg
retf
mov
add
jns
mov
lahf
mov
std
cs
lods
lock
adc
xor
aaa
or
ficom
pop
mov
call
popf
inc
xchg
dec
bound
xchg
sub
push
push
popa
popa
mov
in
push
mov
mov
and
fld
push
sbb
inc
push
call
cwde
icebp
push
xor
pop
stos
mov
adc
sbb
nop
retf
add
cld
fcom
add
xchg
jl
and
sbb
add
sahf
dec
das
mov
mov
or
mov
lock
loope
adc
lock
and
pop
dec
setg
add
out
cs
cwde
(bad)
add
add
push
inc
fldenv
add
push
add
inc
js
or
or
ror
shl
sbb
dec
(bad)
or
cmp
jg
rcl
add
mov
xor
inc
cmp
xor
cmps
inc
jmp
pop
into
retf
add
leave
and
imul
add
dec
add
popf
xor
fcomp
enter
xchg
clc
ja
cmp
xchg
or
adc
pop
dec
loop
and
push
sbb
inc
and
cmp
sbb
and
mov
sbb
and
jo
cmps
jo
rcr
xor
cmp
fwait
or
push
hlt
je
mov
enter
xor
add
add
sub
add
pop
add
mov
loopne
es
cld
lahf
xor
sbb
inc
sub
imul
mov
xchg
add
ret
mov
les
adc
inc
add
outs
test
loope
out
nop
rol
fisttp
je
test
adc
dec
push
jmp
loope
or
out
nop
sub
push
outs
dec
ret
mov
mov
sbb
mov
mov
xor
add
ficomp
xchg
and
dec
in
in
and
sub
sbb
or
push
sub
jae
sbb
aam
ret
adc
retf
xchg
inc
add
mov
pop
push
add
push
mov
jmp
adc
loop
fs
mov
icebp
cmc
sub
inc
popf
xchg
out
mov
adc
mov
jbe
call
(bad)
shr
and
sub
add
movs
leave
sub
mov
imul
or
adc
dec
sbb
xor
retf
jnp
jno
xor
jno
cmp
nop
dec
pusha
and
and
nop
inc
je
jns
rcl
and
mov
add
add
mov
mov
adc
or
out
sbb
(bad)
leave
add
xchg
sbb
add
add
mov
push
mov
jnp
jne
and
leave
add
(bad)
or
nop
(bad)
lahf
add
add
enter
lahf
add
and
xor
pusha
sbb
retf
add
addr16
imul
mov
inc
adc
inc
lahf
or
inc
repnz
dec
push
je
mov
or
xor
xor
stc
fsub
mov
or
push
xlat
mov
inc
and
mov
pushf
ror
add
jp
sub
retfw
js
pop
dec
cmps
retf
cmp
pushf
adc
adc
dec
push
lock
movs
add
push
jo
movs
fucom
inc
and
pop
int3
or
or
shl
loopne
add
jne
cmp
cli
and
movs
fistp
pop
jb
dec
push
lods
dec
adc
call
inc
outs
dec
add
movs
xor
rcr
or
sub
jnp
fld
out
pusha
push
dec
inc
hlt
cdq
or
jmp
pop
pop
(bad)
loop
dec
popa
xchg
sub
(bad)
jl
adc
pushf
adc
test
ss
xor
xor
mov
mov
jg
jl
jae
jbe
movs
adc
lds
dec
cld
jge
imul
repnz
addr16
stos
std
mov
pop
ins
inc
cld
xchg
and
test
sub
add
mov
int
nop
ret
adc
push
mov
adc
bound
pop
cmp
or
lahf
mov
and
sub
std
add
ss
cmp
shl
hlt
out
and
jo
lea
pop
xchg
nop
and
test
or
xlat
das
sub
or
adc
sub
push
jg
or
dec
mov
inc
sub
add
es
leave
adc
addr16
movs
movs
sub
add
and
jne
push
or
adc
jmp
mov
mov
scas
add
or
pop
arpl
mov
jne
loop
adc
pop
cmp
mov
int
mov
aas
mov
sub
test
xor
cdq
shr
mov
push
leave
dec
jb
dec
in
push
add
xor
add
push
clc
outs
jmp
jmp
mov
push
mov
or
(bad)
add
outs
fnstenv
sub
push
adc
or
and
xchg
push
(bad)
in
dec
pop
jne
cmp
push
test
sbb
push
mov
xchg
xor
push
push
lock
in
xor
movs
imul
push
push
ds
fisubr
mov
add
in
test
test
mov
jg
push
and
in
rcl
push
in
jp
and
in
adc
cmp
shl
sub
(bad)
cmp
call
cmp
sub
movs
call
ins
imul
cmp
or
adc
les
test
fild
inc
and
rsm
ins
fadd
mov
ins
pop
sbb
test
out
popa
pusha
inc
stos
dec
and
nop
lods
lods
mov
je
mov
mov
mov
add
add
clc
fidiv
js
popa
cmps
test
cmp
push
popf
lgs
lahf
push
jmp
add
sub
sub
popa
mov
or
je
icebp
pop
add
mov
mov
mov
or
mov
in
pop
je
jg
add
and
out
push
cmp
ja
mov
sti
add
out
(bad)
adc
(bad)
cmp
or
shl
leave
adc
or
jb
in
rcr
dec
add
jg
movs
add
cmps
mov
imul
mov
test
test
or
test
in
popa
inc
mov
bound
pop
push
add
movs
sar
or
add
retf
push
or
add
xchg
xor
push
js
dec
mov
or
pop
sbb
repnz
gs
sbb
sbb
adc
repnz
or
jb
dec
inc
mov
(bad)
fnstenv
push
je
inc
and
mov
push
inc
mov
mov
mov
sbb
mov
or
and
mov
ret
push
adc
inc
aas
xor
push
fcom
loopne
mov
shr
or
mov
lock
adc
inc
imul
xor
pusha
cwde
sbb
adc
out
shl
add
push
push
and
hlt
mov
ret
adc
shl
add
jae
je
pusha
pop
jo
test
imul
mov
lods
or
mov
fwait
cli
movs
test
aas
dec
adc
addr16
mov
in
add
ja
ret
sbb
sbb
mov
les
inc
dec
cld
lahf
jne
movs
mov
cmp
popf
or
mov
sub
call
jae
mov
mov
add
lock
orps
and
push
add
in
ds
push
test
cld
mov
cmp
jb
inc
aad
movs
mov
xchg
(bad)
aaa
pusha
dec
add
or
push
fst
mov
fwait
scas
push
clc
nop
movs
inc
xor
pusha
loopne
add
test
push
inc
adc
cmp
fst
pop
pop
pop
inc
dec
mov
fistp
push
test
xchg
inc
inc
xchg
push
mov
and
fsubr
stos
or
add
mov
js
or
push
fistp
divps
adc
sbb
lods
mov
clc
adc
adc
jbe
jb
push
push
inc
data16
inc
push
adc
and
sbb
es
and
xor
add
(bad)
adc
pushf
dec
jno
in
adc
rcl
out
ret
push
mov
adc
push
adc
hlt
pop
push
sub
dec
mov
xor
cmovg
and
je
add
sub
jnp
sbb
inc
mov
mov
xchg
xchg
xchg
cdq
cwde
fist
rcl
jo
add
add
fstp
cmps
popa
mov
test
inc
xchg
or
mov
mov
call
adc
popa
pop
dec
xchg
pop
inc
pop
add
inc
adc
loope
dec
leave
pop
mov
jmp
dec
dec
sbb
dec
or
cmp
mov
popa
add
bound
mov
daa
and
mov
lods
jge
adc
push
jae
jge
mov
into
push
push
aas
add
add
inc
jb
sub
aas
inc
in
ret
push
aas
in
and
pop
jb
pop
loopne
push
je
jecxz
and
mov
add
ret
sbb
(bad)
sub
(bad)
idiv
int
jno
inc
jle
sub
retf
push
retf
or
or
push
inc
inc
pusha
push
xchg
dec
xchg
adc
pop
fild
mov
pop
aas
sbb
cmps
inc
pop
in
mov
cwde
clc
pop
push
inc
in
or
push
sahf
or
cmp
bts
fdiv
aad
push
cwde
sar
and
loop
mov
je
loopne
fsubr
dec
pop
adc
jl
repnz
imul
test
push
add
sbb
jno
sar
push
mov
(bad)
xor
in
pop
or
adc
aam
sti
dec
mov
hlt
mov
jmp
aaa
jne
add
and
fwait
or
push
xchg
xor
and
jne
das
jo
sbb
loopne
jmp
jne
fbld
xor
adc
dec
or
sbb
sub
or
retf
nop
shl
sbb
and
sub
jp
push
popa
test
cmp
imul
cmps
push
inc
les
dec
cdq
mov
sbb
and
push
mov
adc
pop
js
inc
adc
inc
xchg
(bad)
add
mov
push
push
or
add
mov
mov
mov
mov
movs
nop
mov
and
mov
xchg
aam
sbb
neg
or
push
repz
jl
es
cld
std
jmp
stc
std
sub
dec
jle
pop
out
add
push
add
std
pop
sub
push
clc
mov
jmp
push
xchg
add
ret
into
or
add
add
sbb
pop
imul
ret
add
fst
mov
jge
test
jmp
sbb
out
add
cld
mov
push
or
in
xor
dec
lea
mov
call
jb
cmps
fld
ins
push
leave
imul
and
cs
lahf
mov
and
dec
lods
sbb
movs
adc
retf
das
dec
xchg
or
push
jp
cmp
mov
adc
pop
or
xchg
add
add
adc
push
and
sbb
fstp
ins
mov
jb
xlat
jecxz
mov
jnp
or
jmp
dec
dec
imul
es
cmp
shl
or
jl
addr16
push
cmps
nop
mov
add
inc
aaa
and
mov
adc
sti
test
mov
cmp
movs
or
aaa
xor
aaa
lahf
sbb
pop
lods
jmp
and
jp
jo
ins
not
sbb
pop
push
mov
or
xor
cmp
and
pop
cmp
inc
mov
or
pop
fistp
sub
sbb
ficom
sbb
fnstsw
rcl
xchg
add
lea
and
mov
mov
xchg
std
scas
mov
mov
scas
add
dec
inc
add
mov
mov
mov
jge
push
mov
movs
loopne
mov
int3
adc
test
xor
mov
icebp
sub
mov
in
rcr
add
repz
and
ins
pop
adc
jge
sub
dec
or
mov
add
lods
push
xlat
dec
cmp
or
xor
in
adc
mov
inc
dec
jg
dec
adc
xor
mov
jecxz
ror
jecxz
inc
nop
retf
dec
mov
push
pop
mov
nop
and
cwde
in
jno
mov
push
mov
sbb
jmp
mov
fild
mov
inc
outs
ret
mov
inc
lea
ins
sahf
push
adc
adc
rcr
cwde
sub
push
add
adc
or
and
jp
push
and
and
mov
or
xchg
mov
or
fs
fld
inc
adc
xor
cmp
std
or
jg
repnz
add
sub
mov
add
jg
sub
push
or
icebp
sbb
lea
inc
xchg
pop
jnp
aad
dec
fistp
popf
sahf
pop
adc
xchg
sbb
dec
or
xor
repnz
sbb
cmps
(bad)
pop
mov
mov
inc
call
and
or
add
add
lods
add
pop
rcl
cmp
shr
and
xchg
inc
clc
mov
adc
jbe
sbb
push
mov
or
add
sub
in
lahf
sub
lds
adc
dec
push
and
push
push
test
popa
mov
sub
and
lods
mul
pop
add
test
or
add
out
retf
mov
jnp
mov
in
pop
sub
scas
mov
push
leavew
cmp
nop
and
fst
ins
daa
pop
or
xchg
aam
pop
arpl
pop
inc
mov
mov
jmp
ss
and
jmp
add
mov
and
dec
inc
(bad)
pop
adc
into
cmp
retf
pop
push
shl
and
pop
add
mov
imul
ret
or
das
ds
ret
inc
add
hlt
xor
mov
setp
xor
xchg
hlt
stos
(bad)
mov
sub
loop
sbb
test
(bad)
lock
and
mov
jno
clc
rcr
aam
lea
mov
or
fadd
xor
ror
loopne
loope
or
jnp
fwait
call
sbb
fiadd
xor
or
inc
ins
fcom
pushf
sbb
test
jnp
or
andnps
in
or
in
pop
jp
add
and
pop
sub
dec
hlt
shl
sti
lock
loopne
imul
or
(bad)
xor
pop
ror
xchg
jae
movs
jo
les
fist
fdiv
xor
xchg
call
and
loopne
sbb
push
fnstenv
cmp
mov
fsincos
in
pop
in
aam
mov
xchg
mov
cmp
sti
arpl
and
push
repz
imul
sub
leave
cdq
mov
pop
pop
aas
lods
cmps
mov
mov
dec
test
mov
dec
and
jmp
aad
inc
inc
add
push
in
mov
push
(bad)
xor
nop
fcomp
enter
or
pusha
xchg
push
test
lahf
xchg
and
sbb
mov
inc
fs
imul
test
adc
push
shl
ja
sub
sbb
sub
retf
or
sbb
test
test
dec
(bad)
and
stos
dec
push
inc
int3
mov
ss
idiv
push
xchg
enter
les
cld
stos
mov
mov
sub
cmp
adc
mov
or
xor
xor
jmp
mov
call
inc
(bad)
jo
inc
push
movs
and
or
lds
fnstenv
adc
movs
sbb
adc
arpl
les
jns
cmp
or
arpl
sub
adc
push
sbb
sti
loopne
in
mov
push
loope
sti
pop
jo
popa
clc
ins
xchg
call
gs
fwait
test
and
sbb
add
call
das
lock
sti
test
lds
cmp
js
xor
fwait
pop
loope
sbb
in
inc
mov
pop
loope
pand
lods
clc
mov
mov
outs
or
(bad)
push
inc
lahf
adc
inc
fadd
or
je
ror
popa
sub
add
or
push
jne
add
mov
mov
enter
push
shl
adc
jno
les
mov
adc
aad
aas
js
xor
(bad)
jne
xchg
loopne
and
call
mov
sbb
or
mov
dec
dec
sbb
jb
lea
into
and
sub
(bad)
mov
in
nop
add
jno
popa
(bad)
es
sti
das
and
or
div
pop
les
adc
sbb
in
fsub
xor
xor
mov
in
inc
(bad)
xchg
ss
ret
and
sub
in
xor
push
bound
xor
call
xchg
inc
xchg
add
les
iret
in
arpl
data16
out
inc
push
push
rcl
pop
or
ins
adc
xchg
dec
cmps
adc
dec
es
xor
cmp
es
fs
inc
dec
es
fs
dec
push
push
pop
cdq
fs
dec
pop
pusha
fs
inc
or
jo
fs
mov
xor
cwde
dec
loopne
mov
(bad)
push
mov
xchg
sbb
add
inc
aad
arpl
in
xchg
cmp
out
mov
jns
xchg
xchg
mov
mov
nop
mov
lods
and
cmc
loope
cdq
mov
dec
in
das
in
in
cdq
fs
dec
in
in
in
fs
dec
es
in
in
xchg
dec
es
in
in
in
dec
es
fs
in
in
es
fs
in
in
in
in
cdq
fs
dec
in
in
in
sub
nop
add
in
test
movzx
call
jb
mov
test
call
bound
pop
int
mov
push
jno
push
fsubr
xchg
and
add
cmpxchg
dec
add
xchg
inc
lock
pop
jmp
in
loopne
test
push
ror
retf
xchg
mov
rol
std
punpcklwd
and
sub
sub
inc
push
mov
rol
mov
push
xor
push
sub
cmc
mov
les
fldenv
mov
add
fld
mov
push
sbb
jbe
mov
or
add
jmp
or
cwde
in
or
pop
adc
and
lea
jne
dec
xchg
xor
loopne
inc
sub
sub
out
adc
mov
inc
inc
mov
movs
and
(bad)
out
jnp
pop
and
outs
push
mov
retf
dec
and
and
adc
test
out
ret
dec
xor
sbb
fwait
adc
and
fsubr
js
dec
shl
mov
adc
dec
xchg
mov
cmp
push
loope
mov
xor
scas
and
popa
outs
shl
xor
scas
ins
or
or
popa
or
inc
in
pop
xor
cld
adc
ss
pop
ficom
scas
movs
adc
dec
fwait
test
xor
in
and
ins
dec
add
cwde
mov
fwait
sar
fist
add
xor
aam
sbb
and
cwde
shl
lock
push
jmp
icebp
push
sub
leave
adc
xor
jns
pusha
xchg
in
ins
ja
dec
mov
repnz
xor
lods
inc
push
push
mov
jno
imul
in
xchg
movs
cwde
jnp
pop
test
hlt
add
fs
or
outs
fwait
dec
sbb
inc
xor
clc
enter
or
sti
dec
inc
dec
call
and
loopne
and
(bad)
ins
mov
in
gs
call
loope
cmc
jne
sbb
arpl
mov
enter
lock
ret
sbb
and
cmp
push
dec
mul
fs
dec
dec
in
js
mov
popa
inc
mov
mov
dec
jg
adc
cmp
xlat
push
rcr
and
push
or
jg
cmp
jnp
jmp
pushf
mov
or
mov
dec
call
xchg
pavgb
lahf
call
dec
jl
push
mov
fst
stc
push
(bad)
push
fs
dec
or
add
mov
in
inc
shl
fcom
mov
sbb
sbb
mov
inc
mov
jns
dec
mov
lods
dec
adc
mov
dec
call
shl
test
sbb
inc
adc
sub
test
or
lods
mov
mov
loopne
or
mov
push
adc
mov
sub
loopne
sti
jnp
push
and
cld
je
sbb
push
inc
test
fdivr
or
or
add
adc
loopne
xor
mov
mov
xchg
std
jg
in
xchg
xor
sbb
mov
ss
imul
mov
xor
pop
outs
push
in
loopne
fmul
shr
imul
test
jno
dec
xchg
(bad)
jae
std
mov
jbe
nop
sbb
test
dec
adc
jbe
rcl
push
cmp
adc
jne
test
mov
mov
aaa
fucom
push
in
add
lea
mov
pusha
repnz
(bad)
pop
mov
sti
xor
cmc
add
add
ins
xor
inc
mov
dec
add
lds
xchg
push
cmc
pop
sbb
mov
ret
aam
fild
add
ds
fcomp
sbb
adc
lds
enter
fwait
les
mov
mov
push
inc
adc
cmp
pop
add
cwde
adc
sub
jb
mov
push
nop
stos
cmp
jo
gs
es
ins
push
test
and
shl
mov
outs
mov
cdq
movs
mov
movs
sets
test
xchg
mov
in
mov
(bad)
pusha
test
test
inc
inc
mov
out
sbb
sub
push
adc
pop
cmps
lea
cli
sbb
fwait
les
outs
or
js
add
push
lods
push
adc
or
fild
pusha
push
push
cmps
add
lea
mov
mov
or
(bad)
pop
ret
sbb
pusha
pop
fadd
test
jg
clc
or
add
inc
push
jnp
movs
dec
(bad)
aas
mov
pop
add
or
aad
inc
nop
nop
rcl
sbb
or
push
mov
push
out
xor
call
add
mov
xchg
push
aam
stc
loopne
ja
add
ins
pop
add
or
loopne
rol
xchg
repz
or
pop
rol
or
rol
pop
add
in
xchg
mov
test
test
sub
and
ret
push
and
or
pop
enter
aam
or
mov
aas
ror
mov
fcmovnu
dec
rol
or
inc
xor
ret
fcomp
pop
inc
and
mov
or
fwait
add
xor
cmc
adc
rcr
movs
test
cmovns
rcl
pop
sub
cmp
sub
pop
shr
cmps
(bad)
call
shl
les
adc
inc
mov
ror
xor
std
stos
dec
sbb
mov
ret
das
mov
jl
in
push
test
sub
in
add
jne
add
add
dec
add
js
adc
push
orps
or
mov
push
dec
adc
mov
or
jp
jnp
and
mov
adc
inc
cmp
cld
adc
cmp
js
adc
add
or
add
xchg
lock
adc
shr
cmp
ror
sub
in
addr16
test
shl
adc
(bad)
mov
in
add
sub
mov
mov
and
and
je
push
mov
ss
scas
(bad)
xchg
push
or
ss
inc
in
dec
mov
adc
jp
sub
sub
jecxz
inc
les
fnsave
fiadd
ficom
ds
add
cmp
mov
jge
mov
pushf
cmc
cmp
xchg
sbb
pop
dec
pop
xchg
fs
and
and
add
test
(bad)
sub
pop
xchg
lock
lock
lock
dec
lock
or
aas
or
add
dec
lock
xor
cmp
std
in
shl
mov
pusha
ins
adc
cwde
pop
mov
inc
arpl
xchg
cmps
jo
test
packssdw
push
and
jp
sbb
loopne
rcr
sbb
pop
lods
xchg
loopne
imul
or
adc
xor
or
stos
sbb
sbb
push
addr16
and
add
loope
jne
mov
mov
stc
sbb
sub
pop
inc
call
retf
js
sbb
jmp
or
add
arpl
inc
pop
(bad)
cmc
cld
adc
mov
push
lahf
and
cmp
movs
loope
inc
punpckhdq
rcl
clc
cld
push
push
fstp
xchg
cmp
jne
pop
(bad)
aad
inc
mov
push
sbb
push
aaa
and
pusha
add
add
push
inc
and
cmp
jae
ret
test
and
and
rcl
cmps
jmp
jne
sub
cwde
mov
pop
add
and
adc
addr16
popa
adc
and
aas
test
cmovo
ror
push
je
xchg
cld
call
ja
push
sub
xor
mov
pusha
shl
test
popa
cmp
out
and
lds
fdiv
inc
stos
das
nop
fwait
arpl
aam
push
(bad)
push
push
jo
and
add
lds
inc
xor
pop
mov
ins
push
push
inc
cmp
xor
std
aaa
ret
mov
in
call
mov
push
sub
and
xchg
es
aas
jo
scas
add
nop
push
push
jge
sub
adc
mov
loopne
mov
and
add
add
or
or
rol
add
rcr
mov
dec
dec
call
inc
mov
inc
sub
and
out
sub
test
nop
sub
shl
mov
adc
push
sub
push
jnp
sub
shl
sub
adc
xor
call
rol
push
pop
add
push
cmp
and
xor
ins
or
scas
mul
cmp
jmp
pop
adc
test
shl
movs
ret
sub
sub
shr
push
adc
sbb
int3
in
inc
not
rcl
int3
nop
sub
jo
les
push
mov
cld
xchg
adc
pop
pushf
cs
adc
mov
xchg
sbb
xor
jo
loopne
push
push
shl
das
mov
push
fnstsw
hlt
inc
mov
sbb
push
dec
in
imul
and
movs
shr
cmp
push
pop
(bad)
gs
mov
jne
punpcklbw
mov
add
or
in
lea
pop
or
or
or
and
shl
cdq
ins
adc
imul
xchg
and
fdivr
cmc
adc
inc
ret
dec
and
es
movs
retf
and
es
adc
and
xor
loop
leave
lahf
jbe
sbb
imul
push
push
movs
push
mov
int3
push
js
push
pusha
and
idiv
add
xor
add
sbb
add
rcr
fistp
mov
xor
dec
inc
cmps
imul
repz
shl
add
dec
js
xor
shl
(bad)
cmps
inc
mov
or
das
add
jbe
aas
ss
pop
test
loop
das
dec
outs
mov
cmp
xchg
loopne
mov
and
lods
add
inc
test
mov
arpl
fstp
leave
test
pop
inc
mov
or
dec
cwde
gs
sbb
in
sub
add
call
mov
xchg
pop
push
xlat
pop
xchg
jno
push
lea
call
sub
inc
jmp
inc
or
prefetchnta
mov
inc
and
dec
pusha
push
or
or
mov
sbb
xor
aaa
retf
mov
sbb
xchg
inc
sbb
mov
mov
xor
sub
push
add
cmp
cmp
dec
retf
mov
cmp
pusha
cmp
adc
jnp
jo
(bad)
inc
enter
mov
and
push
xchg
mov
movs
test
cmp
push
xor
add
(bad)
cmp
push
out
sbb
mov
pop
pop
sbb
pusha
inc
enter
jnp
popf
adc
xchg
call
sbb
xchg
push
pop
xor
lds
lds
cmp
or
mov
jg
ret
xor
sub
sbb
and
push
mov
arpl
and
jnp
dec
inc
adc
ror
loopne
mov
aas
push
push
ins
inc
xchg
cmp
and
test
sbb
inc
xchg
lods
comiss
(bad)
mov
mov
ins
mov
or
test
pusha
add
mov
cmp
aas
mov
and
jno
xchg
fwait
xor
jns
shl
and
and
bound
(bad)
add
or
shr
enter
sbb
add
popa
dec
inc
jno
js
inc
jp
and
inc
in
retf
jp
fadd
adc
nop
jae
rcr
pop
dec
lock
push
xchg
cld
adc
push
popa
jno
push
shl
leave
ror
movs
push
cmp
inc
push
dec
cwde
mov
(bad)
call
jne
inc
mov
sbb
ja
xor
sbb
push
arpl
pop
inc
icebp
sbb
test
lods
fcom
inc
repz
iret
mov
xchg
pushf
jp
aam
ins
inc
cmp
inc
push
loop
test
or
inc
test
pop
dec
xor
or
imul
inc
adc
xchg
in
push
add
inc
dec
dec
xor
iret
sub
loopne
inc
inc
and
jne
sub
loopne
in
inc
cmc
and
inc
inc
add
inc
sub
(bad)
ins
mov
pop
test
cld
(bad)
cmp
xor
push
add
add
loop
add
inc
inc
adc
test
fmul
fwait
jno
mov
iret
sar
jns
scas
mov
mov
or
arpl
retf
rcl
adc
aam
cmp
fs
jnp
fadd
mov
cmp
loopne
jno
les
les
sbb
mov
cwde
push
mov
es
cmp
add
jne
popa
jno
pop
push
mov
jns
inc
pop
pop
sbb
sub
test
loopne
mov
add
dec
es
push
call
dec
or
sbb
jge
or
xlat
lds
loopne
xchg
and
inc
icebp
ins
dec
imul
or
loopne
xor
and
adc
adc
loopne
dec
push
xor
popa
inc
popa
inc
adc
test
adc
cdq
or
adc
shr
js
add
ret
xchg
jno
(bad)
lds
in
mov
dec
jmp
fwait
nop
xchg
add
cmc
in
cmp
pusha
add
or
adc
mov
add
cmp
add
inc
push
leave
retf
in
loopne
fdivr
xor
xchg
push
cwde
dec
push
bswap
cmp
pusha
aam
mov
pop
push
xchg
dec
dec
cmps
(bad)
xchg
sbb
ins
add
push
mov
cmps
mov
push
push
push
sub
jp
aaa
fwait
leave
push
imul
and
stos
pusha
cmp
in
out
xchg
icebp
mov
mov
(bad)
out
sbb
pop
dec
and
and
enter
inc
test
in
or
xchg
fadd
jmp
or
test
pop
test
push
xchg
xor
add
xchg
sbb
add
jnp
inc
xor
jmp
mov
push
cmp
lfs
nop
loopne
pop
in
or
jb
jno
add
or
inc
pop
enter
adc
in
ins
xor
sub
push
jno
add
jl
sbb
mov
push
inc
sub
mov
fwait
ret
mov
inc
inc
inc
push
dec
and
or
add
cmc
aam
push
cmps
outs
(bad)
sar
xchg
test
ds
mov
adc
int3
push
je
mov
in
pmulhuw
mov
adc
xchg
int3
sub
loopne
push
enter
add
push
push
test
push
pop
outs
sbb
loopne
inc
inc
inc
test
add
cmp
rcl
push
push
test
movs
inc
int3
push
rol
adc
popa
inc
pop
mov
imul
gs
mov
adc
pop
jmp
lds
inc
sti
call
or
pop
xchg
mov
and
add
pusha
(bad)
enter
pop
fucompp
push
cmc
inc
ds
aas
shl
jno
int3
shr
adc
pop
mov
push
(bad)
push
sbb
xchg
xchg
push
bound
test
fdivr
add
ins
aaa
icebp
inc
xor
in
fsubr
add
sub
xchg
fisttp
aaa
test
aaa
aam
xchg
push
daa
jne
cld
and
test
pushf
add
mov
stos
js
lods
aas
inc
stos
test
repnz
sub
xor
cmp
stos
cmp
pop
arpl
push
add
dec
jo
arpl
es
jmp
out
mov
xor
sub
mov
lds
movs
or
pop
lods
retf
pop
popa
push
call
imul
iret
pop
mov
pop
cwde
in
adc
cmp
pushf
test
inc
sbb
or
rdtsc
outs
add
and
inc
add
add
(bad)
push
xchg
jnp
xlat
xchg
test
test
dec
mov
mov
je
jae
inc
cmp
in
pop
sbb
in
bts
inc
mov
das
lods
lods
push
or
fbstp
inc
add
(bad)
in
call
cmp
aam
lahf
shr
aad
rcl
ins
mov
mov
shr
lea
ja
push
adc
pop
push
(bad)
mov
call
sub
shl
imul
aam
pop
push
movs
mov
mov
push
cmps
mov
rol
push
ja
or
(bad)
mov
add
andnps
mov
call
fisttp
je
adc
sub
or
call
loope
jno
pop
scas
nop
popa
(bad)
call
movs
mov
adc
js
bound
adc
xor
push
bound
mov
xchg
bound
sub
or
add
fsub
gs
les
ds
push
add
push
push
shr
cmp
test
jge
test
push
lea
adc
xor
add
or
sub
arpl
add
fs
mov
adc
adc
fs
or
adc
cmps
hlt
fs
call
xor
mov
in
ja
add
xor
adc
mov
inc
add
int3
gs
inc
xor
adc
cmp
les
shl
push
movs
pop
adc
mov
cmp
mov
sub
adc
std
fmul
adc
les
add
pop
push
imul
pop
adc
call
lahf
in
sbb
shr
pop
xor
mov
mov
jmp
sub
mov
shl
ja
sbb
lds
push
adc
daa
bound
and
jo
mov
pop
icebp
or
adc
inc
sbb
cmp
adc
int3
aam
add
arpl
dec
in
cmp
add
shl
dec
shl
or
aad
cmc
and
mov
lea
xor
cs
and
fnstsw
sub
or
inc
adc
pop
les
outs
adc
je
mov
cwde
mov
xor
pop
shl
inc
pop
outs
retf
out
add
mov
jo
inc
clc
inc
pop
rcr
jo
shl
ror
bound
sub
push
sub
aas
test
mov
mov
sub
add
sbb
in
mov
jb
sub
out
jbe
lock
in
test
dec
inc
pusha
es
mov
cs
dec
fmul
lds
sbb
mov
mov
inc
mov
stos
cmp
add
add
add
dec
aam
addr16
or
jge
and
sbb
xor
mov
inc
bound
loopne
jne
push
add
and
jae
xlat
adc
xchg
jecxz
jbe
aam
ror
in
sub
mov
(bad)
fnstcw
xchg
inc
inc
inc
cmc
pop
rol
cmps
mov
and
push
mov
cwde
or
xor
xor
xlat
push
enter
add
movs
icebp
dec
enter
test
jns
add
test
js
mov
call
int
dec
aam
fdiv
scas
xchg
mov
and
loope
pop
mov
popf
push
add
(bad)
(bad)
call
ja
add
imul
xchg
dec
cmps
adc
popf
(bad)
shr
lea
aad
or
mov
cmp
add
aam
ror
loop
xor
lods
jl
ja
sbb
adc
test
push
dec
and
sbb
jp
sbb
pop
jge
inc
pusha
test
fcomp
push
adc
add
xchg
fs
mov
inc
inc
and
imul
or
mov
cmps
or
adc
add
pop
pop
cmp
dec
sub
(bad)
push
add
jle
add
adc
shr
ins
adc
outs
nop
mov
je
push
aas
fwait
movups
mov
sbb
syscall
stos
or
xor
xor
xor
mov
xchg
push
nop
or
xchg
or
pop
inc
adc
add
push
add
dec
inc
push
mov
add
sbb
aad
adc
adc
or
and
pop
dec
popf
cmc
push
or
test
or
rcl
lock
xor
xchg
test
add
pop
push
and
adc
fwait
mov
pop
inc
les
test
lods
push
add
add
shl
adc
xchg
jmp
xor
mov
and
add
xchg
jo
and
inc
add
nop
and
push
push
inc
sbb
jo
dec
stos
shl
adc
xchg
or
pop
push
cmps
int3
xchg
fmul
jno
retf
inc
and
test
xlat
fadd
mov
and
cmp
xchg
adc
adc
pop
pop
mov
test
or
sub
or
xor
pop
jle
cmp
add
or
test
cmps
adc
xchg
mov
or
inc
(bad)
mov
test
inc
mov
(bad)
sub
inc
pop
fmul
loopne
fst
mov
ret
or
inc
add
adc
xchg
neg
or
xlat
je
enter
daa
sbb
dec
shl
rcl
and
add
xchg
adc
pusha
rcr
lods
movhps
ror
aas
mov
lea
scas
pop
add
mov
sub
dec
inc
or
mov
xchg
int3
call
inc
test
pop
pushf
loopne
inc
in
retf
jo
dec
daa
inc
adc
dec
je
in
fsub
popa
mov
adc
rcl
xor
loope
mov
loopne
add
inc
in
cmp
rol
sbb
aad
ficomp
imul
or
test
add
push
pop
xchg
mov
ror
mov
cmps
dec
movs
pop
jecxz
mov
test
push
movs
dec
lods
test
xchg
add
iret
jne
sub
fadd
dec
and
in
loopne
sbb
mov
xor
adc
mov
cmp
add
cmp
pop
mov
pushf
or
xor
and
pop
loopne
mov
pop
pop
call
sbb
mov
mov
and
inc
push
mov
xor
ror
jecxz
or
mov
push
jmp
xchg
pop
enter
inc
push
sbb
mov
dec
push
push
(bad)
sbb
push
xchg
cwde
add
inc
dec
xor
adc
ss
xor
and
sbb
movs
xor
sbb
or
dec
aam
lea
mov
mov
dec
nop
loope
mov
pop
adc
xor
push
or
mov
shl
and
enter
sub
sti
mov
xor
add
dec
dec
or
sbb
or
adc
push
inc
adc
cwde
mov
adc
inc
popf
sbb
mov
ret
mov
jo
and
adc
mov
les
mov
sbb
add
or
shr
pop
push
cmc
(bad)
iret
aam
mov
outs
scas
pushf
and
mov
xor
movs
iret
enter
stos
fsub
dec
add
and
add
fistp
adc
aad
or
nop
scas
add
mov
daa
test
test
lea
sbb
or
les
and
dec
dec
push
and
pusha
xor
mov
mov
aaa
push
je
xor
pop
mov
ret
je
sbb
aaa
add
loope
adc
add
imul
xchg
ins
das
pusha
mov
mov
jb
pop
jp
pop
pusha
and
push
call
and
rol
mov
adc
dec
and
or
inc
pushf
in
mov
mov
in
adc
pop
mov
and
mov
fadd
ficom
mov
loopne
push
aaa
dec
xsaves
and
(bad)
xlat
xchg
lods
movs
adc
mov
mov
sub
mov
pusha
arpl
or
sbb
imul
(bad)
or
pusha
xchg
add
daa
pop
in
pop
or
loope
pinsrw
sub
mov
retf
rol
sbb
movs
les
ret
cmps
popf
daa
mov
arpl
loope
push
sub
fsub
add
retf
sub
mov
or
cmp
int3
aas
rol
xchg
icebp
and
int3
jns
fwait
mov
(bad)
rol
xor
jae
adc
and
call
inc
loope
dec
and
xchg
sbb
adc
push
mov
xchg
jno
mov
fst
scas
push
test
bound
jne
pusha
(bad)
jl
mov
shl
cmp
stos
dec
in
pop
mov
jne
out
fidiv
pop
shl
cwde
mov
ja
xlat
mov
int
pop
stos
ss
adc
aas
xor
jns
xchg
in
ret
enter
cmps
loop
std
rol
mul
jno
dec
or
add
xchg
test
ins
adc
adc
out
sbb
xchg
lock
pusha
inc
xchg
jo
push
inc
fmul
sub
(bad)
les
pop
in
popa
xchg
pushf
and
lods
push
lods
or
push
cdq
lods
adc
scas
aaa
cwde
idiv
test
jp
pop
aam
nop
or
mov
xor
aam
loopne
in
inc
push
aam
mov
scas
dec
pusha
add
lahf
movs
sub
dec
mov
jmp
xchg
ret
mov
rcl
test
test
fs
arpl
add
loope
adc
lea
nop
inc
je
pop
adc
cli
dec
push
(bad)
fsubr
mov
pop
test
cmp
push
push
inc
mov
add
in
pop
or
mov
cmps
adc
push
fwait
in
imul
inc
dec
inc
test
adc
ins
push
jnp
xor
in
icebp
shl
cmps
dec
rol
enter
fwait
sbb
or
in
push
dec
fwait
movs
icebp
fadd
sti
sub
add
stc
jns
or
inc
xor
test
inc
or
add
inc
xlat
add
add
push
mov
or
inc
ret
lahf
mov
adc
mov
xchg
adc
sbb
push
add
lea
xchg
sbb
fst
fs
test
sbb
and
push
daa
sub
mov
inc
(bad)
or
call
int3
cmc
cld
push
ret
add
xor
pop
lahf
pop
(bad)
push
pop
add
sbb
mov
push
add
mov
lods
ja
inc
sub
(bad)
sub
das
add
(bad)
vcvttsd2si
cmp
inc
sbb
inc
push
hlt
(bad)
jge
jne
xchg
push
int3
std
xor
lds
add
test
ret
sahf
xchg
(bad)
aam
mov
inc
sub
pop
adc
int3
add
int3
xchg
adc
add
cmp
pop
sar
mov
enter
(bad)
xchg
mov
push
push
mov
pop
adc
or
inc
ror
or
mov
imul
stc
lea
sub
mov
adc
popa
ret
jecxz
push
pop
aad
jmp
and
add
add
dec
or
inc
lea
mov
imul
sub
cdq
fs
xor
push
xor
sub
mov
and
add
adc
sbb
jns
or
jecxz
jecxz
pushf
fs
in
mov
or
and
adc
cmc
les
add
fcmovnbe
adc
stos
dec
test
enter
adc
shr
call
sub
mov
add
int
or
and
call
push
cmps
pop
mov
daa
add
imul
xor
mov
les
(bad)
std
fdivr
loopne
(bad)
mov
fsub
xchg
lock
stos
ror
inc
add
jmp
mov
add
adc
retf
sbb
sbb
fs
push
add
and
push
in
pusha
and
push
in
shl
in
sldt
fild
add
sbb
arpl
mov
add
cmp
add
nop
cmp
lea
mov
bound
dec
imul
add
hlt
mov
call
les
or
jl
mov
mov
add
sub
xor
(bad)
daa
fsub
and
dec
lea
(bad)
mov
addr16
adc
aad
xor
cmp
adc
test
jge
or
sub
mov
lock
inc
and
or
cmp
cmps
cmc
mov
bound
xchg
movups
push
sbb
jne
push
jne
or
std
int
fadd
and
lea
dec
mov
shr
lea
jbe
test
mov
inc
xchg
sub
push
test
sub
xor
and
push
std
std
std
leave
and
dec
(bad)
(bad)
(bad)
ss
mov
mov
sub
push
je
ins
fimul
fisttp
sub
sub
pop
push
or
or
pushf
ss
ins
sub
mov
mov
jae
scas
cmps
dec
fwait
xor
test
call
sub
push
fwait
rcl
and
inc
mov
stc
stos
gs
in
mov
les
cmp
(bad)
(bad)
cmp
imul
ret
mov
adc
ss
mov
add
xor
cs
pop
lds
ret
xchg
xchg
add
std
mov
fadd
pop
and
out
fisubr
sub
sti
mov
push
xlat
or
sbb
mov
dec
jae
lds
pop
mov
(bad)
jmp
mov
pop
scas
loop
or
sub
aaa
dec
adc
test
dec
jge
ret
cs
ja
jns
cmp
add
dec
(bad)
scas
xor
les
mov
sar
mov
bound
mov
mov
sbb
jnp
push
aaa
xchg
cwde
jne
push
inc
bound
xchg
inc
daa
jno
(bad)
(bad)
or
or
or
enter
(bad)
cmps
jmp
dec
and
add
inc
add
sub
movs
push
mov
jae
dec
jb
jne
inc
pusha
push
popf
sub
jg
loop
xchg
cmp
lea
adc
pop
xchg
mov
dec
add
pop
popf
push
sahf
mov
enter
(bad)
jo
pop
add
mov
push
push
inc
popa
adc
or
sti
retf
bound
xor
outs
(bad)
or
enter
adc
pop
(bad)
lea
xchg
je
lods
test
xchg
adc
rcr
add
aad
dec
lea
inc
jns
shl
dec
push
pusha
int3
mov
pop
inc
mov
and
sbb
popf
xchg
adc
inc
sbb
mov
je
mov
int3
xchg
int
and
cmp
ror
or
sub
xor
xor
cmps
nop
and
or
adc
ror
dec
cwde
ror
rcl
lods
fsub
xchg
shl
push
shl
jb
rcr
adc
and
aam
add
in
inc
mov
sbb
test
and
mov
xlat
sub
mov
mov
xor
mov
sbb
arpl
stos
and
aad
cmp
cmp
xchg
inc
inc
(bad)
mov
push
xchg
(bad)
pushf
(bad)
jae
mov
cmp
push
adc
mov
push
push
jl
aas
xor
ja
das
sbb
bound
(bad)
ror
dec
pop
inc
xlat
pusha
stos
push
xchg
sbb
adc
call
and
jb
xchg
cwde
es
pop
mov
loop
mov
inc
and
pushf
inc
cmp
test
test
and
aaa
sub
inc
fdiv
inc
jno
cmp
icebp
lea
mov
pop
cwde
add
add
jno
mov
fnstcw
pop
add
and
cmp
aad
and
das
jl
jmp
mov
or
in
adc
mov
rcr
fild
add
in
ja
push
test
fsubr
or
jnp
repz
ror
call
xor
sub
ret
lods
fist
loop
cmp
(bad)
enter
cmp
sbb
inc
sub
shl
lea
inc
push
les
cmp
pop
adc
push
imul
mov
mov
add
addr16
mov
enter
or
test
sbb
push
inc
mov
arpl
adc
xor
sbb
sbb
cmp
sbb
pop
scas
dec
push
cld
xor
ins
and
pop
je
inc
mov
ror
mov
test
lods
das
inc
movs
push
sbb
loope
js
sbb
daa
movs
inc
test
add
or
adc
sub
adc
mov
das
mov
adc
movs
(bad)
pop
in
test
comiss
inc
in
outs
jmp
rol
daa
aam
or
and
xchg
idiv
adc
mov
and
jnp
or
mov
xchg
loop
rol
xchg
pop
and
inc
xor
aaa
cmp
bound
call
ja
mov
dec
or
sub
mov
adc
popa
ja
call
inc
and
and
add
stc
add
in
dec
cmp
loop
mov
cmp
add
int3
imul
pop
inc
or
cdq
(bad)
and
xor
fiadd
adc
xchg
cli
add
test
movs
push
adc
pop
loope
add
popa
mov
sbb
out
pusha
out
and
int
adc
mov
add
hlt
dec
in
or
xlat
adc
mov
ror
adc
loopne
xor
xchg
mov
or
add
rol
sub
imul
shl
jmp
sti
add
das
and
fcomp
cmp
shl
sub
outs
add
or
jmp
js
cmps
add
add
in
jp
add
in
pusha
sub
and
lods
xchg
cmps
mov
pushf
mov
or
scas
dec
push
cli
ins
popf
adc
sbb
mov
sub
add
dec
fcmovb
mov
mov
cli
adc
adc
dec
jl
ss
pop
les
in
lock
xor
bound
mov
out
or
retf
or
sub
pop
add
out
mov
xor
call
pop
add
and
jnp
or
or
jmp
lea
dec
adc
jle
mov
add
push
test
cmp
cmp
xor
xor
pop
jno
add
imul
add
fcmovnb
fsubr
shr
xor
ret
jns
dec
adc
(bad)
xor
push
add
mov
repz
jmp
or
icebp
fidiv
outs
test
paddsb
outs
or
aam
popa
and
pop
jge
dec
ret
inc
or
hlt
or
in
cwde
and
repnz
add
repnz
add
push
add
repnz
adc
or
sbb
sbb
xchg
push
fs
and
mov
in
(bad)
push
popa
pop
call
sbb
mov
sub
aam
inc
movs
test
sbb
mov
mov
or
or
add
jnp
hlt
mov
hlt
stc
xchg
xchg
adc
cmc
sbb
push
sbb
dec
sub
or
rcl
int3
arpl
les
adc
(bad)
or
adc
push
and
mov
sbb
neg
mov
and
adc
and
cmp
xchg
add
inc
xor
or
jae
mov
and
lahf
in
inc
js
add
and
xor
jo
fs
push
push
dec
mov
cmps
sbb
xchg
repnz
add
push
pop
xor
ret
(bad)
lea
mov
mov
aas
pushf
mov
test
and
jnp
cld
jne
mov
inc
stc
xor
fdivr
sub
lock
inc
les
pop
sub
stc
xor
push
pop
stos
jl
cmp
arpl
mov
mov
and
(bad)
mov
lea
dec
inc
mov
dec
arpl
add
and
test
mov
add
ror
pusha
push
out
int
push
loope
sti
inc
leave
xchg
cld
push
leave
xchg
cmps
and
cld
sub
push
outs
mov
out
add
rol
lea
dec
pop
test
sub
push
daa
dec
enter
sub
sub
and
dec
mov
xchg
pop
xchg
inc
mov
dec
das
jo
icebp
loop
mov
sub
adc
out
add
pop
rcr
xchg
mov
mov
sbb
outs
dec
adc
add
mov
test
les
icebp
xchg
add
call
ffreep
push
xchg
dec
sbb
and
imul
push
mov
ins
add
xchg
inc
push
adc
jno
ror
add
ss
dec
jno
inc
aam
inc
pushf
test
fmul
ins
dec
ret
add
fcom
sub
pop
hlt
es
sub
dec
pop
mov
or
and
dec
cmp
xchg
pop
enter
xchg
imul
adc
mov
push
mov
mov
jecxz
ret
ja
sbb
aas
es
or
lods
scas
lea
jo
jne
test
mov
or
fsub
xor
mul
test
lahf
mov
or
aas
loope
sub
fsub
xchg
mov
mov
mov
adc
ror
or
push
lods
dec
cwde
add
sub
mov
outs
hlt
paddusb
bound
or
push
loopne
stos
loopne
movs
push
add
and
(bad)
call
xor
stos
push
and
stos
dec
and
xor
dec
xchg
or
jl
jae
out
add
popa
ret
add
test
ins
pop
clc
pop
and
jmp
fs
mov
add
or
and
adc
dec
(bad)
adc
jbe
shl
xchg
mov
fwait
mov
fucomp
mov
and
sub
inc
sub
aad
inc
fucomp
push
out
mov
xchg
icebp
int3
int3
lea
(bad)
aam
(bad)
jg
outs
push
pusha
test
repz
fadd
cmp
pop
es
test
loopne
push
pop
mov
jmp
outs
add
mov
mov
rcr
xor
clc
mov
enter
imul
pop
add
pop
and
sub
adc
dec
add
dec
rol
and
add
ins
addr16
in
inc
dec
xchg
lock
sbb
sub
ror
sar
fadd
adc
sub
or
or
adc
and
pop
call
ja
(bad)
int3
aas
add
add
or
ror
pusha
int3
adc
cmps
cs
xchg
xchg
or
hlt
call
int3
test
or
mov
mov
popa
arpl
mov
aas
add
les
(bad)
out
mov
sti
sub
or
lds
in
cli
arpl
inc
pop
or
mov
loope
pop
and
shr
inc
cmc
inc
pop
mov
ffreep
pop
jo
clc
inc
call
push
pusha
rcr
pop
or
push
adc
mov
popa
ins
test
or
or
dec
mov
scas
movs
push
jg
adc
pop
scas
pop
(bad)
mov
add
fs
mov
mov
ror
jae
push
movs
xor
sub
sub
popf
test
jmp
inc
test
fild
add
jno
ror
fisttp
enter
jg
loopne
inc
push
push
jmp
(bad)
cmps
pop
or
(bad)
fadd
arpl
mov
or
lock
xor
push
pop
push
sbb
pop
and
or
aad
imul
mov
or
ror
shl
int3
dec
iret
xor
sbb
aas
cmp
inc
or
adc
and
enter
sbb
aas
call
shl
adc
jo
test
pop
(bad)
jge
add
jg
cmps
mov
or
and
cmps
test
inc
xchg
lods
pop
pop
sbb
enter
push
es
sbb
add
or
adc
adc
adc
pop
aaa
movs
paddsb
add
loop
lods
imul
mov
jmp
or
(bad)
test
push
adc
sbb
fidivr
ret
xlat
jbe
add
mov
es
sub
sbb
dec
push
cmp
or
(bad)
in
es
fs
fmul
mov
dec
pushf
mov
inc
es
sti
xchg
add
sbb
jg
xor
sbb
(bad)
lock
pop
aas
add
inc
ror
or
and
lods
jnp
int3
shl
test
jno
pop
inc
call
mov
pop
shl
add
je
dec
iret
pop
imul
rol
nop
enter
es
pushf
loopne
or
dec
inc
sbb
je
push
(bad)
stc
fild
test
pusha
mov
pop
or
xor
push
(bad)
or
sub
dec
inc
push
adc
and
mov
pop
mov
xchg
call
push
sbb
push
fadd
sub
popa
loop
aam
std
mov
jg
out
cmp
push
pop
dec
sbb
cmp
loopne
aas
(bad)
int
and
dec
lock
xor
pop
inc
add
sub
xchg
sub
sbb
sahf
imul
jecxz
jb
mov
cmp
je
jge
mov
jg
dec
rcr
aas
jecxz
pinsrw
mov
jo
clc
jg
sbb
and
cmp
aam
lods
mov
jbe
lahf
mov
sbb
aad
adc
jg
rol
pop
call
cwde
sub
jae
sbb
adc
imul
test
sbb
push
sub
fcomp
pop
(bad)
or
add
pop
fcomp
pop
adc
cs
jl
and
adc
dec
jl
addr16
ins
lods
mov
jecxz
or
(bad)
dec
repnz
mov
add
lahf
nop
test
jno
pop
(bad)
in
sbb
xchg
push
xor
je
rol
out
nop
pop
jg
add
sub
or
pop
mov
fisttp
arpl
and
adc
int3
int3
push
push
add
xor
aam
add
or
jecxz
and
inc
sbb
ss
adc
and
outs
and
mov
add
cs
mov
push
movs
xchg
cmp
ret
call
(bad)
and
jge
jbe
inc
sub
push
daa
mov
nop
dec
push
pop
test
xor
cwde
mov
hlt
adc
and
or
push
jg
outs
sbb
pop
in
mov
mov
(bad)
jg
ss
enter
cmp
and
and
pop
in
sub
fist
mov
popa
add
xor
outs
push
(bad)
mov
fcom
test
ror
adc
fnstcw
and
pop
aad
inc
jg
or
ficom
and
inc
xchg
icebp
and
in
xor
mov
sub
pop
xchg
mov
jg
and
xchg
and
loopne
in
pop
sub
inc
mov
add
push
push
and
es
test
sbb
xor
imul
xchg
push
loop
jg
adc
add
imul
ror
in
and
fiadd
loope
ja
cs
icebp
call
pop
or
pop
imul
inc
pop
push
daa
mov
jnp
or
or
mov
int3
popa
jecxz
sbb
aas
in
and
movs
in
and
and
sbb
jbe
movaps
jno
mov
xchg
dec
lock
or
add
push
call
cwde
add
inc
shl
inc
push
pop
pop
jl
jle
imul
test
add
js
or
sub
data16
sbb
pop
cmps
add
pop
push
pop
sub
sub
mov
sar
add
and
or
mov
int3
movs
or
jmp
pusha
mov
(bad)
and
es
push
shl
cmp
or
call
cmp
ins
pop
int3
mov
pop
push
inc
jmp
sub
shl
adc
in
sub
inc
and
pop
cmp
sbb
lock
pusha
or
add
cmp
xlat
dec
sub
sbb
push
mov
arpl
xchg
cld
mov
jmp
mov
sbb
aam
lahf
pop
cmp
ins
les
adc
xchg
push
nop
add
xchg
cwde
lea
adc
and
mov
lds
test
add
mov
test
push
or
xchg
mov
(bad)
ja
or
mov
add
add
add
adc
push
movs
add
push
loopne
test
inc
cs
rcr
mov
cs
call
arpl
or
xor
sub
test
ror
xchg
mov
push
fild
xor
or
mov
jo
fild
mov
cmp
jo
or
mov
xor
adc
lahf
mov
sbb
sub
(bad)
xor
pushf
xor
mov
xor
xor
add
shl
aas
sbb
dec
pop
or
mov
(bad)
neg
clts
or
adc
cwde
rol
dec
push
adc
push
xor
and
xor
xor
add
push
int3
xor
loope
and
adc
push
imul
icebp
or
inc
xor
int3
xchg
aam
push
adc
leave
leave
(bad)
jmp
or
loopne
nop
add
loope
xor
aaa
or
sub
sub
ins
imul
int3
dec
cmp
sbb
cmps
mov
mov
and
pusha
xchg
pop
arpl
mov
inc
ins
rcr
or
sbb
lea
mov
pop
add
mov
jne
sub
and
xor
mov
mov
mov
sbb
pop
mov
or
or
jbe
push
jne
imul
cmps
xchg
xor
cwde
pop
rcl
inc
or
or
mov
mov
jnp
jmp
xchg
sub
adc
mov
scas
(bad)
pusha
pop
jp
in
fistp
xor
jg
aaa
or
mov
fwait
sbb
mov
or
dec
rcr
in
cmp
cmc
fdivr
adc
fistp
add
(bad)
cmp
les
ss
lahf
and
cmp
dec
mov
mov
inc
pusha
pop
dec
inc
pusha
pavgb
push
sub
mov
jo
add
sub
pop
xchg
and
scas
xchg
lea
sti
(bad)
ss
push
sub
ffreep
add
mov
ins
cmp
mov
mov
pop
test
pop
jb
and
enter
push
and
sbb
ss
xor
mov
imul
inc
scas
or
call
in
xchg
repnz
cld
sub
sbb
add
test
fist
sub
xchg
add
push
pop
fisubr
mov
sar
sti
sbb
pop
xlat
push
lods
xchg
push
jnp
imul
push
inc
and
adc
and
fs
mov
movs
inc
aaa
js
push
sar
mov
or
imul
xor
mov
mov
(bad)
fist
add
xor
and
or
in
lods
sub
mov
arpl
jns
sub
xchg
arpl
xchg
inc
cmp
cmp
pusha
cmps
dec
cs
xchg
mov
mov
inc
les
ss
cmp
stc
push
fninit
or
mov
jo
xchg
adc
push
or
xchg
mov
int3
fild
pop
nop
(bad)
ror
mov
jle
jb
mov
or
mov
rol
push
jmp
cmp
push
call
outs
and
mov
aas
inc
mov
xchg
dec
mov
hlt
or
(bad)
push
push
mov
pop
pop
and
clc
mov
mov
fist
adc
add
and
xchg
sbb
movs
shl
push
in
sub
ret
mov
aas
loopne
mov
xchg
out
and
add
mul
jg
inc
xor
rcr
mov
cmp
xor
push
aad
add
push
fisttp
call
push
push
js
es
movs
cmp
test
data16
push
dec
or
mov
push
cdq
inc
sub
adc
xchg
je
xor
dec
and
dec
or
inc
sub
lods
mov
cwde
xor
bound
push
cmc
mov
aas
add
jl
int3
nop
retf
pop
call
cmps
and
and
(bad)
sbb
add
mov
adc
jge
inc
push
(bad)
or
mov
dec
push
mov
aas
test
je
add
jle
out
fdivr
int
mov
arpl
push
and
pop
inc
sub
pop
imul
ds
pop
in
mov
sbb
cmp
mov
xchg
sbb
dec
or
cld
mov
dec
dec
push
cdq
cli
dec
add
add
loopne
add
nop
lock
mov
jg
cmp
mov
or
mov
rol
dec
(bad)
fstp
loopne
cmp
scas
int3
arpl
aas
rcr
test
mov
dec
gs
in
repnz
inc
sub
add
in
cmps
nop
retf
lock
xor
dec
and
movs
jb
lods
add
je
dec
and
dec
or
inc
sub
adc
nop
retf
sbb
sbb
test
and
and
sub
or
inc
sub
xor
addr16
push
mov
mov
pop
mov
jg
mov
inc
pop
stos
cmp
add
add
push
mov
int3
pop
or
sub
mov
mov
retf
inc
lods
dec
sub
push
aas
or
(bad)
jge
(bad)
xor
dec
push
mov
add
jg
repnz
mov
and
sbb
pop
xchg
xchg
mov
cmp
fstp
push
sbb
xor
arpl
cmp
ror
or
shr
adc
dec
pop
ret
xchg
pop
ds
sbb
pop
dec
mov
xor
and
mov
sbb
mov
cmp
ret
in
fdiv
mov
daa
pop
adc
xchg
fs
inc
xchg
enter
push
adc
enter
add
sub
dec
and
shl
or
rol
aas
sub
les
pop
enter
cmp
sti
sub
pop
leave
add
mov
mov
add
shl
cmp
xor
bound
push
jo
lock
and
dec
aas
in
add
aas
(bad)
out
cmp
aas
or
cmp
pusha
add
mov
mov
popf
sub
jmp
adc
mov
daa
test
xchg
in
jg
mov
adc
pop
mov
xor
stos
mov
inc
mov
mov
adc
loopne
aaa
add
and
(bad)
mov
fiadd
and
fsubp
mov
fbstp
pusha
add
out
and
push
shl
loopne
xchg
iret
repz
shl
fistp
push
inc
pusha
and
loopne
fdiv
frstor
push
xor
repz
jo
mov
lock
repz
adc
ds
loope
loope
iret
repz
loope
loop
repz
repz
loop
loop
repz
jecxz
jecxz
push
shl
out
repz
in
aam
inc
push
jle
stos
rcl
cmp
sar
sbb
inc
pop
repz
repz
pushf
mov
out
call
imul
xchg
lods
mov
jns
call
sbb
inc
push
ins
sub
out
cdq
mov
adc
pop
cmp
repz
and
sahf
out
mov
pusha
and
das
(bad)
(bad)
mov
shl
out
push
pusha
mov
shl
inc
jecxz
cmp
pusha
and
mov
pop
adc
dec
mov
dec
push
clc
push
mov
mov
inc
dec
push
cmps
dec
mov
dec
dec
rcl
add
mov
sahf
mov
mov
add
ins
push
je
jg
imul
outs
add
ins
push
jbe
inc
push
jb
arpl
neg
jge
xor
popa
jbe
inc
pop
push
(bad)
push
push
push
bound
and
ins
outs
arpl
imul
mov
(bad)
cmc
cmp
repz
div
pop
movs
sbb
inc
push
dec
and
dec
es
fstp
push
sbb
inc
and
push
add
into
and
outs
pop
daa
cmp
pop
es
or
pusha
and
push
imul
cmp
add
dec
dec
push
push
fdivp
arpl
push
data16
jp
neg
jnp
sbb
and
je
fs
sbb
out
xor
into
pop
outs
jp
xchg
mov
js
je
imul
mov
adc
add
fmul
mov
(bad)
fbld
popa
ins
and
ins
gs
sub
sub
arpl
jae
data16
aaa
cld
je
push
imul
jne
and
xor
pop
jg
(bad)
sbb
ins
data16
arpl
sbb
jo
cs
xchg
mov
out
out
mov
add
pop
or
shl
and
xchg
loopne
das
ins
outs
arpl
out
mov
cmp
inc
jo
je
jp
cmp
shl
and
add
(bad)
jne
pop
and
push
and
cmp
cmp
pop
or
je
pop
mov
loop
adc
outs
aas
pop
aas
gs
cmp
fdivr
add
imul
mov
sbb
sti
ins
jbe
xchg
adc
xor
jnp
dec
jo
sub
xor
and
jg
data16
mov
add
xchg
bound
add
dec
dec
pop
push
pop
ret
mul
sub
sub
mov
outs
mov
jmp
jmp
outs
mov
add
scas
xchg
pop
clc
icebp
push
mov
dec
retf
and
cmp
and
pop
cmp
sub
cmp
sub
fild
bound
push
cs
iret
retf
fidivr
inc
je
sub
aas
jg
fbld
xchg
(bad)
add
add
div
add
ds
jb
nop
mov
lds
(bad)
outs
ins
or
mov
adc
arpl
pop
jo
out
sbb
fwait
jnp
rol
pusha
inc
cmp
jne
jno
jnp
and
outs
pop
cmps
push
and
inc
dec
addr16
loopne
cwde
cmp
mov
or
imul
jg
add
mov
popa
or
push
push
dec
lock
outs
ja
bound
sbb
inc
pop
(bad)
and
push
jo
sub
rcl
loope
rcl
outs
push
out
mov
adc
and
adc
and
not
pop
jmp
mov
out
or
sub
xor
inc
add
imul
cmp
add
or
add
(bad)
arpl
dec
daa
dec
add
mov
fwait
ret
add
sub
ret
aaa
xor
cmp
ins
retf
and
dec
cmp
loope
out
push
push
sbb
push
cmp
in
push
arpl
cmp
and
and
sbb
jbe
ins
sbb
and
jae
bound
jb
jo
jecxz
sbb
test
fbstp
test
pop
jne
or
pop
daa
xchg
push
das
pusha
sub
stos
inc
test
adc
and
add
adc
mov
sbb
scas
ja
adc
mov
ror
inc
daa
es
aaa
dec
adc
mov
sub
cmp
lahf
pop
inc
test
add
shr
shl
sbb
adc
out
xchg
stos
and
sbb
inc
addr16
cmp
retf
adc
add
sbb
fs
out
scas
test
ins
pop
jb
push
ins
add
outs
pusha
adc
add
push
ins
test
sub
aas
mov
inc
add
imul
jo
aaa
clc
in
jo
jb
jae
popa
arpl
jne
arpl
jne
out
retf
ins
outs
ja
inc
jo
outs
ins
add
jb
idiv
xchg
push
bound
imul
ins
inc
popa
movd
or
lea
add
push
add
push
js
pop
add
ins
out
in
dec
push
adc
jbe
outs
out
mov
add
or
add
pop
popa
jnp
out
pop
cmp
adc
add
lock
mov
call
adc
mov
mov
aam
pop
jp
mov
shr
push
enter
and
and
mov
ds
ins
data16
inc
push
push
inc
add
dec
rcr
aaa
lahf
pushf
cmp
inc
push
inc
push
push
inc
pop
inc
gs
or
jns
je
push
shl
jae
out
jae
(bad)
(bad)
rcr
dec
inc
inc
dec
inc
push
bound
std
jnp
jg
and
jb
and
pop
inc
jne
adc
popa
jb
gs
inc
lds
dec
outs
arpl
outs
imul
imul
mov
mov
jb
inc
out
es
jbe
ins
push
jl
cmp
dec
call
imul
push
inc
dec
pop
xchg
and
mov
xor
cs
ins
pop
inc
fs
xchg
adc
lahf
pusha
jbe
mov
outs
push
dec
ja
gs
out
add
inc
dec
push
push
pop
jae
ins
pop
fld
enter
ins
outs
push
xor
in
std
mov
jae
dec
sub
js
mov
rol
push
out
push
mov
jo
pop
and
dec
rol
sbb
popf
ja
imul
pop
push
imul
mov
ins
gs
xor
jbe
push
js
bound
in
mov
jle
xor
xchg
mov
add
jl
xor
inc
std
inc
sub
sub
aad
push
in
jnp
imul
push
and
sbb
cli
push
fimul
inc
push
in
push
push
push
dec
add
jae
adc
aam
dec
cs
test
inc
cmp
(bad)
pop
mov
fisubr
sub
imul
pop
aas
popa
inc
jae
adc
test
imul
clc
mov
pop
add
jg
rol
jae
imul
dec
loopne
add
inc
add
sbb
call
lock
movs
mov
mov
push
into
fcomp
ficomp
std
push
shr
loope
pusha
push
js
and
add
fcomi
inc
cli
pop
inc
dec
lds
scas
loope
adc
outs
div
inc
data16
loopne
es
imul
mov
loopne
addr16
ds
add
push
sbb
or
sub
jg
mov
cmp
fisubr
push
add
outs
outs
je
inc
dec
dec
push
xor
inc
loopne
push
add
sub
push
dec
dec
and
jle
adc
dec
dec
push
adc
inc
push
and
outs
test
push
adc
jb
dec
dec
dec
and
and
daa
sub
pop
mov
outs
jg
dec
sbb
push
or
add
mov
mov
outs
arpl
cmp
sti
adc
ins
jne
inc
add
push
ret
mov
jmp
mov
sbb
aaa
dec
(bad)
jmp
pop
fs
test
test
scas
es
pop
mov
loopne
cwde
jbe
imul
das
xor
cs
scas
in
lahf
jo
dec
inc
push
fwait
std
inc
add
dec
dec
pop
inc
and
retf
push
je
push
push
addr16
das
outs
cmp
and
and
rcl
cmps
dec
outs
add
and
fild
cmp
popa
sti
fs
adc
inc
jb
adc
popaw
dec
popa
call
mov
pop
bound
cmp
gs
inc
adc
add
pop
call
or
pushf
inc
jp
pop
les
mov
test
jo
popa
jns
fiadd
sar
push
jae
push
mov
ror
push
ja
ja
(bad)
sub
aam
data16
mov
mov
arpl
test
inc
sub
push
sub
pop
outs
jo
sub
popa
mov
cmps
push
je
adc
push
dec
inc
push
mov
lods
xor
inc
xor
fld
cmp
xor
(bad)
push
or
add
or
jge
xor
ins
pop
xchg
loopne
iret
add
enter
push
adc
dec
jae
ins
(bad)
dec
push
outs
sub
push
dec
and
mov
dec
inc
pop
mov
sbb
sub
fild
xchg
push
push
push
ins
inc
xchg
push
neg
sbb
mov
inc
inc
gs
push
jp
das
xor
mov
sub
(bad)
repnz
lea
push
imul
push
dec
outs
ss
out
fisub
aas
std
add
imul
inc
pop
push
and
sub
jp
fdivr
repnz
aaa
push
inc
sti
ins
and
pop
nop
pusha
pop
js
push
push
inc
push
pop
sar
dec
imul
jmp
add
add
inc
mov
mov
test
stc
daa
lea
add
pop
mov
pop
xchg
jae
pop
xor
aaa
(bad)
xor
cmp
pop
gs
arpl
test
inc
xor
jmp
adc
or
pop
jo
lods
add
adc
add
pop
ss
or
or
stos
push
das
cmpps
push
sub
fcomp
dec
add
inc
and
neg
push
add
push
lahf
inc
dec
and
fdivp
adc
push
push
mov
add
and
iret
jg
xor
xlat
jle
pop
pop
pop
jo
lahf
mov
add
(bad)
xchg
mov
aas
dec
imul
mov
jne
inc
mul
sbb
data16
out
sub
pop
rcl
pop
jp
bound
adc
dec
(bad)
outs
add
or
daa
push
pop
gs
pop
in
loopne
inc
pmaxsw
jp
(bad)
les
dec
inc
(bad)
pop
les
(bad)
xor
add
inc
or
int
imul
add
sub
arpl
dec
(bad)
outs
push
sbb
push
ficomp
dec
sbb
(bad)
neg
sbb
gs
enterw
aas
xor
xor
arpl
xor
add
aaa
push
jae
and
mov
pop
mov
adc
js
sbb
inc
push
cmp
xchg
jae
sub
pop
xchg
adc
test
jae
inc
bound
add
loop
ja
ret
jecxz
pop
xchg
lock
cwde
push
outs
jbe
sub
call
sub
mov
ja
repnz
add
(bad)
(bad)
(bad)
(bad)
(bad)
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movs
jb
mov
xchg
es
test
pusha
loop
push
xor
sbb
and
daa
mov
(bad)
jmp
outs
pop
mov
sub
das
test
add
and
mov
push
mov
dec
pop
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
mov
(bad)
(bad)
call
push
ror
or
in
pop
xchg
inc
pop
les
sbb
or
inc
out
mov
(bad)
ficomp
fneni(8087
xor
or
and
ret
bound
enter
aad
test
or
(bad)
jmp
scas
or
cmps
mov
call
mov
fdivr
mov
dec
add
push
popa
xor
sbb
adc
mov
push
sub
(bad)
(bad)
(bad)
fisttp
inc
push
mov
mov
aad
movs
cmp
repz
(bad)
(bad)
(bad)
(bad)
sti
jl
cmp
xor
inc
inc
(bad)
fsubrp
retf
push
jnp
xor
dec
xchg
or
ret
(bad)
(bad)
(bad)
dec
mov
mov
pop
mov
and
xchg
push
aam
pop
int3
pop
gs
(bad)
(bad)
call
std
in
mov
push
cmps
lea
add
pop
add
(bad)
(bad)
inc
shr
(bad)
add
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
(bad)
(bad)
(bad)
push
lods
je
out
xor
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
sbb
push
ds
(bad)
sar
call
hlt
pop
(bad)
xor
and
sbb
mov
or
xchg
leave
pushf
out
mov
loopne
sub
mov
jmp
cmp
push
cdq
popa
pop
sub
mov
imul
push
and
jl
cmp
lods
out
repnz
outs
(bad)
mov
sub
(bad)
repz
pop
out
stos
xchg
add
jns
retf
leave
mov
aaa
add
inc
push
lods
xor
mov
mov
mov
jo
out
xchg
es
out
(bad)
cwde
int3
push
xor
sahf
out
sahf
in
jno
xor
ffreep
push
and
sbb
sahf
out
add
add
mov
push
shl
mov
push
aaa
pop
mov
out
jg
push
xchg
xchg
ja
out
sahf
pop
push
mov
xor
das
test
sbb
(bad)
xchg
in
xchg
cmp
repz
push
mov
cmp
(bad)
aam
cmp
iret
addr16
out
stos
sti
sahf
test
push
test
cwde
add
out
push
loopne
iret
repz
cmp
test
mov
fimul
iret
repz
cmp
mov
iret
fisub
inc
inc
repz
mov
ror
push
adc
in
int
xor
ja
xchg
lahf
pop
or
out
les
ds
aas
inc
sbb
repz
or
push
add
push
nop
mov
or
ja
out
push
mov
and
pop
or
pop
loopne
sahf
out
xor
or
add
mov
out
and
shr
out
mov
out
add
mov
aaa
mov
dec
inc
pop
js
aad
out
and
add
out
push
hlt
push
jecxz
sahf
jmp
pop
js
jbe
add
cs
sbb
jns
cmp
call
fnsave
mov
js
pop
add
push
mov
add
xlat
add
test
push
xor
jns
add
sahf
loope
and
bswap
repz
mov
push
adc
repz
jmp
(bad)
mov
mov
adc
inc
aas
lods
icebp
cmp
mov
ss
stos
scas
out
mov
push
adc
push
aaa
fadd
push
xor
movs
sbb
jno
fnsave
pop
jl
cmp
fwait
pop
jo
dec
xor
popa
xor
inc
jne
sbb
jmp
ja
jmp
and
pop
ja
je
pop
xchg
popa
inc
shl
jno
ret
ror
mov
aad
jns
shl
jo
adc
shl
jb
or
mov
imul
sbb
mov
mov
ins
add
jmp
or
mov
add
nop
cdq
stos
or
pop
fwait
rol
add
adc
push
stc
retf
out
call
call
mov
cmp
cmp
adc
rcr
out
cwde
add
pop
xchg
and
icebp
lock
out
xchg
xor
add
xor
xchg
loop
xchg
sbb
ffreep
adc
add
inc
test
cmps
mov
rol
outs
adc
imul
shr
cld
mov
pop
loopne
test
xor
out
leave
shl
or
jmp
loope
pop
out
mov
shl
adc
outs
inc
push
pusha
add
push
ja
fstp
adc
sub
jno
popa
xchg
push
pusha
push
dec
sbb
scas
jns
push
enter
adc
jmp
int
cdq
mov
sub
cmps
ret
mov
sub
xor
push
jmp
add
push
and
call
(bad)
arpl
clc
jl
test
ja
cdq
idiv
(bad)
push
repnz
fiadd
outs
mov
vandpd
int3
add
(bad)
(bad)
inc
add
addr16
out
(bad)
sbb
stos
stos
out
jbe
call
add
(bad)
inc
inc
cli
jge
xchg
cli
cli
adc
push
push
sti
lock
lods
in
mov
aam
pop
mov
scas
jmp
(bad)
mov
in
jb
fwait
rol
jne
mov
loope
std
sbb
xchg
xchg
scas
dec
es
ss
pop
jle
aas
inc
cmc
div
jo
dec
(bad)
(bad)
(bad)
jmp
xor
push
movs
movs
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
(bad)
dec
add
or
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
call
push
pop
pop
or
adc
sbb
loop
int
jmp
dec
daa
daa
imul
jne
jmp
call
or
sbb
sub
je
sbb
cs
sbb
mov
pop
out
pop
mov
mov
div
cmp
(bad)
(bad)
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
cmp
cmps
push
push
cmc
mov
in
in
sub
and
pusha
jecxz
(bad)
(bad)
(bad)
cld
cld
pop
jns
mov
mov
pop
in
aam
push
(bad)
retf
retf
inc
addr16
cmp
dec
dec
ficomp
dec
dec
aam
pop
pop
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
dec
dec
xlat
xor
push
adc
inc
iret
jmp
jmp
sub
push
(bad)
jg
and
lahf
lahf
mov
mov
call
pop
mov
inc
rol
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
shr
and
adc
xor
(bad)
(bad)
jg
push
std
repz
mov
int
dec
sbb
adc
adc
xor
(bad)
(bad)
jmp
mov
xchg
xchg
mov
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
(bad)
(bad)
(bad)
inc
fs
mov
sbb
sub
jae
xchg
shl
sbb
dec
shl
(bad)
(bad)
jg
and
push
sub
jle
nop
nop
stos
or
inc
retf
out
sub
mov
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
jns
pop
pop
loop
or
sbb
fneni(8087
loopne
xor
push
je
cmp
or
(bad)
(bad)
(bad)
call
xchg
dec
dec
fisttp
push
or
and
mov
ret
mov
lods
lods
out
les
mov
cmp
xchg
movs
shl
in
bnd
mov
out
mov
enter
call
fisubr
mov
mov
aad
(bad)
(bad)
(bad)
call
test
mov
push
push
cli
repz
hlt
pop
iret
jmp
hlt
jp
inc
scas
jmp
outs
mov
mov
and
(bad)
(bad)
jmp
jb
sbb
and
cmps
cmps
icebp
jae
mov
xchg
mov
retf
call
fnstsw
je
ds
(bad)
(bad)
(bad)
call
and
mov
mov
loopne
jo
jl
ds
jno
mov
int3
data16
jmp
nop
dec
dec
fadd
add
add
inc
sbb
push
adc
popa
popa
mov
scas
push
push
stc
imul
rcr
sbb
or
loope
jmp
clc
adc
cwde
cwde
mov
adc
call
(bad)
imul
pop
mov
cmps
sub
push
and
adc
jmp
into
dec
stos
push
push
(bad)
(bad)
call
(bad)
jp
mov
or
or
push
add
xor
(bad)
(bad)
(bad)
inc
cdq
cdq
mov
sub
movups
mov
test
push
cld
ins
mov
push
cmp
jns
scas
movs
add
jns
mov
test
jge
(bad)
out
out
sahf
out
popf
inc
xchg
jmp
or
addr16
jns
out
jmp
sahf
out
sbb
push
sahf
out
sahf
inc
add
hlt
xor
sahf
out
or
jns
out
push
gs
sub
lgs
ss
jns
out
cmp
out
sahf
out
sahf
je
sub
mov
sti
test
sahf
out
into
jnp
jno
gs
pushf
out
push
repz
enter
repz
inc
(bad)
aam
cmp
repz
imul
push
repz
repz
adc
xor
repz
repz
mov
cmp
rep
mov
repz
shl
sbb
cmp
repz
dec
adc
das
repz
repz
int3
cmp
repz
repnz
sub
repz
mov
cmp
repz
or
repz
sub
cmp
loop
cmp
repz
cmp
push
repz
repz
ins
in
iret
repz
outs
out
cmps
test
aaa
cmp
repz
xor
mov
fcom
icebp
mov
iret
repz
shl
mov
pop
and
scas
mov
sbb
repz
xrelease
and
iret
repz
(bad)
push
and
cmp
repz
fadd
iret
repz
les
cmp
add
mov
iret
repz
pop
daa
mov
repz
repz
mov
cmp
repz
(bad)
js
(bad)
repz
repz
adc
xor
repz
(bad)
mov
cmp
repz
cld
(bad)
cmp
cmp
repz
jnp
imul
cmp
outs
lds
add
cmp
repz
xlat
stos
jbe
repz
repz
cli
pop
iret
repz
inc
lock
aam
scas
cmp
repz
movs
jb
mov
cmp
repz
xchg
es
iret
repz
test
cmp
repz
fdiv
adc
repz
and
sbb
add
loop
iret
repz
daa
mov
or
cmp
repz
outs
iret
repz
pop
mov
cmp
repz
jecxz
test
lods
xor
jns
out
cld
mov
push
out
sahf
out
cmp
pop
sahf
out
sahf
iret
shr
stos
sti
inc
jns
out
dec
xor
sahf
out
jg
cmp
sahf
out
sahf
test
mov
sahf
out
popf
cmp
mov
out
and
push
sahf
out
sahf
ror
or
in
pop
jns
out
xchg
inc
pop
les
jle
fs
sbb
pusha
or
jns
nop
mov
out
sahf
out
adc
pop
or
loopne
cmp
dec
jns
out
push
and
ret
jns
out
bound
jns
jns
enter
jns
out
aad
test
sahf
out
jmp
sahf
or
jns
out
cmps
mov
call
out
pop
dec
mov
sahf
mov
mov
dec
jns
out
add
push
popa
xor
push
mov
out
sahf
sahf
loope
cwde
adc
sahf
out
(bad)
jns
out
jmp
out
sahf
fisttp
sahf
out
out
push
sahf
out
cmpxchg
out
sahf
push
arpl
bnd
out
imul
add
jns
out
sub
xlat
stos
sahf
out
sahf
jbe
or
cli
jns
out
pop
inc
lock
aam
jns
out
scas
pushf
movs
jb
out
sahf
shl
sahf
out
aas
test
sahf
out
icebp
jno
xor
add
and
sbb
out
xchg
add
jns
out
loop
daa
mov
out
sahf
jne
sub
jns
out
outs
pop
mov
sahf
out
mov
jecxz
xlat
aad
sahf
test
inc
iret
repz
and
mov
push
cmp
repz
cmp
pop
repz
repz
shr
stos
sti
iret
repz
inc
dec
xor
repz
jg
cmp
repz
repz
mov
cmp
xchg
popf
cmp
mov
cmp
and
push
repz
repz
or
in
iret
repz
pop
xchg
inc
pop
les
jle
fs
sbb
cmp
repz
or
and
nop
mov
cmp
repz
adc
pop
or
cmp
repz
xor
or
repz
dec
push
and
ret
iret
repz
bound
iret
repz
enter
repz
(bad)
aad
test
repz
jmp
repz
repz
sbb
mov
call
cmp
pop
dec
mov
repz
mov
iret
repz
dec
add
push
popa
xor
push
mov
cmp
repz
loope
cwde
adc
repz
imul
cmp
repz
jmp
cmp
repz
cmp
mov
cdq
cmp
repz
cmpxchg
(bad)
push
push
push
hlt
cmps
push
jle
gs
sbb
movs
ret
cmp
pop
xchg
cmp
inc
(bad)
(bad)
(bad)
push
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
dec
and
lds
retf
(bad)
(bad)
jg
xlat
es
xor
pop
dec
and
jmp
ret
(bad)
mov
dec
lock
sar
mov
(bad)
(bad)
(bad)
call
adc
ins
jp
xchg
push
pop
fcmovbe
mov
and
dec
loopne
sub
ret
(bad)
dec
js
pop
imul
jno
mov
mov
data16
cmp
dec
in
xor
jg
(bad)
(bad)
inc
fs
mov
and
aam
sbb
sbb
ins
xchg
clc
mov
jae
and
add
jecxz
(bad)
push
push
stos
sub
mov
add
lds
shl
or
and
push
in
push
sbb
sub
(bad)
(bad)
(bad)
inc
repnz
imul
int
add
bound
les
push
popf
mov
jg
or
mov
xor
inc
pusha
out
stos
pop
(bad)
jmp
mov
and
fld
cmp
dec
out
inc
xchg
push
lea
jno
pop
add
pusha
push
adc
and
mov
inc
int3
fstp
call
cld
inc
mov
cmp
out
(bad)
(bad)
(bad)
aas
cmc
jmp
add
add
push
adc
ins
pop
jb
std
call
test
push
cmp
sub
cmp
or
fldenv
cmps
and
ss
addr16
push
out
mov
xchg
rcr
fwait
(bad)
(bad)
(bad)
call
dec
popa
fsub
mov
sbb
sbb
loop
mov
in
and
inc
adc
movs
or
push
dec
or
(bad)
(bad)
jg
sub
push
test
test
cdq
fnstsw
test
pop
add
push
mov
pop
sti
adc
jbe
and
(bad)
out
clc
(bad)
fdiv
icebp
arpl
xor
retf
test
adc
adc
test
(bad)
(bad)
dec
jge
mov
xor
(bad)
sub
dec
fdiv
push
in
ja
jecxz
sub
(bad)
(bad)
push
mov
cli
inc
jmp
mov
mov
jge
fsub
xor
(bad)
dec
(bad)
fnstcw
rol
mov
mov
cmps
cmc
or
fidiv
mov
cmp
popf
in
js
or
(bad)
(bad)
(bad)
inc
test
call
add
cmc
lahf
pop
cmp
aad
test
(bad)
call
mov
lods
cdq
cmp
sbb
call
cmp
or
sbb
in
call
(bad)
call
gs
jmp
jle
mov
call
(bad)
ss
jmp
movs
(bad)
(bad)
jl
xor
xor
movs
xchg
xor
jmp
or
loopne
shl
icebp
add
dec
inc
in
(bad)
jg
push
push
pop
xchg
(bad)
(bad)
(bad)
push
das
jbe
(bad)
lea
mov
int3
stos
dec
push
in
add
sahf
shl
sbb
sub
mov
(bad)
call
popf
pop
jmp
xchg
or
mov
sbb
push
jmp
(bad)
add
cli
inc
call
jp
clc
adc
(bad)
call
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
sbb
(bad)
(bad)
(bad)
(bad)
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
mov
lods
cmp
sub
mov
ret
jb
loop
or
(bad)
(bad)
jmp
cmp
mov
or
add
or
(bad)
mov
pushf
fs
rcl
xor
ins
ins
pop
je
mov
push
ret
iret
repz
xchg
retf
icebp
stos
xchg
push
cmp
repz
xchg
and
iret
repz
cmp
loope
adc
repz
jmp
sub
repz
imul
cmp
fnsave
cmp
repz
pusha
inc
loopne
repz
repz
pop
sbb
mov
loop
sub
cmp
repz
call
repz
iret
repz
mov
popf
cmp
repz
xor
stos
repz
repz
push
stc
cmp
iret
inc
mov
outs
jmp
iret
repz
int3
ja
mov
cmp
repz
inc
jmp
or
repz
sti
push
push
daa
repz
repz
cmp
psrld
iret
repz
or
inc
sbb
or
repz
dec
mov
cmp
repz
jbe
push
repz
and
repz
clc
adc
repz
cmp
repz
ins
cdq
cli
and
cmp
repz
fsubr
(bad)
iret
repz
sar
iret
sub
cmp
repz
in
fwait
(bad)
ret
cmc
mov
jl
mov
cmps
outs
cmp
repz
or
add
gs
out
iret
repz
into
aam
scas
xor
cmp
repz
aaa
cmps
mov
repz
repz
test
cmp
dec
push
(bad)
sbb
jg
pop
jae
repz
repz
push
xor
mov
repz
jp
mov
xor
cmp
pop
aas
jns
repz
repz
cmp
ds
jb
mov
repz
jno
pushf
nop
repz
repz
jo
inc
cmps
iret
repz
movs
pop
imul
iret
repz
cli
ins
jbe
repz
repz
retf
inc
mov
iret
sbb
shl
cmp
repz
pop
pushf
jp
repz
repz
enter
cmp
jns
jno
lods
lods
cmp
repz
dec
xor
jg
cmp
repz
mov
cmp
std
ins
clc
rol
(bad)
cmp
repz
sub
jnp
repz
xrelease
repz
mov
loop
mov
cmp
push
push
loope
repz
repz
out
lahf
adc
push
add
cmp
repz
sti
jmp
iret
repz
mov
or
iret
nop
xchg
in
repz
repz
(bad)
cmp
iret
repz
cmp
cmps
push
cs
repz
xchg
xchg
lds
repz
repz
sbb
cmp
pop
or
cmp
repz
frstor
cmc
repz
repz
(bad)
cld
iret
repz
icebp
fadd
iret
repz
xor
iret
repz
jecxz
mov
iret
mov
sub
dec
cmp
repz
mov
cmp
repz
repz
inc
adc
iret
repz
sub
cmp
repz
repz
call
iret
repz
or
repz
repz
mov
iret
repz
fcomp
cmp
repz
dec
add
mov
cmp
repz
push
jmp
inc
sbb
cmp
repz
adc
daa
leave
repz
repz
fbstp
iret
repz
aaa
int
outs
fcomi
cmp
repz
xor
ret
and
dec
xchg
add
iret
rol
repz
pop
daa
stos
popf
repz
repz
jecxz
jbe
iret
repz
add
sub
repz
jmp
repz
ror
cmp
push
mov
cmp
repz
pop
mov
iret
repz
fistp
push
iret
repz
push
imul
cmp
fidivr
dec
repz
repz
push
jmp
(bad)
cmp
aaa
sub
iret
repz
pop
imul
repz
cs
repz
test
iret
repz
ds
(bad)
repz
repz
push
cwde
mov
iret
fld1
mov
enter
repz
test
repz
xchg
add
adc
iret
repz
test
cmp
repz
or
fwait
repz
repz
adc
mov
mov
iret
repz
icebp
jne
jg
cmp
repz
sti
inc
iret
repz
and
in
arpl
(bad)
dec
mov
iret
repz
mov
shl
xchg
jmp
iret
repz
dec
cmp
aam
cmp
repz
jp
lods
cmp
repz
js
jle
fdivr
cmp
repz
pop
rcl
and
lods
sbb
iret
pop
call
repz
out
lahf
mov
cmp
rep
aas
movs
mov
iret
adc
iret
repz
dec
out
stos
xchg
repz
repz
gs
iret
repz
mov
cmp
repz
xlat
mov
iret
repz
iret
repz
repnz
idiv
cmp
inc
scas
push
iret
repz
iret
repz
or
push
retf
xor
jecxz
mov
xchg
push
mov
push
xchg
inc
jp
mov
sbb
lea
push
jp
mov
jmp
scas
into
mov
jbe
test
cmp
es
mov
push
push
imul
pop
cs
or
es
push
cmp
(bad)
cmps
out
push
dec
call
jle
test
xchg
xchg
add
xchg
into
(bad)
push
jp
mov
imul
scas
inc
mov
movs
xchg
push
pop
ss
test
push
jp
sahf
mov
push
dec
not
pop
push
cmp
test
sahf
(bad)
push
fisubr
mov
push
xchg
jmp
test
push
jp
test
mov
xchg
push
push
jle
movs
xchg
xchg
ds
fisub
jbe
xchg
xchg
jmp
xchg
imul
ficom
push
into
pop
movs
xchg
push
pop
out
push
xchg
jbe
mov
test
outs
push
pop
jmp
push
push
mov
test
xchg
sbb
ficom
jle
mov
pop
push
mov
sbb
test
jbe
push
push
cmps
push
push
ss
movs
xchg
sahf
sbb
xchg
push
cmps
xchg
pop
push
jbe
(bad)
sahf
jp
test
test
imul
out
inc
(bad)
movs
mov
scas
mov
inc
(bad)
cs
cmp
ss
ds
jmp
test
dec
xchg
push
jle
cmps
sahf
cmp
cs
out
pop
jp
lods
test
(bad)
pop
jmp
pop
push
test
mov
push
movs
pop
jp
(bad)
xchg
out
dec
cmp
test
imul
test
sahf
push
push
scas
movs
mov
push
mov
pop
imul
jp
test
jmp
mov
movs
xchg
xchg
push
push
out
test
cs
xchg
cmp
jle
cs
jp
test
jbe
cmp
cmps
jbe
(bad)
jmp
mov
pop
pop
stos
mov
sbb
inc
call
jp
and
push
ds
mov
jmp
mov
sbb
(bad)
outs
sbb
push
push
cmp
mov
imul
push
mov
pop
inc
pop
test
push
sbb
xchg
outs
cs
mov
push
mov
into
(bad)
mov
out
pop
push
jp
mov
jmp
test
push
out
movs
or
into
mov
pop
dec
mov
jp
movs
out
scas
inc
inc
pop
jmp
pop
call
sahf
imul
jp
push
out
push
cmp
mov
sahf
push
sbb
mov
call
fsubrp
movs
xchg
xchg
mov
cs
movs
mov
push
mov
xchg
push
push
push
pop
push
jle
pop
cmp
xchg
fiadd
dec
imul
xchg
push
sbb
sbb
mov
jp
movs
push
dec
jp
mov
push
xchg
inc
xchg
cmps
movs
mov
es
xchg
cmp
push
jle
mov
movs
push
pop
outs
pop
push
mov
movs
mov
test
mov
mov
cs
sahf
pop
imul
xchg
push
xchg
dec
push
(bad)
jbe
mov
(bad)
xchg
mov
test
mov
movs
scas
out
inc
cmp
movs
xchg
(bad)
mov
xchg
mov
cs
outs
pop
dec
cmp
push
xchg
test
mov
jle
test
(bad)
mov
inc
movs
mov
jp
cmps
ds
pop
jp
test
movs
pop
scas
pop
cmp
movs
cmps
push
jle
jmp
(bad)
xchg
lods
cmps
xchg
jp
pop
movs
into
cmp
mov
inc
mov
jp
lods
push
push
push
cmp
movs
mov
movs
xchg
mov
test
into
cmp
(bad)
mov
mov
jmp
test
jmp
movs
mov
cmps
mov
sbb
jbe
jbe
(bad)
cmp
test
pop
cmp
mov
xchg
fidivr
push
ds
dec
cmp
mov
imul
scas
push
mov
cs
fidivr
inc
scas
into
ficom
sbb
movs
jbe
push
pop
push
pop
push
(bad)
pop
mov
inc
push
xchg
push
pop
jmp
push
cmp
jbe
sahf
sbb
mov
imul
jp
pop
dec
xchg
call
xchg
test
out
cmp
mov
mov
pop
movs
xchg
xchg
dec
mov
movs
xchg
push
jmp
imul
push
cmp
movs
test
push
call
dec
cs
mov
outs
outs
pop
sbb
mov
call
jg
push
imul
pop
push
push
jle
pop
pop
imul
cmp
movs
jbe
neg
test
outs
mov
push
mov
jp
ficom
test
pop
out
inc
sbb
mov
push
mov
test
xchg
outs
push
movs
xchg
dec
pop
jle
push
mov
outs
ds
jp
test
jmp
mov
movs
movs
xchg
mov
movs
xchg
mov
mov
inc
jp
push
ss
test
test
push
movs
jbe
(bad)
jmp
movs
xchg
push
cmp
scas
xchg
pop
cmp
inc
(bad)
mov
dec
scas
inc
cmp
xchg
inc
(bad)
imul
jp
pop
push
mov
xchg
movs
jle
cs
test
jmp
test
(bad)
pop
xchg
sahf
sbb
scas
pop
push
jle
cmp
test
es
pop
jmp
movs
mov
pop
mov
test
mov
xchg
mov
jmp
jmp
test
inc
dec
mov
test
xchg
(bad)
pop
mov
xchg
push
cmps
pop
jp
push
push
out
mov
cs
pop
imul
lods
xchg
xchg
(bad)
jp
mov
mov
pop
jmp
pop
pop
inc
adc
test
inc
jns
out
out
adc
and
out
sahf
out
aas
dec
inc
pop
sahf
out
sahf
push
ins
gs
nop
jns
out
cdq
or
out
scas
fcom
retf
jns
ret
cld
cmc
out
out
jns
out
xor
and
push
out
sahf
out
add
jp
sahf
out
sahf
push
stos
jns
out
mov
out
sahf
out
xchg
jecxz
icebp
sahf
out
sahf
clc
(bad)
into
aad
jbe
push
out
jg
inc
ror
popf
mov
ss
or
das
sub
dec
imul
out
xor
inc
inc
mov
sahf
ror
sbb
(bad)
mov
outs
fisubr
mov
xchg
and
mov
ds
mov
xchg
push
push
ror
sub
daa
or
inc
popf
hlt
shl
imul
popf
mov
dec
push
push
mov
out
push
(bad)
push
setge
dec
dec
cvtps2pi
xor
jbe
xor
inc
mov
outs
je
push
inc
push
jle
aam
das
lods
push
pop
outs
dec
dec
or
inc
mov
jle
sub
mov
aam
das
cs
rcl
lea
ss
dec
or
dec
sub
jbe
cmp
(bad)
div
rcl
popf
scas
out
inc
push
daa
mov
dec
lods
je
scas
inc
inc
(bad)
popf
xor
push
cs
jne
dec
dec
outs
pop
aam
daa
sub
das
sbb
dec
sbb
inc
out
xor
push
cmps
div
das
mov
(bad)
aam
inc
lods
pop
scas
pop
push
inc
mov
das
cmp
xchg
out
cmc
aam
pop
mov
inc
mov
push
dec
lea
push
push
push
addr16
inc
lods
mov
push
test
mov
pop
mov
pop
jne
push
inc
mov
dec
popf
push
push
push
dec
addr16
dec
sbb
jle
mov
cmps
jbe
(bad)
push
arpl
addr16
inc
lea
inc
push
sub
add
add
cwde
rcr
not
and
or
inc
clc
xor
xor
cmp
cmp
inc
add
ins
loopne
inc
inc
das
add
adc
pop
shr
movaps
add
mov
push
pop
stos
cmp
inc
pusha
scas
add
adc
out
or
dec
aaa
out
adc
push
das
or
outs
xor
xor
mov
xor
arpl
bound
xor
gs
cmp
mov
xor
data16
xor
gs
idiv
fistp
cmp
fs
ss
data16
xor
xor
xchg
mov
sti
xor
arpl
cmp
sbb
aad
jle
xor
fdiv
xor
popa
jb
xchg
out
push
loop
add
mov
imul
xor
inc
push
push
fs
mov
push
xor
cmp
dec
dec
dec
pop
popa
bound
sub
adc
add
pop
add
add
and
sbb
(bad)
(bad)
cmp
pop
ins
ins
jno
xor
cmp
ins
outs
jb
sub
inc
sti
outs
mov
je
js
sub
nop
jmp
jg
pusha
outs
jns
and
cmp
outs
pusha
xor
dec
push
pop
imul
pop
idiv
push
pop
addr16
jl
sub
push
arpl
sub
dec
(bad)
push
cs
inc
inc
dec
push
push
pop
imul
cmp
push
jae
and
adc
ja
xor
cld
pop
xor
data16
jbe
cwde
adc
dec
adc
outs
outs
ins
gs
jns
les
mov
push
add
push
ins
arpl
sti
adc
dec
dec
pop
add
push
pop
jp
cmp
aas
aas
dec
push
pop
pop
pop
push
jo
jnp
sub
bound
add
dec
pop
popa
gs
mov
xor
inc
dec
push
pop
xor
xor
popf
sub
and
sub
xor
cmp
inc
shr
dec
dec
push
add
jne
sub
cmp
push
pop
je
jg
and
sub
cmp
pusha
pop
jns
sub
push
jne
scas
and
add
adc
int
mov
mov
adc
jl
cmp
imul
out
pop
or
add
push
push
add
inc
jne
cs
inc
inc
dec
pop
ins
jbe
sub
pop
inc
dec
push
pop
outs
jae
cmp
dec
dec
packsswb
inc
dec
push
pop
pop
out
xor
inc
loopne
aaa
cld
dec
push
pop
data16
jb
dec
push
hlt
pusha
pusha
arpl
scas
sbb
das
aaa
outs
(bad)
pop
add
jns
or
aaa
cmp
push
cli
push
rcl
mov
cmp
dec
inc
data16
mov
fild
sbb
mov
outs
js
and
mov
pop
pop
pop
jo
out
scas
mov
inc
pushf
popa
pushw
pop
dec
push
popa
add
jg
outs
jne
jnp
sub
inc
dec
dec
push
push
popa
xchg
das
cmp
lock
jmp
and
sub
push
pop
addr16
sbb
add
mov
sub
jo
jne
inc
sar
cmp
dec
cld
imul
hlt
dec
aas
push
pop
outs
push
jno
jb
ja
daa
cs
inc
push
pop
cli
jbe
sub
cmp
sub
outs
in
pop
sub
pop
fs
pop
sub
cwde
ds
push
push
push
pop
sub
shl
and
push
xor
data16
dec
and
clc
sbb
pop
pop
bound
and
div
ss
(bad)
bound
mov
hlt
sbb
mov
mov
jmp
fs
dec
test
mov
mov
push
jnp
cmp
dec
push
pop
pop
push
out
jnp
mov
cmp
dec
(bad)
push
push
and
ins
jbe
push
aam
js
call
mov
sub
adc
sub
jp
imul
je
fist
push
push
add
daa
hlt
cmp
xor
pusha
mov
xor
inc
fbld
and
jp
sub
aaa
sahf
add
adc
pop
arpl
dec
push
xchg
pop
in
push
jp
outs
cmp
sub
lds
mov
inc
pop
pop
mov
gs
mov
inc
push
arpl
jbe
push
hlt
sub
das
xor
sub
cmp
scas
push
pop
dec
add
jnp
sub
icebp
sub
push
push
rol
jae
and
jp
pop
pop
jp
dec
(bad)
(bad)
(bad)
ins
imul
ins
add
rcr
pop
push
jl
xor
push
adc
bound
xor
out
push
mov
pop
shl
push
cmp
pop
mov
xor
pusha
test
push
addr16
pop
cs
das
mov
inc
(bad)
hlt
dec
and
adc
jb
jp
into
sbb
pop
push
push
rol
pop
push
mov
lods
pop
pusha
das
push
jbe
pushf
add
add
sub
retf
add
cs
jo
adc
dec
cld
push
jl
xor
push
pop
es
das
mov
loopne
add
jb
mov
stos
xor
cmps
adc
fsub
out
push
aaa
cwde
jle
cmc
inc
inc
out
push
arpl
jno
enter
adc
outs
clc
pop
xchg
loop
and
lock
retf
push
cmp
pop
movs
cli
jl
sub
add
sbb
stos
es
mov
pop
call
dec
aas
push
pop
in
inc
mov
xor
cmp
mov
mov
rcr
imul
dec
or
mov
pop
cmp
retf
add
ret
inc
jl
cmp
mov
and
dec
sahf
addr16
shl
outs
and
aas
xchg
fs
je
lods
push
inc
dec
dec
in
push
mov
ins
lock
outs
mov
fs
test
lock
ss
inc
call
mov
dec
repnz
pop
push
ja
jl
dec
pop
add
sbb
sbb
and
sub
cmp
inc
dec
push
mov
and
sub
lods
pop
cmp
inc
ja
dec
xlat
int3
pop
add
jno
cdq
inc
add
out
fidiv
or
cmp
rol
jg
shl
xchg
inc
cmp
inc
imul
inc
fisttp
push
jo
sbb
mov
jae
and
les
mov
loopne
cli
sub
jg
pop
mov
into
movs
stos
or
cmp
cmp
mov
aas
inc
pop
test
fidiv
ss
inc
fisub
push
jo
add
aaa
aaa
inc
inc
add
push
es
out
js
add
sahf
retf
xor
je
loopne
(bad)
fs
push
pop
add
loop
jo
mov
aas
inc
dec
movs
and
sub
dec
push
(bad)
ins
jae
scas
jmp
enter
push
xchg
dec
push
pop
movs
jmp
inc
mov
cmp
add
jo
and
jbe
mov
and
push
add
push
cmp
inc
mov
sub
push
add
push
push
push
push
in
outs
and
mov
rcr
mov
jbe
pop
push
dec
dec
mov
inc
popa
inc
js
inc
cmp
mov
lods
je
and
leave
gs
xor
dec
pop
je
xchg
frstor
or
or
add
icebp
push
pop
mov
jl
outs
inc
ficom
fiadd
add
js
jbe
pop
cmp
xor
in
add
adc
add
into
adc
cmps
xor
fdiv
mov
xor
fisubr
or
cmp
push
push
pop
sar
push
bound
scas
inc
inc
dec
adc
jne
bound
pop
push
cmps
(bad)
dec
xchg
aam
xchg
clc
lock
dec
pop
xchg
out
pop
out
ret
push
outs
(bad)
ss
push
and
or
push
mov
sub
out
pop
imul
out
es
sub
dec
int3
or
add
addr16
push
push
addr16
sub
mov
mov
add
push
mov
inc
dec
add
gs
mov
ret
imul
pusha
test
xor
in
push
scas
out
and
in
inc
call
pop
mov
rcl
popa
push
pushf
cmp
(bad)
add
jmp
aas
fsub
pop
bound
fs
ja
cld
cmp
jae
pop
popa
outs
add
xor
ror
push
sbb
aas
inc
dec
push
pop
ss
scas
dec
jo
idiv
push
pop
push
je
cmp
sbb
mov
xor
fisttp
pop
push
imul
xor
push
push
pop
push
and
shr
jnp
or
push
jmp
daa
cmp
(bad)
xor
add
popa
imul
pop
and
lods
dec
jp
mov
push
pop
loope
and
sub
xor
add
add
fdiv
inc
inc
cmp
dec
mov
outs
das
mov
add
sbb
jo
inc
lock
cli
pop
popa
inc
je
inc
jl
test
inc
sub
add
push
pop
pop
aam
cmp
bound
pop
arpl
sbb
cld
jb
xor
push
pop
imul
mov
pusha
(bad)
jmp
inc
test
pushf
sub
sub
shl
or
dec
pop
pop
dec
jbe
jns
push
in
outs
gs
pop
or
ret
inc
sub
jb
adc
mov
pop
push
mov
pop
sub
rol
(bad)
fisubr
inc
popa
adc
dec
push
add
das
dec
jae
daa
xor
aam
pop
ret
xor
(bad)
xor
mov
and
cmp
sub
pusha
rcl
mov
pop
bound
push
cmp
push
push
pop
pop
sbb
sbb
pusha
jbe
daa
sub
cmp
and
lock
inc
sub
pop
mov
jbe
into
and
inc
push
mov
cwde
js
sub
and
xchg
inc
or
push
mov
jno
rol
add
add
mov
push
xor
xor
pop
imul
ror
push
jmp
pop
pop
push
and
ret
imul
xchg
dec
test
daa
and
shl
xor
pop
cwde
and
xor
sub
inc
inc
dec
push
fistp
inc
pop
jo
xchg
cmps
dec
pop
jne
xor
outs
into
es
xor
jge
push
je
cmps
pop
pop
push
and
jbe
dec
dec
ss
add
rcr
(bad)
jmp
sub
cmp
mov
shl
gs
mov
push
das
gs
cs
inc
dec
mov
add
inc
dec
clc
scas
rcl
jl
xor
repnz
scas
dec
inc
daa
dec
mov
and
xchg
push
jo
aad
es
mov
sbb
push
inc
push
pop
add
data16
aam
shr
imul
adc
shl
and
or
stos
xor
mov
inc
inc
lds
ret
das
pop
dec
dec
cmp
arpl
cmp
dec
(bad)
add
or
retf
mov
and
and
aaa
das
inc
mov
bound
ss
and
xor
ja
xor
(bad)
jo
repnz
movs
cmps
outs
sbb
sub
stos
mov
cdq
dec
add
arpl
mov
jns
test
cmp
adc
xchg
ins
jb
sub
push
pusha
test
push
pop
inc
xchg
sub
scas
pop
popa
inc
imul
jbe
jne
shl
xor
outs
sti
outs
sti
inc
add
pop
pop
pop
mov
(bad)
pop
popa
andnps
outs
xor
and
or
movhps
add
je
je
inc
add
bound
pop
bound
dec
outs
push
ds
gs
dec
add
pushf
xor
jmp
fwait
pop
sbb
(bad)
outs
add
ret
sub
dec
mov
arpl
push
and
push
add
stos
push
loope
pop
ins
sub
test
jb
sbb
push
jge
adc
xor
je
cs
ror
lahf
aaa
dec
in
push
cmp
push
add
and
xor
pusha
test
je
les
dec
pop
in
test
inc
push
ja
xor
sub
mov
xchg
cmps
push
pop
inc
imul
outs
mov
inc
add
jae
jg
lahf
lock
dec
xchg
pop
cmp
aaa
inc
push
inc
or
pusha
mov
cmp
icebp
dec
dec
push
pop
add
dec
pop
jns
rcl
pushf
test
inc
lds
inc
sbb
and
dec
call
pop
pop
dec
jmp
je
jp
xor
cmp
arpl
ins
test
mov
push
test
push
sub
cmp
push
push
je
sub
sub
xor
xchg
fs
jge
xor
pop
dec
inc
mov
call
mov
fdiv
xor
dec
push
fisub
xor
inc
dec
push
xlat
xchg
inc
je
pop
in
jnp
push
mov
ins
enter
inc
dec
sahf
loopne
mov
cs
pop
push
pop
pop
inc
ins
xchg
mov
cmp
into
popa
data16
aas
inc
call
pop
jmp
xor
inc
push
push
(bad)
retf
inc
inc
ret
cmp
jbe
jb
jge
cmp
shr
jbe
pop
mov
ja
cli
xchg
add
outs
jnp
push
ret
dec
movs
mov
mov
sbb
push
fwait
inc
(bad)
xchg
ds
shl
ins
inc
xchg
stos
jmp
dec
push
inc
outs
es
outs
adc
cmp
shl
es
fcmove
or
mov
and
inc
cmp
push
pop
or
and
or
aad
inc
push
pop
pop
add
dec
adc
push
pop
and
data16
sub
jnp
add
mov
inc
inc
test
aam
pop
icebp
cs
test
jb
and
stos
mov
sub
(bad)
(bad)
pop
add
xor
inc
loop
hlt
xchg
outs
js
xor
inc
dec
push
push
bnd
or
pop
cmp
int
xor
cmp
(bad)
jmp
mov
push
int
add
sub
sub
adc
inc
rcl
and
cmp
ss
mov
pop
push
jp
test
push
test
pop
(bad)
push
retf
rcr
cmp
ds
adc
outs
mov
sub
das
cmp
push
pop
push
jne
lods
sub
cmp
call
adc
or
sub
jmp
mov
adc
sbb
or
adc
inc
add
test
and
add
add
lods
fadd
pusha
(bad)
outs
and
or
xchg
push
imul
adc
sbb
cmp
pop
and
xor
gs
out
daa
inc
or
fs
scas
ins
add
mov
repz
or
mov
sub
sub
push
addr16
pop
adc
aaa
inc
adc
mov
dec
fist
inc
push
(bad)
arpl
aas
sub
jecxz
mov
mov
lea
push
xlat
sub
jno
sub
mov
arpl
adc
(bad)
call
movs
xor
shr
jae
das
xor
cmp
inc
jl
(bad)
push
pop
pop
imul
dec
push
pop
hlt
add
loopne
and
neg
in
lea
jns
xor
adc
out
les
sub
sub
sub
xchg
jbe
pop
pop
addr16
push
pop
mov
imul
and
xor
dec
push
pop
call
clc
shl
dec
dec
cwde
jb
sbb
inc
dec
pop
jmp
jae
jnp
xor
dec
fsub
pop
mov
cmp
pop
pusha
imul
pop
pop
out
outs
jl
aad
push
pushf
dec
cmps
pop
push
and
adc
ja
pop
popa
outs
jo
sub
adc
inc
sbb
dec
push
inc
pop
push
sar
lods
xor
inc
dec
pop
data16
and
aam
dec
lods
inc
push
stos
mov
jl
dec
loop
sub
cld
ins
js
and
fdivr
dec
rcr
xchg
add
jge
sub
dec
dec
(bad)
pop
fs
outs
jne
cmp
lods
test
sub
and
jl
cs
ins
pop
popa
arpl
sub
ror
push
push
cmp
ror
test
fidivr
(bad)
xchg
pop
pop
push
push
pop
je
xchg
push
xchg
inc
sbb
jno
fiadd
test
mov
add
aas
jl
add
jp
and
push
pop
popa
ins
ja
mov
pop
aaa
cmp
arpl
sub
cmp
rol
daa
pop
gs
adc
add
aas
mov
mov
sub
outs
jnp
push
adc
aaa
jns
jp
aas
adc
add
dec
(bad)
std
ror
pop
bound
test
aaa
push
popf
ror
orps
mov
push
ins
mov
push
jno
mov
ja
arpl
jge
cs
js
shl
inc
outs
imul
jp
arpl
dec
sub
repz
dec
push
push
pop
outs
js
xor
cmps
pop
sbb
(bad)
js
ins
sbb
popa
outs
es
ds
clc
pusha
lds
push
push
push
pusha
imul
and
push
push
mov
imul
xor
push
stos
dec
push
outs
jb
enter
mov
sub
aas
scas
pop
pop
jne
xor
shl
inc
xor
mov
and
data16
sbb
ss
rcr
lock
cli
inc
xor
dec
dec
pop
pop
pop
ins
jbe
es
push
pusha
mov
push
dec
hlt
inc
(bad)
and
xor
je
cmps
pop
or
mov
bound
pop
and
repnz
jp
ss
push
aam
push
cmp
inc
sub
xor
and
adc
sub
jb
mov
xor
push
pop
push
jne
mov
mov
dec
push
pop
xchg
xchg
sbb
dec
push
dec
test
or
daa
inc
add
push
jnp
aaa
pop
(bad)
punpckldq
sub
fiadd
ror
pop
pop
pusha
mov
jbe
xchg
mov
inc
call
mov
ds
or
or
popa
jo
(bad)
icebp
arpl
ret
xor
iret
push
test
add
add
(bad)
rol
add
push
dec
mov
push
xor
add
mov
ret
inc
inc
out
(bad)
jne
dec
mov
aaa
repnz
push
cwde
jl
push
mov
pop
pop
xchg
daa
cli
xchg
cli
or
ja
and
cmp
imul
mov
out
jp
jmp
pop
shl
into
sub
(bad)
jb
and
call
pop
pop
outs
dec
xor
ror
inc
dec
test
push
dec
outs
push
loopne
push
inc
jmp
sub
pop
pop
data16
and
es
pop
dec
pop
fs
ds
jg
xor
dec
push
bound
and
jecxz
sbb
sub
jp
ja
or
scas
fisub
add
scas
inc
mov
loop
jb
scas
add
mov
mov
fist
push
xor
div
clc
inc
push
shl
jp
cs
adc
pop
es
push
ret
int
pusha
fs
jp
cs
push
pop
push
loopne
imul
add
push
imul
dec
xor
daa
sub
inc
cmp
ja
cmp
add
stos
dec
mov
or
sub
push
inc
xchg
or
cmp
push
dec
sahf
call
jo
jp
sub
push
das
xor
mov
lods
pop
add
mov
mov
and
imul
add
inc
gs
sub
and
adc
lds
loopne
sub
bound
pop
fdivr
sub
cmp
sbb
aaa
lea
mov
aam
add
out
jae
mov
aas
test
mov
mov
out
lds
add
mov
scas
bound
imul
dec
(bad)
or
stos
scas
sub
scas
cmp
mov
stos
call
mov
sub
add
outs
xor
data16
ja
mov
add
inc
add
push
ficomp
pop
mov
cmp
cli
pop
mov
mov
xchg
(bad)
fistp
popa
ins
jae
je
jne
lock
outs
xor
cs
sub
cld
and
das
xor
call
cmc
cmp
dec
dec
add
aaa
jmp
and
sub
dec
dec
push
inc
xchg
lock
pop
addr16
sub
push
inc
imul
pop
pop
bound
dec
cli
push
(bad)
pop
sub
aas
inc
dec
movs
pop
movs
jg
push
(bad)
and
inc
inc
push
pop
push
inc
loope
in
(bad)
dec
pop
push
jo
js
sub
fsubr
push
pop
imul
and
sub
jno
sub
fdivrp
out
and
inc
inc
inc
push
pop
imul
xor
imul
imul
dec
push
add
aam
mov
push
cmp
lock
jo
es
shr
loopne
push
pusha
arpl
adc
xor
xchg
mov
scas
and
add
jmp
pusha
imul
dec
dec
push
or
imul
daa
mov
and
jb
xchg
cs
sbb
push
and
sub
dec
pop
pop
outs
jl
xor
cmp
gs
loopne
pop
bound
xchg
dec
les
ins
dec
sbb
ret
bound
push
adc
dec
scas
jo
and
test
sbb
and
xor
push
push
pop
in
(bad)
call
cmp
lahf
daa
addr16
adc
push
aaa
inc
dec
dec
push
pop
pop
imul
xchg
jo
adc
data16
ds
push
pop
add
dec
xchg
clc
ret
add
js
add
jp
or
xlat
dec
cmps
lock
cmp
mov
das
cmp
fisubr
and
mov
cmp
jo
and
xor
iret
xor
mov
xor
dec
pop
outs
jno
and
xor
ss
or
mov
jo
cli
inc
inc
inc
fcom
jbe
adc
jae
aam
pop
and
dec
inc
inc
inc
jmp
pop
push
mov
out
daa
inc
dec
dec
push
add
gs
js
push
and
mov
sub
mov
sbb
dec
sbb
jge
sahf
mov
push
std
arpl
or
pop
or
push
pop
pusha
loop
dec
and
jo
bound
sub
xor
out
dec
dec
ja
pop
jns
cmp
loope
lds
sub
inc
dec
mov
pop
test
pop
add
mov
pop
cmps
pusha
ja
ja
movs
or
push
add
mov
bound
jae
mov
cmp
dec
data16
or
ret
sub
push
dec
jne
clc
pop
add
(bad)
clc
mov
xchg
stos
out
pop
mov
(bad)
sub
pusha
outs
(bad)
inc
xor
add
aas
and
enter
add
dec
call
outs
call
adc
inc
and
rcl
loopne
mov
sub
(bad)
les
bound
inc
cmp
sbb
sbb
sub
call
sbb
push
test
scas
cmp
ins
dec
jl
fsubp
mov
dec
ficomp
es
xor
or
pop
hlt
and
inc
repnz
sbb
and
inc
shl
mov
mov
push
push
mov
xor
inc
dec
ins
push
adc
mov
inc
and
js
sub
dec
pop
iret
add
popa
(bad)
into
and
mov
cwde
add
fdiv
clc
mov
inc
jae
xor
dec
push
adc
enter
mov
add
mov
ret
fsub
pop
push
pop
pusha
jge
mov
into
pop
sbb
es
lods
push
cmp
jl
mov
pop
gs
push
outs
add
xchg
jbe
fcmovb
shr
sub
aad
push
test
jbe
pop
loopne
sub
inc
and
mov
xchg
call
mov
call
sub
add
jl
push
push
arpl
dec
and
lea
inc
push
xor
push
push
and
and
pusha
xor
rcl
push
ja
ret
(bad)
mov
push
push
pop
ins
jb
xor
jge
in
push
xchg
pusha
outs
jno
dec
cmp
dec
push
loopne
dec
push
mov
shr
dec
add
cmp
dec
push
test
and
data16
mov
add
(bad)
jmp
sbb
daa
cs
push
mov
rol
push
out
sub
or
sub
mov
jp
and
add
int3
inc
jb
pop
arpl
rcl
pop
or
pop
lock
push
lods
pop
imul
cwde
or
(bad)
cmps
inc
push
sbb
bound
push
cmp
pop
pop
add
jae
inc
or
inc
(bad)
inc
add
pop
jnp
push
xchg
pop
pop
jo
or
(bad)
fcomp
and
imul
ds
inc
inc
mov
into
outs
lods
pop
and
pusha
arpl
aaa
sbb
mov
xor
outs
jp
inc
push
test
ins
inc
xor
pusha
call
push
xor
inc
enter
test
loopne
dec
pop
icebp
loop
data16
call
adc
xchg
rcl
hlt
jo
and
nop
repnz
ds
inc
and
fdivr
and
push
push
mov
or
aam
(bad)
dec
sub
cmp
adc
cmps
or
pop
icebp
pop
xchg
dec
pop
je
push
adc
into
push
dec
push
lock
xor
push
pop
fld
push
pop
cld
or
push
adc
adc
and
push
inc
push
mov
jb
add
jb
and
and
mov
fwait
sub
(bad)
into
or
xchg
inc
pop
data16
ror
gs
pop
jp
and
fs
es
das
ds
dec
pop
add
dec
test
add
xor
xor
xor
sar
cmp
mov
lods
add
and
cmp
bound
mov
fsubr
sub
aas
iret
call
jns
stos
xchg
cmp
aad
push
or
in
ret
out
jl
sub
push
pop
ins
cmp
adc
sub
xor
aad
or
xor
fwait
les
dec
pop
pop
push
cs
pop
pusha
sub
adc
cs
cmp
push
mov
sub
inc
pop
lods
fdivr
inc
push
test
ja
add
cmp
jb
mov
push
rcl
js
cmp
add
xor
lods
push
clc
daa
xor
push
adc
sub
inc
dec
push
mov
mov
and
sahf
inc
push
fsub
push
mov
jp
mov
mov
addr16
and
(bad)
adc
popa
fadd
(bad)
sbb
je
addr16
push
pop
ss
inc
arpl
cmp
test
sbb
cmp
imul
sub
dec
xlat
push
pop
mov
or
fmul
mov
jnp
cmp
shl
(bad)
push
inc
push
shl
addr16
jl
adc
mov
mov
ss
jl
jae
clc
xchg
push
lea
ret
and
ins
adc
xor
mov
mov
js
jb
xor
push
push
clc
data16
xor
dec
add
or
push
dec
cld
dec
pop
dec
arpl
scas
inc
js
daa
nop
inc
dec
xlat
lods
ret
push
fild
sar
dec
shl
enter
push
test
push
in
push
mov
out
add
push
add
jb
pop
or
sub
jbe
adc
ss
push
sbb
sub
xor
dec
sbb
ret
cmp
ds
mov
clc
cmps
pop
ins
jae
add
inc
out
(bad)
sahf
sar
dec
pop
dec
inc
cmps
stos
mov
push
pusha
adc
or
jb
xchg
nop
sbb
pop
loopne
dec
xor
es
cmp
loopne
xchg
loope
xchg
(bad)
aaa
add
inc
push
pop
pop
js
mov
test
idiv
dec
sar
js
or
pop
mov
mov
push
sub
call
mov
sbb
(bad)
(bad)
(bad)
dec
pop
mov
shr
sub
pop
adc
int3
mul
lods
cwde
dec
outs
inc
xchg
mov
gs
sub
dec
dec
push
imul
mov
pop
dec
xor
jno
sub
push
jge
push
call
ja
sbb
adc
mov
ret
or
xchg
sub
or
add
out
pop
mov
inc
push
and
mov
pop
pop
or
pop
inc
jae
mov
pop
(bad)
into
pushf
adc
arpl
xor
hlt
mov
and
enter
jp
outs
inc
sar
arpl
and
push
and
rcl
jbe
xor
jo
xor
outs
jl
xor
fcmovbe
dec
jl
rcl
jo
and
rol
sahf
sub
loope
adc
xor
mov
cwde
pop
and
out
sub
push
inc
xchg
or
rcl
es
push
dec
data16
cs
frstor
js
xchg
add
test
mov
dec
push
ins
sar
add
movs
pop
fmul
pop
das
cmp
ins
push
pop
mov
jecxz
aas
dec
mov
ins
xor
add
cwde
ss
mov
and
sub
fs
jns
stos
and
jb
add
add
(bad)
mov
sbb
repnz
dec
ret
mov
(bad)
arpl
xor
pusha
dec
mov
pop
cmp
jne
mov
sub
xor
ins
push
outs
jno
es
xor
inc
inc
sub
fdiv
aam
cmp
retf
dec
test
adc
xor
addr16
in
and
xor
mov
sub
inc
sub
or
sub
sbb
and
push
inc
call
jno
dec
xor
sbb
sub
dec
pop
(bad)
rcl
and
ror
jns
xor
xchg
jo
aam
sbb
inc
dec
or
add
jl
xor
or
out
jne
and
xor
ds
and
xor
ficom
or
movs
addr16
cli
xor
mov
push
push
test
cmps
or
mov
mov
cdq
jo
adc
(bad)
mov
int3
xor
(bad)
pop
dec
or
nop
pop
das
mov
enter
jno
add
xor
imul
inc
pop
pop
popa
sub
ficom
xchg
inc
sub
inc
push
lock
jmp
and
pop
lds
fnstcw
add
stos
pop
inc
es
es
sbb
or
out
sbb
hlt
or
data16
mov
outs
push
xor
sbb
fs
popa
push
and
test
and
cmp
jbe
jp
sub
aas
dec
loopne
or
or
dec
pop
inc
push
adc
pop
sub
xor
test
sar
and
mov
in
lock
pop
test
sbb
jb
xor
hlt
adc
or
popa
adc
cs
jae
sbb
add
xchg
push
arpl
sub
or
jo
pop
and
push
jbe
aaa
inc
cmp
in
pop
sbb
ja
ins
xchg
and
bound
or
or
loopne
mov
fcom
add
in
mov
inc
enter
ss
ffree
lock
pop
imul
sub
sar
sub
push
dec
mov
mov
push
les
daa
add
cmps
dec
push
jo
xor
sahf
push
dec
sbb
or
outs
call
cwde
ins
test
dec
lahf
nop
stos
and
and
stos
jae
add
loop
jb
and
jae
sub
xor
xor
test
inc
adc
xchg
pusha
push
test
dec
mov
ins
mov
sbb
pop
or
fild
inc
in
xchg
(bad)
(bad)
jb
pusha
aam
push
cmp
mov
and
push
scas
pop
dec
pop
popa
mov
or
cmp
hlt
ja
sub
dec
push
outs
jp
inc
inc
pop
inc
aaa
cmp
jge
and
cmps
add
jge
pop
mov
mov
and
dec
pop
mov
ins
test
pusha
int3
ja
and
(bad)
mov
pop
pop
adc
sbb
push
xor
arpl
adc
loopne
shl
pop
movs
(bad)
add
leave
cmp
sbb
jo
and
bound
add
nop
add
or
push
cld
adc
inc
mov
dec
retf
adc
imul
fcom
xchg
loop
inc
dec
je
xor
test
test
(bad)
mov
adc
sub
call
cmp
add
lea
mov
sahf
pop
pop
cmps
je
mov
pop
addr16
and
stos
push
add
outs
ja
and
into
dec
pop
dec
mov
dec
dec
loope
sub
sub
push
sbb
rol
push
div
add
pushf
push
mov
pusha
adc
push
enter
and
pop
(bad)
and
call
pushf
dec
or
jmp
push
in
adc
xchg
sub
jecxz
daa
ins
lods
mov
xchg
or
jo
cs
push
test
xor
sub
mov
scas
arpl
stos
and
mov
daa
jge
dec
dec
ja
ins
fdivr
sbb
test
pop
ds
jge
cs
cld
pop
sbb
add
inc
or
and
bound
sub
gs
and
push
xor
jbe
cmp
cmc
or
xchg
imul
jbe
inc
xor
cmp
push
lea
pop
sub
fidiv
jl
or
or
retf
in
push
in
and
popa
xor
das
das
push
mov
inc
xchg
in
cmp
test
jge
or
sub
sub
inc
push
and
push
xchg
dec
jp
out
push
cmp
(bad)
dec
loopne
pusha
jg
jg
(bad)
xor
test
fisttp
data16
jbe
xor
adc
mov
jge
push
pop
mov
mov
jl
aam
add
les
mov
shl
shr
xchg
lods
pop
mov
push
neg
mov
xor
das
in
cmp
push
dec
pop
pop
das
sbb
and
adc
xchg
sbb
fdiv
mov
into
jp
cmp
dec
and
ficom
adc
xor
scas
and
aam
mov
xchg
cmp
dec
pop
int
push
inc
or
jmp
pop
inc
add
adc
fwait
adc
xor
dec
and
inc
xchg
mov
(bad)
(bad)
imul
addr16
fldcw
or
pop
dec
dec
add
sub
inc
je
sub
mov
sar
aas
fnstcw
inc
jmp
pop
mov
mov
sahf
cmp
movs
xor
push
fcomp
lock
not
and
dec
inc
and
test
leave
imul
and
pusha
and
cmps
iret
mov
push
lahf
outs
mov
pop
inc
mov
mov
jo
imul
dec
push
icebp
jo
rcr
inc
dec
dec
sub
sbb
popa
js
push
pushf
call
fidivr
es
dec
pop
gs
lock
nop
pushf
js
adc
(bad)
hlt
xchg
xchg
push
retf
push
fisub
mov
popa
loop
xchg
pop
pop
pop
iret
push
jmp
test
dec
push
loop
and
das
sbb
xor
and
add
sub
lock
push
push
ss
xchg
or
repnz
ss
dec
sbb
inc
dec
mov
pop
adc
sbb
sahf
nop
push
pusha
repz
push
and
ret
lock
push
loopne
push
xchg
push
or
jno
push
dec
push
shl
dec
inc
jo
inc
xchg
cmp
push
pop
dec
xor
retf
jo
stos
mov
push
cdq
jmp
cmp
xor
movs
xchg
cmp
test
hlt
pusha
mov
xchg
loope
and
(bad)
sub
push
sbb
test
jo
pop
and
mov
in
mov
ret
es
and
xlat
and
jge
xor
inc
inc
inc
push
test
jp
inc
sub
pop
jo
push
shl
mov
std
data16
push
out
push
adc
push
push
mov
fwait
ss
inc
pop
inc
loop
push
rcr
inc
push
in
adc
sar
cmp
push
shl
push
pop
xor
inc
cmp
cmp
add
scas
jle
es
(bad)
ins
outs
cmp
push
rol
jo
push
mov
pusha
mov
dec
jnp
pop
push
lock
out
push
nop
loopne
popf
mov
push
lock
sahf
push
push
add
mov
outs
push
shl
mov
repz
add
mov
iret
fs
add
inc
inc
mul
test
stos
push
mov
cs
in
jnp
in
mov
push
ds
movs
mov
mov
xchg
pop
in
jnp
data16
(bad)
jbe
dec
push
iret
xchg
ja
push
push
xchg
sahf
nop
mov
repz
dec
fmul
ror
jecxz
mov
cmp
mov
out
shl
movs
inc
ja
inc
jnp
pop
mov
fstp
loopne
push
add
rol
scas
fbld
jecxz
dec
and
in
jl
jecxz
lahf
cmp
fsub
push
adc
cmp
cmp
ds
nop
push
xchg
push
adc
div
mov
jg
in
(bad)
cmc
push
lock
mov
push
mov
push
lock
(bad)
repz
xor
ss
xchg
xor
mov
mov
into
inc
aad
test
push
int
xor
scas
push
(bad)
(bad)
push
adc
bound
rcr
bsr
push
cs
movs
sahf
data16
test
mov
shl
not
push
or
xor
rcl
ret
add
mov
inc
pop
xchg
pop
jl
mov
jo
dec
push
in
inc
pop
shl
inc
test
cmp
jl
add
scas
push
push
push
push
push
out
jl
mov
xor
inc
pop
jge
sahf
int
pop
mov
push
push
loopne
mov
push
jecxz
cdq
xchg
pop
mov
pusha
pusha
outs
cmps
jmp
popa
dec
arpl
mov
xchg
cmp
xor
cmp
mov
pop
push
bound
add
cmp
fs
xchg
rcr
dec
loope
js
outs
ja
mov
cmp
push
sub
pop
push
sahf
push
add
(bad)
mov
sbb
sub
test
stos
mov
jbe
cmp
dec
push
out
sar
xor
cmps
cs
ds
sti
(bad)
cmp
push
dec
ja
sub
jne
push
clc
addr16
daa
xor
cmp
dec
call
ins
call
pop
mov
and
jle
dec
push
push
or
jb
jl
inc
pop
shl
das
push
add
jne
ss
lock
pop
xchg
or
dec
jo
adc
mov
xor
jp
mov
jge
inc
into
push
std
xor
or
pop
pusha
popa
push
or
jg
pop
pop
ins
add
clc
(bad)
idiv
xor
sbb
mov
ins
push
mov
gs
sub
test
dec
push
mov
data16
xor
cmp
data16
sub
cdq
mov
pop
ins
cmp
sub
add
push
or
cmp
mov
add
inc
dec
jb
jae
in
cmp
aam
inc
adc
gs
fs
movs
inc
xchg
leave
xchg
pop
ret
int3
jo
add
cmp
nop
rcr
ja
cmp
push
aas
ret
test
je
das
js
mov
jl
bound
cmp
sub
xor
imul
pushf
xor
dec
xor
sub
nop
mov
jb
sub
push
push
sbb
aas
push
aas
aaa
add
inc
and
int3
test
ins
leave
or
loop
and
call
je
jne
push
rcr
or
jae
nop
jp
shl
das
outs
dec
dec
mov
push
loop
in
adc
cmp
dec
mov
xor
pop
jb
mov
xchg
rcl
cli
inc
add
add
call
push
sub
or
loopne
xor
adc
xchg
ja
push
popa
push
xor
xlat
and
cmp
stos
jl
adc
dec
clc
pop
lods
int
jb
push
xor
inc
jne
int3
ss
sbb
dec
shl
aaa
push
mov
sub
xor
adc
push
pop
xchg
add
sub
dec
dec
xchg
enter
imul
add
add
retf
cs
dec
dec
dec
jb
jle
ss
dec
icebp
lahf
mov
jo
test
ds
cmp
cmp
jg
ins
add
sub
jmp
and
xor
sbb
cwde
jl
sub
cmps
sub
add
loope
popf
cld
jb
and
mov
push
push
pop
jle
jns
sub
ds
inc
dec
aas
add
addr16
xor
test
xchg
imul
cmp
inc
adc
add
(bad)
das
dec
shr
inc
xchg
popa
cmp
and
inc
test
shl
dec
ins
adc
loopne
inc
push
jbe
mov
inc
dec
add
pop
into
jae
and
mov
hlt
dec
mov
je
mov
adc
sub
xor
xchg
sub
mov
gs
clc
or
mov
jnp
sub
shl
lods
sub
push
push
mov
inc
push
pop
call
popa
test
mov
adc
sub
cli
and
jge
xor
push
jo
xchg
add
stos
xchg
adc
dec
dec
imul
pop
movs
outs
js
aas
cwde
icebp
(bad)
mov
sub
push
add
jmp
fild
jbe
jo
or
mov
and
push
jb
pavgw
inc
inc
mov
int3
div
xchg
adc
jl
cmps
daa
mov
xchg
pushf
push
mov
lock
add
or
test
and
mov
aam
arpl
and
cwde
mov
loope
add
cs
inc
int3
adc
aam
cmp
push
popa
pop
and
gs
sbb
ins
and
cli
cmp
aas
dec
adc
in
jle
cmp
mov
pushf
inc
add
xor
xchg
sub
xchg
xlat
push
jbe
and
inc
add
cmp
dec
or
shl
cmp
dec
xor
js
fistp
inc
sti
pop
out
outs
cmp
and
xchg
mov
aad
das
shr
arpl
inc
xchg
fdivr
loop
in
push
push
fdiv
cmp
jl
jns
cmp
add
push
pop
mov
dec
popf
or
push
jo
jo
sbb
xor
inc
rcr
rol
mov
dec
jo
add
loopne
cwde
and
push
gs
jnp
or
jle
fs
es
xor
sar
push
dec
push
(bad)
push
pusha
fs
push
int3
aas
inc
bound
sbb
push
out
ds
adc
adc
adc
add
dec
dec
arpl
jbe
loopne
add
test
xor
int3
push
push
push
and
lods
call
cmp
push
retf
sub
adc
push
cs
sbb
pop
fisub
leave
lods
mov
dec
pop
cmp
jae
jo
dec
dec
pop
ins
jp
jo
call
inc
dec
push
inc
pop
or
sbb
xor
jmp
ror
xor
inc
dec
push
push
xchg
or
enter
cmp
ss
push
jnp
push
pusha
push
rcl
mov
cmp
sub
add
jp
mov
push
rcr
or
clc
aas
dec
push
pop
push
and
les
add
add
push
push
pop
jno
rol
mov
inc
dec
repnz
test
call
and
jo
test
push
(bad)
inc
push
call
lods
dec
xchg
jb
daa
cs
add
push
pop
das
xor
push
inc
xchg
stos
fidiv
and
mov
add
and
xor
push
into
leave
or
push
dec
or
pop
push
push
out
je
add
lock
daa
(bad)
outs
dec
mov
jb
mov
cmp
loopne
inc
bound
pushf
dec
cli
test
sub
xchg
shl
fsubr
pop
out
jge
sub
pop
ins
sub
and
sub
outs
jne
push
sub
gs
pop
mov
xchg
dec
popa
cwde
jmp
imul
xor
fisub
je
pop
sbb
ds
xor
and
pop
arpl
dec
test
retf
mov
push
xchg
inc
dec
pop
stos
jae
or
mov
addr16
cmp
loop
push
jmp
cmp
aam
dec
call
outs
pop
loope
jl
or
sbb
and
outs
mov
(bad)
fsub
or
xchg
mov
or
pusha
mov
pop
popa
mov
jb
(bad)
jmp
push
add
add
add
pop
inc
out
cwde
call
sbb
add
xchg
adc
pop
pushw
push
add
or
push
popa
pop
pusha
inc
sub
ds
inc
add
aaa
inc
dec
push
pop
or
ss
mov
push
ja
call
fs
cmp
mov
mov
and
inc
inc
add
mov
into
mov
loop
fwait
sub
mov
sub
cmp
ja
xchg
inc
add
push
sbb
dec
xchg
imul
cmp
sub
fild
lock
fs
mov
test
cmps
aas
inc
or
popa
sbb
jbe
pop
(bad)
mov
sub
sub
mov
test
inc
shr
adc
or
inc
test
jo
sqrtps
sbb
push
dec
add
and
cmp
inc
test
cs
and
dec
push
mov
mov
ret
jp
dec
push
push
add
mov
dec
fs
xor
mov
call
cmp
movs
xchg
xchg
jecxz
call
fidiv
jb
inc
dec
daa
push
ror
or
cli
loop
mov
inc
inc
sub
or
in
xor
dec
pop
and
and
je
xlat
inc
and
xor
es
shl
int3
pop
test
adc
cmp
and
inc
les
adc
mov
(bad)
out
ds
ins
mov
movs
test
jl
sbb
inc
cs
add
add
mov
jmp
mov
adc
cmp
and
mov
push
ss
enter
mov
adc
dec
dec
push
inc
out
scas
ror
call
ds
xchg
jl
sbb
jbe
mov
cmps
and
sub
sub
inc
inc
add
push
and
test
dec
cmp
and
sub
sub
xchg
mov
pop
push
es
push
shl
bound
adc
imul
pop
xor
cmps
sbb
cwde
rcr
ret
mov
ja
push
mov
fild
mov
or
push
and
adc
or
dec
int3
mov
lds
dec
fidivr
popa
mov
outs
pop
add
mov
pop
dec
and
and
sub
xor
mov
dec
mov
add
prefetcht0
rcl
aas
aaa
dec
dec
ret
clc
xlat
dec
adc
dec
add
or
pop
sbb
mov
lods
sub
rcr
pushf
mov
loopne
(bad)
mov
out
inc
sub
add
ds
(bad)
inc
jno
adc
cmp
cmovle
shr
mov
inc
scas
loopne
inc
jmp
push
adc
push
retf
scas
xchg
scas
inc
mov
popa
stc
push
mov
xor
adc
add
adc
pop
xchg
or
add
push
xor
adc
clc
jp
mov
or
imul
sbb
add
cmp
test
mov
out
jbe
dec
scas
push
mov
push
mov
cmp
cs
outs
mov
dec
bound
aaa
and
cwde
mov
imul
xor
jo
and
jnp
jb
pop
pop
mov
push
int3
inc
call
repz
xchg
outs
das
fwait
je
sub
mov
push
stos
inc
dec
je
xor
inc
sbb
mov
jne
and
adc
push
push
xor
movs
inc
lahf
adc
rol
cmp
loop
mov
arpl
test
lahf
shl
mov
add
push
shl
adc
loope
aam
push
aas
jne
and
inc
mov
jo
mov
sahf
and
push
out
xor
inc
dec
pop
add
clc
adc
popa
jo
adc
xor
sub
sub
cmp
push
push
fbstp
cld
aad
mov
sub
dec
ds
dec
pop
pop
pop
bound
sub
xor
jo
jmp
sub
jbe
call
xor
dec
mov
cwde
imul
xor
xchg
jbe
cmp
inc
mov
test
push
gs
pushw
jge
and
xor
add
ins
outs
pop
inc
mov
or
or
xor
pop
push
or
and
arpl
lea
add
pop
mov
dec
loop
push
jl
inc
dec
outs
add
lock
jb
jl
cmp
xchg
out
xor
xlat
jp
cs
sbb
push
fsubr
ret
lods
xor
aad
cs
dec
push
bound
push
cmp
and
xor
bound
jl
and
inc
add
and
inc
ror
xor
pop
xor
push
dec
cwde
add
push
xchg
push
sub
inc
bound
jo
popa
mov
mov
sbb
cmps
or
fsub
inc
and
ror
mov
add
add
outs
mov
dec
xchg
loope
jae
inc
inc
ret
push
xchg
adc
daa
bound
loope
js
push
pop
pop
jp
mov
xor
add
push
movd
movs
xor
push
dec
jae
cmp
pop
add
xchg
dec
adc
dec
push
pop
pusha
cwde
test
fsubr
loopne
ret
pop
pusha
gs
jb
push
or
cmps
dec
push
pop
(bad)
out
mov
dec
push
push
ins
jne
sub
pop
pop
mov
mov
add
test
dec
inc
test
test
push
(bad)
stos
movs
maxps
mov
adc
inc
pop
and
pop
ret
pop
cmp
xor
inc
lock
xchg
imul
inc
fs
push
inc
add
ret
cli
xor
add
xchg
out
jle
(bad)
lods
cmp
loop
add
scas
dec
dec
adc
push
xchg
cwde
xchg
xchg
cmovb
mov
pop
jne
lods
add
ror
sub
xor
ins
outs
ds
pop
push
fild
push
popa
hlt
mov
and
mov
cmp
add
ror
ins
into
mov
pusha
cmp
fisttp
add
loop
jge
call
sbb
(bad)
xchg
push
mov
push
pop
fbld
pop
and
sbb
dec
push
gs
enter
sub
shr
sub
xor
cmp
add
add
dec
retf
adc
xchg
cld
loop
dec
xchg
and
aaa
jno
or
mov
les
mov
add
xor
dec
add
sbb
pop
imul
push
sbb
arpl
sub
aam
pop
inc
push
pop
pusha
bound
mov
jns
xor
pop
imul
loope
nop
inc
add
pop
jge
xor
xlat
popa
ins
add
das
cmp
dec
cmps
and
push
outs
out
shr
jl
and
mov
add
adc
pop
inc
jne
mov
jbe
jo
es
jg
push
ins
mov
pop
cli
pop
test
or
jo
or
inc
dec
out
mov
adc
movs
xchg
fcom
clc
push
pop
dec
sbb
sbb
ja
rcr
je
and
call
add
inc
sub
imul
pop
(bad)
push
push
mov
push
push
mov
pop
es
pop
test
add
jbe
cmp
or
jmp
je
jge
add
xor
mov
outs
scas
push
(bad)
sahf
imul
and
add
cmp
(bad)
sub
xor
cmp
aas
sahf
pop
fs
bound
in
cmp
ja
push
xchg
sub
xor
jb
enter
mov
mov
scas
ja
es
or
push
pop
jns
or
das
cmps
pop
add
xchg
ret
jo
inc
sub
jo
add
push
add
pop
fs
or
inc
add
adc
fs
sub
cmp
iret
sub
and
push
pusha
pop
dec
cmp
add
sub
push
sbb
pop
int
and
push
adc
adc
sub
add
jp
pop
add
bnd
ror
aaa
cmp
sbb
scas
dec
adc
outs
sub
add
mov
xor
inc
ins
inc
cmp
dec
cmp
xchg
xor
mov
sub
mov
outs
push
shl
jae
push
or
cmp
arpl
push
dec
sub
lods
xor
jo
fmul
cmp
test
movs
adc
loop
pop
imul
inc
push
arpl
ds
pop
push
xchg
ret
jns
es
cld
sub
inc
add
or
xor
jb
jo
and
stos
jmp
inc
inc
inc
pop
inc
push
add
and
xor
int
inc
cmp
dec
outs
dec
int3
or
mov
cwde
pop
dec
ret
and
and
fisub
adc
add
ds
push
pusha
imul
aad
inc
ja
call
and
xchg
add
adc
ret
adc
js
jno
ja
ror
inc
ds
jp
ss
dec
push
or
push
push
add
and
inc
cmps
xchg
cmp
add
sub
add
lods
dec
and
ins
(bad)
(bad)
je
inc
ins
ss
push
mov
mov
xchg
pop
imul
cmc
sub
fidivr
add
jo
mov
aam
(bad)
and
push
iret
ins
lods
dec
rol
cmp
push
loopne
adc
sbb
aaa
inc
dec
dec
dec
push
pushf
cli
mov
or
inc
ss
add
inc
sub
add
add
add
outs
sub
push
mov
push
outs
hlt
xchg
popa
add
pop
cmc
xor
or
and
ja
push
aam
inc
cli
dec
loopne
sub
fdiv
and
aam
xor
bound
in
gs
xor
js
and
or
push
jno
test
fcmovu
cmp
cwde
mov
dec
fcomp
xchg
and
jns
mov
push
cmp
(bad)
js
add
add
or
mov
(bad)
or
inc
xchg
dec
fs
sbb
or
es
push
add
bound
es
cmp
and
jo
or
repnz
dec
hlt
jns
ds
add
loopne
inc
pop
cmps
imul
and
dec
push
push
xchg
add
js
pop
ds
dec
cmp
js
add
push
dec
into
inc
dec
push
cmp
xor
mov
xchg
enter
xor
test
sbb
outs
and
inc
dec
or
int3
dec
push
test
inc
add
js
fidiv
data16
hlt
test
push
cmovl
pop
pop
jb
dec
cmp
sbb
or
or
sbb
fs
or
clc
scas
add
add
sar
jmp
push
mov
and
test
or
call
or
js
jp
pop
and
push
jo
pop
xchg
dec
and
or
fs
sahf
fs
adc
cmp
call
cmp
rcl
loopne
and
call
add
jno
cmp
fisubr
sub
inc
ja
stos
mov
pop
xor
jge
je
dec
cmp
loope
sub
imul
cwde
movs
push
pusha
push
push
pop
pushf
jg
pop
ins
mov
sub
dec
pop
bound
add
pushf
pusha
adc
pusha
hlt
push
and
dec
push
ret
push
ins
or
inc
xchg
dec
ror
outs
jp
and
call
into
pop
add
xchg
jle
ins
ror
fisubr
dec
dec
push
mov
or
repnz
shl
or
shl
daa
jg
add
loopne
lods
jne
cmp
inc
push
add
pop
mov
xchg
cmp
or
add
inc
xchg
xchg
das
(bad)
jo
xor
push
and
cmp
and
dec
dec
sub
enter
push
cwde
push
jno
jl
cmp
adc
dec
and
cmp
dec
dec
popa
xor
adc
mov
and
mov
mov
stos
outs
push
cs
or
or
jo
add
cmps
push
dec
mov
push
fadd
les
push
inc
sub
or
ret
sbb
ret
loop
adc
daa
mov
xor
cld
xor
sbb
xor
jo
hlt
sub
popf
xchg
xor
jmp
ins
out
(bad)
imul
add
pop
call
xchg
xor
and
aaa
push
dec
mov
dec
lods
call
dec
call
shr
outs
xchg
adc
cmp
adc
dec
outs
loopne
cmp
int3
jbe
dec
xor
dec
shl
rcl
jge
pop
jle
xchg
add
ror
pop
gs
lahf
add
lahf
cmp
daa
mov
xor
hlt
dec
fsubr
sub
push
push
xor
inc
pusha
gs
cmp
rcr
dec
in
sbb
pop
inc
and
inc
pusha
hlt
out
xchg
add
adc
sbb
sbb
adc
(bad)
jmp
cmp
add
stos
adc
push
dec
inc
or
add
push
mov
inc
and
test
push
jmp
dec
add
add
call
in
lods
jo
or
aas
pusha
fs
mov
aaa
cli
das
ds
pop
popa
out
pop
add
cli
aas
add
or
push
and
and
dec
xchg
push
sbb
add
sub
jbe
mov
push
mov
ret
loope
addr16
test
rcr
mov
mov
pushf
inc
xchg
adc
cmp
add
or
sahf
xor
retf
movs
jle
pop
aam
das
xor
jge
xor
push
dec
adc
and
xor
in
cmovs
jbe
sub
or
je
push
push
pop
or
rcr
ja
test
retf
xor
xor
pop
xor
sahf
push
adc
push
or
mov
add
sub
mov
add
push
in
hlt
mov
or
xor
cmp
or
outs
add
push
loopne
sbb
and
inc
dec
add
pop
mov
add
pop
cwde
xor
fwait
sbb
ja
jl
and
push
fdiv
push
sub
stos
enter
xchg
pusha
mov
push
push
dec
shl
mov
pop
or
movs
daa
scas
cmp
shr
xor
jo
push
cmpxchg8b
and
add
cld
cmp
mov
push
dec
mov
hlt
push
sbb
dec
mov
adc
cmp
push
pop
and
shl
jb
(bad)
add
add
into
sbb
jnp
xor
add
dec
push
fsub
add
aam
jo
pop
cmps
lahf
test
xor
mov
adc
pusha
popa
mov
loope
push
inc
sbb
mov
add
cmp
sub
inc
add
mov
jp
xchg
xchg
pop
fidivr
xor
push
sub
cmp
add
add
sbb
add
xor
daa
cmp
gs
sbb
and
sbb
call
mov
outs
add
jp
retf
inc
mov
cmps
cmp
cmps
pop
test
or
mov
push
pop
add
lock
imul
je
sbb
loope
sub
fmul
xor
add
push
or
outs
jno
outs
shl
(bad)
test
cmp
xchg
and
loopne
sbb
xor
and
mov
cdq
and
jbe
imul
adc
or
lock
fcom
adc
and
sbb
push
aaa
push
mov
leave
mov
pop
bound
in
ret
inc
dec
jbe
and
xor
adc
inc
in
cmp
test
(bad)
cdq
mul
xchg
ret
push
dec
pop
or
inc
aas
gs
pop
popa
ins
inc
push
jg
and
cmp
js
lods
into
call
add
pop
test
pop
adc
js
bound
or
adc
fs
jnp
push
mov
popa
addr16
or
add
xor
mov
outs
adc
adc
shr
int3
outs
jb
mov
xor
xor
sbb
xchg
and
jne
mov
dec
pop
popa
mul
dec
jge
cmp
pop
mov
jmp
add
jp
and
(bad)
cmp
cmp
fcomp
ins
bound
or
ins
out
cwde
hlt
sub
scas
pop
mov
add
sub
call
dec
push
add
xor
xchg
das
and
cs
adc
and
or
inc
ss
mov
inc
enter
push
add
and
ror
cs
push
pop
mov
cs
neg
inc
dec
adc
jbe
inc
dec
and
or
imul
fsub
adc
inc
es
pop
or
jl
cmp
je
cmp
nop
sub
out
mov
gs
xchg
mov
add
dec
out
leave
test
nop
jbe
ins
mov
push
dec
add
sub
inc
pop
rol
xchg
pop
mov
dec
jno
push
shl
mov
bound
bnd
and
cmp
aaa
inc
outs
clc
jo
inc
xchg
mov
dec
push
add
and
gs
adc
dec
pop
pop
add
bound
mov
dec
cmp
adc
add
(bad)
jge
seto
mov
bound
in
or
popf
rol
mov
inc
mov
imul
inc
enter
je
inc
ins
test
mov
nop
gs
data16
sub
xor
cmps
inc
inc
sbb
mul
push
das
adc
enter
jno
fidivr
or
sar
push
jne
push
aaa
sub
jbe
fimul
jo
and
nop
pop
and
mov
adc
jbe
data16
fsubr
pop
mov
push
push
jl
loope
xchg
jno
sub
dec
mov
stos
or
xor
jge
push
cmp
inc
inc
dec
xlat
inc
je
int
push
pop
jle
and
push
into
inc
out
jb
cdq
or
pusha
xor
dec
push
inc
sbb
inc
dec
dec
sbb
jbe
ss
pop
or
cmp
gs
pop
fisub
cld
ja
dec
fwait
mov
retf
dec
push
jl
and
clc
mov
sbb
push
sbb
shr
xor
add
add
or
call
sbb
fdivr
cmp
dec
push
pop
ins
outs
jge
cmp
dec
xor
ret
pop
rcl
popa
ret
push
popa
and
push
retw
and
popa
mov
dec
loope
jmp
cmp
sti
push
sbb
dec
pop
pusha
outs
add
dec
add
add
or
cli
daa
fiadd
mov
jb
inc
lahf
nop
sub
inc
lods
ds
nop
dec
pusha
movs
inc
mov
loopne
inc
shl
sub
cmp
or
adc
lock
ss
sbb
push
dec
fs
dec
out
push
push
dec
or
ficom
inc
test
inc
mov
xor
adc
cmp
mov
pop
add
cmp
dec
add
or
sbb
and
push
push
pop
push
cmp
ds
add
dec
inc
or
sub
sub
ret
push
pop
mov
arpl
pop
pop
cmp
ds
push
xor
mov
dec
push
jp
dec
inc
and
lods
inc
(bad)
push
pusha
push
daa
movs
inc
test
pop
imul
bound
or
bound
js
loope
mov
outs
jb
xor
dec
fs
jno
shl
jle
mov
add
dec
push
sub
adc
or
cwde
mov
jnp
ror
mov
add
xchg
adc
shl
jle
xor
push
aam
xchg
push
div
xchg
push
push
shl
xchg
or
scas
push
sbb
lock
inc
addr16
es
sbb
mov
in
xchg
add
mov
push
das
and
sbb
add
add
and
and
das
and
add
add
or
sti
pusha
test
(bad)
out
shl
test
adc
lods
mov
jmp
jbe
adc
sbb
dec
enter
cmp
sar
adc
ins
lock
call
imul
imul
inc
add
aam
movs
and
adc
rcl
sbb
pop
addr16
test
xor
fdivr
cmp
sahf
dec
dec
sbb
or
jmp
in
inc
inc
inc
jecxz
sbb
cmp
and
fs
fs
jbe
and
cmp
outs
jnp
test
arpl
mov
or
rol
and
push
out
dec
mov
xor
call
loopne
scas
pop
dec
add
test
xor
adc
lea
scas
fiadd
(bad)
jl
sub
dec
in
add
daa
nop
push
add
add
and
add
mov
adc
enter
sub
(bad)
and
outs
push
adc
rcl
xor
bound
and
xor
xchg
sbb
jb
aaa
adc
dec
retf
and
inc
dec
add
in
adc
cmp
call
xor
inc
sub
xchg
push
mov
or
add
shl
dec
daa
dec
or
push
clc
xor
pop
xchg
dec
mov
hlt
sub
jb
sbb
test
jno
pop
add
jecxz
cmps
pusha
push
sub
loope
push
mov
or
mov
ret
jmp
push
cs
les
js
shr
outs
inc
fs
add
and
sub
add
push
add
sar
pop
adc
or
add
pop
add
shl
and
stos
and
inc
push
outs
and
push
push
push
das
adc
sbb
push
out
or
dec
add
and
mov
inc
push
or
cld
push
ffree
mov
dec
push
pop
push
and
push
mov
cmp
sbb
mov
cwde
and
inc
xchg
adc
adc
sbb
mov
jmp
sub
cmp
inc
mov
sbb
fidiv
inc
arpl
jp
aaa
ds
sub
pop
popf
js
pop
int3
jge
les
or
test
push
pop
xor
test
push
pop
and
int3
sub
adc
fcomp
imul
xor
xor
jb
nop
fs
je
pusha
aam
push
cmp
loopne
dec
mov
add
lds
push
inc
xchg
push
pusha
mov
dec
or
adc
in
push
mov
shl
aaa
ss
push
push
push
dec
push
shl
je
test
pop
loopne
mov
call
jl
adc
add
imul
cmp
inc
fs
lods
adc
add
cmp
sbb
push
push
addr16
jle
push
xchg
sbb
pop
dec
push
push
inc
push
or
ja
push
add
mov
dec
aad
fadd
es
je
or
xchg
(bad)
dec
rcl
add
enter
dec
adc
fisubr
test
les
pop
imul
aaa
inc
inc
loopne
ds
push
pop
shr
lock
adc
test
xor
add
cmp
mov
push
inc
or
push
fsubr
ins
ins
xchg
inc
movs
push
pop
(bad)
jmp
leave
xor
in
jg
xchg
jne
nop
xor
xchg
cli
push
imul
inc
ins
pushf
lock
sahf
add
xor
or
adc
pop
(bad)
and
pop
xchg
aad
xor
inc
cmp
jne
and
push
xchg
data16
jp
(bad)
pop
cwde
add
push
jp
sub
sub
inc
inc
stos
cmp
xchg
or
mov
push
dec
sub
xchg
mov
inc
dec
jmp
cs
cld
cdq
jo
mov
mov
jo
fdivrp
xor
jo
mov
jno
xlat
sahf
add
push
fisub
and
or
push
(bad)
jle
push
inc
popf
dec
out
in
sub
in
neg
and
dec
sahf
cli
dec
sbb
pop
cmps
out
sbb
mov
push
push
mov
pop
adc
or
pop
sbb
jo
cmp
inc
sub
mov
jbe
sub
pusha
sub
push
inc
and
fucomip
dec
xchg
cmps
add
(bad)
fs
movs
mov
push
xor
cmp
inc
xor
jbe
sub
pop
push
adc
or
and
xchg
push
push
mov
out
sbb
lea
push
inc
dec
push
iret
and
push
or
jp
push
dec
dec
sbb
inc
or
pop
add
add
push
ja
jp
adc
add
and
cwde
pop
retf
xor
pop
pop
pop
pop
aas
push
jb
cwde
cmp
sahf
push
xchg
push
arpl
mov
inc
add
or
popa
or
xchg
and
push
mov
mov
dec
add
movs
cwde
jg
(bad)
pop
cmp
xchg
js
rcl
inc
push
outs
fcomp
sub
sub
xor
push
fimul
sub
cld
jbe
pop
fst
cmp
pusha
mov
cmp
or
retf
mov
ins
inc
dec
dec
test
cmp
adc
push
or
push
outs
cld
mov
xor
push
push
fisub
xor
jo
lock
add
movs
movs
ss
push
adc
jne
xor
sahf
push
ror
stos
xchg
push
movs
push
clc
and
cmp
add
cmp
dec
xor
xchg
push
and
and
sub
pop
movs
push
fs
das
inc
loope
mov
push
je
or
add
and
enter
or
add
mov
test
fs
and
sahf
cmp
adc
sbb
or
mov
sbb
push
cmp
dec
aam
and
xchg
jecxz
cmps
in
push
xor
cmp
xor
test
je
cmp
xchg
push
sub
add
or
lods
xor
inc
push
dec
sbb
push
fisub
xchg
and
mov
(bad)
int3
and
cmp
dec
icebp
rol
sahf
pop
ror
sub
rcl
xchg
(bad)
ret
dec
in
mov
add
stos
movs
jo
movs
cmp
push
push
shr
jnp
ds
fs
pop
bound
push
jecxz
jno
xor
push
dec
push
xor
pop
and
adc
xor
pop
and
inc
pop
push
xchg
ins
push
and
mov
dec
test
pop
add
inc
and
and
sub
mov
xchg
cli
adc
mov
enter
inc
pop
xor
sub
out
xchg
xor
adc
add
inc
pushf
and
xor
and
mov
sub
or
jb
sbb
sbb
imul
add
je
pushf
mov
mov
xchg
js
dec
push
mov
jmp
pusha
fsubr
sub
nop
loopne
mov
jp
imul
loopne
push
rol
daa
enter
mov
(bad)
(bad)
rcr
sbb
lock
movs
loopne
ins
jo
adc
retf
cwde
mov
or
mov
call
ja
inc
hlt
add
push
push
call
inc
cmp
mov
jbe
adc
js
xchg
pusha
(bad)
(bad)
aas
pop
dec
imul
je
dec
push
jno
pop
xor
inc
xor
inc
mov
or
movs
add
rcl
xchg
push
pusha
int3
jl
mov
sbb
push
sbb
push
ret
and
call
pop
jb
cmp
mov
in
push
ins
jbe
and
arpl
push
pop
adc
and
adc
js
mov
(bad)
pop
cmp
or
loopne
push
jbe
cmp
push
arpl
or
pop
dec
pop
add
or
or
push
add
or
ins
jne
cmp
stos
call
aam
adc
dec
push
fs
and
je
inc
hlt
and
aad
and
bound
mov
fs
daa
and
add
inc
bnd
loope
cmp
dec
xor
or
inc
or
mov
mov
dec
sbb
inc
and
outs
dec
push
pop
aas
mov
mov
jle
and
pusha
inc
and
retf
imul
fist
xchg
retf
push
or
jl
jle
pusha
test
xor
(bad)
sub
dec
dec
inc
pusha
or
and
clc
test
inc
and
push
shr
push
xor
add
dec
pushf
xchg
and
mov
adc
cmp
and
pop
inc
pusha
push
pop
mov
cmova
dec
aas
sub
rcl
or
sub
inc
sbb
push
mov
sub
and
loop
sar
scas
inc
cli
sub
bound
jmp
aam
adc
cmp
push
loop
mov
add
dec
adc
nop
xor
add
je
xchg
call
push
and
xor
push
xchg
inc
or
or
mov
cmp
xor
or
call
sub
xchg
dec
inc
pop
dec
inc
xchg
add
xchg
ret
jle
push
push
add
mov
inc
test
aam
outs
dec
xor
rol
xor
stos
inc
pop
push
mov
jl
mov
adc
mov
push
inc
mov
mov
inc
dec
js
push
loope
pop
pop
cmp
test
jo
push
addps
add
xor
test
mul
div
outs
loop
add
inc
jle
sahf
mov
and
push
push
ds
jb
jo
dec
add
add
lods
arpl
push
js
jge
pop
add
loopne
pop
sbb
fadd
or
mov
xchg
scas
loop
out
add
sub
push
xchg
mov
movs
adc
shl
add
sbb
jmp
xchg
cmp
inc
dec
outs
outs
add
ret
inc
dec
cmps
push
rdmsr
mov
and
or
mov
inc
mov
inc
mov
aad
mov
mov
sbb
mov
test
pop
call
add
add
jne
push
shr
je
clc
mov
adc
adc
out
inc
dec
or
int
(bad)
jp
daa
sub
inc
fs
add
leave
or
xchg
and
or
dec
sahf
mov
mov
and
push
repnz
add
retf
dec
pop
push
inc
movs
or
sbb
add
add
cmps
adc
sub
inc
dec
push
fadd
sub
repnz
pop
outs
or
add
xchg
sub
and
inc
or
jo
push
out
and
call
and
clc
ss
and
or
sbb
(bad)
mov
inc
xchg
mov
data16
and
nop
mov
outs
jl
cmp
jb
adc
es
inc
adc
dec
test
or
xchg
fadd
rcr
and
test
nop
push
pushf
ror
pusha
add
loopne
js
mov
pop
fcmovu
or
test
loope
fdivr
dec
mov
jecxz
cmp
(bad)
cmps
xor
adc
add
jecxz
pop
pop
or
and
push
push
ins
add
mov
les
aas
dec
das
cdq
adc
push
add
sub
xor
cmp
sbb
or
push
mov
(bad)
loop
sahf
dec
adc
and
jbe
or
int3
inc
sub
int3
and
inc
sub
nop
int3
and
retf
add
(bad)
(bad)
mov
xor
xor
je
jne
js
jle
mov
mov
xchg
or
lods
mov
xor
sub
mov
push
xchg
dec
call
jg
jle
dec
std
fbstp
or
dec
movs
inc
mov
dec
push
pop
xchg
and
dec
inc
mov
xor
imul
xor
in
(bad)
xchg
mov
inc
xchg
cmp
push
jno
adc
cmp
cmp
add
mov
sub
xchg
retf
add
sub
or
movs
push
jmp
cmp
sub
mov
adc
popa
sbb
jb
mov
sub
hlt
jo
cmps
pop
js
ret
cmp
xor
loop
jle
ins
jbe
sub
push
xchg
les
shl
lods
and
cmp
pop
stos
sub
xor
rol
test
out
jb
push
push
aaa
cmp
lock
sub
and
push
add
or
add
mov
ins
dec
push
mov
jo
mov
jmp
inc
pop
sbb
pop
cmp
xchg
pop
sbb
stos
call
daa
sub
and
mov
mov
inc
inc
add
popf
push
and
ins
test
push
call
push
shr
cmps
jp
loopne
in
loopne
add
or
xor
jne
push
jno
xor
cmp
xor
xor
push
dec
mov
add
cmp
inc
add
add
add
cmp
cmps
add
mov
push
adc
inc
jne
daa
inc
fadd
fimul
ins
jo
inc
sub
enter
pop
(bad)
jmp
mov
push
lods
or
mov
add
dec
bound
adc
and
inc
dec
scas
jl
add
xchg
cmp
push
adc
in
data16
test
push
les
(bad)
push
shr
xchg
inc
push
sub
les
mov
dec
in
outs
and
add
lods
pusha
sbb
dec
jo
cmp
test
sub
push
dec
sbb
jnp
sub
dec
and
ss
pop
push
or
stos
ret
inc
jl
cmp
nop
add
xor
xchg
add
shl
mov
cmp
addr16
sub
pop
mov
push
pop
pusha
icebp
test
rcr
push
pop
(bad)
out
or
dec
dec
pop
mov
add
or
sub
push
push
pusha
mov
(bad)
scas
dec
add
inc
xlat
pusha
mov
ins
push
jecxz
add
and
loopne
movs
adc
add
cs
jecxz
shr
dec
movs
adc
movs
cmp
pop
test
push
sar
stos
add
call
and
dec
xor
xor
das
pop
push
outs
sub
push
cmc
add
or
scas
mov
lahf
sub
jns
and
mov
add
dec
xor
inc
out
dec
push
add
xor
mov
data16
sub
stos
xor
mov
add
add
or
pusha
cmp
jne
add
add
dec
xor
and
cmp
inc
and
shr
fs
test
push
add
iret
sbb
or
out
ins
sbb
aam
(bad)
xchg
(bad)
int3
out
cdq
mov
inc
push
mov
jp
dec
sub
neg
and
adc
and
and
lock
aaa
inc
dec
pop
pop
xor
mov
pop
gs
adc
jbe
fiadd
jge
push
mov
bound
xor
inc
inc
dec
imul
aaa
mov
ss
ins
outs
je
lods
movs
mov
push
inc
call
add
and
shl
and
ss
pop
dec
(bad)
sub
fdivr
dec
jg
mov
add
cmp
and
adc
pop
sbb
or
pusha
push
movs
les
mov
sub
sub
sub
xor
fld
mov
and
in
push
pop
or
xor
mov
rcr
enter
mov
mov
and
or
lods
add
add
xor
loope
pushf
pop
addr16
js
test
out
push
mov
inc
shr
sbb
and
dec
(bad)
mov
adc
dec
push
(bad)
retfw
pusha
out
sub
(bad)
dec
pop
mov
mov
inc
dec
pop
mov
in
cmp
pop
xor
es
cs
inc
xchg
jbe
js
fld
mov
hlt
pusha
data16
push
mov
push
xchg
pop
bound
jns
loope
movlhps
movs
push
push
pop
(bad)
ins
jns
mov
(bad)
nop
or
add
shl
pop
fs
push
outs
ja
adc
adc
lods
mov
pop
inc
adc
push
pop
es
push
cmp
jnp
mov
mov
aas
dec
xor
cmp
test
pop
repnz
or
inc
cmp
or
push
es
push
sbb
daa
fs
jle
add
xchg
ds
jo
das
mov
xchg
fiadd
ds
sub
push
daa
xor
test
add
pop
xchg
or
inc
xchg
repnz
xor
xor
jnp
ss
sbb
adc
ins
xchg
adc
inc
dec
push
scas
mov
sub
pop
push
dec
sub
mov
in
or
loope
sub
pop
sbb
sub
and
adc
sbb
cmps
inc
xchg
xchg
push
mov
cmps
add
sub
fistp
jo
cmp
dec
nop
fcomp
or
adc
js
pusha
dec
shl
mov
inc
dec
push
mov
lea
popa
push
jb
sbb
cmp
scas
sub
or
push
pop
imul
sub
imul
cmp
inc
xchg
retf
add
inc
pusha
push
pop
push
loopne
adc
idiv
dec
call
daa
sub
lahf
es
inc
push
inc
scas
jb
nop
clc
sub
inc
dec
enter
das
jg
push
scas
or
inc
xor
jb
push
pop
or
retf
dec
lods
les
mov
push
pop
xchg
ret
loope
xchg
shl
shl
mov
or
dec
push
add
hlt
test
mov
sub
inc
and
dec
mov
jb
xor
xor
fadd
push
ss
dec
out
sub
sar
loope
(bad)
cmp
rol
outs
inc
push
pusha
or
imul
pushf
push
int3
add
out
das
cmp
or
or
add
out
mov
xor
xor
(bad)
ins
pop
adc
dec
xor
and
sub
push
or
xor
jl
sub
push
push
xor
jae
and
fimul
add
jne
mov
fs
scas
jo
(bad)
leave
inc
popa
adc
stos
cs
xchg
dec
inc
lock
dec
add
adc
call
pop
push
add
scas
push
imul
hlt
cmps
pusha
and
push
mov
cli
(bad)
and
mov
and
mov
or
cmp
and
pop
or
adc
or
test
pop
pop
pusha
jle
xor
pop
add
inc
rcl
jns
pop
shl
push
mov
mov
xchg
jb
dec
pop
cdq
or
aas
fisttp
daa
sub
ret
shl
sub
push
test
pusha
ficomp
sub
dec
mov
adc
xchg
add
test
and
xor
inc
mov
add
or
inc
inc
push
pop
arpl
pop
pusha
lods
aaa
dec
jo
fsub
xor
dec
jne
sub
push
pop
in
aaa
inc
add
or
xor
dec
pusha
pop
mov
movs
lods
lahf
out
push
push
xchg
jns
xor
shl
sbb
mov
mov
push
into
add
imul
sbb
inc
inc
cmp
ds
imul
dec
lea
jo
add
mov
lods
and
pusha
mov
push
or
loopne
das
add
sub
pop
add
mov
add
add
or
push
sbb
js
pop
lahf
aam
(bad)
jg
cwde
sub
ds
sub
sub
sub
adc
fdiv
ds
pop
pop
mov
jg
sbb
mov
mov
inc
push
int3
push
aaa
aad
loopne
mov
sub
neg
dec
dec
mov
in
bound
mov
adc
push
inc
sbb
retf
mov
mov
add
stos
sub
xchg
mov
inc
push
dec
jle
inc
push
inc
call
ss
xchg
add
popf
xchg
xchg
ret
inc
or
sbb
push
push
pop
push
add
aam
add
sub
adc
bound
inc
or
mov
mov
ss
and
and
es
jns
inc
loopne
mov
jl
loope
fiadd
inc
dec
out
and
gs
jge
ins
inc
and
pop
push
add
push
les
pop
pop
popf
jmp
daa
cs
xor
push
push
rol
gs
lods
xchg
jno
xchg
push
jp
adc
add
mov
mov
jp
dec
push
gs
sbb
ins
sbb
or
jnp
movs
div
jg
pusha
popa
add
mov
xchg
push
les
call
adc
cmp
sub
ror
inc
sub
bound
fimul
lock
(bad)
imul
xor
adc
lods
loop
dec
pusha
fs
shl
add
ins
in
push
sbb
mov
adc
nop
lds
pop
(bad)
ds
dec
and
pusha
movs
xchg
mov
hlt
sub
xor
dec
dec
pop
out
mov
fs
fs
(bad)
push
call
push
bound
cmps
test
lahf
adc
and
or
pushf
add
outs
dec
ins
or
adc
or
mov
xor
ds
cmp
sahf
das
cmp
pop
and
pop
adc
sub
push
addr16
add
sub
mov
pop
stos
xchg
pop
nop
sbb
jl
pop
or
mov
out
dec
data16
lods
shr
shl
adc
add
dec
or
ja
adc
popa
mov
inc
test
sub
cmp
sbb
jle
nop
jl
add
push
ret
pop
enter
mov
(bad)
xchg
xchg
rcr
push
rol
cmp
cmp
dec
and
inc
and
push
pop
mov
not
sub
popa
adc
fisub
ficom
rcl
mov
and
sub
rcl
mov
add
aas
dec
mov
and
loop
add
lods
push
pusha
add
and
push
dec
sub
add
cwde
push
xchg
dec
sub
adc
dec
fs
add
adc
xor
jmp
and
mov
xor
and
lock
dec
test
and
loop
sub
inc
outs
mov
and
lods
sub
jb
xor
jo
sbb
pop
add
and
adc
xor
arpl
pop
imul
shl
push
mov
test
pusha
and
mov
mov
test
cmps
adc
bound
and
dec
pop
adc
outs
pop
loopne
cmp
mov
mov
inc
sub
add
adc
jle
mov
mov
jno
das
xchg
bound
push
dec
test
pusha
push
mov
sbb
sub
add
and
push
sub
inc
(bad)
js
gs
adc
in
cwde
sub
(bad)
rcl
inc
adc
pop
jbe
jns
ret
call
jb
or
lods
lahf
loop
mov
sub
mov
adc
bound
add
les
xor
push
or
bound
sbb
inc
sub
ret
pop
xchg
push
fisub
mov
call
add
sbb
ds
rol
aam
jbe
inc
sub
mov
inc
mov
sub
ret
cmp
hlt
push
adc
push
xor
imul
adc
das
and
(bad)
cld
out
or
add
(bad)
adc
lock
fdiv
shr
loopne
add
and
pusha
daa
sub
or
ror
(bad)
stos
and
das
add
or
add
test
and
mov
push
inc
dec
add
outs
inc
cmp
dec
dec
das
jb
add
scas
pop
cdq
dec
sbb
cmp
xchg
push
(bad)
cmp
or
add
add
inc
pop
add
pusha
cdq
add
inc
add
or
sbb
sbb
xor
push
add
test
inc
add
js
xor
sub
adc
and
sbb
imul
xchg
sbb
pushw
aas
or
pushf
bound
xor
push
dec
or
dec
das
jo
gs
(bad)
pop
call
fimul
push
inc
add
push
and
push
stos
sub
inc
inc
mov
xchg
adc
dec
jl
mov
movs
bound
xor
and
mov
mov
inc
cwde
adc
add
push
dec
sub
adc
sbb
xor
xchg
das
mov
xor
add
pusha
add
and
retf
bound
adc
and
push
sbb
mov
je
outs
push
push
lock
sbb
js
cwde
inc
imul
add
aaa
out
leave
push
dec
sar
dec
dec
and
add
add
xchg
xor
bound
mov
push
test
sub
inc
repnz
inc
dec
pop
pusha
mov
jne
das
push
xchg
cwde
ret
cmps
dec
mov
or
stos
inc
sub
jmp
lock
xor
das
sbb
adc
cmp
ret
ins
lea
push
add
fcomp
xchg
adc
add
pop
test
add
in
inc
cmp
sub
or
dec
inc
and
sbb
sbb
mov
sub
daa
aaa
dec
je
add
sub
add
retf
add
lahf
sub
ds
inc
inc
mov
pusha
jbe
push
add
cmp
xor
sub
fnsave
rcr
mov
pop
inc
or
in
mov
nop
je
imul
aaa
sar
sub
lock
(bad)
and
xor
arpl
push
pop
js
or
pop
xchg
mov
add
out
and
test
daa
xor
dec
sub
call
test
ret
fisubr
mov
les
in
popa
mov
cmp
retf
(bad)
jl
sbb
fisubr
add
or
push
mov
es
and
xchg
pusha
mov
add
lock
mov
cmp
sbb
fld
test
inc
sbb
in
les
inc
and
adc
mov
jmp
fcom
push
jo
or
xor
mov
ret
inc
adc
mov
xor
jb
add
add
dec
outs
or
cmp
add
xor
shl
and
inc
mov
mov
jo
sub
pop
push
in
sbb
push
dec
push
mul
and
loopne
sub
mov
loopne
xor
and
loopne
dec
or
mov
xor
cmp
sbb
cmp
xchg
or
dec
test
je
scas
hlt
js
push
inc
cmp
js
sbb
mov
inc
or
pusha
inc
ret
or
adc
pop
and
pop
bound
in
es
pop
adc
pop
push
sub
pop
cmp
aas
inc
add
sub
xchg
adc
in
rol
jnp
mov
dec
dec
into
pusha
mov
or
loop
cmp
pop
pop
and
daa
(bad)
leave
and
inc
test
push
call
sub
mov
js
push
sub
mov
ret
and
cs
push
push
or
xchg
pop
imul
sbb
cwde
jp
mov
js
push
push
cmps
addr16
cmp
test
sub
xor
test
and
adc
lods
call
push
cmp
push
jmp
mov
addr16
shr
add
xor
pop
inc
stos
jne
pop
and
dec
jmp
pop
inc
inc
shr
leave
cmp
jmp
or
enter
mov
imul
adc
xchg
bound
fsubr
cmp
mov
dec
push
add
je
daa
lods
add
mov
cmps
dec
adc
add
push
add
call
add
popa
or
push
int3
sbb
push
add
xor
cli
cmp
xor
mov
outs
or
add
push
or
lock
or
es
sbb
mov
cmps
cdq
cmc
imul
pmulhuw
je
sbb
jle
pop
add
jb
adc
mov
adc
and
add
adc
ja
es
add
dec
xor
add
cmp
sub
sbb
movhps
(bad)
push
xor
imul
add
mov
(bad)
mov
loop
mov
inc
inc
out
pusha
aam
xor
add
push
xor
inc
mov
mov
dec
sub
mov
scas
mov
xchg
dec
inc
inc
lods
sbb
retf
push
movs
ret
push
out
sbb
inc
je
add
pop
add
push
mov
and
shl
cli
sbb
test
jnp
or
outs
jge
inc
mov
dec
or
or
dec
inc
int3
bound
push
jp
jl
ret
sbb
adc
dec
outs
test
mov
xor
fs
sbb
sub
les
add
outs
cmp
inc
shl
sbb
push
out
stos
adc
adc
and
push
dec
pop
cld
jp
movs
dec
pop
or
sbb
cmp
or
pop
and
xchg
push
xor
mov
push
add
push
inc
push
add
cmp
and
loopne
push
mov
retf
mov
adc
in
jo
and
or
into
out
cmp
push
or
lahf
pop
ror
pop
stos
or
movs
adc
mov
dec
aad
and
cmp
sub
cmp
push
cmp
or
mov
fsub
nop
xor
push
push
pusha
rol
push
pop
dec
dec
pusha
inc
sub
adc
sbb
in
(bad)
add
sub
out
inc
cmps
add
and
dec
sub
xchg
add
loopne
xchg
out
ret
inc
jbe
sub
fs
call
or
(bad)
jp
pop
push
push
or
sub
add
out
mov
xchg
aam
retf
add
arpl
js
inc
sub
das
pop
sbb
sub
cmp
outs
sbb
les
call
das
adc
shr
inc
dec
pushaw
(bad)
pop
sub
mov
in
sbb
pop
add
push
push
pop
jg
jl
mov
push
sub
ficomp
add
stos
adc
cmp
enter
and
inc
or
dec
test
push
jmp
inc
or
xchg
in
mov
ss
lods
or
or
pop
push
push
shl
in
push
sub
add
sub
pop
data16
and
cld
dec
sbb
xchg
push
adc
add
add
add
outs
add
call
mov
push
sub
shr
rcl
xor
jb
mov
pop
sub
sbb
inc
and
mov
xchg
sbb
mov
sub
arpl
lods
stos
add
jb
aam
or
cmp
or
fdiv
inc
gs
inc
mov
js
and
ins
cli
sbb
test
pusha
in
xor
and
sahf
jge
add
rol
xchg
test
sbb
xor
add
gs
dec
add
jmp
jns
inc
sub
shl
or
sbb
sub
and
push
mov
and
and
rol
ror
jb
mov
add
jb
add
and
sub
daa
das
mov
push
mov
mov
test
push
cld
mov
ret
sub
push
push
add
les
lock
aas
xor
sbb
sub
jo
pop
sub
fimul
rcl
leave
xchg
lods
xchg
mov
das
jns
or
dec
push
pop
sub
jnp
pop
add
push
pop
pop
aam
sbb
sbb
inc
pushf
lods
das
pop
dec
shl
cmp
lock
pop
lods
jbe
sub
xchg
add
das
dec
push
daa
inc
and
mov
test
add
call
je
cmp
bound
shl
lahf
out
dec
inc
xchg
inc
or
fnstsw
daa
sub
mov
add
dec
sub
adc
rol
push
pop
outs
(bad)
sub
inc
pop
xchg
inc
mov
ins
enter
or
push
pop
push
jge
aad
adc
jle
sbb
dec
js
and
sub
inc
mov
repnz
or
and
or
rcr
pop
cmp
mov
mov
sub
gs
or
test
add
add
loopne
cmp
scas
push
sub
popa
add
sub
inc
adc
dec
mov
pushf
add
aam
inc
mov
cmp
dec
xor
add
gs
cmp
push
push
or
or
push
nop
hlt
xchg
pop
push
mov
xchg
mov
and
push
pop
(bad)
push
cmp
mov
leave
test
push
dec
dec
jbe
sub
cmp
and
movs
add
loopne
jb
js
xchg
dec
lods
xchg
pop
aas
add
jno
out
rcl
add
push
rol
sbb
xor
sub
add
jb
mov
push
xchg
ins
(bad)
adc
push
or
pushf
and
aam
test
loopne
xchg
cmp
xor
add
push
cmps
add
and
and
(bad)
(bad)
lods
adc
daa
dec
push
cmps
cs
hlt
mov
out
or
test
add
push
push
adc
adc
pop
adc
or
inc
add
and
inc
test
add
xor
adc
add
mov
and
push
out
xor
bound
and
mov
les
pop
or
adc
imul
add
mov
or
stos
xor
pop
scas
sar
aam
add
push
dec
dec
sbb
adc
dec
clc
bound
loopne
push
call
jmp
retf
xchg
imul
pop
(bad)
retf
mov
add
fsubr
dec
add
mov
lock
push
pop
mov
or
push
call
mov
je
sbb
dec
mov
xor
xor
mov
ja
in
inc
add
xchg
and
xor
cmp
sbb
push
adc
mov
cmp
test
call
adc
cmp
jl
jae
or
sar
add
inc
pusha
mov
test
sub
sbb
inc
add
js
fisubr
sub
cmp
std
xchg
ss
cmp
imul
cmp
sub
fsubr
add
sbb
add
push
sub
mov
and
nop
sub
cmp
les
fidivr
sub
or
movs
add
inc
xchg
sbb
mov
popa
ret
and
sbb
and
or
and
pop
push
out
or
call
inc
jo
push
mov
mov
jne
fdivr
jbe
cmps
push
bound
pop
lods
imul
cmps
mov
jo
cmp
aaa
(bad)
push
rcl
out
mov
nop
sbb
or
(bad)
daa
das
cmp
shl
push
jmp
popa
ror
cmp
or
pushf
stos
and
mov
push
fisttp
je
enter
outs
outs
jp
aad
xor
outs
and
inc
inc
(bad)
clc
outs
retf
sbb
sahf
push
push
push
call
inc
rol
mov
les
shr
jb
pop
cmp
shr
push
add
sub
xchg
int3
call
or
xchg
xchg
inc
sbb
or
outs
add
add
or
sub
repnz
sub
pop
sub
mov
and
push
inc
mov
idiv
sub
or
ds
adc
adc
push
mov
mov
jmp
pop
inc
mov
ret
mov
cs
mov
pop
icebp
push
dec
sar
bound
push
cmp
push
cmp
sub
or
add
addr16
add
int3
arpl
ret
lahf
add
add
fistp
jecxz
mov
push
call
add
stos
pop
gs
ins
gs
inc
sbb
pop
mov
rcr
movs
xor
sbb
rcl
xchg
retf
call
mov
imul
adc
fcmovb
inc
sub
mov
imul
movs
mov
lds
push
push
or
loop
inc
xor
and
mov
push
dec
push
pop
imul
rol
mov
adc
mov
cmp
or
mov
lahf
pop
stos
add
ja
inc
adc
add
ret
test
add
or
retf
or
jo
ret
cli
ss
add
push
add
or
cmp
or
inc
dec
jle
cs
xchg
or
or
and
mov
sub
inc
add
and
or
stos
add
inc
inc
out
dec
ins
xchg
add
rol
pop
outs
outs
add
push
push
mul
xor
add
push
rcr
pop
test
mov
push
and
cmp
add
jmp
jmp
iret
xlat
ins
add
add
or
add
mov
inc
lods
adc
inc
dec
and
inc
or
or
push
fsubr
sub
inc
and
sbb
jp
pop
adc
sbb
push
sbb
sbb
or
inc
gs
sub
pop
and
rcr
add
xchg
or
inc
inc
pop
push
mov
pusha
not
push
or
js
pop
pop
add
xchg
mov
push
and
loopne
push
fadd
shl
dec
sub
es
adc
dec
mov
and
inc
jle
add
call
movs
push
and
ss
xor
bound
popa
out
inc
mov
inc
mov
push
clc
adc
sub
push
ficomp
dec
cld
aam
inc
dec
scas
push
add
add
fsubr
xchg
add
outs
pop
loopne
push
mov
pop
sub
mov
lds
cli
push
inc
inc
popa
rol
fdiv
mov
aam
push
push
pop
shl
scas
inc
push
mov
dec
dec
push
sbb
jbe
stos
and
fmul
push
popa
add
cmp
add
or
jg
ins
mov
push
test
add
xchg
jo
cwde
ins
mov
loop
xor
dec
dec
fisubr
and
dec
jb
call
xor
xor
jbe
fs
inc
bound
popa
inc
add
jl
or
add
inc
add
lock
ins
mov
add
sub
loopne
inc
inc
jl
inc
mov
dec
shl
das
cmp
or
iret
jle
add
imul
loopne
and
and
ficom
push
and
test
sbb
stos
(bad)
repz
add
stos
dec
pop
outs
and
inc
mov
push
adc
add
je
mov
fsubr
sub
mov
test
push
clc
in
push
add
or
sahf
inc
add
mov
sub
or
add
pop
fnstenv
ins
xor
mov
pop
pop
ins
ficom
and
inc
and
mov
add
push
pop
dec
inc
add
xchg
ror
ja
or
shr
add
test
shr
add
mov
loop
inc
ja
add
adc
adc
xchg
or
jo
shl
add
sub
adc
lods
push
ja
bound
punpcklwd
inc
(bad)
sub
jbe
add
jnp
cmp
cwde
push
in
add
mov
pop
ss
pop
or
adc
cli
jl
add
sub
and
outs
shl
add
or
add
rol
mov
xor
sar
call
jge
xchg
sub
push
dec
sbb
in
aaa
scas
rol
out
ins
push
or
into
or
sbb
int3
or
adc
cmps
mov
aam
adc
psubsb
add
jmp
mov
pop
mov
inc
mov
dec
jmp
outs
stos
mov
test
push
(bad)
dec
pop
test
add
push
call
inc
pusha
pushf
iret
not
mov
jns
mov
inc
push
jbe
and
push
ins
imul
cmp
in
shl
push
dec
sub
pusha
imul
add
push
xchg
add
call
bound
loope
push
fsubr
jo
pop
xchg
add
dec
inc
loopne
and
mov
pop
lock
cdq
add
aad
pop
xor
or
pop
xor
pop
adc
add
xchg
cmps
clc
xor
or
jne
sub
xor
adc
adc
jnp
adc
push
retf
jae
aam
sub
sbb
inc
loopne
push
jae
bound
cld
gs
ja
xor
outs
outs
add
pop
and
rcl
xor
mov
repnz
inc
adc
push
xor
pusha
mov
cmp
popa
dec
add
test
and
xor
inc
sub
add
or
or
ins
test
shl
add
sub
mov
inc
fwait
and
loop
imul
les
shl
imul
and
fld
mov
cwde
add
or
mov
into
cwde
push
xchg
and
and
pop
or
add
mov
mov
aas
dec
mov
sbb
ror
ret
mov
xor
add
ret
mov
or
call
pop
xor
mov
sbb
nop
dec
push
jp
mov
xchg
fsub
or
sub
mov
xchg
adc
mov
nop
and
inc
or
arpl
mov
mov
mov
xchg
dec
push
out
je
shr
addr16
and
jbe
push
push
aaa
inc
ret
jl
(bad)
pop
add
fdivr
les
sbb
pop
push
enter
mov
inc
adc
add
mov
ss
push
imul
pop
pop
push
aam
dec
cwde
sub
aam
sahf
jp
add
ins
(bad)
xor
sub
outs
and
push
cmp
push
dec
fsubr
sbb
inc
inc
and
fidiv
or
loope
push
or
fdivr
mov
cwde
and
mov
xchg
dec
inc
stos
mov
cmp
pop
or
xor
xor
cmp
ss
push
js
inc
mov
and
or
cmp
xor
imul
dec
pop
pop
mov
inc
mov
add
pusha
adc
push
xchg
jo
and
adc
add
push
push
inc
or
xor
les
(bad)
xor
inc
retf
fisubr
and
xchg
add
fsubr
or
add
push
and
loopne
mov
sub
mov
aam
sbb
inc
dec
push
les
lds
hlt
jb
dec
xor
sub
mov
or
adc
push
scas
add
(bad)
push
dec
mov
retf
outs
jo
add
test
or
inc
sub
and
jp
or
mov
test
and
sub
scas
daa
pop
inc
mov
stos
or
and
add
cmp
pop
mov
adc
lock
xchg
add
(bad)
aaa
cmp
mov
inc
test
adc
ins
js
and
les
mov
pop
add
test
aad
pop
mov
xor
and
jo
add
lock
mov
nop
push
pop
pop
ins
add
pop
dec
add
cmps
mov
ret
mov
inc
inc
mov
push
inc
enter
sub
adc
push
xor
add
add
shl
inc
nop
into
add
jle
adc
bound
popa
test
(bad)
push
push
add
dec
add
xor
add
jmp
adc
outs
mov
cmp
sbb
and
mov
call
outs
xchg
mov
sahf
shr
call
and
aaa
test
arpl
pusha
add
dec
ficom
arpl
jle
xor
adc
or
and
and
push
call
mov
add
ror
or
movs
es
lods
push
popa
sbb
sbb
and
mov
ror
or
and
inc
test
or
cmp
scas
add
xlat
(bad)
jns
sub
add
inc
push
xchg
rol
dec
dec
push
ret
add
push
dec
gs
dec
jbe
xchg
mov
lods
pop
or
inc
push
dec
pop
inc
mov
xor
sbb
loope
mov
test
ret
push
add
test
movs
fisubr
and
push
cmp
adc
add
add
add
in
pop
cwde
push
inc
or
das
(bad)
in
adc
push
shl
inc
inc
es
shl
mov
mov
or
dec
or
add
movs
push
cmp
sub
mov
ret
sbb
jae
mov
jae
sub
ret
xchg
and
add
adc
out
test
xchg
les
movs
cmp
(bad)
mov
xor
jne
xor
push
lds
inc
ret
mov
sbb
jb
cmp
inc
push
and
loopne
clc
dec
stos
pop
xor
mov
and
data16
adc
mov
scas
inc
dec
add
add
fiadd
shl
ror
xchg
imul
and
add
test
aad
les
das
dec
test
xchg
and
sub
pop
addr16
adc
jl
cmp
ss
imul
pop
ret
aam
push
bound
xor
lods
iret
sbb
sub
lock
mov
mov
or
(bad)
cmp
loopne
mov
add
mov
dec
or
mov
xor
adc
xchg
lock
sbb
xchg
push
add
inc
inc
sbb
popa
inc
adc
adc
xor
cld
xchg
adc
and
pop
and
mov
popa
gs
mov
xor
and
push
mov
ss
stos
xor
add
dec
in
mov
xor
pusha
push
add
or
fs
sbb
or
call
push
int3
test
add
pusha
pop
xchg
test
inc
push
dec
dec
je
dec
ins
inc
dec
into
outs
add
fs
mov
into
push
xchg
ret
rcl
mov
mov
add
in
add
popa
push
pop
(bad)
pop
add
inc
adc
sub
rcl
or
retf
pusha
inc
push
dec
test
jbe
push
jo
adc
mov
inc
loopne
and
push
test
push
inc
push
ss
and
popa
lds
fisub
jg
mov
adc
and
imul
xor
mov
fs
adc
out
sub
inc
or
test
sbb
adc
and
push
lds
push
mov
sub
imul
inc
xor
adc
or
xchg
enter
pop
sbb
jne
jmp
push
or
jbe
adc
test
push
and
jo
bound
jo
push
cdq
test
mov
dec
loopne
xchg
cmp
push
pop
jge
add
adc
mov
cmp
movs
adc
es
mov
mov
jl
pop
add
push
mov
mov
fs
push
das
cmp
sub
add
adc
bnd
sbb
push
push
cli
inc
dec
push
jbe
dec
mov
ror
jb
inc
jle
xchg
dec
adc
mov
mov
mov
and
push
push
ss
xchg
pusha
xor
(bad)
mov
cwde
add
dec
cdq
mov
dec
mov
and
in
sub
outs
adc
data16
jne
add
jo
dec
les
les
out
adc
cwde
add
mov
inc
mov
ror
or
push
mov
inc
cmp
(bad)
nop
mov
test
inc
ret
mov
cmp
movs
or
xchg
repnz
add
xor
and
add
xchg
add
add
add
mov
and
inc
adc
mov
add
xchg
or
and
mov
add
adc
xor
pushf
or
xor
mov
mov
push
push
inc
into
arpl
and
dec
ins
dec
adc
js
xor
adc
and
push
and
xor
jp
add
dec
or
mov
push
cmps
mov
sbb
and
and
pop
loope
shr
xchg
mov
and
sar
inc
or
sub
mov
cmp
sub
data16
fmul
adc
xor
push
imul
cld
push
or
inc
inc
fmul
and
inc
mov
push
inc
cmp
cmp
and
adc
push
push
mov
jmp
add
cmps
mov
xchg
mov
push
mov
add
shl
xor
adc
outs
xor
test
es
mov
sub
sub
mov
xor
ins
xor
inc
mov
pushf
sub
in
test
ja
xchg
es
mov
adc
ja
adc
idiv
add
mov
les
add
push
pop
bound
xchg
adc
adc
xor
inc
out
xor
jge
add
push
push
adc
sbb
nop
xor
cld
dec
jl
sub
adc
push
inc
mov
test
test
xor
cld
add
shl
sub
xor
retf
ins
add
test
inc
aas
inc
(bad)
jbe
aam
or
xchg
xor
mov
or
pop
inc
outs
add
dec
adc
xchg
jb
lock
test
jbe
xor
adc
mov
test
or
push
dec
adc
adc
xor
mov
or
clc
cld
dec
adc
cmp
cmp
add
(bad)
xor
dec
push
neg
xor
mov
pop
loopne
les
mov
xchg
add
lods
mov
jp
es
ret
inc
adc
test
or
cmp
pop
or
lock
push
aas
and
adc
dec
dec
cs
jo
cld
call
pop
sub
aas
pop
pop
jl
sub
sub
sbb
or
jbe
pop
inc
add
pushf
mov
add
ins
push
mov
leave
ins
mov
add
pop
ins
(bad)
ss
add
xchg
pop
out
pop
pushf
cmove
ret
add
shl
test
mov
pushf
push
xchg
push
cwde
dec
or
push
push
hlt
dec
fsubr
mov
push
push
nop
shr
or
loope
dec
fadd
int3
dec
and
ficom
sbb
add
dec
test
mov
cmp
push
popa
ins
mov
dec
adc
xor
dec
loope
xor
pop
rol
jmp
adc
sbb
data16
xchg
adc
fs
dec
push
push
xor
push
sbb
cwde
fcomp
(bad)
push
test
inc
test
out
call
jl
es
inc
inc
dec
push
mov
cmp
pop
sbb
add
sbb
sub
and
rdtsc
xchg
sub
call
ror
sub
inc
jecxz
fidivr
mov
ds
inc
movs
lea
mov
add
(bad)
mov
retf
(bad)
pop
sbb
push
jo
das
iret
mov
add
add
iret
add
pusha
jne
aas
loop
test
(bad)
das
mov
mov
add
and
pop
sub
enter
jmp
mov
adc
mov
or
push
repz
add
je
neg
push
or
mov
add
cmp
mov
aam
pop
imul
xchg
test
jp
add
adc
cmp
push
push
sbb
push
or
cmp
dec
data16
pop
cmp
add
daa
fstp
jmp
aas
(bad)
and
or
loopne
pop
mov
inc
mov
jmp
jle
jb
push
xchg
call
inc
fistp
inc
xor
jo
ds
jne
jg
adc
push
inc
push
inc
inc
mov
imul
adc
pop
and
add
and
fist
mov
cld
cmp
and
int3
mov
(bad)
rol
shr
aam
aad
ins
popf
adc
rol
lods
pop
hlt
add
out
add
or
mov
ret
lods
push
jecxz
inc
das
inc
add
mov
nop
test
pop
add
pop
dec
inc
arpl
and
or
je
or
mov
dec
enter
sbb
cmp
inc
inc
xor
fdivr
cmp
xchg
push
test
and
or
dec
sbb
sbb
and
das
xchg
mov
ins
inc
dec
dec
dec
xchg
fcmovb
push
adc
pop
inc
add
mov
sub
pop
dec
inc
mov
xchg
fs
xor
and
pusha
xchg
pusha
je
inc
lods
sub
pop
pop
stos
and
je
pop
xor
push
xor
adc
mov
jl
push
push
mov
xchg
add
(bad)
pop
or
push
sub
inc
dec
out
xor
retf
sub
add
cmps
pop
push
push
ja
mov
add
mov
dec
sbb
and
add
sub
and
dec
and
icebp
pop
ret
push
add
imul
jmp
push
push
push
cmp
js
ret
mov
jns
inc
adc
popf
adc
and
nop
or
sbb
adc
call
or
or
call
stos
pop
pop
lahf
push
mov
shr
and
push
adc
cmp
sub
inc
cld
dec
loope
loop
xchg
push
and
or
dec
call
cmp
mov
pop
iret
fistp
data16
adc
sbb
mov
sbb
lea
aas
xchg
cmps
jo
aam
jl
pop
jbe
xor
scas
es
push
xlat
xchg
sub
xor
fidiv
adc
inc
sub
push
pop
popa
outs
sbb
pop
adc
push
xor
inc
add
outs
lods
push
xor
sub
and
call
call
rcl
cmp
mov
pushf
aam
in
dec
dec
dec
mov
ds
jo
add
adc
retf
rol
inc
cld
pop
and
cmps
mov
sbb
adc
test
push
cs
inc
inc
and
ror
push
lods
add
inc
mov
mov
cmp
adc
or
xchg
pusha
cmp
cwde
cmp
and
mov
and
push
jb
clc
push
mov
inc
test
sub
inc
or
xchg
scas
pop
fisubr
enter
je
dec
bound
das
jle
pop
ret
push
adc
inc
push
xor
movs
scas
cmp
bound
ins
mov
mov
xor
dec
jb
cmp
scas
add
loope
mov
sbb
sbb
cmp
cwde
rol
lods
sar
(bad)
outs
jl
mov
push
cmp
mov
and
sub
sar
test
imul
jo
stos
test
inc
sahf
pop
adc
imul
or
jo
ret
mov
xor
test
int3
xchg
les
pusha
mov
jbe
enter
and
aaa
xor
pop
cmps
push
cmp
retf
sahf
shl
or
dec
je
jmp
retf
mov
jmp
aad
xchg
add
cwde
or
pusha
fmul
mov
xor
repnz
push
pop
btr
sbb
and
inc
mov
aaa
out
dec
or
jne
and
cmp
xor
popa
or
fs
rcl
fmulp
icebp
add
adc
xor
xor
test
retf
paddsb
inc
(bad)
outs
adc
aas
test
call
loope
mov
imul
dec
pop
or
in
push
sub
pushf
ins
mov
pop
or
outs
push
push
push
or
push
xor
and
xchg
inc
xchg
inc
xchg
sub
pusha
xor
sbb
and
shl
es
pop
dec
sub
inc
adc
xchg
jecxz
inc
dec
push
jp
pop
cmp
(bad)
aaa
cmovns
addr16
cwde
inc
mov
push
adc
hlt
addr16
adc
add
add
je
mov
inc
inc
shr
mov
and
sbb
add
add
bswap
xchg
les
push
add
mov
jl
xor
and
add
jb
push
pop
sbb
cmc
leave
nop
adc
mov
pop
xchg
lahf
sahf
add
inc
xchg
pop
aas
fld
sub
rol
pop
sub
dec
movs
(bad)
dec
lods
dec
xchg
and
mov
stos
and
outs
bound
dec
dec
inc
stos
sbb
sub
aas
leave
add
ins
fmul
inc
ret
xor
adc
or
inc
(bad)
or
out
xor
pop
pop
mov
or
dec
push
and
xchg
(bad)
push
jo
mov
sbb
nop
cs
mov
sub
or
aad
dec
mov
outs
push
xchg
pop
mov
add
(bad)
mul
pop
and
add
push
pop
pop
or
cmp
xchg
mov
dec
sar
daa
adc
inc
sar
sbb
jno
and
je
fisttp
pop
movs
or
xor
add
pop
or
mov
or
cmps
mov
daa
fs
data16
dec
cdq
mov
mov
xchg
cld
(bad)
jmp
test
xor
and
popf
xchg
inc
mov
jo
daa
sub
dec
pop
jl
ss
push
dec
cmp
imul
mov
clc
daa
das
jg
xchg
add
mov
sub
pop
cmp
dec
push
pop
push
ins
jge
shl
xor
das
xor
stos
loopne
jae
int3
out
scas
adc
sbb
ret
inc
mov
push
and
push
xor
xor
mov
xchg
pop
shr
add
and
inc
dec
xor
aas
dec
push
add
imul
pop
pusha
mov
pop
fdivr
sbb
or
rcl
or
fs
movs
lea
sbb
push
movs
and
and
ds
(bad)
push
jmp
aam
and
sbb
aas
call
test
loopne
rcl
push
add
and
fiadd
rol
call
jp
adc
add
loop
dec
dec
mov
rcl
push
mov
test
mov
inc
jle
lock
pop
add
add
inc
hlt
ins
pop
ret
jno
add
adc
dec
jb
or
cmps
push
jle
push
and
aam
add
hlt
mov
xchg
into
out
dec
popa
cmp
retf
sub
adc
xor
push
cld
pusha
test
cmp
sbb
ret
sbb
mov
add
sub
mov
enter
jp
sbb
and
stos
add
dec
inc
gs
cmps
gs
jmp
mov
mov
add
out
ret
push
jg
push
sub
pop
jb
pushf
or
adc
imul
inc
xchg
fstp
push
push
dec
ins
dec
jl
das
pop
jo
sub
hlt
mov
and
jge
and
cmp
cmp
adc
xlat
dec
pop
bound
mov
or
push
pop
or
mov
pop
mov
stos
sbb
sub
and
mov
and
rcl
xor
dec
jmp
jbe
inc
push
cld
mov
push
je
cli
movs
mov
mov
xor
push
sahf
push
and
add
add
jo
pop
shl
mov
sbb
pop
inc
aaa
xor
push
pop
pop
xor
enter
test
mov
sub
bound
inc
add
jbe
jae
jnp
push
push
push
sub
jb
adc
xchg
inc
mov
sub
and
adc
dec
nop
xor
js
sub
gs
mov
pop
sbb
imul
daa
mov
fnstenv
(bad)
mov
into
retf
imul
and
pop
jmp
(bad)
movs
xchg
retf
mov
sub
or
inc
pop
and
aam
cli
xchg
mov
es
imul
aad
movs
icebp
fdivr
inc
lahf
xor
mov
push
push
ins
movs
push
adc
movs
adc
and
dec
inc
mov
sub
cmp
add
popa
(bad)
adc
cmp
adc
inc
push
popa
les
xor
jmp
mov
add
jl
movs
add
retf
adc
sub
add
repnz
and
test
lods
enter
jae
inc
jnp
push
jb
call
xchg
xchg
les
sbb
pop
add
adc
dec
ret
dec
cdq
and
adc
mov
inc
and
xchg
sbb
pop
add
cdq
and
cld
add
inc
cs
mov
xor
pop
pushf
or
push
dec
mov
mov
or
and
out
dec
push
sub
cmp
sub
push
mov
test
sbb
nop
or
repnz
lods
adc
inc
(bad)
sbb
pop
jl
int3
xchg
nop
mov
add
push
xchg
inc
sahf
cs
jl
popa
clc
je
push
push
bound
inc
and
push
jno
nop
fs
sbb
push
inc
push
sub
cmp
inc
arpl
xor
mov
inc
icebp
sbb
mov
mov
xchg
shl
ss
pop
xor
and
or
mov
inc
xchg
sub
xor
test
rol
in
inc
fs
leave
mov
fisubr
pusha
xchg
adc
cmp
ins
mov
ss
mov
adc
add
mov
cwde
(bad)
nop
je
gs
stos
shl
pop
mov
adc
sub
mov
call
cs
test
fimul
test
cs
jl
mov
xor
pop
imul
loop
ret
or
inc
mov
lods
cmp
push
adc
jns
push
push
sub
xchg
out
cmps
mov
je
ss
cmps
movs
inc
mov
outs
push
mov
les
cmp
pop
xor
and
mov
pop
xor
sub
xor
icebp
mov
loope
retf
adc
xchg
jns
push
je
xchg
pop
(bad)
pop
pusha
mov
push
jo
popa
sbb
sub
call
xor
mov
mov
mov
call
adc
pop
xor
add
pop
int3
xor
push
sub
adc
inc
mov
xlat
sub
add
or
push
js
aas
dec
movs
sbb
and
inc
inc
enter
adc
leave
clc
sub
push
dec
dec
push
sub
out
sub
sub
popa
mov
es
pusha
cmps
and
inc
pop
ins
mov
outs
cmp
adc
mov
inc
sbb
pop
or
or
pop
add
test
jle
xchg
xchg
add
mov
or
les
inc
inc
adc
stos
cmp
nop
and
xor
in
fs
mov
inc
movs
inc
aaa
jno
ret
push
nop
add
or
and
push
cmp
(bad)
and
test
xchg
mov
jp
inc
inc
inc
out
data16
pushf
inc
mov
(bad)
dec
pop
xor
push
pusha
add
xchg
pop
mov
mov
cmp
inc
ror
add
xchg
add
push
push
push
pusha
out
xor
imul
sbb
push
test
and
mov
and
pop
adc
xchg
and
in
cmps
push
add
fs
add
leave
mov
xor
sbb
adc
imul
loopne
mov
movs
inc
push
sub
sbb
dec
sbb
xlat
add
cwde
xchg
mov
pop
pop
movs
aaa
and
xor
sbb
retf
iret
mov
adc
stos
add
test
xor
mov
jp
sub
mov
aam
or
sub
mov
ror
jp
das
cmp
adc
push
and
cmp
fsubrp
or
push
pop
or
js
add
adc
push
mov
pop
inc
dec
dec
inc
or
mov
lods
fild
leave
and
pop
mov
cs
pop
inc
or
sahf
outs
test
sub
test
push
dec
es
out
test
jno
inc
jl
xor
adc
sub
dec
les
push
add
pusha
sbb
add
test
lea
bound
data16
outs
cs
pusha
xor
out
jb
add
test
test
push
inc
bound
into
and
adc
mov
sbb
add
rcr
push
inc
add
or
lods
push
sahf
push
out
mov
bound
inc
ja
popa
outs
jbe
push
and
or
xor
test
push
xchg
or
inc
jl
adc
mov
xchg
add
out
pusha
push
ins
sub
jb
pop
jmp
and
adc
cli
xchg
dec
push
nop
pop
out
and
sub
dec
jo
mov
mov
add
rol
scas
lahf
inc
jbe
push
push
ror
xor
xor
or
fs
test
loopne
jl
dec
daa
add
adc
inc
add
sbb
inc
or
jp
xchg
pop
adc
(bad)
xor
in
or
sub
jmp
xor
mov
outs
je
jne
mov
inc
push
push
xor
xor
test
xchg
push
and
xchg
or
push
adc
or
outs
stos
and
loope
push
push
popa
imul
mov
sbb
push
or
jno
push
sbb
dec
sub
jae
sub
stos
xchg
scas
les
and
test
data16
clc
jmp
inc
and
xor
movs
mov
ja
push
call
mov
je
sub
pop
js
pop
stos
xchg
xor
(bad)
and
mov
outs
dec
sub
(bad)
push
cli
test
and
popa
cmp
or
scas
sub
test
cmps
retf
jp
bound
call
bound
and
or
pop
dec
pop
xor
or
aad
sub
test
push
mov
cmp
and
mov
ret
cwde
jo
cmp
and
scas
xchg
push
outs
jb
add
mov
cwde
xor
mov
daa
add
jl
pop
ja
and
les
imul
outs
sbb
jo
mov
cmp
arpl
pushf
xor
mov
mov
inc
call
push
add
mov
cwde
xchg
pop
push
inc
outs
imul
or
sbb
pop
les
es
jecxz
or
and
dec
lods
push
cmps
in
sub
push
mov
dec
inc
mov
jmp
jns
mov
inc
mov
das
xor
shr
push
retf
push
fsub
sub
inc
jae
jo
enter
dec
add
mov
adc
enter
je
sbb
cmp
call
and
add
cs
call
mov
mov
xchg
fiadd
dec
fimul
jns
outs
push
js
(bad)
bswap
jno
jns
push
pop
retf
inc
push
add
or
test
inc
loope
test
fdiv
cmp
ins
sub
(bad)
outs
jne
dec
adc
shr
sub
adc
push
push
ss
ret
or
push
jmp
dec
out
xor
cmp
aam
add
es
ins
mov
sbb
cmp
popa
or
rcl
and
cmc
ss
and
jae
outs
inc
dec
xchg
fcmovu
add
or
or
sub
jo
es
jno
pop
adc
inc
inc
inc
inc
sub
scas
push
inc
jnp
jp
or
out
mov
push
mov
mov
adc
(bad)
rcr
das
inc
sub
cwde
leave
gs
and
mov
pop
bound
push
or
jmp
or
and
cmp
pusha
in
push
jbe
sub
rcl
and
push
nop
ret
imul
pop
pop
jbe
add
lods
push
push
dec
ficom
and
push
cwde
mov
loopne
test
int
inc
jle
and
cmp
jmp
call
push
add
fmul
add
xchg
mov
sbb
sub
inc
xchg
push
int
push
or
inc
imul
push
push
push
repz
fisttp
ds
pop
mov
sub
into
sbb
addr16
or
inc
push
bound
jo
jo
stos
sub
int3
adc
or
dec
inc
or
jb
adc
test
and
jmp
xor
dec
dec
fdivr
or
xor
pop
es
pop
sbb
xchg
adc
xchg
mov
cmp
clc
fs
xchg
or
stos
or
stos
jl
cli
inc
ret
dec
dec
jp
inc
mov
or
test
xchg
dec
ins
test
and
jb
jo
or
test
scas
and
or
xchg
adc
out
xor
(bad)
mov
imul
es
pop
call
or
push
lods
push
mov
je
ds
cmp
sbb
aam
arpl
sub
or
adc
and
movs
pusha
jbe
sub
movups
cli
mov
or
jmp
inc
inc
mov
add
add
inc
in
mov
sub
xor
sub
add
jb
add
and
dec
push
imul
sbb
call
es
add
dec
xchg
sub
(bad)
mov
xchg
outs
ss
pop
loopne
dec
inc
cs
cmp
js
or
push
and
pushf
push
mov
add
pusha
dec
add
xor
outs
pusha
ins
js
pop
push
movs
xor
add
js
xchg
call
and
lds
pushf
dec
inc
jl
xor
dec
add
push
call
pop
outs
push
fdiv
sbb
mov
sahf
pop
pop
adc
rsqrtps
pop
adc
(bad)
arpl
loopne
cld
aaa
cmp
add
add
fist
add
imul
xor
mov
pop
and
cmp
call
pusha
int3
es
(bad)
xor
inc
fisub
loopne
sub
je
sub
aas
fadd
sub
and
inc
sar
adc
cmp
rcl
aaa
ja
xchg
nop
inc
xchg
in
add
pop
push
pop
call
and
(bad)
add
xor
or
fsub
push
loop
inc
add
sub
add
call
jb
imul
sbb
call
pop
ret
sbb
dec
mov
mov
test
adc
push
or
add
or
js
adc
sub
call
pop
je
jo
cmp
and
add
add
inc
and
daa
daa
and
mov
mov
push
inc
sbb
pop
mov
adc
cwde
sub
push
fisttp
and
ins
fild
loopne
sahf
jmp
push
cmps
xchg
out
fdiv
test
push
jg
mov
ins
ds
xor
sub
inc
call
or
les
loopne
dec
add
add
push
push
jp
push
dec
and
inc
or
adc
sub
lea
inc
aas
addr16
(bad)
lsl
clc
push
test
fcom
shl
jmp
xor
add
inc
cs
mov
pushf
and
cmp
inc
push
push
jo
and
inc
test
cmps
test
adc
push
dec
push
push
daa
and
(bad)
rol
and
ins
fadd
scas
cmps
pop
sub
adc
or
mov
inc
hlt
sbb
mov
xor
cmp
pop
push
nop
add
xchg
(bad)
dec
add
and
js
dec
cmp
xchg
mov
and
mov
iret
dec
push
push
pop
add
cs
je
push
and
dec
inc
inc
dec
mov
clc
and
ret
push
fld
(bad)
loopne
int3
aam
les
xor
xor
jl
and
ds
mov
and
(bad)
push
adc
sbb
dec
push
inc
add
jmp
or
sbb
enter
mov
int3
and
jae
aad
add
mov
add
mul
daa
and
add
test
or
sbb
dec
inc
dec
and
inc
data16
adc
daa
out
sbb
sub
push
adc
inc
push
push
fsub
or
xchg
jl
jecxz
pop
repnz
and
cs
dec
enter
add
sbb
cli
sbb
lea
cmps
xchg
es
pop
inc
test
loopne
inc
pop
add
test
jl
ss
ins
enter
int
ret
in
jbe
xor
call
push
bnd
inc
fmul
mov
scas
jns
ins
ret
push
add
or
pop
cmp
inc
or
fdivr
ins
or
or
or
imul
adc
xor
and
cmp
push
mov
inc
xor
push
push
ret
sbb
test
jl
xchg
nop
jp
aam
push
adc
rol
push
adc
js
and
and
iret
inc
dec
dec
inc
das
ins
xchg
add
push
inc
fcomp
xchg
fs
dec
jo
push
or
jl
aam
adc
pusha
xor
mov
aam
ja
jle
mov
and
pop
sub
aaa
mov
out
dec
mov
inc
sub
test
outs
jmp
xchg
and
mov
and
mov
mov
xchg
add
xor
fidivr
mov
and
inc
pop
inc
or
sub
cmp
add
dec
push
jmp
jb
(bad)
sbb
inc
lods
daa
pop
dec
shr
jb
dec
add
cli
cmp
stos
test
dec
sub
jl
pop
sbb
popa
and
cmps
xchg
or
cmp
adc
inc
int3
jbe
es
xor
js
inc
add
mov
xchg
fwait
les
xor
dec
sub
sbb
or
fimul
popa
jo
or
add
ret
sub
sub
add
(bad)
or
(bad)
ficomp
shr
int3
mov
dec
gs
aam
pop
mov
push
push
test
sbb
or
adc
push
mov
dec
loop
or
ss
jge
and
(bad)
rcl
nop
add
add
dec
push
xchg
imul
test
jo
dec
push
jmp
scas
shl
jo
ficomp
fs
cmc
and
inc
je
imul
test
mov
pusha
addr16
daa
or
test
sub
and
jmp
or
icebp
push
inc
test
add
sbb
push
mov
clc
and
adc
push
xor
popa
push
sbb
call
pop
ins
js
mov
inc
xor
ss
test
jo
aam
cmp
ds
inc
cdq
or
push
push
sub
add
and
and
call
add
dec
push
gs
inc
call
mov
lods
dec
xor
jo
add
and
pop
mov
ss
add
(bad)
(bad)
je
test
add
nop
add
test
out
pop
and
cwde
xchg
stos
mov
inc
dec
ss
xchg
adc
push
mov
or
sub
je
adc
add
sbb
mov
push
popa
(bad)
and
es
or
pushf
call
adc
(bad)
jo
stos
adc
jae
and
es
nop
pop
mov
push
mov
sar
cmp
cmc
push
push
jle
adc
mov
and
(bad)
pop
loopne
cmp
fstp
jl
pushf
cmp
jle
adc
jb
adc
push
push
in
inc
dec
pushaw
ins
les
and
inc
sbb
pop
add
jge
push
sbb
adc
or
mov
jecxz
mov
xor
es
dec
daa
push
xor
cs
push
xor
shr
jbe
xchg
dec
push
xlat
adc
data16
sbb
xchg
cmp
cmp
fsubr
daa
inc
loopne
mov
xor
mov
pop
mov
mov
inc
jle
add
inc
outs
jle
sub
add
add
pop
dec
sub
bound
(bad)
xor
push
inc
adc
or
scas
xchg
inc
dec
push
daa
add
push
pop
retf
adc
or
or
mov
pusha
xor
ins
aaa
or
outs
add
xchg
add
outs
rol
push
xchg
adc
push
add
gs
jb
outs
les
push
add
xor
push
push
cmps
jo
xchg
sub
mov
and
sub
mov
call
rol
or
mov
repnz
push
sub
adc
inc
dec
push
dec
jnp
xchg
mov
rol
pop
iret
cmps
adc
cdq
out
sub
adc
pop
push
jbe
shl
push
push
jle
jecxz
test
inc
sbb
and
sar
jbe
push
or
or
repnz
or
pop
sub
add
xchg
jb
xchg
or
outs
xchg
push
or
mov
push
xchg
push
add
push
es
add
cmp
push
dec
pop
dec
scas
ror
fadd
sub
test
or
scas
jb
jo
push
xchg
adc
loopne
or
xor
rcl
fcom
add
shl
arpl
bound
cmp
cmps
jp
lods
or
or
xchg
nop
xchg
adc
pusha
inc
ret
lock
and
inc
ins
ret
inc
inc
rol
pop
mov
push
inc
ins
and
push
call
repnz
cmp
nop
call
and
mov
mov
mov
xor
adc
into
inc
aaa
or
daa
jo
push
and
push
mov
cmp
lock
rol
xlat
pusha
cld
inc
cmp
jns
not
jo
lods
jbe
dec
dec
add
icebp
add
ins
ins
in
les
enter
xchg
inc
ins
and
stos
add
push
jle
xor
mov
inc
sub
outs
adc
mov
or
adc
pop
pop
push
dec
and
pusha
clc
and
mov
push
pop
and
mov
cmp
movs
mov
xor
dec
dec
loope
or
fs
mov
or
push
(bad)
cmp
push
mov
pop
nop
push
add
or
xchg
es
test
out
add
pop
test
push
adc
bound
xchg
sub
ins
dec
push
pop
or
pusha
xchg
inc
ss
cmp
mov
mov
cmp
mov
pusha
cmp
mov
sbb
pushf
fdivr
inc
and
dec
loopne
xchg
aaa
cmp
fist
push
mov
xor
push
sbb
cmpps
mov
push
daa
and
test
sub
sub
mov
loope
push
and
cs
int3
pop
mov
add
mov
mov
addr16
add
into
dec
push
adc
out
jp
add
mov
fdiv
cmp
cld
cmp
inc
dec
das
add
add
or
mov
or
inc
(bad)
pop
pop
lea
xchg
test
adc
sub
jb
call
jbe
test
dec
or
and
fisubr
or
ss
ins
rol
add
shl
jmp
xchg
stos
inc
sub
push
aad
ret
test
dec
add
pop
add
mov
push
or
scas
cmp
ficom
push
and
mov
dec
and
cs
or
ror
jne
sub
popa
je
ds
popa
jb
adc
inc
nop
mov
loop
pop
pop
cmps
dec
cmp
call
xor
in
add
sub
jno
movs
jl
xor
nop
inc
sbb
nop
jp
mov
(bad)
sub
push
push
shr
push
pop
(bad)
add
jae
and
es
arpl
push
(bad)
rcl
and
push
mov
shl
ss
push
idiv
in
jb
adc
push
jmp
push
xchg
add
gs
ds
lods
or
cmp
sub
sub
xor
or
and
in
fcmovb
push
inc
dec
and
jns
xchg
test
sbb
cmps
xor
adc
cmps
mov
lock
dec
into
mov
dec
cld
fadd
push
adc
ss
xor
and
and
or
pop
or
aam
inc
pop
aaa
leave
pop
or
ss
dec
and
add
ja
dec
and
jl
or
sub
inc
or
or
jno
and
sbb
pop
or
add
and
sbb
or
jb
shl
retf
loope
sahf
push
pop
jb
imul
jne
js
imul
shr
add
adc
mov
dec
scas
xor
inc
test
xchg
movs
xor
js
(bad)
mov
push
inc
or
scas
push
inc
add
and
xor
sub
pop
inc
sbb
out
dec
dec
cwde
imul
(bad)
sub
mov
or
push
inc
mov
dec
dec
idiv
ror
shl
cwde
dec
push
pop
add
test
lock
push
or
cli
jp
sbb
or
lock
shl
outs
les
push
or
and
push
add
movs
outs
dec
dec
push
sbb
or
ret
xchg
lods
scas
outs
sbb
adc
mov
or
push
push
jne
adc
mov
es
mov
xor
and
fisttp
dec
or
xor
retf
push
mov
test
xchg
cdq
mov
add
or
xor
add
ret
ror
repz
add
dec
or
pop
outs
cwde
push
and
test
mov
push
enter
and
ror
sbb
sub
adc
adc
jne
push
ror
lea
(bad)
fdiv
add
dec
cmp
and
lds
and
scas
cwde
or
mov
dec
mov
xor
jge
and
mov
or
xor
call
cwde
adc
jb
dec
test
add
sub
mov
jne
aaa
pusha
jmp
mov
push
inc
sub
outs
adc
test
es
(bad)
movs
and
add
push
pop
push
es
jecxz
mov
xchg
ss
add
ss
enter
push
mov
push
cmp
cmp
add
and
inc
dec
pop
and
ret
add
pusha
and
imul
(bad)
xor
push
adc
in
fst
movs
jl
sbb
movs
fadd
aam
cwde
arpl
and
xor
ror
shr
dec
add
cmp
data16
cs
pop
mov
adc
hlt
call
dec
ss
test
js
outs
lods
and
xchg
fs
mov
jg
push
adc
icebp
push
and
xor
data16
sbb
xor
and
mov
add
cmps
fsub
push
adc
xchg
sub
or
dec
inc
dec
stos
ror
outs
push
movs
inc
xchg
lea
pop
in
or
xor
loopne
enter
inc
dec
dec
push
add
add
xchg
adc
push
dec
dec
dec
add
inc
and
call
inc
dec
inc
jae
xchg
sub
addr16
inc
push
sahf
add
pop
and
add
adc
inc
pushf
(bad)
fisub
add
push
add
cmp
test
xor
scas
mov
mov
xor
out
push
pop
sbb
sub
xchg
lea
dec
ret
or
add
mov
rcr
and
mov
sub
inc
fisub
sub
es
and
pop
push
adc
mov
add
retf
sbb
fisub
mov
lods
inc
and
xor
push
mov
pusha
xchg
push
xor
push
dec
cld
push
xchg
les
jo
imul
inc
inc
es
inc
mov
add
xor
xor
arpl
std
(bad)
dec
xlat
arpl
add
aas
push
aaa
mov
xchg
add
xor
mov
xchg
stos
add
pop
xchg
cmp
cmps
adc
cmp
movs
push
mov
ret
and
and
sbb
ins
mov
ins
pop
add
pop
or
adc
xor
xor
adc
movs
fs
inc
or
fs
push
add
xchg
(bad)
cmp
and
inc
xchg
in
inc
and
add
pop
push
xor
adc
sahf
mov
and
fs
inc
cmps
and
sub
and
inc
mov
clc
loop
add
lahf
jbe
aaa
inc
mov
jp
dec
rol
daa
mov
add
pop
mov
inc
adc
imul
and
(bad)
adc
sbb
and
add
cmp
and
sbb
sbb
iret
nop
cmp
mov
lds
push
pop
test
push
push
fcom
dec
pop
mov
(bad)
mov
push
or
adc
mov
dec
push
or
clc
sub
lahf
outs
loopne
sbb
xor
push
in
adc
and
or
or
adc
inc
adc
adc
push
fdiv
or
test
ins
in
push
jo
push
ds
scas
xor
inc
add
or
mov
pop
mov
push
or
xchg
sub
daa
jg
aad
shr
sub
gs
sub
shr
rcl
jl
dec
sbb
inc
nop
sbb
sbb
push
sahf
ss
add
adc
mov
fst
mov
jb
jb
(bad)
mov
jo
and
cmp
xor
and
dec
data16
rcr
addr16
cmps
or
loope
test
sub
test
pushf
rcr
movs
adc
ss
cmp
invd
mov
mov
add
add
es
rol
push
jo
cmp
add
cs
xchg
imul
inc
enter
push
add
dec
sub
rcl
mov
mov
cdq
movs
push
or
cdq
add
jb
ret
test
jl
aam
outs
dec
mov
call
cmp
and
or
pusha
ficom
mov
jp
adc
ja
enter
cs
add
push
xchg
mov
push
rcl
inc
inc
dec
leave
mov
xchg
dec
inc
pusha
js
jmp
test
inc
inc
dec
outs
add
mov
mov
repnz
lods
outs
enter
inc
dec
push
push
gs
xchg
retf
ins
je
dec
cli
sbb
and
or
les
adc
mov
and
add
adc
mov
push
pop
aad
push
mov
jbe
jne
mov
scas
sub
ins
rol
cs
xchg
mov
je
pop
fs
push
sbb
xor
(bad)
mov
stos
aas
mov
outs
jns
xor
inc
sbb
iret
inc
adc
mov
push
sbb
and
adc
lock
pushf
and
dec
xchg
test
and
scas
adc
sbb
call
shl
rol
mov
pop
xchg
(bad)
lock
jns
shr
pushf
cli
outs
push
cwde
push
gs
push
es
dec
sbb
inc
add
pop
mov
lock
ds
(bad)
add
and
adc
push
call
push
xor
mov
nop
mov
call
cs
in
jmp
mov
xor
lods
int3
xchg
inc
daa
loop
es
scas
jno
mov
xor
pop
sub
outs
mov
jp
ins
movs
mov
clc
sub
sub
sub
or
hlt
and
and
xor
mov
mov
dec
push
add
or
adc
inc
jae
jno
pop
(bad)
sub
push
dec
imul
push
rcl
int3
test
dec
sbb
mov
aad
shl
xor
xchg
cmp
mov
jne
mov
addr16
call
or
and
and
aam
sar
pop
jo
add
add
push
mov
push
mov
lods
sub
and
push
in
inc
xchg
inc
fidiv
inc
bound
pop
jno
xchg
(bad)
and
popa
add
inc
push
add
and
mov
adc
or
jl
push
rol
sbb
mov
and
mov
jb
adc
and
add
inc
pop
xchg
aam
mov
movs
ss
push
sub
cmps
mov
sbb
call
popa
or
imul
or
rcl
enter
push
or
sbb
add
mov
into
rol
or
pop
bound
and
shr
movs
loop
jo
movs
inc
dec
push
test
int3
sub
int3
test
outs
retf
lock
pop
inc
sbb
push
jb
or
mov
pop
js
movs
add
dec
or
cld
imul
jo
mov
xchg
add
cmps
push
pop
(bad)
push
jmp
xor
dec
int3
inc
and
mov
rcr
ins
rcl
aas
mov
test
and
retf
sar
aam
js
sbb
lods
in
jo
push
mov
sar
les
jmp
pusha
sahf
inc
dec
dec
push
je
adc
mov
sub
push
je
pop
dec
call
out
lea
call
inc
popa
pusha
fisubr
xor
and
xor
or
cmps
adc
mov
fild
pushf
dec
cld
imul
xchg
into
xchg
and
fsub
sar
adc
xor
or
sub
pusha
enter
push
push
dec
cmp
jbe
mov
and
outs
mov
hlt
adc
fisubr
xchg
sbb
xor
xchg
add
adc
add
gs
xor
cmc
adc
mov
test
push
repnz
int3
inc
or
push
adc
pop
push
sbb
or
les
dec
inc
add
dec
fdiv
sub
fsub
xchg
add
mov
repnz
jge
faddp
pop
loopne
hlt
mov
pop
mov
scas
(bad)
dec
sub
mov
or
dec
dec
jmp
data16
mov
mov
xchg
shl
lds
dec
popa
dec
pop
jp
retf
xor
dec
mov
or
jle
jp
adc
stos
movs
sbb
pop
gs
adc
inc
sub
or
xor
sbb
rcl
dec
xor
push
sub
cmps
push
xchg
mov
and
dec
add
or
jmp
je
pushf
and
cmp
sub
ins
sbb
scas
(bad)
mov
scas
shr
lock
jb
push
xor
icebp
stos
imul
jne
adc
dec
call
loopne
pop
jle
shl
push
rol
jne
jl
pusha
test
(bad)
cmp
aam
es
jbe
or
pop
inc
arpl
lock
inc
pop
mov
sbb
xor
out
fadd
jne
js
add
push
push
imul
pop
xchg
and
add
call
unpcklps
dec
dec
hlt
mov
mul
xor
jp
jno
xchg
xor
pop
sub
jp
adc
dec
pop
pusha
iretw
cdq
mov
loopne
mov
inc
in
inc
mov
jb
and
and
pop
pop
pop
nop
mov
mov
or
or
xchg
pop
and
mov
push
push
xor
mov
add
adc
fadd
mov
jmp
jo
mul
mov
shr
mov
push
jbe
cmp
sub
adc
test
adc
nop
cmp
mov
mov
dec
add
loopne
and
pusha
jns
push
xor
ror
push
push
rol
jne
scas
dec
ins
push
and
test
and
mov
push
xchg
das
dec
loopne
adc
ins
aas
nop
or
mov
sub
push
dec
cmp
dec
push
fs
xchg
rol
sbb
adc
xor
dec
inc
sbb
cmp
sub
dec
pop
mov
inc
shl
aas
adc
mov
mov
jo
dec
dec
ss
jnp
das
xchg
test
mov
add
aaa
out
push
sbb
mov
scas
cmps
or
cli
sub
jb
sub
push
pop
add
sub
data16
bound
xor
ficom
xchg
lea
and
fs
punpckldq
push
into
retf
les
dec
xor
sub
loope
cmp
cdq
and
hlt
into
add
pop
adc
ins
push
add
mov
into
jl
das
pop
push
fisub
xor
test
add
and
push
or
nop
retf
or
jle
test
dec
dec
dec
je
das
xor
pop
mov
push
add
daa
cs
adc
adc
mov
and
pop
dec
sbb
dec
fisub
sbb
ret
sbb
sbb
lea
mov
jp
inc
lods
stos
mov
cmp
and
sub
jg
and
or
sbb
push
inc
xchg
dec
not
pop
jb
ficomp
mov
mov
push
inc
mov
inc
push
pop
pop
adc
ret
addr16
pop
loopne
inc
or
mov
fidiv
push
add
movs
and
nop
cmp
add
and
test
inc
adc
ins
mov
mov
ds
cmps
pop
les
mov
xor
ss
and
test
dec
push
mov
jno
cmp
nop
ret
mov
adc
push
xor
mov
xor
adc
call
nop
xchg
adc
pop
dec
dec
and
push
dec
xchg
sbb
es
fisub
and
dec
dec
xor
int3
adc
in
(bad)
dec
mov
dec
pop
(bad)
in
int3
adc
or
dec
imul
and
sbb
fldcw
ins
cmp
inc
lods
or
adc
dec
mov
rcl
mov
xchg
add
cmp
ficom
mov
or
sub
push
cmp
inc
dec
imul
cmp
mov
inc
inc
pop
data16
adc
dec
add
sub
sbb
xchg
or
test
rol
xor
bound
mov
out
loop
js
aad
arpl
add
sbb
sub
pop
nop
and
in
add
mov
aam
xor
xor
push
pusha
(bad)
hlt
or
data16
sub
cwde
pop
test
xchg
push
mov
aas
push
pop
dec
add
dec
rcl
inc
cmps
pop
sub
xor
xchg
mov
jmp
nop
push
xor
xchg
jg
retf
or
int3
retf
dec
dec
loopne
push
add
inc
inc
mov
fdivr
inc
xor
aas
jo
xchg
or
test
sub
call
shl
imul
ret
jnp
dec
dec
pusha
xchg
adc
inc
adc
ss
dec
xchg
pop
push
xchg
jo
imul
retf
adc
pusha
and
mov
sbb
xor
mov
movs
cmp
fcomp
fiadd
xchg
ret
add
pop
lods
inc
push
hlt
call
push
mov
mov
push
mov
popa
push
jo
inc
or
loop
push
rol
test
leave
je
mov
lock
dec
mov
das
ficomp
inc
or
sub
rol
inc
sub
push
mov
or
dec
jecxz
push
and
dec
stos
outs
ja
mov
inc
jge
and
push
xchg
test
mov
fs
aaa
pushf
dec
xchg
test
add
mov
inc
inc
sub
call
xor
xchg
shr
leave
sub
cmp
add
add
push
push
mov
popa
jo
ins
jns
mov
fadd
test
lods
inc
dec
push
test
loope
leave
shl
push
pop
cmp
xchg
(bad)
outs
call
push
inc
and
push
out
mov
fadd
inc
jae
sub
(bad)
xchg
ins
sbb
cmp
pop
pop
in
push
cmp
xor
push
jmp
pop
dec
fs
jo
push
sbb
add
sub
mov
out
sbb
or
sub
jo
ret
aam
das
xor
in
call
pop
sbb
and
pop
int3
ins
cld
xor
pop
dec
call
outs
inc
or
retf
add
cli
sub
push
pop
ss
xchg
cmp
xor
pop
imul
popf
mov
xor
mov
sub
mov
push
fild
cmp
bound
mov
je
add
inc
or
pusha
outs
push
pop
ins
and
movs
lock
movs
xor
mov
dec
nop
mov
test
cdq
xchg
or
mov
ins
clc
jne
adc
test
imul
jbe
pop
popa
push
dec
sub
xor
dec
sbb
or
aam
push
inc
in
mov
idiv
dec
push
ins
arpl
xor
retf
fadd
dec
or
out
adc
cs
push
stos
nop
push
pop
(bad)
jge
xchg
loop
test
and
push
inc
sub
enter
ins
loopne
pusha
xor
add
sub
jo
cmp
or
sub
or
adc
loope
add
xor
movs
adc
mov
sbb
sub
add
dec
mov
int
dec
outs
xor
push
dec
add
inc
mov
dec
rcl
push
pop
push
popa
push
div
rcr
xor
inc
sub
pop
popa
or
sbb
cmp
xor
mov
(bad)
daa
add
add
in
push
mov
(bad)
cmp
(bad)
and
pushf
daa
xor
mov
inc
out
js
xchg
pop
or
xchg
data16
add
and
mov
popa
out
mov
push
leave
mov
loopne
push
pop
add
dec
ror
and
push
mov
sub
ss
lock
xor
jne
adc
dec
or
jne
xor
jmp
dec
inc
sub
or
xor
or
pusha
sub
inc
or
jle
or
sbb
movs
jo
hlt
add
xor
dec
add
sbb
push
mov
jo
in
xor
call
add
add
adc
dec
mov
cmp
adc
push
bound
xor
pop
cwde
lods
xchg
add
loop
sbb
or
dec
hlt
and
dec
push
mov
add
cmp
add
dec
js
das
xchg
jbe
dec
inc
adc
jl
and
fst
and
es
addr16
or
imul
cwde
add
or
inc
sbb
adc
lods
pop
ret
outs
xlat
shl
pop
outs
mov
inc
inc
fisubr
mov
cmp
add
or
push
adc
pop
hlt
fsubr
push
pop
push
add
jbe
or
and
bound
ret
sbb
ss
add
or
rcl
mov
push
ss
and
pop
daa
test
adc
sbb
fs
or
(bad)
and
leave
mov
call
outs
dec
pop
adc
and
mov
push
inc
dec
push
pop
out
test
arpl
or
mov
pusha
pop
or
sub
aas
inc
xor
fimul
pop
xchg
adc
jb
pop
xor
pop
loop
and
aam
pushf
loope
add
lahf
dec
push
outs
or
scas
or
add
or
push
sahf
and
or
xchg
aam
inc
mov
out
xchg
mov
ss
push
dec
adc
jo
outs
fs
pop
add
out
outs
adc
cmp
loopne
mov
fimul
adc
call
adc
push
inc
imul
inc
nop
(bad)
xor
jne
dec
dec
pop
arpl
add
or
ins
fadd
retf
sub
push
popa
ds
pop
push
ss
cwde
outs
push
dec
cmp
adc
cmp
inc
dec
push
mov
sbb
ret
and
mov
iret
mov
mov
shl
inc
cwde
push
nop
cmps
sub
inc
dec
out
sub
add
ret
and
sub
or
retf
or
dec
push
fdiv
and
or
cmp
mov
or
mov
pusha
push
push
cs
cmp
cdq
hlt
cs
cs
ret
ins
jl
and
jl
xchg
and
inc
dec
retf
and
dec
or
mov
stos
xchg
cmp
adc
mov
push
and
push
movs
mov
es
ret
xor
xchg
or
inc
hlt
mov
pusha
adc
es
push
fidiv
js
inc
dec
dec
inc
add
add
je
inc
xchg
inc
rcr
add
cmp
dec
jb
mov
jp
pushf
lock
punpcklwd
xchg
(bad)
int3
pop
dec
cmp
pop
ja
inc
pop
pop
data16
xchg
or
push
mov
pushf
mov
adc
push
pop
dec
push
sub
add
mov
inc
adc
js
mov
mov
cmc
jno
shr
pop
stos
add
lock
jb
sub
adc
cli
and
jl
add
push
dec
shr
shl
or
daa
dec
dec
test
jp
push
pop
fisttp
je
and
fs
out
loope
xchg
les
dec
into
or
sbb
add
push
push
cli
or
test
push
mov
je
and
cmp
(bad)
or
rol
je
daa
daa
add
mov
push
push
and
jo
in
loopne
movs
sub
inc
or
ins
dec
ror
das
inc
cmps
jp
dec
or
loope
les
mov
and
test
xor
rol
out
imul
pop
pop
or
daa
das
xor
dec
inc
pusha
xchg
ror
enter
dec
in
push
inc
cmp
test
push
xor
call
inc
inc
push
rcr
ins
and
aam
sub
pop
cs
or
call
adc
cmp
add
sbb
inc
add
call
inc
add
(bad)
xor
sub
test
add
pop
addr16
les
in
mov
in
cmp
xchg
or
inc
adc
daa
and
xchg
inc
sub
sub
jo
gs
pop
inc
pop
daa
pusha
inc
js
dec
push
adc
or
sub
adc
jle
lods
adc
das
adc
add
pushf
sub
cs
add
pop
pusha
jmp
add
push
in
mov
test
xor
push
pop
cmp
test
push
sub
xor
jnp
sub
sub
hlt
xchg
les
push
adc
aaa
or
sub
dec
or
adc
mov
dec
xchg
adc
push
push
(bad)
jp
add
aaa
aaa
pop
imul
cdq
and
or
ret
inc
push
stos
push
push
or
cmps
push
and
sbb
dec
dec
add
add
lods
mov
jp
push
and
cmp
pusha
adc
mov
mov
daa
into
sub
imul
inc
sub
ror
pusha
rcr
push
inc
add
add
add
pop
sbb
adc
jo
ror
adc
mov
mov
ins
cmp
xor
pushw
jns
rcr
int3
sbb
and
inc
push
push
nop
(bad)
into
dec
and
push
scas
in
jbe
sub
push
int3
inc
daa
push
lods
mov
(bad)
dec
or
test
adc
movs
dec
rcr
clc
sub
sub
xor
cwde
inc
inc
add
jb
push
bound
push
js
or
jo
mov
mov
iret
mov
dec
adc
test
test
xchg
and
hlt
add
aaa
pop
mov
mov
and
into
outs
add
(bad)
mov
outs
pop
and
xor
sub
mov
je
jmp
fadd
adc
xchg
adc
repnz
js
push
xchg
sub
and
inc
inc
push
pusha
add
inc
js
sub
inc
sahf
mov
sbb
inc
dec
add
mov
or
dec
popa
aam
push
inc
pop
and
xor
lock
sbb
mov
lock
push
mov
clc
lock
adc
xchg
mov
mov
outs
mov
sub
push
or
dec
ret
cmpxchg
dec
push
fisub
jb
pop
pop
xor
hlt
test
jo
mov
jmp
pop
sub
cs
jnp
sub
rol
add
xchg
ja
shl
cmp
mov
or
inc
inc
dec
scas
push
jb
dec
sub
into
pop
test
jle
cmp
push
pop
and
add
add
adc
imul
lock
aaa
add
test
dec
push
adc
inc
pop
pop
pop
popa
inc
pop
xor
punpcklbw
xchg
fist
add
outs
jne
push
push
inc
push
or
or
scas
inc
rcr
iret
dec
nop
mov
push
in
pusha
arpl
jl
xchg
(bad)
je
and
pop
fs
add
jo
xchg
push
xor
push
push
sbb
push
pop
sub
fs
imul
adc
arpl
loope
icebp
in
ret
mov
jo
test
bound
cs
sub
inc
pop
mov
adc
dec
push
xor
or
xor
add
push
inc
loop
dec
mov
cmp
sub
sub
inc
mov
jo
rcr
xchg
add
inc
adc
sub
sbb
mov
adc
mov
push
adc
pop
adc
pusha
pop
pop
ins
push
data16
sbb
mov
dec
add
xor
cmp
mov
ins
jbe
jp
rcl
test
sbb
retf
int
inc
adc
ror
inc
jo
rol
and
cmps
pop
inc
aaa
(bad)
xchg
out
aas
xchg
addr16
outs
add
fs
retf
xor
mov
add
mov
cmp
lods
and
fwait
sbb
dec
cmp
retf
push
addr16
sbb
dec
add
xchg
xchg
rcl
and
outs
pop
test
ret
inc
push
pop
scas
add
add
dec
push
fist
push
inc
and
enter
adc
inc
sub
ret
jb
adc
xor
dec
movs
add
xchg
cwde
sbb
or
push
test
ds
add
xchg
push
ret
pop
nop
and
xchg
pop
test
mov
into
fdivr
enter
add
je
cmp
jnp
ror
mov
shl
adc
push
shl
sub
or
or
and
or
inc
jg
sbb
inc
mov
sub
jp
or
jle
test
add
cmp
push
add
or
push
xchg
dec
adc
js
cli
mov
add
shr
add
mov
push
or
push
mov
mov
jl
or
or
js
push
cs
inc
jb
add
fdiv
mov
add
bound
cmp
(bad)
js
or
sub
stos
or
hlt
cmp
inc
fadd
or
dec
add
xchg
addr16
adc
push
adc
ret
mov
push
pop
pop
inc
and
(bad)
loopne
dec
sub
jle
mov
outs
mov
add
mov
inc
sub
ins
jp
dec
inc
fs
imul
push
leave
and
ins
push
rol
dec
in
xor
loopne
sub
les
push
adc
mov
or
pop
js
xchg
mov
xchg
push
inc
mov
adc
pop
pop
and
mov
push
mov
mov
jb
mov
and
push
xor
(bad)
dec
mov
imul
fs
push
add
and
nop
call
pusha
xchg
dec
add
int3
cwde
ret
mov
and
xor
or
movs
test
xchg
lods
dec
clc
rol
inc
outs
in
push
and
jne
mov
and
mov
add
pop
dec
or
sub
das
xor
inc
add
xor
sub
cmps
sub
push
pop
push
retf
retf
cwde
dec
rol
mov
(bad)
or
inc
xchg
shl
sub
fst
adc
cmp
inc
adc
push
push
mov
push
dec
cld
cmp
das
dec
rcl
(bad)
outs
or
mov
pushf
add
rcl
xchg
hlt
sbb
sub
adc
mov
das
popa
fidiv
sub
add
add
or
inc
test
pusha
nop
mov
xlat
retf
jmp
jno
ss
push
hlt
inc
add
stos
push
mov
jp
adc
les
jne
fsubr
mov
xor
xchg
push
rcr
inc
push
push
pop
imul
retf
add
push
xor
adc
add
sub
pop
add
sub
int3
jnp
inc
add
xchg
(bad)
retf
inc
in
call
bound
out
outs
pop
and
mov
dec
int3
push
pushf
and
inc
mov
int3
jl
fidiv
dec
xchg
and
dec
jmp
adc
cmp
loop
push
add
jl
pop
cmp
dec
iret
stos
or
xor
nop
xor
mov
sub
cmp
int3
(bad)
call
or
(bad)
inc
jne
inc
or
fs
mov
add
add
xchg
sbb
add
call
pop
pop
jno
ss
sbb
inc
repnz
xchg
xchg
jb
and
inc
inc
movs
mov
xchg
mov
or
aas
loop
cmp
sub
xchg
xor
dec
mov
ds
sbb
mov
mov
pop
mov
adc
imul
xor
xchg
fcomp
jno
push
and
add
push
outs
inc
cmovb
mov
dec
add
mov
(bad)
out
mov
inc
test
and
xor
dec
les
out
add
adc
dec
add
div
add
test
adc
push
enter
mov
push
xor
xchg
scas
mov
xor
(bad)
and
cmp
dec
mov
xchg
cmp
popa
sbb
sub
shl
xor
mov
inc
add
adc
dec
js
push
sbb
jecxz
add
jo
cmps
sub
popa
sar
stos
dec
test
mov
add
adc
outs
cmp
or
mov
push
nop
jmp
jo
or
pop
push
test
push
cmp
xor
or
pop
sub
xchg
loopne
jb
adc
sub
add
lock
pop
pop
imul
mov
das
shr
mov
mov
pusha
call
ds
adc
sub
xor
inc
movs
pop
pushf
xor
pop
test
sub
test
mov
mov
or
add
pop
jns
ins
pop
test
pusha
popa
push
movs
movs
dec
pushf
cs
sub
ret
dec
xchg
or
push
pusha
sar
sbb
fcom
xor
mov
inc
push
mov
or
adc
mov
cvttps2pi
inc
inc
pop
or
mov
test
dec
movs
movs
xchg
or
add
pop
test
xor
mov
jbe
or
outs
das
fcom
rcl
push
mov
push
sahf
cmp
cmp
sbb
push
push
pop
pop
(bad)
sahf
and
push
add
mov
add
xor
int
outs
jno
sub
jb
shl
outs
adc
pop
or
rcl
les
(bad)
fst
jnp
out
cs
dec
lock
shl
dec
push
inc
ss
push
mov
cmp
and
movs
and
js
cmp
xchg
je
and
mov
inc
or
push
enter
fsubr
jo
adc
adc
cmp
adc
and
test
xchg
loopne
lods
sbb
adc
push
enter
outs
jnp
sbb
sbb
cs
sbb
cmp
mov
call
aam
push
adc
and
push
repnz
xor
adc
retf
push
add
das
or
sub
or
mov
cld
test
popa
sub
jmp
popa
ins
cmp
dec
push
ss
add
out
mov
cwde
mov
xor
sub
addr16
mov
rcl
and
push
inc
dec
or
dec
jmp
jmp
dec
imul
inc
mov
es
or
call
cmps
pop
xchg
or
push
xor
int3
inc
lods
xor
lock
adc
push
inc
and
aas
add
adc
adc
les
ficom
aaa
or
dec
push
sub
shl
dec
push
je
and
xchg
jp
push
and
add
push
pop
fcom
pushf
test
xchg
test
adc
pop
inc
or
ins
test
clc
xchg
shr
inc
ins
mov
or
adc
adc
adc
ins
mov
scas
inc
stos
add
clc
bound
inc
dec
inc
lods
pop
push
pop
adc
push
mov
fs
je
push
rcr
aaa
cmp
add
aam
mov
(bad)
xchg
in
push
mov
push
cmp
test
push
push
sub
mov
int3
test
jno
xor
lds
inc
fcomp
stos
mov
jo
mov
scas
xor
xchg
mov
and
jns
es
jae
lods
mov
mov
jl
aas
ret
cmp
nop
adc
into
sahf
adc
ret
rcl
sub
push
aad
or
jmp
fwait
xor
push
pop
iret
push
inc
cs
push
inc
hlt
mov
add
fidiv
pop
and
mov
inc
dec
fcom
mov
add
scas
repnz
test
xchg
mov
or
dec
jg
dec
add
pop
dec
adc
jecxz
mov
cmp
dec
add
test
es
and
jo
cs
hlt
pop
data16
out
outs
data16
dec
jecxz
pusha
inc
pop
jo
add
inc
pop
test
pushw
and
add
and
xchg
fdivr
dec
dec
or
jo
sbb
xchg
push
outs
ss
xor
cmp
ret
js
pop
add
outs
push
or
dec
jb
pop
xor
pop
div
mov
mov
sbb
cmp
add
sar
les
inc
cmp
add
retf
es
fidiv
inc
cmps
cwde
aam
push
push
fisub
adc
lods
xor
or
mov
jl
int
stos
cmps
cmp
je
adc
mov
dec
mov
jo
or
aaa
mov
dec
dec
add
nop/reserved
sub
mov
int3
push
pop
xchg
rcr
push
and
xlat
xchg
add
or
jo
mov
xor
bound
mov
adc
jae
pop
test
xor
cmp
imul
idiv
add
push
imul
push
push
pusha
xor
mov
xor
or
sbb
or
data16
xchg
clc
les
mov
mov
inc
aaa
fs
pusha
arpl
mov
pop
les
ror
xchg
pop
sbb
add
inc
xor
and
sbb
sbb
cwde
mov
pop
imul
ud0
and
mov
and
and
and
shl
hlt
dec
aas
mov
ds
popa
leave
outs
push
jmp
pusha
and
add
lock
jo
adc
sub
push
push
outs
adc
adc
mov
movs
and
loopne
mov
lods
and
or
movs
xchg
cmp
dec
rol
leave
sub
repnz
sahf
mov
jb
retw
and
push
push
inc
pop
test
fist
hlt
cmp
call
mov
aaa
mov
sub
sbb
addr16
add
fcom
mov
xor
nop
fld
les
push
add
pop
or
xor
xchg
ss
push
neg
pop
sbb
jne
mov
xor
sub
test
push
add
pop
or
pop
ret
pop
fiadd
inc
or
dec
cmp
leave
sub
rol
sub
jecxz
push
push
mov
js
mov
daa
sub
(bad)
jns
nop
cmc
add
push
jg
add
adc
or
in
lock
add
push
add
cmp
inc
jne
sub
sub
cmp
and
jl
push
sbb
outs
cmps
nop
sbb
mov
ret
ret
sub
add
pop
dec
xor
shr
and
xchg
add
fadd
push
movs
(bad)
inc
mov
inc
adc
xor
and
xor
mov
sub
mov
test
pop
push
icebp
or
shr
add
jmp
or
loopne
dec
mov
jne
lods
js
in
ds
dec
and
mov
xor
(bad)
data16
adc
pop
jae
daa
add
pusha
jmp
add
sub
add
mov
adc
mov
xor
add
test
push
sbb
push
rcr
hlt
push
push
dec
inc
data16
outs
push
mov
js
add
xor
jl
jb
daa
sbb
inc
inc
movs
inc
or
sbb
push
ins
pop
daa
mov
push
xor
push
xor
mov
or
sub
movs
or
or
inc
dec
popf
jle
sub
pusha
test
jl
push
adc
pusha
jb
rol
ds
add
dec
xor
mov
push
jl
test
xchg
mov
jo
cmp
jne
stos
mov
aam
mov
cwde
sub
jo
sub
retf
rcl
xchg
add
xor
and
and
pusha
and
call
add
fisub
pop
sbb
xor
and
mov
rol
cs
shl
dec
test
shl
cmp
cdq
xchg
rcr
lock
adc
or
sub
push
popa
rcr
sbb
test
and
dec
add
mov
pop
add
ss
gs
or
out
xor
or
rol
mov
sub
add
fsub
xor
gs
mov
sub
call
rol
or
lock
xchg
dec
mov
stos
xchg
aaa
or
test
mov
add
xor
aam
mov
dec
retf
add
call
lock
pop
add
lahf
adc
adc
mov
cmp
add
js
cmps
xor
push
dec
push
xor
inc
sbb
test
int3
test
inc
loopne
mov
inc
loopne
push
push
scas
sub
add
pushf
sub
or
and
loope
push
dec
sub
movs
adc
aas
in
and
inc
les
cmp
stos
movs
repnz
xchg
add
aaa
int3
xor
cwde
inc
cwde
inc
mov
mov
jne
sub
mov
jbe
xchg
cmp
sub
sbb
mov
sbb
inc
mov
pop
clc
stos
dec
push
adc
add
and
push
fisub
xor
test
push
add
xchg
dec
adc
lods
ins
adc
pop
outs
cmp
leave
sbb
loop
inc
and
xchg
stos
xchg
cmp
xor
add
sub
sbb
adc
cmp
push
daa
stos
and
jmp
pushf
push
test
rcl
mov
call
scas
dec
call
test
adc
and
dec
mov
or
add
pop
jo
jle
dec
or
pusha
sub
push
inc
test
cs
add
mov
daa
sub
or
cmp
cs
dec
push
popa
ror
test
or
inc
adc
mov
imul
ret
shl
test
xor
and
add
cmp
inc
mov
or
lods
hlt
shr
mov
dec
push
lods
fimul
jmp
xchg
and
sub
jbe
ret
rcl
xor
imul
movs
xchg
aam
ss
xchg
push
inc
pusha
inc
sbb
je
inc
add
cmp
outs
add
nop
or
mov
ins
enter
xor
inc
add
add
sbb
lock
or
add
jo
cmps
loope
fimul
rcl
ror
xor
sbb
or
ss
or
jmp
call
(bad)
loop
ins
loop
out
push
das
mov
pop
ds
jne
or
out
dec
pop
test
dec
das
rcr
pop
adc
loop
loop
xchg
lods
mov
xor
dec
sbb
inc
add
inc
cld
shr
jo
adc
pop
(bad)
data16
mov
add
dec
jbe
hlt
add
xchg
add
and
adc
jo
xor
sub
add
inc
and
sbb
push
les
add
inc
or
add
add
rcr
or
adc
dec
pop
rcl
ret
sub
add
adc
aaa
inc
ins
das
imul
jo
xor
cwde
add
jae
mov
ja
nop
les
mov
adc
sahf
fcmovb
add
push
pop
ins
loopne
scas
mov
lods
mov
rol
adc
in
outs
jnp
(bad)
pop
adc
ret
dec
(bad)
sbb
aaa
mov
sub
dec
dec
call
addr16
dec
adc
enter
push
aaa
pop
sbb
push
in
xor
xchg
dec
test
xchg
ss
sub
aas
xor
push
adc
dec
add
and
adc
push
mov
sbb
xor
ja
or
xchg
mov
test
cmps
mov
add
bound
pop
test
adc
inc
add
loopne
fcomp
pop
(bad)
adc
xchg
push
(bad)
rcl
add
inc
xlat
mov
push
cld
loopne
or
dec
dec
int3
jae
inc
imul
imul
adc
sbb
pop
lods
add
popa
jmp
lods
add
pusha
and
push
call
fdiv
or
nop
sbb
in
jl
inc
adc
or
dec
dec
add
and
xor
lock
pop
adc
add
xor
pusha
pop
test
and
adc
ret
or
pop
outs
sbb
es
test
xor
mov
cmp
stos
mov
jge
adc
pushf
cli
jmp
mov
dec
add
repnz
pop
adc
dec
imul
jo
scas
and
sbb
icebp
add
movs
mov
loop
and
cmp
push
pop
mov
xchg
fadd
shl
sbb
test
add
mov
(bad)
nop
mov
inc
sub
jb
enter
and
cs
js
push
cdq
jo
inc
call
pop
imul
sub
imul
or
pop
into
inc
xor
and
inc
mov
pop
mov
xchg
push
scas
dec
pop
inc
imul
ins
loope
ret
loopne
ror
cmps
mov
adc
inc
dec
les
or
dec
mov
sub
pop
call
adc
iret
or
adc
mov
jb
mov
add
rcl
les
mov
cmp
pushf
xchg
mov
and
adc
test
sbb
inc
adc
sbb
adc
jp
push
push
mov
xchg
and
mov
sub
sbb
sbb
xchg
push
mov
fidiv
inc
shl
xor
adc
enter
test
retf
(bad)
inc
jmp
xchg
inc
sbb
add
add
js
and
push
and
inc
jp
inc
int3
add
xor
or
add
and
enter
daa
dec
adc
pop
ja
xchg
push
inc
push
pop
(bad)
test
mov
jbe
fld
adc
xor
xor
inc
mov
dec
add
mov
fdivr
loope
pop
and
dec
or
xor
inc
push
mov
push
mov
xor
sbb
sub
and
es
add
call
mov
and
push
pusha
adc
cwde
popa
sub
or
adc
mov
mov
jo
jo
les
add
inc
pop
push
jb
dec
push
cmp
inc
cmp
jle
adc
or
inc
or
mov
add
add
dec
add
dec
sub
test
test
xchg
in
pushf
mov
hlt
and
fs
add
(bad)
dec
mov
mov
push
inc
push
adc
cmp
jp
and
test
sbb
sbb
jb
adc
add
or
loop
test
add
and
or
jns
mov
cwde
call
jne
xor
jp
loopne
and
mov
sbb
add
pushf
fcomp
or
les
cwde
cmp
adc
dec
sub
adc
mov
sub
sub
pop
jp
push
push
jle
and
cs
test
adc
sbb
xor
or
sub
jbe
push
add
adc
sbb
dec
xor
adc
push
out
jne
dec
or
leave
test
ins
jns
or
adc
add
test
ret
fcom
push
or
bswap
push
or
push
inc
inc
cmp
xchg
add
shl
push
pop
push
scas
ss
in
inc
pop
int3
xor
test
sub
jo
or
clc
cmps
cwde
or
sub
jmp
adc
xchg
and
cmp
sbb
add
sub
or
xchg
add
or
int3
or
and
add
enter
pusha
mov
dec
mov
cs
and
movs
add
sub
mov
inc
cmp
pop
or
cmp
imul
aam
mov
fs
jmp
inc
inc
loopne
push
dec
outs
sbb
and
or
outs
js
dec
mov
call
test
or
repnz
cmp
push
stos
nop
mov
mov
push
adc
pop
and
inc
sbb
inc
mov
sbb
arpl
or
jnp
cmp
or
xchg
loop
popa
and
ins
jo
xor
push
sbb
cwde
cmp
xchg
pusha
add
enter
int3
mov
xor
mov
out
movs
push
push
dec
or
mov
es
dec
dec
cmps
fisub
hlt
aam
xchg
or
mov
inc
out
jo
pop
add
push
add
push
ret
fdivr
adc
add
inc
les
test
adc
push
ret
inc
inc
mov
push
not
and
out
push
inc
cdq
and
in
xor
xor
push
push
dec
je
clc
fisub
push
xchg
dec
mov
sbb
cs
cmp
mov
shr
push
fsubr
imul
nop
stos
dec
inc
adc
or
and
add
push
test
or
mov
scas
and
sub
dec
inc
mov
dec
jmp
dec
aam
xchg
hlt
call
dec
add
push
add
and
xchg
jge
shl
je
xor
enter
or
das
jbe
enter
mov
jl
xor
mov
ins
mov
loope
push
scas
sar
sbb
or
rol
dec
mov
je
pop
cs
cbw
mov
dec
jmp
dec
pop
hlt
and
dec
and
sysenter
ficom
bound
call
cmp
push
pop
sub
inc
xor
xor
xor
adc
movs
mov
inc
ret
mov
push
adc
test
add
adc
xchg
into
mov
cmp
inc
and
push
adc
sub
scas
or
sahf
ds
add
or
lods
or
adc
xor
pusha
adc
inc
push
inc
fs
in
pusha
neg
bound
inc
mov
test
das
aaa
scas
push
push
sbb
mov
pop
xor
xchg
ret
(bad)
inc
ss
add
or
xor
xor
dec
xchg
shl
mov
movs
inc
aas
or
add
push
dec
mov
dec
or
fbstp
push
mov
xor
data16
mov
pop
jl
xchg
add
outs
pop
and
shl
cmp
xor
add
push
lods
in
jp
inc
adc
pop
jbe
or
add
test
or
mov
push
xchg
retf
jns
jnp
mov
pusha
xor
push
and
nop
leave
xor
sub
cwde
push
data16
inc
add
jb
xor
xor
mov
test
pop
fsubr
and
ins
clc
adc
sub
test
xchg
dec
retf
and
jl
ds
cmp
add
xchg
adc
cmp
test
(bad)
into
jb
or
test
push
pop
scas
jb
xor
xchg
or
push
jbe
sub
mov
mov
adc
mov
sahf
adc
jo
mov
and
dec
lods
and
inc
cwde
sub
dec
sub
nop
cmp
nop
jmp
and
jl
mov
cmp
add
sbb
nop
mov
mov
cmp
inc
inc
jmp
(bad)
test
cmp
sub
adc
jb
cmp
adc
loopne
inc
xor
add
mov
jne
xchg
call
adc
add
jp
dec
jmp
add
leave
and
bound
push
sahf
sub
fadd
jmp
xor
repnz
inc
mov
scas
push
push
push
data16
inc
mov
and
loope
and
lock
movs
pushf
enter
aad
retf
or
inc
je
mov
cmps
outs
pop
push
add
pop
sub
adc
xchg
mov
push
pop
mov
mov
push
dec
gs
cwde
xchg
xor
mov
add
sub
inc
ins
cmp
or
je
sbb
loopne
mov
xor
dec
and
xor
jo
cwde
sub
pop
mov
xchg
and
add
fs
es
adc
xchg
or
xchg
sbb
cwde
and
js
adc
add
pop
sub
ins
mov
and
add
or
and
mov
jecxz
or
push
xlat
rcl
jo
jo
cmp
dec
push
nop
retf
pop
adc
inc
adc
dec
or
adc
ficomp
cmps
and
arpl
xor
daa
cs
adc
call
and
js
sub
sub
dec
gs
sub
daa
mov
and
adc
das
sub
bound
call
adc
add
push
dec
jle
sub
imul
pop
jp
and
mov
lahf
mov
(bad)
mov
pop
rol
je
dec
add
push
jmp
mov
push
les
pop
add
inc
(bad)
push
inc
add
sbb
(bad)
cmp
or
add
and
pop
adc
adc
or
or
push
sub
cli
push
popf
rol
cmp
and
in
dec
leave
and
mov
sub
and
add
sub
fcomp
sub
stos
push
jo
sub
and
and
outs
add
shl
test
sar
js
movs
nop
push
jp
sahf
add
xchg
aaa
bound
ffree
or
(bad)
jo
mov
int3
adc
sbb
pop
sbb
shl
jo
push
mov
inc
or
loopne
add
or
inc
ret
or
mov
inc
fs
imul
cwde
ss
cs
mov
pop
ss
add
xor
cs
push
or
add
push
sub
bound
bound
sbb
test
xchg
adc
xor
xor
add
sub
scas
mov
dec
or
pop
sbb
jne
xchg
sbb
cs
mov
jle
loopne
mov
push
jo
(bad)
and
inc
push
fisubr
inc
call
adc
not
push
or
add
dec
xchg
inc
outs
or
shr
cmps
mov
add
and
jmp
test
shr
adc
mov
callw
add
dec
sbb
push
aam
add
xor
xchg
shl
xor
sahf
movs
cmps
int3
and
xor
mov
xor
dec
sub
jo
xor
cmp
and
sub
pop
push
rol
rcl
outs
inc
or
pop
imul
pop
repnz
jmp
je
je
bound
cmp
and
inc
mov
fdiv
push
pop
jp
sbb
adc
enter
jmpw
aaa
xor
xor
pop
data16
add
xchg
mov
sbb
lock
add
cdq
data16
and
or
frstor
mov
arpl
fadd
dec
add
push
mov
imul
or
dec
rol
enter
jmp
(bad)
and
sub
test
(bad)
pop
inc
ins
lds
mov
sub
test
aaa
inc
call
and
jg
sbb
dec
dec
inc
push
mov
mov
push
sub
imul
dec
push
add
xor
xchg
xor
xor
or
cmp
dec
pop
clc
inc
inc
neg
rol
pushf
cld
cmp
add
leave
sub
fsub
repnz
mov
dec
loopne
or
cli
jp
add
adc
add
sbb
adc
nop
sbb
pusha
pop
cmp
or
pop
push
inc
or
cmp
loopne
dec
dec
xchg
push
cmp
dec
push
xlat
fbld
inc
dec
test
sub
in
and
cwde
hlt
push
adc
xchg
int3
rol
test
or
push
xor
popa
jmp
push
inc
cmp
adc
add
popa
inc
mov
and
inc
ss
loopne
rol
mov
cmp
pusha
adc
pop
iret
leave
add
ins
in
dec
imul
ficomp
adc
mov
push
retf
lds
push
jmp
sub
pop
xchg
retf
mov
rcr
push
pop
adc
xchg
jo
pop
mov
add
mov
sub
dec
(bad)
call
pop
mov
push
sbb
imul
nop
push
pop
pushf
outs
jp
ror
pop
mov
dec
cwde
xchg
pop
pop
xor
or
bound
ds
xor
cmp
dec
mov
and
or
pop
push
cld
pop
dec
loope
out
adc
mov
xor
les
les
ret
(bad)
bound
les
and
or
or
or
aam
cs
adc
adc
xor
adc
out
cmp
or
jl
adc
dec
xor
(bad)
jb
dec
or
sbb
adc
add
imul
jb
add
xchg
mov
xor
inc
dec
push
pop
pop
gs
pusha
sub
add
add
push
xor
jo
popa
add
ret
nop
or
adc
or
pop
and
sub
lock
jmp
add
sub
outs
or
adc
les
dec
mov
mov
data16
retf
int3
sub
push
push
(bad)
sbb
or
inc
mov
shl
arpl
fadd
add
addr16
jp
cmp
mov
pushf
xor
adc
repnz
sub
and
and
cmp
xlat
xchg
add
push
sub
xchg
xor
dec
add
fsub
test
aam
call
arpl
pop
outs
mov
inc
dec
outs
or
add
sbb
mov
push
xor
les
aas
mov
jl
or
mov
aam
jl
inc
bound
scas
mov
xor
es
mov
inc
dec
mov
popf
add
sub
push
push
ins
mov
xor
add
ret
mov
adc
dec
push
inc
aam
add
ds
inc
and
or
sbb
shl
jmp
call
ins
cmp
dec
(bad)
fcom
push
adc
inc
push
or
inc
or
inc
out
add
dec
mov
xor
fs
push
mov
jo
fcom
stos
xchg
pusha
imul
sbb
into
pop
imul
xor
ins
xchg
adc
pop
xlat
pop
add
es
sbb
sbb
test
test
mov
jo
sub
sbb
mov
mov
mov
adc
sub
adc
je
mov
div
add
repnz
push
dec
inc
xor
bound
inc
mov
inc
inc
(bad)
dec
retf
test
pusha
and
ret
je
outs
jl
sbb
xor
and
shl
xor
add
(bad)
xchg
mov
lock
inc
test
mov
adc
pop
sub
rcl
or
movs
and
jl
push
es
and
push
js
je
adc
es
test
xor
in
mov
loope
sub
dec
push
mov
dec
mov
movs
push
fcomp
adc
xor
out
add
cmp
fcmove
bound
ret
ret
xor
add
mov
or
pop
pop
scas
sub
test
push
ret
adc
mov
mov
mov
retf
fisubr
inc
push
inc
push
inc
dec
or
rcl
sbb
push
sbb
dec
adc
jo
push
pop
ret
int3
test
mov
push
ins
ret
fs
ja
add
rol
(bad)
enter
jo
xor
pop
aad
or
push
push
add
test
cli
sub
cmp
bound
and
add
xor
mov
dec
and
sub
dec
fs
in
or
test
in
or
imul
enter
outs
inc
pusha
loopne
jne
or
push
xchg
adc
pop
sub
or
xor
std
add
outs
jae
add
cmp
dec
push
pusha
xor
xchg
xchg
cwde
push
sub
push
cmp
or
int3
movs
adc
shr
xchg
cmp
sub
cmps
test
shl
xor
shr
lock
and
xchg
(bad)
mov
add
(bad)
arpl
sahf
je
out
in
xchg
mov
cmp
pusha
push
sbb
outs
retf
pushf
pop
out
sbb
dec
push
das
dec
in
adc
jmp
aas
dec
loopne
inc
push
or
push
movs
dec
es
and
es
add
ds
xor
(bad)
fdiv
add
ins
sar
inc
sahf
xchg
je
push
or
push
or
sbb
xor
add
xchg
mov
sub
outs
or
aam
mov
fcom
inc
mov
pop
sub
push
test
shr
add
lock
test
dec
ret
mov
xchg
ret
fbstp
sub
xchg
movs
add
push
data16
cmp
cmp
out
xor
mov
push
push
addr16
or
(bad)
sub
jle
in
retf
add
jae
cli
and
jb
test
push
mov
iret
xor
bound
cmp
dec
add
add
inc
mov
fcom
jo
mov
ds
adc
cmp
fisubr
pop
xchg
xor
or
lahf
xor
mov
dec
rol
les
mov
xor
mov
and
add
or
pop
pop
and
inc
pop
mov
adc
rol
and
mov
add
add
daa
or
sub
ror
jp
sub
sub
ret
add
ss
mov
(bad)
and
mov
ds
xchg
add
adc
scas
cmp
mov
xchg
and
adc
popa
cmp
stos
push
add
movs
lock
cmps
(bad)
retf
data16
inc
xchg
ficomp
pop
xor
mov
mov
les
lahf
and
dec
popa
rcr
xor
dec
adc
inc
push
ret
jbe
add
adc
pop
add
pusha
add
cwde
add
sub
and
adc
xor
outs
je
ror
jo
pop
into
sub
mov
pop
xor
sub
push
sub
loop
xor
or
pop
outs
add
adc
dec
dec
dec
sbb
scas
pop
scas
imul
aaa
add
add
sbb
or
push
call
pop
pop
pop
pop
xchg
or
xchg
or
add
sub
xor
test
sbb
ss
cmp
lods
pop
addr16
sbb
lods
imul
inc
sar
rol
or
mov
mov
dec
or
inc
ds
retf
sub
mov
and
fisub
xchg
sbb
mov
push
rcl
popf
push
and
addr16
pop
sub
gs
jne
inc
ret
ins
fild
mov
inc
xlat
les
je
push
pop
scas
bound
mov
add
dec
sbb
int3
(bad)
cmp
adc
and
xor
inc
pusha
pusha
sub
jnp
adc
dec
and
add
sub
cs
sub
mov
daa
adc
pushf
mov
inc
add
out
add
adc
sbb
popa
lods
sar
das
adc
jl
or
lods
push
call
outs
inc
loopne
inc
jb
cmp
jo
sahf
(bad)
xor
jne
out
ins
and
xchg
add
bound
mov
cmp
idiv
ret
inc
mov
sub
jo
xchg
push
or
addr16
repnz
pop
xchg
test
mov
fidivr
sub
inc
or
and
xchg
out
push
cs
stos
outs
dec
dec
jecxz
inc
mov
fcom
add
les
mov
mov
movs
(bad)
mov
jmp
push
pop
sbb
sbb
jbe
rol
and
add
mov
ds
inc
imul
add
cli
add
fst
push
or
es
jno
lock
je
ins
sbb
cli
cmp
dec
cmp
xchg
loop
inc
and
mov
je
xor
ror
ss
sub
xchg
or
cs
mov
pop
ret
arpl
jnp
ss
mov
scas
or
pop
jb
es
aam
push
mov
push
xor
add
fadd
push
and
add
sbb
and
inc
mov
loop
pop
mov
sahf
out
mov
jnp
push
or
cmp
inc
xchg
pop
test
movs
aam
or
adc
stos
pop
dec
jo
or
and
loop
pop
call
push
jp
or
inc
jg
jge
dec
add
adc
jo
dec
add
jmp
xchg
sbb
push
aam
mov
mov
jp
dec
stos
es
cmp
push
xchg
pusha
fmul
mov
dec
push
or
sub
xor
push
cwde
xchg
test
cmp
push
mov
fdiv
ret
or
push
es
cmp
jno
xor
and
and
add
enter
and
push
adc
pop
sub
inc
add
jno
ret
xchg
push
mov
add
push
jbe
add
shl
jo
dec
push
inc
cmps
call
push
lock
adc
les
je
imul
cld
adc
and
pusha
mov
dec
push
cs
xchg
outs
scas
ret
inc
add
xchg
leave
xchg
push
(bad)
or
sbb
(bad)
cmp
dec
add
push
nop
jno
(bad)
mov
and
push
and
dec
sbb
xor
push
loopne
loopne
dec
adc
lock
dec
aas
in
inc
push
inc
inc
dec
ret
jb
sbb
or
and
fdiv
jno
test
bound
add
push
rcr
jp
int3
mov
shr
jo
dec
sub
inc
push
ja
arpl
sahf
retf
mov
inc
sub
pop
(bad)
adc
pop
ror
or
add
mov
add
pop
retf
xchg
mov
pop
add
inc
and
add
rcl
xor
pop
pop
jne
xchg
dec
es
cs
and
dec
sbb
ret
or
pusha
inc
add
push
arpl
mov
scas
xor
adc
jb
repnz
adc
sub
data16
jo
pop
jle
xchg
mov
inc
inc
cdq
push
ds
pop
or
push
aas
inc
dec
mov
mov
outs
(bad)
and
inc
xor
mov
xor
js
or
sbb
enter
push
mov
cmp
add
sahf
pop
nop
xchg
outs
pop
add
xchg
scas
push
cmp
push
test
cmp
out
add
and
add
or
inc
gs
fiadd
fisub
and
push
xor
mov
adc
dec
xchg
fs
add
and
loopne
add
or
or
add
push
mov
rcl
adc
clc
add
mov
inc
mov
or
adc
outs
push
push
xor
mov
es
shr
ret
or
and
mov
xchg
push
mov
and
je
push
push
dec
xchg
cwde
push
dec
push
and
mov
add
xor
dec
push
push
and
add
inc
push
mov
es
pop
push
das
and
cmp
stos
pop
fst
adc
inc
dec
dec
push
sub
or
pop
cmps
bound
add
lods
ss
jmp
imul
adc
ror
sbb
jge
adc
pop
daa
xor
push
add
jecxz
or
jo
arpl
add
or
dec
xchg
cmp
mov
add
push
les
sbb
sub
in
nop
push
pop
mov
(bad)
loopne
pusha
sub
push
dec
dec
inc
pusha
je
push
cmp
sbb
pop
inc
push
retf
test
adc
xor
pushf
js
xor
jo
sub
add
add
cwde
sub
xchg
repnz
jmp
jbe
rcl
popa
pop
lods
stos
jne
adc
test
inc
xor
pop
jmp
and
mov
add
or
push
bound
cmp
mov
sub
pusha
adc
add
imul
xchg
int3
push
pusha
xor
push
sbb
mov
int3
bound
sub
daa
sbb
cmp
inc
dec
bound
retf
or
sub
inc
sahf
cs
dec
inc
imul
xor
and
je
lea
jo
inc
ds
adc
and
dec
add
mov
add
or
pop
dec
push
add
retf
sub
cmp
add
stos
cli
jge
adc
add
pop
loopne
sahf
je
and
xor
sub
push
inc
push
mov
sbb
imul
test
or
push
or
je
addr16
push
add
pop
sub
and
or
push
push
in
mov
or
sbb
test
jo
cwde
aam
add
rcl
xor
xor
jecxz
js
sub
dec
adc
cwde
pop
pop
push
adc
sbb
es
inc
ret
adc
inc
inc
adc
jne
popa
sbb
or
inc
or
sub
ins
push
adc
(bad)
leave
xchg
xchg
sbb
inc
push
cmp
jp
pop
jbe
jmp
(bad)
out
jb
arpl
xor
adc
popa
add
dec
push
cmp
aaa
push
push
sbb
add
fcom
add
or
sahf
imul
inc
test
and
and
or
inc
push
test
arpl
jns
gs
add
mov
add
sub
cmp
jb
mov
pushf
or
hlt
js
dec
push
push
inc
cmp
add
data16
add
test
xchg
add
xchg
jo
fadd
sbb
les
mov
inc
mov
pushf
inc
dec
shr
xchg
add
or
inc
das
(bad)
arpl
outs
pop
pop
fdivr
rol
dec
pusha
or
push
bound
mov
or
out
add
adc
mov
add
and
pop
loopne
test
add
dec
outs
and
push
mov
jl
pop
push
add
int
mov
inc
and
add
test
and
adc
add
ficom
sub
ret
sub
sbb
xchg
adc
mov
dec
inc
inc
dec
sbb
les
rol
ins
xor
xor
mov
jb
loop
push
mov
pusha
xor
cmps
cmp
fs
xchg
cli
inc
shl
cmp
dec
pop
add
lods
les
xor
adc
inc
push
lods
sub
movs
lock
pushf
adc
add
ret
adc
xchg
dec
(bad)
sub
shl
cmp
sbb
xor
cli
push
out
rcl
pop
or
inc
jecxz
jbe
add
jp
dec
dec
and
push
into
adc
dec
loopne
xor
es
ss
(bad)
out
or
add
inc
or
loop
js
inc
ins
jne
aam
shr
pop
sub
mov
adc
and
sbb
xor
or
add
mov
sbb
mov
and
jmp
sbb
inc
or
dec
adc
inc
outs
les
cld
and
inc
pop
jo
add
repnz
lea
ss
or
cmp
add
movs
adc
xor
or
jo
aaa
inc
xor
fcomp
jne
and
jo
sbb
loope
add
sub
dec
inc
fs
add
ins
mov
mov
add
and
mov
inc
push
ret
sahf
dec
inc
inc
adc
sbb
call
adc
sbb
shl
adc
add
aam
lock
and
sub
out
sbb
xor
int3
push
dec
sbb
popa
push
add
aad
sub
inc
inc
js
pop
mov
daa
add
inc
dec
sub
add
xchg
scas
push
add
clc
and
xchg
and
xchg
mov
mov
pushf
or
and
ret
cmp
cmp
xchg
push
xor
sbb
into
cmps
mov
stos
bound
xor
xor
mov
xchg
add
out
xchg
or
add
data16
mov
cmp
cmps
push
or
es
sub
js
leave
add
add
sbb
pusha
pop
jnp
sub
outs
push
cmp
push
sub
push
or
in
push
sbb
sbb
dec
test
rcl
dec
lea
mov
xor
aaa
adc
popa
jo
and
jo
dec
(bad)
xchg
push
mov
aas
inc
js
ds
inc
addr16
popa
mov
nop
dec
adc
lods
and
retf
inc
pop
pop
add
mov
cmps
jl
shl
test
sub
inc
fist
enter
adc
je
imul
inc
dec
push
bound
cs
sub
xor
xchg
push
cmp
adc
sub
add
adc
cmp
ret
call
ret
(bad)
cmp
sub
xor
gs
sbb
xor
sub
add
test
add
dec
add
pop
adc
or
cmp
xor
mov
xchg
ins
dec
add
loop
shr
in
aaa
cmp
jnp
jg
rcr
jbe
push
xchg
add
mov
add
push
sub
movs
fsubr
adc
jmp
outs
add
push
mov
inc
(bad)
les
sbb
dec
in
pop
add
adc
pop
inc
adc
pop
addr16
jp
or
push
pushf
or
and
push
cs
shl
popa
adc
and
inc
dec
dec
and
ss
pop
dec
sbb
repnz
push
push
adc
je
sub
sbb
or
mov
and
cmp
push
test
or
or
pop
push
(bad)
dec
xor
push
repnz
cmp
push
mov
pop
push
fs
pusha
ret
dec
clc
test
inc
call
push
fcomip
xchg
loope
xchg
repnz
add
xchg
sub
push
jmp
mov
inc
outs
or
cdq
add
arpl
fstp
pusha
sub
mov
adc
and
adc
and
sbb
inc
pop
pop
pop
movs
test
pop
dec
xor
xor
in
cdq
add
enter
push
push
mov
jg
dec
pusha
dec
adc
sbb
add
add
or
test
inc
pop
in
(bad)
dec
push
fs
inc
add
das
push
adc
scas
test
add
add
add
inc
outs
and
inc
in
cmove
add
push
add
cs
adc
fsub
sbb
add
outs
jg
cmove
inc
mov
das
test
jg
push
inc
add
add
aaa
add
fcom
adc
jne
push
or
pusha
fwait
add
jmp
retf
rcr
popa
inc
movs
push
cwde
gs
add
jbe
call
xor
inc
aaa
or
adc
inc
loop
fcom
retf
aam
data16
ins
je
mov
aaa
or
add
sub
imul
fist
or
push
inc
das
jo
inc
pop
xor
mov
je
add
add
push
rol
mov
and
pop
setb
push
dec
les
xor
or
imul
mov
mov
add
push
push
inc
inc
dec
dec
mov
nop
leave
xor
fcomp
(bad)
add
and
fbld
inc
and
jp
jnp
add
gs
and
cmp
scas
push
xor
dec
sub
mov
jmp
std
dec
add
cmp
pop
aam
add
push
je
adc
int3
jnp
push
push
pop
and
sub
shr
mov
xchg
pusha
test
mov
adc
dec
pop
aam
das
xor
pop
push
dec
imul
loopne
cmp
or
add
rcr
or
dec
imul
cmp
xchg
dec
push
push
inc
(bad)
xchg
push
inc
jmp
out
(bad)
or
pop
adc
inc
(bad)
mov
or
mov
cs
xchg
inc
adc
dec
push
dec
or
pop
adc
push
sbb
inc
add
je
or
ins
dec
nop
xchg
xor
in
adc
xchg
mov
xor
sub
and
mov
inc
dec
ror
dec
sub
push
fwait
shr
outs
push
and
mov
inc
dec
cs
mov
or
sub
rol
inc
adc
or
sub
sub
clc
and
add
fisubr
pop
jmp
mov
jge
ficomp
mov
pusha
cmc
adc
cmp
xor
and
(bad)
rcr
xchg
add
adc
outs
add
add
lods
jo
add
add
or
mov
adc
mov
(bad)
fldl2e
pushf
bound
inc
dec
xchg
or
push
test
fs
add
(bad)
in
pop
and
add
les
movs
mov
mov
inc
inc
cwde
dec
mov
or
loopne
xor
cdq
inc
push
jo
inc
pop
sbb
and
adc
(bad)
(bad)
in
dec
or
or
pop
and
pop
adc
popa
jbe
xor
cmp
fist
rol
xchg
xchg
cmp
in
push
pop
mov
or
inc
inc
daa
inc
pop
dec
jns
rol
mov
movs
add
xchg
add
or
call
jo
dec
and
sub
xchg
or
(bad)
pop
sbb
lock
xchg
jl
xor
lock
pop
or
pop
in
call
(bad)
in
xlat
test
fadd
adc
mov
push
sub
fsubr
mov
dec
mov
fs
test
call
pop
and
add
ret
dec
dec
add
and
(bad)
add
or
sahf
xor
mov
xchg
push
retf
mov
pop
inc
mov
pusha
dec
pop
push
inc
pop
and
dec
dec
movs
push
sub
xor
xor
movs
movs
push
mov
bound
inc
jo
enter
add
sahf
es
add
push
sub
add
and
inc
jo
pop
adc
stos
ret
lods
inc
jnp
adc
es
cmp
or
mov
jp
cmp
mov
jge
push
add
or
test
xchg
fdivr
out
and
sbb
pop
add
add
ret
adc
xchg
sbb
add
xchg
or
inc
or
pop
inc
xchg
xchg
add
clc
test
popa
scas
sub
fs
inc
mov
xchg
movs
lods
adc
push
nop
nop
cdq
cmp
sbb
adc
les
pop
add
mov
pusha
xchg
pop
jo
push
into
wbinvd
clc
xchg
dec
jae
adc
jo
xor
push
fiadd
add
shl
nop
mov
shl
cmc
xor
loop
and
or
mov
cmps
inc
inc
adc
push
jo
jo
push
sub
fdivr
and
jno
iret
push
shl
xchg
nop
sar
xchg
adc
xchg
jle
movs
pushf
xchg
rol
loopne
mov
inc
test
and
fadd
or
mov
push
sbb
je
add
add
push
xor
retf
add
sbb
pop
xchg
xor
push
fs
add
or
adc
jo
pop
cmp
xchg
test
retf
(bad)
push
dec
inc
sbb
push
mov
add
xchg
cld
push
or
and
ss
dec
inc
mov
adc
xchg
jge
and
add
pop
sbb
push
mov
cmp
adc
add
shr
cmp
test
add
sub
jb
or
scas
sbb
pop
push
or
movs
pop
je
adc
add
rol
add
or
stos
sbb
push
mov
and
add
repnz
rol
ret
stos
push
adc
dec
inc
shl
push
scas
out
xchg
pop
adc
mov
add
or
je
dec
ret
inc
enter
rcl
push
pop
sub
sub
rol
pop
in
imul
mov
add
add
dec
xchg
add
popa
inc
lods
push
mov
mov
inc
dec
les
rol
cmps
mov
cld
mov
xchg
xchg
imul
pcmpeqb
test
pop
out
push
mov
les
pop
or
pop
push
push
push
or
test
xor
leave
dec
mov
shl
pop
or
sub
push
pop
and
and
daa
mov
add
dec
in
add
add
inc
jcxz
cmp
inc
xchg
sbb
repnz
or
and
add
push
push
dec
lods
adc
pop
imul
scas
and
xor
movs
add
call
fidiv
pop
jo
lahf
pop
out
add
push
pop
sbb
add
mov
sub
xor
inc
or
pop
mov
inc
popa
cmp
call
fisub
aam
inc
or
and
cmp
cmp
cmps
add
add
or
sub
lds
ficom
jo
jb
or
leave
dec
pop
fs
sub
xchg
add
je
cmp
aas
xchg
(bad)
test
mov
push
push
cmp
adc
jb
mov
neg
(bad)
out
pop
push
call
sbb
or
or
aas
dec
push
mov
cs
nop
in
xor
pop
pop
aaa
and
and
push
aaa
not
retf
rcr
xor
stos
test
add
test
out
adc
mov
add
adc
and
sub
ds
xor
loop
dec
adc
push
or
js
rcl
xchg
dec
fdiv
xchg
ret
pop
je
xor
pop
pop
fild
add
adc
rcr
jbe
cmp
cmp
or
daa
pop
and
sbb
int3
xor
inc
jp
sub
adc
mov
dec
lock
cs
inc
scas
ins
add
test
and
cs
lods
and
jle
inc
dec
cmp
jbe
scas
ss
add
pusha
and
pop
add
add
push
and
add
pop
adc
and
movs
or
inc
add
adc
rol
xchg
xor
hlt
or
add
fsubr
fiadd
pusha
movs
sbb
outs
push
add
add
or
push
ds
cmp
add
lahf
int3
xor
inc
inc
aam
or
test
push
ja
adc
ins
xor
xchg
add
mov
nop
add
add
push
and
and
xchg
outs
in
add
loop
inc
dec
ror
inc
nop
inc
adc
movs
and
push
cmp
adc
adc
or
cwde
push
xor
mov
shl
fs
or
jo
cmp
retf
sub
add
scas
es
rol
sbb
sbb
pop
gs
ret
call
js
xor
push
test
test
and
adc
scas
add
pop
xor
mov
imul
pop
pop
shl
test
add
test
aam
shl
add
or
sbb
pop
and
jl
or
pop
mov
sbb
push
xchg
jbe
or
or
push
loopne
shr
cmp
push
pop
xchg
aam
push
call
push
mov
xor
mov
cmp
ins
jne
bound
add
ret
sbb
cmp
sub
popf
or
sub
out
imul
and
cmp
xor
pushf
add
in
cmp
push
xchg
pop
repnz
scas
rol
mov
push
not
add
inc
xor
push
sub
pop
xchg
push
xor
add
ds
inc
sbb
into
adc
push
xchg
fsub
and
mov
and
retf
mov
dec
into
pop
enter
xchg
add
mov
(bad)
ficom
or
pop
outs
hlt
loopne
and
sub
jb
and
ror
fsub
adc
add
inc
cmp
in
pop
dec
adc
inc
dec
xor
adc
cli
out
test
cmp
inc
dec
push
and
mov
(bad)
loopne
dec
test
jns
popa
and
enter
push
dec
ins
add
mov
add
mov
add
push
add
add
mov
(bad)
ins
or
bound
leave
sbb
mov
imul
mov
add
test
pop
mov
jae
aaa
add
adc
sbb
or
fs
and
fadd
add
pusha
add
aam
daa
or
sbb
xor
add
fadd
or
sub
add
je
es
or
loopne
mov
es
daa
xor
retf
enter
movs
sub
lahf
xchg
sbb
pop
cmps
sahf
mov
xor
stos
mov
lods
mov
xor
stos
mov
sub
lahf
mov
add
jnp
jo
push
loopne
ds
fiadd
in
mov
push
inc
inc
or
(bad)
movs
xchg
or
adc
pusha
dec
lds
add
jp
sub
outs
daa
test
pusha
dec
bound
xor
(bad)
pop
mov
imul
and
jo
mov
and
add
mov
outs
and
movhps
sbb
or
add
add
add
and
adc
jl
xchg
push
dec
js
xchg
add
inc
js
lods
fsub
sub
add
xor
aas
dec
sub
sub
sub
mov
add
enter
leave
cwde
loop
jbe
push
call
sub
mov
dec
rcl
sbb
lea
aam
or
js
mov
sub
and
cmp
cmps
in
adc
data16
daa
add
ins
mov
and
cs
retf
rcr
shl
inc
inc
je
adc
dec
jne
rcl
(bad)
aas
inc
inc
inc
dec
pusha
jno
ds
ret
(bad)
pop
pusha
movs
pusha
xor
xchg
stos
repnz
adc
into
shl
ss
xor
test
rol
add
add
add
xchg
xor
cmps
and
or
or
jle
imul
mov
jno
das
sbb
dec
xor
cli
xor
adc
or
fcom
shl
sahf
ret
test
neg
push
test
pop
add
ins
call
sub
or
(bad)
or
jnp
add
and
add
add
and
xor
add
sub
js
dec
mov
dec
push
and
and
push
mov
mov
shl
and
shr
or
dec
jo
fs
idiv
pop
push
pop
xchg
add
add
pop
push
popa
iret
xor
push
dec
scas
mov
outs
push
jbe
xor
xor
retf
jne
and
add
xor
inc
jge
mov
xor
movs
inc
inc
jmp
imul
lods
ds
and
adc
cs
dec
arpl
add
(bad)
and
scas
xor
mov
imul
loopne
adc
or
push
pop
and
inc
and
mov
add
arpl
inc
adc
adc
or
(bad)
xor
push
push
or
jg
add
retf
aam
mov
push
retf
adc
inc
inc
cmp
push
dec
nop
nop
ret
cld
adc
test
push
mov
adc
ds
ret
js
pop
data16
xchg
push
scas
fild
aaa
cmp
div
add
dec
and
adc
and
ss
sbb
push
iret
mov
cli
xor
loope
mov
enter
loop
and
pop
cs
dec
out
dec
adc
out
push
inc
or
or
mov
adc
pop
cs
sub
sub
rol
sub
ret
push
mov
and
jmp
mov
sub
movs
add
jne
rol
inc
add
inc
ret
mov
sbb
pusha
pop
mov
cli
scas
push
out
test
pop
loopne
sbb
pop
and
popa
gs
and
xor
call
inc
mov
or
sub
inc
aam
add
add
fsubr
add
ins
and
and
mov
push
shr
mov
push
inc
xor
loope
inc
jnp
xor
pop
mov
ja
add
inc
pop
mov
jb
add
cmp
add
add
je
xchg
sub
les
cmp
xchg
mov
and
nop
gs
mov
or
fs
mov
mov
fs
or
push
es
jmp
sbb
add
add
xchg
push
dec
add
or
xor
add
add
scas
jl
jo
loope
dec
cdq
push
adc
mov
mov
cmp
dec
test
add
xchg
test
movs
add
mov
xor
cmp
xchg
or
pop
push
add
inc
aaa
add
daa
and
xor
or
fdivr
push
xor
test
mov
xchg
xor
push
test
loope
pusha
out
adc
xor
adc
pop
dec
push
mov
push
inc
xchg
xor
cli
and
adc
inc
xchg
test
push
push
sbb
adc
ficomp
xchg
test
movs
adc
pop
or
mov
or
push
xchg
arpl
push
dec
les
les
xchg
fild
sub
push
loope
add
in
xor
sub
add
retf
(bad)
or
cwde
add
sbb
adc
xor
dec
(bad)
(bad)
rol
bound
push
adc
sbb
jbe
jo
push
js
mov
xor
inc
or
addr16
nop
in
mov
cli
mov
gs
jbe
push
push
lods
je
test
clc
push
push
add
xchg
add
lods
xchg
mov
inc
sbb
push
adc
int3
adc
fdiv
cmp
enter
loopne
adc
adc
inc
dec
mov
or
sub
stos
imul
inc
jns
outs
jnp
daa
test
outs
mov
push
add
or
sbb
adc
jo
fdivr
jmp
push
xor
pop
xor
or
and
(bad)
lock
sahf
sub
mov
daa
xor
sahf
rcl
shl
xchg
xor
xchg
scas
lods
inc
and
and
jmp
and
nop
ret
or
dec
xor
adc
outs
js
push
xchg
push
xchg
cld
pop
xor
lock
push
sbb
lods
xor
xor
icebp
inc
test
inc
dec
mov
outs
dec
and
inc
pusha
xchg
aam
mov
mov
es
mov
mul
in
add
outs
push
jmp
out
inc
mov
add
push
pop
push
add
xchg
adc
rcl
dec
inc
cwde
or
jne
aas
arpl
jl
loopne
or
cdq
adc
and
push
push
sbb
dec
jb
mov
adc
mov
nop
pop
shl
out
ss
inc
es
popa
test
dec
outs
cmp
add
inc
sub
js
sbb
pop
out
dec
imul
pop
repnz
dec
add
leave
inc
mov
shl
cmp
xchg
call
xchg
je
push
mov
xchg
sub
jo
xor
or
mov
add
aas
add
mov
or
dec
push
push
(bad)
aas
neg
in
mov
adc
add
test
add
lahf
inc
sbb
sbb
or
test
idiv
or
pop
sub
fdivrp
retf
inc
scas
push
and
jo
fwait
jle
pop
mov
mov
inc
cmps
call
das
cmps
mul
pop
pop
adc
add
mov
or
rol
push
jmp
or
inc
add
add
or
add
imul
dec
popa
push
sub
je
lock
or
push
dec
and
push
push
mov
jbe
and
dec
mov
addr16
rcl
aam
cmp
push
xor
mov
cmps
adc
ret
popa
fs
imul
inc
(bad)
inc
add
pop
pop
repnz
push
fldcw
cli
das
out
sub
or
inc
or
es
dec
ss
mov
xchg
push
pop
clc
loop
adc
sbb
or
fistp
sbb
adc
mov
mov
add
loop
mov
adc
cmps
add
test
test
pop
arpl
inc
jmp
mov
sbb
pop
pop
push
dec
and
fdiv
adc
add
adc
adc
and
cld
push
dec
inc
sbb
js
add
jne
adc
and
jne
mov
test
adc
xor
scas
pop
mov
inc
and
inc
ficom
jne
sbb
out
add
xchg
cmp
stos
movs
pop
xchg
dec
fs
sbb
push
fisubr
dec
push
mov
shl
inc
xor
mov
cmp
repnz
add
repnz
ins
jnp
adc
jmp
cmpxchg
inc
jo
inc
out
mov
dec
inc
imul
es
and
mov
jg
call
adc
int3
xor
mov
add
mov
or
xchg
push
cmp
inc
or
loop
or
add
mov
adc
js
inc
adc
pop
inc
mov
add
jo
and
movs
mov
push
and
aam
and
es
scas
add
and
dec
dec
push
cmps
inc
fld
nop
loop
sbb
add
xchg
mov
jp
push
add
add
sub
inc
rol
sbb
sub
out
pop
icebp
inc
cdq
lock
cmps
or
call
dec
pop
pop
test
mov
lods
es
inc
push
xchg
jae
or
xor
mov
cs
mov
xor
mov
(bad)
into
or
add
sub
data16
dec
and
fistp
mov
push
pop
test
push
adc
mov
gs
jb
ja
or
adc
xchg
xchg
jmp
add
push
cs
data16
pop
outs
adc
or
jp
in
(bad)
sbb
push
cs
add
adc
push
pop
dec
dec
add
push
lods
add
call
add
or
aaa
inc
xlat
push
and
cs
mov
aas
and
push
dec
or
lods
add
jp
xlat
add
retf
and
xchg
ficom
and
movs
(bad)
mov
push
xchg
dec
dec
outs
add
mov
imul
scas
enter
push
cli
mov
push
add
inc
push
fidiv
add
mov
xchg
mov
push
pop
xor
mov
mov
and
sub
add
data16
shr
in
adc
sub
adc
inc
es
sub
or
sbb
adc
xchg
shl
mov
retf
sbb
xchg
xor
dec
outs
fbld
or
adc
pop
and
add
push
ret
test
sub
cmp
add
add
sub
add
push
xchg
mov
or
and
adc
push
icebp
inc
call
outs
or
pop
ja
xor
ds
inc
inc
mov
and
sub
jbe
jmp
inc
sub
add
leave
loopne
sbb
bound
mov
and
pop
pop
inc
or
div
data16
and
mov
or
inc
in
pop
add
or
mov
inc
xor
nop
adc
add
add
add
inc
adc
lods
nop
or
push
pop
add
adc
cmp
mov
mov
js
add
sbb
mov
and
nop
dec
and
adc
or
fwait
sbb
dec
or
push
or
and
lods
inc
pop
sbb
add
and
cmp
sub
imul
push
mov
sub
and
mov
xchg
jb
and
and
pop
adc
push
push
add
xor
rol
pop
jge
xchg
sub
lods
ret
push
adc
inc
mov
outs
jbe
mov
dec
cmp
pop
cs
pop
add
inc
mov
push
jbe
inc
xchg
add
push
aam
dec
mov
mov
fadd
loopne
or
sub
retf
and
sub
mov
sbb
mov
mov
mov
inc
shl
xchg
add
sub
test
inc
dec
ficom
add
pop
xacquire
push
sbb
sbb
rcl
ret
cs
inc
mov
dec
pop
imul
movs
dec
dec
sbb
adc
add
cmp
jmp
pop
cmps
loopne
jecxz
mov
push
imul
sub
push
xchg
pop
dec
sub
push
loopne
jno
loope
dec
adc
mov
xchg
add
and
and
aas
loopne
add
enter
mov
xchg
fwait
outs
movs
mov
sub
sahf
cmp
push
add
daa
lods
daa
in
rol
add
fidiv
push
jmp
daa
sub
mov
jmp
push
push
loopne
ror
call
push
lods
mov
pop
xchg
ret
add
adc
es
and
pusha
adc
inc
dec
pop
imul
sub
inc
pop
mov
pop
out
call
sub
test
out
mov
and
aam
outs
mov
add
test
daa
jecxz
dec
inc
adc
movs
mov
push
adc
inc
in
push
int
jo
cmp
or
pop
sbb
sbb
fsub
adc
inc
arpl
or
pop
jb
lock
inc
adc
xchg
rcr
sub
(bad)
jno
add
ret
ror
dec
and
sbb
or
pop
ins
retf
enter
add
xor
push
dec
mov
and
push
xor
mov
add
sahf
pop
adc
jo
dec
add
add
fiadd
test
or
add
mov
add
mov
lods
pop
(bad)
imul
je
push
pop
inc
cmps
pop
inc
add
scas
xor
jo
loopne
addr16
(bad)
push
push
xchg
dec
cmp
xor
mov
xchg
rol
push
cmp
retf
and
ins
inc
jle
adc
shr
cmp
mov
lods
mov
and
in
pop
add
sub
inc
xor
push
and
adc
popa
mov
pop
loop
pop
cmps
aam
sbb
lock
sub
mov
add
and
push
data16
push
or
jmp
mov
jb
imul
pop
add
add
xor
sbb
clc
mov
pop
gs
mov
push
pop
cwde
ror
jb
inc
inc
sbb
mov
push
inc
test
iret
sub
mov
xchg
sub
cmp
sub
(bad)
out
adc
adc
adc
pop
aam
scas
inc
out
mov
and
cmp
out
pop
js
wbinvd
jge
jnp
xchg
xor
je
jo
add
fldcw
jb
outs
je
push
adc
xor
fwait
inc
jb
and
pop
lahf
push
je
je
xadd
sub
add
adc
jb
and
jp
arpl
imul
adc
int3
add
mov
data16
imul
push
jne
rol
jl
test
outs
(bad)
jge
sub
inc
retf
push
inc
jbe
test
scas
outs
jae
punpcklbw
add
loopne
inc
test
ins
gs
push
stc
sbb
fwait
inc
sub
nop
jb
imul
and
sbb
das
jo
jmp
popa
das
mov
mov
jmp
divps
outs
pop
xor
outs
or
adc
or
jbe
jmp
or
jae
pop
out
loop
pop
adc
ins
pop
jne
sbb
lods
test
add
push
add
jne
cs
sub
(bad)
cmp
inc
push
xor
xor
mov
mov
mov
mov
icebp
xcrypt-cfb
cmps
gs
loopne
test
ins
mov
lds
jnp
je
cmova
outs
(bad)
into
push
lods
bound
gs
inc
outs
pop
fs
cmps
jo
dec
arpl
into
jp
adc
mov
gs
xor
dec
or
push
cmp
les
aam
lahf
movs
mov
cmp
mov
add
add
adc
repnz
mov
and
inc
test
xor
bound
pop
push
ins
jnp
fisttp
and
xchg
loop
rcr
mov
xor
add
das
xlat
or
or
data16
inc
sub
or
leave
dec
ret
ins
xchg
popa
push
(bad)
das
mov
pop
out
ret
xchg
ja
imul
pusha
adc
call
outs
pop
rcl
add
adc
shl
je
mov
add
inc
call
add
and
test
add
aaa
add
add
test
or
add
fs
and
loopne
add
cmc
xor
pop
sahf
lock
fs
mov
and
push
pop
loope
push
ss
dec
sbb
xchg
cwde
pop
dec
add
adc
dec
inc
aaa
add
jne
inc
add
sub
jg
push
add
gs
push
xor
mov
cmp
or
adc
sub
lds
sub
lahf
sub
adc
lods
(bad)
jp
pop
push
push
loopne
gs
add
mov
inc
rol
add
mov
inc
int3
pop
push
imul
js
dec
scas
mov
or
icebp
sbb
mov
js
cmp
daa
cs
or
and
push
push
dec
add
pop
js
test
ins
fnsave
sahf
inc
out
add
add
inc
mov
pop
inc
inc
pop
pop
gs
mov
adc
or
add
(bad)
jne
outs
add
cmp
aaa
lea
add
fistp
pop
or
aaa
jns
xor
(bad)
jmp
dec
inc
and
aaa
dec
inc
dec
push
jo
aaa
and
push
xor
xor
xor
xor
sub
outs
jg
aas
push
xor
pop
push
xor
data16
jp
addr16
imul
adc
xchg
cmp
add
sub
pop
inc
jg
push
call
add
and
addr16
dec
call
dec
push
push
mov
push
aaa
inc
dec
inc
add
inc
adc
pop
and
call
mov
aas
repz
sbb
or
(bad)
mov
mov
in
cwde
bound
mov
cs
and
pop
add
fs
jmp
pop
repz
inc
int
cmp
lods
push
test
jmp
inc
mov
popa
jb
call
call
or
jno
pop
jae
bound
pop
dec
push
je
inc
jne
je
(bad)
pop
inc
jae
adc
inc
fbstp
sub
inc
adc
std
ins
push
inc
loope
jmp
adc
push
rol
sbb
and
sub
xchg
iret
inc
mov
push
adc
cmp
add
cmp
or
ins
loope
push
xor
add
aas
or
dec
sbb
add
inc
mov
push
outs
int3
push
je
adc
inc
(bad)
push
bound
sub
jns
jo
pop
push
jae
popa
outs
and
outs
sub
fild
and
fs
popa
cdq
dec
outs
and
xchg
and
mov
jle
or
pop
pop
jae
or
push
call
xor
data16
xor
popaw
(bad)
dec
add
xor
xor
cmp
xor
mov
sub
popa
arpl
bound
fs
mov
arpl
add
push
xchg
(bad)
adc
jo
and
mov
dec
(bad)
pop
and
and
or
aas
and
or
and
fs
jae
rcl
sub
jae
arpl
dec
fisttp
test
jno
data16
pop
and
xor
add
cmp
jge
jge
xchg
in
fcmove
(bad)
daa
and
dec
fist
cmp
or
pop
sbb
add
push
pop
sbb
pop
inc
test
ins
inc
sar
mov
mov
das
push
sub
in
scas
es
div
and
outs
adc
xlat
and
dec
sbb
inc
daa
cmp
shl
je
js
jne
arpl
popa
ins
and
sub
mov
xor
outs
push
jae
jo
or
in
popa
je
fistp
push
(bad)
fnstcw
sub
inc
movs
push
pop
mov
xor
inc
jp
sub
out
dec
inc
in
xchg
and
mov
adc
adc
inc
cmp
jae
or
dec
lahf
lea
ins
xchg
fisubr
add
rol
sub
and
jae
aaa
xor
xchg
push
sub
mov
sub
popa
or
add
ret
fild
or
jae
sub
ins
inc
pop
fcmovnbe
push
and
mov
or
out
ins
das
(bad)
jg
rcl
inc
adc
jae
icebp
xchg
or
ja
inc
push
pusha
mov
ins
sbb
(bad)
jo
je
int3
sub
pop
mov
sbb
dec
xor
jo
adc
inc
fsubr
pop
(bad)
clc
scas
cwde
adc
add
add
inc
push
bound
ins
movs
je
dec
push
test
sub
mov
rcl
and
inc
and
inc
sti
push
lock
xchg
dec
push
pop
pop
add
ret
push
aam
xchg
push
fcmovnb
imul
add
ja
add
add
mov
mov
(bad)
ret
lock
add
push
jg
sbb
pop
jg
movs
push
loopne
push
add
add
add
inc
sub
pop
inc
cs
add
popf
add
inc
inc
js
fsub
test
jbe
jno
scas
ds
gs
fs
jl
and
jns
or
or
xchg
mov
jmp
xchg
(bad)
push
je
imul
fcomp
push
sub
xchg
lods
mov
or
dec
ins
ret
inc
call
arpl
push
add
push
inc
mov
mov
add
addr16
xor
das
inc
ja
push
push
inc
stc
pop
cmc
mov
adc
push
add
dec
inc
and
nop
pop
mov
mov
push
outs
xor
add
ins
test
out
pusha
imul
fdiv
pop
push
xor
and
pop
bound
xor
cmps
adc
sbb
and
scas
add
dec
inc
inc
dec
sub
xchg
xchg
add
mov
ds
inc
add
sti
xor
cs
out
(bad)
adc
sub
pop
cld
out
sbb
xchg
inc
jg
inc
pop
pop
dec
inc
dec
dec
pop
dec
add
fild
inc
inc
inc
pop
push
push
dec
inc
adc
dec
cld
vxorps
pop
inc
dec
inc
xchg
lods
push
adc
std
cmp
push
arpl
data16
(bad)
mov
imul
add
cmp
jmp
imul
mov
adc
add
test
push
dec
jae
imul
xor
fs
popa
inc
ror
or
arpl
aaa
mov
cld
aaa
outs
in
gs
sub
push
rcr
push
adc
mov
dec
push
cmp
daa
push
add
cmp
repz
pop
nop
dec
and
jg
repz
sti
fcos
add
add
nop
clc
repz
aas
inc
jmp
jne
jp
test
je
xor
xor
js
mov
jb
call
sub
xor
push
outs
or
shl
loope
push
pop
je
test
mov
sti
sbb
push
pop
jmp
jo
xor
sbb
sub
rcl
ins
(bad)
or
pusha
mov
mov
inc
jo
xor
fild
das
pop
nop/reserved
nop
sahf
out
jbe
mov
(bad)
ror
fucomi
jbe
adc
push
pop
(bad)
mov
js
add
cmp
unpcklps
outs
mov
sub
je
xor
enter
in
jbe
das
fs
aas
test
mov
test
inc
aas
call
mov
pop
nop
cwde
(bad)
push
das
jbe
in
jbe
(bad)
aas
fdivr
pop
das
outs
mov
in
ins
cvttps2pi
mov
jbe
fisttp
aas
clc
inc
das
push
pcmpeqd
mov
and
jb
in
jbe
in
xor
dec
das
bound
dec
outs
mov
and
movs
pop
add
add
mov
pop
das
pop
bndldx
fucomi
jbe
xchg
inc
jp
cmp
mov
in
adc
adc
push
sub
mov
fist
ins
pop
aas
mov
dec
aas
hlt
sar
das
push
movhps
outs
fucomi
(bad)
pusha
push
das
jbe
ss
fucomi
or
comiss
es
lods
mov
adc
mov
in
jo
(bad)
or
pop
nop
pushf
loopne
mov
jle
ds
(bad)
in
jbe
call
das
outs
ucomiss
mov
mov
jle
jmp
aas
adc
cmp
jmp
ret
(bad)
popa
mov
mov
fild
cmp
loop
pop
btc
mov
aas
xchg
(bad)
jns
cmp
mov
inc
jne
jmp
sub
mov
(bad)
ins
pop
mov
repnz
mov
unpckhps
outs
outs
mov
stos
add
jne
xor
mov
and
jbe
mov
jmp
nop
call
(bad)
aas
(bad)
and
outs
mov
cvtps2pi
mov
outs
mov
cmovge
cli
dec
mov
inc
push
inc
mov
jbe
jg
dec
mov
and
cmps
pop
mov
push
mov
aas
out
pop
bndstx
mov
inc
jne
(bad)
jnp
cmp
(bad)
jbe
pop
push
jmp
sub
mov
jne
or
dec
aas
test
fild
push
(bad)
(bad)
mov
getsec
jg
jmp
sbb
scas
pop
mov
jmp
nop
test
aas
sahf
(bad)
jg
aas
aas
outs
mov
jmp
mov
pop
aas
(bad)
cmovg
inc
and
test
inc
es
mov
xchg
and
mov
cdq
dec
es
fs
fnstcw
stc
lds
in
cdq
dec
es
aad
xchg
mov
cdq
dec
es
int
in
xchg
mov
(bad)
cdq
dec
es
cdq
ret
mov
jecxz
rcl
repz
es
mov
stos
mov
jmp
cdq
dec
es
fstp
sub
cmps
dec
es
mov
xchg
mov
xlat
mov
xchg
mov
and
es
mov
mov
(bad)
inc
loope
fwait
test
adc
fwait
aas
pop
pop
push
push
add
pop
mov
shl
mov
call
ds
mov
xadd
in
jmp
pusha
jg
inc
sbb
pop
push
popa
and
outs
inc
jg
inc
xor
enter
or
xor
adc
fist
add
dec
mov
pop
cmp
lock
dec
add
or
push
add
add
push
dec
and
bound
xor
add
jmp
dec
mov
inc
fs
gs
fild
outs
pop
fsubr
add
test
xlat
cmovg
pop
je
jae
sbb
and
fbstp
add
test
pop
out
ret
add
add
add
add
nop
or
add
or
retf
mov
or
dec
sub
inc
scas
inc
add
add
mov
inc
add
mov
loop
or
add
pop
and
adc
dec
jno
inc
out
iret
sub
push
dec
adc
or
push
pop
cmp
and
pop
or
(bad)
(bad)
(bad)
in
or
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
xor
fdivr
jmp
rcl
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
(bad)
push
mov
imul
std
in
leave
mov
add
ins
push
arpl
ud2
add
or
outs
cmp
dec
(bad)
(bad)
(bad)
jmp
inc
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
(bad)
(bad)
call
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
(bad)
(bad)
inc
popa
sar
and
mov
cdq
xchg
mov
mov
or
(bad)
push
jmp
outs
das
adc
stos
sbb
data16
inc
fdiv
jno
add
(bad)
(bad)
(bad)
mov
adc
out
mov
mov
movs
in
lahf
xor
mov
js
stc
(bad)
jg
imul
or
ins
or
(bad)
(bad)
call
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
(bad)
(bad)
(bad)
inc
hlt
or
(bad)
fnstenv
adc
mov
mov
bound
ficom
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
(bad)
(bad)
push
dec
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
(bad)
(bad)
jmp
add
pop
dec
or
cmp
add
daa
(bad)
push
mov
and
test
or
mov
(bad)
(bad)
(bad)
jmp
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
(bad)
(bad)
(bad)
(bad)
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
icebp
(bad)
(bad)
(bad)
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
(bad)
(bad)
(bad)
fild
xchg
(bad)
shl
add
inc
push
imul
xor
sar
ins
sbb
push
dec
sbb
(bad)
loopne
ror
(bad)
(bad)
(bad)
dec
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
(bad)
(bad)
(bad)
call
fisttp
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
(bad)
(bad)
(bad)
jmp
add
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
(bad)
(bad)
(bad)
push
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
(bad)
(bad)
inc
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
(bad)
dec
xchg
ins
add
ss
jmp
addr16
jb
(bad)
call
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
jmp
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
sub
inc
mov
out
cli
jo
(bad)
jmp
and
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
(bad)
call
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
int3
sbb
mov
retf
mov
(bad)
(bad)
(bad)
jmp
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
and
(bad)
call
or
fild
sub
lock
gs
fs
imul
or
addr16
and
xchg
add
in
pop
mov
jmp
gs
xchg
ins
shl
das
aas
cmp
mov
gs
es
or
call
and
je
shl
cmp
add
ins
adc
stc
outs
ins
ins
pop
mov
sub
sbb
xchg
add
pop
das
pop
sub
pop
add
dec
and
push
jp
mov
mov
mov
sub
xor
fdivr
in
outs
jb
jae
ins
bound
jae
pop
rcr
inc
gs
ins
mov
xor
fimul
and
jb
arpl
mov
add
add
pop
cwde
adc
aad
xchg
arpl
test
jne
xchg
jno
mov
test
pop
in
ds
inc
push
bound
sbb
loope
sbb
sbb
test
mov
imul
mov
jbe
aas
jae
mov
call
jae
inc
and
xchg
mov
test
xlat
add
inc
fild
sub
test
mov
nop
daa
sub
add
inc
rcr
test
imul
jmp
xchg
and
push
jmp
outs
popa
xor
add
adc
aas
sbb
and
xchg
cmp
push
jbe
jecxz
inc
popa
xchg
imul
add
jo
jae
xor
test
in
movs
xchg
outs
push
fistp
xor
and
and
push
das
in
or
outs
mov
dec
jbe
add
sbb
fcom
aas
outs
and
les
mov
inc
push
fnstsw
or
adc
dec
jae
outs
xor
enter
xchg
xor
imul
or
inc
mov
fistp
inc
mov
clc
push
xchg
or
ja
jo
mov
dec
(bad)
rol
push
iret
jae
pop
loopne
in
jbe
arpl
dec
or
inc
cs
aaa
pop
add
fldz
daa
push
add
and
bound
and
add
push
pop
sbb
pop
inc
enter
inc
js
push
sbb
push
ins
imul
es
pop
jl
push
add
xor
mov
out
fdivr
or
xor
mov
pop
aaa
or
add
sbb
cmp
xor
push
xor
push
push
jb
mov
and
push
cwde
mov
push
cmp
sbb
pop
and
mov
inc
push
sbb
push
jbe
fsub
xchg
(bad)
dec
push
jnp
sbb
cmp
sub
dec
sub
add
cmps
push
sub
shl
lahf
jo
inc
je
jge
fisttp
mov
push
es
add
inc
inc
add
lods
scas
push
imul
sbb
add
and
or
aad
das
mov
sub
clc
fisubr
pop
xor
sub
dec
jmp
xor
stos
jmp
adc
inc
inc
sub
sub
xor
inc
xor
inc
aaa
inc
sub
ss
or
inc
or
test
sub
pop
ins
mov
cmp
sub
nop
loopne
xor
add
or
jmp
mov
xor
arpl
data16
dec
xor
leave
out
jns
xor
xor
dec
or
mov
xor
xor
stc
xor
or
fcmovnu
sbb
xor
inc
xor
inc
cs
mov
xor
inc
inc
inc
inc
push
add
or
xor
dec
mov
imul
cmp
cmp
aaa
inc
aaa
inc
xor
loope
xor
xor
cmp
xor
add
add
pop
cmp
xor
push
xor
add
in
pop
inc
bound
xor
out
xor
xor
inc
add
iret
mov
xor
lahf
fadd
inc
dec
cmp
aas
aas
add
lahf
xor
call
sbb
fdiv
xor
call
fwait
loop
and
xor
push
fwait
sbb
loopne
sub
ret
add
test
add
push
cmp
add
xor
add
push
stos
and
add
push
call
mov
or
adc
pop
xor
pop
arpl
jae
ss
and
xor
daa
ins
stos
push
and
jb
xchg
adc
add
js
iret
popa
add
jae
cmp
lods
outs
pop
not
adc
popa
and
add
or
jp
jbe
lock
xlat
add
xchg
sbb
xchg
outs
jb
jae
rcr
fiadd
jo
sbb
iret
sbb
pop
inc
sti
push
les
test
add
pop
cmp
mov
lahf
push
push
and
pcmpgtd
addr16
xor
fwait
jo
ds
jae
adc
xor
test
jbe
and
popa
call
push
adc
popa
jb
inc
add
ss
push
loope
mov
jne
mov
imul
and
xor
inc
push
jne
inc
aaa
movs
xor
fimul
out
inc
bound
mov
push
imul
jo
dec
cmp
add
add
mov
and
pop
pop
les
stc
cld
out
xchg
cmps
xor
fcom
pop
lock
ins
or
push
push
mov
push
and
int3
test
imul
mov
xor
push
mov
popw
aas
or
lds
add
dec
cmp
push
inc
outs
inc
dec
jl
dec
inc
sub
hlt
fisub
xor
aaa
push
dec
ins
sub
cs
rcr
mov
leave
ja
ret
inc
in
and
(bad)
cmp
mov
adc
mov
data16
arpl
js
and
push
mov
test
push
jbe
sbb
fsubr
inc
inc
mov
dec
xchg
aad
mov
push
push
pusha
out
push
push
nop
mov
mov
data16
loopne
mov
jae
cs
dec
jno
mov
push
adc
pop
add
ret
and
jo
add
out
sahf
cmps
push
jno
jb
rcr
jns
movs
xor
add
les
push
sub
dec
mov
sahf
in
in
out
ds
repz
adc
out
add
iret
repz
outs
push
add
xchg
cmp
push
sub
adc
sahf
stos
popf
cmps
pop
add
push
inc
push
add
push
call
stc
push
add
fiadd
add
dec
push
push
fsubr
add
hlt
push
add
mov
fidivr
add
cmp
add
cmp
xchg
jo
adc
imul
enter
out
sahf
rcr
shl
icebp
fdivr
pop
leave
push
cmc
mul
cmp
sub
push
jp
je
fidivr
mov
add
ror
push
hlt
push
clc
jae
sar
idiv
iret
push
iret
repz
hlt
jl
pushf
cld
les
loopne
or
mov
sahf
sub
add
loopne
sahf
out
test
fdivr
sbb
fcomp
push
ret
fild
xor
out
push
(bad)
adc
les
xchg
je
push
lds
mov
mov
or
call
repz
and
push
sahf
out
retf
addr16
add
jns
adc
or
iret
jns
cmps
cmp
push
cmp
fs
xchg
add
xor
push
add
add
sub
push
add
push
mov
push
imul
sbb
ins
out
sahf
out
fs
xchg
sahf
out
sahf
ins
lods
addr16
lock
repz
adc
mov
jae
bswap
push
adc
push
or
iret
adc
jmp
cmp
out
out
dec
loope
push
out
jns
sbb
push
out
push
jmp
aam
jnp
std
das
or
jo
in
push
cwde
push
in
sahf
out
mov
dec
push
shl
call
iret
loop
push
xor
das
push
jecxz
jns
imul
sahf
or
and
or
iret
repz
or
nop
lock
cmp
mov
outs
push
push
sbb
xchg
(bad)
push
add
xlat
push
adc
push
adc
outs
push
add
ds
repz
or
or
pop
out
push
out
fimul
sbb
repz
push
iret
push
push
rcl
sbb
push
mov
push
push
cmp
push
imul
sbb
add
adc
aas
fidivr
cmps
push
cmp
js
pop
ror
neg
(bad)
add
push
jl
out
or
nop
push
or
or
fsub
mov
xor
dec
ins
push
add
out
jns
xchg
or
(bad)
fmul
or
fisttp
scas
push
pop
scas
push
add
cmp
pause
add
fisttp
inc
pop
jns
jns
adc
or
push
or
cmp
lock
mov
cmp
pusha
out
imul
(bad)
mov
data16
cli
add
pop
loopne
push
xor
add
mov
push
js
or
mov
push
xor
iret
jnp
in
add
fisttp
cmp
out
mov
push
call
mov
add
fdivr
repz
jne
loop
push
sub
iret
repz
or
jo
push
fcomip
cmp
hlt
add
out
ja
push
add
add
jnp
out
push
push
aam
cs
push
sbb
imul
push
xor
push
pop
cmp
xor
add
push
(bad)
mov
repz
cs
(bad)
jl
mov
mov
mov
push
dec
push
retf
jl
call
das
ds
push
(bad)
neg
jnp
pop
js
sub
mov
push
sub
(bad)
xchg
ror
mov
xor
mov
mov
jl
sub
or
mov
cld
push
sbb
call
imul
mov
daa
cs
sbb
out
sbb
jmp
es
mov
sbb
mov
xchg
test
(bad)
pop
pop
retf
push
aaa
jmp
inc
push
inc
ficomp
jnp
add
scas
test
sub
das
inc
dec
ja
(bad)
cs
retf
mov
fisttp
push
add
xor
xchg
in
movs
jnp
outs
and
pop
add
push
sar
out
dec
inc
cmovg
push
cmp
or
and
sbb
jl
lods
adc
pop
mov
xlat
push
inc
js
xlat
push
push
xor
bound
fcmovnbe
lock
jbe
call
dec
add
and
retf
xchg
gs
int3
mov
or
jecxz
pop
dec
fs
pop
xchg
int3
inc
sti
and
mov
nop
inc
sbb
pop
inc
inc
lock
dec
ja
retf
cmp
sub
jbe
jmp
push
push
outs
mov
sbb
inc
aaa
or
aaa
or
dec
inc
(bad)
adc
sbb
inc
inc
push
outs
jecxz
jge
mov
sub
aad
jecxz
mov
adc
or
adc
inc
mov
xchg
xlat
sbb
push
inc
cmp
data16
pop
pop
push
inc
sub
push
pop
add
mov
inc
jae
push
add
sti
mov
inc
add
inc
pop
int3
jbe
loope
test
mov
daa
dec
retf
inc
xchg
jo
and
daa
adc
pop
push
aam
pop
aaa
aas
inc
stos
xor
jp
inc
(bad)
scas
rol
pop
and
pop
push
xchg
fcomp
sti
imul
test
addr16
aas
inc
or
push
dec
inc
xchg
adc
in
ss
pop
inc
pop
dec
mov
ret
pop
dec
add
add
sub
push
mov
push
add
dec
out
(bad)
(bad)
fimul
repz
lahf
dec
cmp
mov
rol
pop
push
imul
not
sub
inc
repz
pop
(bad)
(bad)
ja
push
jecxz
and
ret
adc
push
xchg
adc
sub
inc
jnp
dec
lds
lahf
scas
pop
and
jecxz
das
sub
inc
inc
addr16
shr
pop
adc
dec
arpl
mov
mov
aas
dec
fild
adc
or
add
(bad)
imul
add
inc
xchg
sbb
and
push
push
push
je
aas
retf
push
push
push
add
pop
jmp
fadd
aas
xchg
into
mov
out
or
inc
xchg
pop
add
iret
dec
inc
fadd
add
xlat
push
inc
das
or
adc
push
test
and
mov
repz
inc
pop
dec
bound
scas
inc
(bad)
stc
and
cs
or
add
dec
or
push
adc
mov
retf
ja
out
adc
dec
mov
inc
add
cli
cmp
dec
add
push
add
add
lods
push
(bad)
sub
dec
cmps
push
sbb
enter
inc
out
push
inc
dec
mov
or
pop
inc
daa
pop
loopne
mov
xchg
push
push
rcl
inc
ret
push
dec
inc
push
or
lock
adc
mov
es
xchg
jmp
ret
push
add
dec
stos
data16
push
loope
add
push
cmps
inc
xor
mov
dec
mov
dec
push
dec
repz
mov
inc
add
dec
sub
inc
sti
daa
add
dec
fisubr
(bad)
loopne
mov
fadd
inc
add
dec
add
ret
ror
retf
adc
inc
ins
ja
ins
adc
(bad)
push
or
push
iret
or
adc
loope
mov
pop
xchg
push
pop
jb
dec
cmp
mov
push
and
pop
aas
scas
loopne
sbb
out
dec
add
or
jg
jae
fisttp
sub
mov
rol
inc
xor
dec
mov
call
ja
dec
xchg
xor
mov
sti
dec
(bad)
lock
iret
push
sub
cwde
sub
dec
inc
test
inc
xchg
mov
sti
xchg
or
ss
jmp
pop
lods
adc
or
imul
add
inc
or
scas
or
arpl
add
mov
aaa
dec
push
and
mov
or
pop
pop
pop
fsub
sbb
and
movs
sub
xchg
stos
jb
ja
jecxz
mov
popa
rcl
sbb
pop
sti
outs
mov
dec
xchg
mov
(bad)
and
inc
xchg
cmp
inc
dec
or
dec
sbb
sub
dec
stos
cmp
add
lods
lds
aaa
mov
(bad)
sbb
mov
dec
movs
xor
rol
add
inc
fist
push
add
out
imul
cmc
adc
adc
ins
push
icebp
add
addr16
iret
xchg
das
cmovae
push
outs
retf
push
daa
and
stos
push
fwait
push
xchg
pop
fsub
add
mov
and
inc
lds
sbb
mov
inc
aas
sbb
adc
pop
jo
adc
arpl
sbb
adc
dec
inc
sub
push
xchg
push
mov
dec
dec
rol
mov
sub
inc
mov
(bad)
addr16
dec
push
inc
or
add
push
out
mov
push
addr16
cdq
mov
sbb
inc
scas
out
shr
adc
dec
rol
test
loope
cmps
inc
add
mov
dec
dec
add
not
add
push
add
mov
not
dec
aam
push
and
das
inc
popa
and
dec
inc
dec
mov
jmp
push
inc
push
loopne
push
imul
imul
pop
ja
shr
inc
add
cwde
aam
(bad)
push
enter
pop
in
add
pop
cmps
aas
inc
jae
pop
pop
lock
add
movs
pusha
arpl
ja
fcom
xor
push
cmp
adc
pop
add
jnp
xlat
add
in
inc
xlat
imul
je
dec
push
pop
pop
add
jle
inc
mov
jae
inc
jo
ss
push
xchg
test
popf
push
xchg
movs
cwde
push
add
mov
add
or
cmp
das
pop
pop
inc
push
fistp
jo
(bad)
pop
adc
or
addr16
and
rol
inc
sbb
sbb
mov
dec
mov
fdivr
aad
jae
dec
jbe
xor
dec
add
pop
sub
nop
popf
or
in
stos
(bad)
push
pop
push
jmp
add
push
push
dec
jne
out
xchg
pop
or
sub
fild
adc
les
and
inc
addr16
dec
add
or
repz
pop
inc
pusha
sbb
push
mov
or
pusha
or
das
inc
pusha
bound
arpl
nop
dec
dec
cmps
ficomp
push
daa
repz
mov
mov
and
mov
and
pop
aas
xor
int
pop
dec
or
and
jnp
cmps
outs
push
mov
adc
inc
dec
or
addr16
dec
mov
mov
pop
scas
dec
loopne
pop
add
add
inc
push
mov
xor
push
daa
das
rcr
push
aas
inc
or
inc
mov
popa
dec
xor
xchg
xchg
sub
dec
cmp
dec
mov
and
push
and
mov
or
loopne
(bad)
push
fisttp
out
xor
mov
pop
pop
aaa
rol
inc
mov
jo
mov
ret
loop
add
(bad)
xchg
xor
out
jmp
adc
loop
addr16
add
or
fimul
add
aas
arpl
inc
adc
das
(bad)
daa
sub
sbb
aas
mov
dec
push
es
or
dec
xor
mov
add
dec
imul
stos
or
cmps
icebp
adc
inc
add
sbb
sub
mov
aaa
cmovb
or
jae
sbb
dec
push
pop
pusha
add
push
aas
push
mov
xlat
lahf
mov
dec
addr16
mov
das
sbb
(bad)
push
jmp
ret
push
add
push
sbb
adc
xchg
add
push
jmp
dec
dec
pop
sub
inc
outs
dec
ins
push
add
and
jmp
sub
dec
mov
dec
dec
inc
ret
pop
(bad)
fisubr
xor
mov
mov
ja
movs
add
das
inc
dec
xor
scas
adc
inc
les
pop
mov
pop
shr
ins
cmps
jnp
dec
bound
add
inc
xor
push
mov
dec
add
mov
aaa
enter
push
add
js
add
mov
test
xor
inc
mov
cmp
add
jnp
aaa
and
pusha
sub
push
out
sub
mov
sub
mov
stos
das
cmps
dec
mov
mov
push
inc
sbb
adc
inc
push
int3
fiadd
jecxz
xor
das
pop
push
jo
add
jge
stc
add
nop
es
push
and
pop
add
out
jo
es
pop
mov
(bad)
iret
add
or
(bad)
fdivp
cdq
lea
lock
jecxz
test
pop
add
sbb
(bad)
bound
pop
add
test
cdq
mov
mov
repz
mov
mov
mov
out
mov
add
addr16
retf
das
pop
pop
add
xor
loopne
cmps
fcom
and
add
add
lahf
(bad)
push
pop
sahf
mov
dec
jl
push
jmp
mov
pop
add
push
lock
push
push
pop
idiv
div
pop
add
pusha
inc
es
sub
add
aam
mov
ret
adc
add
mov
mov
stos
pop
ja
xor
shr
add
pop
or
or
adc
push
push
add
jo
xchg
push
and
sub
push
sbb
inc
and
pusha
sbb
inc
sbb
and
add
sub
push
sbb
xchg
dec
add
push
lods
or
fimul
fstp
ffreep
and
sub
cmp
xchg
pusha
sbb
das
add
xor
push
xor
(bad)
push
les
add
addr16
ins
nop
dec
mov
push
fild
inc
or
jnp
xor
pop
inc
(bad)
fs
dec
lods
rcr
or
add
inc
(bad)
push
push
push
jb
push
pop
ins
push
out
dec
out
pop
or
inc
and
(bad)
outs
and
jg
or
push
or
and
outs
aas
mov
ja
fisub
push
and
imul
ds
ficomp
push
mov
rol
cmps
and
mov
dec
outs
jecxz
(bad)
or
(bad)
cmps
cdq
shr
cmp
out
dec
add
push
sbb
sub
dec
dec
ins
int3
aas
inc
pusha
pop
push
iret
inc
cmovbe
(bad)
push
nop
mov
push
xor
sub
push
or
ja
or
pop
mov
jae
fst
jae
cmp
outs
sub
mov
nop
jae
aaa
mov
and
cmp
pop
adc
mov
iret
inc
ins
mov
xor
ds
imul
adc
push
jecxz
inc
push
daa
lods
mov
sub
and
xor
add
(bad)
or
add
push
cmp
test
dec
push
test
mov
pop
pop
xor
jmp
pop
add
jae
mov
adc
inc
dec
or
jbe
(bad)
mov
pop
jp
add
sbb
daa
pmullw
mov
fbld
adc
jmp
jp
jo
fadd
pop
outs
push
sub
jno
mov
ins
cs
mov
push
sar
inc
(bad)
and
dec
cmp
inc
or
nop
fld
and
pop
outs
add
pop
add
dec
mov
data16
add
and
mov
pop
xor
push
pop
stos
data16
repz
cli
sti
mov
hlt
push
ret
jo
and
add
jb
inc
push
push
xor
ss
push
mov
nop
stc
scas
xlat
dec
clc
sbb
clc
sub
push
popa
jb
xlat
adc
cmp
shl
fcomi
pop
and
adc
je
inc
and
ret
cmp
or
xor
and
inc
mov
or
test
adc
cmp
push
jne
dec
add
ret
mov
and
outs
push
dec
rcr
ins
and
data16
and
or
add
test
sub
(bad)
lahf
mov
push
push
dec
push
cs
push
add
adc
fisub
outs
add
outs
je
outs
in
fld
and
ret
or
pop
inc
test
adc
add
or
add
or
jbe
mov
cs
clc
cs
inc
adc
ja
fdivrp
inc
xor
add
fldenv
shl
cs
ins
call
sbb
dec
jae
dec
popa
jae
cmp
clc
pop
jo
loop
repnz
pop
or
gs
rol
fidiv
jge
or
push
fnstcw
or
push
push
ins
dec
das
jg
lds
dec
push
push
popf
mov
add
sbb
pop
or
popa
push
inc
mov
or
xchg
inc
daa
in
sbb
ins
pop
mov
inc
pop
push
scas
bound
sbb
mov
pushf
jg
jo
imul
loopne
shr
add
mov
mov
cs
lock
sub
jmp
out
out
inc
and
inc
out
jns
mov
and
sahf
xor
imul
lock
dec
jo
dec
leave
imul
push
push
sbb
sub
inc
or
dec
mov
mov
mov
es
aas
sub
dec
(bad)
pop
inc
mov
add
add
and
mov
inc
dec
inc
jb
mov
sub
xchg
xor
daa
inc
push
cs
sbb
mov
xor
(bad)
mov
or
das
sbb
outs
or
lock
(bad)
fild
xor
adc
pop
push
test
cs
jmp
fs
jae
in
jo
pop
out
pop
pop
jae
push
or
pop
adc
jae
rcl
loopne
outs
jp
lods
or
push
dec
inc
adc
push
ret
xchg
js
and
loopne
cmp
daa
inc
or
cmp
addr16
xchg
push
dec
or
or
icebp
cmp
inc
dec
or
sub
jb
push
mov
and
call
jo
pop
inc
dec
test
mov
dec
and
je
(bad)
fisubr
cld
fldenv
arpl
sub
jae
gs
and
jne
test
movs
sahf
inc
popa
int
test
jns
adc
in
or
outs
gs
cmps
rol
gs
or
inc
adc
je
pop
sub
jae
add
arpl
ss
rcr
pusha
sub
xor
add
push
add
dec
push
fdivr
dec
dec
inc
mov
mov
add
lea
add
push
mov
or
and
int3
rol
loope
and
xchg
push
loope
and
and
dec
jae
or
movs
outs
das
sub
ins
jns
inc
gs
aas
or
test
fist
gs
popf
and
loop
ins
js
push
outs
adc
jno
and
cmc
sbb
and
jecxz
add
loop
ret
lock
sbb
push
push
push
sbb
out
push
mov
inc
jg
mov
(bad)
lock
fs
nop
cli
inc
nop
das
and
fs
addr16
cs
rol
jb
pop
lods
icebp
fwait
or
xlat
jbe
jno
adc
ja
push
(bad)
repnz
addr16
call
pop
pushf
stc
push
cmp
push
or
dec
dec
add
adc
fstp
or
dec
or
and
shl
inc
das
cmp
jne
jbe
es
inc
das
cmc
add
daa
test
pop
push
jbe
test
and
and
xor
pop
pop
packuswb
inc
gs
sbb
push
jae
popa
xchg
aaa
shl
test
mov
jno
dec
pop
popa
and
cmps
adc
daa
lods
mov
fadd
sbb
js
and
es
jae
fist
add
ds
loope
xchg
dec
ja
mov
mov
adc
in
mov
mov
xor
push
adc
cmp
inc
pop
jb
push
push
and
out
xor
push
call
gs
jmp
jmp
outs
pop
xor
sbb
inc
mov
cwde
outs
mov
or
outs
mov
add
xlat
arpl
push
aaa
jbe
iret
pop
push
inc
or
cmp
pop
add
sub
xchg
inc
das
or
dec
nop
xchg
ja
imul
or
inc
ja
inc
mov
push
adc
or
stos
addr16
push
mov
inc
inc
add
inc
or
cmp
imul
adc
ret
and
dec
adc
and
pop
inc
fidiv
(bad)
arpl
adc
push
jecxz
(bad)
mov
dec
push
dec
dec
jmp
dec
cmp
push
jne
sub
and
xor
xlat
lock
sbb
jne
push
sub
gs
mov
xchg
fcmovb
adc
cld
rcr
mov
rcl
daa
(bad)
xor
mov
test
cs
and
out
xchg
ins
add
dec
ss
dec
adc
jns
xchg
fs
test
adc
loopne
call
inc
or
jae
fisub
rcr
push
dec
outs
fs
jae
jo
out
inc
cli
mov
ret
jmp
jecxz
add
inc
js
test
test
in
ins
inc
outs
inc
ins
fs
push
or
dec
imul
(bad)
(bad)
or
cmp
adc
loop
jbe
in
inc
imul
or
cld
or
dec
rep
scas
or
jo
js
ja
lock
test
ss
scas
aaa
mov
iret
cmp
inc
or
pop
mov
ds
pop
jne
imul
push
mov
(bad)
pop
das
and
retf
movs
cs
xor
loopne
xchg
add
ffree
das
jg
scas
movs
cmp
bound
int
jns
rcl
cs
mov
xchg
cs
sbb
pop
dec
jmp
shr
adc
push
nop
mov
out
loopne
and
pop
dec
(bad)
out
bound
inc
mov
mov
push
js
pop
pop
mov
add
pop
rol
cmp
scas
push
in
and
test
cs
rol
sub
xchg
add
push
mov
imul
mov
adc
(bad)
pop
dec
jmp
sbb
sub
mov
cmps
push
fistp
inc
add
pop
add
lock
xor
iret
mov
scas
imul
adc
xchg
xor
daa
fsub
dec
jo
inc
das
not
pop
rcr
test
add
push
pop
add
out
aad
mov
out
mov
add
aad
aad
add
add
push
es
das
loop
sub
inc
test
inc
push
out
std
daa
inc
add
clc
mov
pop
or
loopne
lock
int
jge
call
jg
inc
lea
mov
jp
inc
das
data16
bswap
scas
ins
loope
mov
add
loop
or
jb
ins
xor
xor
pop
adc
rcr
and
or
aaa
mov
push
and
mov
pop
(bad)
jge
ins
scas
push
arpl
or
cmp
pop
inc
fwait
push
outs
data16
and
and
cmp
rol
ins
nop
dec
in
cmp
das
lds
xor
cmp
es
adc
xor
adc
shl
ror
xchg
adc
xor
xlat
inc
xor
daa
(bad)
daa
mov
fbstp
sbb
outs
and
add
xor
xor
inc
stos
icebp
jge
jae
ja
or
push
pop
jae
sbb
sbb
adc
pop
mov
mov
daa
push
(bad)
jo
adc
push
aas
in
sbb
or
outs
push
jo
js
adc
and
xchg
adc
imul
jne
add
xor
add
lahf
sub
int3
adc
repnz
addr16
inc
cld
nop
sti
sbb
popa
jns
outs
mov
gs
gs
iret
sub
(bad)
bound
xchg
pop
loopne
pop
mov
sbb
lods
or
in
(bad)
jg
mov
jmp
push
or
add
jb
adc
push
and
(bad)
xor
sbb
das
pop
jecxz
(bad)
ret
cmp
(bad)
daa
jmp
pop
sahf
inc
cdq
cmps
ds
push
std
(bad)
cmc
push
(bad)
aam
mov
test
out
es
in
das
pusha
mov
push
cmpps
bound
or
lahf
and
add
sub
inc
js
xor
pop
xor
addr16
and
xor
cmp
push
add
push
inc
cmps
mov
mov
fdecstp
inc
push
rol
mov
ds
dec
aaa
mov
jno
cs
xor
lahf
sub
cmp
add
mov
inc
or
push
add
jns
jl
xor
dec
bnd
ss
mov
add
sbb
imul
nop
or
and
cmp
push
dec
(bad)
cs
or
outs
mov
pop
aas
ficom
add
push
rcr
pop
pmaxub
mov
add
push
dec
ins
mov
test
sahf
pop
imul
sbb
mov
ins
mov
ss
cmp
push
jecxz
add
test
jae
sbb
adc
movs
dec
mov
fadd
dec
test
adc
rcl
dec
addr16
or
jge
add
sub
xor
ins
xchg
lock
les
push
ret
aaa
cmp
or
add
aaa
inc
pop
push
xchg
or
or
mov
and
push
adc
retf
inc
sbb
cmc
adc
pop
in
sbb
adc
cmc
or
mov
or
lock
and
sub
pop
or
fidivr
adc
push
lahf
sti
lock
lahf
sbb
loopne
pusha
jp
out
mov
jnp
mov
mov
mov
adc
add
mov
lea
test
clc
push
out
pusha
(bad)
cs
ds
jo
inc
xchg
(bad)
repz
xchg
mov
mov
ds
mov
push
nop
cwde
inc
inc
out
cdq
clc
loope
out
jbe
inc
call
call
ins
les
sub
or
mov
cmp
iret
leave
sub
loope
data16
pop
and
adc
add
inc
loop
(bad)
pop
mov
and
aaa
adc
add
adc
adc
test
jns
cs
or
push
and
adc
scas
jae
cmp
mov
or
pop
mov
dec
xchg
mov
jo
pusha
stos
jns
fdivr
repz
jle
pop
jmp
loopne
pop
outs
jg
nop
inc
add
inc
mov
add
rcl
jecxz
(bad)
add
rol
rcl
imul
xor
psrlq
adc
or
and
cmp
or
popa
and
(bad)
adc
ja
pop
mov
outs
sub
push
popa
push
push
in
popa
sbb
sub
pop
ret
popa
outs
xchg
es
adc
and
into
ror
imul
aas
push
sub
push
mov
dec
cld
sub
push
or
mov
in
les
push
push
sbb
lea
inc
dec
pop
cwde
dec
pop
outs
imul
pop
daa
pop
jle
pop
mov
dec
add
sbb
and
sub
dec
jnp
clc
inc
pop
dec
jo
pop
xor
add
add
xchg
and
dec
xor
and
xchg
lea
mov
inc
iret
dec
mov
outs
and
push
js
jne
inc
cmp
sbb
ds
dec
add
repz
rcl
ins
ins
cmp
add
(bad)
push
aad
sub
push
loopne
push
add
add
xor
xor
cs
add
in
pop
inc
pusha
mov
jbe
add
das
and
push
mov
inc
inc
add
ror
push
mov
lock
inc
add
das
das
add
loopne
fiadd
lahf
add
add
mov
inc
mov
adc
sar
mul
dec
cs
cmp
sub
fcomip
jne
pop
push
mov
das
pop
in
pop
push
sti
nop
ja
add
out
js
add
das
push
add
pop
lahf
inc
ja
out
or
cmp
pop
nop
and
lods
imul
jle
das
mov
std
daa
ins
pop
add
add
ret
lahf
clc
out
mov
ja
(bad)
inc
mov
dec
ins
jo
test
sbb
repz
nop
imul
loopne
and
xchg
gs
add
in
and
nop
xor
mov
jge
push
push
sub
or
add
sbb
leave
xrelease
int3
xor
sub
inc
fld
inc
add
mov
daa
inc
mov
adc
pop
out
jne
gs
arpl
int3
inc
sub
aas
aas
push
mov
xor
repz
sub
outs
pop
pop
xor
ficomp
push
dec
mov
xchg
sub
sahf
xor
sar
outs
and
push
mov
arpl
ss
add
inc
inc
inc
jg
adc
xchg
call
lock
add
mov
push
push
mov
jmp
scas
adc
jmp
xchg
cmp
adc
jno
add
mov
ret
mov
jmp
pop
and
mov
pop
sub
cmp
stos
popa
dec
and
lods
pusha
dec
test
mov
ret
mov
push
jb
icebp
mov
and
push
jne
inc
dec
rcl
inc
adc
pop
(bad)
dec
lods
or
pop
popa
inc
stos
mov
or
sub
fbstp
cmps
rol
rcr
retf
push
sbb
inc
add
mov
leave
scas
enter
mov
shl
push
sub
add
mov
push
shl
cs
loopne
sti
aam
inc
ret
push
push
adc
pop
push
mov
sti
out
repz
lds
push
xor
mov
loopne
rcr
xor
jo
test
(bad)
sbb
xchg
das
test
adc
pop
lock
imul
push
add
xor
xor
es
add
mov
outs
fisub
add
arpl
jae
sbb
xor
js
jns
sub
inc
popf
jge
mov
xor
bound
out
inc
imul
add
adc
gs
inc
pop
mov
in
(bad)
aaa
dec
loope
jno
imul
les
push
adc
int
nop
jecxz
sub
sub
mov
nop
xchg
pop
pop
or
push
pop
dec
add
xor
add
xor
ja
add
aam
test
jo
jo
dec
xchg
push
inc
and
pop
out
(bad)
xlat
daa
push
push
jmp
pop
iret
inc
sbb
outs
sub
les
cmps
sub
and
es
inc
mov
xchg
xor
sti
popa
iret
jge
adc
popa
aaa
push
and
outs
retf
jns
rol
arpl
(bad)
fs
adc
out
arpl
ins
iret
inc
adc
dec
xor
addr16
push
mov
sub
fbstp
pop
test
lods
xchg
push
xchg
xchg
push
jnp
jbe
pop
inc
pop
sub
pop
in
mov
add
push
add
dec
mov
push
pop
int3
sub
mov
push
loopne
mov
loop
push
and
inc
les
cwde
arpl
je
or
loop
mov
pop
gs
aas
push
inc
les
aas
call
add
xor
fs
dec
movs
out
sar
imul
mov
and
sti
mov
or
mov
sub
jo
inc
mov
out
imul
data16
out
dec
mov
lea
push
xor
popa
int
sub
les
movs
cmp
es
or
jae
or
lea
lock
add
xchg
pop
loopne
cmp
outs
ins
scas
es
or
enter
dec
mov
test
dec
and
push
nop
inc
jb
addr16
scas
ja
gs
jge
fld
and
arpl
lods
jns
stos
jns
popa
mul
sub
jo
and
gs
ret
mov
and
xchg
xor
or
inc
sub
pop
jne
xor
add
mov
inc
movs
inc
push
mov
mov
fisttp
inc
add
pop
cmp
adc
dec
adc
aam
xor
imul
jo
mov
aam
sbb
imul
test
adc
loope
mov
lods
push
mov
sub
add
mov
and
(bad)
in
jg
dec
sbb
add
and
inc
xor
outs
arpl
xor
adc
je
int3
adc
leave
in
outs
cmps
pmulhuw
push
movs
push
loopne
js
ds
in
test
mov
mov
(bad)
test
rcl
xchg
call
mov
or
xor
cmp
movups
add
dec
sbb
loopne
stos
cmp
test
and
mov
xor
xchg
adc
sahf
push
test
adc
sbb
into
scas
and
test
scas
bound
sub
sbb
inc
lock
outs
inc
sbb
(bad)
push
ds
mov
adc
fild
loopne
push
inc
jns
pop
call
shl
push
mov
pop
xchg
xor
pop
inc
mov
ins
shl
push
shr
ins
inc
lock
pop
idiv
out
fisubr
jo
push
lock
jbe
jb
cmp
pusha
jno
jne
push
je
mov
fisttp
inc
jo
mov
push
ins
ja
push
push
mov
test
fidiv
push
push
push
push
push
jo
repz
rcr
ds
pop
mov
push
mov
out
into
jle
mov
loopne
pusha
ds
push
dec
sti
fidivr
push
call
adc
addr16
or
push
mov
mov
jl
shl
push
scas
push
lock
out
inc
fcomi
ss
xlat
adc
(bad)
push
and
dec
pop
sub
outs
push
ins
ss
bound
loope
daa
dec
div
xor
outs
outs
and
fs
ret
out
and
add
xchg
jae
ins
pop
add
fs
ja
dec
outs
popa
sbb
in
xor
aam
adc
add
rcr
jae
aam
mov
popa
push
data16
jno
mov
inc
xchg
outs
outs
and
mov
jge
dec
add
ja
jae
pop
adc
push
ins
xchg
aas
and
fild
jo
js
cld
outs
jne
outs
add
imul
scas
push
mov
ds
mov
push
ror
int3
push
ror
add
mov
jae
sbb
lods
in
ja
inc
jmp
add
call
push
js
add
in
push
push
jae
mov
sub
add
ss
dec
add
add
push
jo
inc
inc
adc
inc
add
and
js
pop
aas
add
mov
ja
mov
add
add
call
add
je
ins
jne
outs
dec
lods
push
inc
xchg
xchg
add
dec
and
jge
or
dec
add
push
ins
push
ins
mov
dec
push
rcl
popa
repz
outs
and
outs
ins
xor
outs
gs
sbb
outs
outs
jb
out
(bad)
jmp
mov
xor
jae
das
(bad)
pop
and
mov
gs
jae
push
pusha
push
and
bound
ins
jno
in
dec
shl
jns
pop
mov
les
mov
sub
adc
mov
mov
inc
imul
sub
pop
imul
dec
loopne
clc
sbb
(bad)
dec
dec
inc
inc
and
jne
jmp
xchg
add
xchg
push
das
xor
push
push
inc
cmp
mul
push
test
dec
push
xor
mov
inc
test
retf
movs
jno
sbb
bound
jae
lea
inc
dec
sbb
xor
inc
fs
scas
inc
aaa
shl
shl
cmp
xor
lahf
data16
and
add
cmc
sub
call
pop
daa
inc
xor
xchg
inc
rcl
mov
xchg
imul
ja
add
div
loop
xchg
enter
sbb
cwde
dec
jecxz
dec
mov
jle
inc
sub
jmp
jae
and
pop
add
mov
sbb
ins
add
imul
adc
fwait
push
pop
push
inc
and
sub
adc
fild
inc
inc
xor
push
daa
outs
jne
in
sub
sub
sti
cmp
and
adc
jae
cld
inc
or
jnp
mov
and
push
add
add
dec
or
jg
outs
add
pop
ret
imul
inc
add
int3
les
arpl
sub
pop
mov
inc
pop
aas
adc
push
pop
add
lods
pop
pop
xor
add
stos
daa
push
test
and
imul
movs
xor
pop
je
aas
mov
je
dec
add
inc
pop
or
out
pop
jnp
adc
push
jl
shl
(bad)
in
push
jo
les
push
push
das
mov
push
(bad)
adc
mov
pop
push
bswap
shl
call
outs
mov
jns
ret
inc
xchg
daa
or
jo
mov
jns
mov
mov
bound
mov
push
inc
stos
jne
pop
out
retf
mov
push
push
dec
sbb
dec
or
bt
icebp
adc
push
push
push
repz
rep
pop
dec
mov
mov
sbb
push
rcl
(bad)
sbb
push
sbb
js
xchg
call
nop
and
sbb
add
cmp
push
pop
and
shl
hlt
mov
dec
xchg
jns
add
fild
mov
inc
jns
js
cmp
dec
je
daa
mov
inc
xor
pause
dec
cmps
push
or
xchg
xor
ret
jecxz
fs
dec
loopne
enter
mov
mov
jns
and
js
cwde
bound
mov
into
gs
ins
or
ret
sbb
inc
mov
and
ret
fwait
xchg
iret
nop
and
fnsave
push
mov
(bad)
mov
or
sub
sahf
push
cdq
mov
fstp
xchg
adc
jmp
or
cmp
lods
mov
and
fisub
add
inc
add
inc
mov
or
pop
fldcw
dec
dec
mov
cli
enter
fs
inc
hlt
or
inc
ror
push
jmp
or
test
adc
out
and
inc
push
pop
(bad)
jl
fcom
aaa
rcl
add
push
dec
xor
add
ss
cdq
jbe
cmps
xor
jnp
nop
out
push
mov
test
cwde
aaa
push
or
aaa
mov
js
inc
adc
(bad)
dec
call
inc
and
loopne
add
ss
mov
sar
mov
pusha
xchg
pushw
out
jge
iret
mov
xor
inc
cmp
cmp
outs
cmp
cmp
push
cmp
jmp
ds
mov
dec
dec
fbld
adc
pusha
adc
sbb
push
cs
inc
cs
jle
jb
mov
xchg
mov
pop
data16
adc
cmps
aam
add
popa
outs
pop
inc
xchg
mov
jo
mov
shl
push
or
xchg
push
mov
add
mov
inc
rol
and
scas
into
inc
pop
mov
push
pop
inc
cmovo
jb
inc
push
jmp
or
lahf
or
add
inc
pop
and
aas
pop
and
jo
sar
xchg
mov
dec
adc
outs
cs
outs
or
sti
and
sub
fbld
push
dec
jmp
push
mov
cmp
lock
inc
mov
jge
inc
inc
sbb
inc
dec
and
cmp
dec
sbb
sbb
xchg
dec
and
dec
inc
popa
arpl
ret
fwait
call
mov
ss
imul
das
push
aam
je
mov
daa
pop
jo
mov
imul
pop
bound
ja
push
gs
enter
pop
mov
outs
cmp
mov
mov
arpl
ds
jecxz
gs
pop
dec
jb
jo
loope
fnstsw
or
jne
sbb
push
sbb
xor
dec
dec
push
loopne
bound
add
pop
xchg
mov
and
jbe
ss
retf
aaa
pop
scas
inc
jns
daa
or
fstp
adc
fadd
and
stos
pop
inc
inc
mov
mov
dec
push
add
adc
daa
push
dec
psubq
pop
inc
jp
das
nop
dec
mov
add
das
xor
push
lock
pusha
jbe
cmps
dec
loop
out
nop
jno
add
add
push
jno
inc
pop
imul
mov
cmp
je
not
dec
cs
cwde
test
fs
xor
push
outs
popa
test
add
pop
pop
loope
xor
test
xor
adc
add
xor
cli
adc
dec
outs
inc
and
rcl
jb
jns
or
dec
arpl
lock
ins
mov
jns
and
sub
movs
in
cmp
jle
push
xchg
(bad)
xchg
mov
das
jg
test
dec
and
add
fst
call
adc
and
pop
inc
outs
addr16
popa
xor
or
fist
jne
repz
fisub
jmp
(bad)
adc
adc
fild
shr
aaa
inc
cmp
dec
cmc
imul
sbb
cmp
mov
neg
ss
addr16
push
add
cmps
jno
adc
pop
push
mov
in
aam
add
adc
in
scas
ss
push
jp
xor
test
addr16
add
push
mov
and
jae
xchg
add
jbe
cmp
or
ins
xchg
and
movs
push
fcmovnbe
and
outs
add
sbb
(bad)
and
ins
xor
inc
pop
inc
pop
jbe
gs
xchg
cwde
arpl
and
or
mov
lods
sbb
lods
sub
bound
mov
imul
xlat
adc
(bad)
popf
xchg
test
xchg
jecxz
xor
xchg
or
dec
mov
inc
nop
pop
cmps
pop
sub
sbb
mov
ret
pop
or
add
xchg
(bad)
push
pop
dec
fdivr
clc
push
popa
push
sbb
scas
cwde
mov
pop
adc
add
push
add
test
scas
pop
vprotb
mov
add
rol
ss
ins
xchg
pop
or
fs
div
iret
or
dec
sub
xchg
stos
loopne
add
jns
sub
or
ja
add
inc
or
mov
ja
cld
push
and
inc
inc
out
inc
push
test
dec
inc
or
push
out
addr16
das
add
cmc
dec
mov
adc
xchg
out
adc
mov
adc
mov
mov
xchg
mov
inc
(bad)
push
lock
dec
cmp
imul
add
pusha
lahf
mov
sbb
push
stos
retf
mov
inc
jae
aam
jb
fwait
inc
stc
sbb
mov
mov
aas
(bad)
(bad)
call
sub
pusha
xchg
add
mov
jae
ret
test
jo
or
addr16
pop
sub
add
dec
scas
shl
je
daa
lock
(bad)
push
repz
push
fimul
sbb
(bad)
xor
add
add
fucomip
xor
or
inc
scas
xchg
mov
cmps
adc
inc
inc
ss
loopne
ret
sub
push
xchg
cwde
add
arpl
xor
je
pop
jae
add
mov
push
pop
inc
jecxz
imul
xchg
mov
imul
fstp
mov
mov
shl
add
ja
sub
aad
pop
aaa
test
gs
rol
push
and
push
dec
mov
mov
inc
movs
mov
add
gs
adc
mov
jo
retf
inc
jmp
push
imul
jne
cmp
into
xlat
xor
rol
inc
iret
outs
or
inc
adc
imul
test
xlat
add
pop
movs
jno
(bad)
out
sahf
jge
pop
push
pop
push
cmp
and
add
add
pop
aaa
add
mov
or
cs
dec
mov
aam
pop
add
ss
pop
pop
aaa
enter
jns
mov
add
mov
and
pop
cmp
rcl
adc
sbb
dec
dec
pop
and
in
sbb
or
daa
into
add
shl
cmp
xor
mov
jecxz
pop
add
arpl
aaa
repnz
jae
arpl
movs
add
adc
iret
inc
aaa
jb
test
call
mul
mov
cs
sub
mov
pop
jae
imul
add
and
jae
outs
imul
sub
xchg
mov
sbb
rol
and
adc
add
(bad)
fisttp
add
sub
ins
inc
cmp
add
fcmovu
(bad)
and
sbb
add
pop
and
js
cmp
leave
aas
sub
rcr
dec
and
ss
push
add
mov
fs
mov
mov
xchg
arpl
sub
repz
xlat
sbb
add
jbe
inc
mov
aas
cmps
inc
push
ror
sahf
lock
lock
cmps
inc
sub
ds
scas
clc
mov
mov
push
icebp
inc
push
jo
xchg
push
push
in
cs
and
sub
mov
cmps
jbe
sub
popa
mov
sahf
lahf
and
pop
je
push
sub
cmp
cmp
push
call
into
and
add
std
or
loopne
cld
das
nop
and
jae
sbb
sub
sbb
adc
and
dec
in
mov
icebp
add
jmp
cmp
dec
arpl
mov
mov
push
mov
call
push
(bad)
xor
mov
or
mov
sti
mov
pop
jle
dec
out
leave
les
outs
adc
stos
sbb
push
inc
jae
push
add
add
cs
adc
cmps
or
or
or
or
add
jle
mov
mov
aas
aam
es
or
sub
movs
and
adc
push
inc
mov
jb
adc
ret
lock
outs
or
call
add
ss
push
or
mov
or
pop
rcr
inc
mov
test
adc
push
ror
ret
cmps
pusha
push
add
jg
stos
xchg
nop
das
mov
pop
scas
inc
adc
nop
push
rcr
fstp
push
or
adc
adc
fdivrp
out
and
push
sbb
sbb
scas
push
or
scas
pop
out
sbb
loope
dec
sbb
dec
add
imul
add
adc
jne
pusha
dec
jne
ret
sbb
addr16
inc
ja
les
push
and
(bad)
dec
mov
inc
aaa
and
mov
scas
xor
dec
inc
lea
push
(bad)
push
inc
or
out
cmps
add
push
mov
and
ror
cmps
sub
data16
shr
adc
lea
int3
and
inc
ins
ins
add
mov
mov
call
dec
(bad)
push
xor
jle
push
mov
mov
mov
cmp
mov
inc
imul
jecxz
inc
into
test
inc
outs
jo
push
rol
xchg
push
jns
add
into
adc
push
je
dec
or
mov
jne
push
addr16
push
xchg
mov
push
lods
ret
jbe
sbb
add
arpl
repz
aam
mov
repz
repz
xchg
xor
cmps
mov
dec
arpl
add
(bad)
and
retf
std
push
dec
jae
sbb
or
dec
gs
mov
sub
(bad)
in
fiadd
and
and
nop
mov
test
sub
imul
or
dec
jle
lods
xchg
add
jb
add
jb
cmp
cmp
rol
cs
add
dec
add
sub
xchg
push
inc
add
mov
inc
out
mov
ja
movs
sbb
fist
inc
push
pop
js
lea
repz
inc
test
sbb
xchg
and
jae
call
add
loope
shl
xchg
loope
inc
add
jle
movs
xlat
aas
push
add
adc
int3
dec
out
xchg
lock
inc
hlt
adc
push
js
add
sub
sub
jne
jg
or
outs
add
inc
adc
fiadd
inc
aad
stos
or
div
dec
push
mov
cs
mov
push
mov
add
or
lea
dec
loop
(bad)
addr16
mov
inc
dec
sub
adc
outs
dec
cmp
dec
pop
add
inc
clc
ror
mov
inc
inc
push
loope
xor
dec
(bad)
ins
popa
pop
test
mov
lahf
mov
rcr
ins
jns
popa
fs
add
adc
add
repz
push
enter
pop
test
xchg
push
pushf
push
les
pop
and
sub
inc
cmps
jge
jp
cmp
ja
pop
mov
inc
(bad)
inc
inc
pop
fldcw
push
and
in
dec
call
pop
or
fld
jbe
pop
push
inc
push
dec
inc
mov
push
daa
pop
dec
push
es
(bad)
and
in
fxch
jl
inc
pop
dec
push
dec
push
jbe
push
dec
inc
inc
repnz
push
daa
xchg
push
inc
dec
dec
scas
pop
mov
pop
jge
dec
pop
adc
lock
push
pop
dec
jae
or
call
push
pop
dec
pop
inc
inc
in
xchg
sbb
dec
push
daa
out
inc
push
inc
ja
mov
sbb
push
cmp
dec
lock
or
dec
inc
outs
dec
inc
dec
push
iret
pop
adc
jbe
in
leave
js
adc
outs
push
push
xchg
cli
and
sahf
mov
push
dec
adc
inc
inc
push
jg
xor
inc
and
dec
inc
inc
and
(bad)
cld
or
cs
inc
push
inc
push
inc
dec
loope
xor
outs
jo
mov
inc
inc
imul
(bad)
iret
aas
inc
fcom
dec
out
pop
fsubr
or
push
push
inc
pop
adc
pop
dec
inc
pop
loop
push
lahf
mov
sbb
pop
inc
inc
dec
das
fistp
loop
dec
mov
add
arpl
dec
xor
pop
mov
push
addr16
inc
push
sub
daa
dec
(bad)
dec
mov
inc
and
dec
inc
push
aas
daa
dec
pusha
icebp
mov
push
inc
dec
lea
mov
out
cdq
inc
inc
push
dec
dec
ja
dec
mov
sbb
push
mov
xchg
dec
push
sbb
push
push
inc
aaa
push
mov
sar
inc
push
ja
outs
dec
pop
ja
adc
push
mov
mov
daa
and
push
je
inc
push
jo
lods
inc
pop
out
popa
aad
(bad)
addr16
pmuludq
cmp
push
lahf
push
inc
push
or
push
inc
inc
rcl
lods
mov
pop
pop
scas
push
jns
fcmovnbe
fisubr
lock
pop
pop
dec
inc
pop
popa
ins
sub
sub
dec
pop
pop
call
jo
outs
outs
fiadd
push
push
add
jno
inc
test
call
dec
inc
daa
push
push
pop
stos
int
dec
mov
push
addr16
or
mov
or
add
bound
and
push
movs
inc
dec
push
aas
add
push
pop
xor
push
jmp
push
dec
push
fbld
add
out
xlat
inc
movs
dec
das
or
push
pop
push
lods
mov
xchg
adc
push
sub
dec
dec
(bad)
push
dec
inc
push
push
outs
or
pop
adc
inc
inc
xor
in
pop
push
push
push
pop
std
pusha
fwait
imul
mov
mov
xchg
mov
sub
pop
daa
push
outs
push
push
and
and
push
jb
stos
cwde
push
sbb
aas
xchg
inc
dec
xsaveopt
pop
repz
adc
pop
ret
pop
pop
clc
ficom
jbe
dec
pop
push
cmc
aas
inc
jo
and
push
push
mov
or
imul
inc
pop
aaa
add
not
pop
stos
add
fs
adc
inc
mov
inc
pop
xor
outs
sbb
pop
dec
pop
push
ins
dec
push
das
mov
adc
sub
pop
or
and
inc
imul
movs
shl
cmps
dec
dec
inc
dec
rcr
dec
inc
xchg
and
inc
popf
add
mov
daa
mov
ins
add
outs
inc
test
cmp
daa
pop
icebp
pop
pusha
push
pop
push
adc
popf
loope
dec
jno
push
out
mov
pusha
push
pop
or
stc
daa
movs
adc
pop
add
fdivr
sub
loopne
dec
dec
sbb
add
daa
sub
js
and
fsub
dec
pop
inc
push
dec
data16
sbb
dec
dec
call
inc
inc
dec
push
pop
dec
push
inc
adc
dec
cmp
mov
(bad)
dec
dec
pop
call
inc
test
aaa
xchg
into
pusha
arpl
dec
push
das
mov
fisttp
aaa
jnp
bound
mov
and
inc
push
dec
daa
lahf
pop
(bad)
push
and
jno
loope
aaa
dec
dec
in
inc
mov
push
mov
imul
inc
(bad)
and
add
daa
xlat
cmp
sub
lar
jl
push
fidiv
out
push
movs
lahf
mov
hlt
jae
cmc
push
shr
call
or
mov
lods
into
push
pop
ror
push
ds
lods
jae
mov
add
xchg
push
push
or
aam
push
ds
adc
out
sar
sahf
inc
push
sti
movs
dec
add
xor
jmp
outs
jmp
lods
sahf
adc
outs
popf
cmps
stc
cmp
xor
jb
fdivr
imul
int3
push
aaa
mov
mov
scas
nop
(bad)
jo
sub
pop
push
popf
ret
jnp
dec
dec
push
push
femms
jge
mov
sbb
movs
into
loopne
and
push
mov
fist
and
push
jns
add
test
mov
loopne
iret
push
outs
mov
mov
iret
push
sub
call
das
out
push
bound
and
loope
add
push
aaa
out
push
in
pop
cmp
cld
jo
sub
cmp
or
ror
test
push
test
cmp
ds
xchg
add
test
mov
je
xchg
mov
es
movs
out
push
movs
out
call
(bad)
adc
cmps
adc
test
outs
push
cmp
(bad)
pop
neg
push
popa
ror
add
lock
repz
sahf
out
push
add
push
iret
repz
pop
js
ins
adc
cdq
cmp
loopne
iret
repz
sub
ja
ficomp
push
dec
pop
sahf
addr16
cld
outs
dec
dec
and
(bad)
xor
das
push
or
pop
sar
mov
repz
add
jns
iret
repz
push
pop
out
sahf
out
or
or
mov
fisttp
hlt
ins
fidivr
out
push
in
aam
les
jb
test
out
daa
mov
js
iret
or
mov
push
dec
dec
add
repz
push
cmp
add
add
ds
repz
add
jns
out
outs
push
in
ror
out
sahf
out
or
mov
push
or
iret
repz
inc
adc
stc
cmp
repz
or
hlt
imul
push
jecxz
in
out
sahf
jnp
fisttp
out
out
sar
call
out
or
je
outs
mov
push
inc
femms
popa
dec
cmp
bound
out
iret
push
arpl
fs
push
add
in
data16
pop
loopne
jo
les
cmp
push
jnp
push
mov
push
xor
and
dec
push
out
push
jge
iret
jmp
adc
dec
push
repz
aad
femms
pop
fisttp
sbb
out
jnp
and
or
adc
inc
push
jg
addr16
jmp
dec
adc
test
mov
push
popa
pop
mov
imul
pop
adc
adc
or
imul
xchg
ja
add
xor
xor
xchg
(bad)
(bad)
sbb
xor
sub
bound
sbb
inc
or
mov
and
and
or
mov
clc
sub
sbb
inc
jg
mov
inc
add
or
mov
sbb
add
add
inc
sar
(bad)
pop
inc
dec
sub
jne
jo
add
add
adc
jne
jo
and
and
inc
loop
and
add
xor
mov
fwait
rcr
movs
inc
scas
shr
xchg
xchg
inc
mov
push
loope
and
or
or
outs
outs
ins
aaa
mov
add
sub
call
or
push
fs
mov
rcl
cmp
and
inc
outs
adc
cmp
fs
inc
and
or
jb
(bad)
jnp
outs
es
cmps
cmc
push
or
jne
daa
sub
and
sub
sub
sub
jb
xor
fs
(bad)
popa
or
into
bound
arpl
push
punpckldq
jl
callw
mov
loopne
sub
push
dec
lds
mov
and
scas
mov
inc
test
mov
data16
jno
cmps
bound
lock
jle
loopne
mov
adc
outs
mov
jbe
pop
nop
jns
fs
push
js
jo
bound
cwde
and
pusha
mov
or
xchg
cs
mov
pop
or
outs
mov
outs
or
jg
test
pop
enter
adc
sub
mov
mov
int3
pop
clc
sar
or
xchg
inc
or
ret
xchg
cs
mov
mov
mov
or
mov
test
sahf
mov
pop
cmp
mov
out
or
jbe
pop
stos
(bad)
test
rcr
inc
pop
push
sbb
clc
dec
adc
sbb
(bad)
wrmsr
inc
pop
mov
or
stos
inc
add
jnp
or
push
push
imul
or
mov
and
xor
adc
inc
jge
les
add
dec
inc
inc
ret
test
mov
gs
(bad)
adc
imul
pop
jle
es
cmps
fld
xchg
or
ins
pusha
xchg
fimul
cmps
xor
and
std
dec
xchg
jb
je
xchg
sub
lea
add
jp
addr16
push
and
shl
pop
ins
gs
push
adc
cmps
mov
mov
faddp
ds
scas
add
mov
or
mov
push
push
lock
mov
mov
and
jns
and
nop
push
mov
cmp
popa
and
dec
fld
mov
inc
or
imul
mov
add
pusha
test
and
lea
fild
or
movs
jg
dec
cmps
arpl
push
adc
ds
mov
cld
sub
inc
sub
xchg
push
enter
leave
xchg
in
fxch
fs
adc
mov
mov
(bad)
retf
sbb
jno
add
inc
jb
or
dec
xchg
sbb
inc
imul
adc
ror
jns
xchg
clc
int
or
jae
jns
mov
inc
inc
add
loop
or
jae
cmp
push
lds
aas
mov
inc
inc
sub
or
xchg
add
add
rol
ror
add
aad
mov
ret
adc
jle
pop
adc
dec
xchg
push
je
xchg
xor
xchg
mov
dec
out
cmp
mov
ins
sahf
jmp
loopne
cmps
sar
xchg
lock
inc
loop
and
es
push
add
xor
imul
xchg
jo
xchg
and
add
inc
leave
sub
popa
or
and
xchg
jo
xchg
add
shl
jecxz
mov
iret
adc
dec
add
inc
mov
add
or
pusha
adc
outs
sub
fld
push
push
gs
inc
lds
add
xchg
jo
popa
push
jo
(bad)
popa
inc
(bad)
mov
dec
xchg
adc
rcl
adc
movs
popa
test
iret
movs
fnstcw
gs
mov
or
inc
add
cmp
add
inc
add
add
push
push
arpl
adc
addr16
pop
xchg
sbb
dec
pop
xchg
sbb
push
ja
lock
pop
out
push
(bad)
aad
jmp
daa
mov
lahf
rol
mov
pusha
xor
inc
add
invlpg
or
fsubr
aaa
add
adc
xchg
sub
and
dec
cmp
add
push
adc
pop
mov
sub
dec
mov
aas
outs
sbb
mov
cld
xor
rcl
dec
(bad)
ja
add
ss
xchg
mov
push
mov
neg
adc
das
add
inc
int3
ret
pop
jae
jb
add
cmp
jne
test
add
push
dec
cmc
push
jo
mov
jge
daa
mov
push
push
shl
jnp
jl
sbb
sbb
sbb
xor
push
or
add
add
or
mov
and
pop
outs
or
mov
or
mov
out
sahf
and
mov
adc
hlt
dec
add
push
mov
add
and
(bad)
pop
mov
mov
mov
push
imul
sbb
cmp
jecxz
clc
(bad)
sub
cmp
cmp
fbld
sar
push
xor
fcomp
inc
push
xor
push
data16
std
pusha
pushf
std
ds
cmp
push
out
and
dec
inc
lea
data16
dec
xchg
dec
je
je
and
sub
xchg
adc
add
mov
ja
(bad)
push
pop
xchg
add
adc
pop
inc
pop
dec
loopne
call
(bad)
xchg
js
in
ja
(bad)
xor
mov
(bad)
loopne
mul
xor
jo
push
scas
cwde
nop
or
jg
jne
sub
jl
sbb
ds
xor
pusha
aas
aaa
xor
mov
mov
mov
sub
sub
and
jb
jne
fcmovne
retf
mov
push
mov
addr16
mov
mov
or
mov
das
dec
fcom
rol
scas
inc
inc
popa
mov
inc
adc
ins
add
or
inc
add
rol
adc
mov
jmp
ret
cmp
mov
add
xchg
add
and
outs
or
ins
das
clts
adc
sti
xor
add
mov
movs
adc
arpl
sub
mov
xor
dec
ins
adc
pop
inc
pop
(bad)
ins
xchg
popa
push
mov
and
(bad)
sub
sub
xor
ss
addr16
adc
out
pop
mov
les
push
pop
push
sbb
push
sbb
sbb
and
push
pop
inc
lock
sub
aaa
aas
dec
xlat
add
add
adc
xchg
mov
xor
cs
adc
arpl
mov
sbb
aas
push
rcl
inc
pop
imul
xchg
das
inc
mov
nop
call
add
pop
and
(bad)
mov
inc
fcomp
pushw
add
mov
mov
cmp
rcl
mov
cmp
into
test
jbe
fistp
pop
push
add
clc
nop
mov
inc
daa
add
mov
(bad)
mov
hlt
push
adc
sahf
out
push
rcr
dec
or
stc
dec
pushf
pushf
clc
jmp
xchg
shl
jne
and
(bad)
fadd
test
adc
leave
mov
pop
or
daa
outs
add
mov
add
adc
add
or
or
addr16
jg
sbb
out
int
inc
enter
cmps
and
scas
scas
int3
xchg
push
bound
jle
pop
out
dec
retf
call
daa
push
dec
ret
or
push
ja
sub
jg
sub
sub
inc
add
add
push
push
adc
test
cmp
add
push
push
or
mov
or
adc
jno
jae
popw
adc
rcr
fist
push
lahf
cmp
pop
bound
pusha
pop
fisub
jo
ds
push
pusha
push
popa
mov
mov
lock
shl
sub
push
nop
fs
imul
outs
test
ins
jns
or
lock
hlt
(bad)
push
outs
dec
iret
aam
push
cmps
(bad)
jmp
xor
cmp
mov
out
jae
add
push
or
pusha
and
or
lahf
xchg
adc
dec
mov
or
add
adc
arpl
pop
push
inc
mov
and
jo
and
cdq
adc
or
fisubr
in
mov
push
mov
sub
aam
mov
dec
xor
add
ins
ins
loop
push
mov
push
arpl
pop
clc
jno
cdq
hlt
jbe
ins
jge
push
inc
(bad)
call
outs
aam
or
pusha
jno
inc
pop
xchg
popa
add
pop
pusha
aas
pop
mov
ja
ss
xchg
add
hlt
inc
ret
push
je
call
icebp
xchg
adc
imul
xor
pop
ins
mov
vpackuswb
outs
mov
repnz
jae
add
push
jb
mov
lods
or
sub
fistp
dec
push
pop
sub
push
pusha
outs
jp
retf
sar
jne
push
dec
dec
int3
leave
jg
popa
jo
ins
push
pop
outs
jg
dec
adc
lods
add
inc
mov
arpl
jb
cli
arpl
inc
jne
mov
adc
xchg
push
add
mov
rol
cmc
lock
shl
dec
div
cmps
ja
sbb
ja
out
dec
and
pop
push
popf
or
add
(bad)
dec
bound
push
dec
inc
call
cwde
test
pusha
jle
jns
jnp
xchg
push
loope
jge
jl
imul
adc
jne
add
pop
sbb
xor
mov
and
(bad)
lods
mov
adc
mov
jb
mov
ins
push
jae
ins
pop
dec
sub
mov
ds
or
push
lods
addr16
xchg
xchg
mov
adc
icebp
(bad)
jle
dec
add
test
mov
setg
jne
fs
push
mov
mov
pop
adc
and
xor
fild
pop
daa
movs
xchg
xor
jmp
out
dec
or
popa
xchg
ja
mov
jb
ja
popa
jbe
xchg
outs
das
bound
xor
adc
push
dec
or
jne
xor
xchg
fs
sbb
mov
pop
pop
sub
stos
call
mov
or
shr
or
les
xor
lahf
inc
sub
and
(bad)
sbb
pop
push
adc
adc
adc
or
xor
cs
pop
or
or
in
mov
push
push
jg
adc
pop
(bad)
inc
movs
push
jne
test
xchg
jecxz
pop
adc
into
adc
pop
ficom
shl
mov
mov
jle
fisttp
mov
into
sbb
mov
sbb
mov
jo
inc
mov
ror
adc
mov
adc
jmp
or
inc
(bad)
inc
out
sbb
test
push
xor
pop
add
xchg
add
xor
or
rcl
gs
fcmovb
mov
cmps
frndint
adc
nop
sbb
aas
inc
ret
push
mov
adc
enter
xchg
mov
mov
pop
jb
(bad)
pop
add
mov
xchg
add
fidivr
rol
mov
add
pop
pop
jp
in
mov
aaa
push
inc
pop
and
neg
ret
jg
jle
sub
adc
loopne
mov
jns
iret
mov
or
jnp
mov
jmp
pop
int3
push
and
pop
jle
enter
sub
xor
repnz
push
dec
(bad)
fsub
out
ss
in
push
iret
(bad)
bound
add
pop
aaa
dec
je
mov
mov
jle
or
std
pusha
lds
outs
adc
arpl
xchg
pop
jb
mov
cwde
pop
call
jg
mov
inc
out
ins
pop
or
jb
pop
add
nop
mov
pop
jb
jns
pop
jb
pop
adc
and
jb
sbb
jb
mov
mov
and
jb
xchg
test
pop
jb
xchg
jg
pop
jnp
int3
jl
dec
sbb
mov
rcr
mov
in
movs
pop
cmps
test
enter
test
test
inc
cs
pop
je
in
cs
pop
pusha
cs
mov
in
movs
mov
stos
mov
cs
cs
scas
mov
cs
mov
in
cs
mov
cs
in
mov
loope
mov
lds
adc
pop
adc
test
add
mov
jl
add
(bad)
pop
aas
mov
and
lock
xchg
xchg
pop
mov
and
sub
mov
inc
outs
add
outs
add
icebp
adc
aas
mov
push
push
popa
loopne
inc
lahf
xchg
dec
pop
retf
cs
(bad)
push
dec
jecxz
gs
and
and
cmps
push
inc
or
shl
sub
ror
inc
loope
xor
sub
and
addr16
jo
jne
push
sahf
jae
bound
xchg
nop
ret
jo
inc
and
ins
inc
adc
sbb
inc
in
outs
jb
xchg
aad
mov
mov
xchg
cmp
cmp
xor
jns
pop
add
dec
jmp
push
inc
out
adc
fsub
pop
or
push
cmp
dec
push
popa
jb
lods
mov
and
xchg
and
add
repz
or
dec
pop
cmp
sbb
push
gs
push
add
popa
ins
dec
inc
jp
pop
(bad)
add
outs
inc
out
jbe
ret
xlat
inc
sbb
xchg
pop
push
sbb
add
pop
pop
pop
test
push
je
ret
mov
xchg
xor
jb
cmp
pushf
pop
rcl
aas
dec
push
inc
push
dec
push
enter
or
cmp
loope
push
jmp
or
jo
push
lahf
pop
das
jo
out
add
pushw
nop
ficom
pop
shl
pusha
mov
shl
and
test
and
push
pop
xor
sbb
mov
push
iret
not
add
je
xchg
sub
jmp
xchg
adc
pop
das
mov
rcl
lock
movs
xchg
clc
clc
push
or
cmp
rcl
cmp
jns
mov
xor
add
and
add
jae
bound
aam
dec
pop
aas
pop
and
ret
test
mov
inc
and
xor
enter
shr
add
add
or
invd
outs
sub
and
inc
adc
js
outs
add
pop
sub
push
inc
dec
sbb
jmp
out
sub
inc
mov
sub
mov
inc
stos
mov
or
test
add
jo
or
pop
test
or
and
and
imul
sar
sbb
and
mov
pusha
pop
mov
push
pop
jecxz
add
xor
xchg
je
ins
adc
and
daa
scas
adc
and
inc
and
pop
add
imul
and
sub
mov
jns
jae
adc
xor
or
mov
test
jns
or
adc
adc
or
add
add
je
add
fs
and
movs
adc
(bad)
push
jo
iret
dec
adc
push
jmp
push
nop
or
lahf
xchg
jmp
inc
in
pop
add
rol
lods
nop
xor
adc
adc
inc
add
sub
jo
pop
inc
sub
dec
add
mov
(bad)
fidivr
add
xchg
and
je
pop
and
pop
push
push
xor
fidiv
push
pusha
popa
fbld
jecxz
ret
ror
or
adc
mov
addr16
test
sbb
sbb
or
fs
xchg
adc
mov
mov
mov
test
and
and
add
sub
out
push
lock
and
and
or
rol
inc
retf
mov
or
xchg
adc
adc
pop
lahf
cmp
and
loopne
sbb
add
and
mul
jae
sub
pushf
inc
aaa
faddp
sub
aaa
aaa
sub
xor
sub
add
pop
mov
ret
sub
xor
fdivrp
fild
sub
shl
jo
jg
fild
add
jg
jo
add
sub
push
and
push
jmp
mov
shr
mul
adc
adc
ins
add
(bad)
and
push
and
xchg
or
ret
pop
scas
pop
shl
dec
pop
jo
mov
sbb
or
xchg
iret
or
cmps
xor
and
jo
add
xchg
cmp
cwde
lods
xchg
inc
push
and
es
add
shr
xchg
aas
mov
adc
mov
adc
add
add
add
adc
add
aas
(bad)
repz
and
sub
add
sti
push
jae
test
imul
repz
dec
mov
jbe
mov
das
or
imul
shl
xor
jbe
fadd
sbb
jne
xor
pop
and
inc
cdq
add
cmp
stos
push
sub
jno
mov
push
dec
jae
mov
adc
push
sub
jbe
addr16
adc
fwait
add
pusha
jp
sub
pop
add
pusha
fistp
arpl
scas
add
enter
add
fwait
mov
xor
pop
dec
shl
cmp
out
dec
jno
shl
jae
out
adc
mov
fmul
adc
and
add
das
jae
pop
ja
adc
or
aas
mov
xor
xor
cli
sbb
(bad)
dec
sbb
dec
pop
or
popa
xor
sbb
xchg
and
add
inc
mov
jae
mov
je
ins
mov
imul
mov
(bad)
ja
xchg
sub
and
pop
daa
dec
shr
fbstp
ret
ret
sbb
xchg
mov
adc
adc
push
add
mov
dec
cmp
(bad)
shl
jle
dec
mov
iret
iret
repz
fadd
out
push
int3
les
cdq
dec
test
inc
and
popa
fs
mov
bound
dec
dec
js
jne
push
movs
inc
int
in
mov
dec
jb
inc
gs
jo
mov
xor
and
xor
push
xchg
jp
bound
xor
arpl
out
shr
xor
fistp
pop
clc
xor
sbb
pop
cs
jae
dec
push
and
dec
sub
pop
pop
cmp
mov
outs
(bad)
mov
inc
ins
inc
cwde
add
iret
sub
mov
push
xor
sub
pop
rol
scas
push
add
add
and
push
pusha
pop
fidivr
iret
sub
and
inc
pop
or
adc
xor
mov
cmp
mov
popa
jmp
outs
xchg
inc
popa
cmp
pop
sbb
movs
and
sub
sbb
outs
inc
push
mov
sbb
add
popa
sub
sub
arpl
shl
arpl
push
mov
mov
add
adc
push
mov
sbb
je
inc
pusha
rol
push
jo
mov
mov
cmc
shr
jmp
addr16
sub
sub
cmps
or
aas
adc
in
or
add
add
mov
mov
sbb
into
stos
pop
out
shl
movs
arpl
jae
or
dec
out
sbb
ror
push
xor
mov
call
and
call
aam
adc
imul
jg
inc
xor
and
ror
and
or
push
push
enter
sbb
inc
cmp
xor
sub
call
sub
or
cmp
xchg
push
push
data16
ja
pop
mov
retf
add
add
rcr
adc
jno
or
popa
adc
gs
aad
push
or
add
mov
sbb
jge
cmp
aas
add
(bad)
mov
and
and
mov
jb
gs
or
xchg
(bad)
sbb
add
add
ret
xchg
add
cld
push
jo
fxch
imul
xchg
or
mov
add
shl
outs
jo
inc
pop
(bad)
and
lods
imul
aad
stos
fs
jo
inc
inc
dec
inc
adc
fnsave
push
lods
(bad)
or
lahf
or
adc
pop
rol
push
add
mov
push
test
inc
dec
dec
dec
xlat
loop
xor
or
aaa
lea
cmps
aaa
mov
inc
mov
xchg
cwde
dec
mov
lock
out
push
loopne
mov
test
rol
adc
rol
adc
(bad)
fdecstp
out
and
js
add
pop
adc
in
jle
sub
or
adc
dec
sub
sti
ret
and
pusha
(bad)
movs
inc
lahf
inc
add
mov
xchg
or
jne
push
xchg
sbb
inc
out
cmp
outs
pop
pop
sub
and
mov
mov
mov
fild
push
adc
push
pand
xchg
sbb
add
add
test
add
xor
sbb
xor
js
js
mov
outs
xchg
sub
and
jnp
jge
add
adc
and
add
pushf
xchg
and
inc
sub
les
js
mov
in
fidiv
cmp
jae
mov
outs
scas
mov
ret
xchg
loopne
fadd
xor
or
inc
add
xor
sub
jae
or
adc
and
adc
pop
rol
(bad)
fist
fisub
test
(bad)
inc
xlat
rol
sub
arpl
out
mov
ja
or
lods
sub
fprem
sub
jae
popa
xor
xchg
mov
or
mov
sub
pop
mov
pusha
inc
imul
ret
xchg
aaa
mov
cs
sub
rcr
push
dec
push
pop
fwait
xor
push
call
rol
add
sbb
arpl
outs
add
sbb
or
xor
shl
pop
lds
sub
xor
aas
mov
inc
pop
loopne
jg
pop
mov
adc
lahf
ret
fnstcw
and
push
push
or
push
ficomp
add
emms
push
fist
hlt
outs
add
lods
mov
iret
xchg
dec
mov
push
mov
xchg
xlat
inc
mov
mov
xchg
mov
fild
inc
and
xor
ficom
stos
daa
xor
or
push
inc
adc
outs
cwde
inc
or
mov
dec
or
mov
pop
arpl
jo
lahf
and
popa
and
mov
scas
into
in
or
and
or
inc
xor
ss
ins
inc
dec
or
rol
jo
or
inc
inc
mov
add
repz
sahf
pop
push
aas
add
add
mov
pop
add
and
or
(bad)
imul
ret
imul
dec
pusha
sub
and
rcl
push
sub
or
rcr
add
mov
das
xor
ins
xchg
add
pusha
inc
inc
outs
je
jo
pop
daa
ja
iret
and
sbb
daa
dec
push
and
aaa
mov
nop
arpl
cmps
imul
ret
imul
cs
inc
adc
dec
retf
sbb
test
jmp
or
loop
retf
loopne
xor
add
ret
pop
add
and
aaa
pop
jle
test
je
adc
cmp
mov
and
add
push
cmp
sub
add
inc
cmp
xchg
pop
adc
or
out
xchg
pop
push
in
pop
dec
in
xchg
or
xchg
aas
dec
out
inc
cmp
sub
ja
sti
mov
mov
out
sbb
adc
jg
xlat
mov
or
add
mov
das
scas
arpl
xchg
and
mov
addr16
fisttp
or
adc
jo
ret
fistp
ins
push
pop
mov
adc
int
call
test
adc
das
inc
cmps
add
mov
or
fwait
xor
arpl
pusha
aam
dec
repz
xchg
fsub
inc
add
dec
inc
or
dec
xchg
adc
inc
xchg
jbe
rcl
lahf
ret
call
stos
add
sub
push
mov
rcr
jg
sub
out
scas
or
imul
mov
pop
or
scas
jae
test
movs
push
adc
pop
inc
push
inc
push
cmps
inc
add
lock
and
or
mov
repz
jp
inc
stos
enter
daa
sub
add
adc
jnp
and
sub
mov
arpl
mov
and
jo
test
imul
or
out
stos
inc
xchg
(bad)
(bad)
xchg
add
dec
ja
loopne
sub
mov
add
ins
cmp
add
dec
and
jns
add
das
loope
sub
ja
xchg
test
add
push
cmp
dec
push
outs
jbe
dec
cwde
sbb
adc
adc
aas
add
jne
dec
jne
push
mov
aas
push
out
jo
or
push
out
in
pop
dec
add
jb
popa
jb
popa
outs
adc
into
mov
xchg
cmp
sahf
outs
jns
jg
addr16
(bad)
xchg
add
fs
xchg
imul
mov
gs
sbb
jne
and
into
mov
je
outs
pop
dec
inc
or
out
data16
sub
add
and
jecxz
xchg
hlt
mov
or
retf
popa
adc
add
xor
ror
ins
pop
or
add
add
add
inc
xor
sub
and
and
hlt
push
mov
and
cmp
push
add
dec
add
aam
xchg
test
mov
xlat
dec
and
arpl
sub
jg
sbb
push
jns
mov
mov
jnp
sbb
cmp
add
sti
not
adc
pop
outs
(bad)
or
fsubr
imul
or
inc
adc
push
push
mov
lds
mov
repz
dec
or
xor
mov
push
pop
out
outs
out
xor
dec
xor
iret
mov
popa
and
xor
mov
out
outs
mov
outs
xor
inc
fsub
ja
add
add
mov
add
add
mov
bound
pop
jmp
hlt
adc
cmp
dec
ret
test
shr
popa
das
jb
or
dec
test
add
pop
jb
push
add
xor
jno
cmp
out
add
(bad)
data16
ret
lods
pop
fistp
pop
rcr
das
imul
sbb
push
iret
mov
add
call
ja
or
dec
arpl
add
lods
ins
pop
fistp
push
int3
inc
jmp
popa
daa
popw
test
bound
in
inc
daa
ja
aas
popf
inc
pusha
add
aas
adc
sbb
add
ins
fild
inc
lods
add
out
jmp
push
shr
xor
mov
outs
add
pushf
adc
add
mov
push
jg
scas
cwde
shl
arpl
adc
or
add
daa
pop
or
adc
add
mov
jo
test
pusha
xor
jg
or
or
rcl
add
mov
mov
mov
add
adc
mov
iret
mov
sbb
rcr
pop
xor
pop
xchg
pusha
aas
lahf
inc
add
in
add
push
mov
test
pop
outs
and
adc
repz
adc
pop
aad
mul
mov
sub
cwde
xor
xlat
sub
add
xor
xchg
and
mov
nop
mov
popa
push
fwait
add
xor
jb
imul
or
add
out
mov
imul
mov
jmp
pop
or
(bad)
js
inc
pusha
push
movs
je
(bad)
fdiv
dec
add
in
or
cmp
ds
jae
or
push
and
(bad)
dec
mov
mov
push
aaa
mov
pop
movs
jae
push
cmp
sar
(bad)
xchg
sub
imul
imul
jnp
inc
repnz
bound
xor
add
cmp
push
adc
test
sbb
xor
push
pop
fisttp
pop
adc
mov
mov
dec
mov
iret
cmp
add
lock
jo
sbb
sbb
out
leave
aam
jnp
mov
test
mov
or
mov
jle
scas
pop
and
xchg
dec
dec
pop
(bad)
jb
pop
push
add
lods
fadd
jo
or
inc
add
inc
out
adc
fld
or
mov
sub
(bad)
push
or
adc
int3
cmp
pop
and
add
add
pop
dec
pop
jno
fild
xchg
mov
fcmovnu
sbb
outs
push
adc
rcl
out
rol
jl
sbb
stos
inc
jmp
aaa
pusha
rcl
data16
mov
and
pop
iret
push
cmp
push
inc
pusha
mov
sub
xchg
add
adc
xor
mov
es
inc
sbb
mov
mov
inc
sub
shr
cmp
popa
aam
and
cs
sub
shl
push
dec
movs
jg
pop
mov
sti
pop
mov
xchg
xlat
and
mov
pavgw
dec
les
sub
mov
fs
adc
les
push
and
data16
mov
mov
pusha
movs
mov
gs
and
fistp
arpl
mov
add
xor
inc
push
fistp
push
and
and
push
(bad)
push
add
sbb
xor
jb
mov
shl
call
inc
mov
imul
xchg
ds
gs
add
or
data16
ss
sbb
push
pop
adc
sbb
sub
mov
imul
dec
xor
inc
push
inc
push
push
inc
push
jecxz
add
imul
sub
mov
lahf
test
add
xor
mov
xlat
das
inc
popa
dec
ins
inc
cmp
inc
jmp
pushf
dec
sti
(bad)
mov
pusha
jo
mov
pusha
popa
add
adc
inc
adc
xor
cwde
mov
pop
and
inc
pop
(bad)
aam
pop
xchg
imul
dec
mov
push
sub
mov
mov
xchg
add
out
dec
add
mov
stos
push
sub
and
push
ins
sub
pop
push
cmp
outs
mov
and
push
push
add
mov
mov
jnp
fcomp
and
data16
add
pop
cwde
xor
add
aas
push
scas
xchg
add
daa
cmp
and
sbb
and
cld
sub
xchg
inc
shr
xchg
jp
xchg
ds
push
sub
and
add
hlt
add
imul
add
or
and
add
push
dec
pop
add
popa
and
mov
push
stos
dec
cmp
adc
loop
and
out
pop
mov
xor
dec
push
lods
test
lsl
mov
sub
add
cmp
adc
dec
push
pusha
aas
add
enter
sbb
ins
jg
or
or
push
push
push
ret
push
mov
jb
and
pusha
pop
adc
sub
dec
inc
arpl
ror
sub
mov
(bad)
hlt
mov
push
pop
fst
mov
pop
pop
fbld
and
xchg
and
je
pop
aas
mov
xor
cmp
sbb
adc
mov
push
push
outs
mov
and
pop
arpl
add
and
and
sub
push
and
test
inc
scas
dec
add
cmp
(bad)
mov
and
xchg
ss
push
pop
inc
or
add
sub
add
je
adc
adc
add
in
sbb
add
pop
mov
or
and
mov
and
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
call
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
add
add
(bad)
jg
sub
dec
mov
loope
stos
les
sbb
test
pop
and
cs
add
popf
xchg
and
sub
or
push
in
sbb
ret
aas
or
retf
jle
inc
inc
test
ret
mov
std
inc
sbb
aas
call
retf
imul
xor
data16
bound
add
dec
inc
inc
fmul
push
push
mov
add
es
mov
icebp
lods
xor
inc
daa
dec
add
outs
es
inc
push
pop
pop
inc
push
xchg
enter
push
dec
dec
xor
or
imul
mov
inc
mov
push
ret
add
dec
imul
push
pop
lock
enter
movs
jns
push
shl
push
adc
daa
mov
sbb
jecxz
add
pop
add
es
xor
pop
mov
lea
pop
pop
push
dec
mov
xchg
test
xchg
rcl
or
sub
cmps
jb
leave
inc
cmp
inc
outs
mov
arpl
add
xor
sbb
dec
ror
push
push
rol
dec
(bad)
pop
adc
xor
mov
mov
aas
outs
mov
add
daa
nop
xor
sbb
aas
movs
xchg
mov
dec
add
mov
add
jae
loopne
inc
ret
ja
inc
test
and
and
cmp
cmp
or
jecxz
dec
cwde
or
leave
sub
and
daa
retf
xchg
aam
or
inc
lock
mov
adc
add
add
out
mov
shl
mov
fbld
and
loop
out
sub
test
inc
out
out
popa
repz
fiadd
pop
xor
cwde
cwde
jae
pop
jne
and
mov
test
dec
add
adc
sub
pusha
ss
and
inc
add
daa
movs
mov
adc
pop
movs
outs
pop
inc
out
das
sub
sub
add
inc
push
and
adc
inc
mov
inc
xchg
je
mov
mov
call
or
xor
sub
cmps
test
dec
sub
sti
sub
ret
mov
mov
sbb
out
es
call
sub
add
sti
imul
cmp
add
xchg
adc
push
adc
dec
daa
ret
add
or
fwait
addr16
or
xor
add
dec
push
jne
imul
add
xchg
outs
and
cs
jmp
or
add
dec
add
ss
push
inc
rcl
ins
or
and
cs
inc
ret
or
pop
and
inc
add
dec
nop
or
push
mov
lahf
pop
outs
or
or
mov
sub
push
add
iret
mov
jae
jne
add
jg
rcl
imul
sub
mov
shl
arpl
xor
inc
xor
inc
aaa
jg
xchg
jno
cld
xor
add
add
or
mov
test
ja
dec
xchg
shr
mov
push
scas
add
jbe
pop
sbb
add
lea
add
jb
nop
xchg
xchg
xchg
cmp
and
xor
xor
pop
jbe
adc
push
jo
fs
jg
test
push
jbe
mov
cmp
adc
pop
outs
arpl
outs
std
xchg
xchg
fcom
(bad)
xchg
cli
add
sbb
jno
(bad)
dec
arpl
sti
add
xchg
dec
push
and
pusha
out
imul
inc
push
int
and
and
jae
push
inc
dec
mov
loopne
not
imul
sbb
cmps
push
add
push
and
movs
sbb
rol
dec
inc
and
add
adc
inc
outs
jecxz
inc
adc
int
jnp
js
scas
mov
jno
or
sbb
das
dec
popa
aas
aad
mov
pop
push
imul
mov
jne
mov
shl
sub
std
or
dec
dec
jae
fld
rol
mov
sbb
data16
jle
xor
inc
scas
jne
ins
mov
xor
loop
push
sbb
mov
pop
xchg
imul
xchg
and
adc
stos
cmp
xchg
ins
bound
es
in
invd
clc
push
imul
mov
popa
cmp
xchg
xchg
or
xor
push
lds
jne
dec
ret
je
popa
nop
push
or
pusha
mov
sbb
fidiv
cdq
xchg
call
adc
and
jmp
cmp
gs
test
mov
data16
sbb
sub
sar
xor
or
and
jecxz
leave
sub
test
ds
sbb
inc
xchg
movs
rol
hlt
sti
out
xor
outs
sub
dec
js
xchg
ss
push
lods
repz
das
mov
or
xor
xchg
push
or
push
push
sbb
push
lods
je
push
pop
cmp
add
aaa
xor
xchg
push
fisub
aas
xor
jne
mov
and
mov
dec
aaa
(bad)
rcl
inc
shl
outs
outs
outs
lds
sbb
mov
pusha
dec
mov
and
and
fist
mov
test
das
push
or
in
or
add
xor
out
add
mov
int
aam
and
add
dec
and
mov
aaa
in
cmc
jno
in
imul
imul
loop
or
and
pop
push
push
xor
sbb
outs
pcmpgtw
or
xor
test
adc
clc
es
sbb
and
push
xlat
pop
mov
and
xor
cmp
xor
xchg
push
mov
push
push
or
mov
cmps
mov
scas
lahf
push
je
cmp
movs
imul
push
pop
add
(bad)
mov
jae
ins
jne
adc
fmul
add
ror
outs
inc
xor
retf
inc
call
inc
loop
cmps
mov
dec
mov
(bad)
das
fadd
lea
fucomip
push
movs
fucom
(bad)
pop
stos
cmc
push
mov
clc
sbb
out
add
add
aad
adc
aas
jnp
adc
jmp
mov
ins
test
stos
sub
add
pop
push
push
test
or
add
mov
shr
push
push
add
fld
xor
mov
std
or
shl
fistp
inc
(bad)
loopne
pop
sbb
pop
jmp
je
push
or
mov
test
arpl
add
ins
sbb
outs
imul
sbb
and
arpl
mov
and
das
outs
sar
pop
ror
mov
xchg
push
pop
inc
pusha
mov
cmps
inc
jbe
clc
int
mov
aam
push
pop
and
jnp
lods
jo
jo
pop
push
xor
and
xchg
push
push
xchg
add
imul
dec
add
inc
add
sbb
cmp
dec
inc
and
push
dec
adc
fbld
daa
pusha
ins
push
imul
rcl
mov
rcr
sub
push
mov
add
or
(bad)
sub
mov
das
retf
add
add
sub
imul
and
out
xor
pusha
pop
jmp
add
mov
outs
jb
addr16
int3
add
mov
inc
bound
xchg
ins
bound
fcomi
jg
repz
mov
add
pop
neg
jmp
retf
jno
(bad)
lahf
jg
icebp
pusha
inc
mov
clc
ret
movs
add
xor
call
ins
push
fs
ins
outs
rol
or
jg
gs
fmul
nop
aas
cwde
xor
pop
sbb
stos
mov
ja
jle
aas
push
xor
ins
outs
stos
(bad)
or
sub
ret
push
or
or
xor
das
sub
xchg
lds
or
sbb
jmp
test
push
adc
je
jecxz
add
jle
push
or
adc
inc
inc
dec
jae
sahf
lods
push
push
gs
mov
xchg
test
dec
inc
push
pop
je
clc
dec
inc
dec
xor
out
hlt
mov
imul
push
ror
sti
adc
push
shr
gs
or
lods
inc
aas
sti
fs
add
les
mov
pop
(bad)
outs
mov
sub
cmp
(bad)
adc
js
sub
sub
(bad)
rcr
push
mov
pop
xor
or
add
mov
retf
test
cmp
pop
xor
lods
sbb
jnp
xor
xor
out
sbb
sbb
mov
(bad)
popa
inc
daa
test
dec
popw
or
(bad)
cmps
daa
addr16
sub
ins
and
sub
jp
shl
xchg
push
add
push
xchg
ror
push
cwde
inc
add
xor
and
push
pop
pop
or
pop
cdq
inc
xor
and
std
rol
dec
sar
or
adc
cmps
or
mov
rcr
fwait
pop
mov
inc
inc
xor
mov
push
sbb
xchg
sub
xor
add
and
bound
jecxz
adc
push
mov
outs
inc
rcl
mov
iret
or
add
xchg
push
and
or
jo
and
das
add
add
ds
push
xchg
test
icebp
loop
sub
adc
retf
mov
(bad)
ss
inc
pop
cmp
mov
shl
sub
mov
loop
test
ja
das
pop
add
pop
aas
sbb
mov
je
and
jecxz
sub
jecxz
cmp
popa
test
mov
je
and
jo
repz
xchg
pusha
inc
adc
jg
daa
push
fbstp
rcr
jecxz
adc
dec
ror
(bad)
ret
das
adc
fsub
adc
dec
sbb
test
add
push
ret
xchg
aas
cmp
es
outs
and
mov
pusha
les
iret
or
adc
pusha
adc
dec
push
sub
popf
and
ss
push
inc
jmp
pop
mov
dec
popa
loope
jp
pop
or
ffreep
sbb
rol
mov
arpl
js
outs
pop
jae
je
or
add
add
mov
je
push
add
ret
xor
xchg
bound
das
ins
repz
jae
push
add
jnp
dec
rcr
add
or
sbb
hlt
lahf
xor
and
pop
rol
push
pop
pop
fld
ins
inc
or
mov
aas
out
mov
(bad)
aas
and
add
dec
call
jg
test
mov
scas
sub
lahf
mov
imul
ins
add
and
dec
mov
push
sbb
stos
fs
dec
dec
add
sub
mov
sub
add
xchg
mov
sahf
push
adc
mov
addr16
and
push
mov
(bad)
or
or
xchg
mov
bts
mov
ret
dec
and
rcr
add
ffreep
mov
inc
mov
sub
mov
popa
sub
nop
test
pop
sub
sbb
fcomp
(bad)
inc
je
jae
or
add
dec
or
mov
mov
sbb
rcr
aas
cmps
shr
sub
loopne
shr
inc
mov
and
add
sub
mov
stos
add
add
mov
add
loop
push
arpl
rcl
inc
ffreep
out
iret
push
adc
sti
rol
or
or
mov
jae
pop
arpl
sub
push
sub
pushf
add
aas
mov
ins
fisubr
push
(bad)
sub
sbb
xchg
jg
bound
add
sub
sbb
ret
xor
xor
push
push
inc
pop
data16
ss
dec
call
ja
add
add
cmp
adc
and
and
pop
dec
adc
rcl
mov
add
aam
push
imul
(bad)
retf
jmp
adc
popa
mov
loop
mov
out
sbb
ins
cmp
or
xor
data16
mov
outs
inc
adc
cs
xor
or
(bad)
aas
xor
jnp
adc
aaa
pop
shr
cmp
or
retf
push
movs
adc
mov
pop
inc
add
outs
dec
pop
cmps
inc
or
xchg
pop
add
add
push
lock
ins
add
outs
scas
dec
add
bound
add
pop
inc
gs
sbb
fsub
and
cmp
and
retf
outs
(bad)
pop
mov
add
popa
pop
outs
shl
xchg
pop
jb
mov
aaa
and
ins
adc
cmps
shl
sahf
cwde
sub
lods
fidiv
es
jo
lock
mov
pop
outs
jp
ja
dec
add
test
push
xlat
sbb
push
ins
daa
addr16
sbb
clc
sbb
bound
popa
inc
gs
rol
cdq
rol
add
(bad)
push
jae
imul
push
add
dec
add
ins
xchg
outs
pop
adc
xchg
(bad)
daa
jne
xor
fmul
add
pop
lahf
and
in
fsub
gs
add
cmp
pop
div
imul
rcl
outs
pop
gs
adc
call
scas
xor
addr16
jmp
in
daa
mov
or
arpl
loopne
add
jb
repz
and
popa
and
pop
xchg
xchg
xchg
daa
mov
neg
test
arpl
pop
bound
xchg
sbb
jbe
popa
pop
cmp
jo
adc
das
mov
and
xor
loope
mov
push
jmp
sbb
sbb
jns
sbb
retf
cli
imul
imul
dec
mov
xchg
push
dec
je
jge
lahf
movs
jnp
sbb
jb
and
adc
ins
cmp
xchg
sbb
aam
and
mov
ds
jae
imul
push
je
shl
ins
dec
sti
sub
(bad)
pop
(bad)
daa
mov
popa
bound
cs
pop
sub
imul
jns
push
das
movs
std
cwde
jbe
jp
push
imul
and
fisubr
popa
push
imul
popa
outs
ja
pop
fmul
push
pusha
movs
pop
inc
cmps
mov
or
xchg
pop
sahf
add
add
sbb
je
sub
push
mov
lock
and
(bad)
dec
es
jo
pop
fsubr
stos
mov
(bad)
daa
sbb
call
jmp
add
inc
iret
outs
std
daa
and
call
jbe
dec
mov
jmp
inc
add
jl
mov
cmps
ins
loop
pop
dec
out
cmc
aam
(bad)
push
jbe
and
das
inc
pop
add
fsubrp
xor
sbb
dec
cmc
inc
into
fimul
pop
fmul
mov
movsx
dec
mov
jbe
or
call
pop
jnp
mov
push
sti
fsubr
push
scas
cmp
sub
push
mov
mov
pop
sbb
scas
or
into
clc
pop
divps
adc
jle
inc
inc
(bad)
aam
or
ror
out
pcmpgtw
int
push
pop
call
dec
push
(bad)
test
dec
jbe
add
push
or
push
into
xor
and
adc
sahf
cld
pop
cmovg
cld
or
cmove
cmovbe
test
mov
mov
jp
iret
ds
cmovge
setle
jae
fimul
dec
mov
or
nop
nop
jb
mov
push
mulps
loopne
add
sbb
(bad)
enter
push
pop
jnp
lods
mov
lfs
lods
push
dec
and
inc
inc
sahf
movs
push
mov
pop
ds
test
jl
pop
fist
push
dec
dec
es
or
pop
dec
pop
andps
xadd
out
adc
xor
imul
sti
dec
add
pop
inc
sbb
dec
sahf
or
je
outs
pop
cld
push
call
lods
out
(bad)
(bad)
push
bswap
dec
sub
mov
or
or
adc
add
mov
stos
sub
sbb
fcom
sbb
(bad)
xchg
jne
sub
jo
inc
loope
xor
or
push
jo
ja
fadd
jo
adc
outs
scas
dec
dec
mov
es
inc
push
aaa
movs
jno
pop
add
cmp
ret
jno
dec
add
add
xor
or
jno
clc
adc
inc
out
dec
inc
enter
jmp
sub
jl
xchg
pop
xor
ss
shr
dec
inc
push
mov
push
fistp
adc
dec
pop
jno
pop
pop
or
inc
or
mov
sub
pop
stos
and
add
inc
push
jbe
shl
and
sbb
aaa
and
and
and
es
popa
dec
cmp
push
sahf
dec
xchg
daa
xchg
test
pushf
inc
fldcw
ss
pusha
movs
ins
les
arpl
pop
nop
jb
cmp
mov
pusha
ins
sub
mov
xchg
cmp
jnp
fisub
pusha
inc
jbe
fst
mov
adc
lahf
test
dec
sbb
test
in
fs
pushw
pop
mov
cmp
and
mov
pop
lea
mov
sbb
sub
inc
imul
add
aas
cmp
xchg
loopne
or
xor
shr
sub
(bad)
bound
sbb
jbe
lea
xchg
sbb
push
mov
jbe
inc
dec
push
jne
je
and
cmp
cmp
sbb
scas
gs
jge
jg
xor
and
rcr
fidiv
or
push
xchg
out
pandn
stos
or
outs
jae
mov
jb
daa
adc
mov
pusha
clc
mov
jg
mov
or
out
push
lea
pop
(bad)
in
mov
das
mov
xchg
mov
inc
add
bound
scas
mov
pop
cmp
cmp
ficom
adc
or
ds
push
das
push
sub
sub
inc
jl
add
adc
xlat
fnstcw
out
lahf
pop
pop
data16
sub
pop
or
enter
sbb
daa
call
and
push
and
ds
sbb
ja
lahf
pop
jne
fucom
and
or
add
(bad)
das
jo
ss
xor
aam
sbb
or
fmul
fcom
fidivr
jo
ja
ficomp
push
(bad)
fs
sub
data16
mov
iret
repz
pushf
nop
test
into
repz
repz
cmc
mov
popa
mov
mov
jnp
push
pop
ss
push
cmp
jnp
(bad)
push
push
dec
push
dec
inc
inc
mov
iret
repz
sub
cmp
and
sub
and
sahf
out
sub
aas
push
adc
push
or
dec
cmp
or
add
cld
gs
clc
pushf
push
hlt
repz
jnp
lock
in
call
cmp
(bad)
aam
int3
enter
cmp
mov
jg
test
repz
js
inc
and
(bad)
fs
out
push
les
ja
out
cld
arpl
arpl
loopne
jns
out
lods
movs
cwde
mov
lahf
out
and
bound
push
test
repz
mov
sbb
outs
pop
cmps
nop
loope
popa
cmps
sub
sbb
outs
adc
xor
pop
shr
iret
adc
outs
or
dec
pop
cmps
sbb
jo
shl
or
(bad)
mov
push
pop
popa
mov
jg
ja
add
and
ret
jnp
sub
test
xlat
test
je
mov
or
jns
push
xor
mov
pop
push
pop
call
outs
outs
mul
fdecstp
adc
ins
fs
sbb
sbb
ret
or
not
dec
jae
pop
mov
pop
mov
or
pop
outs
add
and
repz
cmp
jne
add
dec
or
and
push
sub
or
adc
data16
sbb
pusha
adc
xchg
pop
and
or
pop
iret
and
mov
mov
adc
(bad)
retf
mov
mov
add
ins
dec
add
arpl
or
shl
out
sub
push
push
pop
sub
sub
or
mov
lock
popa
ja
add
fidivr
push
push
and
hlt
dec
sbb
xchg
jnp
loopne
(bad)
pop
(bad)
pop
xchg
stos
outs
loop
inc
adc
es
cmp
ret
out
sub
data16
push
cmps
nop
push
bound
jb
push
jo
lods
(bad)
addr16
or
out
outs
rol
mov
mov
outs
cmp
pusha
pop
daa
push
sub
xor
fadd
das
or
test
add
jae
or
push
add
dec
xchg
jg
ins
test
sbb
sti
data16
mov
pop
pushf
ret
or
and
bound
iret
test
push
xchg
das
mov
push
mov
das
xchg
sbb
pop
push
ss
fdiv
sub
popa
add
sub
or
(bad)
addr16
and
xchg
das
adc
ja
sub
movs
aas
xor
push
dec
inc
dec
dec
pop
mov
popa
loopne
jnp
aas
xor
sub
and
and
push
push
sbb
inc
adc
cmps
repnz
pop
imul
push
fwait
xchg
inc
dec
inc
mov
or
fbld
and
test
or
popa
xor
scas
pop
pop
ret
out
mov
lods
inc
mov
pop
sub
inc
mov
mov
movs
add
mov
and
mov
iret
imul
or
mov
lahf
addr16
out
xchg
(bad)
out
ja
sbb
test
fisub
xchg
les
dec
gs
gs
inc
and
sbb
adc
imul
(bad)
test
push
cmp
dec
sub
mov
outs
test
int
adc
dec
mov
test
outs
inc
mov
or
and
mov
nop
mov
mov
cmp
pop
sbb
push
aam
and
pop
rol
cmp
inc
jbe
push
pop
or
jb
pop
ret
sub
xor
add
and
cmp
push
or
ret
xchg
sbb
stos
add
jb
call
push
or
repz
sbb
or
(bad)
mul
data16
push
inc
inc
pop
sbb
or
fst
add
xchg
sbb
jbe
arpl
xchg
aam
jo
mov
pop
cmc
sbb
mov
popa
xlat
call
enter
arpl
ins
xchg
outs
outs
gs
and
leave
mov
sub
imul
mov
add
je
mov
push
xchg
(bad)
jbe
push
inc
adc
xchg
aam
hlt
jne
fistp
lahf
pop
je
gs
loop
mov
daa
add
shr
ret
lea
bound
dec
sub
push
ds
jnp
outs
sub
call
add
jle
jae
xchg
movs
(bad)
mov
push
fbld
inc
adc
adc
adc
cmp
movs
mov
sti
pop
in
sbb
xchg
and
pusha
push
pop
sub
xchg
fistp
ret
ror
and
dec
xor
pop
sbb
xchg
mov
pop
imul
inc
and
iret
out
and
adc
mov
jle
movs
push
dec
push
push
and
outs
test
inc
ins
scas
xlat
add
ja
fs
push
cmp
scas
les
xor
push
shl
dec
inc
stos
cmp
jmp
pop
push
fiadd
pop
push
add
sar
or
inc
aas
dec
push
push
daa
gs
aam
jbe
retf
adc
inc
js
aas
or
in
fdiv
cmp
test
fstp
sbb
xchg
add
push
sbb
paddsb
sbb
or
add
or
pop
cmp
xchg
mov
sbb
pop
inc
jl
repz
jbe
nop
fs
and
loopne
jecxz
inc
(bad)
mov
pop
adc
outs
xor
xor
xor
add
(bad)
sub
outs
adc
pop
xor
add
add
sub
outs
adc
xlat
or
add
jno
xor
or
mov
xor
aas
gs
add
or
jbe
sub
jg
jno
or
aas
add
mov
sbb
push
pop
pop
cmp
(bad)
ja
xor
retf
arpl
mov
xor
aas
sub
scas
aaa
imul
(bad)
(bad)
(bad)
xchg
sar
rcl
lods
nop
mul
inc
adc
repnz
adc
push
ds
cmps
mov
and
cdq
fcom
mov
inc
mov
jl
pop
loope
jns
xor
into
pop
push
ins
idiv
adc
inc
cld
call
mov
loopne
mov
ds
popf
jae
jno
iret
call
push
movs
dec
out
push
mov
xor
leave
pop
(bad)
xor
les
lods
pop
add
clc
call
call
mov
jbe
lahf
mov
add
lds
xor
inc
cmp
push
mov
jg
dec
addr16
out
push
lods
jno
add
daa
pop
sub
mov
gs
data16
dec
jo
std
push
xchg
scas
ins
aaa
cs
mov
pop
(bad)
repnz
push
sahf
dec
rcl
enter
(bad)
(bad)
push
test
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
cmp
out
mov
dec
fcomip
into
dec
adc
adc
ins
dec
mov
into
push
inc
test
inc
dec
inc
mov
inc
out
out
(bad)
(bad)
push
ins
push
sub
xchg
pop
add
popf
add
pusha
mov
ss
outs
daa
es
mov
neg
dec
(bad)
pop
add
das
mov
add
add
mov
and
mov
lods
pop
push
add
test
jle
jmp
add
lahf
jl
mov
rcr
daa
aad
pop
test
dec
add
mov
xor
aaa
and
nop
pushf
xor
ret
add
clc
cs
xchg
or
imul
fcomp
in
cld
addr16
xchg
sbb
inc
test
dec
das
sbb
lds
cmp
cmp
outs
and
push
and
or
aaa
push
fsubr
pop
in
dec
mov
rcr
daa
push
(bad)
in
fld
je
clc
(bad)
push
jns
pushw
cmp
outs
mov
cmps
jg
or
or
jbe
(bad)
mov
je
xchg
xor
adc
mov
adc
adc
ja
es
add
scas
xchg
call
jg
aaa
and
dec
inc
xchg
in
push
loopne
xchg
jl
cwde
iret
sbb
jg
iret
cmps
div
mov
or
add
xor
ret
enter
push
call
pusha
cmp
out
faddp
icebp
jge
dec
sbb
and
cmps
iret
dec
jg
pusha
mov
neg
jl
mov
(bad)
xchg
or
push
enter
cmp
or
xchg
rcl
mov
sub
push
xor
outs
and
xor
or
outs
clc
es
js
mov
je
test
ja
xor
adc
mov
add
aaa
les
int3
daa
mov
js
movs
dec
cld
das
or
and
cmp
test
jo
or
mov
adc
push
mov
cmps
loopne
inc
lock
scas
pushf
add
pop
(bad)
pop
test
(bad)
enter
xlat
cs
jo
test
mov
adc
dec
add
xchg
adc
and
mov
outs
rcr
dec
push
xchg
add
push
add
pop
add
or
fadd
inc
sbb
in
ins
das
jbe
xchg
add
dec
hlt
mov
mov
cmp
add
out
lahf
add
out
shl
hlt
lahf
and
inc
mov
loopne
jge
push
push
pusha
mov
and
fild
aaa
inc
mov
pusha
dec
nop
mov
lock
or
mov
adc
add
pusha
xchg
xchg
mov
lds
mov
aas
pop
call
ffreep
dec
xor
lea
(bad)
xlat
outs
fiadd
pop
dec
jl
jl
(bad)
loopne
jl
es
add
paddusb
lahf
aaa
cli
push
add
xchg
push
pusha
or
jle
inc
fdiv
adc
mov
cmps
sbb
rol
add
out
fimul
push
aam
xor
xchg
add
mov
ja
mov
mov
add
mov
fimul
add
or
test
xchg
mov
(bad)
aas
ins
loope
xchg
neg
add
push
test
or
cmp
push
fwait
nop
(bad)
movs
inc
xchg
xlat
movs
sbb
das
out
xor
clc
pop
mov
nop
nop
lahf
mov
jo
scas
ja
out
mov
jmp
iret
mov
jnp
in
push
cld
push
sbb
pusha
xchg
and
ja
mov
sub
adc
xchg
inc
xchg
cmps
add
(bad)
icebp
or
pcmpeqb
mov
mov
push
movs
pop
pop
mov
mov
jl
rcl
shr
mov
pop
add
push
pusha
sbb
xchg
push
aas
outs
addr16
aad
push
add
dec
cmp
inc
pusha
xchg
xadd
jg
dec
nop
xchg
jno
outs
bound
fcom
das
jbe
daa
nop
xchg
add
(bad)
xchg
add
push
add
inc
rol
mov
xchg
mov
dec
add
(bad)
lock
je
inc
add
mul
xchg
mov
int3
push
fcom
ins
mov
xchg
fistp
or
inc
pusha
or
mov
mov
dec
push
xchg
daa
pusha
push
ins
lds
or
xchg
xlat
faddp
(bad)
dec
pushf
xchg
lods
push
mov
pop
and
push
(bad)
xchg
clc
push
add
xchg
add
fild
dec
xor
in
pop
push
call
push
xchg
sub
dec
enter
dec
dec
adc
push
pushf
xchg
dec
pop
in
pop
enter
int3
xchg
fmul
add
xchg
jo
clc
neg
dec
sbb
xchg
test
xchg
xlat
faddp
fidiv
adc
fmul
and
faddp
xchg
rcr
xchg
fadd
fiadd
cld
xchg
inc
cmps
push
loopne
xchg
mov
or
dec
xchg
xchg
mov
mov
push
fs
lahf
cmp
xchg
sahf
aaa
add
xlat
dec
xchg
in
or
lds
pop
xchg
aad
and
xchg
test
xchg
scas
mov
push
clc
daa
test
xchg
addr16
aaa
lods
dec
sub
xchg
cmp
push
cwde
ja
push
or
lods
mov
mov
cwde
pop
adc
mov
xchg
push
es
pusha
dec
int3
cwde
pop
fadd
mov
push
or
pop
aaa
pusha
(bad)
ja
xlat
and
add
add
xor
cmps
pop
pop
mov
cdq
das
add
cdq
das
mov
sub
adc
test
mov
push
enter
push
add
lahf
fdiv
mov
adc
dec
add
add
push
push
call
or
iret
aaa
dec
test
cmps
and
call
pop
xchg
out
addr16
rcl
hlt
mov
adc
cmps
fwait
ja
push
xor
adc
ja
daa
dec
fs
aam
xlat
daa
push
call
and
daa
packuswb
pop
mov
dec
rol
or
shl
daa
mov
inc
ror
jecxz
pushf
prefetcht2
and
daa
or
jno
mov
add
pop
ins
mov
nop
(bad)
xchg
fs
jo
mov
push
outs
das
mov
nop
adc
addr16
iret
mov
lahf
add
jl
jbe
inc
lahf
sahf
lock
clc
and
cli
into
cld
pushf
call
sbb
mov
pop
neg
xchg
dec
dec
popf
iret
sub
ficomp
cmps
sbb
pop
jg
dec
mov
cmps
mov
les
pop
mov
fs
js
sahf
out
sahf
cmps
pusha
loope
nop
or
test
sahf
loope
mov
push
cmp
pop
adc
test
test
mov
mov
call
mov
lahf
pop
lds
mov
call
(bad)
dec
inc
lahf
xlat
push
push
pop
lahf
xchg
add
popf
cld
xchg
xlat
outs
jge
imul
xchg
dec
mov
cmp
mov
imul
xor
fcom
cs
mov
dec
inc
clc
dec
and
call
inc
push
pop
stos
fld
outs
test
or
mov
mov
push
push
inc
loope
or
push
aam
lds
or
xchg
test
cmp
xchg
mov
jnp
pop
(bad)
daa
push
sbb
push
dec
push
push
out
push
and
ja
xchg
daa
test
ss
cmps
mov
xchg
mov
or
dec
mov
push
loope
mov
xchg
add
enter
in
popf
fist
jmp
mov
dec
mov
mov
sub
pop
add
inc
dec
dec
hlt
out
mov
push
mov
adc
ja
hlt
xchg
push
push
pop
ins
dec
add
push
cmp
ja
pop
in
cmp
push
mov
pop
jb
pop
jl
xchg
mov
jnp
loopne
lock
movs
lahf
out
inc
cs
xchg
loopne
dec
xor
call
push
lahf
and
in
pop
in
pop
xchg
dec
sbb
jb
pop
rol
dec
shl
xchg
pop
in
and
rcl
jbe
pop
call
inc
movs
outs
inc
push
dec
daa
call
add
addr16
push
js
xchg
cmps
(bad)
mov
add
daa
or
shl
shl
dec
adc
iret
xor
mov
or
xchg
sbb
sub
push
in
test
das
push
xchg
outs
jo
adc
jo
fwait
or
mov
inc
xchg
(bad)
das
out
cdq
test
mov
in
shl
dec
cmps
push
cmps
push
xor
dec
mov
loopne
push
test
call
dec
mov
add
fstp
sub
mov
out
mov
or
outs
cmps
jmp
push
pushf
cmps
outs
add
xchg
fwait
nop
adc
mov
xchg
or
addr16
xchg
or
jo
or
adc
test
pop
xchg
daa
fimul
lahf
pusha
test
and
ret
jo
int3
inc
xchg
imul
test
mov
add
jo
jmp
pop
leave
add
outs
adc
test
fisttp
cdq
nop
sbb
xchg
ja
and
push
adc
pop
popa
stos
sbb
add
add
mov
pop
das
pusha
lahf
dec
in
pop
nop
test
mov
push
(bad)
mov
sbb
inc
push
pop
pop
mov
pop
ja
dec
pusha
mov
loope
stos
mov
xor
stos
xchg
push
aam
lock
adc
aas
or
dec
(bad)
xor
mov
sbb
sbb
mov
or
push
stos
pop
or
cmp
sub
stos
push
or
mov
addr16
fnstsw
lods
addr16
fistp
inc
mov
ja
cwde
inc
sbb
push
xchg
fmul
sub
cmps
add
stos
outs
and
xchg
pop
push
ins
lods
test
rol
cdq
(bad)
lahf
in
adc
mov
cdq
lahf
or
adc
cdq
(bad)
cmps
les
scas
add
cmps
jg
inc
lock
xor
inc
lods
pop
adc
jo
ja
imul
add
dec
je
test
xchg
push
mov
lahf
lock
lods
mov
adc
mov
or
scas
adc
scas
push
cmp
add
jbe
ja
call
jmp
ja
test
outs
xchg
push
movs
push
shl
(bad)
inc
shl
loopne
bound
in
cmps
movntq
outs
(bad)
outs
out
pusha
ret
iret
xor
cmp
test
aaa
addr16
add
xchg
xlat
dec
push
cmp
out
mov
add
push
scas
push
pop
lahf
mul
enter
cld
cmp
pop
mov
call
add
sbb
mov
mov
fwait
addr16
mov
aam
add
push
ja
aaa
dec
mov
int3
pop
adc
mov
dec
addr16
in
mov
dec
adc
aad
cwde
fwait
(bad)
mov
les
inc
push
shl
mov
test
repz
push
js
xchg
dec
pop
add
fwait
dec
aam
lods
and
mov
shr
lock
pop
hlt
cdq
add
mov
outs
inc
xor
jle
outs
lock
jg
call
dec
xchg
scas
jl
scas
add
mov
push
cmp
pop
pushf
push
xlat
outs
xlat
faddp
sahf
rol
jl
mov
test
or
cwde
fdiv
adc
lahf
test
add
mov
dec
pop
lahf
ins
push
jl
out
inc
cs
rcr
in
out
bound
fsub
cmps
sbb
dec
in
cmp
daa
adc
mov
mov
and
xor
adc
(bad)
ja
adc
mov
adc
das
push
jl
aas
popf
jnp
dec
push
call
sbb
push
pop
jnp
jb
jo
clc
xchg
or
ror
test
or
test
dec
inc
mov
ret
inc
lock
push
push
fs
cwde
addr16
and
xchg
and
movs
push
mov
shr
ja
ror
loopne
in
mov
cld
jbe
(bad)
bound
sub
cmps
sahf
(bad)
mov
in
dec
xchg
call
push
mov
or
push
dec
dec
sbb
push
lahf
sub
mov
shl
das
push
in
mov
inc
sahf
dec
ret
xchg
pop
add
mov
mov
dec
add
mov
jo
add
iret
mov
or
mov
or
fdivr
dec
(bad)
(bad)
enter
das
test
test
(bad)
mov
in
xchg
add
lahf
(bad)
mov
mov
loop
pop
pop
mov
add
ja
mov
push
mov
adc
xor
or
cld
inc
mov
es
in
dec
add
and
push
add
in
pusha
mov
mov
fisttp
mov
call
mov
(bad)
mov
nop
lahf
test
push
mov
lock
mov
xchg
and
or
ja
mov
add
push
ja
push
aas
mov
add
scas
jl
add
repz
push
rcl
ret
out
push
mov
fadd
dec
adc
push
clc
mov
outs
outs
inc
outs
and
cmovns
or
bound
xchg
xchg
jbe
jbe
push
test
js
outs
les
xchg
mov
mov
mov
addr16
les
ror
mov
sti
lock
push
aas
mov
cld
mov
mov
nop
mov
mov
(bad)
mov
das
dec
nop
xchg
mov
inc
cs
pusha
nop
cwde
dec
fcom
in
push
clc
xchg
cwde
mov
inc
fdiv
fidiv
cmp
inc
mov
inc
pusha
outs
das
xchg
push
adc
pop
mov
aas
ja
mov
out
push
or
mov
out
mov
(bad)
out
dec
call
and
enter
cmp
dec
test
ja
dec
xor
call
pusha
or
ficom
js
mov
fist
dec
cmp
mov
fistp
inc
call
mov
scas
add
jo
ffreep
(bad)
hlt
push
add
das
pop
enter
mov
iret
inc
lock
xor
(bad)
mov
add
mov
pop
dec
adc
fild
dec
int3
mov
aaa
fsubr
inc
sub
push
or
mov
iret
ror
jg
jbe
js
movaps
xchg
shr
push
rol
add
xchg
push
fwait
push
(bad)
pop
neg
(bad)
test
mov
(bad)
popa
mov
mov
movs
mov
and
adc
and
add
movs
dec
clc
cs
push
pusha
shl
adc
xor
out
dec
push
clc
dec
nop
sar
lahf
mov
adc
lahf
inc
ja
ja
dec
loopne
lock
ret
in
loopne
xchg
lahf
loopne
mov
xor
call
push
ret
mov
lahf
ja
cmp
sbb
push
mov
lahf
and
jbe
ja
movs
(bad)
bound
cmps
mov
push
lds
add
call
and
pop
sub
das
and
and
dec
push
ret
push
adc
fbstp
movs
push
push
mov
shl
daa
pop
push
push
jne
pop
mov
mov
lock
ins
mov
syscall
xor
les
mov
sbb
mov
aaa
dec
pop
les
xchg
or
push
jl
xlat
bound
inc
dec
movs
call
clc
dec
lods
aaa
mov
and
push
aaa
lods
xchg
adc
pop
and
jno
pop
inc
(bad)
cmps
jge
dec
adc
xchg
movs
dec
inc
lds
push
add
(bad)
and
cmp
sub
and
adc
out
mov
rol
sub
(bad)
(bad)
pop
fwait
and
test
inc
pusha
mov
vshufps
push
xchg
(bad)
push
aas
out
hlt
arpl
bound
sar
dec
push
pop
(bad)
daa
push
pusha
or
shr
xchg
in
out
adc
sub
jle
push
sti
cmp
sar
inc
pop
jg
jns
iret
repz
es
mov
xor
out
cmc
sbb
cmp
iret
jae
mov
out
sahf
arpl
dec
repz
adc
sub
jns
out
fiadd
fmul
idiv
cmp
repz
fld
out
sahf
cmps
pop
jns
shl
out
cmp
sbb
data16
jecxz
fsub
repz
mov
fidiv
jns
pop
jbe
(bad)
loopne
sahf
data16
xchg
cmc
loope
loop
xchg
repz
and
out
mov
fwait
in
in
push
mov
int
out
sub
dec
mov
xor
int
call
imul
in
clc
cmp
pop
inc
add
push
mov
xor
ja
push
scas
or
aas
jae
imul
out
xchg
iret
repz
pop
out
pop
jge
jmp
int
jns
lock
mov
and
push
mov
repz
mov
sub
scas
call
repz
lahf
hlt
iret
ds
cmp
or
mov
push
mov
mul
fucom
sbb
idiv
push
(bad)
out
xor
repz
clc
nop
mov
stc
int
jns
mov
sahf
out
cmp
mov
sti
outs
mov
out
jl
cld
aad
std
inc
rcr
out
(bad)
mov
std
sahf
inc
xor
clc
cmp
push
xchg
fsub
call
push
cmp
sahf
xchg
rol
dec
push
and
cmp
addr16
push
push
add
iret
std
dec
add
jge
rcr
inc
push
scas
jmp
jns
shr
adc
aaa
add
iret
repz
mov
out
call
or
xor
cmps
or
into
push
dec
or
rol
or
or
or
movs
clc
cmp
adc
out
mov
bswap
jmp
jge
out
push
xor
xor
mov
xchg
or
(bad)
adc
mov
ins
sub
iret
repz
or
cmp
test
cmp
and
inc
jb
cmp
out
mov
or
xor
repz
(bad)
sbb
jns
cmps
inc
mov
cmp
dec
outs
cdq
mov
adc
inc
xor
ja
push
shr
jo
out
call
ins
sbb
sbb
cmp
iret
pop
push
push
ror
lods
jl
loopne
aam
and
push
test
iret
shl
mov
cmp
out
cmp
pop
xchg
sbb
adc
push
sub
push
out
ds
call
repz
push
mov
daa
sbb
sub
sub
sub
push
out
ds
sahf
in
sub
repz
lahf
lock
test
ret
out
call
dec
call
xor
(bad)
call
ss
add
mov
xor
cmp
repz
mov
lods
jns
loope
out
sub
push
push
je
lahf
out
out
das
cmp
lods
sti
jbe
fsubrp
repz
hlt
inc
cmp
push
cmps
ds
repz
xor
cmp
repnz
lahf
idiv
clc
xor
push
inc
jbe
clc
push
inc
or
push
js
fiadd
es
xchg
inc
ds
bound
inc
mov
mov
jl
in
inc
mov
push
xchg
dec
jle
jns
out
icebp
mov
dec
push
push
dec
sahf
push
shr
dec
repz
dec
arpl
pop
dec
pushf
repz
lahf
out
mul
dec
jbe
jge
cmps
movs
iret
stos
xor
imul
movs
enter
push
mov
push
inc
inc
push
into
push
repz
fwait
out
cmps
push
cdq
push
outs
push
outs
push
fdivr
or
dec
push
mov
or
push
sahf
out
out
or
push
test
pop
sub
cmps
sbb
popa
push
frstor
pop
fsubp
repz
mov
arpl
repz
sub
gs
out
loopne
ds
les
outs
push
dec
push
dec
mov
scas
mov
push
imul
xor
mov
sbb
(bad)
jo
push
cwde
dec
fidivr
push
cmp
and
sub
jbe
aaa
shl
push
xor
fisttp
js
iret
repz
push
push
cmp
imul
into
jl
add
out
loopne
jge
jg
sbb
lahf
ja
push
add
out
inc
iret
stos
adc
add
inc
(bad)
out
xchg
or
mov
lahf
mov
aad
sbb
cmp
repz
mov
repz
adc
sahf
ja
out
in
or
iret
mov
mov
mov
out
xchg
push
mov
loope
mov
(bad)
jbe
outs
ds
lock
inc
nop
pop
push
lock
(bad)
xchg
push
push
es
xchg
push
mov
xchg
push
aaa
cli
push
lahf
in
nop
xchg
mov
push
out
neg
sub
dec
push
add
xchg
jbe
iret
repz
fadd
fwait
ins
test
daa
shl
mov
popf
out
sahf
mov
(bad)
jl
out
sbb
mov
lock
push
push
hlt
xor
hlt
push
adc
mov
cmc
push
xor
jmp
jl
mov
cwde
jmp
out
ds
enter
cmps
push
js
sbb
test
adc
add
repz
lock
idiv
cmp
adc
retf
inc
push
shl
sahf
pop
sub
sahf
aaa
cs
mov
xor
out
push
mov
jns
iret
repz
clc
xor
pop
nop
sahf
ja
out
lock
out
idiv
sbb
iret
repz
lahf
aam
mov
push
imul
xor
sub
push
mov
loopne
repz
add
push
inc
pusha
xchg
out
or
or
sahf
out
xlat
and
fwait
shl
iret
sbb
inc
jbe
clc
jl
aaa
clc
cmp
adc
repz
sbb
push
push
js
fdiv
jns
loope
mov
or
push
push
pusha
mov
dec
test
and
mov
and
jle
aad
jns
jo
sub
pushw
fwait
repz
out
repz
ret
push
push
mov
jns
iret
out
sbb
push
push
test
jmp
nop
mov
ds
fiadd
js
loope
iret
pop
jge
mov
pusha
mov
clc
add
xchg
pop
xchg
mov
hlt
sbb
jle
test
jl
leave
es
pop
xchg
leave
iret
repz
push
xchg
mov
jns
retf
mov
ret
int3
fdivp
push
lahf
out
shl
int
push
pop
ja
cmp
mov
push
outs
lock
jnp
call
sbb
rcl
push
jns
add
jbe
push
repz
push
loopne
out
ds
fiadd
push
icebp
jns
adc
mov
mov
dec
out
pop
push
shl
sub
add
mov
add
cwde
add
sbb
xor
addr16
inc
adc
push
pop
ds
rcl
pop
push
ss
or
test
outs
add
scas
ss
sbb
pusha
jmp
or
aam
push
shl
cmp
movs
push
enter
add
leave
lods
inc
shl
into
add
inc
dec
aad
mov
xlat
lods
push
push
push
(bad)
jo
mov
sub
pop
aad
(bad)
ja
sub
mov
shl
inc
jae
mov
addr16
addr16
lock
mov
sbb
pop
push
dec
out
push
jl
mov
jl
sub
out
fst
aaa
test
push
imul
mov
scas
mov
pop
jb
adc
jmp
repz
dec
into
cmp
addr16
aam
daa
adc
or
dec
inc
and
inc
ds
scas
jge
aam
pop
(bad)
iret
repz
push
add
idiv
xchg
test
cmp
test
(bad)
push
xchg
xlat
(bad)
icebp
and
xlat
push
aas
jmp
aas
xor
fimul
aad
pusha
les
add
mov
xchg
xchg
xchg
pop
push
fcom
dec
pop
or
mov
xor
add
inc
xchg
xchg
xchg
pushf
and
xor
inc
(bad)
dec
scas
fiadd
js
das
xchg
xchg
mov
jo
cmps
rcr
test
or
mov
iret
loopne
dec
jg
in
and
cmp
dec
fisubr
arpl
fidiv
or
xchg
(bad)
(bad)
mov
addr16
call
repnz
mov
(bad)
dec
add
pop
ja
fild
xchg
mov
pushf
pop
xor
fsubr
pushf
in
jb
and
xor
sub
xchg
and
mov
in
stos
in
aam
push
leave
mov
hlt
and
sub
jb
fnstsw
xchg
scas
test
mov
mov
dec
xchg
pop
xlat
out
outs
push
std
adc
xchg
dec
mov
dec
daa
shl
push
fsubr
(bad)
ja
fidiv
ins
mov
xlat
out
inc
push
and
dec
outs
mov
iret
sbb
cmp
ret
out
ins
fidivr
mov
(bad)
push
aam
jb
mov
lahf
shl
add
loopne
mov
jb
dec
fild
fsubrp
xor
fisttp
pmaxsw
(bad)
(bad)
loop
xchg
push
out
ds
data16
in
aas
js
cmc
jne
or
into
aad
mov
fnstenv
xchg
loopne
fnstenv
fxch
inc
fld
dec
adc
nop
(bad)
jns
daa
xor
lock
fwait
loope
addr16
pop
pushf
ja
loopne
sub
xchg
inc
xor
shr
in
fild
cmps
iret
inc
dec
push
mov
cmp
mov
loopne
or
pop
adc
cmp
fidiv
fimul
fidivr
loop
fisubr
das
push
(bad)
cmc
add
dec
loopne
mov
and
cmp
sub
cmp
dec
push
jo
test
fist
and
mov
lods
sbb
rcl
add
ret
push
sbb
loope
out
fimul
mov
xchg
outs
call
ficom
cmp
and
pushf
pop
loop
loop
mov
cmp
pop
(bad)
dec
xor
cwde
loop
add
fdiv
ret
dec
dec
dec
mov
xchg
sub
inc
push
lock
add
pushf
jecxz
pushf
inc
into
pop
fs
fadd
or
rcl
sbb
dec
add
test
push
lea
ins
push
pop
gs
fucomip
cs
fldcw
adc
out
fcom
xor
out
fs
mov
fdivr
jl
loopne
outs
das
test
mov
xchg
scas
in
sbb
(bad)
mov
mov
mov
xlat
pop
(bad)
xlat
clc
pop
fisubr
adc
push
mov
fstp
and
or
(bad)
ja
cmp
push
push
or
ja
js
emms
pop
xchg
push
adc
into
cmc
xchg
aaa
rcr
sbb
and
push
inc
sbb
(bad)
pop
fidivr
jo
or
mov
in
add
and
cmp
shl
loopne
daa
lock
loopne
dec
xchg
pop
sub
push
mov
out
inc
dec
icebp
xchg
(bad)
ficom
jecxz
pop
loopne
(bad)
jmp
out
div
je
addr16
out
or
out
push
ins
mov
fucomip
and
or
out
cmp
or
out
aaa
lds
pop
dec
push
push
outs
fucomip
fs
jmp
outs
fucomip
jp
adc
ret
push
adc
push
adc
mov
repz
test
enter
jg
out
loopne
scas
cmp
call
fistp
mov
(bad)
or
cmps
mov
jb
enter
loopne
loopne
loopne
cs
pop
out
das
jo
rol
add
loopne
dec
jle
push
daa
stos
loopne
jbe
(bad)
adc
mov
xchg
aas
out
or
sbb
daa
daa
pop
fsubr
loop
jb
daa
in
loopne
clc
loopne
loope
inc
mov
loope
loope
loope
mov
out
loope
loope
xchg
and
loope
loope
loope
cmp
jl
xchg
xchg
loope
loope
icebp
inc
mov
fs
out
mov
sbb
inc
inc
popf
xchg
in
out
iret
jo
out
sbb
and
sub
push
jmp
in
cmp
loop
pop
loop
cwde
ja
push
mov
jg
(bad)
jmp
adc
xchg
xchg
xchg
out
rsm
mov
dec
rcl
loop
or
in
mov
syscall
jecxz
leave
leave
leave
or
ret
fwait
xor
mov
jecxz
jbe
es
jnp
and
shl
sub
hlt
jmp
jle
scas
cmps
aaa
mov
cmpxchg8b
(bad)
iret
xlat
fisttp
cmp
out
(bad)
emms
out
jnp
(bad)
xor
addr16
das
sbb
lea
xchg
in
cmp
cmp
imul
cmp
jae
or
aaa
scas
dec
in
jb
xor
mov
(bad)
dec
cmc
jbe
into
(bad)
cmps
fsubp
mov
fiadd
aas
mul
mov
jo
push
in
in
(bad)
cli
in
add
cmp
pop
in
xchg
pmuludq
pop
inc
cmp
push
mov
in
outs
lahf
cmp
dec
inc
in
in
sbb
scas
mov
in
loopne
cmp
punpckhwd
(bad)
jno
pushf
cmps
(bad)
pop
xchg
in
dec
in
add
add
dec
cs
xlat
or
in
loop
push
xlat
mov
ret
in
mov
das
outs
in
push
cmc
add
in
loop
test
(bad)
bswap
cwde
loop
add
das
in
aad
sub
aaa
out
cwde
inc
xlat
adc
pop
out
es
pushf
loope
addr16
xchg
mov
daa
ins
outs
xchg
aaa
nop
out
add
call
pop
test
ret
xchg
xchg
xchg
(bad)
iret
(bad)
out
sbb
cmp
out
lsl
or
cmp
cmp
sbb
mov
out
pop
out
aaa
mov
jb
out
out
out
out
sbb
cmps
test
pop
inc
pop
mov
sahf
in
iret
pop
call
dec
lods
mov
pop
mov
je
add
xchg
push
popf
jecxz
out
xlat
out
(bad)
daa
mov
(bad)
out
pop
mul
dec
out
call
pusha
sub
cwde
sbb
sbb
lock
sbb
lock
nop
push
pop
call
dec
pusha
packssdw
jns
xchg
or
lods
(bad)
dec
ret
call
lahf
into
call
call
cmp
call
jmp
adc
daa
jmp
lahf
es
scas
jae
in
fild
out
push
minps
aaa
dec
push
sbb
icebp
cmps
leave
pop
rcl
fsubr
cmps
out
out
leave
enter
inc
jmp
lahf
push
jmp
fmul
dec
pop
adc
daa
mov
outs
adc
ja
das
call
pusha
rcl
cmp
(bad)
push
mov
int3
repnz
mov
sub
pop
inc
push
or
adc
push
and
ja
repz
mov
repz
ja
jmp
arpl
sbb
repz
xchg
fild
pop
aam
xchg
xchg
mov
leave
leave
inc
ret
mov
adc
fnsave
repnz
in
test
addr16
shr
paddsb
pop
in
addr16
fist
pop
das
arpl
pop
imul
ret
pushf
(bad)
hlt
xchg
(bad)
inc
icebp
sub
mov
cmc
addr16
cmc
rol
ja
cmc
daa
mov
je
jb
xchg
sahf
cmps
in
dec
push
les
jo
cmovno
jo
(bad)
cmc
inc
inc
inc
pop
in
cmc
xchg
(bad)
cmc
or
mov
call
cmc
xchg
shr
iret
mov
pop
pminsw
aas
loopne
pop
pop
repnz
cli
in
dec
add
scas
loop
or
das
in
jg
in
push
cmp
sub
test
mov
inc
or
inc
out
div
loopne
push
leave
mov
pushf
imul
adc
daa
in
pop
inc
rcr
out
(bad)
(bad)
(bad)
xchg
retf
jecxz
pop
mov
add
rcr
dec
out
xor
add
and
out
outs
sahf
inc
add
repnz
enter
frstor
mov
mov
mov
and
jg
popf
nop
adc
dec
mov
mov
push
fwait
loop
clc
jg
xchg
push
push
ror
push
ins
clc
push
xchg
leave
sub
out
add
enter
imul
mov
out
mov
out
in
or
loope
out
pxor
ficom
loope
out
(bad)
aas
push
out
cmps
sub
push
jno
stc
ja
out
xlat
add
add
pop
stc
push
mov
out
dec
js
pop
mov
push
pop
sar
push
popf
mov
cwde
out
(bad)
loopne
pop
xor
dec
retf
adc
sar
mov
pop
leave
clc
adc
xchg
lock
mov
cmp
ja
add
ja
cli
inc
mov
mov
psubsb
pop
jo
lock
cli
mov
or
das
cli
ja
lock
shl
pop
sti
(bad)
fidiv
inc
jmp
jecxz
add
jbe
fldcw
pop
or
pop
bswap
adc
daa
xor
icebp
xchg
ror
daa
pushf
sti
in
scas
les
cmp
loop
rol
icebp
daa
jb
in
adc
(bad)
cld
pop
mov
and
icebp
(bad)
clc
mov
fisub
cmp
mov
pop
xchg
cmp
pop
mov
div
repnz
push
repnz
ret
sub
gs
xor
std
pop
adc
std
aas
dec
std
push
cmp
mov
xlat
inc
repnz
repnz
inc
pop
andps
mov
adc
cpuid
inc
lock
stos
mul
(bad)
in
push
jo
dec
adc
add
mov
fisttp
or
outs
(bad)
fisttp
repz
sub
pop
pop
out
repnz
inc
aad
int
(bad)
repnz
xchg
das
pop
maxps
loopne
repz
repz
aaa
repz
clc
inc
mov
repz
imul
push
dec
push
jb
sbb
or
cmp
mov
out
repz
repz
pop
leave
enter
and
mov
repz
js
icebp
pusha
adc
hlt
fisttp
es
fsubp
out
idiv
je
and
pop
sysret
mov
hlt
aaa
adc
aaa
sbb
fld
hlt
daa
daa
comiss
cmp
fucomi
xchg
(bad)
pop
inc
hlt
xchg
push
addps
cmp
push
shl
outs
pcmpeqd
aam
mov
push
jb
dec
jno
lock
push
xchg
(bad)
hlt
out
aam
fcomp
ret
add
cs
jo
jmp
dec
xor
adc
xchg
cmc
push
inc
dec
push
push
js
cmp
aaa
pop
ja
jbe
jns
sbb
mov
xor
push
fbstp
xchg
les
pop
adc
icebp
dec
mov
or
pop
cmp
pusha
test
cmp
sbb
xor
fiadd
push
scas
xchg
cmc
xlat
cdq
aas
add
inc
test
ror
jge
daa
pop
and
adc
movs
jl
out
jo
and
push
add
add
add
mov
xlat
xor
es
jo
out
out
adc
add
int3
mov
mov
xchg
cmc
jg
pandn
fwait
jmp
div
push
neg
or
fisub
sbb
and
das
das
mul
aad
jg
aas
inc
inc
test
aas
test
clc
add
dec
dec
and
mov
add
fiadd
loop
ss
daa
jmp
repnz
in
mov
aaa
neg
mov
pop
inc
cmovg
adc
lea
xchg
popf
pop
loop
outs
pop
movs
shrd
sbb
cmp
cmp
mov
out
push
clc
mov
xchg
cmp
iret
pop
add
sub
jecxz
clc
ja
add
pushf
fisttp
push
xor
stos
clc
outs
or
clc
add
into
ja
ja
clc
daa
or
add
push
out
sbb
fs
and
and
sub
test
ja
and
push
ret
fild
call
iret
sar
out
ror
pop
addr16
mov
in
pop
cli
mov
or
cdq
push
lahf
data16
jo
pop
dec
jl
xchg
sbb
outs
jae
xchg
setge
add
xchg
(bad)
js
or
inc
or
adc
add
daa
mov
or
pand
lock
jecxz
jmp
lahf
repz
jnp
cli
inc
sti
cli
dec
outs
add
(bad)
clc
add
aas
or
scas
adc
addr16
xlat
pop
les
sti
push
sti
dec
cmp
cmp
sbb
addr16
sti
mul
rcl
pop
packuswb
or
inc
out
mov
or
lods
or
je
in
pusha
ret
sti
out
xchg
iret
adc
pop
mov
fmul
dec
stos
popf
pop
xor
enter
add
lahf
cdq
iret
adc
or
push
dec
mov
scas
add
test
scas
adc
fild
es
push
into
mov
add
add
pop
push
daa
hlt
or
(bad)
ins
pop
inc
and
in
mov
and
add
inc
sbb
addr16
out
mov
clc
sbb
outs
jno
cmp
(bad)
sti
outs
cld
outs
paddb
pop
cld
scas
pop
cld
test
daa
cld
lahf
das
cld
pop
in
xor
aas
pop
jo
shl
push
outs
push
jmp
push
cmovs
pop
faddp
ret
imul
aaa
lock
and
ret
push
(bad)
jg
movsx
sti
pop
out
inc
es
movs
mov
mov
aaa
lods
(bad)
xlat
mov
mov
(bad)
xlat
test
leave
mov
adc
pop
outs
mov
scas
pop
fild
push
inc
mov
pop
push
sbb
(bad)
cld
dec
aas
add
mov
mov
call
std
sbb
jg
std
adc
or
xor
xlat
push
pop
add
cmps
inc
add
pop
mov
leave
cmp
pop
rol
or
sub
outs
int
dec
aad
xlat
fisub
xlat
adc
addr16
mov
push
pop
and
mov
mov
scas
push
sahf
arpl
adc
push
outs
pop
sbb
inc
mov
push
pop
(bad)
(bad)
sbb
jmp
pop
cmp
or
es
inc
scas
push
pop
xor
pushf
push
mov
in
mov
aaa
mov
mov
and
ja
movq
dec
daa
lods
inc
lgs
mov
xchg
repnz
mov
mov
test
adc
adc
cmp
sub
cmp
mov
dec
cmp
sbb
call
mov
sbb
leave
cwde
mov
adc
pop
and
call
daa
daa
inc
dec
push
xor
or
mov
mov
cmps
in
jb
xchg
adc
jbe
xchg
jns
daa
mov
xchg
sbb
leave
sbb
add
sub
inc
adc
adc
leave
leave
leave
mov
ror
je
pop
retf
mov
mov
dec
cmp
je
adc
adc
in
adc
enter
in
jmp
push
cld
mov
jno
loope
lahf
add
mov
push
mov
xor
in
mov
enter
das
add
jb
jnp
aaa
push
addr16
add
add
add
mov
add
jp
push
push
inc
and
or
inc
mov
pop
adc
or
cmp
test
mov
scas
rol
adc
popf
dec
mul
std
jge
add
lods
add
das
cmp
mov
rol
add
add
or
push
jecxz
or
lock
repz
sti
mov
(bad)
mov
(bad)
mov
push
jb
adc
add
out
pop
adc
jo
add
add
add
push
aaa
cmp
cmps
inc
push
or
and
mov
dec
mov
je
rol
push
xchg
shr
xor
and
xchg
inc
rol
push
xchg
jl
mov
mov
push
sbb
push
mov
scas
push
add
cmc
sub
sbb
sbb
jg
(bad)
mov
aaa
pop
pop
inc
hlt
adc
inc
inc
lds
or
jl
(bad)
icebp
pushf
pop
push
xchg
pop
imul
imul
aaa
jge
pushf
jmp
add
mov
mov
rol
add
cmp
sbb
pop
pop
pusha
sbb
push
add
push
add
add
xchg
and
add
push
add
les
popa
add
push
(bad)
shl
call
inc
movs
pop
pop
shl
xor
push
iret
sbb
mov
push
mov
das
iret
addr16
add
iret
mov
ret
and
and
sbb
fcmovnbe
jecxz
jmp
ret
in
in
(bad)
aas
jmp
div
cmp
jnp
add
push
add
push
add
push
push
daa
daa
mov
mov
cs
daa
mov
mov
out
cmp
cs
rcr
into
pop
mov
into
push
mov
push
sar
add
sub
xor
nop
xor
ja
fist
sbb
push
pop
pop
add
ja
mov
cmp
ins
add
xchg
or
je
fistp
data16
pop
mov
xchg
shr
xor
mov
adc
sbb
popf
out
sbb
cmp
pushf
and
pop
sbb
and
test
(bad)
ret
add
pop
sbb
inc
shr
xchg
fimul
fiadd
loop
push
(bad)
push
add
(bad)
(bad)
jo
cmp
ror
dec
sbb
adc
ror
or
(bad)
adc
and
shl
add
add
adc
cld
leave
mov
sbb
daa
inc
dec
mov
pushf
pop
mov
addr16
arpl
ret
or
ficom
mov
pop
push
test
mov
inc
dec
fs
adc
outs
inc
js
js
add
jb
jmp
inc
push
or
dec
push
push
fs
outs
pop
and
or
pop
pushf
push
in
mov
jne
and
fwait
push
pop
addr16
or
pop
push
pop
ja
jmp
inc
icebp
test
sbb
leave
push
ss
fwait
xchg
iret
movs
pop
xchg
mov
sbb
add
lock
adc
aas
sbb
push
and
daa
and
cmp
iret
inc
and
or
pop
in
dec
leave
enter
jmp
and
and
in
inc
dec
mov
xchg
pop
aas
cdq
pop
daa
pop
int3
jo
pop
aaa
aam
(bad)
int3
sbb
and
mov
sbb
or
mov
outs
movaps
ins
pushf
fstp
cmovno
lock
cmps
je
or
or
sbb
add
jge
in
xchg
setge
add
mov
sbb
jmp
push
add
push
pushf
es
out
xor
pop
stc
xor
outs
out
ja
loope
mov
fimul
jmp
push
psubsb
sub
and
inc
dec
add
ja
or
dec
jb
push
je
dec
dec
and
sbb
or
ins
inc
dec
add
out
or
dec
es
and
xchg
xchg
sahf
stos
wbinvd
jne
adc
dec
and
or
test
and
add
shl
or
rcr
xchg
cmps
loope
or
lods
dec
cmps
jmp
pushf
stc
add
pop
adc
jb
adc
adc
push
shl
and
in
icebp
ss
out
or
or
sub
xor
cmps
cmp
dec
pop
or
jb
add
or
jne
pushf
nop
pop
fs
adc
push
lock
enter
sbb
pop
adc
and
dec
xchg
jmp
cmps
cwde
out
addr16
add
movs
pop
addr16
mov
lock
or
rcr
fcomp
xchg
xchg
or
aas
or
or
sbb
push
xor
loopne
cmp
push
pushf
nop
adc
adc
push
pushf
loope
daa
inc
in
es
mov
dec
test
inc
mov
push
push
out
jo
js
out
jb
adc
or
or
or
and
cmp
pop
ins
add
push
pop
loopne
cmps
shl
mov
push
idiv
test
cmps
fsub
in
push
out
pop
loope
mov
hlt
or
call
pop
ja
jno
dec
xchg
sbb
movs
cmp
sub
jl
pop
dec
sub
shr
sub
out
or
jb
inc
pop
das
or
or
or
cmp
pusha
or
or
or
jns
mov
mov
lds
pop
js
dec
push
sub
add
in
sbb
or
cmps
cmp
(bad)
out
or
stos
or
inc
mov
or
or
or
push
mov
sub
out
push
mov
pop
or
inc
jnp
jo
cmp
xchg
js
loopne
jl
xchg
or
or
daa
arpl
xchg
setge
cmp
pop
test
pushf
popa
fsubr
outs
mov
daa
ret
mov
sub
add
push
jo
(bad)
pop
sbb
cmp
or
ret
stos
push
imul
fmul
cmp
or
xchg
jb
pop
adc
shl
push
push
test
les
sahf
loopne
cld
inc
sub
add
xchg
push
push
cmp
push
daa
cmp
pop
pop
and
dec
sub
xchg
push
js
cli
sbb
push
daa
call
test
jns
and
sub
mov
cs
adc
inc
lahf
es
mov
sbb
sub
xchg
xor
sub
adc
add
jmp
fisubr
xlat
push
outs
(bad)
shl
fmul
out
out
(bad)
stc
jb
xor
movhps
setae
pop
aas
or
ret
or
ins
pop
push
lock
push
push
jge
pop
adc
sbb
push
test
push
push
push
sub
mov
sbb
cmp
ror
sub
jns
pop
in
adc
cs
dec
and
cmp
and
pop
dec
push
xchg
xchg
xchg
aad
inc
nop
mov
mov
inc
shr
jmp
sub
loopne
das
push
aas
dec
das
mov
movs
das
pop
pop
(bad)
jae
popf
pop
pop
fsubp
pop
out
adc
mov
dec
adc
inc
mov
and
adc
adc
or
bound
mov
xor
gs
lea
loop
xor
xor
(bad)
push
sbb
fadd
das
push
add
pop
aam
jmp
daa
les
cmp
daa
adc
pop
adc
pusha
adc
jle
or
push
xchg
pop
sti
js
push
add
adc
mov
setae
(bad)
inc
mov
push
bt
pop
aaa
aad
cmps
stos
adc
mov
daa
cmp
mov
cmp
cmp
jecxz
repz
mov
sti
add
or
loop
pushf
pushf
sbb
sub
mov
cs
push
add
jnp
push
inc
push
fidiv
lea
dec
push
ficom
es
daa
push
pop
das
sub
mov
pop
jno
mov
xor
adc
fistp
aam
push
jl
xor
or
jg
xchg
aam
inc
pop
jg
or
cmp
lds
adc
sbb
adc
cdq
inc
cmp
push
call
adc
jmp
aas
loopne
out
cld
adc
outs
fwait
loop
adc
and
or
cvtps2pi
dec
adc
fld
pop
pop
adc
mov
push
outs
mov
sahf
fucomi
add
cdq
das
mov
sbb
out
sidtd
push
and
outs
push
inc
bswap
jg
setl
jae
fcomip
psubq
push
adc
push
sub
popf
fucomi
adc
daa
adc
xor
cmp
fistp
das
dec
js
out
xor
and
pop
ficomp
push
xor
push
xor
cmp
xor
push
xor
mov
das
aaa
pop
inc
lahf
mov
and
xor
pusha
cmp
mov
inc
into
jno
inc
xor
into
adc
adc
push
ficom
cmp
out
idiv
pushf
pushf
mov
adc
pushf
pushf
pushf
es
into
repz
inc
adc
push
pushf
fld
adc
movq
clc
or
jp
das
adc
js
xchg
push
sbb
push
sbb
(bad)
mov
das
pop
ret
rcr
pop
inc
inc
add
out
xor
inc
ds
mov
call
mov
adc
push
pop
cmps
or
daa
adc
add
and
lahf
sbb
mov
dec
aaa
retf
dec
sbb
pushf
push
aaa
cmp
adc
inc
loopne
add
dec
push
xchg
pop
xor
and
ja
push
push
mov
lahf
push
push
mov
and
add
pop
lods
xor
inc
or
aaa
dec
lock
rcl
ret
retf
fwait
add
push
out
psrad
outs
mov
repnz
cli
pop
add
ret
add
or
xchg
pop
cs
in
pop
sbb
sbb
pop
movq
icebp
or
and
fild
aam
inc
scas
cmp
push
je
adc
pusha
pop
dec
push
dec
scas
jo
js
sbb
call
test
pop
ret
add
mov
cld
test
pop
loop
pop
jmp
repnz
daa
cli
pop
add
(bad)
sbb
ja
sbb
sbb
mov
icebp
xchg
mov
push
xchg
cmp
pusha
dec
shl
pop
(bad)
sbb
stos
(bad)
cmp
cmp
test
ficomp
dec
mov
xor
pop
les
push
sub
je
adc
pop
add
das
ficom
sbb
(bad)
cmp
xchg
dec
es
pop
shl
sbb
mov
cmp
loopne
cmps
xchg
ja
cmp
cmp
popa
(bad)
iret
cmp
add
sub
pop
out
(bad)
cmp
div
sbb
sbb
ja
cmp
inc
daa
sbb
nop
cmp
dec
dec
and
cmp
or
enter
cmp
mov
xor
jne
(bad)
cmp
xchg
pushf
dec
dec
test
pop
xchg
enter
cmp
sbb
mov
sbb
mov
mov
mov
addr16
sbb
and
mov
and
push
ds
(bad)
pop
loope
outs
shufps
into
sbb
sbb
test
ficomp
scas
out
out
sbb
mov
xor
dec
xchg
pop
mov
je
adc
xchg
sbb
ds
dec
dec
inc
pop
add
xchg
xchg
in
hlt
ds
and
outs
sub
repnz
into
lock
sbb
add
pop
sub
sbb
xor
pushf
ja
jbe
jb
push
loopne
mov
fistp
rcr
adc
lahf
popf
pushf
pop
xor
daa
xlat
(bad)
movs
push
cmp
push
(bad)
js
lock
(bad)
push
mov
addr16
jb
shl
inc
(bad)
push
push
inc
into
je
push
push
das
sbb
cmp
nop
push
das
cwde
push
pop
mov
das
test
mov
pop
mov
mov
enter
loop
inc
mov
adc
iret
lock
inc
daa
repz
mov
pop
xchg
mov
dec
daa
or
lahf
inc
pop
pusha
pop
in
mov
inc
in
xchg
xchg
pop
jne
push
mov
push
inc
mov
lahf
fnstcw
inc
xor
psllq
dec
jnp
and
int3
cmps
inc
push
jp
inc
jb
fs
mov
test
fbstp
daa
call
and
jecxz
jg
and
and
and
(bad)
mov
leave
inc
jmp
sti
sbb
and
and
and
and
mov
pop
and
pop
aas
or
dec
xor
xchg
inc
inc
mov
xor
out
xchg
out
imul
aas
(bad)
dec
xchg
lahf
cmps
and
xor
daa
ins
inc
outs
jno
dec
daa
test
add
lahf
push
retf
aaa
add
lods
inc
jns
shr
ja
inc
std
add
daa
adc
sub
jmp
call
movs
lahf
adc
into
inc
dec
add
daa
pop
in
jns
outs
pcmpgtd
jns
pushf
add
xstore-rng
cmps
and
dec
adc
and
pushf
and
loope
lock
and
lods
pop
cmp
inc
push
add
adc
xchg
and
mov
and
and
xor
or
cs
sahf
scas
fild
or
push
daa
or
(bad)
inc
dec
enter
mov
push
add
mov
cmp
and
pop
or
or
push
and
daa
cmp
pop
and
ins
and
nop
and
and
sbb
push
mov
sbb
test
mov
sub
iret
inc
or
and
packuswb
not
into
leave
sub
and
sub
pop
and
and
sar
xchg
and
pop
and
add
mov
and
pop
rdmsr
mov
(bad)
icebp
push
cmp
dec
pushf
bound
mov
dec
mov
jbe
popa
daa
pop
push
add
push
pushf
inc
cmovs
arpl
imul
sbb
and
jnp
leave
add
add
jbe
loop
xchg
fwait
and
into
mov
pop
out
jg
dec
push
outs
adc
and
add
dec
pop
daa
cmp
icebp
mov
xchg
dec
movs
dec
xchg
dec
push
aaa
adc
daa
adc
mov
pushf
jmp
and
xchg
and
mov
dec
dec
push
seto
inc
je
dec
inc
pop
dec
jg
lahf
mov
leave
in
aad
fucom
pop
in
push
mov
sbb
inc
pushf
mov
pop
ror
mov
mov
mov
inc
mov
adc
ja
es
setnp
mov
(bad)
cwde
dec
xchg
ret
fild
dec
mov
jg
movs
(bad)
rcr
add
daa
daa
pusha
cwde
dec
dec
mov
inc
add
addr16
dec
test
dec
mov
daa
cmp
daa
aaa
cmp
inc
daa
div
dec
jo
daa
aaa
push
pop
pop
daa
mul
fisubr
daa
scas
iret
push
push
daa
xlat
shl
rol
daa
mov
fld
addr16
(bad)
dec
xlat
sti
daa
daa
sub
sub
fs
js
icebp
add
add
inc
add
sbb
cmc
(bad)
dec
push
dec
daa
nop
xor
int3
dec
shr
cmps
adc
loopne
sub
hlt
xor
ret
dec
outs
les
sub
cwde
dec
dec
js
add
cmp
mov
push
sub
pop
sub
daa
sub
sub
and
cmp
addr16
dec
dec
and
dec
cmps
xchg
dec
lock
in
in
jae
or
in
mov
lds
xchg
xchg
pushf
js
add
sbb
and
dec
scas
cmp
mov
push
test
cmps
add
call
mov
inc
(bad)
and
dec
leave
inc
fwait
je
push
pop
pop
rol
and
or
ja
add
es
into
lock
push
xchg
sbb
movs
add
ror
dec
lods
sub
sub
or
loopne
sub
ins
mov
adc
aam
inc
fsubr
pushf
popf
loope
aaa
in
mov
sub
pop
into
mov
sub
push
in
call
or
in
xor
push
(bad)
not
jge
fisub
js
sub
iret
xchg
sub
mov
mov
movs
sub
lods
aas
mov
xor
rcl
pop
pushf
pop
rcr
cmps
loopne
call
xlat
lock
sub
pop
rol
or
xlat
lock
pusha
(bad)
shr
sub
sub
sbb
inc
xlat
adc
lldt
call
pop
push
ror
xchg
mov
sub
sub
or
adc
xchg
jbe
add
xor
jle
xchg
pop
xlat
retf
mov
sub
rol
add
or
push
pop
or
pop
mov
scas
shr
pop
aam
jecxz
add
sub
jae
inc
lds
sub
cmps
sub
sub
jg
xchg
dec
sub
aas
push
divps
ins
mov
pop
mov
adc
sub
test
sbb
fsub
adc
call
dec
in
add
mov
push
dec
add
out
cs
les
pop
adc
into
fimul
pop
cmp
push
mov
fstp
pop
ds
pop
dec
cs
cs
cmp
fild
jns
sub
test
mov
addr16
outs
bound
push
push
out
sbb
push
cmc
or
jne
call
push
loopne
and
cmovbe
cs
or
jp
cmc
out
std
cs
add
rcr
pop
call
ret
(bad)
das
mul
mov
das
ja
xchg
inc
pop
dec
das
xlat
push
das
jb
mov
pop
lock
jae
loopne
jbe
xchg
xchg
cmps
dec
je
jp
das
das
mov
ja
dec
jb
pop
and
pop
outs
shr
das
mov
xchg
xchg
fcmovnb
out
into
(bad)
fisubr
dec
(bad)
hlt
(bad)
das
dec
(bad)
loopne
mov
dec
test
add
out
pop
sub
(bad)
js
push
and
sub
add
inc
daa
inc
xor
xlat
xor
inc
xor
addr16
outs
ja
stos
push
cmps
inc
call
jb
sub
mov
sar
jo
rsm
mov
mov
adc
ret
retf
in
hlt
mov
pop
hlt
pop
cmp
(bad)
mov
addr16
cmps
push
xor
push
xor
push
xor
push
xor
data16
es
xor
push
adc
xor
sbb
(bad)
ja
xchg
fs
mov
(bad)
outs
jp
das
push
loopne
pop
cmp
adc
or
fwait
xor
iret
in
test
das
mov
mov
fdivr
push
mov
jmp
sahf
fisttp
adc
das
adc
imul
sahf
repz
repz
cmp
mov
or
push
xor
pop
xor
test
pop
mov
gs
inc
add
ja
(bad)
les
aaa
or
lahf
aam
cmp
mov
test
pop
inc
sbb
pop
sbb
daa
xor
adc
out
pushf
pop
sahf
fsub
sub
movs
mov
mov
into
call
out
pop
ins
xor
jne
(bad)
jge
out
lea
or
xor
dec
(bad)
out
pop
out
pop
mov
jmp
xor
inc
cmp
imul
xor
cmp
mov
das
xor
inc
cmc
xchg
(bad)
pop
aas
xor
in
inc
inc
mov
outs
pushf
pop
daa
in
mov
test
call
fucomi
pusha
ror
out
cmp
mov
bsf
inc
pop
jbe
ins
and
addr16
cmps
div
sbb
ficom
pusha
xor
pop
xor
pop
xor
jae
pop
js
and
pop
mov
(bad)
mov
(bad)
adc
sub
xor
pop
aad
ffree
in
mov
xor
cmc
das
std
xor
and
scas
dec
ss
pop
pop
inc
jecxz
and
add
jg
outs
xor
ss
xchg
setg
jo
test
in
mov
fsubp
mov
sbb
fucomi
pop
div
iret
pop
push
jb
cdq
mov
xlat
aaa
out
aaa
cmp
add
pusha
and
inc
and
push
inc
rol
pop
add
aaa
xor
sub
xchg
lea
xchg
aaa
ja
pop
movs
mov
enter
fisubr
aaa
push
dec
mov
push
sub
test
out
cmp
pusha
add
jo
dec
jb
popa
adc
popa
les
shl
cmp
inc
shr
ficom
leave
xchg
lahf
cmp
cmp
dec
dec
cs
pop
test
in
xchg
loopne
xchg
cmp
aaa
int3
idiv
(bad)
cmp
pop
leave
mov
or
inc
push
(bad)
mov
arpl
addr16
mov
jb
ror
iret
pusha
jb
jb
in
call
push
cmp
cmp
ss
dec
(bad)
mov
cmp
cmp
pop
daa
out
cmp
cmp
data16
mov
or
jo
pop
xchg
cdq
dec
dec
dec
dec
mov
push
dec
dec
ror
pop
in
cmp
mov
sub
sbb
jmp
cmp
les
sbb
add
cmp
pop
cmp
cmp
mov
sub
je
pusha
mov
xchg
idiv
into
rcr
pop
fdivr
das
add
sbb
lock
xor
xchg
mov
ja
cs
retf
cmp
fidivr
push
loop
jmp
and
and
xor
and
xchg
xlat
and
add
jo
adc
adc
xchg
and
pop
enter
es
es
dec
sar
addr16
pusha
or
inc
outs
pop
adc
ret
mov
xor
cmp
fsub
cmp
cmp
imul
adc
jnp
das
mov
add
setbe
js
sub
sahf
cmp
cmps
push
push
scas
xchg
adc
and
cmp
fbld
add
mov
jmp
xchg
cmp
out
push
add
out
ins
mov
pop
xlat
in
cmp
hlt
jg
pushf
or
sub
sub
dec
leave
or
jmp
add
add
int3
push
hlt
or
pop
mov
lea
ja
aaa
fs
add
das
cmp
pushf
bound
dec
pop
push
cmp
pop
pop
cmp
mov
outs
cmp
add
xchg
sbb
rsm
ja
outs
mov
mov
out
pop
retf
cmp
aas
ja
pushf
popf
jecxz
cmp
adc
or
fs
cmp
cmps
ds
ficom
pusha
xchg
out
movs
push
inc
cs
lea
pop
mov
and
outs
(bad)
call
ror
jb
iret
aas
enter
add
adc
ds
push
jne
cmp
xor
xor
add
jmp
push
popf
pusha
dec
imul
pop
xchg
mov
pop
aas
or
cmp
sub
xor
add
ss
sahf
addr16
fisub
pop
cmps
jo
mov
nop
ins
addr16
push
aas
pop
int
pushf
arpl
cmps
popa
aas
fistp
cmp
aas
(bad)
jns
jmp
mov
pop
xchg
aas
pop
lock
mov
push
lods
fldl2e
fsubr
mov
aas
jnp
lea
out
aas
mov
idiv
pop
dec
push
pop
jnp
sbb
inc
pop
das
femms
je
(bad)
cs
inc
push
push
enter
es
mov
aaa
sbb
adc
cmp
adc
nop
cmp
lfs
mov
movs
ins
mov
out
inc
in
punpckhdq
inc
jp
mov
add
outs
xchg
(bad)
outs
seto
add
(bad)
jo
inc
push
inc
test
mov
cmp
aas
mov
mov
outs
push
dec
cmps
outs
outs
aas
pushf
loop
pop
fcom
loopne
mov
add
jg
push
sub
adc
and
cmp
test
push
adc
out
outs
jmp
push
cmp
js
push
cmovno
adc
out
and
cs
add
pop
ss
xchg
inc
out
inc
popa
cmp
pop
sub
pushf
loop
ror
cmps
inc
dec
cs
and
xchg
addr16
das
add
adc
ds
aas
outs
fild
jno
mov
sbb
jbe
jae
inc
add
mov
add
jno
aaa
out
daa
push
addr16
pop
jo
ja
mov
mov
outs
sldt
fild
pop
inc
inc
out
sbb
stos
or
pop
or
and
cmp
cmp
inc
inc
cmps
dec
inc
push
xchg
and
(bad)
scas
jbe
scas
inc
cmps
xor
push
addps
mov
pusha
inc
cmps
push
loop
inc
xlat
inc
test
addr16
adc
add
xor
pop
add
or
lock
arpl
lock
xchg
out
inc
pop
sar
stos
das
outs
aaa
fdiv
addr16
mov
ret
pop
or
retf
inc
ror
jae
shl
or
in
push
xor
aas
sub
inc
and
jb
push
inc
(bad)
adc
out
push
inc
aaa
push
inc
fild
push
push
dec
das
add
ret
mov
inc
imul
in
jae
mov
pop
loopne
jl
(bad)
aaa
mov
jae
xchg
pop
pusha
xchg
dec
push
push
pop
jno
(bad)
popa
inc
pop
imul
iret
xchg
push
pop
mov
mov
inc
push
aas
add
loope
cdq
inc
outs
mov
aas
xchg
out
fisttp
xor
dec
nop
or
add
aaa
or
je
add
out
daa
popa
and
fadd
or
adc
cld
aas
pop
and
test
sbb
fistp
inc
pop
xor
inc
test
xchg
das
js
push
out
sbb
jne
mov
retf
mov
inc
mov
inc
inc
js
popa
mov
inc
setl
add
add
das
jb
shl
inc
cwde
jg
test
and
mov
(bad)
mov
jb
shr
adc
adc
push
ins
jb
add
inc
pushf
sub
cmps
in
shr
pop
mov
pop
repnz
inc
cmp
sub
inc
inc
adc
inc
pushf
call
inc
(bad)
sub
xor
shl
inc
inc
rcl
push
inc
pop
inc
xlat
mov
push
xor
ja
ja
test
push
xlat
adc
loopne
sbb
add
fs
xchg
xchg
mov
jge
lea
xchg
daa
pop
mov
pop
sahf
xlat
cmps
scas
loope
outs
daa
mov
mov
out
iret
into
inc
pop
(bad)
xlat
(bad)
ss
xchg
out
inc
pop
stc
outs
aas
adc
es
adc
adc
dec
pop
mov
sgdtd
or
or
or
inc
(bad)
sbb
adc
xchg
push
mov
jbe
adc
(bad)
js
scas
ja
fwait
adc
aas
mov
mov
push
mov
js
addr16
xchg
out
inc
xchg
ja
(bad)
mov
push
inc
daa
pop
inc
pop
inc
xor
ja
cmps
jg
ss
xchg
inc
xchg
(bad)
aas
xchg
lgs
into
lahf
xchg
dec
addr16
inc
xchg
inc
cmps
xlat
inc
loope
fld
outs
scas
movzx
mov
push
pop
pop
daa
test
aaa
jp
sub
in
mov
into
jo
jns
pop
inc
out
inc
outs
into
ins
xchg
adc
ja
(bad)
jp
fwait
daa
xlat
sysenter
out
cmp
imul
cmove
inc
addr16
leave
in
ss
outs
jne
jge
outs
sub
mov
jae
jo
lods
lgs
add
pextrw
dec
pop
(bad)
stc
adc
inc
fld
adc
pop
daa
in
mov
pop
dec
enter
pop
pop
jnp
xor
cmp
push
sbb
pop
in
jnp
pushf
jnp
test
push
xchg
dec
ficom
cmp
or
out
adc
push
dec
lahf
adc
inc
cmp
dec
sub
jo
dec
aaa
xor
(bad)
dec
popa
ins
scas
push
push
dec
dec
aaa
push
aas
pop
cmps
js
out
pusha
dec
aaa
imul
xor
dec
cmps
gs
hlt
sub
or
idiv
jl
push
test
sar
jl
pop
and
mov
cmp
int3
push
inc
mov
repnz
movs
push
xor
cmp
push
cwde
jecxz
mov
jge
or
outs
cmp
pop
dec
inc
xor
push
xchg
dec
(bad)
dec
ror
and
mov
dec
push
xor
popf
fld
pop
pcmpgtb
pop
outs
xlat
dec
lahf
push
emms
dec
adc
enter
dec
xchg
(bad)
cmp
daa
xchg
stc
mov
sbb
out
jle
nop
jle
(bad)
fsub
inc
adc
and
and
inc
jle
add
dec
daa
mov
ss
das
aad
jg
pop
in
fisubr
dec
xchg
in
pmaddwd
std
syscall
dec
pop
cmp
mov
dec
inc
dec
mov
ret
iret
dec
aas
das
adc
data16
adc
daa
push
jb
xlat
cmp
mov
shr
iret
xchg
das
pop
sbb
mov
das
mov
push
mov
and
dec
mul
aaa
bswap
daa
jmp
jecxz
sbb
dec
mov
adc
shr
dec
dec
and
and
dec
dec
dec
dec
outs
loopne
and
dec
jg
cmp
dec
das
popa
dec
pop
or
adc
test
sbb
adc
(bad)
icebp
mov
jb
jb
xchg
xchg
lahf
mov
pop
jo
scas
dec
xchg
loope
ja
dec
iret
pop
jno
sbb
iret
dec
pop
xlat
dec
fisttp
pop
add
das
out
jp
(bad)
shr
and
cmp
sub
sub
out
int3
pusha
pushf
or
out
push
jo
xchg
dec
and
cmps
cdq
pop
lea
outs
xor
cmp
inc
dec
test
ja
xor
mov
jne
mov
xchg
setle
mov
cs
sar
mov
mov
and
inc
(bad)
loopne
push
lahf
jns
or
mov
movs
jp
sbb
or
or
psubb
(bad)
sub
xor
cmp
pop
test
cmovae
aam
into
jno
dec
not
cvtdq2ps
mov
scas
jnp
jno
rol
shl
test
test
add
xchg
sub
js
loopne
add
out
cmp
mov
xchg
dec
scas
dec
adc
inc
dec
xlat
mov
cli
add
cmp
mov
pop
add
addr16
dec
(bad)
xlat
or
dec
jb
mov
adc
call
stos
and
mov
cmps
add
enter
dec
adc
dec
pop
ror
pushf
sub
dec
inc
dec
pushf
cmps
and
dec
push
dec
lahf
mov
add
dec
pop
jl
in
jbe
xlat
test
mov
xchg
xadd
aaa
cmps
out
push
es
jl
xchg
dec
cmp
mov
dec
cs
mov
cs
pop
dec
sbb
(bad)
mov
push
xchg
push
(bad)
cmp
sub
jg
xchg
(bad)
cmp
lock
jno
cwde
rol
jg
dec
xor
xor
mov
scas
dec
(bad)
movs
retf
xor
das
pop
jg
jb
inc
or
push
sbb
cmps
jae
and
sub
mov
sbb
mov
fadd
cwde
mov
add
cmps
in
xchg
int3
mov
mov
mov
ret
dec
dec
mov
popf
push
jmp
daa
rcl
adc
push
fistp
ja
ja
fmul
bound
push
jnp
inc
daa
xchg
push
scas
cmp
inc
xchg
ja
push
xchg
add
lahf
rcl
xchg
mul
push
es
mov
enter
sbb
cmp
mov
jg
outs
cmp
pop
clts
push
test
adc
push
pop
push
pop
jle
(bad)
lock
sub
xor
push
add
adc
push
lahf
inc
(bad)
mov
dec
push
xlat
push
outs
sbb
rcr
pop
mov
pushf
add
leave
xchg
push
mov
push
in
xchg
xchg
mov
popa
sub
mov
inc
adc
xchg
mov
adc
in
adc
fisttp
in
or
pop
data16
std
jg
push
aas
or
sbb
pop
jg
inc
mov
push
cmp
push
xlat
cwde
test
das
pusha
mov
cmp
add
ja
sub
mov
jae
inc
mov
push
ja
fwait
loopne
movs
push
ja
push
test
mul
pop
scas
push
pop
mov
mov
jb
aas
into
not
fiadd
das
out
dec
not
add
pop
push
push
das
push
push
das
pop
jp
sub
push
push
dec
lock
aam
push
das
es
dec
cs
push
daa
in
mov
fwait
ret
fwait
movs
in
(bad)
out
mov
test
pusha
lea
lahf
push
lea
test
jbe
xor
jle
cmps
xchg
push
out
stos
sub
push
addr16
das
cmps
push
movs
(bad)
inc
into
mov
push
mov
lahf
lahf
je
push
mov
pop
into
repnz
clc
movs
push
das
(bad)
pop
inc
sahf
ret
adc
sahf
xchg
mov
cwde
adc
mov
adc
adc
ins
mov
adc
enter
inc
mov
test
ret
push
pop
or
push
cwde
adc
loopne
push
daa
push
addr16
jo
and
xor
cmovno
outs
(bad)
xor
pop
push
mulps
fsub
mul
lahf
imul
jno
adc
jns
push
push
iret
mov
pop
xchg
push
mov
xchg
mov
mov
pop
adc
ffreep
sbb
sbb
jl
test
sbb
xchg
add
lahf
pop
add
mov
xchg
or
mov
pushf
rcl
out
dec
jne
pop
hlt
push
mov
push
outs
add
jbe
enter
push
pop
push
pop
push
jg
jmp
pop
aas
adc
daa
comiss
jb
xchg
inc
push
cmps
jp
sub
sbb
dec
push
outs
push
push
sub
test
pop
push
mov
add
xchg
or
movs
daa
or
test
push
push
add
xchg
(bad)
dec
xchg
cmp
lock
cmp
xchg
add
push
dec
loopne
push
outs
push
pop
enter
jo
outs
outs
repz
pop
aad
outs
iret
adc
pop
pop
mov
push
add
sub
cmps
js
repnz
and
cs
les
mov
jg
aam
loopne
rcl
shr
xor
push
or
scas
fadd
mov
enter
jmp
push
aaa
xchg
jbe
rcl
push
call
mov
pop
add
popf
xlat
mov
aaa
mov
shl
or
dec
xchg
cmps
cmp
fs
lods
xchg
rol
pushf
xchg
jmp
(bad)
cli
add
sbb
repnz
(bad)
fdivr
mov
mov
pop
xchg
push
add
dec
xchg
push
and
les
sub
test
cmovne
pop
pop
imul
imul
jae
aaa
jnp
and
adc
push
(bad)
push
cmp
and
inc
dec
xchg
cmp
or
pop
icebp
or
out
out
xchg
leave
pop
test
pop
dec
aas
shl
fabs
pop
pushf
jecxz
mov
icebp
pop
cmp
or
stc
out
pop
outs
and
push
pop
xor
scas
pop
jmp
cmp
xlat
xchg
outs
loope
outs
jmp
xchg
das
cwde
xchg
inc
add
pop
fs
(bad)
push
jae
daa
xchg
pop
addr16
xchg
(bad)
mov
adc
dec
add
mov
push
loopne
clc
loopne
shl
ins
xchg
xchg
cmc
test
xlat
cmp
inc
sub
pop
pop
cmps
js
jg
pop
xlat
fistp
xor
adc
jecxz
addr16
outs
cmp
push
pop
daa
mov
xchg
std
loope
add
out
sahf
loop
mov
call
pushf
xor
dec
jno
pop
xchg
dec
pop
(bad)
push
pop
dec
add
neg
push
out
out
push
popf
lock
or
call
test
pop
xor
rcr
push
xor
cmp
mov
cwde
out
jle
pop
mov
jb
out
xchg
pop
lahf
push
mov
mov
pop
pop
retf
pop
jno
enter
pop
ficomp
pop
loopne
test
pop
neg
pop
jle
xchg
adc
push
pop
push
pop
not
pop
mov
push
pop
mul
pop
in
inc
jl
cs
aas
ss
ds
fsubp
dec
loopne
pop
call
pop
push
sbb
pop
scas
ins
pop
aas
lahf
mov
jg
mov
inc
xchg
adc
aas
sbb
or
push
and
outs
mov
fimul
and
cld
or
push
and
pop
scas
cmp
loopne
loopne
ds
push
pushf
mov
jmp
femms
cmps
push
and
push
or
pop
push
cs
loopne
adc
xor
pop
scas
xor
emms
inc
loopne
dec
ds
push
mov
xor
pop
addr16
jb
daa
sbb
inc
pop
mov
mov
xchg
adc
cmps
mov
mov
mov
add
pop
mov
adc
adc
mov
xchg
pop
cdq
pop
outs
cmp
scas
mov
mov
(bad)
scas
leave
dec
rcr
pop
xchg
and
loope
jmp
jb
mov
pop
add
or
pop
xchg
jae
sbb
pop
scas
sub
jb
enter
pop
inc
pop
dec
das
js
jecxz
push
outs
pop
pop
scas
popa
pop
imul
jno
jns
sbb
pop
xchg
pop
cdq
pop
mov
js
pop
scas
mov
mov
enter
pop
rcr
pop
and
sbb
pop
jmp
mov
fst
or
out
adc
scas
(bad)
push
(bad)
sbb
aaa
and
enter
aas
sub
xor
pop
loopne
mov
push
fist
cmp
js
iret
dec
cmp
push
cmp
push
lock
sar
aas
js
out
data16
jg
push
inc
dec
inc
mov
push
stos
mov
or
test
mov
push
iret
dec
dec
dec
dec
dec
lock
ror
dec
dec
dec
js
and
dec
(bad)
jg
push
dec
clc
movs
dec
xor
pop
fisttp
pop
push
push
push
push
or
cmp
pop
push
push
pop
push
push
iret
loope
fwait
sub
push
pop
push
pop
pop
sahf
ret
jae
push
pop
pop
push
pop
pop
push
pop
jmp
in
call
fs
ss
int
pop
je
pusha
(bad)
pop
add
add
test
(bad)
(bad)
push
arpl
push
outs
aas
movs
push
data16
aad
sbb
push
or
aam
fdiv
rcr
jmp
outs
pop
push
add
in
test
aas
cld
push
jno
cs
mov
jmp
(bad)
pusha
xchg
jbe
push
ja
xchg
js
jbe
js
push
jns
pop
loop
ds
jp
push
jnp
outs
mov
sahf
push
jl
aas
fs
ins
cmp
addr16
jg
push
cmp
add
push
cmp
cmp
loope
outs
das
pushf
outs
cmps
push
xchg
xchg
lock
pop
mov
mov
(bad)
mov
iret
push
mov
push
mov
or
cs
lea
aas
test
in
out
maskmovq
xchg
add
jbe
popa
push
xchg
push
push
xchg
xchg
pop
es
xchg
push
push
jp
mov
xchg
push
rcr
fnstsw
aas
push
cdq
push
push
call
fwait
out
aas
pop
push
popf
add
mov
out
movq
ja
cmps
xor
fiadd
test
push
movs
inc
outs
mov
(bad)
outs
mov
jno
adc
pop
enter
push
ins
ja
add
push
add
loopne
(bad)
xlat
sbb
ss
ins
loopne
mov
mov
addr16
pop
jb
jp
jl
pop
jb
movs
lods
mov
cmc
inc
imul
enter
bound
cdq
lods
mov
lock
or
arpl
arpl
arpl
push
out
inc
out
ja
cmp
outs
ja
out
arpl
pushf
pushf
pop
mov
xchg
xchg
pushf
mov
add
and
jo
xor
mov
jmp
cdq
arpl
in
cmc
arpl
into
lock
daa
std
arpl
int3
adc
loop
adc
push
push
sbb
add
and
sub
lods
xchg
pop
enter
push
xor
enter
fs
jb
cs
or
or
in
call
out
push
movs
and
push
mov
in
(bad)
iret
xlat
fistp
call
fs
mov
mov
pop
mov
inc
out
add
add
iret
jo
add
fild
fbstp
gs
dec
xchg
pop
fsub
jmp
(bad)
dec
movs
scas
or
shr
icebp
dec
mov
cs
jns
das
cmp
mov
mov
jo
dec
push
fbld
(bad)
or
aaa
pop
push
gs
cmp
xlat
jbe
jle
(bad)
lds
mov
gs
sahf
jbe
sti
mov
cmps
imul
mov
(bad)
mov
outs
pop
fsubr
sub
inc
xchg
test
push
jb
cmps
nop
cmps
dec
lahf
cld
cmps
inc
inc
mov
add
data16
pop
push
aam
or
cmps
xchg
inc
add
daa
mov
test
mov
lods
push
iret
mov
dec
dec
dec
cs
sti
add
mov
xlat
adc
sbb
shl
cmp
addr16
dec
cmp
lods
cmp
scas
mov
out
pusha
dec
add
pushf
or
and
adc
pop
cmp
pop
dec
addr16
pusha
xor
addr16
cmps
jb
mov
pcmpeqb
ret
jae
or
addr16
cmp
pop
pushf
shld
lods
addr16
(bad)
addr16
mov
adc
retf
pop
retf
aas
jp
push
jo
pop
push
iret
shl
dec
retf
(bad)
(bad)
jecxz
je
(bad)
xchg
out
test
dec
push
pushf
int
pop
push
xor
cdq
sub
jg
pop
sbb
fdivr
cwde
lock
lahf
ins
aas
je
jl
pop
imul
cmp
xchg
ret
xor
push
mov
adc
stos
mov
push
mov
xchg
or
ror
pushf
test
call
xchg
adc
mov
icebp
aas
push
lea
cmovs
jmp
rcl
int3
stos
aas
adc
inc
stos
push
adc
imul
imul
sub
cmp
inc
dec
xchg
push
imul
imul
hlt
mov
imul
sub
pop
(bad)
call
lahf
packsswb
lahf
imul
xchg
ins
lods
pop
ret
xchg
pop
out
inc
inc
cmps
iret
inc
call
pushf
lods
jmp
daa
lock
loope
lods
cmps
adc
jmp
xlat
daa
fbld
pop
or
out
xchg
(bad)
mov
leave
call
aas
sbb
and
ret
sbb
cmp
in
ret
push
sqrtps
out
pop
bound
ins
add
scas
jne
iret
jge
fmul
pop
js
rcr
daa
pusha
lea
mov
and
push
push
jmp
inc
push
xor
inc
loopne
xor
lods
(bad)
pop
scas
dec
xor
ins
jg
ja
push
mov
inc
icebp
pop
stc
(bad)
imul
movups
xchg
inc
sub
nop
scas
sbb
fistp
dec
push
push
imul
scas
aas
scas
inc
fcmovne
aam
pop
dec
iret
clc
js
and
pop
mov
iret
sbb
or
call
popa
push
mov
out
xchg
fsubr
out
test
jo
ror
mov
pop
mov
cmp
imul
in
pop
cmps
sub
into
pop
jo
pop
mov
push
ins
inc
into
xor
(bad)
pop
sub
aaa
ins
lahf
jo
and
out
ins
pop
pop
cmc
test
pop
arpl
outs
pop
jns
cmps
jae
int
test
(bad)
ins
mov
aas
loope
movs
das
mov
pop
mov
jg
(bad)
ins
shr
fsubr
cmc
test
out
repnz
das
std
adc
pop
outs
pop
or
adc
pop
(bad)
push
dec
imul
ins
xchg
ins
jmp
mov
das
popf
ins
das
test
mov
mov
and
mov
das
fidivr
in
fistp
jmp
jmp
repnz
push
ins
adc
sbb
fidivr
and
das
ins
das
cmp
jmp
inc
das
push
ins
das
pop
pop
xchg
mov
push
xchg
pop
cli
pop
das
mov
outs
dec
xor
inc
push
outs
push
inc
les
or
pop
jb
rol
push
movd
sub
cdq
into
xlat
lea
xchg
aas
das
push
fdiv
xor
aas
nop
loop
xchg
test
(bad)
mov
outs
addr16
adc
outs
cmps
and
ins
in
daa
sub
(bad)
inc
sbb
outs
pop
sbb
rcr
pop
pop
outs
daa
bound
outs
in
mov
outs
sub
call
outs
pop
call
daa
pop
stos
outs
inc
mov
mov
dec
pop
ret
retf
call
aas
(bad)
call
xchg
push
pop
clc
pshufw
xchg
imul
aas
pusha
mov
push
pop
mov
push
push
or
mov
mov
jo
outs
adc
xor
add
data16
jo
inc
cmovs
test
adc
jmp
dec
loopne
dec
in
mul
outs
xor
rol
mov
sub
out
sbb
add
push
(bad)
xor
daa
push
inc
mov
mov
test
jo
lock
das
cmp
mov
or
pop
int
mov
aad
fisttp
div
outs
mov
pop
repz
dec
push
jno
or
jmp
jno
daa
jno
fisub
mov
jg
into
in
ss
pop
dec
cvtps2pd
(bad)
sar
xor
jno
jb
jo
sbb
jg
jno
xor
cmps
loopne
xor
call
aad
movs
jno
lods
jno
jno
scas
mov
or
(bad)
shl
adc
add
jno
loopne
loopne
loopne
jg
jno
lock
daa
mov
pop
ja
call
cmp
push
push
mov
adc
push
clc
mov
adc
call
pushf
xlat
push
jb
es
out
cdq
scas
jb
ds
fstp
dec
outs
or
push
jb
test
jb
jb
outs
jb
cmp
cwde
adc
mov
adc
cmp
ss
sub
mov
pop
sub
daa
or
repnz
mov
cmp
push
jb
mov
out
fsubr
out
aas
jb
pop
xor
mov
das
adc
ret
mov
jae
xor
adc
mov
(bad)
rcl
jg
je
frstor
and
ins
lahf
mov
jae
jae
add
xor
in
or
into
jae
(bad)
in
lock
out
cli
add
xor
je
sbb
inc
dec
lahf
es
je
je
and
test
jb
inc
ins
nop
(bad)
push
xor
mov
inc
mov
mov
inc
dec
mov
lock
pop
je
adc
imul
mov
mov
je
bound
setl
fsubr
popf
out
lods
je
mov
mov
(bad)
out
iret
je
pandn
add
pslld
std
aas
in
scas
jbe
syscall
jne
or
jb
jne
jne
dec
jne
adc
xlat
test
jne
js
das
rcr
push
shl
mov
push
or
inc
mov
inc
jmp
dec
fdiv
push
jecxz
aas
cli
jne
ja
mov
mov
jbe
or
es
jbe
sbb
add
addr16
out
or
adc
jno
pop
jl
jecxz
dec
or
jbe
inc
mov
mov
aas
loope
jbe
fdiv
out
add
pushf
xchg
jbe
ja
ja
sbb
cli
aas
push
ja
sub
xchg
ja
xchg
jae
ja
ja
push
ja
ja
outs
pushf
jecxz
ja
fwait
ja
ja
or
sar
pop
and
push
cli
ja
cmp
sub
cs
mov
lods
nop
dec
dec
pop
in
jmp
dec
lahf
test
jno
xchg
mov
jo
add
pusha
or
js
stos
rol
addr16
nop
mov
outs
daa
pop
icebp
stc
out
add
outs
loop
jmp
jns
call
pusha
add
mov
mov
mov
dec
inc
popf
test
xlat
jns
jns
push
das
setnp
jae
dec
jb
addr16
outs
and
test
lea
das
mov
(bad)
scas
jns
mov
(bad)
in
sar
stc
pop
loopne
ror
pop
mov
adc
inc
pop
jp
dec
jp
push
(bad)
loopne
outs
pop
pop
pcmpgtw
pop
outs
or
jge
test
(bad)
in
(bad)
jmp
movs
paddusb
into
lods
inc
mov
mov
arpl
dec
pop
aad
fnstsw
in
in
pmaddwd
jnp
ret
pop
add
in
out
push
pop
sbb
fist
out
sub
and
fsubr
es
dec
andnps
and
imul
call
cmp
dec
jnp
test
(bad)
jnp
loopne
dec
setge
jnp
push
iret
ins
lgs
(bad)
jnp
xor
outs
bswap
xor
jnp
(bad)
jnp
fsub
or
jl
adc
cmp
jl
sub
ds
jl
inc
inc
pop
and
(bad)
jl
mov
xchg
test
cmp
cmps
sar
mov
jl
cmp
inc
xlat
cmp
ror
ja
push
scas
ret
test
ret
iret
cld
rcl
or
dec
add
mov
push
pop
hlt
sbb
mov
mov
call
or
das
fild
jge
jge
popf
imul
pop
cmp
jg
jge
push
jge
aaa
lods
adc
add
out
jg
test
cmps
jge
xchg
daa
daa
daa
daa
sahf
cmps
mov
jo
daa
daa
(bad)
int3
jge
xlat
jge
jne
scas
addr16
xchg
in
jge
clc
jge
dec
cmc
adc
push
jle
ret
ret
addr16
xchg
das
jle
test
jle
jle
push
jle
cmc
xor
fbld
xchg
jno
jo
icebp
xchg
jg
jle
xchg
jmp
jle
popf
jle
popf
push
fistp
mov
jg
push
pop
jecxz
jle
leave
jle
aam
test
fistp
jmp
cmc
jle
add
jg
cmc
xchg
jle
push
jg
and
sub
cmc
repnz
fild
dec
jg
repnz
dec
xchg
pop
jg
arpl
jg
cmp
push
inc
test
stc
pop
xor
(bad)
jg
jg
mov
jp
jg
into
jg
hlt
adc
adc
mul
(bad)
iret
in
jp
pop
stos
dec
stos
es
inc
jo
cmps
fcmovnbe
xchg
sbb
sbb
and
add
daa
adc
push
mov
or
int
scas
sub
sbb
iret
xor
pop
pop
sub
jne
sub
fiadd
scas
xchg
sbb
cmp
mov
psrld
scas
cld
mov
jae
pop
pop
sub
mov
sbb
and
icebp
pop
sub
scas
cmp
lods
add
inc
adc
(bad)
xlat
(bad)
mov
mov
xor
js
xchg
add
mov
ja
xor
bswap
xlat
loop
sbb
addr16
fwait
jbe
adc
sbb
jne
adc
out
xor
pop
shr
push
test
xchg
(bad)
das
movs
(bad)
dec
or
mov
mov
or
inc
addr16
enter
in
test
push
in
ffreep
sbb
cmps
fadd
mov
xor
cmc
and
movs
sbb
or
leave
sub
xchg
hlt
xchg
in
sub
mov
cmc
sub
jmp
mov
mov
es
jp
leave
dec
sbb
push
enter
adc
mov
inc
aad
js
inc
xor
add
int
or
outs
mov
add
mov
fsub
push
push
jmp
leave
pop
jl
inc
xor
sbb
int
in
sbb
sub
mov
sbb
pop
rol
jb
pop
add
mov
nop
push
and
mov
cmp
mov
pusha
retf
shr
adc
test
cmps
clc
add
xchg
dec
test
test
pop
test
outs
and
jo
xchg
mov
imul
(bad)
test
mov
test
rol
fild
adc
xchg
xchg
pop
comiss
aas
mov
out
call
jnp
scas
cmp
retf
call
int3
or
int3
scas
sahf
test
test
pop
int3
xor
xchg
cwde
rol
xchg
xchg
xchg
xchg
push
xchg
jmp
jp
ficom
xchg
test
lods
nop
dec
dec
scas
mov
add
mov
xchg
int3
pop
or
mov
add
dec
jmp
pushfw
lods
mov
lock
push
into
dec
scas
cmp
into
pop
sub
and
mov
repnz
stos
in
cld
or
push
jb
cmp
retf
ret
cdq
in
iret
fs
leave
push
repnz
ret
lods
mov
int3
mov
(bad)
sbb
add
pop
xlat
sub
das
cmps
or
sar
shr
xchg
(bad)
scas
test
dec
cs
cmp
adc
daa
xchg
and
and
xor
cwde
int
xchg
dec
and
dec
pop
and
iret
les
in
inc
dec
repnz
sub
cmp
cdq
dec
dec
and
shl
dec
test
int3
fsubr
in
repnz
dec
dec
pushf
xor
call
scas
jb
push
jb
sar
in
jb
js
lods
in
xchg
aam
hlt
call
push
aam
inc
or
popf
mov
dec
push
pop
ror
mov
pop
mov
pop
add
add
and
push
lods
aam
mov
sti
add
xor
js
ja
mov
add
bound
adc
add
xchg
or
sub
test
push
aad
aad
ret
inc
cmps
dec
movs
pop
lods
movhps
out
pop
xlat
das
fist
bound
xchg
push
lds
cmp
inc
mov
aad
shr
cwde
shl
mov
inc
jns
xchg
pop
or
and
sub
aaa
(bad)
mov
cmp
loopne
jb
js
mov
or
outs
pop
ror
xlat
call
mov
popf
imul
int3
push
mov
aam
loop
loopne
outs
inc
xlat
mov
fs
push
xlat
or
(bad)
xlat
add
pop
loop
pop
jecxz
leave
in
clc
add
inc
adc
xchg
ds
aas
das
mov
cmp
inc
mov
push
mov
sub
mov
mov
jl
xlat
mov
pop
mov
cmps
mov
mov
mov
mov
mov
stc
push
add
mov
inc
test
fsubr
or
jmp
adc
adc
imul
cmovo
leave
mov
popa
bound
cmovle
pushf
lahf
pop
mov
daa
data16
test
dec
push
fst
pushf
fcos
fldenv
outs
adc
mov
add
pop
mov
ror
(bad)
mov
pop
call
(bad)
out
fild
(bad)
fld
inc
addr16
inc
icebp
xchg
dec
sub
addr16
adc
fist
sub
fimul
add
pop
fidiv
iret
jo
cmp
lea
lea
mov
pusha
out
pop
push
fst
es
pop
je
(bad)
fld
push
pop
sbb
cmc
mov
pop
adc
lea
lea
mov
push
ret
lea
cmps
pop
shl
sbb
add
xor
pop
push
jb
popa
fmul
aam
les
idiv
jae
cmp
push
mov
mov
push
sub
add
cmp
(bad)
fsub
pop
sbb
cmp
inc
movs
fsubr
bound
cmp
mov
enter
xor
pandn
inc
inc
call
or
outs
inc
bound
cmp
(bad)
fisttp
loopne
inc
div
sahf
mov
inc
clc
add
cmps
mov
scas
mov
pop
mov
es
sbb
xchg
das
mov
das
mov
sbb
pushf
loope
das
in
fisttp
(bad)
cmp
adc
das
or
cs
push
ja
(bad)
lahf
sub
and
mov
ja
setle
and
pop
xchg
fisubr
loopne
loopne
mov
inc
add
das
cmp
fiadd
pusha
or
fimul
and
dec
fadd
fistp
pop
push
out
lock
add
(bad)
cmp
dec
adc
jo
out
sbb
and
pop
inc
repz
and
pusha
xchg
(bad)
jg
fistp
jns
xchg
push
jb
jp
push
and
out
adc
(bad)
pop
lahf
jg
nop
or
cmps
pop
jmp
mul
ret
cdq
es
(bad)
sbb
loopne
nop
or
loopne
add
push
xchg
mov
sub
jo
push
jg
mov
test
les
jo
js
xchg
sub
bound
daa
cmp
loopne
loope
das
and
lods
lds
xlat
iret
xchg
ja
mov
fisttp
das
out
maskmovq
in
add
pop
xchg
das
setb
inc
int3
sub
add
jo
jg
sub
nop
xchg
dec
push
mov
clc
rcl
fisubr
mov
dec
int3
sub
xchg
inc
xchg
loopne
outs
adc
das
push
mov
js
jg
das
adc
lock
call
dec
sbb
loop
les
cmp
fsubr
pmaxsw
jmp
pop
dec
pop
cdq
cmp
movlhps
cmp
iret
aaa
xor
adc
(bad)
and
jecxz
dec
inc
cmp
into
pusha
jecxz
jecxz
mov
scas
dec
xchg
test
xchg
cdq
out
xchg
outs
dec
outs
adc
xchg
pop
imul
dec
dec
xchg
jno
lods
pop
mov
mov
enter
fistp
test
aaa
icebp
xchg
stc
xchg
mov
test
mov
xchg
aas
pop
jo
dec
outs
mov
cmp
mov
xchg
mov
push
cmp
out
inc
mov
movups
out
adc
xchg
outs
jle
das
scas
xchg
pushf
sub
pop
mov
xlat
sar
sbb
inc
fbstp
(bad)
and
xor
clc
in
out
dec
pop
(bad)
in
xchg
adc
mov
push
add
push
xchg
pop
loope
adc
xchg
dec
in
out
xchg
lods
cmps
sbb
bswap
leave
leave
leave
adc
es
dec
outs
(bad)
out
pop
inc
xchg
dec
push
xchg
mov
push
minps
call
xchg
fistp
outs
(bad)
mov
ret
fidivr
daa
jnp
pop
xor
mov
pop
fcmovb
and
in
in
adc
adc
or
(bad)
push
push
pop
push
xchg
or
cmp
push
jb
loopne
mov
cmps
test
xchg
je
jno
and
add
jg
int
loopne
xchg
xchg
xchg
jmp
js
xchg
and
adc
xor
xchg
out
shl
inc
jne
out
lods
out
sub
aad
test
out
push
out
in
enter
xchg
push
cmp
js
jnp
inc
pushf
xchg
sbb
pop
call
(bad)
call
add
sbb
pop
in
push
stos
out
mov
mov
daa
add
int3
aam
push
xchg
lea
in
pop
fsubr
xchg
fld
xchg
mov
push
iret
addr16
mov
daa
xchg
pop
dec
xchg
lock
push
pop
pop
punpcklbw
push
out
jmp
and
xchg
iret
mov
cmp
inc
push
cs
(bad)
jmp
xor
push
jmp
iret
out
(bad)
mov
out
ret
xchg
daa
retf
out
aas
test
mov
xchg
iret
jecxz
mov
jmp
repz
inc
sub
scas
jmp
jmp
call
loopne
daa
push
cwde
mov
cwde
(bad)
cwde
adc
inc
or
inc
push
cwde
pop
cwde
int
xchg
jg
cwde
aas
imul
das
add
fwait
loope
outs
das
cdq
cwde
inc
mov
push
cwde
fwait
js
cwde
scas
cwde
pop
pushf
nop
adc
rcr
xor
mov
push
in
(bad)
jmp
ds
inc
mov
push
inc
js
(bad)
pop
jo
ins
in
in
(bad)
hlt
aaa
cld
cwde
fidiv
pop
push
(bad)
xchg
adc
sbb
inc
adc
cmp
cmps
sbb
inc
add
xchg
dec
jg
xor
in
cmps
add
cmps
fisub
sbb
inc
in
cmps
push
out
cdq
cmp
mov
mov
cdq
outs
jno
pop
add
and
cmps
add
data16
test
ror
push
in
dec
jne
dec
icebp
and
das
iret
pop
jo
loopne
in
xchg
popf
sub
cdq
mov
mov
dec
or
(bad)
stos
pmulhuw
cdq
in
jl
outs
cld
cdq
out
call
out
dec
out
or
daa
call
aaa
call
outs
out
je
jbe
shl
leave
inc
repz
addr16
add
push
fwait
inc
test
int3
pop
fwait
ja
fwait
ja
push
scas
push
cmp
mov
aaa
cwde
fwait
mov
xor
bound
in
or
ror
pusha
loopne
(bad)
push
pushf
dec
fisub
mov
inc
lea
ficom
lock
loope
mov
fsub
lock
cdq
inc
push
lock
les
nop
sub
ror
les
aaa
pushf
in
cmp
xlat
ret
aas
retf
psrlq
jbe
in
lahf
setge
and
not
leave
mov
inc
push
dec
data16
and
add
lahf
mov
ins
add
popf
out
cdq
pop
mov
pushf
mov
out
lock
add
scas
pop
out
push
sbb
out
(bad)
test
repnz
cmps
push
push
nop
sub
mov
push
pop
add
out
mov
mov
int3
addr16
mov
xchg
pop
(bad)
daa
mov
ja
xchg
lock
aad
inc
repz
mov
pop
dec
dec
mov
aas
mov
movs
add
rep
or
addr16
cmp
aaa
jo
mov
pop
mov
lahf
inc
mov
jae
das
lahf
or
aas
loope
lahf
inc
pop
lahf
pusha
lahf
inc
int3
clc
out
push
js
sbb
pop
loope
or
hlt
neg
push
pop
jo
xchg
pop
hlt
inc
ret
mov
xchg
mov
in
sbb
mov
xchg
pop
int3
js
popa
cmps
lahf
push
aam
fcomp
in
or
out
lahf
ja
cmps
push
icebp
pop
mov
dec
inc
jno
cmc
out
pop
mov
in
mov
lods
cmc
adc
push
and
js
jp
or
aaa
push
dec
mov
out
pop
aaa
call
outs
mov
out
test
cmp
mov
cmp
div
cmp
addr16
je
inc
sub
xchg
mov
jmp
mov
jo
addr16
repnz
adc
sahf
or
pop
xor
les
xchg
mov
or
push
test
push
fist
not
add
rcl
iret
cmp
or
mov
mov
inc
mov
mov
mov
push
mov
pop
push
mov
mov
adc
mov
je
aas
cmc
cmps
mov
fbld
(bad)
clc
mov
mov
xchg
cmps
test
xchg
mov
mov
(bad)
and
pop
push
clc
inc
clc
add
xchg
loopne
mov
mov
mov
aaa
hlt
sbb
outs
xlat
outs
xor
adc
xor
dec
aaa
xchg
leave
inc
mov
aam
xchg
fcmovne
jmp
ror
cmp
mov
int3
or
mov
cdq
and
mov
dec
dec
dec
dec
lea
dec
dec
lods
mov
lds
dec
dec
int
fucom
dec
dec
dec
dec
in
cmc
std
add
add
xchg
xchg
sbb
pop
aad
add
shl
inc
add
(bad)
sbb
(bad)
cli
mov
push
push
addr16
push
push
lods
cli
aaa
rol
mov
pop
movs
xchg
xchg
fisub
push
jle
das
pop
jnp
sub
movs
inc
(bad)
or
mov
dec
cmc
enter
movs
fisub
int3
sti
call
movs
movs
into
sub
jo
adc
daa
inc
cmovp
movs
push
nop
push
sub
pop
test
fisttp
mov
push
cld
xchg
(bad)
cld
dec
out
jo
bound
lahf
ret
test
mov
(bad)
movs
iret
add
cmp
movs
pop
out
mov
ss
cmps
fisttp
pop
into
int
cmp
(bad)
dec
dec
outs
sub
aas
inc
dec
dec
dec
dec
dec
push
pop
addr16
jp
outs
pop
pop
movq
in
jbe
xchg
sbb
push
pop
scas
movzx
loopne
outs
daa
mov
je
mov
jbe
pop
fisttp
out
(bad)
(bad)
out
pop
mul
dec
std
aaa
dec
sub
popf
out
inc
pusha
daa
mov
enter
aam
hlt
adc
test
add
(bad)
das
movs
and
push
in
sub
xchg
pop
push
inc
push
xor
xlat
adc
movs
jne
outs
out
call
mov
loopne
pusha
cmps
pop
push
jb
mov
jmp
fsub
jmp
jbe
push
(bad)
fistp
mov
pop
ror
ret
int
out
(bad)
fcomip
cmps
out
add
adc
pop
call
and
inc
add
pop
jno
jae
push
inc
pop
in
in
sub
es
sub
add
add
and
or
(bad)
psrad
push
pop
jl
push
and
xchg
xchg
ins
es
test
popf
mov
xchg
mov
ss
pop
addr16
add
inc
add
dec
xor
adc
inc
dec
jo
or
add
xor
inc
pop
cld
add
adc
jo
inc
les
dec
cmp
repnz
inc
push
xchg
dec
and
pop
cwde
add
ror
jbe
and
in
dec
cmps
cld
or
sbb
cmps
inc
(bad)
or
stos
inc
fisttp
sub
punpckldq
mov
mov
pop
out
inc
xchg
add
mov
pop
adc
enter
test
loopne
dec
adc
stos
out
lock
dec
and
scas
sub
and
pop
ins
mov
pop
addr16
push
and
ja
xchg
pushf
stos
clc
out
ja
add
add
fadd
pop
fwait
sub
add
popf
xchg
pop
call
cmp
dec
and
cmp
sub
and
push
out
mov
add
dec
push
xchg
or
nop
sbb
lods
neg
lods
inc
(bad)
push
add
pop
lods
lods
dec
push
push
outs
push
sbb
adc
clc
sub
inc
lds
add
aas
outs
or
sub
add
pop
pusha
pop
scas
loopne
call
mov
adc
or
cdq
push
lahf
jo
js
sahf
out
push
add
(bad)
push
out
(bad)
mov
ror
div
fimul
xlat
and
fs
xchg
add
xadd
xlat
add
push
or
jb
push
out
or
fimul
add
or
sub
inc
push
mov
sbb
inc
aad
aas
aaa
mov
inc
xor
push
xor
mov
pop
xchg
dec
jne
in
or
pushf
sub
loopne
xor
sbb
pusha
ret
sub
cmp
aaa
inc
shr
cwde
mov
jo
pop
pop
push
enter
pop
dec
cmps
or
dec
pop
enter
xchg
fsubr
nop
pop
clc
cmp
pop
shl
in
xchg
fwait
outs
pop
fiadd
jbe
xchg
mov
in
movs
call
mov
jo
pop
adc
ja
std
imul
xchg
pop
cmps
icebp
pop
ret
int3
fisub
aaa
addr16
and
adc
jl
call
fdivr
inc
jp
or
inc
mov
cmp
mov
or
mov
push
xor
(bad)
lock
int3
cmp
int
into
and
jb
xchg
iret
les
dec
push
sar
out
test
nop
mov
mov
mov
cmps
jg
or
jecxz
pop
rol
icebp
inc
adc
push
sub
mov
pushf
loop
push
mov
aam
add
call
mov
out
bound
mov
dec
(bad)
cmp
leave
mov
push
(bad)
mov
add
(bad)
mov
adc
sysret
je
test
js
scas
test
(bad)
mov
popa
inc
push
pop
mov
mov
ins
push
xor
mov
cmps
and
call
xlat
xchg
mov
pop
push
inc
or
sub
ins
(bad)
push
jmp
test
pop
ret
iret
adc
dec
push
in
and
push
pop
hlt
or
aaa
adc
and
mov
aaa
sar
je
adc
lock
dec
jb
loopne
pop
(bad)
jl
mov
aaa
dec
and
adc
jmp
mov
or
jg
outs
cmp
(bad)
mov
mov
loopne
push
pop
xchg
push
mul
inc
dec
jb
(bad)
pusha
adc
adc
or
fsub
nop
inc
cmp
(bad)
xlat
stos
bound
ret
ss
enter
and
push
dec
dec
inc
mov
push
jmp
xchg
mov
inc
popf
mov
pop
pop
mov
xchg
ja
adc
mul
test
cmps
cmp
mov
dec
jmp
mov
pop
and
ficomp
xchg
mov
push
inc
adc
dec
cmp
adc
call
sbb
push
xchg
jo
adc
loopne
div
pop
mov
les
add
(bad)
push
je
out
and
lock
daa
pop
adc
push
js
add
enter
int3
add
dec
mov
mov
or
addr16
jb
cmp
xchg
pop
sahf
pop
jb
jb
mov
retf
jb
jb
jmp
add
or
aas
mov
das
mov
jbe
je
mov
push
inc
lods
push
xchg
and
sub
rcl
loopne
push
xor
and
push
cmps
cwde
in
and
cmp
scas
sub
cmp
dec
jo
movs
nop
pop
inc
ds
xor
scas
nop
aad
sub
mov
xchg
outs
mov
ficom
mov
mov
push
jno
outs
xchg
sbb
pop
or
test
mov
mov
shl
sbb
sbb
call
sbb
mov
and
mov
mov
add
pop
sbb
mov
sbb
sbb
lock
sar
mov
pop
dec
push
lods
mov
ds
sub
nop
inc
sbb
add
cld
outs
call
test
popf
in
sbb
scas
pop
sbb
sub
mov
mov
mov
call
cmps
push
scas
sub
daa
push
inc
cwde
bound
or
nop
test
xchg
add
sbb
nop
mov
in
pushf
in
xchg
add
daa
and
popf
sub
push
call
mov
cld
pop
cmp
or
dec
cs
xchg
or
cwde
mov
and
mov
mov
call
dec
test
daa
into
sub
aas
adc
outs
xor
mov
pop
and
mov
iret
sbb
call
les
rcr
das
mov
cld
mov
sub
addr16
or
dec
jo
(bad)
push
push
dec
push
xchg
fs
aaa
mov
push
push
add
xlat
cs
jmp
out
push
or
leave
js
mov
push
or
rcl
mov
mov
xlat
inc
adc
sar
sar
mov
pop
pop
ja
ja
jo
push
mov
les
(bad)
pop
push
sbb
push
or
outs
test
pop
xor
mov
pusha
pop
jno
push
xor
aas
xor
aas
jo
add
and
clc
lods
fsub
cmp
je
test
xchg
jmp
aam
mov
lgs
sar
rol
dec
and
shl
stos
jmp
push
sbb
sbb
xlat
pusha
and
inc
cmps
jmp
and
or
mov
jmp
ja
jo
aaa
bswap
rcl
sbb
movs
dec
pop
in
sldt
adc
mov
les
sar
fiadd
and
xchg
shl
nop
dec
dec
inc
jb
ins
ja
mov
pusha
inc
loope
ret
push
in
call
ret
dec
fwait
das
ret
and
mov
xchg
ja
fistp
sub
call
in
xchg
or
fdiv
jecxz
ja
mov
call
adc
inc
inc
inc
ret
pop
adc
adc
and
jg
mov
cdq
test
fild
adc
fistp
and
xor
les
retf
lock
dec
cmps
idiv
pop
in
jg
adc
add
push
pop
adc
sub
fcmovnb
push
jmp
jmp
dec
movs
jmp
imul
ror
div
or
push
inc
es
mov
push
es
popa
pop
and
inc
push
xor
es
dec
adc
es
lds
es
push
mov
jo
daa
popf
clc
add
das
test
ja
out
inc
push
dec
daa
mov
xor
lds
daa
xlat
loopne
push
icebp
pop
daa
push
pop
lock
shl
les
sub
adc
test
jnp
ror
pop
and
xor
xchg
cmp
inc
pop
xor
ss
jmp
rol
push
daa
jb
leave
push
mov
aam
leave
leave
add
adc
or
das
push
cs
lock
add
dec
and
call
push
int3
jb
pop
jb
clc
mov
inc
xor
sub
push
sub
call
inc
test
xchg
dec
cs
mov
sbb
repz
enter
addr16
sub
nop
scas
mov
dec
dec
adc
sub
sub
pop
mov
pop
adc
xchg
xor
leave
pop
mov
jb
sub
pop
retf
les
push
retf
push
pop
addr16
xor
push
push
sub
jmp
mov
inc
lock
jmp
mov
ins
sub
js
sub
jl
push
dec
jo
(bad)
retf
call
inc
test
sub
mov
push
push
icebp
fs
cwde
retf
addr16
retf
push
je
push
addr16
out
jl
adc
dec
cs
cwde
cs
int3
sbb
in
adc
mov
ja
int3
jmp
push
adc
push
inc
test
das
aas
cmp
push
je
cmps
outs
dec
das
pop
loope
pushf
pop
xor
scas
test
(bad)
sti
adc
xchg
xchg
dec
cmps
fsubr
cld
xor
mov
int
xor
cmp
dec
out
ror
xor
int
call
xor
jo
push
fist
sbb
rol
rcl
push
lds
jecxz
and
pop
mov
inc
xor
xor
xchg
xor
or
cmps
cs
addr16
out
and
addr16
dec
add
push
enter
cwde
inc
cmps
sub
dec
inc
pushf
and
cmp
out
xor
sub
mov
pop
je
pop
int3
mov
sub
outs
cmp
jb
push
dec
cwde
cmp
xchg
ds
adc
dec
mov
ret
xor
sbb
mov
je
mov
xor
xor
outs
lahf
iret
push
iret
cmps
sub
(bad)
je
push
fld
mov
mov
push
mov
mov
mov
dec
pop
lock
xchg
out
mov
stos
xchg
xchg
(bad)
jmp
cmp
dec
jno
push
xor
xor
mov
or
xor
cmp
xor
movs
fmul
aas
hlt
imul
adc
(bad)
ins
aas
pusha
shr
xor
inc
jb
shl
inc
lock
mov
call
test
xchg
push
call
push
lock
mov
pop
jb
push
lods
sar
lock
lock
(bad)
rol
sar
push
shl
push
add
push
sbb
pop
in
adc
mov
pusha
dec
sbb
int
retf
pop
aaa
mov
jbe
adc
cmp
inc
pushf
dec
add
fild
aaa
aaa
push
aaa
call
cmp
pop
movs
cmps
xlat
xor
and
pushf
dec
shl
rol
psubw
jg
rol
aam
cmp
cmps
fxch
dec
das
bound
dec
or
iret
scas
aam
icebp
mov
fidiv
cmp
dec
pop
fisttp
fisttp
das
jbe
xchg
cmovl
nop
pop
xor
rcr
cwde
fmul
in
xchg
shl
jg
aas
sub
push
jo
sub
sub
popf
cmp
jg
inc
aas
in
test
inc
enter
or
dec
cmp
add
adc
push
jg
push
dec
adc
lock
sar
cmp
push
sub
iret
aas
dec
adc
daa
or
aaa
or
(bad)
loopne
mov
dec
cmps
mov
cs
loope
add
(bad)
movsx
inc
ror
xchg
test
xchg
pusha
icebp
and
xor
fild
xchg
push
fistp
or
das
xchg
repz
repz
xor
les
or
dec
pop
sbb
arpl
or
pop
aas
cwde
mov
dec
enter
dec
sub
dec
mov
xor
sub
jmp
cmp
adc
push
xor
jl
sahf
in
aas
push
dec
fisttp
push
dec
daa
fiadd
aas
add
adc
imul
cmps
pop
cmp
pop
sbb
ret
test
loope
mov
ds
(bad)
(bad)
jmp
outs
jbe
(bad)
jns
cmp
fist
pop
jl
jnp
data16
aad
or
(bad)
jg
(bad)
jg
sub
fild
fild
dec
fild
dec
mov
call
(bad)
mov
or
inc
fdivr
jg
inc
lock
fs
lock
ss
scas
sbb
cmps
scas
dec
pop
sub
aaa
xchg
mov
lahf
sbb
adc
adc
ss
aas
sti
pusha
inc
dec
mov
aas
shl
ret
jg
sub
lahf
clc
mov
out
sbb
scas
mov
ss
cmp
sub
sub
mov
aas
dec
scas
call
dec
jae
mov
mov
dec
dec
or
aas
mov
mov
push
push
loopne
mov
ss
mov
(bad)
mov
das
loopne
and
in
dec
aas
jb
xchg
int3
jno
aas
add
iret
loopne
inc
ret
test
dec
inc
jl
icebp
or
dec
iret
aam
dec
ucomiss
inc
dec
adc
les
push
mov
mov
aas
pop
xchg
mov
movs
stos
ss
stos
aas
mov
ss
or
int
cmp
push
inc
lock
jnp
iret
call
mov
iret
dec
add
stos
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
add
jbe
mov
cmp
aas
inc
push
xchg
js
add
add
fadd
aaa
mov
fwait
pop
sub
repnz
aas
inc
push
dec
ins
ret
push
push
or
pop
mov
fmul
mov
aas
adc
push
cdq
inc
aas
mov
push
xchg
push
pop
outs
pop
jb
or
push
pusha
aas
ja
dec
fimul
sub
fsubr
inc
lahf
mov
push
lea
add
cmp
or
aaa
aad
or
into
inc
adc
scas
xchg
bound
sub
int3
imul
ret
jbe
xor
dec
mov
stos
inc
inc
push
and
pop
je
js
cmps
inc
fadd
dec
aam
mov
out
jle
ins
add
inc
inc
and
mov
dec
scas
fsub
ja
mov
imul
add
xchg
xor
add
ins
adc
fisttp
adc
and
xchg
adc
shr
cmp
push
xor
idiv
ds
js
push
push
dec
repz
and
or
pop
in
cmp
repz
mov
cmp
repz
cmp
cmp
scas
fadd
enter
iret
rep
mov
es
dec
dec
add
or
adc
pop
mov
fcom
and
inc
aaa
fwait
and
inc
inc
fld
dec
or
push
dec
pusha
mov
inc
test
cdq
and
jmp
mov
loop
push
outs
and
pop
imul
ins
adc
std
add
sbb
mov
or
add
cvtdq2ps
loopne
test
je
inc
adc
push
dec
sbb
mov
data16
add
jg
mov
rol
push
mov
add
mov
movs
mov
push
push
pop
sbb
adc
xchg
ja
push
in
inc
xor
inc
stos
loopne
stc
pop
add
ret
dec
and
adc
das
sub
add
outs
push
sub
cmp
inc
cld
dec
pop
mov
pusha
ror
inc
ret
ret
inc
pop
pop
adc
in
and
dec
addr16
pop
add
or
jmp
popa
outs
jne
rcl
cmps
addr16
out
mov
pop
mov
adc
ins
gs
(bad)
cli
jle
mov
ins
gs
xor
dec
inc
scas
push
imul
mov
ss
inc
inc
or
scas
jmp
mov
adc
cli
mov
add
aas
inc
xchg
popa
fs
inc
nop
adc
mov
fs
push
js
pop
push
das
rcr
and
pop
outs
outs
fs
(bad)
pop
or
mov
nop
outs
jne
push
inc
push
push
dec
push
push
sbb
rcr
jne
in
loopne
rol
imul
data16
mov
adc
adc
scas
jb
jo
aas
sub
mov
ins
out
out
mov
xor
adc
pop
ins
xchg
or
icebp
outs
ins
inc
inc
inc
ins
sub
repnz
icebp
dec
mov
imul
mov
push
in
or
push
imul
push
test
sub
leave
in
imul
test
or
xor
cmpps
cld
cmp
push
add
adc
cmc
push
aaa
aad
push
addr16
fisub
adc
inc
inc
out
mov
mov
cmps
and
(bad)
aas
push
inc
push
(bad)
pop
lds
push
dec
ins
xor
add
inc
or
ss
add
outs
les
and
mov
add
xor
pop
add
outs
push
lahf
push
jns
fimul
pop
call
je
pop
cwde
ret
cmps
dec
arpl
add
dec
sbb
in
test
fsubr
or
fild
and
movs
idiv
stos
or
push
inc
jb
test
push
inc
jne
ja
or
cmp
imul
js
mov
cmp
mov
ss
dec
ins
cmp
add
xor
aas
mov
pop
xchg
adc
cs
mov
addr16
mov
or
aaa
aaa
pop
je
je
aas
(bad)
aas
dec
and
jo
aas
adc
mov
cmovbe
jo
xlat
cmovae
xchg
cmp
call
and
jo
(bad)
xor
call
mov
mov
push
xor
cli
cmps
sysret
sbb
dec
ficom
stos
les
mov
add
outs
rcr
inc
dec
xor
pop
cs
rol
mov
push
outs
leave
fadd
or
nop
pop
inc
pop
jp
test
loopne
rcr
xchg
div
ds
xor
sub
iret
repz
add
sub
pop
and
out
or
push
mov
mov
or
push
mov
adc
stc
jg
xor
dec
jb
pusha
add
dec
inc
push
jae
mov
inc
inc
aaa
jae
mov
bound
lahf
das
sti
add
js
sub
(bad)
mov
xor
inc
outs
dec
je
inc
(bad)
iret
pop
sbb
mov
(bad)
aas
adc
aaa
push
gs
aad
ins
and
push
ret
icebp
inc
outs
outs
lahf
inc
je
jmp
jne
add
adc
inc
scas
adc
aas
adc
(bad)
fmul
inc
inc
pop
pop
dec
push
push
dec
pushf
pop
adc
cmp
daa
or
rcr
or
and
aas
das
js
jns
mov
ja
jbe
je
out
sahf
jae
jno
outs
outs
jns
out
ins
ins
imul
ja
out
addr16
sub
out
or
push
pop
ins
jl
sahf
out
nop
mov
aam
iret
cmp
add
push
jl
add
rcr
jle
sub
out
(bad)
dec
inc
imul
inc
cdq
push
shr
dec
arpl
mov
js
inc
in
js
and
ins
add
gs
or
or
test
adc
dec
test
adc
dec
dec
sbb
sbb
movs
(bad)
test
aaa
pop
xor
int
jne
inc
addr16
inc
lea
lods
es
pop
fsubr
movs
pop
xchg
sub
sub
inc
inc
jnp
sbb
lods
adc
inc
js
inc
inc
daa
push
and
adc
pop
(bad)
fsubr
daa
aas
(bad)
ins
(bad)
in
xchg
xchg
sbb
outs
jae
xchg
xchg
push
pop
push
(bad)
imul
mov
push
dec
mov
jmp
inc
or
pop
outs
imul
push
mov
jae
add
add
adc
mov
pop
(bad)
push
add
inc
pop
jae
mov
xchg
push
out
int3
adc
xchg
push
pop
dec
adc
mov
push
and
int
sti
xor
cmps
pop
add
xchg
or
test
lods
retf
aas
push
cmp
or
push
shr
test
or
sub
or
adc
dec
or
mov
jo
mov
imul
inc
comiss
adc
dec
jb
add
loopne
outs
pop
xchg
popa
or
daa
arpl
pop
out
xchg
and
mov
rol
or
mov
xchg
loop
stos
adc
out
lea
inc
and
inc
sti
(bad)
pop
xchg
mov
fadd
mov
push
test
dec
adc
clc
inc
je
push
movs
jo
mov
add
sub
dec
jae
dec
mov
xchg
add
add
xchg
push
jnp
add
mov
lea
les
push
xor
xor
dec
pop
or
inc
mov
inc
cmp
push
or
test
push
ss
pop
popf
xchg
add
or
ins
add
mov
or
push
sbb
dec
popf
pop
sbb
(bad)
mov
push
xlat
inc
mov
pusha
push
or
cmp
sub
mov
daa
inc
and
frstor
pop
push
sbb
push
shl
into
xchg
xchg
and
pop
jae
push
inc
mov
sub
inc
inc
xor
mov
pop
retf
repz
shl
mov
fwait
mov
inc
inc
pop
xchg
ds
ds
jge
push
and
and
lock
in
or
adc
add
in
clc
ins
dec
es
jb
inc
jno
pop
or
outs
xor
jle
addr16
rcr
dec
(bad)
xchg
aaa
or
sub
mov
cmps
in
fld
outs
mov
rcr
enter
mov
or
outs
enter
pop
sbb
mov
fimul
mov
(bad)
clc
sub
scas
div
loop
shl
jae
lea
jmp
fist
xor
inc
mov
or
(bad)
jmp
inc
adc
adc
xchg
dec
fwait
xor
add
call
mov
add
xor
dec
xchg
xor
push
lea
pop
(bad)
or
cmp
push
inc
mov
inc
jmp
sub
pusha
adc
outs
pop
das
push
lea
pop
add
ja
inc
mov
mov
mov
pusha
or
ss
dec
dec
inc
inc
dec
xchg
(bad)
rcr
fist
sbb
frstor
add
int3
sub
dec
or
and
test
push
add
or
mov
(bad)
lods
je
xchg
fsubr
cmps
cmp
inc
dec
add
cmp
add
add
inc
inc
push
inc
mov
and
and
scas
dec
iret
gs
aas
enter
and
ja
adc
out
call
mov
jns
jge
int
dec
bound
loope
mov
add
sbb
add
or
and
push
pop
iret
jae
fidiv
je
jl
mov
movs
lods
mov
push
add
add
rol
pop
or
sbb
mov
jmp
or
mov
sub
shl
xor
push
adc
in
cs
or
repnz
add
add
jb
mov
adc
inc
adc
dec
cmp
dec
retf
or
daa
pop
mov
out
xor
push
dec
nop
push
or
mov
push
inc
inc
cs
inc
jbe
push
sbb
aas
inc
js
or
fisubr
test
jne
jno
xor
gs
xchg
inc
mov
mov
fcmovnbe
paddw
(bad)
xchg
nop
fwait
push
add
jg
cmp
xor
loopne
dec
fsubp
rol
jmp
jns
mov
lods
movs
loop
sahf
out
xchg
mov
mov
fs
iret
repz
pop
pop
push
push
dec
dec
cmp
repz
inc
cmp
xor
outs
iret
repz
adc
or
add
bound
cld
mov
xchg
ret
ror
ds
repz
mov
pop
jo
add
loopne
add
push
movsx
scas
xchg
iret
sbb
push
or
xchg
push
dec
or
mov
or
or
ja
add
adc
xchg
fcmovnbe
xchg
daa
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
(bad)
push
xorps
iret
repz
shr
jo
jb
sbb
push
push
pop
and
jns
xchg
fild
xchg
push
sub
jbe
in
sahf
pop
mov
das
icebp
in
shl
pop
jecxz
arpl
daa
das
in
cld
push
fld
jg
add
ret
pop
pop
mov
stc
dec
sgdtd
jno
mov
add
add
add
push
dec
int
add
add
add
add
or
jmp
or
xchg
out
pop
dec
add
js
push
mov
adc
or
cmps
scas
push
push
xor
out
mov
addr16
xor
pusha
push
dec
mov
mov
xor
pop
add
mov
out
sahf
adc
iret
repz
aas
push
sbb
xor
jns
sbb
mov
pop
cmp
or
push
dec
or
push
repz
fcomp
iret
pushf
push
jns
ret
jae
mov
push
cld
pop
push
jmp
(bad)
jns
pop
add
sbb
inc
das
aam
sub
aas
pop
mov
lahf
add
in
pop
cmp
dec
pop
pop
inc
mov
inc
push
sub
add
test
adc
sbb
and
add
add
cwde
(bad)
and
pop
sub
or
lahf
xchg
add
add
movs
jo
cmp
das
(bad)
cli
enter
pop
movs
sbb
or
shl
mov
inc
jmp
mov
pop
inc
movzx
mov
ja
std
add
mov
jle
adc
push
fidiv
fidiv
pop
mov
or
rcr
fsubp
stc
push
jle
mov
inc
out
adc
mov
and
push
push
aas
pop
and
add
cmps
js
cmp
xchg
(bad)
test
add
hlt
mov
push
js
push
fst
inc
fiadd
add
lock
or
iret
add
pop
rol
pusha
xor
cwde
add
jg
mov
push
push
pop
jo
mov
shl
xchg
call
xchg
sub
mov
mov
repz
push
xor
dec
ins
add
repz
js
dec
ja
xchg
push
push
rcr
mov
repnz
pusha
xor
cs
lock
mov
sub
es
jge
and
sbb
repnz
lahf
in
fimul
mov
in
lahf
fmul
push
je
mov
fs
fsub
xchg
push
cmp
aam
clc
sbb
cmp
cmp
cmp
xor
or
jmp
ss
pop
jecxz
lahf
cmp
fistp
das
mov
shrd
movs
neg
(bad)
js
pop
mov
cwde
push
jns
cmp
nop
push
and
mov
(bad)
adc
aam
psubb
jg
mov
sbb
or
inc
xchg
xor
push
add
jmp
xchg
push
dec
dec
outs
ja
jg
cmp
call
enter
adc
nop
or
or
pop
ret
movhps
hlt
adc
enter
push
pop
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcr
and
adc
mov
inc
jno
xlat
xchg
sti
(bad)
(bad)
inc
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
(bad)
jg
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
call
mov
sti
out
push
inc
mov
repnz
test
das
test
pop
stos
data16
(bad)
cli
add
(bad)
inc
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
jg
pusha
call
xchg
leave
(bad)
jmp
cmps
xchg
cmp
xor
dec
cmps
in
cmp
(bad)
(bad)
(bad)
call
cmps
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
add
(bad)
(bad)
mov
sub
fwait
xchg
and
and
jg
int3
int
add
aas
jno
or
mov
pop
fs
dec
lea
outs
adc
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
(bad)
(bad)
jmp
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
(bad)
(bad)
(bad)
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
(bad)
(bad)
call
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
cmp
dec
adc
movs
jmp
jg
sub
jge
inc
mov
jl
(bad)
(bad)
dec
push
arpl
int3
and
call
cmp
jp
and
(bad)
(bad)
(bad)
(bad)
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
(bad)
(bad)
push
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
call
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
call
sahf
out
pop
push
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
call
enter
fmul
add
mov
test
cmps
into
dec
and
push
push
cmp
test
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
mov
ret
dec
xchg
sub
lea
dec
stos
add
or
mov
out
add
mov
jbe
add
arpl
out
and
add
add
sbb
pop
xchg
iret
out
pusha
jle
aaa
pop
sub
jp
loopne
add
out
int3
adc
push
pop
pop
fdiv
jae
enter
pop
pop
push
xchg
or
or
pop
gs
push
pop
out
or
xor
fwait
push
sbb
add
push
aad
iret
mov
or
adc
(bad)
dec
add
retf
or
(bad)
sar
xchg
js
or
dec
js
xchg
ins
idiv
xchg
or
adc
int
pop
shl
sbb
xor
mov
lock
sti
jg
and
sub
mov
and
mov
and
idiv
adc
xchg
xor
mov
pop
jb
xor
stos
cmp
aaa
neg
mov
xor
inc
pusha
mov
mov
jb
cmp
hlt
sub
jae
and
inc
inc
cmps
xchg
adc
push
and
cmp
neg
mov
jmp
cmps
xchg
jp
sbb
jp
and
idiv
daa
cmp
clc
adc
test
push
add
sahf
and
idiv
or
int
and
daa
jle
aaa
mov
mov
push
mov
sbb
hlt
sub
cmps
mov
lock
arpl
js
clc
cmps
add
cdq
ins
sub
cmp
js
sahf
pop
mov
clc
add
pop
sti
loope
xor
xor
mov
push
outs
mov
or
into
jp
pop
loopne
jae
push
into
mov
jo
inc
stos
test
cmp
push
sbb
jp
mov
ja
mov
sbb
pop
pop
xchg
mov
xchg
(bad)
lahf
fist
adc
push
add
pop
sbb
and
or
xchg
pop
(bad)
loopne
cmps
sub
adc
adc
fadd
pop
jo
pop
sti
pushf
or
sub
jg
cmps
inc
into
cmp
mov
xlat
out
iret
test
and
sbb
(bad)
inc
add
jo
lods
jecxz
bound
jae
cmp
lds
loop
jb
inc
test
sub
test
mov
aas
xor
xor
adc
cmp
mov
(bad)
xor
inc
mov
xor
or
add
sub
ror
adc
adc
sbb
adc
xchg
jg
sbb
fimul
xor
stos
fidivr
adc
xchg
std
(bad)
das
sub
and
stos
ja
loopne
or
xor
test
push
shl
clc
cmp
js
cmps
xor
and
cmp
fdivr
and
cmp
pop
jp
mov
scas
add
mov
add
mov
ins
xchg
inc
push
ss
add
mov
pop
jb
dec
mov
push
add
rol
add
outs
jg
fisub
or
scas
sub
arpl
add
cmp
add
ror
in
xchg
mov
ret
push
pop
pop
sbb
and
cld
scas
jbe
fldenv
mov
and
jnp
test
cli
push
mov
pop
movs
xor
pop
mov
fs
push
sub
js
shl
mov
add
ror
pop
retf
mov
rol
clc
pop
out
ret
rcr
or
imul
jnp
add
jl
mov
(bad)
jle
add
jp
ret
push
adc
jle
adc
push
fldcw
jle
nop
(bad)
push
jmp
xchg
test
mov
xchg
push
xchg
mov
ja
push
lea
or
adc
xchg
cli
sbb
sbb
jo
adc
xchg
(bad)
jmp
inc
xchg
sbb
add
dec
xchg
sbb
push
xchg
push
cwde
push
add
xchg
sub
cdq
push
popf
push
outs
mov
call
adc
adc
push
sbb
dec
ins
add
mov
sti
lods
fist
and
cwde
and
push
sahf
sub
xchg
test
cs
fidivr
push
xchg
xor
sbb
cmp
push
lahf
add
inc
aaa
cmps
test
pop
dec
jbe
and
add
ds
mov
sbb
mov
mov
push
movs
xchg
ss
xor
lods
xor
mov
sbb
mov
sbb
xchg
adc
push
add
cs
(bad)
push
add
adc
mov
pop
sar
or
jbe
dec
ja
ss
xor
xchg
inc
add
sub
loope
adc
dec
cmps
mov
push
add
push
fidiv
mov
inc
dec
fidiv
cdq
dec
stos
mov
add
ss
push
push
mov
pop
push
fisub
stos
fst
sub
and
pop
sub
aam
aam
repnz
push
xchg
mov
mov
in
dec
nop
fadd
mov
xchg
xor
mov
mov
push
in
mov
rol
mov
adc
nop
retf
ja
push
mov
mov
outs
xchg
pop
add
pop
add
ins
ins
mov
dec
xchg
pop
push
lods
push
inc
mov
push
call
add
lea
adc
popf
out
sbb
das
xor
jae
dec
mov
xor
cs
stos
stos
mov
xor
mov
xchg
mov
mov
jle
inc
jbe
push
data16
cmp
mov
sbb
mov
ss
leave
inc
xor
xor
fmul
ss
pop
(bad)
pop
inc
(bad)
enter
sub
xor
ds
pusha
push
rcr
sbb
test
push
into
out
shl
fldenv
lods
add
ficomp
jnp
dec
push
or
xor
test
jns
cmp
xchg
push
es
mov
jo
xchg
jge
xchg
fcom
loopne
cmps
add
pushf
push
test
sub
in
outs
mov
sahf
sahf
add
pop
mov
xchg
fisub
shr
pop
adc
test
cmp
fmul
call
mov
pop
add
add
(bad)
sub
mov
ins
int
retfw
ret
shl
out
sti
mov
pop
shl
mov
mov
int
lods
rcl
ins
mov
ret
push
fstp
in
ja
push
rol
ret
add
enter
sti
cmp
add
xlat
retf
push
(bad)
into
add
aad
retf
call
xor
aam
aad
(bad)
rol
(bad)
mov
(bad)
add
jecxz
add
loopne
add
jmp
loopne
loope
add
in
push
jecxz
add
add
ins
imul
out
push
call
in
cs
aam
mov
clc
out
cli
push
icebp
add
hlt
add
add
sub
xor
call
stc
add
aaa
dec
out
or
(bad)
idiv
stos
(bad)
retf
in
cld
cld
repz
mov
retf
repnz
mov
pop
pusha
outs
pop
xor
test
or
mov
daa
fimul
pusha
jmp
pop
and
inc
jae
loop
mov
cmp
add
adc
and
call
jle
add
fs
in
mov
enter
or
adc
imul
mul
add
pop
xlat
in
mov
or
fnsave
add
ja
rep
pop
or
add
sbb
add
std
or
mov
mov
adc
cmp
inc
in
mov
inc
push
dec
xchg
add
ds
adc
outs
addr16
cmp
xor
(bad)
stos
in
mov
sub
add
(bad)
jge
xor
not
sti
ret
inc
add
loop
mov
inc
sbb
sbb
loopne
pusha
mov
jmp
inc
xor
call
mov
push
sbb
in
repnz
fidivr
jg
clc
mov
das
nop
in
(bad)
xchg
ins
ins
inc
and
(bad)
cld
out
mov
rcl
inc
retf
out
scas
ins
add
(bad)
jle
mov
sbb
out
out
xor
inc
int
(bad)
in
outs
into
mov
or
inc
xchg
(bad)
hlt
hlt
icebp
out
add
inc
ror
add
or
xchg
cwde
ja
jno
push
inc
cld
stc
loop
fldlg2
adc
or
rcr
push
rol
add
sti
(bad)
in
xchg
sub
adc
ds
fucomi
out
fcomp
(bad)
cld
cmp
mov
or
fild
call
mov
rol
push
into
dec
xor
xor
sub
add
adc
sar
add
(bad)
js
push
fs
pop
jl
xor
fisub
inc
(bad)
jmp
popf
and
fs
cmp
push
aam
lahf
jmp
test
fwait
mov
es
add
pop
xchg
repnz
in
int3
inc
imul
inc
pushf
add
jno
mov
xchg
neg
cmp
mov
cmps
inc
mov
jno
jle
inc
mov
(bad)
test
cmps
adc
inc
js
je
out
scas
test
mov
in
shr
inc
fidiv
std
add
leave
jp
mov
cmps
sub
std
in
inc
retf
mov
mov
sub
ror
scas
xchg
scas
iret
(bad)
fstp
sti
clc
or
xlat
cmp
dec
retf
les
push
outs
add
adc
add
lea
xchg
add
fimul
push
push
xchg
xchg
mov
ss
cmp
push
sahf
(bad)
xor
add
add
push
loop
lahf
inc
add
and
call
cmp
imul
add
inc
dec
movs
inc
jo
mov
push
push
or
push
movs
push
or
add
stos
adc
or
bound
test
push
cmps
dec
push
pop
test
dec
dec
or
or
sbb
push
adc
dec
add
mov
push
test
stos
push
pop
mov
push
adc
push
push
mov
add
dec
sahf
mov
mov
xchg
ins
mov
adc
mov
pop
xchg
pusha
mov
fisub
jg
lods
push
add
lods
push
es
adc
mov
push
push
mov
sbb
sub
mov
fisttp
sbb
push
sub
mov
popa
mov
es
and
pop
push
mov
cmps
lods
mov
mov
push
mov
mov
xor
pusha
inc
mov
add
std
outs
mov
mov
gs
mov
cmp
mov
mov
fnstsw
xor
push
mov
cmp
addr16
push
aas
mov
(bad)
mov
inc
mov
inc
mov
ja
inc
inc
lods
mov
push
mov
sbb
cs
fmul
into
or
adc
cld
and
xor
add
shl
(bad)
es
into
push
sbb
push
sbb
outs
fist
rol
jb
and
ja
clc
idiv
dec
leave
jl
push
ret
jge
ret
jg
arpl
in
call
pop
rol
pop
into
push
pop
mov
push
lds
imul
push
enter
(bad)
(bad)
push
rcl
ins
retf
mov
loopne
mov
push
jb
outs
fist
add
ficomp
fisub
add
add
mov
or
(bad)
mov
xchg
inc
loop
mov
xchg
xchg
add
jmp
add
xlat
imul
mov
mov
mov
mov
push
mov
mov
mov
mov
adc
shl
(bad)
int3
movs
fstp
sbb
sub
push
data16
jg
fld
add
mov
(bad)
mov
sub
loopne
loop
out
in
in
std
dec
(bad)
les
ret
push
(bad)
out
retf
xor
mov
ret
ret
jae
fcmovnb
fsub
test
retf
dec
add
mov
enter
xchg
mov
add
leave
push
rol
retf
div
add
fadd
int
rol
aad
shr
jnp
inc
cld
fst
add
rcl
push
add
fcom
jae
fnstcw
aad
add
rol
(bad)
fcomp
fstp
fdiv
fld
loope
fild
retf
in
mov
dec
int
pop
retf
pop
mov
ds
fistp
ss
cmc
(bad)
not
fucomp
mov
push
pusha
add
call
add
loop
push
out
in
push
jmp
adc
in
in
out
push
and
jmp
add
pop
inc
jmp
out
(bad)
cmc
add
jmp
sti
in
test
fcmovne
out
lock
hlt
lock
repnz
push
cli
push
cmc
jmp
push
sti
add
cli
(bad)
push
(bad)
aaa
scas
movs
sbb
add
in
xchg
xchg
cwde
sub
fsubp
(bad)
sahf
xchg
sub
aad
jl
adc
(bad)
fsub
xor
jmp
mov
cld
xor
mov
sub
sbb
in
pop
adc
outs
jo
push
adc
sti
jmp
xor
fwait
add
jp
je
xchg
sub
idiv
adc
xor
or
sub
inc
xor
lods
popf
das
int3
mov
add
aaa
or
rol
outs
clc
fistp
iret
cdq
call
sbb
popa
and
stos
sub
(bad)
out
xlat
adc
enter
jmp
push
repnz
clc
in
mov
or
sbb
jg
jbe
sub
dec
pushf
push
clc
jmp
pop
add
jecxz
daa
xchg
xor
adc
and
fwait
jg
or
out
out
jmp
xor
inc
shl
jp
pop
or
adc
and
add
sub
pop
clc
scas
dec
es
lea
movs
sub
pop
jg
jnp
(bad)
mov
or
retf
ja
ja
pop
pop
add
or
imul
fadd
add
jecxz
dec
dec
loopne
cmp
adc
xor
jg
pop
and
add
jle
lock
dec
dec
cmp
in
jns
bound
ficomp
loope
cs
ss
mov
je
pop
fstp
daa
stos
enter
mov
ja
xor
pop
ins
jg
outs
sub
inc
mov
xor
cwde
je
icebp
jmp
(bad)
xchg
movs
leave
ffreep
mov
mov
xor
mov
cmps
xchg
loope
or
or
adc
add
pop
cmps
add
add
push
cdq
shl
or
push
add
sahf
and
cmp
push
adc
sbb
sub
test
add
mov
inc
fiadd
scas
(bad)
mov
cmp
mov
xor
mov
cs
pop
mov
jp
cmp
bound
mov
mov
jbe
xor
scas
inc
movs
or
inc
retf
pop
add
movs
(bad)
rcl
ret
pop
push
iret
arpl
sti
adc
dec
imul
(bad)
rol
fcmovbe
add
push
dec
aam
fimul
ins
push
dec
(bad)
not
imul
fld
gs
jno
rcr
aam
aad
mov
iret
xchg
int3
xchg
imul
add
lods
imul
xchg
test
add
mov
pushf
mov
cdq
mov
mov
and
xchg
mov
fldcw
sub
adc
add
movs
add
push
(bad)
mov
stos
fimul
into
mov
mov
mov
add
cli
push
mov
mov
mov
mov
pop
mov
lods
inc
sar
pop
sbb
mov
sub
mov
out
adc
jp
enter
jecxz
fdiv
push
int
fsubp
enter
mov
cmc
out
repz
es
(bad)
sti
cld
and
or
pop
add
inc
sub
inc
cmp
push
pop
pop
dec
inc
cmp
std
mov
pop
adc
dec
aas
add
inc
dec
sbb
adc
push
add
inc
inc
movs
mov
push
sbb
or
mov
mov
sbb
adc
and
inc
mov
sub
and
cmp
or
(bad)
push
adc
pop
sub
arpl
or
pop
out
pop
xor
ret
into
and
bound
adc
xor
add
sub
retf
ss
adc
das
pop
daa
test
xor
pop
xor
loopne
push
ss
sbb
out
add
push
jbe
inc
dec
and
loopne
dec
inc
arpl
inc
push
dec
xor
add
inc
pop
pusha
pop
pop
inc
fbld
adc
and
inc
adc
sahf
out
push
pusha
xchg
shl
and
cmp
daa
xchg
inc
and
test
rcl
fs
sahf
lahf
lahf
idiv
push
out
dec
movs
in
push
test
sar
mov
fwait
fwait
cmc
jnp
jae
push
addr16
and
cdq
out
jg
mov
mov
rcr
add
(bad)
push
add
dec
jmp
dec
push
outs
data16
shl
out
std
mov
mov
xchg
xchg
fild
add
mov
cli
jmp
dec
inc
or
(bad)
fstp
sub
jmp
inc
pushf
pop
push
movs
and
mov
lods
xor
push
lods
add
data16
mov
out
fwait
dec
std
out
out
xchg
idiv
xchg
jmp
inc
push
add
dec
es
out
fcmovnbe
ins
mov
push
(bad)
pop
push
xchg
sbb
add
pushf
push
movs
and
inc
push
or
push
inc
(bad)
xor
out
(bad)
mov
jmp
call
fcmovbe
call
cmps
mov
dec
int
add
ins
sti
or
or
scas
jg
mov
adc
ins
pop
xor
jle
nop
call
push
fwait
sbb
mov
ret
xchg
sub
shr
retf
xor
sbb
mov
push
cdq
dec
loop
xlat
lods
(bad)
mov
mov
dec
push
mov
pop
dec
add
add
sahf
xlat
test
xchg
sbb
call
cmps
and
pusha
repz
pop
sub
add
push
int3
push
pop
shl
add
add
pop
push
leave
mov
pop
aaa
sub
inc
dec
push
into
cmp
pop
inc
call
push
adc
test
mov
dec
data16
jle
xchg
sbb
mov
pop
mov
retf
add
shl
es
add
(bad)
inc
xlat
mov
mov
inc
std
sbb
(bad)
mov
mov
push
pmaxsw
mov
mov
push
(bad)
ret
repz
pop
cwde
sahf
cmps
push
loopne
jns
lods
pop
mov
rol
enter
call
jmp
jmp
sub
mov
pop
gs
loope
inc
mov
xchg
ficom
fmulp
push
mov
push
mov
push
lea
push
mov
xchg
xor
js
push
lahf
cmps
push
stos
pop
sub
sub
add
cs
ret
add
add
(bad)
dec
add
(bad)
out
push
mov
(bad)
out
cwde
and
cmp
xchg
push
(bad)
out
adc
pusha
xor
mov
push
push
movs
mov
into
(bad)
jae
jno
xchg
push
lea
inc
push
xchg
push
sahf
cmp
mov
daa
pop
add
sub
cs
add
jmp
pop
mov
aad
(bad)
(bad)
addr16
cs
call
movs
cmp
mov
(bad)
popa
xor
xchg
adc
xchg
push
rol
in
xchg
pop
sbb
pop
nop
push
xchg
sub
dec
pop
push
call
enter
daa
daa
pop
and
es
jmp
lahf
push
add
rol
jle
shl
test
sar
add
xchg
adc
cmps
(bad)
pop
hlt
hlt
hlt
xchg
inc
or
push
push
adc
xchg
sbb
xchg
sbb
pusha
scas
and
test
jmp
call
mov
cmps
ins
mov
lods
inc
push
lods
ja
mov
mov
pop
add
add
adc
push
ss
fdivr
scas
or
jmp
in
in
(bad)
std
std
call
mov
or
xchg
setb
lock
sbb
cdq
sbb
mov
inc
loopne
push
push
inc
push
loope
push
call
fcom
dec
push
cs
jae
es
daa
mov
lods
inc
cmp
fdiv
sbb
pushf
js
(bad)
neg
(bad)
(bad)
fild
(bad)
add
(bad)
(bad)
(bad)
lock
stos
retf
mov
into
cmc
popa
shl
jle
mov
xchg
sbb
sbb
mov
or
pushf
es
push
dec
clc
dec
mov
jmp
jmp
xchg
jle
mov
jmp
mov
jmp
mov
(bad)
scas
pop
inc
jo
lods
push
sahf
push
mov
pop
jbe
pushf
push
cld
cld
cld
(bad)
loop
int
add
(bad)
fld
adc
or
imul
(bad)
out
jbe
xchg
mov
pusha
add
pop
clc
pushaw
push
push
add
(bad)
stc
cli
stc
call
mov
jmp
dec
in
sbb
sub
push
scas
mov
and
mov
push
shl
jle
jbe
add
xor
cmps
pushf
out
mov
add
das
mov
dec
add
call
loope
pop
pop
xchg
push
add
sti
inc
fsubr
sti
(bad)
jmp
jge
mov
(bad)
jmp
mov
popa
ror
mov
mov
sub
inc
loope
stos
inc
inc
add
outs
cmp
fwait
lods
in
add
jmp
add
cmp
push
jbe
adc
inc
pop
add
or
in
in
in
jmp
paddsb
pop
mov
push
ret
mov
or
mov
sub
pop
test
inc
pop
in
repz
icebp
repnz
loopne
jo
push
div
div
out
movs
adc
add
loopne
push
adc
mov
or
push
bound
adc
inc
(bad)
lds
xor
or
(bad)
push
push
les
rcl
popf
test
push
sub
loopne
rol
stc
clc
clc
daa
xchg
push
test
mov
(bad)
ins
adc
xchg
fist
adc
shl
sub
outs
into
jmp
sub
adc
movs
outs
sti
inc
fwait
inc
dec
test
xchg
pop
push
loopne
inc
ret
shl
push
push
mov
dec
mov
cld
(bad)
fistp
aam
add
(bad)
xchg
inc
and
mov
data16
cmp
xchg
inc
out
das
push
sbb
ja
adc
mul
xor
jmp
fdiv
mov
cmp
push
cmp
pop
(bad)
sahf
loope
sysexit
ret
pop
xor
std
sub
mov
cs
pop
pop
jbe
and
and
mov
cmp
sbb
push
and
add
mov
in
std
out
sti
shl
mov
mov
not
inc
pop
push
int3
pop
bswap
pop
jmp
sbb
out
into
xor
sub
cs
fs
sub
dec
scas
dec
push
daa
lods
int
or
and
inc
cmp
pop
sbb
and
out
(bad)
ds
cmp
dec
in
fbld
sbb
(bad)
mov
ds
pusha
(bad)
cmp
or
adc
push
cmp
(bad)
mov
(bad)
(bad)
ss
loop
es
cs
nop
pusha
mov
(bad)
mov
nop
test
sahf
push
and
(bad)
mov
xlat
loopne
or
fdivrp
or
pop
fild
inc
aad
inc
rol
aas
rcr
iret
add
clts
push
push
cmp
cmp
push
je
mov
aaa
ret
(bad)
pmaxsw
outs
mov
das
mov
cvttps2pi
sub
push
sar
jbe
fcom
inc
jbe
bound
call
add
lods
mov
inc
xlat
arpl
inc
aam
pusha
adc
rcr
push
push
int3
es
inc
cmp
es
call
ret
push
push
push
xor
xor
mov
cmp
pop
push
dec
pop
(bad)
(bad)
or
dec
retf
add
data16
(bad)
ss
(bad)
(bad)
inc
xlat
fs
aad
inc
push
addr16
rol
rcl
iret
push
int
cmp
pop
push
cmp
(bad)
cmp
pop
daa
ss
int3
mov
and
mov
ret
call
scas
leave
mov
mov
or
fiadd
test
into
xchg
sbb
arpl
int
sub
ds
dec
(bad)
push
out
adc
push
(bad)
(bad)
fidivr
call
int
int
test
repz
(bad)
(bad)
fisttp
fimul
xchg
(bad)
(bad)
(bad)
das
retf
push
sub
sub
(bad)
fisubr
dec
fdiv
xchg
jmp
jmp
push
sub
mov
xor
jmp
inc
lock
mov
test
xchg
push
lea
push
or
cmps
(bad)
jle
idiv
push
cmp
ja
mov
shr
inc
add
sbb
push
pop
sbb
(bad)
lock
pop
aad
pop
cmc
outs
mov
inc
(bad)
jl
dec
pop
(bad)
inc
add
pusha
inc
xchg
cmps
add
mov
mul
push
jge
add
ds
and
mov
add
jmp
or
sub
sub
fs
mov
inc
cmp
dec
movs
dec
push
stos
inc
ds
mov
or
or
add
(bad)
push
in
add
or
sub
cmp
pop
adc
mov
hlt
(bad)
xchg
jmp
sbb
es
jae
pop
or
addr16
sbb
pop
mov
loopne
add
ins
test
rcr
cld
ss
dec
jmp
call
add
inc
cmps
dec
push
sbb
sahf
(bad)
outs
ins
data16
out
ret
rol
dec
push
mov
cmp
add
or
pop
in
(bad)
cs
sti
mov
pop
test
dec
call
mov
mov
adc
(bad)
inc
adc
fdivrp
sahf
push
xchg
mov
out
ja
jbe
cmp
or
add
inc
lea
sbb
test
xchg
outs
(bad)
mov
test
pop
shr
stos
dec
xchg
push
jle
mov
mov
and
enter
cwde
sub
imul
add
outs
ret
add
add
cmp
loope
or
mov
or
mov
movs
inc
jle
pop
or
adc
mov
pusha
fbstp
pop
call
(bad)
pop
push
test
pop
jo
inc
aas
ret
loop
push
cmp
xchg
add
mov
inc
test
fstp
(bad)
out
loopne
sub
inc
lahf
inc
out
mov
inc
ret
es
hlt
popf
cmp
mov
sub
mov
or
mov
(bad)
mov
jmp
es
repnz
add
mov
mov
fmul
cmps
xor
jle
pmaxub
add
sbb
mov
(bad)
call
push
out
fidiv
inc
test
mov
mov
inc
imul
into
adc
inc
(bad)
fdivrp
inc
cmp
mov
push
or
out
sahf
add
out
sahf
or
and
jmp
or
cmp
jle
and
push
ss
mov
cmps
lods
dec
daa
mov
add
dec
call
adc
jbe
popa
mov
not
jmp
jp
mov
outs
out
fcmovbe
fprem
add
push
ds
stc
call
dec
mov
mov
shl
mov
fdivr
sahf
inc
mov
or
mov
fdivrp
into
push
mov
jmp
mov
fwait
cmc
mov
mov
add
imul
cli
jmp
outs
loope
loopne
shl
add
test
call
mov
xor
movs
push
pop
(bad)
adc
or
jmp
dec
fimul
push
mov
fcomp
adc
cmc
pusha
clc
scas
adc
out
outs
(bad)
cmp
push
loopne
or
mov
add
add
inc
xchg
arpl
fisubr
jmp
in
push
loop
in
push
dec
and
aaa
ficomp
shl
out
adc
ss
(bad)
out
push
adc
push
or
xchg
jmp
mov
mov
jl
ror
ss
sti
(bad)
cmc
mul
ins
out
sub
into
hlt
push
push
add
push
xchg
(bad)
sahf
call
dec
scas
sub
fwait
inc
push
stos
push
cmps
call
mov
cmp
push
xchg
loopne
push
sahf
rcl
mov
mov
mov
jno
xchg
pop
mov
or
outs
stos
sahf
cli
cld
or
sti
inc
or
fwait
adc
push
push
mov
mov
adc
lods
inc
push
push
add
add
(bad)
dec
adc
xor
ss
ins
outs
add
les
mov
shl
or
push
pop
push
mov
add
mov
call
mov
test
test
icebp
sub
cmps
outs
or
mov
(bad)
mov
or
xchg
mov
xchg
(bad)
(bad)
mov
pop
(bad)
ret
aaa
mov
or
je
push
scas
jmp
mov
pop
sub
jbe
jmp
mov
sbb
cmp
sbb
ja
lds
ja
dec
pop
loope
movq
inc
mov
dec
sub
(bad)
shl
ror
scas
mov
push
mov
jbe
scas
ds
mov
push
xchg
out
das
mov
xchg
ret
push
mov
xchg
pop
push
loopne
add
pop
cmp
sahf
xchg
pushf
mov
hlt
and
mov
jnp
les
scas
jbe
aaa
mov
mov
mov
jo
cmp
mov
xor
rcl
pushw
(bad)
aas
adc
or
mov
imul
inc
loope
ret
jmp
fisub
mov
mov
es
lock
(bad)
cmp
ins
xchg
ss
lds
xor
popa
scas
push
or
scas
mov
sub
pop
sbb
ins
jo
aam
shl
pushf
inc
movs
push
(bad)
(bad)
notrack
xchg
js
les
push
ret
and
jbe
mov
add
mov
outs
push
or
iret
aad
jno
pop
jno
outs
jno
mov
mov
hlt
out
loope
test
sahf
(bad)
jl
mov
rol
dec
inc
mov
or
inc
out
pop
jg
add
mov
(bad)
mov
jo
aas
addr16
add
mov
shr
into
call
(bad)
js
mov
sbb
mov
test
fbstp
cmp
(bad)
sbb
ret
mov
sub
xchg
sahf
mov
lods
mov
inc
cli
mov
dec
(bad)
mov
(bad)
mov
mov
cmps
cwde
mov
dec
cmp
sbb
lock
cmp
and
add
or
popa
inc
aaa
(bad)
add
cmovo
jns
xlat
push
add
(bad)
(bad)
lock
daa
inc
outs
and
mov
push
and
(bad)
scas
dec
das
rol
enter
fnstcw
adc
inc
push
ja
dec
inc
sbb
repz
push
test
xchg
dec
test
(bad)
jmp
dec
scas
dec
jo
mov
out
inc
loopne
jae
xchg
inc
jmp
out
xchg
lock
in
dec
mov
cmps
lods
xor
pop
cmps
sub
xchg
sub
and
or
sar
or
fild
inc
inc
xor
jb
stos
(bad)
mov
cs
inc
inc
dec
xchg
or
ret
add
push
call
lock
mov
xchg
adc
or
mov
movzx
pop
iret
ss
out
into
retf
pop
cmp
ss
push
mov
xchg
test
xchg
mov
inc
test
shl
test
(bad)
push
inc
push
inc
push
fidivr
adc
enter
mov
ds
ss
or
arpl
test
mov
push
push
call
mov
ret
(bad)
(bad)
rcr
cwde
jbe
push
dec
xlat
outs
xchg
pop
shl
scas
fadd
das
jle
mov
push
jg
or
lea
sub
(bad)
ins
inc
sub
sbb
cs
or
das
mov
(bad)
jno
(bad)
lock
mov
mov
movs
pusha
sbb
push
jns
push
ss
arpl
aaa
or
(bad)
ds
movs
adc
xor
xchg
xchg
jecxz
or
sub
add
xchg
cmps
inc
cs
fldcw
pusha
push
test
cmps
imul
push
into
mov
pop
add
ja
add
outs
loopne
dec
pop
cmps
xchg
movs
mov
pushf
outs
outs
pop
push
push
xlat
(bad)
movs
mov
inc
aaa
jg
add
lock
jg
mov
add
xor
(bad)
jg
jmp
and
push
sub
xor
push
pop
pop
add
mov
(bad)
(bad)
(bad)
fmul
xchg
xor
sub
mov
hlt
loope
jb
and
out
or
jae
inc
stos
lods
pop
adc
mov
lock
xor
pop
call
bound
mov
out
(bad)
fisub
inc
push
mov
push
aas
iret
xor
or
or
jnp
(bad)
push
xchg
cmc
stos
xlat
in
pop
sbb
(bad)
je
push
jmp
push
(bad)
(bad)
jmp
cmp
and
out
mov
adc
mov
aaa
or
push
push
div
(bad)
aas
or
rcr
inc
xchg
popf
and
jge
jmp
adc
pusha
sbb
test
ret
(bad)
(bad)
push
cmps
icebp
fcmove
jle
bnd
stos
inc
loope
ffreep
sub
and
jge
mov
rcr
mov
sbb
fwait
mov
inc
rcl
pop
mov
scas
fcmove
pop
fld
inc
push
mov
dec
add
aam
mov
addr16
ret
in
jae
cmps
aad
cld
(bad)
(bad)
call
mov
cwde
mov
aas
pop
mov
stos
push
sbb
mov
mov
leave
mov
dec
ins
mov
std
and
enter
jle
(bad)
(bad)
(bad)
(bad)
mov
push
mov
xchg
xchg
fld
cwde
int
sbb
leave
mov
or
add
inc
fnstenv
add
loopne
add
test
push
inc
pop
mov
xchg
mov
cld
js
enter
lock
in
add
lods
sub
dec
push
dec
jnp
sti
add
mov
inc
inc
add
test
retf
retf
pushf
int
push
(bad)
(bad)
(bad)
ffreep
mov
je
push
jb
cmp
call
dec
(bad)
add
and
(bad)
(bad)
dec
sub
pop
inc
ret
add
cmp
out
xchg
xlat
push
lds
xchg
leave
cmp
pop
inc
(bad)
(bad)
(bad)
jmp
movs
jg
jbe
scas
xchg
leave
pop
inc
jns
pushf
add
push
adc
xor
xchg
pop
sub
mov
inc
lds
(bad)
(bad)
jmp
dec
inc
inc
mov
mov
add
popa
addr16
dec
ins
pushf
(bad)
dec
or
and
je
in
pop
push
push
mov
jg
jp
and
es
int
mov
or
dec
xchg
test
ds
lods
outs
sbb
fdiv
(bad)
dec
xchg
stos
in
daa
call
mov
(bad)
push
stos
clc
push
jg
test
cmp
outs
jmp
sar
fwait
sti
jp
ret
inc
jne
ins
jmp
or
sub
and
cmps
nop
jo
(bad)
mov
dec
jno
sbb
pop
xor
(bad)
mov
sbb
addr16
add
pusha
mov
pop
test
(bad)
rcr
fs
mov
fdiv
or
outs
not
cli
leave
imul
dec
imul
jae
adc
mov
mov
xor
add
push
or
and
inc
and
mov
cmc
dec
mov
sub
pop
shl
adc
dec
(bad)
push
push
pop
mov
xchg
pop
mov
clc
jb
xchg
test
test
xchg
and
pushf
push
loop
outs
pop
cld
(bad)
push
stos
adc
bound
out
mov
sbb
jle
add
pop
std
mov
jmp
mov
and
sbb
test
or
shr
aas
adc
cli
jmp
dec
and
push
(bad)
(bad)
push
cli
retf
xor
adc
xor
adc
xchg
mov
movs
(bad)
(bad)
dec
pusha
and
sahf
rcl
xchg
sub
mov
loopne
shld
dec
xor
add
cmp
hlt
imul
or
add
js
mov
mov
(bad)
jmp
ins
mov
sbb
fcmove
xchg
inc
mov
dec
sub
(bad)
inc
cwde
xchg
adc
mov
bound
mov
pop
xchg
(bad)
int
xor
(bad)
(bad)
(bad)
ficom
mov
inc
pop
adc
xchg
and
or
arpl
(bad)
(bad)
push
push
xor
jb
sbb
add
int
mov
stos
shl
xchg
movs
mov
(bad)
jmp
adc
add
imul
xor
sub
push
nop
dec
loopne
scas
xor
or
or
push
inc
loopne
or
out
sub
clc
(bad)
(bad)
call
dec
cpuid
sbb
jp
cmp
pop
(bad)
aaa
xchg
test
or
sub
push
xchg
in
ins
(bad)
(bad)
(bad)
call
inc
loopne
std
shl
and
sbb
stos
cmp
test
call
popf
jg
jmp
scas
pop
pop
and
xchg
mov
shl
sub
(bad)
call
leave
dec
aam
xchg
mov
bound
sahf
sbb
(bad)
(bad)
mov
call
daa
mov
repz
xor
lea
inc
mov
ja
xchg
sub
sbb
cld
(bad)
dec
mov
mov
icebp
pop
adc
mov
jo
adc
(bad)
(bad)
jmp
inc
pop
retf
sbb
pop
nop
xchg
jmp
sbb
or
out
mov
xchg
inc
mov
imul
add
(bad)
(bad)
(bad)
call
gs
cmp
lods
stos
(bad)
pusha
add
xchg
das
mov
lock
(bad)
call
pop
pop
add
pop
aam
arpl
cmp
mov
pop
std
xor
ret
jne
sbb
mov
jbe
rol
inc
outs
mov
sub
in
retf
ja
ss
inc
scas
lods
(bad)
sub
(bad)
(bad)
call
sahf
xchg
nop
jne
xor
mov
out
push
neg
inc
cdq
fs
push
sbb
(bad)
(bad)
call
imul
lods
enter
clc
scas
out
sbb
jne
push
adc
rcr
pop
and
test
xchg
(bad)
mov
mov
clc
inc
push
mov
cmc
jle
xor
cmps
inc
lahf
cdq
pop
outs
loop
sbb
(bad)
dec
jb
retf
out
and
addr16
(bad)
or
pop
and
and
fld
leave
dec
fmul
and
dec
aas
lods
loopne
in
xor
pop
push
jmp
loop
and
push
aam
lock
sub
vpsadbw
push
dec
clc
xor
ss
and
mov
idiv
stos
rcl
xor
fwait
(bad)
(bad)
call
les
hlt
jae
mov
mov
xor
mov
or
xor
retf
(bad)
(bad)
(bad)
push
(bad)
cmps
repz
cmp
pop
jo
push
sub
retf
in
xchg
or
xor
(bad)
(bad)
jmp
cld
fs
(bad)
lods
loop
mov
xor
xchg
imul
lods
or
aas
jmp
fwait
ret
int3
sub
dec
adc
dec
inc
add
mov
jns
mov
pop
lock
jb
adc
shl
mov
sti
fxch
(bad)
(bad)
(bad)
inc
cmps
fisubr
sub
and
adc
enter
sbb
daa
clc
les
ja
clc
ss
mov
stc
test
sub
xchg
aam
adc
out
out
rcr
sar
call
xchg
push
mov
addr16
movs
mov
loopne
ins
sub
lock
mov
(bad)
(bad)
call
out
or
mov
xor
xchg
loope
jae
ins
pop
fs
call
(bad)
mov
mov
xchg
stos
loope
mov
(bad)
mov
(bad)
(bad)
(bad)
(bad)
stc
sbb
gs
test
out
ficomp
arpl
pop
cmp
pop
in
pop
cdq
imul
(bad)
(bad)
(bad)
call
imul
dec
push
push
fisttp
data16
ret
or
call
jge
adc
(bad)
or
ss
jp
jbe
out
std
stos
das
adc
out
jg
(bad)
(bad)
jmp
scas
stos
punpckhbw
mov
sub
outs
es
or
lock
out
aad
repnz
in
(bad)
jg
sub
push
daa
sbb
jno
jnp
mov
dec
xchg
or
inc
ret
pop
mov
or
(bad)
jge
pop
fmulp
jne
xchg
add
adc
inc
cmp
mul
js
test
lds
(bad)
(bad)
jg
lods
outs
out
push
fs
ins
iret
repz
jecxz
push
xor
in
sbb
add
mov
(bad)
(bad)
(bad)
push
gs
xchg
sub
arpl
mov
adc
pushf
xor
jb
xor
cmp
lock
cmp
(bad)
scas
push
call
adc
pop
idiv
and
inc
aad
sbb
push
lods
jmp
or
(bad)
(bad)
mov
(bad)
dec
rol
sbb
in
add
adc
jle
push
dec
xor
dec
jge
hlt
fidiv
(bad)
(bad)
(bad)
jg
mov
ret
add
push
aad
mov
pop
pop
pushf
sti
clc
xchg
xor
aas
aaa
dec
(bad)
mov
and
cld
xchg
ins
fucom
push
mov
shld
imul
rcl
mov
cwde
cmps
les
(bad)
(bad)
(bad)
inc
or
cmps
sbb
jmp
mul
stc
shl
lods
or
lods
arpl
sbb
mov
xchg
push
aas
scas
out
jbe
jecxz
inc
pushf
(bad)
(bad)
call
retf
ins
mov
stc
retf
mov
adc
lahf
aad
or
add
pop
lock
cmps
stc
daa
repnz
das
push
mov
in
in
xor
sbb
pop
mov
rol
jne
repz
add
xor
(bad)
cmp
xor
xchg
(bad)
(bad)
(bad)
mov
and
rcl
inc
(bad)
rep
je
jl
jne
cmp
(bad)
jg
push
fstp
mov
add
xor
rcl
pop
push
mov
(bad)
call
pop
mul
push
jnp
lds
adc
or
into
clc
jbe
mov
ret
jmp
fs
dec
rol
xor
scas
mov
xor
inc
xchg
inc
xor
popf
sub
(bad)
cld
pusha
mov
int
pop
stos
jp
mov
or
cmp
sbb
(bad)
fnstcw
dec
mov
js
popf
jno
adc
xchg
movs
loope
(bad)
sbb
(bad)
(bad)
std
push
jle
aas
call
mov
mov
pop
jnp
popa
jno
and
loope
test
fild
jmp
mov
jmp
(bad)
dec
scas
mov
test
fsubrp
call
lahf
jb
xor
call
call
pop
jno
in
cdq
(bad)
scas
loopne
icebp
mov
sar
stos
outs
pop
xchg
cli
(bad)
inc
cmp
mov
inc
adc
std
cmp
mov
xchg
retf
call
adc
stc
inc
sbb
sbb
mov
stc
popf
retf
mov
push
pop
retf
xchg
test
(bad)
(bad)
call
jbe
xor
mov
jns
test
xor
push
sbb
xchg
jge
cvtdq2ps
call
std
(bad)
mov
lahf
sub
jbe
sub
dec
xchg
stos
jb
add
(bad)
(bad)
(bad)
dec
sbb
sub
lea
or
mov
popa
fld
(bad)
(bad)
inc
adc
sbb
arpl
cmp
int
rcl
sbb
cld
push
jmp
(bad)
push
mov
adc
je
int
outs
jg
ins
lds
(bad)
mov
call
outs
sub
aas
push
fdivr
repnz
lahf
mov
(bad)
call
mov
xlat
loop
aaa
dec
clc
aam
(bad)
pop
add
(bad)
jmp
sub
dec
and
retf
imul
out
mov
aaa
sbb
inc
(bad)
(bad)
(bad)
(bad)
fisttp
aam
jg
xchg
test
inc
je
nop
jbe
mov
push
jmp
movs
dec
test
(bad)
out
clc
jmp
scas
mov
mov
or
je
das
pop
mov
lods
adc
cmps
or
in
sub
daa
retf
adc
out
sti
in
fimul
lahf
xor
inc
jbe
push
(bad)
xchg
(bad)
(bad)
inc
pop
loopne
dec
fisttp
js
stos
pop
adc
cli
or
fisttp
pop
outs
sbb
cmp
imul
push
xor
cmp
cmp
and
push
out
or
sub
hlt
call
retf
(bad)
(bad)
in
and
mov
xchg
pop
mov
(bad)
call
xor
push
push
or
repnz
sbb
movs
jecxz
outs
scas
mov
out
in
fldcw
int3
pop
pusha
(bad)
(bad)
(bad)
inc
jb
retf
xchg
push
popf
(bad)
xor
add
sbb
data16
xchg
and
aaa
mov
dec
jo
xor
out
jecxz
fidivr
popf
aaa
(bad)
push
xchg
popf
(bad)
icebp
std
mov
imul
(bad)
(bad)
(bad)
dec
fdiv
js
dec
fadd
in
and
xchg
ins
dec
jnp
jge
adc
adc
xchg
add
(bad)
(bad)
mov
and
test
lock
mov
test
push
cld
push
xchg
cmps
pop
mov
sbb
push
and
test
bound
xchg
pushf
les
cli
sub
dec
mov
(bad)
scas
arpl
adc
(bad)
daa
das
xchg
scas
in
test
icebp
jmp
(bad)
(bad)
(bad)
dec
push
or
js
adc
lds
and
dec
mov
pusha
pusha
add
xchg
xchg
(bad)
(bad)
dec
addr16
xchg
inc
xchg
xchg
shl
mov
push
fimul
gs
pop
or
cmp
(bad)
(bad)
(bad)
aas
jns
jl
cmp
mov
fld
jb
xor
clc
and
rcr
daa
jge
mov
loopne
retf
push
cs
(bad)
(bad)
(bad)
jg
mov
and
mov
push
xor
sbb
dec
fisttp
ins
popf
popa
lods
mov
(bad)
jg
push
dec
scas
cld
(bad)
aad
hlt
add
dec
imul
pushf
(bad)
int
xchg
stos
(bad)
(bad)
(bad)
jmp
(bad)
int
in
or
(bad)
iret
pop
sbb
(bad)
out
pop
mov
call
xchg
mov
xor
cmp
btc
je
(bad)
(bad)
jg
hlt
mov
and
das
mov
clc
push
fs
push
nop
outs
clc
addr16
adc
fst
inc
rol
xor
jnp
mov
jb
push
test
push
(bad)
(bad)
(bad)
call
inc
cli
les
ret
jmp
xchg
enter
cmp
or
(bad)
(bad)
(bad)
push
hlt
push
adc
jo
sbb
pop
jno
test
rcl
(bad)
(bad)
pop
sub
shl
mov
arpl
shr
sahf
sub
aam
push
in
aam
mov
mov
pop
jp
mov
cwde
xchg
outs
(bad)
(bad)
(bad)
(bad)
mov
add
fld
or
jle
outs
sub
push
cwde
ficomp
inc
cli
jecxz
inc
out
cmps
cmc
sub
test
push
ffree
jmp
call
(bad)
(bad)
call
or
inc
and
mov
jl
ja
jne
add
cmp
push
call
std
call
ret
inc
add
pop
ds
neg
sbb
mov
(bad)
jmp
cld
dec
sbb
pop
ins
dec
xchg
xchg
cmc
(bad)
loopne
xchg
lea
ja
and
jo
cmp
jne
fdivrp
call
(bad)
mov
addr16
shl
std
inc
sub
jg
mov
rol
(bad)
(bad)
call
pop
pop
jp
(bad)
jns
cmps
pop
push
rol
bound
or
aaa
mov
mov
loopne
(bad)
stc
cmc
sar
data16
rol
iret
add
xchg
mov
scas
jmp
cli
psrad
aaa
inc
hlt
jmp
pop
lahf
les
or
add
adc
cmp
(bad)
cli
inc
dec
mov
xchg
push
inc
pop
dec
dec
popf
and
daa
add
pop
loop
jecxz
out
adc
out
cwde
(bad)
(bad)
(bad)
jg
inc
fist
sub
xchg
pop
mov
or
pop
mov
data16
(bad)
(bad)
call
xchg
cmp
jns
push
push
add
gs
mov
(bad)
(bad)
(bad)
push
mov
mov
adc
stos
arpl
sub
stos
mov
cmp
sub
outs
(bad)
(bad)
(bad)
inc
les
int3
mov
add
mov
jb
mov
ja
lods
sub
inc
or
lock
cmp
sar
sbb
inc
or
js
dec
(bad)
sub
sahf
pushf
aam
imul
jmp
out
mov
loop
jge
add
push
scas
push
fdiv
xor
shl
cli
data16
mov
fs
in
mov
aas
xchg
aam
mov
sar
ins
pop
aam
hlt
data16
retf
mov
(bad)
(bad)
(bad)
inc
stos
call
push
iret
je
fild
adc
push
loopne
and
shr
(bad)
(bad)
(bad)
call
out
je
fcom
mov
lahf
nop
dec
sub
mov
adc
mov
mov
hlt
sar
popa
leave
push
mov
imul
outs
loopne
adc
jns
xchg
push
push
hlt
(bad)
(bad)
call
cmc
add
adc
and
movs
xchg
or
ror
mul
stos
(bad)
(bad)
(bad)
(bad)
jg
sub
(bad)
pop
dec
fmul
not
mov
fild
(bad)
jg
and
pop
xor
or
or
sbb
xor
push
pop
push
push
or
(bad)
inc
push
hlt
mov
mov
mov
adc
(bad)
out
push
es
dec
icebp
mov
push
imul
dec
pop
loop
jmp
push
mov
mov
and
pop
adc
call
or
ins
push
xchg
sub
xchg
fisub
outs
xor
pusha
mov
mov
push
push
es
loopne
into
pop
ret
(bad)
(bad)
(bad)
jl
xor
sub
mov
lods
(bad)
jge
or
cmp
inc
dec
add
or
(bad)
mov
add
test
and
(bad)
call
test
cdq
xor
loop
push
std
std
rcr
add
sar
(bad)
(bad)
jg
arpl
jnp
call
gs
adc
xor
fist
out
in
sti
(bad)
(bad)
(bad)
xor
push
and
pop
push
fs
jbe
psllw
daa
sub
ss
icebp
int
(bad)
(bad)
(bad)
jg
mov
mov
shr
cmp
push
daa
jne
test
mov
outs
stos
jo
fbld
dec
call
adc
data16
pop
or
aas
and
mov
leave
std
aad
pop
(bad)
xchg
enter
(bad)
(bad)
lods
out
clc
call
dec
leave
ret
ds
sub
ret
out
aam
test
int
loop
jb
sbb
(bad)
(bad)
jmp
cli
loopne
jbe
loop
push
jg
push
cmp
(bad)
out
jbe
mov
ja
push
clc
(bad)
(bad)
jmp
out
jmp
add
ret
rol
push
sbb
fs
sub
xchg
call
fcomi
push
sbb
aad
aad
pop
(bad)
js
push
mov
test
mov
jne
pop
add
adc
(bad)
push
pop
out
push
fwait
popf
bound
nop
jns
push
mov
mov
(bad)
inc
das
shl
arpl
cmc
pop
xor
fadd
xchg
out
cli
(bad)
(bad)
(bad)
jnp
sub
cmps
mov
rcr
inc
(bad)
fucomi
bnd
sub
(bad)
out
fdivr
test
icebp
lds
push
pushf
cli
or
pop
out
(bad)
jg
push
jbe
retf
repz
xor
jae
inc
sub
mov
ja
(bad)
loopne
retf
push
(bad)
mov
fwait
jg
pop
pop
push
jle
pop
test
push
and
je
or
idiv
(bad)
(bad)
dec
and
mov
loopne
pop
pop
repz
js
xchg
sar
lock
pop
idiv
mov
dec
shl
enter
jle
cwde
repz
out
cli
lds
mov
fldenv
jmp
loopne
pop
(bad)
(bad)
(bad)
mov
outs
mov
pop
mov
adc
pop
mov
push
imul
mov
mov
dec
pop
rcl
xchg
mov
movs
neg
stos
push
aad
out
sbb
inc
rcl
dec
test
call
call
(bad)
imul
add
ret
pcmpgtw
leave
dec
(bad)
(bad)
(bad)
(bad)
call
pop
cmp
xchg
add
jle
jle
sub
xor
movs
adc
adc
or
(bad)
(bad)
call
pop
loop
int3
mov
es
div
dec
test
addr16
imul
shl
adc
jmp
inc
push
add
xchg
inc
(bad)
bound
retf
mov
dec
pushf
das
xchg
and
jecxz
pop
lods
es
add
cmp
adc
aas
call
pop
into
push
pop
repnz
pop
xchg
bound
rcl
call
mov
ins
inc
inc
cmps
sbb
adc
xor
gs
mov
jecxz
(bad)
(bad)
dec
pushf
rol
sbb
daa
fadd
sub
xchg
hlt
xchg
dec
out
push
jns
mov
call
cdq
adc
sbb
sbb
call
cmps
test
out
cwde
sbb
xchg
pop
cmp
xor
xor
lahf
mov
sbb
call
sar
sub
or
sub
inc
xchg
fs
scas
and
(bad)
out
je
lock
popf
sub
jmp
dec
fild
sti
push
fistp
cmps
pop
movs
jae
push
jmp
popa
or
pop
fs
imul
out
(bad)
call
pop
and
mov
mov
mov
cmps
add
repz
loopne
(bad)
(bad)
push
add
jb
cwde
repnz
jns
not
loope
out
dec
iret
movs
das
pop
pcmpgtb
cmp
(bad)
dec
pop
jp
fisttp
je
xchg
loope
or
imul
(bad)
call
jp
rcr
rol
push
cwde
call
fmul
push
mov
push
(bad)
(bad)
(bad)
inc
les
das
pop
push
xor
test
pop
dec
cmp
push
cmp
sub
add
push
mov
mov
call
cld
call
sahf
pop
cs
xor
inc
xchg
xlat
pop
jmp
pop
sbb
jp
(bad)
(bad)
(bad)
cmp
adc
ds
icebp
popa
add
sub
pushf
aam
les
mov
loop
std
or
mov
xor
xor
xchg
xor
push
pop
push
mov
call
jbe
jecxz
lea
jmp
jmp
and
push
imul
imul
xor
or
lock
aad
pop
ins
sub
movs
jns
pusha
hlt
xchg
add
jmp
cli
shl
lods
ret
sbb
cmp
or
ins
jmp
(bad)
(bad)
(bad)
out
mov
aaa
adc
clc
daa
push
mov
or
popa
cmc
cmova
ret
in
(bad)
(bad)
(bad)
jp
pop
out
movs
popa
bound
int
jmp
ss
pop
(bad)
mov
int3
push
mov
(bad)
(bad)
stc
jbe
mov
inc
sbb
mov
aam
xchg
(bad)
inc
aas
addr16
out
jecxz
mov
les
ret
mov
outs
nop
dec
adc
sub
and
jecxz
out
mov
jmp
out
adc
js
add
jb
jo
dec
sahf
jecxz
cld
xchg
inc
out
push
jg
loop
test
pop
xchg
add
mov
dec
pop
ret
adc
push
cmp
mov
sub
xor
nop
mov
(bad)
(bad)
(bad)
jmp
inc
ret
pop
or
rcr
outs
jbe
pushf
sbb
add
push
(bad)
(bad)
(bad)
call
dec
or
adc
adc
test
sbb
ds
mov
scas
xor
sbb
ret
xor
(bad)
(bad)
call
mov
sub
mul
cmp
mov
xor
or
das
cli
(bad)
(bad)
jmp
les
pop
scas
out
retf
je
adc
pop
jno
dec
shl
jle
push
pop
in
sbb
(bad)
dec
shr
jbe
push
adc
xchg
mov
(bad)
jecxz
aaa
adc
dec
call
sub
hlt
ss
dec
mov
hlt
push
sub
and
push
in
(bad)
adc
iret
xchg
(bad)
jmp
add
fdivr
mov
jae
push
ret
sbb
hlt
sub
and
(bad)
call
in
sbb
js
adc
inc
ffree
jg
jl
stos
jmp
iret
add
mov
movs
mov
mov
pop
or
mov
sub
loope
popf
or
sub
cli
jnp
lock
push
jbe
add
sbb
cmp
stos
sbb
movs
nop
(bad)
(bad)
mov
lods
repz
jnp
inc
sbb
in
pop
call
push
xchg
clc
(bad)
(bad)
(bad)
ds
bound
mov
imul
bound
or
jne
loop
es
(bad)
(bad)
inc
push
std
aad
mov
xchg
outs
push
fist
adc
mov
jecxz
retf
pop
mov
ds
fmul
cmp
in
push
outs
jp
push
jns
int
add
call
cwde
adc
call
retf
inc
retf
xor
inc
loope
xchg
and
inc
clc
jmp
xlat
xor
(bad)
(bad)
(bad)
call
jp
or
sbb
jg
stos
sar
fisttp
adc
jb
int3
outs
cli
call
fwait
mov
pop
ficomp
mov
pop
or
stc
test
(bad)
(bad)
(bad)
out
fsubr
bnd
fwait
jae
inc
xor
ret
jns
arpl
shr
xchg
(bad)
(bad)
(bad)
(bad)
jmp
xchg
nop
adc
jns
ss
je
dec
mov
cli
lds
scas
or
(bad)
(bad)
(bad)
inc
mov
stc
outs
ds
mov
cmp
dec
arpl
xchg
movs
(bad)
cmp
(bad)
jmp
fadd
adc
pop
lods
xchg
cli
mov
aad
jg
inc
out
gs
and
jg
xchg
(bad)
div
push
sub
push
cmp
stos
pop
das
jo
jg
sub
dec
add
dec
mov
inc
adc
cmps
out
ficomp
imul
pop
inc
push
pushf
push
rep
pop
loope
jg
cmp
fisttp
xchg
push
and
xchg
sub
inc
cli
les
sar
clc
movs
push
imul
sub
je
jno
adc
test
jno
popa
jmp
jb
jo
pop
ret
pop
inc
mov
jge
jmp
mov
sub
mov
(bad)
into
popa
pop
loopne
add
xchg
push
ss
mov
test
(bad)
call
pop
push
or
pop
rcl
push
add
(bad)
(bad)
(bad)
(bad)
cmp
call
aas
(bad)
jo
stos
cwde
xchg
push
adc
mov
addr16
add
xchg
push
mov
cld
(bad)
inc
jg
fcom
sub
test
adc
add
sar
jmp
mov
and
cli
test
loop
push
or
js
adc
or
hlt
(bad)
dec
inc
jle
mov
dec
push
jo
jb
arpl
add
(bad)
clc
sbb
fldcw
sub
xor
sbb
jns
les
(bad)
(bad)
(bad)
cld
xor
xchg
jmp
fdivr
or
inc
push
cmp
and
(bad)
(bad)
dec
std
sar
fisub
xor
aam
imul
in
xlat
ins
push
cmovb
clc
ret
outs
(bad)
(bad)
(bad)
call
xchg
cmc
fisub
add
adc
jl
fnstsw
mov
retf
xor
push
sar
mov
xchg
ds
ftst
mov
xor
dec
inc
enter
(bad)
(bad)
(bad)
(bad)
fmul
sbb
cmp
mov
inc
fild
fmul
pushf
mov
sub
xor
cmp
cmc
popa
fdiv
cmps
fidiv
inc
repnz
cmps
mov
cmp
test
call
inc
mov
push
ss
(bad)
ffree
inc
xor
jge
inc
or
stos
popf
or
es
(bad)
push
(bad)
enter
cli
mov
add
loop
in
lock
leave
adc
and
or
mov
xchg
pop
jmp
or
popa
(bad)
sti
call
cmps
stc
or
and
fidivr
hlt
xchg
std
jle
cs
lahf
pop
add
and
(bad)
(bad)
(bad)
call
sub
retf
inc
dec
adc
lds
and
cmp
jnp
push
int3
mov
jmp
push
and
clc
scas
jecxz
(bad)
inc
shl
push
ss
out
js
xchg
test
test
or
jmp
sub
cmp
fld
call
or
ret
shl
out
cli
call
std
or
mov
in
dec
clc
call
mov
pop
adc
(bad)
(bad)
jmp
mov
push
pop
mov
dec
xchg
mov
ins
cmp
cmc
push
in
maskmovq
jmp
cdq
sub
addr16
mov
pushf
in
test
pop
xor
(bad)
(bad)
(bad)
jmp
dec
fimul
je
xor
aaa
fs
cmp
xchg
jae
or
cmp
pop
movs
push
inc
(bad)
(bad)
(bad)
dec
cs
lock
imul
(bad)
xor
rol
or
or
(bad)
call
cmc
and
inc
cmp
lgs
mov
es
push
inc
mov
or
dec
ss
jecxz
and
cmp
les
frstor
push
(bad)
(bad)
(bad)
push
xchg
or
push
add
in
inc
jge
mov
dec
fisttp
fwait
rol
sub
adc
cmps
(bad)
(bad)
(bad)
inc
int
ret
cmps
shl
jns
pop
ret
sub
or
lea
pushf
add
dec
jg
jg
test
push
daa
arpl
les
jae
arpl
xor
add
call
sbb
xor
and
cs
xor
(bad)
(bad)
(bad)
inc
push
std
retf
lock
scas
ins
sahf
mov
fsub
xchg
push
xchg
in
push
in
mov
sbb
adc
sar
fistp
push
outs
dec
aad
in
mov
aaa
inc
fistp
es
ffree
and
in
pop
(bad)
inc
in
cwde
ds
leave
shr
(bad)
fist
or
xor
das
xchg
and
mov
xchg
cs
imul
das
cli
fwait
(bad)
cmp
adc
hlt
mov
out
aad
sbb
(bad)
(bad)
(bad)
jmp
xor
sub
push
push
inc
jae
push
daa
xchg
xchg
ss
not
test
ret
or
icebp
dec
loopne
sub
add
adc
popa
mov
pop
ret
out
fist
(bad)
xchg
loop
ror
call
pop
or
dec
pop
dec
repz
jg
or
mov
xlat
(bad)
jmp
stos
(bad)
(bad)
call
cmc
xchg
mov
(bad)
cmps
int3
call
sub
adc
hlt
jae
push
std
call
(bad)
jl
or
push
xchg
retf
xlat
sbb
push
neg
add
mov
jno
into
rcr
jae
jmp
adc
xor
mov
mov
push
retf
xchg
adc
and
mov
(bad)
(bad)
(bad)
mov
addr16
xchg
sbb
daa
and
ja
inc
pushf
dec
cdq
imul
aad
sbb
lea
bound
(bad)
(bad)
call
repz
sub
dec
dec
(bad)
out
imul
or
out
push
add
pop
out
mov
or
(bad)
(bad)
call
imul
daa
xchg
popf
xchg
push
movs
movs
aam
(bad)
cld
mov
or
stc
lahf
popf
mov
(bad)
(bad)
dec
inc
inc
loope
ins
dec
dec
retf
lods
cs
jae
(bad)
sbb
lahf
adc
push
inc
dec
push
sti
into
mov
cmp
sti
(bad)
sub
scas
mov
popa
inc
pop
push
ins
leave
inc
test
sbb
and
push
jmp
xchg
dec
dec
pusha
in
(bad)
(bad)
jmp
add
out
dec
mov
shr
into
shl
add
jl
jb
pushf
mov
or
dec
xchg
adc
aaa
dec
mov
shl
(bad)
mov
dec
add
dec
sub
sub
(bad)
loopne
hlt
(bad)
call
scas
pop
sbb
shl
movs
in
mov
(bad)
jmp
cmp
das
int3
and
scas
inc
inc
xor
ins
in
sub
(bad)
(bad)
call
mov
jmp
lds
pop
nop
sti
dec
(bad)
aaa
(bad)
in
btc
and
(bad)
(bad)
(bad)
jmp
inc
pop
daa
sbb
je
popf
add
enter
inc
ins
je
sbb
mov
inc
add
mov
scas
loope
jge
cld
imul
(bad)
(bad)
out
jae
push
retf
retf
pushf
mov
mov
outs
cmp
(bad)
loope
pop
cmp
lds
add
test
jo
into
add
jb
mov
sbb
sbb
adc
mov
sbb
mov
call
je
cmp
push
jg
add
xor
jecxz
adc
inc
arpl
adc
(bad)
(bad)
(bad)
call
or
jae
or
int
retf
ret
pushf
bound
adc
dec
jne
lea
push
jmp
popa
sbb
pop
lock
and
loopne
inc
imul
aas
push
jne
pop
mov
dec
xor
inc
jge
sub
add
jo
(bad)
inc
sar
sahf
xchg
mov
into
(bad)
in
jbe
dec
pop
sahf
cmp
ror
rol
test
add
(bad)
fcom
cmp
aam
mov
(bad)
(bad)
(bad)
inc
mov
fcmovu
add
cmc
dec
loopne
addr16
test
and
push
cmps
sub
(bad)
call
jl
rcr
dec
dec
pop
adc
inc
mov
sub
ret
lahf
ins
cmp
(bad)
inc
out
push
fdiv
xor
mov
mov
les
(bad)
(bad)
push
aad
hlt
out
movs
jecxz
fbld
sbb
jmp
(bad)
(bad)
fisubr
adc
jns
hlt
mov
adc
je
mov
push
pop
out
icebp
(bad)
(bad)
push
movs
xchg
fwait
nop
adc
ja
mov
or
call
cwde
in
adc
(bad)
fild
jne
and
adc
xchg
aaa
pop
sub
or
push
lock
hlt
(bad)
(bad)
push
test
arpl
xchg
in
adc
dec
sar
jae
and
mov
xchg
or
sar
or
ja
push
xor
inc
loopne
jmp
sar
(bad)
push
rcr
neg
sbb
popa
jmp
inc
jbe
sbb
retf
sub
loope
xor
sbb
test
hlt
dec
in
mov
outs
out
loop
std
sub
(bad)
dec
jle
jnp
adc
or
js
xchg
out
add
inc
mov
jmp
stos
sbb
sub
bound
pushf
jnp
push
dec
cmps
pop
not
div
mov
(bad)
fiadd
adc
sbb
adc
sbb
add
(bad)
(bad)
fild
cli
xor
pop
pop
ret
mov
xlat
adc
jecxz
inc
daa
bound
jae
xor
mov
imul
imul
xor
jne
mov
pop
dec
mov
and
jmp
lahf
mov
mov
out
repz
imul
mov
(bad)
(bad)
(bad)
jmp
sti
sub
ja
shl
js
jmp
inc
addr16
pop
sub
pop
(bad)
jnp
(bad)
(bad)
(bad)
inc
jo
iret
pop
cmps
ja
pop
cs
cmps
sub
add
push
dec
sbb
bound
cld
scas
cli
or
sbb
stc
cmp
cld
push
nop
jp
stc
mov
xchg
scas
mov
sub
bnd
gs
arpl
sub
in
jp
jp
(bad)
(bad)
(bad)
jmp
and
jo
adc
in
iret
pop
lock
(bad)
stc
int3
xor
mov
imul
test
shl
jae
push
sahf
stos
enter
sbb
xchg
les
sbb
push
js
in
not
mov
jmp
shl
and
and
jne
fstp
xchg
(bad)
(bad)
push
retf
popf
scas
scas
data16
jle
push
add
jo
xchg
test
pop
and
and
(bad)
mov
loop
lods
pushf
jg
sbb
in
imul
(bad)
add
int3
pusha
mov
imul
cld
sar
sub
inc
lods
adc
sbb
pop
(bad)
(bad)
jg
inc
jne
inc
test
outs
xchg
xchg
and
(bad)
(bad)
mov
cmp
fdiv
inc
pusha
sahf
cmc
popa
mov
movs
out
xchg
(bad)
(bad)
(bad)
inc
or
push
jge
das
jnp
ins
shl
push
jne
mov
cmp
or
and
and
pop
int
adc
ins
outs
pushf
xchg
imul
xor
pop
cmc
(bad)
(bad)
(bad)
call
xlat
cli
mov
jle
xor
sub
in
and
push
outs
call
sub
adc
xchg
out
mov
mov
ss
(bad)
(bad)
jmp
and
mov
adc
in
and
outs
std
hlt
pop
fs
jl
ret
jae
lea
enter
or
popa
mov
mov
fnstsw
mov
push
adc
inc
into
das
adc
inc
in
in
inc
retf
ret
popf
test
ds
cld
xchg
sbb
mov
(bad)
(bad)
mov
fdiv
add
jno
sub
xchg
in
xchg
add
or
(bad)
call
jg
std
mov
cmp
rol
jmp
or
pop
sub
mov
mov
call
push
addr16
xor
ror
dec
inc
(bad)
imul
(bad)
(bad)
jg
repz
(bad)
nop
iret
jl
sub
aas
mov
loopne
jb
jb
mov
sub
(bad)
(bad)
jmp
shl
test
stc
xchg
cmp
push
shl
mov
push
ffreep
out
xor
dec
jg
(bad)
dec
cdq
fsub
ins
popa
fwait
aaa
lahf
mov
jo
or
loop
push
test
push
outs
icebp
dec
mov
xchg
call
push
mov
xor
mov
sti
inc
sub
dec
add
mov
jno
mov
dec
ss
in
(bad)
lods
jg
(bad)
jmp
mov
cld
sbb
es
es
xchg
icebp
mov
sub
adc
movs
and
(bad)
arpl
sbb
inc
jge
sub
(bad)
call
mov
push
sbb
push
cmp
mov
cmp
cmp
aas
adc
dec
(bad)
cmp
xor
push
cmp
int
stos
cli
xlat
mov
jno
xlat
mov
daa
mov
out
lahf
sub
(bad)
(bad)
call
lods
outs
int
hlt
scas
jnp
push
(bad)
js
cwde
in
adc
arpl
pop
(bad)
(bad)
dec
ja
cmps
(bad)
gs
sbb
idiv
(bad)
call
inc
(bad)
lock
inc
(bad)
mov
or
add
sti
loopne
(bad)
(bad)
inc
sbb
(bad)
in
sbb
test
sbb
out
loope
sub
jmp
add
icebp
push
add
sub
mov
jge
scas
dec
out
loopne
add
push
(bad)
dec
in
jg
ins
test
ss
push
sub
add
mov
sub
(bad)
(bad)
(bad)
(bad)
cmp
sbb
add
or
fwait
pushf
pop
push
pop
les
pop
clc
sbb
addr16
mov
call
pop
jns
cmp
and
inc
jbe
jne
mov
loopne
es
inc
sti
dec
inc
dec
les
mov
call
jo
mov
fs
dec
xor
shr
cmp
pop
jne
add
push
scas
pop
push
(bad)
(bad)
(bad)
jmp
paddb
imul
call
sub
mov
jo
mov
xchg
pop
sub
(bad)
call
dec
in
pop
cmp
push
fsub
movs
and
dec
push
and
call
jge
fwait
cmp
mov
xchg
(bad)
mov
or
xor
pop
outs
jecxz
int3
test
movs
xchg
add
loop
data16
push
std
inc
add
(bad)
loop
mov
and
pop
xchg
dec
in
fst
test
(bad)
(bad)
(bad)
push
nop
clc
or
jns
sub
inc
jmp
pop
xor
cmps
imul
int
stc
or
(bad)
push
cld
(bad)
(bad)
std
(bad)
cmc
out
aad
jnp
mov
loopne
add
xor
jns
xor
aam
ins
inc
(bad)
(bad)
(bad)
dec
mov
mov
clc
xrelease
jg
leave
(bad)
out
xlat
jb
add
inc
mov
(bad)
(bad)
(bad)
cmp
mov
xchg
inc
jo
pop
mov
xchg
mov
jbe
push
push
mov
(bad)
(bad)
(bad)
(bad)
cld
mov
cmps
ret
div
cmp
sub
xchg
xchg
cmp
gs
cwde
push
mov
mov
dec
mov
push
inc
jge
add
gs
(bad)
jne
dec
mov
push
pop
xor
cmp
ja
sbb
stc
add
push
adc
cmp
mov
(bad)
(bad)
(bad)
call
inc
(bad)
aad
in
mov
push
cld
scas
fsubr
inc
and
or
shl
pop
jp
enter
(bad)
(bad)
(bad)
faddp
in
xor
fldenv
or
pop
fisub
data16
bound
movs
adc
xor
xchg
(bad)
(bad)
push
or
call
push
and
add
test
cmp
(bad)
(bad)
(bad)
push
cmp
inc
pushf
jnp
mov
mov
aaa
movs
jo
or
xchg
aaa
mov
adc
jmp
xor
adc
xchg
pop
mov
call
or
movs
pop
mov
xor
xor
call
push
and
outs
fnstenv
pop
push
ret
xor
xor
aaa
cmp
mov
scas
mov
pop
call
dec
ins
(bad)
xlat
inc
push
retf
(bad)
repz
jmp
(bad)
popa
clc
cli
pop
movs
bound
jnp
push
cmps
xchg
stos
bound
(bad)
(bad)
push
ficom
(bad)
jecxz
stos
mov
enter
mov
call
or
movs
lds
(bad)
call
pusha
cmps
data16
pop
dec
jmp
jbe
adc
(bad)
jmp
add
pop
pop
sbb
xchg
sub
stc
or
add
movs
or
push
int3
add
cmps
push
adc
loope
adc
xchg
out
jbe
and
clc
xor
(bad)
(bad)
push
xchg
push
mov
mov
in
(bad)
loopne
xchg
aam
lock
mov
(bad)
dec
sbb
scas
and
in
adc
(bad)
(bad)
call
icebp
mov
push
sbb
inc
add
mov
xchg
mov
inc
lock
(bad)
(bad)
dec
pop
cs
dec
stc
mov
or
jne
jecxz
or
lahf
es
movs
in
mov
sbb
clc
gs
cs
mov
(bad)
outs
or
(bad)
(bad)
(bad)
out
push
xor
xchg
adc
xor
xor
es
(bad)
(bad)
(bad)
(bad)
dec
addr16
ins
out
pop
fsubr
imul
sbb
or
sub
(bad)
(bad)
(bad)
cld
call
or
dec
jne
out
imul
dec
es
pop
scas
push
aaa
jbe
inc
cld
push
xadd
pop
pop
cmps
cmc
loope
stos
sub
nop
jns
adc
mov
sar
(bad)
(bad)
push
ds
stc
xor
retf
cmc
idiv
jge
xor
jp
add
xchg
(bad)
call
push
pop
stc
scas
mov
ret
pop
jl
pushf
cmc
fwait
(bad)
jmp
arpl
inc
jmp
ret
mov
dec
push
fisub
out
xor
hlt
pop
cmp
push
jg
(bad)
(bad)
sti
lods
mov
into
aaa
in
pop
sub
fist
jle
mov
xchg
aas
(bad)
(bad)
(bad)
(bad)
jns
popf
mov
das
lahf
adc
sahf
xor
cmps
(bad)
jmp
sbb
jae
(bad)
(bad)
fnstsw
clc
cld
mov
fimul
pushf
and
jnp
(bad)
(bad)
(bad)
call
pop
adc
push
cmp
jbe
iret
mov
jmp
lods
mov
icebp
add
mov
mov
inc
lock
mov
iret
cmp
push
fdiv
xor
(bad)
call
dec
push
cmp
ds
(bad)
jne
imul
lods
out
(bad)
(bad)
call
add
lods
mul
cmp
rol
imul
or
mov
mov
aas
movs
(bad)
fcom
ret
xchg
pop
mov
and
dec
stos
imul
jmp
cwde
add
add
xor
xchg
jl
adc
push
mov
xor
xchg
and
enter
mov
(bad)
call
sbb
fs
jne
pusha
adc
mov
push
retf
xor
jno
test
inc
or
jmp
loop
(bad)
jle
sahf
lahf
mov
int3
pop
jmp
call
test
sub
push
pop
int
push
daa
push
pop
out
xchg
popa
jnp
popa
arpl
jg
push
hlt
(bad)
(bad)
call
or
add
ret
stos
lds
xchg
push
lahf
mov
nop
cmc
pushf
and
mov
or
out
in
mov
mov
or
jecxz
cs
bound
inc
push
out
fmul
jne
inc
lock
cmp
(bad)
(bad)
push
cmp
inc
stos
in
leave
add
or
cmp
cdq
dec
test
sti
imul
dec
ins
(bad)
(bad)
(bad)
dec
popa
and
mov
scas
icebp
cmp
lods
jecxz
sbb
or
sbb
and
clc
and
pop
mov
retf
nop
mov
cmps
inc
xchg
(bad)
out
sub
(bad)
and
icebp
ret
cld
(bad)
(bad)
call
sti
ss
rcr
aam
mov
mov
add
ret
dec
aad
jo
jmp
add
and
jmp
arpl
sub
(bad)
(bad)
dec
movs
lods
dec
push
adc
lds
loopne
pop
xor
rol
mov
fild
push
adc
fs
or
dec
or
(bad)
jmp
pop
jl
mov
popf
jno
sbb
jp
enter
inc
mov
xchg
inc
jl
(bad)
adc
mov
idiv
(bad)
(bad)
jmp
cmps
stos
or
pop
ins
sub
jns
js
sub
std
xchg
movs
mov
xchg
xchg
sbb
and
sbb
(bad)
(bad)
call
es
test
adc
lahf
pop
dec
outs
mov
pop
out
inc
cld
aam
iret
repnz
or
mov
push
mov
cs
aas
in
dec
and
(bad)
mov
sbb
mov
hlt
or
jae
pop
jmp
stos
push
pop
rcl
pop
add
(bad)
(bad)
out
dec
mov
shr
mov
std
jns
in
stos
aaa
(bad)
cmp
(bad)
ds
movs
test
cmps
js
pop
es
rol
fadd
hlt
stos
or
icebp
cs
pop
rol
out
dec
and
fld
(bad)
(bad)
mov
jae
cmp
pop
inc
call
inc
addr16
(bad)
(bad)
(bad)
fld
call
out
mov
fldcw
adc
or
(bad)
mov
icebp
(bad)
jnp
outs
jb
mov
dec
ret
(bad)
mov
shl
mov
xor
sub
cmps
xor
js
pop
jbe
xor
sub
(bad)
fisttp
ss
(bad)
cmp
jmp
ds
adc
(bad)
push
hlt
mov
ret
lods
or
push
sbb
fsub
popa
js
inc
aad
(bad)
(bad)
(bad)
jmp
test
pushf
push
adc
sub
cmp
dec
fiadd
mov
retf
xchg
add
mov
arpl
push
aad
(bad)
(bad)
mov
out
mov
rcl
pushf
jb
mov
sbb
(bad)
dec
push
rcr
sbb
sbb
add
pop
stc
int
inc
cli
pop
push
pusha
leave
shl
(bad)
(bad)
mov
cmp
dec
mov
js
leave
mov
repnz
mov
(bad)
aas
rol
es
repnz
(bad)
(bad)
(bad)
call
lods
adc
xchg
lea
int
(bad)
sbb
add
or
pusha
mov
(bad)
(bad)
mov
or
rcl
xor
data16
dec
mov
jb
push
outs
inc
sub
inc
mov
jg
adc
stos
test
push
js
nop
mov
bound
xchg
sbb
pop
movs
(bad)
mov
dec
test
mov
out
fild
popa
(bad)
cli
into
(bad)
(bad)
(bad)
(bad)
call
pusha
add
dec
bound
push
lods
test
mov
pop
(bad)
out
lea
(bad)
(bad)
(bad)
jmp
lds
jle
push
push
add
imul
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
push
and
mov
ror
call
lahf
xor
mov
clc
cmp
gs
sub
popa
lods
push
pop
jg
sbb
push
neg
in
(bad)
(bad)
(bad)
call
push
cmp
push
adc
add
add
loope
push
(bad)
(bad)
(bad)
(bad)
cld
iret
push
xor
hlt
mov
mov
push
dec
addr16
(bad)
hlt
add
fs
xchg
sar
mov
pop
pop
lock
mov
outs
sar
pop
hlt
(bad)
cmp
(bad)
sbb
sbb
leave
aas
jo
call
in
(bad)
push
int
retf
adc
or
adc
out
(bad)
(bad)
(bad)
jmp
fmul
dec
call
lahf
mov
adc
outs
mov
sbb
or
push
cwde
(bad)
out
jmp
(bad)
(bad)
dec
cld
mov
in
pop
cmp
mov
adc
shl
pop
push
(bad)
mov
(bad)
(bad)
jmp
retf
push
push
and
(bad)
rcl
pop
mov
cmp
inc
imul
aas
adc
mov
add
sub
jg
jnp
cmc
fld
cmp
dec
mov
jb
test
add
jmp
cmc
pop
xor
hlt
inc
pop
jl
arpl
pop
ss
(bad)
(bad)
(bad)
(bad)
jle
jle
mov
js
pop
ins
jmp
mov
sub
push
test
mov
mov
(bad)
(bad)
(bad)
mov
cmps
mov
xor
sub
sbb
cmp
movs
or
cli
jmp
jge
mov
mov
(bad)
call
(bad)
aas
call
inc
test
inc
fucomip
cmp
rcr
das
mov
sbb
sub
(bad)
jmp
add
into
sub
pop
(bad)
fmul
adc
aas
dec
fs
shl
(bad)
(bad)
(bad)
jmp
mov
lock
rcr
or
popa
(bad)
jns
int
xor
or
lahf
stc
add
(bad)
call
std
inc
mov
mov
push
pop
lods
sbb
call
test
sbb
xchg
outs
inc
sti
inc
mov
push
xchg
sub
out
jl
test
xor
add
outs
out
dec
adc
dec
adc
sbb
xor
sar
inc
cmps
loopne
inc
jmp
dec
sbb
repnz
pop
(bad)
(bad)
(bad)
(bad)
dec
xor
add
mov
das
push
adc
stos
je
mov
mov
inc
fucomip
sahf
and
jno
add
arpl
loopne
sti
jbe
sahf
popa
daa
dec
arpl
imul
inc
adc
loope
or
(bad)
call
inc
fld
(bad)
xor
mov
mov
sub
jecxz
movs
daa
jg
sub
sbb
push
jmp
stos
inc
jecxz
loopne
int
test
leave
xor
in
dec
pop
(bad)
inc
mov
ins
push
std
and
inc
inc
scas
jae
and
mov
(bad)
(bad)
(bad)
inc
jnp
call
aad
popa
sbb
mov
int3
xchg
push
add
das
pop
loop
call
loopne
add
xchg
nop
outs
push
xchg
push
adc
add
(bad)
(bad)
jmp
test
jo
add
mov
scas
sar
or
ja
test
(bad)
dec
dec
scas
or
xchg
push
in
imul
clc
cmp
mov
bound
sbb
pushf
inc
xor
call
jge
jecxz
jp
or
and
jg
gs
inc
and
mov
mov
sub
mov
jle
push
(bad)
(bad)
(bad)
jmp
iret
lea
pop
retf
mov
mov
clc
enter
stc
xchg
pusha
and
js
arpl
call
(bad)
(bad)
lock
push
xlat
push
cmp
xchg
mov
iret
jp
mov
lock
add
mov
mov
sbb
push
cmps
add
jae
cmp
retf
sbb
mov
test
int3
sbb
out
cmp
mov
xchg
sub
lock
clc
jp
push
xor
pusha
scas
lods
push
out
lods
push
pop
push
(bad)
mov
cmp
jmp
and
xchg
test
fldcw
push
call
test
fidiv
aam
lea
(bad)
je
push
jmp
push
enter
jge
aad
(bad)
jmp
pop
mov
pop
mul
clc
sub
ins
jo
jmp
(bad)
(bad)
cmp
movs
(bad)
imul
outs
push
mov
pop
pop
pop
pop
in
sbb
test
xor
clc
scas
test
ret
popf
inc
fistp
(bad)
mov
xor
add
je
pop
test
std
sbb
test
jmp
add
gs
call
addr16
dec
(bad)
(bad)
cmp
or
mov
mov
out
jge
or
adc
or
sbb
jecxz
pop
mov
out
sti
outs
les
mov
mov
add
sub
repz
or
push
cmp
push
fcmovb
push
mov
jmp
idiv
(bad)
(bad)
call
push
fnsave
sahf
imul
(bad)
ficom
retf
int
jnp
popa
pop
mov
int
popf
and
(bad)
jg
scas
dec
lods
mov
or
pop
aas
int3
or
mov
clc
ds
dec
cwde
mov
inc
adc
lock
pop
pop
call
push
(bad)
fisttp
or
cmp
xor
push
hlt
pop
retf
(bad)
(bad)
(bad)
jl
or
mov
popf
mov
fsub
and
repnz
(bad)
(bad)
(bad)
mov
dec
enter
lea
aad
xchg
pop
mov
mov
add
(bad)
(bad)
(bad)
jmp
cwde
div
mov
sbb
mov
inc
xor
in
cmp
mov
pop
dec
in
sar
xchg
loopne
xchg
or
add
gs
hlt
iret
adc
jl
mov
mov
adc
cmps
or
sbb
aam
popa
cmps
shl
sub
enter
(bad)
(bad)
(bad)
call
mov
mov
mov
jle
mov
or
data16
pop
int
cmp
add
(bad)
jmp
xor
mov
test
adc
mov
sub
pop
xor
jmp
in
ss
or
ins
adc
fcomp
mov
xor
mov
ss
adc
cdq
inc
(bad)
fsub
and
cmp
pop
push
jno
sbb
fldcw
add
xor
out
sub
dec
test
wbinvd
cwde
adc
(bad)
jg
push
jl
xor
ss
mov
jo
std
push
cld
mov
sub
imul
mov
pop
mov
lods
lahf
mov
in
push
pop
cmc
xchg
adc
adc
jae
inc
cld
call
inc
jne
sub
cli
and
sti
nop
mov
fsubr
add
push
repnz
mov
xchg
bnd
ss
hlt
jg
xor
jmp
scas
rcr
ret
(bad)
jg
mov
adc
daa
retf
sti
push
popf
xor
call
add
nop
retf
(bad)
(bad)
(bad)
call
inc
cmp
stc
sub
ins
lahf
aas
mov
push
xchg
inc
rcr
retf
sub
cmp
cli
test
inc
int3
push
std
(bad)
clc
push
xor
ror
sti
xchg
inc
pop
lahf
imul
enter
movs
mov
out
(bad)
(bad)
(bad)
inc
es
std
iret
push
popf
aas
das
and
and
or
push
hlt
push
push
sub
stos
call
(bad)
dec
nop
or
repnz
mov
loop
mov
lea
add
xchg
or
stos
(bad)
(bad)
(bad)
(bad)
out
push
into
sar
fidivr
call
adc
test
mov
cmp
(bad)
jmp
and
fwait
inc
pop
mov
(bad)
pop
fcom
lods
cmps
jmp
ins
mov
add
(bad)
(bad)
(bad)
(bad)
out
pop
or
mov
sahf
dec
out
leave
test
call
push
inc
mov
or
(bad)
inc
dec
xchg
jl
push
jecxz
cmps
not
inc
push
xlat
popf
dec
in
hlt
nop
or
dec
bound
xor
aad
jmp
(bad)
out
sub
or
push
push
adc
sbb
mov
(bad)
(bad)
(bad)
jl
shl
mov
lock
int
lods
lahf
ror
jmp
leave
(bad)
(bad)
(bad)
out
or
cld
add
rcl
fcmove
jb
push
rcr
cmp
out
ins
mov
jecxz
cmp
pop
ds
aaa
in
addr16
ins
(bad)
cmp
add
add
push
xchg
(bad)
(bad)
(bad)
jmp
clc
push
xchg
xchg
mov
jno
mov
sbb
mov
aam
sbb
rcl
inc
and
mov
push
adc
mov
out
sub
sub
inc
(bad)
jmp
or
push
dec
xchg
out
fcomp
xchg
hlt
cmp
arpl
(bad)
mov
rol
repnz
mov
dec
gs
mov
and
(bad)
(bad)
(bad)
(bad)
cmp
ret
xor
rsm
test
lods
(bad)
add
sub
or
lahf
lds
pushf
sub
(bad)
push
je
mul
and
les
stos
aam
outs
mov
cdq
ja
add
call
mov
nop
lahf
cmc
dec
movs
jns
lock
jg
push
add
es
int3
fwait
adc
push
jno
sbb
sub
test
(bad)
push
(bad)
(bad)
(bad)
inc
fcom
add
enter
jmp
das
xchg
not
dec
pop
(bad)
(bad)
(bad)
inc
arpl
mov
lock
jecxz
mov
es
iret
mov
(bad)
fcomi
sbb
and
dec
or
(bad)
(bad)
push
mov
movs
pop
add
clc
stc
xchg
rep
xchg
ss
loope
dec
mov
shl
mov
push
sub
cmp
loopne
xor
fs
scas
mov
add
add
or
cmovge
aad
(bad)
(bad)
inc
cs
add
jecxz
inc
mov
jnp
mov
adc
adc
retf
mov
cmp
(bad)
jmp
cwde
popa
jo
adc
inc
and
call
loop
ds
mov
fist
adc
imul
call
dec
push
sub
int
pushf
and
cmp
sub
(bad)
(bad)
call
bnd
es
mov
in
adc
jl
fisubr
out
or
jmp
mov
inc
dec
invd
jmp
int
popf
aad
sub
and
jnp
bound
sub
(bad)
(bad)
push
pop
xor
dec
popa
inc
adc
fwait
mov
stos
imul
adc
sbb
test
test
jmp
bswap
cld
ja
sub
shl
(bad)
jmp
clc
push
cmps
addr16
mov
dec
jmp
or
or
(bad)
(bad)
inc
jp
jns
popf
cmc
(bad)
xchg
retf
stos
push
int3
or
adc
adc
repnz
add
sbb
fisubr
add
aas
cs
fnstenv
mov
iret
push
hlt
jl
pusha
retf
jb
fsub
add
lahf
leave
jge
(bad)
(bad)
push
cmp
dec
outs
jle
lock
gs
push
pop
sub
aaa
cmp
daa
dec
pop
push
inc
vsqrtpd
and
mov
xor
push
mov
mov
ffreep
repz
push
leave
(bad)
(bad)
(bad)
(bad)
jg
jno
pop
(bad)
sub
pop
pusha
sub
add
jmp
lods
add
mov
push
or
ja
inc
mov
mov
pusha
lock
and
retf
fwait
in
jg
(bad)
jmp
xor
test
pop
lods
or
loop
push
pop
gs
mov
(bad)
push
scas
or
mov
aas
test
repz
out
pop
push
or
sub
mov
sub
(bad)
inc
add
sar
ret
(bad)
(bad)
(bad)
inc
inc
sbb
ffree
test
mov
std
pop
ins
ins
jp
pusha
pop
sbb
jge
int
(bad)
jmp
dec
inc
outs
mov
cmps
inc
sbb
and
in
xchg
call
mov
pop
xchg
mov
pop
fmul
test
(bad)
not
sbb
cmp
xchg
mov
loopne
hlt
adc
(bad)
(bad)
fucomip
call
xchg
dec
dec
out
xchg
xchg
push
inc
scas
mov
inc
ror
ins
mov
cli
cmp
(bad)
(bad)
(bad)
(bad)
jge
push
imul
(bad)
icebp
mov
mov
adc
xor
mov
sbb
loop
or
(bad)
(bad)
(bad)
dec
pop
xor
scas
test
cmp
aas
(bad)
fld
xor
mov
push
cmp
jmp
(bad)
aas
adc
cmp
cdq
retf
add
push
nop
sbb
ins
sbb
(bad)
jmp
mov
jno
and
mov
hlt
inc
(bad)
(bad)
jmp
in
mov
push
cld
jmp
pop
sbb
or
fisub
in
jne
push
jmp
cli
jmp
ss
test
retf
mov
add
out
adc
lods
dec
cmp
jmp
cmc
push
cmp
and
dec
dec
add
jnp
jecxz
jnp
cmp
ss
adc
pop
cwde
and
sub
inc
ficom
ret
int3
popf
lahf
cmp
and
loop
mov
(bad)
(bad)
call
cmc
ja
scas
mov
inc
fsub
adc
mov
push
cmp
fwait
sahf
(bad)
(bad)
jmp
enter
jnp
call
xchg
int
jb
jecxz
cld
aaa
bound
(bad)
(bad)
(bad)
jg
cmp
dec
imul
int
add
or
mov
jl
clc
add
bswap
pop
imul
in
movs
adc
push
mov
push
sbb
scas
in
cmp
aam
aam
cli
or
sub
push
jle
ds
nop
jbe
aam
aaa
stc
inc
outs
(bad)
jmp
push
ss
mov
or
int
jne
movs
(bad)
or
mov
(bad)
push
(bad)
mov
pop
out
mov
jecxz
sub
rcl
jmp
or
(bad)
(bad)
dec
in
ret
xchg
xlat
add
add
std
xchg
in
ins
call
jg
jg
add
xchg
retf
int3
bound
push
mov
sbb
stos
sbb
(bad)
(bad)
dec
repz
mov
adc
test
data16
lds
inc
pop
repnz
sub
dec
test
(bad)
cli
ret
mov
icebp
and
xor
inc
or
stos
leave
mov
xor
cwde
cmps
add
(bad)
(bad)
(bad)
(bad)
out
je
(bad)
daa
xchg
(bad)
mul
mov
push
leave
jecxz
and
push
inc
(bad)
lds
call
dec
lods
mov
xor
cmp
(bad)
(bad)
(bad)
fisttp
enter
or
push
push
jge
sub
mov
mov
(bad)
(bad)
jg
pop
jo
mov
aas
mov
cmc
pop
xchg
mov
pusha
retf
mov
(bad)
dec
sbb
jne
aad
xchg
setns
test
mov
(bad)
loop
std
xchg
ins
mov
movs
xor
sbb
(bad)
push
imul
retf
inc
mov
jnp
push
enter
ret
xchg
rcl
out
or
inc
cmps
mov
(bad)
dec
clc
mov
sub
enter
inc
cmp
scas
adc
(bad)
inc
mov
jo
xchg
push
jbe
xchg
pop
inc
arpl
adc
or
adc
pop
(bad)
inc
lds
aam
ja
xor
jmp
fs
iret
sti
sub
imul
pop
stos
imul
sti
iret
fld1
shl
or
(bad)
(bad)
call
not
shr
hlt
pushf
mov
int3
icebp
cdq
pop
jmp
sub
(bad)
jb
std
pop
inc
cdq
sbb
dec
cmp
inc
xadd
(bad)
(bad)
call
clc
out
push
div
xor
stos
jns
xchg
mov
ins
out
fnstsw
cmp
es
(bad)
dec
jge
popf
aam
mov
lock
stc
scas
ret
test
(bad)
call
adc
push
dec
cmp
xchg
lock
push
xor
aam
jb
cmp
cmp
js
(bad)
(bad)
inc
out
int3
imul
stc
mov
xor
inc
mov
xor
(bad)
sub
(bad)
dec
ror
dec
outs
ret
xchg
push
sub
popa
test
loopne
das
add
or
push
push
xor
test
inc
jl
(bad)
(bad)
(bad)
call
dec
jg
inc
mov
xlat
xchg
mov
mov
mov
test
pop
(bad)
jmp
inc
stc
mov
cwde
xchg
not
test
ret
push
xchg
xor
mov
xchg
(bad)
(bad)
(bad)
dec
mov
mov
add
xor
shl
cs
nop
jl
mov
inc
fwait
push
cmp
xor
(bad)
(bad)
mov
or
shl
adc
mov
jg
jo
sbb
sbb
(bad)
push
outs
cmps
xchg
cmp
pop
inc
ret
cld
repz
inc
sbb
sub
(bad)
cmps
(bad)
in
aas
sti
dec
fnsave
aas
(bad)
(bad)
(bad)
(bad)
mov
push
nop
in
lods
cmp
test
push
jns
das
add
or
(bad)
(bad)
loop
out
mov
push
lock
dec
mov
jmp
int
fwait
push
dec
gs
jecxz
push
jae
mov
ins
mov
xchg
imul
shr
or
mov
xchg
mov
(bad)
(bad)
(bad)
call
mov
aas
push
or
out
scas
pop
inc
call
dec
xchg
jmp
xchg
fcomip
inc
(bad)
fimul
stc
mov
push
lods
push
inc
or
in
icebp
push
cld
jg
xor
dec
out
arpl
mov
addr16
out
push
sahf
push
ficom
xor
in
outs
clc
(bad)
(bad)
jp
xlat
test
fst
and
out
jnp
push
or
xor
(bad)
(bad)
dec
jno
outs
mov
call
jp
xchg
retf
push
dec
sahf
xchg
lods
nop
sbb
and
cdq
outs
push
mov
int3
xor
test
push
enter
jge
test
jmp
pop
aas
cs
mov
add
mov
pushf
(bad)
xor
(bad)
(bad)
cmp
leave
cwde
out
les
movs
inc
leave
jmp
inc
add
or
dec
leave
mov
das
shld
(bad)
(bad)
dec
arpl
and
push
adc
std
fild
fdivrp
or
mov
lea
(bad)
mov
lds
ret
in
jo
jecxz
bound
jmp
ret
(bad)
fimul
loop
sub
fwait
aad
(bad)
(bad)
jns
(bad)
std
cmps
push
int3
loop
in
jno
and
in
int
mov
(bad)
jg
cmp
push
dec
jge
fst
retf
aaa
imul
cs
cdq
icebp
js
pop
in
mov
mov
cmc
(bad)
push
or
int3
scas
in
retf
int
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
popa
ret
mov
inc
xchg
pop
cmp
xor
out
cdq
mov
push
test
sti
fsub
ja
(bad)
inc
push
out
xchg
xchg
inc
int
jb
dec
inc
inc
(bad)
(bad)
jmp
cli
lock
addr16
jno
cmp
sbb
(bad)
inc
cli
loop
xlat
jg
inc
jb
les
sbb
mov
dec
movs
and
(bad)
inc
lods
ds
xor
sub
sbb
jecxz
add
xor
es
ss
sbb
sbb
rol
nop
movs
out
dec
(bad)
call
idiv
int3
repnz
cmp
lds
(bad)
in
sbb
and
and
(bad)
call
in
sub
mov
xchg
and
call
pop
call
sbb
pusha
out
pcmpgtb
pop
or
sti
(bad)
(bad)
(bad)
(bad)
mov
dec
les
push
jns
mov
or
imul
sbb
adc
inc
es
sub
not
aaa
fs
daa
iret
imul
cld
mov
xchg
(bad)
(bad)
inc
add
sub
lds
popf
xor
jle
or
dec
sbb
cwde
dec
(bad)
(bad)
(bad)
dec
fdivr
es
mov
xchg
adc
call
adc
dec
sub
arpl
mul
aaa
and
mov
in
pop
aas
inc
xchg
mov
lea
jmp
mov
(bad)
pop
icebp
loope
xchg
lahf
addr16
sub
push
fisubr
(bad)
(bad)
(bad)
push
dec
imul
cmp
xchg
xor
les
dec
mov
inc
pop
pop
cmps
(bad)
(bad)
inc
aas
and
popa
mov
movs
loop
ins
cli
push
js
mov
add
clc
mov
and
stos
ins
push
pop
hlt
(bad)
call
cwde
add
mov
clc
xchg
mov
fucomi
add
nop
sub
(bad)
fdivrp
cmc
(bad)
(bad)
call
mov
adc
jg
jmp
dec
sub
mov
inc
xor
fld
cwde
cmp
shl
ds
jno
(bad)
(bad)
(bad)
jmp
mov
inc
inc
out
retf
ror
loopne
(bad)
(bad)
or
mov
je
(bad)
(bad)
(bad)
jmp
mov
mov
cmp
jne
(bad)
mov
imul
dec
inc
out
mov
(bad)
(bad)
(bad)
call
and
adc
push
lods
sub
in
jg
in
add
mov
add
mul
mov
fsubr
enter
and
daa
in
cli
mov
cmp
jmp
mov
je
pop
clc
das
jmp
sbb
daa
xor
dec
fld
adc
scas
jno
(bad)
(bad)
jmp
jae
cli
cld
push
je
mov
add
das
jo
mov
lods
fwait
push
jg
sub
outs
call
dec
(bad)
aad
add
cmps
lds
call
push
cld
and
hlt
nop
mov
push
sahf
(bad)
movs
add
xchg
pop
(bad)
jg
(bad)
out
out
mov
push
mov
mov
sbb
xlat
popa
push
aas
cmp
enter
in
pop
cmp
out
retf
das
pop
fwait
setne
jp
outs
out
(bad)
daa
(bad)
and
dec
dec
hlt
add
and
(bad)
(bad)
jmp
popa
clc
adc
js
pop
pop
sbb
call
inc
sbb
out
push
ret
mov
mov
xor
mov
std
inc
ds
pop
xchg
mov
xor
fwait
and
(bad)
push
dec
mov
cmc
lds
cmp
jno
mov
sbb
(bad)
(bad)
call
repz
jmp
jae
sar
loopne
das
push
pop
jno
stc
adc
fwait
leave
fidiv
fimul
sahf
ret
(bad)
dec
sti
mov
mov
das
jb
sub
(bad)
js
imul
je
fild
(bad)
(bad)
jmp
mov
pushf
push
inc
mov
cmp
fisub
xchg
inc
or
jg
cmp
mov
lock
inc
pop
mov
dec
or
arpl
(bad)
inc
aas
pop
nop
retf
ins
in
cdq
stc
push
inc
hlt
ja
lea
pop
push
das
(bad)
(bad)
(bad)
dec
or
pop
jne
retf
lock
js
stos
inc
call
pop
in
cmp
sbb
call
dec
out
rcl
cmp
dec
sbb
shl
sbb
ins
push
(bad)
int
mov
jno
(bad)
(bad)
call
sub
pushf
add
sbb
inc
cmc
sub
cmc
jne
cmp
cmc
sbb
mov
dec
push
mov
jmp
imul
or
dec
popa
push
retf
cs
push
(bad)
stc
jbe
or
mov
xor
popf
jne
xchg
lea
ss
jp
adc
add
icebp
xchg
cld
in
ret
(bad)
(bad)
(bad)
mov
cwde
stc
push
push
push
aas
jns
pop
bound
stc
xchg
adc
enter
scas
mov
xchg
push
pop
mov
pop
ret
daa
(bad)
or
stos
mov
and
ret
stc
mov
loope
in
xchg
(bad)
(bad)
call
mov
jp
rcr
(bad)
push
xchg
cmp
fcmovbe
xor
jecxz
(bad)
(bad)
fmul
aas
ss
shl
mov
add
mov
cmp
cmp
xor
pop
(bad)
(bad)
jmp
mov
nop
push
addr16
pop
sbb
sbb
les
mov
cli
(bad)
(bad)
jmp
inc
cs
or
leave
icebp
(bad)
fidiv
add
adc
mov
gs
push
aam
pop
loopne
and
inc
cli
aam
pushf
ja
mov
lods
aad
inc
test
sbb
popa
push
xor
lea
sub
dec
ins
pop
(bad)
mov
jle
data16
aas
shl
in
stc
loope
fstp
xchg
(bad)
(bad)
(bad)
jmp
or
loopne
jg
enter
int3
ret
scas
in
hlt
xchg
jmp
int3
ss
mov
push
xor
stos
mov
jbe
into
mov
and
call
add
xchg
je
or
cmps
xchg
add
gs
mov
jecxz
mov
add
inc
lahf
mov
in
pxor
icebp
mov
call
pop
or
mov
mov
(bad)
jmp
fistp
push
dec
mov
loope
pop
sar
inc
ins
call
hlt
jo
xchg
js
adc
es
cmps
sub
outs
(bad)
in
push
jns
xchg
movs
(bad)
into
cmps
pop
(bad)
out
jmp
(bad)
jmp
ds
dec
icebp
xor
outs
fucomip
lds
jl
cmp
imul
ror
sub
inc
clc
lock
les
inc
repnz
clc
test
(bad)
(bad)
(bad)
call
xchg
scas
sbb
ins
in
icebp
push
repnz
xchg
mov
lea
mov
cmps
lods
mov
(bad)
jg
lds
cdq
xor
push
(bad)
xchg
jno
test
jg
fsub
pop
sahf
adc
mov
mov
cmc
push
jecxz
lahf
adc
inc
(bad)
(bad)
(bad)
mov
push
push
xchg
iret
scas
test
pop
imul
inc
mov
and
mov
hlt
enter
cld
or
or
out
imul
mov
scas
movs
mov
xor
call
adc
inc
inc
pop
push
cmp
sub
out
loop
addr16
int
sti
xchg
fsubr
jg
push
mov
int3
(bad)
mov
adc
test
ss
dec
movs
cmps
cmovb
(bad)
(bad)
jmp
aad
sub
sbb
fsubr
inc
adc
push
movs
fmul
inc
jge
cmp
or
lods
iret
ret
mov
lods
mov
lock
push
adc
mov
sar
(bad)
jmp
mov
ins
pop
xchg
sti
xor
xor
rol
jmp
dec
add
cmc
push
add
cmp
(bad)
out
in
ins
in
(bad)
(bad)
call
lock
(bad)
mov
mov
xor
ins
push
neg
sbb
(bad)
pop
lods
or
jg
add
cmp
mov
push
inc
cmp
(bad)
(bad)
(bad)
(bad)
fldenv
fsub
mov
mov
hlt
cmp
jmp
(bad)
(bad)
(bad)
(bad)
out
repnz
(bad)
gs
mov
nop
loopne
xchg
aaa
ja
xchg
sbb
je
mov
mov
sub
push
xchg
add
sar
inc
outs
jecxz
fwait
rcr
inc
mov
les
jo
and
nop
mov
jne
in
cmp
(bad)
fcomip
push
cli
and
adc
sub
(bad)
pusha
push
stc
sub
repz
mov
adc
fld
inc
loop
sahf
jbe
(bad)
cmps
jg
push
cwde
addr16
dec
in
call
mov
fnsave
jp
bound
or
ficomp
jp
mov
out
ud0
(bad)
jmp
jb
adc
cmp
inc
popa
fnstsw
into
nop
cmp
mov
(bad)
(bad)
(bad)
js
icebp
ja
in
mov
sub
loope
cmps
data16
gs
lahf
out
mov
mov
lock
pop
das
outs
pop
push
adc
mov
aas
les
push
nop
mov
push
imul
(bad)
(bad)
jmp
sub
sbb
outs
loop
das
xor
out
leave
and
loop
push
sub
add
loopne
jbe
shr
mov
(bad)
mov
jbe
sub
data16
mov
xchg
ret
mov
push
in
or
(bad)
(bad)
mov
mov
mov
mov
jg
sbb
mov
push
xchg
imul
push
sub
mov
imul
mov
add
mov
(bad)
sbb
cld
(bad)
ficomp
push
adc
jl
mov
(bad)
call
sub
sbb
xchg
sbb
sub
dec
iret
inc
iret
pop
push
hlt
loop
or
sar
(bad)
(bad)
jmp
scas
mov
(bad)
aaa
in
int
xchg
xchg
inc
adc
rcr
xor
repnz
adc
jg
dec
shl
dec
fsubr
imul
pop
bound
jg
and
ja
(bad)
(bad)
dec
lock
sti
mov
popa
mov
adc
sub
push
outs
and
jg
pop
das
clc
(bad)
(bad)
mov
sahf
pop
jae
int
xor
stc
push
inc
or
xchg
mov
jge
loop
pop
std
cld
push
mov
(bad)
ins
cmp
shr
pushf
fwait
rol
jno
adc
(bad)
(bad)
inc
int
call
leave
fstp
xchg
xchg
push
sub
or
mov
(bad)
dec
fbld
out
mov
aad
inc
jmp
pop
add
pop
xor
fwait
js
cld
(bad)
inc
push
cmc
nop
xchg
cmc
push
out
imul
xor
(bad)
jmp
cmps
push
or
ins
pop
xor
sbb
mov
xchg
jne
cli
(bad)
(bad)
(bad)
mov
(bad)
iret
sar
loopne
mov
mov
xor
pusha
rcl
mov
mov
xor
out
mov
or
pop
dec
cmps
jae
adc
add
ret
adc
mov
jg
mov
lahf
je
(bad)
add
not
jns
cmps
(bad)
pop
cdq
mov
ins
faddp
push
std
(bad)
jmp
fidivr
out
jmp
push
fnstsw
ret
and
pusha
and
call
(bad)
dec
sbb
call
out
push
in
cmps
enter
test
shr
cdq
mov
(bad)
(bad)
(bad)
mov
xchg
js
(bad)
sbb
push
rcl
shl
dec
inc
js
movs
movs
ror
cld
pop
icebp
inc
sub
dec
outs
cli
dec
mov
sahf
not
mov
xchg
fst
call
xor
mov
sbb
push
mov
addr16
fadd
and
test
hlt
shl
jmp
es
lds
repz
and
sbb
(bad)
(bad)
dec
mov
imul
popa
test
jmp
or
sbb
dec
(bad)
fstp
(bad)
dec
sub
ret
sbb
clc
mov
cmc
mov
(bad)
(bad)
(bad)
jmp
sbb
xlat
jbe
bnd
sahf
call
mov
test
sti
cmps
dec
sub
adc
jmp
mov
test
inc
ins
dec
(bad)
push
jae
adc
loope
das
mov
(bad)
in
mov
(bad)
(bad)
jmp
sub
lods
sahf
scas
shl
and
jl
sub
lea
ds
bound
call
aaa
iret
xor
push
jmp
mov
cmp
jp
cmp
ret
rcl
(bad)
(bad)
jge
mov
in
mov
adc
cmp
(bad)
mov
xchg
or
pop
inc
loopne
sub
(bad)
(bad)
dec
gs
aad
jecxz
dec
xchg
push
push
(bad)
push
pop
into
xchg
sbb
std
inc
sub
(bad)
(bad)
(bad)
ficom
pushf
shr
or
push
stos
in
pop
(bad)
dec
sahf
pushf
call
pusha
movs
hlt
mov
jmp
sbb
xchg
add
aad
adc
xchg
bound
push
bound
in
lods
mov
(bad)
(bad)
call
cmps
add
pop
hlt
fcomip
jae
test
arpl
inc
pushf
mov
fisttp
push
gs
(bad)
(bad)
(bad)
(bad)
call
add
and
scas
jo
(bad)
sub
xchg
cmp
xor
inc
dec
pusha
addr16
out
(bad)
(bad)
dec
cmp
mov
mov
push
adc
es
cld
and
neg
dec
addr16
jmp
(bad)
call
sub
jo
xchg
dec
(bad)
das
mov
mov
jns
mov
call
das
sar
mov
mov
xchg
jae
inc
jge
es
push
sar
(bad)
(bad)
mov
dec
scas
arpl
sub
jae
xor
inc
sbb
cmp
jmp
(bad)
(bad)
inc
loop
jecxz
jl
xor
sub
push
test
test
jnp
(bad)
(bad)
(bad)
jmp
jo
push
push
xor
add
loop
int3
jmp
ret
or
add
ja
adc
mov
and
(bad)
dec
jnp
jmp
loope
out
mov
js
xchg
xchg
dec
sbb
scas
jle
enter
fstp
add
mov
(bad)
push
lods
and
push
pop
jle
out
mov
dec
jp
push
cmc
aaa
mov
rol
and
adc
(bad)
(bad)
(bad)
(bad)
mov
in
mov
test
push
adc
js
push
cmc
or
aad
(bad)
(bad)
(bad)
call
xchg
test
mov
add
outs
and
sbb
pop
aas
loop
sbb
(bad)
(bad)
(bad)
call
sub
cmps
ss
ror
jns
mov
xchg
mov
sub
out
aaa
jmp
mov
test
lock
mov
and
loopne
rep
imul
xor
es
fs
cmc
cmp
pop
add
sbb
push
scas
bound
xchg
(bad)
mov
inc
aam
cmc
lock
jnp
mov
xor
cmc
popa
xchg
movlps
stos
(bad)
(bad)
dec
leave
in
jnp
sub
cwde
pop
mov
adc
(bad)
pop
lahf
(bad)
(bad)
(bad)
inc
frstor
mov
das
cmps
addr16
adc
inc
ror
lahf
jmp
and
scas
mov
xor
mov
in
xchg
push
movs
cmc
fisttp
fisubr
cmp
sub
(bad)
mov
push
and
and
add
aaa
cdq
inc
pusha
(bad)
ficom
inc
push
push
xchg
push
aad
fdivr
lods
cmp
fs
jg
(bad)
(bad)
inc
sub
jmp
or
adc
xchg
es
mov
mov
(bad)
and
push
fwait
sub
mov
fcomip
int3
cmc
inc
outs
lock
add
popf
xor
sar
(bad)
call
pop
(bad)
retf
icebp
cmc
pop
or
push
add
movs
arpl
loop
cli
sbb
(bad)
(bad)
(bad)
cmp
imul
mov
dec
jmp
ret
mov
or
jecxz
inc
stos
std
test
inc
aad
fsub
test
fnstcw
(bad)
push
push
jl
xor
mov
mov
mov
(bad)
(bad)
(bad)
inc
fs
sti
sub
dec
stc
cmps
je
xor
sbb
outs
cmp
(bad)
(bad)
(bad)
push
imul
jle
dec
xchg
cmp
sub
fst
pop
pop
cmp
inc
pop
mov
aam
iret
sti
(bad)
push
dec
or
fwait
jns
inc
jg
mov
cld
push
sbb
in
ss
jns
push
inc
cmps
sbb
jmp
push
pop
lods
(bad)
xchg
sub
jge
pop
lods
iret
push
push
daa
xchg
(bad)
jmp
sub
ficom
inc
arpl
xor
or
scas
(bad)
call
sub
rcr
inc
push
and
jno
hlt
pop
bound
out
xchg
(bad)
(bad)
(bad)
call
jnp
dec
dec
xchg
xor
cmps
dec
xor
fldcw
jae
test
fcmovu
sbb
(bad)
call
adc
xchg
(bad)
lea
icebp
jg
movs
mov
or
xchg
push
(bad)
and
mov
(bad)
(bad)
dec
add
mov
pop
stos
pushf
sbb
shl
xlat
dec
(bad)
push
mov
push
ror
dec
xchg
jp
sbb
(bad)
push
rol
jl
(bad)
(bad)
inc
leave
scas
mov
push
lods
inc
mov
hlt
cld
or
(bad)
sbb
xchg
fwait
pop
xchg
cld
lahf
adc
sbb
scas
cbw
arpl
mov
lods
test
add
(bad)
jmp
push
add
sub
pop
dec
push
mov
leave
dec
in
pop
mov
inc
pusha
jmp
sbb
adc
mov
add
(bad)
call
fs
sub
(bad)
pusha
jg
mov
mov
(bad)
(bad)
cmp
js
dec
ror
pop
jl
jge
fcmovne
lods
das
clc
(bad)
(bad)
ficom
nop
mov
lds
dec
pcmpgtw
pop
jmp
jmp
(bad)
xchg
loop
sub
mov
mov
out
pop
xchg
in
pop
jmp
push
test
aaa
mov
and
xchg
clc
sub
fs
mov
mov
cmp
(bad)
call
outs
mov
sub
scas
aas
push
xchg
adc
nop
lods
aaa
sbb
jmp
mov
clc
(bad)
(bad)
inc
shl
cmp
mov
cli
ss
sub
mov
mov
sub
adc
inc
sub
xchg
cmc
daa
(bad)
(bad)
(bad)
inc
pop
add
xchg
cmp
cmp
iret
or
shr
push
cmps
sub
fisub
iret
cmc
test
pop
rcr
dec
sbb
ror
xor
xor
push
jae
add
xor
(bad)
(bad)
(bad)
dec
sbb
lods
pop
sub
iret
pop
in
into
mov
loop
cmp
loopne
inc
cmp
or
mov
sub
(bad)
(bad)
dec
(bad)
daa
push
arpl
in
fild
(bad)
cmp
cmp
sbb
(bad)
(bad)
inc
mov
in
cdq
cmp
cwde
push
pop
sbb
loope
jns
call
and
sbb
xchg
push
(bad)
(bad)
(bad)
inc
xor
test
cmc
jecxz
xchg
dec
test
inc
call
xchg
ins
sti
ret
mov
mov
loopne
loopne
or
mov
loope
inc
fidiv
sub
inc
push
mov
mov
cld
(bad)
(bad)
cli
jl
dec
sbb
cmp
pop
in
mov
sbb
movs
push
shl
aad
(bad)
(bad)
dec
in
mov
std
push
bound
enter
add
pushf
call
loopne
icebp
pop
and
int
adc
(bad)
jmp
dec
sub
push
jmp
inc
sub
mov
loopne
sub
outs
int3
ja
mov
or
mov
mov
ds
rol
mov
scas
dec
inc
das
xchg
fstp
das
(bad)
push
pop
je
ja
mov
adc
jo
xor
or
(bad)
call
mov
in
mov
js
cmps
gs
addr16
cmp
(bad)
jmp
es
sub
xor
mov
leave
push
js
lods
loop
jle
lock
push
mov
mov
adc
or
pop
out
into
fimul
mov
(bad)
mov
inc
movs
sbb
cmp
aaa
mov
frstor
sub
xchg
rcl
test
pop
and
add
push
cwde
(bad)
js
sub
clc
(bad)
mov
pop
xchg
mov
xor
push
dec
sbb
mov
xor
(bad)
jmp
shl
data16
jns
aaa
hlt
inc
mov
mov
daa
stos
mov
(bad)
(bad)
(bad)
jmp
mov
cmp
inc
push
daa
sbb
scas
outs
repz
sbb
call
dec
sbb
lods
aam
cmps
push
leave
xchg
sti
cmp
mov
imul
jmp
pop
leave
fidiv
call
mov
cdq
jb
fsubr
push
mov
icebp
loopne
in
inc
aam
xor
and
cld
mov
jecxz
inc
rcl
mov
retf
dec
and
dec
and
fistp
out
loopne
cli
es
popf
cmp
sub
cmp
movs
and
rcl
cwde
ds
mov
sub
sbb
mov
test
fs
sbb
mov
and
(bad)
(bad)
(bad)
push
jle
push
jmp
jmp
je
adc
lock
push
mov
(bad)
call
cld
jo
cmp
xchg
sar
jnp
push
or
push
rcl
jl
ud0
(bad)
push
ficom
bound
jmp
add
mov
jle
shl
mov
leave
dec
and
lahf
mov
cmc
(bad)
jmp
or
bound
lds
xchg
inc
push
dec
mov
(bad)
(bad)
dec
cmp
mov
adc
popa
jmp
scas
out
shl
jns
or
(bad)
(bad)
jmp
dec
mov
sbb
jg
pop
enter
xchg
mov
lock
mov
(bad)
(bad)
push
jge
out
or
inc
xor
scas
icebp
push
mov
outs
mov
das
outs
xor
jg
xchg
cli
jo
adc
iret
(bad)
shl
out
cld
sbb
data16
push
int3
mov
pop
(bad)
(bad)
(bad)
dec
ror
shr
int3
retf
aad
lds
movs
loope
fcomp
or
push
xchg
jecxz
(bad)
(bad)
(bad)
jmp
popa
lea
scas
jge
pop
add
xor
adc
mov
jl
(bad)
fcomip
push
xchg
in
test
int3
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
clc
xchg
push
repnz
and
xor
fistp
xchg
mov
test
cs
xor
hlt
xor
call
push
mov
sub
xchg
mov
dec
out
xlat
mov
sub
leave
lahf
sahf
mov
shr
jge
aad
ins
add
das
cli
shl
cmps
cdq
test
aas
ror
arpl
sbb
adc
(bad)
(bad)
(bad)
jg
xchg
in
test
dec
loop
mov
jmp
or
dec
enter
jmp
mov
or
push
(bad)
sbb
mov
enter
in
movs
jbe
push
mov
call
ds
sbb
lea
dec
inc
cmc
cmps
adc
jo
test
mov
jg
sbb
sub
(bad)
jb
hlt
pop
(bad)
lea
cmp
dec
mov
sub
mov
mov
xor
arpl
call
and
(bad)
(bad)
jmp
adc
or
arpl
add
cmc
outs
or
jmp
arpl
cmp
jmp
in
pop
dec
not
mov
cli
(bad)
(bad)
arpl
loop
push
leave
mov
imul
(bad)
(bad)
(bad)
push
push
xor
repnz
mov
sbb
movs
inc
into
popf
sbb
repnz
cmp
into
mov
sub
jmp
mov
(bad)
xchg
mov
sbb
or
out
ret
(bad)
dec
jns
xor
jno
pop
adc
stc
add
(bad)
data16
mov
daa
sahf
and
mov
mov
jmp
lea
test
ret
in
int
jge
test
xor
jmp
(bad)
(bad)
jg
pop
mov
aad
push
imul
or
fbstp
les
push
pop
inc
push
push
cld
call
out
leave
test
aad
cmp
and
mov
test
dec
lea
mov
push
int
pop
jecxz
les
(bad)
fdiv
lock
cmp
cmps
mov
(bad)
(bad)
jmp
and
lahf
xor
aad
sub
pop
bound
adc
fwait
mov
sti
mov
dec
(bad)
cmp
aam
pop
cmp
daa
sub
push
inc
xchg
mov
fdiv
(bad)
(bad)
dec
lahf
out
jae
out
jecxz
jnp
int
inc
jno
pop
sub
dec
mov
sbb
cmp
call
inc
rcl
and
inc
mov
jp
shl
fdiv
push
xchg
fwait
outs
(bad)
(bad)
(bad)
inc
push
push
push
mov
or
sub
jmp
test
pushf
mov
jg
ror
jmp
push
daa
or
pusha
int
push
jnp
(bad)
(bad)
push
sbb
movs
imul
cmp
out
jp
adc
(bad)
mov
movs
add
repz
ret
cdq
mov
inc
fsub
xchg
jmp
out
sbb
(bad)
call
xor
adc
std
adc
inc
fst
fldcw
retf
clc
pop
jmp
sub
clc
retf
(bad)
fild
(bad)
(bad)
(bad)
jmp
inc
mov
add
data16
push
enter
jp
movs
cmc
test
rcr
int
adc
(bad)
(bad)
fsqrt
adc
and
sub
sbb
mov
push
in
clc
jno
xchg
xor
cwde
dec
(bad)
push
mov
mov
(bad)
inc
shr
add
js
inc
pop
and
dec
pop
cmp
pop
fwait
push
ret
dec
(bad)
(bad)
(bad)
jg
dec
mov
mov
mov
sub
ret
in
loope
add
inc
or
(bad)
call
jno
int3
cs
mov
jns
mov
test
sub
dec
inc
sub
fdivrp
jg
call
and
dec
cld
(bad)
cmp
bound
in
clc
mov
adc
cli
jmp
mov
push
das
lock
hlt
mov
dec
mov
sbb
(bad)
(bad)
push
pop
dec
daa
pop
xchg
scas
retf
sub
and
push
loop
pop
xchg
test
pushf
xor
(bad)
(bad)
(bad)
push
mov
push
push
dec
hlt
xor
jecxz
sbb
sbb
ds
loopne
or
ficom
call
mov
lahf
cmps
mov
xchg
popf
lods
xor
mov
mov
mov
into
retf
jge
xchg
(bad)
jmp
scas
mov
add
mov
xor
stos
jne
sti
ret
xor
cmc
pop
pop
inc
les
dec
cmp
jp
jmp
(bad)
(bad)
jle
and
xchg
jle
pop
gs
fnstsw
jmp
out
inc
lods
lahf
cmps
xchg
push
(bad)
jmp
xchg
sti
(bad)
xchg
xchg
add
rol
pop
repnz
int3
push
mov
ja
inc
jmp
call
lods
stos
lock
xlat
test
aas
inc
push
mov
aas
idiv
add
in
in
data16
(bad)
(bad)
jmp
jns
sbb
or
ja
xor
mov
and
shl
xor
iret
test
(bad)
(bad)
(bad)
inc
gs
jge
ss
sub
(bad)
or
iret
and
and
jecxz
push
into
imul
out
nop
sub
mov
or
and
rol
cwde
fwait
pushf
and
pop
rcl
dec
(bad)
(bad)
mov
jle
ret
sbb
pop
xor
sub
lea
das
or
call
outs
push
arpl
jmp
je
add
movs
push
fwait
(bad)
push
push
repz
cmp
mov
mov
in
loop
xchg
loope
(bad)
(bad)
inc
add
xchg
xchg
sbb
lods
push
jns
cmp
in
inc
into
jl
(bad)
call
rol
sub
out
js
mov
(bad)
jmp
cli
ficomp
stos
jbe
shr
lds
int3
stc
lds
rol
xchg
sbb
(bad)
(bad)
(bad)
call
fstp
stos
pop
in
into
addr16
mov
fcmove
push
push
jb
mov
(bad)
(bad)
(bad)
jmp
inc
pushf
in
retfw
aam
dec
mov
mov
ror
pop
lods
mov
loopne
(bad)
(bad)
(bad)
push
and
dec
jmp
add
pop
push
ins
cs
call
dec
mov
dec
lock
cmps
fstp
xor
sub
jmp
addr16
rcl
mov
or
mov
idiv
inc
nop
(bad)
pusha
(bad)
cmc
push
jp
fldcw
cwde
cwde
pop
int3
or
call
inc
scas
pop
retf
dec
push
fidivr
push
lea
fimul
(bad)
(bad)
call
mov
idiv
push
pop
data16
frstor
jnp
cdq
dec
call
mov
inc
xchg
mov
fild
xlat
aas
into
stos
cmp
or
mov
mov
dec
int
fsubp
mov
aas
ficomp
(bad)
(bad)
(bad)
push
inc
shl
sub
xor
fimul
ror
fist
cli
pop
rol
out
add
cs
ss
mov
and
push
mov
out
ds
(bad)
(bad)
dec
pop
sbb
stc
lods
adc
sar
mov
xchg
bound
sbb
mov
mov
arpl
mov
jns
cmp
inc
test
fsubr
std
or
inc
sbb
clc
lock
adc
cmps
adc
or
arpl
mov
fs
out
retf
xor
rcl
jg
in
add
ds
repnz
add
lods
add
(bad)
mov
cmps
jne
xchg
xchg
mov
(bad)
dec
das
xor
pop
mov
mov
rol
mov
leave
and
adc
(bad)
mov
dec
xchg
and
repz
jg
mov
push
cmps
push
lods
adc
inc
xchg
sar
jmp
pop
(bad)
cli
mov
inc
dec
imul
xor
popf
shl
dec
repz
scas
clc
(bad)
jg
shl
sub
enter
icebp
ins
in
mov
xor
cmp
xor
call
push
sbb
jnp
mov
movs
(bad)
call
js
retf
sahf
xchg
xor
push
ds
shr
(bad)
xor
bnd
jmp
clc
(bad)
(bad)
jg
or
test
dec
out
(bad)
cdq
(bad)
jp
retf
test
push
push
call
cld
outs
mov
push
out
jb
dec
mov
xchg
ja
in
push
sbb
mov
xchg
shl
(bad)
in
call
popa
adc
ins
push
mov
jmp
cs
mov
pop
jmp
jnp
ficomp
jle
mov
fdiv
jle
(bad)
sbb
neg
push
and
and
sub
cmp
(bad)
jmp
sahf
leave
push
jp
mov
arpl
shl
mov
sbb
test
(bad)
jg
sbb
push
xchg
test
xchg
sbb
xchg
out
aad
cmp
mov
shl
mov
jne
stc
ret
and
push
jb
fs
cwde
(bad)
(bad)
cs
mov
(bad)
jmp
pop
jp
mov
xlat
(bad)
adc
aam
jmp
xlat
das
(bad)
(bad)
(bad)
call
mov
je
mov
cmp
mov
repnz
sbb
loope
test
fcomip
dec
out
into
xor
mov
mov
mov
into
scas
stc
add
popw
bound
cwde
sar
pop
push
js
and
xchg
lock
mov
call
push
xchg
(bad)
mov
pop
pop
in
clc
hlt
mov
push
xchg
lea
xchg
jmp
mov
mov
jle
imul
add
pop
popa
cmp
and
pusha
(bad)
jg
or
jg
test
xchg
xchg
mov
cmp
clc
(bad)
jmp
movs
xor
les
movs
add
pusha
icebp
jo
inc
test
ins
ret
cld
(bad)
jmp
jmp
arpl
test
mov
or
sbb
mov
les
test
(bad)
(bad)
jmp
aas
dec
sbb
sub
pop
mov
int
sub
fmul
(bad)
(bad)
cmp
mov
cs
inc
adc
add
mov
(bad)
(bad)
(bad)
cmp
sahf
cmp
loop
call
lods
pushw
shl
sbb
das
adc
jno
(bad)
(bad)
dec
iret
shl
fst
bound
fist
inc
ins
aas
xor
sbb
gs
scas
cli
(bad)
dec
test
push
jmp
arpl
sbb
mov
(bad)
jmp
jb
and
cmp
push
add
inc
cwde
mov
rcl
(bad)
(bad)
(bad)
inc
ins
pushf
fbld
push
out
xor
or
mov
xchg
icebp
(bad)
(bad)
(bad)
clc
inc
aad
and
mov
sbb
into
or
(bad)
sub
addr16
icebp
movs
pop
fld
cdq
cmp
mov
int
add
mov
pop
mov
xchg
jmp
mov
repz
xchg
ins
add
mov
fidivr
mov
loopne
icebp
shl
(bad)
jbe
sbb
pop
pop
scas
and
aad
pop
aam
mov
fst
enter
(bad)
js
lods
out
mov
je
xchg
or
push
(bad)
(bad)
call
(bad)
mov
sar
jg
fsub
imul
retf
(bad)
(bad)
(bad)
dec
push
in
add
into
imul
std
jns
inc
adc
(bad)
mov
xchg
xor
sti
mov
inc
bound
add
mov
mov
jnp
sub
aad
ss
(bad)
jmp
or
push
call
lock
ins
ss
out
mov
push
js
mov
(bad)
(bad)
std
sbb
aam
inc
clc
ins
fist
mov
nop
(bad)
xchg
mov
(bad)
fbld
ficomp
ror
jmp
pop
jp
add
add
sub
pop
dec
fiadd
stos
jmp
retf
sahf
ret
call
(bad)
mov
mov
and
(bad)
(bad)
cld
fisubr
add
loope
adc
leave
mov
pusha
pop
dec
mov
add
gs
clc
and
retf
pop
inc
push
shl
aaa
(bad)
(bad)
(bad)
dec
jge
pushf
cli
jp
(bad)
fisub
mov
popa
xchg
add
push
pop
or
mov
(bad)
(bad)
daa
jge
cli
dec
mov
inc
xchg
sub
(bad)
call
add
js
jg
psubusb
cmp
mov
popa
sbb
call
cmp
lock
das
test
clc
add
ret
cmps
jne
(bad)
(bad)
(bad)
fistp
es
rcr
retf
shl
or
jb
xor
xlat
or
pop
std
(bad)
call
pop
mov
aam
mov
xchg
adc
cs
cwde
cdq
xchg
sub
jecxz
(bad)
(bad)
mov
add
xchg
jp
test
inc
add
stc
fldcw
cmp
in
add
or
frstor
bnd
push
stos
jmp
call
outs
rep
or
cmp
add
ins
sbb
mov
(bad)
(bad)
(bad)
out
or
out
call
xlat
std
ret
sub
jne
ret
loopne
(bad)
pop
jbe
(bad)
(bad)
(bad)
call
pop
mov
test
pop
rcr
stos
jb
dec
out
fs
pop
mov
mov
aaa
out
or
(bad)
dec
out
push
adc
and
ins
or
(bad)
(bad)
jmp
sub
repz
ja
ja
adc
fcomp
loopne
mov
outs
test
or
rcr
gs
call
ficom
repnz
pop
sub
sbb
out
clc
pop
stos
inc
pop
cs
(bad)
icebp
out
and
addr16
fimul
add
sub
das
lds
pop
fst
mov
(bad)
(bad)
jmp
mov
cs
out
inc
les
sbb
daa
loop
pop
sbb
pusha
ss
rol
jl
jmp
pop
mov
pop
cmps
ins
jg
(bad)
inc
rcl
fst
xor
inc
(bad)
rol
sub
cmc
(bad)
push
cli
popa
imul
or
gs
scas
rcl
sbb
fwait
xor
jmp
stos
imul
enter
xchg
lods
xchg
fidiv
mov
and
fstp
loope
into
movs
hlt
mov
inc
xchg
outs
leave
xor
cmp
dec
fs
fnstenv
dec
aam
(bad)
and
lahf
cmp
jo
loop
xchg
jg
mov
jo
inc
jl
(bad)
jecxz
rcr
mov
(bad)
in
enter
loope
mov
dec
xchg
xchg
pop
sbb
fdiv
and
(bad)
(bad)
(bad)
fistp
(bad)
mov
xor
mov
rol
jae
mov
and
(bad)
(bad)
call
pop
lahf
gs
pop
ins
jo
or
iret
xchg
jae
ret
popf
nop
jmp
fld
fiadd
pop
hlt
(bad)
call
retf
push
(bad)
in
xchg
aas
jns
lahf
and
repz
int3
cmp
je
push
pop
cmc
out
dec
fcmovnb
mov
call
cmps
shr
jg
(bad)
(bad)
jmp
jl
cmp
xor
inc
je
movs
pop
test
lock
jnp
cwde
push
pusha
jno
adc
adc
fdivr
or
mov
(bad)
(bad)
call
ins
in
mov
je
outs
int3
sub
and
mov
popf
sub
add
mov
loopne
(bad)
call
mov
rcr
imul
and
jecxz
cmp
jmp
or
(bad)
aaa
cdq
dec
shl
call
int
dec
fld
pusha
push
(bad)
mov
lods
sbb
push
jmp
div
lods
hlt
mov
loop
xchg
add
pop
jno
or
sar
mov
hlt
shl
je
push
data16
mov
or
xor
in
xchg
pop
jp
jo
(bad)
jg
dec
xor
enter
and
xor
mov
jge
jb
(bad)
(bad)
(bad)
jmp
loope
mov
jnp
mov
pop
and
hlt
daa
inc
popf
sbb
popf
(bad)
mov
(bad)
(bad)
inc
xchg
popa
into
ja
add
mov
mov
in
push
outs
xchg
fmul
jl
fs
hlt
dec
scas
inc
add
mov
push
inc
push
(bad)
fistp
jl
popf
xor
jg
(bad)
(bad)
(bad)
fdivp
pop
inc
lods
out
ret
rcr
jmp
xor
aam
(bad)
(bad)
jmp
add
or
adc
mov
adc
add
rcl
push
xchg
(bad)
mov
(bad)
push
cmp
pusha
sti
mov
fcmove
sub
mov
dec
outs
jmp
mov
xchg
inc
xchg
(bad)
(bad)
(bad)
(bad)
jnp
jno
jge
mov
jmp
dec
daa
(bad)
jae
adc
mov
sbb
loopne
add
push
ret
nop
fbstp
ins
mov
outs
inc
add
jbe
stos
inc
dec
lock
aas
and
ins
pop
sar
cmps
mov
cmc
jmp
(bad)
(bad)
(bad)
(bad)
out
(bad)
test
pop
fwait
mov
push
mov
xor
mov
adc
js
xor
adc
push
add
(bad)
(bad)
jmp
(bad)
lock
push
call
mov
scas
leave
or
scas
dec
jl
xchg
jl
sub
jo
dec
out
lock
mov
jno
shl
stc
(bad)
sub
sar
fisttp
xchg
dec
mov
inc
loope
(bad)
(bad)
jmp
aaa
and
xor
cli
ret
cmps
imul
mov
pop
rcr
lock
je
movs
inc
mov
mov
mov
add
(bad)
(bad)
dec
mov
frstor
je
stos
xor
sbb
pop
leave
xchg
jmp
ret
sub
jmp
or
(bad)
(bad)
call
shl
(bad)
mov
test
idiv
call
jns
sub
mov
(bad)
call
ins
hlt
mov
cmp
test
add
push
js
sar
ins
(bad)
(bad)
(bad)
dec
mov
nop
inc
xor
icebp
mov
nop
push
mov
ror
xor
(bad)
(bad)
inc
sub
add
ja
sub
mov
aaa
(bad)
fcom
test
inc
cmp
(bad)
(bad)
(bad)
sub
ret
add
adc
push
sbb
sbb
loopne
or
mov
cmp
sbb
jg
jne
mov
mov
inc
mov
lock
add
inc
mov
mov
(bad)
lds
loop
mov
movs
adc
sub
outs
pop
aaa
inc
push
addr16
jns
cdq
inc
out
dec
cdq
pop
ins
inc
ret
jb
ins
cmp
xchg
xchg
add
or
cmps
push
mov
icebp
add
mov
clc
(bad)
(bad)
dec
sbb
ret
bound
push
movs
in
xchg
mov
cli
cmp
mov
or
mov
jl
adc
test
pop
mov
(bad)
push
push
jg
fild
test
xchg
ret
scas
lods
ja
xlat
jne
out
popa
jmp
scas
jnp
cmp
out
(bad)
(bad)
(bad)
jg
cmp
inc
jl
lea
shr
inc
es
inc
jb
int
mov
inc
nop
xchg
mov
push
jbe
xchg
sti
sub
(bad)
(bad)
mov
xor
out
daa
not
ins
pushf
out
xchg
mov
mov
push
fs
xor
mov
cmc
shl
inc
bound
(bad)
sub
pop
push
lock
pop
fnstsw
sar
jns
aaa
cmp
(bad)
call
xchg
jae
icebp
jnp
push
fist
rcl
push
cmp
out
pop
ss
or
mov
add
popa
test
cmp
cmp
arpl
into
lahf
jmp
fst
jno
das
and
sbb
call
pusha
mov
(bad)
cmps
cmps
mov
pop
ret
cmc
ficomp
push
(bad)
lods
clc
(bad)
(bad)
call
mov
loop
adc
scas
jl
outs
pop
pop
out
mov
cmp
(bad)
dec
loop
(bad)
repnz
xchg
lods
lods
sbb
cli
gs
jg
(bad)
jg
mov
icebp
sbb
cmp
inc
scas
outs
or
mov
jae
lahf
(bad)
(bad)
(bad)
dec
lods
das
xchg
icebp
loop
xchg
inc
and
jp
ja
les
(bad)
mov
push
cwde
sub
jne
or
ret
sti
retf
(bad)
(bad)
call
addr16
jae
call
mov
xor
or
jns
(bad)
(bad)
jmp
dec
test
sahf
sbb
dec
jbe
fwait
mov
jns
inc
xor
jecxz
jmp
xchg
dec
dec
inc
loop
xchg
push
push
cli
jmp
sub
mov
and
pusha
xchg
xchg
icebp
aaa
adc
sbb
movs
jecxz
or
test
sbb
sar
mov
imul
loope
xchg
xor
cld
jmp
mov
jbe
movs
add
ins
das
add
cmp
(bad)
(bad)
jnp
std
in
xchg
std
(bad)
mov
movs
movs
ja
xchg
or
data16
hlt
mov
(bad)
call
rcl
and
cmps
ja
lea
jb
jae
loop
xchg
imul
jo
in
push
jge
dec
rol
outs
and
test
in
or
test
outs
cmp
jmp
ret
cdq
pop
out
and
clc
call
inc
push
loopne
pop
xor
push
add
call
addr16
adc
shl
sti
push
adc
push
jl
popa
ins
pop
out
sub
inc
push
push
and
(bad)
jle
pop
xchg
movs
fistp
mul
and
push
inc
add
cs
jg
and
dec
(bad)
(bad)
inc
xor
sub
lock
xchg
add
(bad)
call
out
fld
add
fs
fs
lahf
dec
sbb
adc
aaa
mov
(bad)
jmp
lea
mov
int3
ins
jl
repz
adc
div
enter
clc
test
add
pop
sar
lock
js
ds
mov
pop
(bad)
mov
addr16
mov
lea
jmp
pop
cld
cmc
js
fdiv
mov
pop
aam
stos
push
and
popf
mov
jl
pop
pop
scas
outs
or
call
fcom
inc
add
jl
ficom
int3
dec
int
das
ror
xor
(bad)
(bad)
jmp
or
cmp
mov
mov
dec
aad
je
loope
js
shl
mov
jmp
push
jle
sbb
js
shl
(bad)
mov
push
pop
dec
and
jmp
mov
jne
inc
icebp
push
inc
(bad)
jo
leave
xchg
shl
lds
add
lods
pop
ss
xchg
fst
sub
pop
cmp
cld
(bad)
(bad)
jmp
das
or
cmps
sbb
sub
(bad)
lods
push
mov
nop
lods
js
mov
into
mov
inc
ss
ss
xor
pop
outs
dec
pusha
clc
(bad)
jmp
(bad)
cmps
out
call
jmp
sub
jnp
mov
scas
mov
push
mov
mov
popa
pop
push
jo
mov
mov
mov
cld
(bad)
es
cli
add
cdq
xchg
xor
push
sahf
mov
sub
add
call
fsub
(bad)
lods
cmp
movs
sub
test
repz
(bad)
(bad)
(bad)
dec
mov
stc
push
jmp
pop
repnz
fsub
out
into
push
pop
(bad)
lods
sub
std
test
(bad)
push
cmc
es
mov
sbb
je
mov
xchg
xlat
sub
add
pop
adc
(bad)
inc
and
xchg
popa
in
rcr
pop
iret
mov
jl
add
sub
sti
icebp
(bad)
(bad)
(bad)
jns
icebp
les
xchg
or
cli
mov
pop
retf
dec
mov
scas
sahf
(bad)
(bad)
(bad)
fbld
lahf
pop
std
push
inc
jecxz
dec
jmp
mov
push
aad
(bad)
(bad)
(bad)
jmp
sbb
jmp
aam
sbb
inc
add
pop
js
jb
in
pop
push
adc
jb
(bad)
(bad)
inc
pop
pop
stos
retf
add
jmp
aam
lock
jecxz
inc
inc
cld
mov
push
(bad)
(bad)
(bad)
(bad)
dec
cmps
cmp
out
push
int
xor
mov
lea
cmp
jbe
xchg
add
sub
(bad)
(bad)
(bad)
mov
leave
push
es
mov
and
gs
dec
movs
and
add
(bad)
(bad)
jg
dec
call
jne
call
inc
adc
and
inc
xchg
mov
or
cmps
mov
call
(bad)
jg
movs
add
inc
jmp
mov
fstp
jmp
inc
test
movs
inc
jmp
add
icebp
jo
mov
sub
pusha
jbe
(bad)
(bad)
(bad)
fxch
enter
and
cmp
enter
mov
mov
jne
cmps
pushw
or
lods
pop
movs
popf
pop
out
xchg
jno
into
out
sub
xchg
cli
pop
and
jae
push
dec
pushf
(bad)
call
sub
push
dec
scas
ds
xchg
lahf
mov
(bad)
xchg
lock
jno
lock
call
(bad)
cdq
fnstcw
xchg
mov
(bad)
mov
cmp
mov
cmp
imul
xchg
xchg
push
pop
or
call
jmp
stos
add
dec
and
jmp
xchg
jp
or
aam
lds
xchg
sub
jmp
jle
add
fld
sbb
sti
push
fld
xor
loopne
jmp
cli
sbb
xchg
(bad)
(bad)
(bad)
jmp
pop
dec
push
mov
mov
jae
lods
pop
push
not
xor
ins
sbb
push
pop
(bad)
out
cli
(bad)
cmp
leave
mul
push
pop
lds
hlt
pop
in
scas
xor
pop
mov
scas
(bad)
(bad)
(bad)
jmp
sti
ja
sbb
sbb
cld
cdq
push
popa
xor
scas
sti
stos
mov
(bad)
(bad)
cmp
in
fmul
mov
loope
dec
cmp
stos
cmps
test
loop
jmp
jae
dec
dec
or
(bad)
jmp
sub
push
int3
test
push
pop
sahf
mov
jae
lods
sub
pop
xchg
test
adc
mov
add
push
outs
cwde
mov
inc
(bad)
jg
stos
ret
popa
test
jmp
inc
mov
aaa
dec
pop
mov
or
test
lds
sbb
(bad)
(bad)
jmp
aaa
or
mov
pop
js
lods
(bad)
hlt
clc
lods
ss
movs
or
rcl
outs
xor
sar
scas
popa
test
mov
add
mov
pop
(bad)
dec
enter
arpl
arpl
and
xchg
jnp
scas
loopne
xor
jp
outs
repz
mov
call
xor
mov
aam
inc
mov
or
cmp
or
out
loope
mov
and
(bad)
push
add
fild
shl
sar
(bad)
jg
pop
nop
and
shl
pushf
pusha
leave
cmp
dec
jno
pop
dec
xor
mov
out
jg
dec
cmps
mov
(bad)
(bad)
call
pop
sbb
cmp
jno
mov
mov
lods
mov
cs
daa
stos
rol
jl
ret
(bad)
(bad)
(bad)
mov
test
sbb
add
jmp
push
cld
outs
dec
fs
xor
mov
push
(bad)
(bad)
jg
inc
daa
mov
mov
dec
dec
dec
in
in
dec
loop
call
mov
jns
cmp
add
mov
sub
inc
loope
(bad)
mov
push
xor
sbb
push
mov
lahf
scas
dec
imul
(bad)
(bad)
(bad)
jmp
xchg
mov
ror
jo
hlt
ins
jg
or
ja
xor
and
mov
popa
in
arpl
ins
cld
call
cmp
repz
lock
(bad)
adc
pop
(bad)
sbb
arpl
jmp
das
xchg
inc
pop
xor
frstor
out
arpl
gs
sbb
ret
xchg
dec
iret
in
ja
clc
(bad)
push
in
icebp
xchg
push
outs
neg
pop
sbb
push
mov
pushf
loop
xlat
(bad)
(bad)
(bad)
dec
aas
and
cwde
clc
sub
cwde
xchg
jno
xlat
cmc
stos
lods
inc
xor
or
neg
(bad)
mov
stc
jbe
(bad)
(bad)
inc
jl
sti
nop
jo
test
clc
mov
cs
popf
mov
test
push
cmp
pop
gs
jmp
cmp
sahf
fist
adc
sub
dec
dec
dec
and
xor
test
(bad)
(bad)
call
in
enter
sub
call
mov
inc
sbb
push
mov
pop
std
add
(bad)
(bad)
mov
xchg
mov
jmp
retf
pusha
mov
mov
mov
mov
(bad)
(bad)
(bad)
in
les
in
add
add
inc
dec
and
call
dec
sub
xor
mov
inc
fisttp
leave
and
(bad)
(bad)
(bad)
mov
mov
cdq
pop
mov
jnp
push
ror
push
imul
mov
and
sub
add
add
pop
push
jmp
sub
loope
(bad)
mov
fstp
sub
idiv
leave
dec
add
dec
lock
inc
std
adc
fcmovne
sub
mov
cs
(bad)
(bad)
(bad)
fcom
in
jae
push
mov
(bad)
pop
js
dec
or
jns
mov
sbb
dec
dec
adc
dec
or
sub
pop
or
pushf
sub
(bad)
cmps
inc
mov
mov
mov
mov
fld
push
and
rol
inc
(bad)
(bad)
push
(bad)
aas
nop
add
popf
out
retf
fwait
mov
jo
stos
jb
(bad)
jmp
rcl
rcl
jne
inc
jae
ja
popf
cmps
rol
(bad)
(bad)
call
push
ja
sub
cmp
cld
pusha
mov
jnp
in
outs
sbb
mov
dec
loopne
adc
(bad)
(bad)
push
ins
mov
dec
or
sbb
jae
add
and
cs
call
sbb
call
mov
mov
pop
loopne
fild
sbb
gs
stos
cmp
es
and
clc
(bad)
(bad)
call
jge
jnp
cmps
push
mov
movs
into
mov
dec
mov
mov
add
call
mov
add
inc
pop
ret
(bad)
(bad)
(bad)
jmp
out
xchg
and
jae
fs
jae
test
and
loopne
sti
(bad)
clc
scas
fmul
cmp
mov
mov
sub
(bad)
mov
cs
cli
shl
pop
xor
push
cmp
push
stc
xor
test
xor
xchg
and
push
or
dec
mov
retf
pop
jmp
fcmovbe
mov
mov
push
dec
ret
(bad)
(bad)
(bad)
(bad)
js
push
shr
aad
and
retf
fnstenv
enter
add
outs
mov
sub
int
lods
cmp
ins
icebp
and
adc
push
jbe
pop
ins
push
add
es
inc
out
ror
pushf
jbe
fistp
shr
xlat
dec
mov
pop
inc
cwde
add
and
loope
adc
sar
retf
push
adc
ss
(bad)
jmp
ins
inc
outs
into
xor
or
mov
push
clc
retf
test
icebp
adc
dec
adc
mov
lods
or
push
mov
jb
sub
add
or
jle
sar
mov
push
scas
loope
in
jo
xchg
push
mov
sub
pop
enter
xor
and
pop
(bad)
adc
ss
pop
jp
cld
(bad)
inc
retf
add
enter
jg
lea
xlat
cmps
mov
(bad)
call
pop
test
push
mov
ins
call
shl
jne
(bad)
(bad)
(bad)
dec
rcl
imul
lods
fwait
cmc
xor
mov
sbb
inc
or
push
pop
(bad)
out
dec
jb
jge
icebp
mov
fst
xor
(bad)
(bad)
jg
xchg
mov
push
push
jb
push
(bad)
sbb
les
add
(bad)
jmp
or
movsx
sbb
xor
mov
shr
or
loope
icebp
push
push
cmp
pop
icebp
(bad)
cmp
pop
nop
shr
cdq
pop
movs
and
sti
dec
xor
xchg
(bad)
jmp
jl
jns
xchg
push
add
icebp
jno
sbb
lock
int
daa
in
inc
mov
inc
pop
add
and
fs
bound
push
mov
sub
pop
cmc
(bad)
call
sub
call
jns
dec
sbb
add
(bad)
push
cli
aaa
out
fild
ret
test
ret
add
xor
cmp
cdq
or
cwde
sti
pop
bound
fisub
jmp
cmp
mov
xchg
rcr
popa
xchg
int3
push
movs
push
cmp
(bad)
jmp
cmp
sub
sbb
scas
mov
scas
ffreep
mov
and
inc
or
sub
(bad)
(bad)
(bad)
(bad)
jmp
sub
xchg
je
(bad)
ficomp
movs
idiv
je
adc
(bad)
(bad)
(bad)
dec
cmp
mov
lahf
dec
cmc
jne
push
scas
repz
rcr
dec
pop
sub
(bad)
adc
or
lahf
xchg
movs
test
adc
inc
or
in
clc
xor
sub
(bad)
(bad)
call
push
adc
test
adc
jnp
in
pop
and
mov
add
or
(bad)
dec
in
ds
pop
ja
adc
inc
xchg
in
hlt
adc
hlt
(bad)
dec
popa
push
mov
mov
pop
dec
imul
daa
jnp
(bad)
(bad)
jmp
loopne
or
test
fbld
test
push
pushf
push
mov
xchg
das
jns
out
repnz
push
mov
cmp
sub
cld
add
push
in
xchg
push
push
xchg
jne
test
cmp
stos
dec
icebp
call
xchg
(bad)
(bad)
(bad)
dec
out
jp
and
dec
in
mov
sbb
add
fidiv
(bad)
xor
popa
mov
add
ficomp
push
push
cmp
mov
(bad)
jmp
(bad)
cmp
sub
xor
adc
cmc
cmps
cmps
stc
push
ret
std
xor
mov
inc
and
cwde
stos
mov
xchg
mov
xchg
mov
(bad)
dec
cs
jns
test
popa
mov
fdiv
sub
pop
pop
mov
ins
push
adc
xor
mov
pop
pop
adc
cli
jmp
xor
ja
cmps
call
add
icebp
push
cli
rcl
mov
sub
sbb
push
clc
lds
fcom
jmp
xor
out
aam
test
dec
cmc
(bad)
mov
shr
mov
dec
xor
test
cmp
(bad)
(bad)
fucomip
(bad)
stc
out
sub
jne
rcr
test
xchg
xor
inc
imul
cs
(bad)
(bad)
(bad)
call
aam
push
jnp
xchg
xchg
jle
aad
nop
imul
ja
push
inc
sbb
out
sti
fsub
(bad)
das
mov
add
jmp
mov
fsubr
mov
push
in
adc
dec
out
test
adc
mov
inc
call
int
jmp
cmp
dec
(bad)
mov
inc
and
xchg
(bad)
xor
inc
dec
xor
addr16
(bad)
(bad)
jmp
ins
sahf
xchg
sub
rcr
adc
pop
adc
cdq
push
jbe
call
sbb
push
scas
pop
lods
ret
lahf
pop
movs
movs
sbb
(bad)
(bad)
(bad)
out
inc
fiadd
retf
jecxz
es
inc
sub
xchg
inc
jno
dec
add
retf
sub
leave
and
movs
lock
popa
jmp
(bad)
jmp
ja
out
dec
mov
xor
(bad)
or
dec
sub
(bad)
push
lea
into
fstp
xor
pop
ins
mov
dec
cmps
sar
(bad)
(bad)
ficom
pop
rcl
lds
xlat
mov
iret
loopne
sti
push
xchg
sub
fisttp
sbb
cmps
(bad)
and
(bad)
jg
or
and
xchg
cmp
imul
push
mov
scas
push
add
(bad)
(bad)
(bad)
jge
mov
cmc
and
sbb
pop
inc
loopne
sub
lods
in
mov
add
shl
jle
lods
push
sub
dec
fnsave
(bad)
(bad)
dec
fldenv
pop
adc
cmc
test
jne
loopne
dec
jae
sbb
jmp
comiss
idiv
jne
fst
retf
or
and
jae
js
lods
cmp
cdq
cmps
(bad)
aas
jecxz
(bad)
clc
mov
push
cmps
(bad)
call
popa
adc
dec
and
inc
cmp
jecxz
leave
pop
(bad)
pop
add
loope
(bad)
(bad)
out
mov
jl
push
mov
inc
pop
scas
jge
push
jbe
fisubr
loope
dec
data16
adc
pop
dec
push
and
adc
push
mov
add
movs
mov
sub
(bad)
(bad)
(bad)
jmp
mov
out
hlt
pop
sub
sbb
inc
neg
cmc
shr
repz
test
pusha
ins
daa
je
cmc
(bad)
(bad)
(bad)
call
push
leave
mov
loopne
repz
int
fnsave
out
push
push
gs
jb
dec
popa
inc
jp
ins
popf
adc
es
(bad)
(bad)
dec
or
in
mov
movs
shl
(bad)
in
cli
pop
es
dec
outs
ja
or
stos
jp
pusha
into
xchg
mov
cli
push
std
(bad)
(bad)
(bad)
inc
aaa
sub
nop
pop
outs
inc
out
push
adc
jnp
xor
or
retf
mov
jo
(bad)
(bad)
mov
scas
test
jne
movs
mov
mov
inc
xchg
inc
retf
mov
add
inc
cld
call
ja
push
outs
out
inc
xor
xor
cmp
movs
(bad)
(bad)
(bad)
call
dec
add
iret
jmp
repnz
mov
jo
div
mov
xchg
ror
inc
inc
clc
(bad)
(bad)
(bad)
aas
cli
mov
inc
xlat
dec
xchg
fs
rcr
or
jecxz
xor
adc
mov
mov
push
push
fs
(bad)
(bad)
push
mov
mov
test
stos
in
cld
mov
inc
shl
(bad)
(bad)
(bad)
call
iret
int3
rol
fs
push
fbstp
cdq
rcr
jae
jle
inc
mov
(bad)
(bad)
(bad)
jmp
adc
cmps
gs
fst
jne
outs
stos
cmc
mov
fdiv
xchg
(bad)
push
mov
(bad)
(bad)
(bad)
inc
rsm
xor
xor
cmp
push
gs
test
mov
(bad)
(bad)
dec
mov
jb
fnstsw
cwde
ffreep
aam
repz
xor
push
xchg
inc
sar
pop
jmp
lods
mov
jae
sbb
sub
lods
stc
mov
sbb
sbb
(bad)
(bad)
(bad)
inc
mov
mov
add
or
push
rcr
pop
xchg
xchg
(bad)
(bad)
(bad)
(bad)
cmp
pop
or
or
repnz
sbb
mov
mov
xor
(bad)
(bad)
js
adc
mov
dec
enter
xor
mov
(bad)
(bad)
fild
cmps
push
sbb
ficomp
movs
adc
popf
pop
xor
inc
inc
pushf
dec
pop
(bad)
jmp
mov
sub
sub
xor
and
jne
jo
(bad)
rol
leave
push
jecxz
sbb
clc
jg
mov
pushf
pop
xor
out
jmp
adc
imul
push
add
push
pop
adc
push
(bad)
mov
sar
pop
test
hlt
pop
add
push
inc
push
mov
or
push
xor
(bad)
dec
jmp
dec
pop
mov
jbe
jl
or
ret
(bad)
call
xlat
pop
sbb
inc
out
fs
imul
cmp
int
cmp
lock
mov
fcmove
fisubr
outs
in
mov
push
mov
loop
jmp
push
ins
and
jno
out
out
mov
nop
loopne
(bad)
(bad)
(bad)
jmp
lds
mov
outs
sbb
out
dec
outs
xlat
sbb
aad
jbe
xchg
(bad)
(bad)
dec
mov
inc
int3
jl
scas
sub
stos
add
adc
neg
in
ss
xor
xor
cmp
xchg
stos
push
jbe
pop
popf
and
and
sahf
push
push
popa
add
push
sub
dec
(bad)
pop
inc
aam
test
sub
lods
and
(bad)
cdq
dec
dec
mov
in
test
(bad)
push
bound
int3
push
jnp
add
xchg
stos
jmp
hlt
dec
xlat
xor
cmp
or
mov
mov
xor
dec
ja
mov
(bad)
(bad)
(bad)
jmp
loope
call
jg
push
mov
into
mov
xor
call
and
add
dec
test
push
enter
dec
inc
mov
fstp
clc
adc
jnp
xchg
(bad)
frstor
mov
mov
pop
(bad)
xlat
push
or
sub
fucomip
cdq
mov
call
mov
out
xor
add
push
lods
inc
(bad)
mov
cmp
clc
(bad)
push
sub
jp
cld
cld
(bad)
xor
jns
inc
or
jmp
je
in
ins
aad
lds
data16
mov
popf
scas
xchg
xor
cmp
pop
rol
adc
inc
retf
cdq
mov
ficomp
push
(bad)
(bad)
(bad)
mov
bound
pop
cli
sub
(bad)
(bad)
cmp
sub
dec
jecxz
add
psubd
fimul
(bad)
(bad)
(bad)
call
cmp
xchg
fimul
pop
leave
cmp
ins
jle
jl
popf
daa
jne
stc
mov
mov
addr16
mov
enter
pop
sub
mov
cmp
fadd
or
mov
dec
icebp
addr16
std
jmp
sub
mov
cwde
mov
jmp
or
scas
les
sbb
lahf
xor
jmp
add
fs
pop
cs
hlt
jmp
loopne
das
out
push
mov
rcr
(bad)
outs
(bad)
(bad)
(bad)
fbstp
inc
fsubr
adc
lds
shr
mov
ret
(bad)
(bad)
mov
les
js
fs
xchg
push
out
xchg
out
inc
lods
das
dec
cld
cmps
jecxz
repz
xchg
adc
mov
imul
(bad)
(bad)
(bad)
dec
movs
stos
pop
inc
sti
dec
fstp
aad
shufps
cs
(bad)
xor
mov
fiadd
fnsave
sub
mov
(bad)
(bad)
(bad)
inc
sbb
adc
scas
mov
out
add
(bad)
das
mov
fstp
adc
(bad)
(bad)
dec
jns
scas
or
fstp
ret
into
xor
int
pop
rol
cmp
mov
lods
(bad)
(bad)
call
out
cmp
xor
cmp
inc
ret
xchg
jp
inc
cwde
pop
mov
fild
cdq
push
(bad)
(bad)
call
(bad)
test
dec
scas
out
xor
fcom
xchg
xchg
outs
jecxz
inc
pop
or
fidivr
(bad)
jmp
call
dec
fmul
pop
xchg
repnz
xchg
cmp
femms
stos
mov
js
(bad)
(bad)
(bad)
call
in
int
shr
retf
js
retf
lock
hlt
mov
pop
xchg
shr
mov
gs
mov
div
jge
mov
jl
mov
add
hlt
jae
sub
push
ret
adc
and
jmp
clc
mov
loopne
dec
cli
adc
mov
mov
addr16
leave
outs
xchg
shr
in
das
xchg
ret
xchg
fst
in
mov
push
sti
ins
scas
xchg
mov
movs
(bad)
(bad)
(bad)
(bad)
cmp
scas
popf
(bad)
arpl
sub
in
push
pop
xchg
mov
add
push
mov
(bad)
(bad)
call
leave
cmc
xchg
hlt
daa
jmp
gs
ss
repnz
push
sbb
sub
add
loopne
cld
call
in
sbb
push
push
jns
sti
cmc
mov
xor
in
cmp
and
jge
nop
pop
lds
cld
movs
jge
(bad)
rol
mov
or
push
out
push
cmp
jmp
pop
sbb
imul
pop
mov
mov
pop
add
pop
or
addr16
lods
jnp
jg
adc
outs
sub
outs
inc
(bad)
stc
(bad)
(bad)
(bad)
call
fstp
je
fiadd
adc
rol
pop
in
xlat
je
cwde
mov
(bad)
inc
aas
rol
jo
pushf
ins
jmp
xchg
pop
cmp
je
movs
rcl
sbb
std
call
test
fdivr
loop
in
inc
popf
mov
(bad)
out
jl
or
inc
lea
inc
sub
xchg
jecxz
pop
(bad)
(bad)
jmp
mov
imul
mov
xchg
and
ins
mov
in
mov
dec
es
call
xor
mov
test
movs
mov
(bad)
dec
scas
clc
(bad)
jmp
and
iret
ja
push
fwait
stos
pusha
mov
hlt
push
and
out
xchg
sbb
lock
inc
ss
(bad)
fdivr
rcr
(bad)
pop
nop
sub
ror
mov
adc
and
out
(bad)
cmps
mov
imul
cdq
mov
lods
and
pop
and
lea
xchg
mov
adc
test
fbstp
data16
mov
pop
hlt
adc
push
pop
push
aad
icebp
les
sar
push
jno
cmp
(bad)
dec
xchg
les
and
mov
jo
movs
adc
loop
(bad)
lock
(bad)
(bad)
fcomi
aam
movs
inc
bound
movs
cld
push
sar
rcl
data16
mov
cmp
test
pop
cmp
(bad)
(bad)
dec
pushf
jp
pusha
mov
shr
in
dec
and
lods
pop
inc
dec
mov
outs
fmul
(bad)
(bad)
(bad)
dec
in
cmc
ret
in
sti
mov
sub
out
mov
loopne
(bad)
fwait
jg
js
test
push
inc
sub
das
clc
(bad)
push
mul
sbb
jle
(bad)
(bad)
jg
cmp
js
cwde
mov
push
cmp
in
sub
ja
(bad)
in
mov
jle
xchg
push
cmc
stc
out
add
inc
mov
sbb
and
push
dec
mov
ds
mov
fs
pushf
mov
dec
dec
jae
mov
pop
add
mov
cld
(bad)
(bad)
(bad)
jnp
fldenv
inc
mov
dec
jecxz
or
dec
mov
mov
xchg
add
out
bound
push
(bad)
(bad)
(bad)
(bad)
out
cmp
fist
cs
fidiv
cmps
aaa
and
cmp
call
xlat
adc
adc
ds
rcr
loop
push
mov
(bad)
(bad)
(bad)
mov
pop
ror
sub
lock
add
arpl
fld1
clc
cmps
add
or
movs
mov
call
cdq
mov
(bad)
cs
mov
scas
dec
mov
mov
mov
inc
adc
addr16
cli
(bad)
jg
push
imul
aad
inc
adc
repz
call
cwde
xchg
xchg
test
mov
xchg
(bad)
(bad)
(bad)
sti
loopne
mov
sbb
dec
and
push
cmp
fwait
sbb
jno
dec
fild
jle
scas
jno
mov
xchg
lods
jmp
div
(bad)
inc
into
dec
cmp
shr
xor
mov
mov
(bad)
(bad)
jmp
fidivr
pushf
jbe
adc
cmp
lods
jle
and
fcom
pop
sub
mov
cmc
add
test
aas
mov
mov
pushf
pop
mov
add
adc
fidivr
and
adc
inc
sbb
xchg
push
push
dec
push
lods
out
or
sbb
ret
inc
and
rol
jbe
in
out
mov
cmp
jl
fstp
xlat
fisub
dec
(bad)
dec
(bad)
pop
aas
dec
sub
push
sub
inc
addr16
jp
cli
dec
mov
jmp
xchg
fcomip
mov
es
sti
inc
adc
fs
xlat
or
shl
out
pusha
mov
adc
add
(bad)
call
sub
scas
push
fld
mov
inc
mov
(bad)
call
jle
xor
scas
or
cmp
sti
leave
jmp
inc
and
mov
dec
push
jg
and
pop
push
mov
cmovno
movs
mov
aas
jns
pop
push
mov
(bad)
mov
jmp
cld
or
xor
or
pop
lock
and
ret
or
and
jae
das
jmp
push
mov
(bad)
(bad)
push
cwde
pop
adc
ret
mov
rol
int
dec
(bad)
fcom
addr16
push
sub
adc
arpl
fst
repz
mov
adc
inc
std
call
push
adc
sbb
fld
ja
push
jge
and
stos
dec
(bad)
pushf
ret
mov
and
fwait
jle
imul
mov
enter
mov
lods
popa
js
popa
add
das
jbe
aaa
loopne
mov
push
jl
ds
xchg
stos
cld
(bad)
outs
icebp
push
fwait
sub
mov
(bad)
dec
push
inc
lods
imul
iret
sub
cmp
cmp
(bad)
(bad)
inc
test
jle
hlt
arpl
rcl
fisubr
arpl
jle
dec
repz
inc
push
sbb
enter
repz
push
push
loope
out
clc
scas
push
inc
pop
pop
or
dec
shr
sbb
(bad)
(bad)
mov
cmp
imul
push
mov
push
ds
jo
sub
(bad)
call
inc
xchg
cli
push
sub
std
nop
mov
push
mov
outs
mov
dec
(bad)
(bad)
dec
xor
mov
fdiv
bound
enter
jge
popf
out
adc
and
sub
push
retf
ins
(bad)
lea
out
clc
(bad)
dec
(bad)
cs
loope
inc
ret
mov
cmc
call
outs
cmp
or
sbb
pop
push
xchg
cmp
cmp
mov
adc
xor
adc
movs
xchg
js
aaa
sbb
inc
mov
(bad)
(bad)
push
stos
cmp
jae
movs
test
jle
jmp
int3
mov
(bad)
call
gs
and
outs
pop
retf
xchg
sub
cdq
xor
sub
pushf
xor
aas
hlt
(bad)
jmp
les
add
pop
mov
jo
pop
mov
mov
inc
sbb
adc
retf
lock
loope
cmp
(bad)
inc
lock
sub
inc
sar
dec
jg
in
jno
or
sahf
mov
mov
data16
and
outs
push
(bad)
inc
cmp
xor
clc
push
scas
pop
xor
mov
ins
push
nop
cmp
xor
ins
mov
dec
lods
ss
into
loope
xor
fisttp
js
or
stos
dec
jbe
(bad)
mov
lods
and
add
pop
mov
(bad)
call
jecxz
xlat
mov
adc
inc
sub
mov
mov
aaa
jb
ins
loopne
call
mov
dec
int
add
mov
mov
mov
ret
fcomp
jg
mov
test
not
(bad)
(bad)
inc
cmps
dec
adc
in
cmp
jnp
fisttp
push
call
mov
mov
jg
pusha
push
mov
not
dec
dec
ins
add
xchg
pop
fld
dec
mov
push
cmp
out
pop
or
(bad)
(bad)
js
fmul
ss
sbb
ficom
lods
call
sti
jo
cs
stos
dec
shl
(bad)
(bad)
(bad)
(bad)
jmp
push
stos
cmp
daa
mov
jg
sub
outs
xor
inc
xor
jbe
ins
or
(bad)
data16
(bad)
(bad)
jg
sub
(bad)
jl
shl
pop
into
xor
fdiv
lock
fcmovnbe
test
out
add
outs
pop
ds
adc
js
xchg
add
pop
mov
mov
ror
adc
mov
jle
les
loopne
loop
cld
clc
mov
xor
(bad)
(bad)
push
ret
mov
in
or
aad
into
jmp
in
into
pop
arpl
or
push
mov
rcr
jmp
push
std
outs
push
scas
lock
fidivr
fnstcw
jno
fs
retf
push
cmp
loop
gs
fcomip
(bad)
(bad)
(bad)
pop
scas
xlat
jp
dec
xlat
comiss
xchg
test
sub
mov
loope
sbb
mov
cmp
(bad)
into
adc
jbe
dec
in
cli
(bad)
(bad)
(bad)
push
pop
out
mov
rcl
sub
or
pusha
inc
rol
jle
xor
mov
fs
adc
dec
mov
inc
xor
mov
call
jp
(bad)
jg
mov
test
sar
jg
cmp
inc
mov
(bad)
(bad)
jmp
mov
fild
and
lds
push
lds
inc
jb
mov
mov
ret
outs
push
cmps
inc
(bad)
ja
cwde
retf
pop
xchg
lock
jno
jl
lods
pusha
mov
scas
add
loopne
jmp
pop
cmp
aaa
xor
pop
loop
aaa
test
dec
cmp
out
std
(bad)
(bad)
jmp
scas
pop
jg
add
aaa
shr
dec
leave
push
aas
(bad)
(bad)
fild
jecxz
sub
sub
mov
push
test
(bad)
mov
adc
int
push
repnz
(bad)
jmp
adc
outs
cwde
shr
lods
push
push
and
pop
fld1
xchg
neg
xor
fwait
push
xchg
retf
mov
retf
mov
xchg
(bad)
call
daa
and
sti
mov
and
stos
int3
(bad)
(bad)
(bad)
jg
ds
jge
push
mov
or
loopne
mov
jmp
mov
(bad)
(bad)
mov
lock
push
scas
fsub
sub
dec
pusha
retf
sbb
jnp
xor
jns
(bad)
(bad)
(bad)
jmp
mov
pop
jmp
inc
or
sar
sbb
arpl
jmp
add
pop
mov
(bad)
(bad)
(bad)
inc
aam
push
out
sub
mov
adc
fiadd
das
cmps
in
stos
pop
jmp
call
xlat
or
adc
xchg
sbb
dec
arpl
pop
and
xchg
jno
and
sub
xchg
xor
call
std
cs
jmp
pop
(bad)
hlt
jp
adc
ror
(bad)
call
fst
sub
test
dec
shr
or
(bad)
inc
mov
out
jp
or
call
ret
(bad)
jg
or
inc
pusha
repz
mov
test
in
(bad)
(bad)
mov
in
lods
inc
bound
fdiv
mov
aam
push
jb
dec
(bad)
(bad)
(bad)
call
or
jecxz
pop
pop
das
mov
mov
mov
sub
imul
(bad)
dec
fstp
push
(bad)
cmp
xchg
inc
daa
mov
in
(bad)
out
cli
mov
nop
retf
fbstp
adc
mov
adc
fistp
int
(bad)
(bad)
jmp
or
into
in
or
retf
add
aas
jne
(bad)
repnz
cmc
sub
nop
inc
cmp
retf
(bad)
call
fwait
or
(bad)
cmp
mov
mov
test
sahf
out
fimul
daa
adc
clc
add
std
dec
(bad)
mov
xor
push
int3
xor
(bad)
movs
sbb
in
xchg
lea
sub
xor
mov
sub
lahf
pop
and
enter
std
(bad)
cli
(bad)
jmp
mov
test
mov
ret
aam
icebp
inc
xor
add
call
mov
sub
lock
outs
sbb
(bad)
(bad)
(bad)
mov
mov
fwait
movs
pushf
mov
pop
jle
jecxz
jg
(bad)
sub
xor
xchg
cmc
out
jmp
icebp
adc
test
mov
dec
jl
cmp
hlt
sub
out
adc
(bad)
(bad)
(bad)
(bad)
mov
push
or
sbb
mov
pop
call
or
dec
pop
push
(bad)
(bad)
jmp
mov
cwde
pop
(bad)
retf
mov
pop
mov
dec
sub
add
adc
jno
(bad)
stos
sbb
fst
lods
xlat
arpl
cli
sbb
jg
(bad)
jns
sti
fbld
lock
add
(bad)
push
add
dec
inc
stos
xor
adc
(bad)
fcomip
mov
popa
lock
and
imul
sbb
inc
cmp
(bad)
jmp
imul
dec
mov
jno
mov
xchg
pushf
fdiv
jp
stc
sahf
push
fnstcw
xchg
hlt
jmp
sbb
cwde
ins
scas
ficomp
test
cmp
pop
out
mov
lds
call
inc
pop
pop
cwde
ficom
out
mov
imul
(bad)
(bad)
js
cmps
and
adc
retf
mov
cmp
jnp
lods
(bad)
jmp
clc
mov
out
(bad)
xchg
setnp
sbb
mov
popf
stos
not
pop
sub
cmps
xor
jb
stos
lahf
out
xor
jo
add
loope
mov
std
popa
(bad)
imul
(bad)
(bad)
call
and
mov
fs
mov
inc
inc
ret
add
and
outs
mov
xchg
xchg
or
jg
mov
adc
iret
add
ret
cli
mov
lods
imul
or
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmp
scas
cmp
stos
and
js
rcl
sbb
jp
loop
mov
(bad)
push
or
or
clc
jmp
jns
cmp
lock
fwait
ja
and
arpl
(bad)
jmp
pop
push
xchg
jnp
inc
mov
sar
call
imul
pop
sar
and
test
popa
(bad)
call
cmps
adc
int
test
add
pop
and
call
push
lods
mov
lods
pop
fsub
je
dec
and
jp
and
(bad)
(bad)
(bad)
dec
ins
jne
pop
out
add
(bad)
jmp
inc
lods
jb
dec
outs
fnsave
dec
mov
fnstsw
sbb
fisub
(bad)
jp
mov
cdq
add
mov
(bad)
jmp
cwde
or
movs
jp
aas
or
mov
outs
bound
rol
lds
shl
add
scas
xchg
adc
jmp
and
push
add
iret
mov
test
std
mov
sbb
sub
(bad)
mov
sub
test
jno
outs
ror
ret
sbb
cmp
imul
mov
stos
and
jno
ret
ins
sbb
sub
dec
outs
adc
std
push
sbb
movs
popa
(bad)
and
jle
(bad)
dec
sub
inc
xor
rcr
rol
push
add
inc
aam
mov
dec
push
out
stos
cmp
data16
rcl
or
loopne
push
and
push
rol
jb
sbb
sub
mov
or
or
out
jge
push
mov
out
(bad)
aaa
pop
out
pusha
fnstenv
dec
pop
outs
adc
add
call
push
push
rcl
ds
icebp
lahf
push
or
sub
mov
addr16
test
icebp
inc
cld
sbb
stc
jbe
xchg
call
dec
push
cmp
sbb
jne
sti
or
adc
dec
jb
push
lods
jb
pop
(bad)
jae
ds
mov
inc
popa
call
ret
mov
jp
mov
sar
push
shl
jg
and
ja
cwde
and
cld
mov
dec
fsubr
and
es
outs
pop
cwde
(bad)
jmp
dec
(bad)
jle
cld
or
sub
cli
and
push
mov
pop
test
cmp
or
lahf
fwait
imul
imul
mov
cwde
jnp
inc
test
out
data16
push
(bad)
clc
jle
(bad)
(bad)
(bad)
(bad)
push
mov
fadd
int
push
cdq
loope
hlt
inc
mov
outs
jmp
movs
aam
sar
pop
push
sbb
popa
mov
pop
mov
xchg
mov
sbb
(bad)
(bad)
(bad)
(bad)
in
pop
es
cmp
cmc
je
rcr
clc
call
xchg
jmp
jmp
aaa
iret
jmp
mov
lock
in
ins
jecxz
mov
pop
sbb
into
push
sub
jnp
repz
aam
loopne
(bad)
(bad)
jmp
sti
jns
fwait
mov
arpl
lods
mov
and
das
xor
or
(bad)
(bad)
jmp
mov
or
ret
push
add
fisubr
or
test
fsubp
mov
das
clc
(bad)
push
xchg
mov
fild
arpl
xchg
jmp
repz
(bad)
(bad)
inc
ret
cs
jns
mov
and
ret
push
push
aaa
(bad)
out
pop
inc
and
enter
sar
and
mov
lods
mov
call
mov
push
xchg
cdq
ds
test
bound
(bad)
(bad)
(bad)
mov
sbb
fcmovb
(bad)
fld
stos
js
adc
ds
mov
dec
sbb
xchg
mov
dec
push
adc
test
sub
in
mov
(bad)
jmp
mov
jp
mov
scas
imul
mov
push
(bad)
cmp
xor
scas
jb
inc
pop
out
push
loopne
call
pushf
shr
dec
clc
mov
(bad)
(bad)
(bad)
dec
mov
enter
sub
rcl
pop
push
fmul
fidivr
push
inc
mov
enter
ins
bound
enter
scas
popf
fsub
loope
(bad)
(bad)
(bad)
jmp
jl
jl
xchg
cli
cli
loope
xchg
or
imul
dec
retf
adc
cmp
mov
sub
aad
jb
in
or
fld
jnp
inc
test
jne
jmp
stc
mov
cli
in
jnp
and
push
mov
and
pop
xor
pop
add
(bad)
(bad)
mov
(bad)
daa
jb
cmp
mov
mov
mul
test
xor
mov
cmp
pop
fsubr
pop
jae
jge
data16
xchg
outs
test
loope
jmp
add
scas
and
or
loopne
(bad)
sbb
(bad)
push
add
(bad)
(bad)
mov
jns
std
in
dec
cmp
and
mov
(bad)
call
enter
mov
sahf
cmp
push
shl
dec
jge
enter
(bad)
xchg
out
cmp
(bad)
(bad)
call
jmp
xor
xchg
jno
mov
push
nop
into
popf
jle
aam
mov
jnp
(bad)
mov
(bad)
pop
adc
adc
imul
rcl
xor
sbb
dec
std
pop
neg
int
mov
es
cmc
sub
in
inc
in
aad
data16
fcom
mov
pop
lods
rcl
mov
ins
lods
(bad)
(bad)
dec
out
jp
xchg
pop
inc
arpl
or
mov
add
in
cmps
movs
mov
pop
jp
mov
hlt
rcl
(bad)
jmp
(bad)
std
outs
sbb
cmc
inc
aam
bound
sahf
das
int
jns
dec
and
ds
call
in
out
add
jne
call
ja
push
mov
call
adc
stc
add
cmp
dec
inc
cmp
mov
inc
call
enter
loope
out
inc
mov
rcl
stc
cmp
mov
push
or
cmp
xchg
sbb
mov
pop
mov
sbb
push
cmps
cmp
jg
add
inc
mov
int3
repnz
mov
adc
(bad)
(bad)
(bad)
in
jle
cmps
lds
push
mov
fs
nop
jmp
dec
mov
jl
push
dec
mov
or
cmps
and
stos
push
ja
jmp
shl
aas
inc
stos
push
xlat
out
cwde
addr16
jmp
ret
adc
(bad)
(bad)
inc
out
lock
mov
loop
imul
xlat
lods
mov
in
sub
pusha
inc
(bad)
(bad)
(bad)
jmp
xchg
or
add
push
jp
movs
push
xchg
cmps
push
bound
dec
ds
or
(bad)
(bad)
(bad)
dec
sbb
jg
iret
sti
stc
loope
jecxz
push
or
add
pop
test
dec
and
sbb
mov
(bad)
(bad)
jmp
cmp
sub
data16
fldcw
jae
jne
sub
jl
inc
mov
clc
push
pusha
scas
sahf
scas
iret
ret
daa
jno
loop
fbstp
rcr
push
jbe
int3
hlt
addr16
jmp
mov
es
shl
(bad)
(bad)
(bad)
(bad)
cmp
xchg
inc
adc
xchg
sub
and
adc
jl
mov
jg
leave
je
inc
nop
sbb
cmp
cmp
aam
and
xor
cmps
lods
mov
sahf
sbb
inc
jnp
push
xchg
or
(bad)
(bad)
jg
jno
sbb
adc
inc
mov
mov
sahf
hlt
mov
pop
xor
(bad)
call
stos
inc
int3
(bad)
out
xchg
push
enter
es
cmp
sub
xchg
mov
or
(bad)
jmp
jnp
retf
ret
mov
inc
call
jg
adc
or
push
sub
daa
xchg
push
jge
mov
jmp
(bad)
pusha
sbb
xor
adc
jle
jbe
or
jne
xor
xchg
out
mov
cmp
in
and
mov
ins
int
(bad)
(bad)
(bad)
mov
or
pusha
in
and
adc
icebp
mov
sub
mov
dec
(bad)
(bad)
(bad)
(bad)
cmp
sahf
mov
iret
xor
or
pop
jmp
jnp
mov
imul
inc
mov
cmp
pushf
out
xor
test
dec
adc
mov
scas
icebp
cwde
dec
ret
in
shl
xchg
(bad)
(bad)
(bad)
dec
(bad)
sub
sbb
out
mov
inc
sub
bound
les
nop
inc
push
(bad)
(bad)
(bad)
dec
and
test
leave
mov
mov
inc
call
inc
clc
(bad)
(bad)
jmp
xor
xchg
pop
or
mul
out
sub
xlat
xchg
mov
cmp
retf
dec
adc
sbb
dec
(bad)
call
mov
ins
fild
mov
jmp
fnstenv
jb
ficomp
ins
sahf
jp
jns
imul
mov
jns
sbb
ret
ja
or
ret
or
xlat
(bad)
(bad)
fcomip
fwait
(bad)
adc
ss
mov
cmps
push
cmp
sbb
clc
(bad)
(bad)
(bad)
jmp
les
arpl
push
mov
bnd
inc
imul
aaa
add
ret
in
pop
lock
xchg
mov
sbb
dec
adc
xchg
cs
adc
scas
and
(bad)
(bad)
(bad)
cld
fcmovne
cdq
or
inc
dec
int
scas
add
push
out
jg
cld
fs
mov
aaa
jns
add
(bad)
inc
fscale
inc
aas
jno
push
mov
popf
adc
sub
push
gs
dec
adc
inc
sbb
ss
sub
scas
pop
dec
fsub
cli
pop
pop
stos
dec
cld
(bad)
(bad)
(bad)
(bad)
jl
popa
sar
and
cwde
mov
cmps
sbb
sar
mov
call
xor
mov
jge
test
jl
mov
es
cmp
std
aaa
sub
mov
jmp
pop
mov
in
mov
pop
cld
sub
inc
pop
mov
fs
stos
les
pop
retf
inc
mov
push
lds
ins
mov
push
ret
scas
xchg
add
ficomp
call
(bad)
call
fsub
imul
inc
inc
test
sti
(bad)
fadd
loope
xor
cmp
xrstors
mov
or
xor
(bad)
out
and
faddp
mov
mov
add
pop
mov
add
cld
jle
sar
outs
fs
adc
rcl
(bad)
(bad)
inc
int
arpl
dec
fstp
mov
cmp
mov
ins
mov
sbb
dec
and
pop
sub
jmp
push
adc
pop
icebp
mov
dec
or
adc
movs
ins
inc
loop
clc
(bad)
(bad)
(bad)
jmp
mov
lahf
movs
jmp
jl
jns
fwait
mov
pushf
push
dec
(bad)
mov
pushf
mov
sub
pop
inc
cli
sar
adc
div
rcl
xor
js
adc
add
mov
xchg
rep
jno
inc
test
push
mov
jmp
clc
jmp
cmp
mov
xchg
int
nop
xchg
jge
fcmovu
jns
jo
retf
sub
mov
add
test
jno
mov
loopne
and
push
add
ror
push
or
fwait
and
mov
cmp
pop
inc
pop
rcr
xchg
mov
popf
loope
loopne
aas
fdivr
mov
inc
push
leave
and
lock
loop
ror
or
xchg
iret
or
mov
xchg
or
cmp
aas
pop
sub
add
jle
sub
pop
outs
jg
call
push
mov
jbe
arpl
jne
jb
lods
enter
and
outs
lods
mov
movs
mov
mov
scas
cmc
mov
inc
mov
pop
stos
inc
mov
sbb
call
jp
pop
sbb
nop
not
xchg
mov
mov
sti
imul
mov
sub
sbb
pop
xor
xchg
addr16
popf
sti
jg
dec
cmp
call
cmp
pop
dec
mov
(bad)
(bad)
(bad)
jg
lods
fidivr
rol
lahf
stos
addr16
hlt
add
inc
lods
inc
aaa
mov
hlt
xor
jmp
ror
sbb
test
mov
sbb
(bad)
jg
fiadd
test
mov
ffree
push
sbb
jg
pop
add
mov
sti
cmp
in
mov
bnd
dec
movs
sub
popf
cmp
(bad)
push
sbb
and
fistp
das
test
leave
lock
inc
icebp
pusha
scas
test
(bad)
(bad)
call
sahf
mov
mov
call
(bad)
retf
rcl
push
cwde
fmul
and
dec
call
scas
cmps
pop
and
in
(bad)
(bad)
(bad)
(bad)
dec
lock
push
xchg
lahf
mov
retf
cli
sub
mov
xor
outs
add
loopne
sbb
xchg
dec
das
xchg
(bad)
dec
(bad)
mov
mov
div
pop
cs
cmps
loop
scas
pop
and
cmc
(bad)
jmp
xchg
sub
pop
call
data16
pop
out
(bad)
(bad)
mov
retf
fdivr
xor
adc
in
lds
mov
nop
jns
rol
cmc
stos
jno
pop
(bad)
(bad)
(bad)
jmp
arpl
sub
pop
mov
pop
push
outs
mov
cwde
iret
fistp
(bad)
(bad)
inc
mov
sub
push
dec
leave
xor
fldenv
lods
ins
mov
xchg
xor
or
stos
lods
call
xchg
jl
jno
fist
cld
call
mov
add
lods
repnz
ins
push
inc
and
data16
es
(bad)
(bad)
(bad)
inc
cwde
and
sub
push
das
(bad)
pop
dec
mov
xor
pop
or
call
cld
mov
or
jne
retf
mov
pop
rcl
dec
push
and
sbb
(bad)
(bad)
call
ss
imul
call
pop
and
fild
or
jg
or
or
ds
xor
dec
(bad)
(bad)
(bad)
jmp
cwde
mov
loop
fadd
xor
sub
sbb
(bad)
push
jecxz
stos
xchg
push
fwait
lea
cmp
and
(bad)
jmp
into
je
movs
sub
scas
fisttp
inc
jbe
popf
out
pop
gs
(bad)
(bad)
inc
js
sti
pop
lahf
jne
sahf
sbb
out
fldenv
das
jp
pusha
mov
push
and
mov
mov
pop
shl
jp
outs
cwde
lods
adc
lds
jbe
movs
inc
pop
sbb
(bad)
aaa
std
ja
shl
ins
pop
xchg
mov
dec
mov
test
pop
clc
add
mov
(bad)
pop
hlt
bound
gs
dec
sub
(bad)
adc
cld
(bad)
inc
cmps
scas
int
sti
fsubrp
movs
stos
ldmxcsr
(bad)
aas
mov
adc
sar
cli
(bad)
jmp
mov
stos
cmp
xlat
xchg
dec
push
lds
mov
xor
data16
push
dec
(bad)
(bad)
(bad)
dec
cmp
fld
mov
xlat
mov
cmps
and
and
push
(bad)
(bad)
(bad)
call
fisttp
pop
int
ret
cmp
lahf
int3
adc
ja
(bad)
aad
fbstp
lods
sbb
mov
(bad)
(bad)
push
shr
push
xor
push
mov
pop
data16
fwait
sti
outs
adc
jbe
(bad)
push
(bad)
fmul
loope
cdq
xchg
xchg
jge
test
ins
pop
popa
fsubr
loopne
cmc
jg
mov
mov
mov
out
mov
mov
fwait
in
add
(bad)
(bad)
(bad)
mov
je
adc
call
mov
nop
(bad)
jmp
mov
(bad)
(bad)
jl
loop
xlat
jle
iret
cmp
pop
mov
sbb
rol
push
mov
fsubr
stos
xor
repnz
ja
mov
mov
es
jmp
test
add
add
movs
pop
sar
(bad)
jg
cli
adc
sahf
enter
jmp
(bad)
mov
mov
lock
das
dec
(bad)
mov
add
jns
es
jo
cld
(bad)
jg
xor
adc
xor
inc
adc
add
(bad)
(bad)
push
inc
jg
or
(bad)
in
movs
mov
sub
xchg
movs
imul
out
cli
fwait
(bad)
mov
xor
mov
out
js
stos
add
and
ja
call
gs
xor
test
or
ds
jnp
jae
sbb
push
xchg
imul
push
test
jl
std
mov
int
and
lahf
mov
(bad)
(bad)
fndisi(8087
(bad)
mov
adc
aad
pop
jns
scas
aaa
sbb
and
pop
retf
(bad)
(bad)
dec
adc
enter
sbb
push
sub
dec
mov
push
xchg
stos
inc
mov
in
outs
(bad)
(bad)
(bad)
(bad)
mov
movs
adc
dec
daa
mov
inc
mov
in
clc
pop
aam
retf
(bad)
(bad)
(bad)
in
in
ret
mov
xor
shl
cmps
les
aaa
test
mov
sbb
call
(bad)
(bad)
(bad)
dec
clc
fmul
xchg
aad
mov
push
push
test
pop
jge
push
adc
(bad)
(bad)
call
shl
mov
int
mov
mov
adc
or
mov
lods
into
dec
(bad)
(bad)
dec
inc
jle
popf
push
aaa
faddp
sub
ins
call
fild
xchg
(bad)
mov
add
fcos
add
cmp
(bad)
(bad)
jmp
es
aam
push
push
add
test
(bad)
call
jp
arpl
sbb
fs
fwait
or
nop
and
or
sub
push
xchg
cli
mov
ins
xchg
popa
mov
jl
das
cmp
ss
sbb
ja
mov
xor
popa
jno
call
or
push
pusha
cmp
cdq
and
clc
(bad)
(bad)
push
add
test
pop
mov
call
and
push
(bad)
cmp
push
icebp
add
pop
inc
test
loop
(bad)
(bad)
(bad)
mov
and
and
jb
and
movs
test
dec
xlat
jns
cli
mov
(bad)
(bad)
jmp
or
mov
xor
add
in
pushf
loopne
addr16
inc
lock
(bad)
mov
hlt
jmp
jnp
xchg
pop
nop
aaa
xor
inc
cmps
das
cli
inc
add
adc
sbb
stos
mov
xchg
ror
ins
(bad)
(bad)
(bad)
dec
add
sub
or
push
jne
push
mov
cmp
xor
gs
aas
neg
sar
(bad)
(bad)
push
sbb
mov
rcl
mov
mov
xor
(bad)
mov
dec
dec
cmps
pop
cmc
and
rol
fisub
test
out
sbb
jbe
enter
stc
cmp
mov
pop
xor
data16
jl
(bad)
(bad)
fcomi
cmp
fwait
mov
jmp
adc
xchg
mov
sbb
mov
sub
mov
(bad)
(bad)
(bad)
jle
dec
lea
adc
inc
or
stos
mov
jne
jmp
out
xchg
(bad)
(bad)
(bad)
inc
or
push
loop
sub
jbe
mov
out
cmp
aas
int3
xor
jg
fbstp
inc
jge
in
mov
int3
sbb
inc
int3
jp
cmp
(bad)
mov
mov
xchg
shr
xchg
or
pusha
call
popa
(bad)
xor
mov
gs
(bad)
(bad)
push
movs
ror
fwait
retf
jmp
sbb
rol
test
dec
pop
std
mov
in
arpl
sbb
sahf
mov
loop
pop
fwait
jg
push
fld
push
push
adc
inc
fldenv
adc
imul
dec
nop
cli
mov
vfrczps
inc
inc
mov
add
loop
(bad)
(bad)
(bad)
mov
jbe
dec
adc
fild
scas
mov
imul
sbb
mov
inc
or
das
sar
sar
test
xchg
mov
push
addr16
push
in
nop
dec
add
push
jns
scas
dec
jecxz
pushf
jnp
xchg
jle
jg
xchg
dec
fst
(bad)
dec
fwait
or
push
jno
lea
add
pop
mov
adc
std
scas
mov
jmp
ret
repnz
mov
push
lods
test
jmp
ins
retf
push
xchg
and
sub
(bad)
cli
push
xchg
lahf
jnp
into
(bad)
(bad)
(bad)
call
imul
cmp
mov
cmc
or
gs
mov
(bad)
dec
(bad)
(bad)
fcomip
jne
dec
xchg
aad
and
dec
in
data16
rcr
fst
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
mov
push
stos
push
jbe
add
add
enter
jo
sbb
xor
(bad)
(bad)
(bad)
push
push
sbb
xor
jae
pop
aaa
and
and
inc
(bad)
mov
dec
leave
hlt
jbe
(bad)
(bad)
(bad)
call
jl
sub
and
and
fmul
and
inc
push
jns
sub
push
cld
mov
clc
fnsave
sbb
(bad)
(bad)
mov
scas
sbb
cld
test
std
xchg
mov
mov
push
pop
in
aad
je
sbb
inc
adc
repz
xchg
pop
hlt
mov
out
das
mov
jmp
rcl
std
xchg
je
dec
mov
cmp
fcomip
cwde
cli
jnp
dec
cmp
jae
push
add
mov
call
(bad)
(bad)
(bad)
call
push
mov
mov
fwait
iret
and
sti
jnp
daa
mov
in
mov
inc
(bad)
cld
(bad)
call
shrd
mov
je
scas
and
jnp
cld
repnz
call
call
fld
pop
enter
xor
movs
mov
leave
shl
(bad)
in
mov
dec
stos
jmp
pop
in
cmps
sub
xor
js
cmc
dec
rol
or
repnz
es
ffree
lds
dec
std
in
ss
xor
shl
lods
and
cmp
pop
cld
add
add
repnz
and
ret
bound
div
call
inc
jno
stos
mov
sub
mov
pop
sbb
(bad)
mov
sub
fs
stos
fsub
mov
cmp
or
xor
inc
xlat
bound
(bad)
jmp
mov
mov
sahf
nop
jg
int
pop
sahf
and
(bad)
(bad)
call
ret
and
add
cdq
out
push
or
xchg
add
mov
xchg
ins
dec
dec
add
scas
lods
pop
sar
(bad)
dec
cmc
iret
cmp
cdq
fwait
into
in
pop
xor
mov
or
in
(bad)
call
cs
imul
push
sub
ret
imul
(bad)
nop
and
xchg
cmps
dec
adc
les
out
rol
push
ror
popf
or
push
daa
inc
aas
mov
(bad)
jmp
add
sti
ret
pop
clc
ja
pushf
pop
in
inc
sub
add
pop
cmp
aaa
in
cmps
test
repnz
jbe
pop
or
jmp
rol
xchg
cmp
mov
mov
sub
fist
(bad)
(bad)
inc
mov
pop
retf
outs
ds
and
jmp
movs
jle
fadd
(bad)
jg
call
push
fisttp
push
or
cld
leave
xchg
loop
add
(bad)
(bad)
(bad)
inc
pop
mov
or
inc
cmps
bound
adc
sub
or
jle
pop
(bad)
mov
(bad)
(bad)
(bad)
call
test
jle
aad
mov
push
push
adc
cmc
dec
push
ret
aas
jmp
fdivp
fistp
sub
jb
in
jns
jae
pop
pop
add
(bad)
jge
jnp
retf
movs
std
pop
mov
add
call
mov
gs
add
lahf
(bad)
into
cmps
repz
sbb
data16
sub
hlt
bound
test
out
mov
mov
daa
stos
(bad)
les
and
adc
(bad)
(bad)
fistp
pop
sbb
mov
sbb
jae
add
add
mov
inc
std
rcr
adc
sbb
js
test
frstor
jl
outs
add
lods
sbb
jmp
cmps
movs
ds
rol
out
sub
jcxz
rcl
sbb
inc
je
mov
pop
popa
sbb
cmps
dec
sbb
xchg
mov
sub
jmp
jae
jmp
retf
lds
imul
(bad)
(bad)
inc
dec
nop
add
jno
es
mov
in
xor
shr
jge
push
cmps
(bad)
(bad)
(bad)
call
pop
cli
lods
cmp
inc
mov
pop
into
sub
inc
test
add
pop
daa
xchg
fld
leave
sbb
mov
clc
(bad)
(bad)
jmp
or
lea
aaa
xchg
in
ret
jecxz
sbb
jbe
dec
mov
add
call
stc
imul
rcr
pushf
pop
shl
xchg
(bad)
fisttp
cld
lods
pop
xor
pop
ins
imul
test
(bad)
(bad)
call
ror
dec
in
mov
sbb
add
jb
pop
xor
(bad)
(bad)
jns
xchg
jg
(bad)
fwait
jmp
adc
arpl
test
(bad)
lock
(bad)
(bad)
call
cmps
add
stos
and
pop
arpl
rcl
cmp
test
(bad)
(bad)
(bad)
call
xlat
push
lock
dec
fdivr
xchg
pop
shl
into
lods
mov
adc
aaa
mov
fcomip
inc
fistp
jp
or
jmp
in
bound
(bad)
(bad)
jmp
fs
xchg
xchg
aaa
xor
push
jecxz
sbb
ja
fst
push
aas
add
or
(bad)
call
xor
xlat
stc
(bad)
retf
ret
imul
push
xor
jb
jbe
ret
ds
add
mov
fninit
(bad)
(bad)
(bad)
dec
les
xor
std
pop
cld
pop
inc
dec
ins
push
stos
rcl
ins
mov
cdq
hlt
clc
rol
pop
scas
(bad)
(bad)
call
ja
arpl
push
test
icebp
pop
adc
call
(bad)
(bad)
jmp
mov
adc
call
cmp
pop
fmul
call
clc
xchg
retf
inc
test
(bad)
es
out
lahf
push
sar
xchg
(bad)
das
ds
(bad)
dec
(bad)
call
fdivr
dec
js
mov
retf
adc
(bad)
(bad)
(bad)
dec
int3
cmp
and
mov
dec
mov
fs
test
xor
ret
mov
repnz
push
es
pop
sub
push
test
mov
test
(bad)
(bad)
(bad)
call
ja
(bad)
out
fdivp
inc
cmc
pop
out
sbb
fist
loopne
dec
sar
(bad)
(bad)
(bad)
cmp
enter
mov
dec
xchg
push
mov
dec
or
iret
test
ins
ins
cmps
inc
xlat
retf
cmp
jmp
lea
jecxz
ja
es
(bad)
scas
jecxz
movs
scas
mov
xchg
and
call
nop
stos
inc
pop
mov
not
jl
(bad)
(bad)
out
inc
mov
add
sub
lock
popf
mov
dec
add
(bad)
dec
cmps
stos
out
dec
xor
xchg
mul
loopne
in
and
jae
(bad)
(bad)
(bad)
jg
push
cli
jno
jns
push
cmp
mov
cld
arpl
cmp
xor
retf
fist
scas
adc
es
push
ret
and
(bad)
jmp
lods
inc
adc
hlt
push
push
mov
add
js
xor
retf
push
(bad)
(bad)
(bad)
(bad)
fucom
mov
mov
xchg
mov
imul
pop
push
push
add
imul
adc
sub
inc
and
call
push
push
rcr
xor
sub
xchg
mov
inc
ins
retf
jae
in
lods
or
int3
push
iret
loop
xor
dec
inc
xchg
ins
jp
imul
or
aad
(bad)
lods
sbb
add
sar
and
shr
idiv
push
movs
jp
lds
repz
cmps
ss
dec
push
mul
hlt
(bad)
jg
pop
dec
movs
shl
sahf
jp
xor
ret
(bad)
push
add
jmp
fistp
inc
push
xchg
push
sub
(bad)
(bad)
dec
xchg
mov
fwait
inc
jmp
cmc
stc
cmp
and
daa
or
sub
push
mov
outs
jp
mov
pop
aam
push
jecxz
add
sub
imul
(bad)
jmp
lods
ds
stos
cli
mov
jle
add
lods
addr16
xchg
hlt
mov
dec
imul
push
(bad)
jns
push
aas
dec
repz
out
repnz
(bad)
jmp
mov
(bad)
(bad)
(bad)
call
jmp
add
push
push
icebp
inc
cmp
bound
inc
pop
jp
loope
pop
outs
inc
jmp
shl
jmp
js
int
add
mov
pop
jns
cmp
dec
push
out
shr
lods
(bad)
(bad)
(bad)
(bad)
dec
dec
pop
out
pushf
cmp
mov
xchg
sub
and
ja
(bad)
pmaddwd
ret
xchg
cmps
fimul
stos
add
gs
cwde
test
aaa
nop
test
jmp
(bad)
cld
add
(bad)
mov
cmp
push
sbb
jno
pop
imul
(bad)
(bad)
(bad)
dec
xchg
xchg
inc
aam
mov
and
mov
hlt
loop
aaa
sub
or
add
jmp
mov
mov
iret
imul
xchg
jle
fsubr
pop
int3
out
mov
faddp
sti
fadd
sahf
jecxz
(bad)
(bad)
inc
arpl
dec
sbb
fcmovnu
adc
xor
out
sahf
int
pop
xor
pop
push
aad
sar
call
js
dec
cmovp
push
nop
dec
jmp
(bad)
(bad)
(bad)
call
pop
push
mov
fdiv
push
std
xchg
bound
pop
loope
xchg
loope
mov
lods
xchg
xor
dec
popf
xchg
push
jp
bound
aas
sti
inc
out
enter
(bad)
(bad)
jmp
je
adc
dec
add
or
in
mov
mov
cmp
mov
pop
push
sbb
adc
(bad)
(bad)
(bad)
inc
movs
jno
mov
add
aam
or
fnstcw
cmp
fidivr
idiv
(bad)
call
sbb
test
imul
std
lea
cmps
adc
push
xlat
adc
cmp
mov
cmp
in
lods
(bad)
lds
or
test
push
cmps
movs
stos
fisubr
push
mov
in
fstp
(bad)
(bad)
jmp
push
shl
fst
std
pop
and
sti
or
or
cli
call
std
scas
fild
dec
sbb
test
movs
and
or
or
stos
or
and
inc
ins
ret
dec
outs
cli
call
sub
sub
mov
xor
push
cmp
movs
inc
stos
(bad)
(bad)
(bad)
ds
sbb
xchg
jge
mov
stc
in
cmc
push
fsubr
(bad)
(bad)
call
call
(bad)
hlt
fwait
push
ret
loopne
cli
fistp
arpl
call
outs
and
int
push
in
sub
push
scas
push
(bad)
mov
jecxz
jo
mov
call
test
pop
movs
test
cli
jmp
or
retf
mov
push
jne
xrelease
outs
(bad)
push
loop
sbb
dec
mov
add
ret
cld
bound
retf
outs
lock
inc
inc
outs
adc
icebp
neg
(bad)
(bad)
(bad)
jmp
sbb
sar
jae
cmp
xor
mov
cmps
jbe
outs
pop
loopne
push
rol
js
(bad)
out
pop
xor
cmp
push
loopne
shr
popf
cmp
jg
ins
jns
mov
int3
aam
inc
daa
push
imul
jl
frstor
outs
sbb
fadd
fbld
lahf
mov
outs
out
mov
jge
call
jbe
(bad)
fsubr
or
pop
adc
(bad)
jg
push
out
cmc
mov
cmps
mov
pop
fcom
pop
pop
int3
retf
add
call
mov
pop
dec
fiadd
mov
(bad)
(bad)
(bad)
dec
xchg
lahf
int
push
dec
sub
dec
cmp
mov
pop
nop
fild
loope
sub
int
inc
and
in
addr16
outs
and
int3
mov
aas
retf
(bad)
dec
retf
dec
stos
add
push
cmp
je
and
ret
mov
sbb
cmp
and
das
jbe
cmp
lods
inc
cmps
adc
mov
push
jecxz
xchg
inc
sbb
pand
(bad)
fcomip
test
add
cmp
jb
push
xchg
js
shl
(bad)
pusha
mov
jmp
popa
out
jl
cmp
call
mov
xor
lods
xchg
xchg
(bad)
(bad)
call
pop
aas
mov
scas
xor
loope
sbb
nop
ficomp
or
pop
movs
cs
dec
scas
sahf
in
or
int
fdivrp
call
cmp
cmps
jmp
sbb
add
daa
mov
sbb
and
or
mov
adc
mov
push
lahf
sub
lea
aad
or
sub
icebp
pop
rcr
rcl
outs
(bad)
(bad)
(bad)
inc
in
in
int
addr16
xlat
push
lahf
lods
mov
pop
push
mov
push
mov
jmp
shl
cld
sbb
add
mov
mov
mov
(bad)
sbb
(bad)
(bad)
call
push
(bad)
jg
jo
mov
not
es
aam
out
push
les
lods
in
jl
(bad)
(bad)
(bad)
ds
push
push
fcomp
xor
scas
and
mov
push
call
test
dec
push
addr16
popa
ret
mov
(bad)
push
mov
xchg
ret
out
mov
add
(bad)
push
mov
(bad)
pop
ja
sbb
aad
pop
(bad)
pop
iret
push
or
ss
sub
inc
pop
jp
(bad)
(bad)
jl
jecxz
rcl
mov
jmp
int
and
mov
fwait
and
out
test
loope
dec
jno
mov
xchg
bnd
(bad)
xlat
std
inc
fmul
cli
jae
add
(bad)
(bad)
(bad)
(bad)
out
fadd
mov
xchg
loop
hlt
and
jecxz
add
cmp
xchg
popa
mov
call
and
mov
push
stos
and
test
(bad)
(bad)
jmp
pop
pushf
outs
movs
fiadd
dec
xchg
test
in
jge
push
or
xor
inc
fsubr
dec
sub
mov
jbe
ja
cld
add
idiv
mov
in
lea
adc
push
rcl
movs
adc
inc
pop
add
fcomip
(bad)
jmp
inc
fdiv
cwde
adc
xor
shl
xlat
aas
mov
int
(bad)
(bad)
call
dec
dec
xchg
dec
inc
ror
sbb
daa
jnp
lea
and
mov
(bad)
call
xchg
sahf
jne
and
ret
jecxz
(bad)
jmp
adc
pushf
in
jge
dec
jmp
in
sar
dec
(bad)
(bad)
out
sbb
cmp
(bad)
sub
jp
in
mov
cli
into
adc
jmp
out
mov
outs
sbb
adc
lods
cs
mov
pop
add
mov
push
inc
mov
adc
pushf
dec
imul
pop
sbb
shl
inc
pop
lds
and
dec
pop
and
(bad)
(bad)
dec
fs
inc
xchg
sub
cli
ds
jb
aaa
xchg
sahf
adc
xchg
cs
(bad)
(bad)
(bad)
jmp
mov
or
sbb
add
scas
inc
pop
repz
cmps
out
fwait
into
cs
(bad)
(bad)
(bad)
jmp
inc
int
pop
cmp
cmp
mov
pop
xchg
add
(bad)
pcmpgtd
push
ud0
(bad)
dec
xchg
mov
lds
pop
pop
lds
xchg
sub
out
js
in
pop
or
in
stos
push
shr
scas
mov
leave
lahf
icebp
cmps
out
js
mov
ret
cmc
popf
mov
iret
and
inc
pop
in
aas
stos
inc
test
loopne
pop
sub
xchg
jmp
pop
sbb
add
int
sahf
cmp
aad
fistp
mov
pop
push
xchg
dec
adc
xchg
cs
(bad)
(bad)
(bad)
jmp
out
scas
xlat
push
in
test
adc
nop
mov
fist
mov
fstp
mov
and
pushf
stos
je
add
cld
icebp
push
imul
outs
push
jae
sar
sub
pop
mul
add
sub
fdiv
and
clc
pop
(bad)
test
push
dec
and
pop
cli
mov
icebp
pop
imul
dec
(bad)
push
cld
mov
xchg
lock
push
sbb
xorps
lods
push
jmp
mov
jb
pop
mov
ror
and
(bad)
push
cmp
jge
jns
out
ss
sti
aam
sar
stos
cs
mov
sbb
lahf
push
popf
push
stos
push
bnd
fimul
push
(bad)
call
mov
int3
jle
in
fimul
dec
and
jl
(bad)
fs
(bad)
(bad)
call
mov
mov
pop
sbb
pop
bound
or
(bad)
fmul
xchg
sbb
(bad)
jmp
xchg
xor
pop
fstp
and
mov
inc
ret
sub
xchg
jb
ss
(bad)
inc
je
or
add
pop
adc
push
mov
or
test
(bad)
cmc
rcl
popf
cwde
pop
mov
aam
dec
imul
sqrtps
movs
popf
out
(bad)
(bad)
(bad)
dec
cmp
(bad)
lods
out
(bad)
sub
and
and
inc
sbb
movs
leave
mov
mov
cmp
or
call
hlt
inc
mov
enter
cmps
movs
leave
jo
mov
nop
or
aaa
sub
aam
(bad)
(bad)
(bad)
push
jb
pop
int3
adc
pop
add
cmps
xchg
xchg
sub
xor
outs
aam
and
jmp
or
jecxz
fwait
scas
xchg
and
sbb
mov
pop
fcomip
xor
scas
lods
cld
mov
jg
inc
push
mov
add
stos
jle
jg
add
inc
mul
(bad)
(bad)
call
ds
cmp
aam
pop
adc
nop
jb
xor
lock
daa
mov
xor
ds
cmp
xchg
pop
dec
jmp
sub
nop
(bad)
bnd
mov
mov
call
shr
cs
inc
inc
loope
xor
adc
fsubr
cmp
out
jns
mov
(bad)
(bad)
jg
ins
add
std
mov
pop
sub
mov
pushf
repz
pop
mov
jecxz
add
call
int3
sub
inc
test
xlat
adc
jg
(bad)
clc
(bad)
pop
push
and
das
daa
mov
call
mov
mov
nop
add
jmp
jo
into
movs
xor
imul
js
jl
(bad)
(bad)
jmp
mov
jg
xor
add
ss
add
mov
cmp
call
xchg
inc
cwde
dec
mov
jg
gs
jp
pusha
push
mov
fldcw
mov
(bad)
inc
push
sub
inc
arpl
pop
mov
xor
(bad)
fstp
jmp
pop
scas
or
(bad)
in
mov
imul
test
push
cli
int
xchg
jmp
ins
push
test
call
inc
out
dec
adc
push
jle
lods
mov
into
fld
loop
sar
push
fnstenv
inc
(bad)
test
pop
pop
sbb
(bad)
fbld
xchg
sbb
mov
dec
(bad)
ins
dec
sti
and
dec
jl
(bad)
dec
js
mov
mov
aad
ins
cdq
mov
or
aaa
mov
dec
call
ja
and
fnsave
lock
test
(bad)
jmp
test
add
mov
or
aaa
call
pop
shr
pushf
mov
lods
xchg
(bad)
(bad)
(bad)
dec
or
push
sbb
cmp
push
cmp
stos
cmps
pop
fcmovbe
add
lds
push
stos
push
fwait
aad
loopne
ins
mov
adc
pushf
adc
push
mov
(bad)
(bad)
(bad)
jg
add
mov
push
icebp
jae
jbe
cdq
nop
imul
or
movs
stos
(bad)
(bad)
inc
call
mov
mov
push
(bad)
out
push
das
xor
es
popf
(bad)
(bad)
(bad)
dec
mov
dec
test
mov
push
jb
pop
leave
xchg
data16
jnp
dec
sahf
stos
(bad)
(bad)
push
cmp
scas
cld
retf
cmp
ficom
xor
les
(bad)
(bad)
push
xchg
ret
xchg
into
popf
dec
(bad)
shl
pop
xor
pop
or
es
dec
jbe
outs
movs
(bad)
pop
(bad)
(bad)
(bad)
inc
xchg
cmp
ficomp
xlat
push
shl
addr16
pop
stos
sahf
sbb
(bad)
(bad)
jmp
cmp
popf
cmps
int3
nop
jmp
iret
std
fcom
xchg
inc
ds
fstp
pusha
fisubr
sub
dec
jmp
adc
and
fisttp
(bad)
(bad)
call
int
test
ret
aas
adc
iret
mov
js
mov
pop
sahf
cmp
es
popf
repz
(bad)
call
push
test
enter
js
push
or
push
xchg
sub
and
(bad)
(bad)
(bad)
fstp
stc
shr
mov
or
dec
dec
sub
es
scas
out
and
mov
mov
cmp
mov
out
sbb
sub
cmp
(bad)
(bad)
push
adc
mov
(bad)
mov
cwde
dec
mov
push
js
cmp
jnp
push
push
int
dec
push
xor
inc
add
xor
sti
les
lods
je
(bad)
(bad)
jg
jge
pop
adc
nop
dec
mov
or
imul
call
out
pop
inc
xchg
mov
mov
and
movs
pop
call
mov
mov
xor
out
xor
loop
es
jmp
pop
repz
push
icebp
pusha
mov
xchg
jo
test
test
adc
call
dec
push
add
xor
mov
enter
push
mov
(bad)
(bad)
jmp
ss
fist
retf
das
out
cs
inc
or
neg
fadd
(bad)
(bad)
(bad)
jmp
cs
mov
mov
inc
popf
into
vpor
ins
sar
retf
call
fwait
test
mov
lock
jecxz
(bad)
jmp
fsub
out
inc
je
icebp
cs
or
ret
sbb
scas
fdiv
into
mov
lock
(bad)
in
into
xor
outs
or
(bad)
or
ficomp
jmp
loope
jmp
adc
sub
inc
in
xchg
je
or
daa
xchg
adc
(bad)
call
shr
jmp
cmp
xor
cld
or
stos
mov
std
sbb
sub
add
test
in
imul
sbb
cmc
mov
shr
dec
test
jns
sbb
popw
push
std
fisttp
and
cmps
ja
add
repz
scas
and
ret
(bad)
mov
arpl
dec
cmps
inc
add
push
test
dec
test
adc
loop
xchg
adc
inc
rcl
imul
in
push
or
adc
dec
push
xlat
mov
jmp
mov
or
sub
inc
cmp
inc
stos
mov
mov
mov
mov
inc
lahf
data16
xchg
(bad)
(bad)
(bad)
inc
inc
sbb
fistp
(bad)
dec
mul
imul
ss
daa
(bad)
mov
dec
call
cli
pusha
or
cmp
xchg
fist
dec
fcomp
or
(bad)
(bad)
push
inc
mov
push
sbb
ret
daa
aad
push
push
push
stc
in
mov
sub
int
mov
xor
rcl
cli
(bad)
call
xchg
cmc
xor
pushf
call
adc
xor
fcom
push
pop
cli
loopne
mov
clc
jmp
adc
(bad)
jmp
sbb
cmp
mov
adc
adc
(bad)
push
rcr
jmp
xchg
jl
mov
xchg
push
ins
jge
fbld
aaa
das
push
aas
sbb
rcr
jle
push
scas
cmc
jb
out
adc
mov
pop
xchg
dec
push
pop
or
inc
mov
add
neg
stos
jns
ja
sar
pop
les
xor
xor
in
sub
(bad)
call
(bad)
sbb
loope
(bad)
ins
pop
in
xor
xchg
and
xchg
mov
inc
cwde
pusha
(bad)
(bad)
(bad)
dec
mov
ror
mov
out
mov
jl
add
arpl
dec
hlt
mov
push
mov
sti
loop
or
(bad)
call
mov
jne
scas
std
stos
inc
xchg
pop
pop
test
(bad)
retf
and
inc
cld
(bad)
dec
xchg
arpl
jecxz
sub
add
jmp
sub
(bad)
(bad)
jg
enter
dec
inc
mov
call
pop
std
mov
out
add
loopne
sub
xor
das
movs
mov
fsubr
ins
adc
out
or
movs
add
ja
or
(bad)
(bad)
push
jmp
cmc
sub
out
xchg
icebp
xor
fsubp
cmps
sbb
loope
icebp
aas
jmp
call
jnp
push
leave
mov
sub
jmp
aaa
std
(bad)
jmp
cmps
repnz
or
stc
sbb
xor
push
lea
cmp
(bad)
call
inc
(bad)
jecxz
(bad)
mov
fild
(bad)
(bad)
call
or
push
adc
fistp
inc
inc
cmps
rcr
xchg
cmp
inc
add
std
(bad)
(bad)
(bad)
out
sub
inc
mov
xchg
mov
sbb
xor
mov
push
pop
dec
es
mov
(bad)
mov
or
jae
test
dec
cli
jns
mov
fs
shl
(bad)
(bad)
(bad)
mov
outs
sub
int3
rcl
jnp
jns
fidiv
(bad)
(bad)
fild
jne
icebp
pop
inc
sbb
cmp
stc
cdq
pop
mov
call
mov
pop
sub
(bad)
fwait
xor
gs
inc
test
out
idiv
(bad)
call
pusha
push
push
ss
dec
shl
xor
outs
jbe
mov
jge
and
mov
lods
(bad)
dec
mov
xchg
mov
or
(bad)
xlat
xor
push
mov
(bad)
aad
mov
test
jge
aaa
sti
or
(bad)
push
cmp
sub
push
mov
(bad)
(bad)
(bad)
test
call
(bad)
clc
adc
jl
cmp
popa
jecxz
and
lea
(bad)
jmp
ret
sbb
jecxz
sub
jne
add
pusha
pop
pop
sub
push
jge
sub
clc
inc
out
aam
test
mov
mov
fldcw
and
jge
(bad)
call
sbb
cmp
loope
mov
popf
stos
pop
and
and
scas
(bad)
push
(bad)
(bad)
inc
pop
jo
cld
ja
push
push
cdq
cmp
pop
or
pop
(bad)
(bad)
and
push
xor
adc
lea
xchg
xchg
mov
mov
sub
inc
inc
adc
inc
ret
(bad)
mov
push
stos
aas
mov
adc
add
leave
arpl
mov
(bad)
fldenvw
push
add
or
(bad)
jg
call
add
out
push
pop
add
pop
add
mov
fld
loopne
(bad)
mov
adc
inc
sbb
push
neg
inc
xchg
and
mov
add
sbb
fisubr
fwait
mov
cld
retf
and
adc
in
jg
test
ins
cmp
aam
scas
dec
neg
jle
ins
cmp
add
inc
sar
retf
adc
mov
xchg
xchg
jno
jmp
adc
sbb
sub
call
ss
xor
lds
jno
sub
addr16
idiv
push
retf
pminub
push
cld
cs
pop
sub
and
call
aad
ins
call
sub
sbb
fcomp
(bad)
(bad)
inc
mov
push
mov
mov
(bad)
aam
scas
sti
out
aas
stos
mov
(bad)
jmp
xchg
push
inc
xor
sbb
ficom
fwait
dec
fadd
bound
jae
(bad)
mov
daa
inc
out
cmp
retf
fidiv
js
mov
cdq
inc
rol
out
dec
mov
cmc
js
in
(bad)
mov
call
inc
mov
jnp
int
mov
push
push
dec
loope
dec
loop
push
add
(bad)
mov
mov
movs
les
rcr
fistp
inc
clc
int
rcr
push
pop
push
adc
(bad)
(bad)
jmp
sbb
repnz
xchg
or
xlat
cmp
adc
dec
adc
repz
(bad)
(bad)
(bad)
dec
lods
ror
pusha
int3
outs
pop
(bad)
(bad)
aad
cmp
mov
sub
outs
daa
js
adc
jns
nop
(bad)
dec
call
and
mov
push
adc
mov
ins
(bad)
jg
jmp
mov
push
jp
shl
pop
sub
clc
lea
mov
jbe
(bad)
jmp
cs
aam
cld
pop
xchg
div
idiv
mov
push
sub
pop
(bad)
(bad)
(bad)
call
pusha
call
(bad)
in
dec
cwde
cmp
les
dec
daa
and
fldcw
lahf
cmp
loopne
mov
iret
fisub
cmp
int
test
jle
(bad)
xchg
xchg
and
jmp
in
pop
pop
and
mov
clc
adc
pop
scas
inc
sub
and
cmc
retf
push
std
adc
(bad)
(bad)
push
or
ret
push
sar
sahf
and
xlat
or
push
pop
nop
sti
(bad)
(bad)
inc
sbb
or
retf
jmp
pop
popf
repz
stc
pop
and
inc
fld
sar
xchg
sbb
inc
stc
movs
and
push
xor
std
es
(bad)
inc
fcomip
ret
jne
mov
fcom
or
mov
(bad)
push
jbe
hlt
adc
pop
bound
mov
and
add
add
inc
add
adc
cmp
(bad)
(bad)
jg
and
mov
fistp
cmp
lods
test
mov
fist
daa
or
mov
idiv
int3
push
call
aas
(bad)
(bad)
(bad)
(bad)
std
fwait
hlt
shr
jmp
pmulhuw
push
mov
inc
sbb
and
sub
or
imul
fdivr
(bad)
jg
pop
pop
(bad)
dec
inc
add
loop
xor
sbb
rcl
pop
loop
movs
(bad)
(bad)
(bad)
jmp
mov
call
xor
out
push
call
fistp
mov
(bad)
jo
fnstenv
(bad)
(bad)
(bad)
call
scas
cmps
xchg
(bad)
push
xor
sub
int3
jle
mov
and
aas
xchg
push
mov
dec
gs
xchg
cmp
stc
or
jno
arpl
jmp
lock
jo
addr16
push
sbb
test
loopne
mov
add
jle
pop
mov
(bad)
fbld
(bad)
enter
int3
dec
lods
mov
(bad)
(bad)
jmp
popf
in
dec
loope
xchg
xor
int
inc
and
jbe
sbb
lods
inc
je
rol
(bad)
(bad)
jmp
jo
xadd
push
sub
jl
mov
les
lea
(bad)
(bad)
(bad)
call
mov
je
and
inc
ds
xor
jmp
mov
fiadd
call
inc
cmc
add
(bad)
test
mov
cwde
out
(bad)
(bad)
(bad)
fxam
daa
and
daa
sahf
movs
mov
test
ss
call
add
movs
(bad)
(bad)
(bad)
jmp
xchg
adc
or
dec
sbb
jl
loop
jg
cmp
mov
or
sub
add
and
dec
data16
cmp
or
sub
inc
jns
out
leave
xchg
retf
nop
add
(bad)
(bad)
call
call
and
ja
push
push
dec
inc
mov
xor
inc
xchg
lods
in
add
test
dec
pusha
(bad)
adc
mov
(bad)
call
add
xor
xchg
add
std
push
and
xor
(bad)
inc
mov
adc
add
mov
pop
dec
imul
dec
outs
add
push
stos
(bad)
(bad)
(bad)
jmp
push
stos
and
or
jno
(bad)
iret
gs
repnz
add
cli
mov
mov
(bad)
jmp
add
sub
cmp
arpl
pop
mov
push
fcomip
jmp
outs
fcmovu
(bad)
out
pop
sub
lea
lods
(bad)
add
std
(bad)
jmp
scas
je
std
movs
mov
sbb
fidiv
cmp
jne
out
and
xor
adc
inc
ds
sahf
ror
push
mov
add
movs
mov
les
test
scas
pusha
test
push
inc
std
pop
ins
jo
(bad)
(bad)
call
pop
cmps
out
or
sbb
xor
sub
mov
add
jle
inc
mov
(bad)
(bad)
jmp
jo
pop
dec
sbb
mov
mov
fcmovu
jmp
ja
sub
ss
mov
dec
cli
call
or
movs
cmc
or
in
lods
xor
mov
std
jmp
jmp
rol
add
mov
push
add
daa
add
inc
add
out
(bad)
(bad)
dec
push
xchg
xlat
retf
aaa
mov
leave
ficom
jp
or
retf
arpl
(bad)
(bad)
(bad)
push
fisubr
jo
fwait
sahf
jl
repz
dec
ins
xchg
dec
push
imul
test
cld
je
sbb
inc
(bad)
(bad)
(bad)
jmp
ds
jp
ret
ficomp
mov
mov
jle
xchg
pop
pop
(bad)
aam
(bad)
(bad)
jmp
push
jnp
sub
into
sub
xchg
and
fstp
pop
daa
(bad)
(bad)
(bad)
push
(bad)
movs
popa
inc
mov
adc
fucomip
mov
(bad)
adc
jbe
adc
fld
add
adc
jle
ds
jns
(bad)
(bad)
call
dec
addr16
inc
fidivr
call
(bad)
pop
es
xchg
movs
ins
xchg
sbb
cmc
int
lds
pop
aaa
adc
std
sbb
xor
mov
call
cld
mov
and
xor
sbb
test
sahf
rcl
(bad)
jg
(bad)
sbb
dec
cmp
sbb
lods
das
dec
cld
xchg
dec
add
(bad)
(bad)
(bad)
mov
ins
(bad)
adc
test
jae
or
cli
push
adc
(bad)
(bad)
(bad)
mov
into
xchg
push
jmp
out
xchg
mov
loopne
mov
lds
cld
add
mov
clc
jmp
cmc
cmp
pop
jns
int
retf
test
movs
js
popa
mov
xor
mov
out
push
xor
cli
(bad)
std
out
sbb
outs
sbb
stc
inc
pop
jb
iret
imul
(bad)
inc
sbb
add
les
push
add
dec
jno
fbstp
cmp
dec
cmp
mov
adc
dec
pushf
push
jp
push
mov
xchg
jle
sahf
jmp
stos
stc
xor
into
popf
into
sti
lea
mov
rcr
mov
aaa
rcr
jmp
std
mov
and
dec
sbb
dec
fadd
sbb
mov
adc
popa
(bad)
movs
fwait
adc
and
mov
mov
or
and
call
cmp
mov
shl
retf
rcr
(bad)
retf
inc
xor
xor
add
xchg
(bad)
in
pop
push
push
popa
pop
lds
inc
leave
pusha
inc
mov
push
jg
inc
iret
aam
xlat
in
test
(bad)
(bad)
(bad)
cld
int3
(bad)
stos
cmc
cmp
sbb
mov
xor
lods
adc
and
stos
sbb
mov
or
dec
or
movs
lods
mov
pop
inc
jl
shr
loop
addr16
mov
stos
loop
pop
and
lods
(bad)
loopne
repz
fs
jns
jns
pop
lock
iret
dec
into
push
jl
popf
sub
adc
(bad)
and
jnp
loopne
xchg
inc
jnp
sub
or
jmp
jmp
test
inc
sbb
xchg
cmps
sub
or
lods
cdq
ret
dec
cmp
(bad)
(bad)
(bad)
push
xchg
pop
js
cmc
movs
mov
xchg
mov
mov
out
ins
bound
jo
xor
mov
xchg
cmps
cmp
(bad)
(bad)
inc
sub
adc
inc
dec
jecxz
sub
fsubr
dec
cmp
arpl
mov
sub
jb
xchg
std
push
mov
xchg
mov
jmp
push
repnz
repz
xchg
cmc
ds
addr16
mov
stos
movs
xor
enter
mov
fsub
mov
jae
in
or
scas
in
retf
jnp
(bad)
(bad)
(bad)
(bad)
js
sbb
add
mov
dec
mov
fsub
xor
xchg
in
or
pop
mov
(bad)
call
inc
(bad)
or
add
dec
in
push
cmp
mov
shl
add
push
cli
mov
out
mov
repnz
in
mov
(bad)
pop
popf
push
(bad)
pop
data16
push
inc
xor
lods
mov
xlat
mov
leave
lock
add
rcl
lock
jmp
fwait
clc
cmp
fcomp
mov
mov
sbb
out
or
fild
sub
(bad)
(bad)
call
adc
or
(bad)
mov
pop
iret
js
jg
sbb
add
div
(bad)
(bad)
(bad)
call
cs
leave
std
iret
ja
sub
jns
adc
les
pop
nop
jecxz
out
pop
int3
into
jno
(bad)
(bad)
(bad)
jmp
cmp
(bad)
sbb
xlat
div
cmps
jae
int
daa
test
cli
(bad)
call
push
mov
popa
push
mov
inc
fnstsw
es
out
sub
mov
jb
(bad)
(bad)
(bad)
cmp
movs
pusha
inc
test
jb
mov
das
je
mov
out
dec
loopne
or
(bad)
add
push
push
and
push
(bad)
fmul
inc
icebp
xchg
lods
sbb
loopne
push
xchg
xchg
pop
sub
xchg
sub
pop
(bad)
mov
mov
clc
mov
lds
(bad)
(bad)
fld
push
aad
adc
js
jo
and
clc
dec
push
aaa
std
(bad)
push
xlat
cmc
xchg
adc
sbb
dec
inc
push
clc
xor
sbb
add
mov
mov
enter
pusha
jno
icebp
mov
out
in
inc
add
dec
aam
push
cdq
pop
mov
arpl
push
ss
(bad)
call
jmp
data16
or
js
fbstp
xchg
int
out
stos
dec
pop
sub
add
pop
inc
retf
mov
xor
push
cld
repz
outs
pop
call
add
add
jle
clc
sub
cmc
(bad)
(bad)
(bad)
js
addr16
fsub
fwait
icebp
repz
jp
and
xchg
mov
sahf
cmps
pop
jg
sub
cli
out
pop
cdq
lea
std
(bad)
mov
fdivr
inc
shl
lea
(bad)
pop
sti
ret
(bad)
in
stos
mov
push
in
shl
cli
into
dec
retf
imul
(bad)
jmp
push
loope
inc
fisub
repz
std
dec
das
fistp
call
scas
mov
outs
push
mov
aam
xor
shr
inc
cmp
pop
jp
mov
in
dec
mov
xchg
(bad)
aad
push
adc
pop
jp
cmp
pop
lea
mov
pop
out
outs
and
dec
add
inc
(bad)
inc
cld
jne
jb
xchg
inc
and
daa
and
jmp
(bad)
(bad)
push
xor
out
aas
mov
push
mov
dec
push
xchg
stc
cmp
jge
(bad)
(bad)
call
aam
jae
jns
lods
pop
dec
hlt
fimul
dec
cmps
bound
cld
rcl
pop
mov
(bad)
lock
dec
hlt
das
ret
(bad)
jmp
mov
cmp
int
inc
leave
ret
out
push
cdq
in
push
push
mov
mov
push
xchg
pop
rol
out
inc
mov
cmp
sar
call
mov
in
mov
dec
and
inc
fmul
or
adc
sbb
(bad)
(bad)
(bad)
jg
ins
adc
mov
pop
cmp
data16
loopne
ins
jae
adc
ja
dec
mov
in
(bad)
(bad)
inc
pop
fsub
shr
cmp
inc
push
cmp
outs
and
cmp
sar
(bad)
(bad)
jmp
call
test
and
or
xchg
xchg
(bad)
push
pop
ds
mov
jnp
cmp
(bad)
jmp
(bad)
cld
icebp
out
push
add
cmp
push
(bad)
dec
push
mov
xchg
cmps
(bad)
(bad)
(bad)
dec
adc
nop
loop
push
nop
ins
and
fistp
daa
or
sub
(bad)
(bad)
(bad)
jge
test
aaa
sub
enter
mov
aam
lds
mov
mov
(bad)
(bad)
push
(bad)
test
jbe
add
out
repnz
das
imul
mov
cmps
push
inc
fisub
mov
pop
(bad)
(bad)
(bad)
jmp
int3
scas
out
mov
out
cli
test
mov
or
shl
mov
mov
or
addr16
dec
ret
pop
dec
cmp
cmp
mov
mov
pusha
mov
add
and
push
je
or
outs
add
mov
add
push
arpl
inc
and
xchg
shl
dec
aaa
mov
jge
push
cli
retfw
pop
adc
xchg
dec
push
(bad)
(bad)
(bad)
jmp
aad
aas
mov
mov
mov
rcr
mov
sub
test
hlt
in
call
inc
pop
sbb
cmp
adc
mov
lods
cmps
push
dec
mov
(bad)
clc
or
jl
sbb
xlat
loop
mov
and
out
push
inc
dec
push
retf
iret
mov
xor
out
xchg
(bad)
adc
mov
jl
xchg
inc
mov
jmp
sbb
repnz
iret
lock
sub
push
retf
das
cwde
pop
retf
jecxz
(bad)
(bad)
fistp
bound
out
fisttp
jne
cmp
(bad)
mov
aad
(bad)
fisub
or
jo
sbb
loopne
addr16
xchg
nop
jo
add
push
mov
call
inc
xor
mov
add
mov
inc
inc
sbb
aam
xchg
loopne
push
(bad)
(bad)
(bad)
push
out
cmps
in
sub
mov
push
push
aam
xchg
add
lods
call
inc
(bad)
xor
mov
jns
mov
mov
frstor
add
jb
mov
shl
mov
dec
xchg
sbb
out
ins
push
gs
stos
in
cld
(bad)
into
push
or
loope
(bad)
(bad)
(bad)
jmp
shr
xlat
dec
ror
and
dec
jmp
mov
call
mov
inc
jmp
or
(bad)
(bad)
(bad)
out
pushf
call
inc
in
mov
xchg
or
adc
inc
mov
sbb
inc
test
(bad)
dec
sub
adc
sub
xchg
mov
xchg
aad
or
push
hlt
movs
cmc
mov
out
test
test
dec
(bad)
push
xor
jb
adc
scas
sahf
(bad)
data16
(bad)
(bad)
inc
fistp
and
into
lds
dec
adc
fwait
imul
mov
repz
test
push
or
inc
push
mov
mov
mov
dec
rcr
movs
sbb
xchg
sar
(bad)
(bad)
call
sahf
mov
cwde
rcl
scas
cmp
xchg
outs
movs
sbb
inc
push
cs
pop
lock
push
sub
out
add
mov
mov
ins
pop
inc
jno
(bad)
out
scas
sar
pop
push
dec
inc
retf
push
mov
addr16
sub
jmp
(bad)
cmp
dec
dec
xor
inc
bound
adc
cmp
(bad)
dec
hlt
and
and
cmc
mov
inc
bnd
dec
mov
mov
sbb
adc
fbld
pop
loope
inc
jp
jle
(bad)
test
(bad)
cmp
add
pop
adc
sub
fsub
dec
(bad)
movq
lahf
(bad)
jmp
jmp
jle
test
mov
call
add
jg
idiv
adc
jmp
push
(bad)
add
ret
sub
fs
jbe
out
(bad)
(bad)
call
out
jmp
jo
jne
pop
push
ss
outs
xor
inc
mov
adc
aaa
jae
(bad)
(bad)
(bad)
(bad)
cld
fiadd
leave
mov
lock
js
dec
mov
icebp
out
push
das
adc
jle
leave
inc
mov
sbb
(bad)
xchg
push
in
xchg
mov
cli
jb
sub
add
daa
push
ret
lods
loop
jp
(bad)
jmp
fcomp
cs
and
ss
ins
jecxz
(bad)
and
xchg
out
or
jecxz
cmps
repz
push
xor
mov
pop
jge
sub
xor
sub
dec
push
stos
mov
mov
dec
test
and
enter
int
in
xchg
fnstcw
adc
dec
push
ja
lea
sub
mov
mov
mov
cmp
hlt
movs
and
ficomp
(bad)
fild
mov
dec
fbld
xor
fcom
xchg
dec
or
clc
sti
xor
(bad)
call
gs
cmp
xlat
ror
cmps
pop
test
shr
jb
retf
pop
sub
mov
data16
cmp
lods
mov
or
sub
sub
fwait
push
stos
std
and
(bad)
(bad)
dec
pusha
mov
fisubr
push
adc
add
push
cmc
cmp
(bad)
pop
cmp
push
and
xor
jnp
(bad)
dec
mov
lds
loope
ret
lahf
(bad)
jge
mov
cld
shr
sbb
fild
loope
or
and
sub
inc
add
pop
(bad)
(bad)
(bad)
dec
cs
dec
xor
mov
out
cld
out
lds
xor
mov
jmp
and
out
cmc
shl
div
xchg
popa
inc
imul
aaa
(bad)
call
jno
fld
mov
mov
mov
mov
ret
adc
(bad)
(bad)
(bad)
push
push
adc
xor
sub
es
(bad)
aas
xchg
bound
std
test
shl
xor
(bad)
(bad)
fcomip
add
pop
mov
add
scas
out
push
xor
or
sbb
dec
or
mov
lds
mov
stos
push
test
inc
cmps
stos
(bad)
stc
mov
call
fcom
jnp
loopne
mov
push
pop
add
(bad)
inc
adc
sbb
test
pop
(bad)
dec
lahf
int
stc
clc
(bad)
mov
xchg
mov
popa
xor
mov
cmp
push
and
es
icebp
xchg
lock
add
mov
and
jge
pop
pop
mov
push
rcr
xor
cmp
(bad)
jmp
mov
inc
in
cli
fimul
call
mov
lahf
(bad)
(bad)
fild
(bad)
fs
sub
pop
loopne
movs
add
push
icebp
dec
aam
(bad)
(bad)
jmp
rcl
mov
scas
in
mov
xchg
rcl
stos
inc
not
(bad)
das
cmp
in
(bad)
out
clc
dec
loope
dec
xchg
mov
mov
ds
in
mov
push
(bad)
push
test
out
xor
pop
(bad)
mov
scas
cwde
ins
in
test
and
or
ja
pop
sbb
cdq
movs
(bad)
inc
mov
push
hlt
lods
pop
dec
stos
jge
scas
ds
cmp
fnstenv
cmc
(bad)
(bad)
jmp
call
push
das
sub
imul
inc
mov
push
out
pop
ficom
and
fbstp
mov
dec
sub
mulps
inc
neg
adc
aas
aaa
push
pop
jle
push
xor
(bad)
(bad)
(bad)
(bad)
mov
js
mov
xchg
xchg
(bad)
enterw
pop
jecxz
and
repnz
(bad)
dec
ret
xor
(bad)
jmp
push
sub
jmp
loopne
pop
inc
sub
(bad)
mov
adc
das
(bad)
(bad)
(bad)
jmp
and
outs
(bad)
cld
stos
push
test
inc
sbb
inc
jbe
cmp
cwde
and
movs
daa
push
(bad)
mov
pop
xor
(bad)
stos
jns
sar
(bad)
(bad)
in
sub
cmc
sub
mov
push
cmp
enter
xchg
mov
pushaw
pusha
pop
lods
push
jns
pop
or
dec
push
cli
sub
call
mov
hlt
out
dec
pop
mov
adc
fs
ret
rcl
jl
jmp
push
js
jl
cmp
lock
lock
adc
fcmovne
call
repz
(bad)
mov
(bad)
jmp
xchg
ja
add
test
mov
call
or
mov
in
and
xlat
mov
imul
(bad)
(bad)
mov
and
in
jb
dec
(bad)
mov
pop
out
nop
clc
pop
cmp
(bad)
call
stos
rcr
mov
loop
bound
rcr
in
aad
clc
(bad)
(bad)
fldcw
xor
in
pop
(bad)
in
push
push
pop
pop
lahf
sub
(bad)
shr
mov
in
(bad)
(bad)
(bad)
dec
ror
dec
push
(bad)
cmp
mul
inc
jbe
shr
adc
jbe
push
mov
or
(bad)
(bad)
sti
mov
(bad)
xchg
call
jl
or
dec
cmp
push
and
push
iret
dec
enter
sub
jmp
(bad)
adc
cmps
enter
ret
adc
mov
jmp
fs
hlt
lahf
inc
loopne
jne
test
sbb
mov
ret
in
cmp
pop
cmc
jle
inc
jae
ss
or
retf
mov
sbb
rcl
imul
call
shr
jecxz
jecxz
add
push
mov
(bad)
mov
test
or
lods
bound
test
daa
xchg
push
xchg
mov
sbb
mov
mov
int3
xchg
mov
mov
and
xchg
(bad)
jmp
fstp
jbe
cmps
cmp
idiv
xchg
dec
icebp
aam
movs
mov
shl
pusha
push
into
add
mov
(bad)
jg
xchg
enter
pushf
in
lock
cld
iret
mov
test
cld
(bad)
inc
adc
adc
mov
loope
xchg
std
cwde
imul
(bad)
(bad)
(bad)
call
jnp
pop
dec
div
std
add
push
fmul
arpl
jne
add
popa
(bad)
jmp
cli
fiadd
lods
cmp
inc
(bad)
in
sub
jg
xchg
int3
push
aas
rol
movs
out
dec
sbb
or
inc
or
dec
bt
int3
icebp
xlat
in
sub
(bad)
(bad)
push
cdq
leave
xchg
icebp
mov
push
push
lock
arpl
(bad)
sub
jmp
(bad)
call
mov
add
mov
es
scas
imul
pop
push
push
add
(bad)
jmp
fdiv
scas
sbb
pop
pop
mul
fs
cmp
pop
sti
mov
push
cmc
les
mov
stos
xchg
ins
cmps
pop
aas
inc
mov
mov
jmp
inc
inc
ds
fcomp
test
mov
push
out
dec
call
adc
ds
imul
retw
stc
mov
(bad)
sahf
sar
scas
(bad)
(bad)
(bad)
push
or
je
fwait
xor
lea
adc
test
in
rcl
stc
cmps
cmps
ss
(bad)
(bad)
dec
outs
test
adc
xor
loope
cmp
(bad)
xlat
dec
cmp
and
or
stc
(bad)
call
std
add
mov
sbb
pop
mov
inc
jmp
aaa
fcomip
jo
ds
scas
ja
cld
jmp
movs
fdivr
fisttp
xlat
mov
test
jmp
jl
idiv
fldenv
inc
into
dec
daa
push
pop
xchg
and
outs
in
push
cmc
data16
iret
adc
lea
sbb
dec
repz
(bad)
mov
leave
adc
(bad)
jmp
nop
add
xchg
jb
jmp
mov
loop
xor
clc
inc
mov
(bad)
fcomip
dec
es
adc
dec
ret
inc
and
xor
lock
(bad)
jmp
cmc
xchg
ja
mov
jmp
aas
outs
sbb
sub
cmp
stos
and
dec
pusha
out
movs
pop
ret
push
rep
add
(bad)
(bad)
mov
jle
cmps
fwait
idiv
pop
scas
mov
pop
sti
(bad)
push
push
and
jmp
mov
mov
jmp
jmp
cli
pop
aaa
cdq
outs
lods
popf
xor
(bad)
call
nop
imul
push
jmp
xchg
push
int3
leave
repnz
mov
sbb
sti
or
test
(bad)
out
es
mov
stos
test
lahf
push
lds
int3
(bad)
mov
sub
mov
sbb
test
push
dec
ds
(bad)
(bad)
inc
sbb
push
call
ror
and
dec
sbb
ror
inc
(bad)
(bad)
(bad)
inc
jne
outs
repz
lock
add
adc
and
sub
scas
out
adc
add
mov
test
push
ret
fcomp
push
sahf
(bad)
(bad)
(bad)
dec
jns
sub
pop
cli
icebp
mov
std
rcr
repnz
mov
(bad)
inc
mov
and
jbe
xchg
into
dec
pop
out
xchg
mov
(bad)
lock
or
popa
fisttp
sub
std
test
mov
outs
pushf
loope
pop
sbb
imul
cmps
xchg
cmps
aaa
or
shr
xor
sbb
(bad)
dec
mov
adc
test
out
add
rcr
xor
fwait
adc
and
inc
mov
in
push
sub
(bad)
(bad)
(bad)
dec
or
sbb
adc
cmp
lock
inc
push
imul
(bad)
(bad)
call
xor
outs
gs
push
out
ja
sahf
xor
popa
out
push
std
int3
bound
(bad)
dec
inc
jno
push
inc
(bad)
loope
fcom
mov
(bad)
into
sti
test
sar
xor
mov
bound
pop
inc
add
loop
mov
jp
test
(bad)
(bad)
(bad)
jg
(bad)
jecxz
lods
loop
cdq
(bad)
mov
stos
(bad)
jmp
cmp
push
aad
je
push
inc
xchg
jns
mov
jg
jmp
stos
(bad)
cmp
push
stos
rcl
repz
xor
pop
aaa
jnp
gs
adc
jb
jno
ret
cli
push
dec
std
movlps
scas
jo
mov
test
in
mov
cmps
(bad)
and
call
sub
into
je
out
or
and
aas
jge
dec
imul
(bad)
xchg
aaa
or
pop
lods
sbb
mov
push
push
loopne
(bad)
xor
adc
out
fmul
(bad)
dec
(bad)
fiadd
and
call
jp
movs
shl
add
mov
(bad)
(bad)
(bad)
mov
jle
add
dec
sbb
sahf
je
mov
xor
xchg
test
fsub
(bad)
(bad)
(bad)
jnp
cmp
loop
pop
pop
cli
cdq
jg
mov
es
mov
inc
pop
cmc
sahf
js
stos
mov
sub
pop
outs
sub
mov
imul
xchg
push
adc
inc
(bad)
(bad)
jmp
ror
cwde
or
xchg
in
xchg
xor
(bad)
dec
xor
mov
xchg
xor
cmps
push
sbb
(bad)
(bad)
inc
pop
mov
ds
psrld
test
push
nop
jne
dec
les
jb
xlat
adc
jmp
fst
cmp
cmps
push
pushf
in
lock
out
sub
mov
(bad)
(bad)
(bad)
push
stc
cmp
mov
cmps
cmp
add
fwait
jae
mov
in
imul
pop
push
cld
add
in
xchg
mov
je
imul
gs
mov
mov
(bad)
mov
inc
mov
adc
add
jmp
(bad)
(bad)
(bad)
call
jb
jno
push
rcr
aas
add
loope
inc
gs
sub
pop
fiadd
call
std
(bad)
out
xchg
movs
in
shl
inc
ret
pop
mov
or
push
jmp
(bad)
push
int
cmp
sbb
inc
push
pop
mov
mov
retf
pop
fdiv
(bad)
mov
sbb
mov
inc
mov
in
sub
jl
pop
or
fs
adc
test
arpl
jle
fs
cwde
mov
(bad)
cli
push
outs
xchg
imul
jmp
(bad)
(bad)
(bad)
jg
add
in
rcr
fsubr
xor
inc
sub
mov
stos
cmp
jmp
cmps
retf
sbb
or
ins
out
call
test
in
imul
sbb
pusha
and
sub
call
adc
inc
pop
out
leave
mov
xchg
ds
jbe
mov
mov
(bad)
jmp
jmp
xor
repnz
sub
and
(bad)
(bad)
(bad)
jmp
test
loopne
inc
mov
fcom
pop
mov
cmp
(bad)
(bad)
(bad)
jmp
out
push
addr16
pop
sbb
out
mov
mov
add
add
push
inc
jp
(bad)
(bad)
(bad)
jnp
faddp
mov
leave
pop
push
gs
out
jnp
adc
rol
imul
ins
xchg
(bad)
(bad)
mov
push
dec
mov
hlt
sti
pop
add
out
sbb
call
sub
or
sbb
fnstsw
clc
leave
inc
push
out
aas
dec
or
cdq
pop
inc
mov
fdivr
jmp
retf
adc
xor
dec
sbb
call
test
pop
setg
repnz
das
sbb
xchg
mov
into
jl
(bad)
xchg
ret
xor
and
pop
test
jmp
xchg
pushf
stos
mul
ds
cs
jecxz
(bad)
(bad)
(bad)
call
mov
imul
sbb
les
and
cs
pop
in
adc
(bad)
inc
add
in
pop
cs
repz
int
imul
xchg
test
icebp
loope
add
(bad)
(bad)
push
mov
push
push
dec
mov
add
sub
add
mov
(bad)
(bad)
shr
adc
(bad)
jg
inc
inc
or
xchg
in
push
dec
sbb
outs
cmp
xchg
mov
mov
add
inc
pop
jbe
pop
ins
imul
je
mov
pop
push
xchg
cli
and
inc
adc
jmp
popf
loopne
adc
(bad)
pop
ret
pop
xchg
adc
pop
push
jg
jmp
mov
cmp
dec
sbb
scas
mov
jmp
jno
cs
cmps
add
lock
(bad)
(bad)
jmp
and
add
mov
xor
pextrw
mov
sbb
dec
mov
lds
push
adc
and
cmp
(bad)
call
jno
addr16
mov
ret
and
mov
cld
xchg
imul
(bad)
(bad)
inc
stos
pop
mov
xchg
mov
into
push
fsubr
sbb
jmp
(bad)
inc
retf
loop
push
inc
icebp
push
mov
pop
mov
imul
repz
(bad)
(bad)
inc
sub
out
mov
jae
jnp
mov
sbb
out
std
stos
or
pop
xchg
mov
and
ins
aas
not
ja
adc
mov
jmp
(bad)
jg
ins
enter
mov
adc
fcomp
jnp
test
pushf
ins
scas
adc
fdivr
push
cld
ds
xchg
jmp
in
push
mov
ins
(bad)
mov
mov
test
outs
clc
sub
sub
inc
xlat
mov
call
stos
pop
dec
ret
lea
push
cld
std
sbb
or
jle
outs
xor
repz
add
aaa
mov
dec
xchg
jmp
pop
add
(bad)
(bad)
(bad)
push
cs
push
jne
mov
aas
mov
cmp
pop
stc
cmp
call
adc
add
rcl
stos
add
sar
ss
mov
clc
pusha
cmp
xor
fcmovnbe
dec
cmp
(bad)
call
jmp
sbb
add
add
pop
push
rcl
mov
scas
sar
mov
pop
ficomp
jmp
sub
int3
sahf
pop
sub
call
cmp
inc
xchg
cld
dec
aaa
inc
adc
cld
xchg
mov
(bad)
jle
mov
jmp
(bad)
cwde
inc
xchg
imul
and
adc
adc
adc
pop
fstp
(bad)
(bad)
fnstsw
les
into
dec
out
dec
ror
adc
dec
aad
mov
popf
xchg
dec
pop
mov
lds
fild
or
fstp
push
dec
add
dec
mov
icebp
(bad)
(bad)
(bad)
jmp
sub
mov
jecxz
stos
sti
cmps
jb
imul
push
lock
fbstp
imul
push
adc
or
sub
jmp
sbb
fcomp
cs
push
pop
(bad)
(bad)
dec
cs
cwde
outs
adc
inc
stos
or
loope
aad
cmp
movs
adc
xchg
add
jmp
dec
fcmove
inc
push
sub
(bad)
(bad)
jmp
inc
movs
mov
scas
xchg
pop
inc
mov
in
aam
in
bound
inc
ja
cld
(bad)
(bad)
inc
xadd
bound
mov
bound
sub
fsub
mov
mov
jmp
sbb
mov
fs
pusha
cli
fucomp
pop
push
jge
mov
rcr
int3
pushf
mov
sub
or
fcomip
xchg
test
pop
mov
stc
int
(bad)
(bad)
fild
pop
les
jp
sbb
inc
mov
push
inc
pop
xchg
int
push
(bad)
call
(bad)
hlt
jmp
sahf
mov
push
out
cmps
icebp
ja
jl
jp
pop
mov
cli
(bad)
jmp
dec
pop
sbb
cmp
out
lods
in
mov
test
call
xchg
retf
and
xchg
pop
hlt
sbb
cdq
jge
(bad)
(bad)
(bad)
(bad)
mov
repnz
cmp
fidiv
aad
xchg
inc
mov
sub
xchg
out
int
ja
mov
dec
test
push
dec
sbb
(bad)
(bad)
(bad)
mov
cdq
and
pop
cli
out
mov
pop
dec
sbb
rcr
lock
fisubr
cmp
sbb
(bad)
call
cld
mov
jno
int3
cwde
(bad)
sub
xor
add
adc
ficom
pop
(bad)
(bad)
(bad)
call
(bad)
aaa
cmp
lea
fdiv
or
test
dec
adc
and
pop
adc
xchg
xchg
mov
(bad)
call
dec
jb
outs
xchg
lods
aad
pushf
ret
push
cdq
mov
lock
pop
movs
loope
sub
and
jg
jmp
jo
loope
rol
leave
popa
test
push
test
jecxz
test
(bad)
(bad)
(bad)
inc
je
cmp
and
aaa
pop
mov
sub
clc
mov
inc
arpl
pop
(bad)
(bad)
(bad)
dec
push
iret
les
jns
sbb
pop
xchg
pusha
xchg
aad
pop
cmc
scas
push
adc
dec
mov
(bad)
jmp
or
cmp
cmc
push
sbb
inc
jbe
and
adc
cld
(bad)
push
std
les
or
mov
ja
fcom
ss
(bad)
(bad)
call
jno
push
mov
ret
ret
xor
inc
fwait
arpl
pop
(bad)
hlt
sub
(bad)
call
cmp
in
ins
(bad)
(bad)
pop
(bad)
cmp
repnz
push
mov
dec
cld
(bad)
push
mov
jbe
clc
pop
scas
mov
inc
enter
(bad)
call
jbe
std
mov
or
jg
ret
xchg
repz
cmc
push
and
jp
jns
aaa
shr
jae
(bad)
(bad)
call
adc
leave
lahf
cmp
in
call
les
push
and
mov
mov
adc
aad
dec
or
ds
xchg
inc
jg
sub
or
jno
fnsave
add
(bad)
inc
arpl
les
jp
mov
dec
sub
hlt
cmp
(bad)
(bad)
dec
repnz
sbb
sbb
ins
arpl
(bad)
inc
in
(bad)
(bad)
call
test
mov
jae
jnp
je
mul
jae
or
pop
ror
sar
(bad)
(bad)
in
bswap
(bad)
pop
clc
aam
jno
dec
xor
xchg
js
test
adc
shl
fmul
nop
aas
and
sub
or
call
cmp
xchg
inc
imul
pop
hlt
push
mov
push
sub
jmp
mov
iret
inc
sub
dec
pop
mov
fmul
inc
repz
xor
mov
xchg
mov
test
cmp
imul
ss
(bad)
(bad)
push
mov
hlt
out
or
jl
xchg
enter
add
mov
ins
or
das
mov
and
idiv
(bad)
pop
daa
retf
imul
(bad)
(bad)
(bad)
cmp
test
fbld
dec
push
aas
lahf
loope
sbb
hlt
mov
in
cld
sub
in
or
(bad)
call
(bad)
pop
cmp
xchg
sub
or
vmwrite
push
sub
xlat
ins
push
push
dec
cmp
dec
fsub
mov
push
mov
in
and
adc
aaa
push
ss
out
adc
call
inc
mov
ins
push
add
mov
dec
lods
loop
jp
mov
(bad)
(bad)
jmp
stc
test
jecxz
cmp
mov
pop
retf
pop
sub
push
leave
out
xchg
mov
pop
add
sub
ds
(bad)
jmp
or
add
mov
stc
sahf
xchg
in
jb
adc
mov
(bad)
push
sub
jnp
fild
int3
jge
aaa
aad
cmps
je
jge
popf
inc
dec
hlt
das
dec
push
(bad)
dec
lock
shr
scas
sbb
cs
add
cmp
sub
(bad)
(bad)
(bad)
inc
out
xchg
mov
inc
fst
inc
pop
jbe
jecxz
jns
jmp
in
test
or
mov
xchg
jnp
retf
jb
and
mov
shl
ret
js
cmps
(bad)
(bad)
push
jmp
(bad)
push
fcom
inc
push
xor
mov
mov
inc
pushf
push
dec
cmp
add
(bad)
(bad)
rol
movs
jbe
repnz
je
adc
push
scas
or
sub
xchg
test
jmp
stos
mov
sbb
(bad)
mov
add
clc
(bad)
or
rcl
pushf
sub
(bad)
call
and
mov
jbe
jb
inc
and
push
lahf
xor
or
rcl
(bad)
jmp
dec
sti
out
add
stc
sub
dec
in
mov
jns
mov
sub
pop
jns
mov
bnd
xchg
xor
jge
dec
fld
mov
jmp
pop
or
mov
rol
mov
test
call
(bad)
(bad)
(bad)
jg
cmp
mov
sub
sub
push
pop
and
(bad)
cld
cmp
das
mov
mov
movs
(bad)
(bad)
(bad)
push
ret
mov
fdivrp
fcmovb
aad
into
fisub
mov
shrd
dec
(bad)
push
aam
rcl
mov
in
das
or
shl
sar
jmp
jnp
mov
and
clc
add
fldcw
sub
(bad)
(bad)
mov
xlat
scas
mov
adc
sbb
pop
push
mov
sbb
xor
xlat
xchg
mov
add
mov
pop
ds
hlt
push
inc
aas
pop
xor
inc
cmp
cld
pop
dec
cwde
push
pop
ja
bound
in
shl
push
add
xor
repnz
sbb
cmp
pop
pop
push
call
outs
popf
sahf
in
or
out
ds
std
dec
or
shr
(bad)
(bad)
mov
sbb
adc
popf
js
in
mov
stos
dec
dec
cmp
in
jbe
cmp
fst
outs
or
xlat
push
mov
sub
(bad)
cdq
retf
jg
(bad)
mov
imul
(bad)
mov
cmc
sub
jg
inc
or
(bad)
call
dec
sahf
lahf
lock
sbb
mov
mov
ds
(bad)
jmp
and
mov
sub
cdq
leave
(bad)
and
(bad)
(bad)
push
arpl
xchg
scas
pop
dec
xchg
cmc
pop
jo
int3
neg
fdivr
in
ret
inc
(bad)
(bad)
(bad)
(bad)
jns
out
test
hlt
addr16
push
cmp
mov
mov
out
pop
sub
push
inc
addr16
sub
(bad)
call
fnstsw
sub
cdq
movs
pusha
inc
pusha
stos
inc
leave
inc
pop
lods
setl
jg
mov
mov
mov
pop
push
aas
imul
add
sub
push
outs
repz
xchg
ja
adc
(bad)
(bad)
dec
add
jl
xor
inc
xchg
pop
xchg
js
xchg
shl
jns
xchg
(bad)
ds
mov
call
mov
push
retf
(bad)
cmc
push
shl
cmp
ret
cmps
and
inc
pop
pushf
(bad)
jecxz
retf
xor
getsec
jg
and
mov
(bad)
(bad)
(bad)
cmp
call
inc
stos
and
lods
mov
imul
and
js
cmps
(bad)
(bad)
(bad)
jmp
stos
and
int
ret
scas
or
push
and
pop
dec
pusha
mov
xchg
cli
ret
aam
jnp
es
xchg
lods
xor
and
outs
adc
repnz
mov
pusha
and
call
ins
mov
cmp
leave
push
fldz
and
out
xchg
push
fisubr
ins
pusha
jl
mov
or
jmp
retf
fidiv
(bad)
add
or
adc
inc
pusha
fld
sbb
cli
inc
sbb
fist
inc
sar
or
popf
popa
sbb
pop
bound
retfw
pop
(bad)
(bad)
(bad)
(bad)
cli
xchg
inc
inc
js
adc
test
int3
mov
scas
in
inc
pusha
jae
repz
inc
jns
fstp
dec
dec
rol
call
addr16
das
cmps
scas
iret
popf
inc
imul
jb
adc
xor
or
fcomp
div
cdq
adc
(bad)
jg
and
push
addr16
add
and
int3
je
xlat
mov
add
xor
inc
push
mov
(bad)
jmp
cmc
movs
lods
stc
pushf
rol
fcom
(bad)
push
adc
or
add
call
int
test
or
out
iret
test
xchg
jp
ud0
ror
add
sbb
cmp
inc
fsub
xor
lock
popa
fidivr
push
les
and
cmp
mov
push
call
mov
(bad)
and
loopne
mov
cld
mov
push
push
adc
mov
mov
std
loop
inc
mov
cdq
and
(bad)
jmp
adc
jmp
loop
sub
adc
inc
(bad)
ds
jp
and
pop
mov
push
pop
outs
xchg
out
scas
mov
xor
xor
mov
test
ja
(bad)
jg
fcomip
and
mov
lods
pop
fdiv
fmul
pop
int
(bad)
(bad)
dec
mov
lock
add
movs
ror
pop
call
push
xor
das
lods
(bad)
(bad)
(bad)
(bad)
jp
cmps
add
in
add
ror
test
cs
(bad)
mov
cmp
pop
loopne
pop
mov
jmp
jmp
add
sub
dec
addr16
(bad)
mov
dec
dec
pop
test
and
movs
xchg
sbb
and
sahf
pslld
mov
lods
inc
fs
aaa
and
cs
adc
(bad)
call
ja
xchg
jle
inc
jb
mov
aam
fdivp
jmp
pop
add
jle
imul
(bad)
(bad)
aas
jne
adc
dec
shl
mov
adc
(bad)
mov
inc
inc
inc
(bad)
jno
(bad)
jmp
mov
loopne
add
fs
or
test
mov
sbb
sub
(bad)
je
sti
inc
fld
push
(bad)
(bad)
cmp
xor
ficom
and
mov
cmc
mov
pop
pushf
stos
mov
mov
and
nop
cmp
ret
cmp
add
vpsubw
xchg
fnsetpm(287
mov
loopne
dec
cmp
cmp
pusha
jge
(bad)
jp
(bad)
(bad)
(bad)
jmp
movs
cmp
mov
shr
jb
xchg
jmp
addr16
movs
scas
lds
lods
bound
and
xor
adc
pop
out
in
jmp
mov
cmp
out
xchg
outs
push
add
inc
lds
lahf
cmc
mov
cli
dec
mov
dec
jbe
push
or
inc
xchg
adc
inc
cld
xchg
pop
ins
rcl
fsubr
add
pop
mov
cmp
or
mov
popa
inc
lods
call
mov
dec
popf
leave
add
out
aam
(bad)
inc
pop
xlat
(bad)
(bad)
and
inc
inc
or
jecxz
dec
mov
push
mov
(bad)
call
sbb
push
mov
std
xchg
gs
in
mov
pop
dec
(bad)
inc
sub
mov
sbb
out
push
push
jp
out
scas
setg
(bad)
(bad)
(bad)
mov
add
dec
cwde
aam
lods
push
jb
pop
push
sti
cwde
pop
xchg
jne
retf
enter
and
jmp
ror
push
jle
xchg
ror
(bad)
(bad)
push
fadd
sbb
shr
xchg
int3
xor
aas
sar
(bad)
(bad)
(bad)
push
sbb
cdq
add
fistp
js
pushf
ficomp
or
inc
sub
push
std
pop
ds
(bad)
dec
leave
test
push
xchg
shl
pop
lea
pop
(bad)
(bad)
(bad)
dec
add
ror
dec
or
pop
cmc
pop
dec
mov
lds
(bad)
stc
dec
xor
jle
pop
jg
call
sub
test
xor
cmps
aam
mov
cmp
fs
add
mov
imul
(bad)
mov
sbb
or
pop
cmp
outs
push
jns
rol
into
push
mov
(bad)
push
test
lock
(bad)
rcr
leave
loope
cmp
adc
mov
push
push
mov
jmp
les
(bad)
dec
(bad)
scas
ins
movs
jmp
jno
movs
loopne
sti
push
and
fist
call
fld
cmp
jae
lods
icebp
loope
cmp
or
bound
mov
adc
cmps
add
call
jne
jne
out
mov
sbb
call
mov
mov
jnp
cs
in
lods
gs
push
mov
(bad)
(bad)
call
out
sub
ja
lock
jne
sbb
fidivr
data16
inc
popa
mov
(bad)
(bad)
aas
mov
mov
out
aam
add
or
mov
out
arpl
sub
inc
jmp
or
popa
rcl
icebp
outs
stos
push
jp
or
add
(bad)
(bad)
aas
inc
addr16
lds
mov
dec
in
fdiv
out
adc
dec
and
mov
out
xchg
pmuludq
(bad)
inc
push
or
(bad)
hlt
icebp
addr16
xor
mov
call
cs
xor
and
es
dec
inc
outs
(bad)
xlat
adc
xor
mov
loope
(bad)
(bad)
(bad)
inc
(bad)
sub
neg
sbb
sbb
cmps
mov
push
mov
cmp
(bad)
(bad)
(bad)
inc
ret
mov
dec
mov
and
push
nop
in
lods
xchg
jbe
ret
xlat
xor
dec
ins
push
ja
ss
sub
cmc
or
into
ins
jle
inc
mov
popa
leave
mov
adc
call
jg
pop
movs
and
sub
(bad)
(bad)
(bad)
js
cmps
pop
retf
es
outs
pop
sub
imul
jecxz
cmp
add
mov
mov
mov
mov
jge
pop
out
sub
mov
dec
mov
add
sbb
mov
stc
xchg
add
les
sub
ret
sbb
(bad)
(bad)
inc
cmp
dec
fdivr
push
shr
stc
jg
jg
push
dec
sbb
imul
scas
sub
loop
dec
pop
xor
(bad)
sbb
(bad)
(bad)
call
call
cmps
dec
add
not
(bad)
scas
cld
cmps
sti
loopne
scas
(bad)
mov
sbb
xchg
mov
sbb
jae
js
jmp
and
clc
mov
(bad)
cld
mov
retf
shl
les
fwait
cmps
(bad)
mov
xchg
adc
vmovntpd
push
nop
add
leave
neg
sahf
adc
mov
(bad)
(bad)
dec
test
int
cmp
push
rcl
push
clc
jb
add
cmp
sbb
loopne
out
and
adc
call
int3
mov
or
add
add
cmps
mov
add
mov
inc
(bad)
(bad)
(bad)
dec
sbb
cmps
sbb
xor
psadbw
out
arpl
mov
xor
jae
(bad)
(bad)
push
jmp
push
shl
das
leave
and
jb
addr16
repz
(bad)
jns
out
(bad)
adc
dec
clc
mov
test
shl
adc
std
inc
clc
shl
jmp
loope
pop
dec
lock
or
fdivr
call
clc
xlat
arpl
jle
adc
push
into
inc
add
or
or
sbb
mov
ins
ss
mov
loop
adc
idiv
jmp
in
sbb
fcom
(bad)
(bad)
(bad)
(bad)
jl
mov
fisttp
xchg
pusha
pop
(bad)
hlt
sbb
jp
frstor
pop
or
xchg
and
dec
out
and
pop
(bad)
aad
jl
scas
mov
out
outs
add
xor
clc
push
push
hlt
inc
mov
bnd
std
dec
(bad)
(bad)
(bad)
call
pop
cdq
mov
xor
int
sub
in
add
push
arpl
(bad)
jmp
xchg
dec
push
fsub
nop
dec
test
jl
add
pop
xor
pop
mov
hlt
add
add
into
jmp
(bad)
push
mov
sub
mov
sbb
add
inc
add
(bad)
(bad)
mov
retf
fild
mov
ret
sti
xchg
stos
pop
add
jg
or
mov
cmp
xor
in
dec
in
arpl
imul
pop
xchg
js
add
dec
sub
pop
lock
pop
dec
ss
or
pop
pop
xor
movs
test
repnz
test
cmp
das
sar
dec
or
shl
cs
cmc
xchg
pop
push
into
sar
lods
mov
lahf
pop
mov
mov
adc
sbb
add
xor
out
in
call
add
inc
jmp
cmp
mov
adc
sbb
dec
cld
jmp
pop
test
or
jp
(bad)
jmp
inc
or
mov
cmps
(bad)
sbb
enter
and
sbb
sub
sahf
pop
sub
enter
test
sbb
pushf
mov
sar
dec
sbb
ficom
inc
sub
xchg
inc
and
pop
retf
pop
jns
aam
call
stos
push
mov
movs
mov
inc
movs
xchg
lods
add
aam
sar
retf
in
xchg
iret
push
cwde
retf
xor
and
(bad)
(bad)
jg
add
cdq
popa
call
stc
pop
jo
mov
push
ret
out
inc
xchg
and
fldenv
inc
ret
repz
jmp
(bad)
jmp
sbb
iret
adc
dec
cld
enter
mul
jo
push
ja
xchg
mov
nop
(bad)
(bad)
mov
jno
aad
into
inc
mov
int3
inc
mov
pop
dec
push
(bad)
(bad)
(bad)
jmp
mul
dec
lock
adc
dec
sub
ja
cmp
or
(bad)
(bad)
(bad)
push
mov
popa
xor
sahf
sbb
hlt
out
cmps
dec
dec
xchg
inc
ds
test
out
mov
or
sbb
jge
in
xor
or
(bad)
inc
inc
aaa
xlat
movs
xchg
and
inc
pop
test
ss
(bad)
jmp
ss
repnz
js
lock
(bad)
ins
psubusb
mov
sub
test
outs
jg
jl
scas
xchg
outs
(bad)
cli
add
mov
stos
sub
es
std
(bad)
jmp
nop
jl
nop
inc
sub
add
cld
test
test
(bad)
(bad)
(bad)
cmp
xchg
mov
in
and
lods
fs
xchg
call
push
(bad)
fcomip
call
imul
movs
div
sbb
push
xchg
out
or
movs
fistp
(bad)
(bad)
dec
loope
imul
and
inc
pushf
push
je
xor
mov
in
movs
and
imul
mov
es
xchg
fwait
div
xchg
clc
aaa
pop
popf
sub
jne
or
sub
mov
cmp
xor
or
sub
(bad)
in
std
(bad)
in
(bad)
adc
jbe
(bad)
sub
pop
sbb
(bad)
(bad)
(bad)
out
xor
mov
imul
shl
addr16
(bad)
(bad)
cmp
lahf
jge
stc
js
push
and
ss
jns
xchg
icebp
dec
xchg
and
mov
mov
rcr
mov
mov
mov
adc
div
popf
sub
in
mov
mov
or
jne
int
inc
cld
(bad)
fnsave
cmps
cmps
aaa
(bad)
mov
jmp
xor
pusha
sub
push
cli
sbb
(bad)
(bad)
cmp
loopne
adc
aas
scas
mov
imul
xor
jmp
(bad)
(bad)
(bad)
push
iret
dec
push
adc
test
cmp
and
ret
add
jmp
in
(bad)
jmp
sbb
xchg
nop
adc
jge
add
jmp
es
(bad)
(bad)
push
pop
rcr
ret
add
retf
movs
xor
xchg
dec
fwait
push
test
pop
cmps
dec
push
lea
push
call
pop
push
dec
push
cmp
(bad)
jge
dec
inc
dec
pushf
jg
dec
mov
jbe
(bad)
lock
(bad)
jmp
inc
test
mov
adc
xor
in
mov
pop
xor
jmp
dec
sti
daa
pop
mov
and
pop
fisubr
add
cli
pop
iret
(bad)
(bad)
mov
ret
not
jecxz
inc
pop
and
es
scas
sub
inc
mov
mov
icebp
fild
(bad)
aad
int
inc
jo
in
inc
mov
pushf
jne
std
(bad)
jmp
add
pusha
mov
pop
clc
cwde
test
(bad)
out
movs
lods
add
sub
push
repz
adc
or
loopne
(bad)
cmp
mov
pop
movs
push
outs
mov
push
int3
push
adc
xchg
(bad)
(bad)
(bad)
call
dec
mov
inc
and
movs
xchg
mov
mov
push
cmp
mov
xchg
inc
mov
test
test
add
lock
bound
mov
shr
cmp
xlat
pop
test
(bad)
(bad)
dec
sar
mov
xor
xchg
dec
push
push
out
fcomip
(bad)
jg
xor
sub
shr
retf
ficomp
ss
fisttp
sahf
xor
sbb
enter
adc
call
mov
xor
popa
hlt
scas
xchg
mov
add
jmp
jbe
(bad)
pushf
jg
mov
jg
dec
sub
jle
cmps
call
and
rol
mov
out
or
in
mov
push
test
iret
or
aas
repnz
pop
xor
push
imul
bound
mov
push
cwde
sbb
mov
mov
dec
mov
(bad)
(bad)
(bad)
(bad)
jns
in
sbb
mov
sbb
in
in
ror
fs
sar
shr
(bad)
(bad)
call
das
add
or
setl
popf
jl
jb
mov
stos
sub
in
push
jno
(bad)
pop
pop
add
loope
mov
scas
xor
sub
jae
sbb
and
cld
hlt
(bad)
(bad)
(bad)
dec
dec
fidiv
add
jae
inc
mov
xor
mov
inc
int3
cmc
xchg
(bad)
dec
fsub
aam
xor
inc
add
sbb
sbb
jnp
jno
stos
(bad)
(bad)
(bad)
call
mov
outs
inc
adc
(bad)
fcmovu
repz
lea
sub
out
rcr
lock
inc
sbb
and
ins
sahf
aam
or
jmp
cmp
(bad)
(bad)
(bad)
push
xor
mov
(bad)
xchg
outs
cmc
scas
aas
xchg
pop
cmps
aas
mov
scas
sbb
xchg
out
add
(bad)
(bad)
cld
mov
add
ficomp
dec
in
(bad)
(bad)
push
cld
out
add
dec
es
mov
mov
pop
retf
lock
sbb
call
and
jecxz
iret
fwait
jmp
xchg
in
mov
dec
mov
pusha
jnp
outs
loopne
arpl
or
push
or
shl
cdq
xchg
lock
(bad)
(bad)
mov
cdq
pop
test
bound
lds
ins
cli
jp
sub
sbb
or
daa
mov
or
cmp
(bad)
(bad)
push
popa
xbegin
loopne
mov
pop
pop
push
outs
adc
sub
mov
sbb
ds
loopne
jl
fnstenv
sub
pop
inc
xlat
push
inc
pop
ds
in
and
fdivrp
(bad)
call
dec
mov
(bad)
or
cmp
call
rol
add
(bad)
(bad)
dec
retf
and
inc
pop
mov
add
adc
add
stc
sbb
xor
mov
add
inc
xchg
pop
fild
sbb
cs
shl
dec
xor
pop
mov
mov
int3
gs
(bad)
(bad)
push
add
jl
and
sbb
mov
mov
pop
ret
pop
in
inc
pusha
push
das
sar
mov
not
test
push
sub
sbb
fdiv
clc
jbe
icebp
(bad)
jmp
movs
rcr
pusha
ficomp
sub
and
shl
shl
(bad)
(bad)
call
pop
ret
test
sbb
call
je
(bad)
cli
cmp
lds
dec
repz
call
jmp
scas
(bad)
xchg
mov
xchg
mov
xchg
dec
or
jmp
mov
mov
retf
ja
test
or
call
jb
outs
jle
pop
pop
add
sbb
in
or
xchg
or
(bad)
mov
mov
sub
and
sub
lods
fistp
ja
out
cmp
sub
mov
push
movs
test
mov
sub
jg
neg
xor
and
sar
mov
lods
mov
std
push
out
(bad)
and
pop
mov
call
enter
sbb
sub
inc
dec
mov
(bad)
inc
cld
or
adc
into
daa
mov
pop
jo
xchg
dec
in
aam
(bad)
dec
pop
fisub
adc
push
adc
xchg
inc
es
(bad)
(bad)
dec
loopne
mov
xchg
ret
dec
fadd
pushf
das
fs
in
fmul
(bad)
(bad)
call
fcmovnb
in
stos
or
and
clc
cmp
cmp
push
das
or
inc
adc
inc
cmp
(bad)
push
sbb
mov
loopne
dec
jl
adc
imul
(bad)
cli
(bad)
push
pop
ins
lods
mov
(bad)
dec
dec
mov
not
cdq
rol
pop
and
sbb
sbb
data16
cli
push
push
mov
shl
pushf
mov
cmps
scas
stos
push
sub
ins
cmps
in
or
mov
inc
xchg
fist
jmp
sub
retf
(bad)
cmp
dec
(bad)
(bad)
(bad)
mov
push
in
add
(bad)
mov
loope
jns
outs
cmc
mov
inc
or
adc
les
(bad)
(bad)
jmp
push
std
mul
dec
fild
ins
mov
test
sub
ret
(bad)
(bad)
(bad)
inc
dec
fdivr
cmp
jo
push
inc
jp
push
cld
(bad)
jae
stc
pop
daa
out
(bad)
push
stos
clc
int
fnstcw
jne
xchg
xor
jg
jle
fwait
in
movs
mov
cmp
jo
lods
mov
push
aad
add
nop
jno
imul
(bad)
mov
push
dec
push
lods
pop
xor
jl
sbb
leave
aad
jno
outs
call
xor
jae
jmp
sbb
scas
std
mov
jo
pop
or
fucomp
push
jno
(bad)
and
aas
ret
(bad)
inc
mov
(bad)
push
mov
mov
aas
pop
mov
jle
je
jmp
mov
ror
outs
stc
jb
movs
cdq
pop
retf
(bad)
(bad)
(bad)
(bad)
mov
xor
pop
sub
mov
pop
hlt
inc
mov
jo
out
hlt
jl
push
sbb
scas
push
aas
std
fbld
iret
fnstcw
outs
dec
dec
shl
push
scas
inc
pop
cmp
push
inc
aam
mov
int3
ss
(bad)
cmp
cld
xchg
sub
jecxz
(bad)
jmp
pusha
cmp
jb
sar
(bad)
(bad)
call
outs
pop
(bad)
mov
lods
popf
dec
and
(bad)
ror
jmp
sbb
jg
push
sbb
(bad)
(bad)
jmp
outs
mov
in
pop
or
aam
jmp
ins
in
and
fidivr
adc
cmps
aad
(bad)
(bad)
dec
cmps
or
iret
add
in
inc
stos
int
popf
xchg
es
xchg
mov
mov
inc
add
mov
sahf
mov
mov
and
ds
ret
sbb
movs
xlat
cmc
jp
(bad)
(bad)
call
arpl
cwde
push
fnstenv
xchg
cwde
mov
vorps
and
loopne
(bad)
call
test
out
lods
push
call
aas
jns
jbe
pop
pop
fdivrp
(bad)
call
loop
pop
mov
or
dec
test
sbb
aad
jnp
inc
fiadd
(bad)
jg
jmp
cmps
pop
ret
ret
xchg
add
je
(bad)
xor
or
or
aam
stos
sbb
out
pop
jnp
jo
xchg
cmp
inc
cs
out
inc
repz
lahf
mov
(bad)
(bad)
call
jne
push
cmc
(bad)
sbb
jnp
jle
scas
mov
stos
je
add
adc
cmc
push
add
pop
ret
loop
or
fiadd
push
jb
aaa
mov
add
or
add
sbb
enter
pop
xor
pop
mov
ds
jmp
sub
pop
(bad)
(bad)
cmp
adc
movs
or
lahf
mov
dec
(bad)
(bad)
call
movs
aad
test
inc
rol
push
sub
push
xchg
jmp
cld
inc
adc
(bad)
(bad)
call
dec
into
mov
inc
shr
mov
and
xor
mov
lock
(bad)
adc
inc
out
pop
out
ret
pusha
add
(bad)
call
cli
cmp
pop
out
test
jo
push
repz
movs
xchg
dec
inc
hlt
add
shr
push
stos
pop
ror
or
jmp
(bad)
push
sub
inc
mov
test
(bad)
pop
mov
dec
aaa
cld
(bad)
jmp
sub
ja
scas
test
and
push
nop
bound
hlt
inc
xlat
sbb
mul
mov
call
mov
xchg
jbe
leave
pop
inc
pop
shl
test
sbb
movs
mov
ja
inc
in
fld
addr16
les
dec
cmps
dec
movs
out
in
aam
jp
and
aas
jae
es
(bad)
(bad)
inc
xor
aad
rcr
out
into
ftst
cld
add
mov
scas
jae
mov
mov
stos
dec
inc
jle
xor
(bad)
(bad)
call
enter
stc
cli
arpl
mov
fcom
sbb
call
or
dec
jne
div
retf
loope
push
frstor
or
cld
(bad)
dec
mov
inc
in
imul
jp
or
out
mov
mov
mov
inc
inc
aas
pop
mov
mov
sbb
mov
cmp
mul
dec
push
(bad)
scas
sbb
fs
(bad)
jmp
add
test
ror
std
mov
ds
std
jmp
stc
mov
jnp
pop
std
scas
ss
inc
adc
xchg
mov
scas
xor
cmp
xchg
std
aam
mov
jmp
mov
lahf
cwde
add
lock
dec
sub
lahf
pop
mov
shl
inc
rsqrtps
xor
xor
mov
loopne
imul
jp
(bad)
(bad)
sbb
lock
into
call
add
shl
fidiv
xor
clc
dec
inc
jmp
mov
fcomp
ror
pop
xchg
mov
sbb
mov
push
push
imul
add
retf
adc
test
(bad)
(bad)
out
lods
cmovbe
and
je
scas
ficomp
int3
cs
ins
std
adc
sbb
inc
sbb
ficom
inc
cs
js
retf
dec
push
js
xor
arpl
cmc
(bad)
dec
fmul
cmps
cmp
outs
sar
adc
xor
jnp
cmp
and
add
sbb
out
fld
sbb
cmp
add
adc
xlat
in
fwait
sub
scas
rol
lods
jmp
(bad)
mov
inc
ret
pop
aam
add
push
inc
call
xchg
pop
push
dec
dec
adc
(bad)
(bad)
(bad)
(bad)
fst
lods
sbb
jns
inc
popf
pop
adc
pop
std
bnd
inc
loope
xchg
sub
movs
std
mov
(bad)
(bad)
jmp
and
and
xchg
ffreep
out
pop
fidivr
cmp
jl
cmp
call
push
out
jl
sub
(bad)
(bad)
(bad)
jmp
sbb
pop
push
xor
(bad)
mov
movs
inc
mov
fsub
(bad)
jmp
sbb
call
ds
mov
das
popa
adc
(bad)
mov
das
mov
sbb
lods
cmc
cdq
adc
imul
cmp
mov
or
(bad)
(bad)
call
xchg
cmp
imul
jge
cmp
sbb
into
js
(bad)
(bad)
(bad)
push
fwait
cld
aas
fisub
nop
jb
jecxz
fidivr
ffree
jge
mov
ret
or
test
(bad)
(bad)
push
fsub
and
mov
push
xchg
fcompp
dec
stos
aaa
push
arpl
clc
mov
out
xlat
adc
mov
fisub
mov
(bad)
(bad)
(bad)
jmp
push
sub
jne
jmp
pop
push
ret
ds
and
sub
dec
adc
jmp
loope
pop
pusha
repnz
add
daa
cli
mov
mov
mov
xchg
pop
hlt
xor
fisttp
ret
adc
xor
popf
int3
sub
add
call
mov
and
sub
sbb
inc
and
xor
xchg
sbb
out
mov
fnstcw
xor
lea
arpl
push
xor
adc
sub
add
cwde
test
bound
jmp
fsub
scas
dec
cmp
jb
push
pop
dec
push
inc
mov
imul
mov
xor
pop
xor
cld
push
pop
dec
sbb
pop
(bad)
fcom
stos
repz
loopne
(bad)
(bad)
inc
and
and
js
xlat
outs
pop
xor
mov
(bad)
(bad)
jle
fstp
movs
enter
mov
out
dec
js
cmps
imul
mov
retf
(bad)
call
jno
call
mov
imul
clc
repz
mov
jmp
or
push
xor
sub
stos
fmul
(bad)
mov
cmp
fild
jg
int3
adc
mov
sti
(bad)
(bad)
(bad)
(bad)
jg
inc
and
mov
shr
ror
jle
mov
aaa
xchg
je
shr
ins
dec
jmp
mov
call
jb
cmps
and
jnp
inc
das
and
mov
inc
(bad)
mov
push
or
test
dec
pop
pop
test
mov
stos
push
mov
cmp
inc
leave
cli
out
mov
push
lds
enter
icebp
mov
ds
fdivrp
retf
ret
(bad)
(bad)
(bad)
(bad)
stc
jge
jg
pop
and
fmul
inc
ins
nop
pop
shr
ins
jp
cld
jg
shr
gs
mov
hlt
add
(bad)
mov
mov
cwde
mov
add
outs
push
pop
pop
mov
pop
daa
daa
add
dec
adc
cmp
push
(bad)
(bad)
jmp
jle
pop
xor
inc
or
out
add
popa
sahf
cli
mov
clc
retf
(bad)
and
inc
in
add
jg
mov
or
daa
inc
nop
adc
out
loopne
add
enter
cmp
inc
push
sbb
popf
sbb
mov
(bad)
(bad)
(bad)
icebp
xor
xor
jo
enter
mov
push
shl
jge
and
(bad)
(bad)
jmp
jb
test
jno
es
arpl
sub
xchg
lahf
mov
fadd
call
push
(bad)
call
mov
mov
out
rcr
inc
and
adc
push
js
add
pop
popa
ja
out
jmp
xor
jmp
xchg
(bad)
stos
push
jp
add
ret
call
std
call
aaa
xchg
pop
sbb
mov
test
push
cmp
sbb
outs
shr
pop
sbb
leave
(bad)
(bad)
(bad)
(bad)
dec
movs
pop
mov
dec
out
xor
push
xchg
sub
push
xchg
sbb
(bad)
(bad)
jmp
dec
pushf
cmp
cmc
sar
dec
lock
imul
idiv
and
lods
loope
or
dec
mov
clc
(bad)
(bad)
call
(bad)
sbb
scas
or
push
retf
in
push
adc
retf
lods
pop
inc
ret
mov
mov
(bad)
call
adc
retf
cld
cs
pop
push
loopne
xchg
xor
add
cmp
pop
je
sbb
in
addr16
push
xlat
nop
es
call
inc
pop
outs
dec
out
addr16
popa
lds
cmp
mov
and
jmp
jg
psrad
icebp
push
xchg
ins
cmp
adc
ja
pop
scas
or
sbb
in
inc
cld
(bad)
dec
push
pusha
pop
cmp
je
sbb
enter
(bad)
(bad)
jg
jle
mov
enter
ins
cwde
xor
test
cmp
jg
hlt
ret
dec
ret
jmp
push
sub
sti
fcomp
jns
stos
(bad)
inc
sbb
add
sbb
pop
in
and
or
out
rol
es
dec
movs
xlat
(bad)
mov
sub
lahf
push
jge
push
sbb
sbb
sub
inc
sar
(bad)
(bad)
dec
fdivr
xor
lahf
xor
push
and
dec
adc
cld
imul
xchg
jge
cmp
cld
jg
cmp
or
push
dec
cli
pushf
sub
cmp
(bad)
pop
rol
jmp
and
ins
jb
(bad)
(bad)
(bad)
dec
loopne
sbb
movs
cmps
sub
mov
mov
pop
ds
cdq
sahf
into
adc
(bad)
in
or
pushf
xchg
loope
jle
push
cmc
inc
xchg
cmc
xchg
(bad)
(bad)
inc
fcom
inc
jb
sahf
xchg
mov
ds
test
dec
call
repz
rcl
push
call
push
mov
out
or
sbb
lods
adc
and
cmp
dec
movs
or
inc
outs
xor
add
std
inc
stos
lods
fs
pop
mov
jp
pop
mov
stos
and
ins
fsubr
dec
pop
loopne
dec
mov
mov
out
test
retf
mov
xchg
(bad)
fild
int3
in
push
lahf
mov
xor
(bad)
mov
lahf
das
pop
sub
jmp
cmp
enter
imul
jmp
movs
shr
int
push
sti
js
aad
adc
(bad)
jb
xchg
das
(bad)
(bad)
(bad)
jmp
cmp
jmp
sti
in
(bad)
sbb
push
sbb
xchg
jbe
jno
(bad)
(bad)
inc
int
bound
es
and
aam
push
xchg
and
(bad)
or
xchg
lods
arpl
pop
pop
adc
out
fcmovnu
cld
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jns
pop
push
(bad)
(bad)
mov
pop
outs
js
imul
shl
push
or
xchg
jg
dec
sub
out
out
adc
xor
(bad)
(bad)
mov
adc
fwait
call
push
fiadd
rol
pop
xchg
(bad)
(bad)
call
enter
cmp
cld
stos
push
sub
sbb
test
mov
add
(bad)
(bad)
(bad)
(bad)
jle
and
call
les
pop
jge
out
cmps
push
(bad)
push
inc
inc
xchg
out
push
(bad)
daa
jecxz
add
xor
sbb
sets
sbb
int3
sub
je
(bad)
sbb
sar
push
push
aam
(bad)
(bad)
mov
sub
sub
in
fisttp
and
mov
(bad)
(bad)
dec
sub
xor
js
addr16
inc
xor
ret
std
and
xor
xchg
test
push
outs
sbb
(bad)
(bad)
(bad)
inc
ds
adc
imul
fldenv
inc
les
and
mov
test
xchg
add
sbb
mov
xor
jp
push
repnz
stos
push
jmp
fild
pop
jle
xchg
imul
xor
aad
jbe
push
data16
imul
jmp
out
mov
in
stos
cmc
ror
add
jecxz
(bad)
(bad)
call
mov
mov
xchg
js
sbb
cli
sbb
call
jnp
lods
icebp
loope
mov
out
dec
sar
shl
jne
in
mov
mov
in
fucomip
jg
jbe
(bad)
fmulp
jbe
cs
gs
(bad)
(bad)
pop
call
(bad)
jmp
pop
in
dec
jns
loope
popf
sti
jno
add
cmp
push
mov
jnp
cmp
not
pusha
pop
jp
and
(bad)
dec
loopne
ins
xchg
mov
daa
movs
pop
mov
ja
test
hlt
js
cmps
inc
add
or
or
lock
push
idiv
stos
mov
out
xchg
mov
and
cmp
mov
cmp
push
(bad)
fwait
pop
je
xchg
fucomp
mov
data16
out
inc
inc
clc
mov
or
xchg
aam
(bad)
adc
pusha
(bad)
(bad)
(bad)
push
jl
in
inc
fbld
movs
xchg
das
adc
daa
xor
pop
pop
test
jb
fwait
xchg
(bad)
(bad)
(bad)
inc
sub
adc
outs
in
mov
lahf
sar
jmp
pushf
lods
push
jp
enter
cmp
mov
adc
push
daa
out
fsub
test
(bad)
(bad)
inc
add
and
jnp
push
ins
sbb
dec
and
mov
(bad)
(bad)
(bad)
fyl2x
imul
sbb
in
mov
push
xchg
dec
std
es
jg
loopne
rol
in
lds
or
push
add
jle
imul
popa
sbb
sbb
dec
sub
inc
popf
ja
pusha
push
loopne
adc
sbb
pop
cld
jmp
push
push
sbb
adc
sub
adc
add
pop
pop
cmp
push
push
ss
int
push
dec
push
(bad)
rcr
pop
add
stc
ins
add
lock
ins
fwait
out
loopne
and
cs
ds
dec
shr
ret
push
loopne
and
or
arpl
scas
inc
mov
cmp
dec
push
cld
imul
popf
push
mov
push
sbb
fs
cmp
cs
mov
push
and
mov
fsubr
nop
jl
mov
clc
jg
push
fistp
push
js
xor
or
add
jno
xchg
cmp
sbb
pop
fcom
outs
adc
iret
nop
stc
mov
inc
adc
(bad)
gs
pop
add
dec
add
add
lock
and
ror
lods
dec
dec
mov
cld
sbb
push
or
pop
clc
jg
push
shl
add
ret
rcl
pop
dec
add
xchg
sbb
push
pop
pop
pop
xchg
pop
daa
aaa
inc
es
jo
pusha
sub
add
addr16
push
push
push
push
pop
daa
aaa
inc
add
push
push
ror
dec
clc
pop
pop
(bad)
jg
add
(bad)
clc
or
push
addr16
loopne
mov
add
daa
push
out
sti
mov
pop
pop
daa
add
inc
inc
addr16
mov
arpl
iret
xlat
cld
iret
add
pop
cld
pcmpgtd
inc
pop
pop
daa
cld
cmova
mov
ins
addr16
addr16
stos
jle
ja
inc
add
in
jecxz
push
and
inc
xchg
daa
stos
xchg
add
mov
inc
ja
inc
push
loopne
jae
ins
adc
(bad)
popa
hlt
div
popf
pop
and
inc
clc
addr16
jg
cmps
mov
or
aaa
sbb
sub
cwde
inc
adc
and
inc
jno
or
test
out
add
add
or
inc
or
cld
mov
xor
pop
add
sbb
cmp
sahf
div
push
ret
push
and
inc
cld
clc
push
out
lock
add
and
mov
sub
push
and
and
and
(bad)
push
out
and
pop
and
pop
cmp
addr16
mov
rcl
es
and
pop
rol
dec
adc
or
addr16
cld
mov
adc
dec
je
jae
and
inc
pop
sbb
or
and
pavgb
ja
clc
mov
add
jae
and
push
(bad)
icebp
adc
or
ds
or
clc
cmps
inc
sahf
inc
(bad)
loopne
retf
sub
cmp
inc
mov
jle
jo
sbb
push
pusha
dec
add
add
iret
call
pop
nop
jg
cmp
call
add
jle
push
lahf
xchg
test
jnp
(bad)
and
add
add
mov
data16
add
mov
adc
add
std
push
popf
mov
dec
adc
adc
or
pushf
jae
pop
pop
daa
aaa
inc
push
cmp
xor
iret
repz
int
and
jl
movs
push
jg
nop
cmc
fwait
cld
aas
clc
push
jo
lock
jae
or
cli
pop
pop
pop
daa
aaa
inc
mov
cmp
iret
repz
and
(bad)
fldcw
jnp
call
and
or
sub
adc
pop
pop
dec
rol
lock
xor
addr16
add
fsubr
inc
or
inc
inc
and
push
into
cmp
pop
pop
daa
aaa
inc
movs
and
aas
cld
addr16
int
pop
sahf
cmp
jg
into
ds
popf
fldcw
cmp
pop
daa
dec
add
adc
adc
jmp
popf
out
test
sub
pop
pop
pop
daa
add
mov
test
test
inc
inc
mov
sub
adc
push
jne
std
inc
push
into
cmp
pop
pop
pop
daa
mov
nop
push
sub
xor
sar
dec
add
add
inc
pop
ja
ja
pop
ud0
mov
mov
pop
pop
smsw
or
outs
fadd
ja
inc
mov
inc
mov
pop
(bad)
or
xchg
xchg
gs
xor
lock
es
lock
nop
fstp
mov
(bad)
add
es
mov
xchg
xchg
sub
js
lock
lock
xchg
(bad)
pop
add
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
mov
push
push
add
cwde
es
dec
stos
add
mov
adc
retf
add
test
lods
sar
outs
ins
add
add
mov
shl
add
xchg
cs
popa
add
adc
leave
in
push
cld
pop
add
rcr
(bad)
arpl
or
or
add
mov
adc
ins
push
mov
(bad)
adc
or
jnp
cmp
sbb
std
mov
xor
xor
aad
mov
inc
idiv
stos
xor
inc
cmp
mov
add
xor
ss
add
jp
add
push
jbe
add
and
rol
sub
and
pop
out
lahf
jnp
cmp
aas
and
add
mov
adc
dec
fisub
cmp
out
dec
push
mov
mov
(bad)
nop
aas
xor
mov
mov
jns
add
sub
pop
add
aas
add
jnp
pushf
add
cmp
mov
sti
xchg
les
enter
sbb
mov
inc
sub
int
cdq
jnp
rep
ins
jnp
cmps
push
jp
scas
stos
es
sub
mov
das
mov
fs
jmp
icebp
dec
and
add
shr
retf
sub
mov
xchg
xchg
mov
loope
push
call
adc
enter
xor
ret
add
xor
ror
xor
or
inc
push
lods
gs
or
push
aam
push
arpl
push
inc
verr
mov
call
cmp
inc
xor
imul
push
push
add
adc
add
mov
imul
xchg
add
and
je
push
or
aaa
arpl
push
jo
fild
dec
push
and
cmp
in
arpl
imul
pop
int3
daa
into
test
sub
add
and
mov
xchg
das
call
add
outs
adc
retf
aam
inc
std
cmp
fs
add
outs
sbb
dec
test
imul
jb
push
sub
adc
cmps
add
ins
xor
xor
add
movs
es
aas
push
ficomp
mov
inc
lea
sub
mov
test
and
push
pop
and
xor
sbb
and
(bad)
sub
push
inc
and
pop
jg
adc
sub
sbb
inc
adc
and
mov
add
mov
mov
push
jmp
add
and
mov
sbb
or
pop
adc
push
sub
dec
aam
mov
hlt
inc
inc
aaa
sub
dec
aaa
data16
add
mul
pop
inc
add
and
fwait
push
xor
mov
adc
or
sub
fld
sbb
mov
out
push
fcom
dec
add
scas
ret
mov
sahf
inc
mov
mov
push
retf
imul
push
dec
pop
inc
and
movs
cwde
sub
add
test
adc
mov
and
jg
int3
xchg
or
add
daa
pop
aaa
mov
or
mov
je
cmps
jo
adc
push
data16
rcr
ins
add
mov
pop
add
pop
and
sub
sub
and
sub
jae
shl
xlat
pop
or
push
and
pop
(bad)
mov
sbb
popa
add
or
cmp
add
or
mov
mov
rcl
adc
inc
adc
sbb
push
bound
inc
add
sbb
retf
adc
loop
push
sbb
add
inc
xchg
jmp
xchg
aaa
ja
(bad)
cmps
fwait
popa
ja
push
adc
inc
sub
adc
dec
xchg
and
jecxz
aam
xor
mov
mov
jecxz
sar
push
imul
stos
pop
sub
ficom
shl
lods
jo
xchg
mov
prefetch
inc
inc
add
add
mov
pop
sbb
adc
pop
mov
shl
(bad)
popa
push
mov
mov
xor
or
jo
sub
or
sbb
ja
jns
or
xor
sbb
jmp
pop
cmp
or
popa
adc
out
jae
pop
sti
pop
push
sub
mov
aas
imul
adc
rcl
xor
mov
jle
mov
data16
dec
mov
retf
xor
or
(bad)
ffreep
aam
push
ja
pop
gs
inc
mov
das
inc
xlat
mov
push
dec
adc
sub
fild
xor
inc
pop
xor
or
es
inc
pop
das
mov
ins
adc
add
inc
xor
jbe
(bad)
aas
fist
(bad)
(bad)
push
pop
aaa
cmp
adc
pop
dec
cmp
pop
jae
pop
dec
call
ds
pop
aas
add
loopne
mov
mov
ja
add
mov
xchg
call
and
sbb
je
and
arpl
daa
test
adc
or
sbb
and
and
jnp
lods
add
pusha
or
jp
xchg
or
sub
dec
(bad)
mov
and
sub
dec
pop
cs
adc
xchg
sub
push
adc
or
pop
and
ret
adc
ret
(bad)
test
mov
jae
es
outs
add
mov
dec
shl
xor
movs
push
mov
mov
sbb
jns
mov
sbb
inc
imul
mov
fcmovnb
dec
push
call
mov
imul
adc
xorps
or
inc
ins
out
iret
or
xor
(bad)
adc
ret
xlat
dec
lods
inc
add
jmp
out
arpl
jecxz
inc
mov
adc
stos
dec
sbb
jg
adc
add
outs
nop
(bad)
rcl
jmp
inc
ror
stos
mov
mov
test
dec
ss
out
or
xor
add
cmps
dec
scas
jbe
push
test
outs
ins
aaa
iret
mov
adc
iret
sbb
and
out
and
xchg
sub
pop
imul
jo
jo
stos
outs
and
test
dec
and
sub
pusha
sbb
or
xchg
pop
mov
es
push
or
pop
das
jae
sbb
in
adc
push
fs
and
xchg
mov
add
scas
loopne
push
jo
loope
mov
push
ror
cmp
sbb
mov
push
mov
mov
pop
dec
xchg
fs
inc
adc
inc
repz
punpcklbw
retf
and
mov
cmp
int3
inc
add
add
add
push
leave
xchg
pop
leave
or
xchg
pop
add
or
push
push
and
adc
call
pop
dec
push
xchg
push
add
add
inc
loopne
jl
add
shl
add
(bad)
ss
adc
dec
xchg
inc
push
xor
add
rol
fiadd
add
mov
rcl
xor
add
outs
or
mov
aas
push
and
repnz
fs
dec
xor
push
aad
and
test
or
outs
sbb
xor
xor
push
push
in
jnp
int
gs
nop
aam
mov
nop
or
push
fstp
dec
jae
add
jb
inc
sti
sahf
adc
enter
adc
mov
adc
ins
fbld
add
add
and
test
inc
popa
je
imul
sbb
push
ret
xchg
adc
ret
fs
xor
outs
mov
enter
push
sahf
inc
push
imul
jne
cmp
mov
inc
dec
out
sbb
jle
push
jno
push
aam
mov
and
mov
stos
inc
jae
push
add
loopne
add
add
xchg
pushf
add
test
test
dec
inc
dec
adc
add
or
out
loopne
push
mov
pop
or
fild
rcl
adc
fadd
sbb
sbb
mov
dec
xor
push
and
xor
sub
pop
outs
outs
gs
push
add
mov
inc
or
sbb
and
stos
push
sub
and
int
jae
inc
cmp
push
push
dec
inc
pop
jno
add
bound
adc
or
push
add
inc
jmp
push
xor
mov
sub
lahf
adc
add
add
not
inc
add
inc
xor
and
leave
std
mov
inc
jae
imul
add
and
rcl
stos
sbb
adc
jne
add
retf
popa
imul
add
and
cmp
(bad)
aam
dec
inc
pop
fld
adc
lods
xchg
leave
add
test
xchg
in
push
mov
ret
pop
imul
rcl
or
arpl
xchg
ret
add
jmp
ror
je
pop
sbb
add
xchg
add
and
ret
cmp
adc
add
jg
rol
ins
cli
pop
dec
adc
pop
test
pop
adc
mov
(bad)
inc
jne
gs
and
ins
fisubr
xor
xor
retf
jb
sbb
ins
mov
mov
outs
jnp
mov
adc
adc
imul
push
xor
jb
int
aam
xor
js
(bad)
jle
popa
adc
inc
fs
in
adc
fs
inc
push
xor
xchg
arpl
out
aaa
inc
xchg
jae
push
shr
xor
or
xchg
mov
fs
push
mov
dec
and
ret
movs
adc
dec
and
sub
jbe
dec
sub
add
mov
pop
jno
add
mov
inc
add
push
dec
push
xchg
cmp
inc
adc
sbb
dec
fs
pop
push
sbb
add
aam
push
mov
push
aad
add
jae
add
jmp
cmps
push
cdq
cmp
dec
sub
nop
xchg
or
data16
adc
jae
ins
gs
out
pop
push
nop
movs
das
and
mov
leave
xchg
push
cmps
xor
inc
fnstcw
sbb
or
mov
jo
lds
or
sbb
sbb
imul
adc
fs
push
fsub
inc
sbb
mov
pop
enter
add
ficom
and
mov
outs
outs
or
push
adc
push
test
and
mov
dec
adc
ins
xchg
add
dec
imul
(bad)
pop
loope
xchg
pop
punpcklwd
jno
jae
add
arpl
cmp
dec
push
sbb
(bad)
outs
arpl
jle
(bad)
loopne
arpl
and
xor
inc
neg
adc
loopne
xchg
inc
jg
or
pop
jo
xchg
jo
mov
fisttp
loopne
and
xlat
dec
(bad)
gs
adc
xchg
push
dec
gs
push
sub
loope
sub
gs
das
ds
shl
xchg
inc
cmp
jo
std
inc
sti
push
xchg
dec
movs
or
jno
or
cmp
dec
jae
adc
leave
mov
or
inc
pop
cmovs
fadd
sbb
add
and
into
adc
test
xchg
cmp
add
test
sub
add
stc
mov
mov
rol
mov
pop
push
outs
mov
dec
test
ds
push
add
repz
pusha
rol
jg
push
mov
sub
sbb
aas
xchg
pop
jnp
adc
adc
retf
jp
inc
jne
gs
push
dec
xor
ins
or
sub
loop
mov
adc
fcmovnbe
add
cs
sbb
xlat
aas
add
or
stos
inc
in
dec
or
sti
or
popa
outs
push
inc
inc
inc
jge
add
adc
aaa
pop
aas
outs
lahf
ret
out
loopne
cmp
int3
cmp
xor
shr
retf
je
arpl
adc
mov
push
outs
adc
mov
outs
sub
xchg
adc
outs
imul
and
xchg
clc
pop
mov
inc
outs
inc
jbe
pop
cli
ins
outs
jb
js
sbb
dec
sbb
or
imul
add
mov
arpl
push
loopne
inc
jmp
enter
xor
sub
je
or
cmps
lock
inc
or
inc
and
xor
nop
add
popa
push
dec
jb
sub
ficomp
inc
dec
data16
push
scas
or
loopne
dec
daa
xlat
sub
mov
and
pop
mov
push
jno
outs
das
ins
adc
jno
ss
ins
push
push
outs
cld
add
dec
or
data16
cmps
xor
push
lock
or
outs
imul
adc
and
loop
adc
lods
push
inc
or
stos
inc
data16
dec
jo
adc
mov
xchg
scas
stos
push
sub
jp
mov
xor
cmp
push
jb
addr16
xchg
jp
xchg
shr
leave
out
dec
push
out
cmp
not
and
or
in
outs
outs
mov
pop
add
mov
cmp
cmps
pop
mov
cmps
xor
ds
leave
mov
outs
sbb
sti
jae
add
fwait
or
mov
movs
sbb
push
rol
jns
push
xchg
xchg
fs
sbb
in
and
adc
mov
jne
add
bound
inc
js
inc
jno
xchg
popf
sub
pop
int3
nop
cmp
add
pop
daa
inc
cmp
imul
xor
jno
dec
cwde
jmp
ret
bound
mov
fs
or
mov
add
mov
add
push
or
xor
imul
mov
add
or
cwde
add
cmp
sub
jno
loopne
push
or
bound
inc
or
dec
add
ret
clc
push
outs
rcr
pop
add
lock
mov
adc
mov
mov
pop
sbb
jb
and
pop
loopne
xchg
stos
pop
push
cs
jo
outs
arpl
jnp
add
jne
mov
pop
dec
xchg
js
lea
outs
outs
aas
retf
add
es
jb
mov
jb
cmps
mov
inc
dec
loopne
xchg
in
scas
mov
add
(bad)
rcl
jo
rcr
out
or
add
adc
mov
gs
cmp
and
jo
nop
test
push
imul
jae
push
jb
gs
in
add
inc
xchg
push
dec
inc
mov
inc
aam
cld
call
add
xor
and
or
pop
rol
imul
bound
inc
lds
ret
and
jmp
push
sar
pop
inc
clc
cmc
xchg
test
into
mov
jle
outs
sub
push
xor
cli
jl
xchg
jbe
pusha
pop
mov
fadd
xor
jno
and
jbe
leave
cmp
xor
sub
dec
cs
or
mov
sbb
imul
cwde
push
and
xor
add
dec
outs
mov
mov
dec
and
xchg
pop
out
xchg
or
ss
in
stos
popa
cmp
mov
cdq
dec
jae
xchg
jae
inc
and
aad
bound
int
mov
inc
popa
call
add
retf
cwde
pusha
dec
enter
sbb
add
inc
add
fs
and
imul
mov
xlat
xchg
pop
xor
push
shl
and
imul
ins
mov
mov
mov
and
add
ss
je
mov
sbb
dec
retf
push
or
pop
test
adc
outs
shl
jbe
mov
adc
push
jne
cmp
jae
push
das
xor
sub
jecxz
ins
popa
or
(bad)
mov
repnz
push
fdivr
shl
fs
imul
cmp
xchg
test
sbb
fimul
inc
push
xor
push
or
sbb
ja
loopne
adc
fidiv
jae
mov
sbb
mov
shl
xor
fisttp
imul
xchg
fisttp
sbb
aas
push
pusha
nop
popa
inc
and
ficomp
aaa
and
push
pusha
mov
add
movs
ins
jo
push
jb
mov
test
lods
lea
or
dec
(bad)
push
cdq
mov
test
mov
jecxz
mov
pop
add
inc
mov
jo
gs
add
fwait
loope
dec
jns
or
fst
dec
test
(bad)
mov
inc
pop
pop
or
out
inc
shl
adc
inc
add
ins
gs
push
test
retf
push
and
setb
lods
jns
les
sbb
sysexit
loop
shr
sbb
ja
sbb
inc
and
outs
pop
std
cmp
outs
rol
cld
dec
adc
imul
xlat
and
jae
inc
sbb
pop
gs
cmp
cmp
sbb
inc
jno
outs
lods
mov
sbb
dec
popa
pop
movs
jae
loopne
sbb
fild
xor
add
ds
add
xchg
push
cmp
mov
inc
and
popa
and
js
adc
push
rol
lock
fldcw
fld
push
sub
dec
int
adc
lock
lock
pop
mov
adc
jge
cmp
jb
sub
cmp
mov
mov
(bad)
xor
arpl
add
ja
arpl
inc
jo
mov
jecxz
and
std
add
sub
inc
push
inc
mov
imul
dec
popa
jecxz
mov
jl
cmp
shl
jns
test
mov
fcmovnu
sbb
adc
push
cdq
mov
inc
xchg
test
pop
add
xlat
lea
(bad)
outs
push
dec
jno
popa
invd
sbb
pop
push
jo
pusha
fsubr
sub
js
repnz
mov
loopne
pop
movs
fld
jmp
and
sbb
xchg
or
out
or
pop
push
outs
rol
jmp
push
jae
ins
and
dec
push
cdq
pop
cmp
cmp
ret
in
mov
mov
(bad)
and
and
add
and
push
in
fsub
aaa
adc
ss
and
xchg
dec
jge
(bad)
push
pop
movs
das
push
imul
add
inc
pusha
sub
push
dec
lods
jo
jae
outs
pop
addr16
cmp
ins
and
add
aas
iret
push
jb
pop
sbb
mov
(bad)
(bad)
push
test
mov
mov
jecxz
pop
stos
mov
or
dec
xchg
jb
ror
add
das
cwde
clc
push
int3
or
and
push
fisttp
jne
call
add
test
add
mov
cdq
rol
test
add
lsl
dec
pop
rol
push
push
xchg
cmps
pop
rol
adc
arpl
fcomp
mov
and
pop
pop
shl
adc
inc
push
fcomp
das
test
js
adc
dec
jge
or
sti
es
mov
add
adc
cdq
jp
inc
add
pop
aas
pop
shl
mov
adc
pusha
pop
or
dec
rcr
mov
or
sahf
fsubr
mov
sbb
xor
sbb
xchg
and
add
test
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
jo
push
add
add
