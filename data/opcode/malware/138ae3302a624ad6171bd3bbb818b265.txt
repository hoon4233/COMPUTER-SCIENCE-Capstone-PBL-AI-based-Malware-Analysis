pusha
in
add
add
add
add
add
add
add
add
add
add
and
add
xor
add
add
add
adc
adc
sub
add
or
push
or
sub
add
or
jle
add
add
imul
or
sub
add
or
adc
sub
add
or
adc
sub
add
or
adc
sub
add
or
adc
sub
add
or
pop
inc
or
adc
or
add
es
sub
add
or
adc
sub
add
or
pop
jle
add
add
imul
add
push
es
sub
add
or
pop
or
mov
adc
or
add
es
sub
add
or
add
add
push
add
sub
add
or
adc
sub
add
or
adc
sub
add
or
sub
xor
outs
add
add
add
adc
jle
add
add
imul
or
sub
add
or
jle
add
add
push
jle
add
add
imul
add
sub
add
or
push
rol
add
add
push
add
or
sldt
or
add
or
sub
add
or
pop
sub
add
or
adc
sub
add
or
pop
sub
add
push
add
sub
add
or
sub
add
add
xchg
js
cmc
pusha
push
jbe
lahf
cmp
inc
ins
(bad)
stos
in
fbstp
dec
(bad)
dec
xor
inc
test
loopne
outs
rcl
in
mul
fsub
sub
shl
iret
mov
pop
push
scas
icebp
into
cmp
test
cmp
mov
cmp
lock
sbb
inc
call
sub
test
test
mov
fdiv
mov
gs
cmp
push
mov
push
sub
sbb
xor
rol
movs
sbb
mov
sar
xchg
mov
mov
cmp
neg
arpl
add
adc
js
xchg
jp
dec
ins
mov
adc
xchg
adc
push
jns
(bad)
mov
xor
mov
mov
mov
std
(bad)
cmp
mov
ret
sub
inc
sbb
xchg
lds
or
pop
xlat
mov
mov
repz
(bad)
adc
ins
out
cmp
dec
pop
push
sti
call
loope
cmps
dec
cmp
(bad)
in
add
loop
push
mov
fild
mov
sbb
and
(bad)
sub
daa
sub
push
in
and
outs
jmp
inc
cmp
add
cmp
sub
adc
dec
sbb
out
lods
adc
sub
popf
cmp
cmp
test
icebp
in
fcmovnb
test
(bad)
sar
mov
loope
adc
mov
mov
shl
shl
mov
nop
je
add
mov
and
inc
dec
adc
xchg
pop
pop
adc
pop
dec
jp
jb
lea
inc
daa
das
scas
fbld
mov
adc
(bad)
aam
jmp
xor
push
mov
repnz
jb
jne
sub
jl
cli
mov
mov
fistp
mov
dec
in
dec
mov
arpl
cwde
enter
push
mov
push
inc
inc
movs
mov
rcl
inc
and
pop
cmp
imul
pushf
jne
imul
push
and
rol
dec
push
or
sub
pop
and
(bad)
enter
pop
cmp
or
push
lahf
ret
lea
cld
add
sub
dec
test
arpl
inc
cdq
movs
sbb
imul
xor
inc
or
(bad)
sbb
in
jbe
mov
inc
lea
cmc
or
push
jae
loop
add
ret
jnp
fist
ins
ins
repz
or
cmp
(bad)
push
dec
pop
ss
ds
xor
pop
jmp
add
jnp
sbb
xor
popa
rcl
sub
dec
push
aas
dec
pop
(bad)
adc
test
scas
jno
sar
jbe
cmps
push
sti
inc
cli
jns
imul
in
and
jne
in
and
adc
sub
std
fsub
call
mov
push
je
mov
ss
ror
loop
cmp
(bad)
es
xchg
lods
into
inc
rol
repnz
fucom
jns
mov
or
cmp
test
jnp
adc
mov
pop
sti
xchg
loope
fs
dec
inc
or
mov
pop
or
mov
lea
data16
out
in
cmp
scas
fs
mov
mov
add
inc
mov
stos
cs
aad
lods
dec
jg
pusha
popa
cmp
jmp
outs
xchg
mov
add
sbb
cs
push
cmps
xchg
push
repz
and
jmp
pop
mov
mov
(bad)
jbe
and
add
xor
push
(bad)
xchg
pop
sbb
bound
push
mov
adc
push
fnstenv
aas
retf
addr16
cld
ds
or
shl
ret
dec
mov
div
mov
dec
into
das
test
adc
ror
adc
scas
xchg
adc
dec
or
nop
jnp
xchg
lea
dec
mov
and
or
fwait
loop
dec
icebp
je
jecxz
fldenv
in
xchg
inc
inc
div
ja
shr
je
arpl
mov
cmc
stc
push
out
add
xlat
jecxz
sahf
push
mov
mov
mov
retf
enter
sbb
push
mov
mov
pop
or
mov
popf
aaa
test
add
adc
imul
scas
and
cmp
sbb
pop
cmovge
xchg
and
cdq
xlat
mov
pop
and
mov
sbb
jne
push
imul
jl
fst
mov
cmp
push
xchg
(bad)
aas
sub
out
(bad)
scas
xorps
sub
cwde
aaa
imul
cli
repz
xor
push
stc
outs
pop
call
arpl
clc
jle
(bad)
out
popa
mov
test
leave
xchg
cmps
test
xchg
mov
pushf
test
movs
jns
or
and
jmp
cwde
loope
ret
pusha
je
cmp
sahf
sub
stc
mov
mov
fnstsw
mov
popa
push
stos
call
inc
dec
mov
jb
jo
rcl
out
jae
or
lea
sub
xchg
ds
ret
cmp
xchg
push
mov
adc
mov
repnz
out
pop
cmp
(bad)
cmp
idiv
push
or
cmp
rol
test
int
dec
inc
in
outs
xchg
iret
dec
mov
hlt
jp
mov
dec
pop
xor
xor
cmp
lods
in
push
fucomip
clc
push
repnz
push
(bad)
jmp
jl
cmp
pop
jge
push
popa
sahf
mov
pop
add
in
sbb
into
cld
ret
adc
dec
mov
and
inc
xchg
movs
cmp
aaa
cwde
rcr
inc
jnp
and
pop
pop
and
ror
xchg
retf
test
and
jl
mov
xchg
les
fistp
js
loopne
jg
ins
pusha
fwait
aam
(bad)
push
xor
dec
adc
sub
je
addr16
stc
and
mov
add
or
and
jmp
inc
cmps
mov
dec
inc
shl
cmc
sbb
mov
dec
in
ja
inc
test
jae
stos
xchg
cmp
cmp
movs
mov
push
popf
es
sahf
cmp
cmps
adc
sbb
push
xor
pop
mov
or
popa
mov
jle
jmp
adc
fwait
(bad)
call
pop
inc
(bad)
mov
inc
mov
not
lahf
sti
aam
mov
clc
cmc
mov
xchg
cmp
ja
mov
mov
in
dec
mov
dec
mov
cmps
outs
adc
cdq
cli
mov
stos
test
sub
out
icebp
xchg
mov
jle
nop
push
xchg
sbb
add
cmc
xor
cmc
cs
push
xchg
mov
xchg
popa
cmps
push
fistp
push
nop
and
outs
lock
sbb
out
mov
mov
inc
sbb
dec
mov
jmp
outs
or
adc
dec
fidiv
mov
adc
adc
dec
test
dec
retf
push
mov
add
add
or
nop
sub
jmp
lods
push
and
jo
cli
mul
adc
dec
bound
cs
jnp
pop
add
pop
jb
cld
bound
mov
nop
mov
adc
jmp
js
pop
rol
cmps
test
fisubr
jmp
dec
and
push
and
aam
xor
loop
xor
lock
mov
jb
shr
bound
loopne
xor
repnz
or
scas
xchg
xor
repz
and
sub
jl
out
movs
sbb
lahf
xchg
movs
xchg
jne
adc
std
jle
jne
cmp
mov
arpl
gs
mov
cdq
adc
shl
pusha
adc
mov
dec
movs
rep
(bad)
lock
repz
pop
imul
inc
das
cmp
cmp
retf
(bad)
(bad)
cmps
int3
ins
mov
aam
fst
mov
stos
sub
mov
les
jg
cmp
sbb
(bad)
adc
sbb
mov
add
rcr
sbb
cld
ins
std
jp
cmp
or
adc
mov
call
(bad)
xor
mov
out
pop
dec
push
ja
and
or
push
loope
movs
fs
mov
pop
scas
(bad)
push
mov
sub
std
ja
jb
pop
pop
fidivr
dec
push
shl
jge
dec
(bad)
jp
in
push
adc
jge
out
js
sbb
imul
sti
mov
test
icebp
mov
(bad)
push
and
in
popf
cwde
push
mov
inc
(bad)
xor
cwde
inc
loopne
mov
inc
mov
sbb
out
or
outs
pushf
and
push
pusha
stos
jge
shr
xor
les
xlat
jecxz
push
jno
cmp
xor
leave
into
scas
in
fcmovne
xor
dec
push
inc
mov
sahf
nop
pop
push
add
pop
jge
cmp
rol
adc
loope
shl
retf
mov
stos
(bad)
pop
pop
push
or
push
aas
xchg
xchg
es
stc
mov
int3
or
xor
xlat
xchg
jecxz
add
cmp
xor
sub
jecxz
pop
sub
xlat
outs
or
xor
(bad)
pop
(bad)
mov
ins
das
fcmovnbe
push
jb
adc
cmp
outs
cs
mov
cmp
test
sar
adc
pop
dec
adc
sub
jbe
inc
lods
inc
or
in
mov
popa
mov
lock
pop
inc
mov
mov
mov
in
jne
(bad)
push
mov
movs
adc
mov
jmp
cmp
and
les
pop
mov
xor
js
cmps
out
mov
or
imul
sbb
sub
mov
mov
and
data16
push
test
nop
add
mov
xor
lea
pop
xchg
sbb
push
jb
mov
pop
(bad)
sub
dec
xchg
in
fisubr
fstp
dec
pop
mov
sub
(bad)
repnz
sbb
or
je
in
dec
dec
mov
mov
(bad)
adc
cli
push
repnz
int3
icebp
push
cmp
mov
in
mov
cli
mov
sbb
mov
push
pushf
push
cli
push
xlat
mov
xor
cmps
push
mov
jae
repnz
xchg
repz
adc
sub
cmp
push
xor
scas
mov
xor
sbb
push
std
js
sar
js
rol
inc
test
(bad)
cmc
push
int
sbb
sbb
mov
daa
fnstcw
arpl
or
mov
pop
inc
cmp
cmp
cdq
mov
aaa
pop
or
into
sbb
jle
jg
in
mov
inc
xchg
mov
fcom
aad
mov
or
or
cmps
cmp
or
or
or
div
jno
hlt
jmp
cmps
ss
hlt
push
js
sbb
out
test
push
inc
mov
in
push
into
jb
cmp
sub
out
xchg
xor
loop
stc
xchg
xlat
xchg
mov
(bad)
push
xchg
cs
sub
dec
and
test
xor
in
movs
push
sbb
xor
test
mov
je
lock
stc
lds
dec
mov
sbb
shl
and
ja
pop
mov
mov
mov
mov
cld
sti
push
cwde
je
dec
jae
xor
out
scas
dec
aas
bound
and
loope
in
adc
pop
loopne
push
mov
jo
inc
aaa
imul
sahf
or
lods
pushf
sbb
ja
and
xor
imul
(bad)
xor
cmp
mov
mov
dec
adc
outs
cwde
push
mov
es
call
lea
mov
fmul
test
add
mov
xchg
arpl
mov
cmp
add
out
push
iret
or
jo
lock
or
mov
iret
test
(bad)
test
popf
jo
fadd
std
add
inc
add
into
dec
scas
loop
mov
aaa
mov
jmp
mov
mov
inc
cdq
or
fsub
and
mov
jmp
mov
popf
imul
(bad)
test
fninit
jnp
and
dec
adc
mov
push
das
push
dec
sbb
sbb
stc
ja
cmps
(bad)
jge
sub
or
or
pusha
xor
mov
mov
jne
mov
pop
push
pop
iret
or
pusha
pushf
mov
mov
push
nop
sbb
fiadd
(bad)
jne
mov
iret
(bad)
stc
push
adc
jmp
sub
bound
(bad)
pop
mov
sbb
arpl
dec
mov
mov
adc
pop
pusha
clc
sub
xor
push
adc
lahf
je
mov
xor
enter
dec
xor
cdq
(bad)
aas
test
scas
cs
test
or
pop
shr
sub
mov
xor
clc
jmp
dec
cld
int3
sub
or
lods
lods
outs
jbe
pop
stos
xor
push
dec
mov
jbe
sbb
jae
xor
push
add
xchg
xor
movsx
adc
dec
sub
sbb
test
ja
adc
xchg
adc
rcr
test
and
dec
sub
out
push
xor
sahf
mov
pop
cmc
sub
mov
(bad)
cmp
xchg
dec
cmp
pop
ss
pusha
mov
das
test
fld
stos
and
push
jbe
mov
iret
(bad)
test
retf
xor
dec
inc
not
adc
ins
aam
retf
cs
and
in
sub
fmul
inc
in
mov
ret
pmulhuw
in
inc
push
mov
mov
shl
mov
adc
xchg
jge
fld
fnstenv
xor
pushf
fwait
and
aad
cli
rol
pop
add
mov
pop
test
leave
dec
jg
ins
call
pop
scas
dec
out
jg
addr16
xchg
dec
repnz
push
jge
ret
inc
ret
pop
inc
add
movs
inc
inc
adc
mov
add
jecxz
addr16
stos
clc
sub
jp
and
(bad)
cmc
pop
ss
clc
push
lods
repnz
jmp
and
pop
xor
addr16
mov
xchg
mov
call
std
xor
loop
sub
pop
fldcw
es
mov
movs
sub
movs
xchg
(bad)
shl
nop
pop
pop
(bad)
jbe
push
rol
jo
in
sbb
jg
stos
loopne
jo
sbb
pop
push
mov
lods
in
push
and
cmp
pop
imul
lahf
daa
mov
or
mov
or
xchg
add
cmp
jp
pusha
mov
xlat
movs
ds
aaa
das
in
jle
mov
push
movs
aad
cmp
call
mov
imul
aaa
leave
mov
jmp
fucomip
test
movs
imul
bound
pop
sub
in
sbb
dec
push
jne
es
retf
inc
ret
jne
sub
jbe
sub
jmp
xor
loopne
std
mov
cwde
repnz
and
cld
jbe
addr16
and
add
sbb
cmps
in
mov
std
clc
mov
jmp
in
repz
scas
clc
cmp
jecxz
cmp
mov
push
enter
dec
clc
fstp
jns
pop
shr
dec
fdiv
movs
dec
inc
lods
mov
pop
add
sbb
pop
sbb
jae
(bad)
(bad)
test
sub
pop
test
pop
sub
mov
dec
stc
stos
jmp
or
and
xchg
lods
out
outs
inc
fwait
stc
pusha
mov
sub
push
lock
add
das
push
sbb
xchg
cmp
cmp
jge
push
pusha
popa
mov
push
push
aas
push
(bad)
push
outs
je
call
or
sahf
mov
shl
imul
mov
bound
out
mov
lock
fisttp
sahf
mov
push
stc
test
dec
lahf
outs
inc
pusha
out
fstp
cwde
arpl
xchg
cs
mov
mov
inc
pop
push
ror
pop
por
int3
add
cmps
sub
cwde
inc
xor
and
fucomip
push
pop
add
pop
and
add
sbb
mov
movs
and
sub
push
xor
loop
shl
xchg
or
sub
in
clc
add
jmp
int3
mov
out
jmp
out
mov
fstp
pop
pushf
inc
repz
jge
addr16
ins
test
or
cmp
adc
xchg
pop
daa
icebp
mov
into
mov
jno
mov
inc
mov
push
xchg
lahf
sbb
push
stos
mov
scas
or
dec
mov
stos
stc
test
outs
mov
xor
mov
and
prefetchw
mov
ffreep
and
fsubr
rcr
pop
mov
pop
pop
fcmovu
sbb
(bad)
jnp
data16
call
inc
js
sahf
add
sub
xchg
and
shr
dec
mov
xchg
sub
sar
mov
cmps
mov
pop
inc
shl
retf
dec
fcmovb
js
or
sub
pop
mov
and
daa
ss
loop
cmc
es
fnstenv
retf
loope
ins
lock
(bad)
cmps
data16
or
mov
push
cwde
mov
adc
and
mov
gs
ja
popf
mov
sub
sub
in
pusha
leave
fcom
mov
retf
pop
add
cmp
xchg
sbb
sub
in
sub
retf
sub
sahf
mov
xor
push
stc
dec
mov
addr16
jae
dec
adc
les
add
lods
retf
xorps
push
or
out
call
jbe
cwde
sbb
cmp
rcl
pop
into
xchg
(bad)
sbb
cmps
fcom
sbb
jmp
test
sbb
fisub
shl
or
push
in
jo
xchg
xor
jmp
stos
fcmovnbe
mov
ins
jmp
fcom
ret
sbb
lods
std
xchg
ss
inc
add
adc
sar
jae
mov
mov
aas
stos
xchg
mov
dec
dec
ficom
dec
add
mov
scas
aas
fstp
ror
push
or
xor
out
adc
and
push
loope
pop
movs
jl
xchg
popf
adc
out
pop
test
fdivr
push
lds
inc
pop
inc
cmp
retf
mov
cwde
cmp
shl
retf
pusha
mov
into
inc
cld
jnp
movs
sub
outs
mov
fadd
dec
addr16
adc
dec
adc
iret
ret
(bad)
sub
push
pop
mov
jecxz
out
inc
push
bound
ror
es
imul
(bad)
jno
xor
mov
aad
push
sti
jb
xor
call
lock
int
or
sbb
push
push
jbe
shl
aam
inc
dec
and
push
xor
cmps
xor
mov
fsub
sbb
std
and
(bad)
mov
and
jns
pop
inc
shr
ins
ja
and
retf
imul
rol
cli
xor
rol
ja
call
leave
mov
ror
xchg
or
arpl
out
cdq
adc
aas
mov
dec
popa
cdq
ins
jg
ror
loop
out
loop
jne
mov
adc
aam
fld
push
int3
leave
jecxz
pusha
jg
push
fadd
push
test
add
call
and
lods
xchg
mov
jae
in
push
cmp
out
mov
(bad)
ds
push
ss
add
fild
je
outs
(bad)
pop
jmp
sbb
xchg
inc
ficomp
pusha
xchg
pop
jmp
dec
push
xchg
mov
inc
inc
sbb
scas
aaa
inc
jmp
sbb
mov
movs
(bad)
in
femms
pop
cmpps
sbb
pop
jl
iret
sub
mov
inc
stc
or
jnp
je
stos
add
aaa
(bad)
and
mov
pop
jnp
xlat
or
cli
pop
inc
adc
pop
out
dec
bound
sahf
xchg
rcl
push
std
aas
xor
inc
fsub
and
or
adc
fist
sub
icebp
pop
push
lods
mov
mov
push
not
aam
cmp
mov
into
mov
pop
sbb
push
xor
rol
les
arpl
and
mov
fist
push
jle
arpl
xor
or
scas
sbb
mov
or
cmp
int3
sub
jmp
das
mov
jecxz
dec
pop
(bad)
daa
mov
xchg
xor
dec
inc
int3
dec
stos
inc
pop
inc
sbb
fild
inc
lahf
sbb
cmp
jmp
in
and
out
adc
stos
movs
scas
and
xor
adc
rcl
inc
inc
outs
mov
lods
sahf
add
out
pop
sahf
pop
call
imul
sub
push
xchg
adc
mov
inc
rcl
ror
test
nop
cld
(bad)
icebp
mov
sub
or
stc
mov
ficomp
imul
jmp
les
xlat
adc
mov
and
pushf
aas
pop
popf
aad
jmp
hlt
adc
add
add
ins
mov
and
dec
test
mov
mov
sub
pushf
xlat
jge
inc
enter
retf
inc
mov
cs
addr16
mov
popf
xchg
retf
(bad)
ficomp
mov
jb
fwait
jb
dec
cmp
into
rcr
aad
aad
push
loop
movs
xchg
inc
jl
test
sub
retf
(bad)
mov
aad
inc
ror
xchg
idiv
add
scas
inc
jne
data16
ss
cli
mov
ja
jl
dec
mov
fst
retf
adc
mov
pop
adc
rcr
push
(bad)
cmp
lods
leave
mov
jmp
xchg
add
sub
sub
lods
mov
xchg
inc
or
adc
outs
or
xchg
ins
add
xor
loope
outs
push
inc
ja
or
data16
mov
sbb
dec
dec
outs
xchg
jg
mov
popa
sbb
jecxz
xchg
dec
xchg
mov
(bad)
adc
lock
scas
inc
cmc
repnz
xor
mov
test
aas
push
mov
mov
sub
mov
iret
xchg
pop
lods
or
sub
inc
mov
popf
dec
inc
jo
adc
js
lea
push
data16
addr16
sbb
adc
jnp
adc
adc
and
sbb
call
test
sahf
cmps
sbb
pop
rol
dec
add
fisub
pop
arpl
dec
mov
jnp
jae
adc
jmp
inc
and
jbe
push
push
jb
add
aam
fild
arpl
fldlg2
ss
xor
xor
movs
add
pop
xor
pop
mov
out
sub
or
test
stc
push
ins
sar
xor
mov
push
lods
rcr
(bad)
and
mov
loope
push
dec
sbb
ja
cmp
clc
mov
xchg
xchg
pusha
jge
mov
not
loopne
movs
inc
mov
mov
gs
mov
mov
mov
xchg
pop
in
mov
scas
push
mov
rcr
je
das
and
pop
mov
or
pop
les
in
mov
or
fiadd
popa
outs
movs
cld
or
xchg
aam
mov
mov
adc
xchg
sub
js
jmp
jg
imul
sub
jo
cmp
push
adc
inc
cdq
call
(bad)
sbb
jl
dec
cli
push
int3
leave
icebp
add
rcr
xchg
fcom
or
inc
push
jae
dec
inc
mov
inc
adc
cmp
jbe
aad
into
iret
and
test
push
int3
xor
inc
push
and
push
push
mov
cdq
and
xlat
xlat
mov
xchg
mov
add
stos
push
push
push
jmp
mov
jns
jecxz
mov
lahf
data16
dec
dec
addr16
loopne
out
pop
mov
and
repnz
xchg
xchg
lods
xchg
int3
and
loop
outs
jne
mov
out
xor
jmp
(bad)
callw
push
inc
cld
xor
rcr
jo
dec
in
or
xchg
cli
adc
mov
inc
pushf
xor
pushf
jne
pop
sti
adc
inc
jno
pop
add
inc
and
inc
aad
nop
mov
gs
xor
mov
(bad)
jge
cmc
adc
popf
fistp
jns
mov
out
sbb
xor
mov
and
repz
lds
or
sbb
jmp
pop
push
pop
cli
xor
cmps
les
jecxz
inc
push
arpl
pop
inc
lahf
popf
pop
pusha
std
xor
(bad)
fiadd
inc
pop
aas
mov
aad
call
adc
push
xchg
mov
lods
mov
mov
adc
inc
stos
push
or
retf
jmp
repnz
mov
mov
add
xor
sbb
cmc
fdiv
mov
pop
out
add
dec
inc
outs
xchg
cmp
mov
dec
(bad)
mov
mov
mov
pop
xchg
pushw
jno
and
adc
aad
stos
ficomp
adc
inc
and
cld
add
aaa
fwait
arpl
fstp
xor
fsub
ret
and
add
fimul
jne
data16
jp
out
leave
sub
jo
shl
bound
add
add
js
adc
jl
js
lea
pop
lods
push
mov
pushf
iret
out
adc
jno
push
mov
inc
add
movs
popf
ret
ss
ins
push
xchg
xchg
pop
dec
and
mov
adc
mov
cmc
dec
adc
nop
sbb
inc
jmp
lahf
and
stc
jmp
out
test
sbb
nop
lods
mov
ins
dec
add
imul
retf
out
fs
sbb
xor
mov
(bad)
inc
fistp
sub
shl
inc
stc
(bad)
adc
xor
jecxz
mov
dec
test
and
rcr
xchg
xlat
sub
xor
scas
std
mov
or
and
clc
sbb
adc
mov
jbe
mov
mov
loop
xchg
retf
das
xchg
mov
addr16
jno
(bad)
cmps
sti
lea
stc
(bad)
data16
out
in
pop
and
jg
adc
into
cmp
arpl
movs
sahf
arpl
xchg
pop
sub
ja
(bad)
inc
pushf
aad
xor
add
dec
aam
test
test
push
cld
dec
mov
int
loopne
push
push
iret
test
jmp
cmp
xor
retf
ror
call
sti
push
adc
call
ret
inc
cld
int
dec
jnp
cld
repnz
js
inc
loope
repz
jmp
imul
xchg
xlat
dec
ret
repz
mov
scas
jmp
scas
and
jns
mov
inc
shl
lods
mov
pop
cmp
adc
xchg
sahf
sub
pop
mov
test
xchg
adc
inc
or
push
add
shl
fstp
stos
xchg
ins
mov
test
mov
inc
push
push
xchg
arpl
pop
jge
call
mov
mov
xor
mov
pop
test
aam
pop
mov
pusha
mov
mov
popa
stc
sub
les
jecxz
es
call
in
loop
inc
jg
cwde
add
lods
imul
test
mov
js
dec
cld
cs
and
add
sub
inc
cdq
fst
pop
test
push
xlat
or
pop
arpl
arpl
inc
jg
push
adc
mov
bnd
mov
hlt
sbb
xor
cmp
adc
fwait
mov
cli
fs
pop
jb
dec
cmp
(bad)
retf
jl
cs
gs
out
push
inc
std
push
retf
sbb
inc
mov
outs
mov
mov
fisubr
or
push
push
mov
mov
scas
cmp
(bad)
pushf
jno
dec
lea
idiv
pop
mov
and
adc
mov
jo
sbb
adc
mov
push
cwde
add
adc
bnd
sub
push
sub
inc
pop
or
dec
push
push
aas
inc
sbb
push
sahf
scas
or
fwait
pop
mov
lock
add
add
ret
cli
outs
outs
mov
ins
lahf
lock
jmp
clc
mov
adc
stc
lea
dec
in
scas
lds
cmp
mov
push
push
jecxz
mov
outs
and
inc
jmp
add
push
push
and
sahf
push
xlat
add
xlat
push
cmps
mov
ds
shr
pop
fidivr
in
je
push
pop
js
sub
xor
pop
mov
stos
cmps
(bad)
aad
mov
mov
inc
mul
pushf
inc
xor
out
mov
stos
shl
or
sbb
pop
iret
jno
jle
ja
loopne
dec
arpl
xlat
push
jns
test
outs
icebp
enter
aam
mov
(bad)
sbb
pop
movs
(bad)
sbb
dec
scas
or
js
add
out
lea
ins
xor
sub
inc
jae
stos
and
cmc
inc
jo
xor
fcmovnbe
and
aaa
or
fist
outs
(bad)
arpl
mov
data16
sar
cdq
(bad)
out
adc
ror
adc
sti
ins
pop
cs
sub
movs
xchg
mov
xor
shr
shl
fwait
or
jmp
xor
sub
and
mov
in
xchg
lea
leave
sub
sbb
pusha
leave
ins
add
inc
retf
aaa
mov
idiv
in
lock
loopne
adc
neg
fistp
dec
cwde
aad
addr16
into
test
mov
ins
add
inc
scas
ret
dec
inc
sbb
adc
xchg
push
dec
jb
out
outs
add
jne
popa
dec
aas
push
jl
(bad)
or
xchg
popf
inc
pop
and
pop
shr
and
mov
test
adc
mov
push
int
(bad)
sar
mov
das
icebp
cmp
(bad)
jmp
bound
shl
arpl
cs
aam
mov
mov
test
pop
dec
mov
out
xchg
into
pop
jae
in
pop
ins
dec
retf
and
pop
inc
jmp
xchg
and
add
cwde
sub
push
jge
xor
jge
pop
mov
(bad)
fistp
jg
outs
xlat
imul
shr
pop
jg
std
mov
or
sub
out
sub
test
lahf
arpl
xchg
je
es
adc
call
mov
jns
out
imul
sub
adc
or
std
push
rol
imul
lods
les
stc
mov
mov
arpl
sti
popf
inc
dec
dec
fsubrp
ror
jo
inc
push
pop
mov
sub
jmp
popf
push
xchg
mov
mov
(bad)
pop
xchg
inc
push
mov
push
call
out
xor
in
mov
push
xchg
jp
in
cld
dec
jae
pushf
fistp
cmp
cmps
iret
mov
inc
inc
xor
jno
jns
jnp
jns
pop
aam
mov
out
xchg
aam
(bad)
outs
jle
fs
les
and
das
xchg
ss
xchg
xor
jbe
push
mov
shl
in
sub
inc
in
loope
jno
leave
shr
ffree
push
test
and
jecxz
push
jmp
aaa
jecxz
(bad)
rep
fwait
mov
jle
icebp
add
or
push
sub
test
add
push
sub
add
(bad)
fcom
rol
ins
retf
add
dec
aam
shl
or
inc
pop
xchg
pop
call
jmp
adc
inc
rcr
push
inc
pop
lods
mov
mov
shl
ja
mov
cmps
mov
or
mov
or
hlt
test
mov
or
loop
enter
icebp
stc
sub
pop
mov
xchg
test
jns
dec
jns
lods
loope
data16
and
inc
cmp
les
fbld
push
out
add
inc
rol
push
mov
movs
jne
inc
js
xor
sbb
jmp
mov
aam
out
or
mov
adc
test
je
push
out
jmp
iret
std
pop
lods
or
int3
loope
or
or
sub
neg
cdq
daa
cmp
mov
add
outs
data16
int3
ret
add
sub
push
inc
ror
or
ss
and
mov
and
sbb
stos
stos
and
clc
(bad)
pop
cmp
jbe
xchg
das
idiv
lahf
dec
call
cmp
test
jbe
icebp
mov
or
movs
pop
cmp
aas
shl
mov
jg
mov
lock
push
cmp
jecxz
mov
fiadd
push
xor
and
push
inc
aas
xchg
nop
or
leave
mov
dec
scas
inc
outs
or
sbb
inc
mov
adc
cmp
sub
add
mov
dec
jl
aam
pop
pop
pop
into
(bad)
enter
(bad)
(bad)
mov
loope
imul
xchg
cs
jns
push
jbe
jecxz
inc
int3
xchg
cmp
pop
dec
cld
jne
dec
or
xchg
movs
shr
push
xor
cmc
ret
aad
mov
cmp
hlt
xchg
mov
ret
addr16
cmp
jo
mov
xchg
shr
lea
xchg
int3
pop
ja
sbb
pop
pop
push
push
xchg
pop
repz
movs
cmps
movs
push
test
pop
push
xchg
mov
xchg
xor
pop
cld
push
das
ins
gs
jecxz
out
pop
loopne
and
or
add
cld
in
mov
aas
pop
mov
push
or
cmp
retf
and
cmp
shr
retf
inc
dec
cmp
lds
cdq
daa
jae
movs
int3
ret
cs
and
loope
inc
pop
xor
mov
cmps
stos
push
adc
mov
pop
and
mov
add
notrack
dec
add
pop
out
xor
hlt
mov
sbb
fisub
dec
jge
retf
jnp
cmps
pop
test
pop
mov
mov
data16
cmp
lods
ins
xchg
adc
call
in
fdiv
jge
aad
xor
ins
mov
outs
cld
and
(bad)
mov
into
cmp
and
inc
mov
push
push
add
mov
and
hlt
jns
xor
lahf
sbb
fmul
xlat
mov
adc
nop
add
mov
inc
ds
enter
add
ss
sub
addr16
lahf
outs
sub
retf
adc
pop
dec
into
cmp
and
idiv
test
push
loopne
add
cmp
scas
jnp
mov
rol
inc
fild
out
lods
loope
movs
mov
mov
outs
or
loop
mov
cli
mov
movsx
outs
test
xchg
pushf
enter
mov
lock
cmp
push
pop
xlat
pushf
inc
inc
add
bound
ds
shr
(bad)
fisubr
leave
fild
adc
hlt
inc
loope
nop
mov
xchg
loop
cmps
xor
add
into
sbb
popa
rcl
inc
sbb
mov
cmp
sahf
mov
out
or
std
mov
dec
repz
mov
retf
enter
inc
jmp
xchg
sub
push
jmp
mov
or
mov
jb
mov
or
jae
fstp
push
mov
mov
mov
dec
test
or
mov
imul
mov
rol
xchg
or
movs
leave
push
xor
pop
(bad)
sbb
xchg
loope
pusha
add
jno
outs
sbb
sbb
adc
add
jno
cmp
aas
jmp
add
retf
stos
test
call
test
mov
sahf
inc
inc
stos
mov
test
sub
pop
inc
or
or
jb
fst
sub
jle
and
xchg
loop
neg
push
mov
add
ss
dec
outs
lods
jne
int
mov
push
pop
minps
(bad)
mov
push
jbe
ins
mov
scas
clc
mov
sub
push
mov
mov
or
inc
jmp
sbb
adc
ins
popf
jmp
pop
(bad)
jbe
mov
xchg
popf
xchg
push
movs
push
sub
dec
add
pop
xlat
gs
int3
std
push
aas
cmp
inc
lahf
std
cli
call
ret
dec
mov
imul
in
mov
dec
inc
jecxz
lahf
add
fidivr
xor
fdivr
or
icebp
scas
cli
inc
xor
dec
jnp
les
fs
nop
dec
test
pop
adc
dec
and
lea
lock
dec
imul
fstp
sub
cmps
js
(bad)
in
leave
mov
or
inc
fdivp
xchg
mov
jae
push
(bad)
mov
(bad)
xchg
jno
mov
ds
pop
pop
cmp
sar
push
or
cld
outs
gs
pop
add
and
out
mov
jnp
test
xlat
pop
in
sbb
cli
or
jno
call
jecxz
inc
xlat
fstp
xor
push
hlt
loop
pop
fsubp
pop
imul
mov
inc
inc
mov
(bad)
popw
mov
cmp
repnz
jge
hlt
js
xor
mov
cmp
or
sbb
in
lds
daa
imul
int
mov
push
imul
jne
inc
jecxz
hlt
inc
cmc
repnz
daa
jmp
fiadd
sbb
sbb
push
fwait
add
push
aaa
xchg
pop
mov
fwait
jge
lds
gs
rcl
sbb
loopne
aad
shl
sbb
and
adc
pop
popf
out
pop
aad
das
mov
pop
jg
inc
push
push
mov
xchg
push
(bad)
sti
and
(bad)
fwait
pushf
loopne
test
dec
adc
push
mov
jmp
call
pop
test
jno
loop
or
outs
(bad)
test
dec
mov
ret
or
shl
mov
int
fs
push
nop
in
xor
lods
mov
in
jae
push
push
push
adc
inc
mov
adc
and
or
dec
inc
sti
mov
dec
sti
fcmove
sub
stos
push
test
inc
(bad)
daa
mov
pop
lods
jmp
mov
out
adc
pop
lods
aam
or
push
jns
or
test
jle
mov
push
push
xor
scas
retf
pop
mov
mov
dec
push
sbb
add
adc
rcr
and
or
xchg
jne
add
inc
ja
fwait
call
jb
jmp
push
in
mov
inc
xor
int3
cmps
mul
scas
(bad)
xor
popf
add
jno
icebp
jmp
shr
in
inc
sub
jmp
jp
call
rol
ror
loope
pop
hlt
mov
nop
dec
push
cmp
mov
mov
xchg
stos
outs
imul
neg
or
xor
in
or
jp
std
inc
stos
inc
inc
sub
jg
test
jnp
ror
xchg
push
push
push
cwde
test
hlt
int
addr16
outs
cmp
push
(bad)
ds
push
outs
dec
cmps
push
lahf
loopne
push
ret
fadd
retf
and
push
sub
es
sbb
fsub
dec
fwait
dec
ret
imul
dec
pop
xchg
pop
rcl
inc
js
mov
adc
iret
into
or
or
out
mov
jg
popa
pop
xchg
enter
lds
fldenvw
xchg
hlt
call
xor
mov
or
bound
test
add
out
dec
and
dec
adc
(bad)
js
into
shr
cmp
xlat
lock
dec
pop
call
call
idiv
loope
push
xor
mov
push
neg
push
cld
and
loopne
stos
mov
fisttp
pop
iret
inc
cmp
and
popa
mov
pusha
mov
sub
xchg
jae
cli
(bad)
js
inc
es
inc
out
add
rcr
pop
fnstsw
dec
out
lds
pop
sar
dec
inc
cmp
jecxz
pop
sub
in
outs
or
test
not
pop
stos
sub
push
mov
mov
inc
aaa
pop
retf
je
and
sbb
test
adc
addr16
cmc
sti
push
adc
cs
pusha
dec
in
fwait
xor
mov
clc
dec
test
jae
ror
add
fadd
movs
mov
or
lock
sahf
cmp
jae
retf
sub
dec
std
sbb
repz
xchg
repnz
push
xchg
inc
inc
mov
clc
rcl
sti
mov
inc
lea
out
push
xor
shr
dec
test
div
in
add
xchg
fwait
pop
mov
ror
xor
ror
jbe
pusha
ret
push
pop
or
iret
call
fistp
sbb
fidiv
fincstp
shr
sub
jl
int
push
push
inc
jae
es
test
call
lahf
stc
cmp
or
ins
pause
ficom
and
sti
mov
mov
rol
mov
mov
jbe
jo
jmp
jcxz
mov
aam
movs
retf
inc
aaa
sub
fild
or
add
add
fwait
(bad)
jmp
in
not
push
leave
jb
scas
push
cmps
fsubr
mov
xor
dec
sbb
jle
dec
std
xchg
icebp
cmp
xchg
xchg
adc
xlat
fadd
ja
jmp
out
(bad)
dec
inc
inc
inc
out
mov
imul
push
jmp
gs
mov
mov
sbb
xchg
and
dec
xchg
cmc
scas
call
retf
lahf
addr16
popa
push
iret
es
mov
cmc
jge
mov
cmp
scas
sbb
mov
out
into
fdiv
mov
clc
sub
xchg
das
inc
lods
cmp
out
mov
jae
fisubr
std
scas
popf
ins
loop
loop
mov
pop
clc
adc
xchg
dec
cmp
leave
arpl
or
pop
cmc
xor
cmp
inc
imul
fwait
imul
loope
xor
sbb
loope
nop
ror
mov
in
push
jg
gs
pop
xchg
dec
sub
sahf
mov
(bad)
rcl
in
ds
pop
or
retfw
or
aaa
push
lods
jg
mov
mov
pop
loope
aaa
sbb
das
push
in
mov
outs
adc
dec
xchg
dec
dec
push
push
fcomp
lock
jmp
lock
ret
js
(bad)
xor
cmc
jmp
js
or
retf
xor
push
int3
test
aad
pop
cmp
mov
in
xor
mov
lea
cmp
or
shr
test
jecxz
xchg
or
test
movs
mov
jmp
(bad)
cli
or
xchg
out
jecxz
gs
and
adc
jne
sbb
daa
push
xchg
jmp
icebp
or
push
and
stos
or
lahf
ret
push
je
xchg
scas
in
adc
mov
push
pusha
(bad)
inc
fldenv
fwait
cwde
dec
cmp
add
jno
jns
mov
les
mov
mov
xor
mov
jne
sbb
inc
fwait
std
je
jle
in
and
or
or
cmc
xlat
or
ja
push
jp
test
mov
imul
pop
loopne
mov
sbb
xor
ds
iret
retf
imul
sub
or
mov
inc
les
xor
inc
pop
pop
mov
cmp
mov
mov
add
iret
add
cli
jb
js
pop
pop
mov
mov
sub
xchg
dec
std
movs
stc
sbb
xor
nop
inc
sbb
add
inc
mov
aaa
mov
(bad)
sub
xor
outs
inc
jmp
ss
push
ds
cld
outs
test
cmp
and
mov
xchg
jae
in
test
popa
pop
jne
movs
cli
xchg
and
push
popf
xor
pop
test
inc
test
call
es
mov
ins
and
jmp
fadd
dec
cmc
mov
aad
popa
add
sbb
dec
popf
daa
loope
int
iret
sub
movs
push
jle
sub
push
rcl
inc
or
cmp
mov
lock
fisubr
ficom
inc
adc
int3
mov
xor
int3
mov
mov
mov
pop
sub
mov
adc
std
adc
jp
mov
pusha
cli
cmp
inc
dec
xor
jb
(bad)
int3
stos
pop
cmp
in
lds
cmp
outs
pop
loop
dec
adc
or
aas
xchg
ror
sbb
int
inc
cmps
mov
out
aad
das
pop
mov
repz
or
pop
inc
sub
push
aas
add
daa
fistp
lods
into
fadd
pop
mov
scas
sbb
mov
test
mov
ds
call
push
pusha
pop
mov
retf
fadd
mov
cmps
dec
cmp
cmc
(bad)
fstp
add
icebp
xor
ja
fwait
loop
add
mov
fwait
xchg
xor
cmc
out
mov
and
icebp
dec
ds
mov
imul
jns
xchg
lea
sbb
lea
dec
fwait
pop
and
scas
fidivr
test
ja
(bad)
adc
push
add
inc
data16
adc
jge
lods
fs
sub
jbe
and
inc
dec
inc
mov
xchg
xchg
ss
shl
sub
and
jae
ror
ret
pop
scas
dec
push
xor
daa
rol
pop
call
adc
mov
enter
pop
mov
jne
xchg
xor
das
dec
loopne
repnz
movs
xchg
in
je
cs
retf
popf
call
mov
mov
push
sub
push
add
push
(bad)
call
jge
inc
das
in
pusha
inc
pop
add
fwait
daa
push
dec
pop
xor
cdq
jo
xchg
dec
inc
mov
inc
pop
sbb
push
nop
gs
mov
iret
mov
iret
enter
sbb
inc
call
popa
jns
push
iret
stc
scas
adc
mov
imul
sbb
jmp
dec
cli
jmp
pusha
cmc
add
sbb
cmp
add
or
adc
sbb
imul
jns
push
sub
pusha
mov
mov
inc
push
jbe
xor
nop
xor
sub
(bad)
js
push
jae
mov
cli
div
repnz
cmc
push
push
sti
dec
icebp
lods
or
jmp
sbb
fdivr
mov
mov
hlt
iret
or
cmps
cmps
jmp
push
jmp
bound
mov
jmp
aaa
arpl
outs
xchg
push
mov
ins
push
push
jmp
dec
sbb
test
jne
int3
sar
mov
cmc
in
mov
in
mov
scas
sbb
xor
cmp
sub
fsub
inc
ins
lahf
sysret
hlt
hlt
jns
mov
or
push
mov
xor
fwait
cwde
xor
lea
xchg
loop
arpl
movs
inc
test
fild
cmc
pop
sub
jne
clc
cmp
jle
sbb
xor
push
inc
in
in
mov
icebp
pop
dec
push
(bad)
in
pop
push
xchg
mov
sti
icebp
xchg
dec
adc
and
xchg
jns
jle
mov
call
jnp
pop
les
pop
xor
mov
mov
pusha
pusha
fmul
add
mov
std
jecxz
sbb
cdq
rol
cwde
movs
push
fstp
push
sbb
adc
mov
push
push
pusha
and
stc
jle
jnp
test
cli
jecxz
mov
mov
aad
xor
sub
mov
sub
fidiv
xor
imul
imul
adc
push
add
xchg
sub
mov
(bad)
ja
aas
inc
mov
push
aas
push
or
adc
imul
cwde
neg
dec
pop
inc
push
cli
arpl
mov
jbe
arpl
push
cmp
dec
push
scas
movs
test
jne
xor
fist
enter
xor
mov
pop
cmp
xor
push
sub
or
xchg
mov
(bad)
fst
les
push
aaa
push
sub
test
jns
pop
fstp
mov
fst
fisttp
add
cmc
push
test
mov
and
dec
out
jno
and
push
adc
pop
cmp
sub
inc
out
stc
cdq
pop
inc
in
imul
lds
icebp
call
xor
adc
mov
sbb
push
in
lods
sub
scas
mov
sbb
sbb
pop
and
lea
xchg
inc
cmc
js
xchg
and
arpl
add
popf
push
fst
add
mov
cmp
jmp
or
xlat
test
add
inc
lahf
push
adc
sbb
fs
mov
sub
imul
jmp
push
clc
int3
in
jbe
out
imul
or
dec
push
or
jge
lods
jmp
scas
dec
(bad)
mov
dec
ja
adc
push
int3
pop
or
das
push
push
jns
dec
xor
inc
jmp
icebp
cli
mov
out
mov
pop
cmp
mov
(bad)
or
add
retf
sbb
(bad)
jl
jmp
inc
jo
jne
pop
and
jnp
ret
inc
push
and
dec
ss
xor
sbb
(bad)
addr16
nop
jb
cdq
jp
mov
sub
or
(bad)
data16
ja
mov
call
inc
ins
sub
pop
mov
cli
push
movs
ret
and
push
jns
cmc
stos
sbb
pop
mov
mov
cmp
cmp
bound
jnp
jmp
xchg
imul
pop
mov
fnstsw
(bad)
shr
jb
daa
xor
xor
ret
xor
outs
pop
shl
rol
pop
dec
mov
lods
mov
xchg
push
out
pop
push
sub
jp
in
dec
adc
lock
adc
cmp
push
icebp
xchg
mov
dec
mov
cmc
or
icebp
jno
cli
pop
pop
or
in
xor
cmp
iret
lahf
out
add
push
jge
je
mov
std
dec
mov
aaa
mov
dec
pop
ror
mov
xchg
push
mov
mov
dec
fild
xchg
mov
es
or
cwde
(bad)
clc
les
or
jb
das
mov
or
dec
imul
cld
lock
jb
bound
and
push
test
sbb
jne
mov
pop
(bad)
fst
sub
hlt
or
cmps
lods
arpl
mov
inc
shl
outs
jmp
xchg
jne
mov
arpl
mov
pushf
mov
sub
retf
mov
pushf
fs
cli
ja
xchg
mov
xor
int3
(bad)
loop
push
icebp
(bad)
dec
fisubr
xor
jle
push
out
adc
mov
ds
push
dec
jnp
xor
sub
inc
adc
out
xor
popf
(bad)
xchg
xchg
ret
(bad)
(bad)
push
xor
inc
pop
ds
retf
adc
stos
pop
test
and
gs
push
mov
mov
into
icebp
test
sub
repnz
jne
jle
push
jae
loop
stos
push
xor
in
mov
sti
clc
aaa
jne
test
xor
xor
pop
in
xlat
aad
cmp
clc
(bad)
test
push
movs
ins
mov
cli
or
lods
xor
fcomp
(bad)
mov
or
mov
sti
lock
sar
daa
les
or
xchg
sti
pushf
mov
pop
xchg
enter
xor
or
add
and
dec
add
pusha
xor
inc
sub
sti
inc
xor
into
pop
mov
aaa
enter
sqrtps
sub
add
ds
xchg
jb
cwde
mov
push
cmps
xchg
xchg
push
hlt
push
or
mov
cwde
iretw
mov
adc
mov
adc
stc
daa
aas
dec
mov
xor
fcomp
mov
mov
repnz
into
imul
mov
cdq
retf
add
pop
xchg
pop
(bad)
mov
(bad)
jl
movs
stos
or
push
inc
xchg
add
leave
mov
and
retf
inc
dec
cs
sub
dec
pushf
adc
pop
mov
cmps
int
and
call
dec
push
mov
cmp
xor
fldenv
lea
cmp
cld
int3
adc
dec
test
dec
inc
lods
xchg
and
pop
cmp
pop
sbb
test
xor
std
loope
lock
jp
movntps
mov
cwde
pop
mov
sub
(bad)
sub
pop
jo
(bad)
sub
out
mov
ds
test
mov
or
inc
add
and
in
lods
std
jno
and
sbb
sti
mov
jle
jne
data16
clc
cmps
jle
sub
into
inc
and
(bad)
push
mov
stos
js
div
inc
pop
js
into
and
jo
icebp
sub
mov
test
jle
cdq
pushf
inc
or
mov
cmp
push
xor
sbb
leave
fst
mov
cwde
in
jmp
not
aad
pop
xchg
enter
int3
je
mul
out
inc
xchg
push
ror
faddp
mov
cwde
clc
into
jle
pop
add
repz
jl
inc
dec
and
sti
dec
adc
inc
add
push
xchg
jno
jo
lods
(bad)
in
and
sbb
cmps
ffreep
and
dec
outs
retf
je
retf
push
dec
(bad)
xor
mov
mov
pop
pop
or
(bad)
mov
lahf
mov
jne
shr
sbb
cmps
xor
or
aas
pop
fnstsw
adc
je
mov
and
popa
daa
mov
mov
or
in
mov
ds
ins
call
addr16
js
fist
pop
outs
mov
pop
arpl
jmp
call
mov
jmp
outs
(bad)
add
or
xor
into
push
sar
cmp
out
inc
fiadd
repz
dec
push
cmps
imul
jle
scas
jg
or
imul
ror
pop
sbb
repz
cmp
add
fiadd
push
fsubr
sub
xor
mov
daa
les
inc
and
and
lds
jmp
das
loopne
sti
movs
inc
jae
xchg
je
jo
adc
mov
sub
mov
cwde
bound
xchg
movs
cmp
(bad)
xchg
add
add
xor
xlat
inc
xor
sbb
xor
adc
xchg
adc
shr
sbb
or
aaa
sbb
stos
jge
(bad)
mov
sti
das
inc
aas
in
pop
push
rcr
push
addr16
and
dec
mov
imul
das
outs
ja
(bad)
or
add
mov
jecxz
dec
or
out
push
sub
push
fdivp
mov
aad
mov
adc
pop
jo
xchg
mov
lods
shl
xchg
sub
(bad)
test
push
jmp
add
bound
mov
mov
ds
test
sbb
adc
and
(bad)
mov
mov
or
jg
gs
pop
int3
fisubr
cmps
or
pusha
add
sub
mov
dec
retf
pop
sbb
leave
cmp
inc
in
lds
es
movs
xor
dec
fadd
mov
xchg
inc
dec
mov
gs
push
sbb
imul
mov
cmp
jp
loopne
scas
dec
cld
dec
lds
jnp
cmp
ja
push
loopne
pop
sar
inc
cmc
(bad)
or
fldcw
add
neg
cmp
xchg
cmps
xor
xor
xchg
mov
lds
es
jmp
dec
gs
ret
jnp
mov
add
jne
nop
mov
stc
inc
(bad)
fstp
sub
rcr
jb
loopne
mov
mov
add
cdq
gs
or
sbb
xor
dec
inc
xchg
mov
inc
es
imul
jmp
and
fnstsw
vsqrtss
cmc
test
lods
cld
dec
sahf
push
mov
sbb
sbb
out
fsub
shr
div
push
mov
pushf
test
into
mov
dec
lock
push
push
stc
jno
and
sbb
xchg
nop
js
scas
xchg
push
shr
popf
out
xchg
push
adc
cs
std
pop
mov
and
arpl
mov
lahf
sub
inc
cmp
inc
add
adc
xchg
sbb
mov
xor
and
mov
add
lods
out
pop
and
dec
mov
sub
out
push
xchg
sbb
xchg
daa
cmc
pop
jnp
les
add
inc
(bad)
leave
pop
lahf
xor
add
ins
dec
pop
pop
in
jp
into
loopne
mov
xchg
add
adc
imul
bound
popf
ret
dec
jno
adc
rcr
stc
(bad)
and
ss
inc
ret
call
mov
jge
cmps
or
(bad)
data16
fucomip
and
sub
pushf
xor
adc
jmp
pop
jl
and
xor
mov
mov
in
fnstenv
or
xor
lds
aas
jp
or
pop
aad
mov
sbb
jle
adc
aam
sbb
sti
sti
sub
cmp
jns
mov
mov
xchg
sub
ins
lock
xchg
out
lahf
jo
push
or
push
pusha
pop
push
push
bound
rcr
mov
fwait
scas
cmc
dec
fwait
cmps
rol
in
and
dec
sub
jg
push
lods
adc
and
jge
sbb
add
cwde
adc
adc
xor
std
lods
mov
jecxz
mov
mov
mov
cmp
fild
icebp
push
mov
arpl
int
je
cmp
push
jmp
out
idiv
rol
mov
sbb
sub
cdq
mov
stc
inc
icebp
xchg
and
ss
jbe
loop
adc
mov
sub
cmc
lea
cli
dec
fs
mov
pop
cmc
add
mov
pop
adc
jl
(bad)
or
mov
fnstenv
sbb
sub
out
cli
mov
mov
cdq
mov
push
fwait
jmp
(bad)
add
or
jbe
mov
mov
in
icebp
in
sbb
cmp
push
push
scas
call
mov
lea
sub
mov
xor
inc
push
or
jbe
or
cdq
fldenv
jg
out
fistp
sahf
and
sbb
push
adc
push
dec
inc
sbb
ss
movs
test
int3
call
push
mov
jne
lds
sbb
jb
xlat
sbb
adc
ja
std
dec
mov
repnz
call
je
fs
sar
retf
test
or
stc
jle
cli
mov
call
cmp
mov
mov
and
call
stc
jmp
inc
fnsave
xchg
jo
ret
cmc
xor
cwde
jbe
xchg
pop
cmp
addr16
cmp
lods
idiv
out
sbb
pop
mov
int
jp
mov
jns
movs
mov
movs
cmc
add
sbb
adc
cli
dec
jne
xchg
in
ror
inc
push
inc
jecxz
imul
shl
inc
xor
pop
(bad)
lock
push
sub
aad
ret
sbb
add
push
cmp
lods
rcl
xor
inc
mov
pop
mov
(bad)
push
lods
icebp
scas
cdq
test
xchg
mov
jmp
jbe
test
ss
shr
mov
lods
jns
adc
repz
pop
aaa
rcr
cmp
and
and
neg
push
xor
cwde
pop
or
add
cmps
loop
arpl
cmps
shr
mov
(bad)
lods
cmp
xchg
hlt
push
add
(bad)
jmp
adc
cdq
shl
mov
sub
mov
pop
sub
pop
fimul
data16
(bad)
jne
xchg
or
jecxz
fisttp
ret
loope
gs
xor
int3
xchg
mov
mov
or
sbb
adc
mov
enter
push
ficomp
in
adc
out
sahf
push
adc
add
sbb
js
repnz
leave
mov
cmp
cs
add
cmp
fmul
or
gs
mov
imul
mov
lds
data16
inc
inc
inc
rcl
adc
cmps
sahf
(bad)
cwde
loop
add
div
mov
dec
retf
retf
push
xchg
das
xchg
inc
mov
test
inc
dec
sbb
mov
mov
je
jp
enter
cwde
mov
push
rcr
and
int3
adc
fwait
and
repnz
arpl
lods
dec
mov
ret
scas
out
mov
push
sub
popf
out
xor
in
fistp
fcomi
loop
jmp
clc
sar
sbb
jmp
or
cmps
rcr
sbb
call
xor
loop
jmp
and
mov
sbb
fistp
inc
dec
(bad)
ins
push
out
(bad)
jmp
out
imul
jo
fnstcw
xchg
push
inc
push
cmp
xchg
add
push
cdq
adc
cmp
daa
mov
sbb
call
mov
inc
push
sub
push
add
out
fnstcw
inc
aam
ret
cs
sbb
mov
shl
pop
jo
or
mov
stc
(bad)
sbb
stos
imul
mov
retf
add
inc
xchg
mov
fnstcw
(bad)
jbe
push
xchg
(bad)
fcmovnbe
jge
clc
push
jg
in
xchg
fwait
and
mov
rol
das
cwde
pop
push
mov
jbe
or
or
mov
aam
test
add
xchg
pop
xchg
test
retf
movs
cdq
push
add
adc
outs
fs
lea
and
loopne
sub
add
sub
mov
dec
lods
push
clc
mov
fbld
jle
push
mov
and
imul
xor
pop
pop
in
dec
aas
xchg
in
cmp
stos
int
and
adc
cmp
mov
nop
int
pop
and
jmp
fs
inc
push
and
fidiv
ja
cmp
jnp
sbb
inc
ins
aaa
aas
(bad)
dec
fwait
inc
les
(bad)
ror
mov
push
mov
js
fisttp
ss
adc
popa
jns
and
aaa
adc
jae
in
jno
pop
pop
(bad)
sar
inc
out
cld
addr16
imul
xor
cmp
mov
sbb
mov
add
mov
jbe
cwde
fcmovnu
ins
js
repnz
out
nop
xor
jecxz
sbb
jne
cmp
cld
retf
sub
push
sar
mov
hlt
ss
xor
cmp
mov
mov
pop
or
fiadd
lock
jb
adc
pusha
jne
mov
jmp
mov
jmp
xlat
mov
movs
pop
lods
push
xchg
loopne
cwde
scas
popa
xchg
ss
dec
repnz
inc
ret
loop
jmp
imul
add
ret
dec
xor
jnp
aad
clc
scas
bound
mov
fs
ret
retf
ss
popf
fistp
loopne
mov
jnp
adc
mov
test
imul
pop
lea
aaa
(bad)
loop
data16
movs
(bad)
xchg
inc
call
xchg
adc
and
movs
push
lds
mov
jo
adc
sbb
mov
out
popf
pop
sub
sbb
push
and
mov
cmp
(bad)
sti
in
mov
mov
int3
fwait
pop
or
cmp
mov
mov
dec
repnz
sub
inc
outs
icebp
outs
imul
mov
or
(bad)
in
daa
add
icebp
mov
jmp
jo
xor
iret
and
add
clc
xchg
shl
fcom
bound
lock
cli
call
mov
out
push
loop
shr
sub
adc
cmc
sub
out
sti
repnz
adc
mov
sbb
ret
div
mov
das
out
jno
mov
mov
push
lods
xor
and
or
and
mov
jno
xor
icebp
push
mov
cmp
dec
in
dec
movs
mul
rcr
js
pop
push
lods
lock
(bad)
mov
lock
xor
inc
call
xor
mov
(bad)
fisttp
mov
push
xchg
xchg
xor
add
pop
mov
sbb
add
popf
in
inc
mov
mov
and
pop
pusha
jae
adc
and
push
stc
lock
into
jbe
mov
loope
adc
fdiv
and
sbb
aas
ret
test
(bad)
cmp
ins
xor
pop
or
lock
xchg
cs
dec
test
cmp
mov
mov
jmp
jmp
pop
imul
or
mov
push
imul
mov
repz
imul
and
xchg
into
mov
rcl
or
outs
adc
jmp
add
(bad)
dec
jg
adc
pushf
int
ja
add
push
mov
mov
loopne
data16
xor
call
rcr
(bad)
(bad)
mov
mov
fsub
mov
(bad)
out
leave
pop
sbb
and
add
nop
adc
aas
dec
inc
scas
and
xlat
arpl
arpl
fisttp
and
popa
inc
cmps
or
sbb
sbb
ins
(bad)
and
mov
(bad)
xchg
sub
int
push
push
sub
aas
add
stos
add
mov
ins
shl
lods
push
inc
jae
mov
mov
(bad)
push
adc
inc
call
pop
dec
or
sbb
jnp
and
call
jmp
mov
push
dec
push
inc
xor
or
xchg
xchg
xor
dec
pushf
popa
xchg
out
adc
mov
lds
or
inc
shl
mov
ss
fsubp
xchg
sahf
pushf
cmps
lea
jmp
popf
mov
inc
es
outs
or
push
pop
dec
xor
sbb
rcr
addr16
mov
dec
jp
cmp
or
sahf
mov
jp
scas
pop
aam
push
scas
inc
adc
sub
outs
inc
sub
or
cmp
xor
jmp
imul
pop
push
in
xor
or
mov
aad
(bad)
pop
cwde
fdiv
jnp
or
cmp
mov
sbb
pop
lds
mov
sti
jb
imul
xlat
pusha
jbe
mov
leave
jae
pcmpeqw
xchg
sar
sbb
mov
es
dec
xor
call
cdq
lock
cmp
sbb
test
push
test
retf
add
popf
les
ret
loopne
push
mov
repnz
cmp
xor
stos
nop
mov
jne
fldenv
or
xchg
rcr
loope
dec
test
out
and
pop
cmps
icebp
mov
push
std
add
inc
cmp
lds
inc
call
mov
repz
mov
lea
scas
lods
jmp
leave
or
enter
je
mov
and
std
fadd
dec
outs
mov
add
xchg
sub
xchg
maskmovq
mul
xor
scas
aas
jp
jne
cmp
push
mov
adc
mul
into
cmp
mov
icebp
scas
dec
xor
cli
push
mov
mov
neg
dec
jnp
mov
outs
jno
push
cmps
or
pop
jbe
or
or
sub
jns
push
sbb
adc
inc
pop
sbb
xchg
jl
sub
sbb
mov
pop
adc
pusha
inc
cmp
dec
xor
test
daa
imul
dec
adc
mov
sub
pop
mov
dec
cmp
test
xor
jle
stc
test
jl
xor
pop
sub
pop
mov
and
shl
lods
mov
(bad)
mov
cmps
and
and
loopne
sub
(bad)
imul
fnstenv
dec
adc
sub
lods
adc
jns
stos
imul
adc
stos
fucomip
ret
inc
pop
inc
mov
fst
xchg
enter
xchg
sbb
call
repz
icebp
test
or
sub
inc
mov
cmps
(bad)
arpl
xchg
sub
push
lods
sub
idiv
jmp
in
lods
test
pop
or
loope
adc
sti
push
into
movups
cmp
das
or
cmp
in
enter
and
jbe
mov
outs
out
ret
mov
(bad)
movs
mov
outs
sahf
pop
and
sub
cmc
pop
cwde
inc
dec
add
pop
and
jno
push
cmc
loopne
(bad)
cmp
cmps
mov
cld
jne
pop
xor
inc
push
and
je
mov
test
adc
mov
add
arpl
shl
jecxz
int3
(bad)
push
adc
or
bound
pop
lods
sub
jnp
mov
fs
dec
js
cdq
jle
mov
push
mov
sbb
adc
aaa
fistp
xchg
in
sub
sbb
(bad)
(bad)
ret
cmps
jmp
sub
or
mov
mov
jmp
cs
lods
popa
int3
in
jge
int3
js
stc
mov
pop
jno
mov
or
out
popa
inc
in
clc
jge
mov
(bad)
pop
dec
adc
mov
(bad)
scas
loope
jae
repz
mov
sbb
jle
retf
repz
aaa
sbb
fstp
daa
ret
xchg
pop
mov
dec
adc
pop
in
cmps
in
xchg
ret
cmc
jle
cmp
xchg
das
cmp
sub
push
imul
adc
push
sub
pop
sub
or
lahf
or
pushf
xor
add
cmp
aas
ja
or
adc
add
dec
or
rcl
inc
adc
in
pop
sbb
pop
push
bound
jae
mov
scas
inc
pop
xor
mov
pop
xchg
popa
xchg
fst
cwde
mov
cwde
daa
aas
add
mov
adc
mov
xchg
stos
xchg
jo
icebp
xor
call
push
mov
ffree
shl
sbb
icebp
rol
and
mov
loope
dec
mov
gs
xor
and
inc
sbb
(bad)
into
pop
mov
std
movs
dec
sbb
adc
sub
js
inc
jge
sbb
mov
pop
or
repnz
cmc
lods
imul
stc
jmp
dec
mov
sahf
into
push
add
push
push
in
xor
dec
ins
sub
call
or
and
call
popa
or
cmp
ret
mov
add
jmp
loope
mov
mov
jg
cwde
and
dec
sbb
pop
xchg
and
dec
jl
shl
sar
dec
aad
outs
xchg
repnz
retf
xor
enter
adc
cs
add
rcr
mov
jo
mov
pop
in
push
sbb
popa
or
xor
test
test
or
push
add
pop
movs
stc
sar
stos
sbb
loopne
mov
dec
xchg
jl
(bad)
fmul
cmc
cmp
arpl
inc
jae
push
cli
xchg
dec
retf
jl
sbb
leave
jno
(bad)
aam
add
pop
ret
jb
test
inc
jp
adc
dec
sbb
mov
xor
les
in
mov
ret
lds
(bad)
dec
int3
xchg
sahf
aam
les
leave
test
cli
shl
or
adc
push
or
inc
mov
push
cli
dec
push
hlt
jo
out
mov
lds
add
or
test
cmp
pop
hlt
outs
fldenv
js
fmul
cdq
shr
inc
xchg
loop
jo
mov
ret
pop
loope
inc
ins
add
das
lods
sub
inc
fild
add
pop
in
xor
int3
mov
data16
dec
aam
sbb
cmp
and
mov
sbb
or
(bad)
fisttp
pop
out
xchg
dec
xor
sahf
gs
push
leave
sahf
je
and
lds
and
ss
shr
or
bound
retf
xor
push
add
or
jecxz
mov
jmp
push
mov
jp
inc
pushf
gs
retf
jo
rol
pop
aad
retf
cmp
mov
xchg
inc
jnp
rcl
popa
mov
loope
xchg
lds
sub
and
(bad)
test
stos
xchg
adc
mov
dec
and
ja
inc
push
test
test
jmp
popa
dec
inc
pop
push
push
(bad)
leave
in
xchg
jge
jmp
dec
or
and
jl
xor
stc
adc
fistp
int
out
xchg
push
loopne
(bad)
pop
test
cmps
jecxz
aam
pushf
adc
iret
ficomp
sub
mov
repz
outs
(bad)
in
repnz
dec
xor
popa
mov
sbb
aad
lahf
xor
dec
loopne
int
cmp
scas
bts
nop
(bad)
jne
push
mov
popf
dec
push
inc
ins
les
push
cdq
xor
sub
add
or
aas
test
sub
cmp
cmp
or
lds
adc
mov
push
add
stc
mov
in
push
mov
sbb
add
mov
inc
push
in
les
fistp
xchg
pusha
data16
dec
movs
mov
in
ss
mov
pushf
cli
cmp
jbe
out
push
xchg
cmovp
sbb
lods
mov
jb
jp
push
test
int3
push
pushf
or
xchg
push
mov
int3
retf
cs
test
rol
pop
xchg
sub
push
pop
fstp
bswap
sub
push
cs
dec
dec
mov
inc
daa
jge
test
pop
outs
inc
or
inc
and
ja
cmp
push
sub
xor
pop
jecxz
cmp
fsub
or
rol
ficom
fwait
cld
mov
in
frstor
shl
stc
cdq
popf
push
adc
(bad)
in
cdq
sub
js
and
ret
or
stc
enter
and
sub
dec
daa
sbb
sti
cmp
or
imul
shr
dec
dec
fisttp
cmps
bnd
sub
popa
mov
in
push
dec
sub
arpl
lock
xor
imul
and
jg
mov
cmp
popf
(bad)
stc
lds
xchg
push
test
data16
or
pop
arpl
mov
pushf
adc
cmp
das
xchg
adc
dec
or
pop
pop
adc
cli
stc
pop
jno
add
es
cdq
hlt
in
aam
add
fdivr
mov
inc
repz
clc
call
or
cmp
repz
xchg
cmp
push
push
adc
sub
mov
mov
js
pop
xchg
fld
jne
sbb
and
test
xchg
pusha
call
cmp
cmp
cdq
(bad)
clc
icebp
mov
repz
pop
inc
mov
push
and
jle
sti
hlt
je
jns
int
jl
pop
xchg
iret
jmp
cmps
lock
mov
add
jno
fnsave
mov
sbb
cs
pop
add
xor
mov
push
cmp
push
icebp
dec
jle
fsubr
jbe
(bad)
int
daa
add
imul
test
dec
es
and
sub
loopne
add
shl
repz
push
sbb
in
int
xor
jbe
jle
cmp
out
ins
js
and
jbe
retf
push
cli
mov
fld
or
in
pusha
sti
mov
loopne
call
push
das
pushf
sub
dec
aas
repnz
repnz
ret
mov
jbe
push
daa
xchg
mov
cli
xor
cld
into
outs
icebp
movs
mov
push
and
or
add
add
and
sbb
or
jnp
ret
sbb
inc
and
bound
ds
in
push
das
mov
scas
arpl
dec
(bad)
aam
xor
sti
pop
loope
xchg
push
pop
(bad)
jnp
movs
and
stos
xchg
movs
leave
jle
cmp
bound
cdq
cmp
leave
fdiv
xchg
fdiv
pop
pop
pop
es
mov
add
sub
sub
addr16
and
test
sbb
(bad)
mov
sbb
mov
scas
xor
les
mov
lods
test
xor
and
lock
mov
adc
sbb
adc
pushf
movs
rcr
jae
and
mov
fs
xor
hlt
mov
and
push
hlt
xchg
shl
fnsave
mov
or
xchg
loop
enter
or
jnp
xor
mov
shl
add
xlat
test
mov
test
call
add
cmp
sbb
inc
aaa
mov
es
aas
into
stos
loope
sbb
mov
rcl
xor
rcr
sbb
or
in
and
push
loop
into
aaa
sub
push
and
jns
adc
mov
add
mul
sub
enter
adc
imul
dec
mov
icebp
adc
push
cli
mov
mov
cmps
(bad)
frstor
mov
idiv
ja
xlat
fcom
or
rcl
cmp
and
adc
mov
xor
outs
or
stos
mov
imul
push
push
aam
mov
push
and
ss
xor
sub
pop
mov
cmp
cs
xchg
out
sbb
daa
or
enter
out
push
and
inc
dec
mov
lock
enter
popf
adc
(bad)
js
mov
jo
dec
cdq
jno
xor
cmp
sbb
std
sbb
fucompp
xchg
stos
das
data16
aaa
mov
xor
fist
(bad)
loopne
xchg
inc
sbb
imul
jbe
stos
mov
inc
or
sub
aad
inc
jl
mov
mov
dec
loope
out
jecxz
mov
or
int
int
js
stos
xor
cmp
push
sub
sub
push
or
xlat
movs
je
pop
dec
xor
xor
pusha
sub
fist
dec
shl
push
not
dec
rcr
or
jnp
push
fsubr
fnsave
jl
jno
fsub
push
or
scas
pop
loope
pop
in
(bad)
sar
rol
or
sti
call
pop
mov
pop
loope
addr16
inc
sub
(bad)
shr
or
test
push
arpl
jnp
out
xchg
and
jl
int
clc
and
adc
jo
jmp
or
or
add
pushf
(bad)
jp
and
jmp
int3
(bad)
aam
loop
repz
ss
dec
aaa
mov
fdiv
jne
or
or
(bad)
cmp
test
mov
arpl
repz
lea
enter
push
mov
xor
bound
push
les
sbb
ret
out
xor
stc
add
cs
sbb
je
test
out
mov
inc
test
sbb
jg
pop
dec
aas
dec
mov
in
popf
dec
sbb
jo
mov
push
pop
sahf
xchg
ins
sbb
lahf
loopne
fidivr
jnp
add
loope
push
adc
jle
fadd
mov
jae
fwait
or
shl
into
sub
shl
sahf
in
sbb
lock
nop
adc
aad
cli
or
xlat
adc
and
fs
jne
mov
pop
mov
mov
adc
push
mov
pusha
or
dec
sbb
adc
dec
loope
mov
lds
lds
aam
jecxz
aam
enter
rcr
mov
adc
loopne
pop
pop
jecxz
iret
test
inc
mov
pop
sub
rcr
jg
lahf
das
inc
call
sti
mov
mov
xadd
sbb
sbb
hlt
lods
sahf
aas
cwde
loopne
mov
aas
(bad)
leave
or
(bad)
fnstsw
daa
in
dec
add
dec
dec
rol
outs
cwde
fcomi
cmp
(bad)
iret
call
pop
inc
cmp
inc
or
add
js
jge
inc
jp
sub
sub
sub
mov
shl
inc
and
arpl
mov
aam
into
test
test
rcr
adc
pop
pop
pop
mov
std
xor
jbe
jb
bnd
dec
cs
mov
aas
jle
jmp
ja
mov
jl
in
adc
popa
pand
push
lahf
lds
adc
js
dec
adc
aad
jnp
cli
stc
pop
(bad)
mov
mov
and
rcl
jns
dec
out
sbb
push
loopne
fiadd
push
xchg
nop
ss
mov
pop
add
add
test
xchg
push
cld
lods
sbb
fist
push
cmps
pop
jne
(bad)
or
fsub
adc
cmc
pop
sbb
data16
cmp
popf
push
daa
cmp
sub
nop
pop
or
aam
rcl
je
pop
xchg
mov
in
and
sub
push
mov
stc
dec
mov
xchg
nop
mov
cmp
out
outs
stc
cmp
mov
jecxz
cmc
or
sbb
inc
jle
cmps
(bad)
sbb
lahf
add
lahf
call
jp
add
mov
fadd
ror
call
cmp
adc
retf
int3
test
inc
imul
xchg
pop
das
mov
push
fisubr
adc
push
dec
shr
cmps
and
or
fprem1
cmp
mov
xor
pop
jo
arpl
adc
jne
dec
push
or
mov
xchg
sar
hlt
out
loop
inc
sbb
cmp
cwde
or
imul
pop
popf
pop
sub
or
cs
jge
sub
fbstp
test
int3
das
jmp
or
and
adc
cs
js
movs
mov
push
arpl
cmp
cld
jge
mov
test
cmp
ret
xor
les
jecxz
scas
push
xor
pop
cmp
jp
movs
shl
or
push
dec
adc
cmp
pop
fdiv
jno
cdq
ins
xor
pop
add
pop
scas
push
pop
and
mov
add
xchg
mov
mov
imul
cmp
js
and
mov
stos
add
pop
mov
loopne
test
lahf
mov
pop
mov
inc
fwait
aaa
and
push
xchg
jo
adc
push
aad
inc
or
test
(bad)
jle
(bad)
test
sub
ret
cld
xor
add
call
sub
lds
cmp
mov
fsubr
stos
jecxz
inc
add
fs
sti
ret
mov
jns
sub
cmp
ret
in
xchg
lock
lahf
call
pop
dec
dec
jnp
mov
jns
add
mov
mov
aad
push
dec
mov
add
movs
jbe
adc
mov
aaa
push
clc
xchg
bound
and
jne
mov
in
inc
sbb
push
or
xchg
fisub
xchg
mov
jns
outs
pop
mov
test
pop
pusha
mov
sbb
jmp
mov
jns
pop
sti
ins
out
sbb
push
imul
iret
mov
and
aaa
or
mov
jp
pop
pop
dec
std
call
xchg
push
xor
jnp
test
mov
in
mov
shr
pushf
or
inc
ins
mov
add
into
test
inc
rcl
ret
bound
aad
adc
jb
imul
repnz
sbb
inc
push
scas
jo
ret
and
inc
aas
push
and
inc
add
mov
bound
add
ss
sub
arpl
and
scas
mov
popf
imul
mov
mov
data16
jp
cmp
(bad)
cmp
push
sbb
or
xchg
cmc
mov
ins
push
cmp
jmp
sbb
das
stos
mov
loope
jne
fwait
cmp
push
out
adc
std
pop
mov
lods
or
dec
and
retf
push
movs
fstp
enter
mov
push
or
(bad)
int
les
jne
and
movs
fs
lds
mov
push
mov
test
test
push
push
movs
push
adc
add
mov
aas
nop
mov
mov
mov
clc
dec
xchg
imul
pop
loop
xor
pop
jecxz
(bad)
stc
xchg
push
jno
mov
shl
scas
imul
jmp
cmp
adc
and
arpl
sbb
call
in
xor
clc
mov
mov
jp
push
mov
in
ds
lods
std
or
xchg
sbb
call
inc
jae
in
jle
into
jmp
ins
movs
xchg
add
dec
mov
int
ins
mov
mov
and
in
retf
xlat
nop
sub
jl
or
movs
outs
mov
mov
jb
add
je
cdq
jle
in
stos
sub
call
aaa
dec
pop
push
pusha
pop
hlt
test
xchg
daa
jbe
emms
movs
lods
sbb
test
test
and
clc
test
xchg
cld
pop
adc
mov
jle
aaa
shr
or
dec
cmp
xchg
into
nop
push
stos
xlat
fadd
pushf
adc
mov
sbb
fdivr
jmp
pop
dec
lea
shl
repnz
xchg
xor
out
test
call
mov
inc
(bad)
sub
hlt
pushf
lock
sbb
mov
mov
inc
pop
or
mov
xor
(bad)
ds
scas
ror
push
popa
sbb
(bad)
out
ins
pop
imul
push
pop
xchg
jl
xor
cmp
jl
push
jns
jnp
cmp
bound
jmp
dec
cmps
mov
sti
push
jge
js
inc
jnp
lock
mov
mov
jbe
mov
mov
neg
dec
cli
(bad)
jae
pop
mov
push
fld
(bad)
retf
imul
adc
movs
int3
scas
sar
outs
and
cld
mov
popa
dec
(bad)
xchg
scas
inc
mov
loop
jbe
mov
aad
mov
cmc
call
jo
sbb
pop
fmul
pop
sbb
xchg
push
or
fiadd
xor
jbe
or
mov
cli
out
mov
cmps
les
retf
icebp
in
jae
dec
lock
dec
mov
repz
rcl
xchg
rcl
lods
fisub
rcr
aad
mov
cmps
test
ds
push
(bad)
test
hlt
imul
mov
mov
push
cmp
mov
push
jg
dec
pop
mov
imul
mov
jo
mov
(bad)
push
sbb
les
lahf
pop
ret
xor
jne
or
mov
cmp
push
push
cmp
shl
bound
xor
out
mov
mov
xchg
es
cmps
xor
loope
aam
sub
or
repnz
adc
idiv
mov
xlat
jp
and
data16
mov
test
mov
je
outs
push
pop
rcr
push
sub
movs
push
pop
dec
inc
lea
idiv
popf
push
(bad)
jmp
sahf
movs
dec
lock
shl
inc
out
div
jmp
dec
ss
imul
xchg
or
data16
xchg
aaa
(bad)
and
push
fmul
loope
add
ins
je
loope
out
clc
cmp
jnp
xlat
and
fs
in
loop
sbb
sbb
dec
jns
cmc
(bad)
cmp
outs
xchg
imul
cli
xor
rcr
xchg
mov
cmp
lods
xlat
push
mov
mov
or
nop
aam
mov
das
or
mov
retf
mov
sub
jg
call
pop
pop
or
hlt
jbe
gs
mov
(bad)
adc
jp
dec
sub
aad
es
cld
lock
mov
scas
test
cmp
mov
bound
xchg
cmp
test
xchg
fwait
jbe
movs
sbb
cmp
and
inc
or
jmp
sar
push
(bad)
adc
(bad)
xor
dec
xchg
fwait
xchg
xchg
stc
xchg
push
test
or
or
mov
cli
lahf
xchg
mov
not
mov
sub
leave
fdivr
jle
xchg
repz
mov
in
jle
loopne
mov
jl
inc
jns
push
out
ins
mov
pop
mov
out
jg
inc
ins
and
pop
or
mov
pop
cmp
nop
push
in
loop
inc
push
aaa
mov
dec
clc
mov
jp
ss
stc
shl
jnp
(bad)
and
fucomip
fstp
and
cmp
xchg
ja
jmp
cmp
adc
xchg
adc
mov
(bad)
cwde
jno
aas
inc
retf
jmp
les
arpl
test
dec
mov
fadd
xchg
sbb
xor
inc
fdivr
(bad)
push
jge
cmp
into
mov
pop
cli
pop
cmp
lds
iret
cmc
sahf
push
call
pop
and
popa
dec
outs
sar
cmc
in
cli
cli
adc
jns
inc
adc
les
sbb
cmc
jmp
pop
adc
dec
jmp
fwait
mov
call
mov
inc
add
test
or
mov
xchg
xchg
mov
push
outs
fs
sbb
push
mov
jle
into
dec
push
(bad)
pop
rcr
clc
ss
xlat
push
xor
xor
inc
ret
shr
xor
xchg
sti
lods
test
mov
jo
inc
(bad)
pop
and
enter
mov
xchg
dec
pop
rcr
inc
lea
sub
cli
rcr
out
inc
retf
or
lock
outs
inc
mov
mov
inc
cli
cmp
sub
or
(bad)
hlt
sbb
outs
jmp
jle
dec
movs
cdq
cld
repnz
test
(bad)
inc
repnz
xor
jno
out
or
cmp
cmc
addr16
shl
sub
and
(bad)
sub
adc
xor
in
retf
lods
in
fs
(bad)
or
pop
stc
and
pop
mov
mov
and
xor
rcl
ins
(bad)
pop
hlt
adc
pushf
in
jecxz
pusha
ja
push
pop
fist
jl
stos
pop
call
xor
jno
mov
or
cld
rcl
sbb
or
jmp
or
mov
repnz
mov
or
add
sbb
cmc
jno
cmp
jmp
xor
xor
mov
(bad)
popa
popf
lods
xor
or
adc
xor
lea
ss
scas
dec
cli
push
adc
scas
fs
and
push
into
lahf
ins
cmps
push
cmps
jge
and
add
mov
mov
dec
cs
dec
int
ss
push
repz
lahf
loop
repz
sub
out
adc
sti
inc
(bad)
mov
fld
in
test
dec
mov
mov
imul
push
xchg
cli
pop
adc
adc
imul
fldenv
jmp
mov
sub
aad
cmps
jb
mov
sbb
leave
dec
mov
adc
bound
rol
test
jb
arpl
iret
pop
jmp
outs
mov
div
leave
mov
xchg
jnp
int3
push
push
or
ficom
or
data16
lods
push
rcl
vpavgb
es
dec
or
daa
jl
(bad)
in
cdq
push
test
add
lods
frstor
mov
mov
inc
sahf
xchg
adc
pop
lock
mov
iret
push
push
mov
mov
dec
pop
cmp
jns
sub
call
xchg
push
repnz
fidiv
xor
jecxz
jmp
cld
sub
loop
aas
dec
cmp
push
sbb
cs
push
jns
xor
lods
pop
jb
scas
dec
push
iret
leave
repz
lods
mov
loopne
out
mov
jmp
push
push
mov
test
pop
add
xchg
dec
punpcklbw
stc
jno
imul
test
(bad)
jns
dec
jmp
loope
push
mov
fidiv
jno
dec
icebp
stos
call
jns
sar
mov
rol
jp
pop
sub
ins
lods
mov
jns
jbe
sbb
xchg
pop
push
jg
cs
ficom
int3
cdq
cmp
fistp
push
push
divps
cwde
mov
or
test
lock
mov
mov
push
(bad)
popf
mov
dec
add
cmp
mov
sahf
xor
(bad)
(bad)
inc
push
xchg
adc
shl
mov
cmp
sub
gs
cmp
in
add
pop
fst
movs
inc
mov
ret
and
mov
out
(bad)
loop
loope
fdiv
sbb
sub
or
and
pushf
test
inc
(bad)
in
cld
stos
hlt
fld
push
xor
in
push
pop
shl
add
pop
aas
cmp
mov
fcomp
outs
cmp
push
inc
test
mov
jmp
dec
mov
jge
dec
fcomip
cmps
push
xor
cdq
mov
adc
out
xchg
sub
(bad)
gs
out
inc
ss
mov
pushf
in
or
mov
xchg
jne
aad
mov
bound
outs
arpl
test
pop
pop
pop
xchg
movs
loope
jecxz
out
mov
stos
add
xchg
fidivr
dec
sbb
add
clc
idiv
sbb
les
pop
cli
pop
(bad)
fstp
xor
(bad)
add
or
test
out
jne
imul
adc
jg
mov
jne
pop
jno
push
adc
(bad)
push
les
cmp
add
sub
call
and
cld
inc
sub
jmp
js
dec
push
mov
aas
adc
cs
stos
mov
inc
dec
jnp
ss
aam
adc
or
(bad)
xor
nop
and
mov
mov
inc
jo
outs
fnstenv
jns
test
pop
arpl
ret
sbb
xor
in
rcr
xchg
ins
loopne
test
fiadd
ror
aad
sub
mov
adc
dec
pop
(bad)
dec
mov
repnz
mov
push
xchg
push
mov
xchg
cmp
pop
je
lds
inc
popa
outs
fidiv
mov
add
add
nop
ins
sub
xchg
fsubr
out
pop
cdq
movs
cmp
cmp
jecxz
jge
mov
adc
mul
das
fs
out
(bad)
jmp
fs
shl
retf
push
push
and
mov
mov
dec
add
les
and
ffree
mov
mov
jnp
adc
mov
lahf
and
jnp
mov
mov
popa
ficom
xchg
mov
xchg
xchg
rcl
sub
or
jp
pop
fsub
push
js
cmps
inc
dec
mov
or
dec
inc
push
and
ss
sbb
sbb
frstor
push
jl
jae
adc
ret
shl
fisubr
pop
mov
mov
js
into
aaa
adc
jns
cmc
imul
mov
sbb
je
pop
add
test
pusha
arpl
add
rol
retf
mov
hlt
outs
xchg
or
pusha
leave
cmp
out
xor
jmp
aad
sbb
(bad)
ins
sbb
jg
(bad)
call
data16
and
mov
psubsw
and
rcr
cmp
pop
scas
fstp
inc
test
das
scas
adc
cmps
pop
jmp
mov
pop
fdiv
pop
test
retf
xchg
retf
int3
jae
pushf
sub
push
fisttp
xor
and
mov
xchg
lods
dec
adc
fadd
loop
mov
cs
adc
int3
test
jbe
push
mov
mov
sbb
icebp
sub
push
dec
dec
add
xor
das
or
aaa
out
rcl
sbb
and
call
add
outs
xchg
pop
fmul
clc
(bad)
in
push
mov
mov
mov
jp
mul
retf
ret
cmps
in
jmp
test
cdq
leave
mov
jp
mov
xor
dec
mov
mov
mov
dec
ins
(bad)
(bad)
pop
cmp
or
int3
xchg
sbb
fsubr
pop
aas
jnp
(bad)
mov
popf
test
jl
es
push
call
sti
xchg
pop
dec
jp
int3
test
mov
dec
and
(bad)
jo
icebp
retf
pop
shr
xchg
and
cmc
mov
bound
inc
push
pushf
fsubr
sbb
push
in
std
pop
aad
and
test
idiv
out
sbb
loope
lds
cmps
jg
sbb
mov
dec
sbb
or
mov
xor
leave
or
sbb
sahf
addr16
test
call
(bad)
into
pop
in
jo
out
nop
fwait
in
pop
lods
les
fidivr
push
sbb
dec
xchg
or
xchg
push
push
mov
test
retf
bnd
ret
sub
jne
jo
(bad)
enter
pop
sbb
push
mov
mov
sub
loope
xor
loope
mov
and
inc
cmps
xchg
cmp
cmp
pop
sti
(bad)
xchg
or
arpl
and
mov
scas
jnp
fnstcw
adc
shr
sti
cmp
add
std
aam
dec
movs
jb
mov
mov
push
fwait
inc
or
and
in
mov
int3
cmp
pushf
dec
pop
cmps
mov
repz
cmp
mov
repnz
sbb
(bad)
sub
pusha
mov
xor
daa
push
push
push
mov
cmp
fnstenv
inc
out
sar
daa
pushf
sbb
and
popf
fcomp
jecxz
scas
retf
retf
cli
push
loopne
je
push
leave
rol
ja
icebp
push
pop
mov
inc
sub
jmp
test
adc
push
pop
jge
les
adc
mov
rcr
dec
fdiv
sub
test
(bad)
jmp
xchg
or
cdq
fsubr
lods
lods
inc
retf
add
mov
fsub
(bad)
fmulp
arpl
aam
test
pop
fcmovnu
jb
out
xlat
dec
jo
jle
push
loop
xchg
fld
pushf
mov
popf
das
(bad)
repz
jb
jo
inc
jo
xchg
xor
cdq
(bad)
xor
loopne
retf
fdiv
pop
or
or
mov
std
in
jmp
call
xor
sub
lods
dec
sbb
xor
mov
and
movs
jno
or
sub
push
sbb
fmul
adc
pop
sub
xchg
xchg
sub
rcr
xchg
xor
add
pop
or
scas
cmp
jmp
loopne
sub
sub
mov
xor
jns
add
push
fsub
and
inc
icebp
inc
mov
sahf
retf
sub
sbb
dec
xchg
mov
sbb
and
es
or
in
mov
cmp
or
outs
nop
arpl
daa
pop
cld
retf
adc
loopne
push
or
aad
sub
mov
mov
or
movs
jge
rcr
adc
and
es
dec
adc
jns
sub
adc
jmp
int3
or
sar
lahf
cmp
(bad)
lahf
mov
jns
xor
pushf
sub
int3
out
add
call
inc
xchg
dec
and
cwde
push
jbe
adc
movs
cmp
pusha
adc
or
fidiv
test
sub
sbb
inc
adc
sar
xchg
xchg
fcmove
movs
js
lds
sbb
es
push
lahf
push
fucomp
inc
jno
push
cmp
popf
sub
clc
push
cld
test
jmp
push
mov
das
jg
dec
lods
and
test
cmp
jl
push
(bad)
out
rcl
jl
xor
out
jmp
add
push
xor
retf
ins
dec
(bad)
push
dec
call
gs
mov
cld
and
scas
ror
mov
test
xor
xor
retf
sbb
daa
mov
jmp
and
mov
cs
dec
ficom
out
cdq
xor
jno
dec
inc
aad
int
mov
rol
gs
movs
sub
push
jge
daa
jbe
push
push
push
and
(bad)
pop
fdivr
jmp
xor
std
das
jo
jg
pop
shl
xchg
xor
ficomp
scas
cmp
sahf
gs
sahf
xor
js
loopne
inc
seta
mov
and
pop
mov
ror
pop
cld
int
pop
adc
dec
add
adc
dec
cmp
mov
dec
loopne
mov
not
sbb
xor
xlat
rcr
sti
dec
sub
xchg
ins
sbb
mul
sbb
clc
scas
(bad)
jl
cmp
xchg
movs
inc
pop
xlat
jbe
sbb
rcl
int
jne
sti
jb
out
call
jno
adc
arpl
xor
xlat
into
repnz
xchg
ds
push
adc
sbb
jl
mov
jl
pushf
mov
jbe
push
jmp
or
in
das
in
es
jae
out
cmp
mov
inc
pop
(bad)
ins
dec
sbb
fadd
in
in
dec
cmps
mov
cmp
or
cli
mov
cmp
or
dec
ins
scas
cdq
mov
jae
cmp
mov
popa
xor
adc
jecxz
inc
jle
call
jmp
cmp
or
mov
xchg
inc
nop
aas
lea
je
mov
retf
mov
cs
int
into
push
clc
push
lods
add
adc
jg
pop
ja
xchg
mov
or
sti
push
dec
cmp
fmul
jge
jmp
lods
and
mov
mov
xor
arpl
call
sbb
je
xor
and
fwait
les
lahf
repnz
inc
retf
ins
inc
cld
add
adc
sbb
ds
movs
dec
cdq
cmp
stc
push
dec
push
out
aad
mov
cmp
mov
push
or
xor
fisubr
mov
pop
punpckhwd
scas
mov
loop
enter
mov
and
or
add
dec
mov
inc
push
cmp
jmp
in
popf
arpl
stos
add
fs
xchg
mov
pop
scas
and
retf
jl
xor
pop
retf
or
cmp
addr16
or
outs
lahf
sbb
sbb
cwde
and
sub
cmps
push
fldenv
jne
std
adc
dec
aad
push
cwde
sti
push
in
sbb
data16
jp
fiadd
out
jmp
xor
fwait
out
jo
(bad)
dec
jno
add
rcr
dec
(bad)
inc
daa
ja
in
cwde
enter
jb
jnp
fstp
xchg
popa
push
pop
or
arpl
adc
inc
sbb
sub
addr16
adc
inc
mov
pop
imul
(bad)
inc
mov
ficomp
mov
ss
int
inc
mov
(bad)
std
pop
pop
shr
and
cmps
lea
lds
adc
outs
mov
jmp
adc
add
xor
icebp
xor
ret
add
mov
dec
mov
pushf
addr16
sub
fst
jae
xchg
inc
loopne
adc
pop
jmp
fst
mov
loope
xchg
xor
xor
pusha
jge
mov
fist
push
inc
and
jmp
lea
or
call
pop
out
outs
or
in
mov
xor
popa
lock
or
cmp
fsub
fwait
jecxz
xor
aaa
push
fidivr
(bad)
dec
fs
pop
xchg
inc
stos
(bad)
or
mov
adc
std
leave
stos
xchg
dec
or
mov
xchg
push
mov
movs
ret
loope
push
or
stc
pop
inc
test
mov
retf
out
push
mov
mov
xchg
aas
loop
pop
das
push
in
cdq
popa
rcr
add
pop
das
fmulp
mov
arpl
sub
scas
dec
outs
ins
xchg
int3
pusha
and
mov
xor
mov
not
fisttp
or
call
(bad)
ds
mov
fist
inc
int3
or
cmps
data16
adc
mov
stc
ins
sbb
push
jmp
(bad)
ss
sbb
ins
aam
jnp
aam
jno
mov
adc
sahf
inc
cdq
xor
jbe
push
dec
cmp
lahf
mov
divps
int3
pandn
pop
lds
or
xchg
jge
sub
call
ret
adc
inc
mov
out
add
repnz
dec
push
sub
pshufw
push
xchg
fdivr
ss
or
mov
daa
(bad)
into
push
retf
movs
dec
push
out
sub
jb
xor
push
push
inc
jae
std
les
popf
sub
test
pop
call
or
enter
out
cmovbe
call
cwde
jno
cmp
sub
fld
ret
push
xchg
jecxz
mov
aas
rol
or
ret
jle
mov
jb
jo
xchg
pop
sub
test
dec
sbb
dec
cld
dec
mov
mul
and
(bad)
clc
push
jge
mov
inc
cmc
das
mov
lods
inc
mov
into
aad
sti
fistp
popa
jb
fdiv
outs
dec
or
out
mov
jne
adc
imul
cdq
aaa
or
or
lds
mov
popf
call
clc
push
or
mov
sti
in
movs
xor
bound
mov
repnz
xchg
cmc
and
xor
sbb
dec
cwde
test
xchg
push
les
test
and
lods
adc
daa
adc
jno
mov
push
mov
(bad)
pop
or
hlt
xchg
sub
xchg
adc
icebp
clc
outs
and
pop
sbb
push
inc
scas
push
cmps
inc
and
jg
pop
bound
cmp
retf
hlt
jecxz
mov
in
mov
pop
xor
jb
stos
adc
cmp
jae
cmps
mov
(bad)
loope
xchg
xor
adc
outs
ds
pusha
fadd
xchg
call
cwde
in
fwait
pop
aad
outs
nop
call
pop
call
hlt
out
fs
jae
mov
mov
mov
adc
dec
dec
ja
scas
or
adc
aaa
enter
push
and
or
xchg
xchg
shr
repnz
scas
lods
push
xchg
mov
cwde
xchg
fild
out
loop
pop
hlt
xlat
repz
mov
cmps
mov
out
or
mov
stos
sbb
jle
cmps
sti
mov
jns
in
jae
(bad)
mov
or
pop
leave
fsubr
xor
fimul
in
sub
test
imul
or
push
mov
dec
mov
nop
out
pop
push
mov
or
nop
stos
pop
xchg
lock
mov
or
xchg
push
test
jg
test
pop
pop
sahf
jo
mov
mul
dec
jp
xlat
ret
adc
jo
mov
jmp
mov
jnp
ror
loope
int3
or
mov
mov
dec
xor
add
sbb
mov
iret
jbe
sahf
push
adc
sub
mov
inc
dec
pop
cmp
call
ja
jle
call
dec
pop
mov
loope
jg
and
scas
outs
aam
sbb
adc
test
jge
and
into
mov
or
js
adc
jge
inc
push
inc
push
test
cwde
enter
pop
fild
ja
cmp
cmps
or
pushf
adc
mov
in
pusha
es
lods
out
enter
and
or
and
retf
outs
pop
inc
jle
ret
sbb
pop
into
bound
adc
popa
mov
pop
and
adc
fwait
and
cmp
dec
mov
xchg
(bad)
and
inc
adc
xchg
jge
push
(bad)
jecxz
shl
mov
jg
mov
shl
nop
mov
retf
arpl
icebp
xchg
pop
retf
xchg
add
jecxz
test
stos
jno
mov
sbb
mov
rol
jno
mov
sti
xor
sub
and
out
jmp
into
jmp
mov
jge
xchg
arpl
sahf
in
dec
in
outs
(bad)
data16
fidivr
loop
vsubsd
mov
sbb
(bad)
dec
in
leave
pop
inc
mov
ins
sub
test
inc
cmp
gs
pop
inc
push
dec
lock
or
inc
out
xchg
sub
repnz
inc
lock
push
mov
or
cld
inc
xor
fstp
ds
leave
cmps
mov
pushf
xlat
add
ror
jl
mov
dec
mov
xlat
(bad)
in
pop
in
inc
dec
and
xor
fbld
mov
inc
test
jo
out
mov
loope
pcmpeqb
sbb
iret
jmp
dec
xor
mov
xlat
std
aad
cmp
fmul
mov
xchg
in
fnsave
mov
dec
jne
(bad)
stos
movs
ss
inc
xlat
nop
cmps
cmp
test
test
scas
push
adc
or
retf
loope
mov
xor
movs
mov
and
rcl
ss
lods
and
cmc
iret
(bad)
mov
in
xlat
mov
iret
mov
and
or
cmp
or
shl
sub
iret
pop
xchg
out
xor
pop
sub
mov
cmp
xor
aas
bound
movlps
lods
mov
inc
cwde
bswap
je
push
shl
sbb
push
adc
(bad)
push
sbb
rol
loopne
pop
cli
retf
dec
sbb
push
lds
or
and
add
pop
mov
jle
add
push
addr16
jmp
mov
mov
jb
fmul
and
dec
stc
scas
dec
jl
pop
ins
adc
movs
mov
adc
or
xchg
lea
jecxz
lahf
sahf
mov
in
shl
fidiv
outs
sbb
cmps
cld
movs
popf
or
aam
aam
cld
jecxz
push
rol
into
fstp
cs
cli
mov
aas
dec
out
test
pop
test
jmp
pop
mov
sbb
fdivr
movs
add
icebp
(bad)
aas
into
xchg
call
mov
in
mov
add
mov
jnp
scas
repnz
data16
and
rcl
jle
test
sahf
push
and
ss
pusha
jecxz
cmp
sub
pop
add
leave
fiadd
push
mov
cmc
sub
mov
mov
mov
lock
mov
(bad)
pop
ror
xchg
int3
ror
popf
fwait
std
(bad)
loop
retf
scas
xchg
in
int3
in
pop
inc
sub
movs
jge
jo
cmp
test
sub
xor
int3
mov
mov
std
sub
and
xor
aas
sub
retf
mov
jle
fiadd
ds
addr16
popa
dec
inc
inc
nop
dec
movs
mov
jbe
repz
lods
push
ror
pusha
pushf
mov
add
xor
pop
mov
xor
call
pop
pop
idiv
test
ins
pop
and
jne
push
pop
repz
ins
mov
ins
jnp
pop
jnp
stos
out
(bad)
pop
xchg
push
dec
aas
data16
cdq
push
mov
sub
sub
sub
cs
xchg
(bad)
sbb
inc
xchg
push
fbstp
mov
scas
push
push
cwde
or
mov
inc
xchg
bswap
sbb
hlt
lods
and
hlt
into
in
adc
and
mov
cmc
int
sbb
in
retf
nop
inc
ret
xchg
cmove
lock
push
in
cmp
add
mov
mov
imul
xlat
jb
sbb
sahf
jl
xchg
add
inc
adc
push
push
(bad)
mov
xor
mov
xchg
shr
std
sub
imul
pop
inc
inc
mov
pop
or
dec
mov
add
jne
mov
jmp
repnz
add
fs
push
cmc
and
push
js
sbb
or
pop
jmp
shl
or
dec
mov
xchg
jg
jle
push
std
cs
pushf
and
in
or
loopne
dec
(bad)
jb
push
inc
mov
add
xor
test
cdq
adc
lea
jns
pop
in
in
xor
ret
fcom
mov
out
cmp
inc
jge
lock
scas
test
jg
leave
fild
pop
cwde
jle
movs
ins
mov
xchg
loope
mov
popa
mov
out
imul
lea
mov
push
xchg
add
pop
lea
mov
pop
or
inc
and
in
mul
scas
rol
sbb
inc
mov
arpl
daa
(bad)
cmp
les
dec
repz
mov
mov
in
cwde
inc
movs
or
jp
sub
dec
xchg
push
mov
leave
xchg
mov
repz
dec
and
ins
rol
or
push
aaa
ja
enter
add
pop
bound
int
pop
jle
and
dec
pop
cmps
dec
ret
mov
in
cmp
arpl
test
push
aad
leave
xor
mov
add
mov
pop
xor
xor
ja
pop
and
jp
cmps
push
sbb
and
fdivp
dec
fst
adc
je
mov
add
pop
dec
lods
xlat
cli
jns
cdq
ins
inc
cmp
dec
or
mul
icebp
xchg
push
pop
xor
pop
pop
addr16
and
xchg
adc
and
(bad)
sbb
cmp
popa
push
jb
xor
xchg
jg
sub
out
sbb
out
cli
fdiv
push
push
fisub
arpl
push
das
pop
test
adc
add
out
pop
pusha
je
xchg
es
mov
inc
int
add
pop
and
repz
pusha
aam
dec
mov
or
push
dec
jmp
mov
loope
inc
mov
rcl
or
retf
(bad)
cmp
loope
sbb
pop
jecxz
in
jge
mov
xor
ds
cs
neg
dec
out
pop
es
test
ss
mov
push
push
inc
and
popa
outs
xlat
mov
jecxz
lea
cmps
sbb
mov
or
sbb
out
cmp
pop
mov
je
fisubr
dec
imul
and
inc
and
push
sbb
stos
ret
lahf
push
dec
jl
sbb
sbb
jns
and
mov
test
into
add
jo
shr
sub
cld
int3
push
sbb
add
iret
add
lods
mov
cmp
sbb
sub
loope
ins
cmp
xchg
shr
mov
pop
aam
xchg
mov
push
out
sbb
xor
jmp
cs
cmovg
and
aad
push
std
imul
mov
sbb
aam
mov
outs
cmove
icebp
lock
push
ds
adc
adc
or
push
or
push
adc
lds
mov
int
sub
arpl
aaa
mov
ja
data16
into
push
retf
hlt
cmp
out
(bad)
pusha
es
mov
or
mov
mov
fwait
sbb
test
in
mov
pop
mov
cs
adc
fs
xor
out
in
lods
leave
sub
adc
mov
outs
outs
fadd
cmp
ja
loope
jl
cdq
into
das
and
loope
loopne
test
rol
rcr
dec
cwde
test
sub
xor
jnp
popf
int3
fisttp
mov
loop
dec
icebp
int
mov
add
push
add
mov
lods
cwde
dec
and
jge
mov
xchg
inc
mov
outs
jle
sub
lahf
mov
push
xor
cmp
clc
lds
xchg
js
rcr
or
mov
addr16
cmp
add
aam
rol
data16
clc
sbb
ja
hlt
sbb
dec
ret
aam
shr
leave
jo
mov
int3
cmp
and
cmps
enter
cli
mov
cmps
push
in
push
dec
or
ror
dec
mov
push
inc
cwde
cdq
imul
lods
and
cmp
in
inc
fnstsw
ds
mov
or
mov
sahf
lods
test
loopne
push
cld
and
jnp
div
test
aam
je
xor
fisubr
add
mov
dec
xor
adc
sub
outs
pop
leave
mov
rol
lds
(bad)
not
fist
or
jne
xchg
data16
adc
push
imul
call
jmp
das
pop
inc
mov
ficom
int3
sub
fst
sbb
mov
jge
adc
inc
ins
jl
xchg
int
dec
jge
jb
ret
into
pop
cli
in
inc
xchg
sbb
mov
mov
jge
inc
xlat
mov
(bad)
adc
and
sbb
xchg
dec
(bad)
fdivp
ss
mov
xchg
pushf
xchg
scas
xor
sub
pop
in
or
adc
bnd
xor
iret
push
mov
xchg
ret
fnsave
retf
scas
xor
mov
mov
shr
es
not
ret
mov
sub
test
(bad)
mov
cmp
loopne
push
jmp
leave
imul
arpl
mov
fsub
pop
aaa
mov
xchg
pop
lahf
mov
push
mov
sbb
imul
push
fisub
sub
xor
out
std
push
and
pop
and
arpl
outs
or
popf
jne
not
jmp
mov
out
movs
push
mov
pop
xchg
jmp
xor
push
test
lods
imul
loopne
xchg
xor
pop
out
ins
jo
dec
mov
xchg
jnp
rol
jecxz
scas
adc
cmpps
xchg
or
xor
stos
(bad)
add
xchg
push
(bad)
arpl
arpl
shl
sub
fisttp
or
and
mov
repz
adc
push
pop
dec
mov
mov
std
jbe
daa
mov
pop
push
push
dec
cld
adc
fldenv
ins
xor
jbe
inc
xlat
sbb
fmulp
loop
(bad)
or
mov
in
into
in
int
mov
ins
ret
fwait
rcr
clc
inc
outs
inc
adc
pop
std
mov
pop
test
push
mul
sub
jge
adc
pusha
(bad)
out
push
and
jmp
pop
pop
je
inc
cwde
loop
push
mov
jno
sahf
xchg
iret
and
push
arpl
aaa
sub
cmps
sbb
clc
pop
and
call
out
xor
mov
fucompp
lods
loopne
clc
adc
cli
mov
jle
leave
adc
lock
dec
push
or
out
(bad)
je
push
cdq
or
into
cwde
mov
gs
sbb
cmp
pusha
mov
xor
jp
xchg
xlat
mov
xchg
retf
push
sub
mov
or
stc
rol
push
popf
cmp
jg
lea
lds
pop
test
neg
sub
std
adc
stos
aaa
fcmovnu
inc
stc
into
mov
jb
sub
pop
fdivr
dec
push
and
add
or
and
fs
lock
mov
push
lds
aad
push
hlt
push
aas
mov
cmps
sar
cmp
adc
adc
mov
xchg
ss
push
gs
ja
mov
jl
jmp
ret
aas
xor
test
adc
or
int3
enter
fisttp
lods
and
xchg
lahf
mov
dec
sbb
mov
mov
fs
pop
mov
pusha
out
(bad)
iret
cmp
xor
jae
and
adc
(bad)
adc
jmp
repz
mov
lds
mov
test
adc
(bad)
fnstenv
add
xchg
sub
(bad)
(bad)
dec
clc
lahf
lahf
dec
sbb
mov
popa
es
inc
lea
stos
mov
rep
inc
adc
ja
mov
sbb
adc
es
mov
pop
adc
mul
js
pop
add
sub
ja
and
push
inc
gs
mov
daa
adc
shl
mov
pop
mov
adc
lods
dec
lock
pop
add
rol
outs
jo
pop
mov
inc
stos
cmp
push
call
popf
jo
out
idiv
sbb
cmps
lock
cli
jno
xchg
or
jge
fcmovb
inc
and
sub
shl
and
jo
cli
inc
inc
pushf
mov
cmps
mov
js
ror
repnz
jae
push
mov
pop
retf
stos
push
jo
xchg
add
cmps
sbb
js
loopne
mov
mov
xchg
in
dec
mov
cmp
cmp
lods
loopne
hlt
jbe
push
cmp
jo
fild
into
les
or
add
retf
stc
push
sub
out
retf
out
sar
fst
out
add
mov
pop
mov
leave
dec
xchg
fs
(bad)
(bad)
in
xor
in
sbb
mov
inc
and
sub
sub
xchg
stos
cmp
or
dec
sub
xchg
xor
jbe
sar
adc
mov
cdq
sub
jb
pop
outs
enter
imul
add
dec
cdq
addr16
jecxz
(bad)
jbe
in
imul
(bad)
gs
(bad)
mov
xor
repz
or
adc
adc
fild
dec
jnp
xchg
stos
push
cs
inc
and
in
jecxz
mov
xchg
push
repnz
jns
mov
mov
arpl
lds
rcl
clc
fsubp
loopne
inc
ret
test
and
sub
stc
(bad)
neg
fistp
scas
jb
sub
je
imul
xor
mov
ficom
rol
jns
in
(bad)
je
pop
setne
movs
adc
data16
les
int
sub
or
or
mov
pop
cmp
add
nop
sbb
mov
ror
sar
mov
sbb
mov
fcomp
out
in
cmp
push
ins
jae
or
mov
pop
mov
add
jg
cmp
movs
jg
xchg
sub
fs
dec
repz
mov
stos
xor
jle
out
and
outs
add
in
cmp
std
cmps
jnp
repz
adc
mov
test
jnp
fistp
stos
hlt
and
push
icebp
(bad)
scas
fs
imul
ror
sbb
adc
mov
cwde
sbb
test
xor
gs
test
cdq
ins
ficom
add
out
jl
lods
mov
inc
pop
add
sbb
mov
mov
scas
sbb
mov
xchg
lahf
cmp
push
out
push
push
xor
sub
int3
sbb
mov
cmps
fbstp
lods
adc
jo
or
push
xor
push
xor
adc
jae
imul
xor
pop
xor
scas
std
jp
loope
xchg
outs
inc
or
daa
ins
daa
mov
scas
jno
dec
dec
daa
pop
sbb
mov
mov
loope
cmps
push
retf
sti
ret
mov
test
mov
and
shr
cmp
lahf
inc
mov
fild
inc
lea
pop
sub
fidiv
call
inc
push
ja
jg
hlt
ja
ja
je
add
pop
fmul
pop
dec
xor
adc
daa
or
add
(bad)
imul
das
mov
xor
add
adc
stos
mov
adc
pop
adc
imul
add
jmp
stc
dec
sub
jns
mov
rol
xlat
pop
mov
sub
and
gs
retf
jnp
call
xchg
out
fcmovbe
xor
adc
sbb
cmps
(bad)
jne
or
fwait
aas
stc
xor
inc
sbb
(bad)
pop
sbb
xchg
jp
xchg
jle
pop
imul
mov
aam
mov
xor
xor
ins
ret
inc
mov
cmp
dec
xlat
out
xchg
sbb
xor
dec
stc
jo
test
pop
add
and
adc
ss
fiadd
jl
stos
sub
xlat
and
cwde
ror
push
fwait
bnd
ror
scas
enter
push
aad
xchg
sub
dec
stos
mov
and
sub
mov
mov
ja
retf
rol
imul
sbb
test
shl
sub
sbb
xor
ret
or
or
mov
sahf
retf
enter
add
sbb
lea
leave
mov
jmp
xchg
loope
daa
mov
lock
push
int3
push
cli
into
cs
(bad)
das
mov
mov
into
pop
popf
push
test
or
es
xchg
inc
stc
shr
mov
dec
pop
and
adc
adc
jns
sbb
jmp
stc
xchg
mov
or
mov
dec
out
imul
dec
inc
popa
dec
int3
clc
in
pop
fcmovu
push
test
fisttp
pop
inc
pop
adc
(bad)
adc
sbb
cmp
jns
lahf
and
mov
adc
push
xchg
push
push
and
fstp
cmp
inc
push
mov
push
scas
add
dec
outs
push
cld
jmp
xor
xchg
adc
(bad)
dec
mov
cmp
jmp
and
jl
repnz
and
pop
(bad)
out
sub
lods
cmp
stc
pop
cli
or
repz
add
sbb
pushf
js
mov
or
dec
repnz
test
pop
cli
add
(bad)
jo
mov
cli
je
call
ret
mov
fbstp
inc
lock
mov
xchg
daa
inc
fst
mov
mov
stos
pushf
les
xor
aas
mov
xchg
fsubrp
imul
jae
adc
popaw
push
test
xchg
jle
(bad)
imul
aad
call
pop
in
sahf
jnp
aas
cmp
clc
or
dec
jmp
mov
push
mov
sub
call
(bad)
mov
lods
shl
in
mov
(bad)
cdq
ins
adc
xor
int
and
mov
jbe
sbb
mov
push
sub
cs
mov
(bad)
in
dec
js
cmc
dec
adc
icebp
or
jge
cmovs
push
aad
sub
sbb
loop
inc
sub
loopne
sbb
ror
push
inc
fdivp
inc
xor
cld
jp
dec
mov
jp
jecxz
xor
push
div
adc
xchg
das
pop
das
sbb
mov
int
cmp
js
sbb
mov
popf
(bad)
int
adc
xor
in
(bad)
test
fld
cwde
(bad)
mov
pusha
mov
adc
cmp
dec
pop
fisttp
in
neg
mov
shl
fist
clc
cmp
iret
or
jge
retf
xchg
iret
cmp
int3
cs
or
sub
rcl
jl
adc
repnz
test
pop
out
pusha
(bad)
daa
xor
mov
cs
mov
lds
jge
xabort
push
outs
fs
pop
dec
(bad)
mov
mov
(bad)
jg
dec
inc
jo
clc
push
pop
retf
les
xchg
aas
int3
and
aad
scas
je
mov
pop
push
pop
dec
mov
(bad)
ficom
cmc
xchg
dec
and
sbb
in
push
dec
mov
push
mov
dec
pop
bound
push
and
or
inc
xor
inc
mov
inc
mov
mov
pop
mov
in
push
and
or
test
iret
imul
cmp
mov
cmovs
not
out
shl
js
clc
mov
mov
stos
jno
pop
(bad)
fmul
fsubr
jmp
or
pop
outs
cmp
mov
fcomp
push
and
mov
jno
imul
mov
jmp
cdq
rol
test
shl
mov
mov
xlat
push
lea
test
not
outs
das
imul
(bad)
icebp
xchg
ror
cli
cli
test
pop
aas
imul
icebp
into
cmp
icebp
push
sub
push
sahf
jbe
xor
adc
jo
sbb
adc
cmp
pop
(bad)
push
fmul
or
out
out
mov
xlat
cmp
inc
or
cmp
xrelease
cld
pushf
or
sub
jmp
lea
push
xchg
bnd
fnstcw
and
aaa
sub
rcl
sar
test
loope
sub
(bad)
into
pop
mov
mov
jnp
retf
std
fld
arpl
pushf
imul
add
int3
mov
cmp
imul
clc
mov
aaa
lods
push
xor
cwde
pop
je
repnz
ret
pop
mov
rcl
cmp
or
inc
dec
mov
add
add
test
sbb
pop
pop
adc
test
scas
ins
mov
ret
sbb
sub
mov
ss
xchg
int3
pop
call
jo
test
push
aaa
add
call
add
lods
sbb
stc
mov
and
call
les
mov
ror
inc
pop
mov
ret
ror
stos
int3
jbe
dec
pop
popf
xor
icebp
pop
pop
jecxz
fist
cmps
or
call
mov
cmp
pop
ret
aaa
sbb
aam
das
xor
xor
pop
mov
repz
imul
arpl
in
(bad)
aad
out
data16
fdiv
mov
adc
mov
loope
repnz
movs
pop
sbb
test
es
in
mov
data16
es
dec
scas
rcl
lock
sbb
ja
mov
jae
push
mov
sahf
push
mov
das
iret
iret
jb
je
(bad)
and
inc
xchg
fist
(bad)
xor
or
jl
stc
push
cmp
(bad)
scas
aas
mov
dec
mov
xor
push
ins
pushf
or
cmp
fadd
std
inc
xchg
jno
int
sbb
imul
add
mov
xor
in
in
pop
(bad)
cdq
and
or
adc
push
xor
lock
adc
rcr
shl
xchg
add
lods
xchg
mov
push
jb
xchg
inc
je
idiv
retf
retf
test
mov
sub
rcr
sahf
outs
jns
sub
or
int
jns
add
cmps
into
sub
movs
out
nop
lock
mov
add
pop
pop
(bad)
and
sahf
push
(bad)
pusha
dec
sub
cli
pop
pop
test
bswap
iret
xchg
xor
test
xchg
mov
xor
hlt
popa
ja
inc
or
pop
(bad)
pop
ret
stc
in
push
out
bound
pusha
test
pop
pop
aam
xor
mov
out
ror
loop
clc
fisub
cwde
mul
aaa
ss
jae
pop
loopne
xchg
ins
(bad)
mov
mov
push
not
in
jae
or
sub
ret
(bad)
xlat
sbb
ss
leave
(bad)
test
cmc
jg
test
pushf
pop
xor
sar
scas
jge
xchg
popf
dec
jmp
mov
inc
add
sub
imul
rcr
jg
std
imul
and
and
shl
stos
jae
out
das
jbe
push
inc
or
xchg
sbb
mov
xchg
jne
call
out
cmc
or
and
sub
mov
mov
push
inc
movs
or
sbb
cmc
aas
ja
inc
out
aas
mov
inc
mov
mov
ins
dec
pop
sbb
or
gs
scas
inc
cmp
cmc
ficomp
mov
lea
pop
pop
outs
mov
jge
dec
push
jno
js
adc
cmp
jno
stos
out
push
popa
rcr
mov
xchg
xchg
mov
add
mov
push
fnsave
fiadd
je
and
push
adc
sbb
cdq
pop
inc
out
aad
retf
das
icebp
push
out
data16
sub
lahf
movs
std
enter
pop
jb
std
inc
retf
cmp
or
sahf
loopne
sub
and
sub
(bad)
fbld
mov
gs
xchg
adc
popa
repz
and
jnp
aaa
push
adc
hlt
ret
out
fs
or
js
iret
push
mov
mov
jge
scas
mov
lahf
fstp
retf
popf
outs
xchg
inc
mov
mov
mov
jl
xor
mov
es
ins
jg
cmps
loope
mov
mov
in
adc
popa
fild
fs
(bad)
jecxz
push
xor
les
sbb
into
adc
stos
sub
outs
iret
call
fadd
sub
(bad)
jbe
dec
inc
(bad)
aam
push
stc
add
addr16
call
ins
sbb
ret
xchg
adc
retf
cmp
jbe
fcmovb
jbe
xchg
jle
lods
shl
pop
jo
shl
pushf
rol
jmp
call
mov
push
push
mov
les
jmp
dec
outs
popf
shl
repz
outs
push
and
mov
repz
mov
mov
mov
gs
mov
add
outs
adc
xchg
fsubp
cmps
or
jb
sbb
jb
das
lds
je
or
je
cwde
not
aaa
loope
pop
loopne
bound
push
lds
rol
jb
or
xchg
xchg
lock
pop
add
mov
(bad)
addr16
jmp
xor
aas
ins
cmp
idiv
xchg
mov
add
daa
jns
adc
inc
ret
es
or
pushf
cmps
dec
mov
jl
or
hlt
cmps
jmp
jb
push
outs
jg
ror
sub
mov
fimul
call
and
mov
and
lods
mov
xchg
in
xchg
and
stos
pop
retf
xor
or
mov
mov
push
movs
push
shl
and
mov
and
movs
enter
xor
pusha
adc
(bad)
xchg
sahf
add
ins
sub
push
and
xchg
mov
xchg
inc
xor
out
daa
xchg
dec
or
add
(bad)
int
aaa
adc
sahf
push
inc
std
pavgb
sbb
jns
add
sbb
jae
fisub
adc
repz
and
add
mov
inc
pop
les
iret
push
ja
jo
(bad)
jp
fisubr
shr
icebp
bound
sar
mov
loope
jae
jo
fild
arpl
leave
sub
std
dec
loope
cmc
(bad)
es
pushf
and
adc
mov
addr16
cmp
xor
jl
lock
aaa
jecxz
hlt
sub
inc
iret
mov
sar
out
mov
push
add
mov
in
push
xor
shl
dec
retf
aad
xchg
cmp
cmc
add
pop
push
out
jg
imul
daa
clc
aad
in
sub
in
mov
jg
cmp
push
call
leave
mov
jno
(bad)
loopne
mov
shl
xor
arpl
loop
fwait
ret
push
xor
sahf
ins
cli
jmp
int
nop
mov
les
inc
std
dec
jae
cmp
in
xor
mov
adc
jno
das
add
hlt
mov
iret
push
mov
scas
cli
(bad)
imul
es
sub
js
cmc
and
and
dec
cli
sub
icebp
enter
fcmovb
je
outs
lahf
xor
hlt
jno
(bad)
nop
lods
fdivr
aaa
xor
jo
xchg
(bad)
dec
dec
cmps
mov
ins
mov
fs
popa
cli
pop
popa
iret
or
xchg
int3
repnz
push
jl
call
sub
or
ins
pop
or
cmp
mov
mulps
and
out
add
mov
iret
sub
push
pusha
pop
sub
out
dec
adc
mov
mov
mov
xor
adc
xor
scas
sbb
jp
ss
push
dec
add
pop
test
shl
pop
dec
mov
repnz
cmp
sub
dec
fldenv
sbb
fist
mov
push
and
fsubr
lds
mov
push
inc
test
stos
in
push
retf
fsubr
or
mov
in
mov
or
mov
push
call
in
xchg
rol
inc
inc
shl
fwait
hlt
cmp
dec
aam
push
inc
cmp
jmp
add
adc
ins
fwait
adc
and
lahf
test
mov
xchg
adc
neg
outs
test
retf
jno
pop
adc
mov
stc
inc
ja
mov
inc
cmp
sbb
jae
lahf
xchg
loopne
imul
jmp
popf
sbb
ss
fimul
mov
mov
cmp
cs
adc
cwde
popf
push
cmp
push
ins
ja
adc
xchg
inc
jecxz
cmp
sti
pop
(bad)
loopne
or
and
xchg
repnz
push
js
add
or
jle
cmc
sbb
ins
addr16
push
push
into
(bad)
xlat
ds
sub
ret
inc
call
xor
outs
or
jne
enter
stos
jl
jg
sub
inc
adc
nop
mov
in
scas
stos
pop
sar
imul
cwde
repnz
xlat
test
std
jb
jl
fwait
call
pusha
sti
fisttp
(bad)
dec
sub
sbb
retf
push
retf
xchg
clc
sbb
cmp
jns
mov
add
add
jmp
shl
lods
repz
stc
sbb
or
cmp
test
pushf
pop
xchg
mov
ret
add
lods
lea
add
sbb
xor
repnz
dec
imul
inc
popf
call
mov
or
xchg
je
sub
imul
and
loope
pop
idiv
rcr
inc
sbb
mov
imul
inc
adc
sub
loope
es
ds
hlt
das
mov
cmp
adc
retf
rcr
cmps
fwait
iret
mov
mov
mov
scas
inc
jg
aaa
stos
xchg
sub
pop
enter
sub
inc
inc
sub
mov
mov
sbb
das
sbb
(bad)
dec
int3
(bad)
int3
lds
lock
or
mov
xchg
fcom
js
hlt
aam
sub
mov
inc
cmp
mov
pop
or
shl
push
loop
loopne
stos
mov
mov
fistp
stos
mov
icebp
(bad)
icebp
fbstp
sub
inc
sub
fdivr
mov
xchg
jne
rol
mov
shl
xor
sub
and
ins
xor
in
xchg
cmp
adc
lea
dec
enter
push
xor
cmp
and
push
jo
xchg
cmp
cmp
iret
mov
(bad)
mov
adc
or
es
mov
sbb
mov
sub
mov
cmp
cmp
in
cs
hlt
mov
push
xor
int3
add
xor
jle
cmps
sbb
das
call
add
bound
das
or
push
mov
aad
mov
int3
xlat
cmp
fnstsw
adc
xchg
stos
xchg
add
inc
dec
inc
pop
cmp
in
leave
mov
add
pop
inc
dec
mov
ja
jae
pop
in
mov
jg
sbb
mov
pop
cwde
movs
and
sbb
lea
ss
inc
int3
out
test
adc
push
ins
xor
sbb
xchg
pop
jg
sub
cmp
mov
mov
outs
or
sbb
sub
inc
mov
add
inc
repz
xchg
shr
xor
cmp
cmp
cmp
outs
mov
mov
cmp
mov
xchg
mov
les
mov
add
fbstp
adc
xor
sub
cmps
xor
fadd
popf
call
mov
jmp
adc
mov
push
les
fld
(bad)
dec
xor
test
(bad)
lahf
rcl
setbe
push
inc
and
lods
(bad)
jp
xlat
jbe
(bad)
dec
cli
call
cmc
ret
jg
mov
ds
and
mov
stc
fmul
jns
sub
jmp
xchg
out
test
das
jo
js
mov
das
jmp
stos
xor
dec
mov
aas
push
sub
add
sub
cmp
pop
add
shr
mov
popf
push
inc
call
push
lahf
sbb
outs
and
add
dec
adc
jg
mov
pop
inc
add
or
pop
das
jb
inc
cmps
imul
loope
inc
mov
push
adc
aam
fbstp
jl
pop
xchg
jecxz
std
and
sub
mov
loop
and
cmp
int3
es
or
xchg
jns
adc
(bad)
jl
loope
xor
mov
push
xchg
pop
inc
cmp
adc
mov
jg
outs
lock
sbb
ret
out
jo
add
or
out
stos
push
sti
ret
setne
inc
out
int3
in
sbb
test
movntpd
popa
div
mov
into
mov
test
in
xor
fs
data16
xor
pop
jo
jo
push
in
movs
or
cmp
repnz
cmps
bound
cmp
jo
mov
lea
repnz
xor
push
pop
(bad)
dec
jge
xchg
shr
(bad)
and
mov
fcomp
xchg
adc
pop
popa
shl
push
fsub
inc
lock
or
cmps
std
loopne
mul
test
xor
popf
xor
jecxz
xchg
loope
mov
ror
cmps
popa
and
dec
sub
arpl
fisttp
shr
push
and
pop
aad
jbe
ins
hlt
inc
jmp
out
or
jp
mov
mov
test
sub
jle
into
cmp
pushf
test
repz
xor
jl
jbe
(bad)
js
sbb
fidivr
outs
fisttp
shr
sub
mov
push
jl
ret
cmp
call
call
push
inc
mov
and
push
adc
jno
mov
lods
lahf
sbb
(bad)
das
cmp
arpl
xor
xor
xchg
jbe
daa
xor
sub
cmp
push
mul
push
mov
mov
or
popa
ficomp
cmp
push
lods
clc
pop
ja
mov
in
daa
push
xor
mov
sbb
lods
pop
pop
cld
xor
ins
test
add
pop
fs
jmp
rcr
cld
loope
mov
pop
jne
cmp
arpl
cmc
into
mov
jns
sbb
stos
sbb
lock
fcomp
push
jl
fisttp
(bad)
fucomi
xor
stc
push
mov
and
cmp
in
imul
(bad)
shr
push
mov
out
inc
mov
cmps
lods
iret
out
(bad)
dec
aad
int3
mov
cmp
mov
xor
test
(bad)
call
adc
jbe
fild
loope
sub
and
dec
cmp
sub
cmps
and
dec
mov
cmp
fs
call
mov
push
inc
out
mov
add
add
movnti
fwait
xor
out
das
jno
in
es
mov
scas
sub
mov
mov
dec
xchg
ret
into
xchg
push
movs
lahf
mov
xchg
inc
loope
out
sbb
adc
(bad)
in
repz
pop
clc
add
in
repnz
add
cdq
cmc
iret
push
mov
aaa
rol
ja
sbb
movs
rcl
rcl
sbb
shl
outs
and
repz
(bad)
cli
mov
mov
jbe
and
pop
(bad)
xchg
mov
sub
jnp
mov
(bad)
push
dec
rep
bound
xchg
(bad)
pusha
mov
jp
dec
cmps
sub
pop
fwait
inc
into
outs
or
ficom
xchg
push
mov
mov
mov
dec
pop
in
pop
and
add
jecxz
pop
sub
cmp
cdq
sbb
sti
xchg
sbb
das
sbb
mov
adc
mov
push
xchg
mul
pop
retf
scas
mov
or
push
or
popf
cmp
dec
(bad)
jb
imul
push
mov
fcos
cs
inc
loope
(bad)
jbe
fcomp
fbld
shl
pop
int3
cdq
pop
movs
pop
xor
jns
add
pusha
in
push
leave
lock
add
fwait
int3
call
adc
sar
cli
js
sub
movs
sbb
inc
inc
scas
ficomp
mov
mov
jnp
mov
stc
daa
xchg
push
mov
je
inc
loopne
dec
push
inc
jb
pusha
jns
aad
pop
pusha
call
fmul
push
jl
cmc
lds
in
sar
retf
loop
dec
and
aam
sar
jl
or
outs
jg
fld
mov
jns
add
jge
push
loop
xchg
cmp
jmp
(bad)
scas
stc
push
shl
jno
dec
and
int
outs
aam
push
in
push
mul
clts
div
dec
fnsave
add
xor
cwde
into
loope
movs
fidiv
clc
std
push
pop
out
sub
rcr
pop
jne
push
add
pop
jbe
je
xchg
stc
sti
mov
or
xchg
inc
mov
xlat
ret
lea
mov
mov
lahf
adc
inc
rol
jg
movs
call
in
in
ds
movs
scas
clc
mov
jmp
daa
icebp
pop
pop
adc
imul
pop
add
sbb
aas
shl
push
jp
push
in
push
mov
jl
mov
repz
imul
and
cs
neg
enter
xlat
out
addr16
mov
bound
xchg
int3
sbb
adc
pop
lea
imul
imul
iret
je
mul
repz
dec
dec
jnp
xchg
pop
mov
adc
pushf
sbb
xchg
test
in
outs
fiadd
leave
ret
cmp
mov
inc
je
mov
loop
xchg
xor
push
rcr
mov
aam
jg
loope
jmp
inc
(bad)
in
sahf
xchg
(bad)
jmp
sub
jbe
dec
pop
push
adc
push
(bad)
shl
pop
ins
jg
ret
dec
cmps
(bad)
out
push
std
not
dec
dec
xchg
xchg
es
cmps
cmp
jb
outs
fadd
out
xor
or
ins
mov
sbb
mov
adc
pop
mov
stos
cli
retf
lods
mov
ret
sbb
adc
adc
cwde
xchg
xor
loop
ds
pop
mov
xchg
push
jae
iret
pop
retf
enter
repz
repnz
and
or
stos
push
movs
sbb
jbe
adc
sub
pop
sbb
inc
outs
movs
mov
mov
push
arpl
xchg
adc
in
std
xor
scas
jle
push
jge
xchg
xchg
push
mov
adc
shl
gs
fcom
lock
imul
jmp
mov
cmp
sub
mov
jmp
fs
leave
cs
cs
add
das
dec
loope
(bad)
mov
dec
mov
push
imul
cmp
cmp
movs
dec
fst
cmp
pop
hlt
mov
fs
in
aas
jb
movs
les
shr
pop
mov
shl
dec
and
and
fsub
in
or
cwde
mov
ret
pop
jnp
je
mov
inc
mov
dec
ins
aas
mov
mov
adc
les
mov
jg
movs
jb
and
sbb
movs
(bad)
jb
sbb
sahf
inc
in
mov
cmp
push
pop
clc
pop
test
out
test
pop
jns
fdivr
adc
je
shr
(bad)
test
inc
fdivr
push
(bad)
out
mov
mov
mov
jecxz
pop
ss
pusha
fs
imul
outs
fmul
sub
and
in
inc
out
call
test
mov
in
out
inc
sbb
adc
mov
movs
shl
sahf
in
fcomp
mov
sbb
add
jl
imul
aas
cmp
push
cmp
add
inc
or
dec
cmp
inc
pop
dec
int3
cmp
popa
fdivr
aas
pusha
lock
(bad)
jne
sbb
jmp
(bad)
or
and
icebp
xor
les
loopne
iret
out
adc
movs
je
lods
mov
adc
imul
scas
add
fimul
xor
mov
aad
cdq
push
ja
add
jmp
pop
jecxz
aas
adc
test
cmp
xor
mov
xchg
sbb
mov
ja
dec
hlt
pushf
dec
outs
stc
dec
test
sbb
pusha
test
imul
cdq
inc
jbe
mov
push
add
mov
out
pop
push
mov
fistp
shl
adc
ret
hlt
stc
icebp
pop
jb
xchg
outs
(bad)
xchg
loopne
sbb
and
xchg
push
mov
sub
xchg
inc
mov
icebp
jbe
jecxz
sbb
inc
pusha
mov
sbb
(bad)
icebp
sahf
jns
sub
dec
sbb
imul
(bad)
test
pop
xor
cmp
mov
and
xor
sub
fstp
jp
and
sbb
(bad)
pop
push
xchg
idiv
cli
mov
dec
into
push
(bad)
sahf
data16
xchg
cs
stos
aaa
icebp
inc
mov
fldcw
or
pop
pop
mov
mov
loop
out
adc
pop
jp
js
pop
popf
jl
pop
dec
lods
repnz
cmp
clc
mov
cmp
es
xchg
inc
bound
push
sti
movs
outs
push
sbb
pop
mov
loop
ret
push
or
cmp
push
pop
loope
jae
mov
dec
mov
push
mov
mov
aaa
into
retf
jmp
dec
loopne
mov
inc
mov
retf
mov
inc
je
das
or
pop
idiv
jmp
and
mov
xchg
cmp
lods
test
xchg
cmc
stos
sub
xlat
cmp
push
movs
mov
dec
ret
lods
hlt
std
push
mov
sub
sub
sub
out
mov
cmp
daa
mov
add
xchg
lds
mov
jo
and
sub
pop
out
mov
pop
push
mov
cmps
mov
sub
add
(bad)
js
dec
fldenv
mov
int3
mov
je
pop
and
or
pop
paddb
lods
xor
xor
cld
dec
sub
jmp
xchg
pop
inc
jge
leave
mov
cmp
imul
data16
and
pop
imul
clc
xchg
sub
sar
xchg
mov
ret
cmp
mov
jl
add
dec
push
xchg
fst
cld
(bad)
jae
jno
loop
icebp
test
mov
aaa
cmps
das
(bad)
fwait
mov
mov
hlt
push
in
inc
or
ss
popa
movs
jge
cmp
pop
pop
shr
rcl
jbe
ficomp
xor
and
push
jp
imul
ss
xor
mov
mov
jmp
xor
mov
jge
cmp
out
in
stos
arpl
ss
test
es
cmp
fcomp
push
xor
scas
pop
sub
retf
or
jbe
and
add
out
lahf
mov
call
data16
js
mov
sub
or
adc
lods
sub
aad
shl
mov
rcl
push
lahf
loopne
or
rep
sar
outs
adc
pop
and
or
mov
cmp
in
mov
pop
data16
leave
push
popa
sbb
and
jne
(bad)
dec
aaa
dec
mov
jne
sbb
enter
sahf
sub
repz
mov
adc
neg
or
xchg
stc
cwde
ja
jbe
mov
adc
pop
lahf
sub
leave
(bad)
sub
bound
jo
dec
pusha
xlat
(bad)
push
mov
xor
inc
retf
dec
pop
mov
add
fwait
sar
mov
retf
and
gs
jns
dec
addr16
or
xor
out
repz
les
ffreep
nop
pop
lods
scas
xlat
push
mov
lods
clc
sub
mov
push
shl
jo
mov
int3
fcmovnbe
arpl
or
sbb
(bad)
(bad)
dec
int3
mov
cdq
sub
xor
adc
out
imul
movs
dec
xor
pop
dec
mov
sahf
call
mov
addr16
mov
repnz
fnstsw
fs
out
sahf
sub
mov
enter
lock
jae
dec
ret
push
das
add
inc
sbb
inc
ror
stc
stos
or
cmc
mov
repnz
out
push
sar
(bad)
enter
add
retf
div
lahf
stos
push
or
shr
and
vmovaps
xchg
jl
xchg
outs
and
jo
sub
cmp
dec
je
call
rol
mov
dec
mov
add
push
xchg
sbb
sti
mov
int
push
and
sbb
iret
xor
loope
sbb
jbe
sahf
pop
jo
fisub
adc
xchg
pop
fst
mov
ficomp
push
daa
je
arpl
(bad)
jb
ds
sub
or
sub
ficomp
jb
push
and
pop
mov
cmc
and
push
dec
pusha
xchg
shl
jmp
aad
sub
jmp
cmp
arpl
mov
and
and
cwde
enter
call
adc
mov
fs
fstp
pop
fs
adc
movs
daa
and
mov
sub
inc
adc
jp
ror
mov
loop
aas
jp
jns
cs
not
pushf
mov
add
adc
(bad)
cld
test
loop
adc
fwait
mov
in
jnp
fdiv
mov
dec
jb
enter
adc
rcr
sub
and
push
int3
sub
popa
shr
jae
inc
cmps
clc
xchg
mov
sbb
push
(bad)
repz
bnd
repz
neg
in
mov
je
test
popf
inc
push
xor
daa
adc
xor
adc
and
adc
dec
test
(bad)
or
jge
dec
lods
xlat
push
mov
mov
jns
int3
cdq
push
xchg
pop
(bad)
jns
jns
popa
test
pop
dec
aam
pop
sbb
in
mov
mov
pop
in
mov
mul
cli
icebp
out
jg
sbb
sbb
sti
adc
cmp
pop
lea
call
(bad)
js
movs
(bad)
mov
adc
mov
add
mov
cmp
or
sub
sub
adc
push
movs
adc
xchg
ins
imul
jns
wbinvd
dec
out
sbb
int
fidivr
adc
jp
lods
fadd
retf
loopne
popa
test
push
test
retf
rol
cwde
outs
daa
in
xchg
jmp
dec
dec
sub
call
ret
stc
jnp
jmp
mov
sahf
xchg
repnz
push
int
push
aad
sub
iret
inc
aam
test
retf
jge
mov
leave
push
loopne
ror
shl
cmp
pop
jae
xor
rol
rcr
sahf
retf
add
(bad)
mov
or
jp
pop
lods
arpl
mov
sbb
hlt
into
ins
je
(bad)
shl
mov
in
mov
pop
nop
rol
outs
cli
jge
(bad)
and
xchg
loope
pop
aad
or
scas
pop
mov
mov
mov
(bad)
xor
outs
mov
inc
xchg
inc
test
test
popa
mov
ret
inc
test
out
jmp
in
cli
xchg
mov
mov
or
add
jmp
ins
stos
and
shl
push
xchg
daa
pop
out
scas
not
loop
mov
sbb
outs
aaa
dec
ror
jnp
jns
loop
repnz
stc
cmp
add
fisub
or
add
loope
mov
mul
loop
add
or
xor
adc
scas
cmc
adc
add
mov
mov
mov
je
ins
test
gs
out
and
pop
out
enter
mov
jae
out
cmps
jns
gs
test
call
mov
push
imul
dec
sbb
stos
nop
(bad)
adc
sbb
push
dec
sub
sub
sub
dec
inc
fs
cmp
mov
push
arpl
fnstenv
xor
xchg
icebp
mov
jecxz
imul
int3
and
mov
dec
stc
scas
data16
and
test
dec
sbb
mov
jb
ret
jl
loop
into
cmp
jne
pushf
jmp
or
adc
pop
out
(bad)
call
or
add
push
pop
xchg
out
push
cmp
int3
cmp
ficomp
pop
aam
(bad)
cmc
sub
adc
movs
xchg
idiv
xor
sub
add
fsubp
hlt
dec
jnp
dec
imul
test
cmp
inc
add
int3
adc
cmp
push
or
mov
jo
rcr
add
mov
sti
cmp
dec
lods
mov
xchg
(bad)
push
loope
pop
xor
je
shl
jmp
sbb
out
sbb
daa
jle
pop
add
jmp
sub
pop
retf
xor
neg
mov
jle
outs
sbb
pop
shrd
adc
pop
jl
clc
add
mov
push
ss
xor
out
push
push
(bad)
push
test
dec
or
mov
pop
in
fwait
sub
imul
fsubr
mov
add
sbb
adc
push
scas
sbb
(bad)
mov
sub
cmp
cmp
add
mov
sti
fwait
mov
(bad)
cmps
sbb
(bad)
pop
add
mov
inc
xchg
outs
xchg
and
shl
retf
test
(bad)
push
sahf
push
xchg
ror
inc
lock
ins
cwde
adc
(bad)
xchg
xchg
mov
mov
jmp
dec
and
jb
add
movlhps
icebp
sub
sub
das
sbb
imul
cs
fnstcw
inc
cld
mov
pop
adc
mov
push
or
pop
sbb
ins
retf
les
inc
popa
adc
sub
(bad)
xchg
shr
call
push
repnz
mov
inc
jp
stos
(bad)
jle
lea
push
(bad)
jbe
push
push
retf
arpl
push
cmp
fcomp
xchg
mov
mov
push
jb
inc
xchg
dec
push
and
dec
jb
dec
sub
jb
jmp
push
push
xchg
fcomp
xchg
jle
cld
(bad)
(bad)
jg
fnsave
out
push
mov
dec
mov
push
pop
fwait
clc
cwde
mov
or
ins
adc
bound
int
std
call
mov
jge
fdiv
in
fcom
cmp
stos
movs
inc
(bad)
mov
fstp
push
daa
mov
add
and
ret
in
loop
cwde
cs
sbb
nop
or
int3
dec
int3
adc
aam
aam
jp
repnz
pushf
lods
rcl
imul
imul
bound
and
lock
inc
pop
sahf
mov
push
jle
cmp
push
and
gs
pusha
xchg
ret
sub
push
(bad)
imul
cmps
and
out
movs
sub
(bad)
push
sti
movs
xchg
vdivss
inc
cmp
in
mov
rcr
fstp
les
adc
mov
inc
(bad)
retf
rcr
loopne
xchg
sbb
mov
stos
sbb
inc
aam
daa
scas
sub
cwde
add
outs
or
sbb
fistp
pop
xchg
adc
mov
fimul
iret
mov
hlt
popa
loop
or
rcr
in
add
shl
std
sbb
dec
out
pop
(bad)
int3
stos
sbb
int
out
hlt
xchg
fistp
mov
dec
pop
add
cmp
lds
jne
lods
xchg
and
lock
push
lock
cs
jns
xor
mov
xchg
cmp
jge
mov
aas
mov
jmp
push
and
sbb
mov
retf
loopne
pop
xchg
sub
movs
loope
les
push
mov
shl
clc
xchg
xchg
adc
add
test
icebp
aad
stos
push
repz
bound
mov
cmp
add
icebp
clc
xor
xor
inc
loop
jno
gs
jmp
sub
cmc
mov
aas
cmp
ss
test
bound
imul
or
adc
cdq
mov
lock
pop
aaa
popa
hlt
pop
and
rcl
cmp
test
push
cmp
sbb
jae
addps
(bad)
fnsave
sahf
nop
rcl
iret
mov
xchg
sub
mov
stos
inc
aaa
adc
rcl
push
sti
and
hlt
pop
push
xchg
pop
mov
inc
mov
dec
out
inc
ins
pop
dec
je
mov
pop
sbb
mov
xchg
int
call
push
ret
ss
ins
sub
pop
leave
lods
push
pop
imul
(bad)
mov
inc
sbb
gs
or
jmp
add
inc
sub
pop
ss
add
bound
inc
popa
shl
in
mov
test
outs
das
shl
daa
or
aas
sbb
adc
jecxz
or
popf
sub
nop
or
cmp
jbe
fisttp
loopne
mov
xor
inc
(bad)
je
pop
pop
and
ins
in
dec
setns
fidivr
movs
push
(bad)
mov
addr16
js
mov
(bad)
(bad)
fdiv
ret
cmp
jl
and
pop
in
mov
nop
pop
shr
sub
mov
in
push
arpl
xlat
test
xor
out
push
jns
mov
dec
mov
and
push
sti
sub
(bad)
pusha
int3
call
data16
scas
pop
movs
mov
xor
mov
rsm
sbb
cmc
sbb
stos
or
and
pop
in
or
jmp
and
mov
pop
cmps
lods
jns
in
int
sub
loop
leave
sbb
mov
inc
fadd
sbb
mov
inc
or
je
movs
gs
jns
jae
fnsave
ins
adc
es
test
sbb
imul
jns
call
lea
fs
adc
cmp
fnstsw
pop
js
fdivp
mov
push
mov
inc
fwait
adc
and
leave
mov
xor
loop
mov
arpl
aas
add
pop
outs
rcl
(bad)
cmc
or
ss
lods
push
pmullw
inc
or
mov
pusha
imul
push
jno
fadd
dec
nop
fsub
jno
mov
dec
push
cmps
xor
cmp
movs
outs
aad
mov
or
cmp
inc
loop
mov
pop
or
sub
into
inc
inc
cld
(bad)
ror
gs
pop
cmp
out
mov
mov
sub
dec
mov
push
stos
and
inc
jecxz
movs
lock
cmp
in
xor
mov
cwde
mov
jb
mov
pop
push
sti
sbb
mov
inc
scas
lods
jae
jnp
inc
adc
repnz
xchg
mov
mov
addr16
or
hlt
js
mov
aad
xchg
and
repz
dec
mov
lds
xor
xchg
int
and
mov
jmp
arpl
mov
sub
stc
test
(bad)
inc
jb
popa
ret
inc
mov
dec
add
push
ror
daa
inc
neg
jl
loope
retf
cld
inc
add
lock
cmp
push
sbb
dec
stc
or
es
cmps
into
mov
imul
aas
fucomp
loopne
fnsave
nop
and
fwait
cmc
ret
arpl
aas
out
repz
out
fistp
and
or
cmp
mov
push
mov
neg
sbb
fs
xor
dec
jg
inc
fs
in
in
push
xchg
call
add
jb
xor
xor
xchg
push
shr
test
pusha
push
jno
das
cmp
cmp
sbb
in
and
inc
push
xchg
add
dec
pusha
fdiv
mov
sbb
ds
shl
fwait
jno
out
mov
int
ret
(bad)
stc
jnp
add
mov
mov
mov
inc
cmp
xlat
mov
cmp
xor
jmp
adc
stc
outs
fwait
inc
sub
sahf
scas
mov
push
stos
jge
ins
dec
or
pop
jmp
shl
mov
and
and
pop
loop
(bad)
ja
mov
test
push
and
popa
test
in
mov
shl
ins
jns
mov
inc
enter
sar
dec
imul
fs
rcr
pop
dec
xor
jbe
dec
inc
xchg
jb
arpl
adc
in
movs
fldenv
cmc
push
xor
mov
push
or
mov
mov
and
fist
retf
dec
test
in
mov
nop
in
jb
retf
pop
int
mov
fdivr
shl
xor
sti
add
and
loop
shl
je
mov
mov
push
sbb
push
cwde
sbb
cmc
cmp
lods
cdq
jecxz
fnsave
bound
loope
pusha
nop
mov
lods
test
or
push
add
(bad)
clc
mov
fimul
pop
clc
shl
lock
push
jecxz
test
mov
outs
dec
sub
jmp
adc
(bad)
cs
ror
pop
adc
jmp
mov
push
pop
adc
imul
jb
inc
test
bound
test
sbb
mov
pusha
lods
lahf
(bad)
(bad)
jle
cmp
jle
call
leave
jno
data16
pop
in
jno
add
or
sbb
(bad)
pop
test
jge
xchg
fs
xchg
xchg
movs
neg
rcl
add
adc
and
rcr
scas
sbb
shl
inc
out
mov
xchg
arpl
or
in
dec
hlt
in
jl
jne
std
mov
fwait
jg
int
cmovno
test
enter
mov
pop
inc
or
add
cmps
pop
fild
lods
jg
(bad)
mov
dec
sbb
add
hlt
test
movs
cmp
in
pop
inc
test
sbb
(bad)
ja
jmp
cmp
jl
les
push
das
rcl
test
add
mov
scas
test
jmp
cmp
pop
jno
lea
dec
sbb
ret
mov
push
fcomp
push
inc
mov
mov
fstp
adc
out
sbb
adc
sub
dec
or
lock
pop
push
xor
cdq
xor
xchg
and
push
xor
add
cmc
dec
fdiv
mov
test
jae
xchg
repnz
add
rcl
test
nop
pop
sahf
xor
xchg
xor
adc
mov
jmp
aad
mov
test
(bad)
cmp
xchg
jno
das
fimul
out
cmp
repz
in
jb
hlt
in
mov
jg
(bad)
test
fs
push
inc
xor
jns
xchg
pushf
add
repz
ret
xor
xchg
sbb
sar
dec
test
or
lahf
je
ficom
dec
push
aaa
sbb
dec
mov
cmp
mov
cmp
mov
imul
sbb
daa
icebp
fs
data16
stc
lods
dec
(bad)
dec
push
mov
mov
or
jmp
ss
dec
aaa
mov
push
cmp
repnz
fs
or
loop
cld
fstp
(bad)
inc
inc
xor
sbb
and
aad
and
pop
stc
in
fist
jmp
xchg
(bad)
fmul
test
rol
push
repz
sbb
movs
daa
enter
enter
xchg
in
xor
jmp
fldenv
(bad)
mov
push
outs
xor
pop
pop
aas
aaa
or
movs
(bad)
jmp
dec
xchg
ja
shr
cld
jmp
pop
xchg
ret
aaa
jmp
jns
pop
mov
mov
je
movs
fiadd
add
xchg
loop
pop
inc
xor
push
push
aad
jmp
mov
iret
fcomi
add
dec
in
imul
lock
(bad)
sub
cs
sbb
ss
push
mov
clc
imul
cld
sbb
daa
lods
ss
mov
cmp
cmp
add
dec
hlt
sahf
mov
push
adc
bswap
lods
dec
inc
clc
fst
cli
xor
push
jne
jb
ds
retf
dec
pop
adc
sub
(bad)
mov
leave
sar
cmp
adc
pop
jae
push
push
sub
push
ss
add
push
jl
xchg
xchg
pop
or
shr
sub
arpl
xor
push
std
jnp
cmps
pop
fmul
sub
cmc
or
jmp
jg
dec
shr
popa
daa
ja
mov
jmp
lock
cli
daa
je
sub
retf
cmp
cmps
add
mov
dec
fstp
jg
push
mov
sub
(bad)
sbb
fcom
adc
mov
dec
inc
mov
in
(bad)
out
jne
cwde
out
out
lea
xchg
push
iret
mov
cmp
aas
add
jg
jae
mov
push
jmp
inc
mov
(bad)
mov
push
ins
shr
cmp
mov
push
sbb
jp
aad
jnp
movs
loop
xor
pop
mul
pop
addr16
fimul
mov
movs
ja
out
push
cmps
inc
push
mov
sub
fxch
pop
addr16
gs
xchg
lods
and
lahf
popf
mov
jmp
add
add
adc
sub
push
in
xor
es
jle
or
rol
pop
pop
xchg
in
cld
jo
aaa
push
in
cli
or
inc
pop
push
push
xor
mov
in
cmp
or
fsubr
out
xor
in
xchg
or
rol
push
jo
data16
add
mov
dec
(bad)
es
xor
add
inc
sub
into
rol
and
xor
test
aad
mov
scas
ficom
dec
dec
inc
pushf
cmp
jl
in
lds
xchg
(bad)
xrelease
in
mov
dec
jmp
ret
lods
lock
xchg
cdq
dec
es
push
call
(bad)
mov
nop
jne
mov
push
sar
pop
or
and
xchg
mov
mov
cmp
mov
sahf
ds
mov
retf
and
adc
pop
in
mov
pusha
pop
jmp
fadd
es
sbb
aaa
dec
lods
or
icebp
sbb
sbb
es
js
or
add
jmp
fsub
cmps
mov
sub
dec
ds
imul
pop
enter
mov
pushf
dec
loope
ss
inc
retf
mov
cmp
mov
push
aad
sub
lea
data16
jns
test
stc
loopne
stos
das
pop
pushf
add
test
jl
or
(bad)
in
xchg
and
xor
inc
stos
outs
cmp
pop
jns
push
and
shl
dec
sbb
jb
mov
int
popa
je
add
xchg
outs
add
mov
test
push
pop
xchg
adc
pop
jbe
ret
pop
cmp
pop
call
mov
inc
js
inc
ror
and
test
(bad)
(bad)
out
bnd
int3
lds
sbb
jg
mov
mov
inc
pop
dec
push
mov
pop
dec
sbb
arpl
out
add
js
inc
xor
out
inc
or
enter
cmp
out
inc
(bad)
out
or
sahf
imul
stos
inc
fcomp
jns
aam
xor
lea
ss
out
and
arpl
mov
sub
das
pop
add
dec
xchg
movs
jmp
mov
or
popa
out
dec
xchg
pusha
xchg
mov
sar
inc
cmp
sub
adc
rcl
sub
xchg
fwait
sbb
lods
ins
out
inc
mov
xchg
xchg
aam
cmps
ins
retf
mov
loop
lahf
mov
mov
xor
mov
shr
push
pop
xor
lock
ret
out
push
inc
sbb
mov
add
ficomp
js
loope
lock
outs
ins
sbb
mov
dec
or
jnp
leave
retf
sub
lea
or
gs
addr16
int3
scas
rol
in
cmp
sbb
or
fndisi(8087
xchg
adc
pop
pop
cmc
rcl
sbb
iret
or
lahf
addr16
loopne
je
fistp
pop
mov
imul
pop
mov
fidiv
sahf
xor
xlat
out
mov
sub
test
push
mov
sbb
inc
aam
aaa
dec
sub
sqrtps
(bad)
out
lea
pop
fs
and
xor
xor
mov
movs
test
je
and
in
push
dec
idiv
sbb
nop
xchg
test
cmp
in
mov
in
dec
mov
in
cmp
fxch
cmp
repnz
push
adc
int3
fsubr
cmp
ins
imul
cmp
adc
adc
cmp
lahf
test
scas
jnp
adc
fcmovne
(bad)
movs
int
mov
push
sbb
out
push
fs
push
retf
popf
cmp
jl
inc
mov
pop
pop
mov
imul
inc
jmp
xor
(bad)
jmp
pop
shr
pop
adc
sbb
dec
mov
inc
ins
gs
(bad)
in
and
cmp
push
mov
xchg
lea
xor
pinsrw
mov
fbstp
dec
mov
adc
cmp
mov
daa
fisub
leave
xor
adc
cli
xor
jns
movs
(bad)
repnz
clc
dec
dec
push
cmp
movs
das
mov
or
in
and
inc
mov
js
repnz
cmp
mov
(bad)
and
mov
or
cld
int3
in
nop
int3
icebp
out
mov
dec
push
mov
mov
stos
push
dec
(bad)
call
or
dec
pop
cmps
mov
sub
(bad)
loopne
jp
sti
cmp
sbb
xchg
and
cmp
lahf
add
mov
inc
and
mov
ja
iret
nop
fstp
aad
xlat
out
loope
adc
cli
imul
cmc
daa
mov
sub
push
cld
in
inc
and
arpl
push
int3
pop
pop
sub
movs
scas
mov
fucom
cdq
cmp
icebp
ret
stc
mov
jne
mov
leave
addr16
outs
or
xchg
cmp
dec
fnstsw
sub
pop
mov
and
jbe
scas
(bad)
adc
add
jmp
xchg
ret
out
mov
mov
stos
pop
or
fdiv
cmp
test
mov
daa
mov
int
inc
adc
js
sahf
cmp
sub
(bad)
retf
dec
jbe
out
dec
fstp
jae
push
clc
fmul
shl
out
jne
inc
add
stos
push
mov
adc
repz
mov
xor
dec
into
add
dec
addr16
aas
popa
std
push
cdq
retf
repnz
in
outs
adc
frstor
les
pop
jge
loop
fisttp
pusha
scas
or
push
xor
(bad)
push
pop
sbb
retf
ret
cmp
sbb
add
imul
out
and
push
retf
or
push
or
pop
dec
lea
pop
and
js
cmps
daa
ret
jne
test
das
pop
mov
pop
mov
xlat
aad
pop
ins
cmp
call
jne
inc
ss
dec
inc
sahf
sbb
jns
inc
and
mov
push
mov
int3
mov
pop
(bad)
shl
adc
or
aam
ins
icebp
mov
adc
pop
in
push
dec
call
mov
out
jmp
sbb
in
sub
push
push
retf
push
inc
(bad)
sub
loope
sub
aaa
out
mov
push
fild
movs
(bad)
loopne
pop
or
or
(bad)
fstp
enter
pop
xor
test
aad
jmp
cwde
in
push
push
dec
sbb
dec
xchg
pop
xor
and
adc
retf
jl
jp
popf
dec
push
mov
sub
retf
jae
xor
xchg
test
or
inc
cmp
push
repnz
sub
out
cmps
cmps
dec
fild
push
pop
rol
jne
push
jnp
push
pop
adc
adc
fs
popf
shr
push
mov
push
sahf
dec
mov
enter
fs
mov
xchg
sbb
sbb
aas
fisub
test
fs
xchg
aas
fcomp
push
(bad)
nop
int3
dec
les
es
add
dec
mov
xchg
cld
dec
xchg
lods
(bad)
ins
mov
shl
mov
dec
inc
mov
fimul
xor
into
scas
pop
mov
pop
in
cmovo
push
push
push
add
test
ss
dec
dec
cmp
add
nop
cmp
dec
ins
sbb
scas
push
call
pop
gs
in
or
test
adc
mov
arpl
shr
shl
and
retf
adc
and
(bad)
xchg
jle
push
pop
push
outs
pop
sbb
lds
cs
push
es
movs
and
or
fbld
adc
lods
mov
stos
mov
mov
mov
mov
dec
nop
adc
je
sbb
adc
outs
add
js
aaa
in
cmps
ror
dec
push
xor
out
xchg
mov
or
add
xlat
jae
xchg
cdq
dec
pop
adc
scas
loop
xor
stos
xor
stc
fidiv
sbb
mov
lock
mov
pop
test
sub
pop
push
mov
pop
lahf
out
sbb
jne
enter
cld
aas
push
fst
adc
pop
sbb
dec
push
or
repnz
test
xchg
ret
jno
aam
dec
cmps
or
mov
adc
not
xor
mov
gs
push
fcomip
fdivr
jns
retf
clc
popa
fsubrp
pop
das
jo
mov
inc
inc
pop
mov
push
adc
sbb
int3
inc
inc
inc
aaa
cmp
jns
push
xchg
call
adc
or
push
ins
push
adc
pop
outs
aad
in
std
jns
inc
jge
fsubr
push
xor
dec
js
test
fist
xor
push
les
inc
jae
imul
inc
pop
arpl
cmc
jae
mov
es
mov
popf
call
sbb
sub
retf
aad
stc
sbb
les
outs
pop
fadd
(bad)
in
sbb
pop
mov
retf
scas
adc
sbb
lods
ss
cmp
xchg
or
int3
xchg
and
outs
mov
repnz
jne
pop
add
(bad)
and
dec
xchg
cmp
outs
mov
rcl
xchg
and
test
mov
popf
cmps
repz
fidiv
mov
xor
sub
je
cmp
ficomp
fbld
inc
pop
push
shl
sbb
repz
push
push
(bad)
clc
test
mov
jne
enter
aam
xchg
dec
pop
jp
les
hlt
loop
dec
daa
inc
and
pushf
ror
ret
dec
fidivr
jl
sahf
xlat
jne
aaa
adc
je
dec
sti
and
mov
test
dec
mov
cmp
xchg
inc
sub
lahf
pop
xor
mov
dec
cmp
mov
ficomp
xor
pushaw
mov
pop
ret
adc
nop
and
sub
jne
stos
scas
hlt
inc
sbb
cmp
inc
shr
out
sub
jno
in
sub
sbb
jns
rcr
(bad)
sub
dec
leave
cdq
ror
cdq
adc
jne
mov
fcomp
movs
cs
ss
mov
xor
adc
mul
and
jp
(bad)
les
jmp
cmp
test
les
in
shl
mov
movs
das
out
xchg
jno
test
test
into
jne
out
adc
sub
ror
popf
mov
(bad)
fidiv
push
pusha
jg
test
dec
call
scas
cmp
push
push
mov
add
pop
dec
mov
arpl
out
pop
fwait
xchg
(bad)
mov
clc
mov
or
fldenv
mov
mov
cld
test
shr
cld
sub
jb
adc
(bad)
fidivr
or
jle
std
sahf
lahf
jle
mov
mov
into
enter
adc
ins
das
push
and
loope
sbb
push
icebp
fnstcw
(bad)
dec
shl
fcmovb
xor
xchg
sbb
lds
mov
mov
cld
scas
mov
adc
push
xlat
or
inc
xchg
cmp
xor
fbstp
push
(bad)
fs
cdq
enter
fsub
jnp
mov
cmc
sbb
mov
scas
ds
jmp
aam
hlt
mov
(bad)
nop
mov
sti
jmp
jge
test
bound
daa
rcr
and
shl
mov
addr16
fiadd
mov
fadd
jp
jns
mov
je
scas
add
cmp
dec
adc
out
jno
push
cdq
ds
dec
jmp
dec
cmp
stc
xlat
mov
dec
mov
dec
xor
dec
cmp
pop
mov
adc
mov
xor
adc
fld
outs
push
cmc
addr16
dec
cmp
pop
aam
pusha
ins
add
outs
je
xchg
out
adc
dec
cld
rcl
mov
xchg
or
fs
xchg
dec
or
xchg
add
(bad)
or
mov
test
ss
fcom
add
cmp
retf
xchg
in
add
push
pusha
add
in
cld
cmp
sub
jno
retf
adc
shr
xlat
inc
sbb
sbb
pop
xchg
test
loope
mov
jmp
stos
movs
test
dec
data16
inc
mov
xchg
inc
daa
or
push
dec
mov
pop
mov
dec
aaa
mov
(bad)
and
movs
(bad)
mov
movs
and
push
les
mov
sbb
fmul
and
adc
in
movs
jae
mov
add
mov
sti
fistp
dec
add
scas
xchg
xor
or
das
or
test
popa
loopne
mov
mov
(bad)
mov
fs
fwait
mov
imul
xor
stos
shl
ins
and
ds
or
lods
gs
ret
movs
int
dec
mov
sbb
pop
cmps
mov
test
xor
mov
addr16
sub
jnp
xchg
jnp
jnp
push
lock
xchg
sbb
pushf
in
adc
fdiv
jp
xor
ja
clc
popf
adc
xor
cwde
xchg
push
mov
ficom
outs
in
and
mov
rcr
shl
mov
jmp
je
sbb
int3
movs
scas
sbb
xor
xor
mov
ins
hlt
jb
jbe
or
aas
addr16
gs
pushf
cmp
or
aad
in
push
sbb
jns
aaa
sub
test
pop
push
cmp
(bad)
cld
rcr
jnp
(bad)
js
in
iret
sub
aam
cdq
mov
cmc
sub
popa
ins
movs
push
hlt
(bad)
dec
retf
dec
add
fidiv
mov
inc
loop
mov
fild
in
or
adc
fxch
dec
mov
jecxz
mov
pop
or
xchg
sbb
xor
cwde
push
mov
pusha
iret
inc
sbb
push
mov
cli
pop
adc
sbb
mov
repz
aad
mov
sbb
sub
cmp
fdiv
cmps
push
push
inc
mov
in
shl
fcomip
mov
push
mov
(bad)
les
pop
push
pop
jb
xlat
mov
mov
iret
pop
xlat
int
mov
push
enter
out
pop
fwait
or
sub
sbb
jle
or
out
call
xchg
movs
out
test
cmp
sti
xor
lahf
pop
mov
add
lds
fsubrp
(bad)
imul
das
jge
les
bnd
mov
in
imul
test
or
mov
sbb
bound
aad
inc
jp
or
test
cdq
fcmovbe
lea
ret
adc
mov
das
div
jmp
adc
iret
fsubp
mov
mov
sub
fwait
adc
dec
and
outs
and
dec
sub
pop
js
dec
pusha
inc
push
adc
ins
dec
push
mov
out
rcr
jae
xchg
hlt
in
cli
aad
stos
imul
pusha
sub
fld
hlt
cwde
xchg
jo
and
xlat
cmps
imul
jge
pop
sub
idiv
out
lds
jmp
out
mov
fnsave
arpl
jbe
gs
sub
jmp
aaa
or
mov
dec
jge
aam
adc
sub
out
dec
sti
or
sbb
imul
cmp
les
xlat
jbe
call
inc
rcr
ins
(bad)
dec
mov
fistp
loop
fwait
jecxz
stos
popf
(bad)
cld
ja
push
retf
mov
in
sub
mov
or
mov
xlat
out
push
dec
sbb
jmp
loop
inc
test
dec
sbb
jo
inc
sbb
xor
shr
jecxz
dec
cmp
cmp
push
jo
add
inc
rcr
mov
pushf
sbb
daa
aaa
xor
inc
push
pop
push
xor
out
xchg
aas
xor
into
xchg
aaa
stos
adc
push
pop
push
sti
arpl
iret
movs
or
cmp
cmp
lods
inc
imul
mov
femms
add
addr16
mov
sbb
xor
mov
mov
nop
cmc
scas
stc
cmc
arpl
mov
sub
push
(bad)
rcl
jno
mov
fwait
in
sbb
jl
jecxz
retf
pop
loop
loopne
lea
fcmovnu
and
leave
loop
xchg
push
add
push
ret
pop
adc
add
rcl
inc
pop
mov
add
or
aam
pop
mov
shl
inc
pusha
data16
and
lds
js
shl
out
out
sub
fistp
rcr
jno
or
out
ins
cmp
aad
push
imul
sub
cmp
aas
test
inc
icebp
sti
cmp
fwait
jo
jmp
adc
mov
ins
mov
cdq
xor
repz
or
mov
dec
lahf
in
or
es
cmp
(bad)
jbe
xchg
(bad)
ins
stos
pop
ins
pop
loop
or
sub
mov
out
pop
test
jecxz
cwde
mov
fcom
pop
fbld
jno
push
gs
sub
outs
sahf
leave
push
sub
sub
dec
call
add
int3
or
fs
or
mov
movs
add
sbb
mov
test
cmp
jmp
mov
aaa
cdq
push
outs
dec
dec
js
and
shl
jae
dec
test
adc
or
dec
mov
pushf
jmp
data16
repz
fnsave
stc
pop
(bad)
fst
jo
jle
dec
movs
cld
push
gs
stos
cmp
or
jns
sub
cmp
(bad)
sbb
data16
aad
and
pop
adc
das
cmp
mov
scas
pop
pop
push
sahf
xchg
sbb
pusha
stos
mov
movs
adc
and
hlt
pop
inc
int
arpl
push
js
lea
(bad)
mov
mov
inc
repnz
fcomp
test
dec
or
xor
mov
cmps
jge
xor
(bad)
pop
sbb
out
ret
inc
call
inc
inc
mov
ret
jmp
xor
adc
retf
aaa
push
mov
push
sbb
push
gs
enter
add
push
enter
shl
dec
mov
aaa
test
sub
ret
ja
pop
retf
(bad)
fstp
stos
push
push
mov
dec
or
jae
cmp
sub
add
pop
xlat
adc
cdq
ret
push
push
pop
jnp
adc
jge
fisttp
sbb
sbb
xchg
or
cdq
dec
cmp
or
mov
adc
xor
push
xor
stos
mov
sub
xor
loopne
fs
test
out
fdiv
xchg
cmps
inc
add
loope
dec
lea
dec
pop
sbb
push
adc
dec
mov
push
in
loopne
and
fnsave
xchg
push
arpl
push
pop
cmp
cmps
cwde
jge
sar
mov
mov
xchg
add
mov
or
inc
into
mov
je
xchg
lods
fs
into
shl
xor
outs
inc
pop
movs
lods
xchg
jl
push
loop
inc
shr
jmp
mov
mov
inc
push
out
sub
push
(bad)
(bad)
nop
push
pop
aaa
mov
pop
pop
clc
jl
pop
int
inc
pop
adc
les
cmpps
and
adc
and
(bad)
push
xchg
inc
inc
xlat
sbb
std
cld
sbb
push
or
lahf
lea
and
fdivr
popa
cmp
xchg
xchg
fld
or
scas
mov
fdecstp
arpl
shr
outs
inc
cdq
xchg
scas
cmp
cmp
bound
es
xor
not
adc
push
inc
adc
inc
jb
imul
loop
cmp
adc
repz
or
shr
movs
fisttp
imul
jb
outs
leave
and
fstp
adc
jb
jge
cmps
into
sbb
ficom
fcomp
push
push
adc
fld
fimul
fcomp
or
lahf
push
jmp
out
stos
mov
inc
outs
retf
out
(bad)
jmp
outs
das
push
test
mov
sub
mov
inc
sahf
xchg
out
(bad)
fmul
popf
xchg
mov
inc
push
xor
fild
cli
or
scas
cld
frstor
jp
mov
sub
aam
ja
mov
leave
ror
mov
inc
push
sbb
fbld
jge
mov
data16
icebp
mov
test
lock
mov
add
jle
movs
aaa
hlt
add
and
cmps
pushf
adc
(bad)
mov
pop
or
add
mov
movs
or
push
dec
dec
cli
and
(bad)
addr16
push
retf
stos
inc
fs
sar
cmps
in
mov
sbb
or
dec
mov
lods
movs
adc
mov
fst
dec
jmp
sbb
loope
xor
lds
jne
add
push
mov
les
test
mov
sti
sar
and
aas
push
ins
mov
rcl
pop
out
call
lods
sub
aaa
inc
push
sbb
stos
jecxz
in
jmp
sbb
pushf
into
mov
retf
add
sub
addr16
or
push
mov
arpl
push
pushf
mov
loopne
sub
cld
movs
sub
mov
push
cmp
pop
or
lock
mov
jmp
shr
xor
inc
ret
adc
aad
inc
add
frstor
sub
pop
fstp
inc
retf
jns
add
js
fnstsw
(bad)
(bad)
mov
push
retf
and
sub
jae
bound
rol
leave
in
inc
xor
ret
repz
adc
imul
ficom
outs
cmp
imul
or
aad
cmp
and
inc
or
and
inc
(bad)
pushf
xor
fnstcw
and
sub
sbb
adc
out
pop
jecxz
clc
ret
jmp
xchg
sub
inc
push
faddp
mov
mov
retf
mov
or
pop
sbb
into
test
sti
scas
adc
in
movs
(bad)
(bad)
imul
fs
shr
test
scas
lea
push
or
push
imul
pushf
(bad)
mov
push
pop
enter
retf
push
mov
(bad)
sub
sbb
mov
pop
imul
nop
ss
pop
sbb
loope
fild
pop
add
nop
fcmovnbe
sbb
push
cmc
fcom
mov
ud0
xchg
retf
movs
xchg
push
jnp
xor
repz
cmp
bnd
enter
push
sbb
and
add
call
dec
xor
or
dec
std
pop
mov
sub
dec
and
xor
sbb
cmc
pop
js
mov
adc
or
or
lods
je
stos
push
push
and
scas
fadd
cmp
sahf
mov
stos
popf
adc
jp
pop
rcr
sbb
mov
jb
jge
stos
xchg
xchg
aas
test
sub
dec
sbb
sbb
xor
inc
or
sub
mov
mov
enter
sbb
mov
pop
mov
push
fisub
cmp
adc
stc
rol
push
ss
jbe
mov
pop
dec
xchg
jle
xor
jge
xchg
add
sbb
lods
sti
push
dec
ja
and
in
lahf
xor
adc
ja
test
adc
movs
cmp
pop
cdq
and
idiv
rcl
daa
and
test
fwait
out
fsubr
and
pop
adc
repz
pop
loop
mov
in
xchg
cmp
mov
out
out
bnd
(bad)
clc
out
daa
ss
test
leave
inc
inc
imul
and
mov
mov
sbb
stc
lahf
inc
pop
(bad)
mov
jl
dec
rcr
fist
xchg
dec
(bad)
lahf
mov
loop
mov
div
xadd
dec
jb
push
cmp
mov
hlt
stos
sbb
and
(bad)
sbb
mov
cmps
mov
(bad)
clc
inc
or
movs
sahf
aas
mov
jmp
ret
sti
sub
ror
push
push
fwait
ds
mov
mov
dec
pop
mov
mov
mov
(bad)
test
dec
jo
test
imul
xchg
mov
lds
int3
pop
xlat
cmp
jne
xchg
add
or
and
into
dec
pop
jle
loopne
cwde
je
(bad)
std
lods
ss
and
test
pop
or
or
scas
shl
(bad)
adc
(bad)
push
call
mul
addr16
(bad)
clc
add
shl
imul
enter
push
(bad)
pop
mov
push
cmps
out
xchg
aaa
and
jge
je
xchg
and
pop
fidivr
scas
mov
loop
cmp
add
sahf
inc
jecxz
and
mov
ret
inc
les
out
mov
and
cmp
std
pop
sbb
jnp
sub
lea
test
shr
and
stc
dec
leave
lock
lahf
loope
pop
inc
imul
jle
or
(bad)
pop
inc
add
(bad)
push
or
test
push
cmp
ficomp
neg
dec
int
xlat
mov
jp
pop
repnz
rol
fidivr
int3
pusha
aaa
call
fcomp
xchg
mov
mov
call
ins
push
cmps
pop
adc
sbb
and
mov
add
iret
dec
sahf
pop
adc
push
cli
xchg
jo
(bad)
mov
sbb
jg
bound
dec
pop
xchg
cld
call
pop
xor
inc
xchg
les
cmps
ds
out
sti
mov
dec
and
xor
(bad)
mov
rcr
add
add
cld
stos
sub
ds
or
mov
mov
mov
dec
mov
arpl
jge
lahf
xchg
or
jle
xor
sbb
xchg
pop
pop
fbstp
push
pop
aaa
adc
ret
pop
(bad)
fistp
das
(bad)
aad
stc
mov
cmc
and
arpl
pop
in
add
jg
or
stc
(bad)
adc
fsubrp
xor
cwde
sub
inc
dec
leave
mov
mov
adc
sti
out
aaa
ss
mov
repz
xchg
pop
(bad)
mov
jmp
sub
shr
adc
(bad)
push
add
mov
bound
mul
fild
xchg
mov
inc
push
xor
js
mov
sbb
or
hlt
xchg
(bad)
and
ds
bound
movs
jae
xchg
mov
push
fadd
xchg
adc
(bad)
dec
adc
add
jbe
ss
adc
jmp
std
fs
add
fs
stos
mov
mov
out
push
popa
jno
stos
cmps
and
cwde
(bad)
jbe
aam
add
daa
rcl
sti
push
in
mov
cmps
cmp
xchg
cli
inc
sbb
mov
sbb
mov
xor
(bad)
cld
dec
adc
inc
or
push
push
adc
jecxz
add
mov
outs
out
sub
mov
(bad)
cli
or
push
fadd
mov
(bad)
in
clc
cmp
retf
fst
aad
pop
push
fwait
cmp
rol
adc
push
mov
push
es
or
cmp
jns
arpl
xchg
or
pop
adc
rcl
or
rcr
mov
dec
repnz
dec
ret
out
sbb
test
xlat
retf
fs
clc
pop
scas
jp
mov
push
out
push
call
fcomip
dec
adc
mov
jmp
and
and
xlat
(bad)
fcom
jecxz
xor
(bad)
pop
or
mov
out
and
jp
cwde
pop
xor
sub
out
mov
add
dec
call
popa
dec
in
xchg
mov
je
aam
cld
pop
add
push
jmp
mov
bound
mov
nop
adc
movs
dec
lock
cdq
in
sar
setns
mov
cwde
ret
rol
inc
retf
setp
or
shr
movs
sbb
data16
scas
add
rcl
enter
jno
js
sub
cmp
neg
div
cs
rol
cmp
iret
jp
lahf
popf
inc
push
and
mov
xchg
mov
or
bound
mov
adc
lock
idiv
mov
jns
xchg
cmp
ins
je
jo
and
xchg
xchg
mov
sbb
lds
cld
sbb
xchg
jmp
cmp
shr
adc
pop
scas
ror
movs
movs
push
and
movs
sub
sub
jecxz
dec
or
lock
push
push
mov
or
cmp
neg
enter
or
mov
cmp
in
nop
jle
mov
xlat
dec
cs
pop
sbb
mov
adc
inc
outs
cmp
ja
mov
xchg
or
mov
lods
mov
test
test
scas
jne
mov
scas
mov
les
in
montmul
cmps
ret
adc
out
sbb
mov
pusha
ror
dec
out
cmc
inc
add
in
jmp
(bad)
xchg
mov
int3
mov
cmp
retf
cld
sub
jno
pop
mov
in
push
sub
pop
test
lfs
xchg
mov
dec
xlat
pop
adc
and
ret
in
push
xor
xchg
cs
sbb
lea
pushf
jmp
sub
mov
in
call
ss
fist
rcl
add
mov
shl
es
jl
es
jle
test
test
sub
jmp
mov
daa
aam
mul
pop
xor
xor
ins
loop
imul
sti
pop
jmp
scas
rcr
addr16
mov
cwde
jae
(bad)
(bad)
jo
jb
mov
dec
cmps
in
push
mov
add
add
arpl
mov
add
fisub
add
test
mov
cmp
mov
fld
add
fisub
mov
pop
pusha
and
push
inc
jg
sub
jmp
jnp
cwde
pop
rol
mov
cwde
lods
aad
hlt
or
fwait
sbb
je
mov
adc
pusha
and
daa
aam
mov
sub
cs
push
les
mov
xchg
jg
sub
lock
or
je
and
ret
pop
movs
sub
cli
and
mov
mov
outs
inc
mov
jns
xchg
adc
scas
push
cld
and
sub
cmc
pop
frstor
add
push
ss
clc
cmps
pop
xchg
push
and
jle
mov
paddusw
popa
es
xor
or
dec
arpl
retf
jae
cmp
in
add
(bad)
out
test
pop
add
inc
(bad)
or
inc
jecxz
xchg
xchg
sub
outs
push
adc
cmp
xchg
sub
cmp
jg
out
sub
pop
stos
pop
or
ret
popf
sub
arpl
jmp
popa
mov
jo
stos
cdq
cs
into
or
mov
mov
neg
push
lea
inc
cmp
das
idiv
popf
inc
jbe
pop
push
sub
mov
call
pop
cmp
movs
sub
fwait
pop
dec
sar
retf
icebp
test
js
mov
in
jmp
dec
fwait
mov
inc
scas
movs
mov
and
call
jmp
mov
dec
cmc
jg
add
stos
mov
test
lds
mov
addr16
mov
(bad)
nop
mov
scas
ss
data16
push
sbb
and
pop
sub
sub
pop
jl
jmp
inc
xchg
in
dec
jmp
inc
jnp
js
lock
jmp
out
inc
(bad)
adc
inc
cmp
in
dec
sahf
dec
add
clc
sub
(bad)
push
mov
or
pusha
push
or
(bad)
aaa
push
add
inc
data16
enter
cmc
push
xchg
add
(bad)
sbb
fiadd
lahf
sub
pop
pop
cwde
fld
fist
xchg
add
jb
mov
imul
add
or
fs
movs
jo
xchg
xchg
inc
imul
icebp
cmps
mov
jbe
or
sub
fwait
jo
jnp
sub
add
fsubr
(bad)
fidivr
and
mov
jmp
fiadd
dec
xor
sbb
dec
mov
mov
dec
dec
in
sub
xor
das
pop
sbb
sbb
(bad)
pop
jmp
out
out
fisub
shl
pop
repz
add
inc
dec
enter
xchg
lock
push
mov
lahf
icebp
lock
jns
nop
sbb
add
push
pop
xor
and
xchg
rol
loope
leave
cmc
shl
xlat
cmps
js
cmp
pop
fucomi
ss
pop
dec
div
test
jmp
dec
and
inc
mov
inc
and
daa
jnp
or
mov
aam
loopne
test
loope
jg
dec
mov
(bad)
ss
out
in
pop
xchg
sahf
or
loop
movs
repnz
push
dec
or
popf
mov
lods
sbb
mov
in
les
add
mov
std
inc
and
out
mov
inc
loope
fdivp
in
fwait
cmc
test
scas
jle
sub
ja
ret
and
sbb
xchg
push
test
mov
or
xlat
xor
in
cs
push
dec
add
lock
cmp
leave
pop
mov
push
cmp
adc
out
ror
in
in
adc
lods
lds
add
cmp
inc
push
cmp
or
jne
sbb
pop
adc
ja
push
ret
sub
(bad)
fisttp
test
jmp
int
lock
pop
xchg
mov
stc
cdq
inc
cmps
fisttp
dec
mov
xchg
idiv
imul
in
ret
xor
lea
adc
int3
lds
ds
push
xor
jg
sbb
cmp
pusha
sub
pop
mov
jl
fs
daa
jecxz
test
dec
into
fisubr
push
inc
js
inc
je
cwde
outs
mov
mov
add
ja
mov
leave
adc
add
pushf
(bad)
(bad)
push
push
add
xchg
adc
mov
inc
mov
add
fadd
cwde
add
imul
aad
out
int
adc
inc
stos
test
test
mov
int3
mov
inc
nop
push
addr16
and
sti
mov
mov
ss
inc
sti
sbb
pop
pop
push
pop
mov
pop
add
movs
out
and
imul
popf
mov
xor
push
xor
push
aas
aad
sbb
cmps
jnp
stos
jns
mov
xchg
jmp
outs
aad
iret
xchg
(bad)
inc
push
jge
pusha
outs
add
mov
nop
mov
popf
mov
aas
lock
jmp
jb
inc
cmp
xor
add
push
pop
jmp
in
ins
out
xchg
sub
arpl
(bad)
(bad)
cmp
sahf
int
je
fiadd
je
sbb
movs
inc
jecxz
es
clc
std
jp
or
xor
je
outs
pop
xchg
pop
dec
pushf
and
fisttp
out
xchg
cli
dec
add
and
add
xchg
and
fs
adc
repz
push
jo
xchg
push
js
and
and
jbe
pop
dec
cmp
xor
and
ret
fmulp
fisttp
push
sub
test
daa
mov
pop
push
shl
xchg
cmps
retf
out
jne
clc
sub
lods
xchg
jbe
mov
iret
mov
dec
gs
push
adc
std
and
sub
jmp
pusha
and
ja
call
jecxz
xchg
pop
shl
mov
cmc
sar
imul
arpl
jmp
dec
mov
ficomp
test
lea
std
xchg
fist
xchg
adc
nop
adc
sub
rol
adc
or
imul
mov
jo
push
sub
out
add
mov
mov
rcpps
retf
outs
or
cmp
jecxz
sbb
pusha
jl
in
int
inc
mov
cmps
cld
enter
fstp
mov
cs
mov
ins
out
repz
fistp
adc
xor
or
jb
lock
xchg
adc
and
stos
mov
mov
fwait
outs
adc
ins
mov
scas
dec
adc
sbb
movs
pop
xor
adc
inc
xchg
mov
scas
(bad)
cmps
imul
test
xchg
cs
mov
clc
and
dec
movs
cmp
aaa
ja
jl
int
bts
sbb
push
inc
dec
fwait
inc
out
scas
enter
cld
mov
cmps
pop
push
call
dec
mov
dec
(bad)
jmp
fisubr
scas
or
mov
retf
lahf
out
sbb
sbb
clc
loop
movs
jb
fadd
lahf
les
icebp
fistp
mov
mov
and
add
push
les
jb
xor
int
xor
sub
mov
imul
xchg
pop
scas
stos
push
lds
ret
xchg
cbw
xchg
sbb
or
fld
sbb
inc
test
outs
xor
fs
push
xchg
jg
inc
push
arpl
push
loop
std
cmp
and
out
pop
pop
dec
cmc
and
xor
sti
fwait
jbe
fs
xor
xchg
mov
jns
cmovs
jnp
retf
and
addr16
and
sbb
pusha
mov
in
dec
stos
aas
jmp
(bad)
fst
jg
cwde
dec
sub
cmps
or
arpl
test
stos
push
mov
jg
add
ds
mov
addr16
loope
outs
into
inc
xchg
(bad)
cs
leave
stos
shl
(bad)
adc
pop
pusha
mov
rcl
ja
in
shl
or
ds
lahf
push
pop
xchg
sbb
test
fs
fstp
xchg
mov
xlat
shr
mov
dec
mov
xor
(bad)
int
sub
jns
adc
mov
test
jl
jnp
popa
cld
pop
and
adc
mov
mov
loopne
mov
and
mov
fpatan
popf
push
adc
or
mov
cmps
mov
xlat
out
imul
xchg
jl
imul
and
imul
mov
retf
loop
jmp
mov
test
fadd
aam
adc
sub
or
fcmovb
mov
imul
push
adc
add
in
popf
mov
push
mov
test
sub
data16
fiadd
ds
ret
pop
mov
add
fild
retf
retf
daa
or
push
lahf
push
fdiv
or
ins
mov
push
add
(bad)
bound
or
lock
cmps
inc
xchg
std
cmps
xchg
jecxz
cmp
stos
pop
cmp
fdivr
test
hlt
ffree
add
xchg
sub
xchg
push
add
ds
fistp
mul
shl
fcmovbe
std
call
push
and
inc
sub
pushf
cs
mov
xchg
mov
jmp
dec
popa
fisubr
inc
mov
push
mov
pusha
xchg
jge
sub
xchg
mov
dec
jp
mov
xor
dec
mov
sbb
in
(bad)
add
adc
xor
push
outs
cmps
outs
push
mov
iret
test
xor
ds
xor
(bad)
test
xchg
inc
add
scas
xchg
mov
mov
lock
push
jle
adc
ds
mov
popa
and
loop
icebp
aas
mov
pop
push
mov
cwde
jbe
push
mov
sbb
inc
adc
int
in
add
jb
int
or
aad
push
mov
dec
add
xchg
(bad)
and
(bad)
out
inc
shl
sbb
dec
push
icebp
ins
ins
cld
mov
ja
and
sbb
scas
sahf
data16
add
ret
sub
xchg
push
jg
arpl
mov
out
xchg
loop
data16
jmp
int
mov
into
mov
push
retf
lahf
sahf
adc
inc
retf
lods
push
or
jo
in
xchg
dec
sahf
jo
aas
out
adc
out
jmp
push
mov
dec
ds
and
stos
inc
loope
fisub
and
sti
push
stc
fwait
addr16
ret
jo
aas
repz
or
or
mov
cmp
clc
aad
in
push
aas
xchg
les
mov
add
push
and
bound
ds
arpl
ja
pop
cmp
push
jle
or
enter
mov
fild
lods
fnstenv
enter
aam
jno
(bad)
aad
fbstp
loopne
mov
add
lock
dec
out
xchg
shl
xor
ins
jle
push
xor
mov
mov
(bad)
jae
icebp
adc
in
retf
xchg
fld
pop
sub
inc
mov
cmps
dec
and
sti
fdecstp
sahf
push
imul
dec
imul
ss
jmp
inc
cmp
and
pop
(bad)
not
mov
mov
pop
add
call
jns
pop
(bad)
pop
push
pop
fsub
inc
fwait
dec
cli
mov
retf
lods
mov
pop
inc
scas
or
dec
pop
loop
inc
ret
or
lock
xor
icebp
frstor
data16
fidiv
call
ins
jp
push
ins
(bad)
sub
inc
and
and
pop
fdivr
pop
jno
dec
rcr
push
mov
xchg
adc
js
adc
std
call
add
and
sub
repz
adc
fadd
lock
cmp
lods
pop
in
sbb
xchg
movs
enter
daa
out
xchg
xlat
mov
loop
or
inc
aas
pop
push
shr
mov
es
ins
add
out
int
adc
cmp
sbb
mov
stos
cmps
dec
pop
inc
imul
jno
outs
nop
ins
xlat
aam
dec
jecxz
clc
mov
jmp
jl
jg
pop
int3
xchg
jmp
fimul
in
inc
pop
repnz
or
imul
repz
xchg
test
sahf
add
mov
cs
mov
retf
dec
sub
cmps
dec
xor
and
leave
cmc
stc
imul
xchg
pop
js
scas
pop
push
add
ret
jle
push
mov
mov
adc
mov
xor
push
out
mov
mov
lods
inc
jmp
push
test
scas
pop
aas
pop
mov
or
xchg
cwde
fist
jle
and
jo
xchg
mov
add
mov
mov
loope
imul
popa
or
out
inc
and
and
mov
mov
les
call
fwait
mov
lea
xlat
dec
dec
mov
push
jne
out
push
cmp
jbe
dec
fdivr
push
jecxz
or
movs
and
aaa
add
lock
cmp
xchg
adc
fs
js
mov
cwde
aaa
add
in
inc
pop
pop
in
sub
and
ds
sbb
int
inc
out
repz
cmps
sbb
fcom
fs
cmp
ja
mov
or
out
stos
or
ds
in
psllq
and
mov
or
or
fldcw
sbb
(bad)
sub
pop
fld
pop
ins
faddp
jmp
adc
cmc
jmp
mov
cmp
call
xchg
pushf
mov
jbe
rcl
aas
icebp
pop
mov
mov
mov
jb
cwde
mov
sahf
imul
popa
mov
aas
pusha
mov
xchg
stc
test
sbb
sbb
das
adc
adc
pop
imul
xor
(bad)
add
frstor
sub
std
pusha
repz
sub
fwait
ret
inc
rol
inc
mov
out
dec
jne
pop
dec
in
dec
test
inc
in
cmp
cli
push
aad
out
int
pop
ret
add
(bad)
adc
xlat
jns
div
mov
gs
shl
int3
mov
shr
adc
cmps
add
pusha
dec
xchg
fild
jl
movhps
jbe
fimul
sub
fisub
addr16
scas
idiv
jl
mov
push
inc
arpl
mul
push
aam
es
lods
mov
mov
jne
js
xchg
ds
pop
shl
dec
inc
add
loopne
cmps
je
data16
iret
sub
and
xchg
je
xchg
push
inc
inc
mov
popa
push
es
and
cs
and
sbb
jns
push
fxch
mov
jmp
mov
fcom
cs
(bad)
(bad)
aas
aas
iret
in
sub
dec
mov
sbb
lock
sti
test
mov
pop
sbb
sbb
mov
repz
jg
int3
or
mov
mov
xchg
xchg
fnstsw
add
add
in
out
cmp
in
or
int
adc
call
popf
fld
push
mov
jecxz
push
adc
adc
xor
pop
ja
jg
lea
retf
sar
aaa
in
bound
out
hlt
xchg
push
lds
aas
scas
adc
add
mov
aad
pop
mov
retf
mov
retf
xchg
enter
mov
cmc
xchg
pop
mov
push
adc
push
sbb
imul
lahf
and
dec
jns
xchg
mov
outs
jae
arpl
or
cld
out
sub
add
ret
test
mov
sbb
push
jno
in
and
imul
pop
adc
dec
pop
sbb
inc
popf
cmp
adc
in
dec
leave
and
xchg
icebp
loope
jge
cmc
int3
(bad)
nop
(bad)
sar
sub
repz
push
sub
xchg
mov
test
imul
inc
(bad)
iret
add
(bad)
sub
cmp
adc
adc
mov
mov
mov
dec
and
int
xchg
sub
nop
ja
mov
or
xor
mov
inc
and
mov
into
sbb
add
mov
xor
int
mov
mov
imul
xchg
das
sbb
push
dec
imul
inc
xchg
(bad)
nop
sub
dec
cmc
and
xor
stos
xchg
mov
mov
add
cmc
and
aam
lods
fs
ins
ins
sbb
mov
adc
sbb
out
imul
cmp
xchg
in
sub
fs
inc
aam
jmp
fs
cmp
or
mov
dec
les
arpl
pop
inc
bound
out
neg
mov
xchg
lea
jnp
arpl
sub
sbb
add
adc
scas
add
test
in
mov
cmp
or
add
mov
cmc
xchg
jno
fdivr
xchg
or
sub
fdivr
adc
stos
repnz
push
dec
outs
xchg
ret
inc
call
ss
push
add
xchg
cs
sub
pop
rcl
popa
adc
nop
(bad)
popf
(bad)
repz
adc
sbb
push
xor
push
inc
cmp
xor
pop
addr16
or
cmp
cld
ins
or
mov
add
(bad)
sbb
pop
sti
sbb
push
ja
mov
lea
fsubr
hlt
mov
and
mov
dec
sbb
retf
daa
cld
jecxz
ins
dec
sbb
mov
int3
cwde
cmp
jns
mov
sbb
pop
das
push
in
lods
cmp
or
sbb
(bad)
jnp
push
sbb
test
lods
aam
(bad)
stc
xchg
pushf
loop
(bad)
mov
fsub
inc
adc
aad
repnz
dec
mov
push
jo
mov
ret
jg
jecxz
in
xchg
stos
outs
iret
js
sahf
daa
je
sub
mov
or
xchg
je
xchg
push
test
push
sbb
ds
daa
loopne
mov
dec
mov
(bad)
jge
push
cmp
adc
and
stos
add
add
lods
mov
(bad)
mov
mov
outs
stos
pop
stos
out
inc
mov
call
mov
mov
mov
xchg
adc
scas
and
dec
icebp
jns
lahf
dec
test
fcmovbe
sbb
fldenv
(bad)
int
popa
sbb
pop
pop
adc
movs
xor
(bad)
jmp
mov
mov
push
movs
mov
or
jl
jg
sbb
cmc
loopne
stos
clc
xor
cmp
loope
jge
mov
loopne
dec
push
pop
mov
cmc
cmp
inc
call
mov
jle
cmc
mov
(bad)
adc
add
jno
dec
repnz
mov
outs
mov
gs
inc
int
jns
jmp
rcl
inc
das
aaa
out
xchg
or
and
out
lock
iret
dec
out
lds
int
scas
push
shr
sbb
mov
mov
fiadd
mov
nop
mov
into
hlt
mov
cmp
add
mov
add
scas
adc
test
jb
addr16
ins
inc
lahf
pop
lock
aaa
or
fs
jne
movs
arpl
movs
jl
shr
jmp
cmp
pushf
pop
jge
dec
mov
pop
xchg
int3
(bad)
mov
test
and
or
jmp
pushf
mov
jo
jno
(bad)
cmp
out
popa
push
inc
cld
pushf
dec
pop
bound
jae
cwde
xor
ins
sbb
push
adc
rcl
dec
add
pop
aad
outs
push
push
pop
mov
xor
sub
add
pop
stos
ins
(bad)
repnz
(bad)
call
and
retf
xchg
inc
push
inc
ret
xchg
inc
mov
xchg
cmps
(bad)
shl
ret
(bad)
jmp
stos
push
mov
mov
mul
add
fs
push
push
imul
sar
fsubr
add
push
cmp
sahf
cmp
jns
rol
jecxz
inc
aam
loopne
scas
pushf
aaa
inc
xchg
sbb
retf
aam
cdq
sub
push
dec
dec
adc
not
sbb
ret
mov
push
(bad)
xchg
sbb
das
mov
or
cmp
pusha
idiv
mov
pop
add
retf
js
stos
push
fdiv
ror
in
or
pop
enter
mov
push
dec
mov
and
hlt
sbb
jbe
cwde
inc
movs
xor
retf
jbe
sub
mov
mov
shr
into
xchg
sbb
pop
jb
(bad)
outs
mov
div
sbb
imul
out
and
jnp
in
xor
pop
cmp
pop
xor
or
cmp
es
fldenv
fld
jnp
xchg
repnz
push
sbb
mov
repnz
cmc
(bad)
nop
cmp
inc
jp
hlt
movs
arpl
xchg
sub
shl
dec
mov
gs
jmp
jmp
xchg
jo
xor
in
xor
stos
je
push
test
mov
ins
retf
mov
xchg
icebp
mov
iret
dec
into
jne
addr16
enter
jb
xor
cs
push
inc
sbb
aaa
sahf
icebp
add
cli
mov
push
call
les
pop
lods
dec
cdq
call
cmovs
scas
jmp
idiv
jle
in
pop
test
adc
stos
pop
pop
jbe
bound
or
out
cmp
adc
mov
mov
or
cmp
jmp
mov
cmp
and
jg
bsr
and
loopne
pushf
push
jbe
sbb
test
imul
mov
sbb
sahf
mov
xchg
cmp
mov
pop
stc
push
add
push
sub
pushf
add
(bad)
cwde
call
sbb
and
out
movs
jmp
adc
xor
inc
sub
xlat
fs
xchg
outs
sub
cmp
(bad)
out
call
jae
vmovdqa
cmps
movs
xor
ror
retf
mov
leave
xor
pop
retf
stc
test
pop
sub
lock
cdq
rol
dec
add
into
cmps
push
push
lea
cmc
and
dec
cmp
adc
xlat
or
hlt
call
int
adc
lock
mov
or
outs
leave
add
dec
stos
call
jb
ins
daa
and
push
inc
mov
cld
stos
mov
mov
pushf
and
xchg
aad
(bad)
repz
and
push
mov
and
xor
push
jmp
inc
adc
cmp
ret
test
pop
js
cdq
sbb
daa
push
xchg
jge
jge
imul
sbb
lahf
mov
fisub
es
enter
cmps
jne
xor
jl
pop
pop
mov
mov
popa
xor
xchg
add
inc
mov
mov
icebp
inc
ins
out
lods
test
jmp
xchg
push
jl
mov
test
add
(bad)
cmp
pop
fistp
pop
in
lock
dec
sbb
or
push
ret
mov
add
cld
out
loope
xchg
adc
mov
hlt
jb
pop
xchg
sbb
rcr
xor
sahf
jmp
pop
push
sub
jne
jp
loopne
mov
xor
adc
movs
rcr
adc
call
stos
or
cwde
mov
int
push
scas
and
pop
les
sbb
xchg
div
inc
pushf
and
out
mov
lods
jge
neg
inc
push
cld
int
adc
add
adc
dec
test
aas
xchg
aaa
aas
out
sar
iret
xlat
push
pusha
push
lods
sbb
inc
pop
jg
dec
push
icebp
retf
adc
lds
pop
dec
test
push
movs
lods
dec
aad
leave
dec
int3
mov
ja
mov
out
sub
cwde
mov
js
xor
(bad)
and
lock
data16
mov
sahf
ins
daa
(bad)
mov
ffree
add
test
xchg
dec
mov
pop
or
pop
sub
arpl
add
inc
cmp
push
(bad)
xchg
jbe
stos
test
stos
out
mov
inc
xor
mov
idiv
xchg
sbb
test
cmp
jnp
add
mov
add
std
lods
ffree
outs
dec
cmp
inc
push
ja
sub
dec
pop
sub
push
cmps
mov
or
xor
sub
jmp
or
or
mov
push
mov
mov
push
jg
retf
call
add
push
pop
dec
(bad)
pop
imul
add
push
imul
jno
jg
push
add
pop
dec
sub
sti
jmp
mov
xor
hlt
adc
pop
push
mov
cdq
sub
icebp
and
jbe
imul
pop
adc
xchg
imul
mov
mov
adc
jecxz
jbe
in
push
imul
(bad)
icebp
out
shr
or
push
inc
pop
sub
xor
jno
jg
stos
mov
pusha
cmp
out
fimul
call
xor
out
jo
jnp
adc
mov
les
sbb
popa
addr16
(bad)
sbb
les
push
sub
pop
fs
mov
dec
or
rcr
dec
cwde
push
dec
shr
nop
repz
adc
sub
ret
jg
fimul
(bad)
ins
pop
cmc
push
lahf
lea
aad
adc
es
mov
jp
aad
mov
cdq
push
mov
pop
adc
adc
gs
add
dec
in
push
dec
repz
outs
aas
push
sub
push
dec
mov
and
stos
fnstenv
push
push
stc
mov
xchg
(bad)
cmc
movs
out
pop
pusha
mov
pop
push
mov
fld
int
clc
add
jmp
(bad)
sub
pushf
shl
addr16
xor
pop
leave
lods
pop
jmp
lea
outs
xchg
xchg
in
jo
and
mov
fisub
jge
and
lds
scas
mov
jmp
sbb
dec
push
cmp
popa
adc
inc
dec
das
(bad)
mov
std
jb
xor
sub
or
rcl
jae
mov
or
mov
scas
rol
and
retf
inc
outs
adc
xchg
pop
(bad)
repnz
mov
scas
cdq
mov
imul
push
mov
inc
sub
mov
and
xchg
and
enter
leave
add
mov
xchg
mov
and
std
out
je
out
leave
mov
test
mov
scas
rcr
nop
jns
sti
mov
daa
bound
cmps
and
mov
jb
push
jg
xchg
jnp
es
je
sti
call
jmp
(bad)
mul
jmp
aam
dec
lock
cmp
add
(bad)
pop
jb
imul
push
and
push
aam
cwde
outs
xchg
fisub
xchg
ror
arpl
out
dec
aad
xchg
sub
lods
sbb
cmp
shl
scas
call
jno
mov
gs
(bad)
mov
sahf
jns
into
jmp
lods
xchg
jp
mov
mov
xor
cmp
aaa
or
mov
mov
mov
xor
push
cmp
mov
xor
pop
push
add
cmps
ja
loope
test
adc
add
ret
ins
mov
inc
or
sub
outs
inc
sub
adc
iret
popa
sub
pop
dec
movs
repz
ja
test
pusha
adc
fmul
push
(bad)
xchg
ja
pop
ret
ja
xor
sar
xor
aaa
inc
cdq
sub
je
pop
push
adc
mov
rcr
mov
pop
xchg
in
push
and
push
jae
and
cmp
call
mov
xchg
ss
pop
pusha
lods
popa
push
mov
sar
sbb
push
rcr
setne
xor
neg
jl
mov
cmp
or
sti
movs
dec
outs
movs
scas
outs
adc
push
ret
retf
mov
pop
aas
aam
xchg
rcl
mov
inc
or
pop
test
jne
or
jmp
sbb
scas
in
mov
and
mov
or
sbb
or
div
adc
or
dec
rcr
inc
ja
cmp
jns
pop
adc
or
mov
cmp
sbb
sbb
ins
pop
out
mov
cmp
push
mov
pop
xchg
dec
div
pop
ror
sub
push
or
call
or
pop
icebp
dec
mov
ret
jecxz
cmp
fidivr
dec
sbb
xor
repz
cmp
adc
xchg
add
push
pop
int3
cwde
mov
jne
neg
loopne
aam
loope
sub
pop
lea
ficom
lea
sub
mov
pop
bnd
pop
stc
iret
adc
sbb
icebp
leave
sub
jge
pop
sbb
xchg
mov
and
stc
out
xor
sub
in
jge
or
loopne
pop
jmp
push
sahf
clc
cmp
lahf
cdq
sub
outs
sub
pop
push
fs
sub
rcr
xchg
jle
mov
xchg
pop
adc
cmp
fisttp
push
xor
sar
jmp
jo
stc
xor
lea
sub
pop
dec
and
sub
fild
jmp
mov
and
or
mov
mov
xchg
xchg
cmp
push
sbb
xchg
int
stos
xchg
movs
cli
mov
mov
scas
dec
popf
push
jl
popf
add
jno
xor
lea
mov
jg
push
adc
pop
jmp
retf
mov
mov
fbstp
or
mov
js
xchg
stc
push
dec
movs
cmps
into
add
adc
retf
sub
mov
loopne
cdq
jbe
dec
cli
stos
sbb
xlat
sar
div
ror
cmps
movs
mov
adc
inc
leave
les
aas
jo
retf
retf
das
inc
jecxz
sub
cmps
movs
(bad)
in
mov
mov
jno
ret
sbb
cwde
mov
and
adc
cld
cmp
dec
int
adc
mov
dec
fistp
mov
cmp
rcl
(bad)
movs
mov
jl
enter
mov
jbe
fsubr
and
mov
rcl
out
ret
in
dec
aas
mov
int
xchg
push
loop
and
in
(bad)
mov
inc
adc
ins
and
loop
mov
xchg
mov
xchg
push
push
jl
sub
sbb
loope
jecxz
repz
inc
pop
add
jnp
adc
mov
inc
aas
or
mov
mov
(bad)
xor
cmp
jno
aas
in
gs
jb
sub
scas
cli
mov
jo
adc
cdq
ret
jmp
xor
inc
xchg
inc
sub
mov
fdiv
icebp
push
lea
lock
push
xchg
out
jmp
out
lods
popa
lods
aas
jle
inc
xchg
mov
enter
inc
add
rcr
shl
jg
inc
cmp
(bad)
cmp
xor
fdiv
les
cmps
ins
xlat
mul
iret
lods
(bad)
mov
xchg
das
ss
(bad)
sbb
jmp
js
push
lds
cmp
aad
push
aam
test
mov
outs
xchg
adc
mov
xlat
cmp
mov
mov
ficomp
ins
data16
pop
out
cdq
pop
add
mov
pop
popf
push
mov
mov
(bad)
data16
ret
test
repnz
test
xchg
clc
cmps
pop
dec
xor
ins
fs
ins
enter
xor
test
push
in
shl
push
out
mov
lods
and
aam
or
test
ins
mov
xchg
fmul
mov
fdivr
jb
mov
les
inc
sbb
fadd
push
in
loope
sbb
xchg
aam
jg
sub
fs
pop
dec
cmps
dec
lds
mov
sub
call
push
daa
sbb
int
mov
sbb
and
xor
pushf
push
gs
jmp
out
mov
loope
adc
pop
shr
pop
test
xchg
push
gs
fld
adc
(bad)
daa
imul
fs
push
push
sbb
lods
ds
or
mov
rcr
fistp
push
or
inc
push
dec
or
sar
cwde
rol
mov
push
push
mov
(bad)
ror
test
jbe
or
add
pop
into
popa
jno
loope
and
jae
out
das
add
sar
dec
cwde
push
ss
inc
dec
fs
test
std
ret
push
icebp
sahf
fwait
mov
fild
ret
pop
in
cdq
push
into
xchg
pop
rcr
ja
pop
cmps
loope
xor
jb
call
mov
icebp
imul
jmp
mov
sbb
push
jl
test
nop
imul
or
add
sahf
push
xor
scas
aam
(bad)
retf
jmp
push
(bad)
xchg
mov
popf
sub
cmp
imul
cmp
ficom
addr16
pop
cmps
xor
xchg
aaa
mov
sub
mov
mov
nop
sti
xor
mov
sti
sti
jnp
div
xchg
aam
retf
add
fldcw
cmp
mov
clc
bound
mov
adc
mov
xor
neg
pop
add
adc
xor
(bad)
mov
or
aad
cld
cmp
or
adc
pop
inc
mov
inc
jp
mov
xchg
jl
jbe
bswap
and
js
inc
into
enter
mov
fimul
jnp
or
adc
icebp
push
popf
lahf
repz
cmp
mov
dec
stc
jno
sub
int3
ds
shl
sbb
jae
inc
lea
or
das
icebp
imul
test
loope
sbb
movs
add
xor
jmp
cld
xor
jno
icebp
sbb
call
in
dec
rol
movs
dec
jmp
adc
add
std
test
or
xor
shr
lock
or
push
popf
dec
cmps
repz
addr16
inc
pop
movs
or
jns
cmc
inc
push
adc
and
and
scas
hlt
ficomp
xor
test
enter
cmps
and
out
in
outs
xchg
and
mov
sbb
xchg
(bad)
ror
jmp
imul
shl
cmp
test
std
adc
push
pop
daa
outs
inc
mov
dec
imul
inc
mov
stc
sbb
jmp
outs
loop
xchg
adc
xchg
sbb
xchg
push
fwait
xchg
mov
mov
imul
shr
pop
shl
xchg
xor
mov
push
gs
ja
mov
hlt
adc
fwait
push
cmp
and
movs
pop
emms
mov
and
mov
push
jnp
mov
push
inc
mov
jle
scas
jmp
test
leave
prefetchw
(bad)
push
xchg
inc
pop
mov
cmp
lods
imul
push
ins
lea
cmc
mov
cmp
mov
xor
push
(bad)
(bad)
mov
xchg
jne
sub
hlt
icebp
push
icebp
scas
clc
cmp
inc
sar
imul
movs
xlat
pop
cmc
and
mov
sub
dec
test
and
pusha
jns
ficom
jbe
call
jo
lods
addr16
sub
cmc
xchg
add
fwait
xor
enter
sahf
dec
lahf
addr16
xchg
out
sub
jge
push
add
and
in
hlt
call
int3
sub
call
adc
or
imul
pop
shl
push
pop
lahf
inc
xor
mov
push
jmp
mov
imul
push
les
scas
sub
or
bound
jno
xchg
jno
ja
sub
inc
xor
not
inc
fisttp
test
pop
xchg
push
cmp
mov
idiv
ja
mov
bound
push
pop
pop
(bad)
std
xchg
xchg
int
inc
sub
fld
ficomp
in
ror
stc
xor
xchg
pop
inc
aad
or
repnz
fdivr
dec
mov
push
mov
test
cmp
mov
enter
pcmpeqw
and
add
or
mov
jo
loope
out
lock
retf
push
jno
xchg
inc
outs
dec
xchg
mov
jmp
ror
push
enter
fidivr
ins
scas
repnz
mov
adc
sbb
sbb
fmul
arpl
cdq
push
iret
ret
enter
dec
jbe
mov
leave
hlt
cmp
inc
push
fwait
cmp
mov
call
add
outs
jl
imul
(bad)
adc
int
bnd
iret
repz
adc
xchg
sub
add
adc
mov
retf
movs
mov
aaa
in
xchg
cmp
cwde
adc
rcr
jecxz
jmp
es
push
xchg
rcl
mov
shl
enter
mov
fisubr
mov
push
rcr
loope
idiv
dec
fwait
xlat
ror
push
je
jb
in
cli
out
jp
mov
das
adc
js
sub
call
cmp
sbb
gs
cld
jp
loope
not
cmc
outs
stos
inc
mov
(bad)
pushf
add
push
or
ja
dec
jbe
neg
lods
push
shl
push
repz
adc
cmp
call
arpl
xlat
fidiv
jp
ins
inc
mov
scas
cld
adc
(bad)
adc
int
aam
imul
adc
push
push
out
popa
xchg
(bad)
jb
xchg
loop
cmp
cmp
aas
popa
xor
mov
jmp
and
loop
rcr
cmp
jecxz
xor
pop
and
adc
jmp
leave
(bad)
and
repnz
ret
int3
jmp
or
ret
pop
dec
call
dec
(bad)
sbb
daa
pop
clc
ss
add
adc
pusha
mov
sbb
stos
ja
pushf
adc
fld
cmp
mov
lods
dec
add
dec
scas
jbe
cld
add
scas
inc
jge
sbb
and
sahf
loope
or
int3
(bad)
test
and
rcr
add
push
add
imul
stc
or
loope
adc
div
inc
mov
or
ror
jno
je
adc
data16
in
jo
ja
sar
jns
mov
mov
bt
and
mov
xor
es
push
jbe
(bad)
push
jmp
retf
out
mov
shl
in
mov
push
mov
cdq
and
shr
dec
pop
xor
xchg
int
into
add
jle
adc
lods
xor
sahf
in
mov
sbb
aam
mov
test
sar
jae
jle
or
lahf
cmps
repz
push
push
out
call
or
jle
sub
xchg
sbb
mov
loopne
call
aas
inc
iret
es
mov
add
mov
mov
fiadd
int3
fbstp
out
aas
jge
loopne
mov
repz
xor
gs
xor
xchg
jb
xor
cdq
mov
or
clc
lods
mov
nop
cmp
sub
outs
xor
(bad)
cs
(bad)
jg
mov
aas
mov
mov
dec
pop
ja
retf
aaa
hlt
jbe
mov
mov
mov
and
(bad)
in
std
xchg
sar
mov
loope
and
cdq
pop
push
inc
icebp
gs
pop
daa
outs
jge
std
pop
mov
out
jecxz
pop
test
ss
push
les
sti
shl
(bad)
push
(bad)
lods
fiadd
jb
jg
jg
pop
adc
(bad)
in
pop
inc
pushf
mov
test
add
pop
dec
inc
xchg
xor
add
mov
mov
xor
sbb
es
out
arpl
cmovne
xchg
xor
xchg
std
xor
repz
cld
in
loop
jle
or
mov
sbb
les
daa
dec
push
pop
sbb
dec
cmp
daa
adc
sub
jmp
or
retf
mov
imul
outs
(bad)
push
ins
mov
loop
fcmove
pushf
jnp
into
out
rcl
push
ffree
sbb
imul
aad
aam
and
loopne
dec
xchg
and
sbb
add
xchg
xchg
inc
scas
mov
cmp
jb
cmps
xchg
xor
jno
sbb
int
hlt
inc
aam
fs
dec
xor
dec
push
aad
ins
pop
push
sbb
jmp
je
adc
repz
inc
dec
jmp
jno
fisttp
loope
jp
repnz
les
movs
adc
outs
xlat
mov
push
adc
inc
les
add
movs
ja
jecxz
dec
lahf
enter
mov
cmp
outs
adc
into
pop
jl
mov
adc
sub
nop
pop
add
fild
enter
test
sbb
or
shr
scas
nop
xor
sbb
lods
adc
push
enter
ins
int
push
test
xor
sbb
ja
shl
pushf
test
adc
inc
sub
dec
rcr
daa
rcr
dec
pushf
pop
mov
jbe
movs
xchg
and
mov
jae
addr16
jne
or
in
les
ret
in
lds
sbb
retf
mov
dec
iret
hlt
mov
(bad)
xor
dec
mov
jecxz
xchg
adc
retf
hlt
inc
movs
fucomi
ins
repz
(bad)
iret
push
lods
ficom
leave
fsub
jno
pop
loopne
push
add
in
xchg
pop
js
(bad)
jne
adc
addr16
adc
pandn
add
xchg
inc
mov
cmp
(bad)
clc
cmp
fdivp
aaa
mov
xchg
and
push
xchg
or
stc
stos
sub
mov
xchg
lods
es
sbb
cmp
or
fwait
cld
jle
pop
outs
test
shl
mov
daa
and
cmp
pusha
ficom
cmp
fld
push
inc
mov
call
(bad)
sar
xchg
ins
mov
enter
int3
fsubr
stos
xlat
data16
stc
and
dec
jg
pop
sbb
repz
mov
and
add
pop
dec
mov
mov
mov
sahf
ja
xor
xchg
push
add
ret
push
jae
xor
mov
repz
xchg
mov
push
out
add
out
mov
or
mov
mov
loopne
mov
push
jecxz
pop
data16
(bad)
mov
dec
inc
ins
xchg
popa
fwait
cmp
test
or
fwait
fwait
pop
mov
sub
xchg
fcmovu
aam
cmp
daa
movs
adc
sbb
cwde
push
and
in
mov
sbb
inc
inc
(bad)
xlat
sbb
mov
add
(bad)
add
aad
mov
jns
cdq
ins
xchg
dec
xchg
iret
mov
cwde
and
xchg
into
inc
mov
cmps
retf
imul
hlt
sbb
retf
shr
or
into
lock
fcmovbe
mov
sahf
div
xchg
xchg
push
mov
fwait
lods
fwait
lea
xlat
out
fucomip
xchg
test
enter
mov
jne
stos
jle
jae
and
mov
ja
in
fsub
repnz
xchg
shr
repz
xchg
sahf
jnp
xchg
add
popa
xor
mov
(bad)
adc
cmp
add
dec
pusha
scas
movs
addr16
add
cmps
push
and
pop
movs
inc
fs
je
stos
cmps
stos
scas
call
adc
lahf
(bad)
xchg
and
mov
dec
xor
mov
daa
clc
gs
inc
test
daa
fidivr
out
or
dec
std
out
fwait
imul
mov
mov
mov
inc
xor
fdivr
inc
mov
repz
pop
and
mov
mov
(bad)
mov
xchg
jmp
inc
loope
mov
inc
pop
jmp
das
fdiv
cld
mov
mov
sbb
ins
cmps
into
jb
sub
movs
es
sbb
xchg
retf
(bad)
cmc
adc
dec
leave
push
dec
pop
call
xor
out
jle
inc
fmul
ret
push
mov
cmp
xor
xchg
jns
adc
mov
cs
icebp
scas
push
dec
and
jge
push
add
addr16
push
addr16
imul
dec
es
mov
mov
mov
xchg
leave
loop
lahf
cdq
mov
and
mov
aas
sbb
push
cld
in
pop
imul
cmp
jo
ss
lods
mov
inc
inc
and
rcr
sub
js
xchg
ror
out
leave
add
stc
mov
adc
push
fmul
jnp
mov
mov
or
xchg
das
outs
xchg
outs
xchg
int3
adc
xchg
xor
addr16
in
pop
or
cld
ret
push
frstor
nop
jns
adc
clc
out
bound
aas
mov
in
dec
mov
cmp
mov
or
sbb
push
(bad)
outs
xor
sti
and
sti
xchg
and
ja
jbe
mov
jl
test
mov
push
pop
xchg
mov
inc
lahf
xor
retf
(bad)
dec
call
or
add
mov
lahf
dec
inc
sub
adc
and
(bad)
int3
int
mov
jbe
cli
mov
enter
sbb
sahf
lods
mov
int3
js
popf
js
leave
sbb
sub
stc
pop
cmc
repz
ss
in
jge
xchg
in
fild
add
mov
sbb
dec
inc
push
xor
pop
pop
inc
push
dec
imul
pop
jns
scas
jmp
sbb
xor
enter
and
fstp
in
jmp
(bad)
mov
mov
in
dec
sbb
xlat
movs
in
dec
les
jge
adc
loope
rol
xchg
sbb
or
pushf
add
add
enter
lea
pop
jg
test
inc
lods
in
cmp
sub
fsubr
adc
mov
aas
pushf
sbb
mov
and
sbb
in
(bad)
fidivr
adc
pop
mov
cmp
repz
in
aaa
shr
jmp
sti
inc
loopne
shl
std
or
cmp
jbe
out
xchg
xchg
mov
cmp
mov
je
mov
jmp
fimul
shr
adc
xor
outs
ds
call
push
xchg
push
mov
mov
arpl
imul
jmp
ret
bound
jno
popf
jnp
jns
pusha
or
mov
add
dec
das
movs
cli
retf
ja
in
mov
xchg
nop
and
dec
xchg
pop
mov
bound
inc
cwde
pop
jp
sbb
lahf
mov
int
pop
mov
dec
xchg
xchg
in
mov
dec
mov
mov
je
cmps
test
shl
(bad)
push
enter
add
clc
test
sub
and
jbe
mov
sbb
or
push
jge
add
jnp
bound
pop
mov
scas
call
or
push
lock
pop
dec
dec
jmp
adc
xor
(bad)
fimul
cmp
mov
xchg
mov
jmp
sbb
pop
retf
ds
fbstp
movs
addr16
xchg
jno
cwde
and
gs
push
jnp
or
mov
mov
je
inc
xor
dec
inc
fwait
sub
outs
hlt
popa
inc
(bad)
lock
adc
xor
call
gs
popf
cmp
or
stc
call
sbb
cld
in
xchg
mov
pop
mov
shl
jae
rcl
rcl
xor
pop
popfw
jno
(bad)
jle
aam
cpuid
inc
(bad)
mov
pop
test
movs
push
pop
iret
xchg
cli
xchg
(bad)
(bad)
dec
inc
mov
inc
aam
xchg
lds
add
mov
aas
scas
cdq
push
cmp
xchg
in
mov
ins
mov
push
inc
lds
shl
(bad)
mov
not
mov
mov
jo
cs
push
jae
mov
sub
or
mov
addr16
jle
cmc
es
and
mov
shr
mov
xor
fcmovbe
cwde
ins
loopne
gs
outs
xchg
inc
repnz
mov
aad
cli
rcl
jge
pop
jle
jmp
aaa
add
mov
cmp
mul
hlt
int
mov
mov
jmp
in
push
out
js
loope
mov
push
aad
mov
and
ins
out
adc
mov
add
popa
loope
dec
mov
xchg
sbb
mov
jne
inc
pop
fild
sub
sbb
adc
dec
add
out
out
imul
add
adc
mov
jo
ja
sub
and
push
adc
nop
and
adc
add
push
cmps
pop
add
jae
mov
cwde
es
stos
push
imul
sub
or
add
mov
jmp
or
es
into
movs
and
cmc
stos
mov
mov
stc
fisttp
loopne
inc
iret
icebp
mov
push
rol
not
jle
jb
mov
ror
gs
inc
sti
cmovne
idiv
out
jb
xor
mov
add
push
(bad)
das
jno
xchg
mov
stc
mov
fiadd
sbb
or
mov
add
hlt
enter
sbb
sbb
mov
cs
adc
push
imul
mov
mov
ds
fnstsw
cmp
sbb
dec
daa
(bad)
bound
imul
dec
imul
cmp
(bad)
sub
cld
stc
pop
shr
fwait
xor
adc
stos
jmp
fcomp
fmul
jno
pop
cs
cs
mov
mov
icebp
jl
push
xor
mov
jbe
jb
add
mov
inc
outs
scas
mov
and
sub
dec
add
or
(bad)
ret
(bad)
int
ss
add
and
data16
sahf
mov
pop
test
jle
xchg
pop
shl
lahf
cmps
ds
scas
jno
fst
dec
je
fmul
sbb
lea
jl
mov
push
ins
lods
jle
lahf
sub
mov
movs
popa
or
inc
jne
and
add
mov
xchg
pop
cmp
daa
das
jno
jmp
cwde
popf
push
push
(bad)
or
jns
push
mov
shr
rol
dec
scas
idiv
sub
pop
xor
and
jns
or
into
push
cmp
inc
cdq
dec
setg
dec
mov
inc
jo
leave
cmp
sub
nop
pushf
arpl
xchg
and
(bad)
or
xor
mov
fcomp
adc
stos
(bad)
xor
xor
ficom
das
mov
ret
scas
push
xchg
retf
nop
dec
call
and
lock
mov
outs
cs
sbb
mov
adc
rol
out
pushf
cmc
or
adc
repz
and
inc
cmp
jecxz
clc
lods
pop
inc
imul
adc
mov
cmp
mov
push
cwde
bound
popf
or
cmp
push
push
xlat
jo
sub
rcr
dec
mov
sub
sbb
xchg
or
xlat
retf
sub
sub
inc
adc
xor
scas
in
aas
mov
cli
cmc
add
or
cli
(bad)
mov
pop
cmp
call
arpl
js
jo
inc
daa
ret
retf
push
pop
inc
jp
movs
pop
push
cmp
pushf
mov
aam
imul
inc
sbb
mov
push
rol
(bad)
push
mov
xchg
mov
adc
sub
xor
sub
mov
sbb
jmp
add
jge
leave
pop
dec
es
retf
push
push
pop
push
cmc
dec
gs
fadd
sub
inc
jo
pop
sbb
cmp
ret
pop
mov
sbb
aas
and
pop
adc
or
push
scas
xlat
and
jle
ins
mov
jae
daa
xchg
out
or
cld
outs
push
addr16
sub
mov
mov
js
stos
lods
adc
in
(bad)
pop
push
call
je
fild
scas
ins
aaa
sahf
add
xchg
mov
jge
push
out
pushf
dec
mov
jnp
test
das
cmp
movs
add
mov
cmps
or
out
ins
arpl
cmc
push
and
out
hlt
leave
mov
xor
mov
movs
push
mov
sub
call
cmp
cmc
or
pop
inc
sbb
sbb
jmp
dec
cdq
fbld
scas
jns
lds
jg
dec
jge
(bad)
ins
ficomp
mov
xor
xchg
push
xchg
sub
stc
mov
test
je
mov
jle
ins
mov
ss
ins
xchg
sbb
aam
dec
xor
cs
cmp
nop
in
mov
pop
ds
push
inc
daa
sti
sbb
add
in
aad
push
repnz
enter
add
mov
add
rcl
retf
or
(bad)
jmp
rol
in
rcr
push
xlat
jl
dec
cmp
stc
or
mov
lods
sub
mov
out
fisub
adc
push
mov
xor
push
je
or
cmp
ret
sar
push
mov
or
ret
loop
or
pusha
sahf
mov
call
ins
rcr
mov
dec
fst
(bad)
xor
sbb
hlt
outs
cmp
mov
inc
ins
xchg
out
cs
sbb
mov
stos
mov
out
mov
daa
sbb
aas
mov
pop
ss
mov
jmp
dec
icebp
push
retf
lods
into
mov
pop
mov
mov
add
push
add
mov
hlt
adc
push
or
and
test
out
jecxz
mov
xor
mov
sub
retf
sbb
cmp
mov
dec
imul
lds
mov
add
popf
loope
fiadd
jno
jg
jg
cdq
rcr
mov
xchg
jmp
int
ins
mov
inc
fcomp
pop
xchg
and
inc
imul
and
adc
xor
(bad)
mov
add
outs
push
test
pop
fcmovnu
sbb
adc
push
enter
mul
add
mov
fadd
mov
loop
shl
repnz
mov
ficom
in
lahf
pusha
xor
cmp
ins
loope
repnz
sar
mov
inc
(bad)
inc
imul
inc
arpl
mov
imul
in
xchg
jnp
inc
sti
mov
iret
js
and
mov
adc
cmc
xchg
mov
daa
ins
hlt
mov
inc
mov
hlt
inc
outs
fist
icebp
adc
test
push
outs
je
dec
enter
stos
cdq
jno
mov
or
outs
dec
test
shr
je
rcr
dec
xor
mov
into
pop
outs
dec
push
cmps
(bad)
ins
(bad)
sub
shl
loope
xchg
sub
or
mov
ins
inc
or
or
neg
data16
jns
mov
dec
aas
movs
jno
push
mov
out
sub
lock
dec
nop
in
ins
dec
pop
or
xor
shl
mov
mov
cs
adc
lods
push
pop
sub
mov
sbb
mov
xlat
adc
cmp
xchg
loopne
add
mov
mov
adc
add
inc
or
retf
cmp
pop
push
ins
jmp
jnp
xchg
mov
push
push
pop
or
mov
loopne
cli
pop
hlt
fwait
(bad)
push
mov
sar
les
push
shl
jmp
es
or
jle
mov
in
loop
adc
into
mov
sbb
cmp
js
mov
enter
movs
clc
test
imul
xchg
mov
push
jo
cmp
out
push
in
adc
jbe
xchg
xor
sub
mov
jle
pop
lock
sbb
xchg
js
ss
rcr
cs
leave
pusha
shl
fwait
sbb
or
cwde
push
add
dec
jmp
dec
clc
mov
jo
inc
xchg
xor
cmp
push
ror
lods
sbb
pop
xchg
popf
add
sbb
data16
push
mov
(bad)
clc
jmp
mov
in
loopne
pop
sub
fld
jmp
xchg
xor
pop
hlt
repz
mov
fbstp
cwde
or
sbb
xchg
jns
push
mov
je
xchg
shl
test
cld
retf
jge
sbb
out
pop
retf
or
aaa
ins
sub
out
mov
cmps
xchg
fldenv
test
das
xor
xchg
adc
loopne
mov
mov
dec
cwde
xchg
inc
loope
xchg
movs
jae
pop
aad
out
cwde
jmp
(bad)
cmp
pop
mov
(bad)
adc
sbb
sbb
or
out
cwde
shl
sub
push
inc
mov
xchg
inc
push
push
dec
fsin
inc
cdq
push
cmp
test
mov
ficom
imul
jnp
cmp
ins
dec
jecxz
pop
mov
stos
out
sub
nop
inc
cdq
ja
xchg
bound
mov
fst
push
test
and
xor
pop
push
and
push
or
(bad)
jmp
and
add
mov
push
ret
jb
mov
rol
mov
ret
aas
pop
jne
mov
xor
shl
or
sti
inc
mov
ja
jl
es
sub
pusha
push
add
popa
mov
sbb
add
neg
fwait
pop
outs
gs
xchg
or
dec
cmp
imul
pop
xor
lods
loope
inc
cmp
loop
dec
push
shr
call
push
loopne
jb
mov
aaa
and
ins
inc
sub
jo
stos
cdq
sahf
nop
fisub
lahf
ins
fldcw
or
loop
in
cmp
jmp
adc
popf
inc
sub
repz
out
xchg
inc
inc
popf
pop
test
push
mov
cld
add
mov
es
aam
bound
sar
push
sbb
out
js
int
add
mov
inc
sbb
sbb
mov
push
addr16
inc
jmp
and
jae
xlat
into
stos
imul
mov
popa
xchg
add
mov
inc
sub
sub
cmps
loop
cmc
mov
xchg
ror
mov
pop
into
pop
popa
pop
outs
jae
int3
imul
dec
pop
movs
cmc
cdq
jb
test
fld
pop
jmp
add
push
adc
dec
test
(bad)
jnp
outs
add
xchg
adc
mov
push
xchg
xor
adc
imul
mov
jo
push
add
mov
pop
or
inc
test
loope
pushf
into
ret
cli
mov
aam
fiadd
pop
arpl
jge
fcomp
mov
mov
sar
rcl
dec
pop
es
cmps
jne
inc
push
xchg
adc
dec
xlat
and
(bad)
(bad)
xor
stc
lds
ins
stos
xchg
mov
cli
sahf
leave
rol
iret
scas
push
mov
shl
cmp
xor
xlat
imul
out
movs
adc
out
mov
test
int3
fnstcw
push
dec
out
mov
addr16
adc
sbb
fmul
repz
mov
test
retf
loop
pop
sub
das
enter
adc
mov
pop
sbb
pop
pop
lods
sbb
cdq
mov
shl
in
shl
jmp
das
lods
cmp
jnp
dec
das
add
mov
sbb
add
repz
mov
dec
adc
scas
popa
cmp
jb
dec
outs
cmp
mov
cmp
add
cdq
jmp
mov
addr16
mov
je
and
sub
cdq
je
mov
mov
aas
xchg
shr
ss
test
ret
xchg
pop
dec
add
das
fistp
aam
mov
ret
mov
fidivr
int3
(bad)
in
dec
jle
mov
xor
jmp
ret
gs
and
les
sbb
sbb
call
jmp
and
xor
and
or
ret
adc
mov
adc
gs
sbb
jno
in
jmp
(bad)
mov
in
test
sar
adc
mov
adc
(bad)
cld
out
xor
sub
cld
mov
js
or
dec
(bad)
mov
push
(bad)
lea
sbb
cmp
sbb
imul
enter
daa
ret
and
and
mov
mov
or
arpl
adc
xchg
and
ror
fistp
adc
and
pop
pop
aas
adc
sub
fwait
sti
lods
sbb
or
(bad)
adc
mov
retf
enter
or
lods
push
add
jnp
fldenv
stos
into
mov
and
and
mov
(bad)
(bad)
jle
into
mov
jmp
ds
and
pop
xchg
dec
xchg
mov
sti
or
mov
ret
imul
(bad)
xchg
jg
test
xlat
xor
inc
pop
push
dec
aad
sbb
call
addr16
cmp
or
mov
lahf
jo
sbb
and
movs
cmp
mov
mov
adc
loopne
xchg
or
loopne
cmp
mov
mov
mov
jmp
pop
cmovo
xlat
repnz
dec
push
stc
jle
sub
lock
movs
sub
cmp
mov
lock
outs
or
aad
dec
dec
add
and
test
push
xchg
in
inc
in
bswap
and
lods
push
out
shl
mov
pushf
lods
sub
xor
jb
dec
rcr
push
popa
(bad)
adc
ins
in
jg
bound
test
inc
xor
mov
test
stos
xchg
xor
jp
push
adc
loope
mov
add
push
sbb
inc
hlt
outs
xor
mov
and
repnz
ins
cdq
pop
or
push
adc
push
int3
cmp
movs
int
jge
sbb
int
pushf
jne
pop
jo
mov
xchg
jmp
out
dec
push
mov
les
test
ja
jle
mov
jp
rol
ffreep
movs
add
daa
sub
test
jnp
ss
xchg
cmc
push
or
mov
sar
cmp
lea
pop
mov
test
jmp
cmp
adc
shl
mov
stos
jge
aad
std
outs
adc
jmp
cmp
sub
stos
push
daa
rep
mul
mov
shr
mov
cwde
jg
loopne
pop
and
bound
outs
xchg
cmp
adc
jmp
push
cwde
xor
push
jmp
sub
ret
aas
pop
inc
push
sbb
cmc
dec
lahf
inc
mov
mov
pusha
inc
pop
aas
std
mov
js
xchg
xchg
lds
push
sub
stc
stos
xor
mov
mov
stos
pop
inc
pop
test
cmp
addr16
inc
int
mov
ret
cdq
mov
cmp
push
push
dec
and
test
jmp
mov
pop
mov
jo
jnp
(bad)
sub
retf
and
and
(bad)
pushf
mov
in
mov
or
add
dec
lods
cmp
lock
ror
pop
mov
cmp
inc
mov
push
aaa
inc
je
imul
add
or
loope
mov
cmps
ror
mov
push
into
adc
jle
push
mov
(bad)
dec
out
lea
movs
lods
mov
mov
lea
je
mov
clc
jb
stc
aas
cmp
cld
jae
pop
test
pop
sbb
movs
sbb
int3
mov
div
sub
mov
jmp
jle
popf
jo
out
mov
frstor
sbb
and
sar
iret
mov
imul
inc
pop
mov
fidivr
hlt
add
xchg
aaa
scas
arpl
pop
adc
imul
xor
sub
aam
scas
cwde
fsub
ret
mov
jnp
fldenv
sahf
sbb
mov
and
sub
lea
es
sub
out
int
lods
add
test
cmp
mov
outs
and
aam
sbb
dec
imul
push
ret
add
inc
jmp
jg
frstor
pop
aaa
(bad)
popa
sbb
imul
jecxz
mov
mov
jbe
dec
imul
push
mov
jg
jmp
dec
test
xor
test
out
mov
imul
in
div
mov
fmul
push
fdivr
ret
in
and
in
lds
jge
cmp
vminpd
push
inc
and
mov
rol
inc
sbb
inc
and
test
push
ds
out
push
push
pop
fcomp
sub
popf
mov
test
imul
hlt
lods
aam
cmp
mov
rol
aam
les
movs
lea
push
push
push
popa
jp
mov
dec
and
loopne
and
mov
mov
mov
sub
faddp
out
xor
pop
push
bound
mov
mov
dec
jo
xor
or
rol
fsubr
sti
add
and
pop
enter
hlt
inc
inc
repz
clc
nop
mov
jb
ds
mov
fcmovu
mov
jle
push
xor
fsubr
jb
jle
mov
jb
sbb
mov
inc
dec
popf
cmp
movs
int3
sbb
xchg
pusha
mov
popa
mov
xor
test
dec
push
xchg
and
push
test
add
mov
sub
xchg
add
jb
rol
pushf
inc
fcmovne
in
pushf
xchg
adc
mov
es
int
je
arpl
movs
dec
rcl
push
ins
test
gs
mov
cmp
jmp
inc
mov
xor
xchg
cmp
div
mov
add
aam
inc
je
jns
or
fdivrp
adc
xchg
sbb
or
mov
ror
jns
call
fcomp
retf
mov
pop
bound
rep
stc
cmp
mov
icebp
imul
hlt
push
in
mov
mov
sub
xor
sar
ror
scas
jb
arpl
pop
pop
sub
or
dec
mov
rcl
or
push
stos
mov
fsubr
pop
sbb
mov
xchg
push
xchg
jl
push
ins
inc
gs
ja
pop
pop
retf
sub
mov
mov
(bad)
or
xchg
mov
mov
lahf
mov
xor
das
cli
rcr
jg
jmp
jl
or
xchg
add
aaa
aaa
adc
sbb
sub
leave
arpl
push
dec
loop
jge
fnsave
loope
test
das
sbb
mov
mov
xchg
out
test
dec
inc
movs
popf
(bad)
(bad)
aaa
pop
int
cmc
mov
fcmovnb
push
call
cmps
fsub
xor
or
sbb
push
sub
sbb
retf
outs
jns
(bad)
mov
fmul
push
mov
dec
adc
mov
movs
adc
adc
xchg
inc
cld
test
je
pop
xlat
(bad)
mov
cmp
es
cli
dec
test
stc
cmp
(bad)
jecxz
movs
loope
mov
xor
sbb
add
lahf
mov
in
push
dec
mov
sbb
popf
sbb
(bad)
xchg
mov
fucomip
stos
call
mov
ret
rol
mov
inc
jb
iret
sub
imul
dec
push
outs
sti
sub
enter
jmp
push
std
cmovo
sbb
sar
arpl
adc
rol
sub
sbb
push
jle
xor
out
out
call
sbb
jge
icebp
jnp
sub
or
sbb
push
or
test
inc
repz
retf
mov
pop
mov
arpl
scas
mov
sbb
push
pop
xchg
adc
jmp
xor
(bad)
cli
test
call
pop
bound
or
push
inc
ins
push
fucompp
and
fchs
nop
push
out
pusha
cmp
inc
icebp
or
in
jecxz
fld
jae
fsubr
bswap
add
dec
and
or
and
gs
popa
sbb
pop
iret
jp
xchg
pop
mov
js
shr
xchg
add
pushf
add
leave
jle
lods
pusha
pop
add
push
(bad)
push
dec
jge
stc
fwait
in
mov
call
ror
inc
iret
ss
pop
lds
push
stc
retf
inc
cli
int
xchg
jmp
jmp
mov
retf
ret
sub
inc
or
xchg
ja
test
push
mov
jb
mov
outs
out
xchg
int3
and
fdivr
xchg
dec
mov
xor
int3
pop
mov
mov
rcr
push
rcl
bound
or
scas
xchg
push
lods
and
pop
les
sbb
outs
adc
lods
ret
push
mov
jecxz
inc
(bad)
int3
ror
cmp
arpl
xchg
cmp
cmp
mov
retf
cld
div
mov
cmp
outs
xchg
jp
repz
outs
(bad)
sub
ret
rcr
scas
xchg
pop
push
arpl
movs
push
or
mov
cli
xlat
ret
mov
pusha
cld
icebp
ret
sbb
jmp
or
pop
or
sbb
inc
pusha
loopne
outs
mov
outs
stos
pop
sti
mov
mov
iret
daa
out
mov
add
cmps
dec
aam
jno
push
add
in
mov
int3
cli
push
rcl
or
push
ins
js
xchg
adc
xor
xor
pop
pop
mov
lods
aaa
cmps
xor
mov
adc
fs
and
ja
jge
pop
push
icebp
adc
xlat
ret
(bad)
repnz
mov
or
(bad)
jle
movs
inc
arpl
out
jne
es
mov
lods
js
jg
out
lods
jns
jo
jmp
jmp
ja
inc
(bad)
jle
gs
cmp
mov
or
mov
retf
jg
ins
not
jmp
jae
call
test
int3
add
ret
ins
mov
leave
mov
arpl
or
and
inc
pop
fdivr
jns
ja
fisttp
movs
es
sbb
fstp
mov
jg
es
dec
push
sbb
popf
repnz
cmp
aas
mov
mov
pop
ret
in
and
fwait
ret
dec
retf
lahf
das
xchg
cmp
ret
mov
push
in
mov
test
cmp
lea
xor
mov
mov
add
stos
arpl
(bad)
jg
pop
test
sbb
mov
xchg
jle
add
dec
xchg
fistp
push
lock
or
mov
xor
and
push
test
xchg
inc
push
mov
in
sub
pushf
mov
ret
sub
out
cmp
and
call
test
out
xor
xlat
idiv
jne
add
shl
mov
gs
ret
xor
popf
out
or
dec
sbb
lahf
call
scas
adc
cli
addr16
inc
repz
out
mov
aam
dec
mov
scas
call
lods
stos
cmp
cwde
imul
fld
jb
inc
out
push
fs
or
adc
or
pop
loop
gs
rol
aad
jmp
(bad)
sub
(bad)
ret
mov
mov
jne
(bad)
jecxz
push
lea
cs
les
iret
adc
mov
ins
mov
and
ja
inc
ret
mov
lds
mov
mov
ins
pmaddwd
sbb
(bad)
mov
in
jle
cmp
scas
adc
mov
mov
cmp
(bad)
fs
inc
repnz
cmp
test
cli
(bad)
test
push
sbb
mov
call
in
icebp
arpl
fild
arpl
sbb
add
mov
sahf
test
es
jp
fcmovu
cmp
mov
or
pop
sub
jge
imul
push
mov
ds
inc
jg
imul
xlat
xor
into
daa
pop
lds
stos
pop
sub
mov
mov
fwait
in
int
lds
inc
sub
es
jb
lods
adc
jge
pushf
call
int
jecxz
pop
or
mov
dec
xor
pop
pop
and
push
add
mov
mov
adc
push
mov
test
aam
aas
mov
mov
dec
(bad)
push
jl
jnp
in
xchg
(bad)
pop
xchg
add
push
or
stos
stc
jmp
(bad)
jmp
repz
fwait
push
or
movs
mov
dec
(bad)
imul
pop
scas
rcr
aad
and
push
test
popf
fs
cmps
sub
adc
sbb
ret
cmp
cmp
push
test
idiv
leave
mov
cmps
or
test
call
outs
je
repnz
lahf
mov
in
movs
or
div
dec
and
cli
dec
scas
fs
mov
push
bound
dec
xor
daa
jo
ja
out
(bad)
icebp
aaa
sahf
je
dec
dec
cmp
gs
xor
ins
repnz
or
imul
xchg
loope
clc
pop
jns
(bad)
xchg
mov
aam
je
or
inc
sub
cdq
xor
inc
(bad)
adc
jg
jnp
inc
or
push
mov
out
xchg
call
jge
add
ret
add
mov
out
sub
sbb
mov
jp
movs
pop
cwde
test
cmp
fistp
dec
pusha
fs
fdivr
pop
xchg
jb
mov
aad
jno
jbe
cmp
jae
scas
ret
iret
popa
push
neg
push
jl
or
imul
ds
lds
je
mov
push
scas
imul
or
pop
push
add
xchg
aad
or
iret
add
mov
loope
stos
test
push
(bad)
or
ja
enter
mov
in
data16
(bad)
retf
in
jns
push
fild
cmp
int
mov
jl
fadd
iret
outs
retf
movs
div
or
mov
dec
push
push
xor
push
in
inc
dec
inc
pop
rcr
repz
push
xor
dec
cmp
mov
(bad)
iret
arpl
nop
push
push
inc
into
ss
shr
sbb
popf
in
sub
cmps
xchg
push
(bad)
sbb
ins
and
gs
rcl
push
aam
fldcw
cmp
xchg
push
sub
mov
and
dec
mov
jnp
jle
jno
ins
into
push
scas
aad
(bad)
jle
dec
add
dec
add
inc
xchg
push
ret
mov
add
leave
cmps
mov
daa
sub
mov
dec
inc
lahf
adc
mov
push
mov
add
(bad)
dec
cmps
loope
int
pop
and
addr16
xchg
adc
or
sbb
ins
cmps
loopne
aam
unpcklps
pop
pop
cmp
jg
leave
jge
mov
pop
ins
retf
dec
ins
call
push
outs
out
les
mov
add
or
mov
fstp
hlt
cld
pop
xlat
inc
jne
int
cdq
cs
(bad)
push
jae
mov
loope
xchg
lea
(bad)
jo
repz
aaa
push
ins
cmp
xlat
ficomp
mov
and
pop
into
jmp
test
jge
xor
movs
ret
or
and
call
les
(bad)
jmp
ss
movs
outs
or
dec
fs
in
sub
mov
push
push
clc
push
out
std
shl
inc
shr
shl
jae
repnz
add
sti
jnp
pop
inc
daa
in
fwait
xchg
stc
arpl
ja
in
sub
xor
sub
std
pusha
inc
outs
cmc
pop
pop
cmp
pop
jp
or
cmp
push
repnz
mov
and
pop
and
mov
ins
add
jbe
xchg
aam
lds
add
(bad)
aaa
xchg
jns
(bad)
sti
sbb
jne
and
push
or
mov
pop
sub
rol
adc
enter
mov
inc
pop
sub
mov
inc
gs
int3
imul
jmp
out
(bad)
inc
jnp
sbb
and
cmps
clc
repz
sub
push
inc
ret
sub
inc
mov
shl
or
mov
mov
mov
sbb
sub
stos
xchg
and
jae
or
cmc
push
shl
das
pop
jl
fild
cmp
sbb
mov
inc
adc
xchg
xchg
out
cs
mov
repz
adc
shl
dec
scas
push
cmp
jnp
mov
jp
int3
iret
ins
mov
jge
pop
int
lahf
and
(bad)
or
mov
push
rol
das
(bad)
shl
addr16
cmp
xchg
jmp
in
movs
pop
jl
mov
repnz
popa
loop
jmp
fldenv
inc
mov
or
add
push
dec
pushf
jo
outs
pop
cmp
jbe
addr16
jno
sub
and
or
inc
mul
in
fidivr
sub
stos
dec
xchg
in
iret
pop
xchg
jl
bound
xor
std
int3
dec
mov
mov
ds
test
dec
mov
mov
shl
or
push
clc
lods
rcl
fcom
(bad)
rcl
out
jl
pop
add
nop
push
mov
(bad)
adc
push
scas
jns
and
lahf
test
mov
in
loop
retf
xor
inc
sar
adc
sbb
mov
push
sub
(bad)
clc
in
dec
cmc
fild
(bad)
push
mov
xchg
dec
imul
inc
inc
mov
mov
test
outs
mov
and
mov
stos
jl
nop
movs
pushf
jae
test
adc
jae
push
mov
push
retf
pop
out
mov
lds
pop
add
mov
fstp
out
or
lahf
jbe
jecxz
mov
mul
and
clc
dec
xchg
je
mov
and
sahf
mov
pop
(bad)
and
stc
mov
push
sbb
mov
mov
lds
stos
popa
iret
dec
push
test
sub
adc
fwait
sbb
cmp
add
rep
mov
jbe
sub
adc
ins
dec
neg
sub
call
sbb
ins
mov
mov
push
inc
xchg
inc
jmp
mov
xor
mov
sbb
(bad)
(bad)
mov
xchg
aad
lods
mov
je
xor
mov
and
adc
push
sbb
popa
adc
xchg
pop
popf
lods
(bad)
cli
sub
mov
(bad)
dec
imul
data16
(bad)
mov
sub
inc
cmp
pop
or
jmp
loope
ror
retf
out
mov
mov
sbb
data16
jae
arpl
gs
imul
cmp
in
rcl
test
push
push
stc
mov
repnz
out
movs
xchg
int3
test
add
es
movs
les
and
inc
xchg
pop
or
lahf
dec
ja
jne
movs
sub
jle
jle
sti
jmp
xchg
xor
(bad)
loopne
test
stos
out
cmp
jno
add
sbb
xor
sbb
div
mov
xchg
movs
push
cli
outs
pop
call
push
mov
push
iret
lock
and
aaa
(bad)
sub
mov
mov
js
dec
xlat
(bad)
dec
cmp
adc
ret
adc
sbb
push
lea
and
mov
int
out
xor
(bad)
xor
movs
setne
fsubr
or
mov
icebp
xchg
push
leave
fsubp
or
ins
int3
(bad)
loop
test
out
xor
stos
mov
sbb
push
mov
sub
or
push
pop
sbb
not
xchg
cmps
sar
movs
repnz
mov
retf
outs
jne
ret
mov
add
cmps
xlat
xchg
cmp
test
ret
std
lea
mov
sbb
mov
or
shr
jnp
sahf
mov
adc
xor
xlat
test
or
lsl
mov
xlat
retf
xchg
out
push
fsubr
dec
mov
pop
popf
cdq
jb
sbb
repz
jl
or
inc
jnp
xor
sub
inc
mov
shr
retf
jbe
inc
adc
xor
stos
mov
test
mov
mov
pusha
sahf
xor
jg
jg
stos
mov
fucomi
mov
dec
fdivr
call
test
(bad)
enter
test
lea
mov
ret
xor
pop
inc
jbe
ins
(bad)
push
movs
mov
cwde
inc
add
xor
cmps
cwde
scas
push
or
ja
mov
js
mov
or
aam
push
or
push
mov
icebp
jnp
daa
xor
pop
inc
fadd
jno
sbb
mov
mov
and
iret
sahf
fcomp
jecxz
mov
xchg
mov
scas
pop
out
pop
jmp
or
jne
fimul
xchg
adc
xor
jae
mov
sbb
mov
sub
movs
(bad)
shr
int
std
add
xchg
fldenv
pop
clc
fidivr
bound
rol
mov
movups
pop
in
sub
rcl
ror
and
xlat
and
mov
dec
xor
cmc
(bad)
dec
out
movs
mov
mov
pop
mov
inc
sub
cld
out
sbb
mov
sub
push
pop
mov
clc
es
mov
lods
(bad)
mov
test
inc
in
lods
add
stos
push
shl
sbb
fiadd
cmps
inc
pop
xchg
dec
retf
fsubr
cmp
fwait
mov
jno
ss
test
inc
or
sti
xor
outs
fistp
nop
inc
add
pop
idiv
fld
inc
gs
and
mov
call
dec
ds
jmp
and
mov
push
adc
cdq
mov
(bad)
mov
lds
or
xchg
xchg
cmp
hlt
push
pop
and
push
ror
adc
repnz
adc
(bad)
pop
sub
mov
mov
adc
mov
cmp
mov
inc
(bad)
retf
sbb
cmp
cmp
xor
mov
ss
xlat
inc
leave
push
dec
(bad)
adc
shr
jle
mov
pop
ds
fcomp
push
adc
add
sub
add
mov
sbb
imul
xchg
movs
jae
jno
pusha
sub
movs
repz
adc
inc
test
adc
xor
into
jmp
mov
mov
mov
ds
(bad)
std
xor
mov
mov
jmp
jmp
daa
add
scas
jg
ret
or
adc
lods
jns
fidiv
in
(bad)
in
(bad)
push
xlat
or
div
push
xchg
cmps
into
cmp
dec
mov
mov
push
push
lods
xlat
fdivrp
pop
jg
cmc
cld
cmp
cdq
push
inc
pop
jne
sbb
add
dec
iret
push
stc
jge
inc
xchg
icebp
aas
xchg
xchg
jb
scas
xor
inc
add
popa
xchg
add
mov
cmp
cwde
pop
in
lea
xor
call
mov
adc
jo
jb
in
mov
jmp
cmp
add
ret
xor
ror
jno
fsubr
inc
add
stc
dec
add
mov
or
pop
pop
js
pop
out
add
fdivrp
xor
cmp
out
icebp
std
adc
out
int3
frstor
inc
inc
jmp
pop
xchg
les
mov
jae
and
iret
ins
mov
ret
dec
stos
das
test
adc
ds
daa
lahf
dec
out
xchg
add
(bad)
xor
loop
xchg
mov
mov
xchg
arpl
sbb
pushf
(bad)
jl
sti
fwait
jecxz
into
jmp
adc
mov
push
mov
sar
or
jbe
mov
cs
test
jb
mov
push
jbe
inc
push
mov
aas
jno
xchg
pop
popa
xor
mov
sub
adc
pushf
inc
outs
mov
aad
jge
(bad)
hlt
int
push
jae
jnp
test
sub
add
xor
ficom
mov
(bad)
mov
mov
shr
test
jp
jbe
sub
xchg
jecxz
sub
fcmovu
call
cmp
or
int3
neg
mov
ror
out
jb
std
or
lock
loope
or
imul
rol
mov
daa
loop
cmps
sbb
or
jnp
sub
shrd
in
mov
pop
mov
push
sahf
xchg
mov
rcl
ret
in
test
xchg
in
xchg
fs
movs
test
sub
stos
pop
jle
cmp
xchg
xchg
xchg
adc
jle
(bad)
jne
not
dec
aad
jl
addr16
test
mov
lods
dec
mov
(bad)
sub
inc
mov
cs
xchg
mov
js
inc
adc
mov
movs
xchg
push
movs
sub
push
adc
mov
(bad)
fimul
aaa
stos
pop
inc
jae
in
test
adc
or
sahf
test
out
inc
and
sub
sub
iret
ins
in
or
repz
mov
and
dec
pop
inc
test
sbb
lods
push
push
imul
or
mov
mov
mov
jne
mov
retf
xchg
xchg
out
lds
je
std
jge
(bad)
dec
add
xchg
(bad)
xor
pop
sbb
mov
inc
adc
ror
sbb
dec
mov
les
adc
jnp
fsubr
xchg
cmps
xor
jno
std
and
js
mov
push
jmp
cmp
js
aad
push
xor
clc
push
out
mov
ret
inc
push
imul
mov
stc
(bad)
clc
pusha
push
retf
shl
popa
(bad)
jbe
(bad)
xchg
addr16
retf
fsub
cmps
mov
pop
jmp
rep
cld
aaa
mov
jl
movs
pusha
into
outs
imul
jge
xor
push
sbb
pop
sub
jne
ret
mov
retf
cld
(bad)
mov
call
out
enter
pop
jmp
mov
and
(bad)
jmp
jnp
add
xchg
lock
xchg
retf
mov
xor
iret
lds
aas
cdq
jno
int3
push
lods
cdq
aaa
rol
sbb
pop
mov
push
push
or
aaa
(bad)
fwait
repnz
adc
mov
shr
mov
push
test
ds
ds
test
test
pusha
push
retf
repnz
pop
and
jp
call
push
(bad)
push
retf
cmc
in
icebp
fisub
jnp
sub
fwait
std
jg
mov
(bad)
xor
adc
daa
(bad)
xor
xor
xchg
cmp
or
retf
adc
test
push
xchg
push
or
test
push
cmp
pop
cmp
jmp
mov
inc
fwait
test
cmp
gs
xor
in
inc
push
jnp
ss
sbb
cld
ins
jo
mov
pushf
rol
test
sar
stos
or
cli
push
(bad)
fild
jle
sbb
sub
jns
jns
xchg
lahf
div
rcr
xchg
xchg
add
test
fwait
mov
fcom
mov
imul
jne
fld
popf
clc
fmul
leave
and
ficom
dec
(bad)
stc
mov
dec
inc
pushf
add
mov
popa
xchg
mov
xor
add
jmp
inc
jge
movs
ds
mov
ins
sub
xor
scas
adc
das
dec
inc
inc
pop
pop
dec
popa
jnp
outs
pop
lods
hlt
fnstsw
gs
add
aas
mov
xchg
mov
in
xlat
mov
xlat
adc
retf
stc
cmps
sbb
cmp
mov
xchg
gs
std
jmp
out
mov
aaa
imul
inc
loopne
pop
ins
jmp
rcl
jp
cli
mov
inc
pop
mov
outs
int3
pop
fs
sbb
ins
jmp
xchg
into
fwait
or
push
int3
cmp
mov
jne
(bad)
jnp
or
dec
adc
xor
jle
cmp
push
pop
fisttp
pop
pushf
mov
xor
mov
scas
icebp
mov
xchg
in
pop
je
cmps
or
shl
push
xchg
imul
scas
repz
jb
imul
xor
das
mov
mov
aam
cmp
inc
dec
fs
sub
ds
or
xchg
(bad)
ss
mov
fidivr
out
sbb
aad
cmps
loopne
(bad)
fild
cmp
int3
jo
mov
mov
out
sbb
clc
add
jmp
xor
cli
mov
imul
cmp
cmc
dec
xor
lods
ss
shl
imul
jbe
xor
and
mov
sar
repz
mov
iret
test
and
scas
xlat
shr
mov
jno
mov
inc
mov
push
addr16
sbb
pop
jmp
push
popa
inc
(bad)
and
popa
pusha
xchg
out
jmp
pusha
jo
mov
test
xchg
dec
jge
repz
enter
mov
int
imul
(bad)
lods
adc
mov
jge
leave
cmp
dec
(bad)
mov
cmp
or
stos
gs
cmp
ret
pop
mov
jo
mov
mov
mov
push
push
cmp
scas
sub
adc
push
adc
mov
sub
mov
pop
gs
aam
xchg
int
call
cmps
jle
push
outs
or
(bad)
xlat
sub
jle
mov
add
ins
push
pop
inc
push
xchg
jbe
mov
inc
or
mov
fnstenv
jnp
or
rol
sub
sub
jge
xor
cmp
cmps
sbb
jae
sbb
cmp
shl
sbb
sub
mov
mov
fdivrp
and
repz
fsub
(bad)
hlt
cmps
jecxz
repnz
inc
sti
adc
imul
sub
push
jmp
and
call
mov
fisttp
scas
xor
arpl
cwde
jmp
jns
cmps
mov
in
mov
xchg
sub
push
imul
out
mov
sar
lea
xor
test
xchg
imul
loop
cmc
pop
sub
push
test
add
cwde
cmps
lock
je
mov
add
movs
rol
mov
jb
push
jmp
cli
pop
add
call
mov
adc
ror
xor
cmc
cli
scas
leave
inc
repz
retf
xchg
inc
nop
dec
pop
popf
out
jl
push
push
int3
das
cmp
adc
pushf
adc
enter
or
pop
mov
mov
sub
xor
and
or
adc
xlat
aad
sbb
push
cmp
mov
aas
shl
inc
adc
push
rcl
test
cmp
mov
addr16
data16
xor
fsubrp
xchg
rcl
push
xchg
jae
inc
(bad)
aad
adc
xlat
test
xor
ror
mov
xchg
pop
or
leave
jnp
add
stos
inc
je
xor
adc
(bad)
adc
jno
retf
ret
jmp
ins
jge
pushf
push
inc
cmc
ja
and
add
or
repz
xor
sub
mov
sbb
or
sahf
inc
jp
retf
arpl
ror
in
leave
call
out
push
jl
(bad)
mov
add
cmp
mov
or
sub
stos
sahf
aam
cmps
fmul
fs
test
cmps
and
xchg
movs
arpl
pusha
jne
add
mov
sbb
pop
dec
jecxz
stos
sbb
inc
mov
pusha
push
cmp
or
and
mov
xchg
add
(bad)
mov
imul
inc
xor
mov
add
xor
pop
jl
fst
out
sub
or
xchg
sub
fwait
mov
or
popf
scas
add
pop
jle
add
ins
pop
rcl
adc
lea
retf
add
cwde
mov
sbb
xchg
dec
scas
inc
xor
pop
clc
loopne
mov
jno
cmp
outs
sbb
and
leave
bound
popa
mov
xor
pop
sbb
add
mov
cmp
es
cs
mov
jno
pop
nop
mov
shr
adc
addr16
jns
not
sahf
cmc
std
rcr
xor
sub
sbb
shl
inc
(bad)
jl
jne
or
dec
or
mov
call
cli
inc
inc
repnz
xor
test
jge
ins
std
fisub
pop
fcmovbe
push
fidiv
mov
sahf
sbb
js
gs
xlat
movs
cmp
gs
test
sub
and
movs
rcr
aad
jmp
retf
sbb
std
adc
dec
ja
add
dec
mov
inc
push
inc
mov
(bad)
fucomi
jmp
ret
adc
pusha
push
int3
push
add
mov
pusha
out
outs
push
inc
nop
loopne
inc
frstor
outs
int3
imul
mov
dec
dec
mov
pop
fiadd
je
(bad)
mov
retf
add
cli
aam
push
adc
jne
push
sub
add
shr
cmp
adc
ret
mov
pop
pop
outs
cmp
loope
adc
xchg
cmp
or
fdiv
cmp
out
xor
and
cwde
pop
call
int
jmp
not
lds
xor
mov
rcr
or
lahf
sub
movs
mov
push
outs
jmp
cmc
jae
xor
xor
sub
mov
popf
pop
pusha
lds
loope
(bad)
(bad)
dec
xchg
(bad)
and
lock
out
fs
pusha
mov
push
das
repz
stc
push
inc
jb
sbb
addr16
dec
movs
pop
or
xlat
dec
mov
pop
add
sub
call
sub
mov
or
mov
and
test
stos
mov
mov
add
outs
mov
cdq
inc
ret
push
outs
and
jbe
aad
sub
dec
arpl
or
adc
xchg
or
les
test
jae
cs
lods
retf
push
pop
ror
ins
test
pop
add
mov
aas
mov
or
nop
mov
mov
sbb
lock
or
fcom
popa
push
jbe
clc
cld
xchg
push
push
mov
xchg
int
inc
push
loopne
sbb
mov
jae
hlt
xor
(bad)
mov
pop
sti
mov
or
popa
jnp
int
xor
icebp
aam
cmps
or
mov
mov
xor
sub
in
daa
xor
inc
and
out
pop
cmp
xor
push
sub
inc
adc
inc
pop
jne
lahf
lods
pop
int3
sar
dec
dec
sbb
or
xchg
or
cmp
popf
call
aam
cmc
mov
dec
icebp
push
vmread
sbb
jl
mov
and
cli
mov
ds
xor
loopne
adc
sub
adc
adc
cwde
cmp
mov
(bad)
jae
ret
ror
inc
test
popf
repnz
pop
pop
ret
cmp
mov
movs
repz
(bad)
int3
pop
imul
jnp
jmp
pop
push
mov
test
out
cmps
call
pop
icebp
xchg
jne
mov
push
inc
aas
test
sbb
loop
iret
inc
leavew
sub
mov
ins
loopne
and
xor
cmp
mov
fiadd
(bad)
ror
mov
pusha
pop
and
pop
rcr
cmpxchg
jb
stos
idiv
and
aad
packssdw
sbb
push
sub
mov
into
adc
pop
loop
movs
push
outs
aad
fcom
mov
call
push
ss
jb
ins
pop
outs
sti
int3
jne
inc
test
iret
popa
dec
shl
test
ss
leave
fmul
jg
jns
shl
mov
cdq
mov
cmc
lods
jp
mov
cmp
jno
ret
call
cmp
js
dec
lods
adc
pop
nop
(bad)
push
clc
cmp
mov
gs
xchg
mov
pop
jmp
cmc
mov
or
movs
xor
xor
push
sub
push
mov
cmp
lahf
xor
push
scas
aam
lods
and
mov
(bad)
and
push
cmp
in
adc
mov
cmp
or
shl
arpl
and
push
cdq
adc
dec
aaa
dec
adc
aad
cmp
cwde
or
add
imul
rol
fs
push
sbb
mul
cmps
mov
sbb
rcl
lahf
daa
fucomi
lods
cmp
test
cmp
nop
mov
test
out
xchg
(bad)
lea
(bad)
loopne
pop
pop
mov
retf
xchg
push
paddq
gs
in
or
mov
and
cmp
cmp
mov
sub
adc
xchg
icebp
outs
or
cmp
mov
cmp
into
rcl
pop
inc
hlt
push
jns
test
in
jns
cmps
pop
push
pop
fldcw
fcomp
fstp
jp
jge
mov
xor
out
push
jp
mov
xchg
ins
addr16
arpl
stos
xchg
push
adc
or
imul
outs
fist
popa
mov
sbb
and
sbb
mov
jae
sti
inc
lahf
repz
lods
sub
xchg
mov
jno
cmp
mov
dec
and
or
pop
ror
sbb
sbb
je
jecxz
push
pop
aam
cdq
fsubr
pop
xor
imul
push
xchg
sbb
mov
out
dec
lahf
jecxz
jb
cmc
test
adc
es
popf
jb
dec
in
fwait
push
adc
pop
fild
scas
into
dec
ret
jbe
pop
add
cli
mov
adc
in
pusha
int
dec
mov
pop
inc
mov
push
push
sbb
adc
retf
in
adc
inc
pop
pop
popf
ret
bound
cmp
popf
ret
mov
push
jg
sub
sar
test
stos
popa
inc
iret
jp
imul
sbb
sbb
jnp
mov
xor
gs
ret
ret
(bad)
test
sbb
outs
mov
sbb
adc
and
cmp
stos
fistp
dec
ja
fld
in
shr
push
fucomip
mov
inc
popf
dec
lahf
xor
shl
pop
iret
(bad)
in
imul
les
mov
xor
ror
ins
in
popa
aas
addr16
out
jo
outs
adc
rcl
adc
aam
and
inc
jp
or
out
stos
lods
stos
ds
inc
inc
jne
iret
adc
lock
add
les
pop
mov
mov
adc
or
cmp
mov
outs
xlat
sub
mov
fmul
ja
cmps
ins
idiv
add
and
les
mov
aaa
ret
and
or
sti
cmp
xchg
sbb
sbb
mul
sbb
inc
test
push
pop
fmul
or
dec
lods
or
add
adc
mov
les
or
cmp
mov
cli
add
inc
inc
nop
push
test
mov
sub
inc
das
cmc
cmc
(bad)
loopne
xchg
dec
test
popa
xor
(bad)
(bad)
mov
call
call
rol
ins
cmp
dec
retf
test
jmp
stos
cdq
sbb
ror
fbstp
add
test
sahf
daa
jle
je
cwde
addr16
xlat
loop
or
mov
pop
xchg
in
pxor
scas
dec
(bad)
mov
iret
xor
mov
mov
push
jne
dec
mov
jae
or
ja
or
dec
mov
test
rcl
pop
cmp
dec
test
stos
(bad)
mov
fdiv
push
scas
sub
das
push
ss
mov
sub
bound
inc
and
ja
cmp
sub
push
mov
out
das
push
mov
mov
mov
data16
loopne
dec
xchg
push
cmp
adc
je
outs
ret
cmp
cmp
mov
pop
sub
loop
mov
adc
jle
call
push
dec
js
(bad)
or
jmp
or
and
and
sti
ss
ins
add
fdivr
jg
dec
out
cmps
jge
retf
jl
jo
dec
(bad)
and
jno
and
sti
inc
xor
mov
repz
sti
mov
lods
push
mov
bound
mov
xor
pop
mov
cmc
mov
mov
dec
pop
push
cld
pop
test
adc
sub
mov
cmp
ret
pop
call
jbe
(bad)
push
jmp
shr
fisttp
mov
nop
(bad)
cmp
and
mov
jo
adc
cmps
je
(bad)
in
in
mov
cmp
jg
inc
and
adc
rcr
pop
xor
push
xchg
sti
les
xchg
sbb
sub
mov
hlt
adc
icebp
not
pop
cdq
jae
shr
(bad)
stos
sbb
loope
dec
in
fs
fwait
xor
or
loope
not
cmovl
stc
inc
test
nop
jo
xchg
push
and
iret
mov
retf
mul
mov
ret
cmp
pop
cmp
or
addr16
xchg
mov
jmp
ds
pop
jbe
add
push
cmps
in
mov
push
and
cwde
xchg
sbb
push
call
test
psubusw
fwait
sub
and
add
lods
pop
mov
adc
(bad)
push
jne
xor
int
stc
mov
and
mov
add
cmps
mov
jp
sbb
js
xor
push
xor
inc
push
push
in
add
test
add
sub
scas
jg
mov
adc
pop
(bad)
not
ja
xchg
std
sti
mov
inc
cmp
xchg
lea
(bad)
lods
fbld
pop
sub
jmp
fwait
jmp
dec
adc
cmp
in
ja
(bad)
jl
sbb
push
inc
enter
scas
jns
std
pop
or
lods
mov
sub
out
fstp
pop
mov
cs
xor
push
aam
fcomp
or
inc
pop
lahf
fsub
daa
(bad)
cmc
enter
pop
js
mov
adc
aaa
(bad)
dec
cmps
test
lods
cs
pcmpgtd
add
in
aam
jp
add
test
pop
jnp
(bad)
imul
cmp
jb
push
leave
or
lock
dec
cmc
push
xor
enter
push
push
mov
dec
loop
jle
add
ret
out
cwde
cmp
inc
xchg
aas
jmp
(bad)
sahf
(bad)
in
loopne
sub
xchg
jle
leave
mov
pop
mov
push
mov
ret
int
push
int
cmp
ins
mov
(bad)
mov
(bad)
js
ss
add
lods
jg
xor
std
jne
mov
std
pop
push
dec
mov
xchg
jl
mov
repz
sti
xchg
lock
movntps
mov
xor
test
loopne
js
pop
ins
popa
cmc
cmp
cmp
(bad)
stos
js
mov
cmp
call
in
div
in
cld
inc
aas
js
xor
popa
dec
or
push
into
loop
cmp
aaa
xor
retf
cmps
lods
(bad)
jnp
ins
loope
in
adc
jmp
sub
sub
or
int
mov
sub
mov
clc
and
dec
(bad)
ret
cdq
cmc
jns
imul
ret
hlt
aas
and
leave
xchg
ret
sahf
js
mov
retf
cld
jnp
xchg
std
sbb
(bad)
push
mov
mov
jmp
stos
sub
mov
ret
mov
jae
xchg
std
cmp
mov
je
das
push
fst
fdivr
(bad)
pop
(bad)
sbb
adc
xchg
fld
sub
test
sub
scas
xor
add
jmp
pop
(bad)
or
mov
pcmpeqb
inc
ja
add
ins
ret
push
pop
div
cld
xor
mov
cwde
leave
push
rcr
retf
ror
mov
jbe
repz
and
cwde
adc
sub
stos
repnz
clc
mov
pop
ins
mov
xchg
or
sbb
jmp
retf
enter
or
aaa
lea
push
call
dec
ret
fisubr
jecxz
push
xchg
in
fnstenv
xor
iret
ins
jle
push
xchg
bound
imul
jmp
or
out
mov
push
sahf
adc
xchg
xor
(bad)
sub
pop
dec
cmc
aam
mov
push
xlat
pop
aad
mov
mov
outs
adc
fistp
push
inc
push
xchg
pop
xor
sbb
mov
popf
not
jl
push
cmps
add
mov
mov
(bad)
fsubr
fldl2e
into
in
pop
rol
push
gs
adc
mov
jg
dec
lock
fisub
mov
cdq
retf
jbe
xlat
icebp
inc
sets
push
push
pop
mov
mov
mov
and
ror
mov
cwde
mov
test
aad
and
mov
cli
sub
ds
out
add
iret
add
loopne
mov
outs
cmp
repz
push
sub
pop
into
sbb
or
stos
movs
jle
inc
xchg
cs
mov
add
cwde
js
ins
fbld
cmps
dec
mov
mov
adc
pop
rcr
jno
jge
lds
adc
push
sub
cmp
pop
cwde
mov
push
idiv
push
adc
loop
clc
push
xchg
ins
inc
add
lock
cmp
outs
dec
adc
xchg
jmp
fdivr
jnp
js
shl
mov
les
enter
or
stos
mov
int
push
outs
inc
das
mov
pop
xchg
aam
jmp
inc
gs
leave
call
push
ret
dec
jnp
mov
mov
adc
jecxz
sbb
mov
mov
push
leave
pop
mov
rcl
cmp
cs
add
jp
xchg
loopne
cli
call
dec
popf
cmp
and
jns
xchg
rol
test
jbe
xchg
ret
dec
mov
xchg
adc
jmp
outs
sub
std
mov
clc
stos
icebp
inc
pop
(bad)
call
xchg
test
xchg
stc
mov
mov
and
mov
int3
js
push
ins
imul
mov
dec
cmps
sbb
enter
jno
inc
jmp
jge
shl
mov
popa
xor
lea
mov
sbb
dec
ret
mov
inc
cmp
inc
fcomp
(bad)
(bad)
movs
pop
or
sub
ds
arpl
push
test
stc
jo
leave
pop
inc
mov
cdq
dec
leave
scas
int3
mov
imul
jno
pop
jecxz
shl
mov
retf
clc
js
mov
add
sub
jmp
ins
mov
mov
popa
cmp
rcl
xor
sbb
or
sbb
unpcklps
shr
inc
test
sub
out
sub
xchg
sub
push
xor
movs
stc
mov
mov
pop
push
fild
xchg
sti
aas
push
and
sub
ds
cld
adc
pop
lock
or
sub
rol
mov
inc
aaa
pop
jb
gs
addr16
jno
cmp
mov
and
jae
inc
movs
add
rcl
pushf
xchg
pop
pop
adc
shr
push
(bad)
xchg
icebp
jmp
inc
shl
retf
pushf
out
int
in
(bad)
cmp
cmp
cmc
xchg
jnp
gs
and
or
sbb
mov
or
pop
inc
std
jl
mov
and
mov
adc
mov
pop
inc
rol
sub
mov
jp
stos
cmp
pop
into
mov
xchg
int3
jne
test
fdiv
daa
xor
push
pop
mov
sbb
xchg
mov
leave
(bad)
adc
out
(bad)
sar
retf
push
aas
out
shr
mov
cmp
jae
jl
xchg
(bad)
loopne
adc
in
gs
mov
or
retf
inc
js
mov
mov
cmp
and
cmp
scas
out
pushf
jmp
enter
push
fistp
fsub
dec
jns
lods
sti
mov
add
sbb
cmc
ins
dec
call
fs
dec
sub
pushf
(bad)
(bad)
mov
inc
mov
aam
sbb
cmp
cmc
inc
(bad)
leave
cbw
xor
sahf
shl
cli
pop
ins
fisub
test
adc
xchg
or
sar
pop
push
sub
cdq
data16
(bad)
lea
jns
jb
loop
fild
jbe
loopne
cwde
bound
or
mov
lods
fnstenv
loopne
mov
jb
push
fcmovnb
clc
aaa
shl
imul
(bad)
(bad)
into
push
sub
or
sub
adc
jle
pop
addr16
mov
xor
and
aad
data16
mov
test
cmps
out
js
cmp
cmp
cmovo
pop
jp
jecxz
xor
adc
(bad)
sub
idiv
mov
aaa
sbb
push
scas
mov
das
test
jo
mov
sub
xor
popf
cmc
imul
sbb
jne
pop
mov
push
inc
je
pop
mov
xchg
push
jg
pusha
pop
mov
jmp
mov
dec
pop
add
jmp
cmps
sub
rcr
popf
fnstsw
xor
push
cmp
ror
jge
cwde
cmc
sbb
add
cmp
xor
loopne
enter
and
mov
xlat
std
repz
pop
xchg
adc
retf
sub
mov
daa
push
jl
aam
push
push
and
ins
push
movs
mov
stos
xchg
cmp
sbb
icebp
js
repz
out
outs
pop
xor
cmp
dec
test
ret
sub
push
popf
jne
addr16
fdivp
popf
push
in
mov
inc
ds
mov
cld
push
test
push
out
imul
(bad)
in
js
ins
int
sbb
test
loopne
xor
sbb
fimul
pop
dec
test
jbe
xchg
out
lock
int
add
xchg
and
mov
out
(bad)
popf
jmp
movs
xor
mov
push
in
jmp
xchg
sub
inc
loope
jl
std
or
mov
dec
pop
or
jnp
or
xchg
or
lods
or
dec
pop
loop
lahf
pushf
jecxz
addr16
lahf
cs
cmp
mov
je
clc
dec
adc
dec
stos
inc
xor
shl
repnz
sbb
push
and
mov
mov
adc
aaa
out
cld
ins
mov
sub
jg
repz
xor
into
std
add
pop
fimul
dec
js
shr
or
xchg
rol
or
cmp
(bad)
out
cmp
mov
arpl
push
arpl
das
rcl
or
add
rol
pop
add
icebp
(bad)
xchg
(bad)
push
data16
sub
out
aad
popa
rcr
stc
cmc
inc
cmp
cmps
cmps
xchg
mov
xchg
cmp
je
jns
retf
jl
arpl
test
sbb
mul
sub
lahf
sti
mov
or
sbb
add
addr16
mov
xchg
xchg
imul
fidiv
push
inc
xchg
and
jmp
(bad)
push
ror
dec
mov
stc
outs
int
loope
cmp
mov
push
ins
mov
xchg
mul
mov
scas
sub
sub
xor
jnp
scas
js
xor
(bad)
mov
push
out
or
xchg
mov
out
xchg
rcl
fidiv
int3
lock
out
sar
mov
enter
test
or
xchg
push
or
and
je
jge
mov
daa
and
sub
adc
daa
out
sbb
adc
and
mov
call
cli
call
jp
jbe
add
scas
mul
sar
daa
sub
dec
data16
xor
imul
cmp
dec
inc
loop
pop
and
rol
jp
or
outs
ret
xlat
in
outs
mov
out
push
xor
jle
push
test
fiadd
inc
mov
mov
jecxz
or
out
aam
cmp
movs
cmc
inc
outs
outs
xchg
mov
jns
cmp
push
int3
(bad)
(bad)
retf
jecxz
cld
js
pop
and
push
or
mov
rcl
ret
and
loopne
and
jno
pop
dec
movs
sbb
movs
fimul
lods
mov
out
fcom
inc
jno
daa
div
or
iret
dec
cmp
(bad)
pop
fadd
fwait
(bad)
and
and
ficom
outs
dec
jne
aam
das
popf
aad
imul
cmp
inc
pop
das
stos
iret
sbb
inc
xchg
xchg
xchg
push
(bad)
push
retf
xchg
jmp
out
xchg
add
scas
add
cs
jg
cmp
cwde
push
je
mov
sbb
mov
mov
sub
out
xchg
dec
ds
adc
inc
cmp
mov
push
inc
sbb
sub
mov
imul
fild
push
inc
and
jg
push
adc
mov
sbb
or
addr16
xchg
inc
mov
scas
inc
xchg
and
jmp
cmc
jnp
popf
fsubr
mov
out
mov
stos
jmp
es
adc
and
shr
xchg
push
nop
jbe
pusha
add
push
mov
dec
or
xor
pop
push
fldenv
ret
push
cmps
ja
inc
cmp
ret
mov
stos
xchg
int
or
push
jmp
mov
or
scas
pextrw
mov
pop
es
movntps
and
jo
inc
mov
mov
xlat
dec
fs
xor
xchg
ins
adc
js
sub
out
cwde
or
xor
test
pop
sar
pop
daa
cwde
sbb
sbb
mov
dec
sahf
add
(bad)
sub
push
dec
or
lds
and
mov
int
enter
int3
scas
fldenv
data16
stc
mov
push
push
ror
es
mov
imul
bnd
je
mov
fsub
add
je
fstp
out
add
jge
pop
add
test
loop
sbb
jg
push
bound
ja
mov
sub
int3
mov
cmp
daa
xchg
(bad)
out
push
hlt
inc
dec
imul
leave
test
jne
jg
neg
mov
not
bound
imul
repnz
push
sbb
fs
mov
jo
das
push
retf
xor
mov
xchg
dec
and
and
addr16
inc
loope
push
repz
mov
lds
out
div
add
dec
adc
xchg
mov
and
hlt
push
mov
xchg
push
popf
mov
jle
mov
ja
push
mov
jo
push
push
enter
pop
test
dec
jmp
out
lods
js
(bad)
leave
mov
pop
stos
push
mov
retf
jmp
add
inc
or
scas
inc
and
xchg
cmp
pop
push
test
cmps
je
or
pop
mov
les
test
(bad)
call
sub
sub
adc
push
xchg
cld
shr
les
mov
pop
leave
dec
jbe
or
pop
add
stos
jecxz
sub
jecxz
(bad)
jmp
out
sbb
sbb
repnz
stc
cmp
in
pinsrw
in
retf
aas
mov
test
jg
jmp
lahf
repz
mov
int3
mov
pop
clc
add
in
ins
(bad)
not
inc
xchg
pop
ficom
in
or
jns
adc
cli
sub
mov
sub
cmp
pop
lock
sbb
mov
aam
fcomi
or
adc
add
jb
dec
push
cmps
mov
pop
sbb
pop
out
inc
cmp
ret
xchg
jmp
mov
rcr
sbb
push
jae
xor
jg
loopne
pushf
cdq
cmp
or
stos
cwde
xor
retf
fisub
add
fstp
cmp
sub
push
sbb
push
fwait
pop
cmps
not
xchg
sbb
sbb
lds
retf
test
jle
jmp
loop
(bad)
pusha
std
adc
inc
ret
pop
push
pop
cdq
pusha
jge
div
aad
bound
lds
movs
push
cmps
push
ja
fnstsw
cs
dec
inc
jp
and
call
addr16
sbb
adc
mov
mov
jno
in
loopne
call
dec
cli
add
sar
cdq
in
push
int3
xchg
scas
adc
rcr
repnz
mov
inc
pop
dec
mov
cmp
enter
mov
push
pop
or
loope
arpl
xchg
sbb
cld
(bad)
retf
cmp
sbb
sbb
bound
xor
lods
sub
mov
scas
mov
es
in
ror
pusha
cmp
push
and
xchg
jge
push
xor
push
cdq
fdivr
pop
add
mov
add
jns
imul
arpl
cmps
xor
cmp
pop
mov
loopne
mov
dec
jecxz
sub
jmp
or
retf
(bad)
cmp
mov
cmp
jo
jnp
inc
inc
sti
add
daa
ret
into
fcmovu
gs
imul
pop
cmc
xor
rcl
and
sahf
jo
outs
add
stos
cmps
cmp
push
mov
je
mov
add
jmp
out
jge
jp
cmp
outs
jno
mov
movs
fs
push
mov
mov
dec
(bad)
mov
cmp
mov
sub
shr
mov
jb
int3
je
(bad)
repz
mov
pop
test
clc
neg
pop
sub
and
das
add
pop
add
dec
inc
ins
in
cmp
push
or
adc
je
push
mov
jns
sub
adc
ss
xchg
fdivr
lods
mov
ds
push
(bad)
jle
sahf
push
dec
sbb
aas
inc
add
jg
sub
xchg
cmp
dec
dec
mov
das
bound
lock
outs
cmp
popf
lea
pop
push
dec
sbb
retf
xor
push
bound
xchg
xor
and
push
push
pushf
hlt
int3
hlt
ret
sbb
sahf
mov
js
es
mov
enter
mov
stos
and
outs
inc
pop
mov
pop
xor
mov
sub
(bad)
pusha
cmc
aad
gs
clc
mov
mov
outs
mov
mov
cli
push
push
push
fwait
push
inc
daa
xchg
pop
mov
into
add
or
mov
push
mov
pop
push
xchg
test
daa
fs
mov
mov
lahf
jmp
jmp
inc
hlt
repz
mov
repz
xor
add
and
ss
jmp
inc
bound
mov
sub
dec
std
das
add
inc
push
or
cmp
ficomp
dec
add
cmp
(bad)
cmps
mov
jno
mov
ins
btc
ja
mov
xchg
pop
pop
jns
sub
or
neg
or
adc
sbb
jmp
int
out
mov
adc
mov
mov
(bad)
shl
mov
lahf
xchg
or
js
pop
movs
js
iret
jp
hlt
fs
fcomp
mov
ss
or
cmp
sbb
pusha
ins
cmp
adc
loopne
cmps
sti
sahf
adc
and
sub
add
fcomp
rcl
arpl
jp
xchg
sbb
int3
enter
into
or
cmp
jmp
popf
nop
ss
push
or
rcr
jne
repnz
xor
ss
lock
mov
js
aas
cwde
cld
fmul
neg
sbb
mov
sub
or
cdq
sub
add
xchg
inc
add
data16
xor
dec
in
or
out
bound
push
lods
aas
fmul
stos
in
or
mov
mov
imul
shl
sbb
push
mov
cmc
fs
lds
test
sub
jno
jne
pushf
cwde
dec
ss
inc
shl
popf
mov
addr16
xchg
ins
lahf
shl
mov
push
out
hlt
adc
loope
jecxz
add
xchg
in
mov
fcmovnb
fnsave
and
xchg
adc
jle
add
pop
not
iret
cmc
repz
push
(bad)
fimul
out
sti
mov
les
push
mov
pushf
adc
mov
int
(bad)
xlat
lds
daa
test
pop
mov
push
cmp
cmp
mov
xchg
dec
cmp
shl
mov
mov
jg
mov
shr
xchg
scas
cmp
imul
xor
add
lahf
adc
outs
sbb
mov
not
xchg
cli
aas
and
xlat
cwd
repnz
xor
icebp
xor
inc
pop
cld
loope
cwde
or
lods
icebp
dec
daa
jo
cmp
sbb
add
aas
movs
scas
ss
sar
stos
cmpxchg
mov
nop
mov
scas
add
lock
add
jecxz
jne
cli
add
imul
fistp
dec
das
jp
adc
mov
lds
cld
cmc
ret
or
(bad)
push
(bad)
lds
in
cmp
pop
in
xchg
es
pop
cmp
iret
sahf
icebp
outs
dec
inc
pop
imul
mov
mov
xor
adc
push
aas
cli
jns
add
mov
push
jmp
jb
inc
dec
iret
daa
sub
xor
xchg
xor
cmps
pop
sti
pop
mov
shl
(bad)
push
dec
cmp
xor
adc
int3
push
ss
adc
mov
pushf
push
cs
cmp
adc
repz
inc
pop
outs
xor
jmp
xlat
lods
pop
adc
dec
ror
jp
aam
or
push
sahf
test
mov
dec
mov
(bad)
cmp
mov
int
push
pop
in
dec
jg
sbb
xor
xor
inc
push
xlat
xchg
shl
sbb
push
xlat
aas
(bad)
stc
xchg
aad
push
(bad)
pop
lods
popf
pusha
imul
popa
push
add
or
sbb
sar
mov
cmps
out
push
jne
aaa
std
repnz
mov
pop
pop
loop
xchg
arpl
ins
test
and
fnstcw
retf
inc
pop
gs
aam
daa
out
out
lea
mov
mov
mov
or
jge
push
pop
in
outs
adc
int
(bad)
pushf
fcmovu
mov
dec
sbb
inc
es
pop
pop
imul
std
imul
iret
loop
or
stos
mov
fsubr
ss
fbstp
and
push
nop
loop
pop
jmp
mov
jmp
mov
aam
inc
pop
dec
add
xchg
and
out
and
mov
jbe
in
xchg
jge
adc
sbb
pop
pop
jl
addr16
push
cmps
repz
lods
cmps
loope
fisttp
pop
pop
sub
push
mov
or
pop
int
jp
in
shr
pop
lods
xlat
sub
cmc
push
ror
pop
loopne
xchg
jbe
aad
adc
repz
push
or
cwde
shl
cmp
push
repz
xor
dec
jb
in
aad
inc
sbb
test
ret
cmp
or
fdivr
adc
addr16
es
jecxz
mov
ror
jmp
mov
adc
mov
icebp
loope
add
mov
push
adc
mov
xor
and
and
adc
xor
and
jmp
ja
pop
jecxz
sub
push
inc
cmps
movs
leave
adc
dec
test
mov
push
test
sbb
pop
mov
enter
cmp
push
neg
and
mov
sbb
shl
xchg
(bad)
mov
pop
sbb
mov
inc
pop
ja
mov
or
cmc
xor
(bad)
sahf
jge
fwait
stos
sti
sub
retf
xchg
cmp
and
outs
sub
xchg
div
xchg
iret
cmp
jmp
xor
cmp
push
rcr
cmp
fndisi(8087
push
outs
jmp
adc
repnz
pusha
jno
(bad)
xor
xor
jg
pop
outs
dec
test
mov
call
mov
inc
mov
mov
adc
pop
out
(bad)
lahf
adc
sub
cmp
cmc
mov
add
mov
cwde
adc
mov
cmp
and
sub
fnstcw
(bad)
out
icebp
test
or
sub
mov
and
test
push
fs
mov
add
pop
sahf
pop
popa
into
adc
jne
adc
ret
sub
inc
mov
clc
shl
call
test
mov
mov
cmp
inc
xor
(bad)
retf
ss
or
lea
movups
and
(bad)
mov
fsubr
cdq
shl
mov
mov
test
out
inc
lds
mov
and
data16
pop
sbb
or
and
push
push
add
push
(bad)
loop
cmp
lock
pop
xor
rol
(bad)
leave
mov
add
jb
jnp
fadd
mov
cld
lods
fadd
xor
stos
cld
addr16
mov
and
adc
sub
hlt
aad
jnp
sbb
test
sub
mov
and
pushf
ror
stos
imul
out
and
popf
imul
xor
adc
adc
inc
pop
cmp
pop
fdiv
addr16
(bad)
fimul
mov
dec
pusha
mov
and
jb
and
bound
jle
lahf
pop
jmp
sbb
mov
mov
mov
stos
sti
push
fsubr
xchg
inc
scas
sub
stos
mov
mov
and
imul
jne
call
add
sub
addr16
sub
mov
push
in
inc
(bad)
pushf
inc
pusha
pop
mov
add
cli
mov
stos
or
pop
ficomp
jns
enter
loopne
xor
adc
sbb
leave
pop
dec
add
sub
xchg
ror
or
cmp
popf
inc
inc
jbe
cs
push
push
mov
ins
shl
mov
and
test
(bad)
stos
fbstp
mov
mov
cdq
fadd
mov
pop
scas
outs
out
mov
and
enter
fsubr
call
pop
ds
cmps
jge
(bad)
xor
mov
pop
jno
mov
and
ror
ror
cdq
and
mov
out
pop
enter
push
(bad)
iret
scas
push
hlt
loope
call
shl
test
mov
ss
jge
enter
ret
mov
or
sbb
push
jnp
and
jle
(bad)
addr16
aam
cmc
rol
movs
test
inc
fsubr
sbb
sub
or
and
call
xchg
xchg
fadd
pop
or
mov
xchg
inc
popa
push
cmp
mov
pop
jmp
imul
sbb
or
pop
mov
imul
scas
dec
sti
aad
xor
mov
and
cli
(bad)
xor
js
ins
stos
lahf
movs
xchg
in
(bad)
ins
lods
fwait
(bad)
dec
retf
pushf
call
cmps
mov
test
dec
push
leave
mov
cmps
push
adc
(bad)
std
movs
outs
sbb
jge
movs
rcr
into
out
faddp
sbb
cmp
daa
mov
test
mov
adc
mov
lock
test
into
mov
dec
cmps
inc
mov
cmp
in
test
cmp
mov
xchg
cs
mov
test
scas
call
mov
mov
jno
out
sar
mov
leave
and
push
into
(bad)
mov
loopne
xchg
sbb
in
inc
jecxz
js
pop
adc
test
pop
cmc
ret
test
and
repz
dec
add
fstp
sbb
mov
xor
dec
jns
test
xchg
rol
test
push
and
pop
mov
mov
lds
lds
aaa
pushf
inc
aaa
(bad)
test
mul
push
sub
cmp
lock
sub
daa
xlat
in
jl
pop
push
xchg
jb
out
loop
mov
aas
mov
add
inc
push
push
push
jno
cmps
push
out
add
mov
js
xchg
jp
pop
icebp
adc
or
dec
inc
xor
inc
test
pop
lahf
or
pop
test
dec
mov
scas
popa
push
pop
push
(bad)
xchg
jmp
adc
ins
push
mov
dec
pusha
push
xchg
jle
repnz
ins
neg
popf
cmps
test
mov
mov
or
cmp
xchg
lahf
sbb
call
lds
(bad)
sbb
popa
ja
xchg
mov
fwait
aad
add
xchg
xchg
loop
xchg
xor
inc
lock
in
ret
movs
mov
cdq
add
adc
ret
inc
sbb
cmp
test
inc
pusha
jnp
and
pop
mov
fldcw
jns
or
sbb
cmp
push
in
sub
lds
test
jo
push
loope
or
push
sbb
lods
xor
mov
sbb
mov
movs
cs
inc
xor
(bad)
std
sub
adc
pushf
lahf
pop
mov
jo
lods
push
je
call
sar
mov
cmp
sbb
add
add
imul
push
mov
cli
test
or
adc
in
or
sbb
cmp
and
mov
lods
or
xor
fist
mov
mov
pushf
add
ss
jne
sub
shr
repz
pop
ja
aam
jmp
loop
int3
jmp
inc
or
add
xchg
push
jns
lea
jecxz
xchg
bound
call
retf
retf
cmp
xor
mov
push
(bad)
push
pop
ss
int3
shl
push
inc
inc
pop
add
fdiv
leave
fild
btr
or
mov
(bad)
mov
or
jge
scas
fidivr
xchg
inc
and
pushfw
sub
pop
imul
repz
std
push
pop
pop
ror
mov
dec
pop
imul
test
imul
or
arpl
xchg
sub
inc
xchg
add
fwait
jb
cmp
test
pop
adc
fimul
outs
jnp
outs
dec
jle
adc
test
cmc
add
arpl
add
and
add
pop
sub
push
push
(bad)
out
cmp
xchg
mov
retf
cli
and
mov
movs
scas
hlt
xchg
out
mov
idiv
xchg
push
scas
in
add
imul
repnz
popa
fxch
xchg
sub
outs
push
cmp
xchg
push
in
inc
shl
jl
cld
icebp
sub
or
aaa
in
mov
mov
nop
les
ja
psubd
and
inc
xor
loop
xchg
sti
out
cld
jp
push
and
dec
jg
dec
xchg
je
lods
inc
sbb
pop
xlat
and
(bad)
jne
dec
retf
pop
adc
aas
aaa
movs
mov
push
jle
dec
mov
(bad)
and
jb
mov
aad
div
add
pop
ret
retf
pop
popa
inc
push
test
dec
nop
pop
or
xor
dec
push
inc
stos
mov
add
or
and
or
dec
inc
xchg
push
cld
call
arpl
sbb
adc
hlt
jnp
dec
arpl
jae
addr16
or
push
adc
cmps
sub
nop
sub
lahf
cmp
pop
inc
(bad)
cmp
jns
scas
(bad)
and
call
pop
cs
jns
and
cli
ror
sbb
ror
fdivp
inc
int
xor
lods
adc
fadd
in
mov
(bad)
data16
retf
dec
cwde
sub
adc
hlt
push
sub
xchg
sbb
dec
xor
cwde
add
daa
ret
das
int3
push
ret
push
lods
out
mov
cwde
xlat
rol
pop
xchg
push
cli
je
aam
inc
fdiv
es
xchg
jecxz
inc
inc
sub
push
adc
sub
or
pop
es
lods
cdq
dec
xor
add
jg
gs
xchg
(bad)
cmp
add
mov
cmp
jl
pop
sub
scas
fisub
aam
sub
mov
lods
sti
dec
hlt
and
and
mov
sub
daa
add
ret
xor
xor
cmp
ss
jl
in
repnz
sub
shl
in
call
jg
out
clc
leave
lea
push
inc
rcl
jmp
iret
je
mov
push
inc
adc
mov
fdiv
and
fwait
pop
xor
fbld
pop
inc
std
or
or
cdq
test
jns
sahf
push
test
jmp
pop
test
pushf
shr
jo
je
int
xor
cwde
and
das
xchg
xchg
retf
js
xor
push
int
mov
icebp
outs
addr16
mov
jo
dec
fdivr
gs
jns
fistp
dec
stc
loopne
iret
sub
and
rcr
mov
(bad)
push
jns
mov
popa
add
xchg
ret
je
mov
xchg
loopne
sub
or
sub
mov
fst
(bad)
sbb
aaa
sbb
mov
add
mov
push
js
cmp
mov
sbb
aam
ss
lock
aad
xchg
cmp
xchg
inc
ret
dec
ds
fisttp
sbb
sub
mov
sub
inc
fistp
fldenv
xchg
outs
fidivr
adc
xor
and
and
ret
pavgw
adc
inc
sub
aaa
push
add
scas
js
bound
sub
dec
dec
mov
fcmovnbe
imul
or
and
sbb
repz
jo
adc
enter
mov
ss
psrlq
fdiv
sbb
mov
fist
xchg
jle
scas
jl
je
push
rcr
(bad)
dec
popa
hlt
mov
dec
in
out
xchg
sbb
fcomp
jmp
repnz
sar
dec
in
mov
xchg
lods
sbb
pop
mov
jbe
in
adc
mov
xor
jecxz
adc
cs
out
popf
in
jecxz
clc
and
sbb
pop
and
push
rcr
ja
xchg
sub
sub
mov
add
fsubr
and
pop
jmp
sahf
dec
adc
mov
scas
rol
into
xor
test
lods
hlt
out
sub
xchg
retf
jnp
(bad)
enter
mov
add
clc
dec
adc
inc
retf
mov
mov
jb
es
call
mov
rcr
add
lock
xor
shr
dec
mov
xchg
test
mov
jnp
mov
pusha
lods
pop
ror
jns
mov
imul
cmp
lock
jo
jecxz
push
mov
pop
and
inc
xchg
aas
ffree
cmp
sub
std
into
dec
outs
xor
aad
dec
xlat
mov
pop
sub
jnp
dec
and
cwde
je
sbb
push
mov
xchg
lods
fwait
sbb
cmp
jmp
xchg
in
push
je
std
clc
sub
fisubr
in
mov
push
jg
cdq
cdq
lods
lock
dec
fwait
scas
xchg
cmc
stos
sbb
lea
mov
(bad)
cmps
aas
xchg
rcl
mov
mov
int
or
cmp
loopne
rcl
and
dec
mov
sti
or
push
aas
and
mov
gs
bound
mov
ja
pushf
enter
cmp
or
mov
loope
xor
pop
mov
test
out
inc
sub
scas
push
cmp
xor
scas
xor
jmp
push
jb
jo
mov
dec
loope
xchg
mov
sub
jmp
push
pop
icebp
cmps
and
sti
js
jecxz
pop
(bad)
scas
mov
ins
cmp
jbe
int
ficom
or
sbb
cmp
outs
sub
push
sub
xchg
cmp
push
out
imul
sub
loop
cmp
push
das
stc
ds
pusha
push
jns
or
repz
push
add
scas
test
pop
in
ret
mov
out
loopne
mov
push
push
pop
mov
xor
push
cmp
fisubr
pop
mov
adc
lds
push
or
adc
fwait
or
add
add
cmc
scas
neg
scas
aaa
jbe
xchg
repz
jmp
adc
stos
mov
daa
jns
inc
pop
mov
loope
out
xor
imul
cmc
cmps
out
pusha
cmc
xchg
pushf
cmps
xor
xchg
sti
push
or
addr16
outs
je
cmp
add
int3
push
add
cmp
pop
call
out
hlt
aaa
and
scas
fadd
xchg
mov
push
outs
or
sbb
rcl
jle
sub
and
lock
pusha
xor
jle
addr16
ret
or
aam
push
ret
iret
cmc
mov
mov
fiadd
icebp
(bad)
jl
and
mov
fldz
pop
pop
cmps
pop
jnp
out
cmc
dec
push
xor
mov
test
loop
or
(bad)
jl
mov
xor
(bad)
jge
fcomi
loop
sub
add
rcr
sahf
cmp
loopne
pop
xchg
cs
push
jle
and
ret
pop
jne
and
push
loope
in
pushf
or
sub
xchg
push
repnz
push
outs
pop
mov
div
jnp
cld
jo
sub
or
push
mov
mov
(bad)
lahf
out
bnd
gs
pop
push
pop
sub
sub
adc
aaa
and
push
jbe
cmps
sbb
ins
jne
push
cmp
(bad)
mov
mov
xlat
cmc
pusha
sub
stc
call
retf
xchg
mov
ja
ja
jle
sti
cmp
int
addr16
mov
fwait
aam
fld
mov
mov
push
dec
cs
mov
or
mov
add
popf
cmp
mov
out
xchg
imul
ins
pop
fiadd
push
mov
xchg
dec
(bad)
xor
push
test
pop
inc
in
neg
es
(bad)
repz
(bad)
fmul
pop
adc
push
mov
aas
lds
xlat
adc
dec
add
sar
icebp
icebp
jne
mov
ja
dec
jo
sbb
out
add
sbb
mov
pop
inc
inc
fcom
ins
iret
mov
mov
jnp
call
sbb
inc
ret
cmp
test
inc
or
sbb
add
jecxz
add
xchg
fiadd
add
out
xchg
cmps
jecxz
xchg
push
jecxz
test
stos
jmp
pushf
arpl
push
(bad)
int
inc
pop
xor
iret
iret
pop
dec
fs
(bad)
inc
addr16
cmp
sahf
dec
xchg
cwde
xchg
mov
adc
stos
xor
cmp
and
ins
lods
movs
mov
push
int3
jge
pusha
push
mov
dec
xchg
sub
stos
fisubr
shr
out
lods
cmp
mov
rcr
hlt
sub
sub
clc
xchg
loope
cmp
pop
fwait
ror
pop
fsubr
ret
push
or
test
movs
into
push
push
in
in
jno
dec
test
push
inc
fnstsw
cmp
fidivr
pushf
sub
inc
aad
adc
mov
sbb
inc
xchg
les
sbb
dec
xlat
mov
pop
or
mov
aad
fbstp
pop
cmp
push
hlt
jmp
call
lods
ret
iret
imul
sbb
cs
mov
mov
inc
push
retf
call
fwait
mov
pop
in
invd
outs
cmps
imul
(bad)
rep
mov
push
mov
mov
sub
or
aaa
jb
or
call
cmps
or
jg
mov
dec
fldcw
jp
sar
test
xchg
pop
int3
test
cmps
sbb
xor
out
out
sbb
das
mov
add
mov
in
dec
mov
sub
mov
dec
loopne
lock
ja
loop
imul
jb
stc
inc
mov
add
mov
test
dec
add
pop
pop
pop
jmp
ret
cmp
sub
mov
in
jnp
cwde
loope
push
(bad)
cmovae
jg
std
cli
in
mov
jae
xor
jmp
je
outs
mov
adc
test
xchg
mov
into
jb
xchg
test
jae
sub
dec
stos
call
push
mov
and
push
add
mov
mov
sub
adc
push
mov
icebp
mov
pop
xchg
mov
sti
push
and
push
pop
fwait
in
xor
dec
xchg
aad
sbb
cmp
inc
imul
enter
(bad)
xchg
and
aam
lock
inc
cmp
push
mov
mov
adc
sbb
idiv
pop
mov
xor
inc
sub
dec
dec
adc
cdq
mov
cmp
cld
push
js
mov
or
retf
sahf
lahf
mov
(bad)
xor
das
ror
(bad)
dec
ins
pop
inc
sub
push
push
js
pop
jge
and
adc
xchg
pusha
stos
je
ret
test
pop
xlat
pop
ins
scas
ins
sbb
cmp
addr16
inc
sbb
push
adc
scas
test
cmp
xchg
mov
mov
stc
push
mov
sbb
jmp
inc
cmp
xchg
je
popa
call
clc
push
mov
add
fcmovnu
stos
loopne
aam
xchg
dec
adc
loope
shl
sbb
fiadd
sbb
mov
ds
dec
scas
hlt
mov
test
push
nop
xor
or
add
es
ds
adc
icebp
out
dec
jp
or
or
lods
push
jl
(bad)
ss
mov
adc
sub
outs
inc
xor
cdq
fistp
(bad)
jne
loope
scas
pop
ret
adc
rep
pop
(bad)
mov
out
int
inc
cwde
mov
inc
or
rcr
call
into
xchg
les
xchg
cld
call
lock
daa
fidivr
stos
loope
and
inc
cmp
scas
int
jnp
std
adc
add
(bad)
scas
iret
dec
pushf
mov
inc
mov
nop
cwde
int
(bad)
dec
xchg
or
gs
cmp
adc
dec
mov
stos
rol
std
(bad)
xor
dec
shl
in
xchg
pop
cmps
xlat
fld
and
dec
jge
push
js
mov
xlat
dec
sahf
fldenv
sbb
mov
inc
mov
rol
cmps
std
(bad)
jp
imul
call
sbb
outs
push
iret
data16
nop
retf
adc
addr16
sbb
cmps
inc
dec
repnz
outs
imul
sub
push
retf
ret
xchg
sar
(bad)
cs
mov
sub
out
jle
or
fyl2x
sahf
jge
xor
push
fisttp
xor
gs
mov
in
movs
and
inc
pop
fcmovb
icebp
fs
xor
xor
ds
dec
ficomp
loope
or
xchg
movs
cwde
mov
(bad)
mul
inc
jmp
adc
(bad)
loop
cmc
hlt
sub
call
pushf
adc
xlat
sbb
mov
sbb
mov
mov
push
inc
lods
movs
sub
adc
hlt
and
cmp
cmc
sub
fdivr
out
cmp
stos
xchg
mov
xchg
setge
idiv
mov
jg
xchg
(bad)
outs
fisub
jb
jmp
ins
xor
xor
jge
cs
push
jmp
icebp
jne
adc
lods
arpl
adc
das
dec
dec
adc
mov
lods
repnz
ins
fcmovnb
shl
pusha
pop
pop
jmp
sub
push
ss
fldenv
call
push
pop
lea
(bad)
into
mov
adc
shr
sbb
jno
mov
pop
push
add
push
scas
adc
cmp
cmp
cmps
jg
sbb
loope
push
push
icebp
(bad)
js
fbstp
repz
jecxz
adc
or
sub
icebp
ins
push
mov
mov
mov
xchg
sahf
(bad)
stc
repnz
cmp
rol
push
cmp
dec
adc
int3
and
ins
mov
std
xchg
sub
ret
shl
dec
fwait
xor
dec
enter
dec
mov
xor
or
test
ror
jge
dec
les
xlat
test
or
daa
xchg
cmp
addr16
enter
out
xchg
mov
ss
xor
mov
int3
add
dec
cs
fs
xor
sbb
mov
outs
(bad)
movs
(bad)
jl
add
stos
into
xor
cmp
(bad)
cs
cmp
into
push
popa
inc
add
movs
fcomp
in
in
mov
fisubr
add
xor
jmp
pop
pop
aad
cmp
mov
xchg
call
jge
push
jnp
or
adc
stos
(bad)
jl
cmps
pop
repz
mov
cmp
push
mov
inc
ret
lock
iret
cmps
ds
push
inc
mov
and
push
ja
xor
outs
inc
adc
shr
(bad)
xchg
mov
pop
aas
mov
jmp
jne
mov
inc
das
or
add
cmc
gs
arpl
lods
adc
movs
xor
and
aam
inc
mov
mov
aad
add
inc
xor
add
lods
xor
lods
adc
(bad)
pop
scas
cmps
add
adc
in
push
aas
ins
inc
adc
jno
pop
lahf
or
cdq
(bad)
icebp
aad
dec
call
mov
fisttp
mov
or
jns
inc
fcmovu
push
int
xchg
cdq
aad
scas
add
add
adc
iret
aad
xchg
stos
mov
rcl
(bad)
call
inc
scas
push
add
and
pop
or
mov
mov
jge
add
sbb
dec
in
mov
jb
je
sbb
retf
das
and
dec
or
stos
maxps
jmp
pop
enter
or
sbb
test
sti
bound
sub
out
xchg
inc
outs
ins
fist
mov
data16
jecxz
ds
aas
push
jne
inc
(bad)
mov
mov
adc
push
or
inc
cmp
mov
cdq
enter
fs
dec
push
mov
dec
mov
frndint
ins
stos
pop
jbe
lock
int3
sub
adc
int3
mov
les
pop
cs
jno
outs
and
mov
fmul
test
dec
pop
sbb
xchg
mov
repnz
xchg
mov
pop
push
inc
mov
xchg
out
xchg
or
call
test
xor
mov
sbb
je
ja
(bad)
push
les
pop
push
xchg
daa
add
jmp
std
imul
in
mov
aas
xor
add
mov
push
jns
data16
test
push
repnz
mov
arpl
daa
gs
imul
and
retf
sbb
enter
rol
retf
jle
aaa
mov
mov
dec
pop
mov
popa
outs
sar
jecxz
push
pusha
fldz
call
int
mov
push
(bad)
out
pop
push
xlat
mov
cmp
enter
movs
push
fnstenv
ret
mov
cmp
or
mov
loope
sahf
fcmovnb
add
sub
push
and
loope
jo
fs
fcomp
ins
(bad)
pop
mov
call
mov
mov
or
fcomp
(bad)
out
and
push
xor
jle
mov
mov
jle
lock
scas
cli
sbb
lea
cwde
push
cmp
clc
repnz
call
xor
popa
mov
iret
cmps
loope
dec
scas
es
jg
adc
out
and
jge
jbe
xchg
popa
xor
(bad)
jae
cld
pop
push
ror
jmp
jecxz
imul
in
stos
dec
nop
dec
mov
and
sbb
jp
dec
das
adc
(bad)
pop
aaa
out
rol
clc
mov
icebp
fdiv
jg
sbb
adc
push
jp
lock
and
mov
sbb
jle
into
test
jne
cld
xor
sub
push
jb
sbb
inc
pop
pop
push
xor
test
mov
bound
(bad)
cli
xchg
dec
scas
pushf
mov
repnz
call
pop
loop
inc
xor
sub
arpl
shl
add
push
jmp
movs
cmc
jge
push
fisub
lea
inc
mov
add
in
xchg
in
jnp
call
mov
sahf
sub
xor
shr
icebp
push
sub
ret
inc
cli
rol
push
(bad)
popf
repz
cld
xor
push
pop
repz
ret
imul
jmp
mov
loopne
ret
fisttp
push
xor
adc
lods
or
cmp
out
xchg
jg
xchg
fst
aad
idiv
xchg
inc
sbb
xchg
sbb
nop
shl
or
pop
sbb
fld
jl
into
adc
fstp
mov
mov
xor
test
cmp
outs
mov
je
sub
cli
adc
push
push
add
or
call
cmp
daa
mov
lods
imul
les
or
cmovae
fmul
push
lds
paddw
daa
popa
ret
(bad)
mov
outs
push
xor
test
jle
out
call
sbb
adc
cld
gs
pusha
aad
and
cli
les
stos
or
xor
push
cmp
pop
xor
pusha
ds
dec
hlt
das
adc
xchg
bound
dec
enter
push
inc
icebp
add
fs
pop
sub
push
scas
push
cmp
dec
add
add
add
add
add
ror
mov
jmp
sbb
jmp
adc
in
xor
ror
sub
sbb
lea
neg
xchg
push
neg
sub
inc
push
imul
not
push
xor
jmp
int
out
call
push
dec
inc
push
push
inc
push
inc
pop
inc
push
inc
push
push
and
data16
popa
jb
add
rol
lock
sar
sub
add
fsubr
js
adc
or
call
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
lds
add
push
push
call
call
neg
jmp
mov
not
jmp
cmp
test
add
test
jmp
stos
outs
xchg
call
sub
neg
sbb
jmp
iret
test
lock
jmp
and
dec
mov
add
push
push
call
call
and
jmp
or
add
leave
ret
imul
jmp
push
inc
xor
mov
adc
add
jmp
inc
leave
ret
dec
sbb
imul
jmp
xchg
sub
xor
leave
ret
adc
lea
adc
jmp
and
imul
push
xchg
dec
not
push
imul
dec
call
push
dec
inc
push
push
inc
push
inc
pop
inc
push
inc
push
add
jne
sub
push
dec
add
sbb
jmp
imul
adc
xlat
add
dec
call
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
shl
ror
scas
lock
call
push
push
call
call
add
xchg
mov
push
or
jmp
and
fld
add
adc
jmp
cmp
rol
jne
add
push
or
or
not
push
call
push
push
call
call
dec
mov
or
inc
sub
jmp
sar
ret
xchg
or
neg
or
jmp
jl
fbstp
rol
nop
add
add
in
in
and
push
push
neg
or
jmp
push
iret
pop
push
neg
jmp
repnz
push
pop
and
imul
xor
push
adc
neg
sub
pop
and
mov
adc
lea
not
mov
xor
add
add
dec
jmp
jnp
adc
add
add
fnstcw
fidiv
imul
dec
xor
xchg
or
jmp
push
xchg
pop
pop
pop
leave
ret
xor
xor
xor
not
dec
push
sbb
dec
adc
jmp
push
lea
xchg
not
push
add
xor
sbb
movzx
mov
mov
inc
sub
and
jmp
arpl
neg
cmp
je
sbb
or
jmp
push
mov
add
add
lock
add
not
adc
jmp
jbe
jno
lods
inc
or
and
and
xor
imul
or
sub
xchg
xor
not
xor
sub
xor
adc
not
jmp
jne
jne
or
sub
sub
jmp
mov
jne
jmp
imul
or
or
jmp
call
and
not
jmp
sub
or
and
mov
dec
pop
pop
pop
leave
ret
dec
sbb
and
jmp
push
mov
sub
push
push
push
and
neg
not
jmp
aad
test
inc
cmp
xor
add
mov
not
jmp
cli
test
inc
or
jge
mov
imul
and
mov
sbb
mov
jmp
les
mov
dec
hlt
inc
neg
add
jmp
push
cld
mov
add
xchg
imul
mov
mov
add
jmp
push
jb
inc
xchg
dec
or
not
mov
imul
sbb
shl
dec
adc
sub
add
and
mov
sbb
sub
or
add
not
inc
xor
xchg
and
sbb
neg
jmp
stos
mov
mov
xor
sbb
jmp
push
int3
or
add
neg
or
jmp
sbb
rol
dec
and
xor
and
add
jmp
enter
int3
adc
adc
cmp
jne
inc
xchg
jmp
mov
cmp
jne
dec
mov
not
mov
sbb
jmp
jnp
mov
jne
dec
mov
imul
add
mov
xchg
jmp
ja
dec
rol
mov
dec
adc
neg
imul
mov
add
add
mov
or
inc
mov
sub
add
inc
mov
dec
jmp
cmp
sub
xchg
pop
pop
pop
leave
ret
xor
or
cmp
jne
xor
mov
sub
xor
add
inc
xchg
pop
pop
pop
leave
ret
push
mov
sub
push
push
add
adc
imul
jmp
in
pop
or
inc
test
add
mov
and
jmp
dec
pop
iret
mov
imul
dec
cmp
je
mov
jmp
out
push
sub
neg
imul
xor
not
and
add
jmp
sub
sti
mov
sub
mov
sbb
rol
inc
sub
xor
sub
add
mov
imul
inc
or
dec
mov
not
neg
inc
inc
neg
xor
jmp
sbb
not
sbb
jmp
or
pop
pop
leave
ret
push
mov
sub
or
mov
jmp
lock
mov
add
imul
lea
sbb
jmp
inc
daa
call
(bad)
jmp
or
sub
add
add
jmp
pop
cli
mov
inc
and
imul
jmp
cli
inc
or
mov
and
ret
neg
inc
dec
push
call
push
push
call
call
sub
imul
sbb
jmp
outs
loope
cmp
je
not
jmp
fnstsw
jge
sbb
and
fild
sbb
push
hlt
and
cmp
je
mov
or
jmp
sbb
dec
neg
dec
neg
mov
not
sbb
add
jmp
daa
leave
ret
inc
add
xor
and
neg
not
leave
ret
push
mov
sub
mov
sbb
inc
adc
jmp
outs
mov
(bad)
push
shr
push
push
cmp
jne
mov
neg
xor
jmp
sbb
cli
(bad)
jmp
(bad)
or
cmp
jne
imul
neg
jmp
out
sbb
add
dec
jmp
mov
(bad)
inc
jmp
add
test
sbb
push
sbb
jmp
pusha
cli
shr
mov
(bad)
jmp
int3
test
push
call
call
imul
mov
adc
push
inc
mov
lea
and
imul
and
push
xchg
or
push
not
not
push
call
push
push
call
call
neg
imul
push
xchg
imul
push
xchg
mov
push
imul
jmp
shr
push
imul
neg
jmp
jne
xchg
dec
and
jmp
imul
add
add
pop
lea
not
push
not
imul
dec
push
call
push
push
call
call
adc
neg
not
cmp
jne
or
sub
neg
leave
ret
mov
sbb
mov
jmp
repnz
mov
not
inc
inc
jmp
pop
push
neg
dec
push
add
xchg
or
jmp
imul
shr
sar
jmp
xchg
in
pop
push
call
call
dec
imul
sbb
mov
sub
sbb
sbb
jmp
out
push
sbb
push
inc
push
adc
imul
push
xchg
sub
push
call
push
push
call
call
add
mov
dec
and
sbb
jmp
aaa
push
push
mov
lea
xor
xchg
and
push
neg
push
not
adc
jmp
add
xlat
push
mov
push
or
jmp
jbe
retf
shr
add
(bad)
jmp
out
push
cmp
gs
(bad)
(bad)
call
imul
adc
jmp
mov
push
mov
jmp
in
mov
lds
(bad)
jmp
sbb
cli
(bad)
(bad)
call
and
add
jmp
xor
mov
add
and
or
mov
imul
neg
and
jmp
cmc
jo
lea
xor
not
not
jmp
pop
or
ret
imul
rol
mov
neg
add
sbb
xchg
stos
dec
jmp
call
mov
cld
(bad)
dec
lea
dec
rol
in
inc
add
add
fmul
call
clc
jmp
pop
or
sbb
sbb
mov
or
cmp
jne
xor
and
dec
add
xor
jmp
dec
sub
mov
imul
sbb
inc
sub
sub
cmp
jne
imul
jmp
xor
neg
dec
sub
dec
jne
xchg
sbb
neg
jmp
imul
dec
jmp
adc
pop
mov
adc
mov
adc
jmp
(bad)
inc
and
adc
jmp
xor
not
not
xchg
mov
xor
imul
mov
xor
add
jmp
stos
add
or
and
imul
xor
adc
add
mov
dec
jmp
jg
mov
add
sbb
add
jmp
and
xor
xor
add
sub
or
jmp
sub
inc
mov
mov
xchg
add
mov
add
jmp
rol
dec
mov
mov
push
sbb
neg
push
imul
push
or
adc
jmp
shr
dec
(bad)
jmp
mov
popa
push
sbb
add
xor
push
inc
push
adc
jmp
pop
adc
add
fisubr
lds
(bad)
jmp
call
es
call
call
or
jmp
jae
mov
adc
jmp
loop
lods
lea
xor
neg
push
not
dec
push
imul
push
inc
adc
or
push
xchg
add
jmp
std
ins
sub
mov
cld
(bad)
call
(bad)
call
add
cmps
pop
call
push
push
call
call
sbb
cmp
jb
inc
xchg
not
cmp
je
sub
mov
imul
push
or
sbb
jmp
pop
cmp
lds
(bad)
jmp
sbb
push
call
call
mov
inc
xor
jmp
xor
xchg
imul
inc
and
push
inc
or
push
add
inc
jmp
jnp
push
sbb
or
xchg
jmp
dec
jg
retf
shr
mov
(bad)
jmp
cld
xor
call
call
adc
mov
push
mov
mov
jmp
stos
jmp
lea
inc
jmp
popa
push
and
mov
dec
jmp
mov
cmps
pop
call
push
push
call
call
imul
and
not
push
mov
lea
or
push
or
mov
push
call
push
push
call
call
and
inc
push
call
push
push
call
call
inc
sub
mov
inc
mov
inc
lea
mov
dec
jmp
loope
push
mov
and
lea
mov
imul
neg
push
and
push
neg
sub
push
sub
adc
add
push
add
imul
push
not
sub
push
sub
adc
jmp
xchg
cmp
cwde
add
add
mov
clc
(bad)
call
mov
or
push
xor
adc
push
call
push
push
call
call
add
mov
sbb
add
xchg
mov
add
neg
or
mov
dec
sub
adc
mov
adc
not
push
neg
or
push
mov
jmp
ror
push
call
push
push
call
call
mov
mov
imul
jmp
and
push
xor
neg
push
or
jmp
aaa
call
add
jmp
xchg
push
xor
adc
xchg
push
sub
neg
jmp
push
not
push
call
push
push
call
call
adc
push
or
imul
mov
and
imul
push
add
neg
mov
jmp
stos
mov
mov
cld
(bad)
push
xchg
pop
cld
(bad)
(bad)
push
sub
sub
push
mov
adc
sub
jmp
leave
push
call
push
push
call
call
dec
and
sub
cmp
je
and
push
mov
mov
push
add
jmp
out
repz
push
call
push
push
call
call
or
mov
sub
jmp
xchg
mov
sbb
xchg
sbb
jmp
dec
cmp
neg
lea
sub
xchg
or
push
sub
mov
xor
jmp
sbb
adc
ror
add
add
dec
or
fiadd
or
(bad)
push
fisub
xchg
inc
cld
(bad)
jmp
or
push
imul
sbb
xor
jmp
sbb
push
not
not
jmp
jg
push
push
sub
sub
jmp
stc
push
call
push
push
call
call
inc
sbb
add
mov
jmp
scas
pop
and
and
dec
jmp
mov
dec
jne
sub
dec
mov
sbb
and
xchg
jmp
pop
lea
xchg
push
adc
push
and
xchg
push
call
push
push
call
call
xchg
add
xor
jmp
xchg
das
mov
mov
and
add
add
push
adc
jmp
dec
push
mov
lea
neg
push
xchg
mov
jmp
cmp
and
sbb
jmp
mov
aam
(bad)
inc
sbb
(bad)
(bad)
jmp
ja
retf
shr
sub
and
or
repnz
(bad)
call
add
mov
not
add
jmp
out
mov
or
and
and
jmp
mov
mov
add
add
(bad)
push
fimul
jmp
jg
lea
inc
push
dec
mov
jmp
pop
push
jl
mov
cld
(bad)
push
fucomi
add
mov
(bad)
jmp
inc
jp
push
call
call
inc
push
add
dec
and
push
call
push
push
call
call
sub
imul
xor
jmp
or
add
sbb
jmp
xlat
jecxz
jne
dec
inc
xchg
jmp
bswap
push
dec
not
push
call
push
push
call
call
xor
push
add
jmp
repnz
call
push
push
call
call
or
and
not
jmp
mov
repz
mov
push
out
fistp
add
jp
push
retf
mov
xor
mov
popf
mov
icebp
mov
cwde
mov
pop
mov
nop
ja
dec
cwde
mov
jp
mov
inc
or
jns
lea
add
ror
popa
ja
xchg
loop
loopne
sub
ins
or
jnp
or
add
adc
lahf
inc
xor
mov
mov
fistp
or
mov
or
jg
adc
call
sti
xor
test
push
sti
out
mov
or
xchg
loop
dec
mov
stc
iret
ror
into
mov
add
cmp
int3
mov
imul
data16
inc
push
shl
mov
icebp
jno
adc
inc
sbb
fs
mov
aas
(bad)
xor
outs
test
inc
mov
movs
retf
fnsave
jns
test
xchg
fcom
sbb
push
repz
test
call
xchg
pop
test
call
mov
or
mov
cmp
imul
mov
loop
call
in
push
fbld
or
fdiv
je
jns
ss
in
inc
das
test
fst
leave
push
aam
out
clc
and
and
stos
xchg
push
pop
jmp
in
jns
jb
ins
mov
push
mov
ja
fld
mov
adc
mov
push
ja
sub
cwde
jecxz
hlt
out
xor
or
aad
out
jg
dec
adc
retf
xor
xor
mov
push
lods
jo
mov
rcr
(bad)
mov
retf
in
inc
mov
(bad)
pop
and
inc
push
fadd
pop
fidiv
mov
adc
gs
pop
fidivr
mov
rol
nop
adc
out
das
sub
push
cld
jecxz
and
and
call
iret
or
(bad)
cli
(bad)
rcr
mov
fbld
(bad)
bound
xor
and
cdq
movs
mov
xor
cwde
sbb
pop
nop
pop
out
adc
fiadd
pop
cmp
jecxz
int
shl
ins
test
frstor
std
mov
jp
cmc
dec
xor
idiv
in
cs
sahf
push
icebp
ficomp
scas
jge
mov
scas
inc
cs
pusha
push
xor
cld
lahf
sahf
cmp
or
fsubr
mov
hlt
sub
retf
outs
aad
push
jne
lea
jl
mov
mov
dec
jae
shld
add
ss
mov
dec
inc
mov
fiadd
inc
cmp
mov
or
push
pop
jg
cmp
iret
push
sub
repnz
sbb
add
jmp
stc
cdq
mov
jp
loope
loopne
stos
sub
inc
data16
inc
lahf
imul
adc
inc
aad
cmp
je
add
int3
idiv
pop
or
repz
ret
aad
xchg
push
dec
jmp
adc
pop
dec
cmc
loop
ret
xlat
jno
jo
adc
and
xchg
in
mov
fistp
outs
int3
adc
aaa
mov
adc
adc
push
mov
mov
mov
pop
mov
mov
scas
jg
jecxz
mov
add
xchg
test
dec
stos
retf
cmp
fdiv
xchg
cmp
sbb
xor
add
les
mov
pop
ins
push
dec
ja
loopne
add
sub
jns
fs
mov
jp
push
dec
mov
in
push
push
nop
arpl
dec
jb
sub
lahf
loope
sub
push
je
and
jl
jge
ret
jmp
lahf
xchg
xor
push
xor
jmp
xchg
aam
bound
int3
nop
lods
mov
mov
shl
lahf
adc
pop
mov
test
das
or
push
and
mov
rol
xchg
mov
jno
mov
jmp
push
cmps
mov
pusha
loopne
repnz
adc
aam
neg
ja
push
fidivr
xchg
adc
sub
arpl
in
pop
out
stc
retf
xchg
jo
test
mov
sahf
ja
cmp
stc
imul
movs
shl
pop
xchg
scas
aaa
gs
pop
fs
outs
adc
aad
xchg
ins
push
shr
mov
jmp
cmp
add
clc
imul
dec
punpckhwd
sti
ins
mov
xchg
pushf
je
cmp
(bad)
mov
fwait
mov
test
ins
mov
aam
add
lods
pand
aas
xor
enter
jno
ror
daa
int
test
dec
ret
push
stos
out
mov
movs
xchg
push
adc
movs
lds
or
jecxz
rcr
popf
mov
leave
jmp
or
push
or
and
in
push
ins
xor
jl
mov
cmps
loope
pop
call
push
dec
cmp
sub
sub
pop
jecxz
add
shr
in
xchg
sub
fnstcw
call
push
(bad)
dec
aam
popa
stos
fmul
in
lahf
and
or
pop
cmp
and
rol
(bad)
cmp
push
adc
pop
mov
arpl
icebp
pop
movups
cld
jo
or
imul
xchg
jnp
sub
push
ror
cmp
icebp
retf
js
jg
mov
sub
jae
cmp
and
test
xchg
aad
movs
jge
(bad)
test
mov
cdq
aam
(bad)
out
push
dec
or
jp
sub
push
in
lods
mov
lock
scas
xchg
dec
lods
xor
jg
aam
push
pop
lds
jge
out
or
out
adc
sub
inc
fsub
stos
push
xor
add
test
cmc
push
dec
rcl
inc
jne
fidivr
cmp
sbb
das
add
pop
cmp
hlt
xor
jbe
div
in
loope
sub
sbb
and
or
xchg
or
out
mov
ja
xchg
xor
pop
xlat
es
mov
aad
pop
mov
pop
cdq
add
sub
pop
cmp
inc
xor
mov
shr
pop
jns
mov
push
(bad)
pop
jle
dec
rcl
je
add
and
add
repnz
lock
ficom
xor
clc
mov
sub
xchg
adc
dec
jge
in
or
push
mov
sahf
int3
or
loop
sbb
fisubr
les
sbb
push
js
xchg
scas
sahf
movs
cld
push
movs
ins
dec
iret
stos
jg
xor
mov
xor
sbb
cmps
ror
sbb
xor
fsubr
adc
imul
cmp
in
ja
xor
xor
(bad)
push
ja
iret
sub
sbb
ja
fidivr
not
sar
std
push
xchg
imul
dec
jmp
jmp
mov
push
sub
push
and
cs
add
inc
(bad)
(bad)
jmp
ss
push
pusha
sub
loopne
imul
hlt
jnp
mov
jne
mov
jmp
xlat
ins
add
mov
(bad)
mov
aam
or
in
mov
add
cli
dec
jnp
jnp
inc
fsubr
scas
sbb
dec
sbb
push
leave
(bad)
xor
rol
lahf
xchg
imul
out
pushf
mov
pop
lods
jbe
jg
mov
in
pop
add
add
repnz
pop
push
pop
jae
inc
and
cmps
adc
out
mov
gs
lahf
dec
inc
in
push
jno
hlt
push
mov
out
adc
mov
xlat
jne
sbb
push
icebp
arpl
imul
popf
push
xor
inc
push
stc
test
dec
add
inc
push
push
cs
jg
jmp
sahf
bound
mov
pop
jmp
push
mov
repz
(bad)
pusha
mov
stos
shr
pop
add
test
enter
inc
mov
fwait
xor
shl
sbb
pop
mov
mov
nop
pushf
xchg
shl
inc
(bad)
pop
mov
shl
sahf
push
jle
sub
loope
mov
test
inc
jne
shr
inc
xchg
mov
lock
xor
mov
cmp
in
inc
mov
sub
jl
repz
loop
add
aad
push
arpl
js
(bad)
loopne
out
mov
retf
dec
bswap
jno
pushf
ins
cmp
adc
pusha
jns
and
repnz
shr
ins
inc
(bad)
int3
push
or
mov
(bad)
es
ds
add
add
cs
sub
cmc
out
jo
and
jp
fldcw
neg
xchg
pop
idiv
ja
ds
pop
sbb
lods
mov
xor
bnd
jb
push
ss
mov
mov
mov
loopne
cmp
ror
jp
xor
gs
push
or
iret
arpl
int
(bad)
stos
fidiv
aaa
inc
add
adc
iret
rcr
cld
xchg
cmp
shl
dec
cmps
jg
stc
mov
test
cld
jg
sbb
mov
add
xchg
push
pop
ret
lods
xor
hlt
pop
test
js
dec
cmp
sbb
mov
adc
repnz
cmc
addr16
(bad)
mov
daa
aad
fimul
mov
xchg
cmp
mov
pop
sub
push
push
mov
mov
push
aas
cmp
inc
dec
mov
and
loopne
add
movs
adc
outs
jp
adc
arpl
sbb
(bad)
dec
and
push
aad
ss
pushf
scas
mov
lock
mov
pop
pop
and
sub
stos
pop
push
jne
mov
movs
leave
inc
aas
xchg
jno
ins
xor
ss
sub
and
pop
or
sbb
sar
ja
sbb
popa
sti
cmp
or
xor
push
paddusw
fist
xchg
test
out
sahf
js
(bad)
aad
xchg
aaa
mov
cs
js
loopne
cmp
test
pusha
adc
dec
je
das
rcl
int3
adc
or
leave
outs
xor
(bad)
jle
stos
loope
loop
popa
cmp
inc
dec
fnstsw
lods
mov
xchg
cmps
sbb
jo
push
add
jae
mov
sub
mov
out
ret
jne
ins
cli
add
mov
fild
daa
movs
fmul
bswap
ffree
in
mov
jns
push
aam
loop
inc
aaa
stos
(bad)
push
cs
mov
xor
pop
push
pop
shl
cmp
pop
enter
mov
out
mov
inc
cmp
in
mov
xchg
cmp
sub
add
scas
dec
adc
mov
add
leave
sar
push
push
lods
xor
lods
(bad)
adc
js
mov
lods
mov
jp
inc
shl
mov
int
test
(bad)
out
cmp
inc
cli
retf
mov
ins
xchg
jno
cmp
mov
jnp
int
pop
mov
cmp
xchg
or
rol
cmp
call
sbb
sbb
pop
mov
ret
scas
jo
sub
fwait
xchg
mov
loop
loopne
sbb
xchg
shr
mov
dec
pop
push
dec
add
inc
mov
outs
ret
mov
inc
inc
clc
jge
mov
aam
scas
in
dec
push
inc
ja
pusha
int3
cmp
mov
inc
lds
inc
sbb
mov
cmps
xchg
bound
adc
ja
std
mov
mov
lahf
imul
sar
add
pop
inc
cmp
outs
push
fcomp
cdq
cs
addr16
jl
sar
arpl
push
dec
or
fwait
bound
shl
fwait
daa
outs
jl
fidiv
inc
ins
ror
ja
mov
mov
repnz
imul
jge
nop
arpl
jo
add
rcr
and
push
or
pop
lea
adc
pop
out
add
sub
jp
cmp
or
jl
mov
sub
mov
and
push
add
push
mov
enter
ret
push
dec
gs
sti
sub
jo
dec
inc
arpl
fnstsw
sub
jle
aas
inc
pop
retf
sub
inc
rcr
inc
or
xor
std
cmp
sbb
xchg
jo
jg
and
mov
cld
sbb
aas
clc
mov
rcr
mov
sbb
shl
inc
(bad)
adc
out
cmp
les
mov
mov
fnsave
dec
call
dec
mov
add
mov
push
push
xchg
stos
and
mov
add
cld
fisub
int
xchg
scas
shl
sar
jecxz
cmp
adc
fsub
arpl
mov
add
mov
or
cmp
xlat
mov
test
(bad)
push
jnp
dec
and
cmc
xchg
adc
lock
idiv
dec
std
pop
and
retf
jge
pop
es
sbb
rcl
int
push
inc
scas
mov
cdq
mov
push
cmp
popf
stos
fist
or
out
pop
repnz
cmp
imul
scas
and
sub
jmp
punpcklbw
dec
push
or
ins
adc
aad
shr
retf
addr16
ins
dec
sahf
fldenv
mov
les
addr16
aam
adc
xchg
ret
call
jp
leave
idiv
jae
dec
sti
add
dec
stos
sbb
jnp
lahf
(bad)
mov
loope
shl
cmp
sub
jmp
push
sub
int3
mov
mov
dec
cmps
mov
sti
fptan
and
sub
jae
xor
test
cmps
stc
inc
cmp
or
sbb
fcomp
fstp
stos
cmc
mov
jo
inc
xchg
add
std
(bad)
arpl
push
jp
mov
sbb
mov
xchg
sahf
and
mov
mov
mov
and
out
and
or
mov
mov
sbb
cdq
in
call
int
inc
icebp
fwait
mov
repz
xchg
retf
paddusw
xor
dec
lea
jno
mov
stc
dec
outs
addr16
cwde
sub
(bad)
fldenv
dec
arpl
and
sar
inc
mov
inc
sbb
add
mov
clc
rcr
ror
stos
xchg
mov
int3
xlat
xchg
mov
fxch
mov
dec
jg
inc
fild
outs
xchg
xchg
inc
xor
sub
mov
daa
cmps
test
cmp
(bad)
fadd
xchg
push
pop
sub
push
sbb
add
inc
mov
mov
sub
je
paddb
mov
inc
push
ret
dec
(bad)
repnz
fwait
loopne
sub
test
cdq
pop
inc
or
out
mov
xor
shl
mov
and
xor
sbb
mov
dec
sbb
mov
das
lods
mov
jae
iret
loop
adc
mov
stc
sub
cli
into
mov
cmovns
push
icebp
shr
cmp
hlt
xchg
jne
pop
(bad)
mov
test
sbb
ss
das
push
mov
inc
pop
ss
call
pusha
inc
fisttp
(bad)
or
xor
cmp
retf
or
xchg
xchg
xchg
icebp
rcl
leave
xchg
ret
mov
cmps
sbb
pop
stos
or
addr16
xchg
and
pop
ins
mov
scas
xchg
mov
fs
mov
sbb
out
in
in
ds
sbb
push
mov
inc
loop
push
xor
in
xor
retf
and
sbb
inc
loop
xor
outs
gs
xor
mov
dec
nop
push
xor
fadd
mov
cmp
movs
sub
adc
fld
mov
pushf
pop
adc
fsub
(bad)
rcl
ds
add
ja
mov
pop
cmps
sahf
inc
test
jmp
es
enter
cmps
fsubp
popf
(bad)
(bad)
mov
add
mov
ins
pop
and
pop
je
and
movs
lods
je
adc
jns
xor
pop
jb
jb
dec
push
enter
stos
pop
in
fdiv
pop
mov
mov
push
mov
out
push
nop
or
and
fs
xchg
es
push
iret
pop
dec
xlat
shl
ret
xlat
mov
xor
aam
or
xor
dec
push
push
push
add
scas
lods
int3
(bad)
and
clc
fcomp
add
pop
mov
(bad)
mov
mov
ja
xchg
imul
cli
clc
ror
cmc
lods
js
push
shl
fcom
div
jno
xor
pop
push
shr
cmps
(bad)
xlat
retf
neg
add
sbb
and
ror
iret
sbb
adc
dec
mov
pusha
or
cmp
shl
or
mov
addr16
aad
sub
int
push
dec
out
call
and
or
pop
lock
dec
mov
js
rcr
pop
fdivr
fmul
add
xor
cmp
inc
(bad)
fild
mov
dec
mov
sbb
(bad)
sbb
movs
xor
leave
test
(bad)
out
jmp
aam
(bad)
pusha
push
mov
xor
xchg
push
jns
ins
repz
dec
xchg
jg
push
ins
or
or
mov
lahf
fs
fdiv
cmp
je
imul
fadd
daa
jmp
in
pop
adc
(bad)
iret
adc
or
cmp
leave
(bad)
mov
shr
sub
(bad)
mov
push
xchg
adc
jnp
cmp
xor
inc
jl
mov
punpckhwd
jns
or
and
mov
jg
nop
fwait
sbb
jae
cs
fsub
cld
in
add
pop
jmp
daa
pop
xor
sub
shl
or
neg
dec
(bad)
iret
and
push
rol
sub
jecxz
push
es
mov
and
adc
lods
xlat
cmp
or
add
cmp
mov
dec
lods
ins
pop
inc
adc
dec
int
dec
(bad)
pop
dec
mov
adc
int
not
cmc
push
je
ins
sbb
xchg
add
mov
jle
fcmovnb
in
int
cmp
test
mov
push
and
in
(bad)
sti
cld
jle
(bad)
cld
int
neg
xchg
sub
xchg
jbe
cmps
xor
pop
aas
test
imul
adc
aaa
xchg
pop
aaa
jl
push
popa
inc
iret
dec
cmp
sbb
xor
sub
jmp
inc
cmps
xrelease
cmp
cmp
lock
and
mov
fucomp
bound
sub
mov
shl
lahf
xchg
jnp
cdq
shl
adc
and
(bad)
js
and
add
sbb
test
int
adc
retf
test
pushf
push
mov
inc
xchg
pusha
enter
lahf
(bad)
jae
mov
jae
cmp
pop
std
jp
inc
test
sub
test
ret
cdq
inc
mov
and
fsubr
popf
mov
push
rcr
and
push
(bad)
sub
mov
push
jmp
add
imul
sti
push
dec
sub
(bad)
jae
scas
jmp
outs
jl
push
bound
retf
xchg
jbe
dec
pop
dec
nop
loope
stc
push
lods
mov
mov
inc
pop
inc
mov
push
push
clc
pop
sbb
imul
test
add
push
inc
pop
xchg
mov
std
mov
popf
ja
fsub
xor
inc
mov
mov
ret
popa
add
jae
xchg
push
or
mov
dec
inc
push
xchg
es
xchg
xchg
ja
mov
jp
out
xchg
leave
inc
in
repz
pop
xor
dec
fwait
jmp
inc
jge
(bad)
int
adc
cmp
inc
sbb
lock
sub
mov
rcl
jg
pushf
call
mov
scas
jl
dec
add
push
cmp
cmps
sbb
or
jmp
retf
xchg
mov
xchg
sub
gs
sbb
ja
lds
dec
add
xchg
inc
fidiv
mov
test
lods
xchg
pop
pusha
cwde
cmp
sbb
loopne
pop
xlat
cmp
inc
add
cwde
dec
inc
xor
inc
xor
test
test
and
push
in
xor
stos
(bad)
and
xor
(bad)
std
test
test
rol
push
ret
push
aad
(bad)
sar
neg
hlt
test
push
mov
sbb
stos
rol
hlt
cs
adc
jae
mov
fdivr
pop
outs
popa
mov
clc
xor
iret
dec
shl
or
pushf
cmps
mov
sti
and
out
cmp
inc
and
retf
lds
push
cmp
je
pusha
cmp
frstor
sbb
les
fld
cmp
mov
xor
iret
cmp
loope
mov
jnp
jg
sub
jne
mov
nop
mov
(bad)
pop
mov
inc
fcom
push
loope
xchg
mov
imul
shl
daa
xchg
pop
mov
call
jle
fistp
and
and
jp
fmul
add
daa
mov
ss
mov
add
add
stos
inc
dec
loopne
adc
inc
sbb
(bad)
mov
xor
cld
aas
inc
aaa
sub
push
mov
stc
or
jg
xchg
loopne
aaa
pop
mov
inc
xor
js
cmps
or
retf
mov
cwde
pop
ss
mov
outs
jne
push
xchg
fwait
ret
mov
mov
iret
push
push
in
mov
jp
mov
sub
daa
inc
fwait
inc
xchg
sbb
inc
cdq
fst
add
fist
ja
(bad)
fmul
mov
push
or
sub
jb
movs
rol
call
fwait
es
inc
shl
sub
jbe
sahf
lea
cwde
push
sub
dec
pop
(bad)
(bad)
out
out
cmps
mov
inc
and
nop
test
adc
in
jmp
mov
jg
mov
dec
ret
push
and
ss
push
and
mov
push
or
jecxz
into
das
xor
shr
repnz
add
rol
test
cmp
push
inc
imul
jmp
jge
mov
jmp
lahf
adc
push
inc
add
push
data16
jno
int3
and
adc
xor
dec
cmc
pop
in
ss
inc
fwait
mov
repnz
sbb
(bad)
or
push
mov
ror
mov
or
les
and
xchg
xchg
(bad)
fcom
cdq
hlt
xlat
jno
or
dec
mov
xor
out
add
jns
xlat
lds
es
ss
jbe
inc
lods
sbb
jne
push
jne
or
int3
aad
inc
mov
frstor
test
adc
not
add
or
fucomi
sub
ja
sbb
push
xor
mov
pop
sub
xchg
(bad)
cmp
jo
call
lds
(bad)
fst
popf
sbb
xchg
jl
aam
das
mov
cwde
pop
std
xchg
cmp
dec
imul
fsub
xchg
sub
lahf
inc
shr
dec
add
iret
xor
movs
dec
icebp
push
pop
sbb
or
push
(bad)
out
rol
lea
movs
adc
xchg
inc
inc
fmulp
(bad)
pop
sub
ss
jge
sub
mov
out
push
sub
or
add
push
add
cs
in
jno
and
add
dec
mov
xor
stos
jmp
repnz
sti
jge
scas
int3
mov
push
loop
jle
push
or
add
ins
add
xor
stc
xchg
pushf
fsubr
mov
or
or
popa
(bad)
xchg
mov
imul
add
pop
adc
dec
ins
sub
ins
ret
fist
sti
pop
call
push
movs
shl
dec
ins
adc
inc
and
mov
iret
pop
push
stos
or
nop
cwde
aad
out
cmps
xchg
push
xchg
clc
ins
arpl
leave
shl
pop
xor
inc
adc
lahf
and
or
xchg
sbb
nop
and
bound
nop
pop
jmp
cmp
mov
mov
scas
mov
adc
add
lea
inc
xor
icebp
cmp
or
imul
stos
(bad)
xlat
mov
(bad)
jb
sti
test
popa
hlt
jbe
xchg
adc
cld
loopne
pop
push
sbb
das
out
jecxz
mov
xor
add
(bad)
lock
aas
movs
es
fiadd
pop
push
xchg
repnz
aaa
jae
aaa
popf
and
aam
sub
pop
imul
scas
mov
jae
cli
adc
pop
sbb
cmp
lahf
cmp
hlt
cmp
push
mov
daa
lock
sub
push
pop
je
xor
fisub
mov
mov
movs
sub
xchg
sub
es
pop
test
adc
cmp
retf
push
sub
xchg
pop
and
pop
sbb
inc
or
dec
inc
fild
mov
cmps
jae
cmp
jecxz
ret
mov
inc
mov
and
jno
xor
fs
add
jp
pop
xor
cmp
xchg
shl
inc
call
into
loopne
and
push
push
sbb
push
dec
pop
pop
xchg
mov
js
das
jns
jmp
adc
sbb
or
jno
or
daa
enter
outs
ret
pop
loopne
call
inc
stc
mov
ds
repnz
xor
fstp
fisttp
aaa
call
mov
pop
xchg
mov
add
es
pop
pop
cmps
out
mov
adc
js
ja
push
punpcklbw
fwait
call
mov
lea
(bad)
pop
ror
sbb
lahf
cld
cdq
push
int3
enter
popa
push
or
adc
das
sub
ret
(bad)
sub
jge
enter
inc
sbb
cmp
sub
fwait
add
xchg
addr16
mov
dec
shr
or
mov
jo
jg
cs
cmp
in
pop
sbb
enter
out
push
jmp
and
popf
mov
jg
pop
pop
cli
dec
fld
cmps
movs
retw
xor
mov
js
fmul
pushf
adc
inc
sbb
or
div
pop
aam
pop
dec
and
stc
fs
scas
movs
cmps
mov
movs
data16
pop
nop
test
lahf
ds
push
lods
gs
mov
cmp
cwde
inc
dec
into
cmc
fisub
push
fwait
loopne
(bad)
cld
lock
test
xchg
das
sahf
cmp
icebp
mov
and
or
js
inc
aad
xor
rol
inc
jbe
ins
xlat
sub
scas
shr
and
sub
fucom
(bad)
loopne
pop
mov
rcl
add
cs
(bad)
in
dec
inc
lods
dec
mov
jp
or
loopne
shr
sub
sub
hlt
les
jmp
in
iret
(bad)
out
xor
sahf
ror
shl
imul
xchg
inc
add
jle
in
xor
neg
cmc
and
sti
xchg
adc
cwde
loope
in
jae
sbb
push
mov
aas
gs
ins
jbe
out
xchg
add
popa
mov
mov
jns
pop
repnz
fwait
rol
ja
jae
add
enter
call
add
adc
sar
fistp
jmp
(bad)
retf
lods
ins
in
cmp
add
and
mov
cdq
ins
sub
pushf
add
leave
into
jp
mov
bound
std
add
sbb
cmp
inc
in
and
ja
call
loop
add
aam
jmp
mov
pop
repnz
ss
inc
push
dec
dec
mov
sub
test
(bad)
push
scas
gs
mov
lock
lock
inc
cmp
mov
mov
cmp
imul
idiv
lahf
pop
xchg
jnp
jb
pop
jae
adc
push
cmp
enter
inc
out
or
mov
in
and
mov
iret
add
push
shl
sub
repnz
das
bound
icebp
data16
push
gs
inc
push
inc
imul
repnz
dec
out
call
cmp
je
push
add
out
int3
arpl
int3
xchg
jmp
dec
sbb
and
cld
xchg
arpl
idiv
iret
fsubr
retf
repz
rcr
jp
xor
xchg
inc
and
push
popf
jmp
mov
jecxz
vphaddbd
jp
(bad)
es
in
push
enter
xchg
cmp
push
pop
pop
icebp
pop
mov
adc
call
stc
ret
dec
cs
outs
mov
arpl
fiadd
and
inc
fnstenv
xchg
pushf
push
inc
mov
outs
add
test
xchg
xor
jl
mov
fwait
call
jp
pusha
lock
mov
js
xchg
jno
and
loopne
cli
pop
or
loopne
int
jle
(bad)
cmc
(bad)
cmp
jecxz
mov
repz
call
fucom
cld
ins
ins
inc
ins
xor
stos
mov
xlat
or
ja
mov
jnp
push
add
mov
jbe
clc
retf
(bad)
jb
mov
pop
jecxz
mov
mov
test
dec
mov
fidivr
fldl2e
add
xchg
sti
stos
or
xor
loopne
cwde
dec
mov
test
pop
pop
xchg
ret
jnp
mov
ss
and
sbb
nop
xor
inc
push
test
imul
sub
movs
sbb
xchg
mov
mov
jns
jae
push
cli
or
movs
adc
fisttp
pop
sbb
in
jp
or
dec
mov
jp
shl
push
xchg
ins
cmp
jns
ret
test
jne
addr16
push
loop
add
cmp
pop
lahf
sub
xchg
jp
in
ficomp
ja
js
pop
fistp
movs
ins
pushf
and
in
push
arpl
and
mov
aas
xlat
mov
retf
push
cwde
(bad)
xchg
test
(bad)
repz
fsub
nop
aas
cld
sbb
lods
call
and
rcr
mov
jo
mov
repz
mov
add
jno
cli
shr
pop
or
repz
inc
jmp
inc
in
cmp
mov
sbb
enter
fdiv
pop
cmp
add
jmp
(bad)
test
sbb
cmps
adc
mov
pop
xchg
inc
rcr
xor
push
or
xor
ins
out
out
xor
je
xchg
and
loope
mov
pop
(bad)
popa
(bad)
cmp
push
imul
mov
outs
jge
mov
jecxz
(bad)
loopne
nop
or
nop
fmul
test
xor
pusha
inc
cmp
lahf
mov
leave
jbe
jns
mov
add
pop
sbb
and
jnp
xlat
retf
stc
push
inc
xor
cdq
aad
rol
arpl
inc
imul
je
je
xchg
clc
xor
pop
mov
push
iret
mov
sub
jge
test
or
or
jl
mov
jge
mov
adc
xchg
jnp
mov
xor
pop
inc
xor
ja
ds
stc
aam
out
adc
sub
ins
jnp
je
outs
inc
aas
lahf
xor
push
leave
psubsw
sub
cli
jg
mov
mov
(bad)
cld
cmp
(bad)
inc
sbb
cmp
scas
or
fisttp
xchg
fild
dec
fwait
bound
mov
lds
dec
jmp
sar
sub
das
xlat
(bad)
mov
mov
xchg
ret
pop
adc
bound
pop
inc
xor
movs
mov
cli
add
sbb
and
push
es
fld
sbb
test
mov
pop
repnz
xor
cmp
push
cmp
je
popf
lods
xor
mov
xchg
mov
ret
aas
rol
jbe
adc
xor
jb
fsubr
mov
rcl
add
frstor
xor
cwde
cmp
cwde
dec
sbb
mov
mov
and
dec
jnp
ret
cmp
sbb
and
icebp
add
stos
push
push
pusha
adc
es
pop
pushf
sbb
sahf
pop
dec
add
pop
into
mov
pop
pop
cmp
xor
fdivr
ins
mov
xor
mov
push
arpl
mov
cmp
fidivr
sar
push
and
mov
jbe
xor
fdecstp
je
inc
leave
jle
daa
out
mov
sbb
mov
sub
js
xor
jnp
sub
and
inc
sub
sbb
xchg
shr
fwait
inc
push
jne
cmp
nop
inc
aaa
dec
daa
popa
ror
ins
and
and
shr
lods
inc
lds
push
repz
jae
mov
shr
mov
xor
xchg
push
push
jge
sbb
idiv
(bad)
lods
xor
xor
clc
xor
dec
pop
push
(bad)
retf
adc
aam
jne
adc
(bad)
loopne
ret
cmc
outs
mov
out
in
dec
loopne
(bad)
out
mov
ja
dec
xchg
hlt
fmul
mov
pusha
dec
jne
dec
(bad)
push
dec
jo
test
pop
sub
scas
test
sbb
into
or
xor
mov
sbb
inc
cmc
push
lods
data16
jmp
sar
push
pop
imul
dec
stc
test
sub
adc
out
in
sub
and
mov
mov
pop
iret
aad
push
pop
dec
clc
into
dec
outs
cmps
sbb
stos
mov
push
stos
dec
mov
outs
sbb
add
add
push
stc
out
cli
lods
shr
enter
and
in
adc
test
pop
or
add
ja
sbb
mov
cs
mov
lahf
(bad)
inc
cli
push
mov
fimul
jmp
mov
dec
bound
dec
inc
not
push
call
fucomi
xor
out
movs
call
lea
dec
jp
hlt
enter
(bad)
test
stos
popa
mov
popa
mov
and
push
das
movs
outs
mov
adc
push
inc
dec
repnz
jae
dec
pushf
mov
rcr
outs
test
rol
pop
icebp
in
imul
loop
sbb
sbb
ins
pop
ret
and
(bad)
loopne
adc
xor
(bad)
pushf
jge
push
push
imul
shl
(bad)
mov
push
lock
(bad)
sti
mov
pmulhuw
push
int
or
cmp
ja
adc
cdq
push
add
and
cmp
dec
sub
jg
mov
cdq
sub
adc
mov
pop
out
xor
xchg
push
stc
jmp
int3
sub
xchg
xchg
mov
mov
nop
cs
mov
cmp
mov
sub
adc
and
add
pop
mov
dec
jnp
daa
(bad)
jmp
leave
xchg
mov
je
loope
loope
stos
sbb
ins
xor
sub
and
jae
xchg
cld
mov
sub
data16
jle
mov
sbb
xor
lock
push
mov
or
mov
mov
pop
mov
imul
cs
cs
inc
jg
xchg
inc
push
pop
inc
jmp
les
imul
adc
adc
mov
mov
imul
mov
aaa
dec
cdq
xor
inc
mov
mov
popa
jnp
cmp
das
js
enter
arpl
dec
add
idiv
js
jno
adc
sti
push
sub
sub
cmp
lahf
inc
pushf
leave
jp
adc
xchg
sub
dec
jne
push
or
js
loope
dec
cdq
fisttp
sub
fisub
fadd
pushf
rcl
adc
or
mov
inc
cmp
bnd
js
jbe
ficomp
pop
dec
inc
sbb
in
xlat
jecxz
push
or
sbb
sbb
mov
das
jo
retf
jle
jg
cmc
push
ins
mov
push
jge
dec
pop
jmp
adc
mov
cs
xchg
cli
xlat
fsubr
loope
fwait
mov
sub
aas
(bad)
lahf
addr16
call
and
mov
nop
mov
shl
mov
out
test
mov
adc
jbe
push
das
int
sub
cmp
fwait
jns
pusha
int
ret
and
pop
mov
ins
je
mov
stos
mov
test
in
lahf
dec
sbb
pop
ficomp
sub
jne
lods
fchs
and
inc
ins
mov
mov
sub
dec
xchg
mov
or
call
pop
inc
pop
xor
sub
adc
fidivr
sti
aad
popa
jge
in
jae
push
mov
jecxz
jmp
cwde
inc
daa
mov
mov
cdq
or
jae
inc
jb
repnz
fidiv
and
mov
gs
hlt
cmp
dec
mov
push
movs
inc
push
shl
shl
out
sbb
lods
pop
jl
les
or
push
cmps
repz
rcr
jl
cwde
and
inc
sub
xchg
out
push
loopne
mov
and
stc
cmc
adc
xchg
or
outs
inc
repnz
fdiv
mov
nop
stos
mov
aaa
mov
pop
sub
arpl
dec
repnz
sahf
xor
scas
shl
cmp
and
mov
sub
pop
xor
shr
fcmove
icebp
add
daa
retf
das
xchg
push
sbb
mov
pop
clc
sub
cmp
and
add
outs
dec
jmp
sbb
adc
cmp
(bad)
xchg
mov
xor
jae
arpl
push
sub
adc
loopne
loop
cmp
call
mov
inc
mov
mov
cmc
sub
jno
sbb
in
loope
lock
aas
repz
out
ret
cmp
pop
sbb
fwait
mov
(bad)
scas
retf
fistp
popaw
cmc
adc
xor
jnp
jno
loopne
mov
clc
outs
lahf
test
fldenv
mov
(bad)
repz
mov
push
enter
pop
rcr
cmp
cld
mov
and
stos
jne
dec
repnz
or
fmul
pop
cmp
dec
sahf
std
xchg
push
or
mov
adc
mov
pop
jo
das
cmps
dec
pop
and
or
bound
mov
aad
mov
daa
int
int3
and
es
inc
push
adc
xchg
add
xor
mov
or
jecxz
dec
push
inc
popf
xor
push
dec
repnz
dec
iret
push
movs
(bad)
adc
push
dec
shl
mov
icebp
pop
icebp
hlt
dec
nop
lock
pcmpeqd
pop
inc
jo
pop
out
push
mov
or
add
mov
xchg
(bad)
mov
pop
and
out
push
aam
fldlg2
int
hlt
jns
fs
or
xor
mov
dec
pushf
mov
mov
adc
cmps
sbb
ins
push
ret
inc
leave
inc
mov
mov
aas
push
dec
and
jmp
jns
mov
adc
jns
mov
pop
and
movs
add
rol
or
fld
fnsave
in
ror
clc
mov
adc
push
and
stos
out
adc
fnstsw
adc
mov
inc
(bad)
scas
(bad)
fist
and
(bad)
push
das
aaa
(bad)
scas
sub
push
dec
lods
out
mov
in
jmp
xchg
add
fcomp
les
in
xchg
push
(bad)
pop
pop
movs
mov
pop
add
das
aas
xor
add
data16
sub
inc
mov
jns
xchg
retf
push
(bad)
mov
in
jno
jmp
push
inc
cmp
cld
adc
aaa
adc
in
and
and
fcmovb
sbb
out
sbb
xlat
cmp
and
ins
int3
sub
dec
ret
jb
outs
push
sbb
shl
push
lods
lods
into
mov
fmul
inc
adc
jp
fstp
sbb
in
add
stos
or
pop
push
dec
dec
push
sbb
mov
ja
data16
test
xor
jg
cmps
xchg
les
lock
xor
pop
popa
jecxz
ja
enter
ins
ror
je
xchg
add
push
iret
iret
(bad)
fdiv
lods
cdq
in
mov
dec
inc
es
jl
jbe
dec
idiv
ins
mov
mov
sbb
or
jnp
lea
(bad)
out
dec
sbb
adc
xlat
cdq
sbb
or
mov
add
sbb
fadd
out
push
out
shl
js
sbb
call
cld
jno
jb
sbb
pop
call
js
movs
jge
push
or
(bad)
sbb
ss
dec
retf
mov
xor
mov
sti
xlat
sub
imul
js
sub
inc
xor
sbb
xchg
clc
movs
mov
fsubr
adc
xchg
inc
mov
bound
ins
xor
inc
sti
push
ror
(bad)
lock
mov
(bad)
jns
and
adc
inc
movs
(bad)
xor
add
pop
inc
out
adc
mov
out
cmp
cmp
retf
sbb
cmc
(bad)
mov
xlat
pop
cli
or
push
and
jp
xor
xor
mov
xchg
inc
cmp
repz
(bad)
in
out
mov
and
aad
cld
repnz
loopne
in
push
mov
loopne
jecxz
cmp
adc
dec
push
ins
dec
ficom
dec
and
push
pop
xor
test
and
imul
and
inc
call
and
lods
push
shl
or
(bad)
mov
mov
sub
ret
xor
sub
mov
shl
leave
or
loopne
push
cwde
jo
in
fdivrp
push
out
xchg
int
scas
push
sub
imul
data16
xchg
dec
inc
test
mov
and
ds
repnz
lahf
sub
ins
and
les
xor
xor
stos
pminsw
outs
test
mov
mov
sub
pop
push
inc
call
fisubr
cmc
test
movs
mov
scas
repz
cs
dec
mov
jp
mov
mov
sahf
or
and
out
push
cmc
in
or
push
lods
xor
out
nop
or
xchg
sbb
call
add
fild
xchg
loope
mov
dec
dec
cmc
gs
stos
mov
inc
add
jle
jns
pop
shl
push
fsubrp
cmp
js
jbe
adc
mov
adc
sbb
or
cli
retf
add
in
stc
(bad)
retf
mov
in
bound
sub
xchg
mov
scas
cmp
jbe
mov
or
xchg
inc
cmps
addr16
pop
inc
jle
pusha
int
mov
jg
or
jno
stc
sub
(bad)
xor
les
stos
jle
mov
jbe
shl
inc
jmp
cmps
(bad)
lods
fcmovbe
ins
hlt
xlat
mov
mov
inc
push
pushf
out
std
jnp
dec
mov
xor
mov
lock
jle
mov
add
add
outs
les
jns
jle
push
aam
test
pushf
mov
xor
gs
js
aam
dec
cs
sub
add
xchg
call
inc
mov
scas
add
icebp
jmp
inc
mov
mov
arpl
outs
dec
sar
js
mov
or
js
movs
sub
mov
jge
pop
mov
pusha
xor
pop
jmp
mov
mov
jecxz
call
fist
dec
xchg
sbb
aas
aaa
mov
mov
xchg
test
stc
retf
and
enter
aaa
jno
cmovg
cmp
mov
add
xchg
cmp
dec
stos
fstp
in
gs
xchg
pop
cmp
xor
out
add
loope
enter
add
add
dec
movs
bound
sub
or
pop
imul
imul
mov
pop
dec
pop
dec
test
arpl
cs
sbb
(bad)
fistp
mov
pop
adc
popa
scas
push
aas
mov
dec
inc
shl
or
movs
(bad)
leave
and
xchg
xlat
stos
lock
cmp
lds
stc
ins
xchg
inc
mov
fimul
xor
nop
inc
imul
cmp
inc
xchg
inc
ja
cld
in
dec
icebp
fst
imul
in
mov
adc
or
lods
mov
out
pop
sar
jp
jle
movs
das
retf
repz
retf
sub
pop
int3
into
sar
ds
jns
ret
(bad)
mov
cmp
aad
pop
ss
(bad)
push
push
out
cmp
out
cmp
pop
movs
ins
xchg
mov
or
scas
scas
test
div
jp
sbb
jnp
(bad)
mov
xchg
xor
jo
jecxz
out
aam
mov
xchg
xchg
mov
xlat
jo
(bad)
repnz
je
inc
mov
popa
jo
pusha
adc
hlt
sti
test
push
out
test
jg
fnstsw
push
in
retf
iret
cli
into
pop
xchg
jb
daa
aam
(bad)
std
jl
push
or
mov
fadd
lds
rcl
stos
xor
sbb
pusha
adc
in
mov
pusha
mov
mov
lods
add
pop
jmp
push
fistp
rcl
dec
sbb
xchg
jno
inc
les
dec
jo
sub
mov
push
iret
mov
xor
pop
add
xor
jbe
loopne
or
cli
cmp
mov
cmps
mov
jle
dec
add
retf
jg
xchg
movs
into
jbe
movs
es
mov
xor
adc
mov
(bad)
jl
popf
xor
clc
fisubr
iret
adc
mov
popa
retf
add
sbb
mov
push
fidiv
inc
jl
dec
sbb
dec
inc
ss
fs
ficomp
cmp
cmp
push
pop
sbb
test
jle
sub
pop
dec
jb
cmc
push
push
mov
mov
int
dec
jg
addr16
repnz
mov
jle
fwait
jb
add
jmp
pop
mov
pop
jg
mov
pusha
pop
inc
inc
shr
hlt
(bad)
jno
ror
cmp
loop
cmc
pop
and
adc
cwde
sahf
js
pop
ds
cdq
push
pop
mov
and
fsubr
xchg
xchg
(bad)
aas
outs
push
sub
sub
scas
pop
mov
int3
fist
cld
(bad)
mov
mov
xchg
fnstenv
cmps
jl
scas
in
mov
mov
push
pop
push
mov
sahf
fstp
sahf
ror
and
fsub
sbb
out
cdq
imul
xchg
xchg
pop
mov
mov
jp
addr16
and
pop
pop
ror
pushf
scas
dec
push
xchg
int3
mov
lea
cdq
mov
cmp
pop
bound
cmp
xchg
ficomp
push
out
or
out
jb
sub
fcmovbe
mov
lods
mov
push
add
inc
out
sbb
mov
mov
rol
scas
imul
pop
dec
out
in
imul
cli
push
mov
jmp
pop
repz
mov
xor
and
xchg
ja
test
(bad)
pop
mov
adc
cmp
jae
or
jns
add
jno
xor
jecxz
sbb
popf
aas
jp
mul
add
test
push
dec
xor
sbb
cld
sbb
jno
retf
cwde
and
popf
cwde
(bad)
out
ror
xchg
nop
dec
inc
call
idiv
shl
fnstcw
cld
sbb
pop
aad
pop
or
jb
out
out
push
push
mov
jne
pusha
xor
add
sub
cmp
aam
mov
daa
scas
pop
stc
nop
das
jbe
or
mov
push
jecxz
mov
pushf
cmp
dec
dec
cmp
push
retf
jo
bnd
arpl
hlt
test
inc
(bad)
jge
out
call
or
add
xchg
daa
jnp
and
test
jp
jecxz
imul
sub
adc
xchg
(bad)
mov
jae
imul
xchg
pusha
fdivr
ins
jns
(bad)
(bad)
ins
adc
xor
test
dec
arpl
add
ins
out
(bad)
adc
int3
aam
sbb
mov
dec
push
aas
dec
jmp
test
cmp
gs
gs
call
stos
push
sbb
pop
sbb
(bad)
and
mov
lods
test
or
mov
push
pop
inc
dec
rcr
gs
dec
or
arpl
les
iret
adc
xchg
xchg
jp
cdq
dec
push
dec
repz
mov
enter
std
das
nop
test
jmp
in
dec
es
arpl
xchg
pushf
or
cli
bound
adc
inc
scas
jg
pop
nop
add
adc
sbb
jne
iret
jns
in
(bad)
fsubr
cwde
nop
(bad)
pop
dec
mov
sub
mov
adc
aad
shl
movs
(bad)
mov
div
mov
sbb
mov
shl
stos
adc
int
push
xor
cmc
dec
adc
dec
scas
pop
xchg
int3
mov
inc
inc
adc
jbe
ins
mov
test
inc
loope
sub
push
mov
xor
out
outs
shr
test
mov
(bad)
xchg
pop
add
icebp
jo
loopne
and
xchg
jo
push
mov
test
icebp
xchg
nop
and
addr16
mov
stc
cmp
mov
movs
shl
jns
lds
pushf
add
imul
xlat
fcomp
in
retf
mov
jmp
sub
jne
jmp
jbe
data16
cmp
scas
js
xchg
mov
inc
mov
ficomp
clc
xchg
xchg
(bad)
and
mov
cmps
push
mov
call
jmp
xlat
jl
adc
jl
push
retf
fwait
inc
pop
xchg
test
dec
mov
js
jp
test
aad
ss
mov
jno
push
pusha
aaa
mov
jle
cmp
fild
mov
ds
mov
xchg
xchg
ret
inc
pop
and
out
(bad)
push
dec
mov
sbb
(bad)
and
adc
dec
xchg
add
faddp
lods
js
icebp
pop
pop
sub
out
ins
and
mov
push
cwde
xor
push
adc
xchg
ret
xchg
loope
sbb
xchg
rcl
jnp
daa
retf
adc
test
repnz
cmps
fstp
or
cld
sets
push
mov
js
mov
push
fsubr
cmp
outs
inc
gs
dec
das
aas
push
bswap
mov
(bad)
push
cmp
inc
push
pop
popf
scas
rol
loop
mov
pop
xor
xor
xchg
cld
or
mov
rol
les
pop
(bad)
pop
xor
stos
ja
hlt
and
(bad)
pop
sbb
jecxz
jmp
int
or
lds
or
mov
movs
call
mov
cmps
das
mov
inc
out
cmp
mov
pop
add
cmp
int
mov
push
retf
jnp
inc
or
outs
aad
pop
ret
adc
cmps
xchg
lods
and
xor
sub
and
mov
ror
dec
push
xlat
adc
push
mov
cvttps2pi
push
dec
add
and
sub
fidivr
aas
(bad)
push
aam
mov
adc
scas
jge
lods
xor
repnz
jnp
add
sbb
jns
not
(bad)
xchg
imul
test
fidivr
sahf
push
xor
push
pop
push
or
or
js
cwde
aad
mov
fdivr
stos
inc
dec
push
xor
cmp
fidiv
stos
mov
popf
xor
cmps
mov
mov
xlat
mov
out
int3
add
stos
cs
shl
call
addr16
retf
mov
pop
xchg
push
sahf
dec
sbb
jb
adc
mov
gs
mov
adc
in
rcr
mov
jb
or
xor
mov
mov
inc
mov
cmp
cmp
lods
xchg
mov
pop
fs
aaa
dec
xor
lods
pop
rcl
cmps
adc
cmps
or
and
loopne
imul
xor
xchg
cmps
cmp
(bad)
sbb
mov
and
out
ins
or
mov
imul
push
rcl
lods
push
mov
inc
xchg
lods
(bad)
fld
in
mov
xor
nop
mov
ret
lods
pop
sub
or
mov
lds
ja
popa
aam
loope
fisttp
fwait
cmp
les
nop
(bad)
cmps
test
stos
aas
lahf
data16
sub
ja
and
(bad)
push
sub
xchg
pop
pushf
aas
pop
call
mov
xor
getsec
push
add
pop
in
xlat
clc
and
cmp
jnp
cmp
out
ds
push
fwait
add
call
pop
cdq
sbb
jbe
xchg
retf
in
cmps
dec
pop
add
cmp
retf
dec
in
push
jo
gs
sbb
xor
jae
push
mov
and
mov
jno
and
fadd
add
push
push
dec
out
fistp
in
pop
stos
aam
pop
hlt
push
movs
cmp
mov
jmp
push
xchg
jno
sub
es
gs
mov
pop
movs
xlat
test
inc
xor
mov
adc
jecxz
jle
scas
sbb
out
inc
scas
out
leave
loopne
and
(bad)
mov
push
push
mov
xor
sti
dec
xor
push
jno
push
pop
call
enter
mov
mov
(bad)
jo
xchg
mov
pop
movs
xchg
sbb
sub
inc
add
std
or
jmp
(bad)
je
push
test
icebp
cmp
leave
(bad)
les
add
(bad)
fcomp
sub
je
dec
add
sub
je
je
(bad)
dec
xor
pop
mov
out
cmp
aam
adc
lods
pusha
(bad)
sbb
ds
jae
sub
cmp
add
clc
jle
jne
inc
xchg
pop
pop
lds
jbe
scas
aad
test
mov
hlt
int
sahf
ins
test
xor
fs
jecxz
cmp
lahf
mov
mov
js
sub
mov
(bad)
icebp
and
(bad)
shr
sbb
add
adc
outs
scas
dec
cmp
stos
adc
pop
shl
test
adc
aaa
mov
and
sbb
ret
inc
sub
push
jbe
mov
enter
xchg
mov
sbb
add
xlat
jb
sub
sub
cdq
and
mov
push
push
sbb
pop
xchg
stc
stos
ret
push
(bad)
or
fs
push
cld
aaa
mov
cli
adc
sbb
jb
xor
inc
sub
inc
inc
pop
add
mov
sbb
ins
outs
cli
mov
std
inc
pushf
enter
add
push
mov
cmc
push
sub
cli
rol
pop
cmps
fdiv
lea
pushf
ret
push
jae
ffreep
xchg
sbb
popf
sar
xor
icebp
mul
push
mov
xchg
and
fcom
mov
and
rol
(bad)
lods
out
cmp
adc
pop
mov
push
sbb
jns
mov
pushf
push
pop
cdq
push
push
popa
pop
fs
xchg
mov
jl
lods
outs
xor
xchg
inc
(bad)
lods
jne
lock
cld
outs
inc
arpl
xchg
mov
mov
cmp
add
pop
sbb
inc
xlat
popf
daa
mov
xor
retf
dec
adc
add
fst
push
fld
enter
pop
push
std
out
popa
cwde
sub
test
enter
aaa
out
xchg
xchg
inc
or
fdivr
adc
dec
jae
push
inc
pop
jnp
cmps
dec
and
imul
repz
dec
add
sbb
(bad)
sbb
daa
pop
xchg
jge
out
or
(bad)
leave
mov
xor
jge
pop
add
xor
outs
adc
fwait
popa
or
xchg
outs
addr16
dec
add
dec
sbb
pop
pushf
mov
ds
rcl
into
mov
cmp
and
sub
jle
xchg
iret
mov
iret
inc
mov
and
and
mov
pop
lods
iret
aad
out
pop
mov
mov
fidiv
push
fwait
sbb
or
jns
out
dec
cmp
es
movs
shr
movs
jno
jl
stos
lds
sbb
pop
stos
aam
push
and
ins
xchg
pop
jns
mov
shl
call
clc
dec
loop
pop
fisub
xor
xchg
inc
ds
pusha
cmc
scas
es
cmp
adc
xor
adc
ins
push
pop
adc
cmp
hlt
inc
out
sub
mov
addr16
into
xor
daa
lods
ret
out
std
(bad)
js
js
push
std
retf
push
cmp
mov
mov
or
sub
push
add
cmp
push
out
add
xchg
das
stos
xchg
fcomp
call
pop
loope
dec
cmp
xor
lods
jae
daa
jmp
mov
xchg
mov
cmp
dec
mov
cmp
or
dec
ins
lods
mov
loop
pop
push
inc
dec
js
inc
jae
pop
mov
retf
lods
inc
xor
push
add
daa
arpl
add
sbb
out
movs
inc
gs
mov
pushf
pop
fld
movs
and
setns
fstp
xchg
mov
jno
push
mov
dec
popf
adc
retf
mov
sbb
push
pop
test
call
lahf
inc
(bad)
es
jecxz
add
and
xchg
xchg
jg
mov
les
and
inc
jns
das
add
add
sahf
std
push
push
mov
rcl
mov
cmc
add
inc
cmp
adc
jo
cs
add
inc
rep
add
pop
idiv
xor
lea
dec
dec
test
mov
out
inc
and
outs
pop
ret
fucomi
ret
mov
test
mov
fcmovnu
push
add
mov
jb
xchg
mov
daa
and
shr
test
pop
sbb
movs
or
mov
es
mov
dec
icebp
jbe
jo
add
out
xor
inc
loope
loopne
cdq
jmp
retf
jle
mov
mov
jp
mov
js
xlat
or
mov
inc
xchg
das
jmp
shl
mov
xchg
ins
sub
add
mov
call
pop
retf
ins
jnp
mov
jae
ret
sub
fsubr
cli
pop
jmp
ja
dec
or
scas
aam
jae
and
out
gs
pop
mov
ss
push
js
add
popf
xchg
jp
cmp
jmp
xchg
pushf
sbb
addr16
dec
pushf
ins
and
xchg
cmps
pushf
lods
leave
imul
mov
sub
cmps
les
mul
pop
ret
movs
int
std
das
test
add
push
mov
push
xchg
inc
sti
mov
shr
call
cld
xchg
ret
push
mov
pop
mov
mov
mov
xchg
add
scas
ror
or
cdq
jge
cdq
jg
push
test
xchg
(bad)
js
out
int
outs
and
rcr
mov
xor
adc
test
sbb
fucom
jg
lock
mov
jnp
jae
push
and
sbb
fmul
cmp
mov
xchg
and
ds
xor
call
inc
mov
test
arpl
mov
movs
dec
sbb
push
mov
loope
add
ins
cld
mov
vandps
sub
add
outs
add
lods
mov
lds
push
xchg
mov
mov
sub
scas
pop
movzx
lock
fisub
sub
pop
sub
cmps
pop
iret
aad
(bad)
sub
mov
clc
enter
fldenv
loopne
push
mov
push
outs
sub
pop
mov
xlat
push
xor
movs
adc
pop
scas
movs
add
pop
sbb
call
mov
outs
dec
xor
cmc
stos
push
rcl
pop
pushf
sub
(bad)
ret
mov
ja
mov
jmp
out
ss
push
add
cs
mov
jb
imul
scas
sar
ret
push
xor
push
pop
pop
cmp
dec
mov
pop
pop
or
push
(bad)
call
dec
jle
pop
and
int
rcl
aas
jmp
in
mov
adc
fnstenv
inc
aas
lods
and
jbe
cmp
imul
push
jae
outs
pop
add
adc
pop
adc
sub
shr
mov
int3
mov
push
mov
mov
jecxz
pop
dec
sub
push
cmp
mov
cmps
and
pusha
test
and
sub
pop
or
xor
or
push
xchg
pop
stos
cmc
inc
mov
sahf
call
pop
pop
ja
push
int3
mov
lods
pop
je
mov
xor
inc
add
ja
lahf
mov
stos
test
das
loopne
enter
call
and
(bad)
aad
xor
xor
dec
retf
pop
test
data16
sahf
xor
lds
test
cmp
ror
imul
add
test
fimul
xchg
mov
leave
pop
sbb
(bad)
xchg
sub
push
ins
ins
and
cmps
push
pushf
jecxz
stos
jo
push
bound
mov
std
jae
and
rol
call
xor
add
ds
in
dec
pop
pop
int
loope
les
dec
and
test
js
mov
add
mov
sti
add
pop
and
imul
imul
jmp
xchg
push
sti
jno
fsubr
mov
rcl
or
sbb
(bad)
sub
sub
push
mov
sub
dec
push
stos
into
jecxz
sub
sbb
sbb
sub
xor
dec
dec
pop
lods
ret
adc
(bad)
ficomp
int
sub
or
cmps
push
fnstenv
xor
xor
arpl
retf
sar
and
jmp
mov
cld
fstp
mov
pop
out
or
xor
in
lahf
inc
dec
push
mov
sbb
(bad)
ds
push
out
scas
(bad)
and
dec
popf
enter
icebp
sub
retf
sbb
jecxz
ja
mov
adc
lock
fxam
and
clc
or
loope
fisttp
mov
inc
enter
aas
inc
gs
scas
das
imul
pop
imul
aaa
add
jecxz
das
scas
imul
adc
push
mov
stos
jmp
sub
ror
out
sub
int
add
arpl
(bad)
out
xor
imul
add
cmps
inc
pop
xor
sbb
pop
sbb
and
or
push
push
cmp
stos
add
xchg
imul
jmp
sub
arpl
sbb
mov
sub
stos
pop
dec
mov
call
loop
imul
xchg
stos
and
adc
lea
push
jle
xchg
or
call
jge
inc
outs
daa
loop
push
mov
ins
daa
sahf
nop
add
pusha
push
repz
pop
push
loopne
lods
xchg
sti
or
jae
es
cmc
lods
jmp
sbb
imul
int
inc
and
push
scas
and
push
jae
or
repz
add
retf
aas
sub
add
cmp
xlat
mov
xor
inc
mov
outs
and
retf
das
push
jle
or
mov
sbb
pop
jmp
rol
out
stc
xor
xor
xchg
sbb
cmc
jne
sahf
out
in
cvtdq2ps
xor
mov
cdq
js
fisub
xchg
rcl
mov
xor
sar
jle
push
sub
scas
dec
shl
xor
scas
fcom
sar
pop
repnz
lds
imul
lods
sub
mov
gs
clc
or
pop
pop
or
outs
adc
xor
arpl
mov
movs
add
out
cdq
xor
jp
push
cmp
ins
les
push
inc
mov
pop
rcr
sbb
xchg
inc
ins
push
outs
aas
scas
es
ins
mov
scas
push
imul
xchg
cmp
cmp
loop
pop
(bad)
mov
popf
pop
ins
jp
iret
pop
pop
mov
add
fiadd
jmp
sbb
test
and
mov
retf
and
mov
outs
movs
les
out
daa
test
cs
or
or
or
fucom
mov
jp
retf
cmps
mov
inc
jl
ss
sbb
dec
movs
xchg
daa
mov
data16
stos
das
mov
push
jge
mov
pop
inc
not
(bad)
mov
jecxz
outs
jo
cs
sbb
lods
lods
xor
mov
dec
xor
sti
sbb
js
ss
sub
mov
cmp
les
mov
adc
aas
xchg
cdq
scas
rcr
pop
xor
mov
std
mov
loope
mov
or
cmps
jb
fstp
int3
test
mov
add
or
adc
mov
loopne
push
in
inc
or
inc
xor
pop
or
add
arpl
cdq
inc
or
repnz
jge
inc
jp
rcr
push
test
popa
std
dec
stos
ins
pushf
push
mov
aad
mov
xlat
push
neg
cmps
xchg
add
mov
ds
dec
pushf
xchg
jb
push
dec
push
dec
inc
and
lahf
fcmovu
jge
cmc
repnz
call
loop
mov
and
or
or
and
fcmove
in
in
ret
fistp
lahf
inc
pop
pop
jl
mov
ja
xchg
xor
xor
pop
ds
pusha
outs
lds
adc
sub
add
icebp
dec
sub
jecxz
arpl
push
mov
outs
sub
neg
popw
inc
pop
and
(bad)
aaa
fmul
push
jno
enter
push
or
shr
outs
mov
rcr
mov
(bad)
outs
or
rcr
outs
xor
mov
pop
or
push
dec
inc
loopne
dec
or
mov
sub
fcmovb
xor
jl
in
push
leave
xchg
or
push
(bad)
adc
or
cdq
jle
js
cmps
jmp
hlt
xchg
sbb
xchg
je
jbe
cmp
bound
fistp
pop
jb
pop
mov
fisub
cmps
inc
pop
ins
aam
xor
pop
test
mov
jb
jp
outs
fsubr
in
int
(bad)
jbe
mov
xchg
xchg
jge
rcl
xor
out
mov
xor
push
outs
adc
ror
in
out
mov
aas
mov
arpl
push
xchg
aad
cmps
jp
jge
add
sub
mov
jp
jle
test
test
xor
test
jecxz
or
push
pop
cmps
scas
mov
stos
adc
jge
jne
push
pop
test
xchg
jno
(bad)
xor
inc
sbb
jmp
movs
pop
sub
mov
pop
jmp
call
mov
and
popa
gs
jne
push
dec
mov
add
lds
mov
int3
and
and
ds
repnz
fisubr
ja
mov
adc
mov
push
fwait
pop
cmp
test
push
out
mov
mov
jl
pop
inc
imul
jg
(bad)
mov
out
js
cwde
mov
pushf
lds
xchg
jnp
shl
push
cld
push
imul
add
lock
push
lea
adc
pop
leave
aaa
pop
mov
xor
cmps
dec
in
dec
xchg
lods
fdiv
imul
pop
push
push
not
dec
mov
mov
enter
out
pop
or
je
cwde
dec
mov
shr
cmp
mov
(bad)
inc
mov
mov
fiadd
push
out
jb
fistp
outs
inc
mov
pop
add
mov
sti
inc
mov
mov
add
out
mov
dec
cwde
mov
inc
adc
and
and
dec
jl
and
push
ret
sub
mov
mov
paddusb
cmp
out
and
stos
jp
inc
inc
scas
push
test
and
outs
mov
xchg
mov
xor
popa
ins
(bad)
in
mov
jl
mov
mov
xchg
dec
mov
push
add
dec
test
sbb
(bad)
daa
test
add
rcl
jge
or
ss
xchg
enter
push
dec
or
loopne
cmp
xchg
dec
sbb
jmp
mov
test
mov
movs
daa
(bad)
xor
inc
(bad)
ror
cmp
push
mov
(bad)
mov
jecxz
dec
mov
imul
mov
pop
pushf
mov
mov
movs
(bad)
in
inc
mov
call
(bad)
daa
mov
xchg
inc
mov
int
push
adc
jno
es
jmp
sbb
and
clc
mov
das
int3
mov
mov
out
sahf
cmp
or
add
cmp
imul
or
jae
cwde
jl
or
cmp
xor
(bad)
or
mov
sub
test
imul
cmps
cmps
mov
imul
or
ja
retf
fiadd
cdq
mov
jmp
xor
dec
jl
sbb
enter
jns
shr
sub
add
mov
outs
lods
(bad)
imul
imul
mov
cli
scas
or
out
es
jb
or
xor
jbe
mov
data16
mov
rol
dec
aam
sub
bnd
sbb
mov
mov
imul
sbb
add
push
out
sub
jno
dec
push
aad
int
cld
clc
sub
in
or
or
ret
pop
fdiv
mov
movs
mov
dec
rep
imul
das
sub
in
into
sub
pop
sub
cmp
sbb
jge
mov
(bad)
or
mov
jmp
push
enter
push
rcr
fisubr
mov
mov
jns
(bad)
sub
add
xchg
xor
mov
xchg
cmp
icebp
jae
clc
push
cmp
aad
movs
ds
retf
imul
sub
(bad)
or
push
outs
shld
mov
fmul
cmc
(bad)
movs
scas
rcl
iret
xchg
aam
arpl
mov
mov
pop
mov
xchg
xchg
sbb
call
add
xor
movs
(bad)
adc
ds
iret
xchg
fs
mov
aad
jo
add
(bad)
mov
jns
int3
and
cli
inc
xlat
test
mov
or
fstp
shr
mov
xchg
jmp
push
sbb
cld
or
pop
in
test
lods
adc
and
fcomip
jo
(bad)
aas
int3
pop
aas
mov
mov
jnp
sbb
lods
jmp
daa
mov
cmps
shl
fcmovb
in
mov
pushf
cmp
lods
(bad)
fsubp
ud2
sahf
ss
je
movs
and
and
pop
daa
jae
fisub
and
in
push
ror
cwde
or
fsub
push
cmp
lahf
mov
out
push
icebp
repz
push
jl
sahf
jle
mov
jg
sbb
repnz
ss
dec
inc
xchg
ror
jmp
pushf
sub
sbb
aam
sub
pop
aad
mov
cmc
jecxz
jmp
inc
xor
cmp
test
xor
pusha
into
cmp
ins
pop
push
mov
add
ds
add
mov
cmp
cdq
xchg
retf
cdq
pop
or
cmp
sbb
add
(bad)
mov
sub
dec
in
pop
lds
imul
lods
or
movs
xchg
xlat
div
rcl
cmp
stos
push
aad
out
or
xchg
dec
add
out
xchg
cwde
jae
mov
jl
sub
xor
stos
dec
or
mov
lds
mov
(bad)
out
and
adc
sbb
shl
loopne
xor
cmps
cmp
xlat
fst
ja
imul
sub
push
pusha
bound
inc
adc
xchg
sub
pop
daa
sbb
sbb
pop
(bad)
and
dec
or
(bad)
fdiv
push
sbb
repnz
xor
cld
aaa
push
jp
pop
xor
(bad)
or
cmp
and
xlat
ss
pop
lock
jno
fild
cmps
(bad)
add
mov
out
lea
push
bswap
fadd
inc
and
movs
stos
or
js
mov
fnstcw
nop
mov
iret
dec
icebp
and
xchg
in
push
cmp
les
lds
push
sbb
pushf
ds
fistp
repnz
mov
push
cdq
inc
dec
leave
jb
pushf
mov
inc
xchg
push
rcr
test
sar
push
xor
js
xor
xor
cdq
mov
push
pushf
fwait
aas
ret
add
adc
clc
test
mov
test
dec
arpl
adc
movs
shr
test
leave
or
adc
lods
mov
sti
(bad)
sbb
(bad)
xchg
inc
out
ins
into
pop
or
xchg
outs
sub
test
cmp
popf
or
lods
mov
test
ss
loop
in
adc
cmp
push
inc
test
sub
mov
ja
pop
cmp
mov
fdivr
aad
stos
lock
cmp
mov
sbb
sahf
jnp
je
mov
mov
test
add
ja
popa
xlat
inc
mov
mov
call
enter
int3
sbb
enter
dec
test
push
sbb
sbb
ret
xor
xchg
lods
ret
mov
mov
pusha
icebp
push
leave
addr16
add
xchg
xchg
and
jle
pop
sbb
je
mov
lahf
mov
xchg
mov
push
hlt
mov
lods
int3
(bad)
retf
call
(bad)
iret
out
cmc
popa
add
pop
pusha
fisub
dec
inc
data16
jb
push
jle
scas
mov
outs
inc
mov
mov
jae
sbb
sub
sub
data16
rol
or
and
fwait
mov
push
cdq
xchg
xchg
sub
sub
int
xchg
ins
fdiv
cmp
mov
jno
inc
retf
and
jg
or
adc
ins
xor
scas
js
mov
pop
mov
and
shld
fidivr
push
movs
and
dec
or
inc
mov
add
xlat
ss
push
sub
sbb
adc
adc
adc
mov
shl
outs
jo
outs
pushf
fisttp
sti
in
cmp
repz
ret
pushf
push
inc
mov
pusha
dec
out
push
xchg
jne
(bad)
loop
or
sbb
jnp
lods
(bad)
fistp
add
pop
jecxz
lahf
mov
mov
xchg
sub
mov
push
addr16
clc
add
push
sub
cmp
ja
jp
idiv
push
mov
mov
(bad)
adc
lahf
movs
push
aaa
sbb
lock
jno
adc
cmp
xchg
dec
loopne
fucomip
inc
pop
lea
test
mov
out
or
pop
sub
test
push
push
jnp
and
jno
or
(bad)
fwait
mov
mov
dec
inc
mul
aaa
fidiv
xchg
(bad)
scas
dec
sbb
mov
icebp
sbb
outs
jmp
and
fcomi
xchg
idiv
je
mov
mov
es
mov
fmul
sbb
ud2
xchg
in
scas
and
pop
mov
into
add
in
ret
mov
neg
sbb
js
adc
jle
daa
and
std
push
mov
and
loopne
rol
retf
lea
cmp
shl
jge
jl
out
xlat
std
sbb
push
xor
jne
mov
push
cmps
fwait
mov
imul
mov
mov
xor
add
cmp
push
mov
cmp
ss
out
xchg
mov
mov
das
sbb
test
rcr
loop
add
popf
mov
cmp
mov
cmp
xchg
test
pop
adc
daa
or
call
lahf
add
mov
pop
sbb
cmp
sub
jmp
cld
mov
dec
lods
mov
out
stos
jo
or
and
sub
and
or
xchg
test
shl
sahf
add
lds
cmps
lods
inc
cmps
push
add
inc
jb
daa
push
mov
jns
mov
mov
ret
add
push
lds
cmp
fwait
stc
jae
jmp
sub
and
pop
adc
add
fwait
adc
(bad)
ins
jg
mov
test
push
sbb
xor
push
xchg
ret
gs
inc
mov
outs
adc
gs
xchg
in
enter
sub
test
push
pusha
aam
cmp
lea
ret
xor
push
js
fimul
test
adc
sar
add
mov
loopne
in
push
test
jae
push
imul
inc
ds
or
mov
into
data16
sub
pusha
xchg
push
adc
pop
sbb
xor
cmp
dec
ja
push
lods
and
ja
fsubp
(bad)
in
pop
popf
rcl
pop
(bad)
jmp
sbb
ret
(bad)
mov
lods
mov
push
fiadd
lds
das
inc
and
dec
xor
rcl
(bad)
mov
shr
mov
nop
pusha
mov
push
or
dec
aam
dec
adc
inc
fild
pusha
in
sti
dec
retf
les
test
mov
les
cdq
arpl
lahf
adc
add
sbb
mov
daa
mov
movs
(bad)
mov
aaa
fisubr
pop
push
push
or
popa
or
cmp
dec
stos
mov
xor
cmp
out
or
pusha
sbb
aam
mov
mov
ss
sub
cwde
push
test
mov
push
jb
push
xchg
mov
jmp
sbb
or
push
add
or
push
xor
mov
or
lock
(bad)
pushf
(bad)
repnz
(bad)
pop
or
mov
in
add
pop
jns
fwait
sbb
les
out
push
scas
xchg
xor
jne
sub
inc
out
mov
es
cwde
int3
retf
outs
xchg
add
jge
stos
sub
imul
ror
inc
stos
push
fwait
push
pop
lods
jb
and
shl
mov
repnz
sub
pop
adc
js
pop
pop
add
repnz
out
int
call
mov
nop
and
loopne
out
lea
or
mov
mov
(bad)
leave
fcomp
test
add
cmp
rcl
push
ret
cmps
dec
imul
xchg
sahf
adc
dec
xor
fnstenv
int
movs
rol
mov
push
or
sti
push
call
jbe
cmc
sar
int3
into
fcomp
jne
sbb
aad
xor
inc
mov
push
xlat
xor
sub
xor
jl
in
scas
dec
inc
jg
or
fisub
loopne
in
arpl
or
push
arpl
int
inc
icebp
xchg
sbb
pop
push
jbe
xor
xlat
cdq
pop
mov
cmps
js
sbb
mov
ret
loope
add
mov
mov
sub
jmp
std
movs
sub
rol
in
sti
mov
jne
cmp
xchg
push
xor
call
popa
mov
pop
ins
adc
push
rol
and
or
icebp
iret
pop
mov
movs
push
les
(bad)
ss
cmp
dec
cmp
cdq
fnstenv
mov
xchg
dec
(bad)
jb
int
cwde
xchg
mov
push
push
test
cwde
push
rol
mov
and
xchg
mov
in
dec
jl
add
mov
cmp
cmp
mov
pop
xchg
jne
lahf
imul
shr
push
push
xor
push
adc
aad
adc
or
mov
dec
fwait
ins
xlat
fs
(bad)
mov
push
lods
addr16
aam
aam
hlt
jg
pop
mov
das
push
mov
jbe
retf
movs
imul
pusha
mov
xor
loop
outs
cwde
pop
imul
jmp
retf
dec
popa
dec
(bad)
cli
jecxz
mov
jns
jg
and
push
call
test
sub
test
jns
ror
int
jecxz
sub
xchg
lock
cmps
mov
mov
and
and
in
lock
in
cmc
jo
push
outs
es
stos
ret
jno
pop
rol
loope
sahf
bound
call
mov
fcomp
and
jo
scas
xchg
mov
fcom
stos
xor
lahf
xor
pusha
mov
push
fstp
push
sub
xchg
mov
nop
clc
int
clc
in
jnp
mov
push
bound
dec
inc
pop
loope
and
pop
and
test
pop
sbb
mov
or
jo
xchg
shl
popa
fistp
lahf
test
or
arpl
jg
fisubr
push
dec
sahf
stos
call
inc
scas
xchg
fs
lock
retf
and
(bad)
sbb
repz
xchg
repz
call
shl
cmp
xor
jmp
inc
mov
mov
imul
fbld
lds
rol
cmc
movs
adc
shl
test
and
jne
fild
lahf
mov
pop
mov
test
sub
cmps
jmp
xchg
pop
push
pop
(bad)
jo
jmp
stos
repz
xor
adc
jo
pop
xor
mov
fcom
std
sahf
xchg
mov
jno
(bad)
and
sub
aas
data16
mov
repz
ror
arpl
and
jnp
xor
test
sub
jmp
dec
into
push
jne
mov
dec
xor
mov
cwde
(bad)
adc
out
ins
push
ret
and
adc
jle
add
out
or
inc
mov
dec
and
xor
daa
call
cs
xor
imul
dec
mov
jg
retf
xchg
sub
mov
mov
sub
dec
jb
inc
cdq
mul
cwde
(bad)
(bad)
dec
sub
ret
xor
in
pop
and
jo
(bad)
jecxz
sub
inc
and
mov
dec
inc
int3
stos
mov
ins
and
mov
iret
aas
clc
dec
jmp
in
sbb
pop
ret
adc
sub
adc
mov
cmp
cdq
in
cli
jbe
xlat
ret
or
lock
dec
dec
fist
adc
sbb
cmp
cmp
nop
sbb
inc
mov
das
sub
movs
or
dec
lds
jcxz
das
add
sahf
int3
mov
mov
cmps
test
mov
nop
inc
(bad)
adc
(bad)
cmp
dec
test
jb
pushf
hlt
mov
adc
push
loop
retf
sub
in
xor
retf
pop
xchg
adc
dec
and
jge
test
test
or
adc
sub
push
inc
sbb
and
ret
dec
push
cmp
gs
sbb
or
jp
outs
and
shr
pop
test
enter
ficomp
push
ret
ficomp
fild
ins
loop
push
dec
cmp
dec
test
shl
sbb
cmp
push
mov
(bad)
leave
pop
js
test
mov
mov
push
aas
in
sbb
inc
dec
leave
inc
nop
adc
push
mov
test
mov
mov
dec
mov
pop
xor
jle
sbb
arpl
xchg
add
xor
pop
stos
es
fstp
or
jb
xchg
mov
pop
jg
sbb
jg
mov
shl
jle
shr
push
push
xchg
(bad)
cwde
hlt
test
ret
mov
and
pushf
push
shl
call
xor
repz
aad
les
or
xchg
cmp
bound
inc
clc
(bad)
and
mov
push
xchg
and
sbb
retf
sahf
sub
jge
dec
adc
popa
pop
pop
outs
adc
call
test
jae
pop
jne
sub
iret
int3
lds
push
mov
(bad)
aad
aad
loope
or
or
jmp
inc
lods
jle
neg
popf
sbb
(bad)
in
hlt
loope
jmp
ja
aaa
(bad)
fwait
les
pop
retf
jne
in
adc
cmp
out
inc
add
push
jp
pop
or
ret
test
scas
fnstenv
fcom
inc
jne
push
inc
or
xor
(bad)
mov
ja
inc
jnp
rcl
inc
test
xor
pusha
cmp
ret
das
mov
lds
aam
not
jle
inc
scas
scas
dec
mov
push
cmc
jns
mov
test
daa
inc
cmp
jp
loopne
icebp
xor
lds
cmp
hlt
(bad)
repz
mov
jns
mov
adc
mov
cmps
jo
mov
imul
ror
outs
sbb
dec
push
and
mov
test
xor
mov
adc
fld
iret
cmps
jmp
icebp
rcr
data16
xor
mov
mov
mov
jmp
cs
test
pushf
in
pop
cmp
inc
inc
aaa
aam
pushf
pop
popa
mov
fs
loopne
adc
ret
push
ins
loop
sahf
ins
xor
push
stos
into
fstp
ret
add
pop
push
mov
dec
stc
pop
hlt
and
cmpps
fnstsw
cmp
pop
and
inc
fisub
ja
test
or
jecxz
aaa
jae
out
pusha
push
jno
lock
sub
out
lea
dec
pop
popf
mov
push
jbe
lds
mov
jecxz
sub
outs
lds
dec
ficomp
sbb
jnp
fs
cmp
adc
out
fwait
mov
shr
fadd
jecxz
mov
scas
retf
jp
pavgb
and
xor
mov
int3
jne
push
out
jne
inc
test
jns
jmp
bound
or
mov
dec
aas
cmp
test
inc
sub
cmp
hlt
jmp
adc
int
fld
mov
mov
aam
and
cmp
icebp
xor
aam
jmp
mov
int3
idiv
or
push
mov
xchg
call
mov
adc
push
xchg
xor
neg
jb
shl
xchg
add
test
jns
mov
fbld
jo
cmp
xor
mov
js
xor
(bad)
imul
in
pop
div
pop
movs
in
add
pop
arpl
daa
cmp
daa
push
fdivr
das
outs
jmp
test
jnp
push
fisubr
cli
inc
mov
cmc
push
test
cmp
imul
jmp
lds
inc
aas
xchg
jne
inc
aas
out
(bad)
std
test
lods
or
repz
ds
and
sar
retf
outs
pop
sbb
jae
int3
cmps
pop
shl
xor
pop
dec
dec
push
mov
lods
je
inc
pmaxsw
push
jmp
test
aaa
push
addr16
mov
jmp
(bad)
sahf
push
sub
jb
outs
and
pop
adc
dec
inc
shr
and
cld
stos
push
sahf
mov
movs
data16
inc
js
adc
xor
rol
test
dec
push
mov
js
push
fldenv
dec
cwde
pop
dec
xor
xchg
cmp
pop
xor
jno
and
mov
std
mov
jb
and
(bad)
mov
xor
(bad)
out
jmp
call
pop
adc
cmp
cmp
scas
aas
xlat
pop
stos
in
sub
ins
out
xor
lahf
shl
lock
scas
mov
test
or
stos
sub
dec
test
pop
into
cmps
inc
mov
sbb
not
pop
outs
sti
loopne
xchg
lds
mov
mov
adc
cmp
cmp
jne
shr
out
popf
pusha
or
push
sbb
and
ret
movs
jns
hlt
mov
stos
retf
repnz
inc
and
sbb
jecxz
stos
jmp
pop
jno
sbb
inc
hlt
mov
rol
hlt
pop
test
adc
dec
mov
sbb
out
jns
add
and
out
inc
sbb
dec
repnz
aaa
push
movs
rcl
mov
jp
fstp
fcom
inc
je
pop
cmps
(bad)
mov
pushf
fmul
inc
shl
out
mov
clc
or
aam
call
pop
aaa
bound
hlt
sbb
test
xlat
mov
sub
xchg
or
retf
jne
(bad)
repz
jmp
xor
test
sahf
aam
xor
sbb
mov
push
lahf
into
dec
stos
pop
jmp
sub
stos
bound
in
in
dec
out
inc
leave
or
inc
xor
add
adc
push
(bad)
dec
dec
lods
dec
idiv
inc
add
pop
xchg
lock
adc
inc
(bad)
call
add
push
out
ret
ja
ins
pop
in
inc
pop
mov
dec
mov
push
xchg
mov
shl
ss
push
ss
mov
test
cmp
ins
sbb
jmp
repz
mov
cld
push
bound
aad
dec
xor
cs
jae
jmp
push
xchg
(bad)
xchg
xor
push
out
xchg
pop
jne
test
push
and
pop
jmp
retf
shr
push
aas
or
jns
jne
or
mov
leave
les
mov
repnz
jge
cmp
pushf
imul
inc
cmp
fld
shl
and
movs
gs
cwde
sub
stos
arpl
imul
mov
arpl
adc
add
mov
pop
xchg
(bad)
movs
out
in
jne
gs
ret
or
in
gs
daa
xchg
sbb
add
pusha
call
push
fiadd
div
dec
mov
sets
sub
std
sbb
mov
pop
jmp
mov
or
pop
pop
xchg
and
and
pop
adc
test
arpl
in
aas
daa
sub
push
ins
(bad)
mul
dec
out
inc
jbe
(bad)
cdq
adc
leave
dec
es
sub
pushf
dec
push
mov
aaa
dec
mov
bound
icebp
mov
xchg
push
or
leave
jb
test
push
inc
movs
push
sub
les
in
sti
mov
cmp
mov
(bad)
add
adc
mov
jecxz
daa
inc
nop
loopne
cli
sbb
cmp
popa
cs
rcr
(bad)
sub
rol
ins
addr16
xchg
jno
sahf
mov
sbb
fcmovnbe
out
add
fs
in
out
cmps
jb
repnz
test
dec
call
dec
maskmovq
add
sub
sbb
int
mov
sub
pop
pop
repnz
sub
popf
lods
xor
data16
outs
adc
retf
fnstsw
das
push
or
mov
mov
xchg
pop
imul
in
or
ret
retf
cmp
lods
pop
sbb
pop
mov
test
dec
ins
jne
test
leave
push
loope
mov
mov
adc
(bad)
mov
inc
or
aas
cmp
xchg
rol
mov
call
inc
(bad)
popf
xor
inc
cmp
push
cmps
fcmovb
mov
jb
ins
cmp
push
ret
pop
rcl
aam
xor
mov
inc
sub
mov
inc
pop
enter
cmc
and
lock
movs
adc
mov
das
mov
cmp
push
dec
pop
enter
pop
out
or
xchg
push
pop
addr16
les
inc
push
aad
inc
lea
int
stos
ja
sbb
shr
jl
les
sub
in
sub
test
int
fcom
or
mov
or
lock
(bad)
(bad)
mov
mul
pushf
cmp
cmp
xchg
and
sub
mov
cli
adc
dec
repz
sub
std
outs
iret
adc
pushf
and
outs
jp
sti
push
xchg
jne
xchg
adc
scas
cmp
jno
pop
mov
push
jo
neg
xchg
movs
cli
(bad)
jmp
xchg
push
dec
cdq
mov
iret
out
push
xchg
mov
test
inc
loope
in
push
add
ret
push
gs
int3
int
test
push
data16
or
data16
dec
xor
je
test
in
add
shl
mov
in
pop
sub
jge
sti
or
pop
mov
xor
mov
mov
icebp
inc
push
or
add
mov
mov
jnp
repz
fild
sub
lahf
mov
and
add
xor
fisttp
inc
mov
aam
(bad)
aas
sub
jecxz
and
mov
popf
push
imul
inc
push
jbe
scas
fld
cdq
mov
cmp
int3
push
jbe
retf
push
int3
adc
push
mov
lea
jecxz
jbe
jne
lods
push
scas
bound
cdq
lahf
jns
imul
das
sbb
sahf
jmp
es
push
out
dec
(bad)
push
mov
sub
fcomp
sbb
sub
fistp
sbb
cmps
cs
xor
xchg
lods
mov
xchg
inc
or
jne
fisubr
pop
push
inc
sub
je
xchg
hlt
mov
shr
xor
std
add
mov
fwait
arpl
outs
jo
retf
cmc
cmp
xor
mov
jl
adc
xchg
push
arpl
adc
pop
cs
jbe
ds
je
sbb
sbb
arpl
imul
loope
loop
push
or
mov
xchg
mov
int
inc
cmps
jne
add
dec
cmps
out
sar
xchg
ret
(bad)
sbb
test
sti
retf
cdq
push
enter
pop
adc
jno
cwde
push
fisttp
cmp
cmp
xchg
lds
pop
jnp
daa
or
or
popf
push
js
dec
mov
cmp
or
jmp
pushf
dec
test
sub
loope
or
xchg
aaa
jb
out
daa
mov
mov
cmps
leave
jns
cmp
sub
cmps
xchg
jbe
cmp
cli
xor
call
pop
mov
lods
pop
ficomp
inc
inc
pop
push
adc
retf
pushf
sbb
sbb
ja
jbe
inc
test
jbe
mov
inc
mov
ds
inc
loop
in
cmp
adc
data16
arpl
mov
repnz
jb
call
hlt
mov
rol
or
cmp
cmps
repz
dec
mov
mov
mov
mov
ds
ja
shr
or
xor
pop
and
cld
ins
test
movs
cwde
adc
add
sbb
pop
pusha
out
sub
shr
outs
mov
daa
push
data16
ret
push
sti
jns
(bad)
shr
shr
mov
pop
jmp
es
fdiv
loopne
in
inc
enter
dec
mov
lea
jns
xchg
add
fild
(bad)
jecxz
mov
ficomp
mov
push
mov
hlt
imul
movs
jecxz
test
in
aaa
mov
push
xor
les
aas
lods
jle
cmp
lahf
fisubr
mov
mov
mov
jg
sbb
or
das
or
out
call
inc
aam
arpl
loopne
push
xor
imul
push
push
psubq
mov
leave
stos
test
add
fst
jg
inc
std
daa
or
and
xchg
sub
cld
xor
inc
das
stos
in
or
jb
mov
cs
dec
aad
inc
inc
fs
ror
sub
cdq
push
loope
or
xchg
sbb
jno
xor
cs
push
mov
dec
dec
fsub
sub
(bad)
cld
imul
adc
pop
pop
(bad)
dec
les
pop
lods
adc
pop
mov
jae
pop
(bad)
cmp
xor
jno
inc
int3
cmp
mov
(bad)
mov
aaa
xchg
aaa
push
mov
out
sub
lahf
imul
push
cmps
cmp
or
push
loope
push
retf
mov
mov
stc
loopne
mov
outs
add
inc
push
sbb
and
inc
popf
adc
sub
and
xchg
cmp
outs
cwde
cmp
lds
fwait
add
mov
into
and
fstp
lods
mov
adc
inc
enter
push
icebp
sbb
push
aaa
fistp
push
sahf
mov
push
adc
lods
mov
sahf
adc
cmp
iret
rol
loope
sbb
lea
mov
xchg
ret
je
jge
or
mov
das
inc
jae
clc
jg
test
stos
push
dec
dec
js
or
das
popa
xor
dec
push
fsubrp
mov
pushf
ja
xor
popf
cmp
push
and
scas
sbb
sahf
sar
dec
mov
cmp
sbb
dec
je
push
repnz
push
mov
cli
pop
es
inc
daa
push
ja
mov
mov
cmp
dec
lahf
jne
mov
sub
and
xchg
xor
fisttp
jge
fld
stos
sbb
lock
pop
adc
sbb
xor
inc
pop
hlt
push
dec
imul
and
rcl
jecxz
jmp
mov
imul
jmp
daa
pusha
pop
mov
lea
fcomp
(bad)
in
lock
push
or
xchg
push
cwde
dec
xchg
outs
mov
push
xor
xchg
adc
xchg
cmc
ret
repz
ret
outs
out
pushw
add
pop
mov
pop
adc
pop
mov
mov
(bad)
xchg
ret
cli
cmp
mov
mov
call
or
adc
jbe
data16
loopne
xor
stos
pop
jno
push
or
das
cld
(bad)
mov
jno
sbb
int3
cmp
fwait
ins
aam
shl
fisttp
push
(bad)
fdiv
in
push
and
pop
adc
rcr
fldenv
sbb
fstp
inc
(bad)
fst
(bad)
std
inc
addr16
push
sbb
jbe
in
fidiv
pop
(bad)
es
inc
sub
mov
popa
shl
iret
aam
enter
test
inc
mov
mov
loop
jno
retf
jge
std
sub
pop
cmps
retf
jp
cs
dec
lea
cmc
fisttp
test
scas
loopne
pop
xor
push
add
repz
in
push
rol
push
(bad)
cdq
and
pop
mov
mov
ins
push
movs
das
jmp
xchg
out
mov
mov
mov
fst
adc
add
mov
sub
and
mov
xchg
cld
and
push
(bad)
nop
jno
and
lea
jp
or
sbb
push
test
inc
call
jmp
rcr
sub
cld
test
sub
sbb
loop
xchg
jmp
out
test
out
jecxz
xor
mov
inc
inc
inc
ret
push
jns
push
addr16
and
xchg
ret
push
pop
loope
test
mov
or
inc
adc
scas
cs
shl
push
mov
xlat
call
xchg
inc
pop
cli
leave
cmp
adc
popf
inc
xor
jge
aas
loope
loopne
ins
pop
or
arpl
adc
pop
packssdw
push
jbe
out
fwait
pop
fwait
icebp
js
pop
sub
(bad)
pop
dec
call
ins
loop
cmp
into
sar
mov
mov
xchg
mov
sbb
mov
jmp
sub
in
pop
dec
cmp
push
scas
ss
add
cs
or
and
mov
mov
imul
adc
iret
mov
arpl
sub
adc
jne
sbb
pop
dec
(bad)
test
adc
cmp
mov
xor
aam
cs
jo
ffree
fild
dec
in
adc
retf
and
jmp
std
or
mov
pushf
add
cli
dec
mov
ds
nop
inc
xor
mov
jg
sub
jb
enter
dec
das
inc
test
ret
or
(bad)
adc
(bad)
ror
in
mov
jle
inc
mov
retf
addr16
in
std
ror
aad
(bad)
mov
lds
out
movs
jmp
or
cmp
aam
adc
stos
xchg
rol
mov
cmp
into
cli
fs
outs
out
outs
push
sti
cld
cmc
ja
sub
dec
fiadd
outs
jmp
retf
push
out
xchg
in
mov
fstp
(bad)
and
icebp
out
mov
test
retf
mov
test
inc
push
xchg
rcl
jge
(bad)
jae
test
into
add
cmps
xor
repz
fisttp
push
or
lods
scas
jle
or
ret
mov
mov
jl
sbb
mov
sbb
iret
imul
mov
adc
mov
xor
jle
cmp
stos
ins
mov
fidiv
cmp
and
icebp
leave
mov
shl
jmp
sbb
mov
sbb
(bad)
aad
mov
push
cli
aam
sub
out
adc
hlt
cli
(bad)
ins
js
shl
jno
leave
xchg
in
int
jecxz
pop
cmp
add
test
sar
ds
stos
(bad)
adc
fwait
ss
sub
jns
jg
inc
arpl
icebp
xchg
scas
popa
xchg
sbb
mov
and
ins
cmp
adc
xchg
fcom
jg
ja
dec
adc
push
adc
xchg
into
fisttp
ds
push
inc
out
shl
inc
push
push
mov
std
loop
inc
mov
pop
jae
push
and
sub
repnz
mov
inc
jo
lahf
adc
push
sub
xor
hlt
(bad)
fnstcw
mov
dec
out
mov
in
jge
shr
sti
jmp
test
or
cmp
push
pop
xor
lahf
cmc
(bad)
je
fisubr
adc
cwde
mov
or
xchg
stc
add
jg
hlt
jmp
loope
stc
mov
fimul
mov
(bad)
popa
xor
mov
into
inc
stos
cdq
out
ins
or
retf
push
mov
cmp
movs
mov
mov
jnp
mov
es
aad
sbb
jnp
daa
in
sub
xor
test
pop
(bad)
das
add
inc
(bad)
outs
adc
push
movs
mov
pop
xor
stos
in
cmps
repnz
or
xchg
push
dec
(bad)
(bad)
sub
inc
imul
mov
fsubr
pop
pop
(bad)
jmp
xchg
in
mov
cmp
jb
pushf
adc
ins
jb
scas
inc
inc
(bad)
call
fs
bnd
mov
pop
fnstcw
test
jns
mov
dec
test
cmps
std
mov
cwde
jb
cmps
les
stos
adc
jns
cmps
ins
(bad)
enter
xlat
std
inc
aad
jl
nop
fstp
retf
pop
call
mov
inc
push
xchg
jge
adc
sub
pop
xchg
movs
test
xor
xor
ret
outs
adc
or
or
lock
mov
xor
jmp
stos
popf
sub
(bad)
sub
das
push
sbb
cmps
xor
inc
add
gs
sbb
pop
icebp
adc
add
cmp
(bad)
cld
fadd
mov
(bad)
stos
shl
mov
imul
cli
sbb
imul
xchg
jle
int
dec
test
outs
fidivr
jmp
dec
xchg
and
enter
ins
pop
loope
das
mov
add
pop
pop
sub
add
mov
ds
loop
mov
xchg
jne
mov
ret
rcl
xchg
mov
mov
xchg
inc
mov
sub
movs
ret
je
push
out
and
lods
or
aad
les
cmp
push
push
add
call
add
call
call
or
pop
dec
sbb
(bad)
(bad)
(bad)
xor
dec
pop
mov
mov
cdq
daa
scas
mov
std
cmp
daa
xchg
or
je
gs
data16
pushf
sti
adc
in
movs
clc
mov
es
mov
loope
test
std
pusha
jae
add
or
frstor
mov
fwait
or
out
jns
jne
sbb
xchg
loopne
in
aas
jae
inc
inc
(bad)
lea
leave
bndcn
cmp
cmp
add
cmp
lods
lds
mov
repnz
cmovo
lahf
scas
and
mov
(bad)
addr16
outs
mov
rcl
outs
mov
call
popa
inc
fidiv
sub
push
add
cmp
push
xlat
(bad)
mov
enter
mov
lods
mov
pusha
jle
retf
mov
cmp
cmp
dec
out
retf
(bad)
out
sbb
push
test
cs
das
xchg
and
sbb
nop
xchg
retf
jb
or
ficomp
inc
mov
jmp
and
imul
(bad)
icebp
(bad)
inc
cmc
std
popf
xchg
mov
mov
and
xor
jecxz
pop
fwait
cmp
fwait
jecxz
not
sahf
shl
ret
push
inc
mov
cmp
mov
ror
pop
add
cmp
stc
sar
icebp
mov
push
fmulp
dec
adc
fbstp
xor
hlt
(bad)
imul
xchg
sbb
aas
mul
mov
jae
mov
xor
mov
lods
ja
mov
add
mov
mov
xchg
jb
sub
retf
xor
cwde
mov
pusha
sbb
retf
mov
or
fmul
sar
shufps
call
lahf
sbb
lahf
jo
das
inc
stos
sbb
iret
xrelease
add
loope
clc
inc
dec
mov
call
(bad)
aam
stc
ss
pop
popf
pop
jmp
clc
sub
jmp
test
enter
mov
xchg
les
inc
retf
mov
or
and
sbb
sub
fstp
sbb
fcom
test
pushf
fisub
shl
arpl
popf
out
jg
call
ret
mov
or
test
sti
jnp
mov
out
xlat
ffree
sub
jecxz
(bad)
fbstp
mov
push
mov
xor
sub
arpl
loopne
arpl
mov
xchg
adc
js
enter
not
sbb
sub
adc
fs
in
arpl
xchg
jo
mov
imul
jae
adc
aaa
xor
xchg
ret
xor
jmp
or
push
out
scas
adc
xlat
inc
pop
loop
and
sbb
mov
xchg
jns
push
div
pop
arpl
pop
inc
aad
pusha
pop
aaa
dec
jb
inc
mov
popa
mov
push
dec
sub
pushf
mov
call
fdiv
clc
mov
clc
sub
add
jg
mov
jbe
stos
and
push
mov
dec
out
mov
jg
add
sahf
push
jle
pop
mov
mov
aas
in
aad
dec
dec
add
jp
xchg
nop
loop
daa
xchg
mov
daa
adc
jmp
aam
call
loop
dec
test
mov
repz
cmp
movs
test
lahf
dec
fwait
mov
fild
ror
adc
dec
sub
(bad)
sbb
inc
add
cmps
push
fwait
sub
mov
mov
mov
retf
clc
nop
daa
sbb
sbb
and
mov
cmp
outs
xor
bound
enter
aas
xchg
cmps
sbb
lea
neg
ins
mov
gs
shr
test
cwde
aas
mov
imul
ror
pop
and
push
retf
mov
and
in
ss
gs
sbb
fwait
repnz
gs
out
jo
cmp
xchg
movs
dec
nop
pop
push
jno
cmp
cmp
mov
addr16
in
inc
cmc
push
jo
sahf
loop
popf
fnstcw
push
rcl
xor
lock
sbb
aad
aas
mov
loop
dec
pop
mov
outs
jmp
in
movs
loope
push
cmp
push
xchg
jmp
sbb
repnz
rcr
outs
mov
and
ins
test
aaa
and
mov
mov
ins
sti
inc
popf
(bad)
lods
imul
cli
ficomp
xchg
add
mov
cld
scas
xchg
add
arpl
jg
push
or
jp
dec
not
aam
xchg
es
sbb
shr
imul
xchg
jo
out
popf
inc
add
sar
mov
ror
loopne
(bad)
into
or
xor
sti
rol
cs
jp
mov
lahf
pop
adc
shr
inc
or
dec
call
rcr
je
add
test
outs
in
and
dec
jb
(bad)
xor
(bad)
in
and
mov
(bad)
push
(bad)
(bad)
into
fmulp
mov
aaa
cmp
daa
stos
mov
sbb
jle
stos
push
(bad)
es
dec
xor
inc
mov
fldcw
out
xor
enter
pushf
xchg
inc
imul
mov
cli
mov
pop
mov
mov
jb
add
ins
loope
mov
arpl
sbb
sub
jb
(bad)
shr
in
ins
scas
pop
xor
hlt
sub
sbb
(bad)
lods
xchg
mov
jp
and
xchg
cmp
sahf
push
cmp
inc
ja
jl
pop
lahf
or
inc
lock
(bad)
in
sbb
xchg
movs
push
jp
dec
inc
nop
and
je
pop
fs
cwde
push
mov
movs
ja
and
push
repnz
mov
adc
shl
sub
enter
gs
jno
sbb
dec
pop
mov
sbb
push
ret
(bad)
imul
push
rcl
pop
aaa
outs
push
adc
adc
retf
mov
sti
add
xchg
div
sub
sub
inc
cmp
in
aaa
cmp
adc
les
push
sti
mov
add
xor
dec
cmp
lock
cwde
(bad)
mov
cwde
push
adc
cmps
arpl
adc
inc
adc
movs
add
push
les
xor
pop
ret
outs
cld
int
push
xchg
xchg
or
or
add
repz
out
cmps
push
mov
out
sahf
mov
or
int3
mov
xor
out
outs
jmp
mov
mov
mov
push
movs
(bad)
call
sub
jp
mov
push
sub
rol
lods
cmp
(bad)
fild
es
sub
mov
pop
loope
and
jno
out
xchg
mov
scas
mov
(bad)
aad
push
jo
fmulp
xchg
sti
pop
sbb
xchg
xchg
lea
fcmovne
(bad)
push
push
(bad)
out
push
sub
pushf
rcl
repz
mov
ds
mov
cdq
jnp
add
dec
stos
(bad)
cmp
cmp
jg
mov
mov
cwde
sbb
xlat
dec
mov
or
add
cmc
dec
sbb
jbe
fisttp
sahf
(bad)
out
push
sbb
mov
dec
cmps
ret
fcom
mov
out
pop
repz
fsubrp
retf
scas
adc
retf
xchg
shr
pop
mov
adc
xchg
mov
enter
xchg
test
or
enter
adc
test
lock
call
in
stos
and
sbb
and
jne
cmp
mov
lds
xlat
call
sub
xchg
hlt
cmc
and
cmps
push
clc
sahf
mov
or
ret
push
pushf
cmp
mov
cmps
les
jnp
dec
repnz
cmp
(bad)
fbstp
mov
sti
sbb
addr16
xor
mov
mov
popa
adc
mov
cmp
fwait
mov
jne
or
out
outs
retf
inc
and
xor
ins
push
sub
imul
jge
xlat
sbb
add
jns
xor
in
mov
jle
mov
inc
pusha
and
push
xchg
xchg
xor
dec
jnp
or
loop
and
pop
movs
dec
shr
inc
mov
mov
mov
inc
call
mov
outs
rol
imul
and
or
lock
lods
jno
out
mov
sbb
out
and
cmp
and
xchg
push
fiadd
push
pop
in
mov
or
jb
clc
xchg
xchg
test
cdq
movs
pop
inc
mov
add
push
push
inc
jo
lea
loope
and
add
bound
stos
int
sub
jb
inc
adc
sbb
retf
out
or
cmc
lods
std
add
cdq
dec
shr
(bad)
jg
sar
or
sub
mov
es
push
push
sbb
dec
js
xor
enterw
adc
mov
adc
pop
ror
mov
clc
stos
sub
pusha
pop
loop
inc
fs
xchg
aaa
ja
clc
test
pusha
inc
inc
cmp
fidivr
scas
push
pop
addr16
mov
mov
add
repnz
sub
je
sbb
ficom
inc
imul
push
daa
pushf
aas
dec
jno
scas
aas
and
mov
jbe
add
loop
mov
sub
imul
mov
jbe
dec
ins
inc
lods
neg
jo
popa
cmps
xor
cmp
loop
and
xchg
and
out
xor
(bad)
mov
xchg
stos
pop
and
adc
or
jmp
and
or
aad
mov
xlat
xchg
or
(bad)
or
ret
push
(bad)
and
mov
adc
push
mov
retf
cmp
sub
mov
mov
lock
ret
sbb
cmps
aas
jl
pushf
aas
cmps
mov
aam
ins
push
mov
loopne
ret
and
movs
and
cmp
pop
adc
xlat
xchg
xor
and
push
sahf
lods
push
(bad)
aad
daa
jb
daa
mov
in
movs
add
(bad)
push
and
add
mov
stos
sub
and
std
sbb
push
jae
sbb
clc
imul
retf
ror
test
xor
xchg
cmp
or
mov
(bad)
call
arpl
popa
shr
push
in
ror
lods
divps
sahf
adc
cmp
add
xchg
inc
mov
adc
dec
lods
jg
cmps
std
inc
sbb
mov
inc
jle
cmp
stc
mov
sbb
add
dec
daa
adc
ret
push
push
add
arpl
jl
jmp
lock
ret
sbb
scas
sbb
sub
adc
in
mov
(bad)
sti
jno
xlat
or
jl
cs
sbb
push
loopne
icebp
add
xchg
movs
adc
adc
mov
mov
pop
push
(bad)
int
test
pop
sahf
loop
push
jno
mov
push
jo
adc
push
sbb
mov
mov
(bad)
xchg
mov
xchg
ds
in
push
fadd
sbb
mov
shl
popf
stos
mov
(bad)
mov
xchg
add
std
aaa
sbb
push
and
push
int
cli
cmps
retf
inc
push
ins
es
xor
stc
retf
daa
fstp
xchg
adc
xchg
scas
adc
sub
cmp
imul
mov
jbe
jmp
call
xchg
clc
test
and
or
inc
jp
push
add
out
imul
pushf
rcl
enter
xchg
leave
dec
sub
mov
mov
push
rcr
sbb
mov
scas
jle
push
dec
ds
pop
mov
loope
adc
cmp
xchg
jmp
ins
(bad)
xchg
mov
gs
ss
add
mov
xor
push
test
loop
pop
cmp
lahf
scas
outs
add
out
cli
(bad)
das
mov
mov
mov
dec
pushw
xchg
xchg
(bad)
mov
mov
sahf
and
push
inc
inc
mov
xchg
in
adc
repnz
push
xor
jnp
add
mov
fsub
sub
cmp
fsubr
cld
(bad)
int
mov
inc
mov
pop
scas
(bad)
xor
inc
jns
push
mov
push
cmp
lock
int3
data16
cmp
imul
int
movs
std
repz
fs
cmp
call
mov
arpl
cmps
arpl
pop
pop
push
add
cli
xchg
lock
inc
dec
cmps
jle
or
push
movs
xchg
dec
mov
pop
xchg
sub
or
cmp
inc
fistp
ins
push
sti
imul
(bad)
addr16
mov
inc
int
mov
lahf
loopne
das
sub
rcl
adc
jg
pop
jo
xchg
movs
ins
loope
inc
mov
xchg
mov
je
fbstp
xchg
ds
jecxz
mov
xlat
pop
sbb
fwait
cmp
sbb
fld
imul
mov
or
mov
(bad)
fisttp
or
bsf
leave
pop
ss
(bad)
xchg
mov
or
push
xchg
mov
jl
stos
fnstcw
lock
jge
adc
mov
pop
mov
mov
ins
repnz
ret
sahf
jno
push
(bad)
jge
daa
fiadd
in
push
jmp
adc
dec
push
repz
enter
outs
jne
dec
mov
sbb
mov
in
pop
sub
retf
mov
sbb
outs
inc
inc
pop
xor
inc
inc
mov
stos
dec
sub
enter
call
pop
cmps
fwait
push
fs
lds
stc
sub
out
call
or
sub
push
subps
sbb
push
mov
mov
or
dec
fwait
scas
test
outs
ja
(bad)
mov
cmc
inc
movs
push
jnp
inc
jae
cli
ret
xor
adc
addr16
or
les
cmp
adc
and
or
add
cli
mov
imul
dec
cmps
and
mov
popaw
repz
jmp
push
das
jecxz
xor
jnp
sbb
inc
(bad)
(bad)
dec
inc
add
xlat
mov
fldcw
ret
cmp
and
mov
data16
inc
mov
adc
inc
and
ja
add
pop
rol
xlat
retf
lahf
xlat
movs
loope
mov
add
mov
pusha
call
or
cmp
push
sahf
dec
sub
jo
and
fstp
dec
repz
mov
fisttp
mov
pusha
js
scas
cmp
leave
or
xchg
mov
outs
neg
sar
enter
add
pop
inc
(bad)
cs
mov
push
cmp
pop
push
push
ret
imul
in
xor
mov
push
and
mov
inc
jge
mov
jl
or
test
stos
outs
int
xor
lds
in
mov
cs
sbb
cmp
sub
xor
aam
cmps
mov
psubsw
into
mov
xchg
sub
mov
and
dec
mov
cmp
or
cmp
cmp
and
out
add
test
jmp
call
cmp
lock
sub
add
leave
int3
(bad)
mov
xor
aam
(bad)
cwde
jns
clc
jmp
imul
test
stos
xor
shr
ins
xchg
(bad)
sti
(bad)
xor
jno
pop
mov
(bad)
nop
xor
add
push
int3
pop
inc
xor
pop
mov
call
lea
and
fidiv
aas
push
sub
aaa
cmps
scas
cwde
push
btc
add
sub
call
js
(bad)
jle
pop
getsec
fdiv
jle
les
xchg
sbb
rol
sub
sbb
and
jmp
les
cmp
push
in
stos
xor
jecxz
push
scas
push
arpl
test
cmps
push
adc
loop
xchg
mov
jns
xchg
dec
bound
jg
cmp
adc
stos
mov
loope
sub
pop
int3
out
dec
sbb
pushf
inc
add
cmp
(bad)
loopne
or
lock
je
mov
cmps
das
outs
sbb
xchg
dec
hlt
cli
out
xchg
out
into
xor
data16
xlat
dec
add
repnz
push
mov
imul
gs
lds
push
int
jno
dec
mov
movs
dec
sbb
xchg
push
imul
jnp
dec
xchg
mov
jb
fs
adc
jl
jmp
clc
cmp
in
push
sti
inc
mov
ja
jno
outs
lahf
lahf
jae
sub
inc
shl
mov
jg
das
and
mov
test
outs
sub
test
dec
jmp
jmp
fsubr
dec
sbb
int
and
jge
iret
adc
das
lahf
popf
pop
out
dec
adc
jl
iret
mov
mov
mov
cmc
arpl
and
pushf
or
sub
je
cmps
pop
or
cmp
scas
call
push
adc
dec
inc
dec
xchg
dec
imul
dec
dec
mov
rol
fst
test
(bad)
mov
push
es
pop
fs
mov
pop
enter
cmps
push
cmp
cmc
cmp
mov
pop
adc
jmp
jbe
mov
push
and
mov
es
iret
add
int3
jge
cmp
mov
mov
pusha
push
inc
test
jnp
in
dec
out
mov
ror
popa
sbb
jns
paddb
sahf
or
enter
pop
adc
push
stos
scas
sbb
inc
int
mov
sub
mov
iret
mov
inc
retf
arpl
inc
push
(bad)
loop
into
pop
in
jge
sbb
xchg
aaa
inc
cmp
ins
and
cmps
retf
ins
mov
xor
mov
sbb
aad
sub
aad
(bad)
jmp
push
data16
pop
enter
xor
adc
xchg
jp
cmp
jmp
adc
push
leave
loop
mov
ret
dec
ss
(bad)
lock
add
icebp
pop
ja
ret
stc
les
imul
mov
and
dec
cwde
adc
inc
and
mov
daa
fbld
pushf
push
adc
ins
in
cmp
test
mov
push
cmp
int
add
mov
mov
mov
in
addr16
mov
sbb
mov
aas
xchg
cmp
cmp
cmps
mov
idiv
dec
dec
aad
imul
adc
not
push
rcl
sbb
cmps
dec
ja
int
pop
inc
repnz
mov
loop
jle
test
dec
clc
jl
fcomp
int
or
imul
scas
and
out
lahf
push
daa
xor
addr16
pop
dec
push
mov
rol
mov
push
sbb
cmps
sti
outs
mov
cmps
retf
movs
inc
fcomp
sahf
pop
xchg
pop
mov
dec
inc
jl
ret
xchg
(bad)
aad
xchg
cmp
int3
sub
jo
or
xor
jecxz
lds
mov
mov
rol
fild
jbe
mov
push
(bad)
loope
and
mov
cmp
or
pop
out
mov
imul
call
sbb
in
dec
push
mov
rol
out
sub
mov
sub
adc
js
mov
pop
push
mov
jo
cmp
dec
js
pop
jne
movzx
push
std
int3
mov
jp
dec
jmp
xor
push
hlt
fs
lock
and
push
xor
rcl
ret
xlat
mov
cmp
sub
or
mov
mov
mov
xchg
mov
enter
sub
sub
(bad)
(bad)
cmp
cmp
(bad)
nop
je
sub
aas
imul
loopne
sub
movs
push
outs
mov
or
dec
aam
jb
cwde
push
mov
retf
jbe
pop
neg
jg
in
scas
or
test
stc
adc
push
and
cmp
rol
(bad)
push
int
push
loope
fsubr
je
gs
xchg
sub
xor
rcl
push
das
repz
mov
cwde
pop
mov
xchg
data16
pop
cwde
out
xor
aam
aaa
dec
in
push
cwde
shr
xor
mov
push
ja
dec
jo
mov
jne
ror
add
add
(bad)
je
ficomp
add
dec
push
jl
sbb
jno
int3
jo
inc
and
jae
inc
out
fwait
sub
sub
xor
push
pushf
mov
das
sub
addr16
inc
sbb
movs
xchg
retf
jae
xchg
aam
sub
jle
mov
jg
loopne
mov
and
retf
mov
xchg
daa
test
adc
into
push
dec
ret
mov
pop
div
jns
cmps
dec
iret
inc
call
call
cmp
retf
cmp
test
push
mov
mov
push
mov
fcom
dec
std
xchg
popf
pop
jae
jmp
xchg
push
inc
sub
stc
fnop
aad
adc
xor
ins
push
cmp
dec
test
push
xor
mov
push
xchg
pusha
mov
sub
pop
in
cmp
lods
sub
shr
mov
add
loope
inc
mov
xor
je
adc
or
das
dec
dec
adc
cmp
inc
cs
push
lds
jecxz
sti
ins
sub
cmps
jns
inc
or
leave
test
out
xchg
jae
xor
push
pop
ror
hlt
retf
cld
dec
in
rcr
lods
addr16
inc
retf
imul
loop
fimul
lahf
push
lds
mov
dec
ja
(bad)
fwait
iret
test
ds
mov
ficom
mov
stos
lods
jge
and
mov
dec
rol
sub
cmp
mov
lock
into
std
fadd
jg
jmp
and
mov
dec
mov
fstp
daa
lods
aas
test
inc
mov
xchg
sbb
xchg
push
sub
aam
inc
push
test
imul
popf
mov
outs
fidivr
sbb
loopne
adc
sub
sub
dec
lods
or
mov
add
sub
aaa
cmp
scas
(bad)
mov
pop
mov
add
stos
sbb
shl
std
xchg
adc
hlt
and
xchg
(bad)
pop
movs
aad
or
sbb
jo
inc
jo
pop
or
adc
sahf
sub
cmp
data16
add
outs
cdq
std
sbb
ins
inc
je
jmp
(bad)
push
mov
cmp
push
imul
cs
sti
scas
cmps
xchg
addr16
or
fs
sub
call
pop
cmp
xor
pop
mov
and
cdq
lea
call
xchg
jecxz
clc
mov
stc
cmp
jb
call
push
addr16
fldl2e
scas
jmp
jle
cmc
(bad)
pop
ins
sbb
xor
lds
(bad)
pop
pop
mov
pop
mov
les
pop
inc
sahf
loope
stos
dec
lods
pop
cld
and
xor
jle
or
xor
or
jmp
outs
das
imul
sub
cli
sub
push
or
xchg
adc
dec
(bad)
or
in
lds
xor
movs
daa
fwait
das
icebp
and
imul
sbb
inc
pop
out
cld
add
or
mov
jg
xor
mov
xchg
xor
adc
in
sti
add
xchg
cmp
addr16
lods
sbb
stos
dec
je
xor
lods
ins
mov
push
ins
bound
inc
es
stos
(bad)
rcr
sub
push
add
outs
into
inc
popf
jae
pop
fwait
jmp
dec
aad
clc
scas
leave
inc
std
jae
fisttp
xor
push
out
test
rol
add
jl
pop
(bad)
lahf
int
sub
mov
hlt
jmp
popa
pop
mov
sti
test
and
sbb
retf
pop
pop
repz
ret
adc
int
imul
inc
ss
jecxz
jne
test
pop
out
pop
rol
mov
cld
js
mov
sbb
xor
push
jge
or
daa
pop
cwde
mov
aaa
fwait
cmps
adc
movs
xchg
push
adc
jp
out
pop
pand
mov
xchg
adc
int
add
test
inc
push
adc
jl
pop
stos
xlat
inc
lahf
test
push
push
xchg
mov
dec
dec
mov
shl
gs
push
pop
aad
pop
push
sbb
mov
pusha
rol
pop
or
call
pop
fs
lods
inc
rcr
add
(bad)
push
mov
test
add
xor
or
cmps
test
bound
(bad)
scas
into
adc
out
icebp
mov
mov
inc
outs
xchg
add
in
xor
out
aad
sub
pop
xor
ror
and
lea
sbb
sbb
adc
pop
iret
fisttp
fldln2
sub
mov
jl
mov
sahf
jns
xchg
(bad)
mov
mov
cmp
lock
lahf
jbe
cmp
xor
jle
lock
mov
xor
stc
sub
shl
js
daa
dec
sbb
mov
cmp
jnp
or
sub
scas
xor
div
inc
out
sbb
inc
stos
cmp
dec
fild
repz
mov
xor
cmp
or
mov
in
inc
cmp
sub
lods
dec
lods
cwde
cmps
pop
or
loop
(bad)
fdiv
dec
call
pop
lea
lods
fwait
pop
jg
push
ins
aaa
pusha
jle
in
es
mov
jg
in
inc
outs
(bad)
sbb
inc
lahf
and
jmp
adc
sbb
stos
sbb
fldcw
mov
xor
jecxz
jne
jg
and
sub
aaa
mov
sub
xchg
icebp
mov
sbb
jne
add
arpl
test
xchg
xor
jmp
push
mov
in
cmp
xchg
mov
add
std
rcr
dec
rcl
sub
add
xchg
inc
add
scas
ss
ds
jb
dec
jo
xor
mov
dec
sahf
std
adc
sub
xor
leave
push
test
jb
stos
lods
cmp
mov
pop
xor
pop
sti
mov
mov
in
jb
jnp
dec
fsub
mov
fidivr
and
loopne
xchg
cmp
leave
sbb
enter
xor
mov
mov
xchg
daa
ror
stos
aas
test
push
push
push
sub
xor
mov
mov
fs
fiadd
pop
cli
fcomp
hlt
lahf
mov
call
xor
std
mov
ss
aad
xchg
ss
or
push
pop
push
rep
rcl
movs
xor
aad
fisubr
or
push
shl
jb
addr16
xchg
out
mul
jno
inc
aam
(bad)
cmp
or
in
rcr
daa
push
sub
out
pusha
jl
or
pushf
jb
out
pop
retf
stos
pop
mov
(bad)
push
add
xor
dec
cmp
rcr
ja
fwait
loopne
or
sti
jl
sub
loop
stos
call
adc
movs
pusha
out
mov
push
not
enter
je
cli
mov
cmc
fidivr
push
add
test
dec
(bad)
ret
inc
pop
push
sti
scas
int
scas
cmps
dec
cmp
out
test
stos
lock
rcr
cmp
loope
pop
cmps
jb
(bad)
in
repnz
repz
out
repz
inc
inc
push
mov
cmp
inc
cmp
loopne
xchg
xor
pop
mov
xor
jnp
icebp
repz
or
pushf
rol
push
xor
test
dec
mov
add
fadd
jecxz
adc
cmp
lods
imul
mov
xor
xor
sbb
mov
scas
or
push
hlt
fucom
nop
cmps
bound
in
jp
sub
pop
outs
aam
mov
and
fnstenv
adc
pcmpgtw
mov
adc
pop
cmp
aam
lods
jle
les
pop
lahf
sub
mov
mov
pop
and
sub
sahf
in
mov
mov
mov
lock
jb
scas
(bad)
push
(bad)
pop
inc
sar
mov
adc
jecxz
cmps
xchg
xchg
(bad)
and
loopne
in
sbb
scas
ins
push
mov
pop
or
cdq
ret
ret
call
pop
inc
jne
stos
ror
jmp
aad
nop
data16
pop
jge
xor
mov
mov
pop
aad
jmp
std
imul
mov
call
(bad)
mov
mov
cmp
add
and
shl
call
test
dec
syscall
lods
outs
inc
mov
pop
mul
lods
sub
push
int
das
pop
sub
and
dec
in
jo
xchg
not
movs
mov
jo
cmp
pop
mov
sub
fsubp
rcl
pop
adc
je
jge
mov
adc
cs
mov
mov
icebp
adc
ror
pop
xchg
mov
cmp
mov
icebp
rcr
sti
hlt
adc
(bad)
jmp
mov
imul
aam
pop
mov
aam
jge
frstor
mov
addr16
fs
ds
cs
and
push
push
xor
mov
test
mov
push
pop
cmps
add
add
or
cwde
cmp
pushf
jns
mov
cmps
loope
les
sub
ror
dec
mov
ficom
pop
and
enter
mov
jae
movs
div
pusha
inc
les
cmp
cmp
data16
push
les
sub
jle
or
div
addr16
lea
sti
outs
jbe
in
xchg
clc
clc
mov
fcomp
push
(bad)
sbb
pop
mov
loope
lods
jg
mov
adc
lods
stc
and
shl
out
cmps
pop
dec
inc
xchg
lock
(bad)
in
or
push
(bad)
pop
or
mov
sub
sub
dec
mov
shl
cmc
mov
xor
pop
adc
cmps
int3
sbb
bound
movs
or
test
aad
mov
mov
mov
(bad)
fisttp
sub
(bad)
into
sbb
xchg
lock
push
stc
or
ss
ins
cmp
jmp
mov
aas
add
inc
lods
xor
push
repz
jmp
mov
sahf
xchg
ret
adc
rol
jl
out
outs
xchg
aad
sbb
test
movs
jno
mov
test
inc
les
pop
mov
sub
hlt
xor
imul
in
arpl
int
lods
inc
pushw
push
loop
lea
sub
mov
in
aaa
xchg
sahf
push
inc
popa
cmp
cmp
mov
mov
mov
pushf
div
inc
mov
xchg
adc
cld
movs
mov
xor
(bad)
sbb
sub
fimul
adc
adc
rcl
dec
cmp
push
(bad)
std
pushf
push
push
mov
out
gs
jb
mov
jo
xchg
ins
push
mov
mov
inc
loopne
sar
test
aaa
inc
leave
jg
jp
sbb
push
xchg
dec
arpl
mov
(bad)
aaa
arpl
je
popf
retf
scas
call
ret
(bad)
out
ins
add
ss
xchg
or
fs
sbb
push
and
fdivr
sub
add
dec
xor
cs
xchg
retf
push
ins
mov
in
push
retf
cmc
mov
dec
lods
into
pop
xchg
pop
pop
sbb
and
cmc
or
out
mov
jbe
adc
ret
and
pop
sbb
inc
add
pop
fucomi
or
aaa
movs
sti
inc
cli
xchg
cmovns
mov
aad
mov
sbb
int
shl
adc
mov
int3
and
movs
or
pop
jl
sub
lock
mov
xor
inc
daa
jno
fldcw
out
aas
aaa
jns
cli
iret
pop
hlt
pop
dec
add
scas
sahf
jge
es
jnp
add
adc
not
push
xor
std
int
cmps
lahf
outs
and
imul
push
and
pop
sbb
mov
add
sti
push
int
or
int3
cmp
cmp
das
dec
cmp
fwait
jnp
adc
adc
mov
ror
sbb
pop
jp
stc
cmp
test
stos
xor
stos
push
xor
jnp
xor
inc
lahf
mov
sbb
push
cwde
popa
adc
in
pushf
outs
push
(bad)
push
dec
imul
or
jl
mov
push
and
cwde
push
jmp
jae
jmp
mov
jne
xor
loope
or
xchg
xchg
data16
inc
add
in
in
std
fucom
popa
lods
int3
pop
mov
fdivr
dec
sti
cmps
fs
mov
out
(bad)
ss
dec
sbb
lods
iret
cmps
or
movs
pusha
add
cmp
sar
push
mov
jo
(bad)
je
test
pop
xchg
and
ret
icebp
sahf
and
lds
cli
jg
dec
data16
aad
repz
(bad)
sahf
push
popf
sub
sub
push
jg
ret
add
ins
stc
sub
or
outs
fdiv
cli
test
jmp
aas
and
mov
stc
inc
sbb
and
test
inc
sub
add
js
push
movs
push
mov
cwde
test
gs
push
mov
sahf
xchg
enter
and
clc
fsub
or
sub
movs
push
sub
mov
sbb
test
push
sub
xor
pop
add
nop
mov
xchg
dec
jne
in
lods
sti
popa
mov
xchg
dec
scas
and
icebp
es
out
jne
sub
imul
test
push
xchg
push
addr16
test
and
dec
bound
mov
shl
sbb
retf
pop
jle
jnp
ja
loop
or
mov
sub
cdq
add
inc
sub
add
aam
stos
mov
mov
or
aad
clc
mov
movs
pxor
sbb
push
aas
dec
jl
mov
leave
mov
fisttp
sub
xor
sub
push
mov
repz
ds
out
(bad)
shr
(bad)
movs
mov
and
xor
sub
loope
ret
cdq
cmp
or
pusha
rcr
in
imul
add
sbb
sub
(bad)
mov
aad
pop
imul
rcr
imul
cmp
adc
pop
push
or
push
nop
xchg
mov
mov
and
xor
push
rcl
(bad)
xchg
mov
jmp
sub
test
test
and
add
(bad)
into
mov
jmp
or
jb
push
or
std
mov
ja
mov
xor
in
out
mov
mov
mov
test
push
movs
out
cmp
pop
inc
cmp
out
rcl
icebp
int3
stc
pop
or
jle
push
fsubp
mov
inc
scas
mov
add
push
ins
fimul
nop
mov
mov
cmp
and
add
mov
ret
ret
sub
retf
sbb
fxch
loope
das
adc
cld
xor
pop
gs
add
hlt
push
(bad)
in
inc
das
jp
out
and
aaa
push
daa
int
mov
sub
imul
fcom
stos
std
not
jne
icebp
dec
xchg
dec
stos
adc
cld
jecxz
lds
fwait
inc
repnz
adc
popf
mov
xchg
xor
std
mov
fbld
je
jmp
inc
femms
out
aas
mov
cs
in
lods
xor
mov
dec
jg
mov
ins
jno
in
jp
push
test
and
xchg
xchg
imul
cmp
mov
mov
das
inc
or
jle
add
outs
call
push
and
mov
pop
sub
in
sbb
ja
and
inc
xchg
mov
stos
lods
or
int3
dec
in
daa
xchg
adc
push
arpl
mov
pop
cmps
ror
js
dec
repnz
mov
mov
cmp
ret
xchg
icebp
add
fmul
pusha
ret
jbe
cs
and
(bad)
mov
mov
push
out
and
pop
xor
inc
or
pop
imul
ds
hlt
mov
dec
push
jecxz
mov
sub
aaa
cwde
repz
(bad)
imul
cmp
cmps
adc
bswap
imul
lea
aam
dec
cmc
jmp
lods
scas
icebp
jp
dec
xchg
(bad)
scas
and
daa
rcr
cs
adc
data16
jmp
ds
pusha
pusha
inc
pop
(bad)
mov
sbb
cld
pop
pop
rol
and
mov
pop
cmp
lods
ret
mov
int3
ins
pop
xor
mov
xchg
or
add
(bad)
movs
mov
pop
call
ins
xor
or
cmp
cdq
mov
and
js
push
aad
push
push
mov
scas
loope
mov
clc
xchg
mov
adc
cmp
fcomp
jecxz
add
aam
and
(bad)
push
pop
mov
mov
hlt
add
mul
pop
sti
mov
loopne
push
scas
scas
aas
(bad)
out
(bad)
(bad)
jl
mov
push
sub
push
xchg
inc
sbb
and
cmp
cdq
inc
push
push
mov
jg
fisub
xor
arpl
push
imul
jmp
ret
mov
xchg
iret
cmp
adc
jbe
(bad)
loopne
and
lea
dec
jae
jge
das
mov
in
std
jno
pop
pop
or
test
ror
fimul
push
mov
adc
pop
mov
jae
das
js
fisttp
sub
leave
cmp
jl
or
cwde
outs
inc
dec
inc
mov
inc
mov
pop
mov
ss
jp
je
jo
cli
mov
in
push
daa
hlt
mov
adc
or
or
call
push
(bad)
out
mov
loope
loop
out
ins
or
mov
lea
out
retf
dec
ror
or
lods
mov
mov
mov
and
(bad)
aam
lahf
jb
in
and
hlt
mov
mov
aaa
pop
pushf
jno
test
inc
jle
out
inc
mov
sbb
jp
mov
dec
jne
pop
cmc
nop
jg
push
nop
jae
mov
add
push
adc
bound
push
mov
pop
push
fcomp
fadd
out
and
bound
jae
clc
mov
test
xor
(bad)
retf
cwde
dec
es
add
into
dec
mov
mov
add
adc
xor
movs
mov
adc
popf
or
dec
lahf
imul
in
fdiv
cdq
aad
jl
xor
inc
repz
pop
bound
inc
xor
jns
stos
xchg
gs
inc
repnz
xlat
cmp
cmp
fbstp
mov
xchg
mov
adc
arpl
jo
sbb
into
test
shl
stos
push
mov
mov
repnz
out
jbe
sub
ficomp
scas
mov
add
push
mov
and
shl
cli
push
xchg
in
mov
aad
inc
retf
jp
ret
xchg
cli
mov
(bad)
pop
les
jl
cs
out
or
ja
and
or
mov
add
out
les
es
cmp
push
pop
sub
jmp
cmp
xchg
sahf
pop
push
jge
dec
pop
cmp
xchg
xchg
or
cmp
xor
adc
inc
adc
out
mov
test
push
retf
mov
inc
mov
(bad)
popf
inc
ret
(bad)
xchg
rol
adc
sub
loopne
popf
sub
cdq
dec
sahf
mov
mov
bound
cmp
rcl
cmps
sub
rcl
jb
dec
sub
aas
mul
loop
inc
mov
dec
call
gs
mov
pusha
push
mov
hlt
jne
cmps
cld
inc
ds
lock
mov
inc
pop
mov
inc
sbb
ins
adc
aam
je
ret
jns
das
lahf
fdivp
imul
enter
dec
xchg
pop
dec
mov
dec
popf
push
cld
nop
inc
(bad)
fldcw
cdq
lock
pop
push
or
cwde
cli
jae
xor
shr
movs
mov
loope
in
mov
dec
and
(bad)
dec
fistp
lahf
cmp
call
jg
inc
mov
sahf
push
push
push
mov
loopne
or
lods
mov
mov
cmc
sub
mov
inc
fld
push
dec
mov
fsubr
stos
adc
sub
xchg
sub
das
mov
xchg
sub
pop
inc
aaa
pop
inc
xchg
and
cmps
retf
dec
retf
aaa
imul
pop
cmp
jecxz
hlt
fnstenv
mov
imul
add
push
add
mov
data16
and
xor
test
ins
pop
lock
sub
or
xor
add
dec
push
pop
aam
dec
les
shl
test
xor
scas
mov
and
inc
fwait
jl
(bad)
out
fs
and
out
adc
add
rcr
pop
jecxz
push
mov
inc
add
fist
or
test
int3
pop
not
push
push
retf
retf
mov
gs
mov
xor
jno
or
jb
outs
test
loopne
add
(bad)
and
mov
dec
xchg
js
inc
ret
dec
aam
or
ins
adc
jg
xor
hlt
push
jge
cmp
je
out
cmc
adc
retf
mov
push
loop
pop
jmp
outs
repnz
mov
in
lods
or
xchg
ja
mov
in
mov
movs
xor
mov
push
or
cmp
sbb
(bad)
div
add
xor
sbb
jl
repz
fwait
xchg
xor
es
popf
iret
dec
cmps
in
in
movs
xchg
ds
pop
pop
mov
inc
sub
xchg
test
xor
lds
jle
inc
aam
mov
cmps
outs
je
stos
mov
xchg
leave
dec
rol
push
in
addr16
ret
cmp
mov
sbb
je
imul
clc
jb
jge
xchg
push
jns
xchg
inc
nop
cmp
cmps
test
mov
dec
popa
jmp
or
out
xchg
iret
xchg
dec
adc
pop
in
nop
mov
les
pushf
lods
adc
push
xor
or
xor
pop
pop
mov
movs
pushf
sbb
push
xor
cmp
lock
dec
cmp
push
mov
push
in
(bad)
adc
call
mov
in
jnp
fsubr
dec
mov
inc
loope
push
scas
jmp
in
xchg
and
cld
dec
cdq
in
push
and
cmp
and
call
mov
xchg
movs
jmp
mov
push
test
in
ins
fwait
aad
in
aaa
mov
nop
cmc
push
lods
lea
mov
pop
mov
sub
adc
int
rol
movs
add
mov
and
aam
das
jmp
fs
add
xchg
daa
addr16
cwde
jg
mov
jmp
sbb
out
sbb
jae
mov
cmp
xchg
outs
(bad)
popa
fbstp
clc
jl
mov
pop
shr
or
push
jge
mov
lods
push
jl
jno
dec
adc
jle
mov
sub
cmp
scas
xchg
sbb
or
repnz
retf
jle
shr
mov
mov
(bad)
jmp
iret
jmp
cmp
add
xor
xor
pop
hlt
fdiv
(bad)
adc
mov
jecxz
seta
scas
and
pop
ja
sub
hlt
daa
test
mov
cmc
sub
and
outs
sub
ret
sub
lods
call
sbb
pop
movs
cld
adc
idiv
or
hlt
mov
lods
(bad)
sub
add
pop
and
ror
mov
push
int3
mov
cmp
xchg
mov
dec
and
xor
repnz
xchg
div
mov
pop
inc
mov
cmp
rcl
and
cmp
outs
or
cwde
xchg
and
nop
sbb
adc
sbb
and
sub
addr16
cs
repnz
mov
mov
movs
std
pop
jo
inc
retf
lods
dec
sahf
test
lods
pop
int
dec
scas
scas
dec
ror
std
cli
ret
jmp
popf
mov
mov
test
xor
out
sub
jmp
add
pusha
das
jl
pop
fild
adc
ffree
nop
jns
stc
mov
adc
adc
movs
mov
pop
jp
xor
fld
push
add
out
adc
ja
xchg
mov
ja
mov
push
addr16
mov
sbb
ins
lods
aas
mov
xchg
shr
or
adc
dec
inc
and
mov
lods
xor
aaa
jl
jns
sub
pop
loope
add
nop
(bad)
aad
push
sub
inc
movs
and
inc
add
mov
fstp
pop
push
push
and
mov
pop
sub
xchg
inc
popa
and
in
xchg
pop
repz
and
mov
mov
mov
mov
div
pusha
shr
fisub
mov
ror
in
dec
fsub
jge
or
int3
xchg
push
aam
inc
xchg
ret
aam
neg
hlt
call
sar
jns
shl
imul
loope
push
shl
push
dec
sub
(bad)
aaa
push
push
test
cli
outs
icebp
nop
cdq
loope
xor
js
out
loopne
out
jecxz
sbb
jmp
(bad)
shr
stc
popa
jae
mov
jge
(bad)
inc
add
push
jne
xor
shl
in
or
test
jbe
mov
xor
retf
xchg
ss
fidivr
inc
test
pop
lods
and
adc
xchg
in
xor
add
pop
push
iret
leave
mov
and
push
(bad)
dec
std
xor
sub
outs
test
mov
daa
jb
xchg
dec
sbb
fnsave
mov
gs
or
addr16
push
dec
inc
jmp
xor
inc
jb
or
push
movs
fptan
div
stos
popf
daa
repnz
retf
mov
stc
mov
iret
jb
cmp
jb
xor
and
ds
popf
and
stos
sub
and
sub
push
(bad)
inc
jbe
(bad)
mov
lock
popa
neg
(bad)
(bad)
ins
xor
mov
icebp
add
inc
mov
aad
cmps
mov
mov
std
(bad)
(bad)
aas
in
push
scas
mov
cmp
xchg
(bad)
push
sbb
lock
mov
xchg
xor
lahf
jmp
nop
mov
sbb
stos
cmp
lds
xchg
outs
in
cdq
in
leave
sub
pop
and
and
mov
fstp
xchg
xchg
adc
fsubr
sub
stos
shl
xchg
loopne
sub
adc
shl
or
cmps
and
jle
or
pusha
aad
jae
push
call
je
xor
jmp
loop
mov
xchg
icebp
shr
repz
not
add
popa
fs
adc
in
sub
repnz
das
aam
dec
fmul
bound
mov
retf
xor
xlat
aas
arpl
cmp
xchg
pushf
iret
xor
cld
cmps
fld
lock
fs
jmp
in
cs
lds
ficomp
sbb
pop
in
xchg
aaa
xchg
inc
adc
add
inc
adc
or
mov
cmp
cmps
rcl
sub
dec
mov
or
or
out
(bad)
ficom
xor
inc
or
inc
outs
mov
sysret
jle
cdq
mov
jae
inc
mov
cmp
xor
sbb
mov
mov
push
call
mov
fild
clc
jne
int3
aam
mov
and
fild
pop
ret
popa
add
iret
popa
cmp
push
out
(bad)
clc
sbb
adc
out
cdq
leave
cs
xchg
popa
fdiv
dec
lea
and
cmps
xchg
push
lds
dec
dec
sbb
jno
mov
imul
push
clc
add
sub
iret
xchg
fimul
mov
shl
shl
inc
clc
push
in
sbb
jno
mov
cdq
sbb
leave
clc
mov
dec
jecxz
(bad)
sti
outs
jge
mov
popf
imul
addr16
daa
jmp
pop
cmp
and
sub
pusha
mov
xchg
icebp
pop
leave
stc
retf
iret
add
push
sub
cld
add
add
and
mov
repz
dec
mov
xchg
jge
int3
dec
sar
xor
sub
or
xor
outs
pop
inc
mov
inc
pop
out
inc
mov
jp
adc
jmp
loope
pop
jmp
outs
in
and
and
jbe
mov
inc
push
xchg
retf
or
sbb
in
jbe
pop
push
jbe
add
cmp
add
out
(bad)
cmps
dec
add
mov
cmc
cmp
aaa
dec
out
call
xor
fidiv
call
sub
repnz
cmps
leave
pop
mov
cmp
dec
mov
sbb
addr16
jmp
(bad)
fnstcw
and
cs
push
push
sbb
adc
mov
cmp
mov
scas
xor
ds
shl
adc
loop
in
out
add
fnsave
repz
pop
jno
sbb
pop
sbb
mov
out
int
xchg
cmovb
sbb
and
retf
add
or
bound
xor
fldcw
in
retf
pop
ins
aad
jecxz
int
cld
mov
mov
and
mov
cmp
push
(bad)
adc
mov
mov
pushf
push
jge
js
push
jmp
or
jae
jle
or
jbe
add
in
push
in
sub
in
test
shr
sti
push
add
cld
mov
xor
push
cwde
dec
fcomp
cmp
(bad)
cmc
jns
rcl
push
push
add
shl
xchg
shl
ror
fs
adc
jno
xchg
or
pop
loope
mov
loopne
xchg
(bad)
repnz
jle
jmp
sub
icebp
std
jno
(bad)
in
div
cwde
nop
push
pop
mov
jne
pop
push
mov
sub
bound
ins
mov
adc
sahf
aaa
rcr
data16
pop
dec
adc
in
sbb
inc
popf
aad
or
fadd
jmp
xor
mov
inc
popa
cmc
adc
data16
in
xchg
xchg
movs
lea
sub
(bad)
add
jle
lods
into
inc
xor
call
inc
imul
pop
pop
and
sbb
sbb
fsubr
int
and
inc
addr16
dec
aam
in
pop
inc
icebp
push
js
loopne
or
cld
icebp
and
loop
xchg
fwait
stc
aaa
ret
mov
(bad)
in
mov
or
std
loop
dec
fwait
dec
repnz
xor
push
enter
fistp
xchg
cmova
cli
test
sub
(bad)
mov
dec
or
mov
inc
jmp
fnstsw
mov
(bad)
js
cs
and
jae
or
pop
ret
jecxz
scas
and
stos
mov
popf
ds
pusha
sbb
cmps
jo
jnp
cmp
and
mov
add
xchg
aaa
and
or
(bad)
outs
cmc
outs
push
stos
test
or
inc
ss
adc
mov
mov
ins
iret
cmps
cwde
push
inc
imul
xchg
je
pop
scas
repz
scas
into
cmps
cs
test
bound
ins
xchg
or
fsub
xor
jbe
push
lods
ss
out
or
into
xchg
sub
mov
fcomp
enter
dec
mov
mov
jo
imul
cmc
fbstp
adc
pop
mov
jae
jg
and
dec
fdiv
push
xchg
fidivr
push
call
out
add
ror
jp
pop
jecxz
or
stos
outs
jne
enter
out
add
inc
mov
enter
jl
jle
je
mov
pop
cs
(bad)
fld
pop
mov
dec
sub
rcr
cmps
lahf
push
xchg
test
call
mov
cmp
mov
adc
ss
sub
xchg
je
adc
scas
nop
push
retf
sbb
mov
ds
xor
sub
or
push
(bad)
fdiv
sar
call
mov
outs
inc
(bad)
mov
xchg
jp
fcomp
mov
loope
(bad)
jmp
mov
lea
adc
inc
and
dec
xchg
and
xchg
xchg
lock
stos
mov
mov
jmp
push
sub
lods
arpl
and
pop
icebp
and
dec
test
mov
pop
rcl
cmp
fisttp
fisttp
adc
ret
xchg
(bad)
rol
mov
adc
inc
xchg
and
sub
cwde
stc
or
mov
mov
dec
pop
in
push
movs
dec
jp
push
mov
pop
jne
daa
scas
es
aam
mov
lds
(bad)
cmps
js
mov
out
mov
pusha
dec
lock
cmp
pusha
mov
jmp
and
add
sub
or
aam
pop
enter
sbb
and
test
stc
scas
xchg
pop
jle
and
mov
ror
mov
adc
jnp
clc
js
inc
cs
arpl
ja
add
jne
jbe
adc
cwde
pop
fistp
add
inc
pop
aad
cdq
shr
push
jl
es
xchg
sbb
or
sub
icebp
cdq
push
cmp
inc
lahf
aad
mov
mov
mov
mov
sub
neg
pop
jmp
xchg
mov
stos
sbb
mov
pop
jbe
adc
cmc
push
loop
in
fldcw
dec
mov
stos
inc
or
in
sub
fnstsw
jnp
xchg
scas
mov
inc
jge
stos
mov
(bad)
cwde
xchg
and
fistp
jne
out
push
mov
mov
dec
lds
rcl
and
arpl
test
mov
inc
test
loope
shl
or
outs
push
aad
mov
push
dec
mov
inc
mov
inc
pop
repnz
iret
clc
jecxz
movs
cwde
outs
mov
and
pop
inc
pop
sbb
mov
pop
call
mov
dec
xor
(bad)
pop
vmulps
xor
rcr
push
outs
inc
push
push
and
rcr
jg
(bad)
adc
in
jmp
es
push
or
fnstcw
pop
sbb
js
push
fisub
(bad)
rol
clc
jmp
sub
jo
daa
lahf
dec
ror
lea
test
sahf
es
mov
sub
push
xchg
inc
repnz
or
in
mov
mov
scas
ret
data16
push
addr16
out
cmp
cmp
hlt
jno
icebp
push
pop
popaw
push
mov
xchg
push
jae
inc
movs
pop
pop
imul
nop
and
xor
ds
cmps
aaa
outs
ret
enter
ds
lock
test
xor
shl
jb
jmp
cmc
daa
dec
pop
outs
push
mov
jp
out
in
xchg
push
(bad)
add
pop
sub
inc
mov
mov
int
aad
sub
stos
ret
xor
xchg
mov
or
in
ins
fcmovbe
call
out
mov
(bad)
fsubr
pop
shr
fbstp
stos
cmp
sbb
ret
or
cmp
test
mov
fidiv
pop
(bad)
or
pop
push
mov
bound
aas
add
(bad)
jne
sub
inc
retf
stc
mov
inc
cli
addr16
jmp
fdiv
arpl
fiadd
mov
mov
mov
dec
out
mov
lods
and
(bad)
jecxz
mov
inc
push
fiadd
dec
std
mov
mov
dec
or
in
(bad)
loope
test
xchg
pushf
pop
in
out
jne
in
fdiv
cs
dec
jne
mov
xchg
arpl
imul
jp
repz
scas
and
mov
mov
jno
dec
mov
pusha
pop
lea
imul
repz
mov
add
ins
icebp
test
aaa
and
aad
jnp
mov
sbb
sbb
sub
in
add
shl
scas
push
inc
jbe
call
adc
xchg
sub
jle
inc
jge
cli
pop
pushf
inc
cmp
jae
xor
mov
mov
xchg
rcl
jbe
sbb
scas
clc
and
pop
pop
mov
aaa
lahf
dec
push
or
adc
inc
sub
pop
ds
data16
jmp
mov
xchg
push
icebp
mov
imul
lea
cmp
or
pop
mov
mov
out
(bad)
xor
push
out
jno
psraw
or
sub
add
std
xor
fbstp
inc
adc
lods
jb
lds
mov
or
ins
stos
in
sub
clc
jb
pop
in
adc
xor
mov
fwait
mov
cmp
in
shl
sub
fcomp
pop
dec
ds
add
ja
and
xchg
mov
mov
add
xchg
std
emms
add
retf
in
stc
ficom
mov
psubw
ror
mov
mov
inc
les
adc
test
mov
pop
(bad)
ja
and
mov
sar
inc
loope
test
dec
cmp
iret
pop
mov
in
xor
fdivr
or
pop
and
jmp
int3
add
cmp
dec
adc
mov
daa
fcmovb
or
fild
(bad)
fdivr
mov
(bad)
lods
mov
xchg
pop
(bad)
mov
xor
adc
mov
mov
pop
outs
xchg
or
movs
jp
fsubrp
jae
or
push
xchg
inc
lds
add
xchg
popf
mov
jae
lods
rcr
mov
movs
into
mov
or
jge
js
aaa
mov
jbe
fnsetpm(287
outs
jns
fidivr
pop
je
mov
add
repz
fstp
fnsetpm(287
jae
jo
loope
cmp
fisttp
adc
sbb
push
push
cli
out
push
aad
pop
cmp
ds
add
ds
rcl
in
shl
adc
loope
gs
loope
add
xchg
add
scas
in
repz
(bad)
jmp
fs
pop
dec
add
push
mov
fadd
mov
and
je
add
jb
mov
popf
mov
out
in
dec
repz
pop
and
mov
movs
popf
xchg
loop
(bad)
fwait
mov
test
ds
inc
adc
in
ins
jne
test
lods
bound
repnz
pop
push
(bad)
(bad)
mov
sbb
inc
xchg
and
adc
das
mov
int3
loop
inc
and
imul
lock
add
mov
movs
pusha
cmp
and
inc
dec
rol
jmp
push
add
in
cmp
xchg
and
mov
jb
adc
inc
adc
dec
push
pop
jb
xlat
outs
fwait
sub
dec
lods
or
mov
pushf
ret
dec
in
jg
outs
stos
outs
lods
cmp
(bad)
or
xor
mov
cmp
ret
loope
push
jbe
jg
inc
sbb
outs
xor
add
(bad)
inc
or
mov
arpl
push
in
aad
sub
adc
mov
pop
dec
lds
push
or
fsub
cs
add
mov
cld
add
mov
popa
and
cmp
out
pop
or
cdq
mov
scas
sti
or
frstor
sbb
pop
pop
sbb
add
xchg
sub
or
sub
jle
test
outs
sub
dec
mov
cdq
in
mov
xor
inc
xchg
cmc
push
imul
add
fwait
adc
push
or
adc
jmp
in
mov
dec
cmp
cmps
add
fwait
cdq
aam
pop
and
out
out
mov
add
cmps
leave
outs
movs
jg
nop
add
pop
lods
mov
inc
sbb
dec
ret
push
imul
xlat
or
push
dec
mov
ficom
mov
and
neg
xchg
das
jns
pushf
mov
xor
mov
call
xor
aas
dec
push
das
push
icebp
outs
cmps
aam
xchg
fld
cmps
aaa
repnz
pop
mov
ins
idiv
loopne
jmp
cld
imul
cmps
push
fld
adc
out
cmp
or
es
xor
js
mov
add
push
mov
jne
stc
inc
icebp
(bad)
imul
xor
mov
mov
and
jg
mov
(bad)
lea
outs
ja
int
cdq
xchg
call
sub
ffree
push
fadd
sbb
shr
repz
or
aas
adc
jnp
sub
cmps
mov
lods
iret
shr
dec
add
push
add
pop
call
mov
lock
push
mov
cmp
xchg
retf
call
sti
jmp
fwait
(bad)
fisub
jge
scas
push
xor
aas
in
cmp
(bad)
lea
xchg
push
or
or
mov
inc
movs
test
xor
rcl
mov
aaa
mov
push
fiadd
add
xlat
xchg
or
int
xor
add
shl
add
dec
jecxz
jge
mov
test
adc
fsubr
hlt
inc
xchg
or
imul
loope
dec
outs
pusha
adc
push
mov
push
mov
adc
mov
aam
leave
mov
cmps
out
ins
or
sub
in
jl
push
imul
mov
sbb
outs
inc
jns
pusha
cmc
pop
popa
bound
dec
mov
mov
loop
cs
(bad)
lods
xchg
inc
test
sub
cmp
(bad)
outs
(bad)
xor
mov
or
xlat
cmp
in
in
push
popa
mov
mov
xchg
sbb
aaa
mov
call
in
das
and
xor
in
xor
pushf
cmps
iret
scas
cdq
cmovl
scas
adc
sub
mov
or
pop
dec
xchg
lahf
jmp
shl
jnp
pop
dec
add
dec
scas
pusha
mov
inc
dec
lods
fcomip
cli
test
jnp
pop
jmp
cdq
pop
dec
mov
vphaddudq
jmp
cs
sbb
fimul
cs
mov
mov
(bad)
mov
dec
cdq
imul
xor
dec
push
enter
sub
push
out
cdq
jp
inc
cmp
icebp
push
lods
and
imul
ret
and
fidiv
imul
add
sub
loopne
out
xlat
lock
jmp
ret
add
cmp
lock
cmp
out
hlt
neg
dec
sub
sub
out
jae
stos
inc
aaa
cmps
cmp
inc
sub
adc
inc
push
cli
cs
mov
push
cmp
xchg
ins
lods
adc
mov
dec
(bad)
xchg
je
jae
ss
add
cmp
aas
lods
ds
xor
sub
sbb
mov
sbb
aas
jbe
pop
adc
imul
ds
and
cdq
add
fisub
fwait
popa
leave
nop
push
xchg
imul
cmp
rol
push
mov
retf
aas
add
and
aaa
or
mov
nop
ins
(bad)
neg
mov
sub
mov
jae
js
mov
sahf
and
xor
inc
cmps
call
cmp
test
shl
inc
jmp
adc
jb
sbb
aam
push
inc
mov
scas
mov
in
cmc
or
out
sub
test
xor
stos
scas
loop
jbe
pop
cmp
retf
pop
inc
clc
cmp
shl
scas
cmp
pop
dec
outs
mov
xor
retf
cmps
arpl
scas
hlt
push
adc
xchg
push
or
int3
and
in
push
jbe
push
(bad)
jns
jne
mov
pushf
xor
push
(bad)
sti
pop
cmps
inc
cmc
repnz
stos
call
push
xchg
test
push
sub
out
fmulp
cdq
ja
sahf
sub
add
jns
jmp
pusha
fcmove
mov
mov
jne
dec
mov
(bad)
xchg
outs
or
cdq
add
(bad)
ja
inc
xor
xchg
jmp
inc
sub
stos
mov
es
js
pop
xor
int3
lock
stc
push
scas
pop
xchg
mov
mov
add
outs
pop
aad
stc
xchg
and
inc
adc
cmc
shl
fcmovbe
shl
cwde
dec
fbld
and
test
rol
frstor
cmp
cmp
cli
cwde
sub
add
arpl
mov
xor
dec
jecxz
lods
add
jnp
jp
add
mov
mov
lods
add
mov
inc
xchg
dec
push
adc
mov
call
addr16
test
sub
repz
xor
xor
and
adc
fcmovu
jb
add
or
mov
mov
pop
fisub
jp
clc
mov
xchg
loopne
and
cmc
inc
sub
into
sbb
sbb
xchg
and
add
xchg
scas
mov
lahf
dec
cmp
ror
mov
adc
xor
fcomp
test
test
dec
shl
ret
adc
jle
(bad)
cs
or
movs
push
xor
xchg
jb
in
pop
cs
inc
in
mov
inc
mov
scas
or
rcr
lock
mov
inc
mov
jo
add
adc
repz
inc
inc
add
enter
std
xor
jg
call
and
cdq
scas
fimul
enter
xchg
or
add
outs
mov
loopne
xchg
out
in
daa
(bad)
cmp
push
mov
mov
jae
ret
mov
out
neg
and
out
mov
push
ins
or
jb
mov
mov
or
adc
and
cdq
push
dec
mov
ret
pop
shr
adc
push
ins
xor
adc
leave
and
xor
gs
inc
add
or
cmp
hlt
push
or
mov
js
lahf
test
mov
test
or
ret
sbb
dec
inc
adc
cmp
add
mov
jmp
sub
es
inc
test
into
xchg
dec
sti
fisttp
dec
xlat
call
scas
ret
push
xchg
loopne
fst
xchg
mov
and
and
pop
cld
and
(bad)
sub
mov
cmp
out
lods
xor
fiadd
into
(bad)
sub
and
and
or
xlat
call
inc
pop
and
adc
jmp
popa
xchg
ss
pop
sbb
pop
pop
inc
stc
push
mov
add
sbb
mov
stos
call
inc
jae
pop
and
inc
imul
fisttp
jmp
nop
jecxz
xchg
sbb
or
sub
inc
ficomp
push
push
retf
cmc
hlt
jle
ror
call
dec
rol
sub
loopne
enter
jmp
lods
jge
mov
lods
and
hlt
in
mov
retf
rol
test
(bad)
mov
es
mov
inc
aaa
cmp
lock
fstp
xchg
arpl
test
jo
pop
push
jg
mov
int
ja
psadbw
das
shl
inc
pop
ret
xchg
mov
inc
in
sub
push
push
imul
mov
retf
pushf
dec
test
dec
xor
xlat
pop
scas
adc
inc
frstor
sbb
shl
jge
jecxz
or
mov
push
xlat
push
jae
jne
xor
fdiv
nop
ins
test
jns
add
dec
push
lock
cdq
mov
xor
in
xor
or
xchg
adc
mov
fld
test
stc
mov
pop
cdq
inc
cmc
xchg
and
jno
mov
call
cmc
retf
jo
sbb
ins
test
push
xor
aam
xor
push
dec
lock
call
(bad)
lods
movs
mov
xor
mov
cwde
stos
fld
xor
iret
cmp
inc
fwait
mov
lock
dec
pop
call
adc
fwait
(bad)
xor
nop
inc
mov
pop
lods
push
mov
adc
shl
sbb
sbb
dec
jp
sub
js
std
bound
pop
aam
ficomp
push
sub
xor
les
sbb
mov
fsub
shr
adc
mul
adc
inc
add
and
cs
cmp
xlat
fstp
lahf
test
jecxz
outs
xor
add
mov
int
cmc
push
jno
mov
leave
xchg
les
jbe
mov
and
cmp
xchg
stc
xchg
mov
sub
add
mov
push
sbb
mov
pop
jmp
sbb
jmp
les
xor
cmps
or
mov
fcom
push
rcr
inc
mov
xchg
mov
sbb
daa
lods
mov
cld
dec
repnz
xor
lock
jnp
add
ins
add
(bad)
shl
pop
push
js
fs
sahf
dec
jb
cmp
in
push
adc
pop
into
jge
mov
jne
lahf
shr
push
ins
pop
sbb
addr16
inc
fmul
movs
cmp
xor
pop
fiadd
and
and
jns
push
or
cmp
leave
mov
jmp
or
jns
jp
js
jo
mov
data16
lds
adc
icebp
mov
sub
push
leave
inc
jecxz
retf
cmp
shl
mov
jae
add
cmp
jbe
pop
xor
jns
out
daa
jns
sbb
inc
jnp
push
sbb
lea
pop
mov
test
hlt
mov
xchg
push
jo
push
ss
jae
add
fadd
jg
push
les
pop
push
adc
lahf
and
push
xlat
nop
std
call
out
(bad)
sbb
inc
out
add
outs
jg
icebp
inc
or
and
mov
cs
jle
pop
fidivr
fwait
mov
icebp
sbb
xchg
sub
pop
aad
jl
gs
mov
repnz
jle
out
mov
cli
lods
mov
sbb
mov
sub
dec
jl
inc
adc
sbb
mov
xor
popf
(bad)
xor
je
or
loopne
sbb
rol
fadd
pop
fsubp
sti
movs
ins
ins
addr16
cs
lea
fs
mov
in
cmps
call
std
inc
repnz
jnp
ds
aaa
dec
pop
stos
fisubr
inc
or
aad
and
push
dec
jo
dec
inc
jbe
or
mov
dec
jmp
sub
jo
or
test
out
cmc
xchg
fwait
test
mov
cmp
stc
cwde
dec
mov
mov
push
test
push
in
int
sub
call
or
enter
repz
daa
xchg
xor
mov
jo
pop
loope
or
mov
scas
in
bound
arpl
imul
pop
je
xor
xor
aad
xor
lahf
cmps
in
cmp
in
mov
cmc
add
or
dec
frstor
in
mov
dec
in
shl
xor
inc
jnp
fidivr
mov
mov
call
ds
lds
mov
lods
outs
add
test
jmp
jmp
push
sub
dec
enter
add
or
push
push
and
jno
fdivp
or
nop
(bad)
and
sub
fidiv
std
fs
outs
outs
bound
(bad)
jp
inc
mov
sbb
mov
daa
xchg
xchg
or
or
push
pop
xchg
pusha
call
jne
xor
sub
int3
daa
(bad)
std
push
add
mov
inc
or
pop
push
dec
ins
jp
arpl
xchg
sbb
xor
popa
das
es
mov
ja
js
inc
shl
iret
cmp
outs
xlat
sub
std
pop
outs
pop
mov
popf
hlt
imul
fnstsw
cmp
and
ins
pop
mov
cwde
add
or
mov
outs
mov
pop
imul
int3
lea
repz
cmc
fwait
push
shl
jp
dec
mov
mov
repnz
mov
(bad)
test
pop
imul
(bad)
loop
ins
mov
imul
int3
xlat
ins
out
mov
adc
xchg
outs
fbld
cld
imul
int
popa
es
push
xor
retf
jmp
and
jb
and
stc
out
jmp
adc
lahf
ss
pop
push
xchg
add
mov
scas
mov
and
add
sti
out
jg
popa
outs
adc
sbb
loope
jbe
xchg
(bad)
jmp
mov
inc
mov
lea
pop
test
daa
clc
pop
and
gs
pusha
inc
js
daa
mov
and
xor
jbe
fst
ss
xor
xchg
mov
jae
shl
pop
adc
inc
xor
arpl
retf
or
(bad)
mov
ins
cmc
popf
sbb
jnp
mov
xchg
jle
inc
push
add
push
mov
dec
fwait
mov
out
arpl
rcl
or
cmp
imul
retf
sbb
dec
add
scas
test
pop
loope
mov
getsec
mov
out
jae
aam
les
clc
mov
arpl
xor
pop
mov
dec
jmp
in
cmps
inc
fild
jmp
dec
repz
out
jge
in
cmp
push
call
and
pop
jbe
jae
stc
(bad)
mov
jl
ss
xchg
add
adc
adc
pop
jno
scas
push
add
xor
dec
sbb
jg
daa
xchg
repnz
pop
mov
loope
cmps
jbe
xor
in
mov
dec
std
lock
dec
bound
push
in
pop
mov
cmp
cmp
xchg
xor
popa
mov
les
imul
gs
pop
pop
xor
mov
iret
dec
sbb
das
pop
push
cmps
xchg
cld
sub
inc
or
sub
nop
jb
aad
mov
int3
jmp
aam
xchg
cwde
jae
and
fidiv
iret
nop
pop
data16
mov
loope
xchg
sahf
mov
inc
inc
or
sbb
icebp
jne
loop
loopne
mov
popa
ret
imul
mov
add
mov
pop
push
out
sbb
push
dec
jbe
sahf
xchg
mov
fdiv
out
dec
lahf
bound
retf
test
inc
xchg
jb
push
cmc
mov
adc
stos
pop
ret
fnstcw
or
sbb
mov
int
fcmovnb
daa
inc
pop
and
fldenv
xor
xchg
out
fimul
mov
inc
cmp
push
mov
mov
jge
daa
in
sbb
pop
sub
sub
push
push
sahf
mov
xor
into
dec
jae
add
imul
out
jmp
enter
xlat
xor
sbb
leave
jle
sub
cdq
cmp
dec
cmp
push
pop
clc
hlt
int
jl
push
cwde
out
cmp
push
dec
cmp
jg
mov
push
sbb
cmp
push
test
into
jmp
add
adc
push
pushf
and
mov
xor
repnz
cmps
in
add
jnp
dec
sbb
je
mov
jne
call
xor
out
mov
inc
je
push
cmps
call
dec
mov
lahf
cmp
push
gs
sbb
inc
enter
out
mov
push
popf
jl
cmp
loop
jb
je
frstor
mov
jg
ds
jp
test
dec
and
jne
lea
gs
xor
aam
push
stos
in
(bad)
jmp
mov
inc
aad
mov
aas
inc
sbb
mov
mov
xor
mov
scas
out
pop
(bad)
in
inc
mov
inc
or
aaa
xor
std
mov
push
fisttp
cdq
jbe
or
sbb
inc
jmp
in
fistp
outs
in
out
cmc
push
call
adc
int3
pop
retf
aaa
je
inc
repz
dec
jle
scas
out
fcmovnu
in
pop
adc
stc
ficomp
in
popa
retf
xchg
adc
cmp
mov
and
hlt
sub
jl
and
(bad)
or
push
sahf
inc
mov
stc
(bad)
push
scas
jnp
cmp
lods
mov
dec
repnz
inc
cmp
xor
stc
mov
mov
ss
dec
fwait
scas
sbb
push
je
xchg
push
stos
pop
sbb
jae
aam
mov
jle
and
aad
popf
mov
sti
inc
int
inc
and
aas
or
retf
adc
mov
mov
test
popf
mov
and
sub
addr16
mov
add
(bad)
jle
mov
or
nop
or
cwde
inc
lahf
cmp
push
aad
je
cld
push
jo
mov
stos
push
push
mov
pop
sub
shr
jb
and
dec
cmp
out
lods
push
jmp
push
inc
xor
aaa
pop
inc
push
shr
and
test
add
loope
or
dec
retf
in
pop
idiv
ret
dec
mov
cmps
pop
dec
jae
or
js
xlat
push
push
mov
mov
cmp
ds
imul
inc
(bad)
xor
mov
repz
add
xchg
mov
int3
ret
repz
loope
jle
add
and
(bad)
lock
push
and
cmp
fcmovbe
cmp
or
call
ja
mov
frstor
test
aad
out
jno
xchg
xchg
in
sbb
dec
xor
xchg
push
bound
rcr
push
pushf
jae
pop
fwait
or
nop
sub
daa
sbb
xchg
(bad)
push
jns
jb
inc
xchg
mov
jmp
jp
sbb
not
mov
fidiv
or
fcom
jmp
pop
popa
cmp
stos
ror
test
stos
lock
ror
xlat
in
fcom
cmc
retf
add
mov
rcr
and
fisubr
push
add
mov
daa
aad
push
add
and
mov
jno
out
adc
lahf
xor
stc
ror
das
xchg
dec
sbb
stos
mov
mov
pop
call
daa
imul
cmp
and
out
test
mov
xchg
add
nop
in
repnz
dec
mov
test
(bad)
fst
add
hlt
mov
icebp
mov
push
xor
sub
add
enter
mov
xor
mov
sub
call
inc
shl
mov
ss
pusha
add
jb
dec
jl
pop
cmp
aam
shr
mov
cli
jl
lods
sbb
aas
pop
icebp
mov
and
push
fdiv
outs
or
aam
repnz
leave
xor
hlt
addr16
cmp
or
jb
dec
xchg
sar
and
xor
add
jae
push
jae
cmp
sar
xchg
jmp
in
mov
int
jge
daa
xor
fmul
imul
in
mov
or
dec
inc
hlt
mov
xlat
dec
inc
outs
cld
call
mov
imul
int3
xchg
cmp
jecxz
pusha
sahf
xchg
cli
and
jns
dec
fst
loopne
addr16
lods
xchg
mov
or
iret
adc
pop
mov
mov
dec
pop
or
icebp
pop
add
fimul
dec
push
arpl
loope
aad
or
vhaddps
pusha
sbb
ret
xchg
xor
scas
push
inc
int3
mov
(bad)
cmps
call
mov
add
int
or
cmps
ret
stos
sbb
fwait
add
mov
sahf
mov
dec
shr
mov
jmp
in
aad
mov
cmp
adc
enter
xor
cmp
adc
cmp
mov
dec
outs
(bad)
dec
js
inc
or
mov
cli
inc
jp
jno
sbb
mov
test
(bad)
jmp
mov
inc
int3
inc
pop
xchg
mov
ret
mov
scas
add
cdq
push
jns
mov
adc
mov
rol
sti
mov
lods
sub
pushf
add
int
mov
inc
mov
mov
aad
adc
push
movs
xchg
inc
sub
pop
xchg
icebp
fdiv
and
aad
and
aam
pop
call
cmc
adc
mov
add
ins
cwde
ffree
sbb
add
sar
scas
cmp
xor
push
jecxz
shl
je
mov
enter
shl
test
or
mov
mov
test
ret
jno
cmp
push
inc
adc
mov
cmp
rol
fs
(bad)
mov
stos
(bad)
loope
sti
ds
imul
inc
shl
pop
iret
mov
mov
add
mov
in
adc
xchg
loopne
push
push
mov
or
sub
pusha
mov
cmp
adc
into
jb
idiv
aas
adc
inc
and
push
outs
leave
xchg
std
jno
push
std
stos
std
imul
in
dec
fmul
les
or
arpl
xlat
nop
(bad)
inc
fild
pop
jecxz
or
cld
in
push
movs
inc
ins
push
movs
sbb
adc
xor
inc
and
inc
mov
xchg
push
daa
mov
push
jl
sbb
dec
jno
push
mov
out
and
out
loopne
pop
retf
xchg
xor
bound
add
leave
(bad)
inc
(bad)
push
inc
sub
out
rcl
imul
aaa
push
js
loope
cli
inc
mov
push
mov
pop
jl
mov
fstp
push
adc
enter
mov
sbb
cdq
(bad)
fadd
(bad)
cmp
push
add
inc
cmp
sub
pop
jnp
mov
or
loopne
jae
mov
or
pushf
push
mov
cld
add
pop
mov
jge
xchg
je
sub
mov
das
pop
lods
popf
pop
ret
lds
fwait
pop
ror
test
mov
unpckhps
cmp
cmp
out
not
imul
neg
adc
xor
pop
int
sbb
icebp
or
add
dec
mov
mov
xor
(bad)
aam
idiv
stos
push
les
mov
or
scas
je
mov
out
or
(bad)
js
mov
pop
lea
mov
icebp
or
mov
mov
popf
pop
test
icebp
je
mov
rcr
das
push
lods
mov
fdiv
cmps
stos
jmp
adc
sti
xchg
out
fbstp
cld
out
pop
jle
outs
jne
inc
xor
sbb
rcl
lds
adc
mov
push
inc
mov
jno
dec
pop
dec
lods
aas
stc
and
push
and
cmps
dec
mov
stos
xchg
pop
lods
pop
ss
or
xor
or
cmp
pop
icebp
ins
adc
adc
lods
mov
adc
dec
inc
dec
setl
cmp
mov
dec
mov
sbb
add
jnp
pop
push
xchg
add
retf
or
inc
mov
stc
jmp
aad
mov
lock
add
xchg
leave
loopne
add
(bad)
jb
push
xchg
sbb
lea
stos
add
xchg
inc
leave
aam
in
adc
mov
sub
das
cmps
pop
ins
cli
in
and
data16
sub
pushf
or
mov
mov
cdq
adc
mov
ror
pusha
rcl
add
test
adc
or
mov
xchg
add
out
mov
cld
ja
or
dec
je
test
fdivr
leave
rcl
test
push
inc
cli
xlat
or
sub
mov
or
push
std
or
cli
lahf
xor
jno
jae
xor
inc
or
aaa
imul
pop
leave
dec
xor
aam
rcr
ror
sub
push
sahf
int3
mov
sahf
xor
retf
mov
xlat
jo
shr
sti
test
retf
(bad)
cmp
or
add
inc
mov
je
mov
jmp
mov
push
fisub
addr16
dec
jl
ficomp
mov
data16
dec
xor
mov
push
cdq
jb
pop
dec
retf
test
cmps
adc
pop
mov
push
sub
(bad)
test
inc
jmp
or
push
mov
xor
mov
xor
cmps
cmp
popa
adc
push
in
(bad)
fcom
inc
or
and
and
inc
dec
rcl
mov
lock
adc
js
imul
inc
mov
jno
scas
pusha
in
and
add
xor
icebp
data16
inc
sub
es
xchg
xlat
mov
mov
in
or
mov
mov
shl
call
outs
aad
jns
out
push
js
mov
idiv
dec
jmp
sub
cmp
xchg
xchg
sub
xchg
jmp
mov
inc
xchg
sub
test
mov
push
(bad)
ss
xchg
jb
inc
cwde
cmp
cmp
stos
or
and
imul
stos
inc
xor
add
sub
xchg
adc
or
repz
inc
repnz
cld
retf
jns
mov
mov
xchg
push
mov
cmps
dec
and
xchg
jno
dec
mov
call
call
adc
ins
call
jb
mov
add
(bad)
mov
les
push
jne
adc
sub
mov
mov
mov
ss
mov
xchg
jns
push
aaa
sub
sbb
cmp
pop
outs
jp
xchg
xchg
(bad)
and
and
or
mov
push
mov
sub
xchg
cmp
mov
scas
sbb
ds
jno
xchg
ret
out
push
test
push
gs
aaa
sbb
xor
sub
pop
pushf
rol
mov
aas
cmp
retf
mov
out
mov
xor
enter
push
bound
mov
or
cld
sub
jbe
lea
scas
cmps
xor
shl
out
movs
arpl
push
mov
xor
inc
rcr
push
xlat
jne
adc
retf
fwait
mov
shr
pop
js
mov
pop
rol
mov
add
dec
enter
es
sub
jg
push
icebp
xchg
pop
cvtps2pd
pushf
mov
les
xchg
mov
push
adc
pop
jg
cmps
(bad)
loopne
mov
clc
dec
gs
scas
adc
addr16
cdq
int3
mov
xchg
(bad)
mov
movs
popa
vmovaps
cmps
mov
mov
mov
dec
es
xchg
aas
pop
inc
lods
cmp
xor
jbe
out
rcr
xchg
sub
idiv
movs
cmp
jmp
mov
adc
cmps
ror
xchg
mov
add
push
mov
dec
in
test
inc
dec
push
mov
pop
inc
jbe
loopne
(bad)
aad
mov
dec
imul
xchg
adc
xlat
mov
popf
(bad)
dec
sub
std
out
lea
sbb
xor
adc
rol
push
outs
mov
aam
jmp
mov
adc
mov
or
xchg
cdq
movs
hlt
mov
adc
cs
cmps
sbb
mov
inc
or
fiadd
sahf
iret
push
jae
fcom
push
mov
inc
arpl
mov
push
cmps
out
ins
and
test
push
xor
or
arpl
mov
jne
sub
in
jno
and
shr
sti
jne
push
fild
fstp
xchg
inc
jmp
popa
pop
mov
(bad)
lods
jp
xor
test
popf
dec
mov
in
pop
lock
scas
pop
repnz
xchg
inc
bound
dec
(bad)
aas
sub
mov
pop
cmp
mov
adc
das
push
xchg
cmps
dec
push
dec
pop
scas
dec
and
repnz
mov
cs
push
inc
aas
ret
cmps
ror
enter
xchg
ins
inc
or
mov
pop
mov
mov
add
xchg
push
mov
scas
ins
dec
sub
test
mov
enter
mov
mov
push
test
sbb
ins
test
push
ss
into
mov
fisub
loop
mov
fprem
mov
sahf
lods
in
ins
cmp
mov
loop
xor
sub
push
retf
xchg
stc
cli
and
arpl
cmp
mov
sbb
rol
mov
sub
inc
and
(bad)
pop
scas
into
cmp
inc
mov
fidiv
stos
enter
push
xor
adc
sbb
ret
push
imul
sbb
push
aad
out
pushf
cmp
popa
sub
popa
mov
icebp
das
or
cmp
aas
(bad)
mov
mov
sub
mov
jl
out
in
and
mov
in
test
push
adc
(bad)
loope
pushf
or
outs
int
imul
or
mov
daa
and
inc
add
mov
xchg
push
imul
repnz
out
adc
sub
dec
mov
or
lods
movs
add
mov
in
test
in
dec
aad
cs
push
and
and
data16
lahf
sub
sbb
fimul
icebp
cwde
cwde
lock
gs
dec
mov
pop
add
in
xor
cli
pop
clc
shr
repz
ins
aam
mov
mov
fbld
(bad)
mov
repz
sub
or
mov
repz
cld
dec
or
xchg
mov
loope
aam
into
cmps
pop
mov
retf
retf
mov
in
aam
outs
fst
xchg
add
push
hlt
ds
js
sbb
data16
mov
call
std
out
and
inc
jecxz
xchg
xor
jecxz
dec
add
push
pusha
fdiv
push
cmp
fdiv
sub
test
lock
xor
pop
aam
fild
mov
jp
(bad)
enter
sub
xor
xor
pop
pop
clc
cmp
adc
inc
fcomi
and
out
pop
mov
xor
push
mov
xor
jmp
sbb
test
xchg
add
push
aam
or
stc
sahf
lock
mov
pop
and
fcmovu
cmp
sub
dec
cmp
inc
pop
(bad)
or
xor
push
jl
imul
fsub
je
out
hlt
mov
or
lea
jno
cwde
adc
not
adc
or
daa
std
ds
ret
sub
fstp
jae
icebp
imul
mov
sbb
or
sti
inc
xor
mov
popa
and
je
mov
fbld
mov
sub
inc
(bad)
jmp
add
cmps
sub
jnp
add
jae
push
cld
push
jo
ja
sar
add
sbb
ret
aaa
xchg
mov
stc
mov
out
adc
outs
adc
mov
cmp
mov
xor
cli
rol
data16
aad
sbb
cmps
outs
mov
sti
sub
ss
fs
jns
cmp
std
add
inc
call
shr
push
sub
cmps
sub
or
adc
push
imul
mov
jl
push
repnz
ret
sti
daa
into
add
sbb
dec
mov
popa
scas
mov
mul
jno
movs
mov
icebp
(bad)
in
popa
ja
cmp
int
icebp
and
adc
ins
mov
cmp
pop
sbb
(bad)
out
pusha
test
pop
out
(bad)
xor
mov
daa
das
lds
adc
lea
test
add
aam
dec
pop
jmp
mov
or
movs
push
or
shl
cld
repz
mov
inc
cmps
lods
pop
sub
jbe
push
sub
push
push
sar
repz
adc
std
fisub
and
sahf
jg
fs
fs
add
in
lock
mov
inc
mov
mov
xchg
lock
mov
mov
cli
add
mov
repz
leave
and
retf
mov
sbb
pop
(bad)
lea
dec
test
imul
stc
jo
mov
sub
lahf
sbb
setge
sub
dec
into
lods
ins
arpl
sub
hlt
xor
adc
or
lock
stos
pop
stos
or
pop
inc
out
cmps
xchg
sbb
stc
mov
mov
cmps
lahf
sub
mov
mov
sahf
inc
out
ja
(bad)
aas
xchg
mov
pusha
adc
push
jb
ficom
cmp
loope
inc
les
neg
cmp
(bad)
loop
inc
xor
(bad)
aam
xchg
stos
ja
rcr
addr16
(bad)
jmp
dec
adc
bound
dec
std
movs
add
cmp
js
adc
pop
sbb
pop
std
xchg
inc
lock
xchg
dec
shr
scas
inc
hlt
das
ret
jo
xchg
sahf
mov
or
retf
in
mov
mov
arpl
shl
dec
sub
mov
xor
cmp
dec
test
dec
push
lahf
inc
mov
lods
fild
(bad)
mov
ja
push
fild
and
mov
mov
sub
add
add
jne
jl
xchg
dec
lds
push
xor
or
pop
pop
call
mov
aas
lods
sbb
dec
xchg
shl
fist
jns
in
cmc
out
inc
pop
stos
ins
sbb
sbb
out
xchg
push
imul
(bad)
loop
pop
and
and
mov
mov
in
(bad)
sahf
pop
pusha
adc
inc
and
adc
jmp
push
aad
mov
lds
jp
cld
dec
out
clc
mov
data16
fimul
cwde
or
scas
mov
mov
sub
bound
inc
pusha
loope
or
push
das
mov
clc
adc
mov
lock
pop
test
xchg
mov
mov
repnz
or
rcr
mov
sahf
add
mov
rcl
sbb
mov
in
fadd
jne
movs
xor
ds
push
push
in
jecxz
out
hlt
sub
xchg
enter
rcr
jo
pop
nop
aad
in
jmp
pop
lods
cdq
lods
clc
jg
sub
aad
cmps
sbb
mov
sbb
inc
fist
mov
stos
retf
enter
pusha
je
fst
lahf
mov
call
adc
ss
out
xlat
or
mov
add
in
inc
fs
push
std
and
nop
jle
jp
test
push
sub
push
popa
xor
jmp
loop
cmc
shr
adc
data16
adc
test
ins
in
std
dec
cwde
xchg
fs
mov
adc
mov
ror
out
xchg
pop
int3
dec
aad
push
scas
frstor
idiv
push
popa
inc
xor
ficomp
inc
mov
or
inc
adc
out
pop
xor
int
fiadd
mov
jnp
jmp
data16
adc
loope
pop
mov
jmp
mov
mov
sbb
add
sub
(bad)
inc
fidiv
das
or
cmp
xchg
stos
pop
or
hlt
inc
fsubr
cmps
sub
iret
in
jb
daa
add
mov
ds
xchg
mov
nop
outs
jns
data16
(bad)
cmc
movs
enter
loop
fistp
add
jo
imul
pop
sbb
pop
and
xchg
push
(bad)
xchg
dec
stos
sub
js
imul
shr
add
xlat
cmp
jno
jb
shl
cmp
push
push
mov
cmp
jae
aad
add
pop
pop
int
xchg
sar
lahf
mov
jo
movups
mov
mov
rcr
out
ss
add
or
lock
or
cld
(bad)
ins
inc
in
sbb
mov
and
xchg
mov
xor
fcomp
jns
xchg
push
fiadd
jecxz
sbb
repz
lods
stos
cwde
or
xor
movs
jmp
loope
sbb
adc
pop
dec
dec
call
mov
mov
jnp
dec
loop
sbb
push
enter
jne
fdivp
jbe
cs
aam
mov
jl
lods
add
adc
push
outs
and
mov
dec
in
push
cmp
scas
inc
dec
retf
mov
inc
mov
dec
mov
dec
push
cmp
jo
int3
mov
cli
xor
sub
js
adc
hlt
sub
mov
cwde
push
jns
adc
xchg
xor
in
pop
jno
jnp
push
mov
inc
icebp
mov
pusha
test
rcr
pop
sub
push
sbb
mov
add
lods
mov
add
push
pop
addr16
cmp
or
cli
sbb
call
or
jmp
lods
adc
aam
push
or
push
inc
inc
in
test
lea
enter
xor
sbb
imul
cmc
adc
cwde
push
test
pop
in
jne
bound
dec
mov
inc
push
jb
popa
xchg
jge
fdivr
mov
push
(bad)
cmp
ins
lods
mov
push
stc
loopne
outs
mov
js
repnz
ja
ins
fsubr
fild
xor
mov
into
pop
test
lds
cmp
icebp
pop
xor
lods
pop
mov
and
lock
mov
fsub
xchg
adc
rcr
dec
(bad)
js
ins
sbb
xchg
call
mov
inc
mov
shl
fbld
rcl
cmp
in
jecxz
mov
dec
push
mov
mul
xor
cwde
dec
sbb
loop
and
loopne
mov
inc
sti
scas
js
pop
rcl
pop
repnz
add
jmp
dec
aam
dec
sub
icebp
jnp
test
push
ret
movs
mov
push
je
xchg
xchg
sahf
call
pop
push
cli
ins
mov
stc
out
lods
out
pop
adc
cmp
popa
cmc
inc
lea
jo
sbb
test
ds
lea
xor
mov
inc
jo
inc
jns
sbb
aad
dec
adc
repz
mov
cmp
push
push
and
xchg
push
lds
mov
inc
jge
pop
mov
mov
movs
std
dec
fucomi
ins
sti
mov
mov
sub
adc
and
cmp
sbb
fidiv
pop
js
lock
into
xor
dec
ins
imul
js
inc
scas
and
jno
lahf
ret
or
cmp
inc
stos
lea
ds
aaa
xchg
pop
pushf
push
retf
mov
xlat
xor
jmp
sub
jmp
outs
jb
ins
in
jmp
dec
sub
fmulp
icebp
stos
pusha
jp
jo
fistp
pusha
adc
pop
push
push
push
cli
jmp
xchg
mov
sub
dec
clc
or
push
pushf
adc
sbb
and
lahf
mov
mov
ffreep
ja
das
dec
push
hlt
retf
add
xor
and
xchg
and
xor
hlt
xor
in
popa
pop
inc
psubq
in
ret
and
retf
jmp
and
mov
push
adc
jg
jne
(bad)
sub
enter
fsub
mov
xchg
ss
xor
jmp
mov
add
or
and
shl
add
bound
test
cld
add
dec
push
fisubr
les
enter
pop
repz
mov
fnstsw
inc
push
push
(bad)
imul
add
cs
into
inc
xchg
not
and
or
dec
ins
pusha
jmp
lods
rcr
rol
pop
mov
out
(bad)
mov
test
movaps
cmp
std
xor
das
xor
sub
retf
adc
add
xlat
mov
mov
mov
mov
sub
sbb
xchg
stc
dec
or
jp
pop
in
cmc
mov
add
jne
inc
pop
pop
fwait
movs
mov
mov
dec
ja
(bad)
pop
add
adc
cmps
mov
push
push
(bad)
(bad)
jmp
adc
int3
mov
cmp
stc
mov
daa
int
popa
mov
call
inc
push
cs
movs
and
lds
cmp
pop
mov
cmps
xor
(bad)
adc
xlat
test
lock
int
xchg
jmp
jbe
jbe
adc
or
add
es
movs
and
fcom
imul
rcr
ficom
data16
or
pop
pop
mov
out
sar
fs
and
cmp
iret
arpl
aas
inc
push
call
bound
scas
leave
adc
inc
inc
mov
xor
jg
xor
fst
sub
popf
lahf
push
mov
cli
out
sbb
pop
shl
setp
fs
mov
cmp
push
stos
nop
lea
jg
pop
add
arpl
xor
push
cld
jno
adc
into
test
pop
out
mov
in
popa
ja
imul
iret
fild
int3
jae
sub
add
and
pop
sub
push
mov
cmp
data16
enter
fdivr
mov
mov
push
call
push
mov
repnz
(bad)
sub
sub
(bad)
jl
dec
add
or
repz
movs
mov
pop
push
push
test
xchg
push
xor
and
stc
push
sbb
pop
fbld
out
pop
and
cmp
not
xor
and
and
cmp
jb
and
popf
adc
call
cmp
retf
aad
rcl
or
dec
push
ficom
pop
mov
mov
pop
xchg
fisub
test
div
fcomp
adc
pop
ja
sub
push
or
cmp
leave
push
sbb
xchg
dec
sbb
inc
adc
ss
adc
adc
adc
cmp
push
jl
pop
jecxz
imul
jmp
imul
in
fmul
sar
cmps
dec
ds
jg
mov
cli
push
call
in
arpl
lods
xchg
cs
or
icebp
xchg
sti
not
stc
fiadd
je
fisttp
arpl
loop
lea
inc
(bad)
nop
push
and
jecxz
leave
scas
enter
push
cwde
mov
and
pop
stc
mov
push
jg
jp
aaa
cmp
shl
or
enter
adc
or
pop
shl
cli
add
add
xchg
cmp
mov
mov
jnp
gs
sti
pop
mov
mov
test
push
pop
aaa
aas
mov
dec
shr
cmp
retf
pop
jmp
sbb
pushf
xchg
adc
imul
or
or
inc
popf
sahf
mov
adc
or
xchg
in
lock
push
cmp
push
adc
push
cld
fistp
aam
xchg
push
jecxz
shl
bound
test
mov
lea
test
push
movs
dec
fmul
jge
in
daa
mov
mov
(bad)
sbb
rcr
ret
push
fxch
xchg
mov
push
xchg
clc
jmp
or
outs
push
mov
in
int3
shl
pop
int
cs
dec
add
rol
mov
xchg
adc
mov
sar
iret
icebp
outs
mov
adc
adc
int
push
xchg
push
mov
xchg
and
int3
jb
push
out
jle
fs
retf
movs
ins
inc
and
xor
jae
cmc
nop
mov
and
pop
pop
add
imul
mov
rol
push
add
mov
int
push
inc
cmc
imul
iret
mov
aaa
dec
js
outs
(bad)
aam
test
cmps
mov
or
(bad)
aad
js
xchg
ds
shl
add
ret
icebp
push
test
jge
ins
(bad)
(bad)
jg
and
stc
jmp
rcr
xor
bound
add
rcl
and
mov
sbb
add
in
dec
inc
inc
mov
push
sub
dec
cmp
and
gs
sar
out
das
(bad)
mov
push
shl
cmp
out
repnz
fldenv
mov
mul
inc
in
in
pop
test
sub
pop
mov
or
pop
xchg
dec
ss
jnp
stc
sbb
pop
inc
ret
shl
inc
fcom
jg
(bad)
cmp
dec
sbb
and
inc
xor
pop
inc
push
in
(bad)
push
sbb
cwde
fdivr
sub
data16
pop
push
fldz
jmp
idiv
dec
push
ficomp
xchg
cli
mov
inc
xor
fnstcw
popa
adc
xor
std
push
in
inc
(bad)
test
jecxz
and
add
adc
out
xor
inc
ror
and
jo
enter
sbb
cmp
pop
inc
shl
cmp
addr16
mov
push
inc
or
and
cmp
shr
clc
xor
ins
xchg
rcl
cli
aaa
jle
daa
loope
mov
in
or
repnz
xor
inc
cli
push
hlt
adc
xor
shr
sub
(bad)
popa
xchg
pop
push
call
fsub
cmp
cmp
push
lea
sbb
daa
sbb
sub
xor
sub
stc
xor
adc
jge
push
lods
mov
xor
push
dec
push
int3
push
add
mov
ins
popa
jne
dec
mov
retf
fstp
jle
stos
pushf
gs
or
mov
repz
dec
mov
push
out
fisttp
outs
es
jnp
movs
mov
daa
lea
scas
pop
fwait
inc
mov
inc
xchg
ss
cwde
test
lea
mov
adc
mov
fcomp
xchg
std
movs
xlat
scas
retf
sub
inc
and
cli
sub
inc
xchg
(bad)
mov
mov
je
out
or
dec
or
(bad)
int3
add
dec
add
inc
mov
dec
(bad)
push
int
cmp
test
and
in
cmovnp
push
in
fidiv
sti
stos
fwait
push
test
xor
lea
loop
daa
xchg
cdq
pop
mov
(bad)
fisubr
or
cs
jle
jle
pop
addr16
mov
dec
jg
xor
sbb
jnp
push
sub
push
dec
xor
cmp
mov
sbb
js
xor
test
sar
in
jmp
scas
fadd
ins
cmp
xlat
repnz
retf
mov
loopne
pop
loopne
je
jne
mov
lods
add
scas
mov
pop
gs
xor
push
sahf
add
popf
ins
in
inc
lods
add
mov
sbb
movaps
in
push
sub
call
or
pusha
pop
adc
movs
adc
inc
popf
pop
add
es
inc
adc
les
fnstsw
cmp
aaa
ss
push
xor
dec
mov
add
int3
and
mov
mov
ss
mov
push
and
sub
xchg
aaa
mov
push
pop
loop
xchg
xchg
mov
cdq
jno
ins
xchg
sub
call
out
sub
cmp
dec
imul
aad
push
cmp
push
call
imul
addr16
cmp
aam
ja
push
lods
sub
call
ins
jg
retf
pop
test
mov
dec
inc
scas
dec
mov
and
ins
add
xor
pusha
outs
rcl
lock
and
pop
or
mov
dec
out
pusha
retf
xchg
and
mov
cli
xor
push
js
inc
or
call
setge
adc
pop
movs
jecxz
fbld
jg
leave
mov
mov
xlat
std
or
lods
push
enter
cld
mov
out
mov
int
cmovp
rcl
pop
ins
cli
adc
or
cld
dec
adc
pop
inc
jb
mov
inc
adc
int
sub
(bad)
push
out
imul
imul
push
push
or
pop
add
sahf
sbb
jmp
dec
leave
push
lock
and
test
retf
xchg
jnp
imul
xor
ss
inc
or
jmp
dec
xor
in
lds
(bad)
sub
cdq
mov
ror
xchg
scas
xchg
icebp
push
div
xor
cmp
cmp
aas
jle
adc
mov
fwait
out
jo
es
or
push
or
ins
dec
mov
cmp
mov
addr16
xor
ds
and
clc
out
push
pop
test
aam
pop
adc
mov
dec
jmp
dec
sub
dec
cmp
mov
push
sub
repz
iret
stc
test
jge
das
enter
fst
movs
push
hlt
sbb
jl
stc
mov
jmp
or
popa
mov
mov
daa
push
dec
push
call
out
push
cdq
dec
aaa
jmp
retf
imul
ret
fs
and
add
cs
push
(bad)
repnz
in
lea
pop
sbb
xchg
sbb
int3
mov
pushf
cdq
mov
stos
add
cmp
adc
repz
push
push
(bad)
into
sub
add
jmp
pop
outs
dec
js
add
ror
pop
stos
gs
mov
mov
sti
fadd
fnstenv
cmp
dec
nop
mov
jmp
mov
popa
push
cli
das
inc
mov
in
into
addr16
stos
or
and
pop
scas
enter
pop
test
cmp
xor
ret
and
mov
sar
dec
ror
ret
mov
fisttp
sub
pop
mov
das
xor
fxch
add
pop
cld
cdq
jo
sub
sbb
rcl
mov
ins
pop
loop
adc
test
adc
inc
jmp
stos
sbb
cmp
neg
cwde
mov
and
aas
repz
cs
shl
rcr
out
cmp
mov
nop
test
dec
repz
cmps
push
cmp
es
rcl
idiv
dec
aam
and
sahf
mov
sub
sub
div
xchg
mov
mov
stos
cmp
fild
adc
sub
push
or
ja
popa
pop
push
cli
es
and
sbb
push
fdiv
sub
daa
loopne
add
dec
xchg
and
aam
pop
pop
fidiv
sub
pop
enter
mov
xor
sbb
mov
rcr
mov
mov
in
add
dec
push
push
xor
xchg
cdq
mov
pop
(bad)
stos
ja
add
cmp
mov
(bad)
and
dec
mov
mov
mov
add
cmp
lahf
sbb
ret
xor
popf
pop
loope
jbe
out
or
cmp
jmp
mov
(bad)
mov
dec
outs
js
mov
sbb
push
aaa
in
mov
push
adc
mov
into
push
inc
daa
pop
cmps
fist
mov
mov
(bad)
xor
pop
mov
dec
scas
js
mov
inc
adc
inc
ret
or
mov
frstor
sub
add
inc
mov
push
xchg
jnp
add
adc
popf
and
adc
shl
mov
xor
mov
push
sbb
fisttp
and
(bad)
inc
push
jns
mov
dec
xor
push
mov
push
repz
test
xchg
inc
xor
pop
adc
lock
push
and
sbb
jge
and
xchg
ret
push
mov
cmp
out
or
jbe
dec
test
add
lea
cld
in
loop
mov
(bad)
xchg
retf
stos
mov
inc
mov
xor
dec
mov
into
push
sbb
xchg
push
and
test
sahf
lock
xor
daa
mov
ds
push
xchg
pop
pop
cwde
out
sti
add
mov
add
mov
jge
dec
mov
fs
pop
mov
xchg
pop
jns
mov
xlat
popa
popa
div
call
retf
jno
adc
repz
cs
xor
push
sub
inc
or
mov
mov
dec
xor
int3
out
push
pushf
(bad)
retf
dec
xchg
std
or
jae
dec
icebp
(bad)
retf
push
xor
adc
jno
sub
loop
call
jecxz
ficom
div
shl
(bad)
cld
fs
mov
pop
push
outs
or
xor
pop
mov
add
pop
lds
mov
and
push
sbb
popf
xlat
cmps
add
not
mov
int
in
inc
mov
dec
sub
push
xchg
aas
adc
bound
jmp
jmp
sub
xchg
inc
stc
xor
add
outs
push
sti
jo
fmul
pop
inc
sti
sar
stc
int3
jg
dec
ss
mov
ret
or
call
popf
jl
movs
js
push
in
ffree
test
or
dec
mov
mov
fnstenv
mov
addr16
ror
adc
jecxz
jae
push
retf
jmp
das
sbb
int
push
fist
mov
jnp
loope
mov
xlat
lea
xor
jae
push
cmps
mov
gs
mov
sub
cli
daa
cdq
xor
mov
sbb
or
jnp
pop
xchg
adc
scas
mov
loopne
cmp
dec
shl
adc
ins
mov
loop
aaa
(bad)
sub
adc
inc
ja
call
cmp
std
dec
(bad)
push
push
xchg
test
mov
adc
mov
xchg
retf
outs
mov
lods
cdq
sahf
ret
mov
sahf
xlat
pop
leave
shl
loop
pop
stc
fs
inc
or
jl
push
in
nop
mov
jp
and
pop
mov
enter
and
mov
leave
repnz
lahf
cmp
sbb
icebp
mov
jne
mov
xlat
xchg
jb
push
fs
mov
pop
mov
movs
lock
aam
jg
adc
into
sbb
and
test
push
and
mov
lods
ins
adc
dec
sub
outs
jb
mov
lods
jmp
ja
ret
clc
popa
jbe
cmp
std
mov
sahf
aaa
sbb
jbe
int
jnp
mov
jle
ins
lods
mov
popa
dec
jns
ja
mov
test
lods
out
lods
test
gs
mov
xchg
outs
sub
repz
jae
mov
add
sbb
push
cmp
push
adc
adc
std
mov
loopne
dec
and
push
outs
push
xor
xchg
xchg
lahf
ins
in
sub
(bad)
jp
dec
fadd
data16
mov
sar
fcmovnbe
or
movs
(bad)
not
lahf
dec
in
cld
mov
push
mov
dec
enter
retf
mov
cmp
int3
jo
pop
mov
lahf
inc
rcl
mov
retf
and
add
xor
xor
or
stos
add
inc
movs
mov
mov
ja
push
inc
int3
add
(bad)
loopne
jnp
push
and
hlt
(bad)
mov
add
or
out
je
ins
inc
cmp
cmps
int3
sti
push
outs
(bad)
jno
je
aam
pop
bound
cmp
inc
es
das
out
call
jecxz
push
(bad)
push
mov
loopne
mov
lock
ret
xchg
pop
sub
retf
jp
pop
fsub
inc
jne
loope
fisub
call
cmp
hlt
mov
mov
mov
mov
pop
push
dec
mov
cmp
inc
rol
inc
sbb
and
clc
xchg
mov
pushf
cwde
jns
sub
les
mov
addr16
popa
sbb
rcr
mov
mov
icebp
pop
jns
mov
mov
in
dec
or
sbb
xor
inc
loop
call
ds
sti
and
jge
xchg
test
mov
not
gs
mov
mov
cs
sbb
add
ficomp
in
fdiv
sahf
or
xor
jnp
pop
ins
push
pop
push
call
sub
jnp
int
sbb
hlt
int
cld
inc
jmp
ficom
movs
stos
sbb
bnd
sbb
pop
and
test
in
dec
cld
sbb
pusha
or
sub
addr16
ret
icebp
fsubr
pop
mov
mov
xor
cmp
pop
pop
pop
ret
ins
mov
cmc
jmp
adc
cmp
(bad)
cmp
or
fist
stos
inc
sti
jmp
rcr
mov
mov
sti
popa
cmp
test
(bad)
retf
inc
jge
sub
cmp
dec
cmp
int
fwait
sbb
ins
adc
cdq
xlat
in
sbb
mov
stc
dec
fild
ret
mov
inc
lahf
or
jns
pop
inc
jp
in
sbb
out
mov
cmps
xchg
ins
or
xchg
scas
xor
add
cmp
test
loope
adc
sbb
and
jno
rcr
call
jnp
sbb
dec
dec
jg
or
fwait
popa
int
ins
(bad)
(bad)
mov
icebp
popf
mov
mov
cmp
aad
test
and
fild
lods
ins
pop
repz
movs
mov
add
imul
adc
loope
leave
mov
ffree
in
add
jo
popa
sub
popa
push
loop
ficom
push
cmp
sti
popf
lahf
(bad)
call
mov
adc
dec
jbe
mov
aam
xor
inc
(bad)
xchg
mov
icebp
inc
(bad)
nop
and
out
and
js
mov
test
mov
std
sub
loope
xchg
cmp
out
inc
push
cmps
ins
mov
add
fsub
outs
ret
dec
jge
push
and
mov
push
scas
loop
dec
mov
push
imul
xchg
sbb
scas
mov
cmp
scas
sar
cmp
sub
outs
xchg
push
jge
les
outs
cs
jge
adc
pushf
mov
adc
das
cdq
lds
aaa
pop
shl
push
inc
jmp
jo
(bad)
pop
clc
sbb
pop
xor
imul
repz
mov
or
call
xchg
mov
dec
adc
adc
inc
lock
daa
out
les
les
mov
cmps
mov
ja
stos
int3
mov
jo
adc
aaa
call
and
ds
jno
lock
and
xor
jb
inc
int3
cmp
icebp
and
aas
idiv
dec
sub
inc
xor
push
mov
sti
pop
mov
add
(bad)
pop
push
xchg
(bad)
sbb
sub
cmps
mov
scas
frstor
ret
hlt
popf
sub
clc
xchg
mov
sbb
push
outs
clc
xor
xchg
aas
sbb
loopne
sbb
ins
(bad)
pushf
cli
ss
mov
mov
pop
outs
xor
mov
jns
int
xchg
call
jp
iret
inc
call
lea
adc
jnp
inc
xor
xchg
sbb
dec
pusha
adc
push
push
nop
push
clc
xchg
repz
cli
inc
ds
inc
add
push
push
int3
outs
scas
das
movs
pushf
pop
jns
mov
cmps
pushf
push
sar
stos
add
addr16
not
std
cmp
sti
push
xchg
dec
je
cdq
fisub
in
and
inc
(bad)
retf
sbb
clc
ins
add
ins
sbb
jmp
push
in
jmp
scas
scas
scas
xchg
xchg
adc
shl
adc
retf
dec
lea
mov
stos
mov
fnstcw
sar
in
in
push
sub
scas
xor
sar
push
fsub
pop
nop
(bad)
mov
(bad)
xchg
jmp
sbb
ins
cwde
add
mov
sub
inc
ror
xchg
mov
sub
push
dec
cmps
pop
(bad)
out
lods
mov
sub
xlat
cmp
(bad)
jb
sbb
inc
cmp
les
lea
sbb
fisubr
and
jo
jae
lods
in
jmp
arpl
outs
add
add
push
mov
xchg
xor
mov
in
(bad)
das
call
cmp
push
dec
push
dec
mov
cmp
or
jp
push
(bad)
test
shl
lods
rcr
fadd
sub
aas
sbb
mov
push
mov
or
jle
(bad)
std
jno
arpl
scas
out
cmc
lds
or
push
xchg
mov
sbb
into
and
ss
fidiv
mov
jle
pop
cwde
pop
push
adc
xor
mov
idiv
sub
movs
inc
daa
jge
sbb
call
repnz
pop
jbe
rcl
stos
mov
mov
cmps
(bad)
adc
and
daa
and
mov
sub
out
stos
inc
gs
pop
(bad)
cdq
mov
retf
test
cmp
scas
or
adc
lock
es
stc
(bad)
mov
in
(bad)
inc
xor
inc
je
dec
in
cmp
retf
pop
fmul
mov
loop
sbb
in
or
jmp
pop
push
jae
jmp
mov
pushf
sbb
aam
xchg
pop
inc
cmps
xor
xchg
xchg
pop
mov
push
hlt
pop
xor
aam
xchg
js
shr
pop
out
lock
mov
xchg
and
iret
daa
sbb
shl
or
pop
cmps
sahf
das
sub
add
inc
repz
lahf
inc
repnz
inc
mov
movs
push
int3
(bad)
pop
test
and
inc
jmp
nop
push
mov
ret
and
daa
aam
clc
(bad)
mov
and
rcl
arpl
(bad)
xchg
add
pop
jge
(bad)
into
push
sbb
mov
xor
add
mov
xor
mov
push
jle
(bad)
adc
mov
lds
aad
jns
scas
sbb
leave
or
clc
cmps
imul
xor
(bad)
loope
out
mov
(bad)
es
je
fs
push
shr
adc
shl
sbb
and
lock
fidivr
pusha
xchg
(bad)
hlt
nop
inc
sub
test
fisubr
inc
inc
test
repnz
mov
pop
(bad)
and
sub
test
jp
or
fmul
test
out
jg
cmp
ins
not
jns
dec
and
fisttp
push
outs
or
mov
push
or
sub
ror
lods
cli
sti
add
sbb
cmp
inc
int
push
dec
cmps
ror
sbb
sub
outs
mov
xchg
sub
push
rcl
push
mov
gs
mov
movs
js
hlt
jge
cmp
iret
xor
loopne
pusha
inc
div
pop
xor
add
mov
es
and
pop
and
inc
jge
(bad)
call
ret
xchg
ins
inc
ja
retf
mov
lahf
cmp
or
stc
cmps
stos
aas
pop
xlat
jmp
and
sbb
pop
int
lods
mov
ficom
js
outs
jbe
jp
inc
lock
nop
mov
adc
daa
jge
mov
pop
mov
xor
jge
(bad)
cmp
outs
sub
mov
inc
xchg
dec
test
stos
and
jb
dec
push
jmp
movs
cwde
scas
or
pop
pop
int
inc
cs
or
not
push
pop
sbb
test
fwait
inc
add
scas
pop
out
out
in
jne
dec
sbb
xchg
(bad)
imul
ret
or
cld
jecxz
lahf
mov
xor
lods
push
imul
inc
sbb
ins
imul
(bad)
sar
test
mov
push
jb
push
dec
loop
jns
cmc
enter
outs
mov
inc
add
mov
push
xor
jnp
call
push
std
test
and
scas
pop
lods
dec
les
call
test
fs
scas
cs
aaa
and
pop
add
movs
jb
stc
cmp
(bad)
scas
je
test
adc
inc
jmp
adc
jmp
test
cmc
dec
push
int3
jmp
jmp
pop
jecxz
arpl
inc
add
sub
lock
xchg
or
hlt
fldenv
ja
adc
inc
xlat
sbb
into
addr16
test
push
jmp
mov
push
stc
mov
and
adc
neg
popa
mov
in
and
psubb
mov
out
(bad)
cmps
pop
shl
loope
es
and
mov
sbb
mov
out
cmps
retf
es
jmp
addr16
lds
ret
outs
addr16
inc
call
out
ss
es
lea
aad
push
lahf
in
inc
lock
xchg
arpl
mov
push
repz
jo
fcomip
rcl
adc
xlat
test
cmp
sub
inc
sub
les
jb
mov
pop
imul
or
js
retf
and
mov
loop
dec
aaa
popa
cmps
pusha
inc
jg
shl
dec
dec
xchg
scas
xchg
retf
popf
les
xchg
pop
clc
pop
nop
xchg
jnp
push
dec
repz
cmp
jmp
mov
lds
sbb
mov
xlat
push
icebp
cli
cli
outs
fild
and
pop
clc
test
or
fadd
test
and
jbe
jmp
sub
push
(bad)
jo
inc
jns
sub
movs
mov
bound
rcl
pop
lods
cmps
into
test
inc
sti
sbb
jmp
mov
or
and
and
sub
rol
addr16
xlat
push
and
stos
and
test
mov
xor
xor
mov
xchg
jmp
adc
mov
sub
stos
inc
in
div
sbb
scas
adc
xchg
sbb
(bad)
aad
(bad)
iret
loopne
mov
mov
and
inc
repz
sbb
mov
daa
and
ja
ss
sbb
mov
xchg
sub
and
ret
and
mov
sbb
xlat
adc
adc
nop
in
xor
push
sbb
sar
cld
pop
push
sbb
cmps
test
loop
xor
imul
inc
inc
jecxz
std
adc
xchg
sbb
in
jg
and
test
popf
xchg
cld
jl
iret
pop
cld
push
jmp
retf
adc
dec
daa
cmps
dec
jg
cli
add
loope
sar
int
or
loopne
int
lock
push
pop
cmps
add
sub
stos
cmps
aaa
xchg
inc
xchg
cdq
mov
in
add
ds
mov
mov
pop
int
stos
lock
or
xchg
mov
xor
jne
dec
dec
test
(bad)
outs
adc
call
inc
adc
xor
add
jb
jmp
pop
das
pop
push
dec
mov
inc
cdq
adc
pop
(bad)
and
dec
sub
out
repz
adc
sti
mov
les
aas
std
les
data16
nop
je
inc
pushf
push
push
scas
mov
outs
mov
add
xor
jecxz
jno
fidivr
sub
enter
lods
or
stos
xchg
or
pop
stc
or
add
out
ins
cmp
cli
js
and
fcom
aad
icebp
stos
jmp
add
outs
push
jne
lods
mov
imul
jl
loop
or
pusha
mov
lods
enter
(bad)
mov
cli
pop
retf
into
mov
adc
push
stos
mov
inc
sbb
inc
(bad)
outs
call
sbb
aad
mov
test
pusha
add
inc
mov
push
cli
into
jmp
push
inc
or
push
and
lods
popa
sub
dec
or
jnp
das
jno
cmps
and
xchg
in
lds
es
enter
retf
or
imul
or
leave
sahf
fcomp
ret
mov
mov
xchg
push
clc
imul
sti
out
pop
inc
gs
and
and
mov
jmp
pop
adc
addr16
pop
push
push
add
adc
cs
inc
stc
or
and
outs
sub
adc
add
dec
mov
push
xor
add
dec
clc
int
ror
stos
in
xlat
xor
fild
xchg
sbb
or
movs
and
out
clc
mov
sub
xlat
pop
mov
sbb
adc
cs
push
lods
sbb
test
lahf
fadd
loope
ret
adc
outs
shr
or
adc
or
dec
or
int
xor
dec
sbb
jnp
push
pop
jo
cmp
pop
retf
dec
push
and
push
ret
cmps
adc
pop
cmc
push
mov
arpl
lea
mov
adc
mov
push
pop
mov
cmp
emms
movs
add
jo
mov
push
ja
daa
mov
inc
sub
call
and
fldz
enter
push
jbe
jo
popf
sub
xchg
push
repz
neg
jmp
pusha
pop
mov
outs
mov
pop
pop
sbb
add
pop
cmp
sar
bound
mov
lea
clc
mov
out
xchg
(bad)
jae
pop
adc
cmc
mov
cs
shl
outs
mov
push
ficom
sub
out
mov
add
out
jns
(bad)
jecxz
pop
cmps
inc
mov
push
jnp
dec
scas
dec
lods
xor
mov
cdq
add
out
fstp
test
sub
rcl
adc
add
mov
bound
adc
retf
dec
cmp
mov
adc
sar
imul
sbb
mov
adc
xchg
xor
cmp
ins
push
into
lods
fcom
leave
icebp
cld
inc
ficomp
mov
dec
and
ret
xchg
es
sub
mov
sub
stos
sbb
ret
jbe
pop
xchg
or
sub
pop
xor
mov
inc
cmps
in
mov
mov
call
sbb
mov
cs
mov
pusha
inc
sti
jge
(bad)
icebp
pop
mov
fnsave
cmps
pop
add
mov
sbb
mov
sbb
mov
ror
mov
adc
fbld
mov
pushf
sbb
pop
xor
mov
inc
inc
idiv
jae
sub
and
jg
adc
mov
or
xor
and
imul
pop
mov
xchg
sub
pop
or
dec
xor
mov
inc
inc
test
mov
sub
fmul
sar
sahf
lods
fld
arpl
imul
sub
dec
pop
cmp
(bad)
les
inc
imul
ds
mov
movs
movs
xchg
int
in
in
rol
or
(bad)
retf
aad
or
jo
pop
jns
repz
(bad)
or
sbb
pop
inc
mov
bound
bound
jmp
pushf
fild
cmp
pop
test
sahf
sub
xchg
cmp
push
(bad)
mov
arpl
and
dec
lahf
ins
mov
mov
fs
mov
(bad)
je
sbb
cld
cmp
adc
adc
pop
add
in
int
xchg
mov
test
jo
mov
cmp
out
sbb
mov
push
test
hlt
adc
jnp
mov
imul
inc
shl
loopne
ins
cld
mov
lea
jmp
mov
push
clc
sub
jo
jns
jl
dec
pushf
sub
xchg
sbb
xchg
dec
pop
popf
ins
cmps
fwait
in
cld
(bad)
adc
and
nop
push
and
movs
sbb
jmp
test
sahf
mov
mov
movs
cwde
xor
imul
push
jb
repnz
fcom
popa
mov
cmp
mov
inc
mov
(bad)
(bad)
hlt
or
lds
mov
das
dec
sub
cmp
rol
or
and
mov
jbe
cmps
mov
cdq
out
icebp
jno
or
dec
push
cmps
mov
(bad)
xlat
ins
(bad)
cli
jnp
sub
mov
cs
inc
lods
mov
daa
gs
cmc
pushf
sub
(bad)
lods
dec
loope
je
inc
dec
mov
or
arpl
fldcw
xchg
sub
or
cmp
pop
repz
pop
add
sbb
in
jnp
push
fild
adc
int3
es
lods
retf
ds
add
mov
cwde
sub
in
test
jg
imul
mov
imul
dec
cmps
dec
out
xchg
pop
in
xchg
(bad)
aaa
in
ret
repnz
stos
int
mov
lea
aam
jmp
push
and
(bad)
jge
inc
add
sbb
(bad)
(bad)
sti
pushf
or
in
mov
cmp
jmp
xchg
pushf
pop
call
and
daa
cmp
pop
add
sub
popa
mov
pop
adc
lea
test
sahf
pushf
outs
popa
push
push
and
or
dec
inc
pop
xor
cli
add
(bad)
js
test
jp
popa
ficom
cmp
(bad)
in
fisub
push
repnz
iret
imul
stos
or
push
imul
repnz
or
int3
mov
ret
sbb
inc
or
xchg
or
mov
ror
cmp
sbb
cmps
jge
xor
shr
push
fbld
push
jge
jmp
add
neg
add
loope
cmp
retf
mov
inc
jg
in
fwait
neg
out
push
stc
cmovnp
sub
mov
es
gs
push
sbb
into
mov
xchg
mov
cmp
push
mov
push
add
mov
or
neg
adc
mov
sub
vpunpckldq
outs
cdq
lods
(bad)
(bad)
das
mov
inc
aaa
and
xor
jl
add
cmp
pop
fdiv
sar
cmp
or
pop
cmc
push
adc
in
mov
out
mov
sar
jp
rcr
jb
(bad)
jno
sub
mov
cmp
push
xor
shl
adc
neg
cmps
push
dec
push
sbb
movs
or
stos
sbb
lahf
jnp
rcl
sti
in
out
pushf
jp
ret
test
adc
push
lahf
lods
adc
retf
retf
cmp
jo
dec
jae
lds
aad
lahf
out
cmp
dec
retf
push
ja
in
jo
cmps
jp
push
pop
fistp
pop
cmp
cwde
clc
add
ins
(bad)
mov
push
add
xchg
ficom
push
mov
(bad)
sbb
sbb
aad
add
cwde
or
xchg
dec
or
cld
js
pop
out
in
cmps
cs
into
fxtract
dec
mov
nop
cwde
(bad)
js
addr16
inc
dec
lahf
xchg
xchg
add
pop
sbb
inc
pushf
sub
shr
add
(bad)
out
push
ins
jmp
xchg
ffreep
cmps
stc
mov
pop
mov
cmp
jge
fist
cmp
mov
cmp
push
pop
inc
cdq
aad
mov
scas
test
mov
mov
adc
inc
sub
imul
lods
shl
pop
movs
sub
or
xchg
sbb
push
out
and
adc
mov
int3
xchg
add
push
dec
cmp
aaa
jecxz
mov
inc
es
push
push
movhps
pop
lods
retf
xchg
xchg
sar
mov
call
sbb
data16
xacquire
popf
(bad)
popw
mov
jno
mov
fmul
jbe
repz
ret
loop
mov
pop
aas
mov
outs
pushf
xor
pop
(bad)
jns
nop
sbb
in
cwde
mov
or
sub
jns
dec
push
xor
aaa
jl
scas
retf
shr
or
jae
mov
call
xchg
ror
into
inc
aas
(bad)
nop
dec
mov
push
sbb
sbb
inc
inc
xchg
inc
push
out
retf
sub
bound
xchg
add
dec
jae
aaa
and
adc
(bad)
outs
xchg
pop
pop
sti
out
xchg
mov
cld
push
cld
sbb
dec
imul
cmp
mov
jo
adc
das
int
iret
stos
push
xchg
adc
test
fmul
cwde
fst
push
xchg
fwait
xchg
xchg
sub
lea
mov
leave
sbb
js
xor
in
cmp
in
div
into
mov
and
enter
jle
mov
stos
stos
jp
scas
mov
rcr
pop
add
data16
fs
jl
int3
test
and
scas
arpl
mov
and
mov
loop
adc
nop
loopne
in
sbb
int
adc
test
add
loopne
jge
xchg
bound
nop
or
or
dec
cmp
sbb
fbstp
xor
retf
jmp
fadd
dec
inc
jmp
jo
aas
cmc
mov
xchg
mov
shl
aaa
test
retf
stc
(bad)
gs
mov
out
jl
data16
lds
aam
add
jbe
push
mov
mov
aas
scas
push
adc
mul
push
push
add
sti
or
xchg
adc
dec
mov
sbb
sahf
adc
and
in
sbb
scas
fidiv
pusha
mov
pop
fbstp
loope
pop
pop
push
pop
xor
mov
push
push
mov
daa
jae
sbb
add
cld
daa
and
arpl
scas
ds
frstor
shl
dec
lods
xchg
scas
pusha
int3
stc
xchg
pop
arpl
pop
sar
cmps
or
shl
call
fisubr
jae
nop
dec
pop
jmp
jbe
pop
int
popa
ins
sti
add
in
js
ins
out
pop
scas
ja
fdiv
jecxz
fsubr
sub
pop
stos
test
cmc
mov
(bad)
jnp
mov
mov
stos
inc
sub
aad
sub
rcl
mov
inc
adc
and
pop
outs
mov
mov
(bad)
into
scas
es
daa
mov
or
imul
xchg
mov
movs
pop
mov
xor
or
xor
(bad)
retf
add
(bad)
fld
(bad)
push
jg
(bad)
inc
cmc
dec
inc
xchg
icebp
repnz
int3
icebp
in
push
imul
cmps
mov
jnp
and
ja
ins
mov
addr16
jbe
cld
test
cmp
or
ds
push
fucomip
sbb
mov
mov
sbb
jae
loopne
call
aam
sub
mov
xor
add
cli
and
sub
sub
xchg
scas
cmp
mov
out
xchg
retf
jbe
xor
mov
popf
(bad)
push
jg
fistp
shl
das
out
xchg
out
mov
pop
jle
popa
sbb
xchg
sbb
test
inc
adc
and
pop
test
(bad)
in
and
jg
push
cmp
adc
test
lods
cli
inc
push
cwde
cmp
popf
fld
lahf
push
fbstp
add
dec
jl
adc
and
pop
xor
or
test
movs
pushf
mov
sbb
scas
push
lods
jb
outs
mov
mov
scas
mov
mov
shl
dec
(bad)
mov
test
pop
jg
ins
or
mov
stos
dec
pop
jbe
jl
out
out
push
movs
je
lahf
push
(bad)
or
and
aam
push
loopne
shr
mov
divps
mov
mov
push
mov
sbb
neg
movs
sub
jmp
loope
or
jl
aam
lahf
inc
ins
jnp
sbb
or
mov
sbb
jb
inc
aas
adc
push
(bad)
(bad)
and
outs
push
jg
pop
cmc
jl
sub
pop
aad
inc
add
xchg
cmp
pop
and
jne
or
adc
lahf
sbb
daa
push
adc
cwde
dec
mov
and
mov
cmp
(bad)
outs
in
out
mov
inc
fcmovne
mov
add
push
push
mov
pop
rcr
sbb
in
pusha
inc
call
cmp
cmp
popa
xchg
mov
mov
xor
aam
push
or
xchg
xchg
outs
pop
pop
push
movs
dec
xlat
and
cdq
call
fcmovb
loop
mov
test
lds
hlt
scas
xchg
inc
cdq
xchg
pop
out
add
add
dec
(bad)
jmp
dec
sbb
scas
and
nop
mov
jle
out
jge
ret
popa
sahf
sbb
mov
sub
pop
inc
pop
std
adc
leave
fisttp
popa
add
aad
retf
jo
mov
inc
push
jo
stos
dec
mov
clc
mov
mov
sbb
push
mov
cwde
inc
push
jecxz
jle
mov
mov
lods
test
fwait
into
aam
inc
jge
push
nop
xchg
mov
out
sbb
div
inc
sbb
add
inc
push
mov
pop
cmp
jns
test
mov
(bad)
mov
xchg
lds
xchg
add
jno
retf
mov
retf
fcmovnbe
jle
ror
pop
sbb
int
rol
xlat
cmps
pop
gs
das
xchg
(bad)
dec
lock
jno
data16
mov
popf
out
push
fldenv
inc
xor
lds
bswap
xlat
(bad)
mov
adc
jb
not
fdiv
mov
cmp
daa
adc
out
out
pop
movs
and
push
sti
js
retf
addr16
out
mov
jbe
in
lods
arpl
mov
cwde
pusha
add
aaa
xchg
add
pusha
dec
xor
fimul
jmp
mov
add
(bad)
pop
inc
push
retf
mov
jle
test
(bad)
push
fwait
xor
jmp
stc
les
sub
mov
hlt
call
(bad)
inc
out
lds
dec
or
frstor
lea
sub
push
addr16
push
ror
inc
stos
push
xchg
out
xor
scas
push
int
and
cs
sub
jp
and
repz
mov
adc
bound
push
add
rol
in
push
mov
shl
mov
mov
push
int3
push
add
push
jbe
push
in
mov
sbb
xor
outs
(bad)
popa
or
cmp
adc
xor
rol
mov
in
pop
push
popf
inc
ret
out
fwait
cmps
push
push
je
adc
inc
dec
gs
jmp
xlat
arpl
or
call
sub
sub
sub
repnz
dec
dec
js
push
mov
aam
daa
sub
cmp
movs
repz
mov
dec
or
pop
mov
mov
adc
pushf
mov
sar
mov
in
inc
sbb
xchg
push
push
repz
and
(bad)
repz
int3
aas
shl
mov
cmp
push
dec
sub
imul
xchg
inc
sbb
in
movs
cmp
sub
jae
pop
mov
adc
rcr
pop
pop
jg
test
int
mov
push
bnd
xchg
jo
(bad)
out
stos
push
fwait
and
xchg
test
jl
push
jns
aam
pop
mov
cmp
cmp
shl
rol
out
stc
dec
mov
movs
and
dec
push
ficomp
je
sbb
pop
inc
jnp
dec
mov
jmp
into
ins
movs
mov
ss
cmp
fstp
inc
cs
fcomp
jbe
sub
push
stos
popa
pop
or
ficomp
mov
scas
ds
mov
(bad)
aad
or
inc
fistp
inc
cmp
jge
mov
bound
(bad)
leave
test
jle
push
ins
or
sub
jb
loope
repnz
push
mov
aaa
aaa
and
add
jmp
loope
xchg
dec
push
add
sbb
jnp
int
das
add
xchg
add
fwait
(bad)
ss
adc
xchg
and
dec
movs
mov
jp
jl
lea
loopne
inc
scas
sub
out
ret
jmp
sbb
repz
or
push
sahf
push
mov
lea
mov
cmps
cwde
fdivr
lock
adc
push
xor
int
test
dec
imul
jb
mov
xchg
out
pusha
fstp
ret
lds
xchg
fmul
sub
push
jnp
(bad)
mov
shl
lock
mov
xor
retf
sub
push
outs
xor
push
xchg
fimul
in
jno
xchg
aas
jae
jmp
daa
inc
movs
div
out
int
lea
or
xchg
test
(bad)
not
sub
ret
jmp
mov
fbstp
jo
jb
mov
cmp
fiadd
adc
mov
lea
loop
jnp
add
(bad)
mov
outs
std
add
mov
mov
xor
mov
aaa
sahf
mov
cmp
stos
mov
pop
cmp
xlat
jb
cld
sbb
jne
fsubr
retf
push
ss
mov
jne
fwait
xor
mov
loop
jmp
adc
test
dec
not
js
leave
mov
sub
and
movs
xlat
push
inc
in
or
outs
mov
addr16
or
enter
inc
dec
mov
dec
push
retf
cmc
and
retf
jnp
call
out
mov
mov
shl
inc
xchg
(bad)
adc
xchg
and
movs
mov
pop
jo
cmp
mov
mov
das
dec
xlat
jp
test
popf
imul
mov
stos
fwait
xor
sub
inc
xchg
xchg
movs
lds
mov
ss
ret
pop
icebp
dec
and
and
sbb
xor
mov
ins
mov
push
add
ret
jae
fisubr
add
pop
mov
dec
add
sub
mov
jecxz
sbb
mov
mov
cmc
jg
and
stc
fcomp
sbb
and
out
pop
(bad)
jge
repnz
jp
je
inc
sub
lds
jge
mov
movs
loop
mul
pop
fild
mov
jle
fs
test
jns
mov
aam
lods
mov
sub
sub
pop
popf
push
push
dec
sub
jge
cs
cdq
jae
nop
(bad)
push
ss
mov
inc
inc
adc
xchg
(bad)
cli
stos
(bad)
add
ins
pop
ret
les
sbb
sub
out
imul
pop
push
xchg
add
jmp
pop
enter
nop
mov
xchg
sbb
adc
push
fidiv
call
sbb
sbb
fimul
push
daa
pop
stos
fdivr
dec
adc
sub
jmp
cmp
outs
repz
lea
xchg
mov
xor
and
mov
(bad)
out
mov
das
dec
mov
aam
mov
leave
bound
mov
jle
jmp
in
ret
cdq
leave
test
retf
cs
xchg
or
loop
ret
js
enter
sahf
gs
test
pop
cli
jmp
fsub
adc
call
retf
xor
sub
push
jae
(bad)
mov
imul
add
jp
loope
inc
aam
dec
into
stos
xchg
push
cmps
xor
fs
sbb
push
int3
ds
pop
fs
femms
(bad)
es
daa
ret
ficom
rcl
mov
jne
add
dec
retf
push
pop
pop
ins
mov
in
inc
add
sub
in
pop
xchg
js
sti
and
jmp
dec
bound
inc
adc
mov
daa
pop
inc
scas
cmc
shl
mov
scas
cdq
sub
push
pop
or
and
inc
and
lahf
mov
cmc
mov
cmps
and
sbb
pop
pop
arpl
dec
pusha
or
pop
or
cld
push
frstor
movs
sti
shl
test
out
dec
fwait
mov
dec
icebp
jmp
cmp
sbb
mov
hlt
fistp
out
cmp
pop
mov
movs
sub
iret
xchg
xor
mov
lea
add
inc
aam
mov
outs
jg
icebp
mov
ror
repz
dec
mov
cmc
or
pop
cmps
xor
add
lods
mov
xchg
sub
js
inc
jae
adc
test
and
in
jo
stc
jg
retf
xor
adc
dec
mov
push
retf
fcomp
pushf
fnstenv
inc
adc
pop
into
adc
imul
push
push
dec
adc
cmp
sbb
cld
retf
je
sub
or
mov
xchg
lods
data16
sub
adc
mov
(bad)
rol
fnstsw
mov
test
test
ss
xor
push
mov
icebp
jns
sub
data16
je
ins
jmp
cmp
lods
hlt
sti
cmp
xchg
pop
mov
inc
mov
ffree
js
je
push
js
dec
fcomi
inc
and
push
jg
mov
cmp
into
add
fst
adc
idiv
cmp
retf
lods
dec
or
sbb
jnp
adc
das
sub
repz
push
ret
call
in
or
out
adc
(bad)
adc
push
aas
fdivr
mov
repz
mov
jp
ins
pop
sbb
sbb
add
lds
rol
mov
mov
mov
ss
mov
inc
cmp
or
aas
pop
ins
clc
inc
ret
mov
push
pushf
aaa
inc
pushf
fwait
ins
stos
and
fwait
xchg
out
or
sub
xchg
xchg
push
add
add
add
das
inc
aaa
shl
push
mov
mov
test
xchg
rcl
sar
mov
jg
pop
ins
sbb
pop
or
fld
rcr
dec
hlt
call
das
pop
jae
xor
adc
sbb
(bad)
or
dec
dec
xlat
xchg
sbb
jae
ficom
cwde
push
jge
lds
adc
push
cmp
xor
in
add
dec
repnz
dec
xor
imul
xchg
popa
cmp
pop
and
cmp
scas
sub
ret
xchg
push
dec
mov
repz
cs
mov
xchg
ror
xchg
(bad)
or
ds
cs
aam
fwait
mov
xor
idiv
or
push
fld
(bad)
push
add
fbstp
push
sbb
jl
mov
(bad)
cdq
jecxz
(bad)
(bad)
push
push
cmp
inc
pop
repz
mov
xor
jns
sub
mov
dec
pusha
push
jno
xor
jo
xchg
(bad)
cmp
sub
xchg
add
adc
cmp
(bad)
push
jg
imul
and
fisub
mov
test
jo
cmp
out
push
cld
mov
jae
inc
mov
mov
ins
fs
xchg
mov
xchg
mov
fisub
dec
gs
and
add
lahf
inc
outs
sub
mov
cmp
fcmove
xor
pop
mov
xor
ret
jle
sub
push
call
mov
push
movs
lods
leave
scas
in
xor
jmp
mov
mov
cmp
sub
cdq
add
popa
lahf
fist
inc
xchg
and
cdq
ss
loopne
rcr
jne
pusha
or
push
sub
cmps
mov
mov
pushf
es
sub
(bad)
scas
xchg
retf
sysenter
pop
push
je
aaa
adc
jle
repz
mov
stos
clc
jns
stos
or
xor
fcom
jno
lds
ins
or
imul
loopne
cmps
adc
ja
test
sti
(bad)
loop
aas
xor
shl
inc
fdivr
push
fwait
popa
loop
mov
xchg
imul
repz
rol
pop
fnstenv
dec
daa
jecxz
xor
xchg
mov
cmp
loopne
hlt
xor
push
repnz
mov
sbb
cmp
aaa
in
call
(bad)
pop
push
sub
in
push
lea
pushf
loopne
dec
sbb
cmp
(bad)
sbb
and
aad
xor
add
nop
in
xchg
mov
mov
pop
int
mov
mov
inc
loopne
addr16
std
out
enter
cmc
into
or
or
push
mov
push
cmp
jo
sti
cmc
sub
ins
xor
add
cmc
popf
mul
pop
cs
test
and
movs
and
xlat
cmp
pop
add
out
scas
nop
pushf
movs
shl
dec
inc
ins
xor
push
xchg
sbb
es
or
adc
mov
cmp
jg
xchg
and
bound
les
pop
add
sbb
in
nop
pushf
xlat
ja
ds
and
push
jge
cli
addr16
retf
mov
(bad)
mov
pushf
jae
jo
les
lods
outs
js
(bad)
test
cmp
cmp
push
jb
adc
pop
sbb
movs
mov
rol
les
je
rol
mov
add
cmc
popf
out
(bad)
or
sub
push
(bad)
lods
inc
dec
imul
or
mov
push
sbb
push
adc
sbb
cs
mov
hlt
(bad)
inc
out
push
sub
mov
daa
mov
popa
sbb
push
fcom
xchg
nop
xchg
mov
mov
push
jmp
pop
or
pop
es
test
unpcklps
pop
cmps
cmp
xor
loopne
shl
mov
scas
(bad)
repnz
and
ja
xlat
xchg
pop
mov
icebp
mov
xor
xchg
sbb
jo
push
out
xor
fisubr
mov
(bad)
cdq
movs
loope
pop
sahf
loop
mov
in
xchg
push
mov
xor
test
(bad)
cdq
jno
ss
mov
sub
dec
mov
aam
cmps
lahf
jmp
jnp
jnp
push
xor
add
aam
xchg
pusha
cmc
iret
pop
push
inc
dec
int3
imul
pop
xchg
fdiv
jle
adc
mov
(bad)
scas
stc
addr16
pop
xchg
jle
out
jnp
js
xor
aam
lds
loopne
dec
xchg
(bad)
adc
lods
std
fdivr
xor
mul
mov
ret
out
push
test
icebp
mov
dec
ins
xchg
push
ds
stos
push
fisttp
sahf
push
(bad)
mov
push
scas
mov
(bad)
popf
mov
mov
sub
jmp
movs
jge
lahf
cmp
push
mov
ss
or
(bad)
rol
imul
les
xchg
and
push
pop
(bad)
mov
outs
or
inc
sub
iret
sub
inc
adc
add
cmp
adc
icebp
add
(bad)
int3
rol
fisubr
sti
cdq
data16
xor
ret
cmp
(bad)
das
add
outs
or
and
popa
sbb
ds
lods
das
jl
cdq
mov
mov
lahf
adc
sbb
js
dec
(bad)
cmp
push
pop
cmp
push
cmc
icebp
fwait
loope
mov
scas
js
jne
cmp
fldenv
mov
inc
push
push
shl
mov
dec
add
int
cmp
fcos
dec
int
jb
xchg
icebp
mov
xor
mul
clc
and
dec
push
push
mov
cmpxchg
xchg
mov
(bad)
inc
dec
ds
jns
mov
cmp
push
dec
mov
aad
xor
or
mov
cwde
popa
in
test
push
mov
xchg
out
dec
out
jecxz
and
mov
pop
int3
push
loope
retf
sti
jmp
gs
fidiv
test
pop
mov
mov
aaa
push
lahf
jp
shr
jns
in
xor
cmp
dec
bsr
xchg
cmp
jl
addr16
aas
push
or
pop
int
cmp
daa
test
std
mov
pushf
xchg
into
fwait
inc
jg
sub
pop
mov
jle
and
fst
mov
movs
mov
cmp
or
leave
cmps
ret
mov
cwde
mov
mov
stos
jle
bound
fcmovnu
(bad)
clc
popf
jnp
jmp
pop
adc
jmp
les
push
jmp
arpl
mov
clc
and
gs
leave
int3
sub
cmp
sbb
or
and
sbb
ret
dec
pop
ds
sub
jle
lock
push
pop
repz
cmc
(bad)
sub
add
scas
data16
jne
sbb
jbe
mov
jbe
aaa
in
sti
push
mov
inc
lds
sbb
dec
mov
dec
mov
push
bnd
add
lea
mov
jae
jb
adc
or
xor
mov
ja
ret
sti
sub
cmp
in
cmp
loopne
(bad)
xor
mov
jp
inc
movs
(bad)
je
fild
fst
(bad)
test
sahf
pop
jmp
sub
leave
lock
xor
fadd
rol
mov
mov
sar
xchg
fcomp
cmp
inc
stc
daa
mov
dec
ror
ret
mov
fld
(bad)
jbe
cmps
or
fs
jae
loope
mov
pushf
hlt
popf
push
and
je
sar
dec
aam
mov
mov
mov
into
jns
call
test
adc
xchg
iret
enter
adc
ja
enter
int
fmul
xchg
ret
push
push
sub
inc
inc
(bad)
ds
aam
pushf
inc
push
mov
adc
push
sub
test
jns
sub
jmp
shl
cs
jno
loope
mov
ret
rol
adc
pop
inc
push
rcr
lock
dec
dec
imul
nop
and
icebp
call
pop
jae
es
ror
adc
imul
repz
add
in
lds
out
outs
push
jns
fdivr
mov
stc
mov
mov
repnz
xlat
push
jmp
scas
movs
or
ins
pop
or
and
test
(bad)
leave
pop
push
add
xchg
rcl
xor
dec
dec
mov
pop
dec
dec
sub
outs
sbb
je
add
cmp
aas
xor
add
and
jle
popa
mov
fist
mov
mov
outs
loopne
adc
test
sar
jp
fimul
xor
xchg
scas
pop
dec
in
adc
dec
mov
mov
or
and
dec
rol
pop
adc
sbb
mov
sub
inc
(bad)
pop
inc
xchg
shr
movs
(bad)
outs
push
stc
or
and
stos
loope
sub
and
out
bnd
xchg
and
in
clc
adc
inc
rol
jle
xor
pop
push
mov
cmp
lods
sar
add
ins
ss
in
hlt
or
jmp
dec
mov
lods
or
push
cmp
fs
mov
fadd
pop
repnz
fstp
cdq
adc
xor
ins
pop
and
shl
push
scas
jb
int
lds
fistp
in
hlt
call
add
pop
sar
repnz
sti
push
ror
adc
inc
ds
or
imul
xor
scas
je
inc
test
popf
lahf
int
push
sub
aaa
mov
push
sbb
inc
lahf
cbw
lahf
adc
mov
jae
jl
add
push
add
add
or
sbb
outs
xor
xchg
xchg
ret
bound
and
sbb
lds
add
aas
inc
pop
in
rcl
shl
fs
cmp
hlt
icebp
jo
xchg
bound
sbb
or
mov
jmp
pop
xchg
push
in
sar
mov
mov
and
xchg
jne
test
push
and
push
movs
scas
xchg
int
dec
push
ja
mov
outs
jno
cmp
jb
add
ins
neg
adc
push
shl
nop
mov
cld
sub
cli
mov
shr
cld
imul
or
sbb
(bad)
js
push
pop
in
rcr
mov
add
shl
in
push
iret
les
addr16
pop
ret
xchg
loope
xchg
fucom
cmp
mov
push
or
ror
sysenter
lods
in
cmp
in
nop
mov
or
inc
pop
out
add
cld
pusha
or
arpl
mov
inc
xor
pop
mov
add
inc
or
sub
sbb
pop
clc
xlat
pusha
or
(bad)
cdq
aad
inc
cld
stos
add
cmp
dec
add
cld
loope
mov
dec
mov
lea
ret
cmp
rcl
mov
neg
popf
popf
mov
push
loopne
lods
sbb
inc
push
push
pop
sbb
dec
test
mov
xor
mov
adc
jb
ret
mov
xor
mov
mov
mov
outs
adc
jl
jne
aas
add
push
push
mov
and
mov
stc
getsec
mov
imul
pop
sar
jle
cli
mul
or
mov
mov
test
loopne
cmp
inc
jnp
fs
sub
jge
dec
aad
xor
cmp
pop
out
and
push
sti
pop
xchg
and
xor
popf
test
pop
call
(bad)
mov
imul
stos
(bad)
into
sub
call
sbb
cld
clc
push
out
ret
stos
fcomp
adc
or
mov
js
and
inc
lods
imul
mov
iret
sub
out
jmp
jo
mov
cmps
sti
and
push
xchg
inc
add
(bad)
and
mov
pop
and
mov
mov
xor
dec
jns
xor
sti
inc
ds
fcmovu
adc
mov
push
cmp
loopne
test
push
in
xor
addr16
jmp
icebp
es
or
(bad)
jnp
sbb
sub
in
dec
test
out
cmps
mov
leave
int
sub
in
ja
movs
mov
gs
call
dec
pop
xlat
sbb
mov
dec
loopne
ja
sahf
loope
adc
dec
mov
xor
sti
in
fld
cld
fisttp
cmp
xor
jns
das
cmp
retf
cdq
popa
(bad)
outs
inc
add
lds
icebp
mov
pop
leave
outs
mov
jp
push
popf
add
cmp
test
mov
gs
cmps
xor
jbe
jno
dec
(bad)
sbb
test
pop
clc
dec
out
outs
push
adc
cmp
clc
js
call
and
xchg
pushf
mov
pop
pop
push
jp
and
inc
xchg
cmp
int3
sub
cli
xchg
or
mov
(bad)
jl
scas
jge
(bad)
push
fdiv
cmps
adc
fild
xchg
push
(bad)
nop
cmp
leave
dec
jle
xchg
cmps
ins
scas
cmp
cmp
out
sar
push
loopne
iret
rcr
jb
push
arpl
stos
fs
sbb
rdmsr
call
mov
hlt
push
retf
cmps
cdq
jns
out
out
jmp
mov
mov
jae
sti
repnz
mov
mov
addr16
cmp
add
jne
or
jg
jp
or
ror
pop
inc
outs
inc
lods
mov
inc
popa
sti
xor
ss
xchg
add
cld
pmulhw
mov
adc
rcl
repz
pop
pop
addr16
popa
xchg
scas
inc
ja
jno
mov
inc
pop
or
test
hlt
mov
(bad)
aad
push
push
loop
mov
cmp
aad
pusha
fstp
or
sbb
push
add
inc
cdq
scas
sbb
lea
push
fnstcw
daa
adc
pop
das
sub
xchg
pop
dec
(bad)
fbld
jge
cdq
and
adc
(bad)
sbb
stos
sar
xchg
stc
xchg
mov
add
dec
daa
gs
inc
movs
int
pop
dec
mov
jb
fsub
inc
lahf
sbb
popf
mov
adc
jge
mov
test
push
int
dec
push
or
or
mov
in
pop
addr16
cmp
push
imul
cdq
or
js
mov
cwde
repz
cs
stc
ret
cdq
jecxz
mov
jae
pop
scas
mov
and
push
mov
mov
aaa
int3
out
xor
imul
pop
jg
jecxz
(bad)
sub
mov
add
jne
out
jl
and
addr16
mov
xchg
mov
(bad)
out
imul
push
push
(bad)
rcl
push
repz
out
call
push
sub
sub
or
sbb
(bad)
jmp
dec
inc
xchg
(bad)
mov
sub
or
inc
jne
int
repz
pop
mov
int
pushf
adc
push
add
outs
push
mov
push
out
sbb
shr
or
add
pop
push
cmp
xchg
pop
(bad)
jle
not
ss
mov
nop
dec
leave
push
mov
sub
pusha
xor
xor
mov
jo
ret
std
or
lock
mov
ret
out
mov
sub
pop
mov
mov
or
or
les
mov
push
add
jno
jo
mov
mov
stos
dec
and
or
dec
adc
das
cli
xor
dec
inc
push
iret
xor
cmp
jp
ds
or
cmp
and
rcr
pop
movs
addr16
add
xchg
je
xor
lock
jmp
and
cli
popf
and
(bad)
ret
or
lods
mov
lods
fwait
aad
sbb
shl
inc
(bad)
mov
shl
dec
mov
or
mov
js
enter
ins
add
push
xchg
adc
pop
push
push
push
pop
(bad)
in
cmc
adc
add
test
aad
out
lods
pop
mov
xor
sbb
fs
pop
rcl
cwde
cmp
sbb
stos
test
dec
add
push
test
lods
retf
retf
push
dec
mov
mov
jle
ror
jne
jns
(bad)
sub
daa
jecxz
jae
cmp
pop
and
add
xor
xchg
imul
xor
fcomp
or
test
scas
push
rol
fsub
scas
mov
push
jge
pop
loopne
or
jb
call
sub
and
push
dec
scas
(bad)
neg
jmp
push
mov
aad
xor
dec
inc
sbb
or
pop
mov
cmp
push
test
xor
add
aad
or
mov
pop
or
fcmove
movs
and
fdivp
leave
mov
nop
ins
or
leave
frstor
icebp
mov
sbb
cmp
pop
jno
sbb
ins
fdiv
and
sahf
dec
push
xor
or
xor
jmp
and
mov
std
adc
js
imul
lock
int
xchg
jle
push
pop
push
ret
cmc
and
push
stos
add
inc
mov
sub
data16
aad
and
dec
mov
cmp
cld
ja
inc
mov
or
cwde
jl
xchg
mov
xor
xchg
or
jmp
sar
aam
bound
xor
sbb
lea
push
jno
loope
sub
sub
xor
fmul
popf
out
fsincos
mov
inc
cmp
xor
and
mov
sub
aas
add
xchg
out
pop
popa
ss
sbb
(bad)
pushf
xchg
adc
add
jno
adc
je
inc
(bad)
fild
loop
fild
cmp
and
hlt
shl
enter
repnz
std
or
adc
cwde
lods
xor
and
fwait
nop
shl
movs
pop
jae
sahf
lahf
sbb
std
add
test
xor
and
out
enter
cld
push
fidivr
pop
fs
(bad)
lahf
shl
pop
and
sub
data16
hlt
mov
test
jmp
jl
push
mov
pop
jns
(bad)
ins
cwde
fst
sti
jno
xor
push
cdq
loopne
pop
icebp
pop
cmp
sbb
adc
sti
dec
adc
lods
lock
inc
dec
pop
mov
mov
xchg
or
adc
or
retf
sbb
popa
add
mov
xchg
scas
cmp
sbb
push
jnp
or
pop
push
cld
div
or
sbb
sti
repz
sbb
lods
loope
lock
loopne
das
add
mov
ins
stos
inc
lods
popf
ss
mov
or
xchg
scas
ret
in
pop
fst
aaa
jp
fadd
sub
adc
ss
rcl
js
dec
xchg
or
pusha
dec
mov
cwde
repz
or
xor
mov
push
rcl
enter
fild
out
inc
int
sbb
jno
in
pop
add
adc
mov
jle
out
movs
loop
sbb
push
lock
in
in
cmp
pop
ds
imul
xchg
nop
mov
inc
cdq
jns
mov
aad
sub
cmc
loop
add
jl
mov
xor
pop
push
stos
in
bound
mov
xor
shr
add
sahf
add
or
xchg
loop
mov
int
or
xor
inc
icebp
neg
and
push
sbb
cmp
rcl
stos
inc
inc
jmp
add
ja
mov
xchg
mov
jae
push
(bad)
pop
jle
pop
sub
sub
sub
daa
je
pop
into
add
inc
sub
fnstsw
mov
stc
inc
fimul
cmp
call
frstor
mov
or
cmp
jnp
mov
inc
and
aaa
mov
outs
loop
fisub
push
inc
mov
test
std
and
stos
lahf
jge
push
imul
out
leave
add
or
frstor
int
sub
push
fldenv
(bad)
out
rcr
adc
data16
pop
or
cmp
mov
mov
adc
fst
push
fstp
mov
pop
sbb
fistp
pop
inc
addr16
dec
and
xchg
dec
mov
jecxz
aam
push
mov
dec
in
jl
hlt
pmaxub
jecxz
fwait
adc
and
inc
mov
xor
mul
xchg
mov
(bad)
ror
and
mov
mov
adc
or
(bad)
sti
jp
mov
in
mov
push
(bad)
mov
ds
stos
out
inc
(bad)
jns
jo
out
fs
retf
out
sbb
out
add
out
aad
scas
or
shl
movs
test
loope
out
lock
repnz
movs
repnz
or
jmp
mov
hlt
ror
push
int3
lahf
int3
test
adc
mov
xchg
cmc
out
sub
push
and
in
cmp
fisubr
pop
mov
jne
ss
lods
xor
or
or
gs
dec
push
pop
in
inc
mov
clc
mov
jp
ds
push
cdq
fistp
ret
mov
jmp
das
bnd
sahf
rol
in
repz
sub
out
xchg
rcr
or
pushf
pop
dec
pop
dec
inc
scas
inc
mov
dec
mov
push
push
js
push
dec
(bad)
stc
or
test
(bad)
sar
loop
jno
jp
sub
mov
loop
mov
inc
dec
fadd
xchg
and
and
movs
test
adc
syscall
jmp
pop
ret
pop
inc
sbb
inc
add
loopne
pop
lods
stc
mov
aaa
adc
dec
sub
pop
cwde
xor
call
jo
push
fcomp
loope
jg
test
sub
mov
leave
cmp
xor
out
xchg
fs
sti
dec
int3
data16
sub
imul
mov
push
mov
mov
clc
loopne
stos
or
inc
bound
cdq
mov
fcom
pop
imul
fistp
rcl
push
mov
cmp
ret
sbb
inc
test
mov
or
jb
mov
fisubr
(bad)
stc
mov
into
jmp
aaa
cmp
(bad)
mov
addr16
repz
neg
(bad)
inc
push
add
jns
and
nop
mov
push
enter
das
scas
inc
mov
stos
mov
std
or
mov
iret
xchg
popa
jae
aaa
jp
pop
popf
jge
cli
mov
add
je
call
pop
push
mov
xor
jle
inc
clc
(bad)
push
cmp
sub
or
jle
cmps
(bad)
out
out
pop
ins
mov
js
push
inc
inc
pushf
clc
push
adc
adc
(bad)
(bad)
push
dec
push
push
and
mov
and
xor
inc
xchg
das
rcl
mov
mul
aad
or
imul
mov
pop
pop
lahf
sbb
adc
and
loope
add
and
fdiv
push
inc
xchg
shl
stos
and
and
push
and
popf
popa
aaa
xor
mov
data16
sbb
add
or
push
loope
add
ror
dec
(bad)
(bad)
jmp
nop
mov
mov
xchg
mov
xor
(bad)
int3
out
loopne
repz
push
sub
push
dec
dec
xchg
or
arpl
jmp
push
cwde
push
add
add
adc
pop
sub
or
nop
ins
jmp
jns
in
sbb
sub
imul
fist
call
out
adc
sub
push
sub
clc
push
cmp
mov
pop
stos
or
nop
pushf
fdivrp
cmp
(bad)
xchg
inc
inc
xchg
jl
mov
cmc
adc
hlt
cmp
out
or
scas
ja
xor
in
adc
jbe
sbb
(bad)
movs
ins
cmp
cli
les
sbb
(bad)
call
and
sbb
cli
loope
mov
cmc
or
fucomip
mov
std
push
adc
inc
iret
xchg
stc
lea
sub
jle
(bad)
mov
aaa
jnp
dec
test
jb
pop
into
test
nop
inc
push
das
push
mov
int
push
(bad)
loop
fucomi
mov
scas
mov
retf
adc
add
dec
jmp
(bad)
loop
jge
cmp
cmp
(bad)
dec
lock
add
sub
inc
add
adc
cmp
loop
xor
ja
sub
xor
mov
and
cs
jb
pusha
jne
add
int3
pop
sub
rcl
cli
repz
(bad)
xchg
pusha
push
scas
les
outs
clc
cli
push
add
and
hlt
mov
lds
inc
daa
sbb
aaa
sahf
cs
cmp
and
popa
push
inc
mov
iret
(bad)
mov
fisttp
push
or
mov
or
sti
push
scas
dec
push
jp
add
mov
xor
ja
(bad)
or
imul
mov
and
or
xor
sbb
cli
jl
imul
or
fld
mov
lea
les
sub
sbb
ja
stos
shl
xor
xchg
sahf
sub
pop
adc
cmp
pop
jae
mov
popf
mov
mov
jmp
aam
(bad)
out
dec
fnstenv
imul
and
sbb
push
mov
loop
into
cmp
mov
stos
clc
ja
xrelease
sbb
mov
push
test
pop
lods
dec
adc
sub
sbb
retf
bound
(bad)
and
sub
test
dec
test
sbb
inc
push
cmp
fcom
int3
popf
cli
std
cdq
loop
adc
or
mov
mov
retf
sbb
sbb
pop
xor
ja
cmps
push
mov
pop
sbb
xchg
sub
jae
push
mov
fbstp
mov
push
mov
fcom
mov
int
out
or
lea
mov
add
pop
cld
(bad)
imul
and
iret
(bad)
cmp
iret
push
enter
dec
push
add
jae
mov
sbb
and
cmps
cmp
inc
mov
jmp
adc
push
outs
adc
fild
scas
sub
dec
mov
mov
push
movs
jmp
leave
test
inc
adc
dec
xchg
aaa
and
jo
push
cmp
push
ja
test
aam
inc
fstp
xchg
dec
push
cmp
out
repz
pop
jmp
pop
fidivr
and
outs
sbb
pop
xor
bound
je
test
inc
aaa
movs
pusha
sbb
fwait
(bad)
or
test
outs
sub
xor
xchg
sub
test
jl
mov
je
sbb
cmp
xlat
je
or
mov
popf
outs
adc
mov
push
test
pop
sti
pop
inc
xlat
fimul
stos
jmp
mov
inc
or
push
cdq
pop
and
mov
and
call
cmc
adc
int
sub
or
xchg
dec
mov
adc
stc
xchg
inc
stos
(bad)
jns
push
pop
mov
sbb
int
mov
xor
fsub
cdq
repnz
aad
lods
mov
mov
sar
mov
push
cmps
or
add
test
aaa
dec
and
lods
mov
adc
fidivr
fbstp
sub
xlat
dec
or
xor
lahf
xor
cld
dec
jle
leave
les
sub
push
repz
jnp
or
mov
fcomp
pop
xor
push
inc
xor
(bad)
and
rol
mov
dec
lods
xor
pop
xor
cmps
sub
mov
mov
mov
stos
rol
push
lock
inc
mov
ins
xor
in
inc
push
jns
sbb
dec
or
push
ret
stos
rcr
(bad)
lock
jo
pop
push
xor
push
popf
jb
loopne
inc
(bad)
(bad)
and
test
sahf
arpl
stos
cmp
frstor
mov
sub
inc
(bad)
loop
leavew
arpl
mov
(bad)
leave
inc
inc
clc
push
cmps
cmps
push
imul
cmps
int
data16
retf
movs
clc
pop
inc
lods
clc
and
adc
stos
aaa
fmul
(bad)
fs
push
inc
inc
mov
and
les
mov
xchg
sub
pop
dec
add
push
dec
out
out
mov
push
and
inc
in
das
and
ss
cli
aaa
les
inc
movs
lods
movs
and
fbld
mov
push
or
sbb
fdiv
cmp
push
mov
mov
jp
sahf
in
cmps
bound
addr16
jge
adc
xchg
mov
push
daa
xor
pop
or
pop
pop
out
pop
push
cmp
lods
xchg
arpl
pop
jnp
xlat
pop
(bad)
rcr
pop
fld
mov
jno
ins
out
data16
mov
call
scas
arpl
movaps
sbb
fnstenv
cmp
cmp
push
stos
mov
cmp
icebp
pop
idiv
xchg
cmc
add
cmp
add
pop
mov
push
dec
cs
hlt
sbb
ret
sub
lods
stos
jae
or
push
loope
push
cwde
sbb
jecxz
and
call
ss
jge
and
fs
jae
xor
std
cwde
mov
imul
fs
out
jns
sbb
jnp
dec
stos
scas
xchg
movs
movs
jns
fwait
push
push
pushf
jne
jmp
push
inc
hlt
or
add
jp
es
ss
shr
inc
sbb
sbb
or
mov
cmp
add
fidiv
xchg
cmp
test
push
bound
ret
in
xchg
xlat
inc
lds
ja
hlt
repnz
or
and
adc
test
data16
add
std
xchg
mov
pminub
out
movs
ficom
mov
push
sub
fisub
mov
js
push
xor
dec
xchg
fistp
pop
icebp
xor
adc
mov
jmp
je
dec
inc
or
inc
mov
ins
pop
xor
xchg
neg
fwait
movs
xchg
mov
jecxz
sub
push
push
imul
inc
sbb
test
pop
xor
adc
pop
sbb
xlat
inc
and
js
mov
(bad)
loop
mov
popa
dec
lahf
xchg
sub
jl
pop
fnstenv
adc
pop
ja
ds
sahf
test
test
mov
mov
ins
aaa
movs
mov
ror
inc
daa
enter
mov
mov
aad
pop
imul
arpl
inc
mov
push
inc
test
and
test
pop
or
push
pusha
mov
sub
shr
pusha
das
mov
int3
aas
jo
xor
mov
out
xchg
cli
out
out
aam
dec
rcl
lds
hlt
lahf
sbb
lock
cmp
dec
and
jo
push
jecxz
jmp
loop
rcr
nop
(bad)
ja
cdq
xchg
fstp
cmp
push
mov
jge
sti
pop
js
ja
aam
mov
push
pop
mov
pop
inc
inc
in
imul
cmp
adc
loop
jecxz
stos
sbb
xchg
cmp
stc
(bad)
les
xor
jae
stos
cwde
sbb
cmps
mov
push
(bad)
clc
mov
shl
mov
data16
pop
call
out
fnstcw
mov
(bad)
cmp
sub
inc
int
mov
std
inc
and
je
pop
sub
repz
outs
test
pop
fs
mov
loop
ins
test
loop
das
push
sbb
fist
fsub
test
repnz
neg
cmp
mov
call
ins
jno
test
push
inc
jmp
stos
inc
ficom
test
xor
popa
ret
sub
int
and
loop
icebp
cs
jae
adc
cmps
nop
mov
rcl
jg
scas
cs
jns
cmc
(bad)
jbe
xchg
iret
call
loopne
xor
push
xor
mov
lds
adc
jge
ret
out
jb
xchg
test
aad
pushf
retf
in
push
sahf
push
in
lods
push
push
aam
movs
jg
sti
cmps
out
mov
push
pop
and
movs
ret
out
cmp
cmps
add
xor
aam
inc
shl
xlat
outs
nop
adc
adc
mov
ds
aas
loopne
dec
jg
outs
cmc
in
and
jg
dec
pop
lock
inc
jne
inc
fimul
mov
js
sub
xor
pop
mov
lea
dec
fiadd
ret
xchg
and
stos
aam
mov
retf
inc
inc
fsub
lods
std
ret
into
mov
inc
repz
mov
sbb
xchg
iret
xchg
stos
or
mov
jbe
jns
push
sti
sub
fcomi
maskmovq
not
cwde
popa
cmp
push
jmp
imul
(bad)
aam
push
pop
xlat
xor
add
add
xchg
out
mov
ja
mov
(bad)
data16
jmp
repnz
jg
cmp
(bad)
xor
jb
rcl
aas
cwde
fcomp
xchg
fcom
in
add
arpl
lods
xchg
retf
sub
je
lahf
je
dec
fdivrp
lds
pop
sub
jnp
dec
ret
xchg
out
mov
pop
mov
out
ror
push
ins
aam
mov
push
(bad)
scas
(bad)
fisub
dec
enter
pop
adc
add
outs
mov
jge
xchg
fdivr
popa
add
jl
push
shl
(bad)
or
stc
(bad)
sbb
daa
(bad)
ror
push
sub
mov
xor
pusha
out
stos
xchg
imul
or
bound
out
xchg
clc
jns
inc
ins
das
ds
push
mov
int3
cs
cmp
sar
sar
push
lahf
inc
adc
mov
dec
cdq
or
mov
mov
push
rol
loope
dec
int3
jno
aaa
mov
es
loop
aaa
shr
cmp
mov
pushf
adc
ins
aaa
loop
inc
push
dec
inc
cmp
push
int3
mov
loop
jmp
mov
push
aaa
lahf
mov
push
jg
mov
mov
xchg
js
mov
(bad)
fdiv
lahf
das
sbb
fwait
mov
cld
xchg
aaa
loope
fisttp
xchg
mov
lods
mov
fmul
push
push
push
and
sub
call
jbe
and
inc
dec
push
mov
inc
pushf
cs
daa
add
into
nop
push
outs
fcmovnb
outs
xchg
inc
mov
lods
jmp
daa
mov
pop
or
mov
int3
sbb
shr
sahf
aas
push
out
adc
dec
inc
sbb
xor
push
(bad)
mov
shl
ja
call
mov
int
sbb
fild
xor
(bad)
pop
jge
(bad)
ror
xchg
inc
sbb
push
jg
fst
shl
aas
mov
and
adc
push
pop
call
xor
xchg
add
shl
jp
cli
cmp
xchg
imul
fnstcw
jp
mov
in
jb
das
repz
(bad)
jo
mov
jbe
mov
inc
add
pushf
xchg
sar
xchg
lock
and
mov
sub
jg
or
jns
ds
jecxz
and
push
in
and
adc
pop
aaa
movs
mov
test
adc
cmc
or
mov
inc
pop
lods
ret
test
and
mov
jno
cmps
or
nop
xchg
mov
popa
mov
xor
data16
stc
(bad)
jge
adc
test
push
jb
aad
mov
mov
cli
mov
jae
or
jmp
fsub
out
arpl
adc
mov
fwait
sahf
adc
sbb
(bad)
add
not
push
in
sub
into
ins
mov
pop
adc
ret
test
lock
push
das
inc
xor
jb
rol
fst
leave
mov
mov
div
cmp
mov
mov
mov
rcr
std
aas
dec
je
or
mov
sbb
and
(bad)
in
mov
mov
pusha
fnstsw
cmp
fmul
inc
xor
mov
push
mov
je
xchg
cmp
xlat
es
dec
cdq
fcomp
mov
gs
mov
movs
in
pushf
pop
rol
pop
pop
cmc
fimul
clc
mov
xchg
retf
or
lea
add
lods
mov
nop
sub
dec
shl
sbb
adc
sub
sub
adc
pop
fwait
sub
jmp
fild
sub
mov
mov
out
jne
popf
mov
ret
ret
ret
cs
xchg
dec
dec
adc
mov
(bad)
(bad)
xchg
cmps
inc
pop
push
xchg
cmp
outs
dec
imul
and
mov
jb
lock
mov
add
cmp
jp
test
dec
inc
sub
sahf
or
xchg
mov
jmp
imul
test
cmps
xor
mov
mov
dec
pop
mov
jge
mov
cmps
jne
mov
fdiv
pop
add
loopne
adc
repnz
les
sahf
or
cli
adc
test
in
push
mov
loopne
test
(bad)
enter
jge
sbb
pop
in
pop
dec
test
sub
xor
cmp
outs
lds
push
dec
sub
(bad)
xchg
push
and
adc
sbb
push
lods
cld
outs
mov
and
int
jmp
xor
mov
push
pop
push
arpl
sbb
inc
jae
mov
mov
cli
dec
pop
inc
bound
dec
pop
mov
mov
xor
inc
or
mov
inc
sub
sub
shl
push
xor
pop
pop
aam
jae
aad
and
loopne
dec
loopne
repz
cs
in
dec
or
dec
jno
into
retf
cwde
xchg
add
sbb
test
gs
out
sub
outs
and
ror
push
dec
icebp
sti
mov
mov
loopne
ins
jns
(bad)
sbb
pop
cmps
ficom
inc
cmp
in
dec
sahf
aad
mov
and
repnz
add
inc
adc
xor
push
scas
dec
and
stc
pop
lock
or
mov
mov
pusha
mov
mov
nop
dec
in
push
mov
into
movs
dec
cld
dec
rcl
mov
adc
push
repnz
mov
fwait
in
ds
leave
aam
dec
sub
(bad)
mov
jmp
mov
pop
sahf
push
(bad)
imul
and
inc
dec
retf
pop
test
not
loope
sbb
push
or
dec
js
fcmovb
aas
ret
mov
mov
add
or
(bad)
or
out
xchg
jp
jne
mov
inc
and
jo
lahf
and
or
jne
push
sbb
jbe
sub
loop
sbb
sbb
mov
mov
lea
push
sub
ja
(bad)
std
mov
sub
or
inc
ret
out
imul
test
icebp
dec
sar
loop
fld
mov
mov
push
mov
cmp
pop
pop
or
scas
inc
adc
jae
js
js
ret
ss
mov
mov
pop
clc
icebp
dec
inc
aas
sbb
xchg
push
popa
pushf
(bad)
lahf
pop
popa
movs
sbb
mov
mov
popa
lods
push
push
fiadd
movs
retf
jns
mov
sbb
push
xchg
dec
ins
sbb
in
shl
jmp
out
jo
adc
or
imul
xchg
dec
mov
adc
push
in
shr
out
stos
push
js
rcl
leave
cs
push
ret
dec
cmc
sub
push
rcr
out
lock
sub
mov
pusha
(bad)
shl
add
fsubr
pop
push
lahf
retf
sub
mov
push
xor
mov
arpl
sbb
ret
outs
inc
ins
mov
movs
into
retf
das
xchg
lods
lahf
push
int3
adc
leave
pop
leave
jb
std
cs
in
adc
repz
mov
push
enter
cwde
push
add
xor
mov
js
jle
jl
aas
pop
cmc
add
or
mov
js
retf
jge
push
push
jbe
mov
push
inc
pop
aam
ss
iret
xchg
jmp
push
cld
ret
cmp
(bad)
(bad)
sbb
sti
mov
or
call
imul
test
(bad)
push
jp
inc
inc
ret
inc
test
std
xchg
sar
jae
sahf
loopne
ret
cdq
push
inc
into
pushf
jns
sbb
pop
jne
ucomiss
dec
aaa
dec
mov
test
xor
jl
push
dec
inc
dec
sbb
ja
cmps
or
ucomiss
sti
mov
adc
cmps
scas
fiadd
loope
and
and
cmp
and
in
mov
add
in
push
and
and
lods
inc
mov
ror
or
cdq
or
inc
cmp
dec
add
and
mov
add
bound
or
aad
pop
loop
sbb
sbb
pop
lea
jmp
cmp
sbb
aad
fcom
addr16
push
ds
mov
data16
push
iret
xchg
add
mov
popf
mov
push
pop
leave
in
pusha
ret
push
pop
fidiv
mov
ret
aam
test
nop
and
cmp
adc
cmc
add
idiv
sbb
sbb
(bad)
xchg
lahf
fild
dec
ret
push
fadd
mov
add
push
sbb
leave
popf
mov
add
jmp
scas
xchg
inc
in
push
inc
push
adc
outs
sbb
jno
xchg
inc
xchg
test
scas
outs
aaa
and
add
into
enter
cmc
jl
inc
popf
std
dec
push
adc
or
add
mov
push
nop
hlt
movs
mov
jns
daa
test
movs
mov
add
inc
int3
ficom
mov
ds
and
mov
inc
rcr
imul
mov
jae
mov
sbb
loopne
imul
mov
sub
cmp
mov
sbb
jae
xchg
pusha
sar
sbb
pop
test
popa
lods
or
inc
mov
scas
mov
lods
loopne
sub
push
imul
pop
pop
sbb
loopne
cmp
add
sbb
cmp
cld
call
jg
test
inc
cmp
loope
sbb
mov
inc
jl
jecxz
mov
push
outs
je
imul
pop
jp
clc
daa
sti
cmp
fdivr
into
fwait
loope
imul
inc
cdq
sbb
hlt
mov
cmp
xchg
and
push
cmp
mov
inc
inc
aas
cmp
ins
inc
xchg
mov
js
and
xlat
fiadd
ror
adc
fdivr
lahf
pop
das
sub
cmp
xor
mov
fs
imul
jl
inc
inc
into
sub
dec
or
or
test
cld
or
xchg
sbb
xchg
sub
push
pushf
cs
pop
xchg
rcl
xor
cmp
out
or
outs
and
pop
shr
xchg
push
ficom
shl
jb
hlt
or
aaa
jbe
xchg
idiv
ja
and
fwait
rcl
sbb
fld
push
fisttp
jnp
dec
aas
or
pop
stos
xchg
iret
cmp
fs
lods
mov
ds
mov
jge
cmp
and
sub
pop
adc
fsub
fwait
add
out
xor
add
nop
out
lahf
mov
xor
jle
or
iret
inc
xchg
cmp
out
adc
dec
sahf
cmps
sub
pop
inc
popf
aaa
in
jp
popa
call
stos
out
popf
mov
cmps
dec
(bad)
add
push
repz
jle
mov
cli
mov
out
push
cmp
dec
test
repz
mov
or
sbb
dec
fdiv
bound
cmp
dec
and
movs
push
daa
push
sub
jl
call
push
aad
popf
cmp
xchg
sub
dec
int
cmp
popa
fsub
xor
test
lods
mov
cmp
iret
inc
jg
ror
or
out
or
icebp
push
xchg
stos
aad
dec
cmp
sti
xchg
test
stc
sbb
dec
and
and
(bad)
in
call
xchg
retf
dec
ja
outs
out
repnz
push
push
into
mov
pop
pop
pop
cmp
shr
or
jb
das
pop
or
xor
mov
jno
jle
sub
inc
push
jns
xchg
cmc
mov
mul
imul
test
pusha
movs
mov
call
(bad)
hlt
(bad)
mov
or
jmp
sbb
mov
sti
outs
jb
add
adc
cmp
pop
aaa
(bad)
xchg
sbb
fild
xchg
out
xor
fs
daa
js
int3
fistp
not
push
popf
mov
imul
cmp
xor
mov
fcom
inc
imul
jae
or
cs
(bad)
adc
rol
mov
cmp
pop
div
pusha
sar
adc
sub
xchg
push
xor
inc
out
cmp
bound
push
mov
mov
les
jmp
sub
push
mov
or
imul
test
stc
push
imul
cdq
and
test
clc
ss
mov
dec
xchg
xchg
pusha
jl
lods
mov
sbb
mov
push
bound
in
sahf
call
cli
loop
pop
mov
dec
ror
pop
inc
hlt
xor
jecxz
jmp
imul
addr16
pop
dec
rol
mov
rcl
inc
and
dec
aaa
sub
inc
or
fs
imul
and
add
icebp
in
inc
ds
inc
ins
cmp
mov
push
mov
(bad)
ffreep
inc
push
ss
mov
push
sti
dec
rcr
cmp
add
shl
hlt
je
(bad)
jg
movs
xchg
cld
call
sbb
inc
loopne
sub
fnstcw
jno
jmp
les
fldenv
adc
js
push
cmp
xor
xchg
inc
in
pop
xchg
int3
dec
xchg
jp
jl
or
and
xchg
aad
sbb
add
jmp
out
mov
jmp
mov
outs
xor
jle
pop
ss
sub
sub
sub
push
daa
ins
setno
daa
dec
adc
rcl
mov
adc
mov
fsub
jl
xlat
test
mov
(bad)
mov
cmp
mov
dec
fldenv
out
mov
push
fldenv
je
sbb
sub
push
sub
push
and
cmp
adc
(bad)
shl
and
jbe
enter
sbb
mov
ins
inc
cmp
in
xchg
jae
fcmovb
pop
dec
dec
ret
adc
or
add
ja
dec
ss
inc
movs
xor
or
repnz
movs
outs
mov
inc
dec
pusha
cmp
dec
imul
xor
push
mov
jg
sub
pop
test
adc
clc
imul
jns
mov
jmp
mov
and
daa
rcl
inc
fsub
adc
mov
(bad)
iret
popf
jecxz
int
push
jmp
shr
adc
enter
mov
mov
sbb
popa
(bad)
fdivr
push
shl
test
inc
retf
or
mov
xor
ror
call
add
fdivr
pusha
lock
xchg
or
jg
push
adc
sbb
push
sbb
and
push
dec
test
cmp
adc
sub
sti
sbb
mov
imul
xchg
add
adc
xchg
pop
cmps
adc
(bad)
call
ss
(bad)
pop
push
dec
adc
test
fisub
add
dec
outs
push
pop
sahf
aas
imul
shl
xchg
sbb
shr
enter
adc
sbb
fimul
jo
jno
stos
hlt
xor
cmc
movs
clc
fadd
into
dec
pop
cmp
cmc
jb
popa
xchg
mov
test
push
mov
adc
and
xor
fcom
ds
cmp
push
sub
je
rcr
adc
and
sahf
xor
xor
xchg
ins
cmp
test
push
in
inc
movs
sub
loopne
addr16
mov
dec
adc
test
lea
mov
retf
adc
xor
repz
push
or
sub
or
fild
in
lds
xchg
enter
xchg
jecxz
pop
pop
add
out
mov
mov
popf
sub
fwait
out
cmp
pop
xor
rol
cwde
xor
retf
xchg
sti
pop
or
inc
frstor
ins
aam
inc
in
pop
lods
jmp
dec
pushf
adc
enter
es
sub
inc
je
loopne
cmp
repz
jecxz
and
shr
int
or
or
into
push
mov
ds
mov
jno
xchg
lds
dec
popf
sti
or
lock
jnp
mov
movs
lock
push
mov
add
push
sub
push
mov
pop
imul
into
ins
ds
cld
imul
jge
add
dec
ss
jg
xchg
xor
cmps
aam
shl
inc
fist
cmps
inc
test
ret
or
loopne
mov
addr16
xor
jb
int
mov
mov
jge
sbb
add
fild
and
inc
test
in
and
or
jle
iret
xor
data16
or
out
jo
inc
leave
mov
and
dec
sub
pop
cli
or
inc
ret
sub
hlt
add
aas
or
(bad)
sub
iret
test
add
gs
add
xchg
test
push
pop
sar
xor
imul
or
and
neg
std
xchg
fbld
bound
(bad)
and
jmp
or
into
sar
movs
pop
pusha
pop
imul
cmp
pop
cmps
hlt
mov
cmp
add
jmp
jl
xchg
mov
(bad)
stos
sbb
shl
xor
movs
hlt
jae
sbb
pop
dec
mov
sbb
inc
fsubr
iret
fcmovnbe
push
gs
ja
jmp
test
cwde
rol
push
sbb
and
cmps
icebp
mov
adc
xchg
clc
pop
sbb
outs
out
inc
mov
shl
mov
mov
push
xchg
pop
rcl
xor
fwait
sahf
arpl
xor
cmp
jo
daa
push
xor
jg
dec
loope
pop
dec
cdq
je
sar
test
push
pop
daa
add
lods
xchg
(bad)
cmp
cmc
dec
pop
push
fisttp
push
adc
out
stos
fild
mov
or
jae
or
xchg
(bad)
into
inc
pushf
dec
je
ret
add
ret
dec
sbb
test
daa
sub
je
mov
test
fldcw
lahf
fst
aad
cmp
jo
js
jo
call
not
shl
je
sbb
mov
ss
dec
sbb
(bad)
xor
mov
dec
or
xor
push
fwait
fs
push
cwde
mov
sbb
cmp
inc
and
push
xchg
inc
jb
(bad)
push
jo
sbb
in
fcom
ds
inc
pushf
dec
in
sub
imul
rol
inc
dec
push
or
dec
and
mov
and
sti
stc
pushf
sub
sub
hlt
cdq
lods
in
fadd
ret
iret
sbb
add
in
xchg
sub
add
mov
(bad)
loopne
adc
sbb
popf
std
ret
pushf
inc
pop
dec
shl
or
mov
or
adc
xchg
add
shl
mov
fnsave
inc
test
stos
loopne
mov
scas
jmp
push
js
popa
push
imul
test
mov
loopne
mov
xchg
dec
dec
imul
sub
and
out
dec
fs
fidivr
fld
jg
pushf
mov
xlat
pop
rcr
cs
dec
push
jb
xchg
sbb
jns
repnz
imul
fs
push
jb
pushf
push
addr16
mov
cmp
arpl
test
or
int
sbb
or
cmp
ss
jg
sbb
ins
iret
sub
push
and
ficomp
lahf
mov
outs
aam
pop
stc
test
xchg
sbb
loop
icebp
push
and
sbb
sbb
mov
or
call
mov
sbb
mov
mov
cmps
stc
xor
cld
adc
sub
cmp
sbb
das
inc
mov
call
and
test
mov
loop
ja
retf
jge
mov
ins
pusha
nop
inc
jno
fwait
sbb
aas
xor
sbb
push
cld
out
sbb
push
ins
mov
cmp
lock
adc
gs
dec
add
mov
mov
lea
inc
icebp
jmp
sub
xor
xlat
stos
push
mov
mov
push
lods
mov
adc
add
ins
clc
xlat
and
cli
sub
cdq
movs
shl
cmp
pop
je
fcomp
sbb
sar
mov
je
aas
repz
fnsave
jb
or
cmp
xchg
pop
cmp
cwde
cmp
mov
jno
lock
inc
inc
fstp
das
pop
lock
xchg
lea
bound
pop
cmp
pop
mov
(bad)
dec
sub
mov
les
push
imul
fild
push
pop
ret
jbe
call
loop
and
fs
arpl
mov
adc
les
fcmovnu
sub
cmp
bound
mov
pop
or
sbb
adc
mov
mov
dec
out
sbb
xchg
xchg
mov
retf
fbstp
sbb
pop
sbb
das
test
icebp
jnp
pop
cmp
jb
xor
mov
mov
push
jl
jns
fidiv
repz
int3
inc
or
aas
and
aad
fsub
inc
movs
push
and
scas
sti
sahf
in
or
(bad)
fcomp
mov
mov
das
nop
test
mov
lods
jge
rcr
jnp
lods
mov
or
(bad)
sub
dec
cmp
fsubr
xor
pop
cwde
sub
lods
mov
ins
sub
das
and
jne
add
ins
mov
(bad)
in
test
(bad)
in
aaa
pop
sbb
out
sub
popa
sub
sub
xchg
xor
bound
push
or
xor
sbb
pop
jp
jno
mov
lods
mov
sub
inc
in
cmps
cld
mov
(bad)
hlt
inc
pop
loopne
rcl
shl
imul
jle
pop
iret
pop
test
xor
push
std
js
int
mov
je
mov
ud0
jmp
js
mov
mov
push
lock
movs
mov
mov
push
cwde
pusha
jle
icebp
retf
adc
dec
cdq
jg
pop
add
xchg
cs
and
dec
imul
sub
inc
xor
ss
pushf
sub
cmp
addr16
in
shl
mov
cmp
jecxz
sbb
adc
sub
hlt
fst
adc
call
aad
fst
aam
lahf
jp
dec
mov
add
ret
xor
adc
dec
adc
nop
dec
fstp
sub
xor
icebp
mov
jbe
and
outs
cmps
or
retf
xor
mov
sbb
dec
fcmovnbe
shr
inc
xchg
not
inc
xor
sbb
mov
add
pop
pop
mov
add
pop
jecxz
rcl
jmp
jb
je
inc
and
jae
sbb
int
adc
out
test
and
hlt
cmp
inc
test
sub
jb
lea
cs
mov
inc
stc
lods
pusha
sbb
add
std
mov
add
adc
mov
jbe
dec
or
mov
cld
out
pop
mov
vcvttsd2si
outs
mov
dec
popf
repz
add
ficom
ins
icebp
pop
popf
outs
jo
icebp
add
adc
xor
mov
lods
xchg
gs
sub
push
or
daa
je
adc
mov
cs
or
pushf
test
mov
sub
mov
xchg
sbb
dec
into
mov
dec
mov
push
lea
dec
push
sar
sahf
mov
rcl
std
or
xchg
stos
enter
adc
and
dec
push
int
sbb
test
cmp
repnz
xlat
in
mov
int3
pop
gs
int
pop
gs
xor
pop
(bad)
dec
adc
xchg
dec
loop
jae
into
ss
sahf
test
test
(bad)
sbb
inc
fistp
in
pop
das
sbb
sbb
out
dec
pop
xchg
xor
or
repz
mov
inc
fst
jecxz
rcr
xchg
rol
xor
leave
add
fs
fxch
retf
pop
pop
xor
push
clc
pop
adc
lods
dec
pop
and
out
ret
lds
hlt
jecxz
sbb
push
fld
hlt
add
cli
imul
dec
add
cmps
and
aas
inc
aam
adc
in
test
push
jmp
cmps
cmp
clc
mov
inc
and
xor
inc
nop
and
push
cmp
mov
ret
pop
xchg
pop
int
sub
push
cmp
aaa
xor
(bad)
sahf
sub
dec
sub
cmp
adc
or
and
leave
aam
push
adc
ror
adc
add
add
cmps
jge
adc
xchg
pop
imul
ds
xchg
xor
adc
dec
scas
jl
enter
es
je
imul
icebp
je
mov
jecxz
clc
xor
inc
xchg
sub
out
jnp
add
aam
icebp
push
cmp
jae
jb
test
aam
mov
ror
test
xchg
and
cmp
popf
aas
cdq
add
mov
adc
push
add
dec
(bad)
repz
jne
xor
mov
iret
sub
fistp
aaa
add
test
mov
mov
gs
and
jnp
mov
dec
inc
addr16
fmul
(bad)
cmp
ds
push
cli
loop
jmp
inc
loop
mov
dec
rcr
and
repnz
movs
mov
pminub
cmp
pushf
xor
ror
add
mov
rcl
pop
sub
xor
adc
test
mov
pushf
and
scas
inc
or
mov
or
in
jne
cmp
lahf
aaa
enter
or
sub
push
xor
call
sbb
test
pop
out
or
xchg
mov
cld
push
and
adc
push
out
mov
(bad)
call
iret
sbb
sub
das
mov
out
call
imul
mov
outs
not
push
cdq
arpl
clc
mov
in
jecxz
and
fidivr
dec
mov
scas
(bad)
pop
mov
mov
adc
dec
cli
push
out
and
test
dec
outs
inc
pusha
fidivr
and
in
pop
mov
sub
inc
test
adc
imul
dec
(bad)
jae
iret
add
pop
(bad)
(bad)
into
pop
jns
mov
push
push
mov
enter
jno
test
push
push
(bad)
mov
out
in
addr16
push
fnsave
repz
retf
bound
leave
lods
hlt
out
bound
dec
jp
cdq
cmc
bound
or
cs
jmp
and
cdq
mov
ins
ds
xor
lsl
sub
or
shl
pop
fistp
or
out
jno
cld
aad
loope
push
sub
fyl2xp1
repz
(bad)
pusha
adc
adc
les
test
loope
adc
and
repz
cmp
imul
adc
xchg
mov
ins
sbb
jg
stc
(bad)
clc
cld
loopne
xor
repnz
test
push
jae
and
sub
dec
xor
mov
jmp
lock
sbb
std
mov
and
jmp
(bad)
xor
push
gs
lods
cwde
sti
scas
inc
neg
cs
fidivr
xchg
lahf
sbb
xchg
mov
ds
aam
scas
cmp
mov
adc
xor
jg
retf
mov
ret
mov
aad
push
mov
iret
xor
jg
add
aam
sub
inc
pop
xchg
push
pushf
sub
rcr
push
cld
into
mov
mov
idiv
jp
sbb
mov
stc
shl
cmp
pusha
mov
leave
inc
sbb
lahf
repnz
in
mov
sub
inc
fmul
inc
sbb
inc
stos
lods
inc
adc
loope
xor
mov
int3
cmp
mov
ins
pop
mov
add
and
xor
or
scas
in
addr16
jnp
dec
mov
ret
fnstenv
nop
sub
loop
pop
retf
ss
push
call
inc
add
and
dec
and
lods
sub
imul
jmp
aas
lods
mov
xchg
(bad)
dec
rcr
push
mov
inc
shl
xor
cmp
cld
xor
leave
push
gs
loopne
(bad)
push
cdq
hlt
jge
mov
cmps
adc
mov
mov
pusha
out
js
push
nop
lods
pushf
dec
(bad)
push
mov
push
xor
push
adc
mov
jl
adc
fadd
retf
and
shl
(bad)
rcr
lahf
and
(bad)
jno
aaa
mov
ret
add
stc
stos
pop
xor
xchg
jnp
push
lods
call
sub
cmp
push
mov
and
fucomp
pop
sbb
and
pop
xlat
cld
xchg
test
fisttp
fstp
add
shl
xchg
push
cwde
(bad)
sub
aam
add
je
jno
lahf
mov
test
pop
test
sub
adc
popf
fnstsw
push
in
fdivr
xlat
cmc
push
gs
inc
or
sbb
jg
push
and
push
jp
int
or
pop
xlat
out
mov
fsubr
sahf
jle
inc
shl
cmp
(bad)
mov
adc
mov
ss
xchg
inc
inc
test
imul
addr16
cdq
and
sub
stc
shl
cli
std
cmp
add
loope
jmp
xor
scas
outs
add
or
call
or
push
dec
pop
ins
movs
cmp
retf
repz
jnp
or
test
aaa
fcomp
fnstcw
pop
fwait
pop
jno
sub
or
cmps
jbe
std
jmp
cmp
inc
jmp
popf
push
pushf
and
jmp
lahf
adc
dec
dec
inc
test
in
add
push
mov
imul
push
inc
or
imul
ret
push
outs
stos
pushf
mov
inc
shl
xor
aaa
jecxz
jne
scas
jb
in
xchg
outs
fimul
shl
jno
call
in
jge
or
shl
and
inc
(bad)
aad
sbb
pop
add
clc
jle
xlat
mov
mov
arpl
mov
popa
jmp
sahf
adc
aam
pop
gs
out
add
or
fadd
push
lds
push
daa
mov
dec
mov
push
dec
jns
xchg
in
stos
xor
jns
retf
ins
xor
test
cdq
test
mov
and
mov
sub
movs
add
push
mov
cmp
fstp
loopne
fwait
imul
sub
xor
fisttp
or
lock
add
xlat
adc
jo
cmp
mov
aad
pop
movs
inc
adc
push
aad
mov
mov
push
xor
iret
sbb
add
jl
xor
popa
xchg
mov
inc
push
pushf
(bad)
jmp
cld
sbb
dec
add
cmp
jno
dec
xchg
inc
outs
mov
xor
(bad)
popf
jmp
in
sub
mov
mov
stos
mov
sbb
xor
push
in
sti
icebp
add
daa
mov
pop
pop
rep
scas
sti
inc
jne
xor
(bad)
fcom
or
adc
repz
fld
repnz
fldenv
pop
jae
mov
or
push
dec
push
cmp
pop
mov
mov
cmp
out
(bad)
cmps
lea
div
int
mov
sahf
xchg
ds
push
out
out
hlt
push
mov
mov
xor
enter
movs
out
icebp
inc
inc
icebp
fst
push
leave
jle
cmp
xchg
inc
test
adc
lods
cmp
mov
xor
jno
in
loop
bound
dec
mov
sahf
(bad)
mov
sub
inc
push
sbb
movs
sbb
pop
aaa
imul
sub
or
enter
xchg
mov
add
retf
dec
push
out
loope
jae
cmps
inc
xor
(bad)
test
jmp
pop
xchg
adc
jo
add
repnz
jp
dec
xchg
outs
inc
out
out
pop
xor
sub
add
pushf
sahf
shl
ja
popf
fcomp
push
xchg
test
sbb
inc
jae
pop
stos
ins
push
or
and
pop
test
sti
adc
adc
jmp
out
in
cli
sbb
js
sti
xor
imul
js
ja
jne
stos
aaa
mov
jecxz
or
push
mov
lds
cmp
push
mov
popa
retf
dec
dec
repz
adc
pusha
mov
fwait
cli
cmps
cmps
or
sti
(bad)
and
mov
fs
scas
and
adc
lock
push
ins
enter
and
push
shr
mov
inc
xchg
jmp
push
xchg
dec
pop
or
lock
ins
jecxz
cs
sbb
rol
mov
jbe
xor
push
add
mov
hlt
pop
mov
(bad)
push
push
inc
cmp
push
push
sub
in
gs
imul
sahf
pop
jecxz
aad
ror
pushf
leave
xchg
adc
fcomp
mov
(bad)
aam
pop
inc
leave
add
and
or
jmp
pop
jb
pusha
add
cmp
jb
xor
js
cwde
cmps
lods
retf
push
jle
(bad)
repnz
inc
stos
out
iret
add
xchg
mov
jo
pop
test
mov
cmps
popf
pop
lods
rcr
retf
movs
retf
aam
or
popf
aad
adc
cld
sub
xor
jno
test
ror
add
shl
ja
retf
and
mov
jecxz
cmp
lahf
sub
mov
inc
push
loopne
rcl
cdq
inc
mov
bound
test
xchg
imul
and
mov
cld
adc
lods
imul
and
dec
and
adc
aam
pop
jbe
pop
jb
push
sub
call
jge
sub
lods
scas
das
or
outs
adc
or
cmps
and
arpl
imul
jg
pop
hlt
test
jge
add
enter
aam
or
pop
test
ret
into
je
fiadd
ret
les
int3
push
ins
jo
cmp
or
arpl
rcr
adc
cmps
adc
jb
dec
div
and
pushf
hlt
(bad)
das
xlat
mov
ins
mov
mov
retf
stc
add
mov
push
loop
xchg
popf
rcl
jmp
aam
or
mov
mov
fild
sti
stc
push
xchg
cmp
cmc
jb
shr
addr16
loope
sbb
pop
inc
pop
sbb
pushf
cmc
or
push
rcl
movs
sub
call
int
(bad)
scas
mov
jg
aad
sub
dec
loopne
and
or
pop
sub
push
adc
sub
(bad)
repnz
xchg
push
addr16
cli
xchg
aam
adc
(bad)
or
mov
shr
jns
icebp
ffree
inc
or
sbb
jmp
movs
aas
lods
mov
dec
inc
int
shl
xchg
call
jge
fcmovu
add
das
mov
inc
and
sbb
(bad)
push
in
(bad)
jns
shl
pop
mov
xchg
push
dec
lods
push
jmp
call
inc
shr
inc
mov
mov
cmp
cli
mov
inc
sub
mov
sub
adc
mov
repz
jne
adc
dec
std
xor
addr16
jmp
and
mov
mov
ins
das
shr
mov
mov
pop
imul
push
not
fmul
mov
mov
in
add
sbb
fdiv
mov
out
push
add
adc
sbb
enter
push
xchg
or
(bad)
icebp
ins
inc
push
xor
cmp
xchg
into
call
adc
xchg
cmp
pushf
pop
mov
pop
adc
mov
jno
pop
icebp
in
(bad)
ficom
dec
daa
adc
ret
(bad)
inc
mov
xlat
push
sbb
outs
gs
std
outs
pusha
sbb
xor
fs
aad
sbb
jbe
addr16
or
nop
icebp
add
(bad)
imul
sbb
jbe
mov
dec
mov
outs
das
mov
xor
mov
mov
scas
call
add
xchg
mov
adc
repnz
(bad)
mov
inc
mov
test
add
ins
jp
test
lahf
jmp
push
jmp
fadd
inc
mov
mov
(bad)
xchg
jne
dec
ss
mov
xchg
stc
mov
dec
das
imul
xchg
cmp
mov
cmps
imul
cmp
sub
mov
sub
and
mov
into
add
sahf
je
out
jge
xor
jg
jl
xchg
inc
ja
xor
sub
nop
jg
fidiv
or
test
push
xchg
cdq
jle
rcl
es
data16
cmp
jg
test
cli
push
mov
pop
stos
jae
xchg
sub
mov
mov
mov
jg
retf
call
sar
mov
fistp
sub
test
in
sbb
mov
repnz
and
mov
pop
test
cmp
lds
mov
pop
enter
inc
mov
dec
mov
jge
inc
dec
xchg
jne
enter
adc
ds
sbb
xor
pop
add
push
mov
push
call
push
ficom
sahf
jno
mul
sti
dec
addr16
fwait
movs
out
jecxz
jns
leave
call
(bad)
mov
out
and
in
push
(bad)
aas
ins
mov
out
xor
out
pop
das
jne
mov
push
aaa
stc
inc
ds
aas
in
jb
int3
mov
sub
or
pop
ret
cmps
or
in
inc
fnstenv
test
inc
cmp
xlat
out
push
sub
pop
hlt
sbb
mov
cld
or
aad
shr
imul
and
(bad)
sbb
sbb
iret
xor
stos
sbb
sbb
(bad)
popa
out
jno
dec
dec
repz
lea
popf
(bad)
pop
jle
mov
dec
lods
dec
aaa
fldenv
xor
js
inc
in
push
loopne
pop
je
test
test
xchg
xor
cmp
cmps
ja
js
and
movs
cmp
xor
(bad)
dec
and
scas
in
lea
shl
xor
push
ss
jg
ja
sbb
mov
jo
push
imul
jmp
iret
xor
cwde
fadd
gs
les
sbb
out
ins
ret
loop
nop
inc
push
push
adc
gs
mov
(bad)
cdq
sbb
mov
fcomp
je
mov
lods
or
pop
leave
lfs
call
ficomp
push
sbb
mov
inc
xor
push
sbb
push
gs
jl
mov
sbb
loope
jmp
push
add
pop
mov
lods
shl
jecxz
or
(bad)
lods
stc
(bad)
mov
xor
hlt
dec
out
int3
adc
push
aam
std
jmp
add
mov
adc
adc
sbb
mov
dec
push
cmp
inc
loop
mov
fild
mul
dec
orps
jne
push
outs
call
fistp
inc
mov
fcomp
(bad)
stc
or
push
push
cmp
ins
dec
daa
cs
cmps
lock
mov
jb
fisub
sub
lods
jge
rcl
xchg
jl
adc
ror
cli
jmp
(bad)
dec
in
fadd
lods
xchg
jno
dec
(bad)
and
mov
pop
outs
cmp
push
ds
mov
and
and
addr16
sbb
jp
xlat
jae
scas
gs
xchg
xor
into
es
shl
cmc
cmp
ret
cld
dec
stos
jg
in
scas
int3
xor
sub
gs
cwde
ss
adc
cli
push
call
jne
inc
mov
push
mov
xor
mov
sub
cmc
ret
dec
imul
ret
cli
jl
scas
xor
aam
scas
hlt
inc
add
push
out
mov
sbb
push
add
pop
and
repnz
cmp
mov
xor
test
jl
data16
xchg
pop
xor
jg
ja
pop
xchg
jmp
out
add
jmp
popa
leave
mov
mov
jae
mov
and
stos
push
fs
ins
inc
(bad)
sub
cld
and
loope
dec
neg
repnz
mov
push
mov
jecxz
mov
mov
lods
inc
inc
inc
cld
aad
shl
enter
mov
push
aaa
imul
add
arpl
ins
imul
imul
aam
call
mov
(bad)
mov
lods
sahf
iret
sbb
inc
ror
rol
jle
(bad)
bnd
lods
dec
clc
xor
jns
cmps
scas
pop
inc
push
adc
cmp
pop
push
dec
xchg
push
push
lea
stc
xor
pop
dec
sbb
jb
pop
(bad)
push
int3
cmp
sub
retf
ins
xor
out
pop
mov
imul
mov
and
xlat
fadd
xchg
and
jb
jecxz
sub
lods
push
add
jp
cmps
pop
enter
fidivr
and
jae
cmp
mov
imul
add
fdivr
test
jbe
push
sahf
cdq
lods
ficomp
repz
(bad)
ror
jl
xchg
les
add
and
dec
sbb
call
mov
pop
mov
jns
add
push
mov
and
push
sbb
adc
mov
xchg
js
pop
std
push
pop
ffreep
ror
out
dec
ficom
shl
or
xchg
jge
fnstenv
mov
shr
fstp
xchg
loopne
test
pop
(bad)
shl
dec
stos
and
push
call
neg
lds
add
in
leave
sbb
xchg
jl
(bad)
mov
mov
pop
pop
mov
ret
in
push
and
fsubp
add
repnz
int3
lock
dec
sub
jno
mov
fdiv
paddw
xor
or
add
iret
mov
add
retf
std
and
mov
hlt
repnz
mov
jno
or
jbe
fwait
popf
jle
bound
aad
xor
rol
jnp
outs
cmps
or
addr16
addr16
call
jp
push
addr16
mov
or
call
mov
jle
cmp
repz
xchg
cs
fs
and
inc
add
mov
push
(bad)
aad
push
sub
or
jp
pop
sub
imul
adc
xchg
jbe
or
repz
int
inc
sub
shr
stos
mov
retf
shl
ror
lods
into
add
(bad)
out
xchg
cmp
jnp
aad
xchg
xchg
xchg
jg
inc
xchg
js
out
adc
xor
pop
xor
aam
xchg
ret
aad
shl
in
stos
or
adc
jmp
rcl
ins
les
or
test
xchg
push
inc
xor
js
mov
and
jg
ret
icebp
or
cmp
(bad)
mov
scas
out
hlt
cmps
pop
addr16
fsubr
jge
or
or
lods
(bad)
fs
cs
cmp
fsubr
dec
(bad)
jnp
adc
sub
mov
mov
jmp
pushf
scas
adc
hlt
in
pop
push
ss
sar
xor
push
cld
pop
cmp
mov
arpl
push
fcom
push
jecxz
mov
adc
sbb
jns
cmp
loope
iret
retf
(bad)
(bad)
mov
sbb
inc
xlat
mov
pushf
int
and
rcl
pop
xor
(bad)
lahf
xor
mov
pop
mov
outs
fist
jo
mov
mov
leave
je
jne
retf
push
mov
dec
das
xlat
adc
mov
pop
mov
lods
ret
or
pusha
xchg
sub
mov
rol
pushf
or
ret
fcmovnb
fwait
sahf
int
rcl
adc
cmp
std
xchg
jp
test
inc
(bad)
mov
(bad)
pop
loop
sbb
aam
ret
adc
jns
inc
pop
xor
mov
cmc
inc
sub
stos
mov
mov
mov
xchg
leave
push
mov
push
neg
pop
mov
dec
jmp
stc
sbb
push
aam
push
loopne
stos
mov
call
jo
jnp
pop
jle
add
cdq
or
daa
mov
fist
mov
adc
test
and
adc
mov
pop
pop
mov
xor
push
jbe
inc
out
and
xchg
jmp
xchg
adc
rol
jge
cmp
in
(bad)
sbb
bound
out
shl
in
push
xchg
les
retf
push
xor
lahf
mov
repnz
dec
stc
out
lods
fldenv
mov
ficomp
ret
inc
fadd
pop
dec
dec
(bad)
dec
pop
popa
sub
scas
pop
fdivr
xchg
loopne
mov
dec
jmp
mov
adc
inc
sub
test
xchg
mov
test
xchg
dec
or
(bad)
push
(bad)
js
aam
bound
sub
daa
sbb
mov
cmp
lds
cmp
mov
cli
lods
sbb
jbe
scas
add
mov
mov
and
push
cli
sti
mov
in
aam
adc
mov
loope
dec
cwde
hlt
stc
cmp
jae
xor
sbb
jnp
ja
loope
cmps
pop
sub
xor
je
push
jnp
scas
inc
add
jmp
out
ja
jne
sbb
or
mov
adc
daa
popf
pop
clc
dec
push
test
jl
inc
and
shl
jmp
inc
xor
inc
mov
mov
cmp
mov
aam
aaa
dec
retf
loopne
dec
out
push
stc
add
retf
imul
ror
ds
aam
outs
sbb
(bad)
add
mov
out
lods
pop
shl
bnd
pop
inc
and
in
(bad)
or
cli
and
sub
std
or
sbb
mov
push
out
adc
mov
in
sbb
jecxz
jge
push
repnz
out
leave
bnd
push
or
test
cmp
dec
sbb
and
inc
out
out
hlt
into
xlat
adc
or
pop
adc
lea
sar
pop
sar
xlat
sub
dec
push
fdivp
inc
xlat
out
dec
mov
push
xor
test
dec
in
aaa
sti
test
adc
addr16
sbb
xchg
adc
arpl
icebp
out
mov
ins
mov
mov
fnstcw
(bad)
cld
loop
jl
mov
dec
lock
jp
rol
fldcw
popa
add
xchg
dec
fld
mov
loopne
or
cmc
(bad)
cmp
sub
or
xchg
sbb
test
jl
adc
ror
push
(bad)
fimul
inc
xchg
leave
test
sbb
adc
out
push
jge
push
sub
fstp
jns
(bad)
cdq
push
jg
add
push
xor
outs
(bad)
jl
pop
push
scas
cwde
jge
push
sbb
in
shl
add
call
pop
mov
movs
out
cli
sub
sub
add
imul
in
mov
xor
movs
lods
test
retf
(bad)
(bad)
pop
mul
fs
loope
gs
inc
call
jbe
pop
popa
idiv
stos
in
mov
hlt
repnz
xor
repnz
(bad)
dec
outs
adc
std
retf
add
jnp
mov
jl
jb
xchg
pop
cmp
cmp
inc
std
mov
xchg
jg
and
neg
and
jo
xchg
hlt
jg
rcl
(bad)
das
inc
ins
jo
jmp
in
push
xchg
mov
add
sub
add
iret
push
mov
popa
sbb
adc
stos
js
into
xor
popa
rol
jb
jne
xchg
fld
cmp
loopne
dec
jne
test
mov
imul
(bad)
fild
inc
das
push
jge
sti
enter
cmp
jl
mov
sub
sbb
scas
cmp
inc
ss
sbb
cmp
mov
stos
mov
mov
add
inc
out
and
fstp
outs
adc
jl
lods
cdq
push
out
and
and
out
push
and
add
jae
je
push
int
nop
push
push
movs
inc
cmc
lahf
lahf
adc
add
mov
jmp
pop
(bad)
push
push
pop
jnp
xor
cmp
shl
nop
adc
fiadd
fisubr
sar
cmps
not
retf
mov
jl
(bad)
into
les
xor
loop
call
bound
mov
(bad)
call
aam
push
lods
or
push
mov
sahf
xor
lds
adc
sbb
mov
add
or
faddp
sub
data16
sbb
xor
jg
jo
push
and
test
jno
ficomp
cwde
aas
dec
shl
fld
mov
repz
dec
and
ret
jnp
dec
out
test
out
lods
repnz
fwait
stc
(bad)
push
mov
or
das
cmp
pop
jmp
outs
pop
pop
jle
stc
test
sbb
icebp
test
(bad)
cwde
or
pop
enter
pop
push
daa
jg
rcr
cdq
jb
or
mov
xchg
xchg
mov
leave
mov
shl
mov
push
mov
in
std
scas
pushf
inc
sti
and
hlt
mov
sbb
aad
stc
nop
push
(bad)
adc
mov
imul
inc
cmps
mov
inc
fisubr
sub
inc
ret
jb
add
lds
xor
pcmpeqw
add
mov
je
mov
mov
pop
imul
push
jmp
mov
clc
mov
ret
push
cld
push
inc
adc
in
imul
loope
out
nop
pop
(bad)
stc
cld
retf
in
or
(bad)
mov
mov
cwde
push
popf
sbb
jl
rcr
jns
test
popa
outs
repnz
xchg
xor
fimul
push
mov
mov
lea
add
pop
psubusb
test
loope
hlt
sub
cmp
push
jmp
pop
ror
cmps
inc
popa
and
sbb
dec
mov
push
cmp
clc
mov
iret
aad
hlt
pop
sub
jns
in
adc
sub
push
xchg
jl
loope
pop
pop
shl
les
xchg
mov
jo
inc
xchg
(bad)
jne
fiadd
or
mov
enter
xor
adc
ds
int3
fs
jnp
inc
gs
push
loop
dec
jmp
inc
jge
pop
dec
adc
(bad)
mov
aas
xchg
inc
xor
ffree
fwait
mov
dec
sub
add
sub
xchg
sub
mov
adc
add
pop
pop
pusha
mov
mov
dec
retf
(bad)
out
pop
test
xlat
es
xor
mov
mov
or
cdq
mov
retf
scas
push
in
shl
xchg
jnp
cvttps2pi
mov
sub
xor
add
pushf
push
adc
xor
adc
xor
fcomp
enter
loope
scas
pop
lock
loopne
cmp
jo
sub
lods
xchg
push
cld
movs
sub
cmp
loope
pop
out
xchg
mov
fisttp
mov
jl
pop
cli
mov
sub
or
jmp
call
or
out
cmp
popa
push
xchg
jae
xor
rcl
add
mov
sbb
in
pop
call
sbb
cmp
icebp
cmp
div
mov
shr
and
xor
sub
mov
cmc
repnz
into
inc
inc
es
add
add
cli
into
push
cs
pop
dec
in
sahf
sar
or
mov
or
xchg
sbb
sahf
cdq
sbb
icebp
sbb
push
mov
xchg
ds
out
add
scas
and
mov
dec
(bad)
aad
push
mov
jns
lea
sub
pusha
add
or
movs
pop
int3
mov
shl
xor
in
add
add
push
push
scas
cmp
pop
cmps
loopne
pop
mov
and
or
mov
push
xchg
add
pop
xlat
dec
out
je
test
std
icebp
in
in
sahf
xor
mov
enter
aam
inc
dec
das
out
stos
pop
push
push
mov
push
push
adc
dec
(bad)
cmp
cmc
scas
aad
and
sub
push
jp
mov
bound
mov
test
repnz
(bad)
repnz
mov
pushf
jae
fst
mov
(bad)
jle
cmc
scas
cmc
mov
sub
es
jae
xor
(bad)
pushf
sar
add
xchg
jecxz
(bad)
(bad)
rol
sbb
es
movs
jge
push
sbb
inc
and
fcmovnu
mov
leave
xor
movs
inc
inc
push
lahf
aad
ss
arpl
inc
sub
aad
pop
mov
fcomi
leave
test
in
push
push
push
sti
bnd
scas
lea
lods
jo
cld
daa
push
lds
jnp
cld
jnp
mov
ret
lods
fisttp
setg
sub
loop
(bad)
in
cdq
sub
pushf
add
adc
stc
hlt
icebp
fisub
add
enter
aas
mov
dec
rcr
cdq
mov
add
fs
fldenv
cmp
inc
jo
and
fbld
xchg
mov
mov
jmp
or
out
inc
ficom
add
xor
mov
(bad)
js
inc
add
adc
fistp
pop
jbe
outs
cmps
cdq
sub
fmul
mov
dec
js
xchg
mov
mov
push
xchg
inc
lock
mov
es
xchg
pop
push
sbb
pop
aad
dec
cmp
adc
scas
out
pop
and
into
sub
add
xchg
shl
std
lahf
pop
jb
dec
in
iret
sahf
mov
stc
jne
pop
sub
or
push
mov
retf
test
dec
push
int3
lods
mov
daa
xchg
and
and
aaa
fld
jno
(bad)
jp
(bad)
jnp
ror
xchg
aas
xchg
pop
pop
jmp
sti
stos
inc
cmps
es
jecxz
daa
stos
in
and
out
enter
pop
xor
int3
stc
sbb
mov
cdq
mov
cmp
mov
cld
add
cmp
arpl
test
stos
jbe
out
ds
sahf
inc
inc
mov
mov
mov
sub
lods
fdiv
sbb
mov
test
or
popf
in
sti
adc
mov
neg
or
mov
cwde
stc
add
sub
mov
xor
pop
mov
jecxz
sub
in
ss
lods
xorps
jae
mov
(bad)
pop
jge
shl
cwde
add
xchg
cmp
sbb
adc
pop
outs
jmp
in
inc
or
mov
sahf
cmp
lods
(bad)
sub
jmp
inc
add
pop
jmp
mov
inc
mov
push
sar
js
arpl
adc
add
sub
mov
int
mov
sub
scas
pop
enter
mov
dec
jno
pop
(bad)
pop
mov
jmp
add
addr16
sub
mov
call
mov
rcr
xchg
lods
push
(bad)
cli
(bad)
leave
movs
clc
out
add
out
out
cmc
jno
hlt
rol
sub
add
pop
and
imul
fistp
cs
mov
loope
mov
push
call
pop
lds
cmp
cmc
push
mov
xor
in
iret
sub
dec
cmps
fdivr
icebp
fadd
sbb
fcmovnbe
lods
mov
(bad)
dec
cmps
ffreep
cmp
push
cmp
inc
fs
cwde
jne
jmp
jl
test
fmul
loopne
inc
jecxz
lods
lds
mov
push
test
jp
outs
sub
aaa
nop
sub
les
js
xor
jo
mov
mov
mov
jl
jno
adc
stos
lods
dec
in
call
jb
mov
(bad)
jl
push
lods
sub
loop
ins
popa
sbb
stos
jge
cmps
or
movs
ss
pop
mov
mov
push
jmp
nop
int
pop
fistp
push
xchg
mov
and
and
add
xlat
rcr
push
addr16
retf
scas
xchg
cmp
pushf
les
inc
jecxz
inc
xchg
jmp
pop
ds
push
and
mov
jle
popf
ss
ins
fiadd
mov
mov
add
push
out
outs
les
pop
add
pop
adc
pop
je
movs
inc
cmps
adc
or
and
xchg
loop
clc
mov
scas
jns
add
add
ror
leave
sub
cmp
fcom
outs
dec
adc
xchg
jnp
cmp
loop
aam
xchg
mov
fld
mov
and
bound
sti
mov
pop
mov
and
(bad)
sbb
mov
(bad)
sbb
jnp
pop
cmp
sbb
cmp
jbe
fdivr
jmp
(bad)
cmp
or
nop
and
divps
fiadd
sub
xchg
jns
mov
push
xor
xchg
mov
rol
icebp
aaa
push
ret
jge
push
ins
popf
mov
mov
add
int
call
adc
pandn
fbstp
mov
xchg
scas
pushf
bound
rol
sbb
xchg
pop
in
push
xchg
shr
push
jmp
and
sub
pop
fdiv
lods
or
leave
cmp
shl
std
stos
mov
add
jns
cmp
not
test
xor
xor
xchg
inc
sahf
call
jmp
sbb
push
mov
adc
jmp
loop
or
stos
jbe
fs
(bad)
push
mov
mov
xchg
push
or
or
cmp
push
test
nop
addr16
outs
je
and
and
mov
fdiv
addr16
mov
fimul
xor
nop
dec
cmp
test
jmp
retf
mov
inc
aaa
xor
or
jae
mov
stos
cmps
xchg
xor
in
jbe
pcmpgtd
fwait
pop
ret
js
mov
cmps
mov
mov
lods
(bad)
aas
inc
dec
xchg
xchg
adc
in
or
psrld
push
cs
fisttp
cmp
mov
lods
adc
jg
jle
jbe
dec
js
and
jle
mov
cmps
aas
push
lahf
scas
call
test
and
add
push
cmp
fs
mov
sar
cmps
cmp
ja
fiadd
and
adc
std
cmp
push
mov
ss
(bad)
jl
imul
jg
mov
ss
mov
out
dec
lods
add
outs
pop
push
repnz
js
jle
push
add
add
sbb
ja
loope
fiadd
pushf
jle
ins
loop
jecxz
pusha
into
push
fidiv
mov
cli
xor
sub
imul
jmp
fld
xchg
jae
frndint
pop
push
clc
push
sbb
and
cdq
popa
jecxz
pop
repz
xor
mov
jbe
lock
jl
xor
dec
jp
stos
sbb
das
out
xor
scas
imul
xchg
popf
pusha
lds
pop
or
iret
xchg
mov
fucomi
inc
pop
std
pushf
push
out
sti
xor
jne
cs
in
int3
jb
mov
ret
(bad)
push
sar
add
rol
ret
dec
or
xchg
iret
sub
xlat
and
xchg
in
pop
sbb
mov
pop
mov
(bad)
pop
pop
shr
adc
mov
pop
scas
lods
mov
mov
dec
not
fidivr
and
addr16
pand
mov
mov
sbb
addr16
dec
mov
imul
jne
arpl
test
dec
js
pop
add
jmp
fs
dec
inc
cmps
cs
dec
arpl
jbe
push
or
ret
ja
and
push
cmp
add
mov
int3
add
inc
or
inc
imul
push
mov
pop
sbb
cli
loope
sub
xchg
xor
jg
pop
rcl
adc
lods
arpl
out
add
cmp
jl
pop
sbb
pop
sbb
sub
rol
pop
inc
dec
out
inc
test
jae
fistp
out
sub
jnp
ja
pop
int
inc
ret
pushf
sbb
pop
sahf
cld
jno
sbb
js
jmp
pop
dec
xor
sbb
push
pushf
les
mov
imul
ss
cmp
(bad)
(bad)
xchg
fimul
mov
sub
jmp
sti
ror
pop
push
pop
lds
pop
push
xchg
sub
pop
int3
cmp
das
ret
sbb
nop
push
dec
in
aam
pop
mov
push
pop
fisttp
mov
inc
icebp
inc
push
mov
shr
ja
ret
(bad)
push
adc
in
retf
pop
lock
in
inc
std
adc
adc
mov
add
mov
sbb
sbb
jno
jns
and
into
bound
pop
mov
sub
mov
movs
addr16
sbb
and
fsubp
fs
adc
retf
mov
mov
lahf
sub
cs
mov
add
test
add
sbb
enter
and
and
std
fs
sbb
aad
jg
scas
mov
xchg
retf
mov
in
out
add
adc
repz
repnz
cmp
daa
repnz
test
ror
out
push
cld
mov
add
jle
xchg
mov
dec
dec
test
inc
cld
jno
lods
int3
xchg
add
and
push
pushf
push
xchg
cmp
xchg
cmp
jb
pop
sbb
add
inc
pop
das
mov
pop
push
or
xchg
mov
sbb
cs
fwait
push
pop
xor
stos
outs
mov
inc
sbb
or
je
sub
stc
div
sar
(bad)
mov
mov
push
retf
inc
and
jmp
xor
lods
and
std
sub
add
sub
sbb
jp
adc
ins
pusha
(bad)
jg
cmps
sti
ret
pop
and
pop
mov
adc
sub
inc
imul
call
cwde
out
or
dec
mov
pop
jmp
dec
ins
mov
push
jmp
rsm
push
dec
or
scas
loope
repnz
adc
xchg
bound
daa
sbb
xchg
daa
mov
daa
cmps
jbe
mov
cmp
adc
out
pop
inc
not
jle
popf
(bad)
loopne
stos
pop
mov
lds
out
addr16
jl
dec
jp
push
call
imul
inc
cmp
fcmovb
jbe
adc
and
mul
dec
mov
hlt
xchg
push
daa
or
ins
leave
mov
and
fild
jae
xor
mov
cmc
cld
mov
xacquire
pop
jae
adc
add
cmp
cdq
fdiv
imul
xor
inc
add
icebp
(bad)
sbb
push
push
cmp
mov
mov
fnstsw
sbb
mul
adc
std
mov
dec
adc
sahf
mov
xchg
or
pop
sub
sbb
xor
add
jno
mov
xor
jo
pop
cmp
mov
hlt
repz
and
adc
js
mov
sbb
movs
hlt
mov
cmp
or
push
pop
in
imul
mov
or
ins
sub
imul
imul
inc
mov
lea
cmp
ins
dec
std
sub
pop
shr
mov
push
test
retf
test
xchg
inc
out
or
sbb
dec
push
xchg
jne
iret
pop
mov
je
inc
lock
add
xor
jl
fbstp
push
lahf
or
shl
or
push
leave
xlat
lds
retf
jmp
rcr
xchg
sti
ret
adc
xchg
or
xor
push
add
jecxz
push
fimul
std
cli
in
mov
sbb
add
pop
xor
js
fs
das
xchg
sub
mov
bound
sub
mov
test
imul
mov
sbb
out
pop
shl
sub
add
and
xor
dec
ffreep
loope
test
in
sbb
jle
out
test
xor
arpl
div
popf
inc
add
sub
out
mov
and
pop
stos
pop
test
or
cmp
mov
adc
pop
(bad)
mov
pop
fbld
rol
cmp
stos
clc
repz
pop
stos
mov
gs
add
xchg
dec
test
sub
and
pop
pop
mov
pop
sbb
aam
pandn
out
add
cwde
or
cmp
jge
enter
std
or
cdq
fnstenv
pop
pop
in
sub
retf
xchg
add
xor
cmp
rcr
inc
cmps
pop
cmc
mov
push
inc
into
xchg
mov
pop
pop
and
js
hlt
outs
ss
lea
in
push
pop
outs
fild
rcr
es
dec
test
sti
sub
pop
(bad)
push
adc
xor
xchg
add
inc
(bad)
mov
js
icebp
cmp
mov
(bad)
jnp
cli
jnp
mov
(bad)
(bad)
mov
inc
das
ins
add
push
xor
xchg
mov
ret
enter
std
or
cmp
lock
clc
ins
and
mov
push
cmp
icebp
sub
xor
inc
int
das
and
das
mov
xchg
push
aas
xchg
test
pop
outs
dec
je
jle
add
xchg
movs
fldcw
repnz
test
lods
mov
xor
rcr
fst
inc
fcmove
jne
mov
test
jne
iret
shl
arpl
jge
fcomp
pop
add
fldenv
repz
lahf
push
adc
call
pop
pop
test
xchg
jg
hlt
cmp
push
and
mov
push
fidiv
cmc
mov
ins
cwde
and
mov
xor
int
xor
xchg
sbb
jle
jle
cmps
aam
or
mov
push
jne
cmp
je
aam
lea
call
pop
shl
rcl
scas
or
mov
mov
shl
aaa
pusha
ret
inc
fild
fiadd
jmp
add
adc
sbb
int3
out
inc
data16
and
popa
add
inc
mov
je
jno
mov
das
xchg
xlat
sbb
sbb
lods
mov
out
cmp
aas
or
(bad)
je
push
dec
xor
movs
and
mov
js
or
cmp
hlt
add
xor
and
jbe
or
mov
inc
les
and
push
div
sti
retf
xchg
(bad)
pop
mov
xor
and
int
xor
push
cwde
cld
aas
aas
(bad)
je
and
daa
cmc
cmps
dec
sbb
leave
sbb
adc
mov
adc
(bad)
mov
out
jb
popf
rcl
(bad)
xor
dec
add
btc
xchg
(bad)
neg
pop
in
daa
pop
rcl
pop
dec
sub
or
push
in
scas
jno
repz
std
push
sub
mov
daa
jmp
add
sbb
push
(bad)
pushf
pop
in
imul
call
sbb
jecxz
aaa
push
pop
movs
jl
push
push
dec
mov
xchg
retf
jno
fstp
imul
xor
aam
mov
mov
scas
pop
inc
stc
xchg
or
aaa
jnp
sub
fbstp
and
inc
inc
loop
dec
sbb
pop
xor
call
mov
jmp
mov
xchg
aam
mov
or
arpl
inc
add
les
sbb
or
enter
sbb
inc
(bad)
stos
mov
pop
jg
mov
outs
sub
adc
es
xlat
adc
and
out
scas
adc
push
scas
jecxz
adc
out
and
movs
dec
ror
jp
fcom
cli
inc
icebp
bound
stos
lea
lahf
push
cmps
xlat
and
cmp
repnz
outs
jmp
cmp
rol
ficomp
ds
sti
or
dec
in
push
popf
nop
adc
mov
jmp
movs
sub
pop
fist
fs
je
popa
xor
and
cmp
add
cmp
mov
xor
sbb
out
movs
mov
jbe
sbb
ins
into
pop
cmp
das
adc
mov
sbb
cmps
shl
xor
add
sti
ret
rcl
out
jge
cwde
repz
push
jge
jbe
push
ds
cli
leave
int
popa
neg
inc
pop
cmp
cmp
mov
outs
sti
push
scas
cmp
add
fisttp
dec
adc
inc
xchg
xchg
nop
pop
movs
in
jecxz
xchg
daa
and
das
sub
outs
neg
(bad)
ss
push
call
shl
sti
inc
addr16
mov
push
add
aaa
aas
pushf
pop
inc
stos
arpl
add
sub
je
test
dec
cmp
dec
es
xor
push
sahf
or
xchg
adc
mov
cmp
enter
js
mov
dec
(bad)
fist
(bad)
pop
pop
jmp
ds
jmp
cs
dec
mov
sub
inc
jle
movs
ror
out
xchg
loope
fdiv
pop
movs
pop
mov
push
xchg
mov
retf
mov
(bad)
sti
lahf
punpckhbw
js
loop
std
add
lea
jg
arpl
push
pusha
xchg
clc
mov
into
pop
jp
(bad)
sbb
sbb
retf
mov
ds
call
and
jne
jle
adc
add
jne
lods
jb
inc
xor
cli
adc
cli
ja
xchg
mov
cli
test
and
adc
fwait
rcr
xor
std
mov
stos
ja
aaa
mov
dec
mov
cmp
push
jmp
pop
or
sub
ins
fbstp
mov
mov
sar
in
pop
outs
or
mov
dec
add
outs
fcomp
rcr
pop
adc
cmp
pop
xchg
cmps
mov
fnstcw
xor
inc
sub
shr
jo
stc
jmp
inc
or
out
dec
mov
or
into
pop
pop
call
retf
outs
sahf
mov
fbstp
ins
idiv
inc
or
or
cmps
xchg
jb
(bad)
loop
loopne
cmps
pop
and
in
xchg
and
push
jbe
xchg
and
and
not
popf
jae
nop
(bad)
jecxz
cmp
lock
fild
and
dec
mov
push
sub
adc
int3
aas
lods
push
sar
sub
leave
pop
mov
cs
shr
(bad)
retf
xor
fbstp
mov
add
push
loop
mov
(bad)
(bad)
fisubr
add
fbld
icebp
ror
jnp
jl
inc
adc
adc
inc
pop
mov
jle
lods
xor
xchg
adc
out
jb
mov
jle
out
imul
add
sub
(bad)
iret
mov
xor
or
push
fistp
scas
fisubr
fcomi
jl
mov
lahf
xchg
xor
and
rcl
ins
fdivr
pop
cmp
xchg
cmp
adc
dec
jmp
adc
push
das
popa
add
dec
aam
ds
xchg
sbb
pop
mov
popf
xchg
sub
cmp
adc
shr
(bad)
rcr
out
gs
push
out
popa
pop
and
inc
push
jmp
cmc
pop
push
mov
add
push
fld
xchg
rol
inc
repz
int
js
mov
retf
add
adc
je
mov
push
clc
imul
mov
or
test
(bad)
sub
mov
rcl
imul
in
pop
jne
aaa
jbe
aaa
mov
pop
aaa
das
stos
push
mov
mov
dec
xchg
cmp
sub
cmp
cmp
mov
ins
test
adc
in
push
inc
inc
pusha
pusha
xchg
push
mov
movs
push
sub
fistp
in
addr16
sbb
dec
out
and
outs
sbb
add
xchg
in
ins
mov
lds
mov
(bad)
mov
sub
mov
loop
add
dec
outs
pop
in
mov
dec
push
xlat
out
mov
push
mov
pop
es
mov
cmp
aad
lods
movs
mov
movs
and
out
call
mov
sbb
cdq
div
stos
es
jmp
or
dec
sbb
pusha
cmc
and
iret
call
mov
clc
sbb
dec
gs
int
xor
sar
and
inc
lea
xlat
push
pop
inc
cmp
xchg
mov
pop
add
and
sar
or
inc
or
push
pop
mov
adc
pop
mov
jle
ins
rcr
xlat
aas
mov
les
pusha
xor
nop
sub
inc
or
pop
dec
std
jbe
push
(bad)
and
lock
arpl
test
fstp
sub
(bad)
shr
js
mov
es
les
xor
sub
push
mov
(bad)
(bad)
gs
repnz
dec
mov
pop
bound
sar
sub
mov
in
push
mov
mov
stc
sub
xchg
bound
cmps
mov
int
push
mov
sub
jae
lods
leave
aas
outs
idiv
mov
pusha
fisub
test
cld
cli
jecxz
and
xchg
das
(bad)
mov
paddsw
jno
mov
push
and
in
sbb
mov
int
scas
pusha
fs
das
xor
inc
adc
pop
push
add
adc
movs
retf
imul
pop
aam
in
iret
jmp
pop
js
iret
ja
push
cli
lods
pop
movs
xor
fwait
and
mov
adc
fcom
jl
push
std
cmp
pop
ret
mov
push
nop
data16
xchg
push
xchg
dec
push
rol
enter
pop
daa
std
popa
adc
loope
jns
mov
dec
jge
cmp
shl
rcr
inc
imul
mov
mov
inc
jmp
cmp
int
movs
stos
dec
push
call
ret
dec
outs
cmp
repz
fdivr
jbe
jg
fdivp
xchg
sbb
fisttp
cmp
mov
nop
mov
pop
cmp
mov
xlat
xor
fild
add
test
stos
fcomi
cmp
pop
xlat
faddp
scas
cmp
movs
cmp
sub
jp
test
icebp
je
dec
mov
sti
mov
movs
stos
ins
data16
jbe
repz
fwait
ins
out
or
xchg
lahf
mov
(bad)
push
dec
imul
or
fwait
xchg
adc
or
xor
cdq
mov
adc
xor
rcr
and
inc
ror
retf
mov
ret
sub
or
xor
scas
or
dec
mov
out
jnp
pop
sbb
push
fnstenv
xchg
sub
iret
push
add
mov
into
inc
loope
mov
sub
jbe
fdivr
mov
dec
mov
mov
sub
mov
std
dec
pop
pop
pop
pushf
int
sub
test
mov
mov
rcl
xchg
dec
sbb
inc
shl
das
pushf
mov
fst
xor
fisttp
or
xchg
fadd
add
push
cld
in
mov
cmp
hlt
push
movs
call
leave
push
pop
cmps
(bad)
ins
cmp
pop
xlat
es
mov
mov
rcl
js
bound
dec
push
and
xchg
xchg
mov
cld
scas
or
lds
push
inc
pop
mov
xchg
jbe
stos
pop
mov
xchg
push
in
pop
retf
and
sub
pop
sti
scas
fsubr
out
(bad)
(bad)
inc
mov
fnstsw
in
jb
sub
fwait
aas
repz
daa
jmp
daa
jge
mov
call
xor
and
jge
into
mov
sub
icebp
loopne
xchg
adc
dec
dec
xor
bnd
xchg
xor
mov
ja
pushf
loopne
(bad)
push
loopne
cmps
imul
retf
jmp
(bad)
jmp
(bad)
jp
(bad)
pop
pop
push
fist
inc
call
in
sbb
add
xchg
pop
pop
test
fwait
mov
cmpps
fwait
xchg
(bad)
cwde
hlt
inc
push
fwait
cmc
lahf
push
push
js
sub
xlat
fcmovbe
pop
(bad)
aad
mov
das
cmp
aam
pop
adc
push
mov
xor
mov
shl
xor
add
xchg
cmps
sub
fwait
sub
loop
sbb
or
jl
add
xor
ror
shr
xor
not
(bad)
xchg
pop
(bad)
add
stc
test
jbe
dec
imul
das
iret
int3
adc
cdq
(bad)
pop
dec
jmp
and
push
inc
(bad)
aam
push
cmp
dec
jle
int3
pushf
jg
pusha
xchg
jne
adc
xor
lods
shr
mov
sub
cwde
cmp
shl
(bad)
cmp
xchg
test
and
or
mov
(bad)
(bad)
cmps
arpl
cmp
or
jge
int3
inc
das
jno
(bad)
int3
mov
iret
cli
ror
lods
lods
cdq
lods
scas
mov
push
inc
cld
outs
sahf
xor
pop
stc
test
int
fcom
mov
xor
imul
mov
inc
fincstp
push
scas
(bad)
scas
in
mov
add
outs
js
push
push
jbe
loopne
scas
dec
ja
adc
mov
sbb
sbb
push
adc
mov
or
movs
mov
sbb
dec
or
xlat
popa
pop
jo
jg
scas
cmp
mov
movs
xchg
add
inc
adc
unpckhps
fcomp
stos
movs
mov
mov
imul
mov
pop
jae
pop
retf
adc
mov
cdq
mov
cmp
enter
in
ret
jecxz
pop
jmp
rcr
pop
and
retf
adc
sub
cli
das
cld
and
adc
and
lea
xor
lods
(bad)
and
jge
or
xchg
push
add
add
inc
out
cs
mov
jl
into
mov
mov
vpsrlw
sbb
into
and
cdq
outs
cmps
dec
mov
or
mov
lea
jns
xor
pop
fsubr
inc
ins
arpl
xchg
in
data16
sub
mov
sub
into
mov
bound
push
mov
and
jns
cmc
xor
mov
nop
jmp
and
jno
int3
shr
stos
aad
jmp
jle
enter
mov
pop
cld
in
jo
js
jo
(bad)
jns
mov
(bad)
bound
xchg
xchg
pusha
cmps
call
int
dec
add
jmp
add
mov
outs
push
shl
adc
mov
sub
out
loopne
dec
loopne
fisttp
xchg
push
dec
sbb
adc
adc
pop
out
arpl
lahf
cli
sbb
sbb
iret
xchg
pushf
lock
test
loopne
js
and
xchg
mov
arpl
inc
or
stos
jp
xchg
xor
dec
cmps
hlt
rol
xor
lahf
mov
xchg
xor
or
sti
inc
mov
icebp
push
ja
shl
sub
cmp
call
outs
scas
pop
xchg
in
and
xchg
(bad)
std
jnp
lds
xchg
test
int
data16
sar
cmp
sub
mov
ret
xchg
movs
mov
pop
cmc
ja
rep
inc
dec
sub
aad
dec
mov
sbb
xor
pop
(bad)
xlat
cmps
popf
clc
popf
into
daa
cmc
pushf
outs
xchg
stc
sar
mov
mov
sub
movs
or
pop
dec
loope
(bad)
ficom
or
cmp
nop
lods
aam
repz
jl
(bad)
cmp
jns
sbb
push
push
test
xor
call
loop
hlt
fcmovnb
push
ins
hlt
addr16
xchg
xchg
or
mov
adc
push
pop
nop
pop
pop
(bad)
pusha
mov
mov
xchg
outs
mov
je
call
bound
sub
pop
cmp
pop
adc
ins
loope
cmps
sub
jbe
out
dec
mov
or
neg
shl
xchg
pusha
lods
ds
sub
les
push
leave
jecxz
push
out
std
nop
popa
std
push
lods
pop
mov
xchg
fadd
stos
iret
push
mov
and
pop
mov
and
dec
jns
adc
jle
pop
and
mov
push
jb
jge
and
mov
dec
mov
hlt
and
movs
inc
ds
push
mov
xor
clc
test
std
out
cs
aas
lods
cmp
dec
adc
xchg
icebp
imul
ror
add
shl
rcr
pop
loopne
imul
and
(bad)
mov
cwde
and
retf
jmp
push
fwait
das
lahf
stos
imul
cdq
aam
xchg
mov
(bad)
fwait
jne
fs
cs
cmps
jns
ficom
repz
add
adc
je
movs
mov
cmp
push
push
rcl
dec
fsubr
mov
adc
adc
mov
lea
push
and
jmp
xor
mov
dec
mov
dec
movs
jecxz
or
scas
xchg
call
stc
adc
popf
repnz
sahf
stos
int3
jle
hlt
outs
sbb
pop
fst
shrd
(bad)
data16
and
push
push
jae
hlt
fwait
and
scas
das
in
ja
inc
cld
(bad)
jge
xor
inc
loope
mov
les
cmp
vpaddsb
pop
enterw
mov
cmp
ret
rol
pop
punpcklbw
cli
neg
push
push
in
pop
fbstp
adc
adc
cmps
lods
or
mov
inc
les
jg
xor
xor
test
sbb
in
xchg
dec
mov
pop
daa
js
add
mov
dec
cs
mov
or
and
and
seta
mov
sti
fwait
jnp
int
mov
push
cmp
lock
push
enter
cmp
loope
mov
or
out
sbb
mov
(bad)
jl
push
arpl
and
movs
sar
addr16
adc
xor
and
das
mov
loope
push
sub
outs
les
pusha
or
(bad)
mov
dec
(bad)
in
sub
pusha
loopne
adc
adc
fild
fbstp
add
dec
iret
pop
stc
xchg
div
es
inc
call
fmul
outs
xor
mov
icebp
xor
js
in
mov
or
add
push
cmps
fsub
ins
pop
jo
and
cmp
adc
in
xchg
cdq
jmp
call
cmp
xchg
stos
pop
xor
(bad)
aam
call
mov
xchg
xor
cmp
rcl
and
into
xchg
sar
test
mov
pop
lea
sub
cmp
jecxz
inc
arpl
push
movs
jmp
shl
mov
xchg
adc
inc
xchg
pop
xlat
rol
nop
(bad)
dec
jge
mov
mov
test
lods
rcl
cmp
les
sub
jb
call
rcr
outs
in
cdq
inc
xchg
adc
adc
scas
inc
and
(bad)
bound
dec
push
das
inc
lahf
sbb
inc
jb
adc
push
hlt
hlt
add
imul
sub
mov
mov
sub
in
in
cmp
adc
(bad)
push
out
or
xor
rol
push
fnsave
scas
comiss
faddp
ins
adc
push
ds
stc
pop
lock
retf
aam
ret
add
stos
call
movs
data16
(bad)
movs
mov
dec
cmp
int
jnp
fidivr
retf
repz
(bad)
(bad)
pusha
out
es
or
push
cs
(bad)
ror
xor
daa
dec
pop
push
push
out
push
mov
cmps
mov
push
xor
mov
ror
movs
add
lea
rcr
push
outs
lods
(bad)
movs
(bad)
pop
dec
and
and
xchg
xlat
and
bound
mov
dec
jo
test
das
xchg
imul
mov
cmp
cmps
sub
test
adc
xor
je
(bad)
fnsave
(bad)
int3
mov
dec
fwait
jg
cmp
add
sbb
xchg
mov
xchg
(bad)
mov
add
cmp
cld
jnp
arpl
fstp
add
das
add
gs
xchg
add
jmp
call
ret
mov
xchg
and
aad
cmp
jmp
sbb
cli
push
lods
and
cld
out
dec
ret
cmp
jp
(bad)
(bad)
pop
dec
dec
adc
and
inc
push
push
test
adc
into
mov
jg
fdiv
retf
ds
enter
or
add
pop
and
popa
xchg
dec
mov
(bad)
push
inc
imul
fwait
cmp
or
mov
pop
xor
push
and
adc
push
dec
iret
into
xchg
imul
arpl
cdq
int
in
fs
adc
xor
fs
jecxz
(bad)
dec
sahf
inc
out
xchg
(bad)
aam
je
pop
jae
outs
mov
push
arpl
inc
sub
add
or
xchg
dec
jp
aad
popa
or
jno
inc
xor
loopne
cdq
fstp
pushf
mov
fs
add
hlt
pop
adc
imul
std
mov
xchg
inc
(bad)
movs
and
sbb
adc
(bad)
ffree
push
xchg
push
call
push
xchg
repz
jecxz
push
adc
jnp
aam
mov
stc
mov
mov
push
adc
ror
adc
or
inc
jl
stc
rcl
push
and
shr
gs
div
xor
and
movs
lds
mov
xor
sub
popf
xor
sub
xchg
sbb
xchg
jne
mul
inc
xchg
cmc
into
jl
arpl
or
adc
push
inc
push
call
cdq
ins
fsubr
jp
xchg
and
jg
iret
inc
fcom
inc
xchg
jnp
sub
mov
dec
xchg
push
jecxz
mov
dec
pop
mov
loop
sbb
xchg
repnz
jmp
jmp
and
inc
nop
nop
jae
(bad)
std
mov
or
mov
fdivr
frndint
mov
mov
cmp
mov
dec
inc
shr
rol
sub
aaa
int
(bad)
mov
mov
pusha
sti
mov
push
cdq
add
jmp
sub
add
popa
lea
xor
je
cwde
stc
xchg
std
xchg
sub
push
push
fiadd
cld
dec
mov
mov
mov
out
cli
stc
out
rcr
mov
div
popf
cmp
cmps
loop
ins
dec
outs
sbb
and
cmps
aam
shl
dec
in
push
int3
mov
out
jb
or
jmp
xor
mov
call
sbb
or
iret
in
test
inc
sbb
hlt
sti
scas
pop
popa
sbb
or
jo
ds
cs
push
pop
or
or
mov
jmp
leave
and
mov
cmp
jo
push
jmp
fist
daa
add
aas
cmp
lock
inc
add
pop
lock
push
inc
or
inc
push
in
dec
test
sahf
add
and
(bad)
xchg
or
inc
or
int3
pop
je
xchg
addr16
inc
repz
shl
xchg
js
cmp
push
jp
sub
sub
push
push
mov
retf
mov
retf
int3
sub
mov
dec
or
jno
mov
movs
stos
xchg
jl
or
xor
test
mov
push
lods
or
mov
inc
push
sbb
sub
aad
xor
push
daa
xchg
jb
loopne
add
arpl
mov
jmp
add
add
inc
ss
xchg
push
dec
fstp
maxps
dec
(bad)
jmp
mov
xchg
and
mov
mov
push
push
test
leave
or
syscall
or
xchg
cs
dec
jb
shl
jmp
shr
shl
dec
fcmovbe
jecxz
cdq
dec
stos
arpl
fstp
xor
mov
dec
add
xchg
je
mov
inc
aad
maskmovq
imul
and
inc
mov
mov
shr
adc
jmp
pusha
jno
jg
or
retf
xor
add
sub
push
outs
push
pop
push
xor
xchg
(bad)
sbb
mov
mov
pushf
xchg
lahf
xor
xchg
mov
jle
fst
mov
int3
add
mov
mov
xchg
cs
jge
xlat
mov
mov
and
jecxz
inc
jg
cmp
jne
jo
ret
loopne
xor
(bad)
push
pop
retf
shl
push
pusha
cdq
push
cmp
outs
xchg
out
mov
sti
bound
stc
aad
sbb
imul
addr16
js
mov
sub
dec
jbe
repnz
xlat
push
out
jne
xor
inc
lods
dec
jne
movs
dec
pop
rol
ja
popa
pop
lods
clc
mov
in
in
lea
addr16
popf
lock
sbb
xchg
or
rcl
test
dec
pop
loope
pop
lods
test
inc
add
dec
mov
shl
sub
pop
clc
xchg
fmul
xchg
aaa
cld
sub
pop
xchg
xchg
pop
call
loopne
in
dec
mov
adc
rcr
ret
sub
pop
dec
pop
loope
out
repz
and
ret
xor
dec
pop
mov
pop
stc
or
int3
xchg
xchg
aaa
imul
lods
imul
sub
sbb
mov
mov
or
or
data16
add
cwde
xchg
push
aam
cli
bound
out
loope
cmps
stc
stos
sar
shr
rol
push
dec
scas
mov
jmp
adc
jle
fnstsw
gs
xchg
adc
out
je
jnp
cmp
jns
(bad)
dec
(bad)
sti
mov
xor
xor
scas
inc
ret
jl
or
mov
dec
cmc
cmp
aaa
or
xor
sbb
or
push
dec
xchg
or
fs
inc
pop
mov
ret
ret
inc
sbb
mov
xchg
scas
ret
add
pop
mov
mov
adc
es
loope
push
ds
push
dec
mov
mov
test
push
pushf
jno
jbe
mov
mov
fbld
pop
ja
mov
xor
and
mov
ror
xchg
rcl
push
sub
lds
jmp
mov
sbb
xor
inc
pop
jg
sbb
outs
mov
popa
inc
push
sbb
mov
sub
push
bound
outs
sbb
mov
and
int3
mov
pusha
jle
loop
dec
test
inc
xor
xchg
inc
data16
imul
jmp
imul
sbb
xchg
dec
xor
inc
dec
sub
pop
and
add
jb
adc
sub
rol
mov
lods
lock
stos
ss
sahf
call
xchg
ja
pop
test
in
je
iret
cmp
inc
aas
dec
loopne
pop
jp
dec
add
sub
pop
call
stc
icebp
mov
fnstsw
mov
addr16
mov
in
retf
dec
xchg
jg
mov
inc
jp
ins
addr16
mov
cmp
jecxz
shl
out
fxch
aas
cmp
enter
daa
jg
arpl
fwait
dec
sbb
dec
test
cmps
mov
out
cwde
sbb
mov
and
dec
stos
repnz
aad
jmp
dec
inc
pop
pop
jmp
cdq
(bad)
nop
sahf
jmp
ins
sbb
das
jecxz
jmp
imul
in
stos
pusha
pop
lahf
add
retf
sub
jg
test
retf
jno
mov
mov
and
sti
inc
in
push
mov
aaa
pusha
(bad)
fist
bswap
jg
cmp
xchg
pushf
jecxz
mov
mov
mov
dec
aad
dec
fnsave
dec
inc
sub
neg
enter
enter
enter
lods
dec
cmps
jae
mov
rol
cmp
jno
cmps
dec
inc
(bad)
js
imul
sub
int
push
push
stos
and
idiv
ss
cdq
push
ret
out
out
(bad)
add
mov
fwait
retf
adc
or
or
movs
inc
scas
or
xchg
jbe
adc
out
stos
dec
xchg
stos
lods
xor
nop
out
mov
add
stos
mov
jnp
xlat
mov
add
sub
jle
dec
inc
cdq
fistp
add
xchg
cmp
jne
cmp
xchg
cmc
jne
cwde
xor
repnz
add
dec
jmp
pusha
mov
xor
jae
jbe
or
sbb
pushf
js
popf
fcomp
pop
cmps
loop
inc
and
inc
sub
jl
xchg
aaa
mov
cs
movs
inc
ds
xchg
mov
mov
and
xchg
inc
jne
ss
fst
lahf
xchg
mov
out
cmp
into
ja
add
xchg
mov
shl
scas
pop
pop
cmps
imul
inc
jecxz
ds
ss
(bad)
sbb
retf
jle
dec
sub
rcr
ret
inc
mov
mov
or
mov
push
lods
xor
pop
fs
jle
mov
mov
loop
push
ins
dec
pop
jo
inc
outs
adc
cdq
mov
out
xchg
and
push
shl
(bad)
lock
xor
jl
int3
push
int
lea
mov
movs
push
sar
js
inc
out
std
sub
cmps
or
movs
cs
add
ss
or
dec
adc
lahf
and
inc
jne
pushf
fnstenv
shr
push
sbb
sub
fs
pop
in
loope
sbb
repnz
sub
xchg
xor
in
jne
loope
adc
loop
dec
mov
xchg
dec
das
mov
mov
adc
adc
pop
aaa
fisub
mov
not
pop
xor
repz
push
repnz
add
fild
lods
jns
cdq
xchg
ret
cvtpi2ps
call
loop
dec
cmp
jg
or
push
(bad)
loop
aas
rol
jle
les
sub
xchg
inc
jecxz
fwait
in
mov
dec
pop
push
mov
inc
fcmovnb
pop
jmp
push
dec
cdq
(bad)
movs
movs
push
movs
rcr
iret
fisttp
test
or
push
lods
and
lods
fdivr
outs
pop
mov
mov
xchg
add
jge
sbb
ss
mov
and
test
push
and
loop
xor
outs
jle
jle
add
mov
int
test
cmp
rcl
mov
out
jnp
mov
push
lods
xchg
add
sbb
push
enter
push
fistp
pop
out
inc
fs
enter
jno
in
test
fcomp
cmc
push
jmp
jae
adc
mov
bound
in
adc
fwait
inc
retf
sub
mov
fild
js
xor
xor
aam
popa
pushf
ror
inc
inc
add
das
fnsave
or
push
jmp
mov
stc
mov
pusha
scas
jmp
and
je
mov
mov
lods
dec
repnz
jo
jmp
loope
inc
xchg
jb
mov
add
popa
lds
mov
popf
inc
xchg
jmp
repz
dec
call
mov
xchg
jge
xor
push
loopne
leave
(bad)
push
pop
shr
fwait
sub
(bad)
arpl
jns
mov
(bad)
xlat
mov
inc
ret
mov
dec
imul
arpl
cmp
call
fs
mov
scas
jmp
adc
ja
outs
or
sbb
pop
ds
fwait
mov
xor
js
inc
ins
inc
cmp
jp
mov
mov
cmp
fadd
or
jne
or
ficomp
xchg
jecxz
pop
into
pop
xor
fmul
mov
and
pop
or
pop
sbb
push
out
fcmove
dec
push
cli
sub
lea
dec
dec
loope
aad
out
sub
ja
or
push
(bad)
stc
sbb
inc
sbb
fs
dec
les
mov
jns
test
out
mov
xor
outs
push
adc
int
mov
inc
cmp
sub
cmp
jle
rcr
inc
js
sbb
cmp
mov
pop
into
dec
sub
lods
jl
idiv
cmp
mov
and
push
cmp
popa
repz
cwde
mov
xchg
daa
ins
lods
repnz
xor
mov
pop
das
xchg
push
popa
add
sub
sahf
dec
fdiv
adc
fbstp
add
push
mul
mov
xchg
inc
pop
lods
dec
and
add
retf
xor
imul
bound
fisubr
out
mov
sbb
adc
jl
leave
push
cld
dec
test
add
fbstp
lods
movs
dec
(bad)
jmp
fisubr
loop
js
pop
inc
add
adc
sbb
repz
xor
jle
movs
lock
cmp
pop
mov
cld
movs
rol
lahf
fs
xchg
mov
bound
push
(bad)
fsubr
lods
js
xor
pop
movs
daa
push
push
dec
enter
and
lods
mov
in
cmp
(bad)
sahf
ror
cs
add
adc
jbe
(bad)
xor
js
add
xchg
imul
addr16
mov
jne
mov
cs
int3
inc
les
out
rol
test
jl
jmp
in
lea
xor
cmps
int3
xchg
sbb
fisttp
and
and
repz
lea
or
xor
fst
jnp
pop
mov
mov
and
lods
(bad)
jo
cmp
adc
mov
mul
push
pop
cmp
adc
sar
push
fwait
sub
out
es
xchg
push
and
sar
aaa
ret
cwde
xchg
jne
mov
lods
push
push
out
scas
mov
mov
push
sahf
cmp
(bad)
int3
repnz
ins
shl
pop
lock
add
mov
dec
je
add
sub
push
push
cmps
inc
adc
inc
sub
lahf
jmp
cwde
ds
xchg
(bad)
mov
repz
test
out
je
ss
imul
jae
push
pushf
ins
bound
fistp
add
retf
or
sbb
nop
stc
or
and
je
div
cmc
addr16
imul
pop
jbe
xor
pop
jmp
mov
loope
sbb
mov
mov
bnd
sbb
xchg
jecxz
adc
push
lea
lods
retf
xchg
mov
push
dec
push
daa
ja
into
pop
mov
js
mov
pop
je
dec
xor
mov
dec
(bad)
push
pop
out
cwde
lea
or
adc
cs
sahf
mov
repnz
inc
and
pop
sar
pop
test
xchg
fstp
dec
or
aas
mov
add
push
scas
cmps
pop
(bad)
push
adc
pop
aam
mov
aaa
push
and
and
jb
add
push
ins
pop
iret
mov
sub
pop
jbe
daa
hlt
xor
mov
(bad)
adc
add
addr16
int
fisub
sub
pop
ret
pop
inc
mov
pop
pop
sub
mov
ins
pop
sub
fnstcw
push
enter
dec
xor
push
jg
jae
aaa
mov
jne
in
add
sub
inc
clc
adc
jnp
test
retf
inc
(bad)
fwait
cdq
sbb
(bad)
mov
jp
popa
ficom
ins
loope
(bad)
arpl
out
fiadd
and
inc
or
cld
shr
and
arpl
xchg
ins
retf
dec
not
js
fldcw
fcmovne
ds
or
stos
mov
pop
repnz
or
mov
mov
loope
imul
jg
pop
mov
xchg
inc
mov
imul
inc
sar
repz
aam
push
mov
fidiv
cmp
xor
in
dec
cmp
(bad)
mul
push
sbb
call
call
xor
mov
jae
popf
enter
loop
gs
push
sub
stos
imul
xchg
mov
(bad)
out
sbb
mov
add
xchg
fild
dec
(bad)
call
dec
rol
or
es
shr
pop
scas
ja
imul
jns
mov
int3
push
adc
push
mov
xchg
lods
mov
sbb
add
cmp
dec
std
and
out
mov
int
sub
push
mov
test
inc
xor
dec
add
mov
mov
pop
jo
outs
adc
push
fdiv
jno
lods
sub
inc
mov
mov
pop
fcmovbe
bound
jp
call
ins
test
stos
mov
or
cmp
mov
out
fsubr
sub
leave
xchg
xchg
xor
test
pop
add
jae
cli
cmc
(bad)
dec
add
xlat
shl
pop
jle
jnp
iret
xchg
sbb
mov
rcr
add
lock
sar
jnp
mov
xchg
in
adc
data16
repz
xor
les
dec
jo
and
sbb
fisub
inc
jmp
adc
(bad)
sub
dec
pop
fwait
push
jmp
rol
ss
xchg
les
adc
ret
cmc
fidivr
adc
ror
mov
es
and
dec
push
xchg
imul
push
cmp
fwait
and
mov
inc
xchg
retf
lds
test
dec
pop
xchg
adc
dec
add
int
mov
scas
out
jle
inc
test
pop
xor
(bad)
mov
ja
push
out
or
repnz
fbstp
mov
aam
xlat
aam
inc
pop
pop
data16
in
adc
inc
or
out
adc
add
jmp
jp
cmp
int3
cmp
jl
and
pop
mov
push
mov
add
dec
jp
jne
push
xchg
aas
(bad)
fidivr
test
ret
mov
sub
push
mov
sbb
or
out
or
sbb
mov
call
sub
mov
into
mov
aam
xor
int3
inc
or
mov
stos
mov
adc
ja
xor
stc
xlat
imul
loope
mov
adc
lods
jmp
bound
mov
mov
lock
popa
sahf
push
scas
mov
inc
adc
mov
cs
cmp
dec
cs
call
enter
mov
dec
jecxz
mov
adc
inc
test
inc
sbb
rcr
and
or
int
mov
pop
shl
stc
mov
call
or
mov
cs
cmp
dec
jge
popa
in
pop
hlt
shl
mov
aam
shl
neg
add
push
cmps
mov
retf
push
or
sahf
inc
and
push
dec
pop
xchg
push
sbb
jo
rcr
xchg
cmp
imul
fs
xlat
sbb
fisub
(bad)
adc
mov
ins
xchg
dec
pop
xor
push
aas
das
push
add
mov
pushf
ss
(bad)
cld
clc
call
shr
or
push
rol
int3
stos
dec
xor
pop
clc
loop
pop
movs
dec
cmp
ss
xor
inc
dec
add
mov
mov
int
cli
mov
sbb
shr
xor
mov
mov
mov
pop
sub
out
inc
cmp
sub
cli
sti
retf
add
scas
(bad)
pop
cmps
adc
or
and
(bad)
scas
xchg
or
push
retf
fimul
cwde
mov
loope
cmp
xor
gs
mov
call
dec
jmp
jno
test
jmp
push
mov
aas
iret
ss
icebp
in
aam
or
gs
(bad)
and
jmp
pop
mov
fdivr
das
sub
movs
aaa
shr
pushf
mov
xor
xor
nop
jmp
mov
push
push
inc
sub
retf
out
xchg
pop
jmp
aas
inc
aam
pusha
es
leave
adc
cmps
in
xchg
lock
push
lods
add
mov
imul
jecxz
mov
sub
inc
sbb
mov
push
in
scas
sar
mov
xor
cmp
rcr
or
out
addr16
(bad)
ja
aaa
push
sub
scas
push
fs
mov
popf
jmp
jbe
loopne
mov
mov
mov
arpl
in
inc
leave
ficom
ficom
(bad)
jae
mov
sub
push
int3
sbb
lock
in
jno
and
adc
inc
icebp
ss
mov
mov
mov
scas
fild
sub
stos
jmp
xlat
mov
mov
(bad)
shl
bound
add
loopne
test
and
mov
mov
xor
out
out
mov
sub
inc
cld
outs
int3
fsub
aas
sbb
sbb
rcr
adc
dec
retf
aad
into
cld
sub
popf
lea
xor
nop
loopne
cmp
dec
dec
sub
mov
pop
cmp
mov
sbb
mov
pop
pop
fist
xor
fadd
test
mov
or
push
les
pop
jno
push
sbb
cmp
retf
jecxz
push
sahf
sub
rcr
push
imul
and
movs
push
mov
sbb
call
ret
dec
shl
pop
pop
push
das
cmps
mov
fwait
and
rcr
push
sar
mov
adc
adc
pop
and
mov
inc
jnp
lock
push
(bad)
jge
lods
pop
xchg
out
stc
mov
mov
pop
lds
sub
cld
xchg
dec
dec
call
and
xor
in
lods
in
pop
cmp
test
jmp
jb
iret
push
(bad)
xor
repz
push
icebp
push
mul
mov
sub
aad
cli
jo
sub
and
and
inc
inc
push
loope
retf
and
pop
aad
pusha
pusha
add
sbb
mov
jb
sar
xchg
mov
out
arpl
dec
jo
mov
out
in
mov
pop
cwde
repz
inc
mov
add
imul
or
test
movs
jg
add
bswap
push
neg
retf
inc
stos
xor
cmps
scas
xor
jae
shr
xchg
pop
cmp
mov
xor
aam
dec
ds
scas
xchg
cmp
lahf
cmp
(bad)
std
add
jle
jne
xchg
mov
repz
jbe
icebp
sub
jne
push
sub
mov
pop
fadd
fimul
and
and
popf
mov
inc
dec
sar
das
cdq
in
int
popf
inc
jle
xchg
movsx
outs
mov
jno
out
outs
outs
into
add
sub
(bad)
jg
(bad)
mov
loopne
xchg
sbb
fist
mov
nop
push
pop
mov
sbb
jge
pop
inc
sti
lahf
xchg
cmps
sbb
adc
jp
cli
mov
xchg
fidiv
in
pop
dec
jo
and
(bad)
sti
shl
fst
enter
mov
rol
adc
imul
not
adc
(bad)
repz
mov
ds
das
mov
pop
sbb
iret
aad
retf
retf
and
add
adc
jne
retf
sbb
rcr
sub
and
dec
push
loope
fsub
jo
mov
shl
pushf
xchg
hlt
dec
mov
mov
mov
fistp
scas
call
cmp
cld
in
pop
fwait
xor
and
cmp
(bad)
bound
popf
in
inc
push
das
jmp
mov
movs
fnsave
pop
inc
rcr
loop
dec
call
in
cmp
adc
add
shl
or
movhps
dec
pushf
pop
mov
pusha
sbb
cmp
nop
and
sar
jnp
and
ja
jae
aad
add
inc
scas
push
sbb
inc
cmc
add
fcom
aad
scas
cmps
mov
enter
mov
std
scas
xchg
mov
cmp
movs
and
mov
mov
adc
lea
call
and
movs
loope
js
loop
adc
sbb
dec
cmp
popa
or
pop
imul
mov
jge
mov
pushf
jg
add
das
add
or
je
push
mov
push
adc
cmc
jmp
stc
cmp
cs
sub
outs
scas
in
int3
stc
cmp
sahf
mov
repz
dec
adc
xor
dec
bound
jecxz
sub
(bad)
adc
pop
not
out
dec
sbb
in
in
outs
add
std
pop
mov
mov
pop
inc
fwait
shr
cmp
icebp
mov
adc
jecxz
inc
jge
int3
lea
adc
adc
sub
outs
mov
pusha
push
jno
cld
lods
ror
imul
loope
xlat
fwait
sbb
sub
cmps
(bad)
cmp
(bad)
test
aam
popf
jg
xor
mov
pop
retf
repz
stos
pop
mov
lds
enterw
movs
int
sbb
call
arpl
rcr
(bad)
(bad)
jae
and
push
test
or
dec
pop
out
cmp
ins
bound
push
clc
imul
lock
cmp
repnz
(bad)
mov
stos
inc
xor
repnz
mov
cdq
test
add
retf
add
pop
pop
sbb
imul
pop
jmp
pop
cmc
arpl
fsub
jo
push
cmp
les
in
xchg
xchg
sbb
jmp
into
jbe
cwde
xor
add
xor
push
loop
mov
fisttp
add
mov
push
cmp
sub
jmp
add
cmp
dec
jnp
(bad)
pop
sahf
xor
mov
shl
ins
pop
shl
retf
mov
sbb
ret
fadd
push
pop
pushf
adc
xchg
mov
test
popa
rcl
or
jmp
jno
dec
lea
sbb
and
sbb
ja
jp
jbe
xor
sbb
paddusw
not
pop
test
push
xchg
push
dec
icebp
or
loope
mov
(bad)
inc
stos
mov
ja
call
(bad)
cli
lahf
inc
icebp
or
sub
jge
(bad)
loope
ret
dec
inc
push
cld
cmp
pop
gs
and
jmp
scas
fist
adc
inc
outs
mov
retf
bound
cmp
movs
xchg
jmp
icebp
cdq
dec
inc
push
sub
xor
stc
mov
xchg
xor
xchg
ja
mov
in
into
stos
add
xchg
cs
outs
mov
in
fild
bound
cmp
push
add
inc
test
sti
inc
lahf
inc
sbb
loopne
fisub
test
xor
add
jg
cwde
and
xor
mov
push
dec
js
cmp
test
mov
psllw
add
sbb
mov
mov
test
cmp
pop
out
shr
cmp
sub
jg
mov
mov
push
in
sbb
and
call
dec
sbb
jae
js
loope
nop
or
dec
cdq
(bad)
mov
mov
xlat
cs
xchg
test
(bad)
in
ja
scas
inc
sbb
repnz
rcr
xor
xor
inc
hlt
leave
jns
fadd
js
hlt
jns
(bad)
movs
pusha
movs
jl
lock
lods
add
movs
dec
xor
cdq
retf
xor
cwde
lahf
pop
and
in
out
pop
pop
cmc
popf
punpcklwd
dec
xchg
aaa
mov
outs
inc
sar
movs
pop
add
movs
xor
xchg
add
test
push
repz
ret
test
je
push
out
in
dec
dec
in
xchg
dec
push
je
shl
mov
(bad)
aam
call
jge
dec
jbe
test
mov
pop
test
hlt
sbb
push
div
dec
(bad)
addr16
or
repz
sbb
call
jne
aad
xchg
adc
cld
outs
in
shl
leave
push
lea
or
outs
mov
jmp
adc
ja
ds
xor
lods
pop
sub
repnz
jge
popf
es
rcl
xchg
pop
jb
lods
cmp
dec
outs
ret
cs
mov
je
stos
xlat
push
and
fwait
push
or
(bad)
push
fdivp
xor
ficomp
sub
jo
mov
inc
mov
and
(bad)
loopne
clc
sahf
or
mov
aaa
int3
aad
xor
pushf
mov
inc
fst
les
rcr
in
cbw
shr
mov
adc
sbb
pop
adc
add
cmp
std
and
cmp
mov
or
dec
stc
cli
jl
retf
in
sub
outs
pop
mov
dec
pop
jns
iret
and
arpl
and
imul
pop
add
mov
and
mov
sbb
mov
mov
test
adc
cmps
outs
add
cmps
xchg
data16
and
xor
xor
imul
sbb
movs
xchg
shl
jge
mov
pop
cwde
inc
into
push
mov
jmp
out
clc
adc
in
outs
lahf
jno
add
xchg
xchg
xchg
push
ret
or
jmp
lock
scas
jo
sbb
xor
popf
dec
gs
xor
sub
pusha
mov
aas
mov
iret
aam
or
adc
add
mov
push
cmc
inc
inc
clc
iret
outs
inc
pop
retf
jne
and
inc
scas
and
mov
mov
and
jnp
push
retf
cmp
leave
das
lods
push
xchg
out
or
not
mov
fcmovnb
cli
out
push
adc
lahf
nop
fcmovnu
je
sbb
fld
rcr
inc
and
cmc
mov
ins
jno
stc
leave
scas
fcomp
or
sub
data16
push
cld
add
xor
jecxz
mov
adc
int3
push
mov
not
cmps
xchg
enter
popf
popf
lock
sbb
mov
sbb
or
(bad)
jg
clc
sub
sti
fwait
xchg
(bad)
and
and
inc
xchg
mov
cmp
in
out
xchg
mov
jmp
xor
adc
out
adc
xor
pop
mov
mov
aad
fstp
xchg
sub
aam
jecxz
ret
or
fdivr
jno
cld
fs
(bad)
loopne
div
mov
iret
aas
and
rol
addr16
fdiv
int
mov
gs
jbe
test
xchg
pop
lods
xacquire
or
push
mov
dec
add
(bad)
aad
stos
rcl
pop
cmps
out
dec
mov
ret
pop
or
pop
pop
fs
cs
mov
imul
pop
cdq
xor
mov
mov
outs
add
inc
adc
les
cmp
jmp
adc
cmps
cmc
test
sar
dec
jle
xchg
rcr
retf
inc
mov
sbb
in
push
xchg
mov
or
in
int3
xchg
jmp
xor
test
xchg
stos
dec
cmp
in
loop
mov
cmps
sbb
repz
add
stos
push
mov
and
pusha
sbb
xchg
cdq
mov
and
mov
push
inc
mov
jo
sub
jmp
je
adc
push
imul
push
push
bound
mov
cmp
cli
movs
(bad)
clc
out
mov
out
test
popa
push
cmp
(bad)
aam
sbb
ret
jg
push
mov
add
sub
mov
jne
jb
mov
adc
out
cmp
sbb
push
jno
call
cs
sub
mov
cmp
cmp
xchg
imul
xchg
adc
inc
mov
jg
cmps
mov
mov
ins
pop
cmp
cmc
jmp
inc
or
test
lea
ror
shl
xchg
xor
fild
in
and
jle
jne
add
iret
jecxz
sbb
jg
outs
movs
shr
stc
mov
add
jmp
push
call
fidiv
jnp
pop
cmp
test
into
pop
sbb
out
dec
int
push
jo
aas
cld
or
outs
mov
aaa
aaa
scas
(bad)
sub
pushf
xor
adc
dec
and
ja
sahf
inc
repnz
pop
adc
es
mov
fldcw
inc
movs
pop
jns
out
pop
fwait
mov
jg
fst
pop
das
das
jns
rcr
fimul
lods
cmp
ror
jmp
sar
inc
leave
mov
sub
inc
sbb
mov
add
call
jae
ret
xchg
cmc
push
addr16
mov
mov
aam
fld
pop
add
add
test
add
push
fcomp
jo
xchg
lahf
cld
dec
movs
xchg
push
or
jp
ja
mov
cwde
test
mov
(bad)
xchg
fistp
sbb
and
mov
in
mov
adc
xchg
dec
sub
iret
loope
xchg
mov
aam
dec
cmps
jae
popf
push
xlat
mov
fnsave
es
(bad)
dec
movs
mov
add
psubsb
xchg
cli
adc
imul
jmp
icebp
add
sbb
ja
shr
movs
data16
mov
cld
loope
jle
out
ds
xchg
not
inc
and
cmc
lea
or
rcr
imul
mov
sbb
sub
jmp
cmp
adc
mov
addr16
jge
stos
and
xor
pop
mov
mov
(bad)
jecxz
push
or
ret
jmp
ss
fdivp
cld
dec
ret
sub
sub
inc
jns
in
or
div
daa
jl
xchg
or
sbb
sbb
aad
rcr
add
stc
test
iret
les
fimul
push
sub
mov
das
adc
data16
pop
aam
hlt
sub
cmp
repnz
mov
mov
mov
sub
mov
punpckhwd
add
rcl
stos
ror
imul
loopne
cmp
jne
nop
pop
mov
out
add
out
add
lea
aad
push
test
or
(bad)
sub
sbb
outs
js
jae
inc
imul
mov
xor
cld
outs
mov
pop
shl
test
mov
jge
cmp
adc
adc
xchg
dec
pop
(bad)
aaa
pop
sub
push
inc
out
fild
add
or
pop
pop
xchg
mov
xor
lock
push
add
push
fwait
(bad)
xchg
adc
ds
cli
cwde
jmp
push
sub
(bad)
ds
dec
nop
out
jmp
and
rcl
xadd
call
jae
shr
dec
int
sub
icebp
push
leave
fdivp
mov
pop
mov
and
or
adc
pop
dec
mov
push
pop
aas
and
test
(bad)
jle
ja
js
fs
js
das
in
adc
pop
pop
imul
cmp
gs
and
mov
adc
sub
int
inc
sti
cmp
stos
gs
xchg
cdq
std
out
les
mov
and
cmps
jb
mov
or
mov
fst
cmp
(bad)
jle
pop
xor
cmc
xchg
aad
cmp
xor
push
and
out
mov
xchg
aas
clc
in
jae
sub
sub
mov
push
aas
jmp
push
ins
sub
jb
ss
mov
mov
push
cdq
neg
fist
out
loop
jnp
cdq
js
call
idiv
pushf
adc
in
fnstenv
lds
push
mov
clc
fld
gs
(bad)
mov
add
mov
lods
xor
rep
ficom
xor
ins
es
adc
mov
shl
fdivr
jg
lods
lods
in
out
nop
(bad)
jae
stos
test
add
(bad)
loop
retf
or
push
cli
xchg
inc
mov
pop
loope
mov
dec
movs
push
shl
sub
mov
and
cwde
les
jae
ins
dec
xor
mov
rcl
sbb
mov
gs
mov
(bad)
and
or
(bad)
cmps
add
add
int3
fld
add
or
add
jmp
fldenv
mov
sub
mov
push
mov
xor
cmc
inc
in
mov
popf
enter
pop
scas
test
mov
and
popf
inc
push
dec
sbb
cmp
xor
lods
rol
jno
push
stos
movs
mov
pushf
ret
cmp
sbb
fcmovne
jl
sbb
mov
push
inc
push
in
retf
pop
jle
test
pop
mov
sub
jp
adc
xchg
ror
mov
cmp
outs
imul
xchg
mov
pop
leave
xor
sbb
cmp
xchg
xchg
popa
jmp
call
sahf
and
in
test
or
fidivr
loop
loop
(bad)
jg
and
xor
push
push
dec
scas
imul
loope
(bad)
sub
loop
sahf
loop
mov
stos
lods
inc
(bad)
stos
and
jp
cmp
loope
enter
jmp
xchg
mov
sub
jg
pushf
cld
xchg
pop
pop
je
and
mov
iret
cmp
xchg
rcl
mov
movs
dec
jns
and
or
mov
adc
daa
aas
mov
xchg
sbb
mov
movs
cmp
mov
cmp
add
popf
outs
popf
mov
dec
inc
sub
sbb
mov
aam
outs
in
nop
mov
xchg
retf
fidiv
mov
mov
pushf
dec
cmp
movs
popa
loop
(bad)
mov
xchg
mov
pop
lea
inc
cbw
xor
pop
mov
push
and
push
pop
or
or
xlat
or
out
sbb
mov
std
pop
popf
les
jle
ins
cmps
repnz
into
addr16
imul
imul
cmp
push
aam
jle
mov
std
cs
ins
add
jle
inc
lods
arpl
stc
cmc
aas
jae
ret
stos
mov
cmp
mov
in
pop
pop
add
ret
js
add
in
mov
rol
retf
dec
fcomi
and
inc
lods
jno
iret
jl
cmps
xchg
pop
das
xchg
add
cs
into
mov
inc
lahf
push
(bad)
int3
jg
sub
sbb
fild
cmp
and
es
shl
jns
fcomi
int3
cmp
gs
push
pop
dec
addr16
test
xor
xchg
push
mov
push
jmp
(bad)
sbb
or
xor
icebp
and
cmp
pmullw
ficomp
sub
fmul
call
ficomp
into
rcr
sbb
mov
cwde
cwde
mov
inc
adc
inc
scas
cmp
fisub
mov
call
cmps
add
dec
in
push
mov
mov
pop
es
inc
jns
inc
retf
mov
sbb
dec
or
call
and
mov
sahf
inc
mov
inc
test
jno
adc
mov
inc
mov
(bad)
pop
pop
outs
out
mov
add
xor
ins
sbb
imul
pushf
xor
fadd
jb
mov
dec
(bad)
cli
add
in
out
pusha
cmp
in
sub
lds
loopne
jo
pop
jbe
mov
adc
pop
mov
pop
push
push
push
fstp
mov
mov
fwait
sar
icebp
sbb
ins
into
addr16
mov
jl
xlat
in
enter
push
enter
dec
leave
or
sub
pop
inc
push
cmc
sub
mov
cli
jp
mov
fld
mov
xchg
fcmovnb
and
mov
push
sbb
cmps
fidivr
push
ins
lods
fiadd
mov
jmp
retf
pushf
popf
pop
dec
mov
test
sbb
jl
xchg
out
test
add
jbe
xor
inc
xor
cmp
jmp
add
xor
cwde
jl
rcl
fcomp
(bad)
dec
adc
xor
shl
stc
enter
mov
rol
movs
or
sub
fnsave
ins
jno
mov
and
mov
pop
adc
mov
clc
cld
out
cs
gs
mov
mov
popa
inc
sbb
shr
adc
punpcklbw
cs
dec
(bad)
cmp
xchg
sbb
and
jl
pop
dec
out
mov
test
xor
sub
out
addr16
sbb
loopne
and
xchg
mov
into
xor
and
test
outs
rcr
data16
cmp
cdq
jmp
jno
cdq
popf
rcl
enter
push
nop
cmp
rol
mov
push
es
movs
or
sbb
jno
sbb
pop
add
add
fnstsw
sub
lods
pop
push
xor
popa
repz
dec
std
jns
scas
data16
add
xchg
leave
fwait
add
jo
cwde
sti
adc
jg
stos
push
mov
mov
(bad)
addr16
pusha
scas
out
mov
cwde
sbb
push
or
sbb
or
mov
add
jmp
mul
sub
in
adc
faddp
jecxz
call
fdiv
lock
test
fcom
mov
out
add
fwait
and
call
movs
dec
(bad)
adc
jb
test
dec
pop
lea
mov
scas
lock
(bad)
mov
mov
mov
hlt
sar
pop
add
pop
cmp
(bad)
jl
push
enter
xchg
pop
cdq
jne
jl
dec
and
add
xchg
jp
add
ja
pop
fs
xchg
add
xchg
iret
scas
cmp
push
push
clc
push
mov
nop
movs
adc
adc
cmp
sub
adc
xchg
inc
xchg
iret
int
mov
and
mov
add
push
out
sub
(bad)
retf
inc
shl
fld
(bad)
pop
inc
je
mov
dec
inc
mov
sbb
aam
mov
cmp
or
movs
push
xchg
data16
shr
dec
movs
cmp
stos
sbb
pop
jno
dec
mov
addr16
push
xor
sbb
shl
xor
dec
mov
nop
std
shl
mov
addr16
add
adc
push
sub
test
adc
inc
cmp
dec
dec
or
xchg
or
jg
icebp
mov
daa
mov
aaa
sbb
test
into
lods
loope
sbb
sbb
ret
cmp
jne
mov
or
cli
int
adc
inc
pushf
sub
xor
mov
clc
mov
adc
retf
enter
jle
lahf
xor
retf
mov
or
pop
xchg
pop
(bad)
pop
rol
dec
out
inc
mov
enter
fucomi
cdq
in
jb
aas
and
xchg
inc
jp
sar
mov
icebp
push
(bad)
pop
outs
cmp
es
push
sahf
xchg
xor
and
cmp
push
cmp
dec
shl
cmp
enter
stc
stos
inc
aas
mov
leave
pop
ja
jle
sub
mov
mov
cli
test
push
int3
retf
jge
add
dec
mov
jl
fucom
sub
nop
sub
lods
sbb
mov
add
das
and
in
into
push
pop
lods
sbb
jnp
std
cwde
jge
mov
push
push
in
fadd
xchg
call
fisubr
dec
mov
aam
dec
adc
sub
(bad)
mov
xchg
mov
mov
push
adc
inc
retf
lahf
call
pop
jo
movs
inc
sub
enter
(bad)
cmp
shl
ins
xlat
mov
loop
mov
(bad)
mov
lock
sub
sar
jno
test
aaa
add
data16
xor
cmp
cmc
jle
dec
mov
mov
out
in
mov
inc
add
jmp
ins
or
lds
jp
rcr
iret
mov
fild
sar
pop
fstp
pop
sbb
in
and
mov
scas
rcl
mov
inc
pop
or
dec
and
(bad)
mov
inc
lahf
cwde
and
and
dec
fistp
xchg
sbb
add
fxch
jl
(bad)
mov
inc
sbb
sub
inc
test
cld
jg
xlat
into
int3
pop
jnp
cmps
sub
mov
imul
and
loopne
push
icebp
xchg
les
aaa
std
cmp
ja
sbb
jns
xchg
dec
dec
leave
push
push
pusha
fidiv
mov
call
dec
cmps
mov
jne
inc
mov
cmp
sub
movs
sub
dec
xchg
cmp
dec
sub
jmp
test
xchg
dec
and
inc
inc
mov
push
mov
stos
ds
(bad)
test
dec
out
sbb
and
cs
dec
xor
or
in
lea
(bad)
jecxz
lds
mov
jnp
and
sub
in
and
(bad)
je
scas
inc
mov
std
mov
and
or
jne
xor
data16
dec
adc
mov
and
scas
jbe
jecxz
loopne
shr
and
imul
xchg
mov
cmps
ins
(bad)
rcr
push
sbb
and
add
cmp
sub
aad
xor
bound
sub
xor
shl
xchg
test
sar
rcr
shr
(bad)
adc
jle
push
push
xor
(bad)
or
push
mov
pop
mov
pop
fnstenv
pop
fld
in
fs
sbb
(bad)
bound
jae
jp
mov
jmp
push
je
jae
mov
in
test
loope
xor
imul
and
push
jns
imul
lahf
out
lahf
sub
xchg
dec
sbb
mov
and
sub
nop
and
test
gs
push
push
xor
xor
jle
jmp
loop
outs
fld
ja
out
sub
pusha
adc
xor
fsubr
jo
or
jns
or
in
ret
mov
push
sbb
add
xlat
add
daa
sub
loope
(bad)
push
and
int
jae
add
and
cmp
jno
or
cwde
fsub
shl
in
sub
inc
mov
shl
pusha
inc
(bad)
dec
outs
xlat
movs
jae
mov
xchg
repnz
sub
imul
fild
add
jge
xchg
js
arpl
outs
push
xor
in
or
ins
loopne
pop
retf
dec
push
mov
jbe
das
dec
adc
mov
gs
xchg
aam
ins
(bad)
fdiv
add
push
jecxz
shl
add
push
cmp
bound
mov
mov
outs
rol
inc
pop
or
stos
pop
cs
retf
jo
mov
imul
aam
add
and
inc
loopne
jp
and
bound
retf
sbb
sub
or
popa
or
enter
inc
jle
test
jmp
or
and
and
movs
xchg
xor
call
pusha
lods
xchg
push
addr16
not
ret
mov
mulpd
movs
cmp
jle
addr16
pop
out
add
int3
mov
mov
mov
jmp
test
in
pop
or
jno
or
leave
mov
stos
pop
inc
xchg
adc
cld
je
or
daa
mov
mov
or
pop
jns
fld
inc
inc
div
or
or
jnp
lods
xor
mov
add
popf
pusha
ror
dec
mov
fwait
idiv
inc
(bad)
jp
(bad)
sub
and
push
lock
add
or
push
pop
es
inc
fwait
push
mov
inc
mov
in
(bad)
cmps
test
sub
pop
inc
out
mov
fimul
dec
jns
repz
cdq
aam
(bad)
cmp
and
mov
iret
inc
jmp
sub
xor
dec
xchg
sub
cmps
adc
or
adc
sbb
jns
xchg
repz
push
outs
push
leave
icebp
sbb
lods
lods
cdq
push
aam
cli
xchg
xchg
xchg
mov
dec
out
and
jl
mov
cmc
jae
push
retf
fst
sub
lock
cmp
push
(bad)
in
inc
mov
lock
je
aam
add
mov
arpl
xlat
movs
xlat
or
mov
xor
nop
pop
imul
movs
jae
scas
pop
loop
lahf
ins
adc
clc
add
mov
mov
jne
cmp
icebp
add
pop
mov
idiv
fld
andps
mov
or
fcomp
movs
cdq
je
mov
scas
test
add
stos
jle
xchg
les
mov
mov
mov
sbb
sbb
ret
pop
cmp
push
in
push
mov
and
jmp
aas
mov
pop
adc
mov
adc
pop
xor
sbb
lar
pop
jae
inc
jg
jg
inc
jnp
popa
xchg
pushf
enter
and
push
cmps
daa
ret
cmp
cmp
jo
mov
sub
loope
cmp
add
jne
sub
mov
cs
mov
inc
sbb
jmp
call
jns
in
sbb
jbe
retf
(bad)
(bad)
popa
test
sbb
sub
pop
ror
(bad)
jmp
jmp
mov
xchg
aas
jo
rol
fcom
in
sub
pop
test
enter
cmp
mov
icebp
(bad)
and
fdiv
leave
jle
aaa
popf
cmp
mov
(bad)
jp
pop
adc
jmp
ins
mov
push
stc
sub
cmp
loopne
ret
jmp
dec
rol
enter
les
pushf
icebp
mov
int
mov
sahf
cmp
inc
stos
mov
sbb
cmp
iret
popf
test
cli
mov
nop
sti
in
je
fdiv
ret
dec
je
sbb
js
mov
mov
and
push
mov
cmp
jb
movs
in
jmp
fwait
mov
add
fcomp
dec
xor
add
(bad)
lock
cmps
mov
test
xchg
jmp
loopne
or
sub
sbb
xchg
lea
rol
cli
or
xchg
in
ja
out
push
xchg
fst
add
mov
hlt
sbb
fwait
cmp
(bad)
mov
dec
xchg
cmc
mov
dec
lds
lds
repz
jle
mov
fcomp
js
repz
jne
dec
lods
ins
stos
mov
loop
pop
aaa
mov
xchg
inc
jp
dec
and
jg
dec
mov
xchg
fist
xchg
ja
sub
adc
ss
adc
pop
int3
xor
addr16
or
adc
xor
xor
stos
movs
xchg
mov
adc
es
mov
cmps
dec
in
xor
jmp
nop
xchg
mov
adc
sub
add
cmp
loopne
push
pop
sub
test
fdiv
lea
popa
hlt
sbb
(bad)
popa
lea
push
mov
cmp
mov
sbb
ror
pop
dec
retf
mov
scas
out
sbb
js
or
and
(bad)
jne
int3
ret
bnd
fstp
or
movs
sbb
mov
stos
mov
scas
jmp
xchg
push
inc
jbe
stos
jp
loop
push
pop
xchg
dec
std
or
pop
add
jmp
cdq
mov
leave
mov
cmp
ret
push
sub
scas
pop
mov
pushf
xchg
adc
sub
outs
test
mov
jae
ja
add
andps
dec
cli
mov
movs
mov
adc
xor
mov
out
retf
or
lds
movs
xchg
pop
cmps
out
pop
cmc
cmp
mov
jb
mov
aaa
repnz
cld
pop
std
outs
lods
mov
add
or
add
xor
fbld
add
iret
popa
sub
or
lock
lock
xchg
sbb
or
cli
retw
je
outs
imul
dec
mov
adc
lods
ror
mov
fmul
pop
push
mov
mov
xchg
sar
cwde
outs
push
mov
aaa
fs
das
movs
lods
sbb
inc
movs
ja
or
js
sahf
push
and
dec
adc
jnp
adc
adc
push
xor
cmp
test
mov
pop
out
dec
fistp
mov
xchg
js
lahf
mov
scas
mov
ins
xchg
inc
in
xchg
cwde
fwait
iret
mov
sub
or
pop
scas
jl
push
outs
mov
xor
pop
cmp
(bad)
in
mov
sub
mov
mov
push
into
jo
sub
inc
mov
out
add
push
fstp
cmp
cdq
fs
div
adc
mov
pop
xchg
outs
bound
out
pop
clc
aad
mov
dec
cld
xor
xor
(bad)
jns
mov
jecxz
clc
in
popf
fmul
in
jns
wbinvd
xchg
inc
adc
xchg
in
sti
or
int3
into
in
pusha
das
shl
sbb
mov
xor
and
push
ins
dec
fwait
inc
pop
arpl
lahf
mov
sar
push
mov
shl
jbe
dec
jmp
aas
lods
mov
fwait
sub
test
inc
fdiv
scas
pop
pop
(bad)
or
push
pop
fld
xchg
xlat
pop
or
and
shr
add
push
xchg
sti
adc
add
jmp
push
xchg
and
ins
es
push
adc
pop
in
push
ret
adc
cmp
in
push
outs
or
cmp
mov
add
(bad)
sub
pop
sub
add
clc
mov
je
jno
fcom
push
in
inc
ins
xor
int3
push
std
cli
push
div
loop
push
nop
arpl
outs
aam
jns
sahf
dec
mov
pop
sbb
mov
mov
xor
test
mov
xor
daa
or
cld
in
xchg
pop
mov
dec
repz
in
inc
dec
xor
mul
adc
adc
not
jg
jae
xor
rol
nop
retf
push
stos
dec
dec
inc
mov
aaa
jbe
pop
addr16
mov
and
cmp
ds
pusha
or
cs
lds
push
and
repnz
shr
push
lods
movs
inc
cmps
aaa
addr16
outs
jecxz
cmc
sbb
push
into
mov
fmul
sti
(bad)
pop
or
jmp
and
inc
es
hlt
std
mov
xchg
inc
int
mov
bnd
inc
test
push
adc
fimul
xchg
test
cld
fcomi
aaa
sub
out
jne
(bad)
jnp
cmp
xchg
dec
mov
cmp
js
out
mov
inc
frstor
xchg
push
rol
imul
adc
sub
mov
xchg
dec
enter
pushf
add
sbb
cmp
dec
cs
fbstp
sub
leave
in
leave
fsub
in
(bad)
shl
cmps
mov
sub
dec
add
pop
add
test
jp
add
nop
sbb
add
push
jmp
jg
scas
cmps
loopne
xor
in
xchg
sub
dec
enter
ss
dec
inc
mov
cwde
push
fist
fdiv
xor
dec
push
cmps
mov
in
(bad)
mov
xchg
and
lock
jmp
fmul
(bad)
push
ror
sbb
repnz
mov
pop
movs
xor
jecxz
das
out
pop
add
nop
jmp
out
loopne
dec
jmp
pop
adc
cmp
pop
clc
dec
or
adc
cmp
fcom
and
inc
repz
pop
lahf
mov
mov
mov
shl
js
lods
ins
mov
daa
adc
fisub
xor
dec
sub
jle
xor
popf
pop
add
mov
ret
sub
mov
push
ins
jbe
sub
sub
ret
and
mov
mov
mov
mov
jbe
and
cs
sahf
add
jne
xor
jno
or
or
dec
shl
push
mov
inc
jno
(bad)
cwde
loop
into
dec
push
jmp
ret
ja
sbb
xor
popf
adc
xor
imul
or
pushf
push
sbb
push
mov
sbb
into
push
int3
outs
fwait
jnp
pop
test
cmp
cwde
xchg
jmp
call
jp
cmp
cmps
retf
mov
cmps
mul
aaa
pusha
mov
sbb
ret
fidiv
cmp
test
ffree
in
add
dec
std
das
test
push
repnz
movs
xchg
pop
cwde
mov
jne
cmp
arpl
lods
and
cmp
add
sub
out
mov
pop
or
or
adc
movs
xchg
gs
or
inc
sub
dec
add
and
mov
inc
rcl
out
xchg
xor
rsm
ror
mov
aad
(bad)
fsubr
retf
out
pop
adc
pop
adc
cmp
inc
dec
push
scas
retf
push
scas
fcomp
(bad)
sub
dec
fs
addr16
push
ud2
bt
fs
jno
lds
push
mov
enter
rcr
dec
xchg
mov
rcr
pop
or
outs
cwde
stos
(bad)
sar
cdq
dec
xchg
bound
jecxz
add
pop
inc
xchg
(bad)
fwait
cmp
aad
imul
add
sti
push
cmovo
jmp
sbb
sahf
xchg
and
pop
xchg
and
aaa
dec
gs
mov
cmp
bound
in
mov
sbb
out
cmp
ret
in
outs
push
and
xor
loope
scas
jl
iret
sti
call
cmc
popa
xchg
in
mov
and
and
cmps
test
(bad)
fwait
mov
hlt
arpl
(bad)
mov
call
adc
push
in
jns
or
jns
xchg
(bad)
jmp
(bad)
lea
ja
das
xchg
sahf
add
lock
ins
popa
out
ds
xchg
cwde
enter
mov
jne
push
add
movs
(bad)
in
push
push
loop
arpl
add
add
lock
adc
cld
retf
pop
fwait
adc
icebp
push
imul
in
jle
xor
jo
movs
ja
jmp
xchg
lods
xchg
fstp
mov
lods
mov
imul
ret
cmp
sub
stc
hlt
adc
sti
cld
lock
sti
fild
push
mov
mov
inc
inc
out
and
bound
fadd
pushf
push
aam
scas
mov
mov
or
and
push
dec
jl
not
xchg
jmp
jmp
xchg
push
call
ins
cld
add
lahf
sub
test
test
(bad)
cli
mov
push
in
pusha
mov
adc
dec
jl
fimul
mov
mov
mov
sub
pop
retf
leave
or
hlt
pop
pop
fwait
adc
pop
mov
lea
mov
sub
mov
daa
enter
xchg
movs
cmp
in
lea
sub
and
sub
sbb
nop
dec
xlat
add
mov
xor
mov
mov
test
lock
jbe
inc
cs
retf
imul
outs
jne
adc
push
sbb
pop
or
adc
mov
xchg
xchg
arpl
sbb
fild
lock
lods
jmp
dec
pop
ret
inc
popa
sbb
test
daa
shl
adc
sar
pop
in
cmps
test
push
mov
dec
jns
loope
sub
out
dec
jecxz
push
push
and
xchg
hlt
sub
jle
mov
int3
xchg
jno
ss
cmp
cli
or
mov
jo
jbe
lahf
add
cmp
push
jo
mov
mov
cmp
xchg
ins
gs
or
push
jmp
jp
lock
pusha
call
loopne
arpl
mov
loopne
leave
pop
jb
inc
xor
mov
leave
mov
jle
out
xor
lods
xchg
fstp
(bad)
xchg
add
sbb
imul
sub
xor
test
push
into
adc
xor
mov
mov
mov
push
xchg
jne
push
jge
sub
cs
inc
push
popf
or
mov
outs
pop
jp
adc
mov
inc
ret
jo
mov
xchg
add
pushf
inc
fwait
push
cmps
add
stos
mov
mov
mov
psrad
or
nop
push
push
xchg
pushf
les
xchg
add
mov
int
int
pop
jae
or
jns
jae
call
loop
add
xor
dec
ins
fnstcw
clc
mov
dec
mov
xchg
or
(bad)
ret
inc
test
dec
dec
sbb
dec
inc
out
adc
aam
jl
sbb
int
pop
arpl
pop
xlat
xchg
sbb
mov
jb
(bad)
retf
xor
dec
xchg
adc
pop
inc
cmp
cmp
xor
arpl
jbe
iret
push
gs
sub
push
je
jmp
add
dec
push
push
lock
add
or
dec
push
inc
loope
retf
jmp
jae
and
sti
cmp
mov
(bad)
jo
dec
inc
hlt
je
or
lds
adc
sbb
cmp
andnps
pop
std
mov
arpl
cmp
loopne
jo
xor
and
dec
push
jne
pop
or
pop
(bad)
lds
sub
push
jae
shl
ss
retf
jg
sbb
xchg
cwde
lock
cmp
or
shl
daa
fiadd
pushf
sbb
ins
push
and
ja
mov
fisubr
xchg
xor
jo
add
sbb
loop
imul
pop
mov
inc
scas
mov
cli
jmp
ret
sahf
cmps
loop
mov
mov
lock
call
and
push
pop
pop
cmp
sub
push
cmp
cmp
push
les
push
adc
pop
enter
bound
mov
movs
push
aas
pop
pop
jne
mov
cwde
loope
das
cmp
add
jnp
mov
seto
xor
int3
hlt
xchg
popa
sbb
or
lods
mov
mov
jno
xor
jno
mov
outs
cmp
movs
xchg
pop
int
(bad)
fwait
ret
xchg
ins
call
inc
or
mov
mov
sub
or
test
sub
xchg
loope
pop
fstp
(bad)
(bad)
in
jae
sub
es
sub
mov
dec
jg
loope
not
push
shl
push
inc
ja
push
scas
add
out
pop
stc
or
idiv
loopne
loope
frndint
inc
push
pcmpeqd
push
push
ds
pushf
xchg
or
je
ret
loope
cmp
jo
jecxz
push
jo
test
int
ret
lock
mov
pop
test
jecxz
or
push
xchg
(bad)
into
data16
dec
lods
pop
mov
out
(bad)
out
daa
mov
push
xor
in
add
loope
scas
lods
adc
popf
mov
xchg
and
in
inc
ss
mov
iret
mov
in
xchg
inc
dec
hlt
xchg
add
or
stos
enter
hlt
adc
out
jg
test
(bad)
retf
repz
inc
rcr
retf
xor
call
cwde
dec
(bad)
sub
rcr
sub
mov
push
ds
add
inc
fistp
icebp
pop
xlat
push
add
cs
jbe
imul
hlt
xor
xor
cld
mov
loopne
cdq
addr16
xchg
xchg
(bad)
(bad)
jl
and
mov
fldenv
ds
mov
shr
pop
pop
mov
out
mov
in
mov
cmp
dec
pop
pop
xchg
pushf
retf
jnp
dec
imul
pop
cmp
and
std
cmp
mov
gs
inc
mov
lds
in
pushf
xor
and
add
fisub
mov
adc
inc
dec
xchg
jo
mov
pop
pushf
xor
aaa
cmp
inc
lods
(bad)
dec
xor
cmp
fcomp
xlat
cmp
out
cpuid
es
add
enter
scas
cmc
dec
xchg
xchg
jbe
int3
cmp
sub
outs
jg
mov
retf
cdq
xor
xor
imul
sbb
adc
hlt
xchg
mov
call
pop
pop
pop
sub
test
mov
xor
xor
inc
adc
loope
pop
xchg
or
int3
jge
dec
dec
rcl
cs
outs
add
call
test
and
call
icebp
mov
cmp
movs
and
scas
jge
mov
ins
ins
shl
jns
das
stos
jmp
hlt
or
adc
and
(bad)
mov
adc
les
mov
fucom
xor
adc
push
(bad)
pop
dec
adc
fistp
push
adc
retf
inc
mov
add
mov
jg
mov
ja
xchg
in
jmp
cli
int
das
add
adc
outs
xchg
outs
inc
enter
dec
mov
jg
add
aam
lods
or
ds
(bad)
push
push
mov
pop
xchg
xchg
and
mov
pop
in
cmp
xchg
jmp
jmp
push
push
fwait
or
cli
gs
mov
cs
mov
jb
inc
mov
push
les
(bad)
push
aad
dec
mov
mov
xchg
call
sbb
dec
retf
test
call
push
sub
sub
aas
add
push
push
inc
push
cmp
dec
nop
repnz
xor
aas
call
loope
mov
clc
cli
ret
stc
std
or
mov
sbb
adc
ss
mov
fadd
push
adc
out
add
xor
addr16
fst
push
adc
xchg
aas
mov
aaa
sbb
pop
xchg
adc
fwait
or
pop
les
jne
adc
in
add
pop
mov
push
adc
fst
and
or
xor
data16
aaa
jecxz
dec
aam
out
xor
xchg
xor
rol
dec
cmp
fmul
jns
fwait
je
xor
cmc
fwait
stc
cmps
movs
pop
adc
div
xchg
pusha
into
or
cs
mov
fsub
bound
(bad)
loop
ja
add
enter
sbb
mov
xor
add
sti
ror
xor
pusha
pop
lods
mov
push
ins
ror
or
je
add
xchg
push
fsub
adc
call
icebp
hlt
pop
das
mov
mov
sub
mov
retf
mov
sbb
nop
pop
(bad)
retf
lods
lock
push
loop
pop
je
pop
into
cmps
cmps
adc
cmps
and
retf
mov
(bad)
fbld
cmps
add
adc
imul
loop
push
loope
(bad)
(bad)
jl
aas
jp
scas
pop
cmp
push
outs
(bad)
ins
out
jns
movs
pop
sbb
loopne
dec
add
inc
sbb
test
dec
mov
cmp
mov
dec
push
(bad)
std
in
inc
ja
push
(bad)
(bad)
jo
retf
jo
xchg
les
in
jmp
dec
push
mov
gs
mov
icebp
or
cld
pop
cmc
jle
jno
sbb
loopne
arpl
or
cdq
xchg
push
push
jmp
movs
xor
dec
data16
push
je
ins
shl
fimul
inc
loopne
mov
into
pop
dec
push
sub
adc
ins
pop
adc
mov
pushf
inc
cld
icebp
test
xchg
out
add
xor
out
ror
repnz
add
fdiv
(bad)
push
loope
push
xor
push
neg
call
arpl
sbb
and
stos
push
xchg
jg
int
or
xchg
dec
in
nop
xchg
xchg
out
mov
inc
push
jge
aas
inc
iret
popa
js
cmc
ins
aam
sub
shl
mov
mov
cmp
lds
shl
adc
repnz
push
loope
push
push
jle
aad
mov
fisttp
xor
cmps
cdq
in
mov
test
int
les
popf
out
leave
inc
stos
adc
cs
adc
jmp
aaa
ins
in
daa
test
xor
add
or
shl
mov
push
push
imul
mov
pop
inc
retf
movs
arpl
mov
add
les
mov
push
aam
mov
sti
(bad)
and
sbb
fdivr
adc
lods
(bad)
jno
mov
cmp
aaa
sub
adc
nop
stos
and
mov
cli
push
xchg
mov
arpl
dec
push
dec
test
in
cmps
pavgw
leave
aas
push
dec
into
xchg
out
push
mul
(bad)
popa
leave
or
xchg
(bad)
js
xchg
mov
adc
push
sar
pop
pop
push
lods
jecxz
mov
push
out
out
cmc
pop
mov
ja
sub
popa
cld
movs
or
cmp
int
pop
mov
pop
adc
aam
inc
stos
pusha
or
push
pusha
daa
(bad)
xor
dec
clc
popf
dec
and
mov
ins
push
add
push
shl
add
cwde
mov
sti
loop
mov
cmp
cmps
popa
xchg
movs
jg
retf
push
mov
ds
push
push
push
xchg
or
out
inc
daa
or
fnstsw
sub
les
dec
adc
or
movs
adc
xchg
inc
mov
call
popf
shl
aaa
into
jns
icebp
inc
sbb
in
adc
lea
inc
inc
inc
and
into
mov
mov
dec
int3
or
mov
aaa
xor
shl
and
xor
xor
adc
inc
imul
mov
ret
dec
shl
pop
mov
mov
sbb
jbe
xor
push
xchg
mov
je
cmp
out
lock
xor
mov
int3
adc
pop
fdivr
push
mov
pop
inc
and
jae
mov
aam
imul
aaa
lea
mov
jno
xor
stc
push
push
mov
lock
jbe
xchg
rcl
add
push
data16
xor
stc
push
jecxz
xor
jmp
jmp
pop
daa
into
sub
xchg
xor
cmp
scas
dec
call
push
xor
add
sub
mul
sub
clc
adc
lods
pop
mov
add
popa
jge
shr
ins
sahf
(bad)
fisttp
dec
sub
sub
pop
inc
xor
cmp
cs
pop
pop
mov
xor
pop
movs
cmps
dec
loop
push
jo
iret
inc
inc
shr
add
ins
es
and
gs
pop
dec
mov
sub
retf
cli
neg
mov
and
rcl
add
out
push
or
pop
add
mov
loopne
cmp
movs
add
cdq
aam
lods
xlat
push
add
or
sbb
or
lahf
pop
into
push
dec
hlt
sbb
lahf
mov
clc
icebp
jns
push
push
mov
sbb
jp
push
cdq
scas
(bad)
xchg
shl
mul
pop
cli
adc
test
jmp
adc
pop
rcr
or
inc
enter
mov
iret
sahf
sbb
arpl
push
dec
out
cwde
icebp
mov
mov
xor
push
add
mov
out
mov
inc
dec
ret
(bad)
sbb
int
std
pop
cmp
cmp
inc
test
add
stos
jmp
sbb
stc
in
or
xor
or
cmp
dec
pop
pop
mov
data16
loope
jl
repnz
or
xchg
fwait
pushf
pop
cmps
mov
and
inc
pop
inc
dec
sub
in
mov
or
jmp
pop
xchg
mov
inc
and
adc
cmp
out
jmp
js
jge
out
xchg
ja
sub
fsubr
lods
xchg
jp
(bad)
repnz
mov
inc
cld
dec
rcr
pop
push
jb
dec
mov
or
int3
add
jnp
sbb
mov
or
dec
dec
imul
in
and
je
dec
stos
push
add
jmp
iret
ror
mov
scas
pop
std
test
inc
je
xchg
xchg
cmp
jno
push
mov
std
jmp
mov
adc
in
rcr
mov
cli
es
dec
retf
jb
mov
js
call
fstp
xchg
pop
sbb
and
test
enter
retf
sub
inc
scas
int3
test
adc
sbb
xor
addr16
mov
push
mov
xor
div
add
fisubr
imul
fst
pop
stos
cmp
jmp
sbb
xor
hlt
in
fsubr
arpl
out
push
mov
out
jmp
popf
imul
inc
mov
sbb
inc
setp
pop
sub
and
xor
ins
out
fadd
pop
pop
inc
or
sbb
adc
into
aam
cwde
test
lock
test
stc
xchg
add
xor
add
stos
fild
out
push
std
mov
cdq
(bad)
mov
out
dec
out
call
ror
adc
repz
and
(bad)
in
ins
xlat
pop
mov
out
inc
inc
sub
jne
sbb
imul
outs
xchg
arpl
mov
mov
sub
mov
mov
jecxz
in
xchg
ins
push
jecxz
jmp
loop
mov
dec
jle
out
mov
add
aam
pop
inc
push
push
pop
mov
add
push
(bad)
or
in
dec
test
cmp
mov
cmp
rcl
and
fstp
aaa
cs
sbb
xor
inc
add
cmp
mov
out
pop
test
inc
aad
or
mov
int
test
sub
mov
pop
cmp
sbb
fwait
ret
mov
loopne
sub
sar
cs
pandn
pop
sub
scas
push
xor
cmps
clc
jnp
ins
out
mul
cdq
push
adc
jne
inc
sub
or
adc
stos
xchg
cmp
xor
mov
xchg
and
(bad)
inc
xor
popf
xchg
popf
mov
cmp
add
push
aas
ja
xlat
(bad)
sbb
outs
inc
sbb
clc
out
loopne
mov
retf
fsub
mov
retf
jne
fisttp
inc
push
mov
into
xchg
popa
sub
xor
and
mov
aas
in
pop
ja
inc
jmp
rol
cli
mov
mov
sti
cmp
(bad)
push
mov
leave
mov
cmp
imul
std
sub
inc
dec
jge
je
push
aaa
das
mov
jge
sbb
mov
xchg
in
aas
cmp
xchg
das
adc
inc
xor
mov
cli
mov
iret
dec
sub
jne
pushf
sbb
mov
or
rcr
popa
stc
xor
adc
dec
in
cmps
in
daa
push
arpl
movs
jecxz
and
test
sar
mov
adc
mov
(bad)
xchg
fstp
sub
jmp
xchg
mov
cmps
retf
pushf
mov
cmp
aad
mov
dec
lahf
jo
stos
mov
in
mov
xor
loope
loop
repnz
int3
xchg
pop
je
mov
push
adc
sub
popa
jbe
movsx
rcl
lods
push
das
xchg
gs
xor
adc
jle
addr16
xor
sbb
xor
stos
in
sbb
sub
sbb
adc
std
aam
cmp
or
xchg
scas
and
repz
shl
mov
fldenv
push
enter
pop
xchg
repz
daa
mov
addr16
and
aam
enter
dec
inc
lea
cwde
inc
add
(bad)
arpl
dec
aas
jne
mov
nop
pop
and
push
and
neg
frstor
retf
in
jle
inc
dec
xor
and
aad
mov
stos
cmps
stc
aam
mov
aad
cmp
or
movs
inc
aam
pop
xchg
mov
stos
(bad)
cmp
std
dec
and
jl
mov
jmp
mov
dec
and
(bad)
out
cmps
pop
xchg
cmp
pop
int
add
daa
cdq
push
call
or
les
xchg
dec
inc
xchg
sbb
shl
inc
ins
inc
(bad)
mov
popf
mov
jp
jmp
dec
ret
jae
call
jle
out
sbb
pop
fild
icebp
dec
mov
rcl
push
in
jne
xchg
sub
jle
mov
push
addr16
sub
ret
ss
sub
ins
test
jp
dec
xchg
pop
sti
push
xchg
aad
sub
dec
test
xor
mov
test
jns
lods
cbw
test
and
pop
imul
fst
push
(bad)
jne
xchg
xor
stc
call
bound
and
sbb
sbb
sub
inc
cmp
cmp
cli
mov
adc
xchg
jno
cmp
and
mov
fcos
mov
or
push
cmp
mov
dec
pop
hlt
push
xor
int
fcos
push
bound
(bad)
add
add
cdq
xor
push
mov
mov
jmp
dec
cmp
call
jo
cmp
cmp
outs
pop
adc
or
mov
jmp
retf
dec
add
xor
mov
lods
jae
daa
ret
(bad)
mul
xor
fstp
pop
pop
cli
jns
(bad)
xor
cmp
lock
adc
xchg
pop
pop
jo
inc
dec
pop
stos
mov
sahf
adc
sub
sub
xchg
cmp
loope
mov
pusha
push
fcom
ror
imul
mov
and
aaa
xchg
and
ins
inc
out
mov
(bad)
dec
mov
in
push
(bad)
sti
js
adc
sub
out
mov
add
mov
pop
cs
(bad)
hlt
jne
idiv
pop
adc
nop
mov
sbb
fcmovnu
pop
test
fist
repz
sub
std
jb
das
je
enter
jge
das
mov
sbb
sub
aas
fwait
dec
sahf
push
jge
mov
mov
push
inc
dec
int3
adc
pusha
icebp
stos
dec
lahf
ja
sbb
mov
jmp
push
cmp
xchg
cdq
mov
pop
inc
inc
adc
loopne
xor
xchg
inc
in
sub
loope
repnz
sbb
call
add
push
mov
pushf
xchg
call
aas
mul
dec
and
pop
pop
outs
in
mov
in
mov
push
and
pop
pop
stc
repz
inc
adc
or
(bad)
pop
jg
retf
scas
sti
mov
imul
mov
jl
mov
adc
mov
call
cmc
loopne
adc
ins
push
pushf
inc
xor
inc
xchg
pop
jge
(bad)
lahf
stc
js
icebp
out
push
outs
sub
xchg
mov
xor
loope
add
dec
stos
cmp
xor
xchg
push
(bad)
pop
lods
inc
les
xchg
fisub
arpl
push
icebp
xor
sbb
and
sbb
jg
xchg
push
lock
fwait
lds
sbb
mov
fpatan
push
and
push
jp
cdq
pop
adc
shr
jmp
cmps
ins
dec
pop
push
sbb
cli
retf
sub
push
outs
ror
loopne
adc
lds
mov
push
fs
dec
icebp
movs
push
ret
sbb
lahf
xchg
(bad)
push
xchg
mov
mov
ins
sub
cmp
gs
push
jb
retf
cmp
jb
stos
jae
movs
mov
stc
pop
scas
jns
push
mov
mov
nop
jg
sti
daa
int
ja
xor
retf
mov
adc
jnp
inc
into
mov
add
or
popf
out
retf
test
ds
add
jo
icebp
test
mov
addr16
push
dec
dec
ret
or
dec
das
dec
cmps
mov
sbb
add
fbstp
ds
jecxz
in
ins
(bad)
xchg
jle
(bad)
adc
loope
xor
mov
jae
(bad)
pop
or
movs
leave
push
push
and
call
cwde
sahf
jb
jo
pop
jmp
mov
gs
jle
lds
mov
and
lds
mov
or
ror
inc
retf
xlat
addr16
mov
ss
outs
cmp
repnz
pop
dec
lds
add
add
sub
nop
fidivr
sbb
enter
stos
jmp
movs
je
ds
cwde
and
push
adc
sti
push
or
pop
push
daa
inc
adc
scas
cmps
int
(bad)
jmp
dec
jb
add
clc
iret
and
test
cs
int3
das
dec
call
lahf
xlat
xlat
add
cwde
sbb
jge
addr16
xor
scas
shl
fsub
cmps
jmp
xchg
mov
xchg
jbe
stos
dec
stos
sbb
std
mov
pop
add
movs
xchg
push
cmp
ret
push
leave
push
dec
cli
fcmovbe
push
dec
mov
xor
out
in
lds
nop
inc
sub
mov
inc
pop
cmps
add
and
push
paddusw
dec
pop
xchg
js
push
inc
clc
imul
js
jb
cmp
pop
lahf
push
rcl
gs
out
enter
mov
adc
mov
std
mov
pop
data16
loopne
mov
stos
inc
xchg
adc
sub
ins
cmp
jl
add
jp
sub
repnz
dec
cdq
or
jb
test
rcl
mov
adc
popa
jg
mov
imul
inc
loope
sar
stos
xchg
repz
mov
fimul
mov
and
js
lea
shl
cmps
push
shr
popf
arpl
push
mov
aas
test
pop
js
adc
fistp
enter
jge
bound
mov
aam
fisttp
test
dec
push
push
pop
sub
mov
xor
add
adc
sbb
push
setb
adc
call
out
sar
adc
jecxz
mov
stc
and
mov
enter
not
add
inc
mov
inc
pop
xchg
dec
fwait
data16
out
and
loopne
dec
cli
cmp
aaa
(bad)
jnp
in
mov
pop
mov
std
xchg
cwde
push
mov
inc
mov
popf
lds
add
ja
icebp
mov
jne
inc
sub
xchg
sbb
addr16
or
xor
jmp
pop
and
xlat
loopne
mov
retf
pop
loope
scas
rcl
mov
outs
mul
adc
sbb
push
daa
scas
push
jno
icebp
mov
cld
add
dec
mov
push
push
sbb
int
shl
lahf
ds
imul
push
sub
(bad)
cmp
jecxz
jge
pop
in
in
lds
add
sub
dec
jmp
or
maxps
enter
xchg
pop
dec
out
push
push
or
dec
aaa
pop
lock
pop
popf
xchg
fs
call
cld
int3
push
mov
fmul
jecxz
xor
retf
sub
sahf
je
ins
iret
jne
enter
push
jo
mov
cli
das
(bad)
into
jecxz
cli
jmp
xchg
cmp
mov
popf
add
cmp
int3
or
fcomi
scas
aad
sub
(bad)
xor
enter
(bad)
and
ins
push
or
mov
dec
sbb
loop
sar
lahf
jb
shl
inc
dec
into
xlat
xlat
dec
addr16
pushf
imul
pop
(bad)
std
imul
push
fmul
jmp
mov
out
ds
vpextrw
lds
and
sbb
cwde
jo
fwait
xor
gs
mov
fwait
xor
mov
or
scas
xchg
int
add
aaa
dec
fadd
out
cmp
push
dec
clc
popf
sar
mov
mov
out
sub
sub
xor
mov
jge
inc
or
mov
mov
mov
es
ror
pop
addr16
mov
mov
pusha
adc
aas
push
jge
sub
and
ds
push
lods
pop
sub
sbb
cmp
mov
adc
or
mov
or
and
cld
ins
test
enter
cmp
mov
(bad)
shl
fadd
mov
sub
xchg
aas
bndstx
xchg
int3
mov
(bad)
inc
(bad)
cld
retf
push
jo
aaa
xlat
xchg
push
mov
jmp
daa
sbb
nop
xor
aam
sbb
fdivr
or
imul
push
sbb
cmps
mov
dec
sub
pop
inc
and
cli
jg
repz
cmps
mov
push
jne
mov
inc
fbld
es
shl
jne
dec
sub
lods
mov
jmp
add
fadd
sub
jne
lahf
pop
scas
dec
jo
pop
sti
iret
push
push
outs
jne
and
mov
lock
xchg
push
test
jb
lock
dec
add
sbb
push
test
sub
push
scas
fcomp
mov
popa
aaa
or
xchg
inc
leave
pop
add
inc
pushf
repz
jg
fs
cmp
and
jb
addr16
push
inc
dec
mov
add
sar
fistp
lods
hlt
dec
popa
call
(bad)
movs
nop
faddp
enter
stos
adc
iret
imul
rcl
cmp
movs
inc
lods
loope
stc
gs
sahf
inc
stos
adc
inc
repz
ds
jo
cli
push
jbe
outs
aam
in
aas
inc
or
inc
cdq
jbe
dec
(bad)
aam
jge
data16
ins
or
inc
xchg
call
push
add
ja
mov
inc
iret
scas
mov
pop
xor
les
xchg
in
rcl
cmps
inc
movs
jns
xchg
xor
push
iret
les
xchg
add
cli
popa
nop
push
repz
push
inc
inc
cli
sub
leave
dec
rcl
movs
xchg
ret
daa
mov
stos
sbb
loopne
int
test
icebp
retf
arpl
mov
mov
sbb
push
ret
ror
mov
mov
push
push
mov
cmp
dec
cli
xor
aaa
stos
xchg
ret
ja
mov
fcom
mov
test
mov
or
nop
test
je
mov
gs
(bad)
enter
sub
fmul
jmp
and
sub
addr16
xor
(bad)
jmp
mov
xchg
adc
fcomp
adc
sbb
fidiv
ins
jmp
test
xchg
sub
mov
aas
add
sbb
(bad)
not
iret
scas
sub
out
aam
push
add
popa
push
jge
adc
xchg
sub
stos
push
ins
or
add
das
(bad)
xor
sbb
add
int
cmp
pop
xchg
xor
in
ins
fsubr
xchg
ins
leave
hlt
inc
xchg
adc
inc
in
sbb
and
ret
retf
test
fldenv
ret
adc
xchg
or
fcmovb
jb
push
movs
xlat
(bad)
mov
pop
popa
js
mov
cmp
inc
push
xor
in
loopne
sti
sbb
mov
cmp
xor
or
mov
xchg
daa
push
pop
inc
sub
cmp
fstp
pop
jae
inc
lds
outs
test
repz
jg
mov
mov
shl
movs
test
add
fwait
or
data16
inc
test
data16
push
adc
and
cld
jecxz
mov
push
dec
stos
cmp
pusha
xchg
inc
lods
pop
hlt
fs
add
outs
shr
and
pop
xor
pop
xor
lea
js
cmps
or
mov
cmc
test
sub
test
jg
pop
mov
and
add
stos
enter
ja
arpl
pop
push
adc
push
add
sub
cmp
lods
sbb
gs
jl
jge
aas
inc
ins
and
push
cmps
dec
inc
fs
les
ds
dec
push
cmp
jecxz
in
pop
push
lock
out
lds
inc
ins
in
pop
add
push
ficomp
test
pop
je
push
xor
add
aad
(bad)
fadd
push
cmp
adc
lock
add
data16
jne
adc
dec
(bad)
fs
jb
xchg
cmp
jmp
idiv
add
lods
and
stos
jecxz
out
icebp
cmc
(bad)
sub
jnp
mov
sti
sub
lods
push
aas
loop
retf
int3
shr
add
mov
jge
out
inc
cmps
pushf
xor
adc
imul
adc
movs
push
fwait
popf
push
push
sbb
jns
add
jmp
mov
int
sub
pop
push
add
(bad)
add
(bad)
mov
and
mov
xchg
push
mov
call
cwde
pop
shr
rol
cli
mov
dec
iret
sahf
cmp
mov
retf
fild
fmul
(bad)
scas
call
sub
(bad)
pop
cmc
adc
pop
add
inc
aad
shr
push
div
dec
lods
sbb
std
adc
les
loopne
pcmpeqb
pop
cdq
cli
xor
in
aam
bound
rcl
sti
push
mov
movs
push
dec
jnp
(bad)
outs
jmp
out
dec
jae
fwait
stos
stos
pop
xor
pop
les
(bad)
mov
mov
mov
gs
loope
or
leave
sbb
in
mov
call
mov
xchg
pop
push
inc
jl
das
out
aam
mov
xor
push
xor
test
enter
mov
pushf
(bad)
pop
scas
sbb
dec
mov
sub
bnd
jae
int3
ins
movs
jae
pop
jne
mov
sub
repnz
mov
shr
mov
into
xchg
add
lods
addr16
push
push
sbb
cli
and
loop
inc
dec
inc
pop
jg
push
xchg
xor
sbb
add
xchg
ins
inc
add
fmul
outs
test
cmc
jae
inc
mul
jmp
adc
push
adc
cmp
test
into
popa
ds
adc
ror
test
in
repz
repz
cwde
test
lds
jne
sbb
pop
dec
cdq
add
inc
sub
xor
mov
sti
packsswb
push
test
out
jmp
lock
mov
dec
mul
jmp
push
mov
push
dec
or
enter
xor
(bad)
out
xor
data16
pop
mov
mov
xor
sbb
aaa
jns
or
add
mov
jmp
cmp
out
sub
je
mov
cmp
mov
inc
loop
out
les
push
(bad)
out
test
(bad)
loopne
push
ror
mov
adc
sti
push
mov
test
xchg
dec
loopne
std
shl
mov
and
fmul
aaa
push
frstor
out
aas
outs
leave
push
fdivr
mov
xor
or
movs
cs
stos
dec
mov
xlat
shr
xchg
daa
sub
cmps
nop
mov
push
jg
mov
call
push
jle
out
adc
pop
(bad)
pop
outs
rcr
push
mov
int3
int
sbb
or
push
(bad)
in
jnp
inc
dec
imul
(bad)
adc
in
out
dec
mov
or
stos
cmp
adc
call
xchg
adc
adc
enter
iret
and
inc
dec
mov
jno
setae
mov
mov
adc
popa
add
cmp
jnp
xor
and
lods
dec
xor
data16
cmps
push
inc
adc
cmp
mov
xlat
pushf
cmc
dec
(bad)
jb
nop
add
int
pop
or
pop
cld
push
push
jne
inc
test
adc
test
cmps
bound
sbb
sbb
outs
imul
arpl
push
pusha
sub
js
jg
(bad)
ins
test
dec
aad
dec
les
add
lea
dec
mov
push
sbb
xchg
mov
xor
sbb
jne
dec
rcr
pusha
js
repz
mov
movs
sub
rcr
ins
sbb
sbb
xchg
inc
xchg
popa
xchg
jmp
pop
daa
int3
jge
sub
movs
pop
arpl
or
pop
sub
pop
cmc
push
pop
pop
pop
xor
xor
sahf
mov
pop
xor
scas
(bad)
loope
xor
and
in
les
cmps
retf
dec
add
lods
cmp
mov
les
sub
push
xchg
jmp
stos
xchg
ret
add
push
mov
pop
movs
mov
rcr
push
sub
mov
pop
cld
cdq
fwait
push
addr16
pop
ins
pop
cmp
sbb
push
fnstcw
ds
mov
dec
add
pop
cmp
jmp
cld
or
add
push
jns
out
mov
sbb
push
add
adc
das
mov
xchg
or
shl
std
call
cmc
rcl
movaps
pop
xlat
mov
add
ja
(bad)
mov
fs
loopne
lods
push
dec
inc
mov
sar
cmp
mov
ret
jb
retf
mov
jb
xchg
mov
sar
adc
xchg
mov
std
xchg
and
jb
mov
xchg
ins
stos
cmp
dec
push
in
pop
fmul
lods
scas
adc
cli
pop
jb
into
ja
adc
lea
and
frstor
jl
add
popa
push
outs
add
xor
(bad)
adc
ss
ins
enter
and
aad
pusha
mov
add
and
cs
popf
add
mov
imul
outs
cmc
mov
jb
sar
fs
stos
lock
ins
add
sbb
fcomp
(bad)
xor
add
cld
jae
(bad)
repz
cmc
inc
in
mov
cmps
mov
loop
cmp
imul
sbb
push
scas
jb
push
test
test
retf
or
imul
pop
daa
pop
inc
sbb
jne
and
call
pushf
loop
ja
das
or
cld
jno
pop
jmp
push
(bad)
jecxz
out
pop
rol
add
mov
nop
loopne
xchg
inc
sub
aas
ror
sbb
add
shr
jb
in
out
inc
movs
push
retf
inc
(bad)
jl
cmc
xlat
and
or
call
retf
push
xchg
iret
jl
push
sbb
adc
out
add
data16
jl
mov
mov
fisubr
push
(bad)
sub
mov
or
inc
movs
dec
cmps
fld
je
popa
ins
jg
fcmovnu
xchg
add
test
adc
js
imul
lods
test
mov
fisub
sbb
push
ins
xchg
mov
retf
sti
push
sbb
and
shr
out
ror
cmps
mov
in
call
das
(bad)
fild
pop
dec
xchg
adc
sbb
add
push
push
(bad)
sub
repz
cmp
pop
inc
dec
outs
mov
and
mov
int
jmp
adc
xchg
mov
sub
sbb
dec
adc
inc
pop
adc
cmc
jmp
pop
push
lds
xchg
out
xchg
iret
loope
sub
sub
int
test
push
pop
jmp
cmp
call
cmp
mov
or
cmp
(bad)
cmp
cmp
pop
xchg
and
daa
inc
iret
jb
addr16
cmp
or
aaa
in
pop
rcr
or
ja
(bad)
cmc
not
fiadd
jbe
mov
test
add
dec
daa
pop
loope
in
adc
inc
jno
ja
push
mov
adc
ds
movs
ret
mov
jl
out
leave
out
je
jle
loopne
test
adc
loope
sbb
cld
push
shr
dec
ds
ret
mov
movs
cmp
data16
inc
pop
pop
add
mov
pop
push
daa
hlt
in
add
int
inc
mov
scas
mov
xlat
scas
scas
jo
push
push
aad
pop
pop
mov
adc
sbb
push
in
imul
inc
pop
pop
jle
popa
icebp
dec
xor
das
xchg
sahf
iret
sbb
xchg
and
stc
sub
sti
retf
in
cmps
sbb
jo
lods
mov
(bad)
jmp
push
stos
div
cdq
mov
stos
std
fstp
rol
push
(bad)
jmp
inc
test
jne
int
mov
xlat
xchg
pop
sub
pop
les
mov
movs
cld
movs
retf
movs
mov
test
and
das
ror
lahf
xchg
xchg
push
lods
lock
call
test
xchg
adc
jb
pop
rcl
les
cli
xchg
pushf
sbb
inc
dec
fnstcw
dec
movs
adc
ds
fisub
scas
pushf
xchg
mov
sbb
mov
sbb
sbb
add
jmp
scas
adc
push
or
add
lock
mov
or
fisttp
push
fmul
inc
cld
mov
call
pushw
xor
les
add
outs
stos
das
in
out
shl
sbb
push
mov
lods
pop
daa
mov
inc
loope
add
mov
fidivr
push
jmp
fimul
adc
fwait
jo
and
jmp
dec
push
mov
inc
pusha
or
stc
jecxz
mov
stos
push
sbb
repnz
cmc
push
aaa
jno
aam
lahf
add
jae
outs
lods
xchg
pop
ins
and
fadd
mov
pop
cmc
pusha
fdiv
je
in
lock
push
jle
aam
ret
stc
or
or
repz
scas
loop
sbb
mov
(bad)
fadd
mov
(bad)
pushf
push
or
or
int3
in
xchg
rcl
and
loopne
push
mov
dec
arpl
in
sti
sti
out
out
dec
mov
in
mov
sub
cmc
pop
rol
not
lea
jmp
nop
cmp
lods
cli
call
jle
xchg
mov
jnp
mov
cmp
push
pop
pop
popa
sub
inc
add
inc
ja
cmp
jecxz
cmp
mov
sub
mov
xor
aas
mov
ret
pop
lahf
fadd
sbb
or
push
and
inc
test
push
adc
paddb
and
and
rol
daa
jae
or
cs
(bad)
push
pop
adc
out
pop
or
push
fiadd
sbb
jb
xor
or
repnz
jbe
fbld
mov
cmp
jmp
fisttp
test
inc
and
adc
das
nop
test
and
fmulp
mov
ret
lods
or
inc
mov
pop
mov
rcr
retf
int3
push
imul
mov
scas
sub
xor
fwait
pusha
call
sub
mov
xor
add
jl
adc
adc
imul
lods
in
call
ins
xor
fcomp
les
or
outs
mov
lds
sub
mov
pop
popf
outs
xchg
or
int3
sub
xlat
pushf
cmp
(bad)
addr16
cmp
jmp
fdiv
mov
dec
leave
sti
into
or
mov
xchg
inc
jno
or
jecxz
fdivr
imul
fst
int3
dec
pop
fs
inc
adc
jmp
inc
mov
lahf
jne
adc
repnz
jns
sar
outs
jmp
inc
mov
cmp
mov
data16
pop
test
dec
sbb
xchg
push
fnstenv
fistp
cmps
sbb
retf
mov
add
dec
sbb
lahf
imul
pop
lods
xor
jne
lock
lds
pop
(bad)
pop
xor
mov
mov
lods
je
imul
stos
cmp
lahf
outs
(bad)
ss
jno
sahf
mov
mov
inc
or
pusha
ror
cmp
xchg
cmc
push
mov
mov
mov
xchg
xchg
imul
sbb
pop
(bad)
clc
scas
mov
mov
fucom
mov
iret
inc
movs
rol
xchg
or
pop
jnp
into
stos
push
js
and
fptan
repz
and
mov
add
pop
test
jecxz
sub
daa
push
pop
lea
jge
hlt
sbb
xor
es
cmp
in
jae
retf
xor
fcomp
scas
push
inc
inc
pusha
mov
pop
jmp
push
les
rol
pop
loop
and
mov
sub
inc
outs
dec
stos
push
sub
mov
pop
jle
jl
mov
or
add
dec
cli
stos
inc
xor
add
nop
xchg
test
inc
ret
xor
cmp
ja
nop
xor
inc
xchg
fld
mov
enter
adc
and
scas
mov
daa
cdq
out
xor
pushf
sbb
and
jmp
retf
(bad)
fist
dec
jae
cmps
pop
add
aam
inc
int3
push
inc
adc
inc
lds
imul
adc
arpl
add
add
lock
mov
enter
sub
sbb
mov
inc
mov
imul
stos
sti
or
sbb
jne
cdq
mov
and
arpl
les
ror
lods
je
pop
mov
jmp
add
sub
inc
or
mov
aad
xchg
imul
aad
(bad)
sbb
(bad)
out
inc
cmp
mov
adc
call
mov
xchg
je
pop
mov
push
cdq
dec
retf
ja
mov
xchg
add
iret
mov
imul
or
aaa
inc
aaa
dec
add
movs
xchg
leave
data16
sub
mov
cmc
pop
push
and
dec
out
seto
adc
inc
retf
shr
loopne
mov
push
hlt
test
scas
jg
into
cwde
in
std
cld
jno
push
inc
fmul
movs
jbe
sbb
lock
mov
movs
test
and
repz
mov
xchg
repz
movd
rcl
jb
push
gs
iret
inc
xor
iret
or
inc
or
inc
lods
fiadd
fwait
dec
ffree
test
call
test
mov
ret
(bad)
pop
scas
cmp
xchg
call
sub
xchg
ret
cmc
ret
mov
cmp
fisttp
cli
in
mov
test
push
movs
daa
cmc
(bad)
mov
push
popf
xor
addr16
xor
pop
xchg
iret
adc
sti
sub
or
scas
ss
je
push
stc
es
cwde
cmps
(bad)
hlt
and
mov
push
lea
push
mov
data16
ror
and
adc
cmp
adc
out
dec
sub
ja
mov
xor
push
pop
dec
scas
push
mov
pushf
lahf
mov
pop
pop
lock
adc
addr16
and
xchg
test
mov
int3
es
nop
std
cli
in
or
test
retf
sub
ss
cmp
ret
iret
mov
mov
xacquire
test
outs
inc
out
xlat
jne
dec
sub
add
das
jo
scas
aaa
sub
test
imul
or
test
sub
or
mov
test
mov
pop
sub
mov
add
imul
lahf
or
fistp
and
int3
das
mov
pop
ficomp
mov
push
cdq
lds
sti
shl
xchg
pop
pushf
adc
lahf
sub
add
and
sub
jmp
mov
aas
jmp
and
and
push
(bad)
popa
xchg
nop
clc
jg
sti
push
aaa
push
adc
sub
xchg
jno
call
mov
add
lea
out
cmps
lea
sub
adc
les
mov
pop
movs
jne
ja
mov
push
inc
xor
push
adc
jo
aam
jns
jns
shl
sub
imul
mov
popf
xor
cmp
or
dec
ror
and
fdiv
int
or
mov
in
cwde
sub
rcl
(bad)
jmp
pop
xchg
(bad)
loope
(bad)
mov
popf
es
test
and
jo
add
retf
aam
adc
repnz
je
js
mov
xchg
inc
or
repnz
repnz
mov
loop
lods
jmp
cmp
cmp
ficom
cmp
xchg
xor
(bad)
cmp
in
imul
mov
imul
or
add
out
fsubr
fsub
dec
loope
xchg
imul
and
iret
fs
xor
push
and
jbe
mov
or
xor
mov
mov
imul
or
pop
ins
jle
adc
xor
or
cmp
sub
xor
pop
nop
xor
(bad)
fcomp
arpl
dec
mov
sbb
jp
aad
push
sub
jp
xor
sbb
inc
fisttp
das
sub
mov
add
lahf
enter
jmp
push
fwait
add
(bad)
aam
ss
inc
add
push
dec
sti
retf
sub
dec
out
sahf
daa
lea
not
fisub
push
jne
aam
enter
in
addr16
scas
out
or
data16
fsubr
adc
retf
les
add
fidiv
sub
xchg
xchg
out
push
test
lahf
adc
cmp
lods
hlt
and
div
push
pop
add
pop
aaa
jnp
xchg
inc
xor
ins
aam
pop
push
inc
popf
dec
and
clc
mov
sub
xchg
adc
cld
outs
jg
inc
or
out
test
div
cmc
pop
or
sbb
inc
mov
lock
out
pop
fcmovnb
outs
stos
std
and
retf
push
loop
jg
lock
sbb
xchg
addr16
push
outs
cdq
adc
aas
iret
jmp
and
pusha
add
retf
test
ret
mov
(bad)
lods
je
mov
imul
stos
xlat
xor
or
(bad)
ja
shl
xor
imul
or
jmp
cmp
inc
jmp
loopne
call
dec
retf
ficomp
sbb
sbb
inc
push
je
xor
mov
jnp
xchg
test
xor
hlt
rcr
fdivr
mov
out
add
sbb
dec
mov
mov
push
inc
(bad)
not
and
clc
in
jo
ret
(bad)
jo
js
je
push
mov
mov
stos
push
xchg
pop
mov
pop
mov
adc
push
(bad)
pop
int3
mov
mov
cs
pop
ja
fsubr
pop
call
out
mov
sbb
push
pushf
cli
cmp
jmp
sub
pop
jl
out
push
xor
into
sar
in
dec
(bad)
cmp
cld
sub
jb
into
fs
mov
add
fcom
(bad)
call
pop
dec
push
mov
iret
test
jnp
mov
cmp
js
or
cmp
nop
int3
add
dec
popf
mov
inc
cmovns
push
fldenv
in
ret
mov
movs
cld
sti
add
pop
or
inc
and
in
pop
js
cli
xchg
es
or
fist
imul
push
stos
pusha
not
arpl
loopne
sub
fistp
cmp
std
mov
mov
add
jle
xor
enter
(bad)
retf
icebp
mov
test
pop
add
(bad)
bound
in
out
into
pop
dec
xlat
cmp
sub
int3
or
stos
(bad)
loop
shr
out
add
cmp
push
retf
jb
mov
add
push
jge
jb
jb
pop
cdq
in
sbb
sub
loop
xor
xor
or
enter
mov
gs
sahf
pop
xchg
std
call
shl
dec
sbb
mov
sbb
rol
xor
mov
fimul
add
movs
mov
mov
leave
shl
xor
stos
mov
bound
test
push
push
pop
push
loopne
mov
mov
fadd
shl
push
test
cld
push
push
cmp
movs
aas
mov
adc
push
sahf
xchg
jno
mov
dec
pop
fldcw
add
jmp
adc
(bad)
ins
nop
lods
shl
cmc
mov
jecxz
and
mov
nop
inc
xor
mov
jge
add
arpl
shr
mov
mov
aaa
cs
jl
inc
lods
lock
imul
nop
dec
jle
mov
call
jmp
pop
mov
sub
inc
popf
jecxz
and
cwde
mov
mov
jno
mov
retf
lahf
push
mov
or
dec
jmp
inc
int
pop
frstor
inc
imul
mov
pop
adc
cmp
test
shl
cli
dec
push
push
ret
lea
cmps
add
loope
loop
or
or
int3
ret
and
pop
ins
ret
and
test
in
sbb
rcl
cbw
jmp
dec
sets
mov
jo
daa
sub
add
xor
fisubr
add
pusha
xor
jo
mov
sbb
mov
push
call
fwait
in
xchg
jge
outs
adc
jg
mov
scas
mov
dec
aad
sbb
jb
pusha
ror
popa
or
xchg
repz
dec
or
or
aas
in
jle
sub
lea
inc
mov
mov
stos
in
(bad)
xor
sbb
pop
inc
ficomp
or
pop
call
ficomp
repz
cmp
mov
add
pop
iret
std
pop
mov
movs
jne
inc
xor
arpl
and
dec
mov
jns
cli
push
test
shr
sbb
test
adc
jnp
dec
push
test
loopne
jle
pop
int
cmp
int
sysenter
and
mov
or
mov
xchg
or
loop
aad
xor
mov
inc
out
adc
inc
xchg
repz
mov
xchg
push
mov
sub
inc
xor
or
pop
push
clc
inc
fistp
pop
cmp
mov
mov
ret
cmp
int3
xchg
inc
mov
lods
push
mov
mov
xor
adc
push
test
fild
cmps
fnstenv
shl
sub
jmp
call
add
xor
dec
pop
dec
sti
mov
dec
rcr
into
push
ins
adc
push
out
(bad)
and
lea
scas
cmp
je
ror
mov
push
xchg
cmp
push
xchg
pushf
imul
mov
pop
add
mov
and
retf
jns
cs
sub
loope
pusha
cli
jmp
loop
fldenv
mov
hlt
and
sahf
loop
dec
dec
push
arpl
mov
(bad)
bswap
jecxz
mov
loop
push
ins
mov
jecxz
(bad)
mov
dec
shr
stc
xor
cmp
pop
cmps
mov
cli
pushf
je
sub
ds
adc
xchg
arpl
sub
adc
mov
test
jns
xchg
pop
rcr
je
push
xchg
mov
xor
mov
in
cld
mov
xchg
add
xchg
fdiv
xchg
pop
loope
repnz
inc
lods
mov
dec
xchg
addr16
mov
sbb
sar
jae
cs
mov
cmp
adc
ins
inc
inc
push
mov
mov
mov
jae
or
aam
add
sub
mov
dec
test
inc
je
(bad)
mov
add
(bad)
scas
mov
add
lock
xor
add
outs
rep
outs
mov
sbb
call
mov
xchg
mov
xor
fs
int
in
stos
add
outs
repnz
pop
sbb
adc
data16
push
xlat
loop
ins
mov
call
add
or
mov
inc
call
test
xlat
cmp
xchg
cli
pop
mov
push
repz
mov
inc
pop
mov
mov
retf
push
mov
arpl
mov
lahf
pop
jecxz
jl
dec
add
xchg
das
pop
outs
adc
push
dec
and
add
mov
out
inc
test
nop
sub
les
dec
fsubr
jbe
enter
cmp
adc
data16
dec
ins
retf
xchg
aad
xlat
cmp
cmps
arpl
inc
neg
leave
sub
sub
repnz
test
cmp
xchg
repz
in
xchg
(bad)
xchg
mov
addr16
fild
xor
pop
(bad)
es
and
ds
mov
shr
mov
pop
int3
or
pop
jmp
in
push
mov
pusha
hlt
and
cmp
cmps
cdq
pop
scas
pop
les
and
jbe
mov
retf
mov
jecxz
or
jno
in
mov
nop
pop
lods
cld
inc
scas
mov
pop
pop
jno
repnz
mov
or
jg
cmps
add
jbe
fisttp
arpl
(bad)
jl
ins
and
lods
sub
inc
mov
push
jns
retf
cdq
dec
loopne
or
ds
rcr
xlat
mov
mov
data16
xor
loop
push
cdq
rcr
xchg
test
ret
call
ret
xchg
inc
leave
fmul
retf
test
bound
sub
adc
movs
into
fist
iret
sub
push
mov
or
or
or
pop
push
psraw
sahf
jo
sbb
xchg
aad
out
aaa
out
pop
loopne
popa
div
ficomp
fisubr
add
jecxz
xlat
ret
in
jae
es
ret
outs
es
repz
push
cdq
loop
ficom
add
fild
stc
imul
pop
mov
es
pop
pop
push
outs
outs
loopne
lds
out
cs
xor
mov
inc
out
jecxz
(bad)
cmp
push
je
mov
(bad)
aad
test
sub
gs
mov
outs
add
(bad)
mov
or
scas
or
sub
push
or
imul
fcom
dec
loope
sub
push
and
hlt
pop
mov
test
sbb
aad
retf
lds
icebp
jne
cwde
movs
xor
test
in
push
or
jno
adc
and
pop
(bad)
enter
mov
and
hlt
pop
push
psubw
sbb
test
out
ins
mov
sti
loopne
sti
loopne
add
leave
cmp
mov
rol
or
xor
fbld
dec
cmp
or
stos
in
stos
pop
mov
iret
repnz
shl
frstor
sub
inc
sar
dec
push
daa
xchg
movs
arpl
daa
mov
(bad)
xchg
test
(bad)
repz
lahf
jecxz
(bad)
jle
mov
mov
out
bound
jnp
aam
xchg
xor
dec
fs
dec
into
mov
xchg
mov
jo
scas
mov
out
or
(bad)
in
xor
lds
adc
or
fild
test
lods
(bad)
scas
xchg
push
xor
je
sbb
mov
call
aam
sub
sti
xchg
std
es
adc
iret
inc
fisub
aaa
cmp
inc
cdq
xchg
mov
or
cmp
dec
scas
mov
fcomp
daa
scas
sub
inc
es
jl
daa
test
addr16
int3
je
jno
retf
xchg
ret
add
jecxz
enter
pop
adc
add
vpaddb
push
(bad)
push
inc
je
movs
cmc
repz
fs
mov
fnstenv
out
div
push
and
in
xor
mul
(bad)
jecxz
sbb
out
inc
push
mov
or
xchg
pop
in
xor
out
pop
test
and
cmps
pop
pop
lds
push
out
out
sbb
pop
jle
stos
add
mov
into
sub
dec
xchg
dec
ins
jns
pop
sbb
mov
(bad)
(bad)
and
in
jo
adc
pop
sar
shl
stos
(bad)
cmp
outs
ret
popf
xchg
ror
push
stc
stc
ja
std
and
xchg
retf
cmp
sbb
lahf
sub
ror
dec
imul
or
adc
clc
mov
movs
sti
inc
xchg
ins
mov
callw
rcr
sub
mov
test
push
mov
jecxz
mov
or
xchg
pop
and
mov
inc
adc
lahf
dec
xchg
ror
pop
xchg
std
shl
inc
sub
iret
mov
mov
jnp
xor
movs
push
test
mov
sub
jmp
call
test
xor
sub
jge
pop
mov
push
std
js
in
les
and
jl
sub
std
repz
push
loop
leave
int3
mov
sbb
lods
stc
test
lds
cmp
or
and
jnp
repnz
dec
ins
and
xor
in
hlt
out
push
dec
inc
shl
sti
jno
jmp
inc
mov
fild
dec
inc
add
inc
aas
daa
xchg
adc
(bad)
and
lods
(bad)
out
cmp
aad
sub
jmp
jmp
pop
add
stos
cmp
dec
(bad)
pop
dec
in
mov
xchg
icebp
jae
pop
pop
popa
lods
pop
sub
out
les
jmp
les
in
(bad)
jl
mov
pop
cmp
add
and
shl
adc
inc
test
call
stc
xor
div
sub
hlt
dec
cmp
jge
cmc
shr
ss
adc
out
(bad)
cmc
jle
fnstcw
(bad)
retf
popa
iret
(bad)
sub
ficomp
rcpps
popf
fst
stos
lahf
mov
jae
int
push
jg
cmc
aaa
ficom
adc
or
and
xchg
or
popa
jo
pusha
add
xchg
repnz
mov
int3
ja
jge
retf
in
pop
jmp
cmp
(bad)
jb
into
push
adc
(bad)
xchg
fbstp
add
jae
xchg
xlat
fcom
xchg
clc
pop
jmp
leave
(bad)
and
aaa
mov
loop
sub
int3
cmc
push
sub
dec
push
pop
jmp
cmp
shl
lds
push
xchg
les
dec
inc
outs
outs
out
inc
sub
adc
or
sbb
sub
or
rol
xor
aaa
push
lds
pop
pop
xlat
sub
jmp
sahf
mov
inc
mov
xor
sbb
xlat
out
popf
xchg
jnp
fs
pop
leave
adc
xchg
push
in
cmps
nop
sahf
sbb
cmp
pop
(bad)
into
in
loope
mov
popa
mov
and
add
inc
inc
enter
fldcw
add
jmp
jmp
popa
fadd
arpl
sar
mov
and
imul
es
jge
fdiv
sub
and
mov
cld
xchg
jb
and
arpl
push
pusha
mov
xchg
mov
sbb
lods
pop
ficom
retf
rcr
inc
in
clc
sub
les
mov
fistp
les
xchg
sub
(bad)
or
dec
rol
clc
add
pusha
dec
ins
xchg
or
lea
das
shl
and
inc
push
mov
xchg
sbb
jge
js
not
fwait
or
movs
or
(bad)
cmp
nop
or
or
and
clc
push
js
adc
sub
out
pop
fidivr
xor
pop
in
xlat
or
inc
sbb
ins
retf
cmp
nop
es
aad
imul
fnstenv
call
cmp
cmps
push
jge
jl
hlt
mov
test
inc
je
push
int3
pop
pushf
add
call
mov
adc
add
das
clc
jmp
lahf
mov
adc
ret
jnp
(bad)
movs
test
mov
mov
(bad)
fnstsw
bound
ss
retf
inc
imul
mov
(bad)
out
jne
mov
data16
sti
retf
daa
outs
xor
nop
(bad)
jmp
mov
jg
sbb
fstp
mov
pusha
out
adc
leave
in
aam
cmps
in
cdq
scas
call
mov
fwait
push
mov
and
imul
data16
aad
cwde
adc
push
add
rcl
jl
push
inc
scas
mov
in
dec
xchg
or
fdivr
lock
xor
jne
cmc
mov
jno
cmp
mov
xchg
cli
jb
test
loopne
cdq
mov
test
dec
cmps
std
push
add
data16
retf
std
inc
push
add
mov
fbstp
outs
cmp
add
fidivr
jecxz
push
mov
nop
call
or
clc
push
mov
sub
jo
call
mov
stos
out
js
retf
mov
xlat
or
call
push
dec
mov
xor
mov
sbb
loop
aam
adc
xchg
std
jge
jne
(bad)
(bad)
mov
add
jmp
mov
fnstenv
rol
ret
and
dec
xor
ins
mov
mov
mov
loopne
mov
int
stos
loop
data16
xchg
push
add
enter
xchg
xor
test
dec
(bad)
das
inc
xor
cmps
sbb
sbb
and
test
mov
sbb
or
mov
rcr
in
retf
in
adc
dec
push
jl
push
inc
push
and
sub
push
iret
dec
(bad)
movs
rcr
and
fsubr
sub
(bad)
retf
and
ret
lock
clc
aas
xor
fwait
jg
or
std
jecxz
and
je
std
fld
cli
push
int
mov
sub
daa
aas
aaa
jne
cmp
inc
or
retf
call
nop
fwait
mov
lock
sub
ss
jmp
in
sbb
push
clc
inc
cwde
(bad)
xchg
fcmovnb
shl
mov
inc
rcl
sub
mov
xor
cmps
add
inc
jae
bound
movs
cld
rol
jmp
fimul
into
xor
ss
retf
inc
iret
shl
in
in
scas
in
retf
imul
pop
push
sub
xchg
cmp
jbe
jns
pop
cmc
xor
fcom
push
pop
into
popf
push
sbb
aas
inc
xor
cmc
sbb
fist
sahf
js
cli
and
jmp
xor
cld
call
sbb
inc
dec
pop
outs
pop
out
movzx
fistp
bound
mov
adc
sbb
jne
add
push
jl
or
loope
sbb
mov
in
inc
add
sub
call
xchg
gs
(bad)
sub
add
test
cmp
jb
shl
out
fstp
jnp
jb
gs
dec
fisubr
xchg
outs
cmp
jb
mov
jle
mov
pop
std
xchg
dec
push
mov
pop
add
mov
js
cmp
xor
or
movs
adc
cwde
mov
push
and
nop
(bad)
jo
sbb
xlat
or
movs
sub
je
stos
mov
outs
aas
xor
shl
movs
mov
xlat
mov
adc
xor
add
push
mov
lahf
sub
loope
adc
sbb
xor
push
mov
and
test
mov
pop
push
add
xchg
add
xchg
addr16
cmp
ss
dec
nop
lods
xchg
popa
add
cmp
mul
or
cmp
xchg
lea
and
cmp
jecxz
fwait
adc
mov
jge
aas
imul
(bad)
mov
shr
(bad)
adc
sub
retf
inc
push
ja
mov
mov
fdivr
mov
retf
xchg
scas
cmp
mov
loope
dec
mov
add
cmp
sbb
sub
test
sbb
sar
xchg
stos
xchg
mov
pop
loop
or
cmps
cwde
jmp
cwde
das
or
imul
in
mov
mov
loope
push
cmps
push
mov
call
sub
stc
dec
retf
dec
pop
sub
xor
call
aas
cwde
jmp
jno
fstp
sbb
or
mov
shl
movs
pop
imul
repnz
mov
and
sbb
stc
inc
rcl
fisub
dec
ins
add
push
aam
fidivr
mov
sub
popa
icebp
add
or
cmp
mov
add
adc
jl
xchg
mov
in
pop
fucomip
cmp
jg
adc
popf
out
adc
xchg
dec
inc
call
popf
das
sbb
xchg
test
sar
cdq
ja
ds
aaa
xlat
movs
imul
cmps
sub
into
xor
add
mov
jmp
add
outs
ds
scas
pushf
ins
cmc
sti
ror
inc
jmp
out
cwde
inc
xlat
daa
in
xor
xlat
sub
xchg
fmul
es
ds
out
and
dec
(bad)
mov
add
movs
xchg
jp
sub
leave
push
in
cmp
mov
mov
push
das
jl
mov
adc
shl
(bad)
push
jns
mov
mov
mov
ret
icebp
test
nop
lds
and
imul
adc
dec
push
movs
mov
or
movnti
pop
xchg
fdiv
clc
inc
mov
mov
mov
daa
mov
add
mul
cmp
es
es
ret
icebp
test
pop
jnp
sti
push
add
pop
scas
(bad)
inc
xor
or
repz
les
mov
push
jle
jnp
push
pushf
dec
addr16
daa
xchg
in
cmp
pop
inc
mov
pop
sbb
clc
mov
cmc
daa
aas
jp
cs
(bad)
push
cwde
pusha
frstor
sbb
aad
loopne
scas
jae
sbb
push
add
cdq
mov
clc
cld
xchg
shl
pushf
add
int3
setge
sbb
jp
mov
jne
cmp
pop
xor
fs
fimul
lock
pop
das
push
mov
retf
stos
mov
xchg
sbb
rcl
jle
aaa
lahf
jl
imul
rcl
xor
sbb
jmp
ja
in
pushf
pop
pop
xor
ins
fcomp
test
and
iret
inc
sbb
mov
xchg
lods
push
inc
sbb
sbb
adc
in
push
xor
adc
fadd
lahf
rol
and
mov
sbb
mov
mov
(bad)
je
cmp
in
nop
jnp
xchg
mov
out
sar
dec
jge
call
sub
inc
scas
mov
mov
inc
sub
sar
mov
inc
loop
add
mov
out
das
call
pusha
push
sub
pop
dec
fstp
xor
fnstcw
xor
sbb
scas
pop
adc
daa
(bad)
adc
and
jnp
gs
add
sub
cmp
in
sub
or
sub
outs
sbb
xchg
inc
je
sub
cmp
lahf
add
(bad)
sahf
loop
inc
xor
daa
je
fbld
mov
pushf
int
inc
push
pop
inc
xor
(bad)
rol
(bad)
push
xchg
sub
repnz
mov
(bad)
int3
dec
ror
loope
lock
cmp
dec
nop
jmp
mov
inc
and
mov
sbb
cmp
data16
repz
xchg
xchg
fisttp
dec
in
push
dec
dec
mov
jmp
cmps
dec
inc
sub
push
dec
(bad)
xchg
lds
or
scas
sub
mov
mov
nop
fidiv
cld
imul
push
iret
mov
pop
adc
and
es
repnz
popa
mov
lock
call
into
std
dec
ins
cmp
neg
pop
pusha
in
fdiv
out
(bad)
jge
push
mov
test
and
outs
dec
mov
push
ins
(bad)
call
sub
and
ins
loopne
and
imul
out
jle
xchg
ja
rcr
pop
mov
cdq
and
out
jns
rcr
and
call
shl
add
out
and
push
cmp
pop
sbb
jno
leave
jmp
std
cmp
rcl
push
fiadd
pop
push
int
pop
call
mov
jno
push
xchg
scas
lods
sahf
jnp
leave
mov
add
sbb
aad
xchg
into
add
push
mov
pop
xchg
test
pop
cs
add
mov
xor
jae
(bad)
aad
fld
sub
mov
and
mov
repnz
mov
and
cli
das
(bad)
ins
les
test
pop
mov
enter
or
aas
pushf
test
sbb
or
retf
cmp
inc
mov
stos
stc
mov
pop
leave
neg
les
inc
in
mov
arpl
xor
xor
dec
or
xor
dec
lahf
pop
sub
(bad)
add
push
xchg
sti
inc
ja
aam
mov
push
test
stc
jg
rcr
and
in
and
mov
retf
xchg
xor
or
and
outs
add
je
inc
pop
fwait
cmp
ret
int
or
jg
add
into
test
xchg
adc
shl
in
dec
or
fisub
jo
scas
xchg
rcl
mov
pop
out
(bad)
retf
les
sub
adc
xchg
fcomi
push
out
mov
inc
push
lods
shr
inc
inc
push
vcvtsi2ss
mov
pop
add
(bad)
dec
mov
xor
loope
std
push
cwde
sub
cmp
and
retf
stos
daa
cld
mov
xchg
fwait
and
mov
stos
(bad)
(bad)
call
dec
cmp
mov
cmps
inc
sub
lds
push
cmp
add
mov
pusha
sar
jns
cmp
mov
sub
(bad)
arpl
sbb
imul
push
idiv
push
sahf
(bad)
jnp
mov
cmp
call
mov
dec
cmp
sub
icebp
aaa
dec
add
sub
ds
sub
es
jmp
out
cmp
ror
xor
sbb
jle
cmps
ins
jmp
jnp
out
nop
mov
sar
retf
push
je
xchg
out
test
inc
jnp
call
add
je
xchg
out
shl
lahf
dec
fs
icebp
mov
jne
adc
out
pop
test
outs
cs
xlat
jbe
lock
movs
dec
ja
mov
dec
pop
add
les
ret
and
push
loop
out
test
jae
cmc
out
jecxz
bsf
scas
xchg
sahf
jmp
neg
jmp
dec
sub
aas
arpl
cmp
shl
pop
pushf
inc
pushf
push
pop
xlat
ins
push
in
add
stos
jns
pop
popa
xor
sub
pop
in
jns
mov
jp
mov
je
pushf
xchg
rcl
mov
xor
test
push
cld
jbe
popf
dec
lea
cmp
out
push
xchg
in
fiadd
mov
inc
int3
ins
fimul
mov
es
in
jmp
sub
fild
int
pop
and
ss
fbld
jg
popf
rcl
mov
je
xchg
stc
jbe
adc
mov
outs
fisub
mov
xor
das
xchg
or
sbb
int
xchg
mov
add
sub
pop
cmps
out
xchg
pop
pop
ja
and
rol
loope
push
adc
sub
hlt
sbb
cdq
and
inc
inc
mov
mov
and
or
loope
mov
sahf
int
test
jl
loop
out
sub
jmp
and
out
add
mov
rcr
jg
xchg
pop
xchg
pop
stc
xchg
fcomp
add
sub
xor
lods
xchg
sub
jnp
mov
sbb
aad
dec
shr
xchg
pusha
mov
jle
lods
rcl
popf
ret
sti
idiv
push
xor
push
hlt
movs
cmps
push
ja
and
arpl
retf
outs
sub
(bad)
xor
sub
shl
jo
and
sbb
dec
xchg
(bad)
fidivr
cmc
mov
test
push
aas
shl
cmp
or
mov
cdq
mov
cmp
add
lock
ffreep
in
dec
sbb
gs
mov
test
sbb
bound
push
lods
(bad)
fldenv
or
dec
cmp
(bad)
pushf
sbb
mov
or
mov
ret
popf
je
imul
nop
repnz
mov
jae
inc
push
imul
call
add
repz
movhlps
xor
mov
add
adc
push
and
sbb
jne
shr
xchg
sub
ins
xchg
pop
and
fwait
stos
mov
clc
(bad)
ror
sar
inc
movs
retf
cli
retf
inc
dec
sub
cli
call
popa
call
xor
leave
stos
cmps
test
retf
sbb
adc
sti
es
bound
or
jmp
and
je
mov
dec
cmps
shr
pop
cld
xchg
push
cwde
fiadd
push
aaa
into
pop
mov
and
test
cmp
dec
cmps
xor
outs
(bad)
fsub
push
pop
sub
scas
inc
sahf
cdq
and
fldcw
clc
daa
mov
cmp
fcom
loope
icebp
cmp
sbb
imul
fwait
add
cmps
adc
push
mov
sar
mov
inc
test
and
add
xchg
repz
daa
out
fnsave
hlt
sub
bound
pop
mov
sar
pop
push
sub
cdq
fs
sti
mov
push
mov
bound
(bad)
popf
bound
movs
or
push
cld
adc
rol
cmp
or
jmp
xchg
xchg
fsub
and
pop
dec
repnz
adc
imul
gs
into
add
sbb
adc
stc
retf
adc
cwde
enter
sbb
shl
sbb
lods
fiadd
fiadd
sbb
cmps
sub
mov
js
lock
fcom
and
mov
push
retf
por
cmp
pop
outs
and
mov
inc
fadd
outs
jo
jecxz
(bad)
out
icebp
jmp
push
sbb
jecxz
mov
ins
mov
and
xchg
adc
xchg
jno
idiv
push
push
cmps
lea
sub
bound
sahf
aam
mov
or
lahf
lods
and
pop
mov
xor
int3
mov
lods
add
scas
fild
out
add
fisub
jmp
xchg
in
dec
movs
lahf
dec
addr16
ret
ret
(bad)
(bad)
loope
in
cmps
aad
stos
mov
adc
inc
jno
shl
mov
sub
sub
jecxz
and
mov
je
popa
pushf
jno
imul
(bad)
out
arpl
fwait
stc
lahf
(bad)
push
je
xor
mov
add
dec
ret
push
inc
or
in
push
enter
rcr
fcom
ret
dec
(bad)
aad
dec
mov
fmul
and
jo
push
int3
adc
add
test
mov
jo
bound
emms
imul
xchg
mov
call
jbe
sub
push
and
add
jmp
cmps
mov
jecxz
das
cld
cmp
mov
inc
ret
cmp
retf
(bad)
jmp
add
in
mov
(bad)
dec
(bad)
loope
lahf
jb
jno
test
ds
inc
add
(bad)
in
push
sbb
mov
jmp
inc
add
dec
or
fucomp
(bad)
mov
xchg
loopne
fdivp
pop
mov
pop
adc
lds
fcmovb
mov
test
addr16
js
es
sbb
fld
icebp
adc
adc
pop
mov
outs
xchg
daa
outs
arpl
mov
xchg
inc
dec
ja
push
push
bound
(bad)
and
mov
cs
pop
dec
clc
xchg
jg
aas
or
loope
daa
sub
xchg
jmp
fwait
jb
and
into
das
xchg
and
or
addr16
dec
adc
in
fisttp
push
bnd
cmp
and
popa
in
out
out
push
xchg
add
cmp
adc
cmp
mov
rcr
fcomp
lock
aad
dec
jecxz
jecxz
in
push
inc
cmp
fdiv
push
test
repnz
mov
ret
xchg
nop
shl
call
or
dec
sub
mov
and
popa
int3
inc
icebp
adc
or
in
push
mov
mov
lea
mov
adc
pop
pop
pop
sub
or
mov
imul
jmp
and
sti
sbb
adc
les
jmp
adc
pop
mov
adc
fwait
adc
push
sahf
shl
dec
add
cmp
rol
push
mov
scas
jno
or
lods
add
ficom
movs
cmp
mov
fstp
inc
xchg
adc
fadd
inc
bound
popf
cmps
int
fst
adc
cdq
push
dec
dec
dec
jnp
and
cmp
mov
xchg
les
mov
jg
sbb
enter
aas
mov
push
add
into
es
loop
fwait
sub
out
outs
ror
add
sub
(bad)
jle
arpl
cmp
aam
cmps
mov
xor
inc
or
in
and
sub
push
jns
int
mov
aaa
jb
cmp
(bad)
mov
dec
and
je
sub
rcr
sbb
idiv
ds
mov
idiv
clc
cwde
pop
inc
fcomp
fisub
jnp
mov
pop
cli
adc
and
les
cmp
inc
(bad)
sub
push
jb
mov
add
imul
push
fst
popa
leave
inc
rcl
inc
dec
int
inc
das
jmp
popa
enter
pop
cli
not
xor
mov
push
xor
push
div
adc
xchg
call
jno
mov
es
out
cmp
arpl
mov
sahf
ror
or
shl
hlt
jecxz
fsubr
sahf
or
mov
mov
test
js
xlat
push
inc
cld
jns
xchg
mov
movs
push
xor
inc
les
mov
cs
add
shr
fidiv
pop
jle
aaa
sar
fwait
cmp
mov
mov
mov
popa
dec
call
adc
mov
adc
call
sbb
dec
mov
adc
adc
retf
jg
mov
mov
xchg
jl
ret
sahf
add
das
sbb
fst
repnz
xor
shr
(bad)
xor
sub
add
fbld
jne
mov
push
mov
fidiv
imul
aaa
rcr
push
jle
or
and
arpl
(bad)
adc
mov
dec
(bad)
xchg
rcl
in
or
(bad)
rcl
inc
ins
loope
inc
ds
stos
mov
sbb
pop
out
test
mov
sti
jecxz
sbb
cmp
xchg
jo
es
mov
jge
in
movs
adc
icebp
daa
sbb
pop
xchg
(bad)
cdq
stos
mov
clc
adc
push
adc
sbb
xchg
adc
movs
and
sbb
xchg
cmp
inc
icebp
push
fs
push
out
loop
push
into
shl
xchg
aas
mov
xchg
jmp
ret
cmp
xchg
mov
xor
shl
inc
mov
and
cmp
sbb
inc
mov
movs
pop
enter
outs
icebp
sbb
mov
outs
mov
in
mov
xchg
cdq
out
mov
aad
in
(bad)
cdq
fld
ds
fst
ss
push
fwait
jmp
cs
mov
fistp
daa
sub
jns
mov
adc
test
stc
xchg
sub
pushf
xor
cdq
and
out
dec
(bad)
repnz
push
fwait
mov
sub
pop
icebp
into
xchg
jns
rcl
scas
ins
mov
sub
fdiv
or
ja
cmps
ins
sti
outs
mov
add
xor
aaa
jg
adc
xor
aas
xchg
inc
adc
mov
and
aas
pop
rcr
dec
in
xchg
fimul
ins
test
xchg
mov
cmp
aas
nop
adc
lods
in
pusha
jg
mov
in
add
imul
ret
mov
or
and
pop
cmp
sahf
test
and
int3
sbb
outs
arpl
push
sbb
mov
cld
cmc
sub
ror
hlt
into
cmc
ss
sbb
mov
movs
div
imul
mov
loopne
addr16
ror
scas
movs
push
inc
cwde
into
fidiv
outs
ins
aaa
hlt
adc
inc
cmps
retf
xchg
push
and
sahf
cwde
ds
cmp
gs
mov
mov
loop
aas
push
shl
lods
call
test
sub
loop
test
jmp
call
mov
mov
xchg
mov
push
inc
stos
jns
outs
pop
mov
fcmovb
xchg
sub
pop
jne
push
sbb
fist
scas
cmp
dec
aas
arpl
push
mov
call
xchg
(bad)
aad
loopne
push
sbb
lea
and
push
in
inc
sti
fst
inc
push
(bad)
out
outs
push
je
popf
sar
or
test
mov
mov
push
cli
js
dec
into
repz
xor
pop
rol
xchg
cwde
cmp
sub
mov
in
retf
mov
neg
jl
inc
mov
mov
and
add
mov
mov
movs
cwde
(bad)
push
cs
and
outs
(bad)
xor
sbb
call
loop
mov
stos
movs
imul
lods
jne
dec
sub
pop
jl
cld
mov
scas
push
push
cmp
sbb
cmp
jb
fsubr
(bad)
xor
fst
imul
add
push
and
jle
sub
dec
mov
or
mov
xchg
sub
sub
xor
(bad)
in
xlat
push
push
jbe
rcl
cli
(bad)
enter
outs
sub
inc
cmps
sub
addr16
fdiv
adc
fld
loope
enter
cmp
pop
into
dec
cmp
mov
jg
xor
push
mov
fdivr
mov
mov
rcl
sbb
inc
cld
mov
loope
aas
out
lods
je
stc
das
dec
add
and
mov
aas
adc
loope
push
bound
fst
add
test
shl
and
cmp
iret
movs
fcmovnb
jg
or
fcomip
add
xlat
xor
push
nop
pop
stos
xchg
pusha
cli
push
cmp
adc
or
test
fcomp
push
mov
xchg
popf
rol
rcr
loope
int
and
and
mov
push
push
mov
pop
jmp
ror
sahf
out
icebp
shl
cmp
jne
cmp
adc
inc
push
mov
or
ins
push
(bad)
(bad)
adc
popa
xchg
xchg
out
push
cmps
push
lea
push
pop
lds
pop
and
leave
adc
sti
cmc
shr
jp
popf
loopne
clc
fistp
adc
js
out
adc
out
cld
or
test
sbb
(bad)
mov
xchg
sahf
inc
cmp
mov
xchg
movs
sub
les
push
cmp
mov
repnz
aam
sbb
pop
dec
mov
or
sar
test
and
sub
loope
nop
sub
inc
mov
and
cmps
add
push
call
test
sub
lock
or
push
xchg
xor
cmps
imul
dec
lock
pop
or
dec
cmps
xlat
mov
sti
cmp
fs
cld
sti
mov
cs
xchg
data16
inc
lds
je
pop
and
inc
jl
cli
push
inc
adc
sub
cmps
ja
mov
pop
mov
in
cdq
or
(bad)
sub
out
movs
add
cmc
mov
and
enter
dec
add
(bad)
fdiv
jns
jecxz
fnsave
mov
mov
les
loopne
sub
enter
pop
or
call
sbb
or
icebp
xchg
(bad)
pushf
loopne
push
pop
push
mov
aas
inc
fcmovnb
test
sub
jmp
push
dec
or
in
jno
xor
data16
mov
loopne
test
daa
fld
or
adc
add
loope
in
xor
mov
shr
add
ds
mov
cmp
dec
into
mov
cli
jno
scas
outs
sti
xchg
mov
retf
sbb
and
(bad)
test
pop
movs
mov
push
mov
inc
xchg
jl
xchg
scas
cmp
mov
sti
jmp
mov
or
int3
xor
jmp
mov
mov
mov
jns
ret
pop
mov
jb
scas
nop
dec
es
mov
jmp
push
test
mov
or
pop
mov
push
xchg
xchg
pop
dec
xor
test
xchg
iret
rcr
mov
jb
mov
inc
xor
mov
xchg
pop
dec
mov
ds
push
lods
mov
ss
lods
sub
loopne
imul
les
fsubr
xor
inc
add
adc
int3
in
cmp
or
mov
aas
aas
fisub
call
cmp
pop
mov
cdq
cmc
mov
cs
cmps
cmp
dec
adc
out
mov
fmul
bnd
xchg
sub
loop
pop
cwde
out
xor
mov
sar
mov
fldcw
or
(bad)
jecxz
clc
leave
push
(bad)
mov
lods
in
or
fsub
mov
adc
das
mov
lahf
add
inc
cmp
and
xchg
faddp
pop
out
and
and
ret
adc
pop
test
xor
lock
adc
cmp
or
and
xlat
pop
cmc
movs
sub
arpl
pop
cmp
ins
jp
adc
sahf
and
mov
dec
adc
dec
add
clc
aam
pop
call
sahf
jnp
out
dec
dec
sub
adc
mov
sub
sub
in
and
les
pop
mov
stos
add
hlt
or
cmovb
arpl
sub
xchg
ret
pop
loop
int3
jmp
out
xor
test
scas
sti
cli
ja
fs
aam
cmp
in
and
cmp
mov
arpl
cli
xlat
repz
loopne
outs
adc
enter
lock
adc
xchg
add
or
stos
pop
movs
sbb
and
sar
pop
fs
mov
sub
je
mov
push
pop
mov
mov
loop
inc
sub
sbb
xor
es
je
adc
sti
cmps
and
xchg
(bad)
mov
stc
mov
jecxz
je
and
push
bound
adc
ss
in
jnp
sub
movs
dec
and
loopne
std
inc
sub
neg
daa
dec
push
shl
xchg
jmp
pusha
or
cmp
sbb
cli
in
pop
lahf
daa
addr16
mov
mov
mov
inc
ret
pop
dec
jmp
out
int
cmc
cmp
sub
fcmovnbe
test
and
es
mov
or
push
mov
(bad)
xchg
inc
mov
mov
cld
mov
fdivr
pop
pop
jnp
inc
push
repz
retf
mov
xchg
or
out
pmaddwd
add
mov
(bad)
cmp
in
jmp
js
pop
(bad)
data16
mov
cmp
sbb
xchg
pop
call
out
(bad)
dec
dec
push
out
push
repz
pusha
daa
xor
xlat
push
je
xchg
movs
inc
and
ficomp
in
std
mov
jl
xchg
xchg
(bad)
stos
inc
sub
iret
or
retf
int3
arpl
(bad)
mov
lods
inc
(bad)
pop
add
add
(bad)
(bad)
int3
scas
mov
mov
into
jle
dec
pop
cmp
cmp
mov
rol
sbb
movs
adc
mov
loop
in
cmps
lock
adc
call
push
fldcw
push
aad
cmp
xchg
cli
popa
pop
mov
fcom
dec
push
add
and
xchg
pop
mov
pusha
xor
and
aad
inc
test
movs
xor
mov
push
adc
sbb
(bad)
lds
dec
leave
(bad)
push
sbb
test
cmc
cwde
enter
push
xor
bnd
xor
fnstenv
push
mov
rol
xchg
dec
pop
fist
lock
jb
sbb
arpl
repz
ret
jb
es
js
cld
js
mov
xor
ins
xor
xchg
or
sub
sbb
cmp
jp
leave
adc
cld
or
or
popa
fimul
das
into
iret
iret
jne
mov
xor
(bad)
push
pop
push
stc
(bad)
mov
aam
enter
out
std
jp
sub
pop
data16
dec
mov
(bad)
jmp
cli
jl
jecxz
push
movs
stos
push
pop
sbb
inc
inc
mov
mov
in
aam
pop
das
or
mov
dec
jg
clc
pop
fucomp
ret
test
mov
push
xchg
and
mov
fld
pushf
adc
cmp
test
test
mov
addr16
in
sar
cdq
pop
test
and
sub
call
inc
pushf
movs
and
add
fcomp
xor
arpl
mov
pop
in
repnz
fdiv
xchg
push
cli
out
iret
adc
movs
scas
mov
je
jno
xchg
push
jno
and
addr16
push
in
mov
xchg
mov
or
jg
sub
mov
shr
addr16
inc
mov
xor
(bad)
mov
pushf
cwde
pop
mov
clc
push
pop
aas
out
repnz
fs
xchg
(bad)
ja
jmp
dec
push
ins
pop
mov
arpl
dec
lds
fisubr
icebp
rol
das
das
and
mov
fsubr
sub
out
add
inc
lods
dec
pop
pop
jo
arpl
xchg
(bad)
fxam
or
cmp
in
xchg
push
int3
jbe
pop
fisttp
cmps
ins
xchg
js
push
std
pop
inc
(bad)
out
mov
movs
ficom
(bad)
xor
jle
sbb
cmp
push
pop
mov
mov
leave
repnz
sbb
or
repz
cmps
mov
sub
ret
je
call
inc
add
adc
push
pop
add
inc
mov
sbb
pop
js
iret
loope
sbb
mov
and
push
cmp
out
mov
or
shr
gs
dec
mov
test
dec
pop
lods
ss
cld
push
sbb
loope
scas
test
jmp
sub
inc
inc
mov
adc
mov
xchg
into
push
push
aas
push
aad
add
dec
test
inc
add
mov
dec
stc
(bad)
in
cdq
scas
jge
je
and
das
jne
adc
dec
jge
jge
adc
enter
into
mov
dec
mov
and
repz
imul
into
cmp
aaa
adc
sub
mov
dec
lods
loopne
mov
sub
push
inc
adc
or
pop
jmp
push
pop
test
gs
mov
xor
(bad)
push
call
outs
ins
push
jl
das
xor
xor
es
sub
adc
push
dec
test
ret
add
ret
adc
cmp
imul
fwait
dec
dec
ret
arpl
ds
pop
jmp
in
push
xchg
int3
xor
imul
pop
mov
jno
lea
or
jmp
mov
pop
push
movs
into
sub
fs
xchg
mov
(bad)
adc
imul
mov
mov
stc
mov
inc
jmp
sbb
push
loope
outs
retf
adc
mov
jo
loope
repz
(bad)
xchg
loope
das
outs
push
jl
xlat
mov
icebp
push
adc
cld
mov
mov
and
sbb
cmp
jbe
xchg
pop
dec
xchg
sti
mov
or
loopne
stos
rcl
sar
js
xor
adc
pop
outs
adc
cmp
scas
sub
or
xor
pop
xor
pop
or
fadd
xchg
cmps
push
xchg
sbb
fs
xor
and
jmp
adc
jnp
jne
ins
jmp
xchg
mov
mov
js
stc
fadd
les
test
lock
int
adc
add
inc
std
retf
inc
arpl
cdq
popf
lds
inc
test
xchg
xor
cmp
je
daa
out
push
(bad)
ffree
push
mov
adc
xor
outs
jmp
sar
mov
jp
mov
sbb
sub
sub
xchg
sbb
ins
xor
lds
mov
sbb
in
inc
push
sbb
xchg
jb
das
fadd
xchg
shl
(bad)
mov
pop
pop
or
arpl
(bad)
repz
repnz
ret
jge
jbe
out
(bad)
(bad)
cld
mov
(bad)
or
pusha
rcr
dec
rcr
cmp
or
mov
shr
and
xchg
mov
xchg
out
pusha
ja
nop
add
jle
mov
adc
mul
and
fidivr
ror
shr
pushf
fstp
movs
cmp
scas
into
mov
xor
mov
neg
mov
(bad)
loop
add
frstor
adc
mov
pop
push
and
inc
fistp
aad
ror
loopne
add
jge
in
sbb
mov
dec
dec
ja
sbb
mov
xchg
sbb
retf
repnz
loop
xchg
aad
sbb
and
add
mov
stos
aaa
push
in
cmp
xchg
adc
jecxz
fld
add
cs
retf
fs
sti
aad
aam
or
shl
or
mov
stos
leave
lods
mov
adc
aad
scas
fnstenv
jno
sub
mov
push
cmp
movs
mov
inc
les
mov
ret
test
adc
enter
xchg
daa
adc
pop
push
pop
mov
cmps
jne
adc
js
je
xor
sub
inc
out
test
xor
mov
lds
repz
je
or
scas
int3
fs
or
mov
push
jle
sbb
les
adc
or
ins
pop
es
outs
push
xchg
add
sub
std
add
ret
xlat
add
jno
adc
mov
out
pop
pop
es
mov
mov
(bad)
push
xchg
aaa
popf
dec
dec
in
sub
mov
pop
adc
push
out
cmp
das
add
dec
dec
pop
fs
call
or
push
push
loopne
ja
sar
test
int3
sti
nop
dec
mov
mov
test
das
leave
push
push
pop
adc
imul
xlat
dec
inc
and
es
gs
jnp
xor
dec
cld
aas
mov
shl
xlat
int3
add
cmp
sbb
mov
ss
cdq
pop
push
dec
cmc
ins
in
push
sahf
or
push
adc
js
and
movs
xchg
xor
addr16
pop
hlt
sti
mov
xchg
(bad)
pop
xchg
xor
ds
mov
jae
jo
cmps
in
adc
sub
inc
fbld
pop
pop
dec
push
les
das
pushf
or
cmp
sub
in
fiadd
adc
rcr
dec
xchg
or
xchg
xor
xchg
mov
(bad)
inc
ret
xchg
(bad)
jnp
aad
sahf
xchg
outs
or
sbb
int
adc
jnp
dec
adc
pop
adc
cmps
pop
jecxz
jmp
dec
ss
dec
jl
jno
add
leave
inc
iret
mov
aas
xchg
cmp
rcl
dec
repnz
cdq
icebp
scas
dec
dec
out
xlat
mov
les
cwde
xor
retf
mov
ins
cli
mov
out
cmp
xchg
mov
cmp
mov
out
(bad)
dec
rcl
(bad)
leave
fsub
enter
pop
lahf
jmp
(bad)
ins
inc
mov
dec
inc
xor
(bad)
data16
bound
nop
jp
push
stos
mov
clc
xor
pop
gs
adc
pop
jl
xchg
cmp
push
mov
sar
into
xor
jge
cmps
aas
add
sub
xor
xchg
inc
rol
call
(bad)
jmp
xchg
mov
cld
scas
(bad)
push
or
or
mov
push
xchg
pusha
out
xor
mov
icebp
enter
sahf
push
test
js
pop
lahf
fldcw
shr
in
xlat
fdiv
test
addr16
cmp
sub
leave
call
call
(bad)
jg
lock
mov
repnz
cs
cmp
gs
lahf
sti
ret
out
(bad)
or
mov
xchg
test
sub
jp
ss
mov
pop
loop
std
popf
mov
test
push
outs
ret
fadd
cmp
jbe
jecxz
push
and
cdq
xchg
mov
sbb
push
jmp
push
jno
cmp
lahf
out
sbb
pop
lods
push
jmp
push
mov
xchg
repnz
dec
cwde
mov
mov
imul
add
out
pop
and
scas
cmp
fwait
sti
aam
fs
fwait
jo
cmp
shl
pusha
mov
mov
sub
dec
jmp
addr16
dec
fistp
push
jns
fist
sbb
inc
add
xor
repnz
push
lods
push
xor
xchg
imul
out
ins
fyl2x
nop
pop
ins
arpl
pop
shr
loope
xchg
not
jge
mov
fcomp
aas
iret
or
dec
outs
push
inc
sti
mov
(bad)
sahf
clc
cmp
fistp
sahf
sar
cld
pop
cmps
retf
ins
loop
adc
retf
xchg
cmps
adc
sub
addr16
mov
arpl
repz
adc
mov
push
pop
shr
or
test
in
retf
mov
loopne
pushf
aad
sbb
or
mov
sub
xor
xchg
xchg
pop
cdq
jl
test
jl
xchg
inc
je
test
fadd
inc
das
inc
fsubr
les
push
mov
or
pop
sub
out
jnp
out
mov
adc
movs
test
out
dec
rcl
xor
sbb
cmp
push
inc
pop
sub
sbb
push
push
jns
jae
adc
cmps
stc
sub
pop
xchg
jns
in
shr
in
les
pop
add
pop
mov
fild
push
imul
jge
cmps
mov
iret
sbb
out
das
adc
dec
sbb
lds
outs
and
repnz
sub
(bad)
dec
push
cli
pop
int
adc
or
ja
stos
or
in
sbb
pop
ins
ror
fdiv
add
dec
cmp
data16
xchg
aaa
xor
xor
push
ja
pop
dec
ss
lods
bound
mov
inc
das
movnti
add
rcl
imul
cld
je
(bad)
aas
cmp
adc
mov
xor
pop
mov
and
dec
fbld
faddp
retf
ror
test
leave
xchg
pop
ds
mov
sbb
leave
sub
jnp
xor
sub
pop
and
movs
cmp
mov
ins
xchg
pop
inc
call
jbe
pop
lods
fist
mov
mov
add
stos
fidivr
mov
pop
(bad)
xor
and
dec
adc
int
jecxz
in
mov
pop
xchg
movs
mov
push
jecxz
push
xchg
clc
repz
fstp
cli
pop
adc
mov
cmp
jae
sbb
mov
push
push
test
jo
adc
inc
fimul
cmps
mov
stos
xlat
pop
xchg
scas
mov
push
clc
rcr
xchg
inc
add
sub
cdq
mov
and
lock
call
popa
fwait
xchg
shl
sub
sar
cmp
mov
bnd
mov
mov
push
add
sar
mov
and
pop
(bad)
out
xchg
add
(bad)
into
jno
stos
out
dec
mov
xchg
inc
scas
mov
mov
or
popf
(bad)
arpl
das
shl
mov
jb
pop
cmp
fwait
lods
inc
mov
push
les
add
sbb
fist
add
stos
add
and
retf
push
and
shr
xchg
mov
pusha
retf
jnp
xchg
xor
es
retf
dec
and
ins
xor
repnz
mov
xor
dec
jmp
(bad)
pushf
xlat
adc
shl
or
popa
or
(bad)
rcl
mov
rol
inc
xor
aas
aad
xchg
lods
out
sub
fdivr
or
lods
(bad)
pop
iret
dec
adc
pop
push
out
xor
call
xchg
jb
rcr
mov
pusha
sbb
es
int
fwait
in
lods
es
(bad)
cs
outs
mov
call
fidivr
lock
dec
arpl
and
jmp
xor
jbe
outs
ins
gs
scas
xchg
mov
or
mov
movs
and
inc
push
pop
push
addr16
fild
aam
sahf
ds
rcr
cmp
add
fst
retf
loopne
or
jno
mov
adc
dec
jne
aam
loopne
int
mov
jl
or
cli
dec
sbb
ins
in
sbb
sub
push
mov
sbb
fs
xor
xor
out
add
jmp
test
push
dec
dec
(bad)
lea
inc
in
ss
jge
dec
sbb
jmp
pop
jne
sbb
xchg
and
es
jp
jbe
(bad)
gs
xchg
pop
cmc
ret
jnp
push
les
rcr
mov
sbb
je
mov
push
mov
sbb
xchg
and
fdivr
cmp
mov
sub
lods
mov
rcr
cmp
iret
pusha
xor
mov
sub
cmps
jno
cmp
xor
and
mov
dec
mov
dec
jmp
cmp
jl
xor
mov
imul
test
mov
push
jno
cmps
mov
call
jle
rcl
les
xchg
ret
jl
js
ret
popa
mov
in
adc
mov
jno
arpl
mov
shl
test
push
cmp
push
loop
inc
ins
mov
cld
mov
cmps
cmps
dec
sbb
jno
mov
xchg
inc
loopne
cmp
stc
pop
clc
scas
outs
mov
jge
popf
cmps
das
cmp
mov
repz
xchg
and
dec
sub
sub
pop
xor
xchg
jge
fadd
retf
loope
imul
nop
cmovns
inc
ror
dec
les
pop
sti
pop
inc
mov
xchg
pop
inc
ficomp
inc
push
pusha
scas
mov
sub
cmp
cmc
out
mov
les
aas
inc
push
retf
xor
shl
retf
(bad)
pop
pusha
je
div
sbb
lea
or
fsubr
into
dec
ret
psubd
mov
sub
cmp
cmp
outs
adc
pop
jle
jge
push
nop
lahf
loope
pop
in
out
sub
ret
push
jmp
inc
push
push
outs
aam
pop
pusha
in
sub
adc
push
jecxz
xchg
nop
loope
stos
int
cmp
cdq
inc
in
xchg
call
jnp
push
cmp
les
cmp
sbb
jmp
adc
push
(bad)
jp
cmps
pop
ret
in
inc
mov
xchg
call
dec
and
arpl
push
lods
jae
add
fstp
xchg
movs
ret
in
jo
inc
pop
or
jnp
ret
adc
sub
inc
jg
pop
push
mov
lahf
ins
xchg
xor
adc
popf
jo
jne
sbb
cs
outs
std
mov
inc
cmc
inc
push
lds
aad
scas
addr16
test
dec
mov
xchg
mov
and
rcl
mov
jno
adc
xchg
fmul
xchg
cmps
fcom
scas
push
lahf
add
cdq
mov
(bad)
int
dec
les
xchg
pop
mov
das
lea
or
mov
sahf
push
mov
(bad)
jl
pop
test
lds
imul
jp
xor
test
mov
adc
xchg
mov
sub
add
fcmovnu
cmps
or
add
mov
jle
sub
imul
repnz
pusha
ds
js
adc
adc
ret
into
cmp
stos
leave
pop
ins
cwde
cdq
inc
mov
cmp
inc
push
adc
push
shl
pop
push
fcomip
in
shl
hlt
and
in
push
(bad)
fs
inc
mov
not
adc
and
out
and
loope
lds
pop
inc
sahf
fwait
js
in
mov
mov
adc
call
sti
test
push
add
dec
(bad)
scas
ins
jle
(bad)
push
loopne
push
(bad)
pop
push
loope
nop
push
pop
mov
ja
gs
das
test
mov
dec
mov
sahf
adc
cmp
movs
test
fdivr
lods
fld
lods
pop
mov
jno
cmps
stc
bound
sub
push
stc
inc
sbb
push
popa
cs
xor
inc
xchg
outs
lock
pop
jae
loop
cs
aam
stos
xchg
in
fld
arpl
cmp
xor
push
adc
adc
pop
mov
mov
pop
aam
add
iret
push
je
mov
imul
push
std
loop
das
push
xchg
cmc
ret
arpl
add
cld
jge
jmp
or
jmp
fisubr
jns
or
xchg
and
cmp
popf
pushf
in
dec
mov
stos
pop
mov
inc
xor
or
xor
push
add
inc
jae
je
out
pop
test
xchg
nop
push
mov
leave
int
out
ret
inc
and
shl
fldcw
rcl
xlat
jp
stos
hlt
cmp
mov
push
fwait
inc
cwde
jl
adc
pop
inc
inc
in
xor
inc
ins
xchg
and
pusha
push
call
and
aas
movs
cwde
in
sub
jae
cli
ficomp
mov
pop
mov
in
pop
ins
scas
adc
push
jle
aam
or
dec
add
fidivr
sbb
cs
dec
stos
test
mov
sub
test
(bad)
sbb
cmp
mov
sti
and
das
jl
jno
test
pop
test
xor
sti
lock
push
adc
adc
sbb
(bad)
aad
or
push
push
inc
inc
cmp
shl
inc
inc
aad
ins
or
test
es
lock
test
jl
xor
stos
ins
aaa
lds
and
ftst
inc
shr
sub
pusha
daa
(bad)
mov
ja
push
rcr
or
sbb
imul
stos
movs
jle
xchg
test
fld
mov
add
xchg
mov
jp
mov
adc
xchg
xchg
xchg
rcr
push
or
cld
mov
adc
xor
xchg
in
push
mov
fild
push
xchg
add
sub
mov
ins
xchg
ret
adc
or
iret
fxch
jmp
icebp
pop
mov
bound
and
retf
pop
aaa
ret
pop
pop
and
loopne
xchg
outs
addr16
dec
xor
stos
(bad)
in
mov
push
dec
jl
adc
adc
sbb
mov
or
cmps
ins
cwde
dec
jmp
hlt
out
icebp
call
xor
sub
cmps
gs
mov
cld
sub
push
test
repnz
(bad)
in
(bad)
stc
stc
outs
xchg
rcr
ret
ret
popf
inc
xlat
mov
and
repnz
dec
mov
and
adc
cmc
or
sub
pushf
pop
out
in
mov
inc
and
sbb
jg
sahf
fcmovnb
push
packsswb
xchg
in
dec
cmp
sbb
mov
ficomp
jo
push
mov
jp
adc
(bad)
jmp
cli
fidiv
ja
cmps
jg
sbb
inc
fisub
movs
cdq
sub
inc
(bad)
sub
mov
hlt
rcl
pushf
sub
jp
(bad)
sbb
add
mov
xlat
mov
xchg
ret
repz
(bad)
sbb
inc
xor
mov
fnsave
mov
or
pop
adc
jmp
push
push
mov
jbe
sbb
jbe
cs
sar
mov
outs
or
imul
mov
pop
pop
enter
cmp
rol
in
push
test
shl
push
pushf
xlat
ds
pop
outs
cmps
or
inc
or
in
and
push
sar
cld
outs
ret
ror
in
ins
and
fcomi
int
add
fwait
in
jp
pop
ins
or
mov
dec
pop
jns
mov
dec
(bad)
mov
movs
jno
(bad)
fwait
stos
and
fstp
into
add
fnstenv
cmps
mov
jp
shl
aas
loope
pusha
outs
sbb
imul
xor
enter
mov
lea
ins
stos
and
cmps
or
adc
mov
div
lods
mov
push
adc
popa
inc
sub
inc
adc
mov
aas
or
pop
mov
jo
mov
fidiv
cli
xchg
retf
mov
mov
gs
cmp
mov
xlat
enter
call
sub
inc
sti
adc
(bad)
xchg
enter
rcl
cmp
inc
mov
mov
cmp
gs
sbb
dec
lds
pusha
cmp
or
cmp
inc
pop
inc
adc
ret
int
test
add
and
ins
imul
retf
aaa
push
push
jbe
jnp
in
jbe
jne
mov
mov
push
lock
jnp
adc
adc
movs
sbb
fs
mov
lods
xor
aaa
mov
ins
imul
rcr
sti
enter
repnz
add
das
push
jnp
add
cmp
popf
cs
inc
pushf
mov
test
in
pop
cmps
sbb
imul
add
push
leave
fist
ds
jns
mov
mov
adc
ss
stc
fs
mov
xchg
hlt
mov
les
pop
test
add
fcmovu
stos
fistp
int
outs
jne
das
in
add
dec
lds
push
sbb
ret
pop
call
mov
xlat
inc
inc
sbb
dec
lods
test
jmp
add
jmp
mov
(bad)
loopne
pusha
push
mov
jg
(bad)
mov
jne
es
mov
pop
stc
stos
pop
inc
jmp
jl
xchg
les
lock
add
div
lods
test
jecxz
fcos
scas
mov
gs
mov
ds
div
mov
adc
jle
les
punpckhwd
test
dec
cs
iret
mov
fmul
pop
fild
test
aad
outs
les
xchg
xchg
outs
shl
push
rcr
imul
out
test
push
mov
ret
xchg
sub
mov
nop
mov
mov
pop
lds
xor
fcomp
into
mov
and
sub
adc
add
retf
es
retf
dec
cmp
dec
repnz
jns
in
mov
lds
jo
test
push
stos
arpl
mov
mov
(bad)
xlat
inc
and
pop
cmp
addr16
inc
mov
inc
jle
test
dec
(bad)
cmp
retf
cmc
xchg
jnp
add
xchg
cmps
jne
pop
cmps
loope
dec
shl
cmc
das
mov
dec
test
sti
ds
shl
out
fsub
stc
mov
push
in
cli
out
inc
mov
pop
mov
and
inc
pop
or
in
sub
loop
jl
add
sbb
ja
cmps
mov
popa
and
(bad)
sub
mov
inc
jae
jnp
inc
sub
adc
and
jb
xchg
into
dec
and
mov
(bad)
inc
cmp
fnstsw
enter
stos
inc
in
adc
dec
cmp
loope
(bad)
retf
xor
inc
mov
sbb
das
es
mov
jle
ficomp
cwde
push
lods
(bad)
mov
daa
bound
movs
in
nop
inc
xchg
and
in
clc
and
pop
add
dec
frstor
fadd
pusha
jge
fsubrp
cmp
popf
add
and
push
pop
pop
jbe
(bad)
in
out
push
ror
cmp
call
in
hlt
and
and
sbb
(bad)
pop
add
xchg
int3
mov
xor
daa
xor
push
or
pusha
ret
mov
in
ret
mov
stos
mov
ins
loopne
daa
out
mov
pushf
call
and
stos
(bad)
mov
jle
inc
sub
adc
pop
pusha
or
call
gs
dec
xor
xlat
hlt
in
xlat
shl
sahf
add
cmp
mov
xchg
mov
sub
jle
les
int3
aad
jae
in
loop
test
sbb
sbb
inc
sbb
js
movs
xor
and
jge
test
push
imul
je
std
mov
movs
push
movs
popf
fcmovb
(bad)
iret
dec
or
sub
sbb
ss
stos
add
mov
or
in
in
cdq
stc
mov
cmp
jmp
rol
test
jb
cmp
int
out
cmp
cmp
pop
rcr
lods
fimul
mov
push
mov
mov
cdq
das
mov
inc
lds
jge
ret
jmp
inc
add
scas
shl
and
repnz
jg
loopne
xlat
aas
inc
dec
cwde
leave
pop
sbb
cmc
lods
shr
mov
in
pop
mov
jl
xor
out
sbb
hlt
repnz
mov
push
mov
imul
mov
inc
dec
adc
ins
mov
fdivp
mov
mul
outs
jo
push
arpl
xchg
adc
ror
rcr
pop
sub
fstp
mov
dec
dec
jne
inc
in
xor
pop
jg
inc
pop
inc
(bad)
adc
lock
push
cmp
les
mov
es
cmp
into
push
movs
imul
sbb
bound
shl
mov
mov
mov
je
mov
nop
not
mov
mov
jb
sub
repnz
adc
cmp
mov
std
sti
or
daa
jp
sar
push
pop
and
mov
ret
pop
cld
pop
jnp
mov
mov
mov
mov
shr
movs
push
loope
cmps
mov
stos
add
div
cmps
inc
sbb
addr16
fsub
rcr
shr
push
push
movs
cmp
cmp
add
out
xchg
in
inc
test
lahf
fcmovnbe
pop
stc
adc
sti
mov
ror
and
fs
jbe
adc
stos
pop
cmp
sub
xchg
push
(bad)
cld
outs
es
jb
rol
adc
inc
int
aam
mov
shl
cmps
fcomip
out
pop
sbb
shl
add
sub
mov
shr
fwait
stc
push
sbb
jl
jb
cli
adc
jnp
jle
sub
push
jns
shr
(bad)
popa
shl
jo
out
inc
test
mov
and
loopne
imul
mov
xlat
shl
xchg
push
hlt
cmp
mov
xor
stos
sahf
stos
ds
shl
mov
push
mov
push
jle
mov
inc
cmp
dec
push
cmp
mov
push
lods
pop
sbb
jl
sti
cmp
pop
pop
fmul
push
aas
mov
pop
popa
lahf
cdq
xor
xchg
test
mov
(bad)
bound
fdiv
mov
jmp
adc
retf
dec
push
into
xor
mov
repz
adc
inc
shl
cli
mov
push
adc
jo
out
inc
mov
fnstsw
add
arpl
jnp
pusha
sub
push
out
jp
mov
scas
out
into
and
les
sbb
aas
outs
popf
mov
inc
inc
jl
or
test
test
rcr
lock
pushf
fidivr
jne
pop
push
loop
fs
mov
bswap
mov
(bad)
or
adc
push
push
loopne
in
add
daa
fs
inc
(bad)
in
addr16
imul
and
mov
push
imul
push
ins
hlt
cmp
cmc
push
jns
jnp
shr
out
rcr
jne
aaa
jl
add
jle
push
jle
pusha
hlt
clc
scas
lahf
dec
rcr
mov
and
pushf
aam
push
dec
add
or
xchg
mov
add
and
mov
call
(bad)
mov
dec
push
xor
les
mov
lods
movs
cli
shl
cmc
loopne
sub
sbb
test
xor
in
adc
sub
mov
std
add
loope
lods
dec
jl
mov
cdq
or
retf
pusha
mov
xchg
or
push
sbb
xchg
in
push
jne
push
shr
pop
fsub
dec
rcr
jns
mov
mov
jns
int3
push
push
and
mov
inc
rol
xor
dec
dec
adc
mov
dec
mov
xor
inc
or
jb
xchg
and
push
pop
gs
sbb
mov
int
add
push
jle
or
mov
push
push
shr
cwde
lds
(bad)
cmp
into
jecxz
pcmpeqw
sub
push
lds
aad
mov
(bad)
jmp
ror
cmps
scas
out
lock
push
push
push
femms
lds
cmp
out
loope
xchg
vrcpps
popf
leave
fisub
xchg
in
hlt
icebp
jne
arpl
mov
jmp
adc
mov
add
test
mov
pop
push
scas
rcl
or
sbb
pop
push
pop
push
or
lods
(bad)
aam
pop
push
int3
mov
mov
test
sbb
std
adc
add
aaa
leave
fadd
mov
xor
loop
mov
or
call
inc
push
popa
in
adc
xor
jge
and
shl
mov
out
and
sub
retf
mov
cmp
call
pop
dec
mov
outs
inc
xchg
dec
cmp
ret
push
loopne
mov
addr16
(bad)
and
mov
ret
cdq
mov
mov
push
bound
push
imul
add
addr16
je
cmps
and
les
xor
inc
stos
inc
js
dec
stos
repnz
loop
mov
xor
cld
arpl
sbb
shl
leave
mov
xor
arpl
stc
push
adc
adc
inc
mov
jae
mov
push
push
adc
fs
mov
cmp
or
mov
jg
or
ins
cmp
in
mov
fmul
out
pop
jl
outs
pop
push
imul
cli
push
dec
add
aaa
inc
ins
vpsllq
inc
xor
ins
lods
movs
adc
xlat
cmp
je
xor
ret
call
(bad)
xor
lea
adc
cs
cmova
dec
add
cs
not
push
stos
or
(bad)
fstp
lahf
in
les
jl
jae
imul
(bad)
pop
add
ja
loopne
sbb
pop
push
pop
xchg
add
xchg
call
stc
sar
or
(bad)
jnp
inc
pop
or
gs
push
in
jo
outs
test
sub
sbb
mov
ret
fwait
je
sbb
mov
cmp
fidivr
mov
and
xchg
daa
scas
jbe
imul
popf
mov
lods
xchg
icebp
sub
sub
ret
or
js
add
push
mov
inc
or
or
adc
mov
adc
sbb
jnp
or
xchg
test
mov
add
dec
mov
stos
test
mov
sub
jbe
jg
adc
adc
xchg
cwde
push
cmp
mov
test
mov
xor
ror
add
lods
dec
dec
ja
js
cmp
jo
push
cmp
jg
cmp
test
arpl
inc
sub
inc
ja
mov
xor
daa
sbb
div
sbb
or
push
sti
lods
push
push
ss
ds
xchg
cmp
adc
add
push
mov
(bad)
repnz
ficomp
sbb
fsub
and
mov
add
stc
add
imul
arpl
pop
or
movs
fst
jns
jmp
mov
data16
cmp
js
dec
fdivr
stos
mov
inc
(bad)
xchg
movs
in
cli
dec
in
ins
adc
cmps
std
xchg
xlat
outs
inc
jle
pushf
xor
jbe
sbb
lea
nop
test
call
pop
mov
out
mov
movs
shl
cmp
imul
add
fwait
adc
imul
cmps
mov
pop
and
loope
into
outs
dec
adc
dec
cmp
mov
shl
rcl
jle
adc
mov
iret
inc
in
and
or
mov
xor
call
sbb
add
int3
add
dec
inc
mov
int3
loop
mov
or
lock
sub
mov
jo
lea
and
cmc
fs
popf
imul
sub
imul
pop
xor
jp
(bad)
fst
inc
add
push
out
addr16
mov
jbe
xchg
sub
inc
push
pop
sub
pop
movs
jmp
fdiv
int
xor
shr
mov
test
pop
leave
or
lahf
xor
jle
xor
jae
stos
enter
mov
lea
rol
lds
mov
(bad)
rol
xor
popf
stos
mov
xor
(bad)
inc
dec
and
gs
cmps
pop
adc
sbb
push
push
xchg
(bad)
and
and
jb
mov
sub
jge
(bad)
push
add
lea
mov
les
arpl
pop
enter
mov
mov
jo
addr16
call
push
inc
mov
stos
lock
xchg
les
int
or
pusha
(bad)
aad
xor
xor
xchg
mov
dec
mov
xchg
aam
rcr
shl
pop
mov
cmp
ins
rol
pop
mov
out
jl
push
xor
mov
push
sbb
nop
inc
xchg
lea
paddw
xor
pop
cmp
sbb
xchg
push
aad
sub
sub
jns
loope
xor
jmp
paddusb
stc
ret
std
mov
icebp
inc
jno
icebp
outs
mov
add
call
sbb
dec
popf
mov
xchg
not
push
jmp
test
in
(bad)
out
out
hlt
mov
out
mov
in
lods
leave
cmp
and
inc
jne
cmp
xchg
push
aaa
call
and
dec
dec
cld
jae
dec
xchg
mov
enter
mov
cmp
in
test
(bad)
mov
fcomp
or
scas
add
out
mov
(bad)
cmc
clc
pop
retf
push
add
(bad)
dec
stos
jecxz
bound
aad
sub
cmp
vphadduwd
in
jmp
mov
call
cwde
push
cwde
scas
loopne
mov
fmul
out
mov
pop
jae
ficomp
(bad)
sbb
and
fwait
mov
sbb
dec
repz
inc
add
sbb
pop
jmp
call
cld
adc
cmp
xchg
call
push
xlat
icebp
dec
mov
jmp
fisub
cdq
daa
xchg
fnstsw
pusha
push
repz
outs
test
sbb
clc
fisub
mov
mov
je
pop
je
sbb
push
inc
data16
js
add
dec
in
fnsave
inc
or
in
jle
xchg
jns
push
jle
mul
shr
jge
stos
jecxz
ja
lahf
dec
jne
mov
inc
adc
jecxz
or
iret
inc
outs
movs
psubusw
add
cs
div
sbb
fs
push
jmp
mov
(bad)
cmps
sub
into
jmp
inc
loope
cmps
int3
stc
mov
mov
fisttp
(bad)
out
inc
xchg
stc
jmp
jp
aas
mov
mov
or
adc
adc
cmps
mov
sbb
enter
(bad)
test
adc
pop
into
fs
dec
mov
mov
iret
push
add
xlat
loop
xor
inc
cwde
xor
xor
adc
inc
sub
test
jl
pop
lds
inc
aaa
mov
pushf
test
jge
enter
add
and
movs
or
rcr
inc
pop
mov
push
push
push
ja
daa
cdq
xchg
icebp
and
lds
es
push
call
inc
mov
add
jmp
das
xchg
sub
fadd
rcr
outs
add
pop
pop
mov
out
push
mov
inc
add
jl
jb
dec
or
test
in
inc
fsubp
(bad)
sbb
mov
xor
aas
dec
mov
xchg
adc
add
cwde
fs
mov
sub
lahf
fdivr
cmp
in
mov
mov
sub
sbb
mov
ja
push
sbb
(bad)
aas
lock
xor
mov
cwde
adc
sub
jne
iret
outs
movs
cld
cwde
fs
fild
adc
lds
popf
ret
popa
fsubr
push
xchg
xchg
mov
shl
add
add
(bad)
int
and
retf
inc
jmp
push
inc
in
jbe
xchg
or
or
push
es
ins
(bad)
sub
dec
xlat
add
rcr
jp
or
mov
int3
mov
mov
fsubr
clc
push
in
hlt
adc
mov
dec
movs
xor
pop
outs
cmp
test
(bad)
or
jle
and
xor
mov
lahf
jmp
dec
dec
sahf
out
sahf
in
add
pxor
cs
mov
je
pop
fldcw
or
pop
mov
and
mov
jp
scas
lds
in
inc
pop
pop
xor
cmp
out
jmp
push
popf
pop
push
push
and
hlt
into
ja
fbld
and
inc
(bad)
fwait
and
dec
xor
xchg
imul
popf
xor
dec
cmps
ret
lahf
fidiv
adc
movs
adc
lds
pcmpeqw
lahf
dec
enter
(bad)
cmp
arpl
or
lods
(bad)
js
(bad)
lods
test
jbe
ror
sub
mov
lea
shr
enter
inc
pop
push
call
mov
xlat
je
in
mov
cs
cmp
inc
adc
jmp
mov
pop
stos
inc
fdivr
ret
or
xlat
bsr
mov
int
xlat
xor
and
push
mov
xchg
cmp
push
or
push
enter
fidiv
mov
jmp
les
lods
lea
cs
and
setno
xchg
test
pop
movs
mov
clc
jae
push
aam
jg
cld
fnstcw
into
lods
in
mov
movs
sub
cli
cmp
cmp
inc
jl
jns
dec
and
(bad)
cdq
ret
cwde
xchg
call
(bad)
mov
mov
movs
ret
outs
out
xchg
jnp
popa
inc
movs
mov
mov
jmp
adc
inc
leave
mov
push
xor
inc
mov
retf
push
pop
shl
pushf
cmp
pop
daa
xor
sub
(bad)
pop
inc
add
cmp
inc
xlat
add
and
fisubr
push
movs
push
fdivr
loop
(bad)
xor
loopne
mov
movs
add
mov
xchg
dec
fimul
test
xchg
enter
leave
stos
cs
mov
dec
mov
add
int3
scas
fbstp
mov
bound
shl
jmp
push
sbb
idiv
xchg
mov
fs
test
adc
(bad)
(bad)
std
and
inc
xor
clc
stc
test
push
sbb
dec
into
jns
pop
std
push
sbb
mov
sub
fwait
pusha
mov
call
and
retf
add
lods
bound
int3
cmps
pop
mov
pop
dec
call
jl
sub
xchg
xchg
outs
xchg
dec
add
call
mov
or
out
sbb
cmp
(bad)
pop
and
stc
inc
jmp
stos
pusha
bound
aaa
aas
fsub
mov
or
and
mov
or
inc
mov
(bad)
icebp
cmp
in
test
retf
and
inc
(bad)
arpl
pop
gs
pop
jge
outs
repz
lods
sub
mov
ss
mov
cdq
sbb
pop
mov
inc
(bad)
hlt
mov
mov
lahf
pop
clc
mov
popa
dec
mov
retf
cli
ds
fild
fldlg2
mov
mov
mov
icebp
mov
push
pop
int
rol
adc
lock
adc
push
(bad)
xor
mov
and
sbb
fwait
jno
aas
dec
stos
or
pop
imul
dec
and
bound
in
jmp
(bad)
in
ficomp
push
idiv
addr16
or
jge
push
jp
inc
pop
cmps
mov
push
adc
fmul
ds
test
sub
cmps
sub
cdq
dec
fcomi
dec
push
adc
shr
pop
push
test
inc
xor
push
adc
adc
inc
mov
retfw
add
dec
shl
push
shl
aam
lock
push
arpl
xor
push
and
xlat
push
cwde
dec
and
loope
adc
push
mov
xchg
fpatan
das
jle
lea
into
js
xor
fmul
loope
push
and
inc
jge
call
sub
fdivr
inc
imul
fsub
popa
das
and
sub
inc
mov
mov
in
out
add
xor
inc
and
jmp
cmp
test
rcr
push
pop
out
push
adc
inc
xor
xor
stos
mov
arpl
or
fdivr
ret
out
cmp
xchg
cmp
(bad)
cld
sub
mov
in
or
push
loopne
and
nop
arpl
(bad)
call
sbb
test
xlat
fisubr
mov
lds
xchg
adc
ret
mov
rcr
je
lahf
rcl
retf
add
clc
sbb
push
adc
push
add
loope
mov
and
dec
out
push
mov
push
sbb
(bad)
shl
iret
lds
xchg
je
fld
mov
sub
cmp
or
pop
pop
push
loope
call
and
sub
jg
inc
mov
add
add
adc
imul
mov
inc
and
enter
(bad)
and
pop
jnp
jle
push
xchg
push
mov
jno
mov
popa
xchg
nop
sub
ja
ss
xor
jo
push
adc
outs
and
popf
xchg
pop
jae
test
pop
pop
je
movs
xchg
aas
stos
and
stos
sub
cmps
cmp
push
pop
mov
xchg
lods
arpl
aas
and
repnz
xlat
dec
cmp
aam
mov
or
adc
stc
mov
sbb
dec
dec
repz
loope
dec
addr16
imul
fcom
stc
sbb
ss
imul
lods
arpl
pop
and
add
lahf
mov
pop
mov
test
lods
jp
dec
mov
fistp
sub
movs
(bad)
scas
mov
in
dec
push
fidivr
and
jns
push
fsub
push
rcl
cmc
mov
retf
loopne
jno
jno
sbb
cmp
mov
cmp
in
or
(bad)
jge
ret
mov
mov
mov
pop
mov
gs
clc
aaa
lea
out
imul
mov
add
xchg
pop
pop
inc
aas
mov
and
jmp
rcl
leave
stc
in
les
or
cmp
int
jmp
loope
sbb
fld
rcr
std
sbb
jmp
test
int3
pop
pop
mov
xchg
sub
stos
cmp
bound
inc
pop
xchg
dec
sbb
add
iret
sub
push
and
push
or
adc
pusha
outs
jne
pop
jl
or
inc
shl
add
jns
aas
pusha
in
lods
mov
cmp
jo
or
jmp
std
jo
and
adc
(bad)
cmp
mov
and
jmp
repnz
cmp
dec
or
jnp
jp
push
dec
popf
arpl
ss
or
(bad)
cmp
ss
jae
fdivr
push
(bad)
adc
je
dec
jnp
xor
icebp
xchg
adc
sbb
fistp
mov
push
xchg
out
jno
repz
inc
push
retf
cmp
cs
add
into
cwde
(bad)
std
jmp
fist
test
mov
es
push
(bad)
addr16
push
inc
sub
add
push
jecxz
call
xor
mov
inc
add
push
retf
andps
cwde
pop
xchg
or
test
aaa
jo
jno
retf
mov
push
int3
xchg
sahf
lea
or
aas
dec
out
std
xchg
or
mov
push
jne
xchg
xchg
xlat
bound
add
inc
cdq
or
mov
push
sub
lods
in
movs
cmp
enter
pop
retf
pop
bound
mov
shr
(bad)
dec
test
nop
jmp
iret
std
inc
xchg
dec
das
push
sub
dec
pop
sar
idiv
jge
outs
pop
xchg
adc
cmp
add
mov
push
mov
push
gs
pop
mov
jbe
add
xchg
aas
(bad)
xor
pop
mov
(bad)
pop
icebp
cmp
sub
add
or
and
jns
aaa
sub
cmp
out
add
iret
lock
xor
dec
xchg
mov
adc
call
sub
sbb
dec
push
ficom
push
pop
cld
idiv
mov
popf
mov
or
nop
out
or
pusha
lods
cmp
(bad)
dec
mov
jecxz
jge
in
inc
sub
mov
mov
cli
xor
movs
nop
(bad)
jo
mov
loope
or
loopne
jae
aaa
cmp
ss
inc
xor
or
icebp
adc
inc
xor
sbb
jmp
addr16
out
rol
lods
rcr
aas
in
adc
ss
push
xchg
and
mov
mov
mov
mov
loopne
sub
outs
mov
xchg
cmps
outs
lahf
xchg
and
push
(bad)
pushf
push
mov
pushf
(bad)
lods
add
adc
mov
xchg
xchg
iret
rol
jae
jae
shr
aas
sar
sbb
push
int
adc
lock
dec
das
bound
outs
mov
cdq
fild
xchg
out
outs
das
or
xchg
push
loope
pusha
(bad)
push
(bad)
cmp
sbb
mov
out
xor
into
jno
lea
mov
test
add
iret
mov
pop
fstp
addr16
jo
xor
and
ret
dec
jbe
inc
mov
push
ficomp
sahf
jbe
dec
jbe
in
sar
in
or
cmp
enter
mov
outs
mov
mov
scas
pop
dec
jno
rcl
clc
cmp
arpl
leave
inc
nop
sbb
aad
lods
cmps
fdiv
ss
pushf
aad
sti
shl
pop
sbb
sahf
pop
dec
sub
push
ds
mov
inc
mov
dec
or
out
xchg
inc
jnp
enter
jmp
in
inc
lock
aam
push
(bad)
fld
fsubr
inc
mov
jmp
pop
or
inc
out
add
ds
in
sub
or
scas
adc
(bad)
dec
and
mov
inc
in
or
mov
cmp
or
push
pop
in
jge
and
push
inc
mov
rcr
dec
xlat
inc
movs
and
sub
fbstp
push
stc
pop
cmps
shr
(bad)
xlat
outs
mov
ins
push
pop
dec
aas
mov
lods
sub
inc
stos
sub
fcomp
(bad)
outs
loopne
pop
retf
cmp
ror
add
in
in
push
je
adc
pop
jb
rol
sub
xor
loope
adc
push
fs
cmpxchg
enter
add
(bad)
out
adc
and
mov
push
data16
and
push
dec
call
cli
mov
add
imul
popf
jmp
stos
test
mov
out
sahf
jne
cmp
sbb
dec
mov
sbb
or
iret
inc
retf
xor
ins
test
leave
sub
popf
inc
adc
xchg
mov
popf
in
inc
(bad)
mov
lock
int
cmp
(bad)
push
iret
stos
call
loop
aad
mov
iret
mov
add
shr
pop
repnz
rcr
es
jns
loope
mov
call
rcl
fs
(bad)
(bad)
retf
pushf
(bad)
fistp
ja
loopne
or
add
pop
push
pop
add
inc
push
mov
xchg
(bad)
leave
xchg
out
pop
ins
pop
inc
in
push
aaa
ficom
xlat
aad
out
stc
inc
inc
add
stos
pop
pop
fdiv
stc
cmps
mov
test
xchg
and
and
pushf
xchg
into
add
fwait
jmp
jp
xor
xchg
jb
sahf
pop
cmp
or
cmps
ins
sahf
jmp
jne
mov
(bad)
or
retf
mov
and
xor
add
and
xor
adc
outs
pop
ins
sahf
mov
loopne
pushf
test
pop
jl
fyl2x
xchg
fucom
mov
cmp
movs
jmp
adc
or
sub
pop
cld
sub
call
inc
cmps
xor
daa
jbe
aam
add
mov
pop
xor
(bad)
mov
repz
fcom
jmp
nop
sbb
or
inc
sahf
sbb
lods
pushf
mov
xchg
pcmpgtb
inc
jmp
popa
dec
lods
iret
stos
(bad)
xchg
push
jle
inc
mov
cmps
ds
adc
and
rol
xor
ret
(bad)
and
mov
mov
sbb
mov
pushf
sbb
cmp
aas
std
cmc
ret
xor
ret
out
adc
pop
cli
in
fcmovnu
add
sub
sbb
outs
sbb
xchg
lods
ds
pop
lock
lock
push
stos
cmp
rol
cmp
ins
jno
nop
xor
jl
push
dec
xor
push
dec
stc
js
jb
inc
lahf
inc
jae
pushf
mov
push
pop
lea
outs
cmp
leave
ss
imul
ret
outs
sbb
imul
or
sbb
rcr
sub
xchg
or
pop
aaa
pop
gs
xchg
jmp
gs
mov
out
mov
(bad)
inc
jbe
jp
pusha
adc
mov
and
(bad)
(bad)
lahf
call
push
xlat
xor
mov
(bad)
mov
retf
fidiv
jmp
les
mul
push
pop
jmp
jae
xor
or
sbb
(bad)
pop
pop
clc
add
xchg
addr16
cmp
mov
xor
mov
inc
leave
sbb
mov
in
aas
fs
cmps
push
jns
inc
shl
cmp
cmp
cwde
test
dec
jp
push
xchg
stos
adc
pop
icebp
or
sub
out
pop
xchg
rep
test
push
xchg
cdq
idiv
dec
add
mov
minps
(bad)
xchg
into
or
push
push
xchg
ficomp
fisub
test
sub
popa
push
sub
or
push
jmp
sub
adc
call
mov
or
mov
adc
jae
dec
shr
cs
pop
call
xchg
aaa
mov
stc
jl
jp
xor
dec
cwde
pusha
lods
addr16
in
imul
repnz
sbb
aad
ds
je
inc
les
xor
fimul
scas
fisttp
pop
sbb
pop
jmp
and
pop
xor
pop
sahf
sub
cwde
mov
cmc
dec
ficomp
adc
jmp
lods
mov
movs
stos
mov
fprem
xchg
jge
loope
std
jmp
popf
mov
out
mov
push
lock
inc
push
xor
pop
out
ficom
mov
fcomp
movs
ret
cdq
mov
cmp
in
aaa
jecxz
dec
inc
lds
les
push
xor
sub
bound
call
sbb
hlt
(bad)
xor
jbe
mov
in
jns
addr16
in
xchg
sbb
int3
adc
sub
cwde
js
add
out
iret
cwde
daa
jmp
(bad)
fwait
icebp
adc
(bad)
jge
push
mov
imul
fs
cld
daa
mov
push
fimul
jns
inc
fcmovnbe
test
adc
ror
or
int3
mov
pop
jns
inc
scas
aas
and
out
daa
inc
pop
pusha
mov
sbb
aaa
adc
mov
mov
ret
int3
push
jne
pop
cmp
(bad)
cdq
cmp
stos
dec
jns
sahf
and
mov
(bad)
adc
mov
adc
jo
adc
add
cli
sahf
add
xchg
dec
push
fisub
test
cmp
icebp
pop
dec
sub
mov
imul
inc
jg
cmc
loop
ret
(bad)
loopne
shr
mov
mov
ret
push
and
xor
sub
cmps
and
shl
or
(bad)
lea
xchg
adc
fistp
pop
les
lods
scas
outs
adc
cmp
lahf
(bad)
leave
mov
inc
fidiv
daa
jb
scas
pop
cmp
dec
lods
jnp
(bad)
cmp
mov
(bad)
in
inc
mov
fist
push
mov
sbb
sub
and
push
xchg
xor
ins
cli
or
inc
ins
push
enter
mov
mov
mov
inc
repz
xchg
fld
jmp
shl
xor
mov
out
xchg
pop
stos
xchg
into
mov
outs
stos
mov
push
iret
adc
popa
xchg
inc
(bad)
pop
mov
or
push
xor
ds
mov
lods
cmps
ja
jg
loope
iret
xor
pop
ins
inc
in
mov
add
aad
clc
movs
das
xor
out
cld
fwait
(bad)
hlt
sbb
jl
push
icebp
sub
mov
xchg
and
mov
int
cmp
enter
pop
cmps
dec
das
stos
stc
pushf
xchg
stos
das
lods
cmps
gs
aam
xor
dec
ja
or
inc
jbe
stc
imul
adc
out
sbb
and
inc
jo
and
and
mov
test
add
mov
jecxz
test
cld
fs
dec
outs
loope
hlt
mov
std
outs
mov
pop
fsub
or
cmp
mov
imul
js
xor
inc
scas
(bad)
jl
int
(bad)
pop
enter
out
clc
sbb
mov
sti
and
sti
dec
sub
mov
mov
xor
ret
sbb
ins
add
(bad)
cmp
dec
ret
jo
pop
jmp
daa
adc
mov
sub
sar
adc
pop
daa
mov
inc
mov
inc
mov
push
cmp
or
mov
scas
cmp
mov
push
pop
test
imul
js
add
daa
int3
jge
xchg
adc
jne
sub
sbb
adc
loope
out
loop
test
leave
push
outs
xchg
adc
xchg
inc
add
mul
and
js
lahf
mov
retf
jmp
pop
inc
and
jmp
test
rol
leave
cmps
imul
cli
(bad)
mov
and
mov
cmps
xor
dec
push
dec
fsubr
stos
adc
retf
xchg
in
push
scas
bound
ja
mov
and
jne
ret
cmps
mov
into
or
mov
ficom
or
nop
call
add
daa
stos
ins
xchg
(bad)
scas
mov
inc
fcom
inc
mov
push
loop
sahf
mov
daa
xchg
add
arpl
pop
in
sar
jl
sbb
sti
inc
jmp
cwde
mov
adc
and
fcmovb
rcr
neg
mov
or
ins
imul
adc
out
retf
push
imul
je
pop
cmp
cmp
cdq
inc
or
cmp
hlt
test
mov
pop
adc
xchg
std
int
add
push
js
loope
dec
or
xlat
inc
inc
mov
adc
icebp
xchg
cli
bts
xor
xchg
cmp
gs
clc
xlat
call
dec
neg
cmove
sub
into
frstor
sbb
lahf
sbb
fnstenv
lods
int3
fnsave
dec
imul
mov
inc
mov
test
ror
lea
xor
xchg
es
lds
mov
fild
dec
std
imul
sbb
movs
sbb
mov
or
inc
int3
cld
dec
push
test
(bad)
fnstsw
fwait
cmp
mov
xchg
adc
scas
adc
ins
ins
adc
xchg
or
sbb
pop
inc
repnz
retf
out
and
lods
iret
repz
es
arpl
and
loope
fcomp
mov
loopne
cli
mov
xchg
and
movs
aam
mov
mov
xchg
lock
pusha
inc
scas
test
call
xchg
call
jo
stos
xor
in
les
cli
scas
add
xor
jb
outs
and
xchg
mov
sbb
cmps
popa
ror
push
jmp
in
cld
push
retf
stos
mov
mov
inc
jnp
rcr
jno
push
add
inc
addr16
in
sub
(bad)
je
bound
cmp
iret
cwde
es
lock
fld
push
ins
test
repnz
pop
(bad)
mov
xchg
out
mov
mov
ds
add
mov
adc
mov
imul
mov
call
mov
lds
or
jno
mov
(bad)
repnz
out
imul
xchg
fwait
mov
sti
inc
daa
xor
fdivr
leave
fs
adc
(bad)
pushf
push
aad
add
mov
pop
and
js
sub
shr
call
dec
fild
sti
das
sub
mov
std
mov
jne
cmp
out
adc
mov
sbb
inc
rol
xor
lock
neg
mov
push
push
stos
in
adc
adc
mov
pop
clc
call
cli
pushf
inc
pop
imul
aad
loope
call
or
mov
sbb
leave
les
in
adc
pop
fistp
loop
pop
mov
add
fld1
fucomp
imul
(bad)
xchg
xor
or
call
xor
xor
pop
dec
shr
and
cmp
and
fld
pop
cs
aas
cmp
mov
pop
jmp
(bad)
cmp
test
pop
and
shl
scas
ins
xor
dec
xchg
leave
or
test
cwde
push
xor
test
dec
mov
scas
push
js
xchg
jno
jmp
or
loopne
inc
repz
push
mov
fs
(bad)
test
cdq
in
jg
and
dec
jb
pusha
test
jmp
jge
addr16
outs
gs
clc
fisub
pop
cmp
sub
loope
push
inc
ret
ins
cmps
ja
addr16
fadd
icebp
jb
std
fisub
and
sub
sbb
and
and
mov
stos
and
adc
mov
out
sbb
sub
fild
out
mov
aaa
inc
cmp
out
pop
clc
push
lahf
ror
call
add
outs
mov
jnp
ror
lds
jl
push
lds
iret
add
jg
jnp
in
ret
pop
punpckldq
xchg
cmc
jge
aad
into
ins
test
outs
aam
add
jmp
(bad)
push
jg
pusha
adc
cld
and
fiadd
sub
xchg
inc
mov
pop
or
xor
fisttp
xor
and
mov
jmp
mov
sti
jb
push
push
jne
xchg
retf
lds
fcmovbe
add
xor
cmp
xor
retf
js
mov
lea
(bad)
sub
fsub
push
daa
xchg
sbb
jp
xor
xchg
(bad)
fdiv
sbb
xor
in
cmp
adc
in
xchg
inc
jae
in
cmp
and
cmp
add
jns
sti
push
jns
mov
xchg
fist
adc
and
xchg
and
pop
je
pop
sub
ss
jae
pop
aas
loop
jmp
cmp
aaa
aam
push
arpl
mov
pop
adc
adc
fs
cmp
das
outs
je
pop
and
loopne
inc
xchg
(bad)
cmp
mov
adc
push
movs
cld
jge
xor
(bad)
outs
mov
jmp
outs
lea
sti
ret
int3
pop
ror
test
outs
lahf
mov
sbb
fisub
mul
shl
push
stos
pop
pop
push
(bad)
ja
aam
mov
mov
xor
add
fdiv
lods
fbstp
ins
ret
xor
inc
int
pop
inc
enter
sbb
inc
mov
mov
push
sbb
xlat
mov
and
mov
mov
rcl
jb
mov
mov
ror
mov
mov
jg
fiadd
lock
mov
add
loop
data16
popf
int
mov
retf
mov
int
hlt
and
mov
js
(bad)
cmc
loopne
outs
retf
and
data16
jne
rcr
les
xor
sbb
inc
shl
mov
lea
jnp
ja
cli
push
push
xor
faddp
scas
iret
sub
aam
in
xchg
sbb
lea
mov
inc
sar
dec
add
adc
fadd
or
scas
pop
into
std
out
rol
sbb
mov
into
pop
mov
int3
test
fist
(bad)
mov
mov
add
(bad)
js
xchg
popa
push
bound
(bad)
mov
mov
cmp
stc
pop
pushf
or
lds
xchg
loop
sub
add
jnp
clc
mov
and
pop
push
into
mov
in
clc
dec
xchg
lea
cmp
das
pop
push
mov
data16
push
mov
jnp
pop
xchg
dec
imul
clc
mov
xchg
mov
pop
frstor
out
pop
mov
jns
or
fisttp
adc
scas
outs
stc
test
sub
jno
cmp
stos
cmp
xchg
imul
repnz
mov
push
xchg
jno
fwait
sbb
test
imul
jle
repz
addr16
popa
xchg
mov
mov
jb
mov
and
test
in
cdq
adc
mov
or
sbb
dec
outs
xlat
shl
cmps
rcr
sub
adc
into
adc
or
sbb
xchg
je
mov
pop
mov
pcmpeqb
test
jmp
cmps
or
or
mov
iret
fwait
adc
ror
add
gs
gs
pop
dec
test
sub
int
fdivr
out
gs
mov
std
sub
mov
xor
xchg
mov
pop
sub
hlt
dec
mov
sahf
pop
out
sub
jbe
push
hlt
loope
ins
clc
push
sub
stos
test
ret
or
imul
popf
mov
and
daa
popf
gs
int3
iret
(bad)
mov
stc
pop
inc
push
sbb
je
adc
sbb
add
movs
fcomi
and
or
rcl
xchg
mov
pop
pushf
cmc
push
add
mov
xchg
jbe
sahf
dec
dec
test
adc
cld
adc
jae
jmp
inc
fdivr
push
imul
(bad)
(bad)
fmul
out
pop
cmp
mov
sbb
aas
call
(bad)
fdiv
in
pop
dec
cwde
adc
imul
test
arpl
(bad)
stc
or
lods
jmp
xchg
addr16
jmp
push
repz
cmc
sub
out
mov
adc
aaa
repnz
jle
sbb
sbb
dec
cs
add
arpl
(bad)
push
xchg
sar
and
(bad)
fld
pushf
push
cld
clc
(bad)
out
mov
jl
int3
mov
ret
popa
in
cmp
push
fwait
js
ret
pushf
jbe
xchg
iret
push
ins
dec
sbb
cmc
fimul
shl
mov
mov
icebp
xchg
outs
jp
pop
jne
mov
cmps
aad
mov
and
jle
mov
push
inc
scas
and
int3
bound
mov
jns
icebp
test
aam
arpl
int3
pop
cwde
xchg
ja
stc
clc
xor
push
inc
cmps
xor
addr16
enter
cli
cmp
retf
push
repz
xor
(bad)
sub
(bad)
jg
or
pop
sahf
sbb
js
(bad)
pop
mov
cdq
shr
popf
or
or
loop
movs
mov
dec
pushf
push
movs
aaa
call
sub
push
jb
add
sub
leave
lods
call
imul
add
cmp
cmp
popf
or
jl
sbb
add
dec
fbstp
test
adc
mov
int
ins
add
repz
lock
pop
cdq
inc
(bad)
jge
call
jl
push
push
pop
lock
test
cmps
aas
fdivr
or
adc
adc
cs
jmp
clc
cmps
aad
pop
(bad)
es
or
jae
jecxz
div
test
dec
lock
rsm
xchg
and
xor
(bad)
out
pop
cmp
push
xchg
adc
hlt
and
loopne
(bad)
push
or
mov
daa
mov
mov
cmp
cmc
daa
out
cmps
call
retf
push
pop
les
pop
mov
retf
sbb
enter
scas
fisttp
pop
outs
adc
aam
popf
mov
fs
xchg
ret
jo
outs
clc
mov
(bad)
adc
test
add
cli
popa
inc
movs
jo
test
rol
enter
popa
movs
and
adc
push
push
imul
fld
inc
into
inc
xor
jno
inc
push
inc
in
push
sbb
pop
ret
cmp
adc
or
add
shr
sbb
add
cmps
mov
loop
cld
loopne
push
arpl
(bad)
lahf
lock
mov
jp
jge
loop
call
inc
push
aam
add
cmp
loopne
pop
ficomp
cmps
outs
lods
lock
pop
iret
xchg
and
ins
mov
add
out
inc
ficomp
int
jnp
jb
rep
mov
jl
and
jmp
push
ror
sar
out
sbb
aam
mov
add
pop
popf
dec
out
loopne
adc
xchg
je
aaa
and
ins
or
scas
test
sub
add
inc
mov
repz
sub
mov
push
daa
mov
ss
into
sti
stc
shl
into
mov
pushf
jge
shl
mov
sub
arpl
jge
imul
jmp
mov
ds
adc
pop
mov
ss
sub
(bad)
mov
jl
dec
leave
test
mov
xchg
cmp
inc
das
rcr
mov
xor
dec
daa
stc
std
fwait
leave
ss
or
push
push
data16
out
shr
cdq
fcmove
add
pop
stos
jg
inc
dec
jmp
(bad)
fisttp
sbb
cld
and
pop
mov
test
dec
jb
pusha
ret
and
sub
sbb
(bad)
sbb
std
test
lods
(bad)
jg
and
stos
stos
jbe
xlat
sbb
pushf
bound
out
adc
or
loopne
test
cs
push
mov
lock
in
xchg
int
mov
cli
pop
cmps
(bad)
popa
mov
enter
mov
fs
jne
call
iret
mov
aad
sub
cld
cmp
xchg
push
jnp
nop
ins
jno
stos
lods
out
or
bnd
jp
xlat
out
cld
jmp
in
add
test
mov
xor
add
xor
retf
call
inc
iret
xchg
mov
aas
bound
push
or
push
dec
das
(bad)
ret
dec
dec
jg
les
cmp
stos
div
adc
hlt
je
xor
fsubr
mov
add
ds
rol
mov
shl
push
loop
ret
imul
cmp
inc
in
sbb
and
inc
jne
cmp
pop
sbb
out
or
nop
xchg
int
cmps
push
retf
sbb
xchg
jne
mov
sar
or
and
mov
mov
jnp
mov
sub
adc
jae
pop
cmp
imul
out
mov
mov
scas
push
iret
jge
mov
gs
shr
cli
or
cli
mov
es
lds
fistp
mov
push
in
sub
ss
ror
ficom
hlt
movs
fild
adc
jmp
cmps
(bad)
push
retf
(bad)
and
pop
out
lock
sub
mov
ins
dec
xchg
sub
mov
rol
sub
(bad)
push
cmp
pop
xor
out
pop
xchg
lahf
imul
push
sub
loope
and
mov
shl
cld
fcmovbe
mov
dec
mov
xchg
movs
pushf
aaa
sti
je
push
lods
es
push
add
dec
sbb
cmp
stos
shr
shr
inc
imul
mov
ins
cmp
mov
mov
mov
xchg
push
gs
sbb
daa
jl
test
lea
pop
hlt
iret
pushf
nop
ins
aaa
inc
shl
les
mov
les
ins
cmp
jnp
popa
cmp
xor
fmul
sub
mov
push
rcr
mov
mov
xchg
xchg
repz
test
cld
push
sti
call
retf
sub
jns
not
mov
imul
inc
sbb
push
adc
call
mov
imul
add
and
mov
ins
mov
add
xor
push
cmp
int3
into
pop
and
repnz
pop
sub
jle
dec
jecxz
mov
pop
clc
push
xchg
gs
cmp
xchg
pop
(bad)
pop
pop
mov
and
in
das
jp
enter
mov
imul
sub
and
fs
out
cld
jnp
jle
and
stc
jmp
movs
xor
sub
cmps
jae
cdq
sub
add
jge
aad
push
stos
(bad)
adc
xor
inc
outs
and
into
into
cmps
push
or
xchg
pop
push
mov
sub
fdiv
push
into
mov
setge
shr
push
repnz
push
push
fbld
xchg
loope
xlat
shl
dec
and
xchg
xchg
enter
aam
in
xchg
fcomp
out
sub
sbb
jnp
loop
jle
mov
loopne
mov
mov
sbb
add
retf
shl
test
pop
test
cmp
call
scas
xchg
push
jbe
call
ss
push
sbb
mov
jge
pop
retf
mov
or
pop
sbb
ss
fsub
mov
push
inc
push
bound
xchg
int
out
sub
jmp
in
sub
push
mov
xchg
mov
xchg
mov
jg
jmp
xor
test
xor
(bad)
mov
icebp
shl
jmp
gs
pop
stos
fcomp
dec
mov
xchg
idiv
cwde
mov
div
sub
push
ss
pushw
xor
mov
sub
cmp
call
lock
mov
pop
add
sbb
retf
les
add
pop
in
jp
xlat
mov
shl
xchg
jp
cmp
xlat
push
leave
lds
mov
in
sbb
inc
dec
sbb
cmp
xor
out
lock
movs
push
div
fidiv
pop
push
or
add
push
xchg
stc
bound
push
sar
xor
shr
jle
aas
xor
dec
shl
jecxz
inc
fild
inc
lock
push
inc
idiv
cmp
rol
push
ret
adc
leave
mov
mov
jle
hlt
ret
cwde
or
adc
mov
and
dec
lods
push
cmp
inc
inc
push
js
and
mov
stc
sahf
cmp
test
ret
mov
aam
cmp
pop
xchg
cmps
inc
sbb
mov
pop
push
fwait
jg
fmul
shl
stos
into
mov
out
arpl
xchg
pop
cmp
xor
in
mov
sub
out
cmp
repnz
fisub
mov
cmp
cwde
(bad)
ja
sbb
sub
xchg
iret
sbb
mov
mov
fisubr
js
push
aaa
mov
cld
sub
out
and
loopne
stc
sub
xor
pop
sbb
clc
xchg
imul
inc
adc
jbe
outs
mov
xchg
cmp
fyl2xp1
popa
mov
adc
hlt
mov
mov
(bad)
pop
mov
int3
sbb
bound
push
jnp
movs
test
add
adc
loope
pop
jmp
mov
imul
or
sbb
add
ret
pop
cmp
repz
xor
inc
ffree
add
aad
push
inc
sbb
add
mov
add
out
ins
xchg
xor
inc
cmp
dec
in
mov
cli
movs
cmp
jge
pop
mov
loope
cmp
movs
adc
sbb
mov
xor
shl
add
push
or
jle
push
movs
scas
test
fucomp
sbb
faddp
fdivr
mov
sub
and
cli
mov
es
mov
fcomp
jmp
stc
movs
mov
fidivr
mov
popa
pop
repz
call
ficomp
leave
adc
mov
inc
aad
inc
lods
add
dec
jp
pop
(bad)
pop
in
add
(bad)
arpl
ins
imul
dec
xchg
icebp
sbb
int
enter
push
mov
lds
mov
xchg
sbb
loop
and
ins
jg
mov
sub
pushf
loopne
imul
(bad)
inc
pop
(bad)
mov
or
out
pop
add
mov
popf
jmp
or
mov
pop
dec
cmc
inc
inc
push
sbb
fst
mov
lock
mov
dec
mov
ror
jmp
mov
push
addr16
stc
or
div
mov
adc
sub
pusha
fld
lock
cs
das
pusha
rcl
test
xchg
shr
add
ret
sti
(bad)
fidiv
inc
ins
and
nop
xor
mov
les
and
sbb
out
push
jb
dec
or
push
jae
mov
cli
xchg
sub
inc
sub
jo
cmp
cwde
retf
pop
aaa
lds
pop
cmp
ins
cmp
int
mov
xor
jecxz
or
inc
mov
xlat
stos
jnp
jl
cmps
sbb
ja
push
pop
fucomip
pushf
mov
inc
js
inc
je
add
sub
jno
mov
int
pop
xchg
and
js
push
or
rcr
mov
jne
push
fs
cmps
inc
rol
pop
outs
cmp
inc
xor
fidivr
iret
xchg
sub
mov
inc
sub
cli
adc
mov
jo
xlat
adc
pop
push
mov
les
das
sahf
mov
sub
mov
dec
jnp
and
mov
cmc
pushf
inc
cdq
sub
add
inc
cmp
std
dec
loop
push
jg
outs
ss
cwde
pop
jecxz
movs
retf
add
inc
xor
movs
push
mov
stos
std
sub
push
push
and
cmc
repz
pop
call
jle
mov
adc
jp
push
fidivr
(bad)
arpl
(bad)
mov
pop
fcmovbe
adc
mov
jge
jne
xor
les
retf
mov
add
popf
mov
cmp
(bad)
push
repnz
rol
xor
xchg
add
inc
push
dec
pop
inc
mov
mov
es
pop
(bad)
aam
push
add
add
pusha
test
fadd
jp
xor
pop
leave
stos
push
mov
and
mov
cld
mov
lahf
pushf
mov
pop
pop
sbb
xor
inc
jo
sub
arpl
add
add
sbb
sub
pop
mov
jg
cmp
mov
enter
sub
dec
push
loope
and
xchg
cmc
sbb
sbb
sbb
mov
push
and
ja
add
fs
(bad)
xor
test
jp
je
fisubr
fisubr
sbb
idiv
jle
cmc
popa
jl
iret
lds
mov
stc
inc
push
aam
jge
mov
call
in
fst
pusha
in
jg
push
adc
mov
and
cmc
(bad)
lock
pop
mov
push
mov
stc
out
add
mov
mov
test
jge
mov
mov
(bad)
jb
lahf
jl
sbb
jo
scas
inc
mov
dec
xchg
cli
dec
gs
dec
jp
jecxz
bound
mov
push
xor
push
cmps
add
mov
jmp
or
retf
push
arpl
push
ficom
mov
aas
(bad)
mov
(bad)
jge
pop
aam
mov
or
fst
pop
inc
ss
addr16
xor
jbe
mov
cli
xor
shr
aas
out
xor
ins
jns
enter
inc
pop
lahf
movs
sub
adc
les
popf
push
push
retf
sbb
adc
inc
je
out
in
iret
xchg
adc
and
inc
outs
push
pop
pop
mov
add
add
cmp
push
out
scas
push
cmp
sbb
mov
je
int
out
sub
mov
aam
adc
push
mov
daa
push
scas
in
xchg
ins
push
jae
push
ror
shl
daa
mov
jg
(bad)
stos
inc
jmp
test
dec
leave
ret
ins
jnp
hlt
vhsubps
mov
inc
push
fild
add
push
ss
sub
outs
jne
out
jl
test
push
nop
loopne
lds
loop
adc
pushf
mov
outs
jge
push
sub
adc
loop
ror
out
mov
mov
adc
cmp
xchg
push
mov
xchg
test
(bad)
pop
test
ret
sub
pop
inc
xor
fstp
mov
(bad)
sub
mov
push
ss
jmp
outs
xor
or
fcom
call
xchg
fisubr
outs
sub
push
mov
sub
adc
inc
daa
sbb
mov
adc
and
sub
xchg
mov
popa
rol
jae
dec
push
inc
push
sub
aad
int
mov
imul
stos
sar
outs
outs
das
leave
and
imul
leave
pop
mov
or
xchg
push
pop
test
sbb
mov
push
sub
mov
jg
test
loope
sub
or
push
enter
loop
dec
stos
aas
add
ret
jbe
mov
sbb
call
loope
push
or
mov
sbb
cmp
mov
shl
lds
shr
sti
push
or
or
mov
push
pop
add
jmp
(bad)
sbb
in
icebp
mov
add
push
cmps
xchg
mov
mov
or
fwait
jge
xor
in
rol
popa
mov
pop
shr
push
shl
popf
pop
and
jns
scas
adc
in
test
lock
inc
(bad)
js
enter
pop
dec
sub
out
or
dec
movs
bound
aas
movs
sbb
inc
rol
xchg
movs
pop
fwait
rcr
xchg
jo
xchg
fild
and
mov
push
pop
sub
lods
test
jo
xchg
ret
add
xor
outs
loope
dec
int3
mov
inc
mov
pop
sar
jb
xchg
je
add
les
xor
(bad)
inc
out
fmul
call
pop
aad
pusha
cmp
jne
outs
scas
(bad)
jle
fadd
cli
retf
pop
dec
pop
adc
out
add
adc
pop
nop
sub
adc
loope
push
ins
dec
das
xor
mov
lds
cmp
sub
arpl
mov
pop
lods
mov
out
scas
xchg
mov
lods
outs
push
js
push
call
jne
test
cmp
sahf
call
mov
(bad)
pop
fistp
jo
or
(bad)
pop
sbb
push
imul
xor
or
jge
push
ret
outs
pop
or
das
jns
adc
pop
add
sbb
retf
jmp
mov
in
pop
(bad)
push
fucomp
cmp
jnp
(bad)
push
in
sbb
mov
mov
push
xchg
add
xor
inc
mov
inc
test
rol
cli
dec
call
or
xlat
mov
jl
aam
rcr
sub
shl
jmp
loope
xor
in
int
mov
push
xor
cdq
pop
cli
in
jle
inc
movs
es
xor
daa
outs
add
sbb
mov
jnp
mov
xor
mov
daa
cmps
dec
fwait
aad
xchg
pop
popa
ficom
add
outs
ror
mov
jbe
or
lahf
inc
(bad)
pop
jle
or
mov
inc
mov
inc
inc
add
(bad)
ss
mov
ins
ror
mov
sbb
shl
jmp
call
inc
and
push
or
ret
sub
aaa
xchg
push
(bad)
pusha
mov
sub
xlat
in
test
rcr
or
rep
sub
or
cld
stos
mov
add
cwde
mov
mov
jle
xchg
jns
dec
or
shl
lds
movs
aaa
xchg
mov
jl
jl
sbb
mov
ds
(bad)
outs
in
js
add
pop
push
ss
mov
test
cdq
into
adc
jmp
not
adc
jo
mov
test
mov
inc
or
mov
and
pop
in
gs
dec
or
cs
movs
pop
add
call
or
ret
pop
push
sub
pop
mov
pop
push
pop
push
das
outs
inc
(bad)
jae
daa
arpl
in
jmp
daa
mov
pop
movs
data16
cmp
pop
adc
sbb
(bad)
out
xor
mov
ins
es
pop
xchg
(bad)
repz
lds
mov
cwde
mov
and
and
cmps
mov
pop
std
in
mov
and
cs
xor
ss
(bad)
xor
pop
xchg
sti
add
sbb
call
aas
fiadd
add
mov
inc
xchg
retf
xchg
jp
jmp
sub
aad
das
inc
adc
mov
dec
jno
jb
pop
add
xor
cmp
jmp
sbb
sub
mov
aam
and
jae
int
adc
popa
sbb
and
inc
mov
xor
inc
cwde
int3
addr16
(bad)
cmp
jecxz
push
js
mov
jp
popa
daa
rcl
and
push
pop
or
jge
adc
push
arpl
les
sti
xchg
and
adc
(bad)
mov
add
xor
outs
cwde
mov
jp
dec
jno
into
fwait
add
les
xchg
daa
out
fwait
test
dec
bound
(bad)
pop
mov
cmp
rep
lods
cmc
lds
or
fdiv
mov
out
and
mov
vmwrite
or
mov
mov
xchg
les
fcmovne
sbb
dec
xlat
sub
dec
xchg
dec
mov
xrelease
fsub
xchg
push
dec
and
mov
rcl
sbb
xchg
test
sub
xor
out
jmp
dec
std
ror
das
pop
jp
sub
mov
mov
out
cld
les
sbb
mov
cdq
sub
int3
or
(bad)
pop
or
sub
clc
cmp
fbld
and
dec
(bad)
or
frstor
iret
mov
jnp
mov
pop
and
(bad)
outs
sti
adc
mov
(bad)
(bad)
jmp
cmp
call
xlat
xor
cli
(bad)
xor
mov
icebp
sub
fbstp
int
jmp
out
(bad)
jmp
push
xchg
aas
(bad)
pop
xchg
mov
test
sbb
xor
or
test
push
cmp
stc
stos
jne
or
inc
pop
xchg
imul
jecxz
scas
loope
stc
das
imul
retf
loopne
and
sti
push
mov
dec
cmp
pop
sub
or
add
rcl
int
pop
rcl
mov
mov
adc
add
stos
mov
out
shr
mov
push
and
push
je
(bad)
adc
sti
add
leave
rol
cmp
mov
(bad)
and
int
jp
dec
(bad)
out
jo
mov
fnsave
movs
dec
add
icebp
add
lea
scas
or
dec
mov
shl
scas
sbb
mov
dec
pop
adc
es
push
mov
sbb
sub
sub
ret
in
inc
dec
outs
stos
pop
scas
or
fild
mov
(bad)
pop
mov
test
or
dec
jg
cmps
jae
fistp
jb
sar
fs
add
add
sub
sub
mov
sbb
push
and
jg
cs
sub
sbb
fbstp
outs
loop
fidiv
mov
push
pop
fs
outs
or
dec
retf
push
out
popa
or
pop
div
gs
jecxz
push
mov
inc
fidiv
mov
and
out
test
int3
jge
pop
inc
dec
int3
inc
push
adc
loopne
pop
and
mov
jge
jmp
hlt
(bad)
enter
pop
fs
mov
mov
sbb
mov
test
inc
mov
sub
dec
xor
fs
push
es
test
mov
and
shl
mov
cli
pop
xchg
fild
xchg
add
ja
adc
cmp
pop
mov
out
pop
shl
dec
push
sti
and
fwait
rcl
imul
in
add
loop
add
jmp
cld
ss
icebp
test
or
sub
cmp
(bad)
jmp
scas
xchg
fstp
add
mov
and
inc
add
add
dec
jo
pop
cmps
int3
test
loopne
and
push
outs
fist
loope
ins
dec
fld
bound
out
enter
movs
fisubr
(bad)
mul
fist
mov
stos
mov
xchg
mov
and
imul
icebp
pop
iret
extrq
sbb
sub
mov
das
jbe
daa
lds
add
retf
cwde
hlt
gs
jns
je
call
add
push
xchg
sahf
stos
ret
icebp
dec
jge
dec
mov
(bad)
test
ss
dec
xor
aas
mov
lods
xlat
ret
push
push
cmps
lea
test
pop
jecxz
popf
mov
lods
sar
clc
dec
repnz
rdmsr
addr16
push
aad
cmp
js
xor
cmc
pop
pop
hlt
mov
stc
add
adc
jae
cmp
cs
cmp
xor
fcomp
adc
or
(bad)
xor
sti
and
dec
xor
and
jbe
xchg
push
in
rol
inc
xor
dec
dec
mov
push
je
adc
sub
sti
sbb
xor
out
js
fwait
or
in
sbb
cli
hlt
sahf
dec
test
pop
int
jmp
jnp
sub
and
mov
stos
stos
inc
std
or
cs
jl
push
in
dec
mov
adc
sbb
leave
add
xlat
test
sub
sar
xor
inc
in
pop
pop
mov
jecxz
adc
xor
add
sar
shl
(bad)
dec
(bad)
mov
xchg
dec
shl
pushf
adc
push
(bad)
sbb
and
push
pop
sub
push
jno
loop
hlt
(bad)
xor
mov
push
or
ret
xchg
js
les
fistp
mov
stc
mul
test
movs
xchg
inc
fidivr
cld
bound
and
fisttp
mov
(bad)
push
iret
add
xchg
ret
sbb
jecxz
cmc
xchg
sahf
xchg
add
pushf
(bad)
mov
inc
push
mov
sbb
pop
popf
push
jns
jmp
mov
xchg
data16
scas
dec
adc
repz
push
or
adc
imul
lahf
cmp
cs
pusha
mov
and
frstor
call
ret
or
sub
jno
xor
and
fxch
lods
and
mov
mov
push
mov
xchg
std
mov
ret
push
or
pop
sbb
cmp
pop
orps
sbb
retf
jp
ret
pop
push
inc
cmp
xor
pop
loope
aam
xor
div
jp
rcl
pop
and
test
enter
or
mov
out
xchg
push
mov
inc
in
retf
shl
fistp
imul
push
or
jge
js
(bad)
mov
clc
hlt
mov
and
jmp
jae
and
fldcw
sub
dec
dec
cmp
repnz
icebp
dec
ret
push
jp
vmovhpd
sbb
push
outs
int
add
inc
or
mov
cli
bound
(bad)
out
push
pop
imul
shr
jmp
jge
pop
stc
and
repz
add
mov
and
imul
lods
repz
jmp
mov
or
xchg
mov
adc
mov
xchg
sub
outs
push
pop
cmp
cmp
gs
cmc
imul
mov
sbb
and
xchg
dec
popa
cwde
inc
inc
cmp
cmp
or
or
loope
dec
fadd
loope
pop
and
test
cmp
xor
push
jnp
nop
inc
aaa
clc
mov
pop
ins
hlt
pop
xchg
sbb
pop
stc
cmp
aaa
add
mov
mov
ficomp
add
enter
dec
push
fild
sahf
mov
inc
or
dec
cmp
ins
in
in
(bad)
jmp
int
in
imul
ins
inc
clc
cli
mov
jg
mov
cld
retf
cmp
stos
out
or
pushf
dec
(bad)
jbe
shl
jmp
int3
repz
ins
or
movs
cmps
cmp
cmp
push
dec
xchg
retf
push
mov
mov
xchg
test
pop
push
lods
ins
(bad)
sbb
xchg
loop
clc
bts
jnp
mov
dec
mov
dec
(bad)
fild
les
jle
inc
test
outs
xchg
xor
scas
or
clc
cdq
mov
jg
in
adc
inc
mov
xor
(bad)
adc
mov
loop
adc
rcr
lods
push
or
pop
adc
sbb
mov
call
dec
add
out
(bad)
mov
dec
dec
sub
jnp
leave
pop
pushf
jmp
mov
retf
mov
cli
mov
push
bound
lods
mov
sbb
sbb
inc
adc
mov
fmul
dec
pop
add
cmp
dec
lds
lods
or
sub
cmp
js
mov
aam
inc
packuswb
add
das
jne
jmp
ds
mov
add
cdq
int3
xor
outs
retf
jmp
xchg
jnp
nop
cmps
inc
sub
push
or
fstp
dec
jle
add
call
mov
rcr
cmc
xchg
outs
mov
leave
xchg
call
jl
xchg
cmps
mov
sub
pushf
in
pushf
lods
add
and
div
nop
in
aad
popw
sub
mov
lds
jnp
mov
int3
stos
cmp
out
sub
inc
ret
in
pop
xlat
icebp
int3
sti
dec
ss
adc
int3
ins
mov
mov
dec
test
push
arpl
and
mov
mov
fimul
mov
add
push
mov
lock
xor
xor
in
out
jb
xchg
jne
pushf
mov
addr16
ins
add
cld
cmps
inc
cs
cli
out
and
add
lea
(bad)
cmp
add
call
pop
mov
mov
enter
jp
adc
arpl
sbb
(bad)
mov
leave
pop
out
jecxz
pusha
xlat
fcomp
and
sub
mov
(bad)
or
repz
xor
test
(bad)
sti
add
sub
push
cmp
loope
jns
das
cmp
icebp
jle
test
aad
adc
in
rcl
test
push
lods
popf
dec
in
dec
test
leave
dec
push
pop
push
sub
std
retf
inc
xchg
in
(bad)
push
cmp
add
loope
test
ds
lock
adc
fisttp
call
xchg
repnz
mov
das
push
dec
dec
loope
jmp
mov
and
jp
scas
sub
push
xor
imul
iret
aad
sub
xchg
mov
scas
in
imul
fiadd
lods
inc
push
into
push
shl
mov
sbb
or
add
sti
nop
lods
das
sub
jg
push
xor
xlat
je
dec
std
inc
scas
lea
mov
test
xrstors
inc
mov
leave
loop
mov
pop
adc
xor
pop
out
sbb
jmp
les
scas
sub
sbb
mov
scas
mov
fcmovu
stos
sar
aaa
aas
or
jge
aaa
ins
clc
dec
pop
into
xor
fs
loopne
repz
push
or
icebp
dec
jmp
fadd
or
pop
mov
dec
ss
shl
and
sub
mov
and
popa
push
add
icebp
lock
cmp
int
(bad)
xchg
das
xchg
int
add
ins
pop
pusha
or
jo
fs
jge
clc
popa
xchg
and
cs
sti
(bad)
and
call
popf
outs
lahf
mov
jae
ret
push
iret
in
or
pop
pop
jecxz
sti
sbb
stos
mov
mov
clc
dec
and
(bad)
into
mov
mov
fstp
and
nop
push
sahf
xor
sahf
jnp
mov
das
inc
or
ror
jo
retf
mov
ficom
(bad)
xchg
inc
push
hlt
or
rcl
and
jecxz
call
dec
pop
xor
push
les
mov
push
repnz
sbb
lods
nop
bound
adc
sub
bound
cdq
xchg
cdq
cmp
cs
out
pop
lahf
les
test
repz
add
push
call
int
out
jle
lods
xchg
div
popf
inc
out
daa
push
test
into
repnz
mov
aaa
punpckhdq
mov
mov
adc
xchg
inc
inc
mov
repz
(bad)
jp
cmp
outs
push
adc
xchg
shl
arpl
or
test
xor
inc
sbb
pmaddwd
pusha
ret
pop
int
scas
cmps
jle
cdq
lahf
xor
fisttp
jmp
pushf
or
sub
inc
mov
lods
push
jns
in
mov
pushf
sub
inc
add
ror
lahf
mov
adc
add
ret
xor
dec
stos
mov
xchg
and
or
adc
push
(bad)
ret
or
mov
mov
and
(bad)
push
sub
sbb
pop
mov
sub
stc
sub
adc
es
repnz
cmp
mov
jnp
mov
das
mov
iret
fisub
data16
and
fucomi
inc
sbb
data16
jg
and
mov
aas
mov
mov
add
loop
outs
adc
clc
adc
mov
out
mov
jbe
cmp
inc
fist
icebp
xchg
pop
adc
cmp
repz
xor
mov
loope
shl
inc
mov
push
test
scas
cmp
mov
adc
inc
pop
add
adc
mov
cmp
movs
ftst
and
xchg
mov
test
scas
push
retf
push
js
call
int
push
ss
out
xchg
or
jge
scas
fs
ins
mov
fist
cmp
xchg
or
jmp
sahf
adc
dec
push
mov
outs
sub
pop
sar
push
jecxz
inc
jecxz
lahf
push
jle
pusha
mov
sbb
mov
cmp
dec
xchg
and
xchg
pop
addr16
sub
out
in
sub
(bad)
fs
jl
fnstsw
mov
pop
pop
mov
sar
pushf
and
jno
xlat
cmc
and
jmp
test
cwde
std
mov
sbb
out
js
push
cmps
in
ret
cli
retf
or
(bad)
mov
sar
lods
inc
inc
xchg
jge
aaa
jo
xor
(bad)
call
cmp
mov
xchg
(bad)
int
cdq
fstp
fstp
add
xchg
mov
xor
cmc
mov
sub
test
vcvtdq2pd
je
mov
push
mov
mov
inc
cld
sub
(bad)
adc
addr16
lods
cmp
neg
shr
outs
adc
jns
add
cmp
pop
dec
adc
cmps
push
in
inc
pop
lahf
rcl
fsub
pop
mov
xchg
cmps
xor
sbb
sti
inc
jge
ror
ins
add
sbb
bound
enter
mov
movs
lea
fst
loop
into
les
retf
cmps
cmp
jbe
mov
sub
imul
sbb
in
mov
mov
pop
enter
xchg
fcomi
sti
aad
std
cwde
into
pop
push
sub
adc
push
xor
cdq
clc
shl
int3
in
cmp
jnp
cmps
mov
mov
dec
daa
(bad)
(bad)
mov
fwait
xchg
ss
pop
xor
mov
xchg
(bad)
mov
ja
jmp
fisub
xchg
fcmovnbe
les
imul
into
sub
xor
ja
lahf
popf
adc
mov
mov
pop
es
rcl
mov
fsub
mov
add
sbb
or
dec
sub
inc
(bad)
rcl
jae
adc
push
das
in
data16
(bad)
aad
pop
cmps
xchg
inc
data16
pop
clc
out
test
jns
mov
nop
or
mov
mov
sbb
mov
pop
dec
pushf
dec
push
push
jb
dec
push
pushf
add
dec
enter
icebp
dec
pop
inc
pop
inc
aad
in
hlt
js
dec
xor
cmps
mov
cmp
or
pop
and
outs
push
add
mov
fistp
pop
dec
sti
xor
mov
inc
nop
call
pop
dec
cmp
repnz
fwait
inc
leave
pop
leave
mov
add
mov
and
and
inc
push
ja
aam
fnstenv
mov
out
xlat
outs
enter
add
outs
into
std
popf
add
fist
fbld
pushf
test
clc
movs
push
stos
arpl
sbb
cmc
aad
icebp
in
cwde
push
cmp
aam
call
fwait
inc
fs
adc
in
push
cmp
ja
pop
ret
bound
sub
loope
add
jmp
movs
and
pop
mov
dec
pop
mov
stc
cmp
mov
jp
mov
jno
mov
xchg
inc
sub
outs
rcl
outs
(bad)
xchg
hlt
jo
test
out
mov
fnstsw
pop
(bad)
and
jmp
repz
cmps
addr16
psllq
cmps
ins
dec
repz
es
push
xor
inc
add
cmp
push
loope
rcr
xor
mov
icebp
cli
addr16
adc
xchg
cwde
shr
xchg
bound
je
pop
and
call
mov
mov
(bad)
bnd
aad
jge
mov
stos
push
dec
sahf
scas
and
bound
xor
es
arpl
mov
xor
xchg
cwde
inc
sub
jle
fisubr
outs
outs
xchg
loop
cs
jae
dec
daa
add
xor
jg
adc
pop
jbe
push
xchg
mov
or
fwait
jle
pop
rcr
adc
mov
in
arpl
adc
xchg
mov
xor
in
ins
hlt
mov
inc
pop
sub
fisubr
xchg
sub
xor
das
out
mov
and
xchg
push
sti
xchg
jbe
adc
pop
(bad)
out
cmp
or
fsubp
xchg
js
arpl
inc
fmul
aaa
cmp
les
xlat
sbb
pushf
int
scas
mov
das
in
mov
pop
sub
lahf
add
cmp
fs
push
sub
lock
mov
mov
push
hlt
es
rol
pop
arpl
cmp
fcmovnbe
adc
pop
loope
call
fwait
stos
jl
fnsave
cmp
pop
xchg
sub
mov
out
add
fsubp
sbb
in
mov
aaa
inc
pop
dec
rcr
mov
jb
fstp
xor
inc
js
or
jae
lahf
push
push
dec
jle
call
pushf
dec
leave
loope
jne
cmp
shl
mov
pop
mov
dec
cdq
call
jge
in
adc
dec
xchg
mov
mov
push
push
pop
loopne
shr
shl
lods
ins
add
outs
cwde
dec
dec
movs
cli
inc
call
out
and
shr
cdq
dec
mov
test
adc
adc
call
test
outs
pushf
push
ja
push
(bad)
pusha
cwde
aam
inc
jle
lds
ss
out
or
push
xchg
cmc
lea
xlat
dec
sbb
pop
cmp
mov
add
xchg
mov
data16
(bad)
mov
xor
push
call
push
test
imul
add
out
fst
xor
dec
xlat
jb
repz
es
nop
push
(bad)
sar
pop
jp
shr
(bad)
mov
mov
cli
push
mov
pushf
sub
fistp
jb
rcl
rcl
mov
inc
pop
xchg
and
mov
xor
popa
mov
mov
adc
rol
call
mov
iret
push
aaa
aas
dec
fwait
dec
lea
dec
jmp
nop
test
xchg
pop
mov
out
daa
dec
mov
xor
gs
pop
cmovb
push
mov
dec
mov
xchg
sub
mov
adc
aas
fstp
test
push
imul
mov
xadd
dec
ret
fmul
int3
inc
ds
mov
in
fild
rcl
add
popa
jo
mov
mov
xor
pop
xchg
mov
and
push
push
enter
shl
and
jae
and
jmp
scas
jl
in
lods
jb
ficomp
cmc
arpl
(bad)
ror
lods
dec
or
jmp
inc
push
in
out
aaa
and
lods
shr
mov
pop
push
and
add
pop
mov
call
xchg
imul
push
ret
test
push
outs
sbb
retf
xchg
xchg
push
dec
or
push
(bad)
in
xchg
in
cwde
sub
loop
fwait
xchg
dec
aad
cmp
add
test
sub
fst
scas
pushw
inc
xchg
repz
out
jnp
jle
xor
mov
sub
call
imul
jg
push
and
push
pop
add
sbb
retf
push
dec
sbb
mov
jle
test
mov
out
in
dec
sahf
mov
pop
lods
sbb
fild
leave
fwait
push
(bad)
clc
sub
adc
fisttp
jmp
sbb
pushf
jmp
adc
cmp
iret
test
cld
(bad)
and
xchg
jbe
xchg
dec
idiv
push
mov
pushf
sub
cmc
adc
or
cmp
test
and
xchg
dec
jl
or
(bad)
dec
jb
and
push
xlat
aaa
cmp
sbb
in
fwait
popa
lds
sub
push
hlt
xchg
push
inc
inc
cmp
mov
fst
ror
push
fnstsw
outs
fs
ret
dec
cmp
add
xor
cmp
mov
adc
push
add
jl
adc
push
test
lds
or
pop
push
xor
or
xchg
push
rcr
(bad)
mov
(bad)
push
fldenv
xchg
and
int
cmps
nop
cmp
cmp
add
jno
test
sti
test
in
test
sub
jb
mov
adc
sti
push
xchg
xor
test
jno
pop
arpl
fisubr
xor
ficomp
jg
xchg
lods
test
jle
test
lock
rdmsr
push
jl
std
lea
js
pop
cmp
fld
and
cmps
aas
pop
pop
leave
dec
mov
dec
xchg
cmp
add
dec
adc
dec
push
push
adc
lea
aam
jecxz
outs
sbb
push
or
(bad)
jmp
repz
cmp
push
cdq
out
cdq
dec
sbb
pop
fwait
jo
(bad)
push
adc
dec
shl
cli
(bad)
stc
cmp
nop
pop
fmul
push
es
ds
or
and
ja
das
mov
sub
pop
cld
in
aad
jne
pop
sahf
arpl
in
sahf
xchg
mov
mov
pop
add
aad
mov
cs
or
adc
mov
dec
ret
in
xor
dec
test
out
dec
push
cmc
(bad)
xchg
adc
jo
xor
push
scas
jne
xor
adc
dec
jo
sbb
pop
jmp
xor
jo
sub
pop
xchg
ss
jg
xor
push
hlt
inc
and
sbb
jl
sti
aaa
dec
clc
cmp
adc
push
ss
data16
call
and
fnstsw
nop
fistp
ret
sub
jmp
test
pushf
clc
adc
pop
ret
xor
add
outs
adc
dec
mov
ins
gs
xchg
cs
sti
loop
pop
rcl
mov
aam
add
mov
(bad)
or
add
and
imul
sub
popf
in
movs
pop
int
push
add
or
dec
mov
cmp
pop
jmp
and
dec
mov
xor
cmp
xchg
repz
mov
shl
iret
sbb
dec
imul
inc
add
ja
cmp
data16
out
loop
push
popa
repnz
std
dec
out
(bad)
lods
xchg
lea
mov
popf
xchg
cmp
out
or
shl
lods
xchg
add
cmp
xor
arpl
push
xor
repnz
test
sbb
jbe
cmps
cmp
fimul
retf
dec
add
mov
cmps
and
sti
sub
mov
stos
ret
mov
pop
jnp
fcomi
gs
leave
mov
xlat
ja
pop
stos
dec
mov
jge
add
lock
push
add
xchg
add
or
inc
(bad)
xchg
mov
cmp
aas
movups
loopne
sub
dec
test
jo
sti
dec
bound
stos
inc
aam
cmp
ror
call
outs
mul
xchg
or
dec
loope
ret
push
mov
fcomp
leave
gs
cmp
mov
call
push
push
push
out
(bad)
arpl
pop
shl
cmp
stos
nop
sub
push
jecxz
and
dec
inc
inc
sbb
push
jl
jp
stos
clc
bound
sahf
pop
xchg
stos
or
gs
fimul
pop
test
pusha
pushw
xchg
and
loop
sbb
mov
mov
pop
sub
xor
mov
stc
(bad)
loopne
inc
in
stos
mov
push
jns
pop
xchg
rcl
fwait
inc
sub
sub
int3
retf
jne
jge
pop
xchg
dec
pop
mov
sub
les
jbe
sbb
sbb
nop
loopne
inc
sbb
xor
in
pop
movs
and
and
xchg
jbe
scas
sar
adc
jb
xor
addr16
bound
pop
ja
push
jmp
out
or
test
hlt
push
cli
pop
mov
jle
mov
add
jg
adc
lock
mov
test
js
sub
(bad)
mov
movs
das
out
cmp
jecxz
(bad)
into
jbe
xor
mov
dec
pop
inc
into
ja
adc
or
dec
sub
je
cmp
cmp
sbb
cmp
xchg
test
jb
and
imul
or
xor
aam
scas
xchg
(bad)
and
mov
pop
ins
push
clc
mov
jmp
xchg
push
dec
stos
cmc
and
out
mov
cmps
mov
in
aad
ds
fcmovnbe
cmp
add
push
push
pop
sbb
push
aaa
cmp
push
das
in
cmp
or
cmp
inc
ret
and
sbb
jmp
stc
push
sbb
push
or
sbb
out
stc
mov
sub
in
fdivr
out
mov
push
adc
mov
jmp
movs
mul
movs
aaa
jnp
(bad)
icebp
jns
jge
xor
add
fist
lods
push
pop
lods
push
inc
mov
push
mov
dec
sub
mov
sbb
and
pop
cmp
(bad)
retf
push
and
or
jae
or
and
pop
aas
push
fldlg2
mov
mov
loopne
mov
mov
inc
jb
int
aas
mov
xchg
cmp
or
sbb
sti
add
lahf
test
shr
sbb
test
inc
pusha
inc
mov
pop
add
jae
div
fdiv
outs
int
or
stc
std
pop
lea
sti
push
fdiv
push
std
test
or
je
sbb
dec
sub
loope
xchg
push
pushf
push
icebp
pop
shl
cs
xor
push
xor
icebp
cmp
sbb
addr16
test
loop
push
fxch
loop
int
out
jo
xchg
xor
adc
lea
xchg
imul
inc
push
push
scas
push
jno
adc
or
push
inc
and
in
xchg
inc
mov
call
dec
fild
inc
cmp
add
dec
xchg
(bad)
jmp
movsx
mov
push
arpl
es
xchg
fstp
outs
and
stos
je
std
scas
sbb
js
and
dec
rcl
and
xor
cmp
add
pop
xchg
mov
addr16
sub
xchg
stos
aas
loopne
subps
xchg
outs
hlt
ins
fisttp
xchg
cwde
cmp
inc
ret
pushf
xor
add
std
das
cmp
mov
cwde
test
pop
sbb
add
xchg
mov
and
(bad)
or
jecxz
test
repz
dec
iret
jo
or
dec
xor
aas
inc
and
mov
sub
adc
sbb
shl
in
pop
test
jbe
push
or
ja
dec
cmp
ds
sub
ror
dec
cmpxchg
fcmovb
mov
lods
mov
inc
xchg
mov
inc
mov
xor
arpl
dec
jo
nop
pop
cmp
jg
icebp
imul
push
push
cmp
daa
mov
add
out
iret
fcmovnb
pop
xor
lods
rol
aad
inc
xor
cmp
iret
jl
or
xlat
mov
mul
jle
scas
jb
cmp
push
add
pop
rcr
push
aad
call
pop
pop
mov
(bad)
pop
dec
jmp
int
add
sti
int3
ficomp
xchg
test
inc
mov
xchg
and
jne
cmp
cmc
(bad)
in
ds
mov
aad
adc
rol
push
aas
mov
xchg
push
fsub
mov
mov
mov
add
in
sbb
jge
push
test
and
je
retf
loope
or
shr
gs
jbe
sub
mov
jecxz
aas
loope
shl
mov
imul
pop
ror
push
ins
mov
jle
enter
or
les
add
jecxz
xor
xor
push
nop
jno
sub
lea
test
pusha
or
cs
sub
mov
mov
xchg
data16
or
in
jbe
lods
(bad)
mov
xor
fnsave
adc
jecxz
push
cdq
dec
push
pop
pop
in
mov
pop
not
cdq
outs
adc
push
call
(bad)
or
in
pushf
pop
ds
inc
mov
mov
repnz
xor
scas
pop
sub
xor
outs
xchg
cmc
ins
sub
int3
pop
nop
test
enter
adc
add
ret
dec
stc
mov
retf
neg
jmp
loope
in
add
mov
jmp
cmp
add
cmp
mov
pop
lock
adc
inc
or
adc
hlt
and
sti
movs
xchg
jne
and
jns
call
into
mov
fcom
jmp
clc
ror
sub
daa
cmp
rcl
dec
loop
or
ror
cmp
dec
xlat
test
aam
mov
fisubr
jno
cmps
dec
xchg
inc
dec
rep
out
mov
jbe
mov
or
hlt
mov
cwde
div
mov
fistp
mov
jns
sub
xchg
lock
push
pusha
mov
push
mov
jae
jns
mov
cld
inc
sbb
shl
out
sub
addr16
push
or
sub
jmp
mov
int
pusha
jmp
cwde
mov
adc
mov
add
jo
xchg
es
pop
jno
test
adc
jns
push
das
imul
std
jno
ror
in
jns
mov
popf
sbb
test
jae
and
aas
int
push
sbb
push
mov
nop
jle
cwde
or
clc
or
push
adc
push
sar
push
pop
cmp
loop
jle
jmp
pop
jge
leave
in
dec
fwait
cli
cmps
pop
mov
out
retf
add
ror
fsub
retf
test
and
repnz
add
inc
mov
cmc
xchg
add
mov
aad
cmp
inc
inc
imul
imul
outs
fscale
dec
sub
daa
aaa
mov
pop
test
jle
cld
imul
movs
and
fsub
nop
jmp
das
dec
ins
xchg
cwde
push
ins
mov
retf
and
push
mov
out
out
jg
aam
jbe
push
(bad)
cld
push
rol
dec
mov
push
(bad)
xor
xor
xor
adc
xor
ret
inc
mov
icebp
mov
xchg
in
or
stc
xor
pop
xchg
cmp
inc
xchg
sbb
mov
and
mov
loop
imul
retf
cmp
icebp
popf
fild
pop
jnp
ret
cdq
xchg
fwait
je
int
adc
in
xchg
loop
or
enter
mov
imul
scas
cmp
or
repz
ret
mov
xor
and
sub
adc
sbb
xor
mov
ror
(bad)
in
xchg
movs
or
inc
outs
push
dec
mov
cmp
aam
mov
ins
mov
int3
fistp
jae
inc
push
pop
mov
in
sbb
jo
sti
adc
add
and
cmp
enter
sub
mov
add
mov
add
icebp
std
jno
xor
repnz
retf
ret
jl
outs
sub
dec
xchg
pop
inc
call
mov
push
cld
addr16
stc
push
pop
cmp
xchg
mov
and
push
mov
mov
jno
mov
inc
xor
ret
push
adc
pop
pusha
mov
push
mov
hlt
jo
jl
scas
test
scas
xchg
clc
or
pushf
les
jne
pop
into
inc
push
clc
retf
fisub
mov
jae
test
out
xor
dec
inc
les
movs
dec
xchg
xor
add
stos
xlat
cmp
cmp
test
in
cmp
jne
stc
sbb
mov
inc
cmp
dec
push
dec
popf
mov
mov
and
mov
jns
lods
scas
shr
iret
lds
add
inc
pushf
imul
cmp
pop
into
adc
dec
fisub
xlat
out
add
inc
pop
and
pop
std
xlat
(bad)
(bad)
out
aam
mov
inc
hlt
dec
add
sub
nop
bound
dec
enter
and
or
xlat
mov
icebp
cmp
call
in
mov
loopne
mov
mov
ret
xchg
cdq
(bad)
int3
enter
xor
sbb
push
rcr
add
add
cmps
or
outs
mov
adc
and
sti
test
ret
clc
and
inc
jns
fist
sbb
inc
xor
pop
(bad)
stos
ss
dec
xor
add
cmp
xchg
mov
push
pop
out
lods
sub
dec
and
mov
aad
add
fbld
in
mov
dec
(bad)
in
scas
nop
xchg
retf
fmul
add
loop
xrelease
mov
ficomp
cmp
retf
popa
imul
mov
mov
push
bound
rcr
les
fwait
and
in
iret
loope
mov
(bad)
test
mov
xchg
pop
and
pop
imul
dec
push
shl
shl
cmp
fs
dec
popa
cdq
mov
ficomp
jne
sub
sub
inc
retf
add
mov
fidivr
adc
jns
fmul
and
fisttp
shl
mov
jl
mov
and
sub
mov
mov
arpl
lahf
bound
inc
dec
in
xchg
add
ret
je
sub
jp
sub
dec
jle
gs
aam
add
dec
or
pop
out
shl
sahf
push
cmp
les
fild
sahf
push
add
retf
ret
inc
call
cmp
mov
dec
imul
fwait
adc
nop
loop
sbb
xor
mov
(bad)
inc
mov
add
shl
mov
jae
jo
pop
and
inc
jl
lods
iret
inc
out
mov
sbb
das
sub
lods
push
mov
icebp
aas
mov
mov
dec
xchg
stos
fisubr
add
clc
xor
aas
add
outs
dec
pop
and
cmp
enter
shr
inc
mov
or
aas
fsubr
jl
mov
or
and
(bad)
cmp
lahf
jmp
xchg
movs
mov
pop
jnp
push
dec
mov
mov
lods
lds
arpl
and
dec
adc
lea
loopne
push
hlt
out
mov
dec
cli
mov
ins
mov
mov
and
and
mov
push
jb
in
xchg
stos
jnp
mov
mov
ret
sbb
arpl
inc
mov
shl
sti
(bad)
lahf
jecxz
mov
push
dec
repz
sti
xor
mov
sbb
cs
scas
(bad)
stos
out
mov
push
rol
jmp
(bad)
into
outs
xchg
mov
(bad)
dec
into
or
mov
mul
cmovns
inc
inc
int
pop
mov
xchg
mov
pop
or
mov
add
or
mov
cmps
inc
add
mov
data16
(bad)
xchg
mov
and
in
mov
mov
xchg
sub
adc
(bad)
int3
mov
(bad)
mov
sbb
call
sbb
enter
fwait
push
push
ret
pop
mov
cmp
out
xchg
sbb
push
jl
leave
mov
popf
pusha
sbb
cmc
dec
stc
dec
xchg
fist
xchg
jo
cmp
je
sub
xchg
icebp
dec
jo
mov
push
(bad)
jle
mov
aad
movs
retf
mov
pusha
cmc
push
push
fwait
std
add
outs
loop
repz
addr16
ret
mov
cs
add
out
xchg
enter
loope
mov
mov
in
js
aam
cwde
movs
adc
movs
enter
icebp
and
push
jo
adc
cmp
cmp
into
jecxz
mov
loopne
jmp
cld
and
iret
sahf
sbb
push
shr
mov
dec
or
in
or
xor
or
jl
jp
(bad)
sub
mov
popa
sub
sbb
ret
addr16
or
xchg
ins
inc
mov
mov
pushf
pop
fcmovnbe
sbb
jnp
(bad)
xchg
cmps
adc
xor
push
or
cli
js
scas
inc
mov
not
cmps
les
xchg
sar
pop
loope
adc
shr
jmp
mov
add
iret
fwait
mov
ficomp
mov
into
add
dec
push
ret
nop
mov
repz
xor
loopne
daa
repnz
or
xor
mov
stc
stc
std
imul
shld
push
jle
std
cmps
int
pop
out
mov
sub
fbstp
out
sbb
add
mov
les
ret
test
rcl
add
add
mov
scas
push
ja
mov
and
mov
cdq
adc
aas
push
aam
dec
ror
push
cmp
inc
dec
fidiv
(bad)
(bad)
imul
adc
fild
es
inc
push
xor
mov
mov
jmp
andnps
mov
pusha
lahf
das
and
sbb
js
jb
jg
inc
loop
mov
push
sbb
mov
stc
cmp
xchg
iret
pop
mov
inc
fild
call
stos
pusha
mov
mov
pop
adc
fcom
dec
fwait
hlt
into
xor
out
mov
mov
cdq
data16
movs
add
cmp
arpl
dec
dec
dec
push
jmp
(bad)
nop
cmp
mov
sub
into
not
mov
sbb
and
xor
dec
retf
out
and
jns
pop
(bad)
sub
cmp
mov
mov
dec
xchg
fst
mov
pop
mov
call
pop
test
push
jge
rol
add
dec
mov
adc
hlt
fs
es
imul
jg
inc
lods
pop
xchg
das
mov
loop
inc
adc
push
jmp
aam
inc
(bad)
lea
xchg
xchg
mov
inc
inc
dec
sub
dec
xor
add
xor
popa
fs
jo
gs
mov
cmp
hlt
push
push
xchg
xchg
inc
xor
lock
mov
add
mov
push
std
stos
adc
lahf
test
int
push
jecxz
sbb
lods
shl
lock
mov
sbb
outs
lahf
mov
int
out
pop
stos
sbb
adc
lock
lods
inc
jl
mov
jp
hlt
xlat
lock
dec
fwait
movs
inc
lods
aad
jmp
xor
test
sub
aas
test
sbb
mov
adc
pop
icebp
push
jne
jo
ins
in
fdivr
fcom
and
bound
mov
loopne
icebp
xor
int3
bound
push
adc
push
ins
push
add
je
pushf
in
push
nop
scas
sub
ins
and
xchg
arpl
fwait
and
ds
mov
jnp
sti
jg
or
fcmovbe
shr
pop
out
push
lock
sbb
cld
ins
push
push
cwde
je
popf
push
xor
jg
aaa
or
add
fidiv
jle
and
test
add
cmp
leave
icebp
jg
xor
mov
pop
sbb
and
adc
cmp
xor
mov
cmc
jns
dec
(bad)
(bad)
adc
icebp
loope
arpl
in
jl
sti
imul
jbe
std
mov
cmp
in
jns
leave
push
pushf
cmps
cs
jp
scas
jne
icebp
jl
shl
xchg
xchg
xchg
jg
add
scas
(bad)
and
push
imul
mov
jo
mov
mov
pop
pop
push
adc
adc
movs
mov
push
rcl
jbe
inc
fmul
xor
into
or
fidiv
jmp
ins
cmp
(bad)
mov
xchg
fadd
(bad)
mov
sahf
stos
cmp
fwait
xor
stc
fidiv
add
sub
or
pop
cmp
in
inc
xchg
aam
xor
pop
retf
push
mov
and
(bad)
scas
sar
sbb
mov
xor
add
xchg
stos
sbb
pop
push
adc
out
loop
xchg
ins
mov
mov
cmp
xchg
gs
dec
je
sub
cmp
sbb
nop
lds
out
and
es
mov
jmp
jnp
mov
push
sub
fsubr
das
mov
inc
shl
mov
loopne
std
dec
test
inc
rcr
ja
hlt
mov
out
pop
(bad)
mov
or
sub
cmp
and
pop
ja
cdq
sar
pop
scas
dec
mov
(bad)
loop
cmp
inc
adc
test
pop
pushf
lods
mov
adc
cmc
inc
mov
in
inc
mov
(bad)
and
pop
shr
or
xor
jl
fadd
jg
sub
daa
mov
xchg
adc
rcr
xchg
pushf
data16
pusha
mov
fadd
(bad)
push
push
lds
or
je
icebp
popf
movs
outs
push
js
aaa
xchg
lods
imul
les
daa
dec
inc
std
or
imul
out
fwait
mov
into
cld
fild
repnz
inc
out
(bad)
cmc
ficom
pop
pop
fistp
inc
mov
jl
hlt
aam
pop
mov
pop
mov
adc
hlt
(bad)
aaa
test
hlt
imul
pop
rol
pushf
push
xchg
pop
popf
clc
pop
push
sub
xor
push
adc
push
push
push
and
add
inc
jmp
cdq
mov
sbb
shl
pop
xor
daa
lods
outs
push
inc
push
int
mov
or
jbe
jmp
fldenv
cdq
cmps
xlat
pop
in
xor
and
xchg
pop
sahf
imul
dec
rcr
jns
dec
rol
mov
push
adc
loope
pop
int3
(bad)
xor
dec
scas
cmp
dec
push
cmp
adc
data16
dec
dec
cmp
jnp
mov
jmp
mov
jge
out
fs
arpl
rol
or
movs
sbb
adc
add
mov
or
je
or
and
ja
and
jbe
mov
fiadd
rcl
xchg
test
popa
mov
shl
or
fst
jg
adc
repnz
sub
dec
inc
out
mov
div
cmp
add
ja
inc
add
sti
xchg
inc
and
not
fmul
retf
call
std
shl
jg
shr
lea
push
sub
scas
(bad)
push
and
inc
lods
imul
sti
sub
mov
and
fldcw
movs
pop
fs
rcl
mov
mov
retf
stc
ins
add
daa
popf
cdq
sub
inc
cmp
clc
push
sub
and
bound
mov
popa
sbb
popa
jo
aad
and
and
dec
cmp
ja
inc
adc
inc
jmp
jecxz
imul
push
mov
push
fwait
fs
aas
mov
inc
mov
je
jmp
icebp
push
(bad)
jne
and
mov
or
out
xchg
mov
fwait
dec
mov
data16
imul
inc
mov
mov
call
mov
adc
pushf
sti
cmp
imul
jno
mov
mov
cli
mov
sub
int3
push
aad
js
inc
mov
(bad)
mov
test
push
icebp
ins
in
mov
in
retf
outs
jne
(bad)
pop
test
sbb
aam
out
jnp
sti
in
inc
adc
retf
jle
sub
lds
cli
popa
push
(bad)
aas
hlt
(bad)
mov
cmc
xchg
mov
aad
pushf
xor
add
leave
daa
ins
fld
popf
stos
jnp
pop
xchg
sub
into
into
call
xchg
movs
fldenv
mov
sub
mov
dec
mov
ins
sub
out
inc
rcl
in
in
div
(bad)
cmp
jge
(bad)
mov
jl
xchg
xchg
push
xor
lods
jmp
shl
arpl
sub
jecxz
shr
inc
push
jle
scas
push
xchg
push
data16
add
mov
mov
push
outs
push
push
adc
bnd
jg
das
xchg
outs
mov
repnz
jle
jge
mov
push
ficom
in
push
sub
inc
dec
mov
adc
or
(bad)
lahf
test
mov
add
or
aad
pop
add
sub
imul
mov
mov
cmp
sbb
mov
and
add
sub
scas
add
test
mov
call
xchg
dec
idiv
rcl
ret
mul
fucomp
in
mov
fmul
stos
popa
js
dec
xor
daa
js
shl
out
jb
xchg
push
jg
inc
enter
xlat
mov
aas
cwde
sbb
push
jb
lahf
out
xadd
int
and
in
dec
mov
cmp
add
mov
push
cmc
xor
es
outs
mov
mov
inc
jbe
into
jae
pop
sub
les
movs
xchg
cmps
mov
aam
xor
sub
mov
fdiv
sub
sti
je
jns
xlat
mov
aaa
sub
pushf
dec
dec
mov
lds
aas
xchg
adc
(bad)
mov
jl
sar
and
xor
repz
jae
mov
repz
xor
jns
movs
push
cwde
(bad)
mul
xchg
aad
(bad)
sub
jle
pusha
jg
sbb
ja
mov
fisubr
cs
mov
sub
test
push
and
mov
stc
mov
clc
lahf
xor
or
sahf
jns
popf
aad
inc
xor
xor
cdq
sbb
fucom
push
shl
clc
in
and
aas
mov
sti
pop
lahf
and
xor
dec
jmp
xchg
out
repnz
lock
sub
in
jmp
ins
shl
and
test
or
pop
int
or
jns
jo
fisub
lock
dec
xchg
ds
add
pop
mov
push
les
aaa
mov
ins
and
push
dec
(bad)
aam
or
xlat
xor
test
outs
out
hlt
lock
xor
mov
jnp
repnz
jmp
cmp
sbb
shl
add
dec
cs
imul
loopne
int3
ds
adc
cmps
and
mov
sub
data16
cmc
dec
xchg
fadd
push
jns
mov
shl
push
mul
cmp
xor
pop
mov
jno
fstp
mov
xor
sub
ja
mov
fistp
adc
sti
add
cmps
sahf
(bad)
scas
test
pop
popa
rcl
(bad)
std
inc
pop
dec
jbe
xor
adc
push
xchg
cld
outs
movs
jl
into
inc
ror
jnp
fcmovbe
add
or
inc
je
sbb
xor
scas
int
xor
cmc
mov
rcl
repnz
add
mov
rcl
pop
lea
retf
mov
mov
and
add
das
and
addr16
push
xor
jmp
push
add
mov
test
lds
sub
xor
aad
dec
inc
stos
int
mov
or
cmps
scas
retf
push
out
movs
xchg
je
or
call
and
aaa
cld
jge
inc
clc
ror
dec
hlt
lods
dec
jae
cs
push
mov
jbe
call
dec
dec
inc
push
mov
xchg
push
and
and
xchg
ds
inc
sbb
mov
inc
je
ror
repz
dec
loope
and
popa
jb
pop
idiv
add
adc
ret
jo
(bad)
in
test
mov
jae
ror
addr16
sbb
or
ror
ret
sub
dec
cmp
jne
xchg
in
shl
inc
xchg
outs
sbb
icebp
stos
inc
mov
sub
mov
and
mov
mov
int
int
lods
push
inc
ja
or
sbb
xlat
xchg
xor
icebp
push
jl
hlt
mov
xor
popa
scas
stc
or
and
icebp
jp
or
push
retf
nop
xlat
or
leave
or
aam
jle
inc
adc
js
mov
mov
push
call
dec
and
sub
jmp
test
add
mov
rcl
jbe
dec
mov
call
ret
scas
mov
int3
xchg
cmp
xchg
add
cmp
xor
mov
jbe
mov
xchg
and
dec
sbb
sub
aas
arpl
sti
sbb
not
inc
mov
jge
xchg
mov
pop
jnp
cmps
lds
js
mov
dec
add
cmp
jmp
cmp
inc
mov
shl
sbb
sub
xor
dec
inc
push
fwait
(bad)
in
jbe
fwait
mov
mov
adc
(bad)
cmp
fsubr
sub
mov
mov
dec
and
xchg
fldenv
pop
cmp
adc
jmp
lods
loop
in
and
sub
adc
icebp
inc
in
(bad)
lods
lock
dec
mov
cmc
or
xchg
cmps
add
loope
mov
pop
pushf
(bad)
lods
mov
push
add
jne
icebp
or
cvttps2pi
dec
add
leave
repz
inc
icebp
dec
cs
popf
pop
xchg
shl
mov
cld
sar
push
inc
pop
sbb
or
mov
lods
xchg
inc
int
je
cmp
imul
pop
ja
sbb
(bad)
sub
jnp
dec
popf
or
push
shl
sub
(bad)
fstp
fwait
add
loop
add
mov
pop
add
stos
movs
add
sbb
xchg
call
sbb
je
lea
in
jns
aas
inc
pop
or
mov
mov
mov
into
ins
bound
sahf
pop
inc
pop
in
mov
(bad)
(bad)
int
loopne
pushf
sbb
dec
je
xchg
sub
sbb
iret
pop
es
sub
and
pop
loope
iret
sahf
or
leave
(bad)
outs
and
mov
(bad)
in
jle
sahf
js
mov
or
mov
add
loopne
sbb
fsub
stos
or
add
inc
pusha
call
daa
add
sbb
mov
call
xchg
adc
push
jo
jecxz
sbb
retf
add
xchg
fadd
mov
push
dec
dec
push
add
fiadd
push
bnd
mov
retf
les
jmp
(bad)
cmp
or
push
ins
mov
arpl
jp
mov
aad
dec
pop
mov
push
sbb
retf
and
inc
add
jbe
xchg
pop
fdiv
call
mov
arpl
push
cmp
pop
add
dec
(bad)
scas
movs
inc
aad
and
arpl
pop
mov
mov
ds
pop
fwait
and
lods
test
ins
push
push
retf
ins
cmp
(bad)
retf
xchg
call
inc
xchg
xchg
dec
test
lods
or
test
cmp
sbb
push
ret
mov
sbb
xlat
jecxz
pop
movs
test
mov
dec
dec
inc
sbb
push
mov
sub
not
mov
mov
add
sbb
cmp
je
xor
inc
nop
clc
jnp
and
mov
data16
jbe
movs
sub
adc
or
mov
les
push
add
sub
int3
call
cmp
in
pop
sub
jg
stos
push
xchg
out
pop
mov
retf
cs
adc
cmpxchg
test
inc
aam
(bad)
sti
int
push
push
mov
test
push
jle
ins
jl
xchg
cmp
ret
adc
sub
mov
movs
mov
mov
add
je
mov
or
popa
jb
xchg
pop
in
retf
bswap
mov
dec
mov
cmp
ins
popa
jg
pop
sub
sbb
repnz
cmp
add
fs
ss
aas
adc
stc
xor
outs
in
sub
(bad)
out
test
outs
cmp
ins
push
cmp
sahf
lahf
sahf
fwait
lods
sti
out
or
out
jb
test
jle
mov
pusha
bnd
sahf
push
in
xchg
or
sub
jns
jns
add
cli
push
adc
movs
dec
jbe
icebp
(bad)
cmp
lods
push
fsubr
sub
pop
lods
and
mov
inc
rol
stc
cwde
mov
jl
mov
jecxz
jle
mov
out
lds
das
jmp
outs
enter
mov
enter
xor
clc
ret
push
push
dec
mov
cmp
sub
(bad)
jg
fsubr
test
bound
jmp
(bad)
pop
sbb
mov
in
call
xchg
test
xor
add
clc
mov
xor
(bad)
mov
mov
mov
retf
not
mul
fadd
scas
sbb
aam
mov
loop
fldln2
mov
rol
or
pop
mov
sub
ret
cmp
xor
ja
ret
shl
fimul
add
inc
outs
je
inc
nop
pusha
push
sub
cdq
mov
cs
mov
add
xor
pop
shl
(bad)
stc
adc
or
fs
(bad)
aaa
cmp
push
add
movs
es
inc
mov
inc
shr
in
dec
test
imul
iret
xchg
aaa
mov
test
xchg
pop
sahf
cmp
pop
leave
and
rcl
push
cmps
adc
test
cmc
clc
mov
jnp
or
pop
push
mov
cmp
jae
fcomp
mov
sbb
in
ins
lock
fsub
push
cs
ss
lods
fmulp
lock
movs
and
daa
test
mov
imul
bnd
loopne
imul
rcr
pop
icebp
jnp
mov
stc
popf
inc
out
add
ins
je
je
push
push
cs
jb
stos
(bad)
cwde
mov
arpl
daa
inc
or
out
sub
jbe
outs
or
(bad)
cld
call
xor
mov
lock
retf
neg
and
adc
dec
mov
sub
jp
sti
sub
aam
aam
xlat
mov
add
push
and
sar
sahf
call
cwde
rcr
inc
test
push
push
ret
inc
mov
ja
mov
mov
push
mov
test
movs
pop
rcl
mov
aaa
cdq
fdiv
sbb
push
adc
lods
fucomip
out
xlat
pop
scas
aas
stc
out
fwait
push
xchg
cmp
mov
pop
cmp
retf
xchg
cmp
loop
inc
jge
data16
inc
dec
push
out
push
hlt
or
pushf
out
pop
cld
hlt
add
ins
mov
in
addr16
jmp
or
dec
xchg
fwait
jb
outs
(bad)
imul
xchg
add
cld
ins
mov
and
movs
iret
test
out
fmul
cmp
pop
stc
push
adc
push
mov
fcomi
int
pop
xchg
gs
jnp
cwde
dec
mov
pushf
cmp
adc
xor
aam
jl
fnstenv
out
div
mov
push
dec
push
or
sti
inc
in
into
ds
(bad)
lods
xchg
xchg
xchg
sub
cdq
xor
in
push
mov
dec
xchg
mov
loop
mov
das
jbe
jg
(bad)
adc
out
lds
(bad)
xor
xchg
and
jmp
je
xor
test
pop
push
adc
push
mov
xor
(bad)
mov
sub
aas
sub
loopne
std
xchg
bound
(bad)
ror
push
pop
push
xor
clc
push
add
add
sbb
outs
aam
mov
mov
test
(bad)
test
in
mov
inc
xor
mov
loopne
ret
rcr
sahf
mov
bound
pop
push
loop
lahf
ror
cmp
mov
sub
sbb
dec
pop
and
sbb
push
sub
into
push
inc
mov
pop
mov
push
push
dec
sub
cmp
jp
sub
cld
xchg
das
cmp
jnp
mov
mov
mov
ds
cmp
jns
sub
push
(bad)
jge
cwde
clc
sbb
arpl
jg
daa
mov
adc
adc
and
mov
push
mov
dec
enter
push
fidivr
ja
rcl
fcomp
jno
push
(bad)
arpl
adc
jbe
push
(bad)
cmp
(bad)
jmp
mov
xchg
cwde
cwde
mov
outs
or
fbstp
sbb
mov
movs
mov
call
sbb
mov
sbb
jns
jne
lea
pop
jmp
popf
scas
mov
rol
xor
mov
les
sub
pushf
dec
mov
cmps
mov
mov
cmp
loopne
or
mov
ins
and
sub
movs
fdivr
inc
xchg
ret
adc
addr16
push
push
jge
(bad)
jmp
icebp
lahf
cli
aas
jno
shl
jp
jmp
repz
dec
push
push
(bad)
xchg
jmp
and
mov
and
inc
inc
sub
mov
fdiv
jp
sbb
aas
mov
les
js
call
xor
jmp
jecxz
cmp
in
ret
ins
div
ret
and
inc
rcr
repz
fnstsw
mov
and
stos
push
inc
add
retf
jns
cwde
jns
and
cmps
xchg
or
pop
dec
add
and
pop
scas
and
out
pop
ja
call
add
retf
add
das
popa
xchg
dec
mov
push
fs
hlt
test
imul
ret
jmp
cmc
mov
add
jae
xor
inc
xlat
cmp
(bad)
fnstenv
push
add
mov
sub
sbb
pop
xchg
test
xchg
xchg
push
pop
lds
call
iret
mov
mov
adc
mov
sub
js
mov
loopne
cdq
jbe
cmps
std
cli
cmp
cmps
jp
popa
test
test
jecxz
nop
stos
test
lods
jle
xchg
mov
cmp
and
cmps
mov
fwait
jge
or
add
mov
adc
fisub
push
and
adc
mov
jnp
and
cwde
jmp
clc
push
(bad)
retf
jb
mov
pop
fsubp
(bad)
push
movs
lods
stos
jbe
les
loope
jb
adc
call
aaa
sub
lea
or
outs
jo
sbb
int3
cmp
pop
sub
push
xchg
iret
retf
jp
sahf
add
xor
cdq
hlt
lods
lds
xchg
imul
mov
fcmovu
xchg
fbld
call
(bad)
ds
sub
(bad)
repnz
and
push
ss
jmp
jne
sub
xchg
mov
in
imul
mov
mov
mov
in
mov
pop
shl
push
jae
pop
xchg
sti
dec
mov
ja
imul
pop
adc
jnp
movs
mov
inc
jne
cdq
or
mov
out
mov
and
and
add
mov
jmp
pop
sbb
push
shr
clc
int
lahf
jl
frstor
mov
scas
pop
popf
fisub
mov
mov
mov
xor
sbb
popa
inc
lea
test
call
push
pop
xor
jmp
pop
call
aad
add
imul
jmp
jnp
ret
cwde
inc
(bad)
or
adc
dec
(bad)
stos
adc
outs
ret
ror
push
adc
cmps
psraw
in
popa
inc
adc
aaa
aaa
shl
cs
aam
and
sbb
and
and
pop
dec
xchg
jp
aam
(bad)
inc
test
jb
dec
lock
cmp
(bad)
pop
sub
test
adc
mov
mov
mov
js
pop
adc
shr
fstp
jmp
mov
adc
inc
push
leave
stos
xchg
es
or
xor
jb
xlat
fist
mov
jnp
sub
jmp
mov
and
jl
jae
fisub
xchg
lods
mov
jle
xchg
adc
jge
ficom
jmp
cmp
sub
pop
std
loopne
cmc
stc
sub
sti
sbb
push
pop
push
mov
pop
inc
stc
enter
adc
mov
jne
(bad)
mov
xor
and
hlt
pop
fsub
mov
xor
sbb
adc
add
mov
enter
fstp
sub
sub
mov
cmp
mov
mov
xor
ds
pusha
sub
sub
stc
mov
(bad)
mov
dec
popf
or
jle
test
loop
enter
xchg
ret
ss
loopne
ss
jno
jmp
lods
cmp
jae
mov
jecxz
rcr
or
mov
mov
repnz
add
inc
adc
sbb
clc
mov
jmp
lea
adc
dec
or
rcl
aaa
test
daa
das
bound
inc
mov
idiv
ins
push
add
push
add
jecxz
adc
add
xor
add
add
add
add
and
sbb
add
and
add
adc
add
add
add
lea
add
and
add
adc
add
add
add
add
add
lea
add
add
add
adc
add
add
add
adc
add
lea
add
add
add
adc
add
add
add
sub
sub
add
or
add
sub
adc
add
sub
add
add
add
or
add
add
add
xor
add
add
add
add
adc
add
add
add
add
inc
sub
pop
or
sub
add
adc
add
add
push
add
or
sub
add
add
or
add
add
pop
sub
add
or
sub
adc
push
add
add
sub
add
add
add
adc
add
add
sub
add
xor
add
add
add
add
adc
add
add
add
add
inc
sub
pop
or
sub
push
add
add
adc
add
add
push
add
or
sub
add
add
or
add
add
pop
sub
add
or
sub
add
sahf
and
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
fnsave
add
ret
add
add
js
add
add
and
and
add
rcl
loope
sbb
out
push
pop
(bad)
inc
push
aam
cmp
(bad)
and
jl
and
fstp
int
repz
ja
aaa
(bad)
test
movs
xchg
pop
mov
and
sbb
cmps
in
sub
or
test
push
cld
lods
outs
inc
jecxz
imul
mov
dec
(bad)
in
xor
xor
xchg
pop
ror
mov
xor
cmp
stos
push
jnp
mov
ja
cmp
sbb
sbb
ret
aad
xchg
pop
mov
inc
test
pushw
push
jl
les
cld
imul
iret
sbb
dec
push
jge
in
push
add
call
(bad)
xchg
push
iret
xor
pop
sbb
push
dec
xchg
(bad)
daa
lahf
and
jle
enter
repz
stc
mov
pop
add
lock
mov
or
and
in
mov
je
repz
ins
xchg
jecxz
and
ds
out
mov
shr
pushf
jmp
in
fidivr
cld
int3
jmp
jo
sahf
movs
dec
push
lahf
xchg
inc
(bad)
add
mov
adc
cmp
loopne
push
mov
inc
jae
and
xchg
movs
cmp
(bad)
in
lods
sti
sbb
fiadd
inc
mov
dec
adc
mov
adc
mov
sahf
pushf
sub
mov
pop
ss
mov
inc
push
mov
inc
in
(bad)
in
jp
mov
(bad)
clc
fwait
or
dec
pop
(bad)
sub
sbb
xchg
scas
and
nop
jle
lods
hlt
push
add
inc
shr
or
mov
sub
push
push
add
out
add
cmp
enter
jg
pop
sti
mov
scas
out
clc
or
iret
fucomp
mov
dec
xchg
out
addr16
push
mov
imul
fmul
sub
es
jno
int
cmp
jmp
nop
push
add
lods
cs
jmp
in
data16
leave
stos
stc
dec
add
push
std
jb
out
repnz
mov
mov
and
or
test
movs
sbb
adc
sbb
adc
ja
fwait
lods
loop
sub
sbb
xchg
add
fnstsw
pop
outs
sar
fild
xchg
cwde
jg
add
clc
jle
cwde
xor
add
sbb
hlt
mov
rcr
jecxz
cmp
ret
add
adc
xchg
cmp
repz
in
xor
mov
test
xor
xchg
stos
adc
aad
and
push
fimul
int
(bad)
mov
ja
cld
fucomp
ja
xchg
gs
test
add
aam
jbe
lods
or
add
(bad)
hlt
addr16
xchg
aaa
sbb
cmps
(bad)
fwait
push
pop
xor
jmp
xchg
sub
cld
xlat
mov
pop
push
pop
dec
xor
inc
mov
shl
mov
out
pop
out
popf
test
push
nop
mov
pop
fstp
fnstcw
(bad)
popa
jnp
sahf
cld
(bad)
mov
mov
mov
popa
jl
cld
xor
xchg
gs
jmp
cld
enter
xchg
xor
scas
xlat
call
lds
sub
jo
pop
imul
bound
popf
cmp
in
cs
push
out
stos
sbb
xor
aas
das
nop
ret
jmp
dec
cmp
neg
mov
mov
pop
fdiv
push
xor
dec
cmp
push
repz
xor
pop
rol
dec
mov
cmc
mov
jge
push
pop
dec
dec
neg
mov
mov
xchg
mov
test
scas
stos
sub
aad
fidivr
inc
adc
jmp
xchg
jb
and
popf
xchg
sbb
cmp
push
aam
push
das
out
mov
or
jp
mov
pop
mov
movs
cmp
cmp
dec
sbb
jp
adc
pop
jg
inc
outs
gs
fwait
aaa
ins
imul
jecxz
std
pop
mov
xlat
fwait
out
enter
je
mov
frstor
cwde
pop
cmp
icebp
sbb
xchg
pusha
inc
add
cs
and
fs
and
cmps
jp
jns
xchg
sbb
jge
or
mov
inc
sbb
mov
retf
sahf
cwde
inc
pop
and
xchg
inc
sbb
dec
ss
cmp
inc
test
movs
enter
jle
stos
test
pop
xor
(bad)
pop
and
pop
xor
ret
inc
inc
fisttp
out
mov
in
inc
mov
push
add
pop
push
popf
sbb
push
and
jbe
out
out
out
fwait
hlt
xchg
rcr
jne
pop
jo
stos
popa
inc
lea
mov
jle
(bad)
jecxz
idiv
mov
cmp
cmps
daa
sti
das
cmp
lods
(bad)
test
inc
mov
retf
sub
jg
or
lods
clc
leave
popf
loope
cmp
adc
xor
mov
scas
out
movs
adc
mov
out
daa
push
xor
shr
or
mov
add
mov
sbb
mov
jl
es
add
xchg
mov
inc
push
fist
mov
sti
dec
rcr
outs
cmps
call
add
sar
jb
push
(bad)
jno
imul
xchg
sbb
in
movs
jmp
fsubp
push
mov
or
test
jbe
mov
xor
(bad)
out
mov
cmc
stos
mov
inc
jne
fist
lock
pop
stc
sub
aam
inc
fs
call
mov
test
add
ss
ins
xor
mov
push
inc
jmp
jmp
sbb
das
imul
pop
adc
pop
xor
ins
mov
pusha
and
repnz
mov
sub
sub
enter
fisub
jp
loop
fild
cmps
add
mul
xchg
cmp
and
inc
lock
ret
sbb
xlat
add
scas
outs
(bad)
out
rol
cs
mov
ds
test
cmc
nop
jge
jmp
aad
pop
scas
pusha
sbb
sub
xchg
mov
push
sar
dec
fnstenv
dec
add
pushf
out
ret
out
fnstsw
mov
dec
inc
fcom
ficom
pop
sbb
psubsb
movs
xor
push
add
adc
adc
xor
cmp
pop
jne
int3
inc
and
xchg
sub
movs
pop
and
sub
push
adc
dec
adc
les
call
test
das
dec
outs
ja
sbb
or
repz
mov
jecxz
adc
cmp
or
sbb
xor
out
cld
dec
ror
lods
or
xor
mov
adc
prefetchw
(bad)
(bad)
push
or
scas
or
sbb
cwde
je
(bad)
loopne
jecxz
test
mov
adc
stos
cmp
xor
das
outs
mov
xor
push
mov
into
or
bound
div
mov
xchg
(bad)
mov
cld
sub
sbb
jmp
pop
stc
not
stc
lahf
dec
movsx
mov
xor
dec
sub
fdivrp
mov
dec
movs
jns
aas
xchg
jnp
popf
mov
mov
jbe
mov
shr
add
cli
sub
mov
xor
retf
add
in
xor
add
mov
in
call
aad
cmp
sti
ins
mov
loopne
rcr
xlat
jg
jge
push
add
inc
mov
fldcw
enter
inc
mov
and
adc
(bad)
sub
and
pop
jns
test
lahf
ret
out
add
in
dec
jp
inc
outs
aam
jmp
repnz
ret
xchg
inc
push
cmp
rol
ret
(bad)
stos
call
jb
or
sti
xor
cmps
cmp
pop
adc
pop
dec
mov
mov
xchg
jle
adc
js
icebp
dec
add
repz
test
jg
mov
lahf
je
inc
sub
mov
add
mov
sbb
int3
fisub
sub
ja
daa
jne
cmp
pop
not
out
sub
jne
push
dec
dec
pop
adc
cmc
aam
sub
add
cmp
gs
push
push
xlat
inc
vpsubsb
jae
into
(bad)
test
inc
pusha
cld
mov
pop
xor
mov
jo
clc
out
test
lds
fnstcw
pop
or
dec
inc
ficomp
std
sbb
mov
in
jae
push
inc
add
ficomp
cmc
xchg
xchg
lahf
arpl
fmul
and
push
dec
ret
ret
fiadd
push
jb
mov
fld
mov
jmp
je
add
shr
cdq
shl
cs
(bad)
not
test
test
outs
xor
out
into
lea
ret
and
adc
fnop
mov
add
retf
pop
ins
movs
xor
mov
mov
jae
pushf
cmp
outs
loope
xchg
ds
cmp
adc
add
shl
dec
fisub
shl
mov
test
iret
inc
(bad)
adc
das
fnsave
pop
mov
movs
(bad)
pop
fcomp
dec
sahf
movs
stos
lds
or
nop
cmp
dec
xor
cmc
mov
mov
push
pop
push
shr
ret
sub
into
fdivr
jns
sti
and
fidiv
dec
xchg
dec
or
je
adc
push
hlt
jl
mov
call
shl
add
mov
mov
cmp
pop
jnp
xor
(bad)
rcl
(bad)
int3
and
mov
inc
inc
inc
xchg
xor
lock
pop
push
jmp
les
xor
sbb
ja
pop
test
pop
ins
or
imul
push
(bad)
imul
or
sbb
inc
adc
and
jmp
ins
sbb
jl
xor
mov
mov
xor
sub
push
push
mov
sahf
and
xor
call
ins
bound
int
test
sub
les
jne
cdq
cwde
outs
stos
fstp
add
adc
int
pop
gs
(bad)
iret
jne
jg
and
iret
push
fild
jb
retf
lock
jo
pop
dec
xchg
sbb
xchg
mov
inc
inc
or
xor
mov
pop
pop
dec
mov
stos
jecxz
mov
aaa
jae
mov
je
xchg
aaa
sbb
add
or
sar
in
add
rol
mov
sub
inc
cmp
mov
retf
jbe
cmp
outs
int3
popf
ror
in
sbb
mov
ss
xchg
jg
pop
pop
addr16
lods
mov
(bad)
sub
sub
daa
jge
scas
outs
and
jg
mov
or
pop
lds
mov
cli
add
mov
sbb
fs
and
daa
xor
nop
jnp
fcmovnu
sub
std
mov
dec
push
push
ja
adc
inc
shl
movs
cmp
rol
push
cmp
jbe
add
mov
sbb
aaa
cmp
xor
adc
sti
sbb
pop
outs
scas
test
(bad)
fstp
int3
pop
nop
mov
shr
push
jmp
arpl
pop
sub
adc
sbb
stc
or
dec
jge
out
loop
mov
arpl
adc
dec
add
and
xchg
dec
out
jae
cmp
or
and
jge
mov
xor
or
jg
add
mov
sub
add
jmp
xlat
xchg
push
or
jge
arpl
hlt
and
inc
fild
adc
xor
lds
fxch
sbb
cld
push
push
inc
pop
and
sub
loope
cmps
je
mov
out
iret
(bad)
push
add
daa
pop
in
sbb
in
xchg
test
push
inc
std
popa
iret
cmc
test
add
data16
mov
pop
addr16
jb
or
or
inc
cmps
cmp
inc
dec
out
xor
mov
ins
or
or
call
push
scas
add
pop
fisttp
mov
push
jmp
sub
(bad)
sub
adc
sbb
jae
and
cmp
les
lods
imul
mov
pop
or
pop
(bad)
out
jnp
jns
call
dec
adc
fidiv
gs
leave
repnz
test
mov
(bad)
call
jo
push
adc
inc
mov
mov
adc
mov
sti
cli
scas
retf
xchg
xlat
or
sbb
loope
fs
push
scas
add
fsub
test
outs
scas
enter
xchg
js
dec
pop
pop
adc
scas
add
in
les
adc
and
das
dec
rcl
sti
ret
hlt
in
pop
movs
mov
mov
rcl
je
aaa
sbb
xchg
mov
add
jp
mov
pop
adc
lea
sub
fsubrp
cmp
mov
xchg
jle
push
or
imul
pop
inc
adc
sub
cld
daa
sbb
xchg
pop
mov
pop
rcr
sbb
in
and
adc
sub
icebp
xor
push
(bad)
sub
ror
sub
pop
clc
(bad)
jmp
retf
dec
retf
jb
ins
dec
adc
push
scas
jle
push
push
(bad)
mov
aas
push
mov
mov
ror
and
xchg
xchg
fbstp
arpl
mov
(bad)
lock
(bad)
mov
xchg
jno
adc
loope
sbb
cmpxchg8b
scas
xlat
jp
jnp
xchg
out
mov
fcom
in
or
inc
cmps
out
fadd
pop
loope
icebp
xchg
call
dec
sub
sbb
push
ret
(bad)
std
(bad)
mov
xchg
and
push
mov
fimul
xchg
mov
test
jg
fs
pusha
pop
in
das
stos
or
push
jo
push
xchg
and
jbe
or
cmp
jg
mov
jne
dec
push
add
je
arpl
iret
or
jb
stc
pusha
cmc
js
xor
mov
in
push
(bad)
sub
push
add
cmp
das
mov
inc
jmp
xchg
dec
and
mov
add
mov
mov
mov
mov
jbe
ds
je
scas
push
add
dec
jns
pop
sub
div
mov
cli
pop
out
dec
stc
fdivr
aaa
fst
movs
loop
push
test
lods
and
stc
cmp
nop
or
inc
jo
xchg
jl
mov
mov
icebp
into
fisttp
jp
push
pop
imul
and
mov
sbb
test
add
mov
in
popf
out
(bad)
ret
sub
sub
aad
sub
mov
xor
cmp
cdq
sub
movs
push
scas
loopne
aam
xchg
cmps
(bad)
in
dec
mov
div
jno
fwait
popf
and
fbld
xchg
jmp
xchg
jmp
xor
test
mov
loop
dec
mov
xor
aaa
pop
push
jo
icebp
iret
arpl
lock
int
fstp
aad
iret
icebp
fucomp
fst
mov
(bad)
push
test
or
or
jae
scas
mov
outs
mov
jne
inc
xlat
pop
xor
dec
push
xor
ins
xor
les
mov
js
in
adc
in
or
mov
loopne
xchg
in
lock
loop
jmp
hlt
jbe
(bad)
jae
xchg
fs
lahf
mov
repz
loopne
sub
inc
das
jno
stos
dec
retf
or
outs
lods
ss
push
inc
mov
repnz
pop
call
sub
mov
or
and
fcomip
popa
dec
mov
and
neg
mov
cmp
(bad)
fisub
sbb
adc
mov
and
sbb
mov
mov
add
call
popa
sbb
jecxz
popa
push
cdq
icebp
lods
push
mov
jae
cdq
sar
jae
(bad)
out
ja
inc
mov
adc
fisttp
popa
inc
inc
movs
push
sub
test
nop
mov
dec
mov
movs
ret
pop
mov
pop
test
lds
(bad)
and
push
stos
shr
jnp
jne
sbb
sbb
cmp
cld
adc
daa
lods
fucomp
xchg
and
out
cli
jl
fadd
push
push
pop
xor
xlat
call
imul
xor
xor
repnz
mov
test
call
sub
sbb
cli
pop
and
pop
jo
mov
int
fmul
jb
ror
shl
cmp
repnz
xor
jo
inc
add
jne
jmp
inc
and
pop
fcmovnb
and
scas
popf
scas
enter
icebp
mov
icebp
xor
xchg
cs
xchg
mov
test
mov
xor
add
bound
and
mov
faddp
inc
or
and
xchg
lods
xchg
mov
shufps
data16
and
mov
mov
cmp
or
push
adc
rcr
(bad)
push
dec
pop
dec
iret
xor
mov
imul
pop
or
pushf
cmp
xor
pop
mov
push
mov
inc
int
push
arpl
daa
es
aas
jmp
scas
push
sbb
sub
mov
int
cmps
or
inc
(bad)
aaa
sub
rcl
jl
aaa
rcl
push
add
cmp
dec
lock
push
mov
mov
dec
sbb
mov
in
sub
push
pop
lds
dec
mov
out
pop
sahf
test
and
jp
xor
test
pop
dec
test
ins
jae
xor
js
outs
imul
into
ror
jp
mov
mov
ss
dec
cdq
enter
inc
push
pushf
fistp
inc
xchg
ins
test
cmps
jg
mov
cs
mov
push
inc
lahf
and
inc
or
(bad)
sub
pop
sbb
es
jp
jg
js
test
pop
pop
push
adc
jnp
aaa
pop
inc
addr16
push
mov
add
pop
jl
push
add
cmp
in
xchg
push
dec
pop
jnp
cli
in
js
pop
or
push
adc
cmps
shl
mov
pop
jbe
outs
movs
dec
in
mov
sbb
aam
(bad)
arpl
xor
mov
push
mov
push
(bad)
iret
and
movs
mov
arpl
popa
jb
sbb
ja
add
xlat
popf
test
ins
repz
sbb
mov
lea
mov
icebp
stc
jecxz
adc
pop
xlat
mov
dec
sbb
or
mov
in
mov
loope
push
push
cmp
jge
call
fwait
and
lds
jmp
imul
ja
in
mov
xchg
xchg
popa
addr16
mov
pop
push
fild
mov
mov
scas
push
out
pop
mov
mov
dec
inc
inc
arpl
dec
imul
push
retf
mov
mov
and
pop
cmp
fimul
mov
dec
push
inc
ins
fidiv
mov
add
mov
test
rcr
cmp
mov
adc
push
daa
pop
sbb
cmp
stos
ret
ret
fwait
add
pop
mov
scas
jmp
cmc
cmp
xchg
push
aam
cli
data16
adc
inc
loopne
popa
fwait
inc
add
or
clc
sub
jp
add
dec
sbb
xor
ins
xor
or
mov
sub
nop
rcr
adc
xor
lahf
std
pusha
call
push
ror
mov
iret
jl
imul
(bad)
adc
ins
inc
jmp
mov
(bad)
mov
mov
adc
xchg
jg
mov
rcl
dec
adc
ds
mov
imul
add
jmp
or
cmp
mov
(bad)
adc
int
call
xchg
jmp
add
and
dec
cmps
push
ss
adc
lock
ror
cmp
and
pop
and
jns
pop
test
dec
sub
pop
push
xchg
fidiv
aad
sbb
xchg
add
push
mov
icebp
popf
aad
out
nop
adc
xchg
add
pop
movs
dec
pop
hlt
xchg
les
dec
mov
daa
test
scas
inc
and
std
(bad)
xchg
jns
js
jno
push
ret
sti
dec
pop
mov
add
cmp
add
adc
outs
pop
push
jae
push
push
mov
push
sbb
pop
pusha
mov
ja
std
test
push
cmps
pop
sub
inc
pusha
mov
mov
div
inc
iret
cli
pop
imul
xchg
div
cs
scas
out
xchg
aaa
ds
mov
pop
push
push
(bad)
stc
stos
or
(bad)
jmp
loop
and
push
movs
inc
lods
fist
lock
pop
bound
sub
jns
mov
or
push
bound
add
ret
push
mov
mov
stc
adc
push
sub
cmc
stc
pop
cld
adc
pusha
cmp
cmp
and
add
enter
xor
inc
adc
frstor
xor
mov
loopne
dec
outs
push
test
mov
mov
push
or
mov
(bad)
mov
mov
int3
ds
push
xor
popf
push
xor
outs
inc
movs
(bad)
xchg
mov
adc
inc
repnz
push
mov
push
xchg
cwde
jne
pop
sbb
gs
xchg
push
std
nop
addr16
cmp
jno
jp
aaa
xchg
lds
sbb
ins
loop
push
add
std
aaa
push
out
nop
mov
data16
mov
jg
ja
fldenv
or
mov
xchg
pushf
loop
dec
cmps
mov
inc
or
shr
jp
inc
xor
retf
outs
(bad)
lods
pushf
adc
xsaves
xchg
addr16
pop
arpl
jo
xor
out
sub
leave
push
sbb
jl
and
aas
push
or
pop
popa
adc
xor
les
arpl
fs
int
pop
cmc
(bad)
(bad)
mov
jnp
in
movs
pop
ds
push
jecxz
dec
add
and
and
adc
inc
(bad)
xor
inc
enter
and
xchg
xchg
or
mov
pop
sbb
mov
cli
push
mov
inc
push
sub
lahf
sbb
iret
(bad)
lea
and
xlat
or
mov
or
ret
sti
xor
push
sahf
xor
cli
cli
mov
xor
mov
loope
inc
lahf
inc
je
fnsave
sbb
push
sub
mov
mov
mov
cmp
mov
cmovns
cmc
fild
inc
test
sbb
sub
adc
add
stos
shl
xchg
pop
sub
ins
arpl
rcr
dec
xchg
jne
iret
int
scas
movs
cmp
sbb
xchg
call
push
jmp
lods
scas
pusha
enter
(bad)
jmp
outs
cli
out
jae
pop
push
pop
and
mov
xor
aas
shr
push
sbb
xor
dec
sti
adc
xchg
adc
or
arpl
je
les
sbb
(bad)
dec
pop
jp
xchg
sub
mov
gs
call
scas
stc
jo
mov
xor
dec
xchg
xor
push
pushf
out
pop
and
mov
and
pop
dec
sub
add
test
pop
sahf
movs
push
ret
popf
(bad)
cmps
inc
cld
dec
xor
mov
pop
(bad)
mov
xlat
mov
jno
jne
mov
dec
es
add
pop
pusha
pop
shl
push
jmp
xchg
retf
fisub
fdivr
jle
adc
imul
add
out
dec
fild
out
mov
push
pushf
out
(bad)
in
clc
lds
popf
mov
fdivr
xor
jmp
jmp
sbb
mov
call
pop
push
cld
jns
call
ret
je
js
repz
inc
fidiv
or
xor
les
hlt
jg
cli
inc
movs
add
push
mov
pop
dec
int3
retf
jg
movs
aaa
jge
mov
fwait
xlat
inc
xor
(bad)
pop
jge
sbb
add
xchg
dec
leave
div
cmps
add
stos
sbb
lods
mov
adc
jne
shl
xchg
pusha
xchg
repz
mov
pop
or
clc
fmul
cmp
mov
and
pop
ffree
call
(bad)
jmp
test
lock
inc
sbb
mov
cmp
mov
sbb
call
out
stos
sub
in
sahf
ins
data16
mov
mov
mov
rol
push
fnstcw
inc
ja
retf
push
jns
or
movs
movs
fisttp
jmp
fs
jmp
and
mov
in
jle
push
jmp
je
(bad)
retf
pop
mov
and
scas
sbb
sbb
cmp
mov
aas
push
dec
std
pop
jns
push
push
ins
cli
stos
sbb
popa
arpl
jge
or
cmps
gs
push
ret
adc
(bad)
add
xor
sbb
sbb
mov
add
sbb
rol
lea
lahf
pop
(bad)
std
test
dec
xchg
push
and
int
es
les
aam
dec
or
loopne
ret
repnz
mov
in
inc
nop
add
sbb
and
pop
sbb
aas
loopne
out
aad
push
ret
rol
or
add
mov
push
xor
push
shl
xchg
or
mov
jo
ret
dec
out
inc
sar
js
or
mov
sub
push
mov
(bad)
imul
mov
and
push
in
outs
test
push
sbb
add
jg
add
lods
cs
(bad)
mov
add
sbb
stc
pop
popa
jmp
into
adc
xchg
mov
mov
fisttp
and
outs
or
repz
in
jge
sbb
sub
pop
bound
test
mov
mov
or
and
jb
pop
cwde
inc
sub
jmp
je
out
movs
rcl
and
(bad)
pop
ja
dec
push
into
cmps
sar
jbe
sub
jmp
and
lods
cmps
call
rcr
stc
dec
fiadd
pop
add
adc
or
lods
mov
adc
retf
mov
daa
xchg
adc
movs
mov
int3
jns
push
test
pop
cmp
shr
xor
leave
loop
xlat
jp
jl
jecxz
pop
ret
inc
sub
adc
cmp
jne
jl
outs
mov
leave
pop
ins
xchg
inc
jmp
mov
cmp
or
cdq
push
pop
mov
clc
bound
rcr
call
aam
jo
cmps
pop
inc
sbb
jnp
push
stos
retf
push
cmc
adc
push
jno
mov
sahf
jecxz
(bad)
cld
and
pop
je
sub
sub
(bad)
mov
ret
push
es
sub
or
mov
jge
xchg
or
(bad)
out
repz
fdiv
jo
or
mov
cmp
frstor
dec
cli
imul
xchg
inc
pop
cs
sahf
push
or
dec
loope
adc
xor
scas
dec
stc
lea
push
or
mov
stos
cmp
or
ret
stos
test
cli
adc
repnz
xchg
mov
cmp
cli
mov
inc
fistp
xor
repz
jp
jp
(bad)
call
pop
outs
push
adc
pop
cmp
mov
add
js
mov
movs
movs
test
pop
mov
addr16
pop
adc
xor
xchg
lahf
push
cmp
or
nop
dec
pop
fs
xor
adc
iret
jmp
inc
add
or
data16
mov
mov
sbb
or
add
neg
mov
sub
je
in
imul
test
inc
inc
stos
out
mov
(bad)
pop
mov
mov
push
jmp
ror
aas
js
fwait
cmp
ss
adc
pop
imul
jmp
xchg
enter
push
xchg
iret
mov
ins
dec
inc
pop
pushf
dec
repz
in
jecxz
hlt
cld
retf
sbb
sbb
xor
jne
pop
and
out
cmp
stos
jns
lds
jnp
mov
movs
sub
shl
cmps
test
jmp
ins
xchg
jle
fmul
fild
push
add
jno
dec
(bad)
jl
rcl
cmps
sbb
in
or
test
sub
jl
push
jnp
xlat
imul
and
call
pop
in
outs
jnp
and
pop
lock
jbe
or
dec
cwde
sar
push
add
mov
or
add
dec
sbb
rcr
xlat
mov
in
fbstp
daa
ss
int
adc
jns
dec
adc
cmp
jmp
nop
test
xchg
pushw
mov
loope
cmc
inc
aaa
stos
sub
push
icebp
mov
mov
xchg
sbb
in
mov
cs
jmp
jb
out
inc
xlat
pop
mov
clc
and
mov
(bad)
or
or
add
mov
outs
stos
and
mov
call
jmp
and
(bad)
js
dec
inc
cwde
sti
pop
pop
(bad)
pop
rcr
addr16
nop
dec
es
pop
jne
stos
std
in
in
outs
fmulp
jb
add
and
push
retf
jae
xor
icebp
or
sub
sub
xchg
loope
int3
sti
pushf
ror
loope
or
rcl
add
mov
repz
ds
push
cmp
scas
push
das
lea
xor
popa
add
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
push
add
and
jb
outs
addr16
add
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
xchg
add
add
add
cli
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
push
add
sub
push
add
add
add
add
add
add
add
add
add
cmc
add
add
xchg
add
add
add
add
add
add
add
add
push
add
pop
add
add
pop
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
test
add
add
add
mov
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jno
or
adc
adc
add
in
add
jno
or
adc
adc
add
pop
add
or
adc
adc
add
dec
add
or
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
and
add
add
add
xchg
add
add
add
add
add
add
add
and
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
dec
mov
add
add
add
push
add
add
inc
add
lahf
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
jp
add
add
xchg
add
add
lea
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
dec
add
add
push
add
add
pop
add
add
popa
add
add
imul
jno
in
add
jns
in
add
add
add
mov
in
add
or
daa
add
xchg
add
add
xchg
add
arpl
cdq
add
ins
add
add
add
add
add
jmp
add
add
add
and
in
add
add
push
add
or
push
add
adc
in
add
or
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
sbb
jecxz
mov
call
add
add
add
add
add
add
add
add
add
fild
add
add
add
add
add
and
add
add
mov
mov
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
or
pop
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
inc
push
inc
push
cs
add
dec
push
dec
dec
dec
push
add
inc
inc
jo
dec
gs
add
jb
xor
jns
inc
push
inc
push
cs
gs
jne
arpl
add
gs
outs
outs
je
outs
ins
xor
jns
inc
push
inc
push
add
arpl
ins
imul
gs
add
push
arpl
jne
je
arpl
je
gs
gs
je
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
gs
outs
outs
je
outs
ins
add
jb
jne
ins
push
jb
je
arpl
jp
addr16
push
inc
push
outs
jns
add
outs
push
dec
ins
dec
push
add
jo
ja
jo
js
dec
bound
jb
dec
dec
add
js
push
js
jb
dec
popa
imul
jb
dec
outs
jbe
imul
inc
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
imul
add
fs
outs
jbe
imul
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
pop
outs
push
outs
js
pop
add
jno
inc
pop
popa
outs
imul
outs
add
push
inc
jno
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
je
jb
bound
add
arpl
outs
push
push
add
outs
bound
arpl
gs
outs
add
ins
ins
bound
imul
gs
ins
je
imul
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
outs
ins
push
imul
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
gs
jne
arpl
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
dec
ins
jo
jb
inc
je
jb
bound
add
jb
gs
xor
cs
ins
add
jne
ins
jae
dec
popa
jb
push
ins
ins
outs
arpl
ins
outs
bound
add
jo
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
gs
je
add
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
jne
arpl
outs
push
outs
imul
jb
gs
gs
je
add
jae
gs
cs
jb
ja
outs
add
popa
jo
imul
add
outs
je
outs
ins
add
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
gs
add
inc
dec
dec
inc
outs
arpl
imul
je
jb
inc
jns
add
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
cmp
xor
sub
sub
sub
sub
inc
inc
cmp
xor
xor
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
ins
jne
push
jns
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
xor
add
ins
gs
outs
xor
xor
xor
xor
sub
outs
je
ins
gs
gs
jo
jb
add
jb
jns
push
jne
je
ins
gs
imul
fs
add
imul
inc
jb
popa
jns
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
add
ins
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
and
ins
gs
outs
xor
xor
xor
xor
sub
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
cmp
add
ins
gs
outs
xor
xor
xor
xor
sub
imul
ins
add
outs
je
imul
je
outs
ins
add
outs
je
imul
je
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
inc
push
inc
push
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
inc
push
inc
push
cs
gs
jne
arpl
cs
bound
je
outs
js
cs
jae
jne
arpl
add
add
add
add
add
push
cmp
or
or
xor
mov
add
sbb
or
or
push
sbb
sbb
add
or
add
add
sbb
and
add
and
adc
and
add
adc
add
add
add
add
push
add
add
or
sbb
add
sbb
push
pop
add
sbb
sbb
add
sbb
push
add
adc
push
pop
add
adc
adc
add
sbb
push
or
aad
cmp
pop
pop
sbb
or
or
adc
gs
add
add
push
adc
pop
add
add
jns
jge
push
adc
push
adc
add
adc
pop
add
push
and
add
or
gs
data16
outs
pop
pop
pop
jne
add
add
add
add
xor
sub
add
inc
inc
inc
xor
xor
ss
sub
sub
xor
cmp
cmp
inc
add
or
add
inc
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
in
add
add
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
