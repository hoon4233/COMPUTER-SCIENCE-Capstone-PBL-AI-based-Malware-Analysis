inc
hlt
fs
cmp
and
xor
and
jo
sub
pusha
add
ss
daa
jne
and
bound
xor
xor
pop
retf
gs
inc
mov
and
jne
inc
lods
push
xor
and
mov
jl
inc
mov
push
add
inc
add
add
test
xchg
(bad)
js
sub
jl
cmps
or
(bad)
cmp
cmc
adc
and
mov
jnp
div
nop
addr16
and
dec
jne
mov
xor
fdiv
jne
jns
sub
enter
jno
shl
jae
mov
sub
stc
test
cld
sub
jno
and
jne
mov
lods
xor
scas
popa
gs
xchg
data16
popa
fdivr
ja
scas
push
cmp
fstp
mov
mov
stos
jno
push
pop
and
dec
gs
scas
and
add
data16
jno
(bad)
xchg
lds
scas
aaa
xor
jb
gs
xor
and
dec
or
lds
xlat
sar
and
dec
add
mov
and
push
jns
cmp
adc
pop
retf
fcmovnu
div
and
popf
neg
fisttp
cmp
jno
scas
addr16
jo
jge
pop
sub
cmp
inc
mov
fist
clc
pop
xor
mov
mov
retf
(bad)
mov
xor
aaa
xor
and
xor
das
popf
pop
pop
and
mov
sub
hlt
push
add
test
jge
and
pop
cmp
jne
xor
cmps
mov
sub
and
push
mov
fild
push
je
inc
and
data16
push
pop
jne
cmps
loopne
retf
adc
dec
and
div
and
imul
fdivr
test
xchg
aaa
xor
push
jb
and
int3
aam
xchg
data16
das
fist
xor
iret
mov
xor
jno
ror
sbb
pop
mov
inc
cld
adc
jne
cmps
enter
jae
push
int3
je
or
inc
hlt
cmp
and
in
or
div
and
pop
and
pop
test
sbb
pop
add
aaa
xor
or
xor
fild
xchg
data16
adc
lds
fild
xchg
data16
add
lds
int3
sub
lock
mov
fcom
pop
jne
in
out
xchg
and
jne
out
and
and
and
addr16
retf
dec
sub
mov
lods
mov
and
jne
daa
dec
jne
and
jne
and
sbb
(bad)
pop
jne
lods
out
repz
xor
fisttp
fistp
jne
mov
je
cmp
and
(bad)
retf
es
pop
jne
ja
mov
and
ret
sbb
mov
fcmovu
and
xor
loopne
or
(bad)
push
and
iret
data16
xor
cmps
mov
pop
xchg
add
jg
mov
lods
shl
sub
mov
bound
lods
jecxz
jno
je
jno
je
xor
sbb
and
jne
and
jne
push
sub
dec
and
cld
repnz
jecxz
adc
push
and
mov
fild
and
push
imul
push
mov
loop
jne
lods
loop
inc
fmul
in
dec
and
jl
push
and
cmp
add
pushf
es
and
jns
(bad)
xchg
mov
adc
in
mov
lods
shl
fwait
jge
stc
paddb
or
popa
mov
jne
and
jne
push
sub
dec
and
cld
repnz
in
pop
fist
retf
push
xor
retf
push
xor
inc
fmul
xor
and
repnz
fadd
pop
jne
sub
in
aas
adc
movs
mov
popa
and
imul
popa
lods
shl
add
arpl
fsub
pop
pop
inc
(bad)
jno
lods
xor
lods
popa
cdq
ret
inc
aam
jno
lods
xor
(bad)
add
shl
push
fsub
pop
adc
lods
xor
lods
popa
xchg
ret
inc
sar
clc
lods
xor
(bad)
add
iret
sbb
jno
and
jp
and
jp
xor
dec
in
and
mov
xor
out
gs
popa
sar
jno
sbb
(bad)
jno
iret
dec
mov
fdiv
and
xor
movs
dec
xor
jecxz
(bad)
retf
popa
fdivr
jno
lods
mov
in
(bad)
inc
fstp
bswap
fcmovnu
int
(bad)
div
nop
mov
and
xor
sbb
and
push
jns
jns
mov
fcomp
mov
mov
mov
sbb
and
mov
push
nop
aaa
xor
popa
jge
in
mov
xor
loop
jl
mov
and
add
fcomp
jno
mov
and
dec
jmp
into
(bad)
mov
fisttp
imul
(bad)
in
or
and
clc
mov
and
retf
jnp
cs
out
cld
shl
jae
imul
cmp
gs
popa
mov
rcl
adc
lods
popa
test
iret
add
mov
imul
fsubp
fidiv
fnstsw
pop
(bad)
lods
hlt
sub
out
mov
lods
xor
sbb
popa
jge
and
jno
lods
xor
rol
mov
fdivr
outs
in
out
mov
ja
and
fadd
xor
es
xor
lods
out
imul
iret
push
fadd
pop
jne
scas
pop
jge
imul
and
lods
mov
into
in
xor
(bad)
out
lods
movs
ins
lods
out
test
add
stos
dec
repnz
nop
data16
popa
sub
xor
(bad)
jno
lods
xor
lods
popa
add
aam
xor
jnp
cs
out
cld
shl
jae
inc
xor
sub
jecxz
mov
xor
mov
and
(bad)
nop
data16
ror
imul
or
sub
and
adc
xor
popa
fdivr
jno
lods
xor
rol
mov
fcom
mov
gs
inc
fwait
call
jge
xor
and
and
inc
sub
data16
fsub
mov
lods
popa
mov
dec
jp
jbe
jb
add
fisttp
jae
jb
fstp
fisttp
push
out
mov
jae
sub
fwait
arpl
movs
push
lods
lea
push
sub
ja
and
mov
and
mov
and
es
fist
pop
and
jne
ficom
xor
and
lods
aam
cmp
xchg
mov
jnp
cs
out
cld
shl
and
push
jge
pop
cmp
lods
fcomp
jecxz
or
push
jle
mov
scas
ins
retf
ja
(bad)
jb
fild
xor
scas
jae
adc
cld
int3
rol
cld
jno
lods
mov
retf
xor
jp
std
out
cld
shl
jae
inc
sub
lock
cld
int3
and
add
inc
and
and
int
and
clc
jno
je
and
data16
mov
out
fninit
push
jne
adc
mov
jl
push
jge
pop
xchg
(bad)
aaa
xor
and
xor
popa
test
add
and
mov
in
scas
cmp
sub
test
test
aaa
xor
and
and
and
xor
lods
mov
(bad)
xchg
mov
adc
mov
jl
push
and
iret
jp
int3
sub
retf
fstp
fisttp
jne
adc
in
mov
lods
ror
and
jne
loop
jne
ja
and
movs
out
dec
and
hlt
or
aaa
xor
(bad)
push
and
adc
xor
test
jno
sub
std
and
sub
dec
nop
data16
ins
jle
xor
(bad)
cld
mov
fisttp
or
push
ins
xchg
mov
scas
inc
retf
jb
hlt
(bad)
push
pop
jne
cmps
add
xchg
data16
mov
push
cmp
dec
mov
and
clc
mov
fisttp
cmp
test
xor
dec
je
xlat
(bad)
aaa
xor
mov
and
retf
cmps
loopne
or
(bad)
push
sub
adc
int
xor
or
lods
lock
fimul
shl
scas
fs
scas
sbb
arpl
lods
xor
cmps
pop
xor
and
dec
fsub
mov
and
lea
and
retf
and
add
lods
cld
je
lods
out
xor
aaa
xor
popa
or
add
jbe
and
dec
nop
data16
popa
fdiv
fild
jno
xor
and
aaa
push
and
ins
lods
cld
pop
in
lods
out
repz
les
scas
popa
lea
nop
data16
popa
aam
mov
xor
xchg
lea
and
xor
cmp
xor
dec
retf
jae
cld
jno
movs
xchg
sbb
push
cs
mov
in
jbe
scas
xor
je
dec
retf
xor
jne
and
cld
jno
sub
lods
ret
(bad)
lods
lock
fimul
call
test
dec
mov
xor
and
jno
sub
jo
nop
data16
(bad)
mov
fisttp
in
or
sbb
xchg
data16
inc
das
test
xchg
data16
mov
(bad)
mov
fsubr
neg
fcmovnu
mov
and
cld
in
adc
jp
std
out
cld
shl
jae
push
adc
pop
mov
jecxz
cmp
lods
mov
inc
fdiv
popa
sub
or
jp
test
inc
and
and
jne
xlat
movs
sub
lods
test
xor
adc
jo
and
dec
add
not
and
jno
test
sbb
fmul
push
jne
cmps
loopne
mov
xor
and
jo
xchg
xor
mov
mov
cmps
adc
and
lea
pop
fdiv
jo
and
data16
ins
movs
adc
and
mov
fdiv
dec
push
mov
jecxz
scas
inc
and
addr16
adc
dec
dec
and
inc
dec
and
add
jne
scas
popa
jge
sbb
retf
(bad)
or
and
jp
push
sub
add
fs
ret
xor
push
cld
int3
or
and
xor
and
xor
and
xor
and
pop
and
xor
int3
adc
int3
dec
es
xor
and
fsubr
jne
scas
popa
jge
in
mov
xor
out
jne
imul
jge
push
fcomp
pop
and
xor
je
ja
aam
aaa
xor
push
(bad)
fcomp
jne
movs
retf
sub
and
mov
int3
popa
pop
and
sub
in
mov
lods
ror
and
jne
sbb
xor
jb
(bad)
cmc
or
adc
out
mov
fisttp
(bad)
data16
mov
mov
test
mov
mov
fstp
hlt
sub
cld
in
or
and
arpl
jne
mov
jne
lods
mov
hlt
fistp
and
je
lock
mov
mov
(bad)
jmp
inc
jmp
xchg
and
mov
(bad)
xchg
fs
sbb
arpl
enter
test
(bad)
xor
mov
and
or
jne
lods
popa
mov
and
mov
mov
test
mov
(bad)
jbe
je
or
jae
mov
adc
pop
mov
mov
sbb
retf
xchg
in
retf
push
into
fcmovnu
div
sub
mov
lods
cdq
(bad)
retf
fcmovu
(bad)
mov
fisttp
jbe
movs
mov
cmp
call
xchg
fs
sbb
arpl
xor
sub
and
inc
cmps
enter
mov
mov
cmc
mov
fisttp
and
dec
sub
data16
mov
fisttp
ret
div
sub
(bad)
retf
fcmovu
cld
in
rol
cld
mov
fisttp
and
mov
and
jp
sbb
jne
sub
mov
lock
fcmovnu
mov
aad
and
inc
inc
and
div
sub
ret
fisttp
test
xor
add
mov
dec
shl
jp
loop
jne
pushf
sub
and
xchg
mov
fld
mov
test
fsubr
mov
cmps
loopne
or
(bad)
push
add
xor
and
enter
mov
push
or
cmps
mov
sbb
mov
push
jg
mov
and
je
in
aaa
xor
je
jne
int3
js
fcmovnu
div
sub
mov
and
add
dec
and
jne
cdq
(bad)
(bad)
rcr
mov
(bad)
sbb
mov
and
and
test
fsubr
ror
or
(bad)
push
add
xor
and
enter
mov
mov
cmp
fisttp
repz
and
xchg
pop
and
pop
and
and
test
fsub
loopne
or
(bad)
push
add
xor
and
enter
mov
inc
or
cmps
mov
sbb
mov
push
jg
mov
and
je
mov
aaa
xor
je
jne
int3
xor
fcmovnu
div
sub
mov
and
add
jecxz
ror
(bad)
and
xor
and
and
sub
fisttp
retf
(bad)
sbb
mov
and
and
test
(bad)
ror
or
(bad)
push
pusha
pop
xor
and
enter
mov
inc
cmp
fisttp
pop
and
and
mov
fisttp
rcr
div
sub
mov
and
add
jecxz
ror
(bad)
and
fistp
jne
cmps
cdq
ror
(bad)
xor
jo
nop
data16
test
(bad)
retf
jge
repnz
and
aam
test
xchg
inc
nop
aaa
xor
cld
je
lods
out
mov
fisttp
xor
cld
in
adc
mov
and
retf
dec
jae
mov
sub
clc
mov
fisttp
in
fcmovnu
mov
mov
lods
xor
lods
cld
pop
in
lods
out
dec
fsub
mov
and
cmps
and
mov
fcmovnu
mov
cdq
int
fcmovu
je
stos
mov
and
xchg
jecxz
(bad)
fcmovu
bound
mov
je
and
clc
mov
fisttp
pushf
fcmovnu
mov
lods
retf
fcmovu
and
sub
and
mov
fisttp
xlat
data16
mov
fisttp
retf
xor
jne
and
cld
jno
sub
jno
and
lock
fimul
retf
fcmovu
and
in
and
mov
adc
pop
mov
mov
clc
mov
fisttp
in
fimul
arpl
add
int
jbe
and
lock
fimul
retf
fcmovu
and
or
popa
mov
out
or
and
lock
and
mov
mov
lods
mov
mov
je
mov
fisttp
retf
jae
cld
jno
sub
jbe
and
cs
and
adc
mov
cld
mul
(bad)
xchg
fmul
xchg
gs
mov
fisttp
pop
and
div
sub
mov
dec
jne
add
xor
cld
inc
in
lods
out
or
mov
and
xor
mov
and
xor
loopne
push
jecxz
in
fcmovu
ja
scas
mov
cld
mov
fisttp
retf
fcmovu
and
retf
cdq
and
ret
int3
xor
jne
sub
cld
rcr
xlat
sar
(bad)
or
jae
mov
shl
xor
in
mov
es
cmps
sbb
mov
(bad)
(bad)
data16
mov
je
or
xor
and
jne
popa
fdiv
fild
add
sub
es
test
(bad)
retf
dec
jae
mov
pop
and
ret
(bad)
lods
lock
out
or
and
lock
and
mov
mov
fsub
int3
pop
pop
and
sub
cld
rcl
retf
mov
jecxz
add
xor
mov
cld
mov
fisttp
retf
fcmovu
and
retf
cdq
and
ret
int3
xor
jne
sub
cld
rcr
xlat
sar
(bad)
or
jae
mov
sbb
in
mov
and
std
retf
fcmovu
jne
mov
je
inc
(bad)
data16
mov
je
or
xor
and
jne
popa
fdivr
mov
test
sub
es
inc
mov
(bad)
fist
(bad)
mov
fisttp
retf
jae
cld
jno
pushf
in
and
adc
mov
cld
mul
mov
adc
fld
mov
and
xor
cdq
sbb
cmp
test
mov
sbb
scas
xlat
fisttp
repz
mov
and
enter
mov
mov
mov
aam
mov
and
and
retf
test
(bad)
xor
mov
and
xor
loopne
mov
out
clc
leave
fcmovnu
mov
sbb
lock
fcmovnu
mov
xchg
jo
leave
fld
mov
(bad)
retf
fcmovu
clc
mov
(bad)
dec
jne
loopne
pop
xor
(bad)
xor
mov
and
xor
loopne
mov
out
enter
mov
and
mov
fisttp
retf
jb
int
inc
and
ret
(bad)
lods
lock
fcmovnu
mov
fcmovnu
mov
fistp
mov
cmps
and
pushf
fcmovnu
mov
mov
scas
lock
fcmovnu
mov
mov
fcomi
fcomp
fimul
retf
lock
fimul
retf
(bad)
mov
and
retf
and
lods
xor
mov
je
add
jb
mov
hlt
mov
(bad)
cmp
(bad)
cmp
sub
mov
fld
mov
(bad)
cmp
(bad)
cmp
mov
and
cmp
mov
and
cmp
xor
and
xchg
mov
fld
mov
(bad)
(bad)
fnstsw
mov
jnp
cs
out
cld
ror
sbb
pop
mov
test
and
and
xor
and
fdivr
and
inc
popf
repz
shl
mov
dec
shr
aam
pop
xchg
mov
fsub
shl
jne
dec
jl
xor
int3
imul
int3
sbb
fcmovnu
test
nop
aaa
xor
push
stos
fistp
pushf
lea
and
adc
xor
scas
pop
test
jno
fisttp
repz
clc
je
and
(bad)
jno
out
push
int3
jecxz
in
sbb
ficom
movs
dec
lods
stos
jns
jne
and
enter
retf
jnp
movs
scas
popa
test
and
xor
mov
mul
and
mov
fwait
xor
jno
lea
movs
nop
aaa
xor
and
xor
or
and
jne
and
add
and
bnd
cdq
push
and
int
(bad)
jne
ret
lods
xor
lods
jecxz
push
out
mov
ja
(bad)
imul
cld
cmc
(bad)
add
cmps
add
fs
mov
(bad)
fsubr
jmp
mov
push
cmp
fs
jecxz
cdq
test
and
hlt
cmc
icebp
sub
jecxz
xor
and
cld
les
jne
fs
jo
mov
sub
mov
and
or
and
xor
stos
or
and
mov
mov
movs
js
mov
dec
ja
and
jo
nop
data16
in
dec
adc
mov
jl
les
lods
popa
xor
and
cmc
cmp
xor
shl
sub
xor
mov
js
enter
and
and
xor
and
gs
fnsave
sub
int
ja
and
jo
mov
es
(bad)
add
cmp
xor
xor
jb
in
xor
and
int
cs
ret
lds
cmc
cmp
xor
xor
xor
and
fs
or
mov
shl
ins
stos
gs
inc
and
jne
movs
in
or
cmc
cmp
xor
and
jns
fcmovnu
xor
mov
jb
in
xchg
and
cmc
cmp
xor
sub
mov
xchg
fs
aad
and
xchg
retf
xor
mov
jb
in
mov
and
cmc
cmp
xor
and
and
repz
call
xor
int
retf
xor
mov
jb
in
out
ss
cld
cld
or
sub
gs
repz
jne
es
and
std
retf
mov
push
nop
aaa
xor
and
gs
cld
adc
sub
gs
(bad)
and
call
or
gs
in
and
js
mov
leave
jne
and
cdq
test
es
jne
(bad)
and
xor
pusha
in
jne
and
jne
out
and
xor
enter
and
jne
sahf
and
xor
and
and
xor
xor
es
xor
and
loope
and
ret
lds
div
sbb
xor
daa
int
xor
and
hlt
int
je
and
js
mov
inc
jbe
and
xchg
mov
lods
aam
mov
data16
and
aad
and
mov
jo
lea
pop
and
jbe
sbb
xor
and
jne
jmp
xor
pop
dec
retf
add
cmc
cmp
xor
fs
inc
retf
and
jbe
iret
pop
xchg
enter
and
and
push
(bad)
dec
stos
gs
cmc
jne
jne
movs
sub
gs
fild
adc
jne
lods
in
pop
cld
lods
in
xor
aaa
xor
and
gs
cmp
lods
test
and
inc
test
mov
popa
aam
cmc
sub
jne
in
jne
lods
popa
cmp
and
aam
lods
xor
sub
jne
and
icebp
mov
pop
shl
cmp
fs
sub
xor
(bad)
enter
xchg
popa
or
and
xor
das
aam
mov
sub
je
cmps
dec
jo
gs
push
xor
dec
shl
js
pop
xor
(bad)
div
sub
xor
mov
shl
add
mov
in
je
lods
in
les
jne
sar
sar
and
jno
movs
or
and
mov
shl
and
jne
cmps
add
fs
fistp
jns
fs
xor
and
mov
sub
je
test
fs
xor
mov
xor
push
lds
jne
cmps
add
fs
fistp
jns
fs
xor
and
xchg
retf
and
in
and
dec
stos
gs
xor
mov
xor
dec
xor
aam
in
xchg
in
and
mov
iret
and
cmc
(bad)
add
jp
mov
gs
and
pushf
mov
xchg
mov
(bad)
add
sahf
data16
push
jne
lods
jecxz
daa
sahf
data16
int3
jge
xor
xchg
xchg
data16
sbb
data16
int3
ins
adc
stos
gs
or
jne
ret
int3
lods
loop
or
or
test
sahf
data16
int3
cmp
stos
gs
push
data16
int3
sub
xchg
data16
push
out
mov
ja
and
lods
cld
je
lods
out
xor
aaa
xor
mov
xor
data16
popa
int3
ins
xor
and
in
and
inc
cdq
xor
popa
fnstsw
shl
and
adc
and
sahf
push
xor
retf
and
jbe
cmps
adc
and
scas
jae
and
xlat
lods
popa
in
mov
and
xor
and
popa
test
mov
and
xor
(bad)
add
xchg
es
and
mov
ds
repz
nop
je
and
not
and
dec
cwde
test
jne
and
sar
and
jae
test
xor
test
popa
jmp
jno
je
xor
and
xor
mov
int3
cmc
push
and
clc
jno
je
inc
sub
fsub
and
and
xor
push
aad
and
jne
and
retf
push
rcr
iret
aad
xor
fild
ror
std
sub
(bad)
nop
data16
popa
int3
and
jno
je
and
mov
xchg
fbld
movs
xchg
pop
and
imul
div
nop
mov
cmp
add
scas
xor
lods
out
imul
sub
jno
scas
cmp
shl
imul
popf
pop
and
pop
and
test
add
dec
and
jno
je
retf
fist
retf
xor
jne
scas
xor
iret
sub
mov
inc
fdivr
jno
lods
xor
in
out
mov
jae
ins
mov
popf
sbb
and
jo
nop
data16
push
sub
retf
(bad)
gs
gs
imul
enter
jae
inc
sub
sub
(bad)
add
sub
jne
and
inc
cmp
(bad)
and
pop
cmp
(bad)
and
imul
sbb
jne
and
cmp
(bad)
and
icebp
ds
mov
daa
and
and
lods
popa
or
popa
mov
xchg
xor
sub
aaa
xor
xchg
popa
or
and
xor
fidivr
cmp
sub
mov
fisub
popa
and
fdivp
fisub
sub
and
sbb
lea
and
dec
fsub
jne
jp
ret
jno
dec
mov
test
data16
int3
jne
xor
sub
popa
fisttp
and
data16
je
and
and
jno
cmps
mov
mov
fisub
jbe
fsub
cmp
cmps
int3
jno
jno
cld
and
and
push
cmp
xor
or
test
and
add
movs
popa
mov
fcmovnu
jo
nop
data16
sbb
jno
jo
lea
jae
push
outs
cld
int3
cmps
int3
ja
sbb
jno
lods
lea
and
add
lods
fdiv
fsub
sub
xor
sbb
xor
and
aas
lods
fdiv
fsub
movs
dec
xor
push
arpl
test
into
jno
in
cld
xor
and
dec
or
push
adc
and
add
fdiv
fsub
movs
dec
xor
push
and
fsub
jae
push
(bad)
cld
int3
cmps
int3
jno
xchg
and
int3
and
xor
and
and
jne
or
gs
fisub
je
cmps
int3
jno
popa
fdivr
jno
test
lea
fsubr
jne
movs
sbb
push
jbe
int3
ins
movs
dec
xor
cmps
popf
movs
sbb
push
sbb
int3
cmps
int3
jbe
sbb
je
pop
lods
lea
and
dec
or
dec
retf
jne
and
mov
and
sub
test
xor
scas
and
jo
xor
lods
jno
and
movs
mov
and
cmp
jnp
outs
in
out
mov
ja
and
and
jbe
scas
add
cmp
and
or
and
cmp
daa
and
inc
aad
mov
daa
and
inc
ss
(bad)
jno
or
repnz
cld
pushf
frstor
jne
loop
mov
push
nop
aaa
xor
xchg
and
xor
fs
out
lods
fdiv
int3
icebp
ret
sub
and
jbe
sub
xor
sbb
adc
int
xor
push
push
mov
fdiv
sub
jmp
and
xchg
and
inc
int3
iret
push
mov
cmp
jne
popa
fdivr
(bad)
and
fidiv
hlt
cld
jno
test
and
lods
xor
sub
mov
xor
fbstp
scas
cmps
mov
out
or
(bad)
je
cmps
int3
jno
popa
fdiv
jo
and
gs
and
jbe
cmps
mov
pusha
cmp
je
cmps
int3
jno
popa
fdiv
or
jb
xor
(bad)
fild
jl
aaa
xor
push
mov
(bad)
cs
out
cld
rcr
mov
and
bound
mov
fcmovnu
mov
(bad)
sti
mov
and
lds
and
xor
and
inc
and
lock
sti
fisttp
fcmovnu
(bad)
and
jbe
and
mov
sti
mov
and
cmp
fcomi
or
inc
leave
jbe
and
xchg
jmp
(bad)
aaa
sub
mov
retf
mov
movs
sbb
cwde
data16
push
es
push
xchg
loopne
retf
fisttp
retf
fisttp
cmp
data16
int3
test
xor
scas
loopne
cli
fisttp
lods
gs
xor
mov
jmp
ja
mov
stos
retf
fcmovnu
inc
and
xor
stc
sub
and
loopne
cli
fisttp
movs
fs
mov
retf
mov
and
retf
mov
dec
in
mov
and
cmp
loop
(bad)
retf
fisttp
(bad)
retf
fisttp
or
add
je
and
mov
and
sub
mov
(bad)
es
and
je
jne
lods
loopne
sti
fisttp
jbe
movs
enter
mov
mov
popf
imul
mov
fcmovnu
jo
nop
data16
mov
stos
retf
fld
mov
xor
xor
fcmovnu
fild
add
jne
int3
sub
shl
ror
movs
mov
xor
jne
mov
push
mov
retf
(bad)
jge
jne
and
jbe
cmps
rcr
retf
fisttp
xor
dec
mov
and
mov
fist
popf
sub
fisttp
jno
sub
shl
mov
sahf
jbe
(bad)
out
in
ja
(bad)
es
fsubr
jno
nop
cdq
(bad)
fcmovnu
fild
cmp
and
retf
daa
and
inc
sub
jne
lods
mov
sahf
jp
out
and
and
iret
and
jne
push
xchg
mov
int3
ins
into
fcmovnu
sub
mov
and
xor
cli
fisttp
xor
mov
jp
jns
mov
(bad)
add
cld
sti
mov
int3
adc
xor
xor
xchg
ss
xor
mov
jne
mov
call
fisttp
fcmovnu
(bad)
int
mov
es
cmp
scas
sub
xor
mov
in
ja
std
in
ss
ja
imul
ja
mov
movs
enter
mov
and
inc
xchg
(bad)
nop
data16
cdq
(bad)
stos
retf
(bad)
outs
dec
jp
jbe
int3
aad
and
cld
mov
cli
mov
lods
out
and
sbb
and
loopne
cli
fisttp
lods
mov
(bad)
mov
cli
mov
scas
mov
jmp
ja
mov
scas
lock
cli
fisttp
retf
(bad)
ja
mov
lods
lock
sti
fisttp
retf
fld
mov
test
mov
test
outs
jl
jne
mov
sbb
mov
scas
lock
fisttp
retf
(bad)
mov
and
test
mov
frstpm(287
lahf
cmp
loopne
sti
fisttp
pop
sub
xor
mov
jmp
fistp
and
xor
xchg
ss
test
pop
mov
lods
sub
mov
jne
xchg
mov
fcmovnu
(bad)
add
xor
fcmovnu
fistp
data16
adc
xor
lods
lock
fisttp
push
and
sub
cmp
scas
lock
mov
xchg
and
frstor
jne
sub
or
and
sbb
and
lahf
retf
test
mov
mov
xchg
mov
and
fcom
sti
fisttp
jmp
(bad)
les
xor
or
les
and
sub
movs
dec
xor
xor
les
and
lods
aam
fsub
movs
dec
xor
sub
jo
nop
data16
xchg
mov
jmp
shl
dec
jmp
dec
frstor
jne
xor
jne
cmps
int3
mov
mov
iret
idiv
mov
and
bound
sti
mov
push
int
cdq
xchg
mov
and
cli
mov
in
ja
cwde
xor
out
fcmovnu
mov
and
dec
or
push
pop
mov
sbb
and
jne
cmp
xor
push
popa
mov
sbb
and
jne
movs
dec
or
and
xor
push
jbe
iret
in
jp
mov
sub
or
mov
and
retf
fcmovnu
shl
fisttp
retf
cmps
loopne
mov
(bad)
stos
retf
(bad)
jbe
add
retf
frstpm(287
xchg
lods
std
mov
es
ss
imul
xor
fisttp
retf
(bad)
xor
push
movs
retf
and
jbe
int
enter
mov
retf
mov
and
retf
mov
dec
in
mov
and
cmp
jnp
outs
in
out
mov
ja
and
fdiv
pop
and
adc
xor
lods
popa
(bad)
repnz
(bad)
ret
clc
add
aaa
xor
xor
sar
or
test
lock
int3
cmp
jne
sub
mov
int3
xor
jne
and
popa
fdivr
test
xor
and
iret
arpl
ficomp
xor
ret
push
jae
popa
(bad)
movs
xor
and
push
xchg
mov
fadd
and
mov
fldenv
nop
and
jne
daa
sub
popa
fstp
xor
cld
sub
movs
and
jne
popa
(bad)
addr16
in
jne
pop
dec
int
ja
jne
inc
fdivr
jno
lods
xor
sub
jne
and
lea
cmc
jno
and
cld
mul
and
cmps
fidiv
sub
and
jno
and
xor
add
cmps
les
fsub
add
movs
popa
mov
sub
jne
and
cmc
xor
and
xor
lea
sbb
ret
and
jne
shl
xor
popa
(bad)
popa
fnstenv
fnstcw
cmps
jbe
retf
fnclex
xor
and
arpl
fcomp
xor
cmc
push
jae
popa
(bad)
movs
xor
and
push
xchg
mov
in
lods
xor
rol
mov
fsubr
ret
aaa
sbb
jno
popa
(bad)
popa
mov
jg
div
nop
gs
and
xor
inc
mov
jne
rol
cld
jno
lods
mov
(bad)
fmul
jbe
xor
aad
cld
(bad)
and
jecxz
cmp
mov
adc
test
pop
cwde
imul
div
nop
mov
jne
int3
sub
and
pushf
cmc
push
and
xchg
mov
fld
and
push
sub
mov
les
arpl
int
es
ret
ret
lods
lock
sti
fisttp
xor
fisttp
xor
cmps
mov
adc
fdivr
repz
mov
gs
in
popa
and
push
data16
ret
ret
lods
xor
lods
jecxz
xor
and
inc
sub
jne
push
jo
xor
in
mov
lods
shl
xor
and
mov
enter
xor
jne
and
cmc
xor
and
aaa
dec
and
aaa
dec
and
xor
fild
cmp
aad
xor
lods
mov
fcmovu
add
cmps
pop
jns
push
and
jno
cmps
push
xor
rcl
hlt
iret
jb
xor
int3
test
mul
fs
scas
jbe
jne
popa
fmul
or
jne
ret
lods
xor
lods
jecxz
xor
pop
jns
push
sub
jno
lods
xor
iret
and
jno
lods
xor
fist
fist
(bad)
int3
mov
popf
(bad)
jne
jne
fcom
xor
jnp
cs
out
cld
shl
bound
adc
jo
fcmovne
es
dec
and
mov
and
pop
and
pop
and
jne
and
mov
int3
cmp
and
repnz
fimul
fild
mov
es
jne
and
popf
addr16
jne
popa
sub
cmc
cmps
in
mov
je
push
(bad)
test
es
push
sub
fdivr
and
jno
je
ss
aam
jbe
jb
mov
int3
or
cmps
or
adc
popa
lea
pushf
and
sub
out
mov
jae
stc
pop
mov
sbb
dec
and
mov
and
pop
and
pop
and
jne
and
mov
int3
lds
and
repnz
fdiv
jecxz
retf
jno
in
inc
pop
es
jne
and
popf
xor
pop
and
xor
je
add
push
jns
int3
xor
popf
fwait
je
jne
sbb
xor
ret
cld
jno
lods
mov
in
sub
out
mov
ja
and
fsubr
dec
call
jne
adc
and
and
je
arpl
or
pop
shl
retf
push
sub
fsub
jne
scas
popa
mov
jno
sbb
fcom
jo
xor
loopne
add
xchg
and
dec
adc
pusha
and
div
sub
dec
imul
iret
jle
sbb
jne
and
jno
or
dec
sub
bound
jbe
int3
and
scas
xor
lods
popa
lea
fsubr
mov
jg
div
nop
mov
xor
bound
sub
push
jns
popa
fsubr
or
(bad)
jno
lods
xor
lods
popa
add
aam
xor
dec
pop
xchg
jbe
int3
frstor
and
add
xchg
and
dec
adc
addr16
div
sub
dec
ret
push
int
adc
data16
cmps
ja
xor
movs
sbb
xor
std
out
cld
shl
jae
cmp
cli
cs
rol
cld
jno
lods
mov
jecxz
xchg
xor
and
adc
and
adc
and
or
test
and
aaa
and
jne
and
je
and
jno
cmp
mov
fs
jno
iret
push
mov
popa
cld
cld
imul
xchg
xor
sub
mov
and
(bad)
and
sbb
and
push
mov
xor
(bad)
cld
jno
lods
mov
popa
sub
fs
jno
iret
push
cmp
pusha
jo
cmps
in
xor
fisub
add
cmps
dec
popf
lods
cld
inc
in
lods
out
pop
fisub
add
pushf
mov
xchg
mov
scas
popa
jns
xchg
and
popa
sub
ret
hlt
sbb
dec
and
and
sub
(bad)
jns
lods
mov
sub
aad
popa
movs
xor
sbb
xor
popa
jns
xchg
fs
jno
jp
jbe
pop
in
xchg
and
sub
(bad)
jno
sub
je
scas
and
xchg
daa
cmp
hlt
je
shr
std
out
in
mov
in
and
xor
mov
imul
mov
mov
in
or
movs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
cld
mov
movs
mov
scas
movs
mov
in
and
aaa
xor
lahf
movs
xlat
data16
lea
pusha
inc
pop
mov
mov
mov
in
cmp
movs
mov
in
in
in
mov
lods
movs
mov
in
enter
mov
in
mov
in
int
fs
(bad)
adc
movs
inc
int3
jne
and
sub
movs
and
pop
sbb
scas
cmp
movs
mov
(bad)
jl
mov
movs
scas
je
movs
mov
inc
daa
mov
in
cmps
out
movs
mov
dec
push
in
mov
div
sub
movs
mov
add
mov
in
inc
mov
movs
mov
adc
xchg
xor
xor
xor
sub
push
and
aaa
xor
(bad)
aaa
xor
pusha
inc
pop
out
in
mov
in
and
xor
movs
mov
in
mov
in
mov
lea
mov
inc
jbe
in
mov
sbb
std
mov
movs
mov
mov
mov
in
div
movs
mov
in
in
mov
movs
mov
and
in
mov
in
mov
in
imul
inc
movs
mov
in
fdiv
movs
mov
in
and
aaa
xor
cmps
lea
mov
inc
jbe
in
mov
movs
xlat
data16
mov
mov
mov
mov
in
div
movs
mov
in
in
mov
movs
mov
and
in
mov
in
mov
in
adc
pop
mov
inc
movs
mov
in
fdiv
movs
mov
in
mov
in
mov
pushf
sysexit
(bad)
shl
jae
imul
xor
jecxz
mov
cmps
or
and
inc
ret
mov
int3
rcl
fsubr
fcom
repz
aam
xor
lds
and
lods
xor
rcr
mov
out
popa
fild
je
lods
jno
mov
fbstp
and
xor
and
pop
(bad)
imul
popa
xchg
mov
pop
jne
fwait
and
and
ret
popa
fild
or
in
jno
mov
std
popa
fisubr
pop
and
pop
add
sub
and
xchg
cmp
or
xchg
jno
sbb
jne
and
gs
sub
(bad)
sbb
mov
jne
rol
mov
fmul
pop
mov
jne
test
jno
xor
sub
jno
je
in
and
(bad)
jp
jno
je
je
inc
jnp
and
xor
cld
je
je
push
jnp
and
lock
inc
imul
and
retf
popa
aam
and
or
fcmovnu
mov
jg
div
nop
mov
sbb
bound
sub
sub
(bad)
rol
cld
jno
lods
mov
sub
xor
sub
in
cld
cmc
ror
je
in
js
fnstsw
pop
(bad)
lods
hlt
sub
out
and
lods
aam
shr
cmps
dec
lock
data16
push
and
ins
ja
and
xor
je
add
pop
(bad)
retf
(bad)
jl
sub
jp
pop
retf
mov
es
popa
or
xor
cdq
data16
repz
int3
jae
sbb
shl
fild
mov
jbe
loopne
aaa
xor
int3
sub
inc
cmp
loopne
loop
cmp
cld
in
daa
and
jno
je
ja
and
mov
cmp
cld
cdq
data16
popa
fcomp
jno
scas
pusha
in
data16
xor
test
popa
fdiv
in
cdq
aaa
xor
and
jno
push
lods
xchg
lock
aaa
xor
popa
(bad)
fbstp
lods
test
cld
daa
xor
scas
xor
and
popa
lea
test
enter
jo
cdq
data16
popa
fadd
in
int3
fnstcw
xor
lods
xor
int3
sar
xor
scas
or
sub
ret
(bad)
gs
cdq
data16
(bad)
imul
imul
xor
pop
mov
imul
xchg
cmps
cmc
(bad)
xor
jecxz
sbb
fiadd
jne
dec
fs
mov
cdq
data16
int3
push
cmp
cmps
mov
test
enter
xor
iret
ds
(bad)
rol
cld
jno
lods
mov
cld
daa
xor
scas
xor
and
popa
xor
and
jo
cdq
data16
popa
rol
loop
lock
xor
iret
xor
les
cld
jbe
aam
pusha
call
xor
xor
and
jbe
cld
cdq
aaa
xor
popa
test
lods
stos
aaa
sbb
enter
ret
popa
retf
cmc
xchg
mov
data16
cmp
cdq
aaa
xor
sub
sti
daa
dec
lock
data16
xchg
jno
in
scas
popa
mov
scas
sub
cmp
lods
test
ret
cld
lods
loop
dec
retf
and
popf
sub
xchg
xor
je
lods
aaa
and
enter
popf
dec
fcomp
mov
dec
and
ss
and
xor
and
xor
fild
cmp
test
xor
dec
and
jno
je
inc
les
inc
ror
jle
and
ficomp
xchg
fdivr
int3
cmp
and
hlt
fs
outs
in
out
mov
es
addr16
retf
(bad)
and
xor
movs
jo
nop
data16
and
jne
cmp
xchg
jbe
lods
test
jle
jne
sahf
idiv
push
xor
cld
cmc
ror
mov
and
mov
or
lods
mov
jecxz
cld
into
lods
mov
retf
mov
(bad)
cmp
sub
dec
fistp
and
in
lahf
cmc
fisub
mov
cmp
cld
mul
sbb
jno
and
jge
out
loop
xor
fisttp
xor
lods
mov
out
add
loop
jo
fcmovnu
inc
repnz
push
cld
(bad)
rol
cld
mov
(bad)
mov
fimul
xchg
data16
rol
jne
mov
je
jmp
jne
and
jne
es
jne
and
jne
and
clc
mov
(bad)
jl
and
mov
(bad)
les
pushf
std
clc
data16
fdiv
and
mov
(bad)
cs
sbb
retf
xchg
ror
jl
and
adc
jge
xor
(bad)
nop
data16
dec
stc
xchg
jbe
test
mov
ds
lods
test
mov
je
call
mov
je
xor
and
fsub
jne
(bad)
add
lds
pop
jmp
mov
and
mov
pop
jne
and
sbb
pop
pop
lds
xor
es
movs
int3
jnp
and
div
jo
sub
jne
jp
mov
gs
and
or
xchg
cmp
and
jo
nop
data16
jecxz
xor
cmps
adc
and
xor
je
xor
je
jne
sbb
xor
and
xor
and
inc
sub
add
loope
xor
lods
lea
aad
mov
xor
popa
fmul
xor
xor
add
int3
jmp
add
int3
test
and
sub
out
cld
shl
retf
gs
(bad)
xchg
mov
fist
fmul
and
mov
fild
cmp
push
jge
adc
loopne
imul
and
jle
push
mov
inc
pop
xor
dec
jno
and
add
push
jns
push
sub
xor
jne
loopne
sub
jno
shl
and
movs
sar
arpl
clc
jno
je
jno
je
xor
and
and
jne
and
jne
push
sub
jge
and
hlt
push
and
adc
and
push
imul
push
mov
ss
jne
sub
push
mov
(bad)
ins
jne
adc
fdiv
jecxz
inc
fmul
movs
jl
and
hlt
fs
div
nop
mov
xor
arpl
cmp
mov
and
and
jae
lods
fadd
jecxz
jno
je
sub
and
add
fist
fdivr
in
xor
popa
ins
fs
jne
and
add
push
mov
scas
ins
jne
sub
push
mov
inc
ins
jne
adc
push
mov
jle
jne
sub
cld
int3
rol
cld
jno
lods
mov
jp
mov
lods
shl
jae
pop
bound
lea
repz
push
pop
popf
fwait
pusha
and
fs
ins
xor
lods
xor
movs
rcr
enter
or
adc
dec
jne
jecxz
jne
dec
and
xor
and
push
lds
fsub
arpl
xchg
mov
sub
in
jno
in
arpl
adc
mov
jb
and
jno
iret
jae
jecxz
add
jnp
std
out
push
add
mov
jne
scas
pusha
push
xor
and
fs
and
jae
add
das
dec
es
mov
jg
jne
pop
sub
cmp
(bad)
jno
lods
(bad)
sbb
and
xor
xor
mov
sub
int3
punpcklwd
jno
mov
es
int3
cmps
in
fistp
lods
sbb
movs
sbb
push
out
dec
sub
adc
cld
int3
ins
movs
dec
xor
push
pusha
mov
and
lods
ret
(bad)
lods
xor
lods
out
jno
fs
jbe
aam
jno
je
jg
and
mov
cld
lods
mov
fist
mov
je
add
add
xor
lods
lods
ret
(bad)
lods
xor
lods
out
jno
and
mov
sub
lods
xor
lods
out
push
in
mov
lods
shl
xor
arpl
aam
add
jno
xor
and
popf
(bad)
jne
popa
fdivr
repz
ret
div
sub
pop
je
cmp
xor
lods
xor
scas
popa
test
jno
inc
ret
jp
and
test
sub
ret
xor
cmps
test
and
pop
push
lea
inc
mov
fisub
dec
fisubr
ret
or
lods
lea
mov
cmps
mov
jb
lea
sahf
imul
into
daa
cld
popa
enter
jecxz
and
jle
aaa
xor
int3
popa
jae
and
lock
jno
sub
jno
pop
xor
push
mov
jno
iret
jg
popa
aam
mul
jnp
outs
in
out
mov
es
aas
data16
addr16
into
sahf
jns
bound
out
rol
fcmovnu
mov
sbb
retf
mov
int3
and
fcmovnu
div
sub
mov
out
aas
xor
sub
mov
sbb
cdq
(bad)
retf
fcmovu
jne
sub
pop
addr16
add
and
mov
int3
lods
ja
and
mov
fisttp
xor
rcl
int3
fcmovnu
mov
fld
mov
cld
mov
fist
(bad)
mov
test
and
arpl
popf
jmp
and
mov
fistp
xlat
lods
mov
cld
neg
push
jge
and
aaa
xor
pushf
add
and
xlat
lods
mov
cld
imul
in
mov
fld
xor
inc
(bad)
loopne
fcmovnu
mov
call
sub
popa
lds
retf
push
sub
xor
jne
loopne
sbb
retf
xchg
fmul
jno
and
lock
lds
and
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
sti
popa
and
mov
sub
mov
cs
xor
ror
int3
pop
xor
popf
push
xor
and
ret
fnsave
mov
fisttp
aad
and
fcom
jne
cmps
loopne
mov
out
and
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
pop
popa
and
mov
sub
add
data16
xchg
fmul
jno
and
lock
ins
jno
and
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
add
jne
loopne
popf
(bad)
pusha
and
lea
and
xor
ror
int3
lds
xor
popf
push
xor
and
ret
fnsave
mov
fisttp
aad
and
fdivr
pusha
jne
cmps
loopne
retf
push
add
mov
(bad)
lds
fs
in
xor
cmps
mov
lods
cld
inc
in
lods
out
scas
pusha
and
lea
and
xor
ror
dec
aam
jbe
fcmovnb
enter
fcomp
loopne
pop
lds
xor
xchg
mov
fcmovu
popf
xchg
pusha
and
mov
sub
push
pusha
and
lea
and
xor
ror
dec
aam
jbe
fcmovnb
enter
fsub
loopne
pop
daa
lds
xor
xchg
mov
fcmovu
popf
pop
pusha
and
mov
sub
mul
adc
int3
add
xor
popf
jg
and
in
ret
frstor
popf
daa
pusha
and
lea
jne
mov
cdq
mov
fcmovu
and
aaa
xor
int3
gs
and
lock
test
and
fsub
and
lods
rcr
daa
pop
fld
aaa
xor
cdq
stos
retf
(bad)
and
retf
xor
mov
and
mov
fisttp
aam
and
fdiv
addr16
cmps
loopne
fcom
cs
and
or
fidiv
pop
int3
aad
and
int3
push
and
jne
rcr
daa
mov
(bad)
or
data16
int3
mov
mov
pushf
icebp
or
mov
fld
jne
popf
cs
and
or
fidiv
aaa
dec
test
data16
sbb
test
mov
int3
ins
ss
popf
jg
and
in
ret
frstor
sbb
retf
xchg
fmul
ja
and
lock
push
ja
and
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
ja
and
mov
sub
fistp
jne
dec
mov
jbe
fild
and
(bad)
xor
int3
mov
and
lock
test
ds
jne
rcr
test
pop
pop
out
les
xor
xchg
mov
fcmovu
popf
iret
data16
mov
sub
and
lea
and
xor
ror
dec
aam
jbe
fcmovnb
enter
fdiv
data16
cmps
loopne
fdiv
cs
and
or
fidiv
pop
int3
cmc
jbe
and
push
and
jne
rcr
daa
mov
(bad)
or
data16
int3
pop
aaa
xor
cmps
mov
cmps
pop
push
xor
mov
not
and
xor
and
mov
and
ins
inc
and
adc
mov
cld
mul
(bad)
push
scas
lock
fcmovnu
mov
mov
pop
lock
fcmovnu
mov
scas
enter
mov
cdq
cwde
mov
fld
ret
or
lods
lea
mov
inc
daa
mov
and
iret
jnp
loopne
ret
(bad)
in
aaa
lods
mov
retf
(bad)
cld
jecxz
jecxz
arpl
(bad)
pop
jle
aaa
xor
cdq
jne
fcmovnu
and
cli
gs
cmps
loopne
retf
mov
movs
enter
mov
fcmovnb
rcr
mov
push
cmp
mov
and
retf
je
lock
fs
inc
xchg
jbe
je
xchg
gs
mov
cmp
(bad)
adc
xor
movs
xor
and
jg
and
in
ret
frstor
sbb
retf
xchg
fmul
jne
and
lock
sub
and
ds
jne
rcr
test
pop
pop
out
les
xor
xchg
mov
fcmovu
popf
dec
gs
mov
sub
add
jne
cs
xor
ror
dec
aam
jbe
fcmovnb
enter
fdiv
jne
cmps
loopne
mov
in
leave
(bad)
rcr
mov
fistp
mov
cmps
lea
fcomp
(bad)
xor
int
xor
cmp
mov
imul
xor
(bad)
mov
movs
xchg
jge
jne
popa
cmp
in
and
or
fld
idiv
and
mov
fld
mov
push
xor
mov
(bad)
fs
mov
sub
mov
cmps
in
mov
je
push
(bad)
repz
lods
enter
mov
out
lock
fisttp
neg
(bad)
retf
(bad)
and
xor
mov
and
retf
cmps
loopne
mov
fcmovnu
rol
fimul
adc
mov
and
xor
int3
inc
je
and
lock
popa
je
and
ds
jne
rcr
test
pop
pop
jns
aaa
xor
xchg
mov
fcmovu
popf
pop
fs
mov
sub
test
dec
xor
popf
jg
and
in
ret
frstor
sbb
retf
xchg
fmul
je
and
lock
mov
and
int3
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
xlat
sbb
adc
jne
xor
fcomi
rcr
mov
mov
lods
mov
mov
je
sbb
int3
jge
fcmovnu
div
sub
mov
fcmovu
mov
aaa
xor
xchg
mov
fcmovu
popf
mov
loopne
hlt
fild
jne
int3
popa
dec
xor
popf
jg
and
in
ret
frstor
sbb
retf
xchg
fmul
or
div
sub
push
or
int3
ds
jne
rcr
test
pop
pop
out
les
xor
xchg
mov
fcmovu
popf
or
and
mov
sub
iret
sbb
xor
ror
dec
aam
jbe
fcmovnb
enter
fdivr
sbb
cmps
loopne
pop
push
les
xor
xchg
mov
fcmovu
popf
xor
and
mov
sub
in
or
cdq
dec
xor
popf
jg
and
in
ret
frstor
popf
lahf
sbb
xor
ror
fcmovu
and
aaa
xor
int3
fisttp
and
div
xor
std
or
int3
ds
jne
rcr
test
pop
pop
jns
aaa
xor
xchg
mov
fcmovu
popf
xchg
sbb
push
sbb
xor
ror
dec
out
xchg
jbe
fcmovnb
enter
fsub
loopne
fcomp
sbb
popf
cs
and
or
fidiv
aaa
dec
test
data16
sbb
jns
xor
cmps
mov
movs
iret
ins
pop
and
popf
daa
sbb
xor
ror
int3
and
push
xor
and
ret
fnsave
mov
fisttp
aad
and
(bad)
sbb
cmps
loopne
pop
or
xchg
mov
fcmovu
popf
cmp
and
mov
sub
call
and
lea
and
xor
ror
dec
aam
jbe
fcmovnb
enter
fmul
sbb
cmps
loopne
mov
pusha
jne
rol
cld
mov
fisttp
sub
data16
xchg
fmul
or
div
sub
icebp
or
int3
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
xchg
sbb
les
retf
xchg
fmul
or
div
sub
fstp
and
adc
mov
cld
test
popf
jg
and
in
ret
frstor
sbb
retf
xchg
fmul
or
div
sub
lock
mov
fcmovu
and
xor
int3
imul
xor
mov
and
int3
ds
jne
rcr
test
pop
pop
aam
aaa
xor
xchg
mov
fcmovu
popf
das
sbb
xor
data16
xchg
fmul
or
div
sub
mov
daa
and
fcomp
cs
and
or
fidiv
aaa
dec
test
data16
sbb
stc
dec
xor
cmps
mov
int3
mov
popf
aaa
and
in
ret
(bad)
push
xor
jae
mov
fisttp
jmp
and
fsubr
loopne
fmul
jne
popf
cs
and
or
fidiv
aaa
dec
test
data16
sbb
test
mov
pushf
cs
xor
rcl
leave
fld
aaa
xor
xchg
mov
fcmovu
popf
pop
sbb
adc
and
lea
and
xor
ror
dec
aam
jbe
fcmovnb
enter
fsub
jne
cmps
loopne
fsub
sbb
popf
cs
and
or
fidiv
pop
int3
test
and
int3
push
and
jne
rcr
daa
mov
(bad)
or
data16
int3
leave
dec
xor
cmps
mov
dec
hlt
stos
jbe
fcmovnb
enter
(bad)
pop
jne
cmps
loopne
pop
and
jne
es
jne
and
jne
and
mov
int3
or
mov
fisttp
in
lods
out
sbb
(bad)
and
jne
cdq
ror
retf
xchg
fmul
(bad)
(bad)
xor
xchg
popf
retf
(bad)
popf
pop
adc
retf
ins
or
and
(bad)
pop
jb
cmp
jne
mov
jnp
outs
in
out
mov
and
or
mov
lods
lea
popa
(bad)
pop
lods
lea
xchg
popa
mov
stos
jbe
test
mov
dec
xor
dec
jne
mov
mov
and
mov
icebp
test
(bad)
mov
and
pop
and
dec
jmp
and
jle
data16
and
xchg
test
fisttp
data16
out
cli
data16
iret
cli
aaa
xor
daa
jne
movs
int3
push
(bad)
fcmovnu
div
add
lea
in
out
mov
es
addr16
retf
xor
(bad)
xchg
mov
fld
mov
(bad)
jno
movs
dec
xor
les
mov
scas
popa
jge
and
je
and
cld
mov
(bad)
shr
(bad)
repz
lods
mov
loop
and
call
mov
lods
mov
leave
fcmovnu
and
mov
jne
lods
mov
mov
int3
mov
and
test
clc
pusha
cs
pusha
es
mov
fld
mov
int3
push
inc
xor
lods
lock
(bad)
mov
xchg
test
add
cld
mov
(bad)
leave
fcmovnu
popf
adc
jne
jno
(bad)
mov
test
test
clc
pusha
cs
aaa
mov
(bad)
jne
and
aaa
xor
adc
lock
sar
gs
and
lock
(bad)
mov
dec
xor
int3
mov
fcom
and
test
mov
stos
jbe
dec
shr
and
ss
cmc
fadd
retf
mov
cmps
loopne
cmp
int3
cmp
mov
inc
es
movs
retf
mov
aaa
fcmovu
mov
jecxz
jno
and
clc
mov
fimul
sbb
mov
inc
xor
fcmovnb
mov
xchg
mov
retf
fcmovnu
sar
lods
mov
fcmovnu
shr
mov
(bad)
mov
(bad)
(bad)
fcmovnu
div
add
lock
fisttp
(bad)
int3
add
xlat
and
stos
jbe
test
mov
dec
xor
movs
call
nop
mov
(bad)
fcomp
mov
je
lea
and
test
fisttp
retf
(bad)
jne
pusha
dec
jne
mov
je
inc
sbb
jne
loopne
hlt
ret
or
jne
jecxz
int
fcmovnu
xor
and
mov
fimul
xor
jecxz
(bad)
fisttp
mov
fisttp
repz
and
lea
fcmovu
mov
call
(bad)
mov
fisttp
xor
add
xor
and
xor
mov
and
add
jl
sub
mov
int3
cmp
cwde
push
and
adc
mov
cld
repz
sbb
pop
pop
cli
aaa
xor
mov
and
xor
loopne
repnz
and
sbb
jecxz
mov
fimul
jmp
jne
out
mov
aas
dec
popf
aaa
and
popf
not
and
mov
dec
mov
(bad)
mov
sbb
pop
cld
sub
and
xor
int3
rol
and
test
push
jg
and
jne
int3
mov
xor
dec
jno
and
clc
mov
fimul
cmp
and
pop
and
and
mov
fimul
mov
fcomi
lock
mov
and
add
cmps
sub
fbstp
cmps
shr
movs
retf
fistp
and
xor
(bad)
mov
je
(bad)
adc
xor
jb
jecxz
and
pop
and
rcl
adc
fist
popf
aas
pop
and
mov
fcmovne
jns
(bad)
xchg
mov
fld
mov
mov
ja
and
imul
mov
jecxz
add
sbb
mov
lods
jno
mov
das
cmp
fild
cmp
add
and
mov
lods
jno
retf
push
xor
and
and
mov
shl
aas
adc
popa
shr
ret
sub
popa
fsub
xor
test
pop
xor
add
and
mov
mov
jne
rol
cld
jno
lods
mov
in
or
and
popa
cdq
mov
popa
cmp
mov
cmp
jne
cmps
loopne
retf
push
sub
les
mov
call
sub
popa
(bad)
jo
and
xor
fild
and
xchg
xor
test
xchg
and
test
int3
sbb
xchg
popa
mov
xchg
jno
xor
shr
popf
jnp
and
mov
push
jne
rol
cld
jno
lods
mov
popa
fsub
js
fs
and
jne
jbe
jne
lods
loop
retf
jb
jne
and
clc
jno
je
fsubr
fadd
mov
adc
fsubr
push
in
mov
lods
ror
cmp
xor
jb
mov
or
lea
mov
lods
mov
mov
fs
and
lock
fisttp
aam
(bad)
xor
cmp
and
mov
in
icebp
cmps
and
jne
shl
jno
and
mov
int3
int
xor
cmps
mov
sub
xchg
mov
inc
sub
std
add
and
int3
or
in
fild
mov
fisttp
mov
(bad)
in
mov
je
popf
sti
or
mov
jecxz
mov
int3
mov
xor
cmps
mov
sub
xchg
mov
inc
sub
inc
add
and
fild
in
fild
iret
fild
fsub
sub
out
mov
and
popf
fisttp
and
addr16
(bad)
imul
hlt
fidiv
aam
les
and
inc
xor
lods
lods
mov
(bad)
inc
(bad)
scas
xor
lahf
fisttp
les
jno
jbe
ja
mov
loopne
cld
(bad)
rol
cld
mov
sti
mov
scas
mov
cld
repnz
push
jbe
test
mov
inc
xor
cmps
mov
int3
or
and
jg
and
in
ret
frstor
sbb
mov
(bad)
adc
xor
and
lea
and
xor
ror
int3
rol
and
push
xor
and
ret
fnsave
mov
mov
jae
sub
mov
mov
jae
cdq
pop
and
div
xor
mov
ds
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
mov
and
and
inc
aad
and
mov
les
pop
and
div
sub
stc
pop
and
int3
ds
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
fadd
jne
popf
cs
and
or
fidiv
or
and
push
and
jne
rcr
daa
mov
(bad)
ins
cli
data16
cdq
and
retf
(bad)
jg
and
mov
xor
inc
xor
addr16
and
mov
les
aad
and
mov
les
pop
and
div
xor
mov
es
jne
popf
cs
and
or
fidiv
xor
data16
mov
les
pop
and
div
sub
jg
data16
mov
les
pop
and
div
sub
mov
ds
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
pop
daa
lds
xor
mov
and
xor
loopne
mov
loop
std
push
and
int3
ds
jne
rcr
test
pop
pop
fcom
jne
popf
inc
jne
and
or
test
mov
jl
jbe
test
mov
dec
inc
xor
cmps
mov
dec
or
lock
fisttp
xor
cmps
mov
int3
sbb
jg
and
in
ret
frstor
sbb
mov
(bad)
push
and
mov
sub
and
and
ret
ret
(bad)
sti
fisttp
jmp
mov
je
inc
push
and
div
sub
test
and
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
pop
les
xor
mov
and
xor
loopne
mov
not
add
and
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
retf
push
sub
mov
les
jmp
mov
je
stc
add
xor
sbb
and
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
pop
and
aaa
xor
mov
and
xor
loopne
fcom
adc
jne
and
or
fidiv
xor
data16
mov
les
add
sub
mov
shr
(bad)
repnz
fld
and
popf
aaa
and
in
ret
(bad)
push
xor
jae
mov
mov
jae
arpl
data16
mov
mov
jae
cdq
add
and
lock
mov
ds
jne
rcr
test
pop
popa
pop
aam
aaa
xor
mov
and
xor
loopne
pop
cli
sti
aaa
xor
mov
and
xor
loopne
mov
mov
lods
mov
mov
cs
and
or
fidiv
xor
data16
mov
les
add
and
lock
adc
ds
jne
rcr
test
pop
pop
fsubr
jne
popf
inc
jne
and
or
test
mov
jl
jbe
test
mov
popa
inc
xor
cmps
mov
dec
hlt
stos
jbe
test
mov
inc
xor
cmps
mov
dec
and
xor
es
xor
and
xor
and
addr16
cmc
pop
xor
lods
lock
mov
and
xor
test
mov
pop
xor
dec
jne
cdq
fsubr
mov
(bad)
sbb
or
and
ror
fisttp
xor
in
fbld
movs
sbb
jg
div
nop
mov
mov
xor
ja
arpl
movs
mov
dec
and
mov
mov
inc
ret
fidiv
and
(bad)
imul
jne
jno
clc
pusha
es
mov
lods
fadd
iret
fcmovnu
cld
repz
mov
popf
mov
and
fsubr
ror
xor
rcl
retf
fld
aaa
xor
cdq
pop
xor
lods
lock
(bad)
mov
mov
lods
mov
xor
jne
mov
je
iret
or
xor
mov
and
xor
nop
stos
jbe
dec
ja
and
popf
inc
rcr
mov
add
mov
sbb
mov
(bad)
nop
(bad)
push
and
cld
int3
adc
xchg
aad
fcmovnu
es
(bad)
(bad)
mov
sub
sbb
mov
(bad)
or
retf
(bad)
fcomp
mov
je
movs
sbb
popf
mov
mov
movs
adc
and
pop
pusha
dec
jne
mov
je
jnp
and
mov
cmp
lods
add
jne
ret
lods
lock
(bad)
mov
fcmovu
mov
and
repz
and
enter
mov
add
repz
and
jne
rol
cld
mov
fisttp
mov
fimul
rcr
fld
mov
je
mov
fimul
pop
and
push
pop
and
jne
and
lock
fs
and
adc
and
cmp
and
mov
sbb
and
xchg
aad
fcmovnu
sbb
pop
pop
cli
aaa
xor
mov
and
xor
loopne
repnz
and
add
mov
cld
repz
(bad)
xor
imul
in
outs
pop
int3
daa
jne
int3
mov
xor
movs
lock
(bad)
mov
fcmovnu
dec
xor
jl
sub
sbb
fcom
jne
dec
and
test
mov
test
and
hlt
fcomi
jb
xor
and
jne
mov
je
inc
xchg
fisttp
retf
(bad)
xor
test
mov
or
fcmovnu
div
sub
mov
mov
dec
jne
xchg
mov
retf
fld
mov
pop
xor
test
mov
loope
fcmovnu
popf
xchg
repnz
inc
and
adc
mov
cld
repz
popf
push
push
and
pop
das
cli
aaa
xor
adc
and
sbb
(bad)
int3
xor
mov
sub
das
stos
jbe
int3
ins
push
and
(bad)
test
cmps
iret
dec
lods
out
(bad)
ja
shl
repz
cmps
loopne
fistp
scas
lock
fisttp
(bad)
fist
popf
pop
repz
ret
xchg
xor
int3
push
sbb
mov
and
xor
fadd
jecxz
mov
(bad)
sbb
fist
popf
arpl
rcl
retf
fld
mov
fcmovne
pop
sbb
and
mov
(bad)
std
out
jne
lods
shl
xor
and
jns
mov
outs
dec
movs
jecxz
and
dec
or
(bad)
retf
push
sub
mov
es
pop
fs
in
and
cld
repnz
fcomp
jecxz
(bad)
int3
adc
and
popf
prefetch
pusha
and
jne
ja
add
and
cld
int3
or
popa
mov
and
xor
xor
add
lods
mov
(bad)
out
and
mov
pop
jne
rol
cld
jno
lods
mov
popa
fsub
xor
jb
dec
add
cmp
lods
popa
test
in
out
mov
and
popf
scas
add
and
adc
and
sbb
sub
in
ja
fadd
jecxz
retf
sub
retf
(bad)
retf
xor
and
lock
int3
(bad)
(bad)
cmps
mov
sbb
mov
push
jno
aam
jns
es
(bad)
or
jne
loop
shr
mov
lods
shl
xor
lds
fmul
popa
fdivr
repz
jecxz
retf
sahf
pop
lods
fadd
jecxz
and
pop
and
aaa
xor
popa
fwait
fs
icebp
pop
xor
test
jne
addr16
cmc
xchg
data16
pop
or
popa
mov
(bad)
aaa
xor
popa
fwait
fs
lea
and
mov
test
and
ja
and
retf
adc
jmp
and
ret
and
xor
(bad)
retf
xor
cmps
fdivr
stos
jnp
div
nop
gs
and
lods
aam
shr
dec
jne
es
jne
and
jo
and
dec
jne
mov
jne
dec
and
xor
and
and
popa
pop
xor
lods
mov
and
adc
xchg
data16
xchg
or
jne
and
adc
cmps
or
jne
aam
xchg
mov
dec
and
inc
mov
data16
pop
or
xor
and
inc
sbb
or
xor
and
inc
sub
or
xor
and
inc
sbb
gs
outs
or
xor
retf
and
pop
xor
adc
jne
int3
inc
sbb
and
xor
adc
sbb
and
xor
adc
jbe
int3
popa
sbb
and
fidiv
and
fild
mov
add
dec
and
inc
les
add
dec
and
inc
mov
cli
add
dec
and
inc
lods
xchg
fsubr
add
jnp
mov
inc
cld
or
int3
adc
fmul
xor
jns
xor
xchg
fs
frstor
fild
mov
add
dec
fmul
xor
sbb
dec
stos
gs
frstor
fild
test
fmul
add
dec
fmul
xor
xor
and
push
stos
gs
frstor
fild
mov
add
lods
fcomp
jecxz
enter
mov
add
xor
int
je
dec
mov
adc
loopne
and
xchg
adc
pop
enter
stos
gs
repz
xor
int
je
dec
mov
adc
jne
int3
leave
adc
pop
enter
stos
gs
xchg
add
xor
int
je
dec
mov
adc
jne
int3
in
adc
pop
enter
xchg
data16
dec
add
xor
int
je
dec
mov
adc
add
and
sub
jno
nop
mov
cmp
arpl
lods
lea
sar
aaa
xor
push
jge
sbb
retf
lods
loop
fdivr
data16
int3
mov
mov
xchg
jne
dec
jne
int3
mov
xor
movs
sub
aam
(bad)
int3
lods
push
xor
dec
jne
adc
jmp
popa
mov
popa
shl
jno
je
xor
and
xor
movs
and
xor
lds
ss
popf
outs
add
xor
and
add
mov
and
int3
punpcklwd
pop
xor
pop
and
cmc
fs
loopne
jbe
dec
scas
jmp
int3
add
and
jno
gs
fld
push
jne
dec
and
add
mov
mov
pusha
test
dec
mov
xor
scas
xor
punpcklwd
pop
jne
popa
pop
sub
clc
xchg
jbe
dec
scas
jmp
int3
lds
and
adc
xor
es
xor
and
xor
pop
xor
and
xor
cwde
ja
and
jne
and
jge
xor
push
adc
cld
repnz
and
inc
xor
add
dec
and
add
mov
mov
pusha
test
dec
xor
add
and
pop
inc
dec
pop
pop
and
jne
dec
dec
test
and
scas
jmp
int3
push
push
xor
xchg
xchg
data16
xor
adc
gs
xor
adc
xchg
gs
and
pop
ja
and
or
xor
je
sub
data16
(bad)
stc
aaa
xor
and
or
and
xchg
test
adc
popa
cdq
mov
adc
jmp
pusha
aad
and
gs
cmc
and
jne
and
pop
pop
and
jne
dec
jmp
data16
xor
fst
and
jns
gs
xor
adc
gs
xor
adc
xchg
gs
and
pop
je
and
retf
xor
and
sbb
and
xor
dec
sti
call
stc
data16
and
mov
and
(bad)
and
fild
mov
fild
test
pop
inc
dec
adc
jne
dec
xor
pop
clc
lds
xor
mov
jne
stos
add
xchg
call
dec
inc
and
pop
pop
clc
aaa
xor
and
ja
and
fs
imul
data16
xor
addr16
and
inc
fdivr
add
dec
and
add
mov
mov
inc
test
xor
or
dec
inc
pop
mov
aaa
and
and
xor
mov
jne
add
jne
xchg
retf
adc
jmp
inc
aad
and
pop
xor
dec
mov
and
(bad)
and
aaa
and
and
xor
mov
jne
into
pop
jne
xchg
jmp
fistp
xor
adc
gs
xor
adc
xchg
gs
and
pop
sbb
pop
dec
and
jne
je
push
call
stc
data16
and
fst
and
(bad)
movs
xchg
mov
popa
int3
cld
repz
and
add
mov
mov
pusha
test
dec
xor
mov
and
pop
(bad)
xor
dec
jne
and
sbb
pop
(bad)
stc
aaa
xor
and
push
pop
and
xchg
push
test
xor
and
add
mov
mov
pusha
test
dec
xor
push
dec
cmp
xor
dec
mov
and
sbb
pop
data16
aaa
xor
(bad)
test
and
jne
or
jne
xchg
jne
dec
jne
adc
jmp
pusha
aad
and
gs
fldenv
xor
dec
adc
jne
dec
aaa
test
jmp
int3
rcl
and
test
fist
inc
stos
gs
xor
adc
xchg
gs
and
jb
jle
and
pop
test
xor
dec
jae
data16
out
stc
data16
and
leave
push
and
(bad)
mov
and
inc
add
fild
test
pop
cmp
pop
xor
and
jne
xor
movs
je
call
and
and
xor
int3
cmc
push
and
(bad)
mov
data16
and
inc
add
fild
test
pop
cmp
div
and
mul
jne
xor
movs
je
movs
xchg
pop
and
and
xor
int3
xor
and
(bad)
sub
pop
popa
xor
dec
jne
adc
jmp
inc
aad
and
ins
pop
or
test
and
mov
dec
test
xor
and
jne
int3
and
and
pop
stos
gs
xor
adc
gs
xor
adc
sub
inc
sbb
pop
xor
movs
je
call
and
and
xor
int3
mov
adc
gs
and
inc
add
fild
test
pop
xor
and
sbb
pop
cmp
movs
je
xlat
jmp
pop
fdivrp
aaa
xor
and
cmps
add
xchg
xor
push
(bad)
retf
fld
mov
mov
mov
jnp
mov
mov
xor
arpl
movs
mov
push
and
pop
sar
aaa
xor
push
jge
ror
fdivr
data16
int3
adc
and
sub
jne
pushf
dec
bound
adc
popa
cdq
mov
adc
jne
int3
push
adc
aam
and
ds
xor
ror
sbb
pop
xor
adc
gs
xor
scas
xor
punpcklwd
pop
popa
aam
pop
and
jne
and
cmc
fs
clc
xchg
jbe
dec
xchg
jmp
es
fadd
add
xor
pusha
aad
and
jne
adc
jmp
sbb
jno
wrmsr
les
xor
and
mov
dec
mov
out
stc
data16
and
lds
and
xor
fild
mov
fild
test
pop
or
lea
popa
aam
fadd
pop
gs
xor
pop
clc
lds
xor
(bad)
test
and
jne
push
add
xor
inc
aad
and
jne
es
jne
and
jo
and
dec
jne
cwde
es
dec
and
xor
sub
and
xchg
push
xor
lods
mov
jecxz
ja
and
je
dec
adc
add
mov
push
xor
dec
jne
adc
jmp
inc
aad
and
adc
dec
popa
pop
xor
movs
je
call
mov
and
aaa
add
jne
int3
mov
inc
int3
lods
jecxz
dec
clc
data16
and
ss
int3
mov
push
and
add
data16
xor
addr16
and
inc
fdivr
cmp
movs
sbb
xchg
data16
inc
xor
pop
and
and
add
mov
push
and
popa
pop
and
jne
push
jne
fist
popf
test
cmp
add
fild
test
pop
or
pop
and
sbb
pop
clc
lds
xor
mov
jne
inc
cmp
xchg
add
and
inc
add
fild
test
pop
or
pop
and
xor
dec
jbe
movs
je
call
mov
and
adc
and
xchg
or
or
dec
jne
adc
jmp
pusha
aad
and
gs
movs
and
xor
dec
sbb
pop
and
jne
dec
ja
jbe
dec
scas
jmp
int3
int
xor
xchg
xchg
data16
ret
ja
jne
dec
and
add
mov
mov
pusha
test
dec
xor
push
dec
mov
mov
and
sbb
pop
data16
aaa
xor
(bad)
test
and
jne
mov
jne
xchg
jne
dec
jne
adc
jmp
pusha
aad
and
gs
fldenv
xor
dec
adc
jne
dec
aaa
test
jmp
int3
push
imul
test
fist
inc
stos
gs
xor
adc
xchg
gs
and
jb
lea
jne
test
xor
dec
jae
data16
out
stc
data16
and
dec
sub
(bad)
mov
and
inc
add
fild
test
pop
xor
xchg
xor
and
jne
cmp
and
sbb
pop
(bad)
stc
aaa
xor
and
retf
cmp
xor
fadd
jecxz
xor
adc
gs
xor
adc
xchg
gs
and
fnstenv
and
mov
and
sub
xor
dec
and
data16
out
stc
data16
and
mov
and
(bad)
xchg
xchg
pop
and
inc
add
fild
test
pop
cmp
div
and
sbb
sbb
pop
mov
aaa
xor
and
jne
and
popf
mov
and
xchg
cmp
mov
adc
mov
inc
test
xor
cmp
sbb
bound
and
mov
dec
test
xor
and
jne
int3
jne
xor
xchg
gs
ret
sub
jne
dec
and
add
mov
mov
inc
test
xor
cmp
push
dec
jnp
and
mov
dec
test
xor
and
jne
int3
xor
and
push
stos
gs
xor
adc
gs
xor
adc
xchg
gs
and
xor
dec
xor
sub
mov
dec
xchg
out
data16
into
jmp
pop
and
test
lods
xchg
fsub
xlat
mov
int3
sti
or
inc
and
imul
popa
lods
shl
cmp
and
imul
and
adc
popa
cdq
mov
movs
and
xor
daa
pop
xor
daa
sbb
retf
push
sub
fwait
ds
mov
sub
pop
xor
int3
fldcw
movs
retf
ret
and
fsub
cmp
mov
popa
xor
popa
aam
mov
popa
fsub
or
and
mov
inc
xlat
retf
(bad)
adc
popa
popf
mov
push
ins
pop
xor
push
mov
aaa
xor
jo
jbe
fild
cmp
push
jge
pop
ret
cmps
loopne
mov
and
pop
lea
cmp
xor
clc
jno
je
inc
xor
dec
and
xor
cmps
test
imul
div
nop
mov
and
ja
mov
mov
les
dec
jne
dec
xchg
jbe
test
mov
ins
xor
int3
jno
and
int3
cmp
jne
rcr
cld
out
jns
mov
(bad)
dec
enter
clc
mov
fisttp
sub
and
dec
(bad)
add
and
lock
fisttp
xor
movs
fwait
pop
pop
and
mov
(bad)
xor
and
mov
fisttp
sub
and
dec
(bad)
add
and
lock
fisttp
xor
movs
or
and
pop
adc
aaa
xor
mov
and
xor
pop
mov
push
xor
jne
mov
je
repz
xor
movs
or
and
pop
inc
xchg
aaa
xor
mov
and
xor
pop
mov
xor
jne
mov
je
cmps
xor
inc
xor
and
mov
fisttp
and
cmc
dec
fld
add
and
lock
fisttp
xor
lods
test
ret
enter
mov
das
push
fs
and
mov
and
xor
pop
mov
push
xor
jne
mov
je
pop
xor
inc
xor
and
mov
fisttp
and
cmc
dec
fld
add
and
lock
fisttp
xor
dec
jne
and
aaa
out
data16
jg
data16
mov
je
xor
gs
mov
mov
dec
pop
scas
jbe
dec
retf
test
sbb
fdiv
mov
dec
in
cmp
and
div
or
test
push
fimul
mul
and
mov
jae
add
imul
popa
and
adc
popa
mov
int3
mov
xor
test
fsub
retf
mov
cmps
loopne
cmp
and
popf
push
cmp
jne
jp
mov
mov
sub
jne
jb
retf
popw
mov
mov
loop
test
push
xchg
aaa
xor
mov
and
xor
icebp
outs
xor
popf
jp
and
in
ret
(bad)
mov
xlat
(bad)
retf
(bad)
(bad)
jbe
test
mov
arpl
pushf
sub
and
shr
(bad)
repnz
cdq
xchg
fcmovnu
ja
xor
and
mov
ror
and
cmc
mov
fmul
pop
ret
xchg
aaa
xor
mov
and
xor
cdq
xchg
fcmovnu
jno
xor
and
mov
ror
and
cmc
mov
fmul
pop
cmp
mov
and
xor
aam
shr
(bad)
repnz
cdq
xchg
fcmovnu
jae
xor
and
mov
ror
and
cmc
mov
fmul
pop
imul
ret
fcmovnu
and
xor
cdq
xchg
fcmovnu
jge
xor
and
mov
ror
and
cld
(bad)
rol
cld
mov
ror
mov
fmul
pop
scas
xchg
aaa
xor
mov
and
xor
cdq
xchg
fcmovnu
jg
xor
and
mov
ror
and
cmc
mov
fmul
pop
in
xchg
aaa
xor
mov
and
xor
cdq
xchg
fcmovnu
jns
xor
and
mov
ror
and
hlt
repnz
jne
movs
cdq
xchg
fcmovnu
js
xor
and
mov
ror
and
cmc
mov
fmul
pop
add
aaa
xor
mov
and
xor
push
aad
and
lock
fisttp
retf
(bad)
jne
push
test
xor
stos
(bad)
jbe
int3
cwde
fcomp
fcomi
lock
lock
fisttp
retf
fist
add
cmps
cdq
popf
ret
fcmovnu
jne
mov
lods
test
loop
jle
and
scas
pop
and
add
mov
fisttp
mov
fmul
mov
es
int
ja
and
enter
mov
mov
cmc
mov
fmul
sbb
cdq
fisttp
mov
and
mov
fcmovnu
jne
aam
test
(bad)
mov
scas
jbe
test
mov
ins
xor
cmps
mov
cmps
cdq
(bad)
int3
fcmovnu
jne
or
and
div
in
fsubp
fidiv
fnstsw
pop
(bad)
lods
hlt
sub
jecxz
dec
mov
fmul
ss
test
mov
inc
pop
mov
aaa
xor
push
scas
jbe
test
mov
ins
xor
movs
sub
jne
mov
aaa
xor
cmp
enter
fs
xor
and
mov
iret
addr16
mov
(bad)
xor
xor
test
mov
scas
jbe
test
mov
bound
dec
jbe
data16
mov
fmul
and
div
xor
mov
pusha
xor
test
mov
mov
je
into
(bad)
data16
mov
je
stos
xor
xor
mov
and
xor
and
jne
mov
je
lods
mov
sub
mov
clc
mov
fmul
fs
and
cld
mov
fmul
les
fmul
sbb
fmul
xchg
data16
sar
data16
mov
je
pop
xor
mov
mov
je
imul
jne
mov
je
imul
jne
mov
iret
push
mov
(bad)
retf
or
mov
fnclex
icebp
xor
fimul
retf
test
cmps
enter
mov
push
cmc
hlt
ret
jne
fist
clc
mov
fimul
out
data16
mov
fimul
and
div
xor
lock
fs
shl
and
lock
fisttp
retf
(bad)
xlat
aaa
and
mov
fld
pop
je
xor
lock
mov
(bad)
rcr
mov
int3
mov
test
mov
data16
test
mov
cdq
or
and
jne
movs
rcl
mov
fmul
retf
xchg
ror
inc
fs
xor
and
mov
int3
and
and
lock
fs
rcr
fisttp
retf
cmps
loopne
mov
mov
fcmovnb
fcomp
fisttp
xor
retf
and
sbb
fadd
jne
jge
mov
push
in
mov
and
cld
rcr
cdq
and
and
bound
pop
push
cmp
hlt
mul
cld
pop
in
lods
out
mov
and
je
cmp
mov
fld
popf
dec
xor
int3
inc
and
sub
popa
sub
add
jl
xor
(bad)
cld
mov
leave
mov
lods
out
xor
xor
and
xor
je
jne
int3
in
and
sbb
pop
mov
aaa
xor
jne
xor
int3
adc
push
jne
movs
iret
push
xor
xchg
fwait
retf
(bad)
sub
mov
and
xor
and
lock
fisttp
retf
(bad)
mov
sub
add
and
mov
push
shl
movs
adc
aaa
xor
and
and
sbb
jne
(bad)
lods
lock
enter
out
mov
out
inc
gs
in
fsubp
fidiv
fnstsw
pop
(bad)
lods
hlt
sub
jecxz
mov
lods
fdivrp
mov
loop
(bad)
(bad)
(bad)
int3
in
and
jp
cdq
xchg
cwde
retf
fistp
and
in
lahf
cmc
fisub
mov
cmp
cld
repnz
loop
mov
xchg
mov
movs
mov
je
mov
sbb
in
lock
leave
fisttp
xor
lods
mov
out
add
loop
(bad)
fcmovnu
inc
repnz
push
cld
in
and
mov
and
xor
call
lock
enter
int3
adc
jne
mov
je
mov
retf
je
add
and
mov
enter
int3
mov
mov
leave
mov
je
adc
lock
lods
add
and
lock
enter
int3
or
outs
pop
and
adc
mov
cld
test
jne
cdq
(bad)
aaa
xor
mov
jbe
dec
mov
data16
je
gs
call
dec
and
clc
mov
mov
test
and
adc
inc
sbb
xor
loop
jbe
dec
add
mov
cdq
or
retf
fld
jne
cmp
mov
out
fsubrp
data16
movs
test
pop
loop
aaa
xor
add
je
int3
sub
mov
leave
mov
test
and
pop
and
jne
inc
sbb
xor
loop
jbe
dec
jne
gs
pop
aaa
and
mov
fs
mov
adc
cmp
and
jne
and
pop
and
jne
and
sbb
fmul
popa
rcr
jne
and
popf
imul
and
mov
fldcw
and
xor
popa
int
test
(bad)
xor
test
idiv
(bad)
and
and
inc
pushf
jb
mov
(bad)
inc
nop
int3
cdq
cmp
pop
xor
popa
int
dec
es
retf
push
nop
popf
jecxz
and
repz
pushf
mov
and
clc
jno
je
mov
retf
mov
je
std
and
xchg
retf
mov
cmps
in
mov
je
push
fstp
xor
push
int
je
enter
mov
push
rcr
sub
dec
and
jno
je
ss
aam
jbe
fild
or
jp
and
add
and
lods
add
and
test
and
xor
test
jmp
and
jno
dec
jne
and
pop
xor
lds
and
xor
pushf
cmp
and
xchg
mov
fld
mov
and
pop
xor
in
jp
and
xor
jecxz
test
pop
and
frstor
and
jno
jecxz
mov
and
xor
iret
jmp
and
xor
jecxz
cld
and
jne
test
lea
and
jne
adc
jmp
dec
jne
and
jne
and
jne
out
and
aad
data16
(bad)
xor
and
das
xor
jne
and
xor
dec
mov
jbe
dec
jne
and
sub
xor
in
retf
(bad)
js
and
jne
and
pop
or
jbe
int3
inc
cmp
sbb
fs
sbb
and
lock
leave
fisttp
xor
(bad)
cld
mov
leave
mov
scas
mov
cld
test
dec
je
(bad)
mov
mov
mov
and
inc
and
clc
mov
leave
mov
je
lock
retf
fs
dec
shl
or
data16
fs
data16
and
mov
mov
sub
add
and
repz
jbe
and
in
xchg
fcmovnu
cld
in
and
mov
and
pop
out
push
xor
xor
xor
and
popf
mov
mov
je
xor
and
int3
push
fs
and
jne
shr
jne
je
add
xor
shl
dec
je
adc
jne
int3
adc
sub
popa
xchg
fs
in
xor
lods
lods
sbb
popa
shl
dec
and
xor
and
jno
je
outs
sub
imul
div
and
es
addr16
retf
cmp
mov
cmp
xor
cmps
fsub
mov
pop
jnp
fsub
jp
push
and
jge
and
fs
push
es
sbb
je
and
outs
or
test
cmp
and
or
and
cmp
int
cmp
and
or
xor
sub
out
and
jne
sar
aaa
xor
adc
or
fisttp
retf
fld
lock
mov
data16
or
cmp
and
mov
clc
mov
(bad)
(bad)
fisttp
xor
in
mov
and
xor
mov
and
jne
int3
lea
and
jl
push
dec
(bad)
mov
(bad)
leave
fcmovnu
neg
and
mov
mov
mov
fistp
lock
fisttp
retf
(bad)
mov
mov
sbb
and
mov
pop
test
mov
fisttp
lock
(bad)
mov
pop
xor
adc
xchg
gs
lahf
sub
mov
nop
data16
sub
aam
nop
data16
dec
nop
aaa
xor
fdiv
jecxz
adc
aaa
xor
movs
dec
inc
nop
data16
push
sub
xor
call
or
xor
sub
dec
and
jbe
int3
sub
fcmovnu
sub
dec
and
lods
fadd
jecxz
xor
gs
popa
sub
mov
and
dec
and
aaa
sub
xor
and
jne
sbb
mov
int3
cmp
cld
int3
adc
(bad)
xor
scas
xor
lods
mov
hlt
ret
pop
sub
pop
and
xchg
data16
jo
and
xchg
data16
or
and
gs
add
and
sbb
and
xchg
data16
adc
and
xchg
data16
sub
and
xchg
data16
and
and
gs
cmp
and
gs
mov
and
dec
and
inc
xor
popf
cmp
(bad)
mov
fimul
xchg
data16
and
and
xchg
data16
cmp
and
gs
cmp
and
fild
and
cdq
jns
and
mov
(bad)
inc
xor
sar
and
hlt
(bad)
jne
cmps
adc
retf
(bad)
mov
(bad)
cmp
cld
mov
(bad)
xor
lods
lea
jl
jne
movs
jecxz
cmp
sbb
mov
(bad)
int3
mov
jg
and
enter
mov
add
xor
and
addr16
data16
and
adc
add
mov
jle
and
xchg
and
hlt
ret
clc
adc
scas
mov
std
mov
(bad)
leave
fcmovnu
jne
sbb
and
jp
mov
jne
dec
(bad)
and
lock
fist
icebp
xchg
data16
mov
test
cmps
mov
xor
fsub
pop
sub
sbb
mov
(bad)
xor
fisttp
retf
(bad)
pop
and
inc
out
data16
xor
cmc
jg
and
inc
mov
data16
pop
cs
int
jo
and
lea
mov
je
mov
(bad)
out
data16
mov
(bad)
cmp
div
xor
mov
and
mov
fisttp
sub
sub
je
fcmovnu
jne
add
jne
and
jnp
data16
xor
dec
jg
and
inc
sub
cs
int
jno
and
clc
xor
in
(bad)
inc
frstor
pop
xor
and
sar
data16
and
inc
ds
mov
cmp
jl
and
mov
and
mov
and
mov
and
dec
cmp
(bad)
mov
and
inc
dec
and
dec
dec
add
jne
and
xchg
in
data16
xor
sar
fild
mov
jne
xchg
jno
and
lock
fisttp
retf
fcmovnu
dec
and
popf
cld
int3
and
mov
and
retf
(bad)
(bad)
data16
mov
je
xchg
das
and
mov
xor
retf
and
jne
mov
je
add
jl
and
enter
mov
add
xor
and
repz
data16
and
or
movs
test
xor
or
jp
and
int
and
lods
lock
fisttp
xor
test
(bad)
xor
mov
and
xor
loopne
pop
(bad)
retf
fcmovnu
and
jne
int3
aad
and
cmc
mov
push
push
pop
and
jne
mov
aaa
xor
and
aas
sub
or
jne
int3
int
and
pushf
stos
daa
and
mov
(bad)
rcr
mov
je
xlat
in
data16
mov
(bad)
ds
div
xor
mov
and
mov
fisttp
sbb
gs
sbb
retf
fcmovnu
jne
add
jne
and
push
in
data16
xor
lea
and
inc
sbb
gs
jb
jne
int
jbe
and
clc
xor
in
(bad)
inc
frstor
pop
xor
and
sbb
data16
and
add
and
add
xor
int3
add
jb
and
mov
fcmovnu
mov
and
dec
cmp
(bad)
mov
and
inc
dec
and
dec
dec
add
jne
and
pop
in
data16
xor
adc
and
inc
sbb
gs
(bad)
and
int
ja
and
lock
fcmovu
mov
fcmovnu
dec
aaa
push
popf
cld
int3
and
mov
and
retf
(bad)
(bad)
data16
mov
je
shr
xor
retf
and
jne
mov
je
add
xor
int3
jne
xor
movs
enter
mov
add
xor
and
and
and
leave
xor
mov
add
xor
int3
dec
jb
and
cmp
and
mov
fcmovu
mov
and
dec
cmp
(bad)
mov
and
inc
dec
and
dec
dec
add
jne
and
fwait
in
data16
xor
pop
jb
and
inc
adc
gs
push
and
int
ja
and
lock
mov
fcmovnu
idiv
(bad)
and
xchg
loopne
fcmovu
mov
(bad)
xchg
mov
fld
mov
fcmovnu
mov
or
(bad)
xor
mov
and
xor
loopne
mov
mov
scas
lock
fisttp
pop
and
jno
and
jne
and
jne
dec
fs
and
mov
fimul
xor
and
adc
lea
and
dec
inc
nop
data16
push
arpl
cmp
mov
je
push
(bad)
test
mov
jbe
sbb
retf
xchg
ror
xor
pop
xor
mov
and
(bad)
data16
adc
loope
xor
test
mov
sbb
jne
mov
mov
(bad)
mov
(bad)
adc
mov
jne
mov
je
ss
aam
jbe
fcmovnb
rcr
mov
pop
and
lods
fdiv
jecxz
adc
xor
inc
jo
gs
call
xor
and
xor
and
xor
and
pop
add
xor
xor
lods
lock
mov
and
ja
and
jne
xchg
ror
xor
clc
cmp
mov
je
push
(bad)
test
mov
jbe
sbb
retf
xchg
ror
xor
pop
xor
mov
and
in
data16
adc
shl
fcmovnb
rcr
mov
pop
daa
jne
jecxz
sbb
and
cld
int3
and
and
xor
jbe
dec
or
data16
fs
data16
and
mov
retf
(bad)
mov
sub
xor
int3
lds
and
(bad)
ret
ret
lods
lock
fisttp
retf
push
xor
cmp
push
jge
(bad)
and
jnp
cs
out
jne
lods
shl
sub
arpl
ss
xor
out
jle
and
xchg
mov
scas
popa
jns
and
jne
sub
test
jp
out
jne
pop
adc
xchg
data16
aas
fist
popf
test
and
xor
ret
cld
jno
lods
mov
adc
call
retf
adc
xor
dec
add
mov
or
jno
and
inc
sbb
fild
mov
jne
inc
and
lods
fcomp
jecxz
add
mov
xor
das
mov
or
xor
int3
ins
jno
and
inc
sbb
gs
das
fild
mov
and
pop
adc
gs
and
jne
das
fild
mov
and
lods
fcomp
jecxz
add
xor
push
xor
or
xor
push
jle
adc
lea
and
inc
out
pop
adc
xor
and
int3
or
adc
xchg
data16
xor
and
add
mov
(bad)
sub
mov
imul
fs
add
xor
push
and
sub
xor
shl
and
dec
add
xor
push
and
sub
mov
icebp
xchg
data16
xor
and
out
push
mov
fild
and
push
jns
ja
or
and
sahf
cmp
xchg
mov
jnp
cs
out
jne
and
mov
sub
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
mov
call
or
push
push
pop
push
lods
lea
and
lock
xor
sub
jecxz
fbld
push
(bad)
fistp
arpl
and
lea
xlat
sahf
xor
sub
fcom
xlat
dec
jne
loop
jne
dec
and
popf
ds
fisttp
mov
and
xor
or
and
lock
sbb
and
push
fisttp
fist
add
hlt
popf
fisttp
(bad)
mov
lods
mov
add
mov
xor
xor
sub
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
jne
and
mov
mov
mov
xor
and
adc
jne
and
mov
test
aaa
xor
mov
xor
and
adc
jne
and
mov
mov
aaa
xor
mov
xor
and
adc
jne
and
mov
mov
mov
xor
and
adc
jne
and
mov
adc
xor
mov
xor
and
adc
jne
and
mov
mov
aaa
xor
mov
xor
and
adc
jne
and
mov
nop
xlat
aaa
xor
mov
xor
and
adc
jne
and
mov
cwde
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
xlat
aaa
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
xor
mov
xor
and
adc
aaa
xor
mov
xor
and
adc
jne
and
mov
test
aaa
xor
mov
xor
and
adc
jne
and
mov
mov
aaa
xor
mov
xor
and
adc
jne
and
mov
mov
mov
xor
and
adc
jne
and
mov
adc
xor
mov
xor
and
adc
jne
and
mov
mov
aaa
xor
mov
xor
and
adc
jne
and
mov
cwde
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
and
adc
shl
xor
mov
xor
.byte
