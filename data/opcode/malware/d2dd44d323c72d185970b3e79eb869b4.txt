mov
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
and
add
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
adc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
movs
push
inc
mov
das
add
add
add
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
inc
add
je
je
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
into
mov
add
mov
inc
or
add
or
add
add
add
add
add
add
fcomp
es
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
push
dec
push
inc
mov
in
scas
push
scas
mov
cmp
dec
hlt
hlt
hlt
mov
xchg
test
jo
jb
mov
mov
xor
jge
jb
adc
clc
test
cli
cli
stos
lods
lods
pushf
push
or
test
(bad)
mov
mov
mov
cmp
xchg
mov
or
fcomp
fdivr
je
add
call
mov
daa
sub
jae
mov
pop
push
push
repz
sahf
inc
inc
inc
jne
push
addr16
lahf
sbb
das
adc
cmp
stos
push
(bad)
test
jns
outs
imul
stc
xchg
xor
inc
int
sbb
inc
test
repz
addr16
cs
jbe
cwde
xchg
mov
dec
cmps
test
mov
xor
(bad)
leave
mov
mov
pop
pop
push
mov
jp
or
jle
jbe
ud2
rol
lods
scas
mov
jl
test
pushf
not
mov
lods
mov
mov
shl
xchg
movups
xchg
outs
push
setl
jp
jb
and
rcr
sbb
sar
mov
adc
mov
jns
push
cmps
cmps
cmps
fstp
sbb
mov
and
mov
mov
out
jmp
cmp
pop
and
cmp
jp
stos
stos
idiv
stos
stos
xor
cmps
cmps
lods
stos
lods
push
or
cmp
jl
pop
lods
scas
stos
lods
cmp
mov
mov
add
mov
mov
jle
cmp
cmps
test
jp
int3
and
test
popf
sahf
sahf
mov
sbb
ins
mov
jne
inc
push
loopne
and
imul
leave
mov
cwde
xchg
jp
jbe
mov
mov
push
xchg
mov
jle
jb
sbb
cmp
sbb
mov
jbe
ins
je
push
jg
jmp
es
js
mov
test
jp
mov
mov
jle
mov
mov
scas
scas
mov
mov
js
mov
lods
lods
lods
mov
mov
scas
scas
mov
mov
mov
mov
mov
scas
lods
xchg
js
mov
mov
mov
test
scas
lods
scas
cmp
mov
mov
mov
jp
xchg
mov
mov
mov
lods
lods
mov
mov
scas
scas
lods
xchg
mov
cmp
jp
cmp
jbe
(bad)
mov
pusha
jl
outs
cmp
ins
ins
into
into
into
retf
cmps
pop
add
pusha
pop
retf
rcl
shl
loopne
(bad)
(bad)
(bad)
div
idiv
jle
or
push
push
push
dec
dec
dec
pop
pop
pop
ror
and
add
sbb
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jno
push
pop
je
dec
dec
cmp
ins
cs
outs
bound
js
jo
add
add
cmp
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
aaa
cmp
xor
sub
xor
xor
das
xor
das
xor
sub
aaa
cmp
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
jo
dec
cmp
imul
outs
arpl
outs
je
inc
cmp
cs
popa
xor
cmp
sub
sub
sub
fs
popa
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
xor
inc
cmp
xor
cmp
xor
inc
inc
inc
aaa
inc
ss
xor
xor
and
js
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
aaa
inc
xor
inc
cmp
xor
cmp
xor
inc
inc
inc
aaa
inc
ss
xor
xor
and
js
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
inc
and
push
imul
and
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
cmp
aaa
xor
sub
sub
sub
xor
gs
xor
xor
and
push
data16
jne
outs
je
inc
cmp
cs
popa
xor
cmp
sub
sub
sub
fs
popa
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
ds
iret
mov
inc
inc
push
js
mov
dec
mov
ja
neg
cmps
mov
push
push
or
pop
xor
mov
mov
mov
(bad)
mov
jecxz
lds
mov
lea
adc
adc
and
je
jmp
shl
xor
mov
xor
push
test
push
xchg
push
pop
rol
mov
push
push
adc
and
pushf
sub
neg
repz
lahf
mov
xchg
outs
mov
jmp
cmp
data16
call
ins
cmps
fs
outs
sbb
mov
dec
loop
movs
mov
pop
mov
retf
lods
sbb
cli
lods
push
gs
push
xor
sbb
xchg
bound
mov
cmp
sti
jbe
mov
test
dec
xor
retf
push
or
xchg
sub
(bad)
aam
test
mov
test
cmp
inc
mov
sub
mov
enter
mov
scas
outs
cmps
jno
cmps
xchg
in
and
imul
cmp
int3
js
icebp
push
fbstp
ins
inc
repz
fistp
xor
fdiv
scas
mov
aas
or
inc
jmp
inc
test
cwde
mov
test
push
lds
sti
jle
or
pop
mov
sbb
sbb
jbe
jne
cwde
jnp
pop
les
mov
xor
test
into
mov
arpl
movs
fadd
jno
mov
inc
or
hlt
pop
jnp
fistp
loope
xchg
xchg
mov
fbstp
pop
pop
jmp
xchg
xchg
mov
adc
cmp
dec
test
xchg
enter
jo
sbb
xchg
adc
inc
and
sub
pop
jle
lock
das
pop
jl
aad
fcom
dec
pop
fisttp
aam
push
int
sub
fst
sbb
cmp
cmps
xor
popa
loope
inc
lods
cs
sbb
cmps
repz
scas
push
or
retf
mov
pop
and
inc
sub
lods
aad
push
pmulhw
jbe
les
in
mov
jp
jmp
mov
mov
push
dec
lods
push
mov
aas
dec
int
(bad)
std
fnstcw
xchg
pop
pop
aaa
push
in
shl
sub
inc
mov
mov
aas
icebp
pop
fcomip
pop
and
fld
je
mov
mov
inc
fdivr
cmp
(bad)
(bad)
int
adc
shr
xor
rcl
mov
scas
cmp
dec
push
ins
dec
mov
aam
lods
outs
mov
lahf
jae
mov
xor
in
outs
sbb
xchg
pop
push
shr
push
cmp
shl
fld
mov
sti
lock
(bad)
push
adc
inc
ins
or
test
loopne
jne
bound
sub
neg
std
sbb
dec
movs
push
inc
jecxz
xchg
adc
dec
xlat
cli
rcr
push
pop
sub
mov
or
sbb
push
mov
imul
popf
and
test
jbe
inc
movs
pop
xor
repz
seta
scas
push
adc
sbb
and
pushf
sbb
lock
sub
mov
or
mov
mov
or
pop
sbb
loope
jo
sub
in
push
xor
lea
movs
sbb
dec
mov
mov
sbb
shl
lods
test
je
shr
mov
mov
pop
ins
cmp
push
xlat
xchg
(bad)
aad
fimul
sysenter
jg
test
cwde
fdiv
cwde
mov
adc
xchg
call
push
dec
push
(bad)
outs
aaa
mov
(bad)
(bad)
sti
int
out
ss
adc
or
push
pop
dec
and
dec
jns
mov
in
push
push
in
inc
cwde
sub
cli
and
jbe
dec
pop
in
repz
mov
push
cmps
adc
mov
jno
jns
call
sub
mov
jge
jb
push
pop
call
jnp
sbb
xchg
push
xor
rcr
int
fs
outs
xchg
mov
mov
or
rcr
sbb
int3
popa
test
lahf
sub
cwde
sahf
out
cmp
test
test
(bad)
or
cmps
fwait
pop
movs
cmp
push
outs
lods
retf
dec
push
pop
xchg
jae
xor
nop
fwait
imul
push
push
mov
cmps
pop
sbb
mov
push
in
mov
test
xchg
fadd
pop
nop
inc
mov
call
pop
outs
or
push
mov
adc
or
dec
cmp
(bad)
fidiv
inc
int3
and
mov
sbb
hlt
push
and
sbb
dec
dec
mov
cvtps2pd
mov
jmp
pop
pop
jno
jo
and
cmps
ret
pop
dec
mov
and
xchg
scas
jmp
jg
scas
shr
and
push
(bad)
jo
sbb
(bad)
int3
imul
ins
shl
pop
dec
in
shr
add
fsubr
outs
jnp
cld
loope
xchg
mov
stc
stos
cmp
push
mov
mov
pop
mov
mov
mov
sub
push
or
inc
pop
sbb
mov
data16
dec
jb
repz
and
mov
dec
aad
mov
push
xchg
scas
lock
jne
(bad)
es
mov
xor
or
dec
or
retf
push
inc
fisttp
stc
inc
ja
xchg
mov
outs
mov
jne
mov
dec
test
loopne
js
adc
rol
mov
xor
imul
imul
bound
fild
iret
imul
push
add
cmp
aas
xor
sbb
popf
adc
jne
call
mov
fstp
push
mov
and
cmp
inc
sbb
add
rcl
movs
fs
sbb
mov
(bad)
mov
movs
xchg
mov
xlat
loop
mov
add
jno
rcr
push
int
js
mov
add
inc
ds
cmc
arpl
mov
dec
ins
fist
cmp
xor
stc
xor
jo
xchg
cmp
xor
rcl
inc
adc
push
pushf
pop
or
or
popf
adc
imul
pushw
ins
mov
push
ret
inc
inc
push
imul
fcomp
scas
sub
inc
mov
jo
(bad)
scas
outs
mov
mov
jns
jmp
fucomp
popa
rcl
test
mov
inc
jb
sbb
mov
or
mov
mov
sbb
xlat
and
jle
sbb
adc
sbb
movs
push
sub
cdq
lds
dec
cmp
es
shr
movs
push
shl
xchg
xchg
aam
push
sahf
xchg
add
push
fsubr
je
idiv
(bad)
mov
mov
inc
sbb
fld
cmp
and
or
jbe
pop
out
daa
xor
jbe
mov
push
sbb
dec
mov
lods
mov
push
sbb
es
or
adc
inc
jle
dec
pushf
fwait
cdq
cmp
pop
jge
fdiv
pop
lea
xchg
clc
les
jecxz
and
das
dec
pop
mov
dec
hlt
cwde
xchg
outs
sbb
aas
in
imul
daa
dec
mov
stos
cmps
inc
std
mov
sti
rcl
es
jb
mov
ja
push
or
lds
sub
popf
add
movs
rcr
adc
leave
mov
mov
inc
add
add
and
es
lods
lea
das
push
cmc
push
aaa
xor
xor
sbb
bnd
addr16
mov
inc
inc
pushf
sbb
sbb
mov
fs
clc
test
out
jo
inc
or
inc
icebp
arpl
cmc
aad
mov
or
mov
retf
push
sub
fucomi
inc
daa
hlt
or
add
lahf
sbb
scas
push
xor
jo
(bad)
ins
rcr
cmp
sub
lea
jle
and
cld
data16
and
or
mov
dec
sbb
inc
pusha
pop
jle
add
enter
sub
mov
(bad)
lds
cmp
sub
js
add
mov
repnz
mov
inc
sbb
add
dec
inc
dec
push
or
das
or
in
mov
das
dec
mov
fst
sub
cli
mov
mov
loope
xchg
aas
sahf
cmp
jg
push
mov
sbb
call
sub
loope
jne
xchg
adc
xchg
sbb
xlat
xor
dec
ret
shl
xchg
(bad)
out
or
and
adc
in
mov
adc
shl
push
pop
fldz
sbb
mov
outs
dec
cmp
jmp
pusha
dec
cmps
les
dec
xor
cmp
dec
push
mov
loop
fstp
inc
or
std
adc
push
out
and
scas
fld
clc
inc
retf
dec
dec
mov
mov
iret
mov
or
fwait
xor
dec
jp
or
test
loop
pushf
inc
adc
inc
mov
pop
adc
push
mov
jne
mov
in
push
dec
ret
movs
movs
rcl
push
ins
icebp
sti
out
jmp
pop
in
push
imul
ins
jge
loop
outs
dec
jo
jp
std
mul
shr
add
add
icebp
pop
fs
xchg
hlt
jns
cmp
xor
fwait
loop
mov
daa
mov
mov
sbb
fstp
ja
sahf
cld
(bad)
push
(bad)
jno
lock
inc
in
xchg
lds
dec
mov
aas
icebp
sbb
sbb
cdq
sbb
mov
loop
retf
sub
jmp
xchg
aaa
sub
out
fsubr
movnti
push
lock
or
mov
nop
retf
(bad)
lea
pop
inc
mov
and
dec
cmp
xor
pushf
xor
and
movs
pop
movs
jb
sub
add
dec
mov
xchg
in
push
cli
cmp
inc
mov
inc
push
rcr
xor
dec
mov
shl
pop
daa
inc
inc
ret
adc
mov
xchg
ret
inc
inc
rol
push
mov
mov
mov
push
jne
scas
aad
sbb
into
push
scas
xlat
ror
dec
dec
sub
jg
loop
(bad)
jnp
jmp
loope
xchg
inc
xchg
mov
xlat
jmp
mov
pop
push
mov
inc
pop
fnstcw
mov
push
mov
mov
enter
aas
xor
dec
pusha
cli
fwait
repnz
aas
dec
(bad)
dec
repz
inc
and
out
aaa
cmps
(bad)
iret
xlat
push
in
dec
rol
outs
fstp
nop
add
dec
or
inc
inc
xor
loop
adc
cmp
loop
into
jo
enter
cmps
popa
jmp
mov
mov
sti
sub
scas
pop
xchg
dec
and
push
aaa
pop
lea
jl
inc
retf
dec
dec
imul
enter
ror
or
mov
adc
xchg
cmp
or
mov
dec
jns
push
xor
xchg
xor
mov
mov
xchg
gs
sbb
scas
pop
add
mov
(bad)
ins
add
xor
sbb
lods
rcl
xchg
dec
and
or
xor
mov
adc
loope
jmp
push
push
ins
fstp
lods
xchg
rcl
lods
(bad)
aaa
mov
lods
pushf
xlat
pop
movs
aad
dec
sub
pusha
mov
pop
add
mov
mov
mov
sub
loop
jns
mov
stc
sub
pop
fmul
xchg
rcr
inc
mov
in
cwde
mov
dec
jne
mov
sbb
sub
stos
adc
push
data16
fstp
sub
mov
cli
xor
dec
in
sbb
mov
stos
push
and
ins
mov
cmp
cwde
push
jbe
cwde
arpl
cmp
push
(bad)
sub
cld
call
add
adc
mov
jo
pop
(bad)
ss
ins
add
dec
xchg
pop
cmp
stos
clc
es
fisttp
shr
mov
in
stos
jnp
cli
mov
mov
jecxz
dec
ret
lea
xchg
push
xor
push
je
mov
lock
cli
in
sub
mov
ret
and
int
clc
clc
xchg
push
daa
mov
cmp
pop
lock
fcmove
push
lahf
cmp
(bad)
ds
push
mov
pop
pop
or
lea
or
jle
ror
mov
scas
lahf
inc
add
xor
cmp
int3
scas
pop
mov
call
mov
inc
dec
stc
cs
sbb
(bad)
pop
ja
repnz
jno
sbb
int
test
inc
inc
mov
std
pop
pop
outs
jg
jl
xchg
xchg
cmps
lea
shl
push
push
jp
adc
push
mov
mov
add
loopne
mov
(bad)
popf
mov
mov
push
das
call
nop
fs
push
fwait
cmp
clts
mov
cmps
lods
mov
mov
out
imul
sbb
shl
lods
jmp
idiv
std
aas
lea
jle
jb
adc
adc
sbb
aam
lock
mov
in
xchg
dec
repz
aam
scas
outs
xchg
xchg
mov
shr
sti
(bad)
outs
push
fstp
(bad)
icebp
mov
jb
cld
jecxz
outs
cld
clc
out
scas
icebp
jmp
pop
addr16
sti
jmp
sahf
push
cli
sub
mul
jmp
inc
or
fsubr
xchg
leave
fwait
js
sub
mov
jb
inc
ss
(bad)
movs
sub
add
cmp
outs
fs
pop
stos
mov
jle
push
or
xor
adc
fadd
stos
adc
fdivr
jbe
xchg
or
or
dec
call
mov
add
mov
mov
or
lods
jp
test
mov
daa
outs
push
sar
or
inc
scas
mov
xlat
mov
aad
jnp
jg
ret
ins
mov
dec
es
(bad)
jns
jbe
mov
aam
aam
cli
mov
out
jbe
jmp
mov
pop
and
loopne
dec
ret
popa
ja
sbb
movs
mov
mov
ds
cli
jmp
mov
loopne
ds
loop
(bad)
repnz
pop
addr16
sti
stc
mov
in
pop
(bad)
dec
test
lock
bound
xchg
push
dec
xchg
mov
stc
pop
into
outs
leave
and
mov
mov
add
cmps
fmul
jmp
in
mov
daa
inc
mov
sub
loopne
mov
dec
addr16
in
push
mov
ret
mov
inc
inc
inc
cwde
ins
jmp
lea
and
adc
and
scas
lods
or
adc
neg
push
cs
out
sti
jmp
sbb
add
inc
call
je
outs
or
xchg
mov
jmp
loopne
pop
fcomp
(bad)
aam
fnstenv
mov
xor
push
or
mov
shr
mov
dec
adc
in
movs
loopne
mov
call
sbb
dec
inc
ds
mov
retf
ins
jp
fidivr
xor
jnp
mov
retf
sub
aaa
sbb
xchg
outs
imul
retf
int
rcr
dec
div
jns
and
mov
retf
aad
clc
sbb
jbe
test
fcomp
je
mov
jo
rcr
adc
cwde
add
lods
sub
ret
shr
adc
push
(bad)
popf
cld
scas
or
outs
fdiv
mov
mov
jne
aaa
cmp
or
cmp
ins
repnz
jb
inc
cmp
cmp
jo
push
in
ficom
mov
je
xor
mov
and
xlat
add
push
stos
or
jmp
or
sar
sti
inc
mov
fstp
sbb
scas
(bad)
xlat
dec
jae
fs
clc
pop
int
outs
push
lods
push
(bad)
fmul
cmp
out
fild
mov
scas
std
jno
fmul
mov
mov
mov
mov
sar
mov
std
cli
loopne
sar
mov
mov
fnstsw
jns
mov
sub
(bad)
in
pushf
ret
cmps
pop
fwait
movs
pop
test
in
lock
xor
or
sbb
inc
mov
out
jge
sub
out
out
sbb
inc
aam
mov
jno
and
test
fiadd
push
or
clc
dec
inc
add
inc
lods
or
mov
outs
idiv
into
retf
add
jmp
in
movs
push
jle
sbb
xor
xchg
mov
fucomip
fild
cmc
push
inc
xlat
leave
jmp
push
scas
push
mov
(bad)
fsub
or
dec
(bad)
push
dec
and
jp
pop
and
(bad)
inc
adc
cli
jmp
mov
cmc
in
(bad)
push
add
jle
sar
stc
aaa
or
rcr
test
mov
dec
fs
inc
jle
mov
and
dec
jns
imul
ss
lods
push
loopne
loope
imul
pop
add
inc
popa
inc
push
test
push
xchg
inc
movs
xchg
dec
in
ficomp
fisttp
xor
and
add
inc
xor
mov
inc
or
dec
(bad)
(bad)
dec
cmp
xchg
cdq
pop
push
test
outs
push
daa
push
mov
mov
jo
mov
jne
cmp
sub
in
mov
sbb
xchg
call
ficomp
or
sub
sti
dec
mov
in
outs
jae
ret
adc
push
imul
sbb
add
and
inc
in
into
bound
jl
jmp
rcl
imul
cmp
(bad)
sub
out
fwait
push
cmp
jg
cmp
push
test
xor
scas
lds
fistp
std
cli
in
xchg
cdq
dec
xor
jmp
pop
movs
stos
stc
mov
cmp
cs
mov
ja
sbb
inc
stc
xchg
xchg
mov
scas
jnp
fld
cmp
fst
sbb
push
outs
adc
retf
fadd
loopne
arpl
adc
movs
add
cmc
ins
pop
xlat
ss
arpl
imul
fimul
cmp
sbb
daa
sub
js
ss
fucomip
xlat
cmp
test
inc
adc
rcr
mov
je
push
inc
inc
mov
inc
jmp
and
or
push
jbe
push
jle
test
mov
push
sti
xor
xchg
pop
daa
dec
ds
test
std
mov
ds
aas
data16
mov
gs
call
dec
lahf
jns
mov
cmp
icebp
enter
xchg
mov
mov
aas
jbe
shl
shl
ss
enter
ss
aam
add
stc
in
fs
push
dec
inc
test
push
jnp
push
push
jl
mov
mov
mov
stc
push
mov
nop
(bad)
mov
add
xor
inc
imul
popa
xchg
cmp
xor
sbb
lea
lods
inc
stos
mov
mov
mul
dec
int
mov
push
stc
add
inc
sub
hlt
or
aas
add
enter
scas
lods
scas
lea
ins
jmp
fld
mov
pop
rcr
add
(bad)
fs
ror
sub
xor
and
stos
dec
fs
mov
lea
fdivr
jae
jl
leave
pop
lahf
mov
cli
sbb
std
fistp
xchg
std
daa
pop
out
jns
sti
lahf
pushf
aas
inc
mov
lds
aaa
pop
adc
cmp
cli
jmp
jno
iret
imul
mov
out
in
jmp
hlt
shl
pusha
jnp
out
shr
inc
int
cmps
dec
gs
retf
xchg
cdq
scas
cwde
fidivr
jns
sub
inc
sub
out
sub
xchg
inc
inc
cmp
test
sbb
xor
or
sbb
push
xor
xchg
inc
les
sbb
inc
jae
or
dec
icebp
cmp
sub
sbb
(bad)
mov
lods
mov
dec
shl
or
mov
jle
push
push
jns
in
inc
jnp
inc
adc
xor
mov
or
pop
and
add
jbe
cdq
push
jb
ja
shr
adc
call
test
xchg
enter
loope
xchg
enter
lock
xor
out
xlat
sbb
stc
sub
out
jle
out
mov
test
leave
mov
aaa
les
push
cli
cwde
stc
(bad)
imul
outs
pop
jnp
fsubr
mov
mov
call
(bad)
(bad)
stc
mov
mov
pop
lahf
(bad)
sub
ds
jbe
push
sub
jo
movs
ins
cmp
test
push
sahf
xchg
inc
and
bound
or
add
jo
pop
mov
or
push
xchg
sub
fcom
mov
xchg
dec
dec
mov
stos
jmp
mov
inc
stos
sub
daa
jg
add
dec
arpl
outs
mov
jmp
(bad)
pop
imul
and
shl
test
push
fistp
fcomi
fadd
mov
inc
loopne
push
or
cmps
push
out
pop
and
ins
and
outs
xlat
test
add
pop
cmp
dec
shr
ins
nop
push
pop
jb
xchg
stos
retf
aas
adc
jl
cmp
iret
int
aaa
outs
sahf
push
and
fwait
cld
stc
cli
int
cmps
outs
retf
lahf
pop
scas
arpl
xlat
jmp
out
fidivr
test
jmp
out
(bad)
push
out
iret
sub
cmc
ja
pop
inc
pop
(bad)
in
les
push
mov
stc
repnz
pop
out
repnz
imul
dec
mov
fbstp
dec
mov
lods
mov
call
call
out
mov
out
inc
es
cwde
mov
and
push
xchg
sub
int3
inc
jne
sbb
inc
pop
int
inc
stc
and
pop
ins
mov
cmp
xchg
push
mov
les
dec
pop
push
fwait
(bad)
frstor
out
popa
sbb
dec
ins
dec
cdq
cwde
mov
clc
scas
popa
fisttp
in
push
mov
(bad)
mov
das
push
out
cwde
jne
and
or
cmps
pop
outs
(bad)
stos
mov
mov
test
das
retf
(bad)
loopne
std
mov
dec
xchg
in
stos
inc
lea
push
in
in
hlt
cmps
pushf
(bad)
fld
push
inc
xchg
loop
scas
mov
jmp
cmp
lahf
jnp
repnz
inc
int
jle
pop
call
lahf
lahf
mov
jge
fdiv
sub
iret
dec
fistp
out
imul
push
outs
mov
lds
lock
mov
out
pusha
pop
imul
aad
pusha
daa
push
cmp
dec
jmp
popa
jmp
xor
cli
imul
jne
sbb
add
xchg
cmp
inc
lods
jno
mov
stos
sti
std
movs
imul
mov
leave
pop
lods
popa
int
pop
ret
mov
jbe
mov
loop
mov
inc
sub
and
pop
mov
and
mov
sub
mov
mov
mov
in
repz
mov
cmp
mov
sti
cmp
stc
fsub
pop
mov
daa
data16
cmp
add
ficomp
mov
test
mov
jb
(bad)
js
test
xchg
push
sub
sub
fwait
cmps
push
ficom
jmp
push
rol
inc
nop
popf
xchg
jno
pop
(bad)
in
cmc
(bad)
les
jbe
push
sub
outs
scas
mov
cmc
adc
jne
mov
int3
scas
mov
push
movs
data16
icebp
dec
pop
lea
add
add
sub
rcl
dec
xchg
pop
jge
lock
bound
push
sti
test
sahf
sti
in
ja
es
xor
cmps
das
xor
pop
outs
daa
jbe
jg
mov
xchg
dec
pop
cmp
cmp
ja
jle
into
mov
ja
lahf
mov
lahf
fild
fcom
ds
ss
int
push
pop
mov
mov
pop
cmp
icebp
lds
shl
mov
mov
xchg
dec
mov
inc
xchg
pop
mov
movs
ja
xchg
inc
jg
lea
cmp
jne
cmp
pushf
xchg
aam
les
imul
mov
(bad)
mov
repnz
int
out
shl
je
push
mov
lock
adc
test
inc
scas
adc
addr16
shl
sti
movs
push
loopne
pushw
scas
jge
(bad)
jle
jnp
loopne
jae
xor
pop
imul
ds
loope
ss
xor
inc
sahf
jecxz
xlat
aaa
fabs
jp
mov
das
cdq
or
jge
xchg
(bad)
push
out
test
std
mov
in
mov
in
in
int
sub
inc
jb
xlat
in
inc
outs
sub
daa
mov
pop
mov
sahf
pop
inc
std
xor
xchg
jmp
jae
sti
add
mov
retf
mov
dec
inc
stc
repz
sbb
imul
dec
xchg
mov
adc
retf
mov
cmc
cmc
or
adc
inc
or
fld
stc
sub
popa
aaa
neg
dec
aas
fsubr
fdiv
xor
call
shl
in
pop
xor
je
mov
ds
outs
(bad)
mov
out
pop
xchg
int
adc
nop
and
cmp
jecxz
jbe
ret
cld
jb
pop
js
movs
jge
jno
lods
push
xor
ja
imul
xchg
neg
iret
mov
sti
xor
scas
jnp
push
jb
fs
jmp
fstp
inc
rcr
je
pop
neg
xor
data16
(bad)
fistp
dec
pop
(bad)
out
in
cmp
jbe
loop
mov
jns
jno
rol
gs
xor
xchg
test
cmps
stos
push
cdq
lods
loopne
xchg
mov
fidiv
in
mov
sub
xchg
scas
(bad)
or
xor
fld
inc
dec
or
mov
aas
sub
lods
ins
dec
repnz
out
jo
or
call
ret
or
push
jns
adc
cmp
out
sti
xchg
mov
outs
addr16
icebp
jl
sub
stc
cmp
cmp
pop
lahf
lahf
and
loopne
fnstsw
pop
mov
and
mov
je
dec
dec
xlat
pop
pop
mov
inc
lahf
fstp
or
faddp
and
pop
xlat
mov
jnp
mov
lods
push
mov
pop
push
out
movlps
add
imul
xchg
adc
ja
or
(bad)
scas
mov
pop
jo
xlat
je
outs
cmp
add
fdivr
adc
push
xchg
enter
sub
pop
retf
jnp
push
mov
mov
dec
cmp
fidiv
mov
(bad)
(bad)
mov
and
pop
xchg
xor
cmp
shr
xlat
add
popf
iret
ficom
push
push
push
cmp
add
(bad)
mov
and
mov
outs
repnz
stc
and
mov
rcr
xlat
xor
adc
mov
push
mov
adc
and
cdq
sub
cmp
cli
mov
(bad)
sub
xchg
and
jbe
jl
mov
lea
movs
lods
cmp
jecxz
sbb
mov
xchg
mov
test
xchg
and
retf
cmp
jae
lock
cmp
push
mov
retf
ret
repz
adc
mov
sbb
inc
popa
push
data16
stc
out
lahf
jge
into
sti
lahf
leave
jne
pop
out
movs
push
js
aad
hlt
xor
cs
dec
push
leave
es
or
dec
add
mov
mov
fmulp
dec
push
mov
sti
xchg
in
scas
mov
pop
mov
test
shl
popf
outs
sbb
popf
xor
lea
push
(bad)
jmp
cs
pop
iret
sub
and
daa
inc
out
adc
xor
out
xor
cmc
inc
and
push
out
mul
sbb
lock
jl
aaa
(bad)
mov
jecxz
pop
fstp
mov
sub
pop
repz
std
lahf
fld
in
or
repz
jg
into
cmp
pushf
adc
int
xchg
(bad)
fwait
enter
cmps
push
outs
sbb
lea
pop
push
dec
fmulp
jl
xchg
cmp
mov
idiv
inc
dec
add
call
mov
out
inc
call
dec
rol
mov
cli
(bad)
xor
push
ins
rcr
test
sub
pop
pop
inc
lahf
jmp
mov
les
add
add
and
jmp
div
stc
nop
mov
dec
(bad)
or
iret
pop
xchg
(bad)
clc
stos
xchg
pushf
ret
mov
clc
mov
dec
iret
jg
stc
cmp
fcmovne
jmp
ss
out
out
into
cmp
js
hlt
in
shr
jl
and
in
cmc
sub
xchg
sub
dec
push
outs
add
in
loop
xor
jno
outs
xlat
fsub
inc
das
adc
inc
popa
mov
mov
popf
int3
cmp
sbb
or
test
jmp
mov
retf
push
cmp
fcomp
or
imul
mov
mov
stc
jge
test
sbb
cld
push
xchg
add
das
cld
out
xlat
xchg
mov
inc
std
je
pop
jns
das
jnp
lahf
mov
shl
(bad)
iret
outs
sahf
(bad)
cmp
stc
jne
lds
jle
jnp
xor
jbe
call
mov
push
jae
cmp
in
cli
jmp
jae
mov
es
fisttp
jns
pop
add
aad
retf
(bad)
movs
daa
cmp
xchg
cdq
adc
cmp
test
push
cdq
adc
sbb
arpl
mov
ror
lods
fucomp
adc
add
scas
mov
push
push
imul
jmp
jg
xor
jne
jo
(bad)
cli
cld
cli
mov
xor
xor
mov
jmp
jmp
in
data16
pop
cmps
cmp
mov
inc
iret
sub
ss
retf
shl
in
leave
xchg
and
xchg
scas
cwde
mov
lods
push
mov
mov
inc
mov
or
jp
mov
outs
popa
mov
mov
(bad)
jmp
les
sub
rcr
sbb
sti
mov
repnz
pop
(bad)
in
mov
jnp
mov
jp
icebp
jae
dec
push
mov
adc
push
setle
pop
rcl
mov
std
(bad)
scas
sahf
jnp
fistp
rol
loop
lds
xlat
mov
(bad)
cmp
cmc
or
hlt
mov
dec
adc
pop
(bad)
addr16
data16
jp
cmc
(bad)
out
jne
idiv
out
jp
push
push
mov
dec
jae
mov
sub
call
sbb
mov
shr
push
xor
push
retf
mov
and
cmps
fwait
nop
leave
xor
int3
dec
pop
repz
dec
xlat
adc
lods
sub
ficomp
sar
mov
scas
sbb
call
mov
movs
pop
repnz
scas
mov
pop
(bad)
outs
rcl
into
outs
(bad)
leave
int
jge
pop
pop
adc
adc
call
(bad)
loop
push
push
fstp
cmc
repz
retf
gs
and
cmp
call
ds
fs
mov
sub
loop
xlat
sub
loop
ja
push
imul
push
mov
frstor
int3
sub
cmp
push
jmp
xor
cmp
sub
dec
inc
cwde
xchg
sahf
dec
xor
add
xor
icebp
add
push
or
loopne
hlt
cmp
push
cmp
add
outs
rcr
aad
imul
cdq
retf
iret
mov
(bad)
addr16
icebp
xchg
scas
js
pusha
addr16
jmp
cmps
std
mov
mov
aad
cvtdq2ps
lahf
cmp
cli
lds
out
das
sti
sti
movs
xchg
(bad)
mov
dec
push
out
je
loop
and
int3
fnstenv
int3
jl
mov
call
das
sub
adc
outs
and
ror
cmp
push
and
jge
sub
add
jno
mov
pop
sahf
inc
retf
push
test
pop
mov
aas
mov
adc
not
mov
add
xor
rol
bound
jns
sub
jl
in
inc
das
or
mov
call
jp
cmps
adc
jns
and
stc
jmp
jmp
clc
pop
cmps
ja
xlat
loope
xchg
push
out
jnp
inc
xchg
repnz
sar
popf
push
sar
push
xor
xlat
fld
mov
cmps
aad
scas
jmp
addr16
mov
jmp
add
and
jo
aaa
ss
ins
lea
jle
js
ror
jecxz
add
cmp
ss
jns
jg
leave
out
mov
fstp
leave
pop
xchg
fwait
cmc
sub
push
and
mov
cld
retf
xchg
mov
inc
rcl
(bad)
jae
add
jge
sar
loope
rol
adc
loop
adc
xlat
daa
pop
outs
cli
cld
xlat
aas
js
iret
js
popw
mov
mov
and
out
out
cld
int
jae
ja
shl
fsubrp
out
call
push
mov
addr16
out
and
push
or
call
jnp
int
dec
mov
or
push
movs
mov
clc
in
nop
mov
and
lock
push
dec
inc
sub
jb
xchg
cwde
pop
pop
xor
(bad)
sbb
sti
mov
xor
cmp
js
adc
out
xor
jmp
call
xor
and
daa
and
sub
retf
mov
inc
scas
mov
in
xlat
outs
jl
outs
js
frstor
mov
test
xchg
pop
fbstp
cdq
xchg
ja
bound
and
loop
adc
cdq
in
cmps
aas
cmp
retf
dec
cmc
cmps
xlat
sbb
inc
test
sbb
pop
ss
out
and
arpl
xchg
cld
ds
sbb
add
inc
mov
cmp
mov
jl
mov
retf
dec
dec
sub
sbb
mov
lock
add
in
cmp
add
movs
icebp
es
pushf
xor
into
aam
push
mov
aas
int3
into
(bad)
movs
ret
jae
stc
lods
inc
(bad)
(bad)
jae
cmc
addr16
stc
fstp
jecxz
jmp
cli
daa
xlat
jnp
daa
jge
jp
mov
fdiv
lea
sbb
in
mov
call
enter
loop
stc
pushf
out
lock
in
(bad)
repnz
mov
jmp
ins
cs
loope
rcl
aas
clc
in
fidivr
cmp
es
test
ficom
jb
xor
aas
inc
mov
bnd
iret
pushf
stc
pusha
out
ds
jl
sub
xor
sub
popf
xchg
cmp
cmp
xor
ss
mov
xor
out
push
jecxz
xor
stc
push
push
jle
xchg
push
push
jbe
xchg
xchg
in
dec
dec
jnp
cmp
sub
mov
sahf
adc
jecxz
pop
adc
xchg
lock
xchg
mov
pop
cli
dec
sahf
movs
lahf
sub
imul
xchg
mov
int3
sahf
jecxz
push
popf
test
gs
hlt
mov
out
or
cmp
dec
xchg
repnz
mov
adc
jl
add
dec
ds
out
xor
cld
loopne
mov
leave
ins
repnz
xlat
push
dec
xchg
xchg
pop
cld
jns
hlt
pushf
and
imul
xchg
inc
das
iret
in
dec
(bad)
nop
outs
cmp
out
mov
loope
pop
push
add
push
xchg
mov
xor
mov
mov
shufps
pop
cmc
loop
pop
inc
lods
scas
leave
or
push
or
xlat
stc
push
push
push
sub
mov
aam
cdq
(bad)
cmps
daa
out
inc
mov
adc
aad
out
loop
sub
add
lods
stc
pmulhuw
xor
in
out
scas
xlat
push
jbe
in
pop
xor
clc
jmp
jl
dec
retf
pop
in
mov
mov
mov
clc
xor
cmp
cli
jmp
retf
xchg
out
jg
sbb
add
mov
lahf
(bad)
mov
inc
je
imul
in
std
std
hlt
mov
in
int3
mov
sub
std
out
fidivr
hlt
mov
jp
dec
mov
cdq
push
mov
retf
sub
shl
cld
push
cmp
das
jmp
test
dec
loopne
test
js
jmp
xchg
in
ficomp
adc
test
xchg
mov
lods
repz
icebp
call
dec
sbb
in
stc
nop
mul
lahf
iret
pop
fs
out
(bad)
cmp
push
into
in
hlt
push
push
outs
cmp
imul
enter
iret
in
adc
lahf
cmp
fstp
in
push
das
xchg
fs
fwait
loop
xlat
mov
retf
pop
add
aas
jg
popa
jge
test
fcmovne
gs
lock
sahf
inc
das
xchg
cmc
inc
xor
stos
aaa
xchg
xlat
in
xor
out
(bad)
stc
fwait
cld
jp
rol
inc
lods
int
mov
test
xchg
in
dec
jne
lea
inc
pop
ja
jae
jp
stos
mov
div
pop
pcmpeqw
cmp
or
rcl
das
mov
fidiv
mov
in
fucomi
call
xlat
dec
mov
jge
sbb
hlt
cld
sub
adc
cmp
sub
int
shr
cdq
lahf
ds
xor
cmc
jge
iret
mov
je
dec
dec
push
mov
rcl
sahf
and
pushf
retf
stc
out
gs
cmc
iret
outs
push
cmp
mov
sub
xchg
jns
hlt
mov
xchg
cdq
dec
mov
sar
stc
in
in
fwait
addr16
sti
iret
in
cli
int
stc
call
cmp
cmp
mov
out
out
loop
push
nop
push
pop
aas
and
xchg
sub
add
shr
cs
rol
in
push
push
dec
xor
idiv
lods
outs
sub
sbb
and
lods
xchg
mov
cli
gs
iret
into
not
(bad)
daa
xor
cmp
jno
sti
mov
pop
or
xor
push
repnz
ret
into
ja
dec
lds
(bad)
push
push
cs
mov
dec
call
test
cmp
push
xchg
lock
xchg
out
out
je
ret
push
jge
fcmovne
inc
cmp
or
sti
lahf
(bad)
int3
arpl
loop
stc
out
inc
das
jg
fwait
ret
test
add
repz
outs
mov
fsubr
adc
in
adc
scas
cmp
es
dec
inc
rcl
sbb
inc
shl
call
sbb
mov
xchg
(bad)
pop
jns
and
sti
mov
xchg
ins
sub
out
std
les
lea
jecxz
in
jp
sbb
cs
cld
xchg
out
cld
adc
jne
stc
inc
ds
jp
cmp
icebp
pop
faddp
xor
adc
sub
in
dec
xor
xor
aas
pop
in
rol
adc
mov
out
gs
stc
cmps
ret
xchg
sbb
xchg
int3
cld
loopne
das
adc
jle
dec
sti
mov
xchg
outs
mov
xor
cmp
fiadd
into
fst
bswap
xor
or
add
retf
xchg
xor
gs
pushf
mov
pop
xchg
(bad)
out
test
cmp
xor
xchg
std
pop
(bad)
fidiv
sub
or
loope
aas
or
ins
out
mov
sub
test
pop
or
cmp
inc
jl
outs
jae
fincstp
cdq
shr
mov
popf
pop
sub
sbb
out
mov
repz
int3
int3
popaw
xlat
sar
ret
out
mov
xor
stos
or
ja
pop
sub
addr16
cmp
neg
fidiv
shl
jge
ret
mov
mov
maxps
adc
mov
leave
xchg
pop
out
pop
inc
push
aas
push
pop
push
mov
adc
sub
int
cmp
repz
xor
xchg
mov
cmp
scas
pop
adc
push
cwde
mov
sbb
test
rcr
fsub
pushf
pop
sbb
adc
jp
push
dec
mov
sub
push
hlt
(bad)
int
jno
cwde
ret
cmp
ins
sbb
jbe
xchg
mov
outs
mov
cmp
das
cmp
jp
jnp
xor
aaa
sar
pop
clc
int3
dec
push
fwait
aas
sahf
les
cdq
repz
push
jne
dec
sub
ror
jecxz
int3
call
out
inc
fwait
adc
sbb
inc
into
(bad)
cmp
xlat
(bad)
and
in
in
cmp
out
push
pop
push
int3
jmp
bswap
xchg
adc
mov
and
pop
(bad)
and
xor
pop
cmp
push
xor
jmp
aad
dec
mov
push
movs
push
(bad)
fadd
neg
pusha
mov
mov
xchg
pop
shl
in
inc
push
movs
ss
(bad)
icebp
xchg
and
repz
pushf
mov
call
fs
jb
fisub
and
std
not
int3
in
cli
cmp
daa
jno
xchg
cld
xchg
outs
dec
add
nop
enter
fld
xchg
push
mov
fistp
and
push
es
stc
cmp
sti
shr
cmps
lahf
gs
leave
das
lods
in
stc
dec
cmc
cmps
xchg
lock
ret
cmp
inc
mov
(bad)
int
xor
pop
fimul
mov
scas
push
(bad)
nop
call
mov
adc
stos
loop
stc
retf
pop
jmp
into
mov
inc
dec
icebp
mov
imul
sub
xor
add
jne
int
pop
out
repz
(bad)
das
test
cmp
mov
das
stc
mov
int3
sbb
cmp
dec
test
rcl
pop
test
aam
inc
cmp
mov
int
daa
mov
push
mov
mov
scas
mov
add
std
out
repz
ret
xchg
scas
jecxz
mul
out
cmc
mov
jnp
retf
iret
dec
jle
adc
mov
sbb
or
cs
loope
test
pop
(bad)
ret
outs
popa
in
push
cmp
mov
xor
xchg
test
cmp
xor
loop
cmp
outs
mul
test
sub
std
cld
(bad)
(bad)
fnstcw
push
xchg
jge
stc
ret
fistp
xlat
or
mov
out
cmp
inc
cwde
(bad)
out
jae
sahf
dec
mov
jle
jno
and
jae
test
nop
das
push
out
push
scas
jp
int3
test
sahf
add
aaa
stc
cmp
pop
cmp
in
retf
sbb
xchg
xor
les
enter
rcr
or
pusha
out
cmp
nop
sti
(bad)
inc
dec
in
and
mov
retf
cmps
pop
not
clc
xchg
ss
ret
and
popa
scas
ret
and
imul
mov
fmul
aad
add
and
mov
aad
and
into
retf
xor
pop
popa
into
mov
out
xor
shl
clc
stc
cmps
cdq
dec
paddb
sbb
sbb
sub
int3
jge
dec
cwde
scas
in
xlat
adc
xor
xor
leave
add
repz
add
xor
fcom
retf
leave
fist
in
add
js
xchg
mov
fistp
inc
xor
mov
ficom
into
or
mov
cwde
dec
test
es
cld
outs
adc
pusha
and
dec
cmp
xchg
pop
sub
sub
fisub
fmul
imul
push
mov
test
or
sbb
out
int
mov
bnd
aad
ds
icebp
pop
xchg
ds
test
cmp
jge
cwde
sbb
shl
xor
jmp
cli
fsubr
dec
push
aas
addr16
daa
call
push
test
femms
(bad)
cmp
jge
call
test
retf
clc
arpl
pop
xor
(bad)
stc
pushf
pop
xchg
dec
sbb
jecxz
cmp
sbb
fs
jb
push
sbb
jmp
stos
es
cmp
jno
dec
imul
jne
cwde
fldenv
(bad)
push
adc
nop
xchg
inc
sub
dec
or
popa
mov
aaa
data16
sbb
test
mov
jg
dec
enter
out
div
sbb
mov
loop
push
sar
jp
sti
mov
in
loopne
mov
in
jbe
int
inc
cwde
lahf
arpl
xchg
mov
inc
push
mov
movs
jmp
ds
out
xor
mov
xchg
loop
adc
cmp
in
dec
pusha
pop
icebp
adc
pop
out
fidiv
inc
inc
cdq
aas
mov
mov
movs
int3
or
and
mov
rcr
adc
(bad)
icebp
push
lds
jns
cmp
dec
fist
or
inc
adc
or
pushf
js
lods
or
xor
stc
out
call
jl
xlat
dec
inc
addr16
cmp
inc
pop
mov
ret
xor
or
test
in
jle
sti
out
or
pushf
je
xchg
(bad)
sub
fwait
inc
call
ins
add
dec
neg
jbe
jecxz
pop
rol
sbb
mov
dec
scas
in
ja
popf
(bad)
clc
cmp
das
cmp
xchg
xchg
test
fisub
popa
xor
and
pop
cwde
pop
dec
(bad)
xor
push
cld
mov
cdq
jp
cmp
adc
rcl
fild
mov
adc
ror
or
cmp
xchg
add
ror
in
mov
xchg
mov
or
stos
daa
inc
and
xchg
pop
bound
xchg
inc
std
mov
adc
out
jns
jle
cmp
xor
pop
add
dec
xor
and
out
push
popaw
in
inc
pushf
mov
gs
pop
loop
scas
inc
jecxz
xlat
xor
test
mov
adc
fnstsw
push
pop
ficom
call
frstor
sub
in
std
mov
pop
push
lds
pusha
pop
lods
imul
(bad)
shl
fwait
mov
and
inc
lods
pop
sub
aad
mov
pop
das
ret
inc
or
adc
popf
xor
div
and
fisub
les
mov
daa
movs
loope
sub
sbb
test
aam
cmp
movs
jb
in
cmps
loop
sar
adc
xor
xchg
and
inc
inc
sub
enter
fcomp
inc
out
pop
retf
loop
and
cwde
pop
into
jnp
(bad)
in
mov
and
mov
scas
pmaxsw
inc
mov
scas
inc
xlat
ds
jecxz
mov
shl
jp
ret
sbb
sub
cmp
dec
not
xchg
push
add
pop
push
xchg
clc
mov
adc
iret
fst
xlat
cdq
mov
or
push
xchg
sar
cmc
cmc
test
popa
leave
xchg
ins
test
repz
das
mov
scas
cmp
int
lods
pusha
loope
jge
ret
pushf
cwde
fst
push
pop
dec
les
lds
cli
int3
test
adc
xchg
jle
fwait
sar
nop
inc
das
jae
int
inc
into
sbb
add
mov
pushf
mov
jmp
repz
or
pop
(bad)
ds
xchg
xlat
das
and
ror
xor
ds
sti
out
or
out
mul
loop
mov
leave
out
pop
xor
add
arpl
cmp
cwde
jno
hlt
dec
sub
out
inc
ins
outs
cmp
sbb
fdivr
cmps
(bad)
add
(bad)
fldcw
inc
and
or
push
add
sbb
cmp
stos
jmp
sbb
cmp
mov
mov
mov
adc
pop
aad
jge
mov
xchg
cmc
mov
out
sahf
push
adc
or
jnp
jae
mov
xchg
loopne
fwait
cdq
out
and
cs
sub
lock
mov
out
scas
(bad)
aas
sahf
(bad)
(bad)
clc
mov
(bad)
lahf
pushf
cmp
aam
imul
and
aaa
aaa
out
outs
fidivr
out
push
fwait
and
imul
mov
not
jg
xor
inc
lea
retf
sub
cmps
fcmovnb
or
mov
mov
hlt
push
or
jecxz
retf
stos
mov
ficomp
inc
lds
jns
test
jns
mov
dec
aad
in
mov
pushf
jnp
pop
int
add
iret
pop
xchg
div
jns
leave
lds
addr16
cld
cmc
fidiv
ss
call
adc
hlt
mov
sahf
in
fistp
(bad)
mov
mov
mov
jo
mov
call
jo
imul
outs
sbb
retf
fs
cmps
sbb
xchg
dec
lock
rcr
xor
cmp
mov
cmps
cdq
mov
stc
stc
shl
mov
xchg
imul
loop
pushf
fisttp
mov
lahf
cmp
cli
add
arpl
mov
jl
xor
cmps
xor
call
sub
dec
es
cmp
xchg
cmps
js
ds
ror
mov
retf
sub
inc
stos
cmp
pop
enter
fwait
pop
jg
and
push
(bad)
gs
jne
or
icebp
push
cwde
sahf
adc
hlt
lahf
pop
xchg
inc
jle
dec
sub
sub
mov
mov
adc
and
xor
xchg
xlat
pop
push
and
cli
aad
jne
addr16
retf
dec
mov
imul
mov
out
jecxz
jmp
pop
in
enter
aad
(bad)
repnz
fisttp
jge
popa
jl
iret
cmp
int3
cmp
xor
lods
std
outs
int
out
ret
inc
das
ror
daa
and
repz
add
repnz
adc
cmps
jb
in
inc
jmp
pop
fldcw
mov
retf
je
rcr
xchg
and
pop
pop
fwait
int3
xor
in
(bad)
pop
sti
neg
lahf
fidivr
jmp
jle
fstp
or
jmp
sbb
xchg
out
fwait
in
or
shl
ins
(bad)
dec
or
mov
and
in
jp
pop
sub
test
mov
lahf
push
cld
dec
xor
mov
addr16
call
jbe
adc
push
(bad)
push
int
les
and
adc
in
mov
cdq
data16
xchg
mov
das
jo
loopne
sub
test
repnz
out
fidiv
or
xchg
leave
jg
je
cmp
cmp
sub
or
xor
sbb
pushf
aas
es
sti
pop
and
fisttp
or
mov
ja
repnz
cli
jecxz
cld
jecxz
out
jge
out
jmp
adc
ja
push
xchg
mov
test
dec
enter
pop
jbe
pop
shl
int3
dec
xor
outs
or
jg
xchg
mov
sbb
outs
jno
ret
mov
and
xchg
cdq
jae
fwait
and
icebp
pushf
cdq
int
mov
rcl
cmps
daa
jmp
jno
add
outs
test
bound
mov
inc
jo
jae
adc
gs
fbld
in
pushf
and
test
das
pop
jecxz
mov
enter
mov
mov
fadd
cwde
cwde
ret
jmp
(bad)
retf
mov
sbb
popa
and
loope
outs
ds
sbb
rol
and
(bad)
cli
sti
iret
jg
pop
aas
out
jmp
lock
inc
mov
int3
or
ds
adc
lock
jbe
stc
fs
enter
mov
daa
jns
cld
in
pop
scas
jp
xor
(bad)
into
push
mov
sbb
nop
xlat
jae
int3
mov
xchg
and
fadd
mov
call
cld
aaa
scas
cmp
test
in
pop
add
adc
cmc
mov
out
imul
ret
data16
mov
cld
inc
std
cmp
cmp
pop
int3
sub
outs
(bad)
jp
xlat
xor
js
lahf
cdq
inc
mov
fsub
xor
inc
jbe
dec
pusha
repz
xchg
jmp
xchg
lods
xor
call
(bad)
cdq
sbb
les
icebp
outs
and
xor
addr16
(bad)
jl
and
push
cmps
dec
nop
repnz
add
xchg
mov
inc
cmps
ja
or
dec
(bad)
jle
push
cmps
push
inc
pop
call
inc
pop
or
push
leave
call
into
addr16
pop
int
repnz
pop
fucomip
in
aam
out
sub
mov
inc
aas
pop
test
inc
lahf
pop
das
neg
(bad)
bound
xchg
lahf
nop
movs
test
or
ror
loope
(bad)
mov
test
cmp
ror
scas
mov
sbb
xor
push
push
add
call
out
rol
add
scas
dec
lds
leave
pusha
push
mov
aaa
(bad)
and
int
add
fwait
push
pop
call
pushf
aad
lods
shr
adc
fdivr
out
mov
mov
dec
pushf
sub
xchg
daa
adc
bound
xchg
adc
addr16
int3
mov
int3
sbb
in
cmp
dec
les
aad
daa
pop
sbb
movs
cmp
add
mov
push
div
mov
adc
add
xchg
stc
mov
in
cdq
sub
mov
int
sbb
jl
bound
in
iret
pop
scas
addr16
mov
mov
push
push
cmp
or
in
stos
dec
call
mov
cmp
mov
cwde
pop
mov
aaa
inc
mov
shl
mov
mov
push
jmp
add
(bad)
ficom
jns
jmp
call
cmp
bound
(bad)
inc
sti
or
cmc
adc
jae
xchg
xchg
test
xlat
icebp
push
sti
ret
mov
mul
int3
adc
stc
sar
daa
sub
sub
jo
es
int3
inc
cdq
jmp
test
cmp
in
popf
mov
aas
jge
mov
jmp
int
mov
leave
sub
(bad)
cmp
into
(bad)
fwait
(bad)
push
sbb
lods
inc
mulps
push
sub
pusha
push
xchg
pop
fcomp
cwde
fstp
mov
ja
sub
mov
sbb
lds
dec
in
fprem1
sbb
or
test
cdq
cmps
es
gs
test
stc
adc
cmp
movs
idiv
jnp
scas
cli
pop
in
lods
imul
les
fistp
hlt
cmp
add
sbb
clc
icebp
lds
jbe
out
cdq
aam
cmp
xchg
mov
repz
jns
loop
mov
mov
push
in
xchg
enter
test
in
imul
fucomi
lock
fwait
adc
mov
pop
out
xor
iret
leave
loop
add
(bad)
push
push
pop
iret
sub
repnz
and
fistp
and
jmp
dec
add
fcomp
fcomp
(bad)
xor
outs
fimul
(bad)
cmps
iret
fwait
pop
and
adc
cwde
pop
push
inc
(bad)
scas
iret
add
int3
cdq
sub
repnz
js
leave
xchg
cdq
scas
in
(bad)
xchg
mov
jb
std
int
push
sahf
jle
cmp
scas
dec
int3
cmps
cld
and
add
dec
jo
mov
lds
das
mov
and
repnz
loope
adc
push
imul
pop
enter
or
xchg
pop
out
repnz
fistp
popf
(bad)
sahf
das
cld
out
int3
out
xchg
out
mov
dec
fmul
dec
mul
ins
push
add
push
jle
and
xor
jmp
push
adc
dec
jae
ret
out
pop
xor
mov
sub
hlt
xchg
inc
out
leave
sub
retf
push
dec
push
in
cwde
sar
pop
add
pop
out
js
and
jg
cmps
cdq
rcr
mov
cdq
mov
pushf
cmp
dec
cmps
idiv
sbb
xor
lahf
adc
sbb
pop
js
ror
dec
shr
les
mov
xor
imul
std
aas
movs
stos
jge
scas
lods
adc
icebp
inc
sub
jnp
sub
test
in
cld
jle
ror
retf
xchg
in
shl
jbe
ret
test
xchg
dec
je
add
sbb
or
cmp
mov
out
sbb
sbb
mov
lods
cdq
js
dec
xor
and
jmp
and
xor
or
pop
out
adc
sahf
push
inc
mov
into
fld
or
fwait
les
in
fst
out
jae
cdq
cmc
ss
sahf
idiv
and
jno
xor
xor
sub
adc
imul
dec
call
jne
mov
jno
dec
xchg
mov
xor
and
dec
mov
in
outs
push
pop
outs
adc
pusha
clc
push
mov
or
rcr
mov
push
sub
add
add
sub
add
call
stos
je
add
stos
pop
in
retf
mov
xor
sub
(bad)
int3
jl
dec
fld
mov
fsub
jae
js
dec
cmp
mov
jle
xor
mov
call
xor
push
add
xlat
add
push
jns
and
jg
(bad)
outs
sub
nop
or
repnz
or
call
jl
fld
idiv
daa
pop
jl
jle
cmp
out
mov
fbstp
push
jne
mov
test
in
or
lods
in
sti
out
fiadd
jecxz
adc
in
pop
mov
repnz
inc
stos
mov
mov
sub
dec
inc
inc
das
daa
mov
mov
ds
mov
loope
cld
mov
xchg
repz
(bad)
cdq
test
push
imul
push
test
retf
add
icebp
psubb
adc
xchg
dec
push
and
adc
cmp
(bad)
sub
fs
mov
xor
adc
or
mov
inc
ret
sbb
dec
mov
fwait
xchg
fidiv
out
add
ds
rol
xchg
je
adc
jge
neg
jge
cdq
dec
mov
les
or
out
cmc
stc
imul
mov
or
mov
mov
mov
enter
out
clc
out
pop
gs
aaa
mov
adc
nop
pop
push
nop
add
dec
pop
and
xchg
mov
pop
cld
loop
pushf
lahf
enter
sub
push
mov
call
lods
push
jns
mov
mov
imul
into
jo
scas
leave
xor
sub
and
fld
pop
stos
adc
jge
jae
cmp
xchg
iret
pop
mov
sub
ins
sti
add
mov
cmps
cld
test
inc
addr16
pop
js
mov
out
adc
sar
adc
cmp
mov
(bad)
cmps
dec
stc
imul
hlt
das
sar
dec
sahf
aaa
fcmovne
sbb
xchg
xchg
jno
dec
das
leave
aam
leave
ror
retf
mov
fcom
xchg
cld
dec
test
push
in
or
ss
cdq
ficom
mov
shl
sbb
pop
imul
jne
les
or
jle
sub
jo
and
into
iret
stos
mov
cld
in
fidiv
js
movs
into
scas
pop
xor
das
leave
imul
(bad)
sar
stos
cmp
and
cwde
lds
dec
outs
loop
jg
lds
popf
ja
sbb
mov
and
fdiv
sahf
retf
sub
mov
movs
outs
xchg
pop
pop
cmp
jmp
mov
pop
mov
mov
gs
xchg
sub
pop
ja
mov
sub
mov
jle
fldenv
div
dec
push
inc
retf
(bad)
int3
out
cld
(bad)
rep
jecxz
in
mov
iret
fsub
cmp
mov
mov
jns
jg
enter
test
add
movs
jns
pusha
(bad)
cld
(bad)
adc
ins
mov
sahf
lahf
push
jbe
or
jae
mov
out
mov
jg
movs
xchg
push
into
test
cwde
push
mov
cwde
aam
mov
mov
jbe
push
dec
mov
(bad)
sahf
mov
mov
nop
cmc
and
or
mov
lea
inc
xor
loopne
push
cmp
test
cmp
xchg
jmp
cmc
aaa
xor
mov
call
sub
in
xchg
mov
cmc
cmp
cmp
test
data16
test
add
fidiv
push
sar
scas
out
in
xor
ret
pop
leave
mov
in
push
mov
dec
(bad)
and
es
mov
xchg
inc
fwait
ja
aas
mov
ret
mov
or
(bad)
aas
mov
and
cld
icebp
out
leave
jb
jg
scas
add
lea
imul
mov
sub
sub
outs
jae
fbld
sbb
pushf
fwait
pop
stos
in
(bad)
and
mov
cld
fldpi
clc
inc
mov
cmp
mov
or
cmps
push
fcom
sub
xchg
cld
aas
adc
cmp
shl
sbb
fistp
test
cmp
pop
mov
jmp
jb
loopne
call
nop
or
jns
(bad)
call
mov
sbb
add
int
push
add
pop
(bad)
imul
cld
fldpi
out
(bad)
xchg
in
pop
out
(bad)
imul
enter
jge
loop
add
inc
pushf
fld
or
jnp
int3
shl
das
push
fidivr
movs
sti
or
cli
cld
mov
ins
mov
(bad)
movaps
and
sbb
cmps
aaa
lahf
mov
neg
pop
lahf
jnp
dec
outs
(bad)
call
jp
int
push
int3
in
les
idiv
dec
lods
cmc
fxam
dec
inc
cli
into
cld
in
dec
cdq
cmc
ficomp
stc
add
je
into
pop
mov
ja
mov
ret
ret
jae
iret
aam
cmp
enter
js
call
xor
shl
jae
mov
sar
je
or
xor
sub
test
mov
repz
cli
cmp
scas
jns
mov
js
add
fmul
int3
jmp
fwait
sbb
pop
cli
sub
outs
mov
dec
xlat
mov
loope
lods
gs
repnz
jl
push
rcr
ds
out
sti
lahf
and
repz
xchg
jecxz
outs
ds
repnz
(bad)
sahf
mov
bound
xor
repz
jge
mov
pusha
pop
cmp
mov
sbb
and
mov
call
jmp
jge
scas
fild
aaa
test
inc
xor
imul
jg
test
das
(bad)
sahf
xchg
sti
jle
and
repz
pop
lahf
cmc
xlat
js
jbe
data16
jl
inc
std
and
and
sti
jnp
lahf
mov
xchg
push
fmul
lahf
cmc
in
mov
aas
push
jg
bound
fwait
jmp
movs
(bad)
jecxz
mov
jbe
cmp
add
adc
lods
mov
xor
mov
fiadd
into
cmps
outs
pop
imul
inc
xchg
jns
rol
jnp
inc
cmp
xor
push
iret
xor
mov
sbb
bnd
mov
out
xlat
idiv
cmc
imul
jle
pushf
nop
(bad)
(bad)
xor
or
jecxz
pop
or
or
cmp
stc
jne
mov
hlt
loop
out
mov
movs
outs
(bad)
dec
ins
imul
jle
aam
outs
dec
and
push
fwait
in
mov
mov
adc
push
stos
mov
lea
xchg
test
retf
call
sub
(bad)
sbb
jle
sar
shl
je
cmp
sbb
call
mov
stos
inc
test
dec
out
repz
jb
popf
(bad)
fstp
ffree
inc
mov
adc
(bad)
pop
int
sbb
ret
mov
(bad)
jnp
or
imul
cmc
xchg
mov
pop
aad
dec
jmp
mov
ja
aad
xchg
pop
shr
out
fstp
add
ficom
daa
sar
int
fcmovbe
fs
mov
or
popf
cmp
push
push
std
loop
jne
jbe
movs
dec
data16
cld
loope
push
iret
daa
scas
adc
shr
icebp
mov
hlt
retf
cld
mov
(bad)
and
pop
dec
jg
daa
pop
pop
rol
mov
pop
add
cdq
sbb
stc
hlt
mov
mov
push
jmp
movs
lahf
mov
cmp
retf
ficom
gs
test
pop
sbb
add
xchg
xor
jge
frstor
ficomp
mov
jbe
leave
mov
push
xchg
out
mov
jge
xor
imul
xchg
xor
enter
push
or
mov
xchg
enter
dec
push
mov
sbb
sub
(bad)
push
daa
jle
and
(bad)
xlat
(bad)
dec
jl
fmul
xor
jns
out
lock
loopne
fbld
lock
icebp
ins
retf
sub
test
xor
mov
pop
mov
jl
xchg
dec
dec
fidiv
(bad)
jg
mov
sti
cmc
xor
jmp
sti
cmp
or
xchg
scas
mov
inc
jl
sbb
daa
pop
and
test
dec
data16
imul
xchg
js
lock
sub
shr
outs
mov
pop
fsub
mov
add
or
sbb
dec
xchg
test
mov
jecxz
mov
nop
jl
xchg
xchg
push
fwait
shr
mov
out
shr
push
(bad)
xor
in
xor
imul
sbb
fs
das
scas
jbe
jg
int3
push
out
mov
out
in
jl
or
dec
mov
push
fmul
mov
shr
inc
mov
mov
pop
in
sub
ret
fwait
jo
cld
std
mov
dec
inc
sahf
mov
jno
inc
aas
push
dec
test
in
into
jle
ror
pop
outs
lahf
cwde
xchg
shl
repz
push
jle
imul
frstor
ja
sbb
out
adc
sbb
sbb
push
mov
push
sbb
cwde
sub
out
fisub
push
pop
push
hlt
push
rcr
imul
mov
ror
mov
lds
std
popa
addr16
cmp
loopne
or
out
jle
shl
(bad)
(bad)
aas
mov
xchg
call
(bad)
pop
mul
pop
addr16
xchg
fs
cmp
or
cmp
in
sub
sub
jle
mov
clc
fdivr
std
clc
rcl
movs
aam
jle
dec
sahf
cld
stc
jmp
jge
(bad)
inc
xor
mov
es
addr16
and
sti
movs
cwde
cdq
mov
out
fdivp
push
dec
int3
xor
and
cld
test
(bad)
jecxz
mov
xchg
movs
movs
out
(bad)
mov
mov
bound
jb
in
mov
rol
pop
sahf
or
push
xchg
inc
mov
and
cmps
push
jecxz
jns
in
(bad)
or
xchg
or
pop
xor
mov
push
sbb
movs
mov
lea
pop
push
sub
sub
nop
ins
mov
adc
lea
mov
cli
dec
leave
mov
xchg
xchg
call
inc
adc
sbb
push
int
jecxz
dec
pop
lea
(bad)
push
pop
inc
test
cmp
push
aam
mov
lods
pop
clc
inc
pop
mov
(bad)
test
jle
jno
sbb
das
enter
push
adc
aaa
jl
out
mov
in
sub
dec
cmp
ja
mov
inc
ja
(bad)
int
ins
cmp
add
inc
mov
sub
cmp
lods
iret
(bad)
aaa
inc
enter
aaa
out
fwait
pop
dec
in
xor
outs
sahf
pop
cmp
call
in
into
fwait
movs
xor
cmps
fcmovbe
and
leave
push
pop
push
ins
push
push
xchg
repnz
mov
cmc
adc
xchg
inc
mov
jne
push
or
adc
inc
nop
inc
mov
fisttp
movs
out
or
rcr
sbb
dec
cmp
es
call
jno
(bad)
pop
sbb
mov
or
int
mov
scas
cli
sahf
mov
addr16
or
arpl
xor
clc
add
sub
jae
xor
rcr
clc
mov
int3
test
or
push
xor
adc
data16
call
inc
sahf
cmps
outs
retf
or
push
or
pop
cmp
cmp
icebp
inc
mov
addr16
loopne
push
pop
fmulp
xchg
inc
(bad)
dec
push
call
pop
mov
cli
popa
imul
call
jmp
jbe
fist
in
sub
jmp
lock
push
cmp
xchg
ror
xor
or
sub
fadd
add
push
test
inc
cmp
(bad)
into
call
sbb
xchg
push
mov
les
mov
mov
fld
push
pop
iret
fnsave
sub
jecxz
and
pop
clc
or
(bad)
sti
inc
jbe
xlat
js
mov
bound
mov
xor
jecxz
mov
pop
adc
scas
clc
mov
fwait
jbe
clc
hlt
lock
outs
push
mul
pop
arpl
push
ins
adc
xchg
sbb
mov
dec
icebp
pop
aam
lods
out
ss
xchg
cld
inc
idiv
cmps
pop
jmp
mov
(bad)
adc
test
mov
cmc
(bad)
xchg
pop
or
sub
jmp
push
cdq
(bad)
sub
sti
dec
dec
xor
dec
adc
sub
bound
push
and
mov
sub
ret
int
test
mov
mov
and
retf
add
jbe
outs
fwait
pop
mov
mov
add
rol
adc
test
jb
cdq
mov
dec
imul
stc
mov
dec
push
jno
(bad)
fs
in
int3
jno
push
enter
dec
movzx
ds
mov
shr
or
cmps
inc
scas
sbb
mov
sahf
retf
les
iret
sahf
mov
xchg
jg
jmp
in
dec
sbb
int
stc
mov
push
lahf
retf
sti
adc
in
sub
mov
cmp
daa
aas
ret
mov
nop
loope
out
cmps
dec
repnz
and
popa
call
gs
arpl
mov
dec
icebp
xchg
ret
xor
inc
int
add
jge
mov
and
cmp
mov
cmp
ins
out
mov
iret
mov
sbb
jne
mov
or
adc
daa
cmp
mov
or
rol
push
scas
push
call
jnp
int3
scas
push
test
mov
and
and
(bad)
pop
mov
aad
scas
leave
ror
(bad)
(bad)
std
push
mov
and
mov
xor
inc
push
cmp
mov
sub
movs
push
int
pop
sub
(bad)
es
adc
pusha
loopne
and
dec
sub
or
jp
call
or
jne
dec
(bad)
sbb
push
adc
dec
ins
test
jg
repnz
add
div
sub
cmp
outs
sub
xchg
jno
ss
movs
mov
push
sbb
mul
fucomi
pushf
mov
sbb
in
inc
mov
add
js
push
pop
add
jle
inc
pop
sti
ret
out
jne
mov
(bad)
nop
inc
or
(bad)
mov
imul
(bad)
xor
xor
push
jl
fcomp
push
bound
in
ss
aaa
fldln2
scas
sbb
fdivr
cdq
sbb
mov
fst
lds
or
dec
push
sub
inc
pop
fbstp
xchg
test
scas
es
push
cmp
cmps
in
inc
xor
mov
stos
and
out
iret
mov
ja
mov
dec
inc
or
sbb
mov
add
mov
sbb
stos
lods
sbb
and
sbb
jns
cmps
and
lds
mov
and
cmp
test
dec
jmp
shr
xchg
xor
dec
or
jp
(bad)
int3
mov
mov
inc
lds
mov
loope
adc
mov
out
cmp
aas
mov
adc
std
inc
or
sbb
sub
mov
xchg
data16
mov
cdq
sti
jecxz
inc
ss
in
xchg
push
jmp
(bad)
neg
clc
jge
pushf
sbb
arpl
jle
jnp
mov
popa
mov
sub
ds
xchg
mov
test
dec
adc
xchg
cmp
ins
and
inc
test
sub
and
sub
pop
mov
ins
ror
cmp
mov
jmp
jbe
jae
icebp
test
jbe
adc
inc
add
retf
dec
mov
sub
mov
mov
jnp
jg
xchg
pop
hlt
add
daa
jbe
fisubr
outs
or
(bad)
xor
dec
lods
ds
shr
loope
movs
mov
sub
(bad)
jns
cld
add
jecxz
adc
pop
jne
jnp
ins
and
push
inc
mov
xor
mov
jns
movs
dec
popa
xchg
lock
rol
lock
sub
mov
mov
jmp
cmps
pop
mov
mov
cmp
xor
or
fdivr
or
std
rcl
sub
mov
pop
or
mov
lea
dec
aas
idiv
mov
nop
movs
mov
fdivr
dec
xchg
fldenv
adc
jbe
fwait
xor
gs
aaa
xchg
loopne
pop
mov
cmp
xchg
lahf
cli
or
mov
stc
gs
xor
test
sbb
aam
mov
bswap
sub
xor
mov
dec
pop
mov
sub
cmps
push
es
pop
mov
gs
dec
jae
idiv
mov
dec
adc
(bad)
lea
ret
push
fisub
data16
xor
scas
or
in
inc
retf
pop
pop
or
repnz
jge
sbb
dec
jne
in
in
xchg
inc
fcomp
(bad)
fimul
fdiv
mov
mov
mov
jge
mov
cmp
inc
out
dec
lea
cmps
ins
in
xor
fwait
(bad)
push
pop
mov
pop
xchg
mov
mov
ins
adc
ret
xchg
mov
inc
jo
repnz
cmp
cmp
mov
push
fcmovnbe
(bad)
vcvtsd2si
mov
(bad)
push
jae
dec
mov
dec
lods
cmp
ret
(bad)
jae
or
test
and
pusha
iret
imul
pop
(bad)
icebp
psubd
xor
sti
mov
(bad)
std
sbb
xor
aam
inc
adc
fwait
lods
mov
fwait
clc
jecxz
adc
imul
mov
mov
es
scas
jecxz
cmp
sub
je
add
xchg
mov
xchg
iret
dec
adc
jbe
inc
clc
pop
sbb
mov
pop
fst
inc
icebp
xchg
sub
lea
pop
cmovb
add
jecxz
cmps
adc
icebp
(bad)
rol
ja
mov
sahf
push
adc
xchg
popa
pop
or
inc
or
mov
lods
loopne
adc
shl
mov
cmovno
or
in
(bad)
imul
mov
lods
mov
les
add
mov
pop
sbb
sub
cmp
in
mov
xchg
in
push
or
inc
cld
sub
pop
xchg
push
sub
mov
cdq
adc
les
cmp
js
or
imul
cs
xchg
lea
(bad)
(bad)
(bad)
or
test
cmp
xchg
cld
sub
je
jo
or
jg
jp
adc
jp
fwait
mov
(bad)
out
jge
hlt
out
ja
mov
pop
adc
mov
xchg
aam
shl
pop
ja
rcl
sub
xchg
hlt
in
add
jmp
lds
xor
call
xor
and
cmp
or
daa
sbb
inc
push
inc
popf
cs
pop
addr16
movs
imul
lods
and
xor
sub
push
scas
(bad)
mov
jno
dec
dec
retf
shl
ss
pop
mov
or
pop
lods
adc
out
lahf
mov
int3
mov
mov
mov
mov
pop
mov
inc
sbb
mov
scas
xor
mov
push
push
bound
cwde
mov
sbb
mov
sbb
stos
popa
sub
jno
adc
cmps
jl
push
mov
test
mov
sub
es
retf
lods
xchg
dec
mov
(bad)
ror
int3
jmp
adc
dec
je
push
inc
ret
(bad)
or
(bad)
push
cmp
inc
dec
cld
sbb
mov
(bad)
fnstsw
xor
nop
push
pusha
mov
add
inc
nop
mov
mov
pop
lahf
adc
mov
pop
adc
ret
inc
dec
iret
ret
dec
mov
or
int
(bad)
dec
or
out
loop
lods
hlt
dec
inc
pusha
and
sbb
mov
and
(bad)
dec
clc
out
or
sub
jno
sbb
ins
or
xchg
adc
test
(bad)
push
repz
test
jbe
in
shl
sub
cmps
shl
aad
sti
jno
frstor
lds
pusha
mov
adc
adc
sbb
push
je
aaa
ds
adc
les
mov
mov
inc
loop
pop
stos
and
nop
push
sub
std
inc
call
scas
sbb
and
pop
popa
push
cmp
add
push
inc
sub
jl
scas
fdivr
lods
fs
push
jecxz
gs
push
pop
sbb
mov
int
sub
xchg
push
jg
cmp
sbb
mov
cmps
mov
adc
fsubr
mov
retf
cmp
xchg
mov
push
and
(bad)
fwait
ins
mov
ins
push
push
or
lahf
mov
mov
jg
sub
in
lods
add
pushf
add
mov
push
movs
retf
xchg
loop
sti
sbb
pop
shl
cld
test
inc
shr
adc
sti
in
mov
retf
push
rol
and
jno
push
stos
inc
mov
sub
ss
loop
bound
mov
lea
(bad)
test
out
(bad)
cmp
fistp
jno
fsubr
or
xlat
mov
fisubr
ins
mov
add
fadd
or
ja
or
xor
sub
mov
inc
add
inc
(bad)
mov
mov
mov
aad
imul
call
xchg
aam
sar
cmp
sub
nop
frstor
in
hlt
hlt
push
loop
pop
pushf
fiadd
sbb
xor
or
or
adc
cmps
push
enter
cmp
out
fstp
xor
fcomp
in
pop
aam
xchg
ret
pusha
test
sti
movs
sub
loop
add
xor
outs
shr
add
cmps
push
int3
mov
mov
push
mov
das
dec
xchg
cmp
cmp
mov
xor
mov
dec
add
push
rol
pop
push
mov
(bad)
cmp
sbb
add
leave
adc
cmp
cmp
lds
add
and
xchg
out
imul
jno
outs
jnp
movs
xchg
dec
and
mov
scas
les
pop
aad
aaa
or
lods
push
mov
in
adc
mov
jp
sbb
dec
call
cmp
dec
dec
fld
retf
xchg
mov
adc
push
push
lock
ins
mov
loopne
and
lock
push
inc
in
jo
in
inc
stos
test
add
ds
loope
bound
(bad)
inc
xchg
xchg
(bad)
nop
cmp
mov
mov
or
inc
xor
mov
mov
fadd
repz
mov
adc
mov
(bad)
ins
sub
pushf
xchg
leave
sub
rcr
jle
sbb
jbe
addr16
jge
mov
cmp
(bad)
fstp
xchg
icebp
inc
sub
icebp
and
push
mov
pop
or
leave
stc
and
fadd
stos
sbb
jge
jl
clc
enter
mov
mov
adc
sub
sbb
popf
daa
rol
int3
push
je
mov
shl
les
mov
dec
bound
dec
aad
out
inc
or
mov
lea
test
inc
aad
mov
fld
jmp
adc
mov
mov
push
ret
and
sbb
inc
ret
cmp
xchg
shr
rcl
adc
fadd
es
mov
es
dec
out
add
inc
sahf
mov
dec
jno
mov
mov
mov
inc
fmul
adc
sub
fst
loopne
sub
mov
fsub
adc
sbb
sub
ss
jb
leave
fdivr
push
dec
or
in
cmp
scas
cwde
sar
lods
stos
add
xchg
shl
ror
pop
jg
in
cli
mov
inc
movs
mov
pop
push
or
ins
ins
rcr
push
mov
mov
jo
out
mov
data16
jg
repnz
loop
or
lods
fistp
cmp
js
(bad)
(bad)
fistp
lahf
adc
ss
sbb
xchg
pop
aad
and
loop
sub
xchg
sbb
xchg
add
arpl
bound
xor
cmc
push
inc
verr
cmp
xor
bound
sub
and
rcl
imul
dec
div
adc
pop
fsub
test
sbb
icebp
push
stc
retf
sbb
push
fcom
lds
ds
retf
inc
stos
adc
pop
test
push
or
pusha
movs
jp
hlt
add
push
sub
pop
and
retf
enter
sub
cmp
cmp
and
and
or
dec
mov
inc
ss
mov
(bad)
push
xchg
or
mov
and
sub
push
mov
mov
scas
pop
adc
push
dec
mov
inc
push
leave
push
push
(bad)
ins
push
sub
push
out
sub
xchg
sbb
sbb
push
jne
inc
cmp
(bad)
(bad)
dec
imul
(bad)
out
test
mov
or
into
dec
pop
push
dec
sub
cli
into
in
clc
icebp
daa
xor
call
or
jg
xor
cdq
add
test
xor
imul
pop
inc
add
ins
nop
mov
js
imul
jne
sub
stos
loopne
xor
mov
enter
mov
rol
fsubr
xchg
retf
ins
and
fcom
dec
ret
cs
jle
fs
pusha
xchg
cs
sahf
fdivr
je
shr
sbb
arpl
or
loopne
mov
cmps
or
ins
inc
adc
add
into
mov
push
or
xor
pushf
addr16
xor
adc
lods
xchg
test
sub
pop
mov
dec
jl
pop
test
adc
outs
enter
push
mov
inc
cmc
sub
add
push
bound
aas
nop
retf
jb
or
pushf
and
push
xor
dec
retf
fsubr
loopne
xor
adc
and
and
les
pop
sub
or
push
mov
mov
adc
int
dec
fiadd
fild
sbb
(bad)
sbb
arpl
loop
out
mov
xchg
movs
cs
mov
test
lods
popa
dec
add
imul
mov
jle
pop
push
and
into
fldcw
bound
gs
mov
mov
(bad)
xchg
mov
lea
adc
pop
mov
jmp
std
add
push
fdiv
sahf
and
cld
or
push
xchg
popa
gs
mov
lock
and
xchg
inc
test
pop
and
push
call
out
xor
cwde
jmp
test
call
cmp
enter
pop
mov
mov
push
fidiv
(bad)
out
pop
sbb
lods
inc
pop
fcom
and
mov
xchg
xor
cmps
cwde
jno
lods
(bad)
mov
mov
in
mov
retf
add
out
and
pop
mov
pop
sbb
rcr
in
xchg
mov
mov
cdq
retf
out
das
jl
fidivr
imul
mov
push
inc
push
cmp
sbb
adc
add
test
jmp
jle
imul
lods
(bad)
dec
dec
push
push
loope
fwait
sub
mov
xchg
cmp
or
imul
xchg
cmp
popf
mov
test
adc
test
xor
sub
iret
outs
bound
mov
and
add
jecxz
xchg
or
ret
arpl
loop
or
jnp
jmp
pop
mov
outs
add
mov
enter
into
jge
mov
add
add
xor
add
cld
sbb
jno
mov
rol
in
mov
mov
inc
sub
sub
mov
pop
jbe
dec
mov
jne
ins
push
push
xor
int
push
in
dec
scas
add
mov
aad
push
dec
push
mov
fldenv
test
mov
inc
add
mov
popf
dec
fwait
je
xor
inc
jae
push
(bad)
into
call
jle
sar
push
retf
jp
cmps
or
push
jb
and
lea
sub
sti
pushf
pop
inc
mov
data16
stc
xchg
or
push
inc
in
cmp
jp
out
imul
psrad
imul
mov
pop
(bad)
lock
xor
xchg
test
cmp
xor
call
fsub
sbb
cdq
push
test
push
je
movs
push
or
fwait
sub
ja
and
push
pop
pop
sbb
push
out
mov
shl
loop
test
sbb
jae
adc
mov
sub
test
add
and
add
add
enter
mov
sbb
sub
inc
inc
aaa
movs
mov
sub
mov
mov
ror
sbb
and
les
adc
cli
or
or
cmp
inc
sub
and
or
dec
inc
ins
sbb
lods
pop
fs
popf
xchg
out
je
add
imul
cmps
into
xor
mov
xor
scas
xlat
outs
push
out
or
xchg
enter
or
or
jne
push
or
(bad)
adc
fisub
out
or
cmps
shl
mov
dec
xchg
cmp
add
dec
adc
cmp
xchg
and
imul
pop
jno
xor
or
pop
inc
loop
les
call
pushf
out
lods
push
fs
pop
movs
cmp
stos
and
dec
mov
popf
frstor
ret
xor
or
in
push
and
xchg
icebp
inc
pop
xor
fiadd
sub
inc
inc
je
dec
dec
bound
mov
sbb
cmp
loope
cmp
inc
sub
jmp
lds
push
movs
sti
add
jbe
inc
or
cmp
popa
or
or
(bad)
scas
ins
aaa
push
jb
mov
jbe
es
inc
rcl
fmul
test
xor
mov
and
out
sahf
push
out
adc
add
and
push
cmc
cmc
push
sub
stos
(bad)
xor
aaa
xchg
mov
mov
push
mov
imul
es
fdiv
jno
(bad)
xchg
fs
or
repnz
cmp
mov
aad
inc
scas
sub
sahf
add
cmp
fwait
xchg
sub
arpl
push
push
test
leave
cmp
xchg
cdq
add
inc
dec
sub
movs
pop
bound
out
and
lds
add
push
inc
sub
jmp
add
bound
mov
stos
loop
jmp
cmps
push
pop
mov
daa
fld
mov
je
xchg
nop
inc
sub
dec
test
scas
ins
es
adc
xchg
or
pop
inc
xchg
test
push
xor
xor
jmp
add
dec
movs
and
dec
jbe
mov
scas
punpcklbw
ret
jae
sbb
and
xlat
push
mov
imul
and
aam
push
popa
and
jl
mov
cmp
cld
aaa
cwde
mov
jmp
int3
mov
xor
leave
dec
sahf
cld
das
fs
icebp
out
out
fisubr
sbb
clc
xchg
sbb
sbb
fadd
test
inc
lods
cld
push
cmp
sub
call
ss
pop
mov
popa
or
arpl
mov
mov
pusha
lahf
mov
call
jge
dec
xor
adc
inc
push
(bad)
xchg
stos
push
pusha
mov
push
rcl
and
js
push
int3
lods
add
mov
or
xchg
fidiv
dec
sahf
sbb
xor
add
adc
sub
rcl
pushf
sbb
mov
dec
xor
outs
sbb
adc
stos
xor
mov
adc
adc
dec
call
lods
push
inc
pop
es
(bad)
rcr
ret
pop
mov
and
test
fmul
mov
xchg
movs
inc
inc
push
enter
sub
out
jbe
jmp
add
jl
or
adc
and
test
push
hlt
mov
test
adc
int3
fs
(bad)
mov
fidiv
pop
push
ror
and
xchg
lods
sahf
sub
(bad)
pop
pushf
(bad)
lods
out
jno
mov
inc
aaa
out
fild
out
out
out
inc
sbb
adc
adc
mov
int3
fsub
aad
jmp
mov
retf
fwait
ret
jns
cwde
iret
or
sub
inc
jbe
mov
mov
sub
ret
xchg
push
add
loopne
test
cli
movs
pop
jbe
out
xor
jo
into
mov
cmp
xchg
mov
mov
jns
add
jns
mov
add
lods
inc
add
xchg
and
test
mov
inc
cmp
push
loop
add
xchg
dec
enter
inc
or
imul
xchg
stos
jno
fcom
add
jmp
add
fwait
js
loop
push
add
or
outs
test
or
sbb
inc
push
pop
fimul
rcr
lahf
pop
xor
jno
lds
jge
mov
sbb
bound
push
rcl
gs
and
movs
or
mov
movs
mov
mov
mov
jo
and
jecxz
mov
sbb
enter
imul
rol
in
push
mov
pop
mov
push
dec
sub
ffreep
iret
or
inc
mov
nop
cdq
inc
jg
scas
loopne
jno
ss
in
shl
(bad)
jbe
js
add
lds
mov
ss
dec
ret
leave
pushw
jnp
and
adc
sbb
in
bound
mov
pop
or
ja
push
xchg
sbb
inc
jge
pop
and
sbb
push
add
scas
xchg
jnp
rcr
and
add
dec
jno
(bad)
(bad)
repnz
adc
in
call
xchg
inc
mov
pop
and
inc
pop
les
dec
inc
or
dec
inc
arpl
and
test
scas
and
push
mov
add
out
out
out
out
jno
mul
gs
adc
adc
sub
mov
je
xchg
pop
or
or
adc
(bad)
cli
mov
jmp
out
jae
scas
xor
mov
imul
push
inc
jae
popa
adc
and
mov
sbb
ret
mov
nop
xchg
lahf
fldenv
jmp
int3
mov
out
sub
and
push
or
les
jne
jne
mov
xor
and
lds
xchg
jmp
dec
mov
jo
mov
pop
es
and
dec
sub
cs
xchg
xchg
mov
sub
and
movs
xchg
jbe
in
or
mov
fistp
inc
es
inc
or
aad
call
retf
and
inc
stos
sti
dec
aam
or
imul
cli
push
cmps
add
sbb
daa
sub
or
fucomip
pop
loop
push
mov
jo
fwait
pop
inc
push
pop
or
in
ins
sbb
jae
mov
push
fld
xor
lea
(bad)
fs
mov
mov
xchg
xor
into
sbb
lods
xchg
dec
sbb
sbb
xor
mov
std
add
push
push
fcomip
mov
and
mov
(bad)
or
cwde
outs
leave
neg
jle
(bad)
sbb
push
ins
(bad)
adc
mov
(bad)
jo
jp
pop
and
jg
shl
std
or
in
test
loopne
enter
les
std
mov
pop
pop
arpl
mov
dec
or
cmp
mov
push
and
stos
sub
sbb
add
jb
retf
sbb
inc
aad
shl
bound
iret
add
mov
aaa
hlt
mov
xchg
arpl
or
clc
movs
int
loop
call
mov
int3
mov
leave
push
test
repnz
ins
mov
sbb
rcl
xor
xchg
mov
(bad)
fsubr
push
and
mov
fcmove
lahf
jbe
(bad)
std
inc
jecxz
push
xor
mov
and
gs
ss
adc
aas
pop
pop
movs
fwait
ins
jo
xor
call
nop
or
push
xor
mov
fs
push
enter
outs
iret
stc
mov
mov
stos
fldcw
mov
pop
stos
imul
ins
loope
call
out
add
(bad)
push
retf
mov
push
std
xchg
adc
sub
lods
inc
mov
mov
call
cmp
push
pop
push
fsub
or
dec
push
and
lock
loop
rcr
aas
xor
or
fsubr
mov
call
push
pop
imul
test
inc
jbe
add
add
outs
movs
jnp
and
pusha
movs
fdivr
ss
push
pop
sar
in
cmp
push
dec
and
pop
test
mov
in
add
xchg
mov
push
or
mov
add
jb
xchg
es
jne
popf
push
in
push
cmp
pop
mov
pop
mov
sub
ins
mov
fbld
stos
into
mov
sbb
xor
jl
adc
repnz
xchg
pop
mov
or
test
cli
adc
lea
sbb
cmp
out
fs
cmp
ins
jg
ins
in
std
mov
inc
sahf
int
push
ret
sub
adc
mov
mov
cmc
repnz
xor
inc
jno
mov
or
fldcw
jo
add
fmul
dec
aaa
xor
lods
jp
sbb
xor
sub
outs
les
push
mov
(bad)
fwait
les
add
jbe
xchg
cwde
ficom
inc
adc
stos
bound
mov
jmp
in
xchg
sbb
pop
and
(bad)
repnz
sbb
mov
or
sbb
and
jns
push
inc
fld
mov
test
xor
push
sub
xor
mov
inc
stc
pop
daa
outs
sub
dec
push
xor
mov
xchg
retf
mov
push
xor
call
or
pop
mov
xchg
(bad)
aaa
mov
cwde
ins
jnp
test
and
scas
mov
test
retf
jns
inc
test
push
ins
popa
push
leave
gs
pop
mov
sbb
pop
cmps
ins
push
mov
popa
xor
inc
jae
sbb
fstp
push
ja
rcr
(bad)
mov
dec
iret
cmp
cmp
mov
mov
dec
fnstenv
adc
jns
clc
xor
mov
mov
cmp
sbb
pop
mul
dec
inc
movs
inc
movs
cmps
and
jbe
lea
test
dec
shl
lock
aam
cmp
sub
mov
pop
push
ds
jl
addr16
jl
fnstsw
push
fimul
addr16
sub
and
xchg
adc
shl
xor
das
inc
sar
test
inc
inc
dec
push
jp
test
stos
fdiv
xchg
xor
mov
xchg
movs
ss
xor
gs
mov
lock
push
pop
pop
cmp
shl
xor
or
scas
or
xchg
sub
popa
pop
adc
mov
shl
jge
js
push
sbb
mov
sbb
(bad)
sbb
xchg
scas
jbe
add
cmc
icebp
push
push
mov
jge
sub
sub
xor
test
test
jne
test
je
and
leave
pop
imul
fwait
jns
xor
(bad)
loopne
add
imul
fs
pop
lods
shl
push
ret
pushf
inc
pop
into
pop
sbb
imul
push
sahf
and
xchg
sahf
pop
cmp
add
nop
push
adc
inc
sbb
jp
(bad)
ins
cli
jecxz
nop
sub
fcom
lods
icebp
adc
popf
int
dec
inc
xchg
mov
stos
mov
in
es
push
xor
jl
icebp
lods
add
cmp
xor
sub
mov
fsub
sub
sar
outs
out
mov
clc
in
mov
rcr
cmp
xchg
es
sar
push
dec
xor
ret
or
in
popa
fdiv
cvtdq2ps
test
dec
push
add
cmps
or
cmp
mov
or
add
enter
enter
les
mov
in
mov
dec
or
jne
fisub
jno
fist
sbb
lods
sar
scas
ror
inc
lea
adc
sbb
jl
daa
data16
sbb
cs
ins
arpl
cmp
push
inc
out
dec
sub
and
outs
repnz
jg
inc
test
out
push
xchg
out
xor
jle
stc
sub
lods
imul
xchg
cmp
xor
mul
popf
jg
cmc
sub
retf
pop
and
add
call
cwde
and
or
mov
xchg
sbb
push
xchg
call
js
loope
adc
mov
fwait
jnp
sub
sbb
sub
clc
xor
dec
fwait
lods
pop
movs
jge
in
xor
lahf
adc
addr16
pop
add
mov
(bad)
stos
adc
add
xor
xor
inc
or
push
xchg
push
mov
jnp
int3
ret
cmps
(bad)
(bad)
sbb
pop
sbb
rol
loope
int3
sub
jecxz
nop
outs
jae
arpl
xor
pop
inc
push
xchg
(bad)
shr
and
and
cmp
das
sbb
shr
add
idiv
cmps
push
mov
xor
push
les
add
mov
retf
push
fild
test
test
cdq
ds
xor
test
add
fbld
lods
sub
inc
cmps
jmp
retf
jmp
ins
jle
fucom
mov
popa
arpl
ret
pop
xchg
cmp
xchg
dec
ins
xor
lods
std
loopne
add
(bad)
out
adc
mov
ror
movs
xor
jp
cmc
mov
inc
jecxz
pop
in
xchg
cmp
or
gs
movs
(bad)
xlat
out
aaa
push
int3
fs
add
push
hlt
lods
push
xchg
inc
push
jb
sbb
jno
and
in
xor
push
inc
repnz
hlt
in
or
dec
cmp
inc
imul
or
xor
xchg
sbb
repnz
dec
and
mov
push
je
mov
xchg
cs
jo
push
test
push
pop
xor
shl
daa
xchg
jle
ficom
(bad)
sub
mov
push
daa
fwait
stc
loop
repz
jnp
js
in
aas
xchg
jno
pop
shr
mov
mov
jnp
inc
loopne
add
add
movs
xchg
loop
nop
xor
in
stos
js
mul
inc
dec
shl
sahf
and
xchg
mov
es
jle
pop
add
lea
jae
push
(bad)
arpl
adc
pusha
into
dec
lahf
sbb
ret
inc
call
jl
das
(bad)
xchg
cmp
pop
cli
push
xor
cmp
mov
push
cmc
push
fdivr
das
sbb
jnp
dec
lock
in
cdq
sbb
lods
clc
xchg
mov
retf
pop
inc
pushf
pop
inc
dec
imul
xor
push
and
mov
ins
cwde
xor
add
scas
inc
inc
outs
cli
pop
stos
xchg
pop
bound
add
add
movs
stos
(bad)
loopne
mov
inc
adc
sub
out
fcom
sar
int3
minps
push
popf
cmp
ja
les
dec
fnstenv
pop
add
hlt
into
(bad)
xor
cmp
mov
jecxz
jge
fs
or
sbb
es
vprotq
sub
cld
mov
xchg
int3
xlat
jo
stc
dec
cdq
scas
or
add
je
jmp
out
and
shl
dec
cwde
inc
add
pop
div
add
push
xchg
in
inc
pop
push
push
push
push
and
inc
popaw
push
pop
ret
xchg
push
cmp
mov
jne
or
inc
mov
xor
and
adc
sahf
repz
jle
mov
mov
jns
fprem1
add
or
mov
enter
leave
retf
push
cmp
mov
outs
or
je
sbb
jmp
(bad)
sar
fimul
xor
movs
hlt
ror
sbb
fs
mov
pop
xchg
rcl
sub
jo
add
inc
push
pop
and
rcl
mov
es
sub
mov
add
dec
or
test
or
into
sub
aam
sbb
push
xchg
imul
test
out
adc
or
jno
xchg
ror
pop
mov
cwde
and
mov
push
(bad)
stc
sbb
inc
mov
(bad)
fucomip
mov
ss
aad
inc
jmp
in
mov
test
cs
cmp
ret
cmp
and
xchg
dec
cmps
sub
aad
and
cwde
icebp
and
and
xchg
js
and
xchg
call
cmp
mov
push
aas
add
adc
rcl
mov
ja
sti
fistp
retf
test
out
mov
xor
aas
cmp
mov
in
icebp
into
dec
std
push
loope
jmp
cmps
iret
xor
std
loop
aaa
and
sbb
div
cwde
jmp
mov
mov
and
les
movs
dec
sbb
hlt
mov
dec
call
test
rol
sub
pusha
aam
pop
nop
pop
sub
imul
sub
mov
fs
cmps
shl
or
or
jo
movs
sub
mov
dec
mov
and
pop
cs
inc
pop
xor
cmp
rcl
icebp
out
or
mov
xor
mov
mov
scas
outs
arpl
inc
or
scas
add
add
sti
inc
fisub
stc
cmp
xchg
cmp
adc
fsub
ins
fild
cmp
mov
repnz
popa
loope
in
dec
in
cmp
inc
dec
fisubr
jnp
jnp
dec
imul
mov
ret
mov
xor
or
shl
push
push
push
ins
in
out
bound
mov
out
js
shl
clc
or
jp
mov
add
mov
sub
jge
out
mov
mov
int
ins
mov
add
(bad)
cmp
push
push
aad
sbb
int3
sbb
xor
mov
add
push
xchg
add
xchg
sbb
inc
inc
and
push
push
mov
add
inc
dec
addr16
jl
mov
mov
push
xchg
sub
test
aas
or
je
jnp
mov
mov
add
and
retf
fmul
fldcw
ins
scas
adc
pop
jo
loop
cmp
jl
push
dec
mov
popa
inc
test
mov
scas
jne
shl
aad
xchg
sub
dec
and
out
mov
xchg
mov
repz
pop
mov
xchg
xchg
xchg
pusha
inc
fwait
ds
sbb
test
inc
sbb
push
mov
or
add
arpl
cmp
ins
mov
cs
mov
leave
push
mov
into
sbb
fcom
pop
push
sbb
sub
push
outs
cld
cwde
lods
movs
les
xchg
es
scas
mov
xor
call
mov
div
outs
stos
cmp
sub
inc
cwde
cmp
add
hlt
sbb
test
xor
cmp
inc
jg
shr
dec
loop
cwde
in
sub
mov
ins
xor
shl
popf
sub
ret
shl
jmp
shl
add
movs
fisttp
xchg
cwde
pop
sub
sbb
sub
xchg
popa
mov
std
in
loop
mov
mov
or
fnstsw
sub
jb
mov
and
mov
int3
outs
jo
sub
in
out
popa
mov
jns
ss
nop
pop
push
dec
aad
add
out
fsub
and
ret
fbstp
fsubr
pop
or
mov
cmps
lea
mov
xor
gs
inc
inc
adc
mov
rcr
xor
push
jb
stc
sub
sub
call
fldenv
fldenv
rcl
push
sbb
mov
mov
lea
cmp
stos
or
xchg
enter
push
or
dec
or
(bad)
je
call
xor
movs
mov
mov
dec
xchg
dec
movs
and
scas
mov
push
call
jmp
sbb
std
xor
sbb
xchg
fwait
call
inc
pop
adc
sub
adc
bound
jl
pcmpgtb
xlat
hlt
jns
rcr
scas
rol
mov
imul
cmp
dec
sub
jb
call
cdq
adc
sti
loopne
dec
fcomp
cmps
mov
jge
iret
sbb
pop
rcl
scas
jecxz
mov
cmps
out
cmp
mov
sbb
adc
pop
push
(bad)
loop
mov
pop
dec
jl
adc
add
pop
jns
inc
sub
pop
call
ret
cdq
leave
sbb
mov
jl
sar
mov
cwde
xor
sbb
leave
xchg
cmp
xor
pop
les
pop
mov
(bad)
cmp
nop
imul
add
adc
cmps
cmps
adc
mov
fwait
jae
bound
xor
test
lock
push
and
or
in
xchg
push
pop
and
enter
inc
push
or
push
pushf
xchg
push
fiadd
or
aaa
lds
inc
xor
movs
cmp
pop
xchg
shr
dec
cli
fld
mov
cmp
or
and
daa
imul
shl
lea
sub
pop
add
mov
es
xor
inc
mov
dec
or
ins
ror
mov
pop
inc
mov
pop
jl
dec
jmp
or
xor
(bad)
fwait
test
and
dec
sub
mov
aas
add
pop
ins
(bad)
iret
dec
daa
push
xchg
or
fist
push
daa
mov
mov
cmc
stc
xor
jo
sbb
(bad)
rcr
pushf
icebp
jp
mov
push
test
lea
sub
xor
stc
and
popf
repz
jae
jl
cmp
mov
jge
push
dec
cs
sub
lods
cli
adc
jne
mov
sub
cld
cmp
xchg
ret
stc
or
loope
lock
jp
dec
mov
sub
mov
ret
jno
rcr
mov
sbb
sub
mov
add
push
or
sub
xchg
or
mov
movs
push
push
push
dec
mov
dec
jno
inc
ja
(bad)
cdq
or
and
add
xor
inc
je
xor
pop
xor
or
dec
add
ror
mov
jne
lock
sub
push
xchg
ret
test
mov
and
sti
fwait
push
pop
xor
xchg
enter
jmp
lock
out
popa
stos
mov
cwde
sub
xchg
rol
mov
(bad)
adc
pushf
mov
ja
mov
jo
mov
je
or
xchg
xchg
xchg
je
lock
add
and
jno
inc
mov
cmps
cli
cwde
pop
adc
lea
je
pop
stos
mov
xchg
add
fild
das
cmc
shl
mov
push
sbb
mov
jp
adc
stos
repz
and
call
es
jnp
fiadd
lds
mov
mov
push
(bad)
aad
stos
fmul
cwde
adc
dec
dec
sbb
add
mov
push
std
iretw
push
mov
sub
je
adc
rcr
frstpm(287
push
mov
mov
xchg
leave
arpl
inc
fnstenv
jp
test
pop
or
dec
loop
imul
inc
xchg
xchg
popa
out
adc
imul
mov
push
rcl
sub
push
xchg
dec
fadd
mov
pusha
inc
push
and
adc
add
mov
scas
or
add
inc
xor
shl
repnz
mov
nop
and
jnp
inc
popa
ret
push
ret
mov
or
xchg
adc
jp
cs
dec
inc
pop
adc
xchg
outs
rol
adc
stos
and
pop
test
adc
or
retf
add
mov
mov
jo
outs
mov
and
fwait
test
inc
(bad)
mov
inc
mov
jae
xor
push
add
mov
es
push
(bad)
sti
jecxz
mov
sbb
dec
jmp
xchg
xor
mov
xchg
adc
push
jp
pushf
mov
aaa
dec
push
mov
loopne
cmc
pusha
lods
shl
sub
test
push
fst
xor
call
push
test
push
sbb
sbb
imul
add
or
test
cmp
dec
jmp
mov
and
jno
xchg
call
push
and
pop
int3
ins
push
out
ror
xor
and
xor
sbb
and
push
push
test
daa
call
outs
inc
xchg
mov
shl
jnp
rol
and
jno
enter
push
movs
adc
adc
push
(bad)
dec
inc
imul
ds
sub
shr
mov
adc
and
add
sub
rcr
sub
add
inc
in
adc
imul
push
or
cmp
ret
leave
xchg
test
enter
scas
add
movs
aam
dec
not
cwde
push
or
arpl
shl
mov
movs
add
inc
mov
repz
(bad)
popa
fs
cmp
jp
fmulp
jo
int3
push
mov
repz
out
jmp
mov
inc
mov
shr
inc
push
outs
shl
mov
in
adc
dec
int3
mov
lahf
es
or
scas
mov
xor
sub
jb
mov
and
lods
rcl
mov
mov
lahf
inc
mov
jecxz
out
xor
and
dec
dec
test
or
popf
and
rol
push
dec
ror
out
sbb
or
jmp
cli
test
pop
push
lahf
push
lds
cdq
mov
(bad)
jnp
fs
jl
xor
xor
dec
inc
fld
mov
and
mov
mov
mov
cld
push
test
popf
pop
es
int
stos
push
das
xchg
leave
dec
pop
test
and
cmp
in
hlt
or
inc
clc
add
mov
push
dec
jecxz
stc
pop
jg
aad
fdivr
les
adc
mov
mov
lods
mov
lods
clc
mov
xchg
(bad)
jp
and
test
icebp
inc
mov
mov
out
dec
repz
add
fmul
bound
push
cmc
dec
jge
xor
nop
test
xchg
or
sbb
test
inc
mov
or
frstor
push
inc
je
fs
jp
jmp
cmps
dec
retf
fcom
stos
mov
sub
jmp
in
(bad)
mov
mov
loopne
inc
and
sub
call
or
sti
ds
cmp
mov
inc
test
jno
test
std
inc
ja
gs
mov
xor
mov
push
ret
add
adc
data16
xchg
jne
push
fstp
mov
or
fcomp
fld
xchg
mov
pop
or
stc
push
js
add
and
jae
jb
mov
sbb
mov
fs
xchg
jmp
inc
clc
or
sub
inc
arpl
out
xor
pop
daa
cdq
push
adc
mov
inc
loopne
lods
add
arpl
movs
mov
sub
les
and
adc
in
inc
mov
cmp
sbb
clc
fstp
cmp
ss
ss
popa
adc
push
xor
push
cmp
jns
shl
inc
retf
xchg
cdq
inc
mov
inc
push
add
jmp
mov
push
mov
xchg
fld
call
cs
or
and
enter
inc
bound
mov
adc
ja
ss
and
sahf
out
mov
cli
mov
xor
nop
add
mov
mov
out
(bad)
idiv
sbb
outs
xchg
repnz
xchg
lds
jne
test
pusha
inc
test
push
adc
fsub
add
jmp
xor
pop
(bad)
popf
loop
enter
stc
cwde
fsubr
sub
inc
ficom
jg
arpl
nop
or
fwait
sbb
repnz
int
mov
cdq
sbb
add
cwde
mov
aam
inc
mov
nop
push
mov
cmp
es
call
out
es
sub
mov
sub
fidiv
and
packuswb
lea
push
mov
or
adc
adc
add
hlt
imul
idiv
popa
mov
mov
(bad)
rcl
add
mov
push
lods
xchg
hlt
std
push
test
sub
xor
push
(bad)
dec
xchg
es
dec
mov
xor
push
inc
sbb
xor
cwde
ins
mov
inc
pop
shl
pop
sub
cdq
icebp
out
pusha
fs
sub
in
dec
xor
add
shl
rol
pop
jge
out
shl
cmp
push
or
mov
ror
sub
dec
es
in
xchg
cs
xchg
in
daa
xchg
add
test
mov
xor
dec
add
add
ror
mov
mov
shr
scas
xor
sbb
and
aad
dec
push
sbb
mov
ffreep
stos
rcr
daa
and
or
pusha
das
mov
ins
mov
or
(bad)
cmc
sahf
ss
or
sbb
clc
push
int
push
outs
sub
xor
and
scas
lods
adc
ss
je
add
xor
ja
(bad)
and
cs
loop
jle
mov
cmp
and
outs
imul
ins
call
out
push
dec
cmp
push
push
sub
ins
cmp
jmp
cs
and
cmp
push
xchg
cmps
icebp
cwde
fcom
cmp
test
test
popa
mov
mov
aas
out
adc
adc
xchg
push
push
push
je
imul
imul
fsubr
fst
sbb
jo
jbe
mov
inc
jmp
adc
mov
data16
es
es
pop
add
inc
and
test
push
cmp
mov
mov
xor
jnp
adc
scas
xchg
or
sbb
inc
mov
sti
and
adc
cmp
stos
cmc
mov
(bad)
ss
pop
aad
aaa
(bad)
imul
in
xchg
aad
mov
out
pop
cmc
idiv
inc
arpl
or
add
inc
std
pop
push
inc
mov
lds
pusha
and
(bad)
jmp
cli
std
push
jnp
out
fistp
push
pop
cmc
sti
jnp
int3
push
in
enter
or
leave
xchg
arpl
mov
movs
cmc
cmps
or
pop
ins
sub
and
push
mov
aas
cs
xor
mov
js
push
mov
mov
jmp
enter
adc
(bad)
xchg
sar
push
cmp
push
push
pop
or
pop
mov
cmp
xor
xor
xor
jae
pop
adc
pop
push
ficom
xchg
pop
and
push
jp
mov
adc
fucomip
push
in
xor
ror
xor
push
push
test
push
fcmovnu
mov
pop
movs
jp
mov
xchg
dec
mov
or
dec
cmp
xchg
es
push
push
bound
push
ins
push
loop
jo
jo
mov
ss
cmc
call
mov
outs
dec
push
mov
or
cmp
out
ret
mov
retf
xlat
fild
aad
or
cwde
aad
aam
aad
mov
mov
stos
bound
fs
xor
and
fld
rol
gs
iret
out
aaa
(bad)
mov
push
xlat
shr
push
pop
jmp
xchg
mov
ins
rcl
test
out
aad
jle
arpl
(bad)
aaa
xor
jns
ds
add
mov
or
push
or
enter
add
mov
pop
push
mov
pop
ja
and
sbb
ins
xor
and
sbb
inc
fadd
sbb
std
fcomip
jg
int
mov
dec
in
xor
addr16
xor
scas
xchg
mov
sbb
mov
cmps
or
inc
jns
push
cdq
rcr
sub
loop
leave
pop
add
and
add
mov
jmp
and
cmp
push
jl
inc
div
fstp
jp
out
fisubr
mov
cmps
cmp
nop
sar
add
gs
dec
jle
mov
loopne
push
sbb
mov
movs
aaa
outs
sub
aam
stos
out
sub
xlat
adc
std
fnstsw
jnp
pop
aam
inc
mov
cmps
popa
xor
jg
lods
fild
dec
sar
stos
and
movs
call
lds
pop
enter
push
jg
in
outs
jo
xor
jbe
cmps
sub
jp
fadd
in
shl
ins
inc
jae
and
imul
es
jns
xchg
loopne
xor
repz
and
imul
inc
xchg
inc
jge
and
(bad)
push
stos
push
inc
jecxz
jle
outs
jmp
jne
adc
dec
div
(bad)
jg
out
enter
(bad)
std
aas
mul
arpl
mov
jp
push
popa
dec
test
add
dec
mov
(bad)
sub
pop
and
ins
loope
test
adc
xchg
pop
xchg
enter
dec
push
mov
inc
scas
dec
and
push
jbe
add
sahf
mov
cli
cmp
sti
jnp
lea
stos
aad
fst
mov
out
movs
add
(bad)
inc
push
push
xor
mov
(bad)
jo
loop
mov
mov
lahf
cmp
mov
or
out
push
shr
arpl
push
inc
adc
(bad)
call
outs
scas
xor
in
ds
test
or
mov
es
xor
mov
mov
adc
pusha
mov
mov
popa
xchg
cmp
aaa
ss
fiadd
outs
jo
jo
pushf
cmps
ss
adc
inc
popf
pop
dec
adc
jge
xchg
sbb
inc
xor
jo
inc
mov
mov
cwde
push
in
add
or
sti
jmp
inc
and
aam
lods
mov
(bad)
mov
push
jmp
mov
or
xlat
and
fld
movs
mov
mov
push
rcl
xchg
cmc
movs
arpl
fistp
pusha
dec
shl
adc
scas
test
pop
leave
es
xlat
sbb
call
xchg
movs
imul
xor
loopne
fst
cwde
dec
ret
ror
in
xor
pop
(bad)
add
rcl
out
xchg
sbb
xor
pop
lea
add
mov
or
mov
pusha
mov
and
hlt
outs
test
jmp
add
pop
push
ds
je
rol
lods
xor
scas
ins
jecxz
jbe
inc
test
add
aam
cs
dec
pop
mov
mov
push
lea
movs
or
cmp
ret
pop
imul
sti
push
stc
mov
xchg
xchg
push
xchg
xlat
sar
or
cwde
(bad)
sbb
cmc
mov
mov
or
dec
sbb
jne
add
aam
or
in
push
cmp
mov
mov
jns
sbb
add
cli
adc
add
or
(bad)
(bad)
or
lea
push
jbe
nop
scas
cmp
mov
cwde
vmovhps
xchg
mov
dec
fwait
sbb
ja
je
idiv
mov
or
lahf
xchg
fs
xchg
or
bound
sub
and
shr
shr
mov
inc
jp
cmp
ins
mov
scas
add
push
mov
rcr
mov
inc
scas
add
dec
or
push
test
or
inc
ins
int3
(bad)
jmp
push
add
push
lahf
scas
xchg
jmp
push
iret
and
jmp
ror
mov
arpl
sbb
push
hlt
sbb
adc
pop
xchg
adc
test
adc
scas
lods
xchg
mul
add
inc
int
aam
jle
mov
add
fld
xchg
cmp
enter
loop
push
popa
in
sub
mov
jbe
adc
fld
fiadd
loop
xlat
fisttp
xchg
push
pop
cmp
jmp
xor
or
inc
js
pusha
cmp
test
test
jae
jle
adc
jbe
push
jb
xchg
or
imul
rol
js
sub
mov
pop
inc
add
xor
cmps
adc
xchg
mov
test
mov
sbb
or
repnz
mov
stos
xchg
inc
mov
jno
push
rol
lds
and
pop
and
and
clc
(bad)
ins
mov
imul
push
vmread
pusha
add
pop
stos
sub
js
lods
cmp
mov
test
push
inc
cld
xchg
mov
xchg
add
cmp
mov
mov
fld
jbe
mov
fldcw
xor
rcr
inc
sbb
mov
add
jl
pop
and
out
mov
cmp
mov
cmp
jbe
and
jae
imul
vpshaw
pop
xchg
xor
test
add
xor
mov
data16
rol
sub
ret
shl
sbb
shr
or
adc
mov
(bad)
in
xor
dec
mov
cdq
int3
sub
inc
and
jne
stos
xchg
jnp
movs
xor
mov
cmps
mov
pop
adc
cmp
and
test
int
fs
adc
inc
add
pop
adc
or
imul
and
pop
ins
adc
cmp
repnz
ds
stc
xor
jmp
lock
pusha
pop
adc
cmps
jp
aas
inc
xor
push
out
pop
push
mov
and
dec
and
mov
out
pop
pop
push
shr
mov
test
mov
dec
or
xlat
sub
data16
dec
ja
sub
fs
jecxz
cmp
mov
shr
xor
adc
xor
jg
mov
hlt
jnp
out
arpl
bound
sub
test
mov
pop
jno
xchg
jb
ret
xor
xchg
dec
jle
mov
pop
dec
or
sbb
inc
pusha
xchg
call
xor
int3
les
xor
cmp
ja
add
or
or
push
adc
sbb
xchg
ss
ret
stos
adc
add
es
cdq
dec
lds
pop
xchg
jecxz
adc
bound
lods
sbb
xchg
xchg
push
shl
fcmovu
test
or
cmp
es
and
sub
inc
add
dec
out
or
lahf
hlt
inc
shl
dec
aas
fwait
rcr
fimul
and
sbb
adc
das
add
out
xchg
adc
xchg
cmc
xchg
dec
sub
cmp
push
dec
xchg
nop
imul
dec
dec
jo
bound
and
(bad)
push
(bad)
xor
pop
pop
les
int
pop
jp
mov
clc
xchg
dec
ret
sbb
je
push
adc
std
frstor
stos
sub
sub
and
mov
ss
cmps
jecxz
sbb
(bad)
lock
jno
movs
hlt
cli
sbb
mov
bound
or
or
mov
movs
daa
retf
mov
ret
mov
mov
dec
xchg
mov
test
sub
push
xchg
dec
mov
xchg
retf
xchg
dec
xor
push
jb
mov
shl
mov
sub
adc
or
andps
adc
mov
dec
or
adc
sub
aaa
leave
aaa
cmp
add
xor
ror
enter
add
jb
adc
adc
adc
loope
jmp
pop
or
xor
hlt
push
div
push
lahf
mov
hlt
out
not
xor
fnsave
xor
or
push
aam
sbb
rol
loop
add
call
dec
repz
das
lods
inc
xor
mov
add
or
add
sbb
pop
arpl
cmp
push
cmp
std
add
test
add
push
xchg
popf
push
test
(bad)
or
pop
ret
movs
rcr
add
and
(bad)
push
add
push
push
fadd
ror
mov
jl
or
fiadd
movs
or
mov
jb
daa
mov
aad
mov
ret
and
dec
mov
adc
mov
dec
rol
out
call
test
add
sub
xchg
ficom
adc
gs
mov
push
or
ins
inc
push
dec
mov
dec
jmp
test
cmp
or
inc
jne
out
or
adc
adc
push
clc
sbb
pop
pushf
mov
ret
push
pop
scas
sub
mov
inc
int3
lods
xor
lea
fwait
mov
out
fs
je
xor
(bad)
lods
(bad)
xchg
enter
dec
ins
mov
call
pop
sub
jo
xor
or
in
imul
lock
call
add
dec
pop
adc
adc
inc
out
pop
jbe
xor
jmp
lods
or
(bad)
aam
cmps
jp
and
aaa
mov
ret
sahf
cmp
test
mov
nop
push
pop
mov
ins
aam
push
pop
sub
in
fdiv
cmp
shl
cmp
loop
jno
cmp
sbb
int
pop
repnz
pop
arpl
loopne
ins
mov
cld
pop
inc
cmp
or
dec
aaa
sub
sub
rol
stos
daa
xchg
dec
mov
push
push
pop
rcr
xor
mov
fcom
rcr
das
test
jle
test
dec
fsubr
mov
js
xor
rcl
rcl
jb
jl
nop
push
push
cmps
pushf
push
cmps
int
and
xchg
loop
jmp
mov
inc
inc
pop
sbb
mov
push
popf
ficomp
cmp
dec
and
mov
mov
sti
cmp
mov
fsub
out
jo
sbb
leave
call
mov
cmps
mov
pop
push
int3
sbb
mov
sub
sbb
ins
xchg
inc
jne
xor
xchg
test
cmps
push
push
xchg
scas
dec
mov
pop
ret
jp
xchg
inc
jns
dec
fwait
lods
dec
or
cwde
mov
dec
cwde
mov
fmul
cmps
retf
push
sub
add
test
enter
jb
mov
xchg
scas
dec
daa
dec
push
test
fbld
psubw
xor
mov
sub
pop
jmp
call
imul
mov
pusha
cmp
inc
fsubr
sbb
and
loop
inc
pop
inc
mov
pop
push
pop
dec
fbld
and
dec
inc
adc
push
push
in
inc
push
shl
mov
xchg
push
xor
push
mov
rcr
pop
sbb
les
ret
loope
je
mov
pop
stos
fnstenv
scas
and
int3
icebp
xchg
mov
fwait
les
adc
xchg
mov
rol
cmps
test
xor
test
xor
adc
jmp
mov
add
cmp
sub
xor
fwait
or
add
add
fld
jne
ficomp
xchg
xchg
jo
stc
sbb
and
mov
add
int
je
push
jle
scas
push
sti
push
mov
rcl
pop
inc
xchg
js
pushf
dec
mov
stc
aas
push
jle
and
mov
sub
mov
inc
adc
cmps
mov
jno
or
cs
dec
pop
pop
loope
xchg
pop
dec
pop
and
xor
push
mov
xchg
data16
daa
cdq
icebp
arpl
cmps
xchg
hlt
add
or
cli
(bad)
jmp
shl
sub
or
das
dec
daa
cwde
jo
rcr
pop
or
sbb
and
bound
pop
pop
push
xor
popf
ror
or
daa
pop
jmp
ret
xchg
mov
cdq
sbb
xor
sub
pop
mov
xchg
aas
add
inc
cli
adc
test
inc
xchg
adc
ret
fsub
inc
in
int3
and
or
sub
dec
pop
mov
dec
inc
fisttp
and
movs
adc
push
fdivr
cwde
push
xchg
add
lea
cmp
pop
fxch
inc
jbe
movs
mov
daa
ret
mov
lahf
push
lds
cs
mov
ds
fbld
inc
or
imul
(bad)
and
cdq
jne
mov
cmp
mov
add
inc
push
cmp
inc
sbb
pusha
pop
push
rcr
aaa
nop
test
dec
sbb
les
mov
add
push
outs
movs
popa
sti
or
adc
push
fcom
jecxz
add
mov
add
cdq
inc
and
jne
sub
aam
mov
dec
popa
jns
or
xor
xor
xor
or
jmp
xchg
jmp
dec
fwait
inc
cmp
cmc
jecxz
and
jb
adc
add
or
jb
cmp
mov
(bad)
and
add
jne
call
mov
pop
mov
xlat
sbb
xor
outs
inc
cwde
xor
sahf
sbb
sub
push
fs
(bad)
jnp
sbb
imul
xchg
je
pop
and
lea
sbb
lods
inc
call
sbb
mov
and
daa
mov
sub
xor
and
jg
fwait
mov
jne
pop
leave
inc
push
leave
andps
les
das
or
imul
das
nop
push
and
jnp
and
jae
enter
ret
mov
or
shl
hlt
loope
ret
mov
imul
mov
xchg
and
popf
cwde
pop
ficomp
push
inc
into
dec
or
sbb
xchg
mov
mov
sub
test
ret
std
and
arpl
dec
in
aaa
add
or
cmc
or
mov
add
cmp
jno
push
pop
lods
les
cmp
xor
adc
ror
add
and
xor
fidiv
jecxz
iret
aam
mov
adc
xchg
call
mov
add
or
add
fdiv
clc
mov
and
xchg
cld
xchg
push
icebp
jb
imul
pop
xchg
cmps
xchg
out
fcom
inc
jp
mov
call
shl
ins
xchg
jp
call
and
sub
imul
adc
mov
inc
jns
mov
adc
mov
add
and
lods
(bad)
popa
les
sbb
popa
push
clc
lahf
cdq
dec
ja
and
test
imul
jne
push
rol
data16
sub
xchg
push
cmp
js
mov
or
jno
jbe
pop
out
popa
push
fld
xor
sub
(bad)
mov
dec
popa
add
cmp
jg
arpl
fld
add
pop
or
mov
pop
outs
push
mov
rcl
xor
mov
mov
push
clc
adc
retf
cmp
xor
movs
ins
or
ja
mov
out
push
adc
mov
fwait
lods
add
xchg
outs
bound
fadd
stos
push
pop
mov
nop
dec
lahf
idiv
imul
jo
ret
xchg
popa
and
mov
xor
les
add
push
test
jg
ror
sbb
lahf
adc
ret
int
fist
cli
add
sub
in
xchg
lea
sbb
icebp
(bad)
mov
jmp
add
sbb
push
es
js
scas
inc
ret
push
ficomp
push
into
adc
cmp
aaa
out
fwait
sub
test
jmp
mov
adc
pop
adc
dec
popa
jmp
int3
sub
imul
sub
xchg
test
test
or
aaa
xchg
mov
pop
imul
stc
or
shr
inc
stos
jo
push
test
xchg
lahf
ret
test
mov
sub
adc
and
stc
sub
arpl
inc
test
mov
cmps
or
lods
push
ins
mov
sti
add
mov
cmp
push
xchg
sbb
sub
pop
or
sub
pop
xchg
add
pop
adc
add
adc
or
fsub
sub
mov
add
mov
cld
int
test
dec
sbb
dec
mul
inc
pop
shr
arpl
inc
aad
xor
mov
xor
fs
mov
shl
xlat
or
bound
aaa
pop
and
sbb
inc
rol
xlat
cld
out
push
pusha
popa
mov
loope
bound
nop
sub
push
sbb
xchg
inc
or
lea
mov
aaa
in
shr
test
pop
add
inc
es
call
jmp
nop
call
pusha
push
add
or
push
sub
xchg
hlt
add
bound
xchg
push
imul
adc
rcr
mov
bound
push
mov
push
mov
lock
ins
sbb
xlat
lods
inc
lock
(bad)
test
inc
sahf
dec
cmp
or
sbb
inc
sbb
sbb
jmp
popa
scas
push
ins
push
movs
out
and
xor
or
sub
fsubr
sub
jmp
xchg
clc
inc
sub
outs
xchg
in
mov
(bad)
sub
call
inc
retf
mov
movs
in
call
clc
sub
and
lock
fwait
sub
ins
cmp
ins
pop
xchg
lea
cmp
aad
mov
sub
sbb
in
and
imul
in
sbb
shr
sbb
cmp
sub
sub
or
(bad)
daa
mov
pop
and
mov
xchg
inc
jb
or
into
cmp
mov
mov
push
out
push
cdq
jne
ds
xchg
cwde
sbb
ret
in
push
fstp
(bad)
jmp
test
or
adc
js
or
adc
fild
push
ret
xor
sti
loop
cmp
sub
mov
push
je
add
cmp
rol
dec
dec
mov
ds
mov
sbb
pop
test
(bad)
mov
pop
sbb
loope
test
lods
jmp
sub
jnp
sub
in
bound
fcom
push
jnp
mov
xchg
je
test
iret
pop
das
pushf
aam
pop
or
daa
xchg
push
js
cmp
daa
stos
sub
jnp
sbb
xchg
call
or
pop
dec
sub
push
sbb
popf
adc
and
aaa
push
hlt
add
add
adc
mov
fisubr
jecxz
adc
mov
pusha
and
stc
push
lds
dec
pop
sub
cld
addr16
lea
push
in
and
sbb
rol
xchg
popa
sbb
shl
imul
mov
push
push
mov
aad
mov
les
sbb
stos
inc
jl
ins
jle
inc
xchg
push
mov
test
fnstenv
add
mov
(bad)
cmp
inc
xor
enter
xor
dec
inc
aas
pop
sar
pop
jae
(bad)
je
xor
mov
mov
or
sub
cmc
push
xor
jbe
xor
push
and
xchg
ror
mov
cdq
pusha
jb
fstp
loopne
jmp
lds
scas
pop
fisubr
int
outs
and
movs
jp
popa
sahf
js
fild
push
sbb
inc
popf
inc
rcr
inc
pop
retf
sti
inc
sub
or
mov
or
lods
mov
add
fucom
xor
lods
add
xor
pop
stos
inc
push
outs
leave
add
lods
sahf
clc
pop
inc
xor
sbb
inc
test
js
lds
fimul
pop
cdq
sbb
fcmovbe
sub
push
cmp
adc
in
inc
jp
test
retf
es
push
cdq
icebp
jbe
movs
inc
sbb
mov
and
repnz
div
jecxz
xor
aam
and
sub
fst
movs
or
inc
(bad)
test
mov
add
popa
adc
ficomp
jnp
mov
mov
mov
hlt
push
push
cmp
jno
fisttp
mov
scas
popa
das
pusha
ins
xlat
sbb
push
fs
nop
test
jmp
(bad)
leave
retf
push
movs
and
push
imul
adc
cwde
(bad)
int3
mov
xor
or
out
xchg
mov
ins
pop
xchg
dec
loop
lock
aaa
shr
sub
inc
sbb
adc
xchg
sub
pop
mov
imul
pop
xchg
dec
mov
(bad)
gs
sbb
sub
jmp
fbld
adc
and
loopne
les
or
in
jns
xor
mov
and
mov
push
retf
cmp
das
cmp
mov
jecxz
jl
xchg
call
sbb
sub
int3
aaa
inc
sub
mov
stos
in
test
shl
xor
gs
ret
retf
fsubr
in
pop
sub
aaa
cdq
repnz
add
std
and
ins
add
and
loopne
int
adc
ja
push
daa
xor
dec
outs
mov
cwde
xchg
xchg
lods
cmps
inc
inc
(bad)
aaa
ret
je
mov
xchg
push
mov
xchg
mov
(bad)
gs
or
add
add
hlt
mov
test
push
pop
(bad)
dec
jmp
ss
adc
or
inc
cmp
fsub
adc
(bad)
push
imul
cmp
pop
add
scas
test
add
or
es
mov
jb
fisub
dec
push
in
inc
js
movs
rcl
fs
sbb
mov
mov
test
or
or
dec
mov
inc
push
xchg
in
leave
fs
xchg
je
(bad)
fst
push
loopne
jbe
bound
add
jmp
adc
mov
or
add
jno
mov
test
or
cmp
loope
or
inc
aam
shr
push
or
pushf
jbe
and
xchg
inc
mov
cli
sub
nop
out
pop
sbb
sahf
sbb
stos
add
popa
mov
in
cmp
or
cmp
je
jmp
loopne
inc
retf
cmps
in
(bad)
addr16
push
hlt
xchg
mov
xchg
sbb
pop
mov
fldenv
cmp
inc
dec
add
sbb
ret
xchg
aas
dec
and
pop
clc
and
dec
sbb
xchg
sbb
les
ja
push
add
cs
or
movs
push
xor
xlat
leave
sub
jmp
cld
call
unpckhps
ret
imul
ds
test
cdq
push
push
in
pusha
div
test
dec
jbe
rcl
mov
xor
and
xchg
into
sbb
adc
pop
js
inc
lds
push
dec
lahf
mov
dec
sbb
stc
mov
fwait
xchg
cmp
add
jg
adc
sub
fbld
pop
push
and
push
je
jno
xchg
or
cld
inc
mov
mov
add
ret
aaa
xor
add
or
stc
sub
aad
and
mov
add
add
lock
and
push
add
xchg
loope
test
add
or
test
adc
sub
or
adc
pop
pusha
fwait
adc
ins
or
and
push
(bad)
gs
ret
or
cwde
rcr
or
bound
cwde
cmp
and
pop
cld
mov
push
mov
sub
test
cmp
pop
dec
mov
popf
enter
pop
and
mov
xchg
and
in
das
jae
xor
mov
je
mov
inc
inc
mov
dec
imul
bound
jecxz
mov
test
sub
imul
in
popf
fs
movs
push
hlt
popa
and
js
leave
and
(bad)
adc
retf
in
push
stos
sub
pop
les
pop
pop
faddp
push
add
mov
xchg
dec
xchg
xchg
lahf
cmp
mov
jecxz
loope
dec
repnz
sub
test
adc
sub
jp
jl
mov
fild
in
imul
mov
and
dec
pop
shl
in
lods
add
mov
inc
mov
(bad)
pop
mov
lea
ins
adc
fs
and
gs
cmp
mov
mov
lods
in
cmp
inc
mov
xchg
or
sub
test
sbb
or
test
push
loop
mov
retf
rol
mov
xor
(bad)
or
add
push
iret
and
lahf
dec
out
mov
in
adc
cmp
and
sbb
aam
loop
enter
jo
and
adc
or
cwde
xor
lods
ret
xor
sub
inc
mov
test
cmp
das
sub
ja
fistp
loopne
sbb
cmp
ins
pop
pop
leave
popa
lea
add
and
pusha
les
inc
cmps
jmp
xchg
enter
and
or
add
jmp
movs
cdq
les
stos
and
ins
jl
jle
scas
or
mov
int
dec
sahf
lock
or
inc
ja
pop
iret
in
push
xchg
and
out
cmp
(bad)
or
dec
loop
cmp
sbb
cld
add
(bad)
xchg
xchg
jno
mov
sbb
in
jge
hlt
mov
adc
cmp
xchg
movs
mov
dec
add
adc
add
out
inc
or
xchg
jl
lock
pop
pop
mov
adc
cmps
out
mov
call
aad
rol
and
inc
pop
mov
adc
add
dec
adc
or
jmp
out
test
xor
pop
movs
mov
pop
fcmovbe
(bad)
adc
out
enter
jo
ret
movs
stos
and
mov
and
push
pop
or
dec
adc
mov
jno
nop
or
inc
xchg
sbb
mov
iret
cmc
fadd
lahf
(bad)
leave
xchg
push
add
push
mov
fisttp
cmp
sub
sub
push
test
dec
and
icebp
xor
pop
(bad)
cmp
out
inc
mov
pop
push
pop
dec
(bad)
sub
mov
js
imul
and
cmp
push
jo
dec
xchg
aad
in
popf
movs
or
test
mov
mov
loope
pop
into
add
sbb
out
fisubr
loope
je
movs
jbe
rol
sbb
call
adc
mov
dec
and
stos
xor
and
lock
call
jp
xchg
add
inc
(bad)
and
mov
sub
mov
xor
retf
push
cdq
sbb
sbb
scas
mov
scas
adc
cmp
fadd
mov
jo
push
mov
test
mov
xor
jae
aad
aam
push
mov
sbb
mov
pop
ds
mov
and
adc
retf
cwde
std
int
pop
xchg
xchg
js
add
pop
lahf
mov
sub
inc
leave
sbb
je
and
xor
mov
aam
adc
adc
pop
mov
adc
dec
inc
gs
or
xor
iret
ins
xor
imul
pop
push
cmp
test
nop
and
jbe
cdq
pop
repz
fnstenv
push
in
mov
and
bound
sub
jo
int3
xchg
or
jg
retf
push
lods
push
bound
add
pop
cmps
icebp
mov
lds
repz
call
mov
xchg
lods
or
daa
les
sahf
add
inc
ret
cwde
fs
push
or
inc
ins
or
leave
ret
add
mov
test
stos
mov
call
leave
leave
test
sub
cwde
sbb
js
mov
jno
test
push
and
test
xor
outs
cmps
adc
xacquire
sbb
imul
popf
or
adc
cmp
or
outs
xlat
push
xor
fisttp
popa
or
cmp
bound
xchg
xor
xor
fs
pop
push
shr
xor
out
cs
cli
mov
push
mov
sbb
mov
hlt
imul
push
xchg
mov
and
jns
jo
add
and
inc
add
cmps
shl
and
dec
adc
push
nop
imul
cmp
pusha
sub
sub
sbb
popf
(bad)
hlt
mov
push
mov
jmp
and
pop
outs
lahf
cmp
loop
test
mov
shl
xor
sub
pop
ror
enter
fldcw
bound
adc
dec
mov
xor
mov
pop
jecxz
jmp
adc
or
imul
or
mov
push
sbb
test
inc
inc
push
mov
in
push
cli
push
mov
xor
sub
shr
jb
jns
mov
sbb
es
hlt
sub
fdiv
cmp
add
repz
sub
jbe
sbb
loope
(bad)
int3
cmp
adc
stos
sbb
ins
xchg
jno
loopne
ret
push
enter
in
and
ficomp
xor
push
push
mov
pop
test
lods
pop
test
fst
test
add
push
aas
push
fsub
not
cmp
ret
xor
je
sbb
inc
dec
pop
dec
sub
push
push
xor
test
jg
popf
pop
push
push
sub
mul
mov
pop
and
in
das
push
dec
lds
cmp
sub
mov
addr16
aam
or
push
inc
or
retf
xchg
aaa
adc
and
dec
fs
fdiv
int3
test
and
xchg
add
add
icebp
or
leave
jmp
dec
test
and
loope
out
shr
sti
add
rcl
push
or
mov
pop
rcr
mov
call
arpl
pop
aaa
and
mov
xchg
pop
mov
cwde
fwait
mov
xchg
and
sbb
dec
dec
stos
sbb
or
sbb
xchg
in
aad
test
push
and
adc
add
loopne
in
je
mov
sub
mov
adc
xor
push
or
pop
loope
xor
sti
adc
or
adc
sbb
pop
fidivr
retf
mul
sub
sub
outs
cmp
pop
retf
out
push
cwde
in
sbb
test
push
aas
movs
sub
jle
movs
pushf
mov
push
inc
adc
xchg
xchg
jp
push
shl
mov
addr16
jb
gs
and
or
adc
aam
in
push
loope
or
push
imul
push
cmp
sub
sub
cmp
mov
inc
inc
pop
mov
xchg
adc
adc
inc
or
xor
daa
fs
test
adc
ret
jge
mov
nop
inc
arpl
lock
xchg
js
bound
dec
add
test
sti
retf
cmp
and
lahf
push
stos
sbb
test
mov
and
aaa
pusha
sbb
add
adc
jbe
repnz
xchg
and
mov
mov
ror
add
xchg
pop
leave
mov
fs
jp
test
in
sbb
xchg
int3
sbb
scas
mov
or
rcl
xor
bound
dec
inc
jno
loopne
lock
(bad)
cmc
and
or
inc
addr16
add
shl
(bad)
cmp
cmp
test
mov
cs
and
or
rol
shl
sub
cmp
aaa
sub
icebp
lods
bound
out
push
push
push
jmp
mov
xchg
adc
cmp
leave
fcomp
adc
test
push
push
dec
lea
adc
xchg
scas
stos
push
out
xor
sub
fs
or
movs
cs
or
push
xor
jno
inc
fsub
cmp
pop
adc
mov
lahf
addr16
inc
push
mov
movs
jo
cmp
cmps
call
jno
hlt
fisub
push
add
loope
add
ret
jo
mov
xor
xchg
push
sub
pop
mov
(bad)
adc
jmp
and
lods
cmp
mov
test
mov
mov
mov
fcomi
test
shl
mov
lock
push
mov
leave
mov
ret
xchg
cli
dec
(bad)
retf
outs
icebp
je
inc
cmps
and
jne
cmp
inc
mov
or
(bad)
lea
jg
push
jbe
test
(bad)
mov
pop
scas
loop
sub
mov
jle
adc
popa
mulps
ret
std
push
lock
mov
loope
and
jne
repz
mov
retf
popf
and
test
jmp
stos
mov
lahf
data16
xor
add
bnd
cmp
inc
or
ins
xor
xor
or
ret
movs
aam
jno
cmp
ret
xor
cmp
push
cmps
outs
add
nop
out
push
ret
jno
or
dec
or
jg
sub
movs
gs
cwde
dec
mov
mov
enter
adc
das
jae
pop
cmp
add
dec
add
mov
push
dec
fdivr
neg
in
xchg
sbb
mov
ja
push
es
imul
push
adc
retf
retf
push
or
or
or
enter
aam
rol
call
loopne
xchg
lods
or
mov
mov
inc
jmp
lods
(bad)
(bad)
popa
movs
adc
enter
mov
jns
xchg
mov
in
gs
test
xor
pop
jbe
retf
jle
xor
or
movs
jb
ds
jle
xor
push
sti
sbb
popa
dec
xchg
rcl
and
daa
push
cmp
adc
mov
cmp
inc
add
outs
mov
bound
jnp
popa
inc
daa
imul
xor
enter
mov
inc
sub
imul
(bad)
jge
(bad)
and
sahf
rcr
leave
mov
mov
xchg
push
jge
outs
cld
and
nop
inc
in
cld
push
xchg
add
mov
rol
pop
cmp
push
jmp
add
push
pop
add
mov
mov
mov
pusha
sbb
cmc
nop
cmpxchg
push
jmp
xor
xchg
jl
scas
jae
sub
lods
or
inc
cmps
das
(bad)
add
pop
enter
cmp
or
add
enter
mov
xor
out
call
sub
xor
inc
leave
sbb
repz
fmul
int3
enter
sar
push
test
sub
xchg
out
and
pop
lahf
retf
and
cmp
call
dec
sub
xor
mov
jnp
and
mov
jecxz
sub
xchg
cmp
cmp
add
out
pop
xor
rol
jmp
push
dec
push
pop
enter
cmp
pop
sbb
xchg
xor
es
push
in
shl
fld
int
add
test
jb
mov
adc
into
or
jg
clc
sbb
(bad)
xchg
sar
stos
or
stos
jnp
icebp
lock
mov
cmovp
pop
(bad)
mov
or
add
fiadd
mov
pop
pop
sub
sbb
xor
mov
outs
(bad)
enter
dec
adc
mul
mov
sbb
(bad)
mov
out
cdq
shl
out
sub
mov
adc
mov
in
push
call
mov
sbb
ficom
jbe
pop
xchg
stos
or
enter
call
push
sbb
hlt
fcomip
pop
xlat
(bad)
fnstcw
mov
and
div
fild
sub
fxch
inc
dec
inc
in
dec
ss
rcr
and
or
mov
xchg
add
adc
adc
mov
and
mov
(bad)
das
add
pop
xchg
leave
sbb
dec
rol
adc
movs
ror
xchg
enter
push
test
xchg
je
fiadd
mov
inc
pop
and
and
jmp
stos
sub
sbb
cli
ficom
and
fadd
sbb
es
adc
xchg
pop
add
fmul
call
pop
shl
or
jne
rcl
inc
xor
xchg
xchg
push
xchg
add
jne
push
jno
and
cmp
sbb
xchg
stc
adc
and
outs
push
call
icebp
jl
push
or
push
stos
adc
dec
xchg
add
add
push
xor
scas
push
mov
sub
lods
adc
cwde
push
sub
mov
retf
or
add
sub
cli
mov
in
mov
sbb
js
mov
xor
or
sbb
fs
fdiv
add
movs
rcr
mov
dec
cmp
hlt
retf
add
cmc
inc
xchg
sbb
push
inc
dec
enter
and
mov
mov
movs
addr16
dec
test
movs
inc
fistp
push
or
dec
or
sub
and
mov
or
dec
inc
sub
jb
imul
dec
lea
cmp
test
popa
jns
push
mov
mov
ss
test
les
push
ror
mov
dec
xchg
cld
pop
mov
jne
out
cwde
mov
inc
ins
fabs
stos
xor
add
jg
pop
push
stos
push
push
mov
and
sub
mov
xchg
sbb
push
and
xchg
dec
cmp
pop
ja
cmc
xchg
aas
push
inc
je
xchg
(bad)
les
fst
shl
and
pop
es
loop
xor
or
jmp
cmp
in
adc
xchg
loopne
sub
push
xor
sbb
xchg
retf
pop
sub
mov
mov
xchg
push
mov
push
fsub
sbb
mov
xchg
cmp
inc
popf
push
push
leave
dec
movs
iret
xchg
push
xchg
lods
jmp
(bad)
icebp
mov
loope
out
jmp
inc
pop
xor
xchg
test
and
jl
push
mov
int3
pop
or
adc
pop
lock
jb
sbb
jno
movs
sub
push
push
or
and
sbb
ja
xlat
push
inc
xchg
nop
stos
xchg
int3
inc
mov
adc
repnz
bound
test
mov
xchg
mov
pop
xor
inc
les
fwait
adc
mov
inc
add
dec
ret
sub
cmp
lea
popa
mov
mov
dec
xchg
dec
inc
push
lds
cmp
or
dec
adc
and
stc
and
scas
movs
xchg
fcmovne
xchg
nop
int3
jbe
pop
pusha
sub
or
or
xor
fcomp
add
retf
or
scas
adc
adc
or
dec
movs
std
call
clc
cmp
mov
loope
push
cdq
xchg
push
lahf
mov
sub
jge
int3
jle
fidivr
and
pop
adc
adc
shl
cli
inc
dec
mov
sub
mov
dec
bnd
add
scas
or
push
cmp
jmp
and
add
ror
sbb
(bad)
into
mov
ds
(bad)
imul
lahf
mov
mov
push
xor
fdiv
mov
push
push
pusha
sbb
adc
mov
loop
and
add
and
nop
jbe
and
mov
jge
inc
inc
cli
mov
adc
pop
call
sbb
ror
test
sub
loop
sbb
scas
cmp
cmp
dec
repz
sbb
or
retf
mov
js
les
(bad)
add
and
dec
pushf
and
pop
push
pop
int
and
sbb
cs
sbb
inc
int
mov
xchg
adc
add
mov
xchg
xchg
pop
push
or
push
dec
xchg
(bad)
mov
fisttp
mov
push
push
cwde
cs
inc
enter
mov
jne
imul
mov
push
loop
fimul
inc
and
push
(bad)
adc
pop
and
sub
or
call
loope
sbb
out
imul
fmul
pop
es
inc
test
jb
jge
jl
test
mov
xchg
sbb
push
mov
xchg
adc
jb
xchg
or
inc
data16
inc
test
sub
jp
stc
dec
popa
jl
sub
fmul
cmp
aam
or
test
adc
inc
sbb
inc
xor
fxch
pop
test
xchg
or
mov
jne
dec
movs
adc
add
movs
dec
shr
cmp
mov
ja
and
adc
inc
jle
shr
jl
xor
rol
ins
cmp
fcom
jecxz
inc
cmp
jmp
push
ins
test
push
retf
add
sub
push
jg
mov
or
ins
cmp
es
rcr
ror
xchg
xor
mov
retf
xchg
add
(bad)
and
imul
xchg
popf
ja
ss
adc
pop
mov
sub
shr
cmps
jmp
leave
ret
pop
adc
loop
inc
push
imul
or
xchg
mov
inc
pop
mov
out
mov
push
fmul
inc
and
(bad)
push
sahf
adc
icebp
test
nop
xor
mov
vmaxps
push
push
jnp
call
imul
sbb
pusha
xor
pop
add
sti
sub
push
pop
lea
add
and
jbe
or
sub
push
js
mov
mov
push
dec
jmp
cmp
movs
cmp
es
adc
xor
shl
push
ds
sbb
fcomp
add
(bad)
movs
pushf
mov
xchg
jle
ins
bound
push
cmp
inc
xchg
xor
iret
sbb
push
cmp
fs
jnp
inc
(bad)
adc
jns
add
(bad)
fisubr
rcr
jp
lods
xchg
pop
(bad)
arpl
or
cmp
adc
pop
xor
mov
xchg
push
mov
jmp
xor
mov
gs
adc
lds
adc
fs
dec
inc
push
pop
(bad)
sbb
push
xor
cmp
rcl
mov
lahf
add
sub
(bad)
pop
xchg
xchg
or
pop
mov
ret
mov
cmps
in
dec
dec
adc
fs
push
or
addr16
cmp
pop
dec
(bad)
sbb
mov
push
mov
push
movs
jno
or
pushf
push
arpl
cmps
and
inc
push
or
adc
rcl
sbb
lea
call
shl
cmp
(bad)
int3
and
mov
mov
add
loope
adc
mov
(bad)
push
or
es
jge
pushf
and
(bad)
(bad)
aam
jb
jno
call
xor
data16
lods
addr16
inc
and
fnstenv
mov
outs
cmp
cli
inc
in
cs
sub
xchg
fadd
add
xchg
push
sbb
sub
test
retf
icebp
inc
aaa
pop
aam
fcomp
sti
xor
inc
out
fwait
sar
(bad)
push
mov
or
add
jmp
mov
aam
adc
jmp
inc
retf
jge
dec
idiv
cmc
dec
popa
and
adc
in
jmp
mov
cmp
enter
frstor
adc
imul
leave
mov
cmp
xor
cmp
ret
jne
mov
jmp
or
pushf
outs
jmp
outs
xor
pusha
xor
mov
mov
mov
(bad)
push
punpcklbw
ret
xor
push
shl
aam
jge
imul
(bad)
pop
cmps
rsqrtps
daa
mov
loopne
add
sub
adc
lods
loope
xor
dec
inc
push
jle
sbb
popa
xchg
sub
sub
sbb
imul
out
jmp
mov
rcr
pop
inc
imul
lea
xchg
inc
push
adc
and
adc
leave
adc
mov
sbb
push
cmp
into
or
arpl
jno
and
xor
jbe
cmps
inc
xchg
xlat
or
and
shl
sub
addr16
lods
fadd
adc
xchg
out
out
xchg
sar
jnp
jo
mov
ret
stc
mov
jecxz
fcomip
jns
iret
and
cmc
push
pop
pusha
call
(bad)
add
and
mov
xor
cmp
pop
sbb
push
inc
sbb
and
pop
sub
mov
dec
imul
jbe
inc
push
xor
dec
ret
xor
das
loope
(bad)
das
cmp
shl
inc
popa
int3
mov
xor
push
cmp
or
jecxz
xlat
cdq
adc
cmp
cld
(bad)
loopne
aad
addr16
sbb
dec
leave
retf
lds
jmp
sbb
mov
xor
es
pop
inc
xchg
dec
in
fmul
xor
mov
adc
xor
pop
xchg
sahf
rcr
cmp
hlt
stos
or
add
ret
xchg
call
mov
cld
ret
shl
popa
mov
fcom
int
stos
cwde
mov
mov
popa
fcmovbe
sub
push
retf
iret
lahf
jl
or
xchg
sub
stos
(bad)
sar
retf
call
out
pushf
xor
xor
and
ret
clc
(bad)
sti
(bad)
shl
sahf
jp
test
or
pop
pop
and
loopne
ins
and
mov
jno
and
dec
xor
ret
or
div
pop
fistp
add
rol
xchg
xchg
scas
int3
lods
int3
push
and
inc
push
pop
shr
sub
inc
call
iret
or
add
sbb
and
test
pushw
dec
repz
pop
push
sbb
sub
pop
xor
retf
lods
in
adc
lods
cld
loopne
cmp
ret
mov
aad
pop
cmp
jecxz
imul
mov
sbb
xchg
popa
sub
inc
mov
xor
or
(bad)
ret
or
(bad)
(bad)
sbb
or
inc
xor
mov
mov
mov
xlat
ja
jge
adc
ins
in
aam
jbe
outs
push
rcr
sbb
xchg
(bad)
(bad)
pop
dec
xor
adc
lock
scas
mov
das
cmp
inc
iret
sub
loope
dec
inc
dec
inc
xor
in
test
mov
add
stc
inc
loope
in
mov
pop
mov
push
test
dec
or
mov
inc
push
push
loop
push
sub
in
or
cmc
xor
add
(bad)
imul
cwde
mov
lods
aam
bound
adc
ja
pop
test
or
cmp
loopne
xor
es
test
ret
imul
cmp
test
into
hlt
push
in
xlat
pop
sbb
scas
pop
xchg
inc
aas
inc
xor
outs
sar
test
sub
lock
sbb
popa
sahf
jg
pop
in
and
retf
shr
mov
jns
add
or
rcr
sbb
inc
sub
cmp
jp
inc
adc
sbb
or
xchg
retf
mov
sbb
les
in
pop
fcomp
in
add
aam
out
pop
popa
lods
mov
or
mov
adc
mov
sahf
xor
or
clc
or
xchg
xor
fcom
pop
pop
js
dec
push
push
cmp
fimul
lods
enter
add
pop
cmp
push
sub
mov
scas
test
push
cmps
sbb
xor
in
push
mov
dec
xor
mov
xor
and
jecxz
adc
test
mov
jne
ja
and
(bad)
or
std
enter
xor
xchg
sub
mov
aad
cmp
shl
jbe
iret
dec
push
mov
cwde
mov
mov
out
jmp
mov
mov
inc
mov
mov
xlat
and
fwait
jg
shl
sub
inc
xchg
jmp
and
aaa
in
xor
mov
mov
push
shl
(bad)
enter
enter
xlat
mov
jle
mov
ret
xor
xchg
xlat
mov
stos
addr16
or
test
xchg
idiv
xchg
(bad)
inc
outs
fbstp
sbb
addr16
data16
cwde
lea
lock
cmps
fnsave
cmp
lock
test
mov
push
and
or
inc
aam
lea
or
ds
es
outs
cdq
cmps
popa
jns
mov
out
das
fisub
mov
fnstenv
jbe
cmp
xchg
cmp
pusha
push
pop
xlat
mov
movs
sbb
cmps
dec
iret
jb
(bad)
cdq
imul
and
add
leave
imul
stc
mov
icebp
das
xor
aam
push
bound
test
adc
js
inc
jl
(bad)
fsub
lock
inc
cs
gs
mov
(bad)
loop
inc
jge
aam
sbb
aam
fdiv
ror
sbb
add
dec
add
xchg
out
pop
es
xchg
or
es
push
xchg
xor
ds
and
jbe
test
lock
xchg
fchs
add
pop
jns
inc
scas
fld
lea
call
sub
sbb
xchg
and
jae
mov
xor
retw
sbb
pop
movs
popa
jp
xchg
(bad)
xor
jge
in
mov
sub
pop
and
xor
or
shl
cmp
dec
inc
mov
or
mov
xchg
jle
cli
ss
xor
adc
pusha
iret
sbb
cmp
push
or
inc
push
mov
ret
loopne
dec
call
outs
ret
mov
sub
jb
ror
repz
loop
out
xchg
imul
sub
xchg
mov
shl
xchg
outs
push
jb
pop
mov
loopne
test
jnp
pop
mov
icebp
xchg
cli
add
jbe
loope
ret
daa
push
jge
in
push
int3
in
pop
pushf
xor
in
cmc
fchs
pop
ret
ss
iret
jecxz
mov
xchg
ins
or
imul
cmc
push
cmp
fldcw
gs
fcomp
sub
mov
jne
cmp
sub
mov
clc
popa
retf
mov
out
push
fwait
fwait
add
cmps
xlat
jmp
into
idiv
fisttp
mov
mov
dec
push
fwait
std
rcr
rol
mov
mov
fdivr
out
xor
mov
popa
retf
les
adc
movs
popa
mov
cmp
sub
xchg
ins
mov
ins
mov
(bad)
lods
cwde
cdq
push
outs
xor
sub
enter
mov
sub
ins
push
mov
sbb
mov
into
test
iret
xor
lods
push
ftst
adc
mov
out
mov
cmp
mov
and
mov
cdq
pop
mov
or
ret
inc
pusha
cmp
pop
xchg
mov
gs
test
stos
outs
cmps
push
mov
aaa
pop
idiv
mov
sbb
es
in
sbb
pop
out
mov
ds
addr16
xchg
lods
stos
mov
inc
cmps
and
in
mov
mov
mov
add
leave
data16
rcr
popf
mov
int3
or
dec
es
dec
cmp
fadd
lds
sbb
cmp
idiv
enter
dec
jl
mov
shl
fwait
pop
(bad)
(bad)
gs
ret
retf
mov
dec
(bad)
ins
cmp
fld
jge
mov
ins
or
sub
sub
fs
cmps
popf
push
add
int
repnz
fist
loope
adc
add
and
nop
lods
enter
xchg
jo
in
and
sbb
sbb
push
ror
sbb
mov
mov
xor
cmp
bound
push
pop
xchg
(bad)
bound
imul
dec
add
adc
int3
gs
ja
xlat
mov
stos
lds
push
outs
fisttp
xor
out
push
pop
jmp
inc
mov
pushf
enter
mov
cs
outs
mov
lock
test
xchg
mov
adc
cwde
lahf
retf
icebp
mov
mov
xor
sub
sbb
xchg
test
cli
dec
(bad)
mov
loopne
xor
je
sbb
rcl
or
jmp
mov
sbb
cmp
xchg
xor
xor
frstor
jo
and
sbb
mov
loop
cmp
pop
push
push
mov
jae
sbb
sub
inc
cdq
xchg
sbb
mov
pop
mov
mov
pushf
(bad)
pop
add
arpl
popa
fmul
inc
mov
mov
ins
pop
shl
ds
adc
jl
cdq
mov
or
mov
sbb
xchg
jge
addr16
hlt
jl
xchg
mov
xchg
or
in
inc
xor
jo
xchg
int
mov
mov
sbb
add
mov
push
fldcw
sbb
push
sub
cmp
gs
lods
inc
iret
ret
sbb
sbb
push
(bad)
or
mov
xor
cmp
sub
sub
pusha
jns
and
imul
pop
xor
cmovle
ja
int
mov
je
data16
es
pop
and
(bad)
pop
aas
stos
mov
(bad)
mov
cdq
inc
aad
dec
cmc
ins
xchg
mov
(bad)
fadd
lahf
int
push
jo
cs
outs
fmul
jnp
mov
pop
sub
retf
or
fild
loop
mov
dec
in
and
add
xchg
jge
hlt
jnp
lods
push
jne
add
ins
js
packssdw
push
push
sub
sub
jnp
stos
push
or
stos
push
mov
sbb
scas
call
xchg
sub
fwait
xchg
jge
mov
popf
mov
aad
adc
mov
stos
fld
inc
sub
cmc
dec
xor
xor
fldenv
ins
jno
sbb
mov
sbb
fldl2e
mov
jae
repnz
lods
arpl
movs
sbb
fisttp
imul
mov
xchg
mov
aad
scas
fcomp
xchg
fst
inc
ins
mov
sbb
mov
in
mov
mov
cmps
fsub
icebp
sbb
bound
sbb
xor
pop
fmul
cld
sub
(bad)
(bad)
mov
fist
cdq
repnz
repnz
imul
xchg
sbb
mov
fcomp
dec
stos
lock
js
out
sti
loop
fistp
fisttp
dec
ins
aaa
mov
xchg
scas
mov
push
mov
mov
mov
dec
mov
nop
pop
pusha
push
add
imul
ror
sub
mov
lods
sbb
fstp
xor
xchg
mov
(bad)
push
ins
cdq
lea
test
and
xlat
rcl
fwait
xchg
push
mov
in
mov
sbb
jb
shr
ja
inc
lea
into
or
xor
mov
out
popf
in
imul
out
outs
push
sti
in
inc
mov
push
(bad)
cmps
lds
dec
cmp
xor
sahf
jmp
mov
jmp
lock
push
cmps
pushf
push
in
pop
daa
jb
xor
out
pop
lahf
or
push
or
lea
stos
sbb
mov
shr
imul
(bad)
fcomp
cmc
mov
mov
mov
shl
out
std
dec
ret
scas
cmp
mov
enter
lods
pop
cs
sub
dec
shl
in
inc
ss
outs
push
jns
test
test
ss
mov
fdiv
shl
je
cmps
add
clc
push
pusha
fcomp
movs
outs
shl
movs
mov
in
aas
xorps
sbb
pop
dec
xchg
mov
std
outs
xor
mov
adc
loope
mov
out
ss
xchg
test
dec
loop
cmp
jno
(bad)
in
sbb
jg
pop
addr16
jnp
inc
and
inc
ins
push
sub
stos
pushf
enter
jns
jbe
aas
xchg
xor
cld
jg
or
out
sub
mov
push
bound
fwait
sub
out
mov
js
push
add
jmp
push
ret
pop
ins
jne
fldcw
fld
cli
stos
mov
sbb
sub
and
js
ins
add
aad
xor
add
popa
pushf
mov
mov
shr
sbb
inc
adc
adc
adc
out
dec
lock
daa
shr
xchg
sti
jae
loop
inc
jne
into
pop
(bad)
ret
stc
outs
std
jb
stos
int3
test
fdiv
(bad)
fidiv
push
dec
inc
scas
(bad)
sub
test
retf
cmps
sti
mov
pop
pop
arpl
mov
pop
and
xchg
inc
movs
sub
dec
(bad)
cmp
push
ins
mov
imul
sub
ja
and
jmp
and
adc
push
mov
ret
cld
cld
out
in
aas
clc
cmp
clc
loopne
mov
sub
mov
adc
jmp
sub
arpl
or
xchg
xchg
dec
adc
sbb
push
inc
ins
mov
sahf
or
out
gs
and
fsubr
(bad)
jmp
mov
test
fmul
out
jle
outs
push
mov
and
sub
push
into
int
mov
mov
xchg
jl
sbb
sbb
dec
and
mov
fldcw
ja
jb
lds
sbb
addr16
stos
pop
push
(bad)
rol
sbb
pop
add
and
or
xor
add
dec
int
repz
int3
adc
cmp
or
sbb
push
adc
scas
jno
fild
cmc
retf
push
(bad)
mov
je
inc
in
push
shl
(bad)
test
jle
test
mov
stos
xor
ja
mov
lods
mov
mov
pop
in
xchg
fstp
pop
shl
cs
movs
dec
test
lods
ins
(bad)
(bad)
sbb
lods
adc
xchg
sub
adc
adc
shl
cld
mov
xchg
ins
pop
pop
xor
inc
iret
and
jno
jp
(bad)
push
sahf
and
loope
cli
or
push
xchg
cmp
jae
or
dec
(bad)
jmp
enter
retf
arpl
fsub
cdq
push
les
(bad)
repnz
pop
sahf
es
mov
dec
adc
ss
test
call
push
retf
xor
add
lea
imul
or
dec
movs
adc
jle
jg
(bad)
mov
pop
in
xchg
repnz
jmp
fwait
mov
dec
js
jno
leave
imul
or
push
adc
jp
push
call
add
mov
mov
mov
ins
(bad)
push
xchg
dec
jp
jmp
call
push
xchg
call
ins
popf
mov
pop
movs
xchg
lea
mov
sub
cmp
retf
jge
cmp
mov
fwait
popf
fs
pop
mov
fmulp
(bad)
sti
popa
xor
push
aam
fcmovnb
pop
adc
mov
fsubr
addr16
push
mov
fild
sbb
xchg
push
clc
add
pop
jp
dec
sub
and
cli
pop
mov
scas
sub
push
xchg
test
or
out
fcom
daa
pusha
inc
add
jle
dec
adc
mov
jns
cmp
dec
or
inc
pop
aad
or
xchg
and
stos
jo
scas
es
outs
push
xchg
dec
ins
in
jo
pop
jns
iret
dec
mov
mov
sti
ins
(bad)
xchg
sub
repnz
sbb
loope
push
retf
mov
retf
inc
xor
add
mov
cmp
retf
add
and
cli
push
stc
pop
mov
outs
fmul
inc
mov
jle
out
xchg
adc
lahf
adc
cmp
dec
mov
mov
xchg
xchg
or
mov
aam
push
jno
pushf
dec
adc
cmc
popf
rcr
jmp
clc
sub
mov
ffree
pop
mov
or
mov
inc
ficom
jmp
xchg
ds
pop
int
or
stos
int3
shl
fnstcw
ins
popf
into
pop
xlat
cmp
mov
and
add
in
cli
movs
jg
cdq
add
jge
les
movs
fwait
jge
push
jns
inc
inc
mov
and
add
jmp
in
(bad)
lea
jnp
scas
push
out
cmp
inc
jo
pop
fcomp
xchg
pop
lock
and
fld
xor
add
mov
jmp
or
xor
or
arpl
mov
jge
sbb
inc
mov
enter
rol
xchg
adc
sub
popa
int3
xor
adc
dec
ret
int
jp
dec
mov
ins
pop
jmp
out
jmp
adc
ss
mov
cmp
mov
push
or
lock
sbb
inc
sub
mov
and
(bad)
jg
hlt
sbb
sub
xor
xchg
clc
shl
jge
ss
aad
loop
mov
std
push
and
sbb
xchg
out
push
outs
out
outs
jge
out
jbe
outs
cmps
push
inc
out
mov
pusha
and
fs
mov
adc
test
ins
stos
rol
aaa
jp
rcl
aaa
or
out
add
adc
repz
jge
dec
mov
push
adc
mov
dec
pop
ror
fadd
dec
rcl
test
pusha
jb
mov
gs
ds
mov
fisubr
jbe
mov
mov
or
adc
inc
stos
sbb
mov
mov
jbe
mov
pusha
iret
les
xor
xchg
pop
nop
push
popa
(bad)
mov
cmp
jno
xlat
fwait
add
pop
and
sub
push
jo
aad
das
xchg
adc
add
add
ins
ret
enter
jmp
shr
out
push
push
xchg
jge
push
add
shr
fidiv
ret
mov
mov
in
mov
in
lds
fstp
mov
out
and
cmp
mov
push
add
push
xor
push
fisub
fcomp
clc
ins
aas
fwait
cmp
dec
lock
les
(bad)
cmc
stos
xchg
outs
clc
mov
daa
cmp
popa
mov
adc
pop
and
fisubr
cmp
inc
(bad)
dec
mov
xor
sbb
xchg
jb
cmp
pop
mov
or
in
lods
cli
aad
outs
push
push
or
dec
pusha
shl
xchg
xchg
mov
ja
adc
dec
cmps
dec
sbb
lea
shl
movs
ins
fisttp
add
(bad)
pop
xor
push
mov
push
fisubr
xor
push
cmp
mov
cmp
sbb
add
cmp
xor
mov
add
stos
xchg
shl
mov
ins
ja
lods
xor
xchg
(bad)
lea
icebp
ficomp
inc
inc
stos
popa
xchg
mov
mov
retf
stos
cmp
jo
and
outs
mov
jb
mov
stos
xor
mov
xlat
sub
pop
or
and
aad
dec
stos
sub
add
(bad)
xlat
call
jmp
push
mov
inc
push
in
icebp
mov
pusha
in
lods
scas
bound
sbb
leave
leave
stos
or
aam
fidiv
retf
mov
mov
xor
push
out
popf
jecxz
lock
repnz
ins
mov
add
sub
cmp
add
jmp
jae
mov
inc
adc
or
fstp
and
pop
test
xor
xlat
jle
gs
mov
mov
mov
sbb
ror
inc
nop
mov
loop
neg
imul
adc
push
fmul
in
fs
cmp
push
cdq
loope
xchg
arpl
jecxz
lods
and
or
shr
inc
ficom
mov
retf
js
rol
scas
sub
mov
shr
add
xchg
xlat
sbb
shl
movaps
sub
shr
mov
icebp
daa
shufps
fdiv
push
mov
nop
ret
dec
lock
ss
add
sbb
popf
cmps
and
retf
out
in
cmp
shr
xchg
mov
rcl
add
mov
loope
dec
addr16
out
rcr
sub
movlps
enter
push
xchg
sbb
sub
or
push
dec
add
dec
and
xlat
into
or
push
jecxz
add
dec
lahf
fdiv
dec
push
lods
lds
mov
movs
popf
fbstp
pop
adc
sbb
(bad)
repnz
or
gs
retf
jecxz
stos
cmp
adc
or
(bad)
sub
aad
gs
pop
gs
cmp
and
scas
(bad)
sub
or
stc
lods
sbb
fs
nop
outs
push
pusha
or
aam
and
xchg
and
and
cmc
stc
das
sbb
mov
cmp
mov
pop
xchg
mov
inc
xor
cmp
lahf
icebp
mov
call
imul
jle
fld
jno
lahf
mov
pop
(bad)
mov
jp
push
dec
ins
mov
aaa
les
mov
sub
scas
ja
adc
sub
ret
or
inc
sbb
leave
mov
cmp
ja
mov
push
xor
add
xor
push
and
push
lahf
into
sub
sbb
cmp
sub
inc
and
fisub
nop
shl
xchg
pushw
xchg
out
data16
add
(bad)
mov
pop
test
inc
pop
sub
je
push
(bad)
or
mov
sti
sub
mov
rcl
inc
nop
inc
mov
or
push
test
fdivr
repnz
pop
xchg
xor
jmp
inc
add
aam
rol
daa
sbb
cwde
out
inc
scas
lods
jnp
xor
cmp
rcr
imul
push
fscale
stos
cmp
cli
js
cmp
xor
sbb
or
inc
dec
adc
add
sbb
inc
xor
inc
(bad)
and
inc
addr16
lods
dec
xchg
xchg
sbb
outs
cdq
pop
push
push
addr16
sbb
fsub
and
adc
neg
mov
add
xchg
inc
jno
pusha
mov
jne
int3
or
out
int3
in
daa
mov
ins
jnp
push
pop
into
push
loopne
mov
mov
cmps
xchg
inc
repnz
pop
push
outs
and
push
add
jl
adc
jae
push
lods
loope
loop
xchg
mov
sbb
les
rcl
mov
sahf
jmp
xchg
jge
enter
sub
jne
jae
lea
sub
or
(bad)
les
or
imul
adc
jp
pusha
int3
cwde
xchg
int3
and
out
mov
push
xor
mov
nop
pushf
xchg
bnd
inc
mov
popa
inc
enter
xor
daa
ror
jb
sbb
js
imul
lds
push
xchg
mov
jne
and
scas
mov
xor
cmp
movs
jbe
add
addps
aaa
pushf
retf
pop
jle
ret
xor
mov
xor
sub
neg
pop
add
mov
push
mov
aad
xchg
ror
pushf
mov
add
inc
rol
mov
xchg
(bad)
shl
sbb
adc
push
scas
adc
mov
mov
imul
and
inc
push
adc
imul
sbb
aaa
adc
pop
movs
and
addr16
jl
xchg
add
pop
ins
mov
in
rcr
inc
xchg
add
popf
or
mov
(bad)
push
ret
scas
(bad)
cs
call
scas
outs
jb
sub
sbb
dec
pop
jae
mov
push
fisubr
shl
nop
fstp
sbb
dec
(bad)
push
xor
in
push
jp
cmp
adc
inc
push
xchg
push
push
(bad)
pop
pop
into
pop
sub
(bad)
outs
xchg
popf
shr
shl
popf
jmp
cwde
imul
xchg
hlt
scas
(bad)
retf
scas
add
pop
add
leave
inc
loopne
xchg
add
push
loope
cmp
icebp
xor
cmp
int
jae
mov
mov
(bad)
sbb
cmp
jns
into
ret
push
jo
pop
push
push
xor
push
call
xchg
sub
cmps
mov
pop
je
pushf
out
sub
mov
adc
push
add
push
push
rol
pop
(bad)
and
sbb
mov
icebp
dec
nop
add
or
sub
outs
ror
jns
std
in
cdq
loop
test
mov
sub
add
xor
sub
repz
push
sub
int
jmp
fwait
cmp
cs
out
dec
into
and
bnd
pushf
cmps
(bad)
jmp
sbb
movs
cwde
les
fs
and
and
xor
xchg
xchg
inc
hlt
dec
jl
mov
aaa
popa
mov
pop
adc
or
or
push
push
and
sub
jno
inc
pop
cmp
or
mov
pop
mov
lea
fidiv
and
inc
fs
add
cmp
xchg
retf
push
or
xchg
cmps
xchg
iret
loope
dec
retf
jno
cmp
stos
aam
mov
das
shl
sub
or
adc
mov
repz
add
lds
pushf
pusha
in
lods
sahf
sar
cmp
aam
fldenv
and
call
and
popf
or
adc
mov
outs
push
retf
mov
mov
das
icebp
fidiv
out
or
pop
sbb
xor
push
ficom
push
and
jmp
push
pop
mov
inc
cmp
and
int3
adc
pusha
sub
(bad)
jle
cld
cmps
cmp
stos
dec
sti
int
adc
push
aas
ror
mov
ss
and
sub
mov
ins
int3
rcl
sub
pushf
dec
(bad)
jecxz
xchg
adc
sahf
in
pop
leave
hlt
and
mov
mov
aaa
cmp
push
sbb
xchg
and
lock
add
(bad)
cdq
stos
pop
mov
xchg
xor
mov
sbb
add
cmp
sbb
push
add
popa
sti
sub
sub
mov
div
clc
adc
out
dec
lock
mov
jl
jp
sub
nop
jecxz
out
adc
lds
mov
mov
and
loopne
clc
cmp
movs
fistp
not
ja
sti
movs
and
mov
cdq
ds
xchg
push
push
aas
shl
lock
lahf
or
fsubr
sbb
retf
jno
mov
popf
or
loop
add
and
and
stos
xchg
or
js
sahf
xchg
scas
jecxz
or
jp
jo
push
daa
dec
imul
aas
mov
movs
mov
call
mov
mov
in
outs
jns
mov
push
push
cmp
rcr
inc
xchg
or
inc
xor
stc
dec
dec
xor
scas
xchg
mov
sbb
sbb
dec
push
add
push
cmp
mov
retf
daa
jmp
(bad)
shl
add
jo
icebp
sub
mov
add
iret
sub
dec
(bad)
in
iret
jle
addr16
loop
mov
pop
in
test
mov
and
fnstenv
(bad)
retf
icebp
and
pop
lea
xchg
lahf
add
(bad)
mov
push
mov
dec
out
ins
ficom
add
mov
daa
loop
out
shl
idiv
add
cmp
iret
sub
add
sbb
add
lds
mov
imul
inc
and
in
fadd
xchg
xchg
nop
out
jae
push
mov
xchg
mov
xchg
ds
rol
add
mov
xor
jl
mov
lods
jnp
mov
aaa
fwait
jne
test
jbe
mov
mov
push
test
xchg
loope
ret
add
pop
ror
stos
pop
mov
mov
cmp
sbb
(bad)
and
dec
pop
daa
int
arpl
jmp
lods
mov
test
ror
xor
outs
sahf
test
inc
xor
or
cdq
adc
xchg
pop
test
mov
lahf
bound
and
movs
fadd
shl
xchg
xchg
mov
push
cwde
or
xlat
jg
repz
fs
xchg
std
repz
call
mul
aam
shl
cmp
and
push
shl
add
xchg
sbb
xchg
dec
ret
sbb
mov
ins
inc
fwait
or
pop
push
lahf
pop
inc
sbb
mov
sbb
ret
stc
lock
in
and
add
fst
push
in
loop
daa
adc
xor
inc
fucomp
sbb
mov
push
mov
js
popf
mov
pop
ins
push
xor
dec
fwait
xchg
std
push
xchg
and
test
mov
fst
fisttp
mov
repnz
(bad)
rcl
inc
push
push
lahf
retf
mov
stos
mov
icebp
sbb
rcl
das
lahf
cld
and
ins
(bad)
pop
sub
push
stos
add
sbb
mov
mov
adc
or
dec
adc
jns
inc
mov
aas
in
inc
jp
adc
or
push
or
sbb
and
mov
loopne
dec
or
mov
lea
fst
sub
mov
int3
pop
mov
dec
adc
mov
cld
lahf
jg
stc
cld
int
in
dec
(bad)
std
pop
stc
retf
neg
xchg
pop
jecxz
fst
adc
xchg
jecxz
fiadd
movs
lea
retf
push
fld
lahf
pop
aam
mov
call
movs
in
push
repnz
sub
ds
cs
and
add
or
out
and
jb
dec
dec
inc
test
mov
into
pushf
rol
ror
push
into
stc
or
inc
push
jl
xlat
mov
jle
xor
stos
mov
rcr
cmps
mov
dec
shr
test
mov
add
(bad)
bound
scas
fisub
lock
leave
push
fsubr
cld
and
or
pop
xchg
ret
push
mov
rol
mov
movs
lea
sbb
cmp
add
cdq
shr
mov
jmp
mov
jno
add
add
shl
enter
fwait
test
arpl
fistp
inc
push
jmp
test
push
or
mov
push
retf
call
mov
repnz
(bad)
cld
lock
mov
push
je
repz
lds
cwde
clc
lods
jl
aas
jle
adc
dec
add
push
movs
adc
sub
cwde
adc
dec
(bad)
rcl
mov
push
and
mov
loope
dec
mov
retf
sbb
mov
dec
adc
cmp
pop
add
daa
imul
aas
xor
xchg
jl
cld
lea
scas
xor
xchg
lods
int
cmp
xchg
leave
jecxz
jl
rol
ret
push
ja
mov
out
cld
cld
push
jle
xchg
ja
fnstcw
sbb
aas
sub
cmp
cs
cmp
test
push
aas
mov
push
xor
jmp
adc
cli
fcmovnbe
iret
in
xchg
out
shr
push
sbb
inc
into
sub
adc
fidiv
push
sub
mov
retf
inc
mov
sbb
pop
sub
inc
push
push
imul
pop
cmp
mov
movs
pop
add
outs
(bad)
dec
cmp
dec
xor
stos
push
mov
inc
inc
dec
adc
shr
or
cmp
pop
movs
(bad)
int
mov
mov
pop
loop
pop
dec
push
out
jmp
stos
jle
cmp
imul
div
lods
cmp
pop
jge
pop
sbb
mov
adc
(bad)
ja
sbb
pop
fmul
sbb
jo
mov
inc
into
sub
sub
popf
sub
pusha
adc
jne
sbb
xchg
into
xchg
add
and
xchg
fiadd
popa
(bad)
jae
lods
cdq
stos
pop
fwait
pop
xchg
fist
sub
stc
loop
push
dec
xor
xor
out
outs
shr
inc
repz
pop
jno
sub
fistp
retf
mov
jmp
cdq
mov
mov
jbe
and
push
es
xchg
das
ret
cli
cmp
ins
inc
cs
jmp
xchg
add
sub
pop
xchg
mov
ret
push
inc
retf
mov
iret
jne
or
hlt
mov
addr16
ror
into
out
and
das
pop
enter
and
enter
mov
fistp
loop
jecxz
or
cmps
fcomp
lock
pop
xchg
data16
out
sub
fs
sub
xchg
inc
cmp
cmp
inc
cmp
mov
jg
mov
hlt
sahf
(bad)
fdivr
sub
cmp
pop
inc
fcmovne
out
cld
and
test
dec
outs
idiv
mov
data16
aas
daa
fldenv
cmc
(bad)
xchg
es
mov
scas
push
and
int
lods
add
jp
adc
add
mov
cdq
pusha
push
shr
and
leave
sbb
push
test
pop
das
mov
ins
adc
cmp
scas
add
push
inc
jo
ins
mov
cwde
mov
fld
push
repnz
fs
fcomip
mov
xor
int3
pop
hlt
fisub
outs
pop
(bad)
sub
loope
outs
sahf
fs
out
cmp
(bad)
pop
sbb
je
mov
ins
adc
call
inc
cmp
test
mov
nop
adc
xor
mov
adc
mov
pop
movs
aam
mov
sub
aaa
cmps
push
jo
loope
or
push
or
push
jmp
cwde
sub
icebp
clc
pop
lods
adc
mov
sub
call
lahf
das
jge
fdivr
pop
cli
lods
sbb
in
mov
xor
cmps
ficom
pop
mov
repz
mov
loope
pop
fdivr
xchg
pop
sub
bound
or
xchg
ins
adc
iret
in
outs
frstor
dec
lods
mov
iret
test
dec
and
test
lock
and
mov
aad
leave
jp
inc
cmp
mov
jle
sub
hlt
add
xchg
rol
pop
sub
in
sbb
in
mov
jge
aam
aaa
mov
daa
lahf
cmp
repz
loop
(bad)
loope
lahf
xchg
or
pop
push
xchg
sub
ins
pusha
lahf
add
es
fwait
jecxz
ss
ja
sbb
leave
or
rol
lahf
cmc
and
fmul
inc
aam
sub
aaa
xor
add
pop
dec
gs
inc
cmp
or
repz
adc
jno
cmp
mov
fs
inc
dec
add
sub
add
cmps
inc
mov
sub
in
push
(bad)
xor
and
add
xchg
(bad)
jl
push
leave
xlat
or
leave
daa
jecxz
in
xchg
imul
loope
pop
sti
ins
pushf
int
mov
push
xchg
pop
or
ins
pop
cmps
xchg
mov
lock
ja
inc
(bad)
and
stc
adc
cmps
xchg
xchg
int3
xor
nop
pop
call
mov
icebp
outs
cmp
pop
movs
mov
cmp
retf
enter
push
das
xchg
jmp
mov
push
xchg
or
js
dec
mov
pop
mov
jl
pop
xor
xchg
sub
adc
dec
jb
test
xchg
dec
bound
cdq
inc
push
mov
bound
jmp
mov
fistp
iret
repz
stc
retf
repz
cs
leave
ret
pop
mov
cmp
fs
arpl
push
int3
adc
int
in
pop
(bad)
loopne
fld
or
dec
inc
jecxz
arpl
or
ja
push
sar
lds
pop
mov
jp
or
cwde
mov
cmp
fnstsw
sbb
(bad)
nop
sbb
pop
test
add
push
test
movs
jp
dec
or
or
and
push
xchg
xchg
in
add
mov
fcom
mov
push
data16
pop
je
clc
stc
clc
pop
ds
in
repz
out
clc
ficomp
jge
xchg
out
jg
cwde
pop
stc
mov
jg
cld
bound
das
push
data16
jmp
push
outs
sti
fdivrp
out
pop
sub
jecxz
mov
fdiv
movs
(bad)
sar
(bad)
fst
xor
adc
pxor
mov
xchg
mov
inc
pop
sbb
int3
fnstsw
mov
call
and
adc
sbb
add
jne
add
adc
pusha
xchg
sbb
daa
sahf
xchg
mov
push
sbb
scas
sub
add
and
es
iret
aas
cmp
pop
int3
ret
(bad)
mov
push
int3
out
repz
sub
add
mov
sar
mov
pop
rcl
loope
call
jno
inc
jae
push
xchg
mov
add
loopne
dec
out
sbb
pop
cli
(bad)
neg
jno
test
aaa
push
cmps
out
pop
mov
pusha
cs
jp
push
retf
sbb
je
dec
das
aam
jg
jbe
pop
mov
sub
sar
cmp
fs
mov
and
mov
jl
sbb
pop
mov
fisub
dec
or
inc
xchg
mov
leave
xchg
imul
mov
dec
(bad)
out
jg
leave
mov
xchg
out
mov
jmp
std
jmp
iret
les
into
in
xlat
mov
jns
out
shr
mov
pop
(bad)
loopne
dec
mov
sti
or
mov
call
and
in
retf
adc
popf
cwde
pop
aas
jnp
ror
jmp
cli
aad
push
sbb
movs
arpl
shr
lock
mov
icebp
out
out
in
pop
mov
pop
mov
fdivr
rol
mov
jnp
das
xor
mov
fild
pop
xor
out
ja
pop
data16
(bad)
and
sbb
adc
(bad)
and
mov
mov
xor
icebp
pop
cs
pop
dec
in
push
enter
sar
div
jns
jl
ret
(bad)
xor
inc
enter
inc
push
mov
add
sub
xor
int3
dec
jae
pop
jg
and
(bad)
aas
inc
dec
xchg
gs
out
out
(bad)
or
mov
jl
and
mov
into
popf
cmp
jae
idiv
cld
push
mov
(bad)
fidivr
sbb
and
mov
inc
fs
inc
sbb
jbe
mov
leave
leave
mov
std
fnstsw
std
hlt
(bad)
jp
pop
dec
std
adc
push
nop
push
jp
test
push
test
ret
push
pop
adc
inc
cmps
fs
fld
mov
or
cmovge
daa
or
retf
jae
xor
repz
jno
mov
mov
xchg
cmc
jmp
into
xor
jge
(bad)
inc
mov
jg
repz
cmp
push
(bad)
cld
int3
xchg
lods
aaa
sub
scas
(bad)
loope
pop
sti
outs
(bad)
aad
std
jo
sbb
cdq
xchg
dec
in
fstp
nop
popa
xchg
lea
sbb
fsubr
daa
mov
cld
in
ficom
aas
or
sbb
fsubr
mov
cdq
(bad)
mov
jl
lock
(bad)
jo
call
aam
outs
and
adc
test
arpl
dec
jmp
jmp
jecxz
outs
cmp
loopne
aaa
push
jl
sar
mov
xlat
jg
jno
fisttp
lock
mov
shr
outs
ffree
bound
mov
pop
(bad)
mov
cmp
arpl
sti
fadd
(bad)
stc
jl
dec
shr
sub
add
mov
loopne
xor
leave
aam
jg
cdq
std
in
push
sahf
js
icebp
pop
pop
int3
test
jl
mov
scas
fsub
xor
sub
je
enter
jo
and
lea
dec
mov
dec
xchg
push
stos
mov
out
mov
fcomp
cmps
imul
jns
out
daa
mov
pop
shl
cwde
xor
pop
jmp
mov
neg
ret
cdq
jge
out
sbb
not
sahf
xchg
hlt
out
dec
out
cmp
sti
(bad)
js
cmp
cld
or
jbe
rcl
int3
das
pop
jl
sbb
jno
neg
into
dec
cmp
pop
es
xlat
cdq
aam
push
jbe
dec
push
imul
out
iret
push
repz
dec
mov
jae
mov
push
adc
or
fdiv
call
cld
jmp
and
je
dec
(bad)
and
test
add
or
movs
dec
retf
sbb
cld
fidivr
ja
xor
jecxz
xchg
movs
sbb
fs
faddp
enter
outs
fdivr
fdiv
sti
into
mov
(bad)
pop
fdivr
into
icebp
sbb
mov
std
leave
fidivr
out
jge
clc
icebp
ja
sti
cwde
(bad)
ds
push
ja
jle
sbb
adc
mov
inc
in
inc
add
jge
(bad)
repz
mov
lds
cdq
cmp
cmp
jp
loope
test
push
cmp
idiv
das
or
mov
fadd
dec
jne
(bad)
adc
xlat
sub
cmp
sbb
das
lods
mov
enter
dec
enter
loopne
mov
cli
or
jne
cmp
js
sbb
test
sahf
sbb
arpl
(bad)
jg
div
(bad)
stos
dec
pushf
out
(bad)
dec
dec
sbb
js
mov
cli
retf
mov
adc
(bad)
cmp
in
arpl
or
add
cmp
lds
inc
sti
xor
sbb
jo
jecxz
loop
push
repz
xlat
stc
repz
(bad)
int3
jmp
into
scas
mov
adc
ror
jp
sub
popf
neg
inc
iret
sub
fadd
ret
and
cs
cld
jo
inc
arpl
in
sbb
sbb
adc
out
ja
adc
mov
mov
xor
retf
cwde
clc
and
mov
popf
sti
mov
xor
int
les
jbe
cmp
loope
mov
pop
int3
mov
fistp
popf
das
sub
push
xchg
ins
nop
xor
xor
enter
pop
sub
out
cmp
(bad)
xor
fucomip
cld
cli
fisttp
ss
push
aas
pop
cmp
iret
adc
mov
int
cli
adc
lock
aas
cli
call
sbb
call
xchg
adc
mov
mov
shr
and
retf
shl
call
xor
jge
fs
cli
cwde
push
jp
dec
neg
lds
aas
mov
push
pop
jle
addr16
ret
scas
cmps
push
je
mov
popa
data16
add
jae
jp
add
xchg
loop
pop
cs
ja
repz
cdq
ja
lds
dec
mov
cmps
and
fldenv
push
into
jl
mov
iret
or
call
pop
pop
mov
hlt
fnstcw
sub
mov
and
jo
rcl
pop
lahf
cdq
cmp
clc
cmp
jnp
stc
out
mov
mov
dec
ds
scas
(bad)
mov
mov
fdivr
jl
fld
les
jecxz
das
jle
fsubr
adc
pop
push
je
das
dec
adc
cmps
cmovnp
cmps
push
repz
(bad)
mov
std
inc
out
mov
data16
sahf
push
cmp
scas
into
(bad)
mov
jge
hlt
repnz
iret
sbb
ror
cmp
sbb
fs
jbe
add
and
cld
ret
enter
pop
adc
dec
es
cwde
push
jp
mov
not
inc
cld
jo
add
les
fld
mov
push
cld
in
shl
cmp
inc
icebp
sbb
neg
pause
out
sbb
mov
imul
outs
cmp
rcl
ret
sbb
cwde
and
add
out
(bad)
lock
jg
cdq
lahf
pop
int3
fistp
push
pop
repz
jle
into
addr16
xor
mov
push
dec
(bad)
cmp
and
out
bound
cmp
fmul
xor
jge
cwde
lldt
mov
push
sub
push
je
jae
sbb
cmc
(bad)
ror
shl
cs
ja
(bad)
repnz
paddusw
(bad)
sti
pop
fnsave
xor
or
pop
shr
(bad)
hlt
xor
jl
mov
fst
fcomip
stos
mov
out
jle
mov
dec
es
add
repz
int3
pop
jmp
jmp
cld
lods
outs
mov
int3
cmp
push
mov
shl
xchg
or
mov
mov
mov
imul
pop
sbb
aam
cld
ret
xor
daa
(bad)
ror
jl
stc
cld
(bad)
into
mov
cmc
cmp
fstp
out
jl
pop
int3
clc
mov
mov
movs
lds
neg
cmps
cld
repnz
dec
dec
fs
sti
adc
lods
es
lds
bound
cs
into
(bad)
fisubr
cli
mov
cdq
fistp
mov
inc
or
repz
test
mov
or
daa
pop
enter
test
and
imul
sbb
cmp
scas
mov
push
xchg
fcomp
sub
dec
dec
aaa
jo
stos
(bad)
hlt
fistp
lock
cli
dec
mov
pop
jl
pop
icebp
sub
sbb
aas
sub
jecxz
jns
sar
xchg
loop
(bad)
fistp
(bad)
sti
out
sar
ds
or
xchg
int3
inc
idiv
mov
mov
fldlg2
and
jle
dec
call
or
fbstp
ret
clc
xchg
fistp
mov
push
(bad)
outs
(bad)
xchg
ja
int3
or
aam
xor
in
movs
push
xlat
ds
adc
cmp
mov
dec
xchg
or
add
adc
in
add
pop
loope
and
xor
jo
test
pop
mov
(bad)
jle
dec
jecxz
cmp
out
das
je
cld
dec
push
fnstsw
push
fs
add
xchg
repz
add
div
icebp
jb
loope
(bad)
cmp
jl
leave
adc
les
repz
scas
mov
clc
ins
aam
add
call
xor
inc
mov
imul
or
jb
xchg
fstp
inc
retf
inc
or
add
cmp
sub
add
fbstp
repz
gs
(bad)
int
xor
(bad)
mov
repnz
clc
out
mov
retf
push
fmul
inc
loopne
popa
jbe
adc
cdq
pop
jns
adc
pop
shl
(bad)
push
pop
ja
repz
out
das
jle
xor
imul
leave
mov
out
mov
pop
ds
movs
cmc
jno
int
jge
enter
fdivr
js
cmp
sbb
rcl
sbb
out
rcr
mov
fld
rcr
dec
sahf
imul
cdq
push
jecxz
pop
stos
(bad)
nop
pop
dec
fistp
xor
jbe
mov
call
mov
fistp
popf
or
mov
pushf
xor
adc
loope
add
stc
cmp
test
mov
out
jle
int3
jmp
jl
push
adc
daa
dec
xor
out
sub
xchg
cmps
and
jne
xchg
je
sub
mov
jge
dec
mov
pop
dec
push
push
mov
dec
dec
in
mov
inc
xchg
imul
cld
inc
cwde
lods
ret
cmc
adc
inc
pop
scas
inc
mov
das
std
cmovbe
out
xor
pop
mov
enter
or
push
shr
test
sbb
mov
mov
lds
movs
or
pop
cwde
xchg
inc
add
push
push
stc
leave
and
pop
into
pop
ds
cli
mov
push
jl
mov
sar
lea
push
or
pop
pop
mov
(bad)
jge
stc
and
jo
xor
test
stc
or
inc
xor
shl
sar
adc
adc
or
xchg
sbb
(bad)
and
sub
(bad)
or
call
or
or
lea
into
cmps
mov
clc
fisubr
leave
stos
popf
int
cwde
inc
pusha
add
and
sub
cli
jo
scas
bound
stos
add
ret
sub
addr16
jnp
cli
leave
dec
push
mov
imul
neg
dec
jl
cli
popw
xchg
add
push
fist
inc
outs
nop
int3
adc
inc
xor
or
inc
mov
popa
js
or
mov
push
rol
dec
xor
xchg
popa
sbb
or
inc
fs
jne
pop
pop
xchg
xor
or
mov
arpl
xchg
fs
mov
(bad)
or
sub
inc
pusha
retf
cmp
or
and
loop
bound
fcomp
fnstenv
xchg
in
aaa
clc
jmp
sbb
ret
jns
sti
retf
pop
add
mov
xor
or
mov
cwde
hlt
mov
adc
call
xchg
cmp
call
pop
adc
ror
sub
sub
adc
jo
adc
ret
adc
or
ret
push
xchg
movs
jne
sub
cmp
push
xor
inc
dec
nop
mov
dec
inc
gs
pushf
add
fs
xchg
jo
mov
adc
mov
inc
mov
jae
mov
xor
cmc
test
fnsave
mov
cld
(bad)
jle
mov
imul
mov
pop
scas
int
aas
cli
cwde
int3
pop
int
cmp
mov
lods
pop
sbb
jb
xchg
push
mov
adc
pusha
loope
inc
xor
movs
cli
mov
ret
repnz
daa
adc
cmovs
rcl
daa
inc
fld
movs
mov
adc
sbb
pop
dec
pop
ss
dec
xor
or
dec
inc
xor
and
xor
adc
add
xor
dec
mov
movs
je
mov
repz
aad
pushf
int
lods
out
lods
in
mov
or
pop
test
cmp
push
xlat
inc
push
jle
push
les
addr16
cmp
and
xchg
dec
dec
lods
xor
jne
call
cmc
iret
xchg
and
dec
ss
or
sbb
inc
jl
ret
mov
ret
cwde
cmp
lods
sbb
add
mov
sub
mov
adc
push
adc
dec
call
push
push
aam
sbb
jle
es
pop
and
xchg
inc
mov
push
(bad)
(bad)
mov
mov
call
(bad)
in
outs
jl
(bad)
jb
aas
ins
or
adc
and
test
ret
mov
sub
stos
lock
sub
ret
mov
and
pop
nop
pop
int
pop
mov
ror
fs
ret
sub
xchg
shr
loopne
adc
xor
mov
jge
pop
hlt
cdq
xor
fild
push
(bad)
in
push
shl
sbb
cmp
outs
and
ja
pusha
xor
in
sahf
and
rcl
rcr
cli
xchg
pop
xchg
pop
aam
(bad)
sti
jl
into
in
lea
or
and
add
jmp
mov
loop
xor
mov
xchg
aad
sar
adc
dec
push
xor
loope
loope
ret
ret
fs
pop
call
in
inc
retf
fld
adc
adc
and
mov
adc
js
aad
cdq
pop
pusha
cdq
inc
sbb
div
pop
dec
mov
adc
pop
adc
and
mov
(bad)
mov
jmp
sahf
call
out
mov
push
jmp
pop
std
push
sbb
adc
jg
dec
(bad)
test
les
xor
in
sbb
mov
cmps
xchg
int3
ror
test
sub
mov
sub
and
cwde
cmc
add
(bad)
sbb
pop
ins
cmps
in
ins
mov
pop
dec
lods
scas
cli
call
jp
sbb
jmp
xchg
or
ins
push
mov
cmp
ins
dec
daa
or
jmp
xlat
mov
out
in
ds
in
ret
xchg
push
sub
xchg
adc
and
xchg
and
and
cmc
ret
aas
jns
addr16
pop
jge
mov
int
ds
cmc
jg
into
fcom
inc
fnstenv
jp
int
fimul
fwait
pop
or
mov
sbb
mov
test
jne
test
mov
das
stos
inc
and
repnz
push
js
push
sub
test
daa
cmps
sbb
shl
xrelease
push
pop
jg
and
push
inc
mov
inc
ins
(bad)
fdiv
rcl
xchg
jae
push
push
mov
into
pop
or
data16
out
sbb
stos
rcl
popa
xor
div
popf
xchg
adc
dec
ror
pop
in
je
aaa
adc
adc
push
xchg
lahf
sbb
mov
or
mov
daa
(bad)
adc
dec
add
adc
pop
pop
pop
add
loop
fs
mov
aad
dec
pop
xchg
adc
ds
je
add
mov
mov
adc
mov
call
inc
inc
icebp
sbb
mov
nop
xor
mov
inc
push
and
jge
sti
retf
in
or
mov
repz
jg
mov
sti
fstp
xlat
xchg
nop
inc
inc
add
test
sub
inc
(bad)
hlt
pop
loop
in
inc
push
(bad)
cmp
aaa
push
je
and
jge
sbb
xor
sar
xchg
sbb
(bad)
mov
add
jnp
mov
pop
mov
push
sub
sub
ds
int3
sub
loopne
cmp
cwde
mov
inc
jl
rcr
repnz
fisttp
sub
mov
movs
sub
jmp
daa
pop
sti
pop
pop
xchg
in
in
ins
daa
loope
std
mov
scas
rcl
pop
jne
es
sbb
push
lods
mov
cld
movs
adc
arpl
sub
push
jg
aam
cmp
fcomp
loope
sub
scas
pushf
call
xchg
aad
xchg
jno
in
int3
adc
dec
inc
inc
push
stc
scas
mov
jo
or
or
ret
or
rcl
mov
fild
test
mul
inc
inc
ins
cmps
pop
stos
and
aam
sbb
fnsave
ret
mov
xchg
pop
push
das
mov
test
adc
inc
std
and
cmp
cwde
shr
sub
pop
in
xor
sub
xchg
xor
or
outs
fld
inc
pop
call
dec
out
push
data16
(bad)
cmp
mov
jae
repz
adc
adc
adc
es
adc
inc
rol
in
das
je
nop
std
mov
sub
call
mov
add
sbb
loope
inc
int
ss
xor
cmp
mov
xchg
add
aam
inc
cmp
(bad)
hlt
aam
and
dec
retf
cmp
addr16
je
pop
pop
in
sub
sub
pop
sub
cwde
sar
xchg
in
cmp
daa
cmp
aas
sti
aaa
in
or
sbb
cs
iret
loopne
bound
(bad)
pop
xor
in
pop
inc
add
or
sti
pusha
mov
call
cmp
mov
arpl
cmp
gs
add
jge
xor
or
inc
sub
sbb
mov
add
sub
add
mov
sar
and
mov
adc
inc
cmp
ins
xchg
cwde
cmp
cli
ins
jmp
add
push
sub
push
cmp
lahf
push
(bad)
cld
loop
out
arpl
sbb
push
xchg
mov
dec
add
mov
cld
jnp
call
lahf
std
mov
push
retf
repnz
je
lds
and
enter
add
xor
ror
mov
pop
js
repnz
mov
mov
cmp
xor
(bad)
in
int
bound
ss
in
xchg
mov
mov
nop
sub
and
gs
hlt
les
sub
sbb
fiadd
ins
adc
xchg
repz
(bad)
fdivr
cmp
adc
mov
ja
cmp
inc
(bad)
mov
ins
(bad)
push
or
aaa
add
xchg
inc
or
cmp
nop
mov
lea
ins
push
out
xlat
sar
add
sahf
aaa
xor
(bad)
(bad)
and
xor
push
inc
mov
les
outs
ret
lock
jnp
fs
out
int3
push
push
ret
mov
push
add
xor
adc
add
shl
jns
and
gs
xor
push
movs
inc
(bad)
retf
cmps
data16
xor
(bad)
mov
sti
lds
fs
aaa
cmp
and
jmp
xor
xchg
and
dec
(bad)
lahf
mov
adc
stos
sub
adc
dec
push
(bad)
std
dec
loopne
(bad)
xor
push
cmp
mov
imul
xor
jb
js
ds
inc
dec
shr
test
bound
sub
mov
nop
xchg
jmp
sub
jecxz
dec
cmp
or
mov
or
xor
cmp
push
xor
cli
jae
retf
inc
(bad)
ins
into
and
sbb
and
stc
inc
adc
enter
test
data16
lds
jo
mov
mov
add
(bad)
shl
pushf
outs
in
ja
repz
push
jno
pop
mov
jo
sbb
lods
xchg
sbb
cdq
stc
(bad)
aam
lock
out
neg
sbb
movs
ficom
(bad)
pop
xchg
add
retf
inc
add
iret
pop
(bad)
pop
loopne
int
and
mov
mov
xlat
cwde
xor
xchg
clc
cmp
(bad)
fld
ins
int3
iret
inc
nop
out
loopne
arpl
inc
inc
pop
push
popf
sbb
xchg
sbb
mov
rcl
pushf
or
adc
mov
fstp
sbb
push
inc
ret
stos
ins
dec
call
xchg
lea
sbb
and
pop
xor
jo
inc
inc
sub
aam
fldln2
pushf
mov
inc
sub
push
sbb
int3
pop
mov
sbb
inc
call
mul
bound
mov
push
xchg
or
jg
sub
shl
jecxz
aam
idiv
jno
jae
dec
mov
lock
scas
push
and
mov
mov
mov
stos
pop
dec
push
inc
and
retf
jb
rcr
ins
test
ds
mov
mov
push
mov
std
xchg
jmp
add
out
cmps
push
jl
jge
mov
add
fldcw
xor
jmp
cs
fidivr
std
dec
push
aam
adc
shr
dec
mov
into
pushf
outs
pushf
out
loope
and
dec
xor
and
xchg
stc
pop
ret
aas
mov
pop
test
mov
and
int3
popa
lds
xor
gs
cmps
outs
test
mov
mov
pop
sbb
movs
add
mov
mov
xchg
cmp
jae
fsubr
xor
mov
add
fwait
lea
cmp
sahf
add
hlt
xchg
rol
or
dec
enter
adc
loop
xor
mov
(bad)
fild
push
fld
out
scas
in
adc
mov
dec
dec
popa
or
and
cmp
sub
ftst
shr
or
add
in
jns
push
add
std
nop
(bad)
sbb
xor
or
and
add
and
xor
xchg
out
call
nop
jge
mov
jecxz
(bad)
cld
cmp
dec
adc
out
mov
gs
imul
sbb
jae
bound
jmp
scas
std
int
xchg
aaa
dec
std
out
fcmovnu
loop
mov
cmps
dec
aaa
ss
lods
or
adc
test
cli
in
dec
mov
(bad)
aam
adc
adc
mov
daa
inc
mov
dec
test
mov
cwde
jmp
xor
or
fst
and
adc
mov
imul
mov
sti
add
adc
fdiv
pop
pop
into
sub
psubsw
pop
in
sbb
sbb
inc
fimul
inc
and
jl
or
cmp
push
mov
aad
call
ret
jnp
shl
lods
das
pop
daa
stos
fnstsw
fimul
mov
and
mov
dec
into
stos
cli
nop
(bad)
imul
mov
and
adc
sub
(bad)
mov
mov
shl
jge
aad
add
scas
mov
push
dec
push
jl
test
gs
std
je
imul
xchg
jo
pop
adc
dec
sbb
fld
outs
gs
retf
push
fistp
or
and
bound
jmp
mov
cmp
arpl
ret
push
xor
pop
shl
lds
pop
pop
or
adc
jle
inc
adc
cli
pop
ss
push
std
mov
inc
out
fnstenv
sub
fwait
idiv
push
ffreep
out
jmp
out
lds
sub
xchg
dec
dec
jmp
test
rcr
addr16
es
add
into
jne
inc
adc
mov
dec
daa
int3
xchg
inc
test
arpl
out
popa
and
pop
and
sub
dec
pop
xor
out
je
adc
xor
out
pusha
and
enter
fisttp
or
adc
mov
inc
cmps
adc
xchg
enter
outs
cs
adc
je
jbe
and
out
cmp
jl
mov
outs
pop
stos
xchg
fiadd
push
inc
and
add
jecxz
adc
jge
dec
push
cs
or
inc
call
xchg
xor
xor
mov
mov
adc
stos
mov
outs
and
test
ret
jae
into
inc
sub
cmps
ins
or
and
imul
in
fst
push
out
mov
lds
dec
scas
jo
xor
aam
into
rcr
test
sahf
mov
cli
sbb
xlat
pusha
out
pop
adc
cmp
(bad)
ret
adc
pushf
adc
inc
xchg
mov
xor
mov
loop
lock
(bad)
fiadd
mov
dec
ret
ret
push
xchg
loop
pop
pop
sub
nop
mov
leave
jnp
retf
mov
xlat
xor
sub
fwait
int3
xchg
cs
xor
and
dec
movs
jne
inc
leave
pop
mov
jb
push
add
les
inc
inc
push
pop
dec
int3
cmp
stc
push
cmp
sahf
inc
cmp
push
mov
nop
retf
inc
push
iret
out
mov
and
push
xchg
dec
out
int3
xor
les
and
lods
adc
mov
retf
movs
xor
dec
mov
fs
lods
ins
mov
mov
push
jmp
gs
cmc
ins
and
pop
ffree
fisub
fsub
xor
(bad)
and
scas
jae
std
jle
jne
and
fidivr
and
js
pop
pop
(bad)
pop
xchg
in
sub
test
int
cdq
int
jne
mov
pusha
adc
jle
pop
je
push
sub
mov
mov
cmps
and
je
cmp
rcr
xor
push
out
std
and
js
stc
das
mov
pop
stc
mov
adc
retf
out
mov
pop
shl
push
adc
sbb
test
ins
imul
pop
imul
jmp
dec
add
in
cmp
lock
inc
dec
loopne
inc
add
data16
push
inc
call
fwait
out
xor
test
adc
int
dec
push
in
mov
and
adc
out
sbb
enter
adc
movs
aad
rcr
or
fcom
gs
in
cwde
lock
fcomp
fiadd
xchg
push
pop
fldcw
add
cli
popw
push
cmps
mov
enter
ins
push
sub
std
and
or
mov
fwait
daa
loopne
sub
jmp
push
xchg
shl
in
dec
cdq
or
adc
add
fdiv
repnz
jno
stc
stc
retf
sub
cs
cs
test
movhps
mov
pop
fisttp
adc
sub
sbb
(bad)
xlat
je
shr
ins
push
mov
push
xchg
cmp
int3
shl
lahf
xchg
xor
pusha
aad
jae
cs
inc
adc
and
adc
pop
and
xor
mov
rcl
js
ror
add
xchg
jo
pop
shr
lds
or
ret
iret
ret
mov
adc
loope
add
fs
je
or
inc
mov
dec
push
adc
mov
imul
dec
pop
dec
inc
xchg
mov
lea
rol
data16
dec
loopne
jae
add
out
xchg
sbb
xchg
xor
or
and
or
adc
mov
ja
ror
pop
fcom
sub
or
fs
iret
mov
inc
xlat
repz
dec
pop
out
cmps
shl
mov
push
jg
(bad)
xchg
dec
sbb
jmp
and
ret
push
scas
mov
call
xchg
pop
pop
xchg
iret
cdq
fidiv
int
mov
or
mov
popf
jo
cli
ror
mov
aas
xchg
sahf
inc
sub
sub
lods
and
jno
and
cld
aas
xor
repz
xor
leave
add
pusha
xor
addr16
xor
cld
cmp
xor
jb
imul
pop
mov
cld
mov
jmp
loope
mov
pop
sub
test
repz
scas
fsub
mov
sbb
lea
hlt
lods
and
xor
pop
adc
ins
dec
dec
xor
icebp
retf
or
inc
pusha
xchg
xchg
sahf
xchg
popa
lea
ror
xchg
pushf
(bad)
xor
xlat
and
pop
jnp
lahf
adc
mov
mov
sbb
xor
and
add
jo
inc
pop
sub
lea
call
mov
and
sub
cmp
mov
ins
test
call
pop
inc
fcom
(bad)
shl
test
push
xchg
inc
test
ret
test
(bad)
dec
mov
movs
jae
xor
ins
mov
jns
push
inc
inc
cs
or
movs
cmp
imul
fsubr
xor
leave
repz
imul
ins
push
fs
add
enter
mov
jle
ins
std
in
jno
cmc
jmp
(bad)
inc
dec
sub
xchg
inc
cmp
mov
dec
int3
js
add
cdq
xor
sbb
or
push
or
ror
scas
push
jb
outs
xor
sub
mov
and
jbe
pop
sub
push
or
inc
mov
push
xor
xlat
cmp
imul
stc
mov
lahf
xor
call
mov
not
(bad)
add
das
jle
lods
cmps
xor
mov
push
retf
add
js
jns
sub
push
push
and
rcr
inc
adc
pop
les
add
sub
inc
leave
aad
mov
mov
mov
popa
aad
pusha
ins
sahf
int
jecxz
addr16
clc
bound
adc
mov
test
inc
mov
lods
ret
sbb
bound
sbb
cdq
sbb
sbb
std
jne
adc
cmp
je
jae
dec
push
inc
ret
adc
loope
lods
fld
or
sbb
pop
repz
ins
push
dec
imul
dec
stos
aad
out
push
lods
sbb
pop
shl
push
scas
adc
ret
xor
test
xchg
movlps
mov
stc
ds
pop
pop
push
mov
mov
fst
push
(bad)
iret
fadd
vmread
movs
mov
mov
pusha
pop
or
sub
and
into
pop
pop
daa
adc
dec
mov
adc
push
jb
lods
mov
rcl
adc
and
dec
ret
adc
ins
push
fs
add
sub
mov
enter
push
adc
fidiv
mov
dec
jecxz
xor
data16
adc
(bad)
psrlq
push
mov
mov
push
rol
rol
push
sub
jge
js
xor
je
aad
int
pop
pushf
stc
add
and
xchg
(bad)
sbb
push
push
jmp
xor
push
pushf
sbb
jle
jo
std
enter
into
outs
inc
jo
fidivr
push
jg
test
push
push
hlt
(bad)
mov
xchg
mov
and
sub
mov
std
jp
scas
push
test
pop
mov
rcl
jl
jns
jae
dec
movs
inc
add
and
rcl
sub
in
mov
mov
es
sbb
dec
add
pop
mov
in
sub
xchg
adc
ret
sbb
dec
adc
inc
mov
loopne
xor
adc
sub
xchg
pushf
sbb
xchg
lods
xor
loope
dec
cmp
adc
and
xchg
retf
pusha
adc
and
mov
stc
(bad)
push
inc
cwde
dec
ret
iret
cmp
gs
repnz
mov
jo
push
addr16
push
imul
mov
(bad)
dec
sbb
push
adc
push
pop
inc
and
mov
imul
mov
pusha
adc
out
pop
pushf
cmc
dec
int3
mov
mov
and
sahf
inc
rol
scas
hlt
and
xchg
in
cmp
mov
je
js
xchg
cmc
jno
sar
or
dec
pop
xor
jmp
test
or
fnstcw
xor
lods
stos
mov
addr16
push
and
int3
sbb
sahf
repz
or
out
stos
push
repz
or
cs
test
mov
pop
rcr
adc
mul
in
push
sub
inc
push
fild
pop
xor
and
sub
rcl
xchg
mov
sub
push
jecxz
shl
lods
add
xchg
pop
add
jae
dec
(bad)
sahf
add
pusha
cmp
test
iret
or
iret
mov
and
je
pop
pusha
bound
lods
sub
push
sbb
pop
dec
aas
sub
cs
and
aam
add
gs
push
lods
call
and
mov
mov
mov
outs
int
pushf
cmps
sub
cmp
push
sub
push
sub
sbb
mov
sub
sbb
daa
mov
xchg
int
xchg
mov
push
jae
cmp
clc
in
shl
test
add
xor
popf
scas
iret
es
jp
out
dec
jmp
adc
ror
pop
pop
sbb
iret
(bad)
call
ss
xchg
dec
pusha
jmp
mov
cmps
leave
js
cdq
(bad)
jl
int3
mov
jl
xor
sub
push
and
es
or
pop
hlt
test
inc
lods
sahf
iret
add
enter
xor
add
dec
cmps
movs
dec
scas
xor
xchg
adc
or
and
add
pop
rol
xor
imul
stos
or
nop
push
pushf
push
push
cmp
push
adc
inc
xor
xchg
xor
pushw
sub
xchg
aad
xor
cmps
push
inc
jecxz
xchg
jb
xor
mov
fisubr
xchg
iret
pusha
cmp
jno
jle
cs
sbb
jb
push
shl
inc
outs
and
push
and
add
nop
xor
(bad)
adc
(bad)
and
mov
pushf
inc
call
sahf
ds
movs
fwait
ins
dec
xor
mov
and
ins
adc
lahf
mov
outs
add
hlt
add
push
xchg
jl
dec
adc
pop
ret
test
cmps
nop
aas
xor
push
cmc
ds
es
inc
ja
scas
or
call
dec
outs
ss
adc
ins
xchg
rol
xchg
test
push
shl
out
dec
sub
outs
mov
pop
retf
mov
sub
push
xchg
in
ja
jne
xor
mov
and
sub
retf
or
inc
test
sti
xchg
das
ja
out
adc
loop
xchg
lock
pusha
leave
unpcklps
test
cdq
xchg
add
adc
retf
call
jge
sub
jp
out
adc
inc
inc
mov
shl
icebp
mov
inc
inc
push
mov
stos
push
add
jae
cs
push
outs
jno
push
dec
imul
movs
xor
or
mov
lods
int
mov
pop
aaa
in
jo
loop
cld
es
je
jbe
push
jb
pop
mov
cmp
xchg
push
bound
gs
or
(bad)
cmp
sub
jbe
cmp
aaa
add
push
jge
lods
lahf
xchg
and
(bad)
push
ss
push
(bad)
(bad)
(bad)
xchg
das
lods
or
ins
jp
ret
xchg
xlat
cmp
leave
rcr
push
leave
aam
pushf
fiadd
mov
dec
adc
push
xchg
paddsb
cmp
push
pop
or
mov
mov
pop
push
and
adc
add
dec
(bad)
jno
add
les
dec
inc
dec
test
outs
cmp
jo
mov
ds
dec
push
out
mov
dec
xor
mov
xchg
lock
cmp
fisubr
outs
xor
test
cli
les
add
push
es
pop
sbb
xchg
sbb
in
cmp
mov
xchg
data16
inc
fild
jge
adc
or
jae
mov
into
add
bound
sbb
jnp
test
pop
or
jne
and
xchg
test
iretw
mov
inc
cmp
mov
jne
jo
call
enter
xchg
scas
lods
(bad)
out
fiadd
adc
inc
sbb
cmp
aaa
and
out
sub
xchg
int
aad
xor
lods
in
adc
movs
mov
cmp
pop
sbb
xchg
fyl2x
inc
(bad)
gs
and
cwde
cmp
inc
js
loop
mov
(bad)
and
nop
mov
xor
fwait
pop
lea
xchg
add
(bad)
push
(bad)
test
(bad)
scas
inc
imul
or
add
mov
inc
in
sti
jge
dec
mov
test
scas
cmp
paddsb
cmp
xchg
mov
mov
dec
xor
sub
or
popa
addr16
mov
push
dec
sbb
or
pop
cdq
inc
jb
push
movs
mov
dec
iret
repz
pop
arpl
test
cdq
movs
inc
fsub
xchg
ret
hlt
mov
or
jp
inc
mov
js
out
test
nop
cwde
cmp
jl
push
jo
repnz
push
cmp
or
movs
and
fsubr
stos
jne
or
aam
aaa
iret
jo
mov
shl
pop
pop
cmp
stc
xor
es
mov
xor
imul
enter
inc
out
cmps
or
stos
lahf
cld
imul
popa
sbb
pop
xor
cmp
mov
push
(bad)
dec
xor
push
sbb
in
inc
fldenv
fst
push
sub
in
push
and
shr
dec
push
mov
mov
or
inc
adc
fimul
outs
in
adc
jb
stc
mov
ja
pop
dec
or
ret
mov
adc
(bad)
in
enter
push
inc
(bad)
or
mov
mov
scas
ret
sub
push
inc
jecxz
test
sbb
inc
jno
aaa
jmp
inc
add
(bad)
mov
add
movs
pop
xchg
mov
ret
aad
push
fimul
or
leave
adc
adc
ficomp
adc
adc
das
(bad)
mov
fild
mov
add
mov
call
add
push
les
loop
stc
shr
xor
lods
dec
loopne
push
int
sub
ret
mov
xor
gs
xor
sar
jbe
(bad)
mov
add
add
or
fsub
cmp
aaa
adc
add
mov
adc
and
add
sbb
ret
mov
ret
ins
lods
stos
imul
enter
adc
rcr
jb
or
adc
shl
sub
adc
sbb
test
jb
aam
inc
ins
sbb
add
rol
mov
push
xor
add
ins
push
add
xor
xchg
cmp
cmp
sub
and
pop
in
push
nop
fdiv
jae
cmp
or
dec
add
jb
call
(bad)
pushf
movs
fistp
bound
xchg
dec
ret
mov
retf
or
pop
sub
lock
inc
xor
sub
int
dec
push
shl
push
xor
daa
lds
imul
cmp
xchg
aas
cwde
dec
repz
sbb
das
aad
(bad)
into
aad
repz
push
pop
bound
out
sub
or
or
mov
outs
pop
jp
push
mov
sbb
inc
xlat
mov
aas
xor
fs
imul
mov
jmp
push
fs
test
nop
mov
dec
lahf
mov
shl
test
xor
or
xchg
and
dec
add
push
jno
popf
cmp
mov
pop
lods
sbb
mov
sub
pop
and
mov
adc
or
dec
out
(bad)
and
imul
(bad)
pop
mov
push
push
fisttp
int
mov
sbb
aaa
movs
movs
ret
sbb
pop
out
and
adc
mov
push
and
and
fwait
ret
and
push
jbe
mov
fnsave
(bad)
add
movs
pushf
ret
rol
add
in
xchg
inc
pop
les
aas
mov
into
gs
push
popf
and
nop
fwait
mov
pop
mov
mov
mov
dec
fs
in
xchg
fimul
mov
mov
cmc
aam
mov
mov
push
in
xchg
sbb
in
and
pop
add
push
neg
push
cmp
test
das
sahf
stos
call
ins
neg
shl
inc
cmc
stc
stc
mov
dec
pop
lods
das
add
jg
lahf
pop
cwde
std
cdq
inc
mov
pop
lahf
call
mov
mov
pop
mov
popa
adc
sti
cmps
rcl
scas
sbb
dec
out
jns
mov
aad
sti
mov
inc
loop
stos
loopne
xchg
popf
(bad)
sub
sub
loopne
adc
jmp
scas
xor
jo
fwait
mov
movs
fs
jno
sbb
in
sbb
sub
and
movlps
dec
push
jno
dec
daa
and
repnz
call
mov
pusha
in
std
js
mov
pop
in
leave
mov
pop
sub
xor
clc
or
and
push
push
and
or
sub
imul
sbb
jbe
popa
mov
mov
adc
or
pop
shl
pusha
sub
xor
pop
cmp
popa
sub
data16
call
cs
aad
sbb
shr
js
mov
aam
mov
popf
lahf
call
(bad)
movs
jmp
ret
sbb
das
mov
pop
scas
int
outs
hlt
loop
mov
retf
cmc
rcr
arpl
jmp
dec
mov
pop
mov
arpl
adc
or
fwait
sbb
daa
std
pop
rol
mov
pop
retf
sbb
bound
retf
inc
je
jge
push
test
or
mov
shl
push
inc
enterw
pop
jmp
out
adc
xchg
lods
popf
mov
mov
test
push
loop
loop
or
dec
cmp
inc
adc
jmp
or
jne
movs
or
push
push
dec
rcl
sbb
ror
enter
sub
into
push
push
aam
mov
out
push
xchg
xor
add
cwde
mov
ins
push
dec
loopne
dec
fimul
lods
xor
xor
fdivr
leave
pop
ins
add
cs
rol
ins
xchg
imul
jbe
mov
mul
push
pop
dec
inc
test
ins
int
push
and
sahf
mov
and
jae
popa
fiadd
push
fimul
mov
movs
sbb
pop
dec
sbb
jle
test
mov
mov
popf
popf
cmp
dec
jge
ret
jne
repnz
ds
ficomp
xchg
ss
sbb
add
pusha
aam
stc
cmps
movs
stc
add
xor
aad
ins
sahf
ds
push
mov
sub
dec
cmp
movs
in
gs
and
imul
repnz
movs
inc
pop
xor
xor
cdq
jns
rep
jno
mov
cwde
push
dec
repnz
cdq
xlat
es
push
in
mov
adc
jl
push
jmp
fucomp
xchg
xchg
and
ss
inc
push
jmp
adc
push
(bad)
(bad)
data16
jmp
loop
shl
hlt
or
xchg
push
push
cmp
dec
or
add
mov
adc
je
shr
add
push
mov
push
dec
pop
outs
pop
lahf
jp
ins
xchg
retf
ds
xor
fist
mov
pop
stc
jb
lods
pop
div
mov
dec
jne
add
into
lahf
sub
iret
sti
sub
ds
mov
inc
mov
cmc
pop
pop
inc
inc
adc
fcmovnu
adc
add
aaa
fisub
out
lea
(bad)
xlat
xchg
(bad)
lea
mov
enter
in
arpl
mov
arpl
cdq
xor
dec
jne
xor
outs
rol
aad
imul
xchg
push
repz
pop
inc
and
inc
mov
ror
mov
scas
adc
(bad)
xor
xchg
or
mov
pusha
sbb
jne
bound
sbb
xor
data16
sub
xor
ins
xlat
shr
dec
xchg
mov
dec
mov
(bad)
fisub
mov
or
fsub
mov
lods
test
arpl
adc
gs
xor
daa
ss
cwde
outs
push
ds
push
sbb
add
fmul
sub
repz
movs
movs
push
mov
jo
mov
push
leave
sbb
push
adc
xor
aas
cmp
or
mov
shl
data16
sub
pop
and
les
call
iret
int
iret
add
ror
enter
adc
popf
fwait
iret
sub
(bad)
in
cmc
test
mov
sub
sub
and
mov
jae
add
xchg
dec
sahf
jno
pushf
mov
cmp
loopne
in
xchg
outs
push
ret
js
pop
add
sub
es
loop
fisubr
fwait
mov
pop
leave
fdiv
cmp
sub
pop
test
or
xchg
mov
dec
sbb
mov
add
or
shl
adc
jbe
mov
cmp
jo
add
push
xchg
push
or
inc
fmul
adc
push
(bad)
push
sub
sub
and
adc
lds
and
sub
xchg
cmp
jmp
retf
inc
data16
pop
mov
push
jae
mov
mov
cmp
inc
das
xchg
mov
pusha
add
cmp
loopne
jge
push
mov
mov
pop
xchg
test
xchg
icebp
mov
call
cmp
mov
mov
add
iretw
add
xchg
cmc
imul
jp
dec
xlat
jne
pop
adc
cmc
ret
inc
inc
cmps
fidivr
mov
pcmpgtd
mov
xchg
test
and
hlt
dec
add
imul
stc
add
push
in
loopne
sbb
and
jmp
loope
xor
ins
pop
mov
cwde
xchg
mov
and
lahf
xchg
push
scas
shl
push
ds
xchg
aam
mov
xlat
and
xor
shl
jle
ret
push
aam
imul
gs
jmp
fs
repnz
test
test
(bad)
rcr
sbb
lea
cmp
lods
inc
cs
jb
or
shl
xor
or
and
cmp
dec
inc
add
dec
(bad)
xchg
ins
or
add
jns
mov
push
in
cmp
ins
stos
test
and
inc
mov
mov
fcom
test
mov
gs
sub
jne
movs
(bad)
pop
pushf
stos
pop
add
and
imul
std
and
lahf
aas
pop
movs
adc
pop
xchg
jno
pop
jnp
lahf
jg
call
mov
rcr
or
and
push
sbb
mov
xor
mov
fwait
popa
pop
mov
jns
cli
aad
mov
jg
jle
fild
cs
cmps
rcl
into
cmc
adc
inc
mov
(bad)
pop
into
jmp
add
sub
cmps
mov
mov
in
jmp
push
adc
movs
shl
or
dec
adc
in
mov
sbb
push
ins
fbld
hlt
ret
pusha
cmp
in
je
ss
lea
mov
jecxz
rep
pop
sbb
shr
pushf
ret
ficom
lea
and
xchg
mov
cmp
fld
sbb
into
(bad)
or
mov
lods
pop
(bad)
push
mov
adc
mov
jmp
jl
cs
pop
fwait
out
or
es
pop
cld
mov
rcl
push
jecxz
scas
in
push
sar
adc
aam
sbb
repz
cwde
jnp
dec
(bad)
mov
imul
test
mov
rcr
inc
xchg
xchg
shl
pop
inc
pop
ins
arpl
push
jl
in
xchg
push
or
add
aaa
fild
jecxz
cmp
mov
cli
adc
clc
xrelease
or
adc
popa
mov
in
sbb
rcr
mov
adc
fwait
jge
add
inc
sbb
push
into
call
inc
or
mov
mov
push
iret
mov
imul
cmp
xchg
xchg
xor
movs
cld
cmps
mov
fwait
sahf
jne
frstor
pusha
fs
pusha
cmp
ins
or
xchg
retf
mov
out
sti
dec
(bad)
xchg
sbb
call
stos
popf
hlt
add
mov
lds
stc
dec
das
out
out
or
in
shl
pop
sub
retf
in
ret
mov
sbb
ins
call
rol
or
repz
(bad)
(bad)
into
addr16
mov
clc
leave
add
ret
jp
push
jo
xchg
fidivr
lods
sti
out
lds
ret
xchg
rol
cmp
add
pop
cmp
ficomp
and
mov
dec
loop
in
test
(bad)
jmp
cmp
in
repz
cmp
mov
mov
jle
fild
mov
sub
cmc
fnstenv
pop
inc
mov
into
test
cmp
mov
call
dec
adc
imul
cdq
mov
jecxz
ds
xor
adc
add
xor
cmp
loope
and
dec
mov
cld
sbb
leave
push
pop
pop
in
cld
in
data16
mov
jle
add
and
test
ds
sbb
jmp
cmc
xchg
ja
dec
xchg
dec
in
cmps
sub
xchg
sub
add
loop
les
xchg
push
inc
ds
mov
int
clc
push
fild
mov
out
push
nop
arpl
cmp
dec
mov
sahf
add
add
mov
fisubr
sub
les
es
xchg
jo
cmp
mov
mov
cmp
xor
ins
push
test
sahf
mov
sub
jnp
inc
adc
out
call
push
aam
(bad)
out
ins
addr16
out
cmps
cmc
add
and
mov
cmps
jbe
call
jg
aad
and
jmp
xchg
mov
dec
out
inc
jge
aam
int
and
cmps
jmp
imul
dec
mov
mov
ret
jns
add
adc
fs
add
enter
ret
adc
ret
or
mov
inc
nop
test
sbb
(bad)
stc
stos
out
imul
sub
fisubr
fst
inc
and
cmp
dec
jns
push
rcr
addr16
sbb
fbstp
or
arpl
int
mov
fs
pop
repz
cdq
pop
jo
leave
xchg
ret
xchg
pusha
ins
xor
adc
leave
test
or
mov
fidiv
movs
jp
pop
scas
rol
or
(bad)
xchg
add
xchg
loope
pusha
jmp
sbb
in
sub
out
inc
mov
mov
sub
mov
sub
jae
(bad)
imul
cmp
and
jne
and
nop
test
mov
shl
lock
shl
inc
loopne
jp
and
arpl
adc
jmp
popa
mov
rol
imul
outs
outs
mov
das
sub
push
stos
mov
mov
shr
ss
stc
scas
mov
test
xchg
mov
inc
into
dec
rcr
jmp
xchg
imul
cmp
sbb
sbb
lea
out
mov
xlat
add
cs
inc
xor
adc
icebp
ins
push
movs
add
push
jl
and
and
push
mov
out
not
xchg
sbb
mov
sub
mov
rol
jne
or
dec
pop
mov
ins
jae
imul
jle
and
cmp
aad
and
adc
xor
mov
mov
and
mov
(bad)
add
enter
stos
dec
and
sub
adc
xchg
mov
rcl
push
xor
nop
xlat
add
pop
xor
(bad)
mov
cmp
out
(bad)
cmp
and
call
mov
sbb
fcomip
fcom
fadd
adc
dec
popf
mov
cld
hlt
adc
jno
les
sub
fwait
stos
mov
out
cmp
inc
push
push
lea
dec
aad
jecxz
outs
ins
push
(bad)
mov
adc
xchg
xchg
call
fmul
bound
xchg
iret
or
into
push
push
push
xchg
retf
push
repz
add
cmp
sbb
push
inc
and
repnz
cld
xchg
daa
enter
(bad)
mov
lods
add
dec
es
dec
ins
test
out
pop
pop
or
icebp
add
dec
pop
fisttp
pop
xchg
jge
iret
push
pop
or
push
fsub
movs
mov
mov
icebp
dec
mov
xchg
jns
imul
call
sbb
mov
leave
sbb
xor
jo
adc
push
jns
xchg
lahf
mov
and
pop
or
sar
inc
sub
xchg
ins
bswap
mov
das
xchg
popa
adc
mov
daa
aad
ins
(bad)
mov
xchg
rcl
push
sbb
mov
es
jo
push
sub
mov
jo
push
push
push
int
fidivr
call
(bad)
scas
mov
jecxz
mov
(bad)
cmp
add
repnz
mov
xor
popf
mov
jb
fdivrp
bswap
jp
jno
cmp
pop
or
stos
call
sbb
xor
add
adc
ins
pusha
xchg
pop
mov
mov
sub
or
imul
rol
mov
jg
lea
xchg
shl
or
add
mov
jno
mov
xchg
push
adc
jmp
arpl
xchg
shl
pop
into
sahf
jp
rcl
sbb
in
add
inc
test
scas
push
outs
jae
jle
nop
cmps
rol
ins
add
pop
data16
test
push
imul
(bad)
mov
pop
inc
inc
ins
pusha
ss
shr
call
mov
shl
push
daa
and
data16
lds
adc
ins
sub
movs
pop
xor
jne
sbb
cmp
in
cmp
out
test
jp
pushf
xchg
fstp
jecxz
and
push
mov
aaa
xor
ss
adc
(bad)
jecxz
jno
and
leave
test
shl
xchg
adc
test
inc
enter
test
sti
jo
jo
inc
add
imul
(bad)
inc
loop
and
mov
xor
ja
lahf
or
adc
sub
popa
ins
add
in
pop
pop
add
cmp
nop
dec
adc
jl
je
retf
rcl
sti
sbb
and
inc
inc
pop
dec
test
pop
ds
data16
scas
sar
das
dec
inc
out
imul
jne
jg
push
dec
rol
mov
mov
test
pop
inc
or
xchg
mov
loopne
pop
ds
dec
in
out
inc
out
lods
aad
neg
inc
dec
pop
jbe
fadd
mov
imul
std
push
iret
add
ins
ret
arpl
dec
push
data16
int
and
pop
push
dec
sbb
jle
adc
dec
jmp
mov
sub
push
fwait
jns
inc
mov
adc
call
imul
adc
mov
idiv
push
xor
cli
pusha
push
adc
mov
dec
push
or
mov
aam
pushf
inc
sub
push
popf
xchg
call
fild
mov
addr16
lock
xchg
mov
push
loope
ja
mov
inc
cmc
add
add
dec
jmp
inc
gs
fcom
test
pop
sbb
xor
mov
pop
add
pop
in
test
lea
rcl
popa
dec
loop
sbb
imul
xchg
jmp
dec
mov
and
sub
or
imul
or
push
push
in
int3
lods
scas
int
xor
cmps
push
ins
(bad)
xchg
fcom
lea
fwait
mov
icebp
jb
adc
in
ds
xor
push
dec
add
cmps
jmp
stos
add
inc
dec
xchg
sahf
jp
bound
inc
mov
jle
sbb
add
push
adc
iret
out
jns
scas
inc
adc
fsubr
cmc
lea
sub
rol
sbb
bound
jge
cmps
mov
sar
movs
cmps
jle
jo
enter
mov
xchg
sti
mov
mov
cdq
cwde
lds
sbb
sub
push
fild
jns
inc
sar
ret
jnp
add
ret
xchg
enter
mov
push
into
cmp
retf
inc
cld
dec
syscall
mov
dec
sbb
pop
xor
inc
cmp
jl
xor
in
push
adc
mov
pop
cmp
(bad)
fsub
pusha
mov
sub
push
push
xchg
dec
cli
js
bndstx
out
mov
shr
sbb
and
pop
ret
inc
xchg
call
inc
popf
and
sbb
xor
sbb
mov
mul
icebp
sbb
add
test
pop
push
mov
imul
jae
push
sbb
mov
(bad)
sub
sub
adc
pushf
loop
rcl
xchg
test
fwait
push
out
outs
sbb
mov
mov
imul
retf
dec
adc
cmp
sbb
inc
in
jns
aad
xchg
jb
xchg
push
xor
sbb
cmp
enter
and
pop
jp
shl
xchg
fistp
scas
loope
arpl
icebp
dec
add
clc
mov
nop
push
rol
daa
es
jnp
pop
xlat
mov
and
or
int
mov
js
cmps
mov
inc
fdivr
adc
out
or
adc
push
lds
add
adc
dec
xor
cmp
lods
pop
sub
cmp
js
fst
xor
push
gs
sar
stos
pop
inc
rol
(bad)
gs
xchg
dec
lea
inc
ret
sbb
and
adc
sub
mov
jmp
jmp
popf
push
pop
adc
pop
je
fild
xor
jne
jne
or
adc
cwde
jmp
retf
xchg
movs
adc
add
pop
addr16
cmp
push
gs
(bad)
mov
xchg
pop
adc
cmp
mov
into
je
outs
sub
bound
rcl
cmp
pop
xlat
test
mov
dec
out
out
fdivr
jl
fdivr
jne
dec
sub
push
call
fld
jmp
hlt
shl
mov
jg
repnz
jmp
mov
jle
imul
shl
xchg
leave
lea
loopne
jo
jo
xchg
cmp
aas
cmp
jg
add
lahf
test
inc
jl
mov
push
sbb
or
cmp
jno
nop
ret
cmps
les
cmp
mov
icebp
adc
cmps
icebp
shl
fwait
pop
cmp
imul
sbb
push
mov
push
pusha
jne
sub
inc
in
pushf
clc
mov
mov
mov
ret
xchg
cmp
out
xor
mov
mov
sahf
sar
loopne
xor
int3
mov
inc
inc
inc
addr16
push
mov
ss
mov
push
lea
add
jno
mov
push
mov
shl
fwait
arpl
or
jecxz
repz
jae
(bad)
jmp
xor
mov
dec
lock
or
hlt
mov
sbb
or
mov
pop
lods
pop
repz
dec
ins
pop
mov
cmc
xchg
pop
das
adc
enter
add
or
jo
fld
xor
inc
push
cmp
(bad)
fcmovbe
jae
xchg
repz
mov
test
das
sar
je
inc
push
test
and
(bad)
adc
and
(bad)
bound
fsub
sbb
popa
mov
ja
xchg
pop
adc
cmp
test
in
fwait
js
mov
mov
lahf
sub
movs
(bad)
or
and
mov
cmc
push
lods
ja
mov
bound
jb
cmp
sbb
push
sub
imul
bound
call
push
ds
fs
into
pusha
or
adc
aaa
push
icebp
cmp
or
mov
cmps
xchg
dec
push
inc
jecxz
cmp
mov
in
and
sbb
sbb
popa
movs
stos
fcom
(bad)
call
ds
xchg
mov
mov
(bad)
push
jp
xor
dec
loop
jbe
push
or
aad
neg
outs
jl
cmp
or
(bad)
dec
mov
ds
dec
or
pop
dec
aaa
popa
xor
cmps
sub
movs
sub
push
jb
out
and
xor
retf
pop
ret
mov
sbb
add
in
in
in
leave
retf
das
mov
dec
mov
inc
and
xchg
add
push
mov
jb
sbb
push
sub
loope
push
push
imul
imul
icebp
sbb
outs
or
jo
pop
push
nop
push
dec
frstor
addr16
cmps
xor
and
sub
or
inc
push
scas
sub
sub
jmp
mov
or
leave
dec
xchg
mov
cdq
loope
push
add
inc
dec
loop
jne
cmp
xchg
push
mov
cmc
xor
inc
ret
push
dec
ja
sbb
push
out
les
nop
jp
xchg
popa
sti
rcr
pushf
cwde
clc
or
inc
clc
push
xor
or
and
stos
stos
sbb
and
adc
jp
adc
adc
mov
mov
pop
les
cmp
ins
pop
push
das
xor
xor
inc
je
cmp
mov
jecxz
push
jge
cwde
int3
(bad)
push
ja
cwde
xchg
out
call
sub
push
fsub
stos
dec
mov
les
sub
add
test
pushf
push
and
xchg
fsub
and
dec
rcr
mov
mov
pop
xor
xchg
xor
or
hlt
leave
or
loop
push
das
push
or
add
dec
ss
data16
ss
push
cmc
add
stos
mov
fidiv
jno
pop
icebp
sbb
adc
jb
adc
das
sub
pop
and
or
pop
aad
mov
ss
mov
pop
pop
and
and
push
movs
movhps
or
outs
(bad)
mov
test
clc
inc
or
ret
xor
cmp
add
dec
xchg
hlt
imul
pop
xchg
lock
push
mov
scas
sub
shr
xchg
les
xchg
test
imul
push
retf
mov
jae
ss
pop
leave
js
inc
or
cmps
jmp
sub
mov
push
les
sbb
jae
sbb
inc
(bad)
ds
int
jae
je
aad
add
shl
or
add
xor
xor
cmps
or
or
popf
xor
sbb
fwait
sbb
and
(bad)
mov
hlt
cld
int3
cmp
iret
mov
int
sbb
inc
xchg
in
xchg
das
sbb
push
jle
stc
ret
xchg
push
add
sub
lods
mov
inc
cmps
mov
retf
ss
hlt
test
mov
dec
jl
stos
inc
bound
mov
adc
shr
add
cmp
pop
std
adc
das
mov
and
loop
lds
ins
in
xchg
es
aaa
adc
add
and
sub
dec
arpl
clc
mov
sub
push
inc
ror
or
xchg
push
push
jecxz
loopne
shl
mov
retf
loopne
mov
in
mov
pop
jmp
push
sub
pop
jl
loop
and
cmc
out
or
es
adc
lea
mul
add
adc
(bad)
test
jecxz
rcl
add
cmp
data16
push
cdq
or
stc
movs
add
adc
mov
les
stc
dec
inc
xchg
jb
cmps
mov
je
xor
xlat
scas
adc
push
pop
sbb
cmp
imul
(bad)
fidivr
imul
sbb
add
test
sbb
shl
(bad)
jae
sbb
mov
jp
xchg
(bad)
mov
cmp
fcom
loop
stos
dec
dec
arpl
mov
mov
hlt
outs
jae
call
ds
bound
mov
lds
jne
pusha
push
std
jns
sbb
mov
int3
jno
pop
inc
add
loope
scas
test
sbb
rol
js
sahf
stc
dec
inc
lods
cmp
ins
xor
sbb
js
cmps
dec
xor
shl
mov
sub
inc
mov
rcr
inc
loop
cld
add
out
jne
rcr
psrlq
or
repz
jmp
sbb
dec
and
push
(bad)
sub
mov
stc
sub
add
dec
push
lods
sti
pop
pop
adc
inc
es
xchg
frstor
pop
por
add
adc
addr16
call
cmp
test
sbb
out
cmp
dec
xchg
test
jmp
imul
ss
jno
cmc
and
sbb
pop
pop
cli
shl
movs
xchg
xlat
xchg
dec
sub
push
mov
mov
adc
stos
and
adc
pop
pusha
inc
and
xor
cli
push
mov
lea
or
xchg
and
sub
or
xor
and
repnz
mov
adc
add
dec
scas
xor
ja
push
daa
and
gs
jae
imul
adc
mov
(bad)
cdq
lock
dec
inc
or
xor
stos
push
retf
add
cmp
rcr
sbb
les
lock
movs
pop
int3
pop
sub
aaa
push
cmp
cmp
lods
xor
call
push
mov
sub
scas
dec
or
and
js
mov
cmp
jnp
dec
(bad)
pop
test
adc
pop
pop
push
sub
fistp
xor
cmp
je
leave
mov
test
ror
inc
push
loopne
rcl
addr16
inc
mov
std
das
jg
push
je
xor
aas
aaa
jne
ins
or
mov
popf
inc
das
jmp
daa
dec
dec
sahf
call
pop
lods
adc
rcl
dec
cmps
adc
test
lods
(bad)
stc
mov
cdq
movs
into
fadd
dec
and
push
push
ds
sub
xchg
pcmpgtb
les
nop
lahf
and
outs
add
fdivr
outs
inc
sbb
jo
test
lods
inc
add
xchg
xacquire
mov
sti
adc
mov
jle
lock
mov
arpl
push
xor
stos
lods
shr
test
cmp
ret
jbe
(bad)
xchg
mov
popa
dec
popf
cmp
paddsw
fisub
xor
xor
jo
popf
add
mov
push
pop
mov
sub
adc
xchg
sub
mov
loopne
mov
sbb
fcmovne
rcl
(bad)
mov
sub
mov
jae
mov
xchg
mov
pop
xchg
scas
div
mov
push
adc
aad
ret
push
cmp
cli
stc
mov
or
xor
dec
add
ins
jg
data16
cli
int3
call
or
inc
(bad)
pop
jle
mov
xchg
inc
push
pop
jno
bound
mov
xor
cwde
inc
cli
call
clc
jne
or
sbb
loop
jbe
ret
jo
mov
jo
cmpxchg
hlt
movs
rcl
pop
add
adc
sbb
dec
mov
sbb
sub
lock
int
jnp
mov
cmps
outs
sub
cmp
rol
adc
adc
push
xor
retf
mov
loop
fcom
or
int3
xor
shr
nop
or
sbb
adc
and
aad
cmps
int3
cmps
mov
sbb
mov
aas
gs
iret
mov
sub
adc
sbb
mov
imul
(bad)
mov
ret
mov
add
push
loopne
adc
cwde
push
xchg
pusha
les
pop
jmp
stos
(bad)
(bad)
push
add
sbb
mov
pop
xchg
jle
mov
fs
shr
inc
jecxz
sbb
push
fwait
scas
outs
ror
or
ds
(bad)
fcmovbe
clc
outs
(bad)
push
add
pop
jnp
add
ret
loope
movs
retf
daa
inc
push
pop
cwde
mov
into
and
imul
add
or
mov
push
arpl
mov
add
dec
ret
jae
(bad)
mov
mov
dec
clc
adc
mov
add
sar
loopne
pop
jp
mov
dec
stos
dec
mov
sub
push
xor
fldcw
and
test
nop
push
push
cmp
jbe
jo
jns
mov
adc
rcl
sti
(bad)
sub
push
xchg
data16
mov
(bad)
pop
fbld
mov
ds
xor
aam
jo
sub
loope
adc
cmp
or
bound
cmp
push
je
pusha
out
xchg
leave
int
sub
sbb
loope
xchg
jo
and
fild
inc
pop
dec
xchg
shl
popa
and
and
imul
sahf
fisub
add
ret
jl
in
and
dec
cmp
fisttp
into
adc
dec
arpl
push
mov
lock
xchg
dec
daa
rcr
dec
dec
cs
mov
jmp
mov
mov
scas
ss
loop
xchg
xor
or
xlat
push
out
int
jmp
mov
jb
mov
push
inc
jge
enter
push
mov
(bad)
push
repz
test
lods
scas
push
aam
dec
push
add
add
xor
fsub
in
mov
(bad)
mov
sub
and
inc
(bad)
pop
dec
daa
stos
data16
retf
cmp
enter
bound
jbe
dec
xor
or
mov
loopne
mov
popa
inc
fcom
dec
pop
jmp
xor
dec
in
mov
mov
or
(bad)
cmp
scas
fisttp
cmps
cdq
adc
mov
nop
jo
in
movs
les
inc
pusha
imul
inc
xchg
xchg
xor
mov
shr
push
mov
imul
xchg
or
(bad)
out
test
sub
repz
xchg
cmp
jbe
dec
popa
data16
add
adc
bound
lea
sub
xchg
pusha
mov
cdq
mov
inc
push
mov
adc
pop
adc
xchg
mov
sbb
xor
arpl
dec
pop
mov
cmp
das
dec
push
or
xchg
mov
dec
and
pop
lods
cli
dec
call
enter
into
sub
and
and
aad
sbb
sahf
adc
ror
inc
test
or
push
pop
adc
xor
minps
push
xor
dec
dec
lahf
sbb
xor
push
in
adc
add
pop
mov
or
mov
fcomp
jmp
add
or
sbb
push
mov
add
into
jno
dec
cmp
cmp
xor
or
xchg
mov
or
xor
retf
pop
add
sbb
sub
xor
and
jmp
xor
sbb
iret
mov
hlt
or
push
add
xor
imul
lods
cmp
aas
sub
sbb
and
cmc
or
and
mov
push
leave
pop
sbb
mov
cld
(bad)
xchg
dec
sub
cmp
xchg
jno
or
daa
push
lock
push
dec
ret
shl
in
jmp
sbb
push
xor
inc
inc
dec
jo
lods
and
mov
imul
dec
add
dec
push
xchg
mov
fld
add
shl
sub
dec
adc
mov
std
adc
mov
dec
pop
or
stos
adc
adc
xchg
cwde
inc
xchg
sub
pop
adc
pop
inc
cmp
adc
cmp
jb
jle
mov
dec
and
loop
mov
ja
(bad)
adc
(bad)
call
bound
repz
loop
xchg
and
popa
fidivr
mov
ror
mov
sti
cdq
push
mov
out
cmps
pop
fst
(bad)
add
mov
clc
cs
sti
clc
cmps
in
ins
adc
mov
ins
sahf
loopne
inc
push
cs
fdivr
inc
inc
mov
fbstp
imul
mov
xchg
int3
cdq
pop
ds
sub
das
shl
cmp
xchg
sbb
ret
mov
icebp
push
lds
call
cli
inc
mov
jmp
psraw
inc
inc
scas
dec
and
daa
and
ins
jnp
mov
clc
fs
push
adc
mov
and
mov
add
lods
push
jno
sbb
sub
xchg
and
mov
xchg
js
dec
adc
mov
jmp
sub
or
icebp
and
sub
inc
dec
sbb
add
dec
sub
inc
sbb
and
loop
xchg
push
dec
cs
pushf
gs
stc
adc
cmp
popf
push
or
and
das
retf
add
mov
stos
pop
movs
std
movs
or
dec
in
inc
push
popf
add
mov
ret
arpl
pop
ss
or
pop
inc
jl
push
add
mov
cdq
js
test
mov
sbb
(bad)
xchg
scas
or
pop
ret
mov
jo
retf
mov
add
mov
shl
dec
mov
and
lock
ja
or
xlat
add
xchg
and
enter
inc
cmp
pusha
add
clc
xchg
dec
ret
inc
lods
mov
les
in
in
imul
shl
imul
ins
js
xchg
adc
and
push
sbb
add
sub
sbb
test
aas
inc
or
and
out
outs
imul
and
adc
xchg
inc
inc
outs
adc
add
pop
lods
xchg
inc
mov
ror
test
outs
cmc
cmp
je
lock
(bad)
das
dec
test
out
nop
sbb
dec
js
jbe
sti
adc
mov
scas
adc
mov
repz
sub
les
xor
xchg
push
xor
push
scas
(bad)
xor
mov
adc
xor
dec
lods
dec
xor
xchg
mov
scas
inc
arpl
ret
xchg
(bad)
ficom
adc
mov
ja
data16
or
sbb
cdq
mov
lds
sbb
jmp
sub
mov
pop
mov
jnp
sub
movs
cld
int3
mov
dec
aaa
push
inc
or
adc
inc
pop
and
dec
adc
loope
adc
push
xchg
arpl
ins
mov
cmp
mov
sbb
push
lods
cmp
or
adc
or
mov
leave
add
xor
jp
push
jmp
and
inc
or
add
push
(bad)
push
rol
inc
jbe
sbb
xlat
stos
popa
mov
shl
xchg
lds
lds
pop
jne
aad
pop
(bad)
or
xor
int
inc
mov
jecxz
loop
inc
fidiv
fs
popa
cmp
adc
stc
mov
jb
(bad)
sub
mov
dec
cmp
adc
test
add
sahf
das
mov
or
mov
fimul
mov
jge
data16
maxps
cmp
or
jo
in
test
pop
mov
repnz
adc
jae
lods
sbb
pusha
mov
xchg
(bad)
(bad)
jbe
sub
movs
test
sbb
sbb
jo
cdq
call
xchg
inc
and
daa
stos
dec
inc
add
jne
pushf
mov
(bad)
shl
inc
mov
mov
mov
and
dec
movs
fldcw
imul
in
pop
pop
stos
outs
sbb
inc
int
imul
mov
pushf
inc
call
repz
adc
mov
xchg
mov
sub
movs
jmp
push
sub
aaa
mov
add
mov
jbe
xor
inc
movs
xchg
inc
les
xchg
lea
xlat
cwde
jae
dec
fimul
push
in
scas
add
and
jb
push
rcl
cs
add
shl
mov
js
mov
cmp
test
dec
or
fidiv
lods
js
or
xlat
xchg
aas
push
lods
pop
xchg
xchg
xchg
or
sahf
cli
add
mov
lods
out
xchg
mul
aad
retf
in
mov
jne
shr
push
lea
(bad)
adc
cmp
aad
sub
movs
popf
mov
jne
hlt
mov
vmovdqu
in
xchg
mov
fidiv
or
push
sub
daa
cmp
fwait
add
loopne
loop
movs
mov
lods
push
jno
std
xor
inc
push
aad
adc
mov
icebp
cdq
stos
lods
icebp
test
add
push
mov
mov
mov
cmps
rol
arpl
push
push
jp
adc
mov
inc
mov
push
ror
sbb
adc
adc
inc
push
push
sar
push
test
cdq
ins
push
cmp
fmul
xor
and
mov
jl
lahf
lds
sahf
sub
fs
popfw
or
and
cld
and
sub
outs
fadd
loope
fs
jae
sbb
movs
movs
push
sub
dec
dec
xchg
xchg
das
das
jae
retf
scas
adc
sub
mov
pop
push
add
jb
push
or
adc
inc
dec
pop
inc
enter
push
lods
and
push
mov
inc
test
popf
dec
(bad)
ins
imul
dec
push
out
or
xor
out
test
ffree
bts
or
ds
cmp
test
stos
fs
push
ret
xchg
xchg
dec
lods
push
out
scas
push
mov
inc
inc
lds
mov
jl
mov
sbb
js
fsubrp
jbe
dec
add
cwde
imul
and
mov
cwde
data16
pop
mov
arpl
sbb
pop
sbb
and
ret
movs
fsubr
imul
and
imul
aam
or
and
push
xor
jns
push
into
sbb
pop
pop
daa
fnsave
and
mov
mov
sub
cmps
mov
cmp
cmp
sbb
or
imul
cmps
pop
pop
(bad)
jmp
movs
pop
mov
stos
xor
push
ins
xor
imul
xchg
loope
mov
stos
mov
or
ror
xchg
pop
hlt
sbb
and
lds
(bad)
arpl
rcl
push
adc
xor
dec
ins
jae
cmp
add
xlat
xchg
add
out
mov
out
sub
mov
dec
cmp
test
jmp
test
loopne
push
push
xchg
cwde
adc
int3
pop
push
retf
or
(bad)
pop
jns
sbb
and
loop
aad
je
pusha
out
sub
jecxz
inc
popa
mov
stos
xor
outs
pusha
sub
imul
pop
jo
test
add
push
jg
call
shl
pusha
mov
jmp
cmp
pop
nop
cli
jae
mov
call
cmps
repnz
es
movs
mov
xchg
sub
jmp
punpckhdq
int3
and
dec
pop
mov
dec
fst
cs
push
mov
xor
dec
aas
jmp
mov
jg
pop
loopne
ret
das
(bad)
cld
in
mov
daa
sbb
out
js
sti
adc
aas
fdiv
test
sub
push
mov
test
or
inc
sub
shl
jne
jg
popa
test
xchg
pushf
(bad)
retf
test
shr
adc
cmps
dec
push
(bad)
xor
jae
outs
lea
mov
aam
fidiv
jmp
jmp
xor
jge
sub
test
mov
ds
push
ins
push
fdivr
xlat
fidiv
pop
gs
sbb
push
and
movzx
sbb
shr
and
jnp
lods
nop
xchg
bound
sub
cmp
popf
test
jp
dec
test
adc
mov
adc
mov
ds
add
scas
mov
push
xchg
inc
pop
jmp
mov
push
enter
cmps
pop
sbb
loopne
outs
std
mov
push
es
mov
lock
shl
fist
jp
and
mov
push
jp
lods
pop
or
shr
call
xchg
push
adc
test
imul
jmp
cld
int
daa
pop
cld
stc
repnz
out
pop
es
enter
loopne
pop
push
lds
pop
shr
sub
jl
jmp
fistp
and
mov
pop
pop
in
pop
in
test
xlat
imul
adc
mov
dec
jno
add
jno
jb
adc
jmp
pusha
sub
lea
(bad)
push
ins
and
pop
mov
fisttp
xchg
push
cmp
clc
cmp
jno
js
pop
sub
ins
aad
jmp
sbb
test
aad
outs
push
xor
pop
xchg
jp
inc
pop
mov
or
dec
mov
rcr
pop
int
xor
in
imul
je
hlt
jp
stos
jae
jns
mov
out
loop
xor
inc
mov
xor
inc
xlat
test
enter
pop
mov
into
pop
fcomp
mov
mov
loopne
call
aad
lea
(bad)
mov
test
das
push
dec
push
mov
test
gs
daa
clc
ds
sahf
jp
xchg
add
movs
jl
int
adc
push
fnstenv
jge
scas
out
fidivr
icebp
loop
pop
xchg
dec
mov
cld
shl
pop
sub
dec
or
out
xor
inc
add
mov
fidiv
paddw
and
adc
repnz
lods
cmp
call
or
mov
movs
push
fild
call
mov
sbb
jmp
pop
movs
aaa
push
mov
sub
pushf
(bad)
sub
mov
or
xor
inc
(bad)
mov
mov
xchg
sahf
xor
fnstsw
push
movs
pushf
lds
aad
retf
push
xchg
sub
and
sub
inc
xor
sub
mov
sub
add
sbb
cmp
push
retf
jb
xor
push
out
push
cs
pop
push
cdq
inc
add
icebp
jp
mov
test
rcr
xchg
ret
aad
fild
ss
mov
mov
(bad)
out
rcr
xor
jo
xchg
popf
sti
hlt
lods
add
ret
jbe
xchg
pop
dec
pop
in
or
xor
and
es
or
jno
xlat
ja
dec
stos
shr
outs
cld
out
mov
jg
repnz
(bad)
loopne
sahf
mov
inc
sahf
push
add
or
adc
xor
cwde
popf
imul
repnz
sub
repnz
xlat
xchg
or
loop
or
loope
test
mov
push
daa
ins
pushf
or
iret
dec
xlat
or
mov
adc
lea
xchg
push
mov
out
aad
sbb
imul
scas
mov
(bad)
fldcw
stos
lods
scas
scas
inc
fs
jmp
xor
bound
and
mov
xor
pop
mov
test
push
mov
dec
inc
fldcw
sbb
movs
rol
cdq
xchg
add
xchg
pop
in
add
add
xor
adc
mov
inc
pop
mov
stos
jae
jle
jb
je
push
pop
mov
xchg
push
dec
and
cmc
jnp
outs
aas
push
jmp
push
mov
xchg
jecxz
int3
call
aad
and
xchg
outs
ja
lock
xor
shl
retf
jae
scas
mov
and
in
in
jbe
outs
data16
or
loopne
iret
stc
mov
sbb
xor
stc
ror
not
aam
aam
inc
jle
fisubr
jecxz
sahf
pop
pop
jp
adc
in
(bad)
pop
ds
repnz
mov
ds
jg
mov
mov
mov
sbb
cwde
lods
inc
push
or
rol
xchg
or
out
mov
add
inc
mov
push
jno
dec
cmc
sti
cmp
inc
outs
push
push
and
add
lahf
ret
xor
or
mov
ret
mov
fldenv
popa
(bad)
ret
add
pop
imul
aam
mov
hlt
cmp
sub
aad
push
cdq
mov
pushw
adc
nop
sti
ret
(bad)
lahf
int
stos
add
les
mov
mov
jns
cdq
adc
xor
pushf
inc
jg
add
or
pop
xchg
icebp
jmp
push
cdq
fisttp
and
aas
hlt
jmp
ins
and
xchg
push
pop
movs
mov
mov
xchg
mov
sbb
mov
shl
dec
mov
xchg
dec
xor
sub
shl
dec
into
add
popf
xchg
add
in
and
or
pop
and
adc
daa
push
inc
sub
mov
xchg
cdq
mov
fstp
mov
adc
jmp
mov
add
lahf
inc
cdq
sbb
sub
cmp
sbb
cmps
push
mov
jmp
imul
adc
jae
mov
test
jne
inc
xchg
js
jmp
ja
pusha
push
shl
push
add
add
loop
push
xor
(bad)
lds
dec
jae
int3
int3
hlt
(bad)
(bad)
std
scas
dec
out
mov
int3
adc
popa
mul
int
push
aaa
jb
aaa
outs
mov
out
int3
(bad)
fild
outs
out
addr16
loope
nop
cmp
popf
jmp
mov
fsubr
shl
sbb
lock
stos
mov
or
and
rcl
xlat
cmc
addr16
or
adc
cmps
outs
pop
mov
xchg
add
mov
add
sub
inc
retf
fadd
dec
xor
and
into
test
cs
jmp
retf
ss
push
fdivr
add
hlt
enter
pop
mov
jne
lds
sub
pop
fisttp
fld
movs
mov
xlat
(bad)
jg
jnp
enter
retf
add
clc
movs
in
mov
cmp
xor
jge
(bad)
sub
xor
call
mov
ss
sti
lahf
cmps
dec
aam
dec
loop
mov
into
push
icebp
mov
aad
mov
and
adc
jecxz
mov
shl
push
les
mov
movs
push
stos
sti
jb
clc
xor
(bad)
sti
je
(bad)
add
jmp
jae
es
stos
pop
outs
sbb
cwde
xlat
outs
sbb
jmp
lods
pop
mov
repz
mov
fdiv
or
xchg
mov
(bad)
stc
mov
ja
xchg
xchg
xchg
pop
add
mov
jp
sbb
cmps
int
inc
fdivr
jle
pop
shl
stos
(bad)
jae
es
stos
outs
lods
daa
in
sahf
int3
mov
push
test
mov
pop
pusha
pop
test
imul
test
in
imul
add
cmp
mov
daa
mov
cmp
(bad)
fs
(bad)
loop
xchg
clc
dec
inc
stos
scas
jbe
push
fs
aam
pushf
retf
jge
xchg
inc
jp
pop
stos
es
or
dec
mov
add
ins
sub
cmpxchg
rol
dec
push
hlt
jnp
out
addr16
(bad)
retf
xchg
and
hlt
push
jo
mov
(bad)
ret
or
jae
mov
add
sbb
imul
loopne
not
retf
sbb
mov
dec
test
cmp
jo
outs
jo
out
pop
push
pop
icebp
add
clc
loope
(bad)
std
pushf
outs
out
mov
jl
mov
ins
iret
icebp
repz
outs
push
xor
ret
jge
out
out
(bad)
sti
add
imul
or
popf
fcmovnbe
outs
icebp
fs
inc
ror
cmp
js
icebp
sbb
mov
jmp
in
in
push
test
and
adc
ror
cmp
shr
loop
stos
pop
fwait
xor
inc
rcl
retf
loop
mov
popf
cmp
out
arpl
fstp
push
in
loop
pop
das
gs
pop
cld
dec
xor
cli
shr
iret
scas
das
mov
sbb
inc
xor
push
inc
sub
popa
imul
jle
cmp
xchg
pushf
push
cmp
adc
cmp
or
pusha
cmp
(bad)
sbb
aas
iret
xlat
or
adc
jns
mov
mov
jne
ret
pushw
mov
jo
scas
mov
ins
jecxz
es
je
movs
jl
add
inc
and
test
stos
call
scas
mov
rcl
(bad)
std
pop
pop
loop
mov
(bad)
icebp
std
neg
jnp
stos
jl
mul
aas
jl
into
cmc
pop
ds
lock
pop
(bad)
cld
sbb
cli
popf
addr16
xchg
into
mov
pop
mov
(bad)
lock
lock
adc
jle
scas
cmp
inc
aam
jns
fs
fisubr
out
dec
repz
(bad)
jno
cmp
mov
jle
or
xchg
dec
cld
jno
xor
inc
in
les
adc
lds
arpl
lea
fnsave
xchg
popa
ror
cmovbe
out
xchg
aam
mov
lds
fwait
dec
sbb
or
fdivr
shl
aas
jnp
cwde
addr16
outs
cmp
cmp
aad
loopne
push
iretw
adc
fdivr
lods
into
int3
sbb
ds
(bad)
xlat
aaa
cwde
leave
pushf
xor
call
repnz
and
movd
popa
sub
sub
xor
sti
lea
pop
sub
ret
loopne
xchg
pop
and
and
jae
and
sbb
dec
in
aas
sub
stos
adc
fdivr
xor
pop
retf
jmp
rcl
xor
mov
out
sti
pop
mov
(bad)
dec
jle
stos
pop
mov
cld
jl
pop
cmc
pop
pop
std
ds
cmc
out
fistp
aaa
ret
nop
stc
rcr
(bad)
aas
jo
cmp
out
cmp
pop
(bad)
call
leave
jmp
mov
loop
fsub
mov
fdivr
shr
dec
lahf
mov
ja
rcl
xchg
mov
adc
push
adc
xor
fwait
retf
or
xor
push
inc
test
mov
dec
pop
adc
(bad)
adc
pop
and
xchg
xor
loop
mov
push
pushf
int
mov
out
aam
and
je
cmc
pop
pushf
daa
or
fnstcw
mov
sbb
mov
mov
sbb
and
cmp
mov
ret
cld
jmp
out
mov
pop
push
arpl
mov
sub
mov
iret
cmp
add
adc
pop
add
ficomp
call
clc
movs
fisubr
add
stos
jmp
inc
hlt
inc
aad
jle
jmp
or
dec
jo
mov
mov
jg
pop
stc
shl
(bad)
jg
idiv
cli
jge
in
pop
aas
(bad)
aad
mov
sti
cmp
add
push
pop
jg
inc
jns
sti
(bad)
jg
sbb
xor
mov
faddp
les
arpl
out
sti
mov
(bad)
div
push
std
loop
cmp
inc
stos
jle
bound
dec
out
xchg
jmp
cmp
sar
sub
call
sbb
(bad)
push
(bad)
clc
neg
jge
(bad)
pop
jg
imul
outs
cmp
jmp
pop
ds
aam
call
push
pop
test
stos
cwde
push
and
add
(bad)
call
pop
xlat
mov
mov
jl
mov
jne
dec
add
cmc
out
mov
data16
dec
or
(bad)
sahf
add
dec
inc
pop
pushf
inc
lock
or
mov
fldenv
and
shr
cli
xchg
xlat
addr16
pushf
mov
mov
retf
jecxz
or
sub
push
sti
repnz
(bad)
push
das
aad
sahf
pop
popf
enter
cmps
pop
push
pop
add
jecxz
test
xor
lods
add
test
test
dec
and
mov
call
pop
inc
pop
push
call
aad
push
or
cmp
retf
push
popf
cmp
sbb
rol
stos
stos
fstp
adc
je
fnsave
(bad)
enter
(bad)
dec
pop
cmp
mov
pop
jg
cld
stc
fistp
sar
cld
clc
jecxz
mov
sub
mov
cmp
jecxz
aas
mov
js
inc
pop
lods
std
lock
mov
jl
mov
mov
iret
repnz
adc
(bad)
fisttp
cmp
or
call
cld
rcr
sbb
cmp
jg
(bad)
sahf
sti
sti
(bad)
mov
add
dec
(bad)
sti
xchg
add
adc
repnz
add
push
inc
jnp
mov
inc
dec
dec
je
sbb
pop
rcl
mov
inc
jecxz
js
fs
or
sub
pop
outs
ret
in
jmp
jl
jle
jae
add
xchg
pop
scas
jno
mov
mov
mov
or
mov
xlat
idiv
jmp
ret
push
sbb
inc
neg
xchg
jg
int
xchg
aas
pop
mov
stc
enter
inc
and
and
xchg
test
jecxz
add
(bad)
out
call
adc
ror
adc
fld
add
push
pop
sbb
cmp
retf
or
inc
arpl
and
add
fwait
shl
mov
lock
lds
cmps
pop
retf
adc
outs
mov
imul
out
fyl2xp1
mul
pop
pop
fs
test
pop
movd
xchg
in
stc
mov
mov
(bad)
cmp
jns
addr16
loop
retf
stc
leave
mov
lock
arpl
adc
xchg
xchg
jb
in
cmp
jg
loopne
clc
mov
jecxz
cmp
cmp
lock
mov
xor
adc
test
es
or
(bad)
int
js
pop
inc
xlat
cmp
addr16
lahf
or
loop
add
inc
scas
and
push
not
dec
cmps
push
scas
pop
inc
jno
add
imul
leave
movs
dec
mov
mov
sqrtps
or
jbe
push
pushf
ret
fisubr
je
popf
pop
sahf
jl
test
push
ror
pop
test
retf
push
aas
sub
arpl
mov
loop
pop
aam
xor
add
or
push
iret
mov
mov
sub
lahf
bound
push
xor
pop
sbb
shr
shl
neg
mov
neg
add
iret
dec
dec
sbb
xor
add
std
outs
(bad)
xchg
sti
sbb
pop
aas
out
jge
loopne
paddsb
or
dec
and
jle
dec
mov
test
fnstenv
bound
xchg
std
(bad)
xchg
aas
jno
push
loop
out
arpl
in
popa
push
pop
mov
mov
js
sahf
ret
dec
fs
movs
mov
pop
retf
pusha
sbb
push
hlt
mov
(bad)
sub
xchg
sbb
adc
xchg
lock
cdq
test
xor
jb
xchg
call
cld
(bad)
inc
jmp
cld
push
fidivr
mov
pop
sbb
loopne
add
sub
call
imul
push
iret
push
lahf
in
int3
(bad)
leave
mov
data16
jnp
fdiv
rol
pop
sbb
retf
movs
leave
push
sub
frstor
mov
movs
in
dec
xor
loopne
into
push
cmps
push
pop
enter
out
jecxz
stos
mov
mov
adc
mov
jbe
test
xchg
sub
imul
stc
js
xchg
fcomp
das
in
fisttp
cmp
out
fisub
sbb
push
pop
mov
mov
out
(bad)
lods
adc
xor
xor
pop
std
jmp
mov
mov
das
fst
jnp
jb
punpckhbw
ror
pop
cmps
outs
in
call
ret
lea
leave
push
loopne
ja
jnp
stc
or
dec
outs
rcr
loopne
test
cmps
xor
test
cmps
sbb
in
aaa
mov
dec
cmp
dec
mov
sar
push
push
(bad)
cdq
jnp
scas
out
xchg
ret
push
in
jns
pusha
ds
pop
sbb
pop
fbld
add
push
or
ret
push
and
out
mov
mov
sbb
mov
lock
jae
jmp
mov
arpl
retf
xchg
sub
scas
outs
cld
test
jge
test
adc
mov
popf
hlt
mov
add
sbb
popa
inc
ss
or
aad
push
mov
sbb
shl
adc
dec
pop
add
inc
or
(bad)
out
xor
test
pop
div
xchg
sub
data16
dec
mov
out
and
(bad)
aam
mov
loop
jecxz
imul
test
adc
in
pop
leave
std
rol
mov
sbb
mov
sbb
scas
jo
mov
push
push
jmp
xchg
jae
arpl
xchg
cmp
out
xor
cmp
outs
shr
addr16
mov
call
out
cmp
cmp
fimul
jp
dec
push
adc
leave
pop
jns
movs
mov
sub
jae
mov
aam
iret
xor
push
aam
cmp
fisubr
push
cmps
pop
dec
jp
inc
jnp
sub
fnstenv
inc
ror
pushf
inc
or
retf
loopne
dec
imul
fwait
xchg
test
sbb
mov
mov
ins
out
jle
in
dec
(bad)
ja
or
cwde
fucom
jecxz
nop
(bad)
sbb
(bad)
sbb
ins
ins
sbb
pop
fidiv
mov
sub
xchg
inc
adc
ret
repnz
enter
and
or
or
jo
or
aad
xchg
inc
dec
mov
adc
mov
push
xor
cs
std
inc
mov
add
retf
fisubr
int
icebp
add
sub
cmp
aas
push
das
sbb
int3
mov
sub
icebp
fidivr
aas
in
mov
test
idiv
popf
dec
stos
icebp
mov
ja
lahf
in
out
int
add
into
daa
iret
cli
add
mov
cwde
aaa
sbb
test
jmp
or
or
cmp
stos
loopne
push
jb
fistp
mov
mov
fisubr
sub
ins
aam
pusha
push
and
shl
out
std
mov
dec
and
in
lds
test
test
fs
pop
jle
mov
fwait
pop
mov
clc
movs
test
ins
data16
inc
mov
stos
mov
mov
xchg
inc
adc
fwait
add
lods
mov
push
and
dec
dec
mov
lods
sbb
adc
sbb
int3
and
mov
xchg
xchg
add
retf
fisubr
push
mov
xor
xor
mov
js
and
pop
jp
call
sub
mov
out
push
fstp
ror
dec
pushf
mov
std
jmp
jb
arpl
retf
stc
mov
add
nop
push
jbe
push
push
push
ja
pop
cmps
daa
es
leave
aam
jmp
xchg
inc
scas
clc
(bad)
adc
enter
fdivr
aas
gs
xor
cmps
sahf
mov
xor
xor
shl
cmp
shr
mov
adc
push
into
xor
je
and
dec
sahf
test
xchg
fcom
int
or
push
and
hlt
adc
loope
dec
out
cs
and
std
fisttp
call
aas
clc
call
hlt
loope
mov
jp
enter
xor
call
movs
(bad)
lea
into
adc
enter
sub
and
rcr
adc
ins
jg
call
inc
inc
add
sti
jns
jge
dec
push
data16
or
push
cmp
pop
aam
push
jnp
jp
mov
and
gs
leave
pop
leave
xchg
aam
mov
dec
push
out
sub
shl
(bad)
iret
aas
mov
push
scas
fimul
fdiv
xor
mov
sbb
(bad)
ret
xchg
cmp
lock
out
leave
aam
cld
clc
push
jl
jns
or
xchg
cdq
mov
not
out
dec
mov
sub
ror
mov
fdivp
icebp
xlat
ds
sahf
pop
cmc
cmp
fistp
xchg
mov
std
sar
fnsave
add
es
pop
inc
repnz
push
sbb
add
rcr
mov
loopne
dec
lea
scas
fldenv
push
adc
leave
imul
add
fstp
jmp
cmc
fldcw
xchg
int3
push
(bad)
(bad)
cld
mov
aas
add
inc
and
(bad)
dec
mov
retf
add
and
not
pop
cmp
cli
jmp
cmc
test
lea
xchg
or
mov
add
hlt
sbb
lock
call
nop
dec
lock
or
and
or
movs
cmps
fs
sub
lods
push
int
(bad)
pop
xchg
inc
arpl
gs
mov
jae
mov
js
push
and
out
mov
test
into
dec
jl
add
aas
push
cmp
(bad)
scas
imul
ja
loop
div
movs
mov
out
xlat
into
out
inc
add
clc
int3
mov
(bad)
test
inc
cwde
(bad)
fidivr
cmp
fnstcw
pop
fstp
das
(bad)
scas
(bad)
jmp
sbb
ror
inc
test
dec
pop
clc
call
bound
inc
mov
fistp
mov
loope
cdq
into
mov
pop
sub
add
shr
cmc
pop
jge
pop
and
cmp
int3
mov
ja
cmp
aas
xchg
mov
sub
mov
shl
test
jbe
jae
push
and
lock
mov
and
lds
mov
clc
iret
push
and
adc
add
adc
mov
mov
repz
mov
iret
test
enter
cmp
pop
cmp
cmp
sbb
mov
imul
shl
and
jmp
into
rol
popf
pop
jno
sub
inc
addr16
dec
inc
pop
jb
scas
cmp
int
jg
sbb
fistp
mov
fbstp
jno
inc
psllw
aaa
mov
cli
inc
mov
dec
push
pop
mov
dec
mov
dec
pop
jmp
jle
cmp
mov
jns
inc
dec
xor
je
in
pop
mov
sti
ds
retf
cmps
pop
movs
sbb
test
xchg
mov
and
push
add
xlat
mov
and
jge
push
sbb
dec
daa
pusha
jnp
xor
jmp
mov
pop
lods
lahf
jmp
(bad)
iret
inc
mov
(bad)
fisttp
(bad)
jl
and
shr
imul
rcl
and
iret
inc
rcr
and
rcr
aaa
daa
(bad)
xchg
cmps
xchg
xlat
aaa
es
aam
(bad)
and
xor
add
inc
adc
sbb
pop
or
sub
dec
and
mov
add
or
int
or
out
push
clc
aad
cmps
push
imul
pushf
and
xchg
xchg
mov
xchg
dec
test
aam
pop
inc
bound
push
pushf
not
push
push
push
movs
pop
adc
nop
dec
pushf
dec
pop
mov
xor
xchg
rcr
jb
sti
fnstsw
sbb
popa
scas
not
mov
dec
out
sub
xlat
push
sbb
cmp
pop
mov
out
jnp
out
(bad)
out
jnp
loop
movs
xchg
mov
out
iret
jb
or
loope
pushf
pop
push
mov
lods
jns
repz
jmp
ins
ds
sar
push
fdivr
iret
and
push
add
mov
(bad)
mul
or
push
sbb
lds
push
push
stc
pushf
loop
pop
push
fdivp
push
push
push
hlt
add
ficomp
push
add
mov
push
jo
pop
loope
push
sub
lds
movs
jae
sub
movs
shl
into
bound
mov
scas
pop
dec
popf
pop
fiadd
in
loope
push
lock
mov
xchg
mov
push
aaa
inc
inc
xchg
test
xchg
or
jmp
hlt
std
in
arpl
cld
sub
lock
xor
test
xchg
loope
mov
ins
dec
adc
or
enter
push
loop
mov
push
and
xor
add
lds
xor
pop
adc
js
fwait
je
jmp
retf
fisttp
out
fucomp
jecxz
(bad)
cvtps2pd
out
jl
pop
dec
(bad)
xor
mov
ds
xchg
sbb
add
lods
fdivrp
in
aaa
cmp
inc
ret
xor
icebp
(bad)
(bad)
sbb
push
jns
fistp
lahf
sti
push
aas
in
cmps
add
inc
fwait
push
jae
mov
and
pop
mov
xchg
aam
jo
mov
sbb
aam
lds
sub
xor
call
mov
pushf
and
js
push
rep
fwait
push
pop
scas
sub
add
add
mov
into
push
mov
shl
icebp
lea
pop
ret
(bad)
stos
nop
pop
out
ficomp
mov
jb
adc
xchg
dec
or
push
aad
loope
and
push
jbe
ror
arpl
sub
enter
es
push
push
(bad)
dec
bound
(bad)
mov
(bad)
call
out
sbb
jae
fidivr
pop
lds
dec
xor
sti
cmp
out
jmp
inc
mov
mov
fistp
ja
jae
push
scas
hlt
aaa
sahf
mov
dec
out
jnp
mov
or
btr
leave
std
mov
lock
push
sbb
dec
jnp
and
std
outs
xchg
int
mov
aaa
es
loop
jge
dec
dec
(bad)
cmc
sub
(bad)
or
stos
and
xchg
and
push
sub
and
lods
sbb
mov
in
mov
mov
mov
ja
xchg
in
cdq
(bad)
jne
stos
aas
fiadd
cmc
shl
or
xchg
sub
pusha
mov
movs
daa
enter
jae
or
mov
xchg
xchg
xchg
ret
jg
clc
out
enter
nop
pop
mov
or
cmp
in
inc
mov
pusha
lods
out
dec
daa
dec
cdq
les
jmp
(bad)
cdq
adc
sub
stos
add
imul
out
bound
pop
push
shl
sbb
cvtps2pd
(bad)
mov
nop
je
test
inc
mov
adc
mov
stc
cmp
repz
outs
cld
jmp
push
dec
cmp
xchg
sbb
xchg
push
lahf
in
push
ja
jg
jmp
cwde
add
jg
cmp
adc
dec
fnsave
and
and
ret
test
mov
popf
mov
push
xor
push
adc
sbb
sahf
inc
test
hlt
(bad)
xchg
sub
push
scas
push
mov
push
sub
dec
rcl
cmp
daa
imul
mov
clc
sar
in
aam
dec
pop
pop
ds
fadd
add
cmp
push
push
mov
daa
jns
add
pop
mov
aas
xchg
or
popa
daa
sar
or
test
scas
loopne
inc
adc
lahf
jbe
push
inc
or
xchg
mov
out
leave
pop
aad
retf
cmp
sbb
and
dec
pop
pusha
daa
add
outs
dec
and
into
fdivr
scas
push
idiv
int
push
mov
in
pop
loop
mov
cmp
nop
cmps
fwait
neg
adc
test
jae
fwait
push
cmp
test
int
into
popf
clc
mov
sti
lods
lods
std
lahf
pop
int
mov
xor
(bad)
(bad)
cdq
stos
fld
gs
pop
or
stc
in
clc
in
add
fnclex
rcl
mov
dec
out
les
sub
mov
mov
or
adc
inc
ins
lahf
jp
adc
xor
or
adc
imul
popa
pop
into
mov
xchg
pop
ss
mov
ja
ficomp
jge
cld
ret
out
lea
call
dec
lods
scas
lods
pop
sbb
pop
adc
mov
fisttp
test
shl
rcl
lds
sbb
imul
sbb
mov
imul
lahf
cmp
adc
pop
arpl
or
and
fimul
aad
cmp
pusha
out
adc
or
cmp
aam
fbstp
adc
fmul
adc
and
div
pop
mov
jo
dec
je
in
ja
pop
lods
fwait
ja
xor
fsub
int
imul
ficom
xchg
arpl
and
and
jmp
(bad)
pop
push
call
mov
pop
xchg
fdivr
mov
ror
jmp
mov
or
or
addr16
xor
lods
adc
stc
mov
jle
mov
or
mov
jmp
icebp
rcl
pusha
call
mov
lods
sbb
or
jp
loop
je
mov
loop
inc
dec
sub
cmps
sub
dec
xchg
adc
(bad)
icebp
mov
pop
xlat
(bad)
mov
cmps
jne
dec
inc
daa
(bad)
xchg
lea
xchg
sti
xchg
inc
ja
pop
fidivr
sahf
pusha
sbb
add
dec
sub
int
rol
lock
mov
xchg
cmp
js
movs
add
cmp
dec
add
push
jae
leave
mov
lock
les
xchg
inc
cmp
dec
or
push
add
mov
add
sbb
jae
leave
mov
push
dec
outs
nop
movs
test
mov
sub
jmp
stos
adc
jnp
dec
jo
or
push
in
and
out
inc
xor
mul
mov
cmps
inc
pop
in
dec
xor
jns
cmps
or
sub
ret
js
push
ret
jl
jmp
(bad)
mov
fwait
mov
mov
push
inc
lds
sbb
sub
push
leave
mov
and
mov
add
mov
lock
xchg
dec
dec
sub
sub
enter
inc
add
jge
push
dec
adc
mov
and
(bad)
pushf
inc
fsubp
pusha
mov
in
pusha
mov
mov
cmc
lea
jae
lea
fidiv
push
adc
loopne
cmps
(bad)
cmps
(bad)
(bad)
nop
mov
out
jne
rcl
add
inc
lahf
mov
rol
pop
in
test
jbe
push
dec
dec
das
cmp
(bad)
bound
out
rcr
loopne
enter
pop
inc
sbb
xor
push
pushf
push
or
je
jmp
idiv
fsub
call
mov
push
mov
or
and
mov
scas
dec
xor
bound
es
dec
adc
adc
pop
sub
shr
retf
mov
or
enter
and
cmp
ja
pop
aad
and
dec
and
jns
adc
ins
jecxz
mov
popf
loope
call
into
add
pop
popf
in
pop
mov
rcl
movs
inc
je
shl
sbb
fidiv
repnz
mov
(bad)
shr
push
push
adc
xchg
retf
adc
xor
div
push
push
mov
add
or
xlat
jne
jno
enter
cs
push
jmp
sbb
add
lods
movsx
ss
cmp
sub
or
clc
shr
sub
mov
and
mov
nop
inc
dec
icebp
(bad)
mov
shl
adc
add
cmp
cdq
and
jge
lods
push
push
pop
adc
in
inc
sbb
bound
jecxz
inc
js
push
xor
jno
fisttp
and
or
add
sti
lea
(bad)
push
and
dec
scas
call
mov
sbb
pusha
mov
push
adc
sbb
dec
lods
sahf
mov
mov
and
sti
enter
mov
adc
push
rcr
adc
mov
mov
ss
test
xor
faddp
add
mov
shl
sub
cmp
out
or
push
mov
aaa
outs
push
sbb
or
aas
jmp
adc
or
xor
xor
inc
add
sub
sub
sar
jmp
dec
xchg
jo
and
cmc
dec
repz
adc
xor
cmp
leave
test
jge
cwde
sbb
gs
fadd
jnp
cmp
adc
jbe
test
bound
xor
(bad)
jae
and
inc
in
xchg
punpckldq
mov
movs
cmp
xchg
mov
add
add
jecxz
xor
push
adc
dec
push
push
or
cmp
sub
fcomp
xchg
push
or
mov
push
or
push
cmp
jns
lock
sbb
cmp
mov
test
and
sub
sbb
pop
and
xchg
call
xor
lods
cmp
inc
scas
pop
push
test
enter
inc
ds
inc
jo
arpl
sar
arpl
sbb
add
mov
les
xor
imul
and
and
sub
bound
dec
fsubr
pop
pusha
sbb
cmp
dec
xor
mov
outs
jb
std
lea
(bad)
adc
dec
sub
aam
jl
dec
mov
inc
fmul
jb
xchg
xor
pop
add
or
dec
pushf
dec
retf
in
in
cmp
pop
leave
dec
inc
adc
mov
ds
call
scas
pop
mov
cli
sub
inc
in
adc
add
dec
sub
jno
xor
adc
sub
fs
fldenv
pop
push
ss
pop
cmps
xor
and
loopne
enter
icebp
xor
dec
shr
inc
call
jg
xor
jmp
sbb
sub
icebp
mov
cmp
outs
loop
push
sbb
sub
pop
hlt
dec
push
sub
out
sbb
mov
or
cdq
or
mov
xor
pop
ror
getsec
lea
or
inc
loope
bound
sub
and
mov
push
dec
and
dec
ins
inc
mov
stos
add
mov
cs
cmp
mov
push
sbb
sbb
fiadd
xlat
sbb
sti
ss
mov
pop
push
cmp
and
loope
xor
push
or
es
lods
xchg
xlat
or
das
sub
(bad)
push
pop
add
xchg
pop
jp
fstp
mov
jl
mov
xor
retf
cmps
and
ins
jnp
sbb
inc
jmp
vcomiss
pop
in
mov
aad
and
push
add
xchg
mov
xor
xchg
out
xchg
cdq
or
pop
dec
sub
xchg
jmp
aad
xor
or
adc
jnp
xor
push
in
pop
lea
add
or
int
pop
pusha
sbb
out
xchg
dec
or
outs
mov
jge
scas
jg
sbb
nop
test
sbb
xor
and
cmp
jns
ins
dec
lods
cmc
or
or
add
and
mov
xchg
add
les
and
add
mov
shl
loop
rcr
push
ds
xchg
in
aam
mov
xor
jle
jb
or
or
je
fwait
jns
cmp
js
or
push
sbb
fiadd
and
inc
and
push
jb
movs
popa
rcr
inc
xchg
div
push
cmp
repnz
xor
dec
sbb
test
mov
cwde
test
xor
popf
adc
and
mov
bound
dec
push
sbb
int3
xor
aad
ret
adc
aaa
jecxz
in
test
mov
sbb
inc
adc
fmul
pop
mov
clc
or
inc
and
fisubr
popa
pusha
cmp
dec
imul
shr
jnp
ret
int3
add
jno
dec
and
adc
out
ror
(bad)
sbb
and
and
xor
mov
push
ret
mov
outs
ds
xor
adc
sbb
push
xlat
mov
loop
scas
mov
mov
out
in
repz
dec
out
mov
(bad)
in
cld
and
mov
fadd
push
xlat
sbb
jl
out
push
out
or
jbe
mov
or
fxch
mov
and
jae
and
dec
push
ret
sbb
jmp
mov
in
mov
mov
adc
test
add
test
sbb
or
cld
xchg
inc
pmulhuw
popa
ins
adc
movs
hlt
addr16
pop
pop
fisub
pop
seto
add
not
mov
mov
leave
xor
in
int3
and
outs
ret
cmp
aad
sahf
shr
ja
mov
jb
jecxz
fdiv
xor
jecxz
or
sbb
mov
mov
sbb
mov
call
xchg
clc
test
push
push
jmp
push
push
jmp
fimul
neg
dec
pop
xchg
hlt
mov
pop
test
mov
or
ins
mov
enter
rol
add
push
sub
inc
call
sbb
loope
pop
iret
pop
xchg
stc
addr16
retf
mov
retf
mov
xchg
mov
in
xor
in
mov
imul
scas
stc
scas
mov
rcr
cmp
int
mov
add
cmp
cmp
jp
jecxz
cmp
mov
cdq
ret
scas
bound
mov
inc
push
adc
xor
retf
popa
bound
in
dec
or
xchg
pop
xchg
fisttp
es
add
mov
adc
cmp
hlt
hlt
test
or
daa
pop
dec
jge
and
cwde
enter
clc
pop
repnz
lock
cmps
pushf
push
scas
inc
fcomp
mov
lods
inc
repnz
shl
ds
or
retf
test
or
(bad)
out
mov
pop
test
test
pushf
aad
adc
adc
xchg
bound
xor
ja
jbe
sbb
out
shr
cmps
push
sub
addr16
cmp
fiadd
call
lahf
(bad)
shr
mov
mov
sbb
ret
adc
and
push
jp
aad
mov
jb
retf
xchg
call
rcr
stc
lahf
mov
pop
mov
mov
mov
mov
repz
(bad)
dec
fwait
(bad)
sar
ret
arpl
mov
dec
or
xchg
leave
adc
cmc
movs
imul
and
call
aaa
push
fistp
shl
sti
xlat
test
xchg
dec
test
push
sbb
sub
dec
lods
loopne
loop
adc
popf
ins
dec
push
push
mov
mov
mov
push
jp
je
shr
xlat
in
and
xchg
xchg
(bad)
sub
inc
les
shr
mov
cdq
jecxz
into
jne
pop
sbb
fild
xor
mov
add
shl
or
mov
sbb
and
into
rol
test
call
imul
test
mov
jecxz
stos
nop
jb
pop
adc
repz
aaa
sti
xchg
mov
dec
jl
inc
jp
jmp
push
sbb
inc
push
rol
shl
dec
xor
leave
adc
fisttp
dec
xchg
ss
dec
test
or
je
rcr
fs
push
iret
in
loop
sub
cmps
cmc
lods
xlat
fisubr
pop
imul
fdivp
mov
fnstsw
fsub
leave
cmp
js
ret
addr16
xchg
ja
mov
fwait
(bad)
xchg
cmc
jge
ret
sub
(bad)
(bad)
lods
mov
mov
mov
lods
push
cmp
or
xor
inc
add
jno
sub
cdq
adc
sbb
dec
(bad)
jl
add
outs
add
inc
adc
pop
mov
mov
scas
mov
loope
push
mov
mov
(bad)
inc
jb
loop
(bad)
cmp
jmp
mov
shr
cmps
and
addr16
mov
xor
lock
(bad)
push
lods
(bad)
xchg
sbb
or
push
retf
mov
or
push
dec
and
xchg
or
mov
nop
dec
je
ja
popf
rcr
inc
cwde
cmp
or
inc
and
or
mov
into
push
call
add
fcomp
mov
adc
push
cli
unpcklps
nop
mov
mov
adc
out
sahf
xchg
iret
or
inc
test
(bad)
cmps
aad
and
cmp
(bad)
cdq
mov
jnp
cwde
cmps
push
retf
mov
sub
stos
or
sahf
bnd
int
push
enter
not
movs
xchg
rcl
mov
daa
ret
inc
adc
ja
popf
shufps
les
mov
in
js
es
xor
pop
fadd
xor
mov
mov
add
sbb
stc
cmp
push
mov
inc
cli
je
repz
cmp
dec
stos
pop
jne
adc
call
and
add
mov
pop
add
scas
xchg
pop
bound
fild
add
mov
nop
sar
fiadd
xchg
adc
and
adc
mov
mov
pop
sub
and
rcr
sub
pop
imul
xor
cmp
(bad)
jecxz
mov
dec
sbb
stos
mov
scas
sar
jecxz
jmp
into
inc
xor
adc
ret
lea
addr16
dec
sub
test
(bad)
in
leave
les
fldenv
lods
rcr
jbe
cmps
sub
xchg
inc
movs
adc
xchg
dec
cmp
or
lea
in
lock
sub
adc
sbb
mov
adc
fld
(bad)
sub
lahf
stc
(bad)
fcom
xchg
out
push
retf
xchg
xchg
(bad)
cmc
and
push
aaa
scas
or
lods
ins
lods
bt
cmps
js
enter
ret
fimul
adc
out
call
mov
int
test
cmp
cwde
mov
mov
pusha
adc
loope
not
shl
or
hlt
lds
mov
mov
mov
les
or
mov
inc
sahf
test
movs
add
sub
jo
sub
mov
push
jl
rcl
cmp
sub
inc
pop
(bad)
stos
test
js
sub
push
mov
cmps
vunpcklpd
push
sbb
or
jl
sub
dec
cmp
mov
movs
cdq
add
xchg
or
cmp
and
mov
imul
mov
pusha
and
dec
cmp
movs
mov
sub
xor
jmp
cld
inc
lea
push
arpl
dec
mov
movs
dec
call
std
inc
adc
and
or
shl
test
xchg
jbe
or
mov
out
or
retf
in
(bad)
and
sbb
or
adc
in
hlt
mov
es
enter
push
fdivr
jo
push
out
imul
movs
fidivr
daa
mov
inc
lods
push
aaa
pushf
jl
add
test
pop
daa
and
mov
idiv
sbb
pop
push
dec
sbb
pop
arpl
add
or
sbb
mov
or
inc
sbb
xor
push
cmp
pop
pop
xchg
imul
adc
shl
add
xchg
dec
mov
push
xor
js
mov
sbb
sbb
in
xor
loop
inc
test
sub
adc
mov
and
(bad)
xchg
ret
cmp
inc
comiss
dec
ds
dec
gs
xchg
xchg
and
dec
test
mov
aaa
adc
test
push
adc
add
retf
add
cwde
xlat
push
retf
mov
or
sahf
push
pop
nop
and
test
adc
xchg
sub
sbb
xor
daa
xchg
gs
xor
push
cmp
jp
sar
scas
inc
sti
daa
cld
add
ja
fwait
fwait
xchg
ret
cmp
pusha
xor
loop
mov
xchg
fld
inc
jg
call
mov
pop
loope
xor
mov
pop
fist
loopne
retf
xchg
mov
xor
mov
sbb
mov
adc
jmp
hlt
inc
xchg
inc
or
(bad)
adc
das
push
dec
imul
sub
add
adc
int
test
or
fldenv
int3
push
jecxz
inc
call
mov
inc
cwde
inc
mov
fbld
ror
int
lea
das
ror
aam
sahf
js
cmp
popf
cld
xor
sub
add
jl
cmp
inc
jecxz
lock
jecxz
xor
pusha
retf
add
add
mov
ss
dec
mov
and
dec
jmp
pop
dec
out
pop
inc
jo
or
dec
(bad)
pusha
pop
or
jns
push
mov
pop
aas
(bad)
push
xchg
inc
cmp
repnz
xchg
pop
or
or
or
sub
lahf
mov
push
scas
mov
std
jle
js
retf
loopne
fwait
push
cwde
and
push
xchg
adc
inc
push
retf
cmps
adc
or
adc
cmp
cdq
push
in
jno
std
test
jno
mov
mov
(bad)
popa
jne
inc
ss
dec
pop
mov
and
xchg
cmp
cmp
adc
add
xchg
or
pop
bound
mov
rol
and
pushf
cmp
nop
rcl
mov
dec
sub
or
fsubr
test
or
(bad)
(bad)
jo
add
bound
cmp
push
out
xlat
nop
add
and
dec
inc
fstp
jecxz
frstor
push
(bad)
sbb
inc
cmp
pop
push
sub
das
and
shl
es
push
shr
leave
mov
pop
push
mov
(bad)
jbe
lds
inc
test
movs
shl
fstp
cmc
stc
pop
pop
and
inc
adc
ins
ins
ret
mov
repnz
mov
pop
pop
push
mov
test
out
cmps
(bad)
and
sub
cli
push
push
push
rcr
pop
xchg
push
pop
and
jne
cmp
js
lds
push
mov
mov
bound
pushf
data16
ror
out
clc
xor
push
dec
arpl
imul
push
xchg
mov
and
ret
mov
sub
jbe
repz
jb
xor
mov
xor
pusha
xchg
cmp
and
leave
mov
xchg
imul
adc
pop
add
bound
add
mov
adc
cmp
and
push
call
clc
xchg
xchg
adc
pop
dec
xor
push
and
sub
or
cmp
push
xor
outs
loop
and
add
test
add
fs
or
jg
scas
test
enter
popf
add
xchg
addr16
sbb
cdq
aad
lahf
enter
push
inc
lock
movs
es
in
aad
outs
or
xor
out
adc
push
push
(bad)
push
nop
call
sti
and
gs
xchg
xchg
dec
es
and
and
xor
lds
add
mov
shl
xlat
sub
div
mov
mov
ret
in
rcr
mov
js
sahf
addr16
or
test
inc
call
sub
mov
mov
add
pop
pop
aas
and
iret
add
ret
xchg
mov
popf
idiv
mov
adc
pop
daa
ret
mov
ret
mov
sbb
(bad)
mov
into
adc
jb
cmp
or
inc
pop
je
or
and
inc
dec
or
sub
push
cdq
in
cmp
stos
pop
push
stos
lock
pop
push
std
xor
xor
push
xchg
push
or
mov
push
les
cmp
sub
test
dec
fisub
and
stos
(bad)
cwde
push
(bad)
popf
inc
mov
lea
sbb
out
sbb
sub
pop
xchg
ja
add
pop
sbb
test
push
or
pop
jle
jb
test
mov
xor
repnz
js
adc
mov
shl
cwde
movs
inc
ror
push
into
mov
sub
inc
add
bound
ret
fwait
dec
fmul
aad
mov
cmp
or
pop
pcmpgtd
ss
xlat
and
scas
push
cmp
scas
scas
js
movs
mov
imul
pop
pushf
push
cdq
dec
xchg
dec
cmp
dec
pushf
movs
push
and
mov
lock
fs
mov
cmc
mov
or
popa
and
das
gs
sbb
jns
or
fwait
push
ins
pop
push
pusha
xchg
ret
push
push
add
push
mov
mov
dec
inc
xor
mov
jo
sbb
and
shl
and
cwde
adc
fisub
(bad)
inc
xor
xor
cmps
shr
pushf
inc
test
inc
xchg
push
mov
aam
pop
cmps
xlat
cwde
fcomp
daa
int3
pushf
mov
jae
cwde
arpl
cld
scas
mov
popf
das
pop
mov
jge
rep
jp
out
lahf
sti
mov
outs
adc
retf
push
mov
fmul
add
cld
inc
retf
mov
add
inc
and
ins
mov
sbb
xor
mov
(bad)
shl
sub
stos
push
in
or
jle
mov
sub
(bad)
pop
jl
add
fyl2x
scas
popf
add
shl
sbb
fisub
jle
or
push
cli
rcl
shl
and
neg
cmps
out
ret
loope
rcr
test
mov
ret
std
dec
pop
xor
xor
xchg
lea
cmps
mov
sbb
push
mov
dec
jnp
jmp
lods
ins
mov
pop
mov
pop
push
mov
(bad)
xor
xor
mov
sub
loope
(bad)
call
outs
and
fs
adc
mov
fcom
sub
pop
ins
mov
cmp
icebp
icebp
icebp
mov
repz
repz
stos
cs
mov
or
ja
or
sbb
mov
xchg
pusha
push
jl
mov
mov
inc
addr16
fxtract
dec
lods
jle
fisttp
mov
jmp
out
ins
enter
je
es
adc
bound
xor
addr16
mov
and
xor
push
add
xor
fincstp
imul
push
lock
dec
mov
adc
xor
es
je
mov
push
lods
test
pop
fld
inc
push
and
inc
mov
loop
pop
pop
inc
popa
pop
sbb
jns
out
mov
jo
(bad)
fcmovu
mov
cs
ret
sub
adc
clc
xchg
add
loope
xchg
mov
mov
sub
loopne
mov
lea
xchg
fmul
outs
sbb
fdivrp
dec
test
jge
mov
dec
(bad)
(bad)
div
outs
adc
imul
int3
pop
adc
ins
xor
xchg
xor
int3
retf
push
fs
jmp
js
mov
xor
ins
sbb
cmps
mov
sbb
sub
jbe
pusha
lods
nop
cli
daa
jo
jmp
pop
mov
ins
(bad)
repnz
mov
cmc
mov
sub
test
adc
and
sahf
pop
xchg
or
(bad)
cmc
ror
cld
and
jae
(bad)
repz
aam
fld
or
adc
xchg
sti
adc
adc
fs
loope
mov
push
pop
xchg
shl
popf
push
scas
and
pop
data16
js
xchg
mov
shr
fs
inc
pop
lock
scas
dec
xchg
mov
adc
push
and
mov
cmp
out
sahf
fwait
movs
xchg
pop
in
mov
scas
pop
fdivr
jmp
stos
push
sub
push
xor
call
lods
in
shr
and
pusha
pop
js
pusha
mov
xor
aaa
cld
retf
or
sbb
cmp
icebp
bound
and
in
mov
or
adc
and
jecxz
iret
or
out
push
jno
or
xchg
pop
inc
pop
retf
leave
(bad)
shl
jbe
adc
scas
cs
sub
cld
push
jecxz
add
loope
mov
cdq
fdiv
test
adc
js
dec
cli
jbe
inc
xchg
bound
mov
aam
test
daa
mov
jge
inc
xor
mov
pushf
dec
xchg
jecxz
stos
cmc
shr
push
(bad)
clc
sar
jb
mov
int
adc
pop
sbb
stc
push
mov
bound
je
or
inc
add
pop
xor
lods
sbb
and
call
pop
leave
jg
in
cdq
clc
std
inc
fnstsw
xor
mov
scas
in
aas
jnp
loop
int3
xor
(bad)
mov
test
jne
pop
and
shld
shr
ds
mov
pop
mov
fs
mov
dec
ror
xor
inc
dec
pop
pop
mov
(bad)
mov
jnp
data16
das
mov
mov
ret
adc
or
je
sub
push
sbb
xchg
xchg
ins
adc
push
add
or
loope
call
pop
inc
cmp
dec
jmp
pop
dec
cs
jns
jns
aaa
add
mov
invd
sbb
je
mov
call
pushf
scas
sub
imul
loopne
ss
cmps
pop
jle
lods
in
jp
rcl
adc
in
loop
jle
(bad)
xor
sub
inc
or
cmps
dec
pop
pop
mov
mov
retf
mov
(bad)
push
lea
sub
add
scas
push
bound
mov
cs
sbb
lods
dec
xchg
imul
pop
fsubrp
jmp
aam
adc
fnstenv
mov
mov
mov
cs
(bad)
mov
cmp
cld
mov
sbb
dec
bound
sbb
dec
es
movaps
aam
push
imul
add
lds
std
neg
fbstp
xor
inc
ret
add
shr
aas
pop
test
and
outs
adc
or
mov
lahf
mov
pop
mov
inc
mov
imul
test
mov
fisttp
jbe
pop
stos
sti
jo
jnp
cdq
icebp
mov
movs
mov
sbb
and
(bad)
sbb
dec
sub
ins
sbb
or
jb
retf
bound
and
(bad)
sub
pop
add
ins
(bad)
nop
aas
mov
sti
mov
mov
mov
mov
or
in
enter
(bad)
scas
mov
xchg
mov
ficom
dec
dec
jle
sub
cwde
imul
mov
jmp
aam
loope
fadd
mov
lea
jmp
loope
mov
adc
outs
(bad)
jg
xchg
in
aas
inc
pop
push
cli
push
imul
std
test
add
stos
dec
nop
xor
imul
js
inc
ret
sbb
dec
inc
dec
out
aam
mov
mov
pushf
fdiv
push
and
adc
mov
test
or
xchg
mov
sbb
mov
xchg
mov
push
pop
pop
mov
in
dec
out
sbb
mov
and
cmp
jns
aaa
pop
call
jno
je
sub
and
ins
stc
in
inc
div
out
cmp
pop
das
dec
xchg
add
push
call
and
pop
int3
dec
mov
pop
retf
cmp
jle
add
imul
mov
jb
jecxz
leave
cs
and
mov
mov
sub
xor
je
mov
push
inc
push
push
dec
clc
push
ins
sub
aas
in
mov
(bad)
std
sar
out
jmp
cmp
lahf
std
in
rcl
ja
(bad)
ficom
adc
mov
adc
movs
ret
fidiv
movs
push
pop
mov
mov
in
pop
cmp
addr16
lods
mov
pop
imul
cs
adc
in
mov
(bad)
mov
push
jne
stos
dec
xor
ss
add
sub
das
(bad)
int
imul
arpl
call
xor
lds
or
out
ja
pusha
push
mov
mov
repz
jmp
dec
(bad)
stc
xor
lods
jae
clc
ss
push
sbb
sti
dec
test
fsub
mov
jbe
test
mov
jmp
jbe
shl
rcr
inc
test
ficomp
dec
test
sti
and
cmp
jbe
mov
xchg
movs
mov
mov
clc
lds
pushf
cmp
int
(bad)
cli
in
xor
(bad)
int3
push
bound
xchg
mov
jp
ins
and
test
push
idiv
out
sbb
vpsrld
dec
iret
cld
fld
mov
hlt
int3
test
mov
fadd
or
and
mov
inc
fucom
(bad)
daa
lods
out
xchg
mov
test
dec
rcl
rcl
adc
fldcw
or
dec
jmp
cmp
push
mov
jb
jmp
jne
test
xchg
es
cld
test
div
popf
jnp
ret
mov
inc
sbb
cmps
lock
leave
push
inc
popf
lods
xor
(bad)
sti
pop
add
push
(bad)
adc
sub
fucomp
std
mov
(bad)
or
out
jae
arpl
and
inc
xchg
adc
sar
in
add
push
adc
ss
ja
stos
add
popf
aas
call
ds
pusha
mov
or
in
fs
mov
cli
add
ret
jmp
shr
popf
push
pop
xchg
test
out
push
pushf
js
push
lods
addr16
mov
mov
add
dec
jge
cmp
int
jbe
jecxz
std
jnp
xor
in
or
push
inc
jmp
rol
(bad)
in
loop
iret
in
cld
fidiv
iret
jl
jmp
cs
sar
push
pop
push
jmp
cmp
cmps
stos
push
bound
ss
in
add
(bad)
push
pop
adc
xchg
retf
call
addr16
mov
out
lock
fucomip
mov
pop
mov
push
lahf
test
jmp
cmp
mov
xchg
retf
and
sar
in
sub
jne
jp
adc
je
inc
mov
xor
or
push
cmps
jbe
popf
call
das
pop
ja
mov
mov
push
mov
lds
pause
test
cmp
add
pop
xor
fstp
and
add
add
cmp
in
pop
jl
movs
pop
(bad)
loop
or
les
icebp
scas
jle
ret
mov
xor
inc
jmp
test
mov
arpl
call
jbe
icebp
popf
mov
pop
dec
mov
jp
cdq
(bad)
clc
(bad)
ficom
ja
popa
jl
ret
push
xor
sar
push
xchg
sar
inc
cmp
shr
fldcw
test
and
pop
(bad)
xchg
sbb
inc
mov
or
mov
hlt
sti
add
cmp
mov
adc
xlat
and
pusha
xchg
jae
lods
inc
mov
dec
fstp
icebp
jge
popa
lock
nop
mov
and
mov
pusha
pop
fst
hlt
jb
in
sbb
lahf
mov
adc
mov
sub
shl
imul
pushf
mov
sub
mov
cdq
jmp
mov
sub
push
jg
data16
xor
fdiv
sbb
rcr
jb
loope
lods
mov
mov
add
popf
ja
pop
xchg
xchg
mov
jno
adc
jb
aam
out
sbb
call
cdq
mov
loop
sub
sbb
aad
out
frstor
sub
push
and
ins
cmp
test
xor
repz
jnp
jnp
jnp
cs
pop
cmp
int3
(bad)
or
jmp
xor
cmp
mul
loopne
sahf
fnsave
sub
in
lock
mov
adc
inc
push
(bad)
std
and
jns
les
test
std
push
in
mov
test
pop
xchg
jne
or
cmps
mov
frstor
cmp
mov
in
lods
adc
in
test
outs
mov
lock
and
pop
jl
ss
das
clc
pop
xchg
adc
sub
mov
ficomp
add
pop
pop
cld
or
cmp
push
cmc
data16
dec
in
mov
ins
inc
enter
ins
cmp
or
sub
pop
pop
and
popa
ret
and
lahf
stos
outs
int
aaa
xchg
and
push
cmps
aaa
push
fisub
push
jp
popa
xor
jge
jmp
movzx
bound
ins
mul
gs
es
inc
ficom
dec
aaa
pop
retf
js
inc
adc
int3
adc
jle
popf
sahf
mov
fsubr
shl
fistp
test
daa
xor
mov
or
aam
xlat
push
lahf
fidivr
dec
call
daa
(bad)
push
(bad)
fdiv
pop
mov
xchg
jmp
inc
mov
xor
fldcw
sub
mov
fs
jmp
or
xchg
cmove
shl
ret
jnp
dec
cmc
xchg
pop
pop
repz
outs
test
jo
add
test
jmp
cmp
push
fidiv
movs
arpl
sbb
lock
push
push
jp
push
dec
sub
fcom
add
or
mov
pusha
push
lods
jge
and
adc
or
ss
sbb
push
jge
and
ss
dec
pop
and
dec
je
add
lock
mov
js
pop
(bad)
pop
aas
clc
rol
cmp
lods
(bad)
jmp
sti
pop
cmps
sub
pop
loopne
xchg
shl
xor
imul
repz
ret
call
cli
push
fsubr
cli
xor
rcr
xchg
daa
outs
fidivr
sti
and
out
push
outs
mov
inc
ins
add
mov
jae
cmp
rcl
out
sti
jecxz
pop
inc
sub
xchg
sub
adc
jg
loop
adc
pop
dec
mov
enter
not
js
fist
movs
cwde
ror
dec
xor
ins
std
inc
add
loopne
addr16
int3
retf
xchg
inc
ja
jno
out
mov
fcmovnbe
cdq
out
jecxz
cs
sub
cs
mov
push
pop
outs
xchg
cmp
sbb
or
sbb
add
in
pop
inc
arpl
ss
pop
(bad)
mov
arpl
sbb
(bad)
pusha
add
pop
leave
jl
and
sbb
or
pusha
mov
push
jae
enter
test
pop
ins
xor
into
cmp
jmp
push
sbb
mov
aaa
ja
fcom
retf
jo
fisttp
(bad)
pop
pushf
jg
pop
pop
mov
jnp
mul
pop
nop
arpl
(bad)
jno
ins
and
sub
out
not
lea
dec
mov
sub
mov
js
push
mov
shl
loopne
(bad)
cmp
jae
mov
adc
mov
xchg
push
lahf
mov
lods
mov
addr16
mov
mov
mov
movs
mov
es
repz
in
jmp
jno
dec
mov
not
cmp
mov
add
loope
sub
sub
lds
add
jne
sub
in
sbb
push
mov
stos
push
sub
xor
mov
xor
aad
fs
pop
aad
push
stos
mov
repz
fcomp
(bad)
sub
push
pop
jl
push
xchg
(bad)
int
push
scas
in
out
sbb
pop
pop
repz
jecxz
test
inc
push
call
ret
cdq
js
push
ja
inc
scas
sub
les
popa
hlt
pop
retf
xchg
(bad)
repz
retf
test
sub
inc
rol
aam
shl
dec
cmp
fadd
stos
or
jae
nop
push
add
pop
mov
stos
mov
mov
repnz
fdivr
cmp
jb
iret
ja
mov
mov
xchg
es
push
shl
inc
(bad)
fisttp
and
je
dec
fist
push
jmp
inc
sbb
sbb
mov
mov
push
out
sahf
stc
jo
loopne
sti
test
je
cmp
cmp
jl
daa
movs
xchg
add
rcl
adc
aaa
or
ss
mov
push
pop
push
push
popa
lock
jl
jno
or
(bad)
frstor
mov
xor
cmps
mov
push
repz
mov
mov
(bad)
fcom
out
mov
fbstp
nop
(bad)
cmp
or
pminub
in
push
ds
loope
sti
mov
xchg
push
cmp
ror
or
orps
mov
das
hlt
sbb
movs
jl
hlt
jmp
or
mov
ret
popa
mov
pusha
sbb
stos
pop
pop
loope
gs
jae
ja
mov
inc
pop
lock
(bad)
ror
inc
pop
fist
mov
cmp
add
inc
aaa
lods
mov
out
imul
popf
ds
xor
jp
lea
push
pop
gs
outs
xchg
lahf
sub
(bad)
cmp
sbb
div
int
cmps
dec
pop
aas
dec
cmps
jmp
inc
jmp
cmp
cmps
push
(bad)
out
in
mov
daa
xlat
aaa
adc
jns
dec
sbb
or
or
call
mov
pop
cmp
cmc
xor
lods
or
aaa
fstp
leave
invd
stos
sbb
lods
scas
jg
ins
jle
fwait
pop
mov
ficom
cmps
out
cmovns
adc
adc
imul
(bad)
popa
popa
ja
mov
fwait
pop
push
cs
sahf
scas
mov
or
push
pop
in
adc
mov
repnz
xchg
push
mov
repz
mov
ret
sbb
sbb
and
lock
mov
xlat
arpl
pop
sub
adc
mov
retf
inc
xchg
mov
mov
mov
cld
push
sbb
inc
mov
pop
aad
lea
gs
xor
sbb
fwait
loop
push
movs
out
or
in
lods
dec
mov
je
gs
(bad)
xchg
stos
sub
cwde
xchg
pop
mov
mov
into
hlt
cli
leave
fwait
scas
aas
xor
mov
rcr
popf
sbb
out
pop
fdivr
cmp
aaa
mov
push
inc
mov
inc
imul
or
xor
mov
mov
pop
dec
inc
out
out
jmp
or
jle
test
inc
hlt
mov
add
pop
mov
xor
hlt
jp
mov
retf
mov
fst
or
mov
dec
popf
call
xchg
sti
dec
pop
aaa
and
mov
xor
mov
mov
clc
out
shl
inc
jl
xor
cs
mov
cmp
mov
add
ins
iret
inc
cld
sbb
jmp
cld
pop
mov
push
jb
ins
mov
adc
dec
add
(bad)
ins
jg
fnstcw
lock
cmp
idiv
es
fiadd
xor
push
push
inc
push
out
call
cmps
cmps
sbb
cdq
test
dec
fwait
out
in
pop
or
pop
push
push
dec
cs
leave
fwait
cmp
mov
std
(bad)
jge
out
jmp
mov
lock
push
es
cli
sub
scas
adc
push
xchg
mov
shl
sbb
je
fcmovnbe
pop
xor
shl
jl
cmc
mov
xchg
popa
es
idiv
xchg
jns
addr16
cs
mov
mov
ds
pop
sub
outs
fs
inc
gs
xor
(bad)
xor
cmps
fiadd
xor
cmps
jnp
in
and
lea
push
fcmove
stos
lds
es
sub
std
cmc
and
movs
aaa
nop
cdq
push
and
out
std
outs
mov
mov
dec
lods
adc
rcr
icebp
or
gs
aad
sbb
arpl
fnstsw
adc
inc
add
iret
pop
cmps
call
popa
and
movs
xchg
or
jno
mov
xor
pop
dec
mov
add
add
arpl
lods
leave
ret
clc
test
fild
push
and
arpl
arpl
stc
das
jl
clc
sbb
xlat
aam
imul
pop
sub
dec
cli
jge
jle
pop
sahf
push
iret
dec
or
std
fwait
test
sahf
mov
out
setbe
sbb
dec
xor
aas
out
test
cmp
pop
pusha
shl
push
in
mov
mov
inc
add
and
icebp
sub
test
or
and
(bad)
cld
adc
pushf
pop
and
sbb
jmp
pop
mov
inc
mov
adc
adc
push
aam
jne
(bad)
sbb
sti
imul
or
adc
ret
inc
push
and
xor
push
cmp
fiadd
out
sar
(bad)
aas
add
push
jmp
icebp
fwait
xor
in
sub
lds
dec
inc
cli
and
jns
or
sbb
mov
mov
or
push
fisub
xchg
mov
enter
push
aam
loope
scas
aam
ret
out
jb
dec
sub
xchg
dec
cmps
movs
outs
push
mov
icebp
outs
cmps
cmps
dec
xor
scas
hlt
movs
jnp
dec
idiv
das
fbstp
das
jmp
sti
cli
jne
mov
ret
iret
cs
out
in
mov
xchg
setg
repz
popa
mov
cwde
aas
int
jb
xchg
rol
and
call
ret
or
adc
sbb
add
int3
sub
jp
(bad)
xchg
dec
out
aas
cli
push
push
or
xor
ja
ins
add
or
mov
jecxz
sbb
inc
cmps
jo
scas
test
jle
movs
sub
xchg
les
jmp
add
jge
(bad)
mov
fdivr
jns
inc
test
aad
imul
div
in
les
lock
movs
sbb
dec
hlt
xchg
test
std
cwde
mov
mov
pop
sub
rcl
pop
fwait
mov
or
xor
mov
mov
push
push
push
scas
es
jb
and
or
(bad)
jo
mov
dec
pop
mov
scas
sahf
pop
mov
cmps
push
cmps
pop
and
mov
aas
pop
jg
inc
adc
test
mov
aad
xchg
lds
push
outs
mov
cmps
outs
xor
shl
lock
sbb
enter
jae
pop
int
push
cmc
js
test
in
cmp
(bad)
cld
xchg
xor
dec
sub
sahf
dec
cwde
adc
sbb
push
cmp
push
fidiv
lds
ja
mov
cmp
dec
nop
push
popf
jnp
cmp
sub
ret
stc
xchg
fwait
imul
loop
inc
push
xor
mov
push
or
stos
and
sub
sbb
push
das
add
outs
or
push
dec
cmc
or
inc
(bad)
jne
test
mov
xchg
pop
adc
iret
dec
xor
icebp
fnsave
sub
mov
call
add
adc
mov
out
outs
fldenv
xor
and
and
mov
ficomp
sub
mov
xor
mov
aas
aaa
ins
sbb
push
jmp
dec
mov
xchg
cdq
mov
push
aaa
jp
push
mov
aaa
jnp
dec
pushf
push
cld
fsubr
mov
jmp
cmp
lock
inc
ins
mov
imul
mov
shl
cmc
sahf
outs
push
adc
into
or
and
inc
mov
mov
std
dec
hlt
mov
stos
add
xchg
repnz
mov
bound
icebp
cs
cli
mov
rcl
inc
sbb
shufps
push
mov
push
call
shl
mov
data16
mov
pop
ret
gs
aas
xchg
call
push
ins
push
dec
mov
sub
xchg
ins
pop
mov
call
sub
fsubr
lahf
or
test
jmp
adc
test
lods
sub
imul
pop
push
mov
fsub
aaa
jmp
test
inc
or
jns
or
mov
popa
in
pop
leave
jl
push
cmps
fwait
shr
or
push
jmp
jmp
jno
xbegin
push
int3
int
sub
cmc
sahf
or
in
daa
aas
jbe
mov
pop
mov
mov
addr16
(bad)
in
cmp
(bad)
(bad)
movs
mov
mov
js
inc
cdq
push
jbe
test
jo
jge
cld
push
repz
call
mov
stos
shl
repz
sub
cmp
jecxz
mov
mov
and
push
dec
push
cmps
or
fs
stos
mov
hlt
push
and
mov
or
outs
dec
xchg
jmp
push
xor
xchg
xor
inc
xchg
es
movs
adc
and
idiv
(bad)
push
aaa
xchg
mov
push
dec
push
mov
shl
(bad)
sbb
out
addr16
push
repnz
jp
lods
dec
dec
mov
aad
cmps
push
mov
pop
jecxz
std
mov
sbb
push
je
add
push
add
fs
or
cdq
inc
and
movs
inc
jne
call
push
push
dec
cdq
ficomp
stos
outs
call
or
cld
in
xchg
es
sbb
pop
mov
cmps
push
mov
sub
sub
sar
pusha
cmp
outs
cmc
in
fstp
fnstsw
mul
test
std
iret
fnstsw
jae
enter
push
fistp
rcr
mov
stc
lods
in
jno
ss
mov
js
and
push
loopne
push
mov
xor
jno
inc
lds
out
ror
add
mov
xchg
loop
dec
scas
hlt
xor
dec
pop
rol
pop
js
dec
pop
js
xor
int
xchg
mov
popw
jmp
mov
or
and
nop
jbe
add
push
lods
repz
sbb
imul
sti
xchg
and
cmc
xor
mov
hlt
int
jns
idiv
es
bswap
test
(bad)
rcr
fwait
adc
pop
les
aaa
sbb
adc
in
jge
cmp
adc
mov
lods
stos
push
jmp
in
(bad)
fnstcw
cmp
push
pop
push
jbe
jns
sub
out
cwde
out
fwait
push
xor
inc
out
movs
fld
and
jmp
inc
div
jmp
iret
mov
sbb
push
js
mov
das
scas
xor
xlat
leave
inc
cmp
fmul
mov
fcom
add
jae
out
jmp
mov
and
sbb
icebp
cmp
pop
mov
aam
push
jae
pop
cdq
sub
xor
dec
inc
jge
lea
addr16
sbb
lds
mov
push
push
push
push
pop
and
cmp
imul
sub
sub
or
mov
inc
fcmove
popf
in
loopne
movs
fcomp
in
dec
jbe
data16
push
jecxz
dec
and
or
imul
mov
mov
stc
pop
add
adc
xor
das
cs
push
mov
imul
fwait
pop
int3
adc
mov
xchg
mov
je
sbb
xchg
or
adc
dec
lods
push
int3
push
push
adc
pop
sbb
inc
jmp
or
dec
xchg
jns
sahf
(bad)
jle
sbb
and
out
scas
mov
cmp
nop
inc
fwait
inc
arpl
cmc
or
jo
stos
pop
xrstor
cdq
pushf
fwait
inc
rcr
arpl
in
movs
xlat
sub
lahf
push
popa
sahf
mov
int
lahf
cld
retf
xchg
cs
pop
sbb
xchg
iret
sahf
sbb
xor
and
sti
jmp
xchg
aam
jne
out
mov
jge
ss
jnp
mov
mov
mov
cs
cli
adc
push
ror
push
ss
shl
or
les
cmp
cs
and
sahf
sub
into
hlt
repz
es
push
inc
test
dec
push
sbb
(bad)
(bad)
mov
outs
nop
sbb
add
push
or
inc
mov
add
ror
mov
mov
sahf
loope
into
bound
push
retf
outs
xor
test
xchg
xor
sti
dec
mov
scas
inc
mov
pushf
das
xor
mov
xlat
or
sub
mov
mov
pop
fiadd
daa
sub
cdq
jge
and
cli
test
fcmove
es
xor
push
pop
xor
fnstenv
fisubr
and
mov
leave
aam
iret
(bad)
push
and
xchg
cdq
test
push
out
push
sbb
ret
movq
lock
std
mov
push
jge
cwde
out
pop
cmp
repnz
sbb
pop
dec
mov
retf
popf
mov
cmp
add
arpl
mov
mov
cs
rcl
cs
scas
inc
(bad)
cmp
inc
push
push
inc
mov
loop
fsubr
inc
jecxz
and
dec
fwait
inc
sbb
dec
in
inc
rol
repnz
hlt
jmp
das
ins
ins
jne
or
cli
pop
add
mov
pop
sub
(bad)
(bad)
enter
and
mov
test
lock
stos
dec
or
ftst
push
and
xchg
loope
push
push
lods
cdq
jp
ins
aaa
sbb
rcl
scas
jle
and
mov
mov
int
or
dec
or
dec
call
dec
inc
lahf
je
and
dec
sbb
add
out
fisttp
lea
repz
enter
xchg
sbb
cmp
add
retf
out
pushf
pop
cmp
retf
inc
mov
sub
add
test
dec
add
hlt
and
dec
xchg
shr
hlt
test
clc
jmp
fidiv
pop
xor
mov
out
out
shl
jl
in
retf
je
push
scas
sub
jno
fld
mov
jae
loopne
aam
retf
adc
cli
es
cs
sub
jge
and
pop
xchg
jb
push
sub
out
call
iret
test
add
movs
(bad)
lock
call
or
push
cmp
shl
adc
dec
or
cmps
aaa
sahf
popf
and
and
add
adc
repz
cmp
fisub
fcom
lahf
cmp
sub
loop
popa
dec
popf
pop
mov
or
sbb
inc
ret
cmp
jmp
movs
popf
xchg
daa
pushf
addr16
sub
inc
div
adc
mov
bound
imul
mov
out
cmp
mov
stos
out
mov
or
je
inc
std
sbb
add
(bad)
aad
adc
sub
retf
sbb
ds
test
sub
jmp
in
adc
fidivr
sub
mov
mov
movs
imul
pop
int3
mov
xor
or
push
mov
jbe
mov
out
sub
jp
dec
frstor
mov
cmc
lea
int3
mov
mul
mov
les
add
inc
sub
jnp
xchg
sbb
cli
jecxz
aas
cld
popf
aas
cli
mov
adc
sub
imul
cs
retf
bt
(bad)
in
or
pop
sar
inc
test
push
jecxz
and
mov
rcr
jmp
(bad)
mov
mov
sti
test
add
and
xchg
jp
repnz
scas
ja
mov
xchg
dec
xchg
cli
test
xor
fsubr
outs
mov
daa
pop
call
aaa
imul
js
ja
daa
(bad)
sbb
cmps
mov
cmps
sub
sahf
in
imul
inc
das
jb
bound
imul
bound
inc
jae
movs
mov
mov
dec
popa
jbe
adc
in
and
mov
or
add
xor
(bad)
push
cmovnp
std
pop
mov
cli
dec
fcomi
xchg
lods
cdq
sbb
cdq
mov
hlt
sahf
ja
sbb
pop
arpl
dec
bound
cmp
inc
addr16
mov
jnp
cmp
push
movlps
in
push
(bad)
fsubr
sti
jecxz
cld
shl
stos
lahf
pop
scas
mov
xchg
inc
mov
call
push
repz
movsx
out
xor
adc
mov
and
and
data16
sbb
inc
daa
outs
mov
loope
inc
pop
lahf
mov
in
or
pop
inc
in
leave
icebp
mov
movs
push
xor
add
push
outs
jns
sbb
cmp
je
add
or
out
xor
mov
mov
rcl
imul
bswap
jmp
out
stc
inc
jmp
jmp
dec
jl
xlat
cld
inc
jmp
jl
cmp
xchg
xlat
gs
ins
pusha
push
call
shrd
sbb
sbb
xchg
out
jp
cmc
call
dec
std
stos
mov
xor
rcr
and
adc
pop
ins
dec
fistp
dec
lahf
mov
(bad)
sahf
push
xlat
dec
pushf
cli
dec
cmp
lods
addr16
lock
loopne
getsec
test
pop
and
les
repnz
ja
sbb
inc
mov
xchg
das
and
xchg
jmp
cli
nop
jo
and
push
call
xor
loopne
pop
jl
ror
lock
mov
out
adc
out
push
repnz
mov
pop
cmp
or
jg
pop
mov
push
inc
cmp
movs
nop
sbb
push
(bad)
mov
addr16
sub
inc
xchg
sbb
xchg
test
adc
cmc
mov
push
fcmovbe
dec
out
outs
cs
inc
xlat
inc
pop
stos
stos
enter
mov
shr
out
stos
or
mov
(bad)
and
fld
shl
loopne
ror
xchg
sbb
repz
fwait
pop
push
cmova
sbb
es
add
push
jmp
mov
mov
ficomp
lods
mov
repnz
stos
sbb
retf
hlt
mov
pop
sbb
scas
xchg
mov
fwait
mov
cmp
jp
jo
mov
cmp
and
movs
mov
sar
and
adc
data16
cdq
dec
add
xchg
or
mov
les
dec
cmp
out
add
inc
mov
push
jmp
xlat
jle
fstp
cli
(bad)
loopne
icebp
push
push
sbb
jb
test
fprem
xchg
and
cmp
aam
stc
aad
arpl
mov
(bad)
cs
rcl
int
jmp
adc
shr
arpl
shr
mov
fild
out
cmovge
into
pop
xor
sub
mov
add
mov
mov
lods
sub
pop
pop
jno
shl
sbb
ds
int3
(bad)
popa
adc
mov
jnp
ss
(bad)
clc
add
(bad)
cli
xlat
aam
dec
push
sbb
call
xchg
call
inc
jecxz
dec
and
cmp
or
inc
sbb
clc
xchg
aad
mov
cmps
dec
cmp
mov
inc
jmp
mov
xlat
iret
cmp
dec
popf
ds
js
xor
std
out
iret
cmc
xchg
and
cmc
push
aaa
test
(bad)
int3
pushaw
cmp
ss
adc
stos
sub
(bad)
and
fs
or
xlat
je
in
add
mov
and
cld
aam
jl
cmp
lods
mov
cmp
adc
mov
pop
or
pusha
or
mov
inc
sbb
push
aam
push
scas
sbb
test
mov
sbb
mov
inc
inc
mov
cld
xor
xchg
or
ja
test
and
add
je
arpl
scas
ds
loopne
pusha
add
jae
xchg
(bad)
push
push
stos
(bad)
fild
xchg
cmp
sti
adc
pop
mov
inc
pop
std
(bad)
das
jp
mov
in
push
sbb
dec
iret
push
sub
mov
leave
out
pop
mov
fmul
sub
cmc
es
aam
ins
dec
(bad)
jns
jb
jmp
sub
imul
cmp
cmp
push
popa
add
mov
jg
push
xor
mov
push
mov
add
sub
mov
add
add
lods
inc
dec
movs
nop
ds
and
mov
mov
jb
mov
loop
clc
out
and
scas
fbstp
aas
repz
stos
movs
out
leave
addr16
loope
mov
lods
or
mov
adc
or
inc
daa
(bad)
xchg
xchg
fdiv
dec
adc
pop
sti
sub
dec
sbb
daa
sub
fild
sti
sub
je
cmp
push
or
pop
inc
imul
jl
sti
mov
call
dec
fbld
test
shl
mov
pusha
stc
(bad)
popf
dec
adc
push
leave
ss
sbb
pop
mov
adc
inc
pop
inc
push
sahf
jecxz
call
lahf
daa
repnz
out
stos
sub
outs
dec
dec
scas
(bad)
mov
and
cmc
mov
or
mul
cmc
sahf
rol
scas
lahf
mov
cmp
mul
iret
loop
push
(bad)
push
ficomp
cmp
or
mov
ror
cwde
sub
xor
mov
sbb
jmp
mov
pop
or
fwait
enter
cmp
je
xchg
inc
inc
add
add
and
sbb
push
outs
cs
ins
bound
cmps
mov
sub
push
push
jp
pushf
outs
ins
popa
aaa
xor
pop
mov
or
test
pusha
add
test
scas
mov
jae
mov
in
sub
mov
xchg
test
test
rcl
icebp
ror
out
sub
mov
cmp
pop
pop
ror
bound
push
cmps
pop
xor
jl
aad
sbb
and
outs
repz
cmc
loope
fwait
repnz
ror
xchg
outs
sahf
push
cmp
mov
loope
mov
or
xchg
xchg
xchg
pop
inc
sbb
leave
sub
sub
test
sbb
aaa
mov
mov
pop
inc
icebp
adc
mov
pop
mov
iret
je
jg
push
add
push
and
(bad)
pop
test
in
and
mov
dec
pop
jb
inc
(bad)
ja
xor
sbb
jo
fadd
jg
inc
shl
fs
(bad)
cs
xchg
push
int
xor
xor
out
xchg
and
nop
cmp
aad
or
and
shl
jge
pop
inc
push
into
arpl
ret
das
add
adc
mov
daa
popa
in
cmp
push
in
movs
rcr
iret
xlat
xchg
adc
retf
mov
add
ja
mov
sbb
jno
div
aam
jmp
sbb
jno
loop
sahf
xchg
fdiv
and
adc
jo
pop
adc
out
xchg
jmp
ror
adc
xchg
adc
dec
mov
aam
ss
mov
xchg
pop
xlat
shr
xchg
(bad)
icebp
mov
sub
inc
and
inc
add
lea
cmp
mov
in
sbb
mov
add
in
jge
ja
sar
popf
pushf
adc
add
pop
lods
or
daa
xor
ror
cli
push
xor
mov
dec
dec
jnp
push
and
pop
sub
jle
dec
sub
or
out
push
sub
aaa
lea
call
mov
jmp
ins
int
jne
outs
shl
mov
ret
xchg
loope
push
pushf
dec
or
mov
xchg
retf
pop
pop
sub
push
cmps
dec
sahf
cli
fadd
cmp
cmp
in
mov
mov
dec
in
or
repnz
and
scas
push
adc
dec
inc
cmp
jno
mov
out
test
inc
bound
mov
mov
clc
mov
ror
in
jb
js
mov
hlt
pop
hlt
push
sub
adc
mov
xchg
call
sti
xchg
leave
mov
test
jge
jmp
mov
pop
xchg
dec
push
adc
jb
aas
ins
je
jns
pop
vshufps
loop
sbb
or
mov
and
adc
xchg
out
stos
daa
cmps
mov
mov
jecxz
or
stos
or
fadd
scas
aam
gs
mov
pop
lock
retf
mov
mov
icebp
and
pop
xor
mov
and
ror
call
xchg
mov
mov
jl
push
leave
rcl
scas
cmovbe
xchg
(bad)
js
mov
sub
mov
sar
cmovs
adc
icebp
mov
dec
mov
mov
mov
fs
cmps
mov
stc
aad
(bad)
jg
(bad)
mov
(bad)
(bad)
pop
stc
out
pop
sbb
inc
xchg
push
push
mov
shr
xchg
push
imul
xor
push
xor
jb
ins
jb
test
cmp
cmp
clc
out
inc
(bad)
div
jg
js
jns
mov
lock
int3
mov
aam
mov
call
js
and
ret
icebp
mov
inc
sar
loopne
imul
pop
cmp
aad
jne
sub
lods
pop
rcl
jne
xchg
test
cmps
cwde
aam
js
jb
cmc
in
dec
jae
sbb
fisubr
int3
push
fcmovu
rol
lahf
(bad)
push
push
ds
jp
cli
mov
mov
pop
push
jno
jmp
pop
and
inc
push
sub
sub
pop
pop
inc
jmp
jnp
cmp
pop
dec
in
addr16
arpl
ss
pop
mov
dec
stos
push
xor
idiv
cmps
jle
sbb
(bad)
pop
jl
mov
stc
xchg
jns
inc
mov
lea
add
cmps
scas
setg
(bad)
mov
pop
add
dec
sub
or
setne
push
sub
popf
cmps
jle
inc
mov
xor
push
push
inc
add
mov
adc
(bad)
add
push
movs
ja
fdivr
adc
and
jmp
mov
inc
(bad)
mov
out
inc
mov
mov
fsub
inc
mov
enter
lock
and
xchg
mov
frstor
mov
ret
mov
js
retf
cmps
mov
int
lahf
jnp
in
nop
add
leave
cdq
mov
dec
mov
inc
xchg
sbb
fdivr
sub
sbb
jb
mov
dec
call
push
das
sub
mov
std
scas
jle
mov
sti
sahf
(bad)
mov
test
cli
add
sub
pop
push
mov
loopne
shr
out
sub
or
xlat
ret
push
push
push
loopne
(bad)
lods
xor
mov
pop
jg
(bad)
lock
sub
sbb
fisubr
cmp
push
rol
dec
push
pop
dec
arpl
popf
adc
jmp
add
retf
inc
out
cli
mov
test
(bad)
rcl
mov
stos
push
sbb
jns
repz
fstp
int
loop
pop
push
out
cdq
out
xor
pop
fwait
pop
pop
addr16
sub
inc
into
mov
cmp
pop
mov
sar
fwait
cmps
dec
sbb
fadd
fwait
ret
jl
(bad)
int3
xor
jecxz
cdq
cs
mov
mov
(bad)
dec
enter
adc
inc
mov
mov
xchg
xchg
iret
jno
sub
repnz
pop
mov
out
sar
(bad)
mov
std
paddd
jg
outs
(bad)
in
imul
xor
cmp
xchg
jmp
mov
fidivr
out
ja
xor
outs
fwait
mov
in
outs
test
dec
rcl
sub
cmps
in
mov
and
fist
or
sti
push
test
icebp
mov
cmp
cmp
mov
xor
mov
pop
(bad)
(bad)
sub
enter
dec
hlt
gs
push
fist
xchg
sbb
lds
leave
test
mov
nop
mov
cmp
inc
jmp
xchg
out
pop
ret
mov
sbb
sub
test
sti
mov
mov
add
ret
iret
out
jge
les
ins
jo
pusha
jo
pusha
nop
test
mov
mov
js
ficomp
pop
scas
jg
mov
or
dec
mov
xor
cmp
aam
daa
sub
sub
lea
imul
lahf
into
fimul
mov
jl
leave
cld
aad
(bad)
or
into
jmp
lea
enter
mov
icebp
arpl
xchg
out
adc
ror
mov
and
daa
fsubr
out
mul
mov
push
inc
lds
(bad)
rcr
dec
mov
into
movs
xor
cmps
xor
jae
es
sub
cmps
scas
jp
dec
fidiv
xchg
mov
inc
pop
je
or
mov
mov
mov
xchg
xor
in
shl
cmp
aad
lahf
add
pop
lods
mov
call
mov
xlat
test
sub
shl
add
aam
mov
jbe
jnp
jp
(bad)
into
jo
dec
mov
clc
sub
(bad)
int
and
rcr
in
sub
mov
xchg
lahf
jbe
cmp
mov
(bad)
repz
imul
pop
jg
pop
call
jl
dec
(bad)
addr16
iret
xlat
ds
mov
ret
hlt
mov
dec
push
stos
or
mov
scas
sbb
rcl
or
cmp
hlt
test
mov
inc
movs
movs
arpl
cld
xchg
sub
arpl
or
jae
arpl
inc
xchg
pop
mov
aam
fisub
in
mov
pop
sbb
hlt
std
xor
jle
test
pop
jnp
inc
inc
mov
outs
rol
movs
dec
cmp
mov
cmp
out
in
mov
mov
or
out
mov
cmc
out
lea
js
rol
idiv
dec
jl
mov
cmp
lock
rol
loope
scas
mov
xchg
or
sahf
aaa
fs
ss
mov
xor
inc
add
adc
pop
sbb
sub
adc
xchg
push
or
push
mov
mov
or
into
imul
fstp
in
aas
xchg
and
mov
std
rol
pop
mov
jmp
rcl
outs
movs
lahf
or
or
movs
popa
call
cld
push
push
scas
popa
std
enter
movs
test
loop
lock
or
dec
mov
push
hlt
dec
movs
mov
dec
xor
and
pop
pop
loope
not
fcomp
xchg
sysexit
jle
daa
xchg
fld
mov
xor
rcl
out
jae
mov
je
pop
jns
(bad)
int3
adc
(bad)
add
(bad)
loope
(bad)
jbe
adc
rol
fidivr
mov
iret
popf
xor
jnp
js
jg
mov
lock
xor
xchg
ins
in
push
mov
sbb
xchg
mov
mov
push
cli
sub
push
and
fdivr
aas
sahf
jl
shrd
mov
xchg
repz
(bad)
clc
ret
xlat
aas
and
or
ret
fs
mov
test
adc
mov
or
mov
out
leave
xchg
mov
push
ret
push
xchg
or
xchg
cwde
ficomp
inc
jmp
leave
iret
sti
mov
adc
ss
mov
mov
xor
daa
inc
(bad)
psllq
mov
dec
mov
mov
pusha
pop
lods
jmp
(bad)
pop
jl
call
push
push
sahf
out
lods
mov
mov
iret
pop
out
mov
repz
jmp
xor
xor
pcmpeqw
mov
xor
xor
sbb
out
xor
rcl
out
loopne
jnp
and
test
mov
movs
stos
pusha
dec
fcmovnu
push
outs
and
gs
xor
shl
repz
(bad)
repnz
cli
add
adc
mov
xor
popa
clc
arpl
xchg
dec
pop
ss
loop
mov
sahf
aas
pop
lods
add
mov
pusha
adc
xchg
or
fnstsw
push
adc
sub
jo
sub
adc
and
pop
xchg
imul
or
pop
shr
enter
jmp
psllq
fcomp
call
hlt
pusha
jmp
jmp
frstor
sub
scas
dec
jmp
sbb
pop
xor
ror
xchg
jbe
inc
sar
xor
jl
test
test
lahf
xor
je
jo
into
sub
aam
(bad)
push
push
mov
(bad)
in
dec
out
add
cmp
aas
sub
push
mov
ret
aam
sbb
scas
inc
add
cli
aas
jmp
aas
cli
inc
(bad)
call
pop
repz
std
adc
stc
ins
call
mov
sbb
or
(bad)
shl
mov
mov
in
adc
stc
out
jl
prefetch
push
cli
faddp
les
sbb
test
cdq
mov
push
mov
xchg
movs
(bad)
mov
clc
sub
sahf
test
idiv
add
cmps
pushf
mov
sbb
xor
inc
je
sahf
das
add
pop
cmp
jmp
lahf
pop
sbb
daa
daa
push
test
jo
jnp
inc
into
into
mov
xchg
lahf
sti
dec
imul
add
into
into
lea
mov
test
stc
cwde
add
js
mov
add
call
clc
jo
ins
pop
outs
(bad)
shr
leave
xlat
(bad)
addr16
sub
cmc
pcmpeqw
push
xchg
cli
xor
sub
ins
adc
lds
out
mov
mov
xor
pop
adc
sub
mov
add
neg
aas
push
add
mov
or
arpl
rol
mov
test
mov
gs
sbb
(bad)
nop
dec
call
mov
fisttp
sti
out
lahf
sbb
mov
mov
lds
xor
xchg
jb
(bad)
out
ins
in
lods
repnz
call
not
cmp
mov
mov
and
fdivr
jno
jmp
lea
pop
ds
sub
outs
inc
mov
push
push
mov
outs
pop
aas
ja
(bad)
inc
xor
fs
push
arpl
inc
enter
push
mov
sub
add
int
dec
fs
inc
lahf
ss
xchg
dec
xchg
(bad)
jle
cmps
mov
jle
xor
(bad)
std
paddb
aaa
aas
repnz
mov
(bad)
inc
xchg
lock
test
inc
iret
loope
dec
sbb
(bad)
popa
and
sub
stos
movs
js
retf
daa
push
cld
xor
out
xchg
fnstenv
push
and
daa
xor
stc
mov
adc
test
int3
mov
data16
dec
in
pop
test
into
in
xchg
aad
hlt
aas
aam
lea
loop
retf
test
mov
in
jns
jae
mov
mov
sub
rcr
test
sbb
xor
dec
int3
sti
sub
imul
jp
call
ret
push
jge
cmp
out
rsqrtps
idiv
jl
daa
push
xor
adc
retf
stos
mov
xor
adc
adc
jp
out
mov
sbb
imul
mov
aas
push
repz
in
(bad)
xlat
pop
retf
(bad)
inc
sti
pop
lahf
std
enter
mov
cmps
inc
xor
js
add
jnp
and
stos
sbb
ss
cmps
shl
or
aam
mov
ss
rol
out
inc
jae
mov
and
sub
out
pushf
shl
in
jno
jmp
jp
movs
cmps
not
dec
add
and
test
xchg
int3
hlt
mul
js
sub
cmps
add
adc
pop
add
adc
test
push
pop
add
sahf
(bad)
lock
aas
jbe
arpl
xor
mov
aam
fs
adc
push
mov
mov
nop
dec
inc
pop
dec
mov
rcr
mov
adc
xor
and
xor
mov
fstp
das
data16
out
fld
popf
mov
in
enter
and
and
or
pop
or
sub
pop
adc
push
jmp
mov
pop
cmp
jmp
fimul
std
cmp
test
and
pop
xor
add
pop
imul
and
xchg
inc
cwde
loope
int
jmp
jb
mov
pop
aas
and
sahf
loopne
push
shl
mov
mov
fld
nop
push
add
arpl
xchg
cmps
and
mov
xchg
fld
jbe
jnp
in
pop
pop
sbb
jge
lock
cmp
jbe
shr
and
test
mov
jae
dec
or
js
adc
cmp
movs
rcl
xor
xchg
sub
mov
jmp
dec
int3
or
loopne
mov
mov
addr16
sbb
gs
popa
fistp
call
xor
mov
out
sub
add
rol
jp
movs
push
jl
mov
xor
aad
or
ins
cs
mov
cmp
jb
xor
outs
mov
int
add
ret
rcl
nop
shl
daa
sub
jg
ss
sbb
dec
mov
inc
jb
leave
push
nop
sbb
pop
cmps
(bad)
addr16
or
dec
mov
xor
jae
les
data16
maxps
arpl
cmp
jae
xchg
lock
test
sahf
mov
inc
push
xor
fidiv
adc
add
out
push
jno
sbb
repz
je
cmp
push
xchg
push
xchg
(bad)
mov
add
mov
sub
sub
repz
push
rcr
enter
mov
sti
inc
cdq
push
(bad)
dec
outs
xor
popf
js
and
mov
xchg
jne
aam
xor
adc
add
shl
mov
pop
mov
inc
push
outs
sub
shl
dec
inc
jne
xor
push
pushf
in
scas
pop
(bad)
fist
cdq
loopne
or
ins
retf
frstor
int3
adc
mov
or
int
bound
sbb
cld
inc
call
xor
lahf
stos
xchg
aaa
ss
repz
xchg
adc
popf
movs
das
movs
cli
retf
sub
shr
(bad)
inc
xor
mov
adc
dec
ds
jo
adc
or
or
jns
fdiv
dec
xchg
repz
mov
mov
xor
aam
push
push
inc
jmp
scas
int3
inc
pushf
sbb
jge
mov
lahf
cmp
das
aas
cmc
test
stc
mov
xlat
dec
std
out
call
adc
mov
xor
push
pop
scas
xor
and
push
sub
(bad)
(bad)
out
jbe
jmp
ret
cmps
loop
and
outs
push
(bad)
and
mov
cmp
inc
(bad)
xchg
add
int3
mov
mov
dec
lea
jbe
push
push
fcomp
xchg
jmp
pop
jle
scas
jns
arpl
out
mov
xchg
sbb
lock
pop
test
fistp
xchg
fstp
adc
enter
fmul
outs
fsub
add
jae
aad
mov
les
(bad)
lock
push
cmp
ficom
xchg
data16
xchg
call
aad
and
cmps
mov
out
mov
scas
dec
enter
and
mov
mov
xchg
sbb
(bad)
movs
mov
fisttp
scas
std
out
int
fsubr
test
mov
mov
mov
dec
rcl
mov
ret
xchg
dec
aaa
xor
test
pop
outs
sar
xchg
nop
repnz
andnps
shl
hlt
inc
add
mov
jnp
pop
mov
data16
scas
mov
and
mov
aam
bound
push
add
stc
xchg
call
jno
dec
out
leave
pop
ins
mov
mov
mov
and
inc
ins
mov
popf
push
repnz
inc
lods
sbb
popa
out
xor
cwde
or
aam
faddp
cmp
and
sti
ja
hlt
pushf
jp
outs
sbb
jmp
mov
lods
dec
dec
pop
jg
fdiv
mov
and
ss
or
jmp
xchg
and
dec
lds
cmp
push
loope
fld
out
mov
mov
(bad)
pop
inc
jg
ud0
stc
mov
adc
xchg
sub
nop
xor
xchg
xchg
mov
jecxz
movs
sub
jl
fild
xchg
cmps
popf
ror
jo
cli
and
sub
fwait
mov
cmps
lock
cmp
pop
or
repz
les
or
mov
into
jbe
xchg
jmp
int
sti
xor
nop
inc
xlat
fdivr
and
(bad)
clc
and
sub
mov
pop
inc
ins
repnz
into
and
add
cs
jg
addr16
div
dec
iret
lea
fcom
pop
cs
mov
out
cli
into
lea
adc
je
inc
pushf
jb
and
je
add
(bad)
xor
sbb
mov
(bad)
std
mov
data16
dec
push
(bad)
rol
cmc
arpl
cmc
mov
sub
push
(bad)
out
jnp
jg
cmc
pxor
dec
lock
jg
mov
movs
aaa
loop
sub
dec
add
(bad)
xor
pop
movs
fiadd
mov
pop
sub
jno
fs
push
lods
fisubr
aas
les
mov
ret
xchg
adc
clc
sub
add
test
cmp
add
cmc
pop
jno
inc
outs
xrelease
mov
push
adc
add
sub
aam
loop
sub
bound
aaa
xchg
push
and
outs
jg
cmp
jle
inc
shr
pusha
lahf
mov
dec
iret
popf
loope
ret
xchg
jnp
mov
sar
(bad)
aam
repz
out
mov
mov
push
dec
jo
test
pusha
cmp
rcr
(bad)
mov
dec
mov
and
inc
cmp
call
sub
retf
out
or
or
mov
ret
jg
sub
(bad)
out
sti
push
jno
cli
xchg
cld
jnp
push
mov
std
adc
and
adc
pop
push
and
xor
aaa
pop
jle
cdq
push
push
sbb
dec
mov
es
test
cld
in
jbe
out
aas
adc
push
call
fimul
daa
cmps
inc
icebp
icebp
mov
mov
pop
int
movs
call
jnp
jo
jmp
adc
test
popf
pop
loop
ror
mov
dec
jp
je
sbb
mov
ret
into
outs
and
dec
ins
mov
add
nop
ror
inc
sub
cmp
push
pop
test
push
jnp
fdivr
push
fimul
xlat
mov
push
push
out
(bad)
popf
fwait
cmp
rcr
pushf
aaa
or
leave
mov
daa
movs
inc
adc
xor
xchg
sub
or
cmps
push
adc
push
xchg
shl
pop
add
fsub
xlat
inc
pop
ds
shr
imul
xor
idiv
jo
out
call
loop
aas
test
pop
jmp
and
fdivr
mov
leave
xchg
mov
ins
cmp
cmps
adc
adc
ret
popf
enter
push
xchg
fsubr
cli
mov
repz
cmp
clc
adc
add
inc
inc
xor
push
test
mov
rol
mov
fwait
les
pop
repnz
pushf
cmp
call
sub
in
cdq
sbb
jne
or
xor
inc
xlat
pushf
retf
sbb
mov
cli
adc
xchg
push
mov
lds
repz
(bad)
mov
scas
cmc
sete
ins
lock
dec
imul
sbb
inc
ja
mov
enter
aaa
mov
push
cmp
cmp
mov
xor
call
aam
popf
sub
dec
daa
fisttp
cmps
retf
lods
mov
mov
loopne
mov
nop
mov
cld
icebp
fisubr
pop
retf
aam
(bad)
icebp
inc
out
inc
pop
xor
ds
cli
mov
push
inc
sub
cmp
xchg
sete
mov
adc
jae
neg
or
jno
mov
xor
movs
(bad)
mov
mov
pop
pop
ja
imul
inc
out
mov
pop
jno
inc
aam
xchg
pop
sbb
jb
xchg
xor
inc
(bad)
hlt
fnstsw
mov
fisubr
(bad)
(bad)
push
xchg
jbe
in
inc
gs
js
cs
js
shl
shl
inc
sbb
imul
call
mov
mov
sbb
adc
dec
outs
in
pop
mov
(bad)
into
popf
std
xor
jge
xchg
mov
push
push
xchg
jge
push
lds
cmp
test
arpl
pop
sbb
xchg
loope
mov
jge
jmp
xor
jbe
aas
(bad)
stc
paddb
(bad)
js
jb
fs
xchg
cmc
dec
aas
sti
mov
repz
movs
les
leave
xchg
cmp
dec
pop
cmp
or
pop
popf
and
dec
ins
dec
repnz
pop
loop
sbb
mov
jl
cvtps2pi
jbe
(bad)
inc
inc
add
push
mov
add
cdq
imul
stc
push
aam
retf
adc
dec
jge
push
in
jl
adc
inc
sub
xor
inc
push
je
or
jns
movs
pop
dec
cli
or
ret
or
add
(bad)
adc
push
inc
xor
pop
cmp
mov
stos
test
inc
dec
xor
bound
out
mov
dec
sar
call
sbb
or
mov
push
push
aas
and
or
fisttp
push
mov
jg
fisttp
(bad)
outs
sub
std
jecxz
cld
dec
add
inc
and
in
xor
hlt
dec
and
xor
push
jne
jmp
je
rol
sbb
sub
sub
repnz
in
ss
jmp
xor
sub
xlat
ins
xor
cmp
dec
std
outs
aaa
enter
jno
mov
retf
jge
cmps
add
in
jb
imul
lods
aaa
in
les
sub
test
ins
mov
mov
dec
or
fild
jne
sti
jecxz
cwde
and
cmp
(bad)
push
imul
pop
fstp
jne
(bad)
fsin
inc
jbe
aaa
scas
lahf
fcomp
in
push
and
std
push
nop
xchg
es
pusha
mov
xchg
inc
aas
cmp
pmaxsw
inc
mov
push
mov
xchg
ja
jbe
test
fld
xchg
cld
out
fld
mov
daa
pop
jg
push
sahf
cld
sahf
jae
arpl
adc
pop
popa
jne
mov
loope
in
ror
mov
dec
shr
popf
xor
cmp
push
mov
xor
cld
adc
shl
in
arpl
push
js
jge
lods
adc
mov
push
mov
movs
ja
rcr
adc
mov
popa
aas
das
ror
jne
stos
mov
push
or
leave
jle
stc
adc
mov
xlat
je
or
nop
stos
cmp
mov
push
mov
add
xchg
xchg
test
(bad)
sbb
rcr
sub
stos
sub
pop
aad
pop
jns
into
mov
lods
call
outs
cmp
inc
popf
ret
popf
push
setg
jno
inc
inc
cmp
xchg
fiadd
mov
lea
inc
sbb
nop
jns
dec
adc
(bad)
xor
xor
sub
jl
fistp
push
iret
cmp
das
jg
and
hlt
and
sbb
dec
adc
mov
cmp
mov
sbb
or
push
sbb
fcomp
or
outs
popf
or
mov
jae
mov
mov
jecxz
pop
in
in
jecxz
into
repnz
fs
xchg
dec
in
pop
in
xor
inc
pop
ret
push
or
push
in
out
fstp
retf
leave
jae
not
push
push
ffreep
adc
daa
rol
dec
fstp
inc
aaa
mov
mov
sbb
je
xchg
pop
ret
inc
mov
(bad)
repnz
xor
dec
and
test
lods
mov
arpl
dec
iret
lock
push
out
mov
popa
and
mov
mov
les
sahf
jmp
jle
retf
or
scas
sbb
gs
(bad)
xchg
pop
dec
mov
fwait
adc
push
dec
leave
push
ins
jne
jno
jne
bound
fistp
frndint
mov
sbb
mov
mov
(bad)
fidivr
and
adc
and
mov
stos
and
lea
and
in
je
sbb
aas
push
ds
test
xchg
push
rcr
mov
arpl
cmp
push
bnd
in
icebp
test
retf
inc
sbb
imul
fs
add
fist
sub
adc
jno
adc
pop
in
cmp
xor
daa
dec
inc
leave
fnstsw
dec
div
or
ret
pusha
call
jns
shl
ins
adc
mov
or
and
lock
mov
pop
call
cmp
jge
sub
adc
int3
push
ret
retf
sbb
pusha
fstp
or
in
(bad)
nop
icebp
pop
add
xchg
push
in
dec
les
outs
mov
imul
jle
out
loopne
fdivrp
fistp
mov
imul
shl
(bad)
mov
pop
inc
inc
sbb
mov
cmp
push
push
pop
shr
movs
jae
cli
jecxz
out
push
inc
dec
dec
stos
fcmovnb
pushf
mov
adc
shl
mov
cmps
mov
in
pavgb
dec
xchg
jno
ja
adc
out
xchg
mov
add
mov
les
mov
add
mov
mov
push
ja
sub
cld
sbb
pop
or
stos
sub
jae
inc
inc
shr
mov
push
adc
dec
or
popf
sbb
jmp
cli
jb
adc
je
outs
(bad)
adc
ret
adc
ja
inc
aam
xor
xor
xchg
shl
fld
mov
xor
and
jae
enter
aad
xor
and
push
in
push
dec
(bad)
and
lods
es
call
retf
stc
jae
cld
push
pop
test
pop
jne
aas
nop
sub
movs
cmp
loop
cmps
jp
pop
jo
push
(bad)
pop
ss
leave
cs
push
fs
xor
pop
arpl
mov
sbb
mov
adc
jecxz
mov
not
mov
not
not
cmps
adc
inc
fistp
xchg
aaa
ret
test
add
fistp
addr16
icebp
cmp
push
pushf
xchg
fsub
in
push
cmps
movs
mov
ss
(bad)
xor
or
push
mov
mov
pop
ret
or
mov
and
out
adc
stos
pop
jno
xor
jb
xor
enter
ja
(bad)
outs
pusha
cmp
fstp
loop
addr16
xor
cmp
sar
in
lock
pusha
jl
repz
xchg
pop
cdq
or
call
js
ret
and
and
test
sub
push
xchg
sbb
sbb
jg
stc
out
aas
popf
pop
cld
sbb
or
jl
stos
jae
jmp
mov
mov
movs
stc
and
js
or
leave
or
movs
in
inc
jnp
dec
ficom
lods
arpl
or
je
fcom
pop
cmp
je
jns
cld
sbb
mov
pop
(bad)
pop
(bad)
sbb
cs
jb
fistp
or
mov
or
jmp
mov
dec
xchg
gs
(bad)
mov
lea
das
ins
pop
scas
scas
pop
lea
xchg
push
jno
sti
leave
stc
mov
mov
adc
aas
ss
enter
add
mov
fistp
adc
div
in
sbb
push
xlat
scas
push
and
jp
in
or
fsubr
in
fsub
sbb
cmp
sahf
mov
fadd
ja
outs
fistp
out
popf
loope
ret
sbb
jl
lods
mov
das
push
(bad)
fild
mov
(bad)
xor
(bad)
cmp
mov
or
loopne
cmp
push
adc
mov
fcomp
mov
jg
inc
in
aaa
push
and
stc
adc
int3
(bad)
sbb
inc
in
clc
mov
outs
inc
clc
cld
mov
mov
cmps
push
mov
jno
mov
out
sbb
xchg
xchg
mov
out
aad
ins
or
push
fs
mov
jl
mov
pop
fwait
jecxz
mov
ja
pop
outs
mov
mov
mov
cmps
outs
enter
in
cld
out
bound
jno
jnp
or
ret
fiadd
enter
cmps
and
xor
cmp
pop
push
dec
les
ror
and
xor
xchg
(bad)
(bad)
scas
mov
adc
xchg
imul
shl
dec
mov
push
test
sbb
stc
(bad)
push
dec
loop
cli
and
mov
adc
shr
inc
ror
sub
(bad)
fild
cmp
dec
jmp
mov
shl
std
xor
push
push
xor
xor
pop
imul
retf
lea
fld
es
movs
mov
into
les
pusha
push
cmps
jo
jo
out
jmp
inc
mov
adc
lock
out
stc
pop
jg
mov
mov
fwait
pop
leave
sysexit
xchg
lods
out
or
jne
cs
ja
ficomp
aas
pusha
adc
adc
cld
mov
mov
out
mov
xchg
jp
xchg
lea
xor
sub
dec
aad
test
pop
mov
jbe
dec
jg
scas
aas
hlt
xchg
(bad)
push
jecxz
mov
xchg
sub
dec
xchg
in
jno
jle
jb
lods
movs
dec
cmp
cmc
dec
mov
sbb
mov
inc
mov
sub
sub
ins
jle
add
dec
stos
sbb
xchg
pop
mov
add
(bad)
out
retf
(bad)
mov
fimul
jmp
movs
sub
and
in
push
out
add
(bad)
(bad)
stc
(bad)
or
cmp
enter
xchg
sbb
stos
scas
(bad)
pop
sbb
scas
sbb
inc
dec
pusha
xor
or
aad
arpl
shl
xor
cdq
shr
dec
pushf
sbb
cmp
xor
sbb
lock
test
loop
mov
pusha
mov
sbb
(bad)
popw
add
cmp
lods
sar
add
jo
repnz
cmps
shl
movs
outs
xchg
and
mov
je
shl
adc
repz
dec
into
inc
test
mov
stos
dec
fcmovnb
and
in
vpmulhw
test
mov
mov
inc
fwait
mov
repz
ret
xchg
xchg
inc
cli
(bad)
loope
inc
jb
jge
popa
inc
and
das
ins
cdq
ja
out
push
xchg
xchg
fcomp
in
jl
inc
jmp
xchg
lea
fisttp
sahf
not
(bad)
mov
xchg
cdq
xchg
imul
push
sbb
in
scas
sub
ja
pop
fsubr
sub
jmp
inc
cmp
mov
fwait
xchg
dec
out
mov
in
pop
sahf
clc
cmp
icebp
xchg
jp
pop
pop
movs
sub
jo
or
sub
push
add
cmp
call
(bad)
dec
push
call
mov
lods
jno
repnz
push
dec
mov
imul
(bad)
jmp
iret
hlt
or
fstp
cmp
pop
call
cmp
pop
call
push
or
push
aaa
arpl
jbe
dec
popf
mov
enter
mov
pop
mov
and
imul
dec
sbb
aaa
cmp
les
cmp
in
out
cmp
outs
cli
imul
mov
xchg
jle
int3
retf
xor
mov
std
add
sub
xchg
jmp
movs
jb
xchg
and
push
lods
xchg
outs
test
movs
int
push
sbb
stos
sub
fcmovnu
addr16
mov
popf
jno
adc
data16
retf
repz
mov
out
jnp
ins
cs
push
loop
and
add
imul
xchg
lods
push
adc
fwait
shr
(bad)
out
(bad)
and
push
mov
mov
aaa
aaa
pop
and
stc
rol
xchg
shl
ss
popa
xchg
mov
arpl
inc
les
sub
fild
mov
dec
js
jmp
sub
ss
data16
ja
aas
js
cmc
push
xchg
(bad)
push
cmps
out
jbe
call
loope
aaa
(bad)
scas
fucomip
cmp
mov
xor
ja
adc
out
lahf
enter
jbe
mov
push
ins
inc
mov
xchg
fmul
mov
inc
push
repnz
lods
xor
cli
out
sub
push
inc
sub
ret
dec
cli
icebp
sub
cld
pop
cwde
rcr
cmp
ja
sub
outs
push
and
movs
cmp
pop
ja
push
sub
out
hlt
js
jmp
jmp
sbb
stos
sub
popf
add
mov
pop
pop
mov
addr16
push
test
and
addr16
rcl
aam
add
push
arpl
xchg
outs
mov
dec
lods
inc
shl
jns
fwait
loope
fimul
push
sbb
fwait
jp
jae
aas
xor
jns
lea
and
sbb
sbb
test
cmp
gs
and
adc
pop
fsubr
push
push
jle
stos
into
add
das
pop
pop
aas
jnp
jle
mov
or
mov
mov
dec
stos
ss
shr
pusha
mov
fidivr
cmp
jg
dec
les
lock
xor
popa
push
mov
aam
xor
dec
mul
mov
adc
mov
shl
add
cmps
stos
pop
inc
mov
push
jl
sbb
jnp
sti
fcmovbe
mov
jo
mov
sub
jnp
ficomp
jae
loopne
outs
lds
mov
push
dec
jmp
sub
mov
xor
push
shl
mov
add
rdmsr
mov
or
jno
fwait
(bad)
enter
pop
movsx
sbb
ins
call
int
fidiv
movs
xchg
and
sbb
inc
mov
lds
cs
add
inc
loopne
inc
adc
xchg
loopne
(bad)
sti
mov
sub
xchg
mov
les
aas
ins
clc
lea
repz
or
push
xchg
fwait
movd
ror
std
data16
rcr
(bad)
push
ss
fisubr
fst
scas
cwde
jbe
(bad)
fidiv
and
cmps
das
scas
aam
sar
xchg
cdq
push
inc
xlat
and
(bad)
or
cmovns
push
dec
push
mov
popf
jo
mov
dec
(bad)
jmp
dec
out
xor
sbb
lea
retf
xchg
out
mov
adc
adc
push
and
and
int
ret
xor
pusha
inc
clc
mov
(bad)
pop
pop
pushf
out
outs
mov
mov
mov
repz
outs
mov
jmp
mov
mov
lahf
std
push
xchg
leave
idiv
push
inc
adc
out
or
sub
adc
(bad)
jbe
ds
test
stos
xlat
scas
not
lahf
lods
je
leave
into
inc
fisttp
and
jae
sub
xchg
fsub
inc
movs
cld
jmp
jle
cmp
cmp
test
jmp
lds
aam
jbe
(bad)
retf
cmp
repnz
int3
pushf
inc
ss
pushf
xchg
or
rcl
sti
imul
dec
imul
push
adc
test
mov
mov
jge
jg
out
sbb
mov
pop
movs
jbe
adc
sbb
xchg
lea
es
and
in
cmp
(bad)
retf
cdq
sub
and
shl
xor
add
adc
rcl
mov
pop
sbb
ret
push
cmc
lods
outs
fwait
xchg
mov
jne
sbb
push
adc
icebp
mov
push
pop
mov
mov
test
cdq
or
xchg
pop
mov
push
into
sbb
jnp
xlat
jl
mov
jle
sbb
clc
cli
or
std
jmp
lock
jg
sar
mov
test
mov
add
push
mov
out
mov
xor
fcom
or
push
or
mov
ss
cdq
fnstcw
(bad)
div
loop
(bad)
out
mov
(bad)
jle
mov
cli
xor
pop
pop
or
mov
ja
inc
push
mov
push
pop
sti
push
(bad)
leave
popa
pandn
lods
in
jle
enter
mov
cli
stos
aaa
dec
icebp
inc
mov
jge
scas
jg
pop
std
inc
sbb
lea
int
dec
loopne
adc
adc
ins
jge
sbb
call
popf
cmp
repnz
int3
int3
hlt
in
xchg
stos
or
outs
or
stos
iret
mov
jne
xchg
call
dec
sub
outs
sahf
mov
outs
mov
es
xor
jne
inc
popf
or
in
test
(bad)
fs
fadd
pushf
fisttp
and
not
dec
bound
xchg
leave
adc
dec
cmp
daa
jg
jle
adc
retf
lahf
std
loopne
lods
call
(bad)
ror
jmp
cmp
adc
push
cld
imul
test
dec
sub
cli
daa
mov
mov
sahf
into
test
aaa
imul
mov
jmp
call
stc
mov
lock
std
shr
mov
pop
icebp
sub
mov
stos
sbb
(bad)
push
stc
sbb
mov
(bad)
cmps
mov
pop
(bad)
retf
pushf
xchg
xor
fild
idiv
jae
(bad)
mov
lock
jg
jecxz
(bad)
push
jmp
cmp
in
mov
dec
aas
ror
(bad)
cli
sbb
int
cmp
cmp
cld
arpl
dec
cli
cdq
rol
ror
enter
int
aam
fdivr
xor
push
hlt
loopne
jmp
js
sahf
mov
cmp
push
outs
(bad)
aas
xor
jb
dec
int3
push
into
dec
pop
mov
mov
adc
sbb
shl
imul
retf
inc
leave
stos
leave
ds
je
push
leave
icebp
ficom
loope
jle
cmp
or
jmp
aaa
mov
or
loope
inc
add
and
cmp
cmp
retf
es
push
test
add
stos
pop
mov
cmp
or
push
jns
mov
mov
sbb
popa
icebp
in
mov
push
jmp
lods
push
(bad)
dec
mov
sub
pop
sbb
gs
xor
sbb
(bad)
cmp
or
daa
(bad)
(bad)
sbb
add
adc
cmc
jnp
add
xlat
shl
rol
repnz
cmp
pop
jne
rcr
xlat
jno
leave
fwait
pushf
push
add
into
push
pop
arpl
jl
neg
dec
pushf
pop
cmp
out
mov
aaa
out
pop
fisubr
fwait
call
aad
or
xchg
cmps
pop
cdq
cmps
dec
dec
fsub
ja
clc
mov
xor
xor
int3
inc
mov
(bad)
mov
and
mov
sub
xchg
add
or
fld
mov
xor
popa
cld
xchg
sub
psubsb
and
mov
arpl
std
leave
idiv
in
push
das
out
jl
xchg
jg
adc
clc
movs
pop
(bad)
pop
das
clc
xchg
jg
icebp
lahf
cld
in
cmc
rol
loopne
mov
add
and
add
jl
mov
out
push
ss
fidiv
pop
xor
xor
push
cmps
add
push
cmps
xor
dec
leave
sub
lods
arpl
ds
in
(bad)
aad
mov
retf
push
leave
daa
fcomip
retf
mov
inc
push
cli
in
pop
pmullw
xchg
mov
dec
mov
cmps
fdivr
(bad)
mov
push
int
enter
enter
xor
sahf
scas
add
ror
mov
xchg
jns
stos
push
push
mov
sub
cmp
cmp
icebp
inc
(bad)
add
mov
imul
test
pop
jmp
sub
or
outs
data16
out
retf
loope
repz
aad
jns
and
mov
mov
jb
mov
cmp
lock
js
lahf
adc
(bad)
hlt
fdivr
mov
sbb
test
pusha
lods
pop
lods
pop
pop
repz
cwde
into
(bad)
stc
pop
outs
push
inc
or
loop
popf
fstp
push
dec
leave
and
sahf
xchg
ins
push
jg
movs
and
(bad)
sti
mov
std
(bad)
icebp
addr16
retf
out
stc
(bad)
sti
(bad)
(bad)
(bad)
mov
aas
cmp
imul
xor
les
cmc
sub
stc
call
stos
es
jle
xchg
push
rcl
sbb
call
hlt
dec
mov
and
pop
mov
icebp
(bad)
sti
(bad)
clc
xchg
out
jns
aas
jnp
js
push
cli
in
(bad)
pop
nop
outs
fwait
ins
push
mov
xchg
fadd
call
or
sbb
jl
daa
mov
xchg
dec
add
(bad)
dec
out
push
push
(bad)
in
xlat
pop
pop
daa
mov
sbb
mov
repz
imul
aas
and
jmp
add
call
call
xchg
fld
cmp
pop
dec
xchg
jae
cdq
jo
and
jmp
(bad)
pushf
pop
pop
sbb
jne
cmps
out
inc
scas
pop
jg
pop
fisub
push
mov
pop
ret
or
pushf
les
xchg
xor
in
or
mov
inc
in
iret
sar
test
push
mov
push
mov
sub
loopne
js
cmp
out
ret
cdq
mov
jle
out
popf
pop
jns
cmp
(bad)
(bad)
lahf
jge
adc
js
sub
xchg
lea
pop
sar
sub
mov
fwait
sub
enter
push
dec
cmp
mov
cmp
call
and
cld
pop
push
repz
idiv
aad
ds
inc
jg
mov
std
xchg
leave
int
push
adc
dec
pop
sbb
vorps
push
call
ins
dec
icebp
imul
retf
mov
outs
retf
out
ds
retf
cmp
es
jmp
cmp
xchg
mov
call
mov
mov
push
js
fs
push
stc
cli
fcomp
int3
dec
iret
int3
ss
into
sub
sbb
out
out
outs
fidivr
pop
(bad)
jo
es
shr
retf
xor
cmp
adc
stos
jo
ins
lods
sti
or
mov
call
movs
push
mov
clc
bound
push
dec
mov
dec
jne
test
sbb
fdivr
icebp
pop
jg
sbb
stos
pop
(bad)
cmp
iret
mov
fcom
pop
imul
lea
lods
cmp
ja
adc
sub
xchg
aas
push
mov
fucom
js
and
or
fistp
in
aaa
jb
jg
(bad)
push
add
(bad)
pop
mov
icebp
pop
push
inc
fisttp
mov
xchg
cmp
ret
fwait
rol
dec
jne
ins
dec
stos
leave
cmp
inc
ja
xchg
sti
sbb
fist
fwait
loope
fstp
jae
adc
or
cld
push
icebp
test
jg
leave
mov
inc
jg
mov
retf
mov
std
or
gs
jle
mov
outs
lock
jge
jge
sti
lahf
jmp
cmp
inc
movs
mov
mov
cdq
repnz
stos
rcr
xchg
cmc
xchg
mov
dec
in
nop
sbb
repnz
iret
test
xchg
out
pop
rol
sbb
icebp
and
xchg
icebp
jmp
xchg
cmp
retf
arpl
fs
sub
stos
adc
rol
xor
or
js
pop
fild
sti
icebp
pop
(bad)
cli
mov
stc
repz
idiv
repz
popa
push
cs
sub
nop
wrmsr
cmp
pop
xchg
push
in
mov
sub
sub
xchg
jmp
adc
mov
(bad)
out
sbb
(bad)
fmul
js
icebp
jg
repz
mov
std
sbb
mov
ret
push
cld
arpl
dec
dec
mov
add
and
dec
stos
mov
pop
pop
jl
fidivr
mov
icebp
clc
jecxz
clc
stos
lahf
jnp
xlat
cmp
idiv
sub
jb
hlt
jne
inc
int
jns
test
dec
retf
inc
sbb
push
jns
jb
data16
lea
ins
jne
cmps
dec
sbb
std
repnz
dec
sar
out
(bad)
cdq
mov
fwait
sub
popf
sbb
jno
jne
xor
fadd
mov
aas
test
pop
fs
mov
repz
aad
cmp
ins
xchg
in
clc
loope
(bad)
push
fsub
add
retf
xor
int
jo
clc
(bad)
jnp
stc
jbe
iret
lahf
mov
jp
mov
les
ja
es
mov
bound
or
mov
push
adc
pop
mov
nop
pop
xchg
sub
fwait
push
test
stos
int3
mov
or
(bad)
sbb
mov
jle
pop
clc
sahf
xchg
in
addr16
enter
es
fs
in
movs
inc
imul
xor
shl
or
pop
inc
push
pop
push
xchg
fwait
and
idiv
dec
mov
inc
push
cmc
scas
cmp
out
ins
sub
pusha
fisub
sbb
pop
xor
jbe
in
xchg
push
pushf
xor
mov
int
push
shl
cs
cmp
cmc
xor
mov
je
test
std
or
hlt
loopne
sahf
xchg
push
dec
cmp
std
ret
and
mov
outs
out
(bad)
cmp
cmps
mov
inc
arpl
in
sbb
mov
dec
(bad)
int3
popf
gs
cmp
mov
mov
mov
sti
xor
xchg
lds
fistp
out
std
(bad)
cmp
std
(bad)
imul
fwait
or
xchg
cli
lds
pop
jno
xchg
hlt
in
int3
mov
je
shl
pop
add
sub
sbb
xchg
mov
shr
mov
repz
out
cmp
retf
addr16
lock
pop
stc
fiadd
or
xchg
or
pop
dec
lds
sbb
jp
stc
sti
mov
js
cmps
jg
fld
mov
xchg
push
xchg
shr
mov
(bad)
xchg
jg
pop
std
pop
sub
in
mov
or
mov
jae
jp
shl
xchg
(bad)
xor
mov
cmc
xchg
div
cmp
jbe
xchg
mov
aam
in
arpl
mov
mov
mov
std
data16
push
call
cmp
into
(bad)
adc
xor
aaa
jae
jecxz
sub
mov
cmc
out
sub
mov
shr
sbb
inc
inc
mov
jns
jb
jbe
sbb
mov
(bad)
enter
imul
imul
and
sahf
mov
rol
in
(bad)
push
cmps
jg
push
push
js
lds
mov
sub
xor
je
mov
(bad)
cmp
sbb
xor
fbld
(bad)
mov
add
mov
(bad)
jg
inc
jle
(bad)
jg
xor
and
in
sbb
test
push
aam
shl
cmps
(bad)
pop
in
inc
inc
mov
movs
push
imul
cwde
fs
in
lock
(bad)
mov
repz
aad
lea
dec
xor
jnp
outs
(bad)
ror
mov
int
movlps
or
inc
adc
imul
jecxz
jnp
out
loopne
pop
ja
lock
popf
lea
add
test
iret
xor
mov
outs
je
mov
hlt
outs
jl
hlt
leave
iret
leave
cmp
std
loope
mov
ss
loop
push
out
xchg
aaa
pop
push
mov
cmp
push
retf
imul
mov
int3
push
and
aaa
mov
mov
jle
push
inc
and
ret
nop
js
icebp
(bad)
fcomip
pop
mov
iret
jg
push
shr
scas
cld
ror
call
repnz
movs
clc
fild
(bad)
push
mov
scas
xor
mov
mov
add
jns
mov
jg
push
and
test
loop
popa
lds
cmp
adc
jnp
xor
pop
mov
idiv
pop
bsf
inc
pop
clc
sahf
xchg
add
cli
sub
xor
retf
cmp
xchg
call
and
jge
scas
fldcw
jo
in
xchg
mov
and
outs
mov
hlt
(bad)
mov
cmps
jg
push
inc
das
dec
and
cmp
retf
pop
lahf
push
add
cmc
stos
cmps
jle
mov
loop
in
out
mov
fcomp
sub
popf
push
push
clc
data16
ficomp
ret
clc
pop
and
dec
xor
mov
js
out
add
aaa
push
das
pop
cmp
jl
out
loopne
ins
hlt
into
popf
leave
pop
sub
dec
inc
stc
fisub
xor
xor
adc
cmp
hlt
test
mov
push
test
cmp
xlat
push
clc
sar
scas
clc
jecxz
cmp
stc
jg
clc
sar
dec
repnz
dec
pop
dec
arpl
and
jae
push
in
xor
cmp
int
xor
addr16
xor
mov
adc
or
push
sbb
xor
cmps
not
(bad)
mov
repz
cmp
std
shl
frstor
iret
add
xchg
mov
jecxz
aaa
push
add
hlt
pushf
bound
adc
sub
jecxz
inc
pop
loop
call
imul
push
cld
cld
loop
dec
push
xor
fucomp
mov
(bad)
imul
popf
pusha
js
jecxz
dec
leave
xor
pop
jp
cli
ror
stos
inc
cmp
imul
jmp
outs
jge
cli
jmp
xchg
xchg
retf
xor
daa
pop
dec
pop
dec
jnp
shr
iret
inc
mul
call
loopne
pop
push
cli
or
shl
cdq
pop
cli
(bad)
pop
mov
push
leave
jmp
test
loopne
xchg
cmp
pushf
xchg
fdivrp
push
cld
sbb
jns
(bad)
mov
mov
ja
loopne
pop
stc
lods
pop
std
sub
xor
mov
fidivr
push
inc
shr
les
dec
push
jbe
cmp
sub
test
sbb
nop
sbb
test
pop
mov
mov
(bad)
mov
jns
lods
jmp
aas
jmp
inc
std
test
repz
addr16
cmp
in
push
loope
test
xor
mov
jecxz
xchg
imul
push
ret
fwait
fs
or
mov
icebp
jae
mov
cmc
aaa
jge
leave
jb
das
arpl
xor
outs
dec
sub
mov
das
xchg
fild
jno
jmp
sahf
push
lahf
out
jns
out
repz
inc
addr16
push
cwde
fmulp
lods
sahf
jp
cli
jae
out
int
outs
pop
jg
aam
seta
cmp
dec
cmp
stos
push
add
outs
xor
adc
leave
xchg
sbb
sbb
inc
imul
test
jmp
popf
movs
pop
cmp
pop
aas
iret
and
jp
in
or
addr16
inc
mov
add
call
add
ret
inc
fcmovb
in
and
outs
out
(bad)
jno
call
imul
sbb
adc
movs
mov
sbb
sti
shr
and
pushf
add
mov
(bad)
jmp
jl
mov
in
pop
xor
or
lea
xor
sar
mov
add
xlat
mov
loop
sub
and
retf
les
pop
iret
xchg
cli
and
xor
aas
cmp
(bad)
into
mov
(bad)
cmp
jmp
imul
dec
shl
jno
mov
push
cmc
xchg
fsub
pop
nop
jbe
jmp
adc
add
daa
push
lods
cmp
je
inc
push
gs
in
inc
jle
test
add
cwde
jl
jns
pusha
jmp
(bad)
jo
cld
out
popf
sbb
cmp
(bad)
js
inc
sub
sub
test
cmp
inc
arpl
int3
aas
or
mov
jno
adc
inc
sub
adc
(bad)
inc
(bad)
jg
sti
mov
aaa
sti
clc
aaa
xlat
clc
inc
lds
lock
cmp
loopne
dec
retf
pop
das
dec
outs
or
jge
test
rol
cmps
push
inc
xor
xor
sbb
sbb
inc
stos
idiv
popf
out
mov
addr16
out
out
jl
mov
ds
fbld
xor
pop
sub
rol
retf
scas
mov
mov
fs
xchg
xchg
xchg
mov
sbb
mov
mov
push
test
ss
mov
jae
pop
(bad)
popf
icebp
outs
jg
scas
dec
or
xor
xchg
mov
in
cmp
std
(bad)
data16
(bad)
int3
addr16
xor
scas
add
fld
pop
push
pop
jae
cld
aas
jge
mov
dec
pop
neg
cli
xchg
loopne
mov
mov
les
fs
outs
xchg
scas
cmovae
outs
mov
mov
xchg
(bad)
pop
daa
xchg
fidiv
nop
push
cs
fidiv
stos
push
dec
data16
sub
fidiv
inc
dec
test
sub
dec
sub
call
aas
out
sub
cmps
std
das
pushf
sub
mov
enter
and
mov
ds
mov
fcomi
aas
lea
iret
mov
and
sub
in
inc
fadd
and
and
(bad)
cmp
dec
push
arpl
mov
mov
loopne
ja
cmp
pop
dec
popf
sar
(bad)
stos
out
std
(bad)
fnstenv
cmp
cmps
adc
inc
out
push
dec
cmp
aam
aaa
cmp
dec
adc
sbb
dec
icebp
add
push
push
sub
(bad)
cmp
lahf
jg
imul
lods
in
out
jge
jmp
out
mov
mov
sub
icebp
mov
clc
cmp
hlt
adc
mov
dec
imul
call
cmps
push
stc
pusha
push
jbe
cdq
mov
jge
repnz
cli
hlt
aam
dec
or
jg
and
mul
sub
xchg
(bad)
ds
ror
call
jl
in
nop
jns
inc
cmp
(bad)
(bad)
adc
rcr
xor
sbb
pop
lods
int
(bad)
pusha
jae
jle
sub
inc
push
mov
pop
pushf
mov
ins
sbb
xchg
arpl
xchg
daa
fcomp
nop
movs
(bad)
add
lahf
enter
shl
out
ins
push
jne
push
mov
iret
jle
outs
xchg
or
sbb
mov
stos
jnp
fimul
sbb
rcl
push
xor
xchg
mov
xor
mov
out
int
mov
or
idiv
and
outs
sub
dec
sub
fs
outs
stos
jb
adc
mov
(bad)
aaa
cmp
mov
pop
movs
lea
mov
pop
mov
dec
mov
aad
popa
lods
adc
(bad)
rcl
adc
addr16
sbb
push
push
jnp
mov
push
imul
adc
lods
(bad)
(bad)
jp
ins
cmps
sbb
data16
rcl
in
and
data16
je
push
jmp
sahf
jae
ficomp
push
xor
xlat
repz
pusha
mov
repz
pop
data16
mov
enter
sar
or
loop
pop
scas
out
push
in
sub
leave
bound
stc
(bad)
lods
dec
mov
(bad)
mov
test
pop
daa
sbb
cmp
jns
test
add
pop
mov
mov
aam
cmc
dec
jecxz
test
lea
repz
xlat
test
test
pop
ja
mov
xchg
xchg
sbb
int
cld
mov
jne
mov
call
mov
inc
mov
mov
xor
inc
xor
cs
adc
leave
mov
sbb
test
shr
scas
push
cmps
jns
adc
iret
or
and
inc
and
das
out
ret
ja
mov
sub
call
or
imul
lahf
and
cmp
push
add
out
xchg
(bad)
xchg
andnps
add
cmp
jno
sub
jb
ins
push
push
mov
jmp
repz
leave
cmp
cmp
cli
fdiv
xchg
(bad)
je
cli
daa
loopne
out
dec
fstp
popf
les
call
xor
loop
mov
jg
inc
scas
lods
int3
lods
mov
mov
arpl
sub
inc
mov
xchg
mov
xchg
sbb
pop
sub
pop
cld
mov
shl
mov
mov
cmp
xlat
mov
xchg
aad
inc
push
lds
xor
fdiv
fwait
test
dec
mov
sar
cwde
add
and
loope
ins
les
call
popf
pop
fsub
mul
js
jecxz
dec
je
lock
sub
inc
push
in
cmp
pop
cmp
aaa
xor
xlat
clc
jg
pop
fld
fs
inc
or
dec
mov
iret
mov
outs
jbe
adc
or
xor
daa
loop
sti
or
lods
and
fist
jmp
push
je
rol
add
in
jns
int3
mov
iret
or
fistp
out
mov
movs
sahf
xchg
(bad)
jp
sbb
push
dec
fisttp
push
data16
push
in
movs
ins
shl
xchg
lock
loopne
fidivr
and
dec
rcl
add
repz
sub
xlat
jmp
aad
call
xor
mov
pop
xor
mov
mov
mov
inc
push
mov
out
jbe
bndstx
fnstcw
lds
mov
outs
xor
push
pop
mov
mov
sar
iret
or
fiadd
in
in
aaa
fsubr
jno
rcr
mov
mov
dec
mov
retf
pop
loope
ret
sub
inc
stc
add
push
push
mov
sbb
jns
add
iret
inc
mov
sbb
movs
in
adc
repz
mov
jmp
cmp
dec
stos
hlt
int3
add
pop
mov
test
adc
mov
sbb
loopne
cmp
mov
jmp
xor
test
jl
dec
jp
call
sbb
aaa
fucomip
loope
lods
jg
jl
repz
push
test
fmul
rol
out
or
or
(bad)
jns
aam
sbb
out
and
xor
icebp
sub
cmc
mov
int
mul
sti
pop
ss
imul
iret
sub
aaa
mov
cmp
push
adc
jp
sub
int3
and
icebp
cmps
into
not
pop
xor
sbb
cmps
xchg
test
xchg
sti
movs
jbe
inc
sub
popa
jl
sub
pmaxsw
jg
push
mov
dec
mov
jns
mov
push
aam
movs
mov
dec
leave
leave
test
out
cmps
retf
push
cld
push
push
stos
push
loope
test
arpl
std
inc
adc
inc
push
popa
fcom
mov
leave
xor
push
and
ror
jbe
rcr
movs
add
dec
repnz
mov
push
jbe
movs
ins
shl
pop
ss
xchg
loope
push
mov
add
xchg
adc
loopne
int
and
xor
test
lea
aam
fcomp
pop
into
dec
aad
addr16
out
pop
out
repz
pop
ins
push
int3
xor
leave
jmp
pop
cmp
jg
cwde
int
ins
daa
jae
out
mov
jbe
dec
popf
cld
xchg
sub
dec
mov
ret
xor
pushf
aas
dec
inc
pop
inc
push
mov
jno
stc
pop
arpl
loopne
es
repnz
iret
push
mov
mul
dec
adc
into
loop
push
out
pop
push
int
movs
fisubr
push
cmps
in
cmp
(bad)
mov
mov
pop
mov
push
repnz
jno
pop
stos
(bad)
or
cmp
adc
inc
cs
inc
adc
mov
lahf
gs
push
or
adc
adc
push
out
dec
sub
adc
sbb
mov
adc
jnp
jnp
and
or
xor
cli
sbb
iret
xor
lea
mov
inc
ficomp
mov
cmp
arpl
scas
push
dec
and
loopne
nop
xchg
rcl
nop
cmp
push
sub
adc
mov
int3
jle
mov
inc
movs
neg
cmc
jmp
cmp
fistp
xchg
xlat
add
arpl
test
hlt
in
or
xchg
xor
cmp
sub
cmp
and
adc
push
push
outs
cmp
pop
cmp
fs
ss
jmp
cmp
and
das
loopne
inc
ret
inc
ficomp
fisubr
and
outs
pop
repz
movs
jae
sbb
mov
push
and
std
push
mov
mov
(bad)
jne
retf
cdq
jp
dec
sbb
jmp
pop
and
fwait
adc
test
loop
sti
dec
pop
mov
loope
mov
rep
mov
and
cmps
cwde
std
test
xor
fst
clc
mov
fwait
push
iret
inc
fisubr
retf
rol
mov
push
and
int
jl
xor
fisub
pop
and
loopne
ds
inc
jmp
test
adc
adc
fs
sti
push
out
add
jg
cwde
pop
lahf
inc
ins
or
dec
(bad)
jb
gs
in
loopne
test
pushf
ds
fmul
jae
ins
out
in
xchg
dec
sbb
ds
and
(bad)
cmp
xchg
inc
enter
sbb
movs
jne
xchg
fcom
mov
add
scas
sahf
ins
mov
sub
int
adc
sub
push
es
in
rcl
mov
rol
xor
in
jno
inc
cmp
call
cmp
stc
stos
sbb
and
mov
xchg
ss
cmp
cdq
jmp
fcmovnu
dec
dec
fcmovnu
in
movs
test
fistp
xchg
lahf
movs
add
pop
repz
mov
or
and
cmp
pop
in
mov
outs
pop
aaa
ins
mov
xchg
mov
(bad)
(bad)
push
mov
in
cld
jbe
rol
jns
inc
shl
mov
out
pop
ins
ins
outs
cs
push
cmp
mov
adc
mov
ret
mov
push
test
add
cmp
ret
in
mov
push
inc
(bad)
push
scas
scas
movs
ss
cmp
retf
cmps
pop
popf
sbb
jge
(bad)
cmps
fs
jmp
pushf
jmp
sbb
xlat
jnp
mov
jl
or
jecxz
jae
(bad)
jbe
xchg
jne
sub
js
push
shl
(bad)
retf
mov
aaa
in
push
int3
pop
int
sub
mov
push
ins
test
ins
(bad)
cwde
mov
loopne
(bad)
aad
dec
jno
or
pmullw
adc
sti
ficomp
mov
mov
shl
or
sbb
dec
mov
int3
push
cs
mov
jge
xchg
test
in
and
mov
test
inc
leave
or
stc
test
je
in
dec
pop
mov
or
ja
stc
jbe
push
dec
aam
fiadd
pop
mov
jg
in
repz
es
push
or
cmps
cli
jmp
jo
repz
imul
imul
xchg
or
mov
inc
test
and
mov
fst
inc
lea
push
shl
mov
sub
xor
ss
sti
sub
(bad)
push
cmps
adc
out
imul
imul
sub
adc
mov
dec
imul
fstp
cmp
xor
sub
outs
xchg
dec
out
mov
dec
lea
jbe
scas
fisubr
(bad)
cli
sub
sub
mov
int
(bad)
adc
sub
sar
ins
lods
out
(bad)
hlt
int3
sub
fs
jb
add
repnz
loop
mov
clc
pop
test
mov
or
call
add
sbb
call
push
or
ins
jb
test
lahf
das
mov
xchg
xchg
pop
mov
out
in
in
jecxz
mov
inc
(bad)
fcmovne
fisttp
xchg
and
in
add
loope
movs
not
shl
pop
stos
sub
xchg
test
or
inc
fidivr
ret
pop
adc
sbb
pop
cs
into
xchg
out
dec
(bad)
popf
jns
jg
mul
push
popf
ja
ja
fst
loopne
mov
pop
in
sub
cmp
in
movs
out
dec
mov
push
adc
je
gs
push
rol
push
scas
ins
addr16
test
lds
test
sbb
dec
lods
push
mov
mov
stc
dec
add
aad
sbb
jle
out
rcl
das
int3
movs
dec
repnz
enter
iret
outs
mov
mov
push
iret
or
ret
pop
xchg
outs
dec
pushf
mov
ret
cmp
add
mov
and
fucomi
(bad)
outs
out
pop
cmp
inc
add
aad
xor
pop
push
xor
push
ret
cld
push
ret
rol
out
mov
repnz
cli
outs
mov
cmp
fnstenv
inc
xor
and
shl
int3
jae
push
pop
sbb
pop
mov
rol
and
cwde
rcl
or
pop
fnstenv
(bad)
dec
or
lock
push
pop
sbb
out
sbb
fnsave
mov
jns
in
sub
mov
mov
rcl
push
push
cmp
inc
test
gs
dec
out
shr
out
fistp
test
int
das
sub
(bad)
fcmovne
cld
(bad)
mov
mov
lea
xchg
ss
loop
ss
or
aad
mov
and
int3
add
add
or
adc
mov
add
cld
(bad)
pop
dec
push
in
out
(bad)
mov
push
push
out
sahf
lahf
jl
or
addr16
mov
imul
scas
mov
stos
mov
mov
(bad)
mov
fcomp
cmc
dec
in
mov
mov
imul
xchg
sub
pop
cmp
outs
mov
(bad)
pusha
loop
ficom
out
in
adc
adc
in
jne
xchg
(bad)
sub
fisttp
jle
bound
test
xlat
cmp
sbb
ror
in
dec
mov
xor
pop
push
out
enter
fucom
push
jp
int3
pop
mov
inc
xchg
xchg
pop
(bad)
dec
mov
or
jmp
out
cmp
or
mov
mov
into
cld
cmp
ret
mov
mov
(bad)
(bad)
pop
pop
jmp
xor
inc
or
(bad)
cmps
jno
je
pop
jge
mov
gs
inc
imul
adc
mov
movs
dec
jne
pop
sbb
push
mov
mov
out
push
mov
in
jbe
popa
cdq
mov
jnp
clc
mov
cs
test
js
adc
lock
ds
ss
fcmovnbe
std
dec
mov
and
imul
imul
jmp
mov
int3
sahf
jg
jmp
jmp
push
jns
aas
aad
inc
or
xor
lock
pop
test
out
pop
cmp
fst
(bad)
fcmovnb
(bad)
jecxz
enter
out
and
or
loopne
xchg
push
xor
mov
ds
enter
cmps
movs
daa
icebp
data16
(bad)
out
cli
js
push
jae
adc
movs
gs
xor
push
xor
out
loopne
lods
pop
cmp
pop
add
int
bound
push
jmp
outs
mov
pop
push
std
test
inc
jnp
adc
sub
push
mov
sub
retf
mov
ins
xor
scas
sub
es
push
popf
push
int3
imul
fstp
imul
loop
adc
movs
out
inc
cld
xor
pop
repnz
test
sbb
fwait
gs
xor
push
xchg
and
jbe
sub
jae
fcomi
jge
jmp
sbb
inc
xchg
(bad)
xchg
xor
xor
(bad)
out
dec
push
xchg
cmps
pop
jp
aaa
inc
inc
dec
repz
and
data16
and
lods
sub
ja
(bad)
retf
jno
jmp
lahf
push
push
scas
mov
xor
mov
dec
pusha
fidivr
shl
add
outs
mov
aas
(bad)
addr16
jae
cdq
aas
mov
aas
sti
ins
mov
inc
mov
push
mov
shr
and
das
out
dec
stos
adc
sbb
loopne
int3
out
ss
mov
jnp
ja
mov
dec
inc
inc
push
(bad)
adc
outs
outs
sar
push
xor
mov
sub
sbb
sub
mov
pop
sub
cli
mov
add
dec
ins
retf
iret
jno
mov
ret
jnp
xor
inc
xchg
iret
ss
test
sar
xor
push
xor
icebp
stos
pushf
adc
ror
(bad)
sub
sbb
inc
mov
adc
pop
popa
sahf
je
jnp
sti
test
add
jg
arpl
stc
xor
add
and
push
cmp
inc
mov
push
cld
adc
mov
movs
push
jge
xor
xor
aam
sub
aam
add
lds
dec
loope
gs
les
sahf
das
retf
test
popf
pop
add
sub
cmp
and
sbb
push
fwait
inc
es
pop
fnstcw
mov
jne
and
xchg
push
cmp
cmps
jmp
loope
sbb
iret
cmp
int3
test
sti
clc
xchg
(bad)
ins
out
sti
push
jne
cld
sbb
inc
inc
mov
pop
movs
hlt
or
mov
inc
push
pop
mov
cmp
imul
scas
sub
dec
add
sti
loop
xchg
push
scas
xchg
mov
push
xor
imul
jnp
icebp
mov
dec
sub
xor
xchg
push
lock
sub
int3
xor
mov
pushf
inc
dec
add
jns
data16
jb
in
pushf
jb
aaa
push
sbb
stc
rcr
(bad)
adc
or
or
or
adc
dec
and
enter
jmp
mov
cwde
sub
inc
cmp
add
xchg
sbb
ins
jb
dec
cli
fldenv
cmps
sub
sbb
retf
fwait
fs
push
add
mov
inc
inc
adc
rcl
ficomp
mov
push
sbb
lods
add
mov
test
adc
push
push
sbb
cwde
sub
cmp
adc
pop
(bad)
popf
jmp
je
fldcw
ds
(bad)
(bad)
in
jg
cmps
lahf
mov
movs
push
out
mov
mov
data16
jp
jns
add
cmp
mov
ret
arpl
out
dec
clc
push
lods
ds
lods
and
hlt
sbb
loope
mov
jecxz
cwde
mov
add
ficomp
mov
adc
fidiv
mov
jo
out
out
mov
fmul
scas
fistp
sbb
inc
cmp
add
mov
sbb
shl
std
jne
jne
cmc
and
sbb
movs
mov
ss
in
sbb
addr16
in
mov
xor
or
and
xor
repz
xchg
stos
ds
je
and
fucomp
and
mov
mov
lds
sbb
dec
fst
pop
stc
arpl
and
jns
mov
push
xchg
imul
sbb
and
sbb
mov
nop
test
scas
or
in
xchg
pop
test
aad
or
add
test
iret
pop
ror
fnstcw
jnp
lods
retf
jl
dec
mov
daa
mov
and
sbb
test
adc
mov
adc
cmp
cmps
push
addr16
into
dec
mov
dec
fldenv
fidivr
pop
pop
inc
icebp
mov
fldenv
push
sub
mov
imul
scas
sub
stos
nop
and
rcl
mov
bound
jg
ins
rcl
dec
push
mov
pusha
or
int
ins
iret
dec
mov
dec
xchg
and
xchg
in
add
hlt
lock
repnz
repnz
mov
jmp
jmp
sahf
fld
pop
adc
aaa
imul
pop
or
xchg
out
xchg
add
cmp
or
and
inc
jp
mov
pop
xchg
jle
sbb
cs
mov
push
inc
je
mov
loop
lods
mov
retf
and
mov
cmc
jmp
movs
std
sbb
je
lds
inc
mul
add
jno
les
or
mov
xchg
cli
das
push
in
add
cs
ret
or
ret
mov
inc
sub
push
pop
add
popf
sub
mov
push
adc
add
mov
aad
icebp
inc
cli
mov
mov
leave
fcomp
mov
ss
shr
inc
and
add
repz
fs
cmp
inc
mov
shl
pusha
jnp
out
mov
xor
push
(bad)
jle
push
push
mov
dec
ins
ss
ins
in
in
popf
mov
arpl
sub
dec
imul
stos
or
clc
or
push
mov
sbb
lea
inc
out
jmp
mov
ins
sbb
adc
mov
fst
xor
mov
push
push
scas
inc
mov
jmp
test
retf
(bad)
xor
aad
and
daa
jl
add
cmp
mov
(bad)
jecxz
aas
int
mov
ins
test
pop
mov
or
sbb
mov
push
cmc
mov
pop
lock
test
adc
sar
not
jae
dec
je
(bad)
ret
mov
push
dec
dec
pop
sbb
sti
xchg
mov
std
add
ja
in
pop
adc
jae
push
mov
xchg
mov
mov
add
ret
pop
inc
pusha
adc
movs
mov
das
outs
in
test
mov
push
cmp
sti
fisubr
push
fcomp
fs
mov
xchg
fild
test
rol
xchg
or
addr16
mov
(bad)
out
or
sbb
cmp
jno
stos
addr16
pop
mov
pop
lds
or
es
sbb
movs
cmc
test
clc
mov
xor
repnz
addr16
repz
mul
adc
f2xm1
aas
int
or
sbb
ss
xchg
gs
lds
daa
ror
sti
xchg
xor
stos
mov
je
hlt
cwde
icebp
ins
ins
ins
mov
inc
jmp
xchg
mov
mov
clc
je
inc
pop
mov
xchg
fsubp
enter
pushf
cmp
call
dec
cmp
icebp
pop
jg
mov
mov
hlt
inc
(bad)
out
pop
scas
in
fld
sub
jle
cmp
stos
enter
push
inc
cwde
inc
out
push
stos
pusha
(bad)
fwait
movs
leave
pusha
cwde
les
pusha
push
pop
repz
pushf
out
push
push
ins
add
out
imul
jmp
clc
add
jmp
arpl
stos
ss
xchg
(bad)
fsub
lea
or
xor
(bad)
cmp
or
or
in
sahf
or
fmul
out
or
out
div
lahf
mov
hlt
aam
out
fwait
ror
mov
or
mov
and
xor
jmp
dec
inc
loope
pushf
gs
call
dec
or
popf
jno
or
and
push
arpl
fs
outs
or
mov
imul
outs
pop
aaa
fstp
mov
jg
sbb
adc
xor
cwde
mov
jnp
and
push
and
(bad)
xor
sbb
popf
pop
sub
jae
retf
inc
jmp
(bad)
push
daa
into
cmp
cmps
xor
mov
pop
(bad)
cs
xor
dec
(bad)
mov
mov
pushf
mov
fisubr
inc
ror
arpl
dec
cmp
mov
(bad)
aam
pop
mov
xor
push
sub
gs
or
daa
test
mov
rcl
pop
push
mov
addr16
push
dec
mov
outs
push
and
ins
outs
push
fst
add
std
sub
jp
es
inc
outs
ins
sub
or
adc
mov
jmp
leave
aad
cmp
(bad)
and
pushf
xchg
or
dec
xchg
adc
fistp
dec
fwait
sub
scas
fisubr
xor
mov
ss
mov
retf
mov
sahf
call
jne
inc
push
ja
stos
arpl
mov
jge
jecxz
(bad)
push
repz
xor
fist
push
les
xor
shl
or
xor
pop
lea
and
mov
mov
xor
adc
lahf
sbb
test
jmp
sbb
cs
mov
jl
cmc
mov
xlat
adc
jle
sbb
movs
int3
mov
fld
adc
loopne
xchg
test
cmp
inc
mov
xchg
nop
fbstp
in
retf
js
inc
rol
mov
in
add
sbb
cmp
lods
or
pop
lods
in
xor
inc
les
cmp
fisub
sub
adc
sub
mov
arpl
and
pop
jmp
jnp
jmp
outs
push
shl
push
inc
inc
out
sahf
ins
xor
leave
push
jo
cmps
pop
loopne
xchg
inc
adc
pop
add
jo
out
jbe
jo
pop
into
adc
(bad)
cdq
sbb
pop
jge
popa
cs
stos
dec
cdq
jmp
and
adc
ret
inc
xchg
dec
push
in
or
int3
inc
fcomp
lods
outs
dec
mov
test
out
rcl
es
lods
and
fwait
mov
push
mov
pop
inc
dec
sub
mov
cld
add
dec
adc
std
cli
ror
(bad)
les
ret
loope
adc
imul
pop
mov
inc
(bad)
fs
rcr
into
test
div
fisttp
shl
pop
jo
jp
or
xchg
dec
cmovnp
push
fisttp
sbb
xchg
pop
dec
jle
call
sar
mov
pop
mov
or
inc
hlt
loop
jmp
sub
mov
or
push
cwde
cmp
outs
enter
in
dec
push
and
sbb
ror
mov
lahf
dec
adc
test
outs
movs
adc
pusha
sub
xchg
push
imul
mov
add
and
std
mov
(bad)
fmul
push
and
jge
movs
gs
push
jg
int
xchg
retf
inc
xchg
jmp
pop
mov
and
in
in
mov
push
jle
jl
push
and
retf
cmp
xor
stos
mov
ror
outs
sub
mov
dec
jl
ret
test
cmc
inc
sub
in
pushf
shl
lahf
lods
jg
pop
jp
lock
mov
std
adc
aaa
sahf
sub
jmp
mov
je
jmp
gs
mov
in
scas
sbb
mov
(bad)
retw
mov
sub
add
sub
jecxz
xor
push
pop
iret
mov
ja
in
pop
and
and
in
jg
mov
js
getsec
arpl
push
arpl
sub
or
outs
xor
mov
pop
adc
fwait
bound
mov
sub
cmp
fwait
stc
sar
adc
nop
mov
push
or
mov
test
cmp
jl
mov
and
and
xchg
xchg
push
repz
fwait
xchg
rol
and
and
mov
shl
loope
pop
mov
sbb
mov
mov
js
xchg
jns
lahf
pop
mov
and
fsubr
jb
mov
fcomp
leave
pop
add
in
js
sub
lds
inc
neg
ret
jnp
pusha
jnp
ja
shl
scas
(bad)
popf
cmp
pop
(bad)
(bad)
in
ret
ret
shr
cs
jnp
call
loope
mov
scas
aad
(bad)
(bad)
xchg
mov
xchg
mov
fld
adc
aad
pop
out
and
push
pop
adc
icebp
rcr
not
cld
dec
aam
xchg
int3
jl
popa
ja
rcl
push
xor
gs
sub
add
mov
cs
loope
jne
jae
sub
pop
out
inc
or
or
xchg
add
shl
cmp
dec
int3
push
call
movs
pop
push
imul
ds
jbe
cli
push
jns
stos
loopne
xchg
ss
jno
inc
ret
(bad)
sbb
xor
cs
pop
push
and
fcom
stos
xor
enter
je
jecxz
retf
stos
lods
lea
dec
ss
ja
inc
mov
sub
xchg
popa
and
ja
in
ficom
dec
xchg
test
int
pop
push
not
imul
adc
add
xor
jl
cmc
sbb
leave
push
jp
push
jmp
or
xchg
div
jae
movs
daa
mov
inc
sbb
and
push
xchg
not
ins
mov
cdq
movs
cmps
sbb
mov
pop
push
pop
push
jb
js
mov
call
aam
rcr
subps
dec
sbb
js
cmp
xchg
sub
fnsave
and
adc
movs
pop
pusha
push
ja
enter
jl
scas
jae
into
repz
ror
mov
fwait
bound
test
ds
adc
sbb
test
dec
sub
ret
push
cmp
sbb
sub
dec
aas
scas
adc
stc
pop
push
adc
ins
pop
or
mov
sub
fisttp
push
pusha
mov
cld
jg
mov
adc
aam
mov
ja
sbb
enterw
push
cld
push
add
daa
test
mov
mov
cwde
push
add
xchg
adc
cmp
mov
in
push
inc
jno
sti
lods
hlt
sub
pop
and
popa
imul
jbe
push
mov
cmp
jbe
lock
cdq
loope
inc
pop
mov
cmp
cmp
clc
cs
int
rcr
inc
or
add
xor
ja
sbb
fistp
aad
rcr
mov
dec
sub
add
arpl
adc
movs
push
test
push
sbb
push
mov
inc
repnz
push
ja
aam
sub
jmp
cmc
pop
pop
dec
jecxz
mov
push
cmps
sbb
and
sbb
and
adc
push
sti
or
mov
fild
dec
or
lds
jns
cs
push
lds
lods
push
jl
pop
sahf
out
and
mov
ja
mov
leave
mov
(bad)
jae
ret
adc
into
xor
bts
push
mov
hlt
movs
data16
int3
hlt
scas
xchg
xchg
(bad)
jno
add
ins
push
jbe
cwde
idiv
push
jmp
out
clc
mov
dec
loope
(bad)
movs
imul
jbe
sbb
adc
mov
out
(bad)
cli
jl
cmp
xchg
and
enter
sub
mov
push
das
stos
xchg
fisub
push
push
call
mov
js
pusha
clc
loope
jo
mov
aaa
push
cmc
xchg
xlat
ret
sbb
retf
dec
ss
mov
(bad)
clc
mov
or
push
xlat
cmps
jae
cmp
xchg
xor
mov
adc
popf
mov
pop
ret
dec
loope
dec
adc
inc
movs
mov
cmp
hlt
frstor
push
lds
push
xchg
loop
pop
push
outs
mov
fcmovb
mov
(bad)
das
retf
ffree
pop
push
and
out
xchg
xor
jge
push
push
jle
repz
arpl
sbb
and
outs
mov
mov
(bad)
ja
xchg
and
aas
shr
sub
xchg
mov
dec
pop
(bad)
sti
and
mov
add
jecxz
xchg
aad
jmp
enter
cdq
add
xchg
int
test
xchg
pop
retf
mov
vpsubw
xchg
pop
fild
cmp
jmp
adc
sbb
das
cmp
mov
fs
movs
mov
jge
fcomp
jnp
dec
es
outs
mov
lock
and
lds
rol
loop
inc
dec
popf
sbb
mov
ja
(bad)
push
leave
sbb
xchg
add
and
push
mov
mov
sahf
cdq
loope
and
imul
leave
xchg
test
dec
mov
call
lock
xor
pop
ja
movs
mov
pop
xchg
push
add
sahf
mov
pop
nop
and
retf
push
add
aam
jecxz
jnp
cmp
mov
xchg
repnz
mov
cmp
mov
pusha
dec
pop
adc
or
sbb
sub
dec
(bad)
aas
sbb
sub
and
jl
fdiv
dec
jmp
cdq
popa
pop
pop
cmp
pop
mov
shl
mov
shl
adc
mov
stc
mov
lea
mov
mov
xchg
icebp
sbb
fcmovne
dec
fdiv
pop
push
call
rol
mov
sub
pop
mov
retf
repz
jmp
pop
jae
in
and
mov
or
mov
in
imul
pop
add
inc
js
xchg
sbb
pop
push
adc
aas
jno
jecxz
into
pop
mov
xor
push
mov
cmps
dec
mov
mov
(bad)
rcr
jecxz
or
push
sub
adc
fs
in
xchg
and
mov
(bad)
pop
fs
inc
in
cli
jmp
push
sub
jl
dec
int
sub
ins
adc
scas
mov
lods
add
lds
or
or
dec
xor
adc
nop
add
cmp
inc
mov
scas
inc
mov
jnp
std
lods
(bad)
out
xchg
std
popa
test
lods
rcl
mov
cmc
push
popa
out
outs
das
outs
ins
das
push
mov
mov
stos
test
sbb
xchg
push
mov
mov
lahf
fistp
loopne
add
push
mov
je
cmps
and
leave
popa
mov
retf
cmp
mov
pop
repz
stos
cwde
shr
test
in
rcl
xchg
adc
xchg
ja
rep
jno
xlat
and
xchg
dec
iret
hlt
mov
outs
push
sti
cdq
cmp
sub
mov
je
movs
and
outs
jbe
je
hlt
jmp
nop
sbb
inc
cmps
test
pushw
mov
sbb
sti
xchg
int3
or
enter
pushf
clc
jne
es
and
mov
jecxz
pop
pop
mov
adc
sbb
xor
sub
js
mov
shl
jmp
xor
mov
mov
mov
and
xor
sldt
mov
push
xchg
test
out
fcomp
mov
adc
pop
push
js
mov
inc
cmp
outs
ins
cmp
adc
xchg
(bad)
adc
and
(bad)
ja
out
imul
sbb
fistp
ds
mov
pop
adc
bound
fstp
mov
movs
sti
fcmovu
ror
add
cwde
sbb
dec
in
shr
push
xchg
cmp
ds
adc
icebp
fcmovu
les
cmp
scas
push
mov
mov
dec
pop
out
repnz
add
dec
add
or
fsubr
sbb
int
adc
jl
popf
xor
jg
cmp
push
adc
xor
cmp
(bad)
int
mov
mov
dec
pop
lahf
cmp
fsubr
xchg
sub
mov
loope
mov
iret
out
cmp
scas
push
(bad)
jmp
jo
aaa
lods
jb
(bad)
add
fs
and
shr
aaa
ret
xor
test
jne
sbb
imul
aaa
ret
in
cwde
int
jo
mov
into
out
sbb
into
es
out
jl
cld
inc
cmp
(bad)
cmp
pop
shl
stc
pop
jp
sahf
add
and
fwait
ins
and
add
mov
outs
push
jmp
push
retf
xor
or
pushf
cmps
inc
scas
mov
mov
fsubr
or
loop
xchg
xor
je
adc
inc
mov
mov
cmp
outs
loopne
sub
xchg
cli
mov
loopne
pop
jmp
ins
std
loop
sub
dec
jge
retf
aam
daa
gs
pop
ins
xlat
js
cmp
out
mov
cmp
add
sub
fist
pop
popf
pushf
sahf
add
xchg
mov
xor
lods
xlat
push
iret
lahf
pop
popf
pushf
mov
sar
out
loopne
cmps
push
outs
pop
cli
hlt
cmps
dec
xchg
fidivr
repz
(bad)
cmp
jmp
outs
xor
repnz
outs
mov
enter
sub
xchg
inc
jo
shr
cmp
cmp
cmp
dec
jp
jmp
pop
jae
sub
jnp
cmp
test
loope
leave
fwait
push
cmps
push
data16
xchg
inc
push
fild
mov
sbb
lods
outs
push
outs
imul
cwde
and
repnz
push
imul
fcmovnu
pop
fisubr
sub
push
jns
sub
int3
xchg
xchg
ja
(bad)
lock
call
mov
std
mov
mov
pop
push
mov
cwde
pop
hlt
test
sub
call
push
scas
xchg
xchg
out
(bad)
dec
js
fistp
hlt
popa
fadd
pop
inc
and
(bad)
push
adc
push
test
push
or
mov
jae
dec
cmps
xchg
adc
sahf
xor
lahf
dec
(bad)
sbb
xlat
outs
inc
retf
nop
test
cdq
inc
mov
rcl
and
scas
or
and
add
(bad)
xchg
xchg
ds
jb
xchg
daa
ds
pop
lahf
xor
jmp
sub
ds
cmps
les
js
out
inc
(bad)
cmc
prefetch
call
call
out
fisttp
mov
inc
or
xchg
add
call
jbe
or
ins
fst
test
test
sti
js
fnsave
dec
test
add
pop
sub
nop
mov
pop
adc
mul
sub
sbb
jle
pop
aam
repz
jnp
mov
jbe
cs
mov
lods
ss
sbb
mov
inc
cmp
ret
xchg
mov
ja
out
cdq
sbb
mov
test
fidivr
mov
sbb
pop
scas
or
(bad)
call
lea
cmp
and
test
hlt
fmul
mov
mov
sub
pop
loop
pop
dec
psrlq
dec
jae
in
jmp
xchg
mov
pop
dec
and
rcr
cli
int3
in
fild
pop
and
jmp
push
scas
adc
mov
daa
dec
fdivr
scas
aas
std
shr
jae
out
cdq
jle
ins
jmp
fisub
cmps
loopne
hlt
rcr
pop
xor
xchg
aam
adc
dec
popf
enter
push
dec
xchg
inc
or
cld
mov
mov
pop
cmp
lods
jmp
push
push
inc
xor
xor
sbb
jl
mov
loopne
int3
push
pop
dec
or
mov
inc
mov
mov
or
out
push
pop
icebp
sbb
xchg
jb
outs
jno
jmp
mov
jl
test
mov
mov
mov
sbb
call
and
syscall
sahf
ja
sub
xchg
call
sub
or
ret
idiv
inc
ins
mov
add
fst
out
xchg
jle
mov
jo
add
jge
aam
ds
imul
pop
shl
or
inc
pop
data16
ss
(bad)
scas
mov
shl
cmp
out
mov
mov
imul
adc
dec
scas
dec
pop
popf
cdq
lds
jmp
daa
push
mov
lahf
(bad)
(bad)
aas
push
mov
jg
aaa
xchg
jbe
in
in
cmp
mov
hlt
push
out
sbb
push
jmp
aaa
int3
int
pusha
pop
inc
inc
pop
(bad)
das
adc
das
cmp
int
into
sahf
xchg
inc
fstp
mov
aam
dec
cli
in
mov
xchg
dec
daa
mov
sub
jmp
call
mov
jp
cmp
mov
outs
dec
xor
test
sub
scas
(bad)
push
mov
es
push
pop
sbb
pop
sub
add
fild
and
(bad)
rol
dec
repz
add
retf
pop
cmp
test
pop
sub
mov
cmp
sub
(bad)
sar
xor
jne
xor
outs
dec
sar
dec
mov
int
pop
fucomp
(bad)
retf
mov
aam
add
imul
div
mov
(bad)
addr16
fistp
mov
test
dec
sbb
jecxz
outs
nop
add
sahf
es
lock
outs
jg
(bad)
lods
(bad)
ins
imul
cmp
sub
ret
mov
fstp
fst
hlt
loop
mov
es
mov
inc
dec
mov
repz
add
not
inc
imul
test
pop
push
mov
dec
fisttp
pop
mov
mov
mov
ins
int
mov
daa
dec
pop
mov
call
ss
mov
or
scas
mov
and
pop
int3
(bad)
add
or
xchg
or
or
xor
cmp
lds
in
xchg
adc
push
fiadd
push
mov
mov
pushf
mov
or
fisub
fsubr
hlt
out
xchg
sti
(bad)
ins
mov
and
ins
cs
stos
dec
mov
ss
mov
test
ins
sub
iret
stos
test
stc
jo
int3
xor
add
ror
mov
mov
ror
ins
daa
mov
call
push
push
cmc
cdq
cmp
mov
mov
pop
(bad)
mov
jo
retf
(bad)
(bad)
pop
popf
and
push
lahf
cmp
cli
ret
cmp
rcl
fdiv
xor
add
fisubr
and
scas
je
push
js
rcr
out
je
pusha
xchg
ds
jo
jne
aam
or
shl
mov
pushf
pop
push
adc
into
ins
mov
or
stos
mov
mov
add
popf
xchg
test
rcr
fistp
ja
jl
adc
adc
es
sub
jne
pop
push
cmp
mov
fsubr
or
xchg
bound
cmp
xchg
ds
aaa
mov
mov
pusha
ss
xor
sbb
lods
data16
and
cwde
out
ss
sbb
shl
sbb
mov
or
call
test
push
call
in
ja
lods
pusha
cdq
(bad)
push
ret
cmp
push
mov
scas
pushf
ins
inc
dec
rep
outs
ins
clc
nop
adc
lods
jbe
pop
ds
shl
sar
xor
or
mov
movs
mov
or
jmp
outs
je
jnp
push
adc
ficom
in
xchg
cdq
xchg
xchg
(bad)
cmp
pop
cmp
jns
mov
(bad)
jge
sub
les
dec
or
lea
fdivr
clc
pushf
mov
jmp
jmp
lods
mov
pop
mov
and
mov
cmp
xor
arpl
aas
mov
lahf
adc
xchg
mov
(bad)
mov
(bad)
fsubp
jae
mov
mov
and
xor
cmp
mov
test
pop
rol
clc
adc
xor
(bad)
jl
add
fstp
nop
mov
inc
mov
pop
add
or
(bad)
retf
mov
in
arpl
movs
dec
adc
repz
inc
jmp
jno
mov
daa
int
fwait
aaa
push
es
xor
cmp
mov
hlt
sbb
adc
xor
aad
iret
addr16
stos
jae
sub
push
out
pop
(bad)
movs
mov
push
push
stos
imul
ror
pop
pop
push
ja
jle
push
into
sbb
out
jno
es
mov
cs
ftst
jp
push
push
in
(bad)
clc
cmp
aad
cmps
loop
xlat
lea
xor
dec
mov
push
mov
sbb
push
(bad)
loope
rcr
cmp
repz
mov
jg
ret
and
cmc
push
cwde
cs
sti
hlt
les
lea
rcr
test
rcl
shl
cmps
push
push
or
adc
ins
push
mov
dec
push
cli
or
(bad)
adc
inc
jo
das
sub
stos
cmp
out
imul
in
adc
sub
push
push
cmp
inc
in
sub
inc
mov
mov
aaa
aas
sub
aaa
mov
sahf
add
mov
or
xchg
sbb
push
out
xor
push
aad
fstp
in
push
inc
and
push
bound
enter
mov
xchg
adc
mov
cmps
jg
sbb
outs
aas
sub
call
retf
call
fs
sti
mov
sub
or
aad
mov
ins
jmp
dec
dec
pop
or
jle
(bad)
iret
adc
jecxz
pop
adc
stos
call
xchg
cwde
xchg
lods
js
dec
ror
cmps
jmp
in
cli
fwait
aaa
outs
ds
call
ds
neg
out
stc
jmp
mov
popf
jns
fadd
popf
or
(bad)
rcr
mov
mov
adc
xor
popf
adc
xor
in
inc
adc
lock
add
arpl
mov
(bad)
fidivr
xchg
inc
xor
jl
fsubr
repz
cmp
xor
enter
push
mov
ss
outs
sbb
mov
add
popf
mov
lods
pop
dec
loopne
add
movs
test
ret
sub
xor
xor
call
nop
sbb
push
aad
jb
ds
pop
cmc
enter
movs
ficom
in
sub
clc
gs
mov
xlat
adc
enter
int3
pop
sahf
add
shrd
popa
and
aas
movs
jge
inc
and
xor
adc
stc
xlat
mov
cmp
dec
or
loopne
cmp
call
les
and
jecxz
jge
iret
or
out
and
gs
push
lahf
call
ins
mov
pushf
mov
repnz
outs
lahf
jl
jo
retf
pop
stc
dec
iret
xchg
dec
ja
(bad)
sbb
push
jno
(bad)
sbb
out
pop
int3
shl
cmp
pop
xchg
adc
xlat
jl
or
push
addr16
outs
fwait
push
mov
or
inc
fcomi
inc
xor
fcom
and
xor
jo
adc
aas
xchg
adc
push
mov
push
dec
ins
call
addr16
icebp
test
loope
cmp
movs
pop
fs
add
xchg
sub
fwait
ror
popa
adc
out
shr
or
mov
adc
mov
xor
xchg
sbb
mov
cmp
mul
sbb
(bad)
mov
iret
int3
mov
mov
popa
push
inc
adc
push
mov
iret
pusha
sbb
jge
push
gs
push
shl
cs
ret
popf
pop
jns
dec
stos
mov
cmp
jle
inc
aam
dec
add
jg
scas
mov
adc
and
adc
mov
cdq
jp
jo
cmps
push
es
cmp
lods
aad
scas
into
mov
xchg
fwait
setg
nop
sbb
cmp
loope
or
xor
data16
std
pusha
loop
push
cdq
add
sbb
adc
ins
pop
jle
not
rcl
cmp
jmp
test
sub
in
add
lahf
pushf
ss
inc
enter
stos
sub
into
ficom
push
dec
xor
clc
daa
inc
nop
add
and
stc
bound
adc
mov
in
and
cdq
stos
and
sub
push
jmp
ins
inc
ss
call
mov
mov
mov
push
jb
jge
ficomp
pop
xor
and
jb
dec
ror
movs
cld
and
mov
jmp
mov
jg
out
pop
imul
in
(bad)
(bad)
push
push
inc
leave
sub
imul
loope
or
add
mov
push
ins
sbb
pop
sub
mov
int
push
cwde
push
int3
push
mov
cmps
outs
test
pop
inc
sbb
inc
(bad)
xchg
jmp
sbb
std
or
xchg
fstp
rol
add
mov
cli
int3
aad
out
daa
scas
aas
ja
pop
hlt
lock
js
aam
mov
ds
fisub
mov
into
(bad)
lods
mov
loope
inc
xchg
inc
dec
stos
imul
xor
(bad)
mov
xor
inc
mov
sub
inc
jbe
jmp
sbb
push
inc
mov
sub
add
xchg
xchg
jae
nop
sub
and
pusha
jo
mov
cli
push
sbb
cmp
mov
mul
dec
mov
and
xor
lods
int
jne
xor
int3
aam
dec
push
dec
dec
imul
xchg
cmps
and
out
dec
bound
popf
add
test
cwde
mov
rol
adc
movs
test
jecxz
and
lea
cmps
or
xchg
mov
outs
dec
call
aam
jle
mov
xor
pop
or
push
shr
rcr
sub
in
(bad)
dec
or
mov
retf
pop
(bad)
mov
cmp
jmp
test
xor
sub
scas
int3
pop
cdq
imul
jno
pop
pop
mov
inc
fimul
test
daa
aas
jp
aam
daa
dec
sahf
cli
jb
push
aas
push
mov
jg
mov
fsubr
inc
outs
mov
pop
push
mov
xchg
pop
pushf
jl
popa
push
dec
jp
sub
jae
cli
cld
and
or
lods
rol
mov
push
pop
movs
mov
jmp
(bad)
mov
sar
cmp
lods
jmp
jp
out
cmps
loop
repz
call
xchg
push
xor
mov
sbb
xchg
dec
sar
lea
imul
inc
fwait
push
mov
add
in
dec
xor
les
dec
and
xchg
jb
mov
mov
leave
sbb
jno
in
sbb
xlat
dec
inc
fsub
imul
and
imul
jne
add
mov
jne
dec
lea
aam
mov
push
inc
xchg
call
mov
inc
mov
test
mov
xchg
cdq
sub
ret
movs
sub
pusha
fs
dec
hlt
pop
enter
inc
jecxz
push
mov
mov
mov
jge
push
es
push
mov
lahf
sbb
cmps
mov
loop
push
lahf
clc
xchg
pop
sub
into
lds
cmps
sar
outs
fs
inc
xor
lds
fild
xor
pop
in
cmp
dec
bound
je
dec
int
dec
xchg
sti
scas
scas
pop
dec
stos
call
jge
push
ret
enter
push
add
sbb
imul
idiv
cmp
mov
xchg
pop
(bad)
imul
push
movs
mov
les
shl
lock
leave
push
mov
std
xor
xchg
test
test
sbb
push
ins
dec
js
mov
cwde
cmp
sbb
xor
add
repz
ins
aaa
in
fs
adc
cli
pop
pop
pusha
jnp
jg
test
push
adc
sub
xor
in
movs
stos
jbe
xor
add
xchg
popf
adc
inc
push
jle
inc
iret
push
rep
inc
jb
call
daa
lahf
xchg
retf
hlt
in
mul
idiv
ret
jl
cmp
cmp
cmp
jo
in
(bad)
jge
(bad)
push
dec
xlat
(bad)
sahf
out
(bad)
fstp
mov
sbb
mov
mov
in
dec
das
inc
lea
aaa
mov
retf
lahf
test
sub
sahf
mov
idiv
dec
mov
aam
lds
sbb
test
dec
shl
jp
aam
ret
cmps
ss
sub
push
xchg
xlat
dec
and
cdq
fs
rcl
test
jnp
mov
in
js
jmp
retf
mov
adc
call
retf
adc
js
cmp
or
xchg
es
out
daa
and
loop
sbb
push
fcom
dec
aad
daa
xchg
add
jno
jmp
test
mov
mov
cld
rcr
in
sub
stos
lods
mov
mov
nop
rcr
or
ins
sub
scas
push
sahf
inc
movs
dec
sub
movs
inc
sub
jns
push
cmp
sbb
xor
mov
mov
loop
mov
sub
repz
jge
arpl
cmc
xchg
cmps
push
mov
loopne
aas
jbe
cmps
mov
mov
loope
mov
xchg
add
aas
ja
xor
movs
dec
mov
pop
in
xor
scas
xchg
cmps
jnp
pop
stos
in
fidiv
sub
xchg
jae
lds
mov
jno
xchg
inc
xor
mov
push
fidiv
adc
xchg
sbb
pop
mov
leave
jb
xchg
arpl
inc
cli
add
and
push
cs
pop
cmps
cmp
in
aad
add
xchg
add
xchg
lahf
(bad)
mov
push
sbb
xlat
sbb
dec
push
out
jns
inc
cmc
xchg
test
xor
fwait
pushf
repz
adc
inc
dec
jbe
neg
(bad)
or
repz
sbb
aam
ins
jne
movs
pop
mov
sbb
cmc
cmp
and
jge
sub
or
fstp
pusha
out
push
mov
cmps
bound
inc
stos
mov
inc
mov
mov
das
dec
neg
aas
sub
pusha
or
xor
jmp
and
scas
cmp
mov
xchg
pop
sbb
mov
in
push
mov
ins
ins
call
pop
outs
sahf
jl
jp
loopne
jnp
pop
xor
jne
rol
loop
ja
(bad)
mov
fisttp
dec
jae
popf
cmp
xor
sub
test
jp
push
push
add
and
aaa
dec
xchg
bound
sub
hlt
sbb
jbe
pushf
and
sub
loop
daa
and
push
cmp
mov
push
outs
nop
dec
lods
fst
mov
xchg
ja
cmp
scas
call
fsub
xor
popf
jge
push
test
cmps
add
xchg
mov
push
outs
sub
test
movs
sbb
xchg
mov
mov
into
xchg
aad
iret
pop
lea
retfw
hlt
aad
sub
adc
retf
add
test
jb
mov
in
mov
sbb
jno
popa
mov
dec
mov
push
or
imul
fld
dec
or
inc
and
xchg
sti
inc
das
pop
xor
jg
std
cwde
pop
movs
leave
and
jo
xor
and
shl
rcl
mov
pop
mov
cmps
jp
adc
and
xchg
cdq
xchg
push
xor
imul
mov
out
(bad)
mov
out
scas
popf
mov
jmp
adc
push
dec
dec
pusha
xlat
(bad)
cmps
jge
jmp
movs
mov
repz
rcl
pushf
jmp
sub
pop
test
xor
repnz
jns
dec
or
cdq
dec
xchg
arpl
cmp
ins
and
pop
cmps
sub
hlt
scas
pop
ins
inc
shl
retf
in
push
and
retf
inc
inc
jns
dec
call
mov
sbb
push
inc
dec
fwait
clc
pop
pop
jno
mov
xchg
pop
outs
fcom
scas
dec
test
inc
ds
xchg
fcmovb
cmp
mov
cmp
movs
dec
pop
mov
repz
cdq
in
xor
les
inc
out
aad
lds
aam
out
test
pusha
add
bnd
push
sub
mov
int
xchg
loopne
cmps
out
sub
jmp
pop
ins
frstor
daa
pop
pop
inc
call
ss
pop
arpl
adc
cvtpi2ps
push
sub
jne
jl
mov
cli
xor
sbb
sti
push
pop
(bad)
pop
mov
add
jb
fwait
push
cmps
in
pop
int
loop
ins
and
pusha
enter
int
aas
jno
jecxz
dec
push
sub
cmp
mov
jge
sahf
pop
cmp
ss
std
xor
sub
gs
ror
test
mov
repz
jnp
retf
int3
xchg
sub
imul
(bad)
jmp
int
(bad)
out
ret
jl
mov
ins
adc
loopne
dec
pop
mov
imul
xor
mov
outs
loopne
xchg
pop
sbb
loope
add
movs
scas
popa
push
and
mov
sbb
adc
das
dec
outs
mov
xchg
sbb
xchg
in
push
inc
cmp
int
outs
mov
inc
mov
scas
hlt
scas
scas
fs
mov
lds
xlat
sar
xchg
data16
jge
fwait
icebp
ja
pop
rcr
mov
cli
sbb
jnp
cs
mov
cmp
mov
wbinvd
add
loop
icebp
js
cmc
(bad)
aam
lds
lods
inc
sti
jne
or
cmp
sar
mov
rcl
sbb
rcr
cmps
loop
and
sahf
inc
or
or
dec
sbb
out
lahf
mov
mul
dec
lahf
cs
sahf
jmp
push
dec
jge
lock
out
int3
popa
xor
mov
mov
stos
iret
lods
dec
pop
sub
mov
sti
xchg
es
adc
jb
sub
mov
sub
hlt
(bad)
out
cmps
(bad)
mov
mov
and
ret
daa
jae
lds
or
jb
and
mov
mov
xchg
nop
fmul
mov
add
jno
xchg
les
xchg
push
fild
aas
jns
pop
ret
adc
jno
xor
pop
inc
ret
fdivr
adc
retf
sti
std
xchg
sbb
dec
xchg
cmp
aaa
push
ficomp
scas
into
test
enter
inc
push
popf
in
jns
fisub
and
loop
mov
push
cmp
pop
cmp
pop
jo
mov
jns
push
dec
fmul
add
je
scas
adc
sbb
jmp
sub
adc
(bad)
jmp
jne
pop
xor
adc
pushf
xor
daa
iret
(bad)
fld
es
mov
pushf
cmp
push
mov
movq
jae
stos
in
std
std
(bad)
neg
mov
push
jmp
dec
out
xchg
into
and
xchg
xchg
cwde
jne
pop
dec
jno
mov
or
sbb
scas
push
mov
outs
lods
xor
shr
and
cmp
sbb
lock
mov
in
adc
dec
adc
lock
mov
sub
xchg
ret
loope
push
movs
and
jno
or
repz
xchg
test
push
shl
pop
test
popa
stos
aam
out
dec
add
ja
cli
dec
xor
push
mov
mov
mov
adc
sbb
loop
retf
ja
out
inc
ds
xchg
call
mov
sub
fst
dec
lods
sub
mov
scas
inc
outs
shl
jmp
shl
in
or
xchg
sub
mov
cmc
ss
pop
pop
and
lods
repnz
dec
addr16
fadd
xchg
mov
mov
or
jno
xor
jp
mov
add
ds
lock
(bad)
push
jo
pop
iret
fidivr
sbb
mov
aas
mov
fistp
push
xchg
mov
mov
push
outs
mov
stos
sub
xchg
xor
mov
jecxz
adc
inc
or
movs
das
aam
outs
push
push
bound
cmp
ja
inc
cmp
add
clc
div
mov
mov
(bad)
xlat
add
ss
or
push
arpl
movs
push
movs
mov
rcl
inc
enter
adc
inc
pop
push
stos
sar
test
lea
fild
mov
in
pop
(bad)
xchg
iret
fwait
retf
mov
sub
mov
push
jns
rcl
sub
mov
jge
xchg
fld
sbb
sbb
sub
nop
in
gs
push
or
int3
gs
xor
(bad)
inc
mov
frstor
or
into
xor
jae
jmp
shl
and
test
(bad)
ror
pop
jne
fnstcw
mov
sti
xlat
mov
in
xchg
idiv
adc
fcomp
sbb
jmp
cld
push
mov
fild
push
cmps
test
push
shl
cmp
pop
push
cmp
(bad)
adc
push
cmp
fisttp
cdq
xor
shl
(bad)
mov
aaa
gs
test
ret
or
outs
xor
shl
sub
sti
mov
mov
cmp
xor
mov
adc
imul
lods
pop
imul
inc
shr
sbb
cdq
out
push
dec
jno
ds
cmp
add
out
push
push
mov
inc
inc
nop
loope
out
mov
sbb
in
and
popf
mov
outs
xor
in
les
shl
cdq
mov
out
inc
pop
(bad)
jle
nop
stc
add
pop
push
push
rcr
sub
jp
ins
jmp
les
in
retf
(bad)
(bad)
xchg
xchg
cmc
xchg
retf
stos
xor
and
stos
add
sbb
aad
out
push
mov
cmp
add
add
fistp
sbb
aam
(bad)
adc
fnstsw
jo
push
gs
and
jecxz
lods
mov
sub
arpl
add
arpl
xchg
es
out
or
cdq
xor
sbb
or
daa
aas
lods
scas
imul
push
jge
sbb
in
movs
adc
xor
mov
add
sub
stos
mov
dec
mov
cmp
pusha
cdq
xchg
mov
mov
dec
or
cdq
pop
dec
test
movs
add
pop
cmp
inc
dec
call
mov
pop
pop
stos
push
pop
mov
pop
ret
dec
inc
les
and
sub
xchg
ror
hlt
jns
aam
rol
inc
mov
adc
es
mov
in
mov
dec
dec
mov
or
lahf
jns
mov
mov
pop
fst
ret
inc
in
push
sbb
add
mov
jge
je
inc
int
fdivr
loopne
inc
dec
dec
fdivr
sti
and
scas
rol
(bad)
movs
test
les
xchg
mov
xor
mov
test
mov
lock
adc
aad
push
mov
push
(bad)
adc
ja
iret
mov
jmp
shl
enter
aaa
popa
add
aas
mov
popf
out
add
or
and
pop
xor
fstp
icebp
test
gs
mov
les
add
sub
mov
xchg
sbb
mov
call
mov
pop
(bad)
jg
xlat
mov
pop
pop
adc
icebp
das
sub
cmp
mov
mov
cmp
test
xchg
outs
cmp
jl
inc
mov
inc
ins
cmp
wbinvd
cmp
mov
adc
push
push
fucomi
outs
and
mov
aam
push
or
inc
pop
pop
jae
sub
in
xchg
(bad)
int3
enter
add
int
push
jmp
cmp
xlat
jae
bound
gs
jg
in
inc
dec
iret
lock
jle
push
cdq
neg
jmp
je
int3
les
aam
push
ja
mov
movs
bound
icebp
js
stos
mov
fdivr
and
fisttp
jnp
inc
or
data16
in
add
retf
cmp
std
mov
cmp
cmp
pop
adc
push
and
sub
fs
inc
test
fimul
xchg
inc
and
ins
mov
and
jmp
push
ror
pop
sbb
adc
inc
sub
aam
popa
cmps
cdq
mov
xor
fidiv
and
ja
jnp
sub
mov
cmp
pop
imul
cmps
pop
mov
pop
inc
adc
sub
aas
add
je
cmp
into
mov
or
int3
fnstsw
ins
push
mov
ret
add
imul
pop
mov
pop
inc
fistp
ret
cdq
dec
retf
cmp
lds
shl
fsub
inc
jmp
(bad)
ret
ret
mov
sbb
mov
mul
lea
mov
nop
jb
and
inc
cmp
and
jmp
xchg
push
inc
cli
sbb
xlat
mov
(bad)
rol
xor
mov
icebp
jp
mov
mov
and
inc
mov
push
mov
mov
popf
int
jp
ror
mov
xchg
push
movs
popa
movs
xor
xchg
fld
xchg
cmc
sbb
aas
cwde
sbb
mov
call
add
(bad)
push
push
hlt
int
xchg
or
stc
fidiv
out
loopne
sub
int
test
aad
mov
(bad)
mov
mov
adc
cmp
test
xchg
enter
xchg
dec
fistp
push
aam
stos
inc
(bad)
div
(bad)
xor
scas
in
int
and
xlat
adc
xor
outs
sub
xchg
mov
outs
rcr
repz
std
dec
ret
rcl
jae
lea
test
dec
jb
adc
into
aaa
inc
push
sbb
push
dec
adc
cli
mov
cmp
jae
js
xor
(bad)
out
into
in
inc
call
jno
dec
cmps
shr
in
push
dec
cmp
inc
out
imul
dec
inc
movs
mov
movs
push
jae
mov
leave
push
sub
and
xor
mov
add
push
cs
or
ins
mov
aas
arpl
leave
mov
retf
jo
(bad)
clc
cmps
loop
mov
and
(bad)
mov
mov
pop
int
mov
(bad)
enter
and
mov
in
add
out
into
xchg
pop
imul
jns
sbb
jmp
out
loop
retf
jno
cmps
add
scas
jg
cmp
or
push
call
fisubr
jmp
test
fldl2t
(bad)
popa
call
out
sub
div
sbb
in
xchg
pop
cmc
rcr
or
push
arpl
test
pop
test
in
cmc
(bad)
out
std
pop
xchg
adc
int3
dec
push
add
sbb
mov
add
push
je
jmp
(bad)
adc
into
fmul
dec
(bad)
fnstsw
jle
(bad)
fisub
(bad)
aam
mov
add
arpl
call
cmp
nop
repz
sub
pop
adc
xchg
push
rol
retf
sub
mov
enter
loopne
jg
(bad)
cmp
push
lods
dec
retf
mov
push
and
or
xor
movs
int3
cmp
ins
adc
mov
dec
int
mov
dec
sbb
mov
or
cmp
(bad)
les
xchg
adc
sbb
xor
cmp
add
push
inc
xchg
retf
add
dec
rcl
jnp
inc
fsub
cld
rol
xchg
jne
lea
and
in
mov
(bad)
xchg
xchg
xor
jge
out
push
movaps
fwait
and
or
in
dec
jnp
ret
dec
(bad)
push
xchg
test
sbb
mov
cmp
clc
pop
pop
jns
(bad)
xchg
mov
loop
mov
mov
shl
fdivr
push
fcom
cmp
sti
adc
mov
out
imul
ret
push
push
adc
into
into
cmc
cmps
mov
iret
cmp
cmp
mov
scas
in
cmp
pop
aas
jmp
rcr
mov
rcl
lea
out
fs
jg
dec
sub
leave
inc
pop
inc
mov
push
jmp
shr
mov
adc
xchg
loope
mov
push
loop
push
xchg
sub
or
lock
push
sbb
push
add
xlat
sbb
scas
xor
mov
push
inc
shr
cmps
shl
xchg
and
enter
mov
inc
lock
or
ins
mov
push
fnstenv
jnp
add
popf
lods
push
push
ins
xchg
out
inc
xor
movs
push
aaa
xor
clc
xchg
push
add
push
add
or
sub
adc
pusha
adc
push
mov
adc
int3
mov
push
cmp
ja
push
ror
popfw
dec
int
push
loop
clc
add
mov
in
sbb
jp
scas
inc
test
cwde
dec
mov
test
jecxz
cmp
sbb
push
cs
mov
dec
pop
adc
dec
mov
dec
ror
cwde
lahf
push
push
call
add
pushf
push
jo
test
inc
xchg
inc
xor
push
xchg
mov
and
icebp
add
in
jp
loop
outs
jp
and
int3
int3
into
sti
adc
pop
in
out
pusha
add
inc
pop
push
bound
cmp
popf
mov
retf
xchg
and
push
out
mov
and
sbb
cli
mov
or
pop
aas
mov
xchg
sub
cmp
push
movs
inc
les
dec
movs
jmp
call
pop
out
lods
jno
jg
cmps
xor
cmp
xchg
jp
repnz
xor
push
push
sub
sahf
aam
jb
xchg
mov
cmps
call
lods
jmp
loope
arpl
adc
xor
lods
and
retf
cs
xor
xor
outs
jmp
cdq
arpl
popa
pop
fistp
je
mov
xlat
lods
or
fdivr
fcomp
mov
mov
ins
dec
dec
adc
push
outs
fmulp
inc
mov
mov
je
loopne
fwait
dec
popa
dec
adc
jl
push
mov
dec
xchg
lea
sar
jbe
mov
outs
dec
sahf
sub
xchg
xchg
movs
cmps
push
mov
and
mov
mov
fdivr
lock
xor
call
movs
faddp
pop
pop
out
ss
out
out
cdq
ins
out
(bad)
cmp
jo
mov
adc
mov
pop
retf
pusha
mov
sbb
or
cdq
imul
or
int3
dec
mov
mov
dec
out
ins
ja
sub
sbb
push
xlat
retf
and
sbb
mov
or
call
or
test
mov
fmul
add
scas
xlat
sub
mov
push
(bad)
arpl
leave
in
push
cmc
dec
cmp
cmps
(bad)
jno
jb
xchg
dec
js
js
mov
ror
jne
cmp
lea
fstp
cmp
push
or
fidivr
outs
in
loop
ret
(bad)
sbb
loopne
inc
adc
leave
cmps
in
(bad)
rcr
add
or
lods
cmp
adc
ficom
movs
mov
out
jno
xor
inc
adc
cmp
cmp
outs
inc
xor
fisttp
sbb
sub
cwde
ins
popf
lahf
aas
call
(bad)
and
or
mov
popa
jae
popf
jae
push
xor
jbe
dec
push
jae
or
pop
xchg
inc
sbb
xor
popf
jg
ds
mov
mov
or
push
inc
rcl
mov
xchg
loop
bound
inc
and
mov
ficomp
dec
pop
pop
(bad)
fistp
repz
ss
das
das
mov
cdq
xlat
pop
cmp
dec
sub
sub
add
push
cmc
adc
xchg
inc
sub
fs
dec
adc
push
or
or
mov
mov
lods
cld
mov
inc
repnz
inc
sbb
jmp
cmps
scas
pushf
aas
aas
cmp
sbb
mov
cdq
mov
mov
xor
mov
pushf
int
fsubp
(bad)
mov
jbe
test
pop
fcmovu
pop
mov
sbb
inc
fbstp
pop
ds
test
pushf
adc
stos
test
sub
ins
stc
cs
(bad)
cmp
cmps
and
movs
jnp
jp
call
pop
aad
shr
inc
fldcw
dec
inc
push
fs
neg
(bad)
mov
jbe
out
shl
mov
fsub
and
mov
int
sbb
xor
jmp
shl
mov
mov
fisttp
inc
ds
imul
pop
int
sbb
inc
xlat
jo
push
shld
xchg
mov
jp
xchg
sub
push
inc
(bad)
adc
or
mov
push
mov
add
mov
xor
sub
mov
cmp
in
ins
outs
aaa
(bad)
ins
lds
call
call
out
inc
or
add
push
or
ret
or
adc
jno
fcomp
outs
mov
adc
or
movs
lods
sub
(bad)
jg
loop
and
stc
push
lahf
mov
iret
pop
pop
int
fcomp
out
imul
ss
xlat
xor
out
loop
std
imul
loope
jmp
(bad)
faddp
std
popf
aas
jns
loop
jg
aas
out
je
ret
push
mov
mov
loope
(bad)
pop
mov
sub
pop
sbb
jmp
ja
xchg
or
push
imul
inc
sbb
popf
outs
jmp
jo
mov
mov
ja
std
push
lds
(bad)
data16
lea
inc
loopne
pop
ss
lahf
inc
lods
retf
sub
inc
addr16
rol
movs
mov
imul
(bad)
mov
inc
cmc
jmp
movs
fisub
cmp
xor
stos
gs
(bad)
and
xchg
int3
(bad)
adc
mul
inc
adc
mov
adc
ins
mov
dec
les
jae
mov
pop
xor
pop
cmp
push
fist
in
(bad)
xchg
sub
fild
pop
mov
pop
pop
dec
jmp
mov
or
mov
mov
and
push
mov
sbb
mov
jmp
(bad)
jecxz
movs
mov
retf
mov
jns
(bad)
arpl
fnstenv
sti
aas
ins
aam
push
pusha
inc
call
imul
imul
div
fstp
and
aaa
mov
call
test
out
into
or
jnp
enter
push
cmp
xchg
jno
mov
dec
data16
lahf
repz
(bad)
in
mov
loope
and
jmp
ror
xchg
mov
jae
mov
xchg
arpl
in
dec
lods
sbb
in
dec
ja
clc
mov
daa
add
mov
out
lock
fs
or
cs
mov
add
xchg
je
jecxz
pop
push
ror
fimul
test
cmp
mov
je
xchg
or
dec
aad
pusha
and
bound
out
repnz
movs
mov
enter
push
gs
jle
fwait
push
std
ret
cld
shr
fsubr
inc
or
inc
cld
imul
adc
sbb
or
adc
mov
jge
inc
jae
jmp
jns
xor
cwde
into
rcl
js
test
cmp
mov
push
(bad)
pushf
xchg
cmp
(bad)
out
aaa
and
addr16
sahf
pop
sbb
push
call
arpl
add
pop
in
in
jecxz
imul
mov
add
(bad)
out
inc
(bad)
push
fcmovu
and
xor
in
loope
test
cs
outs
sbb
pop
(bad)
cwde
in
xchg
mov
cli
repnz
mov
retf
leave
stos
test
push
xchg
xor
movs
inc
mov
imul
inc
aad
test
fistp
(bad)
and
sub
or
sar
lea
xchg
lea
xor
and
outs
mov
xchg
fbld
sub
les
or
cmp
dec
iret
ret
dec
xor
(bad)
jbe
les
sub
dec
sub
jecxz
enter
add
xchg
mov
sub
into
es
in
adc
mov
jl
mov
cld
cs
mov
je
push
sub
rcl
lods
movs
mov
movs
fcomp
(bad)
pop
and
sti
out
out
mov
fistp
or
jae
fnstsw
add
dec
stc
inc
cmps
xchg
dec
je
xchg
xchg
cwde
cmp
out
lods
stos
xchg
es
mov
repnz
adc
cmp
je
sbb
inc
in
mov
xchg
popf
push
aam
popf
xchg
cmp
movs
test
in
jmp
cmp
sub
pop
jle
int3
(bad)
out
bound
mov
mov
mov
fnstcw
push
add
out
bound
rol
pop
(bad)
jmp
xchg
mov
outs
test
sub
fidivr
jnp
pop
sub
mov
sub
push
(bad)
pop
xor
test
cwde
lea
adc
and
mov
(bad)
pop
imul
jae
push
dec
push
fld
cs
xchg
lock
loope
retf
mov
sub
movs
out
or
aas
popf
xor
cs
or
lods
movs
sbb
mov
add
(bad)
sub
jns
shl
repz
js
push
bound
aam
(bad)
jbe
adc
outs
ins
out
jb
fucomi
push
mov
mov
call
push
hlt
std
loop
(bad)
sahf
xchg
inc
push
cmp
mov
lahf
enter
push
mov
pop
pushf
add
lods
jmp
dec
dec
xchg
xchg
fldcw
call
jmp
loope
sahf
shl
xchg
xchg
imul
dec
out
in
(bad)
out
pop
dec
inc
fwait
mov
mov
out
fadd
mov
ja
xchg
xchg
mov
or
mov
bound
ja
dec
mov
adc
adc
ja
cmps
xchg
mov
loopne
je
inc
test
mov
cdq
sub
sbb
adc
and
pop
push
test
aam
dec
test
cmp
adc
xchg
icebp
inc
out
cdq
imul
mov
sbb
ret
jae
and
ss
nop
lea
nop
stos
out
leave
pop
dec
aad
jb
and
push
and
scas
shl
add
and
mov
cmp
into
dec
in
into
push
mov
sub
ins
leave
jmp
xchg
movs
(bad)
mov
in
(bad)
ins
ins
push
sub
add
dec
mov
xchg
push
cmp
in
div
mov
inc
or
scas
and
xchg
ja
dec
cmp
fstp
adc
mov
inc
out
int
push
pop
xchg
popa
scas
lods
movs
mov
dec
inc
pop
dec
or
or
xor
push
pop
out
mov
mov
ror
push
xor
repnz
das
mov
cmp
ret
push
xor
(bad)
aam
les
int
push
jno
dec
pop
frstor
cmps
data16
lds
mov
retf
lods
sbb
adc
dec
jo
add
pushf
mov
xchg
mov
enter
inc
aam
sub
add
outs
push
stos
lods
or
sub
daa
mov
(bad)
jae
out
mov
fyl2xp1
sbb
fdiv
cmp
mov
inc
leave
into
call
adc
mov
push
cmp
fld
cmps
ret
mov
pop
fcomp
or
outs
ret
bnd
push
int3
cmp
or
mov
rcr
mul
outs
ds
or
in
fisubr
fs
popa
sti
pusha
mov
cmp
sub
aas
mov
add
jmp
xchg
inc
(bad)
and
in
xchg
sar
pop
icebp
pop
outs
ds
jge
pushf
mov
(bad)
(bad)
or
mov
jne
out
cwde
or
sub
xchg
pop
sbb
sbb
xor
movs
push
add
inc
mov
xchg
fdivr
sti
dec
dec
cmp
(bad)
xor
iret
cld
xchg
cmp
in
push
pop
mov
pop
test
clc
lea
hlt
xchg
rcl
clc
fidiv
push
mov
and
mov
outs
retf
mov
sub
or
lods
or
mov
adc
xchg
add
add
(bad)
call
dec
mov
dec
popa
xchg
sub
shl
arpl
loopne
mov
push
dec
fwait
mov
mov
retf
(bad)
or
push
cs
(bad)
imul
out
es
mov
loop
hlt
je
xchg
stos
dec
push
xchg
cmps
sub
add
push
pop
pop
push
inc
das
push
add
jle
imul
pop
mov
les
adc
loop
jns
add
pop
mov
mov
shr
test
adc
sub
data16
fsubr
sbb
shl
sub
adc
adc
sub
and
test
mov
xlat
cs
hlt
pushf
sub
idiv
sbb
int3
mov
jp
pop
sbb
jae
jmp
push
mov
mov
mov
es
ja
jmp
scas
xchg
sbb
lahf
xchg
ss
mov
sar
jmp
pop
xor
add
xor
mov
and
shl
dec
push
pop
clc
es
in
inc
test
mov
xchg
pusha
or
or
cmps
sub
mov
sbb
pop
aaa
sbb
cmp
xor
jp
xchg
jmp
dec
dec
ins
dec
pop
dec
pop
dec
pop
rcr
in
ss
or
gs
sub
sbb
xchg
cmp
jp
fsubr
leave
fnstsw
mov
inc
jg
shr
cmps
push
dec
retf
mov
iret
call
sbb
in
enter
cld
jl
mov
xchg
add
dec
out
xchg
pcmpgtb
jp
movs
inc
sbb
stos
push
inc
fst
mov
daa
inc
(bad)
dec
dec
mov
pop
xor
or
adc
push
pop
shl
xchg
retf
jae
ficom
out
std
mov
shl
(bad)
fucomp
xchg
adc
sbb
clc
clc
out
inc
arpl
lahf
(bad)
not
push
hlt
repnz
retf
aad
rcl
ret
xchg
movs
xchg
push
push
in
shl
push
cmps
mov
mov
xchg
jecxz
bound
test
stc
sub
ins
std
mov
cmp
mov
sub
jecxz
retf
in
inc
outs
xchg
test
mov
mov
mov
inc
loope
mov
dec
or
pop
sbb
outs
fs
and
(bad)
(bad)
fs
and
sub
push
xor
scas
cmp
mov
pop
adc
mov
call
pop
pop
pop
jo
ffreep
jae
mov
inc
repz
pushf
cmp
push
push
(bad)
test
push
outs
inc
inc
mov
cmp
lock
out
xor
ficomp
(bad)
dec
vandnps
fnstcw
movs
jmp
xchg
sti
cmps
cld
mov
fisttp
or
leave
or
or
fstp
(bad)
fisubr
fsubr
or
dec
pop
cmp
jle
inc
mov
cmp
push
pop
pop
addr16
jnp
out
mov
outs
test
stc
stos
loop
cmp
ja
not
mov
mul
(bad)
iret
mov
retf
shl
leave
pop
bound
pop
push
jmp
out
adc
loop
push
sbb
out
bnd
outs
out
jb
int3
cmp
icebp
mov
pop
leave
cwde
in
xchg
xor
jo
push
test
pushw
aas
lods
push
in
out
xor
lods
fmul
outs
sbb
push
in
adc
into
bnd
(bad)
mov
fldcw
and
sub
ss
inc
push
mov
cwde
enter
loop
push
call
ja
cdq
push
ins
push
pop
sub
jae
(bad)
cmp
mov
mov
add
add
ins
dec
int3
fwait
mov
inc
pop
test
pop
popf
pop
add
and
ret
fsubr
das
push
mov
dec
jmp
add
das
push
mov
es
sahf
ror
movs
dec
cmp
das
jge
(bad)
out
pop
xchg
jp
push
test
mov
fwait
aam
fild
inc
cmps
xchg
or
adc
xor
arpl
jb
add
cmc
and
add
inc
stos
movs
xchg
ja
sbb
daa
in
lods
pop
mov
int3
iret
jmp
std
cld
mov
lds
xor
shl
(bad)
in
adc
arpl
ret
sub
jmp
mov
pop
xchg
aam
inc
sahf
mov
scas
cwde
mov
call
or
scas
int
pop
mov
jl
loopne
xchg
in
fdivr
popf
loop
pusha
ss
rcr
neg
sub
scas
std
and
cdq
dec
sub
push
lock
test
dec
mov
jne
cmps
add
push
mov
inc
stos
jne
xchg
and
stos
popf
imul
xchg
push
cli
jae
aad
les
mul
rol
mov
and
outs
jmp
fistp
fcomp
out
mov
in
jae
xchg
(bad)
mov
(bad)
mov
push
or
shl
ds
lock
rcl
iret
inc
mov
xchg
add
mov
cdq
push
mov
and
je
loop
add
popf
and
and
xor
sub
pop
adc
sbb
inc
in
out
imul
xor
or
add
push
adc
sub
xlat
push
xchg
mov
setno
push
cdq
xor
adc
scas
scas
lahf
jmp
test
movs
leave
in
inc
mov
add
sub
sbb
dec
mov
xor
dec
adc
push
idiv
leave
and
cmp
cmp
test
mov
xchg
scas
bound
push
dec
cmp
inc
(bad)
or
push
adc
add
mov
mov
xor
inc
pop
outs
push
inc
jmp
add
push
push
aaa
stos
popa
jmp
icebp
mov
aam
jl
add
int3
cmp
hlt
inc
packssdw
push
imul
push
test
scas
ss
test
rol
inc
aam
xchg
lods
pusha
cmp
daa
ins
jb
arpl
inc
sti
movs
cwde
pop
xchg
pop
mov
test
dec
fisttp
mov
dec
push
add
cld
ja
sti
lods
test
or
and
lfs
retf
in
adc
adc
sub
or
enter
fst
out
sbb
scas
mov
sub
popa
inc
cmps
mov
fimul
ret
scas
iret
inc
(bad)
xchg
in
inc
push
stos
dec
outs
jns
mov
jns
lds
fld
clc
cdq
pop
xor
daa
jp
jg
cld
retf
mov
fdivr
(bad)
xchg
adc
dec
lea
or
test
movs
or
xlat
mov
sbb
jne
lods
cwde
ror
or
xor
xchg
mov
repnz
mov
xchg
mov
cmp
arpl
sti
cmp
outs
(bad)
dec
call
sbb
mov
jns
jecxz
stos
cmp
clc
mov
(bad)
sub
dec
sbb
dec
outs
sub
mov
cdq
pop
je
pop
mov
shr
inc
test
test
cmp
daa
or
inc
xchg
xchg
ins
shl
popa
aam
scas
push
adc
mov
sub
jbe
bnd
cmps
mov
xor
sub
rcr
mov
repz
daa
(bad)
ins
mov
neg
push
xor
jo
aas
mov
sub
sbb
jnp
inc
fsubr
xchg
bound
pop
arpl
sbb
(bad)
sbb
push
out
xor
arpl
adc
and
mov
jo
sar
jns
out
push
xchg
outs
sbb
mov
or
fisubr
sahf
loop
jecxz
xor
xchg
fabs
ins
xchg
jle
aaa
mov
and
ficomp
daa
and
mov
mov
mov
mov
sbb
(bad)
fwait
jge
sti
xchg
addr16
(bad)
sti
fnstcw
shl
int3
pop
fdivr
jno
fisttp
fistp
ror
add
push
jl
push
sbb
or
gs
cmps
aaa
ins
jne
lock
rol
and
pop
pop
jb
lahf
in
in
adc
mov
add
sbb
lahf
sbb
inc
jg
cmp
xor
sub
ret
xchg
daa
int3
fwait
hlt
push
and
inc
mov
push
pop
cmc
sbb
and
pop
aad
leave
ins
fadd
movs
mov
fnstenv
add
loop
cdq
cli
push
(bad)
and
push
fisubr
adc
xchg
stos
xor
shr
(bad)
adc
ins
lods
fnstsw
ins
loope
shl
xchg
in
fisub
push
jmp
adc
fidiv
aaa
lds
adc
(bad)
fisubr
mov
mov
add
jno
leave
xor
(bad)
mov
mov
or
pop
or
mov
lea
jge
pushf
repz
out
repz
mov
jno
dec
fisubr
adc
dec
inc
loopne
test
dec
mov
mov
mov
push
mov
and
mov
and
and
mov
adc
stos
pop
or
shl
jg
add
mov
loope
das
stc
xchg
(bad)
push
and
and
sbb
sub
jg
in
dec
sbb
test
outs
inc
in
stc
aam
test
pop
inc
mov
xacquire
cmp
out
ret
movs
std
xchg
mov
fistp
inc
popa
xchg
shl
adc
test
es
imul
xchg
and
leave
call
push
fs
inc
shl
mov
loop
fcomip
or
dec
cdq
xchg
sub
test
dec
and
out
jecxz
imul
adc
or
push
mov
push
or
and
cmp
jo
adc
pop
test
lahf
mov
and
sbb
jno
call
jne
or
mov
jecxz
xor
push
daa
xor
add
mov
test
pop
sub
mov
adc
dec
frstor
cmp
mov
ficom
push
call
test
dec
ret
out
sub
and
data16
push
das
iret
sbb
push
movs
in
js
xor
xor
pop
std
mov
cs
je
cs
lods
movs
dec
xchg
int3
mov
xchg
shr
xchg
cmp
ret
enter
jne
(bad)
aam
test
xchg
gs
xlat
imul
lahf
adc
mov
add
dec
popa
pop
rol
dec
arpl
(bad)
sub
and
fst
test
shl
xchg
daa
mov
cmp
xor
and
mov
or
push
out
mov
pop
movs
push
je
fxch
stc
js
push
add
jg
rol
jae
cwde
mov
clc
aam
stos
les
mov
imul
xor
scas
lods
or
in
jge
mov
pusha
push
sub
push
sub
mov
ins
dec
aaa
jne
push
in
xor
inc
push
lahf
dec
add
xchg
jmp
stos
loop
xor
mov
fwait
pop
ret
es
fs
popa
xchg
sbb
out
shl
dec
adc
jl
rol
jp
xor
cmp
in
adc
or
xchg
adc
pop
and
inc
int3
sbb
mov
xchg
test
push
jecxz
je
xor
or
pop
stc
adc
push
add
xchg
in
retf
jae
dec
or
in
push
aam
mov
shl
jmp
scas
push
xor
in
lock
int3
ins
push
mov
ins
call
pop
xchg
xor
jbe
add
leave
test
ffreep
xchg
std
jl
out
daa
(bad)
mov
mov
ret
retf
daa
out
pop
es
and
and
pop
sbb
das
es
bnd
push
cmps
inc
not
mov
test
aam
push
mov
sbb
stos
and
dec
mov
and
or
out
bound
test
cmp
ds
sub
loopne
add
and
pusha
adc
adc
(bad)
mul
xor
inc
inc
xchg
dec
mov
popf
add
sub
jo
jg
xor
jg
sub
mov
sub
test
dec
das
test
inc
inc
sbb
cdq
add
cmp
inc
jl
dec
mov
inc
push
fwait
pop
fidivr
icebp
or
sub
xchg
sub
xchg
ds
ins
sbb
sbb
mov
movs
mov
mov
mov
add
das
fiadd
dec
push
sbb
pop
or
mov
adc
inc
push
call
and
pop
dec
jp
daa
xchg
je
mov
sub
rcr
xchg
test
cmp
scas
and
hlt
jnp
stos
xchg
xor
mov
inc
jge
cs
inc
imul
aaa
out
xchg
scas
push
mov
cmc
mov
out
loope
push
mov
inc
xchg
and
cdq
pop
mov
and
xor
dec
dec
or
mov
cmp
and
(bad)
dec
arpl
cmp
mov
mov
push
shr
pop
mov
call
xor
pop
xchg
cs
scas
inc
or
iret
cld
mov
jmp
ret
push
add
and
xchg
sub
xor
call
sub
bound
mov
(bad)
idiv
sti
lds
(bad)
stos
xchg
fwait
push
scas
sub
cs
fadd
test
pusha
mov
mov
fmul
dec
in
daa
mov
shl
mov
cld
add
fninit
or
stos
out
cmp
dec
pop
sub
in
ja
xor
dec
inc
cmc
enter
loope
and
outs
push
fnsave
retf
add
inc
add
test
cmps
neg
push
adc
mov
mov
and
push
in
dec
outs
pop
xor
xor
mov
jne
and
xchg
repz
imul
sub
sub
hlt
cmp
int3
loope
dec
jb
mov
(bad)
and
mov
ja
out
mov
or
dec
wrmsr
push
ret
or
bound
out
repnz
or
lods
mov
xchg
call
inc
and
imul
fisub
jge
add
push
pop
out
cwde
push
and
ja
enter
retf
retf
inc
and
dec
adc
sub
push
or
pop
xor
in
fidiv
push
sbb
and
xchg
xlat
loop
test
add
xchg
push
jmp
add
and
popa
add
mov
xchg
cdq
mov
push
inc
mov
sub
dec
sbb
mov
es
(bad)
stc
inc
jb
add
dec
mov
mov
dec
sbb
(bad)
das
dec
das
jmp
pop
aam
jle
movs
dec
sbb
idiv
sbb
pop
hlt
mov
mov
(bad)
lahf
movs
ds
in
scas
out
or
rcl
push
adc
jne
(bad)
push
xor
pop
ret
mov
scas
cmp
fcmove
sti
outs
pop
cs
mov
mov
loope
sbb
xchg
arpl
repnz
retf
neg
adc
add
mov
ficom
mov
dec
mov
fcomp
(bad)
push
xlat
das
push
or
out
mov
mov
dec
inc
nop
cli
stos
add
aad
dec
mov
lea
dec
and
pop
cmp
mov
sar
jo
and
dec
mov
mov
dec
ficom
sub
or
mov
sbb
and
or
add
cmp
push
dec
add
jns
das
leave
cmovs
sbb
icebp
sbb
xor
pushf
adc
and
test
(bad)
nop
and
sbb
cmps
movs
loopne
push
sub
pusha
push
push
lea
mov
idiv
sub
(bad)
sbb
cdq
cmp
fcomp
mov
xchg
adc
ds
xor
inc
or
in
jnp
adc
mov
xchg
or
xor
or
or
or
pop
xchg
pop
fisttp
pop
mov
pop
out
sbb
imul
mov
inc
test
and
aas
push
sbb
or
int3
cmps
(bad)
xor
and
cmp
or
jg
outs
mov
sub
adc
or
popf
pop
sub
stos
sbb
dec
rcl
inc
(bad)
mov
mov
inc
(bad)
push
dec
pop
push
inc
push
adc
and
or
shl
(bad)
fnstsw
jl
inc
add
in
ja
scas
inc
push
fnstsw
cmps
sub
or
clc
repnz
add
mov
sbb
adc
adc
sub
or
stos
retf
add
pop
pusha
add
pop
rcr
pop
bound
and
out
jo
xchg
test
fbld
jnp
shr
push
xchg
add
cmp
xchg
jo
les
call
imul
mov
repz
dec
movs
out
sahf
adc
add
movs
(bad)
mov
outs
pop
mov
daa
pusha
fxch
mov
or
mov
cmc
sub
lahf
aas
inc
or
test
xchg
xchg
sar
sbb
aaa
push
mov
fnstenv
call
enter
dec
scas
pop
mov
scas
pop
mov
jl
ret
imul
fcom
int3
enter
xchg
jmp
or
ins
fild
sub
inc
push
mov
cmp
js
into
lahf
sbb
inc
cmps
xor
or
int3
jnp
inc
nop
jo
inc
out
xchg
xor
dec
int
mov
xlat
push
adc
test
sbb
(bad)
mov
int
inc
cdq
in
js
mov
imul
sub
sub
lahf
movs
add
add
dec
ds
push
ret
lods
jg
dec
xor
push
sbb
(bad)
outs
inc
push
dec
sbb
sbb
sub
popf
daa
xchg
and
pop
jp
out
xchg
out
test
push
out
mov
adc
xor
xor
mov
les
sahf
mov
in
ss
jle
dec
mov
inc
pop
imul
fst
icebp
in
int
call
mov
xchg
sub
jg
movs
gs
test
sub
mov
fistp
mov
mov
addr16
cmp
mov
ret
test
pop
mov
mov
call
ret
or
pop
popa
sbb
cmp
inc
and
sti
inc
das
cmps
jo
cmps
or
pop
dec
sbb
mov
jnp
adc
call
dec
sub
idiv
mov
cmp
jnp
fsubr
sbb
mov
inc
pop
stos
sub
addr16
or
sbb
outs
outs
xchg
fldenv
push
aam
push
sbb
movs
add
and
outs
(bad)
(bad)
pop
clc
pushf
mov
aad
bound
icebp
jnp
fidivr
shl
xor
xchg
jne
cmp
and
jmp
sub
mov
xor
adc
cmp
cmp
rol
mov
pop
hlt
jb
mov
dec
add
cdq
in
or
(bad)
jmp
mov
pushf
push
ins
and
int
fldenv
outs
imul
push
push
scas
ds
xchg
aaa
ficom
inc
mov
dec
mov
mov
push
(bad)
and
jbe
sub
mov
into
or
out
mov
bound
inc
mov
iret
pop
mov
imul
pop
sub
mov
retf
pop
rcr
daa
push
cmps
stc
push
cmc
xchg
repnz
fmul
cmps
(bad)
dec
inc
or
aas
fmul
(bad)
pop
dec
sbb
pop
loopne
xchg
mov
mov
or
vpmacsww
ja
jle
fidivr
push
int3
xchg
mov
mov
ret
adc
clc
push
cmp
mov
repnz
mov
dec
dec
xor
mov
push
adc
daa
and
jb
pop
ds
stos
std
loope
clc
push
jmp
add
(bad)
jecxz
stos
idiv
ret
inc
sbb
and
sub
jecxz
cmc
xchg
inc
dec
xor
push
dec
out
dec
jae
sti
(bad)
jmp
mov
sbb
mov
sbb
fsub
jno
test
xchg
lods
push
pop
js
loop
sub
pop
(bad)
dec
add
fisub
xor
aaa
mov
xchg
mov
push
pop
pop
mov
dec
inc
xchg
xchg
dec
imul
jl
jge
mov
pop
call
xor
cmp
mov
xor
scas
and
xchg
pop
das
pop
mov
and
shl
hlt
mov
jns
ja
jge
mov
sti
mov
fxch
sbb
cmp
xchg
mov
xor
inc
popf
cmp
add
fs
pop
add
sbb
aam
mov
cmp
jmp
push
mov
adc
ja
ror
scas
mov
mov
or
cmps
xor
sbb
adc
jns
das
bound
pop
add
xor
inc
jl
or
shr
or
mov
ds
and
pop
movs
shl
cmp
sub
test
ja
movs
inc
mov
cs
nop
push
mov
call
fidiv
out
ds
cdq
or
mov
add
pusha
outs
cmp
clc
add
add
arpl
xor
adc
cs
dec
sub
ins
push
and
not
loopne
xor
pop
adc
mov
jp
push
clc
push
ja
xor
das
mov
sahf
jge
in
adc
outs
pushf
cmp
pop
or
sub
inc
and
aad
cmp
mov
shl
push
cmp
fs
xchg
cdq
fwait
cmps
jecxz
rol
inc
and
std
sti
inc
out
pop
pop
mov
test
(bad)
fcomp
and
dec
cmps
mov
out
xchg
lods
add
push
mov
fadd
inc
or
in
popa
fisub
mov
push
push
inc
pop
fsubr
scas
std
call
bound
jne
lods
mov
cmps
mov
lock
daa
push
mov
fld
jno
sti
pop
pusha
mov
scas
push
cld
jne
and
dec
retf
cmps
int3
sub
or
jmp
mov
test
or
pop
lods
aam
rol
int
cmp
jmp
dec
imul
ss
stos
(bad)
nop
push
inc
jo
faddp
sub
sub
stos
repz
sub
rcl
mov
dec
inc
int3
retf
mov
xchg
lock
movs
sbb
test
mov
sbb
adc
xchg
arpl
aas
mov
lods
pop
pop
inc
jne
fsub
dec
xor
ficom
or
fdivr
std
in
leave
jae
xchg
dec
cli
push
out
int3
mov
or
push
xor
mov
hlt
pop
cs
cs
pop
mov
movs
jnp
add
and
(bad)
loope
mov
daa
out
lods
in
aaa
pop
jae
inc
dec
mov
push
cmp
sbb
je
push
adc
mov
pusha
in
mov
sbb
jg
aam
inc
dec
(bad)
loop
retf
int3
push
aad
mov
mov
movs
in
ins
jmp
movs
out
inc
int3
or
test
retf
out
mov
mov
dec
jp
push
mov
outs
pop
cmp
mov
leave
dec
push
dec
inc
lea
outs
scas
dec
cld
jae
mov
rol
and
shl
jnp
push
pop
dec
stos
icebp
std
adc
mov
ficom
popa
outs
lds
jne
adc
ds
dec
pop
outs
shl
(bad)
leave
daa
leave
and
adc
push
jge
mov
cs
adc
pop
lds
les
std
xor
(bad)
xchg
xchg
xchg
ins
inc
in
icebp
and
movs
dec
push
push
out
inc
ins
push
ins
or
cmp
push
and
dec
xchg
repz
jo
movs
xchg
aas
jae
aad
jae
and
imul
js
loope
test
adc
push
out
in
cmp
adc
jmp
add
xor
or
aam
pop
xchg
in
jo
out
int
jno
call
movs
inc
push
push
cli
jmp
fcom
jno
jl
ja
inc
inc
in
inc
sub
stos
loope
pop
xor
loop
comiss
cmp
rep
cmp
ficomp
pop
inc
dec
pop
and
ss
dec
and
scas
dec
push
push
push
or
push
pop
jle
dec
xor
mov
mov
push
loope
test
mov
arpl
add
xor
and
pop
push
sbb
jo
int3
mov
pusha
pop
outs
add
ror
loope
nop
push
inc
push
fadd
mov
lods
hlt
cmc
adc
je
test
dec
ss
outs
push
(bad)
rcl
mov
mov
icebp
fnsave
sub
mov
or
js
es
mov
jmp
outs
popf
mov
and
xchg
or
mov
pop
hlt
ret
adc
out
sub
mov
fdiv
test
outs
adc
inc
sti
dec
jbe
stos
mov
or
(bad)
call
je
in
lea
or
push
mov
(bad)
cwde
in
xchg
and
add
data16
push
stos
fiadd
and
dec
stos
jle
mov
iret
int3
out
adc
stos
sub
add
aaa
sbb
mov
adc
ja
mov
jle
push
jae
sbb
cmps
mov
sbb
xor
ret
xor
fisubr
shl
xchg
movs
mov
cmp
sbb
fist
sbb
jns
jle
mov
adc
cmps
xchg
adc
push
or
sub
xchg
stos
or
or
sti
je
jmp
popa
mov
xor
push
test
xor
inc
xor
add
xor
jo
pop
pop
loop
movs
imul
push
cmp
cs
mov
pop
retf
xchg
loopne
push
inc
mov
dec
push
mov
das
pop
mov
dec
rcr
aaa
stos
mov
gs
nop
repnz
out
inc
ins
movs
loope
pop
out
sbb
int3
sar
mov
pop
mov
dec
out
ds
mov
loope
mov
mov
mov
faddp
aam
mov
jo
ret
inc
xor
call
and
pop
movs
xchg
dec
pop
imul
xlat
int3
inc
pop
dec
je
mov
sbb
enter
xchg
cmp
dec
or
or
shl
xchg
scas
adc
icebp
and
add
out
outs
std
inc
fistp
push
inc
call
push
fisub
xchg
aam
sub
push
adc
xchg
loop
xor
mov
jp
je
mov
iret
fwait
mov
or
bound
xor
inc
or
pop
fcmovnu
pop
adc
add
int3
jmp
inc
inc
imul
ret
sub
jg
inc
nop
inc
adc
loopne
mov
addr16
lahf
out
and
and
dec
xchg
ds
mov
add
and
repnz
inc
jg
js
test
jge
out
pop
mov
xor
inc
jns
push
or
xor
or
call
std
movs
fdivr
jo
out
fnstsw
out
pop
mov
xchg
cmp
pop
and
xor
xor
sbb
movs
cli
add
rcr
dec
shl
xchg
movs
int3
sub
inc
in
mov
into
sub
ins
xchg
out
call
push
pop
(bad)
jle
fidivr
and
rcl
cwde
test
call
sub
add
dec
daa
adc
js
jne
test
pop
int3
mov
mov
pop
ret
push
shl
repnz
inc
sbb
push
dec
and
push
xchg
dec
imul
inc
add
hlt
push
push
mov
mov
jmp
int3
stos
dec
xchg
or
nop
dec
pusha
mov
rcl
cmps
mov
and
rcr
cmp
xchg
mov
sub
mov
or
adc
pop
xchg
aad
and
cld
aaa
xchg
dec
pop
stos
or
enter
lahf
xchg
and
xchg
in
int3
xor
(bad)
cld
jae
mul
jmp
cmp
add
fldl2t
mov
lea
pusha
cmc
(bad)
mov
xchg
xchg
xchg
inc
imul
mov
sti
xchg
fistp
xchg
xchg
pop
bound
lods
dec
ret
retf
push
outs
mov
in
mov
rcr
mov
push
adc
jge
cmp
dec
ret
pop
test
pop
mov
ret
scas
xchg
adc
repz
nop
movs
popa
test
mov
pop
rcr
lods
aas
(bad)
dec
or
and
loopne
add
stos
cwde
pop
cli
jmp
mov
inc
repnz
push
and
push
xor
lahf
movs
(bad)
pop
add
xchg
mov
dec
jo
and
jne
inc
jecxz
repnz
sub
shl
shr
jbe
fnstsw
sahf
dec
mov
sti
or
jmp
in
movs
or
push
inc
sub
add
inc
push
stos
call
rcr
popf
mov
xchg
pop
mov
mov
sub
push
(bad)
int3
xchg
cmp
push
aas
mov
mov
and
je
outs
xor
outs
mov
mov
jle
(bad)
movs
pushf
ret
add
or
cmp
xchg
out
jle
pop
popf
mov
clc
fidiv
jno
sub
push
adc
enter
leave
nop
or
iret
mov
retf
nop
sar
arpl
adc
adc
mov
xor
add
sbb
repnz
inc
mov
add
add
mov
mov
jle
popf
and
call
mov
inc
mov
jmp
fild
fmul
cmp
xor
cmp
fadd
dec
or
push
stos
(bad)
fidivr
inc
mov
ja
inc
les
leave
dec
retf
movs
pushf
test
jle
xchg
sub
push
inc
popa
dec
test
mov
sbb
mov
sbb
jbe
push
xchg
adc
ja
jns
je
add
imul
push
retf
add
aaa
dec
cmc
out
out
cmp
xchg
adc
xchg
sub
cld
sub
(bad)
push
loopne
test
jle
lods
add
jno
xchg
retf
jge
pop
dec
pushf
inc
stc
pop
mov
jecxz
lahf
fistp
(bad)
fs
mov
xchg
mov
pop
mov
mov
inc
mov
lods
es
mov
mov
ror
xor
lahf
jge
shr
jecxz
xor
int3
add
mov
icebp
sub
sbb
aam
leave
jns
sbb
ss
inc
adc
xor
stos
mov
pop
xor
sbb
xchg
push
ret
idiv
push
sbb
pop
pop
inc
dec
push
inc
pop
sbb
inc
lods
inc
pop
(bad)
pop
jnp
pop
lds
lock
push
out
and
aaa
mov
and
mov
mov
aam
inc
ret
mov
push
sub
add
(bad)
push
sbb
jns
(bad)
out
push
sub
imul
ja
movs
shr
add
out
inc
nop
mov
out
loop
lds
lea
or
cmp
inc
sub
fcomip
inc
adc
and
je
pop
sub
and
cmp
or
inc
jge
pop
adc
ja
mov
das
pop
in
pop
mov
repz
inc
pop
popf
leave
es
(bad)
jmp
out
int
sub
out
cmp
pop
jbe
xor
sub
shr
jno
jmp
inc
or
inc
jmp
xchg
cmc
clc
leave
adc
cmp
test
xor
push
dec
mov
(bad)
sti
icebp
outs
adc
jecxz
inc
xchg
jo
mov
jns
xchg
add
cs
add
jb
cld
and
movs
mov
or
jge
xor
(bad)
pop
inc
pop
test
retf
xchg
push
jg
imul
xchg
mov
and
cmp
ins
jecxz
or
(bad)
jp
ss
or
pop
cdq
stos
loop
shl
pushf
pop
call
fcmovnu
in
inc
sub
stc
cmp
int
xor
dec
das
mov
in
aas
cmp
push
mov
shr
xlat
sbb
inc
xor
xlat
mov
jecxz
sub
dec
shl
ret
or
xchg
neg
in
jmp
fsub
stos
xchg
and
test
cmp
sub
mov
inc
jmp
sahf
mov
push
push
or
mov
pop
pop
fs
loope
(bad)
xor
push
ficomp
fisttp
outs
outs
xor
cmp
sbb
and
les
cs
push
lahf
out
(bad)
call
lock
inc
push
popf
ds
push
stos
xor
and
arpl
pop
out
dec
push
lahf
into
or
mov
cld
mov
jmp
cmp
add
push
inc
jns
bound
mov
jle
sbb
xor
repz
dec
mov
cmps
icebp
mov
call
or
and
mov
mov
mov
movs
cwde
and
xchg
add
ja
dec
enter
push
jmp
or
xor
in
neg
mov
test
xchg
enter
push
xor
jae
push
out
mov
sbb
outs
imul
in
dec
test
dec
pop
and
ins
clc
test
call
retf
dec
jle
push
mov
push
sti
dec
fadd
sbb
mov
and
das
xor
addr16
icebp
mov
je
fisubr
sub
xor
mov
mov
jno
jns
xchg
adc
jmp
out
call
outs
and
push
adc
xor
pop
cmp
(bad)
adc
xor
ja
push
leave
pop
xchg
pop
inc
fadd
sub
sub
out
neg
cmp
jno
fdivr
inc
xor
push
or
dec
adc
inc
cmp
lods
sub
jns
rcl
push
data16
rep
xor
fdivr
mov
ret
sti
(bad)
mov
mov
shl
cmp
into
in
cmp
pop
cpuid
(bad)
jbe
ss
jae
movs
int3
add
rol
dec
in
cmp
mov
mov
mov
mov
je
adc
or
inc
xchg
mov
inc
loopne
add
sbb
and
sbb
cmp
call
push
icebp
jnp
cmp
popf
sub
inc
pop
pop
out
sbb
push
dec
mov
xchg
ret
movs
stos
mov
lock
loopne
clc
bound
pop
nop
cdq
xchg
xor
add
and
repz
scas
in
jmp
sub
xchg
dec
aaa
xchg
das
popa
jno
mov
imul
dec
(bad)
clc
fdivr
in
imul
aam
neg
jge
outs
push
out
cmp
xchg
xor
aaa
scas
push
cdq
mov
jne
fucomip
ret
icebp
pop
mov
gs
icebp
js
shl
rcl
pop
jmp
or
xchg
add
das
loope
mov
jg
push
fadd
(bad)
push
mov
dec
sbb
out
std
push
test
push
push
xchg
leave
fs
inc
sbb
js
lock
cmp
cmp
adc
add
xchg
pop
and
jg
mov
popa
icebp
xchg
jmp
push
add
jae
gs
dec
add
js
scas
cmp
xor
add
push
mov
inc
out
push
and
xchg
dec
ror
inc
sahf
in
sub
shl
ins
adc
call
jo
pop
int3
push
adc
fwait
inc
adc
pop
and
sbb
xchg
jno
add
stc
mov
lahf
addr16
lahf
inc
dec
loopne
sub
xchg
int3
pop
out
mov
dec
cld
enter
arpl
out
add
adc
faddp
mov
push
mov
shl
mov
int
fld
rcl
sahf
cld
(bad)
aas
mov
(bad)
sub
xor
push
ins
outs
xor
inc
fldcw
mov
push
ins
retf
xchg
dec
mov
push
outs
mov
movs
jae
pop
iret
sahf
jge
xor
sbb
mov
or
sbb
mov
cmp
sbb
repnz
test
add
xchg
mov
loope
jns
aad
rcr
mov
imul
lock
sbb
inc
shr
enter
xchg
sub
xchg
xor
aam
push
inc
lahf
mov
repnz
sub
jecxz
ds
jns
sbb
mov
inc
jmp
adc
mov
call
icebp
fisub
jno
adc
push
repnz
ret
sbb
dec
pusha
jmp
push
scas
and
add
or
mov
das
push
test
and
jnp
sbb
add
and
cmp
adc
mov
icebp
dec
aas
out
repnz
push
jbe
dec
in
cs
jl
inc
jl
xor
repz
add
scas
add
je
xchg
lock
into
loopne
fldcw
add
pop
inc
gs
jae
jl
jno
mov
hlt
inc
mov
call
hlt
test
pop
push
ret
inc
mov
inc
int
push
push
pop
dec
cdq
fdiv
or
test
sub
sub
and
int3
into
xlat
retf
fidiv
imul
gs
sbb
fadd
sbb
pop
inc
push
lods
mov
hlt
sub
cmp
jae
sub
jnp
aas
fwait
fs
out
call
mov
xchg
mov
call
lods
cmp
adc
outs
loop
mov
pop
bound
mov
jae
jg
int
(bad)
xor
into
mov
mov
lahf
adc
pop
out
stc
pop
pusha
out
push
inc
shl
xor
push
inc
xor
ja
sub
ins
in
jmp
mov
fidivr
add
xchg
jbe
sub
cmp
lds
xchg
retf
adc
stos
mov
sub
lock
dec
cld
fsub
arpl
push
out
mov
sbb
push
fistp
ins
mov
ins
cs
ja
push
push
xor
sbb
fcmovnbe
pop
pop
jg
outs
xchg
stos
mov
int3
scas
sbb
shr
loop
jg
push
or
ins
in
hlt
dec
mov
jbe
sub
lods
mov
data16
mov
je
xor
lea
xor
stc
movs
sti
icebp
in
hlt
(bad)
addr16
fidiv
cmp
xchg
jb
pop
sub
pop
xchg
sbb
jb
lock
sub
adc
inc
adc
jno
pop
pop
fldenv
sub
and
adc
stos
scas
jp
push
dec
in
icebp
fild
popa
push
mov
sbb
aad
lods
outs
fdivp
sub
adc
push
lods
cmps
jns
mov
ret
mov
stos
cmp
pushf
sahf
fwait
in
lds
sub
ins
bnd
or
inc
pop
iret
cmps
scas
retf
push
leave
cmp
les
add
daa
into
push
inc
loop
test
pop
push
fcmovnu
inc
push
fxch
mov
imul
in
jbe
int3
cmps
mov
(bad)
repz
jnp
fwait
xchg
dec
imul
outs
movs
inc
mov
int
loopne
jmp
js
jl
xchg
fmul
and
mov
pop
xor
ja
mov
sbb
jnp
popa
daa
add
retf
lds
mov
pushf
xor
jbe
fwait
push
pop
lea
push
mov
jns
push
mov
ret
call
enter
ins
mov
(bad)
jns
outs
adc
cmp
outs
repnz
push
jmp
stos
inc
inc
data16
xor
xor
adc
fld
lds
movs
sub
or
or
cmps
pop
imul
hlt
xor
jno
fidiv
mov
ror
cli
scas
ret
(bad)
repnz
adc
out
and
lds
mov
push
dec
in
xor
test
mov
fistp
or
lock
es
rol
push
(bad)
out
cli
ret
cmp
shl
xchg
(bad)
popa
pop
mov
sub
pop
sub
jge
xchg
pop
sub
push
cmps
or
jno
inc
mov
jno
mov
out
je
xor
and
test
sbb
mov
and
retf
jl
jg
scas
xchg
fsubr
test
movs
ror
iret
jnp
aad
addr16
pop
add
and
les
outs
fadd
jmp
inc
pop
jnp
and
lods
fucomi
jns
add
ds
lods
icebp
xor
jmp
sub
sub
fsubr
xlat
out
cmp
xchg
mov
sbb
xchg
mov
in
(bad)
retf
call
bound
call
cwde
push
push
call
out
jge
sbb
mov
jo
push
mov
(bad)
cmc
push
shl
inc
cmc
pop
repz
in
push
popf
adc
aaa
add
scas
addr16
int3
dec
mov
inc
mov
and
xor
test
(bad)
push
push
or
test
jle
push
sub
or
fnsave
jb
xchg
or
adc
icebp
adc
aas
cwde
mov
aad
and
out
xchg
icebp
xchg
add
xchg
cld
push
in
pop
cmp
push
retf
outs
aaa
push
into
(bad)
xor
adc
cmp
cdq
xchg
ror
add
xchg
push
jne
push
cmp
pop
add
or
adc
je
adc
fist
dec
ret
lock
aaa
jae
(bad)
mov
and
cmp
push
xchg
lds
frstpm(287
cs
sub
xor
cmps
jecxz
jmp
fild
xchg
je
or
mov
pop
bound
or
stc
add
pop
clc
push
jmp
push
(bad)
xchg
xor
push
daa
cmps
fpatan
push
pop
pop
jae
push
ret
(bad)
in
jbe
or
pop
aam
sub
mov
jmp
sub
cmc
push
into
js
ss
push
je
xchg
int3
sub
in
aaa
mov
and
pop
sbb
sti
mov
jl
sahf
loope
es
dec
adc
push
pop
push
or
pop
(bad)
movs
rcl
icebp
ror
mov
not
or
loope
or
mov
xor
test
in
je
or
in
inc
sub
sbb
stc
cwde
addr16
in
or
aas
retf
cmp
in
jmp
and
retf
pop
das
dec
popf
pop
int
mul
jp
sti
jl
or
mov
cld
stc
fs
es
cld
and
sti
sbb
bound
xor
aaa
sub
cmp
aad
pusha
adc
mov
adc
inc
push
jmp
cmps
inc
xor
add
sbb
jbe
out
(bad)
(bad)
out
sbb
cmp
pop
jne
dec
jg
movs
(bad)
xchg
mov
lock
pop
in
ror
in
retf
call
or
enter
cmp
inc
mov
xchg
dec
imul
pop
sbb
mov
mov
jl
aad
jecxz
adc
jmp
fild
jbe
dec
push
hlt
retf
(bad)
retf
jg
icebp
cwde
addr16
adc
out
lea
and
jl
xchg
stos
loope
pop
and
push
aad
aas
dec
ret
or
in
and
ret
shr
or
cmp
outs
and
test
(bad)
xor
ret
dec
ror
js
push
iret
shl
jbe
je
fld
and
ret
pushf
(bad)
mov
movs
jp
iret
cmp
sbb
push
je
rol
and
push
repz
xchg
outs
adc
adc
ss
enter
pop
ss
adc
jne
mov
add
inc
clc
in
adc
xor
ins
mov
fwait
ss
test
add
shl
cmp
xchg
sahf
push
jge
xchg
gs
mov
sbb
es
mov
stos
out
lods
pop
adc
add
pop
out
jnp
lock
xchg
aad
or
ret
scas
jecxz
push
cld
mov
dec
outs
rcr
sub
jno
in
daa
data16
leave
and
mov
cmps
xor
cmps
test
inc
std
aad
pusha
push
repz
or
mov
sbb
test
and
push
les
mov
imul
mov
xor
arpl
inc
hlt
jno
push
xchg
(bad)
cmp
imul
je
(bad)
jecxz
ret
mov
adc
popa
popf
sbb
cs
out
inc
and
(bad)
(bad)
jmp
and
xor
or
daa
mov
and
jae
mov
dec
add
outs
xchg
mov
mov
add
fisttp
jno
push
xlat
fs
lods
xor
pop
xor
mov
call
fistp
stos
xchg
lea
jnp
mov
lods
shl
cmp
cld
mov
sti
test
clc
(bad)
jg
cmc
ins
push
cmp
leave
xor
(bad)
loope
int
leave
xor
xchg
dec
into
jae
icebp
push
jmp
jmp
movs
dec
fbld
loop
mov
loopne
test
dec
xchg
lds
loope
mov
lods
adc
mov
dec
dec
daa
repnz
jo
fld
into
pop
xchg
dec
(bad)
dec
sti
popf
add
(bad)
scas
leave
mov
rep
xor
(bad)
fwait
(bad)
and
lods
add
xor
ja
inc
fmul
cmp
jmp
fcomp
fild
or
clc
mov
xchg
cmp
sbb
sbb
call
sbb
xor
data16
test
in
aaa
cmp
mov
xor
test
out
pop
add
aam
(bad)
jo
inc
pop
adc
fldcw
or
arpl
ss
mov
outs
ins
push
ja
aam
test
(bad)
push
sub
outs
xor
xchg
and
dec
rol
retf
xor
push
fs
push
ja
adc
jbe
test
or
into
sub
fld
int
loop
int
pop
iret
sbb
pushf
dec
fistp
inc
xor
sub
out
lods
rol
aad
xor
movs
ds
call
dec
mov
aas
out
pop
cdq
pop
xor
push
inc
sbb
push
xchg
and
(bad)
call
mov
dec
xor
ror
mov
xor
lods
ficom
gs
or
cld
mov
aam
scas
add
mov
gs
mov
(bad)
adc
mov
push
jo
ins
and
add
test
push
sbb
dec
inc
(bad)
ins
or
aam
imul
lods
fild
sub
shr
mov
in
mov
inc
mov
imul
add
sub
adc
cli
or
aas
fwait
xchg
mov
mov
jo
xor
mov
inc
inc
sub
outs
popf
fcomp
mov
push
or
dec
mov
mov
iret
repz
inc
jns
popa
push
and
lods
xchg
dec
mov
dec
mov
ja
cmc
fnstcw
sub
mov
adc
xchg
or
outs
pop
jmp
pop
jae
fsubr
shl
pop
repnz
fcom
arpl
fld
cmp
repz
or
add
sahf
movs
sbb
sahf
out
jns
pop
or
sti
pushf
mov
adc
xor
adc
inc
xchg
cmc
sub
push
mov
cmp
ret
movs
xchg
mov
out
push
daa
push
leave
ret
push
mov
outs
dec
imul
inc
in
jb
loop
lea
ds
into
sahf
push
cmps
xchg
pusha
idiv
sahf
outs
and
loope
fisttp
and
pusha
sub
cmp
sub
dec
stos
loope
mov
test
cwde
movs
fst
mov
mov
test
or
sbb
arpl
fwait
(bad)
pop
popf
xor
fisub
retf
push
popf
adc
aaa
popa
das
lods
sbb
movs
arpl
mov
(bad)
and
test
popf
movs
sub
in
fwait
sbb
mov
ror
sbb
sub
and
dec
push
sub
push
bound
rcl
mov
pop
ins
retf
and
ret
cmps
xchg
inc
rcl
sub
add
fs
pop
push
or
ror
sbb
and
xchg
in
sbb
retf
mov
popf
dec
rcr
cld
gs
and
inc
data16
xor
retf
stc
test
mov
adc
cs
data16
out
mov
sub
daa
xchg
inc
enter
or
add
adc
fstp
xor
mov
(bad)
sub
or
popa
jo
jl
popa
mov
test
jno
and
loopne
stos
add
sub
data16
dec
sbb
leave
xchg
pop
sbb
cdq
add
into
pop
imul
or
sub
jl
dec
test
sub
xor
test
and
cmp
int
add
sub
mov
adc
data16
lods
lods
popa
sub
inc
and
cli
imul
mov
pop
cdq
cdq
ds
jmp
jmp
sub
pop
nop
pop
pop
ins
fwait
push
addr16
and
jns
jns
jg
rcr
cmp
test
les
out
pop
mov
pop
iret
fcomp
outs
je
lods
lods
iret
stos
shl
jno
fisub
jmp
aam
(bad)
xchg
inc
rcr
push
ror
in
cmps
mov
xor
xor
std
je
pop
out
mul
add
popa
adc
in
in
cmp
(bad)
mov
pop
(bad)
or
je
pusha
adc
nop
push
inc
push
jg
xor
in
aad
mov
hlt
popa
ss
shr
jae
cmps
mov
add
or
repz
xor
mov
lods
adc
jb
stc
mov
fstp
add
mov
in
or
push
call
mov
inc
push
sbb
jb
imul
mov
ins
jno
enter
addr16
iret
push
int
mov
adc
mov
xchg
loope
bound
add
outs
push
sub
pop
adc
fs
cdq
popa
pop
jecxz
loop
adc
rol
ret
and
adc
mov
xchg
jbe
xor
mov
add
sbb
mov
or
sbb
fmul
push
pop
inc
sub
add
mov
aas
jbe
mov
cmp
cmps
sar
imul
and
cmps
fsub
out
push
ret
push
xchg
add
add
outs
adc
fldcw
movs
cmp
rol
push
ret
push
jle
xor
jbe
xchg
fbld
mov
jno
fmul
cwde
aad
fstp
aam
mov
retf
aad
adc
push
outs
mov
scas
stos
bound
cmp
dec
mov
xor
inc
not
push
cwde
fldln2
jno
xor
je
cmp
mov
lea
adc
iret
cmp
loop
mov
ret
pop
movs
movs
adc
(bad)
std
mov
cld
push
sbb
sbb
loopne
test
pop
leave
dec
pop
add
fwait
sti
push
mov
ss
loopne
fisttp
cwde
and
pop
or
out
mov
add
jmp
pop
jl
mov
pop
mov
cmps
inc
inc
mov
jno
dec
pusha
cmp
inc
add
dec
pop
push
(bad)
stos
and
ret
inc
in
adc
les
dec
pop
pop
cwde
inc
jl
inc
mov
xchg
fidivr
jae
cmp
mov
jbe
xchg
popf
js
sbb
and
les
(bad)
jbe
mov
mov
jbe
cli
or
sbb
out
push
mov
out
add
(bad)
push
ret
sbb
scas
adc
jmp
mov
or
shr
sub
jae
jns
push
pusha
std
call
lahf
pop
fild
fbstp
dec
ret
cmp
int
hlt
jno
dec
inc
mov
ret
sub
dec
inc
and
sbb
les
mov
inc
push
xchg
jl
xlat
mov
frstor
xlat
es
push
push
hlt
sbb
mov
jp
shl
fucom
jb
or
stos
inc
push
jge
cmp
cli
es
mov
test
pop
xchg
mov
mov
mov
mov
je
dec
mov
fld
inc
(bad)
pop
dec
mov
push
in
loopne
ins
pop
dec
sbb
mov
icebp
pusha
add
in
inc
mov
ins
cmps
or
leave
and
push
xchg
loope
lock
adc
sub
rcr
jecxz
outs
outs
repnz
push
int3
(bad)
jecxz
cdq
cmp
mov
jb
mov
test
mov
(bad)
in
sbb
add
out
push
mul
pushf
cmp
xchg
xchg
out
neg
pop
push
leave
or
pusha
aam
push
dec
mov
sub
xchg
and
or
cdq
pusha
dec
rol
adc
mov
mov
ret
lods
adc
adc
and
adc
cs
fidiv
adc
out
sbb
aad
sar
fs
inc
lahf
dec
nop
jmp
add
xor
mov
and
xor
dec
ret
push
add
das
mov
xor
movs
and
fadd
mul
xor
outs
fsub
cli
lods
cmp
loope
adc
dec
mov
pushf
xor
mov
mov
data16
mov
jcxz
lods
push
push
aam
push
pop
lahf
xor
leave
ins
ja
mov
push
cmps
aas
mov
jle
stos
int3
mov
sub
push
mov
jns
fwait
les
add
pop
or
leave
xlat
adc
lea
out
mov
and
xor
fs
bnd
xchg
mov
pop
pop
add
retf
retf
or
fld
sbb
pop
sar
mov
fs
call
pop
mov
jecxz
pop
push
mov
pop
and
mov
pop
cdq
and
ror
adc
mov
sub
dec
iret
stos
add
jb
scas
pop
jge
mov
dec
sbb
(bad)
shr
add
ret
jbe
hlt
mov
pop
aaa
iret
inc
ins
into
(bad)
iret
jle
stos
jg
xlat
pop
gs
mov
lods
sub
push
int3
sbb
jg
loopne
pusha
aas
mov
fcmovb
movs
in
sbb
adc
jbe
fidiv
inc
sbb
or
push
push
(bad)
fisttp
adc
shl
pop
cdq
stos
or
mov
jb
jbe
mov
mov
fnsave
xchg
in
in
in
mov
in
shl
ret
data16
or
xchg
cmc
imul
pusha
mov
ror
lods
adc
pop
fistp
and
into
ficomp
call
dec
push
mov
ror
int
in
inc
jge
into
(bad)
fsub
sub
jecxz
sub
dec
push
jno
inc
clc
sbb
add
cmp
cmp
pop
dec
cmps
or
(bad)
inc
sub
std
dec
idiv
(bad)
fidivr
ror
and
mov
push
popf
bound
add
aad
loop
aas
arpl
cmp
lods
push
scas
cmp
into
fcmovu
pop
out
push
addr16
xchg
fistp
pop
or
in
pop
pop
ds
aam
shl
pop
loopne
mov
stos
inc
mov
imul
(bad)
ds
movs
xor
ret
outs
jecxz
sbb
in
adc
lahf
xor
(bad)
loop
scas
into
pop
cdq
ret
xor
inc
ss
dec
cmp
or
sbb
fistp
test
call
(bad)
std
das
ret
lods
sub
xchg
fbstp
ss
pop
es
loop
test
jge
sbb
push
cwde
les
inc
test
rol
cmps
aaa
pop
outs
scas
repz
cmp
xor
dec
int
jbe
fimul
mov
popf
dec
(bad)
fldenv
ror
mov
adc
ins
mov
pop
jg
xchg
into
mov
movs
lds
pop
out
pop
jmp
out
in
inc
sbb
ficomp
mov
cli
fisttp
jge
dec
pop
pop
jecxz
cli
jnp
mov
fistp
xchg
jbe
pushf
ffreep
mov
mov
loop
mov
jmp
jae
mov
xchg
shr
pop
jle
cmp
adc
cs
dec
jecxz
mov
push
mov
(bad)
mov
fistp
in
and
mov
ret
mov
mov
(bad)
std
xor
xchg
call
inc
cmp
imul
clc
mov
pop
js
cmps
lahf
int3
pop
in
dec
sbb
push
call
aaa
clc
leave
dec
xchg
push
add
pop
mov
xchg
pop
mov
lods
cmp
mov
in
frstor
xor
pop
clc
xlat
mov
or
dec
pop
js
jae
ror
push
rcr
push
mov
ja
popa
cld
lock
pop
fst
mov
push
pop
cmp
or
aas
sbb
(bad)
icebp
out
and
xchg
mov
test
mov
sub
push
mov
(bad)
push
ret
dec
aaa
xlat
ret
lds
pop
fmul
fstp
mov
out
in
mov
xchg
dec
xor
push
and
shr
(bad)
jo
lods
mov
jg
neg
imul
into
into
cli
pop
cmp
icebp
aam
xor
into
mov
lods
popf
push
push
pop
cmp
popa
xor
jecxz
mov
imul
mov
faddp
popf
je
mov
shr
pushf
ret
mov
lods
mov
popa
or
(bad)
pop
push
jl
jo
pop
jecxz
bound
add
xlat
xlat
fidivr
cmp
dec
xor
adc
ins
fisub
jp
imul
inc
mov
ins
out
fnstsw
nop
dec
enter
jno
mov
sub
aas
dec
(bad)
xchg
je
cli
call
popa
xchg
popf
ret
repz
push
adc
icebp
stos
(bad)
pop
outs
scas
pop
fsubr
popa
out
rcr
lods
adc
add
out
leave
enter
leave
scas
inc
cli
dec
adc
fs
adc
cmp
scas
jb
mov
(bad)
pusha
addr16
test
inc
dec
sub
aam
dec
pop
mov
mov
mov
pop
mov
mov
lods
popf
cmp
mov
das
fmul
mov
icebp
cmc
pop
mov
push
popa
dec
mov
pop
jnp
dec
(bad)
sbb
xor
lods
add
enter
rol
cld
fsub
les
mov
(bad)
push
scas
in
in
es
aam
daa
out
cmp
sbb
(bad)
aam
mov
jmp
mov
lods
or
adc
and
mov
jmp
aas
ror
scas
add
cmc
cmovno
shl
stos
push
xchg
mov
fcomp
dec
int
mov
out
and
out
cli
scas
sbb
movs
bound
xor
mov
imul
sbb
jmp
es
xchg
nop
fadd
dec
psubusw
cmps
loopne
adc
and
dec
dec
ss
xor
outs
ds
into
fdiv
imul
pop
cmc
frstor
jo
mov
es
jne
fwait
ror
stos
test
jo
movmskps
jmp
sub
push
loopne
addr16
clc
int3
shl
in
add
pop
mov
xor
fs
lock
mov
mov
stos
mov
push
das
adc
fcomp
xor
daa
jno
sahf
loopne
cmp
cmp
lock
dec
jb
sbb
das
sub
jp
pop
add
mov
pop
fdivr
pop
push
xchg
ss
aaa
adc
fidivr
push
or
or
enter
and
dec
loopne
or
jae
pcmpeqd
mov
out
mov
add
push
aaa
lods
or
adc
dec
xor
arpl
cmc
add
jge
mov
push
adc
push
fsub
cmps
in
sbb
in
test
or
rcl
rol
jo
push
adc
lods
loope
fimul
cwde
and
inc
adc
jmp
jp
das
fiadd
and
add
mov
dec
mov
mov
push
imul
jns
push
(bad)
mov
add
ins
adc
into
push
add
xor
push
retf
push
or
bound
fwait
dec
mov
add
outs
mov
mov
sahf
pushf
cmps
adc
mov
loop
and
push
loopne
movs
neg
lods
jae
(bad)
xor
dec
cmp
fcmovu
daa
xchg
add
add
mov
sbb
mov
sbb
push
add
mov
add
and
ss
cmp
nop
mov
fdivr
out
mov
sar
or
ins
ror
pop
daa
push
sbb
inc
imul
addr16
lea
xchg
jl
dec
jae
add
popa
dec
cmp
dec
pusha
ins
or
std
sbb
push
outs
xchg
clc
test
out
cwde
in
ds
daa
dec
jbe
jb
mov
ins
test
xchg
push
shr
and
and
ins
mov
jge
out
mov
mov
int
inc
pop
imul
movs
pop
test
xor
jnp
clc
lock
and
shr
js
inc
outs
mov
jecxz
xchg
push
sbb
dec
sbb
arpl
cmps
cmp
retf
mov
jb
cmp
mov
or
rcl
cmp
push
sub
fdiv
jmp
mov
into
retf
movs
(bad)
xchg
add
xchg
push
sahf
mov
push
pusha
sahf
mov
pop
rol
xor
lds
cmp
sti
enter
sbb
cmc
adc
fstp
in
test
mov
dec
popa
inc
cmp
in
(bad)
popa
push
jbe
cli
rcr
cwde
sub
ja
sbb
in
fisubr
dec
ja
jmp
bound
and
cmps
ins
adc
and
ror
inc
test
jb
mov
(bad)
sub
or
clc
retf
jno
in
xchg
gs
push
adc
push
push
daa
sub
push
arpl
jne
sahf
inc
fadd
cmps
es
cmp
sar
sbb
mov
push
adc
pop
or
pop
gs
call
xor
xchg
jo
add
leave
test
icebp
mov
jnp
mov
push
ja
sub
js
sahf
test
cdq
add
adc
ins
mov
add
repz
mov
mov
lods
xchg
scas
cmp
push
(bad)
jno
adc
sbb
fnstenv
push
pop
inc
push
int3
rol
scas
xor
scas
loop
(bad)
out
dec
lahf
sbb
or
pop
jb
clc
inc
test
retf
mov
js
or
jno
ja
pop
mov
(bad)
or
add
stos
packuswb
xor
adc
out
shr
popa
ja
or
or
xor
xchg
mov
js
out
or
cmp
pop
sbb
ss
(bad)
jmp
fcomp
and
adc
jae
in
and
inc
movs
aas
sub
sub
pop
pop
mov
inc
dec
lock
mov
mov
lds
dec
daa
les
add
sub
cs
add
dec
jo
push
out
inc
cld
sbb
div
cmc
mul
pop
jnp
in
movs
sbb
sti
imul
dec
cmp
xchg
(bad)
fst
push
mov
test
dec
pop
int
fisttp
dec
addr16
nop
jecxz
in
dec
mov
and
dec
sub
les
cli
les
sahf
cld
in
pop
in
cmc
rcr
dec
cmp
fldenv
clc
(bad)
fadd
xchg
dec
xchg
sbb
lods
mov
mov
fcom
xor
in
fcom
xlat
cmp
dec
push
pop
adc
push
mov
enter
(bad)
retf
inc
sahf
lods
or
and
inc
sbb
dec
jg
jne
xor
ins
push
enter
mov
mov
mov
lods
popa
add
mov
outs
pop
push
or
xchg
inc
push
loop
mov
adc
dec
xor
test
cmps
scas
imul
imul
(bad)
out
xor
ret
scas
imul
fimul
mov
push
adc
xchg
cwde
adc
bound
add
jnp
mov
pop
adc
or
movs
cmp
jns
jno
push
jbe
stos
fnstenv
push
test
xchg
aaa
mov
dec
push
cmovl
popa
xchg
call
mov
cld
cmp
and
dec
shl
fidiv
test
les
jmp
cmp
mov
push
std
stc
jmp
data16
out
jne
stos
dec
repnz
sbb
push
lds
pusha
shr
out
adc
inc
mov
inc
pop
mov
push
push
aaa
and
(bad)
pushf
aas
pusha
fs
dec
dec
frstor
cmp
lds
add
xor
rcr
enter
cmp
je
popa
stos
and
jno
sub
sub
xor
or
pop
push
scas
pop
ret
retf
add
jmp
cmps
xor
xor
sub
movs
retf
cmp
gs
lods
inc
mov
sahf
rcl
pusha
aaa
xchg
addr16
mov
push
out
adc
and
jo
div
sbb
mov
mov
mov
pop
stc
dec
or
dec
ror
xchg
imul
fs
stos
or
xor
dec
shr
lock
pop
xchg
sbb
inc
mov
xor
cmps
and
or
mov
aad
imul
aad
dec
or
std
cmps
(bad)
mov
sbb
int3
adc
mov
rol
mov
retf
cmp
cli
pop
sahf
cld
cld
repz
repz
leave
aas
in
data16
sub
iret
jmp
xchg
jg
xor
xor
ret
fmulp
addr16
and
mov
inc
imul
mov
out
xchg
pop
push
test
xor
or
xchg
cmp
cmp
push
mov
adc
xchg
out
xor
pop
(bad)
sub
and
test
in
inc
pop
push
mov
jge
push
sub
mov
mov
out
and
(bad)
rcl
fwait
into
pop
push
data16
inc
push
add
push
adc
ja
out
cmp
adc
add
pop
adc
std
ds
(bad)
fsubr
ret
sub
jbe
xor
in
test
push
addr16
fimul
push
add
(bad)
push
inc
mov
mov
daa
mov
pop
lds
fnstenv
loopne
cs
not
ja
popa
pusha
repnz
sbb
mov
push
jo
push
pushf
dec
sub
dec
push
xor
cmp
adc
sbb
addr16
push
push
call
fcomp
mov
mov
lods
sbb
xchg
(bad)
pop
mov
div
aas
jl
imul
scas
push
iret
ds
pop
aas
cmp
(bad)
jg
loop
aas
push
mov
lahf
aas
icebp
adc
dec
jge
sti
out
jg
leave
ins
pop
jge
adc
jns
adc
jae
inc
je
es
dec
in
and
cvtpi2ps
mov
aaa
xchg
or
in
push
push
inc
cwde
cmps
push
aad
pop
retf
dec
pop
sub
xor
add
pop
xchg
jl
adc
ret
popa
sub
ins
mov
pop
inc
ss
mov
shl
jecxz
shl
sti
pop
mov
imul
xchg
push
call
adc
scas
retf
leave
sub
aam
mov
in
xor
sbb
inc
mov
xor
add
shl
xor
fdiv
in
push
sbb
pushf
jp
and
adc
sub
outs
je
cmps
test
sub
push
cmp
leave
add
xor
sub
mov
leave
jo
push
jp
sbb
out
ins
mov
scas
push
mov
lds
aad
(bad)
je
scas
push
jbe
call
pop
sbb
imul
daa
(bad)
aad
lahf
std
loopne
pop
sti
cli
pop
call
addr16
jle
pop
push
mov
dec
ds
out
(bad)
repnz
daa
ds
or
jo
das
xor
mov
lock
sub
mov
jae
xor
dec
imul
xchg
push
data16
push
or
pop
xor
inc
int3
push
outs
or
lahf
add
int3
sbb
dec
pop
inc
xchg
cmp
push
test
sbb
shl
pop
and
cmp
ret
sbb
shl
add
in
mov
and
cmp
jbe
out
push
or
add
movs
adc
js
bound
cmp
jmp
and
mov
(bad)
fld
jb
enter
repz
rcl
fs
and
popf
fdiv
into
sub
(bad)
loopne
mov
cmps
jae
jne
xor
add
ja
xor
sub
pop
pop
mov
pop
cld
enter
push
(bad)
movs
cmc
push
push
lods
iret
dec
mov
out
mov
(bad)
push
paddd
stc
xchg
stos
in
xchg
daa
jmp
or
sbb
ds
xchg
pop
jg
shl
lds
div
daa
(bad)
sbb
or
cwde
jg
jbe
test
sahf
jnp
add
leave
popa
out
iret
cdq
jne
adc
cld
jl
ins
push
inc
add
add
adc
ror
in
pusha
xor
fdivr
adc
inc
xchg
sub
pop
mov
sub
cmp
aas
add
pop
leave
mov
sub
test
mov
push
adc
(bad)
push
or
fiadd
cmp
pop
add
dec
and
jb
loopne
add
loopne
push
xor
cmp
sti
xchg
loopne
xchg
xchg
xchg
mov
adc
add
push
cmp
arpl
stos
lods
stos
xor
xchg
xchg
mov
adc
repnz
(bad)
jge
dec
je
movs
pusha
pop
and
ins
cs
xor
or
cs
sub
push
mov
jg
jl
leave
(bad)
jbe
(bad)
cwde
or
movs
ret
or
add
outs
aam
rol
mov
cmps
lds
sti
mov
sub
xchg
test
push
mov
aas
pop
cmp
lods
cmps
mov
mov
cli
pop
fistp
repz
jl
jmp
out
dec
inc
cli
cli
mov
cli
(bad)
push
fstp
std
aad
dec
cld
jecxz
jl
retf
outs
pop
call
or
adc
es
std
pop
in
outs
xchg
mov
pop
jne
fisub
imul
jns
bound
push
test
dec
dec
fwait
push
jmp
movs
inc
push
jmp
add
gs
popa
push
sub
gs
sbb
dec
or
jne
icebp
push
je
sub
mov
adc
sbb
stos
call
(bad)
std
loop
add
cmp
sub
sbb
sbb
icebp
adc
jp
mov
or
retf
or
mov
inc
in
ret
add
enter
stos
xor
pop
mov
fcom
cwde
fdivr
mov
(bad)
cli
and
push
inc
sbb
jae
test
sbb
clc
les
sbb
das
and
inc
out
adc
imul
jne
in
test
ja
xchg
mov
ja
jg
mov
dec
retf
push
outs
pop
out
adc
xchg
test
inc
jmp
clc
retf
cmp
std
aad
dec
(bad)
in
addr16
ficom
aad
xchg
icebp
jmp
les
iret
out
repz
and
add
dec
inc
adc
pop
xchg
stc
enter
xchg
rcl
es
xchg
ret
shl
inc
push
cwde
and
fdivp
nop
add
leave
rep
gs
clc
xor
ss
aam
(bad)
aad
loope
pop
jae
mov
sbb
jmp
adc
ds
test
inc
lea
mov
inc
(bad)
push
xchg
or
adc
add
ror
dec
sub
or
fist
aad
or
into
fidiv
inc
retf
adc
jmp
mov
add
out
fldenv
js
sub
inc
xchg
call
and
cmp
lock
inc
jne
cwde
repnz
int3
(bad)
ins
mov
jl
addr16
test
mov
mov
popa
or
mov
int
mov
cmp
bound
xchg
push
test
adc
repnz
mov
cmp
cmp
js
shl
out
loopne
(bad)
jmp
aas
jnp
add
(bad)
std
ret
(bad)
hlt
mov
sbb
mov
mov
adc
or
adc
bound
movs
fcom
dec
mov
lods
mov
(bad)
xchg
paddusw
pop
xchg
test
sub
dec
imul
stos
addr16
pop
ins
or
dec
mov
mov
xor
test
test
mov
push
cmps
inc
adc
loope
push
gs
cld
rcl
fwait
sbb
lahf
and
dec
cdq
push
in
add
in
xchg
cmp
cmp
pop
cs
cmps
movaps
add
loope
dec
stos
add
sub
cmp
repnz
xchg
(bad)
mov
mov
add
aad
pop
dec
test
addr16
ins
adc
lea
pop
movs
and
sbb
xor
nop
in
pop
sub
bound
add
stos
ins
bound
sbb
push
cdq
ficomp
aam
inc
cmp
cmp
popa
daa
aad
cmps
jmp
iret
loop
sbb
call
ja
xor
cmp
cmp
or
or
neg
jg
(bad)
idiv
(bad)
out
test
cmc
addr16
jmp
fcmove
jecxz
bound
fldenv
jge
mov
ss
mov
push
inc
lock
fs
inc
xor
jb
leave
repz
or
adc
xor
inc
lds
daa
rcr
pop
cmp
sub
das
cmp
pop
loop
pop
sbb
push
adc
mov
mov
outs
sub
xchg
push
into
push
cmp
cmp
imul
cdq
sub
push
inc
xchg
xchg
bound
xchg
neg
call
inc
jg
rcl
jle
mov
or
lods
or
dec
sbb
retf
in
(bad)
mov
mov
(bad)
mov
popa
retf
jg
ja
push
add
int3
xchg
out
xchg
cmps
xchg
test
or
outs
enter
test
add
fsubp
ret
adc
mov
out
add
jmp
mov
popf
sbb
push
lea
sub
mov
mov
fs
sub
cmp
in
iret
mov
pop
(bad)
hlt
mov
mov
push
jl
pop
clc
pop
pop
jp
mov
cmc
(bad)
stc
xlat
(bad)
mov
sti
repnz
adc
cmp
leave
mov
adc
outs
ins
adc
sbb
cwde
fs
add
cmp
aam
cmp
outs
mul
add
(bad)
mov
lea
sbb
jno
xor
sbb
mov
push
pop
adc
push
dec
and
ret
jmp
ss
in
leave
out
dec
dec
xchg
inc
xor
inc
(bad)
bound
gs
fsub
sar
pop
cmp
xchg
fwait
lock
ret
jmp
pop
(bad)
shl
(bad)
push
mov
push
rcl
xor
(bad)
dec
lds
retf
mov
nop
add
in
ins
mov
arpl
sar
ror
mov
arpl
mov
movs
push
jae
sbb
movs
shl
bound
push
cli
mov
jno
sti
dec
test
fdiv
mov
iret
fs
test
mov
sbb
xchg
data16
stc
mov
sbb
sbb
int
push
adc
mov
pop
dec
in
dec
iret
mov
(bad)
mul
jecxz
jle
addr16
icebp
pop
dec
aas
hlt
add
xchg
aas
jle
and
cld
mov
xchg
cmc
jae
clc
push
repz
sub
jno
xchg
pop
dec
pop
sbb
mov
cmp
add
imul
sar
(bad)
in
pop
xor
mov
or
or
jne
leave
(bad)
xlat
mul
xor
scas
xchg
dec
clc
or
mov
sub
gs
jmp
shr
and
in
ds
mov
push
pusha
jnp
mov
rcr
inc
js
sar
retf
js
jne
nop
iret
xor
int
cmp
sbb
xchg
push
gs
test
push
sub
xlat
jl
mov
inc
mov
sub
and
addr16
das
call
sahf
xor
sbb
hlt
mov
mov
fcmovnb
mov
push
or
das
sar
or
out
push
pop
mov
mov
dec
add
dec
mov
(bad)
(bad)
dec
scas
pop
pop
in
cmp
popf
adc
ds
movs
mov
push
retf
repnz
dec
hlt
cmc
xchg
(bad)
jecxz
jge
jmp
aas
mov
repz
jle
cmc
jg
idiv
hlt
cmc
xchg
ret
aaa
popa
sti
clc
cld
fdivr
xor
ss
out
mov
in
rol
(bad)
in
push
pop
sub
imul
ins
sub
enter
movs
in
push
dec
inc
or
rcr
xchg
repnz
jb
pop
push
addr16
fs
js
fild
pop
test
or
cmp
retf
add
add
nop
shl
sbb
inc
push
mov
and
xchg
pushf
push
jmp
scas
lods
movs
push
mov
imul
mov
shl
push
push
sbb
lock
ret
sbb
adc
cmp
loop
mov
cmc
call
xlat
dec
push
xchg
jo
ins
cmp
adc
lea
xchg
mov
cli
jns
(bad)
mov
movs
dec
push
daa
fisubr
jmp
retf
sub
clc
cmc
push
stos
cmp
push
or
pop
mov
push
mov
out
ret
jmp
inc
pop
mov
or
xor
jg
out
mov
repz
ret
(bad)
mov
cmp
cld
cmp
mov
addr16
(bad)
cmps
outs
jg
cdq
das
std
(bad)
xlat
fistp
cdq
mov
jns
fcmovnb
pop
jle
mov
mov
add
mov
dec
loop
sub
ins
xor
mov
fld
xor
scas
cmp
pop
push
xchg
call
ds
mov
std
fwait
pop
inc
(bad)
movs
mov
fld
push
dec
pushf
ret
shl
sbb
jmp
mov
gs
out
or
or
cmps
and
popa
int
test
or
pop
sub
cmp
xchg
push
push
sbb
addr16
repz
out
cmps
fcom
es
or
sub
aaa
fstp
xor
jae
push
adc
cmp
mov
xchg
pusha
cwde
dec
xor
test
rcr
cmp
dec
cmp
int3
popa
adc
out
aam
sbb
sbb
cmp
sbb
push
sub
sub
fdiv
mov
ds
(bad)
or
cwde
mov
jbe
xor
and
mov
in
fimul
(bad)
out
fisttp
sbb
out
mov
lahf
push
popa
out
int
and
ins
shl
das
icebp
fild
pop
pop
jge
out
fxch
das
mov
jl
out
mov
pop
jl
mov
adc
mov
sahf
inc
ja
dec
gs
sub
popf
out
enter
dec
fistp
jmp
pop
loopne
or
sub
fbld
sub
add
dec
retf
push
sbb
jmp
inc
mul
cmc
repz
ins
aad
dec
sbb
sub
adc
cli
fsubr
fwait
retf
dec
or
std
dec
test
sbb
test
mov
retf
sub
leave
inc
out
mov
xchg
call
mov
in
out
push
popf
dec
test
adc
stos
popf
out
test
adc
adc
inc
iret
or
pop
jmp
and
sbb
imul
or
pushf
jns
cmc
dec
push
push
rcl
push
xchg
mov
(bad)
idiv
cmp
div
mov
mov
(bad)
loopne
dec
or
push
or
and
out
ret
movq
sbb
fistp
(bad)
ja
aas
cld
in
jg
idiv
cmc
aas
mov
ud0
fistp
lahf
ror
sti
push
mov
jp
daa
fsub
bound
cdq
shr
in
push
lds
sub
fld
(bad)
shl
outs
ret
dec
xor
sub
dec
js
data16
dec
push
pop
push
sub
jno
stos
or
outs
ja
xchg
mov
xor
push
(bad)
aad
xor
cmp
je
jl
imul
sub
and
inc
push
popf
cwde
imul
movs
jae
ja
cwde
inc
inc
test
inc
sbb
outs
imul
loop
jl
jnp
dec
add
xor
imul
add
fistp
lea
es
js
movs
jmp
popf
jge
push
xor
enter
xor
jbe
mov
aaa
sbb
sub
std
test
stos
inc
fstp
mov
mov
out
sub
jne
adc
or
fcmovu
add
daa
push
daa
rol
or
inc
sqrtps
xchg
adc
retf
add
fprem
ins
out
or
dec
xchg
sar
out
(bad)
call
jmp
scas
push
ins
ror
xchg
add
xchg
inc
jmp
mov
gs
popa
bound
cmp
mov
mov
in
ror
mov
call
enter
xor
pusha
ror
int
pop
nop
pop
dec
cwde
(bad)
mov
arpl
hlt
les
dec
bound
sbb
cmp
and
test
sub
fbld
add
add
cmps
xchg
sti
and
cmp
inc
mov
and
arpl
retf
jl
sbb
loop
mul
pop
call
mov
ja
jb
sbb
and
and
xchg
push
push
gs
mov
movs
lock
imul
adc
not
cdq
push
shr
pop
xchg
pop
pop
icebp
pushf
pop
scas
add
adc
sub
loope
and
jg
stos
leave
aas
and
shl
dec
jnp
or
push
and
xlat
imul
push
in
in
cmp
test
stc
rol
rol
cld
repz
mov
dec
jl
lds
int3
xchg
cmps
push
xchg
out
pushf
sub
push
jnp
test
dec
mov
mov
not
pusha
dec
mov
ja
lods
out
inc
jle
cmc
pop
mov
or
call
aam
mov
push
sub
cmps
sub
pop
adc
cdq
sti
push
fild
jnp
int
fs
sub
mov
ret
dec
adc
jecxz
jge
imul
mov
xor
repnz
cwde
dec
mov
ror
aam
fidiv
or
push
xor
nop
cmc
adc
or
mov
xchg
pusha
xchg
add
and
ins
add
lea
pop
les
xor
or
cmp
fcomp
test
mov
cmc
ror
sub
lods
cmp
mov
mov
mov
in
xchg
(bad)
cwde
(bad)
sub
scas
cld
movs
call
gs
enter
sub
in
jg
retf
push
out
xchg
or
std
in
mov
outs
iret
mov
fstp
idiv
(bad)
clc
sti
daa
(bad)
repnz
pop
jmp
aas
repnz
mov
add
or
ret
and
adc
and
repnz
das
lea
jge
(bad)
ins
inc
outs
bound
ja
shl
cmp
inc
jle
jl
stos
jg
inc
into
add
cmp
mov
push
xchg
dec
mov
cwde
ffreep
jp
push
rcl
sbb
stos
add
jb
mov
jo
and
adc
pushf
movs
and
pusha
imul
cmp
ss
add
dec
imul
mov
mov
push
fst
ret
movs
aaa
nop
outs
shl
jmp
jl
xchg
mov
rcl
aad
stos
call
or
sahf
add
(bad)
mov
rol
sub
call
inc
(bad)
retf
sbb
es
xchg
out
cmp
inc
inc
inc
mov
jmp
shl
test
xchg
push
push
mov
push
push
inc
cmp
xor
test
sbb
movs
sbb
lods
jmp
and
inc
int3
out
jmp
push
adc
loope
(bad)
stc
pushf
(bad)
adc
jae
fwait
out
(bad)
mov
lods
cmp
jno
sbb
out
pop
ins
or
cmp
xchg
push
dec
or
adc
sub
jo
cdq
xor
sub
mov
rcr
cmp
call
and
retf
sbb
xor
mov
and
or
mov
stos
scas
jns
imul
dec
popa
inc
add
inc
inc
pextrw
ds
inc
nop
lds
push
mov
retf
loop
call
sbb
pop
(bad)
push
mov
or
dec
es
adc
gs
cmp
sbb
imul
adc
imul
adc
mov
stos
mov
daa
mov
lds
test
rcr
or
retf
or
add
cmps
mov
aaa
xchg
(bad)
test
pop
fadd
pop
fidivr
add
ins
mov
mov
(bad)
icebp
data16
and
push
jnp
mov
sub
fwait
fs
mov
jecxz
and
mov
lea
ret
push
stos
outs
mov
dec
retf
mov
das
je
jns
int3
sub
loopne
pusha
mov
push
xchg
xchg
xchg
xchg
fsub
test
iret
lods
popf
inc
jo
sbb
and
fst
xor
aad
shl
into
(bad)
ret
sbb
mov
inc
add
enter
mov
call
test
inc
push
mov
ins
or
lea
push
test
outs
loope
push
dec
pusha
adc
jp
addr16
pop
sbb
fs
data16
push
ins
test
ja
jns
shr
lea
xchg
nop
push
cmc
and
aad
fld
sub
xor
pop
out
fbld
mov
pop
xor
stc
and
sbb
test
lahf
and
push
push
loopne
daa
mov
in
or
mov
mov
or
stos
pop
push
lods
fxch
mov
sbb
or
repz
mov
and
sub
(bad)
xor
pop
cmc
adc
lahf
adc
mov
xor
dec
enter
push
shl
out
sub
jecxz
repz
fmulp
adc
mov
scas
hlt
lea
mov
xor
or
inc
jno
pop
jg
mov
push
and
mov
push
sar
mov
les
push
test
outs
adc
clc
jo
out
add
inc
add
add
lahf
cmovo
push
adc
or
in
ins
adc
fcom
jl
push
mov
or
inc
jne
lods
cmp
cli
add
adc
test
pushf
in
xchg
jo
mov
retf
jae
stos
fadd
sub
cwde
push
fistp
rol
stos
adc
xor
jae
sbb
push
push
mov
repz
inc
shr
int
(bad)
sub
loopne
xor
xor
lods
cmp
fdivr
fsubr
mov
mov
test
sti
pusha
ja
mov
stos
retf
mov
fimul
in
pop
mov
mov
femms
or
jge
mov
xor
adc
pop
mov
sbb
or
mov
mov
xchg
shl
sub
mov
xor
shr
int3
dec
push
mov
(bad)
xchg
push
retf
and
and
gs
mov
rcr
sbb
or
cmp
and
jne
addr16
and
imul
dec
jns
or
push
test
xor
mov
rcr
mov
rcl
popa
inc
js
inc
mov
cmp
inc
aam
and
(bad)
fst
call
out
pushf
bound
jns
sbb
(bad)
aas
cmp
xor
mov
jno
add
ins
scas
retf
dec
sub
dec
es
repz
dec
call
and
xor
and
cdq
xor
(bad)
int3
xchg
mov
and
inc
push
sti
xor
nop
cmp
sub
lods
xor
xor
lods
xchg
inc
stos
dec
fild
repz
out
and
and
movs
cmc
xchg
inc
and
and
ss
popa
xchg
popa
push
cwde
je
cmp
fst
xchg
push
lods
pop
js
imul
call
cmp
sub
sbb
and
cs
cli
sahf
push
out
dec
and
rcr
sbb
bound
or
sbb
out
shl
jge
xchg
pop
ja
mov
inc
mov
ins
fnstcw
fs
inc
(bad)
push
adc
sbb
ins
and
xchg
or
pop
enter
cmps
mov
dec
xchg
fcom
cmp
sub
test
mov
cmps
mov
jo
int
or
stos
or
mov
lods
out
pop
mov
add
add
ror
ins
push
(bad)
inc
jne
mov
fidiv
inc
xor
pusha
jmp
dec
cmps
jne
xchg
jne
pusha
mov
ret
out
dec
lea
pop
xor
sbb
or
add
dec
and
push
lds
shl
push
cmp
stos
fcmovne
mov
cdq
add
call
ja
dec
mov
cmps
sbb
jbe
scas
in
scas
and
aas
arpl
mov
jmp
push
xlat
outs
xor
nop
pop
imul
ret
cmp
movs
retf
inc
fist
xor
jl
mov
cmp
pushf
add
ss
out
shr
jno
fild
pusha
enter
in
jns
les
sbb
add
push
inc
xchg
add
mov
inc
push
jo
enter
call
test
mov
retf
sbb
scas
dec
frstor
xor
dec
and
scas
mov
aas
in
idiv
retf
or
mov
push
repz
cwde
inc
mov
cmp
mov
adc
mov
mov
hlt
rcl
pop
(bad)
stos
push
pavgw
push
cmp
sub
loop
jg
aas
add
add
sbb
hlt
call
rcr
cmp
ss
cwde
cmp
push
cmps
xor
cld
sbb
pop
data16
aas
aad
je
retf
mov
sub
test
mov
jbe
retf
push
dec
ins
(bad)
ret
sbb
jne
sub
sbb
add
movs
inc
inc
sub
retf
or
jmp
and
xor
dec
push
clc
lock
dec
int3
and
clc
mov
test
int
sbb
push
loopne
shr
jg
pop
push
inc
add
inc
pop
cmps
ins
sub
inc
test
jmp
cmp
cmp
push
mov
(bad)
or
mov
xor
xchg
mul
push
sub
adc
mov
push
stos
test
mov
xchg
(bad)
ss
call
cmp
jp
xor
push
das
dec
pusha
fsubr
inc
out
xchg
call
cmp
cmps
jb
cwde
dec
adc
call
cmp
add
xchg
std
xor
dec
mov
mov
push
stos
add
cdq
fnstcw
mov
pusha
sbb
and
xor
mov
xor
aam
dec
cmp
fyl2xp1
push
adc
call
lock
pop
mov
call
fld
es
or
fiadd
push
int
test
jp
xor
sub
push
pop
sbb
push
jg
xor
repz
add
sar
add
in
mov
call
ss
mov
movs
dec
xor
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jno
add
add
or
or
add
or
add
add
or
add
add
loope
sub
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jno
push
pop
je
dec
dec
cmp
ins
cs
outs
bound
js
jo
add
add
cmp
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
aaa
cmp
xor
sub
xor
xor
das
xor
das
xor
sub
aaa
cmp
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
jo
dec
cmp
imul
outs
arpl
outs
je
inc
cmp
cs
popa
xor
popa
bound
sub
sub
xor
xor
xor
and
jo
dec
cmp
jne
outs
je
inc
cmp
cs
inc
inc
aaa
xor
xor
xor
inc
xor
cmp
inc
inc
cmp
cmp
and
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
xor
ss
xor
xor
inc
xor
cmp
inc
inc
cmp
cmp
and
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
inc
and
push
imul
and
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
xor
cmp
sub
sub
sub
sub
xor
gs
xor
and
push
data16
jne
outs
je
inc
cmp
cs
popa
xor
popa
bound
sub
sub
xor
xor
xor
das
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
add
bound
add
push
js
in
pop
imul
lds
call
xor
sti
xor
and
push
push
adc
jmp
and
add
scas
xor
call
scas
sbb
xchg
leave
fsub
into
cdq
lahf
(bad)
sub
ds
mov
aas
fimul
fdivrp
(bad)
pop
xor
ret
inc
enter
lds
ficom
dec
jae
add
nop
inc
xor
mov
pop
push
lds
pushf
movs
add
pop
mov
into
rol
xor
xor
test
test
imul
adc
pushf
movs
add
mov
cmp
push
add
out
movs
push
dec
loope
pop
sbb
mov
xor
xor
xor
sahf
jecxz
xor
lock
iret
sub
pushf
push
mov
rcr
xor
fcmove
mov
lods
or
call
sub
movs
outs
inc
sar
jne
aas
push
(bad)
sub
fisubr
mov
push
aad
clc
sti
sti
inc
pop
ss
mov
cs
jnp
cdq
in
push
fs
jmp
aas
lock
ret
lahf
mov
lods
cwde
ds
lock
int
inc
mov
mov
pop
cli
mov
int3
jne
pop
or
cmp
or
mov
or
arpl
sbb
push
test
xchg
je
iret
inc
cld
imul
fcomp
(bad)
xchg
and
mov
sbb
rcl
hlt
xor
mov
jg
(bad)
cwde
call
or
es
cmp
out
out
les
and
imul
mov
xor
pop
loope
outs
mov
add
sti
xor
addr16
pop
in
int3
neg
into
and
jecxz
cmps
(bad)
repz
xchg
lock
mov
jle
scas
ins
mov
cs
int
sbb
dec
sbb
call
jnp
cmp
or
fcomp
jno
mov
inc
cmp
lods
add
mov
push
daa
loop
loope
mov
xor
mov
mov
jmp
sbb
or
mov
sbb
in
xchg
loop
stos
arpl
push
jp
inc
jne
xor
jmp
(bad)
stc
jmp
dec
dec
cmc
fld
add
lock
movs
(bad)
ja
jbe
out
xor
add
and
xor
and
je
pop
ds
push
inc
sbb
pop
sub
shl
shl
and
jle
jbe
sub
imul
leave
into
inc
fs
cmp
pop
frstor
retf
in
ins
mov
das
pop
retf
arpl
fistp
sahf
aas
xor
push
dec
sub
dec
mov
iret
mov
fs
das
push
mov
arpl
das
sub
(bad)
and
in
(bad)
and
iret
iret
setnp
movs
and
push
(bad)
(bad)
lods
shl
call
test
jp
addr16
sahf
pop
dec
fist
ds
cs
xchg
movs
jecxz
mov
js
sub
(bad)
clc
jne
fcom
test
stc
repz
sbb
lods
fist
sbb
popa
xor
xchg
mov
out
fdiv
pop
shl
mov
pusha
inc
les
sbb
jb
mov
adc
add
cmp
pop
cmp
mov
div
inc
stc
mov
pop
add
mov
mov
cmps
scas
out
sahf
mov
xchg
mov
ja
cmp
jo
gs
and
jg
cmc
push
jne
iret
mov
cli
ficom
lods
lea
stos
pop
push
mov
xlat
lock
lahf
(bad)
scas
xchg
or
out
scas
pop
inc
aam
pmaxsw
out
and
repnz
jl
hlt
xor
pop
adc
sahf
push
pop
sbb
sbb
daa
xchg
jo
test
imul
(bad)
(bad)
mov
add
cmp
in
dec
cmp
into
es
ja
mov
neg
repz
jns
outs
pop
inc
cmp
fs
aas
mov
aaa
and
xchg
enter
dec
sahf
iret
ja
jno
imul
bnd
dec
adc
in
dec
pop
mov
xor
add
in
lds
into
xor
out
stos
jno
fwait
sbb
push
mov
sbb
fbld
add
bound
out
fcmovnbe
jmp
outs
or
jo
pop
jp
mov
sbb
arpl
push
int
sub
pop
ret
adc
mov
ret
adc
and
mov
int
sbb
dec
repnz
mov
add
inc
shl
pop
pusha
sub
jecxz
std
add
sbb
mov
ins
adc
(bad)
xor
es
pusha
inc
sahf
in
movs
sbb
shl
int3
cdq
mov
cmp
jae
fmul
sbb
sti
loope
mov
xchg
sbb
(bad)
jp
dec
inc
push
popf
cmp
(bad)
fisubr
push
test
mov
jg
push
data16
test
and
adc
jno
lea
xchg
(bad)
sar
ins
fs
in
in
test
sub
xchg
call
cmp
mov
(bad)
imul
push
push
rol
lock
jp
(bad)
iret
inc
aaa
and
cmp
retf
movs
inc
fistp
xchg
sbb
fisttp
in
cs
mov
xchg
cmp
(bad)
out
inc
in
jmp
adc
aas
pop
adc
out
adc
sbb
jmp
outs
fsubr
pop
clc
sbb
cmp
lahf
(bad)
int3
rcl
pop
adc
pop
pop
push
in
pop
push
push
and
and
dec
sahf
ins
into
lahf
pop
adc
shr
(bad)
(bad)
idiv
adc
mov
ja
jg
(bad)
cwde
adc
movs
adc
cli
push
or
out
jo
(bad)
xlat
push
prefetcht1
(bad)
sti
mov
lahf
push
loope
test
ds
xor
outs
ret
fsubr
les
sub
inc
std
rcl
push
jae
adc
sbb
mov
adc
inc
pop
mov
mov
addr16
xchg
stos
sub
loopne
retf
or
jl
jne
fcom
adc
sbb
adc
mov
push
cmps
fs
stc
and
(bad)
jo
fisttp
dec
add
cld
in
add
jmp
jmp
sub
add
jmp
push
jnp
add
fmul
int
loopne
je
pop
pop
test
xor
jmp
xchg
pop
ret
out
fcom
or
mov
std
pop
inc
push
lock
push
xchg
(bad)
jnp
pop
and
push
pusha
stc
sub
xchg
adc
lea
add
jns
sub
add
xor
js
adc
pop
mov
arpl
push
push
push
adc
cmps
rcl
push
and
aas
jo
jg
pop
aaa
add
daa
xor
(bad)
lahf
(bad)
jb
fcmovb
or
mov
xor
cmps
dec
loop
cmp
mov
sbb
xor
fs
mov
call
push
mov
mov
xchg
neg
jecxz
out
jns
in
pop
je
int
stc
aas
cmp
mov
or
jp
cmp
js
mov
std
and
pop
lea
mov
ins
shl
jnp
test
bnd
xchg
adc
jae
xlat
adc
popa
daa
retf
pop
pop
sbb
jno
es
xlat
mov
jmp
and
call
sub
add
cs
mov
xlat
cmp
test
test
add
lahf
out
popa
sahf
or
xlat
push
scas
mov
sub
sar
xchg
fs
int
hlt
out
(bad)
test
jb
sbb
jbe
and
xchg
cs
jg
les
int3
sahf
xor
push
inc
hlt
out
push
mov
scas
fcmovnb
int3
repnz
xor
push
pop
mul
fst
mov
add
popa
push
test
xchg
adc
les
mov
or
mov
test
nop
in
cmp
rcr
mov
pop
pop
xor
mul
int
jge
dec
xor
inc
jno
xchg
pop
(bad)
test
pushf
jbe
mov
push
(bad)
loop
pusha
cwde
in
inc
mul
fcom
xchg
stc
in
mov
xchg
mov
mov
pushf
or
cmps
pop
jg
dec
ins
call
popa
into
jmp
mov
mov
cmps
pop
cmp
push
inc
ins
xor
mov
jno
std
cmp
cmp
push
fmul
(bad)
pushf
add
add
sbb
aad
(bad)
fidiv
jmp
cmp
mov
outs
sub
repz
popa
jecxz
fst
mov
sub
and
loop
ret
xchg
out
repnz
cmc
pusha
jge
aad
cmp
sbb
sbb
or
in
rol
cmc
jle
ins
out
xor
jecxz
shl
dec
adc
loope
jnp
clc
mov
inc
cdq
cmp
jae
into
jg
adc
xchg
fptan
cmps
(bad)
(bad)
cmp
pop
in
push
mov
(bad)
pop
xor
les
jmp
lahf
fimul
fld
push
mov
mov
mov
mov
cli
cld
pop
mov
mov
int3
push
jl
xor
sbb
scas
pop
hlt
xchg
ins
add
cmp
mov
mov
fmul
(bad)
lods
xor
pop
jno
xchg
aas
pop
fs
xchg
sbb
mov
popa
pusha
inc
mov
xchg
mov
retf
js
sub
ins
shl
mov
xchg
ret
push
mov
mov
cmc
and
xor
(bad)
icebp
jne
xchg
ins
add
sbb
lahf
jmp
mov
into
in
daa
sub
jnp
adc
arpl
neg
mov
shl
aaa
and
stc
sub
xchg
jl
inc
iret
ins
icebp
das
out
mov
cmp
cwde
push
sbb
enter
xchg
retf
sahf
pop
mov
aad
pusha
mov
fadd
dec
sub
gs
arpl
pusha
in
and
fdiv
ss
push
jl
test
mov
movs
ja
test
sbb
add
xchg
pop
call
iret
xor
jp
mov
inc
scas
mov
xor
xor
jge
lock
arpl
scas
or
retf
(bad)
mov
outs
inc
nop
std
or
mov
and
fcmove
or
hlt
cmps
mov
adc
push
out
xchg
test
jmp
cmp
popf
ss
fnstsw
push
inc
sahf
cmp
(bad)
mov
mov
repnz
xchg
hlt
scas
ss
xchg
clc
mov
stc
ret
js
adc
call
pop
in
lods
outs
dec
pop
div
jnp
(bad)
(bad)
clc
test
out
stc
mov
mov
lods
shr
(bad)
adc
jno
xor
scas
repnz
arpl
les
mov
xor
or
(bad)
(bad)
pop
cmp
jmp
mov
mov
dec
outs
cmp
data16
in
dec
dec
lods
xchg
js
sub
aad
jmp
xchg
cmp
mov
bound
or
cmp
les
mov
js
lds
pushf
rcr
dec
xchg
mov
xor
xor
jle
mov
sbb
dec
add
clc
inc
sub
or
cmps
jo
and
or
test
imul
or
into
rol
mov
sbb
dec
add
retf
dec
loope
pop
sbb
sbb
add
adc
pushf
movs
add
push
cmp
push
test
in
inc
lds
pushf
mov
mov
and
mov
push
xor
fdivrp
add
int3
jmp
add
add
dec
inc
scas
inc
pusha
or
adc
add
xor
add
sub
add
jle
add
add
sub
and
add
add
add
pop
add
or
add
or
add
or
pop
sbb
add
sbb
add
add
xor
add
add
add
sbb
add
push
add
sub
push
sub
or
add
sbb
add
sub
add
or
sub
add
push
add
mov
add
sub
pop
add
push
outs
mov
add
sub
sub
push
outs
mov
add
sub
xor
add
add
add
adc
add
add
inc
jle
add
add
pop
sub
pop
adc
sub
pop
add
add
sbb
pop
add
push
adc
push
push
add
push
jae
add
or
add
or
sbb
add
or
sub
pop
sub
jle
add
add
add
add
add
add
adc
or
add
add
xor
add
add
add
add
adc
push
add
push
sub
add
xor
add
add
add
add
add
add
add
sub
add
or
add
sub
add
push
add
add
or
add
add
adc
add
add
add
add
add
add
xchg
add
sub
add
add
outs
add
pop
outs
push
add
or
pop
outs
pop
add
or
push
outs
or
add
sub
add
inc
add
or
add
outs
or
add
outs
or
add
sub
add
add
sldt
or
into
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
adc
add
xor
add
add
add
add
adc
add
add
push
add
or
add
xor
add
add
add
add
adc
add
add
pop
add
or
add
xor
add
add
add
add
jle
add
add
sbb
add
sub
adc
add
or
add
add
add
sbb
add
sub
adc
add
sbb
add
push
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
adc
add
sbb
add
pop
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
add
add
jb
add
jo
sbb
add
jl
add
add
add
add
sub
add
add
add
add
add
jb
add
jo
sbb
add
jl
add
add
add
add
sub
add
xor
loop
add
or
add
add
adc
add
push
add
add
outs
push
add
or
les
add
jle
add
add
sub
or
add
add
add
sub
add
or
add
or
jb
add
jo
lea
add
sub
add
or
add
or
and
add
or
add
or
add
add
add
sub
add
or
and
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
add
or
daa
add
or
add
or
add
or
or
add
or
add
or
or
add
add
add
sub
add
or
add
or
sub
add
push
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
or
add
add
push
add
add
outs
sub
add
add
add
adc
push
add
push
add
sub
adc
add
or
add
adc
add
add
or
das
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
rol
pop
add
or
add
xor
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
or
das
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
push
add
add
pop
add
or
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
sub
adc
add
sbb
add
adc
add
jle
add
or
or
push
add
sub
jle
add
or
push
add
sub
into
add
aaa
add
or
add
add
jae
add
or
cmp
add
add
and
add
jae
add
or
cmp
add
add
add
push
sub
xor
add
add
add
add
add
sub
add
add
add
or
jnp
add
add
cmp
add
fimul
add
sub
add
or
sub
add
add
add
add
add
sbb
add
add
add
adc
push
add
add
adc
jae
add
or
add
add
or
add
sub
add
or
add
or
add
jnp
add
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
inc
add
or
outs
inc
add
or
outs
and
add
and
add
or
outs
and
add
pop
outs
inc
add
or
outs
and
add
sub
add
outs
dec
add
or
outs
and
add
adc
pop
pop
sbb
dec
add
or
outs
dec
add
or
outs
and
add
jb
add
jo
dec
add
or
outs
and
add
adc
add
adc
or
outs
and
add
adc
pop
adc
adc
dec
add
or
pop
outs
push
add
or
outs
and
add
push
outs
push
add
or
outs
and
add
pop
outs
push
add
or
outs
and
add
push
outs
push
add
or
outs
add
push
pop
outs
inc
add
or
outs
add
push
sub
add
outs
dec
add
or
outs
add
push
adc
and
add
add
dec
add
or
outs
dec
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
add
adc
or
outs
add
push
adc
pop
adc
adc
dec
add
or
pop
outs
push
add
or
outs
add
push
sbb
add
or
outs
add
push
pop
outs
push
add
or
outs
add
push
push
outs
push
add
or
outs
sub
add
jb
add
jo
add
fs
push
sbb
jae
add
or
add
or
outs
sub
add
adc
and
add
add
rol
add
sub
add
or
add
or
outs
sub
add
pop
outs
push
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
and
add
add
push
sub
add
adc
outs
push
add
or
outs
sub
add
sbb
add
or
outs
sub
add
sub
add
outs
dec
add
or
outs
sub
add
push
jb
add
jo
pop
add
or
add
outs
pop
add
or
outs
sub
add
outs
pop
add
or
outs
pop
add
or
outs
sub
add
pop
outs
pop
add
or
outs
sub
add
adc
and
add
add
dec
add
or
outs
dec
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
and
sub
or
pop
outs
push
add
or
outs
sub
add
sbb
add
or
outs
sub
add
push
outs
push
add
or
outs
sub
add
adc
pop
and
add
dec
add
or
outs
dec
add
or
outs
sub
add
jb
add
jo
dec
add
or
outs
sub
add
adc
pop
xor
pop
sub
add
adc
outs
push
add
or
outs
sub
add
pop
or
add
or
outs
sub
add
push
outs
pop
add
or
outs
add
push
pop
outs
pop
add
or
outs
add
push
sub
add
outs
pop
add
or
outs
add
push
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
add
push
sub
add
outs
popa
add
or
outs
add
push
adc
and
cmp
add
sub
add
or
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
add
push
pop
or
add
or
outs
add
push
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
sub
add
outs
pop
add
or
outs
xor
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
xor
add
sub
add
outs
popa
add
or
outs
xor
add
adc
and
cmp
add
sub
add
or
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
xor
add
pop
or
add
or
outs
xor
add
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
sub
add
outs
pop
add
or
outs
xor
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
xor
add
sub
add
outs
popa
add
or
outs
xor
add
adc
and
cmp
add
sub
add
or
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
xor
add
pop
or
push
add
or
outs
xor
add
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
sub
add
outs
pop
add
or
outs
xor
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
xor
add
sub
add
outs
popa
add
or
outs
xor
add
adc
and
cmp
add
sub
add
or
add
or
outs
xor
add
jb
add
jo
dec
add
or
outs
xor
add
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
xor
add
pop
adc
add
or
outs
xor
add
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
add
push
pop
outs
pop
add
or
outs
add
push
sub
add
outs
pop
add
or
outs
add
push
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
add
push
sub
add
outs
popa
add
or
outs
add
push
adc
and
cmp
add
sub
add
or
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
add
push
pop
adc
add
or
outs
add
push
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
sub
add
outs
pop
add
or
outs
cmp
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
cmp
add
sub
add
outs
popa
add
or
outs
cmp
add
adc
and
cmp
add
sub
add
or
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
cmp
add
pop
adc
add
or
outs
cmp
add
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
sub
add
outs
pop
add
or
outs
cmp
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
cmp
add
sub
add
outs
popa
add
or
outs
cmp
add
adc
and
cmp
add
sub
add
or
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
cmp
add
pop
adc
add
or
outs
cmp
add
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
cmp
add
pop
outs
pop
add
or
outs
cmp
add
sub
add
outs
pop
add
or
outs
cmp
add
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
cmp
add
sub
add
outs
popa
add
or
outs
cmp
add
adc
and
cmp
add
sub
add
or
add
or
outs
cmp
add
jb
add
jo
dec
add
or
outs
cmp
add
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
cmp
add
pop
adc
add
or
outs
cmp
add
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
add
push
pop
outs
pop
add
or
outs
add
push
sub
add
outs
pop
add
or
outs
add
push
jb
add
jo
add
jl
push
sbb
jae
add
or
add
or
outs
add
push
sub
add
outs
popa
add
or
outs
add
push
adc
and
cmp
add
sub
add
or
add
or
outs
add
push
jb
add
jo
dec
add
or
outs
add
push
adc
pop
inc
pop
sbb
dec
add
or
pop
outs
push
add
or
outs
add
push
pop
adc
push
add
or
outs
add
push
jb
add
jo
bound
add
add
add
push
push
outs
pop
add
or
outs
inc
add
push
sub
add
outs
pop
add
or
outs
inc
add
push
outs
arpl
add
add
add
push
outs
add
or
outs
inc
add
push
outs
arpl
add
add
add
push
outs
add
or
outs
inc
add
push
outs
arpl
add
add
add
push
outs
add
or
outs
inc
add
push
adc
pop
push
and
add
sub
add
or
add
or
outs
inc
add
push
jb
add
jo
dec
add
or
outs
inc
add
push
adc
and
add
pop
sub
or
pop
outs
push
add
or
outs
inc
add
push
pop
pop
outs
push
add
or
outs
inc
add
push
pop
outs
inc
add
or
outs
inc
add
push
sub
add
outs
dec
add
or
outs
inc
add
push
adc
and
sub
add
or
add
or
outs
inc
add
push
jb
add
jo
dec
add
or
outs
inc
add
push
adc
add
adc
or
outs
inc
add
push
adc
pop
adc
adc
dec
add
or
pop
outs
push
add
or
outs
inc
add
push
sbb
add
or
outs
inc
add
push
pop
outs
push
add
or
outs
inc
add
push
push
outs
push
add
or
adc
and
add
inc
and
add
sub
add
adc
outs
data16
or
pop
outs
add
or
push
jb
add
jo
pop
add
or
add
outs
pop
add
or
adc
and
add
add
pop
add
add
dec
add
or
pop
outs
push
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
outs
arpl
add
add
add
push
outs
add
or
jb
add
jo
dec
add
or
push
outs
imul
outs
push
add
add
add
push
push
outs
imul
or
outs
inc
add
push
outs
ins
add
or
push
outs
imul
or
outs
ins
add
or
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
ins
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
outs
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
outs
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
jo
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jno
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
jb
add
sub
add
xor
add
add
add
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
jae
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
je
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
add
add
push
outs
jne
add
sub
add
adc
add
nop
add
add
add
add
outs
sub
add
pop
outs
jbe
add
add
add
push
outs
ja
add
jb
add
jo
sub
add
push
xor
add
add
push
outs
jns
add
jb
add
jo
jp
add
add
add
push
outs
jnp
add
add
add
push
outs
jnp
add
pusha
add
add
push
outs
jnp
add
pusha
cmp
add
add
outs
sub
add
outs
jl
add
sbb
sbb
outs
add
push
pop
outs
pop
add
or
outs
add
push
jb
add
jo
bound
add
add
add
push
outs
jl
add
pop
or
sub
outs
add
push
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
jb
add
jo
bound
add
add
add
push
outs
jl
add
pop
rdpmc
sub
outs
xor
add
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
jb
add
jo
bound
add
add
add
push
outs
jl
add
pop
adc
sub
outs
xor
add
push
outs
pop
add
or
outs
xor
add
pop
outs
pop
add
or
outs
xor
add
jb
add
jo
bound
add
add
add
push
outs
jl
add
pop
sub
dec
add
add
push
outs
jns
add
add
add
push
push
outs
pop
add
or
add
jo
push
add
jo
pop
adc
jge
add
sub
add
add
push
outs
jns
add
jb
add
jo
jp
add
add
add
push
push
outs
jle
add
sub
sub
add
xor
add
add
add
add
adc
add
jo
jg
add
or
outs
add
or
outs
add
pop
or
adc
or
sub
add
or
add
sub
add
adc
add
add
add
push
add
sub
add
push
sub
add
sub
add
add
sub
add
jp
add
sub
add
add
push
outs
jne
add
sub
add
sub
add
sub
add
add
aaa
add
or
outs
push
add
push
sub
add
xor
add
add
add
add
add
sub
add
add
add
or
jnp
add
add
cmp
add
fimul
add
sub
add
or
sub
add
add
add
add
add
sbb
add
add
add
adc
add
bound
add
xor
add
add
add
or
adc
and
add
inc
and
add
sub
add
pop
outs
data16
or
pop
outs
add
or
adc
and
add
add
add
add
or
outs
push
jb
add
add
or
pop
outs
push
add
add
add
add
or
push
outs
imul
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
clc
adc
add
add
and
jb
outs
addr16
add
add
add
test
push
add
sub
add
and
dec
inc
add
add
sub
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
mov
imul
add
add
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
call
push
xchg
add
add
pop
out
push
add
or
or
add
add
add
add
add
or
mov
add
adc
jecxz
mov
mov
adc
push
add
inc
or
add
xchg
add
add
inc
or
add
or
or
add
add
or
or
add
xchg
add
add
or
add
call
or
or
or
or
or
or
or
add
add
mov
addr16
add
add
or
add
add
or
or
add
or
and
xchg
add
add
or
inc
or
outs
or
je
pop
or
call
or
xchg
lea
mov
call
push
pop
or
pop
or
pop
or
pop
or
call
push
call
sldt
push
add
call
psubsb
push
add
add
fwait
or
add
add
add
adc
add
add
adc
add
add
adc
adc
add
adc
adc
add
adc
adc
push
add
inc
or
add
add
add
adc
adc
adc
add
adc
push
add
adc
dec
add
adc
add
add
adc
push
add
adc
push
add
cmp
push
add
or
add
add
add
add
adc
or
add
adc
or
add
adc
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
in
aaa
add
add
add
add
add
add
xor
mov
add
add
add
add
add
add
adc
push
add
xor
inc
add
push
add
add
add
lods
add
add
add
add
add
add
add
cmc
add
add
cmc
add
add
add
add
add
add
add
cmp
add
xor
add
jns
xor
add
xchg
add
mov
xor
add
rol
icebp
add
clts
xor
add
sub
add
inc
add
add
cmc
add
add
or
adc
xor
add
lahf
add
add
add
or
add
add
jmp
dec
add
add
add
jmp
push
add
add
add
add
add
inc
add
sbb
add
je
add
add
push
sbb
add
add
add
add
sbb
add
add
or
add
jmp
int
add
add
jmp
test
add
add
jmp
adc
dec
add
add
jmp
add
add
or
add
add
sub
add
add
push
or
add
add
add
or
jo
add
add
push
or
cwde
jmp
add
add
or
add
jmp
add
add
add
add
add
add
add
or
add
in
add
add
push
sbb
add
add
in
add
add
inc
add
mov
push
add
in
add
add
inc
add
mov
pop
add
add
add
in
add
add
inc
add
add
add
add
add
inc
add
mov
pop
add
add
add
arpl
mov
or
mov
add
add
add
add
in
add
add
inc
add
add
add
adc
aad
pushf
add
add
in
add
add
add
or
add
in
add
add
push
sbb
add
add
in
add
add
add
test
iret
add
add
add
add
push
sbb
add
add
add
add
push
sbb
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
or
add
add
add
and
add
add
sti
add
add
inc
or
stc
add
aam
add
and
inc
or
inc
or
loopne
add
add
inc
or
add
sti
add
and
inc
or
add
add
add
inc
or
add
add
add
mov
add
add
inc
or
add
add
add
inc
or
add
add
add
std
add
add
inc
or
add
inc
or
add
and
add
add
inc
or
xor
std
add
and
inc
or
cmp
adc
inc
std
add
add
inc
or
xor
std
add
and
inc
or
cmp
adc
pusha
std
add
add
inc
or
add
add
add
mov
cmp
add
add
lahf
add
xchg
std
add
and
inc
or
add
add
mov
add
inc
or
add
sar
add
add
fild
aam
add
and
inc
or
add
loopne
add
add
inc
or
add
hlt
std
add
and
inc
or
cmp
pop
add
inc
add
add
pop
push
xor
inc
add
add
and
cmp
sbb
and
add
add
inc
or
add
add
and
inc
or
cmp
sbb
inc
inc
add
add
pop
push
inc
add
add
add
add
fs
dec
add
add
add
add
inc
or
stc
add
add
add
add
mov
inc
sbb
cmp
add
add
add
add
add
add
push
dec
add
add
add
add
add
int3
push
dec
add
add
add
add
add
add
push
push
add
add
add
add
push
dec
add
add
add
push
pop
dec
add
mov
add
add
add
and
dec
add
add
add
xor
dec
add
add
add
add
dec
add
add
call
adc
inc
or
jmp
adc
pop
or
jmp
adc
or
jmp
adc
mov
add
add
add
sbb
add
add
add
add
or
jmp
push
or
or
jmp
adc
add
mov
das
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
mov
add
add
add
add
and
add
add
popa
add
add
add
add
add
and
add
add
and
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
or
or
or
add
add
add
add
fld
or
xchg
fld
or
sahf
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
test
iret
add
test
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
add
or
add
adc
add
add
or
add
add
add
inc
or
add
add
cmc
add
mov
sbb
sbb
push
add
add
xchg
or
add
add
mov
sbb
arpl
mov
sbb
jl
mov
add
add
push
add
add
add
add
push
add
add
push
add
add
add
add
add
add
or
mov
sbb
sub
mov
fld
rol
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
or
fimul
push
add
or
cmc
or
push
add
add
add
or
push
add
push
cmp
add
push
adc
add
push
fld
leave
add
fld
rol
push
add
adc
fs
dec
add
add
fld
cdq
add
sbb
add
add
add
push
pusha
add
add
push
adc
add
push
data16
add
push
fld
jno
mov
add
or
or
sbb
add
nop
add
rcpps
adc
cmp
ins
add
add
or
mov
add
add
add
or
add
add
add
add
jle
paddusw
adc
fisttp
sbb
dec
add
sldt
add
sldt
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
add
sbb
imul
pop
add
mov
adc
add
add
add
add
add
adc
adc
add
add
adc
add
sbb
add
add
sbb
pop
add
add
push
add
imul
sbb
(bad)
adc
add
add
mov
push
add
push
jns
ret
push
cdq
add
add
add
adc
cdq
add
adc
add
push
mov
xor
imul
add
add
add
jb
mov
pop
adc
sub
and
push
add
push
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
arpl
adc
and
imul
add
add
add
cs
add
add
add
add
pop
cs
add
or
add
add
pop
cs
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
lock
push
add
add
jecxz
jbe
pusha
add
adc
arpl
pop
add
add
push
add
add
jecxz
imul
adc
add
add
add
add
add
add
add
add
add
add
add
adc
ret
add
add
loope
loopne
arpl
adc
jecxz
stos
add
add
add
loope
add
arpl
adc
add
fwait
add
add
add
add
add
add
adc
and
mov
adc
and
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
adc
inc
add
or
inc
add
add
add
add
add
add
adc
arpl
fild
adc
arpl
mov
adc
arpl
and
add
add
adc
mov
add
inc
add
adc
loope
sbb
add
adc
add
sbb
add
loope
and
arpl
adc
and
sbb
add
add
sbb
add
loope
popa
add
add
add
loope
add
mov
add
add
loope
rol
add
add
add
add
add
loope
loopne
arpl
adc
loope
sbb
add
loope
add
arpl
adc
add
sbb
add
adc
and
push
add
add
add
add
add
adc
inc
add
add
add
or
pusha
add
adc
popa
add
add
add
or
add
add
add
add
add
push
rol
add
add
add
loope
add
add
add
add
add
add
and
add
push
add
add
or
add
add
or
adc
cmp
aas
add
add
mov
mov
add
add
add
add
lsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
fiadd
lock
add
add
add
add
add
add
add
add
add
add
or
sbb
add
add
add
add
icebp
add
add
jno
add
jbe
jbe
add
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
pop
add
add
add
add
imul
outs
add
add
add
add
add
add
add
add
add
pop
jae
add
retf
pop
jae
add
rol
js
add
fld
pop
add
add
pop
xchg
add
add
call
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
inc
add
add
add
xor
add
inc
add
add
add
xor
add
add
add
aaa
add
add
cmp
add
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
call
add
add
add
xchg
add
add
add
add
or
pop
or
add
add
add
add
popa
adc
add
add
add
add
add
add
add
add
push
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
lods
add
add
add
jmp
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
inc
outs
jb
xor
push
imul
jo
ins
imul
xor
push
gs
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
dec
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
push
je
je
jae
imul
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
imul
add
arpl
add
inc
jb
popa
je
dec
popa
imul
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
inc
outs
jb
xor
addr16
push
je
je
jae
imul
pop
inc
outs
jb
xor
ins
pop
push
je
je
jae
imul
gs
inc
outs
jb
xor
push
popa
ins
jne
add
je
push
je
je
jae
imul
jb
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
inc
imul
imul
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
imul
inc
outs
ins
jo
outs
outs
je
push
imul
imul
gs
push
imul
gs
push
imul
imul
jae
popa
ins
jne
add
imul
outs
add
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
push
gs
inc
outs
js
pop
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
outs
outs
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
push
jb
addr16
jae
inc
popa
jb
pop
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
gs
add
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
pop
dec
popa
bound
xor
pop
dec
popa
bound
xor
bound
add
je
dec
popa
bound
add
je
dec
popa
bound
add
popa
bound
aaa
add
je
dec
popa
bound
aaa
add
je
dec
popa
bound
aaa
add
popa
bound
cmp
addr16
dec
popa
bound
cmp
jae
je
dec
popa
bound
cmp
pop
dec
popa
bound
cmp
addr16
dec
popa
bound
cmp
jae
je
dec
popa
bound
cmp
push
popa
outs
gs
add
popa
outs
gs
xor
addr16
push
popa
outs
gs
xor
jae
je
push
popa
outs
gs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
inc
jbe
outs
je
jb
jae
inc
jne
je
outs
xor
ins
imul
fs
add
gs
pop
push
imul
ins
xor
outs
popa
add
je
jb
gs
outs
outs
outs
arpl
outs
add
imul
outs
xor
push
fs
push
add
imul
outs
xor
push
fs
push
add
je
outs
outs
xor
ins
imul
gs
inc
outs
js
pop
push
gs
inc
push
add
jb
xor
outs
popa
fs
xor
push
imul
popa
imul
outs
xor
push
popa
imul
outs
xor
push
gs
inc
outs
js
add
je
outs
outs
xor
push
jb
addr16
jae
inc
popa
jb
add
gs
xor
dec
popa
bound
xor
dec
popa
bound
xor
dec
popa
bound
xor
dec
popa
bound
xor
gs
add
gs
aaa
add
gs
cmp
dec
popa
bound
cmp
push
popa
outs
gs
xor
push
popa
imul
outs
xor
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
ins
je
jb
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
je
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
outs
je
arpl
imul
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
push
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
je
dec
popa
imul
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
imul
ins
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
jb
ja
outs
add
ins
outs
jb
push
outs
imul
imul
add
jp
inc
add
outs
je
imul
jae
outs
fs
popa
jns
jne
add
je
dec
outs
je
jb
popa
ins
add
je
outs
outs
inc
popa
jae
add
je
inc
jne
outs
push
imul
pop
push
jb
outs
jae
popa
jb
outs
je
jae
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
popa
fs
pop
push
imul
pop
push
popa
bound
fs
jae
je
push
popa
bound
outs
jo
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
outs
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
jae
je
dec
jne
je
ins
imul
pop
inc
popa
jb
dec
jb
outs
add
je
bound
arpl
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
popa
je
jne
je
outs
inc
jo
gs
jb
outs
arpl
addr16
inc
ins
popa
je
jo
gs
jb
outs
arpl
jae
je
inc
outs
jb
gs
imul
je
je
ins
add
je
inc
ins
popa
je
je
ins
add
je
push
imul
addr16
inc
ins
popa
arpl
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
push
gs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
je
push
push
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
push
imul
pop
push
imul
outs
jbe
pop
inc
push
fs
push
add
fs
inc
push
fs
push
add
ins
outs
jbe
pop
push
gs
inc
push
add
fs
push
gs
inc
push
add
ins
outs
jbe
pop
inc
ins
imul
pop
inc
ins
imul
jb
add
arpl
ins
outs
je
addr16
push
gs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
jo
dec
gs
popa
addr16
outs
js
inc
imul
jae
ins
je
push
push
gs
inc
push
add
je
push
popa
ins
jne
add
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
je
inc
outs
popa
bound
add
jae
gs
cs
gs
push
bound
jno
gs
add
bound
jae
outs
outs
jae
add
gs
je
add
je
gs
outs
outs
jae
add
outs
jae
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
push
gs
imul
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jae
gs
cs
push
imul
imul
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
imul
ja
inc
jo
ins
imul
xor
push
gs
jne
arpl
cs
jae
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
push
je
je
jae
imul
gs
jne
arpl
add
outs
outs
ja
inc
jo
ins
imul
xor
inc
outs
jb
xor
jb
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
push
inc
dec
and
ins
ins
and
arpl
inc
push
inc
dec
and
ins
ins
and
arpl
gs
add
add
add
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
dec
add
ins
add
arpl
push
adc
add
je
inc
add
js
xor
add
inc
add
je
je
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
cmovb
jne
je
je
outs
add
xor
add
push
add
outs
add
jb
add
jae
inc
add
jb
xor
add
inc
add
popa
add
imul
add
outs
add
add
outs
add
add
arpl
and
dec
add
add
jne
ins
add
add
outs
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
bound
add
add
or
outs
add
ins
add
add
sbb
popa
add
add
inc
add
je
je
outs
add
xor
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
or
outs
add
ins
add
add
add
cmp
add
jae
add
outs
add
ins
add
and
push
add
jno
jne
imul
add
add
add
add
add
add
add
add
add
add
add
das
inc
add
outs
add
add
je
imul
and
je
outs
add
add
add
jbe
add
add
add
add
xor
je
popa
add
ins
add
jae
push
add
and
arpl
outs
add
outs
add
arpl
je
imul
add
add
add
inc
inc
add
outs
add
add
je
imul
and
je
outs
add
add
jae
add
and
jb
outs
add
add
add
add
jbe
add
add
add
add
daa
inc
add
add
imul
add
add
add
arpl
arpl
outs
add
outs
add
add
add
add
add
add
add
add
jb
outs
add
imul
add
add
arpl
arpl
outs
add
outs
add
add
outs
add
ins
add
add
outs
add
add
add
add
outs
add
outs
add
add
outs
add
add
add
and
add
je
popa
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
and
popa
add
popa
add
outs
add
add
jae
imul
and
add
data16
add
add
je
and
popa
add
arpl
outs
add
outs
add
add
daa
inc
add
arpl
outs
add
outs
add
add
outs
add
add
outs
add
outs
add
add
add
cmp
add
add
add
je
imul
and
push
add
jno
jne
imul
add
add
add
add
add
add
add
add
add
add
add
sub
je
jo
cmp
das
add
add
ja
ja
add
outs
add
add
add
add
outs
add
das
add
inc
and
and
dec
add
je
add
outs
add
je
and
inc
add
outs
add
add
je
imul
and
push
add
jno
jne
imul
add
add
add
add
add
cmp
imul
outs
add
jae
inc
add
jo
ins
add
arpl
popa
add
add
outs
add
add
add
add
outs
add
jb
arpl
add
add
push
add
add
add
push
add
outs
add
add
add
add
inc
mov
cmp
xchg
(bad)
pop
gs
and
or
xor
mov
mov
pop
jg
aad
cmp
push
add
add
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
and
add
xor
push
adc
add
adc
add
and
xor
push
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
and
add
xor
adc
add
add
add
push
adc
add
add
add
add
add
push
adc
add
adc
and
adc
add
add
sub
sub
push
adc
sub
adc
add
add
xor
xor
push
adc
xor
adc
add
add
cmp
cmp
push
adc
cmp
adc
sbb
inc
add
add
add
add
and
sub
add
sub
xor
add
xor
cmp
add
cmp
add
adc
add
adc
add
adc
add
add
dec
add
add
inc
add
add
dec
add
adc
add
add
push
sbb
add
add
inc
add
add
sub
add
sub
add
add
add
add
push
add
push
add
pop
add
adc
adc
add
add
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
add
add
add
add
add
add
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
dec
jns
push
jae
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
push
bound
jb
imul
add
or
cs
outs
jb
jae
add
add
and
add
and
add
xor
add
xor
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
and
movs
pop
and
add
adc
add
pop
add
add
adc
pop
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
sbb
and
add
add
and
add
sbb
adc
add
add
or
int
and
add
or
and
add
or
and
add
adc
and
add
adc
and
add
sbb
and
sub
xor
push
and
add
sub
and
sbb
push
and
add
xor
and
adc
add
cmp
and
adc
add
or
or
and
add
sbb
and
add
or
adc
adc
adc
adc
adc
adc
add
add
and
add
pop
add
sub
add
sub
xor
add
xor
cmp
add
cmp
push
push
add
add
adc
add
sbb
sbb
add
adc
add
sub
adc
adc
push
dec
popa
bound
xor
add
add
or
jb
addr16
jae
inc
popa
jb
add
or
add
inc
jne
je
outs
xor
add
gs
inc
outs
js
add
adc
add
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
push
push
imul
adc
add
popa
imul
outs
xor
add
add
push
push
popa
outs
gs
xor
add
add
push
dec
popa
bound
cmp
add
add
push
dec
popa
bound
cmp
add
add
push
dec
popa
bound
aaa
add
or
add
dec
popa
bound
add
or
add
dec
popa
bound
xor
add
dec
popa
bound
xor
add
add
push
dec
popa
bound
xor
add
add
push
dec
popa
bound
xor
add
sbb
and
adc
add
adc
adc
inc
add
add
dec
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
sbb
add
add
add
and
add
or
sbb
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
sub
add
or
cs
gs
imul
pop
add
sbb
sbb
sbb
sbb
and
add
adc
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
pop
xor
xor
xor
xor
add
add
and
xor
arpl
bound
sub
sub
sub
cmp
arpl
aaa
xor
arpl
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
sbb
add
push
imul
jo
ins
imul
xor
add
add
or
arpl
jae
data16
add
add
mov
add
add
add
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
