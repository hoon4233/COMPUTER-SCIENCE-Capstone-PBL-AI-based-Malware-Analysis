mov
sbb
icebp
adc
cld
xor
mov
jno
sbb
xor
in
mov
arpl
sahf
stc
adc
retf
xor
lods
jne
jno
add
xor
pop
adc
popf
mov
push
xchg
inc
retf
xchg
xor
das
shl
retf
mov
js
ss
xchg
rol
inc
push
cmp
pop
adc
jns
add
test
pop
data16
pop
pop
jg
pop
into
add
mov
xor
xor
aad
loopne
mov
stc
mov
or
mov
push
mov
test
adc
push
pop
adc
mov
int
push
lods
mov
in
push
mov
jbe
sahf
into
cmp
outs
mov
mov
adc
retf
mov
call
sar
mov
xlat
adc
mov
aaa
jmp
or
xor
sub
jmp
cwde
or
push
mov
ja
out
mov
pop
pushf
add
push
mov
popa
rcl
loopne
xlat
dec
mov
pushf
popa
xchg
dec
push
std
xchg
retf
ds
pop
cwde
(bad)
and
mov
sbb
mov
retf
mov
daa
sbb
mov
mov
inc
xor
jg
data16
inc
retf
jns
ss
push
ss
push
mov
adc
mov
sub
xor
push
adc
xlat
cmp
pop
xchg
jns
push
aad
xor
adc
xor
movs
jmp
in
push
mov
xor
imul
ds
pop
lods
mov
push
dec
xor
add
or
push
pop
adc
sbb
in
push
mov
ins
in
mov
push
std
adc
xor
ss
mov
adc
xor
or
push
mov
or
cmp
js
mov
icebp
pop
jg
pop
pop
jge
test
adc
mov
xor
pop
jmp
imul
mov
jns
or
inc
pop
adc
je
adc
in
fst
outs
mov
xchg
pop
adc
call
jns
adc
mov
lea
inc
int3
mov
fxam
push
retf
mov
jg
pop
pop
jg
pop
pop
jge
xor
int3
push
mov
xor
jle
mov
(bad)
jmp
mov
sub
mov
mov
xlat
xor
mov
pop
mov
xchg
cld
retf
xchg
push
call
mov
retf
and
pop
pop
jge
xchg
push
adc
push
retf
mov
adc
or
adc
jge
mov
ds
lods
push
ins
pop
adc
push
xchg
mov
iret
imul
loop
pop
fdivr
aad
in
or
fisubr
test
cwde
clc
int
cwde
clc
leave
or
mov
xor
ss
enter
les
fwait
pop
fwait
xor
pop
and
fisub
enter
test
xor
sub
push
repnz
jmp
pop
sbb
inc
pop
and
fimul
ror
pusha
mov
xor
pop
dec
mov
push
fdivr
aad
fst
jmp
and
xor
sbb
xor
rcl
gs
mov
retf
inc
inc
push
std
jmp
repz
jecxz
xor
push
add
add
inc
jg
retf
inc
inc
mov
adc
inc
fld
mov
xor
push
cmp
std
ficom
inc
ret
clc
rcl
loop
xchg
(bad)
call
and
sub
jp
movs
jecxz
stos
dec
sahf
clc
int
xlat
mov
aad
inc
retf
or
xchg
fadd
pop
xchg
fmul
pop
(bad)
rol
sahf
clc
int
xlat
mov
retf
or
and
ficomp
sahf
clc
leave
pop
in
ss
push
sbb
xor
add
bound
(bad)
(bad)
inc
jne
sub
sub
clc
and
pop
sahf
clc
leave
mov
add
ret
xor
lods
pushf
clc
int
pushf
dec
mov
jmp
movs
sub
inc
lock
popf
xchg
jne
sbb
xor
jmp
inc
retf
inc
xor
xchg
(bad)
call
xor
sub
ss
push
sahf
loopne
fwait
nop
inc
retf
mov
push
inc
retf
xchg
not
add
jmp
xlat
push
mov
popf
xchg
jne
sbb
xor
arpl
mov
loop
daa
aad
xchg
(bad)
mov
dec
das
xor
retf
test
and
ss
jmp
mov
jmp
mov
jmp
mov
in
mov
adc
retf
xor
add
cld
lahf
inc
xor
(bad)
test
push
stc
sub
cmp
lds
leave
aad
inc
mov
mov
push
add
pop
out
ja
fs
dec
fistp
or
sahf
xchg
jg
aam
mov
retf
shl
push
mov
pop
or
xor
test
clc
lds
stc
xor
mov
(bad)
call
data16
push
outs
ds
jp
push
inc
mov
or
mov
mov
push
cli
sub
pop
out
ja
fs
dec
fistp
or
sahf
xchg
jg
aam
mov
retf
shl
int3
mov
aad
inc
mov
sub
mov
pop
or
je
or
mov
dec
sar
leave
fsubr
dec
jbe
push
inc
mov
or
inc
xor
mov
push
sub
push
mov
loop
test
sbb
in
adc
gs
fnstsw
loopne
adc
jecxz
xchg
(bad)
call
data16
inc
push
stos
imul
ins
in
xor
mov
adc
jecxz
push
adc
inc
retf
inc
mov
xor
pop
ja
inc
push
push
mov
dec
inc
jbe
inc
push
(bad)
mov
xor
aad
dec
rcl
push
inc
mov
xchg
(bad)
call
data16
push
or
mov
mov
rol
push
std
xchg
inc
pop
adc
xlat
xor
pop
inc
jmp
sub
push
(bad)
das
adc
mov
jo
pushf
jp
pop
es
outs
xchg
(bad)
call
arpl
sahf
enter
mov
push
adc
push
ja
adc
push
ja
inc
ss
sbb
inc
inc
pop
sahf
movs
retf
xor
inc
mov
movs
loop
mov
mov
int
pop
dec
jecxz
xchg
(bad)
call
sub
inc
jmp
cmps
pushf
mov
fwait
xchg
fwait
xor
ss
mov
pop
dec
hlt
push
pop
pushf
jle
movs
adc
mov
xchg
and
aad
push
cmp
pusha
jmp
xor
pop
ja
jg
pop
pop
cwde
clc
lds
xor
ins
aad
out
push
mov
sbb
mov
sub
xor
(bad)
mov
ja
sahf
mov
retf
mov
neg
cli
cmc
jle
adc
mov
pushf
pushf
clc
rcl
enter
std
ficom
inc
xor
pushf
jp
mov
inc
retf
mov
add
cld
lahf
inc
xor
in
mov
inc
pop
adc
xor
cmp
(bad)
rol
adc
lds
and
push
fcomp
mov
cmp
ins
or
xchg
jle
inc
adc
push
ja
adc
push
ja
inc
ss
mov
in
xor
call
xor
pop
cwde
cmp
mov
pusha
mov
ret
xor
mov
hlt
inc
retf
mov
jmp
mov
xchg
cwde
test
mov
mov
rcl
scas
add
xor
or
clc
cmp
xlat
sub
clc
leave
fild
xor
pop
adc
mov
jne
mov
xor
push
adc
leave
sbb
int
(bad)
aad
gs
xor
mov
adc
mov
inc
pop
xchg
cwde
dec
call
imul
int
(bad)
mov
xor
pop
dec
xor
ins
int
idiv
sar
aad
adc
clc
(bad)
imul
lds
enter
lods
mov
pop
adc
mov
and
jmp
push
inc
mov
fxch
inc
retf
mov
jmp
and
mov
in
mov
pop
adc
inc
cmp
pusha
mov
cwde
cmp
mov
mov
ja
inc
ss
pop
adc
jge
dec
sar
retf
mov
mov
jmp
fnstsw
mov
xchg
push
adc
and
ins
jmp
sbb
test
sbb
sbb
jmp
pop
adc
mov
loope
jmp
mov
xchg
(bad)
call
and
xchg
pop
mov
(bad)
dec
dec
pop
adc
cmp
jle
mov
xor
pusha
and
mov
inc
dec
sar
leave
pop
adc
xor
stos
repnz
movs
pushf
jp
and
dec
sbb
pop
ds
pusha
loopne
sbb
add
sub
ds
mov
cwde
stc
ss
inc
aad
(bad)
push
mov
xor
movs
loop
mov
call
fnsave
loop
retf
leave
xor
jo
xor
sub
popa
cld
push
mov
xor
pop
in
xor
fbstp
xor
stos
repnz
movs
pushf
jp
inc
sbb
inc
pop
sub
inc
pop
(bad)
scas
mov
ins
sub
pop
xchg
fmul
pop
pushf
inc
add
pushf
jp
xlat
push
mov
pusha
and
inc
retf
fmul
pop
xchg
ror
popa
mov
sub
mov
xor
into
add
xor
ss
std
pop
pop
mov
xor
pop
pushf
clc
int
pop
xlat
xor
push
mov
mov
sbb
xor
jg
mov
mov
in
push
dec
xor
clc
ror
pop
lods
cmc
push
ss
xor
aad
dec
mov
mov
js
xor
lahf
inc
xor
in
mov
pop
pop
adc
fimul
add
ret
cmp
lahf
xchg
jle
push
adc
inc
retf
mov
push
mov
xor
mov
jmp
mov
sbb
jmp
gs
jb
mov
xor
mov
adc
mov
mov
rol
mov
jmp
shl
lea
adc
mov
jmp
mov
mov
xchg
push
adc
jmp
pusha
pop
mov
fnstcw
jle
fxch
inc
retf
mov
push
mov
retf
mov
add
mov
push
nop
mov
hlt
inc
mov
retf
in
xchg
shl
retf
xor
mov
pop
mov
pop
jge
xchg
sbb
jmp
mov
sar
mov
mov
jmp
xchg
or
xchg
in
aad
xor
or
and
fs
pushf
sbb
lea
mov
retf
mov
xor
mov
xchg
and
pop
adc
pop
ja
cwde
cmp
mov
mov
retf
jns
aad
fstp
xchg
jle
adc
jmp
sbb
mov
adc
mov
mov
jmp
mov
jge
xchg
sbb
adc
mov
fnstenv
mov
xor
mov
sub
sbb
(bad)
mov
in
adc
push
gs
push
mov
retf
mov
mov
xor
xor
fistp
pop
cwde
add
mov
sbb
mov
jmp
fnstcw
mov
pop
popf
cmc
push
pop
std
push
shl
inc
retf
leave
adc
adc
mov
inc
retf
mov
jmp
mov
sar
popf
mov
adc
adc
push
adc
mov
retf
mov
mov
xor
xor
lods
pop
ja
cwde
add
mov
pushf
dec
retf
jns
popa
jmp
fnstcw
mov
pop
push
push
pop
std
fld
mov
sub
pop
adc
aad
mov
call
push
jb
jmp
mov
sar
popf
mov
adc
pop
mov
mov
jge
aad
adc
mov
retf
mov
mov
pop
jp
hlt
jmp
ss
mov
push
mov
xor
mov
jmp
fnstcw
mov
pop
and
push
pop
std
jno
mov
sub
pop
adc
aad
mov
call
push
call
or
adc
mov
xor
mov
loope
retf
mov
mov
pop
jp
hlt
jmp
fucom
icebp
ds
adc
inc
retf
stos
repz
or
adc
inc
retf
adc
fimul
mov
xor
inc
sbb
sbb
int
neg
jmp
fucom
stc
xor
mov
jmp
mov
sub
clc
leave
push
aad
mov
adc
retf
in
mov
mov
inc
popf
mov
pop
int
neg
push
js
pop
adc
inc
retf
dec
lahf
adc
mov
retf
mov
jmp
pop
adc
ret
xor
(bad)
jmp
cld
jmp
rcl
in
mov
mov
jmp
or
xor
stos
div
fsubr
inc
retf
xor
or
sub
mov
jmp
dec
sub
jo
sbb
cmp
sub
in
jmp
xlat
nop
imul
fs
sbb
xor
pop
int
neg
push
mov
mov
jmp
mov
sub
clc
leave
push
aad
mov
push
mov
push
pop
adc
push
retf
in
mov
mov
inc
test
adc
cmp
lahf
xchg
ror
sbb
cmc
pop
adc
inc
retf
mov
jmp
or
xor
mov
pushf
jle
and
mov
xor
cmp
inc
retf
mov
jmp
pop
cwde
cmp
mov
and
xor
fbstp
mov
xor
aaa
adc
clc
xor
mov
call
aad
mov
call
push
or
adc
xor
jne
xor
cmp
cmp
pop
sahf
cmp
mov
test
mov
jmp
shl
(bad)
mov
mov
adc
inc
retf
lods
mov
pop
adc
push
retf
jmp
push
inc
cmp
sbb
pop
pop
adc
inc
retf
mov
pop
mov
retf
in
pop
fdiv
push
mov
jmp
aad
inc
cmp
sbb
sbb
mov
xor
mov
nop
sbb
mov
jmp
pushf
sbb
retf
mov
retf
mov
adc
inc
pop
pop
adc
gs
sub
inc
retf
ss
jmp
mov
jmp
mov
add
mov
mov
mov
repnz
pop
adc
add
xlat
sub
sub
xor
(bad)
retf
mov
jmp
mov
mov
jmp
xor
mov
hlt
push
mov
jmp
aad
inc
cmp
sbb
and
mov
retf
mov
adc
xor
mov
jmp
fst
ss
sbb
xor
jne
xor
fild
xor
pop
adc
inc
retf
mov
adc
aad
mov
aad
xor
mov
mov
push
dec
scas
jmp
sbb
mov
mov
xor
mov
xchg
xor
lods
jmp
adc
hlt
jmp
mov
cmc
push
mov
jg
xor
shr
inc
retf
mov
xchg
xor
in
inc
retf
mov
adc
inc
enter
push
xlat
nop
inc
retf
xor
mov
adc
xlat
xor
nop
inc
retf
in
pop
add
push
mov
jl
xor
scas
ins
clc
xor
mov
adc
inc
retf
(bad)
retf
xor
stos
div
add
inc
retf
inc
mov
jmp
mov
jmp
mov
jmp
or
inc
retf
(bad)
retf
inc
mov
jmp
mov
jmp
mov
jmp
fld1
inc
retf
mov
adc
cmp
lahf
sahf
cmp
mov
and
add
mov
sbb
mov
jmp
or
inc
retf
mov
fld
inc
retf
mov
inc
mov
fxch
inc
retf
mov
inc
mov
fxch
inc
retf
mov
inc
mov
test
aad
jmp
xlat
and
call
fdivr
aad
xlat
retf
or
jge
and
pop
adc
xor
pop
adc
test
push
mov
clc
shl
daa
push
fnstsw
call
mov
jo
fstp
aaa
pop
adc
mov
inc
stos
jmp
pop
adc
jp
mov
(bad)
xchg
repnz
mov
jo
(bad)
ss
mov
clc
jmp
xlat
push
inc
mov
fwait
push
inc
retf
inc
push
dec
sub
sbb
fst
int
jg
pop
inc
xor
or
aaa
call
mov
xor
or
jg
pop
pop
jge
adc
push
pop
cmp
push
sar
adc
call
and
inc
ss
jecxz
xor
pop
in
repz
adc
mov
mov
call
xor
sbb
sbb
jp
mov
cld
xor
fwait
adc
lods
sbb
adc
mov
xor
lds
pushf
sbb
dec
pop
adc
mov
aaa
pop
adc
or
xchg
mov
ret
push
mov
xor
call
xchg
test
fcomip
mov
xor
sub
xor
adc
cld
xor
push
nop
xchg
aaa
pop
adc
cld
xor
mov
cld
xor
sbb
adc
lds
pushf
jnp
pop
pop
mov
stos
sbb
adc
or
jecxz
sub
sub
mov
mov
mov
retf
mov
je
add
mov
xor
mov
push
mov
cmc
mov
mov
jae
adc
and
push
cmp
or
leave
xor
push
aam
adc
fidiv
ret
push
mov
je
mov
xchg
sbb
jmp
pop
adc
xor
push
sbb
mov
call
xor
adc
sbb
adc
inc
ret
pop
or
leave
xor
push
mov
mov
mov
pop
xchg
mov
ret
push
mov
lods
sbb
adc
inc
retf
or
jmp
lods
adc
mov
ret
push
mov
xor
sbb
mov
xor
pop
loop
mov
fcomp
movs
stos
sbb
adc
and
jge
pop
adc
sti
pop
adc
cld
xor
sbb
push
mov
xchg
mov
cld
xor
sbb
adc
or
xchg
mov
aaa
mov
mov
sbb
pushf
jnp
pop
sub
push
mov
pushf
cld
jae
pop
adc
cld
xor
push
adc
aaa
xor
pop
sbb
xor
shl
mov
pop
jmp
popa
xchg
mov
or
das
inc
adc
aad
ja
xchg
mov
ret
push
mov
xor
mov
sbb
rcl
sub
lahf
retf
and
dec
add
pushf
jnp
push
or
push
cmp
push
fs
adc
cmc
xor
call
or
mov
cwde
adc
cld
mov
push
adc
xor
push
mov
mov
xor
jmp
aad
popf
clc
iret
push
mov
mov
mov
and
std
inc
pop
jmp
mov
push
cmps
sub
ds
push
and
pop
adc
cmp
popa
push
and
pop
pop
enter
inc
xor
cmps
adc
jns
adc
ficomp
xchg
ror
pusha
cdq
mov
or
xor
pop
in
repz
cld
mov
sbb
icebp
and
pop
xor
push
inc
mov
out
mov
into
pop
pusha
mov
jne
adc
fbstp
mov
sbb
mov
je
add
xor
lds
pop
sbb
movs
sbb
test
push
test
xor
pop
xor
movs
sbb
mov
je
add
xor
call
retf
sub
stos
sbb
test
xor
sub
xchg
in
call
sub
jne
dec
je
or
mov
popa
inc
and
fyl2xp1
xor
sbb
xor
mov
adc
mov
xor
out
mov
xor
push
adc
mov
xor
sbb
adc
clc
int
rcl
or
push
mov
xor
sbb
push
mov
xor
sbb
push
mov
xor
push
adc
call
inc
cmovae
mov
int
in
aad
inc
xor
mov
pop
ja
cwde
clc
popf
or
test
cld
push
mov
xor
pop
int
neg
jo
xor
sbb
jp
test
mov
mov
adc
mov
retf
or
xchg
fsub
pop
pushf
gs
pushf
jle
cmp
mov
xor
adc
pop
adc
and
inc
out
mov
xor
mov
or
lea
dec
mov
jo
pushf
jle
sbb
ds
in
xor
cwde
enter
mov
mov
pop
adc
pop
mov
adc
xor
rcl
gs
xlat
xor
adc
mov
adc
inc
inc
clc
cwde
clc
test
mov
xor
push
adc
sbb
pop
pop
jg
retf
push
dec
cmp
push
mov
jo
pushf
jle
sub
push
fiadd
adc
or
cwde
clc
fisttp
enter
pop
mov
adc
mov
xor
xchg
(bad)
call
adc
push
repnz
mov
jo
mov
mov
push
dec
mov
movs
xchg
fadd
pop
and
mov
mov
mov
mov
sbb
in
retf
xlat
xor
ss
ret
push
mov
xor
js
and
adc
xor
or
or
inc
mov
call
sbb
lods
stos
sbb
adc
clc
leave
aad
loop
lahf
inc
xor
(bad)
mov
or
inc
push
sahf
loopne
mov
adc
mov
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
pop
adc
xor
adc
and
test
xor
push
mov
push
xlat
mov
retf
adc
idiv
jmp
mov
cmps
xchg
push
aaa
push
mov
enter
fistp
or
dec
sub
inc
xor
sbb
fstp
inc
add
or
jle
cmp
adc
gs
loope
pop
sbb
pusha
mov
add
addr16
loope
pop
adc
jne
xlat
inc
lods
mov
cmps
xchg
push
xor
mov
xor
push
dec
mov
pop
adc
or
xor
pop
adc
xor
jmp
or
add
adc
inc
xor
and
mov
push
mov
inc
or
xor
pop
xor
(bad)
mov
inc
sbb
inc
mov
push
cmp
add
in
fstp
or
pop
sub
inc
dec
sub
xor
aad
fstp
xor
test
clc
and
(bad)
mov
xor
mov
or
fdivr
pop
enter
fstp
xor
movs
xchg
push
fsubr
mov
int
std
mov
or
sbb
adc
jne
xlat
inc
lods
mov
cmps
xchg
push
xor
mov
mov
dec
cwde
stc
ss
adc
mov
adc
pusha
movs
pushf
test
xor
sub
int
xchg
xor
movs
xchg
push
aaa
fsubr
mov
int
std
mov
inc
outs
pushf
inc
mov
adc
or
sbb
inc
pop
sub
pop
adc
out
pop
sahf
call
xor
fistp
mov
xor
pop
adc
inc
retf
jecxz
xchg
(bad)
call
cmp
inc
jmp
sahf
enter
mov
mov
cmp
cmp
xchg
inc
fstp
mov
fstp
mov
jo
cmp
pop
adc
push
fcomp
mov
pop
inc
xor
mov
call
mov
sbb
mov
aad
mov
ret
mov
popa
or
sbb
xor
push
xor
popa
cld
mov
mov
jmp
gs
aaa
and
test
xchg
pop
test
xor
mov
call
cwde
stc
sub
mov
(bad)
pop
iret
xchg
in
out
mov
jo
cwde
stc
sub
call
sub
std
xor
xlat
xchg
jne
aad
mov
iret
pop
iret
mov
mov
outs
cld
xor
adc
pusha
movs
pushf
lods
retf
or
xchg
jne
jne
xor
adc
sbb
jnp
mov
mov
xor
or
mov
add
push
mov
dec
out
lahf
inc
xor
in
cwde
xor
pop
adc
arpl
mov
retf
pop
std
add
xor
pop
sar
(bad)
sub
xor
nop
dec
fisub
popa
or
adc
retf
lods
cmp
nop
dec
fisub
jne
ja
adc
das
fsubr
mov
mov
cli
inc
retf
mov
aaa
sub
push
imul
(bad)
mov
inc
mov
mov
sbb
fs
in
pop
sahf
sub
pop
sub
sbb
out
retf
ja
rcr
mov
out
mov
mov
mov
mov
xor
pop
sahf
sub
pop
add
mov
cli
inc
retf
or
aaa
aad
mov
adc
push
adc
inc
retf
cmp
mov
inc
xor
mov
inc
hlt
mov
xor
mov
(bad)
adc
(bad)
mov
inc
hlt
mov
inc
and
pop
pushf
sub
sub
retf
or
xchg
add
sub
xor
pop
adc
inc
mov
mov
push
mov
retf
outs
hlt
mov
jl
dec
pushf
xor
xor
mov
xor
xor
mov
in
pop
pushf
jnp
stos
adc
rcr
or
sbb
push
shl
retf
push
fst
push
push
adc
or
xchg
sbb
mov
inc
xor
pop
jge
retf
inc
xor
gs
inc
mov
sbb
mov
xchg
sbb
xlat
mov
ja
jmp
mov
sahf
mov
call
jmp
pop
adc
inc
retf
mov
xor
xor
mov
(bad)
mov
into
pop
in
xor
mov
jmp
mov
sahf
cmp
mov
nop
push
fisub
jmp
push
adc
inc
retf
jmp
adc
push
retf
pop
aaa
xlat
add
mov
mov
jmp
mov
pushf
fs
mov
jl
pop
push
lock
xlat
sbb
mov
cli
inc
retf
mov
aaa
popf
hlt
mov
(bad)
fcomp
mov
retf
add
mov
inc
xor
jmp
mov
mov
mul
mov
dec
add
std
adc
mov
retf
inc
retf
mov
xor
sub
mov
ins
mov
jmp
jmp
xlat
and
inc
push
mov
retf
cmp
leave
and
fld
cmp
fld
(bad)
retf
cmp
sub
pop
inc
cwde
cmp
mov
jmp
fld
(bad)
retf
cmp
pop
sahf
cmp
sub
mov
mov
jmp
mov
adc
mov
retf
push
cmp
sahf
sub
mov
out
pop
push
adc
adc
mov
adc
sbb
out
retf
pop
aaa
xlat
cwde
popa
jmp
inc
retf
test
leave
push
mov
fisub
sahf
test
xor
mov
adc
jmp
pop
pushf
cmp
pushf
sbb
push
pop
adc
mov
xor
mov
inc
cmp
adc
mov
cmp
pop
adc
mov
fisub
adc
xor
rcl
xor
nop
pop
jmp
inc
retf
adc
sub
xor
mov
xor
adc
test
(bad)
mov
sub
in
fstp
test
(bad)
mov
aas
aad
fstp
test
xchg
jmp
jmp
xlat
pop
pushf
or
clc
iret
inc
retf
push
jmp
jmp
pop
adc
mov
xor
sbb
(bad)
retf
aas
mov
fabs
push
retf
inc
sbb
lahf
stos
mov
mov
cld
cmp
retf
or
popf
idiv
out
mov
xchg
or
pop
pusha
xchg
mov
sub
inc
inc
xchg
or
pop
pusha
test
xor
push
xchg
or
pop
popa
mov
sbb
arpl
mov
xchg
sar
nop
dec
fisub
leave
(bad)
retf
or
sub
(bad)
in
inc
retf
mov
loope
(bad)
retf
leave
ja
mov
fisub
loope
retf
pop
aaa
aad
jl
pop
aam
aaa
pop
pop
inc
mov
mov
jmp
loope
push
retf
mov
retf
or
cld
xchg
leave
mov
cli
inc
retf
or
aaa
aad
mov
adc
push
adc
inc
retf
jecxz
xchg
(bad)
call
or
inc
jmp
jmp
aam
xchg
ror
dec
jno
xor
shr
mov
pop
lods
lods
xor
xlat
push
inc
mov
xchg
loop
stc
aad
jns
sbb
xor
cwde
mov
push
adc
xor
cwde
mov
pop
adc
cmp
movs
or
push
sub
(bad)
mov
jmp
pop
xlat
xor
movs
sar
retf
pop
(bad)
stos
mov
mov
pusha
mov
ficom
clc
retf
pop
xchg
ror
addr16
repz
mov
xor
or
xchg
int
mov
adc
inc
mov
adc
mov
or
mov
pop
adc
cmc
pop
adc
enter
inc
xor
mov
xlat
pop
xchg
inc
xor
pop
ds
pop
pusha
mov
movs
push
shl
push
inc
xor
mov
mov
aad
xchg
inc
xor
adc
jo
pushf
jg
sahf
pushf
call
xor
aad
xor
pop
adc
inc
xor
mov
xor
pop
sub
inc
xor
push
inc
xor
push
jmp
mov
adc
mov
or
xchg
(bad)
enter
inc
xor
pop
cmp
dec
mov
js
lahf
sbb
xor
xchg
clc
retf
or
dec
jecxz
xchg
(bad)
call
(bad)
xlat
pusha
mov
in
add
jnp
(bad)
stc
es
adc
mov
xor
adc
jne
sbb
xor
(bad)
mov
pusha
sub
inc
pop
sar
add
push
xor
xchg
inc
xor
clc
xor
ins
int
test
out
lahf
inc
xor
in
popf
xor
pop
adc
shr
jne
inc
ret
cmp
sub
mov
fwait
cwde
enter
enter
mov
fisttp
mov
aad
jmp
(bad)
lods
mov
fwait
and
push
fdivr
aad
jmp
cli
daa
cmp
ss
mov
xor
aad
fst
jmp
jecxz
jecxz
dec
xchg
dec
jns
adc
cmp
ss
mov
cmp
pop
pushf
jnp
mov
push
ss
xchg
popf
xor
aad
dec
mov
push
jg
arpl
jle
pushf
add
jns
pop
adc
push
nop
pop
adc
sar
popa
mov
sbb
xor
test
mov
jo
jmp
or
jne
pop
adc
mov
ficomp
inc
sbb
pushf
jp
add
test
pop
fs
mov
xchg
pop
aad
mov
xor
pop
jg
pop
pop
jg
pop
pop
adc
mov
es
mov
repnz
jmp
inc
pop
and
fimul
jg
arpl
clc
cmp
aam
std
mov
adc
xlat
xor
pminsw
cmp
std
jno
pop
adc
inc
gs
aad
mov
lods
in
xor
je
mov
xor
pop
adc
jle
aad
fst
jmp
ss
xor
sbb
xor
ss
mov
pop
pop
jge
xor
push
std
pop
gs
adc
dec
rcl
push
dec
mov
sub
mov
mov
xlat
aaa
ss
pop
gs
adc
inc
mov
sbb
frstor
mov
int
shr
fisttp
aad
push
fdivr
aad
in
data16
inc
push
sar
leave
mov
aaa
je
js
mov
xchg
xor
jle
addr16
inc
inc
push
jge
aad
adc
mov
jbe
adc
mov
xor
xchg
scas
cmp
adc
ja
std
jmp
icebp
push
push
xchg
imul
pusha
sub
or
xchg
imul
pop
std
xchg
pop
adc
clc
leave
aad
mov
push
dec
je
or
mov
push
sar
leave
mov
jl
fst
icebp
jnp
mov
xor
pop
dec
mov
mov
mov
pop
cs
pop
imul
out
xor
sbb
inc
mov
fwait
aad
adc
mov
mov
or
loop
pop
fdivr
aad
fnstenv
jmp
out
repnz
imul
fwait
push
pop
xor
xchg
fcomp
pop
xchg
fcomp
pop
xchg
fcom
pop
cwde
rol
and
mov
adc
mov
push
pop
adc
popa
mov
pop
pusha
mov
sub
push
mov
inc
fidiv
push
push
pop
adc
gs
mov
in
cmc
inc
adc
(bad)
push
ds
mov
cmp
std
and
xor
push
ss
sbb
jne
popf
clc
retf
mov
cmp
mov
mov
stc
xor
push
push
mov
jmp
inc
pop
xchg
rcr
pop
xchg
ror
pop
xchg
ror
pusha
push
test
pop
mov
xlat
push
mov
jmp
ss
push
sbb
daa
jne
aam
xor
xlat
push
mov
xor
pop
int
not
pop
push
mov
push
mov
xor
mov
rcl
push
mov
jmp
mov
or
xchg
in
mov
jg
sbb
ss
sbb
jne
sahf
call
cmp
mov
adc
add
cld
lahf
jne
movs
int3
test
xor
sbb
sub
push
int3
test
movs
int3
and
movs
int3
test
movs
int3
push
sub
jne
test
movs
int3
test
movs
int3
pusha
movs
int3
test
xor
push
adc
jle
int3
nop
jge
int3
test
movs
int3
and
movs
int3
test
movs
int3
sub
movs
int3
test
movs
int3
je
movs
int3
test
enter
movs
int3
test
xor
int3
test
jne
test
movs
xlat
or
ss
test
movs
int3
test
(bad)
mov
dec
test
movs
int3
test
cmc
push
test
movs
int3
test
std
int3
test
movs
int3
test
fsubr
add
retf
std
xor
and
stos
push
mov
push
lahf
jne
movs
int3
test
xor
int3
test
movs
int3
xchg
inc
xor
push
test
mov
test
jl
int3
test
movs
int3
inc
sub
mov
int3
loop
movs
int3
test
movs
int3
dec
sub
mov
stos
push
int3
test
movs
int3
test
pop
movs
push
int3
test
movs
int3
scas
ins
aam
adc
sub
movs
int3
test
movs
int3
inc
sub
mov
int3
loop
movs
int3
test
movs
int3
dec
sub
mov
sbb
int3
and
movs
int3
test
movs
int3
test
int3
test
push
dec
call
xor
(bad)
movs
data16
push
cmp
fcomp
sub
mov
pop
xlat
xor
mov
push
dec
xor
pop
adc
in
ffree
loop
retf
jg
or
cmp
xor
aas
push
adc
add
mov
mov
into
aad
xchg
in
loop
mov
(bad)
mov
in
cli
xor
aad
push
mov
inc
sub
inc
dec
sub
inc
dec
pushf
gs
push
mov
dec
sbb
js
cmp
mov
inc
sub
pop
adc
mov
and
jne
xor
test
adc
sub
jo
inc
push
call
inc
gs
mov
(bad)
push
mov
in
fst
pop
mov
jo
inc
xor
pop
in
frstor
pop
mov
mov
adc
mov
jae
jo
sbb
jo
pop
test
push
xchg
movs
retf
loop
pop
fdivr
aad
fnstenv
jmp
out
stos
out
xchg
jle
jbe
mov
xor
pushf
inc
xor
stos
(bad)
mov
hlt
movs
or
sahf
popf
call
mov
adc
jge
sbb
mov
mov
in
inc
retf
mov
call
xor
mov
pop
aaa
xlat
add
push
dec
sub
loop
pushf
rcr
sbb
dec
mov
pop
aaa
mov
push
mov
icebp
loope
mov
xor
pop
pushf
dec
ss
rol
ja
push
clc
fisttp
ds
inc
mov
mov
adc
stos
mov
jge
xor
sbb
and
ds
adc
pop
fld
ja
sub
leave
cs
sbb
loope
mov
sub
jmp
sbb
xor
aad
mov
jmp
dec
xchg
clc
int
mov
mov
adc
push
(bad)
std
sar
adc
fnstcw
adc
or
aad
mov
mov
pop
and
mov
mov
jbe
adc
push
push
adc
mov
mov
(bad)
jl
dec
sbb
mov
pop
jg
pop
in
push
pushf
test
xor
pop
adc
jne
push
adc
stos
mov
icebp
(bad)
xor
sbb
and
ds
adc
pop
fld
ja
sub
shr
sbb
loope
mov
and
in
jo
sahf
test
loope
mov
lds
imul
gs
dec
inc
sbb
pop
sbb
pusha
mov
pop
mov
push
adc
push
stos
push
xor
push
mov
in
sahf
test
xor
push
adc
jle
push
adc
mov
fld
jo
inc
xor
pop
adc
push
adc
inc
retf
mov
pop
jg
pop
pop
jg
pop
pop
jge
xor
push
std
mov
pop
adc
dec
dec
dec
adc
clc
fisttp
enter
enter
hlt
xor
mov
cmc
xor
adc
mov
cmp
adc
pop
mov
add
cld
lahf
inc
xor
(bad)
movs
aaa
pop
adc
arpl
mul
mov
pushf
cmp
mov
xchg
mov
lahf
pop
adc
bound
pushf
dec
add
pushf
jnp
loop
mov
push
dec
inc
xor
stos
(bad)
jl
pop
aam
sub
xor
add
push
xor
aam
inc
retf
mov
adc
sbb
or
scas
outs
js
add
push
hlt
cmps
adc
cmp
mov
(bad)
fdivr
mov
adc
jo
sub
xor
inc
div
sahf
adc
cmp
jmp
mov
dec
mov
retf
mov
mov
xor
pop
cwde
cmp
mov
and
xor
pop
jg
pop
pop
jg
pop
pop
adc
inc
enter
fisttp
nop
dec
enter
inc
push
lods
xor
fstp
mov
mov
call
mov
int
push
mov
retf
lea
adc
xor
mov
jmp
pop
popa
or
inc
aad
adc
fldl2e
inc
retf
push
mov
adc
inc
retf
aad
adc
fldl2e
inc
retf
aad
pop
adc
mov
xor
fscale
inc
retf
jnp
pop
popa
or
jge
jmp
mov
retf
aad
pop
adc
mov
jmp
mov
mov
sbb
popa
fucom
loop
pop
adc
jle
aad
fst
jmp
xlat
pusha
test
sbb
in
xchg
int
rol
sub
dec
rcl
push
dec
mov
pop
cwde
clc
int
cwde
clc
leave
or
mov
xor
ss
enter
hlt
xor
xchg
jmp
movs
pushf
clc
int
pusha
inc
arpl
adc
xor
sub
push
sbb
sub
mov
cmc
xor
xchg
(bad)
call
stos
ja
in
mov
add
xor
mov
cli
xor
mov
add
enter
mov
sub
aad
in
(bad)
repnz
mov
rcl
xor
adc
jo
inc
inc
inc
dec
jmp
pop
adc
movs
push
(bad)
call
(bad)
push
pushf
inc
add
pushf
jp
sbb
in
mov
pop
jge
xor
ss
mov
sub
mov
add
dec
inc
dec
jmp
dec
jmp
pop
sbb
inc
push
jmp
pop
and
fimul
inc
sbb
pushf
jp
sub
push
push
adc
mov
cld
lahf
inc
xor
(bad)
lods
arpl
sahf
enter
movs
push
aad
movs
mov
pop
je
fucom
loop
pop
adc
inc
add
pushf
jp
sbb
in
pop
inc
adc
inc
inc
push
jmp
pop
sbb
inc
pop
and
fisub
clc
sub
ss
enter
cli
xor
push
jmp
pop
and
fiadd
enter
cli
xor
inc
(bad)
mov
mov
mov
jo
pushf
jp
add
jle
aad
in
or
xchg
cmp
mov
push
fidiv
mov
xor
sbb
sti
xor
aad
mov
aad
sbb
mov
or
in
enter
std
ficomp
mov
xor
ss
mov
xor
pop
xchg
dec
and
adc
mov
retf
push
jae
adc
mov
xor
lahf
lods
out
inc
lds
xor
jne
xor
xlat
push
cdq
xor
add
jmp
call
arpl
sahf
enter
mov
sbb
loope
aam
ss
pushf
jg
sahf
pushf
call
add
sub
int
int
mov
mov
push
mov
mov
or
xor
(bad)
mov
leave
mov
mov
or
cmp
popa
pushf
mov
sub
jge
sub
jo
sar
mov
adc
push
add
in
in
or
sbb
adc
inc
mov
adc
mov
mov
push
mov
mov
or
xor
pop
in
push
aaa
ins
aad
imul
jle
aad
(bad)
jmp
xlat
dec
mov
sbb
pop
adc
lods
xor
data16
xor
(bad)
repnz
inc
xlat
jne
xchg
(bad)
xor
ins
jecxz
and
mov
cmp
popa
mov
jmp
xor
xchg
addr16
mov
in
or
repnz
mov
and
mov
pusha
cs
in
mov
int3
aad
ds
bsr
cwde
pop
dec
xlat
popf
(bad)
mov
loop
rcr
(bad)
xlat
push
bound
inc
push
dec
sbb
fcmovne
sbb
mov
sbb
xchg
adc
loop
pop
fdivr
aad
add
frstor
push
mov
mov
push
inc
setge
mov
retf
mov
jmp
mov
pusha
mov
(bad)
in
retf
mov
lahf
pushf
dec
xor
pushf
jnp
xchg
add
cld
xchg
ds
adc
inc
retf
mov
mov
push
dec
push
mov
fst
push
mov
retf
add
ret
inc
retf
mov
call
inc
enter
in
mov
sub
jmp
pop
inc
xlat
jne
inc
push
mov
sahf
enter
enter
mov
je
adc
xor
xlat
push
mov
fld
inc
enter
mov
jmp
movs
pushf
jp
push
sahf
sub
mov
inc
push
pop
xchg
jmp
adc
sub
mov
jnp
push
mov
retf
mov
adc
test
adc
mov
iret
pop
push
push
mov
adc
xor
ins
in
repz
clc
xor
pop
adc
inc
xor
ss
into
sbb
mov
xlat
test
retf
jmp
std
inc
jno
adc
gs
adc
mov
iret
pop
push
push
mov
adc
aad
adc
jmp
std
pop
jno
adc
sbb
aas
pop
adc
ds
pop
push
push
mov
adc
push
dec
sbb
mov
mov
adc
push
mov
stc
xor
pop
adc
mov
jge
jmp
mov
retf
aad
adc
fldl2t
inc
retf
mov
push
mov
xor
(bad)
js
pop
adc
mov
xor
cmps
adc
es
pop
ja
jmp
push
push
mov
pop
push
retf
mov
jmp
cwde
sbb
mov
xor
cmps
adc
es
pop
ja
jmp
push
push
mov
pop
pop
retf
mov
jmp
cwde
sbb
mov
xor
cmps
adc
push
mov
(bad)
xor
pop
adc
mov
jge
jmp
mov
lea
js
xor
nop
jmp
pop
adc
mov
addr16
arpl
cwde
add
mov
js
xor
mov
pusha
lods
mov
mov
push
mov
xor
mov
(bad)
xor
pop
adc
inc
xor
ss
sub
adc
mov
xlat
test
retf
jmp
std
mov
icebp
dec
pushf
dec
ret
cmp
mov
std
dec
ja
adc
mov
iret
pop
push
push
mov
adc
push
(bad)
push
adc
mov
mov
adc
es
arpl
jmp
mov
mov
(bad)
push
mov
xor
fucomip
mov
aad
adc
inc
retf
push
aad
mov
aad
aad
adc
sub
ss
jmp
push
adc
mov
fld
push
mov
xor
fucomip
mov
jmp
adc
inc
retf
push
mov
push
pop
adc
inc
xor
push
aad
mov
jmp
in
pop
adc
test
aas
pop
adc
ds
pop
push
mov
xor
push
sahf
add
mov
sub
pop
inc
push
retf
mov
dec
jl
mov
fcom
retf
mov
xor
mov
inc
into
xor
mov
push
mov
jmp
mov
jmp
cwde
jmp
mov
cs
in
mov
int3
(bad)
fsub
in
add
pop
adc
jns
stos
idiv
pushf
sub
mov
add
xor
bound
cwde
add
mov
cld
xor
in
call
mov
mov
aad
enter
cmc
mov
adc
inc
retf
or
mov
or
inc
retf
cmp
mov
jno
ja
inc
push
sub
or
mov
xor
cmps
adc
es
arpl
jmp
inc
push
mov
fld
pop
mov
int3
fucomip
mov
jmp
adc
inc
retf
std
xor
aad
mov
aad
push
call
mov
mov
adc
es
pop
ja
jmp
xchg
push
mov
mov
rol
mov
jmp
fldln2
inc
retf
mov
call
inc
retf
cmp
mov
loop
mov
mov
adc
xor
fldln2
inc
retf
mov
adc
inc
retf
cmp
pop
adc
dec
mov
pop
adc
cmp
mov
push
mov
int
jmp
mov
mov
dec
arpl
cwde
cmp
mov
or
xor
rcr
ds
mov
adc
fstp
pushf
dec
add
pushf
jnp
fst
mov
(bad)
inc
enter
xor
std
cdq
push
pop
adc
inc
retf
or
mov
pushf
cmp
mov
loope
retf
mov
mov
ss
jmp
push
adc
mov
fstp
sub
xor
fucomip
mov
jmp
adc
inc
retf
xor
in
vpsrlq
arpl
mov
mov
adc
es
arpl
jmp
sub
(bad)
mov
xor
fucomip
mov
aad
adc
inc
retf
xor
mov
push
mul
mov
xor
mov
adc
inc
and
ret
ds
push
pushf
cmp
mov
sbb
cmps
mov
retf
push
mov
adc
push
mul
mov
xor
cmps
adc
es
arpl
jmp
mov
shl
xor
pop
mov
fucomip
mov
jmp
adc
inc
retf
xor
in
rcl
nop
jns
mov
js
xor
pop
adc
inc
xor
push
aad
mov
jmp
xor
pop
adc
(bad)
jmp
adc
inc
retf
xor
and
xor
movs
xchg
inc
xor
ss
push
bound
mov
xlat
test
retf
jmp
std
popf
or
icebp
dec
std
mov
aas
pop
adc
ds
pop
push
push
mov
adc
cmp
inc
aas
mov
xor
pop
adc
inc
xor
push
aad
adc
jmp
std
dec
or
icebp
push
std
or
aas
pop
adc
ds
pop
push
push
mov
adc
push
mov
push
adc
inc
mov
adc
push
mov
xor
adc
mov
jge
jmp
mov
pop
jne
push
mov
adc
xor
jne
xor
mov
xor
adc
inc
xor
push
aad
mov
jmp
loope
pop
adc
mov
and
xor
adc
xor
movs
xchg
inc
xor
push
aad
mov
jmp
cdq
or
icebp
push
jge
jmp
adc
inc
retf
xor
jecxz
and
repnz
adc
mov
mov
adc
es
pop
ja
jmp
mov
shl
enter
mov
jmp
push
adc
mov
fstp
sub
xor
fucomip
mov
aad
adc
inc
retf
xor
pop
jmp
into
sub
fst
sub
xor
fucomip
mov
aad
adc
inc
retf
xor
pop
loop
mov
mov
sub
xor
aad
cmp
dec
xor
leave
mov
std
pusha
ja
inc
push
cmp
mov
fisub
mov
xor
cmps
adc
es
pop
ja
jmp
push
sub
pop
or
xor
mov
adc
push
and
mov
mov
mov
adc
es
pop
ja
jmp
mov
mov
mov
data16
xor
pop
adc
mov
iret
pop
push
mov
xor
push
sahf
add
mov
sub
pop
inc
push
inc
addr16
aad
adc
retf
mov
adc
mov
pop
pop
jg
pop
pop
adc
mov
pop
sub
push
retf
cmp
lds
xor
mov
adc
add
mov
jmp
jmp
std
fisttp
mov
inc
retf
mov
mov
and
vpsrlq
(bad)
and
retf
loop
pop
fdivr
aad
cmp
push
adc
xor
push
push
xor
stos
repnz
movs
jmp
retf
jnp
mov
mov
ss
mov
std
or
pop
adc
xor
ss
mov
retf
aad
pop
adc
inc
retf
mov
mov
cs
xlat
xor
pop
jge
call
pop
adc
inc
retf
popa
ja
jge
jmp
adc
pop
adc
dec
retf
jns
(bad)
loope
pop
adc
xor
(bad)
sub
pop
adc
push
cmp
gs
ins
in
xor
fbstp
mov
or
fcomip
mov
retf
clc
cmp
pop
adc
inc
retf
inc
sbb
pushf
jp
xchg
ds
inc
push
jle
adc
xor
adc
mov
mov
adc
inc
retf
or
jp
mov
mov
mov
cwde
jmp
mov
aad
mov
fstp
mov
enter
cmp
inc
retf
mov
mov
lea
mov
adc
xor
jmp
shl
retf
jmp
aaa
pop
push
xor
aam
inc
retf
fadd
pop
adc
mov
xor
mov
sbb
xor
mov
sub
xor
pop
inc
push
or
mov
xor
mov
leave
push
pop
jge
xor
lods
jmp
sub
jmp
cli
and
imul
fst
inc
retf
mov
leave
mov
nop
or
mov
and
enter
or
inc
retf
xor
mov
call
and
cmp
inc
retf
cmp
mov
dec
retf
jns
aad
and
mov
sbb
frstor
mov
ret
pop
adc
push
mov
sub
xchg
int
shl
mov
call
cmp
mov
test
fisub
call
xlat
xor
mov
sub
mov
mov
mov
adc
inc
retf
mov
mov
jmp
retf
ds
call
mov
retf
mov
shl
mov
jmp
retf
scas
lds
mov
retf
xor
or
mov
pop
pop
jg
pop
pop
cwde
cmp
mov
adc
mov
in
pop
adc
inc
retf
add
int
in
xor
mov
jmp
and
push
mov
and
repz
retf
push
sbb
loop
push
mov
jge
jmp
imul
push
ss
adc
mov
retf
aaa
mov
call
iret
std
push
into
leave
pusha
xor
lds
pop
adc
inc
retf
mov
pop
in
xor
pop
jge
xor
adc
inc
retf
push
sub
pop
pop
jge
jmp
mov
std
stc
mov
sub
pop
adc
and
mov
xchg
sbb
fst
mov
cmp
mov
enter
mov
lea
and
lods
sub
pop
adc
int
mov
std
int
pop
adc
sbb
mov
adc
inc
retf
sbb
pop
adc
inc
retf
add
ret
cmp
jmp
xchg
xlat
mov
mov
add
loopne
jecxz
mov
sbb
retf
push
cli
outs
adc
xor
mov
pushf
jp
sub
push
mov
mov
pusha
mov
mov
jg
aad
dec
data16
mov
aad
dec
cmp
push
inc
cmp
inc
inc
xor
sbb
pusha
stos
adc
cmp
inc
dec
mov
ss
mov
arpl
adc
shr
sbb
cmc
aad
dec
mov
sbb
in
fucom
and
retf
xor
(bad)
mov
xor
push
mov
mov
adc
mov
mov
push
mov
mov
leave
rcl
aaa
or
mov
pop
adc
inc
mov
jmp
inc
xor
sbb
pusha
stos
cwde
stc
and
ins
adc
in
pop
pop
inc
aad
andnps
frstor
sar
mov
jmp
rcl
gs
lea
adc
mov
push
dec
je
or
xor
pop
inc
jmp
xlat
dec
mov
mov
in
xchg
int
rol
ret
cmp
fwait
sar
mov
mov
retf
xor
or
fucomi
push
adc
mov
cmp
test
jo
adc
jns
mov
adc
mov
sub
inc
adc
fnsave
mov
rcl
nop
or
mov
aad
fiadd
cmp
inc
adc
pop
retf
xor
or
push
pop
jae
mov
mov
fwait
inc
inc
sbb
mov
push
aad
sub
mov
inc
inc
push
std
imul
sbb
mov
mov
hlt
xor
pushf
dec
jecxz
xchg
(bad)
call
adc
jae
mov
push
test
and
vpsrlq
pop
pop
adc
xor
pop
pushf
fs
jmp
movs
pushf
jp
push
pushf
addr16
inc
push
push
loopne
inc
mov
sbb
mov
xor
fucom
sub
adc
xor
xor
bound
cwde
cmp
mov
mov
mov
mov
pop
adc
inc
xor
add
lds
pop
retf
push
retf
mov
mov
mov
xor
cmps
adc
sbb
mov
fidiv
movs
inc
xor
or
jmp
pop
cmc
inc
retf
sbb
icebp
dec
std
cmp
aas
pop
adc
ds
pop
push
push
mov
es
mov
call
mov
cmc
inc
retf
cmp
pop
adc
std
push
pop
adc
mov
iret
pop
push
push
mov
es
fld
mov
xor
fucomip
mov
push
pop
adc
mov
mov
mov
push
mov
retf
push
retf
mov
inc
dec
jge
jmp
inc
retf
pushf
jmp
inc
retf
popa
pop
pop
adc
dec
ret
cmp
sub
mov
pop
adc
mov
iret
pop
push
push
mov
daa
mov
pop
push
retf
rcl
in
fucom
daa
mov
(bad)
daa
mov
xor
fucomip
mov
aad
adc
inc
retf
sub
pop
adc
mov
mov
cmc
inc
retf
cmp
icebp
push
pushf
dec
ret
cmp
sub
mov
pop
adc
mov
iret
pop
push
mov
xor
push
cwde
add
xor
popa
ja
cwde
add
mov
(bad)
xor
xor
arpl
cwde
cmp
mov
(bad)
xor
mov
mov
pop
adc
inc
xor
add
lds
pop
retf
push
retf
mov
jle
push
mov
retf
push
fisubr
mov
lds
xor
mov
mov
pop
adc
inc
xor
add
lds
pop
retf
push
mov
mov
das
adc
fst
push
sahf
ins
adc
push
push
ins
adc
mov
mov
adc
and
cmp
mov
mov
fucom
sbb
inc
push
cwde
cmp
xor
popa
ja
cwde
cmp
mov
mov
mov
mov
pop
adc
inc
xor
add
lds
pop
retf
push
push
ins
adc
aad
adc
fst
push
adc
mov
(bad)
ins
adc
mov
mov
adc
and
cmp
mov
mov
in
shl
fyl2xp1
(bad)
retf
jnp
repnz
mov
int3
aad
cmp
dec
xor
xor
xor
popa
ja
cwde
add
mov
lea
mov
lea
pop
adc
inc
xor
add
lds
pop
retf
push
scas
ins
adc
aad
adc
retf
push
mov
adc
cmp
out
push
mov
xor
pop
adc
inc
xor
add
lds
pop
retf
push
outs
ins
adc
push
and
mov
mov
mov
adc
sbb
adc
xor
movs
inc
xor
or
jmp
pop
cmc
inc
retf
inc
sbb
icebp
dec
jge
call
pop
cmc
inc
retf
mov
pop
adc
mov
pop
pop
jg
pop
pop
adc
xor
mov
retf
fst
je
pop
adc
inc
retf
mov
pop
adc
inc
jmp
mov
retf
(bad)
retf
pop
sbb
and
xchg
xor
mov
xor
jne
xor
add
cld
lahf
inc
xor
(bad)
cmp
pop
adc
push
push
cmps
jle
int
repnz
fsubr
inc
retf
ds
shr
retf
dec
mov
addr16
xor
paddw
pusha
push
cwde
jmp
mov
movs
loop
mov
mov
ds
sbb
or
fwait
les
jecxz
adc
mov
retf
lods
pop
pop
cwde
cmp
mov
xchg
xor
pop
adc
inc
retf
adc
push
adc
mov
mov
cmc
pop
retf
jns
push
aad
mov
pop
mov
xor
mov
nop
or
mov
aas
mov
int
rol
cld
call
cmp
mov
inc
retf
jns
push
aad
mov
pop
mov
ja
cwde
cmp
mov
mov
cmp
rcl
in
(bad)
cmp
retf
cmp
movs
adc
mov
pop
cwde
cmp
mov
xchg
xor
fst
stos
xor
adc
inc
retf
mov
retf
mov
adc
inc
retf
mov
retf
mov
ror
pop
pop
adc
inc
retf
cmps
shl
mov
retf
xor
or
mov
pop
pop
jg
pop
pop
cwde
cmp
mov
adc
mov
mov
adc
inc
retf
jge
pop
adc
xor
mov
jmp
and
push
mov
cmp
repz
retf
push
sbb
ror
or
mov
jge
jmp
ja
mov
inc
inc
jge
ss
adc
mov
retf
aaa
mov
out
inc
retf
iret
std
push
jecxz
mov
adc
xor
pop
std
in
pop
pop
adc
xor
xor
mov
movs
mov
std
jne
pop
adc
popa
ja
cwde
cmp
mov
push
retf
jns
popa
jmp
pop
adc
inc
retf
out
fucomp
loop
retf
mov
pushf
sbb
fwait
pop
adc
or
fstp
push
jp
adc
(bad)
xor
mov
mov
push
jns
jmp
mov
aas
mov
ja
std
mov
pop
push
leave
push
pop
adc
jge
jne
mov
push
adc
mov
retf
push
(bad)
setl
scas
inc
inc
or
inc
retf
gs
jns
mov
ss
call
mov
jmp
inc
int
retf
mov
mov
(bad)
xor
jne
mov
retf
mov
and
pushf
inc
xor
pushf
jp
pop
jmp
bound
enter
sub
mov
mov
sbb
xor
xchg
xlat
mov
mov
add
loopne
jecxz
fcom
adc
xchg
xor
mov
cmp
xor
or
lods
addr16
push
dec
je
mov
fnstsw
mov
xor
sbb
xor
paddw
inc
push
cwde
jmp
xor
mov
xor
or
mov
jne
jg
pop
pop
std
lods
sbb
adc
jmp
loop
mov
rcl
push
dec
mov
or
push
jbe
adc
call
dec
out
lahf
inc
xor
in
lods
xor
pop
adc
stc
inc
jp
jp
imul
cmp
pop
pushf
jnp
movs
cmp
mov
pop
and
ficomp
jge
cmp
mov
in
retf
push
shl
pop
pop
jmp
mov
movs
inc
retf
mov
mov
adc
inc
jae
xor
repnz
push
call
pop
mov
sbb
mov
push
sub
fucom
push
dec
pop
adc
mov
sbb
in
pop
pop
leave
push
mov
xchg
xor
add
loope
pop
pop
jge
xor
adc
push
pop
sbb
jo
xchg
jge
or
inc
out
push
adc
push
stos
jbe
mov
jo
inc
xlat
xor
pop
jmp
cmps
cmp
clc
retf
push
mov
mov
leave
dec
je
or
(bad)
popa
xchg
pop
adc
inc
mov
pop
jg
pop
pop
jg
pop
pop
jg
pop
pop
jg
pop
int3
adc
xor
ss
and
pop
pushf
jp
xor
mov
jo
pushf
jnp
pop
inc
xlat
add
push
adc
mov
add
sbb
adc
xlat
add
push
adc
mov
add
sbb
adc
xlat
add
sbb
push
jp
adc
jmp
pop
jg
bound
and
cld
xor
pop
jg
bound
and
cld
xor
pop
jg
bound
and
push
pop
jg
bound
and
push
pop
pushf
dec
add
pushf
jnp
pop
inc
xlat
add
sbb
adc
xlat
add
sbb
adc
xlat
add
push
adc
mov
add
push
adc
mov
xor
test
jnp
add
jle
jecxz
mov
addr16
adc
mov
rcl
xor
jne
jge
mov
adc
push
test
adc
mov
mov
push
mov
xor
pop
jge
mov
adc
cmp
and
mov
xor
imul
inc
adc
adc
push
mov
xor
jo
cld
xor
pop
jg
retf
sub
std
imul
int3
push
mov
xor
inc
cmp
mov
fwait
xor
imul
push
dec
std
push
mov
xor
je
cld
xor
pop
jg
retf
and
xor
pop
adc
mov
xor
jl
cld
xor
pop
pushf
inc
add
pushf
jp
mov
push
mov
xor
pop
jge
mov
adc
cmp
adc
xor
(bad)
test
dec
retf
or
xor
data16
jmp
mov
into
push
mov
mov
stos
sbb
std
lds
pop
adc
mov
gs
rcl
pop
adc
mov
or
dec
xlat
push
inc
push
sbb
in
pop
pop
jg
pop
pop
adc
bound
jge
out
push
adc
mov
xor
pop
jg
retf
and
mov
jo
ds
(bad)
fldenv
add
and
jns
push
adc
mov
adc
xor
push
mov
mov
imul
mov
je
jge
xor
adc
clc
(bad)
fldenv
inc
xlat
and
mov
jmp
mov
adc
push
cld
push
mov
pop
pop
jg
pop
pop
jg
pop
pop
jg
pop
pop
jge
aaa
pop
adc
xlat
cmp
jp
mov
arpl
and
cld
xor
pop
jg
retf
and
mov
je
jg
pop
push
mov
sbb
or
shr
push
adc
mov
adc
dec
std
push
mov
xor
imul
mov
je
jg
pop
jg
mov
sbb
or
movs
out
push
adc
mov
adc
xchg
call
pop
pop
jmp
pop
jmp
dec
jge
xor
adc
mov
xor
xchg
pop
xchg
push
js
mov
xor
push
adc
cld
xor
pop
adc
mov
xor
ror
push
pop
jg
(bad)
xor
je
jg
retf
and
mov
ja
jg
pop
cmp
xor
xor
mov
jmp
mov
adc
ffree
push
mov
xor
push
adc
mov
push
js
mov
xor
pop
adc
and
mov
xor
sbb
and
xchg
push
adc
mov
xor
xor
mov
jmp
mov
adc
mov
push
mov
xor
imul
mov
ja
jge
xor
adc
mov
xor
pop
xchg
in
pop
or
xor
pop
jg
fst
cmp
je
std
xchg
iret
mov
and
xor
sbb
cs
pop
adc
mov
xor
push
adc
mov
push
pop
adc
mov
mov
ss
cld
xor
sbb
aad
pop
adc
mov
xor
pop
inc
aad
xchg
pop
xchg
push
jg
mov
xor
push
adc
cld
xor
xor
mov
xor
pop
adc
push
pop
jg
fst
mov
je
jg
retf
and
mov
je
jg
pop
mov
and
xor
pop
adc
addr16
jge
out
push
adc
lahf
xor
sbb
and
xor
sbb
inc
aad
pop
adc
mov
xor
push
adc
mov
pop
pop
adc
mov
add
push
mov
push
cld
push
mov
xor
adc
mov
xor
adc
pop
iret
push
pop
std
fst
pop
adc
mov
add
push
mov
push
cld
push
mov
xor
pop
adc
mov
movs
(bad)
push
mov
xor
pop
std
cdq
pop
pop
adc
mov
mov
imul
mov
ja
jg
pop
je
popa
xor
xor
mov
jmp
mov
xor
pop
mov
stos
sbb
and
xor
push
adc
aad
pop
adc
mov
jmp
pop
iret
push
pop
std
adc
adc
mov
add
push
mov
jno
push
mov
xor
pop
adc
mov
(bad)
test
pop
cmps
int3
push
jge
mov
xor
mov
pushf
jp
fucomi
inc
retf
je
or
(bad)
and
rol
inc
add
pushf
jp
test
pusha
mov
jne
inc
retf
aad
xchg
arpl
jns
call
inc
sbb
pushf
jp
pop
jmp
pop
xor
xor
or
mov
xor
sbb
sahf
clc
leave
ja
dec
xlat
push
inc
push
sbb
in
pop
pop
jg
pop
pop
adc
bound
jge
out
push
adc
mov
xor
pop
jg
retf
and
mov
jo
ds
(bad)
fldenv
add
and
je
push
adc
mov
adc
ret
push
mov
xor
imul
mov
je
jge
xor
adc
clc
(bad)
fldenv
inc
xlat
and
mov
jmp
mov
adc
cld
push
mov
pop
pop
jg
pop
pop
jg
pop
pop
jg
pop
pop
jge
aaa
pop
adc
xlat
cmp
jl
mov
arpl
and
cld
xor
pop
jg
retf
and
mov
ja
jg
pop
cmp
pop
dec
jge
xor
adc
fxch
push
inc
adc
cld
xor
pop
adc
mov
xor
adc
mov
ja
jg
pop
pop
adc
xor
sbb
adc
pop
ja
and
and
adc
mov
ffree
push
mov
xor
ss
mov
je
std
fldcw
pop
adc
mov
mov
adc
mov
pop
es
xor
adc
fxch
push
inc
adc
push
aad
xlat
xor
sbb
and
xchg
push
adc
mov
pop
repnz
mov
jmp
mov
sub
sbb
push
mov
retf
inc
add
cld
xor
sbb
aad
pop
adc
test
xor
bswap
push
pop
jg
fld
popa
sbb
pop
jg
retf
and
mov
je
jg
pop
cmp
xor
pop
adc
mov
ja
jge
out
push
adc
mov
lods
sbb
adc
clc
(bad)
rcl
xor
sbb
and
xchg
sbb
call
sbb
push
xor
mov
out
push
adc
mov
sub
vandpd
add
push
mov
jno
push
mov
pop
in
mov
xor
pop
inc
aad
xchg
pop
xchg
push
inc
adc
push
push
adc
cld
xor
pop
adc
mov
xor
and
push
pop
jg
fnsave
imul
imul
mov
je
jg
pop
mov
jmp
pop
adc
fs
jge
out
push
adc
mov
xchg
push
adc
mov
mov
adc
mov
pop
dec
jge
xor
(bad)
push
mov
xor
pop
std
lds
pop
adc
mov
xor
imul
mov
ja
jg
pop
je
sti
pop
dec
jge
xor
adc
pop
iret
push
pop
std
sub
ret
push
mov
add
push
mov
push
cld
push
mov
pop
add
pop
pop
adc
bound
jge
out
push
adc
mov
xor
pop
jg
retf
and
mov
je
jg
pop
(bad)
adc
mov
pop
pop
adc
fs
jge
in
push
adc
mov
xchg
push
adc
inc
lea
repnz
mov
jp
xchg
inc
retf
je
or
arpl
stos
lahf
add
sbb
mov
jp
pop
jge
xor
ss
mov
cmp
pop
pushf
jnp
mov
adc
jmp
(bad)
or
xor
jmp
xor
pop
adc
pop
mov
rcl
rcl
rcl
mov
mov
mov
xchg
mov
sub
leave
das
push
xlat
xor
push
int3
push
pop
jmp
xor
retf
movs
mov
sub
xlat
xor
adc
jo
inc
inc
inc
dec
jge
sbb
adc
inc
retf
movs
mov
fwait
dec
jecxz
xchg
(bad)
call
cmp
or
xor
pop
in
repz
push
jae
adc
mov
retf
push
push
adc
mov
xor
aad
xor
retf
lods
pop
loope
push
mov
or
xchg
vpsrlq
and
int
ja
cwde
cmp
mov
movs
xor
pop
pusha
lods
pop
test
nop
mov
fstp
mov
xor
add
and
push
mov
retf
push
fimul
mov
mov
pop
pusha
lods
pop
ins
movs
push
mov
add
xor
add
jle
push
mov
retf
push
or
mov
jmp
push
adc
inc
retf
sbb
dec
mov
xchg
or
pop
cwde
cmp
mov
stos
xor
lods
pushf
jnp
and
mov
dec
jge
test
adc
inc
retf
shl
pop
adc
enter
or
pop
cwde
cmp
mov
stos
xor
push
pusha
lods
pop
pop
cmps
push
mov
add
cmp
add
adc
push
mov
retf
push
adc
mov
inc
dec
jge
xchg
adc
inc
retf
lods
and
lds
jmp
retf
cmp
and
inc
emms
pop
cwde
cmp
mov
stos
xor
pop
jge
in
push
adc
mov
retf
aad
ret
fnsave
cs
jge
test
adc
mov
retf
call
adc
dec
ret
cmp
mov
cld
fwait
retf
mov
xlat
mov
data16
inc
push
stos
pop
xor
inc
xor
jne
xor
aad
jmp
fimul
mov
cmp
jmp
sub
jmp
imul
jg
pop
inc
xor
(bad)
test
or
cmp
sub
xor
pop
adc
mov
retf
push
push
dec
adc
mov
xor
aam
dec
int
jmp
pop
pusha
lods
pop
lock
push
mov
add
int
jmp
push
adc
inc
retf
pop
and
mov
pusha
lods
pop
mov
nop
push
ret
in
fst
mov
xor
fyl2x
dec
retf
jnp
loope
inc
retf
enter
push
ja
cwde
cmp
stos
jmp
pop
xchg
add
movs
jmp
out
push
mov
retf
push
mov
adc
inc
retf
enter
push
ja
cwde
cmp
stos
jmp
pop
xchg
add
movs
jmp
out
push
mov
retf
push
dec
adc
dec
mov
movs
jmp
out
push
mov
retf
push
push
dec
adc
inc
retf
enter
push
ja
cwde
cmp
stos
jmp
pop
xchg
add
movs
jmp
out
push
mov
retf
push
retf
mov
retf
enter
push
ja
cwde
cmp
stos
jmp
pop
pushf
dec
ret
cmp
stos
jmp
movs
jmp
out
push
mov
retf
push
mov
mov
retf
enter
or
cwde
cmp
stos
jmp
pop
xchg
add
movs
jmp
call
clc
dec
retf
push
mov
sub
push
mov
clc
inc
retf
dec
rcl
nop
popa
ret
xor
xor
sbb
xchg
adc
inc
mov
add
inc
retf
dec
int
jmp
stos
jmp
pop
adc
mov
rcl
nop
gs
xor
jne
xor
ins
into
xlat
xor
pop
std
cld
mul
pushf
cmp
movs
jmp
pop
adc
mov
leave
mov
fdivr
leave
mov
nop
xchg
adc
inc
retf
cmp
pop
adc
inc
retf
add
ret
cmp
stos
jmp
movs
jmp
pop
cwde
cmp
mov
xchg
movs
xor
fild
mov
sub
retf
push
fbld
dec
fistp
or
fwait
push
xchg
push
xchg
icebp
aaa
pop
adc
cld
xor
int3
mov
xor
pop
cwde
cmp
mov
add
sbb
pushf
jnp
int3
mov
xor
pop
cwde
cmp
movs
jmp
pop
xchg
jns
mov
aad
pop
adc
inc
retf
push
push
dec
adc
mov
mov
loop
retf
xor
or
lods
in
push
adc
inc
retf
add
pop
adc
mov
retf
push
cli
dec
adc
xor
or
test
mov
jmp
mov
int
jmp
rcl
in
frstor
add
pop
pop
cwde
cmp
movs
jmp
pop
jg
pop
test
push
mov
mov
(bad)
mov
pushf
sbb
push
pop
adc
inc
retf
jge
or
popa
and
mov
mov
pushf
cmp
stos
jmp
movs
jmp
pop
adc
inc
retf
sbb
pop
jge
in
push
adc
inc
retf
mov
icebp
dec
jge
xchg
adc
inc
retf
mov
pop
adc
inc
retf
mov
pop
adc
inc
retf
ss
loop
retf
mov
sbb
add
inc
retf
mov
xor
mov
inc
retf
imul
lea
stc
stos
jmp
movs
jmp
mov
push
mov
retf
push
dec
dec
adc
xor
or
jns
pop
adc
inc
retf
inc
retf
mov
push
mov
ret
xor
add
pop
daa
pop
adc
inc
retf
push
and
adc
inc
retf
or
movs
jmp
rcl
in
(bad)
push
mov
retf
mov
loope
retf
shl
inc
push
dec
adc
inc
retf
xlat
xor
mov
push
mov
fld
push
mov
and
adc
inc
retf
inc
xor
jo
mov
(bad)
mov
push
nop
mov
mov
in
inc
retf
scas
xor
adc
cmps
xor
pop
dec
push
cwde
cmps
jmp
pop
adc
fldenv
pop
adc
mov
xchg
ins
call
gs
push
adc
mov
daa
pop
adc
inc
retf
leave
and
xlat
xor
sbb
xor
ret
xor
push
adc
test
adc
xor
stos
div
call
(bad)
aad
rcl
add
xor
pop
jge
xchg
push
adc
mov
xor
pop
adc
mov
xor
mov
inc
mov
add
aad
std
push
mov
retf
push
ds
jmp
mov
or
call
xor
sbb
mov
fldcw
pop
adc
mov
and
mov
inc
xor
pushf
ins
ins
aad
ds
mov
retf
cmp
mov
push
inc
dec
adc
push
fsub
ja
fs
dec
fistp
or
call
mov
mov
jmp
mov
aad
mul
popa
mov
fsub
add
neg
mov
fnstcw
mov
clc
inc
retf
cmp
xor
sbb
pop
jge
in
push
adc
inc
retf
mov
pop
adc
mov
mov
stc
inc
retf
cmp
pop
lods
xor
mov
inc
gs
js
mov
jmp
mov
adc
inc
retf
mov
xor
and
ret
mov
xor
pop
jge
in
push
adc
mov
xor
mov
ret
push
pop
out
nop
xor
gs
jge
xchg
push
adc
mov
xor
pop
pushf
gs
pushf
jle
loope
push
retf
mov
push
mov
xor
test
sbb
pop
jge
in
push
adc
mov
xor
mov
ret
push
pop
out
nop
xor
gs
jge
xchg
push
adc
mov
xor
pop
xchg
jns
shr
xor
call
xor
test
pop
pop
jg
pop
pop
jg
pop
pop
adc
and
and
jo
jg
pop
pop
jg
gs
mov
pop
sar
lea
push
add
fisub
sbb
fisub
push
cmp
int3
ss
in
mov
mov
std
popa
cmp
xor
ss
aad
mov
mov
mov
xor
mov
push
add
fisub
add
xor
mov
push
cmp
int3
ss
in
mov
mov
std
cmp
pop
adc
add
lds
push
pop
push
adc
push
ds
adc
mov
mov
clc
inc
retf
or
not
adc
adc
mov
nop
cwde
mov
mov
and
add
pop
adc
mov
xor
pop
pushf
clc
in
(bad)
imul
adc
mov
xor
sbb
xor
jne
xor
fwait
push
jns
pop
adc
mov
jo
inc
push
cmps
push
adc
mov
ret
push
mov
pop
pop
jg
pop
pop
jg
pop
pop
adc
data16
jge
out
push
adc
lods
xor
sbb
push
mov
fstp
sbb
xchg
out
jmp
push
adc
mov
mov
inc
sbb
ja
inc
push
adc
mov
retf
push
xchg
dec
adc
mov
retf
push
retf
cmp
pop
adc
gs
mov
inc
rcl
in
pop
xor
gs
jge
sbb
adc
inc
retf
movs
cmp
pusha
mov
ja
adc
push
mov
adc
sbb
pushf
jle
fnstcw
xlat
xor
sub
mov
fst
mov
cmp
mov
sti
inc
retf
mov
inc
sbb
xlat
xor
push
adc
mov
pop
jg
pop
test
mov
add
xor
pop
(bad)
movs
mov
out
mov
or
jo
inc
push
adc
pop
pop
jg
pop
pop
cwde
clc
ror
mov
sub
loop
pop
fdivr
pop
inc
xor
(bad)
test
pop
adc
movs
or
jne
repnz
mov
mov
add
mov
int
sbb
push
pop
adc
mov
xor
pop
adc
mov
and
adc
mov
pop
sub
mov
adc
xor
pop
xchg
sbb
mov
xor
xchg
retf
or
std
adc
jmp
aad
mov
fld
stc
inc
retf
sahf
shl
pushf
cmp
mov
int
retf
inc
xor
xor
fcom
cmp
mov
and
xchg
sbb
adc
sar
mov
jmp
mov
inc
retf
jne
mov
or
mov
call
popa
enter
fstp
sub
mov
fld
mov
jg
mov
mov
jmp
mov
call
mov
jno
push
mov
xor
pop
adc
push
pop
adc
push
pop
xchg
dec
pop
addr16
or
adc
push
mov
push
retf
cmp
xor
pop
adc
or
std
ret
jmp
aad
mov
xor
sbb
mov
xor
mov
xor
pop
sub
cmp
push
std
test
das
jno
mov
fldenv
cld
mov
pop
adc
cmp
mov
jge
xor
call
inc
sbb
mov
inc
pusha
cs
inc
push
push
mov
mov
js
mov
inc
inc
cs
inc
dec
cs
inc
push
cs
cmp
iret
mov
retf
push
(bad)
push
adc
inc
retf
mov
inc
dec
cs
inc
push
cs
inc
push
jge
and
dec
std
add
retf
mov
stos
push
adc
mov
mov
call
ds
sub
retf
sbb
mov
nop
popa
enter
fst
sbb
enter
repnz
mov
xor
movs
pushf
jp
mov
nop
mov
retf
and
push
aas
pop
adc
inc
retf
popf
pop
pop
jg
pop
bswap
push
push
adc
and
mov
ret
pop
adc
inc
mov
mov
loopne
retf
cmp
mov
sub
sbb
(bad)
mov
xor
pop
jmp
std
push
mov
xor
mov
push
cmp
int3
fucomip
mov
pop
add
push
mov
xchg
(bad)
mov
mov
xor
aad
test
pop
pop
std
jne
pop
adc
push
pop
cld
fidiv
pop
adc
mov
frstor
cwde
cmp
jmp
mov
int
xor
mov
sbb
pop
mov
nop
mov
retf
sub
std
push
cmp
adc
inc
retf
popf
pop
pop
jg
pop
push
int
xor
push
adc
sub
std
mov
ret
pop
adc
inc
retf
jne
sbb
xor
add
xlat
xor
pop
jg
fnstsw
mov
mov
push
adc
mov
retf
mov
mov
jmp
mov
imul
pop
mov
adc
mov
jne
std
sub
mov
adc
inc
retf
aaa
mov
jmp
aad
xchg
int
shl
mov
jmp
mov
cmp
pop
cwde
cmp
mov
xor
xor
mov
xor
jmp
push
adc
mov
retf
enter
xlat
xor
pop
jg
fnsave
sbb
xor
push
adc
mov
xor
pop
adc
inc
retf
cmp
mov
cmp
pop
cwde
cmp
mov
cmp
and
pop
cwde
cmp
jmp
sbb
adc
inc
retf
enter
xlat
xor
pop
jg
fstp
mov
stos
sbb
adc
mov
int
shl
mov
jmp
mov
mov
ja
cwde
cmp
mov
shl
and
pop
cwde
cmp
jmp
sbb
adc
inc
retf
enter
xlat
xor
pop
jg
ffree
sbb
xchg
stos
sbb
adc
mov
retf
ds
mov
adc
mov
pop
pop
jge
loop
adc
mov
pop
jmp
dec
sbb
mov
retf
inc
xor
fldl2e
inc
retf
cmp
pop
jmp
pusha
sub
adc
xor
push
pop
jg
fnstsw
mov
stos
sbb
adc
mov
retf
mov
jmp
in
inc
sbb
pushf
jp
fst
retf
xor
or
nop
in
push
adc
inc
retf
gs
adc
inc
xor
pop
jmp
ret
push
mov
xor
mov
jg
pop
pop
jge
loop
adc
mov
adc
push
adc
xor
mov
sub
retf
cmp
pop
jmp
pusha
sub
adc
xor
imul
mov
xor
sbb
adc
mov
retf
mov
adc
retf
jne
sbb
xor
add
jmp
ins
in
xor
rcl
in
mov
mov
push
mov
retf
push
cmp
mov
mov
adc
cmp
mov
std
inc
retf
jp
pop
jg
pop
pop
jg
pop
pop
jge
xor
ret
push
mov
xor
mov
adc
dec
retf
mov
adc
or
adc
lea
push
cmp
int3
aad
xlat
xor
mov
and
or
mov
adc
mov
call
mov
xor
mov
adc
inc
retf
jne
sbb
xor
cwde
sub
mov
cwde
and
mov
mov
push
cmps
pop
adc
cmp
mov
pop
aad
mov
loope
retf
lds
pop
adc
inc
retf
mov
jno
push
mov
xor
ss
xor
pop
adc
std
xor
pop
pushf
cmp
mov
loop
mov
mov
jmp
pop
jg
retf
inc
retf
or
pop
adc
push
fsubr
mov
div
adc
inc
retf
aad
(bad)
push
mov
retf
dec
xor
xor
mov
jge
jecxz
adc
inc
retf
mov
shl
mov
sbb
adc
xor
ss
xor
or
jge
in
push
adc
mov
mov
xchg
xor
mov
adc
push
mov
xor
pop
lods
adc
rcl
nop
pop
enter
repnz
inc
inc
dec
jmp
sub
mov
test
and
sub
fistp
sahf
clc
cmp
mov
in
adc
mov
(bad)
mov
mov
push
mov
ffree
push
mov
xor
aad
inc
mov
rcl
jmp
ficom
mov
xchg
push
adc
xchg
stos
sbb
adc
and
mov
imul
loope
pop
adc
xor
test
jp
imul
mov
imul
xchg
je
cld
xor
jl
cld
xor
pop
mov
dec
xchg
add
mov
add
mov
adc
inc
xchg
add
mov
add
mov
xor
pop
(bad)
mov
movs
loop
mov
ins
into
xchg
mov
cld
xor
jl
std
xor
push
adc
sub
sub
sub
cld
xor
pop
adc
std
xor
pop
test
xor
sbb
or
xchg
push
adc
cld
xor
jo
std
xor
push
adc
mov
out
sub
inc
inc
dec
jmp
paddw
xor
xor
sar
imul
jg
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
jmp
sar
pop
jle
inc
jne
std
in
xor
icebp
push
pushf
clc
leave
push
aad
sbb
sar
ficomp
cmp
fiadd
mov
pop
sbb
inc
pop
xchg
inc
adc
sbb
add
push
aad
xor
in
popf
inc
scas
jg
fstp
adc
pop
pop
inc
push
push
mov
inc
push
(bad)
in
mov
lods
xor
pop
adc
mov
fidiv
cmp
js
pop
xor
js
mov
in
inc
retf
inc
(bad)
repnz
mov
js
sub
clc
cmp
xlat
push
cdq
xor
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
adc
push
pop
.byte
