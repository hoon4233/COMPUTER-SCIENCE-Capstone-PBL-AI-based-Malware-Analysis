lods
lahf
clc
popf
sar
loope
pop
mov
sbb
sbb
adc
pop
mov
popf
fdivr
inc
mul
mov
push
pushf
pop
fcomp
pushf
aam
xor
mov
bound
pushf
xor
inc
xor
movs
pop
adc
loopne
mov
inc
das
push
push
xbegin
pop
mov
dec
(bad)
pushf
in
lahf
jns
out
inc
leave
xor
sub
fcomp
arpl
in
ret
cli
rcr
xchg
or
inc
leave
aam
sbb
sbb
push
adc
pop
dec
push
cwde
pop
mov
stos
pushf
pop
mov
push
mov
std
jmp
std
out
adc
push
xor
fadd
xchg
fist
push
pushf
pop
xor
cdq
cwde
pop
int3
imul
xor
cli
pop
pop
xor
aas
outs
or
in
cli
pop
pop
sbb
sub
mov
cs
mov
add
or
lea
sub
mov
sub
or
out
arpl
aaa
adc
add
dec
nop
push
js
mov
mov
mov
inc
jmp
test
jmp
adc
popf
cwde
shl
push
nop
mov
ret
push
adc
popf
test
push
je
mov
leave
inc
adc
jl
or
and
xchg
pop
push
rcl
pop
pop
test
ficomp
push
pushf
pop
rcr
pushf
fdivr
lahf
int
neg
adc
mov
jg
pop
mov
(bad)
jmp
pop
mov
jmp
test
mov
push
pop
cmp
xchg
mov
mov
push
pop
fwait
mov
push
rol
dec
adc
bound
fwait
out
push
pushf
pop
push
(bad)
cmp
xor
add
pushf
pop
mov
push
pushf
pop
mov
jmp
pushf
aaa
and
fcomp
jb
jp
push
pushf
pop
cmp
mov
inc
adc
arpl
lahf
xchg
pushf
xor
cli
push
hlt
jnp
push
pushf
aaa
cwde
cmps
ficomp
push
out
mov
push
pushf
mov
mov
push
pushf
(bad)
popf
add
mov
daa
push
(bad)
cmc
jmp
jno
clc
cld
mov
push
leave
(bad)
pop
scas
test
mov
push
pushf
or
inc
and
fild
(bad)
inc
loope
(bad)
cmp
lahf
pop
xor
mov
jle
pop
mov
push
pushf
mov
outs
pushf
pop
xor
and
call
mov
call
addr16
lods
lahf
push
jle
pop
xor
jmp
popf
pop
xor
jmp
jmp
mov
push
pushf
or
adc
pop
mov
jle
std
cli
push
adc
(bad)
out
das
mov
mov
sbb
sub
or
cdq
test
push
imul
jmp
push
pushf
mov
ret
add
fistp
xor
int
out
inc
and
jno
pop
mov
fldenv
xchg
xchg
pop
rcl
neg
push
arpl
mov
jmp
pop
mov
pop
mov
sub
jmp
mov
inc
arpl
rcl
(bad)
jle
jmp
pop
mov
daa
pop
mov
xchg
loope
mov
push
pushf
pop
push
pop
sbb
pop
mov
fadd
out
pop
or
repz
mov
inc
retf
loopne
xor
daa
add
call
loope
(bad)
std
out
adc
(bad)
setl
jl
mov
mov
enter
adc
pop
mov
ja
inc
arpl
movs
jl
mov
inc
(bad)
fsub
mov
arpl
cmps
outs
pushf
pop
mov
call
push
mov
fdiv
lahf
fldcw
jno
leave
(bad)
pop
xchg
jo
jmp
retf
aam
sbb
inc
loopne
shr
popf
xor
mov
mov
xchg
stc
mov
arpl
popf
popf
xor
mov
mov
popf
fldenv
mov
and
sbb
dec
xchg
dec
sub
fisub
cmp
popf
pop
int
movs
pushf
int
arpl
dec
popf
(bad)
push
push
mov
in
pushf
test
out
adc
cmps
call
(bad)
test
pushf
sub
pop
sub
xor
(bad)
jns
push
mov
mov
jmp
add
arpl
dec
ret
aad
(bad)
pop
scas
mov
push
je
int3
push
pushf
or
inc
pop
sub
pusha
mov
call
jmp
mov
xor
arpl
mov
xchg
(bad)
jns
push
mov
mov
pusha
xchg
cdq
cmp
push
ja
xor
ja
xor
mov
xor
aad
sub
retf
mov
push
movs
add
pop
fiadd
mov
inc
jmp
bound
inc
jmp
bound
inc
jmp
pop
fstp
push
adc
mov
dec
(bad)
xchg
jnp
adc
or
inc
pop
add
loopne
add
mov
mov
std
jmp
rcl
aam
push
es
je
push
xor
imul
or
(bad)
jp
pop
xor
stos
sbb
push
xchg
cdq
mov
jmp
dec
jae
(bad)
std
cli
adc
add
aad
(bad)
pop
inc
int3
or
inc
pop
add
pusha
adc
push
pusha
(bad)
jp
pop
(bad)
in
jmp
iret
push
pushf
aam
push
es
je
push
xor
imul
or
(bad)
jp
pop
xor
stos
sbb
iret
stos
pop
mov
push
fs
std
jmp
xor
cdq
mov
dec
push
pushf
in
lahf
jns
jmp
retf
aam
push
pop
add
imul
daa
pop
(bad)
in
jmp
xor
ja
xor
push
push
adc
cmc
sbb
(bad)
int3
adc
sbb
jnp
mov
push
pushf
outs
js
ret
aad
(bad)
pop
inc
int3
or
inc
pop
sub
inc
adc
cwde
inc
adc
jmp
push
arpl
mov
ret
push
retf
jmp
mov
in
fisttp
dec
jge
mov
jmp
pusha
sbb
inc
je
inc
jmp
ja
xor
imul
dec
ret
aad
(bad)
pop
inc
int3
or
inc
pop
add
and
rcl
pushf
test
lahf
fldenv
mov
mov
mov
push
neg
jmp
retf
push
neg
push
je
retf
push
pushf
out
pop
pushf
pop
dec
icebp
adc
cdq
mov
dec
ret
aad
(bad)
pop
inc
iret
or
popf
jmp
cmc
loopne
imul
push
pushf
fadd
push
call
sbb
inc
inc
xchg
aam
adc
mov
push
pop
pop
inc
and
inc
inc
inc
xchg
(bad)
inc
loope
(bad)
std
jmp
mov
aad
(bad)
pop
xchg
jo
jmp
retf
aam
push
and
test
fs
jg
mov
pop
rcl
je
enter
std
out
aaa
test
ficomp
lahf
in
pop
mov
pop
fs
jg
pop
push
arpl
add
js
retf
cmps
jge
mov
fldcw
mov
(bad)
xchg
test
(bad)
xchg
lahf
int
adc
(bad)
mov
sbb
mov
pushf
pop
mov
stc
aam
mov
int
ret
js
fnstcw
mov
fdiv
lahf
pop
or
arpl
out
(bad)
xchg
jnp
adc
pop
mov
push
iret
or
lods
adc
xchg
into
adc
jmp
push
arpl
cmp
in
cli
push
pushf
inc
mov
nop
push
cmp
popf
pop
mov
outs
sub
cmps
push
pushf
fadd
push
call
sbb
inc
inc
xchg
ficom
int
mov
push
pushf
pop
shr
arpl
fwait
sbb
inc
arpl
pop
rcl
hlt
lods
pop
push
pushf
sar
inc
je
inc
jmp
mov
sub
pushf
pop
push
dec
popf
pop
mov
push
pushf
fimul
iret
pop
mov
popf
fst
push
cwde
rdpmc
arpl
movs
lahf
fldenv
mov
scas
pop
mov
push
xchg
ficom
jae
pop
cmp
loopne
cli
push
arpl
xor
imul
adc
jmp
push
pop
sbb
and
pushf
sub
push
pushf
pop
sbb
sbb
cmp
cdq
xor
jmp
pop
mov
into
adc
mov
inc
lahf
fnstenv
mov
fwait
jmp
(bad)
pop
scas
cwde
pop
mov
imul
jmp
pusha
(bad)
pusha
loope
(bad)
cmp
lahf
pop
fadd
jmp
cli
push
hlt
lahf
pop
push
pushf
aam
out
aam
jmp
pushf
pop
xor
push
js
stos
(bad)
pusha
aas
inc
(bad)
jnp
sbb
sbb
pop
addr16
or
sbb
sub
push
pushf
mov
std
sbb
mov
cmp
pushf
pop
cmp
add
cli
push
pushf
sub
push
int3
aam
jmp
fs
loop
sbb
push
jbe
jmp
aas
sbb
mov
pushf
test
lahf
sbb
jnp
ret
aad
(bad)
pop
xchg
jo
jmp
retf
loopne
pop
xchg
ins
cmp
ins
and
in
test
dec
pushf
pop
cmp
pop
xor
fild
pushf
pop
mov
rcr
mov
xor
adc
sbb
pop
mov
lahf
ins
jbe
pop
pop
cmps
test
rcl
push
push
sbb
push
mov
cmp
sbb
inc
hlt
iret
sbb
mov
rcl
std
out
adc
std
cli
push
pushf
mov
loope
mov
cmp
pop
cmp
pop
int3
inc
cmp
cld
fsub
adc
cwde
cmp
pop
mov
adc
sbb
pop
mov
pop
inc
sub
mov
std
push
push
pop
mov
movs
and
stc
mov
inc
lahf
pop
sbb
push
xchg
fild
arpl
mov
bound
outs
and
mov
jnp
pop
push
ins
sbb
pop
rcl
neg
adc
pop
rcl
hlt
pop
mov
mov
pop
push
aaa
repz
mov
adc
pop
rcl
int3
mov
jns
pop
xor
(bad)
jns
push
mov
mov
jl
shl
loop
or
int
je
xlat
push
pushf
xor
call
neg
pop
inc
arpl
jns
pop
xor
imul
out
cwde
inc
arpl
jnp
pop
out
(bad)
xchg
jnp
adc
pop
mov
push
iret
or
lods
sti
cmps
or
into
push
pushf
test
lahf
sbb
inc
call
pop
pop
mov
pushf
cdq
cmp
push
hlt
mov
fidivr
pop
xor
adc
jl
bound
inc
jmp
sbb
pusha
daa
inc
(bad)
jnp
pushf
mov
addr16
pop
push
jnp
pop
mov
call
inc
(bad)
jnp
sub
cmp
inc
je
inc
jmp
pop
bound
push
out
adc
or
bound
pop
jmp
add
cli
push
int3
aam
jmp
pusha
push
js
ds
pusha
loope
(bad)
cmp
lahf
pop
sar
inc
hlt
aas
pop
push
pushf
aam
mul
inc
inc
pop
addr16
add
(bad)
std
jmp
mov
inc
pushf
pop
xor
jmp
ficomp
popf
movs
mov
inc
pop
pop
push
cmp
jle
(bad)
stc
push
arpl
js
bound
inc
xchg
pop
push
xor
fcmovnbe
add
popf
sbb
in
mov
pop
xor
mov
xor
adc
push
jmp
add
cli
push
int3
aam
jmp
pusha
push
js
sbb
mov
stos
and
cmp
sahf
pop
mov
call
add
push
neg
dec
jge
mov
call
push
inc
xchg
pop
push
xor
cli
(bad)
add
xchg
pop
fiadd
xchg
cmp
inc
push
pushf
push
cmp
sahf
pop
mov
jmp
adc
inc
jmp
int3
(bad)
stc
push
je
xlat
push
pushf
fdivr
call
inc
rcr
pop
mov
call
lock
push
pushf
push
cmp
xchg
pop
(bad)
popf
push
pushf
xor
cli
push
hlt
prefetcht1
mov
loopne
mov
inc
jmp
neg
fdivr
fwait
and
push
sbb
inc
xchg
pop
push
test
arpl
bound
mov
mov
neg
pop
rol
push
mov
jmp
arpl
rcl
hlt
out
push
pushf
rol
inc
je
dec
jmp
mov
sub
call
pushf
xor
cli
push
hlt
prefetcht1
mov
jecxz
mov
inc
jmp
neg
scas
jl
mov
call
imul
mov
mov
pushf
pop
mov
neg
pop
rol
push
mov
jmp
arpl
rcl
hlt
out
push
pushf
rol
inc
je
dec
jmp
mov
sub
call
pushf
(bad)
pusha
loope
(bad)
cmp
lahf
pop
xor
cli
push
hlt
prefetcht1
mov
jecxz
mov
inc
jmp
pop
ficom
jmp
pushf
pop
rcl
hlt
fcomp
pushf
aaa
call
out
mov
test
arpl
bound
mov
mov
neg
pop
rol
push
mov
jmp
arpl
rcl
hlt
out
push
pushf
rol
inc
je
dec
jmp
mov
sub
neg
pop
xor
jmp
arpl
inc
jmp
pop
ficom
jmp
pushf
pop
cmp
rcl
pop
loop
jmp
mov
mov
jmp
xor
inc
jmp
cdq
das
or
pushf
pop
sbb
sbb
cli
push
adc
pushf
jle
popa
mov
mov
in
pop
mov
jmp
sbb
xor
arpl
in
fldenv
dec
adc
inc
jmp
arpl
inc
inc
mov
xchg
imul
xchg
pop
pop
mov
jmp
outs
cmc
lock
pushf
fcomp
push
pop
loop
jmp
adc
mov
cmp
pop
fisub
jmp
pop
ficomp
jmp
pushf
pop
xor
jmp
arpl
pusha
jmp
lods
mov
dec
cmc
adc
mov
ins
jmp
or
cli
push
pop
fisubr
jmp
movs
mov
mov
pop
pop
push
cmp
fwait
sbb
xor
int3
aam
jmp
pushf
(bad)
std
jmp
cmp
pop
mov
pushf
pop
mov
jmp
sbb
xor
arpl
sbb
fidiv
pushf
pop
cmp
jo
mov
xchg
je
inc
jmp
arpl
inc
inc
movs
(bad)
std
jmp
pop
lahf
sbb
inc
call
loope
mov
push
pushf
sar
inc
pop
ficom
bound
out
xor
outs
pusha
lahf
pop
fadd
jmp
mov
push
pushf
fcomp
push
arpl
inc
jmp
cmp
mov
call
lock
mov
mov
mov
mov
push
je
rcl
pushf
fimul
fstp
jmp
arpl
cmp
inc
hlt
cmp
pushf
sar
inc
je
aam
pushf
fdivr
xchg
rcr
xlat
inc
call
sbb
cmp
fwait
sbb
inc
call
adc
inc
jmp
jnp
mov
mov
jmp
mov
pop
scas
cwde
pop
mov
stos
je
inc
jmp
retf
jae
push
pusha
push
js
sbb
mov
mov
mov
inc
pop
pushf
pop
xor
jmp
ficomp
xchg
add
sub
bound
push
pusha
push
js
sbb
push
pushf
fimul
lds
fwait
sbb
inc
call
cmp
sub
xor
push
pusha
push
js
sbb
sbb
push
jne
mov
(bad)
pusha
xor
pusha
daa
inc
(bad)
jnp
pop
fcmove
jmp
pop
ficom
jmp
in
inc
jmp
bound
inc
call
adc
pop
mov
data16
xor
and
lods
sbb
call
arpl
int3
lahf
fldenv
mov
dec
arpl
(bad)
push
cmp
xchg
cmp
inc
call
sbb
enter
xor
int3
aam
jmp
pushf
pop
xor
push
js
sbb
push
pushf
fadd
push
xchg
(bad)
xchg
cld
mov
mov
call
arpl
inc
inc
mov
xchg
imul
xchg
inc
pop
mov
jbe
mov
jne
pushf
pop
cmp
pushf
push
cmp
pushf
pop
mov
jmp
cmova
je
dec
jmp
adc
pop
inc
jmp
fidivr
xchg
pop
mov
jmp
pop
mov
adc
push
pop
fimul
bound
rcl
arpl
adc
bound
inc
jmp
ficomp
xchg
popa
mov
sahf
jl
pop
cmp
mov
xor
xchg
push
mov
mov
out
arpl
movs
push
pushf
mov
inc
fwait
sbb
inc
jmp
rdpmc
xchg
mov
mov
inc
je
rcl
pushf
fdivr
pop
xor
jmp
ficomp
xchg
popa
mov
jb
pushf
pop
cmp
mov
dec
outs
fstp
xchg
and
inc
call
pop
fidivr
jmp
lods
mov
dec
cmc
adc
mov
adc
bound
inc
jmp
bound
inc
jmp
bound
out
push
pop
fisub
bound
out
push
arpl
push
jmp
js
inc
jmp
bound
inc
jmp
bound
cmp
push
and
mov
lahf
sbb
inc
call
sbb
xor
arpl
mov
and
int3
sbb
fisubr
bound
out
push
pop
loop
jmp
nop
aam
ret
inc
inc
pop
outs
inc
inc
xchg
aam
into
arpl
inc
inc
xchg
aam
retf
inc
inc
pop
outs
inc
inc
xchg
(bad)
pusha
daa
inc
(bad)
jnp
sbb
xor
arpl
mov
mov
add
fistp
xor
mul
mov
push
clc
(bad)
mov
jb
jp
push
pushf
pop
cmp
mov
inc
adc
mov
cmp
lock
push
pushf
cwde
std
jmp
pop
fidivr
pop
mov
push
pushf
fdivr
sub
test
jmp
sbb
mov
std
neg
sbb
pop
cmp
fld
xor
(bad)
inc
daa
(bad)
(bad)
int
ja
jg
pusha
mov
out
or
cld
mov
fistp
mov
inc
and
fidiv
(bad)
inc
loope
(bad)
std
jmp
mov
jle
jp
push
neg
push
je
fst
pushf
(bad)
jg
je
fist
pushf
add
leave
(bad)
pop
xchg
jo
jmp
pop
add
jne
scas
mov
adc
jmp
push
adc
iret
clc
push
pushf
(bad)
dec
pop
ins
(bad)
jle
mov
pop
cmp
movs
sar
pushf
fcomp
push
pop
pop
push
mov
pop
mov
adc
(bad)
stc
push
cwde
pop
mov
pushf
pushf
std
clc
(bad)
fstp
mov
pushf
push
js
adc
mov
push
pushf
pop
mov
out
pop
mov
xchg
sbb
daa
push
pushf
pop
push
jbe
pop
mov
push
pushf
outs
js
movs
jg
sbb
cwde
pop
xor
pop
mov
jmp
push
mov
loopne
addr16
mov
mov
(bad)
fstp
bound
pop
mov
push
ja
inc
adc
dec
lock
mov
adc
pop
inc
adc
mov
bound
sbb
daa
push
pushf
dec
int3
adc
pop
mov
push
pushf
fbstp
push
cmp
and
std
test
fcomp
daa
arpl
daa
push
pushf
pop
int3
adc
pop
mov
push
pushf
fbstp
adc
inc
jmp
add
mov
(bad)
jne
mov
ja
pop
mov
push
pushf
push
sbb
push
mov
push
jne
inc
jmp
add
mov
(bad)
jne
mov
aas
ins
(bad)
jle
xchg
inc
daa
push
pushf
pop
jg
jo
stc
push
sahf
pop
mov
jmp
add
mov
(bad)
jne
mov
push
xchg
pop
mov
push
pushf
pop
jg
fadd
stc
push
sahf
pop
mov
jmp
sub
daa
push
pushf
(bad)
dec
pop
ins
(bad)
jle
xchg
inc
daa
push
pushf
pop
push
adc
ret
popf
pop
or
pop
mov
out
cdq
cmp
test
stc
push
fdiv
sbb
add
mov
adc
mov
(bad)
fstp
adc
mov
mov
pop
mov
push
jne
mov
bound
sbb
daa
push
pushf
pop
push
mov
dec
lahf
pop
fdivr
adc
pushf
outs
js
push
pop
mov
mov
pop
cwde
xchg
pop
push
mov
pushf
(bad)
jo
push
pop
sbb
sbb
call
(bad)
loopne
cmp
xchg
and
scas
ficomp
xchg
pushf
pop
mov
push
pushf
pop
(bad)
sub
jnp
(bad)
sub
daa
push
pushf
pop
push
and
int3
mov
cmp
pop
mov
std
mov
push
mov
lahf
pop
fbstp
push
ja
mov
jne
mov
mov
cdq
sub
pushf
test
mov
push
pushf
pop
xor
fst
mov
push
adc
cdq
mov
cdq
das
sbb
js
pushf
pop
xor
push
push
adc
(bad)
cli
push
pop
mov
mov
fldenv
sbb
(bad)
mov
in
fsubr
mov
push
pushf
ficom
ficomp
sbb
sbb
sbb
mov
push
add
push
sub
fadd
adc
dec
cmp
pop
int
sbb
inc
adc
adc
adc
sti
xchg
loope
mov
push
add
mov
out
cdq
xor
fst
mov
push
xchg
jmp
mov
push
data16
in
cdq
sub
arpl
pop
mov
out
cdq
cmp
nop
iret
clc
push
pushf
mov
lahf
push
push
xor
nop
iret
clc
push
push
pop
xor
mov
push
pushf
mov
mov
push
movs
pop
mov
fcomp
int
mov
xor
clc
push
pushf
mov
lahf
push
push
xor
nop
iret
clc
push
push
pop
xor
mov
sbb
mov
mov
sar
movs
pop
mov
fcomp
int
pop
int3
mov
mov
sbb
or
mov
dec
push
pushf
in
lahf
jns
call
bound
add
fcomp
loope
(bad)
std
jmp
cli
push
hlt
push
add
into
dec
pushf
pop
xor
hlt
dec
add
push
xchg
ret
pop
mov
push
hlt
ja
push
pushf
or
ret
pop
mov
push
and
mov
pushf
test
lahf
fldenv
add
push
inc
ret
pop
mov
push
hlt
adc
push
pushf
or
ret
pop
mov
push
hlt
add
push
pushf
or
ret
pop
mov
push
ret
add
leave
(bad)
pop
xchg
jo
jmp
retf
in
and
xchg
aad
pop
int3
mov
es
call
push
pushf
cwde
std
inc
mov
jae
pop
xor
out
sbb
pop
mov
push
pushf
(bad)
out
pushf
(bad)
jmp
mov
lahf
inc
outs
pusha
lahf
pop
(bad)
ret
std
into
popf
pop
mov
pop
pushf
pop
mov
push
imul
cdq
sub
push
pushf
(bad)
std
mul
int3
mov
sub
mov
dec
pushf
pop
dec
cmc
adc
cwde
std
mov
pop
cmp
push
adc
add
jmp
pop
mov
dec
aaa
mov
push
js
inc
add
stc
push
adc
pushf
xor
push
adc
sbb
neg
push
neg
adc
pop
inc
ds
inc
arpl
sbb
(bad)
call
ja
pop
inc
adc
jmp
push
neg
arpl
mov
bnd
fst
pushf
out
push
pushf
pop
dec
cmc
adc
mov
in
pushf
mov
mov
jmp
js
inc
add
stc
push
pop
sbb
ficom
mov
add
aad
(bad)
pop
xchg
jo
jg
pusha
jp
push
rcl
std
jmp
dec
jae
(bad)
std
retf
inc
popf
fst
push
ins
aam
push
adc
stos
mov
cli
adc
xor
std
out
int3
sar
dec
mov
xor
jmp
mov
push
pushf
aam
loop
pop
cmp
dec
clc
push
pushf
xchg
jnp
adc
pop
(bad)
adc
aas
fs
jg
cdq
sub
pushf
mov
inc
add
ret
test
lahf
fldenv
jnp
adc
or
inc
pop
sub
adc
jmp
push
lods
mov
test
pushf
pop
mov
push
stos
pop
test
pushf
pop
mov
push
stos
pop
test
pushf
pop
mov
push
stos
pop
test
pushf
pop
mov
push
stos
pop
test
pushf
pop
mov
push
pushf
aam
push
adc
mov
sahf
mov
push
arpl
mov
cwde
pop
fisubr
mov
aam
fisubr
push
pushf
pop
xor
(bad)
push
push
add
xlat
mov
xchg
jbe
mov
mov
aam
and
in
pop
mov
sbb
dec
scas
das
pop
sub
lahf
fcom
xchg
jmp
mov
sbb
sbb
pop
push
xor
push
pushf
(bad)
dec
rcr
sub
inc
jge
dec
xor
push
pushf
or
mov
xchg
push
mov
in
add
jbe
xchg
(bad)
lahf
sbb
je
xor
aam
push
adc
mov
(bad)
cwde
aam
loop
dec
mov
std
mov
xor
add
mov
push
call
pop
push
and
inc
jmp
pushf
fild
fs
cmp
call
(bad)
sahf
fild
fcom
sbb
mov
out
pop
mov
sbb
pop
mov
sub
pop
mov
out
pop
mov
xchg
mov
(bad)
pusha
adc
movs
pop
cmp
cwde
fdivr
adc
pop
mov
arpl
(bad)
inc
pop
sbb
mov
out
pop
mov
xchg
mov
(bad)
inc
xchg
je
cmp
call
(bad)
cwde
push
push
adc
pop
int3
adc
sub
inc
mov
in
add
jbe
xchg
(bad)
popf
xchg
(bad)
cwde
(bad)
std
out
pop
sbb
pop
fcom
pop
or
mov
push
pushf
pop
cmp
mov
cmps
lock
mov
(bad)
inc
xchg
je
cmp
call
(bad)
lahf
fild
fcom
xchg
jmp
int3
sbb
sub
push
jmp
pop
mov
inc
(bad)
pop
mov
lahf
cwde
dec
mov
xchg
arpl
push
pushf
push
cmp
ret
aad
(bad)
pop
xchg
jo
jmp
retf
mov
mov
or
arpl
xchg
arpl
dec
xchg
arpl
stos
push
pop
sbb
movs
cdq
into
into
jne
mov
sbb
pop
int3
mov
leave
dec
jns
sahf
aam
add
xor
popf
xchg
(bad)
sbb
mov
sbb
pop
cmps
sub
push
call
pop
mov
jmp
std
jmp
inc
push
pusha
(bad)
mov
push
pusha
sub
mov
fadd
popf
pushf
(bad)
std
out
adc
(bad)
xor
popf
test
fadd
popf
leave
stos
xor
lahf
inc
mov
in
cdq
sub
xor
popf
test
int3
popf
(bad)
cmp
cwde
(bad)
std
out
pop
pop
mov
adc
cmps
pop
pop
or
mov
mov
out
adc
cmps
adc
(bad)
std
out
pop
pop
push
lahf
cwde
bound
inc
xchg
jmp
mov
stos
ficomp
bound
inc
xchg
pop
push
out
(bad)
xchg
jnp
adc
pop
mov
push
iret
or
inc
inc
jmp
arpl
mov
push
sbb
mov
jmp
outs
mov
jmp
sub
pop
leave
arpl
push
xchg
outs
mov
jmp
and
cmp
pushf
sub
stc
arpl
add
pushf
pop
int
ja
mov
or
mov
push
push
xor
push
pushf
push
push
mov
or
jmpw
mov
push
xchg
jmp
inc
jge
inc
xor
push
pushf
push
jns
sahf
(bad)
sub
jmp
fstp
repz
popf
or
jmpw
mov
push
sbb
dec
stc
arpl
dec
stc
arpl
test
inc
in
push
pushf
push
cmp
rcr
lods
push
jmp
or
adc
arpl
push
xchg
(bad)
adc
push
jmp
pop
dec
lods
inc
add
mov
arpl
mov
jmp
or
push
je
inc
jmp
inc
mov
or
pushf
aam
ret
inc
lahf
dec
sahf
push
add
scas
lahf
inc
pop
mov
xchg
push
mov
test
pushf
or
mov
pop
fmul
pop
mov
inc
stc
arpl
test
pushf
fs
pusha
dec
sar
inc
je
loopne
pushf
mov
mov
jmp
pushf
pop
mov
push
arpl
push
stc
arpl
inc
jmp
arpl
jl
adc
sub
xchg
cmp
jmpw
xor
ja
mov
adc
sahf
pop
adc
or
in
lock
fs
fs
jmp
arpl
push
pushf
sub
mov
lahf
inc
pop
mov
xchg
sbb
inc
jmp
pushf
dec
mov
out
pop
into
mov
xchg
movs
inc
jmp
jae
inc
push
pushf
pop
mov
jmp
pushf
pop
adc
arpl
cli
push
arpl
pusha
leave
arpl
mov
push
xchg
jmp
inc
xlat
jle
xor
mov
push
pushf
(bad)
sub
xchg
cmp
xor
pop
mov
push
adc
mov
xor
(bad)
(bad)
xor
je
inc
jmp
arpl
popa
xlat
jne
jns
sahf
pop
cmc
jmp
cmp
xchg
and
mov
jmp
pushf
fild
push
jmp
sbb
mov
enter
aam
dec
mov
lahf
or
jmpw
jp
lahf
pop
xor
pop
ficomp
enter
add
jmp
sahf
(bad)
cmp
popf
sbb
jmpw
sub
adc
inc
mov
addr16
inc
mov
addr16
sbb
addr16
inc
add
cmp
push
pushf
aam
ret
inc
das
sbb
addr16
sbb
cmp
pop
sbb
add
push
jmp
pop
cwde
jl
aam
mov
jbe
jmp
sahf
push
sbb
aaa
mov
popf
pop
inc
xor
inc
jmp
call
jmp
inc
xlat
jle
xor
mov
ins
leave
arpl
sub
sub
jmp
mov
xchg
pop
xor
hlt
pop
test
pushf
or
mov
jmp
sbb
mov
push
pushf
push
cmp
popf
pop
mov
jmp
mov
sub
sbb
arpl
pop
pushf
pop
xor
pop
dec
mov
xchg
jbe
xor
xchg
js
inc
jmp
arpl
addr16
js
inc
jmp
movs
pop
int
adc
fild
out
mov
xchg
movs
pop
int
adc
fild
out
mov
xchg
movs
pop
int3
pop
shl
push
pushf
push
push
cmp
inc
jmp
sub
int3
arpl
inc
jmp
mov
sub
push
pushf
pop
cmp
arpl
cld
es
(bad)
cmp
std
push
(bad)
dec
std
xchg
aam
loop
mov
dec
pushf
mov
test
cmps
loop
leave
arpl
sbb
arpl
sbb
arpl
add
cmp
mov
push
pushf
pop
mov
sub
sub
push
pushf
pop
mov
sub
sub
push
pushf
pop
mov
ficom
mov
sbb
bound
mov
jmp
inc
mov
addr16
arpl
add
push
call
mov
jmp
jae
inc
xlat
jle
xor
pop
mov
xlat
jge
mov
add
jmp
sbb
add
push
cwde
pop
mov
bound
sbb
inc
jmp
arpl
dec
stc
arpl
test
inc
in
push
pushf
push
cmp
dec
ret
aad
(bad)
pop
xchg
jo
jmp
retf
aam
push
pop
sbb
scas
mov
stos
jb
pop
jle
arpl
imul
bound
sbb
mov
push
fs
std
ficom
xchg
xor
(bad)
std
out
adc
pusha
fwait
test
out
push
pushf
pop
dec
mov
and
test
out
push
pushf
pop
dec
mov
xor
cmps
pop
mov
sbb
(bad)
jmp
adc
or
fldenv
mov
sub
dec
pop
arpl
mov
xchg
fldenv
test
jmp
mov
push
pushf
pop
xor
cmps
sbb
push
pushf
pop
cmp
fprem
push
pushf
(bad)
jmp
popf
bound
pushf
pop
lds
sti
pop
mov
fadd
jmp
pop
mov
fistp
aam
mov
int3
sbb
movs
mov
push
loope
cmp
pop
mov
fistp
push
popf
lahf
int
pop
mov
int
sbb
inc
adc
pop
jbe
lahf
leave
cmps
mov
fistp
(bad)
pushf
pop
mov
push
jmp
pop
mov
lahf
bound
pushf
pop
int
push
mov
push
arpl
push
popa
pop
cmp
push
mov
retf
jmp
ja
xor
cmps
sbb
push
arpl
sbb
sbb
and
mov
std
push
pushf
push
push
adc
pushf
sub
sub
inc
dec
ret
aad
(bad)
pop
inc
retf
arpl
cmp
fmul
hlt
mov
rcl
je
jmp
mov
mov
std
xchg
fild
fsubr
push
ja
not
adc
pushf
out
mov
add
mov
push
mov
scas
repnz
xchg
lahf
fs
lahf
sbb
jg
fs
jg
jmp
push
xor
jmp
pushf
pop
xor
jmp
pushf
pop
cmp
mov
inc
daa
fs
jg
push
out
pop
or
repz
loopne
push
xor
push
mov
push
arpl
mov
pushf
mov
inc
pushf
pop
out
pop
or
repz
mov
inc
retf
mov
imul
push
pushf
xor
mov
push
neg
pushf
pop
cmp
jmp
pop
mov
jmp
nop
pop
int3
adc
sbb
imul
daa
pop
mov
jl
or
int
mov
push
int3
xor
mov
xchg
jae
mov
xchg
loope
mov
sbb
sar
out
adc
stos
jmp
jmp
push
mov
inc
pushf
pop
xor
mov
lahf
fs
lahf
pop
add
dec
push
pushf
in
lahf
jns
jmp
retf
loopne
cmp
cmps
xor
neg
xchg
pushf
pop
mov
jl
aaa
mov
arpl
xor
sbb
pop
cmp
arpl
mov
jl
xor
push
xchg
int
mov
xlat
pop
xchg
inc
push
sbb
mov
aad
pop
xor
jmp
push
push
mov
push
pusha
psrld
scas
pop
push
pushf
or
int
mov
push
pushf
or
int3
pop
mov
push
ret
add
fistp
xor
pop
mov
inc
retf
loopne
sbb
dec
add
jnp
std
out
adc
fistp
jl
xor
mov
(bad)
jl
mov
out
imul
xchg
bound
push
cmp
pop
rcl
neg
(bad)
js
mov
push
pusha
cmova
mov
xchg
pop
xor
mov
xor
retf
pop
pushf
pop
mov
fadd
out
pop
or
repz
out
inc
pop
sub
je
push
cmp
rcr
lahf
inc
mov
sbb
pop
xchg
pop
sbb
inc
arpl
mov
fnstsw
jmp
pushf
fmulp
jmp
pop
push
pushf
mov
inc
pushf
pop
cmp
mov
std
(bad)
push
push
adc
sbb
mov
push
cmps
add
xchg
fild
cwde
popa
xchg
push
cmps
and
jl
mov
push
pop
fwait
mov
fldenv
xor
add
dec
push
pushf
in
lahf
jns
jmp
retf
aam
push
pop
sub
pop
and
push
pusha
fwait
lahf
push
pushf
aaa
xor
pop
push
jecxz
pop
mov
add
int3
aaa
(bad)
neg
pop
push
test
push
jmp
imul
push
je
jmp
(bad)
jp
pop
(bad)
in
jmp
xor
pop
mov
inc
retf
xchg
shl
inc
pop
pusha
lahf
pop
cmp
jle
mov
xchg
stc
mov
xchg
stc
mov
xor
push
and
lods
sbb
push
imul
loope
mov
push
jle
mov
mov
arpl
push
imul
sub
inc
sbb
sbb
pop
fnstenv
int
pop
xor
mov
and
cmp
pop
int
pop
sbb
fldenv
pop
sbb
mov
fcomp
xchg
pop
inc
mov
call
icebp
mov
xchg
icebp
mov
mov
loope
(bad)
std
into
adc
push
movhps
or
(bad)
cmc
lahf
aad
pushf
pop
mov
leave
mov
std
repnz
pushf
xor
(bad)
jo
fnstenv
dec
not
mov
orps
call
mov
leave
mov
std
repnz
sbb
leave
push
mov
into
push
xchg
(bad)
popf
sbb
mov
mov
dec
(bad)
xchg
jnp
or
sub
fcomp
lods
sbb
clc
push
or
ror
add
xchg
pop
iret
sub
or
sub
xchg
iret
sub
or
sub
iret
sub
or
sub
iret
sub
or
sub
iret
sub
ficomp
lods
dec
mov
call
pop
sbb
sub
or
sub
xchg
iret
sub
or
sub
inc
iret
sub
or
sub
iret
sub
lea
sub
pushf
pop
mov
xchg
mov
xchg
iret
xor
or
sub
or
xor
iret
sub
or
cmp
cwde
iret
sub
or
(bad)
cli
or
sub
or
cmp
pushf
iret
sub
or
fld
sti
mov
pop
popa
mov
cmp
fcomp
or
pop
push
sbb
jnp
or
sub
fcomp
jl
iret
sub
or
sub
or
jmp
sar
push
or
popa
xchg
sub
pop
iret
sub
or
sub
iret
sub
or
sub
imul
xchg
sub
or
sub
mov
sub
lods
iret
sub
or
sub
outs
iret
sub
ficomp
xchg
fs
sub
or
sub
or
popa
xchg
sub
pop
iret
sub
or
sub
iret
sub
or
sub
imul
xchg
sub
or
sub
pop
sbb
sub
or
sub
outs
iret
sub
or
sub
fs
inc
adc
or
inc
pop
add
lahf
fst
push
pusha
mov
sub
aam
jmp
inc
daa
push
jg
ins
pop
mov
push
adc
mov
loope
mov
in
in
sbb
inc
push
jmp
pop
push
cmp
or
push
pushf
(bad)
std
cli
and
(bad)
push
pushf
loopne
push
pushf
pop
mov
leave
movs
xor
mov
and
gs
jns
fnstenv
jp
leave
movs
add
fistp
loope
mov
std
jmp
lods
sub
sub
push
xchg
jmp
inc
aas
push
xlat
test
sub
sub
mov
into
popf
scas
clc
sbb
dec
mov
shl
cmp
out
ret
xor
mov
inc
je
not
pushf
push
push
push
addr16
into
popf
scas
call
mov
int3
mov
pop
pushf
pop
rcl
adc
dec
inc
adc
mov
pop
pushf
pop
cmp
mov
sub
pop
mov
sbb
sbb
test
jecxz
pop
or
repz
mov
inc
retf
xlat
mov
push
pushf
mov
pop
pushf
pop
add
pushf
pop
js
adc
xchg
jns
xchg
sahf
inc
or
(bad)
jp
leave
mov
sub
cli
push
pushf
sub
adc
pop
xor
arpl
cmp
xchg
(bad)
jle
pop
push
cmp
sahf
pop
mov
xlat
jnp
xor
mov
je
sub
cli
push
adc
mov
sbb
and
jnp
inc
and
(bad)
dec
adc
pushf
or
rcr
jl
xor
mov
adc
and
mov
mov
loop
push
adc
fidivr
out
pop
mov
jmp
mov
pop
sbb
xchg
add
fisub
sbb
retf
mov
out
ja
add
iret
pop
mov
retf
xor
lahf
sbb
mov
test
fldenv
cli
push
lahf
pop
pusha
stos
ficomp
push
fs
mov
(bad)
clc
adc
sbb
mov
push
jle
mov
adc
pop
cmp
sub
je
cmc
push
pushf
(bad)
std
into
je
cmc
push
pushf
aam
into
xchg
call
pinsrw
pop
dec
(bad)
test
and
add
lahf
pop
js
ficomp
(bad)
jl
mov
mov
loop
push
adc
ficom
scas
pop
mov
loop
dec
push
push
pop
sbb
xchg
add
fisub
sbb
retf
mov
out
dec
xor
lahf
sbb
mov
test
fldcw
cli
push
lahf
pop
pusha
stos
ficomp
push
ins
sub
test
and
push
(bad)
jle
lods
cmp
pop
push
push
sbb
fwait
add
inc
jae
pop
popf
mov
pop
stos
ficomp
sbb
cli
push
adc
jnp
push
pushf
ffreep
stc
popf
sub
sub
push
inc
adc
loop
push
int3
mov
jmp
mov
jl
xor
mov
(bad)
xchg
push
mov
xchg
outs
daa
scas
push
pushf
xor
call
jmp
aad
mov
paddq
inc
je
lock
pushf
outs
js
ja
add
mov
(bad)
std
ret
out
(bad)
xchg
jnp
adc
pop
mov
test
push
gs
rcl
test
lahf
sbb
jle
cdq
sub
pushf
cmc
mov
jmp
ins
outs
dec
lahf
pop
mov
pop
pushf
pop
add
sar
dec
cld
pop
movs
mov
fcom
fdivr
adc
mov
inc
pop
ja
push
xchg
pop
mov
lods
dec
adc
push
int
jns
jbe
inc
adc
cmps
aas
push
(bad)
push
aam
xlat
sub
arpl
inc
pop
push
sbb
xchg
sub
sbb
jmp
xlat
pop
mov
pop
jmp
mov
cmp
and
test
xor
jmp
ficomp
jecxz
sbb
inc
jmp
xlat
pop
mov
jl
xor
mov
xchg
addr16
int3
mov
push
pushf
pop
xor
arpl
mov
adc
cli
push
int3
mov
pop
pushf
pop
rcl
adc
dec
jmp
mov
mov
push
pushf
mov
inc
(bad)
lods
pop
mov
out
cdq
inc
mov
je
(bad)
push
pushf
mov
mov
push
pushf
sar
inc
je
repnz
pushf
sar
inc
hlt
and
sar
inc
hlt
pop
mov
push
pushf
pop
add
jp
cmp
lahf
pop
mov
mov
push
hlt
xchg
addr16
pushf
sar
inc
hlt
pop
mov
push
pushf
pop
jmp
lock
hlt
and
pushf
aaa
mov
sbb
cmp
ret
and
fistp
xor
pop
mov
inc
retf
arpl
jae
out
mov
xor
arpl
mov
imul
xchg
stc
mov
call
jl
aaa
xchg
xchg
pop
rcl
neg
push
arpl
mov
jmp
pop
mov
jmp
pushf
sub
fldenv
rcl
neg
arpl
icebp
push
pushf
ficom
movs
pop
mov
jmp
pop
mov
aad
(bad)
pop
inc
and
xchg
je
ficom
fstp
jmp
fistp
jl
cmova
mov
mov
jmp
pop
mov
dec
pop
or
repz
pop
icebp
mov
test
lahf
fldenv
rcl
adc
lods
inc
arpl
test
jmp
mov
push
pushf
pop
cmp
test
jno
leave
(bad)
pop
inc
int3
or
scas
retf
mov
lahf
outs
inc
lahf
pop
sar
out
int3
sar
jmp
mov
push
neg
arpl
add
push
pushf
push
js
cwde
outs
js
stos
mov
lods
jmp
arpl
test
jmp
pop
mov
jmp
aam
mov
lahf
fs
lahf
pop
mov
lock
pushf
outs
js
ret
xchg
jnp
adc
or
popf
jmp
cmp
push
test
add
jns
loope
sbb
lahf
outs
inc
lahf
pop
sar
jmp
rcl
arpl
mov
jmp
pop
mov
daa
pop
mov
fld
inc
neg
push
arpl
test
jmp
pop
mov
jmp
fistp
daa
pop
mov
jmp
fistp
sbb
sbb
add
dec
lahf
pop
add
fistp
xor
int
out
inc
and
fidiv
fidivr
call
xchg
mov
pop
int3
xor
pushf
(bad)
mov
pop
mov
out
lods
cmps
xor
cmp
data16
out
jmp
mov
jl
aaa
jg
pushf
pop
rcl
neg
push
hlt
ds
pushf
mov
push
pushf
pop
sbb
dec
sbb
int3
push
pushf
push
js
cwde
outs
js
mov
mov
push
adc
fimul
xchg
dec
ret
scas
iret
sub
add
xchg
xchg
ficom
pop
xor
push
adc
(bad)
pop
inc
iret
or
popf
jmp
cwde
std
jmp
inc
lahf
pop
jbe
lahf
leave
mov
cmp
mov
cmps
xchg
into
int3
(bad)
dec
pop
inc
cmova
mov
push
pushf
pop
cmp
nop
(bad)
inc
aas
inc
aam
push
pop
pop
mov
(bad)
sahf
mov
xchg
fldenv
call
pop
push
arpl
fild
fs
cmp
call
rcr
popf
push
pushf
(bad)
pusha
push
ja
xor
popf
xchg
(bad)
cmp
mov
push
pusha
fstp
push
pushf
push
inc
bound
cmova
mov
push
pushf
pop
xor
(bad)
jp
pop
(bad)
in
jmp
mov
ret
add
fistp
xor
pop
mov
inc
retf
dec
xchg
cwde
std
out
jg
adc
pop
mov
push
pushf
(bad)
std
out
adc
cwde
mov
neg
push
xchg
fistp
lahf
fldcw
mov
cwde
ins
cmp
in
push
js
xchg
push
push
adc
pop
mov
sub
jns
aad
mov
cwde
std
call
xchg
call
test
pushf
pop
mov
rcr
fld
cmps
add
pop
mov
pop
imul
cli
adc
or
imul
dec
inc
sbb
(bad)
push
pushf
fdivr
mov
std
call
xor
std
loop
add
fistp
xor
and
mov
push
pushf
pop
jmp
retf
loope
push
pusha
gs
cwde
fcomp
push
pop
cli
push
jmp
sbb
inc
arpl
mov
jnp
ins
pop
dec
lahf
pop
push
arpl
outs
js
mov
mov
jmp
xchg
or
mov
pop
mov
sbb
mov
xor
and
mov
out
arpl
inc
jmp
aam
into
arpl
inc
jmp
ins
xor
adc
adc
pop
mov
inc
ficomp
lahf
sbb
jle
jmp
push
rcl
popf
pop
mov
push
adc
cdq
xor
(bad)
cmp
lahf
pop
fdiv
(bad)
test
pushf
sub
pop
xor
inc
jmp
pop
inc
inc
je
jne
arpl
jl
hlt
or
pushf
mov
std
push
pushf
fdivr
adc
pushf
mov
inc
inc
sbb
(bad)
movs
sbb
push
pushf
(bad)
dec
out
pop
movs
mov
neg
pop
inc
mov
je
std
push
pushf
fdivr
scas
mov
adc
pop
mov
push
add
pop
lds
pushf
out
push
pushf
pop
and
gs
inc
jmp
ficomp
(bad)
sbb
inc
push
and
(bad)
dec
out
pop
movs
mov
neg
pop
inc
mov
je
cld
push
pushf
fdivr
push
or
(bad)
js
mov
(bad)
cmp
mov
push
pushf
(bad)
dec
out
pop
movs
mov
neg
pop
inc
mov
je
cld
push
pushf
fdivr
and
push
pushf
out
push
pushf
pop
and
fadd
loope
push
jg
pop
mov
push
add
loop
jmp
mov
mov
push
pushf
pop
cmp
mov
addr16
pushf
aam
jmp
addr16
pushf
(bad)
pop
fcomp
xchg
pop
dec
cmp
pop
push
mov
push
pushf
out
push
pushf
pop
and
fadd
loope
shl
jl
mov
call
pushf
pop
cmp
xchg
aaa
mov
ficomp
mov
je
cld
push
pushf
fdivr
mov
push
pushf
out
push
pushf
pop
and
fadd
loope
shl
jl
mov
call
pushf
pop
cmp
xchg
aaa
mov
mov
je
sti
push
pushf
fdivr
in
sti
push
pushf
out
push
pushf
pop
and
fadd
loope
push
mov
pop
mov
push
add
loop
jmp
mov
mov
push
pushf
pop
cmp
mov
int
pushf
pop
dec
lock
mov
sti
push
pushf
out
adc
gs
mov
jmp
or
fistp
fwait
sbb
inc
arpl
inc
inc
hlt
(bad)
push
pushf
(bad)
inc
fistp
xchg
pop
jg
daa
fistp
scas
xchg
pop
mov
xchg
pop
lds
pushf
out
push
pushf
pop
and
gs
inc
jmp
ficomp
inc
fwait
test
ins
test
lahf
sbb
jle
ins
sbb
mov
out
pop
movs
mov
neg
pop
inc
mov
je
sti
push
pushf
fdivr
xchg
cli
push
pushf
out
push
pushf
pop
and
fadd
loope
rcr
inc
sbb
inc
call
pushf
pop
cmp
xchg
mov
push
pushf
pop
add
pop
mov
in
cdq
and
push
arpl
inc
jmp
ficomp
xchg
pop
push
xor
lods
scas
xor
hlt
enter
mov
inc
jmp
push
cmp
push
pushf
pop
cmp
mov
add
pop
mov
in
cdq
and
push
arpl
inc
jmp
ficomp
xchg
pop
push
push
das
ficomp
scas
xchg
pop
mov
xchg
pop
lds
pushf
mov
inc
inc
sbb
mov
mov
mov
out
pop
movs
mov
push
pushf
pop
add
pop
mov
popf
and
shr
inc
sbb
stc
push
pushf
fdivr
and
pop
pushf
pop
cmp
pushf
mov
pop
pushf
pop
jle
pushf
pop
inc
jmp
out
pop
mov
jmp
pop
push
imul
mov
inc
jmp
bound
jl
popa
mov
inc
jmp
adc
pop
mov
aam
or
mov
cli
pop
adc
pop
mov
lahf
or
inc
jmp
(bad)
outs
xchg
pop
ds
fwait
and
jmp
inc
sbb
mov
jg
pop
mov
ds
pop
mov
scas
arpl
cmp
xchg
and
mov
arpl
sub
int
adc
mov
popf
sbb
shl
sbb
stc
push
pushf
fdivr
mov
mov
pushf
pop
and
fadd
loope
ror
sbb
inc
call
pushf
pop
cmp
xchg
mov
push
pushf
pop
add
pop
mov
in
cdq
and
push
arpl
inc
jmp
fcomp
xchg
pop
push
xor
lods
scas
xor
je
clc
push
pushf
out
push
pushf
pop
and
fadd
loope
shl
jl
mov
call
pushf
pop
cmp
xchg
fidivr
xchg
pushf
pop
mov
call
arpl
inc
jmp
push
cmp
sbb
dec
loope
(bad)
cmp
lahf
pop
mov
pop
pushf
pop
xor
(bad)
cmp
call
pop
mov
push
arpl
mov
daa
ins
(bad)
jle
fld
push
push
pop
mov
call
popf
pop
mov
call
arpl
ror
sbb
inc
jmp
(bad)
paddusb
xchg
pop
push
xor
jmp
sbb
mov
sar
(bad)
add
lahf
ins
outs
dec
lahf
pop
sar
inc
xchg
call
inc
fwait
sbb
jmp
mov
fimul
mov
inc
jmp
sbb
or
jmp
ins
mov
inc
jmp
clc
cmp
sub
sub
mov
in
cdq
and
push
arpl
inc
jmp
mov
push
xor
popf
scas
xor
je
xchg
pushf
out
push
pushf
pop
and
fadd
loope
rcr
inc
sbb
inc
call
pushf
pop
cmp
xchg
mov
sub
mov
in
cdq
and
push
arpl
inc
jmp
mov
push
inc
mov
je
adc
fidivr
mov
jmp
arpl
cmp
inc
arpl
inc
jmp
mov
inc
jmp
sbb
js
sbb
inc
jmp
ficomp
mov
je
xchg
pushf
fdivr
pushf
xchg
pushf
out
push
pushf
pop
and
fadd
loope
ror
sbb
inc
call
pushf
pop
cmp
xchg
mov
sub
mov
in
cdq
and
push
arpl
inc
jmp
mov
push
xor
imul
jmp
mov
pop
mov
xchg
pop
lds
pushf
mov
inc
(bad)
adc
push
pop
fwait
mov
scas
cmp
jmp
mov
push
push
and
pop
mov
xchg
pop
lds
pushf
out
push
pushf
pop
and
gs
inc
jmp
ficomp
(bad)
mov
fwait
test
pushf
popa
mov
push
pushf
(bad)
dec
out
pop
movs
mov
enter
mov
je
xchg
pushf
fdivr
test
push
ret
mov
pop
mov
xchg
pop
lds
pushf
mov
inc
(bad)
push
fwait
mov
sub
mov
push
pushf
(bad)
dec
out
pop
movs
mov
neg
pop
inc
mov
je
test
pushf
fdivr
aam
push
pushf
out
push
pushf
pop
and
fadd
loope
push
outs
mov
pop
mov
inc
pop
loop
jmp
mov
mov
sub
xchg
enter
mov
je
test
pushf
fdivr
scas
xchg
out
cdq
push
sub
pop
mov
xchg
pop
lds
pushf
mov
inc
inc
bound
jle
cmp
jmp
mov
push
push
adc
pop
mov
xchg
pop
lds
pushf
mov
inc
(bad)
mov
fwait
mov
xchg
inc
jmp
mov
push
cmp
call
push
pushf
out
push
pushf
pop
and
fadd
loope
shl
jl
mov
call
pushf
pop
cmp
xchg
sar
inc
pop
fiadd
mov
cli
push
int3
mov
sub
sub
mov
in
cdq
and
push
arpl
inc
jmp
mov
push
rcl
inc
sbb
inc
call
pushf
pop
cmp
xchg
mov
sub
mov
in
cdq
and
push
arpl
inc
jmp
mov
push
add
pop
mov
(bad)
arpl
mov
(bad)
lahf
pop
mov
rcr
out
popf
and
sar
inc
sbb
test
pushf
fdivr
mov
push
pushf
out
push
pushf
pop
and
fadd
loope
shl
jl
mov
call
pushf
pop
cmp
xchg
aaa
retfw
ficomp
mov
je
adc
fdivr
call
mov
pushf
pop
and
fadd
loope
shl
jl
mov
call
pushf
pop
cmp
xchg
fimul
fstp
(bad)
adc
and
(bad)
dec
out
pop
movs
mov
sub
pushf
pop
mov
popf
and
shr
inc
sbb
adc
fdivr
(bad)
gs
pushf
mov
inc
(bad)
adc
mov
jl
xor
mov
push
pushf
pop
inc
arpl
xor
sbb
pop
inc
mov
je
adc
xor
inc
call
sub
or
(bad)
cld
addr16
jmp
stos
pop
mov
call
pushf
pop
xor
popf
scas
xor
iret
mov
and
inc
jmp
pop
or
repz
pop
out
test
adc
fiadd
arpl
inc
push
ja
mov
fldenv
cli
push
adc
inc
call
sub
push
adc
cwde
rcl
hlt
fldenv
pushf
sar
inc
hlt
pop
mov
out
mov
std
jmp
mov
pop
shr
inc
sbb
cli
push
hlt
pop
mov
out
mov
mov
push
hlt
mov
push
pushf
aaa
mov
lahf
ins
mov
cmp
rcl
push
ret
xchg
jnp
adc
pop
mov
test
adc
cwde
cmp
pushf
aam
push
sbb
mov
neg
mov
xor
cdq
pop
mov
call
inc
lahf
pop
outs
arpl
pop
cdq
mov
push
pushf
aam
push
adc
mov
mov
mov
(bad)
push
pushf
(bad)
cmp
jmp
arpl
xor
aam
push
mov
mov
push
adc
mov
xor
retf
and
inc
jmp
arpl
mov
jmp
popa
mov
mov
popf
adc
inc
jmp
cdq
aam
bound
inc
fwait
enter
enter
adc
mov
mov
push
pushf
mov
and
inc
jmp
pushf
pop
rol
neg
xchg
cmp
mov
inc
test
pusha
adc
pushf
pop
xor
jmp
ficomp
mov
sahf
pop
mov
jmp
xchg
lahf
int
retf
and
mov
call
popf
pop
mov
jmp
sub
fisub
pushf
pop
inc
mov
arpl
sub
arpl
inc
jmp
arpl
inc
jmp
arpl
inc
jmp
outs
mov
xor
xchg
lahf
int
retf
and
mov
retf
xor
jmp
pushf
pop
xor
mov
xor
adc
or
arpl
inc
jmp
movs
pop
mov
jmp
arpl
xor
jmp
pushf
pop
cmp
adc
aas
fs
jg
sbb
inc
jmp
pushf
cwde
cmp
pop
pushf
pop
mov
call
pop
loop
jmp
mov
jg
je
inc
jmp
sbb
push
adc
add
arpl
inc
jmp
popa
mov
add
arpl
mov
jl
xor
inc
jmp
je
mov
pushf
push
js
sbb
or
(bad)
and
mov
out
adc
mov
addr16
pushf
aaa
(bad)
pop
xor
jmp
pushf
pop
cmp
mov
inc
push
ja
cmp
xchg
add
call
jmp
jl
push
pushf
(bad)
jnp
pop
sub
push
je
mov
pushf
fistp
pop
push
fcmove
jmp
mov
mov
call
pop
mov
push
pop
loop
jmp
mov
mov
das
test
mov
push
adc
inc
call
je
mov
pushf
xor
cli
push
adc
inc
call
fsub
inc
jmp
arpl
cmp
pushf
mov
xchg
cmp
inc
jmp
cmp
push
ja
cmp
pushf
fidivr
lods
pop
mov
jmp
test
mov
push
imul
jmp
in
ins
mov
mov
je
mov
pushf
mov
inc
(bad)
cmp
push
pop
fisub
arpl
mov
pushf
test
lahf
sbb
inc
jmp
ret
aam
pop
in
lahf
jns
push
push
iret
or
popf
ror
xchg
pop
(bad)
lahf
outs
inc
lahf
pop
mov
mov
pushf
(bad)
jp
adc
outs
inc
lahf
pop
mov
mov
pushf
(bad)
jp
adc
dec
push
mov
pop
cmp
inc
push
push
mov
pop
mov
inc
push
push
cmovae
push
pop
dec
push
cmovae
cld
push
mov
rcl
je
mov
pushf
(bad)
jle
jae
not
pushf
outs
js
loope
mov
push
ins
xlat
mov
push
int3
(bad)
dec
push
int3
mov
and
int
adc
(bad)
das
lods
pop
mov
mov
call
push
pushf
(bad)
inc
aas
fs
jg
jmp
mov
mov
leave
mov
call
push
iret
push
rcpps
cld
adc
pop
push
fmul
inc
je
mov
pushf
sar
out
int3
xor
jmp
pushf
xor
inc
and
pop
xor
sbb
pop
shr
retf
and
pop
xor
(bad)
lods
outs
mov
daa
pushf
pop
xor
add
dec
push
pushf
in
lahf
jns
hlt
or
mov
dec
xchg
loopne
push
cmp
out
mov
xor
and
mov
pushf
test
lahf
sbb
pop
jmp
sbb
pop
jmp
pushf
sar
inc
adc
js
arpl
cli
push
je
xchg
push
pushf
(bad)
jle
pop
push
cmp
pushf
pop
mov
push
pushf
or
mov
je
mov
pushf
fdivr
lahf
int
arpl
jo
arpl
xchg
es
pop
xor
imul
jmp
fdiv
jmp
pushf
sar
inc
adc
js
arpl
xchg
push
pushf
push
js
test
inc
aas
fs
jg
arpl
jl
arpl
mov
(bad)
jmp
mov
mov
dec
jo
push
lods
lahf
clc
std
xchg
ficom
aad
mov
dec
ret
aad
(bad)
pop
scas
mov
push
je
xchg
push
pushf
or
inc
pop
add
dec
sbb
pop
xor
popf
scas
xor
iret
aaa
mov
dec
lods
pop
mov
jmp
pushf
sub
pop
xor
inc
inc
je
add
arpl
jl
hlt
or
pushf
or
push
test
mov
loopne
xor
push
adc
cdq
rcr
sbb
pop
jmp
test
mov
imul
pop
mov
xchg
pop
lds
hlt
scas
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
in
push
pushf
out
push
pushf
pop
and
fadd
loope
push
mov
call
push
add
loop
mul
out
jle
cmp
adc
mov
(bad)
cmp
mov
(bad)
sbb
mov
push
pushf
(bad)
dec
out
pop
movs
mov
neg
pop
xor
jmp
pushf
pop
cmp
xchg
(bad)
dec
aas
ins
(bad)
jle
stos
cmp
adc
mov
(bad)
sbb
pop
fwait
mov
fsubr
and
(bad)
dec
out
pop
movs
mov
neg
pop
xor
jmp
pushf
pop
cmp
xchg
mov
and
pushf
pop
mov
in
cdq
and
push
and
(bad)
dec
out
into
rol
inc
hlt
pop
fs
pushf
rol
inc
je
mov
pushf
fdivr
sub
push
adc
mov
jle
cmp
adc
mov
inc
mov
lahf
ins
test
lahf
sbb
jle
sub
mov
push
pushf
(bad)
dec
out
pop
movs
mov
neg
pop
xor
jmp
pushf
pop
cmp
xchg
aaa
mov
ficomp
xchg
pushf
mov
add
pop
cmp
xchg
mov
and
pop
add
pop
mov
in
cdq
and
adc
mov
dec
ins
mov
jle
cmp
adc
mov
(bad)
sbb
mov
lahf
ins
test
lahf
sbb
jle
lods
ins
mov
push
pushf
(bad)
dec
out
pop
movs
mov
and
pop
add
pop
mov
fwait
and
jmp
inc
sbb
pop
jmp
scas
pop
mov
aas
inc
sbb
pop
jmp
scas
pop
mov
imul
pop
mov
xchg
pop
lds
hlt
scas
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
adc
push
pushf
sar
inc
je
mov
pushf
fdivr
scas
mov
adc
pop
mov
push
add
pop
lds
hlt
scas
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
inc
push
pushf
sar
inc
je
mov
pushf
fdivr
cmp
push
pushf
pop
and
fadd
loope
shl
jl
mov
jmp
lods
pop
mov
loopne
jae
push
arpl
mov
sbb
jmp
inc
sbb
pop
jmp
lods
pop
mov
or
pop
mov
xchg
pop
lds
hlt
scas
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
mov
mov
pushf
pop
and
fadd
loope
shl
jl
mov
jmp
lods
pop
mov
sub
pop
mov
cli
inc
mov
push
es
pop
add
lahf
pop
mov
rcr
out
fwait
and
jmp
inc
sbb
pop
jmp
lods
pop
mov
imul
push
add
pop
lds
hlt
scas
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
and
jl
inc
inc
je
mov
pushf
fdivr
mov
push
pushf
pop
push
sub
mov
xchg
pop
lds
hlt
scas
pop
push
pushf
sar
inc
je
mov
pushf
fdivr
dec
mov
pushf
out
push
pushf
pop
and
fadd
loope
push
adc
mov
inc
adc
mov
jle
cmp
adc
mov
(bad)
pusha
jo
push
pop
fwait
test
dec
cmp
adc
mov
(bad)
nop
outs
mov
jl
xor
mov
push
pushf
pop
jmp
adc
mov
leave
arpl
mov
mul
call
push
neg
stos
add
sysexit
stos
pushf
mov
or
(bad)
js
mov
leave
arpl
mov
adc
cdq
out
(bad)
xchg
jnp
adc
pop
mov
test
adc
fidivr
pop
cli
and
arpl
jg
call
push
jmp
cmp
mov
fwait
enter
or
inc
jmp
jnp
cmp
lahf
pop
mov
cmp
test
mov
jmp
test
mov
push
je
xchg
push
pushf
(bad)
cmp
jl
xor
inc
jmp
mov
mov
push
adc
or
arpl
cli
push
hlt
jmp
push
pushf
aaa
mov
idiv
inc
xchg
pop
jnp
(bad)
xchg
fist
adc
mov
xor
jmp
pushf
pop
xor
popf
cmps
xor
arpl
sbb
arpl
inc
jmp
data16
mov
xchg
fcmovne
adc
pop
shl
sbb
push
mov
sbb
inc
jmp
pusha
mov
cmp
inc
lahf
sbb
inc
jmp
fs
jg
fdiv
inc
jmp
mov
mov
ror
fiadd
call
pushf
pop
jg
js
inc
jmp
pop
loop
jmp
mov
jg
je
inc
jmp
jmp
fiadd
call
xchg
cmp
inc
adc
add
arpl
mov
jl
xor
inc
jmp
je
xchg
push
pushf
push
js
sbb
mov
mov
pop
jbe
push
adc
cwde
inc
mov
hlt
dec
addr16
pushf
aaa
(bad)
pop
xor
jmp
pushf
pop
cmp
mov
inc
push
ja
cmp
in
addr16
call
jmp
je
push
pushf
(bad)
jle
pop
sub
push
je
xchg
push
pushf
fistp
pop
push
fcmovb
in
arpl
mov
xchg
(bad)
push
ins
pop
mov
push
adc
cwde
rcl
popf
pop
mov
jmp
push
jne
push
neg
jl
sbb
inc
jmp
das
mov
test
arpl
sbb
cdq
mov
call
or
arpl
js
sbb
mov
jmp
arpl
cmp
inc
je
xchg
push
pushf
fimul
neg
fwait
sbb
inc
jmp
or
outs
jmp
sub
inc
jmp
pushf
pop
rcr
xor
int3
aaa
mov
ficomp
(bad)
fs
push
pop
fwait
lods
pop
pop
sub
push
je
xchg
push
pushf
aam
mov
inc
xchg
ja
jmp
pop
pop
dec
inc
arpl
sub
arpl
inc
xchg
pop
push
push
or
fisub
arpl
out
jmp
arpl
cmp
nop
ficom
neg
inc
je
xchg
push
pushf
cwde
cmp
pop
pushf
pop
mov
jmp
mov
mov
lahf
pop
xor
inc
jmp
pushf
pop
inc
mov
je
nop
push
pushf
aam
mov
inc
std
call
dec
ret
aam
pop
in
lahf
jns
push
push
iret
or
popf
rcl
stc
jle
xchg
pop
mov
push
inc
mov
mov
arpl
pop
xor
shr
adc
or
nop
push
pushf
(bad)
jle
retf
xor
mov
loop
cwde
jmp
mov
sub
je
lahf
push
pushf
or
dec
mov
mov
sar
pushf
xor
mov
jmp
pushf
pop
xor
imul
fldenv
lahf
push
pushf
or
mov
mov
jnp
adc
pop
mov
push
retf
pusha
fsubr
sahf
xchg
pop
push
(bad)
push
pushf
xor
push
jmp
pop
mov
aas
fs
jg
push
mov
jle
push
mov
out
mov
nop
push
pushf
xor
xor
jmp
arpl
inc
jmp
adc
test
jo
pop
rcl
mov
ds
pop
xor
ja
out
push
pushf
in
lahf
jns
push
sbb
loopne
push
or
loope
and
push
cli
cwde
std
call
xchg
call
mov
push
push
pop
mov
push
pushf
sar
loop
xor
mov
mov
pop
push
aas
mov
mov
xchg
pop
pop
call
push
adc
dec
inc
je
xchg
push
pushf
fdivr
sbb
pop
rcl
pop
mov
push
pushf
mov
ds
pop
fsubrp
fldenv
cmp
xchg
and
lahf
jns
push
sbb
or
bound
push
mov
push
pusha
(bad)
jle
pushf
xor
mov
jl
xor
sub
pushf
pop
rcl
neg
adc
dec
push
sub
out
sbb
pop
dec
lock
xor
inc
and
(bad)
cli
push
je
nop
push
pushf
xor
inc
and
push
je
nop
push
pushf
xor
inc
and
cli
push
je
nop
push
pushf
xor
inc
and
add
inc
imul
and
adc
mov
pop
mov
arpl
mov
pop
push
das
mov
mov
arpl
mov
pop
push
aas
mov
mov
arpl
mov
pop
push
lfs
jl
or
arpl
mov
pop
push
pop
mov
mov
lahf
pop
xor
inc
and
lahf
push
pushf
xor
inc
and
push
je
lahf
push
pushf
xor
inc
and
cld
cli
push
je
lahf
push
pushf
xor
inc
and
cli
push
je
lahf
push
pushf
out
ds
pop
dec
lock
add
fistp
pop
aad
ret
imul
jmp
pushf
mov
xor
mov
push
mul
stc
push
je
lahf
push
pushf
xor
sbb
call
push
mov
push
mul
cli
push
je
lahf
push
pushf
fimul
xchg
pop
mov
cmp
push
mov
push
aas
jnp
push
pushf
aaa
test
fcomp
jmp
push
sti
mov
mov
mov
push
aas
pop
sub
aaa
test
fcomp
jmp
push
fistp
mov
mov
push
aas
daa
sbb
test
fcomp
jmp
push
mov
pop
mov
add
mov
push
aas
jae
push
pushf
aaa
test
fcomp
jmp
push
xchg
mov
outs
inc
lahf
pop
xor
sbb
fidiv
pushf
pop
sbb
add
mov
push
mul
cli
push
je
sahf
push
pushf
add
adc
or
test
sbb
pop
shl
inc
sbb
push
xchg
inc
lahf
pop
aaa
push
int
pop
out
(bad)
pop
mov
test
xchg
sar
neg
(bad)
in
mov
or
out
(bad)
lock
push
neg
and
pop
out
popf
fldenv
xor
je
out
xor
mov
retf
mov
push
hlt
pop
mov
xor
mov
and
push
mov
sub
sbb
fldcw
rol
test
pushf
fucomip
jle
test
push
hlt
test
pushf
xor
mov
push
pushf
(bad)
inc
aas
fs
jg
pushf
mov
mov
push
cmp
mov
push
pop
sbb
fldcw
rol
dec
rcr
pushf
fucomip
jle
cmp
hlt
test
pushf
xor
mov
push
pushf
xor
mov
jl
xor
mov
push
neg
push
not
add
push
pushf
(bad)
jle
popf
or
arpl
mov
pop
push
jae
pop
mov
and
push
mov
push
cmp
mov
adc
pop
shl
ja
push
pushf
pop
call
push
hlt
test
pushf
xor
mov
push
pushf
fimul
jmp
mov
mov
push
cmp
mov
adc
pop
shr
ja
push
pushf
pop
call
push
hlt
test
pushf
xor
mov
push
pushf
xor
daa
push
pushf
xor
sbb
xor
mov
push
pushf
xor
mov
push
pushf
aaa
(bad)
int
pop
rcl
je
pushf
push
pushf
cld
mov
fstp
push
arpl
mov
pop
rcl
arpl
mov
pop
rol
hlt
daa
mov
push
pushf
pop
sar
hlt
pop
mov
int3
ficomp
int3
inc
sbb
adc
pushf
pop
sbb
add
mov
and
push
mov
jbe
sbb
fdivr
pop
mov
adc
inc
cmp
hlt
fisub
pushf
xor
mov
push
pushf
fidivr
mov
test
push
neg
push
popf
pop
mov
push
pushf
aaa
int
ficomp
push
hlt
sbb
push
pushf
mov
mov
push
neg
and
pop
inc
and
(bad)
cli
push
hlt
jae
push
pushf
xor
mov
adc
inc
cmp
hlt
fisub
pushf
xor
mov
push
pushf
fidivr
fistp
jl
mov
mov
jbe
sbb
mov
mov
xor
push
hlt
pop
mov
leave
ficomp
xchg
inc
sbb
jb
pushf
pop
sbb
add
mov
jmp
test
stc
push
neg
and
(bad)
stc
push
test
hlt
mov
rcl
pushf
pop
rcl
pushf
pop
call
push
hlt
test
pushf
xor
mov
push
pushf
(bad)
inc
loope
(bad)
std
cli
adc
push
mov
pop
rcl
arpl
mov
pop
rol
hlt
fidivr
push
pushf
pop
rol
popf
pop
mov
inc
hlt
or
push
pushf
aaa
(bad)
int
pop
rcl
je
fwait
push
pushf
cld
int3
mov
pop
rcl
arpl
mov
pop
rcl
arpl
mov
pop
rol
idiv
ror
popf
pop
mov
push
hlt
pop
mov
int3
ficomp
int3
inc
sbb
mov
pushf
pop
sbb
add
mov
mov
push
cmp
mov
push
pushf
pop
shl
popf
pop
mov
push
pushf
(bad)
add
inc
test
push
neg
ret
mov
ret
neg
and
pop
inc
and
(bad)
stc
push
test
hlt
adc
sbb
pushf
pop
rcl
pushf
pop
call
push
hlt
test
pushf
xor
mov
push
pushf
xor
daa
push
pushf
xor
sbb
mov
push
hlt
into
mov
jle
pop
cmp
and
aaa
mov
push
sahf
pop
mov
push
aas
fistp
push
pushf
xor
daa
push
pushf
xor
sbb
mov
push
hlt
pushf
mov
jle
pop
cmp
iret
sbb
mov
push
sahf
pop
mov
push
aas
inc
sub
aas
fs
jg
pushf
mov
mov
jbe
sbb
nop
jle
pop
mov
push
pushf
fucomip
jle
cmp
hlt
pop
bound
mov
repz
sar
neg
and
pop
inc
and
(bad)
cli
push
test
hlt
stos
mov
jle
pop
cmp
and
aaa
mov
push
sahf
pop
mov
push
aas
jg
push
pushf
xor
daa
push
pushf
xor
sbb
xor
mov
push
pushf
xor
cmp
mov
inc
iret
ficomp
push
je
cdq
push
pushf
cld
and
mov
inc
lahf
pop
mov
out
arpl
in
lahf
jns
push
push
retf
and
mov
inc
lahf
pop
aaa
dec
int
pop
inc
arpl
xor
hlt
mov
push
pushf
or
imul
push
add
mov
lahf
pop
xor
daa
push
pushf
mov
aaa
pushf
pop
xor
(bad)
pushf
jg
push
neg
and
pop
out
popf
fldenv
xor
je
out
xor
mov
retf
mov
push
hlt
pop
mov
ss
pop
sbb
push
mov
and
push
mov
sub
sbb
fldcw
rol
test
pushf
fucomip
jle
xchg
push
hlt
test
pushf
xor
mov
push
pushf
ficom
fcomp
jl
mov
mov
push
cmp
mov
push
pop
sbb
fldcw
rol
dec
rcr
pushf
fucomip
jle
cmp
hlt
test
pushf
xor
mov
push
pushf
xor
mov
jl
xor
mov
push
neg
push
not
add
push
pushf
(bad)
jle
popf
or
arpl
mov
pop
push
out
sbb
pushf
mov
mov
jbe
sbb
fdivr
lods
jle
pop
cmp
and
aaa
cmp
push
je
cmps
push
pushf
cld
push
mov
pop
cmp
test
push
hlt
and
mov
push
int3
mov
or
mov
pop
pushf
pop
inc
and
push
je
cmps
push
pushf
fild
and
dec
rcl
neg
pop
popf
pop
mov
push
pushf
mov
or
rcl
hlt
adc
inc
push
mov
push
neg
and
pop
inc
and
(bad)
cli
push
hlt
jae
push
pushf
xor
ret
pop
cmp
and
aaa
cmp
push
je
cmps
push
pushf
cld
cmp
popf
cmps
xor
neg
and
pop
inc
and
(bad)
cli
push
hlt
jae
push
pushf
xor
push
push
pushf
pop
rcl
inc
cmp
hlt
fisub
pushf
xor
mov
push
pushf
mov
jecxz
mov
mov
arpl
mov
pop
rol
hlt
fidivr
jle
pop
mov
push
int3
aaa
jmp
ficomp
int3
inc
sbb
bound
pushf
pop
sbb
sbb
lea
add
mov
push
cmp
mov
jle
pop
mov
push
pushf
aaa
mov
push
inc
sbb
cli
push
neg
mov
pop
mov
push
and
mov
pushf
test
lahf
fnstenv
inc
and
pop
inc
and
(bad)
stc
push
test
pushf
pop
mov
push
idiv
rcl
pushf
pop
call
push
hlt
test
pushf
xor
mov
push
pushf
xor
daa
push
pushf
xor
sbb
xor
add
pushf
pop
shl
pushf
pop
mov
push
pushf
aaa
(bad)
int
pop
rcl
je
cmps
push
pushf
cld
sub
ficomp
push
arpl
mov
pop
rcl
arpl
mov
pop
rol
hlt
mov
pop
push
pushf
pop
ror
hlt
pop
mov
iret
ficomp
int3
inc
sbb
push
or
mov
and
push
mov
push
cmp
mov
push
pushf
pop
shr
pushf
pop
mov
push
pushf
(bad)
inc
inc
sbb
cli
push
neg
cmps
sbb
push
neg
and
pop
inc
and
(bad)
cli
push
test
pushf
pop
mov
jle
pop
cmp
iret
sbb
mov
push
sahf
pop
mov
push
aas
inc
sub
xchg
in
mov
and
push
mov
jbe
sbb
nop
jl
xor
cmp
and
aaa
mov
push
sahf
pop
mov
push
aas
ja
push
pushf
xor
daa
push
pushf
xor
sbb
mov
jl
aaa
mov
retf
mov
push
hlt
pop
mov
or
mov
and
push
mov
push
cmp
mov
push
pushf
pop
rcl
pop
mov
push
sbb
shl
inc
sbb
cli
push
neg
fild
cld
cli
push
je
dec
jmp
pushf
pop
dec
icebp
adc
mov
loop
mov
in
lahf
jns
push
push
iret
or
test
adc
sbb
xor
mov
push
neg
pushf
pop
cmp
jmp
pop
mov
jmp
pushf
pop
rcl
retf
setl
aad
mov
setl
jae
pop
jg
push
(bad)
inc
loope
(bad)
std
(bad)
adc
sysexit
push
push
cmova
aaa
test
pushf
pop
cmp
aad
inc
jmp
shl
arpl
jmp
sbb
inc
arpl
cmp
test
std
out
xchg
lahf
int3
xor
adc
inc
inc
arpl
test
mov
pop
mov
mov
mov
inc
daa
fs
jg
ret
aad
(bad)
pop
xchg
jo
mov
test
jno
jb
scas
mov
clc
das
sbb
push
pushf
sar
inc
je
mov
or
mov
lds
inc
xchg
loope
mov
cmps
ficomp
xchg
pushf
mov
mov
pushf
pop
xor
mov
xor
sbb
inc
adc
dec
ror
sub
mov
jmp
test
xchg
loope
mov
cmps
ficomp
xchg
pushf
mov
mov
imul
pop
hlt
dec
or
cmp
inc
je
scas
push
pushf
(bad)
dec
pop
ins
(bad)
jle
loope
mov
cmps
ficomp
xchg
pushf
mov
jbe
pushf
pop
cmp
pop
int
hlt
adc
push
pushf
sar
inc
je
scas
push
pushf
ffreep
jmp
clc
out
cli
push
adc
mov
(bad)
cmp
mov
push
jmp
sbb
inc
jmp
mov
lahf
ins
jbe
lahf
pop
ffreep
jmp
ds
cli
push
adc
mov
(bad)
lock
mov
sbb
dec
ror
sub
pop
inc
jmp
mov
xchg
loope
mov
lea
mov
xchg
pushf
mov
xchg
pushf
pop
cmp
push
int
hlt
jle
push
pushf
sar
inc
je
scas
push
pushf
ffreep
jmp
movs
in
cli
push
adc
mov
dec
dec
lock
mov
inc
sbb
dec
rol
sbb
inc
jmp
mov
jl
xor
cli
push
hlt
adc
push
pushf
sar
inc
hlt
pop
es
pushf
mov
repnz
mov
push
hlt
pop
daa
push
pushf
mov
jmp
mov
mov
push
pop
fwait
nop
lahf
ins
test
lahf
sbb
jle
mov
add
aam
pop
in
lahf
jns
out
inc
pop
sub
inc
adc
cwde
xor
retf
push
pushf
pop
xor
inc
je
push
jmp
xchg
lahf
int3
push
neg
dec
inc
mov
dec
pop
pop
mov
cli
movs
push
mov
test
data16
sub
pop
cmp
mov
sub
cmp
inc
je
scas
push
pushf
mov
or
pop
add
pushf
pop
mov
sub
jmp
arpl
adc
ficomp
xchg
jno
inc
jmp
pushf
pop
cmp
sahf
sub
push
adc
push
loope
mov
mov
out
arpl
pop
movs
ficomp
xchg
jno
inc
jmp
pushf
pop
add
jp
cmp
lahf
pop
fild
adc
dec
rcl
das
sbb
dec
jmp
mov
xchg
and
pop
hlt
inc
or
cmp
inc
je
lods
push
pushf
fild
adc
dec
shl
das
sbb
dec
jmp
mov
xchg
and
pop
hlt
adc
push
pushf
sar
inc
je
lods
push
pushf
(bad)
dec
pop
ins
(bad)
jle
and
pop
hlt
xor
push
pushf
sar
inc
je
lods
push
pushf
fild
pop
jmp
sbb
dec
jmp
mov
xchg
and
pop
hlt
cmc
or
cmp
inc
je
lods
push
pushf
fild
sbb
das
sbb
dec
jmp
mov
lahf
ins
test
lahf
sbb
jle
and
pop
hlt
mov
push
pushf
sar
inc
je
lods
push
pushf
fild
sbb
dec
rcl
sbb
push
mov
pop
mov
jmp
hlt
jg
push
pushf
sar
inc
je
lods
push
pushf
aaa
enter
xor
jmp
arpl
xor
adc
sbb
cli
push
je
push
jmp
adc
mov
inc
jmp
and
mov
cmps
pop
mov
sbb
imul
jmp
adc
pop
shl
sbb
inc
jmp
sbb
js
sbb
adc
pusha
mov
cmp
sahf
pop
mov
jmp
cmps
pop
mov
jmp
mov
jmp
and
mov
pushf
test
lahf
sbb
jle
sbb
shl
inc
sbb
inc
jmp
test
xchg
pop
push
cmp
pushf
sub
push
es
das
or
imul
or
(bad)
jg
cmps
loop
out
arpl
mov
mov
pop
mov
mov
pop
sar
mov
push
add
dec
lahf
pop
aaa
sub
inc
sbb
inc
jmp
mov
xchg
pop
inc
push
pop
hlt
pop
mov
jmp
lods
push
pushf
out
dec
pushf
pop
dec
lock
mov
inc
out
arpl
cli
push
adc
inc
call
and
push
hlt
pop
popa
push
pushf
sar
inc
je
scas
push
pushf
fdivr
fiadd
mov
mov
jmp
xor
jmp
ficomp
xchg
pusha
cmps
inc
jmp
pushf
pop
cmp
mov
inc
jmp
mov
jl
aaa
dec
into
ficomp
xchg
pusha
mov
ret
mov
js
sbb
push
pushf
sar
xchg
pop
pop
call
push
(bad)
out
mov
pop
lahf
sbb
jle
and
mov
test
mov
out
arpl
mov
push
adc
inc
out
arpl
mov
jle
in
cli
push
adc
inc
call
test
mov
call
test
mov
loope
mov
ins
loope
mov
inc
jmp
pop
fisubr
mov
inc
jmp
arpl
ins
loope
mov
inc
jmp
ins
test
lahf
sbb
jle
sub
cmp
inc
hlt
mov
pushf
sar
inc
je
scas
push
pushf
fdivr
fiadd
mov
mov
loope
mov
inc
jmp
pushf
pop
xor
adc
mov
(bad)
jl
mov
out
arpl
mov
out
arpl
inc
jmp
pushf
pop
xor
jmp
pushf
pop
xor
jmp
mov
mov
push
pushf
sar
inc
neg
mov
hlt
mov
mov
add
dec
dec
mov
jmp
push
out
arpl
inc
xchg
pop
push
xor
xchg
lahf
mov
xchg
mov
push
out
arpl
mov
push
pushf
aaa
clc
popa
xchg
and
repnz
jmp
push
popf
mov
scas
clc
dec
mov
push
pushf
or
inc
daa
std
mov
mov
(bad)
jnp
or
cli
push
neg
pop
pushf
inc
mov
push
adc
mov
call
push
neg
pop
mov
dec
sbb
pop
xor
cld
mov
int3
ret
or
push
adc
fimul
arpl
and
pop
pushf
pop
shr
pushf
pop
mov
push
je
test
pop
pushf
pop
call
push
sbb
pop
rcl
popf
pop
mov
jmp
xchg
mov
push
pushf
pop
rcl
hlt
iret
sbb
cmp
inc
je
and
arpl
jl
mov
push
cmp
xchg
cdq
sub
pushf
push
imul
arpl
mov
clc
inc
mov
push
pushf
in
pop
dec
lahf
pop
test
xlat
pop
jns
xor
dec
push
xor
pop
cwde
stc
lahf
data16
sub
rcr
in
push
jmp
je
lods
push
pushf
push
push
stos
das
mov
jmp
mov
xor
imul
or
(bad)
jle
pop
ds
adc
test
sbb
push
jmp
das
mov
jmp
sbb
pop
jle
aaa
mov
jmp
pushf
pop
xor
push
mov
mov
pop
ficom
sti
arpl
push
jmp
cmp
xchg
push
adc
daa
cli
arpl
mov
add
pop
rcl
adc
daa
cli
arpl
push
jmp
mov
fwait
sbb
push
jmp
pop
mov
push
jmp
pop
mov
rcl
adc
daa
cli
arpl
mov
and
test
push
pushf
aaa
add
xchg
xchg
push
hlt
pop
daa
push
pushf
mov
add
(bad)
mov
jmp
ficomp
aaa
pushf
pop
mov
mov
or
cli
push
hlt
cdq
pusha
push
pushf
aaa
enter
push
arpl
jbe
lahf
pop
rol
fwait
test
out
push
pushf
pop
dec
jo
aaa
adc
ficomp
xchg
xchg
push
hlt
jg
push
pushf
mov
add
jle
inc
jmp
ficomp
xor
cli
cli
shl
(bad)
cli
push
hlt
cdq
pusha
push
pushf
aaa
mov
add
pop
xor
jmp
ficomp
pop
pushf
pop
mov
aas
inc
(bad)
jnp
pushf
xor
mov
push
pushf
pop
rcl
add
mov
push
adc
xor
push
mov
(bad)
inc
sbb
xor
jmp
pushf
pop
xor
jmp
sbb
mov
push
adc
add
rol
inc
arpl
or
inc
push
mov
push
and
rcl
scas
pop
push
pushf
mov
mov
pushf
ficom
ficomp
rcr
out
sbb
xor
jmp
pushf
pop
xor
jmp
sbb
mov
push
adc
add
rol
inc
arpl
or
sbb
push
neg
push
and
rcl
scas
pop
push
pushf
mov
mov
pushf
mov
mov
pushf
out
addr16
pop
dec
cmc
adc
mov
inc
jmp
jge
cli
push
adc
sar
adc
movs
lds
(bad)
std
(bad)
hlt
pop
(bad)
push
pushf
xor
mov
jle
and
scas
xchg
pop
mov
std
dec
pop
mov
push
pushf
pop
mov
push
pushf
pop
xor
cwde
std
stos
lahf
pop
mov
into
adc
pop
mov
ficomp
add
je
mov
pushf
xor
daa
push
pushf
xor
mov
jl
aaa
mov
test
cli
push
neg
adc
stc
push
hlt
retf
or
mov
sbb
or
arpl
jl
je
mov
pushf
bound
cmp
retf
pushf
mov
sbb
mov
push
pushf
(bad)
cmp
xchg
ja
scas
push
pushf
mov
sbb
sub
rcr
repz
jmp
pushf
(bad)
pusha
aas
inc
(bad)
jnp
sbb
push
jmp
xor
aam
ficomp
outs
inc
sbb
cli
push
hlt
pop
mov
and
rol
popf
jp
sbb
aam
ficomp
push
pushf
pop
push
xor
lahf
inc
jbe
lahf
pop
sar
inc
neg
push
hlt
mov
push
pushf
xor
mov
pushf
pop
call
push
adc
adc
arpl
mov
push
neg
push
je
mov
pushf
(bad)
jg
pop
mov
pop
pushf
pop
rcl
arpl
mov
pop
push
dec
xchg
pop
mov
repnz
mov
sbb
mov
inc
je
mov
pushf
xor
mov
dec
push
mov
ret
ret
add
fistp
mov
cli
movs
pop
mov
test
sbb
pop
xor
fadd
xchg
fld
pop
pushf
pop
(bad)
sbb
cmps
mov
push
pushf
mov
push
pushf
pop
test
popf
pop
mov
push
pushf
bound
or
pushf
push
xor
xchg
pop
mov
push
xchg
fcmovnb
pop
pushf
pop
push
mov
or
pushf
pop
mov
dec
pop
mov
push
pushf
mov
mov
jmp
arpl
xor
hlt
mov
push
pushf
mov
inc
(bad)
mov
fwait
test
sbb
cmp
inc
arpl
push
jmp
mov
mov
xchg
pushf
pop
mov
jmp
fdivr
stc
push
je
mov
pushf
push
js
repz
mul
inc
cmp
arpl
push
adc
retf
arpl
inc
jmp
pop
ficomp
mov
inc
jmp
or
sub
das
dec
sub
repnz
mov
inc
jmp
jl
inc
jmp
arpl
mov
push
pushf
mov
sbb
mov
mov
sbb
fsub
sub
adc
fcomp
push
sbb
enter
mov
jmp
sbb
enter
mov
push
pushf
mov
mov
jmp
pushf
pop
xor
popf
cmps
xor
cmp
data16
push
xchg
fcmovu
adc
mov
pushf
mov
adc
mov
push
arpl
mov
mov
push
and
xchg
push
pushf
test
lahf
sbb
jg
test
sbb
arpl
dec
jle
pop
mov
push
pushf
sub
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
sub
pushf
push
cmp
jl
mov
mov
pushf
aam
out
bound
sbb
test
cdq
call
push
pushf
sub
push
pushf
sub
push
arpl
test
and
mov
jmp
je
mov
pushf
out
cmp
pusha
jmp
mov
fs
mov
inc
jmp
inc
mov
sbb
inc
jmp
pushf
pop
push
dec
call
lahf
pop
aaa
inc
push
pushf
pop
xor
jmp
add
mov
push
sbb
mov
arpl
jmp
ficomp
push
je
mov
pushf
mov
mov
push
jne
mov
daa
fs
jg
sbb
jmp
popa
mov
inc
jmp
in
jmp
push
popf
push
cmp
jle
pop
mov
jmp
test
mov
sbb
pop
xor
jmp
sbb
mov
out
cdq
sub
out
ficomp
mov
mov
test
cmp
nop
bound
pushf
pop
int
neg
push
hlt
ins
pusha
push
pushf
xor
mov
mov
pop
push
arpl
pop
mov
push
pushf
test
lahf
sbb
jg
sbb
jmp
imul
xor
jmp
pushf
pop
cmp
mov
inc
push
pushf
pop
xor
jmp
or
mov
push
sbb
mov
arpl
mov
ficomp
push
je
mov
pushf
mov
mov
push
jne
mov
pop
arpl
clc
xchg
mov
fadd
call
pop
shl
dec
sbb
call
retf
je
mov
pushf
mov
adc
inc
jmp
sub
mov
xchg
cdq
pop
inc
jmp
cwde
arpl
jl
aaa
pop
rcr
rcl
je
mov
pushf
mov
mov
push
jne
mov
push
arpl
mov
push
out
out
out
mov
xor
adc
mov
fwait
sbb
sar
inc
sbb
inc
jmp
xchg
pop
mov
jmp
sbb
jmp
sbb
cli
push
je
mov
pushf
fild
push
jmp
pop
rcl
dec
sbb
rcr
pushf
pop
inc
and
cli
push
je
mov
pushf
mov
adc
mov
jmp
sbb
sar
inc
sbb
inc
jmp
xchg
pop
mov
jmp
sbb
jmp
mov
stc
push
je
mov
pushf
fild
push
jmp
pop
sar
pushf
mov
pop
pushf
pop
inc
and
lock
pushf
mov
adc
lods
cmps
xor
adc
mov
fwait
sbb
shl
stos
inc
jmp
xchg
pop
mov
jmp
sbb
jmp
mov
stc
push
je
mov
pushf
fild
push
jmp
pop
sar
sbb
and
pushf
pop
inc
and
mov
pushf
mov
adc
popf
mov
inc
push
sbb
mov
out
lahf
sub
jle
mov
push
neg
jae
pop
mov
push
pushf
mov
push
pushf
pop
push
adc
mov
push
sub
mov
mov
es
test
loop
rcl
neg
cmp
mov
push
pushf
pop
inc
and
mov
adc
pop
cmp
popf
aad
jmp
lahf
sub
inc
lahf
pop
sar
inc
adc
dec
jmp
mov
cli
push
adc
dec
jmp
mov
mov
jle
pop
mov
jmp
test
mov
adc
inc
jmp
pushf
xor
cli
push
neg
mov
test
mov
adc
mov
jmp
xchg
jmp
inc
pushf
sbb
jmp
loopne
test
loop
rcl
neg
clc
dec
sbb
(bad)
adc
stc
push
je
mov
adc
pop
cmp
popf
shl
xchg
push
mov
mov
and
jmp
adc
cwde
xor
jmp
popa
mov
pusha
push
pushf
sar
inc
je
mov
pushf
fdivr
loope
push
pushf
test
lahf
sbb
cmp
lahf
pop
xor
mov
jle
pop
mov
push
pushf
mov
adc
inc
jmp
neg
mov
je
mov
data16
xor
push
pop
xchg
inc
push
sbb
mov
aad
pop
xor
jmp
add
stos
inc
jmp
pushf
pop
rcl
adc
dec
jmp
mov
dec
neg
pop
inc
mov
je
mov
jecxz
mov
clc
xchg
mov
xor
inc
jmp
add
inc
mov
je
mov
fwait
sbb
rcl
scas
pop
push
pushf
mov
inc
(bad)
in
mov
call
cwde
pop
mov
push
pushf
mov
adc
rcl
neg
push
hlt
pop
mov
xchg
pop
push
scas
cwde
pop
mov
jmp
jnp
cmp
popf
sbb
jg
sahf
xor
or
(bad)
sub
push
adc
mov
pop
cmp
arpl
cmp
popf
pop
int
adc
retf
arpl
sbb
or
(bad)
push
pop
xor
jmp
jo
cli
push
arpl
dec
call
cwde
pop
mov
jmp
pushf
pop
jg
lock
push
popf
pop
mov
out
adc
pop
sar
sbb
cli
push
hlt
(bad)
push
pushf
aaa
mov
nop
adc
rcl
arpl
mov
pop
push
ret
cdq
pop
mov
push
imul
jmp
arpl
lods
jmp
nop
mov
mov
dec
push
popf
test
leave
(bad)
pop
xchg
jo
jmp
retf
aam
push
and
mov
(bad)
(bad)
inc
pop
fs
jg
fst
push
popf
pop
mov
push
pushf
fadd
push
xchg
push
cmp
sub
pushf
sub
push
pushf
mov
adc
xor
(bad)
jg
test
sub
push
pushf
mov
adc
cli
push
jmp
sar
je
mov
cmp
push
mov
or
pop
mov
push
adc
sbb
lea
or
mov
add
mov
push
cmps
push
mov
pop
int
arpl
mov
pop
push
cmp
jg
push
pushf
sub
pushf
pop
int
arpl
mov
pop
push
pop
cwde
pop
mov
push
pushf
sub
push
pushf
pop
int
arpl
mov
pop
push
jecxz
pop
mov
loope
(bad)
std
out
cwde
mov
cmps
push
mov
pop
int
pop
inc
cwde
sbb
and
(bad)
cli
push
jmp
sar
cmps
push
mov
pop
int
pop
inc
pushf
mov
pop
cmp
push
inc
mov
sbb
int
pop
inc
mov
and
xor
in
cli
push
cmps
push
mov
pop
int
pop
inc
xchg
(bad)
fcomp
and
(bad)
cli
push
jmp
sar
xchg
test
add
sub
nop
or
(bad)
call
pop
cmp
call
fistp
mov
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
leave
(bad)
pop
inc
retf
mov
push
pushf
pop
xor
sbb
call
pop
call
push
pop
fwait
mov
fldenv
xor
(bad)
bound
movs
push
xchg
loope
pop
pop
sub
in
pop
call
and
(bad)
call
sub
pushf
mov
push
pushf
pop
rcl
retf
xor
push
jmp
vandps
mov
cmp
pushf
sub
xchg
rcr
pop
pushf
jmp
pop
or
arpl
push
loope
shl
jmp
or
les
cwde
lods
sbb
sbb
jp
pushf
pop
mov
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
in
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
arpl
loop
pop
sub
