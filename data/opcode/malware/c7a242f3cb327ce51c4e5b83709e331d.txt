xor
sub
adc
jmp
push
push
shl
ja
add
ror
cmp
nop
ja
(bad)
adc
ja
jo
ror
ffree
inc
sti
inc
jnp
jnp
in
xchg
xchg
fnstcw
std
jmp
std
fdivrp
(bad)
pusha
xchg
xchg
pop
inc
or
loop
fist
or
and
jo
(bad)
xlat
retf
mov
rol
and
or
mov
push
mov
sub
stos
gs
pop
xor
movs
push
push
mov
std
cmp
adc
adc
inc
inc
aad
ret
add
nop
inc
(bad)
or
pop
adc
movs
loopne
xchg
push
xor
repz
pop
adc
add
stos
dec
mov
pop
cmps
nop
xor
fcomp
dec
xor
mov
inc
mov
and
sbb
adc
mov
mov
outs
sub
out
stos
jp
std
cmp
outs
cld
jg
popf
(bad)
fstp
sub
mov
loop
loop
test
cli
sbb
xchg
mov
push
not
(bad)
jbe
fcmovne
retf
movs
cmp
cli
fldcw
(bad)
mov
shr
mov
das
xor
mov
cmp
addr16
aas
sbb
(bad)
(bad)
xor
add
inc
or
adc
cmp
cmp
jmp
sbb
movs
sbb
mov
xchg
lods
sar
and
adc
clc
leave
mul
or
inc
imul
out
call
icebp
xlat
push
cld
les
sbb
mov
idiv
xchg
jbe
inc
sbb
adc
jge
sbb
fcomp
clc
addr16
cmp
xlat
or
mov
cmp
js
aaa
enter
fwait
push
icebp
push
(bad)
(bad)
jns
sahf
push
test
mov
mov
push
push
sbb
sbb
outs
sub
inc
sbb
sbb
nop
sub
outs
ret
loopne
jne
cmp
adc
cld
aam
push
ret
dec
sbb
adc
les
xchg
repnz
rcl
xchg
out
dec
xchg
fidivr
ds
imul
mov
xchg
int3
push
lahf
repnz
ret
or
call
xchg
xor
push
cdq
push
push
mov
das
push
not
adc
inc
dec
adc
sub
xchg
mov
ss
sbb
pop
push
sbb
enter
mov
pusha
jl
ds
int
add
cld
pop
jo
xchg
aaa
pop
sbb
mov
les
inc
repnz
inc
fwait
imul
xor
sti
xchg
pop
movs
add
inc
pop
mov
pop
(bad)
pusha
xchg
adc
cld
and
pop
jo
sbb
mov
test
mov
or
sbb
pushf
jb
sbb
test
stc
in
retf
aas
gs
loopne
or
test
dec
mov
push
adc
bnd
add
jmp
or
mov
int3
inc
adc
inc
jl
jne
sbb
inc
(bad)
adc
icebp
sbb
dec
iret
movs
ja
xchg
loope
cmp
dec
or
in
xchg
xor
(bad)
fdiv
mov
cmps
xchg
mov
in
sub
pop
mov
clc
adc
popaw
push
fwait
xchg
add
xor
add
test
xor
or
in
popf
mov
cmp
or
sub
ins
pop
xchg
sbb
pop
push
inc
mov
outs
mov
outs
fcomp
dec
cmp
mov
std
xchg
inc
jl
jb
cdq
std
movs
rcl
loope
mov
cmc
loope
add
fild
in
mov
rcl
aaa
mov
jg
add
sub
arpl
test
xchg
dec
in
xchg
fwait
adc
lea
lahf
dec
dec
pop
pop
pusha
mov
test
add
fs
mov
inc
xor
sub
les
jmp
outs
(bad)
sbb
lods
mov
test
(bad)
jae
stc
pop
movs
sbb
outs
aad
dec
xor
xor
adc
sbb
pusha
sub
jae
add
fwait
add
mov
cwde
jle
or
movs
ret
cwde
jo
xchg
ds
movs
mov
and
pop
pop
push
push
jns
enter
cmp
popa
std
les
cmp
mov
xor
mov
mov
or
not
xor
dec
pop
hlt
or
cmp
pop
xlat
mov
xchg
enter
aas
ficomp
cmc
ret
dec
add
cmps
or
or
or
add
daa
in
call
jmp
mov
(bad)
fnstenv
jnp
and
add
pop
daa
icebp
sub
dec
sub
jl
fisttp
shr
adc
mov
or
jmp
sub
sub
mov
sbb
jnp
jb
jl
mov
les
mov
in
dec
mov
nop
(bad)
in
movs
push
sub
mov
std
cwde
shl
jge
jne
das
pop
dec
adc
in
mov
aas
stos
bound
sub
(bad)
mov
retf
cmp
call
push
clc
mov
adc
stos
adc
addr16
xor
fimul
cmc
(bad)
aaa
lahf
push
test
sahf
push
outs
sub
imul
jmp
pop
or
push
shr
rcl
cmp
retf
pop
push
xchg
pop
dec
cmp
addr16
and
sub
popf
dec
bound
mov
aas
pop
add
adc
js
sar
mov
mov
jb
jnp
jmp
scas
jg
out
inc
data16
rol
(bad)
xor
or
or
and
and
fnstcw
xchg
lds
push
mov
rcl
in
adc
xor
fiadd
popf
sbb
lahf
dec
jle
ja
fisub
imul
aad
pop
mov
inc
mov
or
fdiv
fwait
loope
mov
inc
adc
pop
cmp
adc
inc
xor
pop
ds
rcl
addr16
ret
inc
mov
inc
mul
movs
xlat
jae
mov
adc
cli
out
(bad)
ss
pop
leave
add
jb
rcl
std
loopne
je
inc
mov
dec
aaa
out
inc
loop
jne
mov
mov
mov
stc
movs
cwde
mov
out
sar
sub
ins
stos
mov
stc
movs
(bad)
xchg
pop
cs
fs
leave
and
mov
adc
or
xchg
xlat
sbb
js
dec
sbb
mov
addr16
jae
or
add
or
or
add
xchg
push
repnz
push
adc
loope
sbb
add
dec
and
inc
inc
or
mov
retf
xor
sub
ins
rol
syscall
dec
dec
jp
fimul
rol
imul
cmps
mov
adc
out
test
cmc
loope
ins
lock
test
push
addr16
cmps
retf
lds
gs
pop
call
int
or
outs
cwde
(bad)
(bad)
and
mov
push
lahf
ss
(bad)
adc
dec
(bad)
aaa
mov
sbb
jno
add
out
push
mov
jecxz
sbb
les
cwde
pop
je
imul
or
or
mov
scas
pop
sbb
add
xchg
loopne
adc
push
jae
loop
lock
jle
xor
lahf
daa
jecxz
lds
je
jbe
mov
cwde
ds
ret
mov
in
je
cmps
inc
xor
inc
add
das
or
aaa
movs
xor
shr
pop
(bad)
mov
retf
enter
xor
in
jnp
repz
jae
jbe
loopne
mov
and
pusha
fsub
xor
fcomp
jo
sbb
or
or
pusha
inc
stos
push
daa
aaa
adc
fsub
and
daa
jmp
icebp
aas
das
lock
leave
sbb
mov
dec
push
stos
push
in
outs
ja
pop
inc
outs
cmp
xchg
mov
scas
mov
leave
cdq
and
mov
inc
xchg
loopne
iret
jg
push
int
inc
icebp
das
cmps
mov
push
xor
cmps
movs
push
popa
retf
sar
popa
sahf
pusha
arpl
movs
xor
inc
sub
daa
dec
sti
(bad)
jp
mov
jge
jo
rol
(bad)
push
add
sub
cwde
fwait
call
pop
inc
adc
dec
lods
inc
dec
(bad)
mov
pop
xor
pop
repnz
arpl
movs
ds
hlt
inc
mov
repz
stos
and
pop
or
mov
enter
mov
(bad)
ja
call
mov
sbb
add
jmp
xor
test
jl
sbb
add
inc
mov
imul
stc
ffree
inc
sub
sub
cmp
ret
jno
xor
mov
dec
aad
and
jae
inc
or
and
sbb
ins
inc
adc
movs
in
and
sub
stos
nop
push
repz
push
sub
clc
sahf
cmp
ins
int
cmps
das
pop
xchg
jp
mov
mov
add
ins
fstp
cwde
mov
xchg
pop
loope
or
pushw
lds
(bad)
loop
std
mov
ss
(bad)
mov
retf
fcomp
ins
dec
jno
adc
out
int3
aaa
movs
inc
sub
ins
sub
xor
pop
fs
mov
and
dec
loope
pop
sbb
push
and
shl
cdq
mov
test
fucomp
sar
mov
lods
and
fimul
cmp
jne
fcom
push
(bad)
mov
nop
sbb
pop
ret
and
push
cmp
cmp
popf
fiadd
hlt
out
xor
ins
mov
fadd
mov
clc
add
sub
sahf
stc
cmps
jle
jge
ror
inc
rol
retf
push
mov
adc
inc
jo
mov
and
imul
and
lahf
cmp
or
in
inc
cmp
bound
sti
pop
pop
mov
mov
dec
mov
push
cmps
sbb
add
pop
jecxz
push
mov
xor
pop
sub
sub
cmp
(bad)
enter
xchg
mov
pusha
loopne
push
in
mov
jo
adc
mul
popa
int3
jbe
mov
sti
dec
scas
sti
cmps
enter
std
ficom
sar
psubq
xchg
xor
(bad)
mov
mov
call
inc
fucomi
mov
mov
or
mov
jno
sbb
not
mov
mov
add
aaa
jnp
add
ret
mov
or
sub
inc
inc
or
mov
les
sub
adc
sub
and
sub
adc
aam
pop
mov
and
xchg
int
xchg
lds
sbb
iret
cmps
and
add
stos
mov
jno
in
seto
mov
rcl
mov
repnz
jae
pop
sub
add
mov
(bad)
xlat
(bad)
sub
les
sbb
push
fwait
mov
mov
scas
aas
call
xchg
leave
mov
dec
jne
std
push
in
shr
push
xchg
push
add
out
push
push
xchg
out
push
xchg
popf
in
or
movs
xor
or
xor
mov
(bad)
std
sbb
jmp
test
pushf
jo
hlt
pop
outs
popf
add
addr16
adc
(bad)
fsub
xchg
ficom
and
inc
sub
and
idiv
cmp
inc
mov
pop
xor
stc
inc
stc
sbb
jp
cmp
lock
mov
les
add
stos
mov
mov
test
icebp
loop
cmp
inc
sti
cli
scas
dec
or
fst
dec
(bad)
cmps
add
add
dec
fdiv
xor
mov
push
mov
xchg
out
ficomp
aam
fbstp
ja
jns
cmp
ins
shr
mov
call
ror
pop
sub
pop
nop
adc
sbb
mov
shl
push
mov
dec
cmps
les
mov
mov
fwait
bound
dec
or
scas
dec
ds
jb
sub
(bad)
shl
add
mov
dec
mov
mov
push
push
push
movs
push
and
gs
iret
mov
mov
lods
into
sti
xlat
mov
cli
and
loope
dec
fisubr
aad
stos
push
jb
and
lods
(bad)
mov
fadd
or
push
push
or
shl
sbb
lds
mov
sbb
dec
cmovae
xchg
adc
jp
bound
lea
jp
mov
daa
mov
retf
inc
push
aas
and
jns
mov
push
loop
aad
cmp
retf
imul
icebp
std
cmp
add
pop
push
js
jge
xor
inc
loope
fnstcw
(bad)
xchg
mov
js
hlt
(bad)
dec
(bad)
mov
je
pop
jmp
cdq
loop
sub
mov
dec
pop
icebp
jge
mov
jmp
push
jp
loopne
test
cwde
ffree
out
pop
in
rol
lahf
out
in
in
push
mov
cs
sbb
cdq
(bad)
jle
jbe
pop
dec
add
inc
or
inc
ins
cmp
not
xchg
and
xchg
xchg
je
out
and
jle
test
dec
outs
movs
(bad)
cmps
xor
sub
sahf
lea
shl
jecxz
ds
nop
and
xchg
xchg
mov
mov
or
loop
jno
cdq
cdq
mov
in
push
repnz
cmps
cld
pop
fucomip
out
in
mov
repz
hlt
sub
lds
imul
mov
sub
idiv
inc
(bad)
sbb
sub
mov
not
and
repz
sbb
lock
mov
in
data16
jb
pop
int
mov
mov
jne
mov
loopne
pop
out
jne
push
mov
fwait
or
ins
ror
xor
nop
dec
iret
pop
cvtdq2ps
lock
sub
ret
imul
and
push
cmp
dec
mov
dec
std
sar
out
stos
in
cmp
arpl
vcvtdq2pd
pop
movs
adc
jg
xchg
dec
mov
pop
sub
repnz
cmps
push
loopne
fadd
and
out
arpl
push
add
dec
xor
xchg
adc
jg
ror
inc
cmps
add
jb
pop
mov
or
cmp
dec
aas
push
imul
repnz
(bad)
push
sub
add
mov
jns
sbb
push
pop
xchg
mov
pop
adc
adc
pusha
sub
or
jle
mov
pop
shl
or
sub
and
jb
cmp
adc
je
xchg
jmp
lock
dec
lahf
inc
sub
dec
sbb
shl
push
jge
mov
shr
ins
out
test
ds
ret
test
mov
stos
psllq
fadd
jmp
pop
dec
jmp
mov
call
stos
sbb
mov
int3
push
sub
and
inc
cli
cmp
xor
in
popf
loopne
push
or
or
xchg
out
retf
sbb
aas
mov
fnstsw
fdivr
sub
pusha
sti
jne
fld
dec
call
dec
add
call
test
pop
cmp
out
xchg
sar
ins
cmp
xor
add
and
and
popf
dec
inc
pop
call
jne
xor
in
int
mov
xor
jge
enter
es
jmp
in
out
mov
idiv
mov
jge
push
test
fwait
outs
cmps
mov
push
aam
aam
adc
adc
stos
mov
mov
and
int3
ret
enter
jge
cmp
jge
iret
cdq
xchg
mov
ficomp
push
ret
ja
jmp
sbb
cmc
sar
push
inc
xchg
cwde
int3
outs
push
mov
rcr
mov
cmp
mov
fadd
mov
xor
iret
repz
mov
je
mov
repnz
int3
push
xor
push
inc
and
pusha
ss
and
xchg
and
sbb
and
test
sub
lods
adc
push
mov
push
inc
shl
imul
mov
mov
mov
xchg
jecxz
out
hlt
add
cmc
rcr
fst
into
test
jno
mov
pop
out
push
pop
mov
pop
sbb
(bad)
cld
clc
xlat
cld
sbb
fidivr
push
jae
cmps
inc
sub
push
jbe
es
sar
mov
mov
mov
adc
scas
pop
push
cld
xor
dec
mov
dec
mov
ret
xchg
dec
cmp
xlat
mov
pop
leave
sbb
out
adc
mov
popa
repnz
mov
adc
xchg
scas
int
test
push
or
sbb
xlat
and
das
push
movaps
daa
test
mov
in
stos
iret
inc
jl
sub
or
sub
es
(bad)
out
sbb
mov
loope
fcomp
xchg
aaa
push
iret
xor
sahf
lods
or
push
xor
add
(bad)
nop
pop
mov
rol
ret
or
add
pop
and
push
scas
fstp
scas
push
ss
lea
sbb
enter
sub
xchg
popa
mov
fistp
or
mov
xchg
xchg
cli
arpl
sub
in
jo
enter
test
fisttp
lahf
sub
xchg
add
xchg
sbb
add
cli
out
shl
xor
jo
shr
in
dec
fdiv
jne
push
jmp
mov
jb
mov
in
cmp
and
retf
stos
or
leave
xchg
cmp
jp
dec
nop
pop
sub
jno
jg
out
xchg
push
push
rcr
and
repz
or
and
dec
in
in
jmp
pop
and
mov
jb
cmc
sbb
and
inc
xchg
dec
cmp
push
test
fnstcw
out
mov
cwde
ins
repz
call
push
add
das
or
xor
pop
pop
jge
cmp
imul
lock
in
jl
adc
(bad)
cld
inc
cmp
pop
mov
xor
fcomi
jns
and
xchg
xor
jmp
mov
sbb
cmp
xchg
popf
gs
sbb
cld
mov
mov
aad
ret
cli
lods
rol
hlt
in
lea
xchg
jmp
imul
add
add
xchg
add
xchg
jecxz
jne
and
repnz
dec
les
mov
in
xor
and
les
dec
jae
cmp
and
cmp
dec
cld
out
cmc
sub
out
loop
test
(bad)
jno
mov
pop
mov
jmp
xchg
xchg
push
lahf
jbe
fwait
push
mov
mov
jno
sub
mov
imul
mov
ds
pop
push
jmp
clc
scas
scas
jp
mov
pop
or
sub
push
fs
pop
sub
sbb
xor
(bad)
push
scas
shr
iret
scas
fistp
pop
jge
jp
into
dec
mov
sbb
cwde
and
cmp
fwait
int
orps
outs
dec
sti
cmps
xor
mov
fstp
in
fwait
and
ss
out
out
test
push
mov
ret
mov
push
adc
(bad)
push
scas
pop
pop
retf
out
pusha
ja
pop
movs
xlat
adc
inc
pop
and
sub
jg
jae
ja
sti
fst
dec
add
or
dec
movs
mov
or
jge
dec
not
sub
(bad)
popf
xchg
jae
fnstsw
adc
cmp
test
cli
push
xchg
out
pop
xchg
out
push
cli
int
mov
movs
mov
(bad)
adc
neg
inc
jmp
std
mov
fisub
aaa
std
shl
(bad)
test
test
inc
mov
das
sar
cmp
inc
das
xor
xlat
rcl
dec
es
das
outs
xor
jmp
and
aas
aam
out
out
jne
scas
xor
loop
sbb
sahf
daa
stos
xchg
xor
or
(bad)
leave
mov
dec
pusha
leave
add
jecxz
aad
push
mov
or
cmp
jno
xor
mov
xchg
outs
xchg
stc
mov
das
clc
push
sti
cmc
fwait
mov
inc
retf
dec
cdq
daa
cmp
mov
ret
xor
pop
int
or
in
jg
inc
push
and
xchg
sahf
pop
lahf
adc
addr16
aaa
dec
pop
xchg
mov
ds
and
sub
bound
sbb
jmp
(bad)
repnz
call
cmps
popf
vmovsd
jne
xor
movs
mov
push
pop
lea
xor
in
xor
(bad)
cli
inc
or
jle
dec
pop
mov
nop
jns
jl
(bad)
fucomip
aam
inc
or
aaa
ss
call
shl
jmp
stc
call
sbb
ret
int
mov
push
jb
in
imul
xchg
jge
mov
xchg
jge
push
mov
jle
in
and
jle
adc
mov
and
cli
mov
aad
inc
popa
(bad)
mov
mov
pusha
cmp
(bad)
std
adc
into
push
sub
lahf
(bad)
pushf
hlt
cmp
out
xchg
cwde
cmps
sbb
in
je
movs
arpl
test
sbb
jb
icebp
ja
icebp
cld
test
stos
clc
cmovae
cdq
sahf
mov
push
mov
add
and
mov
push
test
cs
mov
movs
sbb
daa
enter
out
clc
ss
outs
pusha
or
and
retf
jnp
push
sub
into
lods
clc
pop
cwde
pop
test
scas
mov
xchg
mov
xor
or
xchg
or
cld
cmc
int
call
in
popf
gs
jbe
xchg
sub
mov
leave
add
das
pop
es
(bad)
out
(bad)
aas
xchg
jns
movs
cmps
call
xor
pusha
cmp
and
pushf
add
retf
cmp
int3
xor
lea
jo
mov
(bad)
mov
push
sbb
fsubr
jl
dec
push
mov
daa
lock
push
inc
push
test
xchg
loope
mov
add
sub
mov
daa
xor
mov
ins
cdq
stc
(bad)
or
jmp
mov
jbe
mov
(bad)
cmp
mov
mul
retf
and
sahf
or
cld
fisub
jecxz
js
dec
cmp
push
in
pop
aam
movs
dec
and
leave
pop
sar
xor
fcom
push
push
lods
xor
sub
lea
mov
push
test
mov
inc
cmp
fdivr
sbb
mov
lea
add
cli
jnp
sub
js
and
push
sbb
mov
std
fmul
pop
jae
aaa
mov
cs
inc
imul
data16
jmp
mov
scas
inc
repz
stos
xchg
adc
jno
sbb
iret
int
mov
lods
lock
cmp
jns
push
movs
repz
(bad)
arpl
sbb
cs
in
mov
dec
movs
mov
sbb
sbb
and
inc
(bad)
ins
or
inc
mov
syscall
repz
xor
aaa
dec
mov
or
pop
push
lock
test
mov
ss
and
push
push
xchg
leave
jmp
repnz
loopne
push
fsubr
sbb
ret
ds
adc
ret
cmps
les
gs
cmps
(bad)
fwait
cmps
mov
inc
dec
jmp
push
or
push
fiadd
fs
in
push
imul
mov
adc
outs
xor
jecxz
pop
call
imul
pushf
repnz
out
sbb
xchg
sub
mov
inc
pop
sbb
jne
mov
arpl
out
jne
inc
pop
xor
push
out
dec
pop
scas
(bad)
sub
imul
in
cmp
pushf
jmp
fdivr
sbb
xor
push
and
jmp
repz
pop
mov
rcr
(bad)
je
sbb
pop
dec
retf
jae
in
dec
int3
and
adc
pop
adc
sub
jl
icebp
dec
rcr
aad
push
cmps
das
pop
or
inc
and
std
pop
adc
rcl
out
bound
neg
imul
div
cmp
je
repnz
stc
enter
xchg
popf
xchg
mov
push
sbb
out
cmp
out
push
aaa
leave
inc
xchg
pop
scas
gs
(bad)
stc
nop
out
cmp
mov
inc
ins
jle
or
push
jno
inc
pop
(bad)
xor
retf
rcr
pop
(bad)
dec
adc
sub
sbb
pop
pop
xchg
push
push
cdq
cmp
sub
push
imul
and
mov
loop
jne
dec
push
push
dec
pop
jns
xor
ja
add
jo
scas
mov
ja
lods
sub
push
pop
mov
idiv
adc
and
mov
adc
xor
(bad)
or
add
mov
mov
inc
xchg
repz
push
xchg
adc
adc
push
cmc
scas
je
sbb
ins
push
lea
lock
pop
mov
rol
(bad)
sbb
or
fisub
jecxz
nop
xchg
enter
cmps
lods
push
arpl
jge
inc
pop
jl
imul
and
data16
and
jb
xchg
push
mov
xchg
mov
jnp
retf
jg
inc
pop
and
inc
jae
xadd
movsx
and
xchg
pop
dec
std
ins
fdiv
cs
mov
or
fadd
mov
jns
dec
lock
inc
sbb
lock
js
push
(bad)
xor
pop
pop
mov
cwde
loopne
mov
add
mov
mov
sbb
sub
sbb
xor
scas
fwait
dec
pop
xor
in
cmp
jbe
int
mov
sbb
repz
and
imul
pusha
mov
in
xchg
aaa
movs
iret
jns
pop
loope
sbb
pop
and
shl
lock
push
inc
je
mov
sbb
lods
icebp
shr
(bad)
imul
iret
pop
mov
hlt
cwde
dec
or
inc
test
movs
jns
in
and
outs
xor
movs
cmp
sbb
test
jne
scas
jle
cmps
jge
jl
sbb
jbe
push
inc
ja
loopne
pop
addr16
jnp
cli
lock
aaa
mov
xchg
push
(bad)
or
push
ins
lods
je
les
mov
pop
call
mov
push
push
shl
into
xchg
mov
push
cmps
shl
mov
jmp
cmp
xchg
mov
push
mov
movs
xchg
cli
jmp
sbb
ret
aaa
test
push
cwde
mov
xchg
adc
lods
ins
ja
loopne
hlt
cmp
pop
xchg
mov
in
xchg
push
push
mov
sbb
mov
jbe
push
in
call
cmp
sbb
inc
ss
cli
vmwrite
(bad)
(bad)
std
jnp
outs
es
adc
jnp
(bad)
jbe
(bad)
sub
adc
xor
pop
or
scas
inc
push
aas
push
adc
repnz
sahf
leave
pop
(bad)
adc
rcr
call
movs
sub
repz
int
(bad)
mov
jmp
das
(bad)
call
jns
pushf
cdq
mov
xchg
sbb
cmps
nop
dec
xor
dec
outs
add
int
outs
pop
pop
pop
stos
sti
cdq
(bad)
push
xchg
sub
mov
xchg
outs
es
push
sbb
out
mov
cmp
fs
mov
imul
(bad)
into
(bad)
bound
mov
adc
mov
rcr
int3
test
xchg
scas
mov
inc
in
xchg
div
push
mov
lds
pop
cmp
and
xchg
lahf
cmp
add
stos
sahf
pop
cmp
scas
cld
xor
pop
lea
jmp
jnp
cli
xchg
add
mov
push
mov
cmp
mov
js
out
jecxz
push
dec
jecxz
mov
mov
iret
mov
and
mov
push
mov
in
mov
lods
test
or
rcr
shl
or
fstp
fstp
and
out
pusha
loope
mov
sbb
repnz
dec
adc
mov
ins
call
daa
mov
mov
or
sahf
mov
mov
pop
or
fld
cmp
fwait
xchg
jb
jl
xor
xor
mov
dec
outs
mov
fistp
mov
(bad)
jo
shl
sbb
daa
push
out
out
imul
test
xchg
mov
ins
fidivr
dec
fidiv
cwde
lods
into
int3
jmp
and
ficomp
sub
push
ss
pop
jecxz
sub
add
sbb
mov
jp
imul
inc
cwde
mov
bound
stc
(bad)
pop
adc
jl
js
aas
push
lods
pop
and
fdivr
sbb
mov
cmp
inc
int3
jp
shr
(bad)
aad
cs
cmps
jno
fmul
retf
rcr
adc
and
sub
pop
rol
mov
lahf
xor
xchg
push
push
out
fs
les
mov
sub
popa
cmp
dec
leave
jp
and
and
mov
jl
js
xchg
cld
dec
test
repnz
and
cld
bound
and
mov
fcom
movs
call
inc
push
popf
frstor
ror
outs
xor
(bad)
shr
loope
push
out
or
mov
(bad)
push
push
or
imul
das
or
adc
xchg
(bad)
jl
inc
sbb
mov
mov
pop
xor
push
push
add
mov
pop
inc
push
shr
fs
lds
ds
pop
aad
fdiv
clc
mov
icebp
push
mov
or
dec
xor
or
jp
mov
xor
je
or
and
fiadd
jae
out
and
mov
dec
in
xchg
jbe
mov
icebp
hlt
xor
mov
idiv
aaa
(bad)
fdiv
pop
loopne
push
sub
sub
jae
push
and
hlt
es
dec
rcr
dec
jmp
shl
xor
sbb
call
cmp
shl
xchg
outs
ins
scas
mov
xor
cs
rcl
add
and
call
test
adc
lods
popf
sub
(bad)
enter
add
dec
push
push
mov
scas
hlt
sbb
loope
mov
cli
(bad)
ret
sub
jl
push
pop
and
aad
push
pop
(bad)
outs
push
add
pop
out
mov
pusha
lahf
fwait
sub
jp
cmp
lahf
cmp
(bad)
and
or
mov
ins
jmp
adc
mov
jmp
lods
call
daa
xor
test
jbe
pop
xor
cwde
push
pop
int
jno
xchg
xchg
ret
daa
iret
xchg
add
fcomp
dec
fisub
and
(bad)
push
mov
loop
(bad)
test
test
mov
dec
in
sbb
mov
mov
add
cli
jnp
pushf
sub
stos
in
stos
outs
call
or
xchg
aad
sahf
mov
aam
aaa
arpl
aaa
cmp
pop
or
xlat
mov
push
xchg
(bad)
jb
ins
jp
shl
or
adc
nop
jmp
push
lahf
lahf
shl
xchg
mov
mov
ret
in
inc
loope
push
inc
or
push
mov
fidiv
sbb
arpl
and
call
movs
movs
cmp
pop
fisttp
jp
inc
retf
adc
rcr
sub
pop
outs
ja
stc
push
ins
fs
xchg
sub
fldenv
dec
enter
je
ss
dec
(bad)
repz
sti
or
mov
outs
js
jno
lock
cmps
loop
xchg
call
mov
cmp
je
mov
jnp
(bad)
mov
xor
test
sti
inc
in
jns
inc
data16
ror
push
shr
dec
sub
pusha
push
pop
sbb
push
sub
mov
ret
shr
ins
and
inc
pxor
scas
and
mov
xchg
lods
fiadd
scas
cmc
adc
inc
or
jnp
push
das
fadd
xchg
pop
mov
xchg
dec
repz
ficomp
mov
dec
das
mov
pop
sub
push
leave
jecxz
jb
mov
imul
mov
daa
adc
stos
add
arpl
repnz
pop
stos
ins
das
push
cmp
push
jl
repz
mov
add
gs
lock
imul
jge
cmp
iret
mov
repnz
jecxz
enter
and
pop
test
cmp
cwde
mov
test
jns
into
add
mov
nop
je
fstp
aad
fsub
mov
jmp
leave
mov
nop
mov
hlt
(bad)
std
inc
cmp
mov
loope
add
jl
lods
test
mov
mov
call
(bad)
cmp
nop
cmp
mov
ds
fs
in
das
and
scas
jne
jp
sbb
xchg
push
div
sub
add
or
mov
mov
jg
cmp
int3
out
mov
or
dec
mov
int
leave
or
sbb
int
mov
sbb
ds
test
out
dec
jnp
mov
cmp
pushf
daa
mov
push
lock
mov
shl
pop
pop
push
pop
sub
aaa
movs
stc
mov
(bad)
ds
(bad)
fimul
out
jo
push
test
shr
les
push
mov
ss
jns
nop
adc
les
vpaddb
mov
jb
sbb
lods
(bad)
mov
jle
lea
(bad)
mov
and
iret
mov
mulps
mov
mov
mov
inc
loopne
out
outs
sbb
rcl
call
xchg
bound
dec
inc
pop
out
xchg
add
add
sub
lea
mov
xchg
nop
cmp
dec
aaa
stc
xchg
icebp
pop
jg
sbb
xchg
sub
push
ret
in
jl
fcmovne
cs
addr16
cs
mov
sbb
dec
scas
nop
int
pop
adc
outs
adc
sbb
sbb
push
loopne
cmps
jmp
fild
(bad)
push
sub
push
(bad)
mov
add
out
xchg
push
out
push
outs
stos
(bad)
jnp
push
dec
cmps
mov
rcr
ins
mov
push
cli
sbb
cld
inc
js
mov
mov
xchg
mov
or
xchg
xor
arpl
or
push
mov
sbb
mov
xchg
imul
mov
mov
jb
scas
xchg
mov
sar
and
dec
xor
add
cmc
inc
mov
lock
sub
int
mov
dec
out
cdq
retf
jp
stos
xor
dec
adc
xchg
loopne
retf
sar
pop
outs
inc
rcr
add
pop
adc
mov
pop
daa
sub
(bad)
xchg
adc
test
inc
pop
and
xor
rol
dec
inc
sbb
sahf
or
xchg
push
cmp
xor
pop
sub
push
mov
repz
or
pop
mov
mov
sub
xor
movs
or
cwde
sub
outs
cmc
pop
bound
mov
sbb
dec
shr
fwait
cmp
sbb
int
cmp
or
or
xor
mov
push
push
lea
dec
mov
jl
out
in
inc
out
mov
mov
repz
loop
jmp
jmp
inc
push
inc
sub
nop
shl
push
push
push
push
out
pop
sub
mov
popa
add
dec
or
push
push
cmp
cmp
mov
cmp
jl
jmp
out
sub
iret
imul
int3
mov
jmp
pop
hlt
cmc
lock
movs
adc
fsubr
jle
mov
aam
xlat
cmp
and
in
push
jp
inc
aas
push
push
mov
sbb
pushf
xchg
and
mov
jmp
ins
and
test
dec
push
rcr
test
sub
xabort
xchg
iret
das
repnz
dec
outs
ds
sub
sar
mov
mov
xor
mov
and
out
mov
movs
pop
imul
sbb
push
jmp
sbb
inc
les
imul
stc
ds
push
enter
hlt
fstp
add
mov
hlt
xchg
clc
mov
je
inc
(bad)
jno
mov
cwde
call
inc
xor
inc
push
xchg
inc
sbb
nop
call
in
and
push
int3
mov
ret
dec
cmp
ins
hlt
mov
fdivr
test
push
xor
pusha
or
stos
add
jns
(bad)
sub
or
daa
stos
jno
addr16
(bad)
sbb
(bad)
fwait
sbb
ror
pop
add
and
(bad)
ficom
mov
mov
mov
pop
pop
call
inc
mov
repz
and
lods
into
fnstenv
mov
dec
mov
fisubr
pop
int3
sbb
adc
mov
out
imul
mov
fdivrp
xchg
cmp
xchg
aam
and
jle
add
or
push
mov
aad
mov
(bad)
iret
pop
pusha
(bad)
dec
xchg
sub
repz
xchg
jge
dec
push
dec
inc
push
stos
cmp
cmp
push
pop
cwde
arpl
xchg
loope
adc
push
div
jmp
mov
leave
dec
shr
add
fisub
(bad)
test
dec
stos
jnp
aam
mov
add
sbb
jae
(bad)
test
je
xor
das
fwait
push
mov
jmp
push
inc
jp
in
mov
pop
fdiv
sbb
dec
icebp
mov
clc
push
dec
sub
jmp
sub
(bad)
dec
jmp
lods
inc
aaa
mov
sbb
fmul
cld
mov
and
xor
add
sti
jmp
pop
inc
sub
xor
and
push
clc
loop
add
jge
inc
ficomp
jmp
xchg
out
jmp
mov
adc
inc
(bad)
repnz
pop
add
ficom
fisttp
call
clc
jmp
(bad)
push
popf
mov
popa
scas
cs
(bad)
jmp
dec
or
stc
cdq
into
stc
cmp
cli
or
add
mov
jp
(bad)
sysexit
push
sahf
add
es
mov
mov
imul
sub
jg
or
in
cmp
or
and
push
jb
cld
sub
pop
mov
icebp
mov
dec
(bad)
mov
add
and
sub
xchg
(bad)
outs
leave
nop
data16
dec
push
repz
test
fist
xor
dec
pop
mov
jo
test
imul
test
stos
retf
jne
pop
movs
add
mov
mov
jns
add
fadd
dec
adc
mov
mov
rcl
mov
and
sub
pop
dec
ret
ret
(bad)
sti
sub
sub
jmp
loopne
cwde
cmc
mov
mov
sub
cmc
mov
ror
(bad)
adc
movs
int3
dec
sbb
rcl
add
adc
(bad)
cmp
pop
jnp
(bad)
sub
out
adc
sub
out
pop
jne
rcr
xchg
cli
lahf
outs
and
test
pop
dec
mov
add
(bad)
sub
int3
pop
jmp
or
pop
gs
mov
test
push
add
pop
and
arpl
jl
adc
aam
rol
cwde
dec
sbb
les
cmp
cli
icebp
in
cld
repnz
mov
cmp
xor
mov
pop
cmp
mov
movs
gs
ret
jp
cmp
sahf
sbb
push
sahf
and
and
push
cmp
repnz
popa
push
mov
mov
and
xchg
jnp
pushf
cmp
fmul
jp
imul
push
iret
imul
inc
mov
jbe
jmp
mov
mov
ja
popa
mov
pop
loop
add
sbb
aaa
xor
jb
push
xor
push
lds
bound
stos
cwde
jne
inc
cmps
aam
(bad)
popa
inc
add
jno
fwait
movs
loope
or
sub
addr16
(bad)
out
add
popf
sti
sbb
psubd
movs
cmp
jg
aam
fmul
adc
inc
inc
aas
dec
fdivr
lea
jb
mov
sub
and
stos
fist
jae
outs
sub
data16
cmc
jae
rcl
mov
xchg
mov
xchg
popf
push
cld
inc
inc
outs
mov
mov
scas
js
pop
retf
mov
and
mov
jmp
pop
add
jl
int3
add
retf
sub
xchg
xchg
pop
cmp
inc
push
inc
popf
xor
shl
popa
loope
pusha
ja
repz
sub
or
jne
(bad)
push
inc
xor
dec
ret
stc
les
bound
sbb
pop
push
int
mov
dec
sbb
cmc
push
jmp
add
pusha
pushf
fwait
cmp
push
adc
scas
nop
jl
xchg
std
test
aam
retf
jmp
outs
or
mov
cmp
sar
jbe
pop
pop
adc
mov
jmp
mov
(bad)
(bad)
lahf
hlt
xor
cmp
jmp
cmp
neg
popa
aam
xlat
cdq
scas
push
(bad)
sub
fwait
fs
fs
jge
movs
sub
lods
sbb
mov
mov
adc
sahf
dec
add
shl
and
clc
in
push
mov
shl
ret
fwait
inc
arpl
mov
xor
fucomi
xor
movs
jmp
dec
mov
std
adc
not
pop
mov
mov
add
inc
push
dec
in
push
sbb
push
inc
or
mov
sbb
pop
push
mov
inc
shl
mov
fnstsw
lea
xchg
mov
mov
adc
mov
dec
pop
xchg
js
jp
ins
mov
pop
es
out
lock
sub
cdq
mov
pop
hlt
shr
retf
add
imul
pop
cmp
push
stos
push
loope
ins
add
jle
push
lea
ins
pop
jbe
out
call
mov
vgatherpf1qpd
ret
(bad)
push
jae
aas
and
call
mov
and
cmc
lea
out
inc
test
mov
out
lea
call
int
fwait
cli
mov
mov
and
cmp
mov
mov
data16
add
sbb
add
cmp
mov
in
jmp
pushf
stos
jmp
dec
inc
inc
inc
fild
std
aam
mul
fbstp
or
mov
nop
daa
mov
xor
jecxz
shr
repz
repz
(bad)
ficomp
sti
xor
mov
pop
push
ficomp
pop
and
pushf
xor
pop
dec
or
cmp
outs
iret
adc
inc
jmp
mov
cmp
or
(bad)
lock
and
mov
sahf
push
aaa
aad
add
cmp
xchg
cmp
mov
pop
lods
in
or
dec
ins
adc
(bad)
fidiv
imul
and
cmp
sbb
cs
xchg
xor
mov
(bad)
scas
nop
(bad)
cs
jb
loopne
mov
pop
pop
xchg
mov
mov
mov
ret
cmps
jmp
xlat
mov
(bad)
ret
sti
es
nop
mov
cvtdq2ps
xor
cmps
jp
out
lods
adc
lds
inc
(bad)
push
adc
inc
adc
pop
hlt
int
mov
xlat
fistp
enter
inc
repnz
dec
int
dec
out
rcr
dec
mov
and
lahf
idiv
inc
jmp
pusha
fidivr
pop
in
pop
iret
(bad)
jmp
mov
imul
cmp
leave
retf
jmp
xor
mov
add
enter
cmp
sub
push
or
ins
pop
push
jle
and
in
cmc
add
in
retf
xchg
pop
out
frstor
cs
sub
push
dec
ret
jmp
sahf
hlt
cwde
push
nop
push
sub
pop
data16
add
mov
fidiv
(bad)
shl
cdq
std
mov
sub
xchg
rcr
push
ins
enter
adc
call
sbb
fst
adc
add
ss
jo
jae
pop
mov
or
mov
lock
dec
enter
cld
jmp
cmp
fisubr
mov
out
jae
push
mov
fbstp
pop
(bad)
xor
stc
push
stc
ret
iret
sbb
pop
dec
hlt
jmp
std
cmc
add
cmp
pop
mov
add
sub
cli
pop
sbb
pop
pop
cdq
test
into
fdiv
mov
aam
popf
out
loopne
mov
iret
push
imul
or
push
fwait
mov
arpl
call
cdq
inc
test
pop
out
test
repnz
and
pop
call
mov
or
xchg
call
add
mov
fwait
loopne
or
movs
mov
movs
xchg
add
xchg
fs
sub
inc
dec
and
repnz
enter
scas
shl
scas
xor
mov
dec
mov
jp
mov
mov
mov
lods
js
loop
push
fs
xchg
fldenv
cmp
or
xchg
mov
lock
xchg
xchg
fcomp
dec
fbstp
cmps
add
rol
dec
mov
dec
sub
enter
fs
xlat
ds
dec
stc
pop
xchg
push
add
mov
(bad)
sub
push
cmp
push
les
lods
sub
into
or
shr
fs
cmp
ins
not
pop
mov
(bad)
test
int3
sub
mov
gs
xchg
pop
enter
mov
lods
xchg
add
into
cdq
dec
or
loop
sub
or
lds
fstp
ror
jle
bound
or
scas
mov
popa
test
div
fsub
pop
sub
mov
sbb
jb
(bad)
jg
xchg
sbb
mov
mov
fdiv
scas
mov
cmp
cli
pop
stos
in
sbb
xchg
daa
adc
enter
pop
stos
adc
dec
fbld
rol
mov
stos
inc
je
loopne
jmp
(bad)
dec
shl
lock
mov
es
fsub
sbb
mov
mov
mov
sti
jnp
mov
popf
fst
ins
jge
ds
test
xor
adc
adc
sbb
lea
hlt
lahf
mov
pop
iret
xchg
pop
ja
adc
pop
(bad)
test
push
xchg
sub
jmp
xchg
out
aad
mov
mov
into
mov
xor
jnp
or
adc
xor
cmc
mov
cdq
(bad)
xchg
ret
inc
sbb
dec
xlat
idiv
cmp
fnstsw
mov
scas
gs
fucom
push
out
ret
push
sub
and
cmp
xchg
push
data16
mov
cwde
push
adc
rcl
test
xor
or
dec
xchg
fst
jl
rep
dec
call
inc
ror
(bad)
in
push
lds
retf
jae
add
loope
rcr
cmp
mov
sbb
mov
xchg
jp
aas
out
cmp
xchg
push
mul
call
jg
sbb
sub
xor
loopne
out
cmp
shr
mov
sbb
mov
xchg
arpl
inc
sbb
cmps
push
sar
jg
push
jne
xor
fld
fcom
dec
stos
lds
movs
outs
xchg
cmp
gs
sahf
int3
or
lahf
xchg
mov
cmps
sub
jl
jmp
mov
sub
cwde
and
pop
pop
ins
adc
test
dec
push
inc
or
sbb
ss
ror
test
fsubr
jecxz
jmp
pusha
mov
jp
xor
packssdw
ss
fsubr
jae
aaa
dec
push
pop
retf
stos
imul
out
push
dec
push
cmp
shl
cmp
(bad)
jl
xor
cmps
test
hlt
hlt
iret
mov
mov
xchg
jnp
loopne
lock
dec
loopne
adc
outs
in
repnz
cmp
fdiv
adc
jecxz
pop
inc
adc
mov
test
std
jns
mov
sbb
mov
cmp
lods
(bad)
je
ins
jb
adc
xor
mov
jmp
cmp
lahf
pop
sbb
test
jbe
stos
retf
fwait
out
es
fidivr
sub
mov
fstp
in
xchg
push
inc
es
imul
jmp
leave
inc
push
jmp
jmp
(bad)
popa
scas
push
push
(bad)
fnstenv
sbb
adc
(bad)
leave
pop
mov
push
(bad)
pop
jne
pop
mov
ror
ja
retf
xchg
mov
inc
icebp
or
nop
dec
fsub
add
and
test
mov
out
cmp
movlps
or
xor
das
add
in
fs
xchg
cmp
dec
mov
out
loopne
call
xchg
sahf
mov
mov
scas
ja
inc
inc
scas
shr
xor
pop
or
das
pop
pop
repnz
loope
sub
jae
(bad)
fadd
ja
mov
in
push
test
mov
fsubr
(bad)
mov
(bad)
aad
mov
sbb
cmp
adc
gs
adc
and
or
leave
pushf
and
mov
cmp
bnd
mov
cmp
jnp
cwde
je
clc
scas
out
push
cmp
adc
xchg
inc
sub
mov
jg
scas
push
jns
jb
mov
ins
xor
mov
sub
lds
push
sub
in
test
push
fist
lods
inc
mov
or
or
sub
cli
loopne
cmp
pop
int3
jns
or
lea
lock
(bad)
movs
xchg
pop
add
jp
(bad)
(bad)
xchg
xabort
pop
(bad)
fsub
gs
pop
pop
pusha
push
dec
loope
pusha
es
pop
xor
xchg
xchg
call
into
mov
fstp
les
mov
mov
pop
xchg
test
mov
cs
push
cmp
inc
jb
cmps
shld
and
sbb
mov
adc
lock
or
rcr
jecxz
popf
(bad)
jle
mov
dec
and
mov
(bad)
push
or
js
cmp
gs
scas
int3
pop
std
push
dec
out
int3
mov
and
push
mov
rcl
into
std
sbb
pop
leave
mov
lods
stos
mov
mov
cmp
es
sbb
sbb
pop
pushf
pop
into
call
in
loope
mov
cmp
inc
and
jp
outs
fisub
mov
outs
inc
les
int3
push
stc
sbb
cmc
inc
jl
cmp
aaa
es
xor
jmp
add
stc
inc
dec
rcl
(bad)
mov
mov
or
test
dec
xchg
imul
pop
lods
mov
repz
stos
xchg
and
scas
adc
icebp
test
inc
mov
inc
or
pop
xchg
mov
loop
(bad)
adc
jns
push
shr
cmc
lahf
shl
mov
jmp
pop
mov
scas
jb
jge
push
push
ret
loop
add
fld
jl
mov
jo
cmps
push
jp
sbb
pop
adc
sbb
imul
and
ror
cdq
jae
fsub
jg
mov
loop
mov
mov
pop
xchg
sahf
movs
(bad)
out
icebp
daa
in
push
sti
mov
xor
jno
xor
icebp
jnp
push
fisub
jno
leave
lea
push
stc
ror
push
sbb
pop
or
cmp
je
sbb
add
inc
dec
popf
mov
mov
pushf
dec
lods
mov
dec
and
dec
mov
jg
inc
dec
cmp
add
inc
lock
in
jno
and
adc
pop
inc
les
pop
imul
jg
rol
out
out
jbe
scas
and
movs
mov
mov
leave
jne
mov
retf
or
sub
ins
out
ins
popa
xor
pop
cdq
push
movs
lods
test
add
aam
add
sbb
pop
js
xor
pushf
scas
popa
(bad)
mov
mov
fiadd
inc
xor
in
jb
nop
xor
lods
dec
push
push
loop
ror
dec
int3
test
ins
loope
cli
jns
out
xor
jle
stos
and
movs
mov
aaa
jg
and
jae
das
mov
frstor
inc
ins
imul
mov
dec
je
int3
sbb
sub
test
(bad)
dec
out
dec
jo
dec
jae
lock
mov
sub
arpl
fld
std
mov
push
jge
pminsw
jne
xchg
jmp
push
hlt
das
cwde
stos
jnp
movs
popa
dec
mov
fucom
fwait
popf
jg
push
popa
jns
lods
imul
mov
cmps
pop
dec
gs
add
jns
mov
xor
sbb
sar
sub
jne
sub
jns
cmc
pusha
mov
aad
retf
ds
iret
or
outs
js
fld
pop
xor
imul
in
test
push
inc
pop
fs
test
mov
pop
enter
xchg
test
sbb
rcr
cmp
retf
add
inc
and
mov
inc
pop
call
pop
inc
push
jns
or
iret
xchg
pushf
jecxz
mov
aam
jno
xchg
cmp
add
dec
push
dec
jbe
cdq
imul
sbb
push
xchg
dec
dec
or
sub
xchg
test
push
clc
retf
mov
shr
jae
mov
outs
mov
frstor
js
push
xchg
xchg
sub
or
jae
icebp
data16
imul
or
sub
cli
push
shr
repnz
mov
inc
(bad)
jg
lahf
loopne
mov
sub
aaa
je
dec
outs
and
sub
mov
mov
push
add
sahf
push
bnd
gs
mov
xchg
mov
xlat
cmp
ret
adc
inc
(bad)
ja
call
into
ins
loope
mov
ficomp
jl
jmp
aad
jae
cmp
movs
xchg
cs
ficom
mov
test
mov
cmc
mov
inc
stc
dec
bound
ret
xchg
ror
mov
(bad)
aaa
inc
idiv
fdivr
sub
mov
sbb
or
cld
outs
cli
mov
dec
retf
aaa
mov
inc
dec
mov
aas
in
enter
fidiv
js
call
mov
das
cmp
jb
mov
pop
ds
lods
mov
push
fdivr
loop
out
scas
frstor
ret
add
pop
mov
pop
add
mov
jecxz
in
push
cli
scas
dec
adc
push
sub
sbb
repz
ins
mov
xchg
inc
cdq
(bad)
rcl
dec
fiadd
icebp
mov
aad
xchg
mov
pop
fcomp
pop
dec
jne
mov
fimul
ins
rol
(bad)
pop
adc
lahf
dec
xchg
int3
shl
push
std
jmp
mul
mul
test
scas
xchg
pop
xchg
clc
push
lods
push
dec
push
or
iret
nop
movs
lods
in
das
stos
in
es
add
loope
or
mov
leave
fdivr
jecxz
dec
ds
cs
add
jae
mov
or
jl
ins
xchg
or
or
jge
sub
adc
mov
call
arpl
xchg
inc
sub
std
mov
jo
mov
bound
scas
cs
leave
or
add
arpl
sbb
out
pop
cmps
inc
sbb
push
out
bound
lods
cmps
iret
jo
jle
mov
adc
fsubr
mov
and
mov
std
or
ins
leave
movs
popf
fwait
cmpps
cmps
(bad)
dec
mov
pop
ja
iret
out
fild
jg
and
add
add
and
lock
mov
jne
mov
push
push
mov
ja
and
cli
sbb
jmp
out
sbb
fcomip
nop
xor
jge
sub
adc
and
js
mov
outs
pop
xor
or
(bad)
fldcw
in
cmp
push
sbb
sbb
ret
enter
jne
bound
rcl
sbb
movs
mov
out
loope
out
movs
stc
mov
loope
xchg
loope
push
and
mov
pushf
icebp
jmp
pushf
rol
lock
add
pop
mov
sub
fnstenv
mov
outs
or
add
mov
ret
out
gs
repz
loop
cmp
aad
add
sub
xchg
stos
(bad)
fisubr
cmps
out
pop
popf
push
inc
inc
mov
xor
inc
je
xchg
push
lock
mov
(bad)
cmp
pop
(bad)
cdq
test
fs
pop
lock
mov
out
mov
pop
lods
mov
(bad)
movs
sbb
mov
pop
pop
add
outs
mov
int3
mov
jle
jmp
iret
jl
cmps
mov
cmp
mov
and
arpl
in
out
push
pop
jp
fcomp
xor
jle
mov
lahf
sub
jo
setns
movs
or
out
sar
rol
repz
dec
xor
pop
or
stos
into
ins
cmp
enter
or
retf
popa
sub
(bad)
js
cld
retf
jmp
cmp
mov
stc
dec
xchg
jg
push
(bad)
(bad)
lock
inc
mov
xor
xlat
sbb
sar
adc
pop
iret
fsubr
sar
aad
mov
dec
push
cmc
or
xchg
in
cmp
xchg
loope
scas
fistp
sub
xor
xchg
repnz
psraw
mov
mov
mov
jne
scas
std
pop
mov
inc
lods
cld
mov
daa
gs
cmp
inc
dec
xchg
repnz
jae
pop
and
sti
enter
bnd
cmp
lock
xor
or
or
mov
lods
jp
sar
mov
and
cli
and
out
lods
lods
in
dec
dec
das
pusha
jmp
jb
jb
push
xchg
push
jns
sbb
mov
nop
fwait
out
push
xchg
sbb
xchg
pop
xchg
or
hlt
pop
push
in
jne
je
adc
and
sub
das
inc
xchg
cld
jnp
jmp
pop
sbb
clc
cmps
jle
sub
add
ss
push
dec
fs
mov
repnz
push
push
jnp
repz
cmp
pop
mov
ret
jmp
ins
dec
sbb
pop
mov
xlat
outs
in
jne
retf
out
add
xor
mov
mov
or
mov
xchg
pushf
xlat
bound
add
jo
ret
and
sbb
jne
jmp
ret
inc
lahf
xchg
aam
fwait
pop
push
jecxz
push
mov
inc
inc
mov
mov
push
inc
inc
and
add
mov
mov
xor
or
inc
inc
cmp
aad
mov
bound
xchg
push
shr
adc
(bad)
mov
or
jmp
mov
inc
add
or
add
(bad)
test
sub
pusha
mov
scas
cmc
ins
ret
hlt
pop
mov
jge
stc
out
imul
sub
loope
fnstcw
ss
imul
js
sahf
test
mov
push
in
sbb
mov
stos
and
bound
push
sahf
enter
or
mov
ret
rol
hlt
ficomp
dec
dec
(bad)
ins
sbb
into
xchg
xor
or
jno
or
add
dec
int3
gs
jl
scas
in
leave
sahf
xchg
dec
mov
repz
mov
adc
cmps
inc
sbb
adc
aas
push
sahf
imul
xchg
push
icebp
mov
aad
or
jecxz
add
mov
lea
xchg
mov
push
mov
inc
arpl
or
xchg
dec
mov
fadd
cdq
push
retf
fimul
fld
add
imul
push
outs
(bad)
stc
ja
aas
sub
adc
movs
xor
cmps
jae
xchg
push
pop
cmp
cmp
push
xchg
pop
push
cmp
push
lds
xor
out
mov
push
sbb
cmp
pop
aam
dec
lds
push
xor
movs
and
sbb
sar
fisttp
and
stos
cs
cmps
xor
or
icebp
sar
adc
sub
addr16
mov
test
push
test
ss
adc
and
push
xor
pusha
std
push
cmc
xor
xchg
mov
xchg
popf
sub
out
inc
shl
gs
sbb
ds
(bad)
adc
cmp
inc
pop
lahf
pop
scas
int3
ret
push
fstp
popf
sar
and
daa
lds
add
das
mov
sub
scas
or
cs
aam
cdq
repnz
jp
aaa
mov
ret
cdq
xchg
into
sub
daa
jge
cmp
(bad)
inc
clc
inc
mov
sbb
push
jle
nop
je
fidiv
imul
xchg
sahf
mov
jno
out
in
mov
sbb
jg
loopne
mov
iret
jg
jg
xchg
lds
cdq
xor
repz
inc
stos
pop
int3
test
and
ret
in
test
adc
mov
and
dec
les
jmp
mov
popf
xchg
mov
or
pop
cmp
daa
cmp
(bad)
aas
fidiv
push
lock
call
mov
cdq
gs
int3
pop
mov
(bad)
in
push
lahf
mov
sub
jne
jg
lods
fimul
xchg
int
repz
cs
fwait
sub
push
jl
ins
(bad)
inc
inc
rcl
pop
xor
popa
jmp
jmp
cld
cmc
sahf
rcl
test
jp
clc
not
xchg
fistp
pop
jl
push
call
out
mov
push
jecxz
xor
sub
fdivr
or
push
repz
outs
inc
test
lods
dec
push
test
jns
fstp
fcmovnbe
cli
xor
mov
push
xcrypt-ecb
cmps
leave
mov
push
cmp
hlt
xor
pop
idiv
mov
fstp
push
push
gs
out
mov
retf
adc
scas
out
mov
ins
dec
mov
push
jmp
mov
cmps
fld
and
adc
mov
mov
adc
dec
mov
xor
fs
clc
mov
jno
or
jno
loopne
pop
and
dec
jns
lea
xchg
imul
xlat
daa
add
or
pop
jno
(bad)
mov
stos
dec
loop
lahf
aam
push
retf
les
loop
sti
mov
xchg
pusha
lods
push
je
dec
and
dec
sub
rcl
ret
jns
sbb
mov
scas
clc
mov
push
dec
jne
imul
lea
fwait
shl
hlt
fwait
(bad)
stos
inc
pop
push
sahf
and
inc
in
jp
in
cdq
mov
pop
inc
xchg
mov
mov
jecxz
jmp
and
xor
popf
ror
icebp
jecxz
sub
and
inc
cld
add
lds
ds
sub
sub
dec
push
pop
mov
sbb
jmp
fisub
je
retf
fwait
mov
lds
xchg
mov
int
mov
or
aaa
push
xor
test
movs
adc
shr
mov
xor
jb
loope
push
and
imul
hlt
and
inc
mov
pop
mov
aam
mov
add
nop
lods
shr
stos
ret
icebp
jl
(bad)
out
jb
dec
(bad)
cli
sar
adc
and
pop
mov
sbb
test
fimul
test
and
sub
xchg
popf
sub
les
in
jns
mov
xchg
push
ds
jne
xchg
movs
cmp
mov
mov
stos
mov
mov
sub
jnp
pop
xchg
imul
nop
test
ret
cld
and
mov
inc
push
jb
sbb
test
push
pop
jae
fucomi
or
xor
inc
jno
in
cmp
loop
enter
ret
mov
push
aaa
loope
adc
stos
push
add
outs
jbe
sub
cli
aam
xor
and
jg
stos
popa
stc
repnz
ja
xor
test
sub
loopne
idiv
(bad)
mov
cmp
or
dec
jns
jne
push
lds
aam
jnp
and
xchg
(bad)
(bad)
pop
xchg
leave
inc
push
jb
scas
xchg
ins
inc
jg
push
pop
mov
xor
aad
push
cmps
or
pshufw
cmp
out
out
xor
add
xchg
retf
jno
adc
hlt
rcl
inc
jecxz
test
push
sbb
fcom
popf
loop
(bad)
jae
jmp
jns
sar
pop
(bad)
cmps
ucomiss
xor
cld
inc
xchg
imul
out
pxor
sti
es
pop
lock
xor
shl
clc
jle
ret
stc
lea
add
add
cmp
sub
or
dec
add
jp
test
jae
add
lods
inc
push
pcmpgtw
mov
(bad)
int3
loope
dec
push
or
adc
inc
jp
dec
xor
(bad)
mov
mov
div
push
mov
push
sub
imul
(bad)
mov
sbb
shl
in
(bad)
aaa
pop
sub
ja
retf
pop
xor
and
sar
imul
jne
xchg
jno
pusha
or
js
les
enter
aam
pop
dec
repz
adc
mov
loopne
mov
mov
leave
int3
mov
and
xchg
mov
add
mov
fidivr
or
xor
jle
sub
xor
dec
jo
mov
lahf
pop
jbe
daa
jmp
cmp
jmp
(bad)
jmp
xchg
rol
sbb
clc
je
pusha
xchg
sahf
xchg
jecxz
int3
gs
lahf
mov
jo
out
sub
mov
test
pop
scas
mov
nop
movs
outs
push
add
sub
cdq
shl
movs
sbb
outs
call
mov
fsubr
pop
mov
(bad)
in
or
inc
fs
scas
das
fst
xchg
push
adc
mov
mov
sbb
leave
add
or
addr16
neg
retf
cmp
dec
dec
pushf
sub
cmp
mov
jmp
jne
in
pop
xor
sbb
test
and
les
add
xchg
test
sahf
push
cld
and
shr
imul
add
fcomp
data16
scas
push
lfs
push
(bad)
and
jecxz
mov
je
mov
loop
sbb
mov
dec
mov
xchg
fcomp
int
outs
fild
lea
or
push
jno
jmp
xorps
dec
mov
mov
mov
push
(bad)
dec
push
xor
ja
lods
lods
mov
in
jmp
sbb
repz
xchg
fs
cli
(bad)
sub
rol
shr
fist
scas
mov
shl
push
cwde
adc
aam
inc
mov
lods
inc
sbb
jg
fisttp
jbe
(bad)
cld
(bad)
bts
mov
mov
mov
fild
push
loope
pop
mov
and
sub
sub
adc
mov
cmps
mov
js
inc
mov
shl
imul
lahf
clc
pop
sbb
mov
xor
repz
mov
push
push
outs
sub
push
pushf
xor
add
add
lahf
hlt
push
sbb
sahf
cmps
pop
rol
jae
inc
outs
popf
cli
loop
inc
aam
scas
sbb
cmp
cmps
cmps
mov
imul
shl
pushf
push
test
(bad)
jno
sub
xchg
idiv
add
je
add
cmp
sti
ins
push
jmp
shl
dec
sbb
aaa
sti
mov
ja
and
test
imul
adc
dec
push
(bad)
sti
retf
dec
sahf
in
push
mov
sub
add
dec
sbb
shr
xchg
scas
ss
pop
sbb
mov
mov
xchg
stos
sar
and
jecxz
ret
mov
cmps
pop
jae
fwait
iret
cmp
jbe
unpcklps
sbb
pop
mov
cmp
pop
imul
loope
dec
mul
test
cwde
push
test
fdiv
or
movaps
leave
xor
push
mov
xchg
sub
mov
pushf
ss
fmul
popf
or
or
mov
cli
mov
inc
repnz
ret
das
mov
dec
mov
push
call
iret
sub
call
pop
sar
ret
adc
mov
enter
xchg
div
jmp
xchg
leave
jnp
adc
leave
scas
sbb
aad
leave
inc
jmp
shr
xchg
add
dec
mov
add
jmp
sbb
jg
arpl
scas
ret
jp
inc
fisubr
popf
in
xor
or
addr16
jge
xor
jge
mov
mov
out
fcomp
fcmovbe
xchg
sar
xchg
mov
fisubr
imul
push
dec
mov
fcom
data16
sti
xchg
push
and
pusha
jmp
bound
scas
xchg
or
dec
shl
je
mov
data16
cmp
push
inc
xchg
das
sub
mov
scas
push
icebp
pusha
pop
add
test
mov
or
mov
ror
repnz
pop
imul
jge
pop
loop
hlt
(bad)
js
xchg
ss
xor
jge
cmps
xchg
xchg
stos
enter
inc
push
or
jnp
movs
out
nop
lahf
sub
dec
push
loope
stc
mov
pop
mov
xchg
mov
jge
dec
cwde
pushf
add
je
in
jo
xchg
or
cmp
jle
xchg
mov
push
mov
data16
lods
ja
out
test
rcl
pop
jle
or
push
xor
pop
pop
jmp
sub
dec
adc
cli
pop
push
in
sti
sbb
mov
ins
dec
xor
add
or
xor
sar
mov
adc
sbb
mov
in
mov
or
mov
and
pop
ret
adc
adc
out
popf
or
mov
xchg
pop
mov
jbe
sub
mov
push
scas
xchg
inc
sub
or
cmp
scas
test
mov
loopne
in
push
mov
adc
or
mov
adc
pop
xchg
stos
add
cmps
xor
rcr
(bad)
out
push
mov
ficom
jne
cmc
cmc
mov
and
jae
ja
push
mov
ins
cmc
mov
int3
inc
mov
push
mov
aaa
cli
call
add
push
imul
sub
mov
ja
push
sar
popf
sub
imul
cld
cmp
hlt
ror
jbe
(bad)
dec
xchg
dec
adc
out
add
shr
mov
aas
mov
push
or
(bad)
cmp
dec
fldenv
jo
jp
pop
ins
xor
mov
mov
loop
xchg
pop
sbb
jl
sbb
or
cmps
and
mov
pop
or
and
add
xchg
aas
adc
fdiv
icebp
and
dec
push
mov
mov
aas
add
loop
test
lds
loop
jb
dec
out
div
fld
gs
lahf
inc
retf
mov
shl
shl
dec
add
mov
add
nop
push
xor
xor
enter
cmps
fwait
bsf
mov
(bad)
pushf
(bad)
sbb
stos
cld
bnd
daa
add
mov
and
sub
lock
cmp
popf
mov
pop
mov
jp
mov
mov
mov
imul
cmps
mov
(bad)
xchg
mov
xor
(bad)
(bad)
or
push
mov
rcl
add
cmp
call
sbb
int3
stos
and
push
mov
push
lds
push
lds
sub
dec
sub
push
jmp
fsub
iret
or
mov
sbb
push
xor
mov
dec
mov
adc
jle
stos
and
sbb
pushf
xor
(bad)
mov
jg
mov
gs
xor
int
(bad)
or
test
push
shr
(bad)
mov
int3
dec
in
sahf
and
inc
jmp
ins
pushf
in
repz
cld
mov
adc
xchg
in
into
push
mov
push
aam
push
jmp
jbe
jecxz
clc
fimul
aaa
lods
(bad)
jmp
adc
fistp
dec
les
sbb
retf
out
cwde
cwde
xlat
jbe
out
sub
loope
icebp
fdivr
mov
aam
test
or
(bad)
not
out
and
mov
repz
rcl
mov
pushf
xor
int
sbb
(bad)
imul
lea
xor
mov
mov
sub
(bad)
dec
mov
add
mov
iret
and
shl
jns
pop
lds
dec
iret
cmp
sub
xchg
nop
add
push
test
mov
fistp
lea
mov
gs
inc
pop
retf
shl
stos
ds
jp
jne
inc
fbstp
fnstcw
push
gs
mov
lods
into
fbld
fimul
repz
ja
mov
int
(bad)
mov
pop
clc
jb
iret
loopne
or
mov
inc
xchg
mov
sub
push
scas
sti
call
repz
mov
push
mov
lods
dec
loopne
jb
sbb
pop
xchg
xor
lock
test
sahf
adc
es
mov
into
inc
leave
sub
test
push
push
mov
aas
int3
mov
scas
(bad)
nop
xlat
pushf
adc
xor
call
std
add
adc
xor
or
fucomi
and
imul
mov
jp
sub
hlt
sub
(bad)
js
add
scas
in
adc
repnz
cmp
push
mov
mov
bound
stos
push
or
inc
push
int
mov
mov
inc
sub
movs
sar
test
stos
push
dec
add
ds
outs
add
pop
leave
pop
in
bound
xlat
jne
dec
loope
call
dec
repnz
xchg
push
mov
aam
repz
xor
sbb
daa
loopne
test
lock
adc
(bad)
or
mov
sbb
call
int
retf
push
sbb
imul
sub
loope
sub
repnz
fdiv
cli
mov
adc
sbb
ret
iret
aas
lods
jae
popa
jge
outs
sub
daa
and
mov
dec
in
mov
sub
or
test
jnp
mov
jmp
fistp
push
call
test
mov
push
(bad)
enter
out
inc
outs
shl
cld
cmp
xor
push
mov
jne
repz
(bad)
mov
lods
or
lods
(bad)
cmp
mov
std
inc
jns
add
out
sbb
es
push
sar
cs
mov
data16
mov
lods
inc
(bad)
mov
into
and
or
retf
fs
in
mov
ror
lahf
mov
fisttp
stos
xlat
cmps
imul
cmp
ret
pop
xlat
(bad)
dec
jmp
mov
jmp
sbb
cmp
loope
mov
mov
push
xchg
data16
mov
jle
mov
xlat
pop
ja
xchg
nop
jae
push
sbb
inc
fs
xchg
push
mov
sub
sub
pop
ja
neg
pop
inc
xor
push
xchg
out
idiv
push
out
mov
call
sbb
push
jnp
pop
inc
clc
in
xor
les
loope
add
push
mov
cmp
push
or
loope
outs
ret
cmps
fcomp
aaa
inc
xlat
mov
fisubr
jb
mov
in
adc
jb
xchg
pop
(bad)
and
mov
inc
and
retf
inc
push
adc
sar
jg
mov
stos
test
adc
shr
cmp
jmp
jmp
or
sub
and
retf
cmp
inc
and
or
dec
cmp
loopne
cmp
mov
xchg
add
je
(bad)
jbe
fdivr
clc
test
in
mov
fwait
rcl
jae
fadd
sub
add
bound
shl
ret
xchg
mov
cmp
cwde
push
cmp
xchg
dec
cmp
push
(bad)
pop
inc
test
retf
int
pop
in
lock
ret
out
sbb
xor
lahf
jne
pop
add
pop
mov
bound
jg
add
jl
pop
pop
mov
mov
jp
lods
sahf
lfs
out
sbb
add
jbe
iret
or
sar
lds
leave
add
jbe
cmp
test
pop
jnp
leave
int
rol
mov
push
pop
add
je
ret
cmp
pop
and
fisttp
and
push
lods
ret
addr16
xchg
call
or
cmps
rcl
xchg
fild
pop
sti
xchg
aad
cld
pop
push
xchg
inc
popf
ja
rol
add
pop
mov
setle
pop
add
push
add
hlt
push
jmp
dec
cmp
sub
xchg
stos
sbb
mov
sbb
adc
call
repz
dec
xchg
test
sbb
xchg
push
out
nop
ret
push
xchg
sti
jl
dec
ja
adc
dec
retf
lods
mov
jb
xchg
lds
push
mov
daa
inc
pop
jne
lea
fld
jb
xchg
jg
retf
sub
push
jno
sub
mov
or
jno
mov
fcmovnu
imul
mov
movs
inc
les
sti
sub
in
(bad)
retf
lahf
jp
jne
mov
sub
repz
push
dec
in
mov
xor
push
dec
popa
mov
lods
push
mov
dec
int
pop
jne
pop
pop
mov
popf
mov
out
pusha
and
out
ds
call
sbb
ret
dec
mov
stos
fs
les
xchg
cmps
sahf
sbb
cmp
push
sbb
fidiv
fistp
cmp
push
mov
sbb
and
movs
xlat
cmp
mov
addr16
add
xchg
mov
sar
pop
sub
imul
adc
jnp
and
fs
fisttp
enter
dec
clc
xchg
cmp
cmc
jns
clc
add
popf
imul
in
fst
ret
out
inc
daa
popa
jecxz
and
sbb
out
fld
fisttp
idiv
repnz
test
and
in
(bad)
frstpm(287
inc
rol
retf
sub
xor
(bad)
cmc
jne
movs
add
ret
rol
xchg
or
pop
xchg
add
(bad)
aaa
jp
jno
ds
xor
push
sub
mov
(bad)
pop
(bad)
jmp
or
iret
enter
and
sbb
sbb
jge
(bad)
jnp
std
ins
fisttp
inc
pop
daa
inc
retf
pop
adc
jbe
mov
mov
fcmovbe
jne
lods
mov
xchg
ins
push
add
fadd
mov
xchg
hlt
movs
and
cmp
scas
xchg
cs
sub
add
js
mov
cmp
fisub
add
in
aad
or
xchg
mov
scas
push
mov
push
fild
mov
xchg
mov
pop
popf
pop
stc
push
popa
xor
jno
test
sub
ja
jb
sub
pop
aad
into
nop
sub
js
and
iret
cmp
jbe
jae
out
aam
add
inc
adc
mov
pushf
cmp
xchg
(bad)
call
push
dec
in
retf
pop
jmp
nop
xchg
pop
fisub
aas
mov
dec
add
fsub
ins
imul
mov
and
mov
push
sub
bound
mov
repnz
inc
mov
(bad)
jle
mov
stos
fld
pop
outs
clc
pusha
retf
fild
lock
mov
adc
dec
popa
mov
mov
sub
lahf
or
pusha
push
outs
cli
cmps
xlat
es
sub
arpl
repnz
or
cmp
jo
imul
add
mov
jnp
fldenv
stos
add
xchg
and
pop
mov
push
(bad)
int
fstp
push
ins
inc
add
mov
adc
enter
stos
stos
jne
and
mov
mov
les
fidiv
xor
(bad)
sti
call
aam
cdq
xchg
mov
jno
aas
add
cld
add
(bad)
sub
push
ret
adc
or
test
pop
sbb
jge
jns
inc
ss
(bad)
loop
sbb
retf
imul
xchg
and
cmp
jp
mov
adc
stos
das
push
clc
or
ja
or
sbb
mov
(bad)
mov
fisub
fsub
jbe
std
js
mov
daa
test
push
(bad)
addr16
aam
fwait
repz
test
sbb
stc
cli
(bad)
fisttp
sub
dec
mov
leave
and
ret
out
(bad)
in
cmp
cmp
jnp
scas
icebp
push
gs
loope
push
push
push
outs
lea
mul
or
(bad)
cmp
imul
adc
pop
mov
je
(bad)
adc
and
pop
ins
ret
jb
jbe
xchg
jb
(bad)
cmp
mov
push
sbb
push
push
(bad)
ror
push
cld
ins
jl
(bad)
cmp
dec
mov
sub
pop
scas
out
arpl
sub
icebp
ja
pop
fwait
movs
mov
pusha
or
sbb
mov
mov
cmp
aam
js
icebp
jne
or
arpl
ss
dec
mov
jmp
push
jle
mov
pop
pop
xor
mov
leave
adc
adc
xchg
sbb
cwde
add
xchg
xchg
mov
movzx
pop
mov
add
pop
and
mov
and
aas
jle
call
fs
je
push
rcr
outs
mov
(bad)
mov
fdivr
mov
jg
push
add
cdq
jge
fisubr
ins
mov
ds
mov
div
xchg
or
stos
jne
pop
fs
dec
dec
in
in
test
sub
mov
je
and
mov
cs
mov
adc
fsub
add
fild
cld
repz
idiv
out
sbb
pop
and
rol
jmp
dec
dec
(bad)
sbb
push
push
imul
stos
push
sahf
mul
cmps
push
shl
push
mov
inc
ret
sub
out
jmp
mov
cwde
ins
pusha
out
jae
pushf
dec
icebp
cmp
pop
mov
mov
mov
call
xchg
mov
int
fld
xor
sub
adc
cdq
pushf
(bad)
push
dec
lods
adc
sti
mov
add
and
lds
clc
adc
jne
jle
or
(bad)
xor
push
cmp
fst
gs
out
xor
(bad)
sbb
ret
pop
or
and
mov
or
jo
adc
mov
xchg
stos
push
nop
jno
icebp
rol
addr16
jae
mov
jg
jmp
inc
inc
jne
push
les
or
pop
add
adc
mov
mov
mov
pop
mov
inc
or
push
bound
cmp
dec
mov
adc
cld
xor
jle
push
mov
lea
add
fisub
dec
inc
popa
adc
movs
in
je
jae
fisttp
xchg
nop
int3
fmul
into
test
into
loop
xor
das
sub
mov
dec
cld
rol
sbb
test
sbb
and
popf
add
shl
mov
mov
in
or
inc
and
or
push
sbb
and
and
pusha
leave
dec
stos
and
dec
ffree
add
add
ja
and
push
out
loope
ja
cmp
out
inc
ja
test
jne
fstp
inc
jne
cmp
xchg
push
addr16
lahf
pop
jmp
xchg
stos
in
lahf
pop
mov
idiv
ss
mov
xchg
jmp
mov
fs
mov
cmp
scas
rol
mov
push
push
ret
lea
add
rcr
push
sub
les
inc
inc
mov
int
sub
dec
or
dec
sbb
dec
ja
retf
dec
cmp
xchg
cmp
mov
ins
out
pop
sub
sub
cmp
(bad)
sub
pop
jle
pop
adc
fisubr
pop
push
mov
push
fstp
push
or
(bad)
jb
cmp
cld
pushf
daa
mov
fistp
jae
mov
jg
sbb
aad
test
in
mov
mov
lds
cmp
mov
xor
dec
or
mov
jbe
xchg
jne
pop
dec
call
xchg
mov
jae
pop
stos
out
sbb
and
arpl
jmp
inc
rol
xlat
fisub
cdq
enter
popf
and
push
xchg
call
ret
stc
rcl
cmps
daa
test
test
lea
xor
mov
mov
scas
lds
mov
xchg
data16
push
push
inc
lahf
mov
adc
mov
mov
popa
rcr
pop
or
adc
adc
add
shr
adc
mov
adc
out
idiv
cmps
jg
xchg
das
or
leave
adc
ror
dec
jns
cmp
push
push
aas
cwde
jge
xchg
movs
aad
or
jne
aad
adc
jne
rol
jmp
cld
in
test
xor
fbstp
js
test
int3
add
add
push
or
push
fistp
adc
sub
das
je
icebp
xchg
mov
mov
ficom
and
mov
call
in
mov
fdiv
mov
pop
and
lahf
cmps
xchg
jmp
jg
popf
cmp
clc
movs
mov
xchg
fs
sub
mov
sub
imul
call
or
fcmovu
imul
in
inc
nop
mov
pop
xchg
mov
outs
dec
sbb
add
push
jb
cdq
adc
or
pop
sub
mov
adc
and
inc
and
dec
dec
push
retf
(bad)
push
push
retf
test
cdq
loope
unpcklps
fild
daa
sub
adc
outs
dec
test
cdq
(bad)
das
and
inc
lea
in
and
mov
pop
cdq
jle
xchg
push
pop
sbb
push
test
loope
fs
mov
jmp
pop
into
push
in
aam
sbb
arpl
cmp
cmps
test
pop
test
aad
(bad)
stos
test
mov
jnp
xchg
bound
dec
clc
sub
icebp
xchg
(bad)
ins
pop
xchg
sbb
scas
fwait
pop
ret
push
fisttp
xchg
xlat
add
and
nop
ds
mov
adc
xor
sbb
movs
xchg
cmp
jecxz
mov
nop
and
ret
hlt
jge
rcl
fucomip
fsub
je
mov
inc
aas
mov
test
push
dec
mov
xchg
or
or
fild
jg
popf
pop
test
mov
mov
adc
std
cmp
scas
inc
and
leave
test
and
rol
hlt
xchg
adc
mov
loop
xchg
xchg
daa
les
lahf
in
outs
jno
sub
sub
inc
lods
div
jl
mov
lds
(bad)
repz
mov
or
je
push
add
repz
(bad)
push
cs
dec
jmp
out
sar
(bad)
push
sub
mul
mov
(bad)
cmp
ss
jmp
loope
sub
mov
enter
xchg
shl
test
lock
cmps
mov
push
sub
or
fdivr
mov
inc
mov
(bad)
jp
jno
xchg
mov
daa
push
shr
scas
push
push
enter
inc
stc
xor
dec
fadd
lods
popw
pop
push
sbb
hlt
mov
mov
xchg
adc
xchg
retf
push
ja
xchg
jl
(bad)
clc
pushf
push
cmps
cmc
xlat
lahf
push
ss
mov
sbb
cld
jo
loop
adc
mov
xchg
ror
push
ficom
cmps
movs
xor
sbb
repz
shl
imul
mov
inc
jmp
ins
lds
(bad)
add
mov
add
retf
stos
inc
out
mov
inc
xor
or
push
jns
mov
(bad)
mov
and
mov
mov
inc
inc
push
add
xchg
ret
mov
and
adc
jge
xchg
mov
pop
leave
clc
and
not
test
hlt
jmp
sbb
xor
das
jmp
enter
dec
inc
loope
addr16
jno
jne
jmp
pusha
pop
jp
sub
cs
add
push
push
in
or
in
in
sahf
add
add
xchg
leave
inc
push
lods
int3
arpl
pop
ror
nop
xor
jl
adc
xor
pop
mov
sub
test
xor
mov
jmp
(bad)
or
imul
pop
in
(bad)
repz
sahf
call
lods
inc
int3
mov
sub
adc
xchg
mov
inc
sub
lds
push
xor
call
stc
cdq
xchg
jmp
lock
sahf
jae
mov
(bad)
test
inc
push
mov
addr16
stos
pop
movs
xchg
dec
aam
popf
leave
push
fst
push
jg
imul
test
imul
je
sub
inc
das
jmp
adc
ins
mov
cmp
mov
popa
pop
fimul
shl
and
add
sbb
into
sub
ror
int3
xor
and
mov
cmc
jle
inc
sbb
mov
aas
pop
iret
out
adc
mov
mov
mov
push
imul
jp
and
cs
test
retf
sbb
pop
adc
int3
mov
jnp
int
xor
and
stos
dec
or
jns
or
dec
jae
loopne
lods
adc
mov
sar
js
xor
mov
pop
daa
pusha
jge
push
pop
ja
inc
mov
sbb
jns
or
jae
adc
jmp
jg
js
xchg
xchg
xchg
ret
ret
not
popf
dec
add
arpl
xchg
cmps
mov
mov
es
(bad)
das
push
out
sbb
or
dec
cmps
xor
dec
xchg
xor
push
xchg
outs
and
jge
imul
push
mov
or
dec
enter
rcl
je
adc
or
rol
sbb
aaa
mov
inc
xor
jecxz
fsub
mov
mov
aaa
daa
adc
jge
sub
adc
add
cwde
fcomip
push
retf
retf
mov
stc
push
push
push
mov
loopne
push
in
icebp
(bad)
(bad)
(bad)
imul
jns
daa
adc
push
add
daa
test
adc
test
call
xchg
stos
cmp
inc
adc
pop
repz
repz
gs
mov
cmp
add
(bad)
or
sti
rol
xor
cmps
adc
fucomi
not
pop
mov
enter
xchg
cmp
jmp
test
pop
push
mov
outs
ds
cmp
sbb
and
mov
push
adc
enter
adc
les
lds
(bad)
movs
data16
sahf
push
sub
stos
jae
inc
out
dec
add
sar
mov
stos
cdq
or
xchg
jge
inc
push
mov
or
mov
arpl
(bad)
adc
mov
(bad)
repz
in
sub
iret
dec
jbe
ja
mov
jmp
add
sysret
test
mov
(bad)
scas
cmp
hlt
call
and
mov
ja
cmp
jno
sub
jmp
add
lds
inc
ja
retf
loop
push
es
dec
cmp
stos
mov
mov
addr16
mov
mov
adc
add
dec
mov
pop
sbb
cmp
push
cmps
and
out
adc
sahf
pop
xchg
cmp
sti
das
xor
sub
adc
inc
mov
rep
fdivr
hlt
pop
adc
or
inc
ror
adc
push
cmp
xchg
xor
mov
sub
dec
add
je
mov
bound
dec
subps
jl
push
xchg
mov
mov
std
das
stos
inc
mov
scas
das
mov
lock
loopne
imul
cld
pop
mov
jecxz
data16
call
in
aas
das
mov
popf
pop
loop
push
shl
call
jno
or
jp
jg
and
adc
cmp
push
push
std
loop
popa
xor
pop
lock
add
je
push
mov
or
push
inc
hlt
xor
aam
lds
in
dec
test
mov
cwde
test
xchg
test
out
gs
pop
push
ins
dec
jne
lock
jecxz
push
pusha
sub
push
and
sub
xchg
out
arpl
jecxz
(bad)
test
cmps
bound
and
sbb
sub
scas
ud2
in
in
add
ins
retf
jbe
sbb
cs
dec
out
fwait
mov
scas
loope
push
jns
in
sbb
cli
inc
sbb
fisubr
pushf
push
cmp
or
(bad)
iret
add
fs
cwde
push
cmp
cs
popa
shl
jl
cs
inc
or
xchg
shl
push
lods
and
mov
fadd
out
pop
pop
cmp
xchg
xor
(bad)
pop
dec
(bad)
into
jge
(bad)
aam
push
loope
dec
(bad)
mov
(bad)
jge
lock
inc
pop
push
or
sub
xchg
mov
jg
xchg
lea
imul
test
hlt
jge
mov
cmp
movs
pop
xor
sahf
bound
adc
ins
adc
pop
lahf
ja
pop
ret
push
nop
cmp
mov
fist
fiadd
fcomip
sbb
xchg
jb
mov
test
aam
out
retf
out
inc
push
cwde
enter
pop
mov
push
push
and
push
push
and
dec
aaa
cmp
pop
movs
xor
test
fnstcw
xor
xchg
jno
in
mov
stos
mov
nop
ins
aad
mov
adc
scas
or
sub
and
pop
xchg
mov
mov
adc
jp
adc
mov
mov
xchg
jns
jmp
icebp
pop
jnp
cld
das
adc
pop
push
push
nop
xor
or
mov
dec
ret
nop
mov
cdq
mov
and
loopne
stos
repnz
aas
sbb
out
pop
fistp
iret
clc
mov
in
cld
jle
ja
mov
and
or
js
mov
push
imul
fistp
mov
pop
(bad)
jnp
jle
imul
clc
fbld
(bad)
cmp
out
push
jmp
inc
lds
into
jp
in
sbb
adc
add
cli
cmp
ror
push
rcr
arpl
out
out
jg
lock
rcr
inc
test
push
push
icebp
cmp
and
stos
cdq
mov
in
ins
ds
xor
xor
clc
mov
mov
lea
cmc
ret
xchg
aas
jmp
jne
es
sub
rcr
lods
pop
mov
addps
in
jo
cld
or
and
add
cli
xor
cmp
or
lahf
mov
mov
push
mov
sbb
mov
pop
fucomi
pushf
mov
lods
jnp
jns
push
pop
jl
sbb
dec
pop
fldln2
jo
sub
jmp
sbb
test
test
mov
dec
(bad)
ficom
lea
sbb
add
dec
fdivr
mov
sbb
mov
mov
or
push
push
xor
jnp
fnstenv
les
es
sbb
aas
mov
fcmovnbe
mov
in
sub
fmul
add
aam
push
xchg
mov
mov
mov
jne
cmp
xor
adc
loopne
mov
cmp
sti
icebp
jge
mov
dec
pcmpeqw
and
daa
dec
je
out
std
int3
mov
loop
out
dec
pop
mov
pop
les
outs
push
xor
rcr
cmp
sub
jmp
(bad)
mov
cmp
int
cmp
out
push
and
test
mov
cs
jb
ins
(bad)
fs
mov
inc
xchg
jns
add
(bad)
jb
push
and
in
jne
ins
dec
out
sbb
mov
add
std
fcom
adc
div
call
push
clc
dec
addr16
adc
add
enter
stos
dec
fldenv
xchg
inc
pusha
rcl
les
in
sub
add
pop
(bad)
out
xchg
xchg
xor
stos
sti
arpl
sub
mov
pop
loopne
mov
or
js
pop
ds
dec
pop
sahf
pop
in
xchg
nop
lahf
fnstcw
std
or
popf
loope
inc
inc
xchg
adc
push
cmp
sbb
and
jge
(bad)
in
cmps
imul
loop
cmp
sub
out
push
sbb
in
inc
lods
push
cmp
add
das
sbb
add
hlt
dec
pop
cmc
add
popf
daa
inc
out
and
or
xchg
loop
retf
data16
ret
dec
and
adc
mov
sahf
data16
fxch
das
cmp
cmps
aas
outs
dec
and
pushf
out
int
inc
mov
push
push
rcr
or
and
in
mov
loop
out
enter
in
cmp
lods
aaa
fidiv
pop
std
jns
icebp
mov
stc
ror
fnsave
inc
bound
push
push
mov
fsub
adc
and
fadd
out
xor
jo
fidivr
jg
and
inc
inc
cbw
outs
test
or
or
imul
xchg
cmp
inc
xchg
sti
xchg
mov
mov
xor
dec
cmp
(bad)
pushf
pop
out
push
push
jb
sub
sahf
push
cmc
pop
mov
push
pop
leave
pop
or
in
out
push
les
js
pop
jge
aaa
pop
inc
and
or
fmul
in
mov
cmp
test
aad
mov
lods
fcomp
lds
cmp
ins
leave
in
jno
into
cmp
test
jnp
fistp
retf
aad
mov
fstp
add
mov
test
pop
(bad)
dec
xchg
pop
dec
pop
mov
add
cmc
arpl
jecxz
imul
and
push
sbb
pop
cs
div
pop
pushf
cmp
mov
xchg
ret
gs
scas
pop
fsub
retf
mov
cs
test
xchg
xchg
mov
enter
inc
and
mov
jns
mov
out
arpl
or
loope
dec
imul
ja
sahf
ffree
add
jne
lea
int3
xor
std
inc
in
mov
lahf
call
gs
sub
or
ret
out
sbb
shl
xchg
mov
pop
rcr
les
cdq
or
stc
mov
imul
sub
fcomp
xor
lahf
scas
push
sbb
mov
cmp
xchg
dec
dec
and
ins
out
inc
xor
mov
mov
and
ins
cmps
add
cmp
jmp
hlt
pop
jg
add
enter
fld
out
retf
pop
pop
icebp
sti
jle
pop
mov
pop
cmp
int
jae
loope
repz
mov
add
int
daa
push
imul
cdq
aad
dec
pmaddwd
in
sahf
xor
xor
dec
test
in
pop
test
adc
(bad)
sahf
sbb
mov
jo
sub
mov
(bad)
jge
cmp
repz
cli
inc
cld
ja
xor
call
ror
fmul
daa
sub
jo
and
into
cmps
jno
loope
mov
or
and
dec
sub
pop
sub
and
in
inc
jae
inc
(bad)
ins
addr16
aas
cdq
mov
cdq
mov
cli
gs
inc
push
and
fistp
xchg
lods
inc
push
(bad)
ficomp
jmp
push
cmps
movs
ja
jl
push
pushf
inc
mov
xor
mov
dec
add
arpl
mov
je
push
imul
hlt
or
dec
inc
mov
out
mov
or
data16
loopne
mov
cs
aam
jb
xor
jne
jecxz
fwait
jo
test
aas
or
jg
loop
bound
aas
push
jmp
std
inc
clc
sub
mov
outs
adc
loopne
lods
es
loop
sti
sub
fadd
adc
lods
cwde
xor
inc
ret
rcl
ins
out
shl
cwde
aas
pop
jge
mov
push
inc
xchg
ja
mov
mov
mov
sbb
cmp
ins
sbb
data16
mov
repnz
dec
adc
mov
jl
xor
pop
and
out
mov
into
dec
ss
mov
out
xchg
arpl
pop
pop
out
ds
sbb
pushf
cmp
into
push
imul
xor
push
call
push
or
(bad)
loope
jecxz
(bad)
lahf
mov
sbb
ins
mov
icebp
fwait
pop
jmp
or
inc
test
mov
ror
int3
push
push
(bad)
aaa
test
and
cmp
inc
inc
lods
sub
push
mov
inc
add
mov
icebp
mov
idiv
jmp
leave
loope
(bad)
jmp
mov
cmp
(bad)
push
outs
sbb
cmp
shr
enter
xor
clc
sub
push
mov
popa
dec
sub
dec
stos
sub
je
and
dec
dec
(bad)
pop
mov
sbb
mov
fnstcw
dec
cmp
imul
adc
sbb
rol
and
mov
mov
xor
sbb
jp
loope
ins
out
pop
fldcw
call
inc
enter
mov
hlt
sub
push
lds
mov
fwait
pop
arpl
push
aam
addr16
sahf
add
popf
loopne
bsr
ins
mov
xchg
adc
push
cdq
adc
out
jg
mov
cld
push
iret
sub
int
jo
test
or
fisubr
shr
pop
fcomip
repnz
aam
add
push
sbb
xchg
xchg
arpl
xchg
es
dec
inc
rol
push
adc
adc
stos
(bad)
retf
jns
xchg
(bad)
int
jno
scas
adc
out
mov
xor
ret
(bad)
mov
xor
sbb
iret
and
(bad)
pushf
or
cmp
rcl
call
mov
ret
leave
and
icebp
lods
push
stc
pop
mov
rol
push
les
shl
loopne
jmp
push
jmp
mov
fwait
addr16
dec
cmp
je
jae
jle
movs
jnp
int
mov
lahf
fsubrp
das
or
add
push
cld
imul
mov
imul
cli
cmp
dec
outs
pushf
rcr
xchg
das
retf
ins
sub
push
push
mov
mov
pop
aam
clc
mov
sub
cdq
adc
pop
pushf
sbb
imul
fistp
jb
out
sub
sbb
pop
jle
fcmovne
pop
mov
push
push
fstp
mov
adc
(bad)
xchg
jg
dec
std
ss
mov
popa
mov
sbb
and
push
mov
ret
xchg
xchg
idiv
loopne
ret
fs
(bad)
gs
jmp
and
cmp
int3
pop
sub
push
push
and
add
call
mov
xor
dec
inc
les
inc
aad
sbb
out
repz
dec
cmps
mov
ja
and
xchg
enter
or
js
xchg
pop
(bad)
(bad)
cmps
aaa
mov
ret
fstp
int3
xchg
neg
adc
mov
dec
test
push
xor
xor
xor
add
dec
ficom
(bad)
mov
mov
xchg
cli
jle
call
push
and
pop
emms
repnz
pusha
inc
dec
std
lods
jb
pop
mov
adc
cmps
test
sbb
inc
mov
in
(bad)
lock
xchg
cmp
sbb
jns
(bad)
out
shl
pop
adc
movs
enter
aad
xlat
mov
mov
scas
aas
jbe
pop
cmp
dec
lea
inc
xchg
out
jbe
inc
mov
sub
xor
xchg
cmp
mov
stos
pushf
mov
xchg
dec
das
and
test
(bad)
ds
out
out
push
mov
repnz
xchg
cdq
mov
out
pop
loopne
std
out
fcom
inc
push
cdq
pop
daa
mov
mov
pusha
imul
pop
out
mov
(bad)
in
mov
adc
jecxz
inc
inc
add
lods
test
xchg
(bad)
pop
fild
cwde
test
shr
adc
adc
pusha
lods
sub
add
js
pop
sbb
or
(bad)
js
les
or
ficomp
cli
push
cmp
outs
or
aaa
cmps
(bad)
mov
out
cmp
or
ja
push
jle
stc
pushf
cmp
jbe
push
mov
mov
xchg
pop
sub
test
loope
icebp
mov
(bad)
push
push
inc
inc
(bad)
xchg
inc
int
jmp
sti
sbb
jle
retf
addr16
push
stc
mov
iret
loopne
adc
add
mov
jb
jae
dec
iret
xchg
mov
mov
pop
adc
mov
fiadd
loop
push
cmp
loop
int
ret
mov
cmp
dec
repz
es
test
lods
(bad)
sub
pop
aas
and
and
pop
loopne
and
sub
dec
cmp
cmp
pop
test
outs
xchg
xchg
stos
cmp
jmp
jnp
pop
pushf
mov
and
jno
addr16
out
pop
in
mov
movs
xchg
stc
mov
mov
sub
or
stos
lea
jae
xchg
xchg
rol
dec
stos
cs
out
dec
pop
ret
loop
in
mov
mov
movs
sub
push
mov
xor
pop
xor
fild
aam
int
aad
dec
sbb
dec
sub
ja
fistp
jo
dec
push
out
mov
pop
cmp
inc
stc
and
ins
adc
call
adc
dec
jnp
ffree
mov
sbb
jno
inc
ins
bound
outs
(bad)
test
imul
scas
imul
xor
lea
mov
(bad)
cmp
pushf
jno
mov
jno
jbe
xor
fisubr
lahf
and
dec
sar
sti
mov
outs
xor
mov
xchg
xor
mov
test
cmc
pop
sub
xchg
mov
or
sti
cmc
adc
mov
inc
int3
push
pop
ret
rcr
adc
movs
or
ins
rcl
mov
and
sti
xlat
(bad)
mov
ror
sbb
rcl
push
dec
shl
shl
imul
cwde
lds
daa
mov
sbb
sti
sub
inc
ja
(bad)
and
or
jmp
lods
pop
sbb
dec
jb
mov
es
add
addr16
fist
push
bswap
sbb
jmp
mov
lea
pop
mov
jmp
jp
xchg
ficom
nop
cmp
retf
imul
test
repz
sti
ss
jecxz
repnz
outs
push
bound
popf
test
popf
inc
(bad)
mov
int
xor
leave
add
sbb
lods
jge
fistp
(bad)
cmp
push
mov
xlat
sub
test
sti
out
in
pop
push
sbb
in
neg
fcomp
fistp
adc
fdiv
das
push
xchg
jle
sub
ret
adc
aaa
or
cwde
cli
xor
(bad)
mov
or
push
sahf
shl
jb
adc
sahf
push
add
data16
inc
cmp
push
test
das
adc
aaa
shl
xor
js
jns
test
out
xor
inc
lea
out
mov
gs
jle
stc
inc
mov
pop
xchg
adc
iret
ficom
mov
arpl
fadd
neg
push
sar
aas
or
mov
adc
sub
mov
xlat
mov
push
daa
jo
mov
and
gs
jmp
sub
test
mov
fdiv
mov
rol
iret
fcom
mov
jnp
mov
mov
outs
les
pusha
mov
stc
xor
in
cmps
mov
ins
jl
test
mov
scas
jne
adc
pop
pusha
popa
push
aaa
jae
shl
mov
in
adc
push
jo
lahf
cmps
jge
loopne
retf
mov
jnp
xchg
pop
int3
ss
(bad)
in
push
mov
adc
scas
adc
cli
es
aam
and
jg
or
es
dec
and
or
mov
push
xor
pop
cmps
mov
imul
mov
in
pop
popa
sub
xchg
into
repnz
xor
inc
cmps
or
fadd
daa
test
mov
leave
daa
push
sub
add
xor
fsubp
enter
clc
add
fist
(bad)
stos
cmp
cmp
imul
and
add
test
push
scas
jbe
jl
mov
in
xor
(bad)
jbe
mov
call
inc
push
jle
push
dec
add
xchg
inc
out
xchg
data16
and
mov
out
cmp
(bad)
scas
inc
inc
dec
mov
or
cs
push
daa
and
lods
dec
lds
retf
cmp
ficom
add
cs
mov
cmp
mov
add
int
sub
add
xchg
test
and
and
(bad)
or
(bad)
sbb
stos
pop
inc
arpl
pop
mov
push
inc
mov
fiadd
mov
cwde
jmp
adc
movs
push
push
cmps
inc
data16
enter
jmp
mov
imul
and
jl
inc
jmp
addr16
push
jmp
push
xchg
sbb
popa
outs
pusha
int
sub
fild
push
pop
or
test
das
sbb
add
xor
pusha
adc
ja
rol
push
cmps
shl
cmp
xchg
sbb
out
das
add
or
lahf
sar
mov
test
repz
icebp
lock
mov
push
call
jg
cli
das
push
or
xor
aam
mov
cmp
jmp
push
ss
fld
dec
mov
adc
std
nop
pop
(bad)
pop
icebp
movs
sbb
fld
push
ins
mov
adc
add
hlt
adc
mov
ds
or
dec
push
and
je
xchg
daa
icebp
lock
fdivrp
shl
pop
xchg
test
pop
inc
jp
cmps
sub
adc
movs
mov
lock
jl
repz
out
push
mov
mov
call
sub
add
inc
adc
and
rcr
int
jmp
push
and
sbb
push
and
inc
data16
das
xchg
aam
xchg
mov
jmp
or
sar
fisttp
ja
push
bnd
mov
mov
add
popf
int
sti
in
push
xchg
push
cmp
push
mov
and
dec
ins
outs
scas
fwait
in
adc
lahf
sbb
sub
outs
(bad)
cmp
adc
data16
jge
mov
xlat
pop
jl
sar
lods
and
inc
fiadd
fld
mov
aaa
(bad)
in
push
sbb
ror
cmp
push
pop
and
mov
data16
cwde
sub
or
daa
sub
ror
cld
inc
ins
fmul
adc
xchg
cmps
sub
push
stc
adc
sbb
outs
fistp
movs
pop
pushf
aad
sub
imul
xor
sub
lock
retf
cwde
mov
test
xor
cmp
jg
jbe
mov
(bad)
call
add
mov
es
frstor
fwait
lods
leave
mov
cmp
fld
cs
neg
lahf
cmp
out
dec
out
std
shl
out
jmp
retf
icebp
in
cmc
lods
ret
dec
in
cmp
das
cmps
cmp
sub
loopne
push
inc
jo
fsub
push
stos
ret
mov
sbb
(bad)
rcr
(bad)
jg
(bad)
out
shr
sub
test
in
mov
xor
jns
push
cmp
retf
pop
rol
aas
pop
popf
in
xor
inc
xor
idiv
popf
int
ins
arpl
cmp
jae
inc
fs
jp
gs
loopne
cmp
mov
neg
jl
les
cmp
ret
outs
adc
push
clc
sbb
out
cmp
inc
sub
or
outs
cwde
imul
mov
dec
inc
hlt
out
in
(bad)
cld
arpl
adc
push
add
leave
fcomip
test
(bad)
test
sbb
scas
mov
xchg
pusha
rol
mov
xchg
das
gs
dec
sahf
popf
mov
jmp
push
fld
retf
push
(bad)
push
and
icebp
in
js
mov
pop
lahf
dec
imul
ja
push
xchg
cld
jmp
mov
scas
xor
pusha
push
cli
add
cmps
call
sahf
sub
out
cwde
jae
(bad)
aam
cli
cmc
mov
add
stc
or
jne
int3
inc
xchg
pop
dec
mov
mov
fs
inc
shl
std
in
retf
(bad)
outs
xchg
cmp
jmp
(bad)
pop
test
dec
retf
inc
clc
mov
mov
into
dec
je
jl
(bad)
lahf
push
in
jle
jmp
mov
hlt
test
xchg
cmc
loopne
pop
loop
dec
mov
xchg
add
jno
adc
loop
or
xchg
jns
xor
mov
push
cs
mov
sbb
mov
aaa
xlat
mov
addr16
stos
xchg
fcmovu
dec
mov
ins
xchg
xchg
xchg
cmps
sbb
mov
and
lods
fild
lea
adc
inc
repz
addr16
leave
jb
xor
(bad)
sti
in
push
hlt
int
mov
repnz
jmp
sbb
sti
ja
jle
jnp
scas
push
fcmovnbe
(bad)
(bad)
cld
mov
push
out
mov
outs
call
cmps
dec
out
and
je
jne
sti
icebp
xchg
xchg
fwait
dec
mov
in
call
in
in
loopne
pop
fisttp
and
mov
cmp
mov
stc
std
ja
push
vpsrad
inc
sti
jl
mov
jne
mov
invd
jmp
rcl
inc
dec
mov
jns
into
jg
retf
sbb
push
fwait
retf
je
inc
(bad)
jecxz
sub
sub
adc
mov
fmul
sti
cmps
pop
sbb
or
mov
sbb
jae
clc
movs
push
sub
sub
add
mov
jno
test
stc
dec
mov
and
ret
pop
jbe
sub
std
cld
mov
aam
xor
xor
mov
pop
test
jnp
(bad)
dec
mov
push
nop
cmp
cmc
je
inc
pop
push
sub
int3
mov
mov
fcom
dec
bound
lds
jl
lods
mov
scas
outs
daa
in
adc
lock
pop
mov
cmp
cs
jl
into
aaa
xchg
pop
cmp
lods
icebp
icebp
pop
cdq
loopne
fwait
jecxz
imul
xlat
inc
push
jp
dec
sbb
(bad)
fmulp
jne
jo
hlt
cwde
jns
ins
inc
loopne
aaa
sub
int
rol
mov
push
mov
add
push
js
or
and
pop
lock
jbe
(bad)
mov
cmp
jbe
clc
rcl
jle
adc
(bad)
call
or
adc
push
jg
leave
das
add
mov
mov
cmp
test
adc
sbb
pop
xchg
sbb
outs
mov
mul
cmp
push
dec
fs
call
add
repnz
jmp
fcmove
jb
jmp
imul
call
daa
push
pushf
sub
inc
pop
and
cmp
fmul
stos
mov
pop
mov
in
into
jl
jb
and
push
test
sbb
lea
sub
mov
sub
imul
cmp
fbstp
adc
cmp
addr16
inc
xor
jo
aad
sub
adc
mov
ja
scas
movs
(bad)
cmp
push
fadd
(bad)
fs
inc
loopne
movs
out
adc
jle
out
data16
cs
push
mov
aad
jmp
jmp
fsubr
fdivr
daa
imul
jnp
icebp
mov
sbb
fist
aam
bound
ins
push
xlat
in
push
loop
and
pop
addr16
sar
mov
ja
cmps
jecxz
mov
mov
pop
adc
and
scas
mov
dec
(bad)
std
mov
jb
sub
out
and
push
outs
aam
(bad)
fild
xor
jnp
pushf
xor
xchg
jmp
fild
ffreep
mov
movs
jae
inc
test
dec
xor
mov
pop
mov
mov
(bad)
xor
pop
enter
(bad)
push
cmp
icebp
idiv
out
add
add
xchg
jecxz
ins
lods
and
push
cmp
fadd
mov
xlat
sub
cmp
mov
ss
dec
js
into
fsub
(bad)
mov
scas
add
aaa
mov
xchg
and
cmp
xor
inc
mov
inc
aaa
inc
stos
ds
cmc
or
xchg
out
daa
lea
pop
sahf
imul
clc
pop
pusha
xor
pop
sub
or
push
xchg
cmc
sbb
add
stos
sub
pop
bound
cs
cli
(bad)
mov
cmp
fnstenv
enter
ins
scas
ins
icebp
out
pop
test
xchg
iret
mov
jnp
(bad)
jmp
xchg
pop
sub
in
mov
adc
xchg
loopne
mov
lds
mov
jmp
dec
push
retf
stos
adc
stos
ds
push
push
out
daa
in
sub
xor
jbe
jbe
cmp
jnp
sbb
xor
cs
and
(bad)
aas
mov
data16
and
outs
or
jmp
jmp
mov
xchg
push
dec
jecxz
or
fcmovb
das
cmps
xor
or
inc
mov
out
lds
adc
mov
mul
mov
mov
inc
stc
push
ret
dec
mov
dec
dec
sub
(bad)
xchg
mov
out
push
shl
shr
jae
jp
sub
fdivr
mov
mov
xor
inc
jbe
mov
xor
xor
data16
cmp
dec
cmc
call
cmp
jg
xchg
movs
movs
arpl
sbb
lock
add
xchg
shr
inc
pop
dec
js
ss
jp
out
cmps
(bad)
cmp
aam
loope
jo
xchg
ins
fwait
ret
ds
leave
push
not
lods
sbb
js
imul
mov
jg
call
jle
mov
ds
sti
bound
xchg
in
shl
jmp
lds
fldenv
dec
std
mov
jge
loop
adc
popf
fs
lahf
pop
inc
shr
shl
fidivr
mov
or
jp
inc
sar
(bad)
pop
jecxz
fdivr
and
mov
rol
cli
dec
sbb
addr16
(bad)
leave
dec
ret
call
and
out
test
cmp
out
loope
jmp
mov
gs
xor
(bad)
js
sar
std
test
add
sub
hlt
lock
mov
mov
xor
mov
das
repz
cld
mov
sub
mov
mov
mov
sti
in
and
loop
pop
pop
pop
repnz
into
xor
mov
mov
jg
mov
pop
enter
jno
mov
test
xor
dec
adc
and
dec
xor
xchg
movs
cmp
shr
mov
test
pop
ror
stc
mov
push
cmp
cwde
popa
dec
jmp
test
and
mov
cdq
cld
scas
xchg
lock
sbb
mov
adc
inc
(bad)
push
adc
in
xchg
xor
or
cmp
aad
xor
stos
arpl
frstor
pop
fmul
jae
lds
dec
xchg
mov
clc
xchg
test
mov
(bad)
mov
movs
aam
js
jne
pusha
lods
cmovnp
add
ja
fsubr
xchg
adc
push
repz
std
add
hlt
imul
mov
lods
mov
jp
mov
push
xor
ins
and
sbb
xchg
add
mov
cwde
ss
sub
mov
fild
cmp
sub
shl
xchg
jns
pop
int
cmp
jmp
xchg
mov
fidivr
das
xchg
or
or
jmp
jb
push
pop
sbb
es
xor
dec
cdq
fwait
pop
cmps
xor
aas
fistp
push
outs
in
outs
mov
(bad)
in
push
cli
mul
pushf
ss
icebp
cmp
mov
(bad)
and
stc
mov
dec
loope
(bad)
mov
movs
pop
(bad)
pop
jbe
pop
dec
or
cs
arpl
idiv
loop
ror
stc
push
add
test
dec
xchg
inc
repz
xchg
retf
imul
cld
fwait
sahf
adc
add
xor
jmp
inc
(bad)
pop
jmp
fwait
xchg
mov
in
stos
imul
test
sbb
fwait
retf
mov
jmp
pushf
mov
int
sub
fadd
or
test
repz
je
fwait
cmp
or
mov
mov
dec
pop
xor
cmp
lahf
add
adc
mov
lea
into
push
(bad)
scas
or
sub
cmp
sbb
xchg
dec
loope
dec
mov
adc
sub
mov
mov
dec
pop
adc
push
sub
js
test
out
adc
movs
cmps
je
xchg
cmps
xchg
iret
inc
mov
ret
sar
pop
dec
not
pop
mov
sbb
scas
call
out
(bad)
jge
aam
add
cmps
psraw
xchg
jb
std
mov
dec
cli
dec
ins
pop
rcl
fst
xchg
or
in
movs
ror
push
ror
dec
and
iret
and
out
sbb
pop
jne
shl
xchg
lods
stc
enter
std
in
call
rol
cmp
mov
sbb
lods
push
inc
jo
(bad)
add
cs
fsubr
xlat
mov
retf
(bad)
aam
mov
xchg
inc
sub
xchg
push
icebp
les
jp
lock
leave
sub
add
xor
sbb
xchg
add
lock
add
mov
adc
and
les
sbb
jmp
mov
sub
scas
test
(bad)
(bad)
and
inc
jmp
mov
das
icebp
sbb
out
and
mov
in
mov
out
int
jo
pushf
xchg
call
js
mov
jg
xchg
ja
jl
and
mov
mov
test
fmulp
pop
push
sbb
jbe
cli
lahf
xor
add
(bad)
adc
dec
cmp
das
jg
fiadd
out
jno
out
pop
neg
fimul
(bad)
retf
test
jge
pop
imul
(bad)
mov
fcomp
sub
mov
pop
pop
sub
test
aad
pop
mov
fistp
call
adc
mov
pop
xor
arpl
pop
repnz
hlt
or
shl
inc
in
mov
aad
(bad)
dec
cmps
xchg
add
add
test
stc
adc
sub
movs
psrad
je
jmp
sub
and
pusha
adc
ffreep
inc
(bad)
sti
jae
ins
mov
mov
jge
in
aaa
jbe
mov
sahf
(bad)
test
mov
and
aaa
jmp
fwait
xchg
daa
jbe
adc
and
dec
das
sub
add
ins
pop
cli
iret
fisub
jmp
add
out
div
mov
sbb
sti
in
mov
inc
sbb
(bad)
in
addr16
jae
or
aaa
test
push
daa
xor
aam
dec
cmp
(bad)
scas
fstp
adc
in
or
cld
and
and
pop
pusha
xlat
mov
push
out
(bad)
jmp
sbb
lea
xor
dec
test
push
in
xor
dec
dec
loope
lods
push
and
xchg
aas
cmp
retf
cmps
es
pop
jne
mov
stc
in
dec
out
jo
rol
xor
pushf
retf
cmp
(bad)
cli
push
push
ss
xor
jg
cmps
mov
cmps
xchg
inc
mov
cmove
mov
jne
out
int
(bad)
iret
mov
add
xlat
xor
test
jl
iret
add
xchg
mov
cmp
loope
add
(bad)
cmp
inc
jge
dec
adc
in
loop
push
sbb
sbb
call
and
inc
inc
js
xlat
mov
mov
mov
aad
shl
pop
and
or
cmp
arpl
jecxz
jbe
sbb
(bad)
sbb
loope
ret
mov
push
repnz
xor
ret
or
das
fiadd
mov
retf
data16
cmps
test
xor
out
sub
jae
xor
lods
in
and
and
mov
loopne
pushf
dec
jmp
imul
jl
aam
aaa
cmp
xchg
sub
lea
out
push
test
sub
inc
out
mov
std
adc
fdivr
mov
or
std
sahf
ss
cmps
movs
push
test
mov
push
out
cmp
add
adc
inc
ret
push
call
fild
and
mov
push
dec
jb
stos
addr16
jl
leave
stos
and
(bad)
enter
jb
aas
ins
jae
mov
mov
gs
into
dec
retf
dec
mov
or
jne
sub
outs
pop
pop
out
stos
push
mov
icebp
jno
and
xlat
cmps
pushf
xchg
cmc
fisubr
dec
gs
mov
rol
jb
dec
pop
movs
mov
cmps
int3
mov
mov
aam
nop
cld
(bad)
dec
cld
fwait
shr
scas
add
in
rcr
scas
jl
jmp
xchg
mov
ret
fist
inc
in
adc
retf
sbb
movs
pop
ins
mov
mov
test
pop
pop
xchg
sub
push
arpl
jbe
retf
cwde
pop
jmp
fcom
retf
or
xor
(bad)
int
pop
jns
sar
dec
push
iret
call
mov
retf
pop
xchg
push
in
fistp
aaa
sub
movs
sar
adc
pcmpeqd
sbb
or
push
fisttp
fidivr
mov
sbb
sub
adc
pop
and
pop
mov
adc
lock
jbe
inc
outs
int3
jbe
ins
int
push
test
push
cmps
fstp
push
daa
mov
cmps
mul
test
xor
fucomip
ror
jl
popa
(bad)
rcr
push
cmp
or
cdq
mov
dec
xor
mov
mov
sub
pop
stc
loopne
ficom
xchg
ret
lods
cmp
and
(bad)
out
add
(bad)
(bad)
mov
clc
push
pop
cld
sbb
sub
pop
mov
mov
lods
mov
daa
mov
stc
push
aas
sub
out
xlat
cmp
dec
sub
jno
dec
dec
lgs
out
out
ins
fs
and
es
imul
jge
test
out
out
dec
sub
jnp
cmp
enter
dec
(bad)
sbb
pop
jg
cs
int3
xor
sbb
arpl
dec
and
es
mov
xor
aas
push
int3
push
popa
test
push
daa
je
test
retf
sub
hlt
xlat
mov
cwde
dec
int3
jle
jmp
stos
(bad)
aad
and
test
mov
jecxz
lods
ss
sbb
push
in
test
fwait
ins
clc
mov
pop
and
jl
cmp
pop
hlt
cld
dec
push
lds
shl
xchg
(bad)
and
jl
mov
jmp
adc
push
cld
ds
mov
xchg
clc
call
icebp
test
leave
dec
lods
fmul
addr16
xor
ins
dec
lock
stc
mov
xor
lods
std
stos
xchg
repnz
das
xchg
xor
das
sbb
bound
stos
int3
pushf
mov
or
das
mov
add
or
aaa
and
call
fisttp
test
push
in
mov
(bad)
push
ss
int3
sbb
or
stos
sub
and
jns
dec
adc
add
mov
cs
cmp
ret
pop
mov
push
adc
mov
or
dec
xchg
sub
xchg
aas
hlt
jbe
mov
add
int3
in
xchg
out
sbb
scas
mov
sbb
dec
sbb
mov
lods
iret
pop
out
dec
and
cdq
ins
xor
adc
jns
loope
not
scas
cld
dec
fbld
stos
push
stc
push
fidiv
retf
push
push
push
imul
addr16
push
mov
adc
xor
dec
jne
sbb
push
sub
mov
cdq
dec
(bad)
retf
cmp
enter
xchg
dec
and
scas
pusha
out
mov
jbe
(bad)
mov
xlat
ins
cwde
mov
fldcw
pop
repz
sbb
fld
and
xchg
jb
sub
mov
and
aaa
adc
ins
jp
pop
sub
inc
or
mov
imul
pop
pop
lahf
dec
jle
mov
inc
xor
jg
mov
mov
ins
aam
(bad)
cmp
arpl
in
xchg
cmc
cmp
mov
jl
adc
inc
sub
push
test
rol
(bad)
inc
push
pop
fidiv
inc
repz
int
arpl
ret
div
xchg
and
adc
mov
inc
push
xchg
movs
sahf
stos
pop
or
and
or
mov
mov
imul
jecxz
push
sub
cmp
push
leave
sub
push
dec
and
sub
pshufw
ins
popf
dec
xor
hlt
loop
inc
ja
sub
imul
sub
cmp
dec
mov
jp
inc
push
mov
bound
aam
xor
ins
dec
loopne
out
inc
dec
mov
fldcw
inc
inc
fwait
pop
push
das
loope
aam
and
dec
and
sti
mov
js
or
fcomp
js
inc
or
add
clc
sub
cmp
mov
pop
in
pusha
dec
cmp
jb
pop
loopne
(bad)
cld
xor
xor
push
dec
repz
scas
push
dec
pop
int
ins
push
movs
loopne
push
jbe
push
jo
dec
not
shr
bound
imul
out
xor
(bad)
outs
movs
hlt
xlat
dec
xchg
mov
inc
aad
lahf
push
mov
push
and
jmp
jnp
aam
xlat
es
fbstp
mov
fcomi
retf
mov
stc
scas
mov
(bad)
in
push
jle
lods
std
stc
std
mov
retf
xor
je
sahf
sub
ss
xor
push
mov
push
repz
je
dec
mov
push
push
inc
pop
pop
mov
adc
sbb
je
pushf
in
jmp
sub
jl
in
inc
dec
loopne
or
mov
xchg
sub
add
adc
femms
jno
data16
xchg
sets
sbb
shr
ss
mov
xor
cmp
movs
(bad)
(bad)
loope
xlat
pusha
ss
push
xor
cmp
cmp
pop
dec
mov
sub
push
pop
mov
xchg
lods
(bad)
fidiv
lods
cmp
stos
mov
pop
mov
jbe
pop
sbb
test
les
jno
mov
retf
pusha
(bad)
aam
rcr
jmp
iret
lds
pop
call
data16
pop
add
sub
mov
pop
out
jmp
sub
cmp
and
js
or
test
int
fsubr
cmp
outs
lock
out
dec
jns
ret
lds
cmp
mov
xlat
xchg
push
pop
inc
xchg
pop
repnz
(bad)
stc
push
add
retf
inc
jno
sbb
gs
jnp
jnp
enter
mov
add
jmp
lahf
push
mov
cmp
pop
jnp
xchg
adc
mov
ins
cmps
pushf
mov
mov
cmp
jge
popa
jge
add
sub
pop
arpl
mov
pushf
add
jnp
js
and
fnstenv
mov
popf
jbe
scas
inc
push
aaa
std
ret
outs
xor
push
mov
adc
ret
call
or
jns
jmp
out
shl
pushw
(bad)
sub
retf
sub
retf
or
retf
jg
sahf
lea
mov
sbb
lock
shl
loope
scas
cmp
dec
add
aad
(bad)
cmp
sti
adc
(bad)
ss
sub
leave
and
add
dec
inc
and
sti
push
lock
mov
fs
dec
dec
mov
sbb
stos
lds
xor
sbb
ja
enter
test
lods
arpl
mov
fidiv
sti
fs
sbb
lahf
push
push
xchg
test
ror
mov
(bad)
lahf
mov
xor
out
jnp
jae
jbe
inc
mov
aaa
rcr
fiadd
cmp
pop
jbe
or
inc
jno
mov
scas
jmp
fwait
cmps
sub
stos
pop
pusha
loop
idiv
adc
or
aad
ja
add
(bad)
sub
mov
movs
pop
add
jmp
std
push
imul
xchg
int3
adc
cmp
mov
ins
test
xchg
pop
sbb
jmp
imul
mov
ss
sub
jno
(bad)
pop
ins
xchg
lea
add
mov
leave
shl
jne
mov
test
xor
push
vxorps
mov
ret
aad
int
jmp
ss
dec
jb
inc
fist
and
(bad)
mov
mov
xor
inc
push
dec
pop
add
dec
pusha
loop
push
sbb
mov
enter
sti
mov
sar
cwde
pop
xor
mov
std
jmp
sub
mov
ja
lods
rcl
cmp
dec
imul
add
fnsave
out
adc
xchg
cli
push
inc
jne
hlt
cmp
imul
jp
addr16
pop
xchg
xchg
mov
push
js
repz
push
cld
pop
pop
sti
inc
(bad)
retf
push
in
jmp
push
jl
adc
adc
jmp
addr16
pop
xor
xor
add
adc
sbb
pusha
jl
mov
stos
lea
int
sbb
fistp
into
dec
and
xchg
add
retf
adc
stos
test
ja
aad
mov
inc
std
mov
pop
inc
mov
jne
fs
jae
jns
je
add
rcr
jne
mov
and
adc
repz
pushf
push
into
sbb
push
push
pop
test
push
jg
mov
jbe
dec
xchg
pop
jno
inc
sub
aam
pop
dec
pop
or
movs
pop
pop
inc
pop
fwait
ja
push
and
inc
lods
(bad)
(bad)
push
cmp
shl
xlat
xchg
cmp
jg
pop
or
(bad)
icebp
(bad)
stos
and
inc
add
pop
sbb
test
xchg
xchg
cmc
test
pushf
lahf
pcmpeqd
adc
pop
and
jmp
mov
pushf
mov
std
shr
ja
mov
push
jbe
cmp
or
jge
call
lods
test
xor
add
cli
mov
inc
dec
xchg
daa
xor
add
inc
sar
lea
dec
cmp
ja
mov
cmps
add
std
js
cmp
test
jb
daa
sub
jp
jmp
inc
test
xchg
dec
cmp
arpl
lods
test
cdq
cmp
mov
sub
call
enter
mov
mov
xlat
out
test
lahf
neg
inc
pop
xchg
arpl
inc
mov
or
adc
retf
adc
lahf
imul
es
jae
movs
push
cmps
in
dec
ja
add
pop
stc
fwait
mov
ins
sub
inc
es
daa
into
jl
cmps
pop
mov
pop
dec
lods
ins
xchg
(bad)
push
clc
add
mov
fcomp
mov
jo
fwait
iret
push
adc
mov
push
popa
call
pop
xor
(bad)
stc
mov
cmp
lds
mov
or
call
daa
mov
es
jo
addr16
pop
push
lds
add
(bad)
ins
stos
push
lock
mov
rcr
fidiv
cmp
sbb
cmps
stos
loopne
mov
and
mov
pushf
add
mul
push
add
fadd
push
pop
add
fdivr
retf
push
xor
xchg
push
sub
inc
dec
arpl
shl
jns
inc
out
mov
and
popa
dec
sahf
mov
vmwrite
xchg
ins
icebp
stc
ret
ret
dec
cmp
inc
imul
or
aaa
adc
inc
std
repnz
adc
dec
xchg
scas
push
or
and
sub
jb
xchg
sub
sbb
icebp
cmp
add
xor
add
sahf
mov
pop
cs
in
sub
jge
imul
sub
jp
retf
lahf
fsub
inc
pop
addr16
fwait
pop
pop
sbb
sub
fnstcw
(bad)
fxch
push
int3
imul
xor
dec
cdq
lock
pop
or
mov
loope
xor
adc
sub
(bad)
mov
je
add
test
sub
(bad)
cmp
mov
std
aas
mov
stos
sbb
js
icebp
in
sbb
(bad)
(bad)
movs
fmul
popa
nop
xor
fisttp
shl
js
xchg
and
ins
adc
ret
dec
sub
xadd
movs
sub
stos
sti
add
retf
inc
clc
shl
(bad)
xchg
out
movs
mov
into
ss
mov
mov
xor
push
cmp
sbb
cld
ror
cmp
xor
shr
cs
pop
pop
jmp
addr16
pusha
xor
clc
jmp
jmp
fs
cmp
mov
stos
rcr
mov
(bad)
enter
sub
xchg
retf
jge
push
stc
jecxz
cmp
shl
adc
not
jne
push
add
popa
add
in
pop
sbb
mov
or
mov
mov
xor
add
jns
xchg
xchg
mul
popf
popf
adc
aaa
(bad)
jmp
pop
sbb
jmp
pusha
(bad)
(bad)
ret
pop
mov
iret
sub
adc
xchg
aad
outs
or
fistp
int
xchg
xchg
pusha
push
aaa
je
and
test
shr
cmps
sbb
push
call
ins
out
dec
mov
ret
pop
out
gs
imul
out
xchg
pop
mov
pop
or
hlt
xlat
popa
ret
adc
sar
loop
pop
test
push
scas
sbb
shl
adc
mov
push
or
test
div
push
cld
dec
xor
or
fldenv
push
repz
sbb
jo
push
outs
mov
pop
imul
repnz
fnstsw
and
jle
movs
pop
mov
lea
xchg
push
cld
leave
outs
popa
cmp
xor
cmp
mov
jmp
data16
add
cmps
daa
push
xchg
pop
loopne
inc
in
jb
push
in
rol
jnp
test
std
jo
mov
push
mov
lods
inc
mov
cmp
(bad)
(bad)
jb
je
stc
mov
cld
or
fs
outs
int
xor
bsr
in
mov
jge
lea
ret
mov
adc
xchg
and
(bad)
cmp
das
pop
adc
out
mov
push
xor
arpl
es
movs
movs
pop
int3
dec
cmp
inc
sbb
pop
xchg
cwde
(bad)
loope
fist
inc
cmp
ret
enter
add
pop
sbb
adc
clc
pop
inc
fst
or
add
fstp
add
fstp
fst
(bad)
jb
je
hlt
lods
push
dec
xchg
bnd
pop
rcl
mov
dec
leave
fstp
int
mov
shl
pop
jbe
(bad)
sti
dec
(bad)
pop
cwde
add
addr16
in
ds
ret
sub
add
rcr
callw
je
ins
cwde
(bad)
bound
out
iret
xlat
inc
loop
fimul
sbb
sbb
fsub
repz
mov
dec
mov
movs
push
lea
push
call
push
std
cmp
xor
adc
repz
adc
jecxz
jle
sub
xor
sbb
sub
jle
xor
pop
outs
fs
das
sar
inc
xchg
retf
jns
inc
pop
out
(bad)
int3
adc
or
lods
std
xor
push
leave
jmp
mov
dec
int3
fdivr
xchg
adc
out
fisubr
jo
xchg
mov
not
mov
arpl
jge
js
xchg
push
xor
cmp
xchg
iret
mov
(bad)
jge
push
pusha
lahf
dec
retf
mov
shl
and
in
cmp
mov
inc
jg
push
jmp
sub
(bad)
cmps
bound
je
sub
dec
ret
cli
xchg
lods
icebp
mov
adc
or
sbb
scas
leave
mov
out
or
sbb
jne
test
repnz
movs
adc
repnz
mov
mov
repnz
sub
mov
stc
in
push
(bad)
pop
mov
hlt
pop
cmp
add
mov
dec
js
(bad)
in
fadd
les
adc
xchg
inc
ja
xchg
outs
cmp
sbb
xor
mov
mov
cmps
nop
mov
xchg
call
les
adc
repnz
sti
cmp
cmp
sub
jo
int
xor
push
mov
leave
fistp
pop
rcl
mov
bound
sbb
cmp
cmp
sub
or
arpl
and
inc
jb
inc
mov
les
(bad)
std
scas
mov
rol
mov
adc
(bad)
ins
pop
iret
in
fisttp
xchg
sti
lods
jge
dec
jecxz
fidivr
daa
repz
outs
lods
cmc
sub
fiadd
add
pop
sbb
inc
jg
push
and
adc
ja
bound
add
push
lds
mov
cmp
movs
popa
fldenv
jno
sub
xor
pop
jno
iret
mov
adc
outs
or
inc
push
sub
add
(bad)
sahf
imul
mov
rol
cmc
cmps
(bad)
mov
cmps
cld
push
aas
dec
pushf
adc
aam
jge
or
xchg
(bad)
cli
xor
xchg
inc
sub
adc
imul
inc
popa
in
adc
pop
shl
or
sbb
repz
dec
cwde
aad
out
push
in
inc
and
fwait
fs
mov
push
sbb
jmp
push
daa
push
fiadd
popa
dec
push
cmps
hlt
jae
call
popa
sub
jb
out
jecxz
movs
lahf
movs
fdiv
retf
loope
das
das
mov
call
cmc
retf
adc
mov
jo
adc
lods
addr16
cmp
cmp
mov
sahf
cmp
popa
jl
sbb
xchg
shl
sbb
and
mov
fwait
loope
lds
int3
mov
ss
or
pop
frstpm(287
inc
in
xor
mov
sar
xlat
jae
mov
ret
pshufw
mov
sub
daa
add
test
rol
nop
rol
movs
sub
icebp
cdq
enter
pop
sti
jne
je
mov
xchg
cli
or
retf
outs
ror
rdmsr
fwait
ins
mov
mov
mov
xor
pushf
push
addr16
rol
xchg
mov
sar
sbb
je
add
push
jge
loope
xor
in
cmp
or
mov
dec
(bad)
sar
sti
jnp
adc
inc
test
and
ins
(bad)
nop
out
pop
jns
mov
inc
add
loop
arpl
psubb
jle
cwde
xchg
add
or
jl
call
adc
sub
ins
std
popf
lds
sub
out
lods
sub
sub
rol
pop
test
test
test
pop
and
dec
sbb
pushf
mov
inc
(bad)
lahf
int
cwde
inc
xor
xor
xor
xor
xor
xor
xor
adc
sub
(bad)
push
mov
or
inc
enter
jle
jns
in
out
(bad)
jnp
into
pop
sub
ins
jne
xor
jecxz
cwde
shl
bsr
stos
adc
aam
out
cmp
fnsave
loopne
dec
dec
dec
(bad)
ins
nop
(bad)
ficomp
ins
fsubp
jno
fimul
mov
dec
add
pushf
mov
push
mov
fst
jnp
aas
and
lods
jp
jno
sbb
fdivr
pop
xor
mov
xchg
cmp
adc
mov
add
out
add
retf
xchg
mov
or
mov
ret
push
or
sub
aas
cld
sti
daa
in
fld
add
jno
dec
push
xor
sbb
jle
jbe
cwde
ret
std
fnstsw
jmp
lock
hlt
hlt
movs
inc
nop
dec
and
enter
cmc
in
xchg
lds
mov
and
call
push
(bad)
sbb
xlat
push
dec
inc
pusha
jl
push
lds
inc
jns
fbld
mov
scas
jmp
repnz
cwde
test
mov
stos
sub
mov
fnstsw
jns
cmp
stos
cdq
(bad)
cmps
icebp
mov
xchg
sbb
fld
and
xor
and
xchg
mov
mov
les
pop
ror
jbe
xor
xchg
sbb
jb
ds
add
mov
push
xchg
stos
daa
xlat
mov
outs
aas
mul
aaa
push
pushf
scas
jb
scas
cmps
repz
push
xchg
movs
retf
mov
jns
ror
inc
cmp
jbe
out
jmp
sub
out
dec
sbb
pop
dec
pop
popa
mov
mov
out
adc
data16
adc
scas
sub
push
out
aam
xor
es
jmp
sub
adc
or
xchg
nop
imul
adc
sbb
mov
iret
dec
lahf
int
test
xor
mov
mov
sti
call
out
cmps
aam
es
add
jnp
cli
xlat
dec
mov
mov
lea
int
popf
js
clc
addr16
cmp
movs
mov
fst
movs
ucomiss
dec
sub
ss
dec
iret
int3
not
inc
xchg
mov
mov
push
iret
movs
jbe
les
dec
ins
adc
mov
mov
sub
lock
pop
jmp
cmp
mov
pop
lea
mov
adc
xchg
int3
or
pop
xchg
mov
inc
pop
cmps
cwde
and
rol
cmp
add
xlat
inc
inc
cmp
pop
clc
pop
push
push
pop
stos
xor
jns
loope
bound
addr16
or
ret
mov
jge
and
stos
stos
pop
mov
or
int
sar
or
sbb
sar
cld
jbe
js
sahf
or
jmp
pop
push
inc
jno
jle
adc
es
out
push
out
mov
lods
mov
mov
dec
or
xor
xchg
ds
lea
xchg
ins
ret
cs
stos
xchg
ror
or
mov
inc
call
retf
and
xchg
xchg
ins
lea
jg
and
data16
enter
loopne
inc
or
inc
out
ffreep
test
(bad)
idiv
shl
and
dec
je
xor
ret
sub
jno
sub
movs
mov
into
add
sbb
fisub
aaa
dec
push
dec
shl
scas
cld
scas
pop
sbb
ret
jle
mov
movs
mov
push
in
cs
add
cld
jbe
imul
cmps
cdq
sahf
adc
jge
push
inc
leave
dec
xchg
(bad)
and
(bad)
out
mov
out
aam
mov
aaa
bound
gs
mov
sti
jg
fisubr
test
not
xor
arpl
mov
nop
pop
mov
icebp
outs
jne
add
mov
js
call
jp
pop
sub
xchg
cwde
imul
lods
mov
retf
or
xchg
lock
imul
mov
cmp
sahf
repz
dec
xor
jmp
out
add
div
loop
loop
xor
push
shr
imul
push
sar
aas
ins
mov
out
js
std
movs
sub
jp
stos
push
lods
sahf
inc
xchg
test
xor
jno
dec
push
adc
ret
or
imul
inc
cmp
aam
inc
cdq
aaa
inc
add
mov
dec
aas
js
in
mov
ficom
push
mov
repnz
add
loope
pop
pusha
adc
punpckhdq
aam
fucomi
inc
xlat
inc
and
mov
pop
(bad)
js
rcl
inc
mov
loope
sub
sahf
stos
pop
adc
adc
sub
bound
sub
or
cmp
mov
out
fistp
loope
or
imul
dec
adc
call
int3
std
sbb
test
sub
push
or
adc
xchg
ret
leave
mov
aam
std
movs
popa
pushf
or
(bad)
xor
aam
jl
lods
dec
mov
dec
jo
arpl
jmp
test
arpl
ds
stos
aad
jl
sub
enter
(bad)
in
xor
pop
test
fucomi
xor
sub
xor
cmp
ss
dec
push
shl
mov
aaa
out
sub
retf
cmp
cmps
mov
adc
xlat
push
shr
sbb
pushf
push
sub
nop
sti
hlt
sar
das
mov
dec
int3
sbb
cmp
mov
(bad)
fisttp
pop
call
int
inc
sar
cmp
jno
(bad)
jle
inc
fsubr
xor
fs
jmp
jne
js
or
jae
jo
dec
fldenv
lods
aad
retf
scas
add
inc
out
(bad)
jne
cmp
jmp
addr16
jge
pop
gs
scas
lods
mov
push
xor
mov
push
ins
xchg
fild
cmp
jp
push
sti
loopne
xor
and
jle
loope
xlat
movs
sub
sub
mov
inc
hlt
pop
addr16
movs
lds
es
ss
dec
pop
mov
(bad)
sar
jge
or
pop
aam
clc
sub
popa
shl
pop
push
jns
lgs
mov
(bad)
cs
das
test
pop
test
mov
dec
dec
adc
(bad)
retf
mov
mov
jnp
mov
mov
pop
cmp
sbb
mov
aam
outs
repz
mov
scas
push
push
int3
inc
adc
cdq
sub
mov
ja
mov
call
mov
adc
dec
and
or
sbb
mov
es
call
in
adc
jle
pop
dec
mov
xor
sti
sub
clc
and
sbb
lock
jmp
xchg
push
jbe
inc
mov
xor
cmp
ins
push
call
sub
js
cmp
icebp
addr16
cmp
fdivrp
inc
fcom
jecxz
sub
mov
push
jns
aam
pop
mov
jnp
(bad)
jmp
adc
or
mov
cmp
stos
sbb
bnd
stos
sub
ret
mov
fimul
or
(bad)
push
cmp
cld
ja
adc
cmp
fs
leave
lods
movs
adc
xor
add
ret
js
icebp
push
add
mov
add
sbb
sub
nop
mov
dec
and
loope
mov
jecxz
and
icebp
xchg
jg
int
mov
clc
das
jnp
leave
jo
imul
mov
mov
dec
jbe
fcomip
int
(bad)
cld
imul
xor
pop
stos
lock
popa
mov
push
repz
jnp
mov
xchg
jmp
mov
push
inc
push
in
sbb
sub
lods
dec
retf
fsubr
xlat
fsubr
push
dec
jge
bound
pop
jg
xor
adc
repz
push
adc
stos
cmp
inc
call
fbstp
mov
pop
test
sbb
adc
mov
(bad)
xchg
cmp
cmp
in
mov
into
call
stc
cmp
fcomp
mov
cli
jl
sbb
(bad)
mov
aas
jnp
ss
xlat
out
js
xor
mov
popa
pop
jbe
xchg
sbb
adc
lds
push
out
adc
mov
sbb
xor
int3
fbld
sub
stos
retf
or
push
aas
or
mov
popa
in
jg
pextrw
sbb
retf
(bad)
mov
cmp
push
lods
les
icebp
in
or
jne
jmp
out
movs
iret
retf
ins
xchg
into
and
leave
pop
shr
sub
push
je
(bad)
dec
jns
and
ja
pop
icebp
retf
push
push
in
fnsave
jecxz
ins
mov
aad
in
into
xchg
inc
sti
cmp
ja
fisub
scas
scas
jae
fcomp
jne
mov
mov
sub
mov
call
ja
push
sbb
cli
je
adc
icebp
cmp
jmp
cmp
add
and
jmp
add
sar
je
aam
(bad)
pushf
rcr
mov
aaa
xchg
aas
int3
xor
add
or
jmp
xchg
push
mov
fucom
pop
loope
retf
popa
pop
push
(bad)
not
stc
jp
jne
jle
xor
pop
enter
jmp
pop
add
mov
push
jg
mov
mov
lds
sub
xchg
popf
fs
mov
retf
mov
or
out
aaa
gs
mov
adc
sub
push
(bad)
mov
(bad)
mov
jl
shl
dec
sub
mov
out
adc
add
ret
movs
ins
push
test
cmp
pop
dec
and
cli
push
mov
nop
inc
mov
mov
les
cmc
ret
call
push
stc
(bad)
shl
sbb
cmc
adc
mov
pop
mov
(bad)
scas
pop
jmp
xchg
scas
jmp
(bad)
jl
scas
fnstcw
sbb
in
jne
in
jge
fst
xchg
and
pushf
mov
(bad)
dec
or
retf
inc
jnp
sbb
xor
jbe
add
rol
mov
addr16
sti
cmp
pop
add
int
and
outs
push
retf
cmp
inc
add
adc
out
mov
test
inc
pop
jge
push
imul
out
retf
lahf
sbb
mov
or
dec
cmp
sub
enter
aam
push
lds
jno
popa
adc
test
and
add
scas
(bad)
mov
xlat
mov
(bad)
xchg
daa
xor
push
stos
add
push
inc
mov
adc
or
fs
jle
ins
jmp
mov
pusha
mov
mov
cmps
xlat
inc
pop
sbb
jg
nop
pusha
jae
gs
sbb
cdq
push
and
and
add
sbb
mov
cmc
push
dec
xchg
mov
in
(bad)
mov
lahf
test
call
add
out
out
push
call
ja
ds
mov
in
mov
fdivrp
mov
std
mov
aaa
(bad)
mov
fist
nop
adc
cmp
jno
add
cmp
stc
cwde
mov
cmps
push
add
fistp
jno
leave
call
retf
stos
das
out
mov
push
clc
sub
ficom
out
fwait
cli
mov
and
inc
imul
icebp
sub
dec
adc
inc
mov
loope
add
or
mov
mov
jl
fwait
repz
pop
in
fdivr
mov
gs
dec
mov
into
mov
stos
retf
(bad)
pop
pop
lods
ins
mov
loopne
pop
sub
neg
jmp
cmp
je
repnz
idiv
test
je
lds
jne
cmps
out
jmp
enter
and
and
mov
dec
in
jmp
cmp
xchg
jg
xlat
jecxz
push
adc
push
dec
in
(bad)
fild
cdq
(bad)
lods
loopne
add
les
inc
das
movs
scas
mov
push
lock
jecxz
xchg
in
(bad)
jecxz
push
fcmovnbe
aas
cwde
loope
jo
xchg
leave
lahf
xor
in
shr
inc
and
ret
lods
outs
or
or
push
imul
cmp
jl
sbb
sbb
add
xchg
adc
imul
xlat
mov
repz
(bad)
popa
xlat
clc
repz
out
mov
dec
daa
outs
iret
imul
(bad)
cld
inc
push
lods
sbb
fwait
push
adc
int
sbb
xchg
call
push
jns
int3
mov
jne
in
cs
bound
(bad)
sbb
fwait
popa
loope
movs
mov
and
shl
cld
iret
xor
xor
mov
ror
fld
scas
inc
das
adc
scas
rol
mov
sbb
push
xor
mov
inc
icebp
add
adc
cmc
mov
call
popf
inc
fsub
(bad)
(bad)
aad
and
xlat
lock
cmp
js
das
pop
daa
movs
xchg
(bad)
cmp
pop
aad
mov
cmc
pop
inc
mov
jmp
mov
push
in
add
adc
mov
push
mov
fmul
out
mov
dec
mov
(bad)
scas
lods
popf
cmps
mov
pop
dec
mov
jmp
div
xor
dec
movs
clc
fidiv
mov
in
cmp
scas
push
sbb
inc
retf
dec
pop
xchg
adc
in
adc
scas
enter
scas
sbb
int3
test
mov
fistp
pop
dec
inc
sub
(bad)
out
stos
test
and
icebp
cmp
daa
(bad)
inc
div
push
push
enter
int
push
fadd
sub
dec
div
lea
xor
ins
mov
repz
std
sti
dec
push
ins
pushf
or
fst
icebp
sbb
sub
jno
sub
sti
push
dec
lock
sub
cmc
cmp
xor
jae
in
sbb
dec
rol
in
adc
ja
inc
mov
inc
push
daa
hlt
mov
fwait
rcl
adc
cmp
nop
ja
push
je
rcr
scas
inc
jmp
adc
xor
xchg
mov
stos
jl
mov
xor
dec
in
add
mov
lock
cmps
dec
adc
mov
jo
inc
fldenv
push
jbe
or
rol
push
das
int
mov
inc
pop
push
xchg
sub
les
push
mov
pusha
fdiv
sbb
shl
sti
lods
retf
loope
inc
scas
and
call
inc
add
and
push
xor
mov
xchg
ds
mov
icebp
or
add
imul
or
sbb
(bad)
mov
loope
and
dec
mov
jno
cmps
jae
cdq
vunpckhps
jmp
xor
push
pop
scas
or
mov
push
std
or
inc
mov
pusha
push
addr16
add
std
mov
jge
les
xor
xchg
mov
out
shr
cld
shl
test
mov
mov
inc
jae
cmc
and
xchg
lahf
mov
fnstsw
jmp
push
xor
lahf
cdq
dec
int
dec
cmps
test
out
jns
call
xor
xor
push
xor
dec
inc
ins
add
mov
inc
or
(bad)
pop
and
jae
test
sbb
ret
mov
lods
sbb
iret
imul
pushf
mov
sub
cmp
ror
sbb
ficom
push
and
data16
stc
xchg
into
xlat
(bad)
and
add
sbb
inc
pop
sub
xchg
inc
div
pop
js
inc
cmc
fld
out
rol
sbb
xor
leave
and
sub
or
push
mov
inc
je
and
push
mov
jbe
and
mov
jmp
gs
movs
inc
div
mov
std
call
loop
add
and
add
ja
ins
pop
shl
mov
ins
push
cmp
and
mov
(bad)
bound
push
xchg
fsub
or
js
aas
addr16
(bad)
mov
inc
mov
shr
sbb
mov
dec
dec
add
dec
push
(bad)
xor
xchg
ss
outs
xor
popf
push
cli
stos
mov
push
aaa
push
bts
repnz
cmps
popa
popa
ss
lea
and
(bad)
sub
push
cmp
pop
push
jne
sbb
test
push
(bad)
shl
cmp
mov
fdiv
ins
cdq
sbb
(bad)
(bad)
popa
xchg
out
in
and
mov
div
sar
icebp
daa
add
pop
out
cdq
inc
ret
(bad)
fld
and
aam
sbb
int
push
and
fdiv
fnstsw
xchg
mov
lea
mov
fbld
dec
std
out
pop
or
das
push
push
sub
sbb
pop
fcom
push
ret
aaa
arpl
ss
xchg
(bad)
adc
arpl
xchg
or
pop
push
xor
(bad)
adc
aad
fisttp
(bad)
pop
pusha
xchg
jae
aam
jge
mov
xor
fld
out
arpl
xor
jbe
cs
mov
in
(bad)
fisubr
retf
inc
or
sbb
cmp
sub
mov
add
mov
or
mul
jmp
div
leave
push
out
jg
or
xchg
mov
mov
sub
push
lock
lahf
sbb
mov
mov
xchg
imul
jbe
mov
loop
cmp
xor
sbb
or
int
mov
mov
shr
and
in
xchg
or
pusha
sub
inc
sti
nop
lods
pop
sub
sbb
fdivr
mov
ds
mov
int
cmp
jp
sbb
pop
sbb
jae
jg
pop
mov
ficom
sub
jne
ja
add
xlat
pop
int3
or
sti
out
leave
pop
push
or
push
repz
adc
stos
retf
shl
hlt
jl
push
ret
push
push
and
ss
sbb
mov
lds
cdq
mov
lahf
and
xchg
push
or
push
jmp
(bad)
jnp
sti
jp
(bad)
jno
cs
mov
retf
stos
sbb
lahf
mov
push
es
es
movs
pop
cdq
aas
inc
clc
ret
(bad)
mov
dec
call
and
pop
ja
mov
mov
dec
icebp
push
cmp
icebp
sbb
pop
test
repnz
loop
pushf
clc
daa
or
push
pop
int
push
inc
sub
mov
sbb
and
out
es
(bad)
mov
push
movs
fs
add
sbb
test
mov
fstp
idiv
js
mov
ror
cmps
xchg
mov
pusha
sbb
add
jecxz
pop
mov
xor
inc
push
cmp
sbb
xchg
(bad)
cli
push
inc
pusha
mul
inc
jmp
fabs
push
lahf
push
inc
cld
push
loope
sbb
jnp
xchg
stos
mov
imul
aas
inc
fwait
outs
inc
mov
test
(bad)
(bad)
das
rcr
fwait
aad
fxch
pop
sub
into
xchg
in
jle
sub
fisttp
les
adc
mov
ds
out
outs
gs
es
loopne
push
jl
inc
shl
mov
cmp
stos
mov
(bad)
mov
daa
mov
xor
and
lock
inc
cmp
pop
outs
adc
sbb
or
pop
sbb
pop
stos
sbb
dec
and
or
xchg
cdq
movs
jge
add
push
dec
popa
es
dec
or
adc
lods
xor
sbb
xchg
jecxz
in
dec
cdq
pop
jecxz
jg
adc
int
mov
adc
popf
mov
call
test
dec
fbld
adc
ficom
xor
call
test
daa
rcl
je
adc
cmp
test
push
dec
add
lahf
(bad)
cmp
dec
sbb
ficom
gs
pop
xchg
pop
xor
cmp
repz
cmp
cdq
sbb
lods
retf
mov
in
out
stc
inc
ins
sub
int3
sub
sti
push
loope
aad
pop
adc
gs
cmps
push
pusha
mov
jmp
pop
retf
push
ret
jmp
std
call
sbb
mov
push
fdiv
movs
push
imul
sbb
retf
cmp
cmps
popf
ins
and
push
adc
ficom
adc
sti
movs
nop
repz
mov
add
cmp
retf
sub
pop
loopne
adc
arpl
aam
pop
les
in
and
repnz
adc
(bad)
retf
xchg
div
cdq
out
sti
popa
test
xchg
and
mov
jns
dec
xor
out
dec
jno
push
bound
xor
inc
jmp
cli
and
enter
pop
js
pop
dec
cld
mov
cmp
loop
cmp
dec
mov
retf
or
aad
aas
push
jns
sbb
ret
xor
ret
push
aad
out
sub
scas
rcl
jns
xchg
dec
int
aaa
adc
daa
les
std
imul
daa
imul
adc
inc
and
int3
ret
(bad)
jge
mov
mov
mov
stos
fcom
dec
mov
sub
dec
ret
into
outs
sub
inc
mov
das
in
xchg
cwde
push
lods
into
inc
mov
mov
sub
(bad)
outs
mov
into
retf
dec
jl
and
leave
mov
mov
xlat
ret
jns
aam
inc
mov
mov
repz
leave
mov
imul
jmp
push
dec
pop
retf
or
test
pop
stos
pop
push
xlat
test
and
gs
mov
and
test
(bad)
push
movs
add
fisub
or
mov
push
pop
and
fwait
jge
push
inc
adc
xor
test
xlat
jmp
repnz
cld
or
shr
cdq
xchg
mov
pushf
(bad)
cmp
mov
scas
out
sbb
xor
dec
fmul
test
cld
sub
scas
(bad)
mov
imul
add
sbb
in
and
out
and
lea
or
bound
jnp
stos
xor
outs
pop
xchg
jae
stos
hlt
cmp
das
pop
cwde
mov
scas
xchg
dec
in
pushf
pop
or
cmp
scas
or
inc
shl
leave
jae
pop
jae
dec
(bad)
add
fsub
imul
pop
in
(bad)
ja
popa
mov
sub
adc
xor
fwait
pop
cmp
(bad)
mov
and
loop
sub
sti
loope
out
mov
es
loopne
or
cmp
fdiv
call
pusha
mov
xor
cmp
pop
imul
sbb
(bad)
sti
dec
xchg
mov
add
pop
jmp
adc
inc
imul
sbb
mov
addr16
cwde
fisttp
pop
mov
sbb
pop
mov
je
shr
xchg
test
lock
mov
jne
jg
cmps
mov
push
sbb
sub
mov
lahf
pushf
jl
repnz
pusha
cmp
xor
arpl
sub
or
repz
scas
ja
inc
int
movs
jns
ds
mov
out
aam
adc
repz
pop
outs
cmp
sbb
lds
mov
ds
repnz
sub
fwait
outs
stos
sub
or
retf
daa
pushf
out
loope
inc
sub
fist
cmp
push
adc
pushf
and
mov
int3
jle
mov
rol
push
retf
push
push
cwde
adc
ja
cmp
cmp
nop
js
shl
adc
mov
lods
mov
pop
xchg
dec
and
mov
gs
rcr
out
fsub
push
push
xchg
xchg
neg
mov
test
push
rcr
idiv
inc
fld
pop
cld
or
jnp
cdq
aaa
ins
or
ds
dec
inc
push
add
push
cmc
out
push
lods
in
or
xchg
fs
(bad)
scas
pop
mov
cld
inc
adc
mov
sbb
(bad)
mov
icebp
outs
or
stc
ret
(bad)
out
sub
mov
mov
retf
mov
ret
add
pop
pop
lock
inc
dec
jnp
fidivr
fdivr
xor
inc
mov
leave
cmp
mov
imul
sub
xchg
pop
dec
in
inc
fist
enter
pusha
scas
ror
jg
out
outs
enter
mov
loopne
fidiv
mov
add
jl
dec
cmp
pop
fwait
cld
out
retf
out
inc
push
jns
dec
sti
mov
and
std
movs
js
sub
xor
repz
or
daa
outs
nop
or
(bad)
retf
pusha
bound
jns
fisub
cmp
retf
xor
popa
pop
lds
(bad)
mov
sub
test
mov
and
mov
sub
cs
push
mov
int3
loopne
xchg
mov
lds
cmps
push
push
mov
xchg
sbb
add
xor
dec
cld
jge
aam
in
add
jbe
mov
mov
daa
es
cmc
aas
mov
enter
dec
cs
sub
jne
popf
pop
push
add
sub
jle
xor
and
cdq
imul
sar
or
icebp
mov
pop
push
add
mov
fwait
and
bt
cmps
cmp
mov
push
pop
shl
je
mov
ins
mov
jmp
movs
clc
jg
fst
(bad)
cmp
dec
pop
inc
cmp
in
shr
cs
xchg
imul
mov
push
mov
cmp
xor
cwde
test
mov
out
xchg
inc
rcl
mov
or
cli
sub
xor
inc
sar
int3
ret
ss
fisub
xor
cmp
mov
outs
add
imul
fcomp
xor
and
ret
and
cwde
rol
add
xor
inc
in
stc
mov
div
retf
lahf
xor
jb
adc
iret
inc
jmp
xchg
stos
lods
daa
mov
sub
jl
mov
div
lea
nop
mov
enter
jl
and
add
xchg
pop
and
inc
xchg
retf
mov
mov
fistp
rcl
cmp
test
push
test
daa
retf
jo
sub
mov
mov
dec
movs
jne
dec
add
sahf
pop
cmp
shl
stos
dec
clc
mov
push
lods
push
dec
push
fisubr
push
loop
mov
mov
test
dec
mov
out
sub
pop
popa
in
sbb
adc
vstmxcsr
icebp
xor
mov
mov
xor
pop
(bad)
or
stc
mov
sbb
into
fwait
push
ins
daa
(bad)
lds
mov
cmp
les
rcl
nop
aaa
jb
cdq
or
add
repnz
jle
jne
push
or
xor
pop
inc
rcl
xor
stos
fnstenv
in
out
xchg
mov
retf
jl
pop
mov
xor
cmps
push
pop
or
sub
mov
jo
in
add
out
push
rol
out
mov
pop
xchg
xchg
or
adc
mov
outs
push
or
pop
ins
shr
(bad)
jp
rcr
mov
int
or
mov
and
in
push
sub
sub
cmps
loop
sahf
sub
sub
aam
pop
lods
sbb
add
mov
fwait
adc
frstor
jmp
mov
add
scas
adc
xor
jb
mov
mov
cld
jl
xchg
popf
jl
mov
loope
imul
sahf
shl
push
clc
mov
lods
jo
cmp
or
stos
mov
cmp
sbb
or
imul
jno
mov
or
xchg
repz
xor
hlt
cmp
fcomp
fwait
test
sub
aas
int
hlt
fs
xchg
(bad)
xchg
adc
int3
pop
pop
pop
cmps
add
cmp
fwait
iret
shl
push
rcr
and
jne
cdq
(bad)
loop
call
jns
(bad)
xchg
int
out
pop
das
jne
ja
sbb
aaa
cmps
clc
imul
out
je
jle
cmp
ffreep
mov
cmp
adc
push
or
aad
inc
push
and
cmp
xchg
jns
mov
imul
pushf
xchg
xchg
xor
ins
pop
and
cmp
push
jb
cmp
jbe
jbe
push
jmp
or
push
stos
pop
imul
jl
cs
mov
adc
sar
lahf
dec
mov
ss
jnp
js
cmp
mov
loop
pop
adc
test
repnz
mov
and
push
pop
fld
test
inc
mov
push
lds
cmp
sub
dec
xchg
icebp
jns
lock
push
dec
test
jge
jo
imul
adc
cld
and
jb
mov
ins
inc
test
mov
dec
xchg
mov
sub
cwde
movs
or
mov
lahf
mov
cmp
sub
jae
dec
or
mov
add
or
rol
lods
push
leave
xchg
and
inc
mov
mov
lea
popa
sar
mov
mov
clc
inc
xchg
in
pop
pop
(bad)
xchg
std
pop
test
pop
or
stos
and
jg
movs
aam
test
shr
ja
jle
mov
je
fst
pushf
int
inc
rol
cmps
in
add
or
pop
clc
mov
out
jl
dec
xchg
dec
fwait
adc
jns
out
test
std
lods
test
jae
je
test
jb
dec
adc
fiadd
xor
imul
in
into
sbb
pusha
lods
inc
movs
fs
int
aas
out
mov
pop
leave
std
or
mov
mov
iret
(bad)
ds
bound
or
pop
push
lods
jno
jp
cmps
pop
xchg
jl
rcr
out
push
stc
push
pop
loop
(bad)
cmp
stos
dec
inc
(bad)
lahf
fsubr
mov
xlat
les
rcl
shl
popf
mov
inc
cs
sub
in
xchg
inc
outs
sub
jle
inc
sbb
stos
mov
jmp
dec
imul
xchg
(bad)
pop
int3
stos
or
mov
sbb
jns
pop
pop
jo
xchg
push
add
pop
push
mov
mov
ds
cmps
and
cmc
sbb
fldenv
pushf
mov
lea
ficom
lds
shl
add
or
scas
pop
rcl
pusha
sar
cmc
test
pop
cdq
nop
jecxz
sbb
aas
pusha
jecxz
fcmovnu
cmp
sbb
sub
stos
(bad)
addr16
addr16
sub
pop
std
bound
sar
dec
int
jle
dec
stos
and
call
mov
cmps
or
std
cwde
dec
sub
lahf
cwde
dec
imul
arpl
loop
dec
dec
aam
loop
lods
sub
dec
dec
jb
pop
lea
stos
push
(bad)
cmps
retf
sbb
and
mov
jbe
mov
invd
mov
pop
sub
loopne
ds
sub
pop
ret
out
pop
adc
cmps
mov
stos
sbb
mov
fisttp
push
rcl
scas
jmp
xlat
xchg
out
(bad)
out
add
push
or
or
cmc
dec
call
in
test
adc
or
mov
int3
mov
jbe
push
loop
aad
mov
mov
js
repnz
push
test
xchg
pop
test
push
fild
cmp
fbstp
mov
fcomp
sbb
test
add
cmp
or
sahf
fincstp
sbb
xchg
cmp
sub
inc
xor
inc
clc
or
loope
adc
xchg
add
dec
cmp
movs
mov
test
pusha
icebp
fs
add
or
sbb
add
add
ss
xor
loopne
pop
cmp
aaa
pop
sahf
push
call
mov
pop
xchg
xor
leave
in
addr16
out
imul
fisttp
mov
test
sub
sbb
xchg
cmc
pushf
test
shr
call
fidiv
aad
pushf
inc
(bad)
push
xor
dec
mov
into
pop
mov
mov
imul
cdq
mov
jecxz
mov
fst
mov
mov
mov
repz
mov
int
jb
sub
and
or
cmps
push
loop
jmp
icebp
clc
mov
xchg
fst
dec
ins
mov
mov
lea
sub
mul
or
jmp
dec
(bad)
stos
int3
fisttp
enter
jmp
es
mov
adc
(bad)
pop
xor
pushf
sbb
xor
mov
jns
mov
push
or
shl
fistp
in
adc
dec
xchg
ds
je
mov
lds
mov
fbstp
mov
sub
test
or
call
inc
inc
xchg
(bad)
out
cld
nop
pop
gs
jecxz
mov
xor
(bad)
pop
je
adc
das
mov
outs
mov
cmc
jecxz
sub
dec
je
push
pop
adc
sbb
or
xor
dec
jge
arpl
mov
bound
fiadd
ret
aaa
stos
xchg
fimul
xchg
mov
fucom
push
push
fwait
add
push
ret
xchg
scas
pop
ror
js
pop
(bad)
cmc
or
ret
cmps
dec
pop
out
fmul
rcl
xchg
stos
div
mov
or
sub
std
sub
mov
cmp
sahf
adc
(bad)
jnp
xchg
(bad)
call
out
xchg
push
mov
fdiv
jecxz
inc
addr16
inc
xchg
shr
jmp
in
sbb
out
fwait
and
iret
enter
mov
jmp
pop
daa
mov
inc
call
mov
mov
add
add
cmp
xor
fcomip
movs
cmp
dec
stos
addr16
leave
or
sub
or
mov
sub
mov
jnp
repnz
jns
retf
sbb
rcl
xchg
rcr
aaa
or
iret
lods
mov
mov
push
cwde
pop
in
jmp
pop
in
inc
adc
sar
push
pop
jecxz
rol
cmp
pop
(bad)
loopne
inc
ret
or
jns
sar
addr16
test
jo
cmc
mov
cmp
jl
inc
add
mov
(bad)
jcxz
mov
mov
(bad)
cmc
pop
addr16
mov
sub
sub
xchg
pop
or
jne
xchg
jo
dec
xchg
add
adc
push
jno
pop
popa
retf
fs
xchg
(bad)
fstp
xchg
and
xor
in
ror
push
mov
retf
nop
jbe
into
sahf
in
adc
aas
dec
and
out
ret
dec
popa
shl
mov
or
das
sbb
fild
or
mov
jo
cmps
or
jbe
fwait
sub
xlat
adc
aaa
jo
pop
mov
add
add
mov
jl
fsub
fwait
sar
xchg
fnsave
popf
ret
inc
jbe
dec
jle
daa
push
mov
ins
pop
(bad)
add
jg
mov
pop
xchg
mov
cmp
bound
out
mov
movlhps
sbb
mov
mov
sub
xchg
inc
push
or
sbb
test
mov
call
or
out
pop
std
cmp
inc
pop
imul
adc
dec
in
dec
mov
sbb
lods
mov
add
ret
push
mov
rol
adc
or
(bad)
xchg
sbb
xchg
out
test
xchg
repz
ins
dec
fisubr
scas
movs
stos
push
in
cmp
xor
add
pop
or
or
cli
xor
cmp
mov
and
fisttp
pop
jg
ret
loopne
mov
jb
imul
pop
comiss
and
or
test
or
mov
test
push
push
pop
mov
outs
out
jne
fucomi
rol
dec
dec
mov
mov
mov
fimul
out
call
scas
stos
cmp
mov
add
mov
add
rol
add
inc
push
outs
out
inc
mov
out
(bad)
or
test
and
jns
(bad)
in
push
or
loop
jp
sahf
std
sbb
xchg
jl
add
shr
loopne
es
adc
mov
and
xor
or
call
or
add
fisttp
mov
aas
dec
pop
or
inc
fsubr
inc
(bad)
dec
or
es
jecxz
pop
sbb
fcom
pop
lahf
sub
add
sub
dec
cld
dec
add
jmp
(bad)
mov
dec
into
jle
jl
in
cmp
xchg
das
cwde
fisub
mov
(bad)
fisub
xchg
xchg
cmp
inc
push
sub
jecxz
stos
add
push
fild
lods
add
push
cmp
adc
bnd
(bad)
cli
stos
call
and
das
cwde
sbb
pop
lock
loopne
hlt
daa
mov
shr
sbb
xor
jmp
ds
xchg
xchg
xlat
pop
fwait
push
xchg
pop
add
mov
inc
cmp
xor
pop
daa
pop
mov
inc
sbb
jns
adc
mov
add
cld
push
jb
xlat
loop
xchg
jle
and
enter
mov
inc
dec
inc
mov
inc
fs
dec
call
rcr
mov
imul
pop
or
jb
sbb
or
or
dec
xor
fdivp
jae
dec
mov
mov
mov
inc
stc
daa
out
mov
sar
adc
cwde
and
and
hlt
sti
push
mov
jb
adc
mov
movs
test
push
inc
and
or
xor
retf
imul
xor
mov
push
sbb
in
pop
add
adc
(bad)
in
call
mov
mov
mov
ins
jmp
aad
mov
xchg
out
(bad)
mov
pop
dec
int3
imul
out
fcom
in
dec
dec
cmp
jns
aam
sub
push
dec
mov
popa
ins
mov
aad
ret
(bad)
mov
push
and
ror
icebp
lahf
jecxz
popa
push
lds
cld
mov
addr16
mov
pop
push
nop
aaa
test
add
rcr
mov
imul
aaa
jbe
jmp
mov
mov
fmul
push
mov
aas
pop
fldcw
xor
or
jo
add
ins
call
dec
jbe
adc
or
leave
mov
jmp
add
adc
cmps
test
imul
mul
int3
arpl
loop
dec
push
sub
or
mov
mul
adc
(bad)
inc
iret
mov
adc
adc
pop
xlat
cmc
icebp
ds
push
or
sub
mov
ins
ret
in
imul
pusha
xchg
(bad)
retf
xor
loope
fs
jl
and
test
test
jge
repnz
add
movs
test
inc
push
ins
jmp
cld
outs
data16
ret
jmp
adc
cmps
add
cmc
loopne
mov
mov
arpl
mov
daa
(bad)
push
and
loopne
adc
imul
mov
mov
std
mov
sbb
inc
test
jg
push
and
jle
fbld
xchg
add
mov
(bad)
(bad)
mov
inc
leave
ins
sbb
imul
mov
loope
add
in
pop
jne
mov
cmc
and
and
inc
pop
iret
mov
cmc
dec
push
pusha
sbb
inc
pop
xchg
div
cmp
inc
in
int3
pop
jle
adc
and
int3
mov
adc
ret
inc
sub
sbb
cld
cmc
sub
jbe
fdiv
pop
jge
out
xor
sub
mov
sahf
mov
sahf
mov
retf
dec
fdiv
adc
imul
or
test
movs
jns
imul
xlat
mov
inc
pop
std
or
daa
aad
push
cmp
xor
sbb
jle
mov
jecxz
or
adc
inc
sbb
test
loopne
sbb
retf
shl
mov
in
and
dec
fadd
inc
out
mov
xor
sub
mov
popa
push
mov
and
inc
pop
mov
pop
lds
mov
pop
cli
int3
xor
inc
mov
or
dec
add
jno
fsub
icebp
cmp
mov
inc
or
sbb
jne
pop
pusha
stos
sbb
push
ins
mov
mov
test
cld
mov
shr
or
sbb
add
(bad)
inc
loope
stos
add
daa
mov
xor
mov
mov
xchg
iret
lods
add
jge
adc
or
dec
dec
or
xor
jmp
adc
enter
mov
cmps
push
int3
xor
sub
pushf
test
pusha
inc
pop
sub
je
aas
jg
retf
retf
mov
aad
add
push
or
jecxz
jb
or
push
xor
and
icebp
pop
xchg
nop
nop
test
je
adc
(bad)
mov
dec
inc
loope
xor
push
pop
and
fsubr
(bad)
and
dec
sti
sbb
jmp
test
das
(bad)
lods
(bad)
in
cld
adc
std
mov
ins
adc
int3
pop
cld
inc
loopne
adc
dec
call
lds
outs
push
and
push
pop
sub
(bad)
push
mov
sbb
lock
mov
add
ret
sahf
(bad)
mov
push
test
les
mov
xchg
mov
xchg
outs
adc
xchg
mov
in
mov
jmp
dec
jge
xor
out
cwde
mov
add
lahf
cmp
mov
mov
ja
bound
push
(bad)
xchg
push
sar
aas
test
jp
out
les
pushf
xor
sbb
pushf
mov
inc
fstp
mov
mov
dec
jmp
add
mov
lods
(bad)
ficom
xlat
and
daa
pop
repz
jb
or
adc
mov
mov
imul
push
movs
sbb
push
outs
cmp
push
idiv
jle
pop
mov
or
and
mov
outs
push
(bad)
out
xor
jns
xor
dec
loopne
sbb
out
fwait
add
stc
add
mov
movs
jnp
push
sti
sar
fldenv
push
xchg
dec
mov
sub
movs
push
push
leave
imul
xor
in
and
jecxz
or
int
sub
sbb
dec
sbb
cmc
lock
jge
push
inc
and
aad
jp
out
and
add
in
adc
mov
pushf
movs
or
jbe
inc
adc
lods
dec
retf
mov
mov
fsub
das
xor
cld
sub
(bad)
mov
sar
pop
arpl
adc
jo
adc
mov
retf
sbb
pslld
inc
ror
push
add
mov
add
cmp
push
sub
mov
aaa
jnp
fcom
pop
repz
sbb
aam
and
sti
pop
dec
inc
imul
retf
mov
dec
ins
stos
push
push
jae
inc
fsubr
inc
movs
and
mov
mov
je
or
or
ins
cmps
or
mov
jne
add
(bad)
xor
stos
movs
cli
std
mov
jl
xor
jp
popa
mov
mov
mov
scas
popa
ss
push
aam
out
popf
mov
mov
es
enter
jg
out
jmp
fld
in
lea
or
xor
inc
pop
pop
add
dec
ds
cld
lock
add
int
fstp
pop
jl
dec
dec
sbb
and
mov
sahf
xchg
xchg
xchg
cwde
lea
sub
add
cli
mov
dec
jl
cld
dec
mov
jl
test
sbb
mov
data16
or
sbb
mov
ins
jl
pop
popf
add
inc
mov
(bad)
sub
sbb
adc
push
inc
dec
mov
cmc
and
adc
cdq
sub
fldcw
or
pop
inc
fimul
imul
loope
xor
out
into
jae
in
adc
adc
add
adc
retf
pop
retf
icebp
mov
arpl
xor
repz
mov
xor
test
push
and
jg
das
jmp
(bad)
xchg
test
lock
test
(bad)
lock
xchg
or
popf
adc
cdq
inc
mul
sti
retf
sbb
rcl
xor
imul
inc
in
leave
test
sub
sub
jl
std
jns
jnp
xor
inc
adc
(bad)
repnz
adc
inc
pop
mov
pop
sbb
sahf
pop
xchg
jnp
and
loope
leave
call
in
jne
jmp
(bad)
lods
sti
stos
inc
sbb
pop
hlt
cmp
cs
pop
push
fs
adc
sbb
pop
or
sbb
mov
push
xchg
add
in
mov
mov
loope
cwde
mov
dec
rol
nop
ss
cs
ret
mov
cmp
xor
mov
std
in
lds
test
jae
cli
in
std
movs
mov
mov
xor
daa
cmc
inc
fxam
test
mov
inc
aad
pop
ins
mov
fdivr
push
and
or
aam
repz
add
nop
les
cmc
adc
or
out
add
mov
mov
or
mov
imul
mov
pushf
imul
sub
shl
lahf
movs
dec
mov
int
mov
movs
mov
addr16
inc
dec
push
inc
push
pushf
lods
dec
adc
fidiv
add
adc
add
cli
in
pop
xor
sub
ret
mov
mov
push
pop
das
in
call
xor
push
push
aam
jmp
jne
pusha
pop
inc
mov
mov
push
dec
gs
sub
fdivr
xchg
dec
inc
jle
mov
dec
scas
add
push
jbe
mov
pop
arpl
xor
sbb
(bad)
call
jmp
adc
sahf
add
dec
or
sbb
shl
rcr
leave
sahf
cdq
and
icebp
mov
cmp
jo
xor
xor
call
retf
fbstp
gs
inc
inc
bound
mov
aas
mov
mov
daa
sub
mov
push
test
stc
push
inc
(bad)
mov
dec
jmp
mov
push
sbb
aaa
repnz
jae
jne
add
std
ja
dec
in
pop
cmp
(bad)
shl
dec
mov
aaa
mov
lock
ror
mov
and
ret
das
aas
push
push
pop
xor
int3
lahf
aad
out
xchg
leave
adc
xchg
out
xchg
fidiv
stos
repz
pop
push
or
inc
fwait
clc
mov
fdivr
loopne
push
jge
xlat
aas
dec
inc
jns
adc
out
jno
mov
mov
enter
cmp
cmp
dec
daa
mov
js
repnz
scas
pop
leave
ud1
inc
cli
jns
hlt
sbb
lods
das
sub
addr16
inc
loope
clc
out
ss
movs
dec
adc
adc
dec
lea
fs
(bad)
mov
daa
ret
sub
test
retf
(bad)
mov
sbb
jnp
das
sub
cmp
and
ins
jecxz
into
icebp
jns
clc
mov
lods
mov
enter
dec
(bad)
sub
dec
sub
push
ficomp
and
mov
cmp
jg
(bad)
mov
je
fnop
mov
inc
inc
sub
int
enter
cmp
or
xchg
xor
sub
dec
shl
fidiv
jnp
xor
and
out
cmc
mov
xor
xor
push
mov
mov
ret
movs
dec
out
dec
push
dec
sub
cmp
mov
mov
inc
loop
fimul
cwde
inc
and
push
loop
das
loope
inc
and
out
(bad)
(bad)
cwde
or
iret
lea
pop
add
pop
loopne
mov
call
pop
mov
sahf
push
pop
cmp
add
mov
ret
in
aam
out
mov
sub
lahf
jmp
jle
mov
mov
out
jno
mov
sbb
dec
repz
mov
stc
add
je
or
inc
pop
jecxz
lahf
sbb
jp
ret
pop
cmps
fnsave
inc
movs
sbb
mov
stos
mov
or
loopne
jg
xor
aas
adc
jae
sub
enter
imul
pop
sbb
xchg
adc
loope
mov
lea
sbb
sub
mov
dec
add
test
and
pop
inc
add
and
pusha
out
sub
xor
and
xchg
mov
fimul
xchg
(bad)
scas
jns
and
mov
fistp
aaa
cli
and
les
adc
xor
mov
pop
sti
xchg
mov
gs
fcomp
dec
pop
push
push
dec
int
mov
inc
clc
ret
std
mov
cmp
data16
add
mov
jo
and
cld
stos
inc
(bad)
cmp
imul
jp
mov
push
mov
xchg
push
pshufw
mov
push
retf
jle
adc
push
mov
shr
sbb
lahf
jb
inc
sbb
cmp
lods
and
dec
mov
shl
adc
add
dec
pop
push
pushf
mov
call
js
je
movs
cli
ins
pop
xlat
sbb
(bad)
(bad)
pop
adc
jge
scas
pop
(bad)
jae
sub
and
mov
jb
fcmovnb
adc
inc
lds
jmp
push
inc
call
or
retf
scas
xor
sub
mov
or
in
jl
pop
mov
fild
xchg
in
stos
mov
std
xchg
popf
dec
js
int
movs
xchg
lods
mov
dec
and
ret
(bad)
addr16
test
mov
push
es
je
stc
in
lahf
fst
dec
hlt
scas
mov
outs
xlat
adc
push
sar
dec
bnd
retf
out
and
dec
in
bound
jno
scas
mov
or
inc
clc
jl
dec
inc
pop
ror
mov
jb
push
mov
xor
loop
or
push
cmp
fcmove
sbb
pushf
sbb
in
sub
or
push
imul
xchg
sub
outs
xor
pop
fs
in
(bad)
in
sbb
cmp
sub
jecxz
inc
scas
mov
pop
cwde
out
enter
xor
push
js
ins
arpl
in
popa
adc
(bad)
xor
ins
fneni(8087
jno
nop
jno
ss
xor
push
(bad)
jne
dec
xchg
cmps
stc
cmp
cs
and
fiadd
fdiv
or
sub
(bad)
std
mov
nop
fwait
mov
fcmovne
cli
mov
add
jge
adc
(bad)
pop
cmp
int
jne
pop
fisttp
movs
inc
push
outs
pop
pop
lahf
fidiv
jle
cmp
push
mov
xchg
ret
cdq
fnsave
cmps
push
mov
xor
mov
and
add
push
mov
mov
xchg
shl
in
mov
and
sub
mov
hlt
shl
fisttp
adc
int3
je
scas
mov
inc
out
mov
gs
mov
test
lds
out
div
cmp
push
dec
inc
repnz
mov
loopne
je
jle
xor
out
fs
push
pop
mov
repnz
xor
(bad)
jns
cld
xor
repz
das
jmp
pusha
add
add
or
test
nop
dec
sbb
pop
or
lock
out
loope
jbe
mov
loopne
pop
loopne
mov
sub
or
and
mov
sub
test
sub
std
add
cmp
cmp
cli
mov
add
adc
adc
jae
fisubr
sti
push
retf
mov
sti
jb
cmp
scas
nop
mov
imul
inc
mov
into
inc
das
inc
xchg
test
in
outs
lock
inc
sahf
inc
clc
loopne
push
fdivp
test
sti
popf
xchg
and
and
add
mov
dec
dec
ins
loope
pushf
jo
xchg
inc
outs
cmp
mov
dec
sahf
dec
imul
loope
es
call
rol
into
icebp
sub
fwait
jl
jmp
ins
sbb
stc
dec
and
push
repnz
xor
std
dec
data16
inc
xchg
pop
jns
push
dec
inc
js
jo
push
xchg
and
sbb
sub
movs
repnz
push
icebp
dec
inc
jp
rol
sub
clc
test
pop
jp
mov
out
cwde
push
stos
aas
pushf
push
cmp
adc
sub
jbe
xchg
push
inc
ja
ret
adc
cmp
(bad)
mov
add
cld
icebp
dec
arpl
inc
sub
and
lds
xchg
jb
xchg
add
xor
xor
inc
loop
enter
popf
cwde
ds
cld
mov
fbstp
sti
pop
dec
ret
es
or
lods
ret
cmp
add
enter
lahf
ret
inc
out
sbb
scas
stc
mov
jns
dec
add
sahf
test
test
push
mov
jns
pop
jne
(bad)
sub
mov
out
sub
rcr
ror
call
fstp
loope
or
inc
and
les
xor
jecxz
hlt
(bad)
cmp
imul
fs
mov
cdq
mov
jg
and
ss
mov
pushf
pop
push
push
neg
xchg
mov
clc
addr16
cmps
dec
test
(bad)
retf
sbb
test
std
mov
fadd
jno
mov
push
mov
add
mov
rcr
test
ret
out
retf
xchg
idiv
pusha
inc
jae
test
cli
retf
push
pop
popa
(bad)
mov
cwde
mov
rcl
imul
lods
and
sub
repz
mov
push
or
loop
adc
lea
pop
jmp
test
sbb
(bad)
daa
mov
loope
es
xchg
sbb
lahf
jae
pop
mov
lea
sbb
cmp
scas
test
sub
push
fnstcw
lahf
or
pop
xor
cmp
test
and
lahf
lods
mov
aam
jne
rcr
xchg
push
ins
stc
leave
mov
pop
cmp
imul
push
jmp
outs
(bad)
aaa
loope
cmp
inc
outs
cld
(bad)
(bad)
adc
pop
mov
fld
or
inc
mov
jnp
je
jnp
inc
adc
out
mov
mov
setp
in
daa
and
xchg
fstp
out
and
or
or
fld
in
arpl
push
sti
sbb
push
mov
out
jle
mov
nop
in
sar
inc
clc
psadbw
push
dec
adc
jmp
neg
push
mov
(bad)
push
clc
jno
mov
imul
mul
jmp
test
mov
out
popf
icebp
add
repz
cmp
jnp
stos
aam
xor
pop
lock
jae
sbb
ror
aam
psubd
sub
sbb
loop
das
sub
icebp
call
pop
lods
jae
inc
call
or
lods
pop
pop
xchg
inc
cmp
cli
pop
clc
mov
out
cld
test
lods
loop
shl
cli
ret
xor
cmp
scas
hlt
mov
jmp
push
daa
jecxz
adc
les
js
push
fiadd
fistp
sub
(bad)
jnp
mov
clc
jnp
into
das
ds
mov
or
sti
sbb
in
pusha
inc
sti
and
jmp
jl
icebp
outs
iret
xor
hlt
pop
stc
inc
xor
jb
pop
pop
or
out
sbb
push
in
xchg
fdiv
xchg
sahf
inc
xchg
in
mov
push
xchg
or
dec
popa
int3
push
dec
adc
dec
scas
adc
loope
lods
jp
inc
lock
in
mov
movs
aas
cmp
out
arpl
stos
enter
cs
out
and
mov
repnz
outs
(bad)
jne
jecxz
bound
icebp
push
into
ins
xor
mov
ret
in
xchg
xchg
rcr
neg
mov
pop
rcr
clc
test
retf
push
inc
jmp
mov
mov
rcr
sbb
lock
sti
and
mov
sbb
mov
pop
or
and
cmps
clc
outs
pusha
test
ror
sub
or
test
sub
jns
mov
psubb
stc
xor
into
pop
and
or
xlat
popa
mov
loope
aas
rol
add
ss
push
aas
stos
adc
int3
rol
ins
add
mov
xor
movs
enter
cmps
(bad)
fcomp
adc
pop
repz
jb
mov
repz
sbb
(bad)
lock
jmp
test
iret
jecxz
jp
xchg
inc
daa
mov
sahf
mov
adc
ja
jmp
jge
adc
das
sub
popa
add
mov
adc
sahf
outs
or
outs
arpl
cmc
cmp
and
sahf
push
hlt
fldl2e
repnz
jmp
movs
idiv
sub
aam
nop
cmp
sub
sub
shl
mov
jnp
mov
mov
call
jns
inc
ds
aaa
cmc
inc
inc
mov
mov
sahf
dec
iret
mov
xlat
or
mov
cld
rcl
pop
add
out
ret
xchg
ret
add
sub
adc
out
movs
dec
stc
xor
or
adc
call
test
cld
rcl
popf
inc
mov
dec
sbb
jecxz
test
jmp
movs
push
pop
push
in
aad
and
mov
mov
sub
and
push
add
ins
mov
push
jae
fldenv
bound
(bad)
js
or
inc
movs
cmp
push
jge
xchg
(bad)
jbe
sbb
std
mov
(bad)
sbb
xor
xchg
mov
in
in
icebp
clc
cmc
jns
add
jl
pop
inc
mov
out
push
adc
sub
dec
pop
(bad)
sbb
sbb
call
jne
in
fwait
xor
pop
mov
inc
jbe
lahf
xor
inc
or
fild
mov
inc
jle
jae
adc
jns
jo
jmp
je
into
xchg
and
sbb
pop
pop
mov
int3
fwait
mov
sbb
sub
sub
test
and
push
jmp
icebp
push
jns
sbb
(bad)
fisttp
mov
int
imul
sahf
jp
pop
test
cmps
inc
or
iret
jl
cmp
inc
(bad)
repz
test
jne
xor
push
ret
or
cli
or
sub
nop
in
xor
(bad)
mov
scas
mulps
and
bound
call
popa
add
mov
test
es
xchg
adc
rol
pop
cmp
mov
push
and
ins
inc
mov
sub
rcr
fimul
sub
cmp
mov
push
daa
xchg
popa
dec
adc
jb
(bad)
xchg
xor
mov
pushf
cmp
inc
cmp
in
fdiv
push
sub
outs
mov
xor
data16
lea
aaa
inc
cmp
push
fisttp
lods
or
pop
cmp
test
jne
iret
mov
mov
scas
xchg
xchg
pop
fild
cld
addr16
das
xor
and
dec
cmp
jmp
pop
mov
(bad)
fidiv
sbb
xchg
sub
cmp
ret
sbb
sbb
sub
(bad)
jae
xor
adc
ds
add
not
fsubr
add
stos
(bad)
jne
sbb
sbb
xor
or
cmp
xchg
jg
adc
test
popa
data16
sbb
inc
ins
xchg
je
mov
pusha
lods
sub
push
and
mov
adc
mov
push
push
and
scas
ins
push
xor
and
aam
das
lds
pop
pop
mov
adc
push
aas
scas
retf
in
cs
jb
call
inc
retf
add
mov
xchg
cmp
pop
mov
jp
ins
into
scas
rdmsr
add
stos
jecxz
mov
mov
popf
dec
mov
test
loopne
xor
enter
jecxz
xor
popf
repz
sbb
fsub
push
sub
push
jmp
or
(bad)
test
xchg
pop
lahf
stos
pop
(bad)
fdiv
mov
fs
retf
mov
cmps
sbb
adc
jo
jne
stos
adc
popf
dec
scas
(bad)
mov
or
int
test
je
inc
jne
xchg
daa
adc
sbb
fsub
cmp
jb
clc
mov
sbb
(bad)
push
jb
xchg
add
pop
add
push
adc
xor
dec
lods
test
xchg
outs
sar
adc
push
mov
cmp
ins
pop
mov
or
test
or
sahf
lods
cs
pop
mov
mov
lea
push
(bad)
sub
adc
popa
sub
mov
jle
inc
push
adc
add
add
lods
jg
pop
imul
movs
pop
mov
jp
ret
in
in
mov
adc
mov
mov
inc
pop
pushf
enter
inc
jae
push
sbb
inc
xchg
push
inc
hlt
mov
mov
mov
mov
test
mov
mov
jecxz
out
jo
enter
cmp
jbe
cwde
pop
jecxz
sub
jl
mov
mov
mov
fucomi
mov
cmp
inc
mov
sbb
les
pop
lock
inc
movs
xchg
and
das
ret
mov
pushf
adc
fst
ds
dec
push
or
sub
mov
fwait
pop
sbb
adc
in
jne
or
and
mov
mov
cdq
sub
pop
or
int3
clc
and
xchg
inc
mov
and
in
imul
je
pushf
call
sub
sub
ret
pusha
dec
push
mov
jnp
test
pusha
jo
sbb
mov
inc
outs
imul
arpl
out
ss
das
push
aam
jl
repnz
mov
and
pop
inc
and
ss
bound
retf
push
imul
jp
mov
sub
sahf
cwde
stos
loop
sbb
mov
aas
or
mov
pop
jecxz
mov
pop
pushf
loop
mov
out
stc
(bad)
stc
jo
les
mov
je
(bad)
adc
outs
mov
adc
and
push
sbb
popf
add
retf
mov
push
add
mov
add
mov
or
out
inc
cmp
dec
xor
ins
loope
shl
pop
xchg
xchg
adc
es
lock
cmps
pop
rcl
aad
popf
inc
pop
mov
or
and
mov
movs
popa
xor
ins
cmp
adc
mov
lods
push
fs
xchg
sbb
and
out
sbb
xchg
mov
in
std
aas
in
inc
pop
leave
and
mov
and
cli
jb
pop
and
out
add
popf
dec
xchg
leave
push
and
dec
in
fbld
jbe
and
sahf
aad
iret
das
popa
bound
push
pop
idiv
scas
sbb
cmps
daa
inc
xchg
xor
mov
int3
movs
in
movs
cmp
sar
lods
int
mov
jge
loop
popf
and
pop
jecxz
xchg
push
leave
mov
in
sub
das
cmp
and
in
add
sbb
test
pop
dec
cwde
repnz
mov
sbb
fs
mov
add
mov
or
int
xchg
xor
sbb
imul
mov
adc
movs
nop
loopne
push
bound
xchg
and
loopne
ins
cmp
jl
lods
dec
mov
dec
shr
jmp
mov
pop
or
loope
repz
repz
nop
mov
inc
movs
into
mov
sbb
push
movs
xor
mov
or
xchg
pop
dec
push
lea
jle
and
lock
inc
adc
cmc
sub
dec
lea
and
inc
adc
adc
repnz
sahf
cmps
cmps
jo
int3
mov
xor
in
cmp
outs
xchg
pop
in
mov
mov
(bad)
jmp
int3
imul
(bad)
inc
outs
js
jae
cwde
fiadd
das
enter
in
es
mov
dec
les
mov
ins
dec
bnd
shr
lock
aas
int
pop
stos
cmp
ror
cmp
lods
je
sub
mov
sbb
into
movs
lea
add
mov
dec
loop
or
pop
and
js
push
enter
xchg
aam
outs
aaa
hlt
push
jg
and
bound
push
sbb
data16
jb
xor
mov
inc
cdq
mov
ss
or
pop
(bad)
aas
movs
push
sub
lods
mov
shr
int
add
int3
jp
jns
popa
stc
lahf
loopne
fisub
xchg
out
cmp
lock
mov
inc
jne
cdq
popa
aas
mov
in
je
fwait
stos
aad
adc
aas
sub
jle
ret
(bad)
movs
ret
adc
dec
add
fxch
aaa
cld
int3
test
sbb
pop
fs
in
enter
dec
aad
(bad)
sbb
adc
rcr
call
pop
cmp
aam
pop
retf
retf
(bad)
les
mov
push
aas
sbb
mov
lock
jb
jmp
test
add
jle
or
enter
mov
js
cdq
jp
add
add
or
popf
fwait
jle
pop
in
sbb
lods
scas
je
out
test
add
inc
mov
js
loope
add
int3
mov
outs
gs
push
pushf
jg
pusha
sahf
xor
jae
int
xchg
outs
pop
cs
imul
loopne
or
cdq
cdq
nop
loop
xor
jb
bound
popf
inc
mov
mov
push
pop
cli
cmp
mov
jb
and
(bad)
lods
push
sbb
and
popa
into
jle
lock
jle
pop
popf
js
sbb
mov
cwde
jo
cmp
test
jo
dec
cli
loope
pop
xor
cmp
gs
mov
and
cld
add
mov
mov
icebp
(bad)
and
sbb
jnp
xchg
bound
jbe
jbe
push
movs
cwde
(bad)
xor
cmps
add
and
sahf
add
jno
into
movs
fdiv
dec
retf
inc
sti
pop
dec
ret
loop
or
imul
fsubrp
cmc
pop
and
add
mov
jmp
dec
in
iret
mov
inc
ja
test
push
pop
adc
cdq
cmp
push
pusha
ja
xchg
xor
jg
inc
or
repnz
pop
mov
and
adc
xor
or
shr
sbb
pop
cmp
stc
dec
xchg
sbb
push
xchg
out
and
adc
push
mov
jne
loope
pop
cmp
mov
(bad)
dec
mov
dec
adc
jle
out
push
outs
add
mov
icebp
sar
jno
jmp
bound
jbe
sub
xchg
int3
pop
je
dec
dec
xor
jge
or
repnz
loop
jg
call
push
add
sub
inc
out
add
jmp
pop
mov
in
mov
lods
in
aas
iret
push
data16
loop
push
mov
mov
and
jb
mov
sahf
push
jmp
cld
fild
fild
stos
xor
xor
jb
icebp
xor
xchg
cmp
jno
shl
test
loopne
andnps
loop
mov
pop
jle
leave
jnp
mul
push
jp
mov
aas
mov
or
dec
inc
lock
or
mov
xchg
mov
or
xor
xor
pop
xchg
jg
imul
(bad)
sub
pushf
(bad)
pop
xchg
pop
sbb
cmc
(bad)
aad
in
sar
fadd
retf
ins
or
fwait
mov
sub
jb
mov
cld
dec
jmp
cs
hlt
xchg
push
push
lea
push
call
mov
int
pop
int
mov
pop
sbb
dec
lods
mov
mov
popf
sbb
and
and
xchg
into
(bad)
jo
add
sub
and
xchg
dec
dec
jb
inc
test
aas
call
xor
callw
je
xchg
sub
jmp
aam
inc
data16
inc
inc
inc
in
inc
out
cwde
in
dec
dec
cwde
ja
xchg
clc
mov
xchg
ds
je
and
ret
std
shl
iret
push
(bad)
xor
dec
(bad)
sub
hlt
lds
je
in
adc
and
xchg
cwde
mov
mov
mov
jp
aas
rcl
repnz
into
push
in
cmc
sbb
aaa
pop
dec
(bad)
pop
ja
stc
or
imul
mov
push
out
jp
cmps
and
call
fwait
mov
cld
pop
(bad)
paddb
(bad)
out
mov
test
das
cmp
xor
dec
div
mov
add
xlat
adc
and
inc
leave
xor
cdq
lds
mov
pushf
(bad)
(bad)
loope
add
mov
cmc
dec
push
mov
mov
int3
iret
mov
inc
nop
xchg
xor
loope
pop
and
cmps
sub
mov
xor
pop
mov
jmp
push
and
dec
push
lock
fs
popf
inc
jbe
es
shl
mov
and
(bad)
adc
mov
and
data16
mov
sbb
in
out
push
sub
xor
mov
cmp
inc
bound
dec
jne
test
push
sub
aaa
movs
cmp
mov
sub
shr
xor
test
cmp
sti
(bad)
dec
out
xchg
call
cmp
xchg
push
fidiv
mov
and
push
test
pop
call
jne
imul
outs
std
stos
adc
xor
aaa
xor
rcl
add
pop
addr16
inc
gs
and
mov
sbb
push
movs
fsubr
or
(bad)
sub
sbb
adc
sbb
leave
inc
xchg
not
mov
imul
push
(bad)
sti
push
cmp
xchg
into
mov
lahf
mov
shr
out
jo
pop
imul
xchg
loope
mov
mov
mov
cmp
or
inc
xchg
sbb
push
mov
push
arpl
or
test
adc
and
aas
or
push
sbb
fs
jae
sahf
lock
adc
call
cmc
mov
mov
jl
cmps
or
into
loopne
ins
xor
adc
mov
adc
je
inc
dec
mov
jl
shr
mov
sbb
in
mov
or
fs
lea
push
sbb
fnstsw
sub
fisubr
ret
sbb
fwait
sbb
and
es
cli
jp
(bad)
out
or
gs
(bad)
adc
ror
mov
ins
leave
xor
js
mov
(bad)
add
mov
je
mov
imul
xchg
sub
loop
leave
push
jne
mov
fstp
pop
lea
or
mov
mov
or
lds
cmps
mov
ds
cdq
inc
adc
push
jge
int
fld
cmp
out
xlat
mov
cs
je
jle
sbb
xchg
ss
mov
sub
jb
jno
xchg
push
mov
mov
mov
mov
adc
xlat
add
(bad)
cmp
sbb
lock
push
jecxz
xchg
aas
into
sub
xor
pushf
sub
mov
cmps
(bad)
adc
dec
xchg
push
jecxz
(bad)
cmp
cdq
xchg
adc
jno
xchg
mov
test
sub
and
retf
fist
jecxz
fs
push
sar
cs
sub
(bad)
(bad)
iret
mov
fadd
popa
out
out
ins
fidivr
cmp
dec
idiv
jae
out
lods
jns
sub
mov
mov
mov
pop
pop
sub
xor
dec
or
lods
movs
mov
cmp
movs
xchg
push
loop
sti
sbb
inc
push
int3
outs
inc
push
add
pop
add
dec
xchg
xchg
pop
inc
cmp
stos
add
aaa
rcr
(bad)
jno
add
dec
push
pop
sub
aad
adc
into
pushf
ja
xchg
push
imul
pop
out
pop
xchg
mov
mul
mov
pop
jno
mov
ja
xchg
xchg
movs
mov
adc
jle
iret
xchg
arpl
lods
lods
mov
aad
sbb
shl
xor
stos
mov
shl
(bad)
bound
adc
aam
pop
outs
xor
push
leave
mov
jbe
push
adc
xor
mov
sub
add
and
or
fnstsw
dec
push
push
cmps
cmp
pop
mov
mov
cli
ja
daa
out
je
not
lahf
jmp
push
dec
movs
sbb
mov
leave
scas
sub
imul
test
sub
jecxz
retf
clc
pop
xchg
lods
mov
mov
push
lahf
retf
mov
xchg
pop
stos
push
mov
test
jnp
dec
arpl
pop
pushf
out
cmps
xchg
pop
cmp
jbe
or
pop
push
inc
and
jecxz
das
fadd
push
pusha
bound
retf
push
sub
rcr
test
inc
pusha
inc
fisttp
fwait
xchg
fldenv
mov
gs
je
push
xchg
add
cmp
retf
or
mov
mov
jno
lds
lods
and
aad
fwait
ret
xchg
push
test
sbb
scas
int
js
stc
cld
jp
ret
sbb
sub
mov
pop
cmc
xor
(bad)
push
mov
call
sbb
stc
lahf
call
inc
bnd
add
test
push
repz
xor
shl
push
xchg
xchg
das
icebp
rcr
push
loop
mov
cmp
jns
inc
sti
sahf
call
jo
cwde
pop
hlt
imul
mov
pop
xor
mov
std
std
adc
xlat
popf
jge
pop
js
pop
fistp
mov
and
repnz
mov
push
jp
or
gs
pop
dec
sub
mov
push
and
frstor
mov
xlat
xchg
cmp
lods
loopne
pop
repnz
fld
ret
mov
cmp
(bad)
enter
dec
jne
pop
add
imul
dec
xor
xchg
test
cmp
and
test
pusha
pop
shr
stc
pop
or
pop
(bad)
dec
xchg
cmp
jmp
clc
pop
ja
and
add
adc
adc
mov
dec
jne
repz
add
adc
xor
into
rcl
jns
scas
(bad)
retf
push
dec
add
adc
rol
addr16
stos
inc
bound
sbb
push
popf
push
pop
loopne
xchg
or
and
jb
std
inc
dec
jbe
shl
add
cmp
mov
cmps
arpl
jle
dec
pop
cdq
clc
fdivr
cdq
push
push
add
push
xchg
mov
cmp
adc
sub
inc
adc
sbb
xlat
je
inc
pop
popa
out
or
pop
cmp
adc
outs
outs
mov
aam
jmp
lea
movs
retf
mov
pop
(bad)
movs
sbb
mov
jmp
clc
aam
rol
mov
add
jo
fist
push
lods
outs
push
cmp
sub
jns
pop
jge
aaa
sbb
in
pop
ret
fwait
ja
push
inc
mov
int
stc
sbb
sbb
(bad)
lahf
inc
mov
pop
popa
and
pop
test
lds
cmp
dec
cs
jmp
adc
or
mov
movs
jmp
push
push
ins
pop
pop
pusha
lods
cmp
es
cmp
pop
push
ret
in
rol
loopne
shl
push
xchg
movs
cdq
enter
loop
fwait
loop
jbe
jne
sub
test
mov
lods
scas
sub
sti
(bad)
pop
mov
mov
sbb
bound
icebp
push
das
loopne
push
sub
(bad)
cmp
aam
push
push
in
cmp
(bad)
cmp
cmp
pop
fwait
add
mov
cmps
fcmovnu
xor
adc
lock
jecxz
mov
das
std
push
inc
mov
arpl
push
popf
mov
fwait
stos
xchg
cld
fidiv
xchg
hlt
imul
mov
fstp
ja
push
ffreep
scas
mov
dec
mov
pop
dec
xchg
imul
and
inc
pop
sub
mov
mov
sub
or
push
es
pop
sub
pushf
(bad)
fnstcw
das
mov
movs
cmp
push
scas
push
sbb
mov
and
iret
mov
mov
retf
add
out
jns
push
stos
cld
pop
mov
push
add
out
or
cdq
(bad)
jbe
mov
in
sti
sub
jae
ret
cmp
sbb
cmp
clc
jge
cmp
or
lea
out
lds
mov
call
iret
int
sub
popf
int
or
retf
test
and
xchg
stos
inc
cld
fist
push
or
sti
mov
cmp
scas
add
pop
shl
je
push
lahf
pop
sbb
jge
hlt
cmps
add
inc
adc
out
jmp
loopne
and
bnd
je
mov
jae
adc
rol
daa
jl
(bad)
aad
arpl
stc
out
cmp
je
cmp
(bad)
cli
jno
mov
ins
adc
cli
xor
adc
cld
push
outs
out
and
fld
mov
imul
dec
sbb
dec
mov
out
int3
dec
inc
leave
push
inc
xchg
jecxz
lods
cmp
(bad)
lea
mov
cwde
push
mov
sub
ins
cmp
xchg
mov
mov
fnstenv
fldenv
mov
xor
sub
push
enter
cmp
mov
push
das
lea
jae
push
cmp
add
mov
jb
scas
es
aas
pop
mov
call
out
adc
lods
test
inc
(bad)
cmp
mov
shl
mov
mov
push
cmps
aad
inc
(bad)
retf
push
or
(bad)
out
xchg
xor
out
jae
push
pop
adc
stos
es
xlat
push
scas
fsubr
pushf
repnz
pop
lds
imul
jmp
repz
leave
jmp
pop
scas
jecxz
or
imul
and
mov
and
neg
test
les
cmp
adc
cmps
sub
xchg
jecxz
popf
sub
sbb
sbb
xchg
push
imul
test
adc
jecxz
mov
cmp
lods
cld
dec
daa
shr
jge
movs
(bad)
mov
addr16
cmp
fcmovne
mov
fild
stos
(bad)
out
test
jns
loop
or
std
mov
lods
pop
xchg
movs
in
clc
jecxz
test
fbstp
lods
repz
lods
ins
call
xchg
xor
call
jnp
(bad)
test
bound
mov
adc
sbb
out
ins
div
pop
fbld
pop
mov
imul
cmc
push
dec
mov
in
js
fistp
stos
dec
jne
push
cwde
mov
aad
lea
add
js
out
push
jno
popa
xor
pop
sbb
jmp
cmc
jmp
neg
xor
nop
retf
es
ss
jb
fcmovnb
jae
in
mov
dec
lods
jae
jge
jp
pop
mov
or
pop
out
aaa
imul
addr16
cmp
popf
movs
push
jnp
dec
test
test
jne
xor
out
pop
call
dec
add
imul
add
cmp
sub
sub
mov
xor
sub
add
adc
mov
sbb
or
sbb
fcomp
call
stos
adc
xchg
sbb
fs
or
rcr
jp
fidiv
hlt
out
(bad)
call
popf
(bad)
fnstcw
in
in
rcl
hlt
jecxz
adc
(bad)
mov
mov
not
mov
mov
(bad)
out
add
mov
mov
lock
jmp
ficomp
test
gs
into
cmp
push
jg
std
lea
add
mov
fsub
or
lea
xchg
mov
xor
(bad)
inc
sbb
add
mov
out
cmps
jbe
pop
ficom
jmp
aaa
xchg
xor
jmp
xor
xchg
pop
inc
stc
xchg
cdq
(bad)
pushf
mov
add
shl
adc
mov
dec
mov
pop
int
ds
inc
xor
imul
stos
mov
test
ficomp
pop
add
(bad)
and
mov
dec
ins
scas
ret
inc
cmp
sahf
mov
into
pop
mov
out
mov
gs
mov
bound
jne
call
sub
xor
mov
shr
fnstenv
xchg
popf
test
movs
jg
dec
fisubr
jle
dec
and
hlt
test
movs
pop
(bad)
rcr
lahf
xorps
jmp
gs
inc
pushf
and
pop
push
add
shl
icebp
aam
push
scas
push
xor
sti
push
loopne
hlt
lahf
cmps
aad
cmp
pop
dec
xor
dec
lods
push
lds
pop
sti
pushw
(bad)
imul
and
jmp
push
aaa
mov
xor
maskmovq
lahf
sar
xor
pusha
pop
jp
call
scas
inc
mov
jns
or
or
pop
pop
xor
cmps
div
pop
inc
in
lock
les
cs
ror
pop
repnz
rcr
jne
and
shl
jp
(bad)
or
mov
cld
cs
ret
rcl
xor
mov
js
mov
retf
add
loope
mov
ret
push
cld
sub
mov
test
or
or
push
jecxz
lods
int3
fadd
test
adc
imul
xchg
inc
test
xor
arpl
jmp
aas
xor
or
imul
push
iret
pop
adc
movs
add
cmp
cmp
mov
rcl
(bad)
stos
adc
jno
fbld
dec
xlat
mov
mov
sti
shl
fdivr
and
dec
mov
xor
cmp
sahf
push
fsub
xchg
ds
mov
adc
inc
(bad)
scas
or
add
and
mov
pop
repnz
cmp
outs
add
dec
cmps
mov
cmp
and
mov
push
xor
sub
mov
test
test
sbb
shr
test
mov
dec
rcl
test
shl
mov
sbb
mov
mov
arpl
lea
push
xor
dec
les
sahf
aaa
add
mov
je
fs
(bad)
xor
inc
lahf
fnstcw
xchg
js
into
pop
mov
les
lods
hlt
jecxz
(bad)
scas
xchg
xchg
sti
mov
fild
push
sbb
jmp
aam
lea
push
enter
mov
test
cdq
and
mov
clc
pop
lods
fcomp
mov
aas
cmps
bnd
sub
add
xor
sub
stc
push
jae
sub
fs
jle
and
xchg
js
ss
aad
ret
push
push
xor
out
(bad)
sbb
mov
jl
mov
test
push
mov
sub
and
pop
inc
test
or
cwde
sbb
jmp
pop
sbb
(bad)
(bad)
cmc
push
cwde
mov
cmp
xor
push
jnp
and
icebp
(bad)
inc
repnz
mov
inc
call
mov
aaa
iret
std
(bad)
hlt
inc
loopne
lods
mov
fadd
xor
mov
cld
xchg
call
lock
pop
cmp
sub
push
inc
stos
shr
sbb
fstp
(bad)
sar
push
pushf
pusha
(bad)
aad
cvtpi2ps
push
lock
xchg
inc
loopne
shl
mov
outs
aad
fsub
sbb
mov
mov
nop
push
add
fidiv
in
fsubr
add
push
(bad)
stos
out
add
in
ins
xchg
(bad)
jmp
out
jle
jecxz
xor
sub
xchg
rol
or
lock
sbb
xchg
xchg
push
popa
pushf
xchg
jmp
sbb
bound
js
add
mov
mov
push
dec
iret
(bad)
cmp
repz
into
repz
jmp
mov
sbb
sub
mov
jge
rcl
mov
dec
mov
ds
xor
pop
dec
sti
(bad)
or
push
retf
push
stc
inc
aas
adc
hlt
cmps
int3
scas
pusha
cli
xlat
and
dec
sbb
dec
out
inc
mov
int
icebp
xor
dec
jmp
test
sbb
jnp
pop
imul
inc
loope
adc
pop
scas
cmp
pop
sar
pushf
gs
xor
jl
mov
cli
pop
inc
outs
sub
dec
fwait
out
gs
sub
gs
adc
cmp
mov
into
out
mov
fstp
movs
rcl
jecxz
pop
out
aaa
call
pop
adc
movs
test
xor
mov
inc
fsubr
ds
mov
and
in
into
int3
es
js
shl
dec
pop
cmp
add
xor
imul
cld
xchg
dec
jne
in
lahf
fstp
pop
outs
pop
push
sub
jae
and
push
leave
xchg
xchg
pop
inc
(bad)
xor
dec
test
popf
rcl
inc
and
lds
cmp
sub
aad
jo
and
aam
adc
sahf
int
pop
ins
dec
js
int3
sar
call
(bad)
aas
push
