iret
xchg
nop
add
add
add
pop
mul
add
pop
movhps
sub
retf
scas
pfmax
add
xlat
(bad)
fstp
inc
xor
add
add
enter
clts
test
or
pop
mov
mov
setno
popa
das
mov
jmp
inc
mov
pop
adc
inc
inc
inc
int3
sub
pop
inc
inc
inc
inc
(bad)
movs
test
inc
inc
mov
stc
dec
inc
add
dec
mov
sbb
adc
in
fsubr
enter
mov
xchg
mov
enter
enter
xchg
xor
and
and
lods
and
jle
and
js
adc
sbb
fs
jl
sbb
sbb
sbb
dec
mov
cmp
sbb
sbb
shr
sbb
sbb
scas
jnp
in
push
call
xor
pop
add
fcos
inc
add
inc
mov
or
js
clc
adc
dec
outs
push
jne
popa
dec
push
push
gs
push
dec
add
xchg
fwait
jecxz
out
inc
jg
clc
aam
rol
pop
ror
or
inc
das
sbb
inc
add
lock
jb
jmp
cmp
iret
or
pop
pushf
sub
in
aaa
pop
dec
enter
xor
outs
xor
add
inc
xor
jo
aaa
add
mov
fs
rol
sbb
inc
call
int
repnz
dec
add
aaa
xor
daa
inc
add
je
or
lahf
test
lock
sub
jle
outs
xlat
nop
sahf
or
or
jo
(bad)
fdivr
xor
arpl
push
pop
xlat
ins
fwait
loopne
adc
pop
js
add
inc
or
stos
outs
je
jae
jns
popa
push
xor
jb
aaa
inc
push
jns
fwait
pop
sub
mov
fs
mov
xor
dec
inc
or
or
leave
(bad)
(bad)
jnp
dec
sub
mov
movs
mov
mov
in
neg
iret
add
inc
das
jecxz
sbb
pushf
fild
push
push
popa
ja
mov
pop
mov
add
push
mov
pop
out
cmp
push
pop
add
ins
pop
or
add
or
or
popa
jae
add
or
imul
ja
push
add
outs
add
(bad)
out
mov
add
push
sbb
daa
pop
pop
and
jbe
add
or
add
push
sbb
push
dec
(bad)
sbb
repnz
xchg
xchg
dec
sub
in
xchg
pop
xor
xor
inc
(bad)
icebp
and
out
(bad)
mov
push
arpl
inc
(bad)
fdiv
xchg
cmp
mov
adc
pop
in
mov
add
pop
daa
cmp
and
xor
fs
das
daa
cmp
movs
and
inc
aam
daa
inc
pusha
or
rcr
sbb
or
cmp
pop
daa
dec
or
in
pop
jb
push
stc
daa
dec
or
sbb
in
jbe
pop
daa
push
or
ins
nop
add
cld
pop
daa
and
xor
push
or
jg
add
pop
daa
pop
add
jecxz
dec
repz
pop
dec
shr
add
or
cld
daa
sub
nop
pusha
add
nop
inc
mov
add
sbb
or
pushf
mov
pop
push
mov
cmp
sub
imul
xchg
mov
add
sub
or
add
leave
xor
int3
xchg
hlt
jb
sbb
sbb
lods
adc
add
xchg
clc
daa
sbb
rol
inc
bndldx
sbb
sar
and
fstp
xchg
jmp
retf
sub
mov
sbb
mov
int3
and
fs
das
pop
rcl
cmp
dec
mov
pop
or
pusha
sub
jecxz
in
push
and
jb
add
sbb
and
cmp
jb
pop
nop
dec
fs
pop
sub
add
dec
push
and
add
sub
aam
pusha
lock
add
fs
xchg
sbb
scas
push
add
ins
inc
and
add
je
fisttp
jl
daa
js
or
cwde
or
or
and
xor
jo
push
rcr
or
and
xor
or
enter
xor
sbb
and
push
imul
pop
sbb
pop
add
cmp
bndldx
pop
in
(bad)
xor
pop
pop
daa
cwde
ins
nop
add
sbb
pop
ja
adc
and
adc
xor
js
add
enter
adc
inc
call
inc
push
fs
xor
je
push
punpcklwd
outs
or
mov
add
inc
mov
mov
enter
fsub
mov
sub
xchg
and
dec
enter
enter
inc
inc
xor
and
leave
mov
and
push
xchg
add
clc
aas
enter
and
dec
sbb
and
jo
push
fdivr
sub
push
mov
ins
sbb
and
mov
xadd
out
dec
pushf
out
shr
sbb
enter
xor
enter
pop
inc
dec
shr
inc
push
add
call
dec
loopne
sub
or
rol
punpcklwd
jle
test
or
pop
into
addr16
js
add
inc
cwde
fcom
xor
cmps
pop
dec
xor
and
sub
inc
push
test
fcom
pop
adc
mov
pop
mov
inc
enter
push
or
ins
pushf
das
rcl
jo
imul
test
or
xchg
sub
jg
sub
bound
outs
outs
addr16
inc
enter
outs
jb
xor
dec
outs
fs
xor
and
xor
ss
xor
jg
sub
cs
dec
dec
maxps
enter
bound
jb
gs
je
push
popa
jb
inc
push
sbb
dec
imul
(bad)
dec
daa
and
je
mov
daa
mov
dec
outs
inc
jae
(bad)
(bad)
(bad)
stc
inc
outs
jo
jne
retf
cmc
into
inc
xor
cmc
jecxz
cmp
sub
or
cmps
fcom
inc
and
or
push
or
outs
ins
dec
xor
fsubr
push
arpl
ins
ins
xor
mov
sti
cld
cli
mov
repz
jno
inc
cmp
gs
pop
fidiv
inc
gs
je
pop
inc
imul
xchg
and
pop
popa
ja
setns
and
or
retf
dec
and
xor
or
mov
jne
and
jae
arpl
cmp
adc
adc
add
inc
push
pmulhuw
lahf
sub
inc
enter
(bad)
scas
add
dec
mov
inc
imul
sub
sbb
xor
enter
xor
ss
cmp
or
xor
xor
ss
xor
add
cmp
and
or
and
push
not
jae
add
pop
xor
push
sub
test
gs
cld
xchg
cmp
imul
je
inc
jb
gs
je
inc
outs
rcl
fiadd
inc
lea
mov
sbb
or
add
or
add
mov
pop
test
and
loope
js
pop
sbb
sar
add
daa
mov
and
mov
fwait
pop
test
pop
mov
push
xor
cdq
mov
xor
ss
xchg
adc
dec
xor
sbb
gs
xor
jne
xchg
mov
das
inc
xor
add
inc
xor
daa
add
cmp
jo
das
add
imul
cmp
mov
or
pop
xor
movs
sub
push
pop
inc
xchg
movs
or
es
in
sub
push
sbb
xchg
loopne
jne
stc
mov
imul
pop
cmps
mov
jecxz
xor
jmp
lahf
outs
imul
mov
mov
fs
test
ins
ret
jns
push
xor
daa
test
xor
test
pop
xchg
arpl
out
pop
dec
cdq
xor
mov
sub
adc
outs
cwde
fst
jbe
mov
pop
data16
xor
mov
adc
jecxz
pop
add
nop
inc
cmp
mov
sub
(bad)
xor
xor
xor
adc
push
outs
cmp
xlat
and
add
ins
cwde
sub
add
or
mov
mov
rol
or
repz
std
add
jnp
ret
and
dec
fdiv
aas
xor
mov
daa
pop
pop
movs
mov
lahf
or
fiadd
pop
repnz
add
inc
push
cmp
jg
pop
xor
xor
movs
daa
arpl
xor
mov
fcom
adc
bt
loopne
cmp
cmp
xor
sub
dec
add
mov
jmp
mov
push
sub
test
enter
daa
inc
jmp
xchg
cmps
and
cdq
jmp
add
inc
and
loope
arpl
and
sub
lods
inc
push
push
jecxz
or
mov
rol
push
inc
or
inc
cmc
cdq
dec
and
outs
ins
xor
inc
pop
adc
lea
in
xlat
cmp
mov
rcr
adc
lods
test
outs
mov
dec
and
and
add
dec
xor
adc
ret
or
outs
inc
nop
mov
xor
or
imul
add
retf
xchg
add
(bad)
push
mov
sub
mov
or
(bad)
xor
sbb
in
cmps
pop
xor
(bad)
xlat
pop
and
mov
add
xchg
xor
mov
push
mov
mov
movs
xchg
movs
xor
int
xchg
sbb
inc
add
jp
retf
stc
ret
sar
jmp
jo
lds
sub
test
mov
jnp
imul
dec
loope
xor
iret
or
or
jnp
lahf
rcl
dec
int
add
pop
test
xchg
dec
pop
(bad)
scas
outs
ja
adc
xor
cmp
jp
adc
xor
gs
mul
popf
arpl
jnp
neg
xor
lea
fidiv
shr
daa
add
test
sub
in
mov
mov
out
rcl
or
fimul
xor
js
aas
xchg
pop
push
mov
in
xlat
sbb
js
mov
dec
xor
jne
inc
xor
jnp
out
mov
pop
mov
sub
(bad)
pop
jecxz
pop
daa
dec
pop
xor
ins
jbe
jae
sbb
fsubrp
jo
test
loope
dec
stc
frstor
(bad)
stos
test
xchg
mov
mov
push
out
frstor
icebp
sbb
cdq
xor
add
xor
sub
fidivr
dec
mov
xor
pmaxub
push
ror
(bad)
mov
pop
mov
jno
rol
sbb
mov
ja
pop
out
test
rol
js
push
mov
xor
neg
lods
popf
outs
xor
sub
or
nop
outs
or
loope
inc
retf
inc
icebp
mov
and
pop
ins
test
fwait
inc
adc
pop
mov
sbb
data16
and
rcr
iret
pop
sbb
lock
popf
loope
fsubp
mov
cmps
jmp
sar
adc
test
cmp
shl
pop
retf
neg
out
dec
lahf
jg
jecxz
rdmsr
call
pop
rcr
outs
adc
pop
in
xlat
sub
inc
int3
ficom
or
xor
stc
pshufw
pop
cmp
test
das
mov
shr
retf
lahf
(bad)
neg
jnp
mov
mov
mov
stc
ret
sub
ins
and
out
mov
xchg
push
ret
stc
test
push
mov
cmp
jnp
jmp
add
add
mov
dec
push
les
pop
js
ja
cmp
imul
dec
out
iret
xchg
xor
mov
scas
or
int3
push
leave
adc
dec
cmp
out
je
pop
adc
fisubr
movs
sbb
add
sub
mov
cmp
dec
adc
shl
sbb
xor
mov
stc
adc
in
popf
mov
mov
cwde
mov
pop
jne
mov
sub
sbb
mov
xchg
test
scas
ret
ins
mov
das
addr16
cmp
sbb
cdq
(bad)
in
cmp
leave
test
popa
xor
mul
inc
fst
inc
mov
js
popa
and
mov
cmp
or
cmp
sahf
sti
ficomp
xor
xor
mov
int
retf
loopne
or
jo
pop
gs
cdq
test
push
lods
outs
sbb
jnp
loopne
inc
outs
cmp
scas
ret
fwait
rcr
addr16
and
movs
lahf
dec
cwde
xor
movs
sti
cmps
int
sbb
jecxz
int
push
out
xor
pop
mov
mov
add
icebp
pop
scas
xor
adc
and
loope
mov
or
lods
or
adc
es
pop
test
outs
xchg
(bad)
xor
push
xchg
fdiv
add
mov
aas
push
inc
mov
mov
cmp
dec
std
movs
das
pop
adc
loope
xchg
pop
scas
out
or
aaa
das
xchg
js
es
jmp
aaa
dec
loopne
jnp
outs
jmp
ret
sbb
xor
jp
lea
sbb
xor
sbb
lahf
jns
cwde
hlt
push
xchg
das
cmp
mov
scas
dec
dec
jmp
add
push
and
inc
aas
addr16
jp
cmp
int
adc
scas
lods
mov
movs
cmp
addr16
xor
cmps
sub
xchg
jae
or
imul
and
int
je
adc
ja
rcl
out
test
jecxz
xchg
pop
mov
mov
aaa
adc
xchg
and
scas
and
push
ret
push
mov
mov
or
movs
aaa
fwait
xor
push
inc
add
mov
pop
add
scas
and
xchg
lds
dec
daa
fwait
imul
xor
js
sbb
sub
xor
cmp
pop
popf
dec
outs
ret
sbb
cmp
imul
xor
adc
fstp
add
js
movs
aaa
sbb
jo
pop
mov
or
inc
aaa
leave
cmp
nop
xchg
or
jo
lods
xor
lock
rcl
xchg
ret
mov
adc
gs
ret
jmp
in
sbb
imul
mov
dec
xchg
fisub
rcr
aad
push
gs
call
inc
loop
fiadd
ins
shl
mov
sbb
ret
fnsave
call
ins
and
jno
cmp
ins
fcom
int
adc
xchg
mov
int
ins
btc
aaa
mov
int3
(bad)
jne
retf
fisubr
pop
rcr
mov
es
fnstenv
(bad)
imul
cmp
mov
push
call
xchg
add
aaa
push
mov
les
test
outs
gs
and
loope
sbb
shl
or
(bad)
enter
or
shl
push
movs
mov
push
arpl
test
cmp
xchg
and
lods
ret
js
jns
jae
mov
cmp
dec
mov
jecxz
push
xchg
or
mov
pop
sub
sbb
lea
cmps
data16
popf
das
aaa
dec
fst
fsubp
lock
dec
jp
dec
fld
ins
mov
mov
jecxz
fisub
popa
(bad)
jnp
mov
xor
stos
adc
and
dec
loop
lahf
inc
and
xor
pop
jne
push
mov
das
mov
fnstenv
jecxz
pop
cmp
sub
or
xlat
retf
xor
fiadd
lods
or
push
mov
pop
(bad)
imul
js
sub
out
scas
sbb
mov
out
mov
jnp
xchg
data16
xor
es
adc
setp
cmps
pop
pop
ror
lods
sbb
xlat
mov
arpl
lock
sub
mov
ins
mov
inc
pop
out
shr
inc
xor
cdq
cmp
ror
jmp
lods
and
je
lds
popa
adc
cmps
in
sub
cmp
fimul
movs
cwde
int
pop
inc
arpl
lock
fild
xor
arpl
daa
dec
test
lahf
stc
test
outs
int
adc
xor
sbb
jecxz
dec
call
xchg
and
shr
or
mul
fsubrp
mov
xlat
ret
jp
pop
inc
sub
sbb
xlat
jns
adc
jnp
test
(bad)
es
pop
lea
pop
adc
pop
rcl
fidivr
mov
es
push
das
test
adc
lock
inc
js
or
fwait
ror
fidivr
jg
das
mov
fisubr
call
mov
(bad)
mov
dec
fbstp
dec
xchg
fsubrp
xor
and
sub
movs
iret
lea
ret
mov
fstp
out
mov
ret
pop
stos
shl
sbb
add
push
inc
mov
popf
fisub
cmp
out
pusha
(bad)
arpl
popf
adc
mov
xchg
pop
outs
push
xchg
adc
xchg
xchg
sub
out
das
cmp
(bad)
fcomp
sbb
dec
loope
sub
icebp
arpl
int
es
and
xor
xor
push
(bad)
fxam
jae
mov
dec
ins
ret
push
(bad)
and
or
aaa
stos
outs
fwait
test
dec
lock
pop
mov
cmps
add
xlat
outs
mov
lods
ficomp
lds
cwde
jecxz
push
jne
int3
not
stos
rol
int3
bound
jecxz
or
gs
inc
mov
xor
cmp
ret
and
add
movs
stos
add
and
outs
ss
adc
call
movs
aaa
mov
jnp
inc
mov
in
ficomp
popa
scas
xor
xor
xor
cdq
lds
mov
call
pushf
es
cmp
mov
inc
iret
mov
xor
push
mov
jnp
cmp
dec
add
xchg
mov
mov
adc
mov
aad
push
dec
or
aaa
lahf
or
inc
mov
sbb
(bad)
cmp
sbb
jmp
imul
adc
xor
xor
xchg
xchg
add
pop
xor
ja
jecxz
fimul
ja
pop
mov
xor
data16
jmp
pop
xor
(bad)
xchg
js
sbb
xchg
icebp
shr
or
xchg
jns
xor
xchg
rcr
aaa
jnp
sub
sub
or
jge
sar
fisub
js
fwait
xor
xor
xor
push
movs
push
xor
xchg
stc
dec
pusha
neg
jnp
inc
mov
sbb
jnp
fiadd
jne
pusha
sub
movs
pop
mov
imul
inc
adc
mov
shl
das
sbb
lds
dec
mov
(bad)
outs
adc
loope
adc
cmc
ficomp
and
lods
cmp
push
popf
inc
push
cmps
test
push
sbb
mov
jmp
sbb
(bad)
cmc
xchg
jns
xor
xor
rcr
std
jnp
sbb
pop
(bad)
and
jge
call
inc
mov
sbb
and
sub
sbb
cmp
sbb
jg
and
ror
sbb
ins
cwde
lds
mov
shl
(bad)
adc
sbb
lds
paddusw
or
(bad)
or
xor
fwait
mov
push
push
adc
push
outs
pop
std
lahf
mov
xchg
jg
push
icebp
data16
add
loope
test
add
add
add
test
dec
jno
popa
cmp
icebp
push
mov
call
xor
les
mov
lock
jnp
sbb
mov
rcr
js
fyl2x
jno
mov
jecxz
fdivrp
mov
cmp
in
cmp
xor
ins
push
outs
shl
push
stos
xlat
jmp
cwde
repz
dec
pop
mov
movs
mov
or
jns
push
and
pusha
inc
xor
cmp
scas
mov
adc
jnp
xchg
ret
xor
cdq
adc
sub
mov
dec
sbb
(bad)
and
imul
or
rcr
bound
dec
jg
dec
mov
inc
icebp
mov
cmp
or
shl
lds
xor
cwde
mov
dec
ret
dec
imul
push
loop
mov
sbb
jp
and
js
call
xor
adc
xchg
xor
pushf
xchg
out
shl
aad
sbb
mov
ins
mov
push
cwde
xor
popw
pop
or
call
sbb
js
dec
lock
or
out
lock
xchg
addr16
btr
arpl
jmp
jns
pop
mov
push
jns
sti
gs
test
sub
xchg
daa
stc
inc
dec
cwde
lds
inc
xor
int
inc
outs
daa
or
xor
cmps
pop
aad
in
xchg
call
jl
dec
adc
and
pop
inc
imul
outs
xchg
int
adc
dec
iret
inc
(bad)
sbb
inc
or
imul
js
pusha
shl
dec
dec
pop
add
pop
xor
mov
sub
pxor
outs
mov
dec
cmps
xchg
add
cdq
outs
scas
pop
mov
push
xor
popa
int3
cwde
inc
mov
or
xor
add
inc
and
push
out
fisttp
ror
dec
and
or
jmp
(bad)
(bad)
in
stc
outs
(bad)
jge
out
sbb
sbb
outs
mov
dec
and
jge
fwait
xor
(bad)
jne
inc
mov
sar
and
xor
xchg
out
cmp
cmps
mov
xchg
in
cmp
pop
(bad)
loope
loopne
jp
(bad)
movs
arpl
lods
pop
dec
aas
xlat
pop
stos
sbb
icebp
sbb
gs
mov
shr
adc
aaa
xor
leave
mov
js
and
stos
mov
mov
(bad)
popa
ret
jns
lods
dec
xor
jno
popf
lods
fcomp
outs
jns
xor
sbb
adc
xor
scas
shl
inc
and
popf
bound
stc
or
adc
outs
and
jge
cmc
inc
push
int3
pusha
sub
push
mov
dec
jns
mov
mov
movs
sub
imul
rcl
fimul
int
or
pop
test
out
add
hlt
fisub
jno
das
test
jg
jmp
xor
sub
xor
cmp
dec
lods
xor
push
xor
cmc
add
push
xor
pop
ret
stos
dec
add
push
inc
add
or
mov
call
(bad)
pop
out
xor
ret
sbb
pop
xor
adc
mov
ins
lahf
outs
mov
xor
adc
adc
movs
dec
xchg
dec
mov
ror
inc
aaa
adc
and
and
popf
dec
xchg
data16
fbstp
push
mov
mov
mov
xor
adc
sub
inc
fwait
fwait
hlt
fisubr
sub
cmp
vpmaxsd
lods
ins
das
sub
pop
rcr
pop
call
push
out
adc
aad
ja
outs
push
xor
popf
sbb
cmps
add
out
mov
std
jno
cmp
imul
dec
xor
or
cmc
adc
out
mov
cwde
inc
xchg
cmp
push
xchg
cmc
adc
push
xchg
jg
pop
adc
mov
and
test
jp
es
dec
add
sbb
(bad)
jecxz
ud2
imul
inc
xchg
shr
push
data16
aam
mov
sub
dec
lea
mov
adc
gs
jp
cmp
or
movs
jecxz
mov
pusha
inc
inc
or
or
ret
mov
adc
jnp
fiadd
jo
xor
pxor
or
sbb
jno
inc
dec
or
ret
jmp
jp
pusha
por
shr
sbb
xchg
push
addr16
mov
cmp
or
mov
fwait
in
setnp
gs
ret
scas
sbb
rcr
adc
jne
mov
sbb
sbb
mov
outs
repz
mul
stos
sbb
mov
popa
push
das
xor
sub
pop
call
mov
sbb
movs
mov
and
or
dec
push
xor
imul
dec
fisttp
add
int
push
inc
cmps
out
push
mov
dec
push
aaa
and
inc
adc
add
lods
int
ror
rcl
xchg
call
push
mov
or
push
outs
xchg
sub
push
xchg
es
popa
mov
sub
jg
dec
sbb
jmp
xor
test
or
aad
imul
dec
dec
ret
cmp
das
and
and
mov
jmp
loopne
loope
mov
or
(bad)
(bad)
retf
jp
dec
xor
je
xor
test
shl
fwait
pop
pop
arpl
sbb
pop
adc
jmp
push
mov
js
push
test
mov
das
push
and
pop
mov
loope
adc
fisubr
add
sbb
out
adc
or
cmp
inc
ja
sub
daa
gs
dec
sbb
das
dec
outs
inc
das
jg
das
jecxz
bound
xor
shl
or
cmp
xchg
dec
neg
adc
jmp
arpl
int
jge
outs
(bad)
ins
ret
shr
xor
imul
xor
imul
mov
imul
sub
mov
and
push
adc
leave
adc
mov
jecxz
rol
daa
sbb
mov
adc
xlat
mov
mov
(bad)
inc
add
jns
out
adc
jnp
mov
cmc
(bad)
xor
call
bound
adc
mul
and
dec
cmp
test
in
or
pop
or
rol
or
add
data16
pusha
xor
jecxz
sti
idiv
xor
cmc
(bad)
sub
scas
pop
inc
mov
int3
sbb
jg
and
imul
popa
lds
sub
xor
adc
adc
out
or
or
ror
mov
cmp
fisub
lds
push
imul
mov
and
(bad)
test
adc
es
push
xor
mov
xchg
retw
sub
popa
inc
jae
lea
int3
jmp
js
mov
mov
stc
psrlq
movs
data16
add
add
cwde
push
xor
mov
cmps
pop
add
pop
outs
ret
movs
(bad)
add
jp
mov
ficomp
inc
out
pop
lds
lods
pop
jno
test
jecxz
mov
dec
cwde
pop
cmp
mov
or
arpl
outs
or
xor
arpl
or
jge
rcl
rol
xor
ins
xor
mov
adc
dec
xchg
cmp
popa
hlt
or
or
xor
imul
and
push
xchg
int3
data16
sbb
std
xchg
push
jno
ret
and
or
call
movs
and
mov
lahf
cmp
xor
outs
inc
aad
mov
cmp
les
xchg
sub
das
mov
mov
imul
fwait
xor
daa
lds
xor
test
aad
sti
add
inc
les
jge
rol
push
ret
stos
pop
scas
inc
or
daa
xor
test
dec
cmp
call
int
add
sub
icebp
aas
movs
cdq
dec
ins
add
and
punpckhbw
mov
mov
es
fstp
sbb
pop
lock
xor
nop
test
cmps
mov
aad
les
mov
and
dec
and
xchg
stos
js
xor
mov
xor
cmc
mov
data16
outs
add
ficomp
cmp
mov
dec
repz
test
pop
push
mov
outs
movs
ret
arpl
addr16
les
fstp
xor
add
or
out
push
movs
fidiv
dec
dec
cwde
lds
lds
fs
jge
adc
loope
dec
sbb
popa
add
fwait
aad
inc
push
jnp
or
lea
test
aam
or
or
scas
mov
pushf
push
add
cwde
mov
fstp
xchg
jnp
pop
ffree
sar
mov
adc
in
lea
icebp
fisub
imul
push
mov
xor
add
cwde
inc
loope
gs
sbb
mov
push
(bad)
jns
adc
out
xor
inc
push
shl
inc
inc
dec
mov
out
loop
sbb
aad
rcl
mov
test
cwde
jno
lock
imul
js
out
lahf
adc
dec
(bad)
xchg
aas
inc
int3
or
dec
or
sbb
mov
(bad)
fbstp
int
sub
(bad)
xor
inc
mov
or
mov
jne
not
jno
adc
sbb
es
xchg
fcmovnbe
sub
mov
arpl
mov
sbb
jnp
cdq
xor
das
int
mov
cwde
mov
xchg
mov
or
aaa
push
push
add
push
adc
loope
popa
sbb
jnp
ror
lea
xchg
push
add
shr
out
xor
aaa
push
sub
xchg
sbb
mov
cmc
pop
xchg
daa
retf
add
or
(bad)
cmp
lods
cwde
adc
ror
stos
call
mov
mov
xlat
outs
push
xor
shl
shl
mov
or
iret
call
xor
mov
popf
inc
nop
and
or
cwde
imul
mov
cmp
push
mov
and
popa
adc
pop
add
lods
fisubr
adc
sbb
mov
outs
push
out
mov
retf
mov
ins
inc
mov
push
push
out
add
in
test
dec
pop
ins
inc
mov
das
shl
mov
cmp
adc
call
xchg
dec
push
mov
iret
jae
rol
rcl
stos
push
mov
imul
aas
jae
scas
in
or
icebp
xchg
sub
fnstenv
xor
sbb
pop
fisubr
(bad)
sbb
ins
inc
retf
std
add
sbb
inc
xchg
jmp
dec
dec
xor
in
not
mov
add
push
rcl
and
adc
cmps
mov
xor
or
dec
out
das
xchg
shl
sbb
movq
shr
lock
or
arpl
movs
aam
add
outs
add
add
rcl
arpl
and
adc
(bad)
call
push
xchg
inc
adc
inc
cmps
neg
lods
popa
xchg
out
mov
scas
add
mov
cmp
push
mov
sti
inc
push
adc
cmp
dec
and
ret
ja
aaa
pop
pop
push
das
push
or
lea
adc
xor
shl
mov
and
stc
adc
popa
outs
sub
sub
xchg
leave
jge
cwde
les
or
dec
mov
xchg
cmp
lea
outs
and
fidivr
lods
ret
lds
adc
dec
out
rcl
add
xchg
scas
inc
adc
push
punpckhdq
fwait
dec
and
inc
or
cmp
fwait
jno
jmp
jnp
pop
dec
fwait
imul
mov
pop
fcomi
pop
lock
ja
retf
dec
(bad)
aaa
and
les
cmp
or
jo
sbb
jbe
push
sar
pusha
movs
dec
or
test
aas
xchg
jns
or
xchg
call
mov
inc
sbb
ret
and
adc
xor
mov
cmp
(bad)
dec
dec
inc
push
xor
cmp
movs
xchg
xchg
add
push
test
sbb
popf
mov
pop
lods
outs
adc
cwde
retf
icebp
add
mov
dec
push
sub
mov
rdtsc
imul
push
dec
or
out
mov
in
sbb
iret
inc
push
mov
in
mov
sar
cwde
adc
js
(bad)
and
add
out
int
(bad)
not
adc
test
add
(bad)
retf
fist
mov
mov
or
mov
retf
push
or
test
mov
or
and
mov
push
outs
xchg
lock
dec
movs
xchg
push
pushf
test
cmp
mov
push
(bad)
jne
call
dec
jmp
sbb
xor
int
cmp
and
icebp
dec
aaa
sub
js
js
test
inc
inc
add
xor
mov
mov
icebp
sbb
add
adc
(bad)
or
aaa
test
les
push
stos
ret
or
add
int
fld
xor
vdivps
inc
aas
pop
popa
rol
pushf
xchg
rol
cmp
mov
xchg
call
dec
jp
pop
or
mov
mov
inc
iret
cmps
sub
xchg
adc
xchg
sti
aaa
xor
pop
pop
sbb
out
or
inc
mov
mov
fstp
lds
jnp
call
mov
pop
nop
mov
in
sub
jne
(bad)
cwde
inc
or
jmp
es
mov
pop
loop
mov
movs
lahf
ins
or
sub
popf
dec
mov
and
sbb
(bad)
cmp
int3
dec
movs
dec
mov
dec
mov
xchg
mov
xor
lods
call
mov
or
pop
sbb
and
stos
jg
cmps
and
cmp
xchg
and
imul
dec
cmc
dec
xchg
int
cmp
xor
popa
stc
dec
loop
test
fwait
sbb
cmp
lahf
jmp
pop
js
push
or
bound
rcr
movs
gs
adc
xchg
and
(bad)
int
call
inc
mov
mov
adc
out
addr16
xor
data16
xchg
jns
sbb
sbb
cmp
pop
int3
vpsllw
xor
and
lds
test
fwait
rcl
jnp
push
cmps
aaa
mov
out
mov
or
dec
xlat
mov
mov
mov
sbb
and
inc
daa
icebp
dec
fisubr
add
int
hlt
pop
repz
(bad)
je
aaa
addr16
std
push
icebp
dec
outs
push
lds
push
add
sub
inc
xor
xor
pop
cmp
push
or
mov
test
sbb
pushf
out
and
data16
data16
(bad)
cmp
mov
dec
jge
jae
mov
xor
inc
mov
sub
adc
and
test
jne
dec
jmp
int
add
dec
jg
aad
sbb
adc
movs
inc
pop
add
mov
sbb
xlat
xchg
adc
es
scas
cmp
or
hlt
sbb
dec
dec
adc
mov
loopne
fwait
jmp
cmc
adc
(bad)
dec
lds
ficomp
dec
jecxz
pop
and
pop
push
outs
sbb
sbb
hlt
sub
fisubr
fwait
sub
mov
test
cmps
push
stos
pop
int
jmp
xor
and
ins
adc
add
jmp
add
pushf
xchg
iret
sbb
arpl
fwait
mov
(bad)
punpckhbw
adc
dec
mul
(bad)
push
dec
ja
test
shr
or
imul
(bad)
shr
fisubr
scas
mov
add
pusha
(bad)
stos
jmp
push
imul
cdq
push
mov
add
lahf
inc
xchg
jp
int
cdq
pop
mov
shl
(bad)
out
popa
lock
add
adc
sbb
cdq
or
les
push
sar
add
fucomip
mov
xor
jmp
pop
cmc
mov
pop
push
inc
and
jne
js
sbb
popf
in
cdq
mov
or
aaa
xchg
(bad)
loope
lods
js
imul
cmps
mov
lds
js
mov
imul
outs
and
call
out
mov
mov
mov
popf
jmp
(bad)
test
popa
add
(bad)
jecxz
cmp
lods
or
sbb
rcl
jmp
jecxz
mov
outs
jae
mov
push
pop
imul
iret
mov
mov
xchg
test
mov
popa
leave
call
or
xor
mov
adc
(bad)
sbb
aaa
mov
shl
cmp
neg
pop
call
lods
loopne
mov
dec
(bad)
sti
aaa
add
ins
leave
xchg
mov
and
mov
mov
mov
mov
xlat
jecxz
outs
pop
je
dec
dec
pop
call
dec
dec
mov
sub
shl
js
sbb
imul
test
not
ret
fbstp
das
or
sub
frstor
mov
pop
inc
and
mov
cwde
jnp
jecxz
add
sti
cmps
mov
inc
adc
mov
and
jbe
inc
cmp
pop
pop
adc
dec
or
pop
mov
cwde
icebp
data16
xchg
mov
or
inc
or
cmp
jne
push
mov
cmp
aaa
xor
xor
call
inc
xor
xchg
mov
test
push
or
test
in
mov
xor
and
sub
shl
cmc
adc
cmp
nop
fimul
xor
lea
inc
inc
dec
fwait
dec
inc
outs
jbe
xchg
mul
and
pop
adc
xor
sti
mov
je
jge
aad
stos
pusha
adc
adc
dec
cwde
xor
rcr
stos
or
test
stos
inc
mov
aad
add
stos
(bad)
aas
or
daa
pop
pop
xor
jecxz
stc
mov
outs
(bad)
ror
or
dec
jbe
or
popa
adc
xor
xchg
jp
aaa
mov
out
mov
adc
jg
jge
aaa
sub
inc
int
fwait
das
or
dec
dec
xchg
sub
les
outs
pop
shl
jno
int3
mov
cmp
(bad)
popa
inc
adc
arpl
pop
inc
mov
or
dec
addr16
adc
mov
fldcw
jno
(bad)
fstp
int
(bad)
test
push
mov
xchg
pop
test
add
js
fwait
ja
data16
jae
add
into
call
int3
pop
mov
push
mov
jne
cwde
les
mov
addr16
call
xor
push
mov
cmc
imul
sti
mov
and
pop
in
xor
vcvtsd2si
adc
push
adc
adc
mov
jno
xor
stos
(bad)
loope
xor
ret
lods
dec
cwde
xor
xor
or
mov
mov
and
aas
adc
ret
int3
int
inc
pop
dec
pop
or
pop
mov
add
adc
(bad)
icebp
aas
xor
and
outs
ret
jns
pop
add
cwde
and
mov
add
lods
js
jge
aad
xchg
xor
int3
imul
jns
inc
xor
cmc
pop
cmp
(bad)
not
in
lock
icebp
and
push
inc
stos
fimul
shl
mov
pop
pop
call
data16
dec
fwait
sub
cmc
std
xchg
ja
xor
fwait
sbb
int
int3
and
add
fldcw
adc
sub
mov
aas
or
jmp
das
(bad)
out
js
dec
adc
cmp
add
mov
jno
and
int3
bound
std
leave
xchg
push
inc
fcmovnbe
js
aaa
add
mov
pop
xor
mov
sub
(bad)
sub
mov
adc
int
ret
adc
sbb
inc
mov
popa
push
fist
ret
xchg
jno
aas
mov
pop
dec
mov
pop
nop
inc
lahf
cmp
aad
nop
js
lea
sbb
and
or
inc
cmps
and
cmp
cmp
jnp
pop
ret
and
add
imul
mov
int3
es
jnp
xor
shl
xchg
or
rcr
xor
inc
lahf
xchg
imul
movs
dec
cmp
pop
adc
xlat
and
out
cmp
cmp
mov
imul
leave
mov
loopne
mov
xor
js
cmc
cmc
inc
sbb
xor
addr16
xor
data16
cwde
jae
stc
cmc
daa
fimul
aad
popa
ret
cmps
out
or
dec
adc
pop
mov
adc
push
lods
push
inc
add
popa
out
cmc
and
mov
imul
add
dec
daa
cmp
sbb
push
lods
sub
push
test
cdq
push
cmps
call
add
or
jg
xor
adc
les
xchg
je
or
dec
js
and
push
sub
mov
sbb
xor
and
shr
cmp
je
in
int
popa
movs
jge
add
(bad)
fwait
and
mov
jp
aas
std
add
ins
mov
xor
jne
sub
movs
sub
jne
adc
xchg
pop
xor
inc
(bad)
das
adc
ret
aas
(bad)
or
dec
test
inc
icebp
adc
jecxz
mov
lock
push
fwait
lock
add
xor
adc
rcr
mov
fidiv
sub
aaa
movs
movs
xchg
and
adc
cmp
cmp
sub
xor
add
aad
add
push
and
les
fisubr
add
cmp
sbb
cmp
mov
icebp
lds
pusha
pop
int3
dec
rcr
xor
push
adc
cmp
xlat
adc
rcl
stc
add
mov
aad
mov
es
fst
and
fwait
cmp
adc
xor
fwait
inc
mov
pop
sti
xchg
sbb
fwait
shr
mov
sbb
ficomp
leave
jnp
dec
or
pop
adc
fwait
xor
pop
test
call
cmc
xchg
cmp
sbb
adc
dec
mov
shl
xchg
mov
push
xor
adc
pop
xor
and
dec
lea
pop
add
push
adc
idiv
cwde
test
test
cmps
mov
lods
mov
in
xchg
rol
cmp
xor
or
stc
imul
pop
dec
js
test
popa
je
aas
sub
mov
jns
iret
dec
mov
jmp
mov
mov
add
mov
fwait
aam
jmp
mov
xchg
sub
leave
pop
loope
bound
dec
mov
add
(bad)
aaa
repz
push
(bad)
arpl
jmp
add
dec
sub
stos
loopne
loopne
in
das
jnp
jmp
push
mov
xor
call
adc
fwait
mov
cmp
int
daa
adc
bound
adc
dec
aad
inc
(bad)
stc
adc
mov
sub
add
out
mov
ficomp
lds
js
popf
jno
mov
or
loope
data16
xor
push
icebp
lds
es
jp
xchg
aad
xor
xstore-rng
cmps
shr
fs
and
and
push
or
xchg
and
popf
mov
scas
cli
data16
loopne
ins
cmps
mov
xchg
cmp
das
inc
xor
imul
jp
(bad)
fucom
xor
jnp
les
int3
in
(bad)
mov
aad
cmp
cmc
test
int
add
cmp
ret
xchg
inc
xchg
dec
outs
mov
jmp
jnp
sbb
adc
add
and
adc
cmc
sbb
jae
adc
xor
lods
adc
or
push
jae
and
adc
and
pop
cdq
jno
mov
scas
jp
test
cmp
cmp
or
xlat
sbb
mov
xor
adc
addr16
sbb
stos
fisubr
out
cwde
icebp
js
gs
dec
mov
xchg
mov
bound
ja
sbb
add
test
sbb
popa
cmp
xchg
add
adc
push
add
(bad)
test
cmp
or
adc
lock
xchg
std
movs
lds
mov
adc
es
xchg
cdq
jecxz
imul
xchg
cmp
xor
mov
xchg
pop
das
pop
or
xor
in
push
outs
xor
xchg
cmp
call
or
imul
push
add
mov
sub
cmps
sub
adc
ins
adc
int
in
call
dec
out
inc
pop
aad
scas
outs
sbb
mov
arpl
mov
sbb
(bad)
movs
pusha
inc
pop
in
icebp
sub
xor
mov
or
adc
int3
jp
push
mov
add
dec
cmp
(bad)
ret
add
adc
cdq
aad
dec
loopne
adc
mov
stos
push
xor
js
loop
mov
pop
das
mov
cmps
mul
mov
fimul
cmp
out
jmp
inc
pop
jmp
mov
dec
inc
mov
(bad)
mov
mov
inc
and
mov
cwde
push
adc
push
test
dec
js
dec
fcmovne
es
xor
sbb
add
push
retf
push
imul
pop
pop
jg
adc
add
fistp
pop
ins
(bad)
fwait
xor
stos
pop
arpl
adc
outs
adc
icebp
xor
sub
popa
ror
ror
mov
mov
sub
xchg
sbb
ret
stos
movs
push
call
jns
loop
movs
cdq
and
cmp
stos
lahf
imul
cmps
pop
jge
mov
stc
xchg
dec
or
mov
pop
mov
imul
and
push
mov
inc
push
data16
test
outs
pop
std
cmps
loope
lods
or
out
xor
cmps
int
xchg
sub
inc
inc
and
sbb
bound
jecxz
mov
and
xchg
cwde
addr16
test
pusha
inc
xchg
pop
aad
js
bound
outs
pop
call
or
test
inc
pop
mov
loop
push
xlat
dec
bound
mov
dec
lock
fimul
pop
outs
push
jae
xchg
rol
sbb
or
jecxz
dec
xchg
sub
jmp
mov
in
jae
cmps
push
ret
sub
push
push
jp
loopne
(bad)
dec
int
fstp
xor
test
jbe
sbb
sbb
cmc
dec
add
and
sbb
call
sub
mov
inc
dec
int3
push
dec
inc
mov
sbb
pop
nop
lods
adc
(bad)
sbb
adc
mov
imul
pop
xor
es
cmp
int3
adc
jmp
dec
xor
call
sub
dec
js
bound
mov
inc
cmc
aad
add
cmp
sub
or
ja
add
adc
sub
dec
ret
shl
cwde
mov
or
mov
sbb
mov
retf
retf
js
ret
addr16
adc
jmp
mov
and
inc
xchg
loopne
imul
push
int
or
push
je
ins
fst
mov
out
push
xor
mov
lock
cdq
fstp
outs
shl
mov
sbb
and
lods
pop
sub
ror
and
int3
cwde
(bad)
ret
pop
les
xchg
das
or
dec
call
lods
ficom
add
sub
ss
std
lods
or
and
lds
lahf
fsubp
xor
xor
pusha
push
adc
adc
mov
div
fiadd
dec
dec
jp
bound
cmps
add
sub
or
inc
dec
sbb
es
push
outs
adc
ror
mov
arpl
std
jne
dec
retf
add
int
or
shl
mov
add
or
test
xchg
and
aaa
pop
cmps
push
sbb
das
cmp
lea
mov
xchg
xor
dec
cmc
or
adc
cmps
rcl
mov
shrd
hlt
mov
imul
popa
das
arpl
ret
test
int3
mov
inc
mov
daa
sub
dec
mov
adc
cwde
aad
mov
aas
push
inc
loopne
add
jnp
or
rol
xchg
test
add
add
inc
pop
es
rcl
pop
lock
out
add
jge
pushf
xchg
aam
aas
jg
lock
in
xor
pop
inc
xchg
jmp
lock
xchg
jno
ret
jecxz
ja
cdq
(bad)
and
inc
xchg
dec
leave
and
int
icebp
pop
and
(bad)
jmp
jno
fist
adc
xor
out
lods
pusha
adc
or
test
aam
mov
shl
movs
mov
dec
cmp
cwde
mov
data16
dec
cmps
(bad)
int
ficom
adc
push
jns
cmp
xor
sub
inc
and
shl
imul
inc
xor
call
out
dec
js
jp
cmp
mov
ret
movs
and
nop
and
ror
xchg
(bad)
(bad)
arpl
dec
jp
(bad)
or
and
(bad)
imul
adc
or
xchg
jne
sbb
icebp
js
or
mov
mov
pop
popa
cwde
aad
or
test
lahf
mov
xor
inc
(bad)
stos
pop
xor
or
and
xchg
popa
(bad)
arpl
lds
mov
lock
add
push
push
outs
push
xchg
sbb
ja
es
mov
sub
xor
aaa
xchg
std
int
push
xor
and
jge
rol
add
dec
xchg
sbb
mov
data16
adc
or
jnp
arpl
pop
push
mov
cmc
dec
push
inc
or
xor
mov
int
das
sub
jne
jp
add
jmp
sbb
jne
inc
mov
int
inc
mov
inc
sub
lds
shl
data16
add
sbb
cmp
ret
xlat
add
int
mov
adc
and
xchg
sub
hlt
inc
out
or
neg
add
inc
dec
movs
adc
jnp
nop
lods
jp
icebp
mov
push
aaa
push
add
sub
(bad)
addr16
dec
call
pop
in
push
push
sbb
sub
jne
lock
push
pop
and
xchg
jns
lods
jp
or
adc
outs
jmp
mov
icebp
jecxz
sar
cmp
and
add
cwde
push
xchg
shl
xchg
js
(bad)
xlat
cmps
cmc
shr
cmp
jmp
(bad)
sub
cmp
stc
addr16
aaa
mov
sbb
add
cdq
mov
pop
cmp
mov
jmp
adc
inc
stc
or
mov
sbb
shr
inc
daa
lea
pop
scas
fabs
xor
mov
inc
arpl
aaa
mov
mov
js
or
sub
mov
adc
push
mov
or
jp
seta
jnp
pusha
shr
xor
dec
call
pusha
rcl
scas
fs
mov
pop
out
xchg
push
cmc
es
fwait
aam
xor
int
outs
mov
cmp
sub
fst
or
sub
das
std
or
lods
fbld
adc
jecxz
mov
pop
mov
loop
mov
ja
mov
xor
pop
popa
shl
or
xchg
movs
xchg
adc
(bad)
leave
sbb
cwde
je
idiv
or
mov
mov
data16
test
movs
ret
inc
dec
jp
inc
mov
cmp
dec
mov
add
add
push
or
push
adc
mov
cmp
mov
es
sti
mov
imul
mov
jmp
cwde
push
and
xchg
push
int
push
fbstp
add
test
jmp
or
test
push
pushf
adc
stc
jno
es
sub
jae
xchg
ds
dec
lock
cmc
sub
fs
shr
pop
movs
and
int3
cmp
test
mov
pop
pop
gs
xlat
cmp
inc
sbb
shl
mov
or
pop
or
pop
and
jp
xor
adc
ret
loop
int
mov
jg
lds
push
and
pop
xchg
mov
adc
in
mov
fldcw
mov
sbb
mov
inc
pop
inc
ret
xchg
sub
add
pop
xor
xor
lods
xlat
test
and
mov
cmovnp
jo
sar
mov
push
(bad)
push
cmps
daa
pop
xchg
add
xor
sbb
loope
add
mov
xchg
call
das
sbb
rcl
mov
xor
fiadd
and
js
adc
mov
lds
rol
and
movs
lods
jl
int
(bad)
pop
fnstsw
aad
stos
dec
mov
adc
rcr
adc
pop
pop
ror
call
xlat
mov
call
push
adc
pop
jns
or
fidivr
jecxz
adc
push
xchg
movs
or
jg
push
or
xor
or
xchg
ja
and
ins
daa
std
pop
sbb
inc
loopne
imul
push
or
shl
or
add
xchg
add
and
jno
pop
or
lds
int
xchg
je
pop
sbb
dec
dec
aaa
jmp
lahf
fnstcw
xchg
mov
mov
jns
or
xor
addr16
or
fs
sub
dec
jae
fisub
retf
adc
call
jns
xchg
(bad)
cmp
aaa
and
xor
mov
bndstx
rol
or
lods
aaa
adc
and
ret
rcr
movs
fcmovnb
push
int3
data16
cmp
xor
imul
mov
fist
jecxz
adc
ins
addr16
adc
cwde
sar
fisub
shl
in
aad
(bad)
(bad)
int
nop
es
cwde
std
mov
mov
mov
int
ret
cmp
xchg
and
inc
dec
(bad)
and
push
xchg
outs
stos
aas
js
test
leave
xor
int3
bound
adc
and
push
out
movs
lods
ret
jno
cmp
fisubr
sti
sub
dec
dec
or
ficomp
popa
inc
pop
call
mov
mov
xor
or
fiadd
stc
xor
es
sub
stos
xlat
test
mov
cwde
jge
dec
or
inc
mov
inc
jns
popa
(bad)
adc
inc
adc
sub
pusha
add
pop
adc
scas
lahf
movs
xor
mov
sub
add
xchg
ins
std
(bad)
lods
mul
aad
mov
hlt
fidiv
test
adc
mov
or
stc
jge
xadd
xor
mov
xor
dec
imul
sbb
ret
test
mov
shr
jns
mov
mov
dec
push
mov
adc
sbb
int3
test
in
int3
bound
xor
dec
outs
push
mov
mov
xor
adc
sbb
ficom
arpl
popf
add
sub
sbb
sbb
dec
push
adc
imul
add
ins
mov
or
movs
inc
sub
pushf
scas
jne
mov
dec
xor
(bad)
mov
dec
or
out
pop
mov
fisubr
in
dec
adc
adc
xchg
arpl
addr16
jnp
ficom
xor
or
xchg
or
cdq
aaa
xor
das
pop
adc
pop
das
test
inc
add
test
(bad)
xchg
gs
and
inc
mov
mov
mov
or
ficomp
inc
out
cmp
or
(bad)
jge
xor
mov
add
pop
inc
rcr
dec
mov
adc
repz
pop
sub
sub
aad
js
es
test
rcl
mov
xor
(bad)
imul
sub
cmc
inc
shl
pop
jno
aaa
loope
cwde
sbb
mov
das
cwde
int
inc
inc
(bad)
jmp
adc
inc
jmp
xor
jns
sbb
mov
test
aaa
aad
dec
jmp
cmp
add
mov
(bad)
fnstsw
or
add
test
es
adc
lods
loopne
sub
adc
out
adc
aad
cwde
or
push
xor
fwait
xor
dec
bound
jno
jecxz
cmc
js
xchg
ret
out
push
call
push
imul
rep
outs
xor
(bad)
mov
mov
movs
mov
movs
mov
or
stos
or
sar
xchg
pop
xlat
int
call
push
ret
leave
sub
aaa
or
xor
mov
cmps
adc
sbb
jp
ja
sub
sbb
les
xor
popf
(bad)
idiv
adc
and
add
popa
adc
cmp
or
test
xor
call
xchg
jmp
movs
sub
xor
xor
loopne
test
add
mov
lods
inc
dec
jecxz
ror
adc
sub
popa
or
xchg
and
ins
loopne
test
pusha
push
dec
dec
push
out
mov
ins
fisttp
sbb
in
int
sub
test
jmp
mov
push
cmp
cwde
jg
pop
das
sbb
mov
arpl
xlat
movs
mul
movs
xlat
push
rol
test
xor
adc
lea
(bad)
xor
push
sar
and
cmp
inc
sub
push
out
sbb
xchg
push
xor
popa
add
imul
arpl
rol
es
lods
or
push
shr
xor
rol
lahf
mov
adc
add
pop
aam
popf
adc
mov
pushf
call
dec
sar
jns
lds
mov
arpl
sbb
xchg
fnstcw
fstp
lea
pusha
inc
adc
mov
and
fnsave
int3
call
test
lds
scas
stos
and
(bad)
mov
lods
aaa
mov
fisub
push
frstor
xchg
cmc
js
push
in
ja
cwde
adc
jmp
adc
js
mov
mov
push
out
adc
inc
retf
sbb
xchg
lods
cmps
pop
in
aas
rol
add
icebp
ins
sar
inc
mov
cwde
xor
fs
inc
xor
adc
data16
sub
xchg
fist
outs
aaa
lods
and
mov
aaa
ret
sbb
and
or
push
xor
pop
xchg
and
pop
mov
imul
pop
aaa
sub
adc
xchg
xor
call
adc
lods
adc
cmp
mov
and
retf
xor
mov
and
loopne
cwde
lds
xor
js
sti
mov
cmp
mov
outs
mov
cwde
shl
lds
addr16
mov
mov
dec
add
mov
add
xlat
test
cmp
mov
test
dec
mov
push
xor
fxch
stc
ficom
or
dec
out
stos
call
daa
call
dec
sbb
mov
push
mov
or
shl
xor
inc
jns
iret
and
retf
cmc
push
add
cmp
adc
(bad)
sbb
ror
push
xor
and
inc
outs
and
test
arpl
jge
mov
out
adc
ja
mov
sbb
icebp
popf
pop
movs
loopne
mov
xchg
fimul
movs
pop
popf
mov
adc
mov
sub
jno
sub
mov
addr16
inc
hlt
mov
leave
ins
xchg
push
add
xor
jp
stos
xor
xor
adc
mov
dec
adc
popf
test
or
xor
xchg
les
xchg
mov
pop
int3
jp
in
rcr
push
mov
int
and
adc
mov
inc
lods
call
loopne
xchg
cdq
xchg
test
dec
mov
rcr
inc
xchg
sub
ud1
in
ror
and
or
pop
shr
sbb
or
or
or
addr16
dec
int3
pusha
push
inc
inc
ja
add
and
stos
xor
push
dec
mov
inc
add
popa
dec
jp
popw
jae
mov
xor
aad
jne
push
sbb
adc
in
xchg
lods
iret
stc
aaa
sbb
jp
cmp
pop
inc
stos
leave
sub
data16
add
or
cmp
push
inc
dec
loopne
stc
outs
mov
ja
leave
jno
add
call
aad
(bad)
loope
fwait
sar
pop
mov
(bad)
loop
fwait
cmc
fwait
push
addr16
leave
mov
loopne
lods
stos
adc
inc
test
leave
fistp
sub
(bad)
or
in
js
adc
retf
mov
or
sbb
xor
rol
inc
adc
mov
jo
pop
rcr
mov
movs
add
and
das
fst
inc
sbb
mov
ret
(bad)
lahf
mov
lods
(bad)
arpl
ja
or
int3
xor
stos
xchg
and
jecxz
inc
adc
mov
add
xchg
emms
daa
mov
xchg
sar
mov
xchg
repz
cmp
xor
push
mov
(bad)
jmp
les
mov
and
scas
lahf
inc
mov
inc
and
rol
sbb
pop
lods
dec
test
xor
xlat
jno
add
xlat
scas
mul
mul
bound
cmps
ret
invd
adc
shr
imul
aam
jp
add
(bad)
inc
das
mov
imul
lods
dec
push
xor
int
lds
movs
xor
adc
sub
jne
shr
leave
xor
push
mov
sbb
call
dec
loope
inc
fwait
push
icebp
cwde
dec
sbb
cdq
(bad)
aad
mov
pop
or
popf
ins
cmc
add
das
xchg
call
inc
int
adc
dec
add
out
xor
fwait
adc
call
ret
pop
xor
adc
iret
js
push
mov
push
xchg
arpl
jnp
adc
mov
jecxz
or
or
add
sbb
mov
inc
jge
push
icebp
test
imul
fwait
rcl
pusha
inc
adc
rol
daa
mov
daa
xchg
es
outs
inc
push
mov
daa
out
mov
mov
mov
add
pop
nop
call
xchg
shr
movs
mov
in
adc
shl
sbb
pop
mov
shl
nop
cmp
pop
and
mov
inc
and
icebp
daa
fwait
cmps
aaa
imul
cwde
int
(bad)
or
jmp
dec
test
(bad)
sub
xchg
je
add
sar
popf
sub
jnp
xor
mov
outs
jae
sub
mov
rol
and
mov
js
es
and
xchg
pop
data16
dec
out
dec
das
sbb
fld
cdq
fwait
pop
add
jns
popa
inc
test
adc
ss
and
sar
push
add
sbb
es
sub
popa
push
test
icebp
mov
sub
mov
pop
xor
sub
ret
add
aaa
pop
push
fwait
push
ret
test
retf
xor
call
rcl
mov
in
push
mov
movs
out
(bad)
push
inc
mov
add
push
xor
dec
jns
push
adc
xchg
add
push
sbb
and
mov
mov
fiadd
add
rol
mov
lods
fisttp
xor
inc
xor
mov
fisttp
ret
lods
rcl
ret
stos
addr16
mov
ja
in
xor
mov
imul
pop
mov
mov
pop
mov
and
(bad)
mov
test
mov
adc
sub
sub
shl
mov
mov
aas
or
fwait
shl
mov
fidivr
and
mov
stos
or
xchg
fistp
sub
and
inc
retf
mov
int
lahf
test
rcl
aas
popa
dec
jno
adc
cmps
push
mov
xor
lahf
dec
das
sbb
add
ss
push
add
or
cmp
xchg
sub
shl
xor
ret
out
xor
mov
and
cmps
pop
test
mov
les
retf
mov
sub
sti
inc
sub
das
arpl
and
push
hlt
aaa
in
xor
inc
nop
xadd
icebp
xchg
mov
add
adc
push
test
lds
movs
data16
adc
xor
sub
xor
imul
mov
leave
ret
xor
push
xor
ror
fimul
cmp
mov
leave
iret
fisttp
xor
dec
fist
mov
sbb
and
push
or
lock
add
push
cdq
add
mov
xchg
bound
mov
xor
fistp
or
sub
dec
jno
mov
int3
rep
mov
lock
add
sub
cmps
dec
popf
xlat
sub
mov
int
push
inc
dec
push
aaa
loop
sbb
ins
dec
int3
cmp
cmp
cmp
rcl
mov
and
or
and
mov
mov
mul
jmp
(bad)
mov
xchg
(bad)
mov
pop
mov
scas
sbb
out
push
outs
mov
mov
xchg
jne
aad
stos
neg
push
test
and
inc
pop
adc
dec
imul
js
stc
or
mov
mov
sub
xor
xchg
imul
pop
pop
or
push
mov
mov
mov
mov
pusha
(bad)
and
movs
std
das
or
xchg
das
or
and
inc
cmc
aas
movs
and
pop
xor
les
pop
int3
jmp
adc
jno
push
push
mov
ror
inc
dec
sub
jg
icebp
int3
fidiv
loop
push
and
aam
movs
fwait
aaa
xor
cmp
mov
mov
xor
xor
fld
movs
cwde
xchg
or
push
(bad)
in
sub
add
imul
sub
xor
dec
adc
or
sbb
pop
ror
aas
sbb
lds
stos
adc
push
jmp
adc
or
movs
fiadd
fwait
inc
(bad)
cwde
lock
or
fcompp
gs
pusha
adc
pop
popf
cmp
fild
sbb
in
or
adc
xor
es
and
dec
cmp
in
xor
pop
(bad)
jno
and
or
fistp
daa
and
jg
inc
xchg
add
mov
std
int
sbb
out
scas
outs
mov
jno
test
push
vpinsrw
pop
movs
out
xlat
mov
imul
ja
adc
jmp
fisub
dec
rcl
mov
inc
push
sub
sbb
adc
inc
iret
mov
and
sub
mov
ins
cmc
push
jnp
add
mov
daa
idiv
out
dec
or
inc
mov
xchg
fwait
cmc
popa
sub
add
xor
sub
lds
inc
pushf
out
in
dec
xor
or
pusha
add
cmc
div
bound
cmp
fisubr
rol
es
jae
int
adc
cdq
jmp
sbb
jmp
sbb
js
sbb
shl
aam
push
outs
outs
test
dec
push
gs
sub
push
sbb
retf
and
and
movs
pop
icebp
fild
out
rcr
push
rcr
add
xor
push
dec
call
add
dec
(bad)
mov
mov
cmp
das
pop
aad
repz
inc
xor
data16
aaa
xlat
pop
add
mov
sbb
sti
lds
imul
mov
mov
or
int
scas
stos
pop
and
ror
mov
rol
and
jmp
in
xor
push
je
push
add
imul
sbb
cmc
es
stc
leave
xlat
pop
les
and
mov
or
mov
dec
mov
js
stos
rcr
icebp
fidiv
or
or
iret
push
gs
jmp
xor
imul
adc
mov
aad
jp
pusha
or
out
es
sar
add
data16
jae
js
mov
xor
(bad)
mov
inc
pop
xchg
adc
outs
adc
int
pop
mov
ins
push
xchg
shl
jno
int3
or
mov
pusha
inc
xchg
addr16
test
add
shr
in
or
xchg
and
imul
or
sbb
sar
rcl
shl
iret
std
add
jae
sbb
mov
jg
ret
les
add
push
lock
xor
movs
mov
movs
mov
icebp
push
mov
shl
inc
mov
mov
xchg
lods
dec
sub
xor
adc
lds
movs
cmp
add
mov
pop
push
imul
dec
adc
xor
fwait
inc
out
pop
addr16
ret
fiadd
xor
dec
js
sti
push
mov
shr
mov
pusha
mov
(bad)
add
retf
out
inc
mov
sub
push
sub
mov
inc
xchg
(bad)
pop
cwde
hlt
inc
sub
movs
dec
sub
add
(bad)
vfmaddps
js
imul
and
adc
sub
out
xchg
shl
mov
push
mov
xor
mov
jae
fisttp
mov
fbld
or
xor
xor
add
loope
inc
icebp
pop
sbb
xor
mov
xchg
rcl
shr
int3
fstp
les
sti
xchg
les
pop
or
dec
aad
arpl
adc
int
xor
das
push
int
jge
jecxz
or
mov
sbb
cmp
stc
pop
mov
xor
adc
push
xor
and
adc
inc
test
push
xor
inc
inc
ret
add
ja
pop
add
inc
xchg
push
jno
fwait
das
or
out
cmp
aad
mov
pop
xlat
stc
(bad)
pop
inc
shl
fisubr
out
ins
movs
les
push
mov
push
mov
sbb
stos
(bad)
les
test
test
add
daa
mov
(bad)
retf
mov
push
mov
pop
bound
jp
mov
icebp
cmp
pusha
fnstenv
push
and
sti
fidiv
ror
push
mov
jnp
ja
dec
dec
or
xor
or
daa
inc
pop
shl
inc
ror
jnp
pop
cmp
and
in
sti
retf
mov
push
mov
cmp
cmp
(bad)
in
icebp
push
pop
cdq
mov
push
outs
test
out
lds
add
jmp
xor
sub
mov
sbb
aad
jae
and
jmp
cmp
aas
nop
sbb
jg
mul
mov
add
adc
daa
lock
xor
inc
test
inc
(bad)
mov
int
dec
movs
jne
popf
jno
leave
mov
sub
test
loope
loop
jecxz
outs
mov
loopne
repz
sub
sbb
fwait
xor
repz
icebp
arpl
sbb
dec
aad
addr16
sbb
jg
jp
ret
fistp
mov
and
out
xor
(bad)
ins
push
leave
rdtsc
cmp
pusha
std
pop
inc
adc
mov
fisub
mov
ja
test
ja
jmp
test
nop
test
xchg
pop
or
add
add
and
adc
aad
test
addr16
jp
and
lods
xchg
or
pop
out
add
sub
add
fwait
pop
iret
sub
test
lods
movs
push
mov
mov
out
int
xchg
or
mov
xchg
mov
adc
and
sub
sub
inc
mov
sbb
fwait
xlat
pop
cmc
rol
mov
lea
fs
and
jno
adc
push
retf
call
sbb
mov
shr
jp
cmps
fwait
mov
mov
aaa
fwait
aam
in
inc
xchg
inc
js
js
mov
sar
lahf
test
add
fwait
xor
shl
and
ret
sti
popa
std
adc
adc
dec
fisubr
push
sbb
dec
jbe
push
pop
jno
push
xor
test
dec
push
les
sbb
or
xchg
add
jecxz
cmp
mov
or
cmp
xor
call
mov
add
dec
push
xchg
pop
push
aad
dec
int
mov
jnp
lds
mov
xchg
dec
adc
lahf
adc
mov
and
bound
dec
cdq
retf
add
and
sub
jae
mov
inc
xchg
add
(bad)
lods
add
rcr
adc
push
loope
dec
out
adc
aad
jnp
or
and
arpl
pop
outs
sbb
aad
or
and
inc
xchg
ror
es
outs
es
dec
pop
mov
int
inc
mov
mov
xlat
inc
std
dec
js
icebp
jns
mov
das
mov
setp
sti
jnp
pop
add
mov
sbb
int
mov
popa
add
imul
cmp
(bad)
(bad)
out
(bad)
cmp
mov
loopne
imul
sbb
and
outs
imul
push
add
mov
dec
add
mov
pop
(bad)
sub
sbb
imul
ins
xor
xor
inc
sbb
add
and
jne
mov
fwait
test
nop
popf
sbb
mov
outs
mov
sub
std
or
cdq
jecxz
mov
mov
mov
(bad)
arpl
sub
push
aaa
fucomip
xor
std
ret
stos
aas
jp
sub
dec
cmc
sbb
adc
add
shl
and
xchg
push
rol
rol
pusha
adc
or
(bad)
pop
pop
sub
out
add
cmp
adc
add
push
aad
sbb
xor
inc
mov
pop
mov
aaa
fwait
aad
sub
mov
int
test
mov
sub
pop
or
xchg
add
test
pop
scas
and
sbb
sub
add
or
or
out
xchg
or
lock
adc
adc
or
mov
cmc
imul
mov
mov
cmp
xlat
aaa
cmp
pop
mov
xor
ja
inc
inc
mov
and
and
fimul
dec
sahf
outs
or
xor
mov
loopne
imul
adc
or
sub
pop
int
push
call
inc
add
popa
rcr
or
jnp
retf
std
addr16
ins
xor
test
add
xor
add
dec
mov
xor
les
arpl
(bad)
cmc
adc
test
cmp
pop
lds
scas
call
ja
and
mov
out
sub
mov
rol
xor
movs
(bad)
cmp
inc
mov
jmp
and
sbb
mov
or
or
loop
dec
icebp
outs
jg
adc
pop
movs
call
mov
adc
test
inc
shl
and
xchg
jae
jnp
pop
(bad)
sub
loop
psraw
xor
mov
ret
mov
stos
shl
aas
pop
movs
repz
aaa
imul
test
mov
inc
xor
(bad)
or
adc
xor
xor
jno
(bad)
mul
test
pop
ret
push
or
sub
(bad)
in
(bad)
mov
(bad)
out
or
ret
jge
scas
xor
les
and
iret
fld
or
adc
lea
fidivr
jns
add
or
jno
dec
dec
stos
add
sbb
(bad)
dec
xchg
xor
stos
aad
das
pop
inc
jno
and
mov
mov
xor
stc
cmp
es
fwait
mov
push
push
xor
adc
data16
cmp
xlat
xchg
inc
dec
inc
outs
push
mov
push
xchg
mov
jne
jae
jno
lock
movs
xchg
fwait
aad
push
push
dec
cmp
(bad)
mov
ror
dec
xor
outs
and
adc
call
and
adc
mov
mov
lock
pop
push
cmp
stos
dec
outs
mov
and
jno
pusha
(bad)
sub
lea
dec
mov
addr16
es
inc
std
xchg
inc
js
dec
adc
cdq
leave
adc
or
or
cmp
push
shr
cwde
push
mov
es
stos
jmp
xor
fst
mov
pop
xchg
mov
sbb
or
mov
add
out
jns
dec
fstp
mov
mov
sub
pop
aam
jg
mov
mov
out
jno
pop
aad
or
leave
ret
test
outs
(bad)
sbb
or
xchg
mov
mov
loope
loope
mov
inc
xor
(bad)
and
xor
sbb
add
xor
inc
pop
add
adc
jae
(bad)
xor
data16
jecxz
mov
push
xchg
imul
sub
leave
mov
add
sbb
pop
call
mov
(bad)
jne
gs
pop
fldenv
push
out
xor
test
test
movs
mov
push
or
popf
xchg
and
xchg
adc
dec
push
test
es
leave
test
mov
jg
sti
mov
or
outs
cmp
or
xlat
stc
push
das
sbb
cvtdq2ps
adc
xlat
ins
fstp
xchg
add
or
test
sbb
aaa
imul
cmc
adc
and
mov
loopne
xor
mov
xor
xor
dec
ret
cmc
test
rcl
push
adc
shr
ja
dec
mov
xchg
sbb
jns
ja
xor
leave
pmullw
lods
sub
adc
mov
dec
dec
push
outs
lods
popa
mov
fsub
das
sti
sub
les
fstp
or
dec
xor
faddp
inc
push
adc
fldenv
or
pushf
xor
gs
xor
dec
push
jns
jmp
aad
int3
pop
xor
inc
les
or
movs
push
mov
xchg
iret
pop
int3
cwde
aam
(bad)
xor
lea
lods
stos
add
test
inc
dec
icebp
mov
cmp
int
gs
int3
call
and
mov
pusha
rcr
int3
xor
xchg
lock
(bad)
in
jae
fnstcw
push
shl
push
mov
inc
push
pop
lods
neg
sub
inc
xchg
pusha
inc
daa
pusha
inc
dec
or
and
shl
sti
test
adc
xchg
add
test
dec
imul
dec
xchg
ja
jnp
sub
sbb
or
sbb
call
pop
adc
cmp
xchg
jne
sub
push
xchg
or
cmps
mov
test
sub
rcl
mov
(bad)
dec
jp
or
pop
jnp
mov
lea
inc
test
push
inc
outs
scas
push
fisubr
xchg
cmp
or
cmp
mov
leave
mov
sbb
lds
aas
sbb
ins
jg
add
add
xor
cwde
xor
fwait
jnp
es
mov
push
sbb
in
xor
mov
cmp
adc
stos
in
int3
mov
xlat
repz
and
push
inc
and
jnp
dec
add
lds
movs
call
pop
inc
or
fwait
jne
xor
pusha
(bad)
fwait
xor
dec
sbb
lds
call
retf
fwait
xchg
add
jg
leave
sahf
sub
and
inc
or
data16
xchg
jae
add
es
es
out
test
mov
sub
aad
imul
adc
call
loope
stc
lahf
outs
cwde
xor
adc
xor
imul
sbb
lock
popa
mul
add
adc
movs
aaa
jge
or
mov
push
mov
mov
or
xor
or
xor
pop
cmp
xor
fild
lock
shl
out
int
sbb
shl
jmp
rcl
or
inc
popf
mov
push
outs
dec
push
imul
mov
ja
add
inc
dec
dec
fild
dec
stos
pop
in
sbb
(bad)
pop
fstp
lds
add
imul
xor
push
push
pop
adc
in
aad
stc
and
ret
out
and
pop
adc
add
mov
popa
push
cdq
int
inc
dec
sbb
retf
sub
int
dec
jecxz
call
and
mov
cmp
or
jp
and
or
xor
arpl
stos
es
outs
pop
push
xchg
mov
inc
cmp
es
daa
cmp
jge
leave
mov
stos
icebp
xor
push
sub
xor
mov
jnp
xchg
mov
push
dec
mov
ficomp
in
std
mov
mov
loop
mov
cwde
push
and
add
adc
jmp
or
mov
les
stos
imul
gs
inc
mov
lahf
and
movs
in
dec
ins
xor
jecxz
int3
cmp
dec
adc
jne
jmp
sub
addr16
adc
xor
jae
rol
xor
mov
xor
imul
mov
movs
sub
sub
sti
cmp
loopne
push
xor
inc
or
ror
dec
xchg
mov
adc
xchg
inc
mov
nop
das
sbb
ret
xor
ins
popf
lock
or
adc
pop
fnstenv
jnp
fld
imul
(bad)
test
loope
pop
xor
xor
hlt
(bad)
xchg
mov
sti
idiv
movs
dec
sub
sbb
push
inc
scas
fldcw
sub
cdq
push
mov
inc
jns
jmp
push
pop
aas
int
mov
fwait
les
shl
sub
jno
arpl
xchg
inc
xor
dec
add
mov
ret
jmp
or
(bad)
in
and
lds
mov
ss
int
rol
add
xchg
outs
sbb
add
push
mov
jmp
mov
xchg
adc
jge
adc
movs
jmp
test
or
mov
or
mov
ret
lahf
mov
imul
mov
aas
lods
movs
xor
xor
cmp
das
cwde
les
fwait
popf
leave
stc
repz
pop
lds
adc
inc
outs
(bad)
jmp
dec
xor
pop
dec
add
sub
sub
mov
pop
xor
pop
hlt
jmp
jno
push
adc
int
mov
int
icebp
aad
dec
js
lea
int
(bad)
fistp
ror
jnp
mov
cmp
pop
xchg
(bad)
(bad)
mov
lods
and
push
xor
and
add
lods
sub
dec
jmp
sub
test
mov
mov
push
or
xor
xchg
data16
pop
inc
mov
jae
outs
xchg
mov
jecxz
imul
adc
aaa
arpl
popa
imul
adc
xor
sub
add
and
call
push
jno
sub
add
or
addr16
les
mov
add
pop
jecxz
les
mov
lock
inc
mov
data16
dec
sar
xor
dec
jp
xchg
sub
sub
ror
mov
mov
mov
or
and
call
jp
jmp
add
jecxz
es
loopne
frstor
sbb
or
sbb
or
push
ficomp
cmp
mov
add
jmp
xchg
stos
dec
scas
cmp
jmp
out
cmc
cmp
xchg
shl
and
nop
jmp
lock
lods
sbb
mov
or
xchg
dec
iret
pop
mov
rol
adc
inc
sbb
add
xor
aad
popa
adc
sbb
mov
jmp
adc
lds
rcr
sub
jnp
sbb
inc
or
cmp
mov
xor
(bad)
push
ret
mov
xor
xchg
pop
das
in
mov
test
xchg
int
jmp
add
sub
or
data16
adc
inc
nop
jmp
adc
es
iret
mov
mov
push
sub
push
test
adc
in
gs
aaa
inc
add
cmp
test
xchg
push
jo
push
inc
aad
das
dec
daa
dec
pop
aas
dec
xor
retw
shl
lds
dec
cwde
push
(bad)
call
dec
or
xchg
stc
jae
jp
sbb
sub
adc
sbb
lahf
push
leave
or
adc
push
xchg
mov
or
push
mov
ja
xor
mov
add
and
sub
in
dec
stos
cwde
out
add
cmp
push
pop
xor
scas
stos
stos
adc
nop
add
outs
add
mov
fisubr
xchg
add
mulps
mov
or
int
inc
fisttp
dec
mov
pop
push
xor
dec
movs
scas
ja
popf
or
fwait
les
int3
pop
inc
xchg
cmp
xchg
pop
jg
pop
movs
jp
in
and
test
jmp
push
outs
push
inc
xor
lds
data16
mov
or
add
js
cmp
and
jne
mov
mov
jnp
fiadd
sbb
mul
cmp
leave
dec
adc
mov
cmps
loope
inc
xor
cmp
stos
dec
dec
bound
mov
pop
inc
pusha
leave
push
push
pop
xor
dec
xor
jne
cmp
int
out
jnp
fwait
xor
jg
(bad)
out
dec
call
lds
xchg
dec
inc
xlat
imul
xchg
add
add
int3
fld
pop
and
dec
cmp
mov
cmps
mov
or
mov
mov
sbb
lea
dec
test
pop
adc
cwde
push
mov
leave
push
cmp
mov
popa
mov
and
adc
ret
stos
add
jne
js
pop
jge
inc
sub
adc
push
icebp
inc
inc
sub
adc
sbb
inc
fisttp
mov
xor
in
add
aad
bound
dec
cmp
ja
push
mov
mov
dec
mov
sti
lods
mov
leave
sub
push
dec
add
mov
ret
or
pop
arpl
sub
lock
lods
es
mov
sbb
sub
mov
out
int
adc
jae
pop
inc
and
push
mov
(bad)
pop
mov
mov
or
or
push
das
or
fwait
adc
iret
pop
mov
or
or
or
push
add
es
inc
int
dec
ins
inc
jmp
arpl
jae
data16
jno
ror
pop
ret
pop
and
adc
leave
and
pop
add
sbb
mov
inc
adc
sti
pop
xor
inc
jns
adc
fisttp
and
adc
ins
fiadd
add
iret
inc
xor
sbb
sub
xor
dec
out
popa
dec
mov
mov
out
and
sar
push
jecxz
sub
xchg
mov
int
movs
mov
dec
cmp
xchg
dec
(bad)
in
add
xor
jge
imul
mov
xor
(bad)
cmp
xor
ins
dec
sbb
test
mov
cmps
jno
cmp
xor
pop
(bad)
sbb
dec
sub
idiv
and
das
adc
adc
cmps
ror
add
test
sub
stc
ror
sub
jmp
jp
pop
(bad)
inc
dec
jmp
push
icebp
retfw
inc
lds
push
adc
pop
xlat
adc
and
aaa
fist
mov
js
dec
rcl
dec
mov
pop
dec
call
inc
mov
sbb
lods
inc
xchg
cmp
fbld
mov
mov
sbb
jecxz
out
xchg
dec
imul
test
inc
adc
or
dec
cmp
inc
imul
mov
pop
in
dec
cwde
xor
(bad)
xor
xor
push
xchg
xor
call
adc
aad
mov
adc
fild
mov
push
xchg
push
fs
add
or
pop
test
push
or
inc
popf
loopne
xchg
sub
dec
push
pop
adc
cmps
inc
lds
sub
xchg
mov
das
xchg
into
data16
test
sub
or
popf
xor
lea
test
retf
out
xor
ins
lea
loopne
pop
cmp
adc
ret
inc
test
lahf
dec
sar
xchg
mov
mov
push
add
aam
cmp
xchg
mov
pop
nop
inc
and
xchg
mov
mov
mov
add
pusha
push
sbb
fwait
popa
test
daa
add
imul
add
and
inc
mov
in
push
or
jecxz
dec
(bad)
movs
sbb
and
and
lock
ror
dec
ins
sti
das
or
jmp
or
xchg
push
mov
imul
rol
xor
xor
test
adc
and
push
cmps
repz
xor
add
js
push
test
js
dec
inc
retf
dec
jmp
add
mov
hlt
sub
in
in
and
movs
mov
arpl
add
or
sbb
out
or
or
call
test
iret
mov
add
pusha
mov
aad
xlat
mov
mov
call
or
cwde
adc
adc
dec
mov
imul
call
test
out
neg
sbb
dec
rcr
push
movs
and
lods
jno
icebp
int3
es
lahf
adc
retf
out
or
addr16
es
inc
(bad)
sbb
arpl
sbb
aaa
aad
push
int3
jmp
adc
inc
mov
and
sbb
ins
aaa
inc
out
add
test
out
inc
rep
rol
adc
stc
jg
mov
(bad)
jge
sbb
mov
cmc
test
adc
js
sbb
push
mov
xor
cmp
cpuid
mov
jg
sbb
shr
xchg
inc
adc
xchg
popa
sti
out
data16
xor
shr
pop
or
adc
test
sbb
cmps
adc
popf
jmp
mov
out
or
pop
arpl
lods
pop
or
push
push
inc
push
mov
push
int3
pusha
rcr
dec
or
icebp
ret
mov
int
push
pop
mov
jne
cdq
test
sub
imul
rcr
xor
add
fisub
xchg
add
add
cmp
pusha
push
xor
aas
sbb
movs
mov
pop
inc
mov
fld
push
adc
dec
fldcw
mov
out
sub
mul
push
push
sbb
sbb
out
adc
dec
and
dec
xor
mov
sub
ror
xchg
push
ror
or
loopne
cmp
aad
pusha
shl
jge
xor
fdiv
mov
xor
outs
xor
xchg
mov
iret
dec
dec
or
jns
scas
sbb
stos
xchg
adc
adc
mov
popf
retf
test
cwde
push
sbb
inc
push
inc
stos
dec
test
iret
out
dec
js
or
inc
aad
(bad)
movs
push
dec
cmp
arpl
xchg
lods
icebp
xor
push
xchg
jnp
cmp
loope
xor
ja
mov
test
(bad)
ins
push
mov
rol
imul
pop
push
shl
stc
inc
xor
xchg
push
cmc
sub
xor
ja
xchg
cmc
xchg
adc
sbb
gs
daa
cmps
or
mov
inc
inc
mov
ror
lahf
cmp
and
inc
les
xor
sub
into
sbb
add
fwait
add
aas
jnp
pop
jne
push
jno
imul
push
mov
or
xchg
iret
sub
arpl
mov
mov
fimul
js
ja
adc
sub
dec
jp
mov
adc
mov
pop
adc
push
xchg
fwait
(bad)
neg
dec
sbb
sbb
lahf
int
les
popa
push
(bad)
dec
nop
stos
mul
das
mov
fidivr
xor
data16
fimul
icebp
mov
push
xchg
jp
xchg
jecxz
outs
jp
(bad)
popa
fstp
or
pop
xor
call
int3
xchg
repz
mov
push
ror
jmp
les
pop
adc
sub
add
in
jo
or
pop
inc
ja
inc
mov
sub
pop
and
push
push
or
gs
dec
ret
ret
test
mov
adc
test
mov
aas
jecxz
adc
mov
dec
sub
adc
inc
cwde
rol
test
fnstcw
or
scas
mov
arpl
inc
sbb
sbb
call
or
jg
(bad)
push
and
fist
xchg
pop
jecxz
aaa
sub
mov
or
aam
inc
(bad)
add
fpatan
and
icebp
xchg
pop
(bad)
lea
fisubr
stc
mov
xor
jnp
jne
or
sbb
pop
xor
jae
sbb
sar
and
xchg
jmp
sub
adc
aaa
pop
fisub
pop
xor
xchg
mov
daa
and
adc
jg
adc
inc
xor
int3
adc
aaa
mov
mov
inc
and
mov
xor
xor
mov
sti
sbb
dec
in
or
pop
mov
push
scas
movs
stos
fnstenv
dec
and
lds
pop
adc
lds
and
mov
dec
add
pop
or
ret
popa
xor
mov
gs
add
test
xor
adc
add
minps
dec
adc
ins
in
cwde
shl
js
cmc
fbstp
jmp
imul
and
pop
add
dec
les
ret
movs
dec
outs
push
pop
lahf
mov
pop
pop
or
outs
mul
jne
popf
jecxz
pop
mov
test
idiv
xchg
jae
imul
or
iret
loop
imul
call
push
add
cmp
or
test
cmc
push
xchg
and
adc
js
pop
icebp
push
mov
fbstp
mov
or
jge
pop
outs
push
sar
data16
and
popf
xchg
mov
(bad)
sbb
or
scas
pop
sub
test
xor
leave
push
xor
sbb
gs
lods
cwde
mov
or
xchg
push
adc
pop
fstp
and
push
or
fimul
push
or
add
sbb
popa
imul
lahf
jmp
pop
xor
sub
mov
gs
xchg
mov
mov
inc
cmp
cwde
add
push
or
icebp
xor
call
call
push
or
das
push
sub
in
adc
pop
ins
jmp
inc
mov
outs
mul
sub
jnp
bound
shl
dec
(bad)
cmp
lods
cmp
dec
mov
cmp
push
dec
inc
add
mov
aaa
imul
stos
push
int
xor
xor
sub
add
or
add
(bad)
ror
mov
icebp
cwde
add
ret
add
inc
xchg
dec
xor
rol
adc
and
jge
jg
xchg
and
cmps
xlat
fstp
or
hlt
add
push
xor
mov
leave
push
fild
push
or
add
add
inc
sbb
push
stos
add
js
fnstsw
adc
retf
(bad)
(bad)
lods
popa
pop
andnps
xchg
test
dec
and
fwait
xor
add
aaa
add
call
repz
push
xor
and
and
lahf
cmps
xor
imul
mov
adc
mov
pop
ins
add
push
xor
pusha
adc
ret
test
adc
movs
out
icebp
(bad)
xor
mov
gs
xlat
fimul
fild
adc
inc
mov
and
jnp
stc
out
dec
push
dec
fsub
cmp
test
bound
xor
popa
dec
add
add
out
je
cmp
or
dec
push
sub
data16
lds
test
mov
jnp
mov
dec
adc
mov
or
xor
repz
lock
dec
sub
in
(bad)
and
inc
call
push
je
lgs
mov
hlt
cwde
and
imul
xor
jne
mov
mov
xchg
mov
call
push
aas
mov
sub
in
jge
inc
mov
pusha
retf
cdq
mov
(bad)
lods
and
wbinvd
xchg
cmp
push
test
adc
sbb
inc
pop
call
mov
in
lds
sub
cmp
jno
cdq
adc
mov
test
sti
pusha
sbb
jno
loopne
mov
scas
daa
popa
push
xchg
loop
mov
adc
rcl
call
add
cmp
aaa
jecxz
sub
and
es
add
sub
scas
mov
xlat
mov
test
loopne
push
inc
cdq
fld
dec
sar
lds
mov
push
xor
or
movs
and
dec
(bad)
lods
int3
push
(bad)
cmp
out
(bad)
sub
shl
daa
lock
add
cwd
out
mov
imul
cmp
dec
xor
push
xchg
bound
daa
cmp
adc
sbb
add
stc
adc
ret
bound
cmc
mov
mov
scas
imul
adc
cwde
aam
repz
jmp
aaa
(bad)
cwde
inc
mov
dec
aaa
(bad)
push
adc
shl
dec
rcr
fild
cmp
fiadd
xchg
jne
out
shr
or
je
push
xor
fst
dec
ret
mov
adc
dec
push
xor
mov
icebp
ficom
mov
sbb
cmp
call
inc
pop
cdq
dec
and
xchg
sbb
dec
std
cdq
mov
fild
mov
movs
mov
cmp
mov
cmp
push
sets
sub
ret
iret
inc
push
mov
push
idiv
push
mov
add
or
cwde
xor
pop
icebp
es
xor
mov
cmps
cmps
aaa
jp
es
mov
scas
std
aaa
icebp
aad
inc
gs
out
pop
inc
xchg
lods
sub
mov
push
xchg
cdq
push
mov
lock
xchg
xor
cmc
xor
jnp
add
popf
xor
push
xor
adc
add
rcr
and
adc
add
mov
mov
or
int3
dec
inc
adc
mov
ja
aas
push
int
and
xchg
imul
jmp
pop
inc
inc
imul
pop
mov
xchg
daa
cmps
pop
fisub
xor
imul
sub
xor
pop
mov
sub
sub
mov
pop
add
stc
mov
add
jno
push
xchg
call
push
sub
setno
mov
stc
scas
dec
mov
sbb
and
outs
adc
add
push
adc
or
or
xor
(bad)
dec
out
sub
shl
xchg
add
pop
mov
push
fnstsw
and
jg
js
pusha
dec
popf
in
pop
pusha
inc
inc
and
inc
lahf
ins
inc
xor
and
shr
sub
push
(bad)
fwait
addr16
adc
stos
neg
cdq
(bad)
test
mov
xor
data16
pop
int
jns
dec
call
jne
pop
aam
or
xor
test
test
and
das
cmp
popa
lea
out
test
mov
mov
xor
xchg
mov
int
lock
cmc
mov
out
iret
out
and
ror
xchg
mov
and
add
outs
fisttp
por
or
inc
in
stc
daa
dec
add
rol
sub
scas
addr16
pop
lds
jecxz
xor
jae
mov
mov
mov
and
sub
lahf
cmc
push
sub
int
aas
ins
jge
movs
pop
pop
fsubrp
outs
inc
lds
scas
(bad)
sub
push
sub
pop
cmp
nop
and
ret
movs
dec
inc
xchg
imul
les
inc
pop
mov
mov
inc
sub
and
adc
push
fild
int3
push
sub
std
fnstsw
lea
test
pop
jge
mov
adc
inc
outs
retf
ror
adc
repz
or
int
or
pop
loope
mov
add
in
add
add
call
int
or
cmps
not
js
mov
cmp
(bad)
pusha
push
hlt
pop
shr
cmps
adc
stos
std
aaa
sbb
rcr
cmps
xor
and
imul
push
jg
popf
sbb
mov
mov
add
test
add
adc
outs
retf
pop
xlat
dec
call
in
sub
push
mov
test
push
dec
call
dec
push
inc
outs
push
xor
jmp
adc
ror
stos
pop
and
or
sti
mov
jnp
call
pop
add
adc
xchg
daa
jecxz
xor
pop
or
cmps
add
mov
mov
cwde
lds
push
(bad)
loopne
mov
test
int3
add
add
loope
dec
add
jne
push
mov
push
imul
and
test
test
cmc
aad
push
vpmaddwd
pop
int
fwait
aad
icebp
imul
xchg
add
sub
sbb
inc
xor
cmp
ror
sbb
or
adc
jnp
push
inc
adc
shl
ror
bound
les
fld
jnp
hlt
inc
(bad)
pop
arpl
add
dec
or
add
mov
pop
getsec
test
test
fwait
cmp
rcl
cmp
jge
dec
xor
aad
push
adc
int
ror
sbb
mov
jmp
mov
or
or
das
or
outs
leave
or
xor
rcr
push
add
xor
int
push
or
mov
sar
rol
and
dec
xchg
push
shl
inc
mov
int3
fisub
shl
jno
mov
stc
ins
add
mov
sti
int3
jp
pusha
(bad)
fstsw
xchg
(bad)
(bad)
sub
mov
mov
mov
arpl
xchg
xor
es
call
popa
or
adc
push
push
add
and
sbb
jge
shr
shl
add
call
mov
push
xchg
call
adc
stos
sbb
addr16
js
xchg
mov
and
jmp
iret
xor
ror
add
pop
jecxz
and
mov
sub
or
iret
jmp
and
je
adc
push
push
dec
sbb
and
pop
mov
jnp
lds
mov
or
adc
icebp
xor
hlt
js
cmp
mov
push
sbb
inc
adc
test
xchg
or
jno
or
push
xchg
add
movs
(bad)
mov
aas
mov
xor
xchg
jmp
push
xchg
mov
sbb
adc
add
push
dec
scas
sbb
mov
xor
inc
pop
repz
ja
pop
xlat
in
cwde
xor
aam
pop
mov
jns
and
xor
lahf
dec
push
(bad)
es
call
sub
sbb
outs
sub
jmp
mov
inc
mov
push
test
and
or
stc
test
in
outs
aaa
popa
pusha
dec
int
cmps
jno
push
pop
xor
mov
loope
dec
xchg
aas
in
mov
xor
js
or
iret
jmp
add
shr
jmp
aaa
mov
outs
push
mov
and
jp
or
or
jg
or
xchg
or
jecxz
js
int
and
mov
lock
outs
arpl
and
xchg
mov
pop
adc
(bad)
jmp
jnp
add
lock
sbb
or
jns
arpl
jecxz
jg
outs
sub
ffreep
bound
cwde
adc
adc
push
xor
lds
add
gs
mov
dec
push
xchg
icebp
xchg
xchg
inc
dec
or
cmp
cmc
mov
popa
mov
add
inc
pusha
inc
mov
stc
and
push
xor
fimul
and
xlat
test
ret
lds
pop
out
lock
pop
cmp
mov
arpl
inc
shr
add
mov
pop
jge
call
pusha
adc
push
int3
jg
mov
xor
shl
xor
sbb
jmp
add
sbb
add
int
and
sbb
sar
test
xor
adc
call
pop
push
mov
jmp
fild
add
popf
(bad)
popf
mov
movs
call
xchg
add
lahf
aaa
mov
add
aas
addr16
mov
movs
lods
shr
dec
(bad)
jnp
xlat
mov
and
sub
bound
leave
mov
dec
call
lods
mov
lods
adc
jmp
jg
jmp
push
mov
rcr
fstp
dec
call
es
mov
inc
xor
imul
adc
aaa
mov
push
mov
cmp
xchg
aam
jne
out
sbb
stc
stos
aad
sub
pop
mov
sar
loopne
mov
xchg
mov
mov
cmp
or
jnp
sub
mul
stos
fld
xchg
xor
lahf
pop
xchg
mov
fstp
xor
cmc
imul
sar
jnp
inc
pushf
dec
mov
and
pop
lds
jnp
call
add
sbb
leave
movs
addr16
adc
push
inc
arpl
jae
cwde
cmc
es
fisttp
sbb
pop
xor
pop
daa
inc
sahf
ficom
pop
aam
pop
mov
mov
dec
cmps
movhps
sbb
(bad)
jge
or
push
add
fidivr
xchg
in
dec
gs
xor
add
test
pop
lds
or
xor
(bad)
push
sub
sti
outs
test
or
daa
(bad)
adc
pop
jmp
fisub
aad
dec
arpl
xor
inc
std
jg
mov
daa
cmps
inc
adc
push
push
addr16
pop
lock
pop
ins
xor
push
(bad)
hlt
mov
add
mov
or
cmps
adc
and
mov
test
pop
shl
push
push
scas
dec
shl
jg
(bad)
rcl
mov
dec
ret
test
dec
xor
int3
call
xor
dec
adc
pop
and
mov
or
rcr
fwait
les
pop
push
add
sub
mov
leave
add
mov
iret
popa
push
xor
aaa
add
fwait
add
ins
push
nop
pop
aad
sbb
stos
dec
xchg
iret
cmp
jecxz
lds
pop
in
ret
stos
dec
mov
or
sub
sub
inc
nop
scas
push
sub
xor
imul
test
and
push
test
imul
sbb
ret
push
int
ret
bound
sub
xchg
or
add
mov
adc
jg
fisub
cmp
and
or
add
lods
mul
mov
push
inc
mov
ret
and
ins
pop
or
xor
out
xor
xlat
cmps
popa
test
ror
sbb
ins
inc
mov
aaa
imul
pop
mov
inc
sbb
mov
push
xor
test
pusha
cmp
dec
jg
add
mov
lahf
jmp
test
icebp
ja
inc
mov
adc
sub
xchg
aam
cdq
xchg
int
pusha
cmp
push
add
mov
or
out
pop
push
xchg
ficom
inc
int3
pop
pop
repz
mov
and
cmovnp
shl
or
frstor
in
lods
gs
jge
or
icebp
fiadd
shl
les
jae
adc
mov
or
bound
(bad)
adc
push
push
addr16
add
add
mov
xor
add
jns
mul
xor
and
rcl
jmp
nop
dec
mov
out
stc
jnp
mov
add
repz
or
push
lea
call
xor
arpl
js
stos
jnp
imul
cwde
add
inc
mov
inc
sti
out
jnp
out
iret
ins
retf
xlat
or
pop
xor
push
mov
add
outs
pop
(bad)
dec
jne
or
test
adc
lods
aaa
out
sub
and
shl
fld
mov
sub
out
nop
jecxz
mov
adc
dec
scas
(bad)
mov
pop
jns
sar
test
dec
hlt
call
mov
mov
pusha
test
or
push
sub
ret
xchg
icebp
iret
movs
jp
sub
fisttp
mov
inc
dec
xchg
(bad)
sti
lds
push
adc
jp
push
and
pop
mov
(bad)
xor
inc
and
xchg
or
dec
(bad)
retf
mov
aaa
in
xchg
das
cmp
fimul
daa
or
xchg
sar
xchg
cwde
xor
fwait
ror
push
adc
xor
fimul
dec
lock
adc
xchg
cmps
pop
daa
shl
stos
daa
adc
push
adc
adc
mov
add
sub
add
mov
mov
or
sub
(bad)
and
adc
leave
fwait
pop
inc
mov
pusha
dec
add
pop
inc
cmps
popf
mov
call
xchg
inc
call
outs
sbb
ficom
xor
or
xor
call
mov
mov
cmps
mov
pop
add
adc
rol
mov
mov
xor
int
dec
out
xor
inc
dec
scas
dec
pop
call
adc
mov
adc
gs
daa
adc
cmp
aaa
popa
(bad)
push
popf
xor
aas
pop
ja
adc
push
add
mov
dec
ja
xchg
in
xor
cwde
xor
xor
outs
aad
dec
and
hlt
jp
mov
mov
jmp
add
in
dec
cdq
inc
mov
mov
push
add
adc
xor
vmread
or
pop
jge
ret
dec
push
adc
std
push
xchg
stos
mov
leave
shl
lds
or
push
cmp
test
adc
and
mov
fldenv
dec
jp
aaa
popf
(bad)
sbb
pop
ror
mov
push
(bad)
imul
mov
mov
dec
lds
in
adc
cwde
xor
repnz
dec
stos
and
ret
push
jg
and
mov
mov
call
das
push
mov
outs
adc
sar
inc
mov
dec
sbb
cwde
xor
cwde
and
or
pop
dec
jp
sub
popa
leave
and
push
int
sub
leavew
rol
pop
mov
addr16
xor
sti
and
sub
xchg
xchg
cmp
xchg
sub
int
inc
or
icebp
addr16
iret
arpl
sti
sbb
test
imul
cwde
int
jge
adc
loope
and
cmp
dec
inc
inc
mov
test
in
sbb
mov
leave
mov
jnp
call
and
aam
cdq
stos
cmp
add
stos
add
rol
sbb
popa
push
cmp
shl
imul
sub
and
(bad)
out
aas
fisubr
int
inc
cmps
cmp
mov
ret
pop
cmp
pop
out
mov
jno
xchg
mov
or
xor
ja
mov
pop
inc
jns
push
cmc
mov
shl
add
imul
ror
int
xor
rol
ret
lods
scas
mov
xlat
popa
popa
mov
dec
xor
push
push
int
push
mov
xchg
movs
jmp
leave
pop
mov
neg
icebp
dec
dec
adc
ret
mov
data16
ret
in
icebp
xor
mov
mov
dec
or
retf
(bad)
popa
and
jno
pop
add
xorps
cmps
pop
xor
push
inc
test
adc
xchg
mov
inc
and
dec
pusha
or
sbb
add
mov
or
test
dec
jge
outs
(bad)
in
mov
neg
pop
dec
scas
pop
xlat
loopne
aaa
sub
add
les
das
xchg
mov
loope
jp
or
mov
inc
pop
xchg
push
inc
adc
test
scas
stc
movs
xor
push
mov
dec
iret
cwde
push
mov
outs
adc
and
push
cmp
test
inc
int3
call
and
mov
lds
or
imul
dec
jmp
sti
xchg
les
dec
stos
pusha
push
xor
sbb
loop
mov
ret
cwde
shl
inc
adc
xchg
jmp
inc
aad
and
xor
mov
adc
cmp
int
fidiv
outs
jmp
dec
mov
lds
lds
xchg
lea
movs
lods
call
retf
sub
cmps
adc
xor
leave
icebp
mov
jnp
popa
imul
mov
pusha
and
mov
dec
pop
pop
(bad)
aaa
jnp
cwde
xchg
aaa
das
jecxz
adc
push
mov
icebp
push
int
daa
and
out
xor
and
ins
jne
sub
hlt
xchg
push
sbb
mov
rcr
gs
inc
or
add
jp
call
pop
mov
add
add
inc
adc
jge
les
push
xor
jnp
(bad)
loope
push
xchg
mov
xor
cmp
mov
ret
test
jo
mov
icebp
mov
jae
inc
sub
gs
xor
dec
jp
dec
push
xlat
sbb
sti
outs
popf
inc
mov
inc
cmp
push
cdq
(bad)
xor
aaa
mov
mov
xchg
movs
sbb
test
xchg
leave
out
push
hlt
pop
nop
inc
push
and
sbb
mov
fisubr
rcr
data16
int
lahf
xor
push
push
and
out
adc
push
out
popf
mov
test
ja
pop
hlt
and
ins
push
ret
sub
xor
std
push
xchg
popa
ror
xor
mov
frstor
add
call
fwait
adc
dec
mov
bndstx
xor
sbb
push
add
add
xor
inc
adc
lds
xchg
(bad)
or
or
or
(bad)
lods
sbb
adc
stos
pop
lods
cwde
pop
stos
pop
stos
cmp
adc
mov
test
(bad)
stc
aad
jo
sbb
shr
cmp
cwde
cdq
daa
lds
(bad)
fsubr
add
jnp
sub
mov
mov
jne
aad
adc
dec
and
pop
mov
popf
jno
adc
cmc
xchg
inc
fldcw
add
mov
sbb
sub
mov
jbe
push
sbb
sub
xor
and
pmaddwd
mov
repz
shr
add
call
mov
sub
push
out
icebp
call
mov
xor
sbb
add
push
xchg
lahf
adc
jp
sbb
data16
lahf
loope
data16
pop
(bad)
mov
adc
inc
test
pop
scas
push
mov
int
out
and
xchg
inc
mov
mov
icebp
adc
jge
mov
das
out
or
popa
push
stc
or
call
mov
out
and
xor
sub
js
or
inc
push
int3
stos
inc
jmp
rcr
sub
cmps
fldenv
fwait
cmp
adc
push
jg
pop
xchg
sub
daa
les
fild
dec
cmp
xchg
xor
pusha
ret
push
call
adc
test
mov
fiadd
dec
push
movs
call
or
push
sub
mov
jns
mov
lahf
adc
loope
mov
or
int
and
popf
sti
jecxz
and
mov
pop
data16
push
aas
imul
in
retf
(bad)
mov
movs
or
sbb
aam
test
(bad)
fnstsw
add
cmp
add
or
inc
xor
inc
dec
jge
aas
les
fisubr
daa
xchg
stos
mov
jae
(bad)
(bad)
mov
cwde
mov
cmp
dec
inc
or
pop
xchg
cmps
(bad)
xchg
xchg
add
or
adc
add
pop
imul
cmc
js
sub
dec
mov
jp
call
and
sbb
shl
pop
cmp
inc
lds
retf
inc
ins
fwait
xor
mov
xchg
cmps
aaa
arpl
jno
icebp
lods
inc
mov
js
cmp
loopne
mov
mov
stos
loop
mov
inc
and
mov
popa
(bad)
jnp
pop
or
ret
jg
pusha
aad
and
out
xor
xor
jo
push
jae
mov
inc
int3
mov
and
and
call
lds
mov
and
sbb
outs
add
shl
inc
adc
or
inc
jae
mov
mov
mov
jno
sbb
xchg
pop
outs
pop
xchg
sub
ja
sub
push
xchg
dec
xchg
xor
call
dec
push
lds
push
adc
sar
and
jae
dec
loopne
jecxz
aas
mov
dec
jp
mov
lods
ret
out
mov
sub
xchg
pop
fcmovnbe
in
mov
and
sbb
mov
xlat
jmp
ss
fs
mov
mov
inc
or
int
jns
push
push
xor
das
or
movs
xchg
push
mov
and
aad
sub
cwde
icebp
popw
xor
push
les
jae
mov
daa
push
jnp
cmp
aam
ss
popf
leave
xor
sub
dec
inc
pop
inc
mov
add
or
mov
xor
fimul
or
and
aad
adc
das
inc
ja
mov
test
pop
xchg
leave
or
or
pop
out
stos
inc
mov
xchg
pop
adc
jecxz
dec
mov
popa
(bad)
sub
iret
dec
or
rcl
push
(bad)
idiv
push
pop
jg
(bad)
jmp
mov
rol
dec
cld
sub
stos
aas
and
shr
imul
add
and
loop
mov
shl
xchg
jecxz
and
popa
push
sbb
jp
xor
adc
leave
inc
and
and
cwde
lds
pop
aaa
pop
ins
(bad)
lods
lds
gs
cmps
inc
sbb
xchg
sbb
xchg
(bad)
sub
or
daa
mov
mov
jecxz
stos
xchg
xchg
inc
add
mov
icebp
aad
push
and
stos
aaa
imul
cmps
adc
frstor
pop
inc
sar
push
test
cmps
sbb
dec
jo
das
gs
mov
inc
sbb
popa
rol
push
xor
stc
das
fwait
aam
push
(bad)
or
lds
pusha
ret
or
mov
add
mov
int3
es
int3
aad
sbb
add
fld
mov
aam
inc
add
push
outs
stos
cmp
ins
cmp
fwait
jne
push
fwait
daa
jno
adc
cmp
and
or
adc
push
imul
addr16
inc
xor
adc
mov
scas
adc
movs
outs
das
aaa
or
mov
int
xchg
inc
jmp
call
push
lock
rcl
cmc
adc
fs
out
(bad)
int3
data16
mov
bound
mov
pop
cmps
add
xchg
jnp
or
sub
fstp
xchg
xor
sbb
or
imul
pop
or
mov
inc
mov
shr
inc
cwde
int
adc
push
int
stc
movs
lock
push
aad
add
cwde
xor
push
and
add
jmp
mov
mov
aam
fild
or
dec
or
jns
sbb
pop
and
retf
dec
imul
fild
cmp
push
lds
arpl
mov
push
movs
std
or
lahf
xor
add
call
add
dec
xor
add
xlat
mov
leavew
outs
mov
lds
xor
int
mov
mov
or
stos
or
sbb
movs
inc
mov
mov
std
sahf
adc
inc
outs
xlat
push
cmp
or
dec
xor
mov
jo
xor
arpl
repnz
mov
adc
lods
mov
loop
jp
lahf
sbb
xchg
pusha
ss
movs
aaa
dec
call
leave
loopne
rcl
mov
mov
push
xor
sbb
inc
add
out
adc
xor
ret
push
das
jno
adc
cmp
and
xor
in
test
dec
pop
ins
and
add
and
add
call
mov
in
lock
xor
jg
mov
adc
lea
sar
ficomp
inc
pop
and
mul
sub
dec
pop
sti
adc
or
sbb
push
sub
adc
aas
outs
shr
xchg
lods
arpl
ror
shl
or
movs
daa
dec
pusha
add
ret
push
jmp
ret
add
es
fnstsw
add
int3
xchg
adc
fwait
lods
add
pusha
mov
or
retf
popa
pop
int3
adc
sub
movs
ror
sub
jl
pop
lahf
ret
imul
rcl
stos
adc
bound
scas
ja
ja
enter
xor
out
fwait
inc
mov
mov
or
les
inc
outs
adc
lock
(bad)
iret
aad
add
js
icebp
lds
dec
sub
sbb
push
xor
xchg
push
sbb
js
sub
test
mov
dec
mov
mov
mov
bound
pop
jmp
xor
mov
or
jmp
fwait
mov
psubusw
sub
lods
sbb
add
or
xor
int
arpl
icebp
leave
adc
imul
ins
dec
and
push
mov
call
fwait
xor
sbb
push
push
cwde
cmp
fwait
adc
stc
xchg
aas
sub
cmc
fidivr
call
xchg
hlt
addr16
ss
adc
sub
xor
or
les
int3
pop
not
or
fs
int
int
inc
out
daa
outs
or
jmp
dec
mov
push
outs
ret
mov
mov
mov
das
xchg
mov
cmps
fstp
xlat
loope
jecxz
imul
and
xor
(bad)
or
add
pop
jno
push
hlt
sbb
je
adc
das
mov
pop
add
xor
xchg
add
movs
sbb
dec
xor
daa
mov
lods
mov
dec
inc
xchg
push
lods
dec
jnp
and
nop
inc
mov
call
mov
xchg
data16
sub
out
and
and
test
mov
and
lods
icebp
xor
call
jge
mov
addr16
movs
es
cmp
aaa
and
ret
xchg
sbb
adc
add
xor
xchg
and
cmp
sbb
ret
pop
test
and
xchg
fistp
jne
xchg
sub
mov
dec
sbb
sub
push
adc
(bad)
jmp
xchg
cmp
mov
aaa
ins
shr
adc
retf
or
iret
and
cwde
jnp
neg
push
call
das
js
call
aad
mov
sbb
mov
sub
ror
fiadd
outs
add
sbb
sub
fisubr
popf
xor
add
sub
ja
int
jmp
push
jns
je
ins
inc
jb
outs
jb
add
mov
dec
outs
out
add
and
fisttp
dec
adc
lds
add
call
push
dec
(bad)
call
pusha
adc
sbb
mov
mov
xchg
inc
adc
lods
push
push
mov
pushf
stc
lods
dec
sbb
or
adc
dec
add
pop
out
int
cmp
retf
addr16
dec
dec
jp
push
in
lds
cmp
mov
pop
or
int
xor
cmps
aaa
sbb
stc
push
xor
shl
popa
mov
(bad)
outs
inc
das
push
sub
inc
xchg
popa
xor
or
lea
mov
sbb
mov
movs
fwait
aad
cwde
in
aas
loope
cmp
xor
adc
shl
inc
xor
adc
mov
inc
xchg
in
sbb
cmp
rcr
sub
mov
leave
call
pop
mov
(bad)
xchg
fisub
mov
adc
lods
and
and
rcr
lahf
out
aaa
mov
rcr
imul
mov
adc
push
xchg
mov
sub
ror
dec
cmp
arpl
push
pop
pop
cmc
push
mov
rcl
sub
add
(bad)
das
mov
ins
or
push
inc
jae
int3
xchg
ins
or
push
mov
in
xor
pop
movs
popa
aad
jp
adc
add
icebp
mov
push
aad
jg
call
gs
dec
addr16
popa
nop
mov
add
test
or
or
xchg
jae
adc
ret
cmp
push
iret
xchg
cmp
mov
dec
dec
lds
lea
adc
sbb
adc
stos
out
xor
xchg
je
adc
lds
leave
retf
and
push
repz
or
mov
cwde
xor
aas
add
dec
pop
inc
int
inc
mov
adc
cwde
rol
push
outs
jbe
adc
sbb
inc
dec
movs
shl
mov
dec
cmp
add
shr
cmp
xchg
popa
jmp
cwde
popf
xor
out
cmp
inc
xchg
sar
sub
pop
inc
stos
cmp
add
or
pop
inc
lahf
xchg
movs
mov
adc
cmp
add
(bad)
ins
sub
sbb
sbb
xor
pop
imul
sub
sub
sbb
scas
or
movs
push
or
pop
cmp
add
bound
nop
or
sbb
pop
mov
lea
xlat
shl
sub
sbb
push
scas
not
mov
add
add
add
inc
les
fidivr
adc
or
mov
movs
sbb
retf
jae
mov
mov
pop
and
icebp
and
xor
lods
push
mov
push
cwde
rcr
dec
js
dec
pop
jge
mov
dec
push
fld
retf
cmps
inc
mov
xor
jmp
sub
int
jge
inc
pop
add
xchg
mov
and
or
inc
cli
fs
adc
push
gs
data16
les
pop
lods
and
ror
in
xlat
popf
or
xchg
pop
imul
inc
mov
or
int
mov
and
and
test
iret
lods
js
push
mov
push
or
stos
xchg
pusha
popa
aaa
shl
mov
push
add
ja
outs
push
and
add
shr
inc
add
xchg
jnp
sbb
arpl
inc
and
sub
xor
ror
movs
ja
xor
add
or
adc
pusha
addr16
pop
jae
fldenv
or
jmp
std
cmp
test
pop
ret
mov
add
pop
mov
xor
xor
mov
add
and
pop
sub
stos
ins
push
jae
mov
daa
iret
xchg
jo
icebp
push
adc
lods
add
push
or
xchg
jecxz
adc
adc
xor
pusha
gs
push
fs
xor
xor
inc
test
inc
dec
mov
pop
xor
or
pop
popa
push
rcl
mov
nop
or
adc
xor
jmp
push
aad
jno
test
test
inc
xchg
call
inc
and
mov
sbb
and
and
aas
inc
jb
dec
outs
arpl
or
punpckldq
cmp
xor
ficom
cmp
push
popa
addr16
sbb
add
(bad)
in
add
dec
jp
and
pop
shl
outs
xchg
xor
xchg
adc
les
call
icebp
xor
dec
outs
pop
(bad)
call
aas
inc
adc
cmc
pop
sub
inc
in
aad
das
pop
mov
mov
out
xor
mov
fwait
jnp
or
add
mov
xor
mov
add
js
cdq
outs
inc
mov
outs
push
xor
dec
jg
ins
rcl
rol
and
pop
in
mov
sub
and
or
call
xor
adc
dec
lods
adc
or
enter
outs
ret
popa
mov
mov
dec
dec
mov
dec
or
dec
cmp
mov
sub
cmps
or
adc
cmc
pop
dec
push
cmp
pop
repnz
test
mov
add
dec
test
imul
add
or
and
in
xor
rcl
pop
and
xchg
std
xor
sub
jmp
dec
add
add
mov
sbb
mov
push
sub
and
retf
dec
movs
add
mov
jns
add
rol
add
or
or
xor
cmp
fwait
add
sbb
push
or
sub
push
lahf
add
imul
test
and
pop
mov
mov
test
jl
or
xor
jmp
xchg
fwait
xchg
inc
cmp
leave
pop
pop
and
and
rol
xor
sub
fs
inc
pop
inc
mov
push
push
or
cmp
add
xchg
xor
jle
adc
pop
gs
jne
jb
jae
lss
shl
xchg
imul
inc
shl
xor
sub
xor
gs
int
dec
stos
xlat
ins
sub
push
fstp
pop
das
pop
or
fbstp
sbb
in
dec
mov
pop
add
push
and
stos
movs
or
arpl
cmp
or
adc
mov
sbb
repz
nop
test
aam
jne
mov
adc
rol
sub
aaa
mov
(bad)
xchg
imul
leave
cmp
mov
add
lods
(bad)
jno
add
movs
mov
xor
ret
ins
arpl
mov
das
in
mov
aas
test
enter
inc
push
xor
cwde
ret
inc
sub
xchg
mov
aaa
jmp
cmp
arpl
and
dec
push
dec
push
hlt
add
stc
add
ins
(bad)
jmp
push
mov
inc
pop
and
inc
push
repz
rol
movs
pop
add
mov
push
aam
stos
jns
jmp
fiadd
popf
xor
les
test
daa
retf
mov
movs
popa
fisttp
pop
mov
pop
sbb
pop
dec
test
arpl
xor
push
cmps
mov
mov
xchg
pop
cmp
test
push
ror
inc
pop
ja
ins
jb
ret
repz
js
push
jnp
outs
ins
(bad)
shl
adc
ret
xor
loopne
inc
xchg
cwde
adc
cmp
jmp
arpl
stos
stc
cmp
sub
push
int
jae
inc
sub
mov
mov
and
mov
or
(bad)
movs
mov
lods
push
push
fbstp
stos
and
sbb
push
xchg
mov
movs
and
cmp
push
aad
xchg
jno
in
xor
dec
xor
push
add
sub
call
inc
push
and
inc
adc
daa
push
std
or
not
outs
jne
fs
sub
ja
xor
or
int
js
xchg
add
cmc
icebp
ret
and
and
outs
adc
iret
daa
lods
jp
or
imul
imul
adc
or
push
inc
mov
add
sar
mov
int
xor
loopne
add
daa
or
mov
sub
rol
imul
and
dec
add
dec
sbb
mov
adc
jnp
dec
cmp
popa
popa
jmp
or
ins
cmovge
and
push
adc
aas
mov
or
dec
mov
addr16
pusha
inc
stos
and
test
das
jmp
sbb
push
or
cwde
dec
stos
pop
pop
pop
and
inc
or
les
sbb
jae
test
dec
js
dec
jne
das
test
cmps
xlat
(bad)
xchg
adc
xlat
dec
call
pop
fdivr
mov
xchg
or
(bad)
pop
jmp
mov
add
mov
ins
xor
mov
push
dec
mov
add
dec
or
push
xlat
lock
jmp
dec
pusha
or
adc
or
movs
mov
leave
into
inc
pop
xor
add
pop
call
sbb
xor
pushf
jo
jmp
mov
aas
inc
jo
and
push
movs
push
pop
mov
inc
leave
ins
mov
(bad)
mov
imul
scas
xchg
xor
in
movs
fldcw
ret
stos
sti
pop
mov
ret
cmp
and
lahf
aam
jae
add
add
cmp
mov
add
ret
movs
inc
iret
out
or
fwait
xchg
adc
inc
jp
stos
rol
push
not
aaa
lods
xor
dec
push
ret
xor
jnp
xchg
mov
adc
add
leave
popa
ins
add
push
xchg
out
jne
sbb
xor
dec
test
xchg
adc
sub
es
and
int
mov
retf
leave
cmps
inc
mov
sub
sbb
test
sbb
add
bound
cmp
dec
inc
adc
test
hlt
(bad)
inc
add
rol
and
add
frstor
je
jmp
push
je
out
adc
ror
mov
mov
gs
std
and
xor
mov
(bad)
mov
les
gs
xchg
in
xchg
and
test
inc
push
adc
pop
adc
and
int
and
mov
or
dec
icebp
pop
dec
xchg
add
push
outs
dec
inc
dec
xor
adc
sub
jmp
dec
jmp
mov
xor
mov
retf
and
sub
inc
cli
pop
outs
ins
bound
pop
inc
fs
rol
retf
gs
pop
and
loop
and
adc
and
jno
loop
xor
repnz
push
in
mov
mov
or
pop
mov
stc
shufps
pop
inc
xor
dec
cmc
xor
xchg
push
aam
cmp
ss
gs
pop
retf
xor
sub
push
lods
sbb
mov
test
mov
data16
mov
jns
adc
mov
and
stos
(bad)
popa
dec
dec
idiv
dec
push
rcl
fild
sbb
xchg
mov
icebp
sbb
aad
cmp
add
(bad)
aaa
jnp
test
jns
stos
adc
mov
mov
retf
jge
xchg
xchg
ja
add
jno
jbe
cmp
mov
xchg
mov
cmp
add
jg
stc
(bad)
rol
movs
stos
pop
add
(bad)
cmp
add
and
jno
or
sub
jno
xchg
sbb
pusha
fld
test
shl
pop
pop
or
add
repz
jmp
push
push
inc
push
dec
xor
adc
inc
out
add
inc
fwait
arpl
outs
inc
popa
or
(bad)
(bad)
(bad)
pop
mov
xor
jmp
push
les
and
sub
(bad)
popa
ret
es
xchg
cmp
shl
dec
inc
mov
xchg
jge
movs
scas
test
bound
or
push
popa
lea
loop
mov
and
movs
sbb
lock
pop
stc
ins
(bad)
and
adc
test
dec
enter
aaa
adc
or
push
jmp
lock
ins
add
jg
sbb
icebp
sub
push
dec
loopne
mov
mov
sub
jns
inc
jo
lds
out
adc
sub
adc
sub
test
or
outs
sbb
leave
ror
mov
test
xchg
(bad)
stc
push
shl
jge
mov
xchg
or
sbb
sti
in
and
inc
xchg
das
push
xor
jge
jno
fcom
mov
ret
xor
push
xchg
lds
mov
pushf
mov
imul
xchg
add
add
inc
js
popa
gs
scas
mov
inc
push
mov
(bad)
fnstenv
mov
and
inc
pop
mov
add
mov
inc
das
and
adc
mov
inc
pop
mov
test
jecxz
test
rcr
pop
in
ror
cmp
movs
xchg
std
mov
and
daa
sub
repz
stos
nop
pushf
adc
cmps
sbb
sub
add
dec
loopne
shr
add
xor
and
sbb
cdq
adc
sub
push
out
sbb
lea
inc
mov
xor
aad
mov
sub
mov
push
sub
push
pop
mov
mov
push
or
ret
push
mov
and
and
ret
pop
cmc
arpl
or
xor
lds
and
sti
ret
mov
push
and
mov
xlat
dec
in
js
popa
std
cmp
cmps
add
mov
jecxz
mov
mov
mov
sub
inc
ja
stos
inc
lds
push
sub
or
xchg
mov
shr
sub
pop
or
push
ret
dec
test
xor
fcom
push
sbb
dec
fwait
sbb
mov
add
mov
aaa
or
ins
sbb
or
in
out
dec
inc
push
sub
xor
or
pop
and
push
sub
sti
popa
xlat
mov
jmp
xor
and
inc
inc
mov
dec
push
test
xlat
or
xchg
popf
push
stos
and
or
xor
adc
adc
lds
xor
mov
or
mov
add
dec
daa
icebp
dec
(bad)
xchg
popa
cmc
xor
fld
and
adc
fnsave
lods
cmps
jns
mov
add
and
jno
xchg
ror
jmp
jne
je
push
bound
movs
mov
dec
pop
and
add
and
add
ja
or
bound
xchg
dec
cmc
movs
movs
mov
fild
push
add
enter
dec
iret
mov
xor
inc
test
aad
or
add
sbb
adc
pop
pop
rol
mov
inc
int
pop
cdq
xchg
dec
out
nop
or
fist
adc
int
xchg
rol
in
adc
test
dec
mov
movs
cmps
mov
lds
add
inc
(bad)
loopne
mov
xchg
out
popa
or
mov
popa
fstp
ret
int
and
add
adc
jge
nop
movs
or
dec
mov
or
lods
out
mov
xchg
ja
xchg
mov
inc
and
ins
pusha
xchg
outs
inc
inc
xchg
and
ins
inc
dec
sub
sub
jmp
add
xchg
inc
cmp
pop
adc
inc
adc
mov
(bad)
nop
sub
add
push
pop
inc
nop/reserved
ror
xchg
mov
push
(bad)
adc
or
pusha
pusha
(bad)
fnstenv
das
xor
(bad)
pusha
add
ret
push
inc
gs
xor
push
sub
add
push
gs
add
es
xchg
aad
shl
xchg
jnp
enter
push
inc
es
ret
cmps
push
pop
xor
or
sub
inc
mov
or
sub
push
pop
fst
mov
cmps
or
test
sbb
test
mov
and
xchg
or
adc
jecxz
add
sbb
or
pop
mov
mov
test
or
mov
ror
ins
push
adc
sub
xor
and
and
xchg
aas
sub
and
rol
rol
and
dec
adc
aas
add
inc
ss
cdq
adc
inc
test
add
xchg
ss
push
ins
fldcw
(bad)
lea
mov
test
or
sbb
mov
stc
dec
sub
test
ins
pusha
mov
aas
fldcw
pop
mov
add
sub
retf
ins
inc
add
xor
push
sub
es
(bad)
inc
mov
popa
movs
xlat
jno
pop
or
aas
inc
cmp
int
fwait
jg
or
nop
sub
inc
popa
jg
jg
pop
fld
add
sub
ja
imul
sbb
xchg
mov
pop
jmp
and
sbb
(bad)
jmp
stos
push
inc
dec
bound
stos
jle
adc
ja
jnp
mov
icebp
jo
xchg
out
and
sub
pop
or
mov
inc
pusha
and
pop
and
nop
cdq
add
push
fcmovne
inc
add
jns
fld
sub
mov
pop
add
pop
pop
push
gs
test
ins
dec
pop
push
inc
sbb
and
lar
add
int3
xor
or
push
sbb
inc
sahf
in
add
add
cmps
add
ds
or
pop
mov
sbb
inc
and
xor
retf
cmps
ret
(bad)
or
das
fbstp
inc
sbb
std
sti
jle
add
addr16
or
add
fcmovu
popa
adc
or
cmp
mov
iret
push
push
cmp
add
xor
addr16
sbb
or
cmp
fldlg2
sbb
adc
and
cmp
add
pop
and
or
push
enter
ss
add
push
add
xor
add
pusha
adc
add
mov
add
imul
lock
add
sbb
or
dec
pop
and
and
(bad)
fdiv
leave
and
les
xor
fisttp
and
mov
jp
adc
add
fwait
xchg
pop
push
addr16
push
and
call
mul
pop
nop
out
in
xor
movzx
pop
mov
nop
fisttp
dec
push
sbb
add
(bad)
daa
xchg
retf
pop
cs
mov
cmp
xchg
sbb
add
rol
add
or
add
jnp
out
jge
inc
push
inc
adc
fld
add
mov
int
add
(bad)
mov
add
sti
jnp
sbb
paddw
jle
push
(bad)
push
jnp
pop
dec
clc
pop
or
fwait
popf
mov
and
jg
call
mov
adc
sbb
pop
sbb
lods
int3
push
int3
mov
mov
pop
add
sar
lods
fadd
loopne
aaa
mov
daa
mov
sbb
mov
movs
or
lock
jbe
jns
call
mov
(bad)
fcmovnu
loopne
out
mov
jge
or
gs
mov
mov
xchg
fcmovnu
scas
dec
add
xchg
mov
pushf
(bad)
vmwrite
in
add
mov
mov
sub
mov
mov
cmp
fiadd
push
mov
std
or
stos
cmp
movs
add
pop
pop
idiv
inc
or
and
leave
inc
add
fdivr
adc
add
jnp
and
adc
adc
bndstx
add
sub
and
push
xor
std
jbe
or
adc
adc
add
jns
xor
(bad)
adc
add
add
popf
(bad)
fild
unpcklps
(bad)
or
add
arpl
in
jmp
add
add
lahf
sbb
add
sbb
pop
(bad)
call
out
dec
add
ror
inc
add
data16
outs
push
pop
pop
xchg
outs
push
push
cmp
dec
jge
lock
mov
sub
aaa
push
ret
sar
inc
nop
inc
repnz
add
push
(bad)
add
mov
inc
jle
adc
xor
movzx
sbb
(bad)
add
xchg
adc
or
mov
das
in
xor
pop
sbb
(bad)
inc
movd
xor
dec
or
aas
(bad)
mov
sbb
pop
out
sti
sbb
arpl
pop
mov
imul
pop
sub
nop
xchg
shl
push
and
add
test
push
jae
add
add
add
fdivr
mov
jmp
mov
inc
jae
pop
and
bound
add
imul
imul
mov
mov
xchg
lods
pop
imul
sti
addr16
into
add
test
(bad)
(bad)
out
test
xchg
fsubrp
pop
pop
ja
imul
jg
adc
dec
retf
into
jne
pop
dec
pop
xlat
or
and
aaa
daa
repnz
mov
mov
and
mov
jge
xchg
fcmovne
das
arpl
imul
fcom
sahf
into
xchg
mov
xchg
mov
mov
stos
add
out
sub
add
xchg
mov
outs
aaa
xor
retf
out
(bad)
fs
add
lahf
or
xor
mov
lods
fwait
mov
sti
retf
jmp
mov
imul
(bad)
add
adc
ss
jnp
or
ja
sbb
fs
dec
inc
and
ins
jnp
jg
cmp
inc
ret
pop
sub
fisubr
mov
xlat
test
sbb
arpl
in
retf
out
test
daa
xchg
and
shld
stos
daa
pop
ficomp
out
(bad)
ss
mov
sar
fist
jae
mov
mov
sub
(bad)
cmp
xlat
sbb
scas
push
pop
arpl
or
mov
xchg
pop
adc
imul
loope
popf
fstp
retf
and
retf
and
arpl
push
rcl
(bad)
mov
cwde
sbb
jle
jae
pop
add
dec
cmp
cmp
repnz
dec
dec
xchg
arpl
ss
pop
(bad)
sti
dec
add
pop
xor
and
pop
mov
dec
pusha
cmp
loop
mov
dec
add
pop
mov
sub
and
pop
std
retf
push
(bad)
daa
add
and
outs
sub
sbb
pop
in
test
arpl
pop
mov
sbb
das
arpl
test
push
adc
mov
mov
js
aaa
pop
je
xchg
adc
add
dec
(bad)
sahf
popw
pop
lds
mov
add
jmp
xchg
ss
xchg
aas
test
add
imul
pusha
pop
cli
pop
jp
push
or
or
add
sti
or
pop
adc
inc
jl
add
jo
in
add
jns
aas
jbe
std
inc
aaa
cmp
or
mov
(bad)
adc
daa
add
and
push
or
iret
mov
dec
push
ltr
sub
fs
je
jl
ins
pop
pop
sti
cmp
adc
xor
add
pop
add
test
dec
fist
add
sbb
or
add
mov
inc
sti
push
inc
dec
rol
mov
fcomp
xchg
or
add
add
test
repnz
cmps
add
jg
ror
out
pop
add
arpl
sbb
jg
pop
pcmpgtb
add
idiv
push
pop
sbb
dec
movs
(bad)
xor
or
add
out
dec
adc
adc
pop
add
xchg
cmps
sbb
jae
pop
leave
or
sbb
mov
enter
jo
test
inc
xchg
add
mov
add
mov
mov
mov
pop
enter
das
pop
adc
pop
fdivr
pop
pusha
adc
jae
pop
das
js
xchg
xchg
nop
arpl
(bad)
test
popa
xchg
clc
mov
and
push
(bad)
test
gs
pusha
xchg
adc
(bad)
xor
xchg
ins
add
(bad)
call
fcmovnbe
(bad)
sub
inc
leave
push
jb
lock
xchg
or
rol
clc
and
pop
pop
ins
mov
sysret
call
push
or
jg
pop
dec
add
or
sbb
xor
popa
ins
push
dec
xor
add
mov
dec
push
sub
sti
fisttp
add
outs
das
dec
push
xor
jp
inc
jbe
int3
add
aaa
xor
fwait
in
or
cmp
xor
nop
outs
sub
xchg
outs
add
xor
inc
jle
inc
pusha
cmp
das
lock
in
pop
fdivr
add
pop
aaa
dec
xor
sub
add
jno
add
sub
das
enter
adc
add
xor
xchg
add
das
sbb
(bad)
ja
push
sbb
test
mov
das
mov
add
add
das
xchg
mov
dec
enter
push
pop
jo
add
add
xchg
add
xchg
adc
test
pop
push
pop
inc
mov
(bad)
mov
dec
ins
or
stc
das
fs
das
pop
push
xchg
mov
outs
inc
or
push
cmp
add
in
add
test
and
add
ror
test
dec
bound
add
pop
or
or
pop
inc
ins
sub
aas
imul
pop
dec
jns
add
or
jno
ss
test
adc
das
nop
jnp
xchg
cmc
jb
jae
add
or
mov
xchg
das
or
addr16
imul
cmp
or
sbb
sti
cmp
or
push
das
mov
xchg
(bad)
push
sub
add
aas
cmp
and
and
inc
mov
mov
leave
retf
push
add
les
leave
das
jge
xor
xor
ret
mov
pushw
add
inc
(bad)
xchg
push
push
adc
ss
jmp
sub
inc
mov
inc
cmp
add
inc
push
xchg
in
sbb
xchg
add
dec
das
adc
push
pop
popa
(bad)
clc
add
das
pusha
(bad)
fistp
pop
test
inc
xchg
cdq
cdq
sbb
jns
ins
mov
das
push
(bad)
(bad)
mov
sub
inc
xchg
dec
xor
out
mov
or
or
cmp
pusha
or
dec
adc
nop
data16
jp
add
mov
xor
mov
mov
and
clc
aas
pop
mov
and
lock
nop
add
add
fs
inc
into
pop
pop
sysret
xchg
and
loopne
add
xchg
and
add
and
xchg
and
(bad)
and
push
jbe
mov
sar
and
aas
test
enter
or
(bad)
and
add
pop
or
add
cmp
or
inc
sub
mov
jg
inc
dec
mov
scas
jg
retf
mov
imul
jge
mov
mov
enter
jns
lock
add
sub
or
jg
add
icebp
push
and
pop
jg
fs
dec
push
aas
test
add
mov
in
fnstsw
mov
or
pop
and
movs
aas
xchg
test
sar
loop
sub
ret
aas
xchg
sti
add
mov
daa
pop
(bad)
daa
das
jp
or
fwait
aas
ret
aas
out
fsub
idiv
pop
mov
outs
gs
pop
sbb
jg
mov
and
fist
add
fild
mov
mov
ret
sub
jg
fnstenv
arpl
ud0
adc
xor
jnp
gs
adc
lods
mov
inc
add
mov
call
mov
or
add
add
add
loop
ss
in
and
enter
adc
add
rcr
outs
ja
fwait
sbb
or
or
cmps
imul
push
dec
dec
aas
xor
sbb
or
mov
mov
jg
mov
jns
(bad)
sub
push
bound
sbb
push
jg
inc
ss
shl
or
ret
jmp
hlt
cld
(bad)
jg
and
add
bnd
mov
jg
test
jg
mov
jmp
pop
data16
and
imul
inc
call
mov
inc
fiadd
jb
pop
int
jg
mov
loope
and
and
xchg
lds
jae
je
push
ins
imul
dec
cmp
and
pop
mov
aaa
clc
mov
(bad)
test
add
test
mov
dec
les
sub
sar
jnp
jbe
pusha
xor
add
ins
add
inc
pop
dec
inc
cmp
cmp
dec
jns
cld
jg
mov
inc
fsub
(bad)
idiv
je
cmp
int3
mov
(bad)
inc
test
arpl
cmp
in
jb
call
cli
jg
scas
sub
std
and
xor
pop
or
aas
retf
xor
sahf
int
push
outs
pop
outs
jno
stos
xchg
in
jmp
repnz
xchg
inc
adc
mov
shl
push
jg
jnp
jg
test
arpl
jmp
mov
aas
mov
add
xchg
popf
stc
or
xchg
jb
sbb
in
pop
fs
xor
das
dec
mov
(bad)
ds
jg
(bad)
aas
nop
test
(bad)
ficomp
test
sbb
loop
aas
inc
cmp
or
stos
xlat
js
fdivr
jg
(bad)
div
in
fcomip
mov
mov
mov
pop
add
or
sbb
call
pop
(bad)
sub
enter
shr
add
lock
push
nop
mov
fld
(bad)
jmp
mov
das
push
adc
jg
ins
mov
add
repz
push
test
pop
mov
dec
cs
enter
into
call
outs
iret
add
push
or
push
add
jg
fidivr
aaa
mov
imul
add
push
push
lock
(bad)
ja
imul
std
mov
sub
(bad)
mov
out
add
jg
inc
fiadd
mov
leave
push
ffreep
pop
les
pusha
inc
cmps
sti
jo
pop
mov
retf
xchg
pop
push
popa
add
dec
(bad)
cmp
mov
in
das
mov
xchg
cmp
mov
jmp
addr16
pop
push
int
inc
nop
scas
pop
fsubr
fld
sar
inc
cs
sbb
stos
jbe
and
jg
push
add
leave
pop
pusha
mov
test
add
ja
mov
mov
scas
cmc
add
in
and
stos
test
push
test
iret
mov
int
xchg
es
xchg
jg
(bad)
mov
add
sub
femms
setbe
retf
lahf
mov
not
in
pusha
cmp
or
inc
mov
jnp
fnsave
test
xchg
cld
add
jbe
(bad)
neg
in
pop
fsubr
adc
adc
xchg
ins
sar
adc
jo
addr16
ror
sar
lods
std
out
imul
movs
lods
outs
push
xchg
(bad)
adc
add
adc
sbb
lahf
int3
sti
dec
mov
(bad)
xlat
sti
ret
jmp
stos
scas
adc
inc
dec
jmp
adc
ins
loope
jmp
hlt
aas
movs
dec
jecxz
(bad)
mov
fidivr
(bad)
push
mov
scas
mov
dec
mov
loop
into
out
fcom
loopne
imul
and
in
aas
fstp
ins
mov
inc
pop
mov
xlat
and
push
xor
xchg
jo
dec
add
aaa
fist
inc
fwait
xchg
ror
shl
mov
jno
fwait
xor
shl
mov
retf
mov
bound
xchg
xor
mov
js
iret
adc
or
or
loop
mov
cmp
inc
adc
mov
or
sar
nop
inc
ss
aas
add
aas
pop
leave
inc
push
sbb
pop
add
add
rol
dec
inc
mov
jb
add
pop
cmps
and
add
inc
pop
add
mov
push
(bad)
or
or
adc
leave
mov
ja
xchg
pop
daa
cmp
and
mov
dec
add
xchg
(bad)
xchg
in
clc
jp
jbe
jno
xor
pop
dec
fs
xchg
loop
sti
and
adc
stos
retf
mov
arpl
dec
xor
inc
pop
repz
xchg
mov
repz
cmp
mov
or
inc
out
pop
outs
mov
out
ins
shl
repz
sbb
dec
shr
mov
adc
(bad)
(bad)
mov
or
je
inc
mov
das
push
jae
pushf
ror
in
out
add
sub
popf
iret
jg
xchg
in
mov
dec
inc
sub
inc
or
xor
retf
(bad)
fidiv
add
mov
mov
ret
adc
jg
ins
and
jg
mov
shl
add
cmps
and
sub
inc
push
jg
sahf
and
sub
aas
add
xchg
ret
mov
scas
retf
aad
jns
add
fstp
xchg
dec
inc
push
retf
jae
stos
fxch
call
mov
test
cs
mov
xchg
retf
(bad)
xor
or
test
shl
ret
jae
mov
sahf
and
and
inc
push
jb
sbb
adc
xchg
inc
mov
push
and
add
xchg
sahf
sub
stc
xor
or
mov
mov
dec
mov
aam
fdivr
(bad)
or
add
cmp
imul
adc
xchg
mov
jg
fiadd
js
xchg
mov
mul
outs
push
fadd
imul
add
es
xchg
fdivr
repnz
int
mov
lods
(bad)
scas
hlt
mov
add
adc
push
ds
and
sbb
xchg
frstor
mov
lock
in
push
cmp
rcl
aam
(bad)
repz
shl
call
dec
and
pop
cmovb
stos
lahf
fisttp
repz
mov
loop
cs
add
sub
mov
xor
mov
pxor
add
mov
add
icebp
jg
inc
ja
das
inc
fadd
mov
ffree
lds
mov
and
dec
inc
outs
retf
mov
(bad)
cli
add
mov
or
rol
cwde
add
mov
mov
dec
pop
dec
fs
retf
in
add
push
mov
sub
retf
sub
adc
mov
ret
test
add
mov
mov
fild
push
ret
ins
mov
inc
call
add
test
or
add
mov
push
or
add
rol
push
shl
retf
ret
jmp
(bad)
(bad)
mov
lods
mov
push
imul
stos
adc
cmp
nop
mov
pop
xchg
adc
adc
dec
shl
mov
mov
mov
nop
mov
jo
sti
inc
xchg
(bad)
fwait
fwait
jecxz
ds
add
sti
push
stos
int
xlat
mov
add
add
sbb
mov
xchg
pop
stos
adc
xchg
rcr
sahf
cmps
inc
or
ins
fyl2xp1
aas
xor
pop
mov
jmp
cmp
ret
or
mov
out
enter
add
fsubr
movs
dec
and
and
or
sbb
test
add
sub
mov
test
mov
mov
inc
or
ret
add
imul
es
movs
loopne
add
xchg
iret
add
add
icebp
rcr
add
and
(bad)
cld
sti
sbb
ds
pusha
xor
inc
outs
mov
movs
test
clc
ret
sub
mov
aad
jns
pop
lock
leave
out
and
iret
and
add
mov
jae
mov
inc
bound
ja
daa
test
xchg
lea
mov
(bad)
add
or
js
clc
xchg
(bad)
push
fld
aas
jg
add
push
test
add
fs
std
add
fist
xchg
les
dec
packsswb
mov
test
mov
sbb
push
xchg
mov
sub
das
push
and
mov
(bad)
outs
add
ret
push
movs
rcr
ja
out
lds
or
scas
(bad)
call
imul
ds
shl
rol
fcmovnbe
rcr
mov
stos
(bad)
mov
movs
adc
(bad)
push
sbb
mov
lahf
mov
lea
retf
jl
das
xor
outs
xchg
and
nop
sar
punpckldq
pop
movs
cmp
pop
cs
inc
mov
add
mov
mov
xchg
jmp
out
add
(bad)
sti
xor
jle
pop
sbb
jae
dec
sub
and
call
inc
fwait
pop
ins
sar
fcom
lds
add
push
sbb
(bad)
dec
pusha
push
and
mov
pop
ret
lahf
adc
test
add
sbb
or
mov
daa
sbb
xor
xor
xchg
ret
sbb
js
xor
add
dec
inc
dec
cmc
mov
popa
xchg
or
mov
add
mov
in
enter
push
sti
pop
lock
nop
inc
push
xor
add
add
xchg
add
add
stos
nop
or
add
adc
inc
(bad)
push
mov
push
pop
cmc
and
repnz
push
xadd
add
leave
inc
mov
lods
mov
cmp
adc
adc
sbb
push
adc
inc
inc
adc
mov
jne
add
enter
add
add
add
mov
or
lock
sbb
or
stc
fwait
dec
push
sbb
loopne
pusha
or
fbld
sbb
xor
cmps
adc
leave
mov
xor
pop
or
mov
in
add
push
xor
daa
and
cmp
sahf
or
nop
xor
inc
into
push
inc
outs
sbb
xchg
or
popa
rcl
push
shl
cmp
push
shl
mov
sbb
jmp
adc
push
add
enter
clc
pop
sbb
xor
es
inc
(bad)
push
or
pop
sbb
push
mov
movs
les
push
loopne
retf
add
push
xor
rcl
push
xor
xor
xor
and
or
(bad)
push
fldenv
jno
xor
lods
or
xor
push
shl
pop
sbb
test
cmp
inc
pop
or
cmp
pop
xor
add
add
add
idiv
pusha
test
add
das
add
pusha
fbstp
test
pop
push
aam
jg
inc
xor
fisttp
std
inc
add
xor
or
or
arpl
adc
cmp
add
push
aas
mov
sbb
je
in
and
pusha
daa
pop
add
xchg
cmp
inc
fwait
sub
nop
in
(bad)
inc
or
test
xchg
xor
cmp
ret
mov
int3
cmp
xor
inc
int3
add
int3
jbe
add
push
mov
sub
push
imul
(bad)
jo
mov
push
mov
retf
idiv
mov
or
ror
add
fsubr
mov
adc
push
or
je
sbb
clc
add
mov
cmp
div
mov
and
push
push
dec
rcr
out
add
call
inc
ins
push
cli
dec
xor
mov
loope
mov
fadd
in
fnstcw
test
push
push
fadd
lock
pop
mov
add
jmp
push
sub
inc
cld
retf
out
add
or
adc
(bad)
cdq
cmp
xor
mov
repnz
das
in
pop
or
pop
ret
adc
nop
add
sbb
(bad)
in
fwait
sub
test
mov
call
push
push
retf
mov
adc
add
loopne
call
outs
jae
jbe
ror
xlat
pslld
loopne
inc
shl
call
leave
in
call
das
or
inc
inc
cmp
xor
scas
dec
pop
sbb
aam
leave
sub
cmp
mov
adc
mov
aas
and
add
test
ja
push
fs
fadd
xchg
inc
in
leave
sub
dec
jns
repnz
mov
dec
push
and
dec
pushf
push
push
adc
or
inc
repnz
les
push
sbb
pop
push
repnz
adc
mov
pusha
int3
popa
scas
dec
pop
xchg
test
sub
mov
adc
push
jns
repnz
aam
dec
pop
xchg
mov
xchg
push
and
cld
jb
je
adc
and
jns
repnz
jns
jnp
xchg
mov
jg
and
dec
mov
sub
repnz
in
pushf
xchg
mov
and
dec
pop
les
push
xor
in
xchg
repnz
adc
mov
xchg
int3
cwde
scas
dec
pop
xchg
test
push
and
popf
leave
sub
mov
sbb
aam
sub
inc
jg
sub
sub
test
sub
sub
stos
lods
sub
sub
scas
mov
sbb
sbb
sbb
sbb
sbb
scas
dec
push
ror
ret
inc
repnz
jl
xor
xchg
mov
movs
retf
dec
pop
pop
int3
adc
leave
sub
shl
mov
adc
mov
(bad)
fsubr
fcmovbe
fld
xchg
push
and
fisttp
(bad)
loopne
jns
repnz
ins
in
pop
xchg
mov
xchg
push
and
xchg
jmp
leave
sub
repnz
repnz
xchg
mov
cmc
push
and
dec
push
test
jg
in
fld
cmp
jl
repnz
jmp
xchg
pop
add
int3
push
mov
adc
or
jns
repnz
or
nop
xchg
push
and
aam
mov
adc
cld
pop
jns
repnz
mov
push
push
and
dec
xchg
and
sub
clc
mov
mov
push
in
adc
ja
sub
jns
repnz
mov
inc
repnz
les
jl
xchg
mov
in
ss
dec
pop
movs
cmp
sub
cmp
test
cmp
mov
inc
lods
inc
scas
dec
pop
xchg
fs
sbb
sub
mov
adc
dec
and
repnz
dec
mov
dec
pop
xchg
mov
xchg
push
and
fcom
push
in
leave
sub
pop
jns
repnz
mov
popa
push
and
dec
pushf
arpl
sub
repnz
les
push
mov
in
ins
and
dec
pop
movs
outs
pop
jno
sub
je
mov
adc
mov
jns
jnp
dec
pop
xchg
fs
jg
xchg
push
and
or
inc
test
jns
repnz
test
ins
mov
xchg
push
and
fmul
sub
xchg
jns
repnz
mov
cdq
push
and
dec
fcomp
xchg
pushf
jl
inc
repnz
xor
in
mov
movs
mov
dec
pop
adc
add
leave
sub
lods
repnz
adc
mov
mov
mov
sub
xchg
dec
mov
mov
mov
mov
test
inc
and
jb
mov
xchg
mov
xchg
push
and
lods
lds
sub
repnz
iret
pop
xchg
mov
rcl
scas
dec
xor
sbb
add
push
inc
jb
or
ficom
fsub
and
dec
pop
sbb
or
leave
sub
in
mov
mov
inc
sbb
inc
repnz
mov
dec
pop
xchg
mov
adc
and
neg
sub
mov
sub
xor
enter
dec
add
inc
call
call
(bad)
push
push
aas
adc
inc
mov
push
or
(bad)
mov
fcom
dec
ret
add
add
call
ror
or
outs
add
fld
and
pop
add
dec
mov
fisttp
mov
div
mov
add
push
add
push
fwait
lods
mov
into
je
cmc
sbb
sub
ins
inc
sar
dec
push
push
push
pop
retf
pop
aam
inc
ss
mov
mov
push
cmp
jg
mov
mov
push
inc
int3
add
cmp
aam
clc
sub
fisttp
mov
adc
arpl
lea
cmp
jge
push
dec
inc
sub
(bad)
nop
fadd
inc
loopne
sti
or
add
mov
cmp
inc
outs
or
add
jp
or
mov
cdq
and
add
mov
mov
(bad)
jg
cli
add
or
(bad)
mov
mov
add
sbb
popa
test
movs
mov
and
mov
jae
and
and
call
push
adc
mov
or
xchg
pop
cmp
or
cmp
int
retf
mov
add
aam
int3
enter
mov
sar
mov
test
mov
jne
push
sbb
inc
mov
adc
test
adc
lods
outs
mov
call
push
fnclex
jge
push
mov
mov
js
pop
ins
fstp
fst
push
push
out
and
cmp
aam
pushf
or
cmp
mov
push
push
mov
call
test
test
add
sar
fs
push
jo
ret
in
les
inc
mov
mov
or
test
push
fcom
push
adc
pop
pop
shr
movs
(bad)
mov
enter
or
rcl
fst
mov
add
push
js
fadd
mov
out
mul
jmp
push
mov
ss
(bad)
xor
ror
enter
push
leave
mov
jmp
or
sub
enter
mov
jae
push
fsubr
pop
mov
movs
imul
movs
ror
fcomp
(bad)
aaa
ins
lods
pop
ret
loopne
int3
sub
sbb
or
or
sub
sar
or
mov
fwait
pop
mov
loopne
jae
xchg
fwait
sbb
sbb
add
adc
inc
mov
clc
inc
aas
dec
repnz
xchg
add
or
shr
mov
xchg
xor
out
lock
adc
fild
add
mov
push
cmp
xchg
jecxz
adc
call
enter
js
jo
enter
push
enter
xor
xchg
out
enter
(bad)
loopne
xchg
xchg
xchg
rol
mov
cwde
mov
adc
fwait
js
add
push
cs
in
call
push
push
test
ror
sub
int3
cmp
lea
adc
pop
in
sbb
rcl
sub
fist
add
or
popf
xchg
sub
pop
or
dec
adc
rcl
arpl
test
lea
push
inc
add
mov
push
lock
sub
clc
inc
sar
leave
push
xchg
fsubr
scas
adc
add
sar
add
in
jl
daa
push
inc
mov
ins
fcmovnu
sbb
mov
inc
scas
(bad)
or
int3
fs
push
dec
sub
retf
push
pusha
push
pop
adc
or
es
pusha
rcr
test
inc
ror
ins
jmp
or
leave
push
int3
or
mov
daa
call
xchg
or
cmp
mov
sub
jmp
push
fcomip
ins
inc
cmp
mov
xor
add
mov
inc
sub
add
pop
xor
sbb
adc
and
inc
scas
in
add
clc
dec
idiv
fsubr
lock
fs
call
rol
dec
fmul
not
shl
jb
push
lods
push
enter
pop
or
shr
sbb
or
xchg
dec
dec
into
sub
push
xor
dec
xor
test
aam
stc
mov
mov
push
ror
int
xor
xchg
or
jle
test
test
xchg
or
mov
xor
inc
js
and
js
xchg
inc
mov
sbb
ds
inc
in
xor
xor
popa
xchg
adc
xchg
pop
inc
mov
test
push
push
cmp
jns
dec
retf
add
xchg
jnp
adc
and
xor
and
ins
ss
push
mov
mov
loop
popf
stc
dec
add
mov
mov
and
cmp
in
and
(bad)
mov
mov
nop
push
pop
leave
add
in
sub
fs
les
or
fcmovnbe
jo
dec
ret
pop
push
retf
(bad)
mov
xor
pop
bound
sbb
dec
xchg
add
shl
inc
or
mov
jno
rol
mov
xor
mov
hlt
in
cmp
jg
or
call
lea
adc
sti
add
sbb
sbb
mov
or
mov
add
adc
adc
pop
pop
leave
loop
and
xchg
pop
inc
mov
out
cwde
in
push
ret
icebp
stos
ret
sahf
loopne
in
adc
mov
lock
popa
and
mov
mov
je
xchg
ja
dec
push
push
pushf
(bad)
xlat
and
test
add
inc
cs
in
mov
xchg
pusha
js
cmc
jecxz
leave
and
fist
add
ret
push
push
mov
push
ret
rcr
nop
rcl
mov
push
or
adc
mov
sub
push
adc
cmp
sbb
mov
dec
sub
jmp
and
sub
lds
stos
sbb
mov
mov
add
das
loope
lods
mov
pop
and
ret
mov
pop
fs
cmp
rol
add
enter
adc
test
push
add
cmp
fcomip
inc
mov
adc
pop
jo
add
mov
pop
mov
push
sub
test
loope
loope
aaa
mov
lods
or
(bad)
cwde
xor
mov
cmp
sub
les
xchg
retf
push
mov
pop
jb
jnp
xchg
mov
test
mov
mov
pusha
into
(bad)
pop
js
mov
cmp
add
add
daa
mov
mov
dec
mov
cwde
fadd
fsubr
mov
aam
shl
nop
sub
sbb
push
and
sbb
aas
push
cmp
lods
test
es
mov
sar
lahf
fxch
mov
inc
mov
sbb
push
sub
sbb
or
sbb
dec
test
cmp
arpl
sbb
movs
mov
or
push
cwde
xor
test
and
dec
mov
sub
aam
pop
inc
test
iret
hlt
fcom
push
or
outs
push
mov
mov
add
cmps
mov
mov
pop
loopne
call
nop
push
sbb
aaa
mov
sbb
push
lods
lods
sbb
dec
ret
inc
dec
sbb
fiadd
mov
sub
enter
fmul
mov
push
mov
sub
test
or
test
sbb
mov
mov
sbb
call
mov
xor
xor
add
pop
push
or
mov
and
mov
or
test
retf
test
mov
jl
cmp
or
pop
inc
or
loop
out
adc
pop
mov
mov
or
pop
xor
push
jae
int3
sar
int3
jge
ret
loope
or
mov
inc
jne
push
xchg
enter
and
rcl
mov
mov
aam
and
add
mov
push
in
call
adc
mov
push
dec
xor
pop
cli
push
lds
ds
rep
dec
xor
inc
lahf
shl
add
aam
pop
jno
jg
push
dec
add
cdq
lods
dec
sub
sbb
pop
in
or
outs
ins
jp
push
bound
push
push
sub
shl
mov
cmps
pop
ficomp
cmps
imul
fsubr
mov
je
shr
adc
aam
xchg
pop
out
sub
or
leave
adc
add
and
xor
les
ins
add
jecxz
mov
fcmovne
push
xchg
int3
addr16
(bad)
pop
rol
das
lock
xor
je
cmp
aaa
out
int
pop
mov
ret
pusha
dec
push
aam
xchg
mov
loopne
push
push
pusha
out
rol
and
ret
jge
push
push
or
shr
jmp
push
mov
push
push
ins
arpl
cmp
rcr
push
cmp
es
adc
cs
sub
jae
in
fisttp
adc
lea
mov
pop
addr16
adc
add
inc
mov
mov
or
xor
push
pop
(bad)
or
pop
push
or
or
(bad)
mov
mov
xor
xor
add
sahf
add
mov
inc
add
fs
add
movs
adc
test
mov
dec
arpl
pop
popa
fs
data16
popa
outs
pop
mov
add
repnz
and
jns
aaa
mov
std
xor
add
rol
ins
imul
or
xor
add
call
xor
dec
mov
sub
pop
push
hlt
push
adc
inc
push
xor
loope
push
mov
push
cvttps2pi
out
xor
clc
xor
mov
(bad)
adc
imul
stos
scas
pop
adc
popf
ja
mov
push
inc
push
inc
dec
push
pop
push
dec
dec
dec
and
or
test
mov
add
add
xor
mov
mov
dec
fsubr
gs
outs
daa
in
mov
jno
je
push
jne
jns
outs
lea
mov
add
mov
pop
fdiv
jb
leave
int
popa
popa
sti
mov
fxch
cmps
xor
add
call
add
outs
addr16
sbb
add
add
push
inc
push
xchg
add
adc
push
je
pusha
mov
xor
add
js
or
sub
popa
outs
in
push
imul
ins
inc
sub
adc
pop
retf
test
repz
jle
iret
pusha
popa
cmps
stos
push
inc
dec
add
inc
stc
psubw
jecxz
mov
loopne
sidtd
add
(bad)
daa
adc
add
mov
inc
or
add
and
sub
sbb
pusha
add
push
mov
pusha
arpl
pop
push
add
arpl
sub
addr16
pop
cmp
sbb
daa
repz
fdivr
sub
mov
ins
mov
int
cs
or
add
int3
ja
add
cs
jb
ret
lock
movs
jmp
push
add
cld
mov
nop
push
add
adc
add
inc
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
