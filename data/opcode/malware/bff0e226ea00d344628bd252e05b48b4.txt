push
mov
sub
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
ror
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
int3
jmp
es
cmp
adc
ja
dec
fnstcw
xor
cmps
data16
jge
cmp
ja
inc
xor
pop
in
pop
movs
ins
in
cmp
jg
jb
jge
or
pop
leave
and
or
push
or
es
shl
fs
push
pop
inc
les
les
cmc
jb
cmp
push
aas
push
xor
jno
jl
push
mov
jbe
and
jns
push
ja
cmp
push
pop
dec
xor
pop
les
jge
jnp
pop
or
scas
aas
adc
push
dec
xchg
push
jecxz
test
xor
pop
std
push
pop
push
inc
imul
aas
and
dec
das
fistp
pop
fidivr
inc
jge
lea
cmp
add
mov
xchg
ret
jmp
dec
iret
push
mov
je
cmp
jnp
dec
out
and
push
push
cs
(bad)
jge
sub
sub
add
out
cmp
jae
es
int3
push
mov
push
push
push
push
mov
push
push
push
mov
mov
mov
mov
in
cmp
sete
pop
pop
pop
pop
add
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
pop
add
xor
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
push
mov
mov
(bad)
pop
or
call
pop
add
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
ret
pop
add
xor
ret
mov
pop
mov
pop
ret
push
mov
sub
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
int3
int3
int3
int3
int3
int3
push
mov
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
sbb
jle
cmps
cmps
push
dec
sbb
fs
sbb
xlat
add
loop
imul
push
add
std
dec
out
mov
xor
outs
ficomp
push
ins
lods
dec
adc
ins
gs
test
sbb
ret
into
sub
or
xor
mov
dec
xchg
mov
and
sbb
mov
adc
adc
mov
cmps
(bad)
mov
push
outs
ins
retf
push
ds
shr
cwde
(bad)
or
dec
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
mov
test
je
mov
movzx
add
mov
mov
add
mov
mov
shr
mov
and
add
mov
jmp
mov
shr
add
and
pop
ret
int3
push
mov
push
mov
mov
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
add
shr
push
mov
push
push
call
mov
mov
push
call
mov
cmp
je
mov
cmp
je
mov
movzx
cmp
jne
mov
mov
mov
mov
mov
add
mov
movzx
mov
movzx
xor
cmp
setl
movzx
sub
mov
mov
movzx
movzx
sub
mov
movzx
mov
movzx
xor
cmp
setl
movzx
sub
mov
mov
movzx
movzx
sub
mov
movzx
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
sbb
jle
cmps
cmps
push
dec
sbb
fs
sbb
xlat
add
loop
imul
push
add
std
dec
out
mov
xor
outs
ficomp
push
ins
lods
dec
adc
ins
gs
test
sbb
ret
into
sub
or
xor
mov
dec
xchg
mov
and
sbb
mov
adc
adc
mov
cmps
(bad)
mov
push
outs
ins
retf
push
ds
shr
cwde
(bad)
or
dec
mov
fiadd
mov
or
cmp
nop
jb
arpl
pop
mov
xor
pop
xor
outs
add
and
mov
push
test
aam
mov
pop
cdq
push
adc
sub
xchg
adc
add
sub
cmps
fdivp
mov
repz
ret
adc
out
loopne
or
stos
inc
in
sub
xchg
or
stos
inc
scas
test
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
mov
push
call
add
mov
push
mov
push
mov
push
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
jmp
jo
scas
dec
pop
dec
ficom
fs
or
pop
pop
ret
sbb
sub
cmps
and
in
in
stos
and
jb
adc
lds
dec
call
imul
add
ja
jns
mov
jno
arpl
add
fwait
adc
push
pop
enter
outs
add
adc
pop
movs
or
je
adc
fs
bt
cmp
adc
imul
push
aas
inc
push
push
mov
pop
and
cmp
and
push
jge
mov
fist
dec
dec
and
xor
call
inc
repnz
dec
xor
int3
int3
int3
push
mov
sub
jmp
push
lods
int
pop
cmp
ins
push
movs
sbb
ds
push
or
data16
dec
cmp
sbb
cmc
ja
inc
cwde
xor
loop
dec
jno
jnp
sub
jbe
or
adc
cmp
jno
adc
inc
xor
push
daa
arpl
jbe
and
pusha
and
fs
scas
adc
mov
pop
mov
inc
daa
xor
pop
std
adc
sbb
das
pushf
push
je
aad
sbb
xlat
and
adc
out
inc
sbb
je
sub
ret
pop
lods
jge
outs
pop
add
sub
inc
adc
adc
add
das
add
aaa
jo
pop
pop
mov
das
sbb
mov
cld
pusha
retf
pop
in
and
pop
les
mov
adc
adc
mov
jecxz
loope
cmps
sub
jo
pop
cmp
inc
sbb
dec
adc
in
daa
fs
retf
sub
inc
movs
dec
cdq
pusha
dec
jge
inc
and
jae
jnp
cmp
add
jbe
dec
dec
ja
outs
sar
sub
retf
push
push
and
cmp
popa
fwait
pop
popa
dec
mov
add
xor
xchg
ins
jno
push
push
add
adc
lahf
push
fidiv
ins
into
and
jg
dec
inc
pushf
cmp
or
mov
ja
das
lea
pop
pop
ret
sbb
retf
ja
jg
jo
xor
jge
js
inc
dec
jp
pop
(bad)
adc
push
int3
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
je
mov
jmp
mov
add
mov
mov
mov
cmp
jae
push
mov
mov
add
imul
mov
mov
mov
push
mov
mov
add
imul
mov
mov
mov
push
mov
mov
add
imul
mov
mov
mov
push
call
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
jmp
pop
cmp
adc
xchg
or
jge
sbb
int
(bad)
imul
jno
pusha
push
sub
sbb
jp
icebp
add
data16
push
inc
and
sub
push
jnp
hlt
and
ss
jb
mov
dec
xor
push
inc
mov
push
sbb
ins
cmp
push
xor
mov
jae
push
pop
jno
dec
iret
or
jbe
add
jge
jb
ds
into
cmp
and
sbb
cdq
xor
add
inc
and
retf
sbb
push
sub
mov
ss
das
(bad)
xor
or
adc
imul
imul
fs
jp
jbe
lds
pop
or
dec
or
jle
and
and
and
jl
js
daa
inc
sub
dec
mov
jp
pop
pop
jge
push
push
ret
outs
fwait
xor
mov
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
jmp
fsubr
push
sub
mov
add
and
mov
and
ins
fistp
dec
clc
xor
xor
and
add
dec
jno
(bad)
daa
jmp
adc
pop
punpckhbw
bound
data16
add
pop
push
retf
dec
arpl
jmp
dec
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
jmp
add
test
daa
pop
xchg
ret
dec
ds
dec
or
push
(bad)
outs
xchg
sbb
icebp
adc
popa
add
in
xor
inc
fwait
adc
jb
xor
je
push
pushw
(bad)
dec
mov
and
push
xchg
jp
sbb
lahf
ds
adc
sub
push
(bad)
or
cmp
adc
push
bound
es
retf
inc
add
sbb
push
adc
mov
adc
cmp
push
push
or
dec
popa
and
pop
imul
push
mov
sub
jmp
lahf
(bad)
mov
cmp
je
push
pop
push
and
data16
mov
bound
fst
jge
jns
aaa
add
pop
aad
les
rcl
push
xchg
or
cmp
or
sub
push
sub
ins
cli
outs
mov
addr16
push
rcr
or
add
and
push
mov
(bad)
inc
cmps
imul
xor
inc
call
inc
mov
and
icebp
add
inc
outs
push
je
outs
not
ss
pusha
and
xor
xor
das
and
cmp
enter
aaa
push
jp
cmp
push
cmp
add
js
jno
and
lock
ins
jp
pop
jbe
inc
loop
fdiv
cld
dec
xchg
ins
bound
dec
in
xor
xor
push
gs
cmps
outs
sbb
push
shr
repnz
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
sbb
jle
cmps
cmps
push
dec
sbb
fs
sbb
xlat
add
loop
imul
push
add
std
dec
out
mov
xor
outs
ficomp
push
ins
lods
dec
adc
ins
gs
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmp
je
cmp
je
jmp
lea
push
mov
push
call
mov
push
push
push
mov
push
mov
push
mov
push
push
push
mov
push
call
lea
push
mov
push
call
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
push
call
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
lea
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
xor
jmp
push
push
mov
mov
push
push
call
mov
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
pop
ret
int3
push
mov
mov
push
push
call
push
call
cmp
jne
call
pop
ret
int3
int3
push
mov
sub
mov
cmp
jne
xor
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
push
call
mov
mov
mov
mov
mov
mov
sub
shr
mov
mov
sub
shr
mov
push
mov
push
push
push
mov
push
mov
push
mov
push
mov
push
push
push
push
push
call
mov
mov
mov
mov
push
call
push
call
push
mov
push
call
mov
push
call
push
mov
mov
imul
push
push
push
call
mov
push
push
push
push
lea
push
call
test
je
cmp
jne
mov
call
xor
jmp
lea
push
call
jmp
mov
pop
ret
int3
int3
int3
push
mov
mov
push
call
mov
push
push
call
mov
push
call
mov
push
call
push
push
mov
push
call
pop
ret
push
mov
push
call
xor
pop
ret
int3
int3
push
mov
mov
cmp
je
push
call
cmp
jne
call
xor
pop
ret
int3
int3
int3
int3
int3
cmp
je
jmp
fld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jb
je
arpl
mov
or
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
in
sub
jmp
shl
adc
cs
push
scas
push
adc
bound
outs
fimul
dec
dec
jmp
adc
jnp
xchg
ret
cmp
dec
xor
adc
dec
cld
sbb
js
sbb
ins
inc
addr16
or
inc
out
push
or
pop
sub
xor
sbb
and
xor
das
jnp
div
mov
ja
cs
xchg
pop
popf
pop
xor
data16
ss
pop
data16
sub
and
scas
add
pop
jo
push
mov
jne
jb
push
push
mov
mov
aaa
inc
push
push
sbb
xchg
adc
sbb
cmp
add
sub
or
sub
outs
mov
push
repnz
test
xor
cmp
(bad)
setns
in
bound
loope
mul
ret
daa
imul
xor
and
dec
or
pop
or
arpl
add
jecxz
add
mov
mov
pop
ins
and
ins
cmp
pop
mov
xor
jns
aas
shl
sbb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
jmp
pop
cmps
inc
in
push
sub
add
leave
bound
pop
dec
pop
push
lock
cmp
(bad)
jp
push
and
inc
xor
outs
jp
mov
dec
lods
push
jmp
imul
or
inc
mov
inc
out
add
jp
add
ins
jge
add
add
dec
cmp
xchg
gs
ds
(bad)
add
int3
int3
int3
int3
int3
int3
int3
push
mov
push
jmp
and
add
je
not
cmp
inc
dec
xor
add
dec
dec
adc
inc
imul
xor
dec
jo
push
ret
pusha
pop
and
xor
data16
(bad)
arpl
adc
jg
pop
movs
push
mov
cmp
adc
push
fs
push
sbb
push
adc
mov
dec
xchg
pop
gs
xor
adc
xor
dec
lea
imul
pop
fwait
push
lock
or
push
js
dec
(bad)
jne
dec
pusha
cmp
fs
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
int3
int3
int3
push
mov
mov
mov
mov
movzx
cmp
je
push
call
xor
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
movzx
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
movzx
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
mov
cmp
jne
jmp
mov
imul
mov
mov
add
mov
mov
imul
mov
mov
mov
mov
imul
mov
mov
add
mov
mov
push
mov
push
mov
push
call
add
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
mov
cmp
jne
xor
jmp
mov
mov
add
mov
mov
cmp
je
mov
mov
add
mov
mov
cmp
jne
mov
mov
add
mov
jne
xor
jmp
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
cmp
jne
mov
push
call
mov
cmp
jne
push
call
xor
jmp
mov
cmp
je
mov
mov
and
je
mov
mov
and
push
mov
push
call
mov
jmp
mov
mov
add
mov
mov
add
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
add
mov
mov
cmp
jne
xor
jmp
mov
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
sub
shr
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
cmp
jae
mov
movzx
and
sar
mov
mov
movzx
and
mov
mov
add
mov
cmp
jne
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
mov
mov
jmp
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
add
mov
mov
cmp
jne
xor
jmp
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
pusha
pushf
push
push
mov
push
mov
call
popf
popa
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
jmp
call
out
mov
mov
adc
pop
jns
pop
jge
ja
jns
cs
dec
ja
mov
sub
popa
mov
cmp
cmp
mov
sub
push
pop
or
pop
and
shl
xor
pop
test
inc
pop
imul
mov
cmp
pop
pop
aaa
dec
xor
lds
cmc
daa
fwait
jge
daa
fiadd
ds
or
or
inc
(bad)
sbb
imul
jae
js
jle
sub
or
pop
enter
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
jmp
mov
stc
js
and
cs
pop
add
or
pop
push
or
sub
mov
or
adc
popa
xor
sub
mov
lds
adc
sti
imul
or
cs
and
(bad)
in
pop
jne
aad
or
push
add
inc
pop
push
xor
out
fwait
sub
push
(bad)
push
cmps
add
or
push
imul
push
int
push
pop
fcom
dec
in
sub
xor
loopne
or
lock
enter
les
add
jnp
adc
or
clc
ror
mov
cs
ss
jge
inc
je
imul
jmp
push
jb
pop
ss
push
cmp
cwde
push
mov
and
cmp
dec
mul
mov
sbb
jle
sbb
mov
inc
dec
sbb
jne
inc
test
data16
dec
pop
cmp
pop
pusha
or
gs
xchg
icebp
adc
aaa
nop
das
dec
add
push
xor
pop
cmp
push
pushf
pop
cld
sub
push
and
xor
and
add
cmp
and
add
sbb
fstp
push
mov
sub
das
sub
(bad)
test
pop
test
fsubr
push
and
cs
les
mov
xchg
and
cmp
sub
or
aas
pusha
mov
and
push
sub
iret
adc
jns
adc
rdtsc
jb
sub
jne
xchg
sbb
adc
jg
dec
xor
cmp
push
pusha
dec
push
jae
add
stos
cmp
int3
int3
push
mov
sub
jmp
frstor
adc
mov
push
inc
sbb
xchg
cmp
sahf
sbb
jno
ss
or
inc
jne
xor
test
mov
push
dec
popa
mov
pop
outs
jg
cmp
pop
pop
pop
call
dec
ja
ins
push
frstor
or
or
in
inc
cmp
(bad)
cmc
xor
xor
push
fisttp
push
push
fild
pop
imul
outs
pop
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
sbb
jle
cmps
cmps
push
dec
sbb
fs
sbb
xlat
add
loop
imul
push
add
std
dec
out
mov
xor
outs
ficomp
push
ins
lods
dec
adc
ins
gs
test
sbb
ret
into
sub
or
xor
mov
dec
xchg
mov
and
sbb
mov
adc
adc
mov
cmps
(bad)
mov
push
outs
ins
retf
push
ds
shr
cwde
(bad)
or
dec
mov
fiadd
mov
or
cmp
nop
jb
arpl
pop
mov
xor
pop
xor
outs
add
and
mov
push
test
aam
mov
pop
cdq
push
adc
sub
xchg
adc
add
sub
cmps
fdivp
mov
repz
ret
adc
out
loopne
or
stos
inc
in
sub
xchg
or
stos
inc
scas
div
xor
xor
inc
add
add
inc
xchg
push
ret
pop
in
ror
or
scas
xor
es
movs
or
(bad)
in
push
call
repnz
les
sti
or
test
leave
cmp
and
push
mov
mov
mov
adc
iret
xchg
sbb
jp
mov
je
jnp
inc
(bad)
jp
cmps
or
mov
jns
jns
je
imul
mov
push
adc
sub
rcpps
sub
in
mov
adc
inc
call
inc
xor
add
jo
xchg
xor
sbb
rcl
inc
sbb
xlat
enter
out
rol
mov
mov
sbb
and
pop
xchg
fbld
ret
push
jmp
jo
scas
or
hlt
sbb
fisubr
sub
pop
ins
xor
jae
(bad)
fcomp
lock
mov
stos
es
lds
adc
inc
or
jmp
mov
jge
cmp
xchg
xor
je
mov
popa
adc
mov
mov
cmp
call
stos
and
xchg
xchg
xchg
lahf
sahf
mov
mov
or
mov
dec
pop
or
pusha
mov
fimul
xchg
or
imul
cmp
xor
cmps
mov
pop
iret
call
jle
int3
int3
push
mov
sub
jmp
xchg
jg
bound
add
add
sbb
push
jns
sub
dec
sbb
repz
inc
mov
push
cmp
aas
mov
push
inc
clc
adc
push
mov
dec
or
fs
pusha
lock
aad
cmp
jp
sbb
jle
xor
imul
jbe
add
rcr
inc
test
(bad)
push
push
es
jb
jp
jno
clflush
fild
ins
imul
or
push
add
or
shl
jnp
inc
xchg
cs
add
bound
std
pop
(bad)
sbb
cs
jp
sbb
mov
mov
push
aaa
pusha
addr16
cmp
jle
push
bound
or
and
call
sbb
jbe
pop
pushf
jns
aaa
lods
pop
cwde
or
xor
and
mov
mov
mov
jne
pop
sbb
aaa
push
pop
sub
daa
cmp
jae
sub
pop
daa
push
ins
dec
daa
adc
inc
push
sub
sub
pop
and
ret
outs
jle
ret
push
push
pop
and
sub
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
jmp
mov
add
mov
mov
mov
sub
cmp
jae
mov
mov
mov
mov
xor
mov
mov
mov
mov
jmp
mov
mov
pop
ret
push
mov
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
int3
int3
int3
push
mov
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
cmp
jne
xor
jmp
mov
mov
shr
sub
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
sub
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
mov
mov
jmp
mov
jmp
mov
add
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
jmp
mov
add
mov
mov
mov
sub
cmp
jae
mov
mov
mov
mov
xor
mov
mov
mov
mov
jmp
mov
mov
pop
ret
push
mov
call
test
jne
xor
jmp
call
call
pop
ret
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
int3
int3
int3
int3
int3
int3
push
mov
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
mov
push
call
call
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
call
add
mov
cmp
je
push
push
mov
push
call
add
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
sbb
jle
cmps
cmps
push
dec
sbb
fs
sbb
xlat
add
loop
imul
push
add
std
dec
out
mov
xor
outs
ficomp
push
ins
lods
dec
adc
ins
gs
test
sbb
ret
into
sub
or
xor
mov
dec
xchg
mov
and
sbb
mov
adc
adc
mov
cmps
(bad)
mov
push
outs
ins
retf
push
ds
shr
cwde
(bad)
or
dec
mov
fiadd
mov
or
cmp
nop
jb
arpl
pop
mov
xor
pop
xor
outs
add
and
mov
push
test
aam
mov
pop
cdq
push
adc
sub
xchg
adc
add
sub
cmps
fdivp
mov
repz
ret
adc
out
loopne
or
stos
inc
in
sub
xchg
or
stos
inc
scas
div
xor
xor
inc
add
add
inc
xchg
push
ret
pop
in
ror
or
scas
xor
es
movs
or
(bad)
in
push
call
repnz
les
sti
or
test
leave
cmp
and
push
mov
mov
mov
adc
iret
xchg
sbb
jp
mov
je
jnp
inc
(bad)
jp
cmps
or
mov
jns
jns
je
imul
mov
push
adc
sub
rcpps
sub
in
mov
adc
inc
call
inc
xor
add
jo
xchg
xor
sbb
rcl
inc
sbb
xlat
enter
out
rol
mov
mov
sbb
and
pop
xchg
fbld
ret
push
jmp
jo
scas
or
hlt
sbb
fisubr
sub
pop
ins
xor
jae
(bad)
fcomp
lock
mov
stos
es
lds
adc
inc
or
jmp
mov
jge
cmp
xchg
xor
je
mov
popa
adc
mov
mov
cmp
call
stos
and
xchg
xchg
xchg
lahf
sahf
mov
mov
or
mov
dec
pop
or
pusha
mov
fimul
xchg
or
imul
cmp
xor
cmps
mov
pop
iret
call
jle
push
push
cmp
push
adc
xchg
inc
shr
cli
xor
or
push
jbe
adc
sbb
or
fwait
jne
dec
dec
movs
push
adc
out
jl
and
xchg
clc
pop
and
out
xchg
mov
pop
mov
into
or
jno
mov
out
xor
popa
xchg
test
and
mov
adc
xor
dec
cli
stc
inc
dec
jle
mov
mov
(bad)
sub
push
xchg
jge
in
fdivr
adc
(bad)
ins
ss
enter
push
mov
xchg
ret
xor
jmp
int3
xlat
sbb
cld
je
cmp
mov
mov
jmp
mov
mov
mov
test
mov
xchg
adc
inc
les
add
loopne
add
shrd
daa
adc
xor
(bad)
leave
pop
mov
and
push
push
xchg
ror
dec
or
sbb
fs
adc
repnz
jle
and
jmp
into
mov
in
imul
and
push
adc
sub
mov
jo
mov
jmp
mov
jmp
imul
sti
mov
enter
sahf
adc
dec
jbe
push
pop
fistp
xchg
add
(bad)
cdq
lds
xor
cmps
xlat
jp
ret
mov
mov
jno
retf
xchg
and
cmp
inc
inc
cmp
shr
mov
in
mov
xor
arpl
pop
loop
jge
iret
cli
aam
(bad)
cdq
mov
fnstcw
push
dec
inc
cmps
jmp
or
(bad)
mov
cdq
and
mov
sar
push
push
sbb
pop
in
jge
sbb
pop
xchg
test
ret
sbb
jmp
jge
scas
mov
and
jmp
mov
ds
and
pop
mov
arpl
shr
popf
dec
ficom
mov
ss
xchg
mov
jbe
jmp
dec
inc
into
xchg
sbb
inc
xchg
sbb
jl
call
sbb
xor
mov
pop
out
xor
sub
lods
vorps
out
or
stc
dec
(bad)
xor
lds
or
in
pop
cli
mov
enter
adc
sbb
inc
or
rol
mov
sbb
push
mov
ror
out
xor
arpl
ror
mov
cmp
push
stos
rcr
add
xchg
mov
sahf
push
cmp
popa
ins
add
mov
sub
cwde
inc
xchg
imul
jns
push
and
out
ficom
push
lock
or
mov
cmp
call
adc
dec
loope
or
pusha
shl
cmp
jmp
pop
ss
jg
dec
out
fstp
aas
out
imul
cmps
cmp
pop
scas
movs
xor
inc
cmp
neg
adc
(bad)
(bad)
aam
push
xor
(bad)
push
imul
mov
aam
loope
mov
sbb
ds
inc
ret
js
mov
pushf
and
rol
scas
xchg
sar
inc
lods
jp
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
xor
jmp
jle
jo
rcl
inc
imul
sub
cld
pop
sbb
clc
lock
out
ret
imul
and
jecxz
add
int3
call
shl
and
inc
data16
mov
xor
jb
pushf
mov
mov
push
outs
and
pop
push
add
leave
pop
and
lock
cli
and
hlt
fcom
jl
ds
mov
sbb
sub
add
ds
sbb
jle
cmps
cmps
push
dec
sbb
fs
sbb
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
outs
inc
add
loope
dec
ins
(bad)
repnz
retf
xor
mov
jnp
repnz
push
sbb
and
out
xor
jmp
mov
pop
xor
mov
mov
lock
xor
cmps
mov
outs
icebp
jnp
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
loope
dec
ins
(bad)
repnz
retf
xor
mov
int3
int3
call
loope
dec
ins
fmul
int3
pusha
mov
mov
mov
sub
test
je
sub
test
je
test
je
xor
inc
mov
and
shr
xor
dec
jne
mov
and
shr
je
xor
add
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
xor
add
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
mov
and
shr
xor
dec
jne
mov
test
je
xor
inc
mov
and
shr
xor
dec
jne
not
mov
popa
ret
int3
int3
pusha
mov
mov
cld
mov
xor
movs
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
int3
jmp
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
mov
add
mov
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
movs
mov
add
dec
add
mov
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
inc
mov
add
dec
add
inc
add
ror
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
dec
add
mov
add
mov
add
mov
add
dec
add
dec
add
dec
add
mov
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
mov
add
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cdq
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
cmp
jne
repz
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
and
ret
int3
jmp
add
push
fisttp
add
fmul
add
fmul
add
or
add
or
add
(bad)
add
fimul
add
fimul
add
add
add
or
add
fimul
add
fimul
add
fimul
add
fisttp
add
or
add
or
add
add
add
or
add
(bad)
add
(bad)
add
or
add
fmul
add
fmul
add
or
add
fisttp
add
fisttp
add
or
add
add
fisttp
add
or
add
fisttp
add
add
add
fmul
add
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
test
dec
add
and
ins
outs
arpl
imul
sub
js
add
bound
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
jae
add
xor
xor
add
add
add
add
jae
popa
addr16
outs
js
imul
add
dec
gs
popa
addr16
outs
js
imul
add
bound
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
push
add
outs
add
add
je
pop
add
add
outs
add
add
push
add
outs
add
add
je
pop
add
add
outs
add
add
push
add
outs
add
add
je
pop
add
add
outs
add
add
push
add
outs
add
add
je
pop
add
add
outs
add
add
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
and
ins
outs
arpl
imul
je
add
add
add
add
add
je
add
add
add
add
add
push
gs
outs
outs
jb
popa
je
outs
outs
push
push
add
xor
inc
add
add
add
add
add
xor
cmp
xor
add
xor
popa
add
add
cmp
sub
add
add
add
add
add
add
inc
add
add
add
add
add
and
add
and
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
mov
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
sti
mov
dec
add
fmul
add
add
add
or
add
add
add
add
add
or
add
fmul
add
add
add
fmul
add
add
add
add
add
fmul
add
or
add
add
add
fisttp
add
xlat
or
add
add
add
fisttp
add
fisttp
add
fmul
add
fmul
add
or
add
or
add
(bad)
add
fimul
add
fimul
add
add
add
or
add
fimul
add
fimul
add
fimul
add
fisttp
add
or
add
or
add
add
add
or
add
(bad)
add
(bad)
add
or
add
fmul
add
fmul
add
or
add
fisttp
add
fisttp
add
or
add
add
fisttp
add
or
add
fisttp
add
add
add
fmul
add
inc
js
je
jb
arpl
jae
aam
inc
gs
imul
mov
inc
jb
popa
je
dec
jne
gs
add
popf
add
popa
jo
ins
ins
outs
arpl
test
inc
jne
jb
outs
je
jb
arpl
jae
mov
jo
jb
add
jmp
dec
popa
outs
fs
gs
outs
outs
jb
popa
je
outs
outs
add
fs
popa
imul
ins
gs
bound
arpl
add
je
jne
inc
bound
push
je
imul
add
je
outs
fs
gs
popa
outs
fs
gs
add
push
add
imul
jb
add
add
je
jb
arpl
jae
gs
jo
add
add
fs
imul
add
and
ins
gs
push
fs
imul
jb
popa
je
inc
imul
gs
push
push
jb
outs
jb
je
add
add
je
popa
outs
fs
gs
outs
outs
jb
popa
je
outs
outs
add
and
inc
gs
jb
arpl
fs
jae
add
push
add
imul
ins
ins
outs
arpl
add
add
inc
bound
addr16
jb
jae
outs
je
inc
add
outs
jae
dec
popa
outs
fs
add
add
jne
jo
outs
fs
push
add
popa
je
push
push
add
mov
gs
outs
arpl
fs
arpl
ins
outs
je
add
add
fs
imul
add
test
gs
outs
fs
gs
popa
outs
fs
gs
add
pop
add
imul
jb
je
arpl
mov
ins
jae
jb
outs
push
add
pop
add
je
jb
jbe
je
push
jb
imul
push
add
push
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
ins
add
test
jo
je
push
popa
addr16
add
xchg
add
push
imul
outs
arpl
add
add
fs
je
push
imul
outs
add
je
jns
je
ins
dec
gs
imul
inc
jb
popa
je
push
imul
push
add
ja
imul
sbb
push
gs
jae
addr16
add
xor
imul
popa
jae
inc
js
add
sbb
inc
gs
inc
add
add
imul
add
aad
dec
outs
popa
fs
jne
jae
jb
add
add
ins
ins
push
imul
push
outs
jb
imul
popa
jae
push
add
sahf
add
je
imul
add
je
outs
jns
imul
add
fs
popa
imul
dec
outs
popa
fs
je
imul
dec
gs
popa
addr16
outs
js
add
inc
push
xor
cs
ins
add
push
add
gs
je
push
outs
ins
imul
add
inc
jb
popa
je
inc
dec
inc
imul
add
gs
je
inc
outs
ins
jo
je
bound
inc
add
pop
add
ins
arpl
push
arpl
rol
inc
gs
gs
dec
bound
arpl
int
inc
gs
gs
inc
inc
add
adc
inc
imul
inc
dec
xor
cs
ins
add
add
je
outs
fs
gs
imul
js
add
push
push
inc
push
dec
cs
dec
dec
add
add
arpl
jne
dec
popa
jo
gs
imul
addr16
ins
ins
add
jp
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
js
add
dec
inc
push
dec
xor
cs
ins
add
xchg
add
ins
push
outs
ja
outs
add
ins
imul
outs
arpl
jae
add
add
outs
push
gs
js
gs
imul
gs
add
push
outs
push
gs
js
gs
imul
gs
add
dec
out
mov
and
add
and
dec
add
add
add
aad
add
dec
add
dec
add
dec
add
dec
add
aad
add
aad
add
dec
add
dec
add
dec
add
add
add
aad
add
add
add
je
jmp
jb
sub
push
pop
popf
jmp
inc
icebp
pop
jmp
jmp
cmp
pushf
add
popf
ret
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
inc
pusha
nop
popa
mov
jmp
inc
pop
push
and
mov
cmc
jg
jg
xor
add
jmp
fisttp
sbb
xor
scas
push
push
mov
pop
nop
jmp
pop
imul
xlat
scas
pushf
add
popf
ret
pushf
push
pop
popf
jmp
cs
dec
rcr
adc
xor
and
push
pop
shr
ret
push
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
jnp
jo
adc
add
pop
jmp
cdq
push
push
jmp
leave
and
cmp
pop
mov
jmp
fcom
or
pusha
nop
popa
mov
jmp
cmp
sub
pusha
pushf
add
popf
popa
jmp
pop
jb
push
sbb
add
pop
add
jmp
push
dec
dec
push
mov
pop
sub
jmp
imul
push
jmp
sahf
and
pop
hlt
adc
adc
jmp
xor
adc
jmp
sbb
add
inc
sub
jmp
pop
sbb
aaa
sub
popa
mov
jmp
xchg
lea
pop
mov
jmp
jg
cmp
call
nop
jmp
and
xchg
push
pop
nop
jmp
into
cmp
add
popf
popa
jmp
dec
add
push
push
pushf
add
popf
ret
mov
jmp
pop
jbe
push
(bad)
jmp
dec
scas
dec
lods
je
add
add
pop
jmp
and
or
sbb
pop
jmp
cmc
push
sub
jmp
xchg
cmp
mov
nop
jmp
jmp
outs
aam
push
sbb
jmp
add
jo
or
popa
nop
jmp
and
shl
pop
popf
mov
jmp
inc
pusha
nop
popa
jmp
fwait
pop
rol
dec
loope
pushf
push
pop
popf
je
jmp
inc
nop
imul
jmp
pop
fst
push
dec
sar
pushf
add
popf
popa
mov
jmp
dec
mov
add
adc
add
dec
pushf
pop
jno
fstp
push
pop
jmp
sub
addr16
nop
mov
jmp
push
mov
jns
xor
inc
and
xchg
jmp
sbb
inc
push
pop
jmp
jmp
adc
jb
jmp
cmp
mov
sbb
pushf
push
pop
popf
jmp
sub
and
or
aas
icebp
pop
ficomp
outs
repnz
sbb
and
stc
and
pushf
push
pop
popf
mov
jmp
fcomp
or
xchg
xchg
jmp
js
add
std
out
clc
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
addr16
xor
jmp
mov
pop
xor
add
jmp
jmp
xchg
adc
and
add
mov
add
das
cmc
adc
sbb
jmp
mov
fs
or
add
jmp
adc
jnp
push
pop
jmp
daa
inc
and
add
pop
cmp
push
pop
jmp
jno
arpl
sbb
push
mov
jmp
jae
dec
adc
nop
popa
jmp
iret
xor
sub
mov
jmp
or
sbb
inc
and
jmp
push
xor
add
pop
jmp
and
cmps
jb
pop
push
lea
pop
cmp
jmp
dec
and
add
popf
popa
jmp
xor
nop
popa
call
nop
jmp
movs
pop
push
mov
pop
jmp
es
push
pushf
push
pop
popf
push
jmp
add
mov
das
or
add
popf
popa
jmp
adc
scas
or
mov
jmp
inc
xchg
or
push
pop
popf
cmp
jmp
pop
pop
push
push
pushf
add
popf
ret
add
jmp
add
cmp
popa
(bad)
dec
pushf
push
pop
popf
nop
jmp
enter
fadd
pusha
nop
popa
push
jmp
add
xor
or
call
pop
jno
js
dec
dec
push
pushf
add
popf
ret
push
pop
jmp
push
aaa
and
mov
mov
sbb
(bad)
sbb
add
pop
ins
pop
ins
jb
and
jmp
add
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
jmp
cmp
outs
or
(bad)
ins
pusha
nop
popa
mov
jmp
sbb
add
push
fcom
and
jmp
push
pop
popf
jmp
sbb
jl
popf
add
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
push
push
pushf
add
popf
ret
nop
jmp
int
fisubr
mov
pop
nop
jmp
inc
je
outs
iret
inc
int
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
mov
mov
and
aas
ins
(bad)
xchg
xchg
jmp
imul
push
jmp
fs
nop
nop
jmp
dec
mov
cmp
push
pop
jmp
arpl
jns
dec
sbb
fisub
pushf
add
popf
ret
push
lea
pop
push
jmp
xor
xchg
jle
pop
jmp
dec
movs
ds
aad
nop
cmp
cmps
and
add
pop
dec
add
cld
add
add
jmp
pop
adc
pushf
push
pop
popf
nop
jmp
lea
mov
push
jmp
adc
scas
aas
mov
mov
xchg
mov
add
sub
inc
and
xchg
jmp
push
jg
push
pop
mov
jmp
add
xchg
jmp
dec
es
lea
pop
jmp
mov
addr16
push
pop
popf
push
jmp
xor
sbb
pushf
push
pop
popf
sub
jmp
mov
jmp
jmp
xchg
push
pop
nop
jmp
or
mov
and
imul
js
ret
jmp
pusha
movs
pop
ja
mov
gs
pop
call
nop
jmp
inc
test
or
add
data16
cmp
mov
add
add
pusha
pop
pop
iret
adc
add
push
xchg
xchg
nop
jmp
int3
and
popf
popa
jmp
adc
das
test
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
mov
jmp
mov
out
inc
mov
jmp
outs
in
das
(bad)
adc
inc
and
nop
jmp
nop
push
jmp
xchg
push
pop
nop
push
jmp
jne
lea
pop
jmp
inc
sbb
push
mov
pop
jmp
aaa
sbb
mov
jmp
sti
inc
int3
push
inc
outs
push
pop
jmp
das
fadd
add
paddsw
nop
jmp
retf
ins
add
or
ins
jb
aas
xor
out
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
jmp
mov
pushf
add
popf
popa
add
jmp
pop
push
push
pushf
add
popf
ret
push
mov
pop
nop
jmp
xor
inc
or
push
pop
nop
nop
jmp
xor
add
sbb
pop
jmp
sar
sbb
and
add
popf
ret
push
mov
pop
push
jmp
es
outs
push
mov
pop
mov
jmp
in
outs
push
lea
pop
nop
jmp
sbb
adc
repz
pushf
add
popf
ret
push
lea
pop
push
jmp
sub
ds
inc
pushf
push
pop
popf
cmp
jmp
inc
les
inc
and
xchg
jmp
and
js
shr
or
add
test
xchg
add
cmp
jmp
or
pop
jmp
jmp
repnz
aas
jmp
xchg
push
pop
nop
jmp
and
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
addr16
mov
pop
jmp
outs
imul
and
xchg
jmp
cmp
push
nop
mov
jmp
and
in
pusha
pushf
add
popf
popa
xor
jmp
push
pop
jns
inc
and
xchg
push
jmp
sub
sub
xchg
pushf
add
popf
ret
push
mov
pop
jmp
cmc
ins
bound
jmp
cmp
push
dec
xor
nop
jmp
push
sbb
popa
xor
nop
jmp
cmp
into
inc
push
pop
mov
push
add
leave
dec
dec
jp
das
xor
push
outs
pusha
pushf
add
popf
popa
pop
jmp
test
sub
sbb
(bad)
sbb
rcl
add
inc
and
xchg
mov
jmp
and
add
inc
or
push
pop
nop
jmp
inc
push
push
lea
pop
push
jmp
sbb
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
jmp
inc
push
je
lea
pop
jmp
je
and
xor
mov
jmp
and
xor
inc
sbb
(bad)
call
push
or
pop
popa
dec
loope
pusha
pushf
add
popf
popa
jmp
xor
dec
push
push
mov
pop
nop
jmp
jp
ss
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
jmp
pop
jo
dec
pushf
push
pop
popf
nop
jmp
xchg
xor
push
pop
jmp
or
or
sbb
les
jmp
or
mov
jmp
mov
jl
xlat
fidivr
xchg
push
adc
ret
push
pop
mov
jmp
fs
jbe
nop
jmp
or
sub
sbb
xchg
xchg
jmp
sbb
and
inc
and
nop
jmp
and
mov
pushf
add
popf
ret
push
pop
call
nop
jmp
jns
and
sbb
pop
nop
jmp
imul
popf
mov
jmp
retf
jl
adc
pop
add
sbb
or
dec
add
add
aas
shl
adc
push
pushf
add
popf
ret
push
pop
mov
jmp
add
(bad)
jbe
jne
inc
and
xchg
nop
jmp
inc
jb
add
inc
or
push
pop
nop
jmp
jne
push
mov
pop
mov
jmp
dec
ds
pushf
add
popf
popa
jmp
je
and
das
push
pushf
add
popf
ret
push
mov
pop
jmp
sti
data16
pushf
push
pop
popf
mov
jmp
push
push
pop
movzx
jmp
ror
or
push
pushf
add
popf
ret
pusha
nop
popa
jmp
inc
cmp
pop
sbb
nop
jmp
inc
test
cmp
or
add
test
jne
jno
cs
jmp
and
dec
gs
cmp
jmp
xchg
cmp
push
test
pusha
nop
popa
mov
jmp
add
sub
add
mov
stos
ins
push
pop
mov
jmp
les
jmp
jno
push
mov
aad
add
test
add
std
(bad)
jmp
add
sbb
jmp
cmp
popa
mov
jmp
jl
pusha
pushf
add
popf
popa
nop
jmp
adc
sar
pushf
push
pop
popf
mov
jmp
nop
inc
pusha
jo
mov
add
popf
ret
jne
jmp
fs
push
pop
dec
jmp
and
xor
inc
loop
enter
pusha
nop
popa
mov
jmp
pop
push
loop
sub
popf
nop
jmp
bound
bound
cmp
nop
mov
jmp
sub
pop
ret
add
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
cmp
jmp
popa
pusha
nop
popa
call
nop
jmp
movs
pop
jmp
xchg
push
pop
nop
jmp
mov
xchg
xchg
jmp
and
lea
pop
nop
jmp
data16
cmp
add
popf
popa
nop
jmp
push
ja
adc
es
inc
pop
mov
dec
push
pusha
pushf
add
popf
popa
mov
jmp
and
ret
rcr
inc
mov
popf
ret
pusha
pushf
add
popf
popa
jmp
xor
cmp
pusha
nop
popa
jmp
neg
cs
or
jmp
xor
cmp
inc
or
push
pop
nop
jmp
mov
lea
jmp
mov
dec
pop
push
jne
jmp
xchg
push
pop
nop
jmp
gs
mov
jmp
or
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
push
in
jl
push
pusha
nop
popa
mov
jmp
jno
jae
adc
add
sbb
pop
mov
jmp
ins
push
pop
mov
jmp
mov
xchg
xchg
nop
jmp
clc
pop
pusha
nop
popa
jmp
jmp
ins
pusha
imul
pushf
push
pop
popf
jmp
jmp
ja
jmp
pop
dec
push
lea
ds
nop
popa
mov
jmp
push
cmps
push
popa
push
jmp
mov
pop
pushf
push
pop
popf
call
nop
jmp
inc
nop
jmp
jmp
push
scas
ss
pusha
pushf
add
popf
popa
jmp
jne
pop
push
push
pop
mov
jmp
jae
add
imul
add
popf
ret
jmp
sub
inc
retf
pop
out
push
pusha
pushf
add
popf
popa
jmp
data16
push
push
sbb
pop
push
jmp
push
pushf
dec
push
pop
push
jmp
sub
xor
jmp
and
jns
inc
cmp
jne
push
cld
jmp
mov
jne
sub
add
cmp
ins
pop
pop
jnp
push
add
sbb
pop
mov
jmp
jb
push
pop
popf
jmp
das
and
or
push
push
pop
call
nop
jmp
pop
loop
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
nop
jmp
mov
ror
pop
nop
jmp
test
aas
sub
adc
jmp
dec
jo
imul
lea
pop
jmp
inc
jnp
push
int
pushf
push
pop
popf
jmp
add
jo
dec
push
pop
nop
jmp
ds
push
mov
add
inc
or
push
pop
nop
jmp
sbb
pusha
pushf
add
popf
popa
jmp
and
push
pop
mov
jmp
scas
push
popf
popa
add
jmp
fmul
lea
pop
mov
jmp
pop
in
push
pushf
add
popf
ret
push
pushf
add
popf
ret
xchg
xchg
jmp
repnz
push
pop
popf
nop
jmp
enter
popf
imul
(bad)
(bad)
jge
dec
bound
pusha
pushf
add
popf
popa
mov
jmp
sbb
pop
(bad)
fistp
paddsb
popf
ret
nop
mov
jmp
push
and
and
inc
and
jmp
popa
fdiv
pushf
push
pop
popf
jmp
jmp
je
mov
jmp
imul
cmp
jmp
cmp
sbb
int
add
popf
ret
nop
sub
jmp
xor
or
sub
add
pop
mov
jmp
outs
push
pusha
nop
popa
push
jmp
cmp
add
daa
seto
retf
call
arpl
pusha
pop
arpl
and
add
dec
pop
lahf
pop
test
ret
popf
popa
jmp
js
dec
aas
outs
pushf
push
pop
popf
mov
jmp
dec
pusha
pushf
add
popf
popa
jmp
inc
es
add
test
in
(bad)
(bad)
jmp
sub
and
push
push
pushf
add
popf
ret
jmp
jne
outs
jne
repz
jae
sti
pop
pusha
nop
popa
jne
jmp
loopne
jmp
xchg
push
pop
nop
jmp
movs
js
xchg
in
add
mov
add
pop
popa
mov
sbb
push
mov
pop
push
jmp
push
bound
add
popf
popa
jmp
or
adc
jmp
jge
dec
and
pusha
nop
popa
mov
jmp
hlt
and
(bad)
dec
sub
pop
pop
jbe
gs
add
popa
mov
jmp
add
div
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
jae
jmp
dec
pusha
nop
popa
call
nop
jmp
or
mov
pop
mov
jmp
je
call
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
add
jmp
aad
repnz
jmp
sbb
jg
cmp
popf
nop
jmp
jno
xchg
cmp
adc
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
jmp
jg
mov
jmp
cmp
xchg
out
aaa
inc
sub
add
aas
sbb
shl
out
jmp
popa
stos
ins
cli
or
adc
add
add
cmp
ss
jne
dec
nop
sbb
inc
and
jmp
daa
adc
lea
pop
jmp
not
jno
mov
add
sbb
hlt
pop
add
sti
outs
mov
jmp
xor
dec
adc
pop
push
pop
mov
jmp
push
cmp
jbe
inc
jmp
xchg
push
pop
nop
nop
jmp
xor
nop
popa
mov
jmp
pop
adc
jmp
outs
and
xor
pop
pushf
push
pop
popf
sub
jmp
mov
inc
and
xchg
jmp
sub
je
or
add
popf
ret
pushf
push
pop
popf
cmp
jmp
imul
inc
and
cmp
push
inc
popf
ret
push
lea
pop
imul
jmp
fs
imul
push
mov
sar
pop
(bad)
pop
std
xor
add
popf
popa
jmp
jno
js
push
pop
jmp
dec
loop
nop
jp
inc
repnz
push
lea
pop
call
nop
jmp
push
mov
pop
imul
jmp
arpl
add
popf
popa
mov
jmp
sub
pushf
add
popf
popa
mov
jmp
jge
push
lea
pop
xor
jmp
repz
jmp
imul
sbb
push
jp
jns
jmp
pushf
add
popf
ret
push
pop
mov
jmp
jp
sbb
out
mov
inc
and
icebp
imul
popf
ret
jmp
xchg
push
pop
nop
jmp
addr16
push
pushf
add
popf
ret
push
pop
push
jmp
fs
add
pop
aam
jmp
xchg
push
pop
nop
jmp
fs
pusha
nop
popa
jmp
daa
imul
inc
pushf
push
pop
popf
mov
jmp
ret
inc
push
lea
pop
mov
jmp
xor
pushfw
push
pop
popf
jmp
sub
sub
push
aas
sub
add
popf
popa
mov
jmp
jle
bound
add
popf
popa
mov
jmp
retf
cs
pushf
add
popf
ret
push
lea
pop
jmp
xor
das
push
lea
pop
mov
jmp
xor
add
popf
popa
jmp
push
or
nop
popa
jmp
cld
adc
mov
jmp
xchg
push
pop
nop
jmp
xchg
sbb
lock
pushf
add
popf
ret
push
lea
pop
mov
jmp
je
imul
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
lea
pop
jmp
jge
jmp
popf
add
jmp
sbb
sub
pop
mov
pushf
add
popf
ret
pushf
push
pop
popf
jmp
jo
push
dec
sub
xor
add
pop
movzx
jmp
jae
aaa
nop
jmp
cs
pop
in
xor
pop
push
pushf
add
popf
ret
nop
div
jmp
push
out
dec
push
add
imul
jmp
movs
and
lea
pop
jmp
dec
pop
cmp
mov
mov
ins
bound
jl
pushf
adc
imul
jmp
or
cld
pusha
jmp
push
addr16
sbb
pop
cmp
add
add
jmp
mov
adc
inc
and
mov
ret
push
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
jno
inc
push
jno
add
inc
or
push
pop
nop
jmp
ret
push
pop
popf
jmp
jbe
sbb
jg
pushf
add
popf
popa
mov
jmp
mov
ret
popf
popa
nop
jmp
inc
dec
inc
pop
pusha
pushf
add
popf
popa
xor
jmp
adc
cmp
pop
jmp
test
jnp
outs
jmp
jmp
ja
sbb
pusha
push
mov
pop
push
jmp
xor
jnp
push
pop
popf
mov
jmp
out
and
xchg
xchg
push
jmp
and
nop
jmp
mov
and
pop
xor
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
push
push
mov
pop
nop
jmp
sub
dec
pusha
nop
popa
jmp
and
pop
cmp
das
xchg
xchg
jmp
inc
push
imul
add
popf
ret
pusha
pushf
add
popf
popa
jmp
add
pusha
pushf
add
popf
popa
jmp
popa
dec
je
push
push
mov
pop
imul
jmp
and
and
add
jbe
pop
xor
xor
push
pusha
pushf
add
popf
popa
push
jmp
loop
ret
add
mov
pop
jmp
mov
jp
push
add
popf
ret
push
lea
pop
nop
jmp
add
in
push
pop
push
jmp
pop
mov
sub
and
nop
popa
cmp
jmp
and
pop
pop
jmp
xchg
aas
sbb
xor
mov
jmp
daa
adc
loop
aam
pushf
add
popf
ret
push
mov
pop
jmp
ds
sbb
cmps
and
add
sbb
cmp
popa
jmp
push
adc
cmp
pop
leave
push
pusha
pushf
add
popf
popa
jmp
outs
sub
push
sbb
add
jmp
push
sub
xor
add
pop
jmp
shr
pop
scas
cs
pushf
add
popf
ret
jmp
jbe
push
dec
jno
dec
xor
pop
mov
jmp
mov
lea
pop
jmp
data16
cs
xchg
xchg
jmp
add
or
inc
and
(bad)
dec
mov
jmp
out
sbb
inc
ret
ins
jne
xchg
xchg
jmp
adc
inc
pusha
nop
popa
push
jmp
dec
pop
pop
loope
push
xor
aad
jmp
push
dec
push
popf
ret
jmp
xchg
push
pop
nop
jmp
mov
push
lea
pop
nop
jmp
xor
jae
test
adc
add
aad
(bad)
inc
jl
inc
nop
nop
jmp
and
jnp
push
push
ins
push
or
push
mov
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
jg
push
lea
pop
jmp
mov
jo
daa
add
xlat
pushf
add
popf
ret
push
lea
pop
nop
jmp
add
je
push
pop
jmp
dec
pop
push
es
cmps
minps
push
lea
pop
mov
jmp
pop
sub
int3
adc
pushf
add
popf
ret
pushf
push
pop
popf
jmp
jne
js
sbb
push
jmp
sbb
sbb
dec
push
mov
pop
push
jmp
cmp
push
pushf
add
popf
ret
mov
jmp
sbb
mov
jmp
sti
js
pop
stc
pop
pop
sub
in
(bad)
(bad)
fiadd
outs
push
daa
inc
fs
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pop
jmp
and
adc
pop
loope
push
pushf
add
popf
ret
push
pushf
add
popf
ret
nop
call
nop
jmp
lahf
adc
adc
mov
add
jle
sbb
les
nop
jmp
clc
pop
adc
mov
mov
sbb
adc
stos
pushf
add
popf
ret
push
pop
sub
jmp
jecxz
mov
cmp
pop
jmp
rcr
gs
push
push
pushf
add
popf
ret
push
pop
call
jmp
and
cmp
add
inc
or
push
pop
nop
jmp
dec
outs
push
pop
add
jmp
movd
push
pop
popf
jmp
jo
and
push
lea
pop
push
jmp
dec
xor
mov
pop
nop
jmp
inc
pop
push
pushf
add
popf
popa
jmp
ins
test
sar
frstpm(287
(bad)
call
dec
test
inc
jno
push
pop
jmp
dec
mov
cld
and
cmp
sbb
popa
mov
jmp
cs
mov
jmp
xchg
push
pop
nop
nop
jmp
pop
push
mov
pop
mov
jmp
jnp
pop
mov
jmp
sahf
pop
pusha
xor
pushf
push
pop
popf
jmp
jmp
movs
sub
jnp
add
adc
cmp
sub
es
ss
inc
and
stos
or
lea
pop
jmp
mov
out
sbb
pusha
nop
popa
jmp
jmp
jno
push
pushf
push
pop
popf
nop
jmp
sub
sbb
call
jmp
push
cmp
mov
add
popf
ret
pusha
nop
popa
jmp
jno
stc
xor
pusha
pushf
add
popf
popa
mov
jmp
sahf
outs
push
lea
pop
call
nop
jmp
push
pop
jmp
je
jns
dec
cdq
cmp
imul
nop
jmp
ins
xor
push
jmp
cmp
sub
xor
out
(bad)
(bad)
js
inc
jp
sbb
mov
jmp
rcr
pop
xor
push
lea
pop
jmp
mov
inc
add
and
adc
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
jmp
aaa
inc
je
push
pushf
add
popf
ret
push
lea
pop
mov
jmp
dec
push
lea
pop
jmp
push
add
sub
inc
and
xchg
jmp
arpl
add
popf
popa
add
jmp
es
push
pushf
add
popf
ret
pushf
push
pop
popf
jmp
dec
mov
push
cmp
jno
nop
popa
jmp
push
push
pop
(bad)
push
ins
jo
jmp
sbb
xor
add
add
dec
fiadd
and
pop
dec
retf
ret
nop
mov
jmp
jnp
inc
or
mov
pop
mov
jmp
jae
adc
inc
and
fbld
gs
ret
push
pop
mov
jmp
push
push
pushf
add
popf
ret
push
pop
ret
jmp
cmps
and
pop
in
pop
push
pop
jmp
ds
dec
cwde
ss
add
nop
lea
jmp
pop
mov
stos
and
add
add
sbb
pop
jmp
sub
cwde
or
xchg
push
jmp
push
push
pop
jmp
dec
loopne
mov
and
jmp
(bad)
call
and
push
in
sbb
dec
pushf
push
pop
popf
cmp
jmp
sub
push
nop
jmp
mov
sbb
xor
push
pop
popf
jmp
sub
sbb
jmp
xchg
jae
push
adc
ja
das
nop
jmp
sub
fist
dec
out
ficom
nop
call
nop
jmp
dec
and
add
inc
or
push
pop
nop
nop
jmp
add
(bad)
jmp
dec
in
xor
and
cmps
ja
lea
pop
jmp
add
aaa
nop
jmp
hlt
pop
adc
rcl
pop
push
lea
pop
jmp
dec
inc
sub
push
lea
pop
jmp
(bad)
dec
(bad)
sub
or
add
sbb
pop
jmp
mov
test
mov
pop
fwait
pushf
add
popf
ret
xchg
xchg
xor
jmp
jp
inc
and
xchg
pop
jmp
xor
push
pop
popf
mov
jmp
push
out
pop
nop
mov
jmp
ret
ins
pop
pop
call
nop
jmp
push
(bad)
imul
pushf
add
popf
popa
jmp
push
add
adc
sub
xchg
mov
add
push
mov
popf
ret
push
pushf
add
popf
ret
push
lea
pop
mov
jmp
adc
nop
jmp
aas
jae
sbb
pop
mov
add
sbb
xchg
(bad)
(bad)
(bad)
cmp
pushf
add
popf
popa
movzx
jmp
pop
imul
jmp
xchg
xchg
pcmpeqb
adc
mov
in
add
popf
ret
push
pop
mov
jmp
adc
in
dec
pusha
pushf
add
popf
popa
jmp
push
mov
jmp
sbb
out
add
jo
mov
in
jmp
xchg
push
pop
nop
jmp
je
pusha
nop
popa
add
jmp
sbb
popa
(bad)
push
nop
push
jmp
cli
pop
in
sbb
pop
sbb
push
pop
popf
cmp
jmp
jne
cmp
push
mov
pop
mov
jmp
pop
push
mov
pop
mov
jmp
sub
hlt
or
add
push
inc
push
popf
ret
jmp
daa
xchg
sub
leave
ja
push
pop
popf
jmp
jmp
test
nop
jmp
jne
mov
int
sbb
jno
xchg
xchg
jmp
sub
imul
ret
popf
popa
jmp
and
add
daa
push
pop
jmp
js
xor
bound
lea
pop
push
jmp
xor
sbb
imul
sbb
es
push
das
out
dec
inc
pusha
nop
popa
mov
jmp
or
mov
pop
xor
jmp
xchg
push
nop
nop
jmp
push
test
add
retf
icebp
(bad)
call
push
push
aas
jl
sub
xor
(bad)
call
xor
and
inc
outs
ja
or
add
ja
push
mov
dec
push
pop
je
jmp
jns
and
add
pop
or
add
inc
or
push
pop
nop
jmp
mov
popf
mov
jmp
jg
mov
pop
jmp
add
test
lock
mov
add
cmp
inc
popf
ret
xchg
xchg
jmp
cmp
pusha
nop
popa
mov
jmp
iret
and
mov
jmp
and
nop
jmp
xchg
sub
sub
jmp
xchg
push
pop
nop
jmp
adc
jmp
xchg
push
pop
nop
nop
jmp
bound
loope
lea
push
inc
jae
ret
pusha
pushf
add
popf
popa
pop
jmp
fiadd
jo
pusha
nop
popa
call
nop
jmp
jmp
inc
and
jmp
and
pushf
push
pop
popf
jmp
imul
lods
and
js
add
inc
or
push
pop
nop
jmp
pop
mov
pop
jmp
xlat
pop
xor
inc
or
push
pop
nop
jmp
push
or
xor
add
div
(bad)
(bad)
jmp
cmp
(bad)
(bad)
call
dec
jmp
pop
mov
push
cmp
pusha
nop
popa
jmp
inc
or
outs
sahf
or
nop
jmp
loop
out
or
nop
jmp
dec
pmulhuw
dec
mov
mov
pop
nop
jmp
inc
inc
push
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
push
jmp
adc
or
jmp
or
cli
dec
cmp
inc
nop
jmp
loope
nop
jne
dec
cmp
push
pop
jmp
gs
cs
inc
sahf
and
nop
jmp
mov
and
das
push
inc
push
lea
pop
jmp
pop
dec
mov
add
sbb
pop
jmp
test
pop
nop
call
nop
jmp
scas
arpl
sub
dec
add
and
add
out
pop
mov
lock
add
popf
ret
push
lea
pop
cmp
jmp
dec
jbe
ret
cld
out
mov
add
dec
pop
pop
popf
ret
nop
jmp
jmp
jo
ja
adc
pop
jne
jmp
sbb
and
and
adc
ret
xchg
xchg
nop
jmp
sbb
pushf
push
pop
popf
mov
jmp
iret
dec
or
push
pop
popf
jmp
jo
outs
cmp
jb
jb
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
pop
or
fbld
out
mov
inc
and
xor
cmp
add
sbb
(bad)
cmc
(bad)
dec
or
and
sub
popf
ret
push
mov
pop
nop
jmp
sub
push
push
mov
pop
jmp
repnz
lods
jns
(bad)
(bad)
add
dec
test
add
jmp
ja
push
xor
fwait
daa
pusha
pushf
add
popf
popa
imul
jmp
loopne
pushf
push
pop
popf
mov
jmp
js
mov
pop
push
jmp
or
nop
popa
jmp
movs
push
push
inc
loopne
in
pushf
push
pop
popf
mov
jmp
and
jge
add
mov
(bad)
jmp
stos
dec
xchg
ins
shl
imul
push
adc
pop
dec
or
or
pop
jmp
push
xor
pop
sub
jbe
pushf
add
popf
popa
jmp
push
popa
adc
or
add
pop
test
or
popf
jmp
xor
sub
or
push
pop
nop
pop
jmp
push
sbb
pop
imul
jmp
aaa
push
pushf
add
popf
ret
push
pop
jae
jmp
inc
ret
mov
and
and
fnstsw
sub
ret
pusha
nop
popa
jmp
in
inc
sbb
lea
pop
mov
jmp
push
sbb
inc
or
push
pop
nop
push
jmp
push
mov
jmp
inc
cmp
jmp
xchg
push
pop
nop
jmp
sbb
push
lea
pop
jmp
int3
sbb
xchg
je
mov
jmp
xor
inc
ss
nop
jmp
and
jge
sbb
jmp
daa
jns
jns
popf
push
push
pop
jae
jmp
jo
je
mov
inc
and
jbe
aas
pusha
popf
ret
push
mov
pop
imul
jmp
dec
nop
movzx
jmp
js
adc
or
add
popf
popa
sub
jmp
mov
(bad)
dec
fstp
inc
and
nop
jmp
jmp
ss
jge
out
sbb
(bad)
mov
jo
or
sbb
nop
popa
mov
jmp
je
sbb
push
pushf
add
popf
ret
push
lea
pop
mov
jmp
outs
dec
jne
push
pop
jmp
push
sahf
imul
pusha
pushf
add
popf
popa
jmp
add
pop
push
push
pop
popf
nop
jmp
jno
ds
dec
dec
jmp
xchg
push
pop
nop
jmp
leave
adc
inc
and
ret
jmp
or
jmp
or
lods
pop
lods
ss
lea
pop
mov
jmp
xchg
xchg
jmp
popa
xor
pop
jmp
jmp
add
sbb
jmp
or
pusha
nop
popa
add
jmp
jne
xor
pop
popf
jmp
xor
jb
adc
jl
pushf
add
popf
popa
mov
jmp
dec
imul
inc
pop
sub
inc
lds
push
jmp
xor
adc
push
pop
cmp
jmp
bound
fs
push
pop
popf
jmp
and
je
cs
dec
pushf
push
pop
popf
nop
jmp
lar
inc
sbb
jmp
add
dec
out
xor
pusha
pushf
add
popf
popa
cmp
jmp
sbb
inc
and
jmp
push
jmp
inc
and
pop
pop
cwde
push
popf
ret
jmp
jmp
loop
pop
push
fcom
jbe
jmp
add
pushf
add
popf
popa
jmp
or
pusha
nop
popa
mov
jmp
mov
cmp
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
xor
cmp
(bad)
dec
ins
adc
sbb
pop
jmp
bound
mov
scas
addr16
ins
pusha
nop
popa
nop
jmp
inc
jbe
pop
pop
xchg
jne
pop
mov
jmp
mov
and
sti
aaa
push
pushf
add
popf
ret
push
pop
jmp
adc
adc
and
dec
(bad)
jl
jmp
jo
jecxz
imul
aaa
and
cmp
jmp
int
jmp
jmp
cmp
ror
inc
pusha
pushf
add
popf
popa
nop
jmp
sahf
je
cs
add
jmp
sub
jg
jae
or
add
popf
popa
xor
jmp
or
sub
jmp
add
push
push
and
or
pushf
add
popf
ret
nop
cmp
jmp
ror
push
cmp
cmp
xor
(bad)
call
jno
jne
nop
popa
jne
jmp
imul
add
push
and
jae
dec
ficomp
add
sbb
pop
push
jmp
xor
jmp
jmp
stos
ins
pop
or
pop
xlat
cmc
xchg
pushf
add
popf
ret
push
mov
pop
jmp
add
nop
cmp
(bad)
pushf
add
popf
ret
add
jmp
cmp
dec
sub
lea
pop
jmp
fisub
pop
imul
sbb
push
adc
add
xor
or
add
sbb
pop
jmp
fisubr
jb
int3
ret
pushf
add
popf
ret
xchg
xchg
push
jmp
jg
jmp
xchg
push
pop
nop
jmp
lods
arpl
add
pop
jmp
jns
out
sub
es
push
pop
popf
xor
jmp
adc
nop
mov
jmp
jae
dec
fbld
xchg
push
pop
nop
jmp
movs
add
xchg
jmp
xor
jnp
test
add
jmp
addr16
xor
idiv
inc
adc
xor
pushf
add
popf
popa
jmp
inc
add
cmp
popa
jmp
push
pop
cmp
aam
cdq
jno
pop
std
(bad)
dec
popf
sbb
or
xor
imul
cmp
pop
sub
add
inc
and
nop
jmp
fsub
jmp
pop
dec
arpl
pop
push
pop
mov
jmp
xlat
pop
sub
add
inc
or
push
pop
nop
nop
jmp
xor
inc
and
xchg
jmp
push
mov
ret
popf
popa
mov
jmp
fs
popf
popa
cmp
jmp
imul
add
add
inc
std
(bad)
(bad)
fistp
add
pushf
add
popf
popa
ret
jmp
adc
js
nop
popa
jmp
outs
sub
ds
xor
pop
mov
jmp
mov
adc
jg
nop
popa
je
jmp
xlat
js
inc
and
xchg
jmp
dec
sti
pop
push
pop
push
jmp
bswap
and
jae
lea
pop
jmp
hlt
das
in
xor
jmp
dec
aaa
xor
inc
aad
nop
jmp
cmc
pop
and
ret
or
push
push
mov
pop
jmp
inc
and
bound
inc
and
nop
jmp
mov
dec
mov
add
or
dec
popf
ret
jmp
imul
nop
jmp
sub
push
add
jmp
ss
imul
jmp
bound
leave
pop
dec
and
add
popf
popa
movzx
jmp
lods
dec
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
lea
pop
imul
jmp
and
jl
lahf
shr
mov
add
jl
inc
popf
ret
nop
je
jmp
adc
add
inc
or
push
pop
nop
jmp
mov
nop
mov
jmp
cmc
cmp
cs
dec
push
pop
jmp
push
test
sbb
out
fld
pop
pop
jmp
pushw
bound
popf
jmp
outs
je
jb
push
add
sbb
(bad)
dec
pop
popa
adc
mov
add
add
test
(bad)
dec
inc
xor
cmp
pushf
add
popf
ret
push
pop
jmp
add
mov
and
popa
mov
jmp
cli
pop
pusha
pushf
add
popf
popa
mov
jmp
and
add
sbb
pop
add
jmp
push
pop
jmp
imul
pop
xor
nop
mov
jmp
jmp
lea
pop
cmp
jmp
pop
push
push
pushf
add
popf
ret
push
pushf
add
popf
ret
jmp
xor
sub
xor
xchg
cmp
nop
nop
jmp
jns
cmp
dec
dec
inc
cmp
pusha
nop
popa
mov
jmp
pop
ret
jnp
jmp
jmp
or
inc
addr16
push
pop
push
jmp
std
js
pop
push
pushf
add
popf
ret
pusha
nop
popa
call
nop
jmp
ret
push
pop
popf
mov
jmp
popa
pop
pop
pushf
push
pop
popf
push
jmp
push
pop
inc
and
clc
jmp
pop
or
mov
jmp
adc
adc
fldz
(bad)
call
cs
push
mov
jmp
out
dec
dec
fs
jmp
xchg
push
pop
nop
nop
jmp
cmp
add
pop
jmp
ficomp
sub
jmp
add
xor
pusha
pushf
add
popf
popa
jmp
gs
add
dec
push
mov
pop
nop
jmp
and
imul
add
popf
ret
nop
jmp
adc
or
popa
pop
jns
pop
nop
jmp
fs
push
jle
arpl
data16
xchg
push
pop
nop
nop
jmp
sub
ja
cdq
mov
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pop
nop
jmp
jp
outs
push
add
push
push
lea
pop
mov
jmp
pop
in
inc
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
sbb
jle
jp
rcr
fldenv
add
pop
je
popf
ret
pusha
pushf
add
popf
popa
mov
jmp
or
nop
mov
jmp
jnp
imul
add
jmp
ins
ror
push
out
cmp
sbb
inc
and
dec
sub
pop
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
mov
jmp
cmp
popf
popa
mov
jmp
jnp
lea
pop
nop
jmp
inc
mov
sbb
mov
and
not
xchg
sbb
sbb
imul
(bad)
call
pop
inc
cdq
push
pusha
nop
popa
nop
jmp
jo
pop
cmc
or
add
aaa
add
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
jmp
fldcw
dec
addr16
ds
pushf
push
pop
popf
jmp
jmp
mov
mov
jmp
mov
push
mov
pop
jmp
bound
clc
out
xor
pushf
add
popf
ret
jmp
pop
fisubr
sbb
inc
dec
push
and
jmp
stos
push
sahf
or
adc
sbb
or
and
add
and
push
popf
ret
jmp
xchg
push
pop
nop
jmp
pop
addr16
nop
jmp
add
pop
jg
sub
cmp
adc
jmp
dec
or
pusha
pushf
add
popf
popa
jmp
pop
sub
fistp
pushf
push
pop
popf
jmp
jge
and
cmps
pop
push
lea
pop
nop
jmp
(bad)
jmp
adc
out
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
jg
inc
and
xchg
jmp
push
rcl
nop
jmp
pop
aas
pop
and
add
popf
popa
jmp
push
inc
jne
inc
pushf
push
pop
popf
mov
jmp
fist
jmp
mov
add
or
call
sbb
pop
lods
enter
and
pop
das
mov
jmp
and
mov
es
popf
ret
jmp
outs
aad
or
sub
in
push
pushf
add
popf
ret
xchg
xchg
push
jmp
jbe
push
pop
cmp
jmp
aaa
xchg
jnp
push
push
pushf
add
popf
ret
push
pushf
add
popf
ret
nop
jmp
popa
pop
out
sbb
pop
das
outs
xchg
sub
fwait
add
add
adc
cmp
daa
pushf
push
pop
popf
imul
jmp
test
nop
jmp
add
mov
sbb
or
and
(bad)
push
popf
push
sbb
pop
jmp
test
pop
nop
jmp
mov
je
or
nop
popa
mov
jmp
adc
pop
jbe
push
mov
pop
jmp
push
xor
push
pusha
pushf
add
popf
popa
mov
jmp
jmp
(bad)
(bad)
jmp
outs
and
nop
jmp
dec
outs
mov
add
add
popf
popa
movzx
jmp
jl
cmp
and
jo
int
popf
ret
pushf
push
pop
popf
jmp
sub
and
mov
mov
jmp
aam
push
lea
pop
jmp
test
jge
cs
mov
pop
xor
jmp
out
inc
pusha
pushf
add
popf
popa
nop
jmp
or
cmp
mov
and
bound
ss
add
popf
ret
push
pushf
add
popf
ret
push
pop
shr
jmp
sub
je
jmp
mov
push
pop
popf
mov
jmp
dec
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
cmc
dec
push
mov
pop
push
jmp
pop
dec
cmp
jmp
xchg
pushf
add
popf
ret
push
pop
shl
jmp
lods
cmp
push
pop
push
jmp
cmp
outs
jbe
dec
push
pop
jmp
jmp
aam
(bad)
ss
pushf
add
popf
ret
push
lea
pop
jmp
imul
push
pushf
add
popf
ret
xchg
xchg
nop
jmp
jo
pusha
nop
popa
jmp
in
jecxz
out
xor
pop
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
mov
and
inc
and
jmp
dec
xchg
jne
push
pop
popf
nop
jmp
into
push
pusha
pushf
add
popf
popa
add
jmp
ds
pushf
add
popf
ret
pusha
nop
popa
nop
jmp
sbb
jae
push
lea
pop
mov
jmp
mov
test
movs
cld
(bad)
call
jb
push
nop
nop
jmp
inc
retf
aas
nop
outs
xchg
ins
jne
pushf
push
pop
popf
jmp
jmp
pop
ja
pop
jmp
outs
pop
sub
dec
dec
shl
call
and
cmps
cmp
xor
(bad)
add
jb
pop
popf
ret
jmp
xchg
push
pop
nop
jmp
xchg
push
nop
je
jmp
into
or
pop
pusha
pushf
add
popf
popa
jmp
push
test
ficomp
cld
(bad)
jmp
sbb
das
ins
ja
dec
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
nop
jmp
pop
mov
in
(bad)
add
add
push
div
or
add
jno
cmp
dec
pop
cmp
sbb
pop
push
jmp
imul
push
pop
popf
mov
jmp
adc
push
nop
mov
jmp
and
jge
pop
jmp
dec
fsub
(bad)
push
dec
push
mov
pop
add
jmp
xor
jmp
push
in
and
xchg
pushf
add
popf
ret
push
pop
mov
jmp
adc
or
ds
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
jmp
cmps
jl
cmp
dec
jb
pusha
nop
popa
mov
jmp
cmp
cld
sbb
test
add
daa
pop
push
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
jmp
xor
pop
nop
mov
jmp
mov
dec
cld
jmp
push
je
popa
dec
mov
popa
push
jmp
xor
pusha
nop
popa
jmp
and
mov
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
mov
jmp
fist
sbb
cmps
pushf
add
popf
ret
xchg
xchg
jmp
fs
or
add
pop
mov
jmp
push
(bad)
and
inc
sbb
add
add
imul
dec
add
(bad)
out
(bad)
inc
or
pop
mov
jmp
xchg
adc
cmp
mov
jmp
lods
pop
(bad)
pop
je
mov
and
sub
retf
pop
popf
ret
push
pop
jmp
push
lds
xchg
jle
ins
aad
pusha
nop
popa
nop
jmp
xor
push
push
push
out
pusha
nop
popa
nop
jmp
add
into
pop
ja
push
mov
pop
nop
jmp
imul
sbb
pop
nop
jmp
cmp
xchg
xchg
jmp
arpl
adc
mov
(bad)
jmp
xor
inc
sbb
outs
pusha
pushf
add
popf
popa
jmp
xor
loopne
jmp
or
gs
nop
popa
jmp
lock
jnp
jbe
sbb
add
sbb
pop
push
jmp
push
inc
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
push
push
pop
pop
jmp
addr16
pop
jbe
dec
adc
(bad)
jmp
and
or
pusha
nop
popa
mov
jmp
imul
(bad)
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
adc
inc
and
xchg
xor
jmp
push
push
mov
pop
ret
jmp
adc
je
jmp
ja
jp
jg
pop
mov
jmp
in
push
nop
imul
jmp
xor
pop
dec
push
pusha
nop
popa
push
jmp
(bad)
jbe
push
pop
nop
jmp
cs
dec
pusha
pushf
add
popf
popa
jmp
dec
jmp
push
pop
popf
mov
jmp
or
add
pop
jmp
xchg
jg
inc
add
and
xchg
jmp
pop
call
sbb
inc
or
xor
(bad)
jmp
inc
and
xchg
jmp
jle
sub
loopne
mov
jne
ja
ret
nop
jmp
push
pop
dec
outs
inc
xor
nop
popa
mov
jmp
or
or
pop
sar
dec
ins
xchg
cmp
in
(bad)
jmp
fild
jb
mov
in
(bad)
call
fisub
dec
setle
pop
pusha
pushf
add
popf
popa
mov
jmp
cld
fs
mov
pop
jmp
shl
or
add
sbb
pop
jmp
or
add
add
popf
popa
jmp
pop
jbe
mov
mov
and
add
nop
sbb
jmp
dec
adc
add
lods
or
add
popf
popa
nop
jmp
adc
xor
(bad)
aam
(bad)
jmp
xor
mov
pop
mov
jmp
scas
push
push
mov
pop
nop
jmp
cmp
xchg
push
pop
nop
jmp
mov
ret
popf
popa
imul
jmp
pushf
pop
nop
jmp
mov
adc
push
lea
pop
jmp
je
outs
sub
and
pop
mov
inc
dec
sar
nop
ret
jmp
inc
mov
sub
add
sbb
pop
nop
jmp
jg
sbb
inc
and
jmp
jnp
outs
nop
mov
jmp
pop
out
fs
dec
add
pop
xor
and
and
mov
popf
ret
pushf
push
pop
popf
mov
jmp
movs
add
add
sbb
pop
jmp
(bad)
and
pop
pushf
push
pop
popf
jmp
and
inc
push
pushf
add
popf
ret
push
mov
pop
jmp
loop
push
sbb
dec
add
add
add
push
sub
jnp
mov
cmp
sub
cs
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
jbe
es
mov
jmp
test
sbb
clc
push
mov
and
dec
cmp
leave
add
add
add
jmp
push
push
dec
adc
popa
nop
jmp
sub
add
pop
mov
jmp
push
retf
pop
cmps
and
pop
push
mov
pushf
push
pop
popf
jmp
or
aas
adc
nop
popa
jmp
xchg
les
out
push
add
fadd
add
jmp
ds
add
inc
or
push
pop
nop
nop
jmp
inc
pushf
push
pop
popf
jmp
or
add
mov
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
nop
jmp
ret
jbe
xor
pusha
mov
and
jne
xchg
jp
ret
pushf
push
pop
popf
jmp
inc
pop
add
dec
and
pushf
push
pop
popf
mov
jmp
cmp
and
add
pop
jmp
test
lea
pop
nop
jmp
sbb
cmp
add
pop
jmp
push
dec
mov
xchg
push
nop
nop
jmp
xor
inc
push
add
les
dec
mov
and
or
dec
ret
add
pusha
add
jns
jge
lea
pop
and
jmp
mov
push
pop
popf
jne
jmp
daa
xchg
xchg
nop
jmp
nop
outs
pusha
pushf
add
popf
popa
jmp
sbb
push
mov
pop
jmp
(bad)
jns
pop
push
pushf
add
popf
ret
nop
nop
jmp
jl
push
adc
xchg
sbb
jne
push
pop
popf
xor
jmp
add
pop
fadd
pop
jmp
push
inc
cmp
sub
rcr
add
inc
and
mov
ret
jmp
inc
sub
add
cmp
push
and
push
pushf
add
popf
ret
push
pop
add
jmp
sbb
push
imul
mov
adc
inc
jmp
nop
jmp
inc
scas
add
out
push
cmp
or
mov
and
cmp
adc
add
push
aaa
hlt
push
nop
jmp
cmp
xor
push
and
pusha
pushf
add
popf
popa
nop
jmp
into
inc
addr16
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
pop
or
xlat
add
add
push
lahf
ds
outs
push
lea
pop
mov
jmp
pop
ds
dec
push
lea
pop
push
jmp
dec
aam
push
lea
pop
not
jmp
xor
push
pushf
add
popf
ret
xchg
xchg
popa
jmp
add
pop
popf
jmp
outs
jmp
xor
inc
xchg
jg
pop
int3
push
pop
pop
jb
daa
xor
jmp
xor
xor
and
push
add
sahf
jo
jbe
lea
pop
jmp
mov
pop
mov
dec
adc
inc
in
call
jo
pushf
add
popf
popa
jmp
sub
je
push
xchg
xchg
jmp
pop
xchg
and
push
sub
or
movs
push
sub
push
pushf
add
popf
ret
frstor
pop
pop
inc
mov
jle
popa
xchg
jge
push
pop
popf
cmp
jmp
pop
add
imul
jmp
cdq
andnps
out
sbb
xchg
jmp
or
jmp
xchg
push
pop
nop
jmp
daa
inc
xchg
xchg
jmp
dec
in
arpl
add
pop
add
jmp
and
popa
cmp
jmp
test
adc
or
xchg
pushf
add
popf
ret
push
mov
pop
jmp
mov
add
stc
aaa
add
ins
es
or
pushf
add
popf
popa
mov
jmp
cmp
jmp
jmp
push
mov
dec
xor
push
pop
daa
sub
add
inc
jle
pushf
add
popf
popa
jmp
gs
sbb
jmp
jmp
and
pusha
mov
cld
hlt
pushf
add
popf
ret
xor
adc
mov
inc
dec
adc
add
push
cmps
pushf
add
popf
ret
push
lea
pop
jmp
jnp
jae
lock
pusha
nop
popa
jmp
mov
or
dec
(bad)
push
pop
outs
sbb
and
push
lea
pop
nop
jmp
jo
push
add
sbb
pop
jmp
retf
aaa
mov
or
adc
test
ja
adc
jmp
push
ja
push
jo
popf
call
aas
nop
jmp
and
adc
push
sti
cmp
popa
jne
jmp
call
and
nop
jmp
repnz
xchg
xchg
nop
jmp
pop
pop
jl
sub
and
adc
xchg
cmp
add
popf
popa
jmp
push
js
lahf
xor
imul
add
(bad)
aas
popf
ret
push
pop
not
jmp
outs
inc
push
pushf
push
pop
popf
jmp
imul
jmp
xchg
and
dec
push
pushf
add
popf
ret
xchg
xchg
jmp
push
jmp
push
mov
pop
jmp
pop
push
scas
add
sbb
pushf
add
popf
ret
sub
add
pop
add
retf
pop
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
call
jmp
cmp
add
push
push
addr16
pusha
nop
popa
mov
jmp
ds
cmp
nop
jmp
jb
push
jbe
jnp
pop
push
pushf
add
popf
ret
nop
jmp
mov
ja
daa
xchg
mov
add
add
shl
jl
pusha
nop
popa
call
nop
jmp
dec
inc
pusha
pushf
add
popf
popa
nop
jmp
pop
push
into
jb
test
pushf
add
popf
ret
pusha
aas
or
sub
scas
push
(bad)
xor
je
fcomp
dec
fwait
and
out
ficomp
push
pop
and
ret
popf
popa
jmp
sub
cmp
or
pop
dec
sbb
lds
adc
pop
dec
jmp
add
popf
ret
push
mov
pop
imul
jmp
adc
add
pop
jmp
retf
and
sbb
add
inc
or
push
pop
nop
jmp
lods
inc
pushf
push
pop
popf
jmp
inc
xor
and
xor
add
jmp
gs
push
xor
jmp
inc
cmp
sub
ja
lea
pop
push
jmp
int
imul
xor
sbb
push
aas
imul
add
sbb
jmp
outs
lock
ja
imul
or
xor
dec
dec
pop
cmp
or
add
jb
inc
push
jle
push
add
inc
and
push
jmp
adc
sbb
stos
jnp
and
ins
jb
push
mov
cs
call
call
pushf
add
popf
popa
jmp
adc
shr
ficomp
push
dec
es
ret
push
pushf
add
popf
ret
nop
nop
jmp
jnp
or
inc
loop
inc
add
pop
pop
das
and
sub
push
xchg
inc
push
pop
jmp
pop
std
dec
leave
pop
(bad)
pop
mov
add
jmp
ror
lds
sbb
pusha
nop
popa
jmp
mov
cmp
sbb
mov
add
imul
jecxz
loope
loope
(bad)
or
dec
stos
pusha
into
push
xchg
jae
push
pop
popf
mov
jmp
lods
sbb
jle
arpl
add
es
jnp
push
mov
sbb
add
add
popf
ret
nop
xor
jmp
outs
add
mov
push
pop
popf
jmp
gs
frstor
outs
pusha
nop
popa
and
jmp
dec
mov
ds
inc
bound
jge
lds
jne
push
out
adc
mov
pushf
add
popf
ret
pushf
push
pop
popf
jmp
imul
add
and
add
add
inc
mov
push
cmp
dec
in
pop
fdiv
inc
inc
and
xchg
push
mov
pushf
add
popf
ret
push
mov
pop
jmp
mov
cmp
add
popf
ret
mov
jmp
sti
sub
push
pushf
add
popf
ret
push
mov
pop
jmp
mov
push
aad
xchg
xor
push
or
and
xor
daa
cmp
int
test
push
pop
jmp
aas
(bad)
push
adc
mov
outs
movs
sbb
cmp
jo
aaa
push
pop
imul
jmp
add
push
pushf
add
popf
ret
nop
jmp
dec
add
loopne
mov
je
lds
outs
lods
jb
sbb
push
adc
or
sub
jmp
dec
lahf
xor
push
pop
gs
and
call
data16
arpl
sub
jl
mov
pop
pop
jmp
aaa
push
inc
push
pop
nop
jmp
mov
retfw
sbb
or
push
pop
nop
nop
jmp
pusha
xchg
xchg
jmp
cmp
pusha
nop
popa
sub
jmp
xlat
sub
nop
jmp
adc
add
pusha
nop
popa
and
jmp
dec
mov
nop
popa
not
jmp
ins
mov
lea
pop
imul
jmp
pop
add
jae
lock
stc
es
pop
jl
in
jge
daa
je
sub
add
ins
hlt
push
out
adc
outs
iret
stc
pushf
add
popf
ret
pushf
push
pop
popf
jmp
dec
aad
cmc
push
pusha
add
(bad)
pushf
add
popf
ret
mov
jmp
das
push
icebp
inc
push
lea
pop
jmp
ins
retw
sbb
call
add
add
popf
ret
ret
dec
sub
ins
inc
cmp
hlt
push
dec
xor
cdq
shl
add
popf
ret
push
pop
push
jmp
xor
add
pcmpeqd
pushf
add
popf
ret
pushf
push
pop
popf
not
jmp
cmp
not
jmp
cmp
sbb
ret
popf
popa
nop
jmp
or
pop
ret
adc
inc
sbb
inc
adc
and
push
lea
pop
jmp
sbb
jno
add
ds
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
in
mov
jmp
add
stc
adc
add
push
(bad)
adc
and
push
mov
pop
jmp
mov
add
push
pop
mov
jmp
push
and
cmp
ins
aam
data16
pop
pop
push
jp
push
iret
pop
pusha
pushf
add
popf
popa
jmp
cs
not
jmp
cmps
and
jb
push
pop
jmp
pop
add
or
adc
fild
inc
and
movs
gs
pop
mov
jmp
je
and
pop
jmp
sub
js
(bad)
jae
xor
inc
and
sar
sbb
ret
push
pushf
add
popf
ret
xchg
sub
lods
add
adc
or
nop
popa
jmp
pushf
sbb
jg
mov
add
popf
ret
nop
jmp
(bad)
push
outs
add
pop
or
cmp
fwait
pop
std
mov
add
or
add
jmp
mov
mov
aaa
sub
mov
and
js
cmp
bound
test
and
imul
inc
popf
ret
push
lea
pop
jmp
push
xor
xor
or
push
pop
nop
nop
jmp
cmp
popa
jmp
in
add
add
add
fwait
data16
or
cmp
xor
and
push
pop
jmp
add
pop
out
nop
fs
xchg
push
pop
nop
jmp
popf
sub
or
push
pop
nop
jmp
lock
ret
jmp
lea
imul
or
jmp
inc
jl
cmps
jb
cmp
xor
jmp
imul
sbb
(bad)
sub
pop
mov
xor
jg
push
push
pop
imul
jmp
cmp
jbe
inc
and
xchg
jmp
cmp
add
sbb
xor
add
repnz
xor
add
inc
or
push
pop
nop
jmp
or
adc
jmp
dec
inc
or
pop
push
lea
pop
jmp
sub
add
jp
xchg
pushf
add
popf
ret
cwde
das
es
jo
(bad)
sbb
or
dec
push
test
inc
sbb
add
js
and
push
pop
popf
mov
jmp
dec
pop
pusha
nop
popa
mov
jmp
push
lea
pop
push
jmp
call
push
pop
popf
nop
jmp
ss
sub
or
cmp
add
std
cmp
jge
pop
out
and
pushf
add
popf
popa
pushf
jmp
jns
sbb
pusha
pushf
add
popf
popa
mov
jmp
daa
push
daa
sub
int3
add
push
shl
push
pushf
add
popf
ret
push
mov
pop
mov
jmp
retf
push
cmp
cli
pushf
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
nop
jmp
aas
push
and
fnsave
mov
push
arpl
jb
add
dec
pop
das
adc
rol
es
cmp
dec
in
push
lea
pop
mov
jmp
inc
pushf
push
pop
popf
mov
jmp
ror
push
lea
pop
nop
jmp
adc
ins
repz
push
pop
popf
mov
jmp
mov
mov
add
and
cdq
popa
jb
aas
adc
xchg
xchg
jmp
sbb
(bad)
jmp
and
repnz
add
or
push
pop
nop
jmp
and
nop
popa
nop
jmp
dec
(bad)
or
or
jle
add
inc
or
push
pop
nop
pop
jmp
inc
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
sub
jmp
mov
pop
sub
jmp
xchg
push
pop
nop
nop
jmp
add
jmp
mov
xchg
dec
xrstors
push
mov
pop
mov
jmp
inc
push
pop
jmp
pop
iret
inc
inc
or
adc
cmp
arpl
lea
int
adc
mov
nop
jmp
mov
xor
jl
xchg
adc
(bad)
inc
and
pop
add
push
pushf
add
popf
ret
xor
and
retf
and
jnp
imul
push
add
jns
or
aam
sbb
pop
nop
jmp
fisttp
pop
inc
xchg
cmps
xor
add
sbb
pop
mov
jmp
pop
jmp
xchg
push
pop
nop
nop
jmp
jno
pop
push
jmp
mul
jo
push
push
pushf
add
popf
ret
nop
mov
jmp
cmp
and
and
jmp
sbb
cmp
ins
hlt
sbb
add
pop
mov
jmp
adc
sub
push
mov
push
pop
popf
nop
jmp
or
jge
lea
pop
jmp
in
lock
push
imul
add
mov
jle
ja
push
cmp
xor
ss
sub
outs
mov
xor
nop
je
jmp
pop
pop
pusha
mov
push
sbb
push
pop
cmp
jne
ins
shl
push
jmp
int3
add
jb
imul
jno
add
inc
add
call
or
cmp
dec
adc
push
(bad)
sbb
pusha
pusha
pushf
add
popf
popa
sub
jmp
mov
add
xchg
clc
(bad)
(bad)
or
arpl
push
add
jmp
xor
jmp
mov
xor
add
xor
inc
and
fwait
and
popf
ret
jmp
jns
pop
stos
or
pusha
nop
popa
push
jmp
jle
sbb
add
pop
nop
jmp
sbb
adc
inc
pop
mov
sub
loope
and
sbb
(bad)
and
lea
pushf
push
pop
popf
nop
jmp
(bad)
fs
sub
pop
inc
inc
pop
or
mov
sub
nop
mov
jmp
or
arpl
pop
or
inc
add
arpl
push
jno
and
push
jae
pusha
nop
popa
nop
jmp
push
sub
ins
aad
sub
ret
imul
cwde
adc
xchg
xchg
nop
jmp
mov
jmp
jmp
inc
lock
mov
jmp
out
mov
jns
sub
pop
out
sub
aaa
daa
push
sbb
pop
mov
jmp
stos
cmp
xchg
inc
cld
aaa
shl
arpl
dec
push
pop
(bad)
jbe
jb
adc
bound
dec
xchg
pop
pusha
nop
popa
jmp
test
push
pushf
add
popf
ret
nop
jmp
ss
aas
aaa
das
sub
add
nop
push
jmp
cs
call
push
sbb
sbb
push
or
into
pop
out
push
or
test
(bad)
(bad)
(bad)
jmp
or
push
pop
jmp
jg
push
ret
popa
push
inc
out
inc
xchg
xchg
jmp
pop
pop
js
aam
push
out
pushf
add
popf
ret
pusha
nop
popa
nop
jmp
push
mov
push
push
pop
mov
jmp
jo
mov
shl
jmp
test
jnp
aaa
mov
sub
add
popf
ret
inc
push
push
dec
push
and
test
mov
jmp
dec
pop
or
push
pop
popf
mov
jmp
call
jmp
test
je
jnp
pushf
add
popf
popa
jmp
push
nop
call
jmp
ins
sbb
imul
or
and
pusha
mov
xchg
xchg
mov
jmp
sub
add
popf
popa
mov
jmp
mov
ins
jns
push
add
dec
add
pushf
push
pop
popf
mov
jmp
jno
push
pop
popf
nop
jmp
aaa
aas
ds
jb
inc
and
xchg
nop
jmp
fiadd
pushf
add
popf
popa
not
jmp
add
xor
xchg
jmp
sbb
ins
jne
jmp
and
mov
add
popf
ret
jmp
and
mov
sbb
in
pushf
add
popf
ret
pushf
push
pop
popf
mov
jmp
xor
call
ds
cmp
push
pop
jne
jmp
inc
dec
xor
add
pop
jmp
in
and
mov
pusha
nop
popa
jmp
ja
mov
push
mov
inc
and
es
mov
ret
push
lea
pop
jmp
dec
je
dec
push
pushf
add
popf
ret
and
add
sbb
adc
std
jbe
inc
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
jg
inc
popa
cmp
add
pop
jmp
out
les
xor
inc
sbb
pushf
add
popf
ret
jg
stos
jle
bound
lods
adc
je
nop
popa
nop
jmp
and
repz
jl
add
inc
or
push
pop
nop
nop
jmp
jp
push
loope
dec
fs
aaa
imul
bound
inc
adc
pushf
add
popf
ret
push
pop
call
nop
jmp
inc
outs
sbb
push
pop
popf
jmp
pop
ror
or
cmp
add
sbb
pop
jmp
lds
and
add
sub
add
and
cmps
ins
cmp
cmp
sub
add
cld
jmp
sub
sbb
pusha
popf
outs
jne
js
dec
cmp
js
sub
shl
pop
(bad)
pushf
add
popf
ret
nop
jmp
mov
sub
adc
jb
pop
add
jmp
call
pop
sub
jmp
mov
or
add
inc
or
push
pop
nop
jmp
cmps
sub
popf
popa
pusha
jmp
in
pop
jns
xor
or
inc
dec
jbe
pop
fwait
dec
push
pushf
add
popf
ret
push
mov
pop
jmp
test
lods
popf
rcl
add
xor
popf
ret
nop
mov
jmp
xchg
jno
sqrtps
add
xlat
repz
call
sub
add
mov
jmp
jns
sbb
jle
pop
jmp
imul
xor
pop
jmp
adc
cmp
jns
test
pop
sub
push
sbb
inc
fwait
jb
add
and
add
clts
arpl
jb
cs
jb
inc
test
mov
addr16
jmp
xchg
push
pop
nop
jmp
cmp
outs
dec
cdq
jmp
add
popf
ret
push
mov
pop
add
jmp
pop
imul
inc
xor
pop
nop
ds
add
push
pushf
add
popf
ret
mov
das
ja
ja
ja
pop
ins
and
pop
mov
mov
jmp
loopne
loop
fidivr
dec
push
pop
push
jmp
dec
das
sbb
das
push
enter
shl
push
pop
pusha
nop
popa
jmp
jmp
pop
imul
push
pop
popf
xor
jmp
jo
and
jle
adc
cmp
push
gs
mov
es
cmps
bound
add
popf
popa
jmp
push
adc
push
nop
jmp
sbb
cmp
pop
pushf
push
pop
popf
nop
jmp
rcr
imul
adc
adc
push
dec
std
add
pusha
ds
inc
and
xchg
ret
jmp
xor
inc
stos
pop
ins
add
pop
push
cmp
ror
jns
push
jno
repnz
push
jg
pop
pop
push
and
push
loop
in
jnp
push
iret
cmp
push
dec
pusha
nop
popa
call
jmp
push
dec
nop
push
jmp
pop
sbb
sub
jmp
adc
popa
xor
jmp
xchg
push
pop
nop
jmp
fisub
pushf
push
pop
popf
jne
jmp
or
pop
mov
jmp
cmc
push
sahf
sub
das
pop
cmp
jne
dec
add
jg
add
pop
pushf
push
pop
popf
imul
jmp
sbb
add
sbb
pop
jmp
mov
loopne
nop
jmp
dec
sbb
jp
or
out
cmp
push
ds
aas
js
sub
jnp
adc
push
stc
lods
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
jmp
dec
push
cmp
jno
inc
push
mov
pop
jmp
dec
sbb
push
pop
jmp
pop
pcmpeqd
adc
push
and
pop
ficomp
push
hlt
and
pop
popf
jmp
inc
xchg
cmp
mov
fadd
pushf
add
popf
ret
push
mov
pop
jmp
imul
inc
mul
jmp
pop
inc
or
sbb
cmp
outs
and
jb
and
popf
inc
mov
jmp
push
mov
mov
push
iret
inc
and
call
push
pusha
pushf
add
popf
popa
jmp
add
imul
sub
dec
add
xor
add
les
imul
push
sbb
aaa
or
push
(bad)
pop
sbb
lea
fdivr
push
pushf
add
popf
ret
jmp
dec
inc
sub
sub
pusha
and
push
retf
inc
sahf
adc
jns
add
inc
or
outs
leave
add
add
inc
or
push
pop
nop
jmp
dec
pop
push
pushf
add
popf
ret
nop
sub
jmp
inc
pop
ins
or
outs
push
pop
jmp
push
mov
fs
push
jge
ins
pop
push
sbb
ss
call
add
fild
outs
push
pushf
add
popf
ret
fild
dec
cmp
push
sub
js
jp
nop
popa
nop
jmp
push
mov
mov
arpl
jg
dec
test
sub
add
inc
or
push
pop
nop
jmp
cmp
pop
mov
jmp
cmc
or
push
push
pushf
add
popf
ret
push
mov
pop
mov
jmp
inc
push
mov
pop
push
jmp
inc
mov
ret
popf
popa
mov
jmp
or
push
pushf
add
popf
ret
and
adc
add
sbb
mov
sbb
jmp
adc
mov
pop
push
jmp
pop
pushw
rol
add
popf
ret
pusha
pushf
add
popf
popa
ret
jmp
lahf
push
mov
push
enter
cs
xchg
jp
push
pop
popf
jmp
jle
shrd
pusha
pushf
add
popf
popa
nop
jmp
jle
aaa
inc
xchg
xchg
not
jmp
js
pop
nop
jmp
imul
inc
push
pop
jmp
add
cmps
and
dec
cs
cmpxchg
jb
sbb
arpl
sbb
fwait
inc
popa
jnp
push
fs
and
popa
pushf
push
pop
popf
push
jmp
mov
cmp
jle
imul
jmp
inc
imul
push
push
lea
pop
jmp
mov
cmp
dec
mov
and
imul
pop
popf
ret
jmp
xchg
push
pop
nop
jmp
inc
inc
push
pushf
add
popf
ret
pusha
nop
popa
nop
jmp
inc
shr
(bad)
dec
push
mov
pop
jmp
pop
and
jp
mov
pushf
add
popf
ret
push
lea
pop
jmp
mov
clc
push
movs
addr16
mov
pop
jmp
xor
dec
push
lea
pop
push
jmp
jns
inc
int3
xor
add
pop
jmp
xor
test
and
mov
pop
not
jmp
dec
pusha
pushf
add
popf
popa
jmp
push
pop
push
mov
push
popa
sub
push
jg
push
pop
or
xor
imul
add
popf
ret
push
pop
jmp
push
in
push
dec
xchg
sub
add
pop
mov
jmp
and
or
push
pop
nop
jmp
cmp
je
adc
ins
and
das
push
adc
push
pop
popf
jmp
and
push
sub
fs
jmp
lds
add
hlt
push
pusha
nop
popa
imul
jmp
xor
push
pushf
add
popf
ret
sub
cmp
je
add
dec
dec
nop
mov
jmp
push
(bad)
shl
daa
pusha
pushf
add
popf
popa
jmp
push
add
dec
xchg
xchg
jmp
add
lods
pop
in
inc
inc
push
adc
push
inc
pusha
nop
popa
mov
jmp
fcom
pushf
push
pop
popf
ret
jmp
and
xor
popf
and
jmp
sysret
cs
pusha
pushf
add
popf
popa
push
jmp
or
push
push
lea
pop
nop
jmp
das
clc
dec
pop
jp
pop
push
jmp
push
sub
jne
inc
pushf
push
pop
popf
jmp
inc
bnd
sub
popa
push
jmp
or
push
setl
popf
jmp
inc
test
cmp
lahf
jne
push
pop
popf
test
jmp
pop
mov
fldcw
pushf
push
pop
popf
not
jmp
cs
mov
sti
mov
add
popf
ret
dec
xor
or
push
ins
add
add
cdq
xor
add
mov
(bad)
arpl
push
xor
pushf
add
popf
popa
mov
jmp
jl
push
pop
nop
jmp
sub
sar
and
and
add
pop
jmp
popa
and
mov
imul
cmp
pop
pop
add
jns
ins
shr
ror
pop
adc
pop
ror
lea
push
pushf
add
popf
ret
pusha
nop
popa
jmp
pop
push
xchg
sbb
nop
popa
jmp
je
out
or
xchg
push
pop
nop
jmp
fwait
xor
jmp
add
sbb
add
inc
or
push
pop
nop
nop
jmp
pop
pusha
pushf
add
popf
popa
mov
jmp
mov
jmp
shl
outs
add
add
sbb
pop
pop
jmp
dec
push
sbb
jmp
add
cwde
push
sbb
sbb
popa
fld
aas
push
pop
mov
jmp
daa
inc
xor
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
enter
add
pop
jmp
sub
sub
mov
jmp
mov
adc
adc
add
push
rcl
sbb
inc
adc
jg
sbb
fbld
fs
push
test
sbb
dec
ja
push
arpl
push
mov
jns
lea
pop
nop
jmp
push
xor
mov
pop
jmp
pop
repnz
pop
popf
mov
jmp
enter
pushf
push
pop
popf
mov
jmp
sbb
dec
dec
jle
ret
cmp
pop
inc
adc
jnp
jns
add
call
add
jno
pop
ss
pushf
add
popf
ret
pusha
nop
popa
pop
jmp
add
jne
or
sbb
jmp
mov
ins
sqrtps
dec
and
idiv
push
inc
ds
xchg
xchg
jmp
sub
mov
rcr
add
adc
pushf
add
popf
ret
cmp
inc
xchg
adc
cmp
push
pusha
pushf
add
popf
popa
jmp
jge
and
add
popf
popa
jmp
add
push
jge
inc
and
xchg
jmp
sbb
pusha
pushf
add
popf
popa
nop
jmp
jle
and
sbb
push
clc
jmp
cmp
add
sbb
pop
nop
jmp
dec
aas
add
add
pop
push
jmp
push
add
pop
jmp
push
pop
retf
daa
push
mov
pop
nop
jmp
push
push
and
pop
pop
dec
cs
adc
push
out
push
mov
pop
and
jmp
pop
add
push
add
sbb
xchg
fs
push
stc
pop
setl
popf
mov
jmp
in
pop
nop
push
jmp
inc
dec
dec
test
xchg
dec
adc
sti
sldt
push
jl
inc
sub
shr
repnz
lods
pushf
add
popf
ret
(bad)
addr16
add
xor
ja
pop
sbb
pop
enter
pushf
cmp
outs
adc
dec
xchg
mov
pop
jmp
mov
test
leave
or
xchg
lock
jmp
mov
pop
icebp
(bad)
jmp
mov
sbb
cmp
sahf
pushf
add
popf
ret
fist
add
inc
push
adc
sbb
cmps
adc
cs
dec
pop
in
add
ins
aas
sub
popf
popa
mov
jmp
push
and
inc
and
jmp
push
jae
pusha
nop
popa
mov
jmp
add
add
inc
pop
inc
inc
pop
jae
push
dec
mov
cmp
jmp
mov
shr
push
pop
nop
jmp
fs
push
pop
sbb
sbb
add
inc
or
push
pop
nop
pop
jmp
inc
pusha
nop
popa
mov
jmp
xor
add
jmp
mov
push
pop
(bad)
xor
popa
mov
jmp
jae
jns
adc
push
pop
popf
jmp
add
add
dec
xor
push
fiadd
pop
push
jp
jl
bound
(bad)
dec
pop
sub
inc
adc
push
xor
cmp
add
inc
or
push
pop
nop
jmp
mov
pushf
add
popf
popa
sub
jmp
test
push
pushf
add
popf
ret
nop
xor
jmp
dec
es
pop
loopne
jae
xchg
add
pop
pop
out
sub
push
pushf
add
popf
ret
push
pop
imul
jmp
popf
sub
je
add
clc
sbb
add
inc
hlt
xor
push
pushf
add
popf
ret
bound
xor
push
sbb
or
pop
push
push
pusha
nop
popa
jmp
aas
pop
addr16
push
outs
or
pop
shl
or
dec
xchg
dec
jl
jmp
xchg
push
pop
nop
jmp
jp
pusha
nop
popa
mov
jmp
pop
mov
popa
xchg
xor
adc
retf
lea
pop
jmp
(bad)
or
or
jge
add
inc
or
push
pop
nop
nop
jmp
adc
fild
adc
push
cmp
jnp
and
or
push
pop
nop
nop
jmp
jp
mov
pop
jmp
pop
add
jecxz
mov
pop
pop
push
push
xor
ins
inc
outs
aas
inc
or
push
cwde
sbb
add
jmp
inc
jo
push
mov
pop
jmp
mov
inc
jle
push
pop
popf
jmp
adc
fild
dec
dec
pusha
pushf
add
popf
popa
and
jmp
dec
push
push
pushf
add
popf
ret
push
mov
pop
xor
jmp
das
push
push
mov
pop
jmp
leave
jle
cmp
inc
je
dec
ins
add
add
pop
jmp
mov
arpl
xor
stos
ins
push
pop
fwait
pop
mov
jo
jo
xor
add
popf
popa
nop
jmp
fwait
cs
pminub
ins
dec
push
dec
fstp
ins
out
jbe
and
jp
imul
int3
jg
and
and
cmp
add
pop
mov
std
jno
ret
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
adc
inc
fs
daa
add
inc
pusha
nop
popa
nop
jmp
jne
sbb
adc
and
inc
and
jmp
ins
mov
push
pushf
add
popf
ret
push
pop
jmp
outs
and
adc
push
pushf
add
popf
ret
pushf
push
pop
popf
jmp
sub
sbb
sub
or
jmp
jo
cmp
and
or
add
push
push
push
add
push
pop
jmp
cmp
or
push
pushf
push
pop
popf
mov
jmp
push
je
das
pop
imul
repnz
jb
sbb
call
sbb
sub
push
pop
jmp
jmp
fnstsw
dec
push
mov
pop
nop
jmp
sub
xor
jmp
pop
cmovns
or
aas
jb
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
add
cld
push
es
cli
outs
inc
aaa
fldenv
push
pushf
add
popf
ret
xchg
jb
or
and
add
jmp
adc
sub
push
lea
pop
lea
jmp
aaa
jp
xor
lea
arpl
jae
pushf
add
popf
popa
jmp
jbe
dec
inc
inc
cld
pop
mov
sbb
and
push
mov
pop
mov
jmp
not
jmp
sub
rcl
push
mov
loope
fidiv
xor
jne
push
in
add
xor
sti
pushf
add
popf
ret
mov
inc
pop
push
adc
div
jne
push
pop
popf
jmp
add
cmp
cs
lea
jl
jnp
push
push
dec
dec
push
loope
test
xor
imul
outs
ins
xlat
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
add
jne
nop
popa
jne
jmp
xchg
adc
cmps
sub
sub
and
jb
nop
popa
mov
jmp
ins
in
push
pop
jmp
and
dec
stos
dec
movs
jp
xor
push
in
xchg
pushf
add
popf
ret
push
pushf
add
popf
ret
nop
pushf
jmp
pop
and
inc
sar
mov
mov
adc
and
in
mov
test
push
pcmpgtb
add
sub
adc
push
pop
jmp
aaa
cmp
cvtpi2ps
jle
pushf
add
popf
popa
add
jmp
xor
lea
pop
jmp
es
addr16
push
pushf
add
popf
ret
mov
push
fbstp
je
cs
data16
xchg
xchg
jmp
add
pop
popf
jmp
cmp
adc
(bad)
clc
pop
pushf
push
pop
popf
jmp
push
fstp
out
jge
cmp
aad
or
arpl
sub
push
mov
in
addr16
jnp
data16
inc
lea
push
push
pusha
pushf
add
popf
popa
nop
jmp
xlat
and
and
xchg
jmp
sub
aaa
push
or
push
pusha
mov
xchg
cmp
push
nop
nop
jmp
or
es
add
call
jge
es
lea
pop
nop
jmp
dec
jg
push
sub
add
xchg
adc
add
and
fdiv
pushf
add
popf
ret
push
pop
je
jmp
add
(bad)
cmp
add
xor
fs
ret
stos
push
test
inc
pushf
jge
ds
sub
jb
sub
inc
mov
ds
aas
sbb
mov
jmp
push
je
xchg
xchg
jmp
aaa
jb
push
mov
pop
nop
jmp
jp
and
inc
and
jmp
sbb
aaa
jmp
inc
mov
aas
jmp
je
jnp
leave
adc
add
jmp
inc
pop
xor
adc
jmp
int
xchg
sub
jns
outs
addr16
sbb
xchg
sbb
inc
jnp
punpckhbw
popa
push
lea
pop
nop
jmp
push
jg
sub
pop
nop
jmp
xchg
adc
shl
aam
sub
pushf
add
popf
ret
pusha
pushf
add
popf
popa
mov
jmp
and
pusha
nop
popa
jmp
jmp
pop
add
(bad)
cmp
pop
adc
bound
jmp
xor
or
push
or
ret
gs
inc
xor
push
pop
xchg
xor
sub
pop
push
pushf
add
popf
ret
lock
shl
pop
sbb
jo
mov
pop
es
sub
pop
into
dec
inc
push
jnp
push
adc
inc
dec
pop
or
imul
ror
adc
add
inc
or
push
pop
nop
popa
jmp
cmp
add
sbb
pop
jmp
mov
add
ss
adc
jns
adc
jns
mov
pop
nop
jmp
inc
mov
mov
pop
nop
jmp
push
retf
push
nop
imul
jmp
or
pop
jl
cwde
xor
add
popf
popa
jmp
adc
ins
in
data16
pop
sti
add
xchg
jno
adc
lea
pop
push
jmp
push
xchg
adc
pop
jp
in
xchg
push
mov
push
jmp
sub
jl
inc
dec
xchg
push
pop
jmp
or
dec
cld
or
xor
outs
sub
push
dec
pusha
jp
inc
xchg
fs
jmp
xchg
push
pop
nop
jmp
add
(bad)
call
(bad)
cmp
xchg
mov
add
xor
pop
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
and
and
pop
fs
enter
aas
rcl
add
bound
jle
sub
add
nop
inc
jmp
jo
das
iret
sbb
push
pop
nop
jmp
push
xor
push
pop
jmp
and
xor
fwait
cmp
add
bound
mov
xor
and
pop
lock
add
dec
or
pop
nop
jmp
xchg
cmp
inc
or
push
out
sahf
pushf
add
popf
ret
pusha
nop
popa
jmp
mov
jb
push
mov
push
mov
pop
jmp
mov
adc
aaa
adc
sub
add
test
and
add
xchg
std
(bad)
push
xchg
pop
pushf
add
inc
and
jmp
jbe
or
sub
mov
add
popf
ret
pushf
push
pop
popf
jmp
dec
add
fcomp
es
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
pop
push
pushf
add
popf
ret
nop
jmp
les
sbb
std
cmp
adc
pop
test
sub
inc
fiadd
aaa
push
sub
push
cmp
cmp
fs
or
push
pop
jmp
jmp
mov
shr
pusha
nop
popa
mov
jmp
push
lods
push
dec
inc
push
adc
sbb
aaa
xor
popa
jne
jmp
xchg
add
inc
or
push
pop
nop
jmp
hlt
or
jmp
aaa
arpl
cmp
or
fdiv
add
data16
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
jmp
fdivr
repz
popa
jp
test
lds
xchg
sub
and
pop
call
nop
jmp
xor
popa
xor
jmp
gs
test
xchg
pop
pushf
push
pop
popf
mov
jmp
mov
xchg
imul
sub
cs
or
push
sbb
pusha
add
adc
nop
popa
nop
jmp
bound
aad
cmp
pop
mov
mov
sbb
pop
pop
dec
imul
xchg
pushf
add
popf
ret
pusha
pushf
add
popf
popa
mov
jmp
cmp
pushf
push
pop
popf
nop
jmp
xchg
sbb
mov
jmp
and
push
pop
xor
popf
ret
xchg
xor
push
cmp
pop
mov
sbb
sbb
push
pop
not
jmp
push
les
dec
mov
and
jp
xchg
inc
popf
ret
nop
jmp
dec
jp
and
pop
pop
jmp
xor
and
push
(bad)
es
inc
jl
sbb
dec
xor
popf
dec
push
mov
pop
imul
jmp
dec
push
pop
jmp
add
or
pop
fisttp
sub
xor
add
ins
ret
dec
and
pop
or
(bad)
(bad)
jmp
sub
loop
out
mov
or
pusha
dec
xor
addr16
cmp
movs
jo
dec
pusha
pushf
add
popf
popa
nop
jmp
retf
push
xchg
pop
nop
jmp
xor
push
inc
cmp
push
jp
pop
xchg
dec
xchg
and
or
and
pushf
push
pop
popf
nop
jmp
popa
inc
push
inc
popf
pop
nop
nop
jmp
sub
cmp
pop
nop
jmp
inc
imul
push
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
or
jmp
cmp
push
pop
popf
add
jmp
mov
jmp
mov
cmp
sbb
inc
or
push
pop
nop
nop
jmp
dec
push
pop
je
jmp
ins
fldenv
nop
popa
add
jmp
dec
or
je
push
pop
mov
jmp
xor
and
xor
add
sbb
pop
jmp
cmps
push
int
nop
mov
jmp
aas
and
pusha
inc
inc
pusha
nop
popa
imul
jmp
sub
sbb
or
add
dec
fidivr
dec
outs
ss
fbstp
inc
outs
and
add
sbb
sub
outs
dec
and
cmp
push
push
hlt
sub
ja
pop
push
jmp
fsub
pusha
sbb
jge
movs
adc
push
adc
inc
mov
add
mov
add
popf
ret
jmp
pop
out
xchg
inc
lods
jnp
and
dec
pusha
nop
popa
jmp
push
ss
push
mov
jmp
cmp
xor
adc
es
add
xor
xor
xor
rol
repz
push
pushf
add
popf
ret
push
lea
pop
add
jmp
(bad)
xlat
arpl
add
sbb
pop
jmp
lahf
push
cli
push
jmp
xchg
push
pop
nop
jmp
push
jne
pop
jmp
inc
les
les
adc
dec
out
cmp
add
sbb
icebp
pop
nop
mov
jmp
and
xor
mov
jmp
outs
cmp
bound
sti
call
and
pop
mov
sbb
jmp
sub
xor
jmp
sub
and
inc
and
jmp
dec
out
push
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
ja
lea
pop
jmp
sbb
and
inc
dec
push
adc
inc
scas
dec
(bad)
jns
and
stos
ss
pop
push
xor
jns
ja
pop
dec
adc
and
add
pop
mov
jmp
ins
fsub
mov
add
popf
ret
mov
jmp
js
mov
adc
hlt
ja
pushf
add
popf
ret
push
lea
pop
mov
jmp
dec
jmp
pop
jp
cmp
outs
add
or
add
sbb
pop
jmp
(bad)
pop
adc
add
sbb
pop
nop
jmp
add
add
pop
nop
jmp
gs
pop
retf
outs
nop
jmp
jl
bound
push
pusha
dec
jnp
push
pushf
add
popf
ret
les
jp
das
ja
daa
popa
jl
ja
pop
push
pop
mov
jmp
add
les
sbb
popa
pop
push
dec
dec
sti
or
push
and
jmp
dec
sbb
ins
ins
dec
dec
jne
dec
xchg
xchg
jmp
push
push
adc
fistp
or
push
pushf
add
popf
ret
pushf
push
pop
popf
call
jmp
dec
push
lea
pop
call
nop
jmp
nop
jmp
aaa
push
mov
dec
inc
push
mov
pop
jmp
or
sbb
mov
(bad)
jmp
mov
push
pop
jae
and
xchg
pushf
add
popf
ret
pusha
nop
popa
jmp
enter
cdq
sub
sub
iret
push
call
dec
push
pushf
add
popf
ret
push
lea
pop
nop
jmp
jns
inc
pop
adc
xchg
pushf
add
popf
ret
ficom
cmp
rcl
dec
dec
sub
xor
mov
add
popf
ret
nop
not
jmp
dec
pop
inc
jne
push
push
inc
and
xchg
jmp
push
dec
(bad)
pop
cmp
add
adc
cmp
adc
jl
mov
add
popf
ret
movs
add
fstp
in
cli
pop
ins
pop
pusha
inc
xchg
es
inc
cmp
add
push
and
and
icebp
jl
cmp
pop
out
aaa
or
push
in
adc
or
jmp
adc
sbb
sub
sub
inc
cmp
outs
(bad)
jp
pop
test
push
adc
and
mov
jge
aam
mov
cmp
pop
add
xor
addr16
dec
in
push
pushf
add
popf
ret
push
pushf
add
popf
ret
in
inc
and
sbb
cmp
outs
je
jmp
push
xchg
jp
adc
sub
add
ss
jb
push
or
cmp
sub
das
jne
dec
cli
adc
push
popf
lahf
pushf
add
popf
ret
pushf
push
pop
popf
jmp
pop
mov
mov
mov
add
popf
ret
push
pushf
add
popf
ret
push
mov
pop
push
jmp
pop
loopne
jmp
xchg
push
pop
nop
jmp
add
sbb
jmp
ins
aad
xchg
add
sbb
pop
jmp
inc
and
add
sbb
pop
nop
jmp
inc
sbb
pushf
push
pop
popf
mov
jmp
jne
jmp
popf
inc
sub
or
add
inc
or
push
pop
nop
nop
jmp
jnp
push
clc
jmp
xchg
adc
fs
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
jmp
daa
test
outs
push
jnp
push
pop
popf
push
jmp
and
mov
repnz
jmp
bound
xor
shr
cmp
pushf
add
popf
popa
mov
jmp
test
nop
push
jmp
jns
jbe
jae
or
inc
mov
dec
push
jl
mov
dec
jl
jl
push
inc
pop
push
sbb
cli
jge
ret
push
pushf
add
popf
ret
xchg
xchg
nop
jmp
jnp
pushf
push
pop
popf
jmp
jb
add
pop
jnp
jns
stc
pop
and
inc
ins
add
adc
or
pop
xchg
xchg
pop
jmp
jne
jmp
xchg
push
pop
nop
nop
jmp
or
nop
jmp
dec
jnp
or
ins
xchg
fs
dec
sub
pop
in
jb
dec
xor
push
mov
pop
push
jmp
jo
js
push
pop
popf
pop
jmp
pop
jnp
addr16
sbb
jmp
sbb
imul
sub
add
and
add
add
sbb
pop
push
pop
nop
jmp
scas
sub
inc
cmps
adc
ds
mov
fbstp
inc
push
pushf
add
popf
ret
loope
or
ficomp
mov
or
cmps
sub
pop
add
jmp
add
adc
inc
nop
jmp
sub
sub
jle
mov
sub
sbb
les
shr
gs
jecxz
stos
imul
pushf
push
pop
popf
mov
jmp
pusha
sub
gs
pushf
add
popf
ret
nop
jmp
lea
adc
jo
out
sub
lods
pushf
add
popf
ret
xchg
xchg
jmp
sub
jmp
xchg
push
pop
nop
jmp
add
push
jbe
sbb
pusha
movs
add
retf
sbb
cmps
adc
add
push
nop
nop
jmp
push
lods
push
mov
add
inc
and
mov
jmp
pop
or
test
jge
jge
inc
or
adc
pushf
push
pop
popf
jmp
aas
and
sub
cmp
add
and
dec
pop
jnp
sub
add
add
sbb
pop
jmp
jmp
push
pop
popf
nop
jmp
or
pushf
push
pop
popf
jmp
dec
out
arpl
push
jmp
xor
adc
push
(bad)
cmp
sbb
pop
jmp
icebp
jno
push
pushf
push
pop
popf
nop
jmp
jno
xchg
add
nop
push
jmp
or
(bad)
xor
add
pop
(bad)
push
in
push
dec
jmp
popf
jmp
pop
mov
inc
pushf
push
pop
popf
pop
jmp
int3
jnp
jns
sub
popa
jmp
push
arpl
or
mov
or
add
jne
(bad)
call
pop
dec
(bad)
add
out
or
adc
dec
ficom
push
dec
adc
dec
bnd
and
mov
jnp
jb
cmp
or
pop
aas
outs
pop
cli
cmp
mov
and
std
pop
jl
pushf
push
pop
popf
mov
jmp
adc
dec
dec
push
lea
pop
mov
jmp
inc
addr16
adc
jmp
cmp
add
add
inc
mov
jmp
push
js
mov
pop
pop
jmp
jb
push
pusha
nop
popa
push
jmp
jne
and
and
inc
or
push
pop
nop
jmp
hlt
xor
nop
add
data16
daa
pushf
push
pop
popf
jmp
ins
or
inc
xor
ja
add
jbe
aas
or
xlat
pop
sbb
into
jg
sub
cmp
imul
out
jmp
inc
fwait
sub
jg
popa
add
call
ja
jns
adc
pop
jmp
sub
ins
pop
cs
pop
(bad)
jmp
xchg
push
pop
nop
jmp
enter
add
popf
popa
jmp
and
pusha
nop
popa
jmp
jecxz
mov
aaa
aaa
jmp
push
pop
jmp
bound
sub
jo
pushf
add
popf
popa
jmp
dec
(bad)
and
sub
add
outs
or
test
add
inc
nop
jmp
popa
push
jl
mov
outs
fs
ds
daa
imul
push
pushf
add
popf
ret
or
outs
mov
sbb
cmp
popf
dec
call
ins
push
push
lds
inc
es
sbb
xchg
xchg
nop
jmp
adc
mov
pop
jmp
xchg
jnp
jo
sub
add
arpl
clc
sub
sti
pushf
add
popf
ret
mov
jmp
ds
popa
add
pop
nop
jmp
jbe
and
js
inc
jmp
xchg
push
pop
nop
jmp
inc
dec
push
xor
inc
or
dec
and
push
sbb
cmp
pushf
add
popf
popa
jmp
pop
in
pop
push
jmp
xchg
push
pop
nop
jmp
jg
pushf
push
pop
popf
mov
jmp
pop
test
imul
pop
and
outs
mov
pusha
nop
popa
nop
jmp
xor
inc
shl
fcom
mov
dec
jge
out
jmp
adc
jmp
popa
pushf
push
pop
popf
mov
jmp
call
jbe
or
dec
and
add
ins
add
adc
xor
adc
inc
jl
pop
add
sbb
adc
fcomp
dec
cmp
and
inc
and
jmp
sbb
pop
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
nop
jmp
fist
push
test
popf
push
mov
das
sub
fisub
dec
cmp
repz
sbb
or
add
lods
shl
xor
pushf
push
pop
popf
mov
jmp
test
and
and
mov
adc
inc
nop
jmp
cmps
and
lea
mov
pop
jmp
adc
ss
icebp
adc
sbb
push
pop
popf
jmp
sbb
shl
cmp
sbb
push
mov
xchg
dec
in
add
add
inc
or
push
pop
nop
jmp
push
pop
push
pop
jmp
jae
sub
or
sub
jmp
xchg
push
pop
nop
jmp
mov
pusha
nop
popa
jmp
sub
outs
adc
pop
sub
add
xchg
jns
daa
stc
sub
inc
rcl
ret
popf
popa
push
jmp
mov
inc
punpckhbw
add
popf
ret
add
and
or
nop
jmp
inc
cs
xor
outs
scas
ds
cmp
in
jb
sar
(bad)
sbb
adc
push
lea
pop
call
nop
jmp
mov
jp
inc
sub
ja
repz
sub
xchg
jg
sub
pop
cwde
jp
pop
in
adc
dec
push
pop
jmp
sub
push
mov
sub
sbb
pop
jmp
fwait
or
sbb
and
movlps
jle
popa
repz
lea
not
jmp
push
inc
in
test
pusha
push
lea
pop
jmp
rcl
inc
or
inc
or
push
pop
nop
jmp
sub
fcmovb
(bad)
push
add
rol
dec
clc
jmp
cmp
mov
and
push
pusha
nop
popa
nop
jmp
dec
(bad)
jne
pop
xchg
jle
pushf
add
popf
popa
not
jmp
sub
pushf
push
pop
popf
jmp
inc
push
xor
inc
dec
ins
nop
jmp
sub
pop
jbe
adc
loopne
pushf
add
popf
ret
pusha
nop
popa
jmp
push
push
gs
pop
push
sbb
xchg
nop
jmp
shl
sub
cli
pushf
add
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
inc
push
pushf
add
popf
ret
xchg
xchg
nop
jmp
sti
add
push
push
js
jbe
inc
add
jg
jle
gs
dec
xchg
adc
es
jo
push
(bad)
and
sbb
imul
inc
lds
and
cmp
xor
pop
ja
xor
add
push
xor
pusha
nop
popa
nop
jmp
cmp
adc
xor
push
pushf
add
popf
ret
pushf
push
pop
popf
mov
jmp
fbld
nop
jmp
pop
jns
shl
aaa
pop
add
xor
inc
adc
js
dec
inc
push
push
pushf
add
popf
ret
nop
push
jmp
popf
js
pop
es
sbb
add
add
jmp
or
sbb
pop
not
jmp
sbb
dec
sbb
leave
pushf
add
popf
ret
pushf
push
pop
popf
mov
jmp
xor
int3
and
fsubr
nop
call
nop
jmp
sbb
mov
jmp
pop
addr16
sub
mov
in
cdq
repnz
(bad)
cmp
outs
into
and
pushf
add
popf
popa
mov
jmp
lea
pop
popf
jmp
arpl
daa
add
jae
add
inc
or
push
pop
nop
jmp
fisubr
pushf
add
popf
popa
ret
jmp
jle
inc
inc
push
pushf
add
popf
ret
pusha
nop
popa
not
jmp
pop
push
nop
popa
add
jmp
push
lock
imul
loopne
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
sbb
inc
cmp
sub
dec
pushf
jbe
xor
pusha
nop
popa
nop
jmp
xor
rol
xchg
pop
jmp
push
je
out
out
push
cmps
jne
and
push
pop
popf
push
jmp
mov
jns
pushf
add
popf
ret
pusha
nop
popa
jmp
pop
jo
and
cmp
jmp
or
pop
mov
sti
add
adc
sub
pmulhuw
cmp
push
pushf
add
popf
ret
push
pushf
add
popf
ret
sbb
xlat
jg
inc
xchg
inc
jle
das
xor
mov
pop
jmp
out
sub
fs
jmp
mov
sbb
sbb
pop
jmp
cmp
xlat
das
jno
adc
fist
ins
add
push
pop
addr16
scas
xor
repz
call
add
cmp
dec
add
and
int3
js
cmp
pop
imul
jmp
pop
add
push
lea
pop
pop
jmp
push
push
adc
jmp
xchg
push
pop
nop
nop
jmp
push
pusha
nop
popa
nop
jmp
adc
xor
sub
mov
add
popf
ret
cmc
(bad)
sub
add
push
jno
or
pusha
nop
popa
jmp
add
mov
mov
jl
adc
jmp
call
jno
jle
pop
(bad)
cmp
(bad)
xor
cmp
test
pop
je
and
js
ins
dec
test
shl
add
adc
push
lea
pop
add
jmp
sub
jg
nop
popa
cmp
jmp
push
adc
data16
adc
xchg
jl
and
in
inc
fild
sbb
push
push
cdq
adc
pusha
nop
popa
jne
jmp
xchg
ins
push
mov
pop
jmp
sub
and
nop
jmp
adc
jmp
jp
jae
jmp
xor
jp
lods
pushf
add
popf
ret
inc
xor
lahf
push
mov
cmp
mov
add
popf
ret
jmp
xchg
push
pop
nop
push
jmp
fs
pop
jmp
jb
inc
dec
cmp
mov
pop
nop
jmp
xor
jle
nop
jmp
cmp
adc
adc
popa
nop
jmp
push
imul
jmp
xchg
push
pop
nop
jmp
or
sbb
pushf
add
popf
ret
mov
inc
pop
inc
mov
in
cmp
jns
push
jmp
dec
fisub
push
imul
nop
push
jmp
cli
push
stos
or
sub
sbb
xchg
and
add
ins
push
pushf
add
popf
ret
pusha
nop
popa
jmp
mov
jae
sbb
add
sbb
pop
nop
jmp
setne
push
mov
ss
or
mov
and
push
dec
jl
add
test
push
push
pop
nop
jmp
(bad)
sub
aas
outs
nop
jmp
jmp
push
fwait
cmp
xor
cmp
mov
add
popf
ret
push
pushf
add
popf
ret
pushf
push
pop
popf
nop
jmp
cld
inc
jne
and
pop
scas
ret
pushf
add
popf
ret
push
mov
pop
pop
jmp
adc
ss
push
in
pop
les
sub
add
pop
jmp
jnp
mov
jne
jmp
push
je
push
mov
scas
dec
push
push
push
lea
pop
nop
jmp
xor
fs
pop
jne
ja
or
cmp
pop
adc
jp
pushf
aad
add
popf
ret
push
jmp
addr16
xor
and
ins
scas
pop
xor
jmp
sbb
jl
or
add
jle
pushf
add
popf
popa
jmp
sbb
bound
ret
popf
popa
add
jmp
mov
imul
cmp
and
pushf
push
pop
popf
jmp
and
push
popa
ds
cmp
jmp
inc
or
sbb
jmp
outs
pop
popf
sbb
dec
call
clc
jmp
and
shl
jmp
jmp
je
sub
pop
push
lea
pop
add
jmp
cmp
cld
sub
cmp
js
aam
in
push
inc
popa
push
pop
not
jmp
and
push
pop
push
push
push
pop
mov
jmp
cmc
arpl
call
jmp
push
and
add
sub
js
xchg
jg
lea
pop
imul
jmp
inc
aad
push
pop
not
jmp
cmp
cs
pop
inc
push
push
pop
jmp
pop
dec
je
inc
push
(bad)
outs
push
pushf
add
popf
ret
push
pop
push
jmp
ins
jbe
sbb
(bad)
ficom
jnp
dec
adc
pop
add
ja
ud2
push
ror
mov
pushf
add
popf
popa
jmp
or
ds
jmp
add
popf
ret
push
lea
pop
jmp
mov
dec
push
pop
cmp
jmp
jmp
pop
cmps
gs
pop
jb
into
push
and
jmp
xchg
push
pop
nop
jmp
inc
cmp
dec
out
pushf
add
popf
ret
mov
lock
mov
sub
pop
call
mov
pop
add
jmp
ins
adc
hlt
add
test
pop
bound
or
jmp
xchg
push
pop
nop
jmp
dec
inc
pusha
pushf
add
popf
popa
mov
jmp
dec
jmp
inc
loop
iret
or
or
lea
pop
not
jmp
sub
jne
loop
push
je
outs
test
jmp
add
pop
jle
add
push
push
pop
nop
push
jmp
add
push
pushf
add
popf
ret
nop
jmp
mov
dec
inc
inc
popa
inc
mov
cwde
adc
pushf
add
popf
ret
shl
test
imul
push
jno
push
pushf
add
popf
ret
pusha
nop
popa
or
jmp
inc
add
pop
push
inc
and
adc
test
ret
push
pop
jmp
outs
xor
outs
sub
aad
add
movs
out
(bad)
dec
push
dec
inc
pusha
pushf
add
popf
popa
mov
jmp
mov
inc
dec
int3
mov
inc
xor
pusha
nop
popa
jmp
icebp
and
push
mov
ss
dec
into
sub
adc
inc
and
xchg
jmp
push
fwait
push
push
mov
pop
jmp
icebp
jns
dec
pusha
nop
popa
jne
jmp
scas
ss
pushf
add
popf
popa
jmp
data16
das
xor
adc
jmp
xor
xlat
add
add
sbb
pop
nop
jmp
push
mov
jno
(bad)
popf
jae
pusha
jge
mov
pop
jmp
pop
xchg
dec
retf
xor
nop
nop
jmp
jnp
imul
in
add
aad
add
sbb
push
push
mov
loope
mov
jns
xor
dec
add
mov
pop
jmp
cmp
push
inc
cld
jmp
add
add
adc
add
pop
mov
jmp
addr16
sbb
xchg
or
add
or
push
inc
mov
add
popf
ret
xlat
cs
add
cvtps2pi
pop
call
and
push
jle
sub
push
outs
data16
pusha
pushf
add
popf
popa
mov
jmp
retf
inc
pusha
nop
popa
nop
jmp
push
sahf
jg
inc
ret
sbb
add
jmp
lea
dec
adc
ret
popf
popa
jmp
jne
aas
adc
cmps
pushf
add
popf
ret
jmp
data16
jno
push
je
mov
pop
jmp
cli
pop
fist
jmp
cmp
or
sbb
sbb
and
mov
ret
push
mov
pop
cmp
jmp
sub
sar
push
dec
test
pop
push
add
push
add
sbb
dec
mov
stc
adc
add
sbb
pop
jmp
push
sub
mov
jmp
xor
xor
pushf
push
pop
popf
mov
jmp
pop
lock
(bad)
or
xor
sub
dec
push
pushf
add
popf
ret
mov
add
sbb
push
pop
jmp
sub
and
cmp
cmps
(bad)
out
pushf
add
popf
ret
jmp
jne
arpl
setnp
xor
sub
les
cmp
dec
xor
(bad)
outs
retf
pushf
add
popf
popa
not
jmp
jg
imul
pop
test
adc
aad
fwait
push
sub
cwde
adc
push
dec
push
or
sbb
xor
arpl
pop
popf
jmp
outs
loope
jns
pop
ss
mov
pop
jmp
call
pushf
add
popf
popa
push
jmp
push
push
xchg
inc
icebp
xor
add
jno
popfw
ret
pusha
nop
popa
and
jmp
adc
mov
jg
or
push
fistp
dec
jmp
mov
pushf
add
popf
ret
push
pushf
add
popf
ret
xchg
xchg
jmp
pop
adc
push
out
add
je
sbb
pusha
pushf
add
popf
popa
nop
jmp
mov
sbb
pusha
inc
ins
jmp
pop
repz
pop
adc
and
xor
jg
mov
and
add
mov
popf
ret
jmp
xchg
push
pop
nop
nop
jmp
outs
jmp
xchg
push
pop
nop
jmp
mov
(bad)
call
call
push
lea
pop
imul
jmp
aas
xor
inc
push
xchg
dec
mov
std
push
(bad)
imul
adc
pop
popf
jmp
imul
int3
push
adc
and
jmp
inc
dec
jge
push
loope
pop
outs
test
jmp
and
sbb
popa
hlt
pushf
add
popf
ret
pushf
push
pop
popf
mov
jmp
push
pop
aas
es
pop
mov
outs
inc
jbe
pop
jns
out
xor
pop
adc
shr
mov
cmp
out
call
jmp
(bad)
(bad)
jmp
ds
pop
jno
nop
popa
mov
jmp
jo
sbb
adc
nop
jmp
test
jns
jmp
xchg
push
pop
nop
jmp
adc
lea
pop
mov
jmp
jns
and
cmp
pop
jl
ret
push
mov
sbb
jle
push
clc
jmp
jae
and
cld
push
adc
and
adc
cmp
popf
ret
and
popa
jmp
jp
xchg
pop
clc
aas
push
pop
jmp
add
sub
daa
cmp
push
and
xor
cdq
das
cdq
jns
pop
in
adc
jmp
push
jge
dec
cwde
js
adc
push
pushf
add
popf
ret
push
pushf
add
popf
ret
nop
jmp
test
dec
pop
sub
pop
jnp
cmp
push
pop
jae
mov
nop
jmp
cmp
add
xor
rcr
xor
cwde
pop
inc
(bad)
pushf
add
popf
ret
nop
jmp
inc
sbb
loopne
das
xor
sbb
pop
jmp
stos
add
sbb
popa
jmp
mov
dec
xor
sbb
icebp
pushf
add
popf
ret
push
lea
pop
jmp
push
ins
nop
jmp
lahf
gs
xor
pusha
nop
popa
mov
jmp
push
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
dec
jge
or
push
xor
out
push
and
dec
push
lea
pop
jmp
adc
outs
push
mov
pop
mov
jmp
push
test
sbb
jle
dec
mov
loop
inc
push
pushf
push
pop
popf
xor
jmp
push
mov
pop
pusha
jmp
aam
adc
ins
pushf
push
pop
popf
jmp
xor
push
push
pop
jmp
sub
push
add
add
(bad)
call
dec
je
sub
outs
pusha
pushf
add
popf
popa
nop
jmp
jo
or
push
sbb
inc
and
xor
pusha
popf
ret
adc
aas
jae
out
and
or
push
pushf
add
popf
ret
pusha
nop
popa
call
nop
jmp
out
pusha
pushf
add
popf
popa
nop
jmp
or
cmp
sbb
rcl
out
sbb
cmp
pusha
nop
popa
jmp
pop
arpl
push
adc
push
push
mov
pop
mov
jmp
xor
add
out
ja
or
sub
jl
gs
pop
xchg
xchg
jmp
push
daa
push
or
jmp
cmp
adc
add
mov
dec
inc
sub
or
arpl
or
push
pop
nop
jmp
and
pushf
add
popf
popa
not
jmp
mov
pushf
push
pop
popf
jmp
jmp
retf
es
push
pop
popf
cmp
jmp
xor
nop
mov
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pop
mov
jmp
ss
nop
mov
jmp
ins
inc
jns
jmp
cmp
push
pop
nop
jmp
outs
inc
mov
mov
mov
push
pushf
add
popf
ret
push
lea
pop
jmp
outs
es
cmp
pushf
add
popf
popa
push
jmp
or
ja
push
pop
popf
jmp
jnp
or
push
mov
jmp
cli
push
repz
xchg
and
(bad)
(bad)
fidivr
popa
pop
xor
dec
or
jno
jmp
shl
data16
mov
xlat
inc
push
lea
pop
jmp
call
add
inc
or
push
pop
nop
jmp
es
push
pushf
add
popf
ret
xchg
xchg
jmp
dec
push
jmp
xchg
push
pop
nop
jmp
(bad)
push
push
pop
jmp
jmp
jmp
mov
jmp
or
pop
popf
call
jmp
xor
pop
jb
outs
and
push
push
pushf
add
popf
ret
push
lea
pop
not
jmp
es
push
pop
not
jmp
adc
pusha
nop
popa
nop
jmp
dec
retf
pop
mov
cld
push
cli
(bad)
call
inc
in
sbb
jle
push
pop
scas
jo
sub
call
add
inc
jl
push
sbb
cmp
jmp
rcr
lods
ins
push
xor
ss
pushf
add
popf
ret
push
lea
pop
mov
jmp
adc
sub
xor
pop
test
or
mov
add
jo
dec
popf
ret
push
pushf
add
popf
ret
push
pop
jmp
cmp
int
mov
adc
sbb
retf
pop
lahf
sub
push
inc
jp
jne
sub
es
bound
sbb
jmp
and
test
and
adc
call
and
mov
rcr
push
lea
pop
jmp
mov
sbb
pusha
push
ins
mov
pop
xor
jmp
jmp
ds
arpl
adc
popf
jmp
imul
pushf
push
pop
popf
jmp
cmp
pop
push
lea
pop
jmp
les
jns
pop
push
mov
pop
jmp
stos
add
jg
nop
popa
mov
jmp
js
push
xor
push
jo
and
dec
push
or
push
addr16
adc
fbld
pop
push
xchg
inc
les
push
pusha
nop
popa
push
jmp
sbb
adc
fs
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
push
pushf
add
popf
ret
pusha
pushf
add
popf
popa
pop
jmp
clc
inc
dec
push
pushf
push
pop
popf
mov
jmp
test
leave
sar
inc
jg
sbb
push
push
pushf
add
popf
ret
push
lea
pop
nop
jmp
push
fs
mov
jmp
mov
test
sub
cmps
cmp
add
sbb
add
push
adc
push
and
pushf
add
popf
popa
nop
jmp
mov
popf
pop
add
jecxz
dec
dec
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
adc
push
dec
add
mov
(bad)
jmp
pop
sbb
cmp
mov
cmp
inc
jns
nop
jmp
aam
sbb
jle
adc
popa
xor
lea
aad
je
sahf
or
popa
jmp
add
dec
test
ret
popf
popa
nop
jmp
jmp
pushf
add
popf
popa
jmp
jno
ins
into
sbb
test
(bad)
(bad)
mov
push
push
pushf
add
popf
ret
pop
sbb
ins
mov
add
cmp
or
add
cmp
dec
jg
push
pushf
add
popf
ret
pusha
nop
popa
popa
jmp
push
sub
cmp
je
xchg
xchg
jmp
sub
jp
nop
popa
mov
jmp
and
jg
sbb
inc
and
jmp
push
cmp
adc
jmp
jb
pop
push
jno
mov
add
add
and
jmp
js
and
or
daa
mov
or
push
(bad)
pusha
adc
das
mov
out
pushf
pushf
add
popf
ret
push
lea
pop
jmp
lods
aaa
and
or
iret
(bad)
dec
je
push
ret
sbb
jns
sbb
push
dec
pop
sub
inc
rcl
sub
pop
jno
jl
daa
imul
sbb
pop
jmp
imul
jmp
jl
sub
sub
or
dec
jmp
call
dec
addr16
jno
sub
pop
daa
addr16
pop
out
cmp
nop
or
pop
push
pop
cmp
jmp
jp
jmp
and
pop
and
push
mov
ror
jmp
inc
inc
pop
cmp
inc
and
xchg
nop
jmp
jns
push
pushf
add
popf
ret
pusha
nop
popa
jmp
xchg
pop
fidivr
cmp
(bad)
(bad)
inc
sub
pop
scas
push
addr16
cld
jl
and
mov
and
cs
lods
push
popf
ret
push
pushf
add
popf
ret
add
and
push
std
pop
test
adc
add
inc
or
push
pop
nop
jmp
test
nop
add
jmp
mov
push
sub
or
ins
jno
dec
sub
dec
jb
pop
adc
jp
push
imul
add
cs
add
pop
jmp
mov
add
xchg
xchg
push
jmp
nop
inc
push
pop
sub
jmp
ins
inc
dec
sbb
and
mov
adc
push
jno
cmp
and
pop
mov
pushf
add
popf
ret
push
lea
pop
jmp
sub
jo
xor
adc
cmp
int3
pop
adc
jne
jmp
dec
add
(bad)
inc
cli
and
pop
and
jmp
sbb
pop
push
pushf
add
popf
ret
loopne
stos
sbb
adc
or
jl
ins
nop
add
jmp
stos
pop
push
pop
addr16
cmp
nop
jmp
xchg
or
xor
or
push
lea
sbb
sbb
mov
jmp
xchg
xor
push
sbb
add
popf
ret
dec
xor
dec
ret
and
arpl
sbb
jmp
jmp
pop
push
or
jmp
xchg
push
pop
nop
nop
jmp
push
inc
or
xor
dec
cmp
lds
add
jmp
pop
jg
or
cmp
push
lea
pop
jmp
mov
sub
xchg
pop
imul
iret
jnp
pop
aad
shl
xor
adc
inc
or
jmp
or
xor
add
inc
or
push
pop
nop
nop
jmp
xor
call
pop
inc
adc
jl
js
nop
popa
jmp
lea
dec
cmps
pop
mov
pusha
pushf
add
popf
popa
jmp
pop
jmp
lea
pop
jmp
outs
pop
adc
mov
pop
jmp
sbb
pop
cdq
pop
stc
gs
lock
ins
mov
add
fidiv
jne
and
rcl
or
cs
pushf
add
popf
ret
jmp
xchg
push
pop
nop
jmp
gs
push
pushf
add
popf
ret
push
pop
ret
arpl
dec
(bad)
ds
cmp
sbb
popa
jmp
xor
sub
jge
xor
(bad)
or
add
js
por
add
inc
or
push
pop
nop
jmp
fiadd
push
pushf
add
popf
ret
mov
jp
imul
xor
jp
jno
cdq
inc
adc
pushf
add
popf
ret
push
pushf
add
popf
ret
out
push
stc
sbb
sub
add
jb
push
mov
icebp
sub
data16
mov
jmp
das
sub
pop
xchg
dec
in
or
arpl
push
ret
and
add
sbb
pop
nop
jmp
xor
cmp
add
fisubr
adc
pop
jne
sub
nop
jmp
leave
add
adc
pop
or
and
mov
add
popf
ret
push
pushf
add
popf
ret
sub
or
add
dec
mov
and
xchg
push
pop
nop
jmp
pop
cmp
nop
popa
jmp
fnstcw
or
mov
pop
mov
jmp
cmp
mov
jmp
pop
sbb
pop
inc
push
lea
pop
sub
jmp
add
and
popa
nop
jmp
inc
sbb
sub
js
dec
add
xor
(bad)
(bad)
mov
ret
jmp
and
dec
lock
pop
jmp
jo
sbb
dec
push
lea
pop
mov
jmp
push
inc
cmp
nop
jmp
inc
es
adc
inc
push
pusha
nop
popa
jmp
aad
jnp
or
xor
pop
push
dec
fmul
mov
push
ins
adc
or
push
pop
nop
jmp
fwait
dec
leave
and
adc
jl
loope
mov
jp
jmp
dec
add
push
mov
cmp
cs
pushf
add
popf
ret
push
pop
jmp
jae
adc
jge
push
pop
mov
jmp
inc
add
push
push
lea
pop
push
jmp
push
sub
jmp
lea
sbb
jae
ret
cmps
jl
jb
sub
push
loope
sub
push
repnz
dec
xchg
adc
dec
hlt
pusha
sub
push
push
xchg
and
adc
xor
popf
ret
jo
rol
jl
inc
sbb
(bad)
push
jmp
xchg
push
pop
nop
push
jmp
inc
pushf
push
pop
popf
jmp
sbb
jns
or
jmp
jmp
mov
jp
fbld
cdq
xor
daa
push
sub
inc
imul
add
popf
ret
pusha
pushf
add
popf
popa
jmp
pop
or
push
pushf
push
pop
popf
jmp
cmp
pusha
pusha
pushf
add
popf
popa
push
jmp
cwde
or
push
pushf
add
popf
ret
push
mov
pop
mov
jmp
fisttp
push
pop
popf
jmp
jbe
xor
push
pushf
add
popf
ret
pushf
push
pop
popf
jmp
lds
xchg
push
bound
sbb
adc
ds
in
outs
cmp
pushf
push
pop
popf
jmp
test
sbb
nop
jmp
cmp
inc
inc
jle
xor
xchg
cmp
add
jb
adc
pusha
pushf
add
popf
popa
shl
jmp
loop
mul
push
pusha
bnd
and
sub
sbb
call
ja
xor
add
sbb
jmp
push
jnp
nop
cmp
sub
jb
sub
and
pusha
nop
popa
je
jmp
push
push
lea
pop
nop
jmp
sbb
mov
pop
div
jmp
aam
and
pop
xor
pop
stos
pop
mov
repz
jp
cmp
jge
cmp
in
dec
cwde
sub
outs
sar
push
mov
pop
jmp
dec
adc
xchg
xchg
jmp
gs
mov
and
cdq
es
dec
popf
ret
mov
or
fld
ja
rcr
inc
nop
outs
jle
sbb
clc
addr16
dec
push
sub
jmp
jmp
adc
and
pop
push
pushf
add
popf
ret
push
lea
pop
mov
jmp
jbe
dec
nop
jmp
jp
test
sub
inc
pushf
cmp
sbb
add
(bad)
push
add
jmp
xchg
push
pop
nop
nop
jmp
pop
push
pushf
add
popf
ret
nop
push
jmp
push
(bad)
imul
pop
mov
jmp
fadd
jno
pop
pusha
nop
popa
jmp
and
pop
mov
jp
aas
fstp
ins
dec
ins
sbb
sub
fs
nop
popa
jmp
jmp
sbb
mov
pop
push
pop
or
sub
pop
leave
cmp
popa
jmp
popf
daa
push
xor
or
(bad)
pop
cmps
inc
pop
imul
mov
pop
jmp
pop
jl
sub
jle
xor
xor
dec
dec
pusha
pushf
add
popf
popa
jmp
push
out
mov
shr
xchg
add
or
sub
pop
push
pop
jmp
jmp
in
pop
sbb
push
lea
pop
call
nop
jmp
push
lea
pop
mov
jmp
dec
cmp
mov
sub
xor
popa
pop
sbb
nop
jmp
ja
int3
push
push
xor
push
xor
add
inc
or
push
pop
nop
jmp
fistp
pushf
add
popf
popa
jmp
cmp
jbe
sbb
pop
pop
ins
xor
xchg
jno
adc
jno
jmp
aas
pop
pop
or
int3
pop
jno
(bad)
sub
cli
push
out
pop
test
sub
das
inc
pusha
sbb
nop
jmp
xor
pushf
add
popf
popa
mov
jmp
jg
jae
dec
jle
call
dec
fcomp
and
daa
mov
and
mov
js
dec
out
call
push
scas
push
pop
and
mov
pop
imul
jmp
cmp
inc
xor
or
pusha
pushf
add
popf
popa
nop
jmp
cs
push
pushf
push
pop
popf
nop
jmp
dec
and
nop
jmp
jmp
jo
dec
fmul
nop
popa
mov
jmp
push
xchg
cmp
xor
shr
out
(bad)
dec
jl
or
or
mov
add
popf
ret
nop
mov
jmp
jge
js
inc
arpl
xchg
nop
jmp
and
push
mov
pop
jmp
sbb
in
jmp
xchg
push
pop
nop
nop
jmp
or
and
scas
sahf
pushf
add
popf
ret
(bad)
sub
dec
fcomp
push
shr
jmp
push
pop
popf
jmp
cmp
dec
nop
imul
jmp
dec
shr
push
fcomp
jle
sub
sub
xor
pop
push
add
dec
push
pushf
add
popf
ret
xchg
xchg
nop
jmp
or
mov
mov
cmp
sub
inc
push
pushf
add
popf
ret
push
mov
pop
nop
jmp
cmp
inc
or
push
pop
nop
nop
jmp
(bad)
lea
pop
pop
jmp
arpl
lea
pop
push
jmp
and
push
pop
mov
jmp
not
nop
popa
mov
jmp
and
and
push
xor
icebp
cmp
ja
es
pushf
add
popf
popa
jmp
adc
pop
stos
sbb
mov
adc
pop
jmp
jb
dec
inc
add
jne
dec
push
mov
pop
push
jmp
sbb
arpl
dec
jb
jg
aam
in
push
mov
pop
push
jmp
jb
add
inc
or
push
pop
nop
nop
jmp
cmp
pop
jmp
push
pop
or
pusha
call
and
loope
push
cmps
jbe
pop
mov
sbb
pop
or
jecxz
(bad)
inc
cmp
add
pop
jmp
xor
sub
nop
jmp
jne
inc
les
(bad)
sbb
add
pop
mov
jmp
xor
push
cli
dec
mov
jnp
push
inc
sbb
jmp
xchg
push
pop
nop
jmp
ret
pop
sahf
and
pop
mov
sub
in
ss
add
add
cmp
pusha
pushf
add
popf
popa
nop
jmp
or
and
nop
in
add
xchg
(bad)
(bad)
push
xsavec
cmp
and
jo
jno
jns
int3
pop
enter
inc
and
in
xchg
ret
lods
cmp
aaa
xor
or
aaa
into
jp
add
push
pop
popf
jmp
inc
out
pop
sub
pop
popf
cmp
jmp
outs
pushf
or
popf
popa
jmp
cmp
add
adc
jmp
jge
ds
pushf
add
popf
ret
push
mov
pop
jmp
call
sti
(bad)
dec
and
xchg
push
pop
nop
jmp
pop
jl
jmp
movs
or
hlt
imul
nop
jmp
jmp
jg
shrd
and
xchg
jmp
add
pop
jmp
add
adc
adc
nop
popa
pop
jmp
or
jne
lea
pop
mov
jmp
xor
jno
pushf
add
popf
popa
jmp
or
call
nop
jmp
dec
js
jp
mov
jmp
push
push
push
mov
add
or
dec
sahf
dec
(bad)
mov
push
mov
pop
jmp
and
daa
cmp
jmp
cmp
push
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
outs
pop
pusha
pushf
add
popf
popa
nop
jmp
and
in
or
popf
popa
and
jmp
aaa
and
mov
adc
add
jmp
std
inc
dec
or
fcom
add
or
popf
ret
push
pushf
add
popf
ret
pusha
nop
popa
mov
jmp
adc
outs
sub
jmp
cmp
jmp
jnp
popf
aas
mov
pop
inc
pop
mov
dec
mov
iret
sub
add
ror
jb
jg
fmul
adc
repz
jg
lea
pop
nop
jmp
adc
push
pop
xor
jmp
jl
dec
in
xchg
sbb
add
pop
popf
jmp
pusha
dec
adc
push
jmp
pop
sub
in
adc
inc
cmp
pusha
pushf
push
pop
popf
jmp
push
aas
jl
sub
push
jmp
dec
inc
dec
pushf
push
pop
popf
jmp
or
inc
fdiv
cld
ins
pusha
pushf
add
popf
popa
jmp
popa
jmp
jmp
sahf
sbb
pushf
push
pop
popf
jmp
push
mov
jbe
js
adc
bound
cmp
fwait
jae
das
inc
test
ret
sub
sbb
pusha
nop
popa
mov
jmp
cmp
adc
inc
sbb
ins
dec
and
(bad)
bound
push
xor
and
pop
sub
setge
push
pushf
add
popf
ret
xor
sbb
imul
cmp
add
and
in
push
dec
push
ret
pusha
pushf
add
popf
popa
jmp
push
dec
inc
lea
push
pop
popf
push
jmp
jnp
jle
sbb
gs
or
dec
bound
popa
jge
jno
add
nop
popa
not
jmp
test
xchg
xchg
jmp
outs
dec
outs
push
and
idiv
bound
jns
add
jbe
sbb
pop
fwait
push
ret
push
xchg
xchg
push
jmp
dec
cmp
mov
fcomp
popa
pop
mov
ds
pushf
add
popf
ret
cmp
mov
ror
aas
call
pop
mov
lods
cmp
add
pop
nop
jmp
sbb
push
pushf
add
popf
ret
jmp
imul
push
sub
xor
mov
push
pop
pop
jmp
aas
or
aaa
div
xchg
arpl
adc
jmp
dec
hlt
pop
mov
add
jmp
pop
jb
dec
adc
mov
rcl
add
popf
ret
pop
jmp
into
and
arpl
outs
sub
lock
push
pop
popf
mov
jmp
xchg
pop
pushf
push
pop
popf
jmp
xor
jmp
xor
daa
cs
push
aas
nop
nop
jmp
sub
cli
bound
sbb
push
call
jo
(bad)
jmp
jbe
mov
add
pop
jl
popf
ret
xchg
xchg
div
jmp
push
xchg
xchg
nop
jmp
adc
nop
popa
mov
jmp
ds
je
popa
jmp
jl
add
sbb
add
sbb
pop
jmp
cmp
jle
lea
pop
nop
jmp
push
or
inc
call
das
xor
inc
inc
xor
cmp
add
pop
mov
jmp
push
push
sbb
leave
sub
imul
mov
pushf
pop
and
sbb
jno
push
push
pop
jmp
push
idiv
mov
data16
xchg
push
pop
nop
jmp
pop
sbb
jb
inc
ja
pop
inc
push
bound
push
push
pushf
add
popf
ret
push
pushf
add
popf
ret
stos
and
add
pop
jb
add
sbb
adc
jmp
sub
inc
out
jnp
pop
inc
ss
and
mov
inc
sbb
jno
add
inc
or
push
pop
nop
jmp
pop
xchg
xchg
nop
jmp
and
add
jmp
fdiv
sub
(bad)
jmp
es
mov
push
lea
pop
mov
jmp
or
popa
jmp
cld
gs
pop
jno
inc
and
sti
jle
xor
pushf
or
adc
sbb
(bad)
mov
call
push
jmp
xchg
push
pop
nop
nop
jmp
xor
add
inc
or
push
pop
nop
jmp
shl
pop
add
jmp
ds
or
call
nop
jmp
ds
xchg
xchg
nop
jmp
adc
xchg
xchg
nop
jmp
loopne
cmp
hlt
push
out
(bad)
es
jnp
aas
into
sub
call
in
pop
xor
add
sbb
pop
imul
jmp
pop
jmp
pop
sbb
mov
cmp
mov
jmp
inc
push
jb
nop
popa
nop
jmp
jo
adc
cmp
xor
dec
inc
int3
add
mov
gs
push
dec
cmp
jmp
and
push
sbb
dec
inc
sbb
inc
pop
ins
push
pushf
add
popf
ret
pusha
nop
popa
push
jmp
sub
and
push
pushf
add
popf
ret
nop
jmp
pushf
add
push
jecxz
inc
inc
movs
jl
das
cmp
das
sbb
pop
pop
ret
jl
jns
adc
push
ds
jbe
sbb
inc
cld
jmp
(bad)
jb
dec
aaa
and
push
pop
jmp
pop
cmp
addr16
xor
sti
push
nop
jmp
add
inc
gs
retf
dec
mov
mov
adc
or
test
push
dec
pop
jne
dec
push
push
pushf
add
popf
ret
xchg
xchg
jmp
jae
sub
popa
pop
jmp
inc
in
jb
outs
mov
mov
(bad)
push
add
push
pop
jecxz
int3
jmp
lea
cmp
push
pusha
nop
popa
jmp
stos
push
mov
push
nop
jmp
fild
dec
xor
fs
cmp
popa
aaa
push
dec
jo
jbe
or
cmp
or
push
cwde
aam
add
popf
ret
out
xor
in
stc
inc
xor
pushf
add
popf
popa
xor
jmp
data16
jnp
jmp
cli
dec
jp
outs
sub
pop
jmp
dec
or
pop
addr16
pop
jbe
jmp
xchg
push
pop
nop
nop
jmp
xor
aam
add
popf
ret
push
jmp
cld
adc
aas
mov
push
lea
pop
nop
jmp
jbe
sub
add
pop
jmp
out
xchg
arpl
pop
push
pushf
add
popf
ret
push
pushf
add
popf
ret
nop
jmp
popf
push
imul
das
cdq
or
dec
push
pushf
add
popf
ret
push
mov
pop
mov
jmp
daa
push
mov
pop
mov
jmp
dec
jmp
fs
push
inc
outs
add
pushaw
jbe
cmp
ins
mov
mov
je
(bad)
adc
jne
jge
pushf
add
popf
popa
push
jmp
outs
push
jns
sub
lods
pushf
add
popf
ret
mov
jmp
repnz
cmp
lock
pushf
add
popf
ret
mov
jmp
sub
inc
fbld
fwait
jbe
lods
pushf
add
popf
ret
nop
push
jmp
sbb
jno
dec
push
das
cmp
cmps
aad
(bad)
jp
xor
xor
cmp
xor
pop
fwait
and
outs
pusha
gs
xor
data16
ss
jae
fld
pop
jmp
pop
push
inc
je
push
sub
jno
jmp
stc
cmp
adc
lods
jp
and
sbb
sbb
pop
scas
and
pushf
(bad)
inc
bound
dec
jns
push
pushf
add
popf
ret
push
lea
pop
call
nop
jmp
xchg
xchg
jmp
add
and
sub
pop
cmps
and
adc
pop
xor
sub
pop
sbb
sub
dec
mov
add
pusha
ds
pop
or
inc
movs
rcr
pop
stos
das
popf
ret
nop
jmp
push
adc
nop
pop
push
mov
pop
jmp
jmp
pop
fwait
arpl
mov
dec
xor
mov
pushf
push
pop
popf
jmp
or
fstp
test
aad
jo
(bad)
sbb
xchg
and
xor
add
pop
mov
jmp
jle
add
popf
popa
jmp
data16
pop
dec
fnsave
cmp
sub
ss
cmp
pop
pusha
pushf
add
popf
popa
jmp
pop
jmp
inc
and
xchg
jmp
and
push
lea
pop
xor
jmp
mov
rcr
mov
pushf
add
popf
ret
push
pushf
add
popf
ret
(bad)
push
out
popf
push
adc
dec
sbb
xchg
xchg
jmp
or
sbb
xchg
leave
(bad)
jmp
(bad)
sbb
js
lea
pop
jmp
(bad)
cmp
add
inc
ja
add
inc
jno
and
push
push
push
add
sahf
jl
arpl
and
pop
push
pop
mov
jmp
pop
inc
pop
xor
add
popf
popa
jmp
pusha
ja
test
popa
jl
(bad)
pushf
add
popf
ret
pusha
nop
popa
jmp
dec
cmp
mov
push
lea
pop
cmp
jmp
inc
retf
push
jl
pop
add
adc
outs
jmp
int3
xor
fidivr
mov
add
popf
ret
pusha
nop
popa
mov
jmp
fwait
inc
fs
dec
push
pop
jg
push
outs
sbb
xchg
push
pusha
nop
popa
jmp
mov
repnz
bswap
aaa
cld
daa
das
adc
pop
aaa
ja
sub
aaa
push
mov
pop
mov
jmp
inc
push
pushf
add
popf
ret
mov
jmp
or
inc
pop
push
mov
jmp
and
inc
sub
in
pop
cmp
jecxz
pop
cmovb
pop
xor
add
adc
sbb
pop
jmp
sub
in
inc
(bad)
es
adc
imul
sub
dec
ja
sbb
adc
xor
sbb
pop
sbb
sbb
mov
pushw
sub
add
or
jge
ret
xchg
dec
inc
jne
dec
ins
aaa
push
pop
push
xor
(bad)
(bad)
call
adc
inc
jno
mov
and
dec
js
adc
and
inc
push
pushf
add
popf
ret
xchg
xchg
nop
jmp
cmp
xchg
cs
pushf
add
popf
ret
xchg
xchg
jmp
xor
jge
or
mov
pop
xor
xchg
xchg
jmp
daa
jmp
jbe
dec
cmp
adc
push
pop
mov
jmp
aaa
xor
or
jmp
aas
aaa
sbb
pop
sbb
sub
test
mov
add
inc
xor
pop
hlt
sub
adc
sbb
pop
pushf
add
pop
mov
pusha
pushf
add
popf
popa
jmp
sub
mov
add
xchg
imul
push
lea
pop
mov
jmp
sbb
gs
nop
popa
jmp
add
xchg
jl
je
and
icebp
(bad)
(bad)
jmp
adc
push
pushf
add
popf
ret
push
lea
pop
ret
jmp
add
jbe
pushf
add
popf
popa
not
jmp
movs
pusha
pusha
pushf
add
popf
popa
imul
jmp
arpl
aam
lea
add
shr
push
mov
pop
mov
jmp
pop
push
mov
pop
jmp
push
and
add
jmp
xchg
inc
xor
imul
pushf
add
popf
ret
pusha
pushf
add
popf
popa
jmp
push
or
push
xor
nop
pushf
add
popf
ret
popa
cmp
dec
inc
ja
add
cs
pop
push
lea
pop
jmp
aad
mov
ins
in
add
imul
(bad)
call
jb
jge
nop
jne
jmp
jmp
enter
cld
jmp
fld
push
adc
dec
stos
or
add
inc
or
push
pop
nop
jmp
sub
pushf
add
popf
popa
nop
jmp
sub
sbb
push
pop
popf
add
jmp
mov
cmp
mov
pop
jmp
jno
jbe
push
mov
pop
sub
jmp
sbb
add
jbe
(bad)
inc
sbb
popa
jmp
mov
mov
jmp
jle
pusha
nop
popa
push
jmp
inc
push
test
or
data16
push
pushf
add
popf
ret
push
pop
jmp
jo
gs
pop
mov
pusha
ja
add
inc
or
push
pop
nop
jmp
dec
xor
nop
(bad)
jmp
pop
add
dec
and
jmp
fsubr
nop
jmp
mov
push
cmps
cmp
jle
push
ficomp
xor
sub
pop
div
xor
(bad)
(bad)
jmp
adc
stos
push
add
sub
std
add
xchg
pop
popa
adc
xor
adc
xor
aaa
pusha
nop
popa
nop
jmp
sbb
cmp
not
sbb
cmps
dec
cdq
cmp
push
mov
ret
popf
popa
jmp
outs
push
pop
test
cmp
inc
add
sub
jno
dec
pusha
pushf
add
popf
popa
mov
jmp
push
das
push
mov
pop
pop
jmp
pop
stos
cmp
add
inc
loop
inc
(bad)
jns
adc
sbb
pop
mov
jmp
and
or
in
(bad)
call
mov
xor
test
push
push
push
push
xor
stc
stc
jb
sub
ja
jge
fstp
movs
movs
mov
push
adc
push
loope
push
push
loope
inc
inc
jmp
dec
dec
add
ins
add
outs
scas
inc
inc
inc
inc
inc
mov
(bad)
fisttp
xchg
fild
(bad)
dec
(bad)
(bad)
into
sti
sti
sti
into
sti
sti
sti
movs
movs
(bad)
sti
movs
movs
adc
stos
stos
stos
sbb
stos
stos
sbb
(bad)
call
adc
call
adc
inc
inc
inc
sub
mov
mov
mov
mov
pop
enter
retf
adc
adc
jp
fstp
fnstsw
fstp
(bad)
fsubp
stos
lahf
fdivrp
cld
sti
sti
and
sti
sti
and
pop
pop
and
pop
pop
xor
xor
xor
inc
inc
inc
xor
inc
std
std
cld
jbe
mov
xchg
jns
xor
out
out
out
pop
inc
sbb
(bad)
in
and
and
and
dec
dec
or
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
add
call
call
call
call
je
jmp
mov
dec
adc
je
pop
mov
lods
je
jne
jae
dec
push
lea
xchg
test
je
jne
sub
or
add
add
add
jmp
fs
jne
je
jno
test
je
jne
dec
push
and
call
call
call
je
jmp
push
and
push
jne
je
xor
hlt
jns
test
call
call
je
jmp
pop
test
(bad)
jne
je
inc
mov
mov
retf
fimul
ret
ret
data16
mov
ss
mov
ds
xchg
dec
cmps
cmp
test
xor
inc
sub
adc
add
add
add
sub
inc
cmp
jne
ret
mov
add
add
call
call
call
je
jmp
add
inc
movs
jne
je
scas
out
inc
data16
jne
inc
fdivr
cld
xchg
not
and
cmp
je
retf
xchg
xlat
call
call
call
call
je
jmp
cmps
sub
or
and
je
jne
test
and
xchg
test
je
jne
mov
adc
call
call
je
jmp
sbb
jecxz
push
je
mov
dec
pop
je
jne
cli
dec
mov
add
add
add
call
call
je
jmp
dec
or
or
or
je
jne
and
mov
dec
call
call
je
jmp
jmp
push
je
xchg
sahf
xchg
stos
je
jne
out
add
ret
jmp
inc
add
mov
xchg
call
call
je
jmp
jge
js
jne
je
push
div
(bad)
pop
not
fs
call
add
call
call
je
jmp
push
std
mov
push
je
pop
adc
hlt
adc
int
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
sahf
add
jne
je
xchg
sbb
jne
mov
pop
or
add
test
je
jne
retf
sbb
jmp
js
add
call
call
je
jmp
fdivrp
outs
mov
push
je
cs
repz
je
jne
pop
ins
aam
lea
call
call
call
je
jmp
xchg
lods
test
jne
je
push
dec
dec
mov
div
popa
repz
inc
add
call
call
je
jmp
stos
xchg
jne
je
(bad)
sbb
je
jne
jae
xor
add
add
add
add
add
jmp
jb
sti
push
jne
je
xchg
push
dec
cmps
je
jne
sbb
and
xchg
test
je
jne
aaa
rol
mul
outs
xchg
call
call
je
jmp
inc
jno
push
jne
je
inc
pop
ds
je
jne
call
fs
call
call
call
je
jmp
ret
jmp
adc
push
je
sbb
jne
cmp
mov
add
dec
call
call
je
jmp
or
je
in
in
jge
je
jne
mov
mov
add
mov
test
je
add
sub
xor
mov
nop
mov
call
call
call
call
je
jmp
sub
push
je
data16
cmp
leave
data16
lea
xchg
not
and
cmp
je
(bad)
push
call
call
call
call
je
jmp
rcl
je
(bad)
loop
div
mov
fs
xchg
test
je
jne
ins
cmp
jmp
add
call
je
jmp
sbb
repnz
push
je
dec
sub
jne
mov
fs
call
call
call
je
jmp
mov
leave
fs
je
popa
xor
pop
je
jne
arpl
and
call
call
je
jmp
shl
sub
push
je
adc
ds
div
std
sbb
retf
or
f2xm1
add
sbb
add
call
call
je
jmp
retf
sub
cwde
aam
sub
hlt
pop
stos
jle
lea
call
add
call
call
je
jmp
sub
push
jne
je
repz
hlt
sbb
add
sub
dec
lea
call
call
call
call
je
jmp
imul
ss
je
jne
in
lahf
push
fs
xchg
test
je
jne
mov
xlat
scas
mov
xchg
call
call
je
jmp
retf
and
je
cmp
das
fs
jne
(bad)
outs
lea
call
call
call
je
jmp
mov
sub
push
je
sbb
stos
clc
add
add
add
call
je
jmp
sti
(bad)
movs
push
jne
je
dec
outs
push
xchg
je
jne
out
xchg
add
ret
lea
mov
call
call
call
call
je
jmp
mov
fsub
cmp
div
ins
xchg
cld
xchg
test
je
jne
hlt
or
mov
loopne
add
call
call
je
jmp
mov
add
fdiv
dec
je
jne
cmp
and
call
call
call
je
jmp
and
mov
jne
je
int
ins
data16
jne
xlat
xchg
cwde
xchg
add
add
call
je
jmp
int
loopne
jne
je
sbb
scas
jmp
sub
jl
ret
jmp
(bad)
js
inc
repz
inc
dec
jae
das
call
call
call
call
je
jmp
mov
push
je
xchg
repz
clc
je
jne
aaa
jno
leave
lea
xchg
not
and
cmp
je
adc
sbb
add
add
call
call
call
je
jmp
pop
cmps
rcr
sbb
sbb
je
jne
push
fs
xchg
test
je
jne
out
add
dec
push
dec
lds
add
add
add
jmp
repz
arpl
je
lea
je
jne
shl
dec
lea
call
call
call
je
jmp
and
fidiv
je
push
xor
mov
movs
iret
fcom
call
call
je
jmp
xchg
add
or
fistp
adc
div
mov
aaa
pusha
ret
jmp
sub
mov
inc
xchg
call
call
je
jmp
sbb
push
je
mov
div
fild
and
call
add
call
call
je
jmp
xchg
sbb
test
je
ret
fdiv
hlt
push
jp
int3
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
mov
push
je
cmps
xchg
dec
or
hlt
out
jmp
cld
xchg
test
je
jne
scas
lahf
lea
jmp
pop
xchg
call
call
je
jmp
(bad)
add
bnd
je
jae
adc
je
jne
mov
fs
call
call
call
je
jmp
fwait
aaa
dec
xchg
jne
je
scas
daa
xor
hlt
jmp
jmp
add
add
call
je
jmp
lods
fs
fs
je
(bad)
fwait
jb
je
jne
sbb
xlat
or
call
call
call
call
je
jmp
imul
dec
aaa
loopne
je
jne
in
push
dec
lea
xchg
test
je
jne
adc
jae
inc
aas
xchg
call
call
je
jmp
xor
fdiv
je
ds
fst
add
add
add
call
call
je
jmp
gs
fdiv
je
inc
xchg
imul
je
jne
cmp
pop
inc
add
call
call
je
jmp
cld
sub
jne
je
retf
jl
(bad)
je
jne
sahf
sbb
js
mov
add
mov
test
je
sub
add
xor
mov
nop
mov
call
call
call
call
je
jmp
dec
add
or
xlat
movs
adc
hlt
mov
fs
xchg
not
and
cmp
je
cmps
in
gs
call
call
call
je
jmp
dec
sub
or
jne
mov
div
add
lea
xchg
test
je
jne
dec
cld
or
dec
mov
add
call
call
je
jmp
pop
adc
or
test
dec
je
jne
xchg
and
call
call
call
je
jmp
pop
ss
lea
je
xchg
jne
ins
or
and
call
call
je
jmp
daa
push
add
push
je
mov
div
scas
xchg
xlat
sub
jmp
hlt
mov
and
add
call
call
je
jmp
dec
call
je
daa
xor
jne
int3
push
inc
enter
add
add
add
add
call
call
je
jmp
mov
push
je
mov
div
xchg
ret
sub
dec
lea
call
call
call
call
je
jmp
sbb
jmp
ror
inc
leave
clc
and
fs
xchg
test
je
jne
movs
mov
inc
lock
add
add
call
je
jmp
mov
push
je
ja
pop
adc
xchg
sub
add
add
add
call
call
je
jmp
icebp
jno
fidiv
je
nop
push
sbb
div
adc
and
add
call
call
je
jmp
cmps
xchg
or
jne
je
add
sbb
hlt
retf
and
mov
call
call
call
call
je
jmp
and
je
ja
and
jne
sahf
and
lea
xchg
test
je
jne
and
xor
and
add
add
call
je
jmp
xlat
push
call
or
mov
mov
xchg
packsswb
lea
call
call
call
je
jmp
loop
int
jne
je
fnstsw
and
div
dec
sbb
add
call
call
je
jmp
inc
mov
je
(bad)
gs
je
jne
(bad)
lds
jmp
loop
jmp
mov
std
xor
ins
les
add
add
add
add
add
jmp
ins
ds
or
fst
hlt
call
cld
xchg
not
and
cmp
je
daa
mov
add
call
call
call
je
jmp
jnp
adc
pop
push
cdq
div
hlt
pop
in
pop
lea
xchg
test
je
jne
imul
(bad)
jmp
add
add
call
je
jmp
cmp
jmp
push
je
popf
retf
je
jne
lock
and
call
call
call
je
jmp
mov
and
or
lods
sub
je
jne
sbb
add
dec
call
call
je
jmp
fisubr
xor
leave
test
xor
pop
shl
lock
jmp
idiv
sbb
dec
call
add
add
add
jmp
mov
push
je
fisttp
loopne
je
jne
xor
and
call
add
call
call
je
jmp
(bad)
into
movq
je
test
hlt
fs
cmp
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
push
pop
lock
jne
je
jb
lahf
cs
jne
pop
ins
fld
fs
xchg
test
je
jne
std
mov
sub
add
call
call
je
jmp
test
bound
je
pop
cdq
dec
cmp
hlt
or
and
call
call
call
je
jmp
cmps
out
add
push
je
popf
xchg
pop
je
jne
retf
ss
adc
add
add
call
je
jmp
and
or
rcl
fst
das
ret
call
call
call
call
je
jmp
popf
jo
cwde
jne
je
cmp
hlt
add
and
xchg
test
je
jne
adc
or
(bad)
jl
add
call
call
je
jmp
xor
je
loope
add
div
dec
dec
cs
lea
call
call
call
je
jmp
push
push
je
test
repz
hlt
lds
and
call
call
je
jmp
aad
mov
jne
je
fisubr
cmp
je
jne
movs
cmps
add
xchg
add
add
add
mov
call
mov
call
call
call
call
je
jmp
sub
sbb
cmp
push
les
hlt
data16
or
add
not
and
cmp
je
inc
and
add
call
call
call
je
jmp
cmp
dec
cs
je
push
dec
mov
hlt
jl
icebp
sbb
add
test
je
jne
push
inc
jnp
pop
mov
and
add
add
call
je
jmp
ficom
pop
adc
je
popf
cmp
or
call
call
je
jmp
jae
sahf
aam
push
je
(bad)
(bad)
cmp
div
or
and
call
call
je
jmp
into
jle
jecxz
push
je
cld
jb
bnd
jne
jnp
cmc
sbb
jmp
fistp
or
add
call
call
je
jmp
mov
push
je
cmp
jmp
hlt
and
add
add
add
add
call
call
je
jmp
popa
mov
pop
jne
je
stos
cmp
std
je
jne
icebp
adc
sub
dec
lea
call
call
call
call
je
jmp
xchg
stos
movs
sbb
je
mul
je
jne
adc
cmp
lea
xchg
test
je
jne
das
jmp
pop
icebp
sbb
call
call
je
jmp
xchg
dec
push
fdiv
je
outs
add
je
jne
(bad)
or
lea
call
call
call
je
jmp
mov
push
je
test
div
test
mov
call
call
je
jmp
enter
jne
je
pop
fldcw
je
jne
jmp
mov
add
call
call
call
je
jmp
push
cmps
imul
push
je
test
jne
ins
and
add
fs
xchg
test
je
jne
inc
dec
shl
xchg
call
call
je
jmp
mov
and
je
iret
enter
div
lock
iret
stos
lea
call
call
call
je
jmp
pusha
pop
pop
jge
push
je
mov
inc
cs
jne
movs
arpl
dec
call
call
je
jmp
push
addr16
adc
loopne
dec
lea
hlt
or
int
jmp
dec
shr
sub
popa
inc
pushf
cmp
fcmovnb
cmp
add
add
call
call
call
je
jmp
jne
cs
push
je
add
cmps
je
jne
rcl
in
xor
xchg
not
and
cmp
je
loop
xor
add
add
call
call
call
je
jmp
scas
fnclex
fdiv
je
(bad)
mov
ret
jne
and
and
xchg
test
je
jne
pop
mov
dec
cs
into
ins
xchg
call
call
je
jmp
cli
dec
in
sti
jne
je
int
pop
push
je
jne
mov
cmp
lea
call
call
call
je
jmp
push
cmc
xchg
leave
jne
je
call
div
fisubr
shl
and
call
call
je
jmp
dec
aam
cli
jne
je
out
push
ror
je
jne
cmp
inc
ret
jmp
sar
jl
push
xor
call
add
add
call
je
jmp
and
push
jne
je
fimul
in
je
jne
pop
retf
mov
add
add
add
add
call
call
je
jmp
xchg
xor
jne
je
inc
cmp
je
jne
lock
pop
mov
lea
jmp
call
call
call
call
je
jmp
ja
cmp
jne
je
fwait
jp
mov
div
jmp
cld
xchg
test
je
jne
in
lea
jmp
fild
add
add
add
jmp
test
push
je
(bad)
sub
leave
je
jne
imul
fisttp
add
add
call
call
je
jmp
repz
cs
jne
je
(bad)
mov
je
jne
ror
and
call
call
je
jmp
stos
jo
cmps
jne
je
sbb
pop
je
jne
or
add
add
call
call
call
je
jmp
or
ret
je
inc
cmp
je
jne
adc
pop
(bad)
lea
xchg
test
je
jne
repnz
mov
xchg
call
call
je
jmp
xor
out
push
jne
je
mov
div
jns
and
call
call
call
je
jmp
bound
loop
push
je
pop
jle
retf
je
jne
sub
add
dec
call
call
je
jmp
into
sbb
push
je
mov
div
mov
mov
add
mov
mov
mov
mov
push
push
call
pop
pop
xor
xor
ror
cmp
jbe
add
jmp
sub
bswap
inc
dec
test
jne
push
mov
call
mov
pop
mov
mov
call
call
call
call
je
jmp
retf
popa
jne
je
pop
jae
or
hlt
ret
mov
fs
xchg
not
and
cmp
je
loop
cmp
add
add
call
call
call
je
jmp
ins
sub
je
test
div
int
leave
ror
add
test
je
jne
icebp
mov
cdq
cdq
xchg
call
call
je
jmp
outs
push
imul
clc
call
mov
fs
call
call
call
je
jmp
loopne
sbb
cmps
imul
jp
add
dec
call
call
je
jmp
test
push
je
inc
fist
je
jne
jl
aam
ret
jmp
sub
xor
xchg
add
and
add
add
call
je
jmp
sub
ins
xor
je
gs
test
hlt
test
fs
call
add
call
call
je
jmp
cmp
or
lods
sar
je
jne
(bad)
jne
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
clc
xor
jne
je
cdq
test
ja
div
pop
xchg
sub
cld
xchg
test
je
jne
outs
jmp
add
xchg
call
call
je
jmp
scas
mov
je
pop
mov
je
jne
mov
sbb
lea
call
call
call
je
jmp
dec
retf
jne
je
jnp
inc
cmp
hlt
jo
mov
dec
call
call
je
jmp
dec
mov
je
xchg
ss
je
jne
or
lea
mov
call
call
call
call
je
jmp
scas
gs
mov
jmp
div
das
cmc
jecxz
lea
xchg
test
je
jne
mov
call
xchg
call
call
je
jmp
or
or
inc
push
and
div
pop
sub
and
call
call
call
je
jmp
mov
aam
jne
je
aas
push
jg
je
jne
stos
call
call
call
je
jmp
shl
je
jp
ret
div
cwde
adc
ret
jmp
retf
pop
and
lahf
inc
jmp
int3
cmp
movs
clc
push
call
add
add
add
add
add
jmp
and
je
add
sbb
xchg
imul
lea
xchg
not
and
cmp
je
adc
add
add
add
add
add
jmp
in
xchg
idiv
jne
je
shl
push
data16
jne
mov
inc
test
add
test
je
jne
repnz
(bad)
mov
mov
add
add
add
jmp
sti
adc
(bad)
jne
je
test
sub
xchg
mov
and
call
call
call
je
jmp
(bad)
fcomp
or
sti
mov
je
jne
cli
test
and
call
call
je
jmp
jne
shl
add
scas
cmps
je
jne
mov
inc
push
mov
test
add
add
call
je
jmp
cmp
jne
je
loop
sbb
div
leave
mov
and
call
add
call
call
je
jmp
adc
retf
mov
mov
div
xchg
inc
jo
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
cmp
je
or
mov
je
jne
push
xchg
xor
lea
xchg
test
je
jne
xchg
mov
sbb
jmp
movs
xchg
call
call
je
jmp
dec
test
jne
je
add
sti
push
je
jne
adc
cmp
fs
call
call
call
je
jmp
and
dec
jne
je
in
ror
sbb
hlt
or
xlat
add
call
call
je
jmp
je
xchg
jnp
push
je
sub
hlt
adc
add
add
add
add
add
add
jmp
mov
mov
or
mov
sbb
mov
inc
ror
and
shl
jp
std
sub
pop
or
and
add
add
call
je
jmp
xchg
lea
pushf
jne
je
inc
int
aam
div
mov
mov
call
call
call
je
jmp
xor
je
mov
xchg
ins
je
jne
push
mov
add
call
call
je
jmp
mov
push
je
inc
xor
xor
hlt
nop
je
inc
ret
mov
add
mov
mov
cpuid
push
push
push
push
mov
call
mov
pop
pop
pop
pop
mov
call
call
call
call
je
jmp
adc
dec
leave
jne
je
repz
jle
je
jne
test
cld
xchg
not
and
cmp
je
hlt
xor
call
call
call
call
je
jmp
adc
movs
jne
je
je
je
je
jne
stos
mov
cld
xchg
test
je
jne
mov
pushf
mov
add
add
call
je
jmp
xchg
mov
addr16
jne
pop
fnstcw
lea
call
call
call
je
jmp
mov
push
je
add
mov
hlt
fdivp
fstp
add
add
call
je
jmp
pop
ds
jne
je
mov
fstp
div
xor
dec
push
ret
jmp
mov
out
not
add
call
call
je
jmp
add
push
je
cdq
or
je
jne
enter
lea
call
add
call
call
je
jmp
inc
(bad)
ds
jne
je
xlat
or
push
je
jne
cli
mov
sbb
add
sub
dec
lea
call
call
call
call
je
jmp
movs
fistp
jne
je
pusha
mov
jne
mov
fs
xchg
test
je
jne
pop
in
pop
or
jg
xchg
call
call
je
jmp
xchg
mov
je
sbb
in
inc
je
jne
add
mov
lea
call
call
call
je
jmp
adc
addr16
jne
je
dec
int
(bad)
je
jne
ss
xor
add
add
call
je
jmp
jno
sar
push
je
(bad)
je
jne
sub
cmp
lea
mov
call
call
call
call
je
jmp
sub
jle
jne
je
jo
jbe
je
jne
xchg
jecxz
dec
add
test
je
jne
or
data16
xchg
call
call
je
jmp
add
add
jne
je
mov
div
and
fmul
add
add
call
call
je
jmp
lods
xchg
or
in
das
je
jne
fldlg2
xor
add
call
call
je
jmp
(bad)
retf
(bad)
bound
je
out
xlat
fnsave
hlt
cmp
mov
mov
lahf
and
jmp
cmp
sub
and
mov
call
call
call
call
je
jmp
retf
adc
push
jne
je
scas
in
aas
je
jne
pop
(bad)
xor
cld
xchg
not
and
cmp
je
add
add
call
call
call
je
jmp
in
jg
jne
je
lods
ret
xor
cmp
mov
fs
xchg
test
je
jne
xor
sub
xchg
call
call
je
jmp
push
xchg
jns
push
je
aaa
xlat
sbb
je
jne
push
pop
inc
pop
lea
call
call
call
je
jmp
add
mov
jne
je
jp
jne
je
jne
(bad)
add
call
call
je
jmp
mov
push
je
data16
mov
hlt
xchg
fisub
ret
jmp
dec
aas
repnz
add
call
call
je
jmp
and
je
pop
cmc
out
je
jne
ss
and
call
add
call
call
je
jmp
push
push
je
call
hlt
sar
pop
mov
lea
jmp
call
call
call
call
je
jmp
cmps
sbb
or
(bad)
jecxz
je
jne
jae
mov
lea
xchg
test
je
jne
clc
popf
lea
jmp
jno
add
call
call
je
jmp
fwait
popa
mov
jne
je
shl
hlt
cs
fcom
fs
call
call
call
je
jmp
out
xor
push
je
jo
in
shl
xor
add
dec
call
call
je
jmp
sub
in
jne
je
stos
clc
pop
sti
je
jne
scas
or
ffreep
call
call
call
call
je
jmp
sbb
push
je
jbe
or
hlt
mov
cmp
cld
xchg
test
je
jne
add
mov
sbb
add
add
add
jmp
jecxz
imul
cmps
add
ins
je
jne
dec
pusha
sub
add
add
call
call
je
jmp
jae
xchg
inc
jne
je
ja
inc
dec
je
jne
push
cmp
dec
add
call
call
je
jmp
mov
push
je
xchg
(bad)
out
je
jne
jl
cmp
ret
mov
add
xor
mov
xor
inc
test
jne
xor
mov
xor
inc
push
mov
call
pop
mov
mov
jmp
xor
mov
xor
inc
sub
mov
mov
nop
mov
call
call
call
call
je
jmp
rol
cmp
mov
fisttp
div
mov
stos
lea
xchg
not
and
cmp
je
jnp
adc
add
add
call
call
call
je
jmp
call
push
je
das
push
xchg
je
jne
out
xor
xchg
test
je
jne
sub
test
jbe
fisub
add
call
call
je
jmp
test
push
je
sub
les
addr16
fs
call
call
call
je
jmp
jle
sbb
push
je
cmp
loop
je
jne
dec
sbb
add
call
je
jmp
movs
push
je
dec
aam
leave
je
jne
inc
pop
fistp
ret
jmp
scas
pop
test
xchg
call
call
je
jmp
jae
jns
jne
je
pop
inc
pop
push
je
jne
pop
in
out
fs
call
add
call
call
je
jmp
dec
dec
jmp
cmp
push
div
data16
gs
add
sub
dec
lea
call
call
call
call
je
jmp
inc
and
jne
je
jbe
adc
je
jne
xor
mov
add
test
je
jne
jnp
mov
mov
add
add
call
je
jmp
adc
pop
jne
je
and
jecxz
je
jne
clc
and
and
call
call
call
je
jmp
inc
or
or
cmp
sbb
and
call
call
je
jmp
jl
(bad)
mov
sub
div
iret
push
inc
pop
ret
lea
mov
call
call
call
call
je
jmp
jmp
cld
xor
or
fsubr
inc
je
jne
sub
and
xchg
test
je
jne
scas
jle
setge
hlt
xchg
call
call
je
jmp
dec
jne
xor
or
sbb
gs
jne
je
inc
and
add
add
call
call
je
jmp
jg
mov
or
or
popf
je
jne
push
sahf
mov
add
call
call
je
jmp
popf
je
bound
je
pop
pop
sub
retf
ret
inc
or
jmp
xchg
and
call
call
call
call
je
jmp
out
std
out
push
je
inc
mov
jne
pusha
push
je
lea
xchg
not
and
cmp
je
and
add
add
add
add
add
add
jmp
push
dec
fs
je
inc
ins
out
je
jne
ret
fmul
add
test
je
jne
fisubr
inc
xor
(bad)
xchg
call
call
je
jmp
cmp
je
cmp
div
movhpd
lea
call
call
call
je
jmp
fsubr
je
imul
hlt
or
dec
call
call
je
jmp
test
or
(bad)
inc
dec
je
jne
mov
jmp
neg
sbb
xchg
call
call
je
jmp
sub
je
das
lods
iret
(bad)
je
jne
ss
push
test
call
add
call
call
je
jmp
test
add
lock
xor
div
movs
loope
das
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
and
jne
jne
je
mov
mov
je
jne
push
std
fisub
fs
xchg
test
je
jne
aam
lea
jmp
mov
add
call
call
je
jmp
and
add
je
sub
sub
hlt
push
inc
fidiv
call
call
call
je
jmp
jns
xchg
test
pop
je
jne
mov
pop
mov
call
call
je
jmp
cmp
push
je
arpl
iret
mov
dec
add
add
call
call
call
je
jmp
dec
mov
nop
jne
je
nop
cmp
mov
inc
mov
and
xchg
test
je
jne
push
dec
jns
inc
stos
mov
add
call
call
je
jmp
push
mov
je
sbb
jne
loopne
pop
inc
lea
call
call
call
je
jmp
sub
in
sti
jne
je
(bad)
fdivr
push
je
jne
mov
add
dec
call
call
je
jmp
in
pop
or
je
call
hlt
test
add
add
xor
mov
xor
inc
test
jne
xor
mov
mov
push
push
mov
call
pop
pop
mov
add
mov
jmp
xor
mov
mov
mov
push
mov
call
pop
mov
sub
mov
mov
nop
mov
call
call
call
call
je
jmp
loope
scas
ja
push
je
ror
outs
je
jne
cli
stos
dec
xor
add
not
and
cmp
je
inc
xor
call
call
call
je
jmp
pop
pshufw
or
pop
adc
div
pop
(bad)
fadd
xchg
test
je
jne
push
sbb
jge
lods
retf
enter
call
call
je
jmp
mov
in
jmp
callw
jne
add
inc
aaa
lea
call
call
call
je
jmp
mov
jns
jne
je
mov
push
je
jne
mov
pop
jecxz
add
dec
call
call
je
jmp
jne
jp
jne
je
les
retf
div
cmp
or
(bad)
lods
and
add
and
add
add
call
je
jmp
push
push
je
loope
xchg
fidiv
hlt
pop
sbb
add
add
add
add
call
call
je
jmp
fsubr
sub
je
and
fstp
div
(bad)
xchg
sbb
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
pop
add
push
je
js
mov
je
jne
les
and
xchg
test
je
jne
mov
ficom
xchg
call
call
je
jmp
inc
ja
dec
jne
je
dec
sbb
mov
dec
pop
ja
lea
call
call
call
je
jmp
(bad)
xchg
neg
or
es
jne
push
sar
add
call
call
je
jmp
mov
push
je
mov
div
adc
ret
lea
mov
call
call
call
call
je
jmp
mov
inc
(bad)
jne
je
arpl
fwait
je
jne
mov
or
lea
xchg
test
je
jne
mov
lods
jmp
add
add
add
jmp
ror
mov
je
or
and
hlt
push
mov
and
call
call
call
je
jmp
and
xor
je
out
in
je
jne
imul
and
call
call
je
jmp
adc
je
mov
je
jne
mov
add
ret
jmp
call
call
call
call
je
jmp
rcl
or
adc
je
jne
push
jmp
xchg
not
and
cmp
je
pushf
inc
add
add
add
add
add
add
jmp
cmp
mov
or
ret
je
jne
xor
or
fs
xchg
test
je
jne
test
mov
shl
ins
sub
add
add
add
jmp
inc
jmp
shl
je
adc
scas
je
jne
or
fs
call
call
call
je
jmp
or
push
jnp
jecxz
je
jne
js
jg
add
call
call
je
jmp
sub
push
je
aas
mov
jne
(bad)
cmp
ds
jmp
loop
mov
inc
xchg
call
call
je
jmp
or
push
je
jge
pop
(bad)
hlt
or
bound
lea
call
add
call
call
je
jmp
or
fs
je
push
push
pop
sub
hlt
in
call
(bad)
pop
add
add
add
cmp
add
add
call
call
call
je
jmp
hlt
cdq
push
test
iret
mov
jne
sub
inc
push
lea
xchg
test
je
jne
popa
inc
lea
jmp
cmp
add
add
add
jmp
jmp
or
mov
jne
inc
neg
add
add
add
call
call
je
jmp
cmp
push
jne
je
sbb
div
pop
mov
lock
call
call
je
jmp
add
push
je
sbb
jne
add
add
add
call
call
call
je
jmp
fs
popf
out
jne
je
adc
mov
hlt
pusha
xlat
mov
cld
xchg
test
je
jne
lahf
jle
mov
push
jnp
xchg
call
call
je
jmp
or
sub
or
imul
xor
add
add
add
call
call
je
jmp
ins
push
rol
je
aad
std
pcmpeqb
jne
and
add
dec
call
call
je
jmp
cmp
stos
test
je
into
adc
jne
lea
lods
ret
mov
add
xor
mov
xor
inc
test
jne
xor
mov
mov
add
mov
mov
mov
call
jmp
xor
mov
mov
push
mov
call
pop
mov
mov
mov
add
nop
mov
call
call
call
call
je
jmp
inc
popa
push
jecxz
push
je
js
fadd
sbb
add
add
not
and
cmp
je
xchg
push
movs
call
call
call
call
je
jmp
inc
adc
jne
je
imul
cs
jne
icebp
mov
and
xchg
test
je
jne
test
lds
add
add
add
jmp
cli
in
call
div
cmp
aam
inc
sti
lea
call
call
call
je
jmp
cmps
stos
ds
jne
je
gs
xchg
je
jne
clc
jecxz
das
add
call
call
je
jmp
xchg
sbb
pop
jne
je
inc
sbb
mov
ret
cli
ret
jmp
call
dec
xchg
call
call
je
jmp
fs
popa
jne
je
gs
and
div
rcr
(bad)
lea
call
add
call
call
je
jmp
mov
push
je
sbb
jne
jecxz
rcr
ret
sub
dec
lea
call
call
call
call
je
jmp
xchg
dec
stos
out
push
je
push
adc
jne
mov
fs
xchg
test
je
jne
adc
retf
es
data16
add
call
je
jmp
and
xor
jne
je
test
push
pop
je
jne
push
dec
gs
lea
call
call
call
je
jmp
or
sbb
jne
je
push
sbb
je
jne
xchg
sub
add
dec
call
call
je
jmp
adc
push
je
cmp
jne
bound
jnp
lea
mov
call
call
call
call
je
jmp
scas
add
xchg
jne
je
rcl
jne
sub
cld
xchg
test
je
jne
add
adc
test
add
jmp
adc
push
je
cmp
frndint
je
jne
sub
mov
lea
call
call
call
je
jmp
mov
push
je
icebp
daa
clc
sbb
div
pop
arpl
add
call
call
je
jmp
adc
je
in
jns
xor
hlt
mov
jmp
lahf
pop
rcr
cmc
call
call
call
call
je
jmp
lds
je
(bad)
mov
push
je
jne
mov
sti
outs
lea
xchg
not
and
cmp
je
xor
call
call
call
call
je
jmp
sub
je
push
xchg
mov
hlt
or
lea
add
test
je
jne
imul
icebp
and
add
add
call
je
jmp
adc
ret
je
push
mov
jne
pop
cmp
lea
call
call
call
je
jmp
not
aam
push
je
pop
cwde
je
jne
(bad)
mov
add
call
call
je
jmp
sahf
inc
push
inc
jne
je
lea
movs
shl
hlt
mov
lods
(bad)
or
cmps
mov
in
xchg
call
call
je
jmp
push
sub
push
je
mov
div
sbb
and
call
add
call
call
je
jmp
adc
or
add
hlt
or
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
or
je
or
div
hlt
arpl
push
jle
fs
xchg
test
je
jne
pop
jae
sbb
jmp
or
add
add
add
jmp
jmp
or
mov
jne
or
adc
add
add
call
call
je
jmp
fstp
je
inc
mov
hlt
dec
xlat
in
ja
add
dec
call
call
je
jmp
cmps
push
add
mov
hlt
movs
in
repz
call
call
call
call
je
jmp
iret
jle
hlt
jne
je
(bad)
jmp
mov
je
lea
xchg
test
je
jne
pop
mov
pop
cmps
xchg
and
add
call
call
je
jmp
mov
push
je
sub
mov
je
jne
hlt
test
add
add
add
call
call
je
jmp
retf
fbstp
je
cmps
imul
div
cmp
test
add
call
call
je
jmp
ror
lods
scas
jne
je
dec
add
jne
mov
add
add
xor
mov
mov
push
mov
call
pop
xor
mov
mov
and
xor
mov
xor
inc
test
je
mov
push
popf
add
mov
mov
pushf
pop
mov
jmp
add
mov
mov
mov
call
call
call
call
je
jmp
push
pop
rcl
or
lods
(bad)
mov
hlt
aas
call
xchg
not
and
cmp
je
dec
(bad)
and
add
add
call
call
call
je
jmp
je
(bad)
cmps
jne
je
aaa
sbb
mov
div
test
fs
xchg
test
je
jne
xchg
pop
jle
ficomp
daa
dec
xchg
call
call
je
jmp
hlt
repz
push
je
call
adc
hlt
mul
xor
add
add
call
call
je
jmp
xlat
sub
je
add
div
jmp
test
add
call
call
je
jmp
jecxz
(bad)
shl
je
push
lea
mov
div
and
mov
ret
jmp
inc
cmp
add
add
call
call
je
jmp
jle
je
jne
je
dec
add
inc
je
jne
xlat
sbb
add
add
add
add
call
call
je
jmp
sti
pushf
stos
push
jne
je
mov
div
lods
sub
sub
dec
lea
call
call
call
call
je
jmp
cmps
imul
jne
je
cwde
jge
xor
mov
mov
fs
xchg
test
je
jne
leave
hlt
fst
xchg
call
call
je
jmp
mov
push
je
dec
aaa
pusha
loop
div
push
cmp
add
add
add
call
call
je
jmp
push
aaa
pop
jne
je
jno
aas
stc
je
jne
mov
add
dec
call
call
je
jmp
dec
adc
je
scas
add
jne
lahf
jo
pop
ret
lea
mov
call
call
call
call
je
jmp
pop
mov
je
jmp
div
xlat
xor
cdq
lea
xchg
test
je
jne
add
(bad)
pop
cdq
xchg
call
call
je
jmp
mov
push
je
sub
jne
mov
fs
call
call
call
je
jmp
and
push
je
sub
div
xor
add
dec
call
call
je
jmp
sbb
cmp
popa
mov
jne
xchg
loopne
dec
mov
mov
add
add
call
call
call
je
jmp
clc
repz
jmp
div
into
std
mov
cld
xchg
not
and
cmp
je
jle
call
add
add
add
add
add
jmp
sub
push
je
mov
xor
div
pop
scas
adc
fs
xchg
test
je
jne
nop
jno
inc
popa
sbb
retf
xchg
call
call
je
jmp
(bad)
out
mov
push
je
pop
call
jne
push
push
mov
call
call
call
je
jmp
xchg
mov
je
cwde
xor
hlt
clc
inc
es
add
call
call
je
jmp
xchg
call
sahf
(bad)
push
je
jne
out
pop
jmp
cmp
mov
adc
les
add
add
add
jmp
mov
push
je
out
mov
hlt
pop
enter
fs
call
add
call
call
je
jmp
cmp
push
je
sti
jo
gs
jne
push
ret
fwait
sub
mov
lea
jmp
call
call
call
call
je
jmp
rol
mov
jne
je
fwait
xor
add
div
inc
add
cld
xchg
test
je
jne
and
sub
add
add
call
je
jmp
jge
sbb
push
je
and
jo
je
jne
mov
xor
and
call
call
call
je
jmp
dec
loop
sbb
ss
adc
push
xchg
add
call
call
je
jmp
test
xor
push
je
repz
sbb
cwde
or
add
add
add
add
add
add
jmp
xor
or
mov
ss
jne
call
cld
xchg
test
je
jne
and
call
and
add
add
call
je
jmp
push
jmp
in
jne
je
scas
stos
in
je
jne
sahf
sub
add
add
add
call
call
je
jmp
pop
push
or
push
je
retf
jecxz
and
hlt
loope
sti
and
add
add
call
je
jmp
add
(bad)
jne
je
loope
stos
dec
je
jne
ins
mov
add
add
xor
mov
mov
push
mov
call
pop
xor
mov
mov
and
mov
push
popf
sub
push
pushf
pop
mov
pop
mov
mov
mov
call
call
call
call
je
jmp
and
mov
or
mov
cmps
je
jne
sub
and
xchg
not
and
cmp
je
adc
cmp
add
add
call
call
call
je
jmp
dec
cmps
mov
jne
je
cmc
ficomp
hlt
jo
xchg
clc
lea
xchg
test
je
jne
ret
pop
or
add
call
call
je
jmp
lea
or
adc
je
jne
out
pushw
fs
call
call
call
je
jmp
fidiv
mov
je
fnsave
jne
aam
mov
add
call
call
je
jmp
fidivr
je
les
mov
div
test
jns
or
inc
mov
add
call
call
je
jmp
add
xor
lea
je
jne
xor
fdivr
lea
call
add
call
call
je
jmp
cmp
add
or
xor
fs
jne
call
sub
dec
lea
call
call
call
call
je
jmp
movs
fadd
push
jne
je
sar
sub
je
jne
fistp
retf
fs
xchg
test
je
jne
mov
or
xchg
call
call
je
jmp
mov
je
inc
loop
inc
je
jne
neg
and
call
call
call
je
jmp
test
push
or
daa
sub
div
pushf
dec
leave
xchg
add
call
call
je
jmp
cmps
jge
mov
push
je
jg
cli
push
div
outs
sar
jne
lea
mov
call
call
call
call
je
jmp
arpl
out
jne
je
mov
or
je
jne
inc
mov
and
xchg
test
je
jne
enter
bound
and
add
add
call
je
jmp
jbe
jne
jne
je
mov
div
xchg
jg
movs
lea
call
call
call
je
jmp
pushf
out
add
jle
add
je
jne
or
and
call
call
je
jmp
lea
jecxz
jne
je
pop
addr16
loop
div
mov
jmp
xchg
fstp
test
pop
add
add
add
call
call
call
je
jmp
mov
test
jne
je
xor
push
out
div
sbb
and
xchg
not
and
cmp
je
cmp
add
call
call
call
je
jmp
xor
push
je
xchg
pop
xor
daa
add
and
xchg
test
je
jne
mov
add
push
bswap
pop
xchg
call
call
je
jmp
or
dec
bnd
je
inc
(bad)
jne
inc
pop
lea
call
call
call
je
jmp
fcom
mov
jne
je
xchg
adc
jne
ror
and
call
call
je
jmp
test
and
icebp
cld
push
mov
jmp
call
js
add
call
call
je
jmp
jmp
push
je
sbb
jne
cmps
xlat
retf
fs
call
add
call
call
je
jmp
cwde
jnp
movs
jne
je
xchg
aam
jle
div
dec
or
pop
mov
lea
jmp
call
call
call
call
je
jmp
dec
icebp
test
xor
gs
jne
into
movs
sbb
lea
xchg
test
je
jne
or
lea
jmp
and
add
add
add
jmp
adc
mov
or
jge
fnsave
hlt
sub
out
lea
call
call
call
je
jmp
cld
or
sub
jne
push
mov
and
call
call
je
jmp
test
js
jne
je
ret
push
je
jne
push
fs
jno
call
call
call
call
je
jmp
loop
jl
jne
je
int
sub
int
(bad)
lea
xchg
test
je
jne
cmp
pop
sbb
add
add
call
je
jmp
retf
sbb
je
mov
div
popf
push
push
mov
fs
call
call
call
je
jmp
div
or
bnd
div
cli
aaa
xor
add
call
call
je
jmp
xchg
jne
je
ret
xor
push
(bad)
fdiv
ret
mov
add
xor
mov
mov
xor
mul
mov
mov
mov
call
call
call
call
je
jmp
frstor
mov
je
pop
sahf
sahf
ja
div
into
aad
sub
add
not
and
cmp
je
jg
push
call
call
call
call
je
jmp
(bad)
je
jmp
hlt
xor
fs
xchg
test
je
jne
sahf
enter
add
xchg
call
call
je
jmp
xlat
retf
dec
fwait
jne
je
popa
ins
fcmovne
je
jne
push
mov
add
add
add
call
call
je
jmp
jg
mov
or
idiv
arpl
hlt
xor
and
call
call
je
jmp
push
mov
mov
jmp
hlt
es
adc
jmp
sbb
lods
in
pop
cli
sbb
xchg
call
call
je
jmp
mov
push
je
xchg
int
ret
je
jne
shl
cmp
call
add
call
call
je
jmp
lds
je
aad
adc
mov
add
sub
dec
lea
call
call
call
call
je
jmp
dec
sub
das
jne
je
sbb
xchg
iret
je
jne
inc
(bad)
dec
lea
xchg
test
je
jne
repnz
leave
mov
add
call
call
je
jmp
and
and
je
push
sub
je
jne
ins
mov
add
add
add
call
call
je
jmp
sahf
push
push
fnsave
je
fdivr
es
jne
lods
dec
mov
add
dec
call
call
je
jmp
aaa
cmovp
jne
je
sahf
cmp
sub
hlt
(bad)
nop
mov
ret
lea
mov
call
call
call
call
je
jmp
push
mov
je
mov
add
je
jne
mov
stc
lea
xchg
test
je
jne
sar
out
add
call
call
je
jmp
mov
je
sbb
xor
or
fs
call
call
call
je
jmp
mov
push
je
lahf
jecxz
pop
je
jne
outs
or
call
call
je
jmp
icebp
dec
fmul
push
je
(bad)
cmps
push
je
jne
adc
jmp
fld
lea
(bad)
(bad)
in
xchg
sub
call
call
call
call
je
jmp
pushf
add
je
outs
jno
xchg
je
jne
ret
test
and
cmp
je
mul
cmp
add
add
call
call
call
je
jmp
(bad)
fbstp
jne
je
add
push
je
jne
leave
mov
stc
lea
xchg
test
je
jne
push
out
iret
or
mov
and
add
add
call
je
jmp
cmp
push
je
fsub
jne
cwde
sar
fs
call
call
call
je
jmp
ins
(bad)
adc
or
dec
dec
arpl
hlt
or
and
call
call
je
jmp
cdq
out
test
je
mov
div
add
fldcw
jmp
fbstp
loop
ss
xchg
add
add
add
jmp
mov
pop
popa
jne
je
cmp
call
and
push
fs
call
add
call
call
je
jmp
arpl
or
pop
(bad)
aam
div
ficom
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
rol
and
or
pusha
dec
ds
jne
cmp
cld
xchg
test
je
jne
cwde
add
sbb
jmp
imul
add
jmp
cmp
jne
je
inc
pop
add
je
jne
lds
jecxz
lea
call
call
call
je
jmp
lds
jno
push
je
pop
fst
add
hlt
dec
inc
inc
dec
add
call
call
je
jmp
or
jno
push
je
xor
div
jnp
ds
ret
call
call
call
call
je
jmp
popf
sub
clc
jne
je
pop
xor
daa
je
jne
add
adc
add
test
je
jne
xor
in
sub
call
call
je
jmp
xor
push
je
inc
popf
xor
je
jne
sbb
push
(bad)
lea
call
call
call
je
jmp
xor
adc
jne
je
jmp
sbb
dec
dec
mov
dec
call
call
je
jmp
push
(bad)
(bad)
jne
je
das
(bad)
pop
sub
hlt
add
mov
add
xor
mov
mov
add
mov
xor
div
push
mov
call
pop
mov
mov
mov
call
call
call
call
je
jmp
les
or
adc
jne
aam
iret
imul
and
cmp
je
mov
add
call
call
call
je
jmp
(bad)
js
push
jne
je
mov
jne
add
and
xchg
test
je
jne
leave
ret
rcr
xchg
push
xchg
call
call
je
jmp
lds
jg
push
je
bound
bound
hlt
lds
xor
lea
call
call
call
je
jmp
mov
jmp
jne
je
xor
jne
aad
sub
dec
call
call
je
jmp
sbb
je
and
and
hlt
lods
sahf
xor
fcom
ret
inc
rdmsr
xchg
call
call
je
jmp
loope
out
jne
je
push
cmp
call
fs
call
add
call
call
je
jmp
jmp
xchg
push
jne
je
cmp
div
test
inc
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
and
je
dec
out
inc
out
div
ret
fisttp
add
test
je
jne
(bad)
ja
movs
dec
mov
call
call
je
jmp
bound
in
push
je
cmp
daa
mov
hlt
xor
adc
lea
call
call
call
je
jmp
pop
dec
inc
ja
push
je
inc
test
push
je
jne
mov
add
dec
call
call
je
jmp
lods
adc
jne
je
jb
rcr
sub
adc
ret
lea
mov
call
call
call
call
je
jmp
xchg
je
mov
div
pop
rol
lea
xchg
test
je
jne
cwde
dec
popa
jmp
jno
rol
add
call
je
jmp
mov
mov
or
add
hlt
inc
aas
xchg
and
add
add
call
call
je
jmp
adc
push
je
mov
div
or
dec
call
call
je
jmp
mov
or
and
inc
je
jne
(bad)
jge
out
ret
jmp
loopne
repnz
xchg
js
lea
add
call
call
call
je
jmp
jg
(bad)
stc
jne
je
stos
mov
jne
cmp
and
xchg
not
and
cmp
je
(bad)
cmp
call
call
call
call
je
jmp
sub
sub
jne
je
pop
icebp
lea
div
das
dec
dec
dec
add
test
je
jne
xchg
add
add
add
call
je
jmp
or
pop
cld
jne
je
shl
shl
fwait
sbb
popf
lea
call
call
call
je
jmp
dec
test
or
sub
jb
div
and
add
dec
call
call
je
jmp
jecxz
stos
mov
sub
mov
hlt
aas
imul
stc
mov
and
add
add
call
je
jmp
dec
fstp
jne
je
rcr
lods
je
jne
adc
imul
fs
call
add
call
call
je
jmp
movs
inc
imul
into
int
je
jne
fcmovb
ss
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
xlat
ror
icebp
enter
div
clc
jne
cdq
lea
xchg
test
je
jne
std
movs
lea
jmp
cmps
xchg
call
call
je
jmp
push
push
je
push
es
pop
je
jne
sub
out
fs
call
call
call
je
jmp
ret
fs
je
das
push
jne
mov
jae
add
call
call
je
jmp
and
cmc
(bad)
jne
je
loopne
xor
je
jne
or
call
call
call
call
je
jmp
cli
stos
cmps
cli
jne
je
loopne
clc
or
shr
enter
cld
xchg
test
je
jne
out
bound
popa
xchg
call
call
je
jmp
jb
add
jne
je
mov
xor
je
jne
add
lea
call
call
call
je
jmp
xchg
jg
fdiv
je
and
into
dec
je
jne
loop
mov
add
call
call
je
jmp
mov
xchg
inc
jne
je
mov
div
adc
or
mov
add
mov
mov
and
xor
mov
and
push
push
call
push
mov
call
pop
mov
mov
pop
pop
mov
push
call
call
call
call
je
jmp
cli
xchg
rol
push
je
mov
jnp
je
jne
mov
fs
xchg
not
and
cmp
je
pop
sub
add
add
add
add
add
jmp
mov
push
je
push
out
sti
je
jne
call
cld
xchg
test
je
jne
or
mov
call
call
je
jmp
test
je
test
div
imul
and
call
call
call
je
jmp
and
je
mov
xchg
pusha
je
jne
cmp
and
call
call
je
jmp
jo
mov
jne
je
or
jne
(bad)
(bad)
jmp
adc
mov
cmp
xchg
call
call
je
jmp
into
and
inc
jne
je
sbb
add
div
sub
and
fs
call
add
call
call
je
jmp
lock
int3
std
jne
je
sets
hlt
inc
and
ret
popf
and
pushf
pop
mov
mov
call
call
call
call
je
jmp
int
js
jne
je
dec
mov
jne
scas
inc
adc
lea
xchg
not
and
cmp
je
sbb
add
add
add
add
add
jmp
shl
push
je
loopne
push
add
mov
mov
cld
xchg
test
je
jne
icebp
dec
enter
or
xchg
call
call
je
jmp
loop
int3
cmc
jne
je
retf
or
hlt
jb
adc
add
add
call
call
je
jmp
push
sbb
or
pop
xor
hlt
out
jecxz
add
call
call
je
jmp
rol
or
pop
xchg
xchg
je
jne
iret
mov
or
adc
and
add
add
call
je
jmp
stc
sub
or
push
inc
add
hlt
inc
cwde
jmp
add
add
add
call
call
je
jmp
adc
mov
or
inc
push
ins
je
jne
sub
dec
xchg
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
lods
jecxz
adc
fs
enter
jne
sub
and
xchg
test
je
jne
data16
push
outs
mov
or
add
add
add
jmp
adc
push
je
js
or
sbb
test
fs
call
call
call
je
jmp
aas
jmp
push
push
jge
div
inc
popf
sub
dec
call
call
je
jmp
mov
xchg
out
push
je
adc
jne
jmp
mov
add
call
call
call
je
jmp
stos
outs
mov
or
jmp
jne
sbb
fs
xchg
test
je
jne
pop
cmp
xchg
adc
xchg
call
call
je
jmp
push
scas
movs
test
je
aad
imul
mov
fs
call
call
call
je
jmp
enter
jne
je
fs
sti
jg
div
out
pop
out
add
call
call
je
jmp
pop
push
loope
jne
je
jmp
lds
je
jne
push
xor
jmp
pusha
cmp
dec
mov
test
pop
call
call
call
call
je
jmp
or
pop
test
je
pop
dec
(bad)
push
(bad)
gs
lea
xchg
not
and
cmp
je
rcr
add
add
add
add
add
jmp
sbb
sbb
jne
je
add
and
div
lahf
cmc
adc
add
test
je
jne
rcr
dec
and
jle
add
call
call
je
jmp
mov
je
fsub
jecxz
je
jne
leave
and
and
call
call
call
je
jmp
aad
pop
dec
jne
je
jae
xchg
mov
hlt
cmp
dec
call
call
je
jmp
inc
sub
retf
je
loopne
inc
enter
hlt
push
stos
and
ret
jmp
xor
pop
test
and
add
add
call
je
jmp
stos
or
push
cmp
jne
popa
add
xor
fs
call
add
call
call
je
jmp
cld
jl
mov
jge
cmp
div
mov
ror
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
mov
push
je
arpl
out
je
jne
loope
cmps
lea
xchg
test
je
jne
fwait
jbe
sbb
jmp
cmc
xchg
call
call
je
jmp
clc
pop
sbb
stos
mov
inc
je
jne
mov
push
pusha
lea
call
call
call
je
jmp
jne
inc
or
sbb
jne
in
xor
add
call
call
je
jmp
cdq
ret
jne
je
das
jecxz
mov
int3
jb
scas
ret
call
call
call
call
je
jmp
icebp
cmp
jne
je
icebp
nop
cwde
inc
je
jne
test
fs
xchg
test
je
jne
imul
cmp
and
add
add
call
je
jmp
ds
ror
jne
je
outs
scas
mov
hlt
xchg
in
aaa
leave
lea
call
call
call
je
jmp
jno
inc
and
cmp
jne
dec
jmp
dec
add
call
call
je
jmp
and
inc
mov
jle
pop
pop
je
jne
in
movs
imul
add
add
mov
mov
and
xor
mov
and
call
push
mov
call
pop
mov
mov
mov
push
popf
and
pushf
pop
mov
mov
call
call
call
call
je
jmp
push
ret
sbb
or
adc
hlt
xchg
int
mov
fs
xchg
not
and
cmp
je
jp
dec
call
call
call
call
je
jmp
pop
rcl
jne
je
pusha
sub
jne
adc
fs
xchg
test
je
jne
mov
das
xor
dec
in
test
add
add
add
jmp
ret
mov
je
and
hlt
adc
add
add
add
add
call
call
je
jmp
cmps
xchg
cs
je
and
add
hlt
inc
ins
cld
jge
add
dec
call
call
je
jmp
(bad)
xchg
pop
mov
jne
sbb
jmp
jae
repz
jnp
xor
add
call
call
je
jmp
retf
add
je
cwde
rcl
hlt
fsub
pop
out
lea
call
add
call
call
je
jmp
(bad)
clc
icebp
sbb
ret
or
hlt
mov
pop
mov
add
sub
dec
lea
call
call
call
call
je
jmp
out
xor
jne
je
push
or
jne
push
xchg
fs
xchg
test
je
jne
int3
cmp
dec
out
stos
aam
add
call
call
je
jmp
mov
mov
jne
je
rcr
jne
xchg
and
call
call
call
je
jmp
add
je
aas
xor
cdq
je
jne
enter
add
call
call
je
jmp
lds
je
xor
scas
xlat
je
jne
jbe
sbb
ret
lea
mov
call
call
call
call
je
jmp
push
fucomi
mov
je
cmps
or
hlt
push
fsubrp
loope
fs
xchg
test
je
jne
sbb
dec
sbb
xchg
call
call
je
jmp
mov
dec
inc
jne
je
adc
mov
sub
and
call
call
call
je
jmp
add
sub
jne
je
push
fmulp
dec
je
jne
pop
dec
clc
lods
add
call
call
je
jmp
out
(bad)
mov
xchg
xchg
int3
into
je
jne
daa
mov
xchg
ret
jmp
imul
add
add
call
call
call
je
jmp
xchg
cmp
jne
je
dec
(bad)
mov
hlt
test
fs
xchg
not
and
cmp
je
cmp
add
call
call
call
je
jmp
pushf
xchg
add
push
je
fisub
jne
push
dec
retf
fs
xchg
test
je
jne
shl
int3
xchg
call
call
je
jmp
mov
or
jne
je
sub
div
pop
cs
lea
call
call
call
je
jmp
psrld
jne
je
xlat
out
(bad)
jns
div
push
xchg
mov
dec
call
call
je
jmp
sub
je
mov
div
xchg
lea
add
ss
jle
add
call
call
je
jmp
addr16
jne
je
mov
sbb
hlt
xchg
xchg
mov
add
add
add
add
call
call
je
jmp
enter
jne
je
push
div
pop
mov
pop
mov
lea
jmp
call
call
call
call
je
jmp
pop
dec
push
jne
je
dec
idiv
xor
hlt
out
es
cld
xchg
test
je
jne
mov
jmp
mov
add
add
add
jmp
sbb
jbe
jne
je
mov
sbb
je
jne
into
xor
add
add
add
call
call
je
jmp
test
and
je
xor
pcmpeqb
jne
mov
sbb
and
call
call
je
jmp
aam
mov
je
or
jne
push
pusha
sub
call
call
call
call
je
jmp
ret
mov
aas
xor
test
lock
and
add
test
je
jne
xlat
xchg
in
lahf
adc
inc
outs
xchg
call
call
je
jmp
dec
movs
hlt
imul
or
mov
jne
loopne
jp
lea
call
call
call
je
jmp
or
fstp
jne
je
jns
nop
mov
hlt
dec
in
xchg
call
call
je
jmp
and
je
push
push
and
je
jne
and
mov
add
mov
mov
and
xor
mov
and
call
push
mov
call
pop
mov
mov
mov
call
call
call
call
je
jmp
sbb
pop
jne
je
jb
in
dec
je
jne
jmp
cld
xchg
not
and
cmp
je
gs
call
call
call
call
je
jmp
arpl
and
jne
je
(bad)
pushf
je
jne
popf
out
jmp
add
test
je
jne
dec
pop
jb
(bad)
aas
sbb
xchg
call
call
je
jmp
ret
add
loopne
push
je
mov
div
lods
jmp
stc
lea
call
call
call
je
jmp
mov
push
je
jns
sbb
je
jne
sbb
xchg
xchg
add
call
call
je
jmp
push
leave
adc
or
push
jle
je
jne
inc
jle
jl
jmp
outs
es
dec
jo
popf
xor
add
add
call
je
jmp
sbb
push
je
into
jecxz
sahf
je
jne
movs
mov
ja
fs
call
add
call
call
je
jmp
adc
push
je
movs
leave
adc
div
out
enter
add
sub
dec
lea
call
call
call
call
je
jmp
out
dec
ret
push
je
jl
mov
sub
and
xchg
test
je
jne
int3
int3
shl
shr
add
add
call
je
jmp
addr16
je
jno
fwait
sub
hlt
vmovhps
fs
call
call
call
je
jmp
(bad)
mov
and
je
(bad)
sub
hlt
sbb
leave
add
call
call
je
jmp
jl
and
jne
je
cmc
cwde
(bad)
fnstenv
hlt
or
push
mov
mov
call
call
call
call
je
jmp
call
or
ins
jecxz
je
jne
jl
and
xchg
test
je
jne
mov
test
(bad)
enter
add
call
call
je
jmp
in
jnp
jne
je
int
mov
hlt
or
fs
call
call
call
je
jmp
test
mov
jne
je
sbb
jne
cwde
ficom
dec
call
call
je
jmp
call
or
or
xchg
je
jne
wrmsr
sbb
iret
in
call
call
call
call
je
jmp
shl
jne
je
repz
je
jne
xchg
and
xchg
not
and
cmp
je
loopne
push
add
add
add
add
add
jmp
loop
adc
je
call
div
movs
add
lea
xchg
test
je
jne
push
inc
xchg
call
call
je
jmp
hlt
mov
je
push
and
div
push
mov
ror
add
add
call
call
je
jmp
fsubr
je
adc
aad
je
jne
rol
enter
and
call
call
je
jmp
adc
jne
je
pshufw
nop
in
mov
jmp
sbb
mov
outs
dec
mov
call
call
je
jmp
inc
clc
pop
mov
je
repnz
je
jne
sbb
lea
call
add
call
call
je
jmp
fwait
clc
and
jge
inc
(bad)
je
jne
add
imul
mov
lea
jmp
call
call
call
call
je
jmp
aad
inc
mov
push
je
push
shl
hlt
jmp
cmp
fs
xchg
test
je
jne
retf
sbb
jmp
adc
add
add
call
je
jmp
add
je
mov
div
cmps
or
lea
call
call
call
je
jmp
pop
xchg
shl
jne
je
jmp
xor
inc
popa
mov
call
call
je
jmp
push
pop
sahf
jne
je
movs
in
test
inc
add
ret
call
call
call
call
je
jmp
push
push
je
mov
dec
je
jne
(bad)
mov
je
fs
xchg
test
je
jne
fstp
xchg
jg
sub
add
call
call
je
jmp
inc
std
or
cdq
xchg
xchg
je
jne
mov
fs
call
call
call
je
jmp
jle
cmp
xchg
pop
scas
je
jne
sub
mul
call
call
je
jmp
xor
je
sar
je
jne
adc
sahf
and
mov
add
call
mov
mov
push
mov
call
pop
mov
call
mov
call
call
call
call
je
jmp
or
inc
arpl
je
iret
xor
std
je
jne
out
add
lea
xchg
not
and
cmp
je
dec
daa
fwait
call
call
call
call
je
jmp
test
push
je
lock
in
je
jne
mov
fs
xchg
test
je
jne
fwait
ss
push
(bad)
add
add
call
je
jmp
cwde
in
test
jne
je
push
lea
hlt
xchg
cld
cmc
mov
call
call
call
je
jmp
inc
pop
fwait
xchg
jne
je
in
lds
hlt
xchg
xchg
add
call
call
je
jmp
cmp
adc
je
push
hlt
jl
je
jne
mov
jmp
mov
mov
xchg
call
call
je
jmp
xchg
pop
clc
pop
jne
je
sbb
div
std
fcmovb
cmps
lea
call
add
call
call
je
jmp
mov
sub
push
je
mov
div
pop
fidiv
loop
add
sub
dec
lea
call
call
call
call
je
jmp
pop
sub
je
(bad)
push
hlt
mov
and
lea
xchg
test
je
jne
or
iret
sar
lods
add
xchg
call
call
je
jmp
sbb
cmp
jne
je
fld
jne
cli
jl
push
lea
call
call
call
je
jmp
test
adc
jne
je
mov
div
inc
arpl
and
call
call
je
jmp
cmp
loopne
jne
je
nop
call
jne
je
(bad)
rol
lea
mov
call
call
call
call
je
jmp
aam
push
jne
je
and
(bad)
and
push
popf
xor
lea
xchg
test
je
jne
sub
call
and
add
add
call
je
jmp
cmp
mov
or
je
std
je
jne
sbb
and
call
call
call
je
jmp
xchg
data16
jne
je
push
sbb
jne
or
add
call
call
je
jmp
lods
lods
in
jne
je
or
push
je
jne
mov
jp
jmp
mov
pcmpgtw
(bad)
stc
es
call
call
call
je
jmp
in
cmps
xchg
jne
je
push
xchg
fs
je
jne
jmp
cld
xchg
not
and
cmp
je
ins
js
call
call
call
call
je
jmp
mov
push
je
pop
sbb
cli
je
jne
jno
or
lea
xchg
test
je
jne
mov
inc
push
call
add
add
call
je
jmp
push
push
je
add
loopne
je
jne
sbb
cmc
lea
call
call
call
je
jmp
dec
sub
je
mov
xor
je
jne
xor
inc
jae
add
add
call
je
jmp
shr
data16
jne
je
scas
(bad)
adc
div
call
jmp
jmp
mov
repnz
(bad)
add
call
call
je
jmp
retf
or
je
(bad)
aam
je
jne
popa
hlt
in
lea
call
add
call
call
je
jmp
(bad)
clc
test
jbe
das
into
je
jne
mov
mov
pop
mov
lea
jmp
call
call
call
call
je
jmp
add
push
je
mov
jo
je
jne
mov
fs
xchg
test
je
jne
retf
xchg
lea
jmp
sub
add
call
call
je
jmp
mov
push
je
inc
sbb
je
jne
std
imul
inc
lea
call
call
call
je
jmp
movs
retf
jne
je
fsubr
je
jne
les
sub
add
add
call
je
jmp
mov
push
je
call
hlt
call
add
add
add
add
add
add
jmp
test
dec
retf
je
add
sub
je
jne
jae
pop
jle
fs
xchg
test
je
jne
xlat
out
hlt
icebp
add
jl
xchg
call
call
je
jmp
int3
and
or
xor
and
div
jecxz
pop
aad
fs
call
call
call
je
jmp
daa
inc
addr16
push
je
fiadd
mov
hlt
loope
sbb
add
add
jmp
(bad)
iret
pop
mov
je
stos
xlat
dec
in
div
pop
mov
add
add
call
mov
mov
push
mov
call
pop
mov
call
mov
call
call
call
call
je
jmp
mov
push
je
mov
div
arpl
cmc
lea
xchg
not
and
cmp
je
mov
mov
add
add
add
add
add
jmp
inc
xchg
push
stos
jne
je
out
push
add
je
jne
xchg
lea
xchg
test
je
jne
js
mov
add
xor
xchg
call
call
je
jmp
pop
push
pop
and
je
add
add
hlt
jbe
retf
jecxz
fs
call
call
call
je
jmp
push
cmp
ret
je
cmp
div
mov
outs
xor
add
add
call
je
jmp
cmp
and
push
je
nop
adc
ja
div
add
or
push
dec
jmp
sub
add
add
add
jmp
int3
js
lods
jne
je
dec
add
jne
into
lods
pop
sbb
add
add
add
call
call
je
jmp
outs
or
shl
or
pushf
add
je
jne
adc
pop
mov
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
jo
sub
mov
xlat
div
hlt
cs
rcl
and
xchg
test
je
jne
ins
je
imul
add
call
call
je
jmp
arpl
mov
or
aaa
jb
je
jne
dec
jmp
and
add
add
call
call
je
jmp
xor
push
je
add
inc
mov
div
add
lahf
add
call
call
je
jmp
fild
mov
or
sbb
hlt
pop
mov
xchg
ret
lea
mov
call
call
call
call
je
jmp
dec
je
xchg
push
and
div
bound
and
xchg
test
je
jne
jp
movs
enter
jbe
add
call
call
je
jmp
in
dec
imul
mov
and
div
movs
cmc
gs
lea
call
call
call
je
jmp
push
inc
jge
jne
je
cld
jne
cs
jne
rcl
jbe
add
dec
call
call
je
jmp
fs
mov
and
shl
fdivrp
mov
ret
jmp
jns
iret
adc
adc
add
add
call
call
call
je
jmp
mov
push
je
loop
inc
pop
je
jne
or
add
add
not
and
cmp
je
and
add
call
call
call
je
jmp
sti
outs
add
or
test
aaa
je
jne
cmp
fs
xchg
test
je
jne
add
xchg
lock
call
call
je
jmp
xor
je
lods
push
out
push
je
jne
outs
adc
push
lea
call
call
call
je
jmp
mov
jmp
push
mov
div
push
push
test
add
dec
call
call
je
jmp
in
std
mov
push
je
scas
cwde
mov
je
jne
rcr
sar
jmp
fwait
std
sbb
add
call
call
je
jmp
fsub
jmp
or
dec
mov
div
ins
jl
inc
lea
call
add
call
call
je
jmp
xchg
xlat
jne
je
hlt
mov
cmps
je
jne
ret
mov
mov
lea
jmp
call
call
call
call
je
jmp
sbb
mov
or
outs
cmp
je
jne
sub
and
xchg
test
je
jne
lock
lea
jmp
jbe
add
call
call
je
jmp
jae
mov
mov
movs
je
jne
test
adc
lea
call
call
call
je
jmp
loope
test
push
je
lahf
ja
adc
div
and
xchg
add
call
call
je
jmp
mov
push
je
fcmovnbe
xchg
les
hlt
jge
pop
(bad)
add
add
add
add
add
add
jmp
jmp
push
je
mov
div
nop
mov
and
xchg
test
je
jne
mov
fbld
clc
mov
scas
xchg
call
call
je
jmp
leave
cmc
sub
jne
je
lods
jns
jge
div
xchg
and
call
call
call
je
jmp
sbb
push
je
adc
dec
cmp
hlt
sbb
add
dec
call
call
je
jmp
push
movs
addr16
je
gs
(bad)
sbb
mov
mov
add
xor
mov
xor
inc
test
jne
xor
mov
xor
add
push
mov
call
pop
mov
mov
jmp
xor
mov
xor
add
sub
mov
mov
nop
mov
call
call
call
call
je
jmp
shrd
jne
in
xor
hlt
sbb
fnstcw
xchg
not
and
cmp
je
leave
push
add
call
call
call
je
jmp
add
push
jmp
push
and
je
jne
ins
rcl
pop
lea
xchg
test
je
jne
gs
inc
or
aas
xchg
call
call
je
jmp
push
xor
inc
jne
je
sub
fwait
je
jne
jne
lds
call
call
call
je
jmp
push
outs
pop
jne
je
sahf
sahf
add
je
jne
mov
add
dec
call
call
je
jmp
(bad)
push
int
jne
je
iret
daa
fcmovb
je
jne
jge
or
jmp
scas
sbb
stos
xchg
call
call
je
jmp
mov
into
push
jne
je
outs
ret
xlat
xchg
je
jne
fld
lea
call
add
call
call
je
jmp
mov
push
je
data16
shl
hlt
xor
ret
sub
dec
lea
call
call
call
call
je
jmp
dec
jmp
mov
sbb
div
movs
adc
nop
lea
xchg
test
je
jne
int
xor
push
xchg
call
call
je
jmp
cmps
pop
addr16
pop
arpl
hlt
jge
push
inc
lea
call
call
call
je
jmp
jle
xor
jne
je
sbb
div
mov
ins
pop
add
call
call
je
jmp
les
je
cmps
xchg
xor
hlt
movs
xor
ret
lea
mov
call
call
call
call
je
jmp
sub
push
je
bound
and
fnstenv
mov
fs
xchg
test
je
jne
call
push
xchg
call
call
je
jmp
pop
lods
cmp
adc
hlt
mov
fs
call
call
call
je
jmp
imul
add
jmp
cli
mov
hlt
fistp
retf
add
call
call
je
jmp
popf
push
and
jne
je
push
inc
jo
je
jne
xchg
sbb
ret
jmp
adc
test
add
add
call
call
call
je
jmp
sbb
pop
inc
jne
je
xchg
lahf
sbb
div
sbb
cld
xchg
not
and
cmp
je
adc
add
add
add
add
add
add
jmp
pop
push
xor
or
lods
out
cmp
(bad)
les
add
test
je
jne
iret
or
dec
(bad)
mov
xchg
call
call
je
jmp
add
push
je
popa
stos
dec
push
je
jne
xor
xchg
int
fs
call
call
call
je
jmp
hlt
push
pop
daa
jne
je
push
repz
div
leave
aas
sub
add
call
call
je
jmp
fwait
jns
cmc
jne
je
or
hlt
test
div
shl
dec
ret
jmp
retf
push
or
in
test
call
call
je
jmp
jl
or
je
push
je
jne
je
ins
dec
lea
call
add
call
call
je
jmp
inc
xchg
cs
jno
bound
je
jne
xchg
dec
adc
pop
mov
lea
jmp
call
call
call
call
je
jmp
adc
(bad)
jl
push
je
cli
(bad)
(bad)
pop
je
jne
pop
lahf
gs
fs
xchg
test
je
jne
xchg
jbe
sbb
jmp
jl
add
call
call
je
jmp
xlat
cs
jne
je
leave
scas
mov
hlt
ja
mov
add
add
add
call
call
je
jmp
aas
aaa
(bad)
loopne
push
je
mov
ror
div
xchg
aas
xor
call
call
je
jmp
and
push
je
scas
jl
xchg
je
jne
xor
mov
call
call
call
call
je
jmp
ja
jmp
mov
jne
inc
lahf
xor
xchg
test
je
jne
call
movs
mov
xchg
call
call
je
jmp
dec
mov
inc
jne
je
jg
and
test
fs
call
call
call
je
jmp
pop
je
cwde
jne
je
bound
xor
div
and
dec
call
call
je
jmp
test
fwait
jne
je
jecxz
pop
and
hlt
push
cld
and
xchg
add
add
ror
test
jne
xor
mov
mov
push
push
mov
call
pop
pop
mov
add
mov
jmp
xor
mov
mov
mov
push
mov
call
pop
mov
sub
mov
mov
nop
mov
call
call
call
call
je
jmp
das
popa
push
add
je
retf
(bad)
mov
hlt
mov
cld
xchg
not
and
cmp
je
adc
call
call
call
call
je
jmp
fsub
pusha
repz
je
bound
aad
je
jne
jmp
outs
jns
fs
xchg
test
je
jne
cmp
cmp
xor
add
add
add
jmp
scas
sbb
je
dec
sti
sub
je
jne
xchg
not
repnz
call
call
call
je
jmp
in
xchg
mov
jne
je
mov
jp
je
jne
mov
movs
dec
add
call
call
je
jmp
ins
fidivr
dec
outs
hlt
je
jne
fsubr
jmp
add
ret
xchg
lds
xchg
call
call
je
jmp
sbb
sbb
jne
je
leave
add
in
div
cmps
cmp
add
add
add
add
call
call
je
jmp
fild
or
int3
or
je
jne
mov
xchg
add
sub
dec
lea
call
call
call
call
je
jmp
(bad)
or
or
jne
dec
je
jne
or
fs
xchg
test
je
jne
inc
or
xchg
call
call
je
jmp
mov
push
je
push
in
je
jne
popa
test
pushf
lea
call
call
call
je
jmp
mov
push
je
inc
pop
(bad)
cli
je
jne
addr16
cld
add
call
call
je
jmp
sub
push
jne
je
xchg
mov
jne
mov
sbb
mov
call
call
call
call
je
jmp
fmul
jmp
jmp
jne
loopne
arpl
lea
xchg
test
je
jne
out
push
adc
push
cmp
call
call
je
jmp
sahf
sub
jne
je
fistp
popa
je
jne
dec
cmp
lea
call
call
call
je
jmp
stos
arpl
ret
jne
je
shl
fdiv
hlt
neg
and
call
call
je
jmp
push
repnz
push
jne
je
clc
fnsave
je
jne
(bad)
data16
adc
push
jb
pop
mov
adc
add
add
call
call
call
je
jmp
push
in
pcmpeqw
je
ins
cmps
outs
push
ins
mov
and
xchg
not
and
cmp
je
mov
call
call
call
call
je
jmp
fwait
xor
inc
jne
je
mov
bound
pop
or
lea
xchg
test
je
jne
lock
(bad)
jbe
inc
xchg
call
call
je
jmp
ds
ret
jne
je
adc
jne
pop
or
lea
call
call
call
je
jmp
cwde
popa
fst
push
je
icebp
or
jne
ffree
pushf
fadd
add
add
call
je
jmp
jns
pop
retf
jne
je
(bad)
jle
cmp
hlt
pop
push
push
ret
jmp
pop
icebp
add
stos
std
push
fld
add
add
add
jmp
push
xchg
sbb
jne
je
dec
pop
cmp
jae
xor
lea
call
add
call
call
je
jmp
lahf
inc
adc
jne
je
aaa
mov
es
jne
rol
por
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
aaa
clc
xor
jne
je
xchg
in
cmp
hlt
mov
lods
or
fs
xchg
test
je
jne
aaa
ror
in
add
call
call
je
jmp
ja
gs
jne
je
push
retf
je
jne
inc
inc
push
cmp
fs
call
call
call
je
jmp
xchg
or
jne
je
push
test
cli
je
jne
mov
mov
dec
call
call
je
jmp
shl
je
int3
adc
pushf
je
jne
dec
xchg
or
call
call
call
call
je
jmp
arpl
(bad)
mov
je
jne
or
lea
xchg
test
je
jne
shr
rol
add
add
add
jmp
stos
add
je
(bad)
pop
je
jne
dec
aad
call
add
add
add
add
call
je
jmp
jp
fisubr
mov
div
cmovg
call
call
je
jmp
adc
xchg
jne
je
push
movzx
div
rol
ds
mov
add
xor
mov
xor
inc
test
jne
xor
mov
mov
add
mov
mov
mov
call
jmp
xor
mov
mov
push
mov
call
pop
mov
mov
mov
add
nop
mov
call
call
call
call
je
jmp
mov
push
je
jne
test
je
jne
in
sbb
fs
xchg
not
and
cmp
je
jmp
mov
add
add
add
add
add
jmp
mov
xor
jne
je
and
xor
je
jne
pop
push
inc
or
and
shl
cli
dec
rol
jge
imul
add
add
call
je
jmp
cwde
aad
inc
jne
je
int
retf
div
cmp
fs
call
call
call
je
jmp
mov
push
je
sub
popa
pop
je
jne
add
and
call
call
je
jmp
sub
push
je
sbb
pop
out
je
jne
push
jno
lods
ret
jmp
mov
push
xor
xchg
call
call
je
jmp
ja
jp
jne
je
mov
mov
or
adc
fs
call
add
call
call
je
jmp
stos
push
push
inc
jne
je
cld
cmps
rol
je
jne
fcom
add
add
sub
dec
lea
call
call
call
call
je
jmp
and
into
jne
je
mov
div
or
mov
lea
xchg
test
je
jne
push
push
and
add
add
call
je
jmp
sbb
sahf
lds
je
dec
sub
stos
je
jne
popf
add
fs
call
call
call
je
jmp
sbb
push
je
pop
sbb
div
movs
cmp
dec
call
call
je
jmp
jmp
or
jmp
mov
hlt
and
iret
aad
lea
mov
call
call
call
call
je
jmp
xor
push
je
add
div
fldenv
cld
xchg
test
je
jne
sbb
dec
mov
add
call
call
je
jmp
jecxz
inc
jne
je
aam
mov
div
push
int
lea
call
call
call
je
jmp
fsubr
fsub
jne
je
mov
div
jle
cmp
add
call
call
je
jmp
fs
cmp
push
je
jnp
sbb
cld
js
popf
ret
jmp
fstp
add
add
add
add
add
jmp
out
popf
mov
cmp
hlt
mov
and
xchg
not
and
cmp
je
dec
pop
xor
add
add
call
call
call
je
jmp
in
dec
jmp
or
je
jne
dec
test
fisttp
add
test
je
jne
xor
push
(bad)
popa
xchg
call
call
je
jmp
pop
aad
add
pop
cmp
jne
in
popf
and
add
add
call
call
je
jmp
and
in
push
jne
je
dec
call
dec
sar
add
dec
call
call
je
jmp
jecxz
sub
frstor
pusha
je
jne
lea
or
idiv
xchg
call
call
je
jmp
jg
pop
push
jne
je
test
or
je
jne
sub
and
call
add
call
call
je
jmp
mov
outs
jne
je
jnp
movs
aas
je
jne
pop
cmc
dec
or
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
add
sahf
jne
je
mov
inc
inc
je
jne
and
and
shl
test
lea
jmp
ja
add
add
add
jmp
sub
sahf
jne
je
mov
div
clc
or
fs
call
call
call
je
jmp
test
push
je
mov
div
movs
jecxz
aaa
add
call
call
je
jmp
int3
mov
push
jne
je
mov
je
div
xor
add
add
call
call
call
je
jmp
dec
out
mov
push
je
inc
jle
scas
je
jne
inc
in
outs
imul
je
jne
and
popf
sbb
add
add
add
jmp
sub
hlt
jmp
push
je
and
jne
jle
lock
lea
call
call
call
je
jmp
jmp
push
je
xor
xor
mov
add
dec
call
call
je
jmp
bound
(bad)
jne
je
or
repnz
hlt
mov
add
add
mov
mov
xor
mov
mov
ror
xor
mov
xor
inc
test
je
mov
push
popf
add
pushf
pop
mov
jmp
lea
sub
push
mov
call
pop
mov
mov
mov
call
call
call
call
je
jmp
loope
xor
or
adc
je
jne
aas
xchg
lea
xchg
not
and
cmp
je
shr
call
call
call
call
je
jmp
in
scas
dec
jle
push
je
mov
div
mov
and
xchg
test
je
jne
pop
adc
sub
and
add
add
call
je
jmp
mov
push
je
mov
test
je
jne
xor
inc
lea
call
call
call
je
jmp
mov
cdq
test
je
iret
(bad)
scas
xchg
je
jne
add
and
call
call
je
jmp
mov
in
jne
je
in
mov
hlt
jns
xchg
jg
jmp
inc
mov
xchg
cmp
push
xchg
call
call
je
jmp
pushf
mov
je
xchg
jne
jmp
test
add
add
add
add
call
call
je
jmp
test
push
je
cmc
ret
js
je
jne
jmp
adc
add
sub
dec
lea
call
call
call
call
je
jmp
rcr
add
jne
je
jle
xor
je
jne
jae
mov
cld
xchg
test
je
jne
sub
mov
and
add
add
call
je
jmp
movs
xor
jne
je
into
leave
mov
je
jne
xchg
pop
jge
lea
call
call
call
je
jmp
or
xchg
pop
jne
je
inc
inc
sub
hlt
push
and
call
call
je
jmp
or
je
inc
adc
je
jne
retf
(bad)
mov
call
call
call
call
je
jmp
aas
inc
into
push
jne
je
mov
ds
jne
cmps
cmps
push
lea
xchg
test
je
jne
(bad)
(bad)
or
push
xchg
call
call
je
jmp
bound
nop
fnsave
je
inc
push
(bad)
cmp
pop
call
call
call
call
je
jmp
adc
iret
cmps
jne
je
sbb
add
hlt
js
xchg
add
call
call
je
jmp
sbb
or
je
push
shl
hlt
and
cmc
stos
pop
xor
add
add
add
add
add
add
jmp
shl
cld
cdq
and
hlt
int3
hlt
repnz
and
shl
sar
je
pop
xchg
pusha
call
call
call
call
je
jmp
mov
cmp
or
xor
hlt
shl
and
lea
xchg
test
je
jne
mul
stc
or
call
call
je
jmp
dec
cmps
outs
and
push
je
aam
mov
hlt
sub
cmp
lea
call
call
call
je
jmp
fist
mov
push
je
xor
and
jmp
sbb
add
add
call
je
jmp
mov
stos
mov
popf
in
nop
mov
jb
or
ret
jmp
out
shl
sub
add
call
call
je
jmp
lods
arpl
jne
je
push
aaa
mov
je
jne
test
cmp
fs
call
add
call
call
je
jmp
lods
iret
js
jne
je
ret
lea
je
jne
pop
popf
clc
cmp
mov
lea
jmp
call
call
call
call
je
jmp
pop
push
pop
jne
je
cmp
hlt
fadd
and
xchg
test
je
jne
pop
cld
lea
jmp
loopne
add
call
call
je
jmp
jle
inc
jne
je
arpl
jne
inc
xor
add
add
add
call
call
je
jmp
inc
push
cmp
sub
repz
div
jne
cmp
add
call
call
je
jmp
cmp
mov
je
test
inc
add
call
call
call
je
jmp
jmp
sbb
or
mov
xchg
je
jne
pop
xchg
push
in
fs
xchg
test
je
jne
xor
adc
fs
mov
xchg
call
call
je
jmp
inc
lea
or
cmp
push
je
jne
in
jg
cmp
fs
call
call
call
je
jmp
mov
push
je
data16
je
jne
int
jbe
add
call
call
je
jmp
lds
hlt
jne
je
paddusw
div
xchg
add
mov
mov
xor
mov
mov
ror
lea
sub
mov
push
popf
sub
pushf
pop
mov
push
mov
call
pop
mov
mov
mov
call
call
call
call
je
jmp
popf
mov
je
or
(bad)
je
jne
mov
fs
xchg
not
and
cmp
je
adc
xchg
call
call
call
call
je
jmp
and
push
jno
jmp
je
jne
jnp
inc
sbb
add
test
je
jne
addr16
(bad)
dec
call
add
add
call
je
jmp
in
dec
and
int
movs
mov
div
gs
arpl
lea
call
call
call
je
jmp
scas
jg
push
jne
je
call
div
xchg
cmp
add
dec
call
call
je
jmp
ret
adc
push
je
xchg
cmp
cmps
je
jne
repz
mov
push
pop
scas
cmps
cmc
cdq
xchg
call
call
je
jmp
jb
cmp
mov
mov
inc
mov
cmp
add
add
add
call
call
je
jmp
sahf
push
je
adc
je
jne
mov
add
sub
dec
lea
call
call
call
call
je
jmp
mov
add
inc
popa
or
div
je
call
add
test
je
jne
fidiv
nop
cwde
xor
int
add
call
call
je
jmp
test
ficomp
je
xlat
adc
je
jne
aam
mov
add
add
add
call
call
je
jmp
fnstcw
je
lahf
icebp
int3
hlt
je
jne
mov
add
dec
call
call
je
jmp
outs
shr
jne
je
xchg
and
inc
je
jne
(bad)
mov
sbb
mov
call
call
call
call
je
jmp
out
lahf
out
jne
je
mov
div
sub
fs
xchg
test
je
jne
push
mov
push
lods
xchg
call
call
je
jmp
push
add
lods
jne
je
inc
cmp
jne
xchg
jae
jmp
add
add
add
add
call
je
jmp
dec
bound
jne
je
push
retf
(bad)
cmp
mov
(bad)
sub
add
add
call
je
jmp
call
push
je
inc
mov
jne
pop
cmps
dec
sub
jmp
stos
ins
inc
mov
sahf
dec
iret
call
call
call
call
je
jmp
or
fld
gs
movs
je
jne
jge
mov
lea
xchg
not
and
cmp
je
loop
add
add
add
add
add
add
jmp
sti
xchg
or
jne
je
adc
adc
je
jne
rcr
cld
xchg
test
je
jne
mov
sub
xchg
call
call
je
jmp
loopne
stc
cwde
jne
je
pusha
mov
hlt
mov
fs
call
call
call
je
jmp
lods
dec
jns
jne
je
jp
stos
adc
hlt
dec
les
dec
call
call
je
jmp
cmp
mov
or
mov
jne
test
fadd
jmp
pop
jecxz
xchg
xor
jb
xchg
call
call
je
jmp
cmps
jno
and
push
je
in
fcmovne
je
jne
xchg
add
add
add
add
call
call
je
jmp
test
je
fdivr
jne
mov
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
jb
outs
sbb
je
jle
mov
je
jne
mov
sbb
lea
xchg
test
je
jne
js
lea
jmp
or
add
add
add
jmp
leave
test
je
sbb
div
arpl
xor
add
add
add
call
call
je
jmp
js
imul
sbb
hlt
imul
dec
call
call
je
jmp
cwde
pop
sub
jne
je
ss
(bad)
mov
shl
ds
call
call
call
call
je
jmp
lods
mov
je
cmp
xor
je
jne
mov
add
lea
xchg
test
je
jne
(bad)
mov
aas
int3
cld
pop
and
add
add
add
jmp
or
iret
shl
or
sar
je
jne
stos
xchg
out
lea
call
call
call
je
jmp
lock
sbb
cli
xor
hlt
pop
xor
call
call
je
jmp
ins
out
sub
je
test
js
div
inc
pop
add
ret
mov
add
mov
mov
xor
mov
mov
ror
xor
mov
xor
inc
test
je
mov
push
popf
mul
pushf
pop
mov
jmp
mul
ror
mov
mov
mov
mov
call
call
call
call
je
jmp
push
les
or
dec
pusha
or
hlt
das
test
cld
xchg
not
and
cmp
je
gs
call
call
call
call
je
jmp
push
stos
cmps
cld
jne
je
into
fisub
je
jne
lock
lea
xchg
test
je
jne
mov
mov
mov
xchg
out
xchg
call
call
je
jmp
fdivp
and
jns
test
je
jne
ds
jb
lea
call
call
call
je
jmp
fptan
sub
push
je
mov
div
sbb
dec
call
call
je
jmp
cmp
in
ss
je
(bad)
mov
shl
and
mov
and
popa
(bad)
xacquire
call
call
je
jmp
mov
push
je
lods
sar
hlt
ret
dec
lea
call
add
call
call
je
jmp
jbe
sub
push
je
sub
das
test
hlt
shr
mov
sub
dec
lea
call
call
call
call
je
jmp
cmc
movs
and
sbb
je
jne
(bad)
sub
lea
xchg
test
je
jne
pop
jmp
xchg
call
call
je
jmp
iret
stos
out
or
je
mov
div
pop
sahf
int
lea
call
call
call
je
jmp
shl
je
lahf
jo
mov
div
sbb
fiadd
add
add
call
je
jmp
sbb
pop
(bad)
jne
je
hlt
sbb
lock
jne
lods
mov
add
sbb
mov
call
call
call
call
je
jmp
imul
or
rcl
hlt
mov
fs
xchg
test
je
jne
cmps
repz
push
pop
sub
add
add
call
je
jmp
inc
inc
stos
fdiv
je
mov
fsub
jns
stos
mov
fs
call
call
call
je
jmp
sbb
shl
or
dec
mov
hlt
dec
adc
in
add
call
call
je
jmp
push
sar
jne
je
mov
mov
hlt
push
adc
(bad)
leave
dec
test
add
call
call
call
je
jmp
jl
mov
jne
je
mov
div
fucomip
into
mov
xchg
not
and
cmp
je
adc
add
add
add
add
add
add
jmp
add
sbb
or
xchg
hlt
popf
push
xor
lea
xchg
test
je
jne
adc
add
sbb
and
add
add
call
je
jmp
sbb
push
je
add
div
ficom
inc
lea
call
call
call
je
jmp
and
push
je
ret
addr16
xchg
fsub
add
call
call
je
jmp
jns
mov
jne
je
jns
xchg
sub
hlt
inc
dec
inc
xchg
ret
jmp
fstp
or
xchg
call
call
je
jmp
and
div
je
pop
jge
mov
div
mov
fs
call
add
call
call
je
jmp
jmp
or
pushf
inc
lods
je
jne
or
cmp
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
cmc
shl
mov
je
mov
les
div
pop
xchg
or
and
shl
mov
lea
jmp
sub
add
add
add
jmp
push
and
je
pushf
dec
cmp
div
imul
add
add
add
add
call
je
jmp
sbb
jne
je
sub
div
push
inc
inc
jmp
call
call
je
jmp
fwait
inc
stc
stc
jne
je
(bad)
push
je
jne
mov
add
call
call
call
je
jmp
or
je
ins
jo
popf
je
jne
jae
jg
lea
xchg
test
je
jne
dec
mov
aas
cmp
add
add
add
jmp
int
ins
mov
je
test
fidiv
hlt
jb
sti
or
add
add
add
add
call
je
jmp
dec
jg
sub
je
out
push
and
ds
dec
call
call
je
jmp
stos
add
or
xor
loope
div
inc
lods
mov
ret
mov
add
mov
mov
xor
mov
mov
ror
div
ror
mov
mov
mov
mov
call
call
call
call
je
jmp
cmc
scas
mov
jne
je
add
jno
je
jne
outs
and
cld
xchg
not
and
cmp
je
jbe
(bad)
call
call
call
call
je
jmp
mov
sahf
retf
jne
je
sub
dec
xor
ins
lea
xchg
test
je
jne
add
popf
lahf
imul
add
add
call
je
jmp
test
je
xor
mov
mov
fs
call
call
call
je
jmp
sub
jne
je
jae
(bad)
je
jne
xor
xchg
sub
call
call
je
jmp
retf
adc
or
jmp
jne
call
popa
imul
sub
add
add
add
jmp
mov
push
je
loopne
sub
je
jne
das
xchg
scas
imul
add
call
call
je
jmp
pop
jnp
pusha
jne
je
clc
jl
cwde
je
jne
push
add
sub
dec
lea
call
call
call
call
je
jmp
push
push
push
lds
je
sub
jne
call
pop
lea
xchg
test
je
jne
xchg
dec
cdq
outs
sar
call
call
je
jmp
out
dec
int3
jne
je
jecxz
arpl
jne
adc
arpl
and
call
call
call
je
jmp
mov
push
shl
or
jbe
xor
stc
not
mov
call
call
je
jmp
shl
pop
jne
je
xchg
gs
jne
div
mov
cs
ret
lea
mov
call
call
call
call
je
jmp
xlat
sti
jecxz
jne
je
(bad)
ss
pop
je
jne
and
outs
lea
xchg
test
je
jne
mov
mov
and
add
add
call
je
jmp
xchg
outs
shl
or
xchg
popf
aad
div
jne
std
movs
lea
call
call
call
je
jmp
jge
and
jne
je
cmps
or
hlt
dec
sbb
adc
add
add
call
je
jmp
js
push
ret
jne
je
scas
mov
(bad)
hlt
or
jmp
call
call
call
call
je
jmp
xchg
pop
jp
jne
je
int3
dec
sbb
hlt
jge
push
mov
xchg
not
and
cmp
je
ficomp
das
call
call
call
call
je
jmp
mov
sub
div
hlt
out
mov
and
xchg
test
je
jne
bnd
mov
xchg
call
call
je
jmp
mov
hlt
div
je
scas
jle
js
div
inc
xchg
out
into
lea
call
call
call
je
jmp
push
jns
nop
jne
je
arpl
jne
adc
add
dec
call
call
je
jmp
les
hlt
ret
je
push
div
mov
jmp
fwait
sub
mov
push
leave
xchg
call
call
je
jmp
push
enter
push
je
lahf
dec
add
je
jne
sti
jp
and
add
add
add
call
call
je
jmp
xchg
ret
jne
je
gs
pop
imul
jae
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
sub
push
je
inc
sbb
xchg
hlt
inc
jae
in
lea
xchg
test
je
jne
repz
lea
jmp
add
add
add
add
jmp
inc
push
add
je
out
mov
inc
je
jne
pop
mov
and
call
call
call
je
jmp
xchg
jne
je
out
sbb
xor
push
add
call
call
je
jmp
outs
repnz
jne
je
xchg
cmps
(bad)
loope
div
aam
iret
pop
ret
call
call
call
call
je
jmp
hlt
arpl
or
cmp
je
jne
mov
fs
xchg
test
je
jne
mov
mov
out
out
jle
xchg
call
call
je
jmp
jmp
jl
jne
je
leave
add
and
je
push
adc
add
add
call
call
je
jmp
sbb
push
je
call
div
in
js
add
call
call
je
jmp
inc
mov
or
mov
jne
popa
mov
inc
mov
add
mov
mov
mov
and
and
ror
push
push
call
push
mov
call
pop
mov
mov
pop
pop
mov
push
call
call
call
call
je
jmp
imul
jne
je
mov
jne
push
xchg
daa
mov
xchg
not
and
cmp
je
jecxz
ins
call
call
call
call
je
jmp
das
neg
push
je
dec
stc
and
jne
mov
xchg
cli
lea
xchg
test
je
jne
ret
cmp
and
xchg
call
call
je
jmp
add
and
les
arpl
hlt
pushf
jbe
ror
add
add
call
call
je
jmp
pushf
aam
xor
add
je
jne
mov
add
dec
call
call
je
jmp
aad
leave
pop
jne
je
pop
mov
jne
cmps
mov
cmp
jae
leave
aas
pop
and
add
add
call
je
jmp
loop
jae
jne
je
cmp
fidivr
div
push
lds
fs
call
add
call
call
je
jmp
in
mov
je
xchg
add
hlt
aam
cld
jmp
pushf
pop
mov
mov
call
call
call
call
je
jmp
push
xor
xor
or
add
lods
je
jne
or
and
xchg
not
and
cmp
je
pop
and
add
call
call
call
je
jmp
adc
push
je
add
jne
inc
sub
jns
fs
xchg
test
je
jne
add
xchg
or
pop
lahf
xor
add
add
add
jmp
mov
(bad)
mov
push
je
jo
inc
cmp
hlt
sub
xchg
movs
lea
call
call
call
je
jmp
ds
jne
je
inc
inc
mov
hlt
push
loopne
add
call
call
je
jmp
push
loope
fidiv
je
movs
std
pushf
mov
mov
mov
arpl
movs
sub
add
add
add
jmp
mov
push
je
mov
div
aad
sub
fs
call
add
call
call
je
jmp
mov
addr16
jne
je
add
adc
je
jne
sub
arpl
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
lock
icebp
jne
je
fcmovbe
arpl
div
in
std
(bad)
lea
xchg
test
je
jne
lea
ss
sub
and
add
add
call
je
jmp
sub
jne
je
xchg
add
jne
mov
fs
call
call
call
je
jmp
sti
adc
je
mov
je
jne
mov
push
xchg
add
call
call
je
jmp
call
push
je
adc
div
cs
jecxz
lea
mov
call
call
call
call
je
jmp
or
je
ins
pushf
sbb
je
jne
outs
sbb
lea
xchg
test
je
jne
cli
add
xchg
mov
jge
xchg
call
call
je
jmp
repnz
mov
or
cmp
xor
mov
jmp
add
add
add
call
call
je
jmp
jmp
je
pop
bound
in
je
jne
lock
into
add
call
call
je
jmp
pop
or
popf
jne
je
mov
add
je
jne
shl
loopne
loopne
movs
ss
jmp
add
call
call
call
je
jmp
aam
mov
or
cli
sub
jne
add
fs
xchg
not
and
cmp
je
push
cmp
call
call
call
call
je
jmp
dec
xchg
adc
or
data16
je
jne
and
jecxz
fs
xchg
test
je
jne
loope
pop
sbb
xchg
call
call
je
jmp
ja
push
les
je
mov
xor
div
lods
lahf
xor
lea
call
call
call
je
jmp
jo
pushf
mov
push
je
and
pusha
mov
push
or
and
call
call
je
jmp
scas
sbb
jne
je
xchg
mov
jne
(bad)
loope
gs
jmp
xor
push
mov
add
add
call
je
jmp
pop
xchg
or
je
sahf
cmp
je
jne
cdq
fcom
lea
call
add
call
call
je
jmp
push
sbb
or
into
cmp
je
jne
int
add
mov
lea
jmp
call
call
call
call
je
jmp
fiadd
xor
push
je
cwde
mov
jne
and
cld
xchg
test
je
jne
hlt
pop
lea
jmp
fadd
add
add
add
jmp
ins
loope
inc
jne
je
ins
push
ds
je
jne
pushf
fdiv
add
add
add
call
call
je
jmp
ins
in
jmp
pop
(bad)
mul
je
jne
mov
push
push
add
call
call
je
jmp
jp
nop
xor
je
aas
scas
inc
shl
mov
call
call
call
call
je
jmp
dec
lock
je
jl
aas
lods
je
jne
xor
in
cmp
fs
xchg
test
je
jne
add
or
pop
xchg
call
call
je
jmp
xor
add
jne
je
outs
push
lods
je
div
in
call
add
add
call
call
je
jmp
sbb
xchg
ds
je
jns
push
mov
div
push
xchg
sbb
add
call
call
je
jmp
push
pop
mov
jne
je
repz
mov
hlt
pusha
lods
icebp
xchg
ret
mov
add
mov
mov
mov
and
and
ror
call
push
mov
call
pop
mov
mov
mov
push
popf
and
pushf
pop
mov
mov
call
call
call
call
je
jmp
mov
mov
xchg
sub
hlt
add
fs
xchg
not
and
cmp
je
cmp
fld1
add
add
call
call
call
je
jmp
movs
sti
cmp
or
repz
xchg
je
jne
cmp
push
lea
xchg
test
je
jne
imul
mov
add
add
add
jmp
addr16
mov
or
cs
arpl
hlt
lea
mov
call
call
call
je
jmp
enter
jne
je
xchg
jne
(bad)
ja
dec
call
call
je
jmp
into
stos
addr16
push
je
sub
and
je
jne
aaa
fiadd
cmc
ret
jmp
lock
fstp
xchg
call
call
je
jmp
gs
(bad)
(bad)
jne
je
push
shl
pop
inc
(bad)
pop
lea
call
add
call
call
je
jmp
into
sbb
lds
je
mov
div
mul
xor
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
pop
loope
in
push
je
mov
div
ret
mov
ror
and
shl
jne
pushf
or
sbb
and
add
add
call
je
jmp
xor
je
cmp
and
hlt
imul
aam
fs
call
call
call
je
jmp
idiv
je
bound
jb
je
jne
sub
mov
add
call
call
je
jmp
mov
repz
je
dec
ret
je
jne
(bad)
mov
mov
call
call
call
call
je
jmp
loop
(bad)
hlt
jne
je
pop
out
pusha
je
jne
push
ja
pop
lea
xchg
test
je
jne
adc
push
jmp
xchg
call
call
je
jmp
iret
scas
les
jne
je
dec
pop
mov
je
jne
dec
jne
cmps
lea
call
call
call
je
jmp
add
je
call
hlt
jl
test
dec
call
call
je
jmp
mov
push
je
cmp
xchg
je
jne
cdq
repz
leave
ret
jmp
dec
adc
push
(bad)
add
call
call
call
je
jmp
sbb
imul
call
hlt
call
cld
xchg
not
and
cmp
je
das
xchg
add
add
add
call
call
call
je
jmp
into
dec
xchg
sbb
je
jo
mov
hlt
aad
icebp
sbb
fs
xchg
test
je
jne
cmps
cvttps2pi
xchg
call
call
je
jmp
mov
push
je
add
div
ret
(bad)
lea
call
call
call
je
jmp
arpl
hlt
shl
je
sar
jne
dec
ficomp
add
call
call
je
jmp
pushf
ja
dec
jne
je
ins
and
jne
out
push
or
in
and
and
add
add
add
jmp
sub
and
je
mov
div
(bad)
int
dec
lea
call
add
call
call
je
jmp
jbe
mov
jne
je
xchg
fcom
je
jne
mov
pop
or
mov
lea
jmp
call
call
call
call
je
jmp
jmp
or
mov
jne
jmp
fs
xchg
test
je
jne
sub
jmp
dec
xchg
call
call
je
jmp
push
or
or
jnp
add
pop
pushf
xor
lea
call
call
call
je
jmp
out
push
or
or
aas
or
dec
mov
and
call
call
je
jmp
repnz
or
mov
jne
(bad)
cli
pop
ret
call
call
call
call
je
jmp
icebp
hlt
retf
adc
je
test
shl
hlt
ja
mov
xchg
test
je
jne
mov
inc
xacquire
call
call
je
jmp
add
jmp
pop
stos
je
jne
push
sbb
add
add
add
call
call
je
jmp
adc
jne
jne
je
call
hlt
inc
push
(bad)
jecxz
add
dec
call
call
je
jmp
push
xchg
inc
cmp
je
add
jne
mov
mov
add
mov
mov
mov
and
and
ror
call
push
mov
call
pop
mov
mov
mov
call
call
call
call
je
jmp
xchg
fld
jne
je
shr
pop
je
jne
inc
popa
push
add
fs
xchg
not
and
cmp
je
or
add
call
call
call
je
jmp
pushf
inc
inc
xchg
jne
je
and
jne
push
mov
dec
lea
xchg
test
je
jne
test
ds
jb
or
add
add
add
jmp
mov
test
or
jae
nop
je
jne
clc
cmp
lea
call
call
call
je
jmp
xchg
push
imul
or
je
jne
mov
push
add
call
call
je
jmp
and
xchg
mov
je
pop
addr16
div
rcr
ret
jmp
fiadd
push
jmp
add
call
call
je
jmp
repz
mov
push
je
outs
(bad)
je
jne
bound
push
lea
call
add
call
call
je
jmp
pop
(bad)
(bad)
in
push
je
push
dec
outs
and
hlt
sub
add
sub
dec
lea
call
call
call
call
je
jmp
icebp
data16
mov
jg
mov
hlt
(bad)
pop
sbb
cld
xchg
test
je
jne
mov
gs
mov
add
add
add
jmp
or
cli
cs
je
(bad)
push
lock
je
jne
pop
inc
mov
add
add
add
call
call
je
jmp
loope
or
jne
je
and
push
pop
and
dec
call
call
je
jmp
lods
push
push
xchg
jne
je
vmovsd
je
jne
jg
mov
mov
add
call
call
call
je
jmp
mov
push
je
rcr
jne
mov
lea
lea
xchg
test
je
jne
shld
scas
xchg
call
call
je
jmp
pop
pop
cmp
or
in
dec
je
jne
add
inc
sub
add
add
call
call
je
jmp
xor
je
pop
enter
div
ins
fadd
sahf
add
call
call
je
jmp
iret
mov
mov
je
dec
mov
inc
je
jne
sbb
loopne
call
call
call
call
je
jmp
fcom
icebp
and
je
fnsave
jne
jge
xchg
mov
fs
xchg
not
and
cmp
je
sub
call
call
call
call
je
jmp
sbb
test
das
mov
cmp
lea
xchg
test
je
jne
jns
or
add
add
call
je
jmp
pop
pop
mov
jne
je
aad
add
sub
add
add
add
call
call
je
jmp
mov
push
je
in
inc
xchg
je
jne
enter
add
call
call
je
jmp
sti
or
shl
je
mov
xchg
xor
cmp
jb
push
mov
sbb
outs
jnp
add
call
call
je
jmp
data16
jne
je
dec
mov
jne
clc
(bad)
hlt
fmul
add
add
add
call
call
je
jmp
sub
loopne
jne
je
xor
idiv
dec
cmps
mov
mov
lea
jmp
call
call
call
call
je
jmp
clc
ss
jmp
pop
pusha
je
jne
push
hlt
dec
mov
fs
xchg
test
je
jne
movs
jecxz
sbb
jmp
jmp
add
add
call
je
jmp
(bad)
aam
jae
push
je
cmp
hlt
(bad)
ins
pop
ror
add
add
call
call
je
jmp
aad
inc
jmp
push
je
dec
lea
je
jne
lods
inc
bnd
add
dec
call
call
je
jmp
push
fcom
cmp
je
and
div
push
arpl
ret
call
call
call
call
je
jmp
imul
or
cmp
hlt
jmp
dec
add
test
je
jne
movs
fnstcw
fst
call
call
je
jmp
add
je
stos
dec
inc
shl
pop
scas
add
lea
call
call
call
je
jmp
pushf
pinsrw
je
inc
movs
jle
je
jne
sub
jbe
add
call
call
je
jmp
shl
mov
jne
je
cwde
ins
mov
je
jne
or
add
add
call
mov
mov
call
mov
call
mov
call
call
call
call
je
jmp
ins
lods
das
aad
push
je
xchg
mov
jne
hlt
ds
out
lea
xchg
not
and
cmp
je
add
add
add
add
add
add
jmp
add
je
pop
jns
shl
hlt
add
push
repnz
xchg
test
je
jne
fcomp
aam
mov
call
call
je
jmp
or
push
je
dec
call
call
fs
call
call
call
je
jmp
mov
loop
jne
je
cs
pop
mov
mov
add
dec
call
call
je
jmp
clc
loope
in
jne
je
mov
div
xor
inc
out
jmp
pushf
mov
pop
and
and
add
add
call
je
jmp
clc
push
inc
jne
je
aad
shr
div
jle
js
lea
call
add
call
call
je
jmp
mov
push
je
jo
pop
int3
je
jne
or
add
sub
dec
lea
call
call
call
call
je
jmp
es
sub
push
je
pop
not
ret
je
jne
mov
bound
lea
xchg
test
je
jne
adc
sub
add
call
call
je
jmp
out
mov
jne
je
icebp
hlt
xor
je
jne
sub
mov
fs
call
call
call
je
jmp
sub
push
je
ins
push
or
je
jne
lea
and
call
call
je
jmp
mov
push
or
arpl
je
jne
inc
(bad)
cmps
retw
lea
mov
call
call
call
call
je
jmp
xchg
je
inc
mov
je
jne
sti
fs
cld
xchg
test
je
jne
adc
call
add
add
add
jmp
jle
xchg
shl
je
or
outs
push
je
jne
mov
fs
call
call
call
je
jmp
js
add
or
std
rol
(bad)
jmp
sbb
add
add
call
je
jmp
adc
arpl
je
add
lock
jne
aaa
jle
je
jmp
out
add
add
call
call
call
je
jmp
sti
loope
mov
out
fcomp
je
jne
jge
addr16
xchg
not
and
cmp
je
mov
addr16
call
call
call
je
jmp
pop
mov
inc
jne
je
cmp
div
add
and
xchg
test
je
jne
stos
mul
push
ds
sbb
xchg
call
call
je
jmp
addr16
dec
(bad)
ret
(bad)
je
jne
aas
fsub
lea
call
call
call
je
jmp
(bad)
fnsave
mov
je
push
aam
aas
je
jne
xchg
dec
ja
add
call
call
je
jmp
sahf
sub
je
push
fisub
hlt
bound
or
add
mov
add
call
call
je
jmp
mov
je
and
div
std
mov
pop
lea
call
add
call
call
je
jmp
fcmove
dec
test
je
jns
or
je
jne
ja
nop
loope
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
jb
add
push
je
push
sbb
je
jne
ins
or
or
add
test
je
jne
jae
lea
jmp
mov
add
call
call
je
jmp
cli
xchg
jne
je
outs
daa
jno
je
jne
lahf
out
dec
iret
lea
call
call
call
je
jmp
and
or
je
(bad)
adc
jne
adc
inc
popf
add
call
call
je
jmp
sub
pop
out
push
je
invd
std
lock
jne
push
ja
sbb
call
call
call
call
je
jmp
dec
dec
rcl
jne
je
pushf
cld
sbb
div
fist
push
lea
xchg
test
je
jne
xchg
mov
push
and
add
add
call
je
jmp
das
fld
or
lods
push
das
je
jne
(bad)
sbb
push
lea
call
call
call
je
jmp
pop
adc
lods
jne
je
(bad)
in
sbb
add
call
call
je
jmp
fdivr
je
push
dec
test
hlt
icebp
div
ret
mov
add
call
mov
mov
push
mov
call
pop
mov
call
mov
call
call
call
call
je
jmp
mov
arpl
je
je
mov
hlt
or
lea
xchg
not
and
cmp
je
fiadd
lods
call
call
call
call
je
jmp
lods
jg
pop
jne
je
mov
div
es
or
xchg
test
je
jne
pop
pop
popa
(bad)
daa
inc
xlat
xchg
call
call
je
jmp
ficom
mov
jne
je
jecxz
movs
mov
ja
xchg
ret
and
call
call
call
je
jmp
inc
cmp
ret
jne
je
push
adc
div
popa
sar
dec
call
call
je
jmp
push
push
pusha
imul
rcl
jne
pop
cwde
jmp
push
(bad)
xor
and
add
add
call
je
jmp
fbld
in
pop
jne
je
mov
div
movs
pmaxub
call
add
call
call
je
jmp
fnstcw
or
dec
outs
mov
hlt
add
sbb
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
mov
pop
inc
jne
je
ds
dec
je
jne
or
fs
xchg
test
je
jne
sahf
mov
mov
call
call
je
jmp
cmps
xchg
jne
je
dec
retf
adc
hlt
aad
popa
iret
lea
call
call
call
je
jmp
and
je
adc
div
push
std
stos
iret
add
call
call
je
jmp
dec
fstp
or
mov
cmp
hlt
enter
ret
lea
mov
call
call
call
call
je
jmp
mov
jp
jne
je
fsubr
jne
xchg
(bad)
cld
xchg
test
je
jne
inc
pop
shl
(bad)
fisub
add
add
call
je
jmp
scas
cmovg
add
jne
inc
(bad)
fsub
lea
call
call
call
je
jmp
cld
mov
jmp
and
pop
sti
je
jne
imul
or
add
dec
call
call
je
jmp
rol
into
gs
je
dec
push
hlt
cmc
je
jne
aad
int
ret
jmp
shl
and
repnz
add
call
call
call
je
jmp
stos
mov
or
sbb
hlt
lds
and
xchg
not
and
cmp
je
or
shr
add
add
add
add
add
add
jmp
outs
les
jne
je
mov
div
mov
jge
lea
xchg
test
je
jne
cmps
pop
(bad)
icebp
or
and
add
add
call
je
jmp
jmp
push
je
jecxz
data16
div
and
ins
or
add
add
call
call
je
jmp
mov
push
je
cmp
stc
jg
div
sub
and
call
call
je
jmp
xlat
cmp
jne
je
cmp
jne
in
test
or
jmp
xchg
xchg
call
call
je
jmp
jp
int3
fbstp
je
mov
mov
hlt
xchg
imul
add
add
call
call
je
jmp
(bad)
lods
xchg
clc
jne
je
mov
sub
je
jne
fldcw
test
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
jo
cs
push
je
mov
jne
pop
fwait
(bad)
pop
lea
xchg
test
je
jne
(bad)
lea
jmp
xchg
call
call
je
jmp
mov
es
push
je
sbb
jne
cmp
fs
call
call
call
je
jmp
xchg
(bad)
cmp
lds
jne
pop
pusha
xchg
add
call
call
je
jmp
nop
add
mov
push
je
mov
adc
div
mov
call
call
call
call
je
jmp
imul
jne
je
mov
div
mov
fs
xchg
test
je
jne
into
hlt
mov
pop
fidiv
call
call
je
jmp
xchg
sbb
(bad)
jne
je
mov
div
jne
dec
mov
fs
call
call
call
je
jmp
push
cwde
stos
jne
je
xor
div
jg
and
call
call
je
jmp
push
push
je
sub
mov
hlt
clc
dec
cmps
dec
ret
mov
add
xor
mov
call
call
call
call
je
jmp
sub
push
je
mov
div
pop
adc
lea
xchg
not
and
cmp
je
ja
cmps
call
call
call
call
je
jmp
jbe
ror
je
jge
lods
bound
hlt
not
and
xchg
test
je
jne
xchg
mov
idiv
sub
xchg
call
call
je
jmp
jmp
push
je
stos
xchg
adc
jne
(bad)
dec
xchg
fs
call
call
call
je
jmp
cmp
push
je
pop
outs
xor
bound
dec
call
call
je
jmp
outs
or
push
jne
je
sar
scas
xchg
hlt
int
sbb
lea
leave
sub
nop
fadd
add
add
add
jmp
pushf
pusha
cmp
fild
je
jne
jbe
cmp
lea
call
add
call
call
je
jmp
sbb
push
je
mov
xor
div
cmp
xor
inc
test
jne
call
call
call
call
je
jmp
xchg
rol
jne
je
lea
jne
jnp
loopne
lea
xchg
not
and
cmp
je
and
gs
call
call
call
je
jmp
gs
cmp
je
inc
or
push
je
jne
inc
mov
leave
lea
xchg
test
je
jne
les
pop
dec
scas
outs
mov
add
call
je
jmp
pop
(bad)
je
push
div
pop
push
aas
ret
lea
call
call
call
je
jmp
ficomp
int3
jne
je
mov
div
call
add
dec
call
call
je
jmp
out
push
or
mov
jne
cdq
adc
mov
(bad)
call
call
je
jmp
push
or
jne
je
adc
div
mov
and
lea
call
add
call
call
je
jmp
sub
je
or
jne
daa
add
sub
add
xor
mov
call
call
call
call
je
jmp
mov
add
or
push
push
lahf
je
jne
and
jbe
lea
xchg
not
and
cmp
je
and
call
call
call
call
je
jmp
dec
mov
je
fwait
add
hlt
jmp
pop
xchg
lea
xchg
test
je
jne
xlat
xchg
mov
jmp
add
add
call
je
jmp
cmps
dec
xchg
push
je
outs
add
jne
jg
pop
retf
lea
call
call
call
je
jmp
fptan
mov
jne
je
adc
div
aas
adc
dec
call
call
je
jmp
in
push
cmp
push
je
ins
jg
div
hlt
stos
lds
ret
jmp
mov
imul
xchg
call
call
je
jmp
gs
mov
or
pushf
movs
lods
je
jne
pop
lods
pushf
lea
call
add
call
call
je
jmp
mov
push
je
ja
div
div
sahf
mov
imul
ret
xor
inc
test
je
xor
mov
xor
add
add
jmp
xor
mov
xor
add
call
call
call
call
je
jmp
adc
add
push
je
mov
mov
je
jne
cwde
xor
lea
xchg
not
and
cmp
je
(bad)
jno
call
call
call
call
je
jmp
arpl
cmps
and
je
mov
div
mov
fs
xchg
test
je
jne
cmps
stos
xchg
scas
into
cmp
or
add
add
add
jmp
mov
loopne
jne
je
inc
sbb
je
jne
hlt
dec
add
fs
call
call
call
je
jmp
and
push
je
mov
div
jmp
and
call
call
je
jmp
(bad)
icebp
mov
and
call
in
fstp
ret
jmp
aaa
xchg
mov
sub
movs
xchg
call
call
je
jmp
mov
push
je
and
es
jne
sbb
lea
call
add
call
call
je
jmp
push
lods
pop
div
je
cs
adc
div
pop
mov
test
add
push
mov
call
pop
call
call
call
call
je
jmp
mov
push
je
std
xor
div
icebp
aam
or
and
shl
sar
je
sub
loop
add
add
call
call
call
je
jmp
sbb
add
jne
je
adc
div
lds
cld
xchg
test
je
jne
in
jae
inc
mov
ret
and
add
add
call
je
jmp
mov
sbb
mov
hlt
cld
sbb
xor
add
add
call
call
je
jmp
(bad)
push
or
jne
je
inc
inc
icebp
push
je
jne
xchg
xchg
scas
add
dec
call
call
je
jmp
mov
movs
jne
je
mov
bound
div
fcmovbe
dec
daa
ret
jmp
(bad)
dec
pop
retf
mov
call
call
je
jmp
pop
(bad)
ror
push
je
aad
rol
je
jne
ret
and
fs
call
add
call
call
je
jmp
mov
push
je
dec
push
dec
xchg
je
jne
rol
or
add
mov
mov
jmp
xor
mov
call
call
call
call
je
jmp
(bad)
pop
ss
je
out
retf
je
jne
inc
mov
lods
lea
xchg
not
and
cmp
je
lods
mov
call
call
call
call
je
jmp
iret
sar
jne
je
add
and
div
sub
jae
fs
xchg
test
je
jne
aaa
test
xchg
call
call
je
jmp
lds
je
out
jmp
adc
fs
call
call
call
je
jmp
dec
hlt
call
jmp
jne
iret
push
add
add
add
add
jmp
fisttp
add
je
lock
jge
je
jne
cmp
fcmovb
jmp
fbstp
loopne
xchg
call
call
je
jmp
add
fs
jne
je
cmp
jnp
je
jne
outs
retf
lea
call
add
call
call
je
jmp
daa
mov
je
jb
(bad)
xor
outs
jecxz
or
add
xor
inc
test
je
xor
mov
xor
add
add
jmp
xor
mov
xor
add
call
call
call
call
je
jmp
or
push
je
sbb
xor
je
jne
je
pop
sahf
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
inc
(bad)
jmp
or
adc
and
fs
xchg
test
je
jne
dec
cwde
sbb
mov
dec
(bad)
xchg
call
call
je
jmp
and
push
je
int
fcom
div
xchg
dec
dec
ror
add
add
add
add
call
je
jmp
ds
adc
je
scas
jl
mov
lea
and
call
call
je
jmp
or
push
je
push
ds
hlt
dec
xchg
aad
ret
jmp
aaa
mov
push
mov
push
rol
add
call
je
jmp
jb
add
jne
je
in
and
hlt
dec
daa
lea
add
add
add
add
call
call
je
jmp
pop
mov
je
daa
push
dec
fbstp
hlt
retf
lea
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
call
or
jg
or
div
or
and
xchg
not
and
cmp
je
pop
jbe
call
call
call
call
je
jmp
push
sbb
je
mov
enter
jne
dec
aas
rcr
fs
xchg
test
je
jne
sahf
push
mov
inc
xchg
call
call
je
jmp
ror
pop
ins
jne
je
jmp
div
mov
and
call
call
call
je
jmp
jge
inc
jne
push
je
or
cs
je
jne
lods
jne
std
add
call
call
je
jmp
jecxz
sub
or
jmp
ja
push
fadd
jmp
mov
fs
dec
xchg
call
call
je
jmp
cmc
or
jne
je
mov
clc
inc
je
jne
or
aam
lea
call
add
call
call
je
jmp
ja
loope
jne
je
sbb
div
(bad)
bound
jmp
ret
mov
call
call
call
call
je
jmp
js
(bad)
pcmpeqw
je
es
out
gs
jne
add
lea
xchg
not
and
cmp
je
int3
mov
call
call
call
call
je
jmp
aad
fimul
cdq
and
hlt
test
add
xchg
test
je
jne
sbb
mov
and
add
add
call
je
jmp
mov
or
jmp
mov
cmp
lea
call
call
call
je
jmp
push
loop
mov
in
movs
cmp
hlt
mov
xchg
mov
add
add
call
je
jmp
mov
push
je
add
ds
je
jne
jle
inc
lahf
ret
jmp
loopne
pop
scas
fadd
std
cli
xchg
call
call
je
jmp
cwde
jmp
(bad)
fst
in
je
jne
mov
fs
call
add
call
call
je
jmp
add
push
je
or
hlt
popf
sbb
sub
dec
lea
call
call
call
call
je
jmp
adc
xor
je
add
hlt
xchg
adc
scas
lea
xchg
test
je
jne
jnp
jne
cwde
add
call
call
je
jmp
adc
int3
push
aaa
je
jne
mov
ror
add
add
call
call
je
jmp
retf
cwde
inc
xor
or
daa
call
hlt
xor
std
test
add
add
call
je
jmp
xchg
push
jb
jne
je
mov
jne
inc
es
ins
ret
lea
mov
call
call
call
call
je
jmp
inc
je
scas
cmp
shl
hlt
out
rcl
fs
xchg
test
je
jne
cmp
popa
call
and
add
add
call
je
jmp
push
sub
or
loopne
sub
add
fs
call
call
call
je
jmp
mov
push
je
jae
fxch
je
jne
sub
add
call
call
je
jmp
push
inc
mov
or
add
mov
hlt
js
fild
ret
jmp
repz
adc
sbb
(bad)
in
xor
and
jno
sahf
call
call
call
call
je
jmp
call
jno
jne
je
iret
push
out
lahf
je
jne
add
mov
xchg
not
and
cmp
je
inc
fcom
add
add
add
add
add
jmp
and
je
movs
arpl
je
jne
add
repz
lea
xchg
test
je
jne
call
scas
cmc
xchg
call
call
je
jmp
test
jno
push
je
fwait
mov
hlt
fistp
and
call
call
call
je
jmp
lods
adc
outs
jne
je
or
mov
div
fsub
xlat
rol
add
add
call
je
jmp
jge
dec
movs
jne
je
mov
div
pop
jns
adc
jmp
jp
jle
adc
add
call
call
je
jmp
xor
push
je
fsubr
fdiv
je
jne
imul
sbb
call
add
call
call
je
jmp
daa
jp
nop
jne
je
adc
cdq
sti
je
jne
xor
inc
cdq
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
in
inc
push
jne
je
js
jae
je
jne
not
dec
in
lea
xchg
test
je
jne
aas
sbb
iret
xchg
call
call
je
jmp
ficomp
arpl
je
adc
jne
fsubr
and
call
call
call
je
jmp
das
sub
shl
je
iret
or
je
jne
cmp
add
dec
call
call
je
jmp
xor
push
je
dec
pop
adc
hlt
rcl
fcmovnb
call
call
call
call
je
jmp
std
pop
je
jne
je
inc
push
mov
hlt
or
cmps
lea
xchg
test
je
jne
jl
loope
mov
add
call
call
je
jmp
aas
aaa
sub
jne
je
jae
stos
push
je
jne
movs
clc
test
lea
call
call
call
je
jmp
and
adc
jne
je
popf
sti
aas
or
hlt
shl
inc
and
call
call
je
jmp
push
push
je
sbb
or
div
sbb
jns
ret
mov
add
xor
mov
call
call
call
call
je
jmp
lods
imul
sbb
imul
lea
xchg
not
and
cmp
je
stos
add
add
add
add
add
add
jmp
stos
iret
xchg
sbb
je
mov
div
pushf
mov
and
xchg
test
je
jne
and
cmps
mov
add
add
call
je
jmp
push
cld
hlt
mov
je
in
inc
and
je
jne
cmp
fs
call
call
call
je
jmp
jecxz
mov
or
sbb
je
div
add
add
dec
call
call
je
jmp
xor
mov
mov
div
mov
jmp
test
xchg
in
push
adc
add
call
call
je
jmp
cdq
mov
pop
jne
je
mov
cwde
mov
hlt
inc
inc
(bad)
lea
call
add
call
call
je
jmp
call
or
xchg
pop
xchg
je
jne
or
add
xor
inc
test
jne
xor
mov
mov
call
call
call
call
je
jmp
imul
ins
and
hlt
mov
cld
dec
lea
xchg
not
and
cmp
je
repnz
call
call
call
call
je
jmp
jbe
repz
jae
dec
popa
je
jne
mov
out
lea
xchg
test
je
jne
sbb
lock
cmp
call
call
je
jmp
fldenv
xchg
mov
je
cmp
and
jne
push
loope
call
add
add
add
add
call
je
jmp
aas
bnd
or
and
jne
mov
mov
add
call
call
je
jmp
les
jne
je
push
mov
xor
inc
cld
loop
ret
jmp
push
mov
aad
xchg
call
call
je
jmp
in
sub
jne
je
popa
push
sbb
je
jne
mov
ds
lea
call
add
call
call
je
jmp
pop
jecxz
fidiv
je
xor
div
clc
pop
xchg
test
add
mov
mov
call
call
call
call
je
jmp
jle
jmp
jne
je
daa
js
imul
mov
retf
ins
lea
xchg
not
and
cmp
je
mov
mov
add
add
call
call
call
je
jmp
(bad)
rol
push
je
(bad)
jle
lds
hlt
popf
mov
lea
xchg
test
je
jne
outs
mov
jne
mov
and
add
add
call
je
jmp
test
push
je
and
div
(bad)
and
call
call
call
je
jmp
jecxz
in
jne
je
std
push
lods
jb
div
clc
pop
or
add
call
call
je
jmp
aas
sbb
or
pslld
je
jne
popf
mov
or
dec
cs
ret
ja
xchg
call
call
je
jmp
cmps
das
gs
jne
je
outs
push
sub
je
jne
xchg
test
push
lea
call
add
call
call
je
jmp
sub
dec
(bad)
je
push
div
cwde
add
jmp
ret
jmp
xor
mov
mov
mov
call
call
call
call
je
jmp
test
rol
jne
je
add
jne
(bad)
popf
scas
mov
xchg
not
and
cmp
je
jl
xchg
call
call
call
call
je
jmp
xchg
adc
sbb
je
popf
pop
mov
je
jne
icebp
(bad)
ror
and
shl
sub
cld
jmp
js
jne
add
call
call
je
jmp
dec
add
mov
(bad)
in
cmp
dec
jo
lea
call
call
call
je
jmp
cwde
and
je
cmp
jne
push
popf
push
lods
add
call
call
je
jmp
push
inc
xor
jne
je
not
xchg
pop
je
jne
sbb
or
adc
add
and
add
add
call
je
jmp
mov
push
je
dec
cs
je
jne
int3
sbb
lea
call
add
call
call
je
jmp
jns
xor
push
je
sub
mov
outs
mov
sbb
add
push
mov
call
pop
mov
call
call
call
call
je
jmp
out
and
jne
je
jmp
hlt
jae
xchg
or
xchg
not
and
cmp
je
cmp
add
call
call
call
je
jmp
cs
jo
push
je
sbb
jecxz
je
jne
leave
(bad)
dec
pop
lea
xchg
test
je
jne
sti
xchg
mov
push
xor
jg
add
call
call
je
jmp
frstor
je
mov
inc
jecxz
div
pop
mov
and
call
call
call
je
jmp
cmp
popf
adc
je
inc
push
xchg
je
jne
psubsw
dec
call
call
je
jmp
or
push
je
retf
sub
hlt
mov
inc
addr16
jmp
jecxz
es
(bad)
xchg
call
call
je
jmp
xor
push
je
sti
daa
ror
div
jg
xor
lea
call
add
call
call
je
jmp
shr
jne
je
out
hlt
sub
div
rol
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
jo
fstp
jmp
mov
mov
mov
cld
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
ins
and
jns
scas
sbb
hlt
mov
jae
lea
xchg
test
je
jne
(bad)
lock
test
dec
adc
add
call
call
je
jmp
push
fwait
pop
pop
jne
je
adc
jne
or
pop
pop
lea
call
call
call
je
jmp
aaa
or
push
movs
loop
je
jne
or
xchg
scas
add
call
call
je
jmp
push
sub
push
je
push
dec
retf
div
pop
mov
dec
ret
jmp
adc
ins
cmp
and
add
add
call
je
jmp
cmc
in
cmp
and
hlt
fsub
pop
mov
call
add
call
call
je
jmp
lea
loope
push
je
bound
mov
outs
call
(bad)
pop
add
add
add
add
call
call
call
je
jmp
push
mov
xor
je
mov
div
xor
js
lea
xchg
not
and
cmp
je
add
aaa
call
call
call
call
je
jmp
ja
out
jne
je
cmp
jnp
lea
xchg
test
je
jne
inc
pop
xor
push
jns
xchg
call
call
je
jmp
cmps
retf
mov
jne
je
mov
div
mov
push
jmp
add
add
add
add
call
je
jmp
xchg
push
or
imul
xchg
je
jne
nop
inc
cld
dec
add
call
call
je
jmp
or
je
(bad)
jne
push
pop
cmc
inc
ret
jmp
xor
imul
and
lods
xchg
call
call
je
jmp
test
(bad)
xor
call
es
push
fs
call
add
call
call
je
jmp
xchg
out
loop
push
je
jae
xchg
shl
hlt
idiv
or
add
sub
dec
lea
call
call
call
call
je
jmp
mov
push
je
cmc
aad
(bad)
je
jne
add
mov
xchg
test
je
jne
inc
data16
repz
and
add
add
add
jmp
xchg
nop
dec
add
push
je
pop
xor
jne
and
cmp
fs
call
call
call
je
jmp
jp
rcr
je
sub
xchg
xor
lea
add
add
call
je
jmp
push
push
je
adc
jne
cmps
xor
imul
add
add
add
call
call
call
je
jmp
mov
jp
jne
je
sub
div
xchg
xor
and
xchg
test
je
jne
inc
sahf
scas
and
xor
mov
add
call
call
je
jmp
les
je
in
add
jne
jp
js
lea
call
call
call
je
jmp
test
cmp
ret
(bad)
je
jne
cmp
and
call
call
je
jmp
clc
(bad)
jp
jne
je
repnz
cld
je
jne
std
loop
pop
ret
jmp
loop
shr
pop
and
mov
xchg
bound
pusha
bound
add
call
call
call
je
jmp
popf
mov
je
mov
div
fnstsw
mov
cld
xchg
not
and
cmp
je
aam
mov
add
add
add
add
add
jmp
mov
ret
sbb
je
imul
jne
inc
cmp
or
add
test
je
jne
cmp
shr
dec
sub
call
call
je
jmp
aas
lds
or
ror
div
movs
pop
push
test
fs
call
call
call
je
jmp
notrack
mov
push
in
add
hlt
pop
adc
add
call
call
je
jmp
jo
xlat
dec
jne
je
push
(bad)
je
jne
rcr
ret
jmp
mov
pop
jg
shr
xchg
call
call
je
jmp
xchg
repz
je
int
fsub
div
sbb
xor
call
add
call
call
je
jmp
cs
cmp
push
push
sub
hlt
push
rcr
movs
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
cmp
push
je
inc
pushf
add
xchg
fmul
jecxz
fs
xchg
test
je
jne
push
cmps
lea
jmp
scas
xchg
call
call
je
jmp
int3
cmp
je
sbb
cmp
mov
(bad)
dec
lea
call
call
call
je
jmp
lds
je
vmread
je
jne
or
cmps
add
call
call
je
jmp
push
ja
mov
push
je
mov
test
jne
in
imul
add
call
call
call
je
jmp
add
xor
je
dec
pop
cld
dec
je
jne
fsubr
jmp
cld
xchg
test
je
jne
jmp
mov
cmp
sbb
add
add
add
jmp
inc
add
mov
lods
je
jne
push
and
fimul
add
add
call
call
je
jmp
mov
push
je
add
je
jne
mov
pop
mov
call
call
je
jmp
sbb
push
or
dec
or
je
jne
call
mov
add
xor
mov
xor
inc
test
jne
xor
mov
mov
add
mov
mov
call
call
call
call
je
jmp
mov
push
je
(bad)
out
pop
dec
je
jne
sbb
adc
lea
xchg
not
and
cmp
je
test
add
call
call
call
je
jmp
cmp
loopne
jne
je
ror
mov
div
cld
and
cmp
add
test
je
jne
xchg
scas
inc
scas
loope
mov
xchg
call
call
je
jmp
push
fisttp
hlt
jne
je
int
xchg
and
div
jmp
fs
call
call
call
je
jmp
mov
and
jne
je
test
pop
je
jne
and
inc
les
add
add
call
je
jmp
cmp
or
stc
or
div
cmp
jmp
lods
inc
mov
scas
xchg
call
call
je
jmp
ds
ds
je
xchg
add
call
xor
lea
call
add
call
call
je
jmp
mov
adc
nop
xchg
adc
hlt
jmp
add
mov
call
jmp
xor
mov
mov
push
mov
call
pop
call
call
call
call
je
jmp
cs
pop
loopne
push
je
stos
push
lods
pop
je
jne
sbb
fs
xchg
not
and
cmp
je
into
pop
shr
add
add
call
call
call
je
jmp
(bad)
mov
je
xchg
test
dec
dec
cli
ins
lea
xchg
test
je
jne
inc
pop
lahf
pop
sub
and
add
add
call
je
jmp
pop
adc
cmp
ret
div
sti
cmc
es
lea
call
call
call
je
jmp
cmp
or
mov
jne
mov
add
dec
call
call
je
jmp
les
je
data16
in
je
jne
and
(bad)
(bad)
cmp
jae
push
push
jo
add
call
call
je
jmp
mov
daa
push
jne
je
mov
ds
je
jne
or
in
lea
call
add
call
call
je
jmp
cld
dec
sbb
jne
je
lea
das
je
jne
xchg
fcmovu
jmp
inc
adc
inc
adc
add
add
call
call
call
je
jmp
inc
mov
fdiv
je
les
mov
hlt
dec
mov
xchg
lea
xchg
not
and
cmp
je
sub
jge
add
add
call
call
call
je
jmp
in
push
je
cli
push
shl
je
jne
pop
mov
lea
xchg
test
je
jne
out
and
sub
xchg
and
add
add
add
jmp
add
shl
je
in
jmp
hlt
imul
jno
fs
call
call
call
je
jmp
sahf
stos
sar
push
je
inc
xor
je
jne
pop
aas
sub
dec
call
call
je
jmp
cwde
xor
lods
jne
je
mov
push
ins
je
jne
push
fiadd
mov
in
ret
xchg
call
call
je
jmp
jbe
fcompp
jne
je
(bad)
std
test
je
jne
fcomp
and
call
add
call
call
je
jmp
mov
movs
int3
jne
je
sbb
jne
pop
gs
jmp
ret
mov
call
call
call
call
je
jmp
ins
push
inc
jne
je
push
stc
sbb
hlt
jge
es
fs
xchg
not
and
cmp
je
mov
xchg
add
add
call
call
call
je
jmp
imul
je
cmps
retf
je
jne
inc
fnsave
cld
xchg
test
je
jne
mov
dec
jns
xchg
call
call
je
jmp
sbb
push
je
and
hlt
push
in
imul
call
call
je
jmp
and
fmul
jne
je
in
arpl
je
jne
rcr
out
add
dec
call
call
je
jmp
or
je
or
je
jne
fisub
or
cmps
push
movs
and
call
call
je
jmp
mov
push
je
in
push
popf
and
hlt
in
cmps
jno
fs
call
add
call
call
je
jmp
push
jmp
or
ins
popa
mov
div
imul
add
add
dec
lea
call
call
call
call
je
jmp
aam
in
enter
or
in
cmps
push
je
jne
loopne
mov
and
xchg
test
je
jne
sar
dec
xor
xchg
call
call
je
jmp
les
adc
jne
je
icebp
mov
jne
lock
lea
lea
call
call
call
je
jmp
rcl
xchg
je
mov
div
xor
and
call
call
je
jmp
lds
je
retf
xchg
hlt
sbb
mov
add
call
call
call
je
jmp
pop
inc
sub
je
cwde
jg
aad
div
sbb
fs
xchg
test
je
jne
jg
and
cdq
xchg
call
call
je
jmp
in
jl
push
push
je
fadd
adc
je
jne
pop
push
dec
lahf
lea
call
call
call
je
jmp
ins
add
je
mov
jne
pop
dec
inc
add
add
add
call
je
jmp
test
je
add
sub
jo
cwde
sbb
jmp
aaa
pop
sub
jnp
sub
aad
adc
push
sub
jae
jmp
jle
dec
dec
pop
call
call
call
call
je
jmp
shr
or
push
js
je
jne
jns
test
fs
xchg
not
and
cmp
je
inc
add
call
call
call
call
je
jmp
mov
push
je
bound
jne
repz
popa
lea
xchg
test
je
jne
and
push
mov
xchg
call
call
je
jmp
les
loop
jne
je
jo
xchg
push
div
in
cmps
xor
add
add
call
call
je
jmp
out
test
jne
je
or
div
or
mov
dec
call
call
je
jmp
cmp
outs
and
je
dec
mov
jne
pop
(bad)
loope
ret
jmp
cmp
xchg
fst
and
add
add
call
je
jmp
das
mov
je
adc
div
stos
jecxz
sbb
add
add
add
call
call
je
jmp
rol
or
fwait
rol
div
(bad)
dec
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
push
and
push
je
pop
xchg
mov
hlt
add
mov
cld
xchg
test
je
jne
add
mov
sub
add
add
call
je
jmp
icebp
pop
xchg
jne
je
push
mov
hlt
inc
push
dec
mov
fs
call
call
call
je
jmp
sar
ins
jne
je
in
mov
hlt
inc
pop
mov
add
call
call
je
jmp
mov
push
je
mov
cmp
je
jne
fstp
add
add
call
call
call
je
jmp
leave
mov
je
xor
jne
das
(bad)
loop
lea
xchg
test
je
jne
fdivr
les
clc
pop
push
add
call
call
je
jmp
retf
shl
je
fsubr
hlt
sub
scas
dec
add
add
call
call
je
jmp
and
shl
les
hlt
mov
pop
out
add
dec
call
call
je
jmp
dec
sahf
fild
push
je
fild
jo
je
jne
cmp
in
ret
mov
add
mov
mov
call
call
call
call
je
jmp
in
jp
jle
push
je
inc
add
je
jne
scas
int
mov
xchg
not
and
cmp
je
cwde
ror
add
add
call
call
call
je
jmp
pop
cli
sub
rcl
inc
je
jne
clc
es
fisttp
add
test
je
jne
out
cs
call
and
add
add
call
je
jmp
retf
or
je
mov
div
xor
ror
fs
call
call
call
je
jmp
push
xor
push
je
nop
sbb
or
hlt
mov
mov
add
add
call
je
jmp
push
sar
cmp
je
xor
div
(bad)
loope
cs
jmp
ins
or
push
xchg
call
call
je
jmp
ss
fnstenv
je
imul
movs
je
jne
inc
repnz
add
add
add
add
call
call
je
jmp
mov
inc
jne
je
mov
and
div
adc
push
fldpi
add
mov
call
call
call
call
je
jmp
call
push
je
outs
ffreep
xor
hlt
test
outs
mov
fs
xchg
not
and
cmp
je
test
add
add
add
add
add
add
jmp
js
(bad)
mov
push
je
xor
(bad)
shl
hlt
mov
fs
xchg
test
je
jne
setl
dec
jo
sbb
call
call
je
jmp
out
out
jne
je
in
pop
stos
adc
hlt
ins
xchg
lods
lea
call
call
call
je
jmp
in
fcmovb
imul
sub
hlt
adc
and
call
call
je
jmp
sub
popf
mov
je
pop
adc
hlt
or
or
jno
enter
call
call
je
jmp
imul
jne
je
mov
push
aad
div
stos
punpckldq
fs
call
add
call
call
je
jmp
sub
lahf
jne
je
push
dec
and
hlt
add
dec
jge
add
push
push
push
mov
call
pop
pop
pop
mov
xor
mov
xor
inc
test
je
mov
push
popf
add
mov
mov
pushf
pop
mov
call
call
call
call
je
jmp
clc
push
adc
jne
je
adc
jne
pop
or
lea
xchg
not
and
cmp
je
sub
add
add
add
add
add
add
jmp
pop
in
scas
inc
jne
je
imul
fidiv
hlt
adc
pop
mov
add
test
je
jne
and
xacquire
call
call
je
jmp
push
into
sub
jne
je
push
and
je
jne
outs
push
js
lea
call
call
call
je
jmp
dec
inc
push
push
jne
je
inc
je
xchg
je
jne
outs
xor
dec
call
call
je
jmp
and
in
jne
je
mov
div
nop
pop
xchg
push
ret
jmp
push
sub
jns
punpckhbw
add
add
call
je
jmp
and
retf
xor
je
loopne
mov
hlt
aaa
or
add
add
call
call
je
jmp
or
lea
jne
je
pop
xchg
ficomp
div
push
mov
ret
jmp
add
mov
mov
mov
call
call
call
call
je
jmp
mov
or
jne
je
jg
sbb
hlt
jo
xlat
lea
add
not
and
cmp
je
dec
daa
inc
call
call
call
call
je
jmp
add
das
aas
jne
je
sbb
xor
hlt
fdiv
and
xchg
test
je
jne
ss
mov
add
call
call
je
jmp
fidiv
loopne
push
je
or
div
or
fs
call
call
call
je
jmp
push
xor
je
inc
scas
(bad)
je
jne
inc
dec
outs
and
add
add
call
je
jmp
push
aam
fs
je
mov
fiadd
je
jne
pop
pop
(bad)
stc
ret
jmp
sbb
fcmove
xchg
call
call
je
jmp
jb
inc
cmp
je
test
and
div
jge
add
lea
call
add
call
call
je
jmp
jbe
loope
jne
je
inc
mov
jne
dec
dec
cli
mov
add
sub
dec
lea
call
call
call
call
je
jmp
mov
push
jne
je
pop
test
jne
outs
dec
ja
lea
xchg
test
je
jne
adc
xchg
xchg
call
call
je
jmp
ficomp
or
in
bound
div
inc
dec
cmp
lea
call
call
call
je
jmp
xchg
rcr
icebp
cwde
into
cdq
je
jne
and
cmp
add
add
call
je
jmp
in
or
jne
je
or
jg
je
jne
aad
inc
add
sbb
mov
call
call
call
call
je
jmp
jbe
jns
jne
je
stc
pop
test
je
jne
dec
pop
fld
fs
xchg
test
je
jne
(bad)
jge
or
add
call
call
je
jmp
push
xor
mov
je
mov
aaa
jae
div
adc
and
call
call
call
je
jmp
imul
or
cmp
loop
push
dec
call
call
je
jmp
cwde
pop
inc
in
push
je
push
imul
ret
jmp
(bad)
mov
jg
add
add
call
call
call
je
jmp
xchg
dec
cld
inc
jne
je
jl
pop
dec
je
jne
xor
(bad)
push
lea
xchg
not
and
cmp
je
and
add
call
call
call
je
jmp
dec
mov
iret
jne
je
ins
and
cmp
lods
add
cld
xchg
test
je
jne
pop
ja
cmps
std
div
xchg
call
call
je
jmp
adc
je
xchg
add
je
jne
pop
dec
cmc
pop
lea
call
call
call
je
jmp
sub
push
je
in
dec
push
je
div
inc
mov
jge
add
dec
call
call
je
jmp
pop
jmp
mov
ss
je
jne
pop
xchg
xlat
loop
jmp
cs
add
add
call
call
je
jmp
scas
retf
jne
je
lods
repnz
scas
je
jne
or
fs
call
add
call
call
je
jmp
iret
dec
lock
push
je
jb
mov
adc
cmp
mov
lea
jmp
call
call
call
call
je
jmp
ficomp
push
je
xchg
adc
je
jne
xchg
adc
lea
xchg
test
je
jne
cmc
inc
lea
jmp
xchg
call
call
je
jmp
push
into
dec
nop
jne
je
xor
mov
hlt
fdivr
xchg
add
add
call
call
je
jmp
pop
sti
std
cmps
jne
je
dec
arpl
pop
je
jne
jae
pop
scas
add
call
call
je
jmp
dec
scas
or
or
or
jne
aad
fld
ret
call
call
call
call
je
jmp
cmp
or
push
je
xlat
adc
hlt
push
push
cmc
movs
lea
xchg
test
je
jne
pushf
nop
pop
jge
inc
jae
xchg
call
call
je
jmp
push
mov
je
push
cmp
jne
(bad)
pop
or
lea
call
call
call
je
jmp
xchg
movs
jo
jne
je
leave
xchg
je
jne
jg
stc
mov
call
call
je
jmp
fsubr
jnp
jne
je
pop
pushf
sub
jne
mov
add
add
mov
mov
call
call
call
call
je
jmp
aam
mov
jne
je
out
mov
adc
div
and
fs
xchg
not
and
cmp
je
sbb
add
call
call
call
je
jmp
mov
or
jne
aas
je
jne
imul
cld
xchg
test
je
jne
fimul
(bad)
rcl
add
xchg
call
call
je
jmp
clc
pop
sub
jne
je
dec
ficom
mov
fs
call
call
call
je
jmp
pop
cmc
in
enter
or
rol
dec
je
jne
repz
dec
call
call
je
jmp
mov
push
je
add
sub
je
jne
out
or
cdq
fwait
js
jp
jbe
add
call
call
je
jmp
lock
loop
push
je
stc
push
push
dec
je
jne
out
or
lea
call
add
call
call
je
jmp
mov
cmp
push
je
add
mov
div
dec
cld
jg
jmp
ret
add
mov
call
call
call
call
je
jmp
repnz
or
(bad)
pop
test
pop
cld
mov
cld
xchg
not
and
cmp
je
int3
addr16
add
add
call
call
call
je
jmp
loop
popf
jmp
jns
sub
je
jne
imul
lea
xchg
test
je
jne
add
aam
xchg
call
call
je
jmp
repnz
ss
push
je
adc
jne
inc
popa
jne
lea
call
call
call
je
jmp
mov
push
je
mov
dec
pcmpeqb
jne
scas
mov
add
call
call
je
jmp
xor
push
je
jge
and
div
xchg
int
jae
jmp
mov
inc
jecxz
xchg
call
call
je
jmp
jle
jno
jne
je
int
or
and
(bad)
lea
call
add
call
call
je
jmp
jp
ja
jne
je
xchg
add
cmps
je
jne
mov
mov
add
push
mov
push
popf
pop
sub
mov
pushf
pop
mov
mov
call
mov
call
call
call
call
je
jmp
sub
xchg
ss
je
xchg
repnz
je
jne
rol
cld
xchg
not
and
cmp
je
clc
add
call
call
call
call
je
jmp
mov
push
je
aad
sbb
je
jne
scas
nop
sbb
xchg
test
je
jne
mov
fsubr
add
call
call
je
jmp
dec
mov
je
or
mov
xchg
pop
xchg
sti
lea
call
call
call
je
jmp
test
sahf
leave
jne
je
adc
loop
div
mov
retf
movs
add
call
call
je
jmp
dec
add
je
jl
ret
div
movs
push
in
test
jmp
lahf
shl
adc
sbb
xchg
call
call
je
jmp
rcl
or
cmp
jne
or
sbb
lea
call
add
call
call
je
jmp
sbb
or
mov
jne
mov
inc
xchg
add
sub
dec
lea
call
call
call
call
je
jmp
jb
jmp
or
arpl
hlt
imul
cld
xchg
test
je
jne
fist
mov
mov
add
add
call
je
jmp
push
sbb
je
pop
fdivr
hlt
inc
push
(bad)
repz
call
call
call
je
jmp
dec
cmc
push
lods
jne
je
sub
div
idiv
sbb
add
call
call
je
jmp
sbb
ror
jne
je
in
call
cs
ins
dec
ret
lea
mov
call
call
call
call
je
jmp
add
push
je
pop
loope
xor
hlt
in
cli
js
lea
xchg
test
je
jne
pushf
and
mov
call
call
je
jmp
sbb
xchg
jne
je
add
push
xchg
je
jne
inc
mov
call
call
call
je
jmp
cs
std
cdq
jne
je
dec
rcr
div
adc
add
dec
call
call
je
jmp
and
and
push
je
cmp
not
jne
pop
dec
or
loopne
adc
or
stc
fsub
xor
adc
(bad)
mov
loop
add
add
call
call
call
je
jmp
test
je
fpatan
je
je
jne
or
fs
xchg
not
and
cmp
je
sbb
call
call
call
call
je
jmp
scas
xchg
or
jne
je
jg
ror
je
jne
pop
rcr
jbe
fs
xchg
test
je
jne
mov
out
and
or
xchg
call
call
je
jmp
cmc
push
je
cwde
outs
sub
je
jne
jl
xor
lea
call
call
call
je
jmp
and
stos
mov
je
jl
sti
pop
je
jne
imul
sbb
call
call
je
jmp
stos
sahf
lahf
add
je
fxch
xor
je
jne
enter
ret
jmp
sbb
loopne
push
cmps
push
xchg
call
call
je
jmp
movs
sbb
or
dec
mov
hlt
sub
fs
call
add
call
call
je
jmp
enter
jne
je
cs
push
je
jne
(bad)
scas
shl
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
rcl
or
sar
push
idiv
lea
xchg
test
je
jne
and
sbb
jmp
hlt
xchg
call
call
je
jmp
sbb
mov
or
lods
mov
je
jne
(bad)
dec
movs
push
lea
call
call
call
je
jmp
add
je
xchg
jne
les
pop
add
call
call
je
jmp
jns
inc
outs
jne
je
sahf
pop
fst
xchg
outs
mov
add
add
add
add
add
add
jmp
jo
pushf
xor
or
push
std
mov
div
imul
and
xchg
test
je
jne
mov
cmp
xchg
call
call
je
jmp
(bad)
mul
(bad)
jne
je
cmp
jge
div
fs
lea
call
call
call
je
jmp
call
or
jne
xchg
je
jne
cs
jae
add
call
call
je
jmp
mov
push
je
dec
xchg
mov
je
jne
inc
xor
ret
mov
add
mov
mov
call
call
call
call
je
jmp
call
or
bound
div
call
cld
xchg
not
and
cmp
je
push
aad
call
call
call
call
je
jmp
sub
xchg
mov
das
and
hlt
xor
pop
ret
lea
xchg
test
je
jne
mov
inc
cmp
test
call
call
je
jmp
(bad)
cmp
je
(bad)
inc
sub
hlt
clc
push
fwait
or
fs
call
call
call
je
jmp
fcomi
inc
out
push
je
out
adc
jne
xchg
and
call
call
je
jmp
pusha
clc
dec
jne
push
je
inc
shl
adc
jmp
jecxz
haddps
lock
add
add
add
jmp
jbe
je
es
push
je
jne
fcomi
int3
push
lea
call
add
call
call
je
jmp
dec
mov
je
inc
sbb
popa
je
jne
inc
out
cmp
add
add
mov
xor
mov
xor
mov
xor
inc
test
je
mov
push
popf
mul
pushf
pop
mov
jmp
call
call
call
call
je
jmp
popf
fs
pop
jne
je
push
loope
sbb
hlt
sub
fs
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
and
push
je
mov
shr
je
jne
add
lea
xchg
test
je
jne
sub
outs
xchg
xchg
call
call
je
jmp
sbb
pop
in
push
je
push
sahf
in
lahf
je
jne
sbb
and
call
call
call
je
jmp
sbb
imul
push
je
cmp
adc
div
pop
(bad)
cmp
add
dec
call
call
je
jmp
jnp
popf
test
je
leave
ret
data16
je
jne
push
int3
xchg
aad
jmp
mov
scas
and
add
call
call
je
jmp
ret
jle
push
je
out
adc
hlt
cs
xchg
dec
lea
call
add
call
call
je
jmp
push
pop
shr
jne
je
jns
retf
js
div
mov
shl
jmp
ret
mul
mov
mov
add
mov
mov
call
call
call
call
je
jmp
rcr
(bad)
js
push
je
dec
(bad)
sbb
je
jne
sahf
cs
add
not
and
cmp
je
ret
call
call
call
call
je
jmp
cdq
cmc
ja
jne
je
mov
inc
movs
je
jne
mov
fs
xchg
test
je
jne
push
dec
mov
sub
imul
add
call
je
jmp
cmps
cmp
jne
je
push
cmp
mov
fs
call
call
call
je
jmp
leave
cmp
mov
dec
mov
jne
sub
inc
add
call
call
je
jmp
xor
push
je
pop
inc
shr
ror
sbb
jmp
call
daa
add
xchg
call
call
je
jmp
or
or
pusha
pop
cmp
hlt
dec
xchg
add
add
add
add
call
call
je
jmp
mov
push
je
clc
test
jne
int
out
stos
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
fwait
enter
push
je
push
ror
je
jne
mov
jge
add
test
je
jne
aam
pop
nop
push
dec
sub
add
add
add
jmp
cwde
xchg
xchg
mov
popa
in
xchg
hlt
push
in
xchg
and
call
call
call
je
jmp
inc
int
jecxz
push
je
sub
hlt
push
add
dec
call
call
je
jmp
or
je
ins
xor
loopne
div
imul
ret
lea
mov
call
call
call
call
je
jmp
sar
jne
je
arpl
mov
hlt
adc
and
xchg
test
je
jne
das
jmp
push
into
xchg
call
call
je
jmp
pop
popa
(bad)
mov
push
je
mov
div
loope
jns
lea
call
call
call
je
jmp
aas
not
or
fdivr
je
jne
es
loop
add
call
call
je
jmp
aam
scas
data16
je
out
mov
jne
mov
jmp
pusha
imul
add
call
call
call
call
je
jmp
cmp
cmp
je
scas
mov
xor
hlt
out
pop
(bad)
lea
xchg
not
and
cmp
je
xor
in
add
add
call
call
call
je
jmp
cs
pop
jne
je
sbb
or
ins
pop
push
lea
xchg
test
je
jne
mov
inc
push
xchg
call
call
je
jmp
loop
mov
jne
je
loop
outs
lahf
je
jne
add
fs
call
call
call
je
jmp
xlat
mov
(bad)
je
cs
fisub
jne
push
add
dec
call
call
je
jmp
hlt
aaa
ins
add
je
adc
pop
fdiv
hlt
loopne
jecxz
ret
jmp
(bad)
in
js
repnz
sub
call
call
je
jmp
inc
repz
xlat
jne
je
sbb
jne
(bad)
rcr
add
add
add
add
call
call
je
jmp
ror
or
sbb
push
je
jne
cmp
add
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
ret
and
je
pop
inc
jp
div
repz
repnz
xchg
test
je
jne
call
jmp
sub
add
add
call
je
jmp
mov
push
je
fwait
jg
hlt
stc
pop
mov
add
add
add
call
call
je
jmp
cmp
repnz
push
je
inc
add
hlt
imul
dec
call
call
je
jmp
ins
jne
adc
je
aam
test
je
jne
mov
mov
add
add
add
add
add
add
jmp
mov
push
je
ja
pusha
cmp
hlt
std
sub
mov
xchg
test
je
jne
push
fisttp
mov
add
add
call
je
jmp
add
push
jne
je
es
aam
je
jne
movs
ret
lea
call
call
call
je
jmp
loop
pop
push
je
sub
outs
js
div
push
rol
in
add
dec
call
call
je
jmp
ret
rcl
jne
je
push
lock
das
je
jne
pop
or
cld
ret
mov
add
mov
mov
call
call
call
call
je
jmp
nop
jmp
je
xor
push
je
jne
add
push
lea
xchg
not
and
cmp
je
ds
push
call
call
call
call
je
jmp
jl
icebp
fs
je
hlt
mov
jne
cdq
inc
stos
out
lea
xchg
test
je
jne
mov
mov
and
add
add
call
je
jmp
and
or
scas
or
hlt
imul
outs
lea
call
call
call
je
jmp
push
sbb
xor
cmp
je
jne
scas
adc
pop
add
call
call
je
jmp
stos
sbb
jne
je
xchg
dec
cmp
je
jne
xor
mov
ret
jmp
sbb
gs
pop
mov
call
call
je
jmp
clc
inc
int3
sahf
jne
je
jmp
mov
hlt
lods
imul
add
add
add
add
call
call
je
jmp
inc
leave
into
mov
push
je
adc
cmc
fdiv
hlt
add
ret
add
mov
call
call
call
call
je
jmp
fiadd
addr16
je
out
ds
je
jne
add
xchg
pop
lea
xchg
not
and
cmp
je
arpl
call
call
call
call
je
jmp
xchg
pop
jmp
jne
je
ror
pop
je
jne
mov
inc
int3
lea
xchg
test
je
jne
mov
sub
and
add
add
call
je
jmp
leave
lods
pop
mov
push
je
cmp
and
je
jne
fsub
adc
lea
call
call
call
je
jmp
ins
test
jne
je
jg
lea
div
or
les
add
add
call
je
jmp
js
dec
out
jne
je
int3
fstp
shl
and
sahf
push
ret
jmp
push
mov
rol
add
add
add
jmp
sahf
out
sbb
sub
repz
je
jne
cdq
lds
add
add
add
add
call
call
je
jmp
clc
in
sbb
push
je
mov
jne
push
mov
fsubrp
add
xor
mov
call
call
call
call
je
jmp
scas
mov
je
push
sbb
hlt
mov
(bad)
lea
xchg
not
and
cmp
je
movs
jmp
add
call
call
call
je
jmp
push
sahf
add
jne
je
cmp
jne
in
jb
lea
xchg
test
je
jne
cmp
mov
lea
add
add
add
jmp
das
int3
pop
cwde
jne
je
test
jne
retf
fimul
mov
add
add
call
call
je
jmp
cs
jne
je
(bad)
in
shl
hlt
ror
call
dec
call
call
je
jmp
inc
sti
and
jne
je
jnp
push
jle
div
pop
dec
int
ret
jmp
je
jle
lahf
mov
adc
add
call
call
je
jmp
mov
daa
mov
push
je
xchg
and
test
hlt
gs
and
add
add
add
call
call
je
jmp
sub
test
push
je
push
div
dec
mov
ret
div
mov
mov
add
mov
mov
call
call
call
call
je
jmp
rcl
mov
or
adc
push
mov
cld
xchg
not
and
cmp
je
test
push
call
call
call
call
je
jmp
cmp
adc
je
sub
clc
scas
je
jne
stos
leave
fistp
lea
xchg
test
je
jne
or
inc
sub
and
add
add
call
je
jmp
xchg
push
out
jne
je
push
fdivr
je
jne
fst
scas
and
add
add
call
call
je
jmp
sbb
je
dec
mov
jne
push
daa
mov
dec
call
call
je
jmp
out
adc
jne
je
push
idiv
je
jne
es
in
jmp
fs
push
xchg
ror
nop
xchg
call
call
je
jmp
push
jb
jno
push
je
xor
jne
iret
or
lahf
lea
call
add
call
call
je
jmp
adc
push
je
loopne
pop
test
hlt
retf
xchg
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
inc
inc
jne
je
out
or
je
jne
add
cli
daa
lea
xchg
test
je
jne
add
aam
add
call
call
je
jmp
mov
push
je
add
fcom
je
jne
sub
push
or
fs
call
call
call
je
jmp
push
(bad)
jne
je
add
movs
inc
add
call
call
je
jmp
loopne
cld
scas
jne
je
mov
mov
jbe
mov
mov
add
call
call
call
je
jmp
fdiv
je
rep
retf
div
sbb
pusha
lea
xchg
test
je
jne
or
jns
jle
add
add
add
call
je
jmp
cli
test
or
sbb
sub
hlt
clc
loope
int
fs
call
call
call
je
jmp
xchg
into
sub
jne
je
enter
je
jne
arpl
jne
add
dec
call
call
je
jmp
das
hlt
jp
jne
je
xchg
mov
jne
je
and
add
add
add
add
add
add
jmp
daa
pop
adc
jne
je
out
cmp
push
psrlw
xchg
not
and
cmp
je
push
imul
add
add
add
add
add
jmp
lds
je
xor
in
aaa
je
jne
xor
fs
xchg
test
je
jne
sar
adc
imul
call
call
je
jmp
call
or
inc
jmp
cli
cmp
lea
call
call
call
je
jmp
adc
mov
data16
je
jne
gs
cmp
add
dec
call
call
je
jmp
ds
arpl
push
je
mov
out
push
je
jne
xor
or
sub
dec
xchg
call
call
je
jmp
xchg
je
shl
hlt
xor
scas
jns
fs
call
add
call
call
je
jmp
or
je
push
mov
jne
retw
cli
and
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
aas
pop
or
ret
in
je
jne
outs
mov
or
add
test
je
jne
inc
lds
sub
add
add
add
jmp
out
cmps
movs
jne
je
(bad)
jmp
jne
xlat
stos
call
add
add
add
call
call
je
jmp
mov
push
je
mov
iret
xor
div
xchg
mov
std
add
call
call
je
jmp
push
adc
or
jle
js
div
mov
call
call
call
call
je
jmp
ins
movs
mov
iret
in
in
div
retf
push
lea
xchg
test
je
jne
adc
adc
push
ins
mov
call
call
je
jmp
cwde
mov
or
je
stc
dec
outs
je
jne
movs
or
cmp
add
add
call
call
je
jmp
inc
push
out
push
je
es
nop
sub
hlt
xchg
nop
or
add
call
call
je
jmp
das
stos
push
jl
push
je
push
lods
aaa
push
je
jne
jne
lahf
(bad)
ret
mov
add
mov
mov
add
mov
call
call
call
call
je
jmp
mov
aad
jne
je
rcl
jne
adc
test
add
not
and
cmp
je
ret
call
call
call
call
je
jmp
retf
inc
jne
je
out
das
scas
je
jne
stos
clc
cmp
lea
xchg
test
je
jne
std
mov
(bad)
add
call
call
je
jmp
js
and
push
je
aaa
pusha
fadd
je
jne
jge
xchg
adc
add
add
call
call
je
jmp
dec
sbb
xor
je
sub
pop
push
je
jne
ds
and
call
call
je
jmp
push
les
jne
je
cli
mov
jne
call
mov
fdiv
ins
adc
xchg
call
call
je
jmp
inc
mov
je
scas
fidiv
je
jne
ror
lea
call
add
call
call
je
jmp
ja
repnz
jne
je
cmc
lods
fidivr
div
xchg
jbe
add
push
push
call
push
mov
call
pop
mov
mov
pop
pop
mov
push
call
call
call
call
je
jmp
ffree
popf
xchg
jne
je
mov
div
sub
cld
xchg
not
and
cmp
je
sub
call
call
call
call
je
jmp
sbb
je
pop
push
cmp
je
jne
pop
sub
lea
xchg
test
je
jne
outs
inc
pop
ss
inc
push
out
xchg
call
call
je
jmp
xchg
fist
cs
je
retf
daa
je
jne
test
and
call
call
call
je
jmp
mov
je
(bad)
scas
dec
ins
je
jne
push
sbb
and
call
call
je
jmp
fstp
add
jne
je
pop
ins
jo
je
jne
rcl
or
movs
xchg
call
call
je
jmp
jecxz
push
push
jne
je
add
sbb
je
jne
sahf
pop
clc
cdq
lea
call
add
call
call
je
jmp
imul
or
loopne
pop
je
jne
test
ret
popf
and
pushf
pop
mov
mov
call
call
call
call
je
jmp
data16
jl
push
je
enter
je
jne
dec
mov
and
xchg
not
and
cmp
je
jle
xchg
call
call
call
call
je
jmp
into
popa
shl
je
sbb
div
mov
and
xchg
test
je
jne
add
in
xor
add
add
add
jmp
adc
je
jne
je
jecxz
ficomp
mov
fs
call
call
call
je
jmp
sub
retf
push
je
cmp
jne
xchg
call
and
call
call
je
jmp
push
mov
je
test
div
stos
jp
std
ret
jmp
test
sbb
(bad)
int
sub
add
add
add
jmp
push
clc
jl
mov
div
loope
dec
nop
lea
call
add
call
call
je
jmp
push
jbe
sbb
push
je
cli
mov
jne
or
and
add
sub
dec
lea
call
call
call
call
je
jmp
(bad)
add
jne
je
gs
je
jne
sahf
sbb
xchg
test
je
jne
imul
xor
call
call
je
jmp
and
jo
jne
je
mov
hlt
neg
pop
repz
call
call
call
je
jmp
leave
mov
xor
je
adc
div
inc
pop
pop
add
call
call
je
jmp
or
repnz
jne
je
retfw
je
jne
das
bound
mov
add
call
call
call
je
jmp
sahf
es
jne
je
cmp
jne
cli
retf
lea
xchg
test
je
jne
lods
js
stos
cdq
fsubr
xchg
call
call
je
jmp
arpl
pop
cmp
das
mov
jne
pop
retf
lea
call
call
call
je
jmp
adc
scas
dec
je
jne
in
fsubrp
into
add
call
call
je
jmp
imul
je
faddp
test
inc
fcomp
pop
ret
jmp
pop
mov
push
cmc
jns
adc
aas
jmp
pushf
in
mov
lods
pop
inc
call
call
call
call
je
jmp
and
add
je
jge
xor
je
jne
scas
sbb
enter
cld
xchg
not
and
cmp
je
retf
mov
call
call
call
call
je
jmp
fwait
stc
push
fidiv
je
cmps
jne
cs
jne
test
push
mov
xchg
test
je
jne
mov
shr
xchg
call
call
je
jmp
xor
push
je
mov
div
lods
or
add
add
add
call
call
je
jmp
jg
nop
dec
jne
je
ficomp
pcmpeqb
jne
scas
int3
cs
dec
call
call
je
jmp
jmp
push
daa
jne
je
xchg
sbb
mov
div
adc
pop
ret
jmp
sar
push
or
inc
mov
add
call
call
je
jmp
fisubr
cli
jne
je
xchg
lock
iret
je
jne
push
pop
arpl
call
add
call
call
je
jmp
in
dec
add
je
mov
div
dec
jnp
xchg
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
mov
push
je
mov
das
(bad)
je
jne
shl
lea
xchg
test
je
jne
jne
lea
jmp
sbb
add
add
add
jmp
mov
push
je
sbb
out
div
cmp
xchg
movs
lea
call
call
call
je
jmp
xchg
xor
jne
je
jmp
div
movs
(bad)
(bad)
call
call
je
jmp
jae
imul
push
je
xor
popa
or
adc
fcmovnb
call
call
call
call
je
jmp
lock
or
je
adc
shl
je
jne
call
fs
xchg
test
je
jne
push
inc
fimul
xchg
call
call
je
jmp
(bad)
inc
(bad)
dec
jne
je
dec
pop
dec
fdiv
hlt
and
add
add
add
call
call
je
jmp
out
ss
mov
shl
retf
div
cmp
and
call
call
je
jmp
sbb
sub
inc
push
je
jne
dec
push
ds
ret
mov
add
mov
mov
add
mov
call
push
mov
call
pop
mov
mov
call
call
call
call
je
jmp
lds
je
xor
enter
hlt
fcomip
add
lea
xchg
not
and
cmp
je
(bad)
(bad)
add
add
add
call
call
call
je
jmp
push
dec
mov
jne
je
inc
xchg
je
jne
push
mov
repnz
xchg
test
je
jne
retf
sub
aam
xchg
call
call
je
jmp
xchg
mov
jne
je
into
mov
adc
hlt
shl
add
add
add
call
call
je
jmp
shr
std
jne
je
sbb
jne
pop
pop
std
mov
call
call
je
jmp
mov
je
jne
je
mov
div
pop
outs
sub
mov
and
add
call
call
je
jmp
enter
jne
je
ret
lods
mov
cmps
lea
pop
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
xchg
das
xchg
push
jmp
ret
mov
push
call
call
call
call
je
jmp
add
inc
jne
je
mov
jne
mov
mov
lea
xchg
not
and
cmp
je
repnz
loop
add
add
call
call
call
je
jmp
inc
movs
out
fidiv
je
es
ss
div
push
xchg
std
lea
add
test
je
jne
repz
fidiv
add
call
call
je
jmp
jle
and
data16
je
jne
sti
cmc
cmp
call
call
call
je
jmp
daa
mov
je
push
(bad)
and
hlt
movs
retf
add
call
call
je
jmp
push
push
push
xor
je
inc
enter
div
xlat
cmp
or
outs
icebp
popf
mov
push
xchg
call
call
je
jmp
stc
push
pop
cmp
sbb
jne
sbb
fs
call
add
call
call
je
jmp
mov
push
je
jl
add
je
jne
push
push
dec
iret
jmp
ret
popf
and
pushf
pop
mov
mov
call
call
call
call
je
jmp
pop
and
jne
je
enter
je
jne
cmp
fs
xchg
not
and
cmp
je
push
sub
add
add
add
add
add
jmp
add
adc
je
push
sub
je
jne
xchg
in
arpl
fs
xchg
test
je
jne
pop
pop
sbb
int
xchg
call
call
je
jmp
clc
test
std
jne
je
xlat
jnp
(bad)
je
jne
mov
lea
call
call
call
je
jmp
sbb
je
and
hlt
lock
dec
call
call
je
jmp
and
push
je
mov
jne
jnp
imul
pusha
and
xchg
call
call
je
jmp
mov
std
cdq
jne
je
ds
xchg
push
je
jne
test
add
add
add
add
call
call
je
jmp
dec
adc
jne
je
jb
retf
div
fst
sub
add
sub
dec
lea
call
call
call
call
je
jmp
lods
push
fsub
xchg
dec
pop
mov
hlt
icebp
pop
jmp
add
test
je
jne
(bad)
jnp
int
neg
xchg
call
call
je
jmp
push
push
je
xchg
jmp
enter
hlt
(bad)
jb
les
add
add
call
call
je
jmp
(bad)
jne
je
aam
cmc
and
div
(bad)
lods
cdq
fiadd
add
add
call
je
jmp
cmp
pop
inc
jne
je
pushf
ins
pop
mov
div
cs
jge
lea
mov
call
call
call
call
je
jmp
pop
test
or
les
je
jne
adc
fs
xchg
test
je
jne
or
aam
add
mov
add
call
call
je
jmp
ins
dec
push
inc
jne
je
mov
fstp
je
jne
inc
push
push
mov
fs
call
call
call
je
jmp
and
push
je
ror
sahf
shl
hlt
test
mov
add
call
call
je
jmp
in
loopne
jne
je
and
loope
je
jne
dec
mov
in
jmp
(bad)
add
add
call
call
call
je
jmp
and
sbb
je
leave
in
mov
add
fisttp
add
not
and
cmp
je
and
add
add
add
add
add
add
jmp
test
jne
je
add
jne
dec
(bad)
ja
lea
xchg
test
je
jne
dec
jnp
(bad)
test
call
call
je
jmp
sbb
push
je
and
div
add
mov
add
add
add
call
call
je
jmp
pusha
and
jne
je
and
fs
div
push
lea
dec
call
call
je
jmp
fmul
shl
je
sbb
fsubrp
je
jne
adc
push
mov
add
lock
add
add
call
je
jmp
pop
mov
add
je
sub
rol
div
lods
xor
lea
call
add
call
call
je
jmp
movs
xchg
mov
jne
je
xchg
je
jne
in
out
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
sub
push
je
xchg
mov
jne
dec
dec
mov
cld
xchg
test
je
jne
call
sub
xchg
call
call
je
jmp
mov
or
call
fcomp
and
call
call
call
je
jmp
jmp
add
je
(bad)
xchg
or
je
jne
cli
ror
dec
call
call
je
jmp
nop
mov
je
(bad)
mov
adc
hlt
scas
fdivr
ret
call
call
call
call
je
jmp
jns
into
xchg
jne
je
scas
leave
cmp
je
jne
mov
rcl
add
test
je
jne
xchg
shr
add
adc
xchg
call
call
je
jmp
mov
push
je
je
(bad)
xor
div
rol
fs
call
call
call
je
jmp
cld
fwait
dec
leave
jne
je
sbb
data16
jne
or
dec
call
call
je
jmp
add
jne
je
add
sbb
jne
or
pop
mov
xchg
add
add
call
call
call
call
je
jmp
mov
xchg
mov
je
outs
pop
pop
das
je
jne
hlt
js
pop
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
xchg
int
jne
je
rcl
mov
imul
pop
lea
xchg
test
je
jne
pop
push
cmc
cmp
xchg
call
call
je
jmp
inc
inc
mov
or
imul
jno
fs
call
call
call
je
jmp
fadd
je
(bad)
mov
je
jne
jns
or
add
call
call
je
jmp
outs
or
je
aaa
adc
call
cmp
je
jb
inc
xor
xchg
call
call
je
jmp
bsf
jne
je
(bad)
mov
mov
in
in
out
fmul
add
add
add
call
call
je
jmp
test
je
js
movs
aaa
je
jne
ins
jno
mov
rol
call
call
call
call
je
jmp
sbb
pop
dec
jne
je
in
dec
sbb
je
jne
enter
lea
xchg
not
and
cmp
je
sub
call
call
call
call
je
jmp
bnd
fidiv
je
fwait
test
push
je
jne
jne
push
jnp
fs
xchg
test
je
jne
push
das
loopne
js
or
xchg
call
call
je
jmp
mov
fwait
dec
jne
je
shr
jne
cs
out
fs
call
call
call
je
jmp
test
sub
jne
je
rcr
hlt
cld
cs
dec
call
call
je
jmp
xchg
xchg
mov
push
je
sbb
jne
sub
push
jmp
sub
xor
sub
add
add
add
jmp
stos
dec
jbe
jne
je
xchg
in
scas
lods
je
jne
fcomip
push
cmp
fs
call
add
call
call
je
jmp
push
xlat
adc
jne
je
ins
pop
and
je
jne
jmp
sbb
call
push
mov
call
pop
mov
mov
mov
call
call
call
call
je
jmp
retf
inc
jne
je
and
push
jnp
div
mov
fs
xchg
not
and
cmp
je
pop
movs
jno
add
add
call
call
call
je
jmp
mov
mov
jne
je
cmc
dec
or
hlt
mov
sub
cld
xchg
test
je
jne
and
pop
adc
stos
xchg
call
call
je
jmp
inc
movs
sub
scas
aas
xchg
je
jne
aaa
pop
out
lea
call
call
call
je
jmp
sub
pushf
cmp
push
je
jne
mov
hlt
jle
(bad)
repnz
call
call
je
jmp
mov
push
je
addr16
je
div
(bad)
cmp
adc
inc
jmp
dec
xchg
call
call
je
jmp
jns
into
adc
je
mov
div
pop
dec
stos
jb
fs
call
add
call
call
je
jmp
es
jnp
push
je
dec
not
sbb
div
pop
sub
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
fstp
je
cmp
mov
je
jne
or
and
xchg
test
je
jne
data16
push
mov
add
call
call
je
jmp
fwait
mov
ins
jne
je
and
nop
lods
je
jne
inc
mov
and
call
call
call
je
jmp
jp
in
jne
je
loopne
mov
je
jne
inc
sbb
jne
add
dec
call
call
je
jmp
test
sbb
jne
je
repz
js
je
jne
jmp
lea
mov
call
call
call
call
je
jmp
pop
add
or
ss
sti
je
jne
das
xchg
test
xchg
test
je
jne
rcr
out
xchg
mov
call
call
je
jmp
push
jmp
jnp
mov
hlt
test
mov
call
call
call
je
jmp
push
mov
mov
dec
jecxz
mov
arpl
and
call
call
je
jmp
cmc
mov
je
push
fild
mov
inc
jmp
mov
jmp
mov
shl
fwait
dec
es
adc
or
call
call
call
call
je
jmp
dec
jg
push
jne
je
inc
ss
hlt
popa
stc
leave
mov
xchg
not
and
cmp
je
cmp
call
call
call
call
je
jmp
inc
mov
jne
je
pop
and
cld
je
jne
xchg
and
nop
lea
xchg
test
je
jne
(bad)
xchg
pop
xrelease
enter
call
call
je
jmp
aad
jnp
jne
je
ds
sbb
hlt
jge
mov
add
add
add
call
call
je
jmp
mov
in
jne
je
cld
mov
jne
mov
repz
add
call
call
je
jmp
add
mov
jne
je
sub
or
inc
ja
xchg
ret
jmp
xchg
xchg
cli
xchg
or
xchg
call
call
je
jmp
mov
test
or
inc
int
je
jne
imul
mov
call
add
call
call
je
jmp
cmp
mov
jne
je
push
in
dec
jbe
div
dec
inc
mov
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
ret
add
fldcw
jmp
ins
sub
and
xchg
test
je
jne
xor
lea
jmp
xor
add
add
add
jmp
push
push
mov
jne
je
scas
sub
hlt
or
lea
call
call
call
je
jmp
jmp
or
sbb
je
jne
xor
pop
pop
add
call
call
je
jmp
iret
push
mov
jne
je
jmp
hlt
shl
ret
call
call
call
call
je
jmp
inc
jne
cwde
jne
je
enter
je
jne
sar
and
xchg
test
je
jne
dec
mov
jle
xchg
call
call
je
jmp
mov
push
je
xor
div
sub
repz
add
add
call
call
je
jmp
inc
(bad)
mov
jne
je
mov
mov
hlt
icebp
jl
mov
call
je
jmp
or
xchg
jne
je
jecxz
shr
cmc
rcr
mov
add
call
call
call
call
call
je
jmp
push
mov
je
rol
ins
mov
jbe
fiadd
fs
xchg
not
and
cmp
je
or
add
add
add
add
add
add
jmp
movs
adc
je
sub
bound
je
jne
cmp
fs
xchg
test
je
jne
scas
les
jge
add
call
call
je
jmp
mov
push
je
rcr
jne
out
xchg
add
add
call
call
je
jmp
cdq
add
jne
je
in
jnp
cmps
je
jne
mov
loop
add
call
call
je
jmp
sub
sbb
je
dec
in
nop
jb
div
and
(bad)
mov
jmp
xlat
mov
idiv
jns
xchg
call
call
je
jmp
sbb
mov
or
mov
jne
bound
push
lea
call
add
call
call
je
jmp
add
push
je
(bad)
xchg
je
jne
aas
sbb
fwait
jmp
ret
mov
mov
call
call
call
call
je
jmp
sbb
pushw
je
push
fwait
into
mov
xchg
popa
sub
cld
xchg
not
and
cmp
je
and
dec
call
call
call
call
je
jmp
cvtpi2ps
jne
je
ret
xchg
je
jne
daa
cwde
cwde
ror
add
test
je
jne
jmp
xchg
test
add
stos
xchg
call
call
je
jmp
out
mov
xlat
outs
pusha
nop
je
jne
imul
add
call
call
je
jmp
repz
mov
jne
je
nop
je
ja
div
shr
lahf
add
call
call
je
jmp
add
push
je
test
pushf
out
div
ret
lods
pop
inc
ret
jmp
cmovp
stos
push
cmps
xchg
call
call
je
jmp
add
jmp
fnstenv
je
jne
(bad)
xor
lea
call
add
call
call
je
jmp
pop
cli
shr
pusha
pop
mov
or
jmp
ret
push
mov
call
pop
call
call
call
call
je
jmp
inc
fsubp
jge
push
je
sbb
lock
hlt
ret
jecxz
fs
xchg
not
and
cmp
je
pop
cmp
call
call
call
call
je
jmp
pop
shl
jne
je
fld
jne
and
and
xchg
test
je
jne
fnstsw
inc
add
add
add
jmp
push
sub
je
sbb
hlt
inc
push
jae
fs
call
call
call
je
jmp
sbb
pop
jg
push
je
sahf
(bad)
push
into
je
jne
adc
add
dec
call
call
je
jmp
jmp
push
je
mov
div
test
addr16
jmp
sti
jns
inc
in
fwait
adc
add
add
add
jmp
cdq
mov
es
je
stos
fmul
pop
je
jne
xchg
ret
imul
add
add
add
call
call
je
jmp
mov
je
movs
in
mov
sbb
test
mov
call
call
call
call
call
je
jmp
fild
je
outs
add
je
jne
(bad)
mov
and
xchg
not
and
cmp
je
stos
pop
push
call
call
call
call
je
jmp
sti
push
jecxz
jne
je
mov
ret
adc
hlt
cmc
or
adc
add
test
je
jne
not
outs
(bad)
pop
and
add
add
add
jmp
push
mov
or
jb
xchg
je
jne
mov
ror
add
add
call
call
je
jmp
icebp
in
test
je
nop
sub
jne
les
jge
add
call
call
je
jmp
leave
stc
mov
fdiv
mov
je
jne
lahf
loop
(bad)
mov
and
xor
add
add
add
jmp
xchg
ins
xor
cli
jg
scas
je
jne
jmp
and
call
add
call
call
je
jmp
(bad)
mov
je
sbb
div
pushf
sbb
(bad)
pop
add
add
add
add
call
call
call
je
jmp
and
or
out
test
div
add
fs
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
sbb
push
je
iret
pop
cmp
div
call
fs
xchg
test
je
jne
xlat
fcomi
fadd
and
add
add
call
je
jmp
xchg
xchg
push
je
xor
jne
in
ins
je
fs
call
call
call
je
jmp
aam
xchg
dec
jne
je
mov
pop
sub
hlt
into
mov
add
call
call
je
jmp
sbb
into
or
int3
pslld
std
jge
pop
ret
jmp
lahf
fmul
mov
push
ret
and
add
add
call
je
jmp
mov
push
je
jne
adc
hlt
rol
lea
call
add
call
call
je
jmp
fisub
fwait
(bad)
jne
je
in
pop
daa
je
jne
outs
xchg
arpl
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
mov
je
or
outs
enter
hlt
sar
cld
xchg
test
je
jne
jae
ret
mov
xchg
call
call
je
jmp
fadd
jmp
or
rcr
in
div
push
xchg
ins
xchg
add
add
call
call
je
jmp
in
jmp
or
loope
lea
hlt
(bad)
scas
addr16
add
call
call
je
jmp
sbb
je
push
div
jnp
pusha
mov
mov
call
call
call
call
je
jmp
sub
je
adc
jne
mov
call
add
test
je
jne
loopne
enter
inc
adc
add
add
add
jmp
int3
sbb
into
jne
je
out
repz
je
jne
and
test
add
add
add
call
call
je
jmp
and
push
je
adc
ror
jne
imul
dec
call
call
je
jmp
xor
jne
push
je
ja
add
div
mul
stos
pop
ret
jmp
and
mov
mov
out
fild
call
call
call
call
je
jmp
ret
xor
push
je
imul
je
jne
lods
imul
not
and
cmp
je
repnz
call
call
call
call
je
jmp
jmp
push
je
test
div
jmp
cld
xchg
test
je
jne
pop
push
(bad)
js
sub
xchg
call
call
je
jmp
fidiv
and
je
fidiv
jne
mov
fs
call
call
call
je
jmp
or
sub
jne
je
je
mov
hlt
frstor
inc
add
add
call
je
jmp
add
jne
je
xor
jne
dec
imul
mov
cmps
sbb
add
add
call
je
jmp
popa
push
xor
mov
sbb
je
jne
add
jge
lea
call
add
call
call
je
jmp
xchg
loopne
cs
je
scas
fnsave
shl
hlt
mov
sahf
inc
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
dec
add
xor
popf
rcr
cmc
je
jne
ins
push
mov
xchg
test
je
jne
out
ret
mov
sub
xchg
call
call
je
jmp
cs
pcmpeqw
je
push
push
leave
int
div
xchg
sub
lea
call
call
call
je
jmp
or
enter
je
pop
sti
and
jne
pop
jge
inc
add
call
call
je
jmp
jns
add
jne
je
ret
scas
jmp
hlt
call
add
add
add
add
add
add
jmp
push
xchg
add
jne
je
aas
sub
div
adc
and
xchg
test
je
jne
fs
push
xchg
pop
sti
and
add
call
call
je
jmp
into
iret
jle
jne
je
ins
iret
sub
div
xor
jnp
fs
call
call
call
je
jmp
mov
outs
loopne
push
je
dec
aaa
pushf
repz
jne
mov
leave
add
call
call
je
jmp
cmp
dec
scas
jne
je
mov
je
jne
pop
xor
cmc
ret
mov
add
call
call
call
call
call
je
jmp
pop
pop
jb
jne
je
adc
push
je
jne
sub
cld
xchg
not
and
cmp
je
jmp
add
add
add
add
add
add
jmp
in
push
and
jne
je
jge
push
es
jne
push
jmp
and
xchg
test
je
jne
jae
jb
mov
push
movs
xchg
call
call
je
jmp
imul
stos
jne
je
jns
inc
lea
hlt
mov
and
call
call
call
je
jmp
gs
cmps
jne
je
push
cmp
je
jne
or
inc
mov
call
call
je
jmp
jno
adc
push
je
push
mov
jne
mov
les
ret
jmp
add
add
xchg
call
call
je
jmp
and
mov
mov
jne
pushf
je
xchg
add
add
add
call
call
je
jmp
or
call
mov
hlt
jle
sub
jmp
ret
mov
mov
call
call
call
call
je
jmp
dec
test
arpl
je
push
cmps
sub
adc
fs
xchg
not
and
cmp
je
jne
ss
call
call
call
je
jmp
mov
push
je
pop
or
div
mov
adc
lea
xchg
test
je
jne
aad
rol
cmps
sbb
jmp
add
call
call
je
jmp
js
push
les
je
adc
hlt
xlat
pop
pop
cmp
add
add
call
call
je
jmp
cdq
data16
jne
je
imul
jne
and
dec
add
call
call
je
jmp
enter
jne
je
mov
div
xor
or
ficomp
std
xchg
call
call
je
jmp
jle
test
jne
je
dec
cmp
jne
push
pop
cmps
clc
lea
call
add
call
call
je
jmp
xor
mov
or
pop
push
mov
jp
pop
test
add
push
mov
call
pop
call
call
call
call
je
jmp
cmp
or
and
jne
shl
add
add
not
and
cmp
je
mov
fld1
add
add
call
call
call
je
jmp
bound
je
inc
repz
hlt
xchg
outs
lea
xchg
test
je
jne
pusha
cmp
push
xchg
call
call
je
jmp
add
lahf
push
je
(bad)
js
je
jne
inc
test
sahf
lea
call
call
call
je
jmp
push
cmp
cli
clc
pop
je
jne
js
sbb
add
call
call
je
jmp
push
push
je
jbe
sub
hlt
dec
test
bnd
jmp
or
shl
and
add
add
call
je
jmp
mov
mov
(bad)
jne
sbb
lea
call
add
call
call
je
jmp
ret
mov
je
ss
mov
hlt
int
and
(bad)
(bad)
(bad)
(bad)
call
mov
call
call
call
call
je
jmp
adc
push
je
mov
div
dec
movs
adc
xchg
not
and
cmp
je
cmp
in
call
call
call
call
je
jmp
push
xor
xchg
je
jmp
hlt
or
ror
add
test
je
jne
xor
xchg
xchg
call
call
je
jmp
rol
sub
push
je
fdiv
cmps
aad
div
loop
mov
add
add
add
call
call
je
jmp
aas
or
or
xchg
out
jg
div
push
jmp
and
call
call
je
jmp
dec
nop
jmp
or
call
jne
int3
mov
aam
jmp
sbb
xlat
dec
pop
inc
fist
xchg
call
call
je
jmp
mov
push
out
push
je
jmp
div
xchg
out
jmp
add
add
add
call
call
je
jmp
pop
loope
push
jne
je
xchg
mov
jne
sbb
xchg
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
pop
sahf
mov
or
add
retf
jne
aam
xchg
xchg
add
test
je
jne
sti
adc
mul
add
call
call
je
jmp
or
je
mov
div
pop
arpl
stos
lea
call
call
call
je
jmp
leave
das
addr16
push
je
outs
xchg
jp
je
jne
leave
(bad)
jp
add
dec
call
call
je
jmp
dec
test
jne
je
je
ror
div
or
mov
add
call
call
call
je
jmp
enter
jne
je
sub
div
mov
xchg
mov
fs
xchg
test
je
jne
push
or
mov
add
add
add
jmp
mov
jne
je
sub
jnp
div
cli
cmc
dec
push
call
call
call
je
jmp
out
jmp
adc
push
shl
call
call
je
jmp
sti
push
call
rcl
je
jne
pop
push
pop
ret
jmp
icebp
sub
and
mov
xlat
jmp
popf
mov
call
call
call
call
je
jmp
jo
mov
or
xor
push
je
jne
and
adc
cld
xchg
not
and
cmp
je
sub
jmp
add
add
call
call
call
je
jmp
mov
push
je
sub
div
div
test
fs
xchg
test
je
jne
ror
cdq
fwait
jg
add
add
call
call
je
jmp
inc
sbb
xor
je
cmp
hlt
pop
sub
lea
call
call
call
je
jmp
sub
adc
or
loopne
cmp
hlt
enter
add
call
call
je
jmp
add
fucom
jne
je
jbe
cmp
div
add
jmp
lods
nop
mov
xchg
call
call
je
jmp
into
cs
jne
je
or
sub
popf
enter
fs
call
add
call
call
je
jmp
jnp
xchg
and
je
shl
mov
in
jl
mov
mov
lea
jmp
call
call
call
call
je
jmp
inc
jmp
je
xor
mov
hlt
pop
jg
or
add
test
je
jne
pop
cmps
lea
jmp
xacquire
call
call
je
jmp
(bad)
mov
es
je
and
div
aam
iret
stc
lea
call
call
call
je
jmp
or
xor
jne
je
jno
pavgw
hlt
int
mov
dec
call
call
je
jmp
scas
push
pusha
jne
je
jl
pop
mov
mov
call
call
call
call
je
jmp
xchg
jmp
call
mov
sbb
hlt
xchg
dec
pop
lea
xchg
test
je
jne
sub
jecxz
clc
pop
test
add
add
add
jmp
jne
inc
pop
jne
je
mov
mov
div
imul
lea
call
call
call
je
jmp
ret
mov
(bad)
je
lds
cdq
je
jne
sub
and
call
call
je
jmp
outs
mov
or
push
je
ins
push
arpl
je
jne
or
dec
mov
mov
add
mov
mov
push
mov
call
pop
mov
xor
inc
test
je
mov
and
test
je
mov
mov
mov
ror
dec
jne
ror
mov
mov
mov
mov
call
call
call
call
je
jmp
aas
xchg
and
or
and
hlt
mov
fs
xchg
not
and
cmp
je
adc
call
call
call
call
je
jmp
and
push
int
push
je
push
div
or
or
xchg
test
je
jne
jmp
je
add
call
call
je
jmp
scas
cmp
or
and
je
jne
sbb
jmp
add
add
call
call
je
jmp
push
in
dec
ret
jne
je
iret
mov
inc
je
jne
jl
cwde
movs
add
call
call
je
jmp
cmp
je
and
jne
or
xor
ret
jmp
sbb
call
call
je
jmp
in
adc
enter
div
adc
dec
jae
fs
call
add
call
call
je
jmp
sub
jmp
or
mov
stc
je
jne
xor
ret
sub
dec
lea
call
call
call
call
je
jmp
xchg
je
sub
hlt
jb
push
or
and
shl
jecxz
stc
xor
mov
add
add
call
je
jmp
loopne
push
fnstenv
je
and
je
jne
inc
push
jne
lea
call
call
call
je
jmp
stos
cld
outs
shl
je
stos
mov
div
cmps
push
(bad)
fild
add
add
call
je
jmp
loopne
ja
jne
je
inc
out
push
shl
hlt
test
ret
lea
mov
call
call
call
call
je
jmp
ins
mov
cmp
jne
out
loopne
div
xchg
dec
dec
ror
and
shl
push
pop
in
sub
pause
xchg
call
call
je
jmp
or
pop
int
push
je
das
pop
sub
div
inc
add
lea
call
call
call
je
jmp
cdq
(bad)
jne
je
in
sub
hlt
jmp
dec
call
call
je
jmp
stos
cmc
fidiv
test
sbb
je
jne
mov
cmovle
jmp
fcmovnb
std
cmp
push
ss
ficom
add
add
call
call
call
je
jmp
adc
push
je
jge
xchg
mov
loop
cwde
popa
lea
xchg
not
and
cmp
je
sub
add
add
add
add
add
add
jmp
stc
ins
repnz
je
lods
ja
and
hlt
ins
sar
fmul
add
test
je
jne
(bad)
and
call
call
call
je
jmp
call
or
popa
sub
je
jne
test
fs
call
call
call
je
jmp
sub
sbb
jnp
mov
je
jne
or
or
call
call
je
jmp
mov
push
je
cwde
dec
adc
inc
cmp
jmp
sar
jnp
ficomp
and
add
add
call
je
jmp
setg
xor
push
je
dec
xchg
sub
hlt
xchg
stc
retf
test
call
add
call
call
je
jmp
ret
bnd
je
sti
sahf
lods
or
div
cld
stc
leave
jae
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
(bad)
js
nop
jne
je
out
out
bnd
jne
or
fisttp
add
test
je
jne
adc
lea
jmp
mov
add
call
call
je
jmp
(bad)
ins
adc
xchg
push
dec
je
jne
pop
sub
add
add
add
call
call
je
jmp
mov
push
je
test
nop
je
jne
das
lods
push
imul
add
add
add
jmp
and
je
movs
test
jne
xchg
add
dec
ret
call
call
call
call
je
jmp
push
push
jne
je
je
xchg
mov
div
pusha
out
lea
cld
xchg
test
je
jne
add
cmp
xchg
call
call
je
jmp
ret
lock
cdq
(bad)
in
hlt
je
jne
loope
cmp
lea
call
call
call
je
jmp
pop
ja
sbb
push
je
ret
data16
jne
dec
repnz
add
call
call
je
jmp
jge
push
inc
jne
je
adc
loope
je
jne
pop
test
ffreep
mov
add
mov
mov
push
mov
call
pop
mov
xor
inc
test
je
mov
and
test
je
mov
mov
mov
ror
dec
jne
ror
mov
mov
mov
mov
call
call
call
call
je
jmp
sar
add
push
je
imul
jne
popa
sub
lea
xchg
not
and
cmp
je
into
call
call
call
call
je
jmp
leave
jae
lods
jne
je
adc
out
div
sbb
jae
lea
xchg
test
je
jne
push
jle
push
cmp
fld
add
add
add
jmp
xchg
mov
fidiv
je
stos
test
mov
hlt
jmp
js
call
call
call
je
jmp
adc
ss
je
ins
js
mov
hlt
aam
cmp
add
call
call
je
jmp
popf
cmps
stos
sub
je
cmp
xchg
je
jne
(bad)
dec
retf
jmp
push
into
cs
inc
pop
cmps
xchg
call
call
je
jmp
cmp
je
add
ds
adc
inc
jb
fs
call
add
call
call
je
jmp
add
hlt
jne
je
(bad)
mov
jne
leave
mov
ret
sub
dec
lea
call
call
call
call
je
jmp
push
inc
push
xchg
je
std
mov
jne
xchg
jge
xchg
lea
xchg
test
je
jne
std
mov
dec
test
xchg
call
call
je
jmp
jno
shr
jne
je
fadd
mov
je
jne
ret
test
add
add
add
call
call
je
jmp
pop
out
adc
jne
je
mov
div
cmp
add
dec
call
call
je
jmp
cmp
je
retf
push
rcr
jne
push
scas
aaa
xchg
ret
lea
mov
call
call
call
call
je
jmp
int3
mov
je
(bad)
mov
je
jne
or
pop
push
lea
xchg
test
je
jne
xchg
retf
inc
push
fadd
and
add
add
call
je
jmp
mov
push
je
xchg
push
add
hlt
pop
push
pop
std
lea
call
call
call
je
jmp
add
push
je
cmp
je
jne
adc
pop
or
add
add
call
je
jmp
out
jne
inc
jne
je
sbb
jne
leave
xchg
adc
ret
jmp
call
call
call
call
je
jmp
xor
or
cmps
lods
sub
hlt
das
push
sub
and
xchg
not
and
cmp
je
or
call
call
call
call
je
jmp
and
sub
inc
out
jl
div
loopne
and
lea
xchg
test
je
jne
ins
fsubr
cmp
and
add
add
call
je
jmp
shl
or
repz
clc
je
jne
mov
fs
call
call
call
je
jmp
(bad)
mov
jl
push
je
add
jne
jmp
and
call
call
je
jmp
jmp
or
jae
into
je
jne
sti
xlat
xchg
jmp
icebp
stc
push
xchg
retf
loope
add
call
call
je
jmp
xor
je
cmp
leave
je
jne
das
adc
add
add
add
add
call
call
je
jmp
bound
or
enter
div
cmp
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
sbb
push
je
cli
xchg
(bad)
in
je
jne
sti
mov
or
je
jne
adc
jmp
or
add
add
call
je
jmp
pop
je
movs
jne
je
xchg
sbb
mov
push
shl
jge
fs
call
call
call
je
jmp
fnsave
add
movs
sub
jne
rcl
and
call
call
je
jmp
cli
sti
or
(bad)
fst
div
push
jl
ret
call
call
call
call
je
jmp
cmps
pop
xor
je
jmp
jno
je
jne
adc
push
lea
xchg
test
je
jne
fldl2t
and
add
call
call
je
jmp
jae
int
jne
je
mov
mov
pop
pop
xor
fs
call
call
call
je
jmp
xor
push
je
and
imul
popf
pop
popa
add
add
add
call
je
jmp
cmps
sbb
or
or
jp
div
mov
mov
add
mov
mov
push
mov
call
pop
mov
xor
inc
test
je
mov
and
test
je
mov
mov
mov
ror
dec
jne
ror
mov
mov
mov
mov
call
call
call
call
je
jmp
xchg
sti
test
push
je
lahf
push
sbb
hlt
movs
dec
jb
fs
xchg
not
and
cmp
je
pop
push
js
add
add
call
call
call
je
jmp
pusha
arpl
out
push
je
adc
div
jle
test
lea
xchg
test
je
jne
pop
inc
adc
jp
add
call
call
je
jmp
or
je
movs
popa
xor
hlt
cmp
pop
inc
lea
call
call
call
je
jmp
pop
dec
scas
xor
je
sbb
cld
cmp
hlt
fild
add
dec
call
call
je
jmp
out
sar
push
je
sti
fbstp
hlt
std
test
xor
iret
jo
jbe
push
sbb
add
add
call
je
jmp
outs
inc
pop
imul
cmp
je
jne
add
fs
call
add
call
call
je
jmp
je
mov
rcl
hlt
das
inc
loopne
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
mov
push
je
mov
arpl
xchg
sub
and
xchg
test
je
jne
and
adc
xchg
call
call
je
jmp
inc
dec
cmp
or
cs
je
jne
es
or
lea
call
call
call
je
jmp
cmp
add
jnp
repnz
loopne
xor
call
call
je
jmp
das
fiadd
jne
je
jns
push
je
jne
jecxz
popf
test
mov
call
call
call
call
je
jmp
lods
fldenv
or
mov
jne
call
cld
xchg
test
je
jne
push
cs
cdq
push
jge
sub
add
add
add
jmp
dec
(bad)
cdq
cmps
jne
je
pusha
inc
dec
cmp
hlt
aad
je
lea
call
call
call
je
jmp
cmp
or
cmp
enter
hlt
retf
jno
add
dec
call
call
je
jmp
rcr
or
mov
mov
or
(bad)
ret
jmp
sbb
mov
mov
add
add
add
add
add
jmp
adc
add
jne
je
cs
cwde
je
jne
popa
ficom
lea
xchg
not
and
cmp
je
xor
call
call
call
call
je
jmp
jge
shl
jne
je
pop
aad
mov
div
jle
sbb
cld
xchg
test
je
jne
(bad)
cmps
iret
jbe
in
xchg
call
call
je
jmp
aas
or
mov
push
je
cmp
mov
hlt
add
and
call
call
call
je
jmp
les
je
ror
sub
hlt
or
and
call
call
je
jmp
mov
je
(bad)
and
xor
hlt
jge
sbb
ds
lds
pop
xchg
call
call
je
jmp
outs
fucomp
daa
jne
je
icebp
add
hlt
psubw
mov
add
add
add
call
call
je
jmp
jno
dec
leave
jne
je
call
hlt
sbb
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
add
hlt
adc
je
mov
div
mov
fwait
lea
xchg
test
je
jne
and
lea
jmp
inc
xchg
call
call
je
jmp
in
push
sub
je
sbb
jne
das
sub
and
call
call
call
je
jmp
cmp
push
je
idiv
ret
div
jno
scas
into
add
call
call
je
jmp
sub
fidiv
push
int
cmps
je
jne
aaa
cmp
je
call
call
call
call
je
jmp
sub
cld
dec
jne
je
jb
push
push
je
jne
xchg
sbb
fs
xchg
test
je
jne
test
cmp
pop
xchg
call
call
je
jmp
mov
push
je
rcr
outs
je
jne
lea
dec
lea
call
call
call
je
jmp
dec
jl
stos
jne
je
call
hlt
pusha
sub
dec
call
call
je
jmp
fs
or
je
adc
push
xor
hlt
jg
(bad)
je
mov
add
xor
mov
call
call
call
call
je
jmp
movs
sub
je
out
cmp
hlt
add
mov
cld
xchg
not
and
cmp
je
mov
retf
call
call
call
call
je
jmp
dec
test
je
ja
push
dec
je
jne
and
or
and
shl
test
mov
xchg
call
call
je
jmp
(bad)
jne
je
pop
shl
je
jne
pusha
mov
and
call
call
call
je
jmp
xchg
fcmovnbe
jo
push
je
inc
adc
je
jne
adc
fld
add
add
call
je
jmp
push
xchg
bound
jne
je
fs
push
ret
je
jne
iret
hlt
push
mov
jmp
xor
aas
pop
ret
or
xchg
call
call
je
jmp
cs
and
adc
int
div
push
mov
fimul
add
add
add
call
call
je
jmp
lock
out
jne
je
repz
jno
je
jne
into
cmps
das
dec
jmp
ret
xor
inc
test
jne
call
call
call
call
je
jmp
adc
call
shl
je
jne
cli
icebp
test
cld
xchg
not
and
cmp
je
lods
cmp
call
call
call
call
je
jmp
mov
push
je
dec
jae
xchg
je
jne
inc
lds
fs
xchg
test
je
jne
ds
(bad)
in
ds
call
call
je
jmp
sbb
jmp
jne
je
jbe
mov
je
jne
addr16
nop
mov
call
call
call
je
jmp
shl
mov
or
xchg
mov
hlt
lods
pop
sub
add
call
call
je
jmp
mov
je
int3
jl
pop
je
jne
adc
sbb
fcomip
sub
and
add
add
add
jmp
pop
adc
jne
je
scas
rcl
div
hlt
fcom
lea
call
add
call
call
je
jmp
in
xchg
out
jne
je
dec
pop
es
div
jo
imul
inc
cld
call
call
call
call
je
jmp
sub
jl
jne
je
pop
adc
jne
lahf
inc
int
lea
xchg
not
and
cmp
je
sub
mov
add
add
call
call
call
je
jmp
mov
push
je
sbb
jbe
div
adc
jecxz
lea
xchg
test
je
jne
jmp
out
add
call
call
je
jmp
stc
adc
add
je
(bad)
in
jmp
das
cmp
add
add
add
call
call
je
jmp
leave
sub
mov
je
xlat
cmovge
div
mov
cmp
add
dec
call
call
je
jmp
and
je
cmp
dec
test
div
mov
jmp
or
sbb
xchg
call
call
je
jmp
add
gs
push
je
test
xor
fwait
adc
and
call
add
call
call
je
jmp
test
jg
jne
je
jl
jg
je
jne
out
out
and
add
add
cmp
jge
call
call
call
call
je
jmp
jmp
push
je
into
xor
je
jne
dec
or
xchg
not
and
cmp
je
mov
out
call
call
call
call
je
jmp
or
mov
or
jp
and
hlt
fs
xchg
dec
add
test
je
jne
dec
dec
xchg
cmp
in
(bad)
rol
add
add
add
jmp
out
xchg
stos
xor
or
xchg
inc
das
je
jne
ficom
(bad)
add
add
call
call
je
jmp
cli
ficomp
push
je
out
push
sbb
hlt
mov
add
dec
call
call
je
jmp
inc
sbb
jne
je
sar
mov
div
pushf
mov
loop
jmp
pop
mov
lods
mov
add
call
call
je
jmp
push
add
jne
je
pop
mov
jne
popa
sbb
jp
fs
call
add
call
call
je
jmp
lods
(bad)
push
pop
jne
je
mov
xor
push
jnp
jmp
ret
push
mov
call
pop
mov
lea
mov
mov
jmp
cmp
jge
call
call
call
call
je
jmp
imul
or
enter
div
and
mov
cld
xchg
not
and
cmp
je
fucom
call
call
call
call
je
jmp
movs
pop
out
stc
jne
je
ret
adc
jne
cld
sbb
push
fs
xchg
test
je
jne
lods
daa
mov
xchg
xchg
call
call
je
jmp
and
push
je
jecxz
out
pop
je
jne
jmp
fs
call
call
call
je
jmp
xchg
or
add
jne
xor
imul
add
add
add
jmp
unpckhps
sbb
hlt
cmp
and
ret
jmp
test
xor
sbb
xchg
call
call
je
jmp
pop
jno
add
je
cmp
or
test
mov
lea
call
add
call
call
je
jmp
in
rcl
jne
je
(bad)
je
je
jne
jne
(bad)
sbb
add
push
mov
call
pop
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
push
mov
call
pop
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
jmp
xor
mov
xor
add
cmp
jge
lea
mov
sub
mov
mov
jmp
cmp
jge
sub
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
sub
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
mov
mov
call
call
call
call
je
jmp
mov
mov
jne
je
scas
xchg
or
je
jne
int
cld
lea
xchg
not
and
cmp
je
mov
cmp
add
add
call
call
call
je
jmp
pop
add
push
je
or
div
jge
je
lea
xchg
test
je
jne
test
fwait
pushf
out
and
add
call
call
je
jmp
mov
push
je
outs
cmp
je
jne
push
dec
push
lea
call
call
call
je
jmp
xchg
jmp
fdiv
je
fdiv
jne
inc
and
cmp
add
add
call
je
jmp
xlat
test
or
jno
(bad)
je
jne
xor
xchg
ret
jmp
mov
pop
mov
mov
call
call
je
jmp
and
inc
mov
je
(bad)
test
hlt
das
div
add
add
add
add
call
call
je
jmp
xchg
(bad)
out
jl
push
je
ret
dec
and
je
jne
loop
or
jmp
ret
mov
call
call
call
call
je
jmp
cmp
push
je
jb
daa
into
je
jne
aam
sbb
cld
xchg
not
and
cmp
je
adc
add
add
call
call
call
je
jmp
xchg
adc
jne
je
in
and
mov
push
push
push
cmc
lea
xchg
test
je
jne
ret
sbb
in
inc
(bad)
sub
add
add
add
jmp
loopne
clc
fs
je
add
test
mov
out
lea
call
call
call
je
jmp
ja
adc
in
xor
hlt
add
and
call
call
je
jmp
mov
push
je
and
lock
jne
push
pop
out
ret
jmp
mov
in
jmp
xchg
call
call
je
jmp
call
or
fst
hlt
in
xchg
mov
call
add
call
call
je
jmp
nop
cmp
push
jne
je
lods
jb
push
je
jne
xor
sub
dec
lea
call
call
call
call
je
jmp
gs
lock
je
dec
or
jo
div
gs
and
xchg
test
je
jne
cwde
xchg
sub
les
add
add
add
jmp
jae
dec
(bad)
jne
je
adc
jne
pop
pop
gs
fs
call
call
call
je
jmp
popa
cmp
sub
hlt
aas
mov
test
call
je
jmp
and
sub
jne
je
clc
push
test
xor
lea
mov
call
call
call
call
je
jmp
mov
push
je
les
jne
sbb
and
xchg
test
je
jne
mov
or
nop
or
xchg
call
call
je
jmp
pop
sub
or
mov
cmp
hlt
mov
fs
call
call
call
je
jmp
push
int
jp
push
je
dec
(bad)
(bad)
fdiv
hlt
stc
jo
lds
add
add
call
je
jmp
dec
cwde
inc
in
push
je
rol
into
je
jne
sub
loopne
les
repnz
pcmpeqw
call
call
call
call
je
jmp
xlat
(bad)
ja
gs
push
je
jne
scas
jo
movs
lea
xchg
not
and
cmp
je
cmp
call
call
call
call
je
jmp
xchg
jno
adc
je
xchg
call
jne
sbb
fsubr
xchg
test
je
jne
cmp
ja
push
leave
dec
xchg
call
call
je
jmp
mov
push
je
dec
pushf
jmp
hlt
xchg
pop
add
fs
call
call
call
je
jmp
stos
push
pop
xor
push
je
sbb
jne
push
popa
icebp
add
call
call
je
jmp
aad
arpl
je
dec
stos
cmp
mov
rcl
jmp
je
dec
aam
fwait
xchg
rol
add
add
add
jmp
push
push
enter
je
push
jle
lahf
je
jne
lods
mov
push
lea
call
add
call
call
je
jmp
outs
sub
or
mov
jne
ds
mov
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
xchg
mov
int
push
je
sub
div
retf
inc
adc
lea
xchg
test
je
jne
xlat
retf
mov
sub
add
add
add
jmp
mov
mov
jne
je
out
(bad)
out
add
hlt
dec
inc
jge
lea
call
call
call
je
jmp
sub
mov
jne
je
popf
mov
lock
jne
cdq
loopne
enter
dec
call
call
je
jmp
xor
mov
push
je
inc
and
pcmpeqb
jne
sub
jmp
add
add
add
add
add
add
jmp
repnz
push
jne
je
pushf
cwde
retf
mov
div
mov
sti
mov
add
test
je
jne
sub
xlat
rcr
sti
xchg
call
call
je
jmp
jnp
fdivr
push
mov
jne
mov
cmp
lea
call
call
call
je
jmp
test
pop
jne
je
push
xlat
nop
shl
hlt
cli
sub
and
call
call
je
jmp
pop
or
pushf
jne
je
dec
mov
jne
mov
adc
xchg
add
add
shr
add
add
add
add
add
add
jmp
xchg
xor
je
sti
rcl
hlt
into
push
jns
lea
xchg
not
and
cmp
je
xor
mov
add
add
call
call
call
je
jmp
adc
add
or
and
div
enter
lea
xchg
test
je
jne
jns
fstp
dec
sbb
xlat
xchg
call
call
je
jmp
and
or
test
je
jne
lods
into
aas
and
fs
call
call
call
je
jmp
mov
push
je
loopne
mov
hlt
mov
pop
mov
add
dec
call
call
je
jmp
push
(bad)
shl
jne
je
push
mov
jne
pop
push
jmp
ret
jmp
dec
and
jae
jnp
ret
and
add
add
call
je
jmp
adc
scas
add
je
fucomip
push
xor
div
bound
add
add
add
add
call
call
je
jmp
mov
push
je
adc
jne
xor
mov
xor
inc
test
jne
call
call
call
call
je
jmp
sbb
push
je
cmp
mov
hlt
bound
cld
xchg
not
and
cmp
je
inc
add
call
call
call
call
je
jmp
les
gs
jne
je
test
pop
je
jne
dec
mov
and
xchg
test
je
jne
aas
cwde
outs
mov
aas
xor
call
call
je
jmp
clc
lea
or
cmc
cdq
xor
hlt
xchg
(bad)
or
add
add
call
call
je
jmp
out
dec
push
dec
jne
je
fnstcw
jne
mov
add
dec
call
call
je
jmp
hlt
adc
out
push
je
pop
mul
je
jne
hlt
inc
xchg
push
jns
dec
jo
inc
xchg
call
call
je
jmp
fwait
dec
push
arpl
je
push
pcmpgtb
div
cmp
cmps
lea
call
add
call
call
je
jmp
retf
bound
je
loop
aas
xor
dec
sub
sub
add
xor
mov
xor
add
call
call
call
call
je
jmp
cmp
sub
jne
je
fcmovb
add
je
jne
mov
mov
lea
xchg
not
and
cmp
je
pusha
clc
mov
add
add
call
call
call
je
jmp
inc
nop
es
imul
push
je
jne
sub
inc
out
fs
xchg
test
je
jne
add
or
repz
cmc
rol
add
add
add
jmp
xlat
movs
popf
ret
je
xchg
sbb
hlt
(bad)
bound
lea
call
call
call
je
jmp
in
or
or
jns
std
je
jne
inc
in
jo
add
call
call
je
jmp
loop
cmps
jecxz
push
je
repz
push
pushf
je
jne
rcl
ret
jmp
mov
ins
push
and
add
call
call
je
jmp
inc
push
mul
push
je
ins
and
div
mov
dec
inc
lea
call
add
call
call
je
jmp
mov
push
je
xor
scas
je
jne
adc
ret
cmp
jge
lea
mov
mov
mov
mov
call
jmp
cmp
jge
cmp
jne
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
call
jmp
push
mov
mov
push
mov
call
pop
pop
push
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
pop
mov
mov
mov
jmp
xor
mov
xor
add
cmp
jge
lea
mov
mov
mov
add
jmp
cmp
jge
push
mov
mov
add
push
pop
pop
push
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
cmp
jne
pop
mov
mov
mov
jmp
call
call
call
call
je
jmp
cmp
push
je
lods
jmp
mov
div
pop
pusha
xchg
add
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
in
mov
or
rcl
je
jne
arpl
and
xchg
test
je
jne
xor
xor
test
add
jmp
in
inc
cli
jne
je
add
je
jne
xor
and
call
call
call
je
jmp
jnp
sbb
push
je
mov
mov
je
jne
dec
or
call
call
je
jmp
dec
add
add
je
pop
test
aaa
je
jne
fwait
push
xor
jmp
and
lods
inc
pop
xchg
call
call
je
jmp
mov
push
je
mov
div
shl
and
call
add
call
call
je
jmp
sub
je
sub
div
jle
push
cmp
add
call
call
call
call
je
jmp
aas
xchg
xor
jne
je
mov
popa
mov
or
fs
xchg
not
and
cmp
je
xor
add
add
add
add
add
jmp
cmp
push
je
test
lock
jne
mov
stos
or
add
test
je
jne
adc
js
jle
add
call
call
je
jmp
popf
fcmovnb
loopne
push
je
jmp
pop
je
jne
daa
xor
fs
call
call
call
je
jmp
mov
push
je
das
ret
je
jne
xor
test
add
call
call
je
jmp
inc
bound
jne
je
test
div
xchg
ret
daa
ret
jmp
inc
inc
scas
shl
in
test
xchg
call
call
je
jmp
outs
shl
jne
je
or
div
jno
out
test
fs
call
add
call
call
je
jmp
cli
mov
icebp
jne
je
in
mov
je
jne
ins
rcr
jmp
ret
mov
call
call
call
call
je
jmp
xor
or
push
je
call
div
and
fwait
lea
xchg
not
and
cmp
je
mov
add
call
call
call
je
jmp
xchg
jne
je
mov
div
jmp
cld
xchg
test
je
jne
adc
arpl
xchg
call
call
je
jmp
xor
je
stos
pushf
or
div
retf
mov
fs
call
call
call
je
jmp
or
xor
jne
je
xor
fisttp
div
jmp
mov
add
call
call
je
jmp
fisttp
push
jne
je
les
add
div
lock
mul
fild
add
add
add
jmp
inc
mov
je
out
sub
daa
je
jne
pop
add
and
call
add
call
call
je
jmp
retf
shl
mov
inc
jecxz
ret
jne
jmp
mov
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
in
xchg
fwait
jne
je
and
hlt
sahf
out
adc
lea
xchg
test
je
jne
loopne
jne
mov
add
call
call
je
jmp
lds
mov
push
je
lea
xor
hlt
or
jmp
add
add
add
call
call
je
jmp
fiadd
je
pop
(bad)
(bad)
je
jne
jp
hlt
jp
add
dec
call
call
je
jmp
in
jnp
retf
jne
je
sub
je
jne
mov
mov
ret
lea
mov
call
call
call
call
je
jmp
adc
pusha
jne
je
cmp
inc
cmps
je
jne
dec
call
and
xchg
test
je
jne
jbe
test
xor
call
call
je
jmp
stc
push
mov
jne
je
push
mov
jne
jge
pop
outs
lea
call
call
call
je
jmp
cmp
xchg
dec
jne
je
popa
aaa
lds
div
xchg
cld
stos
dec
add
call
call
je
jmp
and
push
je
(bad)
div
lock
xchg
ret
jmp
nop
push
dec
fimul
outs
and
mov
mov
mov
call
pop
push
pop
pop
pop
push
ror
dec
jne
call
call
call
call
je
jmp
xchg
pop
sbb
or
daa
or
hlt
lock
jns
fs
xchg
not
and
cmp
je
ss
mov
add
add
add
add
add
jmp
fsub
adc
jne
je
inc
(bad)
inc
je
jne
mov
fs
xchg
test
je
jne
(bad)
sub
inc
push
xchg
call
call
je
jmp
push
out
mov
or
add
ds
jne
repnz
cli
cmp
call
call
call
je
jmp
adc
mov
jne
je
adc
add
je
jne
es
jecxz
add
call
call
je
jmp
repz
cmps
jne
je
push
ret
je
jne
and
and
jmp
jp
jmp
add
call
call
je
jmp
mov
push
je
push
mov
jne
pop
mov
inc
lea
call
add
call
call
je
jmp
pushf
dec
dec
mov
push
je
dec
ins
mov
hlt
rcr
and
add
and
lea
call
call
call
call
je
jmp
scas
stos
dec
dec
jne
je
jbe
push
adc
hlt
aad
jg
lea
xchg
not
and
cmp
je
lds
add
add
add
add
add
jmp
or
push
je
movs
mov
mov
hlt
aas
or
bound
add
test
je
jne
add
call
add
add
call
je
jmp
adc
out
push
je
xor
div
(bad)
xor
inc
lea
call
call
call
je
jmp
pop
inc
push
push
jne
je
sbb
hlt
xor
mov
dec
call
call
je
jmp
test
jg
div
rcr
or
pusha
fisubr
add
add
call
je
jmp
ss
popf
jne
je
or
je
jne
jno
test
lea
call
add
call
call
je
jmp
pushf
dec
mov
push
je
sar
jne
movs
loop
imul
add
mov
mov
call
call
call
call
je
jmp
outs
or
push
je
cli
sbb
div
cmp
and
shl
sar
je
xlat
shl
add
add
call
call
call
je
jmp
add
mov
or
pop
repnz
div
(bad)
mov
and
xchg
test
je
jne
retf
loopne
push
xchg
cmc
xchg
call
call
je
jmp
repz
sub
movs
iret
and
je
jne
sbb
xchg
lea
call
call
call
je
jmp
cmp
jecxz
push
je
sub
jne
aas
jmp
and
call
call
je
jmp
dec
jo
push
jne
je
and
mov
div
pop
pop
dec
scas
ret
jmp
dec
or
jp
mov
and
add
add
call
je
jmp
adc
jne
je
bswap
xor
je
jne
sahf
xchg
aam
lea
call
add
call
call
je
jmp
outs
cmp
cmp
je
fld
je
jne
push
test
jmp
ret
call
push
pop
ret
fs
sbb
out
cmp
add
add
call
call
call
je
jmp
cwde
dec
pop
aam
push
je
cli
xor
je
jne
mov
int
lea
xchg
not
and
cmp
je
scas
sbb
add
add
add
add
add
jmp
sub
push
je
outs
add
pop
je
jne
ret
mov
xor
add
test
je
jne
push
outs
sti
mov
mov
add
add
call
je
jmp
jae
mov
or
stos
fwait
gs
jne
stos
mov
add
add
add
call
call
je
jmp
inc
jmp
cmp
je
xlat
sub
je
jne
mov
add
dec
call
call
je
jmp
sub
pop
xchg
jne
je
sub
jne
into
retf
fcom
add
aad
jge
add
call
call
je
jmp
adc
push
je
into
loop
add
pop
test
out
fs
call
add
call
call
je
jmp
cwde
pop
fyl2x
jne
je
sub
div
mov
sahf
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
scas
shl
push
je
lods
cmp
jnp
div
aad
xchg
lea
xchg
test
je
jne
std
xor
sbb
jmp
mov
add
add
call
je
jmp
mov
add
push
je
jnp
sub
je
jne
jecxz
(bad)
mov
fs
call
call
call
je
jmp
pop
push
lock
je
xor
repnz
je
jne
(bad)
add
dec
call
call
je
jmp
xor
je
xor
daa
mov
hlt
cmp
xchg
add
call
call
call
je
jmp
out
pop
(bad)
lock
je
mov
jle
je
jne
pushf
shl
cld
xchg
test
je
jne
xchg
arpl
cli
mov
ret
inc
xchg
call
call
je
jmp
jmp
push
or
mov
jne
pusha
data16
add
add
add
call
call
je
jmp
push
mov
or
aad
out
div
aam
stos
leave
add
call
call
je
jmp
or
inc
out
push
je
es
push
div
out
and
add
call
call
call
call
je
jmp
adc
shl
je
inc
or
jne
mov
inc
jg
fs
xchg
not
and
cmp
je
or
lock
call
call
call
je
jmp
or
mov
jne
je
adc
stc
jp
div
js
jns
lea
xchg
test
je
jne
iret
sbb
xchg
call
call
je
jmp
and
je
clc
inc
repnz
je
jne
pop
and
mov
call
call
call
je
jmp
(bad)
dec
adc
jne
je
loope
popf
adc
div
pop
retf
add
call
call
je
jmp
push
repnz
push
je
add
hlt
ins
push
pop
stos
ret
jmp
add
inc
popa
(bad)
cmp
hlt
xchg
call
call
je
jmp
jnp
in
out
push
je
and
mov
je
jne
sub
and
call
add
call
call
je
jmp
out
push
imul
or
pop
gs
div
popf
sbb
pop
jmp
ret
mov
call
call
call
call
je
jmp
cmp
mov
je
jae
jmp
je
jne
xchg
clc
ret
loope
fs
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
fwait
sbb
cdq
jne
je
cwde
imul
mov
cld
xchg
test
je
jne
aad
mov
pop
xchg
call
call
je
jmp
das
push
add
je
leave
jne
cmp
das
xchg
stos
int
fs
call
call
call
je
jmp
cwde
push
retf
push
je
aad
sub
push
fist
add
call
call
je
jmp
adc
xor
xlat
ja
div
dec
inc
pop
ret
jmp
jbe
and
fist
call
call
je
jmp
sbb
cmp
je
xchg
in
xchg
je
jne
and
and
call
add
call
call
je
jmp
das
xchg
lods
mov
icebp
fist
je
jne
jmp
xor
add
mov
xor
add
mov
sub
mov
call
call
call
call
je
jmp
scas
cmp
mov
in
movs
pushf
mov
hlt
lods
sub
adc
add
not
and
cmp
je
aad
mov
add
add
call
call
call
je
jmp
pop
repnz
jbe
push
je
and
arpl
sbb
and
xchg
test
je
jne
adc
popa
push
lock
add
add
add
jmp
adc
hlt
jne
je
sub
mov
hlt
shr
and
call
call
call
je
jmp
cmp
je
add
lahf
jo
div
(bad)
add
call
call
je
jmp
jecxz
ins
push
jne
je
scas
out
push
je
jne
stos
pop
xchg
in
ret
jmp
sub
sti
ss
add
call
call
je
jmp
sub
das
add
je
(bad)
and
xchg
je
jne
jecxz
xchg
cmp
add
add
add
call
call
je
jmp
xchg
sub
cmp
je
push
hlt
add
je
jne
xor
inc
int3
jmp
ret
cmp
jne
call
call
call
call
je
jmp
mov
mov
or
sbb
jne
or
and
xchg
not
and
cmp
je
mov
sti
call
call
call
call
je
jmp
inc
lahf
pop
dec
jne
je
cmc
shr
push
je
jne
pop
jnp
das
lea
xchg
test
je
jne
dec
dec
(bad)
cmps
fsubr
and
xchg
call
call
je
jmp
loope
into
xchg
jne
je
xchg
jmp
jne
cmp
pminsw
add
add
call
call
je
jmp
les
ret
imul
rcl
div
or
inc
add
add
call
je
jmp
push
fwait
dec
mov
fs
repz
div
scas
jecxz
dec
ret
jmp
lock
fisttp
xchg
call
call
je
jmp
arpl
je
inc
test
mov
div
add
fimul
add
add
add
call
call
je
jmp
(bad)
sbb
je
stos
adc
ja
div
das
cmc
inc
push
jmp
ret
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
push
push
mov
call
jmp
cmp
jne
push
popf
cmovl
pushf
pop
mov
jmp
cmp
jne
push
popf
cmovle
pushf
pop
mov
jmp
cmp
jne
push
popf
cmovg
pushf
pop
mov
jmp
cmp
jne
push
popf
cmovge
pushf
pop
mov
jmp
cmp
jne
push
popf
cmovbe
pushf
pop
mov
jmp
cmp
jne
push
popf
cmova
pushf
pop
mov
jmp
call
call
call
call
je
jmp
dec
in
mov
jne
je
pop
lock
xlat
je
jne
gs
test
xchg
not
and
cmp
je
addr16
inc
call
call
call
call
je
jmp
daa
adc
or
sahf
xchg
sbb
hlt
sti
cli
dec
fmul
add
test
je
jne
bound
fstp
xchg
call
call
je
jmp
test
mov
je
mov
div
dec
out
sbb
add
add
call
call
je
jmp
(bad)
std
xor
push
je
push
or
jbe
div
sub
xlat
cld
add
call
call
je
jmp
mov
push
je
lahf
cmc
pop
nop
je
jne
and
or
mov
outs
sbb
and
add
add
call
je
jmp
aam
movs
add
je
mov
div
xchg
rcr
test
add
add
add
add
call
je
jmp
mov
push
je
sub
neg
aaa
mov
lahf
jmp
ret
mov
call
call
call
call
je
jmp
outs
xchg
lahf
xchg
je
pop
sbb
cmp
hlt
loopne
cmp
cld
xchg
not
and
cmp
je
(bad)
adc
add
call
call
call
je
jmp
ds
out
jne
je
dec
ret
mov
je
jne
outs
jo
fimul
add
test
je
jne
retf
sub
jnp
hlt
add
add
add
add
jmp
sar
jne
je
mov
jne
inc
add
xor
add
add
call
call
je
jmp
mov
push
je
mov
hlt
je
jne
xchg
pop
adc
add
call
call
je
jmp
mov
push
je
cdq
mov
inc
je
jne
cmps
fsub
ret
jmp
cmp
add
add
call
je
jmp
cli
xor
dec
jne
je
cmp
ins
fbstp
hlt
sahf
retf
lea
call
add
call
call
je
jmp
cmps
push
leave
cs
je
(bad)
cmp
mov
hlt
mov
add
sub
dec
lea
call
call
call
call
je
jmp
in
repnz
jne
je
cs
leave
pop
je
jne
or
and
xchg
test
je
jne
ficomp
mov
push
xchg
call
call
je
jmp
gs
adc
push
je
mov
add
je
jne
(bad)
cmc
inc
adc
add
add
call
call
je
jmp
sti
jmp
fadd
mov
hlt
in
movs
lahf
js
add
dec
call
call
je
jmp
add
(bad)
scas
jne
je
mov
loope
je
jne
rcr
mov
mov
call
call
call
call
je
jmp
leave
imul
mov
div
or
lea
xchg
test
je
jne
push
mov
or
add
call
call
je
jmp
sub
cmps
in
push
je
jge
arpl
div
sub
lods
mov
call
call
call
je
jmp
cmp
je
xor
jne
and
dec
add
call
call
je
jmp
dec
sub
ds
je
push
mov
inc
je
jne
fistp
aad
jmp
jne
test
inc
lock
iret
pop
pop
jmp
into
jmp
xor
add
call
call
call
je
jmp
push
lea
and
sub
cld
xchg
not
and
cmp
je
shl
push
call
call
call
call
je
jmp
xor
jmp
stos
sahf
je
jne
mov
fs
xchg
test
je
jne
jb
inc
outs
or
add
call
call
je
jmp
jo
aad
jne
je
pop
into
addr16
je
jne
popf
xchg
add
add
add
call
call
je
jmp
sub
pushf
jne
je
sub
je
jne
sub
and
call
call
je
jmp
shl
or
les
je
jne
neg
or
pop
sar
add
call
call
je
jmp
mov
push
je
jae
test
div
and
add
add
add
add
call
call
je
jmp
xor
or
pusha
jecxz
lods
je
jne
cmp
pop
mov
lea
jmp
call
call
call
call
je
jmp
call
push
je
inc
sub
hlt
arpl
or
lea
xchg
test
je
jne
inc
xchg
lea
jmp
cmc
xchg
call
call
je
jmp
adc
push
je
loopne
lahf
dec
je
jne
push
aam
aas
lea
call
call
call
je
jmp
stc
sbb
jne
je
test
std
(bad)
je
jne
mov
add
dec
call
call
je
jmp
add
pop
dec
jne
je
shl
jne
mov
(bad)
jae
call
call
call
call
je
jmp
add
je
gs
inc
je
jne
test
fs
xchg
test
je
jne
add
inc
jmp
add
call
je
jmp
xchg
and
je
jae
add
je
jne
xchg
push
iret
and
add
add
call
call
je
jmp
and
je
cmp
mov
je
jne
fs
aad
add
call
call
je
jmp
pop
or
je
dec
mov
pop
je
jne
cmp
xchg
ret
mov
add
mov
call
call
call
call
je
jmp
repz
int
jne
je
pop
cmps
jmp
hlt
jmp
sbb
add
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
dec
aam
inc
jne
je
jo
push
pop
je
jne
(bad)
add
lea
xchg
test
je
jne
iret
sbb
xor
xchg
xchg
call
call
je
jmp
fimul
mov
or
hlt
dec
add
lea
call
call
call
je
jmp
ficomp
je
arpl
jne
out
icebp
cmps
sti
add
call
call
je
jmp
mov
dec
jne
je
sub
jle
je
jne
mov
mov
ret
jmp
jg
adc
aas
mov
add
call
call
je
jmp
das
ins
idiv
jne
je
mov
jae
je
jne
dec
bound
add
add
add
add
call
call
je
jmp
(bad)
dec
ins
jne
je
inc
inc
das
ins
je
jne
xchg
scas
sub
pop
cld
add
call
call
call
call
je
jmp
push
aad
sub
je
aaa
movs
adc
hlt
push
out
mov
add
not
and
cmp
je
mov
push
call
call
call
call
je
jmp
faddp
leave
cli
jne
je
push
movs
call
pop
dec
shl
xchg
test
je
jne
mov
and
je
add
call
call
je
jmp
sbb
dec
push
jne
je
jecxz
mov
je
jne
push
sahf
jae
lea
call
call
call
je
jmp
adc
into
mov
mov
div
jne
xchg
add
call
call
je
jmp
in
jl
outs
jne
je
xchg
mov
mov
hlt
or
bound
push
sub
and
add
add
call
je
jmp
and
jmp
pop
mov
div
daa
aaa
or
add
add
add
add
call
call
je
jmp
jmp
push
je
sti
fcom
div
fild
aas
jmp
ret
mov
sub
call
call
call
call
je
jmp
mov
push
je
lds
je
jne
jle
push
xchg
lea
xchg
not
and
cmp
je
and
call
call
call
call
je
jmp
cli
fsubr
or
fwait
aam
je
jne
sahf
pop
dec
and
add
test
je
jne
sbb
cmp
neg
and
add
add
call
je
jmp
iret
dec
into
fwait
jne
je
xchg
jne
mov
fs
call
call
call
je
jmp
xchg
das
daa
jne
je
cwde
jmp
jne
popa
pop
loop
add
call
call
je
jmp
movs
fist
push
je
cmp
dec
je
jne
or
dec
xchg
ret
jmp
bound
push
xchg
call
call
je
jmp
loop
or
fisttp
div
imul
and
call
add
call
call
je
jmp
mov
push
je
xchg
ret
je
jne
mov
sbb
jmp
ret
mov
mov
call
call
call
call
je
jmp
shl
sbb
je
mov
div
xchg
div
lea
xchg
not
and
cmp
je
jmp
mov
add
add
call
call
call
je
jmp
or
addr16
push
je
mov
div
mov
fs
xchg
test
je
jne
and
ror
xchg
call
call
je
jmp
xchg
ja
xchg
jne
je
ret
sub
ret
je
jne
retf
xchg
add
add
add
call
call
je
jmp
cmp
je
pop
movs
cmp
je
jne
mov
xchg
js
add
dec
call
call
je
jmp
xchg
ins
add
jne
je
jb
jns
je
jne
dec
jmp
stos
ret
jmp
jbe
jns
mul
pop
jp
add
call
call
je
jmp
pop
not
out
jne
je
hlt
mov
je
jne
das
popa
cmps
xor
fs
call
add
call
call
je
jmp
mov
push
je
cmp
div
fild
jge
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
inc
pop
lods
scas
jne
je
mov
dec
div
hlt
call
cld
xchg
test
je
jne
adc
pop
dec
xchg
call
call
je
jmp
out
popa
jae
push
je
loope
xchg
scas
je
jne
repnz
inc
lea
call
call
call
je
jmp
push
jl
fnstenv
je
sub
dec
(bad)
je
jne
sbb
fs
add
dec
call
call
je
jmp
or
mov
or
movhps
div
movd
lea
mov
call
call
call
call
je
jmp
xchg
leave
jne
je
ss
sbb
jecxz
xchg
add
test
je
jne
xchg
mov
and
add
add
call
je
jmp
xchg
fidiv
je
pop
or
je
jne
les
std
lea
call
call
call
je
jmp
push
xchg
rcr
je
push
xchg
adc
(bad)
repz
add
dec
call
call
je
jmp
aas
inc
or
jne
je
jge
cdq
dec
je
jne
sub
std
add
jmp
jle
push
pop
lods
in
push
jo
and
add
add
call
call
call
je
jmp
cs
mov
je
jns
shl
je
jne
mov
pop
call
and
shl
sar
je
iret
mov
call
call
call
call
je
jmp
or
push
je
test
repz
mov
fs
xchg
test
je
jne
pop
mov
jae
add
call
call
je
jmp
fcom
dec
addr16
je
push
jno
je
jne
fsub
and
call
call
call
je
jmp
repnz
sbb
je
ror
jne
call
dec
call
call
je
jmp
imul
or
mov
and
hlt
jecxz
add
ret
jmp
shl
xor
add
call
call
je
jmp
mov
sahf
push
jne
je
int
cmp
jne
cmps
popf
sub
call
add
call
call
je
jmp
jl
cmp
jne
je
pop
cld
das
mov
div
(bad)
(bad)
jmp
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
pop
call
je
stc
sub
mov
hlt
scas
out
js
lea
xchg
test
je
jne
pop
out
sbb
jmp
mov
add
call
call
je
jmp
sub
jno
push
je
adc
sub
div
push
fs
call
call
call
je
jmp
shr
je
push
test
jne
or
dec
call
call
je
jmp
outs
push
adc
jne
je
sub
je
jne
cmp
add
add
call
call
call
je
jmp
dec
pop
sbb
inc
jb
je
jne
mov
repnz
xchg
test
je
jne
push
or
cld
push
xchg
call
call
je
jmp
or
aas
sub
je
and
dec
je
jne
repz
and
lea
call
call
call
je
jmp
push
idiv
jge
push
je
shr
je
jne
out
shl
and
call
call
je
jmp
loopne
adc
jne
je
sub
aaa
out
je
jne
jmp
mov
add
inc
mov
call
call
call
call
je
jmp
jge
repz
je
cs
jne
inc
cmp
lea
xchg
not
and
cmp
je
xor
stos
call
call
call
call
je
jmp
out
test
jne
je
mov
div
cmp
lea
xchg
test
je
jne
inc
xchg
push
loop
jnp
sub
add
add
add
jmp
xlat
ja
bnd
je
out
adc
xlat
je
jne
jo
in
movs
lea
call
call
call
je
jmp
or
je
(bad)
rol
div
fmul
jle
add
call
call
je
jmp
cmp
mov
jne
je
add
hlt
pusha
push
inc
pop
ret
jmp
das
iret
pop
imul
xchg
call
call
je
jmp
xchg
sbb
or
dec
mov
hlt
sar
call
add
call
call
je
jmp
add
sbb
je
(bad)
jne
lahf
dec
xor
sub
dec
lea
call
call
call
call
je
jmp
xor
je
inc
add
hlt
sub
and
xchg
test
je
jne
call
xor
sub
add
add
add
jmp
mov
push
je
cwde
(bad)
dec
je
jne
mov
fs
call
call
call
je
jmp
mov
push
je
sub
jl
je
jne
js
fs
add
call
call
je
jmp
add
add
or
and
into
je
jne
xchg
mov
sbb
mov
call
call
call
call
je
jmp
pop
xor
je
loop
jnp
je
jne
and
fs
xchg
test
je
jne
ds
and
mov
xchg
call
call
je
jmp
mov
push
je
cmp
jne
scas
dec
and
call
call
call
je
jmp
(bad)
mov
je
xor
sahf
and
hlt
arpl
and
call
call
je
jmp
stos
and
je
rcr
pop
sub
hlt
xor
and
push
lods
adc
fadd
inc
test
lods
push
fsubrp
call
call
call
call
je
jmp
dec
add
jne
je
xchg
mov
movs
je
jne
jmp
fs
xchg
not
and
cmp
je
iret
call
call
call
call
je
jmp
lock
je
push
test
push
je
jne
in
pushf
or
fs
xchg
test
je
jne
imul
mov
add
call
call
je
jmp
js
aaa
cs
je
push
div
mov
and
call
call
call
je
jmp
movs
inc
aaa
sbb
je
cwde
push
jnp
je
jne
or
clc
add
call
call
je
jmp
movs
int3
mov
or
jmp
xchg
lods
lea
dec
xchg
test
and
add
add
call
je
jmp
call
push
je
mov
jmp
cld
(bad)
lea
call
add
call
call
je
jmp
sub
jne
je
shr
jne
fistp
repz
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
in
imul
jne
je
xchg
int3
push
je
jne
inc
fwait
cmp
xchg
test
je
jne
sub
sub
add
call
call
je
jmp
mov
aam
jne
je
(bad)
jmp
je
jne
add
fs
call
call
call
je
jmp
xchg
pop
cmps
enter
or
lods
add
je
jne
mov
mov
add
call
call
je
jmp
jo
and
push
je
rol
hlt
mov
arpl
add
call
call
call
je
jmp
div
jg
jne
je
mov
div
(bad)
adc
lea
xchg
test
je
jne
cmp
in
and
add
call
call
je
jmp
shl
jne
je
shl
hlt
(bad)
mov
lea
call
call
call
je
jmp
stos
enter
push
je
mov
mov
adc
dec
call
call
je
jmp
je
cmp
jne
je
pop
jecxz
pop
je
jne
in
cmp
call
xchg
add
add
add
add
pop
lea
lea
sub
add
lea
sub
add
sub
mov
pusha
mov
lea
mov
jmp
pause
xor
inc
lock
cmp
jne
popa
mov
sub
add
test
jne
mov
xor
inc
xor
mov
mov
mov
xor
mov
inc
inc
dec
test
jne
mov
xor
lea
movzx
cmp
jne
mov
xor
lea
movzx
mov
add
mov
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
push
popf
mov
add
jmp
shr
leave
loop
sbb
addr16
add
add
add
mov
mov
pop
pop
mov
mov
mov
mov
mov
pushf
pop
mov
xchg
xor
mov
lock
mov
call
call
call
call
je
jmp
js
pop
inc
jne
je
inc
mov
je
jne
xlat
jl
enter
cld
xchg
not
and
cmp
je
sbb
call
call
call
call
je
jmp
mul
aas
jnp
push
je
mov
inc
ss
jne
jbe
ds
lea
xchg
test
je
jne
inc
push
test
add
call
call
je
jmp
pop
xlat
sbb
jne
je
lahf
inc
mov
call
fs
call
call
call
je
jmp
inc
push
iret
cs
je
push
test
je
jne
push
or
fiadd
add
add
call
je
jmp
jns
mov
jne
je
scas
add
hlt
inc
push
xor
ret
jmp
in
push
pop
add
and
add
add
call
je
jmp
mov
push
je
lea
adc
mov
mov
add
add
add
add
call
call
je
jmp
retf
jbe
pop
jne
je
cmp
push
hlt
fst
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
sub
stos
jne
je
pop
inc
adc
je
jne
shl
and
xchg
test
je
jne
gs
lahf
mov
add
call
call
je
jmp
and
aam
push
je
cld
pop
cmp
div
and
add
add
add
call
call
je
jmp
cmp
je
inc
or
je
jne
cwde
sti
call
dec
call
call
je
jmp
cmp
or
movs
xor
div
call
lea
mov
call
call
call
call
je
jmp
mov
push
je
outs
(bad)
in
movs
je
jne
ficom
jecxz
fs
xchg
test
je
jne
cli
popf
outs
jp
fldcw
call
call
je
jmp
dec
iret
enter
je
aaa
mov
jne
inc
push
test
fs
call
call
call
je
jmp
inc
cmp
je
inc
jno
nop
je
jne
shl
and
call
call
je
jmp
retf
and
mov
sbb
cmc
je
jne
repnz
into
sbb
jmp
sub
and
and
pop
pop
cmp
add
add
add
add
add
jmp
fs
into
sbb
push
je
xor
clc
jg
div
movs
inc
outs
lea
xchg
not
and
cmp
je
ss
add
add
call
call
call
je
jmp
(bad)
jmp
je
(bad)
jge
sub
hlt
stos
loop
mov
xchg
test
je
jne
push
repz
popa
ret
add
call
call
je
jmp
sub
je
mov
(bad)
mov
and
call
call
call
je
jmp
es
je
cmp
jne
fxch
call
dec
call
call
je
jmp
push
xchg
push
mov
je
fcomp
std
cmp
hlt
and
mov
lahf
sub
lock
dec
out
pop
xchg
call
call
je
jmp
mov
push
je
mov
add
hlt
les
and
call
add
call
call
je
jmp
sbb
je
loop
inc
cdq
je
jne
mov
add
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
dec
jg
shl
je
(bad)
mov
jne
cmp
fs
xchg
test
je
jne
mov
lea
jmp
jmp
add
add
call
je
jmp
push
jb
dec
jne
je
mov
div
or
fs
call
call
call
je
jmp
dec
inc
in
jne
je
int
mov
hlt
push
add
add
call
call
je
jmp
mov
push
je
mov
ds
jne
jge
je
ret
call
call
call
call
je
jmp
or
data16
je
jne
jno
and
cld
xchg
test
je
jne
mov
jno
xchg
call
call
je
jmp
pushf
stc
cmp
push
je
xchg
xchg
hlt
push
aaa
add
and
call
call
call
je
jmp
mov
push
je
cld
add
or
hlt
cmp
mov
add
call
call
je
jmp
js
xchg
div
je
ins
mov
(bad)
je
jne
(bad)
sub
ret
mov
add
mov
mov
xor
add
mov
xor
add
add
sub
mov
mov
sub
sub
mov
push
call
call
call
call
je
jmp
(bad)
and
or
pop
inc
outs
je
jne
cdq
jb
cmp
inc
and
push
call
call
call
call
je
jmp
popa
ror
or
xchg
jg
je
jne
stos
lar
xchg
test
je
jne
daa
pushf
xchg
xchg
adc
and
add
add
call
je
jmp
jae
xbegin
ins
push
push
je
jne
cmp
imul
lea
call
call
call
je
jmp
cdq
pushw
fnsave
je
dec
aad
sbb
hlt
cli
out
not
add
call
call
je
jmp
cmp
je
icebp
push
pop
cmps
je
jne
fsub
xor
add
push
call
call
call
call
je
jmp
imul
or
mov
div
dec
leave
imul
fs
xchg
test
je
jne
out
scas
or
pop
bound
add
add
add
jmp
ror
je
and
cmp
hlt
jb
ins
jl
fs
call
call
call
je
jmp
or
jne
je
jb
fcmovne
je
jne
and
add
dec
call
call
je
jmp
ret
fdiv
je
xchg
test
loopne
div
adc
les
add
add
call
call
call
je
jmp
dec
(bad)
nop
ins
jne
je
pop
outs
inc
cdq
je
jne
pop
cs
lea
xchg
test
je
jne
pop
(bad)
es
enter
xchg
call
call
je
jmp
add
push
je
sub
(bad)
je
jne
daa
jbe
xchg
lea
call
call
call
je
jmp
adc
je
ret
loop
push
je
jne
fwait
push
pusha
add
call
call
je
jmp
movs
loope
push
jne
je
fisttp
movs
fs
jne
fxch
mov
call
call
call
call
je
jmp
adc
(bad)
jne
je
xor
div
and
and
xchg
test
je
jne
into
cmps
cmc
jae
or
call
call
je
jmp
jg
jne
jne
je
adc
jb
je
jne
data16
add
add
add
call
call
je
jmp
cmp
xchg
push
jne
je
movs
and
je
jne
and
mov
add
dec
call
call
je
jmp
cmps
inc
movs
mov
cld
adc
adc
adc
dec
scas
ret
mov
call
call
call
call
je
jmp
pop
aam
xchg
jne
je
shr
mov
je
jne
add
int
lea
xchg
test
je
jne
loope
je
mov
add
call
call
je
jmp
jb
ins
push
je
push
push
hlt
xor
lea
call
call
call
je
jmp
imul
mov
je
jne
cmp
adc
add
dec
call
call
je
jmp
iret
push
dec
shl
or
adc
jne
pop
xor
call
call
call
call
je
jmp
jecxz
mov
jne
je
test
je
jne
fimul
call
call
call
call
je
jmp
out
and
js
push
je
pop
xor
movs
je
jne
pop
adc
jbe
fs
xchg
test
je
jne
dec
cmp
(bad)
add
call
call
je
jmp
or
push
je
fwait
int
inc
je
jne
push
jnp
mov
call
call
call
je
jmp
out
sub
dec
jne
je
inc
pushf
addr16
je
jne
mov
add
dec
call
call
je
jmp
cdq
lock
push
je
and
ins
dec
je
jne
nop
(bad)
test
call
call
call
call
je
jmp
xchg
xchg
call
or
jge
sbb
hlt
ins
cmc
xchg
fs
xchg
test
je
jne
sar
or
call
call
je
jmp
push
inc
inc
fdiv
je
push
ret
stos
xor
hlt
adc
fs
call
call
call
je
jmp
adc
ins
sbb
push
je
inc
pushf
fstp
je
jne
xchg
add
inc
add
call
call
je
jmp
mov
dec
outs
jne
je
and
adc
je
jne
xor
jnp
or
pushf
shl
shr
popf
jne
mov
je
jmp
cmp
push
je
inc
(bad)
cdq
cmps
je
jne
xor
dec
ins
mov
je
jmp
xchg
loope
jmp
fdivr
je
jne
xchg
inc
ins
push
add
je
jmp
movs
pop
movs
imul
or
int3
sub
hlt
or
out
push
je
jmp
(bad)
std
test
push
je
and
jne
inc
push
adc
xchg
jmp
je
jmp
jle
cs
je
pop
mov
jne
mov
cs
je
jmp
mov
outs
pop
jne
je
jmp
div
ds
add
add
add
add
add
add
jmp
push
pushf
mov
or
cli
push
sbb
hlt
nop
and
sub
mov
shl
inc
and
mul
push
mov
add
call
call
call
call
je
jmp
cmc
mov
or
je
out
div
jge
les
lea
xchg
test
je
jne
cli
in
xor
adc
xchg
call
call
je
jmp
or
je
push
fbld
hlt
jmp
add
add
add
call
call
je
jmp
shl
or
and
mov
lock
dec
add
call
call
je
jmp
addr16
jmp
pop
mov
je
jne
push
fdiv
ret
push
call
call
call
call
je
jmp
push
or
jne
je
mov
movs
or
div
sub
movs
push
mov
push
call
call
call
call
je
jmp
sbb
je
mov
add
hlt
pop
push
push
std
lea
xchg
test
je
jne
adc
cli
out
push
xor
add
add
call
je
jmp
mov
mov
jne
je
sbb
sti
inc
je
jne
xlat
dec
repz
fs
call
call
call
je
jmp
sbb
sbb
or
aam
mov
hlt
clc
popf
mov
add
call
call
je
jmp
add
push
mov
je
pop
in
mov
hlt
add
xchg
ret
add
push
call
call
call
call
je
jmp
cmp
xchg
jmp
jb
xchg
cmps
je
jne
inc
jno
pop
lea
xchg
test
je
jne
(bad)
push
add
stos
push
std
xchg
call
call
je
jmp
ss
div
je
ins
mov
push
je
jne
mov
fs
call
call
call
je
jmp
dec
sbb
leave
jne
je
movs
(bad)
je
jne
rcl
push
add
call
call
je
jmp
(bad)
sub
jne
je
fild
pop
les
hlt
push
fcom
ret
add
call
call
call
call
je
jmp
bound
int3
cmp
je
das
push
pop
arpl
hlt
data16
test
xchg
test
je
jne
adc
xchg
mov
add
call
call
je
jmp
lahf
das
sub
jne
je
outs
sub
hlt
inc
shl
fs
call
call
call
je
jmp
data16
push
jne
je
pop
add
hlt
mov
add
dec
call
call
je
jmp
addr16
stos
xor
je
push
dec
std
push
hlt
xlat
and
add
add
add
call
call
call
je
jmp
push
scas
cs
jne
je
in
rcl
je
jne
mov
fs
xchg
test
je
jne
leave
jne
(bad)
jno
(bad)
add
add
call
je
jmp
dec
add
mov
mov
jg
je
jne
daa
adc
or
call
call
call
je
jmp
movs
push
enter
je
lods
pop
inc
test
div
cmp
and
call
call
je
jmp
and
cmp
jne
je
mov
out
je
jne
popa
dec
inc
sub
add
add
call
call
call
je
jmp
or
push
je
ss
jne
xchg
out
mov
xchg
test
je
jne
std
adc
jnp
xchg
xchg
call
call
je
jmp
adc
and
push
je
lahf
jns
shl
hlt
push
aaa
or
lea
call
call
call
je
jmp
jg
call
push
je
lods
dec
sbb
hlt
dec
test
and
call
call
je
jmp
cmp
jne
je
es
int
je
jne
cmp
mov
call
call
call
call
je
jmp
sub
push
je
rcl
add
je
jne
xor
call
call
call
call
je
jmp
xor
retf
push
je
icebp
out
mov
hlt
fcom
and
xchg
test
je
jne
retf
pop
dec
jb
jb
push
xchg
call
call
je
jmp
das
adc
je
jns
pop
cmp
hlt
push
cli
fcom
call
call
call
je
jmp
jno
rcl
es
std
je
jne
mov
add
dec
call
call
je
jmp
outs
push
aas
jne
je
loope
or
je
jne
and
ds
shl
mov
xor
call
call
call
call
je
jmp
test
jne
je
add
xchg
inc
je
jne
push
jbe
xor
add
test
je
jne
popf
lock
retf
ret
rol
add
add
add
jmp
aaa
inc
adc
lods
cmp
(bad)
retf
in
lea
call
call
call
je
jmp
repnz
je
outs
andnps
je
jne
mov
sub
add
call
call
je
jmp
cmc
int3
mov
jne
je
fwait
pusha
movs
adc
hlt
dec
jno
scas
ret
or
pushf
shl
shr
popf
jne
mov
je
jmp
push
pop
scas
jne
push
je
sbb
dec
fwait
je
jne
adc
std
dec
mov
je
jmp
mov
push
je
or
jne
fild
pushf
add
je
jmp
out
xchg
jne
jne
je
fidivr
je
jne
add
push
ja
sar
push
je
add
outs
je
jne
push
xchg
jmp
je
jmp
mov
inc
fidiv
je
jne
(bad)
je
jne
bound
jmp
or
mov
jne
je
fdivr
jne
call
add
call
call
call
je
jmp
gs
mov
jne
je
mov
div
pusha
jnp
cli
sub
sub
mov
shl
inc
and
mul
push
mov
add
call
call
call
call
je
jmp
jmp
push
inc
jne
je
mov
div
inc
and
add
test
je
jne
add
fadd
lods
xor
xchg
call
call
je
jmp
out
outs
add
je
mov
jne
mov
dec
sub
add
add
call
call
je
jmp
xchg
or
dec
jge
sub
div
loop
cs
call
call
je
jmp
test
mov
or
add
shl
hlt
xor
add
sbb
push
mov
(bad)
pop
add
add
add
add
call
call
call
je
jmp
icebp
cli
inc
sub
push
je
push
xchg
dec
mov
div
push
ret
or
lea
xchg
not
and
cmp
je
sbb
call
call
call
call
je
jmp
loope
loopne
jne
je
mov
div
push
add
lea
xchg
test
je
jne
(bad)
jecxz
sbb
add
jmp
add
add
call
je
jmp
(bad)
lock
xor
or
or
hlt
xor
and
call
call
call
je
jmp
in
adc
aam
push
je
fild
sub
xchg
fild
add
add
call
je
jmp
jae
nop
loop
push
je
lock
out
push
(bad)
ret
jmp
std
xor
xchg
repnz
xchg
call
call
je
jmp
xchg
mov
sbb
push
je
icebp
adc
je
jne
xor
and
call
add
call
call
je
jmp
mov
push
je
arpl
mov
je
jne
pop
lods
lock
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
dec
mov
je
ds
iret
cli
je
jne
and
jl
lea
xchg
test
je
jne
mov
mov
and
add
add
call
je
jmp
pop
and
or
int
out
div
jmp
add
add
add
call
call
je
jmp
push
mov
jne
je
movs
pop
rcr
mov
call
call
je
jmp
add
jp
push
je
pop
mov
jne
sahf
push
push
ret
lea
mov
call
call
call
call
je
jmp
scas
sbb
or
add
movs
push
and
xchg
test
je
jne
(bad)
jge
sub
cmp
xchg
call
call
je
jmp
xchg
outs
push
jne
je
arpl
jne
dec
out
lea
call
call
call
je
jmp
push
fild
shl
je
jnp
inc
pop
je
jne
ds
push
add
call
call
je
jmp
push
cmps
cld
xchg
jne
je
add
imul
xor
je
ret
jmp
push
loopne
jmp
jge
fmul
cld
or
add
add
add
add
add
jmp
adc
push
je
adc
mov
je
jne
push
mov
inc
lea
xchg
not
and
cmp
je
stos
push
movs
call
call
call
call
je
jmp
stc
mov
shl
je
jno
ins
push
lock
mov
lea
xchg
test
je
jne
push
mov
pop
jne
mov
add
call
call
je
jmp
dec
xor
fwait
jne
je
mov
div
(bad)
js
mov
call
call
call
je
jmp
jg
sbb
jne
je
add
hlt
mov
movs
mov
call
call
je
jmp
pop
dec
mov
or
outs
dec
and
hlt
(bad)
fprem
cdq
ret
jmp
out
scas
fst
xchg
call
call
je
jmp
adc
inc
cmp
cmp
lds
enter
lea
call
add
call
call
je
jmp
jne
and
or
hlt
lea
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
sar
je
int
jmp
outs
cmp
xchg
test
je
jne
mov
sbb
jmp
cld
xchg
call
call
je
jmp
jmp
or
retf
je
jne
push
fs
call
call
call
je
jmp
enter
jne
je
repz
aam
div
test
add
dec
call
call
je
jmp
jnp
or
jne
je
call
div
(bad)
xchg
and
add
add
add
add
add
add
jmp
in
xlat
add
je
out
push
inc
js
div
xchg
pop
and
lea
xchg
test
je
jne
fild
mov
sbb
add
add
call
je
jmp
ficomp
je
stos
in
fisttp
hlt
sahf
pop
call
add
add
add
add
call
je
jmp
popa
ret
call
or
jnp
iret
je
jne
pop
and
add
call
call
je
jmp
add
(bad)
push
je
cmc
popf
lahf
pop
je
jne
mov
mov
add
mov
mov
xor
add
sub
mov
sub
mov
push
call
call
call
call
je
jmp
adc
mov
or
fwait
cmc
sub
hlt
mov
mov
push
call
call
call
call
je
jmp
sub
and
je
jbe
dec
bound
hlt
push
adc
popf
lea
xchg
test
je
jne
hlt
cmp
fwait
hlt
mov
pop
xchg
call
call
je
jmp
ins
ss
dec
jne
je
bound
repz
jne
xor
and
call
call
call
je
jmp
jb
sahf
pop
jne
je
and
and
hlt
add
add
add
call
call
je
jmp
cmp
cmp
je
aas
sub
jne
(bad)
sub
ret
add
push
call
call
call
call
je
jmp
xor
popa
dec
jne
je
adc
js
div
xor
test
cld
xchg
test
je
jne
stos
mov
outs
jo
dec
in
xchg
call
call
je
jmp
or
and
imul
hlt
psraw
call
call
call
je
jmp
jae
inc
mov
push
je
cmps
push
or
hlt
cmp
and
call
call
je
jmp
push
cmp
mov
push
je
xor
adc
div
mov
clc
inc
ret
add
call
call
call
call
je
jmp
cmp
sub
jne
je
out
inc
out
je
jne
in
inc
stos
fmul
add
test
je
jne
xor
push
push
imul
add
jmp
ins
mov
je
adc
div
js
pop
jl
fs
call
call
call
je
jmp
jns
in
jne
je
shr
add
div
addr16
and
call
call
je
jmp
add
xor
dec
add
div
cmp
iret
ret
mov
call
call
call
call
je
jmp
fcmovne
sub
jne
je
mov
div
lock
or
lea
xchg
test
je
jne
adc
push
ins
stos
outs
adc
add
call
call
je
jmp
pop
fld
cmps
repz
hlt
add
lea
call
call
call
je
jmp
dec
fs
jne
push
je
jge
loope
je
jne
gs
cmps
inc
add
add
call
je
jmp
lock
mov
or
and
mov
mov
ret
mov
call
call
call
call
je
jmp
test
or
mov
jne
ficom
cld
xchg
test
je
jne
dec
pop
pop
fisub
add
call
call
je
jmp
mov
push
je
lods
int3
(bad)
sub
hlt
into
cmp
lea
call
call
call
je
jmp
nop
ss
lock
je
mov
div
pop
loope
sub
call
call
je
jmp
pop
int
(bad)
jne
je
ins
sub
je
jne
mov
push
popa
ret
sub
call
call
call
call
je
jmp
cli
repz
mov
push
je
jne
fisttp
je
jne
lea
jp
xor
call
call
call
call
je
jmp
or
retf
nop
jne
je
adc
jb
div
in
in
adc
lea
xchg
test
je
jne
lea
and
or
bound
add
add
add
jmp
xor
je
mov
cmp
hlt
inc
pop
xor
lea
call
call
call
je
jmp
xchg
cmp
je
jns
mov
je
jne
dec
jecxz
dec
add
call
call
je
jmp
into
inc
dec
mov
dec
fs
jmp
sbb
inc
ret
shl
mov
xor
call
call
call
call
je
jmp
or
out
jne
je
add
in
div
jge
fdiv
xchg
test
je
jne
add
inc
push
ret
fdivr
and
add
add
add
jmp
cmc
shr
or
out
pop
je
jne
js
ja
lea
call
call
call
je
jmp
test
shl
or
(bad)
out
mov
adc
pop
add
call
call
je
jmp
in
outs
enter
je
xchg
hlt
(bad)
je
jne
retf
mov
pushf
shl
shr
popf
jne
mov
je
jmp
or
push
je
sbb
(bad)
hlt
xor
push
jmp
sahf
in
or
push
je
popf
ja
popa
je
jne
clc
stc
adc
je
jmp
adc
(bad)
jne
je
sbb
pop
ss
jne
sub
mov
je
jmp
ret
stos
shr
push
je
dec
aad
xor
adc
jmp
je
jmp
arpl
sub
push
je
repnz
ss
je
jne
jns
sub
push
jmp
movs
inc
(bad)
push
je
sub
xor
div
cmp
add
add
call
call
call
je
jmp
and
push
je
sub
xlat
ins
je
jne
lods
sbb
loopne
(bad)
shl
inc
and
mul
push
mov
add
call
call
call
call
je
jmp
mov
push
je
pop
mov
jne
ss
popa
lea
xchg
test
je
jne
push
test
mov
add
add
call
je
jmp
pop
pop
xchg
ret
je
test
div
ret
mov
fs
call
call
call
je
jmp
retf
inc
jne
je
xor
inc
je
jne
cwde
stos
shr
add
call
call
je
jmp
out
outs
mov
lds
and
cs
lds
mov
mov
mov
mov
push
call
call
call
call
je
jmp
pop
mov
jp
push
je
jmp
push
inc
je
jne
cmp
push
push
mov
push
call
call
call
call
je
jmp
adc
loope
jne
je
nop
inc
mov
jne
xor
fs
xchg
test
je
jne
bound
lods
mov
add
add
call
je
jmp
or
or
push
je
jo
add
je
jne
mov
cwde
push
lea
call
call
call
je
jmp
add
je
out
adc
je
jne
or
call
call
je
jmp
lock
push
jne
je
fbstp
rol
je
jne
jl
les
push
call
call
call
call
je
jmp
cdq
clc
cmp
jne
je
or
jne
dec
or
and
xchg
test
je
jne
xchg
sbb
push
xchg
call
call
je
jmp
aaa
jo
fidiv
je
dec
in
shl
sbb
lea
call
call
call
je
jmp
lods
add
push
je
not
or
hlt
sub
ja
add
call
call
je
jmp
rol
je
imul
(bad)
sub
add
add
add
call
call
call
je
jmp
jbe
add
jne
je
(bad)
jbe
fs
jne
div
and
xchg
test
je
jne
dec
mov
jp
jnp
call
add
call
je
jmp
hlt
xchg
pop
bound
je
cmp
test
je
jne
cmovp
lea
call
call
call
je
jmp
lods
jne
jmp
pop
test
mov
add
dec
call
call
je
jmp
leave
cld
mov
jne
je
jmp
hlt
xchg
jno
xchg
ret
mov
call
call
call
call
je
jmp
pop
lods
cmp
xor
adc
hlt
xor
fs
xchg
test
je
jne
jle
mov
xchg
call
call
je
jmp
cmp
push
je
push
lds
je
jne
xor
add
add
add
call
call
je
jmp
fiadd
loopne
push
je
sub
mov
div
push
es
call
add
add
add
jmp
jne
mov
jne
je
(bad)
stos
loop
je
jne
outs
stos
mov
call
call
call
call
je
jmp
sbb
ret
jne
je
js
cdq
mov
adc
pop
push
lea
xchg
test
je
jne
lds
shl
add
add
add
jmp
loopne
xor
jne
je
mov
div
and
fs
call
call
call
je
jmp
mov
(bad)
mov
je
inc
and
jp
div
aas
xor
push
call
call
je
jmp
enter
jne
je
mov
pop
je
jne
test
adc
sub
call
call
call
call
je
jmp
inc
mov
je
sub
jl
je
jne
cs
sahf
loope
(bad)
call
call
call
call
je
jmp
mov
xor
xlat
push
jg
div
std
rcl
out
lea
xchg
test
je
jne
sub
cmps
sub
fimul
add
add
call
je
jmp
test
das
test
je
inc
or
in
div
inc
in
sub
add
add
call
call
je
jmp
mov
movs
out
push
je
mov
div
sub
mov
add
call
call
je
jmp
or
outs
jne
je
lahf
adc
arpl
hlt
cmp
daa
ret
shl
mov
xor
call
call
call
call
je
jmp
xor
es
jne
je
xor
jne
mov
pusha
lea
xchg
test
je
jne
fs
imul
test
xchg
call
call
je
jmp
(bad)
pop
(bad)
jne
je
movs
loop
jl
div
inc
adc
add
add
add
call
call
je
jmp
into
sub
push
je
dec
cmp
jne
test
add
call
call
je
jmp
aas
push
xor
jne
je
(bad)
dec
sar
cmp
pushf
shl
shr
popf
jne
mov
je
jmp
add
push
je
add
div
aam
std
sbb
jmp
iret
(bad)
cli
shl
or
cmp
je
jne
jnp
fsubr
add
je
jmp
push
xchg
jne
je
mov
div
mov
jmp
retf
inc
mov
or
fucomp
sti
je
jne
or
in
xchg
jmp
je
jmp
jge
aaa
mov
pop
or
js
div
aaa
mov
ds
jmp
retf
ss
je
test
jo
div
(bad)
xchg
sbb
add
add
call
call
call
je
jmp
inc
cmps
inc
repz
je
inc
pop
popa
add
hlt
or
mov
sub
sub
mov
shl
inc
and
mul
push
mov
add
call
call
call
call
je
jmp
xor
fidiv
jne
je
clc
sbb
je
jne
cld
xor
(bad)
add
test
je
jne
pop
mov
test
xchg
call
call
je
jmp
inc
popa
add
jne
je
sar
hlt
mov
sub
add
add
add
add
call
je
jmp
cmp
push
je
bound
jne
cwde
fdivr
add
call
call
je
jmp
mov
mov
or
mov
imul
mov
add
add
call
pop
mov
mov
call
ret
mov
call
call
call
call
je
jmp
int
call
sbb
jne
enter
lea
xchg
not
and
cmp
je
cmp
add
add
add
add
add
add
jmp
or
cmps
call
dec
xchg
mov
hlt
push
fs
xchg
test
je
jne
push
lods
dec
loop
scas
bound
add
call
call
je
jmp
push
pop
popf
pop
jne
je
cdq
sbb
mov
div
cmp
fs
call
call
call
je
jmp
cmc
cs
pushf
jne
je
in
jp
mov
mov
add
dec
call
call
je
jmp
popf
cmps
leave
adc
je
shr
jne
ins
stc
adc
ret
jmp
xor
cmp
xchg
call
call
je
jmp
mov
je
pop
xor
div
cwde
adc
call
add
call
call
je
jmp
mov
fcmove
jne
je
rcl
arpl
hlt
mov
and
add
sub
dec
lea
call
call
call
call
je
jmp
(bad)
aaa
mov
jne
je
inc
or
div
lods
retf
mov
cld
xchg
test
je
jne
add
cwde
js
add
call
call
je
jmp
cmc
adc
jne
je
push
daa
cmp
cdq
jae
lea
call
call
call
je
jmp
cmp
je
add
jne
dec
mov
mov
call
call
je
jmp
dec
inc
and
dec
adc
div
rcl
sbb
mov
call
call
call
call
je
jmp
dec
xor
or
das
mov
je
jne
je
out
lea
xchg
test
je
jne
push
js
movs
dec
mov
fild
add
add
add
jmp
xchg
sub
jne
je
dec
fisub
xlat
je
jne
mov
add
add
add
add
call
call
je
jmp
xchg
js
lods
jne
je
pop
push
and
jne
pop
inc
add
add
call
call
je
jmp
pop
pusha
shr
push
je
cwde
adc
hlt
push
add
xor
add
sbb
in
jmp
pop
ret
inc
repz
inc
iret
xchg
call
call
call
call
je
jmp
jp
das
in
jne
je
ss
scas
je
jne
ficom
and
xchg
not
and
cmp
je
and
call
call
call
call
je
jmp
cmp
je
leave
call
cmps
je
jne
lods
rol
lea
xchg
test
je
jne
cmp
in
xchg
call
call
je
jmp
fnstcw
je
mov
div
aad
mov
lea
call
call
call
je
jmp
pop
or
je
movs
shl
div
out
push
and
call
call
je
jmp
or
jmp
push
je
(bad)
out
push
mov
hlt
out
(bad)
mov
popf
in
inc
dec
sub
das
or
add
add
add
jmp
fisubr
je
mov
div
pop
aam
sahf
lea
call
add
call
call
je
jmp
lock
je
scas
sbb
mov
hlt
push
xchg
movs
out
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
cld
popf
leave
pop
jne
je
cmp
jnp
div
imul
and
xchg
test
je
jne
cmp
sub
add
call
call
je
jmp
je
or
jne
je
push
lods
sti
test
ret
dec
add
add
call
call
je
jmp
and
add
push
je
sub
jne
mov
mov
add
dec
call
call
je
jmp
enter
jne
je
ja
stos
shl
xchg
sbb
call
call
call
call
je
jmp
hlt
fistp
sub
je
test
xchg
je
jne
pushf
mov
sbb
add
test
je
jne
inc
aam
cs
add
call
call
je
jmp
mov
push
je
mov
div
dec
es
sbb
fs
call
call
call
je
jmp
int3
mov
mov
xchg
test
sub
cmp
jge
add
call
call
je
jmp
in
pushf
stos
loopne
push
je
or
mov
adc
add
add
mov
mov
mov
push
popf
inc
pushf
pop
mov
mov
mov
mov
call
call
call
call
je
jmp
retf
lea
je
xchg
enter
div
and
iret
lea
xchg
not
and
cmp
je
dec
xchg
call
add
add
add
add
add
jmp
cmp
jne
je
ret
enter
hlt
sbb
jecxz
lea
xchg
test
je
jne
mov
cmp
add
add
call
je
jmp
mov
push
je
into
cmp
jne
ret
enter
add
add
add
call
call
je
jmp
sbb
xor
xor
hlt
leave
adc
popf
add
call
call
je
jmp
jns
jge
jne
je
out
ins
push
jl
div
push
dec
data16
int
push
retf
jle
add
call
call
je
jmp
rcr
inc
jne
je
fistp
fnstenv
hlt
sar
and
call
add
call
call
je
jmp
jecxz
cld
and
je
sub
jne
mov
add
sub
dec
lea
call
call
call
call
je
jmp
pop
in
xor
je
icebp
sub
div
or
or
lea
xchg
test
je
jne
jl
je
sbb
xor
xchg
call
call
je
jmp
xor
push
je
sbb
dec
imul
call
call
je
jmp
sbb
mov
std
icebp
xor
out
xchg
or
add
add
call
je
jmp
scas
popf
pusha
out
push
je
(bad)
je
jne
aad
jg
ret
lea
mov
call
call
call
call
je
jmp
fneni(8087
add
jne
je
cmp
hlt
cmp
cmps
lea
xchg
test
je
jne
mov
out
cmp
xlat
inc
xchg
call
call
je
jmp
loopne
mov
jne
je
adc
div
sub
fs
call
call
call
je
jmp
and
je
iret
cs
je
jne
pop
xor
and
call
call
je
jmp
push
push
dec
jne
je
out
call
jne
adc
ret
jmp
xchg
std
dec
xor
ffreep
into
cmp
add
call
call
call
je
jmp
adc
jle
jne
je
popa
mov
jne
inc
mov
lods
lea
xchg
not
and
cmp
je
cmp
add
add
add
add
add
add
jmp
cdq
and
je
xchg
and
jne
fnstenv
and
xchg
test
je
jne
mov
addr16
xor
lods
xchg
call
call
je
jmp
or
ret
pop
jne
je
aas
mov
pop
je
jne
dec
and
call
call
call
je
jmp
dec
sbb
jne
je
retf
xchg
cld
and
hlt
xchg
mov
mov
add
add
call
je
jmp
hlt
add
or
xchg
xlat
(bad)
je
jne
fsubr
icebp
push
ret
jmp
test
mov
xchg
call
call
je
jmp
out
ss
push
je
imul
jne
jle
int3
ror
add
add
add
call
call
je
jmp
jae
aas
xchg
jne
je
or
div
cmc
leave
push
push
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
pusha
inc
add
or
clc
jmp
ins
push
cld
xchg
test
je
jne
aaa
xor
sbb
jmp
add
add
call
je
jmp
jp
sbb
or
cmc
jg
je
jne
adc
lds
add
add
call
call
je
jmp
push
daa
fs
jne
je
xor
jne
pushw
outs
mov
add
add
call
je
jmp
retf
push
jne
je
cmp
mov
je
fdivr
call
call
call
call
je
jmp
inc
jl
push
je
call
div
xchg
ss
lea
xchg
test
je
jne
sbb
sahf
jmp
xchg
dec
xchg
call
call
je
jmp
mov
daa
push
je
jne
fld
aad
lea
call
call
call
je
jmp
mov
jl
jne
je
add
repnz
hlt
fs
and
call
call
je
jmp
xor
lods
gs
je
xor
sbb
je
jne
jnp
lahf
and
mov
add
mov
mov
mov
push
popf
dec
pushf
pop
mov
mov
mov
mov
call
call
call
call
je
jmp
mov
inc
mov
(bad)
pusha
xor
div
push
fs
xchg
not
and
cmp
je
dec
mov
add
call
call
call
je
jmp
int
or
jne
je
jge
jmp
hlt
mov
and
xchg
test
je
jne
pusha
iret
mov
adc
mov
add
call
call
je
jmp
mov
or
ja
ss
jne
popa
cmps
jns
lea
call
call
call
je
jmp
pop
cmp
jne
je
push
dec
pop
xor
nop
stos
jnp
add
call
call
je
jmp
ret
stos
jmp
jle
adc
hlt
xor
or
dec
add
es
xchg
xchg
call
call
je
jmp
sbb
mov
jne
je
xchg
mov
ret
jne
add
arpl
fs
call
add
call
call
je
jmp
imul
clc
jne
je
stos
pop
iret
adc
hlt
add
or
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
fst
out
jne
je
mov
es
je
jne
mov
(bad)
out
fs
xchg
test
je
jne
aas
ret
ins
punpckldq
xchg
call
call
je
jmp
pusha
pushf
mov
or
sbb
push
je
jne
inc
mov
and
call
call
call
je
jmp
push
out
jno
jne
je
adc
in
je
jne
xor
and
call
call
je
jmp
pop
loope
mov
push
ds
or
hlt
stos
add
mov
add
call
call
call
je
jmp
pop
sbb
je
jmp
jne
add
sub
lea
xchg
test
je
jne
dec
cld
inc
xchg
popf
xor
xchg
call
call
je
jmp
repz
mov
cmp
jne
push
lea
add
add
add
call
call
je
jmp
pop
int3
cmc
dec
jne
je
cmp
sub
hlt
inc
mov
add
call
call
je
jmp
fs
dec
cmp
je
push
sbb
jne
push
jo
cmps
ret
jmp
scas
popf
mov
sub
add
add
add
add
add
jmp
movs
push
clc
cmps
jne
je
stos
cwde
push
pop
je
jne
sbb
fs
xchg
not
and
cmp
je
or
add
add
add
add
add
add
jmp
shl
mov
push
je
mov
mov
hlt
popf
jecxz
fisttp
add
test
je
jne
mov
sbb
call
call
je
jmp
mov
mov
push
je
data16
pop
je
jne
ja
sbb
lea
call
call
call
je
jmp
mov
push
je
js
rcr
div
or
retf
add
call
call
je
jmp
mov
clc
xchg
jne
je
mul
mov
je
jne
out
sbb
push
inc
nop
dec
adc
cmps
add
add
call
je
jmp
cmp
les
je
lods
push
pusha
test
div
inc
cld
pop
cmp
add
add
add
call
call
je
jmp
jno
in
cmp
je
push
bound
mov
push
lods
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
mov
push
je
jmp
hlt
mov
fs
xchg
test
je
jne
cmp
lea
jmp
jbe
add
call
call
je
jmp
sahf
mov
je
sub
sbb
adc
and
call
call
call
je
jmp
loopne
in
aaa
jne
je
dec
fidiv
hlt
xor
mov
add
call
call
je
jmp
shl
je
pusha
add
cmp
hlt
leave
fist
ret
call
call
call
call
je
jmp
stos
loop
adc
je
popf
fdiv
je
jne
mov
fs
xchg
test
je
jne
gs
and
xchg
call
call
je
jmp
imul
jne
je
aaa
icebp
mov
je
jne
mov
inc
dec
add
add
call
call
je
jmp
mov
push
je
imul
push
dec
call
call
je
jmp
jge
adc
jne
je
pop
jmp
xor
or
imul
pop
add
add
mov
mov
mov
call
mov
push
popf
inc
pushf
pop
mov
mov
mov
mov
call
call
call
call
je
jmp
leave
out
pushf
ins
jne
je
fcomp
jne
jb
int3
xor
xchg
not
and
cmp
je
cli
pop
and
add
add
call
call
call
je
jmp
push
mov
je
sbb
div
mov
and
xchg
test
je
jne
lods
xor
out
xchg
loop
xchg
call
call
je
jmp
sub
push
je
adc
xchg
inc
je
jne
sub
fs
call
call
call
je
jmp
loope
clc
retf
je
dec
enter
jne
and
pop
adc
add
add
call
je
jmp
cmp
das
jne
je
jbe
mov
je
jne
cmp
retf
lods
ret
jmp
(bad)
iret
pop
pop
popf
xchg
das
rol
add
add
add
jmp
cwde
cmps
adc
jne
je
les
sub
retf
lods
cmps
retf
lea
call
add
call
call
je
jmp
push
aas
xchg
pop
jne
je
fidiv
scas
je
jne
rol
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
(bad)
jne
je
lods
movs
push
xor
sbb
fs
xchg
test
je
jne
xchg
sub
xchg
call
call
je
jmp
es
jne
je
imul
hlt
jecxz
movs
xor
add
add
call
call
je
jmp
mov
push
je
xchg
jne
pop
or
add
call
call
je
jmp
xchg
xchg
lock
iret
sahf
fcom
je
jne
rcl
movs
popf
ret
lea
mov
call
call
call
call
je
jmp
mov
push
je
int
xchg
inc
je
jne
mov
fs
xchg
test
je
jne
push
or
jb
nop
push
inc
xchg
call
call
je
jmp
icebp
aad
es
je
js
cwde
das
je
jne
test
and
call
call
call
je
jmp
adc
jne
je
movs
cmp
div
cmp
xor
add
add
call
je
jmp
xor
inc
jne
je
or
ret
div
iret
iret
je
ret
jmp
jno
mov
icebp
popa
out
or
add
add
add
add
add
jmp
mov
fsubr
jne
je
push
jne
inc
je
jne
imul
cld
xchg
not
and
cmp
je
mov
pop
call
call
call
call
je
jmp
or
popa
jne
je
ret
xchg
je
jne
or
and
xchg
test
je
jne
je
rol
pop
xor
add
call
call
je
jmp
in
jmp
jne
je
sub
jg
je
jne
jecxz
mov
add
add
add
call
call
je
jmp
or
push
je
xor
int
je
jne
mov
add
dec
call
call
je
jmp
add
sbb
push
je
or
push
and
hlt
xchg
std
ret
jmp
sahf
cmp
into
pop
or
add
add
add
jmp
pusha
mul
jne
je
or
jne
(bad)
jnp
daa
lea
call
add
call
call
je
jmp
mov
push
je
sbb
jne
pop
push
or
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
daa
sar
or
push
or
mov
nop
lea
xchg
test
je
jne
push
fisttp
ret
and
add
add
call
je
jmp
mov
mov
jne
je
cld
dec
mov
hlt
push
inc
sbb
fs
call
call
call
je
jmp
ficomp
je
xchg
adc
jmp
add
dec
call
call
je
jmp
inc
sbb
or
adc
ds
jne
retf
jl
call
call
call
call
je
jmp
xor
neg
or
sbb
hlt
add
pop
xchg
lea
xchg
test
je
jne
inc
fwait
or
call
add
call
je
jmp
jge
call
or
pop
rol
je
jne
sti
xchg
aad
lea
call
call
call
je
jmp
je
and
enter
je
jne
inc
movs
mov
add
call
call
je
jmp
xor
je
aam
push
je
jne
dec
jno
dec
ret
mov
add
mov
mov
mov
call
mov
push
popf
dec
pushf
pop
mov
mov
mov
mov
call
call
call
call
je
jmp
adc
je
jo
nop
int3
je
jne
popw
push
loope
fs
xchg
not
and
cmp
je
mov
shr
add
add
add
add
add
add
jmp
dec
cmp
jnp
push
je
fnstsw
sbb
dec
jle
or
add
test
je
jne
mov
dec
frstor
add
call
call
je
jmp
sbb
fwait
jne
je
add
jne
sar
stos
(bad)
add
add
call
call
je
jmp
imul
or
inc
mov
hlt
mov
outs
inc
add
call
call
je
jmp
(bad)
pop
stos
inc
jne
je
(bad)
jne
aam
div
je
fwait
pusha
ret
jmp
dec
(bad)
repnz
xchg
call
call
je
jmp
repz
lods
out
jne
je
es
inc
je
jne
adc
and
call
add
call
call
je
jmp
xchg
out
adc
jne
je
and
div
sti
cld
test
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
ja
mov
or
and
je
jne
stos
sbb
cld
xchg
test
je
jne
fdivp
cmc
fidiv
add
call
call
je
jmp
fs
je
ficom
retf
je
jne
not
mov
fs
call
call
call
je
jmp
inc
cmp
je
dec
pop
sub
jne
pop
(bad)
mov
add
call
call
je
jmp
lods
sub
jne
je
fistp
je
jne
jge
adc
ret
lea
mov
call
call
call
call
je
jmp
repnz
jne
je
lods
cmp
adc
jg
cmp
lea
xchg
test
je
jne
inc
mov
lds
add
add
call
call
je
jmp
fld
or
sbb
je
jne
sub
and
call
call
call
je
jmp
sub
clc
jno
push
je
addr16
pop
iret
je
jne
out
bound
loop
add
dec
call
call
je
jmp
repz
mov
push
je
mov
div
mov
sub
ret
jmp
lock
xor
lods
or
retf
call
call
call
call
je
jmp
jecxz
pop
(bad)
jne
je
sub
addr16
jne
out
sti
test
xchg
not
and
cmp
je
popa
cmps
jl
add
add
call
call
call
je
jmp
cmp
je
(bad)
je
jne
dec
and
and
add
test
je
jne
xchg
sahf
or
sbb
and
add
add
call
je
jmp
lods
mov
je
push
div
push
or
lea
call
call
call
je
jmp
in
cmps
xor
or
sbb
arpl
hlt
xchg
loopne
jo
add
dec
call
call
je
jmp
ret
cmps
adc
push
je
mov
dec
je
jne
gs
cmp
ret
jmp
add
mov
cmc
xor
xchg
call
call
je
jmp
push
ror
jne
je
mov
and
pusha
pop
add
add
add
add
call
call
je
jmp
ins
mov
sbb
je
and
dec
pop
je
jne
pop
inc
imul
(bad)
pop
add
add
add
cmp
add
add
call
call
call
je
jmp
push
cmp
imul
or
mov
hlt
movs
dec
call
add
test
je
jne
mov
lea
jmp
out
xchg
call
call
je
jmp
loope
sub
push
je
lahf
xor
jne
sbb
fs
call
call
call
je
jmp
mov
dec
jne
je
fist
hlt
mov
add
dec
call
call
je
jmp
xchg
or
xor
or
out
add
fisttp
add
add
call
call
call
je
jmp
shufps
jne
je
xlat
mov
xor
div
popf
mov
ror
add
test
je
jne
mov
dec
out
cmp
add
call
call
je
jmp
inc
cmps
push
jecxz
push
je
xor
shr
out
mov
lea
call
call
call
je
jmp
sbb
cwde
push
jne
je
mov
inc
mov
pop
gs
fiadd
add
add
call
je
jmp
cmp
jl
jne
je
rcr
je
jne
xchg
movs
pop
sub
mov
add
mov
mov
mov
call
mov
push
popf
inc
pushf
pop
mov
mov
mov
mov
call
call
call
call
je
jmp
(bad)
scas
adc
jne
je
rcr
mov
xor
lea
xchg
not
and
cmp
je
test
call
call
call
call
je
jmp
ficom
or
mov
jne
pop
or
push
lea
xchg
test
je
jne
lods
leave
sub
rcl
add
add
add
add
jmp
push
xor
mov
and
mov
je
jne
enter
lea
call
call
call
je
jmp
add
push
and
je
push
jne
shl
hlt
mov
cmc
jo
add
dec
call
call
je
jmp
pushf
das
arpl
push
je
or
dec
cdq
je
jne
es
in
jmp
mov
bound
call
call
je
jmp
mov
sub
sub
jne
mov
out
lea
call
add
call
call
je
jmp
and
je
jb
(bad)
fbstp
hlt
daa
xchg
xchg
add
sub
dec
lea
call
call
call
call
je
jmp
cli
repnz
push
jne
je
rcl
mov
hlt
jmp
fs
xchg
test
je
jne
pop
les
xchg
call
call
je
jmp
sub
je
pop
cmps
std
fnsave
hlt
inc
neg
lea
call
call
call
je
jmp
nop
mov
je
into
scas
mov
hlt
jg
and
add
dec
call
call
je
jmp
call
or
xchg
sbb
je
jne
cdq
dec
mov
mov
add
call
call
call
je
jmp
cmp
inc
call
push
push
je
jne
int
lods
(bad)
add
test
je
jne
test
fdiv
shl
stos
xchg
call
call
je
jmp
shr
cs
je
xchg
jp
mov
div
pop
inc
inc
pusha
lea
call
call
call
je
jmp
inc
pop
push
jne
je
addr16
add
hlt
sbb
sbb
add
call
call
je
jmp
inc
stos
jge
jne
je
imul
xchg
mov
div
jecxz
or
add
add
add
add
add
add
jmp
sub
push
je
dec
ror
je
jne
push
mov
and
xchg
not
and
cmp
je
inc
les
add
add
add
add
add
jmp
popa
fdiv
aaa
jne
je
cmp
jne
adc
and
xchg
test
je
jne
xchg
mov
outs
adc
add
add
add
jmp
retf
addr16
add
je
jne
popf
aam
cmp
fs
call
call
call
je
jmp
push
jle
stos
jne
je
mov
div
aam
ins
jmp
add
dec
call
call
je
jmp
dec
inc
cmc
push
jne
je
dec
retf
adc
je
jne
ins
xchg
push
ret
jmp
add
out
cmps
or
call
call
je
jmp
lock
or
leave
call
std
out
lea
call
add
call
call
je
jmp
jmp
or
lahf
jg
je
jne
aam
(bad)
mov
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
mov
sub
leave
xor
je
jne
mov
fs
xchg
test
je
jne
mov
sub
add
add
call
je
jmp
push
fdiv
jne
je
push
div
mov
fs
call
call
call
je
jmp
xchg
or
jne
je
es
adc
jp
push
add
call
call
je
jmp
out
inc
scas
daa
jne
je
movs
jmp
std
xor
outs
ret
call
call
call
call
je
jmp
stc
out
(bad)
jmp
push
je
std
mov
jne
and
fs
xchg
test
je
jne
fimul
xchg
add
add
call
je
jmp
dec
add
je
pop
mov
jne
inc
into
cmc
push
lea
call
call
call
je
jmp
dec
gs
fidiv
je
jl
or
hlt
cmp
push
add
call
call
je
jmp
clc
mov
add
push
je
cmp
push
(bad)
je
jne
js
repz
mov
add
mov
mov
mov
call
mov
push
popf
dec
pushf
pop
mov
mov
mov
mov
call
call
call
call
je
jmp
or
je
add
aam
je
jne
or
aad
lea
xchg
not
and
cmp
je
bound
add
call
call
call
je
jmp
lock
lds
je
in
jae
je
jne
cdq
mov
dec
lea
xchg
test
je
jne
xor
cmp
xchg
call
call
je
jmp
je
jmp
or
aad
jns
div
in
iret
xor
add
add
call
call
je
jmp
and
jle
jne
je
push
or
add
js
not
add
dec
call
call
je
jmp
xchg
jmp
jae
push
je
xchg
hlt
es
jp
ret
jmp
mov
add
xchg
call
call
je
jmp
shr
sub
or
push
mov
je
jne
addr16
pop
lea
call
add
call
call
je
jmp
dec
cmp
or
pop
fwait
hlt
je
jne
pushf
shr
add
sub
dec
lea
call
call
call
call
je
jmp
jnp
mov
jne
je
movs
or
push
hlt
leave
or
arpl
add
test
je
jne
iret
mov
and
add
call
call
je
jmp
pushf
mov
outs
jne
je
out
mov
je
jne
push
add
lea
call
call
call
je
jmp
sti
cmp
or
sbb
dec
je
jne
iret
cmp
dec
call
call
je
jmp
jb
xchg
pop
jne
je
cwde
push
ins
icebp
je
jne
into
sub
mov
add
call
call
call
je
jmp
fisub
jne
je
repz
hlt
(bad)
fmul
xchg
test
je
jne
pop
pop
pushf
mov
xchg
call
call
je
jmp
or
adc
jne
je
imul
movaps
add
add
call
call
je
jmp
adc
or
push
je
gs
inc
je
jne
push
fld
sub
add
add
call
je
jmp
test
xchg
mov
push
je
daa
jb
and
hlt
out
dec
push
ret
jmp
call
call
call
call
je
jmp
ins
mov
push
jne
je
mul
imul
je
jne
inc
stos
stos
xlat
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
scas
mov
xor
push
je
mov
dec
je
jne
mov
fs
xchg
test
je
jne
push
dec
pop
retf
aas
addr16
lea
add
add
add
jmp
into
jle
out
push
je
fld
out
je
jne
mov
dec
mov
add
add
call
call
je
jmp
ss
sub
pop
out
push
je
jne
jmp
fldenv
add
call
call
je
jmp
push
jnp
sbb
je
jmp
jno
je
jne
mov
loopne
ret
jmp
pop
fld
shl
jbe
xchg
call
call
je
jmp
inc
loopne
call
xchg
stos
dec
cs
jne
mul
inc
push
fs
call
add
call
call
je
jmp
or
cmc
shl
or
push
jne
icebp
fcmovnu
(bad)
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
into
leave
lds
push
je
sbb
div
dec
xor
cmp
fs
xchg
test
je
jne
or
jmp
enter
call
call
je
jmp
gs
je
in
outs
loope
div
inc
popf
std
ret
lea
call
call
call
je
jmp
das
data16
imul
(bad)
je
jne
iret
jl
pop
add
call
call
je
jmp
fwait
movs
mov
or
mov
data16
jne
xor
add
add
call
call
call
je
jmp
fwait
inc
rcl
dec
lods
mov
hlt
outs
cld
jle
lea
xchg
test
je
jne
xchg
cmp
lahf
out
xchg
fild
add
add
add
jmp
jmp
inc
jecxz
push
je
cld
jne
dec
je
jne
or
and
call
call
call
je
jmp
xchg
xchg
add
add
div
adc
add
dec
call
call
je
jmp
test
test
push
je
leave
pop
sub
je
jne
in
push
mov
xchg
add
add
and
inc
adc
mov
dec
lea
inc
push
pop
add
dec
test
jne
pop
mov
call
call
call
call
je
jmp
jns
ficomp
test
xchg
loopne
jp
lea
xchg
not
and
cmp
je
push
jo
call
call
call
call
je
jmp
xchg
sub
test
(bad)
icebp
gs
je
jne
pop
jl
call
and
shl
and
fsub
push
xchg
xchg
call
call
je
jmp
mov
sbb
je
mov
div
cmc
mov
and
call
call
call
je
jmp
sub
je
sbb
les
je
jne
xor
loop
add
call
call
je
jmp
icebp
sub
or
(bad)
inc
and
div
xor
push
ret
jmp
stc
jnp
xor
je
inc
add
add
add
jmp
push
(bad)
jne
je
mov
mov
ins
jbe
sub
call
add
call
call
je
jmp
mov
push
je
pop
lds
div
rol
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
inc
fcom
jne
je
rcl
loopne
div
mov
fs
xchg
test
je
jne
ret
jo
fdiv
push
loope
add
call
call
je
jmp
test
push
je
test
out
div
pop
mov
and
call
call
call
je
jmp
sub
je
add
mov
hlt
or
add
call
call
je
jmp
ja
in
shl
or
adc
jne
jecxz
add
ret
lea
mov
call
call
call
call
je
jmp
in
jl
jne
je
xor
mov
je
jne
push
out
push
cld
xchg
test
je
jne
xchg
arpl
cmps
xchg
call
call
je
jmp
cmc
inc
pop
or
je
imul
je
jne
xchg
pop
les
lea
call
call
call
je
jmp
daa
div
or
cmp
hlt
gs
movs
add
call
call
je
jmp
stos
mov
je
stc
nop
cmp
je
jne
data16
jnp
jmp
mov
in
fistp
mov
add
add
add
add
add
jmp
repnz
inc
push
jne
je
push
inc
out
mov
hlt
or
fs
xchg
not
and
cmp
je
je
ret
call
call
call
call
je
jmp
adc
xchg
int
push
je
arpl
mov
hlt
loopne
out
lea
xchg
test
je
jne
push
out
aam
push
out
cmp
add
add
call
je
jmp
into
xchg
or
icebp
retf
div
fcom
sub
lea
call
call
call
je
jmp
mov
inc
nop
jne
je
pushf
shr
je
jne
add
inc
icebp
add
call
call
je
jmp
ret
in
add
scas
(bad)
je
jne
pop
lds
ret
jmp
mov
mov
and
add
add
call
je
jmp
add
test
or
stc
adc
je
jne
mov
fs
call
add
call
call
je
jmp
xchg
(bad)
xor
or
sbb
jne
jne
mov
pop
mov
lea
jmp
call
call
call
call
je
jmp
dec
or
sbb
adc
jne
leave
jbe
dec
lea
xchg
test
je
jne
sub
lea
jmp
leave
xchg
call
call
je
jmp
cld
xchg
jne
jne
je
int
dec
lock
jne
(bad)
icebp
lahf
jbe
fs
call
call
call
je
jmp
std
xor
jne
je
push
mov
hlt
pop
sbb
add
call
je
jmp
cmps
shr
push
je
push
adc
je
jne
stos
xchg
push
adc
call
call
call
call
je
jmp
ins
test
mov
test
repnz
push
xchg
sbb
lea
xchg
test
je
jne
iret
aas
repz
and
add
add
call
je
jmp
mov
xchg
je
mov
mov
je
jne
iret
ins
jecxz
lea
call
call
call
je
jmp
mov
push
je
sti
(bad)
mov
hlt
outs
in
add
call
call
je
jmp
div
fmul
push
je
jno
sbb
jne
out
outs
adc
mov
add
add
mov
mov
mov
mov
call
call
call
call
je
jmp
pop
and
jne
je
shr
leave
xor
hlt
call
cld
xchg
not
and
cmp
je
daa
(bad)
add
add
add
add
add
jmp
xlat
cmp
jne
je
add
div
sbb
jge
lea
xchg
test
je
jne
cmps
cmps
inc
int
call
call
call
je
jmp
mov
aam
jne
je
mov
div
out
jo
lea
call
call
call
je
jmp
pop
cwde
ins
xchg
jne
je
xchg
out
into
je
jne
stos
movs
sti
push
add
call
call
je
jmp
movs
pop
push
dec
jne
je
loope
pop
retf
je
jne
in
out
cmp
jmp
push
mov
fmul
inc
mov
add
add
add
jmp
shl
adc
je
xchg
adc
div
or
and
call
add
call
call
je
jmp
xchg
ins
and
sub
add
je
jne
repnz
sbb
add
sub
dec
lea
call
call
call
call
je
jmp
pop
ret
loopne
jne
je
jo
sub
je
jne
ss
and
xchg
test
je
jne
xchg
fs
mov
aaa
addr16
xchg
call
call
je
jmp
or
jne
je
outs
ret
je
jne
inc
mov
and
call
call
call
je
jmp
rol
jne
je
aam
in
je
jne
xchg
dec
cmp
add
dec
call
call
je
jmp
adc
cld
add
je
dec
or
dec
je
jne
or
ret
lea
mov
call
call
call
call
je
jmp
mov
xor
push
je
pop
xor
div
and
lea
xchg
test
je
jne
add
cmp
add
call
call
je
jmp
mov
push
je
inc
push
(bad)
je
jne
mov
clc
jg
fs
call
call
call
je
jmp
stc
or
jbe
push
je
mov
div
scas
rcr
add
call
call
je
jmp
cmp
or
stc
mov
je
jne
(bad)
ret
jmp
es
fsubr
add
add
call
call
call
je
jmp
xchg
je
addr16
fsub
div
xchg
push
lea
xchg
not
and
cmp
je
(bad)
dec
push
call
call
call
call
je
jmp
retf
cmp
je
fdivrp
in
in
div
xchg
repz
lea
xchg
test
je
jne
inc
(bad)
jge
popa
pusha
jb
add
call
call
je
jmp
stc
pop
rcr
cli
lahf
adc
hlt
or
and
call
call
call
je
jmp
cmp
fwait
into
jne
je
mov
div
call
add
dec
call
call
je
jmp
mov
aad
jne
je
dec
inc
inc
cmp
hlt
pop
push
dec
inc
ret
jmp
fst
daa
ss
cli
or
add
call
call
je
jmp
mov
inc
in
push
je
push
cmp
outs
je
jne
cli
mov
mov
call
add
call
call
je
jmp
pop
jb
mov
push
je
addr16
sar
je
jne
pop
push
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
leave
dec
and
push
je
mov
sbb
test
pop
jecxz
fs
xchg
test
je
jne
jb
lea
jmp
cmp
add
add
add
jmp
fst
inc
mov
cmc
dec
dec
call
mov
add
add
add
call
call
je
jmp
ror
sbb
jne
je
(bad)
adc
div
mov
out
into
add
call
call
je
jmp
call
or
fld
je
jne
bnd
mov
add
call
call
call
je
jmp
shl
mov
inc
shr
hlt
jno
xlat
pop
lea
xchg
test
je
jne
call
sbb
add
add
add
jmp
sbb
or
je
cmp
repnz
div
xchg
jae
jge
fs
call
call
call
je
jmp
mov
push
je
imul
hlt
jle
call
dec
call
call
je
jmp
fld
je
sub
xor
je
jne
clc
mov
add
add
mov
mov
mov
dec
lea
inc
push
pop
add
dec
test
jne
mov
call
call
call
call
je
jmp
gs
je
lods
dec
pushf
mov
hlt
retf
retf
lea
xchg
not
and
cmp
je
jp
mov
add
add
add
add
add
jmp
jg
push
div
je
pop
test
inc
je
jne
add
fs
xchg
test
je
jne
popf
sbb
stc
xchg
call
call
je
jmp
and
push
je
jae
sub
je
jne
bound
add
add
add
call
call
je
jmp
outs
jle
stos
jne
je
stc
cmp
div
daa
loope
nop
add
call
call
je
jmp
in
push
pusha
jne
je
sub
jne
jnp
mov
mov
dec
xchg
push
mov
jle
add
call
call
je
jmp
cmp
pusha
lods
jne
je
inc
mov
jne
jmp
add
add
add
add
call
call
je
jmp
out
add
jne
je
sbb
jne
adc
fdivr
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
fidivr
pushf
jne
je
out
or
jne
jo
test
lea
xchg
test
je
jne
in
adc
dec
xchg
call
call
je
jmp
test
(bad)
mov
push
je
xor
ja
div
adc
cld
jo
fs
call
call
call
je
jmp
ins
and
cli
jne
je
or
(bad)
jnp
div
xchg
pop
sar
add
call
call
je
jmp
std
je
push
push
je
jo
sub
xor
mov
mov
call
call
call
call
je
jmp
call
stc
jne
je
ja
bound
repnz
and
xchg
test
je
jne
sub
dec
sub
adc
add
add
add
jmp
jge
cs
jne
je
inc
add
hlt
xchg
je
pop
lea
call
call
call
je
jmp
push
fadd
adc
push
scas
push
push
je
jne
hlt
add
push
add
call
call
je
jmp
dec
pop
sub
jne
je
ret
fidiv
hlt
je
fs
ret
jmp
xlat
shl
add
add
add
add
add
add
jmp
(bad)
ss
jne
je
iret
dec
or
div
cmps
popa
and
and
xchg
not
and
cmp
je
sti
or
add
add
call
call
call
je
jmp
cwde
outs
jmp
(bad)
bound
hlt
aaa
jmp
xchg
lea
xchg
test
je
jne
aad
jmp
jge
add
call
call
je
jmp
(bad)
sbb
je
mov
div
sub
fs
call
call
call
je
jmp
aam
lea
fisttp
and
je
jne
shr
add
add
dec
call
call
je
jmp
mov
push
je
pop
loopne
sub
hlt
fcmovne
mov
ret
jmp
xchg
in
push
sbb
add
call
call
je
jmp
stos
repnz
push
je
popf
int3
leave
and
div
push
jbe
add
add
add
add
call
call
je
jmp
ds
cmp
div
daa
or
pop
mov
lea
jmp
call
call
call
call
je
jmp
movs
fstp
jne
je
inc
jp
call
(bad)
pusha
mov
cld
xchg
test
je
jne
mov
jmp
push
xchg
call
call
je
jmp
cli
pusha
call
(bad)
div
leave
cmp
add
add
add
call
call
je
jmp
shr
jmp
adc
jne
inc
enter
add
dec
call
call
je
jmp
out
dec
out
push
je
mov
div
sub
add
add
add
add
add
add
jmp
mov
xchg
mov
push
je
push
hlt
stos
inc
je
jne
cmp
push
lea
xchg
test
je
jne
mov
shl
xchg
and
add
add
call
je
jmp
jae
mov
or
(bad)
je
jne
jns
leave
mov
fs
call
call
call
je
jmp
push
aam
jne
je
push
pop
mov
hlt
xchg
and
add
add
call
je
jmp
lds
or
lea
sub
hlt
push
cmp
arpl
mov
add
mov
mov
mov
add
mov
call
call
call
call
je
jmp
jmp
push
addr16
je
mov
in
je
jne
repnz
cld
xchg
not
and
cmp
je
dec
dec
test
add
add
call
call
call
je
jmp
push
out
js
jne
je
rcr
sbb
out
test
and
xchg
test
je
jne
neg
dec
outs
jl
cld
xchg
call
call
je
jmp
cwde
fwait
inc
mov
push
je
fcom
fild
div
push
xor
lea
call
call
call
je
jmp
push
mov
je
call
hlt
mov
lods
lea
add
add
call
je
jmp
aaa
inc
cmp
push
je
loop
mov
jne
mov
jmp
js
imul
add
add
call
je
jmp
xor
cld
mov
push
je
adc
div
imul
mov
call
add
call
call
je
jmp
push
fidiv
or
(bad)
cmp
je
jne
sub
ret
sub
dec
lea
call
call
call
call
je
jmp
add
push
je
jnp
into
ja
div
aad
ror
and
xchg
test
je
jne
cdq
loope
pusha
add
or
and
add
add
call
je
jmp
mov
push
(bad)
jne
je
mov
div
push
dec
pop
(bad)
lea
call
call
call
je
jmp
(bad)
dec
mov
push
je
add
into
adc
hlt
and
jnp
add
dec
call
call
je
jmp
mov
jne
je
pusha
pop
loope
je
jne
mov
lea
mov
call
call
call
call
je
jmp
mov
push
je
lods
leave
js
je
jne
jp
dec
mov
xchg
test
je
jne
push
jb
rol
add
add
add
jmp
pop
mov
or
push
cli
(bad)
je
jne
fmul
and
call
call
call
je
jmp
fild
mov
je
(bad)
fimul
movs
je
jne
xor
imul
add
add
add
jmp
push
ds
jne
je
fs
iret
je
jne
ins
cmp
adc
jmp
or
add
add
add
add
add
add
jmp
xchg
outs
scas
mov
push
je
mov
div
shl
lea
xchg
not
and
cmp
je
imul
add
add
add
add
add
jmp
cdq
dec
jb
jne
je
jge
es
div
loop
and
lea
xchg
test
je
jne
cmc
outs
sub
imul
add
jmp
or
adc
je
int3
sets
je
jne
sub
sub
add
add
add
call
call
je
jmp
out
in
and
int3
adc
hlt
cmc
in
in
sub
add
add
call
je
jmp
jmp
or
test
xor
jle
mov
ret
jmp
movs
retf
or
cmp
call
call
je
jmp
in
mov
je
adc
ja
je
jne
pop
sbb
cld
lea
call
add
call
call
je
jmp
mov
push
je
mov
sub
je
jne
mov
add
not
not
and
not
ret
call
call
call
call
je
jmp
out
mov
jne
je
add
leave
je
jne
mov
fs
xchg
not
and
cmp
je
stc
mov
call
call
call
call
je
jmp
fld
push
jne
je
ins
rcl
div
fdivr
int3
mov
xchg
test
je
jne
lock
sar
fnsave
add
call
call
je
jmp
xchg
mov
or
je
cwde
mov
je
jne
cmps
es
cmp
add
add
call
call
je
jmp
or
pop
shl
or
repnz
je
jne
(bad)
push
clc
aam
add
dec
call
call
je
jmp
aad
push
sbb
push
je
lahf
inc
inc
sub
hlt
test
jmp
ret
jmp
jo
sbb
xchg
call
call
je
jmp
scas
and
or
fstp
hlt
fbld
inc
(bad)
lea
call
add
call
call
je
jmp
cmp
adc
jne
je
push
lods
dec
inc
je
jne
retf
cmc
lds
jmp
ret
not
call
mov
not
mov
call
and
ret
fwait
mov
mov
add
add
add
add
add
jmp
loop
imul
je
jne
cmp
movs
add
add
not
and
cmp
je
ins
shr
call
call
call
call
je
jmp
sub
xlat
adc
je
fadd
jne
xor
sar
xchg
test
je
jne
mov
push
cmp
add
call
call
je
jmp
mov
je
int3
in
adc
jne
cmc
mov
and
call
call
call
je
jmp
cmp
je
adc
hlt
push
fs
add
call
call
je
jmp
mov
push
je
mov
enter
jne
or
jle
ret
jmp
ins
and
push
call
call
je
jmp
outs
das
mov
or
sub
pop
je
jne
or
fs
call
add
call
call
je
jmp
movs
aam
push
jne
je
jle
xor
je
jne
sbb
ret
call
mov
mov
call
mov
call
call
ret
pop
stos
jmp
pop
jmp
test
call
call
call
call
je
jmp
inc
sub
je
cmp
hlt
mov
fs
xchg
not
and
cmp
je
(bad)
enter
add
add
add
add
add
add
jmp
push
inc
sahf
or
je
inc
dec
jbe
je
jne
loopne
out
fimul
add
test
je
jne
cmc
sub
cld
xchg
call
call
je
jmp
iret
jnp
sub
je
adc
jne
dec
pop
pusha
jge
fs
call
call
call
je
jmp
jnp
or
jne
je
mov
div
repz
and
call
call
je
jmp
mov
push
je
jne
and
je
jne
mov
jmp
pminsw
cld
xchg
arpl
call
call
je
jmp
fs
push
sub
je
(bad)
mov
repz
jne
sub
idiv
call
add
call
call
je
jmp
jbe
call
dec
pop
inc
je
jne
cmp
ret
mov
call
and
mov
mov
xchg
call
xchg
and
or
call
not
ret
push
mov
lock
inc
movs
and
sbb
icebp
ror
inc
mov
add
add
call
call
call
je
jmp
lock
clc
jne
je
push
pop
jne
je
jne
add
cwde
dec
lea
xchg
not
and
cmp
je
cs
add
call
call
call
je
jmp
retf
cld
lods
cmp
push
mov
xlat
je
jne
nop
jge
fs
xchg
test
je
jne
push
xor
inc
repnz
xchg
call
call
je
jmp
fst
je
sbb
(bad)
stos
je
jne
data16
push
lea
call
call
call
je
jmp
sub
or
cmps
iret
mov
outs
aad
arpl
add
add
call
je
jmp
pusha
mov
push
jne
je
retf
inc
add
je
jne
xor
jl
ret
jmp
sub
ja
add
call
call
je
jmp
mov
neg
jne
je
imul
aas
push
je
jne
stc
push
xor
add
add
add
add
call
je
jmp
mov
push
je
mov
dec
pusha
je
jne
fidivr
fld
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
lds
adc
je
mov
div
fucomi
jle
lea
xchg
test
je
jne
add
jmp
pop
xchg
call
call
je
jmp
and
pusha
dec
jne
je
jns
pop
pop
je
jne
stos
outs
out
cmp
fs
call
call
call
je
jmp
push
retf
jne
je
and
retf
je
jne
jno
in
add
call
call
je
jmp
repnz
(bad)
leave
sbb
div
mov
rcr
add
add
call
call
call
je
jmp
mov
push
je
mov
div
mov
fs
xchg
test
je
jne
mov
into
cmp
add
add
add
jmp
pop
mov
pushf
jne
je
mov
or
hlt
xchg
fwait
cmp
add
add
add
call
call
je
jmp
jl
jg
jne
je
pop
fnstsw
movs
je
jne
pop
add
dec
call
call
je
jmp
add
sbb
or
mov
jne
(bad)
loop
add
add
add
mov
xor
mov
mov
xor
add
mov
and
cmp
je
shr
dec
test
jne
jmp
shl
dec
test
jne
nop
mov
call
call
call
call
je
jmp
xor
or
fcomp
hlt
retf
sbb
add
not
and
cmp
je
or
call
call
call
call
je
jmp
outs
jp
mov
js
fwait
cld
je
jne
fnstenv
and
xchg
test
je
jne
inc
sbb
pop
pop
xchg
call
call
je
jmp
stos
dec
inc
scas
jne
je
movs
lods
cmp
jne
xchg
pop
pop
pop
lea
call
call
call
je
jmp
jp
sbb
or
ss
ins
je
jne
sbb
cli
add
call
call
je
jmp
push
push
je
inc
add
je
jne
jg
dec
xor
jmp
dec
sub
mov
add
call
call
je
jmp
jae
loop
jne
je
imul
jne
(bad)
ins
(bad)
fs
call
add
call
call
je
jmp
jge
fyl2x
jne
je
je
loopne
je
jne
out
(bad)
push
bnd
ret
sub
dec
lea
call
call
call
call
je
jmp
jp
push
shl
je
(bad)
jmp
jne
inc
push
out
lea
xchg
test
je
jne
push
add
fcmovu
xchg
call
call
je
jmp
lods
sub
jne
je
or
hlt
and
leave
mov
fs
call
call
call
je
jmp
fist
and
sar
fdiv
hlt
(bad)
jmp
call
call
je
jmp
sbb
ret
push
je
mov
div
pop
imul
ret
lea
mov
call
call
call
call
je
jmp
lods
dec
hlt
pop
jne
je
inc
fwait
or
je
jne
push
xchg
sbb
and
xchg
test
je
jne
mov
jae
jno
icebp
inc
xchg
call
call
je
jmp
loop
adc
jne
je
rol
es
jne
cld
stos
mov
lea
call
call
call
je
jmp
or
clc
and
je
jp
mov
div
ror
push
dec
add
call
call
je
jmp
xchg
sahf
xchg
js
push
je
test
out
je
jne
shl
jno
jmp
popf
call
call
call
call
je
jmp
std
out
imul
or
sbb
les
hlt
add
xchg
in
lea
xchg
not
and
cmp
je
mov
repz
call
call
call
je
jmp
mov
sbb
push
je
sahf
mov
jne
adc
sub
xchg
test
je
jne
adc
scas
idiv
and
add
add
call
je
jmp
xchg
dec
mov
xchg
jl
je
jne
ret
adc
pushf
lea
call
call
call
je
jmp
outs
xchg
repz
jne
je
cmc
xor
shl
hlt
pop
scas
test
add
call
call
je
jmp
leave
dec
cmp
jne
je
jne
push
jl
div
mov
jmp
cli
pusha
int3
fwait
punpckldq
xchg
call
call
je
jmp
lahf
xor
or
cmp
and
inc
xchg
lea
call
add
call
call
je
jmp
and
je
ret
mov
div
mov
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
(bad)
loopne
shl
or
sar
div
repnz
loopne
lea
xchg
test
je
jne
sub
jmp
mov
add
add
call
je
jmp
sub
xor
jne
je
xchg
inc
lods
mov
div
mov
fs
call
call
call
je
jmp
inc
add
or
mov
hlt
mov
test
add
add
jmp
inc
or
je
mov
aaa
je
jne
cmps
fist
add
add
add
add
add
add
jmp
add
push
je
retf
arpl
scas
je
jne
jae
repz
add
test
je
jne
mov
sub
fiadd
add
add
add
jmp
dec
fwait
dec
and
(bad)
jg
xchg
je
jne
mov
fs
call
call
call
je
jmp
das
jle
add
je
add
push
es
jne
(bad)
int
loopne
add
dec
call
call
je
jmp
add
out
push
je
sbb
dec
je
jne
inc
test
ret
mov
add
mov
xor
mov
mov
xor
add
mov
and
cmp
je
shr
dec
test
jne
jmp
shl
dec
test
jne
nop
mov
call
call
call
call
je
jmp
adc
je
sub
div
pop
jmp
and
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
neg
sahf
js
push
je
xor
div
sub
and
xchg
test
je
jne
sub
mov
xchg
xchg
call
call
je
jmp
xchg
(bad)
mov
or
retf
mov
hlt
adc
fs
call
call
call
je
jmp
or
je
jo
rcl
je
jne
mov
and
call
call
je
jmp
repz
push
je
dec
repnz
je
jne
or
jmp
push
int3
and
je
cdq
xchg
call
call
je
jmp
dec
sub
pop
jne
je
sti
xchg
jo
je
jne
lock
lea
call
add
call
call
je
jmp
add
pusha
xor
mov
div
push
(bad)
daa
ss
ret
sub
dec
lea
call
call
call
call
je
jmp
xor
cmp
or
and
je
jne
cdq
mov
and
xchg
test
je
jne
cmp
inc
rol
xchg
call
call
je
jmp
shr
mov
je
sub
shl
jmp
add
add
add
call
call
je
jmp
jb
cmp
push
je
pop
fmulp
or
hlt
jecxz
lods
add
call
call
je
jmp
popf
and
jne
je
data16
cdq
stc
cld
inc
lea
mov
call
call
call
call
je
jmp
xchg
xchg
mov
push
je
and
lea
hlt
clc
add
lea
xchg
test
je
jne
push
and
ret
xchg
call
call
je
jmp
test
je
inc
cmps
fwait
repz
jne
xrelease
fs
call
call
call
je
jmp
mov
push
je
adc
mov
scas
adc
add
call
call
je
jmp
test
push
je
push
add
jne
pop
sbb
adc
jmp
retf
imul
lods
inc
iret
mov
push
fs
call
call
call
je
jmp
cli
jl
add
xchg
je
jne
scas
scas
or
lea
xchg
not
and
cmp
je
aam
fucomp
add
add
call
call
call
je
jmp
mov
fmul
jne
je
or
je
jne
ror
sbb
xchg
test
je
jne
pop
(bad)
leave
fimul
add
call
call
je
jmp
adc
push
je
fisub
jne
in
jbe
lea
call
call
call
je
jmp
int3
mov
or
push
je
inc
je
imul
out
ins
lea
add
add
call
je
jmp
fs
pop
retf
jne
je
mov
div
int
mov
dec
shl
xor
add
add
add
jmp
sar
jnp
push
je
mov
div
movs
jmp
call
add
call
call
je
jmp
adc
push
je
fwait
push
xchg
je
jne
push
or
outs
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
rol
jne
je
rol
jne
cmp
push
cld
xchg
test
je
jne
sbb
lea
jmp
jl
add
call
call
je
jmp
xor
je
dec
xchg
mov
hlt
add
adc
lea
call
call
call
je
jmp
mov
lea
push
je
sbb
jne
jae
cmp
add
call
call
je
jmp
into
call
je
std
mov
je
jne
aam
mov
add
add
add
add
add
add
jmp
or
fnstenv
je
aam
or
mov
fs
xchg
test
je
jne
in
sub
push
inc
adc
xchg
call
call
je
jmp
ins
imul
jne
je
lahf
sub
movs
je
jne
stos
imul
lea
call
call
call
je
jmp
lds
je
xor
or
hlt
popa
bound
dec
call
call
je
jmp
popa
cdq
test
or
clc
adc
imul
add
add
add
mov
xor
mov
mov
xor
add
mov
and
cmp
je
shr
dec
test
jne
jmp
shl
dec
test
jne
nop
mov
call
call
call
call
je
jmp
mov
and
pop
div
je
jne
pop
jns
mov
fs
xchg
not
and
cmp
je
fimul
call
call
call
call
je
jmp
fist
mov
or
mov
jne
loope
test
xchg
test
je
jne
outs
xor
in
add
call
call
je
jmp
rcl
inc
xor
je
mov
div
sbb
add
add
add
add
call
je
jmp
push
div
or
(bad)
shl
je
jne
mov
add
dec
call
call
je
jmp
imul
xchg
jnp
push
je
xlat
outs
xlat
jle
div
(bad)
cmp
or
pushf
mov
pushf
xchg
call
call
je
jmp
jge
les
je
cld
cmp
lods
je
jne
ins
mov
and
call
add
call
call
je
jmp
jnp
add
pushf
lock
je
jne
inc
mov
or
add
sub
dec
lea
call
call
call
call
je
jmp
pop
fiadd
jne
je
out
xchg
push
je
jne
adc
cld
xchg
test
je
jne
push
jmp
clc
loop
fdivr
xchg
call
call
je
jmp
push
push
je
(bad)
fstp
xor
pop
dec
xor
call
call
call
je
jmp
inc
xor
je
dec
cmp
hlt
mov
add
dec
call
call
je
jmp
ret
fwait
mov
or
sub
jne
and
in
mov
sbb
mov
call
call
call
call
je
jmp
in
(bad)
std
jne
je
cmp
outs
lock
jne
shl
pop
pop
lea
xchg
test
je
jne
mov
jo
pop
popa
xchg
mov
add
add
add
jmp
scas
adc
je
mov
lea
je
jne
push
xor
and
call
call
call
je
jmp
xor
push
je
dec
repz
je
jne
loope
and
add
call
call
je
jmp
mov
outs
add
push
je
xlat
xchg
fcos
je
jne
jle
adc
ret
jmp
fucomp
add
add
call
call
call
je
jmp
fiadd
je
or
hlt
std
push
xchg
lea
xchg
not
and
cmp
je
xchg
cmp
add
call
call
call
je
jmp
popa
int3
dec
repz
je
xor
pop
inc
je
jne
push
mov
sbb
add
test
je
jne
fwait
cmp
xchg
call
call
je
jmp
inc
or
jne
je
mov
div
lahf
imul
lea
call
call
call
je
jmp
outs
cld
sbb
push
je
sbb
fmul
je
jne
adc
add
dec
call
call
je
jmp
ins
push
aas
cli
jne
je
inc
imul
je
jne
dec
(bad)
cmp
ret
jmp
ret
stos
sbb
jecxz
add
call
call
je
jmp
dec
cwde
pop
js
push
je
sahf
call
movs
leave
jg
lea
call
add
call
call
je
jmp
pop
jb
jmp
dec
pop
scas
lea
hlt
daa
lods
push
xor
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
aad
push
dec
jne
je
cwde
neg
dec
je
jne
or
cld
xchg
test
je
jne
das
push
lea
jmp
xchg
call
call
je
jmp
inc
mov
xlat
jne
je
sahf
rcl
hlt
mov
pop
lea
call
call
call
je
jmp
push
inc
fstp
jne
je
cmps
fcmovnb
cwde
je
jne
xlat
mov
mov
add
add
call
je
jmp
jo
fwait
shl
or
xor
push
je
jne
lds
fistp
call
call
call
call
je
jmp
mov
push
je
repz
dec
lahf
je
jne
stos
or
lea
xchg
test
je
jne
cmp
je
and
add
call
call
je
jmp
pop
pop
add
or
adc
mov
div
out
icebp
mov
add
add
add
call
call
je
jmp
hlt
jmp
je
and
jne
or
call
dec
call
call
je
jmp
cld
arpl
or
cmp
lea
hlt
or
adc
add
mov
xor
mov
xor
add
mov
and
cmp
je
ror
dec
test
jne
jmp
rol
dec
test
jne
nop
mov
call
call
call
call
je
jmp
xchg
ss
jmp
push
je
(bad)
icebp
sub
hlt
sbb
fs
xchg
not
and
cmp
je
sbb
add
add
add
add
add
jmp
jns
sub
push
je
in
mov
je
jne
jp
jbe
lea
xchg
test
je
jne
outs
xchg
add
loop
add
xchg
call
call
je
jmp
cmps
push
adc
pop
mov
jne
dec
out
pop
sub
add
add
call
call
je
jmp
bound
push
pop
jne
je
mov
div
movs
int3
mov
call
call
je
jmp
je
xchg
inc
jne
je
lahf
scas
in
je
jne
lea
adc
sbb
aas
mov
and
add
add
call
je
jmp
jle
(bad)
aam
push
je
fiadd
jne
stos
pop
fisttp
call
add
call
call
je
jmp
inc
cmp
or
pop
inc
fidiv
hlt
dec
stos
dec
jmp
add
add
dec
lea
call
call
call
call
je
jmp
mov
xor
or
cmp
hlt
hlt
fnsetpm(287
jle
fs
xchg
test
je
jne
shl
cmp
add
call
call
je
jmp
sub
or
jns
dec
je
jne
jle
mov
add
add
call
call
je
jmp
jno
lods
push
jne
je
sub
pop
xor
div
in
xchg
and
add
add
call
je
jmp
hlt
cmp
je
in
movs
in
je
jne
fimul
mov
add
call
call
call
je
jmp
push
xchg
or
jne
je
xlat
cmp
xor
hlt
outs
or
and
xchg
test
je
jne
ins
inc
repnz
add
call
call
je
jmp
push
popf
push
xchg
jne
je
jns
imul
div
hlt
stos
mov
add
add
add
call
call
je
jmp
out
inc
or
std
enter
div
aam
push
xchg
add
call
call
je
jmp
mov
je
push
sub
je
jne
call
jmp
xor
call
call
call
call
je
jmp
(bad)
jns
dec
jne
je
dec
adc
popf
je
jne
out
xchg
cmp
lea
xchg
not
and
cmp
je
cdq
retf
add
add
call
call
call
je
jmp
push
xchg
fisttp
push
je
enter
je
jne
pop
sar
lea
xchg
test
je
jne
out
das
rol
add
call
call
je
jmp
clc
cmps
shl
jne
je
js
dec
sahf
je
jne
(bad)
in
js
lea
call
call
call
je
jmp
dec
fstp
push
je
fimul
or
div
jmp
sti
and
add
add
call
je
jmp
cmp
test
or
into
pop
cmp
hlt
stos
xor
jle
jmp
mov
pop
fild
add
add
add
jmp
mov
out
jne
je
out
out
je
jne
ret
aaa
lea
call
add
call
call
je
jmp
popa
xchg
sbb
pop
clc
push
xchg
je
jne
dec
ss
jg
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
push
add
or
cmp
hlt
fisub
pop
lea
xchg
test
je
jne
aam
lea
jmp
aaa
xchg
call
call
je
jmp
jo
push
imul
or
inc
(bad)
mov
stos
pop
loopne
lea
call
call
call
je
jmp
pop
shl
jne
je
lods
sub
pushf
je
jne
mov
add
dec
call
call
je
jmp
or
(bad)
jne
je
dec
mov
je
jne
pop
inc
mov
ret
call
call
call
call
je
jmp
in
retf
mov
or
inc
dec
xor
ret
jne
fs
xchg
test
je
jne
(bad)
and
mov
add
add
add
jmp
lods
inc
push
jne
je
jb
jg
je
jne
xchg
aam
jnp
fs
call
call
call
je
jmp
pushf
ficom
or
jne
cli
je
jne
mov
add
dec
call
call
je
jmp
lods
movs
xchg
gs
je
xchg
sub
hlt
cmova
mov
xchg
add
add
mov
xor
add
mov
and
cmp
je
ror
dec
test
jne
jmp
rol
dec
test
jne
nop
mov
call
call
call
call
je
jmp
int3
sti
xor
or
and
add
hlt
out
push
jg
fs
xchg
not
and
cmp
je
mov
add
add
call
call
call
je
jmp
sar
or
(bad)
sbb
je
jne
xchg
fs
lea
xchg
test
je
jne
jae
mov
movs
xchg
call
call
je
jmp
adc
or
ror
je
jne
or
je
lea
call
call
call
je
jmp
xor
push
add
je
mov
jmp
je
jne
pop
fisubr
add
call
call
je
jmp
mov
add
je
push
dec
jb
je
jne
cmc
fs
dec
ret
jmp
push
outs
cwde
jle
or
call
call
je
jmp
hlt
mov
je
add
leave
je
jne
mov
sub
add
add
add
add
call
call
je
jmp
mov
push
je
push
jns
shl
hlt
cmp
add
sub
dec
lea
call
call
call
call
je
jmp
je
ret
push
je
cld
(bad)
xchg
mov
hlt
mov
aad
lea
xchg
test
je
jne
dec
and
xor
add
add
add
jmp
aad
scas
push
jne
je
out
xor
je
jne
jne
and
call
call
call
je
jmp
imul
jp
je
jne
or
add
dec
call
call
je
jmp
xor
jne
je
mov
div
push
mov
sbb
mov
call
call
call
call
je
jmp
jne
iret
inc
jne
je
xchg
push
pop
xor
mov
fs
xchg
test
je
jne
mov
retf
xchg
call
call
je
jmp
pop
adc
mov
push
je
aam
into
xchg
je
jne
ds
and
call
call
call
je
jmp
lahf
ss
jne
je
repz
imul
add
call
call
je
jmp
push
mov
sbb
je
dec
out
adc
jne
stc
mov
loopne
call
call
call
call
je
jmp
loopne
test
push
je
xor
mov
je
jne
hlt
adc
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
in
call
or
sbb
je
jne
jle
mov
cld
xchg
test
je
jne
sub
push
(bad)
(bad)
outs
xlat
xchg
call
call
je
jmp
or
je
ins
sub
hlt
loope
cmp
lea
call
call
call
je
jmp
leave
test
or
inc
mov
hlt
repnz
xor
add
call
call
je
jmp
sbb
mov
jne
je
hlt
retf
je
jne
aaa
mov
or
mov
fld
add
add
add
jmp
int3
call
mov
div
dec
xor
lea
call
add
call
call
je
jmp
repnz
std
ja
push
je
push
shl
hlt
jbe
repz
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
xchg
sbb
or
scas
movs
(bad)
je
jne
xchg
cdq
sti
mov
add
test
je
jne
lock
call
call
je
jmp
ss
je
sub
je
je
jne
mov
fs
call
call
call
je
jmp
dec
out
dec
add
je
ins
test
adc
hlt
retf
stc
add
call
call
je
jmp
(bad)
mov
push
je
and
mov
hlt
js
or
add
call
call
call
je
jmp
shl
(bad)
add
je
add
hlt
clc
(bad)
or
lea
xchg
test
je
jne
adc
(bad)
in
xchg
call
call
je
jmp
mov
jb
jne
je
sti
imul
xor
inc
lea
call
call
call
je
jmp
jo
pop
mov
je
jo
jne
nop
daa
ins
xor
add
add
call
je
jmp
push
and
je
fist
hlt
xor
ret
mov
add
mov
xor
mov
xor
add
mov
and
cmp
je
ror
dec
test
jne
jmp
rol
dec
test
jne
nop
mov
call
call
call
call
je
jmp
(bad)
inc
daa
jne
je
and
push
pop
je
jne
dec
jo
push
lea
xchg
not
and
cmp
je
stos
lock
add
add
call
call
call
je
jmp
adc
push
je
es
repz
jne
call
fs
xchg
test
je
jne
push
xor
xchg
call
call
je
jmp
fcomp
je
mov
and
je
jne
mov
fs
call
call
call
je
jmp
and
and
push
je
aaa
xor
dec
je
jne
mov
jle
add
call
call
je
jmp
xchg
mov
je
div
pushf
xor
div
arpl
inc
ret
jmp
sub
cmps
sbb
lods
sub
xchg
call
call
je
jmp
mov
or
jne
je
int
sbb
jne
cwde
test
inc
lea
call
add
call
call
je
jmp
adc
je
jne
je
(bad)
lods
test
xchg
add
sub
dec
lea
call
call
call
call
je
jmp
mov
sub
jne
je
adc
jne
scas
sahf
pop
sbb
xchg
test
je
jne
push
sbb
sub
add
call
call
je
jmp
cmp
mov
push
je
jecxz
mov
div
test
shl
lea
call
call
call
je
jmp
xor
push
je
ror
sbb
clc
cmc
cmp
add
add
call
je
jmp
sub
je
push
lahf
loopne
je
jne
outs
test
mov
add
call
call
call
je
jmp
mov
addr16
je
out
shr
shl
xchg
push
sar
lea
xchg
test
je
jne
fsub
push
jns
pop
sub
add
call
call
je
jmp
mov
push
je
cmc
aaa
xchg
xchg
je
jne
sbb
adc
call
call
call
je
jmp
fild
push
clc
jne
je
leave
pushf
xor
div
mov
inc
lahf
add
call
call
je
jmp
xchg
imul
push
je
sbb
jne
jp
adc
ret
jmp
push
loope
call
call
call
call
je
jmp
aaa
test
shl
or
(bad)
sbb
je
jne
stos
jge
lea
xchg
not
and
cmp
je
jl
mov
add
add
add
add
add
jmp
push
push
je
inc
dec
les
and
and
xchg
test
je
jne
cmp
in
test
xchg
call
call
je
jmp
ins
mov
je
arpl
jb
je
jne
mov
out
cmps
lea
call
call
call
je
jmp
daa
sbb
je
lock
push
fdivr
ja
add
dec
call
call
je
jmp
jle
fmul
add
jne
ret
sti
ret
jmp
adc
pop
xchg
call
call
je
jmp
in
inc
test
jne
je
sbb
jne
movs
hlt
cwde
in
fs
call
add
call
call
je
jmp
xchg
sbb
je
dec
cmp
hlt
addr16
push
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
leave
loope
mov
mov
and
je
jne
(bad)
ins
adc
lea
xchg
test
je
jne
arpl
add
add
add
add
jmp
dec
xor
or
(bad)
pusha
sub
fcmovnb
mov
lea
call
call
call
je
jmp
inc
add
push
jne
je
dec
ins
call
ret
mov
call
call
je
jmp
sub
push
xor
je
xchg
jnp
fidiv
hlt
mov
cs
add
add
call
call
call
je
jmp
pop
mov
jne
je
push
or
scas
je
jne
cmovo
mov
fs
xchg
test
je
jne
sub
mov
mov
add
add
add
jmp
fbld
ins
jne
je
iret
push
mov
hlt
cmps
mov
movs
lea
call
call
call
je
jmp
icebp
aam
xchg
je
adc
std
je
jne
cs
cli
pop
add
call
call
je
jmp
inc
inc
ins
inc
jne
je
mov
div
js
push
sub
mov
add
mov
mov
and
call
mov
mov
mov
call
call
call
call
je
jmp
ret
lods
inc
and
je
mov
hlt
rol
and
xchg
not
and
cmp
je
sbb
add
call
call
call
je
jmp
add
aas
jne
je
jae
int
je
jne
dec
repz
sub
add
test
je
jne
ins
ds
shl
and
add
add
call
je
jmp
addr16
adc
jne
je
inc
ret
je
jne
sub
scas
lea
call
call
call
je
jmp
daa
test
jne
je
pushf
xor
je
jne
cmp
add
call
call
je
jmp
dec
jp
mov
je
int
in
inc
je
jne
icebp
mov
mov
jmp
xchg
mov
pop
xchg
call
call
je
jmp
ror
ds
je
adc
int
lea
call
add
call
call
je
jmp
push
jne
shl
or
mov
leave
je
jne
stos
mov
ret
sub
dec
lea
call
call
call
call
je
jmp
sbb
and
push
je
push
aaa
aas
jle
div
ins
xchg
cld
xchg
test
je
jne
or
out
mov
and
add
add
call
je
jmp
jge
pop
stos
jne
je
pop
push
jns
je
jne
jge
dec
xor
fs
call
call
call
je
jmp
cmp
pop
je
push
je
jg
mov
hlt
pop
sti
jle
add
call
call
je
jmp
pop
mov
je
popa
xchg
bound
je
jne
cdq
ret
ret
lea
mov
call
call
call
call
je
jmp
rcl
or
hlt
jle
je
jne
fs
fdivr
lea
xchg
test
je
jne
inc
movs
sub
adc
push
xchg
call
call
je
jmp
test
std
loopne
push
je
bnd
cmp
hlt
inc
cmps
cmp
lea
call
call
call
je
jmp
sbb
xchg
ret
jne
je
or
jne
clc
int3
mov
add
call
call
je
jmp
mov
movs
shl
je
call
div
lea
pushf
test
aas
inc
retf
or
add
add
add
add
add
add
jmp
lods
xchg
dec
pop
jne
je
xchg
bound
hlt
mov
pop
lea
xchg
not
and
cmp
je
add
mov
add
add
call
call
call
je
jmp
mov
mov
jne
je
and
test
div
jb
loop
lea
xchg
test
je
jne
mov
inc
sar
aad
xchg
call
call
je
jmp
lods
stos
or
jne
je
pop
and
je
jne
je
lods
mov
call
call
call
je
jmp
aas
sbb
mov
or
div
loopne
cmps
mov
call
call
je
jmp
retf
pop
jne
je
movs
or
jne
jb
push
imul
test
cmp
xchg
call
call
je
jmp
cmps
ret
jne
je
jne
nop
mov
hlt
out
cmp
add
add
add
add
call
call
je
jmp
add
or
xchg
and
cmp
sbb
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
nop
data16
jne
je
outs
dec
out
dec
je
jne
lea
push
lea
xchg
test
je
jne
xchg
aam
sbb
jmp
(bad)
xchg
call
call
je
jmp
xchg
dec
frstor
mov
jbe
je
jne
retf
cld
lea
call
call
call
je
jmp
pop
inc
jne
je
stos
in
pop
dec
je
jne
pop
mov
and
call
call
je
jmp
cmp
push
je
xchg
cmp
jne
pop
xchg
in
test
add
call
call
call
je
jmp
add
push
je
aas
mov
jne
xor
fs
xchg
test
je
jne
in
inc
lods
(bad)
aam
in
xchg
call
call
je
jmp
test
cmp
je
out
test
jbe
xchg
lea
call
call
call
je
jmp
loope
dec
xor
je
xchg
xor
je
jne
nop
out
(bad)
adc
call
call
je
jmp
(bad)
push
out
jne
je
loop
lds
push
iret
inc
add
mov
add
mov
mov
call
mov
mov
mov
call
call
call
call
je
jmp
pop
mov
aas
jne
je
pushfw
ins
push
je
jne
xchg
ss
lea
xchg
not
and
cmp
je
mov
add
call
call
call
je
jmp
cmp
scas
or
push
je
mov
inc
add
(bad)
jecxz
lea
xchg
test
je
jne
out
inc
add
fisub
xchg
call
call
je
jmp
call
or
bound
je
jne
in
not
add
add
add
call
call
je
jmp
out
jg
jne
je
fs
cmps
stos
je
jne
jle
push
sahf
add
call
call
je
jmp
gs
sub
shl
xor
hlt
mov
jmp
rcr
ss
xchg
call
call
je
jmp
mov
dec
jne
je
xchg
add
jne
mov
fmul
lea
call
add
call
call
je
jmp
sbb
sub
jne
je
test
mov
je
jne
adc
es
add
add
dec
lea
call
call
call
call
je
jmp
gs
je
push
je
mov
sbb
or
repz
lea
xchg
test
je
jne
cmps
inc
lds
add
call
call
je
jmp
jno
lock
je
push
cmp
jecxz
div
dec
loop
lea
call
call
call
je
jmp
push
push
je
and
jne
push
stos
out
add
call
call
je
jmp
or
rcr
jne
je
jae
add
div
into
add
ret
lea
mov
call
call
call
call
je
jmp
cmp
je
out
push
daa
mov
div
shr
fs
xchg
test
je
jne
enter
push
in
mov
xchg
call
call
je
jmp
push
xchg
mov
or
in
movs
mov
div
call
add
add
add
call
call
je
jmp
inc
into
sar
jne
je
inc
xor
hlt
pop
or
mov
add
dec
call
call
je
jmp
adc
out
jne
je
in
add
hlt
push
xor
in
ret
jmp
pop
enter
or
pop
pop
sub
adc
add
add
call
call
call
je
jmp
out
jnp
jae
push
je
(bad)
fbld
je
jne
push
fs
xchg
not
and
cmp
je
add
add
add
add
add
add
jmp
test
add
je
xchg
loopne
pop
je
jne
out
or
cld
xchg
test
je
jne
rcl
loope
add
call
call
je
jmp
hlt
(bad)
push
xor
je
cdq
je
jae
div
mov
fs
call
call
call
je
jmp
dec
mov
or
(bad)
aad
je
jne
pop
sbb
add
call
call
je
jmp
xor
aam
push
je
push
mov
jne
rcl
mov
ret
jmp
cdq
mov
ds
mov
call
call
je
jmp
pop
mov
or
dec
inc
je
jne
popa
xor
repnz
call
add
call
call
je
jmp
xchg
loopne
push
je
dec
mov
hlt
push
and
mov
mov
lea
jmp
call
call
call
call
je
jmp
adc
mov
jne
je
fisttp
jne
ins
cmp
lea
xchg
test
je
jne
jne
lea
jmp
pop
xchg
call
call
je
jmp
dec
jle
(bad)
jne
je
dec
pop
loop
je
jne
pop
xor
adc
add
add
call
call
je
jmp
test
jecxz
jne
je
dec
(bad)
jo
je
jne
gs
xchg
add
call
call
je
jmp
ds
sbb
or
fnstenv
je
jne
cmp
call
call
call
call
je
jmp
xor
xor
jne
je
mov
cmp
div
mov
fs
xchg
test
je
jne
lock
nop
xchg
outs
xchg
xchg
call
call
je
jmp
test
jne
jne
je
xchg
jne
jb
cmp
add
add
add
call
call
je
jmp
cdq
or
jne
je
dec
fisubr
je
jne
gs
ins
and
add
add
call
je
jmp
adc
fst
stos
je
push
je
jne
pop
scas
jmp
ret
mov
add
mov
mov
call
mov
mov
mov
call
call
call
call
je
jmp
shl
dec
push
push
je
push
mov
lea
xchg
not
and
cmp
je
mov
or
add
add
add
add
add
jmp
arpl
or
adc
repz
jne
(bad)
lahf
or
lea
xchg
test
je
jne
imul
es
add
call
call
je
jmp
sub
sbb
je
addr16
in
div
pop
fcomp
add
add
add
call
call
je
jmp
pop
sbb
jne
je
and
je
jne
int
movs
cmp
add
add
call
je
jmp
dec
inc
lods
iret
jne
je
mov
div
sub
cmp
ret
jmp
sbb
aas
xchg
mov
(bad)
add
call
call
je
jmp
dec
test
jne
je
ss
pop
cmp
hlt
mov
test
lea
call
add
call
call
je
jmp
cmp
pop
lea
je
adc
scas
dec
je
jne
hlt
sub
ret
sub
dec
lea
call
call
call
call
je
jmp
das
sub
or
push
mov
je
jne
inc
or
cld
xchg
test
je
jne
idiv
mov
call
add
add
call
je
jmp
mov
(bad)
je
imul
hlt
push
(bad)
int
fs
call
call
call
je
jmp
lods
xchg
xor
inc
inc
out
sub
hlt
inc
cmp
dec
call
call
je
jmp
dec
sbb
dec
jne
je
cs
cmp
inc
je
jmp
lea
mov
call
call
call
call
je
jmp
aad
es
jne
je
inc
mov
div
pushf
in
mov
cld
xchg
test
je
jne
xchg
in
pop
ficomp
mov
add
call
call
je
jmp
mov
push
je
fld
mov
hlt
outs
sbb
call
call
call
je
jmp
push
lods
cmp
jne
je
push
int3
in
je
jne
add
add
dec
call
call
je
jmp
inc
stos
mov
jne
je
mov
jne
rol
loopne
add
add
call
call
call
je
jmp
or
je
ror
hlt
neg
in
lea
xchg
not
and
cmp
je
mov
xchg
add
add
call
call
call
je
jmp
jmp
(bad)
outs
jne
je
jae
jmp
fimul
xchg
test
je
jne
push
adc
xchg
call
call
je
jmp
or
xor
jne
je
cmp
hlt
pushf
ss
call
add
add
add
add
call
je
jmp
(bad)
bound
or
call
jne
loope
inc
ins
add
call
call
je
jmp
or
ss
je
in
pop
data16
jne
dec
sti
ja
ret
jmp
mov
sub
xchg
call
call
je
jmp
ret
ins
jne
je
(bad)
out
lea
div
or
mov
add
add
add
add
call
call
je
jmp
add
sbb
or
mov
jne
adc
ror
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
cmp
push
je
sub
cmp
hlt
sub
fs
xchg
test
je
jne
mov
jmp
mov
add
add
call
je
jmp
popa
xor
je
adc
xor
div
int3
in
in
lea
call
call
call
je
jmp
pop
sub
or
dec
push
(bad)
hlt
aaa
ja
ja
add
dec
call
call
je
jmp
pop
ja
adc
je
sti
ins
or
je
jne
inc
or
add
add
add
add
add
add
jmp
or
push
je
stc
popf
mov
hlt
imul
and
xchg
test
je
jne
clc
push
or
add
inc
xchg
call
call
je
jmp
or
ds
je
int3
add
lock
jne
ret
xor
add
add
add
call
call
je
jmp
cs
mov
push
je
sbb
div
(bad)
neg
dec
call
call
je
jmp
fsin
or
or
in
mov
hlt
adc
xchg
ret
mov
add
mov
xor
mov
inc
test
jne
call
call
call
call
je
jmp
pop
movs
outs
mov
mov
js
je
jne
mov
fs
xchg
not
and
cmp
je
add
outs
call
call
call
call
je
jmp
and
fidiv
je
cmp
cli
imul
sub
fs
xchg
test
je
jne
pop
aas
and
add
jnp
xchg
call
call
je
jmp
out
adc
in
add
hlt
fld
and
add
add
call
call
je
jmp
push
inc
out
xor
or
push
jmp
je
jne
cmp
and
call
call
je
jmp
add
push
je
push
div
into
cli
sbb
ret
jmp
cmp
sbb
and
call
call
je
jmp
push
call
cmp
lea
lea
call
add
call
call
je
jmp
sbb
std
or
je
mov
sbb
jne
(bad)
sbb
jmp
ret
push
popf
neg
pushf
pop
jmp
xor
mov
neg
dec
mov
mov
call
call
call
call
je
jmp
or
shl
je
pop
icebp
mov
hlt
pop
mov
pop
lea
xchg
not
and
cmp
je
jo
dec
call
call
call
call
je
jmp
fld
je
fwait
(bad)
addr16
je
jne
mov
fs
xchg
test
je
jne
adc
jecxz
xchg
call
call
je
jmp
push
sahf
lahf
outs
jne
je
cli
adc
adc
hlt
sub
and
call
call
call
je
jmp
loop
(bad)
or
jb
adc
div
inc
xchg
repnz
add
dec
call
call
je
jmp
into
sbb
je
jle
iret
nop
je
jne
ds
jno
jmp
repnz
gs
pop
xchg
and
add
add
call
je
jmp
imul
inc
jne
je
outs
test
hlt
stos
dec
cmp
add
add
add
call
call
je
jmp
rcr
add
push
je
jmp
div
add
mov
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
dec
pop
ror
jne
je
push
adc
cld
je
jne
jnp
dec
inc
lea
xchg
test
je
jne
int
jmp
xchg
xchg
call
call
je
jmp
stos
(bad)
call
dec
xchg
je
jne
(bad)
and
call
call
call
je
jmp
sbb
je
mov
jbe
div
sbb
dec
call
call
je
jmp
test
enter
or
inc
call
hlt
fst
inc
es
lea
mov
call
call
call
call
je
jmp
push
push
jne
je
push
test
int
div
pop
xchg
lea
xchg
test
je
jne
ficomp
dec
xchg
call
call
je
jmp
sbb
dec
std
jne
je
sub
push
je
jne
icebp
gs
lea
call
call
call
je
jmp
(bad)
int3
jns
jne
je
in
imul
je
jne
pop
push
push
in
add
dec
call
call
je
jmp
rcr
out
jne
je
es
stos
je
jne
sbb
fdiv
ret
jmp
mov
add
add
add
add
add
jmp
aad
pshufw
or
push
mov
div
addr16
lea
xchg
not
and
cmp
je
cmp
add
add
add
add
add
jmp
pop
rol
sbb
je
stc
push
cmp
je
jne
mov
fs
xchg
test
je
jne
or
pop
dec
pop
loope
mov
add
add
add
jmp
loope
test
inc
mov
hlt
scas
lods
pop
jno
fs
call
call
call
je
jmp
sub
imul
jne
je
xlat
lods
jae
je
jne
rol
fld
add
add
call
je
jmp
jb
cdq
mov
popa
stc
mov
je
jne
int3
mov
or
inc
inc
cwde
in
and
xchg
call
call
je
jmp
mov
ss
je
xacquire
je
jne
mov
in
lea
call
add
call
call
je
jmp
fisubr
jne
je
rol
jne
mov
add
pop
mov
lea
jmp
call
call
call
call
je
jmp
aad
add
jne
je
popa
mov
jecxz
div
xchg
ja
ins
lea
xchg
test
je
jne
aam
lea
jmp
ret
xchg
call
call
je
jmp
jmp
or
retf
je
jne
arpl
xchg
lea
call
call
call
je
jmp
sub
arpl
jne
je
call
div
adc
and
call
call
je
jmp
adc
push
je
hlt
add
push
or
outs
out
call
call
call
call
je
jmp
sub
push
jle
push
je
out
and
jne
dec
mov
and
xchg
test
je
jne
addr16
xlat
scas
inc
fdivr
xchg
call
call
je
jmp
and
je
hlt
or
div
push
sti
xchg
repnz
call
call
call
je
jmp
jg
ret
push
je
sub
imul
mul
xor
add
call
call
je
jmp
pusha
xor
xor
or
mov
jne
mov
out
aad
mov
add
mov
xor
mov
inc
test
jne
call
call
call
call
je
jmp
xchg
outs
inc
xchg
jne
je
data16
adc
hlt
ficomp
adc
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
js
daa
sub
je
mov
div
fs
(bad)
lea
xchg
test
je
jne
and
pushf
mov
add
call
call
je
jmp
lods
icebp
cld
cld
jne
je
mov
test
adc
movs
inc
lea
call
call
call
je
jmp
push
xchg
sbb
push
je
out
push
sbb
hlt
(bad)
lock
fadd
add
add
call
je
jmp
add
push
je
sbb
dec
je
jne
and
ror
ret
jmp
mov
xchg
xchg
call
call
je
jmp
aas
aam
inc
jne
je
pop
mov
test
hlt
jmp
fs
call
add
call
call
je
jmp
or
je
sub
and
lds
ret
push
popf
neg
pushf
pop
jmp
xor
mov
neg
dec
mov
mov
call
call
call
call
je
jmp
movs
retf
pop
dec
jne
je
jg
pop
sub
hlt
mov
aaa
lea
xchg
not
and
cmp
je
(bad)
and
add
add
call
call
call
je
jmp
push
sbb
fnstenv
je
in
pop
cmp
hlt
in
jge
lea
xchg
test
je
jne
rcl
pop
arpl
in
xchg
call
call
je
jmp
sub
jne
je
js
add
je
jne
movs
xor
lea
call
call
call
je
jmp
jb
xchg
xchg
jne
je
iret
pop
cmp
xchg
cdq
test
add
add
call
je
jmp
mov
push
je
jg
sar
je
jne
in
hlt
scas
js
jmp
loope
inc
and
and
fild
add
add
add
jmp
(bad)
int3
mov
or
dec
cmps
jbe
div
xor
and
call
add
call
call
je
jmp
add
push
je
(bad)
fnsave
hlt
inc
pop
mov
scas
pop
add
add
dec
lea
call
call
call
call
je
jmp
dec
pop
and
or
jp
retf
je
jne
cmp
ins
mov
xchg
test
je
jne
dec
div
push
push
inc
test
call
call
je
jmp
adc
je
sbb
div
enter
lea
call
call
call
je
jmp
cmps
loop
ja
push
je
iret
std
dec
je
jne
mov
aad
add
call
call
je
jmp
mov
push
je
pop
and
xchg
je
jne
cmps
mov
ret
lea
mov
call
call
call
call
je
jmp
outs
inc
adc
mov
pop
dec
je
jne
shr
jp
lea
xchg
test
je
jne
xor
in
les
call
call
je
jmp
jp
cmp
jne
je
jmp
div
ret
movs
lea
call
call
call
je
jmp
mov
push
je
and
mov
je
jne
mov
add
dec
call
call
je
jmp
adc
je
push
xor
je
jne
hlt
add
loopne
gs
fsub
call
call
call
call
je
jmp
out
mov
je
xor
fdiv
hlt
popw
mov
and
xchg
not
and
cmp
je
movs
call
add
call
call
call
je
jmp
xchg
pop
(bad)
mov
jge
xchg
add
hlt
repnz
idiv
lea
xchg
test
je
jne
push
pusha
pop
pop
xor
add
call
call
je
jmp
bound
cli
jne
je
clc
ins
repz
jne
in
addr16
add
add
add
call
call
je
jmp
mov
push
je
push
xchg
inc
je
jne
pop
sbb
add
call
call
je
jmp
fwait
inc
imul
push
je
stos
inc
and
je
jne
out
movs
mov
int
sar
sbb
and
add
add
call
je
jmp
aad
jb
jne
je
adc
call
hlt
xor
fs
call
add
call
call
je
jmp
push
push
je
inc
cmp
fdiv
hlt
fdivr
jl
jmp
ret
pop
mov
lea
jmp
call
call
call
call
je
jmp
ret
adc
mov
div
dec
sub
or
add
test
je
jne
mov
jmp
mov
add
add
call
je
jmp
push
jecxz
push
jne
je
leave
sahf
and
div
add
and
add
add
call
call
je
jmp
outs
add
je
cdq
inc
pop
cs
jne
jle
dec
into
add
call
call
je
jmp
dec
test
or
out
xor
retf
ss
call
call
call
call
je
jmp
cmp
imul
je
jne
mov
dec
fmul
add
test
je
jne
mov
or
mov
add
add
add
jmp
int3
jmp
je
adc
gs
je
jne
push
pop
in
arpl
add
add
call
call
je
jmp
(bad)
jmp
je
pusha
adc
loop
div
scas
int3
xlat
rol
add
add
add
jmp
dec
jnp
jae
push
je
dec
adc
in
mov
add
mov
xor
mov
inc
test
jne
call
call
call
call
je
jmp
out
cmp
or
cli
rol
and
cmp
lea
xchg
not
and
cmp
je
xchg
call
call
call
call
je
jmp
lods
outs
xor
or
and
movs
je
jne
xor
push
adc
add
test
je
jne
mov
aam
out
adc
movs
xchg
call
call
je
jmp
inc
and
xchg
jne
je
inc
mov
scas
je
jne
mov
fs
call
call
call
je
jmp
lahf
cmc
sbb
push
je
shr
hlt
fbld
and
call
call
je
jmp
sbb
sub
jne
je
repz
jae
div
jl
cli
add
lods
popf
(bad)
xchg
ins
loop
xchg
call
call
je
jmp
popa
dec
pushf
pop
jne
je
inc
outs
std
xor
hlt
daa
dec
lea
call
add
call
call
je
jmp
inc
cld
dec
jmp
mov
div
js
cs
add
push
popf
neg
pushf
pop
jmp
xor
mov
neg
dec
mov
mov
call
call
call
call
je
jmp
inc
pop
pop
and
je
xchg
cmp
jne
call
cld
xchg
not
and
cmp
je
xchg
hlt
cmp
add
add
call
call
call
je
jmp
adc
ror
push
je
dec
sub
sahf
je
jne
cdq
nop
lea
xchg
test
je
jne
fstp
cld
retf
xchg
call
call
je
jmp
lods
jmp
xor
div
popf
fcmovb
(bad)
add
add
call
call
je
jmp
adc
and
or
clc
push
lea
hlt
mov
in
adc
add
add
call
je
jmp
call
add
adc
mov
je
jne
jnp
cmp
jne
xchg
shl
gs
xchg
call
call
je
jmp
imul
add
or
shl
jg
div
or
loop
lea
call
add
call
call
je
jmp
jge
pop
js
push
je
idiv
jne
shr
jle
jmp
ret
sub
dec
lea
call
call
call
call
je
jmp
push
movs
jg
jne
je
lods
jmp
je
jne
mov
jmp
xchg
test
je
jne
xchg
in
fcomp
dec
inc
xchg
call
call
je
jmp
fwait
or
je
push
div
cld
push
and
call
call
call
je
jmp
mov
leave
jne
je
jne
aas
or
hlt
mov
and
call
call
je
jmp
ficom
or
js
xor
mov
lea
mov
call
call
call
call
je
jmp
xor
jne
jne
je
aas
xchg
sub
jne
div
and
xchg
test
je
jne
retf
cmp
xchg
call
call
je
jmp
imul
or
mov
jne
xlat
jmp
ror
add
add
call
call
je
jmp
pop
xor
pop
jne
je
in
mov
hlt
push
add
call
call
je
jmp
repnz
fnstenv
je
pop
or
hlt
jp
jmp
ret
jmp
and
pop
adc
jmp
pop
mov
mov
mov
mov
mov
mov
mov
push
popf
mov
push
xor
lock
pop
mov
ret
cdq
and
repz
repnz
xor
push
add
add
sub
push
xor
add
add
sub
mov
mov
call
ret
pop
jo
lahf
aas
pop
mov
mov
add
xor
mov
xor
add
sub
mov
mov
call
ret
mov
jecxz
jns
inc
cdq
jmp
jae
xchg
add
(bad)
call
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
sgdtd
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
(bad)
jmp
in
call
mov
xor
call
pop
sub
add
popf
pop
ret
or
dec
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
jecxz
jle
dec
test
cmp
cs
cs
inc
dec
dec
push
inc
dec
dec
mov
sub
ror
and
dec
out
push
jecxz
test
jecxz
dec
out
dec
dec
add
and
and
lea
dec
and
pusha
pusha
popa
inc
retf
cmp
cmp
cmp
out
and
lea
int3
mov
sbb
or
test
xor
xor
xor
xor
movs
adc
fstp
enter
jne
jne
jne
jne
into
into
jne
into
into
ret
ret
into
into
ret
ret
adc
pop
pop
pop
cmp
pop
pop
mov
call
and
call
test
dec
dec
inc
sbb
sbb
fsubrp
call
lea
(bad)
jge
ret
(bad)
(bad)
ret
sbb
nop
nop
nop
adc
into
iret
add
mov
scas
scas
dec
dec
daa
daa
dec
dec
daa
daa
gs
es
sub
sub
mov
mov
scas
scas
scas
mov
push
lds
js
rcl
mov
add
cmp
cmp
pop
pop
(bad)
(bad)
(bad)
jge
mov
push
xor
aas
mov
ins
ins
jb
jb
sub
mov
fidivr
push
push
push
xlat
push
push
push
push
push
push
push
push
push
(bad)
dec
mov
bound
bound
in
in
(bad)
in
in
in
movs
movs
out
in
movs
movs
xor
xchg
xchg
xchg
xor
jmp
movs
movs
xchg
xchg
xchg
movs
xchg
xchg
xchg
fwait
fwait
call
xor
inc
jbe
jns
jbe
jns
mov
cld
in
out
in
out
pop
repnz
push
push
push
dec
push
push
push
into
into
iret
les
rcl
adc
rcl
adc
call
sti
sti
sti
mov
sti
sti
cdq
je
in
je
in
add
dec
pop
nop
jo
pop
nop
fdiv
leave
xchg
adc
dec
xchg
adc
dec
adc
adc
adc
(bad)
movlps
(bad)
sgdtd
repz
repz
(bad)
cld
cld
arpl
cld
popa
bound
add
bound
add
add
add
add
add
in
in
mov
cld
mov
call
mov
fwait
call
sbb
xor
(bad)
inc
inc
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
inc
inc
mov
inc
inc
mov
cld
cld
add
add
call
mov
call
jne
mov
jbe
les
les
ficomp
imul
xor
push
push
push
pand
push
or
cmp
cmp
data16
inc
inc
inc
jmp
mov
loope
mov
loope
pop
loope
pop
pop
cmp
jo
pop
cmp
enter
push
push
jl
push
push
aas
cmp
mov
fcomp
xlat
mov
mov
pop
shl
imul
imul
loope
adc
loope
sub
loope
sub
in
mov
mov
mov
mov
mov
mov
mov
inc
scas
scas
scas
mov
push
push
jl
jb
je
jae
je
jns
jne
jns
in
in
in
stos
in
in
test
test
sbb
jb
jb
pop
icebp
(bad)
fsubp
jle
fsubp
jle
bound
jnp
mov
mov
mov
mov
xchg
inc
scas
scas
scas
mov
mov
icebp
repz
mov
jne
mov
fstp
fsub
fmul
dec
jl
dec
dec
xchg
cli
test
leave
leave
leave
out
scas
sbb
fisttp
pusha
jno
or
int
or
inc
inc
inc
pushf
inc
inc
inc
xchg
jmp
rcl
rcl
sub
sub
push
outs
outs
and
outs
outs
and
xchg
xchg
and
xchg
xchg
movs
xchg
dec
push
movs
add
add
push
inc
add
cmp
add
cmp
in
inc
gs
gs
jb
clc
pop
inc
cld
sbb
push
cld
sbb
mov
jnp
or
jnp
or
loope
or
loope
mov
hlt
loope
sbb
mov
rcl
shr
xchg
rol
(bad)
retf
vunpckhpd
cwde
cwde
adc
cwde
cwde
ss
sbb
stos
out
daa
stos
out
test
xor
inc
retf
retf
retf
inc
retf
retf
retf
movs
movs
into
retf
movs
movs
mov
inc
mov
mov
mov
xchg
jmp
push
push
ret
push
adc
ret
scas
scas
scas
out
pop
retf
rol
push
(bad)
push
(bad)
xchg
mov
ror
xor
xor
add
xor
add
in
in
in
mov
cld
and
adc
rol
dec
dec
(bad)
inc
xchg
leave
leave
leave
sar
pop
inc
jns
or
(bad)
in
les
or
or
or
or
jne
jne
jne
jne
jne
in
adc
sbb
loop
fs
fs
add
jbe
add
ja
div
jne
div
add
add
add
add
jb
jg
jg
add
cs
adc
dec
adc
xchg
xchg
loop
xchg
xchg
out
addr16
call
leave
leave
pop
daa
fiadd
mov
or
xor
repnz
sub
sub
sub
movs
fs
movs
movs
dec
movs
movs
movs
jne
cli
cli
sbb
sbb
ja
fs
fs
and
and
and
push
push
and
inc
(bad)
fldenv
jge
lods
aas
aas
aas
lods
aas
aas
aas
xchg
xchg
cmp
xchg
xchg
fcomp
test
test
push
push
push
sbb
into
into
jns
iret
into
jns
push
push
push
push
adc
mov
mov
mov
jl
xchg
in
jl
mov
mov
aad
out
aad
out
push
loop
js
js
js
js
movs
jns
movs
movs
xor
out
out
out
xor
out
out
xor
mov
mov
int
xchg
(bad)
int
in
sbb
fcomp
fisubr
scas
scas
stc
fxch
inc
mov
arpl
and
mov
ror
or
ror
or
(bad)
dec
(bad)
(bad)
call
xchg
jb
jg
jg
add
(bad)
fnstenv
(bad)
lock
lock
addr16
cwde
cwde
sub
add
dec
dec
add
dec
dec
inc
inc
inc
push
outs
push
inc
lods
lods
lods
inc
lods
lods
lods
fcmove
dec
dec
(bad)
dec
dec
ss
stos
xchg
push
inc
test
nop
repz
xchg
(bad)
fild
pandn
(bad)
movups
jns
jns
jns
jns
xor
xor
(bad)
push
xchg
mov
mov
mov
mov
retf
mov
push
push
push
mov
cmp
dec
and
cmp
hlt
aas
(bad)
push
push
push
(bad)
push
push
push
xchg
xchg
or
xchg
xchg
jmp
push
xchg
xchg
xchg
xchg
add
pop
cld
cld
std
xor
mov
fcomp
sub
mov
cmp
div
mov
enter
enter
enter
dec
dec
push
push
dec
dec
fcomp
(bad)
fild
and
cwde
cwde
aas
aas
leave
leave
cmp
dec
retf
leave
dec
dec
and
and
and
lock
and
lock
mov
mov
dec
dec
dec
mov
add
add
in
fisubr
scas
in
xchg
xchg
push
push
inc
cwde
push
push
mov
push
lods
adc
out
adc
out
aad
loop
fstp
loop
fstp
in
in
in
fsubr
in
in
lock
inc
jae
jae
mov
pushf
pushf
push
push
pushf
pushf
sub
popf
pushf
sub
mov
loope
dec
aam
cs
repz
repz
mov
sub
es
(bad)
fnstcw
iret
iret
aam
iret
iret
xchg
xchg
retf
xchg
fcomp
mov
jne
pop
or
cmp
or
cmp
data16
xchg
jb
sub
sub
mov
movs
movs
xor
movs
movs
in
add
in
add
add
or
inc
add
mov
scas
inc
je
test
je
ss
jae
call
idiv
call
icebp
and
mov
(bad)
push
mov
push
jg
add
fcmovu
fidiv
jne
fidiv
jne
xchg
jo
xchg
xchg
inc
inc
es
(bad)
cmp
rcl
(bad)
add
xchg
sbb
sbb
or
ds
cmp
sub
fcomp
fadd
and
fiadd
cs
jecxz
add
jecxz
cmp
out
cmp
inc
inc
push
push
push
test
mov
push
push
mov
cmp
push
push
push
(bad)
rsqrtps
cmovno
jmp
(bad)
(bad)
push
idiv
push
idiv
div
jns
adc
adc
adc
lock
adc
lock
inc
inc
inc
sub
mov
adc
mov
jecxz
and
and
and
and
lock
and
lock
mov
mov
dec
dec
dec
jo
test
mov
cmp
fwait
fwait
fwait
cmp
and
xchg
inc
pusha
and
push
inc
jno
rcl
jno
rcl
(bad)
(bad)
(bad)
fisttp
pminub
(bad)
cmovno
(bad)
cdq
es
xor
sub
xor
xchg
xchg
xor
fmul
jne
fcmovnu
or
ds
ds
jmp
rcl
shr
fcom
rcr
mov
pop
adc
mov
into
jns
sbb
jns
sbb
mov
xor
xlat
xor
xor
push
xor
push
mov
dec
mov
mov
out
aam
jg
aam
jg
gs
es
jge
js
jge
mov
jmp
pushf
pushf
pushf
retf
jne
add
mov
jp
ins
cmps
jp
ins
(bad)
fisubr
fisub
movs
fcomp
in
in
in
xor
adc
fcmovnu
in
in
add
add
add
jno
jo
sub
jo
add
mov
push
push
leave
leave
leave
xor
cli
or
mov
sub
jle
call
call
fs
inc
inc
inc
inc
inc
mov
mov
xor
cli
cli
xor
xor
icebp
icebp
pop
icebp
icebp
icebp
arpl
lock
lock
pushf
pushf
idiv
je
adc
mov
xchg
shl
cmps
je
cwde
movs
je
cwde
inc
inc
inc
mov
push
inc
jnp
jnp
jae
jnp
leave
in
mov
lea
aad
or
adc
test
push
push
push
in
in
in
mov
push
jmp
xchg
xchg
xchg
xchg
test
xchg
mul
out
push
ficom
(bad)
lea
mov
cld
imul
(bad)
fcom
(bad)
fsub
movs
jmp
xchg
jns
pop
inc
inc
mov
xchg
mov
dec
inc
dec
dec
dec
ret
ret
dec
dec
ret
ret
fcomp
fwait
fwait
fwait
xor
fs
fwait
test
push
pop
push
push
push
cmp
push
push
cmp
daa
daa
ds
rol
fs
imul
jmp
(bad)
(bad)
out
(bad)
(bad)
dec
dec
(bad)
(bad)
dec
dec
lock
dec
lock
repz
and
and
ja
pop
pop
pushf
pushf
pushf
and
mov
sbb
cld
cmps
mov
into
cld
into
into
into
rcl
retf
into
rcl
inc
inc
mov
inc
inc
(bad)
(bad)
addr16
addr16
fmul
dec
fmul
dec
fs
and
jmp
lock
lods
icebp
lock
lods
xor
xor
jns
jno
jns
pop
and
loope
and
loope
inc
inc
mov
ror
jns
sbb
jns
sbb
xor
xor
xor
xor
into
into
xor
into
into
xchg
xchg
iret
into
xchg
xchg
add
aas
aas
aas
add
aas
aas
(bad)
jmp
cli
cli
cli
gs
cli
cli
jne
je
add
or
xor
stos
stos
stos
xor
and
loope
and
loope
xor
cmp
and
jmp
and
es
out
sub
mov
std
sar
std
std
mov
inc
add
adc
mov
test
jge
push
js
jge
dec
jmp
jmp
add
fwait
mov
add
jnp
mov
jnp
mov
mov
mov
push
push
daa
daa
sbb
sbb
jecxz
jecxz
and
adc
es
mov
sti
mov
jo
js
xor
jecxz
xor
jecxz
jmp
mov
inc
jno
dec
adc
cs
outs
cs
rol
rol
sub
sub
popf
mov
bound
jl
or
push
push
push
dec
push
push
push
movs
movs
push
push
movs
movs
lea
sahf
sahf
sahf
dec
dec
mov
mov
arpl
inc
inc
imul
inc
dec
dec
movs
movs
dec
dec
movs
movs
sbb
inc
inc
inc
pushf
inc
inc
inc
mov
inc
inc
mov
inc
inc
mov
std
std
pop
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
pop
xchg
xchg
pop
pop
jmp
cmp
ret
push
mov
cli
cli
mov
cli
cli
add
add
rol
js
or
js
or
jecxz
or
jecxz
cli
cli
xchg
pop
nop
jns
adc
dec
adc
mov
push
je
imul
je
test
test
add
add
mov
cmp
js
jle
js
pop
pop
jge
pop
pop
jb
outs
outs
outs
xchg
xchg
xchg
xchg
icebp
icebp
cmp
xor
pop
pop
scas
pop
pop
aad
jmp
jmp
pop
pop
sub
pop
pop
sub
hlt
mov
mov
add
add
push
add
fcomp
and
and
(bad)
fwait
fwait
hlt
hlt
mov
inc
div
mov
mov
or
ss
sar
cli
cli
cli
cli
cmc
test
jge
sub
sbb
push
jg
jg
jg
jg
inc
inc
jmp
push
inc
mov
or
add
add
jb
inc
data16
rol
not
inc
div
ss
cmps
sar
div
adc
repz
out
sub
out
std
std
std
out
std
std
imul
xor
cmc
cmc
jno
cmc
cmc
scas
scas
xchg
xchg
stos
stos
stos
mov
jmp
dec
(bad)
rcr
push
mov
arpl
sbb
mov
cli
mov
popa
pop
pop
jo
jo
jo
jo
in
in
in
lods
in
inc
inc
push
push
(bad)
push
push
(bad)
and
and
and
and
in
in
and
in
in
ret
ret
in
in
ret
ret
adc
rcl
rcl
jnp
cmc
mov
mov
mov
mov
int3
pop
dec
out
inc
mov
xor
xor
xor
xor
add
rcl
jno
xchg
rol
inc
rol
ja
xchg
xchg
jo
xchg
xchg
jmp
jmp
adc
mov
dec
sahf
dec
icebp
dec
stos
and
push
xchg
cmp
out
xchg
out
out
jne
jae
xor
loopne
jmp
loopne
jmp
gs
and
popa
sahf
sahf
sahf
retf
mov
cs
mov
cs
daa
daa
push
mov
nop
push
mov
push
sahf
pop
rcr
movs
movs
movs
(bad)
movs
dec
dec
stos
stos
pop
pop
pop
stos
pop
pop
pop
push
push
loopne
movs
movs
loop
movs
movs
int3
int3
int3
movs
int3
int3
int3
std
std
cld
pop
mov
outs
vmovd
lds
mov
js
adc
xchg
xchg
gs
call
(bad)
cld
xor
and
and
and
and
and
mov
pusha
and
outs
outs
or
outs
outs
or
mov
or
mov
add
add
rol
add
shl
xor
(bad)
push
(bad)
(bad)
push
xor
mov
rcl
push
push
icebp
outs
outs
outs
icebp
outs
outs
outs
fs
adc
lea
push
push
push
jle
push
push
sbb
sbb
sbb
mov
and
and
mov
mov
push
dec
cmps
dec
(bad)
(bad)
fldenv
and
fldenv
and
movs
movs
and
movs
movs
xor
cmp
cmp
loop
xchg
add
add
mov
add
cdq
(bad)
cdq
cdq
jne
je
pop
xor
jno
and
pop
(bad)
ss
test
mov
out
xchg
fwait
fwait
fwait
xchg
fwait
fwait
(bad)
movups
loopne
loopne
loopne
loopne
jae
xor
not
icebp
icebp
mov
icebp
icebp
in
lock
lock
cli
cli
movs
or
jns
outs
arpl
outs
mov
loope
inc
inc
inc
inc
inc
inc
inc
inc
loope
inc
inc
loope
mov
inc
xchg
xchg
xchg
add
in
in
mov
mov
xchg
js
and
or
lock
or
pop
pop
pushf
pushf
pushf
and
(bad)
jne
fsub
push
cmps
cmps
inc
inc
inc
cmps
inc
inc
inc
and
and
arpl
loop
loop
loop
loop
add
(bad)
fwait
add
(bad)
daa
daa
daa
les
aam
add
ret
rol
(bad)
les
(bad)
les
and
call
xchg
mov
stc
sbb
or
jecxz
jecxz
mul
jecxz
pop
aam
ins
pop
aam
lea
jo
jg
data16
sbb
test
data16
and
and
(bad)
fidivr
je
sbb
pop
cmp
cmp
jp
loop
loop
jmp
sbb
(bad)
(bad)
ss
jnp
jbe
jnp
rcr
lods
repz
imul
adc
adc
addr16
adc
leave
fcmovu
retf
fcmove
retf
stos
test
in
pop
in
in
int
fcmovu
retf
(bad)
jmp
mov
clc
bound
dec
cwde
inc
mov
std
ins
ins
ins
std
ins
ins
ins
jne
jne
jne
jne
pop
ja
pop
pop
xor
mov
jns
mov
cs
cmc
iret
into
into
repz
into
into
sub
int
xor
xor
div
pop
pop
pop
adc
pop
pop
push
and
sub
into
inc
mov
adc
lds
pop
rol
rcl
lea
mov
pop
pop
pop
pop
pop
cli
pop
lods
lods
std
pop
lods
lods
cli
cli
cli
mov
add
jne
push
sbb
jl
cdq
sbb
adc
cmp
adc
mov
cmp
mov
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
out
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
inc
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
jmp
fdivr
call
mov
xor
call
pop
sub
add
popf
pop
ret
cmp
add
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
fdivrp
jmp
sar
call
mov
xor
call
pop
sub
add
popf
pop
ret
pop
pop
push
push
popa
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
(bad)
jmp
into
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
or
adc
dec
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
push
ins
inc
xchg
jne
jno
sbb
imul
adc
push
dec
pop
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
or
ins
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
jg
sub
push
jmp
jle
mov
sbb
je
arpl
cmp
enter
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
xor
sbb
push
push
and
ins
xor
outs
pop
or
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
ins
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
push
cli
adc
inc
sbb
shl
sbb
push
inc
push
sub
pop
sbb
inc
jae
adc
add
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
jnp
inc
rcr
or
adc
xor
sbb
inc
rcl
inc
(bad)
outs
leave
data16
jns
add
push
es
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
pusha
pop
inc
dec
aas
sub
data16
jo
adc
xor
sub
inc
push
push
add
ins
clc
cmp
or
push
mov
je
outs
push
sub
enter
out
fbstp
add
pushf
and
dec
shr
adc
xor
cmp
arpl
sub
data16
or
sbb
es
xchg
xor
dec
aaa
or
loope
or
xor
push
mov
fs
mov
jae
and
adc
sub
cmp
xchg
or
lea
sub
outs
sbb
cld
push
mov
scas
jno
and
adc
pop
add
adc
push
lds
pop
sub
clc
dec
iret
jae
je
push
push
data16
mov
and
xor
pop
jp
es
inc
dec
xor
mov
pop
mov
adc
jbe
inc
xchg
sub
mov
movs
ins
sbb
add
mov
adc
and
mov
pusha
jbe
jmp
or
dec
test
mov
dec
mov
sub
mov
xchg
inc
mov
dec
cs
scas
add
xlat
sub
inc
mov
sbb
adc
pcmpeqw
cmp
ss
xor
or
and
cld
xor
mov
fs
jne
sub
jbe
data16
dec
push
push
push
add
inc
lods
and
add
sub
cmp
and
ins
add
add
enter
test
idiv
cmp
pop
cmp
outs
enter
xlat
jnp
pop
(bad)
imul
inc
jno
sbb
and
adc
cmp
add
or
adc
cmovns
add
or
or
jge
sar
ins
pop
sub
leave
je
push
addr16
imul
pop
and
es
sub
dec
adc
jl
addr16
das
sub
out
push
jl
paddusw
data16
cmp
jnp
aaa
repnz
out
hlt
outs
fstp
and
dec
cmp
daa
or
les
push
push
inc
into
dec
imul
data16
ins
jg
hlt
or
push
and
inc
int
xchg
and
adc
jg
jnp
push
(bad)
pop
lods
cmp
adc
and
or
sbb
mov
mov
mov
dec
aam
lea
out
push
out
inc
dec
dec
sub
popa
out
inc
pop
or
xlat
ds
xor
xor
add
sbb
adc
enter
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
popa
ins
sub
xor
mov
cmp
iret
arpl
adc
paddusb
arpl
jbe
and
add
scas
inc
je
jb
inc
ins
fstp
cmps
cmp
push
sub
push
sbb
pop
test
or
and
push
push
add
jnp
push
xchg
push
loop
xchg
mov
pop
sti
(bad)
add
arpl
xchg
je
fs
jno
dec
push
dec
popa
js
push
les
jo
dec
mov
outs
mov
sub
sbb
and
adc
push
data16
and
jp
aam
pop
adc
sub
push
adc
add
in
push
dec
jl
sub
sub
push
fsub
in
gs
inc
mov
inc
pop
dec
jmp
jne
ins
jno
push
cmp
or
pop
cmp
add
add
or
dec
pop
imul
dec
ja
adc
jl
imul
pop
loop
ror
test
jge
cmp
jno
dec
mov
and
mov
push
cmp
aam
stos
and
dec
ret
xor
jo
jbe
add
sbb
mov
cmp
ins
push
push
in
sub
xor
xor
jbe
pop
sbb
dec
pop
mov
pop
jge
push
or
ds
dec
inc
mov
dec
push
jo
mov
je
cmp
adc
mul
and
js
push
mov
push
inc
dec
cmps
inc
test
nop
dec
mov
pusha
mov
outs
and
cmp
pop
push
mov
cmc
and
xor
and
sub
push
cmps
push
pusha
push
fadd
jb
aam
test
jae
pop
push
jmp
cmp
adc
shl
inc
mov
movs
push
jb
es
sbb
ss
adc
mov
pop
clc
sbb
inc
and
fld
or
ja
ins
pop
bound
pushf
and
xchg
push
fidiv
ret
imul
imul
jmp
gs
inc
call
or
and
sbb
pop
mov
jo
lahf
push
jecxz
ret
xor
xchg
push
int
int
fisttp
mov
and
push
jge
cdq
jbe
inc
retf
pop
mov
pusha
test
das
fwait
pop
inc
jb
jl
inc
inc
xor
pusha
fwait
inc
in
repnz
mov
lds
test
inc
xchg
inc
sbb
iret
add
cmp
out
repz
and
pop
xchg
jbe
sbb
adc
inc
sbb
pop
jp
aad
dec
popa
mov
cs
mov
cmps
sub
das
test
sbb
push
and
and
push
sub
or
pop
sbb
jle
dec
and
ds
sahf
adc
inc
or
mov
jg
jmp
ins
jp
push
add
xor
aaa
or
aas
je
pop
or
jno
dec
jecxz
repz
popf
sub
and
dec
cmovae
(bad)
pop
arpl
les
sub
cmp
inc
mov
and
mov
inc
jno
in
pop
ficom
jmp
mov
mov
xor
call
pop
sub
add
popf
pop
ret
lea
imul
and
push
ss
adc
push
sbb
dec
js
jbe
gs
fdiv
mov
ins
pop
sub
sbb
sub
inc
adc
cwde
daa
jb
jnp
lods
pusha
ficomp
outs
inc
inc
inc
push
jecxz
jno
movs
ins
mov
lock
jle
fisttp
ins
lock
pop
xor
out
sub
pop
fbstp
mov
push
add
gs
ins
or
call
jle
sbb
push
sub
and
push
xor
jb
mov
imul
cmp
push
icebp
aaa
cdq
add
and
add
push
jns
out
call
and
xor
xor
popa
shr
psubd
and
jle
in
sbb
xor
jge
push
and
sub
or
inc
add
jne
js
xor
daa
in
inc
or
jl
outs
stc
pop
cs
mov
js
sahf
sub
pop
cmp
jno
int3
ss
inc
sub
push
dec
cmps
dec
fwait
push
mov
xor
movs
jbe
outs
je
dec
mov
dec
fs
and
sub
fwait
imul
and
push
leave
inc
pop
push
and
and
ja
cmp
dec
cs
xor
jno
dec
jne
push
(bad)
jg
dec
adc
add
dec
or
sub
outs
xor
mov
nop
popa
mov
pmullw
mov
xor
jmp
pop
ins
sbb
sub
call
xor
xchg
jbe
pop
push
push
jl
jae
jp
aas
push
xor
adc
adc
jae
sub
cmp
movs
imul
dec
and
pop
xor
jne
sub
or
in
dec
or
xor
or
retf
xor
test
sar
push
clc
xor
sub
adc
dec
sbb
retf
or
sbb
je
cmp
div
(bad)
ins
and
ins
jns
cmps
dec
(bad)
cmp
add
xor
cmp
loopne
mov
push
xlat
inc
loop
xchg
push
stos
jae
add
nop
xor
je
sub
inc
aam
test
in
ds
cmp
adc
sub
push
or
sbb
repz
or
add
(bad)
jp
sbb
outs
pop
push
sub
imul
push
adc
push
push
mov
push
rcr
gs
sub
fnstsw
sbb
pusha
push
jge
cmp
push
dec
pop
and
inc
xchg
push
mov
cmp
adc
pop
cmp
inc
pop
jg
push
mov
dec
jbe
cwde
or
fstp
test
adc
adc
ds
and
sub
es
dec
int
fs
push
arpl
ja
dec
sbb
xor
push
jnp
jns
dec
dec
ins
or
jl
dec
outs
and
cwde
imul
adc
inc
shl
ins
je
es
xor
jns
je
adc
dec
cli
ins
repnz
inc
jno
and
sub
push
push
dec
sub
or
jns
jns
jp
jae
push
mov
jne
unpckhps
sbb
mov
xchg
push
pop
push
lods
and
ds
jge
inc
jno
test
add
arpl
iret
sub
dec
sahf
sbb
pop
mov
and
gs
data16
out
fimul
add
das
das
sub
jbe
push
jnp
xor
pushf
push
aas
dec
fstp
aaa
stc
push
xor
out
dec
mov
and
jno
add
jae
jp
pop
xor
ss
cmp
jnp
add
inc
pop
mov
arpl
cvtps2pi
sub
jb
sbb
adc
pop
sub
gs
popa
jns
outs
cmp
push
cmp
inc
inc
pop
test
movs
jae
or
add
or
xor
stc
sub
or
pop
rcr
shl
add
sub
bound
jno
jle
scas
sub
dec
shl
ins
ss
ins
aas
or
push
push
push
imul
push
das
imul
inc
rcr
imul
sub
aam
adc
adc
adc
imul
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
inc
push
sbb
xor
jle
dec
js
ret
inc
mov
jno
imul
sub
inc
in
push
and
dec
push
popa
and
pop
or
push
cmp
es
sub
sub
dec
idiv
data16
repz
aas
inc
adc
jae
add
sar
pop
jle
push
std
jl
pop
loope
pusha
pop
inc
pop
xchg
push
pop
cmp
dec
add
push
xchg
adc
push
(bad)
into
xor
inc
mov
adc
mov
sub
dec
cmp
add
dec
fidiv
push
stc
cmp
aas
mov
pop
test
call
dec
test
xchg
aas
call
push
cs
dec
push
xchg
inc
xchg
sbb
imul
test
fs
and
fadd
pusha
ja
sub
popa
dec
add
imul
xor
jp
dec
cs
mov
pop
mov
xor
or
cmovno
adc
dec
push
pushf
(bad)
addr16
addr16
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sbb
inc
push
mov
call
daa
pop
sbb
ss
dec
out
adc
je
jae
and
mov
jle
sub
comiss
cmp
sbb
mov
add
bound
adc
push
dec
jb
push
fnstsw
push
ins
dec
dec
inc
dec
xchg
das
sub
in
jns
jle
add
sbb
jne
and
iret
dec
pop
sub
out
aas
xor
cs
xor
inc
add
dec
repz
jg
clc
inc
jmp
sbb
arpl
ret
ja
jne
pop
pop
inc
pop
jbe
adc
es
bnd
push
mov
xchg
sbb
sbb
aaa
xchg
cmp
push
pop
xor
lds
dec
adc
cmp
dec
ds
push
(bad)
pop
or
rcr
or
add
adc
outs
cmp
dec
add
push
xor
int
ficomp
fcom
inc
pushf
das
ins
push
jnp
je
inc
(bad)
cmp
lds
addr16
in
aaa
inc
jl
cmp
and
push
lea
inc
in
addr16
clc
xor
sub
ss
dec
dec
ins
push
pop
bound
das
mov
jge
pop
sub
pop
or
cmp
jb
pop
pop
cmp
cmc
pop
xchg
pop
push
aaa
mov
or
jp
dec
ret
data16
adc
mov
cmp
add
adc
and
and
xor
fidivr
jne
or
jbe
add
or
inc
add
jno
(bad)
jne
jl
sub
pusha
sub
aas
jo
mov
add
inc
or
inc
cmp
pusha
or
cli
xor
push
hlt
outs
lock
mov
jle
dec
cmovge
push
jp
in
sbb
mov
pop
push
neg
adc
daa
sub
aas
add
daa
gs
mov
imul
or
scas
dec
clc
inc
add
stc
and
outs
sub
jo
jnp
dec
aam
xchg
ja
fistp
imul
sbb
push
outs
nop
dec
clc
or
outs
mov
fdiv
push
jae
and
inc
jno
sbb
popf
dec
outs
imul
sbb
xor
jnp
sub
mov
push
jb
sbb
adc
sub
out
(bad)
jge
push
or
mov
cmp
daa
rol
push
fld
cmp
pop
aad
mov
push
dec
adc
jne
pop
dec
adc
jp
push
test
dec
mov
ja
pop
lds
js
adc
mov
cmp
pop
cmps
sbb
push
or
rol
sbb
test
stos
or
xor
es
cmp
dec
push
xor
pop
sub
add
push
xor
cdq
jnp
inc
addr16
ss
inc
pushf
xor
dec
cmp
inc
push
sti
ds
ins
rcr
repnz
test
or
pusha
mov
mov
pop
dec
pop
sub
imul
mov
add
inc
xchg
and
sbb
dec
aaa
dec
add
push
icebp
dec
and
and
and
jle
jo
pop
pop
cmp
or
sub
cmp
inc
sbb
push
jb
and
add
jne
js
jnp
sbb
ins
pop
mov
fidivr
dec
les
cmp
inc
and
or
mov
in
xor
daa
mov
mov
jbe
push
pop
adc
mov
pop
inc
xchg
inc
sbb
or
cs
dec
test
jae
mov
jecxz
push
bound
ins
sbb
sub
jb
push
sub
inc
(bad)
sbb
addr16
jle
dec
sub
dec
loop
pushf
cmp
mov
add
cmp
mov
jp
ins
jl
dec
jne
sbb
push
ins
and
xchg
push
in
push
cmp
pushf
dec
fwait
pop
jp
sbb
or
sbb
xor
aas
retf
push
pop
jae
add
adc
jp
jb
outs
or
cs
cdq
sbb
inc
mov
sub
or
addr16
push
mov
add
jle
push
push
into
sub
jno
sub
add
and
push
cmp
outs
enter
imul
cmps
adc
sub
cmp
sub
cmp
nop
inc
data16
push
mov
pop
sbb
pop
and
cdq
ins
mov
inc
inc
dec
stos
jge
cmp
test
pop
sbb
movs
pusha
mov
pop
or
sub
pop
xor
pop
rol
outs
pop
cmps
cmp
cmp
mov
jle
jge
push
xchg
pop
mov
pop
mov
sub
(bad)
jo
xor
enter
adc
sub
je
jnp
pop
xor
(bad)
adc
adc
aaa
mov
pop
scas
push
inc
xor
ds
sub
dec
dec
gs
mov
loop
call
cmp
cmp
or
stc
pop
imul
sub
sub
jge
dec
stos
(bad)
fistp
cmp
add
push
mov
pop
imul
je
or
ss
sbb
jae
xchg
or
add
fimul
add
sbb
jb
adc
sbb
or
or
pop
retf
outs
adc
jbe
push
leave
cmp
aas
mov
sub
jnp
jmp
popa
add
jae
pop
dec
test
jle
or
or
fsub
sbb
or
xor
int3
gs
jb
jl
adc
fs
inc
push
pop
stos
inc
pop
add
mov
ds
adc
stos
sbb
test
je
cmp
or
push
mov
sbb
imul
cs
or
pop
jl
jp
push
retf
jne
dec
push
sbb
out
(bad)
stc
add
dec
cmp
push
stos
and
push
in
jmp
aaa
sbb
cs
ret
push
jae
mov
xchg
push
stos
arpl
nop
adc
sbb
add
dec
xchg
dec
cmp
cmps
xor
vmread
add
scas
adc
and
dec
outs
movs
inc
test
out
xor
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
inc
jg
pop
jle
cmp
add
and
dec
int
shl
adc
adc
xor
and
pop
push
push
test
test
add
std
sub
or
push
dec
sti
sub
mov
jno
and
push
and
ds
stos
outs
jmp
mov
js
and
push
cmp
popa
and
or
cmp
in
jge
jb
inc
lds
loopne
add
pop
push
aaa
gs
add
jg
ins
popa
imul
mov
call
jne
imul
movs
jle
adc
cmp
es
cld
pop
mov
mov
shl
dec
sbb
jbe
xor
sbb
dec
cmp
push
ds
cli
jmp
es
jns
jne
sub
cwde
push
test
fld
mov
push
and
neg
inc
daa
mov
and
(bad)
cmp
pop
mov
xlat
and
push
aas
jo
jo
pop
cwde
pop
mov
sbb
adc
push
dec
jl
inc
mov
fs
pusha
sub
xlat
inc
leave
and
jb
and
push
mov
ret
push
adc
and
pop
inc
add
js
sbb
mov
test
sbb
ins
add
ins
adc
out
jo
std
push
pusha
adc
mov
cmp
leave
xor
cmp
sbb
mov
jae
gs
jnp
jge
arpl
pop
inc
push
inc
push
fidivr
int3
outs
mov
scas
xor
add
cmp
or
bound
data16
je
sbb
push
jb
in
arpl
adc
sbb
cmp
push
out
cwde
jo
je
dec
add
jmp
scas
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
int3
and
xor
push
xchg
jo
jae
jp
cs
dec
pop
push
or
mov
adc
movs
imul
push
xor
scas
and
sbb
jb
adc
inc
into
push
inc
xor
jo
inc
add
mov
je
inc
gs
cmp
jne
jl
add
jo
fisub
addr16
dec
out
jle
and
sbb
jp
js
or
call
sub
dec
adc
or
and
mov
ret
adc
xor
daa
and
ins
int
sub
push
ins
adc
je
mov
sbb
inc
jb
(bad)
or
xor
jb
pop
jne
mov
pop
push
pop
dec
sbb
add
add
push
adc
dec
dec
jle
sub
cli
sbb
jnp
dec
test
dec
pop
inc
mov
sbb
cdq
data16
push
into
or
ret
add
jge
ins
paddw
fmul
xor
(bad)
sub
jle
jge
pop
add
popf
jo
sbb
dec
les
adc
pop
out
pop
jle
sub
jle
pop
dec
gs
daa
test
jbe
sub
popa
sub
push
cmp
jae
or
jg
xor
cs
xor
fwait
pop
sbb
test
jb
and
and
pop
shl
mov
ja
jo
inc
dec
inc
cmps
push
jb
into
pop
jno
mov
stos
push
test
dec
mov
js
aad
jae
das
push
adc
pop
pusha
fs
jnp
jns
jae
and
adc
out
jne
inc
hlt
adc
push
iret
adc
sbb
xor
add
and
sub
jle
mov
outs
adc
pop
loope
sbb
sbb
and
addr16
sbb
add
adc
push
xlat
pop
fstp
mov
jns
add
pop
push
bound
push
cmp
imul
jle
dec
pop
cmp
jl
push
out
jl
mov
push
push
inc
leave
je
pop
fdivr
fistp
inc
sbb
out
pop
cmp
or
ins
jo
pop
or
psrad
add
xor
pop
inc
dec
xor
sbb
dec
cmp
xchg
jbe
inc
call
dec
mov
and
pop
bound
add
dec
jae
pop
ja
jle
pop
mov
sub
xor
xor
test
xor
pop
push
push
mov
es
cmp
sub
xor
sbb
sbb
inc
fdivr
sbb
mov
dec
(bad)
cmp
cmp
fnstcw
js
das
push
shl
inc
es
inc
rcl
sbb
mov
test
push
lahf
and
ja
adc
(bad)
push
add
pop
sbb
dec
aaa
add
pop
loopne
(bad)
je
fs
outs
aaa
push
into
adc
push
xor
push
sub
sbb
popa
lea
jge
test
sub
mov
aas
dec
jl
jmp
imul
ds
pop
std
popa
mov
pop
sub
or
adc
sub
lea
fs
sbb
neg
rcr
push
(bad)
or
or
sbb
pop
pop
push
repz
push
cmp
add
mov
add
cmp
dec
les
jae
pop
dec
xor
outs
jp
or
push
leave
aas
enter
aaa
outs
sti
and
mov
mov
ins
pop
addr16
jp
inc
fld
or
xor
push
cmp
imul
imul
jle
gs
inc
les
arpl
jne
sub
pop
shl
cmp
cmp
dec
inc
shr
sbb
dec
or
and
(bad)
cmp
aad
inc
jo
push
or
xchg
pop
inc
inc
mov
or
call
push
push
add
adc
xchg
adc
clc
pop
es
fsub
pop
mov
jno
ja
push
and
or
aaa
lds
data16
int3
sbb
add
js
ins
pop
fdiv
inc
rcl
out
shl
es
pop
push
ins
fnstenv
ins
mov
push
xor
cmp
adc
jae
sub
jle
or
xchg
sbb
dec
jb
inc
(bad)
arpl
arpl
ins
push
xchg
ja
add
das
fisttp
xor
jns
iret
inc
xor
aas
fist
fist
(bad)
jge
imul
and
sub
fdivr
push
out
or
pop
jb
dec
and
push
bound
outs
push
inc
sbb
push
mov
outs
push
push
pop
cmp
jl
ss
outs
xor
dec
sub
aaa
push
inc
psrlw
int3
add
jp
xor
imul
inc
add
add
cwde
dec
xlat
dec
stos
push
shr
jp
arpl
jg
div
add
cmp
cmp
adc
push
and
and
add
inc
and
xor
cli
sub
inc
sti
dec
pop
dec
dec
push
cmp
or
dec
cli
bound
jge
outs
test
inc
xlat
cs
dec
(bad)
popa
fsubr
push
popf
inc
loop
test
mov
xor
sbb
push
sbb
cwde
push
mov
mov
adc
sbb
jg
cmp
bnd
and
outs
clc
ins
dec
push
push
jo
or
gs
or
sub
imul
sbb
arpl
inc
jp
jo
adc
jne
jb
es
jg
push
scas
popa
and
sbb
test
jmp
test
call
mov
xor
call
pop
sub
add
popf
pop
ret
lods
jnp
push
stc
push
mov
dec
dec
and
adc
sbb
imul
sbb
arpl
pusha
rcl
or
push
je
push
cmp
inc
dec
inc
and
xchg
push
and
and
je
fs
js
sub
bound
jo
pop
xor
mov
ins
enter
repz
add
sbb
cmp
pop
cmp
add
sub
sub
cdq
jge
dec
push
cmp
in
sbb
shl
sub
sub
jg
and
das
pop
xor
push
jecxz
loope
mov
outs
jnp
ss
call
dec
jg
mov
cmps
adc
jge
add
sbb
add
inc
mov
sbb
or
and
sub
and
push
xor
inc
outs
ins
dec
ja
push
ror
dec
sbb
aaa
movs
sbb
mov
(bad)
jmp
cmps
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
into
push
sbb
adc
fiadd
inc
ins
cmp
dec
inc
sbb
test
mov
fs
push
dec
pop
outs
push
rcr
pop
js
xor
ins
mov
rcr
(bad)
jmp
inc
mov
bound
and
jge
sub
fs
or
(bad)
cmp
adc
inc
ds
inc
movs
adc
sub
push
push
dec
adc
jg
sbb
xchg
pop
popf
add
inc
(bad)
das
data16
push
cs
scas
dec
retf
ds
sbb
pop
xor
inc
xchg
push
push
or
pop
out
(bad)
imul
adc
jae
bound
mov
xor
and
sbb
inc
je
jge
jge
cmp
aaa
push
cmp
mov
cmp
ins
and
xor
xchg
ja
pop
cld
sbb
adc
cmp
imul
pop
outs
imul
jno
arpl
cs
cmp
or
js
and
cs
jnp
xor
stos
pusha
mov
mul
and
push
jnp
cwde
inc
sbb
jg
jp
sub
sub
pop
push
sbb
cmp
dec
or
lea
sbb
cmp
jl
pop
mov
xor
dec
outs
stos
jne
jne
jb
push
fbld
cmp
mov
and
cmp
jbe
or
mov
and
je
ficom
test
stos
adc
sbb
adc
mov
imul
dec
jb
pop
mov
gs
push
inc
mov
push
ja
or
push
jbe
adc
daa
adc
mov
mov
inc
push
fs
je
sbb
fdivr
jbe
mov
add
xor
push
add
rcl
cwde
imul
dec
scas
jg
arpl
jno
hlt
push
add
xor
(bad)
and
cmp
call
xor
or
ret
and
xor
xor
pusha
pop
dec
and
or
sbb
pop
jmp
sbb
cdq
aas
dec
pop
mov
mov
popa
dec
sbb
add
out
adc
adc
add
add
pop
sub
sbb
js
aas
add
push
sbb
cmp
adc
pop
sub
sub
dec
or
pop
mov
jl
out
in
pop
cmp
or
imul
js
popa
es
jno
adc
jnp
ins
clc
jl
jnp
adc
cli
imul
arpl
bound
jg
sub
push
imul
push
pop
stc
pop
repnz
jl
sbb
in
mov
ja
(bad)
push
mov
pop
lods
xor
jle
sbb
jne
push
jg
push
push
sbb
ror
mov
jae
and
js
add
aas
pop
push
sbb
pop
cmp
repz
sub
xor
outs
adc
sbb
inc
mov
add
jae
inc
outs
mov
push
ss
adc
addr16
inc
adc
jecxz
jle
dec
test
adc
adc
pusha
push
push
push
loope
mov
out
mov
leave
leave
leave
ja
mov
into
jl
or
sbb
sbb
sbb
sbb
xor
add
jno
pop
pop
(bad)
outs
outs
(bad)
outs
outs
mov
mov
inc
mov
inc
ret
ret
inc
inc
ret
ret
adc
sub
sub
sub
sub
xor
mov
mov
sahf
sahf
lahf
or
push
push
adc
leave
leave
leave
mov
push
or
push
or
dec
xchg
jns
js
jns
js
test
js
test
xor
xor
push
jno
js
cli
cli
invd
sbb
lock
add
xchg
popf
popf
mov
mov
cmps
fstp
cmps
cmps
fstp
xchg
xchg
fstp
xchg
xchg
adc
adc
xor
lahf
inc
jno
xchg
xchg
in
shr
loope
(bad)
(bad)
xlat
cmp
movs
movs
fldenv
pop
pop
sub
pop
jb
jb
dec
pop
out
data16
jmp
mov
cdq
pop
cdq
pop
lods
sbb
sbb
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
sub
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
(bad)
jmp
in
call
mov
xor
call
pop
sub
add
popf
pop
ret
or
dec
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
jecxz
jle
dec
test
or
cmp
mov
add
add
xchg
stos
sbb
sbb
mov
sub
mov
in
movs
mov
xor
(bad)
sbb
loope
ins
ins
ins
sub
sub
xchg
dec
xchg
xchg
xchg
fcomp
cmp
daa
daa
daa
das
xchg
push
ret
aam
inc
scas
aam
adc
jle
sub
jle
sub
fwait
fwait
call
cld
cld
mov
cld
cld
mov
(bad)
fbstp
and
fbld
and
ret
ret
and
ret
ret
adc
jns
jns
js
jns
jp
mov
popf
mov
or
mov
leave
and
mov
je
cld
cld
je
cld
cld
adc
adc
push
adc
push
adc
push
push
gs
fs
inc
inc
inc
inc
inc
inc
pushf
mov
lahf
cli
cli
cli
pop
leave
neg
jns
outs
fisubr
ds
xchg
xchg
xchg
repz
xchg
xchg
pop
pop
xchg
xchg
pop
pop
int
imul
test
es
sub
fstp
dec
dec
dec
lea
test
push
push
inc
into
cld
in
stc
fnstsw
sti
stc
fnstsw
mov
or
fs
jb
jb
jb
imul
imul
shr
rcl
jo
rcl
jo
rcl
jo
dec
xor
mov
mov
sub
lods
arpl
dec
fs
dec
dec
scas
scas
scas
fwait
repz
mov
lock
fcomp
xchg
sar
fs
fs
adc
addr16
adc
push
push
aad
push
push
aad
and
and
and
and
inc
and
inc
ret
ret
inc
inc
ret
ret
adc
sub
sub
sub
mov
lods
lods
mov
sbb
sbb
daa
inc
sbb
daa
adc
adc
stos
or
cwde
mov
add
mov
adc
and
adc
cld
in
add
push
cld
inc
lahf
into
add
xchg
clc
inc
xchg
xchg
adc
(bad)
adc
xor
popa
popa
xor
popa
popa
mov
sahf
int3
mov
sahf
sahf
rcl
lock
lock
mov
mov
xchg
int
xchg
add
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
pop
add
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
(bad)
(bad)
jmp
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
out
pop
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
(bad)
jmp
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cmp
dec
jne
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
aad
jmp
aam
call
mov
xor
call
pop
sub
add
popf
pop
ret
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
jecxz
jle
dec
test
sbb
lds
add
fwait
inc
adc
scas
scas
scas
push
repnz
lds
add
cwde
cwde
daa
daa
jle
jg
cmp
dec
dec
pop
dec
dec
dec
cli
mov
xchg
fimul
push
jne
nop
inc
jne
nop
jg
push
xchg
aad
dec
rol
or
les
add
mov
je
or
or
imul
imul
vpandn
lds
inc
out
mov
sbb
pop
sbb
ins
jmp
jmp
test
test
sbb
xchg
sbb
pushf
pushf
pushf
xor
and
sub
mov
iret
mov
mov
std
cld
add
outs
outs
mov
mov
jno
mov
mov
(bad)
pi2fd
or
sahf
gs
int3
sbb
out
sbb
ins
sbb
or
(bad)
cmp
(bad)
(bad)
cmp
jge
sub
lods
xor
xor
cmp
retf
mov
(bad)
aas
mov
sbb
mov
sbb
jg
sbb
jg
ret
ret
mov
mov
stc
daa
daa
sub
cld
cld
cld
sar
cld
cld
ret
cld
ret
(bad)
(bad)
hlt
fidivr
mov
outs
add
outs
outs
lea
mov
or
push
ret
jae
mov
sub
mov
ins
jge
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
xchg
add
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jmp
fdivrp
call
mov
xor
call
pop
sub
add
popf
pop
ret
jmp
push
mov
pop
ret
xor
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cli
cmp
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
cmp
xor
test
adc
lds
stc
stc
stc
lea
loopne
inc
loopne
arpl
data16
fcom
pop
ins
fcom
pop
push
imul
clc
adc
inc
inc
ins
ins
mov
(bad)
jno
jno
jno
jno
pop
icebp
icebp
jne
icebp
icebp
pushf
pushf
pushf
sub
or
daa
xor
mov
shl
xor
shr
ja
ja
jp
inc
dec
ds
mov
mov
fwait
mov
(bad)
fcomp
fdivr
aas
sti
cs
sub
out
sub
lds
pusha
mov
fld
push
cwde
push
push
push
push
cmp
mov
fcomp
and
pop
std
mov
mov
dec
or
sbb
(bad)
(bad)
test
fcmovu
fild
sahf
fisttp
mov
add
add
daa
daa
daa
cmc
mov
rcl
pop
call
cmp
cld
cmp
cld
cld
push
push
push
and
adc
mov
adc
in
xor
jecxz
xor
lea
jno
mov
addr16
mov
imul
xchg
dec
dec
dec
xchg
dec
dec
dec
inc
inc
inc
out
es
inc
push
mov
inc
dec
cld
cld
std
xor
sti
sbb
mov
in
cli
cli
cli
es
jmp
pop
outs
std
cmp
outs
mov
push
push
push
push
push
jne
jne
jne
jne
movs
jo
movs
movs
inc
inc
es
mov
(bad)
rol
mov
mov
mov
inc
inc
es
cld
push
push
mov
push
mov
ret
ret
ret
mov
lea
jmp
push
push
lods
lods
push
push
lods
lods
adc
adc
retf
retf
xor
xchg
cli
cli
cli
cli
push
addr16
je
outs
dec
je
outs
jbe
or
ret
push
xor
and
and
and
mov
cmps
add
mov
fcomp
add
sub
push
xor
inc
xchg
mov
push
mov
push
ret
ret
push
push
ret
ret
adc
push
push
push
in
stos
stos
stos
jmp
sub
add
add
pusha
inc
add
jnp
jnp
jnp
inc
in
mov
in
ss
pop
in
xchg
sbb
imul
pop
pop
repnz
pop
pop
je
jne
adc
jne
and
push
and
and
test
scas
cmp
push
mov
xor
sub
sub
sub
adc
outs
jae
adc
add
fist
jmp
xor
xor
xor
xor
nop
jno
ss
jno
fcomp
fsub
push
dec
jb
xor
adc
cmp
jecxz
call
dec
(bad)
(bad)
dec
(bad)
(bad)
fstp
(bad)
fstp
(bad)
sub
mov
dec
dec
dec
jo
test
mov
xor
movs
dec
ja
ss
ss
daa
jg
dec
daa
jg
add
jo
sbb
nop
add
sub
or
scas
xchg
or
scas
and
and
inc
inc
mov
push
inc
xchg
xchg
jecxz
push
shl
sbb
pop
pop
pop
je
sbb
jae
pop
jae
jae
cmc
cmc
cmc
xor
cmc
cmc
mov
and
xor
out
mov
loop
mov
mov
push
push
mov
or
mov
fs
mov
iret
iret
iret
jno
iret
iret
imul
fmul
jne
fcmovu
or
cmp
or
cmp
cmp
cmp
cmp
fs
and
xor
and
dec
mov
xchg
mov
mov
ret
mov
ret
ret
dec
inc
inc
inc
mov
adc
dec
adc
adc
shl
fcomp
fmul
pop
int3
mov
mov
cs
adc
adc
(bad)
adc
(bad)
jle
cmp
or
jle
call
fmulp
leave
adc
vunpcklpd
lds
in
in
mov
xchg
mov
xchg
movs
movs
cmp
sbb
cmp
inc
div
test
test
test
add
out
out
(bad)
out
out
out
mov
int
int3
mov
outs
cmp
dec
out
cwde
dec
out
and
rcr
rcl
shr
out
out
(bad)
jbe
out
pop
pop
pop
retf
pop
mov
pushf
mov
add
xchg
nop
add
adc
add
xchg
xchg
xchg
(bad)
(bad)
(bad)
jne
jo
(bad)
(bad)
cld
cld
iret
iret
std
cld
iret
iret
sub
into
iret
sub
in
in
in
sub
(bad)
jns
lahf
fisub
and
jo
xchg
nop
loopne
aad
add
add
sbb
daa
daa
loope
(bad)
fsubrp
in
enter
hlt
push
xor
pop
adc
adc
adc
adc
rcl
adc
ror
jne
pop
pop
(bad)
(bad)
adc
and
adc
and
sbb
and
sbb
ja
ja
ja
ja
(bad)
and
popf
popf
cmps
int
bound
sub
popa
mov
mov
mov
mov
pop
je
fwait
pop
je
scas
scas
scas
fyl2x
push
lea
(bad)
lds
ss
lds
dec
dec
jge
stc
stc
clc
fbstp
clc
mov
mov
mov
mov
mov
jbe
mov
jbe
pushf
pushf
sub
cmp
test
mov
dec
mov
sbb
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
mov
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
in
jmp
in
call
mov
xor
call
pop
sub
add
popf
pop
ret
inc
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
cmp
and
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
inc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
das
cs
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
jecxz
jle
dec
test
adc
and
movs
and
and
inc
pop
pop
mov
pop
arpl
push
cmp
jmp
pusha
pop
std
mov
(bad)
jg
pop
mov
aaa
mov
mov
int3
enter
in
in
cmc
out
in
in
loope
enter
enter
fdivr
lahf
enter
ficomp
nop
cs
jno
sub
push
push
pop
pop
cmp
data16
int3
int3
xchg
xchg
nop
daa
and
nop
jl
jl
jp
jl
(bad)
jmp
aad
jmp
inc
inc
inc
sub
xor
mov
sbb
(bad)
sbb
out
sub
cmps
out
retf
retf
jecxz
retf
retf
popa
mov
lea
sub
fild
cmps
mov
mov
in
in
in
cmp
call
fadd
inc
rol
inc
sub
jno
pusha
pusha
jno
pusha
pusha
adc
adc
jmp
addr16
addr16
fcomp
es
jae
pop
sub
pop
sub
mov
inc
pop
pop
xor
sbb
sbb
sbb
mov
mov
xchg
es
es
dec
xor
add
add
ret
ret
ret
and
ret
ret
leave
dec
xchg
xchg
into
dec
xchg
xchg
adc
adc
sti
shl
cli
push
or
in
in
in
in
movs
loopne
movs
movs
adc
out
out
out
sbb
out
out
sbb
ja
cdq
cdq
jbe
cdq
cdq
add
add
retf
inc
add
rcl
daa
rcl
rcl
mov
push
inc
mov
scas
scas
scas
lahf
movs
mov
mov
lds
lds
(bad)
jb
rol
jae
inc
inc
jae
inc
inc
add
add
add
add
retf
add
stos
add
add
pop
sbb
test
sbb
add
or
aaa
xchg
outs
mov
mov
mov
mov
into
iret
test
call
xchg
(bad)
(bad)
mov
mov
fild
adc
xor
arpl
pop
ins
pop
(bad)
pop
jnp
(bad)
pop
pop
loopne
pop
pop
pop
pop
pop
pop
pop
pop
(bad)
(bad)
(bad)
push
arpl
push
mov
stos
stos
pushf
pushf
pushf
mov
and
sbb
sbb
sbb
push
push
and
pop
push
push
push
movs
movs
scas
scas
movs
movs
scas
scas
jne
je
xchg
xor
add
adc
aad
adc
adc
adc
lahf
popa
add
xchg
hlt
mov
and
mov
cld
push
out
mov
stc
popf
popf
popf
jmp
mov
arpl
ret
pop
aam
xchg
push
pop
retf
sub
add
add
xor
xor
xor
sbb
ret
jecxz
(bad)
(bad)
(bad)
(bad)
stc
or
loop
mul
loop
jnp
(bad)
(bad)
jl
(bad)
(bad)
jmp
jmp
je
push
cmp
cmp
jne
dec
or
es
pop
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
adc
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
cwde
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
jecxz
jle
dec
test
or
ret
ret
inc
xchg
xchg
std
inc
xchg
xchg
add
mov
mov
sti
nop
daa
stos
and
dec
lods
lods
int
int3
xor
jmp
fcmovbe
(bad)
test
(bad)
(bad)
adc
adc
push
xchg
mov
das
jnp
into
aaa
mov
inc
inc
call
lea
je
test
retf
ds
adc
adc
adc
adc
xor
xor
xchg
test
cmp
movs
pop
pop
pop
adc
pop
(bad)
(bad)
les
(bad)
les
std
call
inc
dec
cli
jecxz
pop
cli
jecxz
stos
loop
test
jl
scas
scas
scas
cmp
scas
scas
jno
jo
lahf
xor
push
lea
or
or
leave
leave
leave
mov
fld
pop
(bad)
or
pop
(bad)
or
push
or
stos
stos
stos
push
fwait
stos
stos
or
or
xor
xor
sub
adc
sub
push
sub
push
sub
add
or
mov
push
nop
lea
and
sub
and
inc
inc
inc
jo
add
jl
bound
adc
jmp
adc
jmp
inc
inc
inc
jns
lds
mov
sbb
test
(bad)
(bad)
pop
(bad)
(bad)
inc
inc
mov
push
inc
or
test
push
gs
gs
jne
jne
jne
cmp
jne
cmp
inc
es
(bad)
cmp
rcl
(bad)
rol
(bad)
inc
inc
lds
inc
js
inc
inc
js
inc
inc
mov
cmp
scas
scas
sub
(bad)
enter
and
and
pop
sub
cli
cli
mov
iret
loope
outs
not
outs
or
stos
push
dec
xchg
dec
movs
movs
movs
dec
movs
movs
movs
ret
call
(bad)
mov
ret
into
into
mov
aas
aas
add
mov
and
add
ja
pop
pop
ret
ret
pop
pop
ret
ret
imul
mov
imul
mov
xchg
xlat
mov
aaa
rol
paddsb
sahf
mov
retf
scas
in
out
in
out
cld
xor
mov
div
imul
in
in
xchg
or
imul
pop
imul
add
push
mov
mov
and
daa
jmp
adc
adc
or
or
jp
les
aas
aas
mov
sbb
aas
sbb
ja
xor
mov
mov
int3
int3
js
leave
int3
js
jb
aad
aad
sub
sub
mov
(bad)
jl
jmp
jns
pop
xchg
cmp
cmp
int3
int
in
int
int3
int3
enter
jo
mov
jb
jb
fucomp
sar
ret
jle
mov
push
push
pusha
push
push
push
fs
and
xchg
xchg
pop
pop
inc
inc
adc
mov
inc
mov
mov
adc
adc
js
adc
int
int
xor
xor
sub
sbb
sbb
in
in
in
imul
imul
inc
inc
fstp
inc
inc
std
std
cld
pop
fidivr
repnz
xor
mov
jae
mov
push
fidiv
out
fidiv
out
shr
mov
(bad)
fisttp
fcmovu
movs
movs
inc
inc
(bad)
fnstenv
jl
scas
cmp
cmp
and
push
push
pusha
and
xor
fstp
add
dec
(bad)
dec
dec
gs
gs
pusha
gs
fcomp
jne
jne
mov
fdiv
xor
xor
xor
mov
xchg
xchg
(bad)
inc
inc
es
mov
ret
xchg
add
cli
(bad)
adc
std
(bad)
adc
leave
leave
leave
idiv
cmp
repnz
mov
sub
(bad)
jmp
es
es
adc
addr16
cwde
cwde
cwde
call
dec
xchg
cdq
dec
cdq
cdq
cdq
xchg
xchg
fwait
cdq
xchg
xchg
fs
or
repnz
repnz
stos
stos
repnz
stos
stos
loope
scas
stos
loope
jb
add
jno
retf
and
retf
and
cmp
and
cmp
daa
or
repnz
add
xor
add
xor
mov
cld
mov
or
(bad)
cmovge
(bad)
syscall
add
arpl
enter
adc
aas
outs
outs
outs
inc
inc
inc
pop
xor
inc
loope
cmp
rcl
cmp
rcl
xor
iret
into
mov
add
add
adc
sbb
pushf
pushf
pushf
loope
xor
jmp
in
xchg
cmc
cmp
jmp
movs
jmp
retf
push
push
cmps
and
push
(bad)
lock
pop
icebp
lock
pop
pop
push
push
pop
pop
push
mov
mov
sub
es
push
push
dec
dec
push
push
dec
dec
scas
scas
scas
addr16
retf
rol
inc
(bad)
inc
lds
cwde
ror
or
or
or
(bad)
fisub
lahf
(bad)
shl
div
adc
or
jne
jne
jne
adc
or
adc
xchg
xchg
es
xchg
xchg
test
test
test
test
xor
aam
jno
call
pop
sbb
push
pop
jmp
jmp
jmp
jmp
ins
(bad)
les
(bad)
(bad)
fcomp
fdivr
enter
sub
pop
pop
sub
lods
xchg
fsubr
div
lods
div
test
inc
add
xor
(bad)
push
(bad)
(bad)
jp
std
(bad)
jp
fstp
fnstsw
fstp
(bad)
fidivr
cdq
xor
(bad)
xor
into
add
sub
add
sub
mov
xor
inc
call
jae
ret
ret
test
test
test
test
xor
aam
jno
call
aas
test
lahf
and
xor
sub
push
enter
adc
push
std
std
cs
std
std
push
and
std
push
and
scas
out
out
and
cmp
in
cmp
leave
std
out
pop
sub
out
pop
sub
lock
lock
ret
lock
ret
sbb
mov
(bad)
(bad)
jmp
mov
add
mov
sbb
mov
push
push
push
ret
ret
push
push
ret
ret
adc
dec
dec
dec
push
dec
dec
dec
aaa
aaa
je
or
bound
or
cmp
push
cmp
push
test
test
mov
popf
mov
iret
iret
fxch
iret
iret
(bad)
bswap
iret
(bad)
sets
add
add
mov
ss
xor
ss
jg
jg
jg
ss
sub
xor
sub
cs
out
dec
out
out
adc
fwait
addr16
adc
and
xor
sbb
test
ja
(bad)
fidivr
mov
push
push
mov
xchg
xchg
xchg
cmp
loopne
loopne
loopne
push
shr
push
push
iret
mov
jae
push
jne
cmp
push
aas
xchg
xchg
fs
(bad)
punpcklwd
inc
inc
inc
inc
inc
mov
cld
pushf
pushf
or
or
ret
pop
pop
pop
cs
pop
pop
leave
push
sub
sub
cmp
div
xor
jmp
inc
and
and
and
mov
stc
mov
dec
dec
fs
dec
mov
mov
sub
xchg
xchg
stc
stc
std
cld
stc
stc
rcl
clc
stc
rcl
adc
adc
adc
adc
(bad)
outs
stos
lahf
fimul
sub
test
mov
mov
mov
push
push
push
jmp
jmp
push
fdivp
adc
dec
out
add
xor
dec
add
dec
add
dec
in
in
in
add
sbb
repz
loop
sub
(bad)
fild
(bad)
(bad)
pminub
(bad)
cmovno
(bad)
mov
cld
scas
scas
cmp
cmp
ret
cmp
ret
ret
lea
jmp
dec
dec
std
std
dec
dec
std
std
xchg
xchg
std
std
xchg
xchg
and
and
push
and
inc
(bad)
fldcw
std
lods
lods
cmp
jns
jae
jae
jne
jae
cmp
cmc
dec
cmp
cmc
daa
daa
daa
aaa
lods
push
cmp
aam
sbb
shr
vmovd
(bad)
sub
daa
daa
dec
dec
dec
shl
(bad)
movsx
cld
cld
cld
mov
pop
stc
cld
pop
pop
fcomp
and
and
(bad)
(bad)
fistp
dec
dec
pop
pop
dec
dec
in
es
dec
in
es
in
xor
xor
into
jbe
rcl
rcl
rcl
shr
and
adc
push
xchg
mov
das
mov
ret
push
outs
mov
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
add
add
add
xchg
cmp
stos
stos
stos
les
mov
mov
mov
adc
jle
adc
jle
leave
leave
push
xor
into
cld
sub
fdivr
sub
cmps
(bad)
or
xor
xor
retf
retf
retf
fwait
fwait
fwait
retf
fwait
fwait
fwait
xchg
xchg
cdq
fwait
xchg
xchg
xor
mov
mov
sbb
add
mov
mov
mov
retf
jl
test
jl
adc
adc
push
xchg
mov
das
cs
or
jecxz
pop
repz
repz
jg
test
adc
call
add
out
add
out
out
jne
jne
jne
jne
out
out
jne
out
out
push
push
out
out
push
push
and
mov
mov
push
arpl
mov
div
inc
div
not
cld
cld
push
xchg
cld
arpl
sbb
pop
and
pop
shl
sbb
pop
fs
imul
imul
mov
lds
ss
into
hlt
xor
pop
mul
cld
pop
test
pop
retf
retf
retf
pop
retf
retf
retf
imul
mov
mov
or
(bad)
les
or
les
push
je
adc
clc
clc
jb
clc
clc
leave
in
loop
into
in
loop
add
add
nop
pop
mov
nop
aas
stos
retf
xchg
sub
push
xchg
sub
push
adc
adc
adc
adc
lock
adc
lock
inc
inc
inc
xor
mov
cmp
sti
cli
and
lahf
call
sub
push
mov
sub
pushf
pushf
push
xor
cmp
je
mov
push
enter
nop
mov
jmp
pop
rcl
scas
scas
scas
scas
scas
fnsave
or
mov
sbb
sbb
rcr
mov
xchg
xchg
hlt
hlt
xor
cmc
hlt
xor
cmc
imul
loope
imul
loope
sbb
cmc
push
push
hlt
cmc
push
push
fs
fs
fs
adc
(bad)
aad
(bad)
(bad)
push
push
push
(bad)
push
push
push
lock
push
lock
inc
jmp
std
std
loope
stos
stos
loop
stos
stos
and
and
shl
and
ror
fadd
ror
fcom
jg
adc
cmp
xchg
xchg
jo
xchg
xchg
test
cmp
adc
adc
mov
test
push
mov
loope
push
loope
fcom
push
and
test
call
xor
adc
rcl
test
in
in
in
pop
retf
test
jecxz
xor
rcr
jae
mov
push
fidiv
out
fidiv
out
(bad)
call
mov
out
out
mov
out
mov
inc
inc
inc
inc
inc
inc
inc
inc
(bad)
(bad)
fcmovu
rcl
rol
hlt
hlt
fdivp
hlt
hlt
dec
loop
cli
dec
loop
cli
ss
ret
xchg
aas
and
test
and
cdq
sbb
repz
mov
mov
jbe
xor
shl
xor
ror
mov
sub
out
and
out
data16
cs
and
xor
and
xor
shl
data16
cld
cld
push
(bad)
(bad)
lea
mov
add
ss
fstp
fstp
pmaxub
(bad)
movlps
jae
jae
jae
jae
stos
sbb
scas
scas
scas
sbb
lods
scas
repz
inc
sti
sti
inc
inc
sti
sti
mov
stc
sti
mov
(bad)
(bad)
push
lock
push
lock
mov
mov
xor
xchg
ss
jne
enter
enter
mov
aam
mov
aam
fnstenv
mov
cli
cli
cli
imul
std
stos
mov
outs
mov
and
inc
inc
inc
loopne
inc
inc
imul
je
repnz
repnz
loopne
adc
adc
pop
pop
pop
adc
imul
in
sahf
cmp
cld
test
pop
ficomp
dec
rol
dec
rol
mov
mov
test
loope
in
in
in
in
add
fiadd
add
ficom
adc
sub
shl
shl
out
mov
enter
enter
mov
enter
or
mov
(bad)
or
(bad)
(bad)
ret
ret
rcl
ret
ret
adc
inc
inc
inc
call
test
inc
inc
push
push
xchg
xchg
push
push
xchg
xchg
mov
mov
xor
push
jne
adc
adc
adc
mov
aaa
aaa
mov
aaa
aaa
lea
popf
popf
mov
add
jecxz
mov
xchg
xchg
ret
ret
xchg
xchg
ret
ret
mov
mov
add
je
jne
cld
xor
dec
dec
push
dec
dec
dec
ss
mov
pop
ror
nop
pop
(bad)
rcl
sbb
xchg
push
std
sbb
std
std
rcl
mov
mov
sub
out
out
out
data16
sub
jb
jb
jb
sbb
div
arpl
lock
xchg
cmp
cmp
loope
mov
pop
pop
pop
pop
pop
adc
pop
pop
(bad)
pop
pop
fstp
pop
pop
addr16
jmp
data16
scas
(bad)
sbb
test
sbb
adc
adc
sub
inc
loop
cs
cmp
lea
mov
movaps
(bad)
cmova
out
out
inc
out
out
out
(bad)
(bad)
fstp
imul
jg
jg
jg
jg
xchg
in
in
std
xchg
in
in
leave
leave
leave
or
cmp
or
or
xchg
or
rcl
rol
rcl
rol
adc
push
push
adc
push
push
push
push
aad
xchg
dec
dec
test
scas
scas
scas
adc
repnz
stc
clc
shr
mov
sbb
aas
aas
in
mov
ins
jmp
ins
ins
adc
adc
dec
rcr
mov
aam
pop
mov
mov
mov
xor
mov
fs
add
lahf
ficom
push
cwde
ficom
push
lea
sub
cli
cmp
jmp
mov
dec
xlat
dec
dec
dec
jecxz
dec
dec
jecxz
push
add
jecxz
add
add
pop
push
pop
pop
ja
ja
ja
ja
(bad)
std
std
(bad)
std
std
fcomp
fadd
sub
sub
nop
cmc
cs
pop
pop
ss
pop
pop
js
pop
pop
js
jmp
xchg
xchg
xchg
pop
push
out
stos
stos
out
stos
stos
mov
std
mov
popf
popf
popf
pop
xor
sub
sub
fcomp
fmul
in
jae
xchg
gs
cdq
dec
pop
cs
pusha
pusha
cs
pusha
pusha
mov
and
and
retf
aam
and
aam
out
cmp
aam
cmp
push
mov
pop
sub
jmp
sub
ret
ret
sbb
jae
jae
jae
xchg
xchg
pop
je
pop
pop
xor
mov
inc
inc
inc
jge
add
gs
or
ret
or
in
ret
or
push
push
push
lock
or
sar
xchg
sar
mov
xchg
cmp
xchg
xchg
adc
test
xchg
test
xchg
xchg
mov
mov
sub
out
out
out
gs
cs
and
xor
and
xor
addr16
inc
addr16
addr16
mov
mov
mov
inc
mov
mov
call
adc
loope
push
push
push
adc
or
adc
mov
pop
mov
push
push
push
push
cmps
imul
int
adc
int
dec
iret
int
dec
add
add
add
lock
lock
mov
mov
xor
aaa
lock
push
adc
leave
sub
mov
adc
mov
or
aas
aas
aas
jge
aas
aas
pop
pop
cmp
pop
pop
and
push
push
and
push
push
addr16
inc
and
add
push
(bad)
adc
adc
mov
and
lock
adc
ja
sbb
js
sbb
js
je
das
das
das
je
das
das
xor
pop
pop
add
pusha
pusha
cmp
pusha
jbe
ja
pop
xor
or
push
or
or
add
daa
daa
daa
out
inc
shl
rcl
popa
mov
sar
and
xchg
nop
shr
jo
nop
nop
punpckldq
xor
bound
xor
fcomp
lock
lods
leave
xor
adc
cmp
cmp
cmp
mov
cmp
mov
test
and
add
push
(bad)
sbb
push
(bad)
sbb
fcomp
fsub
in
push
pop
in
movs
je
cs
lods
sub
sti
lods
cli
aas
sti
lods
movs
movs
movs
lods
movs
movs
movs
movs
movs
mov
jb
mov
pop
xor
es
xchg
es
xchg
xchg
xchg
xchg
xchg
xchg
xchg
bound
xchg
bound
xchg
xchg
or
or
or
cmp
or
cmp
in
in
jl
jl
jl
jl
push
push
push
pop
pop
pop
les
pop
pop
pop
pop
jge
pop
pop
cli
stc
movs
movs
std
stc
movs
movs
add
popa
jp
popf
nop
ins
add
xchg
sub
xchg
sub
and
std
jno
std
std
sbb
sbb
mov
mov
out
and
out
data16
cs
and
xor
and
xor
data16
and
jg
inc
jg
jg
(bad)
in
in
adc
daa
xchg
inc
psrad
or
shl
ins
ins
ins
out
dec
jl
and
jl
and
pop
pop
and
pop
pop
and
sbb
sbb
sbb
sbb
call
rcl
add
and
xor
and
xor
push
aad
push
push
aad
push
push
dec
dec
sbb
adc
sti
sti
adc
sti
sti
stos
stos
pop
pop
jl
pop
pop
jl
(bad)
data16
data16
popa
cmp
cmp
lds
adc
adc
adc
adc
xor
adc
xor
adc
adc
mov
mov
loope
mov
int3
push
daa
fsub
daa
daa
cmp
daa
daa
cmp
xor
cmp
aam
aaa
xor
iret
iret
into
pop
mov
into
push
push
push
ficom
push
cdq
fidiv
mov
add
dec
mov
jo
mov
and
pop
gs
gs
fcomp
jne
jne
mov
jbe
les
(bad)
les
cli
mov
xchg
xchg
xchg
lea
xor
mov
xor
lea
fs
mov
test
dec
test
dec
inc
inc
pop
dec
inc
inc
imul
imul
xor
xchg
mov
sbb
mov
sbb
jmp
jmp
mov
push
jno
dec
inc
jno
dec
ins
pop
ss
fbstp
sbb
pop
sbb
pop
mov
pop
pop
mov
mov
push
push
push
int3
int3
stos
stos
jo
test
jo
inc
and
cmps
in
in
in
sub
sub
mov
mov
mov
iretw
iret
test
jmp
pop
dec
mov
dec
mov
lea
xor
cmp
pop
sbb
icebp
icebp
icebp
cdq
icebp
icebp
icebp
sub
repnz
sub
adc
xchg
xchg
adc
xchg
xchg
int
int
shr
jmp
mov
jmp
je
or
or
push
push
pop
push
push
inc
pop
push
push
push
and
push
push
jmp
das
das
in
dec
das
das
ss
test
mov
mov
popf
stc
mov
adc
push
repz
mov
mov
mov
sti
sti
ja
sti
sti
cwde
cwde
cdq
jecxz
fcomp
push
push
push
jmp
jo
mov
add
movs
push
mov
nop
imul
jne
xchg
push
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
pop
xchg
xchg
pop
pop
mov
std
std
std
int3
int3
(bad)
(bad)
and
and
(bad)
sub
cmps
push
sub
cmps
xchg
xchg
xchg
mov
(bad)
xchg
xchg
mov
pushf
pushf
popf
pop
or
popf
int
int
int
int
js
mov
js
mov
leave
leave
es
sbb
(bad)
or
(bad)
or
sbb
or
sbb
add
icebp
push
call
dec
rcl
(bad)
cmp
mov
mov
and
mov
(bad)
stos
lds
call
aam
stos
aam
aam
movs
rcl
movs
movs
daa
daa
das
das
das
fcmovnbe
rcl
gs
jo
ret
xchg
xchg
jo
xchg
xchg
in
sahf
sahf
xchg
in
sahf
sahf
popa
cmp
pushf
popa
cmp
xor
cmp
inc
inc
add
ficom
fcmovu
xchg
xchg
fcmovu
xchg
xchg
lock
xchg
lock
daa
lock
daa
ins
ins
rcl
ins
ins
rcl
jmp
rcl
rol
xchg
mov
int3
int3
int
cmp
cmp
adc
inc
inc
inc
cmp
xor
xchg
mov
and
push
std
out
push
std
out
jns
loop
mov
mov
xor
adc
adc
jnp
mov
mov
sub
out
out
out
gs
cs
and
xor
and
xor
mov
pop
pop
inc
adc
sub
sub
and
and
sub
dec
dec
leave
pop
push
dec
div
imul
sub
and
and
(bad)
inc
lock
iret
fdiv
push
push
push
jmp
pop
pop
in
mov
add
fsubr
nop
or
call
xchg
push
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
pop
xchg
xchg
pop
pop
je
sbb
ja
sbb
xor
xor
pop
pop
xor
mov
pop
pop
mov
inc
inc
(bad)
fadd
(bad)
(bad)
(bad)
mov
mov
repz
repz
mov
(bad)
mov
(bad)
push
lock
push
lock
mov
mov
xor
xchg
ss
jne
enter
enter
jge
fcomp
jns
jns
jo
loope
jo
loope
scas
scas
popf
add
push
gs
lds
(bad)
les
jmp
jmp
jmp
push
push
push
ficom
push
cdq
cdq
pop
pop
stos
stos
stos
mov
stos
jns
jns
jns
jns
adc
loope
adc
loope
pushf
pushf
imul
cmp
adc
cmps
shl
movs
shl
stos
fwait
fwait
cmc
stos
fwait
fwait
rol
pushf
fwait
shl
mov
mov
loopne
iret
fbld
lea
or
or
add
or
mov
sub
mov
pop
call
call
call
cmps
cmps
cmps
fistp
pop
gs
popa
popa
rcl
popa
popa
mov
std
mov
sbb
sub
fwait
xor
sub
daa
daa
ror
jle
test
push
movs
pop
shr
jp
push
jp
aaa
je
aaa
aaa
push
push
aaa
aaa
push
push
cmp
push
push
cmp
mov
mov
xor
sbb
jb
jb
jb
jb
and
test
lea
dec
cmp
popf
jp
test
mov
in
shr
in
in
(bad)
pxor
(bad)
mov
mov
mov
mov
mov
popfw
popf
imul
inc
inc
inc
ins
inc
inc
inc
(bad)
xchg
fwait
fwait
mov
(bad)
out
adc
loope
cmp
cmp
(bad)
mov
(bad)
mov
fistp
(bad)
jnp
mov
mov
sub
out
out
out
gs
cs
and
xor
and
xor
lds
addr16
addr16
mov
mov
inc
(bad)
fadd
(bad)
(bad)
(bad)
mov
or
dec
push
mov
mov
push
pop
push
leave
leave
leave
mov
add
xchg
mov
or
mov
test
test
shr
mov
mov
xor
cmp
cmp
cmp
pop
pop
cmp
pop
pop
inc
inc
mov
mov
call
adc
loope
jnp
jnp
jnp
jnp
or
in
or
in
cli
cli
inc
(bad)
bound
sbb
outs
int
lds
jge
jge
jge
jge
jl
jge
jl
jne
jae
jne
jae
cwde
cdq
jne
fcomp
cs
jo
dec
test
dec
dec
adc
adc
sub
inc
dec
mov
jne
mov
rcl
adc
adc
adc
or
or
pop
jmp
jmp
(bad)
(bad)
fstp
xchg
mov
fdivr
mov
xor
mov
in
in
mov
in
in
push
mov
mov
jp
mov
mov
xchg
xchg
mov
inc
(bad)
(bad)
(bad)
add
fs
fs
xchg
xchg
sub
xchg
xchg
aaa
ss
xchg
aaa
ss
cmc
aaa
ss
cmc
add
add
or
xchg
xchg
xchg
es
xchg
xchg
scas
inc
ds
ds
jb
in
fmulp
stc
stos
jle
stc
stos
jle
int
jnp
sbb
jnp
sbb
xchg
xchg
add
xchg
xchg
add
xor
xor
sti
jb
cmps
cmps
cmps
adc
and
fwait
and
daa
daa
daa
dec
nop
and
add
or
mov
gs
(bad)
pcmpgtd
(bad)
mov
mov
mov
add
cmp
xor
mov
(bad)
xor
(bad)
clc
and
mov
fucomp
shl
xchg
jle
xor
jnp
and
js
and
inc
and
and
and
and
jnp
stos
stos
stos
jnp
stos
stos
lock
adc
inc
adc
inc
stos
stos
jge
leave
leave
leave
jns
leave
leave
add
jne
enter
enter
inc
inc
inc
add
inc
sub
lods
lods
fisubr
mov
mov
xchg
jns
xchg
xchg
repz
xchg
repz
adc
adc
adc
sub
mov
mov
mov
iretw
iret
test
jmp
jmp
shl
rol
fcomp
mov
push
sub
push
sub
arpl
pop
jecxz
pop
pop
hlt
hlt
pop
pop
hlt
hlt
adc
imul
imul
int
fldl2t
int
outs
outs
int
outs
outs
mov
ins
outs
mov
inc
inc
jbe
jbe
jbe
jbe
(bad)
out
out
pop
pop
pop
in
pop
pop
pop
repz
pop
repz
mov
cdq
retf
sbb
cdq
push
push
push
xchg
push
push
push
loop
mov
mov
fs
cdq
mov
test
test
call
xchg
xchg
xchg
lahf
xchg
xchg
xchg
lock
xchg
lock
in
sub
sub
sub
sub
scas
scas
sbb
sbb
sbb
add
jne
es
cwde
cdq
pop
into
fcomp
mov
ins
ins
mov
ins
ins
fcomp
fsubr
push
sub
cmp
sub
push
(bad)
xchg
cmp
inc
cmp
push
push
push
std
std
std
mov
std
std
int3
int3
lods
lods
out
out
out
out
repz
repz
in
pop
pop
out
in
pop
pop
dec
inc
sbb
dec
(bad)
(bad)
vcmpsd
aad
aad
enter
enter
mov
jge
cmps
out
cli
cmps
out
int3
jg
inc
jl
loope
jl
out
out
out
jl
out
out
imul
jmp
sub
sbb
rcl
xchg
xchg
cmp
sbb
and
and
fisub
pop
pop
pop
push
pop
pop
pop
mov
add
add
das
xchg
nop
mov
sbb
xchg
hlt
hlt
hlt
xchg
hlt
hlt
hlt
fwait
fwait
call
stos
stos
sbb
test
sbb
add
add
inc
add
sbb
and
sbb
ss
daa
daa
xor
daa
arpl
mov
out
mov
pop
lahf
mov
pop
retf
xchg
adc
mov
mov
xor
xor
add
ret
ret
cmp
adc
jecxz
push
adc
jae
jae
jae
addr16
cmc
out
addr16
cmc
arpl
mov
inc
xor
pop
or
in
sahf
ds
mov
mov
retf
int
mov
outs
outs
div
outs
outs
call
mov
stc
mov
or
or
jle
add
es
es
inc
pop
pop
lods
inc
pop
pop
ss
push
idiv
jle
repz
add
adc
add
(bad)
sgdtd
(bad)
push
test
rol
rol
inc
inc
imul
inc
cdq
cdq
cwde
das
mov
cwde
int3
int3
int3
popf
int3
int3
int3
jo
mov
jb
jb
fucomp
sar
ret
jle
(bad)
sbb
and
jns
and
jecxz
and
jecxz
jne
jne
jne
jne
or
or
pop
or
pop
pop
adc
xchg
xchg
xchg
adc
xchg
xchg
bound
dec
push
push
push
dec
push
push
push
in
in
in
cmp
stc
mov
adc
mov
adc
jne
jne
jne
jne
mov
jne
mov
adc
xchg
retf
retf
in
retf
retf
inc
inc
sub
jmp
jmp
adc
xor
jno
jnp
mov
mov
(bad)
(bad)
inc
add
xchg
jbe
add
popf
inc
inc
popf
popf
(bad)
(bad)
gs
enter
enter
add
inc
inc
test
rcr
faddp
rcr
clc
cli
or
int
cmp
imul
inc
add
sub
mov
(bad)
movlps
adc
push
adc
js
js
js
jcxz
test
jecxz
jb
jb
popf
mov
cli
adc
cli
adc
ret
leave
jnp
push
push
jnp
push
push
pop
pop
pop
push
pop
pop
push
push
push
pop
push
push
push
rol
push
rol
sbb
ret
xor
sbb
sbb
sbb
sbb
mov
push
push
push
adc
add
adc
and
das
and
call
cmp
fwait
call
cmc
cwde
cmc
cmc
cmc
cdq
cdq
jo
retf
retf
jb
retf
retf
int3
int3
int
test
daa
fsub
mov
sub
lds
dec
rcl
lods
(bad)
adc
sbb
(bad)
shl
pop
std
pop
pop
pop
cli
repnz
mov
inc
shr
xchg
sbb
das
xchg
sbb
jl
jl
jl
jl
test
adc
call
out
cmp
out
out
cmp
and
and
icebp
bound
rcl
rol
(bad)
shr
add
sbb
mov
leave
mov
outs
aas
cmps
push
push
push
cmps
push
push
push
js
adc
js
mov
push
ins
ins
ins
add
adc
pop
pop
adc
pop
pop
add
add
sub
xor
xor
xor
xor
jne
inc
inc
jne
inc
inc
inc
or
fsub
mov
cmp
fild
inc
sbb
inc
inc
xchg
xchg
inc
inc
xchg
xchg
(bad)
(bad)
call
jecxz
sti
jecxz
adc
ins
ins
inc
inc
mov
mov
mov
mov
rcr
aas
aas
aas
adc
adc
push
adc
mov
mov
add
stos
ins
ins
ins
fwait
ins
ins
ins
mov
retf
mov
retf
jmp
jmp
xchg
mov
mov
mov
cld
into
cld
cld
cld
sub
sub
shr
jo
jne
jo
jne
adc
adc
adc
rcl
adc
shl
adc
ja
adc
std
std
std
adc
std
std
(bad)
ficom
(bad)
xor
into
stc
or
into
sub
sub
dec
mov
arpl
mov
cli
inc
pop
rcr
and
test
test
test
test
xchg
add
push
push
push
dec
iret
push
push
push
iret
push
push
push
jne
je
add
mov
pop
pop
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
into
iret
or
int3
iret
or
repnz
repnz
stos
stos
repnz
stos
stos
into
into
iret
(bad)
mov
movs
movs
jno
xchg
mov
xor
inc
jno
ret
ret
test
test
(bad)
(bad)
fistp
pop
(bad)
pop
pop
ja
mov
mov
rcl
mov
mov
xor
cli
inc
jno
pop
pop
sbb
cs
cs
sub
into
and
xor
fcmovu
add
add
add
add
fwait
dec
outs
outs
call
movs
and
cli
rol
(bad)
cld
xchg
xchg
mov
xchg
xchg
ss
xor
popf
das
repz
sub
hlt
mov
mov
inc
inc
inc
imul
fdivr
inc
inc
fcmovu
inc
inc
lods
lods
lods
(bad)
jmp
mov
enter
add
adc
test
shl
add
or
aas
xchg
xchg
xchg
fwait
fwait
call
xor
sub
xor
sub
in
jmp
push
add
add
add
ja
jbe
ja
jbe
xor
popf
xor
mov
js
pushf
pushf
jg
pushf
pushf
jmp
jmp
pusha
sahf
cli
(bad)
out
dec
in
(bad)
out
dec
mov
aaa
dec
out
pop
pop
out
pop
pop
sub
sub
sbb
jecxz
jecxz
and
and
pop
pop
cmp
pop
pop
cmp
fs
gs
dec
dec
inc
dec
dec
dec
daa
mov
mov
adc
xlat
fst
cli
shl
(bad)
sbb
mov
addr16
je
push
push
push
push
push
push
push
gs
push
gs
movs
data16
rol
cdq
ss
cmp
inc
cmp
leave
leave
leave
in
add
mov
sub
jne
lock
jo
jo
jo
jo
xchg
xchg
mov
fcomp
fnstenv
aas
aas
cld
aas
aas
aas
jmp
ins
ins
in
lock
ins
push
push
push
leave
ins
enter
cmp
inc
or
jp
aam
stos
and
and
es
pop
mul
pop
pop
(bad)
push
pop
pop
into
or
mov
or
lock
mov
dec
repz
(bad)
lock
(bad)
rcl
rcl
rcl
xchg
xchg
aad
xchg
xchg
or
xchg
xchg
or
cmp
ds
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
push
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
(bad)
(bad)
jmp
in
call
mov
xor
call
pop
sub
add
popf
pop
ret
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xor
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fnsave
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
lahf
jmp
jmp
iret
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
adc
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
or
adc
dec
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
jmp
retf
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
pop
add
pusha
pop
pop
pop
js
cmps
cmps
jg
cmps
cmps
arpl
gs
pop
fs
cdq
pop
inc
xor
pop
push
add
xor
jno
push
inc
xor
pop
pop
jne
pop
pop
push
mov
scas
scas
daa
daa
daa
ror
aam
iret
mov
ins
mov
rcr
in
(bad)
les
xor
and
xchg
xchg
fwait
fwait
call
jae
jae
jae
jbe
cmc
pop
jbe
cmc
fcomp
fdivr
(bad)
mov
imul
cs
push
push
jno
jo
div
mov
mov
push
push
mov
add
int
nop
mov
mov
xchg
and
mov
iret
iret
into
test
call
fisub
es
es
call
ss
repz
shl
in
in
in
cmp
imul
ret
ret
stos
popa
ret
ret
mov
mov
mov
mov
mov
xchg
xchg
xchg
jecxz
xchg
aaa
aaa
aaa
mov
aaa
aaa
jb
jge
jne
jge
fcomp
fdivr
sub
shr
aad
hlt
cs
adc
test
adc
add
add
add
add
rol
add
rol
adc
jmp
int3
int3
int
mov
mov
mov
add
add
push
push
push
cmps
rol
imul
retf
pop
or
cmc
cmc
sbb
cmc
cmc
fdivr
cmc
cmc
adc
adc
push
adc
fcmovnu
adc
fcmovnu
push
push
push
jmp
pop
push
mov
cmp
sub
push
push
mov
inc
mov
mov
xchg
xchg
aaa
jmp
push
push
push
leave
fs
mov
icebp
fisub
retf
inc
mov
dec
int
jmp
mov
mov
movs
movs
inc
inc
mov
mov
jmp
jge
sub
push
push
push
out
push
push
push
scas
scas
scas
adc
scas
in
in
in
in
push
fcmovu
mov
fcmovu
cli
cli
cli
jge
pop
mov
arpl
xchg
arpl
out
mov
mov
(bad)
enter
add
xor
rol
rol
inc
lods
nop
nop
inc
lods
nop
nop
fcomp
fdivr
xchg
lahf
imul
loope
imul
loopne
das
cs
inc
inc
mov
pop
inc
div
test
repnz
mov
inc
sub
sub
sbb
xlat
xlat
sbb
xlat
xlat
cmp
xlat
xlat
cmp
into
into
iret
pop
dec
mov
sbb
sbb
sbb
sbb
fsub
and
fsub
and
adc
cwde
jecxz
inc
xchg
mov
inc
xchg
mov
cmp
sbb
sbb
sbb
sbb
adc
push
jae
adc
mov
popa
outs
jmp
mov
mov
es
cld
push
push
mov
fs
add
rol
out
rcr
nop
nop
fcmovne
nop
nop
daa
daa
daa
movs
aas
inc
xchg
not
nop
(bad)
aam
mov
movs
movs
mov
movs
jne
je
push
push
gs
push
push
mov
mov
mov
pushf
push
jl
fwait
push
jl
daa
daa
daa
outs
nop
and
add
aam
jg
ror
cmp
cmp
and
cmp
and
xchg
xchg
and
xchg
xchg
fcomp
in
in
in
and
adc
call
inc
div
xchg
xchg
div
xchg
xchg
fwait
imul
adc
adc
push
adc
dec
xor
arpl
xchg
jns
fldenv
loope
add
mov
xor
xor
cld
cld
and
sbb
and
sbb
(bad)
ins
ins
ja
ins
ins
lock
ins
lock
ret
lock
ret
sbb
jmp
sbb
jmp
sbb
jmp
sbb
push
sbb
cmp
dec
jge
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
xor
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
(bad)
jmp
out
call
mov
xor
call
pop
sub
add
popf
pop
ret
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
outs
mov
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
(bad)
jmp
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
(bad)
jmp
fcos
call
mov
xor
call
pop
sub
add
popf
pop
ret
outs
repnz
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
add
dec
cmp
jg
daa
xchg
jb
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
cmp
xor
test
sbb
les
imul
inc
leave
leave
les
leave
push
push
push
or
and
push
mov
dec
add
cmp
add
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
and
shl
and
fcmovnu
sub
fisub
data16
pushw
neg
fist
neg
fist
adc
mov
mov
mov
mov
call
ret
xor
xor
xor
and
jns
pusha
and
stc
mov
mov
out
mov
mov
je
jne
je
jmp
jmp
xor
jnp
jp
aad
jp
int
je
int
loop
mov
leave
leave
leave
adc
or
push
pop
or
call
jne
je
ret
xor
lds
(bad)
stos
cwde
cwde
into
stos
cwde
cwde
fcomp
fdivr
out
out
out
cmp
dec
dec
sbb
dec
into
into
into
dec
into
into
into
xor
xor
cmp
jecxz
sub
sbb
stos
stos
stos
inc
pop
out
stos
cdq
cdq
cdq
(bad)
cdq
cdq
cdq
arpl
and
fs
and
inc
inc
inc
pop
call
sbb
adc
sbb
mov
inc
inc
inc
ret
ret
inc
inc
ret
ret
inc
inc
mov
cld
cld
add
jmp
mov
and
ss
push
xor
push
ss
add
sbb
jl
ucomiss
sahf
movs
repz
fwait
fwait
fwait
pop
fwait
fwait
fwait
and
and
ret
and
inc
(bad)
fnstcw
mov
sub
push
ret
push
ret
pop
pop
mov
ret
adc
int3
int3
add
int3
int3
add
adc
adc
adc
adc
icebp
adc
icebp
icebp
ja
adc
ja
adc
rcl
adc
rcl
mov
mov
push
(bad)
inc
inc
es
mov
(bad)
scas
mov
(bad)
ins
ins
ins
ret
ret
push
adc
(bad)
in
and
and
jmp
in
je
push
je
xchg
xchg
xchg
mov
in
in
mov
in
in
arpl
retf
retf
add
sbb
nop
or
inc
nop
sbb
fwait
xchg
in
popf
popf
popf
in
popf
popf
popf
mov
cwde
popf
mov
adc
(bad)
(bad)
(bad)
call
test
xor
test
test
jmp
adc
(bad)
std
adc
(bad)
push
push
push
call
pop
cmp
test
aas
xor
fidivr
xor
fisub
and
adc
adc
push
lea
push
push
jmp
jmp
das
and
dec
aaa
ins
jb
call
jmp
jmp
jmp
fs
add
gs
inc
sub
shl
inc
mov
sbb
nop
nop
movs
mov
xor
jb
jb
stc
pop
arpl
mov
ins
xor
mov
jnp
inc
inc
fs
fs
movs
popa
movs
movs
inc
inc
inc
inc
inc
mov
mov
popf
or
or
prefetchw
(bad)
movsx
sub
sub
sbb
xlat
xlat
sbb
xlat
xlat
xor
xor
xor
xor
xchg
mul
div
repnz
div
repnz
stos
stos
repnz
stos
stos
loope
scas
stos
loope
jb
add
mov
arpl
mov
mov
xchg
div
push
ins
sub
and
retf
pushf
pushf
pushf
or
jmp
fwait
in
mov
xchg
xchg
mov
xchg
xchg
lahf
sahf
sahf
xchg
lahf
sahf
sahf
in
in
in
push
adc
leave
aas
aas
aas
lea
ins
ins
ss
xor
popf
das
or
mov
or
and
aaa
punpcklwd
pop
cmc
sahf
jo
jno
jo
jno
mov
test
test
div
pop
pop
pop
adc
mov
call
clc
ss
fcomp
sub
mov
cmp
div
mov
repz
out
jnp
out
into
iret
iret
out
iret
iret
xor
xor
xor
xor
shl
rcl
inc
inc
mov
inc
inc
cld
cld
dec
dec
add
dec
dec
add
xchg
xchg
add
xchg
xchg
push
push
push
pop
inc
adc
mov
jae
mov
daa
out
je
and
je
adc
adc
jo
ror
ds
cmp
or
rcr
dec
or
add
or
add
in
in
in
add
in
in
mov
mov
mov
push
or
out
push
or
arpl
jbe
inc
xor
pop
aam
ret
sbb
cmp
sub
sub
sub
fwait
call
movs
movs
dec
sbb
mov
stos
pop
mov
stos
(bad)
fild
(bad)
inc
stos
lahf
ficom
arpl
daa
arpl
dec
or
push
test
lea
clc
pushf
(bad)
int
mov
int
jecxz
adc
xchg
push
or
outs
or
or
push
push
nop
and
push
jp
mov
mov
cmps
cmps
pop
push
je
jne
imul
jne
sub
in
test
inc
inc
jb
jb
clc
pop
inc
cld
pop
jle
cld
pop
jle
dec
cmp
and
mov
and
std
std
cld
arpl
sub
add
jecxz
or
cmps
loop
and
in
and
and
xchg
sub
inc
sub
sbb
je
(bad)
or
add
add
adc
add
adc
std
std
cld
pop
lea
movs
fstp
inc
inc
fild
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
in
out
cmc
cmc
push
push
push
int3
fst
push
pop
pop
pop
jno
pop
pop
add
jmp
test
push
imul
test
adc
pop
repz
icebp
sub
int3
int3
int3
jg
int3
int3
fwait
fwait
call
arpl
icebp
mov
pushf
cmp
cmp
mov
imul
mov
(bad)
cmp
rcl
(bad)
rol
vmovd
lds
outs
rcl
imul
mov
dec
jl
jl
ret
mov
aaa
push
movs
mov
push
out
aaa
push
fcomp
(bad)
adc
ds
int3
xchg
lock
cli
cli
cli
mov
adc
mov
adc
ret
outs
add
push
movs
movs
movs
movs
movs
movs
xor
xor
inc
jno
leave
leave
lods
lods
call
call
mov
mov
test
ret
ret
adc
dec
dec
dec
add
jb
aam
cmps
cmps
(bad)
and
cmps
push
push
ret
cmps
or
ret
mov
das
xor
out
jns
out
iret
mov
push
retf
retf
retf
retf
cmps
sbb
cmp
iret
(bad)
aad
aam
aad
aam
leave
enter
enter
cwde
xchg
test
cmc
rcr
sbb
adc
ds
jmp
fsubp
mov
push
lods
sub
mov
(bad)
mov
outs
jg
test
in
in
scas
cmp
in
ss
sbb
cld
or
idiv
dec
aad
mov
test
mov
test
in
test
in
or
in
or
sbb
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
mov
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
(bad)
jmp
out
call
mov
xor
call
pop
sub
add
popf
pop
ret
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
mov
xchg
pop
xchg
ja
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
(bad)
jmp
fdivrp
call
mov
xor
call
pop
sub
add
popf
pop
ret
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
ss
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
outs
jae
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
push
ins
inc
xchg
jne
jno
sbb
imul
adc
push
dec
pop
pop
add
jb
dec
data16
ss
dec
ja
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
jg
sub
push
jmp
jle
mov
sbb
je
arpl
cmp
enter
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xchg
(bad)
push
mov
sbb
push
(bad)
pop
enter
jg
retf
or
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
push
cli
adc
inc
sbb
shl
sbb
push
inc
push
sub
pop
sbb
inc
jae
adc
add
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
jnp
inc
rcr
or
adc
xor
sbb
inc
rcl
inc
(bad)
outs
leave
data16
jns
add
push
es
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
jecxz
jle
dec
test
sbb
les
call
into
into
add
arpl
or
push
jb
dec
pop
fs
pop
icebp
inc
xchg
pop
mul
pop
mul
pop
pop
data16
dec
dec
pop
pop
dec
dec
and
and
and
and
sbb
pop
xlat
push
inc
pop
mov
mov
dec
add
dec
add
fcomp
jl
inc
jns
(bad)
sub
(bad)
sub
ins
push
mov
loop
test
in
lea
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
mov
mov
mov
mov
xchg
xchg
test
mov
pop
(bad)
inc
inc
es
cld
push
push
mov
push
mov
in
in
in
(bad)
in
in
in
dec
dec
jmp
inc
jae
jae
mov
inc
popa
cld
sti
inc
cli
cli
cli
inc
cli
cli
cli
sub
sub
sahf
jns
popa
popa
dec
dec
pop
pop
out
out
pop
pop
out
out
in
in
in
out
in
in
in
icebp
icebp
in
in
icebp
icebp
ja
adc
ja
adc
rcl
adc
rcl
mov
mov
push
(bad)
inc
inc
es
(bad)
jl
push
push
(bad)
(bad)
lds
add
adc
adc
aaa
aaa
jl
aaa
aaa
adc
adc
or
xchg
lods
pusha
mov
jb
jb
jb
jb
xor
out
jno
arpl
cmps
cld
cld
cmps
cmps
cld
cld
call
aaa
aaa
aaa
mov
je
jge
je
jge
push
push
mov
sub
jae
sub
xchg
mov
arpl
arpl
js
data16
lea
xor
xor
dec
cmc
cmc
inc
inc
div
inc
inc
int3
int3
int3
inc
int3
int3
int3
cmp
int
cmp
xor
push
push
push
ss
push
push
jnp
pop
pop
jbe
pop
pop
jbe
jbe
add
sahf
add
pushf
pushf
pushf
daa
pushf
pushf
pushf
adc
sub
adc
sub
sbb
and
neg
lock
int3
cmps
lock
and
and
dec
and
dec
daa
daa
or
repnz
gs
push
gs
xchg
gs
xchg
fwait
call
inc
inc
call
inc
imul
shl
sub
sub
xchg
inc
pop
pop
pop
inc
pop
pop
pop
and
and
push
pusha
and
add
call
inc
(bad)
(bad)
js
std
(bad)
js
add
lahf
lahf
lahf
add
and
adc
and
adc
imul
cld
cld
push
shr
shr
outs
pop
outs
outs
outs
cmp
aaa
aaa
sbb
ss
sbb
cld
cld
std
cmp
mov
fcomp
es
es
call
adc
sub
repnz
inc
inc
inc
dec
inc
inc
inc
mov
inc
inc
mov
fcomp
mov
inc
inc
sbb
out
out
pop
pop
in
out
pop
pop
(bad)
mov
push
push
mov
mov
jae
stc
stc
jae
(bad)
ficom
call
call
ret
ret
fcomp
outs
loope
scas
(bad)
push
sub
jne
cs
hlt
hlt
ja
hlt
hlt
js
hlt
hlt
js
inc
inc
sub
sub
sub
push
push
dec
dec
push
push
dec
dec
sub
dec
dec
sub
push
push
push
sub
jecxz
push
jecxz
scas
ins
ins
loop
ins
ins
push
push
loope
loope
loope
loope
int3
rol
rol
rcl
jecxz
rcl
jecxz
out
out
out
loop
out
out
(bad)
fidiv
lahf
ficom
push
loop
pop
or
jns
cmps
js
fwait
fwait
fwait
jns
fwait
fwait
and
and
inc
pusha
and
adc
mov
cld
cld
std
push
pop
mov
fdivr
jle
mov
out
out
leave
leave
leave
stc
inc
mov
pop
fwait
or
xor
ror
xor
xor
xor
xor
pusha
xor
pusha
js
gs
js
daa
daa
xchg
xchg
xchg
fld
imul
lahf
div
neg
ret
repz
daa
daa
jecxz
jecxz
sbb
sbb
and
ret
ret
mov
xor
mov
or
or
jne
or
jmp
jmp
shl
push
les
push
les
scas
sbb
push
mov
dec
push
mov
std
std
std
mov
std
std
pop
pop
clc
std
pop
pop
inc
inc
adc
jmp
push
sbb
xchg
xchg
and
and
lock
lock
in
in
in
sub
adc
sbb
inc
inc
cmc
cmc
inc
inc
cmc
cmc
(bad)
mov
push
mov
ins
sub
(bad)
or
adc
stos
daa
daa
daa
adc
jle
pop
sar
stos
stos
stos
stc
stos
stos
stos
fwait
fwait
call
sbb
sbb
fsubp
sub
sti
es
pop
pop
in
(bad)
pop
pop
inc
inc
inc
jl
pop
jg
push
sbb
push
push
push
out
push
push
push
loope
push
push
loope
adc
dec
dec
dec
adc
dec
cmp
ins
ins
jb
ins
ins
jb
sub
jo
sub
stos
stos
stos
sub
jecxz
scas
jecxz
push
ins
ins
loop
ins
ins
push
push
push
push
push
pop
push
push
push
dec
dec
aas
aas
sub
sub
mov
fstp
fadd
daa
cwde
fsubr
sub
stc
sub
sub
cli
inc
inc
(bad)
inc
inc
scas
scas
scas
or
xor
addr16
(bad)
push
lds
mov
outs
and
and
and
movs
movs
daa
and
mov
xchg
mov
add
add
xchg
push
pop
pop
sti
sti
sti
pop
sti
sti
sti
push
push
push
outs
and
push
jb
outs
outs
cmp
outs
outs
cmp
iret
iret
iret
cmp
iret
iret
mov
into
iret
mov
cwde
cwde
or
or
xchg
lahf
lahf
adc
popf
lahf
adc
cdq
cdq
cwde
sub
cwde
mov
mov
mov
mov
jb
jp
jb
jp
lea
xor
cmp
int
test
pop
pop
test
pop
pop
into
into
into
pop
into
into
into
pop
pop
sub
pop
pop
sub
hlt
pop
sub
hlt
mov
mov
sub
rcl
sub
rcl
ret
ret
ret
ret
xor
xor
xor
and
lods
inc
pusha
and
es
ret
in
in
out
in
daa
daa
shl
daa
pushf
mov
fwait
mov
adc
adc
mov
xchg
(bad)
mov
(bad)
mov
repnz
dec
mov
mov
fwait
fwait
fwait
fs
and
jp
cwde
cwde
xor
jns
retf
xor
pusha
retf
xor
repnz
bound
bound
add
xlat
xlat
scas
scas
scas
push
pop
fsubr
sar
push
mov
sbb
imul
loopne
cmp
loope
or
ror
or
push
add
push
add
ss
repnz
jmp
repz
pop
daa
sub
mov
inc
inc
cmp
mov
mov
mov
sub
call
jmp
xor
jmp
xor
xor
xor
xor
add
add
add
add
rol
add
rol
add
xchg
xchg
mov
add
sbb
xor
mov
adc
je
sub
push
push
nop
movs
xor
mov
out
retf
aas
retf
aas
retf
rol
ret
test
pop
pop
pop
in
pop
pop
scas
shr
push
push
push
ds
mov
mov
mov
mov
(bad)
in
retf
xor
jmp
into
nop
nop
nop
int3
nop
nop
nop
test
mov
mov
adc
cmp
push
cmp
arpl
inc
int3
inc
xor
mov
jl
lock
pop
lock
xlat
xlat
pop
add
xlat
or
rcl
or
pop
pop
push
xor
inc
push
in
in
loop
in
dec
fcmovu
les
fidiv
jb
stc
pop
arpl
arpl
in
jle
sbb
push
xor
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
pop
or
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
(bad)
jmp
out
call
mov
xor
call
pop
sub
add
popf
pop
ret
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
mov
xchg
pop
xchg
ja
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
(bad)
jmp
fdivrp
call
mov
xor
call
pop
sub
add
popf
pop
ret
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
ss
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
outs
jae
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
push
ins
inc
xchg
jne
jno
sbb
imul
adc
push
dec
pop
pop
add
jb
dec
data16
ss
dec
ja
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
jg
sub
push
jmp
jle
mov
sbb
je
arpl
cmp
enter
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xchg
(bad)
push
mov
sbb
push
(bad)
pop
enter
jg
retf
or
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
push
cli
adc
inc
sbb
shl
sbb
push
inc
push
sub
pop
sbb
inc
jae
adc
add
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
jnp
inc
rcr
or
adc
xor
sbb
inc
rcl
inc
(bad)
outs
leave
data16
jns
add
push
es
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
jecxz
jle
dec
test
cmp
pusha
sbb
pop
xchg
inc
sub
sub
and
mov
ins
mov
call
(bad)
cli
mov
mov
dec
dec
and
and
and
and
inc
inc
push
add
inc
add
add
add
and
lds
imul
sbb
fdivrp
sbb
sahf
and
push
(bad)
fdivrp
stos
lahf
(bad)
fsub
pop
pop
gs
pop
(bad)
fistp
(bad)
fbld
and
fbld
and
ret
ret
and
ret
ret
adc
jns
jns
jns
jns
xor
push
je
or
je
jle
je
and
and
and
and
mov
and
ss
add
call
xchg
xchg
cwde
cwde
cmc
cmc
cmc
mov
fwait
je
ret
ret
jbe
ret
ret
cdq
cdq
cdq
ret
cdq
cdq
cdq
in
in
in
adc
mov
sbb
sbb
imul
add
mov
mov
push
xchg
push
rcl
(bad)
push
mov
and
mov
sub
pop
add
or
cli
cli
push
and
mov
imul
jb
out
mov
sbb
jo
add
in
in
in
mov
adc
adc
adc
cwde
xor
sbb
sbb
dec
or
mov
dec
je
popf
popf
je
popf
popf
mov
cwde
popf
mov
adc
(bad)
(bad)
(bad)
call
test
sub
sub
cmp
sub
cmp
push
push
push
mov
and
jae
and
arpl
push
push
fs
push
push
daa
daa
daa
push
stc
(bad)
xor
je
and
mov
into
into
adc
into
into
pop
pop
push
jae
push
push
int
int
int
int
outs
mov
cli
cli
cli
sub
outs
sbb
outs
xchg
sub
push
mov
mov
mov
mov
jno
mov
jno
loope
je
loope
daa
daa
repnz
stc
stc
retf
stc
retf
sub
adc
adc
(bad)
jle
lahf
fisubr
sub
dec
or
jmp
jmp
jmp
ret
out
jmp
ret
lea
pop
pop
pop
(bad)
(bad)
adc
and
adc
and
xor
xor
xor
xor
and
cmps
push
pusha
and
sub
add
mov
mov
adc
xchg
xchg
int
out
int
xchg
int
xchg
cld
cld
xchg
cld
cld
loope
(bad)
cld
loope
test
rol
test
rol
int3
pop
pop
stos
stos
pop
pop
stos
stos
inc
retf
inc
retf
inc
inc
retf
inc
fsubrp
jmp
fsubrp
jmp
movs
mov
mov
mov
imul
mul
lahf
lahf
rcr
sub
fwait
scas
sub
jb
jb
xchg
mov
mov
push
jnp
vmovd
vmovapd
rol
sub
cmc
sub
cmc
cmp
std
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
xor
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
cwde
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
jecxz
jle
dec
test
sub
mov
inc
inc
inc
in
inc
inc
inc
leave
leave
leave
in
aaa
mov
pop
or
or
daa
or
push
ds
mov
imul
(bad)
vpacksswb
or
pop
sbb
test
cli
cli
enter
retf
and
pop
pop
xlat
xlat
imul
push
sub
dec
(bad)
(bad)
(bad)
jmp
mov
mov
repz
ins
jle
out
jle
out
sbb
cmp
movs
cmp
cmp
or
fisttp
arpl
lea
not
and
xchg
leave
test
add
or
xor
xor
adc
xchg
xchg
mov
and
arpl
and
or
stos
pop
js
stos
pop
and
jae
test
pop
test
xchg
xchg
pop
pop
xchg
xchg
sbb
xchg
sbb
test
fimul
adc
inc
dec
adc
inc
in
out
out
inc
in
out
out
mov
sub
ret
add
sbb
cmp
jl
dec
push
push
push
mov
stos
stos
mov
mov
sub
xor
jo
jo
jo
jo
fwait
fwait
jo
fwait
fwait
mov
stc
mov
test
test
test
mov
dec
add
sbb
leave
leave
test
add
repnz
xlat
nop
mov
(bad)
push
xchg
mov
mov
mov
add
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
mov
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fidiv
sahf
jb
sbb
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
xor
test
or
mov
inc
pop
pop
out
pop
pop
leave
leave
leave
fld
fdivr
into
jl
or
xor
scas
scas
add
cmp
cmp
inc
arpl
inc
arpl
jmp
pop
inc
jbe
iret
adc
iret
adc
inc
leave
dec
call
cs
cld
cld
push
push
sbb
test
test
mov
mov
ins
pop
adc
fcomp
push
cmp
xor
sub
pop
push
sub
add
dec
or
hlt
hlt
cs
hlt
hlt
pushf
push
cli
cli
fwait
push
cli
cli
leave
leave
leave
das
sbb
sbb
and
test
retf
(bad)
(bad)
(bad)
fist
xchg
inc
inc
(bad)
fldcw
mov
pop
pop
popf
popf
adc
adc
push
adc
dec
daa
dec
dec
dec
jecxz
(bad)
(bad)
in
(bad)
pop
(bad)
fdiv
leave
nop
mov
aaa
ss
sbb
add
add
add
inc
inc
adc
jmp
add
test
test
bound
bound
adc
xlat
xchg
adc
xlat
cli
cli
cli
adc
jns
std
cmp
pop
mov
push
push
push
imul
push
add
add
inc
add
popw
data16
inc
(bad)
inc
inc
(bad)
inc
inc
inc
mov
imul
cmp
mov
xor
int
mov
mov
mov
(bad)
(bad)
rcr
(bad)
rol
(bad)
fnstcw
cld
scas
scas
cmp
cmp
ret
cmp
ret
ret
lea
jmp
iret
iret
cld
cld
int
cld
cld
xor
xor
cmps
jne
lods
lods
lods
cmp
lods
lods
cmps
daa
dec
dec
mov
arpl
sub
hlt
push
inc
pop
loop
inc
pop
dec
ficomp
pop
add
outs
stos
stos
stos
pop
xor
stos
aaa
aaa
aaa
mov
aaa
aaa
leave
adc
jge
adc
jge
arpl
icebp
leave
adc
sub
push
cmp
nop
mov
pop
mov
push
out
test
jecxz
cmp
loop
call
call
into
xchg
ret
daa
cmps
adc
aam
mov
mov
mov
or
in
in
in
or
in
in
pop
pop
jmp
inc
jae
jae
mov
push
imul
or
mov
daa
daa
add
sbb
jmp
jno
sbb
cmp
cmp
push
jno
push
push
(bad)
(bad)
(bad)
scas
xlat
(bad)
(bad)
sub
mov
lea
in
or
in
or
jb
mov
jno
mov
jno
mov
mov
mov
jbe
jbe
mov
daa
ins
ins
daa
daa
ins
ins
cmp
ins
ins
cmp
into
into
iret
into
addr16
iret
jge
jge
jge
jge
fsubr
jmp
mov
icebp
sbb
add
out
push
fsub
sbb
pushf
inc
inc
inc
mov
ins
ins
bound
ins
adc
leave
leave
adc
leave
leave
inc
inc
inc
rcr
dec
cmp
dec
sub
sbb
sub
test
and
and
inc
pusha
and
cmp
sub
call
fcmovnu
in
in
in
fucomi
in
in
xchg
inc
inc
jae
jae
mov
outs
outs
outs
enter
push
push
push
push
popf
mov
lea
sbb
pop
or
nop
add
xchg
xchg
imul
mov
jl
jl
xor
jle
xor
jle
rcl
jg
rcl
push
daa
outs
sub
push
(bad)
(bad)
mov
mov
sub
pop
inc
inc
inc
pop
inc
inc
ss
push
test
(bad)
repz
test
inc
inc
inc
rcl
inc
inc
rcl
inc
inc
mov
cmp
test
xchg
pushf
mov
pop
arpl
and
jno
mov
mov
pop
pop
pop
lods
pop
pop
pop
ss
scas
scas
xor
scas
arpl
cmp
mov
mov
push
pop
push
xchg
xchg
pop
push
xchg
xchg
(bad)
fist
add
mov
mov
add
xchg
loopne
loopne
jmp
loopne
inc
rcl
jnp
rcl
arpl
xchg
pop
cli
jns
pop
mov
stos
pop
in
jo
jno
lock
retf
jb
mov
mov
sbb
mov
aam
sahf
into
aam
sahf
leave
leave
leave
mov
jmp
ss
xor
jmp
call
call
xchg
in
xchg
jae
mov
pushf
pushf
push
push
pushf
pushf
xor
xor
jo
mov
mov
mov
mov
daa
jbe
and
jbe
push
push
mov
and
push
cmp
ds
aas
mov
ja
jbe
ss
jbe
aaa
aaa
jae
aaa
aaa
retf
scas
jge
int3
scas
jge
inc
inc
inc
add
fsub
xor
div
sub
add
push
push
push
jno
mov
outs
outs
es
mov
fstp
adc
es
(bad)
arpl
fwait
arpl
add
fwait
call
mov
fs
cld
popf
popf
scas
cmp
cmp
cmp
cmp
push
cmp
push
enter
int3
leave
lea
inc
inc
inc
and
and
push
pusha
and
and
xchg
xchg
and
xchg
xchg
jne
jne
jne
jne
fs
and
adc
(bad)
push
mov
xor
xchg
jne
test
test
sbb
inc
and
sbb
ficomp
fucom
out
fucom
out
dec
aas
loop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
pop
xchg
xchg
pop
pop
mov
mov
cdq
sub
add
cs
add
data16
pushw
push
addr16
push
xor
stos
stos
stos
ss
stos
stos
jae
mov
test
test
dec
or
int3
int3
int3
or
int3
int3
test
test
ss
les
(bad)
les
mov
mov
mov
dec
push
js
dec
push
js
add
lods
arpl
es
xchg
push
call
out
inc
and
and
and
js
and
js
and
adc
adc
adc
adc
push
mov
mov
das
int
mov
div
cmp
div
call
sub
sub
dec
mov
cli
cli
and
outs
push
jno
outs
mov
and
and
and
and
(bad)
mov
lahf
fisub
daa
mov
mov
mov
(bad)
(bad)
jmp
sub
jmp
(bad)
(bad)
push
sbb
and
and
in
in
in
xchg
xchg
out
in
xchg
xchg
xor
xchg
xchg
xchg
xor
jmp
movs
movs
xchg
xchg
xchg
movs
xchg
xchg
xchg
fwait
fwait
call
mov
jbe
add
mov
xchg
cs
out
cs
out
mov
mov
push
push
push
push
and
push
adc
data16
data16
xor
xor
cld
jb
fcmovnu
fild
(bad)
fist
movs
movs
push
and
test
sti
in
(bad)
inc
shl
shl
push
push
push
pop
push
push
push
imul
add
push
push
push
mov
push
dec
push
push
push
mov
mov
ss
out
in
out
test
stos
stos
stos
test
iret
sub
dec
dec
test
push
push
push
test
push
push
inc
inc
inc
xchg
xor
(bad)
les
lods
cdq
cdq
cdq
lods
cdq
cdq
cdq
fs
and
iret
iret
rcl
dec
dec
dec
popa
jb
dec
daa
daa
daa
dec
daa
daa
daa
mov
stc
mov
push
push
push
mov
mov
mov
stos
loope
push
inc
inc
push
out
fsub
push
add
not
sbb
push
sub
cmp
imul
inc
test
in
inc
cmps
cmps
cmps
add
and
je
push
xor
dec
sbb
pop
sbb
aam
aam
inc
inc
test
push
inc
sbb
daa
daa
into
into
daa
daa
into
into
and
and
call
add
add
es
cwde
movs
ficomp
nop
xchg
dec
inc
xchg
pop
iret
iret
xchg
pop
iret
iret
inc
mov
jbe
mov
push
jbe
push
push
lock
push
lock
inc
jmp
jge
retf
pop
pop
retf
pop
mov
mov
mov
mov
jge
sub
sub
cmp
shr
sub
jmp
jmp
imul
mov
xor
into
mov
ret
ret
inc
push
xchg
xchg
inc
push
xchg
xchg
mov
mov
jne
out
jne
out
jecxz
loop
pop
pop
loop
pop
pop
and
and
and
and
and
pusha
and
loop
in
mov
mov
test
jno
fisub
and
shl
and
or
push
push
or
push
push
daa
daa
daa
int
fidiv
jl
popa
clc
jl
and
movs
rcr
push
push
cmc
cmc
cmp
lock
cmp
cmp
sbb
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
dec
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
jmp
out
call
mov
xor
call
pop
sub
add
popf
pop
ret
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
(bad)
jmp
fdivrp
call
mov
xor
call
pop
sub
add
popf
pop
ret
call
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cs
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
or
adc
dec
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
jmp
int
call
mov
xor
call
pop
sub
add
popf
pop
ret
jo
cmp
pop
sub
lea
inc
call
daa
push
popa
outs
jns
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
push
ins
inc
xchg
jne
jno
sbb
imul
adc
push
dec
pop
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
arpl
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
jg
sub
push
jmp
jle
mov
sbb
je
arpl
cmp
enter
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
xor
sbb
push
push
and
ins
xor
outs
pop
or
xor
jb
xor
adc
or
gs
das
xor
xchg
(bad)
push
mov
sbb
push
(bad)
pop
enter
jg
retf
or
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
push
cli
adc
inc
sbb
shl
sbb
push
inc
push
sub
pop
sbb
inc
jae
adc
add
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
pusha
pop
inc
dec
aas
sub
data16
jo
adc
xor
sub
inc
push
push
add
ins
clc
cmp
or
push
mov
je
outs
push
sub
enter
out
fbstp
add
pushf
and
dec
shr
adc
xor
cmp
arpl
sub
data16
or
sbb
es
xchg
xor
dec
aaa
or
loope
or
xor
push
mov
fs
mov
jae
and
adc
sub
cmp
xchg
or
lea
sub
outs
sbb
cld
push
mov
scas
jno
and
adc
pop
add
adc
push
lds
pop
sub
clc
dec
iret
jae
je
push
push
data16
mov
and
xor
pop
jp
es
inc
dec
xor
mov
pop
mov
adc
jbe
inc
xchg
sub
mov
movs
ins
sbb
add
mov
adc
and
mov
pusha
jbe
jmp
or
dec
test
mov
dec
mov
sub
mov
xchg
inc
mov
dec
cs
scas
add
xlat
sub
inc
mov
sbb
adc
pcmpeqw
cmp
ss
xor
or
and
cld
xor
mov
fs
jne
sub
jbe
data16
dec
push
push
push
add
inc
lods
and
add
sub
cmp
and
ins
add
add
enter
test
idiv
cmp
pop
cmp
outs
enter
xlat
jnp
pop
(bad)
imul
inc
jno
sbb
and
adc
cmp
add
or
adc
cmovns
add
or
or
jge
sar
ins
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
jp
inc
push
jl
paddusw
data16
cmp
jnp
aaa
repnz
out
hlt
outs
fstp
and
dec
cmp
daa
or
les
push
push
inc
into
dec
imul
data16
ins
jg
hlt
or
push
and
inc
int
xchg
and
adc
jg
jnp
push
(bad)
pop
lods
cmp
adc
and
or
sbb
mov
mov
mov
dec
aam
lea
out
push
out
inc
dec
dec
sub
popa
out
inc
pop
or
xlat
ds
xor
xor
add
sbb
adc
enter
sbb
inc
mov
inc
or
xor
sbb
(bad)
and
pop
adc
inc
xchg
pop
int3
cmp
dec
scas
and
popa
ins
sub
xor
mov
cmp
iret
arpl
adc
paddusb
arpl
jbe
and
add
scas
inc
je
jb
inc
ins
fstp
cmps
cmp
push
sub
push
sbb
pop
test
or
and
push
push
add
jnp
push
xchg
push
loop
xchg
mov
pop
sti
(bad)
add
arpl
xchg
je
fs
jno
dec
push
dec
popa
js
push
les
jo
dec
mov
outs
mov
sub
sbb
and
adc
push
data16
and
jp
aam
pop
adc
sub
push
adc
add
in
push
dec
jl
sub
sub
push
fsub
in
gs
inc
mov
inc
pop
dec
jmp
jne
ins
jno
push
cmp
or
pop
cmp
add
add
or
dec
pop
imul
dec
ja
adc
jl
imul
pop
loop
ror
test
jge
cmp
jno
dec
mov
and
mov
push
cmp
aam
stos
and
dec
ret
xor
jo
jbe
add
sbb
mov
cmp
ins
push
push
in
sub
xor
xor
jbe
pop
sbb
dec
pop
mov
pop
jge
push
or
ds
dec
inc
mov
dec
push
jo
mov
je
cmp
adc
mul
and
js
push
mov
push
inc
dec
cmps
inc
test
nop
dec
mov
pusha
mov
outs
and
cmp
pop
push
mov
cmc
and
xor
and
sub
push
cmps
push
pusha
push
fadd
jb
aam
test
jae
pop
push
jmp
cmp
adc
shl
inc
mov
movs
push
jb
es
sbb
ss
adc
mov
pop
clc
sbb
inc
and
fld
or
ja
ins
pop
bound
pushf
and
xchg
push
fidiv
ret
imul
imul
jmp
gs
inc
call
or
and
sbb
pop
mov
jo
lahf
push
jecxz
ret
xor
xchg
push
int
int
fisttp
mov
and
push
jge
cdq
jbe
inc
retf
pop
mov
pusha
test
das
fwait
pop
inc
jb
jl
inc
inc
xor
pusha
fwait
inc
in
repnz
mov
lds
test
inc
xchg
inc
sbb
iret
add
cmp
out
repz
and
pop
xchg
jbe
sbb
adc
inc
sbb
pop
jp
aad
dec
popa
mov
cs
mov
cmps
sub
das
test
sbb
push
and
and
push
sub
or
pop
sbb
jle
dec
and
ds
sahf
adc
inc
or
mov
jg
jmp
ins
jp
push
add
xor
aaa
or
aas
je
pop
or
jno
dec
jecxz
repz
popf
sub
and
dec
cmovae
(bad)
pop
arpl
les
sub
cmp
inc
mov
and
mov
inc
jno
in
pop
ficomp
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xchg
push
ss
adc
push
sbb
dec
js
jbe
gs
fdiv
mov
ins
pop
sub
sbb
sub
inc
adc
cwde
daa
jb
jnp
lods
pusha
ficomp
outs
inc
inc
inc
push
jecxz
jno
movs
ins
mov
lock
jle
fisttp
ins
lock
pop
xor
out
sub
pop
fbstp
mov
push
add
gs
ins
or
call
jle
sbb
push
sub
and
push
xor
jb
mov
imul
cmp
push
icebp
aaa
cdq
add
and
add
push
jns
out
call
and
xor
xor
popa
shr
psubd
and
jle
in
sbb
xor
jge
push
and
sub
or
inc
add
jne
js
xor
daa
in
inc
or
jl
outs
stc
pop
cs
mov
js
sahf
sub
pop
cmp
jno
int3
ss
inc
sub
push
dec
cmps
dec
fwait
push
mov
xor
movs
jbe
outs
je
dec
mov
dec
fs
and
sub
fwait
imul
and
push
leave
inc
pop
push
and
and
ja
cmp
dec
cs
cmp
xor
test
or
mov
inc
mov
arpl
dec
call
pop
fs
pop
xchg
pop
aad
arpl
arpl
data16
dec
dec
pop
pop
dec
dec
or
dec
dec
or
mov
clc
mov
(bad)
pi2fd
or
out
fsub
inc
int3
sbb
inc
int3
sbb
cwde
adc
push
dec
dec
push
ret
dec
dec
ret
ret
movs
movs
ret
ret
movs
movs
sbb
jecxz
sbb
aaa
ss
xor
xor
xor
inc
inc
mov
mov
sub
(bad)
sub
mov
sub
mov
(bad)
mov
(bad)
push
cwde
cwde
ins
xor
xor
add
add
cmp
add
cmp
fnstsw
aas
pop
inc
pop
inc
mov
stc
mov
pop
out
mov
mov
std
mov
or
or
push
or
leave
leave
leave
push
push
xchg
xor
les
and
sbb
or
out
out
mov
mov
loope
mov
loope
inc
es
cld
push
push
mov
push
mov
mov
(bad)
(bad)
mov
add
retf
cmp
cmp
loope
pop
loope
loope
aaa
rcl
add
rcl
fcomp
fcomp
add
push
ja
imul
cs
pop
das
jmp
out
out
out
mov
test
retf
push
push
sahf
mov
adc
adc
adc
pop
push
pop
mov
push
pop
mov
mov
mov
xchg
xchg
mov
inc
inc
inc
fdivr
lahf
lahf
fistp
lahf
lahf
mov
mov
cmp
loop
mov
jne
push
jo
js
jns
mov
jns
addr16
addr16
fs
frstor
arpl
fld
ins
pop
ficomp
ins
pop
jns
mov
jno
cmp
jbe
cmp
sub
aas
sub
jecxz
sub
jecxz
add
jecxz
add
push
rcl
add
shr
jle
shr
jle
ss
lahf
mov
mov
lock
ret
lock
ret
sbb
(bad)
lds
add
push
push
loopne
push
push
jmp
(bad)
paddsb
(bad)
unpcklps
or
enter
enter
adc
and
jle
jg
mov
jg
push
push
pop
push
push
push
ss
mov
sub
into
es
cmp
out
cmp
je
push
in
in
in
in
xchg
in
xchg
out
out
out
sbb
out
out
sbb
ja
cdq
cdq
jne
cdq
cdq
xor
xor
(bad)
(bad)
pop
(bad)
(bad)
(bad)
ss
mov
mov
(bad)
imul
std
jb
push
repz
push
repz
int3
int
adc
int
sub
call
fadd
(bad)
inc
inc
scas
scas
scas
movs
jp
not
fcomi
push
lds
xor
mov
xor
(bad)
ficomp
add
mov
scas
push
dec
or
daa
es
cld
popa
es
inc
inc
add
daa
setnp
add
push
test
loope
mov
mov
clc
clc
xor
pop
pop
mov
pop
pop
mov
call
mov
xchg
inc
inc
inc
xchg
inc
inc
inc
(bad)
movs
popf
mov
(bad)
sub
imul
pop
or
pop
jb
cmps
cmps
jne
cmps
cmps
scas
scas
scas
pop
cwde
inc
adc
cdq
lds
push
cdq
lds
inc
shl
mov
ret
mov
sbb
mov
mov
jl
dec
ss
scas
scas
scas
jmp
xor
adc
shr
sbb
sbb
sbb
sbb
cmps
cmps
mov
stc
mov
or
pop
jge
lea
(bad)
ficomp
sub
sti
jae
jae
(bad)
cmc
cmc
in
(bad)
cmc
cmc
inc
inc
inc
(bad)
dec
pop
jg
cmp
sbb
sub
sbb
nop
movs
mov
or
or
or
(bad)
xchg
xchg
cmp
xchg
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
ja
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
out
jmp
in
call
mov
xor
call
pop
sub
add
popf
pop
ret
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xor
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fnsave
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
or
(bad)
jmp
iret
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
adc
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
or
adc
dec
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
jmp
retf
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
pop
add
pusha
out
call
ret
ret
leave
leave
add
fdivr
into
jl
or
mov
push
push
mov
ds
call
call
xor
cli
mov
push
outs
dec
je
outs
ds
mov
push
push
call
aaa
cdq
cdq
cmc
cmc
stos
stos
lods
lods
xchg
xchg
nop
xchg
pop
sahf
pop
pop
pop
shl
(bad)
bound
repnz
fsubr
aam
fsubr
aam
clc
sar
and
frstor
push
scas
push
push
push
add
push
mov
lea
adc
mov
push
jecxz
cmp
rol
sbb
aas
in
cli
(bad)
sbb
push
adc
push
push
xor
push
jmp
mov
mov
fimul
pop
xchg
test
sbb
test
sbb
imul
cmp
sub
push
push
test
mov
dec
ja
aas
inc
ja
sbb
sbb
aaa
aaa
(bad)
cvtps2pd
cvtps2pd
push
dec
pop
sbb
fstp
push
sub
sub
sub
sub
aam
(bad)
(bad)
(bad)
mov
(bad)
(bad)
pushf
mov
mov
leave
leave
(bad)
pop
repnz
stos
or
out
or
(bad)
jno
cmp
loop
ret
cmp
add
jo
push
sbb
fsub
sub
arpl
dec
mov
pop
in
pop
test
pop
pop
mov
pop
pop
pop
jp
pop
pop
jp
mov
(bad)
mov
pop
pop
pop
adc
scas
scas
adc
scas
scas
inc
inc
inc
dec
sub
mov
sbb
mov
sbb
fbld
fist
pop
push
xchg
or
push
push
push
xor
cli
outs
mov
mov
dec
mov
add
outs
mov
es
addr16
push
aad
push
stos
stos
aad
stos
stos
add
mov
mov
pop
adc
or
lock
lock
ret
lock
ret
sbb
(bad)
lds
add
(bad)
(bad)
loopne
(bad)
les
enter
mov
cmp
jecxz
sub
cmp
xchg
fucom
xchg
fld
leave
(bad)
xchg
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
bound
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fidiv
sahf
jb
sbb
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
xor
test
add
mov
hlt
hlt
scas
inc
cli
cli
test
cli
cli
cli
cli
cli
push
mov
outs
cli
and
mov
pop
pop
outs
mov
in
pop
pop
in
(bad)
(bad)
loope
(bad)
(bad)
sub
shr
pushf
pushf
popf
scas
outs
ficomp
sub
inc
inc
popa
js
inc
arpl
maskmovq
not
cmp
pop
adc
mov
stc
mov
cmp
retf
add
stc
out
out
(bad)
stc
out
out
xchg
xchg
stc
scas
mov
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
test
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
(bad)
jmp
in
call
mov
xor
call
pop
sub
add
popf
pop
ret
or
dec
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
jecxz
jle
dec
test
xor
nop
pusha
xchg
nop
nop
push
inc
xor
sbb
xor
leave
leave
lock
mov
into
xor
arpl
or
ss
xor
mov
dec
dec
mov
dec
dec
and
and
mov
pusha
and
pushf
pushf
in
in
pushf
pushf
in
in
and
and
and
in
and
in
push
add
fcom
add
fsub
arpl
pop
aam
addr16
aad
mov
sub
sub
sub
and
sub
and
(bad)
mov
(bad)
movups
jns
jns
js
jns
jg
or
or
or
mov
xor
mov
iret
iret
call
fmul
mov
pop
pop
mov
pop
pop
daa
xor
push
fnstsw
loopne
dec
loopne
dec
dec
movs
movs
dec
dec
movs
movs
sbb
mov
hlt
dec
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
lock
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
cwde
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
jecxz
jle
dec
test
adc
dec
mov
dec
dec
inc
xchg
pushf
pushf
pushf
pop
popa
pop
jns
fldenv
push
mov
cmps
lods
je
mov
xchg
jo
xchg
xchg
add
and
and
dec
dec
dec
and
dec
dec
and
lahf
lahf
sahf
repz
in
in
mov
jle
enter
enter
(bad)
or
out
inc
pop
lock
pop
fbld
gs
fs
mov
mov
fstp
xchg
(bad)
frstor
and
frstor
and
test
test
sbb
sbb
sbb
xchg
adc
out
out
out
sbb
out
out
sbb
ja
cdq
cdq
ja
cdq
cdq
cmp
cdq
cdq
cmp
xor
xor
jbe
push
push
ret
inc
and
ret
mov
in
sbb
push
out
sub
cdq
adc
xor
sbb
not
pop
ds
(bad)
fcomip
mov
cli
pop
pop
pop
mov
cld
cmps
cmps
arpl
mov
cdq
pop
pop
sti
cdq
pop
dec
imul
inc
sbb
xor
xor
xor
cmp
xor
cmp
inc
inc
mov
inc
inc
cld
cld
arpl
cmc
cmc
pushf
or
or
in
in
or
in
in
dec
dec
jmp
inc
jae
jae
mov
aad
(bad)
lds
dec
dec
cmps
dec
dec
dec
xor
(bad)
(bad)
xor
(bad)
pop
scas
mov
leave
nop
mov
jmp
push
xchg
jl
ja
jl
push
push
jl
push
push
inc
xchg
pushf
cmp
xchg
cmp
jae
scas
push
int3
test
mov
mov
movs
movs
mov
movs
movs
sbb
movs
sbb
xchg
xchg
bound
test
sub
sub
fstp
sub
fstp
and
and
and
and
mov
lea
xor
gs
arpl
push
test
(bad)
pushf
pushf
pushf
sbb
jmp
fwait
(bad)
mov
add
mov
add
mov
loope
mov
loope
daa
daa
jp
jp
jp
jp
aad
or
sbb
or
sbb
adc
adc
(bad)
cs
arpl
(bad)
mov
pushf
movs
popa
popa
mov
mov
xchg
inc
inc
es
cld
push
push
mov
and
xchg
xchg
ret
xchg
sahf
int3
ss
int3
ss
jmp
inc
jbe
iret
mov
dec
movs
pop
pusha
dec
push
cmp
ret
xor
ret
xor
sysenter
xor
cmovno
mov
inc
cld
cld
dec
dec
dec
loope
dec
dec
loope
inc
dec
loope
cmps
dec
loope
cmps
cld
out
cmps
cld
out
jb
pop
out
pop
pop
test
mov
jb
data16
cmp
cmp
sub
sub
lock
lock
nop
xchg
(bad)
xchg
imul
imul
pusha
vhaddpd
(bad)
leave
mov
pop
or
mov
or
mov
mov
mov
js
in
js
inc
inc
jae
jae
mov
popf
popf
rcl
popf
popf
cdq
cdq
cwde
cdq
sbb
cwde
and
and
and
and
jb
pop
adc
pop
cli
cli
cli
cmc
sbb
outs
sub
pusha
outs
leave
jge
push
cld
std
push
(bad)
(bad)
std
(bad)
(bad)
push
xor
push
push
jno
push
push
std
std
add
add
lahf
lahf
in
in
in
lahf
in
in
in
xchg
inc
inc
jae
jae
mov
ins
ins
ins
inc
adc
ins
cmc
cmc
cmc
dec
cmc
cmc
cmc
arpl
clc
clc
adc
adc
jne
pop
pushf
daa
mov
pushf
daa
mov
or
mov
cmps
cmps
cmps
in
daa
movs
mov
js
mov
cwde
cwde
in
addr16
inc
arpl
inc
pop
jb
inc
sbb
sbb
data16
data16
jno
fcomip
jno
fbstp
jb
mov
push
iret
imul
mov
mov
loope
mov
loope
jmp
jns
pop
xchg
cmp
cmp
jbe
mov
(bad)
mov
dec
dec
dec
sub
xor
inc
lahf
popa
add
ins
fnstenv
ins
mov
mov
mov
in
sti
fistp
shl
(bad)
xchg
cs
xchg
cs
mov
push
push
add
jae
adc
aam
adc
aam
les
retf
adc
cmc
cmc
lock
cmc
lock
ret
lock
ret
sbb
(bad)
(bad)
test
mov
mov
pusha
and
pusha
pusha
arpl
sbb
inc
cld
push
pop
aam
push
pop
dec
imul
pop
mov
cmp
cmp
cmp
cmp
test
js
lods
test
js
inc
jmp
int
add
and
cmp
cmp
movs
jl
jo
jo
jo
jo
aaa
repz
aaa
repz
daa
daa
std
push
jmp
inc
and
aam
mov
shr
(bad)
(bad)
psubsw
(bad)
lfs
jb
pop
pop
bound
pop
add
mov
mov
cld
scas
cld
cld
cld
pop
pop
stc
cld
pop
pop
fcomp
and
and
(bad)
(bad)
ficomp
outs
pop
pop
outs
outs
xor
xor
xchg
je
enter
enter
daa
add
arpl
into
mov
scas
rcr
rcr
or
(bad)
les
(bad)
les
cdq
cdq
mov
cwde
cdq
mov
xor
stos
stos
stos
xor
sbb
jnp
jp
jnp
jp
push
push
jp
push
push
dec
dec
dec
mov
mov
mov
xlat
fist
push
push
push
shr
inc
rol
cmp
shl
push
lods
aas
mov
sub
mov
sub
rcl
sub
lea
jo
(bad)
(bad)
(bad)
(bad)
pop
add
xor
add
xor
adc
adc
push
adc
iret
iret
sbb
iret
iret
shl
mov
mov
mov
push
iret
out
push
iret
out
ret
into
or
loop
or
(bad)
fimul
(bad)
fidiv
xor
fidiv
xor
std
std
cld
jge
mov
xchg
bound
add
rcl
xchg
mov
mov
pop
xor
pop
pop
xor
xchg
in
in
in
xchg
in
in
(bad)
paddsw
(bad)
sgdtd
repz
repz
(bad)
cld
cld
arpl
cld
arpl
pop
pop
data16
lea
retf
retf
retf
aas
aas
adc
adc
cdq
test
into
cdq
into
into
into
loope
int3
into
loope
xor
pop
pop
pop
xor
pop
stos
stos
in
push
clc
repz
clc
dec
loop
clc
xchg
xchg
jb
outs
outs
outs
mov
mov
mov
or
add
xchg
add
add
and
push
inc
pusha
and
inc
sub
test
mov
data16
data16
jno
adc
jno
mov
jno
mov
mov
cmp
lock
lock
ret
lock
ret
sbb
fld
sbb
nop
nop
nop
jmp
nop
into
into
into
js
retf
into
js
inc
inc
mov
inc
inc
std
std
popa
popa
icebp
icebp
icebp
popa
icebp
icebp
icebp
jne
jne
jne
jne
pshufw
inc
inc
es
(bad)
cmp
rcl
(bad)
pusha
sbb
mov
inc
retf
inc
retf
ss
cmp
push
div
inc
div
ins
outs
test
push
add
add
add
into
into
iret
sahf
and
jmp
aad
(bad)
aad
lea
pop
jge
push
pop
jge
mov
and
and
and
cmp
and
jmp
xchg
jns
push
(bad)
fstp
(bad)
fstp
xchg
inc
inc
inc
xchg
inc
lock
inc
lock
mov
inc
inc
fcmovu
outs
outs
pop
pop
ins
outs
pop
pop
sbb
pop
pop
sbb
mov
mov
lock
dec
dec
dec
jle
dec
dec
rol
sbb
mov
mov
mov
sub
sub
sub
sub
xor
mov
sahf
jns
lahf
sahf
jns
mov
mov
lock
adc
adc
in
in
call
mov
or
mov
adc
adc
(bad)
sub
mov
jo
adc
adc
(bad)
fist
(bad)
fcomip
lock
lock
inc
(bad)
fnstenv
jl
scas
cmp
cmp
inc
jl
test
test
sbb
ins
aaa
sbb
fcomp
fsub
jge
and
sub
mov
add
dec
test
in
in
sbb
sbb
add
push
adc
adc
push
adc
rcl
push
rcl
ror
mov
dec
addr16
add
lods
arpl
mov
xchg
mov
outs
outs
mov
outs
outs
push
push
push
push
push
daa
daa
mov
mov
dec
dec
dec
and
pusha
jno
pusha
pusha
push
js
pusha
push
js
pusha
push
js
pop
pop
js
pop
pop
adc
adc
adc
push
push
push
adc
push
inc
inc
jae
jae
mov
xlat
icebp
(bad)
rcl
icebp
mov
push
push
icebp
push
push
push
loope
push
push
loope
fcomp
(bad)
fbld
and
call
and
xchg
jp
test
ins
ins
lea
ins
add
adc
leave
push
push
push
xlat
hlt
pop
mov
inc
cmp
test
and
jg
adc
in
mov
in
imul
fcomp
cli
cli
cli
sbb
jmp
outs
std
(bad)
outs
(bad)
pop
mov
jle
jle
jle
fwait
call
add
add
std
(bad)
stc
stc
clc
not
xor
add
mov
adc
push
icebp
adc
cmp
dec
repnz
shr
aas
add
push
add
push
push
and
and
push
push
push
rol
push
inc
inc
inc
push
inc
inc
inc
mov
out
cdq
cdq
pushf
pushf
pushf
in
add
call
inc
rcl
rol
rcl
push
push
(bad)
rcr
push
jmp
movs
movs
movs
out
movs
movs
cmps
cmps
popa
popa
push
push
arpl
push
cdq
cdq
cdq
push
cdq
cdq
cdq
rcl
fwait
cdq
rcl
add
retf
add
retf
data16
fwait
sahf
sahf
fwait
fwait
sahf
sahf
cmp
sahf
sahf
cmp
std
std
std
cmp
and
aad
pusha
and
add
inc
inc
inc
fs
inc
inc
movs
movs
inc
inc
movs
movs
adc
xor
xor
xor
xor
dec
dec
and
dec
dec
and
test
test
test
shl
xor
rol
add
aas
aas
add
aas
aas
(bad)
jmp
aad
gs
mov
mov
add
mov
mov
pop
out
dec
jb
out
dec
jb
(bad)
(bad)
jb
(bad)
ret
(bad)
(bad)
ret
sbb
cmp
sub
jge
adc
adc
cmp
aaa
cmp
jb
jb
xchg
into
fwait
pop
movs
jle
pop
movs
jle
(bad)
jle
push
cmp
cmp
jl
push
jl
jl
xor
jmp
cli
cli
cli
or
outs
xor
xchg
(bad)
fild
push
fcmovu
push
push
inc
inc
(bad)
fnstenv
cmp
sbb
fwait
push
sbb
fwait
int3
int3
int
or
ret
sub
sub
inc
inc
pop
fadd
arpl
out
xor
les
pop
pop
rol
pop
pop
fistp
push
pop
lods
femms
data16
jg
addr16
or
or
or
lea
or
add
popf
pop
rcl
rcr
test
xchg
xchg
test
xchg
xchg
pop
pop
xchg
xchg
pop
pop
adc
(bad)
fsubr
and
and
jmp
lock
adc
adc
adc
push
push
push
adc
push
inc
inc
jae
jae
mov
mov
mov
cmp
int
pop
int
push
pop
test
test
test
test
shrd
jmp
or
add
ins
ins
add
ins
ins
test
test
test
pop
pop
pop
cwde
pop
pop
pop
cdq
cdq
and
and
int3
sahf
int3
int3
int3
dec
dec
leave
int3
dec
dec
jb
aad
aad
sub
sub
xor
retf
enter
add
cs
cs
or
ja
or
ja
lock
lock
dec
dec
dec
mov
sti
sti
dec
dec
sti
sti
dec
dec
mov
std
mov
pop
pop
pop
scas
xor
cmps
jb
jb
popf
mov
cli
cdq
jle
cli
cdq
jle
fs
jnp
push
pop
jnp
push
pop
std
std
cld
(bad)
(bad)
mov
fld
sbb
add
lea
in
mov
and
test
clc
clc
clc
retf
clc
clc
clc
in
in
in
ror
jnp
ja
test
jl
dec
cmp
int3
pop
int3
int3
int3
fdivr
mov
add
imul
rcr
push
push
push
push
push
push
add
add
add
lock
add
lock
inc
adc
jmp
mov
mov
(bad)
movsx
(bad)
(bad)
(bad)
add
data16
sub
add
sub
lock
add
lock
and
and
(bad)
fistp
pop
pop
dec
dec
pop
pop
dec
dec
addr16
xchg
data16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
iret
iret
iret
xchg
iret
iret
iret
loope
retf
loope
fmul
jne
fwait
fwait
mov
mov
jne
into
jne
jne
ret
jo
ret
ret
inc
inc
es
(bad)
cmp
rcl
jmp
xlat
shr
adc
adc
lods
lods
adc
lods
lods
jmp
popa
dec
dec
add
cwde
movs
push
inc
nop
mov
inc
nop
push
leave
pushf
xchg
arpl
loopne
arpl
loopne
js
in
js
jmp
push
push
push
pop
icebp
icebp
icebp
push
push
aad
cwde
cwde
xlat
aad
cwde
mov
call
scas
ins
add
xor
xor
xor
xor
leave
jnp
dec
jnp
adc
adc
mov
mov
push
and
jmp
ret
inc
xchg
es
inc
je
movs
movs
or
pop
jge
rol
rol
push
push
lock
xlat
hlt
lock
xlat
mov
mov
outs
mov
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
dec
sldt
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
jmp
out
call
mov
xor
call
pop
sub
add
popf
pop
ret
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
fdivr
jmp
fdivrp
call
mov
xor
call
pop
sub
add
popf
pop
ret
call
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cs
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
or
adc
dec
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
jmp
int
call
mov
xor
call
pop
sub
add
popf
pop
ret
jo
cmp
pop
sub
lea
inc
call
daa
push
popa
outs
jns
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
push
ins
inc
xchg
jne
jno
sbb
imul
adc
push
dec
pop
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
arpl
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
jg
sub
push
jmp
jle
mov
sbb
je
arpl
cmp
enter
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
xor
sbb
push
push
and
ins
xor
outs
pop
or
xor
jb
xor
adc
or
gs
das
xor
xchg
(bad)
push
mov
sbb
push
(bad)
pop
enter
jg
retf
or
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
push
cli
adc
inc
sbb
shl
sbb
push
inc
push
sub
pop
sbb
inc
jae
adc
add
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
pusha
pop
inc
dec
aas
sub
data16
jo
adc
xor
sub
inc
push
push
add
ins
clc
cmp
or
push
mov
je
outs
push
sub
enter
out
fbstp
add
pushf
and
dec
shr
adc
xor
cmp
arpl
sub
data16
or
sbb
es
xchg
xor
dec
aaa
or
loope
or
xor
push
mov
fs
mov
jae
and
adc
sub
cmp
xchg
or
lea
sub
outs
sbb
cld
push
mov
scas
jno
and
adc
pop
add
adc
push
lds
pop
sub
clc
dec
iret
jae
je
push
push
data16
mov
and
xor
pop
jp
es
inc
dec
xor
mov
pop
mov
adc
jbe
inc
xchg
sub
mov
movs
ins
sbb
add
mov
adc
and
mov
pusha
jbe
jmp
or
dec
test
mov
dec
mov
sub
mov
xchg
inc
mov
dec
cs
scas
add
xlat
sub
inc
mov
sbb
adc
pcmpeqw
cmp
ss
xor
or
and
cld
xor
mov
fs
jne
sub
jbe
data16
dec
push
push
push
add
inc
lods
and
add
sub
cmp
and
ins
add
add
enter
test
idiv
cmp
pop
cmp
outs
enter
xlat
jnp
pop
(bad)
imul
inc
jno
sbb
and
adc
cmp
add
or
adc
cmovns
add
or
or
jge
sar
ins
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
jp
inc
push
jl
paddusw
data16
cmp
jnp
aaa
repnz
out
hlt
outs
fstp
and
dec
cmp
daa
or
les
push
push
inc
into
dec
imul
data16
ins
jg
hlt
or
push
and
inc
int
xchg
and
adc
jg
jnp
push
(bad)
pop
lods
cmp
adc
and
or
sbb
mov
mov
mov
dec
aam
lea
out
push
out
inc
dec
dec
sub
popa
out
inc
pop
or
xlat
ds
xor
xor
add
sbb
adc
enter
sbb
inc
mov
inc
or
xor
sbb
(bad)
and
pop
adc
inc
xchg
pop
int3
cmp
dec
scas
and
popa
ins
sub
xor
mov
cmp
iret
arpl
adc
paddusb
arpl
jbe
and
add
scas
inc
je
jb
inc
ins
fstp
cmps
cmp
push
sub
push
sbb
pop
test
or
and
push
push
add
jnp
push
xchg
push
loop
xchg
mov
pop
sti
(bad)
add
arpl
xchg
je
fs
jno
dec
push
dec
popa
js
push
les
jo
dec
mov
outs
mov
sub
sbb
and
adc
push
data16
and
jp
aam
pop
adc
sub
push
adc
add
in
push
dec
jl
sub
sub
push
fsub
in
gs
inc
mov
inc
pop
dec
jmp
jne
ins
jno
push
cmp
or
pop
cmp
add
add
or
dec
pop
imul
dec
ja
adc
jl
imul
pop
loop
ror
test
jge
cmp
jno
dec
mov
and
mov
push
cmp
aam
stos
and
dec
ret
xor
jo
jbe
add
sbb
mov
cmp
ins
push
push
in
sub
xor
xor
jbe
pop
sbb
dec
pop
mov
pop
jge
push
or
ds
dec
inc
mov
dec
push
jo
mov
je
cmp
adc
mul
and
js
push
mov
push
inc
dec
cmps
inc
test
nop
dec
mov
pusha
mov
outs
and
cmp
pop
push
mov
cmc
and
xor
and
sub
push
cmps
push
pusha
push
fadd
jb
aam
test
jae
pop
push
jmp
cmp
adc
shl
inc
mov
movs
push
jb
es
sbb
ss
adc
mov
pop
clc
sbb
inc
and
fld
or
ja
ins
pop
bound
pushf
and
xchg
push
fidiv
ret
imul
imul
jmp
gs
inc
call
or
and
sbb
pop
mov
jo
lahf
push
jecxz
ret
xor
xchg
push
int
int
fisttp
mov
and
push
jge
cdq
jbe
inc
retf
pop
mov
pusha
test
das
fwait
pop
inc
jb
jl
inc
inc
xor
pusha
fwait
inc
in
repnz
mov
lds
test
inc
xchg
inc
sbb
iret
add
cmp
out
repz
and
pop
xchg
jbe
sbb
adc
inc
sbb
pop
jp
aad
dec
popa
mov
cs
mov
cmps
sub
das
test
sbb
push
and
and
push
sub
or
pop
sbb
jle
dec
and
ds
sahf
adc
inc
or
mov
jg
jmp
ins
jp
push
add
xor
aaa
or
aas
je
pop
or
jno
dec
jecxz
repz
popf
sub
and
dec
cmovae
(bad)
pop
arpl
les
sub
cmp
inc
mov
and
mov
inc
jno
in
pop
ficomp
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xchg
push
ss
adc
push
sbb
dec
js
jbe
gs
fdiv
mov
ins
pop
sub
sbb
sub
inc
adc
cwde
daa
jb
jnp
lods
pusha
ficomp
outs
inc
inc
inc
push
jecxz
jno
movs
ins
mov
lock
jle
fisttp
ins
lock
pop
xor
out
sub
pop
fbstp
mov
push
add
gs
ins
or
call
jle
sbb
push
sub
and
push
xor
jb
mov
imul
cmp
push
icebp
aaa
cdq
add
and
add
push
jns
out
call
and
xor
xor
popa
shr
psubd
and
jle
in
sbb
xor
jge
push
and
sub
or
inc
add
jne
js
xor
daa
in
inc
or
jl
outs
stc
pop
cs
mov
js
sahf
sub
pop
cmp
jno
int3
ss
inc
sub
push
dec
cmps
dec
fwait
push
mov
xor
movs
jbe
outs
je
dec
mov
dec
fs
and
sub
fwait
imul
and
push
leave
inc
pop
push
and
and
ja
cmp
dec
cs
cmp
xor
test
sub
mov
cmp
imul
fidivr
ins
add
outs
test
ror
cli
(bad)
cli
sbb
(bad)
cli
sbb
dec
dec
push
sbb
sub
scas
mov
pop
xchg
dec
sub
out
mov
mov
pusha
data16
pusha
daa
daa
daa
sbb
mov
nop
cld
push
aam
adc
sar
push
cmp
stos
pop
push
aam
popa
scas
sub
call
call
icebp
icebp
sub
sub
sub
jg
ins
cmp
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
call
(bad)
(bad)
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
fidiv
sahf
jb
sbb
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
xor
test
or
mov
pop
pop
rol
sbb
ss
retf
or
and
mul
xor
repz
(bad)
loope
addr16
sbb
pop
sbb
sub
dec
xor
dec
jmp
jmp
mov
dec
ins
inc
dec
sbb
add
push
push
and
mov
and
pop
dec
dec
jne
je
xchg
je
cmp
push
cmp
cmp
stos
gs
adc
push
cld
push
stos
sbb
fdivr
xor
iret
mov
cmc
cmc
lods
cmc
cmc
cmc
fcom
clc
fist
clc
scas
scas
scas
xor
lds
lds
cld
shl
add
push
or
dec
or
jnp
sub
jnp
pop
in
fs
in
fcomp
fsubr
es
add
sbb
cs
pop
movs
movs
xchg
xchg
xchg
xchg
inc
aam
in
in
in
in
data16
jne
fcmovu
add
jnp
sbb
sbb
pop
or
fcomp
fnstcw
push
lahf
fstp
pop
cld
pop
pop
pop
add
lock
pop
test
ret
into
ret
dec
ror
xchg
push
push
mov
mov
push
push
pop
push
push
push
test
test
aam
outs
outs
jo
and
out
clc
and
add
test
inc
add
daa
daa
daa
sbb
aam
call
(bad)
rcl
ins
fwait
rcl
ins
aaa
rcl
ins
sti
sti
sti
ins
sti
sti
sti
add
add
inc
add
xchg
inc
inc
xchg
xchg
and
and
jns
and
ja
mov
mov
rcl
mov
mov
xor
adc
xor
aam
add
adc
adc
adc
xlat
xlat
adc
xlat
xlat
in
in
in
neg
leave
leave
dec
dec
dec
and
sub
sub
rol
xor
inc
inc
daa
daa
daa
fwait
cmp
into
sbb
pop
aam
xchg
xchg
pop
xor
xor
xor
xor
mov
mov
stc
mov
sub
sub
jg
sub
jg
in
in
jg
lods
in
push
push
inc
inc
mov
mov
mov
iret
ins
dec
aas
retf
cmp
cmp
scas
bound
int3
scas
jae
jb
xchg
xor
xchg
xchg
xchg
push
xchg
xchg
xchg
adc
cmp
adc
lea
sub
mov
sub
rol
aas
cmc
cs
ror
and
cmc
pop
pop
push
das
sti
pop
push
sbb
sbb
sub
sub
jmp
jmp
push
xchg
adc
sbb
pop
dec
push
sbb
clc
test
sbb
sbb
in
pop
or
test
mov
jl
sbb
test
mov
jb
dec
cmp
cmp
xchg
xchg
pop
xchg
xchg
xchg
ss
cmp
xor
cmp
lea
(bad)
cmps
adc
stos
pop
in
in
or
adc
pop
sbb
add
push
or
add
adc
adc
mov
movs
inc
cld
sub
push
daa
cs
out
pop
test
out
mov
dec
dec
cmp
retf
dec
adc
adc
add
fcomp
fdiv
(bad)
fcomp
mov
mov
lahf
popa
add
sbb
mov
scas
mov
push
push
sbb
in
adc
cmps
in
xchg
xchg
in
xchg
xchg
fwait
fwait
call
js
mov
mov
and
and
xchg
adc
jns
jns
jns
jns
jb
cdq
ds
int3
jle
aas
inc
inc
inc
cmp
inc
inc
cmp
cdq
cdq
arpl
in
inc
call
mov
push
in
push
cmp
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
or
add
inc
call
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
or
inc
or
das
(bad)
push
sbb
xor
stos
addr16
push
mov
sub
fs
pop
cs
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
retf
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
dec
imul
and
sbb
add
xchg
sti
and
jl
add
and
ins
and
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
jmp
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
sbb
daa
out
sbb
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
mov
sbb
outs
mov
add
retf
or
or
ds
push
js
ret
push
pushf
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
test
(bad)
jmp
fdivr
call
mov
xor
call
pop
sub
add
popf
pop
ret
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
pop
aaa
cmp
popa
leave
sub
sbb
jge
popa
xor
adc
rol
sbb
call
inc
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
dec
sub
adc
mov
adc
cmp
push
jb
pop
jns
add
(bad)
adc
dec
push
dec
or
inc
jae
dec
pop
in
leave
imul
inc
sar
jmp
sar
call
mov
xor
call
pop
sub
add
popf
pop
ret
dec
out
dec
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
inc
sbb
dec
dec
fwait
xor
and
xor
aas
fild
sbb
and
das
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
jmp
retf
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
outs
push
fs
call
push
dec
sbb
movs
js
cmp
sbb
xchg
fmul
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
(bad)
(bad)
jmp
(bad)
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
inc
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
xor
sbb
push
push
and
ins
xor
outs
pop
or
xor
jb
xor
adc
or
gs
das
xor
xchg
(bad)
push
mov
sbb
push
(bad)
pop
enter
jg
retf
or
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
push
cli
adc
inc
sbb
shl
sbb
push
inc
push
sub
pop
sbb
inc
jae
adc
add
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
jnp
inc
rcr
or
adc
xor
sbb
inc
rcl
inc
(bad)
outs
leave
data16
jns
add
push
es
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
pusha
pop
inc
dec
aas
sub
data16
jo
adc
xor
sub
inc
push
push
add
ins
clc
cmp
or
push
mov
je
outs
push
sub
enter
out
fbstp
add
pushf
and
dec
shr
adc
xor
cmp
arpl
sub
data16
or
sbb
es
xchg
xor
dec
aaa
or
loope
or
xor
push
mov
fs
mov
jae
and
adc
sub
cmp
xchg
or
lea
sub
outs
sbb
cld
push
mov
scas
jno
and
adc
pop
add
adc
push
lds
pop
sub
clc
dec
iret
jae
je
push
push
data16
mov
and
xor
pop
jp
es
inc
dec
xor
mov
pop
mov
adc
jbe
inc
xchg
sub
mov
movs
ins
sbb
add
mov
adc
and
mov
pusha
jbe
jmp
or
dec
test
mov
dec
mov
sub
mov
xchg
inc
mov
dec
cs
scas
add
xlat
sub
inc
mov
sbb
adc
pcmpeqw
cmp
ss
xor
or
and
cld
xor
mov
fs
jne
sub
jbe
data16
dec
push
push
push
add
ret
(bad)
jmp
ret
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cmp
pop
cmp
outs
enter
xlat
jnp
pop
(bad)
imul
inc
jno
sbb
and
adc
cmp
add
or
adc
cmovns
add
or
or
jge
sar
ins
pop
sub
leave
je
push
addr16
imul
pop
and
es
sub
dec
adc
jl
addr16
das
sub
out
push
jl
paddusw
data16
cmp
jnp
aaa
repnz
out
hlt
outs
fstp
and
dec
cmp
daa
or
les
push
push
inc
into
dec
imul
data16
ins
jg
hlt
or
push
and
inc
int
xchg
and
adc
jg
jnp
push
(bad)
pop
lods
cmp
adc
and
or
sbb
mov
mov
mov
dec
aam
lea
out
push
out
inc
dec
dec
sub
popa
out
inc
pop
or
xlat
ds
xor
xor
add
sbb
adc
enter
sbb
inc
mov
inc
or
xor
sbb
(bad)
and
pop
adc
inc
xchg
pop
int3
cmp
dec
scas
and
popa
ins
sub
xor
mov
cmp
iret
arpl
adc
paddusb
arpl
jbe
and
add
scas
inc
je
jb
inc
ins
fstp
cmps
cmp
push
sub
push
sbb
pop
test
or
and
push
push
add
jnp
push
xchg
push
loop
xchg
mov
pop
sti
(bad)
add
arpl
xchg
je
fs
jno
dec
push
dec
popa
js
push
les
jo
dec
mov
outs
mov
sub
sbb
and
adc
push
data16
and
jp
aam
pop
adc
sub
push
adc
add
in
push
dec
jl
sub
sub
push
fsub
in
gs
inc
mov
inc
pop
dec
jmp
jne
ins
jno
push
cmp
or
pop
cmp
add
add
or
dec
pop
imul
dec
ja
adc
jl
imul
pop
loop
ror
test
jge
cmp
jno
dec
mov
and
mov
push
cmp
aam
stos
and
dec
ret
xor
jo
jbe
add
sbb
mov
cmp
ins
push
push
in
sub
xor
xor
jbe
pop
sbb
dec
pop
mov
pop
jge
push
or
ds
dec
inc
mov
dec
push
jo
mov
je
cmp
adc
mul
and
js
push
mov
push
inc
dec
cmps
inc
test
nop
dec
mov
pusha
mov
outs
and
cmp
pop
push
mov
cmc
and
xor
and
sub
push
cmps
push
pusha
push
fadd
jb
aam
test
jae
pop
push
jmp
cmp
adc
shl
inc
mov
movs
push
jb
es
sbb
ss
adc
mov
pop
clc
sbb
inc
and
fld
or
ja
ins
pop
bound
pushf
and
xchg
push
fidiv
ret
imul
imul
jmp
gs
inc
call
or
and
sbb
pop
mov
jo
lahf
push
jecxz
ret
xor
xchg
push
int
int
fisttp
mov
and
push
jge
cdq
jbe
inc
retf
pop
mov
pusha
test
das
fwait
pop
inc
jb
jl
inc
inc
xor
pusha
fwait
inc
in
repnz
mov
lds
test
inc
xchg
inc
sbb
iret
add
cmp
out
repz
and
pop
xchg
jbe
sbb
adc
inc
sbb
pop
jp
aad
dec
popa
mov
cs
mov
cmps
sub
das
test
sbb
push
and
and
push
sub
or
pop
sbb
jle
dec
and
ds
sahf
adc
inc
or
mov
jg
jmp
ins
jp
push
add
xor
aaa
or
aas
je
pop
or
jno
dec
jecxz
repz
popf
sub
and
dec
cmovae
(bad)
pop
arpl
les
sub
cmp
inc
mov
and
mov
inc
jno
in
pop
ficomp
mov
imul
pop
cmp
out
xchg
cmp
enter
sbb
push
cld
imul
cmp
adc
movs
pop
clc
sub
inc
xchg
push
ss
adc
push
sbb
dec
js
jbe
gs
fdiv
mov
ins
pop
sub
sbb
sub
inc
adc
cwde
daa
jb
jnp
lods
pusha
ficomp
outs
inc
inc
inc
push
jecxz
jno
movs
ins
mov
lock
jle
fisttp
ins
lock
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
adc
dec
call
jle
sbb
push
sub
and
push
xor
jb
mov
imul
cmp
push
icebp
aaa
cdq
add
and
add
push
jns
out
call
and
xor
xor
popa
shr
psubd
and
jle
in
sbb
xor
jge
push
and
sub
or
inc
add
jne
js
xor
daa
in
inc
or
jl
outs
stc
pop
cs
mov
js
sahf
sub
pop
cmp
jno
int3
ss
inc
sub
push
dec
cmps
dec
fwait
push
mov
xor
movs
jbe
outs
je
dec
mov
dec
fs
and
sub
fwait
imul
and
push
leave
inc
pop
push
and
and
ja
cmp
dec
cs
xor
jno
dec
jne
push
(bad)
jg
dec
adc
add
dec
or
sub
outs
xor
mov
nop
popa
mov
pmullw
mov
xor
jmp
pop
ins
sbb
sub
call
xor
xchg
jbe
pop
push
push
jl
jae
jp
aas
push
xor
adc
adc
jae
sub
cmp
movs
imul
dec
and
pop
xor
jne
sub
or
in
dec
or
xor
or
retf
xor
test
sar
push
clc
xor
sub
adc
dec
sbb
retf
or
sbb
je
cmp
div
(bad)
ins
and
ins
jns
cmps
dec
(bad)
cmp
add
xor
cmp
loopne
mov
push
xlat
inc
loop
xchg
push
stos
jae
add
nop
xor
je
sub
inc
aam
test
in
ds
cmp
adc
sub
push
or
sbb
repz
or
add
(bad)
jp
sbb
outs
pop
push
sub
imul
push
adc
push
push
mov
push
rcr
gs
sub
fnstsw
sbb
pusha
push
jge
cmp
push
dec
pop
and
inc
xchg
push
mov
cmp
adc
pop
cmp
inc
pop
jg
push
mov
dec
jbe
cwde
or
fstp
test
adc
adc
ds
and
sub
es
dec
int
fs
push
arpl
ja
dec
sbb
xor
push
jnp
jns
dec
dec
ins
or
jl
dec
outs
and
cwde
imul
adc
inc
shl
ins
je
es
xor
jns
je
adc
dec
cli
ins
repnz
inc
jno
and
sub
push
push
dec
sub
or
jns
jns
jp
jae
push
mov
jne
unpckhps
sbb
mov
xchg
push
pop
push
lods
and
ds
jge
inc
jno
test
add
arpl
iret
sub
dec
sahf
sbb
pop
mov
and
gs
data16
out
fimul
add
das
das
sub
jbe
push
jnp
xor
pushf
push
aas
dec
fstp
aaa
stc
push
xor
out
dec
mov
and
jno
add
jae
jp
pop
xor
ss
cmp
jnp
add
inc
pop
mov
arpl
cvtps2pi
sub
jb
sbb
adc
pop
sub
gs
popa
jns
outs
cmp
push
cmp
inc
inc
pop
test
movs
jae
or
add
or
xor
stc
sub
or
pop
rcr
shl
add
sub
bound
jno
jle
scas
sub
dec
shl
ins
ss
ins
aas
or
push
push
push
imul
push
das
imul
inc
rcr
imul
sub
aam
adc
adc
adc
imul
daa
call
push
sbb
sbb
ins
cmp
stos
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
inc
mov
jno
imul
sub
inc
in
push
and
dec
push
popa
and
pop
or
push
cmp
es
sub
sub
dec
idiv
data16
repz
aas
inc
adc
jae
add
sar
pop
jle
push
std
jl
pop
loope
pusha
pop
inc
pop
xchg
push
pop
cmp
dec
add
push
xchg
adc
push
(bad)
into
xor
inc
mov
adc
mov
sub
dec
cmp
add
dec
fidiv
push
stc
cmp
aas
mov
pop
test
call
dec
test
xchg
aas
call
push
cs
dec
push
xchg
inc
xchg
sbb
imul
test
fs
and
fadd
pusha
ja
sub
popa
dec
add
imul
xor
jp
dec
cs
mov
pop
mov
xor
or
cmovno
adc
dec
push
pushf
(bad)
addr16
addr16
sub
imul
add
pusha
sar
jne
add
aaa
pop
push
or
and
daa
xchg
or
mov
sbb
inc
push
mov
call
daa
pop
sbb
ss
dec
out
adc
je
jae
and
mov
jle
sub
comiss
cmp
sbb
mov
add
bound
adc
push
dec
jb
push
fnstsw
push
ins
dec
dec
inc
dec
xchg
das
sub
in
jns
jle
add
sbb
jne
and
iret
dec
pop
sub
out
aas
xor
cs
xor
inc
add
dec
repz
jg
clc
inc
jmp
sbb
arpl
ret
ja
jne
pop
pop
inc
pop
jbe
adc
es
bnd
push
mov
xchg
sbb
sbb
aaa
xchg
cmp
push
pop
xor
lds
dec
adc
cmp
dec
ds
push
(bad)
pop
or
rcr
or
add
adc
outs
cmp
dec
add
push
xor
int
ficomp
fcom
inc
pushf
das
ins
push
jnp
je
inc
(bad)
cmp
lds
addr16
in
aaa
inc
jl
cmp
and
push
lea
inc
in
addr16
clc
xor
sub
ss
dec
dec
ins
push
pop
bound
das
mov
jge
pop
sub
pop
or
cmp
jb
pop
pop
cmp
cmc
pop
xchg
pop
push
aaa
mov
or
jp
dec
ret
data16
adc
mov
cmp
add
adc
and
and
xor
fidivr
jne
or
jbe
add
or
inc
add
jno
(bad)
jne
jl
sub
pusha
sub
aas
jo
mov
add
inc
or
inc
cmp
pusha
or
cli
xor
push
hlt
outs
lock
mov
jle
dec
cmovge
push
jp
in
sbb
mov
pop
push
neg
adc
daa
sub
aas
add
daa
gs
mov
imul
or
scas
dec
clc
inc
add
stc
and
outs
sub
jo
jnp
dec
aam
xchg
ja
fistp
imul
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
push
xor
jnp
sub
mov
push
jb
sbb
adc
sub
out
(bad)
jge
push
or
mov
cmp
daa
rol
push
fld
cmp
pop
aad
mov
push
dec
adc
jne
pop
dec
adc
jp
push
test
dec
mov
ja
pop
lds
js
adc
mov
cmp
pop
cmps
sbb
push
or
rol
sbb
test
stos
or
xor
es
cmp
dec
push
xor
pop
sub
add
push
xor
cdq
jnp
inc
addr16
ss
inc
pushf
xor
dec
cmp
inc
push
sti
ds
ins
rcr
repnz
test
or
pusha
mov
mov
pop
dec
pop
sub
imul
mov
add
inc
xchg
and
sbb
dec
aaa
dec
add
push
icebp
dec
and
and
and
jle
jo
pop
pop
cmp
or
sub
cmp
inc
sbb
push
jb
and
add
jne
js
jnp
sbb
ins
pop
mov
fidivr
dec
les
cmp
inc
and
or
mov
in
xor
daa
mov
mov
jbe
push
pop
adc
mov
pop
inc
xchg
inc
sbb
or
cs
dec
test
jae
mov
jecxz
push
bound
ins
sbb
sub
jb
push
sub
inc
(bad)
sbb
addr16
jle
dec
sub
dec
loop
pushf
cmp
mov
add
cmp
mov
jp
ins
jl
dec
jne
sbb
push
ins
and
xchg
push
in
push
cmp
pushf
dec
fwait
pop
jp
sbb
or
sbb
xor
aas
retf
push
pop
jae
add
adc
jp
jb
outs
or
cs
cdq
sbb
inc
mov
sub
or
addr16
push
mov
add
jle
push
push
into
sub
jno
sub
add
and
push
cmp
outs
enter
imul
cmps
adc
sub
cmp
sub
cmp
nop
inc
data16
push
mov
pop
sbb
pop
and
cdq
ins
mov
inc
inc
dec
stos
jge
cmp
test
pop
sbb
movs
pusha
mov
pop
or
sub
pop
xor
pop
rol
outs
pop
cmps
cmp
cmp
mov
jle
jge
push
xchg
pop
mov
pop
mov
sub
(bad)
jo
xor
enter
adc
sub
je
jnp
pop
xor
(bad)
adc
adc
aaa
mov
pop
scas
push
inc
xor
ds
sub
dec
dec
gs
mov
loop
call
cmp
cmp
or
stc
pop
imul
sub
sub
jge
dec
stos
(bad)
fistp
cmp
add
push
mov
pop
imul
je
or
ss
sbb
jae
xchg
or
add
fimul
add
jmp
mov
call
mov
xor
call
pop
sub
add
popf
pop
ret
jae
cmp
xor
jnp
jmp
popa
add
jae
pop
dec
test
jle
or
or
fsub
sbb
or
xor
int3
gs
jb
jl
adc
fs
inc
push
pop
stos
inc
pop
add
mov
ds
adc
stos
sbb
test
je
cmp
or
push
mov
sbb
imul
cs
or
pop
jl
jp
push
retf
jne
dec
push
sbb
out
(bad)
stc
add
dec
cmp
push
stos
and
push
in
jmp
aaa
sbb
cs
ret
push
jae
mov
xchg
push
stos
arpl
nop
adc
sbb
add
dec
xchg
dec
cmp
cmps
xor
vmread
add
scas
adc
and
dec
outs
movs
inc
test
out
xor
xor
pop
dec
into
dec
jae
leave
or
jbe
imul
jnp
popa
nop/reserved
or
pop
inc
jg
pop
jle
cmp
add
and
dec
int
shl
adc
adc
xor
and
pop
push
push
test
test
add
std
sub
or
push
dec
sti
sub
mov
jno
and
push
and
ds
stos
outs
jmp
mov
js
and
push
cmp
popa
and
or
cmp
in
jge
jb
inc
lds
loopne
add
pop
push
aaa
gs
add
jg
ins
popa
imul
mov
call
jne
imul
movs
jle
adc
cmp
es
cld
pop
mov
mov
shl
dec
sbb
jbe
xor
sbb
dec
cmp
push
ds
cli
jmp
es
jns
jne
sub
cwde
push
test
fld
mov
push
and
neg
inc
daa
mov
and
(bad)
cmp
pop
mov
xlat
and
push
aas
jo
jo
pop
cwde
pop
mov
sbb
adc
push
dec
jl
inc
mov
fs
pusha
sub
xlat
inc
leave
and
jb
and
push
mov
ret
push
adc
and
pop
inc
add
js
sbb
mov
test
sbb
ins
add
ins
adc
out
jo
std
push
pusha
adc
mov
cmp
leave
xor
cmp
sbb
mov
jae
gs
jnp
jge
arpl
pop
inc
push
inc
push
fidivr
int3
outs
mov
scas
xor
add
cmp
or
bound
data16
je
sbb
push
jb
in
arpl
adc
sbb
cmp
push
out
cwde
jo
je
dec
add
mov
test
inc
xor
inc
sbb
pop
inc
xchg
jle
add
jmp
or
jb
jg
and
xor
push
xchg
jo
jae
jp
cs
dec
pop
push
or
mov
adc
movs
imul
push
xor
scas
and
sbb
jb
adc
inc
into
push
inc
xor
jo
inc
add
mov
je
inc
gs
cmp
jne
jl
add
jo
fisub
addr16
dec
out
jle
and
sbb
jp
js
or
call
sub
dec
adc
or
and
mov
ret
adc
xor
daa
and
ins
int
sub
push
ins
adc
je
mov
sbb
inc
jb
(bad)
or
xor
jb
pop
jne
mov
pop
push
pop
dec
sbb
add
add
push
adc
dec
dec
jle
sub
cli
sbb
jnp
dec
test
dec
pop
inc
mov
sbb
cdq
data16
push
into
or
ret
add
jge
ins
paddw
fmul
xor
(bad)
sub
jle
jge
pop
add
popf
jo
sbb
dec
les
adc
pop
out
pop
jle
sub
jle
pop
dec
gs
daa
test
jbe
sub
popa
sub
push
cmp
jae
or
jg
xor
cs
xor
fwait
pop
sbb
test
jb
and
and
pop
shl
mov
ja
jo
inc
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xlat
jnp
jns
jae
and
adc
out
jne
inc
hlt
adc
push
iret
adc
sbb
xor
add
and
sub
jle
mov
outs
adc
pop
loope
sbb
sbb
and
addr16
sbb
add
adc
push
xlat
pop
fstp
mov
jns
add
pop
push
bound
push
cmp
imul
jle
dec
pop
cmp
jl
push
out
jl
mov
push
push
inc
leave
je
pop
fdivr
fistp
inc
sbb
out
pop
cmp
or
ins
jo
pop
or
psrad
add
xor
pop
inc
dec
xor
sbb
dec
cmp
xchg
jbe
inc
call
dec
mov
and
pop
bound
add
dec
jae
pop
ja
jle
pop
mov
sub
xor
xor
test
xor
pop
push
push
mov
es
cmp
sub
xor
sbb
sbb
inc
fdivr
sbb
mov
dec
(bad)
cmp
cmp
fnstcw
js
das
push
shl
inc
es
inc
rcl
sbb
mov
test
push
lahf
and
ja
adc
(bad)
push
add
pop
sbb
dec
aaa
add
pop
loopne
(bad)
je
fs
outs
aaa
push
into
adc
push
xor
push
sub
sbb
popa
lea
jge
test
sub
mov
aas
dec
jl
jmp
imul
ds
pop
std
popa
mov
pop
sub
or
adc
sub
lea
fs
sbb
neg
rcr
push
(bad)
or
or
sbb
pop
pop
push
repz
push
cmp
add
mov
add
cmp
dec
les
jae
pop
dec
xor
outs
jp
or
push
leave
aas
enter
aaa
outs
sti
and
mov
mov
ins
pop
addr16
jp
inc
fld
or
xor
push
cmp
imul
imul
jle
gs
inc
les
arpl
jne
sub
pop
shl
cmp
cmp
dec
inc
shr
sbb
dec
or
and
(bad)
cmp
aad
inc
jo
push
or
xchg
pop
inc
inc
mov
or
call
push
push
add
adc
xchg
adc
clc
pop
es
fsub
pop
mov
jno
ja
push
and
or
aaa
lds
data16
int3
sbb
add
js
ins
pop
fdiv
inc
rcl
out
shl
es
pop
push
ins
fnstenv
ins
mov
push
xor
cmp
adc
jae
sub
jle
or
xchg
sbb
dec
jb
inc
(bad)
arpl
arpl
ins
push
xchg
ja
add
das
fisttp
xor
jns
iret
inc
xor
aas
fist
fist
(bad)
jge
imul
and
sub
fdivr
push
out
or
pop
jb
dec
and
push
bound
outs
push
inc
sbb
push
mov
outs
push
push
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
xlat
dec
stos
push
shr
jp
arpl
jg
div
add
cmp
cmp
adc
push
and
and
add
inc
and
xor
cli
sub
inc
sti
dec
pop
dec
dec
push
cmp
or
dec
cli
bound
jge
outs
test
inc
xlat
cs
dec
(bad)
popa
fsubr
push
popf
inc
loop
test
mov
xor
sbb
push
sbb
cwde
push
mov
mov
adc
sbb
jg
cmp
bnd
and
outs
clc
ins
dec
push
push
jo
or
gs
or
sub
imul
sbb
arpl
inc
jp
jo
adc
jne
jb
es
jg
push
scas
popa
and
sbb
mov
add
(bad)
or
jnp
inc
cmp
cmp
dec
test
enter
lods
jnp
push
stc
push
mov
dec
dec
and
adc
sbb
imul
sbb
arpl
pusha
rcl
or
push
je
push
cmp
inc
dec
inc
and
xchg
push
and
and
je
fs
js
sub
bound
jo
pop
xor
mov
ins
enter
repz
add
sbb
jecxz
jle
dec
test
sub
add
ret
mov
ret
ret
cmps
inc
xchg
xchg
mov
push
push
add
shl
(bad)
cmp
les
push
and
and
mov
and
mov
in
mov
in
xchg
add
(bad)
adc
in
sub
push
pop
sbb
out
cmp
out
adc
(bad)
adc
fadd
add
cmp
jns
xchg
xchg
repnz
xchg
repnz
sub
es
fmul
add
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
jnp
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
cwde
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
jno
sub
inc
cmp
aam
or
jnp
inc
mov
js
push
cdq
adc
pop
adc
add
push
xchg
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
jecxz
jle
dec
test
and
leave
or
retf
retf
inc
xchg
arpl
scas
cmps
es
fistp
fistp
add
repnz
push
bnd
div
jge
sbb
js
sbb
and
and
and
and
pop
push
pop
maxps
push
push
push
xor
push
scas
outs
mov
test
mov
add
loop
aas
mov
(bad)
aas
mov
sub
mov
imul
les
les
ss
ss
into
iret
jp
mov
into
into
adc
xchg
xchg
adc
xchg
xchg
(bad)
fist
pandn
(bad)
movups
jns
jns
jns
jns
xor
sbb
sbb
xor
push
push
push
xor
push
push
push
push
push
fisub
pop
push
test
xor
lods
stos
stos
jnp
stos
stos
jnp
xchg
xchg
jp
xchg
xchg
iret
iret
iret
xchg
iret
iret
iret
loope
retf
loope
fmul
jne
fwait
fwait
mov
movs
into
iret
iret
push
push
push
movs
test
push
adc
adc
adc
adc
out
xor
out
xor
out
(bad)
mov
out
(bad)
mov
mov
pop
pop
pop
dec
pop
pop
xlat
xlat
(bad)
(bad)
jmp
jo
jbe
out
(bad)
call
(bad)
call
lea
sub
sti
mov
mov
mov
sub
push
push
fdiv
push
and
and
and
(bad)
out
push
push
mov
push
push
leave
leave
leave
das
push
push
cld
jo
ja
stos
or
jns
jns
jns
jns
mov
mov
cmps
fist
pop
mov
mov
and
and
retf
adc
pop
xor
jge
cmp
cmp
cmp
cmp
sub
(bad)
sub
leave
leave
leave
add
sbb
pop
or
adc
xor
icebp
xor
xor
mov
movs
mov
mov
mov
fs
fs
cli
cli
(bad)
jb
fsub
push
outs
retf
outs
mov
adc
adc
xchg
jmp
sub
pop
rcl
rcl
xchg
xchg
fcomp
xchg
xchg
fcomp
sbb
fcmovu
sbb
and
and
(bad)
mov
lahf
fidiv
ss
xchg
div
xchg
xchg
div
mov
mov
fcmovu
scas
fcmovu
fcmovu
push
cmps
cmps
fist
adc
adc
push
xor
fwait
mov
lods
fwait
mov
cmp
fs
scas
mov
scas
scas
jne
je
pop
cmp
push
dec
dec
dec
scas
stos
test
jb
jb
enter
fnstsw
adc
jle
xchg
jnp
push
and
cld
mov
mov
mov
scas
scas
scas
pushf
cmp
dec
fwait
cmp
dec
ss
sub
xchg
dec
not
xchg
repz
test
test
test
cld
lods
test
cld
sti
cli
nop
nop
(bad)
cli
nop
nop
call
mov
int3
sbb
sbb
nop
and
das
iret
push
fnsave
pushf
or
inc
or
adc
adc
ret
pop
adc
ret
fcomp
inc
inc
inc
xor
mov
adc
cmps
add
add
je
add
add
inc
push
push
pushf
pushf
pushf
inc
mov
mov
inc
cwde
and
sub
rol
mov
shl
sub
jmp
movs
call
loope
lahf
call
jne
mov
pop
xor
xor
xor
push
push
push
xor
push
js
push
push
js
daa
daa
ds
rol
in
retf
mov
jmp
test
cld
cld
cli
add
jmp
mov
adc
out
adc
out
test
loop
jg
jg
jg
jg
into
into
jg
into
into
imul
inc
mov
inc
inc
cmp
xor
loopne
push
imul
or
or
adc
into
xchg
adc
cli
cli
cli
out
pop
mov
repnz
sahf
shl
outs
call
mov
js
mov
fdivr
inc
inc
pop
pop
ins
ins
pop
pop
outs
ins
pop
pop
int3
int3
int3
pop
int3
int3
int3
rcl
into
int3
rcl
fs
data16
repnz
div
repnz
stos
stos
repnz
stos
stos
loope
scas
stos
loope
jb
add
icebp
icebp
retf
retf
es
int3
movs
outs
daa
mov
mov
mov
mov
or
jb
daa
daa
daa
jo
cmp
push
xor
sbb
xor
test
jmp
mov
xchg
xchg
mov
daa
pop
pop
pop
(bad)
cmps
cmps
cmps
movs
movs
scas
scas
cdq
cdq
scas
scas
cdq
cdq
in
in
in
cdq
in
in
in
loope
jmp
inc
jae
jae
mov
mov
mov
test
cmp
ret
ret
cmp
ret
ret
imul
jb
div
xchg
or
or
icebp
(bad)
(bad)
cmp
(bad)
cmp
cld
std
or
lock
lock
mov
arpl
imul
iret
xor
call
push
outs
push
push
push
fs
gs
daa
sbb
sbb
push
(bad)
jmp
sub
jg
add
sub
push
push
sub
in
in
in
sub
in
in
dec
dec
jmp
inc
jae
jae
mov
cdq
cdq
aam
cdq
cdq
jae
jb
cmp
jb
ret
ret
push
ret
ret
ret
leave
cmps
xchg
xchg
into
cmps
xchg
xchg
adc
adc
push
stos
cmp
push
cli
addr16
(bad)
repnz
repnz
add
add
add
mov
mov
mov
test
test
xor
lahf
sahf
xor
sub
xor
sub
fs
sub
sbb
and
and
and
and
stc
and
pop
stc
hlt
hlt
pop
stc
hlt
hlt
pusha
pusha
fstp
frstor
fstp
inc
inc
js
and
aam
and
aam
and
shl
and
sbb
push
and
sbb
(bad)
pop
push
(bad)
(bad)
call
call
cdq
dec
dec
mov
scas
enter
add
daa
cmp
add
cmp
loopne
hlt
pop
pop
pop
hlt
pop
pop
pop
sub
sub
inc
ins
mov
data16
push
fs
push
int3
int3
int3
push
int3
int3
int3
inc
inc
inc
pop
xor
inc
ss
mov
sbb
mov
mov
mov
inc
scas
inc
inc
inc
lea
mov
jmp
jmp
fimul
sar
jmp
dec
pop
(bad)
cmovns
(bad)
cmp
push
push
push
cmp
push
mov
dec
push
mov
dec
mov
inc
inc
dec
dec
dec
inc
dec
dec
dec
add
arpl
xchg
in
pop
mov
cmc
in
mov
cmc
mov
xchg
xchg
xchg
cmp
cmp
cmp
cmp
test
loopne
(bad)
mov
rcr
cmp
cmp
cmp
inc
inc
test
push
inc
leave
leave
and
and
fwait
(bad)
into
rcr
ins
ins
ins
add
je
leave
push
push
push
sub
push
mov
cmp
mov
cmp
sub
movs
movs
out
movs
movs
dec
dec
movs
movs
dec
dec
xor
and
and
and
and
xor
and
fwait
int3
int3
int3
fwait
int3
int3
int3
xor
xor
jno
mov
hlt
hlt
js
div
js
fs
mov
jae
jae
jae
push
cmc
cmc
into
push
cmc
cmc
arpl
cmps
fsub
xchg
cmp
pop
gs
pop
pop
mov
mov
sub
add
mov
add
mov
jne
je
sub
push
sub
sub
stos
inc
inc
std
stos
inc
inc
lea
ror
push
sbb
and
and
dec
stos
stos
dec
dec
and
and
and
and
and
call
xlat
fstp
fcom
out
out
xlat
jmp
out
pop
cli
int3
int3
pop
cli
int3
int3
jb
jb
out
icebp
lds
jle
dec
jle
cld
xchg
jnp
and
and
and
and
call
jg
sbb
sbb
call
xchg
xchg
fwait
call
cmc
nop
cmc
cmc
cmc
sbb
jno
leave
leave
jae
leave
leave
cdq
cdq
cdq
leave
cdq
cdq
cdq
inc
inc
inc
adc
mov
dec
cmp
dec
dec
cmp
fs
jmp
(bad)
dec
mov
addr16
adc
mov
mov
mov
ret
xor
xor
pop
push
jns
jb
jb
stc
pop
arpl
jne
and
in
out
jnp
inc
inc
jns
inc
inc
mov
mov
mov
in
in
in
sub
in
in
jg
dec
dec
inc
inc
inc
dec
inc
inc
inc
jne
je
add
adc
or
adc
or
xor
or
xor
xchg
cwde
cwde
or
or
or
or
int3
xor
int3
int3
xor
xor
jno
mov
hlt
hlt
js
div
js
fs
mov
adc
sbb
push
adc
mov
mov
cmp
movs
movs
data16
data16
ret
data16
ret
and
mov
mov
lea
inc
inc
inc
sbb
push
inc
arpl
mov
in
mov
in
in
call
jb
jb
jb
jb
je
not
je
idiv
and
adc
out
adc
out
mov
loop
xchg
xchg
xchg
push
xchg
xchg
xchg
imul
stos
mov
mov
xor
cli
xor
cli
cli
data16
data16
inc
inc
jmp
mov
ret
mov
ret
ret
fs
jmp
(bad)
dec
ror
scas
scas
jnp
dec
dec
jl
dec
dec
cli
cli
cli
shr
pop
dec
dec
outs
dec
dec
dec
outs
inc
rcl
adc
adc
adc
xchg
and
adc
data16
jb
(bad)
dec
(bad)
(bad)
inc
ret
(bad)
inc
ret
and
(bad)
fisttp
(bad)
fistp
sub
lods
sub
sub
and
mov
lea
xor
iret
mov
dec
into
iret
dec
dec
cwde
cwde
or
or
sbb
pop
pop
sbb
pop
pop
xor
xor
xor
xor
std
cld
mov
mov
xchg
push
push
nop
xchg
push
push
fs
xor
mov
mov
adc
sbb
push
adc
mov
mov
cmp
movs
movs
data16
data16
ret
data16
ret
and
mov
mov
mov
mov
cwde
lods
in
scas
scas
ret
cli
ret
ret
gs
gs
pop
fs
pop
cwde
cwde
cmc
cmc
cmc
cwde
hlt
cmc
cmc
xchg
xchg
pusha
pusha
jmp
bound
jmp
cdq
cdq
jmp
cdq
cdq
inc
inc
inc
adc
mov
dec
cmp
dec
dec
cmp
fs
jmp
(bad)
dec
mov
addr16
adc
mov
mov
cmp
movs
movs
data16
data16
ret
data16
ret
and
mov
mov
not
imul
aam
aam
aam
adc
mov
sub
sub
and
lahf
repz
repz
stc
mov
xchg
gs
gs
cwde
cmc
cmc
cmc
mov
cmc
cmc
push
push
in
loopne
out
loopne
xor
xor
xor
xchg
xchg
cmp
daa
xor
adc
adc
rcl
loopne
mov
mov
cmp
dec
push
push
push
fstp
fstp
add
pop
in
pop
pop
in
adc
adc
push
adc
call
es
push
clc
pushf
(bad)
call
dec
inc
test
mov
mov
mov
mov
inc
mov
cld
cld
add
add
in
in
pop
cwde
lods
in
pushf
pushf
fs
gs
call
ret
ret
lahf
call
jne
mov
jbe
les
les
cdq
cdq
mov
cwde
cdq
mov
xor
stos
stos
stos
add
daa
daa
test
icebp
icebp
lock
xor
cli
cld
cld
ret
mov
jmp
xor
(bad)
add
inc
(bad)
add
cmp
sbb
and
sub
shl
shl
jno
jo
jno
jo
mov
js
jae
js
jae
xor
mov
repnz
repnz
scas
(bad)
ja
call
imul
xchg
sbb
xor
dec
(bad)
dec
test
test
leave
leave
and
and
mov
test
test
test
ret
test
ret
ret
adc
dec
dec
dec
sub
lock
sti
adc
shl
adc
shr
into
into
into
push
bswap
into
pavgusb
mov
inc
mov
in
out
aas
aas
aas
sar
aas
aas
(bad)
(bad)
(bad)
psubusb
test
test
push
push
push
fcomp
dec
dec
jbe
dec
dec
jbe
push
push
push
ja
push
push
push
push
push
push
push
push
(bad)
call
ret
pushf
ret
call
loope
call
jne
mov
fdivr
cmp
cmp
cmp
mov
mov
xor
xor
stos
stos
stos
pop
pop
scas
stos
pop
pop
jb
add
jb
out
(bad)
out
(bad)
inc
inc
inc
or
bound
dec
inc
int
xchg
xchg
push
jp
out
out
out
out
inc
add
xor
movs
movs
ret
ret
cmps
movs
ret
ret
add
inc
inc
inc
ds
inc
inc
movs
movs
or
or
movs
movs
mov
cmp
cmp
arpl
or
pushf
pushf
pushf
mov
adc
sbb
adc
push
or
sbb
add
loope
add
loope
jb
jg
stos
add
es
es
inc
sub
jmp
jmp
mov
mov
xchg
xchg
mov
add
inc
add
rcl
loope
rcl
loope
mov
out
mov
cli
cli
cli
je
(bad)
jmp
mov
outs
ja
pusha
push
push
push
imul
iret
iret
iret
push
iret
iret
iret
jp
pop
retf
jp
pop
mov
add
int3
int3
int3
inc
int3
int3
int3
add
push
push
sbb
push
push
sbb
mov
mov
xor
xchg
iret
iret
icebp
icebp
iret
iret
icebp
icebp
out
out
jmp
jmp
test
test
xchg
lods
test
xchg
inc
inc
jmp
mov
cmps
cmps
cmps
push
push
push
lds
push
in
in
in
jb
in
in
pushf
in
retf
in
retf
cli
cli
xor
ret
inc
outs
pop
test
push
daa
cwde
push
and
dec
or
xor
xor
fistp
mov
mov
rcl
imul
xor
push
shl
sbb
xor
sbb
sbb
sbb
sbb
es
inc
js
js
js
js
xchg
jge
xchg
xchg
jb
outs
outs
outs
stos
xchg
xchg
xchg
jb
cmp
add
cmp
add
inc
inc
inc
les
inc
push
push
push
bound
push
arpl
mov
mov
xchg
or
adc
aam
mov
shl
pop
ss
cli
add
add
add
add
std
cld
nop
mov
lds
xchg
iret
iret
into
fs
ins
jmp
ins
ins
jmp
retf
retf
in
fmulp
retf
pushf
pushf
pushf
rcr
sahf
mov
mov
pop
xchg
xchg
cmps
pop
xchg
xchg
into
into
into
xchg
into
into
into
ds
retf
int3
mov
jbe
push
push
push
xor
push
push
(bad)
inc
shl
ret
loop
xor
sub
ja
aas
aas
aas
cmp
aas
aas
or
ins
ins
or
ins
ins
pushf
pushf
pushf
jns
add
or
jg
or
int
xlat
cmps
lds
jnp
jnp
jnp
inc
inc
div
push
inc
jnp
pop
pop
sbb
pop
pop
sbb
fwait
call
ja
ja
ja
ja
xchg
jb
xchg
xchg
jb
dec
dec
dec
stos
mov
mov
jb
jg
inc
jg
inc
inc
push
push
cmp
lock
mov
loope
test
loope
sbb
push
rcl
jmp
jmp
jg
push
ja
jl
ja
out
push
lods
dec
in
jge
in
jge
add
add
jbe
add
add
sbb
sbb
mov
rcl
inc
inc
inc
rol
inc
or
or
cmps
pop
pop
adc
ret
push
ret
data16
(bad)
fucompp
rcr
pop
pop
pop
push
push
push
enter
scas
scas
dec
dec
jb
dec
dec
jb
push
push
push
or
adc
ds
ds
jmp
outs
push
jmp
outs
leave
leave
leave
xlat
repnz
jmp
inc
dec
ror
loopne
loopne
loopne
loopne
lock
lock
fwait
out
out
out
xchg
out
out
out
enter
mov
mov
lahf
std
mov
lock
xor
repnz
repnz
jb
lods
push
sbb
xor
out
jle
inc
call
jnp
mov
push
push
mov
ficom
fisub
and
fbld
and
ret
and
ret
mov
mov
jnp
cld
hlt
hlt
hlt
fxtract
hlt
hlt
adc
cli
cli
adc
inc
dec
aam
repz
sbb
int
sbb
push
popa
sbb
add
popa
add
add
xchg
inc
inc
adc
jmp
test
xor
lods
test
lock
inc
jmp
(bad)
(bad)
out
cmps
cmps
out
cmps
cmps
cld
cld
std
cld
cmps
mov
fsub
pop
push
mov
scas
stos
fs
or
(bad)
(bad)
mov
shr
xchg
mov
mov
iret
iret
and
and
imul
add
add
pop
pop
cli
cli
cli
or
pushf
aad
clc
outs
ret
cld
clc
outs
dec
pop
and
add
add
add
fwait
fwait
call
fstp
div
(bad)
div
das
das
div
das
das
add
add
add
add
rol
add
shr
movs
rol
add
retf
retf
stos
push
push
xor
fwait
ds
stos
aam
aam
aam
aam
fwait
call
icebp
icebp
scas
scas
icebp
icebp
scas
scas
jne
jne
jne
jne
fwait
fwait
jne
fwait
fwait
ret
ret
fwait
fwait
ret
ret
adc
loopne
loopne
loope
loopne
jg
mov
xor
jle
outs
outs
outs
xor
outs
push
push
push
cli
and
push
mov
cmps
mov
xor
jmp
or
or
and
or
cli
cli
push
movs
pop
xchg
les
xchg
les
xor
push
cmps
cmps
cmps
(bad)
cmps
cmps
cmps
imul
add
dec
push
dec
dec
dec
mov
cmp
rcl
cmp
rcl
xor
xor
mov
daa
or
into
daa
or
arpl
and
pop
cld
ret
ret
sbb
jl
jl
jl
jl
(bad)
lock
lahf
fimul
pushf
pushf
into
into
sahf
pushf
into
into
xor
mov
mov
fstp
fnsave
je
add
cmp
cmp
mov
cmp
cmp
cmp
cmp
push
popa
popa
sbb
ss
repz
not
cmps
adc
cmp
iret
repz
add
les
add
adc
add
adc
(bad)
movups
(bad)
mov
mov
mov
jle
fcmovnu
mov
sbb
sbb
sbb
mul
das
iret
push
fnsave
pushf
or
pop
inc
or
adc
adc
adc
retf
add
pushf
popf
adc
gs
(bad)
pcmpgtb
sets
hlt
cmc
cmc
aam
jmp
(bad)
sbb
cld
(bad)
sbb
inc
inc
inc
ja
pop
inc
push
push
ret
fs
ret
ret
pushf
pushf
pushf
(bad)
std
je
adc
mov
fnstenv
mov
lahf
mov
mov
push
push
(bad)
aaa
pop
push
add
jg
dec
cmp
repnz
mov
ss
ss
movs
jg
std
movs
jg
jb
jb
aad
cmc
movaps
movaps
test
jnp
ins
ins
jnp
ins
ins
mov
mov
mov
ins
imul
int3
int3
imul
std
std
enter
enter
imul
(bad)
imul
fcmovu
push
push
inc
inc
(bad)
fst
sub
xor
xor
xor
xor
aaa
xor
jmp
loopne
loopne
pop
pop
pop
xchg
xchg
lea
dec
dec
sub
dec
dec
sub
mov
mov
mov
in
in
xchg
mov
and
fdivp
hlt
cmc
shl
adc
test
ret
mov
ret
ret
lea
pushf
ins
push
or
mov
mov
add
add
fistp
xor
fwait
in
fwait
fwait
jne
jne
jne
jne
ret
jo
ret
ret
inc
inc
es
(bad)
fnstcw
push
push
int3
int3
int3
push
int3
int3
int3
cmp
leave
int3
cmp
jb
aad
aad
sub
sub
repnz
dec
jno
dec
dec
jno
sbb
jae
sbb
mov
mov
(bad)
sbb
lahf
fidiv
cmp
mov
mov
mov
mov
adc
xchg
xchg
jg
(bad)
(bad)
jle
(bad)
(bad)
test
jmp
lods
and
and
push
push
inc
adc
inc
inc
inc
sub
fsub
mov
js
rcl
mov
sbb
inc
inc
iret
iret
into
mov
xchg
xchg
cs
xchg
xchg
cmp
cmp
cmp
cmp
add
jo
ins
scas
nop
add
nop
add
add
sbb
rcl
repz
das
das
out
cmp
test
mov
xchg
out
ficomp
mov
mov
mov
pushf
jo
fistp
and
lds
or
in
rol
jge
cld
push
push
daa
or
shl
ds
mov
in
movs
bound
inc
inc
cs
inc
adc
sub
sbb
in
leave
sbb
xor
rcl
cld
cld
aad
cld
cld
bound
mov
arpl
fprem1
mov
pop
pop
pop
pushf
cmp
sbb
inc
je
lods
in
cmp
in
cmp
push
aaa
aas
stos
or
or
fwait
call
xchg
inc
inc
jne
jne
jne
jne
mov
jne
mov
inc
es
(bad)
fnstcw
jg
cmp
cmp
jecxz
test
dec
dec
dec
dec
dec
dec
mov
mov
arpl
dec
call
pop
fs
cdq
sub
pop
push
bound
push
bound
and
bound
and
dec
dec
and
dec
dec
mov
dec
dec
dec
sbb
push
iret
iret
iret
push
iret
iret
in
in
in
pop
cwde
lods
in
add
xor
xor
push
push
push
xor
push
cmp
push
push
cmp
add
pusha
pusha
pusha
and
data16
into
retf
retf
into
into
retf
retf
adc
adc
popa
push
adc
bound
bound
xlat
xlat
pop
xlat
xlat
fcomp
fsubr
cmp
xor
sub
pop
jns
adc
mov
retf
add
retf
retf
mov
stc
mov
mov
out
cmp
out
out
cmp
test
test
test
test
inc
inc
cmp
push
inc
adc
int3
int3
sbb
int
sbb
pop
pop
sbb
pop
pop
mov
mov
mov
or
or
or
add
pushf
pushf
pushf
add
or
xor
xchg
add
xchg
xchg
add
stos
stos
stos
add
test
(bad)
lar
pusha
pusha
pusha
jle
pusha
pusha
test
hlt
push
push
hlt
hlt
in
in
in
and
cmp
cmp
ret
cwde
imul
imul
fsubr
add
fisttp
sub
cmp
cmp
cmp
(bad)
fidiv
cs
je
shl
addr16
std
std
addr16
std
std
(bad)
fisubr
lahf
ficom
stos
stos
add
pop
add
pop
mov
mov
add
or
or
pushf
pushf
mov
mov
aaa
stos
lahf
fisubr
pushf
cmps
movs
pushf
pushf
push
push
push
pushf
push
push
push
imul
add
pusha
jp
pusha
pusha
jmp
cmc
rcl
cmc
cmc
imul
into
iret
jg
(bad)
iret
mov
mov
fadd
add
mov
sti
loope
out
dec
or
jae
jb
jae
push
push
jae
push
push
mov
mov
aas
cld
cld
call
add
mov
add
add
mov
mul
in
xchg
push
sbb
pusha
pusha
sbb
pusha
pusha
in
in
in
pusha
in
in
in
xchg
inc
inc
jae
jae
mov
arpl
mov
bound
xchg
add
xchg
cmp
mov
mov
mov
int3
into
into
into
int3
into
into
into
into
into
iret
pop
mov
inc
inc
cmp
inc
inc
cmp
xor
xor
xor
xor
xchg
loopne
or
push
push
nop
nop
or
xchg
nop
or
mov
or
mov
and
and
mov
mov
mov
in
in
inc
je
adc
or
fs
loop
inc
loop
loop
mov
(bad)
fwait
mov
(bad)
daa
daa
daa
jb
mov
mov
jmp
shl
mov
inc
inc
es
inc
jg
mov
pop
jno
call
in
in
in
call
xchg
in
xchg
jae
mov
bound
std
bound
mov
mov
mov
dec
dec
mov
dec
dec
(bad)
fisttp
(bad)
pop
pop
(bad)
pop
pop
adc
jns
jns
js
jns
mov
add
or
sub
or
sub
mov
mov
sub
lahf
fiadd
out
lahf
popf
out
out
push
push
push
out
push
push
push
cmp
push
push
cmp
add
pusha
pusha
pusha
and
data16
into
retf
retf
into
into
retf
retf
adc
adc
add
stos
stos
stos
pop
stos
stos
stos
push
addr16
inc
push
addr16
inc
push
push
push
cmp
int
mov
pop
cmp
push
cmp
js
fs
test
test
test
ret
lods
test
ret
inc
inc
jmp
aas
aas
fs
mov
xchg
ror
jbe
sub
xor
dec
dec
dec
(bad)
ror
(bad)
cli
cli
cli
les
outs
xchg
outs
and
adc
mov
mov
in
mov
ss
leave
ss
inc
inc
ss
inc
inc
and
and
push
pusha
and
and
xchg
xchg
and
xchg
xchg
push
push
push
xchg
push
push
push
xchg
xchg
push
push
xchg
xchg
add
pusha
pusha
pusha
jp
pusha
pusha
jmp
cmc
rcl
cmc
cmc
inc
inc
inc
add
add
inc
inc
bound
inc
jmp
xchg
xchg
in
int
xchg
inc
inc
inc
dec
cmc
jae
inc
icebp
sbb
icebp
sbb
outs
outs
sbb
mov
xchg
xchg
xchg
mov
push
xor
in
xor
add
(bad)
fdiv
mov
xchg
cmps
sbb
sbb
push
push
mov
pop
push
scas
scas
pop
pop
push
push
pop
pop
push
push
gs
gs
pop
fs
pop
cwde
cwde
cmc
cmc
cmc
in
cmc
cmc
push
push
out
out
hlt
hlt
in
out
hlt
hlt
sbb
div
sbb
mov
mov
mov
out
out
sbb
sbb
adc
cmp
fwait
fwait
call
sub
jbe
inc
and
inc
adc
adc
pop
test
popf
pop
mov
sub
sbb
mov
mov
adc
sub
sub
dec
fild
dec
add
mov
cmp
inc
lahf
xchg
mov
(bad)
(bad)
jmp
test
int3
leave
add
add
and
(bad)
push
pusha
and
and
xchg
xchg
and
xchg
xchg
gs
gs
movs
pusha
movs
movs
fcomp
jne
jne
mov
icebp
retf
retf
repz
retf
retf
mov
leave
retf
mov
xor
xor
loope
xor
loope
xor
push
mov
push
push
xor
in
test
jne
je
add
(bad)
movs
movs
mov
je
daa
xor
cmc
inc
div
cmc
jecxz
clc
clc
in
clc
clc
add
(bad)
fdiv
daa
nop
jae
cld
xchg
jmp
sbb
sbb
rcr
daa
test
jp
out
nop
sub
xchg
nop
sub
sub
sub
sub
xor
xor
xor
loope
xor
loope
mov
sub
sub
or
and
or
push
or
push
std
std
std
push
std
std
std
(bad)
(bad)
mov
cld
cld
gs
pop
add
fmul
test
bound
dec
xlat
xlat
adc
xlat
mov
mov
rcl
loop
sub
loop
sub
jne
jne
jne
jne
fs
and
div
cmp
jne
movs
(bad)
mov
jno
pop
aaa
jno
push
push
push
push
push
push
push
mov
mov
fcomp
fsubr
fsub
inc
jecxz
sub
mov
fst
sbb
sbb
test
test
test
test
sub
inc
inc
jmp
mov
push
push
mov
adc
ins
ins
push
ins
ins
ins
inc
in
leave
inc
in
leave
ss
stos
xchg
iret
inc
test
sahf
repz
xchg
xchg
into
iret
adc
cld
cld
dec
dec
(bad)
cld
dec
dec
(bad)
(bad)
(bad)
test
or
push
wbinvd
or
mov
push
ret
(bad)
push
adc
inc
xor
aas
jo
sub
jo
sub
rcl
sub
rcl
push
push
iret
iret
iret
pop
into
iret
iret
aas
aas
jbe
pop
pop
jbe
pop
pop
in
in
in
pop
in
in
in
and
and
pusha
and
rcl
adc
shr
out
and
and
test
test
mov
mov
out
xor
out
pop
pop
out
pop
pop
mov
mov
mov
or
or
or
sbb
lods
lods
lods
fwait
test
cdq
lods
cdq
cdq
cdq
fs
or
pop
pop
or
pop
pop
stos
stos
stos
ret
stos
daa
daa
daa
mov
daa
daa
daa
adc
pop
and
loope
mov
jno
ins
lds
in
mov
cmp
addr16
addr16
sub
(bad)
(bad)
(bad)
dec
inc
inc
xchg
xchg
inc
inc
xchg
xchg
ret
ret
ret
ret
cld
mul
cld
mov
jmp
or
in
mov
inc
out
shr
xor
ret
cmp
sbb
sbb
dec
int
int
pop
enter
jmp
loopne
loopne
pop
pop
pop
adc
dec
(bad)
mov
cld
cld
std
mov
sub
clc
sub
sub
mov
inc
inc
jb
jb
fucomp
ror
push
jle
iret
push
jle
jl
jnp
and
jp
and
mov
mov
sub
test
cli
fcmovbe
aam
xchg
mov
mov
xchg
leave
mov
stos
mov
loop
fcmovu
fcmovu
fcmovu
fidivr
mov
add
jmp
inc
inc
inc
int3
inc
inc
inc
pushf
nop
xchg
xchg
fwait
nop
xchg
xchg
push
push
push
inc
or
sbb
std
cmp
es
sbb
fwait
fwait
js
sahf
fwait
js
inc
inc
inc
inc
inc
xchg
mov
xor
lock
lock
xor
xor
xor
jecxz
xor
jecxz
push
push
loope
push
push
fstp
fsub
popf
fsubr
imul
cli
rol
cli
rol
jb
mov
push
jle
inc
push
jle
repz
and
jns
and
push
push
push
and
push
push
push
push
push
push
push
jb
add
mov
addr16
addr16
mov
std
mov
add
add
xor
adc
outs
cmp
hlt
out
cwde
hlt
out
sub
jmp
or
dec
push
mov
xor
dec
add
push
push
xchg
repz
repz
repz
and
and
and
and
and
inc
(bad)
(bad)
jmp
lods
xor
pusha
xor
pusha
pusha
sub
sub
xchg
jmp
imul
stos
stos
pop
pop
stos
stos
pop
pop
cld
cld
std
cwde
cmp
and
es
mov
pop
pop
add
jg
dec
push
nop
jbe
mov
repnz
dec
xchg
repnz
dec
gs
mov
mov
push
add
jb
fucomp
ror
jbe
(bad)
jle
jp
jnp
push
(bad)
(bad)
or
setns
cwde
xchg
xchg
xchg
mov
jb
xor
jb
xor
scas
scas
xor
inc
mov
pushf
mov
shl
rcl
cmc
rcl
shl
inc
inc
sti
sti
sti
mov
add
mov
inc
inc
add
lahf
lahf
sub
fsubr
jg
sub
push
push
push
out
(bad)
push
jl
cmp
retf
cwde
add
cmp
cmp
or
jecxz
cld
mov
adc
sub
cmp
sub
daa
daa
test
test
test
mov
or
shl
clc
clc
clc
repz
clc
clc
push
push
push
ins
and
push
inc
inc
add
add
and
and
and
ret
and
inc
(bad)
(bad)
mov
add
vpaddb
std
and
into
clc
into
into
into
sahf
mov
mov
ja
jns
retf
sub
retf
sub
je
das
fwait
je
je
je
je
je
cmp
je
cmp
mov
mov
pop
pop
pop
pop
xor
xor
mov
push
cwde
cwde
dec
dec
call
dec
push
push
push
mov
mov
mov
ins
ins
ins
or
ins
and
xchg
xchg
pop
mov
sbb
sbb
sbb
ficomp
rcl
sar
jae
mov
jae
mov
adc
mov
cld
pop
adc
mov
adc
mov
mov
cmps
cmps
(bad)
cmps
cmps
cmps
inc
inc
inc
xor
push
inc
jmp
pfadd
and
and
xchg
and
xchg
xchg
adc
jns
jns
js
jns
js
mov
sbb
push
push
sbb
push
test
test
test
retf
push
push
stos
stos
jnp
stos
stos
jnp
mov
mov
sub
lods
in
add
mov
sti
mov
jp
iret
iret
iret
jp
iret
iret
rcl
int
rcl
test
push
push
imul
xchg
cdq
cld
cld
cld
and
and
pusha
and
xor
xor
jne
je
leave
ss
cmp
xchg
cmp
cmp
stos
addr16
jb
stc
pop
arpl
sbb
cmp
jnp
outs
outs
outs
xchg
outs
outs
outs
sub
sub
push
dec
pop
push
push
and
jns
xchg
xchg
js
xchg
xchg
test
jmp
repnz
adc
not
jb
cdq
pop
icebp
(bad)
fidivr
jle
fidivr
jle
data16
push
cdq
cdq
jp
cdq
cdq
push
push
call
push
or
push
push
or
iret
iret
push
iret
iret
iret
loope
retf
loope
fmul
jne
sahf
sahf
stos
stos
fcmovu
fisubr
movs
(bad)
movs
movs
mov
add
mov
sbb
dec
dec
sbb
xor
xor
das
ja
test
test
sbb
push
daa
sbb
leave
leave
leave
xor
or
cld
out
fdivr
out
addr16
cmp
push
int
sbb
in
stos
mov
mov
mov
mov
adc
jp
adc
jp
push
push
gs
out
jle
and
push
inc
stc
aas
cwde
push
push
push
cwde
push
push
push
fs
pop
es
sub
es
inc
mov
inc
mov
mov
fcmovb
add
xlat
add
pushf
mov
sub
into
sub
sub
inc
push
es
inc
xchg
xchg
kandnb
dec
cmp
lea
sbb
sbb
sbb
sbb
push
daa
daa
fcomp
fcom
sub
sub
push
push
fst
in
in
in
push
in
in
in
test
test
div
mov
(bad)
jecxz
popa
shl
inc
inc
inc
jb
lahf
lahf
jne
lahf
lahf
adc
adc
inc
xchg
aam
jmp
mov
cmp
das
mov
das
das
and
and
and
and
and
inc
(bad)
fyl2xp1
es
sub
daa
sub
sub
ret
sub
lea
jo
(bad)
(bad)
(bad)
retf
retf
mov
and
cmp
and
cmp
fwait
fwait
call
sbb
pushf
jbe
sub
daa
daa
daa
(bad)
add
test
sbb
jmp
add
inc
add
add
iret
sbb
iret
iret
mov
into
iret
mov
cwde
cwde
or
or
sbb
sbb
sbb
sbb
jecxz
sbb
jecxz
adc
adc
adc
adc
lock
lock
sbb
sbb
out
out
je
fptan
repnz
repnz
xchg
repnz
xchg
push
not
push
push
pushf
pushf
pushf
add
pushf
inc
inc
aaa
ss
xor
mov
inc
inc
inc
mov
inc
inc
mov
mov
mov
mov
clc
clc
daa
daa
jb
es
jb
sub
jae
sub
mov
(bad)
mov
popf
popf
popf
cli
xor
sub
xor
sub
push
ret
std
adc
scas
xchg
add
(bad)
lds
mov
lods
lods
lods
xor
mov
mov
fwait
cdq
cdq
cwde
rol
cwde
jns
jns
jns
jns
jb
loope
jb
loope
pushf
pushf
adc
cmp
adc
cmps
sbb
rep
sbb
repz
mov
or
imul
pop
pop
pop
pop
pop
pop
pop
loope
sbb
loope
jmp
push
push
push
push
icebp
icebp
icebp
push
push
fstp
mov
cmp
mov
xor
mov
xlat
add
xlat
xlat
fwait
and
cli
cli
cli
adc
ja
ins
scas
outs
es
scas
outs
sahf
(bad)
je
xchg
leave
leave
xchg
leave
leave
xchg
xchg
int3
leave
xchg
xchg
lea
retf
retf
retf
mov
add
test
xchg
repnz
jne
test
test
ja
inc
inc
adc
adc
mov
mov
ficom
push
lea
pushf
xor
xchg
imul
hlt
hlt
(bad)
hlt
hlt
hlt
fcmovu
lock
fcmovu
aaa
ss
ss
pop
push
cs
push
push
cmp
cmp
cmp
cmp
outs
addr16
addr16
mov
div
sbb
fdivr
ret
repz
out
xchg
out
jne
je
add
loopne
jmp
loopne
jmp
jp
jmp
jp
and
jp
and
cmp
and
cmp
xor
cmp
cmp
popa
mov
movs
movs
aam
movs
scas
scas
scas
sub
dec
dec
pushf
pushf
pushf
(bad)
ror
(bad)
ror
mov
mov
daa
mov
mov
test
gs
add
scas
scas
adc
jne
jne
jne
jne
loope
jne
loope
inc
es
(bad)
fnstcw
es
out
test
rol
rol
rcl
nop
nop
(bad)
adc
out
stos
(bad)
das
and
pop
cmp
neg
sub
cmps
fcomp
pop
cmps
fcomp
(bad)
(bad)
(bad)
ficomp
(bad)
pop
pop
mov
dec
dec
dec
push
push
data16
jns
data16
out
out
jb
out
mov
mov
push
sub
cli
mov
dec
push
retf
in
adc
push
push
push
call
scas
pop
cmp
clc
(bad)
clc
(bad)
std
std
cld
push
mov
jns
jmp
jns
jmp
push
push
fisub
push
iret
iret
iret
jno
iret
iret
inc
jmp
mov
mov
es
nop
in
iret
nop
pop
pop
adc
dec
dec
dec
dec
dec
dec
dec
dec
jne
jne
jne
jne
dec
ja
dec
dec
xor
mov
adc
mov
mov
xlat
ret
hlt
ror
sub
mov
mov
pushf
pushf
inc
inc
cmps
cmps
inc
inc
cmps
cmps
mov
mov
sub
xchg
xchg
icebp
jecxz
lock
jecxz
push
push
push
movs
icebp
adc
add
in
adc
outs
in
adc
cli
cli
cli
(bad)
jno
jmp
(bad)
outs
std
(bad)
(bad)
outs
call
jle
jle
jle
jle
xchg
jg
xchg
xchg
add
xchg
xchg
add
xchg
xchg
(bad)
stc
nop
pop
dec
dec
dec
dec
dec
mov
mov
rcl
xchg
rcl
aas
push
mov
cmp
mov
leave
leave
push
cmc
lods
pop
jmp
mov
or
ds
in
in
ds
in
in
rcl
call
fadd
inc
ins
mov
xor
inc
inc
inc
xor
inc
inc
inc
inc
aad
push
inc
arpl
test
mov
stos
stos
(bad)
push
stos
(bad)
lar
pusha
pusha
pusha
push
popa
pusha
pusha
scas
scas
pop
pop
in
in
pop
pop
in
in
adc
adc
adc
adc
in
in
lahf
cwde
lods
in
xchg
xchg
je
mov
je
mov
out
out
jo
out
out
jo
test
test
test
test
mov
mov
out
xor
out
pop
pop
out
pop
pop
mov
mov
mov
or
or
or
nop
nop
mov
cld
mov
rcl
rcl
ss
(bad)
ss
add
(bad)
loopne
mov
nop
int3
fwait
fs
clc
push
push
push
cmp
ret
sar
mov
addr16
shl
sbb
sbb
sbb
jmp
and
in
lea
and
cli
cli
add
mov
cmp
outs
mov
dec
push
and
push
xor
adc
je
xchg
xchg
xchg
pop
xchg
xchg
xchg
fsub
xor
fbld
xor
scas
scas
scas
push
stos
rcr
sbb
lds
sbb
sbb
sbb
sbb
push
sbb
push
inc
inc
inc
jnp
push
inc
aas
aas
gs
adc
cld
xchg
xchg
std
std
std
xchg
std
std
std
xor
xor
jno
div
mov
fwait
mov
sbb
adc
adc
sub
inc
inc
jae
jae
mov
jg
jg
jg
jg
(bad)
jg
movsx
sbb
sbb
mov
imul
std
cld
clc
js
cld
ss
ss
mov
lea
sub
lock
test
inc
inc
addr16
inc
inc
push
push
push
aad
pop
push
arpl
cmps
test
test
call
cmp
cwde
cwde
cmc
cmc
cmc
test
cmc
cmc
push
push
jecxz
in
in
loope
in
in
jecxz
out
in
jecxz
out
out
out
loop
out
out
lock
lock
sbb
sbb
out
out
hlt
fcomp
lock
lock
ret
ret
ret
lods
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
aaa
ss
xor
jge
inc
inc
inc
cmp
jno
data16
jno
vpsllw
icebp
icebp
pushf
pushf
pushf
sub
or
daa
xor
mov
cmc
jl
jl
jl
jl
std
cld
call
(bad)
fcmovnu
scas
scas
fcmovu
scas
scas
iret
iret
iret
scas
iret
iret
iret
dec
dec
retf
dec
fcomp
mov
jne
pop
add
sub
add
sub
jecxz
sub
jecxz
add
add
add
add
loope
add
loope
xor
(bad)
jmp
(bad)
(bad)
(bad)
cli
cli
and
div
div
mov
pop
pop
pop
rcr
pop
inc
lods
lods
lods
inc
lods
lods
lods
ss
std
leave
(bad)
mul
push
repz
jb
xchg
clc
lea
jb
icebp
icebp
jb
icebp
icebp
push
push
push
and
push
fcomp
adc
ret
adc
ret
ffreep
(bad)
fisttp
pandn
(bad)
movups
jns
jns
js
jns
jnp
mov
adc
test
gs
add
lods
scas
adc
push
push
push
adc
push
cmp
push
push
cmp
add
pusha
pusha
pusha
or
pusha
out
out
(bad)
retf
retf
(bad)
retf
retf
xor
xor
xor
xor
xchg
xchg
xor
xchg
xchg
iret
iret
iret
xchg
iret
iret
iret
loope
retf
loope
fmul
jne
pop
pop
and
leave
leave
enter
enter
in
dec
dec
dec
push
ror
mov
arpl
rcr
pop
test
sbb
push
push
push
push
loope
push
loope
fcom
push
sub
mov
add
push
cmp
lock
adc
adc
push
push
adc
push
inc
inc
jae
jae
mov
imul
cmp
ins
imul
or
jno
icebp
(bad)
(bad)
lock
(bad)
les
in
test
test
inc
adc
sbb
sbb
mov
ficomp
fucom
out
fucom
out
pop
cmp
jecxz
mov
mov
fs
inc
rcl
shl
mov
jne
mov
jmp
jmp
adc
in
cld
mov
cli
cld
mov
sbb
push
jo
jo
jo
(bad)
pop
mov
pusha
pusha
pop
xchg
add
mov
xchg
xchg
xor
xor
adc
test
cmp
mov
add
fstp
push
fcmovnu
(bad)
sub
test
adc
push
popa
add
mov
mov
jae
mov
mov
into
into
mov
into
into
movs
movs
retf
into
movs
movs
inc
inc
mov
inc
inc
jge
pusha
pusha
repz
repz
xchg
div
xchg
xchg
fcomp
add
add
std
std
std
fcmovnu
sbb
das
das
sbb
das
das
mov
sub
out
out
mov
out
out
(bad)
fidivr
lahf
fidiv
mov
mov
mov
movs
movs
scas
movs
movs
movs
scas
push
pop
pop
test
pop
pop
jb
jb
in
fmulp
stc
data16
stc
data16
cmp
ss
ss
pop
ss
pop
fstp
xchg
xchg
xchg
fst
test
gs
fs
in
in
in
hlt
es
in
xor
xor
and
xor
call
pushf
pushf
pushf
dec
xchg
je
(bad)
cmp
jbe
cmp
xor
out
in
imul
imul
or
xchg
div
div
(bad)
jb
mov
dec
dec
mov
adc
inc
mov
lea
(bad)
(bad)
(bad)
lods
pop
or
stos
pop
or
inc
inc
inc
jo
fsub
push
into
sbb
push
into
sbb
xchg
adc
push
mov
push
push
inc
inc
push
push
inc
inc
pop
pop
pop
inc
pop
pop
pop
inc
inc
inc
xor
inc
push
push
mov
mov
je
imul
push
pop
pop
pop
jb
mov
mov
adc
in
cld
xchg
dec
cli
cld
xchg
dec
adc
dec
dec
jnp
jo
jnp
jo
js
jne
js
mov
pop
cmp
cmp
repnz
push
push
arpl
adc
and
mov
and
sub
in
push
push
leave
leave
leave
xchg
inc
mov
into
mov
or
aaa
or
test
test
dec
dec
mov
jle
jg
pop
xchg
mov
jne
jne
jne
xchg
jo
xchg
xchg
inc
inc
es
(bad)
fyl2xp1
stc
pop
pop
rcl
rcr
jo
rcl
push
not
push
ss
mov
in
mov
pushf
pushf
pop
xor
scas
mov
enter
lods
push
cmps
xor
call
add
test
pop
pop
es
pop
pop
scas
inc
cmps
cmps
test
cmps
cmps
jb
jb
inc
lahf
int
cdq
jle
push
cdq
jle
rol
shl
xor
shl
xor
(bad)
getsec
xor
por
loopne
loopne
pop
pop
pop
push
push
add
push
push
add
push
push
cdq
cdq
cdq
push
cdq
cdq
cdq
push
push
or
repnz
repnz
stos
stos
repnz
stos
stos
loope
scas
stos
loope
jb
add
xor
xor
xor
cmp
daa
daa
imul
xchg
xchg
xchg
pusha
pusha
inc
inc
in
in
inc
inc
in
in
mov
mov
mov
mov
cmp
scas
scas
inc
inc
scas
scas
inc
inc
add
push
inc
add
ror
(bad)
daa
daa
es
popa
es
es
maxps
scas
scas
popa
dec
adc
push
lds
mov
inc
and
and
and
cmp
cmp
mov
dec
pop
pop
dec
dec
pop
pop
mov
push
jecxz
loop
dec
mov
ror
or
push
xchg
pop
push
xchg
pop
ss
ja
fdiv
popa
mov
test
inc
sbb
inc
mov
mov
mov
push
push
push
mov
cmp
push
cmp
add
pusha
pusha
pusha
add
pusha
outs
outs
(bad)
jmp
(bad)
jmp
inc
inc
inc
jecxz
push
inc
dec
dec
dec
bound
dec
scas
int
test
jb
or
adc
adc
jle
adc
jle
aam
jnp
jno
jp
jno
test
test
lods
pop
pop
push
(bad)
(bad)
pop
push
(bad)
(bad)
data16
pushf
pushf
pushfw
pushf
pushf
ja
test
push
test
test
and
test
and
sbb
sbb
dec
cli
mov
inc
push
push
loop
mov
in
mov
add
push
xchg
shl
nop
enter
mov
add
dec
mov
adc
sbb
push
push
div
movs
movs
cmc
mul
mov
cwde
arpl
mov
jb
aad
jb
aad
scas
scas
shl
xchg
dec
jge
test
lds
lahf
hlt
sub
imul
fs
adc
and
xor
and
mov
mov
xchg
adc
xchg
jmp
cmc
cmc
jmp
cmp
jmp
cmp
shl
jne
jne
jne
ds
jno
ds
mov
inc
inc
mov
mov
push
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
lock
mov
cmp
push
mov
loopne
mov
loopne
mov
push
jecxz
loop
sti
stos
loop
bound
bound
adc
xlat
xlat
adc
mov
aas
jns
xor
jns
jle
mov
in
pop
in
in
in
test
test
add
stos
and
stos
stos
push
push
push
jno
adc
push
adc
cmp
int3
jmp
cmp
inc
inc
out
fsub
xor
cmp
sbb
mov
imul
fstp
fstp
or
pextrw
pextrw
imul
push
push
push
sar
rol
sbb
sar
sbb
(bad)
push
(bad)
sti
sti
jecxz
dec
dec
loop
dec
dec
add
add
add
call
sahf
stc
stc
lahf
sahf
stc
stc
stos
stos
test
mov
mov
ret
ret
fcomp
mov
inc
inc
lahf
lahf
in
dec
dec
out
dec
dec
mov
xor
xor
xor
xor
jne
mov
inc
jb
into
into
jb
into
into
and
and
pop
and
loopne
shl
loopne
add
shr
add
rcl
adc
lahf
popa
add
ins
jae
push
cmps
test
hlt
mov
mov
mov
mov
mov
sub
retf
retf
cmp
retf
jns
ds
jns
push
push
js
push
push
jecxz
sti
push
jecxz
sti
ins
ins
jecxz
ins
ins
inc
inc
imul
imul
inc
cmps
cmps
test
test
mov
(bad)
fisubr
stos
lahf
fisub
daa
rcl
jbe
rcl
jbe
iret
iret
iret
jbe
iret
iret
xor
xor
xor
xor
shl
xor
rol
add
aas
aas
adc
aas
aas
div
pop
pop
addr16
popf
pushf
jns
fcomp
push
push
mov
mov
mov
in
or
fisubr
sub
dec
addr16
dec
(bad)
sub
dec
jne
jne
and
jne
and
ret
ret
and
inc
(bad)
fldl2t
es
repz
test
imul
mov
sub
sub
adc
ret
ret
adc
ret
ret
xor
xor
je
or
or
or
or
daa
add
add
hlt
pop
call
pop
inc
sub
pushf
pushf
dec
pushf
pushf
pushf
xchg
fwait
call
fstp
fdivr
fcomp
sbb
cmps
sbb
sbb
cli
and
je
shl
cmps
pushf
mov
cmps
pushf
mov
ins
inc
mov
inc
inc
mov
inc
inc
fstp
fld
fstp
(bad)
psubusb
(bad)
(bad)
jb
mov
fimul
jne
movs
movs
push
push
push
movs
push
push
push
jne
je
add
jmp
std
jmp
std
std
and
and
adc
gs
gs
(bad)
fs
fldenv
daa
daa
inc
rol
gs
out
aam
sub
or
mov
or
xchg
xchg
(bad)
xchg
xchg
lea
inc
inc
inc
mov
xchg
nop
mov
int
inc
add
sbb
sub
ss
es
push
test
in
lahf
pop
repz
ret
ret
ret
xchg
and
push
push
push
xor
push
div
add
(bad)
les
add
(bad)
in
cwde
(bad)
(bad)
in
cwde
jbe
in
cwde
fs
fs
fdivp
stos
lahf
ficom
int3
int3
dec
dec
into
int3
dec
dec
add
add
out
inc
add
imul
imul
lds
(bad)
leave
leave
lods
repnz
mov
push
pop
or
cdq
xchg
fcmovu
fidivr
mov
fidiv
fdiv
fcomp
fcom
pop
ins
ins
pop
pop
adc
adc
adc
adc
movhps
(bad)
cmovno
jae
jmp
mov
pop
pop
stos
stos
and
or
or
loope
clc
clc
clc
loope
clc
clc
fs
adc
mov
pop
pop
mov
inc
push
inc
inc
inc
ds
ds
(bad)
aas
inc
(bad)
jbe
jo
jo
jo
jo
mov
mov
das
cdq
cdq
cdq
into
into
iret
adc
mov
pop
sub
sub
gs
cdq
mov
mov
adc
sbb
push
adc
mov
mov
mov
mov
mov
adc
xchg
xchg
lock
les
(bad)
les
push
les
push
xchg
fcomp
(bad)
fbstp
and
(bad)
test
test
add
add
pop
test
pop
pop
pop
leave
pop
pop
pop
fcomp
stos
stos
leave
leave
leave
mov
xchg
cmp
or
or
jp
adc
xlat
xlat
pop
pop
pop
xlat
pop
pop
pop
fwait
fwait
call
dec
dec
fcmovu
dec
dec
fcmovu
(bad)
psubusb
(bad)
(bad)
ror
(bad)
ror
iret
iret
ror
iret
iret
jecxz
push
or
jecxz
or
adc
out
out
out
out
push
retf
retf
jae
jb
pushf
ss
das
das
push
das
das
das
adc
dec
dec
adc
lea
adc
push
dec
sub
cwde
xchg
test
jl
mov
jl
jg
jl
jg
(bad)
fsubrp
stos
lahf
fidivr
ds
cmc
ds
xor
xor
xor
shl
xor
rcr
movs
or
or
or
cmp
or
cmp
int3
int3
int3
cmp
int3
int3
fwait
fwait
call
mov
mov
mov
ds
ds
outs
outs
jne
outs
outs
jmp
jmp
jbe
sub
dec
push
ror
(bad)
(bad)
(bad)
js
(bad)
inc
ret
(bad)
inc
ret
and
(bad)
fbstp
(bad)
fcomip
not
adc
aad
adc
aad
test
movs
movs
cmps
cmps
cmps
movs
cmps
cmps
(bad)
(bad)
jmp
loope
jmp
loope
jb
jg
mov
aaa
aaa
(bad)
fbstp
(bad)
fbld
movs
inc
inc
(bad)
fnstcw
mov
add
leave
leave
add
add
inc
inc
add
sub
fs
fcmovnu
arpl
fisttp
sbb
adc
xor
popa
xor
pop
pop
int3
int3
int3
pop
int3
int3
int3
into
into
iret
pop
mov
or
mov
mov
test
call
jecxz
xchg
or
loope
or
xor
pop
pop
pop
jne
pop
pop
mov
lods
lods
fwait
fwait
adc
adc
push
adc
rcl
sbb
rcl
sbb
addr16
jmp
jmp
xlat
mov
mov
dec
out
es
dec
dec
push
push
push
dec
push
push
push
mov
stc
mov
movs
movs
add
adc
add
add
or
rcl
rcl
rcl
test
mov
inc
mov
arpl
fisttp
sahf
fidiv
pop
repnz
jg
xchg
xchg
jg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
bound
mov
mov
jae
mov
je
inc
add
add
inc
push
push
jmp
jmp
das
and
dec
aaa
ins
cli
dec
int3
mov
cli
xchg
pop
push
push
push
push
push
dec
jns
push
mov
mov
push
loope
push
inc
inc
push
out
fsub
push
add
not
sbb
cdq
fstp
in
push
cld
fsubr
test
icebp
icebp
mov
icebp
icebp
rcl
imul
xor
push
shl
sbb
xor
sbb
sbb
sbb
sbb
rol
js
inc
js
js
stc
stc
js
stc
stc
mov
mov
cwde
cwde
sbb
cwde
cwde
sbb
pop
pop
sbb
pop
pop
ret
movs
cmp
pop
pop
pop
(bad)
fistp
pop
retf
jp
retf
std
xchg
inc
inc
inc
sub
sbb
aas
add
frstor
movs
and
fmulp
leave
(bad)
pop
pop
pop
ficom
pop
pop
inc
inc
inc
xor
inc
push
push
mov
mov
cmc
cmc
dec
dec
mov
mov
jnp
add
cmps
cmps
mov
pop
(bad)
fnstsw
into
into
fmul
into
into
mov
clc
mov
push
addr16
cld
retf
outs
dec
cld
retf
outs
dec
sub
pop
pop
ds
pop
pop
rcl
pop
pop
rcl
mov
mov
movs
movs
scas
push
pop
pop
test
pop
pop
jb
jb
lods
push
sbb
data16
out
jle
ss
jnp
mov
imul
mov
ds
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
xchg
nop
push
push
xchg
nop
push
push
cs
push
sub
push
push
xlat
xlat
push
push
xlat
xlat
aas
aas
aam
aas
aas
jbe
jbe
jbe
jbe
xor
out
jno
addr16
xchg
cmp
jnp
push
push
push
sbb
push
push
lea
(bad)
jp
jb
or
enter
enter
adc
cmp
cmp
cmp
cmp
jns
cmp
jns
pop
jns
pop
pop
repnz
pop
repnz
pop
pop
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jbe
jbe
jns
jns
imul
and
and
retf
retf
hlt
cmc
retf
retf
into
into
iret
inc
and
jmp
xor
jmp
shl
push
aad
lea
dec
inc
xchg
dec
pusha
mov
dec
pusha
mov
adc
adc
fs
adc
jbe
ja
scas
xor
sub
push
sub
sub
lods
inc
inc
into
lods
inc
inc
mov
imul
push
out
not
mov
dec
push
imul
hlt
dec
hlt
hlt
hlt
cli
xchg
cli
cli
std
xchg
cli
cli
scas
scas
scas
das
jg
repz
and
inc
iret
clc
rcr
gs
gs
icebp
gs
icebp
(bad)
ficomp
int3
int3
fcmovne
int3
int3
push
dec
mov
push
idiv
int
mov
ret
cmp
imul
inc
cmp
inc
inc
sub
inc
inc
sub
inc
inc
inc
jl
add
push
push
push
fs
push
push
jmp
mov
mov
mov
cmp
test
jo
xchg
jo
out
out
out
xor
stos
out
xor
xor
jns
sahf
jns
jmp
jmp
push
jnp
daa
and
mov
and
stos
repz
mov
mov
dec
dec
hlt
cmc
dec
dec
hlt
cmc
cmp
mov
push
dec
xchg
add
cmp
add
loopne
add
(bad)
popf
add
outs
push
add
cli
sub
add
xlat
add
adc
add
inc
scas
add
xor
lock
add
add
retf
add
add
les
add
nop
test
add
lods
add
pusha
and
add
rol
add
and
add
inc
add
add
hlt
add
mov
add
xor
add
sar
add
xchg
add
pusha
add
nop
clc
add
mov
and
add
add
adc
add
nop
jecxz
add
das
add
shl
add
jnp
add
cld
adc
add
inc
add
mov
push
add
adc
add
add
add
push
add
ror
add
add
push
sub
add
pop
add
mov
push
add
or
add
pusha
into
add
shl
add
mov
aas
add
xor
add
nop
mov
add
cwde
mov
add
xchg
add
and
add
add
add
add
gs
add
add
loopne
add
adc
add
aas
add
xchg
sahf
add
xor
add
inc
pop
add
push
adc
add
outs
add
lock
add
loopne
add
push
jns
add
mov
add
inc
ins
add
add
add
mov
add
loopne
add
or
add
jns
add
push
add
sar
mov
add
push
popf
add
ss
add
xchg
jle
add
dec
add
nop
outs
add
shr
add
add
add
add
add
add
add
xchg
sub
nop
add
call
call
call
call
je
jmp
in
aam
jbe
push
je
stc
dec
jmp
je
jne
sub
xchg
push
lea
xchg
not
and
cmp
je
mov
add
add
add
add
add
add
jmp
cvtps2pi
jne
je
dec
(bad)
out
in
je
jne
add
jmp
fs
xchg
test
je
jne
mov
xor
push
xchg
call
call
je
jmp
push
ds
lea
je
add
jne
daa
mov
call
call
call
je
jmp
mov
xor
je
and
jmp
mov
and
call
call
je
jmp
or
je
mov
hlt
popa
bound
test
xchg
mov
add
add
call
je
jmp
fldenv
test
(bad)
push
je
jne
scas
jne
xchg
lea
call
add
call
call
je
jmp
mov
push
je
mov
sbb
je
jne
(bad)
dec
jge
jmp
ret
ret
sub
(bad)
ror
add
call
call
call
je
jmp
xchg
lock
jne
je
imul
hlt
daa
and
cld
xchg
not
and
cmp
je
leave
push
mov
add
add
add
add
add
jmp
(bad)
std
jne
je
cdq
jecxz
jmp
adc
(bad)
call
xchg
test
je
jne
int3
jmp
enter
and
add
add
call
je
jmp
call
or
and
pushf
je
jne
xchg
or
add
add
call
call
je
jmp
cmp
or
adc
mov
div
in
cmp
dec
call
call
je
jmp
or
mov
and
fiadd
fadd
or
enter
add
pop
xchg
call
call
je
jmp
ins
cmp
je
pop
mov
jne
sub
adc
fs
call
add
call
call
je
jmp
pop
dec
or
xlat
adc
hlt
or
add
popf
pusha
pushf
call
call
call
call
je
jmp
into
mov
or
sbb
jne
adc
fs
xchg
not
and
cmp
je
sub
(bad)
call
call
call
call
je
jmp
inc
jo
dec
jne
je
mov
push
je
jne
add
and
xchg
test
je
jne
xor
(bad)
in
xchg
call
call
je
jmp
xor
push
je
mov
loope
je
jne
popf
lock
and
call
call
call
je
jmp
push
aaa
jge
jne
je
ja
pop
jmp
mov
add
call
call
je
jmp
push
pop
cmp
xchg
shr
je
jne
mov
or
mov
aam
mov
and
add
add
call
je
jmp
(bad)
or
out
jne
je
fdiv
hlt
out
sbb
mov
add
add
add
call
call
je
jmp
xor
inc
int
push
je
dec
in
pusha
hlt
je
jne
mov
add
call
call
call
call
call
je
jmp
idiv
je
inc
nop
js
je
jne
retf
lock
sub
pusha
call
call
call
call
je
jmp
push
mov
je
in
cdq
cmp
hlt
jns
pop
add
add
not
and
cmp
je
daa
repnz
add
add
call
call
call
je
jmp
mov
push
je
inc
mov
jne
jecxz
jns
lea
xchg
test
je
jne
fiadd
mov
call
call
je
jmp
in
add
stc
int3
pop
jno
div
mov
lea
call
call
call
je
jmp
retfw
jne
je
mov
cmc
je
jne
jne
jge
add
call
call
je
jmp
enter
jne
je
aaa
inc
mov
hlt
cmps
fwait
out
ret
jmp
xchg
aad
push
xchg
call
call
je
jmp
mov
push
je
fiadd
jns
div
lds
pop
lea
call
add
call
call
je
jmp
jo
ja
jne
je
or
div
sbb
ret
lea
mov
lock
or
je
pause
jmp
popa
call
call
call
call
je
jmp
retf
sub
je
stos
pop
imul
dec
lea
xchg
not
and
cmp
je
sbb
add
add
call
call
call
je
jmp
out
(bad)
div
je
xchg
push
pop
mov
and
xchg
test
je
jne
fiadd
sti
xchg
call
call
je
jmp
call
or
xchg
xor
hlt
arpl
fiadd
fs
call
call
call
je
jmp
movs
mov
je
jbe
mov
je
jne
xchg
add
and
call
call
je
jmp
ss
std
aam
push
je
cmp
sar
div
cmps
jae
push
ret
jmp
push
lea
repnz
add
add
call
je
jmp
sbb
stos
aas
jne
je
out
pop
shl
hlt
xchg
mov
das
lea
call
add
call
call
je
jmp
jbe
(bad)
movs
jne
je
xor
cs
je
jne
xor
add
mov
push
call
call
call
call
call
je
jmp
push
pop
xchg
fnstsw
int3
mov
hlt
mov
loop
lea
xchg
not
and
cmp
je
int
mov
add
add
add
add
add
jmp
sub
cwde
fidiv
je
xchg
xchg
je
jne
inc
add
cld
xchg
test
je
jne
leave
sub
sar
add
add
add
jmp
icebp
or
xchg
je
inc
aam
ins
je
jne
xchg
adc
add
add
add
call
call
je
jmp
push
pop
jo
jne
je
sub
dec
je
jne
cmp
stos
lods
add
call
call
je
jmp
mov
push
je
dec
data16
je
jne
fild
dec
ret
jmp
push
out
lock
pushf
mov
xchg
call
call
je
jmp
fisttp
shl
je
repz
enter
hlt
or
(bad)
lea
call
add
call
call
je
jmp
sar
cld
mov
push
je
ror
fbstp
hlt
xchg
add
mov
pop
add
mov
sub
call
call
call
call
je
jmp
mov
push
jne
je
xor
div
inc
daa
and
cld
xchg
not
and
cmp
je
cli
cmps
sbb
add
add
call
call
call
je
jmp
lea
mov
je
popa
popa
mov
hlt
add
test
je
jne
sbb
inc
(bad)
sahf
sub
lea
add
add
add
jmp
test
je
outs
push
cld
xchg
je
jne
ja
pop
sub
add
add
call
call
je
jmp
shr
jne
je
push
pop
push
cmp
hlt
sub
int
add
call
call
je
jmp
and
cmp
je
jp
shr
in
lock
ret
jmp
push
jmp
xchg
call
call
je
jmp
(bad)
or
je
mov
jne
sar
movs
lea
call
add
call
call
je
jmp
mov
lods
jp
push
je
add
mov
hlt
fbld
ret
xor
mov
sub
mov
call
call
call
call
je
jmp
int3
xor
jbe
push
je
or
mov
hlt
sbb
fs
xchg
not
and
cmp
je
mov
jae
add
add
call
call
call
je
jmp
and
je
loope
add
div
fisub
cwde
lea
xchg
test
je
jne
dec
sbb
or
and
add
add
call
je
jmp
jg
sbb
jne
je
int3
xchg
int
je
jne
and
mov
fs
call
call
call
je
jmp
addr16
xor
or
sub
hlt
lods
mov
and
call
call
je
jmp
gs
mov
or
and
cmp
test
or
jmp
ins
sbb
shl
fwait
xchg
call
call
je
jmp
out
outs
in
sub
je
inc
mov
jne
xor
pop
loop
fs
call
add
call
call
je
jmp
arpl
imul
push
je
push
inc
adc
hlt
movs
ds
and
mov
mov
call
call
call
call
je
jmp
fs
retf
jne
je
dec
inc
dec
push
je
jne
add
and
xchg
not
and
cmp
je
idiv
add
call
call
call
je
jmp
xor
add
sbb
div
mov
mov
lea
xchg
test
je
jne
push
push
idiv
std
cli
lods
xchg
call
call
je
jmp
inc
pop
mov
jne
je
or
shl
jne
or
and
call
call
call
je
jmp
in
inc
int
push
je
lock
jne
push
cmp
add
dec
call
call
je
jmp
arpl
fwait
(bad)
jne
je
or
mov
hlt
or
push
add
jmp
(bad)
ret
push
mov
xchg
call
call
je
jmp
rol
push
loopne
push
je
lds
jne
jae
ret
fs
call
add
call
call
je
jmp
mov
shl
lea
hlt
je
jne
mov
push
jmp
ret
sub
mov
mov
call
call
call
call
je
jmp
add
jns
push
je
cmc
xchg
mov
loopne
mov
cld
xchg
not
and
cmp
je
add
mov
add
add
add
add
add
jmp
cmps
rcl
or
mov
jne
dec
cmps
push
sub
xchg
test
je
jne
and
cmp
add
call
call
je
jmp
cmc
mov
je
push
and
jne
adc
pop
lea
call
call
call
je
jmp
mov
push
je
mov
fwait
sahf
je
jne
add
cmp
add
dec
call
call
je
jmp
adc
ror
jne
je
or
inc
add
jno
jmp
xor
out
xchg
call
call
je
jmp
push
in
push
jne
je
inc
or
xor
pop
inc
sub
call
add
call
call
je
jmp
mov
adc
je
xor
hlt
jbe
cmps
mov
add
pop
mov
call
call
call
call
je
jmp
sbb
adc
jne
je
repnz
sti
add
hlt
shr
pop
mov
pop
mov
call
call
call
call
je
jmp
sahf
push
or
push
xchg
imul
lods
inc
xchg
pop
mov
pop
call
call
call
call
je
jmp
ret
jbe
push
je
mov
ja
je
jne
sub
add
inc
adc
inc
or
mov
call
call
call
call
je
jmp
adc
in
push
je
push
rcr
hlt
dec
loopne
mov
inc
add
mov
call
call
call
call
je
jmp
(bad)
sbb
jne
je
call
div
iret
cmp
mov
xor
mov
mov
lea
add
mov
call
call
call
call
je
jmp
cmp
inc
jne
je
outs
add
fidiv
hlt
enter
lea
xchg
test
je
jne
cs
mov
inc
add
add
add
jmp
pop
(bad)
test
or
mov
mov
aas
jno
fs
call
call
call
je
jmp
add
push
je
jmp
hlt
mov
add
dec
call
call
je
jmp
and
or
or
bound
lahf
je
jne
js
aad
ret
sub
call
call
call
call
je
jmp
rcr
cmps
jne
je
jns
sub
jnp
sub
add
not
and
cmp
je
cmps
popa
mov
add
add
add
add
add
jmp
ret
mov
pop
stc
inc
loope
div
mov
fs
xchg
test
je
jne
adc
and
mov
call
call
je
jmp
mov
aaa
mov
aaa
and
push
je
jne
dec
scas
xor
call
call
call
je
jmp
daa
loopne
popa
jne
je
sar
hlt
(bad)
stc
shl
add
call
call
je
jmp
add
nop
sub
je
lock
ret
div
test
or
add
mov
dec
rol
add
call
je
jmp
mov
push
je
xchg
jno
and
hlt
jmp
fs
call
add
call
call
je
jmp
pop
mov
das
jne
je
(bad)
adc
hlt
ret
push
cwde
fldpi
add
jmp
call
call
call
call
je
jmp
pop
push
mov
or
mov
mov
lahf
add
and
xchg
test
je
jne
daa
and
push
dec
sbb
xchg
call
call
je
jmp
imul
stos
jge
push
je
push
fstp
hlt
pop
jecxz
cld
lea
call
call
call
je
jmp
xchg
test
fidiv
je
push
retf
je
jne
add
dec
call
call
je
jmp
es
add
adc
sub
hlt
dec
xor
push
push
jb
je
arpl
(bad)
xor
sub
and
popa
push
jl
or
enter
mov
mov
dec
lea
mov
xor
test
je
add
mov
xor
dec
jmp
add
ret
push
xor
imul
add
call
call
call
je
jmp
gs
adc
push
je
sahf
or
mov
and
iret
into
lea
xchg
not
and
cmp
je
int3
pop
call
call
call
call
je
jmp
movs
xor
jmp
push
or
hlt
(bad)
push
and
xchg
test
je
jne
jbe
mov
in
add
call
call
je
jmp
enter
jne
je
and
div
(bad)
mov
and
call
call
call
je
jmp
js
or
jne
je
movs
or
jne
sub
or
call
call
je
jmp
bound
es
xchg
jne
cmp
out
mov
ret
xor
call
call
je
jmp
mov
je
mov
push
je
jne
pop
push
and
call
add
call
call
je
jmp
push
mov
push
je
aaa
loopne
pcmpeqb
jne
fdivr
ret
mov
call
call
call
call
je
jmp
clc
enter
push
je
xor
xchg
pop
je
jne
test
xchg
sub
xor
inc
xor
mov
mov
call
call
call
call
je
jmp
mov
das
or
push
je
inc
movs
sbb
je
jne
jne
lds
enter
add
call
call
call
je
jmp
movs
sbb
jne
je
xlat
shl
hlt
xchg
(bad)
and
stc
or
movzx
call
call
call
call
je
jmp
cld
push
or
jne
je
or
div
dec
ror
cld
xchg
test
je
jne
adc
add
add
add
add
jmp
je
pop
sbb
je
push
movs
push
cmp
hlt
loope
icebp
jecxz
fs
call
call
call
je
jmp
lods
fild
push
je
into
xchg
xor
hlt
jne
test
add
call
call
je
jmp
(bad)
shl
jne
je
jecxz
xchg
or
push
rcr
(bad)
add
add
add
call
call
call
je
jmp
jbe
jb
jne
je
adc
hlt
je
jne
jb
movs
ror
and
shl
sar
je
outs
into
and
add
add
call
call
call
je
jmp
mov
push
je
les
jne
cmp
cld
xchg
test
je
jne
dec
fbld
inc
imul
add
add
call
je
jmp
ret
and
cld
jne
je
pop
jno
xchg
je
jne
(bad)
xchg
mov
lea
call
call
call
je
jmp
jp
sub
or
jmp
mov
push
jmp
leave
add
call
call
je
jmp
jp
and
jne
je
aam
call
hlt
jb
dec
or
jmp
shl
xchg
out
dec
mov
add
call
call
je
jmp
cmc
add
pop
jne
je
shl
jbe
je
jne
lea
lea
call
add
call
call
je
jmp
imul
or
gs
hlt
jb
out
jmp
ret
call
call
call
call
call
je
jmp
push
mov
je
push
sbb
jne
je
or
fs
xchg
test
je
jne
inc
clc
pop
imul
add
add
add
jmp
loop
inc
push
jne
je
arpl
hlt
mov
mov
call
call
call
je
jmp
sbb
ret
push
je
test
jne
ds
xor
call
call
je
jmp
mov
stos
jns
push
je
jo
and
mov
call
call
call
call
je
jmp
out
cmp
jne
je
test
jne
push
(bad)
lods
push
lea
xchg
not
and
cmp
je
push
mov
add
call
call
call
je
jmp
loope
fs
jne
je
sub
sub
div
mov
and
xchg
test
je
jne
jle
sub
mov
in
add
call
call
je
jmp
iret
or
jne
je
(bad)
pop
push
shl
hlt
fsub
dec
cmp
add
add
call
call
je
jmp
call
jmp
jne
je
mov
xlat
lea
hlt
jge
xchg
stos
add
call
call
je
jmp
arpl
cwde
jne
je
jmp
hlt
inc
cmp
ret
jmp
into
popa
clc
mov
cmp
xchg
call
call
je
jmp
shl
add
je
ss
lds
je
jne
aas
add
and
call
add
call
call
je
jmp
jp
lea
jne
je
(bad)
dec
cmp
hlt
ins
test
jmp
ret
jmp
call
call
call
call
je
jmp
iret
pusha
icebp
loopne
push
je
loop
mov
hlt
ds
fisub
and
xchg
test
je
jne
sbb
pushf
pop
mov
add
call
call
je
jmp
sub
push
je
inc
sbb
mov
div
cmps
sar
lea
call
call
call
je
jmp
jp
fdiv
je
jmp
hlt
xor
cdq
add
call
call
je
jmp
les
add
jne
je
iret
ficom
(bad)
hlt
jecxz
shl
jmp
add
fwait
inc
add
jmp
jle
aad
test
loope
dec
dec
inc
mov
push
repnz
mov
jns
aaa
loope
add
daa
test
xor
cmp
or
and
xchg
dec
repnz
jb
push
and
cmp
xor
sub
jbe
jl
add
push
fidiv
jecxz
dec
pop
add
loop
pop
cmp
je
adc
inc
movs
pop
in
xor
dec
dec
mov
dec
mov
mov
lock
mov
jnp
adc
and
and
and
mov
cmps
jbe
push
repz
icebp
cmp
fadd
mov
inc
xor
jmp
ja
push
push
dec
sub
mov
xchg
or
xchg
push
shr
adc
clts
cmp
ins
inc
add
xlat
adc
dec
cld
add
or
xor
adc
std
pop
ret
es
jl
dec
sbb
lds
push
and
pop
jecxz
xor
add
int3
dec
ss
cmp
rcl
push
and
sbb
jmp
test
mov
xor
inc
js
hlt
push
in
jb
mov
add
push
ja
aas
repz
je
add
push
mov
add
xor
enter
leave
and
sub
add
jbe
call
or
and
pop
hlt
adc
test
jl
mov
and
mov
jl
dec
jb
jnp
imul
sub
leave
and
sbb
jle
add
adc
pop
xor
movs
sub
jle
sub
sbb
xadd
and
jle
xchg
cmps
xor
inc
push
push
xchg
cmp
xor
xor
sub
fs
cmove
je
int
sbb
sub
sub
imul
inc
or
inc
and
out
jbe
aaa
dec
das
ins
inc
mov
cmp
sub
bound
dec
mov
dec
fisub
fnstsw
push
sub
lods
pop
aam
adc
gs
inc
or
sbb
shl
and
adc
inc
into
dec
ret
test
jae
dec
push
sub
pop
or
pop
xor
and
push
popf
sbb
pop
jmp
pop
dec
cmp
je
and
jae
push
and
push
or
xchg
jae
(bad)
in
push
sbb
ficom
mov
jmp
add
xor
cmp
call
or
push
push
mov
xor
inc
retf
cmp
adc
pop
ds
retf
adc
daa
stc
jg
pop
(bad)
pop
dec
add
dec
xor
dec
fisubr
push
mov
add
pop
jbe
js
or
cmp
sbb
lods
cmp
jne
inc
nop
add
(bad)
inc
mov
or
push
je
(bad)
jns
inc
pop
pop
sub
push
xor
xor
inc
xor
aaa
and
push
sub
and
add
add
ins
mov
adc
jle
cmp
pusha
(bad)
xor
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sub
push
js
cmps
psadbw
dec
sub
xor
inc
fisub
aam
mov
and
adc
sbb
cmp
mov
cs
jg
out
mov
loopne
mov
inc
mov
lods
and
pop
inc
stos
ins
pop
jo
or
xor
and
push
push
add
jl
ja
es
and
sbb
sub
cmp
cmp
cmp
inc
push
test
pop
mov
add
mov
pop
sub
sbb
inc
pop
sahf
sbb
xchg
jge
jl
bound
rcl
cmp
xor
scas
xor
movs
dec
pop
outs
sub
or
mov
or
dec
push
addr16
or
and
daa
repnz
(bad)
aas
mov
push
mov
cmp
and
push
pop
pop
jmp
sbb
jae
dec
test
js
or
pop
jbe
push
inc
and
pop
mov
cmp
mov
sbb
jge
adc
sbb
xchg
xor
mov
jbe
dec
mov
sbb
inc
jnp
call
daa
push
and
or
bound
ds
jns
sub
dec
sbb
imul
cmp
mov
fcomp
push
sbb
adc
js
dec
ins
daa
sub
sahf
push
lsl
cmp
jge
xor
je
jp
or
in
in
shl
pop
out
adc
call
xor
adc
xor
cmp
mov
dec
push
and
inc
jno
pop
lds
inc
add
adc
adc
arpl
cmc
push
sbb
pop
rol
xor
sbb
jle
outs
sub
das
add
rol
and
inc
div
in
jg
(bad)
out
ss
and
dec
pop
jg
sbb
adc
fbstp
ret
pop
sub
(bad)
cs
cmp
scas
cmp
xor
cmp
sbb
hlt
imul
fidiv
dec
or
sub
pop
mov
xor
cmp
outs
dec
jae
in
ins
fidivr
imul
dec
sbb
mov
inc
inc
stos
inc
cmp
jb
lds
adc
dec
cwde
xor
pcmpeqw
cmp
sbb
sub
jle
ss
jle
fs
or
dec
jo
jmp
dec
jo
mov
and
bound
mov
jo
pop
xor
not
jne
push
mov
pop
popa
adc
idiv
adc
jae
pop
mov
jne
add
jae
push
js
cmp
das
mov
sbb
sbb
jno
dec
xchg
or
mov
dec
dec
dec
or
imul
adc
or
jns
add
or
sub
fcom
jg
push
cmp
or
sbb
and
add
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
xor
adc
dec
mov
iret
dec
pop
adc
jne
popa
adc
jle
xor
push
pop
mov
and
push
sahf
pop
cmp
adc
int3
xor
push
popa
add
push
inc
dec
cli
sub
and
dec
jne
or
daa
push
sbb
dec
xor
push
sbb
into
addr16
dec
mov
stc
ds
imul
cmc
pop
fwait
or
sbb
imul
jnp
pop
adc
dec
adc
arpl
or
jl
out
cmp
push
das
or
clc
pop
xchg
or
int3
pop
pop
add
xchg
or
mov
dec
mov
jle
add
jge
mov
and
push
jmp
dec
jno
push
inc
mov
into
jle
pop
sahf
jnp
push
test
mov
jbe
inc
popa
aas
test
pop
dec
and
test
push
outs
pop
pushf
jb
pop
or
push
dec
cli
dec
dec
and
jle
dec
addr16
sub
mov
and
ficom
mov
or
add
jo
jge
xchg
or
push
fadd
xchg
adc
jns
outs
push
adc
(bad)
arpl
es
enter
or
pop
push
push
dec
add
add
sbb
jg
pop
xor
inc
hlt
inc
mov
xor
dec
jmp
sub
in
leave
xor
inc
int3
invd
sub
inc
push
cmp
cmp
aas
cmp
mov
mov
jno
pop
jns
jno
(bad)
adc
push
inc
xor
mov
les
jb
push
pop
mov
xor
jnp
jns
and
ds
push
dec
outs
mov
and
adc
adc
dec
pusha
pinsrw
push
cs
sub
jg
sub
cs
add
cmp
aas
mov
adc
daa
js
push
lds
adc
mov
test
xor
dec
mov
pop
outs
push
inc
pop
dec
jg
push
and
pop
push
pop
into
cmova
out
xchg
dec
push
cs
jne
fs
inc
xchg
pop
fld
jbe
or
dec
pop
sbb
(bad)
pop
arpl
pop
fisttp
sub
sub
jge
jns
das
adc
dec
jg
add
sbb
jle
cld
push
call
pop
cmp
ins
mov
xchg
in
imul
ins
push
push
push
dec
adc
pop
inc
stc
dec
gs
inc
adc
jge
inc
outs
inc
and
sub
adc
sub
out
mov
dec
cdq
jge
and
out
add
cmp
and
pop
ret
pop
shl
sbb
push
sub
shr
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
lahf
outs
push
setle
je
sub
dec
push
push
push
int
fistp
pop
or
sbb
lods
adc
cmp
sahf
(bad)
pop
daa
pop
dec
lds
jae
imul
not
pop
cmps
adc
cmp
xlat
jge
pop
test
and
cmp
jbe
aaa
jno
xchg
jle
inc
jb
jmp
inc
adc
or
fs
cmp
ret
push
stos
dec
xor
js
daa
lahf
xor
jb
inc
mov
in
ja
cmpxchg
jae
push
pop
fsub
inc
loop
mov
cli
outs
iret
push
movs
ss
cdq
pop
mov
pop
rol
fnstenv
dec
dec
jnp
mov
gs
push
adc
adc
inc
cmp
aaa
sub
adc
or
add
cmp
jp
pop
xchg
js
outs
adc
cdq
push
inc
sub
cmp
xor
ror
jns
push
adc
and
push
pop
jp
pop
jge
in
inc
sbb
cmp
dec
test
push
push
sbb
das
and
sub
or
jae
and
push
cmps
dec
jmp
cmp
mov
scas
js
dec
push
sbb
and
mov
mov
lahf
jne
and
cmp
mov
xor
jl
sub
push
fist
es
and
and
and
imul
imul
cmp
xchg
and
js
pop
push
adc
bound
sbb
das
push
sbb
cs
sub
in
jmp
arpl
cs
into
push
inc
js
cmp
push
sbb
xchg
push
int
push
add
or
stos
ds
das
add
ins
push
daa
aad
sbb
xor
cmp
outs
pop
xchg
out
pop
push
xor
stc
jg
or
and
adc
push
or
push
lods
dec
push
adc
push
fistp
pushf
sub
add
sub
jge
je
add
sub
cmp
add
xor
mov
xor
lahf
jne
or
addr16
push
test
lds
sbb
sbb
or
daa
ficom
cmp
sub
inc
pop
pop
sar
push
push
enter
or
ss
sbb
aas
pop
dec
or
popa
mov
xlat
adc
inc
call
sbb
or
adc
mov
add
inc
mov
outs
xor
stos
push
arpl
jecxz
push
das
je
lea
ins
std
adc
cwde
pop
sahf
push
bound
ss
popa
push
and
stos
or
dec
pushf
sbb
sub
mov
loop
iret
and
sub
add
xchg
or
sub
sahf
xor
pop
cmp
ins
popa
xor
cmp
mov
add
inc
push
addr16
inc
stc
add
movlps
xor
stc
pop
jns
and
or
gs
hlt
add
xor
and
push
dec
test
lock
arpl
pop
mov
or
jne
cmp
and
and
sub
adc
daa
leave
ins
loope
fwait
push
adc
cmp
dec
sbb
loope
push
or
jl
js
js
js
and
aas
xlat
adc
sub
jp
dec
cld
cmp
adc
or
inc
dec
pusha
fstp
xor
and
or
mov
xor
add
adc
sbb
push
movs
push
scas
popfw
xor
inc
inc
jno
sbb
test
pop
adc
shl
das
(bad)
cmp
bound
or
pop
mov
js
inc
lock
push
sbb
sbb
pop
imul
and
adc
sub
cmp
loope
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
outs
push
dec
jecxz
sub
aaa
jbe
add
das
xchg
and
cs
push
ret
dec
sub
add
jp
xchg
and
jnp
addr16
sub
xor
cmp
sub
daa
jmp
add
jg
mov
sbb
pop
clc
xor
mov
shl
arpl
sub
fistp
data16
push
push
js
ja
cmp
add
pop
mov
inc
xor
jle
pop
stos
adc
jae
pop
test
imul
mov
das
lds
pop
scas
das
fadd
push
sub
dec
out
jg
push
dec
das
push
cmp
dec
dec
cs
pop
inc
pop
pop
and
cmp
dec
adc
adc
ins
jns
push
js
mov
aas
inc
xor
xor
sbb
jmp
dec
mov
xor
xlat
pop
jp
cmp
pop
movs
push
fsub
sub
pusha
retf
dec
pop
jne
cmp
pop
sbb
mov
jge
add
cmovl
adc
dec
outs
imul
pop
into
dec
test
jmp
xor
push
aas
mov
sbb
aas
ret
inc
jne
cmp
dec
int
mov
gs
inc
mov
movs
and
cmovg
shl
adc
or
inc
fldenv
loop
mov
sub
or
sub
push
inc
and
loop
test
jb
adc
xor
addr16
inc
mov
gs
dec
or
out
mov
rcr
es
and
inc
add
add
sub
cmp
loopne
cmc
push
mov
pop
push
or
stc
arpl
xchg
call
or
pop
in
cld
xor
xor
pushaw
sub
sbb
push
xchg
pop
add
pop
sub
imul
in
arpl
adc
cmp
sub
jae
push
jge
fcom
mov
pop
dec
out
xor
sub
dec
int
push
add
cmp
ss
loope
rcr
dec
xor
xor
les
icebp
aaa
cwde
adc
push
jp
sub
or
or
pop
jg
sbb
jnp
sbb
sbb
ss
or
ja
xor
sub
mov
stc
add
jb
or
pop
inc
pop
xchg
and
push
mov
sbb
inc
sub
pop
and
sbb
fs
add
aaa
sub
push
push
push
aas
cmp
jns
sub
jae
push
rcl
add
jbe
or
push
pop
xor
sub
ror
or
jge
inc
fwait
push
mov
enter
add
test
sbb
dec
outs
ins
lock
sbb
cmp
inc
and
jo
pop
fild
clc
inc
adc
push
daa
or
or
add
jne
jae
push
cmp
jae
imul
test
sbb
dec
mov
daa
adc
push
scas
and
push
pcmpeqw
xor
add
adc
push
sbb
cmp
sub
push
push
mov
jbe
and
arpl
sbb
or
cmp
loop
fs
mov
ficom
and
dec
pop
dec
stos
dec
mov
vpsrad
je
movs
pop
aam
xor
jge
push
mov
js
push
into
jnp
jge
dec
sbb
xor
dec
cmp
addr16
add
inc
mov
jne
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
in
mov
sub
add
rcl
pusha
adc
pushf
jne
cmp
push
push
sbb
push
ret
push
jno
aas
js
inc
add
jno
dec
ja
dec
in
retf
dec
out
popa
push
jbe
inc
dec
or
jbe
ror
adc
dec
add
sbb
inc
push
and
and
and
pop
inc
sub
and
push
cmc
or
and
adc
hlt
imul
push
aas
xor
(bad)
jb
xor
mov
pop
xchg
xor
push
push
ja
xor
pop
jns
aaa
mov
in
(bad)
push
fist
adc
ss
push
mov
cmp
mov
xor
dec
cmps
imul
and
inc
mov
jb
adc
sub
jmp
cmp
pop
inc
inc
inc
in
ins
rcl
jl
adc
add
sub
dec
outs
pop
jno
mov
add
sbb
sbb
sbb
ds
cmp
or
js
sub
adc
je
and
mov
adc
cmp
jae
add
les
sbb
ret
pop
scas
cmp
(bad)
es
je
or
sbb
pop
cmp
das
mov
or
jae
push
cmp
das
dec
imul
inc
add
cs
sub
mov
jnp
call
add
mov
js
or
jne
or
cmp
sbb
xor
cmp
popa
and
aaa
dec
mov
push
xchg
es
fwait
adc
sbb
fs
pop
sub
sub
mov
push
sbb
mov
inc
mov
jae
push
sbb
adc
sub
adc
sbb
shl
jne
inc
mov
imul
jp
mov
cmp
dec
inc
gs
xor
addr16
ds
adc
or
adc
dec
xor
add
mov
mov
icebp
inc
or
clc
jns
adc
dec
push
pop
push
mov
adc
adc
add
jmp
fs
fisubr
outs
push
inc
mov
sbb
push
(bad)
xor
push
push
arpl
sub
or
xchg
sub
dec
push
or
push
and
adc
fst
sub
ins
fisub
ja
pop
out
cmp
ds
por
inc
cs
mov
jle
or
adc
das
dec
push
push
and
and
mov
cmp
repz
inc
adc
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
or
inc
jae
dec
pop
in
leave
imul
inc
inc
cmc
jnp
cmp
(bad)
pop
das
add
lds
sub
dec
stc
daa
gs
cmps
jno
push
imul
pop
or
sti
dec
mov
imul
inc
js
mov
adc
or
mov
xor
xchg
arpl
js
dec
fnstcw
xor
pop
lods
or
sub
push
test
rcr
cmp
ja
inc
ins
jo
and
bound
jb
dec
cs
jne
imul
jne
(bad)
mov
and
cmp
pop
test
and
or
push
push
dec
adc
pop
xor
sbb
pop
jno
leave
push
jg
mov
jge
add
bound
push
nop
or
ja
jns
add
imul
retf
inc
je
jg
pushf
das
inc
fs
mov
jne
pop
outs
or
jns
jnp
jnp
pop
mov
jb
ss
(bad)
sbb
jns
movs
js
ja
sbb
xchg
or
sub
cmp
jne
or
inc
ficom
push
push
sbb
sbb
stos
adc
adc
pop
push
pushf
es
outs
data16
fsubr
add
dec
std
sbb
inc
not
sub
jns
and
popa
in
xchg
sbb
or
adc
pop
cmp
dec
ds
sub
div
jae
mov
ja
dec
jns
xlat
cmp
pop
pop
cs
jnp
cmp
ins
xor
and
xor
xor
adc
inc
repz
or
sub
mov
push
push
or
add
and
sub
or
and
jbe
inc
and
sub
sbb
mov
inc
and
push
adc
in
push
aaa
adc
fsub
adc
aaa
jo
xchg
push
arpl
gs
jp
loopne
shr
pop
dec
popa
add
push
mov
jne
ja
pop
adc
add
xor
or
adc
push
pop
inc
mov
iret
gs
xor
pop
pop
xor
mov
test
push
xor
mov
imul
or
js
push
(bad)
or
pop
cmp
or
pop
sub
and
aaa
add
dec
push
call
arpl
out
cmp
dec
xor
mov
push
imul
sbb
cmp
jns
jle
push
fdiv
add
pusha
je
sub
ins
xor
out
stos
fdivr
call
jbe
push
xchg
dec
shl
push
movs
jno
add
or
pop
xchg
or
imul
or
sub
inc
or
and
inc
pop
push
sub
pop
inc
inc
or
dec
push
ret
jle
and
xchg
xor
add
invd
inc
and
or
bound
ss
sbb
pop
outs
mov
or
pop
sbb
mov
dec
cwde
adc
pop
sbb
lds
add
pop
gs
push
inc
pop
fs
fild
pop
dec
ins
xchg
or
enter
mov
add
xor
add
or
adc
(bad)
push
mov
add
sbb
sahf
aas
pop
dec
push
cmp
push
dec
add
popa
jae
arpl
push
shl
adc
fs
sbb
dec
push
or
pusha
ret
or
dec
scas
inc
xchg
dec
and
arpl
jp
xor
pop
aam
push
daa
stos
inc
and
mov
ja
jl
addr16
imul
mov
outs
aam
lahf
sub
xor
sar
addps
sub
xor
cmps
xor
imul
shl
mov
sub
and
adc
imul
cmp
push
js
retf
xor
and
sbb
and
cmp
push
arpl
add
cmp
mov
xor
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
loope
mov
dec
add
pmullw
push
jnp
sub
dec
jg
xchg
pop
retf
inc
xchg
add
or
xor
sbb
push
aas
dec
movhps
pop
jmp
dec
(bad)
xor
cmps
mov
out
jl
add
pop
push
lea
ins
ds
jno
dec
inc
xor
or
test
push
pop
imul
lea
popa
push
dec
gs
push
int
retf
xor
jecxz
std
add
sbb
cmp
popf
sub
jo
push
push
ja
add
jle
and
push
push
pop
xchg
jp
jp
jns
inc
ror
xor
fs
aaa
pop
sub
cmp
hlt
fs
fs
or
inc
mov
loopne
xlat
jle
xor
and
das
les
xor
xchg
adc
add
arpl
mov
and
stc
sbb
cmp
ins
das
add
in
ror
cmp
xchg
and
aaa
pop
outs
inc
adc
push
dec
cmc
popa
addr16
add
jns
pop
pop
mov
mov
sub
xchg
dec
retf
je
jnp
or
adc
dec
ss
imul
push
inc
jae
outs
sahf
adc
mov
pop
adc
jbe
daa
test
daa
rol
idiv
sub
sub
and
dec
push
dec
dec
push
or
jae
pop
das
inc
daa
aas
dec
adc
jmp
aas
cmp
add
and
sbb
push
adc
add
gs
push
mov
mov
pop
dec
sub
enter
sub
loopne
inc
cmp
push
jo
mov
ja
adc
sbb
adc
pop
popa
sub
jbe
pop
xchg
jns
inc
pop
pop
cdq
jns
xor
dec
sbb
inc
enter
dec
push
repz
cmps
pop
or
data16
gs
and
dec
inc
sbb
add
push
loope
jno
stos
addr16
push
fidivr
or
in
xchg
jge
pop
mov
aas
inc
(bad)
and
jge
inc
popf
jnp
add
adc
xlat
push
test
cmp
sub
pop
push
cmp
pop
add
push
sahf
pop
dec
cmp
mov
pop
jno
jge
adc
int
pop
dec
lock
(bad)
sbb
and
pop
pop
dec
leave
ins
pop
es
jno
outs
mov
adc
push
pop
fs
add
lds
jnp
pop
sbb
or
dec
test
pop
jb
das
jns
inc
jge
push
add
ror
icebp
sub
loopne
jmp
adc
jg
pop
add
add
(bad)
pop
adc
outs
ins
adc
sbb
gs
fs
jmp
push
sti
pop
cmp
mov
pop
push
or
xchg
pop
mov
jns
out
push
push
fnsave
push
outs
sub
outs
pop
jp
cmp
xor
js
jae
pop
in
mov
ins
fwait
sub
ins
push
das
fwait
cmp
popf
sub
icebp
sbb
jg
dec
imul
xor
ja
xor
cs
loope
pusha
sbb
push
or
pop
addr16
aaa
outs
jb
cmp
push
dec
dec
cmp
test
and
ret
add
js
or
push
sub
iret
push
ja
add
das
cmp
daa
dec
ins
jmp
adc
cmp
stos
cmp
je
inc
dec
pop
adc
xlat
ins
mov
xor
mov
cs
bswap
xor
push
and
cmpxchg
dec
sub
jmp
pop
cs
ja
inc
call
push
ins
inc
xchg
jne
jno
sbb
imul
adc
push
dec
pop
pop
add
jb
dec
data16
ss
dec
ja
je
(bad)
or
sub
pop
dec
outs
outs
inc
call
adc
mov
add
inc
invd
xchg
inc
fwait
outs
cmps
dec
pushf
or
jbe
jo
cmp
pusha
push
and
and
sbb
jle
dec
mov
or
inc
cmp
dec
mov
movs
push
nop
jno
push
(bad)
pavgw
and
pop
movs
adc
sub
adc
inc
dec
cmps
aaa
xchg
jbe
pop
neg
add
jge
mov
sub
push
ja
jl
pop
fld
arpl
xor
jmp
pusha
out
adc
and
jmp
leave
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
(bad)
ficom
inc
jne
outs
or
xchg
jno
and
xchg
cmp
adc
adc
aad
xchg
pop
push
jp
sub
sub
mov
pop
push
push
shl
cmp
fwait
ins
cmp
jns
je
ja
outs
popa
rol
bound
jp
pop
pop
dec
out
dec
or
add
jae
arpl
jno
cmps
xor
mov
add
scas
mov
and
(bad)
and
jne
cmp
mov
ret
sbb
push
adc
retf
mov
xor
or
js
ja
dec
fwait
aas
adc
inc
inc
xor
cmps
pop
xor
add
push
jne
bound
mov
mov
fcomp
fs
ja
popa
adc
inc
push
daa
test
mov
sbb
jmp
pop
sub
sub
lea
pop
xchg
adc
push
sbb
sub
fmul
sbb
gs
and
cmp
pop
xchg
ds
or
lock
sub
inc
xchg
inc
fist
push
cmps
add
mov
jl
xor
mov
cdq
je
outs
lods
jnp
pop
out
inc
xor
in
sub
push
mov
fcom
sub
pop
push
jl
js
or
ins
outs
mov
xor
adc
imul
sbb
inc
inc
pop
and
dec
(bad)
xor
jnp
dec
jl
(bad)
imul
push
cld
adc
pop
mov
jle
add
xor
dec
fdiv
outs
inc
and
cs
inc
out
ds
pop
push
push
add
and
jge
and
and
xchg
inc
or
xor
jge
push
dec
sub
push
jne
adc
jg
sub
push
jmp
jle
mov
sbb
je
arpl
cmp
enter
enter
pop
jne
sub
push
arpl
stos
dec
in
or
and
pop
in
cmp
jne
pop
adc
mov
sbb
ret
xor
retf
(bad)
lock
pop
xor
and
mov
xchg
or
daa
ins
dec
dec
pop
cs
cmp
popa
jb
adc
push
mov
push
test
xlat
jno
je
push
push
push
fdivr
push
call
sub
xor
sbb
push
push
and
ins
xor
outs
pop
or
xor
jb
xor
adc
or
gs
das
xor
xchg
(bad)
push
mov
sbb
push
(bad)
pop
enter
jg
retf
or
pop
sub
das
imul
and
xor
xor
lahf
pextrw
dec
xchg
dec
sbb
bound
repnz
gs
aam
xlat
inc
bound
sbb
pop
ficomp
xor
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
and
pop
jne
sub
dec
inc
and
jle
call
inc
jle
xlat
sbb
cmp
sub
cmp
ins
push
adc
dec
sbb
pop
or
push
nop
inc
addr16
xlat
or
or
repz
outs
mov
and
aaa
xchg
push
fwait
daa
inc
push
lods
pop
stos
pop
add
sbb
push
nop
add
fmul
xor
adc
push
out
push
and
jo
xor
arpl
daa
inc
push
loop
out
sbb
cmp
push
push
and
inc
push
lods
jb
sbb
and
jbe
inc
cld
sbb
add
jno
inc
xchg
jns
addr16
push
xor
pop
arpl
sbb
adc
sub
sbb
mov
jns
jbe
jbe
push
hlt
or
fs
xchg
stos
jns
xor
dec
popa
lea
add
push
jae
das
and
push
daa
lds
call
gs
cmp
dec
adc
sub
pop
int
pop
add
cmp
inc
jne
xor
add
xchg
push
mov
or
cmp
mov
adc
in
jmp
xchg
das
mov
popf
test
daa
inc
jnp
inc
rcr
or
adc
xor
sbb
inc
rcl
inc
(bad)
outs
leave
data16
jns
add
push
es
sub
mov
dec
xor
add
mov
aas
sbb
imul
or
into
pop
sbb
mov
out
xor
cli
jge
ds
adc
jo
daa
icebp
js
or
dec
je
and
mov
ret
dec
(bad)
xor
js
push
adc
inc
pop
out
mov
dec
xlat
dec
sbb
test
jbe
mov
xor
ins
push
retf
dec
mov
arpl
add
pop
lds
adc
cwde
push
push
cmp
inc
aas
ss
stos
sub
xor
xor
push
das
and
pop
pop
jg
inc
in
mov
and
ins
addr16
xchg
sbb
jle
adc
jl
daa
sub
arpl
in
aas
sub
adc
inc
cmp
sbb
cli
add
pop
popa
loop
inc
xor
inc
aas
fldcw
jge
dec
arpl
pusha
pop
inc
dec
aas
sub
data16
jo
adc
xor
sub
inc
push
push
add
ins
clc
cmp
or
push
mov
je
outs
push
sub
enter
out
fbstp
add
pushf
and
dec
shr
adc
xor
cmp
arpl
sub
data16
or
sbb
es
xchg
xor
dec
aaa
or
loope
or
xor
push
mov
fs
mov
jae
and
adc
sub
cmp
xchg
or
lea
sub
outs
sbb
cld
push
mov
scas
jno
and
adc
pop
add
adc
push
lds
pop
sub
clc
dec
iret
jae
je
push
push
data16
mov
and
xor
pop
jp
es
inc
dec
xor
mov
pop
mov
adc
jbe
inc
xchg
sub
mov
movs
ins
sbb
add
mov
adc
and
mov
pusha
jbe
jmp
or
dec
test
mov
dec
mov
sub
mov
xchg
inc
mov
dec
cs
scas
add
xlat
sub
inc
mov
sbb
adc
pcmpeqw
cmp
ss
xor
or
and
cld
xor
mov
fs
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
add
enter
test
idiv
cmp
pop
cmp
outs
enter
xlat
jnp
pop
(bad)
imul
inc
jno
sbb
and
adc
cmp
add
or
adc
cmovns
add
or
or
jge
sar
ins
pop
sub
leave
je
push
addr16
imul
pop
and
es
sub
dec
adc
jl
addr16
das
sub
out
push
jl
paddusw
data16
cmp
jnp
aaa
repnz
out
hlt
outs
fstp
and
dec
cmp
daa
or
les
push
push
inc
into
dec
imul
data16
ins
jg
hlt
or
push
and
inc
int
xchg
and
adc
jg
jnp
push
(bad)
pop
lods
cmp
adc
and
or
sbb
mov
mov
mov
dec
aam
lea
out
push
out
inc
dec
dec
sub
popa
out
inc
pop
or
xlat
ds
xor
xor
add
sbb
adc
enter
sbb
inc
mov
inc
or
xor
sbb
(bad)
and
pop
adc
inc
xchg
pop
int3
cmp
dec
scas
and
popa
ins
sub
xor
mov
cmp
iret
arpl
adc
paddusb
arpl
jbe
and
add
scas
inc
je
jb
inc
ins
fstp
cmps
cmp
push
sub
push
sbb
pop
test
or
and
push
push
add
jnp
push
xchg
push
loop
xchg
mov
pop
sti
(bad)
add
arpl
xchg
je
fs
jno
dec
push
dec
popa
js
push
les
jo
dec
mov
outs
mov
sub
sbb
and
adc
push
data16
and
jp
aam
pop
adc
sub
push
adc
add
in
push
dec
jl
sub
sub
push
fsub
in
gs
inc
mov
inc
pop
dec
jmp
jne
ins
jno
push
cmp
or
pop
cmp
add
add
or
dec
pop
imul
dec
ja
adc
jl
imul
pop
loop
ror
test
jge
cmp
jno
dec
mov
and
mov
push
cmp
aam
stos
and
dec
ret
xor
jo
jbe
add
sbb
mov
cmp
ins
push
push
in
sub
xor
xor
jbe
pop
sbb
dec
pop
mov
pop
jge
push
or
ds
dec
inc
mov
dec
push
jo
mov
je
cmp
adc
mul
and
js
push
mov
push
inc
dec
cmps
inc
test
nop
dec
mov
pusha
mov
outs
and
cmp
pop
push
mov
cmc
and
xor
and
sub
push
cmps
push
pusha
push
fadd
jb
aam
test
jae
pop
push
jmp
cmp
adc
shl
inc
mov
movs
push
jb
es
sbb
ss
adc
mov
pop
clc
sbb
inc
and
fld
or
ja
ins
pop
bound
pushf
and
xchg
push
fidiv
ret
imul
imul
jmp
gs
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
add
dec
jp
mov
and
push
jge
cdq
jbe
inc
retf
pop
mov
pusha
test
das
fwait
pop
inc
jb
jl
inc
inc
xor
pusha
fwait
inc
in
repnz
mov
lds
test
inc
xchg
inc
sbb
iret
add
cmp
out
repz
and
pop
xchg
jbe
sbb
adc
inc
sbb
pop
jp
aad
dec
popa
mov
cs
mov
cmps
sub
das
test
sbb
push
and
and
push
sub
or
pop
sbb
jle
dec
and
ds
sahf
adc
inc
or
mov
jg
jmp
ins
jp
push
add
xor
aaa
or
aas
je
pop
or
jno
dec
jecxz
repz
popf
sub
and
dec
cmovae
(bad)
pop
arpl
les
sub
cmp
inc
mov
and
mov
inc
jno
in
pop
ficomp
mov
imul
pop
cmp
out
xchg
cmp
enter
sbb
push
cld
imul
cmp
adc
movs
pop
clc
sub
inc
xchg
push
ss
adc
push
sbb
dec
js
jbe
gs
fdiv
mov
ins
pop
sub
sbb
sub
inc
adc
cwde
daa
jb
jnp
lods
pusha
ficomp
outs
inc
inc
inc
push
jecxz
jno
movs
ins
mov
lock
jle
fisttp
ins
lock
pop
xor
out
sub
pop
fbstp
mov
push
add
gs
ins
or
call
jle
sbb
push
sub
and
push
xor
jb
mov
imul
cmp
push
icebp
aaa
cdq
add
and
add
push
jns
out
call
and
xor
xor
popa
shr
psubd
and
jle
in
sbb
xor
jge
push
and
sub
or
inc
add
jne
js
xor
daa
in
inc
or
jl
outs
stc
pop
cs
mov
js
sahf
sub
pop
cmp
jno
int3
ss
inc
sub
push
dec
cmps
dec
fwait
push
mov
xor
movs
jbe
outs
je
dec
mov
dec
fs
and
sub
fwait
imul
and
push
leave
inc
pop
push
and
and
ja
cmp
dec
cs
xor
jno
dec
jne
push
(bad)
jg
dec
adc
add
dec
or
sub
outs
xor
mov
nop
popa
mov
pmullw
mov
xor
jmp
pop
ins
sbb
sub
call
xor
xchg
jbe
pop
push
push
jl
jae
jp
aas
push
xor
adc
adc
jae
sub
cmp
movs
imul
dec
and
pop
xor
jne
sub
or
in
dec
or
xor
or
retf
xor
test
sar
push
clc
xor
sub
adc
dec
sbb
retf
or
sbb
je
cmp
div
(bad)
ins
and
ins
jns
cmps
dec
(bad)
cmp
add
xor
cmp
loopne
mov
push
xlat
inc
loop
xchg
push
stos
jae
add
nop
xor
je
sub
inc
aam
test
in
ds
cmp
adc
sub
push
or
sbb
repz
or
add
(bad)
jp
sbb
outs
pop
push
sub
imul
push
adc
push
push
mov
push
rcr
gs
sub
fnstsw
sbb
pusha
push
jge
cmp
push
dec
pop
and
inc
xchg
push
mov
cmp
adc
pop
cmp
inc
pop
jg
push
mov
dec
jbe
cwde
or
fstp
test
adc
adc
ds
and
sub
es
dec
int
fs
push
arpl
ja
dec
sbb
xor
push
jnp
jns
dec
dec
ins
or
jl
dec
outs
and
cwde
imul
adc
inc
shl
ins
je
es
xor
jns
je
adc
dec
cli
ins
repnz
inc
jno
and
sub
push
push
dec
sub
or
jns
jns
jp
jae
push
mov
jne
unpckhps
sbb
mov
xchg
push
pop
push
lods
and
ds
jge
inc
jno
test
add
arpl
iret
sub
dec
sahf
sbb
pop
mov
and
jmp
mov
mov
xor
call
pop
sub
add
popf
pop
ret
dec
fstp
aaa
stc
push
xor
out
dec
mov
and
jno
add
jae
jp
pop
xor
ss
cmp
jnp
add
inc
pop
mov
arpl
cvtps2pi
sub
jb
sbb
adc
pop
sub
gs
popa
jns
outs
cmp
push
cmp
inc
inc
pop
test
movs
jae
or
add
or
xor
stc
sub
or
pop
rcr
shl
add
sub
bound
jno
jle
scas
sub
dec
shl
ins
ss
ins
aas
or
push
push
push
imul
push
das
imul
inc
rcr
imul
sub
aam
adc
adc
adc
imul
daa
call
push
sbb
sbb
ins
cmp
stos
pop
call
and
and
push
or
sbb
xor
jle
dec
js
ret
inc
mov
jno
imul
sub
inc
in
push
and
dec
push
popa
and
pop
or
push
cmp
es
sub
sub
dec
idiv
data16
repz
aas
inc
adc
jae
add
sar
pop
jle
push
std
jl
pop
loope
pusha
pop
inc
pop
xchg
push
pop
cmp
dec
add
push
xchg
adc
push
(bad)
into
xor
inc
mov
adc
mov
sub
dec
cmp
add
dec
fidiv
push
stc
cmp
aas
mov
pop
test
call
dec
test
xchg
aas
call
push
cs
dec
push
xchg
inc
xchg
sbb
imul
test
fs
and
fadd
pusha
ja
sub
popa
dec
add
imul
xor
jp
dec
cs
mov
pop
mov
xor
or
cmovno
adc
dec
push
pushf
(bad)
addr16
addr16
sub
imul
add
pusha
sar
jne
add
aaa
pop
push
or
and
daa
xchg
or
mov
sbb
inc
push
mov
call
daa
pop
sbb
ss
dec
out
adc
je
jae
and
mov
jle
sub
comiss
cmp
sbb
mov
add
bound
adc
push
dec
jb
push
fnstsw
push
ins
dec
dec
inc
dec
xchg
das
sub
in
jns
jle
add
sbb
jne
and
iret
dec
pop
sub
out
aas
xor
cs
xor
inc
add
dec
repz
jg
clc
inc
jmp
sbb
arpl
ret
ja
jne
pop
pop
inc
pop
jbe
adc
es
bnd
push
mov
xchg
sbb
sbb
aaa
xchg
cmp
push
pop
xor
lds
dec
adc
cmp
dec
ds
push
(bad)
pop
or
rcr
or
add
adc
outs
cmp
dec
add
push
xor
int
ficomp
fcom
inc
pushf
das
ins
push
jnp
je
inc
(bad)
cmp
lds
addr16
in
aaa
inc
jl
cmp
and
push
lea
inc
in
addr16
clc
xor
sub
ss
dec
dec
ins
push
pop
bound
das
mov
jge
pop
sub
pop
or
cmp
jb
pop
pop
cmp
cmc
pop
xchg
pop
push
aaa
mov
or
jp
dec
ret
data16
adc
mov
cmp
add
adc
and
and
xor
fidivr
jne
or
jbe
add
or
inc
add
jno
(bad)
jne
jl
sub
pusha
sub
aas
jo
mov
add
inc
or
inc
cmp
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
cs
inc
add
neg
adc
daa
sub
aas
add
daa
gs
mov
imul
or
scas
dec
clc
inc
add
stc
and
outs
sub
jo
jnp
dec
aam
xchg
ja
fistp
imul
sbb
push
outs
nop
dec
clc
or
outs
mov
fdiv
push
jae
and
inc
jno
sbb
popf
dec
outs
imul
sbb
xor
jnp
sub
mov
push
jb
sbb
adc
sub
out
(bad)
jge
push
or
mov
cmp
daa
rol
push
fld
cmp
pop
aad
mov
push
dec
adc
jne
pop
dec
adc
jp
push
test
dec
mov
ja
pop
lds
js
adc
mov
cmp
pop
cmps
sbb
push
or
rol
sbb
test
stos
or
xor
es
cmp
dec
push
xor
pop
sub
add
push
xor
cdq
jnp
inc
addr16
ss
inc
pushf
xor
dec
cmp
inc
push
sti
ds
ins
rcr
repnz
test
or
pusha
mov
mov
pop
dec
pop
sub
imul
mov
add
inc
xchg
and
sbb
dec
aaa
dec
add
push
icebp
dec
and
and
and
jle
jo
pop
pop
cmp
or
sub
cmp
inc
sbb
push
jb
and
add
jne
js
jnp
sbb
ins
pop
mov
fidivr
dec
les
cmp
inc
and
or
mov
in
xor
daa
mov
mov
jbe
push
pop
adc
mov
pop
inc
xchg
inc
sbb
or
cs
dec
test
jae
mov
jecxz
push
bound
ins
sbb
sub
jb
push
sub
inc
(bad)
sbb
addr16
jle
dec
sub
dec
loop
pushf
cmp
mov
add
cmp
mov
jp
ins
jl
dec
jne
sbb
push
ins
and
xchg
push
in
push
cmp
pushf
dec
fwait
pop
jp
sbb
or
sbb
xor
aas
retf
push
pop
jae
add
adc
jp
jb
outs
or
cs
cdq
sbb
inc
mov
sub
or
addr16
push
mov
add
jle
push
push
into
sub
jno
sub
add
and
push
cmp
outs
enter
imul
cmps
adc
sub
cmp
sub
cmp
nop
inc
data16
push
mov
pop
sbb
pop
and
cdq
ins
mov
inc
inc
dec
stos
jge
cmp
test
pop
sbb
movs
pusha
mov
pop
or
sub
pop
xor
pop
rol
outs
pop
cmps
cmp
cmp
mov
jle
jge
push
xchg
pop
mov
pop
mov
sub
(bad)
jo
xor
enter
adc
sub
je
jnp
pop
xor
(bad)
adc
adc
aaa
mov
pop
scas
push
inc
xor
ds
sub
dec
dec
gs
mov
loop
call
cmp
cmp
or
stc
pop
imul
sub
sub
jge
dec
stos
(bad)
fistp
cmp
add
push
mov
pop
imul
je
or
ss
sbb
jae
xchg
or
add
fimul
add
sbb
jb
adc
sbb
or
or
pop
retf
outs
adc
jbe
push
leave
cmp
aas
mov
sub
jnp
jmp
popa
add
jae
pop
dec
test
jle
or
or
fsub
sbb
or
xor
int3
gs
jb
jl
adc
fs
inc
push
pop
stos
inc
pop
add
mov
ds
adc
stos
sbb
test
je
cmp
or
push
mov
sbb
imul
cs
or
pop
jl
jp
push
retf
jne
dec
push
sbb
out
(bad)
stc
add
dec
cmp
push
stos
and
push
in
jmp
aaa
sbb
cs
ret
push
jae
mov
xchg
push
stos
arpl
nop
adc
sbb
add
dec
xchg
dec
cmp
cmps
xor
vmread
add
scas
adc
and
dec
outs
movs
inc
test
out
xor
xor
pop
dec
into
dec
jae
leave
or
jbe
imul
jnp
popa
nop/reserved
or
pop
inc
jg
pop
jle
cmp
add
and
dec
int
shl
adc
adc
xor
xchg
(bad)
jmp
mov
call
mov
xor
call
pop
sub
add
popf
pop
ret
and
ds
stos
outs
jmp
mov
js
and
push
cmp
popa
and
or
cmp
in
jge
jb
inc
lds
loopne
add
pop
push
aaa
gs
add
jg
ins
popa
imul
mov
call
jne
imul
movs
jle
adc
cmp
es
cld
pop
mov
mov
shl
dec
sbb
jbe
xor
sbb
dec
cmp
push
ds
cli
jmp
es
jns
jne
sub
cwde
push
test
fld
mov
push
and
neg
inc
daa
mov
and
(bad)
cmp
pop
mov
xlat
and
push
aas
jo
jo
pop
cwde
pop
mov
sbb
adc
push
dec
jl
inc
mov
fs
pusha
sub
xlat
inc
leave
and
jb
and
push
mov
ret
push
adc
and
pop
inc
add
js
sbb
mov
test
sbb
ins
add
ins
adc
out
jo
std
push
pusha
adc
mov
cmp
leave
xor
cmp
sbb
mov
jae
gs
jnp
jge
arpl
pop
inc
push
inc
push
fidivr
int3
outs
mov
scas
xor
add
cmp
or
bound
data16
je
sbb
push
jb
in
arpl
adc
sbb
cmp
push
out
cwde
jo
je
dec
add
mov
test
inc
xor
inc
sbb
pop
inc
xchg
jle
add
jmp
or
jb
jg
and
xor
push
xchg
jo
jae
jp
cs
dec
pop
push
or
mov
adc
movs
imul
push
xor
scas
and
sbb
jb
adc
inc
into
push
inc
xor
jo
inc
add
mov
je
inc
gs
cmp
jne
jl
add
jo
fisub
addr16
dec
out
jle
and
sbb
jp
js
or
call
sub
dec
adc
or
and
mov
ret
adc
xor
daa
and
ins
int
sub
push
ins
adc
je
mov
sbb
inc
jb
(bad)
or
xor
jb
pop
jne
mov
pop
push
pop
dec
sbb
add
add
push
adc
dec
dec
jle
sub
cli
sbb
jnp
dec
test
dec
pop
inc
mov
sbb
cdq
data16
push
into
or
ret
add
jge
ins
paddw
fmul
xor
(bad)
sub
jle
jge
pop
add
popf
jo
sbb
dec
les
adc
pop
out
pop
jle
sub
jle
pop
dec
gs
daa
test
jbe
sub
popa
sub
push
cmp
jae
or
jg
xor
cs
xor
fwait
pop
sbb
test
jb
and
and
pop
shl
mov
ja
jo
inc
dec
inc
cmps
push
jb
into
pop
jno
mov
stos
push
test
dec
mov
js
aad
jae
das
push
adc
pop
pusha
fs
jnp
jns
jae
and
adc
out
jne
inc
hlt
adc
push
iret
adc
sbb
xor
add
and
sub
jle
mov
outs
adc
pop
loope
sbb
sbb
and
addr16
sbb
add
adc
push
xlat
pop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
jle
dec
pop
cmp
jl
push
out
jl
mov
push
push
inc
leave
je
pop
fdivr
fistp
inc
sbb
out
pop
cmp
or
ins
jo
pop
or
psrad
add
xor
pop
inc
dec
xor
sbb
dec
cmp
xchg
jbe
inc
call
dec
mov
and
pop
bound
add
dec
jae
pop
ja
jle
pop
mov
sub
xor
xor
test
xor
pop
push
push
mov
es
cmp
sub
xor
sbb
sbb
inc
fdivr
sbb
mov
dec
(bad)
cmp
cmp
fnstcw
js
das
push
shl
inc
es
inc
rcl
sbb
mov
test
push
lahf
and
ja
adc
(bad)
push
add
pop
sbb
dec
aaa
add
pop
loopne
(bad)
je
fs
outs
aaa
push
into
adc
push
xor
push
sub
sbb
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
adc
pop
std
popa
mov
pop
sub
or
adc
sub
lea
fs
sbb
neg
rcr
push
(bad)
or
or
sbb
pop
pop
push
repz
push
cmp
add
mov
add
cmp
dec
les
jae
pop
dec
xor
outs
jp
or
push
leave
aas
enter
aaa
outs
sti
and
mov
mov
ins
pop
addr16
jp
inc
fld
or
xor
push
cmp
imul
imul
jle
gs
inc
les
arpl
jne
sub
pop
shl
cmp
cmp
dec
inc
shr
sbb
dec
or
and
(bad)
cmp
aad
inc
jo
push
or
xchg
pop
inc
inc
mov
or
call
push
push
add
adc
xchg
adc
clc
pop
es
fsub
pop
mov
jno
ja
push
and
or
aaa
lds
data16
int3
sbb
add
js
ins
pop
fdiv
inc
rcl
out
shl
es
pop
push
ins
fnstenv
ins
mov
push
xor
cmp
adc
jae
sub
jle
or
xchg
sbb
dec
jb
inc
(bad)
arpl
arpl
ins
push
xchg
ja
add
das
fisttp
xor
jns
iret
inc
xor
aas
fist
fist
(bad)
jge
imul
and
sub
fdivr
push
out
or
pop
jb
dec
and
push
bound
outs
push
inc
sbb
push
mov
outs
push
push
pop
cmp
jl
ss
outs
xor
dec
sub
aaa
push
inc
psrlw
int3
add
jp
xor
imul
inc
add
add
cwde
dec
xlat
dec
stos
push
shr
jp
arpl
jg
div
add
cmp
cmp
adc
push
and
and
add
inc
and
xor
cli
sub
inc
sti
dec
pop
dec
dec
push
cmp
or
dec
cli
bound
jge
outs
test
inc
xlat
cs
dec
(bad)
popa
fsubr
push
popf
inc
loop
test
mov
xor
sbb
push
sbb
cwde
push
mov
mov
adc
sbb
jg
cmp
bnd
and
outs
clc
ins
dec
push
push
jo
or
gs
or
sub
imul
sbb
arpl
inc
jp
jo
adc
jne
jb
es
jg
push
scas
popa
and
sbb
mov
add
(bad)
or
jnp
inc
cmp
cmp
dec
test
enter
lods
jnp
push
stc
push
mov
dec
dec
and
adc
sbb
imul
sbb
arpl
pusha
rcl
or
push
je
push
cmp
inc
dec
inc
and
xchg
push
and
and
je
fs
js
sub
bound
jo
pop
xor
mov
ins
enter
repz
add
sbb
cmp
pop
cmp
add
sub
sub
cdq
jge
dec
push
cmp
in
sbb
shl
sub
sub
jg
and
das
pop
xor
push
jecxz
loope
mov
outs
jnp
ss
call
dec
jg
mov
cmps
adc
jge
add
sbb
add
inc
mov
sbb
or
and
sub
and
push
xor
inc
outs
ins
dec
ja
push
ror
dec
sbb
aaa
movs
sbb
add
or
dec
xchg
adc
sbb
adc
add
(bad)
and
push
iret
adc
sbb
adc
fiadd
inc
ins
cmp
dec
inc
sbb
test
mov
fs
push
dec
pop
outs
push
rcr
pop
js
xor
ins
mov
rcr
(bad)
jmp
inc
mov
bound
and
jge
sub
fs
or
(bad)
cmp
adc
inc
ds
inc
movs
adc
sub
push
push
dec
adc
jg
sbb
xchg
pop
popf
add
inc
(bad)
das
data16
push
cs
scas
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
bound
mov
xor
and
sbb
inc
je
jge
jge
cmp
aaa
push
cmp
mov
cmp
ins
and
xor
xchg
ja
pop
cld
sbb
adc
cmp
imul
pop
outs
imul
jno
arpl
cs
cmp
or
js
and
cs
jnp
xor
stos
pusha
mov
mul
and
push
jnp
cwde
inc
sbb
jg
jp
sub
sub
pop
push
sbb
cmp
dec
or
lea
sbb
cmp
jl
pop
mov
xor
dec
outs
stos
jne
jne
jb
push
fbld
cmp
mov
and
cmp
jbe
or
mov
and
je
ficom
test
stos
adc
sbb
adc
mov
imul
dec
jb
pop
mov
gs
push
inc
mov
push
ja
or
push
jbe
adc
daa
adc
mov
mov
inc
push
fs
je
sbb
fdivr
jbe
mov
add
xor
push
add
rcl
cwde
imul
dec
scas
jg
arpl
jno
hlt
push
add
xor
(bad)
and
cmp
call
xor
or
ret
and
xor
xor
pusha
pop
dec
and
or
sbb
pop
jmp
sbb
cdq
aas
dec
pop
mov
mov
popa
dec
sbb
add
out
adc
adc
add
add
pop
sub
sbb
js
aas
add
push
sbb
cmp
adc
pop
sub
sub
dec
or
pop
mov
jl
out
in
pop
cmp
or
imul
js
popa
es
jno
adc
jnp
ins
clc
jl
jnp
adc
cli
imul
arpl
bound
jg
sub
push
imul
push
pop
stc
pop
repnz
jl
sbb
in
mov
ja
(bad)
push
mov
pop
lods
xor
jle
sbb
jne
push
jg
push
push
sbb
ror
mov
jae
and
js
add
aas
pop
push
sbb
pop
cmp
repz
sub
xor
outs
adc
sbb
inc
mov
add
jae
inc
outs
mov
push
ss
adc
addr16
inc
adc
mov
imul
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
dec
stos
or
pop
inc
add
dec
sbb
inc
or
cmp
jp
pop
pop
dec
fsubr
cmp
jae
inc
clc
cmp
aas
lods
(bad)
lock
ss
add
xchg
fistp
add
(bad)
in
and
push
sbb
sahf
dec
cmp
sbb
jo
and
adc
pop
sti
xor
cmp
push
les
cmovl
jl
pop
popf
inc
fsub
inc
push
jmp
test
sbb
dec
push
dec
loop
pop
inc
div
push
cmp
jl
pop
sbb
push
xchg
adc
sub
push
outs
jne
jge
dec
jno
push
pop
retf
pop
and
fs
xor
jg
lds
ins
ins
mov
xchg
sub
dec
sbb
adc
sub
mov
and
bound
pop
push
push
mov
dec
je
jge
cmp
fcomp
add
sbb
ds
jge
cmp
data16
or
or
pop
push
dec
cmp
xor
sbb
sbb
imul
ror
aaa
adc
inc
aas
pop
ds
cmp
enter
lods
xor
cmp
jge
pop
ins
jp
push
test
xor
and
sbb
sbb
ss
adc
and
ins
and
jnp
adc
and
ins
popa
cmp
seta
int
push
or
pop
aaa
das
and
push
call
ins
out
and
and
cmp
dec
outs
push
mov
xor
push
das
lea
dec
mov
out
je
cmp
jbe
inc
lods
add
pop
addr16
repz
jo
js
aas
and
adc
or
das
push
aaa
daa
inc
push
cmp
xor
pop
dec
xor
push
and
adc
pop
fsub
sbb
shl
imul
and
sbb
xor
sbb
pusha
dec
sub
push
inc
int
pop
pop
jne
cmps
xor
ja
jl
adc
adc
and
jge
push
aaa
pop
pop
sub
lahf
outs
lahf
sub
add
adc
cmp
mov
imul
int
mov
daa
push
push
xlat
or
imul
ucomiss
jae
sub
adc
push
pop
add
jo
jbe
cmp
pop
jo
push
outs
test
xchg
inc
movs
push
shl
mov
inc
and
pop
das
mov
and
sbb
adc
aam
pop
or
push
sub
dec
sbb
in
sbb
push
enter
adc
jl
push
push
jne
jmp
dec
push
aaa
or
sbb
dec
xor
in
inc
jae
ror
add
dec
xor
inc
out
jbe
and
inc
scas
inc
je
sub
pop
inc
(bad)
pop
sbb
cmp
cmp
add
adc
sbb
push
mov
rcr
aaa
fs
shl
xor
das
jge
dec
push
pop
jmp
data16
out
push
xchg
sbb
or
push
jno
mov
in
hlt
add
jbe
aas
push
mov
arpl
pop
ret
jno
and
jae
dec
lea
mov
rcr
xchg
push
aaa
pop
scas
dec
jg
mov
ins
jo
inc
neg
ins
js
and
sub
pop
inc
ja
jg
xor
adc
mov
or
jnp
loope
mov
adc
cmp
cmp
cmp
sbb
es
inc
mov
mov
adc
bound
adc
repnz
fadd
fsub
pop
outs
xor
bound
push
in
das
push
jecxz
iret
aas
sub
adc
int3
or
push
jge
dec
js
fiadd
xor
cs
push
mov
test
or
and
inc
loop
sahf
pop
ins
dec
jl
xchg
xor
jno
sub
and
and
add
sub
or
repnz
pop
sub
test
and
pop
pop
inc
dec
push
cmp
cmps
add
ins
mov
jle
mov
fwait
pop
push
lods
das
push
or
sbb
fdiv
imul
cmp
xor
cmp
js
inc
push
dec
popf
pop
pop
outs
test
sub
push
jb
xor
or
pusha
rcr
pop
and
inc
adc
bound
jp
dec
scas
sbb
xor
daa
aad
stc
pop
loope
call
cmp
jnp
inc
call
fs
js
add
cmp
dec
push
pop
jp
sub
ins
xor
and
(bad)
push
cmps
push
imul
outs
outs
sbb
je
test
dec
mov
loopne
cmp
out
outs
push
pop
cmps
jne
sub
inc
dec
adc
dec
dec
das
js
push
dec
xchg
xor
ja
or
ror
jo
call
dec
sbb
jbe
dec
xchg
jge
inc
push
sbb
addr16
or
push
in
jle
push
xchg
xor
or
sub
xor
das
mov
mov
inc
popf
xor
and
bound
or
or
pop
inc
pop
shr
inc
and
push
test
jl
push
and
xlat
xor
daa
add
ss
int
push
add
adc
push
addr16
inc
dec
(bad)
ins
not
xchg
adc
dec
mov
pop
or
jle
xchg
outs
ins
xor
dec
hlt
jns
cmp
lahf
jns
imul
dec
add
cmp
xor
push
fldenv
jne
sub
jo
rcl
test
sub
dec
ds
and
push
xor
jo
ins
mov
mov
inc
mov
ins
cli
jp
sub
imul
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
or
xor
dec
and
inc
les
xor
das
adc
or
sar
ret
cmp
cdq
pop
leave
sbb
adc
adc
inc
rcl
sbb
mov
dec
xor
sbb
pop
retf
sbb
addr16
aaa
push
push
addr16
dec
cmp
arpl
fidiv
jmp
data16
xchg
sub
push
ins
sub
bound
dec
mov
inc
pushf
adc
jne
xor
xor
adc
or
pop
xchg
jno
jae
add
js
jne
jge
fcom
push
and
dec
mov
jo
and
gs
or
adc
retf
pop
and
adc
outs
jns
push
push
(bad)
add
jg
pop
mov
jecxz
xchg
sbb
push
fbld
ret
sbb
outs
or
fwait
sbb
ins
mov
sbb
pop
cwde
sub
adc
adc
ja
xor
imul
rol
sub
je
xor
pop
or
adc
adc
push
sub
adc
add
add
out
jmp
jnp
sbb
cmp
sub
imul
inc
dec
push
clc
das
out
dec
cs
inc
jbe
pop
adc
jb
js
or
push
daa
cmc
sbb
push
or
idiv
jo
adc
js
imul
and
xor
adc
cmp
jbe
lock
fsubr
xor
inc
stc
push
mov
push
pop
xor
outs
ja
data16
dec
xor
push
or
adc
cmp
or
popa
sti
cmp
and
or
inc
in
sbb
jae
inc
sub
inc
sub
je
in
sbb
push
push
pop
outs
xor
cmp
xor
push
das
mov
push
inc
dec
pusha
adc
pop
mov
jge
sub
inc
push
and
xor
or
arpl
(bad)
jge
adc
adc
mov
xchg
call
xor
mov
inc
mov
or
adc
mov
out
xor
pop
js
js
pop
jns
outs
imul
sar
dec
mov
inc
jge
sub
(bad)
push
addr16
cmp
jge
sub
sub
inc
push
mov
call
xor
and
push
push
imul
je
aaa
pop
xchg
sub
push
jmp
popf
add
icebp
xor
push
mov
mov
fwait
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
xor
adc
sbb
arpl
ror
xor
and
push
dec
inc
fwait
add
movs
add
arpl
lea
fs
inc
mov
cld
sub
cmp
cmp
adc
or
or
cmp
add
xor
add
cmp
cmp
gs
lahf
push
push
adc
pusha
inc
dec
imul
push
and
shr
lock
jb
mov
inc
test
push
cmp
sbb
cmp
ds
or
jae
cmp
dec
ins
and
dec
push
pop
mov
jno
sbb
jo
push
xor
cmp
or
aaa
pop
push
sbb
cld
dec
xlat
add
push
and
add
inc
fs
and
cmp
jg
push
dec
gs
and
add
and
inc
pop
inc
loopne
cmps
push
jmp
inc
inc
inc
pushf
xor
aas
xor
or
outs
sbb
dec
push
dec
ret
sbb
mov
daa
jae
les
setae
sbb
jno
ja
ja
jno
push
mov
sbb
test
and
inc
addr16
int3
and
cmp
sub
sbb
pusha
(bad)
cmp
adc
mov
stc
xor
push
inc
mov
adc
dec
jmp
test
and
adc
repz
pop
pop
push
push
fnstenv
pop
fwait
pop
lods
inc
into
sub
es
sbb
jne
ucomiss
sub
pop
mov
pushf
dec
mov
pop
xchg
setge
mov
inc
or
cmp
loope
cmp
jecxz
pop
and
movs
and
sub
push
ret
inc
jmp
cs
sub
or
pop
jp
pop
adc
cdq
and
jnp
push
mov
pop
xor
mov
dec
fnsave
xor
es
pusha
or
inc
adc
sub
xor
mov
jb
outs
pop
cld
jo
es
or
ficom
dec
enter
in
sbb
cmp
pop
jg
inc
adc
sbb
sub
jb
ja
or
ins
add
fs
mov
xor
and
inc
adc
jb
sub
push
sbb
pop
sub
xor
adc
push
adc
push
jns
push
(bad)
arpl
xor
push
leave
dec
shl
mov
inc
xor
or
movs
sbb
sbb
adc
pop
fs
adc
pop
jns
dec
cmps
or
pop
test
jg
inc
jecxz
xchg
and
dec
push
xor
add
add
(bad)
or
pop
inc
fnstsw
adc
dec
int3
dec
rcr
mov
lods
jbe
and
dec
aas
push
(bad)
jbe
sbb
push
mov
es
add
ror
clc
push
mov
daa
test
push
pop
sub
ja
pop
mov
jns
jbe
pop
xor
pop
xor
dec
sub
push
jae
push
cmp
xor
dec
or
jnp
push
jo
jp
jl
push
ins
add
jbe
xor
sub
out
or
adc
mov
outs
popa
xchg
dec
in
pusha
lods
adc
pop
xor
xlat
push
jle
leave
lea
adc
or
aas
leave
sub
aaa
pop
es
int
data16
adc
pop
mov
icebp
jae
fs
cmp
bound
pushf
xor
jb
outs
fs
retf
jns
inc
repz
lahf
sbb
lea
dec
imul
xor
adc
cmp
pop
sbb
xor
int3
jne
ja
cs
jl
xchg
sbb
jns
das
ins
cmp
data16
shl
pop
sub
and
movs
jo
xor
xor
add
jl
mov
cs
dec
or
adc
(bad)
dec
inc
and
mov
xor
inc
inc
push
inc
xor
push
sbb
dec
push
adc
and
adc
clc
sbb
mov
les
or
sbb
outs
lea
sbb
mov
pop
ins
jno
push
add
dec
pcmpeqb
daa
inc
cmp
inc
(bad)
push
std
push
jge
out
fdiv
cmp
mov
(bad)
cmp
cs
hlt
and
enter
sub
mov
jno
sub
mov
sbb
add
dec
jns
push
and
add
sbb
push
or
pop
movs
sbb
jnp
pop
cmp
xor
pop
sbb
mov
movs
bound
push
lock
ins
mov
dec
sar
push
jno
and
inc
(bad)
(bad)
pop
pop
sub
adc
aas
mul
aas
mov
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
jle
cmp
sbb
push
push
pop
outs
pop
stc
sub
xchg
inc
cmp
cmps
pop
jnp
pop
daa
jp
pop
pop
fimul
xchg
push
dec
adc
push
adc
push
or
pop
cmp
inc
or
adc
dec
pop
add
hlt
ins
dec
(bad)
inc
mov
ja
jle
push
xchg
ins
pop
xor
js
pop
pop
sub
retf
pop
loope
mov
inc
mov
sub
sub
mov
push
(bad)
imul
jo
jns
sbb
cmp
dec
cs
sub
(bad)
dec
add
fwait
sbb
icebp
push
jp
dec
xor
push
daa
push
scas
xor
push
jge
and
sti
dec
icebp
dec
lahf
or
gs
int
lods
cmp
sub
callw
es
sbb
jno
jbe
push
js
sbb
jge
cdq
and
ins
add
push
and
shl
outs
push
jge
ins
jmp
jl
dec
mov
dec
mov
cmp
add
push
adc
adc
push
push
inc
enter
hlt
inc
mov
outs
inc
push
sbb
dec
and
jno
cmp
dec
push
arpl
gs
ja
retf
add
dec
pop
arpl
inc
mov
mov
and
push
ret
jne
push
(bad)
es
add
push
cmp
imul
jl
into
dec
and
dec
fs
xor
addr16
out
push
or
push
dec
push
adc
dec
jns
sbb
fist
aaa
sbb
push
ins
mov
jle
add
dec
std
jle
adc
jmp
xchg
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
pop
in
data16
sub
cmp
inc
ins
add
push
pop
pop
mov
popf
outs
mov
pop
mov
sub
adc
push
push
fwait
push
std
sub
cmp
push
push
and
rcr
ficom
adc
pop
add
out
or
mov
sbb
pop
cmp
outs
in
aas
sti
and
add
fmul
jo
jnp
sub
and
sub
dec
mov
daa
cmp
sub
and
iret
arpl
sbb
jnp
dec
or
hlt
or
cs
pop
ds
ds
push
out
arpl
jb
inc
xor
cmc
push
and
je
xor
pop
push
sbb
push
out
adc
scas
push
inc
jp
aas
add
push
sub
dec
mov
sub
fdivr
add
pop
dec
popa
or
pop
push
ja
fs
iret
and
push
adc
pop
leave
xor
lods
bound
sub
cmp
jge
and
adc
lds
push
(bad)
fs
xlat
sbb
iret
ds
sbb
ss
xchg
pop
add
aas
and
pusha
loopne
loope
inc
jg
add
(bad)
push
mov
popf
data16
jge
lea
xor
or
mov
xor
sub
sub
outs
and
pop
adc
cmp
pop
jb
xor
jne
movntps
dec
push
dec
pop
das
push
pushw
sub
inc
jne
or
nop
sbb
fild
add
add
jne
jmp
jns
jo
push
mov
adc
imul
cs
ins
aaa
cmp
mov
add
pop
mov
jo
adc
adc
adc
mov
or
in
or
mov
mov
add
je
jno
adc
jns
cmp
xchg
call
outs
movs
pop
outs
push
adc
pop
mov
cwde
jbe
popa
daa
xor
js
aas
mov
push
adc
jle
das
mov
cmp
out
loopne
in
test
cmp
xor
and
dec
dec
mov
arpl
dec
push
sub
add
imul
aam
lock
inc
cs
pop
sub
jno
adc
or
imul
add
(bad)
adc
dec
mov
lds
ja
push
jge
dec
leave
ss
cmp
cmp
inc
sti
dec
dec
dec
test
imul
mov
js
sbb
pop
inc
push
xor
pop
aaa
adc
imul
mov
iret
aas
fs
jns
push
mov
push
push
sbb
and
inc
shr
bound
xor
stc
gs
add
aas
jne
bound
mov
or
cmp
fdiv
(bad)
das
jae
cs
adc
and
lods
sub
outs
pop
add
scas
push
ins
push
mov
xor
add
pop
ds
not
push
push
call
jle
adc
popa
popf
ja
xor
stc
pop
ret
addr16
enter
loop
ins
add
add
sub
outs
js
into
sbb
mov
mov
add
data16
cs
cmp
add
add
add
test
adc
outs
call
xor
push
xchg
je
jns
push
xor
xchg
out
and
adc
push
in
sub
adc
push
cdq
pusha
es
jb
dec
cmp
adc
aaa
test
test
leave
jg
js
or
inc
jp
jno
std
or
push
adc
sbb
cmp
or
pop
xchg
pop
(bad)
sbb
add
sub
out
add
iret
inc
test
mov
sbb
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
push
cmp
imul
adc
jne
sbb
jle
sbb
xchg
sbb
pop
sbb
add
mov
test
inc
pop
je
sbb
dec
je
call
jb
inc
add
ins
adc
cmps
popa
add
outs
xlat
pop
call
and
aaa
loope
jne
shl
mov
cmp
and
inc
jmp
pop
jmp
nop
cmp
sub
sbb
dec
cmc
push
cwde
and
pop
xor
xor
and
push
int
and
fsubr
sbb
xlat
inc
imul
gs
push
mov
xor
adc
dec
sahf
scas
pop
sub
sbb
dec
lods
add
xchg
gs
pop
loop
cdq
add
imul
cmp
sbb
push
not
or
outs
stc
pop
rol
sbb
pop
outs
(bad)
out
jne
jae
push
xlat
push
jb
icebp
jg
pop
xor
mov
cmp
inc
leave
push
add
or
lds
imul
and
sbb
stos
jne
or
sub
jae
js
inc
(bad)
aas
movs
jne
daa
adc
fs
xor
push
rol
test
(bad)
aad
sub
popf
push
mov
stos
dec
push
xor
xchg
push
mov
adc
jo
js
jnp
pop
cmp
pop
mov
inc
or
cmp
add
mov
cs
sbb
inc
and
dec
push
jb
outs
jmp
gs
cdq
add
dec
sbb
and
and
or
sbb
sub
and
xor
popa
pop
push
cmp
jge
js
dec
dec
xchg
and
dec
pop
jae
fisttp
inc
lock
ror
jg
push
xchg
sub
dec
and
jno
inc
push
pop
pop
fs
xchg
or
jl
test
pop
test
jne
or
cmp
sbb
sub
push
outs
jle
sub
jo
adc
pop
cmp
inc
outs
dec
es
jne
push
es
xchg
jle
push
test
aad
(bad)
adc
sub
cmp
ins
addr16
adc
sbb
loope
dec
push
push
jle
or
dec
adc
pop
ud2
add
jne
sbb
dec
fs
dec
sub
xor
pop
inc
mov
pop
out
xor
push
mov
add
inc
push
inc
sub
mov
and
push
and
pop
scas
xor
addr16
pop
jnp
adc
cmp
sub
pop
and
sub
pop
jne
push
xchg
cmp
dec
mov
and
jge
add
push
sbb
sbb
push
push
imul
and
ret
pop
pushf
adc
dec
mov
mov
imul
add
fwait
add
dec
leave
data16
pop
sub
mov
inc
inc
pop
cmp
iret
and
iret
push
jp
scas
dec
xchg
jo
push
movs
and
sbb
adc
push
or
jnp
add
rcr
adc
adc
and
cmp
or
jbe
adc
or
cmp
ja
add
sahf
ja
and
jnp
ror
sub
jg
pop
outs
jo
sub
popf
ss
adc
adc
ins
jg
outs
xlat
pop
(bad)
jae
xor
jl
dec
cmps
or
xor
mov
aam
xor
xor
fnstenv
adc
jae
adc
jmp
dec
mov
test
(bad)
imul
cmp
dec
or
sbb
push
scas
push
outs
out
push
fwait
xor
push
fs
push
jb
inc
lea
fisttp
pop
ins
and
pop
nop
pop
jmp
cmp
xchg
add
add
inc
int3
and
pop
mov
sub
jb
sub
nop
pop
mov
es
sbb
lds
adc
cmp
sub
push
adc
pop
mov
adc
add
or
jle
push
mov
mov
stos
jle
sbb
and
and
aas
mov
mov
jge
ins
sub
adc
or
adc
add
cmp
jae
mov
sbb
or
jne
jge
pop
mov
pop
push
imul
or
inc
std
and
ins
pop
or
xor
push
fidiv
aaa
pop
mov
push
add
jg
inc
dec
jp
dec
push
push
mov
lock
(bad)
lock
adc
in
and
push
jg
push
inc
or
add
push
sbb
mov
bswap
pop
sub
int3
adc
je
adc
push
mov
sysret
xchg
jno
xor
dec
cmps
and
ds
fnsave
sub
inc
sahf
add
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
pop
sub
pop
xor
push
sub
jae
dec
scas
inc
adc
sub
dec
cli
sbb
xor
cmp
js
daa
fild
push
movs
sbb
stos
addr16
aaa
jno
push
sbb
adc
call
jb
adc
push
pop
(bad)
jl
repz
pop
jne
es
push
nop
ins
mov
jl
gs
je
out
mov
pop
jae
test
arpl
jl
adc
pop
fistp
mov
pop
inc
fdivr
or
sbb
and
inc
jmp
pusha
mov
and
test
cmp
cmp
sahf
sub
(bad)
movhps
dec
es
ficomp
cmp
not
mov
push
shl
lea
or
cmp
adc
sub
sbb
dec
mov
inc
add
stos
xor
push
sahf
ins
pop
mov
sub
inc
cmc
push
dec
js
jp
xor
adc
push
les
out
popf
or
push
je
inc
mov
imul
ins
js
adc
pushf
lea
(bad)
inc
icebp
arpl
(bad)
pop
cs
jb
push
inc
adc
push
jmp
sbb
sahf
and
pop
les
bound
cmp
fs
pop
daa
push
add
rdpmc
xor
das
out
adc
inc
shl
pop
jg
jb
cmp
and
add
sbb
push
mov
cmp
pop
pop
test
sub
sub
lahf
sub
or
sbb
andps
mov
fldenv
jae
add
es
jns
js
or
jge
jge
pop
or
sub
les
dec
pop
call
add
sahf
inc
jne
or
push
adc
outs
xchg
out
mov
push
jno
jne
bound
les
test
loope
cmp
pop
mov
loopne
rcr
enter
scas
cmp
mov
jo
fisttp
pop
dec
sbb
jns
adc
das
push
push
pop
and
fsubr
repnz
bound
(bad)
xor
pop
fwait
adc
sub
imul
push
push
adc
ret
fs
dec
mov
push
(bad)
jo
popa
data16
outs
jp
and
cmp
xor
jge
push
es
lods
je
jae
daa
jmp
jno
push
bound
or
lahf
je
dec
mov
les
cmp
or
pop
push
inc
aas
ficom
mov
jnp
sbb
push
inc
cs
jne
pop
retf
xor
pop
pop
xor
jnp
sub
jg
popa
xlat
adc
or
jbe
pop
es
xchg
push
out
addr16
pop
jb
inc
sub
dec
pop
jo
adc
add
xchg
and
ret
xor
inc
cmp
mov
(bad)
push
out
pusha
adc
jno
inc
mov
es
adc
sbb
inc
ins
push
movups
xor
xor
xlat
push
aad
jbe
or
mov
les
xor
jnp
or
adc
es
inc
mov
sub
pop
cmp
addr16
push
push
arpl
es
jae
push
imul
cmp
xor
and
adc
jno
push
mov
jp
sub
push
xchg
lods
pusha
push
jns
pop
imul
sub
jmp
pop
mov
jbe
or
pop
pop
dec
sahf
push
retf
jg
pop
xchg
jp
sbb
adc
push
(bad)
add
xor
jns
ja
pop
(bad)
sbb
popa
retf
push
nop
gs
das
test
call
or
movs
push
lahf
jo
pop
inc
jno
or
inc
div
call
gs
pop
push
xor
lahf
(bad)
jmp
xchg
call
mov
xor
call
pop
sub
add
popf
pop
ret
mov
dec
jno
xor
dec
mov
scas
ja
sub
or
aam
cld
pop
fidivr
arpl
daa
pop
sbb
push
cmps
popa
outs
add
adc
pop
dec
xor
add
add
js
scas
adc
int3
js
ds
pop
dec
fs
jne
aas
and
mov
inc
pop
cmp
push
ret
pop
or
xchg
inc
xor
push
add
and
jl
push
pop
add
sub
cmp
sub
inc
xor
pop
and
es
adc
or
gs
xor
sub
das
fdivr
imul
aas
mov
jno
pop
mov
rcr
cmp
sbb
stos
or
js
repz
cmc
adc
sub
stos
jl
sub
dec
add
adc
mov
sub
sub
jno
push
(bad)
adc
imul
sub
xor
inc
sub
cld
pusha
repnz
or
cmc
and
push
sbb
sbb
lods
push
adc
add
sbb
xchg
dec
push
adc
adc
and
push
jecxz
mov
and
jp
adc
pop
fiadd
jns
cld
ss
ins
adc
jnp
outs
mov
jb
pop
push
imul
adc
xor
jle
push
shr
fisub
or
push
xor
pushf
outs
adc
mov
or
ficom
jo
xor
pop
xor
hlt
cmp
outs
push
add
pop
and
xor
dec
inc
dec
add
pop
jno
sub
outs
jmp
inc
jle
inc
mov
outs
push
js
int
call
imul
adc
add
jbe
inc
cld
push
jge
add
sub
jp
(bad)
pop
inc
outs
out
or
add
push
adc
pop
mov
push
or
cmp
jge
gs
push
or
pop
std
adc
pop
pop
xchg
sbb
cmp
stos
jbe
ins
mov
je
sbb
add
ja
add
or
sysret
add
xor
sub
sub
dec
sbb
jo
add
ja
inc
xor
pop
mov
stos
jp
and
pop
inc
push
xor
ins
mov
dec
mov
je
or
mov
jg
inc
(bad)
sub
push
das
fdiv
ds
loopne
push
pop
add
jp
dec
add
and
and
or
sbb
or
sub
xor
es
mov
add
sahf
inc
icebp
and
daa
pop
cmp
fadd
lea
jae
scas
sbb
js
pusha
mov
jg
rol
ins
jp
adc
cli
or
inc
mov
or
inc
retf
je
gs
and
aam
jp
add
pop
push
jae
dec
cmp
pop
repz
mov
push
add
add
sbb
pop
fadd
inc
fld
jnp
pop
inc
jle
inc
in
dec
xor
aaa
call
aaa
sub
outs
arpl
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
dec
test
inc
sub
inc
ret
bound
sti
sbb
mov
cmp
daa
mov
xor
pop
xor
pop
push
or
out
jge
lea
xor
push
mov
inc
dec
daa
dec
cmp
push
jg
jne
or
and
push
cmps
dec
push
adc
cmp
push
arpl
jp
push
outs
data16
loope
cmp
scas
and
lahf
cmp
xchg
xchg
ins
add
addr16
sub
or
dec
stos
sub
inc
shr
ins
pop
movs
xor
gs
push
outs
pusha
jae
stos
dec
adc
add
push
jge
inc
inc
sbb
jo
dec
inc
sbb
arpl
sbb
cmp
fidiv
cmp
das
and
imul
jb
or
sub
sub
aas
mov
sbb
push
cmp
xor
repz
pop
jp
sbb
and
js
scas
add
jo
pusha
sbb
or
es
cmp
inc
bound
cmp
daa
sub
lea
cmp
ds
retf
pusha
cmps
ss
add
push
mov
je
pop
mov
xor
sbb
xor
pop
cdq
jnp
push
xchg
cmp
imul
mov
je
dec
pop
dec
jae
adc
push
daa
pop
enter
fs
test
or
xchg
xor
lods
inc
sub
and
xor
adc
adc
lds
es
(bad)
sub
push
xchg
inc
mov
or
pop
icebp
(bad)
andps
mov
inc
push
sub
or
push
mov
pop
inc
ins
clc
push
mov
add
push
jle
cmp
dec
fisttp
jnp
dec
xchg
jb
or
and
popa
sub
pop
dec
xor
xor
outs
pop
adc
pop
push
es
addr16
pop
push
xor
movsx
dec
inc
cmps
xor
pop
div
jo
inc
dec
cwde
das
loopne
ficom
cmp
ds
jnp
and
sbb
inc
fist
add
adc
sub
test
ret
dec
es
and
xchg
sub
pusha
jle
jns
add
add
sub
pop
imul
sbb
xor
nop
adc
xor
and
jecxz
fst
sbb
push
ss
or
add
ja
cmp
and
je
inc
inc
inc
xchg
xor
lods
sbb
sub
scas
sub
jns
js
or
pop
jp
jno
adc
push
fs
pop
fs
mov
adc
adc
outs
jno
je
inc
arpl
pop
test
push
imul
pop
pop
fcom
repnz
lahf
jbe
or
cmp
pop
mov
adc
outs
adc
popf
jno
sbb
cmp
push
cmp
in
ss
inc
sub
inc
adc
(bad)
movs
dec
xor
jo
jnp
fisttp
adc
sub
das
movs
pop
div
arpl
jmp
sub
add
(bad)
jbe
push
movs
pop
push
jge
sub
call
inc
imul
dec
fnstcw
sub
fadd
shr
and
jne
push
mov
ins
jg
xchg
xor
cmp
test
dec
or
pop
clc
pop
cmc
pop
push
pop
sub
jle
inc
retf
push
aam
sub
and
cmp
and
arpl
js
sbb
inc
aas
pcmpeqw
bound
ins
add
jns
pop
cmp
or
inc
xchg
sbb
js
inc
cmp
xor
dec
scas
pop
mov
push
jg
xchg
gs
push
jp
sbb
into
jl
xor
add
mov
adc
cmp
cmp
push
inc
ds
pop
cs
inc
push
into
sub
or
ds
cld
or
and
push
inc
pop
xor
sub
enter
adc
sub
sbb
push
mov
inc
xchg
push
pop
ins
in
popa
and
mov
imul
cmc
dec
shr
shl
fisttp
xchg
cmp
cmc
xor
loope
adc
or
jp
ds
sub
pop
lock
ret
dec
mov
fiadd
pop
loope
inc
fs
and
jmp
(bad)
sub
adc
xor
xor
adc
and
adc
ja
xor
bound
loope
es
inc
pop
js
pusha
or
jno
push
push
and
dec
arpl
adc
pop
pop
mov
(bad)
outs
in
adc
sbb
push
cmp
je
add
add
inc
or
jnp
dec
sub
cmp
jnp
jnp
daa
push
jl
sbb
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
and
add
out
and
outs
xor
inc
cmp
dec
data16
push
call
dec
je
xor
inc
fstp
cmp
gs
pop
ins
sbb
popa
sbb
dec
sub
adc
or
addr16
adc
dec
mov
sbb
mov
xchg
sub
add
ret
or
pop
in
jg
sub
cmp
inc
mov
xchg
jle
sub
inc
int
sbb
push
pop
js
inc
xor
inc
pop
inc
test
push
imul
or
pop
push
dec
pop
cmp
dec
jb
xor
or
or
loop
jne
std
push
imul
mov
loop
cli
dec
inc
add
cmp
pop
ins
test
inc
push
or
movs
sbb
mov
adc
dec
cmp
or
add
pop
and
cmp
push
adc
push
inc
test
xchg
push
xor
mov
cs
rcl
pop
cmp
loop
stos
and
xchg
ss
xor
sbb
es
adc
pop
inc
pop
in
pop
xor
xor
xor
(bad)
aas
out
sub
(bad)
cmp
adc
daa
repnz
jl
sbb
lock
cli
lfs
and
retf
pop
dec
outs
das
adc
imul
adc
or
and
cs
and
es
inc
ins
or
jne
add
adc
das
jmp
loope
jmp
add
cmp
and
ds
xor
and
jae
cmp
add
pop
loop
sbb
fisubr
or
pop
add
xor
aas
retf
add
dec
jo
arpl
loopne
mov
repz
fs
data16
movs
bound
push
push
sub
imul
jo
daa
cmps
pusha
aas
push
ins
push
mov
cmc
pop
shr
mov
fimul
jp
push
push
add
mov
arpl
or
sbb
aas
jns
cmp
daa
je
push
jne
push
push
xchg
pop
jmp
gs
add
sbb
xor
dec
jno
cli
pusha
inc
or
and
xor
fwait
pop
sub
mov
dec
aaa
jne
or
fsubr
mov
xchg
xor
adc
lahf
add
sub
sub
movs
adc
sub
adc
add
cmp
arpl
arpl
add
gs
enter
mov
pusha
xchg
add
pop
sbb
sub
sub
push
std
jae
jbe
ins
test
stos
dec
jl
pusha
jp
push
xor
arpl
dec
loop
push
inc
dec
and
cmp
adc
sahf
jl
cs
jp
addr16
jg
ja
pop
dec
dec
mov
and
add
fnstsw
fisub
sub
ret
add
push
cdq
or
mov
push
dec
push
dec
jae
adc
dec
mov
xchg
dec
cmp
mov
and
imul
(bad)
call
mov
xor
call
pop
sub
add
popf
pop
ret
pop
idiv
dec
jg
and
pop
push
pop
cmp
dec
mov
into
rsqrtps
outs
mov
xor
pop
test
jp
and
add
das
mov
jg
pop
(bad)
sub
das
push
popa
aam
sub
and
add
cmp
sub
ja
push
(bad)
push
icebp
outs
or
and
lahf
pop
jb
jno
mov
sub
pop
sub
jo
mov
popa
push
xor
and
add
ret
adc
sbb
xor
pop
call
adc
push
sub
cs
xor
je
jbe
push
jp
repnz
jbe
pushf
inc
leave
fisub
ja
fist
inc
fiadd
not
dec
push
gs
cmp
arpl
jl
pop
jl
test
and
sub
popa
lods
cs
icebp
jg
jo
dec
(bad)
sbb
arpl
sbb
and
and
or
inc
or
dec
mov
push
sbb
pusha
cdq
and
ss
mov
cmp
adc
sub
popa
out
outs
fs
pop
cmps
and
adc
push
jns
jecxz
add
push
push
sbb
inc
push
pop
push
inc
ficomp
je
das
sahf
push
cmp
sbb
xchg
jb
and
dec
ins
outs
mov
ret
or
inc
pop
xor
xchg
and
xor
jb
cmp
add
dec
addps
ins
inc
mov
inc
jl
rcl
inc
in
int
cmps
outs
test
sbb
fdivr
fldenv
add
add
push
jmp
and
dec
push
hlt
dec
mov
sub
or
jnp
pop
xchg
or
xor
inc
in
fstp
sub
push
push
sbb
and
cmp
pop
cli
sbb
(bad)
push
push
pop
lock
fldenv
mov
ss
sub
cmp
xlat
addr16
enter
cmc
ss
xor
push
adc
jge
pop
jecxz
adc
inc
pop
dec
jae
jge
sbb
fwait
outs
adc
je
sbb
add
cs
sub
addr16
pop
add
lock
push
ret
pop
mov
cmp
jle
and
cmp
daa
add
or
in
inc
dec
test
pop
mov
jecxz
jp
jmp
push
aaa
or
aas
retf
sbb
dec
cmp
push
mov
xchg
cs
xchg
jne
push
movs
inc
mov
fsub
inc
arpl
mov
or
jo
ins
sbb
leave
adc
outs
mov
xchg
push
adc
mov
and
jg
mov
pop
xor
ficomp
cmp
pop
aaa
cmp
inc
inc
addr16
pop
dec
popa
add
les
pop
add
dec
jl
push
cmp
inc
aas
and
call
and
add
xor
es
and
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
in
add
aaa
xchg
popa
inc
imul
and
popf
adc
jae
push
jecxz
xor
add
sti
sbb
sbb
push
jno
push
stos
pop
(bad)
movlps
jp
mov
adc
rcl
in
scas
(bad)
ja
sbb
xor
pop
xchg
jl
jns
outs
adc
lods
sub
push
jb
in
test
push
push
xor
mov
sub
aaa
xchg
pop
push
inc
xor
ja
xor
jb
or
es
and
repz
or
fwait
pop
xchg
addr16
pop
jecxz
adc
sbb
dec
imul
scas
dec
shl
dec
and
inc
dec
fild
pop
ja
push
fisttp
cwde
add
fadd
scas
or
and
and
outs
sbb
push
and
or
ror
push
sbb
bound
jae
addr16
addr16
cmp
xchg
jae
mov
jmp
add
and
ins
and
ins
mov
inc
xor
test
ins
ins
sub
sbb
and
adc
mov
cli
dec
cmp
enter
mov
sbb
inc
sbb
bound
mov
inc
jb
dec
(bad)
cmp
addr16
add
es
adc
push
mov
inc
jmp
add
and
dec
cdq
jo
xor
(bad)
inc
hlt
pusha
jp
and
ins
adc
jae
sbb
js
adc
mov
cs
add
pop
jl
sub
jl
leave
jae
dec
mov
push
ja
and
push
les
pushf
cmp
jg
sbb
shr
sbb
clc
inc
sti
outs
stc
bound
or
push
data16
jnp
dec
sahf
or
and
push
lds
push
dec
sub
pushf
jns
gs
movs
add
xchg
pop
inc
gs
and
jns
pop
jo
das
ja
hlt
dec
out
adc
push
jl
pop
mov
jge
mov
pop
pop
jne
imul
or
es
sub
psubd
clc
jae
xor
daa
push
stc
aas
fadd
iret
pop
jecxz
mov
add
push
inc
push
iret
or
aaa
inc
(bad)
dec
rcr
pop
dec
shl
sahf
dec
test
cmp
hlt
pop
retf
or
pop
push
jle
push
int
icebp
jp
jp
pop
xchg
xor
pop
outs
inc
add
jg
and
xor
ja
push
mov
sub
pop
loop
rol
dec
inc
(bad)
das
sbb
retf
imul
or
push
add
pop
fst
push
xor
ins
push
mov
cmp
clc
or
or
xor
imul
add
cs
pop
ins
int3
jl
pop
or
sub
xchg
add
mov
xor
or
fs
pop
and
adc
jge
bound
popa
fisub
dec
push
mov
and
sbb
pop
js
inc
cmp
dec
inc
out
cs
add
or
aad
fwait
jge
push
cmp
adc
jg
fwait
cmp
pop
aas
adc
shr
adc
pop
imul
neg
jge
data16
jge
inc
push
xor
jl
or
mov
and
adc
je
or
in
adc
cld
push
add
dec
data16
ins
push
add
pop
stc
inc
bound
mov
mov
test
dec
jbe
daa
ds
outs
imul
aas
jb
jno
cdq
jne
jb
or
add
xor
or
js
cmp
jb
cmp
and
pop
pop
push
ja
sub
inc
push
mov
push
add
pop
inc
mov
lea
js
jo
dec
push
je
adc
mov
add
xor
add
add
mov
push
cmp
cmp
add
and
adc
or
ja
dec
sbb
push
mov
mov
add
or
mov
push
inc
icebp
add
fldenv
dec
sub
jge
inc
imul
inc
sub
sbb
push
cli
push
inc
inc
sbb
arpl
popa
push
sbb
cmps
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
inc
or
cs
fs
pusha
xchg
add
mov
stos
add
pop
sbb
dec
push
popa
adc
fidiv
adc
outs
jb
scas
adc
sub
ins
outs
add
pop
int
mov
cs
hlt
xor
adc
or
add
ins
fst
inc
push
cmp
jns
daa
add
xor
jb
dec
in
xor
or
sub
cmp
(bad)
jae
daa
inc
sbb
jns
jns
pusha
ins
pop
xchg
adc
ins
push
mov
pop
stos
ins
mov
inc
inc
sbb
sub
or
dec
out
xor
pop
and
add
pop
pop
adc
mov
dec
ss
test
jae
xor
mov
dec
jge
(bad)
push
movs
pop
push
xor
push
cli
dec
cmp
push
jne
jge
imul
fbld
jmp
add
xor
and
add
and
sub
dec
retf
push
mov
aaa
sti
es
sbb
or
jg
data16
ins
aas
in
xor
popf
inc
cld
gs
outs
sub
add
mov
inc
and
jnp
push
sub
(bad)
inc
inc
add
jl
jo
xor
or
xchg
pop
test
jl
sbb
jg
and
pop
pop
in
or
or
cmp
jnp
pop
lock
jnp
xchg
(bad)
imul
xor
xchg
or
dec
mov
jg
pop
movs
dec
push
pop
pushf
imul
and
test
adc
into
mulps
or
or
ret
inc
push
ds
cli
adc
jns
cmp
push
pop
push
test
jbe
jbe
cmp
push
push
aaa
in
push
pusha
addr16
sub
pop
xor
sbb
push
out
push
pop
ss
pusha
mov
popa
pop
(bad)
or
and
cmp
int3
adc
push
sbb
fisubr
sbb
js
xchg
inc
push
and
push
aaa
push
ror
inc
inc
xor
jp
jbe
js
cmp
call
lods
jge
xor
cmp
cmp
pusha
sbb
loope
and
mov
fst
add
cmp
xor
cmp
or
sbb
aaa
movs
push
push
sbb
dec
xchg
dec
push
pop
or
ins
or
add
pop
pop
dec
dec
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
das
adc
or
push
or
push
fiadd
sub
sti
js
wrmsr
popa
adc
or
pop
imul
sbb
js
sbb
and
dec
mov
sbb
pop
es
or
mov
adc
ins
fidiv
in
cmp
pop
inc
mov
adc
add
mov
popa
push
mov
sbb
adc
xor
mov
arpl
jcxz
adc
ins
fnstcw
push
xchg
adc
xor
mov
js
jl
pop
int3
jns
or
dec
mov
or
sub
cmp
add
je
jp
cmp
pop
or
or
pop
xor
or
jno
add
sbb
cmp
cmps
adc
and
daa
push
dec
and
ret
pop
fcom
scas
or
push
inc
inc
loope
mov
xor
pop
aad
inc
xor
inc
xchg
pop
and
(bad)
sbb
ret
inc
ss
aas
cmp
jno
add
jge
sub
data16
jmp
and
mov
sub
ins
dec
dec
mov
sbb
push
pop
pop
push
mov
scas
and
add
pop
jecxz
iret
adc
push
cmps
pop
sbb
push
adc
cmp
shl
inc
or
outs
shr
cmp
arpl
outs
pop
addr16
mov
pusha
call
push
mov
pop
pop
pcmpgtd
push
jg
fnsave
test
pop
sub
sub
ror
bound
dec
sbb
xchg
push
xor
push
inc
pop
cmp
movs
jle
cmp
stc
or
gs
(bad)
add
xor
popa
hlt
popa
mov
push
xchg
jge
dec
cdq
adc
addr16
iret
ins
lock
clc
push
or
pop
push
stos
adc
aad
inc
and
inc
sbb
xor
pop
add
js
ins
and
jae
or
cs
data16
cmp
test
pop
cli
or
and
sub
sub
dec
push
sub
mov
push
add
sub
pop
dec
jl
sub
call
dec
or
pop
jae
dec
add
jbe
frstor
jge
pop
cmp
inc
jg
in
mov
add
cmp
das
dec
fs
mov
add
push
jmp
call
jl
jns
push
cmp
add
adc
mov
jbe
sbb
dec
mov
jmp
movs
inc
dec
ss
jb
jnp
push
ins
aaa
mov
adc
xchg
inc
xchg
push
ds
fild
push
cmp
pop
push
jle
pusha
mov
repnz
push
ins
imul
sbb
ins
xchg
cmp
and
pop
data16
pop
dec
cmp
adc
add
imul
inc
jmp
mov
sbb
out
pop
mov
xor
inc
push
into
cmp
dec
inc
in
xor
jl
aas
test
sub
or
jno
sbb
adc
adc
xor
(bad)
pop
mov
movs
push
scas
pop
sub
push
in
cmp
jmp
dec
sbb
popa
pop
cmp
xor
inc
sbb
mov
pop
push
push
leave
ds
mov
je
dec
es
aad
inc
push
push
add
pop
gs
jb
sbb
sub
dec
dec
cmps
and
pop
mov
sub
jbe
inc
das
add
and
pop
push
aas
outs
add
sub
ins
sbb
sub
ds
sub
and
dec
pop
dec
cmp
and
pop
cmps
pop
(bad)
xor
sub
in
inc
sbb
dec
pop
or
push
sbb
push
add
mov
jp
push
pop
mov
pop
inc
and
cs
pusha
repz
inc
int
outs
pop
add
push
ins
xor
jge
pop
pop
or
mov
push
add
add
scas
pop
adc
pop
scas
dec
mov
add
pop
pop
cmp
imul
js
in
cs
cmp
inc
pcmpgtw
or
inc
sub
in
sub
dec
(bad)
adc
jg
jne
add
push
rcl
pop
xor
push
cld
inc
inc
jns
jp
inc
inc
das
sar
jae
test
aaa
jns
nop
push
mov
push
rol
mov
ds
sub
xchg
punpckhdq
sub
inc
call
sbb
sub
pop
popf
adc
adc
adc
mov
jno
inc
dec
dec
sub
mov
leave
dec
popa
inc
add
dec
sbb
jbe
and
push
sub
addr16
inc
add
jbe
outs
xchg
dec
mov
ja
inc
out
dec
xchg
ja
lods
inc
jle
mov
inc
xor
in
addr16
sub
int
add
or
das
pop
mov
xor
add
push
bound
sbb
cs
ins
adc
sti
inc
and
or
adc
in
add
adc
iret
xor
and
adc
add
pop
pop
icebp
jp
pop
popa
cmp
or
lods
addr16
sub
sub
addr16
jle
cmp
jns
xor
adc
ins
movs
jb
pop
jo
std
push
loope
push
jbe
es
pop
scas
and
push
loop
daa
push
cs
xor
xor
or
pop
inc
push
add
sub
mov
inc
cmp
sbb
jne
sub
orps
call
or
inc
outs
popa
adc
dec
sbb
xor
rol
dec
pop
std
outs
and
pop
jmp
dec
pop
es
das
outs
dec
dec
and
mov
aaa
inc
or
cmp
jp
cs
sbb
and
in
adc
jge
sbb
adc
loope
mov
adc
add
leave
pop
add
rcr
fsub
inc
sti
jle
sbb
dec
jmp
inc
sbb
fdivr
sbb
jge
push
jno
mov
inc
cli
cmp
inc
pop
pop
push
add
add
jne
mov
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
add
adc
leave
push
jne
ja
es
std
ins
cli
jo
sub
mov
gs
adc
test
and
js
xchg
sbb
xor
cmp
and
fisttp
push
or
add
mov
jo
xor
outs
(bad)
or
dec
jecxz
movs
xor
pusha
sub
dec
imul
fs
push
cmp
push
movs
dec
jns
sbb
dec
das
sub
and
popa
leave
sub
sbb
lods
and
aad
ficom
ins
lds
ds
inc
push
imul
in
js
jnp
ja
(bad)
cmc
outs
pop
adc
jge
xor
out
pop
or
cmp
cmp
push
inc
sbb
mov
nop
jo
pop
clc
push
pop
data16
dec
sub
sbb
ja
adc
push
pop
pop
jae
icebp
jb
ja
push
xchg
jge
push
cmovl
mov
fs
nop
pop
sbb
dec
mov
ins
lea
add
push
xchg
sbb
mov
xor
xchg
jbe
adc
push
pop
inc
xchg
and
inc
stos
inc
cmps
pop
jl
stc
imul
pop
inc
clc
dec
test
sub
or
xor
sti
jp
xor
or
jl
adc
xor
push
in
push
jae
and
sahf
sub
mov
cmp
pop
ins
pop
arpl
xor
fdiv
add
adc
sbb
pop
inc
push
xchg
adc
mov
ja
adc
mov
jne
push
pop
popa
adc
jle
dec
xchg
jne
sbb
push
mov
cmp
outs
pop
and
add
sbb
dec
xor
cmp
and
inc
pusha
jo
xor
dec
rcl
dec
daa
mov
add
mov
gs
add
enter
adc
sub
sub
sub
inc
jne
ins
dec
outs
jb
inc
outs
test
xor
sub
test
jnp
icebp
outs
push
cmp
jns
xor
sbb
cmps
or
je
arpl
pop
pop
dec
in
adc
inc
and
or
jp
jno
ins
(bad)
jne
inc
in
add
dec
lds
mov
sub
or
add
dec
and
cmp
ins
mov
js
pop
nop
nop
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
mov
push
int3
xor
addr16
jbe
stos
jbe
dec
or
cmp
lods
sbb
sub
dec
xchg
ja
xor
push
sbb
xchg
ins
ja
stc
xor
push
aaa
push
or
push
inc
or
sbb
aaa
ret
js
inc
jo
cmp
mov
sbb
dec
mov
jb
inc
jo
gs
(bad)
push
sbb
jle
dec
inc
cmp
stc
sub
pop
mov
sub
js
jno
cmp
jns
xor
and
nop
and
dec
jmp
push
je
div
sub
sbb
int
sbb
or
jle
adc
pop
pop
data16
aas
or
inc
es
inc
pop
xor
and
pop
je
scas
push
push
inc
or
inc
pop
dec
dec
push
fld
ins
xchg
or
dec
repz
jae
daa
cmp
sub
adc
jbe
popa
mov
push
fst
and
imul
ins
lahf
es
xchg
pop
add
pop
ins
push
push
add
inc
je
or
cmp
leave
add
pop
stos
and
bound
and
xchg
jle
xor
adc
dec
int3
xor
sbb
cdq
push
lods
pop
pop
adc
sub
or
sbb
add
add
and
pop
xchg
sub
addr16
add
xchg
pop
outs
xor
pop
movs
pop
dec
sub
pop
out
adc
and
je
xor
cmps
jge
outs
adc
jp
jns
xor
push
or
pop
dec
mov
fstp
sub
add
pop
sbb
cmp
lahf
dec
fsub
push
mov
sbb
add
add
out
add
je
aaa
jno
and
sbb
and
push
push
inc
out
pop
mov
es
ins
les
pop
sub
and
popf
ds
jno
inc
pop
imul
callw
jge
jnp
ds
and
push
sbb
ss
inc
inc
xor
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
sbb
dec
rcr
ins
push
sub
push
imul
push
xchg
push
aaa
adc
jns
sbb
dec
and
jbe
and
xchg
or
inc
movs
push
xchg
and
pop
jle
jns
adc
sbb
ins
jmp
dec
xlat
pop
outs
ins
sbb
push
or
popa
jbe
cmp
inc
retf
sub
jg
push
jne
sbb
fs
or
mov
iret
jp
push
push
data16
xchg
adc
cs
jo
adc
fidivr
xor
dec
add
xor
jge
test
and
or
xlat
daa
daa
xor
jg
dec
in
popa
fidivr
gs
jne
adc
cmp
pop
and
push
daa
in
jmp
sbb
test
mov
and
add
push
xchg
pop
test
sub
jns
add
sbb
jne
xor
adc
fstp
ds
imul
pop
pop
mov
and
or
push
sbb
push
lods
inc
nop
sbb
jmp
push
movs
xor
xor
push
xchg
or
push
mov
in
nop
imul
xor
pop
hlt
jnp
outs
add
adc
outs
jl
(bad)
fistp
xchg
dec
retf
push
xor
ficom
cmc
aas
outs
cmp
push
inc
addr16
add
neg
lock
mov
inc
jb
jle
dec
out
outs
mov
dec
sbb
jnp
and
popa
iret
push
jmp
fisubr
pop
add
cmp
ins
sbb
pop
cmp
jnp
jg
xor
and
data16
dec
clc
arpl
dec
inc
pop
bound
ins
jb
or
js
sub
dec
sbb
push
pcmpeqb
push
cmp
dec
hlt
jne
inc
out
xor
pop
cmp
add
inc
push
jnp
rcr
xor
imul
out
and
das
loope
inc
pop
popf
dec
ds
and
ins
sbb
push
inc
adc
ins
leave
ja
push
pop
push
cli
sbb
aaa
pop
pop
cmp
xchg
jge
cmp
add
inc
adc
sbb
imul
sub
pop
sbb
outs
pusha
fld
ins
push
pop
or
jb
mov
and
or
(bad)
invd
jo
daa
in
adc
dec
jl
das
lock
loopne
dec
pop
jno
outs
aas
push
add
xor
inc
dec
sbb
sbb
push
inc
mov
ds
js
dec
shr
ja
sub
pop
push
outs
inc
pop
in
push
sub
mov
popa
ins
and
fwait
jp
and
pop
enter
mov
sbb
or
or
jp
inc
bound
arpl
push
jb
pop
push
pop
dec
bound
mov
cmp
sbb
jns
sub
and
cmp
std
inc
lods
push
sbb
ins
in
push
xor
pop
xor
fild
fst
add
rcl
test
sbb
mov
retf
cmp
cmps
cmp
daa
xor
and
dec
fcom
das
loope
mov
inc
cmc
or
and
push
dec
or
shl
pop
push
sub
mov
pop
mov
push
lahf
sub
cmp
inc
cwde
dec
into
pop
mov
imul
or
imul
outs
call
and
xor
inc
ficomp
pop
dec
stos
push
(bad)
jne
dec
mov
jns
sub
daa
pop
push
push
add
cmp
cmp
retf
addr16
jae
sub
or
xor
out
(bad)
pop
push
or
loope
mov
pop
or
adc
dec
sub
or
push
inc
inc
fld
(bad)
push
xor
jo
push
push
jo
shl
jmp
or
ds
sbb
stc
cmp
push
in
dec
fistp
movs
xor
into
and
pop
outs
outs
movs
push
dec
inc
push
adc
sbb
popa
dec
pop
call
pop
and
inc
xchg
inc
sbb
add
pop
push
and
repnz
add
dec
ds
cwde
adc
push
mov
xchg
gs
dec
test
aad
jmp
jecxz
sbb
repnz
adc
and
ror
sub
sbb
sbb
inc
ja
inc
arpl
sbb
jbe
or
imul
mov
mov
add
dec
lea
pop
(bad)
jne
add
jle
dec
inc
lea
sbb
data16
loop
outs
and
push
mov
inc
adc
inc
sbb
sbb
sbb
push
xor
fild
and
adc
push
adc
outs
adc
(bad)
and
sub
xor
mov
jbe
out
mov
outs
pop
or
aas
outs
inc
and
sub
mov
and
add
in
cmps
push
sub
cmps
jle
pop
leave
cmp
cmp
dec
xor
data16
inc
xchg
xor
inc
es
dec
dec
push
pop
stos
xor
ds
pop
sub
sbb
std
cmp
jl
add
jno
cmp
sub
inc
push
cmp
pusha
xor
je
pop
and
cmc
outs
xchg
add
(bad)
adc
aaa
push
ss
sbb
jbe
jb
push
int
cli
cmp
cs
adc
dec
(bad)
and
pop
fmul
je
adc
in
jo
dec
sahf
inc
(bad)
cmp
inc
imul
cmp
jp
or
push
push
jb
pop
jae
ins
(bad)
push
aaa
pop
xor
sub
pop
pushf
ins
mov
int
dec
dec
pop
add
xor
push
adc
loopne
sub
add
jle
jne
and
push
push
push
pushf
mov
xor
call
pop
sub
add
popf
pop
ret
jge
cmp
inc
add
inc
push
jge
pop
mov
sbb
js
inc
mov
pop
dec
cvtps2pd
ja
jg
and
or
fsubr
pop
inc
je
repnz
mov
mov
sub
adc
daa
jecxz
push
outs
mov
jns
or
add
inc
push
add
das
inc
pop
lods
aas
jp
push
jae
pop
mov
mov
enter
push
dec
dec
ins
mov
push
fisttp
les
dec
int3
push
shr
push
mov
dec
nop
dec
les
cmp
jns
and
jno
xor
xor
cmp
or
sbb
push
(bad)
push
pusha
jl
and
xor
pop
push
dec
clc
dec
lock
(bad)
ss
aas
mov
out
add
mov
cmp
pop
cwde
gs
mov
arpl
jb
sub
pop
push
jp
je
cmp
push
shl
adc
xor
arpl
jl
push
mov
sub
mov
sub
ror
imul
inc
or
and
daa
ins
xor
pop
sub
and
inc
xchg
push
sti
jp
jp
jae
dec
retf
inc
cmps
das
test
cmp
xor
xor
movs
xor
icebp
jge
jns
and
add
outs
xor
bound
push
mov
and
push
imul
cmps
inc
mov
or
(bad)
xor
xor
mov
sar
jne
call
cmp
cmp
cmp
cmp
or
add
shl
loop
lock
xor
bound
jae
jp
mov
sahf
xor
xor
xor
xor
xor
xor
xor
sbb
cmp
inc
xor
jno
jge
xchg
xor
mov
mov
les
int
shl
fdiv
fidiv
div
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
push
outs
xor
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
pop
cmp
cmp
cmp
push
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmps
cmp
add
add
fdiv
push
ss
ss
xchg
lea
scas
ss
les
aad
cmp
inc
aaa
inc
aaa
dec
aaa
pop
aaa
fs
cwde
aaa
test
mov
cmp
cmp
cmp
cmp
mov
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
cmp
inc
xor
xchg
xor
mov
ss
xor
cmp
cmp
inc
ss
mov
mov
ss
shl
aam
fdiv
fdiv
loopne
sub
xor
xor
cmp
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
imul
mov
cmp
(bad)
lods
sar
cmp
aas
aas
inc
aas
dec
aas
push
aas
push
aas
pop
aas
gs
ins
aas
jae
jp
cmp
cwde
aas
mov
aas
mov
aas
sar
fidivr
jmp
ror
add
or
adc
xor
xor
xor
xor
add
add
or
add
xor
dec
aaa
fs
push
add
add
add
xor
xor
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
lock
add
xor
add
and
add
add
add
ss
cmp
inc
push
add
add
inc
xor
add
and
add
add
and
push
add
add
xor
push
add
add
loope
add
add
push
add
add
mov
add
add
add
add
popa
cmp
add
and
add
add
sar
add
inc
push
add
add
mov
xor
add
add
jno
add
add
add
add
idiv
push
add
add
shl
add
push
push
add
add
add
cmp
aas
push
cmp
add
xor
add
add
mov
add
add
add
add
in
add
add
push
add
add
popa
xor
push
add
add
add
xor
add
xor
add
add
and
add
and
add
add
inc
cmp
push
add
add
test
loope
add
add
add
icebp
cmp
push
add
add
add
add
xor
add
add
and
add
add
add
add
popa
xor
add
push
push
add
add
icebp
xor
add
and
add
add
jno
xchg
xor
xor
add
add
shl
add
add
push
add
add
loope
add
add
add
add
adc
cmp
xor
add
add
cmp
push
add
add
inc
aaa
add
add
add
add
inc
add
add
push
add
add
xor
add
push
push
add
add
mov
xor
add
add
jno
push
cmp
or
add
push
xor
push
add
add
div
add
add
push
add
add
xchg
cmp
add
push
push
add
add
loope
add
add
add
add
shl
add
add
push
add
add
cmps
aaa
add
add
add
add
add
add
add
push
add
add
jbe
and
add
push
add
add
and
add
add
add
add
adc
and
or
add
mov
and
add
add
mov
add
add
push
add
add
xchg
xor
add
push
push
add
add
inc
cmp
add
inc
push
add
add
loope
add
add
push
add
add
jno
add
add
add
add
push
xor
push
add
add
adc
add
inc
push
add
add
xor
push
add
add
xchg
xor
add
add
add
inc
push
add
add
cmp
add
add
and
add
add
push
add
add
movs
xor
push
add
add
add
cmp
add
xor
add
add
and
add
add
push
add
add
add
xor
cmp
add
add
add
add
and
add
add
push
add
add
mov
xor
add
add
add
add
xor
push
add
add
xchg
cmp
xor
cmp
xor
aaa
add
add
add
add
icebp
xor
add
push
add
add
xor
add
add
icebp
cmp
add
push
push
add
add
sar
aas
add
push
add
add
adc
add
add
push
add
add
repnz
add
inc
push
add
add
loope
add
add
push
add
add
icebp
ss
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
add
popa
aaa
xor
inc
push
add
add
adc
add
add
add
add
fs
xor
and
add
add
cmp
push
add
add
popa
cmp
add
and
add
add
add
xor
push
push
add
add
adc
inc
cmp
xor
add
add
loop
add
add
push
add
add
inc
xor
add
push
push
add
add
add
aaa
loope
shl
add
add
add
add
mov
push
push
add
add
lds
add
add
push
add
add
mov
push
push
add
add
xor
push
add
add
popa
xor
add
xor
add
add
xchg
xor
add
add
add
adc
add
add
push
add
add
xor
add
push
push
add
add
mov
push
xor
and
add
add
shl
add
add
add
add
adc
add
add
push
add
add
mov
add
add
add
add
inc
xor
cmp
and
add
add
cmp
push
add
add
shl
add
xor
add
add
adc
add
add
add
add
loope
add
add
add
add
and
add
or
add
loope
add
add
add
add
add
cmp
add
and
add
add
xor
add
add
push
add
add
popa
cmp
push
add
add
icebp
cmp
add
xor
add
add
icebp
cmp
add
and
add
add
xchg
xor
push
add
add
inc
add
add
add
add
xor
add
add
push
add
add
add
add
add
add
add
popa
xor
add
xor
add
add
loope
push
cmp
inc
push
add
add
cmp
add
xchg
cmp
cmp
inc
push
add
add
icebp
aaa
add
add
push
add
add
add
push
add
add
shl
add
add
add
icebp
cmp
add
xor
add
add
inc
xor
add
inc
push
add
add
xchg
xor
push
add
add
popa
aaa
add
add
add
add
and
add
xor
add
add
adc
add
add
add
add
popa
xor
add
xor
add
add
push
xor
add
push
push
add
add
shl
xor
xor
add
add
adc
push
add
add
xor
add
add
push
add
add
mov
add
add
add
add
sar
shl
add
push
add
add
and
add
add
push
add
add
mov
push
push
add
add
mov
inc
push
add
add
adc
xor
add
add
mov
push
push
add
add
mov
add
add
push
add
add
adc
add
add
add
add
icebp
xor
add
and
add
add
xchg
aas
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
add
adc
add
add
add
add
add
jno
add
push
add
add
push
aas
add
add
add
add
and
add
add
push
add
add
xchg
cmp
add
push
push
add
add
add
push
add
add
push
cmp
add
push
push
add
add
push
cmp
push
add
add
shl
push
add
add
sar
add
add
push
add
add
add
inc
cmp
xor
add
add
xor
push
add
add
xor
push
add
add
xor
add
add
add
add
and
add
add
push
add
add
adc
add
add
add
add
inc
xor
add
and
add
add
jno
mov
add
add
and
add
add
push
add
add
xchg
cmp
push
add
add
shl
xor
add
push
add
add
mov
add
add
add
add
jno
add
add
add
add
mov
and
add
add
sar
add
xor
add
add
sar
add
add
add
popa
xor
add
inc
push
add
add
adc
push
add
add
xor
add
add
push
add
add
and
push
add
add
push
cmp
add
xor
add
add
push
xor
add
ror
or
add
mov
mov
add
add
popa
xor
add
add
sar
add
add
add
inc
xor
aas
add
add
add
icebp
aaa
add
add
push
add
add
xor
add
xor
add
add
add
add
xchg
cmp
add
mov
add
add
shl
add
ror
or
add
and
add
add
add
xchg
add
add
push
add
add
xor
add
pusha
push
add
add
push
aas
add
add
add
shl
add
add
add
mov
pusha
push
add
add
es
add
add
add
add
push
add
add
ret
add
pusha
push
add
add
xor
xor
add
add
inc
cmp
add
ror
add
add
ret
xor
add
or
or
add
inc
cmp
add
mov
add
movs
xor
add
ror
add
add
jno
add
add
add
add
sar
add
add
push
add
add
push
xor
add
mov
add
add
adc
push
add
add
test
add
add
add
add
popa
xor
add
nop
push
add
add
icebp
cmp
add
jo
add
add
mov
add
add
add
popa
xor
add
mov
add
mov
add
add
add
(bad)
xor
xor
or
add
cmp
add
nop
push
add
add
shl
add
ror
add
add
and
add
add
add
and
cmp
add
nop
push
add
add
icebp
cmp
add
ror
or
add
cmp
push
add
add
repz
push
add
add
jno
add
add
add
add
sar
add
add
mov
nop
push
add
add
shl
add
add
xchg
cmp
add
mov
add
adc
add
add
add
add
add
add
nop
push
add
add
shl
add
mov
add
add
jno
add
add
add
cmp
push
add
add
xor
push
add
add
adc
sar
ror
or
add
loope
add
add
push
add
add
popa
xor
add
ror
or
add
(bad)
cmp
add
pusha
push
add
add
jno
add
add
push
add
add
and
add
add
push
add
add
and
add
add
add
xchg
cmp
push
add
add
xchg
cmp
add
mov
add
xor
push
add
add
xor
push
add
add
push
cmp
push
add
add
popa
aaa
add
add
add
add
push
xor
add
mov
add
and
add
add
add
add
jno
add
add
add
xor
push
add
add
shl
add
add
add
jno
add
add
push
add
add
loope
add
add
add
add
inc
xor
add
mov
add
add
add
add
add
adc
ror
or
add
mov
or
or
add
mov
pusha
push
add
add
push
xor
add
mov
add
add
mov
add
add
add
cmp
push
add
add
xor
ror
or
add
shl
add
add
mov
add
add
add
jno
add
add
add
xor
add
add
add
mov
add
add
add
jno
add
add
add
add
icebp
xor
add
mov
add
add
and
add
add
add
xchg
xor
add
pusha
push
add
add
mov
add
add
add
mov
pusha
push
add
add
add
add
add
add
add
loope
add
add
add
sar
add
nop
push
add
add
and
add
add
add
add
xor
add
add
add
push
cmp
add
pusha
push
add
add
xchg
cmp
add
mov
add
xor
loope
add
add
add
add
(bad)
aas
add
add
add
add
xor
add
ror
add
add
adc
add
add
push
add
add
adc
add
add
push
add
add
push
xor
add
or
or
add
mov
ror
or
add
(bad)
cmp
add
add
mov
jecxz
icebp
cmp
add
jo
add
add
popa
xor
add
mov
add
add
loope
add
add
add
add
adc
add
add
push
add
add
adc
add
add
push
add
add
loope
add
add
add
jno
add
add
add
add
adc
add
add
add
xor
sar
nop
push
add
add
loope
add
add
push
add
add
add
add
pusha
push
add
add
inc
xor
add
mov
add
add
xor
add
add
add
add
adc
add
add
add
add
cmp
add
push
xor
push
add
add
mov
add
add
push
add
add
and
add
add
add
add
sar
loope
add
push
add
add
push
cmp
add
mov
add
add
add
add
add
add
add
mov
mov
add
xchg
aaa
add
add
add
xor
add
add
add
add
add
add
add
popa
aaa
add
add
add
sar
add
mov
add
add
and
add
add
add
shl
add
mov
add
add
inc
aaa
add
add
add
add
mov
or
or
add
xchg
xor
add
mov
add
add
add
ror
or
add
xchg
cmp
add
pusha
push
add
add
movs
cmp
push
add
add
loope
add
add
push
add
add
add
add
add
add
shl
add
add
push
add
add
xchg
xor
add
jo
add
add
sar
add
mov
add
add
loope
shl
jo
add
add
inc
xor
add
mov
add
add
push
xor
add
nop
push
add
add
popa
ds
cmp
pusha
push
add
add
and
add
add
push
add
add
test
add
add
add
add
push
xor
add
nop
push
add
add
shl
add
ror
or
add
icebp
aas
add
add
add
add
mov
add
add
add
xor
add
add
add
add
cmps
xor
add
or
or
add
cmp
push
add
add
sar
add
nop
push
add
add
push
add
add
push
add
add
xor
add
pusha
push
add
add
inc
xor
add
nop
push
add
add
xchg
xor
add
ror
add
add
inc
xor
add
ror
or
add
aam
add
add
add
add
icebp
cmp
add
ror
or
add
sar
loope
add
add
popa
cmp
xor
mov
add
add
xchg
xor
add
pusha
push
add
add
and
add
add
add
add
sar
add
add
add
adc
add
pusha
push
add
add
popa
xor
add
mov
add
add
xchg
aaa
add
add
add
cmp
push
add
add
shl
add
add
push
add
add
fs
add
add
add
add
add
push
add
add
loope
add
add
add
add
sar
push
add
add
shl
add
add
add
add
icebp
add
add
add
icebp
cmp
aas
mov
add
add
add
xor
add
add
add
add
add
add
push
add
add
xor
add
add
add
icebp
cmp
add
ror
or
add
xor
add
mov
add
add
xchg
xor
push
add
add
push
cmp
add
jo
add
add
and
push
add
add
shl
add
add
mov
add
add
add
add
icebp
xor
add
jo
add
add
mov
mov
add
add
and
add
add
add
loope
add
add
add
add
push
cmp
or
add
inc
xor
add
ror
or
add
popa
xor
add
add
shl
add
pusha
push
add
add
xchg
cmp
push
add
add
cmp
add
add
xchg
xor
push
add
add
and
xor
or
or
add
loope
add
add
push
add
add
inc
xor
push
add
add
and
pusha
push
add
add
and
add
add
add
inc
cmp
add
or
or
add
xor
add
add
add
loope
add
add
push
add
add
xchg
xor
add
mov
add
add
mov
xchg
xor
ror
add
add
xchg
xor
add
mov
add
add
xor
push
add
add
xchg
xor
push
add
add
loope
add
add
add
add
popa
cmp
ror
or
add
sar
add
ror
add
add
inc
xor
add
jo
add
add
and
add
add
add
add
jno
add
add
add
xchg
cmp
add
mov
add
xor
add
add
add
mov
add
add
add
add
jno
popa
xor
jo
add
add
jb
add
add
add
jno
add
add
add
add
inc
xor
add
nop
push
add
add
push
aas
add
add
add
adc
add
add
add
adc
popa
cmp
mov
add
mov
ror
add
add
xor
push
add
add
push
cmp
add
jo
add
add
and
add
add
add
and
add
add
add
add
arpl
add
add
in
add
add
add
add
(bad)
add
add
add
inc
add
add
add
xchg
aas
(bad)
ds
cmp
push
add
add
and
add
add
add
mov
add
add
add
add
push
add
add
sar
add
add
add
mov
add
add
add
add
inc
add
add
add
add
sar
add
add
mov
or
or
add
adc
push
add
add
mov
ror
add
add
shl
add
pusha
push
add
add
loope
add
add
add
add
jae
add
add
add
mov
ror
or
add
cmc
aaa
add
add
add
mov
add
add
add
inc
add
add
add
sar
loope
add
add
add
xor
add
add
popa
cmp
add
mov
add
add
shl
add
add
add
adc
add
add
add
and
add
add
add
jno
add
add
add
and
add
add
add
repnz
add
pusha
push
add
add
adc
add
add
add
inc
aaa
add
add
add
add
and
add
add
add
add
mov
mov
add
add
popa
cmp
add
jo
add
add
mov
nop
push
add
add
popa
aas
add
add
push
add
add
inc
cmp
add
nop
push
add
add
shl
add
or
or
add
mov
add
add
add
add
add
add
add
add
shl
add
add
add
xchg
add
add
add
add
jno
add
add
add
icebp
xor
add
or
or
add
mov
adc
add
add
xor
push
add
add
xor
push
add
add
shl
add
pusha
push
add
add
jno
add
add
add
mov
add
add
add
add
shl
add
pusha
push
add
add
mov
loope
add
add
mov
pusha
push
add
add
movs
aas
add
add
add
add
add
jno
inc
aaa
add
add
add
cmp
add
add
jno
add
add
add
mov
mov
add
xchg
xor
add
nop
push
add
add
shl
add
add
add
add
push
xor
add
or
or
add
push
cmp
add
nop
push
add
add
add
add
add
push
add
add
push
cmp
add
add
mov
pusha
push
add
add
icebp
cmp
add
mov
add
xor
add
add
add
add
add
add
xchg
xor
add
or
or
add
sar
add
ror
or
add
push
xor
push
add
add
add
add
add
add
add
and
add
mov
add
add
sar
add
jo
add
add
add
add
add
add
loope
add
add
push
add
add
mov
xor
or
add
mov
add
add
push
add
add
icebp
cmp
push
add
add
xchg
cmp
add
mov
add
jno
shl
ror
add
add
loope
add
add
add
mov
ror
or
add
popa
cmp
add
mov
add
add
xchg
aas
add
add
push
add
add
out
cmp
add
push
adc
or
add
cwde
xor
add
mov
add
add
add
add
add
adc
or
add
lahf
cmp
add
add
add
add
ja
add
add
add
add
je
add
add
add
add
retf
add
rcl
or
add
pusha
xor
add
add
add
add
shl
add
add
adc
or
add
iret
cmp
add
adc
or
add
ins
xor
add
rcl
or
add
jecxz
add
add
adc
or
add
fnstsw
add
add
adc
or
add
sbb
pusha
adc
or
add
(bad)
cmp
add
mov
add
jp
add
add
adc
or
add
inc
xor
add
lock
or
add
jb
add
add
adc
add
xor
adc
add
cmp
adc
add
cmp
add
lock
add
add
add
add
add
les
sub
add
pop
.byte
