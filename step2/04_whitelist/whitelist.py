import os
import time
import pickle
from collections import defaultdict

NORMAL_GRAM_PATH = "../02_n_gram/normal/"
IDF_PATH = "./idf_for_normal.pickle"
WHITELIST_PATH = "./whitelist.pickle"
THRESHOLD = 0.45
STOP_POINT = 10

def makeWhitelist(normal_gram_path, threshold):
    global IDF_PATH, WHITELIST_PATH, STOP_POINT
    idf = defaultdict(int)
    files = [file for file in os.listdir(normal_gram_path) if file.endswith(".pickle")]
    count = 0
    for file in files :
        count += 1
        with open(normal_gram_path+file,'rb') as f:
            opcodes = pickle.load(f)
            for opcode in opcodes :
                idf[opcode] += 1
        # if count == STOP_POINT :
        #     break
    # print(len(set(white for white in idf if idf[white]/count >= 0.6))) #1075
    # print(len(set(white for white in idf if idf[white] / count >= 0.5))) #1635
    # print(len(set(white for white in idf if idf[white] / count >= 0.4))) #2371
    # print(len(set(white for white in idf if idf[white] / count >= 0.43)))  #2116
    # print(len(set(white for white in idf if idf[white] / count >= 0.45)))  #1976
    # print(len(set(white for white in idf if idf[white] / count >= 0.48)))  #1765
    # exit()
    whitelist = set(white for white in idf if idf[white]/count >= threshold)

    with open(IDF_PATH, 'wb') as f :
        pickle.dump(idf,f)
    with open(WHITELIST_PATH, 'wb') as f :
        pickle.dump(whitelist, f)

    with open("./idf_for_normal.txt", 'w') as f :
        f.write(str(idf)+"\n")
        f.write(f"Number of opcodes in normal files : {len(idf)}")
    with open("./whitelist.txt", 'w') as f :
        f.write(str(whitelist)+"\n")
        f.write(f"Number of opcodes in whitelist : {len(whitelist)}")

start_time = time.time()
makeWhitelist(NORMAL_GRAM_PATH, THRESHOLD)
with open('execution_time.txt', 'a') as f:
    f.write("Execution time :" + str(time.time()-start_time) + "\n")
