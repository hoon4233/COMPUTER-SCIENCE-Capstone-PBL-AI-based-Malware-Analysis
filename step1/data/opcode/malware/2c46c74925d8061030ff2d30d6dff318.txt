fistp
sub
push
inc
dec
(bad)
cwde
fstp
and
add
dec
leave
(bad)
jmp
add
xor
imul
add
ins
imul
popa
jo
fs
ins
add
aas
inc
inc
dec
add
outs
outs
imul
jb
pop
fs
push
ins
outs
imul
(bad)
fadd
push
mov
sub
add
call
das
idiv
mov
lea
push
push
mov
add
into
push
test
iret
adc
cld
out
(bad)
idiv
push
call
pop
adc
jne
mov
xor
lods
jnp
(bad)
pop
leave
ret
push
ud0
add
arpl
mov
adc
push
or
add
data16
push
push
push
dec
dec
or
push
data16
callw
es
sti
fwait
in
div
jmp
inc
gs
push
xor
fdivr
fbstp
or
xor
ret
pop
sub
fild
fild
sub
(bad)
mov
jne
xchg
jmp
fnstsw
adc
imul
or
fs
ret
push
js
push
or
push
out
scas
std
popa
inc
lea
push
clc
mov
out
fdivr
(bad)
adc
sub
and
push
sbb
iret
out
xchg
add
cmp
(bad)
pop
pop
pop
leave
in
in
jge
push
mov
sbb
mov
mov
jb
mov
stos
adc
iret
out
loope
cld
add
mov
fsubr
add
jae
std
shl
mov
cmp
mov
(bad)
clc
je
mov
je
(bad)
ins
sbb
push
pop
add
je
push
hlt
sbb
inc
push
sahf
fwait
pop
test
mov
adc
daa
adc
sti
pop
(bad)
cmp
adc
pop
popa
and
cmp
rcr
jle
mov
inc
push
call
call
cmp
jl
mov
(bad)
imul
pop
xchg
jg
push
fbld
call
call
aaa
mov
push
clc
jbe
pop
jne
inc
push
jl
mov
jnp
pop
jmp
sbb
inc
cmp
xor
or
push
rcr
leave
ret
lods
mov
sti
push
xor
push
sub
push
mov
call
mov
sub
test
ins
mov
jb
jno
push
lods
mov
mov
push
dec
push
adc
mov
mov
mov
and
adc
jg
dec
dec
pop
push
add
mov
push
sti
fnstcw
push
loope
sti
jle
data16
mov
push
mov
repnz
xchg
push
lds
inc
jo
adc
pop
add
(bad)
in
in
icebp
mov
pop
or
jne
mov
mov
ins
(bad)
mov
cmp
je
das
jne
jmp
pop
push
pop
pusha
or
add
and
add
and
xor
(bad)
cld
(bad)
jae
pushf
xor
add
and
xchg
pop
lock
int
jmp
sbb
arpl
sbb
or
lods
fwait
cmovb
mov
in
jge
mov
cmp
je
dec
mov
std
pop
sar
ret
cmp
pop
rcr
pop
lea
std
mov
outs
pushf
push
or
add
push
inc
xor
and
outs
outs
fld
jle
hlt
repnz
cld
aaa
mov
paddusb
push
jo
or
lock
push
xor
(bad)
adc
pusha
fs
(bad)
xor
sub
jae
fs
xchg
xor
and
aam
(bad)
jns
jle
(bad)
xor
sub
or
add
xor
push
mov
clc
fcmovbe
cmp
mov
cmp
push
mov
jmp
mov
cli
jne
mov
enter
loopne
hlt
call
push
jge
dec
or
jecxz
hlt
jle
mov
mov
(bad)
ss
or
hlt
push
lock
sub
retf
or
pop
and
dec
stc
or
sbb
pop
in
sub
mov
mov
icebp
adc
ins
xor
jecxz
outs
in
sub
dec
pop
dec
mov
pushf
and
js
arpl
or
rcr
push
sar
int3
xor
push
push
jo
mov
dec
mov
or
mov
(bad)
call
cmp
outs
mov
ins
das
shl
das
pop
std
pop
sub
nop
and
xor
push
xchg
pop
pop
pop
push
adc
addr16
pushf
jne
test
ss
push
cld
push
cld
dec
push
cld
int
add
retf
sar
sub
mov
mov
nop
mov
xlat
pop
push
sub
push
cwde
out
xchg
scas
jg
mov
push
pop
jge
dec
(bad)
xlat
ins
inc
mov
(bad)
call
enter
xchg
adc
mov
pushf
add
add
nop
js
pop
adc
or
add
cld
jo
lods
mov
pop
mov
mov
(bad)
int3
jmp
or
les
fs
int3
add
jle
mov
add
dec
mov
inc
add
dec
pop
nop
add
shl
(bad)
(bad)
call
mov
and
pop
mov
int
mov
call
push
jb
addr16
ins
and
outs
idiv
(bad)
je
bound
jb
outs
and
inc
dec
push
and
fs
out
psubq
jp
je
ds
or
inc
lods
push
or
stc
std
mov
lods
adc
cmp
scas
adc
cmp
(bad)
mov
or
(bad)
scas
adc
ss
repnz
scas
aas
inc
push
imul
(bad)
xchg
dec
add
and
add
or
test
pop
jmp
pop
add
or
mov
int
add
add
or
dec
mov
add
mov
jo
push
push
add
push
fsubr
pushf
add
cs
je
or
sbb
nop
inc
(bad)
fstp
shr
gs
outs
arpl
xor
daa
push
push
adc
inc
inc
out
call
jmp
add
cmp
aad
dec
pop
push
call
cmps
xchg
sub
cmps
imul
fwait
cmps
push
add
dec
fimul
shl
mov
xor
add
imul
cmps
imul
sub
movs
fs
pop
call
xor
js
add
imul
in
mov
cmp
push
dec
push
dec
shl
outs
jp
mov
dec
je
jae
add
adc
pop
or
or
fmul
fnstenv
outs
and
cmp
add
sbb
add
ins
data16
push
or
jae
lods
test
arpl
arpl
jbe
fadd
jb
popa
dec
pop
jae
cmp
jne
sbb
mov
addr16
jb
je
add
cmp
add
xor
bound
xor
dec
add
das
fisttp
mov
pop
and
addr16
jo
jbe
ins
and
out
mov
mov
cmp
add
cmp
push
ja
inc
je
jbe
gs
jne
dec
inc
inc
(bad)
(bad)
scas
cmp
pop
cmp
dec
inc
pop
add
inc
add
jmp
pop
enter
fidivr
in
dec
inc
inc
dec
cs
add
and
pop
add
icebp
repz
das
sbb
pop
call
in
sub
push
sub
dec
push
js
das
xor
clc
in
jg
xor
inc
arpl
jo
cmp
je
je
jo
popa
das
icebp
mov
push
and
das
sub
sub
popa
lods
lock
and
sub
data16
sbb
mov
dec
outs
jae
or
sub
ins
daa
outs
cmovge
imul
sub
test
jg
jo
imul
jo
dec
data16
or
outs
pop
outs
jb
sub
arpl
push
xor
sub
sbb
lods
adc
add
xchg
pop
sub
je
mov
ja
sub
ins
jne
and
(bad)
ins
sub
jne
(bad)
mov
cmp
jne
xor
add
add
add
mov
fs
push
or
or
sub
push
out
outs
ins
(bad)
outs
fstp
and
mov
and
and
sub
das
addr16
xchg
cmovae
inc
dec
ins
jmp
fcom
pop
ret
jno
ins
sbb
add
outs
je
pop
jb
dec
test
into
arpl
pop
inc
mov
in
xor
mov
stos
cmp
lea
xor
sbb
xor
push
shl
pop
cwde
popa
mov
cmp
call
cmp
pop
pop
retf
sub
dec
test
xchg
xchg
ror
and
inc
iret
push
xchg
sub
push
mov
sub
inc
and
and
call
sub
add
sti
pop
sti
inc
sub
sub
push
clc
mov
add
push
pushw
fcomp
cmp
lods
sar
stos
push
stos
call
outs
div
push
lea
push
call
pop
or
mov
sub
iret
xor
push
call
xor
cmp
push
inc
sub
jmp
jmp
sub
jle
push
sbb
jge
sub
cmp
push
scas
mov
inc
jmp
mov
inc
ss
nop
or
clc
ja
xchg
mov
pop
pop
push
call
cmp
mov
and
jae
inc
pop
movzx
enter
(bad)
fsubp
cmp
jne
cmp
loopne
adc
mov
mov
or
dec
push
push
xor
fidiv
clc
push
pop
jne
retf
fstp
lock
mov
adc
add
xlat
mov
xchg
cmovo
xlat
push
ret
xchg
aaa
sbb
add
push
mov
push
mov
push
ds
adc
push
(bad)
nop
sbb
sti
mov
shr
out
call
iret
add
cld
dec
sbb
inc
push
inc
(bad)
mov
xor
fst
(bad)
outs
mov
cdq
test
mov
mov
mov
adc
frstor
or
push
jl
(bad)
(bad)
xor
push
push
mov
xor
cmp
push
icebp
pop
pop
pusha
mov
push
les
push
dec
mov
jno
xor
add
cmp
cmps
lock
mov
test
call
gs
cmp
mov
xor
jl
ins
jp
inc
lock
xor
mov
pop
adc
mov
aas
or
das
inc
sub
push
push
clc
lock
pop
cmp
in
adc
or
dec
ja
int3
mov
jo
movs
dec
mov
push
ror
cld
call
dec
xchg
cmp
(bad)
int
mov
cli
cs
fcomp
and
adc
sbb
xor
sbb
jnp
mov
sub
leave
and
xor
(bad)
mov
loop
loope
loopne
lods
mov
mov
or
mov
scas
lock
cmp
xor
xor
inc
mov
push
shr
test
inc
pop
je
jnp
fdivr
sub
push
les
dec
add
adc
push
push
(bad)
or
aaa
test
into
xchg
mov
or
sub
sahf
int
or
sar
fsubr
push
je
or
inc
sbb
push
outs
xlat
ret
retf
mov
sbb
in
outs
xor
push
fistp
ret
std
jnp
inc
sub
call
pop
call
inc
in
push
icebp
jne
call
test
jo
sbb
out
and
hlt
int
out
int
pop
mov
stos
ret
push
fldlg2
into
or
out
outs
mov
cmp
pop
je
pop
adc
add
fwait
dec
hlt
mov
mov
or
cld
rol
hlt
push
add
xor
adc
or
pop
je
push
cmp
cmp
cmp
mov
ja
clc
call
sbb
idiv
ficom
hlt
cld
xor
dec
cmp
sub
jb
or
daa
mov
xchg
jbe
lds
imul
sub
mov
sub
xlat
movs
xchg
lods
enter
daa
stos
call
or
jge
mov
sub
and
lea
jne
push
push
test
mov
add
int3
mov
pavgb
fsub
popa
sub
lock
fs
rcl
or
bound
clc
pusha
pop
sbb
scas
push
add
das
adc
xchg
adc
out
int3
and
xor
push
and
adc
fsub
adc
data16
popf
fdivr
nop
loope
fimul
enter
sub
add
and
or
loopne
mov
mov
jae
adc
push
popf
outs
cmp
xchg
or
mov
xchg
hlt
mov
lock
cmp
jge
call
lods
mov
pusha
push
pop
retf
mov
inc
push
or
in
xchg
dec
inc
lds
loope
xchg
cmp
bound
pusha
call
retf
push
repnz
xchg
imul
leave
push
in
push
push
mov
inc
scas
adc
mov
outs
(bad)
inc
jg
cmps
jmp
or
add
frstor
or
setg
dec
and
stos
sbb
sbb
push
push
jg
push
push
les
movzx
mov
mov
inc
ret
repnz
outs
test
icebp
mov
retf
lods
mov
mov
sbb
mov
or
dec
mov
outs
fisttp
pop
loopne
cmps
mov
aaa
fld
jecxz
lea
push
mov
out
in
(bad)
outs
fistp
jne
pop
jb
movs
push
push
pusha
push
push
arpl
call
scas
xchg
cmp
call
shr
sbb
sub
repnz
or
jge
je
jae
ja
adc
xor
or
pop
and
mov
mov
and
pop
loopne
cli
xor
sbb
pop
sti
test
rcr
push
push
add
pop
add
push
push
fdiv
inc
dec
xchg
fcmovu
fiadd
loopne
loop
xchg
ss
jae
gs
push
add
fistp
or
pusha
or
jp
push
(bad)
or
push
mov
ss
jg
and
add
lds
pop
xor
jno
add
push
movs
push
cmp
mov
push
ds
inc
pop
clc
(bad)
into
and
jbe
xchg
cld
mov
push
dec
add
jo
test
push
aaa
or
jl
loopne
fsubr
mov
neg
add
mov
lods
imul
mov
xor
les
pop
inc
inc
fs
and
push
sub
fidivr
xor
inc
je
mov
sbb
add
arpl
adc
int
or
ret
or
inc
mov
or
and
dec
adc
mov
and
das
jmp
not
out
shl
xor
add
and
pop
jl
ins
enter
jnp
imul
or
push
js
test
fdivr
lods
sti
popa
jno
retf
cmp
push
invd
cmps
lock
out
add
inc
push
scas
xchg
test
adc
inc
test
call
jb
adc
pop
push
lock
or
jge
sub
push
sbb
mov
inc
jbe
inc
push
mov
dec
call
mov
ja
mov
inc
mov
inc
inc
inc
call
cmp
jb
pusha
lock
sub
sahf
adc
mov
ins
mov
and
cmp
pop
mov
mov
add
pusha
jmp
clc
inc
or
inc
push
add
mov
or
sub
jno
fdivr
dec
pop
call
add
cmp
(bad)
push
cmp
jle
sbb
jg
mov
hlt
sub
pop
push
sub
mov
mov
(bad)
sahf
mov
jne
add
ins
gs
mov
fbstp
nop
sub
inc
add
fwait
imul
jae
jae
cdq
ins
jae
out
add
pop
mov
ror
or
adc
pop
cmp
fcom
or
lea
nop
mov
xchg
xchg
mov
inc
inc
(bad)
sub
sub
xchg
inc
inc
jmp
ss
push
push
and
mov
adc
fld
mov
outs
iret
sahf
jns
cmc
or
sbb
lock
xor
clc
inc
push
leave
inc
dec
not
push
(bad)
shr
es
outs
leave
adc
int3
jmp
loop
mov
pop
je
mov
push
data16
repnz
stos
stos
scas
popf
ins
cmp
or
push
lahf
int3
dec
adc
mov
sahf
movs
inc
cmp
nop
cmps
sub
add
dec
adc
jne
cmp
test
cmp
add
out
and
clc
fmul
add
ins
xor
xor
dec
call
je
movsx
push
mov
push
cmp
addr16
mov
or
repz
mov
mov
add
fmul
cmp
hlt
add
or
mov
call
je
jp
clc
cmp
popf
mov
lods
mov
mov
add
mov
test
push
add
pop
rcl
fstp
add
fsubp
push
call
and
inc
cmc
push
fnstcw
add
pop
adc
fadd
push
push
lock
pushf
imul
add
mov
cwde
jmp
push
or
add
lea
(bad)
mov
or
pop
jo
aam
xchg
fcmovu
ja
in
cmp
and
(bad)
sti
aam
or
(bad)
ja
in
sbb
outs
cs
shr
je
call
sub
out
mov
fsubr
mov
jge
je
or
push
test
clc
xor
mov
dec
addr16
ins
or
push
sbb
leave
dec
(bad)
aad
sbb
adc
pusha
popa
dec
sbb
lahf
adc
movs
div
cld
je
daa
or
cmp
aaa
push
mov
movs
sub
cmp
and
inc
lods
inc
and
cmps
call
push
repz
xor
push
out
je
push
jmp
bound
rol
test
jbe
les
retf
mov
jne
scas
ins
adc
pop
xchg
jo
fsubr
call
push
call
push
pop
fmul
fbstp
sbb
mov
pop
call
repz
cmp
or
in
lea
pushf
ins
cmp
xchg
mov
push
aaa
push
call
and
add
loope
push
call
(bad)
push
ins
cmp
repnz
mov
fisubr
or
xor
sbb
jge
add
loopne
adc
dec
xor
aas
xor
pusha
int3
xchg
mov
ja
ins
or
mov
sbb
ficom
pop
xor
mov
push
pop
ins
mov
jp
adc
adc
or
cmp
ja
pop
cmp
adc
mov
cs
cmps
aas
inc
xchg
cmp
and
pop
jo
mov
fsub
and
mov
neg
fstp
bound
call
leave
pushf
arpl
pop
and
fs
outs
xor
xchg
mov
mov
ins
sar
cmp
test
test
or
imul
movs
movs
mov
(bad)
and
movs
fs
(bad)
jo
mov
add
sbb
out
mov
adc
push
adc
jmp
das
mov
and
stc
and
push
push
mov
push
enter
adc
test
cdq
nop
dec
test
nop
xchg
and
test
cmp
push
pop
mov
xor
and
push
adc
pushf
in
add
or
add
add
fs
iret
test
add
inc
cmps
adc
pop
(bad)
dec
call
mov
imul
adc
cmc
repz
add
sbb
jo
or
push
jnp
cmp
lss
rol
mov
(bad)
xor
xor
in
psubd
sub
add
lds
xchg
sbb
lods
push
cli
ds
neg
ins
push
add
addr16
inc
push
xor
add
jne
je
xor
ss
xchg
stos
leave
pop
and
cld
and
cs
call
add
push
addr16
scas
int
inc
or
mov
pusha
push
arpl
xchg
pop
js
clc
pop
xor
cmp
mov
ficom
dec
call
or
pop
out
daa
(bad)
sbb
pop
and
adc
add
push
lods
xchg
inc
stos
cli
(bad)
jbe
sbb
mov
dec
popa
adc
rcr
add
test
je
jl
pop
push
dec
sbb
xor
xchg
(bad)
cmps
sbb
das
pop
cs
movs
adc
push
xlat
std
xor
cmp
add
mov
in
jmp
push
sub
js
lds
mov
push
mov
adc
dec
pop
sbb
and
inc
das
shl
es
xor
ins
out
cmp
or
lea
cmp
and
inc
jae
cmp
imul
cmp
or
push
pop
shr
push
xchg
pop
or
out
cld
shr
inc
cmc
push
or
mov
mov
cld
nop
xchg
mov
mov
add
adc
dec
das
jne
jno
or
cmp
push
push
test
mov
aam
push
pop
rol
jb
mov
mul
call
call
ret
jmp
adc
push
ins
jmp
mov
pusha
push
cli
add
in
out
out
mov
fsubr
sbb
retf
int
in
fld
push
pop
(bad)
push
mov
fmul
hlt
dec
dec
sub
pop
(bad)
mov
sbb
inc
jne
pop
xor
and
jne
push
add
mov
dec
int3
aas
xor
adc
sub
out
ret
and
add
sub
sbb
adc
outs
mov
push
mov
mov
or
push
ret
int3
das
fcomp
add
out
(bad)
xor
and
xchg
jle
dec
movq
adc
add
aas
xchg
rcl
xor
sti
cmps
fisub
and
mov
cmps
or
jmp
xchg
cmp
pop
mov
and
cld
retf
ja
jb
mov
inc
call
push
sub
jmp
pop
mov
and
mov
xchg
ficomp
dec
div
push
pop
outs
sub
push
add
add
jne
dec
not
fldenv
ror
or
out
lea
xor
enter
add
pop
aaa
jp
ins
add
inc
aad
cld
push
in
es
inc
and
fdivr
adc
cmp
mov
cmps
pushf
inc
inc
mov
mov
js
add
add
in
(bad)
int3
ins
mov
jmp
cmp
std
mov
jo
sbb
inc
and
add
dec
sbb
adc
pop
mov
call
sub
test
adc
rcr
xor
cmp
dec
push
cmp
popf
cmp
dec
dec
add
and
cmp
je
arpl
or
mov
outs
mov
xor
xor
fisub
jg
pop
pop
inc
js
ret
pop
sti
and
and
ja
jae
xchg
add
mov
lahf
stos
ins
gs
add
or
or
not
push
mov
jae
imul
es
pop
outs
jo
mov
xchg
fcmovnu
mov
ret
or
push
outs
imul
cmp
or
jnp
cs
cmps
shr
or
or
aas
xor
inc
pop
push
add
sub
cdq
outs
pop
nop
jle
fcmovnbe
sbb
cmps
shl
shr
gs
movs
call
inc
push
push
jg
lods
fisubr
ja
lidtd
je
fisubr
popf
push
hlt
in
(bad)
xor
push
push
imul
imul
inc
cmp
push
inc
sysenter
fld
stos
inc
jbe
jae
push
fs
push
outs
lahf
arpl
push
add
inc
addr16
or
inc
sub
add
imul
test
xor
cmp
pop
inc
adc
das
int3
ss
mov
fs
jae
test
dec
outs
xchg
xchg
dec
jne
mov
add
outs
push
imul
push
push
jns
pop
sub
call
ins
or
add
xchg
movs
cmp
neg
test
sub
clc
inc
inc
cld
sbb
in
outs
jge
dec
outs
test
sub
xchg
push
jbe
jne
mov
pop
mov
jg
cmp
mov
xor
lea
dec
jne
jo
jmp
mov
fwait
test
nop
xchg
popa
inc
mov
out
sub
push
push
add
fadd
inc
push
dec
inc
dec
aad
inc
jne
jle
inc
inc
out
jns
into
or
push
sub
sahf
ja
xor
push
or
ins
out
jne
add
gs
sbb
push
push
jl
into
mov
push
xor
inc
outs
jne
or
ror
movs
popa
call
jae
gs
test
add
add
mov
retf
dec
dec
pop
test
push
push
sar
push
add
scas
pop
jae
jl
dec
(bad)
xor
dec
leave
(bad)
add
sbb
inc
inc
(bad)
aas
adc
outs
outs
lods
fld
inc
ins
or
dec
push
mov
add
call
sub
xor
or
ja
movs
inc
into
fisub
je
dec
xchg
adc
popf
lock
imul
outs
repnz
fwait
inc
cdq
jae
sbb
lods
ins
sub
fimul
pop
aam
push
gs
adc
data16
mov
jbe
(bad)
mov
adc
mov
mov
pop
pusha
add
ja
fcom
adc
or
sub
nop
lods
push
pop
adc
mov
adc
ret
call
outs
popf
jmp
push
pop
test
stos
(bad)
enter
add
and
push
or
pop
and
fwait
(bad)
dec
call
test
mov
xor
cmps
imul
std
pop
dec
shl
xor
add
inc
cs
sbb
add
adc
fisttp
mov
mov
fstp
adc
ins
inc
dec
cwde
test
and
xlat
inc
nop
sub
(bad)
inc
mov
aad
add
sub
ds
pop
aaa
xor
aaa
xchg
aaa
call
aaa
test
scas
aaa
shl
aaa
int
shl
jmp
or
(bad)
cmp
cmp
cmp
inc
cmp
jle
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
(bad)
(bad)
(bad)
cmp
jae
js
xchg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
push
cmp
imul
xchg
mov
mov
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
test
mov
enter
sar
pop
cmp
fidivr
jmp
sbb
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
(bad)
cmp
jmp
or
xor
ret
(bad)
(bad)
inc
dec
ds
mov
xchg
ds
sbb
cmp
pop
aas
mov
aas
sar
or
push
dec
and
pusha
xor
jnp
mov
mov
xor
(bad)
(bad)
(bad)
push
hlt
xor
xor
dec
xor
ins
xor
xor
xor
xor
xor
xor
xor
push
(bad)
(bad)
(bad)
push
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
push
int3
xor
ss
ss
test
call
(bad)
jmp
ss
ss
or
adc
sbb
and
aaa
jg
nop
aaa
pushf
aaa
mov
(bad)
in
dec
mov
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
inc
int3
cmp
cmp
aas
cmp
pop
cmp
cmp
cmp
cmp
xchg
stc
cmp
or
adc
sub
cmp
pop
dec
jb
js
cld
mov
mov
cmp
cmp
push
jecxz
lock
cmp
cmp
cmp
cmp
ret
jmp
pop
and
cmp
cmp
cmp
cmp
pop
js
cmp
pushf
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
into
mov
aam
fnstcw
jmp
ds
xor
inc
ds
ds
(bad)
(bad)
dec
push
ds
ds
mov
sar
fnstsw
loop
out
out
adc
sub
inc
push
aas
push
aas
cmp
aas
mov
aas
(bad)
mov
loopne
ja
or
adc
and
inc
aaa
cld
(bad)
fistp
push
xor
data16
jge
xchg
xchg
xor
xor
stos
out
adc
(bad)
(bad)
push
sbb
and
das
xor
push
xor
pop
xor
xor
xor
mov
aam
loope
icebp
mov
push
cmp
(bad)
push
cld
xor
test
nop
mov
test
shl
fdiv
fidiv
in
jmp
(bad)
push
push
xor
xor
xor
xor
cmp
xor
dec
xor
xor
xchg
mov
scas
xor
jg
(bad)
push
sbb
cmp
xor
xor
xor
xor
xor
xor
xlat
outs
xor
xor
xor
sub
inc
test
mov
xor
mov
sti
xor
adc
inc
js
inc
imul
packssdw
ins
push
push
outs
cs
ja
dec
push
imul
xor
or
gs
xor
add
pop
xor
mov
pop
or
rol
retf
push
cmp
xchg
add
sbb
sbb
pop
mov
xchg
outs
data16
sub
fwait
ins
outs
sbb
fdivr
(bad)
popa
push
(bad)
(bad)
adc
inc
mov
pop
leave
mov
mov
and
inc
mov
inc
push
xchg
cmp
pop
jnp
imul
pop
cwde
sbb
int
js
and
fstp
dec
inc
adc
je
(bad)
jne
jae
sub
sbb
icebp
pop
dec
inc
and
or
push
ds
enter
jo
adc
mov
and
movs
cmp
jae
sbb
xor
inc
push
push
into
mov
fld
arpl
add
sub
sub
and
lods
shl
pushw
sbb
add
cmps
(bad)
int3
and
int3
dec
xchg
jl
mov
or
loopne
adc
inc
push
enter
push
out
inc
add
add
and
aad
jo
pop
dec
and
mov
inc
dec
sbb
test
fwait
movs
movs
jmp
and
mov
or
add
add
add
dec
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
