xor
add
add
dec
add
add
add
add
add
sbb
add
lock
add
jno
add
xor
add
add
add
add
and
add
add
add
add
add
or
add
test
add
lea
rol
add
add
add
add
add
add
or
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
push
inc
add
add
add
add
sbb
sub
sbb
cli
sub
adc
add
add
add
adc
add
add
sbb
inc
pop
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
sub
add
push
sub
add
push
and
adc
sbb
lea
add
add
adc
add
sub
pop
inc
xchg
pop
pusha
pop
or
lods
push
inc
add
add
add
add
sbb
lahf
sbb
cli
sub
add
adc
push
add
add
add
add
sbb
inc
add
add
add
add
add
add
add
mov
jl
push
adc
sbb
adc
pop
add
add
add
add
aas
add
add
add
add
aas
add
add
add
cmp
add
xchg
pusha
and
pushf
sub
xor
add
add
add
add
adc
or
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
lea
ror
add
add
add
add
sub
sub
add
adc
add
sbb
add
add
add
add
add
add
pop
or
inc
add
add
jmp
add
sub
xor
add
add
add
add
jle
add
add
jle
add
add
add
or
inc
or
add
cmp
add
mov
add
add
add
mov
add
cmp
add
push
add
add
add
inc
add
add
add
mov
add
push
or
or
int3
add
popa
pop
xor
jle
add
add
cmp
add
add
cmp
add
and
add
add
popa
inc
add
add
add
add
push
or
cdq
sbb
cmp
mov
add
sbb
outs
add
add
push
pop
pop
or
sbb
adc
pop
sub
add
cmp
(bad)
call
add
dec
xchg
and
add
pop
sub
adc
xchg
and
or
dec
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sub
push
(bad)
(bad)
inc
add
adc
add
aam
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
imul
add
add
add
add
add
add
or
add
out
add
xchg
or
popa
pop
inc
pop
push
popa
inc
add
add
add
or
cli
adc
cmp
mov
add
sbb
mov
add
sbb
add
or
pop
pop
or
pop
pop
or
add
and
add
pop
or
inc
sbb
pop
sbb
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
sub
ja
(bad)
call
xor
add
add
add
add
adc
add
add
add
or
add
add
or
add
call
add
add
call
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
or
add
adc
and
add
xchg
pop
gs
or
pop
or
popa
pop
xor
popa
inc
add
add
push
add
add
add
push
mov
add
sub
xchg
and
sub
adc
adc
sbb
add
cmp
(bad)
inc
mov
add
sbb
add
or
pop
or
inc
pop
pop
or
pop
sub
sbb
(bad)
call
add
add
pop
sub
pop
or
inc
jne
add
add
adc
add
pop
or
inc
adc
add
mov
add
jle
add
add
add
or
add
add
or
add
add
add
jae
add
push
add
add
add
cmp
add
sbb
add
xor
add
or
add
inc
add
add
add
dec
add
add
or
add
es
or
adc
sbb
add
xchg
pop
xor
sub
and
add
add
add
add
sbb
sub
adc
pop
or
add
or
pop
or
pop
or
and
pop
sub
adc
add
pop
or
call
sub
adc
cmp
(bad)
inc
je
add
add
sbb
cmp
(bad)
inc
adc
add
sbb
add
or
add
jle
add
add
add
add
push
sub
add
or
add
xchg
add
dec
add
add
add
xchg
add
sub
add
adc
add
ret
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sub
pop
imul
add
xchg
pop
adc
mov
push
pop
push
popa
inc
add
add
adc
add
adc
pop
bound
pop
adc
jle
(bad)
call
or
cmc
adc
adc
and
call
adc
arpl
(bad)
inc
mov
add
sbb
mov
add
sbb
add
or
adc
add
(bad)
(bad)
inc
pop
pop
or
pop
or
push
pop
cmp
and
add
and
(bad)
dec
sbb
adc
push
pop
imul
or
add
repnz
je
add
add
sbb
add
idiv
(bad)
inc
add
adc
add
in
add
or
add
jle
add
add
push
jle
add
add
pop
sub
adc
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
cmp
add
ror
add
push
es
adc
sbb
add
popa
pop
push
pop
push
popa
inc
add
add
adc
add
adc
and
and
adc
stc
adc
adc
pop
jae
and
add
pop
adc
add
add
outs
or
add
or
push
pop
xor
pop
adc
inc
pop
pop
or
dec
push
add
or
add
add
add
sbb
pop
xor
push
adc
call
pop
pop
cmp
sldt
add
sbb
add
call
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
or
add
es
adc
mov
add
mov
add
inc
pop
push
popa
inc
add
add
or
add
adc
and
add
call
adc
or
adc
and
and
adc
js
(bad)
inc
mov
add
sbb
or
add
or
add
add
pusha
(bad)
(bad)
inc
pop
pop
or
jle
add
add
or
add
add
or
jle
add
add
in
add
add
pushf
pop
sub
sbb
add
sub
(bad)
call
or
cmc
sbb
add
and
(bad)
inc
sub
adc
push
(bad)
(bad)
inc
add
xor
aam
add
or
add
jle
add
add
add
add
or
add
push
add
add
add
push
add
add
add
add
add
add
add
xor
add
sub
add
jo
add
cmp
add
push
or
add
add
add
pop
push
popa
inc
add
add
add
adc
lods
adc
cmc
pop
adc
mov
add
add
or
add
push
pop
pop
or
or
or
or
or
pop
pop
xor
sbb
add
jl
(bad)
call
add
add
adc
add
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
or
sub
jae
(bad)
call
xor
hlt
add
add
add
jle
add
add
pop
jle
add
add
or
dec
adc
inc
or
add
add
add
and
add
xchg
add
add
add
add
add
adc
add
add
add
add
add
add
jae
add
ror
add
push
adc
pop
pop
xchg
and
adc
sub
out
add
xchg
adc
sub
jge
push
popa
inc
add
add
push
add
add
or
push
sub
adc
(bad)
adc
or
sbb
(bad)
(bad)
inc
sub
add
or
or
hlt
add
add
add
push
cmp
(bad)
inc
pop
pop
or
adc
or
add
pop
pop
xor
sbb
push
cmp
(bad)
call
pop
pop
jg
and
push
add
pop
sub
adc
and
add
add
(bad)
(bad)
inc
sub
adc
cmp
(bad)
call
xor
add
add
jle
add
add
add
or
add
data16
add
add
xor
add
stos
add
add
add
movs
add
add
adc
add
sub
add
push
sub
add
push
and
add
and
add
sub
add
sub
lea
add
add
adc
add
sbb
adc
pusha
add
add
add
add
or
or
add
or
jle
add
add
cwde
add
add
add
pop
or
call
adc
add
and
(bad)
outs
and
or
sbb
inc
inc
add
add
inc
(bad)
(bad)
inc
add
add
call
add
ins
xchg
adc
test
add
xchg
pop
sub
add
fst
mov
add
fiadd
pop
or
push
adc
inc
or
add
pop
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
lea
pop
or
add
pop
xchg
and
add
add
push
sub
push
sbb
xor
es
adc
sub
cmc
add
add
add
push
sub
add
add
add
add
adc
cmp
call
sub
push
je
add
sbb
adc
add
add
sub
adc
add
add
add
call
add
adc
add
cmp
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
and
add
add
add
sub
sub
add
adc
add
sbb
add
add
add
add
add
add
pop
or
add
add
inc
add
add
out
(bad)
inc
add
add
sub
xor
add
add
add
add
adc
sub
sub
add
push
pop
or
add
add
inc
add
add
loopne
(bad)
inc
add
add
sub
add
xor
jno
add
add
add
sbb
inc
pop
add
add
add
add
add
add
add
add
add
add
add
and
out
add
sub
add
push
add
lods
add
add
loope
add
sub
add
sub
mov
add
xchg
add
add
add
add
add
push
sub
sub
add
add
add
sbb
sub
add
add
xor
add
add
adc
add
add
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
and
add
and
add
sub
add
sub
or
rol
add
add
or
add
or
add
pop
or
stos
sbb
cli
sub
add
adc
add
jne
add
sldt
adc
add
add
jle
add
add
add
or
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
push
or
lods
pop
or
stc
sbb
pop
or
sub
push
and
loopne
std
popa
pop
or
or
xchg
sbb
or
mov
inc
add
add
adc
add
sbb
add
sub
add
cmp
add
or
xor
add
cmp
(bad)
call
add
xchg
and
sub
adc
add
pop
sub
adc
add
je
add
pop
sub
pop
adc
into
add
add
add
push
add
or
or
or
cmp
(bad)
(bad)
call
adc
add
pop
sbb
or
pop
or
ud0
jmp
or
test
pop
or
cmp
(bad)
(bad)
inc
add
sub
add
or
sbb
out
(bad)
(bad)
inc
jnp
add
add
or
adc
cmp
pop
or
sar
(bad)
call
or
not
or
add
sub
pop
or
mov
adc
add
sbb
xor
sbb
stos
(bad)
(bad)
jmp
or
pop
xchg
pop
or
cmp
sub
add
adc
add
sub
add
adc
add
jle
add
add
jle
add
add
add
(bad)
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
sub
or
adc
add
and
outs
and
mov
or
fs
and
sbb
add
cmp
(bad)
inc
inc
push
add
add
add
add
add
adc
add
and
add
and
add
das
add
add
or
(bad)
call
(bad)
neg
or
and
adc
jge
pop
sub
sbb
fisttp
pop
sub
pop
sub
or
sbb
and
std
add
pop
sub
add
add
rol
add
jae
add
or
jg
add
and
add
add
push
add
sub
or
(bad)
call
add
add
or
push
or
loop
(bad)
inc
push
and
add
add
inc
add
add
pop
add
sub
or
(bad)
call
adc
add
adc
cmp
(bad)
inc
and
adc
sbb
js
add
and
add
sub
add
sub
and
and
inc
add
pop
or
mov
(bad)
call
or
pop
inc
xchg
and
add
pop
or
jbe
(bad)
call
add
add
xchg
inc
test
and
test
pop
or
or
pop
xchg
and
or
push
(bad)
(bad)
jmp
or
push
xchg
and
arpl
add
cmp
(bad)
inc
pop
and
mov
add
sub
add
sub
and
add
add
jae
add
or
adc
add
pop
adc
sbb
(bad)
call
or
(bad)
call
adc
sbb
and
and
mov
add
cmp
std
(bad)
jmp
pop
or
jmp
xor
add
add
add
add
adc
add
add
add
add
push
sbb
add
add
or
add
cmp
add
cmp
add
dec
add
add
add
sub
add
sub
add
add
add
js
add
pop
add
add
or
adc
into
add
pop
push
popa
inc
add
add
add
adc
mov
xchg
and
add
pop
sub
adc
push
add
add
pushf
add
mov
add
sbb
adc
add
push
pop
pop
or
pop
add
add
and
and
sbb
pop
xor
sbb
(bad)
(bad)
call
push
pop
cs
pop
sub
out
sub
adc
adc
inc
add
add
add
add
add
add
add
pop
add
push
sub
fs
(bad)
inc
adc
add
mov
add
adc
add
jle
add
add
sbb
inc
or
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
or
or
int3
add
popa
pop
and
popa
inc
add
add
add
add
push
or
mov
sub
sbb
mov
mov
add
sbb
sub
add
push
pop
pop
or
sbb
add
or
xchg
or
loopne
add
xchg
or
sub
or
jle
(bad)
jmp
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
mov
add
xor
add
add
add
add
adc
add
add
push
jle
add
add
pop
sub
inc
or
add
ret
add
add
ret
add
add
add
add
add
add
adc
add
add
add
add
add
add
sbb
add
adc
pop
outs
xchg
and
adc
adc
pop
aaa
xchg
and
imul
pop
adc
jle
add
add
xor
or
add
xor
add
and
add
add
popa
pop
and
popa
inc
add
add
or
add
push
adc
call
pop
and
add
add
sbb
add
inc
mov
add
sbb
mov
add
sbb
adc
adc
and
add
add
add
inc
pop
pop
or
mov
add
or
add
sbb
add
or
sbb
xor
pop
or
add
call
sub
pop
or
add
inc
sub
or
add
inc
add
xor
add
add
add
add
adc
or
inc
add
add
add
add
add
add
add
lods
inc
jl
push
adc
sbb
adc
pop
add
add
adc
add
xor
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
stos
inc
jl
sbb
sbb
adc
pop
add
add
adc
add
add
add
add
adc
add
add
jle
add
add
add
or
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
or
fadd
add
xchg
pop
or
mov
add
add
add
add
sbb
mov
xchg
and
mov
sub
add
adc
add
add
add
jle
add
add
movd
add
add
adc
pop
adc
inc
adc
add
pop
add
add
add
add
add
(bad)
add
add
add
xchg
add
xor
add
add
add
add
adc
add
add
add
mov
add
add
add
add
sbb
adc
pop
cmp
add
mov
add
jle
add
add
or
add
and
sbb
pop
popa
or
adc
push
xchg
and
arpl
add
push
cmp
(bad)
(bad)
jle
add
add
add
call
push
cmp
(bad)
call
or
cmc
or
add
sub
je
add
sbb
add
add
add
add
push
adc
or
or
adc
add
add
pop
adc
cmp
(bad)
(bad)
push
add
or
add
or
add
sbb
or
adc
add
sbb
or
pop
xchg
adc
push
adc
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
adc
and
mov
adc
cmp
(bad)
(bad)
call
push
pop
and
adc
adc
add
pop
adc
cmp
adc
xor
pop
sub
adc
pop
punpckldq
or
add
adc
xchg
adc
push
adc
cmp
(bad)
call
or
add
mov
or
adc
pop
adc
push
cmp
(bad)
call
add
sbb
add
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
sbb
(bad)
(bad)
call
or
pop
adc
adc
and
add
add
push
cmp
(bad)
(bad)
call
or
pop
xor
sbb
push
cmp
sub
adc
outs
sbb
add
or
add
add
or
add
mov
(bad)
(bad)
dec
je
add
add
adc
add
int3
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
jg
add
rcr
add
push
adc
pop
xchg
pop
or
sub
sub
inc
pop
push
popa
inc
add
add
add
add
sbb
sub
adc
pop
or
sbb
add
or
or
pop
or
and
pop
sub
push
or
call
add
movs
sub
add
in
adc
push
add
add
add
cmp
(bad)
inc
jne
add
add
push
or
call
xor
add
add
add
add
adc
add
add
add
or
add
xor
add
ins
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
xchg
pop
push
pop
or
popa
pop
pop
pop
push
popa
inc
add
add
add
add
sbb
add
daa
add
add
sub
add
add
sbb
add
push
pop
pop
or
pop
pop
or
add
ins
xchg
or
inc
sbb
push
adc
out
add
xchg
or
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
sub
jns
(bad)
inc
adc
add
fadd
add
add
add
add
add
or
add
add
or
add
add
add
inc
add
add
add
add
add
add
push
add
add
add
xor
add
jae
add
push
or
add
test
add
xchg
or
push
add
pop
pop
pop
push
popa
inc
add
add
add
add
push
or
pop
pop
xchg
and
add
pop
sub
adc
add
pop
or
add
sub
add
push
pop
pop
or
add
add
add
ins
xchg
or
inc
sbb
pop
sbb
(bad)
call
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
outs
(bad)
(bad)
call
xor
add
add
add
add
adc
add
add
sbb
inc
or
add
cwde
add
add
add
das
add
add
add
jo
add
add
add
mov
add
cwde
add
add
daa
lea
add
add
add
add
add
add
pop
add
add
push
je
add
sbb
add
push
je
add
sbb
and
sldt
popf
push
je
add
sbb
push
and
add
and
inc
add
sub
sbb
and
push
je
add
sbb
and
pop
or
arpl
(bad)
inc
je
add
sbb
and
add
popf
push
jne
add
sbb
and
add
popf
sbb
(bad)
inc
jne
add
sbb
and
and
add
add
add
add
je
add
sbb
sub
and
add
sub
add
adc
add
pop
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
mov
add
or
add
pusha
add
add
add
add
add
add
add
add
add
add
jnp
add
shl
add
push
sbb
add
adc
pop
inc
xchg
and
push
add
pop
adc
popa
pop
dec
pop
push
popa
inc
add
add
adc
add
adc
and
and
inc
add
pop
adc
and
add
add
out
rol
add
add
sbb
pop
or
add
inc
mov
add
sbb
mov
add
sbb
add
or
pop
or
add
inc
pop
pop
or
or
and
add
add
mov
add
or
sbb
xor
sbb
(bad)
(bad)
call
sub
adc
pop
xchg
and
add
pop
adc
inc
jne
add
add
pop
or
add
inc
adc
push
add
add
adc
add
add
dec
jle
add
add
dec
and
dec
adc
repnz
add
add
xor
add
test
add
inc
sbb
add
adc
add
add
jecxz
add
cmp
add
sbb
add
sbb
add
sub
add
and
add
and
add
pop
adc
add
add
fsub
add
adc
add
add
and
add
sub
add
sbb
add
xor
add
sbb
add
sub
add
add
mov
add
add
push
adc
add
sub
add
adc
add
sub
add
add
out
add
dec
add
sahf
sldt
gs
add
add
ds
add
add
add
std
sldt
sbb
add
dec
and
add
add
(bad)
or
add
sub
add
add
cdq
or
add
mov
add
push
push
add
dec
sbb
add
add
dec
xor
add
and
add
adc
add
add
push
cmp
add
add
sahf
or
add
sldt
neg
add
cmp
add
arpl
add
cmp
add
add
xlat
pop
add
add
pop
add
aaa
cmp
add
pop
add
ss
add
add
adc
add
and
add
push
add
xor
add
add
add
jecxz
add
jns
add
and
add
or
add
sub
add
sbb
add
push
add
outs
and
add
or
add
adc
add
add
add
imul
add
jecxz
add
je
add
pop
sbb
add
sbb
add
dec
and
add
cmp
add
sbb
add
add
jecxz
add
dec
xor
add
daa
add
sub
add
out
add
dec
sbb
add
xor
add
add
cmp
add
xchg
sbb
add
and
add
cdq
add
ficom
add
icebp
sub
add
sbb
add
das
add
std
push
add
out
add
repz
add
sldt
push
adc
add
and
add
push
add
out
adc
add
add
sbb
add
xor
add
adc
add
sbb
add
add
das
add
nop
sbb
add
xor
add
adc
add
push
add
mov
add
dec
xor
add
add
lea
add
pop
and
add
adc
add
sub
add
sub
add
add
jl
add
in
das
add
mov
sub
add
push
add
shr
add
sahf
or
add
push
add
not
add
hlt
push
add
arpl
add
cmps
and
add
add
lock
add
mov
add
sub
add
mov
xor
add
add
sbb
sub
add
bound
add
movlps
add
add
xor
xor
add
xor
add
and
add
add
test
and
add
add
fistp
add
shl
add
daa
add
(bad)
add
pop
sub
add
or
add
sbb
add
add
add
add
mov
push
add
jns
add
jbe
add
in
add
push
sub
add
adc
add
add
inc
xor
add
add
clc
or
add
add
enter
ror
add
das
add
lea
add
sbb
add
mov
add
iret
sbb
add
add
mov
add
(bad)
sbb
add
xor
add
or
add
sub
add
cs
add
and
add
sub
add
(bad)
sub
add
adc
add
sbb
add
shl
add
rcl
add
and
add
mov
add
mov
push
add
arpl
add
sbb
add
xor
add
add
mov
add
aaa
xor
add
test
xor
add
fst
add
sbb
add
mov
add
adc
add
dec
adc
add
sub
add
cmp
add
and
add
and
add
or
add
pop
add
sub
add
test
add
mov
sub
add
mov
xor
add
add
and
add
fistp
add
xor
add
push
add
pushf
xor
add
add
sub
add
push
daa
add
popf
xor
add
add
imul
add
adc
add
fldenv
add
sub
add
and
add
or
sub
add
add
add
add
dec
adc
add
push
add
jns
add
xor
add
dec
adc
add
jns
add
ret
sbb
add
add
add
add
movs
add
xor
add
pop
add
fwait
adc
add
add
fisttp
add
ja
add
pop
cmp
add
sbb
add
sbb
add
cmp
add
sub
add
add
daa
add
cwde
adc
add
pop
add
add
daa
add
popa
adc
add
sub
add
add
dec
or
add
add
sbb
add
and
add
sbb
add
add
sbb
add
movs
xor
add
pop
add
aaa
and
add
add
loop
add
cmp
add
mov
and
add
add
or
add
add
inc
sldt
in
and
add
push
add
int3
or
add
pushf
xor
add
and
add
add
dec
add
rcl
add
add
adc
add
sldt
adc
add
add
add
sbb
add
or
add
fisubr
add
cmc
push
add
cmp
add
movs
push
add
sub
add
sub
add
and
add
add
int
add
int
add
movs
and
add
jp
add
push
adc
add
add
aad
add
retf
add
add
jo
add
jge
add
dec
cmp
add
or
add
mov
cmp
add
add
push
push
add
stc
or
add
or
add
xor
add
xor
add
out
xor
add
xor
add
add
adc
add
xor
add
cmp
add
and
add
imul
add
sub
add
add
adc
add
add
sub
add
daa
add
cmps
and
add
sub
add
and
add
fwait
sub
add
adc
add
and
add
cmps
sub
add
pop
add
add
add
push
sbb
add
pop
pop
add
or
add
ficomp
add
inc
add
add
xor
add
add
dec
pop
add
out
add
cmp
add
cmp
add
pop
sub
add
pop
add
and
add
nop
das
add
aam
add
out
add
sbb
add
adc
add
sbb
add
or
add
adc
add
add
scas
pop
add
call
add
xor
add
and
add
push
adc
add
sbb
add
ror
add
add
sbb
leave
add
add
pushf
add
add
or
add
and
add
and
add
add
or
add
and
mov
add
push
or
aad
add
adc
in
idiv
inc
pop
cmp
or
adc
(bad)
add
add
dec
cmp
idiv
call
or
add
sbb
or
add
adc
ret
idiv
jmp
and
add
add
dec
cmp
adc
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
push
add
ja
add
jle
add
mov
add
sahf
add
add
add
add
add
int
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
popa
add
add
add
jne
add
jg
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
test
add
pop
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
test
add
pop
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pusha
add
add
add
jno
add
jnp
add
add
mov
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
add
inc
add
add
pop
add
add
ja
add
add
add
mov
add
mov
add
add
fild
add
add
add
adc
add
sbb
add
es
add
ss
add
dec
push
add
pop
push
add
pushw
add
jo
add
add
add
push
add
movs
push
add
scas
push
add
mov
push
add
xlat
push
add
in
add
out
push
add
add
add
adc
add
push
pop
add
sub
add
xor
add
cmp
add
inc
pop
add
push
pop
add
pusha
pop
add
jbe
add
add
add
pop
add
lods
pop
add
rol
add
pop
add
fiadd
add
loope
add
adc
sub
pop
adc
lock
(bad)
call
dec
and
add
xchg
and
add
add
jmp
adc
inc
add
add
add
aad
inc
sub
and
add
sub
and
add
add
ret
adc
or
pop
sub
add
scas
and
test
mov
mov
xchg
and
add
add
xchg
and
add
sub
xchg
and
add
pop
cmp
(bad)
call
dec
pop
sbb
add
pop
cmp
(bad)
jmp
fld
add
cmp
(bad)
jmp
mov
add
cmp
(bad)
jmp
retf
add
add
dec
(bad)
(bad)
jmp
mov
add
cmp
(bad)
call
xor
ds
(bad)
jmp
call
(bad)
call
and
sub
add
(bad)
(bad)
jmp
jge
add
cmp
(bad)
(bad)
jmp
xchg
add
add
ud0
call
inc
cmp
(bad)
(bad)
call
dec
and
add
add
clc
(bad)
(bad)
call
dec
and
and
cmp
(bad)
(bad)
call
dec
pop
dec
xchg
and
cmp
(bad)
(bad)
jmp
loopne
add
cmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
call
sbb
mov
dec
pop
pop
xchg
and
add
pop
cmp
rol
add
cmp
dec
add
add
xchg
(bad)
(bad)
jmp
add
add
mov
(bad)
call
dec
pop
pop
xchg
and
add
pop
cmp
call
dec
and
adc
xchg
pop
cmp
(bad)
call
dec
pop
imul
(bad)
call
dec
pop
adc
and
cmp
(bad)
jmp
ins
add
add
inc
(bad)
(bad)
jmp
cmps
add
add
ss
(bad)
jmp
pushf
add
add
sub
(bad)
jmp
ja
add
cmp
(bad)
(bad)
call
dec
pop
jno
and
cmp
(bad)
(bad)
call
dec
pop
ins
xchg
and
cmp
(bad)
(bad)
call
dec
pop
pop
xchg
and
stos
add
pop
cmp
std
(bad)
jmp
dec
add
add
call
dec
and
add
add
fdivr
(bad)
jmp
inc
add
add
into
std
(bad)
call
dec
pop
jg
and
push
add
pop
cmp
or
mov
(bad)
call
dec
and
add
xchg
pop
cmp
(bad)
call
dec
and
add
add
jmp
ret
add
add
nop
std
(bad)
jmp
das
add
add
xchg
(bad)
jmp
test
add
cmp
call
dec
pop
pop
xchg
and
cmp
call
imul
std
(bad)
jmp
pop
add
add
pop
std
(bad)
call
inc
cmp
call
dec
pop
jbe
and
add
pop
cmp
call
dec
pop
push
and
mov
add
xor
(bad)
jmp
lock
add
sub
(bad)
jmp
and
add
cmp
std
(bad)
jmp
std
add
add
push
std
(bad)
jmp
rol
add
cmp
add
add
add
(bad)
jmp
int3
add
add
clc
cld
(bad)
call
dec
sbb
add
jmp
dec
add
add
(bad)
(bad)
jmp
mov
add
cmp
cld
(bad)
jmp
sbb
retf
cld
(bad)
call
dec
and
add
add
xchg
pop
cmp
dec
cmp
fiadd
add
cmp
dec
pop
xor
add
pop
cmp
sbb
nop
cld
(bad)
jmp
int
add
cmp
bound
add
cmp
jmp
fwait
add
add
jb
(bad)
call
dec
pop
dec
xchg
and
cmp
(bad)
call
dec
pop
adc
pop
cmp
(bad)
call
dec
and
pop
pop
pop
cmp
(bad)
call
dec
pop
pop
xchg
and
outs
add
pop
cmp
cld
(bad)
jmp
jno
add
cmp
cld
(bad)
jmp
adc
add
cmp
cld
(bad)
call
push
cmp
cld
(bad)
jmp
cwde
add
add
or
or
jmp
add
add
cld
sti
(bad)
call
dec
pop
fs
and
sbb
add
in
sti
(bad)
jmp
xchg
add
add
loop
(bad)
call
dec
pop
xor
add
pop
cmp
sti
(bad)
call
push
cmp
sti
(bad)
call
dec
and
add
add
sti
(bad)
call
jle
mov
(bad)
jmp
iret
add
add
stos
sti
(bad)
jmp
mov
mov
jl
call
add
cmp
jne
mov
(bad)
call
push
cmp
dec
and
add
xchg
and
add
add
outs
sti
(bad)
jmp
pop
add
add
gs
(bad)
jmp
pop
add
add
pop
sti
(bad)
jmp
fild
add
cmp
(bad)
jmp
aad
add
cmp
(bad)
call
dec
pop
sub
add
aaa
sti
(bad)
call
pop
cmp
sti
(bad)
jmp
sgdtd
add
es
(bad)
jmp
mov
sbb
(bad)
call
or
adc
mov
add
cmp
sti
(bad)
call
sbb
jmp
nop
add
add
cli
cli
(bad)
jmp
les
add
cmp
cli
(bad)
jmp
add
add
out
(bad)
jmp
mov
fdivr
(bad)
jmp
mov
cli
(bad)
jmp
movs
add
add
enter
adc
jbe
add
xchg
pop
sbb
mov
push
mov
(bad)
call
dec
and
add
add
add
sahf
cli
(bad)
jmp
clc
add
add
xchg
cli
(bad)
jmp
and
add
cmp
dec
and
add
add
call
dec
and
out
add
pop
cmp
(bad)
call
dec
pop
inc
xchg
and
add
pop
cmp
(bad)
jmp
inc
add
add
push
cli
(bad)
jmp
xor
add
cmp
(bad)
call
dec
and
add
add
ss
(bad)
jmp
cmps
add
add
sub
(bad)
call
dec
and
add
add
add
sbb
(bad)
call
dec
pop
sub
pop
cmp
cli
(bad)
call
dec
pop
ins
xchg
and
add
add
stc
stc
(bad)
jmp
mov
out
stc
(bad)
jmp
add
add
in
(bad)
call
dec
pop
outs
xchg
and
iret
add
pop
cmp
stc
(bad)
call
dec
and
add
add
add
add
(bad)
call
dec
pop
jae
and
add
pop
cmp
jo
add
cmp
in
add
add
fwait
stc
(bad)
call
dec
pop
dec
xchg
and
add
pop
cmp
mov
add
cmp
dec
and
and
add
add
outs
stc
(bad)
call
jae
addr16
(bad)
jmp
loop
add
cmp
(bad)
call
dec
pop
imul
stc
(bad)
jmp
add
add
inc
stc
(bad)
call
dec
push
xchg
and
add
pop
cmp
(bad)
call
dec
pop
pop
xchg
pop
ja
cmp
stc
(bad)
jmp
jp
add
cmp
dec
and
and
or
(bad)
call
dec
and
les
idiv
(bad)
jmp
icebp
add
add
in
clc
(bad)
call
dec
and
add
add
call
bound
fprem
(bad)
jmp
push
add
add
iret
clc
(bad)
jmp
mov
(bad)
call
dec
pop
aaa
xchg
and
push
add
mov
(bad)
jmp
xchg
add
add
stos
clc
(bad)
call
dec
and
adc
inc
add
xchg
pop
cmp
dec
and
add
add
call
dec
pop
imul
(bad)
call
dec
pop
sbb
pop
cmp
(bad)
jmp
movs
add
add
pop
clc
(bad)
call
dec
and
and
dec
clc
(bad)
call
dec
pop
cmp
pop
cmp
clc
(bad)
jmp
xchg
add
cmp
clc
(bad)
call
inc
cmp
clc
(bad)
call
inc
cmp
clc
(bad)
dec
pop
js
dec
adc
and
dec
adc
mov
add
xchg
and
fwait
add
pop
adc
imul
(bad)
call
or
add
pop
pop
xor
adc
pop
add
add
dec
cmp
in
(bad)
jmp
adc
and
pop
adc
enter
add
or
pop
and
pop
or
ins
adc
mov
(bad)
call
jne
dec
and
add
add
dec
cmp
and
add
es
inc
adc
xchg
in
(bad)
inc
adc
loopne
adc
or
dec
loopne
adc
pop
push
adc
ja
(bad)
call
adc
dec
and
add
add
dec
cmp
(bad)
call
and
add
and
jns
pop
pop
popa
adc
and
add
adc
dec
in
(bad)
call
dec
sub
and
dec
cmp
in
(bad)
call
dec
pop
jae
and
out
add
in
adc
pop
adc
sbb
dec
and
add
add
dec
cmp
or
add
es
add
add
dec
cmp
in
(bad)
call
add
and
add
adc
push
adc
and
and
add
add
dec
cmp
jmp
call
and
add
adc
and
pop
adc
int3
jmp
call
or
push
pop
xor
dec
and
add
add
dec
cmp
and
add
and
fcmovnu
or
mov
adc
adc
adc
pop
adc
dec
cmp
inc
pop
sbb
dec
sub
and
add
xchg
and
add
pop
adc
jbe
(bad)
jmp
(bad)
add
add
repnz
and
add
add
dec
cmp
call
or
add
sbb
xor
add
adc
inc
jmp
jmp
and
add
add
dec
cmp
jmp
inc
and
dec
cmp
(bad)
call
adc
adc
dec
adc
cmps
add
add
dec
cmp
jmp
call
or
add
sbb
cs
pop
xchg
adc
std
jmp
dec
cmp
jmp
xchg
add
add
dec
sub
add
adc
fucomi
(bad)
call
dec
pop
dec
xchg
and
hlt
add
pop
sub
pop
inc
adc
(bad)
add
add
dec
cmp
or
add
sbb
xor
es
cmp
dec
cmp
adc
inc
xchg
and
adc
cwde
jmp
pop
and
ins
push
pop
pop
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
adc
adc
and
adc
gs
pop
adc
adc
push
pop
dec
adc
pop
pop
adc
dec
jmp
pop
adc
dec
and
and
mov
add
dec
cmp
jmp
push
adc
dec
xchg
and
dec
cmp
jmp
adc
and
dec
and
add
add
dec
cmp
jmp
add
and
add
add
dec
cmp
jmp
sub
and
dec
cmp
jmp
add
add
repnz
pop
je
add
sbb
xor
pop
adc
je
add
sbb
xor
pop
adc
add
add
adc
mov
(bad)
call
inc
adc
(bad)
add
add
dec
cmp
and
add
es
add
add
dec
cmp
or
pop
adc
adc
sbb
add
pop
adc
js
(bad)
call
or
push
and
dec
adc
mov
add
xchg
adc
jno
pop
adc
pop
jmp
add
push
sbb
dec
adc
fadd
add
xchg
pop
sub
dec
cmp
adc
dec
cmp
(bad)
call
aaa
pop
pop
adc
pop
jge
dec
adc
std
add
add
dec
cmp
jmp
add
push
sbb
xor
adc
cmp
and
add
pop
adc
cld
call
jne
add
adc
out
call
dec
pop
and
pop
adc
fsubr
(bad)
call
lea
or
jg
add
and
add
add
push
add
push
push
and
add
add
inc
add
add
and
add
and
dec
cmp
push
adc
dec
pop
pop
xchg
and
add
dec
cmp
and
add
push
sbb
or
add
adc
jge
(bad)
jmp
and
add
add
dec
cmp
(bad)
inc
pop
adc
pop
adc
and
and
add
add
dec
cmp
(bad)
call
and
add
push
adc
adc
xchg
add
add
pop
adc
xor
(bad)
call
adc
add
add
adc
add
dec
adc
push
xchg
and
add
pop
adc
adc
(bad)
call
or
add
sbb
xor
adc
dec
xchg
and
add
pop
adc
mul
(bad)
jmp
adc
popf
add
add
add
dec
cmp
out
inc
pop
xor
dec
and
add
add
dec
cmp
out
call
and
add
and
inc
sbb
std
lods
ret
adc
adc
xchg
add
add
add
dec
cmp
dec
sub
add
adc
cwde
out
jmp
mov
repnz
dec
adc
jle
add
xchg
adc
test
add
xchg
pop
adc
jb
(bad)
call
or
add
and
jae
and
sbb
adc
and
dec
cmp
(bad)
call
xor
pop
adc
adc
outs
xchg
and
add
pop
adc
cmp
(bad)
call
xor
add
add
xor
xor
xor
add
xchg
pop
popa
pop
adc
sbb
repz
add
repnz
and
add
add
dec
cmp
out
call
or
add
sbb
or
pop
xor
dec
cmp
out
jmp
adc
cs
sbb
dec
cmp
out
inc
adc
pop
pop
adc
adc
aaa
xchg
and
adc
retf
out
call
adc
or
add
adc
adc
add
add
dec
cmp
jne
cmc
adc
and
inc
outs
push
and
dec
and
add
add
dec
cmp
or
add
sbb
xor
adc
and
pop
adc
jb
(bad)
jmp
adc
push
xchg
and
call
dec
cmp
(bad)
inc
and
dec
adc
cs
and
adc
inc
out
call
and
add
sbb
dec
es
inc
adc
xor
(bad)
call
dec
pop
xchg
and
adc
and
(bad)
call
and
push
adc
pop
adc
ins
adc
(bad)
add
add
dec
cmp
out
call
or
add
and
dec
cmp
in
call
or
push
pop
sbb
dec
and
add
add
dec
cmp
in
call
or
add
sbb
xor
adc
ja
add
xchg
pop
adc
dec
cmp
in
jmp
pop
push
adc
mov
adc
pop
pop
adc
pop
adc
dec
pop
cmp
add
dec
cmp
or
add
sbb
or
add
adc
mov
(bad)
jmp
and
cmp
inc
adc
jne
add
sbb
inc
xchg
adc
xor
and
add
add
dec
cmp
(bad)
call
or
cmc
adc
adc
jne
add
sbb
inc
xchg
adc
jne
add
sbb
inc
xchg
pop
inc
add
outs
adc
dec
pop
xchg
and
adc
sub
(bad)
call
or
add
es
add
add
dec
cmp
in
call
or
rcr
pop
pop
push
push
pop
cmp
dec
adc
xor
pop
adc
stc
in
call
and
add
and
add
adc
out
(bad)
jmp
js
add
adc
fnsetpm(287
(bad)
call
ds
pop
adc
pop
adc
dec
cmp
in
call
adc
add
inc
pop
pop
adc
dec
and
and
adc
stos
in
call
and
add
push
sbb
adc
adc
xor
add
pop
adc
(bad)
in
jmp
and
cmp
or
sub
adc
pop
adc
adc
dec
and
add
add
dec
cmp
(bad)
call
and
add
push
push
xor
add
adc
push
in
jmp
and
add
add
dec
cmp
(bad)
inc
adc
pop
sub
dec
sub
adc
scas
add
add
dec
cmp
in
call
dec
and
and
add
pop
sub
and
adc
dec
xchg
and
add
pop
adc
jmp
(bad)
call
or
add
sbb
dec
adc
mov
add
add
dec
cmp
jecxz
call
or
or
adc
adc
adc
dec
loopne
adc
and
dec
cmp
jecxz
call
inc
adc
(bad)
add
add
dec
cmp
or
add
and
pop
or
popa
adc
and
add
adc
xchg
jecxz
call
adc
adc
or
adc
and
call
or
add
and
jb
push
and
xor
adc
and
dec
cmp
(bad)
call
inc
pop
pop
adc
cmp
add
add
dec
cmp
(bad)
call
and
add
adc
xchg
add
add
add
dec
cmp
jecxz
dec
pop
sub
adc
pop
pop
adc
and
add
add
dec
cmp
jecxz
call
adc
add
daa
adc
pop
sub
dec
sub
dec
cmp
jecxz
jmp
(bad)
add
add
repnz
adc
(bad)
add
add
dec
cmp
loop
call
or
add
sbb
dec
es
jb
dec
cmp
loop
call
or
push
and
dec
adc
ret
add
add
add
dec
cmp
or
add
push
adc
adc
xchg
add
add
pop
adc
cdq
loop
inc
adc
loopne
adc
pop
aaa
adc
dec
and
add
xchg
pop
or
dec
cmp
call
and
add
and
push
and
mov
es
add
add
dec
cmp
(bad)
call
or
pop
adc
pop
sub
pop
pop
xchg
and
add
pop
adc
inc
loop
call
or
add
and
add
dec
cmp
loop
call
sbb
mov
add
xchg
and
adc
push
loop
jmp
xor
add
sub
and
dec
and
add
add
dec
cmp
loope
call
and
add
and
pop
jbe
xor
adc
and
dec
cmp
loope
call
and
or
adc
and
and
loopne
adc
lahf
add
add
dec
cmp
loope
call
and
sbb
push
loopne
and
dec
pop
xchg
and
push
add
pop
adc
mov
and
pop
adc
sub
dec
and
add
add
dec
cmp
and
add
sbb
xor
es
pusha
adc
jp
(bad)
jmp
adc
(bad)
add
add
loope
inc
adc
adc
adc
sbb
imul
loope
call
and
add
sbb
dec
and
add
adc
cmp
(bad)
call
adc
dec
cmp
loope
call
push
adc
(bad)
add
add
dec
cmp
loope
call
and
add
sbb
or
pop
push
adc
or
adc
dec
add
add
dec
cmp
loopne
inc
pop
outs
adc
dec
pop
inc
xchg
and
adc
jecxz
(bad)
call
and
add
and
arpl
cdq
and
dec
adc
add
add
xchg
and
adc
mov
nop
add
add
dec
and
add
add
dec
cmp
and
add
and
test
cmp
add
adc
adc
push
xchg
and
adc
and
call
or
inc
adc
adc
sub
and
add
adc
imul
jmp
and
add
sub
pop
push
adc
(bad)
add
add
dec
cmp
call
or
add
pop
adc
adc
fadd
add
xchg
and
add
add
dec
cmp
loopne
call
or
add
sub
pop
add
and
add
add
or
add
and
add
and
add
sub
add
and
adc
sbb
mov
add
and
or
pop
adc
dec
xchg
and
cmp
dec
cmp
(bad)
call
pop
adc
dec
pop
pop
xchg
and
add
pop
adc
leave
(bad)
call
or
add
and
add
adc
mov
(bad)
call
cmp
pop
adc
pop
cmp
dec
and
add
add
dec
cmp
and
add
sbb
adc
adc
outs
xchg
and
into
add
pop
adc
test
(bad)
jmp
adc
retf
add
add
dec
cmp
(bad)
inc
and
dec
cmp
(bad)
call
pop
jne
add
sbb
aaa
xchg
adc
adc
dec
(bad)
call
dec
pop
jp
and
sub
add
in
pop
imul
add
adc
cs
call
and
add
and
fwait
out
push
popa
adc
and
dec
cmp
(bad)
call
or
pop
adc
pop
pop
adc
dec
and
and
mov
dec
cmp
fdivrp
call
or
add
sbb
xor
add
adc
fcmovu
(bad)
jmp
and
add
dec
cmp
fdivrp
inc
adc
inc
push
inc
adc
pop
adc
(bad)
add
add
dec
cmp
add
add
mov
jmp
adc
adc
dec
add
add
dec
cmp
cmp
or
add
cmp
adc
or
pop
add
adc
jae
(bad)
jmp
(bad)
add
add
repnz
inc
adc
(bad)
add
add
dec
cmp
call
or
add
sbb
dec
pop
cmp
and
jecxz
add
dec
cmp
(bad)
jmp
adc
xchg
and
mov
dec
cmp
fdivrp
inc
adc
sbb
or
dec
and
add
add
dec
cmp
fdivrp
call
and
add
push
sbb
or
add
adc
add
(bad)
jmp
adc
inc
xchg
adc
cmc
(bad)
inc
and
dec
and
add
add
dec
cmp
(bad)
call
or
add
and
mov
dec
and
add
add
dec
cmp
(bad)
call
sbb
add
add
add
dec
cmp
dec
pop
or
pop
sub
and
dec
and
add
add
dec
cmp
and
add
sbb
cs
add
adc
jae
(bad)
jmp
and
add
adc
data16
inc
adc
pop
or
dec
adc
mov
dec
adc
arpl
add
xchg
pop
push
pop
adc
inc
(bad)
call
or
add
sbb
dec
adc
dec
xchg
and
cmp
add
dec
cmp
(bad)
call
or
inc
adc
adc
pop
sbb
dec
sub
and
add
add
dec
cmp
dec
pop
inc
xchg
and
sub
and
dec
adc
inc
xchg
and
adc
out
(bad)
call
or
add
sbb
dec
es
imul
cmp
fdivr
jmp
jg
add
adc
leave
fdivr
inc
adc
pop
adc
pop
adc
adc
pop
inc
push
and
add
adc
scas
fdivr
call
das
adc
(bad)
add
add
dec
cmp
and
add
pop
adc
and
add
add
dec
cmp
or
rcr
pop
pop
push
push
adc
push
push
adc
xchg
add
add
pop
adc
addr16
call
and
dec
and
add
add
dec
cmp
(bad)
call
and
add
and
or
es
inc
adc
cmp
(bad)
inc
adc
loopne
adc
adc
dec
adc
pop
ins
adc
(bad)
add
add
dec
cmp
fdivr
call
or
add
and
imul
adc
adc
and
add
adc
add
(bad)
call
cmp
or
add
cmp
dec
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
sbb
ret
add
add
dec
cmp
(bad)
call
inc
adc
add
inc
sbb
add
add
dec
cmp
add
add
adc
adc
xchg
and
fadd
add
dec
cmp
push
push
inc
adc
pop
jbe
dec
and
add
add
dec
cmp
and
add
adc
outs
xchg
and
adc
jae
(bad)
call
push
sbb
sbb
pop
ins
push
adc
pop
or
push
adc
jae
add
xchg
and
adc
dec
(bad)
call
imul
and
add
add
dec
cmp
and
add
sbb
xor
es
ins
adc
sub
(bad)
jmp
pop
ins
adc
and
(bad)
inc
adc
dec
sbb
sub
xor
dec
adc
inc
xchg
and
rol
pop
adc
(bad)
(bad)
call
or
add
and
js
inc
add
dec
es
add
add
dec
cmp
(bad)
call
pop
adc
(bad)
add
add
dec
cmp
(bad)
call
and
add
adc
pop
xchg
and
adc
mov
pop
jne
add
sbb
or
or
dec
sahf
adc
jne
add
sbb
or
pop
dec
sahf
and
add
add
dec
cmp
mov
dec
and
add
add
dec
cmp
call
or
add
push
push
xor
add
adc
data16
jmp
adc
dec
xchg
and
add
pop
adc
push
(bad)
inc
pop
adc
pop
adc
adc
inc
push
and
add
add
dec
cmp
(bad)
call
dec
adc
dec
pop
push
xchg
and
add
pop
adc
and
(bad)
call
and
add
pop
pop
xor
es
push
adc
push
(bad)
jmp
adc
xor
add
xchg
and
adc
clc
fcos
inc
adc
sbb
push
and
dec
and
add
add
dec
cmp
fcos
call
or
add
and
cli
fcomp
pop
pop
adc
adc
push
xchg
and
aas
add
pop
adc
mov
std
add
add
dec
cmp
xor
pop
adc
push
add
add
dec
cmp
xor
add
add
ss
or
dec
adc
dec
xchg
and
add
pop
adc
jge
(bad)
call
and
add
sbb
dec
and
cmp
(bad)
call
sub
add
sbb
aaa
xchg
pop
adc
je
add
sbb
aaa
xchg
pop
adc
xchg
and
add
pop
adc
cmp
(bad)
call
movlps
(bad)
add
add
dec
cmp
(bad)
call
or
add
sbb
xor
add
adc
push
fcos
jmp
and
add
add
dec
cmp
fcos
inc
adc
ins
sbb
push
loopne
or
dec
pop
xor
pop
adc
jmp
push
dec
adc
bound
add
xchg
pop
outs
pop
adc
rcr
(bad)
call
and
add
push
push
xor
adc
inc
xchg
and
add
pop
adc
mov
(bad)
jmp
adc
aaa
add
add
add
dec
cmp
or
js
dec
push
inc
adc
adc
sub
adc
and
dec
cmp
xchg
add
add
repnz
jae
dec
and
add
add
dec
cmp
call
and
add
sbb
dec
es
dec
adc
pop
fdivr
call
cmp
dec
cmp
(bad)
jmp
fld
add
sub
adc
and
inc
outs
push
adc
sbb
outs
je
outs
push
and
dec
and
add
add
dec
cmp
fdivr
call
and
add
es
add
add
dec
cmp
fdivr
call
cmp
pop
adc
xor
dec
adc
inc
xchg
and
add
dec
cmp
xlat
(bad)
call
and
add
adc
xor
pop
adc
fcmovnbe
(bad)
call
and
push
adc
pop
adc
sahf
add
add
dec
adc
adc
add
pop
adc
mov
and
add
sbb
dec
es
sbb
dec
cmp
push
pop
pop
adc
pop
push
adc
(bad)
add
add
dec
cmp
or
add
adc
imul
js
(bad)
call
aas
sub
pop
push
adc
imul
jmp
mov
add
sub
and
dec
adc
ins
add
add
add
dec
cmp
(bad)
call
or
add
and
jne
add
dec
and
add
adc
sub
(bad)
dec
sbb
add
pop
or
pop
fsin
movlps
and
add
add
dec
cmp
xlat
(bad)
call
adc
(bad)
add
add
dec
cmp
(bad)
(bad)
call
or
add
sbb
xor
add
adc
in
(bad)
jmp
and
add
add
dec
cmp
(bad)
(bad)
inc
and
dec
cmp
(bad)
(bad)
call
adc
(bad)
add
add
dec
cmp
and
add
sbb
adc
add
add
xchg
pop
inc
pop
adc
lahf
(bad)
(bad)
jmp
adc
mov
add
xchg
pop
or
dec
cmp
and
pop
adc
jo
dec
and
add
add
dec
cmp
(bad)
call
and
add
sbb
and
add
add
dec
cmp
(bad)
jmp
and
add
add
dec
cmp
(bad)
inc
push
adc
pop
je
dec
adc
mov
add
xchg
sbb
cmp
(bad)
call
or
add
adc
add
add
dec
cmp
(bad)
call
push
adc
inc
sbb
pop
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
and
add
adc
cli
aad
call
das
pop
adc
adc
dec
and
add
add
dec
cmp
aad
call
dec
pop
jbe
and
add
pop
sub
and
dec
adc
xor
add
pop
adc
mov
and
add
push
adc
adc
push
xchg
and
add
pop
adc
lahf
aad
jmp
mov
add
adc
xchg
aad
call
pop
jne
add
sbb
xor
and
add
add
dec
cmp
(bad)
jmp
sbb
add
sub
adc
adc
jne
add
sbb
xor
add
sbb
xor
add
(bad)
call
push
adc
(bad)
add
add
dec
cmp
call
or
add
sbb
dec
pop
adc
and
adc
sub
(bad)
jmp
pop
adc
push
aad
inc
push
adc
pop
dec
adc
(bad)
add
add
dec
cmp
aad
call
and
add
es
push
adc
sti
aam
call
inc
adc
pop
adc
dec
and
add
add
dec
cmp
aam
call
and
add
pop
push
xor
adc
jae
and
in
add
dec
cmp
aam
jmp
and
dec
cmp
adc
je
add
sbb
ds
adc
xor
adc
imul
(bad)
call
dec
and
pop
inc
pop
sub
pop
pusha
adc
dec
and
add
xchg
pop
es
adc
js
(bad)
call
or
add
sbb
adc
adc
in
add
add
aam
jmp
pop
adc
dec
cmp
(bad)
inc
adc
add
adc
inc
aam
jmp
xchg
add
add
repnz
and
add
dec
cmp
aam
call
sub
dec
and
add
add
dec
cmp
aam
call
or
add
and
out
cmp
and
dec
cmp
sar
call
inc
pop
push
adc
movups
daa
add
add
sar
jmp
(bad)
add
add
repnz
or
dec
and
add
add
dec
cmp
sar
call
and
add
push
push
xor
adc
test
add
xchg
and
adc
scas
sar
jmp
and
add
add
dec
cmp
pop
and
and
add
xchg
pop
inc
pop
adc
mov
(bad)
call
and
add
and
cmp
(bad)
call
adc
pop
sub
dec
adc
or
pop
adc
pusha
sar
call
or
add
sbb
xor
adc
movs
add
add
dec
cmp
jmp
adc
sbb
add
pop
adc
xor
(bad)
inc
pop
cmp
add
add
dec
cmp
sar
call
and
add
and
and
and
adc
adc
aaa
xchg
and
push
add
dec
cmp
sar
call
adc
pop
push
adc
(bad)
add
add
dec
cmp
sar
call
or
add
and
int3
push
inc
pop
adc
adc
xor
pop
adc
ret
sar
call
push
sbb
sbb
pop
ins
push
adc
pop
or
push
adc
jp
and
add
pop
adc
mov
adc
pop
dec
adc
(bad)
add
add
dec
cmp
or
add
and
mov
pop
and
inc
add
adc
pop
jle
dec
cmp
(bad)
call
adc
adc
sub
add
pop
adc
pop
sar
call
or
push
pop
adc
(bad)
add
add
dec
cmp
(bad)
call
and
add
adc
adc
and
add
add
dec
cmp
sbb
add
sbb
ds
adc
je
add
sbb
ds
pop
inc
call
push
adc
dec
pop
dec
xchg
and
add
pop
adc
stc
sar
call
and
add
sbb
xor
add
adc
jecxz
(bad)
jmp
and
add
add
dec
cmp
sar
inc
and
dec
and
add
add
dec
cmp
sar
call
or
add
adc
push
xchg
and
push
add
pop
adc
stos
sar
call
adc
pop
adc
and
dec
cmp
adc
or
add
adc
adc
push
and
cmp
call
dec
pop
cmp
sub
push
adc
dec
pop
push
xchg
and
add
pop
adc
pop
sar
call
or
add
adc
in
add
xchg
and
add
add
dec
cmp
(bad)
jmp
fadd
add
adc
ss
jmp
cmps
add
add
dec
adc
cdq
add
add
dec
cmp
and
add
sbb
xor
add
adc
pop
sar
jmp
and
add
adc
cli
sar
inc
adc
adc
pop
adc
adc
pop
inc
push
pop
push
adc
(bad)
add
add
dec
cmp
sar
call
or
add
sbb
dec
es
push
adc
retf
sar
inc
or
adc
loopne
adc
pop
dec
adc
(bad)
add
add
dec
cmp
and
add
sbb
dec
es
add
add
dec
cmp
pop
pop
adc
and
dec
and
add
add
dec
cmp
or
add
and
add
adc
jno
(bad)
call
pop
pop
pop
adc
and
dec
and
add
add
dec
cmp
(bad)
call
and
add
sbb
xor
adc
dec
xchg
and
hlt
add
pop
adc
cmp
(bad)
jmp
adc
call
sbb
sub
(bad)
inc
adc
adc
pop
adc
adc
pop
inc
push
pop
bound
dec
and
add
add
dec
cmp
and
add
pop
adc
and
add
add
dec
cmp
iret
(bad)
call
sub
add
sbb
aaa
xchg
adc
jne
add
sbb
aaa
xchg
pop
inc
cmp
jnp
dec
and
add
add
dec
cmp
iret
(bad)
call
and
add
sbb
dec
es
add
add
dec
cmp
or
pop
adc
adc
inc
adc
and
dec
adc
xchg
and
add
dec
cmp
or
add
es
adc
or
call
adc
pop
cmp
dec
and
add
add
dec
cmp
(bad)
call
or
add
sbb
dec
adc
push
add
add
add
dec
cmp
(bad)
call
inc
pop
pop
adc
add
add
dec
cmp
(bad)
call
inc
push
inc
dec
and
dec
and
add
add
dec
cmp
iret
(bad)
call
and
add
sbb
sgdtd
add
dec
cmp
iret
(bad)
call
adc
pop
push
adc
(bad)
add
add
dec
cmp
into
(bad)
call
or
add
and
mov
sbb
pop
popa
adc
adc
call
add
add
dec
cmp
into
(bad)
call
lea
or
pop
add
add
push
add
sub
add
push
push
and
out
add
sub
add
push
and
add
adc
mov
inc
adc
dec
and
add
add
dec
cmp
and
add
sbb
xor
add
adc
ja
(bad)
jmp
adc
and
pop
adc
fs
(bad)
inc
push
adc
jp
dec
and
add
add
dec
cmp
(bad)
call
or
add
and
dec
cmp
into
(bad)
call
adc
adc
xor
(bad)
call
dec
adc
dec
and
add
add
dec
cmp
(bad)
call
or
add
sbb
xor
add
adc
push
into
(bad)
jmp
and
dec
cmp
int
inc
pop
adc
push
pop
dec
loopne
adc
and
dec
adc
cmc
add
add
dec
cmp
int
call
and
add
and
push
enter
dec
adc
xchg
and
push
add
pop
adc
mov
(bad)
call
sub
pop
jne
add
sbb
xor
push
add
sbb
xor
dec
pop
xor
pop
push
pop
adc
mov
(bad)
call
pop
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
and
mov
adc
and
add
add
dec
cmp
(bad)
inc
or
js
dec
loopne
adc
adc
dec
and
and
popa
add
pop
adc
aaa
int
call
and
add
and
call
adc
and
add
adc
sbb
(bad)
call
xor
adc
adc
jnp
add
xchg
and
adc
sti
int3
(bad)
jmp
(bad)
add
add
repnz
dec
and
add
add
dec
cmp
int3
(bad)
call
and
add
push
adc
and
dec
cmp
int3
(bad)
dec
dec
adc
fwait
add
add
dec
and
add
add
dec
cmp
or
add
and
jg
push
or
and
add
add
dec
cmp
sub
pop
adc
adc
add
add
add
dec
cmp
(bad)
call
dec
pop
push
xchg
and
add
pop
sub
and
dec
adc
ds
and
add
dec
cmp
(bad)
call
or
add
pop
adc
adc
sub
add
xchg
pop
or
cmp
(bad)
call
push
sbb
sbb
and
add
push
adc
pop
or
push
and
add
add
dec
cmp
int3
(bad)
call
adc
pop
jle
dec
adc
ds
pop
xor
add
(bad)
call
or
add
es
pop
adc
repz
(bad)
call
push
pop
or
push
push
adc
adc
dec
and
add
add
dec
cmp
retf
(bad)
call
or
add
and
mov
adc
pop
push
dec
cmp
and
push
inc
adc
inc
and
dec
sub
adc
mov
add
xchg
adc
cs
pop
adc
xchg
retf
(bad)
call
dec
pop
pop
xchg
and
add
pop
sub
pop
popa
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
and
repz
or
cwde
scas
jmp
pop
adc
adc
mov
add
xchg
and
add
pop
adc
push
retf
(bad)
call
inc
sub
and
add
add
dec
cmp
(bad)
call
dec
pop
push
xchg
and
sub
and
dec
and
add
add
dec
cmp
retf
(bad)
call
and
add
es
add
add
dec
cmp
retf
(bad)
call
cmp
and
add
adc
dec
(bad)
jmp
xchg
add
sub
pop
inc
adc
dec
and
add
add
add
add
fcmovne
(bad)
call
or
add
sbb
and
add
adc
(bad)
jmp
and
add
adc
mov
adc
jno
pop
dec
pop
adc
test
(bad)
call
and
push
adc
pop
adc
and
push
inc
adc
int3
add
add
dec
cmp
adc
dec
and
add
xchg
pop
push
pop
adc
jne
(bad)
call
and
add
and
adc
and
adc
adc
int3
add
add
retf
adc
adc
add
cmp
cmp
push
xchg
and
add
pop
adc
xor
dec
pop
xor
add
in
pop
jg
dec
and
add
add
dec
cmp
retf
shl
add
push
sbb
dec
adc
adc
add
xchg
push
pop
adc
dec
(bad)
jmp
add
add
dec
cmp
leave
(bad)
call
push
add
add
dec
cmp
leave
(bad)
call
and
add
es
adc
dec
cmp
leave
(bad)
call
push
and
fs
push
and
dec
adc
dec
xchg
and
add
pop
adc
mov
(bad)
call
or
add
and
fstp
and
dec
adc
add
add
xchg
pop
dec
pop
adc
(bad)
leave
(bad)
call
dec
sub
add
adc
jge
(bad)
jmp
icebp
add
add
repnz
adc
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
and
sbb
dec
adc
imul
cmp
leave
(bad)
call
push
sbb
ins
cs
push
pop
aas
adc
(bad)
add
add
dec
cmp
leave
(bad)
call
and
add
adc
dec
pop
pop
xchg
and
loopne
add
dec
cmp
leave
(bad)
call
dec
adc
(bad)
add
add
dec
cmp
enter
and
add
adc
xchg
add
add
pop
adc
fcmovne
(bad)
call
adc
adc
imul
(bad)
enter
pop
jne
add
sbb
cs
adc
pop
pop
adc
or
fild
add
adc
test
(bad)
jmp
(bad)
add
add
repnz
dec
adc
inc
xchg
pop
jno
adc
mov
(bad)
call
and
add
and
cmp
(bad)
jmp
mov
add
dec
cmp
(bad)
call
sub
dec
adc
xor
pop
adc
push
enter
or
add
and
dec
cmp
(bad)
call
push
adc
je
add
sbb
cs
adc
je
add
sbb
cs
pop
inc
call
pop
adc
(bad)
add
add
dec
cmp
enter
and
add
adc
and
adc
xor
inc
(bad)
call
and
push
adc
pop
adc
jns
dec
and
add
add
dec
cmp
(bad)
(bad)
call
or
add
and
icebp
sbb
adc
and
dec
cmp
(bad)
(bad)
call
push
sbb
outs
je
outs
push
pop
ja
dec
and
add
add
dec
cmp
add
add
adc
mov
add
xchg
pop
pop
pop
adc
xchg
(bad)
(bad)
call
and
pop
adc
arpl
dec
adc
jge
sbb
jl
(bad)
call
or
add
and
mov
adc
pop
jns
dec
cmp
(bad)
call
sub
pop
je
add
sbb
xor
adc
jne
add
sbb
xor
pop
inc
call
and
dec
adc
or
add
xchg
pop
pop
pop
adc
sub
(bad)
call
or
add
sbb
xor
add
adc
push
(bad)
(bad)
jmp
and
add
add
dec
cmp
(bad)
(bad)
inc
adc
adc
je
add
sbb
inc
xchg
pop
adc
jne
add
sbb
inc
xchg
pop
adc
pop
adc
in
(bad)
jmp
xchg
add
add
dec
and
add
add
dec
cmp
(bad)
(bad)
call
or
add
sbb
or
add
adc
mov
and
dec
cmp
adc
sbb
or
adc
pop
push
adc
(bad)
add
add
dec
cmp
and
add
pop
adc
adc
call
ret
add
pop
adc
ja
(bad)
call
push
and
fs
push
pop
or
dec
and
add
add
dec
cmp
(bad)
call
and
add
and
iret
mov
and
repz
pop
adc
and
add
add
dec
cmp
(bad)
call
or
push
pop
xor
dec
and
add
add
dec
cmp
(bad)
call
and
add
and
bswap
cmp
pushf
pop
test
pop
adc
adc
inc
xchg
and
daa
add
pop
adc
pop
(bad)
(bad)
call
or
pop
adc
pop
xor
and
add
xchg
and
adc
call
or
add
and
dec
cmp
(bad)
adc
adc
adc
adc
sbb
dec
adc
jbe
add
xchg
and
adc
lods
(bad)
ror
add
add
adc
xor
add
dec
cmp
adc
adc
(bad)
add
add
dec
cmp
(bad)
call
or
add
sbb
xor
adc
aaa
xchg
and
add
pop
adc
(bad)
(bad)
adc
pop
xchg
and
sub
add
dec
cmp
(bad)
inc
adc
sbb
sbb
push
push
adc
sbb
sbb
push
push
adc
mov
add
xchg
and
adc
daa
(bad)
and
dec
and
add
add
dec
cmp
add
push
sbb
xor
add
adc
inc
(bad)
jmp
and
dec
cmp
(bad)
(bad)
inc
adc
pop
pop
adc
pop
xor
dec
and
add
add
dec
cmp
(bad)
(bad)
call
or
add
push
adc
and
add
adc
(bad)
call
or
pop
push
push
pop
sbb
dec
and
add
add
dec
cmp
or
add
and
xchg
retf
pop
and
retf
and
adc
adc
adc
dec
cmp
and
push
pop
inc
adc
(bad)
add
add
dec
cmp
(bad)
call
and
add
sbb
dec
pop
cmp
add
dec
cmp
(bad)
call
pop
je
add
sbb
xor
adc
and
dec
xor
adc
pop
xchg
and
add
pop
adc
cmp
(bad)
call
dec
and
add
add
in
and
dec
adc
push
xchg
and
add
pop
adc
adc
(bad)
call
or
add
and
pop
adc
or
outs
pop
popa
adc
adc
mov
adc
ins
add
add
jmp
inc
sub
adc
adc
pop
adc
rol
(bad)
call
dec
and
and
add
add
jmp
adc
jl
dec
adc
dec
xchg
and
add
pop
adc
cmps
ret
(bad)
call
or
add
and
add
adc
xchg
ret
(bad)
call
or
push
and
dec
and
add
add
dec
cmp
(bad)
call
or
add
push
adc
and
dec
cmp
(bad)
inc
adc
loopne
adc
and
push
pop
sub
dec
and
add
add
dec
cmp
(bad)
call
and
add
sbb
dec
and
add
adc
cmp
(bad)
jmp
inc
add
add
dec
cmp
and
add
add
dec
cmp
ret
(bad)
call
push
adc
je
add
sbb
cs
pop
adc
je
add
sbb
cs
pop
adc
and
add
add
dec
cmp
ret
pop
cmp
dec
and
add
add
dec
cmp
ret
ror
add
add
adc
adc
jmp
pop
adc
iret
ret
or
push
pop
or
dec
adc
adc
cwde
add
add
pop
adc
lods
ret
shl
add
push
and
rcl
and
adc
pop
bound
dec
cmp
adc
(bad)
add
add
dec
cmp
or
add
sbb
xor
adc
dec
xchg
and
cmp
add
dec
cmp
(bad)
jmp
adc
fwait
add
add
pop
adc
dec
ret
add
adc
add
xor
movs
add
add
dec
and
add
add
dec
cmp
ret
shl
add
push
and
xor
and
pop
gs
adc
and
dec
cmp
(bad)
call
and
push
adc
pop
adc
adc
add
add
dec
cmp
sar
and
dec
adc
call
les
add
dec
cmp
sar
ror
add
add
adc
and
dec
cmp
sar
adc
and
add
xchg
and
dec
cmp
dec
pop
dec
xchg
and
add
pop
sub
pop
jno
dec
adc
inc
add
add
add
add
mov
(bad)
call
or
add
sbb
cs
add
adc
jb
(bad)
jmp
and
add
add
dec
cmp
(bad)
inc
adc
jne
add
sbb
or
adc
dec
sahf
pop
and
dec
and
add
add
dec
cmp
(bad)
call
or
add
es
add
add
dec
cmp
sar
push
adc
push
add
add
dec
cmp
(bad)
jmp
xchg
add
add
dec
and
add
add
dec
cmp
sar
shl
add
push
pop
sbb
push
adc
je
add
xchg
and
add
add
dec
cmp
sar
and
dec
cmp
sar
add
jb
dec
adc
popa
add
add
dec
cmp
sar
ror
add
add
adc
pop
xchg
and
add
pop
adc
mov
(bad)
jmp
and
add
dec
cmp
and
dec
and
add
add
dec
cmp
or
add
and
sbb
lods
and
pop
adc
adc
mov
and
adc
imul
sub
enter
xchg
adc
xchg
pop
adc
push
sar
and
repnz
cmp
dec
and
add
add
dec
cmp
sar
ror
add
add
and
dec
cmp
sar
pop
or
dec
adc
xor
pop
adc
adc
(bad)
call
or
add
adc
xor
xchg
pop
adc
cli
mov
push
push
adc
pop
adc
and
push
inc
adc
dec
and
and
add
add
dec
cmp
mov
add
add
dec
and
add
add
dec
cmp
mov
add
add
adc
inc
xchg
and
add
pop
adc
movs
mov
adc
fwait
mov
push
sbb
sbb
and
add
push
pop
js
dec
and
add
add
dec
cmp
(bad)
call
or
add
sbb
adc
xchg
add
add
pop
adc
pop
mov
dec
and
pop
xor
adc
dec
mov
pop
push
inc
sbb
daa
adc
dec
and
add
xchg
and
dec
cmp
mov
add
add
pop
inc
adc
sbb
adc
jne
add
sbb
ds
pop
adc
je
add
sbb
ds
pop
adc
cmp
mov
adc
dec
pop
jbe
and
add
pop
adc
loop
(bad)
call
and
add
and
aad
sbb
adc
pop
inc
adc
(bad)
mov
pop
pop
adc
pop
cmp
dec
adc
xchg
add
add
pop
adc
cmps
mov
add
push
adc
popf
add
add
add
add
mov
add
adc
push
add
add
add
add
adc
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
shl
add
adc
fwait
add
add
add
add
push
or
or
add
push
popa
inc
add
add
add
add
sbb
cli
adc
push
or
add
add
add
outs
and
add
or
add
add
or
inc
pop
pop
or
add
pop
push
add
sbb
or
add
sub
or
add
sub
jle
add
add
pop
xchg
pop
and
sahf
sub
adc
add
daa
(bad)
(bad)
call
add
ins
xchg
sub
pop
or
inc
sub
add
dec
inc
add
pop
or
inc
adc
add
retf
add
add
add
adc
add
add
add
add
add
add
inc
adc
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
add
push
and
(bad)
mov
stos
inc
pop
or
pop
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
or
call
push
sub
sbb
lock
sub
sbb
jmp
push
daa
add
push
jae
add
or
add
or
sbb
adc
cmp
pop
or
call
or
add
pop
pop
xor
pop
add
add
add
cmp
(bad)
(bad)
jmp
pop
or
inc
sub
add
inc
xchg
and
add
pop
or
inc
je
add
add
and
add
and
add
sub
add
sub
or
add
dec
xchg
and
add
pop
or
call
and
adc
sbb
and
std
add
pop
or
call
or
adc
call
daa
add
push
sbb
push
or
jmp
adc
pop
xchg
and
or
inc
push
je
add
add
inc
add
add
add
sldt
sub
or
adc
call
or
add
and
outs
add
mov
or
sbb
jmp
add
xor
push
add
add
add
adc
add
add
push
jle
add
add
pop
pop
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
mov
add
add
add
add
or
cmp
(bad)
call
add
push
sbb
add
dec
inc
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
add
add
(bad)
(bad)
call
push
sub
adc
pop
sbb
pop
sub
adc
and
add
add
sub
pop
adc
(bad)
adc
push
xchg
and
sub
push
sub
pop
adc
or
sbb
add
call
push
pop
cs
adc
pop
pop
xchg
pop
sub
sbb
pop
sbb
add
call
or
add
pop
sbb
or
pop
adc
add
jmp
pop
adc
add
inc
pop
sbb
add
call
pop
pop
fs
and
adc
inc
jne
add
add
adc
add
and
add
add
or
add
pop
jns
cmp
sldt
sub
sbb
add
call
add
call
and
sbb
or
pop
or
add
jmp
adc
and
adc
pop
sbb
ds
(bad)
inc
add
add
add
push
je
add
add
add
pop
or
cmp
(bad)
(bad)
call
or
add
sbb
xor
adc
pop
sub
pop
adc
jmp
adc
pop
sbb
and
std
add
pop
adc
inc
sbb
cmp
std
(bad)
call
and
sbb
or
pop
pop
adc
jmp
pop
pop
adc
inc
adc
push
daa
add
push
jae
add
or
add
or
push
jne
add
add
and
movs
add
add
push
add
sub
push
and
pop
inc
pop
adc
call
or
cmp
and
pop
adc
std
(bad)
call
push
and
add
add
add
call
adc
add
call
pop
pop
inc
xchg
and
add
add
call
or
or
xchg
and
adc
call
or
add
and
stos
jge
and
or
push
xchg
and
arpl
add
add
jmp
add
adc
add
lock
add
add
adc
add
add
add
add
push
sbb
inc
or
add
adc
add
test
add
push
add
add
add
inc
add
add
add
inc
add
add
add
add
add
jae
add
push
or
add
add
pop
adc
mov
push
add
add
push
add
add
add
test
sub
xchg
and
sub
sbb
add
mov
mov
add
sbb
and
add
push
pop
pop
or
sbb
cmp
and
add
add
or
or
xor
pop
or
add
popa
(bad)
(bad)
call
sub
adc
and
add
add
add
dec
(bad)
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
fs
(bad)
call
xor
rol
add
sbb
add
jle
add
add
push
sub
add
add
add
add
add
add
add
add
add
or
add
add
add
mov
add
pop
add
add
add
add
add
add
sub
add
es
adc
sbb
add
popa
pop
push
add
add
push
add
add
or
add
and
add
add
out
adc
push
adc
and
add
or
push
and
add
add
add
add
ins
(bad)
(bad)
inc
pop
pop
or
sbb
or
add
or
pop
or
xor
sbb
add
call
or
cmc
sbb
add
inc
sub
adc
inc
add
adc
add
icebp
add
add
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
shr
add
push
es
push
or
push
pop
cmp
and
add
popa
pop
push
pop
push
popa
inc
add
add
sldt
add
push
pop
imul
xchg
adc
and
add
add
sbb
add
inc
mov
add
sbb
add
or
adc
push
xchg
and
add
inc
pop
pop
or
pop
add
add
mov
add
or
add
sbb
pop
xor
pop
or
add
call
pop
and
add
add
pop
jne
add
add
pop
or
add
inc
add
push
add
add
or
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
jo
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
jo
mov
jno
mov
jb
mov
jae
mov
je
mov
jne
mov
jbe
mov
ja
mov
jl
mov
test
add
add
add
add
add
add
add
inc
add
add
add
int
add
add
add
push
add
add
xor
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
jle
add
add
add
add
add
add
das
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
imul
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
jbe
or
mov
fsubr
(bad)
(bad)
xor
mov
repz
stc
mov
int3
pop
add
or
out
outs
and
ret
test
ror
xchg
sbb
pop
dec
or
lods
adc
add
jne
pop
cmps
not
in
bound
or
leave
mov
jnp
mov
inc
sbb
cmp
dec
mov
call
cmp
mov
push
push
(bad)
adc
mov
dec
ins
cmp
cmp
popf
cld
xor
cmp
mov
lods
pop
xchg
adc
xchg
push
and
lds
lds
test
(bad)
push
sahf
jp
dec
jmp
outs
lods
sub
test
ja
mov
enter
enter
aas
in
sbb
pop
inc
sbb
cmp
pusha
stc
mov
mov
lea
jl
adc
dec
sbb
xchg
xor
scas
pusha
(bad)
mov
mov
daa
add
or
mov
stos
into
test
clc
dec
(bad)
sub
adc
or
jmp
sub
add
in
sub
mov
subps
pop
not
fcomp
mov
push
dec
iret
outs
pop
jbe
shr
sbb
sub
ins
mov
lock
jecxz
(bad)
jae
jno
neg
inc
dec
and
loope
imul
pop
mov
jns
out
je
mov
loopne
add
cmc
popa
out
jne
dec
inc
inc
and
sub
icebp
nop
jb
jno
add
xor
icebp
inc
adc
cdq
(bad)
cli
test
(bad)
adc
imul
pushf
pop
push
cmp
sub
push
push
clc
ins
jl
xor
ja
lock
adc
mov
push
xor
pop
fld
or
mov
jg
in
jnp
pop
and
mov
nop
and
call
mov
jns
lea
int
cmp
stos
popa
call
mov
test
repz
stos
sub
mov
shl
cld
rol
sbb
scas
push
jae
cmp
icebp
sbb
test
mov
test
js
jo
push
pop
xchg
xchg
pop
stos
add
lahf
leave
mov
out
scas
jns
xchg
xchg
jp
and
push
and
retf
ins
scas
popf
test
test
adc
stos
out
sub
in
pop
push
push
push
cmps
and
or
repnz
push
xor
xor
jno
xor
pop
push
inc
bound
xor
cmp
jecxz
in
jg
push
adc
aam
(bad)
mov
pop
jl
cwde
imul
lock
jp
mov
inc
jmp
outs
cld
sub
add
dec
(bad)
mov
in
push
jp
lahf
rcl
rcl
xor
lds
dec
xchg
ja
or
mov
aaa
aad
aaa
mov
daa
mov
out
inc
clc
adc
sbb
sub
pusha
cld
mov
mov
pop
sahf
push
push
jnp
or
xor
jg
dec
fadd
mov
popa
ins
jle
int3
or
adc
into
and
mov
ror
nop
loopne
inc
cmp
or
jp
hlt
mov
push
jmp
out
shr
jno
sahf
imul
out
mov
adc
jmp
or
out
pushf
js
out
or
push
mov
jmp
ss
loopne
icebp
pop
pusha
xor
push
mov
inc
and
mov
repnz
fcomp
call
mov
xchg
push
ja
jae
mov
mov
xchg
or
inc
push
bound
add
fscale
repnz
add
mov
jl
ss
push
mov
dec
pop
or
jae
pusha
pop
rcr
lea
mov
add
shl
loope
mov
mov
xor
enter
hlt
inc
jmp
pop
xchg
loope
mov
lock
sub
cwde
sti
int
inc
jecxz
or
in
pop
sub
sub
imul
adc
int
out
xor
mov
inc
rcr
repnz
scas
scas
cld
mov
into
mov
jle
cmp
jle
mov
push
dec
sub
popa
int3
pop
mov
iret
dec
and
cli
aam
fnsave
mov
pop
and
and
cmps
xlat
mov
stos
(bad)
outs
add
sbb
push
cmps
dec
sahf
jne
stos
push
lds
dec
mov
push
pushf
shl
mov
addr16
loop
xchg
mov
sahf
ss
xchg
jmp
sbb
jae
iret
sbb
mov
jno
mov
add
(bad)
sub
stos
sub
lahf
xchg
jge
retf
adc
add
jle
jns
je
add
cwde
shr
xchg
sub
not
cdq
stc
pusha
test
dec
cmps
mov
lock
jnp
mov
adc
sbb
push
into
daa
ss
sbb
push
mov
sub
jge
icebp
stc
lods
mov
bound
push
popa
fs
cmp
mov
icebp
jg
dec
sub
jmp
call
addr16
push
lock
mov
or
fmul
mov
mov
inc
inc
xchg
push
das
sub
jno
popa
pop
dec
sahf
cli
(bad)
into
mov
cmp
pushf
push
add
add
mov
inc
jp
inc
inc
cli
sbb
test
ret
inc
and
mov
sub
lahf
cmps
or
ror
cmp
and
repnz
pop
sbb
sub
xor
in
mov
popf
(bad)
jns
movsx
rcl
in
jmp
cs
fucomip
jl
sub
mov
das
push
ucomiss
jle
cvtpi2ps
xor
push
adc
std
adc
mov
hlt
inc
mov
(bad)
aam
push
xchg
pushf
xchg
sbb
movs
jnp
out
and
hlt
or
dec
sahf
and
add
inc
inc
repnz
and
cli
xor
mov
jns
arpl
push
int
int3
rcl
outs
das
cmp
jmp
push
xor
jp
mov
cmp
xchg
adc
fdiv
sahf
cmp
sbb
mov
xchg
(bad)
fsubr
sar
jmp
mov
cld
xchg
push
int3
adc
rcr
test
aas
fadd
or
fild
or
ret
arpl
retf
dec
inc
jo
movs
imul
rcr
repz
js
loope
jp
add
int3
mov
test
jg
sbb
ss
sti
in
adc
push
jge
sbb
xlat
or
sti
mov
adc
xchg
es
xchg
xchg
and
mov
(bad)
dec
sbb
dec
xor
jo
dec
mov
movs
ret
mov
test
fs
xchg
iret
ret
push
gs
push
sub
mov
dec
stos
mov
xor
(bad)
call
xor
push
aad
lahf
jnp
or
call
add
out
mov
test
jmp
sbb
dec
push
mov
jns
test
cs
mov
idiv
clc
pop
fsubr
sahf
or
aaa
xchg
lds
movs
shr
je
xchg
sbb
cmp
adc
adc
pop
jge
lock
pop
out
stos
cmp
fstp
sub
wbinvd
pop
push
and
sbb
popa
lahf
xchg
rcr
in
mov
xor
sub
push
or
(bad)
mov
mov
dec
arpl
les
cmp
dec
and
cmp
sbb
ins
loop
xor
jns
mov
adc
mov
push
jo
cmps
jl
test
jno
lods
cmp
sbb
retf
out
in
add
and
test
sbb
sbb
ins
sub
ror
aam
jl
test
call
shl
or
mov
mov
aad
ret
jge
jo
or
push
mov
dec
jno
mov
not
jo
int
les
jg
xchg
inc
mov
hlt
sbb
loopne
add
cli
fadd
repnz
dec
(bad)
mov
outs
stos
dec
lea
push
push
push
inc
mov
add
jecxz
fiadd
xor
arpl
shl
std
outs
(bad)
fsubr
retf
mov
cdq
jp
dec
call
sbb
(bad)
stos
fstp
int
out
jg
mov
jb
sub
fcomp
ss
and
or
test
and
cwde
pop
or
cli
sar
inc
sub
pusha
pop
push
dec
or
or
dec
sub
sub
push
stos
jmp
pop
xchg
lds
ret
mov
cmps
push
inc
sbb
popa
sub
add
xchg
jle
(bad)
sub
mov
not
lock
fsubr
enter
jg
or
jnp
in
and
out
mov
pushf
retf
add
movsx
les
stc
jl
jg
out
jmp
mov
loopne
jno
xchg
mov
or
mov
sub
mov
stc
mov
std
inc
jnp
xor
push
push
jns
call
dec
add
or
(bad)
rol
fisub
and
mov
jecxz
int3
push
mov
cmc
fisttp
rol
inc
mov
stc
push
pop
(bad)
loop
sbb
or
retf
int3
dec
aam
or
mov
push
lock
adc
adc
scas
inc
xor
cmps
sti
inc
pop
sub
and
mov
daa
mov
xor
dec
mov
push
jo
(bad)
imul
sub
lods
or
mov
cmp
stos
xor
movs
cmp
and
ret
fst
loope
les
(bad)
adc
sub
jge
cmp
mov
ins
sub
dec
mov
outs
sub
push
push
(bad)
stos
pop
imul
and
or
mov
jmp
shl
pop
mov
add
fs
repz
push
leave
fldenv
dec
(bad)
arpl
xchg
cld
pop
out
call
sub
xchg
mov
iret
mov
pop
cmp
xchg
mov
add
dec
vpsllw
xor
xor
cmps
jge
test
xor
cmp
mov
test
push
sub
mov
push
pop
sub
mov
scas
test
cmps
movs
into
inc
popa
dec
xchg
dec
sub
jbe
dec
fcom
mov
repnz
and
jecxz
mov
into
std
and
iret
xchg
imul
ds
xor
mov
push
xchg
add
or
dec
fdiv
xchg
push
iret
retf
shr
repz
sar
es
adc
xchg
rol
cmc
cmp
add
bound
push
add
pusha
add
or
out
ja
sub
es
mov
mov
pop
adc
fbstp
les
in
iret
bswap
fnstenv
dec
pusha
push
cmp
mov
jge
pop
jle
dec
jae
sub
(bad)
xor
in
pop
dec
cmps
dec
jge
add
jle
jns
aad
mov
inc
inc
enter
inc
mov
shl
sub
(bad)
jp
loope
stc
std
movs
push
stc
retf
retf
in
cwde
adc
lods
push
sub
push
sbb
repnz
retf
imul
(bad)
sbb
and
push
xchg
add
fistp
sar
and
jne
sub
call
stos
lock
loopne
(bad)
movs
pop
repz
dec
in
cmps
icebp
ror
shr
inc
je
sbb
sub
in
lock
jl
(bad)
sahf
fwait
xchg
xchg
adc
xchg
aad
fsubr
fwait
sahf
sbb
adc
push
into
inc
jmp
fnclex
call
outs
mov
pop
(bad)
cmps
cvtss2si
pop
mov
push
mov
stos
ret
and
pop
fsubr
cmps
ret
test
fadd
or
mov
clc
adc
ja
stc
mov
mov
cwde
or
cmp
add
in
jg
push
and
(bad)
(bad)
les
(bad)
push
pop
mov
setb
mov
pop
pop
ret
inc
push
dec
cmp
test
pop
aas
add
int
push
mov
cwde
cmc
pop
imul
adc
dec
inc
adc
clc
jmp
imul
out
mov
es
outs
pop
dec
loopne
pop
mov
cmp
jg
jb
stc
pop
lahf
(bad)
mov
retf
adc
ins
xchg
imul
ret
mov
dec
lahf
fist
pop
repz
xchg
repnz
fcmovbe
sar
out
mov
in
icebp
scas
xor
rcr
pop
out
cli
xchg
add
inc
(bad)
sbb
xlat
(bad)
loop
leave
div
arpl
ror
loop
jmp
hlt
(bad)
cs
sub
fwait
sbb
sub
sbb
(bad)
push
pop
inc
loope
movs
push
xor
mov
repz
nop
data16
add
outs
push
xor
ds
popf
or
or
mov
mov
sub
adc
in
adc
mov
in
(bad)
jmp
xor
sar
scas
sbb
jecxz
ds
test
movs
pop
shl
mov
dec
inc
or
mov
movs
mov
pop
setb
inc
jp
in
jo
std
dec
test
pusha
cdq
add
adc
push
or
pop
daa
push
jle
sub
sbb
in
mov
ins
pop
mov
jmp
push
cmp
push
pushf
push
xchg
sub
cmc
sub
push
es
loope
sar
out
xchg
inc
pop
xchg
dec
cld
jle
jo
js
push
sbb
ja
jmp
push
nop
cmp
out
pop
cld
or
mov
(bad)
pop
pop
shl
xchg
dec
leave
rcr
int
cmp
inc
xor
jno
adc
xchg
inc
cmp
inc
mov
cld
cli
mov
dec
mov
mov
(bad)
mov
push
in
pop
repz
mov
mov
(bad)
stc
push
pop
and
call
bound
push
jns
jo
xchg
ja
xchg
addr16
cwde
neg
imul
mov
mov
cmp
mov
inc
sbb
push
jnp
pop
push
mov
and
clc
cdq
mov
pop
imul
out
ds
xor
loope
mov
retf
sub
stc
push
jno
mov
dec
push
in
imul
pushfw
cmps
and
mov
mov
jp
dec
dec
cmc
jg
jecxz
push
inc
sbb
mov
push
mov
dec
cwde
cmp
push
cmp
jb
jne
inc
and
cmp
mov
jmp
lods
pop
popa
jnp
jbe
or
xor
cmp
mov
push
movs
hlt
add
les
inc
std
(bad)
mov
mov
add
scas
test
mov
inc
jl
mov
xchg
aaa
cs
xor
jge
inc
(bad)
lods
push
ret
sub
in
mov
mov
fwait
push
(bad)
pop
loop
push
outs
es
rol
(bad)
and
pop
sbb
and
sbb
push
bound
jl
and
fimul
pushf
mov
mov
fist
sbb
mov
and
push
add
outs
fdiv
outs
loope
dec
pusha
add
sbb
(bad)
cmp
pop
dec
add
mov
push
adc
or
mov
inc
or
cs
mov
pop
sbb
(bad)
push
lock
jl
(bad)
into
pop
mov
fwait
jno
mov
pop
dec
push
aad
mov
aas
sub
loopne
cmp
or
retf
jae
mov
sbb
jnp
xor
rcr
sub
ja
mov
sub
mov
int3
into
sub
imul
into
sbb
or
pushf
and
adc
sub
(bad)
or
or
xor
and
mov
mov
lds
daa
dec
ss
ins
jno
mov
aaa
mov
add
and
mov
pop
jno
mov
pop
jle
mov
call
rol
cmp
and
cmc
dec
js
or
out
loope
xlat
out
or
sub
push
and
push
push
jnp
sub
inc
popf
pop
std
pop
push
(bad)
fsubp
xor
nop
std
dec
inc
lods
into
(bad)
cmp
dec
pop
icebp
dec
(bad)
mov
addr16
aad
push
sbb
js
pop
js
out
mov
into
jmp
xchg
add
pop
adc
or
int3
mul
pop
mov
aad
ror
jl
sbb
js
xchg
icebp
fidiv
int
rcl
adc
(bad)
push
int3
or
rol
mov
dec
push
pop
adc
add
(bad)
out
js
out
jo
mov
push
cmp
enter
stos
push
jp
pop
inc
adc
neg
mov
lea
push
das
sbb
out
mov
mov
movs
jmp
stos
jb
repnz
leave
dec
loopne
inc
dec
and
fist
arpl
add
arpl
inc
push
ins
jge
out
ins
mov
cmp
fidivr
es
push
sbb
in
(bad)
movs
call
mov
pop
xchg
out
cmc
or
ins
jecxz
xchg
inc
outs
sysenter
jecxz
push
mov
jmp
aam
push
inc
pop
cmp
add
mov
xor
sbb
repnz
mul
fbstp
mov
mov
test
or
cmp
cmp
loopne
in
inc
add
retf
adc
mov
sbb
push
lds
xor
pop
outs
jo
(bad)
dec
add
adc
push
hlt
stc
cmps
jecxz
add
jb
mov
cmp
call
movs
fdivr
mov
add
test
jmp
xchg
jg
sub
mov
in
xor
nop
movs
mov
push
cmps
mov
inc
mov
jnp
les
retf
scas
stos
mov
fidiv
ja
cmp
xchg
inc
dec
mov
dec
ret
dec
xor
mov
movs
jecxz
mov
sti
adc
cmc
arpl
stos
or
jmp
cmps
inc
test
(bad)
jb
push
loop
mov
mov
jg
ins
inc
push
test
and
aas
sbb
push
push
pop
movs
dec
rcr
add
or
and
arpl
bswap
and
dec
push
dec
mov
jae
adc
or
lock
jae
push
mov
jmp
lods
sbb
nop
mov
hlt
xchg
xchg
dec
sbb
pop
repz
retf
add
cmp
jl
les
(bad)
mov
sar
jb
rol
fidiv
test
adc
or
xor
mov
xor
out
ret
idiv
out
stos
aaa
jge
xchg
in
or
inc
bound
dec
ins
addr16
sbb
mov
fmul
add
sub
cmc
jge
imul
out
cwde
inc
stc
sahf
in
or
pop
nop
je
cdq
and
cmc
out
movs
mov
iret
mov
push
movs
fisubr
xor
mov
push
iret
rcr
mov
add
jns
inc
sbb
daa
dec
cmp
enter
jbe
bound
clc
sar
push
or
lods
xor
adc
mov
mov
inc
ja
repnz
adc
int
int3
in
pop
enter
(bad)
repnz
sub
leave
add
sar
pop
inc
leave
pop
fsub
push
fld
scas
adc
call
dec
addr16
push
push
aad
sub
loope
add
dec
lahf
inc
dec
out
and
call
sub
push
fs
or
push
jmp
repnz
xchg
les
retf
loopne
pushf
fnstenv
enter
mov
je
adc
xchg
ss
neg
in
cwde
xor
loope
outs
aaa
cmc
rol
rol
into
mov
outs
dec
mov
jmp
jne
cld
ins
clc
mov
jne
xor
dec
xchg
mov
sahf
cs
adc
jbe
into
or
stos
dec
xor
sbb
or
pop
cmp
hlt
jecxz
jp
mov
push
xor
les
(bad)
scas
and
clc
mov
call
jmp
jnp
cs
popa
push
sbb
add
add
rcl
push
or
cwde
movs
mov
mov
fmul
or
cmp
stos
xchg
scas
fimul
add
icebp
dec
stc
inc
sbb
mov
dec
mov
mov
pop
cli
mov
jmp
xor
xchg
cmp
jg
enter
fidiv
fistp
xor
xchg
dec
test
or
data16
lea
push
cmp
hlt
retf
dec
call
scas
cli
fwait
iret
ror
hlt
pushf
in
ins
ret
push
cmps
push
out
xchg
push
aad
jmp
aaa
pop
pop
xor
jb
call
cmps
retf
sub
cdq
loopne
test
push
inc
int
daa
inc
dec
imul
jns
or
pop
pushf
sub
lahf
sub
js
pop
jmp
jmp
out
push
dec
in
test
ss
int
iret
mov
pop
icebp
enter
mov
test
leave
jno
mov
pop
adc
sub
push
sahf
jmp
jmp
xlat
adc
xor
sub
test
jmp
std
sbb
adc
les
xor
jmp
fwait
loope
dec
xchg
outs
fidivr
nop
int3
sti
sub
pushf
pusha
fcmovnb
int3
popa
sbb
xchg
or
mov
movs
sbb
loopne
adc
push
push
cmc
mov
sub
aas
retf
test
xor
jp
adc
movs
mov
mov
sbb
jae
loopne
adc
and
push
mov
jno
push
inc
leave
ins
loope
fcomp
sbb
mov
or
dec
mov
sub
add
jb
jae
dec
fwait
mov
mov
sub
mov
cmps
test
data16
xchg
repz
cmp
inc
jbe
and
push
sub
addr16
dec
test
not
jae
sub
fcomip
repz
in
pop
sbb
pop
fisub
add
add
outs
shl
sub
aaa
movs
in
mov
ja
mov
imul
or
ja
leave
inc
ss
mov
gs
retf
lds
push
idiv
push
mov
bound
inc
mov
aas
jns
mov
icebp
dec
inc
jmp
xchg
xor
sbb
stos
rol
ret
scas
sbb
cmp
add
mov
sbb
ds
mov
mov
xchg
push
stc
cmpps
mov
add
dec
loop
mov
out
sbb
cmp
push
lods
mov
mov
or
mov
inc
out
stc
mov
lea
adc
scas
sahf
xchg
jb
jp
mov
and
ins
in
jb
dec
int
adc
mov
xor
mov
dec
dec
cmp
xor
mov
test
and
imul
or
push
sbb
pop
pop
mov
pop
ret
leave
adc
rcr
fwait
scas
es
fwait
xchg
out
cwde
cld
mov
out
popf
sbb
movs
int
push
shr
push
cmp
das
mov
xor
(bad)
mov
inc
test
(bad)
pop
mov
fdivr
js
fwait
jbe
push
shl
dec
dec
stos
push
push
push
mov
loopne
ret
jp
mov
add
arpl
imul
sbb
int3
or
pop
scas
rol
lea
xchg
ins
mov
mov
mov
int
dec
cmp
into
imul
sub
lock
nop
scas
leave
and
(bad)
mov
jge
or
push
pushf
sahf
xchg
xor
movs
lea
out
xor
xor
fimul
repz
ja
outs
mov
nop
mov
lods
ins
je
dec
clc
jae
xchg
call
add
fwait
sahf
sbb
js
hlt
inc
or
ins
sbb
leave
dec
dec
and
fwait
and
das
gs
loop
mov
stc
ret
(bad)
std
mov
push
jb
inc
mov
mov
daa
out
xor
dec
dec
stos
mov
cmps
mov
in
xchg
div
or
xor
cld
pop
cdq
sub
pop
inc
sub
xor
(bad)
sbb
ins
cs
sahf
jp
xchg
jne
lock
int
movs
mov
mov
retf
stc
cmps
xchg
std
mov
retf
add
fwait
jge
jl
adc
stos
inc
xor
fcomi
pop
mov
xchg
pusha
mov
push
out
xchg
mov
test
aaa
mov
adc
dec
sbb
mov
pusha
jle
jg
cmc
adc
sbb
and
inc
jge
pusha
xor
out
(bad)
xchg
mov
pop
jmp
push
out
out
in
cli
pop
push
jne
cmp
xchg
push
or
lock
out
sbb
popa
xchg
mov
outs
push
into
pusha
clc
out
in
outs
test
mov
inc
xchg
inc
test
fisttp
push
jmp
std
out
pop
mov
mov
and
jl
pop
xchg
ret
push
push
movs
pop
jns
(bad)
fisubr
push
xchg
fcmovnb
retf
inc
xor
out
imul
adc
jg
sub
imul
jle
mov
rcl
dec
std
sub
leave
push
fisubr
xchg
fcomi
jns
fiadd
jmp
cdq
push
jb
loope
(bad)
int3
and
jle
arpl
xchg
int3
adc
in
cwde
push
retf
jno
xor
ins
jp
add
push
repz
fistp
stc
mov
and
rcr
test
inc
sub
outs
push
stos
hlt
test
jns
lods
cli
test
int3
inc
xchg
std
hlt
(bad)
test
gs
sub
dec
inc
push
mov
ror
mov
and
sub
jo
xor
or
jb
push
mov
aam
ret
push
test
int3
mov
jmp
(bad)
mov
inc
push
call
sub
push
mov
xor
cmp
call
rol
dec
je
out
add
jp
inc
stos
ret
mov
shl
stc
lahf
cmps
retf
push
cmp
fldenv
sbb
mov
nop
dec
popa
cmp
mov
xchg
mov
mov
or
sbb
push
adc
adc
adc
aas
dec
inc
sbb
jg
retf
test
mov
xchg
iret
lods
adc
push
cmc
mov
lods
or
js
sub
mov
add
sbb
ret
jg
xchg
lods
icebp
outs
fmul
fcomp
mov
aad
ret
int
mov
push
mov
test
cmps
push
mov
idiv
inc
sahf
add
adc
dec
jmp
pop
mov
inc
and
sahf
shl
test
pop
mov
scas
lock
lea
add
sbb
mov
aas
jo
and
repz
push
inc
mov
mov
xlat
ret
push
fst
push
inc
xor
sti
imul
cmps
call
sub
pop
sub
lock
jno
xor
xchg
mov
push
gs
xchg
leave
sbb
enter
repz
pop
mov
dec
pop
push
push
les
or
pop
aas
or
mov
inc
xlat
scas
push
adc
clc
adc
(bad)
in
hlt
movs
jnp
or
dec
and
cmp
mov
xor
clc
inc
push
in
xchg
xlat
mov
les
or
mov
movs
sub
inc
fiadd
mov
pop
add
cmp
jbe
jmp
(bad)
ret
shl
inc
sbb
icebp
xchg
das
xchg
cmp
bndldx
or
mov
fsub
xchg
fiadd
xchg
add
push
or
inc
lea
outs
and
or
jns
mov
arpl
cmc
jl
loopne
inc
out
mov
aaa
mov
jnp
shl
iret
fisttp
int3
fs
mov
mov
into
call
addr16
mov
push
mov
lea
(bad)
mov
in
add
leave
fs
adc
and
scas
call
xor
mov
ror
sbb
add
add
and
mov
mov
cli
cmp
fisubr
ins
and
jl
in
les
mov
or
(bad)
cmp
jae
pusha
test
adc
xor
pop
dec
xchg
jle
xor
lods
dec
out
push
push
xchg
inc
retf
sub
mov
push
adc
cmp
stc
mov
dec
sub
fbld
fs
jge
(bad)
mov
dec
(bad)
push
sub
stos
daa
sbb
pushf
stc
mov
mov
cs
(bad)
ficomp
xor
dec
or
push
mov
sbb
(bad)
pusha
cld
pushf
dec
popf
sbb
fistp
scas
xor
retf
dec
aas
dec
cwde
loope
push
pop
inc
addr16
aad
jecxz
loopne
loopne
movs
pop
xor
push
or
leave
adc
dec
retf
add
dec
loop
loop
fild
(bad)
(bad)
test
mov
sti
or
gs
in
out
push
xchg
sbb
adc
icebp
mov
mov
push
mov
loop
das
push
mov
dec
ins
clc
jecxz
mov
sub
scas
(bad)
jecxz
mov
in
jmp
inc
add
mov
xchg
xchg
or
jmp
pushf
enter
shl
cwde
test
sar
inc
push
fimul
lea
jb
or
rcl
lods
add
call
mov
les
mov
push
mov
or
cmp
loopne
fnstsw
or
call
loopne
clc
sbb
cmps
dec
push
xor
das
rcr
jmp
jmp
add
stc
jnp
cwde
xor
dec
sbb
cdq
xor
es
(bad)
push
shl
sbb
jno
jecxz
mov
jl
mov
dec
jp
popa
cmp
int3
dec
and
mul
jb
dec
add
inc
in
out
mov
das
xor
mov
in
push
mov
cld
movs
out
enter
stos
leave
pop
and
jle
add
cwde
popa
mov
daa
mov
ffreep
jo
cmp
dec
test
dec
jno
in
sub
mul
and
sub
(bad)
mov
lock
add
shl
addr16
pop
push
cmp
mov
mov
dec
test
ins
not
add
jb
data16
sbb
out
and
imul
out
scas
push
je
test
hlt
repz
mov
out
pop
pop
sbb
fnsave
rcr
dec
lods
xor
inc
in
aad
adc
mov
ds
sbb
and
ficom
popa
and
pop
inc
pop
cmp
repnz
loopne
sbb
(bad)
adc
dec
jo
adc
dec
xchg
ret
in
mov
push
add
outs
in
pop
test
or
pop
mov
push
ins
push
add
mov
and
xor
add
mov
leave
jecxz
cmp
push
js
mov
nop
mov
sti
sti
xchg
lds
mov
fmul
or
into
ss
sub
mov
rcr
mov
std
adc
out
lods
clc
call
sub
retf
cmp
out
add
cmp
aaa
xchg
add
inc
mov
mov
xlat
shr
ret
xor
and
inc
jge
hlt
(bad)
movs
inc
in
cld
sti
hlt
push
mov
ja
loop
imul
mov
xchg
lds
nop
xor
jg
push
push
imul
shl
dec
xor
les
sti
stc
add
mov
jle
cdq
xor
test
retf
mov
leave
or
out
mov
(bad)
pop
pop
or
les
call
cmc
int
cwde
cmp
ret
and
loopne
daa
(bad)
loopne
pop
test
iret
push
add
hlt
mov
sub
jle
daa
fld
ret
cmp
xchg
xor
movs
inc
mov
pop
(bad)
out
fs
jo
jo
push
xchg
test
xchg
and
mov
ror
push
sti
cli
in
pop
(bad)
or
sub
mov
pop
cmps
dec
aad
mov
out
lods
inc
adc
jmp
setb
xchg
data16
sbb
aas
test
sub
stos
jne
push
add
(bad)
xor
add
sub
mov
cmp
popa
mov
nop
mov
inc
cmp
bound
sub
shl
fs
call
push
push
pop
sub
cs
mov
jge
sbb
sahf
inc
test
jbe
hlt
clc
cmp
leave
out
int
dec
push
push
jp
loope
mov
fcmovne
inc
xor
stos
cs
xchg
call
adc
iret
retf
lods
push
sti
lods
(bad)
cmp
sbb
cmc
mov
mov
xchg
jo
adc
push
mov
and
in
cmp
call
xor
add
xor
icebp
jl
jl
xchg
les
pop
push
pop
(bad)
xchg
adc
xchg
mov
jmp
call
lods
adc
xor
push
(bad)
daa
data16
sub
push
fld
les
jg
imul
xor
and
or
shl
aaa
into
cmp
cmps
sahf
push
mov
test
test
sub
or
xor
dec
pop
push
sahf
popa
out
ja
jbe
push
enter
jmp
jnp
in
cmc
shl
es
and
gs
test
mov
jo
sbb
std
(bad)
loop
mov
and
js
sub
sub
iret
dec
adc
dec
ss
ret
dec
sub
push
inc
jl
leave
shr
lahf
test
cli
cld
push
outs
lock
jno
sbb
pop
aam
adc
in
hlt
push
xor
sahf
jl
in
out
aad
(bad)
in
out
xchg
imul
jo
sbb
cmc
es
pop
pop
cmp
data16
xchg
ror
inc
cmps
jp
inc
repz
cld
jno
int3
add
fcom
mov
push
jle
xchg
push
(bad)
mov
fistp
mov
fcomp
repz
test
scas
lods
xor
fidiv
mul
mov
jmp
out
sahf
xor
mov
sub
push
mov
mov
in
cmc
call
popf
sbb
ss
aad
mov
dec
mov
jae
xchg
call
dec
and
mov
mov
inc
adc
addr16
xor
sahf
std
dec
mov
sub
xchg
cmp
inc
or
adc
mov
pop
mov
dec
sub
in
jp
out
jecxz
jge
imul
push
mov
or
add
add
into
stos
cld
cmps
test
idiv
mov
inc
push
inc
aad
push
jo
imul
pop
pop
and
and
pop
int3
xor
out
repz
aas
fwait
loop
nop
cmps
leave
hlt
(bad)
(bad)
je
push
(bad)
push
xchg
or
mov
xchg
std
xchg
fcmovnu
fidivr
sub
lahf
in
ins
test
test
xchg
pop
push
mov
clc
lea
and
pop
pop
sbb
inc
mov
clc
xor
scas
push
dec
fistp
fild
fiadd
or
test
jg
or
pop
mov
cmc
fldenv
pop
add
jne
aaa
nop
push
mov
cs
push
and
xchg
or
adc
xor
out
mov
in
jecxz
xor
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
bswap
mov
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
inc
and
popf
in
jbe
ins
fcmovne
fs
mov
(bad)
(bad)
or
(bad)
pop
dec
mov
add
add
test
inc
cmp
cmps
mov
push
test
and
adc
fmul
in
(bad)
repnz
xlat
sbb
cmp
sub
cmp
xchg
fs
leave
ret
inc
test
call
xor
pmuludq
dec
add
lock
es
out
pushf
mov
push
test
or
push
mov
xor
jl
repz
add
popa
enter
mov
sbb
ret
xor
sbb
xchg
enter
pop
les
and
dec
cmp
jae
jbe
cli
test
(bad)
fbld
dec
xchg
addr16
jae
cmp
int
mov
add
cmp
hlt
add
or
call
sub
loopne
out
int3
popf
cld
ins
mov
jmp
repz
dec
iret
adc
and
ins
pop
or
jmp
shr
fidiv
push
pop
jg
les
adc
lods
lahf
ins
(bad)
fcmovnu
cmp
and
stc
(bad)
push
xchg
sar
fmul
out
xchg
nop
shl
ret
jns
pushf
ja
shr
xor
inc
mov
popf
and
jge
cmp
xchg
xchg
out
pushf
cmp
mov
popf
out
out
add
idiv
xor
inc
and
or
fsub
jae
xchg
cmp
mov
in
icebp
dec
xchg
or
xchg
test
dec
xchg
dec
fcomp
cdq
in
adc
retf
pop
iret
mov
enter
push
sbb
mov
ret
mov
and
push
je
mov
lods
xchg
addr16
jo
lahf
in
mov
mov
or
pushf
fistp
fstp
add
and
cmp
add
sbb
fldln2
push
movs
adc
and
sahf
test
(bad)
in
cmp
cmc
push
adc
push
or
popf
push
xor
sub
xchg
aas
out
mov
xchg
jle
and
mov
fcomp
mov
adc
and
add
jmp
cmps
push
in
pop
retf
dec
inc
xor
xchg
push
dec
xchg
je
nop
aaa
or
out
pop
or
xor
pop
and
dec
or
sahf
mov
inc
mov
xor
mov
jo
xchg
popf
clc
dec
inc
sbb
xor
add
jbe
push
stc
push
push
lods
sub
(bad)
jnp
jl
dec
aad
nop
in
add
popf
fcmovu
dec
into
mov
test
aas
cmp
mov
mov
fs
in
imul
jbe
test
sub
call
mov
mov
xor
and
pop
add
add
inc
xor
add
retf
mov
stc
and
pop
jae
inc
mov
and
push
mov
mov
loop
mov
push
mov
mov
daa
xlat
xchg
test
sbb
jp
add
ins
daa
fistp
jo
mov
inc
add
jge
and
add
dec
mov
not
retf
je
pop
jp
int3
xchg
push
jmp
push
lds
fmul
xlat
call
iret
jg
xchg
adc
fwait
inc
cmp
std
push
adc
out
mov
rcl
or
mov
xchg
xchg
aam
fcomi
into
sahf
rol
sub
cwde
pop
rol
aam
vcvtsd2ss
cmps
ds
pop
adc
hlt
or
fiadd
pop
jmp
push
clc
xor
call
lock
aad
shl
shl
(bad)
movs
out
retf
(bad)
inc
loopne
mov
sub
mov
std
stos
sbb
ss
std
aam
push
sub
and
fdiv
pop
rcr
sbb
adc
fsubr
pop
iret
hlt
and
fsubr
ss
fwait
add
cdq
push
adc
icebp
ins
mov
aad
xchg
jno
out
mov
or
lock
mov
sbb
xchg
shr
xor
mov
mov
cli
sbb
arpl
mov
cmp
cmp
js
outs
inc
xor
add
adc
push
loopne
or
xor
imul
jb
cmp
out
bound
std
push
mov
out
mov
mov
pop
div
ficom
mov
adc
mov
sbb
int
data16
sub
ins
pushf
jbe
inc
aas
jo
and
scas
jmp
scas
cs
sub
icebp
xchg
loopne
cmps
push
fidivr
mov
leave
push
xchg
xor
push
add
push
pop
test
loopne
out
ret
mov
imul
adc
rcr
ror
jnp
in
loope
pop
sub
xchg
xchg
daa
(bad)
(bad)
add
mov
sbb
mov
sti
ret
mov
add
ds
and
pop
call
int
mov
jge
sbb
outs
nop
out
push
jge
dec
retf
pop
inc
ficom
ret
adc
std
xchg
xor
imul
cmc
dec
jo
sar
test
pop
pop
push
movs
shl
add
fnsave
push
pop
imul
enter
movs
shr
adc
int3
xlat
dec
cwde
loopne
jp
bound
mov
pop
stc
xchg
sub
(bad)
xor
pop
iret
scas
jmp
push
scas
(bad)
lods
sub
xor
cdq
mov
mov
cmp
inc
and
into
push
es
push
xchg
cmp
jle
test
push
out
mov
inc
sbb
jl
jbe
les
add
and
fbstp
sti
test
push
movs
mov
lods
push
and
retf
(bad)
ja
cmps
push
pop
mov
xchg
scas
xor
out
(bad)
ds
daa
cwde
das
loop
mov
dec
dec
ins
and
and
or
mov
cmp
repnz
addr16
lahf
mov
push
sahf
icebp
dec
xor
or
push
and
shl
and
pop
ret
and
je
not
push
hlt
mov
lods
xchg
scas
cmp
loopne
movs
jo
data16
in
or
or
cmps
jle
mov
jmp
add
mov
outs
pop
or
enter
enter
sub
cli
and
xlat
retf
xor
retf
aaa
xor
int3
(bad)
stc
retf
mov
push
jmp
inc
out
cmp
(bad)
mov
jg
sbb
mov
rol
sti
in
jmp
xchg
or
clc
lea
fiadd
shr
xchg
and
mov
jno
sbb
mov
jne
imul
ror
leave
and
fistp
into
mov
bound
sahf
mov
inc
jle
push
stc
mov
sbb
sub
sub
sub
and
mov
lock
and
push
inc
in
addr16
dec
pop
and
mov
mov
pop
mov
xchg
dec
inc
es
outs
cmps
fcomip
sbb
les
(bad)
gs
mov
jl
call
xor
imul
aas
sub
iret
inc
aas
mov
xchg
jb
and
jmp
lods
jmp
aam
add
clc
push
jmp
mov
adc
scas
mov
sub
outs
repnz
test
dec
xor
pop
pop
mov
gs
xchg
mov
ja
inc
fstp
movs
ds
js
jmp
fdiv
adc
mov
daa
enter
retf
aad
jecxz
sub
xchg
push
inc
xlat
pop
xchg
arpl
ret
in
jp
mov
mov
jnp
pop
cld
cli
or
mov
xchg
shr
shl
cmovo
push
(bad)
fild
in
stos
sbb
sbb
pusha
fldenv
adc
mov
and
aam
movs
in
test
ins
xchg
icebp
paddd
mov
bts
pop
ja
dec
pop
jae
inc
pop
cmc
fstp
loopne
cdq
mov
movs
cs
fprem
shl
jne
mov
jae
xchg
and
xchg
mov
and
es
(bad)
in
retf
fisttp
(bad)
adc
cmc
sub
add
jle
jb
mov
mov
stc
test
jae
ror
lods
or
adc
popf
js
jb
sub
cmp
cmp
bndstx
mov
ret
push
retf
jmp
cwde
push
sub
int3
stc
sahf
call
enter
add
les
aaa
aad
popf
xchg
sub
sub
mov
jmp
and
test
in
shl
ret
test
dec
aas
(bad)
call
fcomp
jno
mov
loope
(bad)
hlt
pusha
pushf
imul
imul
mov
test
out
movs
inc
pop
lods
lea
push
xchg
cmps
cwde
fild
pop
jecxz
into
pop
jl
xor
and
daa
mov
(bad)
(bad)
shl
jg
sbb
cld
arpl
sub
popa
mov
clc
cwde
push
jl
in
add
fsubr
dec
mul
sti
aad
and
div
mov
fnstenv
jle
neg
sub
inc
out
iret
icebp
and
call
mov
xor
sahf
retf
ins
es
sub
and
adc
out
lods
aaa
sti
pushf
cmp
or
aad
jl
push
repz
mov
mov
das
dec
cwde
outs
mov
xor
jo
and
cli
jp
fsubr
out
push
fs
ja
lods
cmp
rol
(bad)
and
cmp
inc
fwait
test
popa
push
inc
adc
movs
in
fild
xchg
test
ja
stc
pop
xchg
cdq
adc
outs
xor
loop
repz
push
mov
int3
push
xchg
aad
in
xchg
or
nop
dec
push
cmp
mov
or
imul
inc
div
test
push
daa
inc
cmp
jmp
mov
outs
adc
sub
ror
fwait
mov
sub
lods
aam
inc
mov
cmp
(bad)
sub
push
cld
je
dec
inc
jp
push
aam
push
xchg
mov
push
xor
cmp
sbb
jno
dec
stos
and
daa
imul
jne
and
add
lods
mov
sbb
sbb
push
fwait
mov
push
push
pop
(bad)
sub
js
daa
mov
add
pop
push
add
mov
mov
push
mov
gs
cmc
dec
ss
xor
in
leave
or
stc
mov
mov
sub
lods
jl
lahf
xchg
mov
in
xor
int
xor
xor
fstp
retf
sti
ret
push
jmp
dec
mov
adc
and
pop
sbb
pop
(bad)
pop
loopne
pop
cmp
push
in
out
not
sub
dec
sub
mov
push
fild
or
or
pop
stos
icebp
div
mov
out
jp
jae
mov
out
scas
jne
addr16
jbe
jecxz
jmp
cmp
stos
icebp
push
push
pop
mov
ror
cld
not
mov
pop
mov
bound
dec
cmp
into
jmp
adc
enter
pop
mov
fstp
js
bound
dec
adc
mov
stos
aaa
inc
dec
sbb
rol
jl
xor
cmp
add
mov
addr16
frstor
shr
ins
lods
scas
push
sar
xchg
fidiv
mov
dec
xlat
pop
cli
xor
js
adc
pusha
sbb
imul
mov
loopne
stc
sbb
lock
outs
aam
or
and
mov
repz
pushf
jmp
pop
retf
inc
jnp
imul
xlat
pop
cmps
cdq
repz
call
sub
mov
xor
retf
jg
bound
iret
rol
ss
xlat
or
dec
mov
adc
je
fs
cmp
aas
xchg
inc
sub
sub
mov
or
cmp
cmp
fcmovbe
push
(bad)
test
inc
in
add
cmp
xor
movs
sub
out
add
in
dec
jno
xor
and
dec
lods
icebp
xchg
(bad)
dec
pop
dec
scas
xchg
push
aam
cdq
mov
aam
jecxz
jmp
lds
ss
and
leave
cdq
pop
jnp
add
scas
mov
push
icebp
xor
and
lods
sbb
or
pusha
xchg
stos
hlt
(bad)
jl
pop
lahf
(bad)
(bad)
aas
aas
fcmovb
push
test
out
xchg
or
pop
push
and
push
scas
or
test
mov
dec
ss
rcl
ja
add
push
test
js
movs
pusha
or
mov
call
test
sbb
mov
fs
mov
push
mov
inc
add
int
add
push
repz
cmc
fs
mov
sub
and
mov
dec
mov
push
in
xchg
or
lods
scas
jmp
fidiv
out
ja
fsub
lods
dec
add
pop
out
inc
fild
les
stos
gs
or
jle
loope
or
hlt
adc
repz
mov
mov
out
ret
add
pop
idiv
leave
out
lods
pop
cdq
jnp
sub
or
jne
cwde
inc
rol
push
out
inc
jne
push
iret
add
mov
ror
push
jns
mov
jmp
or
sti
mov
je
cmps
in
xor
dec
pop
or
mov
sbb
add
cs
pop
xchg
mov
lahf
jne
inc
inc
jp
or
mov
rol
and
push
jp
lods
lods
gs
mov
jle
dec
aam
imul
xor
push
sbb
push
test
dec
push
aas
arpl
sti
xchg
cmp
jae
mov
jns
or
out
push
push
mov
lds
aam
add
call
push
(bad)
inc
adc
adc
jnp
rol
xchg
out
hlt
and
popa
jnp
scas
clc
sbb
das
jmp
inc
std
cmp
cmp
out
sbb
cli
inc
sbb
mov
mov
std
cmp
pop
or
arpl
imul
mov
test
add
adc
sahf
push
jl
sub
sub
cmps
retf
icebp
inc
push
imul
imul
cmp
rcr
sbb
out
fcmovnb
call
loopne
mov
mov
sbb
jmp
xor
and
(bad)
test
lahf
loopne
div
xchg
or
nop
daa
aaa
outs
pop
jecxz
sahf
sbb
sbb
jno
jmp
xor
xor
xchg
or
xor
push
popa
(bad)
jne
mov
mov
fld
ss
sbb
xchg
cdq
jne
xor
and
adc
aam
or
rcr
jl
jmp
(bad)
mov
test
scas
xchg
cdq
cmp
dec
aaa
sbb
mov
loope
mov
in
cdq
push
aad
je
inc
mov
fdivr
push
hlt
psllw
mov
and
push
sub
adc
inc
add
dec
mov
cmp
outs
sub
or
add
dec
pop
mov
add
jo
push
xchg
mov
jmp
cmp
pop
imul
jbe
sub
mov
xchg
js
jmp
in
aad
hlt
xchg
jne
sub
popa
daa
add
lea
inc
punpckldq
in
stos
es
sar
add
jns
icebp
rcr
mov
and
mov
imul
add
test
mov
repz
xchg
mov
leave
push
test
cdq
rol
mov
je
xchg
ret
pop
mov
shl
es
jns
sub
std
xlat
or
adc
mov
push
test
or
das
jp
jnp
sub
inc
sbb
rcr
mov
mov
xchg
jp
mov
stc
loopne
jnp
dec
dec
cmp
push
cmp
(bad)
xlat
std
scas
pushf
dec
or
popa
popf
xchg
mov
xchg
mov
call
aad
pop
lock
add
adc
test
mov
mov
cmp
outs
dec
scas
xor
push
in
mov
out
loop
push
pop
sub
adc
inc
cli
push
out
add
ret
in
add
xor
daa
mov
test
mov
adc
xchg
fisttp
mul
push
cwde
jp
xchg
jb
cli
inc
jns
mov
adc
out
add
shl
enter
mov
in
movs
retf
xchg
mov
mov
adc
movs
fdivr
xchg
int3
mov
out
mov
imul
add
add
loope
push
jmp
dec
mov
pop
sub
lods
lods
add
cwde
add
xchg
adc
pop
or
ja
mov
jge
imul
xchg
pop
jo
inc
in
in
inc
retf
cmp
push
pop
es
sahf
das
cli
cmps
adc
pop
outs
ja
dec
pop
sub
dec
dec
sub
nop
lods
jmp
hlt
or
lock
test
push
test
jecxz
mov
pusha
mov
xchg
rcl
das
fwait
xlat
clc
in
jb
ins
mov
mov
int3
mov
pop
ret
in
pop
and
xor
ss
sub
xor
test
(bad)
out
nop
or
call
les
add
inc
outs
mov
pop
push
psrlw
gs
cdq
dec
xchg
mov
xchg
retf
xchg
push
jbe
mov
mov
mov
stc
xor
rcr
push
outs
push
sbb
jbe
sbb
popa
out
popa
pop
mov
sbb
pop
mov
mov
stos
mov
fistp
je
loopne
push
je
sbb
cwde
adc
inc
jns
ja
sub
loope
test
lock
cmp
not
popf
push
jno
adc
cmp
jmp
loopne
in
adc
xchg
fistp
daa
inc
or
pushf
jmp
xor
adc
pusha
shr
push
ret
push
shr
and
fisttp
add
std
outs
in
adc
nop
aaa
pop
out
pop
lea
mov
dec
clc
cwde
enter
shr
mov
call
out
pop
aaa
scas
jmp
jmp
or
pop
dec
jg
sar
loope
xor
dec
stos
and
ror
cmp
les
jge
push
(bad)
jnp
adc
bound
gs
push
or
xor
lds
lods
shr
mov
jl
xor
mov
rcr
and
leave
push
test
out
and
dec
or
dec
cmp
or
jg
jbe
test
pushf
shr
xor
cmps
stc
imul
movs
into
ret
dec
sar
and
inc
outs
daa
aas
hlt
and
and
dec
adc
shr
cdq
lods
cmp
sahf
add
and
mov
rcl
movs
in
add
sbb
cmp
cmp
add
lahf
cld
hlt
sbb
xchg
mov
hlt
cmps
mov
pop
xor
mov
and
loopne
mov
cmp
stc
sbb
fdiv
jmp
ret
push
sub
movs
adc
in
mov
mov
test
mov
and
xchg
and
jle
sbb
jne
sub
out
jbe
test
ins
test
sbb
iret
fimul
xchg
cmp
mov
mov
scas
rol
dec
in
imul
mov
out
pop
dec
pop
movs
jae
popa
mov
shl
(bad)
sub
jmp
les
mov
cmp
jno
or
mov
ja
cmp
xor
cld
jg
pop
rcr
pop
push
lods
jp
inc
not
loop
daa
stc
jge
pop
outs
push
cs
dec
xchg
push
out
inc
adc
enter
ins
and
xchg
test
jg
mov
fcom
xchg
xchg
stc
ret
mov
and
cmc
or
push
outs
shr
sub
sti
cmp
inc
mov
jno
cmp
test
movs
jnp
sahf
rcl
jne
jb
dec
(bad)
or
jmp
or
sti
pop
adc
xor
cmps
mov
fild
loop
pop
outs
or
cmp
(bad)
mov
in
sbb
shr
or
clc
outs
ds
adc
outs
jge
add
cmp
ja
int3
call
outs
movs
mov
lds
enter
dec
or
inc
push
jnp
push
adc
ja
xor
int
icebp
jae
jmp
dec
xor
outs
dec
push
nop
mov
std
and
cmp
scas
inc
pusha
push
or
retf
std
inc
pop
dec
mov
push
xchg
cmp
mov
cmp
mov
mov
pop
(bad)
ficomp
pop
stos
int3
rcl
out
fisub
xchg
pop
push
mov
add
jl
push
lods
jecxz
mov
mov
call
push
js
cmp
stos
adc
loopne
lds
js
and
mov
stc
gs
cmc
mov
das
xlat
data16
pmulhw
jge
in
ror
fs
xlat
dec
iret
out
popf
adc
fsub
stc
mov
ja
or
les
out
ficomp
sbb
push
sub
(bad)
dec
popa
add
sub
or
bound
push
jl
dec
xlat
cmp
int
mov
sbb
jnp
mov
pop
xchg
popf
mov
(bad)
adc
and
add
xchg
pop
fist
sbb
pop
sub
sub
jmp
test
(bad)
cmp
mov
pop
push
sub
addr16
jno
jbe
retf
mov
lock
std
add
loopne
hlt
mov
leave
dec
sub
repz
(bad)
in
iret
add
inc
cmp
mov
(bad)
out
iret
cdq
rol
ror
or
(bad)
xor
cld
movs
sbb
out
jno
lahf
jbe
aad
lds
hlt
xor
call
ins
xchg
jge
test
mov
ds
pop
sub
sub
push
fwait
and
xchg
fwait
inc
and
dec
fadd
xchg
pop
pop
aad
fiadd
cmc
hlt
loop
dec
mov
and
loope
cmp
jae
mov
jne
push
xor
out
jge
jmp
jg
lods
xchg
out
inc
popf
(bad)
enter
xor
cmp
aam
and
dec
mov
dec
dec
mov
push
add
inc
jne
mov
loopne
sub
int
cmp
push
mov
call
(bad)
inc
movs
or
(bad)
aad
loop
fdiv
jge
pop
mov
push
sub
dec
ins
dec
fwait
cmp
mov
mov
test
xchg
cmp
cli
xchg
adc
pusha
mov
(bad)
out
stos
cmp
imul
into
and
inc
faddp
in
lahf
inc
inc
xchg
and
adc
addr16
das
loop
and
repz
into
daa
nop
lock
jle
sub
aam
fnsetpm(287
adc
sub
mov
jge
mov
in
mov
dec
jmp
xor
jl
adc
addr16
mov
inc
jge
sub
call
bound
stc
outs
adc
clc
push
sbb
xchg
xchg
sub
int
cmp
or
frstor
div
scas
xchg
push
mov
or
or
ja
add
add
enter
iret
leave
hlt
les
shl
daa
(bad)
(bad)
out
outs
mov
push
dec
out
data16
jnp
js
test
mov
lods
jbe
push
cmp
jecxz
test
out
fbstp
mov
mov
lods
lahf
jb
(bad)
and
or
sub
jnp
add
stc
mov
mov
or
xchg
cmps
sbb
sub
jno
cmp
sub
cmps
cmp
mov
sar
cmps
pop
out
xchg
(bad)
lods
xchg
and
sbb
out
(bad)
or
outs
test
adc
sahf
int3
ins
sbb
jno
mov
test
mov
cmp
jnp
shl
lds
bound
sbb
cmp
mov
les
jg
cmps
and
js
inc
shl
pop
out
or
mov
push
sub
adc
rcr
and
sub
arpl
scas
dec
lock
add
adc
ret
loop
add
push
aam
add
repz
dec
sbb
adc
imul
cmp
in
ret
cmp
adc
sbb
pop
mov
pop
addr16
lods
jecxz
jmp
fwait
inc
ins
jmp
addr16
adc
lea
aam
call
xor
psrld
jg
pop
or
fist
inc
add
xchg
adc
ret
rcl
push
push
xlat
ret
adc
(bad)
in
movs
jl
and
dec
jle
ins
stos
movs
and
ror
xchg
pop
rcr
shl
out
adc
mov
lds
dec
or
xchg
adc
dec
and
(bad)
push
and
rol
pop
dec
dec
(bad)
hlt
repnz
mov
pushf
lock
push
mov
jo
int
int3
jge
dec
xor
leave
inc
xchg
xor
mov
movs
std
mov
fidivr
jnp
clc
or
(bad)
popf
lods
xchg
sbb
inc
xor
loope
shr
push
dec
dec
push
mov
xchg
jmp
mov
mov
mov
adc
and
test
cmps
loopne
mov
cmp
pusha
test
hlt
adc
stos
mov
fs
aas
xchg
not
cmc
stos
rcr
imul
and
inc
jg
gs
add
aad
outs
adc
(bad)
mov
push
mov
sbb
pop
fcompp
sbb
add
add
shr
cdq
movs
loop
sahf
mov
es
jp
outs
jl
cmp
leave
aad
xor
sub
inc
aas
jl
add
mov
fstp
ds
in
test
aam
call
jo
inc
xor
(bad)
mov
add
pop
jo
push
inc
jns
mov
push
std
rcl
push
and
scas
fbld
adc
lahf
cmp
addr16
aad
and
or
int3
mov
iret
loope
pop
mov
sub
(bad)
das
aam
xchg
in
and
xchg
cmp
mov
sbb
popf
aas
sub
outs
xor
sbb
inc
lods
push
add
sbb
xchg
out
jg
cmps
popf
pop
cld
dec
mov
adc
(bad)
mov
pop
sub
sbb
mov
loope
dec
cmp
and
or
jmp
mov
jle
xchg
and
neg
enter
push
js
out
add
rol
lock
xchg
xor
pop
sub
cmp
and
jne
ins
test
mov
pop
ror
inc
movs
xchg
mov
fdivr
push
inc
jne
ror
push
cmp
std
pushf
push
cmps
pusha
outs
retf
ins
enter
adc
jge
add
aas
sub
mov
sahf
cmp
fisubr
jmp
inc
repnz
scas
aas
ss
cdq
cmp
push
inc
stos
jb
pop
cmps
fnsave
and
xor
xchg
jno
loope
pop
and
xchg
or
push
jp
ja
mov
int
and
push
jno
adc
imul
dec
popf
mov
mov
sbb
sti
mov
out
popf
adc
addr16
enter
ds
int3
cmc
fs
arpl
mov
jl
ds
fidiv
mov
mov
sbb
inc
das
out
loop
arpl
sub
int
lahf
sub
dec
jo
data16
rol
retf
inc
fs
daa
add
jbe
fs
pop
inc
inc
xor
bound
sub
(bad)
ins
mov
call
call
dec
add
cld
repz
shl
adc
cld
je
inc
enter
int3
cmp
push
ins
retf
mov
pop
jmp
sub
ins
(bad)
shr
neg
and
inc
outs
mov
loope
push
mov
dec
or
mov
dec
dec
push
(bad)
retf
stc
xchg
cli
aas
inc
pop
aas
mov
adc
xor
xchg
or
cmp
int3
cmp
xor
mov
repnz
daa
bound
xlat
xor
xchg
inc
mov
pop
or
dec
xchg
lock
ins
movs
(bad)
mov
xchg
or
mov
cmp
ret
aad
frstpm(287
test
ins
cmp
or
dec
mov
sub
and
jg
shl
mov
(bad)
jno
addr16
mov
add
or
push
rcl
mov
pop
shl
sbb
in
and
cmp
gs
out
sub
inc
arpl
push
out
push
cmp
pop
jno
bound
push
sbb
jae
in
push
ins
push
jne
jns
sbb
stos
mov
mov
es
fs
pop
es
aam
pushf
push
das
jmp
push
stos
inc
add
jl
ret
pop
repnz
jnp
inc
dec
or
data16
ficomp
pusha
int
xchg
mov
ret
ret
xchg
test
in
adc
xor
xor
lock
rcr
push
mov
outs
cmp
cmp
pop
ja
xchg
push
fdivr
xchg
mov
inc
mov
cli
mov
jp
jbe
inc
ret
inc
inc
fisubr
fnstenv
sar
jg
aad
pop
adc
mov
cmp
fist
out
retf
pop
and
sbb
xor
mov
mov
rol
shl
pop
mov
fild
(bad)
inc
in
jb
add
xchg
icebp
test
loop
or
pop
inc
movs
fidivr
sbb
fstp
ret
cdq
fild
out
cmp
jmp
jbe
push
sub
add
push
(bad)
push
nop
sub
add
outs
mov
xor
imul
and
popa
push
inc
sbb
in
or
jb
xchg
sbb
rol
add
aaa
pop
cmp
je
sbb
ja
lea
mov
mov
adc
cdq
shl
ins
sbb
inc
cmp
addr16
lock
or
adc
repz
push
adc
lds
clc
scas
mov
sar
loope
mov
mov
daa
sbb
lods
repz
and
xor
pusha
test
inc
pop
mov
bound
jge
data16
adc
sar
jmp
dec
fld
ja
ins
jmp
out
repnz
out
enter
shl
jo
call
out
mov
and
sar
pop
cdq
in
fistp
mov
loop
cmps
fcmovnb
or
pop
fxch
(bad)
pop
fisubr
mov
das
lock
mov
sub
test
iret
xor
sahf
(bad)
inc
js
cli
bound
xor
aaa
jnp
pop
adc
cvtpi2ps
adc
loopne
adc
adc
out
loop
sub
lds
movs
cmp
inc
add
shl
cmp
pop
jnp
sub
movs
ficomp
xchg
mov
pop
retf
(bad)
mov
mov
iret
add
inc
mov
jecxz
js
stos
mov
pop
test
imul
ins
test
push
cwde
pop
stc
inc
push
das
stos
ja
pop
sar
dec
mov
push
dec
cs
hlt
ficom
push
and
mov
dec
xchg
test
sti
icebp
or
nop
jle
shl
sbb
pop
ficomp
enter
mov
adc
fiadd
aaa
mov
push
or
jg
stc
pop
jg
xchg
ret
out
push
dec
fisubr
lea
int3
icebp
and
dec
cmp
in
jle
popa
arpl
in
cmp
mov
test
adc
into
mov
ins
dec
push
jg
push
xchg
cmp
jb
ja
add
xor
rol
pop
dec
cdq
jae
icebp
mov
jle
push
cmps
push
xor
iret
fisub
sbb
fcom
mov
popa
sahf
pop
mov
inc
pop
cmps
and
movs
push
div
jmp
adc
sbb
inc
lahf
mov
mov
add
pop
push
pop
jge
xor
and
sti
jl
test
inc
fsubr
adc
add
movs
fisub
cli
jmp
xor
sbb
adc
movs
xchg
sub
out
jo
addr16
add
and
jo
repnz
and
jb
cmp
add
jnp
sbb
neg
cmc
and
sub
stos
pop
push
xor
cmps
in
push
push
xchg
jl
call
or
shr
xchg
jmp
popa
not
stos
sbb
enter
sbb
movs
mov
aaa
mov
nop
lock
or
lahf
enter
xor
jne
inc
adc
es
out
and
jb
mov
mov
das
mov
stos
loop
and
ss
mov
and
inc
push
cmps
stos
or
add
mov
or
jae
jecxz
push
add
ret
sbb
ret
xchg
fmul
out
pop
fnsave
cmp
xchg
arpl
mov
xor
adc
jne
push
dec
mov
mov
outs
dec
bound
push
daa
sti
retf
xor
bound
inc
movs
lods
adc
sub
sub
xchg
pushf
add
xchg
or
xchg
(bad)
sub
xchg
repnz
rol
or
(bad)
scas
les
cwde
stos
xlat
mov
xchg
hlt
in
iret
adc
xchg
adc
xchg
jbe
or
cdq
pop
push
add
test
jne
test
rcr
jns
jg
femms
retf
dec
pop
fwait
cmp
jne
inc
daa
jnp
xor
add
test
mov
push
pop
nop
outs
cmc
sub
cli
ds
ins
outs
ins
outs
inc
xchg
push
pop
enter
sti
xchg
pop
mov
stos
push
sub
hlt
lods
sub
cdq
jecxz
jl
adc
jne
xchg
xchg
push
sahf
mov
test
cld
aas
add
sbb
dec
cdq
cmc
ror
fadd
pop
out
aas
inc
stc
lds
add
je
enter
repnz
sub
(bad)
pop
pop
fucom
push
scas
cs
stos
stos
sbb
dec
aam
jge
mov
xor
xchg
cmp
cdq
cmp
push
cs
add
fisttp
push
mov
movs
adc
jbe
sub
(bad)
xor
push
mov
jmp
pop
inc
push
nop
or
gs
xchg
push
xchg
add
push
mov
imul
pop
sub
(bad)
dec
jb
inc
dec
repz
cli
leave
lods
pop
les
sbb
jg
jge
xchg
add
sub
lea
push
aad
push
mov
jb
adc
test
jl
gs
je
jae
cmp
shl
mov
(bad)
jb
addr16
push
add
mov
mov
repnz
mov
pop
sub
and
or
mov
(bad)
push
adc
shr
push
jmp
cs
adc
mov
xchg
lea
mov
enter
jne
pop
mov
ficom
xor
sahf
mov
push
add
cmp
stc
and
pusha
cmps
adc
and
xlat
jp
ja
div
gs
or
mov
imul
repz
xchg
out
loop
enter
(bad)
xchg
fimul
data16
jbe
test
ror
call
xchg
out
(bad)
xor
retf
inc
adc
jbe
dec
sbb
mov
cmp
inc
lods
pop
int
clc
and
sbb
js
cmp
pop
call
leave
push
pop
popa
imul
mov
rol
inc
mov
push
add
lock
clc
push
cmps
jle
push
scas
jo
sub
lods
frndint
adc
pop
retf
jecxz
fdivr
leave
mov
push
mov
and
cmp
push
ror
inc
push
stos
ins
test
clc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
call
add
jg
sub
push
rcl
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
inc
sbb
fwait
ins
fwait
retf
jbe
arpl
mov
fstp
jns
fnstenv
jo
div
mov
add
xchg
xor
hlt
(bad)
iret
(bad)
into
idiv
jl
ror
xchg
add
das
xor
add
ja
jno
(bad)
xor
je
mov
and
mov
push
push
icebp
jae
(bad)
push
push
ins
adc
dec
lock
jne
aad
aas
mov
cmc
cs
jo
xchg
out
mov
mov
retf
add
test
fsubr
loop
fwait
call
push
popa
retf
cdq
inc
mov
push
mov
das
inc
pop
es
pop
dec
add
sub
xor
pop
push
cwde
mov
xor
ror
adc
sub
fwait
xor
mov
sbb
sub
std
xchg
inc
and
mov
cld
sahf
retf
pop
inc
jl
and
shl
add
ffree
add
cld
push
mov
or
cdq
rcr
(bad)
fs
sbb
xor
dec
sti
jmp
rcl
dec
mov
push
pop
aad
mov
sbb
popf
xchg
(bad)
xor
in
cmps
frstor
cmp
je
gs
or
fcmovnu
cdq
loopne
jno
sti
movnti
pop
je
or
std
dec
test
(bad)
mov
pop
test
pop
mov
adc
mov
std
and
and
(bad)
cli
scas
retf
aad
loope
mov
out
aad
mov
jne
inc
in
cmp
into
add
fldcw
dec
mov
and
or
lods
stos
pop
hlt
ret
mov
cld
test
sbb
mov
dec
retf
xchg
test
mov
loop
push
pop
push
movs
imul
pop
mov
sbb
inc
mov
inc
mov
nop
out
jae
retf
mov
jle
mov
cmp
fdivr
mov
cdq
and
add
pop
jnp
jg
aad
push
push
mov
idiv
push
push
and
inc
mov
mov
retf
add
push
jbe
imul
lahf
pop
lock
dec
imul
jnp
and
cs
or
(bad)
lock
pop
loope
(bad)
add
cmps
retf
rol
test
jb
xchg
adc
push
jno
arpl
and
push
in
int
add
into
dec
ficomp
add
shl
lahf
pop
mov
daa
lock
sbb
mov
mov
loope
sbb
int
add
cwde
or
(bad)
push
dec
(bad)
fdivr
adc
cmp
cvtpi2ps
movs
sbb
movs
cmp
(bad)
(bad)
stos
in
cmp
push
push
nop
mov
pop
mov
push
dec
pop
sbb
div
test
out
fwait
adc
pop
mov
add
icebp
movs
addr16
jecxz
hlt
xlat
test
repnz
stos
repz
sti
sub
inc
fldenv
(bad)
cdq
stos
pusha
or
outs
shr
cmp
mov
scas
add
sub
jne
sbb
and
cmp
push
mov
lods
ret
pop
xlat
inc
fst
mov
dec
inc
xchg
cwde
ja
or
pop
(bad)
aaa
js
bound
xchg
xor
cmp
jmp
and
or
sub
pop
iret
pop
stc
xor
test
xor
xchg
fmul
les
fcomp
sbb
out
and
jge
fnstcw
inc
scas
xor
or
adc
mov
stc
in
in
adc
in
je
cmp
dec
call
pop
imul
mov
scas
les
lds
inc
and
jmp
fnstenv
add
mov
call
int
xchg
push
cmp
cmp
popa
sbb
mov
out
mov
inc
xchg
movs
xchg
jno
push
push
out
xor
jo
out
rcl
movs
mov
or
retf
adc
inc
cmp
test
pop
jmp
jae
ret
daa
add
stos
and
push
sub
lods
sbb
sbb
dec
leave
sub
and
and
xor
in
into
pop
pop
jns
jmp
xchg
sahf
xor
inc
inc
test
int
push
sar
mov
mov
aam
adc
xor
gs
ret
lock
sub
test
pop
adc
mov
sbb
nop
lods
daa
ja
xor
push
(bad)
(bad)
lods
imul
data16
jne
xlat
popa
cwde
xchg
pop
out
movs
inc
inc
shl
sub
es
xchg
sub
jl
sub
in
js
pop
pusha
xchg
movs
mov
sbb
dec
mov
addr16
xor
loopne
jne
xchg
jnp
dec
clc
xchg
pop
mov
push
add
inc
mov
out
adc
cmc
shr
jg
mov
cmps
pop
pop
sub
xchg
ins
inc
sbb
jl
neg
xchg
mov
scas
js
in
mov
xchg
pop
stos
and
outs
cmc
dec
daa
ds
cld
arpl
sar
hlt
pop
mul
movs
xor
nop
mov
jge
repz
xchg
sbb
cmps
cmc
jo
jns
clc
pop
dec
add
pop
in
cmps
int
enter
cmp
in
and
jmp
movs
pop
push
jo
xchg
mov
jl
clc
mov
pop
out
push
imul
scas
pop
or
xor
(bad)
cmps
jle
imul
xor
das
movs
dec
stos
out
pushf
xor
aas
push
sub
sahf
push
or
mov
arpl
and
push
pop
sub
xor
out
xchg
and
push
out
out
sahf
cmps
cwde
test
xchg
sbb
pop
push
jb
in
(bad)
push
je
xchg
loopne
mov
xlat
(bad)
mov
push
sbb
retf
inc
das
push
inc
out
mov
fxch
dec
mov
std
mov
movs
fsubr
xor
pop
jo
mov
movs
and
mov
mov
retf
lods
inc
mov
cmp
dec
jecxz
jo
shl
outs
jecxz
call
rcr
fsubr
pop
out
xor
je
stc
push
jg
sbb
jmp
adc
pop
xor
mov
and
xchg
rcr
push
test
adc
jl
das
and
outs
retf
int3
in
dec
out
cmp
repnz
jb
pusha
push
(bad)
or
aam
xor
arpl
mov
pop
es
sub
in
test
sub
scas
repz
add
pop
push
pop
iret
jns
add
jl
mov
retf
jo
pop
(bad)
je
shl
fcomp
push
xchg
clc
mov
dec
stc
push
and
mov
iret
sub
xchg
rcl
dec
in
mov
ds
xchg
add
test
(bad)
push
jnp
iret
test
sub
xlat
jno
(bad)
xchg
sti
in
pop
bound
jne
dec
cli
lahf
pop
js
jge
fld
lds
ins
adc
fsubr
dec
jne
push
repz
sbb
pop
aaa
ret
inc
add
lock
cmp
ret
add
cdq
cld
push
mov
hlt
xor
push
test
int
in
add
icebp
mov
or
inc
sahf
mov
repz
cmp
xor
push
int
cmp
dec
cld
fwait
and
mov
les
ins
mov
cld
and
jg
aaa
pop
jo
ins
popa
and
popa
dec
xchg
jbe
lods
fstp
leave
sub
gs
dec
movs
aas
mov
mov
je
jae
jb
ror
iret
inc
or
sub
mov
adc
mov
cld
fstp
mov
pop
dec
ja
leave
adc
imul
push
pop
adc
add
in
xor
or
push
lock
and
jmp
or
add
rol
push
enter
push
neg
cdq
lea
and
out
sbb
jge
imul
xchg
sub
jp
je
icebp
hlt
push
dec
mov
push
jecxz
loope
dec
adc
dec
and
push
fs
retf
pop
scas
pop
mov
movs
pop
xor
or
les
stc
cli
xchg
mov
test
sub
cwde
adc
jb
xor
jmp
or
or
test
mov
mov
ins
cmp
push
dec
inc
cwde
fdiv
lods
cmp
xchg
mov
test
ja
inc
in
sbb
add
lea
mov
movs
jg
(bad)
and
or
fistp
and
add
lods
jb
sti
jb
enter
(bad)
scas
push
imul
mov
mov
addr16
or
js
int
scas
jno
cwde
add
pandn
int3
jnp
jbe
fnsave
sub
pusha
int
push
aaa
into
int3
arpl
xchg
sbb
repz
xor
aam
xor
cs
and
sbb
dec
or
and
in
bound
mov
cld
in
scas
mov
out
mov
sub
out
pop
adc
push
bound
daa
sub
mov
mov
push
aam
sbb
push
je
(bad)
mov
jle
out
xor
mov
sti
mov
dec
rcl
mov
or
jae
pop
mov
or
test
fwait
ins
test
push
add
lods
lds
test
push
sbb
fild
scas
nop
test
cmp
sub
js
xor
hlt
mov
cmp
ror
pop
push
fisub
dec
fldcw
test
stc
push
pop
jnp
imul
stos
neg
fwait
push
mul
adc
jo
mov
je
int3
xlat
jne
out
dec
call
mov
cmc
cmc
scas
push
add
test
inc
nop
dec
push
mov
ror
jbe
mov
add
or
fwait
and
rcl
js
dec
pop
mov
not
mov
iret
icebp
xor
movs
stos
stos
lock
pop
add
pushf
xchg
push
pop
sbb
and
mov
adc
movs
in
mov
out
imul
mov
add
inc
clc
mov
mov
pop
xlat
lea
mov
push
aas
xchg
or
adc
push
cld
loop
fidiv
shr
and
cdq
xchg
push
out
inc
(bad)
imul
ror
rcl
xor
dec
dec
adc
inc
jae
mov
iret
jp
jne
jle
(bad)
xor
mov
test
dec
push
enter
lahf
push
jnp
add
clc
pushf
mov
fcmovne
loopne
mov
or
in
jbe
push
cld
or
stc
jnp
add
jo
or
stos
xchg
enter
jns
(bad)
out
cli
movs
add
aad
dec
outs
and
in
dec
jl
and
nop
xchg
pop
ins
push
fdiv
push
push
cmp
sub
mov
ret
xchg
sbb
jne
test
mov
test
scas
add
push
icebp
xchg
ret
fisttp
adc
les
cmp
mov
popf
mov
mov
dec
out
jmp
lods
push
shr
daa
inc
lods
inc
loopne
int3
aam
(bad)
aad
cli
mov
add
sbb
push
mov
add
fwait
int3
outs
push
jno
repz
hlt
test
ins
sbb
xchg
mov
(bad)
mov
in
pop
sahf
jbe
aam
ret
mov
and
xlat
xor
ins
fidiv
mov
in
adc
aaa
or
stc
add
ret
ja
adc
fild
clc
jnp
cmc
inc
jmp
aaa
and
push
fidiv
out
mov
mov
cmp
push
sbb
pop
(bad)
out
daa
loop
inc
mov
scas
jge
mov
idiv
sub
sahf
push
adc
mov
cmp
inc
pop
imul
leave
push
lock
and
pushf
pop
adc
or
mov
cli
fwait
je
dec
pop
add
mov
iret
xchg
sub
xchg
fnstenv
rcr
repz
xchg
addr16
sti
sbb
or
ret
push
jo
popa
jl
jns
jmp
add
retf
lds
fnsave
outs
adc
inc
push
int
fcmove
mov
pop
cmp
pop
gs
fcom
or
xor
mov
jge
fisubr
(bad)
add
sbb
in
cmc
mov
jns
movs
mov
gs
mov
rcr
xchg
out
pop
push
outs
das
adc
aaa
mov
sub
into
imul
repnz
cwde
mov
loop
pop
pop
jg
mov
cli
xchg
adc
jmp
cmp
ja
sbb
mov
mov
jle
push
imul
xchg
les
outs
mov
jle
retf
jo
cli
popf
pushf
cdq
int3
cmp
fnsave
push
mov
push
cmps
pushf
dec
mov
mov
test
adc
dec
inc
jno
or
out
ficomp
call
mov
inc
mov
sub
ins
and
add
mov
leave
mov
xchg
iret
(bad)
aam
mov
stos
mov
jo
or
mov
cs
out
xchg
sbb
aad
lea
lds
push
pop
mov
retf
popa
pop
repz
in
adc
push
popf
std
mov
jbe
lahf
and
jmp
mov
js
test
(bad)
outs
add
test
inc
add
popa
mov
loope
jp
jge
in
mov
lods
data16
xchg
movs
ficom
mov
arpl
ss
iretw
shl
aas
(bad)
into
imul
out
xor
or
sar
fldcw
fisttp
call
lock
sti
jbe
cmp
xchg
adc
out
out
sbb
stos
fidivr
mov
enter
xor
ret
cs
adc
push
cmc
push
cmps
sti
mov
movs
cmp
mov
pop
stc
retf
frstor
lods
fs
push
or
popa
and
cmp
mov
dec
xchg
add
sahf
add
rcl
mov
xor
dec
cmc
retf
es
mov
ds
(bad)
leave
mov
mov
xchg
sti
cmp
in
pushf
push
sub
cmps
jle
mov
ficomp
and
in
lock
loopne
xor
xor
adc
jecxz
sub
sub
sbb
jl
jae
into
jge
push
jge
dec
cmp
push
cdq
in
fs
(bad)
adc
jle
and
rcl
popf
in
repnz
out
cmp
fld
add
std
or
push
mov
mov
sbb
xchg
mov
cdq
outs
jle
mov
(bad)
icebp
or
inc
out
sbb
xchg
adc
inc
icebp
adc
sbb
xchg
test
mov
xchg
cld
and
pop
dec
cmp
mov
and
int3
dec
in
enter
dec
dec
dec
mov
dec
aas
jo
add
xchg
push
inc
test
jl
pop
pop
call
test
xchg
hlt
pop
or
das
jo
fdiv
xchg
movs
jne
jbe
test
sbb
scas
cmp
xor
push
pushf
jmp
rol
mov
(bad)
out
iret
adc
repnz
dec
add
pop
addr16
pop
cmps
stos
cli
mov
jecxz
mov
pop
int
rcr
sti
stos
inc
sbb
imul
xor
ret
(bad)
mov
into
cmp
lods
rcr
mov
stos
pop
call
loop
xor
pop
mov
test
sti
push
repz
jo
aas
leave
sub
cmp
nop
push
xor
ror
iret
inc
(bad)
scas
mov
out
mov
jmp
lods
or
int3
iret
push
inc
cmp
adc
dec
mov
(bad)
cmp
push
pop
fs
or
jne
cli
fistp
adc
push
xchg
out
mov
ja
loope
push
and
leave
test
cwde
loopne
cmp
mov
add
and
mov
or
inc
or
mov
add
iret
adc
sub
dec
mov
jmp
inc
mov
jno
and
add
ret
mov
aad
cwde
repz
pop
push
cld
xor
ja
lock
dec
jl
inc
pushf
fcomp
mov
inc
stos
cmp
pop
aas
sbb
fidivr
cmps
popa
daa
xchg
inc
out
data16
cld
stos
retf
or
xor
aam
dec
mov
fidiv
sbb
neg
popf
pop
mov
out
push
ret
shl
inc
and
pop
out
mov
fisubr
push
call
jle
sbb
xchg
lahf
fwait
xchg
xor
pop
xchg
or
sbb
jne
pop
stc
pop
(bad)
or
jge
lds
push
pushf
in
loop
xchg
or
xchg
test
adc
scas
sub
xchg
mov
cmps
mov
xchg
add
sub
ss
nop
dec
pop
cmp
push
stos
jecxz
push
repnz
adc
or
les
repnz
scas
push
mov
or
jmp
cmovne
sbb
mov
and
or
mov
sar
pop
fistp
pusha
retf
test
adc
sub
pop
out
add
out
lahf
scas
nop
int3
mov
xor
clc
sti
pushf
pop
jbe
inc
mov
mov
add
xor
push
inc
mov
ret
sar
in
push
inc
push
pop
adc
ss
jbe
loopne
sti
push
sub
xor
xchg
leave
(bad)
in
imul
int
add
pop
mov
pop
lods
jl
and
cmp
sbb
loop
das
adc
jp
xlat
add
jno
inc
push
sub
outs
inc
dec
and
cld
mov
gs
mov
xchg
imul
xchg
adc
retf
(bad)
fnstsw
mov
dec
xchg
adc
mov
imul
xor
mov
std
in
inc
mov
sbb
fcom
mov
test
in
out
or
pop
retf
add
les
fistp
adc
in
aam
repnz
inc
loop
shl
xchg
gs
enter
or
jmp
nop
add
and
out
aad
mov
or
icebp
stc
cwde
bnd
fist
fdiv
and
add
and
pop
jle
jnp
mov
mov
jb
ret
push
aas
mov
inc
mov
pop
inc
mov
xchg
adc
inc
scas
in
mov
mov
addr16
out
sahf
cmp
adc
mov
stos
pop
jno
inc
xor
add
mov
mov
push
sub
mov
or
mov
(bad)
mov
stc
mov
rcr
ret
fdivrp
out
xor
dec
pop
paddb
or
or
out
xchg
cmps
mov
sbb
clc
cmc
mov
aad
enter
pop
lea
stos
sub
outs
aaa
aaa
fistp
mov
add
pushf
xor
sbb
inc
dec
rol
and
int3
jg
xor
adc
push
jnp
push
sub
add
inc
stc
jns
cs
mov
adc
pop
adc
adc
or
sbb
psubsw
(bad)
clc
push
xor
mov
fcmove
mov
(bad)
xor
xor
cmps
std
sub
inc
std
xchg
fdiv
shl
push
ss
retf
fisub
out
call
leave
(bad)
or
cmp
add
lods
pop
or
(bad)
fild
mov
sti
cli
scas
ss
imul
add
fld
pushf
scas
ffree
xchg
leave
jg
xor
retf
nop
rcl
popa
mov
repnz
xor
add
retf
or
stc
fdiv
repnz
fmul
pop
sbb
jae
shl
movs
cdq
inc
movs
and
cmc
in
pushw
iret
dec
mov
mov
mov
xlat
dec
into
adc
repnz
sub
rol
scas
mov
scas
fild
add
mov
jecxz
and
cmp
je
data16
dec
inc
and
jmp
adc
je
stos
cld
lds
add
jp
ss
inc
mov
retf
out
rcr
lock
sub
xchg
ss
adc
repnz
xchg
push
adc
pop
cs
rcl
sbb
(bad)
or
push
push
mov
ja
aam
mov
rcl
or
pop
loopne
and
or
inc
push
sbb
(bad)
push
out
daa
popf
mov
mov
or
sbb
enter
pop
mov
pop
popa
push
int3
fldcw
into
adc
sub
(bad)
gs
inc
push
outs
outs
mov
call
invd
aaa
icebp
lahf
fisub
addr16
icebp
push
pop
mov
pop
cdq
push
push
mov
push
pop
test
add
loop
jp
xchg
lods
imul
test
xchg
cmp
pop
mov
test
int
dec
sub
pop
jmp
je
sbb
mov
sub
mov
mov
pop
xor
jbe
push
popa
bound
pop
jns
test
mov
pop
icebp
mov
loopne
push
movs
retf
jae
les
sub
push
add
in
xor
sbb
inc
cli
ret
ins
out
mov
retf
xor
clc
xlat
and
lock
push
sub
mov
inc
cmp
imul
or
iret
outs
or
xor
cmps
cmp
je
mov
push
sub
inc
mov
scas
pop
stc
pop
adc
push
mov
mov
bound
adc
(bad)
lock
je
jg
mov
adc
in
or
and
or
and
fs
mov
pop
mov
cwde
add
sbb
jae
mov
imul
or
outs
jmp
add
cmp
sbb
xor
push
pop
lea
les
cld
mov
push
cmp
adc
ins
or
mov
scas
fst
in
mov
push
jl
mov
pop
pop
xor
lds
add
mov
rol
push
fs
dec
ret
das
push
loope
and
cmovae
and
push
lock
shr
push
sub
sub
sti
push
mov
xchg
jbe
dec
mov
clc
leave
pop
fstp
imul
xor
enter
sbb
or
xchg
bound
in
fcom
mov
inc
add
jge
sti
xor
in
cmp
xchg
fadd
test
ja
movs
loope
inc
lods
in
jne
sbb
dec
jg
jae
jg
mov
pop
jle
in
dec
pop
addr16
and
lock
cli
push
jo
mov
mov
sub
ins
adc
cmc
(bad)
mov
lock
fbld
stos
stos
mov
cwde
ss
cs
mov
das
imul
mov
cmp
idiv
test
dec
(bad)
(bad)
mov
fsubr
push
mov
scas
retf
lea
cmp
aas
shl
fisub
scas
repz
xchg
daa
sub
fcom
sub
mov
arpl
mov
cmp
cmps
xchg
paddw
pop
pop
lods
xor
inc
mov
rcl
sbb
mov
xchg
push
sub
adc
xchg
sbb
sub
jecxz
xchg
add
in
jbe
mov
rcl
ret
pop
mov
addr16
not
cmps
pop
or
or
mov
mov
(bad)
arpl
adc
mov
retf
daa
das
daa
(bad)
and
test
in
sbb
add
iret
inc
pop
cmps
add
mov
sahf
vmovaps
loope
jns
xor
xchg
mov
inc
sahf
(bad)
mov
or
and
xchg
pop
cmp
lods
cmc
dec
retf
(bad)
add
dec
ss
imul
inc
sub
push
push
test
push
pop
inc
imul
mov
or
scas
xchg
iret
xchg
cdq
bound
popf
mov
cmc
or
xchg
call
cmps
mov
xchg
cmp
ins
lds
int3
pop
movs
cwde
in
std
mov
(bad)
hlt
pushf
sub
lea
mov
xor
xchg
add
addr16
xchg
sbb
cdq
add
add
fdivr
push
hlt
sub
xchg
lahf
dec
push
imul
inc
das
mov
imul
call
sbb
fidiv
xchg
aas
out
and
pop
fwait
shr
sti
ss
arpl
cmp
mov
out
sub
xor
retf
ss
cli
mov
sbb
aad
add
cmp
ficom
jbe
push
out
adc
xchg
(bad)
cmc
mov
and
adc
push
sub
jmp
cs
mov
popa
mov
test
cdq
rcr
or
das
in
push
add
mov
dec
pop
sti
nop
rcr
int3
fisttp
xchg
push
leave
scas
into
sti
push
out
jae
repz
jecxz
dec
gs
aas
movs
in
or
pusha
adc
(bad)
hlt
ret
xchg
jmp
inc
and
or
add
fistp
dec
fimul
pop
xchg
adc
push
xor
daa
lahf
push
lods
and
retf
sbb
jne
mov
xchg
push
xchg
repnz
ss
add
cmp
mov
fiadd
outs
jmp
fstp
popa
jo
and
adc
xchg
add
push
push
ret
pop
shl
push
inc
js
xor
out
mov
je
leave
add
inc
sub
pop
inc
rcr
xor
xchg
jns
xor
ss
cmc
jae
dec
inc
test
dec
cmps
jmp
fsubr
xchg
jo
inc
and
(bad)
pop
sub
out
push
sub
xor
call
mov
push
cld
or
mov
cmp
sbb
ins
xchg
jae
jl
rcl
in
call
fisub
xor
xor
mov
mov
or
sub
cmp
add
pop
or
addr16
retf
jl
js
js
inc
dec
ror
loopne
in
aaa
(bad)
ret
out
pop
jle
es
push
or
call
es
ret
dec
aam
stc
jne
ja
scas
cmp
inc
(bad)
mov
pop
stos
aas
pop
mov
jge
and
pop
or
jg
add
ret
jle
dec
add
repz
xchg
popf
jge
test
(bad)
fcmovu
outs
ror
mov
in
cdq
inc
or
js
hlt
sbb
in
sahf
jge
popa
xchg
sbb
xchg
out
mov
lahf
rol
jnp
pop
inc
sub
pop
and
sar
sub
inc
dec
je
lods
sti
cdq
imul
jno
in
cmps
jae
test
out
or
jmp
enter
out
daa
shl
sub
or
push
mov
mov
addr16
repnz
sub
and
call
pop
imul
add
jb
imul
sbb
jno
push
addr16
out
xor
int
lods
rol
mov
xchg
add
cmps
sub
call
add
cld
mov
cmp
jg
xchg
inc
cmp
inc
stos
sysenter
dec
call
dec
xchg
sub
clc
cld
icebp
and
(bad)
leave
xchg
xor
mov
iret
push
cwde
inc
adc
mov
mov
dec
sub
mov
mov
movs
hlt
mov
or
and
iret
xor
or
push
fs
sbb
mov
cmp
xchg
nop
push
int
jmp
add
jp
es
jg
xchg
das
pop
xor
fnstcw
(bad)
in
sub
cwde
(bad)
xchg
push
scas
cmp
dec
(bad)
out
ret
shl
and
mov
jmp
mov
push
cmp
xchg
enter
xor
sub
inc
mov
fwait
mov
adc
add
scas
mov
push
ins
xchg
mov
mov
cmp
push
sbb
push
stos
daa
pop
es
xchg
aam
out
or
dec
test
imul
dec
pop
dec
push
call
sub
and
or
enter
pushf
or
not
out
cld
add
or
sbb
cmps
cs
xchg
lahf
push
xchg
sub
adc
lahf
mov
ss
mov
out
movs
push
or
sbb
ds
cmp
(bad)
cmc
mov
(bad)
mov
scas
stos
lods
jb
les
jle
les
leave
mov
cmp
mov
cdq
fidiv
mov
sbb
sub
dec
les
or
xor
ins
out
movs
pop
push
jle
sbb
xchg
and
sar
pop
(bad)
add
add
test
mov
pop
bound
dec
pop
ins
out
out
inc
inc
jmp
ret
mov
sbb
mov
mov
inc
and
fstp
mov
add
je
(bad)
mov
push
mov
(bad)
out
repz
mov
jge
int3
scas
mov
or
mov
mov
or
and
pop
xor
in
pop
call
adc
xchg
test
iret
cs
test
fsubr
outs
gs
mov
sub
bound
inc
fwait
mov
jae
scas
daa
pop
cmps
xchg
dec
(bad)
call
fisub
mov
outs
imul
dec
mov
out
cmp
sub
enter
outs
inc
cmp
mov
pop
aad
push
mov
sub
loope
shl
jbe
int
fisub
inc
cmp
dec
pop
xchg
test
xor
enter
sbb
adc
popf
jmp
lock
mov
leave
imul
mov
dec
pop
xchg
or
outs
push
cmp
pop
cmp
and
sahf
and
sahf
arpl
push
aaa
jge
ja
mov
xor
scas
or
ret
mov
adc
sbb
jne
cmc
pop
(bad)
(bad)
adc
mov
cmp
xor
sahf
addr16
scas
clc
shl
mov
xor
mov
pop
aaa
jmp
loop
hlt
icebp
repz
pop
add
pushf
test
fmul
sub
mov
(bad)
fnstsw
sti
mov
lock
jmp
cs
in
jecxz
jle
je
arpl
ds
inc
jmp
jns
shl
pop
and
or
cmp
xor
(bad)
das
sti
xchg
int
ds
jmp
add
(bad)
fadd
jg
mov
and
cmp
pop
movs
iret
pop
rcr
pop
xchg
clc
jae
sub
cmp
mov
cmp
inc
inc
jge
push
fcmovnu
movs
(bad)
lds
dec
aad
push
xor
stc
jmp
xchg
xor
xor
aas
cld
mov
xor
(bad)
(bad)
fidivr
shrd
dec
and
lahf
jge
mov
mov
add
cdq
pop
fdiv
cmp
ret
aam
add
test
in
ins
push
ja
ficomp
add
xchg
inc
and
add
cmp
ds
mov
(bad)
pop
fsubp
hlt
add
ds
add
mov
aas
xor
pop
lock
retf
xor
push
sub
mov
mov
xchg
xchg
and
(bad)
xor
mov
test
fldenv
cs
pusha
(bad)
leave
out
add
and
xor
cmc
jp
rol
jnp
dec
pop
loop
xchg
jnp
into
aaa
pushf
inc
pop
lods
out
dec
add
ins
add
xchg
data16
mov
packsswb
imul
int
add
outs
push
sbb
and
shl
sub
xchg
lods
out
ret
mul
sti
xchg
push
sti
addr16
mov
push
cmps
pop
shr
or
dec
jnp
cmp
pop
pop
in
xor
or
dec
push
hlt
mov
rol
movs
add
nop
jne
xchg
push
hlt
es
test
shl
xor
mov
popa
inc
and
cwde
cmp
test
movs
and
imul
cdq
shl
adc
(bad)
scas
xor
and
cmp
leave
ins
test
test
inc
fnstsw
repz
adc
sub
dec
call
add
sti
jl
ficomp
outs
shl
cmc
add
mov
or
sub
test
test
icebp
sub
push
sbb
ds
xchg
ins
js
xor
test
xchg
aaa
push
xchg
and
icebp
repnz
mov
adc
and
xchg
xchg
fld
or
sub
mov
inc
icebp
movsx
fs
mov
pop
ss
data16
leave
fidiv
cmp
xor
sti
addr16
nop
ror
sbb
or
mov
jge
loopne
mov
jl
test
das
or
mov
frstpm(287
mov
xchg
mov
cli
push
mov
loope
dec
or
arpl
and
or
gs
cmps
out
daa
adc
(bad)
shl
or
jo
xchg
and
lds
stc
pop
sbb
push
sub
lods
mov
jp
enter
push
jmp
rol
shl
and
lods
retf
cwde
jg
jle
xor
ss
cmp
cmp
sbb
mov
mov
or
dec
scas
and
jecxz
or
jecxz
xor
imul
lods
xor
cmp
stos
outs
inc
sub
sti
mov
addr16
mov
cmp
fsubr
push
jle
clc
sub
fadd
jns
xor
cmps
mov
jmp
sub
lods
jno
mov
push
mov
pop
push
jnp
xchg
mov
rcl
push
aas
pop
fwait
es
inc
in
gs
pusha
addr16
div
jle
ins
jns
data16
mov
sub
mul
das
xchg
inc
sahf
movs
addr16
jp
popf
xchg
pop
push
ret
mov
lods
retf
retf
movs
push
adc
sbb
fisub
outs
mov
jae
cmc
or
push
ret
cli
loop
call
(bad)
sar
add
adc
out
jae
push
dec
and
inc
cmp
mov
nop
and
jns
add
or
stos
(bad)
aad
fstp
push
shl
fistp
out
mov
shl
add
in
inc
xchg
inc
nop
jecxz
jmp
leave
rcr
sub
in
mov
inc
shr
call
push
(bad)
lahf
dec
push
(bad)
je
mov
outs
fnsave
sub
jbe
jae
or
loop
arpl
ret
and
ins
in
test
outs
xchg
sub
add
mov
sub
dec
mov
adc
fidivr
popa
cs
enter
pop
cmps
sub
sbb
mov
mov
cli
push
out
stos
fwait
sar
adc
sub
xchg
adc
sbb
in
add
mov
into
call
test
test
sar
mov
cli
popf
shr
outs
add
xchg
xor
cdq
sti
ss
xor
lahf
mov
popf
xor
mov
pop
and
pop
ja
es
iret
imul
je
js
and
test
in
xor
mov
scas
shl
push
pop
mov
cmp
push
inc
mov
iret
adc
cmp
cli
aaa
mov
push
shr
cmp
arpl
mov
test
out
jl
es
add
mov
push
pop
jnp
test
fldenv
rcr
mov
sbb
and
mov
mov
pop
stos
lods
dec
into
mul
test
sub
or
inc
stc
adc
or
mov
rol
dec
or
addr16
xor
aad
pop
mov
jp
mov
imul
gs
out
xor
jl
xchg
xchg
clc
sahf
jne
push
cmps
not
lea
pop
xor
mov
push
cli
stos
cmp
push
push
push
mov
test
pop
inc
pop
outs
push
dec
adc
js
xchg
inc
add
or
jae
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
mov
inc
push
xlat
ret
jns
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
inc
sbb
fwait
jns
mov
fcmovne
mov
jae
mov
(bad)
in
xlat
jmp
add
xor
mov
mov
popf
xor
test
das
add
mov
sbb
test
rcl
xor
or
mov
sub
mov
add
les
jbe
add
sbb
xchg
in
cmp
push
jnp
push
sti
ss
fdivp
jbe
nop
adc
test
ins
cdq
sbb
gs
stos
xor
mov
sbb
sbb
adc
xor
fisttp
xchg
xlat
test
arpl
sbb
popa
pusha
sub
inc
(bad)
int
fmul
inc
test
sub
lea
out
push
jmp
adc
push
add
add
pop
cmc
and
movs
fisubr
cmp
popf
mov
lahf
aas
shl
ficom
scas
pop
scas
xchg
mov
inc
mov
movs
std
push
pop
xchg
in
jne
pop
sbb
daa
daa
imul
cdq
inc
inc
mov
ds
add
push
out
jmp
inc
ds
pushf
inc
je
cld
repnz
das
stos
dec
jle
mov
mov
div
cmp
outs
daa
xor
fs
popa
mov
enter
leave
das
sbb
jg
loope
scas
imul
sub
xor
lods
add
call
(bad)
sbb
lahf
shl
sub
sub
aaa
rcl
push
shr
lods
(bad)
xlat
stc
ret
xchg
ret
mul
sbb
and
pop
push
xlat
cs
cwde
push
shl
sub
imul
and
stc
js
(bad)
leave
stos
aam
push
int3
xor
mov
pop
sub
sbb
mov
add
dec
xor
adc
push
cmp
aad
outs
jl
loop
test
xor
data16
cmp
loop
pop
dec
mov
xchg
or
outs
sbb
sbb
in
(bad)
(bad)
pushf
or
adc
in
dec
sub
xchg
dec
or
mov
inc
mov
adc
mov
fwait
nop
hlt
fcomp
movzx
fwait
or
jb
sbb
es
mov
mov
inc
inc
in
sahf
jno
shl
xchg
jge
inc
xor
sbb
mov
outs
or
js
dec
cs
mov
je
add
pop
sbb
loop
jmp
push
mov
sub
ds
rcr
scas
push
icebp
add
pop
int
ret
cdq
adc
shr
js
mov
js
add
adc
and
push
out
out
nop
hlt
push
outs
call
and
cli
and
shr
cmps
push
ins
mov
push
mov
imul
mov
clc
outs
(bad)
xchg
jg
pop
fwait
dec
mov
jne
or
xchg
pop
cmp
into
mov
pop
jne
cs
retf
lods
in
sahf
fidiv
imul
push
push
shl
repz
fnstsw
mov
lds
add
stos
mov
mov
rcr
pop
aas
bound
pop
inc
mov
test
ret
(bad)
ror
loope
nop
push
cmp
adc
nop
sbb
(bad)
pop
ins
dec
jmp
pop
out
dec
in
and
mov
add
inc
push
pop
push
jns
hlt
out
cmp
push
outs
loopne
dec
test
sub
rcl
(bad)
dec
ret
popf
movs
js
mov
mov
push
mov
test
mov
cmp
aaa
mov
leave
cld
enter
or
or
xor
hlt
dec
jo
mov
xchg
sahf
das
leave
jns
push
adc
mov
cmc
xchg
int
cli
dec
xor
(bad)
mov
lds
stos
mov
add
or
mov
add
jne
out
jnp
mov
xchg
ins
push
or
loop
out
test
bound
jnp
mov
loope
shr
mov
ins
inc
inc
or
xchg
inc
std
stos
gs
fwait
rol
xchg
popf
lods
jno
cmp
or
xor
fs
push
pusha
adc
cld
sbb
or
hlt
(bad)
sbb
lock
out
jo
shl
pop
hlt
cs
sahf
pop
test
(bad)
stos
jmp
ret
xchg
mov
cmp
and
pop
jecxz
cmp
aad
pop
jne
jmp
mov
leave
push
sbb
lahf
jno
and
cmp
or
push
jnp
arpl
fisttp
dec
jle
sbb
es
(bad)
xor
cmp
jl
jmp
cmp
sbb
mov
leave
jns
mov
dec
sbb
pop
das
mov
mov
das
pop
ja
shr
pop
xor
mov
add
popf
out
inc
inc
not
rcr
or
add
mov
hlt
cmps
mov
or
sub
nop
and
stos
scas
dec
mov
xlat
sub
popa
xlat
addr16
dec
xchg
inc
ins
(bad)
sti
(bad)
inc
mov
out
mov
lock
sbb
call
and
and
sbb
sar
xor
jbe
popf
pop
(bad)
enter
xor
mov
and
cmps
bound
pop
mov
jo
cmp
icebp
sub
movs
dec
(bad)
out
imul
int
(bad)
(bad)
cmp
rol
sub
mov
sbb
repnz
xchg
mov
xor
add
and
movs
(bad)
bound
jg
loopne
jmp
sub
cmp
dec
xchg
inc
stos
outs
and
cmp
shl
pop
outs
inc
adc
pusha
popf
jno
pusha
jge
sub
or
cmp
scas
lods
scas
xchg
lds
lock
xchg
(bad)
imul
xchg
std
pop
sti
jnp
inc
aas
mov
test
cmp
inc
lahf
push
dec
sar
mov
aas
popf
mov
jle
or
cmp
ss
and
outs
jp
mov
fmul
cld
push
jge
retf
add
iret
int
xlat
call
xor
cdq
pop
add
pusha
loope
cli
fisubr
mov
ror
in
shl
xor
addr16
test
ja
popf
adc
and
push
icebp
test
push
jmp
out
jecxz
mov
dec
add
fwait
stos
or
(bad)
pop
mov
not
jmp
jb
test
fcomp
fld
jns
in
cli
sbb
test
jecxz
dec
adc
jo
nop
shl
jmp
push
mov
lods
sub
stos
jle
mov
(bad)
push
add
or
add
iret
stos
test
inc
or
arpl
mov
(bad)
mov
dec
movs
lea
ins
cmps
and
push
mov
sbb
inc
add
cmp
jl
mov
sub
dec
(bad)
jle
fcomp
retf
aad
sbb
or
xchg
or
cwde
int
inc
in
je
inc
lods
lea
push
xor
dec
ss
mov
jbe
pop
retf
xchg
movs
jecxz
push
adc
retf
jne
ret
aaa
adc
dec
(bad)
fmul
inc
js
sahf
stos
sub
xchg
(bad)
or
jecxz
or
mov
mov
sbb
outs
jmp
sub
pop
adc
xor
xchg
les
mov
sub
adc
imul
rcr
cwde
adc
xor
out
sbb
cmps
loop
xchg
stos
add
jae
sbb
lea
mov
leave
bound
loopne
push
ja
cmp
xchg
cwde
jo
outs
je
xor
pop
jmp
mov
push
lds
jne
cld
sbb
jnp
jnp
adc
pop
movs
xlat
sbb
outs
ror
lds
dec
jbe
cld
push
int
and
ret
int3
jnp
jg
pop
jl
push
ja
aam
lea
mov
enter
out
cld
pop
mov
pop
retf
lea
dec
jne
jg
and
xor
push
inc
push
push
push
dec
and
outs
sub
mov
cmps
inc
push
sbb
movs
int3
xor
and
mov
in
xchg
pop
test
fstp
test
adc
test
out
or
js
push
aad
mov
out
mov
or
fisttp
jnp
imul
push
cmp
push
dec
fisttp
dec
aad
js
mov
(bad)
cs
cdq
fisttp
push
imul
js
jb
mov
call
(bad)
mov
outs
adc
js
call
stc
lahf
pop
cld
cmp
je
std
sub
xchg
adc
xchg
ror
push
push
stc
std
ss
jo
jge
add
mov
int
mov
jno
mov
add
out
fdivr
sub
jmp
mov
xchg
int
jmp
push
in
cdq
arpl
(bad)
rcr
lods
icebp
pop
jae
xlat
dec
test
push
jmp
jmp
call
arpl
mov
pop
loop
dec
xor
mov
ins
setge
mov
jae
add
pop
jp
arpl
jmp
cmp
sbb
fnstenv
gs
inc
outs
pop
sbb
movs
jno
jo
pop
sub
and
jo
int
out
arpl
or
push
or
cmp
arpl
sub
sbb
xchg
dec
push
pushf
ja
lods
and
jae
mov
jae
clc
and
sub
test
mov
sub
and
pop
pop
(bad)
iret
not
cmp
jmp
js
ja
pop
xchg
jg
scas
aam
leave
inc
fist
lods
std
test
dec
jle
xchg
cld
test
or
mov
dec
sti
(bad)
sub
test
jno
push
add
pusha
aas
or
fwait
cmp
ins
lock
adc
test
and
fcmovb
inc
mov
xchg
call
cld
cmps
pop
fcomp
movs
popf
push
aam
out
pop
or
inc
sahf
pop
sahf
adc
xor
cmp
js
pop
dec
jmp
push
cmp
gs
ss
(bad)
mov
imul
retf
ja
add
fist
inc
mov
mov
cmc
mov
loop
imul
push
repnz
jae
or
cld
fld
add
out
xchg
iret
pop
pop
xor
mov
jae
mov
call
push
mov
fimul
adc
and
mov
xchg
stos
loop
daa
inc
jecxz
rol
jg
push
stos
das
or
test
in
jmp
bound
jl
loope
push
jg
or
mov
mov
(bad)
mov
mov
fdivr
push
cmp
loop
xor
test
cmps
call
lahf
icebp
xchg
loope
xchg
push
out
sub
lea
cmps
out
cmp
push
je
cmp
dec
jno
imul
movs
or
shl
push
adc
xchg
cmp
pusha
or
movs
aaa
test
pop
enter
jmp
jb
pop
retf
ins
sub
sub
loop
cmp
into
or
xor
sub
cwde
cmp
jle
in
loop
push
aaa
ret
nop
xchg
inc
jno
icebp
idiv
xor
mov
sbb
pop
jp
fld
rcr
and
dec
mov
leave
pop
inc
int3
cmp
lods
sbb
das
or
sahf
inc
jo
or
loop
push
cdq
pop
popa
shl
js
dec
and
addr16
sub
sbb
in
loop
push
inc
jne
push
fbld
pusha
add
xor
sete
arpl
inc
xchg
dec
mov
inc
movs
lods
adc
fdiv
pop
cmc
sar
adc
pop
in
mov
into
sbb
pop
and
xchg
shr
xchg
mov
dec
mov
rol
jbe
cmp
pop
mov
xchg
lods
dec
cs
mov
add
mov
not
inc
fbstp
mov
xchg
inc
sub
pop
pop
xchg
adc
nop
in
xchg
xchg
sbb
and
sbb
mov
xchg
sar
into
mov
add
fxch
push
inc
xchg
jae
js
pop
(bad)
xor
xor
jne
mov
push
test
pop
std
dec
dec
loope
fdiv
mov
xchg
lock
push
pop
(bad)
adc
push
xlat
aam
fnsave
xor
cs
test
retf
mov
lahf
in
adc
sub
cwde
pop
jne
int
pop
cmp
xchg
test
sub
jbe
xor
ret
imul
mov
adc
xor
pop
xor
pusha
iret
loope
pop
icebp
das
iret
or
add
fidiv
mov
sar
add
sbb
mov
mov
into
(bad)
xchg
(bad)
push
cmps
cld
xchg
xchg
cwde
inc
fisttp
pusha
and
cmp
add
xchg
push
popf
adc
mov
dec
add
sahf
xchg
push
cs
aad
int3
xchg
(bad)
in
xor
mov
repz
cs
mov
stc
and
or
cmp
jmp
mov
imul
cmp
mov
inc
sub
js
fsubrp
lea
dec
repnz
xor
mov
inc
cwde
xor
mov
call
retf
stc
stc
mov
repz
aam
mov
(bad)
inc
jl
and
imul
mov
or
add
(bad)
(bad)
lea
dec
lds
in
pop
push
int3
ins
mov
inc
or
pop
lahf
or
mov
out
pop
stos
neg
popa
aas
in
jb
loopne
retf
in
lods
push
test
xor
pushf
movs
mov
out
cli
jmp
mov
inc
rsqrtps
and
in
cli
das
fwait
and
pop
(bad)
cli
push
jno
and
arpl
leave
out
clc
std
sub
fcmovnu
push
out
imul
sbb
xor
into
imul
cmps
push
dec
(bad)
jo
sbb
lods
push
mov
jge
sbb
retf
(bad)
cmps
retf
in
adc
jns
xor
adc
mov
adc
data16
scas
addr16
jp
adc
mov
or
outs
jae
gs
sub
dec
inc
xchg
in
mov
and
xor
push
fidivr
pop
pop
cmps
leave
mov
mov
sub
xor
jg
xor
jecxz
pop
push
cmp
pop
mov
push
bound
mov
or
out
mov
jnp
test
sub
pop
lods
in
std
sub
lahf
shl
cmc
jge
jo
(bad)
xchg
das
(bad)
dec
sbb
not
add
mov
stos
push
cmp
imul
xchg
test
sub
cmp
lahf
mov
adc
sub
cmp
dec
push
pop
je
stos
rcr
popf
adc
or
les
ja
sbb
add
sbb
pusha
pop
mov
in
mov
push
imul
fsubr
retf
out
mov
lock
stos
push
das
mov
movs
test
out
out
xlat
cmp
pop
adc
ds
dec
dec
retf
imul
inc
je
sti
inc
cmp
data16
clc
int3
aaa
xchg
enter
xchg
popa
cmp
loope
push
xchg
cld
iret
mov
je
test
xchg
pushf
cdq
inc
add
xchg
add
push
mov
test
cmp
xlat
and
cs
scas
and
shl
xor
cmp
mov
cs
jmp
cmp
add
push
adc
pop
mov
pop
movs
loop
int3
jmp
shl
ja
lea
je
jecxz
(bad)
xor
lds
dec
xchg
xlat
into
pop
fld
ins
rcr
lds
ficom
repz
mov
lea
nop
cmps
stos
jg
jmp
movaps
clc
xor
pop
bound
cmp
pop
stc
je
mov
mov
add
mov
push
lods
stos
cmp
dec
call
call
cmp
in
add
stos
sub
bound
mov
cmps
cmp
cdq
fucomp
push
dec
jnp
pop
fisubr
dec
pop
and
xor
jnp
xchg
add
loop
cmp
mov
dec
mov
cld
ins
retf
ret
(bad)
dec
jo
cmp
outs
in
xchg
xor
xchg
dec
jne
clc
sub
movs
jb
(bad)
scas
fdivr
loope
loope
jb
call
add
in
sbb
xor
(bad)
iret
add
sbb
outs
mov
push
jno
(bad)
cld
ror
inc
pop
mov
fild
loope
dec
int
pop
push
jns
and
pop
(bad)
and
inc
mov
xor
mov
arpl
pusha
dec
xchg
jno
mov
inc
inc
add
push
cmp
cmp
pop
popa
je
std
or
outs
mov
adc
adc
jmp
adc
cmp
sti
cli
js
stos
sub
mov
lock
stc
cmp
jb
pusha
xchg
test
iret
out
call
jb
jle
dec
push
in
aam
mov
add
vpmullw
cmp
lods
add
jmp
(bad)
aam
retf
mov
dec
daa
repz
imul
lods
shl
pop
dec
(bad)
fdiv
movs
les
arpl
mov
xor
stos
lods
dec
mov
sub
push
cmp
outs
scas
fwait
sbb
jge
out
outs
ja
push
push
lods
rcl
in
cdq
xlat
add
xor
(bad)
fstp
ins
adc
xor
loopne
out
xchg
ret
hlt
sti
loope
stc
fstp
xor
loopne
xchg
sub
mov
mov
in
mov
rcl
sub
xor
stc
cmp
xor
ret
xor
jmp
stos
sbb
bnd
sub
and
mov
sbb
cmp
mov
inc
mov
test
cld
not
out
pop
in
or
add
and
jmp
nop
call
movs
push
jle
je
cwde
jae
jo
mov
idiv
sub
dec
inc
(bad)
pop
sbb
push
rcl
pop
cld
inc
add
mov
jp
xor
rol
xchg
push
sub
nop
push
jp
arpl
jmp
sbb
pop
jo
sbb
div
cld
scas
out
out
cmp
and
icebp
push
sbb
(bad)
fsqrt
adc
xor
call
mov
out
pop
out
dec
lahf
add
shr
pushf
test
out
mov
icebp
bound
into
sub
ja
jecxz
ret
fidiv
repnz
mov
stos
pop
(bad)
fisub
stos
mov
or
stc
jbe
rol
ret
test
mov
arpl
hlt
jns
cmps
lock
cmp
popf
ret
mov
shl
test
test
jge
(bad)
push
ret
pop
cmp
xlat
add
dec
push
mov
cmp
mov
cmp
adc
sbb
or
movs
xlat
push
sbb
sti
ins
fld
or
fistp
push
inc
fidivr
push
dec
sbb
ja
jg
sub
jno
test
or
fist
pop
mov
in
addr16
ja
mov
sub
inc
dec
xchg
fistp
jg
clc
cmps
nop
ss
and
repnz
fadd
xor
shr
push
ficom
sbb
inc
ret
cmp
mov
scas
adc
inc
loope
sahf
nop
jnp
dec
mov
jo
sub
mov
sub
dec
lock
pop
sub
and
in
adc
pop
test
ja
sub
cmp
loope
leave
cmc
nop
sbb
and
bound
test
xchg
jo
fdiv
push
mov
cld
or
ds
adc
cli
out
or
push
in
push
push
and
pop
sub
jmp
cmps
stos
int3
xchg
cdq
call
mov
in
and
inc
(bad)
sub
outs
cmp
jae
js
lods
xchg
dec
xor
mov
out
loop
fldenv
ret
mov
add
xchg
inc
das
popf
test
sti
imul
nop
gs
out
jb
cli
in
sbb
sub
ds
cmps
mov
popf
add
or
sahf
ret
and
in
ins
lock
pop
cmp
or
and
and
add
out
ret
movs
fs
retf
rcr
mov
cmp
add
mov
pop
(bad)
push
xchg
lahf
dec
daa
arpl
loop
lods
xor
sub
call
push
mov
pop
cmp
in
push
mov
add
lods
push
jbe
pop
loop
inc
jne
enter
(bad)
push
cdq
jmp
pop
imul
mov
dec
push
ja
add
cld
mov
stos
cmp
outs
mov
pop
push
mov
test
shr
gs
imul
sbb
push
xchg
enter
aad
iret
jmp
mov
pop
mov
iret
mov
shr
add
scas
xchg
fprem
out
fist
cli
pop
sub
push
cmp
pop
movs
mov
inc
movs
pop
scas
mov
mov
jp
inc
add
mov
cmps
jecxz
call
cld
pop
push
dec
cmc
sbb
enter
inc
test
std
or
cmp
sub
jnp
dec
dec
bound
push
addr16
movntq
out
mov
retf
xchg
std
sbb
xor
retf
adc
lahf
pushw
mov
popf
(bad)
ins
jmp
and
rcr
push
xchg
push
std
or
(bad)
push
rcl
stos
pushf
lods
das
test
aad
jb
test
shr
dec
xor
inc
lahf
into
loop
pushf
jo
cs
sbb
gs
mov
lea
pushf
sub
fs
into
sar
or
fmul
or
push
mul
pusha
pop
xor
loope
mov
xor
and
mov
cs
stos
scas
inc
jb
jge
or
xor
dec
or
lods
lock
stc
es
test
movs
(bad)
or
xlat
mov
push
cmp
call
imul
cld
jae
arpl
jl
aam
and
movs
xlat
test
out
sbb
stc
in
shl
js
mov
add
cmc
sub
cmp
fwait
movs
cmp
cmp
(bad)
jp
push
movs
xor
push
and
or
stos
ins
or
sbb
inc
pusha
leave
ffreep
sbb
push
mov
and
inc
lods
int3
cli
scas
xor
fisub
data16
ret
add
jmp
mov
stos
pop
push
inc
dec
xchg
and
aas
int
or
pop
ja
jg
addr16
mov
jno
sub
xor
jno
add
add
mov
jbe
jmp
sbb
xor
sub
ror
sub
in
mov
outs
fs
in
xchg
jl
enter
loopne
out
push
ficomp
fild
daa
fcmovbe
mov
(bad)
xchg
mov
scas
sub
cmp
fcom
out
lock
mov
movs
and
cmp
adc
add
ret
(bad)
jbe
shl
xchg
push
sub
test
jmp
xor
dec
cmp
ds
stos
lds
jns
dec
rol
into
imul
lahf
mov
shr
addr16
sub
xchg
stc
enter
mov
xor
mov
outs
loopne
shl
mov
dec
inc
lea
and
pop
jl
jns
(bad)
test
push
lods
push
sub
push
xchg
mov
nop
cmc
sahf
lods
ins
pop
cdq
iret
nop
or
test
xor
jl
and
push
aas
in
cmp
mov
mov
std
sub
cmp
dec
sbb
dec
rol
mov
dec
xor
xchg
mov
pop
(bad)
xchg
shl
pop
pop
ins
cmp
mov
sbb
sbb
mov
ret
fcmovne
push
pushf
fld
push
adc
std
xor
xchg
cmp
xchg
mov
pusha
outs
out
mov
inc
and
push
aad
std
inc
pop
jmp
movs
scas
xchg
movs
xchg
sti
stos
in
adc
es
mov
aaa
imul
(bad)
aas
ret
cmp
(bad)
pop
int
jb
enter
addr16
(bad)
out
das
jae
xchg
cwde
std
aam
fild
sahf
cdq
add
daa
pop
or
adc
adc
push
ficomp
dec
pop
xlat
shr
rol
stc
cli
lds
jecxz
xchg
movzx
fnstenv
or
es
ret
xchg
adc
mov
jle
aas
jmp
xor
js
(bad)
sti
mov
xchg
cmps
add
dec
push
lods
repnz
stc
(bad)
nop
shr
mov
push
and
adc
leave
retf
int3
ins
enter
push
lds
loope
fcomp
scas
aas
pop
push
add
pop
add
xor
(bad)
sub
dec
clc
icebp
addr16
div
inc
in
inc
shr
mov
xor
xor
sbb
dec
std
cmps
add
clc
mov
inc
cdq
cmc
inc
xchg
out
sub
ficomp
and
out
iret
imul
repz
pop
cmp
int
and
aas
rcr
push
xor
jle
cmp
dec
(bad)
(bad)
push
xchg
adc
push
outs
retf
dec
(bad)
outs
rol
leave
into
or
popf
(bad)
ds
push
pop
xchg
pop
push
scas
or
mov
or
popa
pop
pop
jl
fistp
jecxz
pop
pop
or
and
ins
test
push
iret
mov
fsub
clc
add
sub
mov
stc
dec
(bad)
mov
or
fnstcw
mov
out
cmp
dec
sub
jle
jle
lods
mov
xlat
sbb
adc
push
int3
cmp
lea
jmp
pop
pop
in
adc
dec
stos
ja
xchg
jne
ret
pop
test
pushf
scas
inc
retf
ror
lods
push
sub
xor
mov
adc
mov
inc
push
inc
mov
popf
sti
(bad)
in
dec
leave
test
(bad)
es
popa
adc
sar
les
xor
fadd
pop
cmp
fld
test
pop
call
out
add
pop
xlat
sub
and
cmp
cmp
or
mov
outs
add
arpl
mov
add
js
sbb
das
das
add
mov
or
aaa
push
add
mov
jge
jb
jbe
fwait
or
mov
pushf
data16
sub
sbb
mov
adc
push
xor
or
pop
mov
inc
ja
ss
push
stos
sub
mov
scas
mov
jne
in
push
mov
outs
pop
ret
aas
inc
add
ficom
nop
les
dec
pop
push
in
pop
fcmovnbe
dec
push
inc
jle
cs
shl
hlt
ror
lds
out
ja
loopne
pop
repz
daa
adc
xor
inc
repnz
lahf
pop
xchg
mov
xchg
in
add
dec
cdq
mov
jle
jne
add
xchg
fstp
or
repnz
dec
shr
mov
mov
or
inc
sbb
or
fiadd
sbb
clc
pop
and
xor
stos
dec
mov
mov
mov
xchg
mov
stos
pop
mov
adc
js
dec
fwait
push
pop
fwait
mov
adc
lea
inc
(bad)
jnp
(bad)
rcr
(bad)
mov
and
mov
ret
(bad)
in
sub
sub
test
out
ss
push
movs
cmp
test
xchg
add
aad
fdivp
or
push
arpl
mov
mov
mov
test
aas
rcr
int3
mov
adc
xor
aas
out
add
mov
sub
movs
leave
mov
dec
mov
hlt
mov
sub
push
mov
xor
ret
add
or
push
enter
and
movs
(bad)
rol
cmps
es
cmp
ja
cmp
inc
pop
push
xabort
jge
(bad)
sbb
fcomp
aad
adc
sbb
or
jl
pop
fnstcw
or
mov
add
or
dec
(bad)
sbb
(bad)
cmps
adc
jb
mov
xchg
cmp
mov
(bad)
jmp
stc
mov
cmp
sbb
rcr
fcomp
stos
and
push
pop
fist
es
and
push
sbb
test
and
inc
lahf
enter
retf
(bad)
sahf
cld
xlat
test
push
nop
outs
iret
sub
dec
pusha
call
adc
pop
pop
test
paddq
mov
mov
ficomp
into
mov
cmp
mov
aam
fcmovbe
or
inc
fucom
repz
dec
test
pop
mov
mov
dec
(bad)
mov
fcmovnu
dec
imul
xlat
popa
adc
mov
mov
hlt
retf
pop
loop
dec
sub
clc
paddusb
jb
sbb
gs
sub
imul
ins
and
mov
aam
lods
mov
into
pop
(bad)
xchg
xchg
pop
or
loop
popf
aaa
ret
sbb
and
ins
push
imul
cmp
cdq
int
pop
pop
iret
add
call
sub
fdiv
daa
arpl
ret
jmp
add
jmp
sub
in
imul
ss
cli
jbe
cmps
test
in
fwait
lea
dec
repnz
ds
cmc
inc
in
aas
cli
mov
mov
push
pop
wbinvd
fisttp
inc
int
not
pop
outs
cmps
jecxz
sub
dec
stos
push
call
jge
push
xlat
(bad)
xchg
into
inc
outs
inc
mov
imul
data16
add
pop
int3
rol
iret
cmp
jecxz
popf
push
addr16
fidiv
outs
push
inc
jae
and
mov
ss
es
into
out
xchg
sub
cmps
sub
dec
push
outs
retf
mov
and
lods
adc
cmp
or
or
adc
aad
mov
cs
daa
add
pop
xchg
lods
fsubr
pop
push
mov
jno
sbb
mov
jp
inc
sbb
push
cmp
dec
pusha
sti
(bad)
ds
shl
enter
or
mov
cld
mov
repz
fdiv
das
xor
outs
add
pop
ja
push
sbb
cmp
add
call
ror
sar
sbb
arpl
fwait
mov
push
jb
cwde
cmp
test
xor
out
pop
out
dec
fst
xchg
pop
xor
dec
fidivr
retf
inc
sbb
sti
call
(bad)
sub
ins
sub
cmp
imul
xchg
(bad)
jecxz
fsubr
sbb
xor
adc
in
jne
in
sub
mov
xor
stos
adc
std
adc
cmps
std
cmps
and
xchg
xchg
dec
xchg
adc
sub
adc
push
sub
or
inc
xor
(bad)
xlat
ja
xchg
stos
pop
repnz
lds
xchg
mov
or
add
pop
fistp
mov
repz
cmp
sbb
or
stos
hlt
cmc
adc
lods
and
imul
call
test
jp
outs
jmp
test
jae
adc
or
out
retf
jle
je
push
dec
add
ret
sbb
ins
(bad)
cmp
rcl
or
cmc
mov
push
in
je
or
in
or
clc
and
sahf
mov
outs
popa
mov
mov
shr
mov
(bad)
cdq
mov
mov
push
fwait
and
popa
clc
jns
es
cmps
mov
retf
lods
adc
out
imul
jo
lahf
mov
cwde
pop
inc
aad
cs
or
push
xor
sbb
fnstcw
adc
pop
imul
dec
mov
sbb
test
ret
movs
push
mov
and
int
shr
push
adc
mov
sub
aad
adc
pop
je
or
pop
enter
sbb
pop
je
cmp
outs
push
lahf
or
test
stos
xchg
xlat
mov
cli
mov
enter
sar
mov
mov
test
outs
lods
mov
push
and
sbb
and
add
retf
inc
jmp
push
dec
mov
ret
ins
in
jecxz
sbb
and
movs
cdq
sub
dec
jmp
xchg
lds
push
(bad)
push
lahf
sbb
(bad)
xchg
dec
or
or
dec
test
ds
retf
bnd
mov
ret
popf
mul
repnz
fwait
cmp
xor
xchg
cdq
mov
neg
repnz
xchg
push
out
lock
ins
fldcw
invd
mov
add
arpl
test
xchg
stos
pop
mov
scas
mov
inc
xchg
out
adc
or
or
xor
push
scas
sbb
jno
push
bound
pop
sar
aad
pop
push
imul
mov
fs
or
aam
xor
pop
jns
cmp
js
outs
shl
imul
xor
icebp
cdq
out
dec
leave
cld
movs
imul
aad
push
rol
ret
sar
mov
imul
mov
mov
ins
fcom
cmps
fbld
pop
std
scas
mov
sbb
dec
mov
aas
sahf
add
nop
sbb
into
sub
movs
mov
mov
inc
sub
popa
call
cmc
add
mov
sbb
fwait
(bad)
clc
(bad)
ins
push
outs
jp
and
popf
int3
dec
je
popa
push
repnz
test
inc
movs
fiadd
inc
ror
mov
pop
cli
ss
(bad)
fisubr
shl
xor
rcr
or
pop
les
popa
outs
(bad)
cmp
xor
outs
dec
dec
in
sub
(bad)
je
pop
lock
(bad)
mov
push
inc
test
(bad)
sbb
sub
sbb
xchg
or
or
jmp
sub
pop
test
xchg
and
loope
arpl
sub
add
and
mov
inc
fcomip
mov
ret
mov
fs
adc
bound
ss
mov
jmp
dec
out
sub
out
push
ja
in
pop
xchg
movs
jno
mov
imul
pop
sbb
lea
sbb
adc
outs
adc
pop
xchg
mov
push
pop
jno
cmp
mov
add
push
jl
jle
and
lds
stos
cli
or
cdq
mov
(bad)
dec
pop
(bad)
cmp
cmp
cmps
mov
xor
cs
pop
dec
stc
loop
sbb
add
in
adc
inc
dec
adc
mov
xchg
cmp
fwait
in
mov
mov
mov
test
data16
and
mov
add
xchg
loop
mov
add
das
(bad)
pop
loop
test
sub
inc
adc
ins
cs
jb
neg
in
jae
inc
(bad)
pusha
xor
fisttp
jo
mov
(bad)
shl
jbe
inc
leave
dec
jmp
sahf
cmp
adc
or
adc
in
ja
popa
add
push
out
and
mov
mov
sar
cmp
ds
ret
iret
movs
push
pop
jne
call
imul
cmps
ss
xlat
fldcw
pop
cmp
sbb
cmp
cmp
and
das
movs
xchg
mov
outs
cdq
add
pop
push
out
mov
mov
mov
mov
xchg
imul
jno
mov
fwait
xor
bound
test
in
cmps
sub
lea
adc
xor
xor
loop
xchg
push
xor
dec
xchg
or
jg
sub
xlat
iret
mov
xchg
xchg
movs
jl
repnz
pmuludq
aam
imul
in
bound
and
cmps
jno
adc
es
add
mov
mov
xor
mov
dec
jecxz
fwait
sbb
sub
or
pop
push
lods
pop
jecxz
xchg
mov
push
lods
jns
sbb
jmp
rol
or
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
pop
add
test
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
add
add
or
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
inc
and
popf
arpl
imul
ins
(bad)
dec
xchg
ins
fcmovnbe
jg
loope
jg
sub
add
dec
xchg
fisttp
shl
mov
sbb
retf
(bad)
mov
mov
aas
cld
dec
in
mov
out
sub
sbb
sub
pop
sub
dec
gs
(bad)
pop
ficom
mov
sub
pop
hlt
pop
mov
sti
pop
push
fsub
cmp
add
ret
fst
mov
pop
inc
dec
adc
adc
(bad)
xor
addr16
sub
mov
sbb
in
sub
cld
push
outs
jmp
dec
hlt
pop
mov
and
jo
mov
imul
inc
add
sub
push
pushf
adc
imul
stos
sub
jle
dec
enter
mov
ins
aad
mov
pop
inc
(bad)
in
jg
outs
(bad)
pusha
sti
popa
movs
cdq
sub
jb
ror
jp
jmp
jno
or
jmp
jg
mov
out
cmps
push
out
aaa
jge
add
movs
cmp
dec
mov
pop
mov
pop
inc
and
sub
je
loope
fsubr
xchg
mov
inc
pushf
popf
pop
jmp
fwait
and
mov
xchg
jmp
push
call
mov
(bad)
fist
xchg
mov
add
xor
(bad)
scas
xchg
xor
jne
cvtpi2ps
sahf
mov
push
ja
add
and
out
xor
lds
shr
ret
cmps
int
mov
ss
and
jmp
in
xor
sbb
jne
cmp
add
push
in
and
add
and
fidiv
xor
jns
cmp
pop
movs
xchg
mov
cmc
dec
ss
lods
fisttp
dec
adc
ss
data16
xchg
cmp
addr16
jecxz
or
aaa
lds
in
jb
(bad)
movs
mov
cmp
jp
test
inc
or
retf
sar
sub
ins
mov
xor
fbstp
inc
fadd
retf
mov
in
outs
aad
lahf
xor
push
ss
fnstenv
cmps
jge
out
aaa
shl
lods
and
fist
inc
jnp
xchg
pop
das
(bad)
pop
xchg
xor
test
aam
es
jp
retf
and
cmp
jo
(bad)
jo
push
pop
int3
shl
fidiv
pop
js
std
or
clc
pushf
xchg
cs
jmp
and
lahf
sbb
retf
mov
mov
ins
push
add
test
(bad)
xchg
or
add
test
mov
inc
ret
add
sbb
bound
mov
test
jle
sbb
(bad)
cmc
ss
inc
and
mov
imul
sub
sub
scas
stos
loopne
mov
jne
das
out
loope
or
or
dec
inc
mov
inc
adc
mov
ret
movs
or
pop
cdq
call
xchg
leave
nop
push
fistp
xchg
pop
lods
mov
sahf
jnp
sbb
add
mov
xor
cli
(bad)
xchg
sar
ror
mov
mov
jae
lock
adc
cmps
xchg
mov
sub
mov
and
xor
rcr
sub
dec
add
cwde
fsubrp
jmp
inc
xchg
rcr
jle
aam
out
dec
mov
or
jmp
sbb
scas
inc
hlt
or
jns
inc
pop
out
rol
dec
call
daa
in
lea
dec
adc
mov
xchg
inc
sbb
add
mov
outs
test
xchg
xor
push
bound
pop
lahf
pusha
and
dec
imul
push
mov
add
inc
inc
and
cdq
jno
inc
xor
adc
repz
fucomip
xor
push
sub
mov
dec
mov
xchg
mov
xor
push
add
jl
(bad)
xor
icebp
inc
jne
inc
ins
dec
data16
pop
in
adc
xor
jg
jb
xor
jp
push
cli
adc
cmc
fmul
pop
gs
dec
mov
retf
sbb
xlat
(bad)
mov
retf
sbb
fwait
ja
or
imul
adc
cwde
pop
push
push
shl
push
gs
mov
imul
jmp
cmp
mov
fmulp
js
add
pop
fistp
or
mov
call
inc
lock
(bad)
div
test
add
fnstenv
push
sub
jmp
leave
ror
(bad)
mov
dec
retf
push
outs
adc
repnz
add
jge
clc
stos
loope
inc
sar
fstp
out
not
mov
retf
fdivr
mov
dec
mov
stos
mov
je
cs
into
ins
or
and
cmp
lahf
add
cmc
push
out
sub
fiadd
jo
hlt
aaa
jns
lea
inc
xor
ss
push
add
sbb
sub
lahf
cmp
cdq
lahf
icebp
mov
aaa
xchg
sbb
push
addr16
mov
dec
jae
out
xchg
scas
loopne
jns
icebp
jl
sahf
nop
sub
pop
jg
loopne
and
out
loope
mov
rcl
enter
out
inc
jbe
inc
lods
ins
je
call
sub
fst
sbb
cmp
dec
call
fdivr
mov
add
jne
scas
jg
int
and
push
mov
jg
push
fcomp
cli
jl
jle
les
mov
mov
bound
xchg
mov
loopne
push
mov
mov
lds
mov
dec
es
pop
fiadd
jmp
push
addps
in
lahf
mov
movs
out
add
and
fisttp
neg
add
or
mov
or
pop
leave
(bad)
das
shl
fst
xchg
test
clc
es
lods
xchg
cmps
cmp
imul
or
clc
call
xor
xchg
out
bound
pop
stc
jae
arpl
mov
lock
retf
push
clc
sar
jl
cmp
sub
push
push
mov
push
out
add
dec
jns
cwde
push
mov
add
jns
retf
retf
xchg
sub
jno
shr
mov
push
pop
loopne
out
jmp
jnp
enter
jp
jns
and
popf
fcmovnb
cs
cmc
test
push
adc
rcl
out
jo
lea
add
sbb
add
xlat
ins
arpl
dec
(bad)
mov
and
sbb
adc
jmp
shr
adc
xchg
int
lahf
test
lahf
and
jl
add
pushf
aas
repnz
jecxz
xchg
push
sbb
inc
nop
pop
xchg
imul
and
test
fisubr
lock
jmp
mov
mov
cdq
test
sbb
int3
dec
addr16
stos
lods
mov
loope
out
int3
jbe
xor
vmread
(bad)
cwde
mov
fsubr
dec
or
and
test
push
add
arpl
pop
xor
jp
mov
std
mov
and
jge
dec
cwde
lahf
test
mov
mov
lds
push
and
test
cmp
rcr
jp
xchg
push
rol
out
sti
dec
dec
nop
lds
adc
cmp
pop
cld
sbb
data16
jmp
push
xor
jecxz
out
bound
push
cmps
dec
lds
mov
popa
mov
xor
xor
jnp
jg
call
movs
cs
mov
(bad)
in
pop
inc
shl
xor
or
retf
imul
pop
loope
repnz
clc
xchg
and
pop
dec
adc
test
push
out
mov
mov
fsubrp
in
pop
mov
je
imul
lods
es
das
pop
sub
ins
fs
loope
int3
or
movs
scas
and
inc
call
js
dec
cli
xor
sbb
push
sbb
test
(bad)
dec
push
aaa
fidiv
rcr
fs
fwait
jo
sub
sbb
int
jl
outs
fcomp
leave
pop
ret
fs
test
xor
aas
add
push
mov
sahf
xor
mov
fiadd
pop
push
sbb
push
or
pop
mov
jbe
(bad)
jae
jmp
and
jne
pusha
or
or
push
aad
(bad)
inc
loope
pop
test
mov
add
xor
test
dec
adc
push
test
imul
inc
imul
call
dec
cld
clc
lea
or
and
in
push
outs
sbb
aad
test
cmps
pop
xor
(bad)
mov
scas
jge
movs
push
shr
xchg
test
shl
jmp
aaa
fcom
das
neg
bound
scas
enter
inc
(bad)
clc
(bad)
aad
popa
mov
fstp
pop
xchg
adc
cmc
js
push
aas
cmp
and
cmp
imul
dec
xor
leave
imul
pusha
inc
fwait
pop
lahf
js
cmp
call
adc
pop
fstp
sbb
jbe
jl
test
mov
pop
jmp
test
inc
fstp
sub
jno
xor
fwait
add
sub
mov
scas
sub
cs
fxch
test
pop
ins
nop
sahf
push
add
shr
fxch
lahf
call
cli
stc
pop
push
dec
pusha
test
addr16
cmp
clc
lods
xor
inc
pop
fadd
inc
mov
or
xchg
leave
mov
push
dec
in
adc
sbb
mov
sbb
mov
cmp
cmp
mov
push
loope
sub
jg
hlt
push
fs
and
dec
int3
adc
sahf
add
dec
xor
mov
lea
dec
pusha
stc
cmp
adc
push
and
inc
xor
dec
mov
movs
in
imul
mov
pop
xchg
mov
outs
push
or
cmp
aad
fstp
push
or
ds
inc
cwde
ret
cs
pop
int3
xor
(bad)
hlt
and
cld
push
div
fimul
mov
sub
mov
jo
aad
shr
shl
add
xchg
or
ins
sub
xor
mov
dec
rcr
sbb
pop
test
mov
ret
xor
mov
stos
dec
test
inc
adc
push
push
leave
sub
addr16
adc
js
ret
in
dec
dec
out
test
lahf
call
pop
xor
add
out
jne
dec
bound
pop
pop
sbb
mov
or
(bad)
xor
in
mov
fidiv
push
sub
mov
test
ret
imul
ins
cmp
hlt
push
mov
inc
jns
scas
imul
jmp
fild
mov
stos
jp
mov
and
inc
pop
xchg
in
sub
mov
test
adc
dec
jae
mov
ja
xor
sbb
pop
cdq
jnp
shl
push
daa
cmps
rcl
les
mov
cmp
mov
xlat
mov
push
mov
imul
ficom
dec
cli
inc
dec
movs
(bad)
sub
outs
fisttp
lea
es
ins
aaa
xchg
popa
(bad)
int
scas
sbb
jecxz
jae
or
mov
fsubr
dec
cmp
cmps
cmp
fcmove
loopne
inc
mov
xor
js
ret
jp
push
dec
adc
pop
sub
inc
loopne
cld
call
dec
aam
xlat
jle
xchg
aam
aad
push
inc
sti
fxch
mov
jmp
cld
push
cli
dec
lods
addr16
jb
(bad)
loope
scas
adc
and
enter
adc
and
add
movs
sbb
outs
stos
pop
mov
and
jne
xchg
ret
inc
mov
bound
push
inc
cmp
sahf
daa
xchg
cmp
or
dec
not
jmp
adc
pop
shl
cmps
dec
test
lahf
sbb
pop
les
inc
test
cmp
adc
jge
repnz
pusha
icebp
pop
and
bound
movs
xor
and
mov
xchg
jle
bound
add
push
dec
cmp
mov
push
mov
pop
loope
stos
sar
maxps
inc
xchg
add
and
call
sub
or
fimul
ror
stc
mov
ja
ins
pop
and
sub
dec
outs
rol
push
inc
jle
inc
and
fild
dec
jno
adc
lods
and
mov
and
cmp
dec
pop
mov
pop
(bad)
adc
gs
push
inc
icebp
sub
mov
xor
sti
xor
push
cmp
jmp
lock
mov
push
push
jg
rcr
repz
and
adc
cmp
mov
fisubr
and
scas
aad
push
sub
sub
or
xor
imul
in
pop
adc
stc
mov
jge
adc
adc
xor
mov
push
fist
movs
and
test
dec
push
jl
lock
ins
push
xlat
mov
in
fild
xchg
ja
push
ins
push
in
sbb
adc
mov
mov
mov
popf
les
pop
or
push
cmp
or
(bad)
fimul
mov
xchg
inc
jmp
or
in
mov
addr16
stc
addr16
cli
(bad)
mov
(bad)
xrelease
popa
cmp
mov
pop
in
pop
xchg
enter
mov
xchg
mov
ds
sbb
daa
test
inc
fwait
add
cmp
(bad)
sti
inc
ret
in
push
pop
dec
inc
xchg
in
pop
imul
ss
stos
popa
and
inc
xor
xchg
dec
xor
inc
adc
xrelease
pop
cmp
inc
int
xlat
test
or
dec
xchg
mov
push
movs
jmp
cmp
mov
sub
jmp
(bad)
imul
in
jp
pusha
nop
out
test
ror
add
(bad)
std
mov
xchg
jle
dec
cmps
call
pop
jb
xor
retf
in
add
ret
cmp
hlt
mov
addr16
shl
fs
cmp
mov
aas
cmp
and
and
adc
call
jg
fs
inc
xchg
inc
sub
jnp
jge
add
dec
call
sbb
adc
jbe
in
lock
test
in
push
cdq
adc
pop
adc
pop
jecxz
inc
push
pop
lock
xor
add
jnp
cld
jecxz
mov
pop
xchg
or
fnstcw
jl
inc
sub
mov
push
push
pop
jbe
stos
xchg
xchg
(bad)
or
cmp
pop
div
sbb
mov
mov
pop
xlat
push
xchg
cli
dec
mov
test
mov
jb
retf
repnz
xlat
xor
sbb
fidiv
test
or
push
sbb
out
mov
repz
retf
xchg
cmp
adc
repz
push
add
push
repnz
push
dec
lods
cli
test
cmp
sti
push
push
shl
repnz
sbb
inc
es
out
add
push
xor
mov
cmps
mov
loop
push
push
sub
dec
dec
int
mov
stos
pop
fild
retf
test
sbb
fdivr
dec
std
mov
mov
pop
push
call
(bad)
xlat
pop
jae
dec
and
mov
add
cmps
sub
cmp
xchg
mov
hlt
mov
ds
jle
fwait
jl
add
mov
dec
mov
jge
or
and
sub
xchg
xchg
test
adc
out
sbb
sbb
mov
cmp
adc
inc
and
fmul
iret
jmp
repz
adc
std
push
(bad)
fistp
and
sub
dec
and
xor
outs
jbe
(bad)
hlt
out
xor
sti
cdq
out
(bad)
iret
mov
adc
fld
(bad)
mov
lds
popf
mov
fwait
xor
xchg
mov
idiv
fwait
clc
dec
xlat
pusha
jge
bound
dec
repz
in
fcomip
popa
xor
test
imul
popf
scas
out
cmp
lock
pop
sub
mov
pop
test
jge
mov
push
lahf
call
ss
test
jg
aam
xchg
mov
mov
push
mov
sti
ror
xchg
ror
sbb
fs
jne
ins
push
stc
or
pusha
aam
clc
pop
inc
adc
dec
jmp
fs
and
je
sbb
pop
out
lea
popa
dec
sub
xchg
and
jle
hlt
popa
clc
adc
xor
aas
pop
xlat
mov
push
push
ins
(bad)
out
(bad)
jmp
les
mov
cmps
pop
pop
enter
inc
inc
and
adc
xlat
cmp
fidivr
stc
pop
retf
pop
pop
inc
adc
lahf
inc
jnp
int3
mov
into
shl
in
test
adc
stc
les
imul
in
test
repnz
mov
cli
push
rol
lock
dec
pop
sub
add
in
inc
cmp
pusha
outs
dec
mov
(bad)
shr
imul
in
popa
jnp
int
iret
(bad)
aaa
out
mov
xor
les
retf
mov
mov
mov
sub
jnp
test
stos
jne
inc
(bad)
lds
enter
mov
cdq
xchg
leave
cmc
test
jl
xchg
imul
leave
jge
fisttp
pop
je
aam
rcr
sub
dec
xchg
pop
enter
and
mov
arpl
sbb
cmp
mov
loope
je
xor
mov
call
scas
jb
neg
idiv
ja
jle
xor
call
inc
xor
pusha
retf
mov
push
in
cmp
lods
jae
div
adc
mov
lea
jae
push
mov
or
push
sbb
cmp
shr
xchg
aas
sar
out
outs
mov
mov
mov
int
pusha
inc
fst
mov
repz
stc
adc
bound
jmp
jae
jbe
out
fild
push
movhps
test
pop
scas
add
cs
xchg
gs
pop
pop
(bad)
lock
neg
lods
sub
icebp
jnp
mov
mov
test
mov
dec
arpl
cmc
scas
jne
pusha
sbb
icebp
daa
cmps
or
out
mov
sub
or
in
push
adc
mov
mov
xchg
sbb
loopne
hlt
stos
mov
popa
sub
fsub
(bad)
js
dec
ret
mov
cld
or
hlt
and
and
arpl
add
pop
mov
imul
int
mov
hlt
in
into
xchg
fist
push
sub
leave
je
mov
les
dec
sub
sbb
sbb
jle
mov
jmp
hlt
popa
xor
jo
mov
push
mov
jmp
or
shr
add
xchg
mov
imul
sbb
pusha
push
fdiv
(bad)
iret
sub
retf
test
sbb
nop
imul
push
push
mov
cmc
push
sub
push
fdiv
inc
pop
rol
inc
push
loope
mov
rcl
idiv
rol
dec
xor
loope
inc
dec
inc
sub
lock
movs
pop
jmp
jp
jl
sub
cwde
stos
add
addr16
mov
add
dec
rol
cld
pop
outs
cmc
sub
sbb
jp
pusha
sub
sar
add
mov
lds
scas
add
jns
push
pop
daa
stc
xor
bsf
sbb
bound
call
out
add
mov
lds
xor
jo
test
(bad)
rcr
or
and
xchg
stos
popf
dec
retf
inc
rcl
mov
and
outs
jmp
and
(bad)
(bad)
push
pop
test
fild
push
sbb
xchg
xor
or
push
ror
xor
pop
lods
sub
dec
mov
dec
sar
sub
nop
leave
push
ret
jno
pusha
int3
js
arpl
add
push
(bad)
dec
push
push
addr16
xor
jmp
jle
cmps
mov
push
mov
and
xor
inc
mul
and
test
sub
imul
jle
lods
aas
retf
and
xor
fisubr
or
xlat
mov
fild
adc
jge
sub
jmp
cld
mov
(bad)
loop
jmp
fisubr
xchg
dec
(bad)
mov
test
dec
push
test
outs
jmp
(bad)
mov
inc
ins
jmp
xchg
push
arpl
call
mul
pop
mov
push
fnsave
(bad)
and
or
and
jmp
mov
js
stos
stos
inc
data16
mov
fistp
adc
xor
mov
clc
mov
and
(bad)
(bad)
inc
cmc
xor
mov
xchg
in
pushf
je
mov
ins
rcr
xor
iret
pop
push
mov
fsubr
push
aas
dec
xor
outs
inc
pushf
movs
cld
loopne
lahf
or
mov
int
jl
out
push
mov
xchg
popa
push
pop
sbb
xchg
push
xchg
lods
sub
inc
mov
in
aam
cmps
fdivr
mov
rol
dec
inc
enter
add
push
int3
jmp
jno
ror
inc
xcrypt-ecb
cmps
jl
dec
jne
fcomip
inc
in
mov
push
(bad)
loopne
and
nop
es
mov
add
xchg
ds
fisubr
cmp
xor
mov
dec
mov
cld
adc
outs
dec
je
mov
and
cmp
lods
dec
dec
call
adc
mov
jnp
pop
fiadd
hlt
add
loope
jmp
sbb
dec
push
jns
jno
cmp
popa
ins
xchg
push
jno
sub
mov
pop
mov
mov
lahf
sub
adc
push
push
scas
mov
hlt
out
and
or
jle
(bad)
lds
mov
push
cmp
or
xor
js
ret
loopne
aas
sub
adc
mov
mov
inc
jmp
(bad)
call
jo
mov
ds
mov
mov
test
aas
push
sub
and
lea
xor
aas
rol
adc
and
(bad)
leave
aad
out
dec
test
js
movq
cmp
jb
in
adc
loop
push
jns
stos
scas
sub
lea
(bad)
jecxz
cld
neg
sub
dec
inc
ffreep
push
mov
sti
scas
dec
aam
ds
loope
cmps
sbb
mov
sub
gs
jb
cli
pop
dec
into
fimul
lods
dec
jae
jno
loope
(bad)
fidiv
leave
or
in
aam
scas
leave
test
ss
or
mov
out
or
loope
or
xor
push
lock
and
aam
call
div
add
in
add
xor
cmp
out
dec
enter
or
bound
outs
dec
pop
movs
loop
or
inc
adc
fadd
ins
sbb
cmp
jns
repz
(bad)
push
push
gs
sbb
cmps
push
data16
fimul
push
sbb
mov
js
mov
movs
jne
xlat
pop
mov
pop
cmp
add
sbb
push
hlt
xchg
fsub
cmp
or
clc
mov
pop
inc
pop
pop
push
lea
pushf
dec
xor
adc
push
bsr
ins
xor
test
dec
js
(bad)
rol
imul
adc
call
enter
inc
add
mov
fwait
xor
lock
out
aaa
xor
mov
cld
outs
inc
mov
cli
out
iret
ss
push
fucomi
push
repz
cmp
lds
outs
xlat
inc
mov
retf
push
sbb
data16
dec
je
pushf
repnz
retf
std
movs
in
push
inc
inc
push
aad
retf
leave
ret
std
in
adc
xchg
sbb
mov
pop
dec
ret
mov
add
add
pop
in
inc
rcr
push
jge
pop
(bad)
out
test
add
mov
jp
mov
mov
cld
mov
and
lea
aas
xchg
fild
mov
in
call
push
add
push
out
and
sub
not
jae
int3
data16
(bad)
or
das
cmp
outs
(bad)
pop
sub
scas
mov
jmp
pop
arpl
cmc
jno
leave
mov
xor
jbe
adc
inc
retf
xchg
les
mov
pop
fisubr
cmps
(bad)
mov
xchg
adc
inc
xchg
(bad)
or
inc
mov
push
jo
or
sub
sub
add
mov
imul
pop
jmp
scas
dec
fwait
test
inc
lea
add
sub
dec
adc
push
movs
sar
adc
pop
test
loopne
int3
jns
push
adc
add
mov
dec
push
push
jae
mov
lds
mov
(bad)
dec
fbld
fbld
cmps
jo
pusha
mov
sbb
cmp
mov
std
sub
cdq
cmp
sti
out
mov
(bad)
movs
inc
popa
cwde
pop
gs
dec
push
(bad)
cmps
lods
dec
mov
jae
clc
pop
jmp
fcomp
pop
loopne
xchg
add
xor
(bad)
in
cmp
dec
(bad)
cmp
sbb
cdq
mov
jne
int
jecxz
sti
sbb
push
mov
push
cli
out
dec
mov
cs
xchg
es
mov
cmp
jae
aas
cs
ret
jp
jo
test
jg
in
sub
lock
jo
pusha
inc
jp
push
daa
push
movs
push
int3
adc
push
pop
push
hlt
add
fdivr
xchg
push
(bad)
cwde
xchg
inc
pop
out
push
aam
ins
pop
push
stos
daa
pop
in
sub
pop
(bad)
sbb
xchg
push
cli
lea
fs
aam
dec
call
mov
fwait
outs
(bad)
sbb
sbb
clc
scas
cwde
pop
mov
cmp
mov
push
(bad)
inc
fwait
xor
ds
mov
dec
shl
ins
(bad)
retf
pushf
adc
pop
daa
and
mov
push
scas
(bad)
(bad)
ja
cld
fidiv
mov
mov
pop
or
daa
push
jl
scas
jne
mov
jno
push
daa
retf
rol
mov
popf
imul
mov
pop
push
or
or
in
pop
sti
ss
mov
mov
stc
dec
arpl
loop
push
mov
jae
xchg
div
mov
cmp
call
fdivr
fld
adc
mov
or
mov
push
jnp
test
shl
fdiv
loop
pop
movs
push
not
les
mov
lahf
(bad)
idiv
or
jb
adc
jmp
ret
rol
xor
outs
or
lods
xor
cmp
mov
add
rcl
ret
dec
add
mov
cmp
mov
mov
mov
mov
in
punpcklwd
aad
scas
pop
mov
or
outs
ret
xlat
and
mov
pop
adc
jmp
mov
push
dec
and
mov
ret
(bad)
adc
fistp
pop
dec
movs
inc
mov
sbb
dec
in
push
jl
jge
gs
mov
xchg
mov
push
test
inc
jge
jecxz
je
iret
hlt
es
mov
mov
sub
retf
cmps
push
and
in
ret
sahf
adc
push
(bad)
or
push
mov
sub
inc
fistp
jno
rcl
sbb
sbb
xor
and
js
pop
fwait
adc
es
je
data16
cmp
xor
pop
in
dec
inc
jbe
mov
stos
pop
stos
sahf
dec
(bad)
clc
jns
mov
(bad)
mov
or
adc
movs
push
out
dec
int
aad
jmp
hlt
ret
add
arpl
fisub
ds
mov
adc
lods
xor
cmp
scas
inc
xor
mov
mov
inc
sbb
push
mov
push
hlt
xor
fs
out
gs
push
or
xchg
enter
pop
pusha
pusha
mov
jmp
lods
push
push
mov
or
push
add
call
mov
push
jle
scas
mov
pop
lea
cwde
push
std
or
movs
xchg
aam
sbb
sbb
rcr
lods
mov
bound
scas
bnd
sbb
add
xchg
fmul
dec
clc
in
jp
pop
jnp
dec
add
hlt
pushw
imul
jge
mov
neg
and
ror
add
mov
mov
push
mov
jns
dec
jbe
mov
out
in
adc
imul
pushf
xchg
cdq
sub
cli
xchg
fwait
not
pop
mov
sub
add
sub
dec
sbb
in
fild
movs
clc
mov
jle
inc
icebp
cmp
shl
aas
sub
mov
iret
psubsb
aas
sub
(bad)
jmp
sahf
cmp
imul
xchg
jns
rcr
xchg
aam
mov
gs
xchg
push
pop
popa
xchg
inc
inc
inc
jmp
cmp
aad
popa
push
push
xor
das
iret
repnz
inc
jp
fs
mov
fld
mov
lahf
sub
fldcw
call
push
sub
cmp
push
xchg
dec
nop
xlat
nop
(bad)
xor
call
sbb
je
and
jno
int3
adc
sub
mov
push
mov
(bad)
fidiv
aad
fimul
dec
rcl
clc
cs
sub
sahf
cmp
pop
xor
add
add
test
inc
aam
repnz
test
sub
or
mov
sbb
sbb
sbb
xchg
cs
sti
push
cli
inc
xchg
inc
gs
mov
movs
push
add
add
aam
xchg
lods
ret
xchg
sbb
inc
mov
and
jle
cmp
pusha
sbb
inc
dec
xchg
icebp
push
mov
repz
sub
std
jne
pop
mov
rol
popa
fldenv
(bad)
dec
fld
scas
adc
lock
jmp
jmp
stos
popa
test
ja
into
dec
arpl
push
repnz
dec
inc
fwait
test
imul
xchg
push
sbb
dec
fstp
ins
mov
sbb
xchg
dec
adc
adc
std
in
(bad)
retf
cmp
je
add
or
(bad)
std
cmps
add
jb
enter
(bad)
lea
js
pop
inc
adc
ja
sar
js
pop
cmps
inc
out
sahf
in
sti
inc
cli
adc
cmp
(bad)
outs
jno
loopne
push
sub
mov
gs
retf
shl
or
sysret
adc
adc
adc
(bad)
sti
inc
(bad)
dec
test
fstp
mov
pop
push
mov
inc
inc
je
add
ss
imul
repnz
movs
dec
(bad)
mov
mov
outs
repz
retf
xor
in
dec
mov
clc
push
mov
std
or
jecxz
repz
repnz
daa
outs
xor
popf
fimul
adc
xlat
femms
sub
pop
jae
sbb
cmc
fs
cmps
in
imul
xchg
jno
and
scas
test
pusha
and
mov
add
xchg
lea
or
daa
and
pop
add
cmc
pop
xchg
in
jge
xor
mov
mov
out
in
fs
loope
mov
pop
lods
cdq
aad
sti
xchg
and
call
retf
in
les
scas
pop
adc
ins
mov
lahf
push
mov
and
(bad)
sbb
je
xchg
mov
mov
mov
jl
js
lock
dec
adc
mul
sub
xchg
push
jae
js
fst
dec
outs
mov
lahf
sub
(bad)
jmp
test
(bad)
adc
adc
imul
or
jl
shr
mov
jge
or
int3
mov
push
in
ss
data16
xor
loop
mov
(bad)
popf
mov
call
leave
mov
adc
push
frstor
and
rcr
mov
addr16
jg
mov
je
in
mov
test
ret
dec
call
jp
pop
popf
test
adc
xchg
jae
adc
pop
enter
xchg
icebp
shr
jl
test
push
lock
mov
imul
push
xor
lahf
mov
cmp
(bad)
mov
push
bound
adc
mov
pop
dec
dec
ror
mov
out
cmps
test
push
xor
jno
push
xchg
std
xchg
js
cmp
sub
lea
mov
mov
push
push
jb
inc
add
sar
jl
outs
jl
shr
clc
arpl
mov
ja
dec
cdq
mov
xor
es
xchg
les
add
sub
adc
jl
xchg
fistp
sub
adc
sub
dec
sahf
sub
or
inc
scas
inc
jbe
int3
(bad)
pop
dec
(bad)
out
movs
icebp
mov
push
movs
xchg
sub
adc
arpl
jbe
ins
fmul
sub
mov
scas
mov
inc
lahf
jmp
mov
out
pop
jae
or
adc
adc
mov
mov
xchg
dec
sub
das
jp
aaa
test
fisub
add
loopne
mov
adc
push
xchg
repnz
push
je
jmp
gs
mov
sub
cmps
lahf
inc
pop
jno
jns
mov
sar
enter
loop
sub
rcl
imul
nop
cmps
adc
inc
test
(bad)
mov
dec
ss
dec
or
stos
add
mov
jno
pop
icebp
inc
jmp
lods
bound
and
stos
loopne
and
cmp
sbb
mov
xor
sub
daa
jo
scas
and
or
adc
dec
arpl
adc
psrld
jne
mov
xchg
xchg
daa
inc
lods
pushf
add
mov
les
cld
arpl
sub
mov
cmp
mov
movs
es
aas
(bad)
mov
mov
push
sub
retf
pop
jbe
lods
add
cmp
dec
add
pop
loope
gs
rcr
ins
cmp
popa
pop
xchg
push
lods
repz
add
fisttp
outs
lahf
and
jo
cdq
ja
mov
cmp
pop
loopne
dec
je
repnz
aam
adc
push
mov
sbb
push
jo
dec
bound
pop
retf
jo
jp
(bad)
movs
icebp
jno
jno
cmps
pop
fnsave
imul
jbe
aad
out
xchg
inc
mov
enter
push
pop
pop
sub
enter
fimul
aaa
cmp
sub
test
mov
int3
cmc
cmovnp
jmp
or
add
repnz
inc
mov
or
repz
cdq
pop
dec
xchg
or
jecxz
stos
repnz
jbe
sub
sbb
cld
arpl
push
test
popa
mov
test
pop
mov
sar
out
jmp
push
xchg
enter
jle
in
mov
cmp
fstp
adc
xlat
jmp
mov
outs
xor
inc
mov
es
fdiv
xor
dec
(bad)
shl
jl
inc
sub
pushf
xchg
outs
xchg
aas
fisub
repnz
call
les
xor
aad
int
xchg
retf
and
mov
ins
loop
retf
(bad)
retf
add
das
pop
adc
jb
dec
cmps
dec
in
ins
or
(bad)
adc
out
mov
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
pop
and
cli
mov
pop
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
bound
adc
mov
mov
(bad)
(bad)
arpl
push
out
(bad)
or
mov
nop
mov
cs
scas
push
(bad)
push
pop
lods
cs
mov
ret
jg
(bad)
out
cmp
pop
xchg
sbb
shrd
pop
add
sahf
xor
bswap
mov
ds
sub
repz
call
cld
ret
ja
aam
jle
add
js
cdq
sub
cmp
addr16
vpsraw
test
dec
das
ins
jle
xchg
xchg
push
cmps
or
leave
jbe
mov
cmp
or
sub
test
iret
pop
test
or
(bad)
es
in
ins
mov
pushf
test
adc
or
push
movs
iret
add
sub
mov
sbb
shr
(bad)
push
(bad)
pop
mov
les
repz
push
inc
lods
mov
stos
pop
jmp
icebp
lahf
xchg
loopne
test
mov
jb
mov
arpl
push
(bad)
or
cmp
cmp
scas
mov
sub
sbb
jge
fwait
pop
ins
xor
adc
test
mov
in
push
cmp
mov
and
mov
xor
or
ins
pop
fsubr
adc
or
pop
pop
or
mov
sub
cld
jbe
cmp
mov
jp
rol
loop
pop
and
adc
pop
hlt
mov
jb
bound
sar
rcr
jae
and
push
leave
jb
push
fdivr
jmp
jl
adc
cmp
nop
call
scas
es
cmp
cmc
push
inc
sar
loopne
sub
bound
test
aam
test
dec
pop
(bad)
lods
fidivr
cmp
and
popf
xlat
aas
cwde
data16
mov
mov
pop
inc
pop
xor
(bad)
pop
arpl
data16
aas
aad
in
jecxz
sbb
xchg
jle
or
cmp
int
fchs
outs
call
push
jecxz
jecxz
dec
ja
not
xor
and
stos
xor
mov
out
pop
cmp
sub
mov
aas
lea
pop
out
mov
(bad)
pushf
and
and
out
in
mov
adc
cmp
mov
sub
cld
call
jmp
aad
lods
xor
cmc
ins
loopne
cli
out
sub
repnz
xor
pop
loopne
std
xchg
mov
arpl
inc
inc
pop
push
out
retf
mov
mov
push
es
or
jno
out
jmp
push
sbb
sub
call
in
jo
pusha
fcomp
test
fsub
sbb
sub
cmp
test
cmp
out
pop
ins
call
adc
das
ds
cld
test
das
sub
jns
dec
inc
jge
gs
(bad)
cmp
iret
bound
std
in
jmp
xor
inc
rol
cwde
push
leave
mov
or
inc
inc
outs
retf
add
or
data16
inc
jnp
or
xor
xor
or
push
adc
ins
mov
cmps
movs
cmps
inc
add
mov
cmps
ret
jne
or
les
sar
cdq
inc
xchg
test
mov
push
int3
push
rol
and
adc
cli
pop
sar
ss
mov
jbe
in
icebp
or
jge
sub
jbe
pop
cwde
pop
mov
outs
pop
ror
jmp
in
rol
loopne
pop
push
leave
pop
(bad)
jmp
ins
xchg
je
dec
cpuid
mov
push
das
sahf
aas
inc
fdivr
dec
push
push
sub
xchg
std
and
and
jmp
mov
enter
cmp
loope
adc
shl
fwait
loop
in
test
js
pushf
cmp
push
js
push
add
mov
fsub
hlt
or
ss
or
jnp
sbb
mov
jns
sbb
or
sub
scas
mov
cli
ret
or
and
push
les
shl
mov
dec
jle
arpl
sbb
sub
add
loop
fsub
adc
jp
mov
mov
inc
xchg
lahf
paddb
rcl
dec
dec
(bad)
or
cmp
mov
inc
cld
pop
scas
xchg
cmc
push
iret
cmp
or
xor
pop
push
fldcw
call
ret
test
adc
retf
rcr
inc
xor
into
stc
jmp
push
push
mov
xchg
retf
sub
or
out
or
sahf
lock
add
fnstenv
pop
xchg
cmc
pop
fsubr
pop
cmp
mov
jmp
test
mov
inc
jae
dec
inc
imul
fild
cwde
add
mov
sbb
push
psrad
enter
test
and
fldenv
mov
leave
xchg
mov
xchg
inc
sub
xchg
cld
inc
xor
xchg
fadd
mov
or
xchg
pop
gs
retf
pop
dec
add
or
cmp
sar
neg
mov
in
repz
pop
mov
or
test
dec
(bad)
pop
mov
mov
lds
stc
je
retf
addr16
cmp
neg
stos
push
(bad)
cwde
xchg
lds
int
xchg
outs
jecxz
jp
sub
in
scas
push
dec
or
jmp
outs
jno
adc
pop
popf
lods
(bad)
sbb
dec
mov
push
stos
repz
push
imul
jecxz
popf
push
sti
stos
push
push
xor
dec
jge
mov
int
add
hlt
cli
enter
mov
xchg
jo
cli
mov
sub
dec
jle
dec
sbb
addr16
mov
and
in
mov
adc
cmps
jae
stos
outs
xor
jae
cmps
repz
call
or
xor
(bad)
mov
ss
dec
(bad)
mov
leave
dec
cld
inc
in
jmp
ins
sbb
movs
fild
dec
mov
ins
add
or
mov
iret
frstpm(287
stc
icebp
iret
pop
das
cmp
and
jno
cld
sbb
inc
dec
and
dec
sub
jo
not
sub
fwait
repnz
add
inc
cmps
in
pop
sub
imul
xchg
and
(bad)
in
dec
mov
jno
mov
cmp
sbb
cld
fisub
jp
or
cmp
xchg
call
pop
and
pop
sbb
gs
mov
out
push
fcom
ficom
ds
int3
inc
enter
push
add
cmp
xchg
imul
push
jmp
and
dec
xchg
mov
test
mov
jo
push
mov
add
sahf
pop
aas
shl
test
or
add
or
test
inc
cwde
daa
call
push
retf
cmc
xor
jb
mov
xor
arpl
cli
mov
shl
ret
idiv
xchg
mov
adc
mov
repz
jo
imul
sub
stos
mov
push
fcmovu
ja
cmp
leave
sub
push
bnd
mov
push
adc
pop
xchg
xchg
xchg
add
out
add
sbb
jnp
dec
cmps
or
cmc
retf
mov
das
sbb
test
mov
push
add
pop
pusha
jp
mov
scas
dec
adc
sbb
nop
push
sbb
cli
sahf
das
fwait
gs
cwde
into
retf
repnz
push
ds
sub
and
je
hlt
movs
add
pop
in
dec
out
sbb
aam
adc
mov
jmp
ds
sti
fidiv
or
adc
stos
mov
jle
jno
ss
mov
repz
add
daa
dec
pop
or
dec
js
pmaddwd
jmp
push
inc
sbb
sbb
repz
jmp
fs
inc
lods
push
or
mov
and
sub
mov
fimul
cmps
test
leave
or
push
in
jge
js
dec
dec
pushf
mov
pop
fistp
scas
mov
cmp
cmps
(bad)
mov
mov
sbb
pop
pusha
xor
iret
jmp
repz
jl
stos
pop
adc
dec
mov
inc
mov
into
icebp
inc
adc
inc
mov
xor
push
(bad)
sbb
outs
sti
xchg
fisubr
pop
mov
enter
fcom
mov
mov
jae
lahf
adc
bound
mov
pop
retf
sahf
jmp
popf
jmp
mov
mov
addr16
inc
xor
movs
push
fstp
push
or
pusha
jle
inc
cwde
push
mov
into
adc
jl
movs
pop
mov
mov
mov
inc
cmps
pop
lahf
not
std
dec
push
test
sub
movs
pop
sub
adc
push
mov
push
dec
mov
push
mov
sub
fdiv
std
sub
or
push
sbb
xchg
sbb
fld
scas
popf
icebp
ror
push
mov
popa
fist
mov
jge
adc
jmp
outs
sbb
scas
or
mov
adc
mov
(bad)
ins
or
imul
jmp
pop
jb
cmp
and
sahf
jge
je
xor
mov
jmp
call
mov
mov
out
sub
ins
push
sub
jo
fucom
push
nop
leave
jge
pop
jmp
mov
push
jmp
xchg
mov
xchg
and
test
retf
mov
push
dec
iret
mov
xchg
out
iret
push
lea
jl
int3
shl
enter
sub
jb
jmp
jp
sbb
xor
or
daa
jge
repz
add
or
xchg
sbb
jge
test
cwde
rcr
push
and
(bad)
enter
xor
push
or
and
aam
add
jbe
xor
add
mov
in
jae
hlt
or
les
imul
push
inc
push
push
mov
pop
cmp
dec
shl
enter
in
mov
adc
je
mov
sti
and
adc
leave
inc
or
retf
adc
into
ret
push
sbb
sub
loop
mov
mov
popa
leave
daa
adc
fmul
aam
shr
shr
ficomp
sbb
pop
xchg
push
xchg
mov
dec
outs
addr16
sbb
call
pop
mov
and
(bad)
or
sbb
not
adc
xor
mov
fnstsw
call
mov
push
sub
push
jns
or
or
in
ret
in
jle
shl
je
push
sub
mov
shr
jle
out
shl
das
fidiv
loop
add
dec
retf
sbb
sbb
mov
adc
inc
and
rcr
mov
inc
ss
mov
sub
ror
dec
jno
icebp
push
jg
mov
push
add
mov
mov
dec
fwait
sahf
and
fwait
outs
inc
cmp
and
jbe
jno
dec
push
bound
test
sbb
call
and
mov
sub
push
inc
sbb
lods
or
daa
ins
xor
in
in
vpmovzxbw
addr16
sbb
sub
(bad)
or
adc
pop
in
retf
nop
retf
pop
and
fwait
inc
sub
cmps
jae
jmp
ja
sbb
sub
icebp
int3
aam
std
jnp
gs
ss
pop
jo
adc
xor
mov
je
dec
jl
and
mov
cmp
clc
pop
xchg
shl
(bad)
jg
and
lock
test
xchg
mov
mov
cmc
pusha
dec
ins
fwait
lahf
push
ins
dec
add
inc
nop
(bad)
repz
pop
aad
shr
sub
pop
xchg
sub
or
test
test
into
mov
outs
xchg
fsub
test
test
dec
cmp
jb
jge
push
std
push
push
das
rol
add
and
adc
cdq
pop
xor
jge
push
jb
outs
mov
(bad)
mov
mov
jmp
push
mov
into
test
inc
xchg
xor
inc
sub
mov
add
jmp
mov
mov
mov
add
fdiv
cmc
xchg
gs
(bad)
xchg
jge
repnz
and
jns
imul
mov
add
push
mov
pop
xor
loope
inc
push
int
aad
imul
ins
stos
leave
repnz
jb
mov
or
mov
repnz
loope
leave
fbstp
push
call
int
in
(bad)
mov
sbb
mov
inc
gs
movs
mov
repnz
loope
sbb
push
push
inc
imul
cmp
inc
xor
cmps
jb
loop
ror
das
int3
sub
jae
jne
pop
cs
pop
xor
sbb
mov
cdq
fild
dec
push
in
repz
das
push
and
mov
or
pusha
movs
leave
test
mov
out
rol
sbb
sbb
or
or
dec
(bad)
cmp
cmp
dec
and
or
dec
xchg
mov
or
jae
movs
cmp
dec
mov
sub
dec
push
mov
hlt
pop
sub
repz
dec
int
ss
in
hlt
pop
push
dec
add
ss
push
xchg
and
sbb
lea
push
jnp
xchg
popf
fxch
push
(bad)
xchg
xchg
add
mov
pop
mov
cs
dec
dec
cwde
jne
aam
inc
fiadd
(bad)
ins
inc
mov
add
pusha
lds
test
shl
cmp
and
jae
into
mov
adc
imul
sub
int3
fbld
or
push
cld
mov
pusha
xchg
jge
xor
mov
push
je
into
sbb
std
rol
ins
xor
lds
sub
mov
cmp
mov
jb
rcr
sub
jne
jbe
xor
push
mov
cmps
(bad)
(bad)
adc
pop
sub
popf
mov
inc
mov
into
mov
inc
mov
shl
dec
and
icebp
mov
enter
lods
aaa
xchg
add
test
jbe
cmc
cdq
cmp
mov
out
movs
icebp
(bad)
gs
lock
xchg
je
mov
cld
mov
mov
jae
sbb
mov
bound
inc
retf
fcmove
ret
cli
mov
gs
mov
jmp
mov
repz
aam
sub
adc
les
ins
(bad)
fisttp
pop
xor
cdq
inc
and
call
scas
adc
clc
(bad)
adc
sub
dec
push
sbb
and
hlt
cmps
add
mov
ret
cmp
add
dec
xchg
cmp
scas
add
dec
neg
adc
aam
cs
mov
sub
or
jae
add
stc
mov
gs
jnp
and
inc
sti
out
inc
in
xchg
add
scas
addr16
push
(bad)
adc
adc
xchg
mov
imul
or
mov
mov
inc
cmc
scas
fwait
dec
mov
xchg
mov
mov
mov
jnp
mov
popf
retf
enter
mov
inc
inc
das
loop
stos
lods
das
dec
push
outs
stos
and
xchg
fstp
cs
fsub
cli
mov
nop
pop
mov
and
and
movs
inc
and
add
mov
shl
clc
adc
iret
jp
jl
sub
lock
adc
rcl
(bad)
jbe
xchg
and
cmps
sub
(bad)
dec
mov
pop
push
and
xor
pop
xchg
mov
xchg
mov
sti
fst
xchg
(bad)
push
push
pop
fwait
hlt
outs
inc
test
in
cdq
fild
cvttps2pi
jg
out
xor
cmp
mov
fadd
rol
in
int
(bad)
pop
or
mov
jae
dec
inc
cmp
fld
cmp
push
movs
xor
call
mov
adc
sahf
cmp
int
pop
push
in
sbb
lods
ror
imul
repz
cs
pop
push
dec
lods
mov
aad
xor
mov
sub
mov
retf
imul
mov
fs
inc
cld
sahf
(bad)
jp
data16
out
sub
xchg
mov
pop
jle
dec
shr
movs
loop
lods
leave
or
fnstsw
es
pop
mov
add
imul
adc
das
fprem
loop
mov
rol
inc
inc
jg
inc
stc
or
or
pop
or
fisttp
repz
sar
lods
cli
sahf
retf
sahf
movs
or
or
pop
xchg
outs
sub
push
push
mov
test
outs
mov
mul
xor
mov
adc
sub
jge
pop
mov
or
mov
stos
movs
bound
rol
mov
and
xor
neg
and
stos
xchg
jmp
mov
dec
jo
and
(bad)
loopne
pop
ror
retf
pop
and
fisubr
xor
je
cmp
clc
xlat
push
lds
enter
sbb
pop
mov
push
dec
fadd
mov
push
add
addr16
inc
ins
nop
loope
outs
lock
inc
xor
pop
out
movs
cmp
(bad)
leave
jo
mov
loopne
int
sub
aam
outs
ret
xchg
push
cdq
lahf
xor
cld
mov
ss
adc
or
ins
ret
inc
ds
mov
jle
push
mov
cmps
aaa
repnz
add
das
lds
push
loop
in
sub
and
pop
movs
pop
call
loopne
inc
loop
or
pop
cmp
movs
jp
ret
push
sbb
(bad)
add
push
pushf
sbb
cmp
add
mov
mov
sbb
ret
xor
and
xchg
aam
adc
or
into
das
dec
push
mov
push
mov
cmps
bound
or
aad
inc
fs
jg
stos
mov
mov
xchg
xchg
adc
aaa
pop
mov
es
xchg
frndint
pop
push
xchg
cmp
imul
mov
mov
es
sub
sub
(bad)
pop
xchg
sub
mov
sar
pop
frstor
scas
mov
scas
popa
ins
bound
test
mov
push
stos
dec
push
sbb
jne
test
lahf
push
mov
adc
xor
mov
fstp
add
ss
and
jnp
icebp
in
and
sti
rcr
(bad)
mov
enter
gs
cmc
pop
xchg
movs
push
arpl
mov
imul
jg
mov
movs
push
jp
push
mov
or
fist
rcr
enter
aam
idiv
retf
or
dec
neg
inc
or
mov
push
mov
aam
pop
out
aas
jg
jg
test
fst
dec
lods
fwait
mov
or
movs
retf
loop
pop
sub
call
xchg
fild
inc
jge
or
pop
cmp
xor
jbe
or
add
and
and
mov
ret
jmp
xor
mov
cwde
xlat
mov
es
popa
cmp
and
inc
jno
ss
clc
dec
mov
inc
dec
fisttp
fdiv
sar
pushf
std
call
mov
pop
mov
xor
ficom
into
mov
ins
mov
mov
out
repz
sar
mov
sahf
mov
retf
sbb
adc
(bad)
adc
or
nop
and
in
add
fdiv
sub
adc
(bad)
inc
(bad)
xor
inc
bound
stos
and
mov
jbe
std
sbb
fisub
push
enter
dec
dec
cld
pop
ja
pusha
jbe
xchg
push
pusha
push
mov
mov
xchg
imul
pusha
inc
jmp
mov
xchg
jl
inc
jecxz
(bad)
ret
push
cmp
pop
push
fbstp
cmp
(bad)
xchg
js
mov
in
xchg
jecxz
gs
inc
mov
repz
mov
cmp
out
out
pop
repz
sub
jb
shr
mov
push
mov
fbld
stos
mov
inc
push
mov
push
pop
jnp
mov
fdivr
pop
pop
sbb
test
xor
sbb
jne
sbb
icebp
cli
movs
sbb
dec
jo
aaa
aam
cmp
mov
ja
mov
int3
mov
xchg
arpl
xor
lahf
push
test
lock
aaa
mov
sahf
cmp
call
repz
stos
jp
pop
jl
ss
std
xor
mov
cmp
and
fidiv
and
pusha
in
fs
jp
call
inc
ror
lahf
iret
xchg
xchg
out
or
pop
and
jne
cmp
in
pop
dec
and
lahf
out
ins
(bad)
in
inc
and
test
pop
rcr
dec
std
and
pop
jg
movs
sbb
dec
in
ror
cmp
sbb
mov
movs
dec
test
inc
or
popf
fimul
(bad)
test
mov
ret
ss
sub
xchg
leavew
(bad)
es
imul
(bad)
push
div
loop
lock
cdq
push
and
mov
pop
movs
pop
pop
or
imul
ret
lods
fild
mov
mov
loop
push
aas
mov
sub
xchg
push
dec
or
(bad)
xor
or
ret
test
xchg
push
or
cmp
adc
fdiv
sbb
xor
movs
and
or
ret
int3
mov
xor
icebp
fucomp
aam
mov
imul
push
pop
dec
mov
add
pusha
inc
(bad)
packssdw
addr16
push
cs
xor
fdiv
pop
push
push
retf
jne
jge
(bad)
mov
pop
loope
movs
or
movs
xchg
mov
pop
adc
stc
mov
cmc
out
scas
cmp
dec
mov
pusha
movs
gs
mov
adc
adc
into
inc
or
std
sub
mov
cmc
std
inc
aas
test
sbb
icebp
adc
fadd
in
pop
xor
test
push
or
mov
inc
out
leave
inc
retf
mov
test
pop
push
popa
pop
mov
out
fistp
pop
loope
mov
xchg
jmp
jmp
arpl
retf
dec
cwde
ins
mov
dec
mov
add
out
mov
or
pop
cmps
mov
mov
and
mov
imul
push
outs
dec
xor
leave
dec
add
test
cmp
or
aad
mov
sbb
(bad)
in
xchg
xor
outs
icebp
sub
(bad)
stc
lock
adc
cmc
xchg
push
xchg
push
or
out
repz
shl
cmps
sbb
mov
push
lahf
xchg
or
inc
cld
hlt
sbb
aas
loope
retf
pop
scas
cmp
mov
sbb
pop
cmp
aaa
iret
fisubr
xchg
mov
hlt
mov
in
or
or
(bad)
lea
push
cwde
inc
inc
(bad)
and
push
mov
jb
pushf
enter
and
jo
fild
int3
mov
add
push
icebp
(bad)
mov
sbb
xchg
cmp
std
mov
aaa
pop
stos
dec
cdq
sbb
jae
std
sahf
xchg
fs
mov
mov
fidiv
adc
fnsave
repnz
mov
mov
test
xor
cmps
(bad)
icebp
jno
leave
pop
mov
jmp
gs
retf
and
inc
imul
add
jne
icebp
push
jg
out
dec
in
cli
dec
mov
pop
xor
sub
sbb
arpl
int3
mov
in
push
push
jae
mov
into
adc
clc
out
(bad)
out
sbb
sbb
popf
cmp
das
movs
mov
push
push
nop
scas
out
jg
es
xchg
imul
loop
das
and
jl
or
ror
pop
sub
scas
jne
dec
pop
dec
repnz
mov
cld
scas
mov
cdq
pusha
aaa
imul
and
inc
cmovns
adc
dec
loop
sti
sbb
jmp
adc
ins
mov
cmps
jl
lea
mov
adc
xor
adc
loop
dec
fld
cmps
or
sub
push
loop
push
add
sahf
and
push
mov
into
retf
push
xchg
stc
(bad)
and
(bad)
xchg
fmul
jmp
or
xchg
mov
mov
fmul
mov
sub
mov
gs
add
push
xor
fnsave
cmps
inc
fidiv
pop
mov
retf
out
enter
pop
jecxz
ins
ja
pop
addr16
mov
mov
jb
stos
in
(bad)
cmc
mov
xchg
test
inc
xchg
xlat
loopne
fldcw
in
stos
dec
pop
or
fisubr
ins
pop
retf
cwde
stos
sub
ins
inc
push
stc
js
and
xor
std
sahf
inc
mov
gs
(bad)
or
push
aad
pop
gs
ret
popf
jecxz
aas
or
xor
sub
jp
idiv
sub
out
pop
dec
and
mov
test
sti
lahf
xlat
add
test
(bad)
retf
in
and
pushf
cmp
pop
jl
movs
dec
stc
pop
mov
outs
mov
and
add
jmp
jg
out
xor
pop
lods
jge
popa
cmp
fsubr
dec
cmp
rcr
cmps
(bad)
repnz
test
stc
or
cmp
mov
sub
les
sub
(bad)
imul
fadd
cdq
repz
pop
xchg
test
enter
sub
add
call
pop
call
dec
xor
dec
mov
cli
xor
pop
mov
mov
hlt
push
or
lods
out
scas
or
dec
fistp
inc
mov
mov
push
add
imul
aaa
jnp
xchg
mov
sub
dec
cmc
mov
add
test
mov
shl
inc
dec
dec
jg
sbb
xor
aad
and
movs
out
jge
enter
loope
stos
mov
dec
pop
jnp
rcl
mov
cmp
jmp
mov
out
rcl
adc
mov
mov
push
shr
or
sub
jmp
int
and
mov
imul
cmps
dec
jns
jb
aam
add
pop
shl
out
cld
mov
adc
ror
ret
into
lds
adc
inc
rcr
inc
out
inc
mov
or
(bad)
fisubr
nop
push
mov
pushf
and
cmc
and
cld
test
sub
out
(bad)
cmp
mov
or
adc
add
jl
packsswb
out
or
stc
jge
mov
imul
(bad)
clc
into
or
(bad)
mov
mov
(bad)
jmp
dec
add
call
inc
jmp
es
stos
mov
or
sbb
or
fcomp
sub
data16
xor
loopne
or
adc
adc
push
and
(bad)
cmc
fnsetpm(287
pop
inc
into
mov
hlt
xchg
add
imul
rcr
dec
dec
adc
loop
mov
adc
sbb
or
sub
mov
cdq
mov
or
push
pop
lea
in
push
fisub
nop
fimul
adc
fisubr
cmp
push
or
jbe
out
push
xchg
sahf
mov
add
hlt
add
xlat
popa
jecxz
rcl
xor
sub
sbb
and
(bad)
mov
out
inc
adc
das
cmp
ja
and
sub
loop
sub
div
leave
fdiv
xchg
jp
loop
jmp
pusha
and
and
cs
in
jge
pop
std
jge
xchg
pop
lock
jle
jp
xchg
daa
push
out
pop
(bad)
test
jmp
popf
and
mov
push
mov
mov
cmp
in
or
add
lods
je
leave
mov
mov
sub
nop
pop
fwait
(bad)
aas
shr
movs
ret
ror
lahf
movs
mov
test
and
retf
in
pop
fdivr
das
push
add
xor
cmp
lods
fcomp
cld
into
xor
scas
push
mov
fldenv
dec
inc
mov
pop
(bad)
stc
and
adc
fild
lock
rcr
cwde
pop
imul
mov
fwait
test
or
mov
or
sbb
or
fdivr
hlt
pop
ss
ds
movs
inc
xchg
ins
icebp
add
pop
stos
adc
cmp
sbb
mov
mov
jae
xlat
sbb
sub
fwait
xchg
and
gs
neg
mov
into
fstp
or
push
rcl
pusha
xor
sbb
or
loop
sbb
movs
adc
and
mov
retf
ret
cli
add
pop
xlat
dec
xchg
gs
stos
outs
fucomp
sub
pop
(bad)
jbe
mov
aam
xor
(bad)
lods
shl
out
daa
inc
pop
push
xchg
movs
ficomp
sbb
fsubp
sbb
mov
aad
mov
push
loope
jb
adc
shl
fcomp
stos
cmp
imul
mov
lahf
sbb
call
outs
paddd
or
aaa
push
add
sub
lock
out
cmp
dec
mov
popa
pop
adc
fadd
pop
add
lods
repnz
mov
ret
cmps
push
cmp
dec
xchg
mov
ins
dec
or
mov
data16
mov
pop
pop
sbb
adc
loopne
popf
inc
nop
(bad)
mov
imul
pop
mov
jg
xor
cmp
mov
(bad)
jns
cmc
add
or
fmul
gs
fs
mov
mov
fstp
vpsraw
mov
jecxz
mov
icebp
in
outs
loopne
(bad)
xor
or
repnz
add
and
rcr
pop
xchg
int
aas
push
fucomi
cmp
cmps
adc
xchg
(bad)
mov
add
mov
std
adc
(bad)
pushf
daa
adc
sub
mov
pop
int
loopne
rol
pushf
add
arpl
add
in
das
cwde
add
cmp
mov
dec
imul
push
ja
mov
sub
mov
pop
xor
out
and
sub
into
adc
ror
mov
pop
jns
or
and
push
ins
xchg
loopne
jno
stc
pop
cmp
pusha
sahf
repz
inc
lds
lods
movs
pusha
sub
adc
xchg
jle
leave
and
push
adc
xor
stc
rcl
mov
push
jg
ret
push
cmp
and
dec
adc
popf
jb
ret
test
or
stos
std
jo
lods
add
imul
call
pop
sub
shl
aad
mov
sbb
push
rcl
mov
pop
inc
out
mov
ret
or
adc
iret
sbb
ret
xor
sbb
popa
jo
sbb
inc
jne
add
out
jmp
mov
int
add
xchg
not
xor
test
fdivr
xchg
mov
(bad)
dec
(bad)
push
rep
add
fmul
xor
mov
lds
repz
ss
xor
pop
cmp
jne
inc
xchg
xchg
adc
xchg
js
repz
test
sbb
sbb
data16
xor
test
movs
mov
sbb
dec
dec
or
in
xchg
xchg
ins
cmp
test
pop
push
cmp
add
rcr
jl
add
enter
test
les
inc
movs
jmp
sub
mov
out
jg
dec
lahf
xchg
jns
jnp
lahf
(bad)
in
xchg
(bad)
outs
movs
xor
ds
fwait
(bad)
repnz
add
sbb
sub
outs
lahf
and
nop
popf
fxch
jmp
mov
push
pusha
arpl
iret
mov
sbb
scas
dec
sbb
push
ds
pop
cli
movs
iret
bound
sbb
loopne
push
shl
jb
mov
hlt
sbb
sub
and
push
sbb
push
shr
sahf
jmp
loopne
addr16
not
cld
and
jmp
ds
aad
or
xchg
cmp
movs
and
xor
std
pop
scas
push
retf
sbb
mov
xchg
into
lods
jle
(bad)
dec
or
jno
mov
repnz
rcl
xor
ja
(bad)
mov
std
test
cmp
bound
lahf
jns
dec
push
pop
data16
adc
test
xor
loope
repz
je
jmp
xchg
les
jge
xchg
pop
dec
jl
imul
fstp
sbb
mov
xor
shl
(bad)
push
jo
dec
xlat
clc
cmps
dec
and
scas
test
xchg
add
ss
mov
test
fisub
push
or
or
push
jns
call
and
or
adc
push
mov
cmp
push
mov
push
fdiv
or
mov
xchg
fisubr
int3
pop
sbb
and
(bad)
cmp
ja
adc
test
in
pusha
in
jbe
inc
daa
and
fwait
lds
popf
sbb
inc
jne
mov
and
int3
imul
sub
xchg
retf
dec
test
mov
mov
(bad)
cwde
jmp
aad
sub
cmp
mov
fwait
shl
sahf
pop
cmp
jl
aam
mov
cmc
xor
mov
pop
or
pop
mov
das
aas
lods
mov
mov
push
inc
xchg
mov
add
fdiv
outs
aam
mov
jle
xchg
mov
icebp
movs
mov
out
dec
or
ja
test
lea
and
pop
xchg
xchg
into
pop
aam
push
mov
push
xchg
push
cli
in
adc
push
dec
push
cmps
cs
xchg
inc
ins
jp
add
inc
cdq
sti
jb
mov
cwde
pop
push
fmulp
and
imul
pusha
sbb
fcomp
mov
mov
dec
rcl
std
push
test
jle
mov
cmp
retf
cmp
mov
mov
lea
pop
bound
fldenv
and
cwde
aad
push
cmp
repz
sub
mov
push
jo
fld
inc
mov
or
nop
push
ret
scas
(bad)
cmps
lods
push
fild
(bad)
int
jecxz
fs
xchg
sub
pop
stc
mov
mov
std
and
mov
push
outs
xlat
dec
push
hlt
fisttp
push
jl
xchg
adc
movs
lea
push
call
add
(bad)
int
xchg
lahf
xchg
dec
sar
dec
call
and
pop
pusha
gs
or
es
cwde
push
cwde
in
add
in
and
push
inc
je
adc
mov
or
mov
pop
xchg
ins
xchg
dec
(bad)
sbb
ss
call
lods
cmc
pop
pop
out
pop
(bad)
push
lods
ds
add
add
lea
mov
data16
and
aaa
mov
fidivr
retf
retf
sub
call
add
fcmovb
jae
xchg
clc
int3
bound
rol
mov
or
pop
and
test
mov
adc
pop
add
adc
retf
and
sbb
retf
or
push
sbb
mov
(bad)
mov
mov
add
lods
ja
fprem
lods
std
dec
cmp
xor
mov
sbb
(bad)
mov
push
inc
add
pop
lods
in
push
(bad)
out
cmp
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
jg
add
btc
ficom
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ins
sub
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
jbe
or
test
adc
jbe
fdiv
fistp
ins
mov
add
jmp
xor
mov
add
push
xchg
ss
push
pop
aad
ins
dec
xchg
addr16
sti
scas
aas
aaa
dec
mov
ror
repnz
mov
inc
push
int
scas
xor
cmps
call
xchg
jo
xchg
inc
pushf
pop
or
pop
addr16
(bad)
test
dec
cmps
xchg
mov
add
fsubr
(bad)
jecxz
jge
push
lock
dec
push
cdq
mov
mov
dec
sar
or
imul
mov
pushf
or
mov
xchg
pusha
cmp
clc
stos
dec
xchg
mov
retf
in
fistp
push
xchg
repnz
mov
mov
cmp
mov
push
icebp
dec
sub
call
add
sub
mov
ficom
and
dec
dec
inc
sbb
addr16
jl
lods
test
stos
out
(bad)
adc
or
enter
repnz
sbb
call
cmp
clc
std
xor
and
and
mov
imul
cmps
add
outs
pop
jge
not
repz
cmc
gs
mov
mov
pop
jno
icebp
test
pusha
pop
scas
aad
pop
mov
ret
adc
push
pushf
iret
test
or
inc
loopne
enter
(bad)
iret
outs
or
sbb
stc
arpl
iret
push
shl
pushf
mov
adc
loope
test
jmp
shr
mov
inc
jo
cli
mov
and
in
jg
popf
mov
dec
pop
(bad)
imul
xchg
push
mov
scas
sbb
pop
cmps
dec
jns
adc
push
or
leave
xor
inc
xchg
mov
fnsave
int3
movsx
scas
fstp
loopne
aas
push
sbb
push
aas
das
xchg
cli
xchg
stos
mov
adc
aad
in
fidivr
ja
data16
ss
outs
xlat
adc
add
out
xchg
shr
aad
(bad)
aad
jae
sub
and
adc
mov
jbe
scas
mov
and
enter
cld
in
mov
cmp
xor
pop
das
and
sbb
xchg
test
ins
aas
ret
test
(bad)
xchg
cwde
icebp
jmp
addr16
lea
cli
cli
mov
fiadd
adc
pop
mov
dec
call
sbb
es
shl
jmp
xchg
pop
int3
mov
xor
idiv
cwde
addr16
mov
lds
std
dec
rol
loope
mov
inc
jge
jmp
out
iret
ror
jbe
cdq
pop
lds
push
xchg
aam
add
sti
cmps
retf
add
into
pop
lods
pop
shl
(bad)
fwait
shr
ret
scas
cld
bound
jl
sub
cmps
ret
jg
xchg
inc
mov
adc
jns
cld
mov
scas
icebp
aaa
push
xchg
repnz
add
je
push
jo
xor
mov
(bad)
aas
mov
les
mov
inc
push
mov
push
lock
inc
ja
sub
sbb
xor
int3
xchg
out
(bad)
mov
(bad)
mov
out
jmp
(bad)
rcr
popa
mov
sbb
pop
retf
push
inc
addr16
stos
jbe
mov
pop
je
loop
imul
clc
in
in
adc
int
and
jg
std
loope
loope
aad
and
inc
call
xor
repnz
nop
xchg
fimul
in
cmp
sub
and
push
push
mov
push
inc
mov
jae
sbb
(bad)
(bad)
aad
pop
sub
mov
jo
test
into
in
aaa
stos
adc
int3
inc
mov
cmp
fwait
adc
test
enter
(bad)
int
enter
mov
aaa
sbb
dec
stc
ja
xor
test
in
out
bound
mov
lock
jmp
popa
sbb
dec
or
mov
mov
pop
cdq
int
adc
mov
call
std
pop
icebp
mov
fidivr
aaa
arpl
add
loope
xlat
mov
pop
aam
mov
xchg
push
push
js
aaa
xchg
scas
pop
cmp
out
daa
add
mov
loopne
cmp
or
gs
or
xchg
aaa
pop
and
repz
or
push
inc
inc
mov
lock
jecxz
lods
mov
add
or
or
xchg
shl
and
adc
xchg
sub
mov
push
out
lock
sub
test
inc
jl
lea
not
cld
mov
xor
and
jp
pusha
ror
add
cmp
xchg
xor
mov
push
aaa
stc
inc
es
fnsave
jmp
ins
les
imul
xor
jge
loope
pushf
lock
leave
stc
dec
pop
call
aaa
mov
mov
mov
inc
shr
add
push
pop
aad
push
ins
mov
ins
add
(bad)
xor
dec
(bad)
int
div
dec
out
retf
shr
jmp
cmp
imul
dec
push
jmp
inc
and
lods
out
lea
push
std
push
lods
jecxz
iret
test
ds
xchg
xchg
or
mov
push
inc
test
mov
xchg
xchg
shr
xor
shl
frstor
test
xor
and
cmps
mov
les
mov
xor
cs
mov
adc
popa
sub
mov
test
test
xchg
dec
mov
popa
movs
and
repz
jp
mov
js
sbb
in
xchg
and
nop
adc
or
jmp
call
popf
(bad)
outs
mov
cld
pushf
and
inc
push
pop
pop
xor
clc
xchg
gs
int
pushf
dec
sahf
pop
jecxz
sti
xchg
icebp
xchg
sub
enter
idiv
shl
leave
icebp
sub
inc
adc
mov
cmp
aaa
mov
adc
or
iret
sbb
sub
and
xor
push
inc
out
or
lea
mov
cmp
mov
loopne
lods
mov
pop
loopne
daa
and
movs
pop
ret
aaa
rcl
bound
push
fwait
aad
popa
mov
dec
setle
mov
dec
inc
mov
in
in
movs
mov
mov
cli
pop
mov
stos
lock
in
mov
cmp
xor
repnz
les
(bad)
out
mov
out
jl
arpl
nop
ror
xor
in
jo
in
sbb
mov
(bad)
xor
push
sbb
adc
add
sbb
retf
pop
push
repz
cmp
push
push
imul
mov
(bad)
cmp
loopne
cmp
mov
xchg
nop
pop
adc
fild
es
movs
cmc
rol
cmc
in
push
push
jne
repnz
jne
sahf
out
pop
push
cmp
outs
jg
mov
sub
in
ror
sar
mov
fnstsw
adc
shld
sbb
xchg
sub
mov
pop
add
and
fnstcw
xchg
ins
data16
mov
xor
add
imul
popa
and
jae
(bad)
fidiv
pop
inc
jl
stos
fadd
cmps
scas
mov
test
addr16
mov
pop
jno
stos
add
mov
sar
and
xchg
ins
test
xchg
jns
addr16
xor
frstor
lock
mov
sahf
pop
or
push
adc
call
lds
xchg
sbb
xchg
mov
xchg
imul
pop
xchg
sub
movs
retf
sbb
cmp
sbb
pushw
mov
lds
pop
lock
inc
sub
xor
or
das
xchg
push
inc
push
xor
sub
retf
rcr
sbb
xchg
mov
pop
xchg
lahf
jb
lds
xor
adc
or
retf
sti
scas
test
les
call
fcmovnbe
ins
xchg
sub
mov
out
mov
cs
iret
mov
(bad)
dec
idiv
popf
push
pop
cmp
mov
adc
adc
aam
mov
test
push
int3
neg
sar
mov
push
mov
sub
fwait
jns
xchg
or
and
mov
dec
push
pop
or
cdq
sub
and
fwait
jne
sahf
pop
fstp
ja
and
into
test
add
dec
fadd
repz
test
fild
ret
mov
add
sub
popf
pop
aad
enter
mov
mov
fs
out
std
sub
jp
cmc
xchg
es
test
call
sub
test
lahf
call
dec
jl
addr16
dec
inc
(bad)
fdiv
mov
pop
mov
lock
mov
cmps
inc
enter
rcl
xor
inc
frstor
(bad)
and
lods
jg
push
adc
pop
jp
xchg
fisub
bound
sbb
xlat
sbb
jno
iret
sbb
int3
push
cmps
enter
fs
sub
push
mov
sti
retf
xor
add
seta
shl
stc
jne
cmp
add
inc
pushf
add
push
or
sub
in
es
mov
pop
mov
push
jno
in
sbb
dec
ret
ss
sbb
jge
sbb
(bad)
mov
xchg
call
mov
pop
sub
dec
fnstenv
bound
jl
shr
mov
pop
and
xor
mov
popf
xchg
cmps
jmp
mov
push
sub
lahf
inc
js
mov
test
jb
aaa
into
dec
jmp
xchg
cwde
cld
mov
xor
(bad)
lods
lahf
push
xchg
aad
aas
dec
loopne
cld
jle
cmp
or
push
push
push
jl
(bad)
je
lods
rcl
out
and
inc
loop
outs
pop
pop
stos
aas
pop
enter
jbe
push
inc
dec
adc
and
adc
es
or
sar
out
cmps
out
xchg
ins
sbb
pop
jmp
inc
std
(bad)
dec
or
pushf
or
addr16
adc
movs
data16
jnp
mov
int3
cmp
add
std
stos
jmp
ins
jb
xor
push
pop
sti
(bad)
sbb
sub
mov
scas
sub
test
sahf
dec
mov
mov
pop
xchg
mov
shl
jnp
fnstenv
ins
retf
sti
mov
push
out
stc
jecxz
bound
push
sub
cmp
lahf
dec
fnsave
in
push
ds
jg
pop
mov
or
add
mov
sub
sub
push
ins
pop
pusha
add
inc
(bad)
mov
out
inc
pop
xchg
jle
ins
add
xchg
aad
jno
ret
cmc
and
(bad)
cmps
adc
sub
retf
int
sub
sub
cli
popa
scas
in
rcr
dec
and
pop
jmp
xchg
out
lods
push
repz
loop
mov
and
ret
sbb
loop
rol
inc
popf
sub
add
xchg
or
ffreep
and
push
imul
adc
pop
jge
repz
or
dec
jae
xchg
push
mov
popf
fistp
mov
ins
jle
shl
jmp
jecxz
mov
cs
je
imul
sub
(bad)
cmps
inc
sub
call
cmps
shr
ror
leave
xchg
add
and
pop
inc
push
sahf
cmc
sbb
inc
fist
(bad)
sar
inc
rcr
mov
dec
cmps
jne
pusha
push
not
push
xor
int3
(bad)
out
sbb
mov
mov
push
add
add
jge
sti
xchg
dec
push
int
inc
pop
test
ss
pop
rol
sub
fadd
mov
cmp
fnstcw
aaa
cmps
sub
inc
adc
shr
movs
into
sub
fbld
scas
push
nop
gs
xchg
ins
pop
retf
mov
scas
cld
dec
ss
or
aad
cmp
cmp
inc
xlat
push
sbb
adc
cmp
mov
ja
idiv
and
pop
push
fld
add
test
mov
inc
mov
dec
dec
cmp
outs
mov
sti
push
sub
lods
in
push
test
cmp
scas
(bad)
pop
cmp
dec
test
arpl
xor
adc
jmp
lock
xor
fsubr
add
in
ds
ins
addr16
sub
lock
pop
mov
pop
xor
div
gs
fdivr
or
inc
pop
outs
mov
imul
fidiv
xchg
add
shl
or
(bad)
add
ja
fisubr
jecxz
and
cmp
add
sbb
mov
sbb
xchg
xlat
data16
xor
js
bound
ins
ss
cld
inc
sub
adc
in
scas
pop
push
cmp
fucomip
daa
mov
enter
clc
or
and
movs
jmp
push
ja
dec
pop
inc
mov
retf
movs
mov
xlat
dec
mov
add
sar
or
stc
loope
and
dec
lahf
fiadd
stos
and
inc
aaa
daa
call
in
dec
test
xchg
sbb
mov
adc
push
ficomp
inc
adc
clc
mov
sbb
(bad)
leave
scas
mov
xor
shl
dec
cmps
imul
sub
inc
ds
jmp
xor
loope
bsf
xchg
setae
pusha
aam
aam
les
scas
push
xchg
push
gs
xchg
xchg
aas
cmp
and
loop
push
hlt
mov
push
es
pop
fisttp
and
js
inc
ror
pop
cmps
aas
mov
inc
mov
inc
push
mov
sbb
dec
inc
and
fwait
dec
ficom
cmp
xchg
pop
jmp
cs
inc
stc
push
add
dec
or
fnsave
pop
fcomip
cmp
sahf
xchg
pushf
inc
not
jne
jnp
hlt
pop
fcom
in
ds
(bad)
popa
fld
dec
ret
movs
std
dec
or
repz
fistp
push
icebp
in
imul
mov
dec
push
(bad)
push
dec
clc
cwde
test
(bad)
jns
mov
iret
neg
ins
imul
adc
cmp
hlt
cmp
add
in
xor
movs
pop
xchg
adc
xchg
pop
push
sub
jb
test
mov
(bad)
pusha
mov
xor
mov
mov
inc
adc
cmp
mov
xor
sti
fcomp
imul
stc
cmc
je
movs
cmp
push
rcr
addr16
dec
ss
fsubr
and
pop
aam
ffree
inc
cmp
or
inc
sbb
(bad)
popf
add
dec
out
inc
movs
or
pop
call
mov
aas
in
shl
push
int
and
ins
add
xchg
aad
inc
push
mov
xor
adc
mov
xchg
push
shl
dec
clc
pushf
das
mov
and
fsubr
std
push
sub
add
jmp
add
or
jo
adc
sub
xlat
inc
sbb
push
inc
mov
std
push
xlat
adc
je
sbb
cmp
iret
pusha
xlat
rol
jmp
fdivr
sar
mov
dec
dec
xchg
aam
and
mov
fstp
push
or
rcr
mov
mov
lods
adc
iret
cmc
dec
pop
pop
fst
add
mov
fprem
dec
or
pop
cmp
iret
push
sbb
in
idiv
call
jmp
sbb
or
pop
scas
call
loop
shl
sub
inc
das
cmps
jno
mov
push
lahf
pop
mov
adc
jne
push
test
(bad)
or
cs
inc
dec
fisubr
add
adc
call
jnp
enter
inc
ja
stc
div
aas
mov
add
inc
sub
mov
mov
inc
out
aad
sub
pop
cdq
loopne
xchg
das
jecxz
inc
sbb
jae
repz
and
(bad)
fisub
push
push
adc
test
stos
mov
mov
dec
loopne
pop
xor
pusha
cli
je
retf
xchg
push
sub
inc
inc
in
mov
dec
pop
add
mov
stos
jmp
and
pop
(bad)
sub
mov
cmps
push
movs
shr
ret
add
cmc
mov
mov
aas
mov
sub
pushf
jle
addr16
icebp
cmp
mov
and
or
push
repz
fisttp
mov
push
stc
pop
aad
gs
adc
jl
sbb
xchg
mov
mov
dec
or
outs
jae
mov
pushf
punpckhdq
ins
imul
sahf
in
jb
cwde
rcr
cdq
mov
pop
mov
jp
adc
icebp
sub
jmp
outs
sub
fld
jo
jecxz
pushf
jne
sub
push
ficomp
aad
or
xor
xor
mov
jae
popf
pop
fidiv
mov
out
jae
into
and
mov
fcomi
scas
arpl
xchg
jb
sub
mov
js
sbb
imul
pop
cs
sub
inc
ror
sbb
xchg
mov
lods
movs
sub
dec
shl
fstp
aam
repz
push
(bad)
sbb
sub
aad
scas
stc
xlat
cmc
stc
mov
addr16
push
pop
lahf
cmps
ss
out
rol
and
cld
fidivr
push
fstp
or
icebp
or
daa
imul
or
div
push
mov
xchg
cmp
gs
and
push
call
cwde
repz
scas
or
and
fidiv
pop
jbe
push
jecxz
add
or
push
(bad)
in
sahf
pop
cmp
dec
popa
mov
test
pop
into
fcom
sub
dec
in
jge
or
or
jb
and
and
sbb
repnz
imul
pusha
repz
out
jne
mov
lea
outs
xor
ret
cmp
iret
setns
push
sbb
into
push
ins
add
les
(bad)
stc
outs
mov
stos
in
push
rcr
aam
test
cld
adc
call
xchg
cmp
jmp
xchg
into
in
cs
sbb
movs
jmp
ficom
adc
mov
mov
xor
mov
mov
inc
xchg
lods
mov
add
sbb
rcl
inc
add
cmp
aam
rcr
or
enter
enter
fimul
movs
mov
mov
and
inc
aam
int3
repz
jmp
shl
cmp
es
inc
mov
push
push
mov
fld
jge
adc
inc
jbe
aam
mov
outs
sub
in
push
ret
xchg
add
xchg
mov
mov
and
fistp
out
cmp
int
test
out
inc
jp
ret
jge
out
rcr
jge
scas
pop
dec
enter
icebp
and
lods
jge
mov
std
push
loop
lods
sbb
add
cmp
fild
pop
je
xchg
icebp
fs
in
add
out
mov
jg
push
(bad)
neg
mov
jbe
add
in
lahf
rcl
sbb
jle
inc
not
add
or
dec
rcr
inc
jmp
fdivp
hlt
push
push
mov
scas
repz
add
mov
popa
mov
ret
jne
sbb
outs
push
pop
outs
sub
or
pop
mov
adc
mov
sti
xchg
es
pusha
xchg
push
mov
fucomi
ss
mov
stos
jmp
(bad)
cmps
jmp
repnz
pop
push
sbb
add
xor
enter
push
xchg
sub
inc
cmp
pop
pop
aaa
test
inc
in
sbb
sbb
movs
shr
jno
(bad)
pusha
jno
mov
in
mov
dec
or
pop
sahf
cmp
push
and
mov
iret
sub
std
loopne
pusha
xlat
xor
inc
sub
(bad)
stos
addr16
leave
ss
cmc
movs
aaa
idiv
push
inc
pop
xlat
jle
ins
mov
(bad)
mov
icebp
data16
xchg
and
jg
push
je
loope
or
in
mov
add
mov
add
jnp
and
inc
push
jbe
xor
dec
stos
xor
or
sbb
mov
push
scas
cmp
push
xchg
push
jne
ret
dec
push
xchg
sbb
ds
mov
sub
mov
push
inc
sbb
test
pop
data16
test
jl
inc
inc
xchg
scas
nop
pop
and
sbb
cs
sub
xlat
xchg
adc
inc
inc
dec
push
sub
sar
mov
sub
xchg
repnz
out
jne
dec
inc
push
shr
dec
cld
scas
xchg
xor
dec
out
pop
mov
idiv
(bad)
ds
xor
cmp
ror
dec
fsubr
cli
(bad)
mov
cmp
add
jb
ja
std
xor
xchg
sar
mov
data16
pop
stos
pop
sbb
outs
mov
std
ret
adc
in
cld
or
aas
icebp
mov
jno
mov
in
inc
popf
adc
push
sub
ret
(bad)
dec
movs
mov
ds
jns
dec
fimul
shl
clc
xchg
ins
cmp
jns
push
adc
fstp
xlat
xchg
pop
mov
xor
mov
mov
pop
xchg
pop
pop
repz
lea
mov
push
fst
das
es
adc
cmp
or
test
pop
ror
out
jb
call
in
dec
out
cs
pop
or
stos
sub
imul
sbb
jae
ret
std
add
push
add
adc
xor
xor
shl
loopne
xchg
(bad)
lods
call
xor
adc
out
rcr
nop
sub
mov
mov
pop
xor
cmp
test
and
data16
xchg
jle
out
pop
mov
inc
and
cmps
cmp
mov
dec
pushf
sahf
rol
adc
sub
outs
fwait
(bad)
inc
sbb
gs
daa
arpl
xchg
call
push
mov
mov
int3
pop
rcl
dec
mov
fist
xchg
adc
enter
ror
jnp
jno
and
and
shl
adc
(bad)
test
push
jb
jp
mov
mov
addr16
cmp
push
jo
je
pop
and
cmp
mov
aas
and
addr16
rol
mov
xor
retf
add
leave
add
and
jae
pusha
leave
mov
dec
adc
jmp
nop
(bad)
ss
jbe
mov
sub
add
jle
jmp
xchg
xor
nop
push
jmp
mov
popf
push
(bad)
les
fist
stos
or
inc
(bad)
xchg
mov
mov
xchg
stos
cmp
sbb
push
nop
push
or
push
xchg
jo
and
call
pop
xor
sbb
stos
jnp
xor
cmc
mov
inc
xchg
push
xchg
retf
mov
(bad)
adc
cmps
test
add
or
bound
mov
add
imul
cmp
test
ret
(bad)
push
int3
adc
mov
imul
cmp
retf
sbb
mov
cmc
stos
andnps
call
cwde
pusha
or
xchg
push
scas
pushf
jecxz
std
cld
mov
xchg
loopne
and
dec
out
ret
push
mov
ret
retf
cmp
dec
xchg
ins
sub
push
jle
or
imul
jmp
test
mov
jl
add
jl
dec
rol
cmp
sar
aad
or
or
pop
std
ret
sbb
pop
xor
fnstenv
cmp
outs
dec
add
mov
fld
je
inc
sbb
mov
and
gs
mov
pop
xchg
rcr
shr
or
dec
inc
loopne
xchg
lods
adc
xor
sub
(bad)
cmp
jge
xor
sbb
pusha
jle
push
dec
sub
pop
cmp
dec
shr
sub
in
cdq
xor
(bad)
les
ret
inc
jmp
arpl
mov
mov
mov
hlt
jb
jecxz
pushf
nop
cs
jae
and
out
pop
leave
or
callw
or
test
mov
jns
mov
xchg
mov
ss
jno
in
mov
mov
fiadd
push
dec
sub
mov
call
adc
pop
bound
icebp
jl
popa
(bad)
imul
daa
or
loopne
(bad)
adc
or
bound
repz
mov
dec
cmp
push
push
sub
inc
jns
dec
jb
(bad)
int3
cs
pop
jno
dec
(bad)
pop
(bad)
mov
and
mov
cli
xchg
lock
inc
push
dec
sub
icebp
jmp
sub
cmp
jb
jle
aaa
sbb
pusha
sbb
adc
bnd
mov
mov
jno
or
push
add
stos
scas
mov
sub
outs
sti
sbb
(bad)
imul
lock
xchg
sub
leave
cli
(bad)
aad
or
cmp
inc
retf
dec
add
xchg
out
in
xor
stc
and
mov
mov
mov
arpl
push
std
out
add
jmp
mov
imul
daa
mov
pop
and
iret
je
mov
xchg
dec
mov
mov
xlat
lock
scas
xchg
out
jb
cmp
xor
mov
stos
ins
sbb
out
enter
repz
pop
in
sahf
ficom
and
mov
lods
les
push
dec
dec
push
ret
ror
rcl
mov
fisub
dec
nop
pusha
cmc
adc
mov
adc
xor
inc
jbe
jno
sub
das
call
mov
xor
sbb
adc
cmp
xor
and
inc
pop
jns
or
addr16
scas
sbb
lock
bound
mov
out
xchg
mov
ja
add
add
and
cmp
jbe
addr16
adc
jns
stc
sbb
ds
not
sbb
dec
call
int
fdivr
add
sbb
inc
shl
pop
cmp
adc
add
cli
es
add
(bad)
imul
aad
sbb
aaa
out
sbb
pushf
ins
imul
xor
aad
out
std
inc
adc
outs
repz
clc
or
clc
mov
sbb
jp
fisub
mov
mov
mov
ins
(bad)
aas
cmp
inc
test
push
bound
mov
arpl
and
ja
lods
xchg
add
pop
dec
repz
adc
fcom
inc
fdivr
xchg
in
sub
scas
mov
test
lahf
repz
test
cmp
gs
in
mov
movs
pop
test
or
xor
xchg
and
cs
mov
cmc
cmp
xor
jae
mov
out
out
adc
div
sub
and
jge
(bad)
leave
scas
int3
nop
and
imul
and
popa
xlat
inc
test
xor
jmp
mov
(bad)
pop
mov
sbb
and
dec
push
push
bound
xor
mov
jg
xchg
in
jb
adc
adc
xchg
repnz
in
popf
sbb
mov
sub
ret
dec
jo
fisubr
push
stc
outs
call
mov
popa
or
mov
(bad)
popa
mov
pop
into
sub
repnz
popa
stc
mov
fsubr
fimul
jne
xchg
xchg
pop
xchg
repz
jb
xchg
or
cmps
mov
cmp
mov
jp
adc
scas
idiv
imul
jmp
shl
mov
es
fldcw
push
ret
nop
mov
rol
push
jecxz
xor
or
fcmovbe
add
lods
retf
and
mov
cld
xchg
cmc
cmp
loop
enter
retf
std
pop
cmp
mov
sbb
clc
mov
or
into
xchg
push
fmulp
sbb
mov
xor
mov
mov
mov
or
stc
sub
cmp
es
inc
(bad)
into
mov
push
mov
pop
push
jmp
loop
push
add
fwait
xor
retf
ret
inc
(bad)
mov
test
pop
push
test
and
cmc
adc
sbb
inc
adc
in
lods
test
paddusw
loop
push
cmps
adc
xchg
add
aaa
hlt
adc
lods
mov
stos
push
sub
movs
adc
retf
mov
dec
cmp
lods
mov
out
adc
stc
and
cmp
std
dec
sar
cmp
xlat
adc
mov
mov
dec
mov
xor
xchg
xchg
and
rol
and
and
dec
pop
(bad)
ss
inc
out
sahf
mov
movs
test
and
(bad)
xlat
xor
scas
mov
dec
in
cmp
inc
pop
stos
in
push
sub
cld
jns
jge
pop
lock
cmp
push
sub
mov
and
and
xlat
lods
stc
push
and
test
cdq
push
mov
sbb
ret
retf
leave
imul
dec
(bad)
in
adc
xchg
xchg
xchg
cmps
aas
leave
iret
push
ds
lods
mov
or
lods
dec
dec
fadd
fnsave
mov
mov
(bad)
cmc
stc
jnp
imul
push
dec
mov
addr16
dec
mov
scas
inc
sbb
and
mov
cmp
or
dec
test
test
xor
adc
sbb
arpl
ja
xor
mov
push
cmp
out
out
sub
pop
xor
test
push
push
mov
dec
xchg
test
mov
(bad)
jns
mov
fcom
adc
cwde
mov
or
ffreep
fidivr
cmp
mul
and
(bad)
mov
(bad)
out
je
push
sub
sar
rcr
das
sub
mov
ja
sti
daa
add
test
xor
mov
pop
cmp
sub
inc
sar
cmp
retf
(bad)
mov
clc
pop
push
pop
(bad)
cmp
mov
inc
sub
das
dec
dec
repnz
fcomp
mov
xor
add
(bad)
xor
lods
lds
ds
movs
add
sub
add
dec
xchg
add
out
fbld
cli
out
add
inc
xchg
or
xor
jg
xor
bound
loope
xchg
fs
push
pop
fcmovbe
mov
add
call
retf
xor
movs
sub
clc
scas
xor
dec
xor
mov
retf
pop
cmp
add
cmp
add
scas
fidivr
mov
mov
sbb
and
inc
xchg
leave
cmp
pushf
and
pop
xlat
dec
mov
mov
push
(bad)
mov
push
lea
repz
sbb
sti
fs
dec
outs
dec
pop
test
das
xchg
adc
dec
rcr
xchg
jne
xchg
shl
sub
pop
mov
add
in
add
fidiv
scas
ficomp
mov
fidiv
lahf
cmp
dec
js
sub
pop
inc
sahf
dec
ja
push
adc
or
mov
out
sub
cwde
in
test
shl
(bad)
jo
and
xlat
cli
test
clc
std
retw
retf
and
sbb
push
mov
mov
push
rol
shl
sub
jnp
ret
imul
pop
daa
adc
and
shl
leave
sti
aad
xchg
mov
nop
cmp
jmp
xor
sahf
std
inc
nop
enter
aas
xchg
(bad)
cmp
pop
js
or
cmp
and
lds
mov
movs
mov
out
dec
(bad)
pop
xchg
mov
jecxz
cmp
sub
retf
mov
jbe
cld
je
jl
rcr
xor
loop
jp
test
(bad)
inc
dec
push
ficom
(bad)
std
and
and
es
mov
das
loope
fidivr
retf
int3
xor
sub
mov
adc
es
shl
mov
mov
mov
fstp
test
fidivr
mov
mov
outs
jmp
mov
inc
test
xchg
mov
arpl
imul
sbb
cmp
(bad)
data16
mov
les
add
std
jp
add
xor
push
dec
push
rcr
mov
fild
rcr
mov
adc
inc
push
mov
mov
mov
retf
mov
arpl
mov
bound
in
push
cwde
push
cs
push
push
sub
fld
and
jnp
mov
enter
test
(bad)
mov
sub
int
jecxz
ror
jmp
movs
jae
jns
pop
push
xchg
push
sbb
sbb
ja
mov
cmp
int3
into
lods
aam
fdiv
cmp
lods
mov
fmul
mov
je
push
cld
jbe
iret
pop
cmps
int
adc
jp
icebp
inc
dec
mov
ror
sub
les
cdq
cmp
mov
xchg
sub
adc
(bad)
pop
push
mov
fisub
xchg
mov
(bad)
jne
cli
xor
dec
cld
sub
xchg
das
and
loope
sbb
mov
xor
fdiv
ins
retf
mov
pop
daa
les
and
xor
setns
in
jg
mov
adc
retf
mov
dec
arpl
and
pop
jnp
and
das
retf
xchg
xchg
and
jl
arpl
rol
in
sbb
cmp
fisttp
sar
pop
sub
js
cmp
pop
add
call
repnz
sbb
push
pop
frstor
std
dec
dec
test
cmp
lock
xchg
jo
jmp
cdq
cmp
out
push
sbb
inc
mov
xchg
sbb
adc
and
rcr
mov
sbb
jbe
lods
loop
pop
inc
hlt
adc
push
inc
mov
sub
stc
sub
push
mov
mov
jge
stos
stos
shl
arpl
push
addr16
ror
shl
adc
es
pop
mov
mov
inc
push
xchg
lock
(bad)
outs
js
or
call
into
std
mov
popa
call
inc
jmp
loop
(bad)
cmc
mov
xchg
dec
js
nop
or
dec
mov
repnz
bswap
leave
leave
or
into
sti
in
clc
rol
aaa
test
out
cdq
jno
xlat
outs
ins
mov
pop
cwde
mov
mov
dec
dec
or
inc
sar
xor
je
into
into
repnz
and
call
mov
jnp
mov
or
mov
add
movs
cdq
js
cmps
jge
scas
push
je
and
(bad)
mov
repz
pop
icebp
add
ss
dec
fadd
aaa
sti
cld
or
mov
push
or
je
ds
mov
adc
ins
or
sbb
jecxz
mov
(bad)
mov
out
fmul
xchg
sbb
imul
cmp
jns
mov
je
stc
addr16
mov
adc
mov
nop
mov
jns
ror
iret
adc
shl
push
mov
and
jo
pop
mov
lock
push
daa
test
push
nop
dec
xor
lock
loop
ja
mov
es
shl
ins
mov
or
push
aad
in
add
std
imul
jecxz
lahf
or
(bad)
icebp
jmp
in
jmp
cmp
es
push
ret
std
or
sbb
add
lahf
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
jmp
add
inc
inc
mov
pop
pop
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
imul
push
dec
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sub
dec
inc
inc
push
push
inc
and
popf
in
es
xor
mov
(bad)
mov
es
xchg
ins
aaa
fldcw
out
sti
pop
lds
add
dec
call
or
cmp
xchg
outs
pop
int
loope
xchg
repz
clc
xor
dec
(bad)
bound
imul
fbstp
movs
sbb
push
cmps
push
xor
xor
cmp
sbb
in
and
sbb
or
add
retf
and
fistp
popf
mov
and
cwde
dec
movs
jmp
repz
scas
adc
mov
je
popa
cmp
jbe
sar
pop
mov
hlt
push
adc
push
fldcw
dec
ins
dec
adc
leave
adc
cli
cld
xchg
out
or
mov
mov
xor
scas
or
push
mov
jmp
adc
xchg
mov
aas
cmps
in
imul
in
hlt
pop
xchg
pop
lock
fisubr
inc
movs
inc
(bad)
in
pop
scas
out
push
ins
(bad)
leave
jg
xchg
movs
pop
out
push
or
jmp
add
fstp
and
jg
pop
mov
pushf
add
sbb
inc
sbb
data16
pop
pop
xchg
clc
pop
xchg
jge
adc
in
fist
sub
push
mov
mov
pop
fcmovnbe
xor
mov
pop
outs
pushf
xchg
out
repz
pop
test
cld
mov
push
mov
test
rcl
mov
out
movs
ins
mov
mov
push
iret
fs
jge
es
xchg
call
mov
out
in
fild
push
fld
retf
pop
xchg
(bad)
retf
adc
inc
lds
pop
fs
scas
jmp
push
stos
xor
xchg
cmp
push
sbb
or
mov
lock
popf
aad
mov
sub
cld
sub
out
pop
jno
pop
pop
mov
fucomip
push
cld
and
das
add
retf
adc
lea
aam
nop
sar
(bad)
out
stos
inc
pop
scas
inc
sub
xchg
and
(bad)
sti
add
inc
popa
xlat
cld
jne
push
mov
fldenv
pop
xchg
inc
and
into
fwait
int
mov
mov
sti
sti
(bad)
int
rcl
add
pushf
adc
ret
push
cmp
sbb
call
mov
mov
pop
imul
sbb
ret
adc
cmp
lahf
mov
outs
cmp
ss
xor
test
pop
imul
fisubr
fnstsw
push
int3
inc
clc
repz
sub
fsub
fcomp
mov
popf
push
outs
inc
xor
punpcklwd
(bad)
lods
sahf
pusha
dec
adc
mov
arpl
dec
mov
lahf
aam
gs
jnp
ins
mov
div
in
mov
in
aas
pop
xchg
daa
fs
fcom
call
(bad)
dec
stos
das
lock
and
test
jmp
sahf
mov
mov
jmp
rcr
push
inc
int3
(bad)
mov
jp
enter
dec
call
xor
dec
sub
repnz
add
inc
mov
(bad)
cdq
std
clc
pushf
sbb
pop
das
(bad)
cmp
mov
lock
pop
popa
and
(bad)
xchg
test
loope
add
idiv
or
out
pushf
push
prefetch
or
inc
test
jne
retf
sahf
or
mov
push
and
mov
out
popf
aam
out
push
dec
repz
adc
ret
and
enter
push
loopne
aam
xlat
and
mov
in
sbb
jmp
cmps
jne
xlat
or
lds
adc
sar
xchg
mov
cmp
pushf
xlat
sub
js
in
ja
popf
cmp
add
fadd
mov
adc
aam
or
cwde
loop
cli
cmp
dec
pop
or
nop
add
shl
addr16
mov
sub
pop
retf
add
pop
jne
(bad)
pop
sub
add
xor
pusha
jne
pop
xchg
or
dec
mov
je
pop
adc
lock
aas
and
push
jg
jb
scas
mov
push
aam
ss
jo
sbb
cmps
shl
test
enter
out
xchg
or
stc
ret
das
fnsave
fbstp
sbb
les
mov
and
mov
lds
push
and
imul
xchg
cmp
mov
sar
rcl
test
lea
xor
(bad)
xor
pop
adc
fnstcw
push
mov
adc
stos
add
cmps
dec
jmp
fcom
outs
fmul
inc
jnp
jge
fnstsw
addr16
jae
and
inc
mov
fsub
rol
fs
out
mov
jno
mov
ins
loop
sbb
xor
pop
xchg
cmp
jnp
pop
in
test
arpl
cmp
xor
jne
add
jmp
arpl
xchg
mov
aas
in
(bad)
adc
fisttp
stos
and
aad
es
es
imul
std
mov
xchg
jno
fbld
xchg
push
int3
xor
dec
xchg
ins
in
xchg
int3
call
push
fwait
push
popa
push
scas
jb
push
retf
cmps
mov
retf
jb
or
lods
adc
addr16
mov
scas
popf
xor
and
addr16
jmp
(bad)
sub
xchg
or
outs
sbb
popa
mov
mov
imul
dec
mov
dec
cmp
mov
push
jmp
cmc
ret
lds
jecxz
(bad)
cld
inc
jp
lods
pushf
or
xchg
mov
aas
push
dec
jmp
push
mov
out
mov
loop
mov
scas
sub
mov
or
add
es
adc
mov
mov
jmp
mov
adc
inc
(bad)
mov
push
not
sub
cwde
test
lock
inc
(bad)
fisub
xchg
cmp
push
ds
add
pop
pushf
xchg
fmul
and
cli
xchg
not
loop
das
inc
pop
popf
cmps
cld
ins
data16
arpl
arpl
arpl
mov
mov
neg
sub
or
call
movs
pop
fs
or
and
cmp
add
dec
cs
nop
mov
loopne
je
inc
sub
push
retf
mov
xchg
fcmovnbe
sti
fcomp
aad
sbb
jne
xchg
xchg
cmc
xor
dec
mov
int3
js
sbb
mov
add
or
inc
inc
sar
or
test
cmps
mov
inc
neg
ret
loope
loopne
pop
jne
idiv
dec
(bad)
cmp
in
mov
cmp
dec
and
add
int3
cmp
xor
repnz
dec
cmp
jne
inc
iret
lods
inc
enter
inc
js
mov
out
es
xlat
leave
cld
dec
adc
pop
push
jle
test
scas
push
mul
pop
scas
dec
add
enter
and
and
fmul
repnz
retf
sahf
jge
mov
mov
bound
jmp
cs
ret
cs
test
sar
in
imul
jle
mov
test
push
mov
vpsubw
je
push
in
sbb
pop
aad
jne
dec
aas
push
jg
call
fwait
in
cwde
fmul
push
jmp
mov
inc
into
xor
rcr
data16
jb
inc
stc
and
cmc
imul
inc
es
in
mov
aas
scas
test
sbb
fstp
or
shl
daa
mov
jle
mov
xchg
or
cmp
stos
or
xchg
(bad)
clc
add
mov
mov
repnz
mov
rcl
mov
pushf
imul
adc
mov
fwait
repz
xchg
jl
shr
shr
(bad)
push
or
clc
(bad)
xchg
push
add
repnz
mov
push
cmp
pop
cmp
jp
rcr
popf
fist
mov
or
and
out
push
jno
ss
sbb
mov
xchg
mov
and
popf
ficomp
fsub
add
out
jmp
out
in
push
dec
idiv
fisttp
jmp
bound
and
mov
push
fcom
fwait
mov
jns
jle
je
in
xchg
jnp
mov
add
fisubr
jge
out
or
jns
mov
shl
jno
popf
inc
data16
shl
call
out
(bad)
enter
fadd
out
adc
pop
jnp
adc
sub
cmp
call
(bad)
shl
ss
adc
aam
cmp
in
(bad)
push
push
mul
xor
imul
inc
sbb
(bad)
push
jp
movs
cwde
clc
mov
enter
mov
pop
jne
xor
pop
call
sbb
les
mov
dec
ror
and
cld
pop
mov
lods
js
ja
(bad)
fsubr
jl
jmp
out
jns
fst
jp
push
push
cmp
xor
jle
ins
pop
push
ret
dec
jle
fbstp
or
mov
xor
inc
cli
jo
jns
out
sbb
daa
lock
dec
dec
push
mov
jo
(bad)
sahf
aas
shl
pop
xchg
add
fdivr
sti
ds
xchg
outs
mov
mov
stc
xor
mov
rcl
popa
gs
pop
inc
jnp
fild
aad
loope
xor
aas
push
pop
das
(bad)
jns
or
int3
(bad)
cmp
or
mov
call
lods
(bad)
in
sub
scas
and
int3
enter
mov
aaa
push
dec
xchg
cmp
and
out
dec
sub
(bad)
mov
xor
cmp
cmp
lea
push
fst
and
(bad)
and
mov
xchg
inc
push
fs
xor
mov
push
gs
jecxz
xchg
mov
sub
push
adc
loopne
xor
rcr
xor
fidiv
int3
xchg
call
adc
lds
ret
or
sub
les
(bad)
int
and
or
fcmovnbe
jle
inc
jp
xchg
test
pop
push
into
scas
xor
xchg
jne
sub
not
movs
out
inc
or
int
jo
(bad)
sahf
sub
add
dec
xchg
arpl
dec
sbb
mov
xor
arpl
shl
sub
xchg
shl
xchg
jmp
test
jecxz
addr16
mov
(bad)
ja
pop
mov
dec
cdq
mov
addr16
aaa
ds
sahf
arpl
scas
push
or
mov
mov
inc
call
enter
push
xchg
lods
mov
adc
and
out
cmc
icebp
adc
xor
inc
mov
addr16
or
sbb
cld
mov
test
xor
retf
shr
dec
push
cmc
jns
and
pop
xchg
or
pop
sub
sbb
addr16
imul
sub
stc
inc
ss
int
mov
scas
push
cmp
cli
cli
clc
mov
pop
xchg
test
mov
popa
sahf
xor
pop
addr16
push
int
(bad)
cmp
push
mov
stc
(bad)
call
lods
fucomip
jnp
jecxz
out
push
leave
rol
sbb
mov
test
pop
dec
pushf
jbe
inc
and
push
pop
not
stos
or
cmc
rcr
imul
jmp
dec
cmc
xchg
loop
add
aaa
or
add
es
test
mov
cmps
sub
retf
icebp
pop
xchg
dec
ds
and
mov
xor
scas
in
mov
rol
pop
push
call
es
or
(bad)
lods
adc
adc
shr
jmp
stos
mov
xor
push
dec
daa
fimul
push
stos
mov
int
movs
imul
mov
mov
jge
jbe
and
mov
dec
aaa
xchg
call
xchg
mov
iret
jecxz
sub
mov
int3
sbb
enter
and
inc
and
xchg
and
or
(bad)
retf
call
data16
cdq
das
loope
fwait
pusha
mov
fnstcw
mov
mov
add
sbb
jmp
les
sub
xchg
and
mov
ret
dec
adc
in
push
mov
mov
repnz
xlat
(bad)
sbb
cmc
movs
xchg
stos
call
loopne
outs
shr
sbb
sub
ins
sbb
frstpm(287
fwait
mov
pushf
ret
outs
mov
nop
(bad)
into
(bad)
mov
sbb
mov
inc
xlat
mov
sub
out
add
push
mov
scas
test
jno
xchg
retf
sub
imul
outs
mov
out
jbe
outs
xor
js
in
aaa
shr
mov
(bad)
mov
adc
push
push
sub
fnstenv
in
scas
sub
pop
xor
and
pop
ins
sahf
push
push
lds
xor
mov
scas
or
sbb
or
xor
(bad)
xor
pop
pop
(bad)
imul
mov
and
jo
(bad)
leave
sbb
mov
sbb
xchg
cmp
mov
fld
popf
mov
adc
dec
mov
or
sub
idiv
xchg
std
xchg
pop
cmps
or
ja
dec
rcr
pop
sbb
mov
or
inc
ror
(bad)
mov
shl
pop
cmp
dec
adc
xor
mov
pop
popa
retf
(bad)
xor
ds
cwde
push
push
pop
in
bound
das
fild
push
push
dec
pop
cmp
add
aaa
cmp
xor
add
xchg
stos
cmp
movs
adc
(bad)
lds
pop
daa
cmp
or
pop
addr16
or
adc
retf
retf
aad
repz
ins
push
and
push
add
and
ss
cmp
mov
adc
stc
adc
ins
loope
ins
lods
inc
jp
and
inc
aam
movs
gs
sbb
xor
fmulp
mov
pop
lahf
imul
popa
mov
or
mov
out
in
mov
repnz
jbe
(bad)
jmp
mov
pop
cs
rol
mov
push
imul
call
fcmovne
inc
loopne
ds
mov
add
retf
lods
adc
add
ja
data16
mov
fcom
jb
and
inc
loope
push
stos
cmp
xchg
ror
cmp
and
bound
lds
jae
lahf
push
int3
xchg
sub
pop
es
lahf
xor
xlat
pushf
loopne
jmp
ins
pop
add
push
inc
inc
mov
push
mov
adc
out
mov
cmp
sbb
rol
lahf
(bad)
fisub
dec
les
pop
(bad)
pusha
sub
ret
adc
cs
aad
lods
xchg
pop
aas
sbb
cwde
adc
adc
add
mov
in
test
div
sbb
ret
loop
cdq
fdivr
mov
fld
inc
sub
jo
movs
ins
popf
push
scas
xchg
sub
pop
jge
fnstcw
sbb
xchg
shl
adc
push
xchg
test
aam
imul
sub
sbb
fidivr
ss
(bad)
add
std
sub
(bad)
(bad)
sbb
in
mov
scas
add
iret
add
sar
xor
lds
test
jge
mov
(bad)
fbstp
cmps
pop
ds
mov
add
into
std
clc
je
fwait
jbe
arpl
mov
cmp
sbb
mov
fstp
ficomp
xchg
sub
mov
stc
fcom
xlat
pop
clc
mov
mov
sub
mov
push
outs
mov
add
push
cdq
dec
inc
stc
(bad)
(bad)
mov
shr
in
jl
(bad)
jmp
bound
push
sbb
out
jnp
push
and
xchg
mov
out
in
(bad)
and
add
sbb
aas
pop
shl
push
lock
add
lds
fidivr
das
test
push
aam
into
xchg
in
adc
call
mov
pop
or
sahf
pop
std
sub
inc
and
jb
arpl
add
or
retf
xor
lods
sbb
adc
loopne
inc
and
(bad)
cmc
push
mov
sbb
ja
inc
aad
retf
test
les
shl
addr16
stc
scas
outs
inc
in
scas
mov
xlat
push
aam
push
dec
jo
dec
ja
call
sbb
inc
inc
(bad)
cwde
or
cmps
pop
ins
imul
cs
mov
sub
ret
loope
push
xchg
fisub
test
lods
ins
or
mov
cdq
icebp
pop
add
cmp
js
jge
out
inc
sbb
push
not
lds
jmp
inc
mov
mov
pusha
xchg
mov
test
add
cwde
cdq
add
cmc
xor
cwde
pop
int
daa
sbb
icebp
add
xor
jnp
mov
jl
inc
in
dec
cmp
cmp
sbb
cdq
test
jb
push
popa
std
(bad)
loopne
pop
xchg
test
dec
xchg
mov
scas
xchg
mov
jno
sbb
pop
sbb
inc
scas
int
cmp
mov
ror
les
push
add
cmp
shl
jmp
push
inc
jecxz
inc
fst
test
sbb
(bad)
ret
cmps
xor
cmps
aam
icebp
stos
push
xchg
push
sub
inc
dec
xchg
aad
or
push
sub
adc
scas
add
les
test
lods
dec
and
(bad)
ss
jns
inc
adc
jmp
dec
scas
mov
mov
popa
sub
push
ror
xchg
cmp
adc
push
mov
dec
cmp
out
cmp
lods
sahf
xchg
inc
in
xchg
dec
dec
(bad)
pop
div
sub
jl
mov
mov
lahf
jns
retf
loope
xchg
outs
fstp
mov
mov
pop
push
inc
outs
adc
idiv
mov
fldenv
shl
mov
mov
xchg
xlat
hlt
test
jge
jo
and
cwde
adc
adc
inc
xchg
jno
and
(bad)
jae
aaa
(bad)
or
pop
gs
dec
test
mov
lods
call
mov
dec
(bad)
fld
sub
sar
loopne
sub
sbb
xchg
lds
xchg
pop
pop
ins
fucomi
mov
test
dec
fucom
nop
ss
push
mov
arpl
lods
stos
pop
stc
cmp
push
cs
fcomp
and
iret
push
cli
test
adc
jno
sbb
int3
xor
mov
sbb
rcl
add
mov
xchg
es
push
fwait
mov
in
sbb
or
add
xchg
dec
inc
or
or
xchg
js
xchg
pop
js
das
xchg
or
dec
ret
xor
in
cmp
xchg
loop
enter
mov
test
jo
jmp
mov
bound
adc
(bad)
ss
jb
pop
pop
lock
mov
mov
movs
adc
ins
and
bnd
jecxz
sub
adc
stos
(bad)
sub
inc
push
add
jns
jecxz
ss
(bad)
shl
syscall
sahf
sub
int3
inc
cs
je
pushf
ss
inc
pop
xchg
pusha
adc
scas
sub
loop
bound
xchg
je
jmp
pop
stc
ins
(bad)
sbb
movs
adc
mov
ins
xchg
adc
std
jns
inc
int3
or
inc
xor
cli
retf
push
bound
cmp
cmps
daa
mov
ins
xchg
mov
mov
mov
mov
fld
das
sbb
and
mov
push
dec
xchg
leave
mov
and
or
pop
sbb
push
or
sbb
jae
loopne
es
test
nop
or
push
out
int3
fcomip
cdq
and
ja
jne
inc
rcr
test
mov
sub
fistp
aad
cmp
and
js
mov
adc
xor
jnp
pop
sbb
jecxz
cli
mov
dec
cmp
pop
dec
ret
push
xchg
inc
lds
cmp
pop
jecxz
jno
sbb
push
fdivp
and
ret
cmp
test
jge
and
adc
sbb
outs
test
mov
stos
or
cwde
lods
fbstp
dec
(bad)
inc
daa
add
ins
sub
lock
daa
gs
ret
adc
mov
dec
call
(bad)
or
cmp
dec
rcl
out
sbb
cs
cmp
stos
enter
and
xchg
or
xchg
cld
jae
repz
add
repnz
push
and
xor
mov
inc
push
sbb
sbb
jmp
repz
(bad)
(bad)
jmp
push
mov
cmps
push
mov
dec
mov
movs
mov
or
fisttp
(bad)
push
cmp
jno
push
pusha
scas
test
sub
iret
push
inc
mov
add
shl
ret
out
mov
cmp
stos
sti
sub
pop
mov
cmps
loop
mov
xor
loope
pop
push
add
and
jp
(bad)
jp
out
ins
sbb
cmp
jno
ja
push
js
xor
push
xchg
pop
retf
push
pop
shr
fsubr
push
aad
mov
sub
sub
fiadd
adc
cmp
xchg
sbb
ss
xchg
test
cs
(bad)
int
repnz
push
aaa
cmp
jne
jns
adc
dec
cwde
xchg
push
xor
cmp
or
inc
fs
movs
sub
gs
cmp
mov
loope
inc
popa
push
push
(bad)
dec
sub
je
mov
sahf
sahf
mov
cs
jg
dec
retf
cmp
sub
mov
cs
(bad)
dec
outs
mul
adc
(bad)
jl
sub
mov
or
rol
lahf
into
cvttps2pi
mov
jne
cmp
mov
hlt
inc
stc
sbb
in
push
loope
sbb
pop
repz
cmps
lea
std
fwait
pusha
jmp
adc
mov
push
adc
dec
push
jnp
sbb
mov
scas
cmp
rcl
dec
adc
std
sbb
cmp
es
and
fidivr
dec
inc
add
stc
jl
jle
das
sti
jmp
push
aaa
idiv
cmp
sub
jp
in
push
hlt
push
push
shl
lock
sar
xchg
hlt
pop
or
jecxz
push
jmp
jb
mov
pop
xor
push
enter
inc
sar
les
int
pop
xchg
push
adc
out
ja
out
jne
test
inc
mov
and
cmp
gs
(bad)
jnp
dec
xor
sahf
adc
fisub
pop
cmp
add
fnstcw
push
xchg
repnz
dec
(bad)
or
cmps
jno
pusha
pop
sub
xor
add
jmp
jae
mov
outs
jb
mov
cmp
adc
sbb
js
dec
jne
aas
data16
push
add
mov
cmp
push
pop
push
lahf
xor
clc
aam
stos
jns
adc
mov
movs
sahf
fld
mov
sbb
imul
cli
mov
sub
or
xchg
bswap
lods
(bad)
fld
sub
or
mov
scas
xchg
pop
ror
les
mov
sub
inc
bound
mov
hlt
ja
ja
fisub
adc
xchg
and
mov
push
xor
push
sub
fadd
jle
enter
in
or
rcpps
je
mov
mov
sub
enter
mov
sbb
aas
and
jmp
rcl
not
sar
out
lods
xchg
pop
(bad)
xor
rcl
jne
or
retf
scas
dec
(bad)
pusha
sub
lock
xchg
repz
add
mov
sub
sub
les
inc
mov
cmps
neg
sub
mov
arpl
jb
aaa
stos
stos
mov
or
mov
idiv
jmp
or
sahf
push
fistp
call
leave
jb
sub
mov
jne
xor
sbb
fucomp
cmp
mov
rcl
fndisi(8087
and
test
jb
pop
imul
push
call
frndint
add
jo
movs
xor
dec
ror
repnz
lods
or
test
ds
mov
cli
and
push
jnp
(bad)
sahf
jg
pop
and
push
mov
rol
loop
add
cmp
data16
(bad)
shl
jo
jo
jo
and
mov
xchg
out
daa
outs
add
mov
adc
stos
(bad)
push
pop
push
dec
jns
gs
test
pop
mov
mov
jl
xchg
mov
cmp
add
mov
outs
adc
push
mov
sub
lea
xchg
pushf
or
cwde
data16
mov
retf
out
push
and
adc
aam
mov
mov
ror
js
out
imul
adc
pop
mov
arpl
sub
mov
ja
xlat
jp
or
cmps
stos
pusha
ja
and
mov
neg
loopne
inc
pop
or
xchg
sar
loopne
pusha
out
jae
jnp
bound
sar
ror
xchg
loop
mov
inc
jbe
jecxz
mov
jo
fwait
les
mov
mov
fdiv
adc
xchg
pop
rcl
and
popf
sub
std
push
out
mov
aaa
in
xchg
imul
sub
mov
adc
xor
inc
cmp
mov
mov
mov
or
lods
and
fidivr
movs
test
out
push
mov
sub
mov
das
iret
pop
jno
fisub
sahf
cli
shr
mov
cmps
call
fdiv
fsubr
imul
xchg
mov
ins
or
rcl
test
fsubr
xor
cwde
les
(bad)
repnz
daa
jmp
test
sbb
shl
mov
sub
xor
or
push
xchg
out
pop
pop
les
cwde
addr16
and
mov
not
cs
cwde
dec
xlat
lea
or
mov
and
mov
jo
adc
repnz
ss
lahf
ret
jne
outs
inc
daa
cmps
(bad)
call
xor
push
add
enter
and
stc
mov
dec
int
stos
or
inc
sahf
call
sbb
int3
pop
push
sar
sbb
push
cmp
and
ins
scas
xchg
pusha
sbb
in
ins
or
xchg
dec
fistp
dec
xchg
or
movs
jo
lahf
sub
arpl
xchg
jp
sub
pop
jno
pushf
sti
sbb
shr
inc
pop
add
cmc
in
adc
outs
dec
outs
pushf
pop
push
scas
and
and
fnsave
rep
popa
pushf
mov
jl
cmp
je
les
and
adc
sbb
mov
mov
dec
and
(bad)
das
cmps
repz
xchg
std
arpl
dec
adc
test
sub
test
sbb
inc
ss
jo
xchg
cmp
aad
fcomi
fwait
enter
repz
jne
sub
cmp
pop
test
mov
cmps
adc
lahf
loop
pop
push
pop
scas
aad
ss
cli
iret
popf
test
(bad)
pop
add
add
mov
repz
xlat
ins
xchg
push
clc
into
sahf
sbb
ss
sbb
(bad)
shl
fisub
dec
pop
and
mov
test
sbb
cmps
stos
lds
inc
sbb
xchg
test
or
movs
mov
icebp
cld
or
dec
in
ret
test
popf
jns
push
(bad)
into
outs
mov
enter
pop
push
fld
(bad)
scas
fistp
addr16
fbstp
int
jmp
jmp
pop
sbb
inc
mov
or
add
scas
rol
mov
jecxz
shr
and
fadd
(bad)
ss
std
scas
fwait
add
cmp
xor
mov
mov
cwde
loopne
xchg
push
mov
inc
sub
cmp
mov
cmps
sbb
xor
xchg
ins
or
or
add
cli
outs
enter
idiv
dec
adc
rcl
jmp
inc
or
add
repz
mov
inc
retf
ins
mov
sub
in
xchg
xchg
cdq
mov
jo
add
push
out
into
mov
cmova
and
outs
xor
std
aaa
jmp
in
cdq
jnp
pxor
jl
cmp
(bad)
clc
fsubr
cmp
lahf
push
cmc
mov
aas
and
inc
cmp
lahf
imul
cmp
repnz
mov
pop
adc
and
mov
bound
mov
jb
repnz
sti
pop
mov
inc
xlat
mov
push
sub
std
push
pusha
mov
sbb
repz
xlat
jbe
cmp
jo
fmul
jno
outs
movs
cmp
jle
mov
dec
adc
or
and
gs
push
mov
xchg
ret
and
pop
push
pop
mov
push
jecxz
rol
out
inc
and
sar
mov
shl
adc
fcomp
ror
leave
inc
and
mov
test
adc
mov
sar
cmps
pop
mov
push
(bad)
(bad)
jno
cmp
in
or
sub
lods
repz
and
or
mov
(bad)
ss
rcr
mov
jo
mov
sbb
sub
je
fucomp
hlt
loop
ds
and
pop
fwait
icebp
icebp
(bad)
pop
jb
xor
jp
(bad)
inc
push
sti
sbb
scas
push
gs
bound
add
inc
xor
cmp
jmp
lods
mov
sti
cwde
jno
push
mov
les
loop
stc
enter
(bad)
sub
call
cmps
jecxz
mov
pop
cld
lea
cmp
pop
out
shl
push
adc
and
mov
or
fdivr
repz
jno
jmp
enter
sbb
cwde
test
xor
ja
jp
out
sbb
mov
sub
fst
leave
add
jbe
or
pop
ss
add
cmp
push
leave
pop
pop
lock
or
sub
jg
or
sub
jae
movs
xlat
cmp
gs
sub
sub
mov
clc
repz
jmp
aad
push
aaa
in
jns
hlt
mov
add
sbb
es
jae
in
xchg
add
xor
iret
cmps
std
clc
mov
shl
push
repnz
lahf
add
test
xor
mov
jge
test
dec
or
jbe
inc
je
test
mov
sahf
xchg
inc
stos
std
mov
xor
jle
mov
xchg
xchg
nop
fadd
and
dec
cmp
mov
cwde
add
mov
js
out
pop
dec
or
or
dec
push
sub
daa
repz
out
inc
adc
jae
jg
aad
sub
mov
adc
push
call
sbb
pop
out
stc
jae
in
call
shl
sub
and
iret
dec
pop
rcr
jo
inc
lahf
pop
cmc
add
push
sub
stos
and
lods
shl
out
fwait
sti
retf
xchg
mov
movs
xor
leave
ds
cwde
out
ret
pop
test
retf
ins
div
xchg
and
cli
ins
mov
stos
loope
sbb
dec
nop
jbe
cwde
add
sbb
sahf
push
inc
push
or
stc
sub
mov
fcomip
bound
jnp
outs
jno
not
popf
mov
mov
sbb
mov
ins
mov
pop
sbb
int
jbe
inc
sti
shr
pushf
aaa
(bad)
add
enter
xor
jo
push
stc
mov
ret
outs
cmps
mov
cmp
sub
sub
std
sbb
pop
sbb
ror
pop
in
xchg
daa
or
(bad)
into
sub
dec
cmp
scas
jl
shl
jbe
sbb
mov
icebp
enter
loope
mov
shl
add
sti
icebp
dec
std
(bad)
xor
cmp
cmp
jecxz
xor
xchg
sub
dec
push
push
jecxz
pop
dec
lahf
ffree
inc
sub
mov
pop
push
add
xchg
cmp
xor
test
xor
mov
shl
lock
adc
mov
pop
jle
in
icebp
dec
xchg
adc
cmp
test
mov
retf
cdq
add
jmp
jp
(bad)
xor
mov
(bad)
rep
in
test
pop
loopne
mov
jl
in
adc
adc
loop
pop
push
pop
stos
dec
adc
mov
ss
hlt
mov
dec
hlt
sub
fst
mov
mov
mov
sahf
pop
pushf
mov
add
add
and
(bad)
mov
pop
out
pop
and
jmp
iret
jl
xor
ret
ret
rcl
rcr
mov
movs
adc
pop
in
stos
gs
or
xor
je
and
add
sbb
jecxz
sub
or
mov
mov
lea
mov
rol
and
pop
retf
pusha
inc
mov
xchg
lds
push
xor
les
das
jmp
push
dec
mov
fist
sbb
(bad)
in
pop
adc
mov
mov
int3
arpl
clc
rcr
mov
push
in
mov
jl
cmp
pop
sub
fsubr
pop
lds
adc
or
outs
xchg
hlt
sub
pop
mov
mov
fild
xchg
adc
shl
adc
es
cs
sar
pushf
out
popa
adc
cdq
sbb
out
lea
popf
cs
mov
ficom
es
(bad)
cmps
xlat
pop
cli
push
sbb
loop
pop
out
mov
(bad)
mov
cli
ror
aam
xchg
push
xchg
bound
cmc
or
in
clc
mov
pop
daa
mov
pop
ret
cli
xchg
in
jmp
loope
fld
hlt
push
sub
cli
xor
inc
mov
push
pop
inc
or
sbb
adc
jns
lods
stc
add
cmp
sub
cdq
popf
xchg
out
adc
mov
imul
sub
adc
std
xor
xchg
and
xor
bswap
pop
out
add
push
or
xor
rcl
jl
movs
sub
stos
inc
aaa
jns
std
pop
(bad)
mov
dec
stc
inc
fcmovnbe
add
push
bound
std
scas
fs
push
clc
pop
shl
xchg
xchg
jp
jmp
maskmovq
test
ficomp
rcl
xor
xchg
frstpm(287
mov
mov
jmp
xchg
popf
adc
cmp
mov
push
mov
repnz
enter
mov
mov
imul
mov
loop
push
mov
xor
and
and
cmp
js
and
add
das
ins
fs
fadd
and
cmps
ss
jmp
pusha
(bad)
retf
test
aad
repz
enter
ds
hlt
add
and
pop
pop
inc
adc
lock
movs
lods
fnstenv
xchg
xchg
std
clc
cli
xchg
mov
sub
ja
int3
xor
(bad)
js
stc
jae
mov
cmp
adc
std
daa
add
add
loope
(bad)
xlat
or
push
dec
mov
fadd
cld
jnp
cpuid
rol
mov
mov
out
punpcklwd
fild
js
jne
das
(bad)
xchg
ret
cwde
mov
sbb
lods
or
xchg
push
nop
cmc
cmp
pop
add
jmp
ret
imul
xchg
push
add
cs
inc
je
push
jle
dec
aad
xor
mov
lock
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
(bad)
stc
iret
jg
repz
(bad)
cld
out
jmp
add
inc
xlat
jecxz
je
ror
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
lock
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
(bad)
and
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
sbb
dec
inc
inc
push
push
inc
sbb
push
cmps
mov
(bad)
sub
push
xchg
pop
retf
mov
addr16
fcmovnbe
repz
iret
mov
loope
jne
add
or
add
into
push
xchg
mov
push
rcr
mov
out
inc
xlat
popf
lock
in
(bad)
jmp
inc
das
clc
mov
cmp
mov
in
mov
push
es
jp
ds
inc
add
push
test
xchg
hlt
push
mov
lock
xchg
hlt
and
push
and
ror
dec
in
mov
test
add
push
pop
stos
outs
mov
mov
add
inc
addr16
push
xchg
sbb
hlt
add
sbb
fstp
into
xor
xlat
or
repnz
jns
aas
lock
sub
enter
xchg
out
mov
push
mov
cwde
jb
adc
jmp
inc
ret
mov
pop
cdq
cmp
cmps
adc
mov
or
push
sub
mov
dec
int
mov
inc
lahf
sub
xchg
lods
mov
dec
neg
mov
adc
js
mov
push
sti
inc
pop
fldenv
inc
(bad)
or
and
or
cmp
jno
ss
ret
mov
inc
out
or
adc
cs
push
lock
or
mov
cmp
sub
inc
push
fmul
sar
xchg
pop
xchg
js
xchg
cmp
adc
mov
mov
lahf
xchg
cwde
jne
shl
jg
and
dec
push
stc
dec
sub
nop
mov
jae
jo
pop
jae
mov
ret
or
out
dec
ja
cmp
movs
cmps
pop
lock
js
cmp
call
dec
cmp
sbb
inc
pop
inc
ins
std
push
int
push
cmp
jmp
sbb
sbb
jne
and
ret
mov
inc
inc
out
mov
xchg
fmul
inc
jne
inc
cmps
pop
xor
arpl
loop
std
sub
in
int
mov
jp
(bad)
je
jl
scas
inc
jle
xchg
ret
jecxz
dec
mov
jmp
xchg
xor
cs
and
cmp
pop
push
mov
inc
paddusb
rcr
sbb
das
push
mov
jbe
add
outs
mov
adc
jae
aam
sub
adc
xchg
push
test
jecxz
add
gs
sbb
and
das
mov
ds
lahf
and
aam
test
mov
sub
imul
les
pop
mov
(bad)
xchg
test
adc
lock
adc
bound
aad
lods
test
das
pop
sbb
push
sbb
aaa
mov
(bad)
pop
jb
mov
js
dec
movs
aam
jmp
out
cmp
nop
test
push
sub
push
xor
into
cmps
mov
or
add
dec
dec
enter
jns
cmc
pop
cmc
and
cmps
jns
push
dec
jmp
fnstenv
cmp
out
dec
mov
movs
or
and
sbb
jae
cmps
fbld
arpl
inc
pushf
in
mov
fwait
mov
cld
in
pop
int3
les
push
mov
aad
js
or
in
xchg
mov
dec
repz
jnp
(bad)
test
xlat
xchg
ins
jno
cwde
mov
xor
push
cld
inc
loopne
and
rcr
sti
cmp
shr
ja
sti
or
cld
sbb
cmp
mov
adc
add
not
xchg
add
inc
and
cmp
and
push
cmp
sub
xor
inc
cmp
out
dec
add
jbe
imul
shr
int3
inc
(bad)
ss
movs
jl
pop
mov
imul
es
out
xor
pop
sbb
clc
push
or
dec
dec
xor
xor
inc
outs
out
test
add
mov
mov
xchg
pop
and
sbb
test
pusha
mov
mov
cmp
adc
fcomp
adc
add
addr16
call
jns
sahf
xchg
pop
jae
dec
add
xchg
mov
xchg
std
xchg
dec
cmp
ss
fadd
push
loop
add
loope
ds
movs
lock
pop
rcl
add
inc
enter
ins
jne
ja
scas
mov
adc
jp
cmp
adc
rcr
jecxz
add
jecxz
(bad)
cli
pop
or
in
mov
call
mov
pushf
test
mov
addr16
aas
shr
int
pushf
mov
jge
imul
retf
jb
mov
jmp
mov
xor
fist
stos
gs
jb
ret
add
in
gs
or
popa
fisttp
push
popa
test
dec
jge
sbb
sub
aas
xchg
adc
mov
ficomp
call
cmc
inc
cmc
out
out
xchg
sub
inc
out
and
mov
jno
jmp
hlt
and
mov
pusha
lahf
lds
mov
repnz
mov
dec
mov
addr16
pushf
leave
adc
mov
out
jo
mov
jo
cwde
jo
scas
xchg
mov
fld
jnp
(bad)
cmp
into
inc
sub
push
popf
into
mov
popa
and
mov
nop
icebp
jmp
pop
jmp
cs
jmp
lods
pop
push
cmp
adc
fdivp
push
int
jo
test
xor
dec
and
ret
ret
and
popf
pop
or
aaa
call
pop
sub
gs
jmp
popf
in
ss
test
leave
es
jae
jo
jbe
scas
or
fnstcw
sub
repz
cmp
mov
cli
push
push
mov
or
ror
pop
push
ja
push
data16
mov
outs
inc
lds
call
mov
push
out
cmps
jecxz
lods
xor
sub
cmps
mul
or
inc
adc
push
ins
inc
in
sub
rcl
jb
inc
or
adc
arpl
jecxz
test
mov
test
lock
enter
push
mov
mov
test
sbb
fild
mov
inc
jo
aam
and
loop
push
cli
xchg
jp
sub
fbld
dec
jmp
push
retf
sbb
dec
mov
stos
dec
adc
(bad)
aad
xor
and
dec
push
imul
je
(bad)
outs
out
push
jbe
jle
or
push
ret
or
out
lods
jbe
(bad)
adc
je
cmp
mov
mov
rol
into
inc
mov
int
push
or
add
repz
ja
xchg
dec
pop
adc
fimul
mov
pop
mov
jmp
popa
test
mov
mul
mov
inc
or
or
dec
gs
xor
nop
bound
inc
call
pop
cmc
iret
and
push
cdq
cmp
mov
aas
mov
push
loop
inc
cmp
push
adc
xchg
push
dec
test
movs
cmps
mov
fimul
scas
icebp
push
out
xor
cli
cwde
cmc
cmp
xor
jecxz
xor
dec
pop
(bad)
js
cmp
std
cmp
sbb
(bad)
(bad)
(bad)
pop
pop
cwde
mov
je
adc
or
dec
shl
pop
adc
xor
jbe
out
and
mov
test
pop
in
cmp
test
mov
sbb
sbb
dec
xchg
add
adc
inc
ins
mov
jae
or
push
fwait
or
push
into
push
out
jecxz
push
sub
ret
or
and
js
or
ins
mov
das
adc
ds
imul
fst
push
mov
and
in
scas
pop
adc
aad
cs
jae
int3
retf
xchg
sbb
dec
data16
into
enter
adc
movs
dec
sahf
mov
mov
fidiv
jo
add
iret
dec
addr16
pop
inc
mov
jno
xchg
mov
out
pushf
cmp
xchg
xchg
lea
cmp
pushf
pop
sub
icebp
pop
iret
sbb
lock
jb
jno
push
(bad)
dec
hlt
inc
stos
push
push
ins
push
add
lock
xor
add
scas
popa
repz
iret
test
cdq
test
push
dec
xchg
loopne
mov
xchg
sar
aad
xor
cmp
xchg
je
test
arpl
ja
push
jns
test
push
or
jp
xchg
push
push
and
push
jbe
outs
sub
pop
mov
out
out
sbb
jle
mov
pop
bound
xchg
ret
(bad)
mov
cli
outs
inc
push
les
jp
fnsave
and
push
inc
ins
jmp
mov
push
js
xlat
pop
cdq
ins
mov
cmp
or
pushf
sub
dec
int3
xor
push
xchg
ret
daa
pushf
popa
xor
jl
cli
pop
pop
adc
ja
inc
fisub
fs
loopne
xchg
fldenv
pop
mov
mov
popa
inc
popf
mov
adc
jnp
mov
push
or
dec
xor
adc
xchg
xchg
outs
sub
mov
pop
adc
test
or
jmp
sbb
popa
cmp
mov
out
xchg
movs
es
in
stos
fnsave
gs
adc
cmp
jno
dec
or
inc
mov
push
and
pushf
inc
mov
(bad)
out
fisubr
mov
(bad)
jl
in
stos
shr
enter
test
push
int
dec
aas
dec
cdq
xor
mov
adc
sub
jns
loop
frstor
call
je
xor
js
mov
daa
inc
push
inc
stc
ins
jb
or
pop
pop
mov
push
loope
scas
aad
cmp
outs
xor
xchg
and
sub
and
mov
mov
std
test
xor
inc
iret
repz
mov
fdivr
mov
jle
inc
pop
mov
push
call
dec
push
les
sbb
cwde
xor
or
sbb
mov
xchg
jmp
mov
fdivr
xchg
or
push
push
dec
mov
pop
cmc
or
and
popa
mov
das
aas
push
(bad)
or
popa
test
retf
jb
jmp
mov
lea
call
mov
xchg
jge
sub
ficomp
aaa
cs
neg
sbb
jno
test
or
xchg
test
sbb
ror
dec
mov
sbb
mov
lods
inc
mov
(bad)
fnsave
sub
cmp
sahf
mov
sbb
hlt
mov
xor
push
inc
xlat
inc
out
cmp
lahf
pop
xchg
cmp
ja
dec
push
cmp
aaa
or
push
ja
xchg
bswap
(bad)
lods
es
movs
cwde
adc
rol
adc
in
pop
sbb
mov
outs
or
and
mov
cs
sub
cs
adc
cmps
mov
loope
push
dec
jbe
arpl
test
cdq
mov
imul
aam
or
mov
leave
jmp
pop
lahf
test
pop
push
sub
mov
ficom
inc
outs
sub
stc
scas
pushf
push
pop
fimul
mov
or
lds
inc
mov
ins
stc
inc
sub
cmp
push
cmc
daa
pop
cli
and
push
sub
sub
mov
mov
sub
cwde
sub
sub
fadd
movs
lock
and
adc
cdq
inc
jb
lds
test
and
scas
push
lods
mov
leave
cmp
mov
jns
in
popa
pop
xchg
push
sbb
xchg
cs
or
xchg
mov
pop
(bad)
call
inc
dec
adc
int
adc
clc
or
push
add
lahf
loope
sbb
mov
mov
mov
loope
push
in
cld
mov
bound
adc
pop
jmp
push
sub
add
dec
jo
push
adc
adc
cmp
xor
jnp
cvtps2pi
arpl
lds
xor
ficomp
rol
dec
sbb
cmps
fdiv
xchg
xchg
cmp
pop
push
in
mov
push
shl
clc
or
ret
stos
and
mov
scas
xchg
mov
loopne
cmc
adc
out
mov
dec
fmul
ffreep
xchg
fnstenv
xor
xchg
call
lods
cs
int3
popa
pop
push
jl
jge
mov
out
jle
xchg
mov
or
mov
imul
daa
fnsave
fwait
jbe
sub
scas
or
into
loopne
out
mov
call
test
int3
shr
push
test
imul
inc
xchg
out
sub
sub
dec
ins
pop
mov
or
mov
test
daa
adc
mov
jns
or
in
ds
and
jecxz
mov
xlat
sub
pop
mov
jl
mov
dec
dec
mov
adc
mul
xlat
xchg
or
push
pusha
lds
mov
out
pop
repz
pop
sbb
or
add
or
pop
jnp
mov
mov
dec
mov
loopne
push
lahf
sub
pop
in
pop
bound
repz
in
loope
xor
cmp
fidiv
aam
sub
daa
cmp
hlt
cld
push
inc
cmp
jne
outs
mov
repz
add
jmp
sahf
aam
sahf
pop
cmp
shr
clc
(bad)
cmps
cs
or
fistp
adc
jle
sub
or
clc
stc
inc
sbb
mov
cmc
fadd
pop
sub
mov
jecxz
in
inc
cli
adc
scas
push
test
or
popa
mov
sar
sub
sub
push
ror
push
xchg
mov
mov
mov
and
fild
xchg
push
and
and
into
gs
sub
js
rcl
dec
xchg
ror
out
cmp
ret
jle
jbe
es
add
jp
push
mov
pop
rol
xchg
jg
out
imul
xor
and
(bad)
xor
ss
inc
mov
cmps
clc
adc
or
cs
add
dec
fdiv
push
cmp
iret
push
sub
dec
xchg
std
cmp
add
mov
xor
and
sbb
xor
mov
je
cmp
jo
dec
sbb
cmp
ficom
mov
test
clc
cmp
gs
(bad)
outs
fdiv
push
jne
pop
ud2
not
and
mov
push
pop
push
mov
mov
pop
push
sub
inc
adc
scas
or
js
push
ins
mov
in
push
add
or
ins
in
and
adc
jnp
fbld
and
aas
xchg
xor
ret
ficomp
sbb
xor
scas
ss
mov
jg
in
add
sahf
movs
xor
inc
movs
pop
hlt
pop
cli
aas
(bad)
std
fs
aam
jl
mov
push
sub
sub
stc
mov
and
mov
inc
xchg
ins
push
push
cli
test
ds
stos
mov
mov
fmul
mov
jmp
inc
cld
dec
jnp
fbld
dec
daa
outs
mov
push
add
out
and
pop
mov
sbb
push
mov
jge
dec
add
out
cmp
and
cmp
jbe
pop
mov
mov
pop
gs
out
aad
icebp
sub
sbb
push
mov
cwde
push
sbb
sub
rcr
cmps
xor
mov
cmp
icebp
scas
mov
xor
push
mov
mov
sbb
jg
xchg
outs
xor
mov
fmulp
hlt
ret
dec
xlat
cmc
movs
out
mov
leave
pop
adc
mov
xor
mov
ja
rcl
sub
fmul
hlt
mov
pop
fidiv
xlat
or
mov
jmp
sbb
(bad)
mov
sbb
es
mov
jge
mov
mov
pusha
nop
mov
xor
repz
retf
mov
mov
mov
fcmovbe
gs
jge
in
test
inc
pushf
mov
cmp
cdq
jno
stc
xchg
daa
adc
outs
mov
clc
sub
je
inc
push
jp
cdq
sub
pop
mov
imul
test
mov
inc
cmps
or
imul
mul
fwait
jno
add
aam
xlat
dec
sub
adc
mov
das
dec
add
je
or
repnz
inc
ret
aad
std
lods
ret
ins
(bad)
into
sbb
fbstp
lods
stos
xor
inc
movs
pusha
push
stos
or
jnp
les
cli
cmc
jmp
outs
push
jmp
xchg
fild
rcr
mov
sbb
adc
cmp
and
std
ret
ss
psubq
ja
pushf
hlt
sbb
nop
jae
mov
fstp
and
in
int
add
push
iret
cld
(bad)
int
enter
pushf
jl
int3
lods
dec
and
and
int3
sub
sub
adc
xor
sti
jmp
or
shl
fisttp
or
fstp
(bad)
outs
sub
call
js
mov
dec
pop
lods
jg
xor
adc
pop
mov
push
gs
add
sub
push
lea
outs
enter
pop
adc
mov
paddsw
(bad)
nop
cmps
loopne
ins
inc
repz
lock
mov
mov
mov
dec
nop
and
imul
pop
outs
mov
dec
das
hlt
in
out
shrd
cdq
rcl
sub
or
pop
sub
in
fmul
jns
popa
mov
sbb
movs
mov
or
fucomp
xchg
(bad)
mov
arpl
or
inc
xor
cmc
mov
call
addr16
inc
push
adc
scas
xor
pop
jmp
dec
(bad)
scas
lds
sub
mov
cmp
daa
fwait
out
mov
loope
jns
jne
and
aaa
mov
aad
repz
sub
bound
shl
(bad)
aas
(bad)
cmp
ret
aas
push
iret
mov
mov
mov
out
out
jge
push
les
movhps
in
add
(bad)
cmps
fidiv
scas
dec
push
std
sub
ja
xchg
in
inc
fimul
sub
jno
je
adc
sub
sbb
scas
in
cmps
cdq
mov
hlt
push
loope
lea
push
cmp
std
lds
lods
stos
add
movs
and
cld
popf
jb
jg
xchg
cmps
mov
jne
shl
mov
pop
add
ret
sbb
test
pop
dec
xchg
imul
imul
adc
stc
int
pop
push
stos
sub
test
call
out
dec
inc
stc
pop
rcr
cmps
mov
fsub
sbb
cli
sbb
xchg
dec
and
lock
call
bound
sti
mov
jne
sbb
and
cwde
push
xchg
push
imul
jnp
pop
in
cmp
xor
inc
push
mov
mov
and
and
xor
inc
cmps
jnp
cmp
jp
pop
and
sub
and
cmp
rcl
pop
sahf
mov
sub
jno
xor
and
cli
mov
sub
gs
push
jmp
(bad)
xor
cld
and
mov
push
sbb
sbb
in
pop
adc
adc
test
aas
sub
mov
repnz
jo
shr
mov
jns
add
(bad)
pusha
or
inc
mov
pop
inc
outs
inc
jle
mov
sbb
jle
ja
in
jbe
loope
jns
test
scas
pop
js
std
push
sbb
cld
mov
pop
xor
mov
addr16
and
call
cdq
test
xor
or
mov
outs
mov
pop
cmp
xchg
lods
lea
outs
jmp
cmc
test
popa
aad
fmul
add
xor
ret
jbe
xor
lock
fwait
mov
loopne
mov
xor
mov
jle
cmc
jmp
adc
in
out
push
cmps
sbb
or
aad
and
gs
cwde
lahf
out
cdq
shl
mov
jg
push
xor
add
int3
mov
inc
mov
xor
adc
(bad)
jmp
dec
mov
inc
add
push
mov
scas
in
in
mov
and
xor
iret
mov
jo
fisub
sbb
mov
mov
pop
cmp
test
gs
retf
fs
pop
movs
mov
xchg
vcomisd
or
mov
fiadd
stos
mov
test
fistp
pop
cmp
mov
fs
mov
jb
out
lods
sar
sub
js
data16
xchg
cs
icebp
cmp
leave
lods
retf
jp
jmp
mov
out
xor
fs
test
fwait
or
out
jl
xchg
mov
ret
rol
mov
dec
xlat
cmp
adc
jl
lods
jb
stos
jns
xor
test
pop
cld
cmp
leave
push
imul
clc
dec
les
shr
adc
jo
clc
js
xchg
pushf
repz
jmp
out
push
dec
dec
call
mov
pushf
les
rcl
in
clc
rcl
lock
nop
sbb
stos
xchg
xor
mov
jge
in
rcl
push
je
mov
sti
stc
sar
js
adc
aam
mov
sbb
in
dec
ret
mov
jb
stos
xchg
aaa
pusha
in
aas
shl
in
jp
imul
xor
push
dec
jp
dec
push
mov
jne
and
out
clc
and
test
jl
inc
test
jle
pop
ret
jmp
push
jns
enter
pop
popf
aas
addr16
xor
mov
mov
xchg
lods
and
std
movs
mov
stos
mov
xlat
addr16
xchg
sub
imul
rcl
cmps
sbb
fild
mov
lahf
mov
ss
aaa
cmc
dec
icebp
push
sbb
xchg
cmp
mov
hlt
(bad)
rcl
xchg
dec
pushf
ins
sub
push
into
stc
aam
icebp
(bad)
sbb
mov
jnp
pop
ja
ss
dec
sub
movs
nop
fdiv
nop
push
imul
je
or
fcom
xchg
sahf
mov
data16
out
and
mov
ins
jmp
mov
out
xchg
frstor
data16
mov
(bad)
adc
pop
jno
xor
sbb
scas
lock
retf
fnstenv
arpl
div
pop
(bad)
mov
cmp
sbb
ret
and
adc
bound
mov
pushf
mul
jb
ds
xchg
out
(bad)
sbb
mov
mov
gs
in
push
push
icebp
inc
cmp
(bad)
int
add
ss
or
mov
lea
pop
push
not
and
sub
mov
inc
loop
xchg
bound
scas
ret
sub
mov
or
jecxz
outs
out
sub
adc
in
fldcw
ds
int3
xchg
mov
js
imul
and
scas
jg
(bad)
(bad)
jp
sbb
pop
cmp
xlat
shl
jne
xchg
(bad)
scas
test
inc
ds
jecxz
sub
mov
adc
jge
es
fs
fisub
je
lea
xor
addr16
lods
inc
xor
push
cmc
leave
jae
pop
jle
xchg
cmps
jae
xchg
mov
shr
(bad)
cmc
(bad)
stc
inc
push
daa
adc
cmp
sub
push
push
movs
sbb
(bad)
sar
ins
outs
test
adc
lods
mov
fwait
push
push
aaa
dec
addr16
lock
retf
jmp
inc
jecxz
cmps
sahf
imul
jle
add
rcr
sub
mov
add
enter
data16
fcomp
fisttp
add
in
sbb
stos
push
mov
es
call
push
xor
aas
adc
mov
dec
add
sbb
mov
je
sub
arpl
iret
sub
ds
mov
cmp
leave
sub
fwait
mov
clc
sbb
rol
jne
inc
inc
scas
mov
fstp
sbb
lea
add
push
(bad)
es
daa
ja
adc
cmp
jbe
sbb
int
xchg
cmp
sub
movs
sub
bound
in
fs
xchg
xchg
adc
bnd
inc
lds
cmp
sbb
std
repnz
js
dec
loope
mov
leave
movs
test
sbb
lods
pop
(bad)
push
loopne
and
or
mov
cmp
adc
outs
xor
in
cmp
outs
fnstenv
xchg
lods
cmp
fst
and
push
loope
jns
add
dec
add
retf
xchg
das
pop
mov
retf
xchg
das
pop
mov
retf
xchg
das
pop
mov
retf
xchg
das
pop
(bad)
jg
add
(bad)
mov
cmpxchg
add
add
dec
inc
scas
inc
pusha
or
add
inc
pop
dec
gs
lea
js
test
dec
inc
fcmovbe
in
test
jbe
aas
jo
adc
call
sbb
sub
sub
call
mov
(bad)
stos
xor
mov
jb
push
jl
mov
or
xlat
popf
sub
out
push
push
sbb
jno
popf
dec
cdq
pushf
add
iret
xchg
mov
arpl
frstor
inc
(bad)
stc
xor
popa
aas
test
lock
xor
pop
repz
mov
mov
push
cmp
xor
nop
daa
push
sub
xchg
fsubr
lods
call
dec
lds
imul
xchg
repz
xchg
inc
xchg
in
mov
xchg
fld
aad
outs
adc
repnz
shr
add
dec
in
test
and
lods
test
imul
sbb
sbb
sahf
enter
imul
xchg
popf
lock
idiv
scas
inc
inc
ins
imul
and
dec
cmp
stos
repnz
ins
and
xchg
dec
enter
adc
mov
inc
push
cmp
sar
movs
jl
bound
cld
cmc
sbb
repz
lds
add
xchg
adc
inc
cmc
mov
aam
adc
cs
adc
adc
adc
push
cmp
pop
stos
sbb
nop
popf
neg
lea
shl
mov
ret
shl
aaa
pushf
aaa
and
mov
lock
xor
cmp
push
cmps
cs
and
push
cmp
outs
aaa
lods
lds
push
test
mov
rcl
sub
dec
popa
xchg
xchg
adc
(bad)
adc
and
rcl
xchg
jg
leave
inc
loop
lods
retf
outs
mov
retf
mov
cmps
lahf
xchg
movs
jb
sar
mov
outs
add
jg
cmp
lock
and
loop
add
dec
dec
push
xchg
or
fcomp
xchg
enter
outs
sub
stos
cmc
sub
xor
lods
jno
retf
in
in
js
test
or
cmps
popf
es
push
stos
cmp
adc
inc
les
xchg
fstp
int
sbb
pop
rep
scas
mov
jmp
cmp
jmp
stos
shl
test
fist
outs
sbb
inc
jo
xlat
mov
inc
test
lods
push
cmc
xor
mov
ret
adc
ret
popa
mov
data16
repz
inc
sub
test
in
rol
push
jbe
int3
cmp
pusha
mov
adc
je
sub
push
cmp
in
xor
aaa
push
out
dec
std
and
inc
icebp
ret
adc
sbb
add
jecxz
adc
push
out
test
fbld
(bad)
cmp
sbb
ins
xchg
daa
ins
fsub
clc
lahf
data16
add
jmp
push
mov
mov
xor
and
pop
lea
popf
je
pop
xor
inc
test
rol
jecxz
stc
pop
sub
and
sub
movs
pop
ror
mov
rcl
xchg
or
inc
mov
pop
lods
imul
test
or
fmul
xor
push
aas
push
and
push
(bad)
(bad)
xlat
push
not
add
in
push
shl
xchg
add
fld
mov
mov
in
and
pop
xchg
pop
sub
stos
cmp
fadd
dec
xor
push
js
sbb
sbb
(bad)
fldenv
cld
mov
xor
push
int3
xchg
dec
imul
pop
iret
xor
cs
inc
mov
hlt
mov
imul
sahf
sub
test
jae
rcr
movs
gs
dec
test
or
mov
push
push
imul
ss
inc
adc
push
inc
sbb
and
leave
and
icebp
repnz
adc
push
adc
int3
imul
cmp
fs
add
addr16
and
out
or
xchg
and
inc
fwait
pop
pop
mov
int
dec
dec
stc
lea
rcr
jle
dec
push
call
aad
or
popa
fistp
fsub
aaa
clc
std
push
push
mov
test
ss
push
shr
and
sti
je
mov
sbb
mov
push
mov
sub
ins
out
ja
popf
nop
fmul
mov
stos
fwait
pop
sbb
adc
jl
adc
adc
xor
imul
push
daa
ficomp
sub
adc
ins
pop
das
into
mov
repnz
jge
add
cmp
dec
dec
popf
lahf
ret
jns
(bad)
push
mov
(bad)
xchg
cmps
retf
pop
test
les
adc
add
pop
imul
xor
cli
test
dec
mov
ds
test
cs
jne
push
push
pop
dec
xor
rcl
mov
into
mov
jnp
xor
sar
icebp
mov
xor
aam
mov
nop
aad
push
inc
icebp
jg
add
and
les
out
sub
loop
jmp
push
mov
gs
dec
cmp
adc
or
dec
sub
lods
add
add
and
mov
cdq
mov
push
bnd
xlat
or
mov
daa
adc
int3
push
add
xlat
xor
adc
loopne
out
add
imul
pop
jge
(bad)
hlt
pushf
inc
or
imul
dec
add
in
test
scas
shl
fwait
std
add
aaa
add
ret
mov
mov
adc
in
and
xchg
pop
(bad)
jno
sub
fld
cmps
sbb
out
jnp
fsub
cdq
and
push
adc
pop
xchg
(bad)
mov
add
popa
xor
jecxz
ja
mov
xchg
test
and
or
test
cmps
lahf
retf
mov
jne
pusha
push
adc
or
pop
fisubr
call
mov
pop
pop
in
lock
inc
(bad)
xchg
add
push
arpl
mov
movs
jne
pop
inc
std
xor
push
push
repnz
loop
imul
push
outs
fst
sti
xchg
outs
aad
ficomp
mov
data16
pop
scas
test
pop
pop
inc
or
fwait
add
cmp
std
shl
loop
cmp
xchg
jns
jo
xor
outs
xor
popa
and
mov
pop
ins
fisttp
lock
xor
movs
fs
push
pushf
mov
mov
out
add
(bad)
outs
bound
mov
outs
pop
xchg
adc
fwait
mov
lods
mov
icebp
shr
dec
cmp
repz
mov
sbb
enter
xor
xor
adc
or
stos
cmp
adc
hlt
fwait
mov
push
sub
jecxz
(bad)
mov
pop
jns
and
fdiv
lea
jbe
sbb
mov
arpl
push
push
fcomip
les
push
push
cmps
jcxz
nop
stos
ja
mov
sub
lea
rol
not
in
ins
xlat
mov
xchg
mov
xchg
xchg
ret
mov
or
sbb
xor
jecxz
test
inc
or
adc
in
mov
or
inc
pop
cwde
sbb
ror
mov
inc
mov
daa
mov
fcomp
std
adc
dec
xchg
(bad)
outs
adc
xchg
inc
lods
mov
in
adc
inc
ret
mov
stc
popa
sar
cmp
popf
and
arpl
stc
xlat
call
mov
jmp
icebp
ds
pop
cli
jge
and
dec
add
jbe
push
push
in
call
popa
jl
pop
cmp
arpl
(bad)
div
fdivr
ins
xchg
out
adc
sub
xchg
repnz
jg
jnp
div
stos
jmp
leave
or
or
adc
xchg
inc
mov
(bad)
sbb
mov
dec
jl
repnz
or
fstp
mov
(bad)
sti
or
loope
(bad)
out
ins
scas
inc
mov
call
cmp
aas
sub
rol
pop
lea
add
dec
shl
push
popa
adc
enter
mov
mov
(bad)
nop
movs
mov
push
clc
xchg
xchg
ins
xchg
clc
cmp
pop
adc
add
mov
mov
mov
out
stc
add
jl
test
or
enter
retf
dec
dec
mov
push
into
(bad)
add
clc
cmp
sub
inc
jmp
mov
fs
retf
cmp
xchg
mov
mov
fdecstp
xchg
cmp
(bad)
mov
pop
sar
fmulp
cmc
mov
popf
xchg
lds
inc
push
or
movs
fidivr
outs
sbb
aad
push
idiv
outs
into
and
bound
mov
sti
xchg
cld
lock
add
adc
into
dec
data16
jb
mov
or
adc
icebp
push
mov
retf
mov
jne
stos
push
mov
cmc
shl
or
fist
fisttp
nop
cli
mov
pop
dec
pop
mov
inc
add
das
mov
ret
mov
out
enter
or
call
jbe
sub
cmps
cmp
cmps
mov
jge
sbb
es
push
push
or
and
xor
arpl
add
dec
add
call
push
fs
cmp
lds
out
bound
cmp
gs
mov
movs
into
rcr
inc
shl
sbb
mov
pop
pextrw
pop
or
sbb
fsub
mov
pmaxsw
mov
jp
adc
mov
sbb
fisubr
lock
mov
sub
sahf
and
test
fisub
mov
cmp
add
pop
pop
fmul
fimul
cmp
(bad)
pop
jnp
dec
out
ficom
or
fs
enter
nop
rol
adc
and
sbb
lods
ret
adc
cmps
rcl
pop
scas
ficomp
je
(bad)
arpl
jo
jmp
sti
mov
jnp
xor
pop
inc
mov
push
or
mov
dec
js
daa
dec
jno
pop
lea
pop
mov
and
and
inc
jmp
and
lods
mov
std
lea
scas
fisub
add
fisubr
test
je
call
mov
pusha
mov
dec
inc
leave
in
xchg
ja
mov
mov
jp
mov
outs
aam
imul
pop
cmp
jns
mov
inc
shl
pop
pop
cmp
daa
xor
xor
and
jae
push
push
(bad)
inc
dec
or
outs
fcmovnb
not
ds
cs
es
adc
sub
pop
daa
ret
mov
enter
(bad)
stc
movs
mov
fstp
adc
push
pushf
sbb
pop
iret
loop
or
xbegin
outs
pop
sub
xor
movs
(bad)
inc
out
pop
loopne
cwde
popf
arpl
imul
mov
adc
(bad)
dec
call
and
call
sub
push
pop
cwde
inc
sar
sub
or
scas
sbb
and
sbb
mov
pop
mov
mov
pop
(bad)
arpl
mov
mov
jge
xchg
or
cs
push
push
xchg
sub
(bad)
(bad)
test
push
inc
add
test
sbb
inc
sub
mov
pop
cmp
adc
sbb
adc
xor
inc
mov
pop
sub
ror
popf
pop
dec
jge
mov
xchg
mov
xchg
and
add
push
jle
sahf
(bad)
out
outs
jl
jne
mov
fnstenv
sub
movs
pop
scas
iret
repz
mov
bound
neg
jae
cmp
jnp
fcomp
jns
jecxz
rcl
out
shr
xor
jo
jns
push
add
cli
dec
mov
pop
inc
adc
mov
mov
inc
imul
or
push
mov
arpl
sbb
in
call
dec
out
(bad)
xchg
inc
inc
mov
jmp
pop
lods
dec
cmp
add
sbb
pop
push
lock
pop
add
icebp
test
mov
fadd
mov
inc
cmp
sub
ffree
jae
jb
enter
in
cs
mov
stos
call
test
mov
lods
bound
sar
dec
cwde
fild
mov
loopne
test
cmc
xor
rcl
mov
push
mov
or
sti
or
and
retf
inc
int3
push
pop
xor
mov
cmp
dec
sub
or
pop
jmp
and
mov
adc
or
pop
sub
push
inc
inc
mov
pusha
ror
push
sar
sub
gs
imul
fiadd
sbb
pop
push
loope
xor
data16
retf
movs
xor
cmp
xchg
movs
cmp
mov
cmps
xor
mov
outs
xchg
aaa
fst
mov
retf
stc
pop
xchg
mov
add
push
dec
pusha
mov
stc
out
xchg
push
in
std
lea
loop
cmp
pop
out
out
sti
dec
rcr
mov
(bad)
add
sbb
ret
int
xchg
push
cmp
add
fs
fisubr
cld
jno
imul
jle
subps
mov
in
xor
pop
cwde
ja
les
test
mov
imul
sub
jge
mov
add
and
je
cmps
add
div
adc
mov
sub
in
rcl
xor
cmp
or
push
mov
xor
into
mov
add
or
int
les
cmp
mov
imul
out
sub
xchg
xchg
imul
cdq
aam
add
shl
out
sub
adc
pop
xchg
sar
stos
jno
xlat
pop
in
pop
inc
and
into
ja
mov
call
aaa
push
jns
jne
mov
cld
mov
mov
push
pop
cli
test
fninit
cdq
push
cld
push
jge
cs
jne
(bad)
out
xchg
inc
pop
adc
mov
loop
lds
das
push
jmp
hlt
cmps
popf
xor
push
stos
stos
mov
arpl
ror
sub
mov
sahf
adc
ins
mov
movs
jmpw
outs
push
inc
push
dec
mov
clc
pop
mov
xor
jae
mov
push
push
add
jg
xor
adc
js
(bad)
int
lock
scas
pop
cli
ds
push
ror
adc
xor
fsub
push
add
xor
inc
jb
std
mov
cmps
loope
arpl
sahf
jb
sbb
test
sub
test
xchg
sbb
xchg
fs
mov
pusha
jns
sti
out
loopne
fbstp
imul
(bad)
out
cld
imul
xchg
aad
mov
call
cmp
push
sbb
ret
test
xor
mov
or
push
dec
js
lods
lahf
mov
add
jno
test
mov
iret
cld
pusha
push
loope
jg
(bad)
(bad)
xor
and
jns
lods
jmp
dec
mov
jmp
sub
add
nop
dec
cli
xor
imul
in
cmp
xchg
add
ins
call
out
jg
popa
pop
cmp
test
push
add
add
pop
mov
outs
and
mov
adc
das
jo
jnp
ror
ja
xchg
(bad)
out
ds
into
dec
xor
sub
push
fbld
call
inc
xlat
push
aad
ja
daa
mov
or
fcomp
popf
dec
leave
jb
dec
std
cmp
inc
lods
xchg
mov
les
int
inc
sub
ins
stos
or
mov
cmps
dec
pop
xor
pushf
xchg
or
mov
aam
fisub
pop
test
pop
addr16
loop
rcl
push
cli
cmp
adc
sbb
icebp
mov
mov
sbb
ret
sub
inc
and
cmp
test
xor
in
mov
icebp
cdq
gs
adc
jg
inc
movs
out
ficomp
popa
loopne
cdq
or
shl
lods
aam
(bad)
retf
movs
es
cmp
mov
mov
dec
pop
mov
inc
mov
fld
mov
call
dec
pop
xor
cmp
cld
and
sub
int
and
sbb
sti
in
shl
ret
scas
in
push
adc
mov
leave
cwde
and
lahf
aaa
repnz
xchg
push
aaa
cwde
sub
jg
js
xchg
mov
bound
add
daa
ss
out
mov
int
jne
sbb
cmps
jmp
sbb
pushf
mov
push
(bad)
pop
in
xchg
shl
xor
aad
add
int
xchg
pop
xchg
sbb
pop
mov
add
add
cmps
loop
loope
sbb
jmp
jp
sbb
mov
pushf
add
mov
mov
mov
mov
xchg
stos
ins
iret
push
out
sar
shr
mov
ror
push
imul
or
outs
jmp
adc
jmp
jg
mov
lea
pop
ins
dec
retf
dec
fcomp
xchg
sbb
add
inc
in
cwde
nop
jb
ffreep
retf
out
aad
mov
sbb
or
shl
loopne
(bad)
ss
xor
test
shr
sti
(bad)
(bad)
sub
in
xchg
(bad)
jle
xchg
pop
sar
dec
mov
jne
fwait
stc
sub
mov
push
std
jge
clc
cmps
popf
jb
jg
mov
dec
jge
in
push
dec
call
fdivr
xchg
dec
mov
mov
pusha
and
cmp
mov
push
ins
jge
jle
push
(bad)
loop
cmps
jne
mov
scas
adc
movs
test
loop
sbb
fcom
scas
neg
xchg
and
(bad)
clc
loopne
test
push
ret
xlat
stc
sub
cmp
dec
inc
mov
jmp
xchg
xchg
ins
inc
mov
pop
xchg
jae
loop
data16
add
sti
xchg
test
pusha
shl
jecxz
inc
sbb
ins
mov
xchg
jmp
das
ja
out
dec
mov
push
std
mov
sbb
dec
jae
xchg
mov
push
xchg
pop
test
cmp
outs
xchg
dec
inc
ss
test
and
cmp
adc
lahf
pop
stc
ret
push
repnz
mov
jecxz
cmps
std
test
das
rcr
sub
dec
sahf
add
in
xchg
or
push
das
mov
ja
add
cs
adc
mov
and
jle
xor
(bad)
jmp
mov
xor
mov
push
ss
xchg
pushf
inc
jge
sbb
jmp
jne
ins
jo
inc
neg
jle
jne
hlt
aad
js
add
or
inc
sub
(bad)
call
data16
sar
icebp
mov
mov
xchg
cmp
push
lock
and
loopne
in
mov
or
sub
xchg
mov
ja
loope
mov
rcr
in
and
or
loope
js
xchg
(bad)
out
fdiv
(bad)
adc
and
and
pop
outs
adc
pop
ss
add
aam
dec
sahf
int3
enter
dec
push
add
mov
call
fldenv
jle
rep
mov
pop
js
adc
or
cs
jp
cmp
(bad)
(bad)
sar
aam
fmul
shl
call
repz
jmp
adc
add
add
inc
aas
cwde
dec
addr16
lods
out
addr16
and
gs
or
loope
ret
dec
inc
mov
add
fwait
or
pop
aam
push
cs
or
mov
shl
mov
sahf
cwde
stos
jae
jecxz
pop
jae
and
dec
cdq
inc
dec
mov
push
inc
inc
xchg
mov
jecxz
mov
cmp
popa
cmps
mov
js
ins
(bad)
loope
div
mov
add
jbe
(bad)
xchg
mov
idiv
mov
sbb
pusha
aam
push
push
push
ficom
aas
and
inc
fbld
mov
loope
xor
popa
inc
stos
jb
movs
push
daa
mov
fistp
inc
in
xor
add
popa
fiadd
leave
pop
add
pop
push
arpl
xchg
sub
and
add
mov
repnz
mov
dec
mov
hlt
cmp
dec
cmp
clc
mov
bound
rol
dec
ficom
push
ss
shl
lods
pop
call
into
jnp
push
daa
push
ror
test
iret
frstor
movs
pop
or
jl
call
out
fstp
mov
test
add
adc
imul
std
sahf
inc
sub
dec
shl
sbb
shl
pop
stc
scas
dec
push
or
(bad)
outs
outs
into
das
push
mov
fiadd
mov
imul
jmp
(bad)
arpl
test
adc
add
fadd
mov
out
cmp
or
pusha
(bad)
mov
and
shl
dec
add
popa
loop
popf
pop
xor
inc
ins
mov
pop
iret
daa
adc
or
adc
out
mov
sar
xor
and
ja
cwde
push
arpl
mov
jmp
test
dec
inc
sub
inc
mov
xchg
das
cmp
mov
sub
es
mov
xor
ja
xchg
test
dec
push
mov
mov
jecxz
ror
mov
mov
sbb
cmp
clc
adc
je
push
push
xchg
sbb
in
daa
addr16
mov
pushf
or
mov
mov
jge
test
mov
div
mov
leave
popa
out
sahf
std
pop
or
push
push
adc
inc
repnz
lea
in
sbb
fwait
mov
mov
cld
lods
sub
test
mov
jae
xor
xchg
push
sbb
dec
mov
fisub
fsubr
push
mov
scas
pop
js
pop
mov
push
xor
and
push
fsubr
add
in
inc
ins
fwait
add
push
in
js
xor
inc
mov
arpl
and
jo
outs
mov
call
cmps
arpl
scas
xor
not
xchg
clc
loop
adc
int3
repz
sti
inc
adc
iret
inc
scas
in
(bad)
jne
pop
sbb
stc
and
int3
dec
pop
jecxz
jo
and
pop
not
repz
cmp
sub
push
dec
es
pop
mov
or
loop
cmps
cld
xlat
cmp
cwde
dec
or
scas
jmp
or
xchg
ret
xor
push
dec
pop
fdiv
mov
mov
adc
mov
push
ret
and
enter
push
iret
adc
or
mov
paddd
mov
jmp
mov
(bad)
out
mov
sbb
imul
xor
rep
mov
mov
pop
or
ss
std
loope
jg
push
xchg
adc
pop
and
push
and
xor
mov
pushf
pop
fdiv
es
adc
sahf
dec
cld
fadd
loope
dec
pop
loop
sub
aas
les
inc
dec
pop
cmps
dec
push
or
or
pop
push
(bad)
in
jne
and
loop
in
mov
jg
cmp
out
mov
cmp
inc
cwde
and
push
xchg
inc
stos
mov
out
movs
rcr
loope
jmp
std
stos
in
movlps
imul
loopne
(bad)
push
in
pop
adc
cmp
enter
push
pop
cmp
(bad)
push
xor
xor
fs
scas
and
arpl
pusha
jo
dec
ins
push
(bad)
stos
arpl
mov
cmps
lods
retf
ins
icebp
movs
push
(bad)
(bad)
dec
mov
xchg
xor
inc
jmp
pop
xor
lods
test
daa
or
in
jns
sbb
jbe
cwde
les
daa
clc
inc
fldcw
shr
dec
or
pop
push
push
clc
adc
xlat
in
add
dec
inc
mov
sub
outs
xor
cmc
mov
movs
arpl
push
ret
es
popf
sbb
(bad)
fs
je
inc
xor
sar
mov
sub
aas
or
and
aaa
bound
pusha
push
sub
stos
push
sub
inc
aam
cmc
dec
loope
sahf
in
js
ins
fdivr
cs
cmps
ins
sbb
xchg
sti
adc
pop
adc
out
retf
shl
sbb
cmp
sub
cmp
adc
lds
xor
pop
leave
mov
ret
mov
xor
and
lods
in
cs
push
sub
mov
test
in
xchg
inc
mov
push
nop
inc
or
rcr
lods
retf
std
jg
in
or
sbb
dec
pop
lods
sbb
or
pop
test
nop
xchg
push
mov
inc
outs
stc
dec
add
adc
aas
daa
and
sub
sbb
popf
ds
or
add
adc
jb
jo
inc
hlt
out
push
sub
int3
fcom
add
pop
jnp
sahf
and
ret
imul
add
mov
dec
xor
add
sbb
inc
leave
sbb
add
mov
shr
lods
arpl
add
add
loop
push
pusha
cli
icebp
ds
std
cmp
dec
mov
push
sti
cdq
repz
inc
scas
popf
inc
cmp
cld
rol
and
lods
add
cmps
mov
adc
js
sbb
cmp
jns
jno
enter
ins
pop
clc
test
jo
inc
in
popa
mov
jge
stc
inc
jae
adc
lea
test
into
add
fs
stos
rcr
push
xor
data16
push
mov
sar
sbb
jae
push
or
sub
jmp
push
fs
jg
add
or
enter
mov
xchg
pushf
ret
add
(bad)
sahf
or
js
and
in
es
cmp
jb
jg
dec
jo
in
mul
dec
mov
neg
cmp
cmp
test
dec
xor
mov
jg
and
inc
cwde
lahf
nop
adc
adc
iret
or
push
lea
stos
jle
int3
stos
ins
lods
pop
mov
imul
std
loope
inc
fldcw
shl
sbb
das
cld
es
sbb
es
push
fwait
xor
outs
push
push
sti
sbb
fdivr
add
cmps
gs
imul
into
scas
mov
ficom
cmc
add
in
jns
jb
test
mov
pop
pop
dec
inc
popa
test
lahf
sub
popa
test
(bad)
mov
je
sbb
imul
iret
enter
jle
mov
call
in
cmp
imul
mov
sbb
mov
pop
sbb
les
rol
cmp
dec
test
jb
data16
in
stos
mov
jge
and
mov
mov
jg
leave
adc
mov
jne
inc
call
jno
jnp
(bad)
fsub
add
arpl
xchg
out
out
add
sbb
arpl
mov
add
loope
sub
cs
sub
into
or
lods
xchg
and
push
rcl
jae
xor
push
or
ins
mov
or
cmp
cmp
mov
in
(bad)
sbb
fcmovnb
jno
jb
push
and
out
(bad)
in
ja
or
and
retf
movs
mov
sbb
xchg
stos
outs
cmp
aas
or
imul
add
xchg
push
pop
mov
jl
fs
or
inc
mov
neg
mov
out
dec
and
sbb
pop
loop
aas
repz
hlt
push
fwait
loope
or
mov
pop
shl
inc
imul
ror
xchg
jns
mov
loop
rcr
daa
jle
pop
mov
aaa
mov
cld
mov
nop
outs
jbe
(bad)
outs
push
loop
mov
fcmovnu
arpl
push
popf
adc
(bad)
jp
bound
out
mov
rcr
in
cmp
cld
fdivr
jo
lods
repnz
xchg
fs
test
dec
mov
and
xchg
js
inc
ins
jecxz
cmc
test
mov
repz
mov
mov
lahf
lds
sub
scas
das
je
inc
imul
mov
pusha
mov
jl
sti
sub
lods
stos
or
cli
or
add
jnp
scas
or
imul
push
jae
(bad)
sub
cld
mov
inc
push
into
scas
je
cmp
push
dec
icebp
cdq
cmp
mov
sahf
cwde
clc
jl
or
stos
pop
dec
fwait
jns
push
add
in
sbb
inc
mov
sbb
sub
inc
cs
sbb
dec
push
retf
js
push
test
icebp
xor
out
enter
push
push
mov
mov
xchg
adc
mov
or
xchg
movs
cmp
or
pop
imul
cmp
xchg
mov
jp
inc
adc
and
xchg
cmp
mov
xchg
stc
(bad)
and
aam
cmp
lock
mov
adc
movs
popf
push
mov
lds
xor
and
push
sbb
push
mov
push
adc
push
xlat
cmps
das
arpl
je
push
rcr
frstor
mov
stc
pop
inc
adc
inc
pop
cmp
push
ins
and
push
dec
mov
addr16
xchg
mov
mov
mov
xor
lea
cdq
cwde
xchg
sbb
mov
in
pusha
out
test
sbb
aas
sbb
nop
pop
repz
loope
lahf
mov
fs
adc
mov
(bad)
pop
stc
cmc
sti
push
mov
sub
leave
call
ins
int
out
mov
loopne
into
inc
adc
mov
iret
xchg
dec
mov
mov
addr16
and
jle
test
xor
test
xchg
std
jae
add
scas
aam
aad
and
xor
iret
sahf
jbe
stc
xchg
push
addr16
lock
ins
jb
sub
je
inc
std
jp
push
adc
imul
(bad)
daa
push
ret
movs
lock
imul
cmp
loopne
vshufpd
mov
ja
loopne
pop
call
mov
clc
jl
dec
lock
add
inc
jle
adc
sub
outs
push
outs
mov
dec
outs
or
movs
sub
mov
xchg
arpl
mov
outs
ins
sbb
imul
cmp
cmp
adc
inc
ins
aad
fiadd
jg
pop
movs
sbb
inc
sbb
push
and
dec
jl
jae
push
imul
sbb
pushf
mov
(bad)
sub
or
and
dec
and
aad
push
pop
and
mov
adc
jne
ffree
jb
mov
jmp
dec
dec
call
add
repz
cli
lea
fldenv
stc
data16
pop
xchg
sbb
aaa
scas
ins
pusha
jae
fs
out
mov
pushf
mov
push
jge
out
stos
repnz
cld
mov
outs
or
lods
and
inc
nop
lock
push
lahf
fwait
pop
(bad)
je
sbb
icebp
out
inc
jp
shl
sahf
push
dec
icebp
xchg
mov
push
mov
je
not
sbb
fldenv
jl
es
add
or
or
lods
cmp
pop
in
mov
ja
loope
(bad)
sbb
sub
imul
fst
cmps
dec
dec
inc
mov
mov
mov
pushf
loop
dec
mov
fadd
xchg
addr16
xchg
out
int
sub
ror
cmp
add
add
xor
pop
mov
pop
mov
mov
fsub
adc
sbb
mov
mov
jmp
lods
adc
ja
cmc
test
jno
into
jb
mov
adc
and
sar
push
push
in
or
mov
sbb
mov
ja
out
mov
jns
xor
or
enter
shl
sar
dec
das
jae
outs
cmps
cmp
(bad)
xchg
adc
out
mov
call
loop
psrld
lahf
sub
sbb
ins
je
aad
jae
shr
dec
outs
sar
mov
jno
popa
push
shl
mov
xlat
jg
jae
mov
push
call
in
sbb
bound
(bad)
xchg
adc
(bad)
cld
or
test
add
sub
shl
std
adc
lods
test
into
adc
cmp
aam
lods
out
mov
outs
xchg
retf
jne
mov
pop
or
test
repnz
inc
(bad)
push
adc
dec
(bad)
pop
or
mov
lea
lods
movs
or
call
cs
pop
(bad)
mov
ins
mov
xchg
clc
stc
or
test
scas
call
mov
dec
push
sub
ds
xchg
adc
add
add
out
rcr
jmp
sbb
cmps
int3
xor
imul
pop
fisubr
add
xor
call
sub
es
out
outs
or
movs
mov
or
mov
adc
lahf
mov
mov
pop
and
mov
xlat
inc
pusha
add
retf
iret
mov
(bad)
movs
cmp
imul
fst
mov
pushf
femms
sbb
jle
mov
adc
push
or
gs
dec
pop
nop
ja
or
loopne
add
stos
je
lods
xchg
push
cmp
cmp
push
jno
cs
adc
aad
aad
dec
adc
pop
movs
imul
add
imul
outs
adc
pop
cmp
sbb
sub
jmp
icebp
mov
and
mov
xchg
sbb
mov
call
popf
jns
test
call
or
iret
sbb
mov
out
cwde
adc
(bad)
or
add
rcl
cwde
pusha
jge
dec
std
jmp
mov
sbb
pop
sahf
sahf
mov
js
dec
sti
pushf
int
adc
popf
stos
push
adc
outs
cmovns
jl
iret
mov
(bad)
and
cwde
add
in
or
xor
push
inc
sub
mov
adc
imul
add
jle
lds
mov
cmp
jmp
dec
cmp
mov
ja
push
hlt
pop
imul
xchg
int3
mov
loope
push
and
cmps
clc
lock
mov
sub
pop
cmp
loopne
fwait
shl
adc
xchg
mov
push
mov
and
inc
add
out
push
mov
stc
dec
push
fistp
mov
rcl
popa
sahf
scas
ins
dec
in
je
ret
js
dec
or
adc
jmp
(bad)
shl
ins
xchg
loopne
add
add
or
inc
call
mov
outs
xor
dec
pusha
pop
fdiv
dec
arpl
cdq
push
push
mov
inc
daa
push
mov
and
add
pop
fcmovnu
dec
inc
xor
inc
inc
sti
out
int
(bad)
push
jno
and
push
jnp
test
cmc
jecxz
mov
iret
mov
jge
add
push
sub
jnp
int
arpl
xor
(bad)
or
xlat
ret
adc
and
aaa
popf
fistp
test
jne
shl
in
ret
jnp
mov
in
loop
(bad)
push
add
icebp
rol
call
lock
fadd
or
out
outs
mov
fsub
movs
cmp
dec
mov
pop
pop
jo
mov
mov
jp
stos
addr16
cdq
push
repz
call
arpl
mov
pop
mov
jmp
push
shl
sub
out
push
iret
push
lds
jmp
inc
in
inc
out
pop
sbb
aas
lock
push
ficomp
and
iret
xchg
and
and
add
retf
adc
jns
mov
mov
dec
lock
sbb
add
pop
not
popa
bound
daa
in
loopne
in
mov
sbb
imul
rcr
dec
sahf
mov
in
push
ins
lea
mov
push
mov
inc
xor
cmc
pop
jb
arpl
xchg
adc
cli
idiv
xlat
mov
and
call
or
mov
xor
in
or
pop
retf
jbe
sbb
adc
scas
rcl
xchg
jbe
test
int
push
mov
sbb
(bad)
int
hlt
mov
cmps
in
test
test
fldlg2
mov
push
add
fwait
adc
rdmsr
push
cmp
movs
imul
xor
pop
xor
inc
out
test
dec
fst
xchg
cmc
fistp
daa
dec
in
(bad)
stc
stos
fnsave
ror
xor
mov
pop
and
inc
clc
enter
outs
fnsave
cld
push
cmp
sahf
pop
hlt
adc
jle
and
pop
sbb
push
mov
aaa
sub
and
outs
mov
into
ret
iret
inc
xchg
dec
sti
into
stos
pop
mov
pop
ds
dec
inc
mov
mov
test
test
call
fisttp
inc
std
push
stos
das
cmps
pop
sbb
mov
mov
or
mov
mul
push
sub
add
scas
or
gs
fs
popa
add
jbe
cld
mov
in
sbb
adc
cmp
pop
jg
inc
push
sub
add
add
outs
mov
(bad)
cmp
inc
jne
mov
cld
shl
ret
mov
call
fwait
loope
mov
int3
xor
lahf
ins
adc
repz
loopne
push
ret
int
fdiv
imul
shl
adc
fucomp
add
in
and
mov
(bad)
ins
fadd
mov
inc
outs
push
pop
lds
sbb
cmp
imul
in
mov
iret
test
repnz
cmps
cmp
push
push
cmp
int
call
add
lods
xor
mov
xor
pop
and
and
inc
or
push
add
imul
bound
xchg
mov
pop
pushw
jns
jbe
and
pop
loopne
sbb
fidiv
mov
dec
enter
ins
scas
and
mov
cli
retf
push
out
loop
popf
aas
fidivr
cld
neg
or
push
inc
cmc
repnz
call
je
loopne
fiadd
shl
lods
fbstp
in
int
and
or
adc
sub
or
(bad)
cmp
mov
pop
pop
(bad)
repz
jo
pop
or
cdq
adc
gs
xchg
and
int3
mov
call
stc
inc
int3
es
dec
ret
or
or
sub
adc
pop
push
mov
(bad)
and
inc
mov
dec
cmc
loop
in
or
lods
ret
jnp
sub
(bad)
out
dec
rcr
(bad)
sub
xor
in
outs
push
jmp
iret
popf
sub
jnp
popa
jl
stos
push
cwde
es
xchg
out
outs
out
gs
cmp
mov
sub
fcom
fwait
cwde
or
icebp
cld
mov
xor
add
sbb
pop
adc
loope
sti
xchg
les
ins
xor
sbb
sbb
outs
sub
int3
outs
loope
mov
push
test
sbb
jl
(bad)
sub
lds
ja
dec
fdivr
bound
or
adc
les
pop
ds
jae
xor
mov
aad
add
xchg
jne
xchg
test
adc
xchg
jo
xor
pop
push
lahf
push
pusha
mov
mov
call
or
pop
cwde
daa
cmps
call
pop
or
das
mov
adc
jge
int3
call
and
ins
jmp
movs
popaw
data16
repnz
sub
pop
hlt
push
daa
push
fadd
retf
mov
sub
add
mov
outs
push
mov
xchg
pcmpeqw
in
jb
sub
inc
aam
fcmovnu
mov
xlat
add
cmps
sub
push
addr16
cmc
jnp
test
mov
scas
mov
scas
push
pop
pusha
addr16
bound
mov
push
adc
gs
fsave
jg
adc
ror
jp
pop
mov
jb
mov
xor
mov
ficomp
repnz
push
lods
stos
pop
mov
adc
inc
adc
in
cmp
adc
jl
(bad)
jmp
mov
ins
add
loope
dec
push
shl
inc
repz
jg
scas
into
mov
fstp
bound
mov
xchg
int
push
mov
add
xchg
ja
stc
lods
mov
mov
add
stc
xchg
dec
or
mov
fs
pop
push
and
pop
adc
push
dec
cmp
pop
out
cwde
bound
aam
or
sti
cmc
call
cmp
inc
push
inc
xchg
icebp
pop
ret
aaa
stc
adc
daa
neg
dec
cmp
push
lods
dec
add
shl
outs
retf
xor
sti
xchg
das
movs
dec
or
sbb
jg
cmp
les
fisub
sbb
or
shl
mov
loope
into
mov
stos
jno
repz
push
call
pop
cs
fistp
or
add
adc
mov
pop
pop
dec
movs
pop
inc
pop
and
dec
test
scas
stos
(bad)
popa
aaa
xchg
ror
in
scas
or
sti
sub
mov
mov
jnp
mov
adc
rcl
sub
mov
cmc
push
dec
jo
ins
and
mov
stos
mov
repz
jg
jge
adc
xchg
fld
out
test
clc
xchg
cdq
shl
sbb
cmp
test
sbb
xchg
into
loopne
sbb
mov
jg
add
inc
fnstsw
rol
test
std
pop
jmp
cmp
cmc
dec
call
or
arpl
nop
adc
movs
int3
sub
mov
cmp
mov
pop
imul
or
xchg
push
xchg
mov
and
sub
loopne
popf
movs
cwde
stos
mov
das
jae
cmc
add
jmp
popa
xchg
mov
and
push
dec
lds
stos
jb
in
push
push
mov
jno
cmp
jle
jl
inc
test
into
stos
dec
sbb
stc
pop
lock
rcr
ror
or
rcr
std
repnz
sub
jle
fs
jmp
cmps
mov
cmp
cmp
adc
xchg
stos
xor
push
inc
and
out
pop
outs
in
out
dec
pop
in
push
dec
xchg
je
jg
jno
jo
pop
pop
pop
xor
or
lods
or
adc
fbstp
dec
adc
mov
jl
mov
adc
adc
add
out
imul
jns
fnsave
mov
loop
pop
mov
xor
dec
adc
popa
bound
adc
out
xor
mov
dec
sub
cli
dec
mov
and
call
stc
inc
mov
dec
std
pop
adc
push
popf
ja
adc
push
das
repnz
push
or
mov
mov
mov
push
jp
aaa
cmp
lahf
lea
inc
popf
inc
pop
mov
inc
mov
shl
cmps
inc
cs
mov
pop
outs
outs
mov
sub
cmp
movs
push
push
adc
push
push
(bad)
scas
nop
pop
or
xchg
ficomp
mov
fmul
dec
mov
in
xchg
aad
push
pop
fcomp
nop
fsub
sbb
ins
sbb
jmp
fistp
pop
jb
mov
xchg
retf
dec
scas
jns
mov
stos
cmp
xchg
cmc
push
lea
dec
call
push
sbb
mov
mov
mov
sbb
lock
xlat
jnp
mov
pusha
adc
fs
jmp
xor
adc
in
sbb
into
lahf
(bad)
adc
shl
mov
sbb
fst
test
out
jbe
jns
cmp
mov
mov
push
pop
pop
in
sbb
adc
and
sbb
jb
sub
retf
jl
add
nop
add
sbb
in
daa
mov
in
js
and
dec
jl
pop
loope
pop
out
or
outs
gs
cs
pop
test
jns
cmp
xor
movd
or
das
movs
mov
or
sub
push
sub
mov
push
test
ja
(bad)
sub
xchg
mov
nop
push
int3
std
or
cld
sbb
pop
fs
jnp
sbb
sub
mov
mov
test
out
mov
xor
add
jae
cmp
adc
mov
cmps
in
fsubr
daa
mov
mov
nop
pcmpeqb
push
mov
xor
push
shl
fstp
xor
xchg
push
dec
aam
jo
cmp
dec
not
push
mov
add
xchg
pop
dec
(bad)
fdiv
stc
retf
cmp
stc
or
aaa
ret
jne
push
sbb
mov
test
sti
std
xor
jecxz
imul
in
jno
pop
outs
out
cs
or
clc
pushf
cmp
neg
mov
adc
jmp
jl
out
xlat
mul
sti
dec
jmp
or
pcmpeqb
ins
fmul
or
movs
inc
push
sub
(bad)
in
dec
(bad)
jle
ins
call
adc
sbb
sub
dec
push
and
jmp
cmp
inc
out
call
mov
jae
cmc
mov
es
jp
mov
scas
mov
test
push
push
inc
add
shr
push
or
push
dec
lahf
outs
adc
nop
int
jae
dec
push
xchg
mov
jg
ret
loop
leave
ficom
retf
je
push
ficom
pop
cmc
push
add
shl
xchg
das
adc
repnz
add
jmp
mov
sbb
jg
mov
test
or
xchg
push
mov
setns
lahf
and
outs
sbb
xor
popf
jl
ja
mov
add
xchg
not
retf
jns
cmp
add
sub
mov
jg
xor
jns
xor
pop
shl
jle
pop
in
shl
shl
lds
aaa
pop
mov
scas
dec
scas
das
or
rcr
push
mov
std
inc
mov
arpl
lods
test
pop
rcr
and
inc
cmp
in
pusha
xchg
xlat
sub
fstp
jmp
push
data16
xchg
imul
(bad)
xchg
jno
iret
jne
cmp
sub
out
stos
loope
push
sahf
or
add
lds
adc
sbb
and
push
neg
inc
sub
movs
icebp
scas
jae
ror
enter
pop
cmp
lods
sbb
sub
lahf
test
and
cwde
leavew
push
rol
mov
or
(bad)
fistp
ss
sub
js
inc
mov
push
lock
xchg
clc
dec
xchg
lods
(bad)
out
and
pop
sub
push
inc
pop
xrstors
fiadd
test
icebp
shl
adc
test
sbb
cmp
adc
sub
cmp
movs
pop
shl
jmp
push
pusha
sahf
xor
mov
xchg
sbb
js
adc
or
mov
dec
cmp
leave
xor
or
cld
sub
fnstsw
pop
and
aad
lods
jbe
popa
sar
aad
push
icebp
mov
popf
push
and
mov
test
pop
stc
ins
repnz
fstp
push
mov
sbb
repz
or
mov
xchg
push
or
cmp
sub
xchg
mov
pushf
push
add
pop
push
push
call
sub
leave
shl
mov
xor
mov
xor
sbb
sub
inc
sahf
aad
pop
cmp
cmp
fadd
test
and
jle
or
mov
pusha
es
inc
stos
fcomp
ins
mov
jnp
add
cdq
push
xchg
in
ss
and
pop
mov
mov
mov
adc
shl
dec
(bad)
sub
std
and
inc
pop
ret
push
adc
dec
sub
mov
mov
retf
movs
jb
pop
shl
pushf
xchg
cli
dec
iret
xchg
push
cli
jmp
xor
push
cmps
add
mov
shr
fs
jecxz
push
movs
jns
xor
add
dec
cmp
ss
in
in
sub
scas
ja
repnz
add
xchg
pusha
cmp
retf
pop
inc
in
in
fistp
add
ds
sbb
adc
arpl
push
(bad)
jmp
mov
push
pop
jge
jg
add
cmps
push
mov
jb
mov
dec
inc
stos
retf
es
pop
in
sbb
xor
out
es
xchg
mov
jae
push
(bad)
mov
sbb
stos
fstp
jne
jecxz
xor
aaa
pop
push
sahf
inc
dec
fiadd
aad
adc
and
push
jecxz
popa
fs
mov
add
dec
das
lock
sar
neg
fcomp
pop
cmc
adc
add
rcl
add
movs
movs
inc
add
iret
in
repz
inc
sub
in
sbb
in
ror
scas
jmp
fist
cmps
psraw
xor
xchg
cmp
lds
lea
cmp
add
sub
sbb
jmp
repz
cmc
pop
add
xor
pop
adc
jbe
pop
mov
sbb
add
mov
or
mov
scas
rcl
frstor
out
and
sbb
ins
sub
cmp
pop
or
jmp
mov
push
sahf
ins
mov
das
jno
and
pusha
cmps
cmp
cmp
sahf
iret
xor
rcl
push
xchg
(bad)
cs
push
add
xchg
jnp
mov
pop
mov
jg
mov
rol
or
out
sbb
pop
push
(bad)
popf
mov
rcl
sar
jno
out
ja
mov
pop
lahf
mov
outs
bound
adc
cmp
cmp
stos
movs
sub
(bad)
lds
ss
test
cmp
pop
and
aaa
xor
xor
in
shl
mov
clc
sub
mov
pushf
xor
pop
xor
scas
aad
call
xor
repnz
and
jle
js
retf
jg
inc
jle
jecxz
mov
enter
pushf
call
inc
popa
loope
pop
dec
mov
out
lahf
fild
add
aaa
mov
fdivp
cmps
xor
add
int3
jo
mov
imul
and
ss
imul
mov
fimul
je
sub
fbld
sbb
and
(bad)
xlat
dec
and
adc
fidiv
xor
jae
jmp
rol
mov
jl
or
aad
mov
mov
push
loope
ss
sbb
dec
cwde
mov
sub
mov
cwde
xor
sbb
cmp
sub
xor
sub
mov
aaa
fsubr
sub
outs
xchg
das
mov
mov
push
cmp
jl
aad
jne
int3
xor
leave
dec
adc
aas
mov
mov
fdivr
dec
mov
nop
dec
dec
push
outs
lds
jmp
sub
lds
push
pushf
cmp
dec
in
fwait
add
and
sub
ror
xchg
icebp
add
push
xchg
xor
jecxz
sahf
outs
(bad)
or
fsubr
sbb
into
in
out
mov
in
pop
jge
and
mov
sbb
jb
mov
sub
es
jp
pop
push
ret
jbe
stos
jno
pop
bound
push
add
fist
cdq
push
jmp
addr16
ja
cmp
pop
cwde
mov
or
adc
aam
jmp
ja
call
pushf
outs
icebp
test
mov
fwait
ss
iret
push
mov
jecxz
xchg
xchg
into
and
movs
push
adc
mov
scas
movs
std
cli
imul
or
mov
retf
sbb
mov
mov
adc
and
mov
aad
jbe
adc
inc
add
mov
loope
sbb
out
fcomp
je
and
out
(bad)
mov
push
mov
xor
mov
ret
cmp
cld
dec
and
adc
addr16
jecxz
(bad)
iret
sub
lds
sbb
mov
and
push
fst
cmp
pop
sahf
imul
fwait
leave
and
ss
jbe
inc
shl
xchg
stc
gs
imul
push
pop
inc
mov
sbb
rol
jae
iret
stos
pop
test
or
dec
adc
adc
mov
mov
fldcw
lock
sub
dec
vprotw
xor
rcr
aad
push
movs
xchg
loopne
test
cmps
xchg
cmc
or
rcr
cld
hlt
push
adc
stos
sbb
sub
sub
aam
or
(bad)
cs
scas
or
mov
stc
add
adc
in
or
sub
xchg
(bad)
test
movs
aaa
bound
fimul
clc
int
cmp
arpl
xchg
mov
push
push
and
dec
cli
mov
ja
cmp
xor
shl
push
lds
arpl
div
sbb
lock
pop
mov
push
test
ja
cmp
and
fwait
aad
int
add
imul
stos
scas
movs
add
dec
pop
inc
push
cmp
pop
dec
push
into
mov
push
xor
loopne
retf
jecxz
test
or
xchg
rcl
scas
push
les
aas
add
rcr
and
xchg
sti
push
push
popa
mov
mov
mov
xchg
mov
lods
icebp
mov
fs
and
sti
sti
enter
nop
or
add
addr16
push
scas
and
sub
dec
xor
sbb
or
ret
fdecstp
(bad)
ins
lea
ds
dec
ficomp
lods
imul
ja
aam
inc
push
jecxz
sbb
add
in
cmps
mov
jl
push
add
mov
popf
pop
jb
shl
fbld
and
mov
cmp
cmovge
mov
movs
jne
xor
mov
rcl
fimul
mov
sub
iret
pop
sub
test
xchg
add
and
lods
jno
stc
dec
or
and
pushf
inc
dec
sub
cwde
mov
iret
retf
or
push
jg
sub
or
or
add
adc
jbe
sbb
push
cmp
adc
lds
test
rcr
pop
dec
and
rcl
xlat
call
mov
mov
or
xor
scas
cmp
das
je
std
int3
mov
aas
mov
or
cmp
adc
test
test
rcr
or
shr
inc
sbb
mov
xchg
add
cmp
push
gs
ret
push
jg
test
fcomp
out
cmp
mov
mov
inc
cmp
aaa
ret
clc
mov
fsub
clc
push
test
leave
push
in
cs
mov
or
outs
test
xchg
push
mov
lock
jbe
mov
scas
inc
mov
xor
mov
mov
leave
push
jae
add
jle
fistp
out
jp
mov
mov
jle
cli
(bad)
push
mov
jae
push
out
scas
in
hlt
dec
in
and
bound
add
hlt
lock
std
stos
jno
ja
sub
cmp
dec
cmp
mov
dec
or
jb
fcom
ds
sbb
in
and
xor
repnz
jbe
dec
mov
call
and
mov
and
aam
in
lds
dec
loop
inc
adc
mov
call
ret
inc
call
mov
mov
and
dec
cmps
sbb
mul
outs
or
fcom
inc
xchg
(bad)
into
std
mov
das
or
(bad)
je
fsubr
cmp
call
adc
sbb
push
jne
scas
in
adc
scas
in
into
sbb
xlat
(bad)
pop
sbb
push
mov
adc
js
mov
jmp
and
jb
push
ret
loop
jge
inc
xor
jae
mov
xchg
jno
cmps
dec
adc
shl
ficom
inc
bound
cmc
and
inc
ret
inc
stc
or
clc
inc
push
xor
sbb
daa
mov
ficomp
out
call
pop
mov
inc
cmp
dec
out
in
popf
jle
ret
add
push
push
pmulhuw
cwde
out
paddsb
adc
(bad)
jmp
inc
push
or
nop
adc
push
sub
test
ins
outs
adc
mov
ins
movs
sahf
push
inc
punpckldq
pop
in
jns
mov
fsubr
fistp
pop
hlt
jo
mov
cld
ret
call
lea
ins
push
push
xor
scas
pop
dec
jmp
stc
cmps
shr
inc
(bad)
pop
into
adc
test
scas
mov
add
aaa
push
(bad)
fcom
aas
add
in
lods
jnp
sub
cmp
pop
(bad)
mov
pop
add
aam
inc
lods
cmc
pop
jbe
pop
cli
jge
dec
inc
nop
inc
mov
mov
push
sub
daa
aad
and
sbb
jmp
stc
pop
push
bound
mov
xchg
and
call
mov
inc
pop
sbb
xor
jecxz
out
jnp
in
fist
bound
aad
int3
xchg
xor
das
dec
cmp
adc
mov
adc
scas
inc
cwde
cmp
test
lock
imul
or
je
lahf
data16
retf
xor
xor
lahf
xchg
loope
scas
xchg
xchg
jle
cmps
ret
sub
aam
ret
das
cmp
repz
sub
rol
adc
sub
or
cdq
(bad)
in
popf
fdivr
fist
jge
xchg
push
fsubr
mov
xchg
lahf
push
jbe
inc
sar
mov
arpl
fld
nop
loopne
loope
add
shr
and
js
js
pop
push
mov
dec
in
stc
xchg
adc
shr
outs
out
adc
mov
inc
neg
fbstp
xchg
lods
imul
jg
and
jmp
jl
push
leave
ins
call
idiv
sti
ss
jo
loop
mov
xlat
lahf
xchg
scas
push
and
sbb
cmps
sub
ss
inc
out
inc
dec
xchg
add
mov
fucomi
jecxz
mov
jmp
push
sti
sub
adc
jmp
jmp
sub
cmp
jmp
sbb
inc
mov
scas
scas
dec
mov
ror
jmp
mov
or
aam
ins
repz
data16
fild
sub
repz
mov
jmp
lock
mov
and
mov
jmp
xchg
fidiv
mov
jne
xchg
cmps
lods
push
xor
jns
in
mov
add
jg
(bad)
xor
jb
or
dec
sub
mov
and
out
lahf
out
inc
enter
xchg
or
dec
sbb
and
pop
mov
mov
pushf
add
cmp
sbb
stos
mov
cs
jp
test
sbb
mov
ja
rol
stc
shl
sub
or
add
mov
ins
pop
mov
xor
push
jle
or
or
adc
jno
push
pusha
or
test
jae
rol
dec
adc
ja
mov
mov
call
pop
clc
stos
inc
cwde
sub
inc
xor
pop
xlat
add
inc
push
pusha
ins
call
or
stos
retf
add
test
adc
jmp
aam
push
sbb
cmps
lock
mov
jl
jl
mov
sub
call
or
mov
push
pushf
cmps
stos
jns
mov
in
sub
cmc
xor
repz
inc
sbb
iret
sub
mov
neg
gs
pop
mov
icebp
fsubr
inc
stos
lea
(bad)
sar
push
or
dec
sbb
stc
shl
dec
push
arpl
cld
push
mov
fmul
mov
xor
nop
pop
cld
pop
inc
(bad)
leave
push
and
sbb
dec
clc
daa
rol
add
adc
inc
push
in
dec
movs
jmp
or
xchg
cmp
xchg
jle
push
loop
test
cmc
jne
call
cld
retf
dec
shl
leave
lock
test
add
dec
scas
mov
jp
push
mov
cs
fst
pop
stos
call
(bad)
ds
scas
jecxz
cmp
sbb
pop
icebp
(bad)
mov
cld
mov
and
xchg
pop
je
pop
ret
or
iret
sub
imul
xchg
add
outs
mov
mov
sub
mov
ficom
popa
dec
pop
jge
mov
popa
mov
outs
iret
bound
inc
retf
xchg
sub
test
xor
out
ja
out
fimul
jg
or
mov
add
imul
arpl
dec
lds
push
pop
popf
adc
and
aaa
or
(bad)
fstp
sub
ins
mov
les
pop
clc
jmp
iret
stc
enter
sbb
dec
loopne
jmp
popf
fxch
push
jp
mov
mov
gs
pop
dec
test
loopne
sti
sub
push
xchg
and
adc
dec
and
out
pop
cwde
sti
mov
sbb
jae
dec
(bad)
and
sub
mov
jmp
imul
and
call
adc
leave
sbb
scas
arpl
nop
push
inc
pop
pop
int
jb
push
lock
mov
bound
cld
(bad)
mov
pop
mov
dec
or
sub
frstor
and
add
ror
fsubrp
xlat
dec
dec
loope
inc
mov
and
js
xchg
inc
or
retf
stos
add
gs
popf
sti
pop
lods
nop
movs
lods
xchg
aam
dec
scas
mov
or
ret
mov
mov
adc
in
dec
aas
(bad)
aas
dec
jbe
dec
jmp
dec
mov
xchg
push
pop
and
mov
or
jne
jp
mov
pop
popf
lods
loope
push
mov
loop
out
xor
or
xchg
les
mov
(bad)
std
sti
inc
fild
or
pushf
xor
push
inc
repnz
fst
mov
les
mov
fistp
push
or
mov
(bad)
fisubr
xchg
xor
call
xchg
cmps
jle
mov
aaa
fwait
mov
adc
jp
xchg
mov
ds
mov
xchg
add
mov
stc
iret
loope
sub
jns
or
ja
or
jecxz
aam
mov
xor
inc
out
aas
imul
nop
xchg
jnp
cmp
int3
mov
xchg
add
jge
retf
nop
rcr
mov
mov
scas
aam
mov
push
aam
jns
inc
adc
pop
ret
out
repnz
pop
pop
test
mov
and
idiv
shr
xlat
push
cli
dec
cdq
pop
test
mov
lock
cdq
xchg
cmp
jae
test
scas
cmc
jmp
xchg
rcr
std
ret
and
dec
xchg
xor
dec
inc
out
add
xchg
inc
lea
cld
hlt
int
pop
jno
or
in
push
pop
pop
mov
idiv
lods
xchg
cmp
xchg
lods
xor
fwait
ret
call
test
test
lds
inc
stos
loope
and
mov
xchg
cmp
scas
mov
cmp
jb
inc
mov
aas
mov
jmp
std
xor
in
pop
jmp
aad
pop
cld
add
jmp
fistp
mov
push
in
sub
sub
fidiv
loopne
cli
mov
cmp
dec
popa
xchg
adc
bound
daa
jnp
mov
cld
not
or
stos
movs
(bad)
or
xchg
fwait
ja
jns
mov
fs
mov
sbb
adc
lods
jnp
push
jle
adc
daa
cmp
add
mov
fcomp
mov
(bad)
mov
sbb
and
fst
lahf
icebp
and
adc
dec
test
mov
int3
pop
stc
mov
mov
mov
in
or
add
js
lahf
mov
arpl
cmp
xchg
mov
mov
adc
xor
push
les
ja
loope
test
popa
push
movs
jmp
enter
push
mov
dec
ins
cli
push
aaa
or
dec
sbb
sub
in
or
cmp
imul
fidiv
out
mov
int
not
bound
mov
movs
jle
call
dec
lock
daa
hlt
xchg
into
xlat
push
push
popa
imul
jb
jmp
repnz
pushf
sar
scas
popf
scas
pop
lea
adc
and
push
pop
add
(bad)
rcr
cmc
adc
sbb
scas
popa
cmp
mov
loop
jns
rcr
ins
arpl
jae
pop
loopne
jg
sub
rcr
jle
mov
repz
mov
mov
add
ret
jo
pop
mov
mov
pop
lods
scas
sub
xchg
out
jo
mov
sahf
daa
mov
sub
sub
xlat
xchg
fist
jecxz
shl
imul
scas
push
lea
jno
ret
(bad)
push
(bad)
push
inc
jmp
sub
mov
lea
mov
arpl
push
lods
xchg
retf
xchg
in
sahf
xchg
xlat
mov
pop
das
mov
mov
std
xchg
push
clc
inc
mov
jnp
cmp
xchg
or
inc
leave
sbb
inc
push
inc
mov
loopne
fsubr
fnsave
out
imul
mov
std
adc
pop
add
gs
pop
push
inc
and
add
js
cmps
mov
aam
rol
push
mov
push
bound
int
jp
push
call
xor
out
jg
add
xlat
loope
out
xchg
push
mov
jmp
adc
test
jae
aas
push
xor
fisubr
jecxz
lods
cmps
ret
sahf
pop
mov
pop
ins
or
mov
pop
pop
sub
mov
or
clc
and
in
pushf
xchg
mov
sub
and
cmp
es
retf
dec
push
jnp
enter
inc
push
push
pop
and
je
cmp
fbld
pushf
nop
sti
les
loopne
fcomp
pushf
fbstp
sub
out
stos
pushf
(bad)
fadd
test
or
cmp
out
ror
add
ja
repnz
adc
sub
rol
retf
and
mov
mov
mov
push
(bad)
xor
pop
std
jle
retw
movs
ins
sbb
(bad)
add
pop
or
sbb
push
in
fidivr
int3
mov
shl
rcl
int3
daa
and
int
je
retf
ins
xor
sub
mov
mov
scas
fdivr
or
ret
jl
jbe
pop
push
in
mov
push
pop
dec
rcr
sbb
jns
sub
scas
and
cld
and
or
cs
loope
lea
or
fst
sbb
mov
sahf
and
scas
pop
or
repz
xlat
sbb
and
dec
pop
adc
adc
enter
mov
ins
mov
mov
stos
jmp
pop
fsubr
inc
outs
sbb
pop
test
dec
xor
mov
sbb
test
je
dec
call
inc
pop
sub
fmul
sub
imul
outs
lods
or
cmp
hlt
sbb
push
test
adc
xor
and
mov
push
(bad)
aas
or
scas
jmp
fdivrp
xchg
jge
dec
jae
or
adc
jo
mul
mov
jge
push
xor
cmp
adc
push
push
call
sar
es
jo
sbb
dec
or
test
xor
inc
inc
stc
pushf
jns
cwde
and
ins
mov
in
sub
dec
xor
xlat
rcl
sub
cmc
xchg
inc
push
xor
jbe
loop
xchg
push
fwait
add
push
mov
jb
jbe
sbb
mov
inc
retf
sub
push
and
mov
push
jne
pop
call
mov
fnstsw
rol
aaa
cld
jnp
ret
popf
lea
cmps
xor
sub
cmp
jmp
push
xchg
lahf
push
pop
sbb
xor
push
add
in
icebp
mov
push
push
test
cmp
gs
mov
(bad)
aaa
out
outs
mov
shl
pop
(bad)
dec
fmulp
mov
or
cmp
leave
movs
cmp
jb
cwde
inc
fwait
push
inc
xor
dec
add
sub
fsub
add
dec
xor
out
inc
mov
push
pop
add
mov
arpl
mov
aam
sub
push
cmps
and
ds
ds
or
mov
mov
addr16
ret
lods
jmp
out
test
mov
dec
sar
loopne
xchg
nop
sub
push
xor
fist
inc
jae
fwait
aaa
imul
in
bsf
inc
bound
sub
cmp
jno
push
dec
ret
cmp
sub
mov
mov
push
xchg
ja
push
test
or
in
pop
push
movs
mov
mov
retf
(bad)
jmp
mov
xchg
or
scas
add
dec
jnp
aas
pop
add
ss
cmp
mov
arpl
xor
arpl
xchg
ins
and
fwait
push
cwde
ror
jmp
test
sub
dec
jne
pop
sub
add
xchg
fdivr
fcomp
dec
cld
fbld
ss
adc
adc
inc
fsub
shr
mov
pop
xchg
ja
(bad)
adc
lods
pop
stos
out
retf
lds
jne
cmc
xchg
cmps
pop
std
mov
add
push
push
call
jo
fisubr
xchg
push
rcl
lods
arpl
xchg
mov
in
sub
ja
adc
dec
xor
dec
xchg
clc
push
repnz
add
cmp
mov
pushf
inc
inc
jmp
jl
mov
or
dec
and
and
popf
cld
test
leave
fwait
cmp
push
iret
fcmovnu
repz
in
xchg
(bad)
cmp
ret
add
adc
mov
pop
stos
jg
stc
cmps
sti
inc
inc
movs
and
fsubr
pop
mov
sub
inc
in
xchg
addr16
and
fiadd
mov
mov
xor
fadd
xor
jg
es
das
lods
aas
push
out
xor
loope
retf
adc
retf
test
je
or
gs
cdq
sub
add
pop
pop
aad
jmp
out
pop
push
dec
aas
ja
adc
cmps
(bad)
pop
scas
aad
or
jmp
add
(bad)
imul
and
sub
lds
in
inc
mov
xor
int3
aad
in
stos
sahf
outs
or
jno
dec
sub
cs
inc
ds
(bad)
cmp
stc
clc
(bad)
mov
mov
or
push
adc
hlt
push
scas
pushf
iret
push
leave
mov
retf
xchg
jmp
mov
and
cdq
lock
call
outs
ja
in
mov
fidivr
mov
stos
or
lds
ja
mov
(bad)
out
popa
in
xor
pop
in
js
es
inc
mov
jg
sbb
inc
test
test
mov
mov
pop
add
bound
adc
loope
popa
cli
call
(bad)
stc
fist
rcl
sub
pop
fstp
leave
ret
gs
scas
sub
sbb
mov
imul
sub
sbb
jmp
adc
or
(bad)
lods
mov
pop
pop
ror
pop
cmp
lds
mov
xchg
arpl
mov
dec
xchg
cmp
xor
cmp
push
xor
or
dec
sub
mov
cdq
mov
jecxz
adc
mov
jecxz
add
mov
mov
mov
inc
aas
xlat
repz
stos
adc
les
push
call
and
xrelease
cmps
sahf
dec
(bad)
xchg
sub
rol
imul
or
dec
stos
outs
out
inc
lds
scas
pushf
push
rcl
mov
mov
or
push
and
and
lahf
jnp
scas
and
cwde
outs
or
and
loopne
iret
push
or
test
push
sbb
jge
in
(bad)
cdq
jno
jmp
mov
inc
pop
push
ins
cdq
add
imul
adc
jecxz
inc
cmp
adc
mov
or
movs
mov
in
sbb
sar
mov
pop
ret
sbb
jne
push
imul
add
(bad)
fisttp
sbb
dec
fldcw
gs
mov
in
out
sar
mov
call
fstp
pop
adc
shr
push
sbb
pop
inc
dec
and
mov
jbe
dec
or
cmp
adc
jmp
inc
xchg
das
loope
cmp
rep
or
xor
sti
cmp
adc
sti
sub
out
pop
mov
xchg
add
xchg
mov
push
je
pop
adc
cli
test
adc
mov
out
inc
jo
clc
in
jb
sbb
sbb
jae
fcomp
jnp
xlat
outs
xor
rcl
mov
adc
push
sbb
jg
fbstp
dec
push
mov
pushf
adc
sub
aas
sub
(bad)
dec
call
mov
xor
std
inc
imul
arpl
fwait
adc
enter
xor
adc
icebp
ficomp
(bad)
int3
mov
jb
mov
movs
xchg
mov
ins
mov
mov
and
fcmovu
sbb
mov
es
pop
push
lds
loope
fstp
psadbw
sub
call
outs
cmps
xchg
stos
je
popa
shl
movs
cmps
sbb
push
mov
ins
test
out
cs
xchg
mov
imul
mov
adc
pop
test
sub
test
xchg
mov
pop
(bad)
push
sbb
repnz
data16
jne
pop
jno
jnp
repnz
(bad)
and
arpl
rcr
or
mov
inc
je
or
sbb
je
push
push
in
jp
aad
(bad)
pop
ds
ds
cmp
pop
mov
clc
mov
mov
dec
cmp
mov
jle
(bad)
test
xchg
add
lods
cmp
out
or
dec
and
je
cmps
push
cmp
arpl
ffree
sub
pop
pop
imul
inc
cs
sub
pop
ret
adc
sti
adc
dec
xchg
fmul
sbb
stos
cmp
hlt
in
retf
mov
pop
mov
rcr
dec
fcom
int
mov
push
adc
je
fwait
arpl
movs
aaa
add
adc
(bad)
retf
in
adc
add
mov
inc
in
push
mov
sbb
mov
cmc
sub
clc
mov
int3
jge
xor
retf
inc
mov
push
and
out
ds
rol
sbb
loop
and
jbe
cmp
pop
xor
push
dec
in
fist
mov
push
cmc
rcl
stc
mov
xor
pop
inc
inc
lock
inc
pop
(bad)
addr16
mov
xor
sbb
outs
jmp
xor
frstor
scas
mov
jo
iret
jmp
(bad)
jmp
les
out
in
mov
mov
clc
jg
fldenv
popa
fcomp
pusha
fisubr
mov
cmps
cmp
shl
cmp
xchg
inc
adc
lds
dec
(bad)
mov
jb
fistp
xchg
inc
(bad)
(bad)
push
inc
fisub
sub
mov
dec
mov
jae
mov
cmp
mov
add
cmp
add
mov
push
aam
inc
addr16
dec
and
hlt
ret
mov
sbb
and
clc
jmp
or
popf
or
add
mov
cmc
loop
les
jb
jnp
xchg
xchg
xlat
cmp
nop
xchg
mov
and
adc
test
add
pop
mov
mov
mov
lods
movs
popf
mov
xchg
pop
and
jmp
in
and
ins
popa
int
jl
fisttp
push
xchg
mov
lods
xchg
lods
iret
iret
xor
xchg
xor
mov
adc
or
mov
clc
inc
cmp
sub
add
add
cmp
lds
mov
xchg
add
test
pop
iret
(bad)
pop
fs
xchg
fcom
ins
repz
loop
sbb
retf
sub
mov
jo
add
imul
ins
or
pop
add
test
std
push
retf
sahf
aaa
adc
clc
jmp
out
jp
repz
jp
clc
mov
push
cwde
jmp
jmp
inc
sub
and
clc
dec
dec
(bad)
xchg
xlat
sub
and
stc
neg
or
repz
or
test
add
pop
pop
movs
mov
and
stos
and
sub
dec
inc
js
xchg
sbb
mov
push
add
mov
mov
dec
ins
adc
mov
xchg
mov
xchg
push
mov
or
rcl
inc
sbb
scas
push
hlt
cmp
jns
cmp
cmp
ret
sub
lahf
push
or
mov
pop
popf
xor
sub
test
repz
mov
mov
fcom
push
test
dec
jo
test
int
mov
nop
in
hlt
mov
adc
push
add
cs
push
jecxz
pop
mov
es
mov
pop
or
les
xlat
(bad)
je
sti
push
popaw
jg
aad
cmps
cwde
lds
imul
call
mov
je
sti
jmp
lahf
sbb
(bad)
push
call
xchg
sti
or
int3
in
mov
pop
cmp
xchg
jge
lds
sbb
pop
clc
mov
or
or
and
sub
cmp
mov
ja
hlt
pushf
mov
sti
mov
ret
stos
fwait
jp
(bad)
xor
out
outs
xor
(bad)
dec
shr
pop
xlat
test
retf
call
out
sub
mov
fnstcw
or
fwait
out
sbb
mov
clc
retf
mov
sub
bound
sbb
adc
jmp
push
hlt
pushf
mov
mov
scas
aad
mov
jno
test
mov
cmc
std
jle
not
xchg
ret
jns
mov
jb
dec
repnz
add
add
shr
scas
sub
pop
mov
jle
sahf
mov
dec
inc
mov
push
frstor
mov
lods
in
cli
sub
and
rol
repz
xchg
in
jge
repnz
test
(bad)
and
inc
xor
mov
ja
addr16
dec
jb
jecxz
pop
add
pop
pop
xchg
loope
in
dec
push
xchg
dec
popa
push
loope
repnz
pop
imul
mov
sub
sub
mov
add
push
fnstsw
test
mov
mov
mov
or
dec
addr16
cmp
fnstenv
push
xor
frstor
xchg
push
push
fdivr
mov
jmp
xor
(bad)
call
xchg
and
and
push
shl
cdq
ret
jge
ds
imul
xor
adc
add
pop
aas
inc
out
ror
push
movs
add
dec
mov
xchg
or
pop
and
aam
xor
mov
test
aam
js
cmp
mov
std
pop
cmp
xchg
fiadd
cmp
adc
pop
ins
out
aam
retf
ds
sbb
push
nop
dec
xchg
jnp
es
push
out
cmp
pop
arpl
dec
inc
imul
mov
scas
jge
cmps
stos
mov
and
addr16
jnp
or
fld
out
les
ins
jmp
ss
mov
jne
jge
inc
jo
ins
mov
stc
dec
les
cmp
pusha
add
xchg
cwde
push
push
adc
pop
les
fnstsw
fs
xchg
inc
mov
(bad)
mov
pop
pop
sbb
xor
les
xchg
mov
es
mov
add
jo
test
xchg
xchg
push
in
sbb
xor
cld
in
sbb
push
scas
push
xor
pop
js
es
es
fimul
inc
mov
sahf
neg
ret
popf
imul
push
rcl
inc
call
mov
iret
push
stc
mov
mov
jo
mov
adc
into
in
dec
loopne
xchg
cmps
inc
out
call
ja
jne
xor
ins
mov
mov
push
jmp
adc
repz
mov
mov
jge
adc
xor
fadd
les
pop
pop
sbb
jnp
hlt
mov
jo
loopne
sub
ret
je
xchg
adc
xchg
mov
lock
sbb
daa
pop
xchg
cmps
cmps
rol
jecxz
add
(bad)
rcl
mov
pop
pushf
ins
adc
add
(bad)
adc
and
aas
mov
xlat
dec
(bad)
jb
and
sar
fnsave
mov
das
and
(bad)
and
aaa
std
or
cmp
sbb
or
mov
enter
lds
mov
or
jmp
push
jo
add
hlt
ja
mov
shl
mov
ror
cmp
ror
push
push
repz
lds
adc
inc
xchg
push
xchg
dec
pushf
ret
pop
sub
pop
push
push
int
sti
or
cmp
pushf
ficomp
jmp
(bad)
out
(bad)
sti
out
ins
add
inc
test
sub
cmp
imul
xlat
clc
sbb
mov
or
add
(bad)
jnp
xchg
popf
add
xchg
jge
js
aaa
dec
jns
gs
ror
and
fisub
xor
mov
out
jmp
sub
mov
in
mov
(bad)
(bad)
jmp
xor
mov
pop
syscall
ror
sub
popf
ror
mov
test
adc
retf
and
jmp
sub
fs
iret
daa
lods
sub
mov
ret
stos
cmc
xor
adc
adc
out
fcomp
mov
lods
xchg
push
jmp
push
inc
nop
cli
pop
scas
cli
add
and
xlat
(bad)
js
pop
aas
jl
test
popf
jmp
mov
xchg
pop
add
adc
sbb
adc
jl
sar
xor
sbb
sar
xchg
xchg
mov
ins
mov
pop
(bad)
loope
ins
arpl
push
push
pop
xchg
or
call
xor
out
adc
adc
pop
add
xor
pusha
sar
stc
jmp
popa
repz
dec
pop
les
adc
mov
mov
mov
idiv
repz
fwait
cmc
fst
rol
inc
add
sti
fbstp
retf
fcmovb
jle
jle
xor
je
push
mov
dec
adc
(bad)
jmp
mov
idiv
adc
lahf
into
adc
sar
dec
sub
popa
pop
les
fisttp
mov
adc
cmp
adc
aaa
pop
push
cwde
cld
cmp
outs
int
inc
add
(bad)
(bad)
fs
xchg
add
aas
sub
pop
ss
xlat
(bad)
out
xor
pop
jbe
leave
sti
dec
ds
mov
add
call
and
mov
outs
ffreep
repnz
push
mov
jbe
pop
xor
mov
shl
cmp
xchg
add
mov
lods
jecxz
js
sub
xlat
xchg
mov
ret
(bad)
cmps
retf
movs
sti
les
js
sub
int
jne
(bad)
dec
lahf
push
jp
add
retf
retf
dec
ror
cmp
mov
push
dec
sbb
cmp
loop
push
pop
ret
push
push
dec
retf
ss
or
daa
out
jecxz
(bad)
sar
xchg
scas
lods
cwde
dec
pop
imul
daa
cmp
mov
adc
xchg
cli
fistp
std
fidiv
inc
pusha
sbb
imul
mov
or
call
popf
sahf
out
smsw
ds
mov
jns
mov
dec
push
idiv
inc
add
push
xchg
jp
sub
sbb
movs
addr16
jno
xchg
cmp
cmp
cmp
add
ret
sub
xchg
das
jo
les
fs
out
enter
jns
push
fsubr
sahf
xchg
sbb
inc
js
pushw
sbb
loope
mov
pop
xor
mov
pusha
jmp
dec
push
ret
add
push
jo
mov
nop
inc
pushf
or
or
out
adc
add
xchg
mov
ins
(bad)
ins
dec
ins
jno
and
sbb
mov
jno
icebp
mov
mov
xchg
jae
add
sbb
xor
cs
test
pushf
lods
xor
lea
xor
inc
and
xor
adc
test
stos
int3
ja
stc
pusha
imul
out
sbb
bound
xchg
ds
xchg
jo
fst
adc
pop
mov
or
xchg
les
inc
adc
jb
bound
mov
pop
into
aaa
mov
out
in
push
mov
mov
xlat
xchg
cwde
fmul
(bad)
sahf
inc
sbb
(bad)
dec
lds
mov
test
push
pusha
ja
pop
outs
js
dec
(bad)
enter
mov
mov
jl
mov
movs
or
jge
ins
mov
xchg
mov
movs
neg
out
stos
aad
mov
add
jmp
ret
leave
dec
or
bound
push
inc
shr
jmp
mov
jne
into
out
cmp
aaa
adc
outs
jno
xchg
cdq
pop
ja
mov
xchg
imul
xchg
dec
mov
xlat
mov
movs
sahf
retf
dec
rcl
adc
aaa
sbb
pop
or
or
fisubr
sbb
sbb
aaa
cmc
and
jne
(bad)
push
xlat
test
dec
test
test
ja
loop
sub
bound
mov
add
fldenv
test
leave
in
pusha
in
cmp
xor
(bad)
fisubr
sub
pop
test
in
fs
aaa
jns
pusha
js
push
cmps
pop
jge
mov
cmp
add
(bad)
mov
ret
or
js
shl
mov
jp
sti
pop
stc
ins
cs
call
push
xor
aad
mov
xchg
paddw
mov
inc
ficomp
retf
ins
adc
sbb
jle
in
mov
mov
retf
adc
mov
cmp
(bad)
cmp
pop
mov
sbb
jl
inc
dec
push
sub
leave
aam
stc
jae
push
mov
ja
aad
mov
sbb
enter
xchg
mov
fcmovnu
std
or
pop
in
adc
stos
add
jns
shl
mov
push
pop
cwde
popf
jb
arpl
pop
aam
shl
int
jne
repz
dec
sahf
sti
imul
dec
leave
xchg
cmp
dec
xchg
mov
xlat
sub
jns
fimul
loop
push
adc
popf
add
mov
or
pop
inc
fwait
in
aas
mov
gs
jg
data16
pop
add
leave
lea
aaa
call
gs
in
add
cld
sub
fimul
mov
xchg
ja
cmp
cmp
fnstsw
xor
jle
test
frstor
add
imul
push
test
jge
daa
push
inc
ins
jp
int
ds
es
add
mov
sahf
les
add
adc
test
mov
inc
outs
je
mov
aad
sbb
daa
cmps
aas
pop
jmp
cmp
and
add
mov
daa
push
xor
xlat
ins
je
pop
sbb
xor
sub
pop
std
sbb
ja
jns
jg
lods
add
imul
mov
in
syscall
or
cmp
mov
out
aas
and
inc
jnp
xchg
push
cwde
xor
jnp
or
cs
mov
addr16
sbb
nop
mov
add
and
pop
mov
sbb
fnsave
outs
out
mov
dec
inc
pop
test
in
pop
idiv
sub
adc
xchg
mov
pop
rol
adc
mov
mov
rcr
out
mov
aam
push
or
mov
(bad)
push
arpl
mov
mov
rcl
pop
sahf
int3
xor
dec
xchg
call
ja
jg
rcr
retf
xor
sbb
pop
xchg
inc
in
fwait
arpl
adc
ret
data16
dec
arpl
into
lock
iret
outs
xor
mov
push
pusha
push
jl
jmp
add
inc
xchg
sti
or
dec
or
push
arpl
inc
jno
retf
jg
xor
mov
mov
xchg
(bad)
int3
dec
adc
jae
mov
xchg
sbb
fcmovne
aaa
sbb
stc
fnstenv
jmp
lods
sbb
shl
test
movs
es
stos
xor
nop
ret
mov
jmp
inc
cli
sub
add
or
addr16
jo
pop
xor
jp
shl
out
dec
hlt
jno
shl
jne
cmp
pop
mov
rol
sbb
sub
xchg
arpl
cli
cs
ds
rcr
ret
jae
jb
pop
mov
das
pop
popf
lods
hlt
ficom
test
cmc
xchg
jo
cmp
push
jmp
rcr
mov
mov
xchg
inc
js
pop
xchg
sbb
pop
into
leave
sub
dec
or
dec
xchg
cmp
fmul
or
(bad)
fdivr
xor
sar
jmp
into
mov
mov
inc
sahf
cmc
sbb
aam
sbb
in
or
sub
xchg
retf
lea
jmp
ja
in
(bad)
pop
popf
inc
dec
xchg
mov
xchg
xchg
mov
xchg
rcr
xor
addr16
fsubr
test
xor
pusha
jae
les
sahf
cmps
push
fsub
outs
dec
in
ja
jno
jb
mov
dec
(bad)
loop
in
lahf
out
js
gs
and
mov
aad
pop
push
leave
loopne
cdq
stos
movs
mov
scas
shr
push
repnz
xlat
push
cmp
sahf
xchg
ror
pop
lea
lods
and
lds
xor
push
pop
mov
jb
sub
in
or
fdiv
push
xchg
clc
das
pop
gs
push
scas
and
mov
and
mov
lds
movs
cs
xor
scas
cdq
test
jmp
cld
jg
das
jecxz
mov
aad
fcom
dec
test
ins
or
iret
pop
dec
cmp
outs
std
hlt
push
enter
in
mov
mov
cdq
push
pop
mov
adc
repnz
loopne
lds
in
fnstenv
inc
jno
es
cmp
lea
pop
dec
icebp
xchg
jne
jl
ds
call
add
xchg
in
dec
ret
(bad)
sub
sbb
mov
cmps
and
addr16
xor
ficomp
push
ror
inc
lock
call
add
std
xchg
ja
js
adc
pop
repnz
int
jo
lods
xor
and
xchg
jl
retf
push
div
pop
nop
push
mov
js
xor
ja
mov
adc
(bad)
imul
call
in
hlt
sbb
repnz
pop
idiv
mov
sbb
jecxz
push
jnp
inc
(bad)
stc
popf
retf
aad
dec
cmp
scas
or
data16
setge
jg
daa
bound
aas
cmp
push
fs
repnz
test
hlt
push
mov
add
mov
inc
mov
sbb
add
push
xor
sub
or
xchg
xor
sub
loope
mov
jl
inc
cdq
push
push
push
jnp
hlt
les
cmps
cmp
add
adc
sti
mov
call
test
dec
ss
mov
repz
sub
pop
xchg
adc
in
je
xchg
adc
cmc
xchg
pop
popa
sub
fs
neg
(bad)
icebp
sti
loop
cdq
in
sub
inc
jnp
jo
pop
fcomip
sti
retf
mov
movs
mov
mov
test
ja
mov
test
lods
cmp
xor
sub
adc
loop
cmp
ss
test
mov
and
stc
fwait
cmc
adc
or
std
sub
out
int3
neg
pop
(bad)
les
jle
(bad)
fsub
mov
cld
inc
arpl
(bad)
outs
push
adc
addr16
xchg
scas
pop
pop
in
push
leave
mov
cld
pop
enter
jle
xlat
out
xchg
and
sahf
adc
mov
jns
aad
fidivr
jecxz
or
inc
dec
cld
push
mov
(bad)
outs
cmps
rcl
test
xchg
pop
test
push
scas
out
pop
jp
sub
xchg
push
out
sub
pop
stos
mov
xor
push
jno
test
pop
cld
xchg
ficomp
xchg
das
ss
stos
fiadd
scas
or
cmc
imul
ret
int
jmp
mov
cmp
jns
stos
inc
inc
jmp
xor
mov
and
jmp
jnp
add
or
pop
dec
fldcw
mov
sub
ror
aas
(bad)
shr
xchg
and
xor
push
mov
dec
les
test
pop
aas
inc
jno
(bad)
in
clc
test
sub
mov
xor
aad
pop
sahf
(bad)
(bad)
adc
mov
fld
add
inc
fist
call
stc
and
mov
(bad)
sbb
jo
or
cmp
cmps
imul
int
xor
das
fidivr
inc
fs
dec
into
dec
scas
ss
adc
sbb
adc
sbb
retf
icebp
ins
and
hlt
or
push
popf
test
pop
dec
cmps
in
movs
inc
fs
cmp
jmp
push
xchg
mov
aaa
or
mov
int3
push
icebp
cmp
cmp
mov
adc
mov
popf
imul
mov
fiadd
outs
push
jbe
push
ret
mov
sbb
mov
aad
fs
ins
pop
dec
pop
cmp
push
mov
mov
iret
dec
inc
cs
mov
push
movs
jmp
aam
push
in
mov
retf
ds
call
xor
push
ins
icebp
mov
dec
fsubr
cmp
jge
in
add
loope
push
mov
xchg
jecxz
sbb
xchg
fs
dec
push
sbb
mov
fwait
mov
mov
mov
gs
xchg
scas
inc
lea
sbb
push
jge
xor
pop
mov
(bad)
lahf
jne
pop
jp
push
(bad)
jge
out
nop
pop
xchg
ret
sub
pop
mov
retf
inc
push
sbb
test
mov
pop
or
jl
fld
jnp
daa
push
scas
(bad)
mov
push
loope
mov
lea
in
inc
jmp
aad
imul
mov
mov
shl
mov
add
test
mov
pop
int
inc
cmps
xor
aaa
std
rcr
gs
lea
mov
jno
outs
sub
mov
inc
adc
sub
imul
hlt
or
jl
(bad)
cmc
mov
dec
out
pop
and
lock
xor
enter
mov
out
mov
faddp
loopne
pushf
pop
mov
xor
sbb
pop
inc
test
movs
adc
inc
jb
sbb
push
pop
mov
jg
inc
imul
in
push
add
aad
jae
movs
rol
es
or
outs
(bad)
cmp
(bad)
jae
mov
mov
push
inc
outs
ret
pusha
sbb
pusha
add
cwde
in
mov
les
mov
pop
push
xchg
movs
into
dec
dec
adc
data16
and
fisub
fcom
lods
jl
mov
cwde
data16
outs
pop
leave
adc
fst
in
iret
leave
lods
std
adc
fidiv
adc
and
inc
or
pop
sub
loopne
fs
dec
stc
adc
je
ror
mov
mov
adc
std
shl
call
mov
mov
test
jne
mov
xchg
call
cld
iret
and
inc
outs
movs
mov
sub
les
add
ins
movs
(bad)
sar
aad
add
aaa
stc
loop
in
ins
cmp
mov
ret
xor
movs
inc
data16
or
inc
inc
movs
int3
test
cmp
jo
mov
jle
ret
jge
or
leave
add
dec
and
ds
idiv
pop
inc
sub
iret
dec
sub
shl
jns
xlat
push
aas
stos
(bad)
sbb
scas
jnp
add
loop
rcl
rcl
ins
js
(bad)
sbb
or
call
sub
add
push
gs
movs
sub
and
mov
hlt
daa
pop
fidivr
setge
retf
adc
dec
push
sub
mov
dec
push
movs
push
jge
(bad)
pop
in
movs
push
ds
cmp
inc
xchg
add
and
retf
call
daa
pop
shr
shl
scas
fstp
lock
push
cmc
(bad)
jmp
push
mov
push
jge
movs
or
pop
sbb
mov
cld
mov
out
xlat
dec
lods
lods
xlat
dec
lods
cmps
mov
and
fs
shl
jg
(bad)
push
and
push
call
push
ret
xchg
pop
mov
out
pop
cmp
mov
inc
clc
jae
clc
adc
enter
or
jns
xchg
dec
cmp
and
out
pop
ret
rol
adc
push
xchg
xor
ret
pop
push
fwait
jo
xchg
adc
call
test
fnstsw
sbb
pusha
icebp
mov
jne
mov
stos
jmp
cmp
(bad)
test
xor
fsub
adc
add
or
inc
ficom
sub
inc
pop
fcomp
fld
xchg
push
pop
mov
fsin
dec
xchg
jg
xor
xchg
outs
mov
sub
cli
or
lock
push
pop
sub
cmp
nop
lds
mov
xchg
call
or
xchg
jge
rcl
mov
jno
jae
sbb
adc
or
cdq
outs
mov
adc
sub
inc
scas
popa
not
inc
mov
adc
ret
pop
mov
mov
inc
out
push
ret
jns
test
jecxz
rcl
add
and
int3
mov
and
and
call
lds
sub
outs
inc
fld
pop
outs
sbb
mov
arpl
xchg
cmps
and
lods
jp
popa
into
mov
int
iret
in
in
js
dec
xchg
mov
push
call
add
ins
gs
pop
fdiv
ins
push
add
xor
test
shl
fnsave
jl
(bad)
cmc
(bad)
in
(bad)
lahf
lahf
and
outs
in
mov
ins
jmp
out
add
sub
adc
mov
mov
jl
popa
xchg
dec
std
aaa
retf
rcl
and
jmp
fbstp
mov
mov
add
repnz
js
mov
sbb
xchg
pop
cmp
inc
fidiv
dec
mov
test
cdq
cdq
push
fisub
lock
mov
cmc
dec
adc
ret
mov
(bad)
out
movs
pop
mov
dec
loope
cwde
add
dec
call
or
jl
push
xchg
(bad)
cmps
sub
test
mov
sub
ret
add
(bad)
hlt
aam
cdq
popf
es
mov
pop
in
xchg
pop
(bad)
rol
retf
cmps
mov
sub
and
pop
mov
or
mov
(bad)
xor
int
loop
mov
imul
scas
sbb
and
cmp
stc
mov
scas
mov
cmc
pop
daa
test
in
test
stos
stc
test
xor
or
rcr
test
adc
loope
in
in
call
push
mov
sub
clc
icebp
sar
(bad)
xor
push
test
icebp
and
push
repz
lock
ret
sbb
add
iret
or
push
bound
push
je
imul
mov
test
jbe
loop
retf
int
out
pop
sbb
aad
inc
cmp
xor
jge
(bad)
loopne
aad
mov
jne
mov
inc
or
cmp
dec
es
mov
push
dec
mov
test
xchg
sbb
xor
jge
xchg
push
xlat
pop
sbb
mov
and
dec
jle
mov
mov
(bad)
cmp
arpl
cdq
add
test
punpckldq
push
test
movs
in
loopne
outs
cwde
dec
loop
push
inc
mov
call
lods
mov
jne
xchg
fs
(bad)
aad
and
retf
push
addr16
xor
das
dec
and
or
cwde
jecxz
inc
mov
ins
dec
and
add
ins
xchg
shr
mov
icebp
(bad)
xlat
cmps
les
mov
adc
in
jns
cmps
mov
xchg
add
sbb
sbb
fwait
xchg
add
mov
mov
xchg
idiv
mov
mov
mov
mov
and
shr
push
and
mov
mov
stos
jno
push
jmp
out
das
cmp
int
sub
sbb
fsub
dec
pop
iret
mov
call
dec
popf
clc
mov
and
mov
inc
jmp
pop
popa
sbb
adc
dec
push
pop
xor
inc
std
sbb
leave
rcr
sbb
jp
lods
je
mov
cmc
sbb
push
shr
jae
mov
cmps
inc
jb
mov
popf
dec
mov
sbb
cmp
push
sub
stc
xor
rol
int
jle
scas
mov
out
ret
and
ins
mov
jno
push
bound
adc
xor
and
data16
mov
dec
sub
add
(bad)
or
(bad)
arpl
inc
(bad)
xchg
cs
jmp
(bad)
inc
adc
dec
outs
push
js
pop
iret
cld
imul
int3
bswap
fldenv
adc
jne
les
(bad)
and
repnz
or
dec
push
sbb
mov
fst
rcr
xchg
add
sbb
or
arpl
ja
pop
or
sbb
fcmovnbe
aas
(bad)
xlat
cmp
cdq
push
inc
popa
sub
and
mov
pop
cmp
cmp
mov
shr
mov
push
(bad)
pop
pop
cdq
or
bound
iret
(bad)
jnp
push
sar
je
cmps
or
or
add
sub
push
jmp
pop
data16
dec
das
lahf
inc
adc
mov
arpl
push
mov
pop
cmp
jo
jle
pop
sub
push
imul
ffreep
aas
cld
adc
xor
mov
pop
xchg
pusha
cmp
mov
mov
xor
(bad)
ror
mov
mov
sbb
mov
xchg
imul
inc
dec
into
dec
sub
mov
cs
ret
dec
aas
or
imul
ret
add
sub
push
dec
push
xor
pop
aaa
cmp
jnp
mov
fwait
cmps
jns
nop
mov
sub
in
(bad)
jmp
test
push
mov
test
cdq
fimul
fadd
pop
add
popf
push
xchg
mov
pop
dec
pop
das
ja
sar
in
ds
imul
(bad)
jmp
mov
pusha
mov
rcl
retf
xor
mov
ficomp
ja
add
es
inc
pop
(bad)
jmp
xchg
in
mov
add
psubq
das
(bad)
sub
stos
xchg
sti
shr
cmp
add
mov
call
lods
out
idiv
and
outs
adc
pop
or
or
or
loop
mov
and
fst
cmps
mov
in
out
add
mov
push
lock
repz
dec
inc
pop
and
ins
cmps
cld
out
xor
mov
mov
sbb
mov
mov
sub
shufps
repnz
frstor
in
jecxz
mov
push
(bad)
(bad)
pusha
sub
sbb
in
mov
xor
lods
push
jmp
fidiv
mov
shl
dec
and
inc
lods
jmp
push
std
lods
das
aas
sub
push
mov
mov
and
dec
and
popf
mov
lahf
xor
loope
ret
ja
adc
lods
dec
outs
mov
sbb
aam
mov
adc
push
xchg
pop
push
int
(bad)
adc
fs
test
and
jge
repz
mov
fimul
dec
mov
in
lea
add
(bad)
mov
mov
shr
pushf
addr16
nop
add
mov
addr16
inc
xchg
out
popa
mov
popf
ror
mov
call
in
pop
jge
mov
pop
pop
ret
dec
lea
or
rcr
pop
enter
outs
loopne
sti
mov
int
mov
data16
fisttp
scas
test
mov
xlat
fbld
aad
jmp
fwait
pop
add
pusha
stos
xchg
repz
ins
mov
pop
xlat
dec
add
xlat
std
inc
mov
jge
dec
mov
sub
sahf
fs
pop
stos
xor
or
test
inc
rol
outs
cmp
imul
adc
out
add
pop
popa
push
sub
xor
ins
or
ja
cmp
push
dec
(bad)
dec
sti
test
push
and
pop
loopne
mov
push
adc
add
and
pushf
shl
outs
sub
(bad)
lods
push
mov
lods
js
mov
jg
fucomi
shl
pusha
dec
sub
mov
xor
dec
adc
movs
jge
or
sbb
(bad)
daa
push
rcl
repnz
je
lock
or
or
div
ficomp
enter
xor
icebp
pop
pop
sti
scas
add
(bad)
or
mov
retf
sti
sub
cmps
data16
out
sar
xchg
mov
jno
movs
push
cdq
push
sub
es
nop
or
xor
fcmove
mov
jae
pop
cmp
mov
stos
push
push
dec
inc
es
add
jnp
sahf
stc
mov
xor
cs
mov
sbb
push
pop
push
in
or
adc
or
inc
cmp
(bad)
hlt
lea
mov
popa
lea
ins
cld
nop
ins
movs
ror
mov
shl
or
mov
sbb
mov
nop
pushf
ficomp
inc
or
mov
sbb
pop
xor
not
jg
ins
aam
stos
push
retf
aas
daa
mov
adc
or
adc
sbb
lock
push
pop
pop
test
mov
sbb
mov
xor
test
rcl
xchg
push
fstp
adc
lock
jle
push
jno
adc
mov
out
pop
arpl
adc
xchg
push
add
(bad)
mov
cmps
(bad)
das
outs
jb
sti
pop
ins
or
inc
ret
adc
clc
shr
mov
mov
mov
mov
lock
lds
push
in
cmps
xchg
xor
mov
fbstp
mov
clc
imul
mov
in
sbb
and
cmps
jl
inc
push
fisttp
push
mov
xor
leave
push
push
jo
add
inc
adc
(bad)
test
cli
jecxz
and
dec
scas
jg
adc
adc
mov
mov
dec
fs
mov
inc
sbb
aaa
out
pop
push
test
into
cmps
ret
sti
cmp
add
and
cwde
mov
mov
adc
pop
cmp
int3
and
cmp
jecxz
(bad)
and
loop
jecxz
mov
enter
pop
and
adc
push
data16
and
neg
mov
jne
cwde
ror
pusha
add
adc
(bad)
sub
mov
mov
add
stos
jg
mov
arpl
aad
xchg
enter
mov
nop
inc
ins
xchg
ins
arpl
ret
loop
mov
adc
loope
adc
jl
cdq
adc
sub
(bad)
inc
jle
bound
aad
stos
xchg
pop
or
enter
or
lods
adc
sub
mov
cmc
mov
mov
cmp
xchg
push
sbb
out
xchg
dec
in
xchg
test
pushf
repnz
nop
jl
test
xchg
aaa
dec
sbb
(bad)
fst
jmp
ins
xor
mov
rol
imul
ins
rol
ja
pop
not
dec
mov
jmp
jmp
les
repz
scas
fs
push
movs
(bad)
sbb
sbb
cmps
ins
xchg
xlat
fst
add
fucomip
(bad)
sbb
push
dec
mov
mov
je
xor
inc
mov
in
pop
scas
mov
mov
xor
inc
call
stos
and
jb
jne
jge
cwde
(bad)
retf
sub
call
cmp
lock
add
mov
inc
in
dec
leave
repnz
add
mov
xlat
xor
test
aas
pop
in
xor
mov
xchg
mov
movs
(bad)
sub
xor
pop
movs
or
jl
cmps
test
retf
push
xor
jo
mov
mov
jp
fidiv
mov
lods
loope
fst
imul
or
icebp
cmp
push
retf
push
pop
cmp
call
popf
retf
aaa
popa
sub
sub
lahf
in
inc
sub
inc
(bad)
sub
(bad)
mov
push
(bad)
adc
add
and
ret
pop
ss
cmp
in
arpl
xor
lock
sbb
lock
xchg
jno
retf
leave
scas
aaa
pop
hlt
addr16
and
mov
adc
(bad)
jmp
cmp
xchg
sub
mov
sub
dec
push
push
xchg
mov
xchg
in
xor
xor
repz
mov
xor
xchg
pop
jo
adc
cs
scas
xor
push
add
adc
mov
xor
sub
dec
mov
cmp
in
jns
sbb
scas
(bad)
xor
jmp
shl
pop
mov
not
shr
inc
in
push
(bad)
adc
cwde
xchg
mov
xchg
cmps
lods
or
call
adc
ffree
push
inc
jmp
adc
cmps
xchg
or
gs
sti
aam
sbb
xlat
inc
stos
jmp
xchg
add
aas
cmp
or
movs
fadd
sbb
mov
add
inc
cmp
push
push
je
cwde
and
(bad)
mov
in
sub
xor
cli
cmp
pop
jo
adc
sbb
movs
scas
stos
aaa
jle
pushf
sub
push
hlt
push
xor
(bad)
imul
adc
fnstcw
aad
outs
cmp
adc
xchg
jne
lods
push
test
push
xor
jns
popa
ds
push
sbb
pop
adc
inc
out
push
add
mov
ins
arpl
push
dec
mov
pusha
sub
mov
add
cmp
xchg
or
test
mov
xchg
stos
xor
in
ficomp
mov
shl
xchg
sub
and
adc
arpl
(bad)
mov
(bad)
ins
and
mov
popa
jmp
movs
mov
cld
mov
pop
or
in
pop
jmp
dec
push
jecxz
(bad)
inc
pop
stos
addr16
xor
in
cwde
mov
movs
push
in
xchg
jl
stc
push
jp
mov
cdq
sub
jne
pop
in
ja
dec
cmp
cmp
aad
mov
(bad)
push
fsub
and
mov
aas
fdivp
outs
daa
mov
out
inc
cmp
xchg
gs
loop
cs
add
push
or
jo
add
mov
dec
xchg
(bad)
out
cmp
movs
out
dec
and
loope
and
cmc
cmp
pop
lods
jmp
jecxz
gs
lea
dec
mov
movs
lea
mov
clc
pop
lock
dec
ret
xchg
cmps
out
sbb
or
daa
lock
aas
cmp
pop
sub
fs
inc
fild
xor
pop
js
pop
xchg
dec
rcl
into
pop
push
hlt
lods
retf
scas
lds
push
retf
mov
push
mov
xor
dec
mov
lea
jne
mov
cmp
cmp
mov
sbb
pop
rcl
test
sbb
in
or
mov
xor
adc
ja
dec
adc
fs
xor
stc
xor
icebp
pop
and
sub
loope
or
or
or
leave
fld
fs
cld
inc
sbb
and
data16
mov
mov
(bad)
and
fs
mov
in
sbb
mov
leave
(bad)
or
daa
adc
mov
cmp
cli
int
test
clc
add
out
cs
rcr
sahf
ins
call
call
sbb
int
adc
xchg
leave
pop
ror
xchg
dec
das
xor
repnz
das
mov
test
push
in
dec
inc
aad
in
pop
cmp
inc
push
fbstp
mov
mov
out
call
int
jg
sbb
mov
jg
pop
and
mov
adc
xchg
js
pop
or
icebp
loope
pop
scas
mov
cmp
or
cdq
loop
std
cmp
cwde
es
or
sar
ret
jo
xchg
in
push
adc
lds
and
aas
daa
sbb
fisub
pop
mov
jecxz
test
inc
cdq
fmul
jecxz
jge
test
shl
push
sbb
sbb
xchg
sub
rcl
test
xor
sub
addr16
fcmovbe
jecxz
push
sar
mov
xor
dec
out
adc
jmp
retw
scas
repnz
push
mov
jp
mov
in
cmc
(bad)
ficomp
xor
cmc
cmp
or
jle
dec
adc
mov
pusha
push
bnd
aam
or
jge
cmp
adc
out
mov
adc
inc
add
jnp
ret
retf
ins
push
sub
sub
outs
adc
lds
cld
leave
mov
stos
jno
or
xor
fldenv
push
and
push
imul
adc
jmp
dec
mov
lods
mov
sub
cli
into
call
jnp
lea
jl
pop
cmps
movs
sbb
nop
mov
inc
or
adc
inc
mov
sbb
mov
add
mov
xor
int3
adc
out
inc
cmps
stc
pushf
jnp
std
js
cdq
stos
mov
jb
test
repnz
or
mov
fstp
push
hlt
cli
push
jae
lods
ret
xor
sub
mov
or
or
xchg
mov
loope
test
dec
ins
ins
mov
(bad)
fwait
enter
fiadd
out
shl
jge
and
adc
mov
add
pop
ret
div
push
mul
and
or
sub
loop
jg
xchg
fsubr
jno
pushf
adc
popf
mov
push
shl
inc
pop
xchg
or
cmps
fcmovne
stos
inc
fwait
aam
cmps
dec
xchg
add
push
lds
pop
dec
sbb
xor
adc
add
jmp
dec
adc
and
pop
loope
sub
add
test
mov
test
retw
fist
out
(bad)
pop
stos
inc
sbb
(bad)
inc
adc
in
jge
pop
cmp
jbe
test
add
clc
cmps
cmps
mov
loop
pop
push
call
mov
jo
jae
mov
loopne
sub
cmps
or
lock
xchg
(bad)
cld
pop
pushf
mov
ss
dec
(bad)
xor
arpl
(bad)
in
sub
icebp
aad
pop
inc
xchg
push
jnp
and
(bad)
cld
jp
sbb
cmp
sub
push
test
mov
outs
mov
adc
mov
inc
cmp
push
imul
and
ins
mov
mov
imul
adc
dec
lahf
dec
push
mov
adc
or
fxch
lods
sbb
mov
test
ja
jg
pop
dec
cmp
popf
jle
out
ins
cmps
xlat
mov
(bad)
sbb
cli
ja
(bad)
(bad)
ds
or
or
into
call
sar
or
pop
inc
adc
inc
or
xor
es
aaa
add
sbb
push
(bad)
push
push
push
cmp
xor
pop
iret
cmp
mov
sbb
lock
cmp
cmp
pop
dec
ins
sbb
stos
cmp
pop
cmp
pop
add
cmp
push
inc
fcmovnb
pop
dec
mov
cmps
(bad)
shl
outs
mov
in
sbb
adc
test
pop
out
or
pop
xchg
test
jne
mov
out
xchg
dec
xchg
popf
rcr
mov
pop
cdq
adc
into
faddp
sub
cld
inc
add
pop
lahf
jge
js
hlt
sbb
mov
stos
jmp
(bad)
mov
cmps
js
in
sahf
lock
cmps
push
mov
lds
xor
and
lods
pop
iret
scas
fisttp
sbb
xchg
push
in
push
sub
scas
mov
and
jmp
mov
or
mov
mov
jge
and
cmp
adc
data16
and
int3
pop
cmp
sub
stos
push
pushf
rol
cmp
arpl
mov
adc
ins
jno
imul
jge
pop
je
jae
dec
add
cmp
pop
xchg
add
retf
or
out
inc
int3
mov
outs
scas
gs
jp
inc
add
ret
clc
in
xchg
pop
xor
mov
cmp
loopne
nop
lea
out
push
test
sub
cmps
data16
sahf
lock
outs
or
inc
xor
adc
fwait
add
sub
cmps
dec
aaa
stos
mov
or
or
fs
and
loopne
xchg
es
mov
arpl
les
pop
lods
cld
or
imul
and
mov
jge
fstp
adc
dec
sti
(bad)
imul
pop
mov
std
idiv
sub
push
cs
call
jne
sbb
mov
inc
lods
xor
jo
xor
mov
sub
fist
js
xor
sub
fnstsw
push
jb
cmp
adc
(bad)
jne
cmp
jb
imul
or
call
fdivrp
mov
jmp
loopne
cmp
push
out
add
push
jns
jo
jecxz
mov
mov
or
div
into
pop
xor
xchg
lahf
add
sbb
cld
outs
inc
push
shl
ror
jno
out
dec
lds
ret
and
adc
test
xchg
adc
mov
sub
mov
movs
mov
fcmovnbe
jp
sbb
(bad)
ret
sub
imul
frstor
out
cdq
push
int
dec
adc
shl
cdq
repnz
fild
adc
adc
xlat
adc
lea
jae
and
adc
adc
test
push
mov
sub
fwait
dec
call
loope
enter
ror
fstp
and
mov
mov
jns
cmp
(bad)
dec
enter
out
push
pusha
test
push
push
int
mov
fadd
fstp
(bad)
dec
mov
out
icebp
loop
dec
adc
cli
lods
pop
xchg
xchg
sahf
cmc
dec
and
or
adc
push
pop
jge
push
and
mov
in
sub
pop
sbb
pop
xor
je
aas
sub
fisubr
shl
adc
fs
inc
and
bound
jno
js
cmp
stc
test
and
xor
nop
int
scas
cmp
inc
movs
ret
mov
neg
mov
test
add
xchg
pop
pop
loop
sub
je
cpuid
pop
cmc
xor
fmul
cmc
sbb
call
xchg
push
lea
inc
mov
mov
mov
mov
mov
pop
inc
in
pushf
dec
sbb
sbb
dec
ja
xchg
or
sbb
fldcw
movs
arpl
(bad)
cmc
cmp
les
enter
mov
mov
mov
mov
cwde
aaa
adc
adc
hlt
in
push
sbb
in
idiv
cmp
out
ror
or
jns
add
dec
leave
aad
int3
cs
jmp
mov
or
and
(bad)
fiadd
sahf
or
enter
mov
push
(bad)
mov
icebp
test
ficomp
out
and
cmp
(bad)
or
xor
imul
enter
add
pop
movs
imul
jne
out
ror
push
rcl
and
(bad)
jmp
push
(bad)
xchg
sbb
ror
sbb
sub
adc
loope
inc
mov
xchg
push
and
inc
add
pop
dec
popa
mov
jae
mov
fiadd
mov
addr16
xor
pop
and
lea
js
lds
rcl
cmp
es
dec
xor
retf
sahf
pop
ss
into
call
jns
pop
push
xchg
icebp
lock
clc
xchg
mov
cmps
cmps
pop
inc
and
xchg
loop
sub
mov
jnp
cmpxchg
outs
(bad)
mov
stos
leave
xchg
push
daa
aam
arpl
cwde
out
dec
dec
or
int
retf
push
jb
sbb
pop
(bad)
ins
add
push
mul
scas
adc
push
std
ret
or
addr16
stc
in
test
pop
sub
sub
mov
cli
dec
jge
mov
jns
pop
ins
ret
cmps
inc
adc
and
adc
std
xchg
stc
and
xchg
add
sub
xor
cmp
inc
aas
push
ins
jno
stc
xchg
imul
lahf
scas
test
mov
(bad)
fsubrp
(bad)
retf
xchg
or
lods
test
fdivp
ret
jp
push
push
pop
ins
out
push
fisub
fst
test
or
sub
xor
test
pop
jle
sub
out
outs
dec
sub
or
dec
dec
js
aam
jne
in
rcr
outs
mov
sub
sub
pop
pop
jne
cmp
shl
movs
or
(bad)
cmp
xlat
mov
xchg
and
push
push
dec
fldcw
hlt
xor
into
xchg
mov
add
(bad)
cmp
cs
das
ret
mov
aad
mov
xchg
push
outs
fst
out
xchg
mov
popa
icebp
(bad)
cmp
clc
push
sub
pop
and
ja
or
or
inc
lods
std
or
inc
(bad)
mov
adc
enter
aaa
cmp
push
push
cmp
sub
into
shl
xor
retf
cwde
mov
inc
jne
inc
call
or
outs
cmps
shr
jl
out
(bad)
in
hlt
inc
cmp
neg
sbb
imul
call
add
jmp
and
pop
ins
daa
dec
mov
sub
add
ss
push
sbb
and
scas
pop
and
push
xchg
sub
sbb
mov
pop
jmp
mov
mov
test
mov
jne
dec
jge
ret
in
retf
add
pusha
jp
inc
scas
sti
mov
push
aaa
les
popa
test
lods
jp
mov
push
sub
loop
arpl
rol
mov
pop
lgs
mov
fld
dec
scas
pop
add
iret
or
js
(bad)
(bad)
mov
mov
iret
out
sbb
in
ror
push
out
mov
mov
ret
or
jns
pop
(bad)
or
add
jno
xchg
add
pop
movs
stos
mov
adc
add
pusha
adc
sub
xor
xchg
shl
ins
outs
nop
imul
iret
sub
sub
loope
addr16
xchg
fcompp
rol
test
pushf
and
imul
cdq
outs
imul
stos
and
pop
cmps
shl
adc
scas
mov
iret
xchg
imul
je
sbb
into
push
lahf
xor
jnp
stos
cmp
loop
cdq
into
fadd
fdivr
xlat
add
jb
shl
mov
xlat
mov
xor
test
out
cdq
lods
test
test
fcomp
(bad)
xlat
push
push
mov
(bad)
ds
cmp
imul
call
int3
push
out
mov
(bad)
mov
push
lods
stc
nop
sub
jns
mov
sub
jl
push
dec
movs
mov
cmp
icebp
imul
out
out
outs
xor
aaa
cs
cdq
sub
outs
dec
xchg
test
out
and
js
mov
(bad)
cwde
jmp
sbb
stc
mov
pop
dec
xor
inc
push
xor
jecxz
pop
imul
mov
pop
sub
xchg
mov
xor
adc
jne
aad
sbb
xchg
or
dec
mov
rcr
lods
jle
sbb
jbe
mov
pop
mov
retf
xor
sub
lea
fsub
test
jno
pop
mov
cld
push
mov
xor
and
mov
(bad)
(bad)
aad
aaa
or
ds
pop
xor
add
mov
mov
mov
cmp
ret
ret
xor
sti
loopne
pop
xchg
mov
mov
push
je
hlt
call
stos
jae
adc
cs
scas
mov
jmp
ror
xchg
dec
jmp
jns
or
(bad)
fistp
jae
cmp
xor
das
sub
mov
mov
repnz
xor
pop
pop
adc
mov
jle
sbb
leave
sub
xor
dec
popf
jp
sub
into
adc
cmp
push
adc
push
movs
mov
dec
in
in
inc
mov
mov
push
shr
add
stos
and
ds
arpl
fnstcw
xor
inc
jecxz
add
lahf
pop
(bad)
jmp
std
sub
call
push
int
xchg
es
data16
add
les
ss
and
pop
aad
cmp
fisub
and
pop
popf
dec
add
in
cli
cwde
add
xor
lods
cmp
rcl
and
test
stos
iret
repz
add
aad
jl
test
retf
stos
and
sbb
dec
sahf
js
js
dec
scas
cld
xchg
lds
mov
enter
mov
xlat
jl
push
pushf
mov
mov
jbe
mov
adc
lods
lock
das
nop
sub
mov
mov
dec
rcl
add
or
and
cdq
jbe
pop
mov
xor
icebp
es
movs
mov
and
and
repz
push
popa
sbb
mov
std
retf
into
fcmovb
cli
fnstcw
mov
push
adc
es
or
test
inc
test
add
fldcw
pop
xchg
pminub
scas
cdq
xor
sub
push
les
xor
sub
retf
mov
and
mov
pushf
loope
mov
bound
std
pop
pop
sub
mov
fdivr
or
adc
imul
int3
(bad)
(bad)
add
mov
(bad)
lods
dec
cmp
lds
and
inc
xor
cdq
xor
pop
jmp
jb
in
push
adc
mov
fsubr
ret
push
outs
rcr
lods
call
dec
(bad)
out
push
xchg
loop
jl
retf
push
sub
mov
push
(bad)
ja
cs
jmp
test
data16
mov
pop
cmp
push
jns
lds
cmp
xchg
gs
shl
and
fucomp
lahf
out
inc
ja
(bad)
fistp
cmp
leave
sub
mov
retf
sahf
pop
les
cmps
or
in
cli
sbb
imul
inc
ja
lds
(bad)
xchg
jbe
loop
rol
and
fidiv
into
sar
out
push
inc
icebp
hlt
sbb
enter
fstp
or
into
stos
in
mov
and
in
adc
imul
adc
and
and
mov
push
movs
movs
inc
repnz
daa
inc
repz
test
fstp
(bad)
stos
cs
jns
jnp
push
outs
ins
sub
nop
inc
stos
dec
loopne
jecxz
ror
std
les
mov
cli
ds
call
call
outs
adc
cs
outs
adc
fisubr
mov
scas
int3
push
pop
sub
mov
lahf
xchg
sub
jl
call
and
jmp
(bad)
cwde
popa
or
test
les
pop
pop
cmp
clc
push
mov
and
xor
mov
sbb
ret
out
test
(bad)
pop
push
cdq
cmp
enter
and
call
jg
rcl
mov
shr
pop
leave
xor
push
pop
sbb
sbb
add
jmp
sub
push
data16
das
mov
adc
pop
stc
lods
or
push
cmp
(bad)
pop
jns
lods
sar
xor
cld
cmp
jne
in
mov
cmp
push
adc
aas
fwait
push
es
cdq
popf
arpl
jno
jl
xchg
ror
inc
je
sbb
mov
sub
dec
cmp
mov
inc
ret
dec
movs
dec
ss
aam
add
mov
mov
jmp
packssdw
and
outs
movs
and
add
call
mov
arpl
inc
lods
and
pop
or
sti
jmp
mov
mov
xchg
in
out
xchg
sub
sbb
dec
sbb
das
mov
mov
(bad)
and
faddp
jbe
pushf
sub
or
jecxz
cmp
ins
js
cs
lock
xor
sub
jg
xchg
xchg
fldcw
xchg
pop
fs
loop
lahf
into
std
fadd
jmp
repnz
bound
mov
lods
sub
mov
mul
push
jns
shl
leave
call
xor
and
call
repz
test
ret
ins
mov
add
or
adc
ror
dec
out
xchg
mov
pushf
add
jb
es
mov
pop
retf
ja
loope
sub
sub
add
loope
push
fcomi
xchg
movs
add
nop
cdq
cmp
xchg
rcl
sbb
or
inc
push
sub
cmp
add
sub
xchg
fisubr
aam
sahf
mov
jmp
push
adc
mov
mov
idiv
shl
test
movs
jns
sbb
sub
xchg
movs
sti
or
leave
lock
sub
in
or
mov
pusha
mov
push
movs
mov
jecxz
sub
inc
inc
ja
mov
fcmove
xchg
or
or
add
repz
push
xor
sbb
data16
fisttp
add
mov
mov
in
push
call
scas
nop
call
add
in
inc
xchg
dec
mov
into
fcomp
imul
in
std
arpl
out
jns
pop
imul
sub
mov
popa
jecxz
inc
ror
imul
loopne
(bad)
stc
push
sub
std
pop
ret
repnz
add
out
addr16
jns
jmp
or
icebp
or
pusha
retf
xchg
xchg
push
or
mov
inc
xor
sub
mov
sub
xor
jbe
fsub
scas
outs
rcl
jge
ins
add
inc
or
add
add
iret
cmp
push
cwde
and
in
icebp
and
test
iret
or
cmp
sbb
or
mov
xor
int
repnz
ins
inc
neg
cmp
mov
mov
call
not
mov
push
push
cmp
(bad)
mov
mov
pop
mov
into
pop
inc
dec
sbb
pop
ret
mov
xchg
dec
sbb
adc
or
out
sub
aas
xchg
xchg
loope
call
push
sti
pop
int
jmp
js
sbb
adc
stos
ret
jae
or
in
push
xor
leave
mov
fs
dec
fld
mov
dec
xchg
ror
scas
ins
into
mov
push
out
cwde
mov
daa
mov
mov
jne
sbb
sbb
ins
int
xchg
adc
fld
mov
repz
or
sbb
pushf
(bad)
jbe
xor
or
mov
mov
sbb
lock
ficom
and
fs
arpl
jmp
into
jle
and
fstp
sbb
adc
jle
or
jmp
das
in
push
sub
mov
jnp
mov
popf
enter
mov
je
xchg
add
push
cmp
adc
sub
mov
xchg
loop
jg
pushf
and
je
mov
jmp
jo
(bad)
cmp
(bad)
adc
shl
dec
fdiv
push
cmp
dec
mov
push
jl
(bad)
fnstcw
pop
pop
or
mov
out
and
shl
(bad)
adc
int3
add
xor
loope
(bad)
jecxz
sub
push
xchg
lds
sti
test
(bad)
and
cwde
cmp
fiadd
sbb
push
push
mov
xchg
push
xor
pop
call
in
mov
sub
dec
and
jo
das
scas
mov
in
adc
inc
sub
pop
push
push
loop
mov
fwait
cwde
loope
addr16
popa
add
xchg
ror
push
inc
pop
es
jae
sub
pop
sbb
push
mov
pop
jnp
pop
jmp
aam
xor
stc
(bad)
(bad)
adc
dec
and
hlt
rcl
cmp
cmp
inc
(bad)
push
shl
cdq
inc
pop
xor
cmc
dec
loopne
(bad)
dec
inc
test
sub
xlat
push
cmps
mov
mov
int
fst
into
jl
xor
mov
xchg
ins
(bad)
je
jnp
in
mov
ins
test
mov
repz
js
stc
mov
jge
aas
xlat
(bad)
xor
jmp
popf
daa
daa
(bad)
test
retf
inc
inc
icebp
dec
or
lods
mov
es
cli
ins
cmp
je
sbb
je
jmp
push
jecxz
or
outs
cmp
out
jo
mov
dec
pop
repz
push
pop
sub
xchg
dec
xor
bound
lahf
aaa
or
jmp
scas
fdivr
test
xor
xchg
icebp
gs
int3
dec
outs
xchg
pop
xchg
retf
fwait
xor
das
inc
push
lea
push
add
and
or
jnp
(bad)
cmp
call
test
call
dec
inc
iret
mov
ficomp
adc
aaa
std
idiv
mov
cwde
push
movs
sub
(bad)
mov
out
jle
xchg
cmps
xor
pusha
fdivr
test
loope
jp
arpl
iret
xor
mov
mov
out
data16
aam
sahf
test
je
cld
dec
sbb
mov
(bad)
loope
cmps
inc
mov
jecxz
dec
mov
jae
fld
mov
out
sbb
mov
add
and
xchg
ds
clc
in
test
jl
lock
jnp
scas
jmp
in
jmp
and
test
pop
sbb
inc
ins
in
scas
xchg
clc
mul
add
jmp
je
push
std
mov
lds
inc
and
xor
(bad)
cmps
xchg
push
mov
adc
not
dec
inc
in
jp
adc
fcmovne
icebp
push
in
nop
and
add
jbe
in
(bad)
(bad)
std
or
adc
xchg
and
or
mov
or
hlt
sbb
cmp
cli
adc
in
(bad)
push
inc
(bad)
sub
mov
int
adc
popf
inc
aad
mov
cmp
scas
jb
sbb
lea
adc
add
cdq
(bad)
frstor
mov
adc
aaa
aaa
les
pop
jno
xchg
xor
mov
clc
inc
es
mov
adc
sub
jbe
push
xchg
push
mov
sahf
jle
mov
mul
xor
add
jl
push
mov
les
repz
jo
ret
push
and
cmps
mov
cwde
call
shl
and
int3
xchg
adc
enter
sti
loope
jo
pop
shl
jmp
mov
or
dec
ja
bswap
sub
cmp
xchg
ins
hlt
inc
jnp
scas
movs
dec
dec
mov
lea
jb
popa
push
sbb
dec
xchg
jp
rcl
cmps
shl
cmp
mov
mov
cli
mov
or
mov
jns
test
adc
jmp
icebp
loope
mov
test
mov
adc
dec
fldenv
sbb
or
cmp
test
shl
les
ja
out
adc
ja
popf
ins
pop
jb
sub
out
fst
add
ins
daa
jnp
xchg
push
nop
push
push
mov
cli
xor
mov
jb
inc
aas
stc
xor
adc
dec
imul
xor
add
push
xor
sub
and
cmp
mov
fidivr
or
mov
mov
add
loope
lea
repz
fs
data16
jae
lock
jge
fild
xor
adc
nop
sub
dec
ror
shl
push
pop
push
out
mov
aaa
add
sub
lahf
rcr
imul
iret
or
test
clc
sub
dec
jecxz
cld
mov
lock
stos
std
xor
je
pop
outs
loope
xchg
mov
xor
shr
lds
cmps
adc
sar
push
inc
shl
icebp
sbb
push
push
pop
inc
inc
jle
add
mov
cmp
push
push
cmp
xor
call
jecxz
add
int
shl
sbb
out
cdq
add
fsubp
sar
icebp
push
xchg
add
push
mov
inc
out
outs
push
xor
pusha
cmps
mov
popa
xor
cmps
dec
ss
loope
and
fmul
mov
lahf
mov
jno
push
pop
daa
ret
test
arpl
xchg
pop
or
out
mov
ins
jb
sbb
iret
sbb
sahf
push
ficom
cmps
sbb
(bad)
xchg
ret
mov
dec
jb
mov
inc
shl
call
add
mov
sbb
cmp
add
and
add
pushf
imul
cld
dec
and
ja
rcr
pusha
movs
mov
bound
enter
push
pushf
sbb
lds
cmc
or
and
retf
je
lea
pusha
ins
js
imul
mov
sti
mov
pushf
adc
adc
pop
inc
pop
mov
add
add
sub
xor
ret
in
int
adc
lds
xchg
or
xchg
fiadd
bound
call
push
lahf
cmc
pushf
push
lods
inc
scas
cld
jno
scas
adc
lods
xor
xor
dec
retf
out
rcl
xchg
ss
push
leave
pusha
pop
(bad)
hlt
addr16
dec
imul
out
xchg
mov
pusha
inc
ins
xor
daa
bound
jno
jne
cmp
(bad)
not
jle
jae
maxps
cmc
mov
sbb
(bad)
and
sub
push
mov
(bad)
xchg
mov
xlat
add
mov
mov
push
jbe
bnd
sub
shl
push
mov
xchg
into
pop
fisubr
retf
scas
ss
sub
test
imul
fucomip
cmps
inc
mov
adc
daa
jbe
cmp
gs
mov
add
xlat
lds
(bad)
fs
scas
mov
mov
outs
mov
inc
or
in
loopne
ret
les
xchg
mov
enter
xchg
cvttps2pi
pop
jo
mov
test
into
lahf
jmp
sbb
add
pop
xchg
sub
push
inc
out
xchg
inc
mov
(bad)
and
les
push
mov
(bad)
adc
inc
push
ja
call
cld
push
add
les
movs
js
xor
pusha
in
xor
and
out
push
push
cmps
cmps
pushf
sar
jb
add
(bad)
movlps
bound
mov
shl
xchg
push
shr
lods
aas
(bad)
rol
cmp
data16
sub
popa
fstp
jno
out
sbb
pop
test
outs
jmp
fidiv
adc
ficomp
inc
aaa
lds
in
cmp
bound
jae
enter
cmps
xchg
and
adc
retf
push
adc
cmp
xor
xor
xchg
pushf
push
aad
fadd
mov
popf
push
pop
pushf
enter
dec
dec
sar
sbb
test
je
sbb
fs
sbb
sti
fld
into
xor
cmp
xchg
scas
xchg
jp
popf
sbb
hlt
xlat
xor
xor
loope
xchg
xor
mov
lahf
mov
clc
cmp
adc
dec
mov
pop
pop
add
mov
mov
adc
into
or
dec
and
dec
data16
mov
pop
jb
shl
jbe
adc
icebp
and
mov
and
jmp
dec
adc
out
mov
dec
popf
cmp
xchg
inc
adc
mov
into
ror
inc
pushf
mov
test
test
adc
adc
xor
(bad)
push
sbb
or
or
push
jp
jge
push
cmp
and
data16
pop
mov
shr
nop
cmp
ja
in
push
aad
sub
mov
cmp
mov
gs
mov
enter
jp
movs
pop
out
into
rcr
jle
outs
movs
dec
push
sahf
xor
jno
js
push
ins
pop
mul
adc
pop
cli
mov
xchg
in
pop
scas
inc
shr
add
inc
pop
or
cmp
call
aam
adc
out
mov
lds
pushf
(bad)
dec
jecxz
out
cmp
push
or
inc
sub
jb
dec
cmp
pop
jmp
test
jmp
sbb
inc
push
scas
add
ret
call
leave
lock
test
sahf
(bad)
mov
stc
xchg
and
outs
or
dec
jo
in
es
jge
cmp
(bad)
xchg
dec
mov
aaa
and
adc
jne
mov
rol
dec
lods
add
inc
in
push
xchg
adc
cmp
cwde
loopne
ficomp
xor
clc
xor
lock
push
arpl
sbb
pop
jl
mov
and
out
mov
icebp
dec
fiadd
push
scas
inc
and
dec
dec
mov
fst
mov
(bad)
jne
adc
xor
add
or
inc
scas
sub
pop
mov
fs
or
fdivr
es
frstor
dec
xor
loope
movzx
jp
pop
push
repnz
js
fisttp
push
jle
pop
xchg
dec
pop
cdq
scas
ficomp
push
fsub
mov
imul
inc
rol
das
sub
cmp
icebp
push
add
jmp
nop
aas
mov
cmp
mov
and
ret
xchg
inc
cmp
in
push
xchg
dec
dec
test
push
pop
mov
add
add
or
popf
push
dec
cmp
lods
out
mov
sub
xchg
xlat
adc
clc
comiss
cmps
mov
adc
ins
cmps
loope
xor
jno
sar
push
cmp
inc
and
pop
bound
jmp
dec
add
pop
dec
fld
or
loope
(bad)
pop
push
or
and
cdq
mov
ds
cmp
arpl
test
lods
lock
popf
mov
adc
add
mov
aad
test
and
sub
sub
add
hlt
and
dec
or
add
loop
push
shl
xchg
imul
call
test
in
loope
xchg
inc
xchg
inc
icebp
nop
(bad)
sub
imul
push
fld
rol
test
daa
add
adc
mov
mov
ins
fsubp
addr16
out
scas
push
sbb
jmp
stos
xchg
or
pmullw
ror
xchg
adc
repnz
out
imul
adc
add
mov
sbb
(bad)
push
aas
mov
mov
retf
sbb
push
cmovg
add
mov
enter
xchg
imul
push
test
xor
mov
fimul
iret
mov
jmp
iret
xor
test
sbb
push
and
sub
jmp
(bad)
out
lock
ins
jg
jmp
lock
xchg
dec
arpl
das
pop
mov
movs
xor
ror
ja
leave
cmp
jmp
xchg
pop
mov
gs
and
add
or
icebp
pusha
push
sub
cmp
inc
outs
or
pop
outs
aam
ins
pop
(bad)
(bad)
stc
in
mov
les
xchg
dec
xchg
call
mov
(bad)
iret
cmps
fbstp
or
fild
imul
push
in
xchg
cdq
mov
test
movs
inc
aas
pop
repnz
push
jmp
push
fcmovnbe
sub
xor
and
sti
inc
cmp
mov
mov
(bad)
sahf
dec
hlt
(bad)
or
les
dec
popa
outs
xchg
popa
jne
mov
inc
push
mov
add
mul
addr16
clc
mov
dec
stos
xchg
jb
mov
and
imul
fnstsw
and
mov
xchg
push
jb
push
(bad)
int3
inc
shl
adc
retf
lock
int3
push
add
popa
loope
or
fsubr
cdq
cli
into
jle
lahf
or
movs
jmp
xchg
lock
inc
inc
gs
and
test
mov
xchg
cmp
add
bound
mov
scas
(bad)
js
adc
test
inc
scas
mov
jbe
push
lahf
dec
or
mov
cmps
sbb
push
jle
cdq
add
(bad)
sub
xchg
mov
pop
adc
inc
add
shl
push
mov
xor
or
imul
imul
cli
bound
imul
gs
dec
stos
fimul
(bad)
lods
je
sbb
int
aaa
fcmove
pop
and
aas
xchg
mov
pusha
adc
jno
(bad)
jecxz
mov
popa
lds
xor
mov
pop
or
in
(bad)
outs
loop
fxch
inc
test
inc
fistp
dec
mov
mov
iret
pop
nop
inc
sbb
out
inc
sar
jmp
hlt
mov
mov
inc
test
mov
js
xchg
cmp
or
xor
adc
aaa
xchg
or
(bad)
mov
mov
adc
(bad)
lods
pop
mov
sar
dec
sbb
call
cmp
and
inc
fmul
fcom
lock
or
call
popa
test
xor
movs
inc
cmp
and
loop
daa
jmp
fsubr
push
pop
push
and
xchg
jno
add
arpl
inc
push
mov
cld
leave
pop
mov
(bad)
js
mov
dec
sbb
xor
and
fistp
scas
inc
mov
pop
nop
ja
popa
fsub
aas
mov
not
cmc
xchg
xchg
sub
inc
daa
jo
test
nop
mov
xor
adc
sub
mov
test
push
out
cli
mov
pop
pop
data16
mov
cmps
mov
retf
daa
mov
cmp
aad
push
bound
loop
js
aam
icebp
sub
hlt
int
xor
mov
jmp
jg
dec
xchg
adc
and
lods
inc
cwde
xor
push
cdq
xchg
outs
jg
mov
and
adc
push
jge
jmp
xor
dec
add
test
push
les
cmp
fld
retf
fdiv
pop
pop
outs
arpl
inc
lahf
or
push
mov
jne
jg
add
pop
daa
mov
jmp
sbb
inc
data16
adc
xchg
mov
stos
lahf
mov
test
shl
dec
sub
pushf
in
jmp
enter
movs
or
inc
add
in
sbb
adc
add
pusha
fdiv
or
das
and
sar
test
add
or
retf
mov
mov
jnp
outs
push
sar
fisubr
mov
inc
or
aas
push
pushw
jmp
out
mov
push
mov
lods
push
dec
dec
mov
ret
xor
inc
in
movs
shr
shl
gs
sub
pop
ins
(bad)
stc
jae
test
dec
jmp
adc
call
retf
xchg
test
add
leave
and
test
push
push
fwait
xchg
fnstenv
mov
lea
aas
pop
(bad)
neg
out
retf
or
dec
in
sbb
cdq
add
dec
(bad)
jns
mov
jno
push
dec
pop
je
sub
rol
out
bound
mov
sub
add
(bad)
hlt
out
sbb
push
cld
mov
ror
xchg
scas
cli
push
push
or
es
fldz
mov
mov
jp
sbb
jne
jno
stc
xor
push
mov
into
xchg
icebp
inc
jne
xchg
push
repz
mov
dec
mov
jge
add
gs
push
out
xchg
fst
mov
cld
cmp
push
mov
adc
xchg
push
mov
leave
popa
stc
test
ja
repnz
sahf
xlat
and
pop
iret
mov
bndstx
adc
out
cmps
xor
xchg
movs
rol
loopne
or
aad
jg
cmp
dec
sti
inc
inc
mov
sub
adc
nop
std
scas
jmp
adc
in
pop
test
fcomp
cwde
adc
sahf
loop
popf
jecxz
outs
jle
(bad)
cmps
sbb
sbb
adc
call
xor
or
mov
xchg
and
imul
mov
mov
sub
icebp
push
outs
push
(bad)
xchg
dec
xchg
lods
adc
push
pushf
mov
cvtps2pi
cs
jns
add
movs
and
rcr
cmps
inc
leave
call
adc
sar
and
mov
or
sub
sub
mov
sbb
xchg
xor
jno
mov
shl
dec
pop
daa
push
add
and
iret
jne
xor
out
adc
mov
das
adc
pop
push
std
add
retf
aad
inc
hlt
mov
xchg
outs
mov
xchg
lock
mov
inc
imul
aas
ins
(bad)
jno
pop
int3
jae
es
ds
cmps
jb
sbb
popa
add
jo
lock
push
pushf
loope
adc
cmp
ins
fisttp
movs
fs
mov
pop
test
and
imul
jmp
je
add
hlt
mov
ins
rcl
es
pop
jb
pop
mov
sbb
pop
cld
adc
in
stos
shl
cli
call
add
pop
dec
mov
xchg
(bad)
test
or
or
cdq
ins
fcom
les
xor
adc
sahf
std
cmp
dec
pop
sar
shr
jo
int3
push
dec
xlat
and
addr16
inc
rol
(bad)
es
xor
cli
aas
mov
xlat
out
jno
ja
ror
xchg
sbb
jbe
loope
sub
(bad)
or
jnp
adc
push
fwait
sbb
cmp
sub
test
push
push
ds
test
in
inc
sbb
hlt
and
cmps
and
push
adc
cdq
fst
mov
movs
(bad)
sahf
jne
popf
int
icebp
jp
pop
mov
pusha
jnp
mov
jmp
mov
not
sbb
xchg
mov
outs
inc
mov
mov
int
rol
or
daa
in
pop
cwde
xchg
jl
stos
cmp
leave
pop
jmp
bswap
pop
or
popa
aaa
mov
stos
sbb
cld
cmp
in
xchg
popf
mov
xchg
adc
cmp
dec
enter
movs
(bad)
fcomp
iret
stos
push
sbb
mov
push
in
and
loopne
pop
mov
cwde
iret
mov
mov
sbb
xchg
sub
mov
xchg
pop
sub
jo
dec
mov
pushf
int
ror
call
cmp
xchg
xor
enter
dec
scas
call
ds
jmp
cwde
in
push
test
dec
push
sbb
out
gs
mov
(bad)
int3
mov
not
sbb
mov
jecxz
inc
rcr
neg
jge
and
test
mov
mov
and
push
popf
scas
icebp
cld
jns
(bad)
lods
cmp
js
fnstsw
pop
lfs
and
mov
mov
add
fmul
jl
pop
jle
mov
jb
int
add
adc
sbb
jno
xor
sbb
stos
cdq
(bad)
enter
lea
mov
and
(bad)
es
jecxz
jo
cs
stc
out
out
hlt
sub
jne
mov
xchg
sbb
ss
ins
mov
jmp
push
or
sub
cwde
sbb
mov
mov
mov
outs
aaa
push
out
(bad)
mov
sbb
sahf
bound
es
imul
movs
jo
push
les
jmp
fwait
push
mov
adc
call
push
imul
mov
cmps
sbb
or
sub
add
lods
lea
loop
mov
jmp
clc
mov
in
test
ret
movs
(bad)
fild
fs
arpl
push
sub
fcom
jp
push
(bad)
or
mov
ret
add
into
cmp
jle
cmps
sbb
mov
pop
xchg
mov
adc
push
push
ret
call
mov
lods
or
sbb
ret
mov
jbe
ins
lods
push
ret
adc
mov
mov
cld
cmp
mov
lock
or
inc
add
aas
dec
add
xor
int
cmp
cld
cmp
mov
mov
mov
dec
call
cmc
push
xor
jns
mov
lahf
ins
jo
cmp
mul
push
dec
cmp
add
push
push
add
mov
mov
add
mov
pop
inc
xlat
sub
mov
adc
das
xor
cmp
push
imul
xor
sub
and
sbb
sub
aas
or
or
sub
mov
inc
retf
pop
call
inc
adc
mov
stos
inc
(bad)
mov
add
stc
jmp
popa
(bad)
mov
mov
dec
adc
push
lods
scas
(bad)
mov
push
jbe
daa
dec
sbb
out
mov
cld
sub
and
mov
push
in
pop
jnp
sbb
push
or
shl
xchg
adc
rcr
leave
das
lahf
jae
cld
jo
cmp
imul
mul
xchg
mov
pop
pusha
cwde
xor
sub
and
push
push
xchg
test
scas
cmps
popa
jno
dec
or
fwait
sub
test
xor
mov
shl
into
jle
pop
jp
xchg
enter
adc
jl
loope
lahf
jb
sub
inc
pop
adc
jne
aam
push
adc
mov
push
fimul
push
push
lahf
fcmovu
mov
call
jecxz
retf
neg
dec
call
xor
stc
imul
popf
iret
lods
jle
mov
(bad)
mov
enter
sub
pop
mov
or
fsub
cmp
cdq
sub
lods
(bad)
not
mov
xor
ror
int3
mov
sbb
adc
sub
jb
movs
sub
mov
adc
xlat
or
pop
out
imul
jle
dec
in
push
aam
sbb
int3
in
mov
lds
test
dec
xor
adc
retf
(bad)
cdq
shl
xor
add
dec
call
mov
popa
adc
jne
bound
and
aam
imul
jo
xchg
inc
aam
adc
std
sbb
les
js
push
jns
jmp
xlat
aas
push
cld
lods
jl
retf
mov
fs
jmp
les
enter
std
mov
lods
clc
xchg
in
sbb
pop
inc
sbb
sub
mov
scas
vsubss
and
(bad)
mov
adc
outs
popa
fsubr
sub
and
xchg
lods
xor
iret
mov
sub
aam
out
cld
test
jmp
pop
shl
or
addr16
inc
mov
push
cwde
and
mov
or
ret
scas
mov
jg
shr
dec
aad
xor
mov
dec
retf
movq
pop
mov
(bad)
das
jno
jmp
jp
retf
(bad)
sbb
js
or
inc
cmp
in
pop
add
mov
jne
xor
xor
call
and
sbb
fnstcw
(bad)
retf
stc
icebp
mov
mov
push
mov
fcmovu
jb
mov
jne
outs
and
fdiv
mov
inc
out
mov
pop
xchg
fidivr
add
jae
push
out
bound
imul
loop
inc
pusha
pop
jle
fistp
jmp
jmp
in
fild
fld
mov
iret
das
jmp
xor
ret
in
xlat
and
cmps
xchg
test
pop
icebp
push
dec
mov
and
xchg
sub
xchg
mov
mov
fldenv
repz
pop
and
sub
inc
sahf
addr16
lea
jmp
mov
popf
sbb
leave
inc
je
jmp
cmc
movs
inc
push
push
and
jnp
out
cmp
jmp
outs
jo
imul
repz
push
outs
ins
xchg
in
cmp
loop
inc
rol
mov
add
imul
mov
repz
(bad)
lds
fs
mov
adc
mov
ins
sbb
into
int3
inc
cld
dec
and
loopne
sub
daa
mov
sbb
mov
iret
xor
pop
dec
js
inc
test
test
jmp
pop
ret
inc
and
add
call
fcom
jno
retf
pusha
jne
aam
push
inc
fisub
or
or
sub
push
cmp
sbb
or
es
mov
jecxz
cmc
cdq
clc
pop
rcr
fdiv
sbb
(bad)
call
jecxz
ret
(bad)
inc
out
and
inc
ficom
adc
cwde
cmp
sub
xchg
or
push
hlt
(bad)
nop
adc
stc
sbb
icebp
xchg
sbb
cli
lods
pop
es
dec
mov
imul
cmps
fwait
mov
movs
sti
pusha
push
mov
lods
mov
pop
push
shl
xor
pop
scas
cmps
sbb
pushf
xchg
push
jb
xchg
fcomp
xor
jo
pop
lds
cwde
and
or
sub
adc
xchg
sbb
and
mov
mov
repz
lahf
mov
je
scas
fwait
adc
out
ss
sub
movs
repz
out
xchg
jmp
adc
repnz
and
retf
cmc
xchg
mov
sbb
scas
adc
inc
sbb
repz
ror
fiadd
sub
fistp
mov
fst
add
inc
sub
in
jg
push
(bad)
push
sahf
rcl
sub
mov
mov
fistp
dec
cwde
int3
loop
(bad)
or
jg
in
mov
cs
adc
aad
mov
adc
pop
xor
mov
sti
inc
cdq
fdiv
clc
cmp
sbb
jmp
inc
sub
gs
push
and
jno
mov
ffree
test
sahf
cmp
sub
in
add
pop
cmp
sbb
sahf
sub
scas
jg
cs
mov
leave
mov
adc
mov
pop
cmp
add
inc
push
sti
test
xor
in
hlt
int3
inc
and
cmp
sub
dec
xchg
jmp
repz
mov
fidivr
inc
inc
xchg
pop
retf
int
add
bound
mov
test
in
dec
sub
test
xor
xlat
jae
mov
es
aam
imul
out
pop
sbb
push
pop
sub
xor
jnp
xchg
xor
cmp
mov
ss
(bad)
neg
fwait
(bad)
jns
aaa
add
mov
push
hlt
les
cmp
not
xor
push
or
push
add
dec
push
retf
jmp
mov
(bad)
mov
xchg
enter
add
scas
retf
stc
xchg
sbb
push
imul
popa
sub
xor
popa
scas
mov
rol
mov
jne
pop
lds
hlt
jae
dec
cdq
and
ins
daa
dec
mov
mov
cmp
jmp
push
xor
mov
or
pop
in
add
mov
aad
pop
sub
aaa
jnp
or
shl
lods
sub
mov
mov
rcr
mov
cmp
xchg
sbb
or
dec
(bad)
mov
fsubr
or
mov
ret
push
mov
imul
imul
push
add
push
loop
push
lds
scas
cwde
repz
sub
push
xor
xor
das
fisubr
xor
dec
into
movs
xchg
mov
mov
dec
pop
out
test
fadd
add
sub
push
dec
sbb
lds
sbb
bound
mov
call
and
cmp
pusha
xor
fwait
jecxz
xor
icebp
cli
movs
push
imul
call
jp
push
inc
imul
ret
in
(bad)
add
es
sbb
rcr
cmps
lea
sahf
add
rcr
jae
mov
movs
jle
mov
sbb
lea
adc
mov
mov
sti
out
aad
xor
movs
stos
inc
mov
jnp
inc
pop
push
ror
leave
movs
jl
(bad)
ds
das
dec
cmps
add
(bad)
xor
test
jle
mov
in
ret
and
loop
movs
pop
retf
or
sti
fwait
jle
movs
mov
push
sub
mov
xchg
pop
cld
inc
mov
movs
fucom
imul
shl
retf
cmp
daa
or
add
mov
mov
in
dec
or
int3
stos
lock
fdiv
or
jnp
cmps
xchg
mov
cmp
cmc
adc
daa
fisub
mov
ds
push
nop
stos
ins
sbb
loope
fisub
seta
jp
leave
xchg
test
stos
gs
popa
jp
push
(bad)
mov
mov
inc
js
cdq
and
jo
push
sub
sub
push
mov
std
xchg
out
pop
pop
aam
sbb
jle
daa
mov
sahf
fisttp
mov
cmove
movs
sub
out
(bad)
xchg
jg
mov
mov
xchg
add
pop
xchg
out
fidiv
movd
pop
loop
jne
mov
mov
and
cmp
mov
popf
or
add
cmp
inc
and
and
mov
js
lea
ins
retf
aam
cmp
cld
mov
(bad)
fild
in
gs
cli
icebp
stos
sbb
and
cmp
sbb
fdiv
mov
jns
js
cmp
aas
lea
mov
mov
cdq
cli
sti
je
dec
imul
mov
test
cmps
ret
push
bound
jno
pop
sbb
scas
js
mov
jmp
aaa
jne
add
inc
adc
mov
inc
mov
outs
sbb
and
aam
lea
jns
fs
xor
push
in
mov
inc
xchg
xchg
jns
inc
mov
mov
fcom
and
arpl
popf
jmp
mov
fs
pop
retw
aad
ins
pushf
js
repnz
adc
sahf
sbb
addr16
int3
stos
or
daa
inc
xchg
repz
gs
fimul
jp
cmp
mov
inc
push
xor
cs
dec
xor
sbb
sbb
and
and
imul
out
popf
repz
gs
aaa
nop
mov
dec
add
push
mov
ss
xchg
sub
xchg
adc
mov
jge
and
repz
test
mov
mov
add
sbb
dec
les
cmps
test
xchg
cmp
rcr
(bad)
xchg
and
dec
jge
jg
xor
popf
xor
or
jl
fst
in
lods
in
cwde
fld
xchg
retf
fcmovnb
or
outs
out
(bad)
jbe
push
dec
cli
mov
push
push
push
cmps
dec
or
xchg
jge
les
fs
or
mov
ins
jae
add
lahf
push
or
pusha
sbb
push
cmp
xchg
call
call
sub
lea
loop
(bad)
aad
scas
pavgb
retf
sbb
outs
lea
and
popa
(bad)
cmp
out
push
dec
mov
dec
adc
fist
pushf
inc
aaa
inc
shl
dec
retf
outs
xor
fcmovb
aas
xchg
jp
sahf
jnp
test
jb
inc
xchg
adc
push
hlt
ror
push
jmp
popf
imul
repz
repz
pop
cmps
popa
xchg
xor
add
jle
sub
inc
pop
cmp
xor
lods
sbb
mov
lods
mov
clc
inc
inc
xchg
jmp
mov
in
into
test
in
fcom
clc
(bad)
inc
(bad)
fcomp
push
imul
pop
(bad)
push
out
mov
pop
in
adc
idiv
pop
xor
cmp
out
test
push
pop
push
pop
xor
mov
or
mov
pop
mov
cmp
daa
ret
jmp
fs
(bad)
pop
cld
mov
sub
cmp
mov
sub
aas
dec
bound
imul
inc
lods
jg
xlat
adc
cli
das
jle
mov
xor
ffreep
lahf
push
jo
inc
pop
mov
dec
aaa
push
xchg
adc
call
movups
pop
mov
in
xor
daa
dec
push
mov
(bad)
and
cmp
pop
scas
xchg
gs
jmp
pop
jp
outs
dec
in
jecxz
sub
and
jns
(bad)
mov
mov
sbb
and
outs
loope
adc
imul
ret
push
jbe
les
cdq
mov
and
sahf
jp
repz
fdivr
adc
push
mov
push
int3
add
nop
iret
inc
push
pop
adc
dec
mov
pop
xchg
cli
dec
push
leave
xchg
loop
ja
dec
cmc
mov
cmp
sub
gs
sahf
fnsave
mov
js
pop
cmp
repz
rol
pop
or
out
adc
push
push
push
or
xor
push
imul
nop
rol
mov
in
or
cmps
jl
jmp
mov
shr
stc
jg
mov
pop
je
xchg
bound
mov
imul
sbb
add
jecxz
mov
push
icebp
cmp
pop
jmp
jb
jns
fwait
stos
inc
push
jmp
scas
or
push
or
jbe
aad
pop
test
(bad)
pop
dec
pushf
popf
pop
mov
shr
push
mul
push
inc
inc
call
or
adc
mov
daa
call
dec
jb
jg
outs
or
mov
movs
out
cwde
push
fcomp
retf
mov
jmp
ret
test
pushf
out
cmps
pop
pushf
outs
add
popf
mov
mov
inc
movs
and
out
int3
mov
xchg
dec
push
pop
mov
jge
cmp
cdq
scas
aas
cmp
sbb
mov
sub
aaa
inc
frstor
jl
mov
(bad)
ror
les
(bad)
xor
cli
rcr
popa
jae
pusha
call
sbb
rcl
scas
jnp
fild
inc
inc
fisub
or
imul
enter
push
into
xchg
push
scas
(bad)
rcl
mov
jp
ret
nop
and
nop
xchg
mov
sub
dec
sub
adc
adc
outs
push
bound
retf
mov
fild
popf
sub
aam
add
xchg
jg
jl
sub
jl
mov
jg
icebp
int
out
pop
push
pop
xor
jl
jns
jne
ja
loopne
mov
mov
push
sbb
xor
mov
clc
cdq
jmp
dec
cld
and
adc
pop
or
mov
inc
mov
dec
jmp
cmovns
jecxz
jl
(bad)
in
push
adc
pop
sub
mov
dec
loop
add
sub
cmp
outs
dec
bound
inc
imul
cmp
xchg
and
movs
in
popa
lahf
rcr
pop
loope
das
mov
push
scas
push
xor
mov
sahf
push
adc
or
je
fwait
inc
(bad)
mov
(bad)
out
mov
mov
cmp
mov
int
pop
mov
leave
mov
pop
inc
jmp
and
jge
fnstsw
dec
add
ds
and
jle
fiadd
mov
jp
loop
mov
inc
cmps
jmp
div
mov
pop
mov
hlt
mov
pop
add
fwait
or
xor
inc
sub
adc
or
das
out
nop
fsub
and
cmc
neg
dec
pop
nop
mov
or
in
scas
test
call
lock
and
call
aam
and
adc
ins
inc
mov
jle
mov
jo
es
test
cmp
mov
sbb
jns
mov
adc
mov
jo
adc
jle
push
aas
mov
mov
inc
test
cmps
stc
je
mov
jae
sbb
imul
(bad)
push
xor
call
gs
xchg
cmp
push
mov
repz
sbb
scas
xchg
shl
xor
leave
dec
adc
mov
fsubrp
jae
fbld
es
mov
ficom
pop
mov
push
bnd
mov
dec
mov
test
ins
ja
popf
cmps
(bad)
push
cmp
scas
shl
jl
mov
pop
shl
mov
inc
jns
cmp
je
or
ds
xchg
hlt
mov
mov
push
sub
jns
movs
cmp
xchg
movs
ficomp
mov
out
ss
inc
and
movs
add
inc
mov
sub
ret
lock
sbb
inc
or
pop
add
int
test
xchg
pop
out
sbb
aad
push
(bad)
shl
inc
and
jp
add
sub
test
lahf
push
inc
dec
ss
and
in
mov
mov
inc
jmp
or
les
loop
xor
mov
loope
or
cmp
imul
call
mov
into
push
inc
rcr
aas
mov
xchg
rol
sub
das
jno
(bad)
out
sar
mov
in
lods
xchg
out
xchg
mov
aam
test
jle
fcmovnu
fwait
jne
adc
fdiv
fistp
jge
push
scas
int3
(bad)
addr16
and
bound
int3
pop
mov
cmp
div
stos
call
js
les
(bad)
jl
xchg
cmp
dec
xchg
dec
mov
mov
add
inc
data16
or
pop
add
push
jns
cwde
cmp
sub
and
push
jbe
jbe
out
and
in
and
jle
and
rol
jae
fcom
cli
cmc
addr16
outs
jo
xchg
push
jbe
pop
xor
push
push
fadd
int
clc
mov
and
(bad)
mov
sti
cld
int
ins
shl
loopne
call
sbb
fld
in
rcl
fisttp
cmp
cs
mov
fcomp
ror
adc
mov
add
aaa
push
cmp
rcl
push
jmp
xor
jae
and
call
jae
mov
lds
mov
or
or
add
movs
popf
jb
es
aam
pusha
add
nop
or
dec
push
jle
(bad)
cmp
xchg
(bad)
mov
mov
cmp
out
mov
push
mov
cmp
jge
fcomp
leave
push
adc
sbb
cmps
pop
cmp
push
les
imul
iret
mov
movs
sbb
dec
jb
inc
mov
in
std
cmp
ret
aas
bound
sbb
test
jle
push
lock
adc
cwde
sar
jb
dec
retf
fcmovbe
jmp
repnz
dec
cdq
and
loope
mov
out
inc
stos
iret
add
scas
add
add
inc
movs
xchg
dec
cli
jbe
repnz
or
popa
jno
xchg
aaa
jle
ror
add
out
test
push
push
adc
pop
inc
add
(bad)
push
iret
hlt
ins
ds
mov
sahf
mov
jmp
jge
dec
out
and
mov
out
ror
(bad)
lea
sbb
cld
adc
jmp
pop
cmp
sbb
and
mov
mov
or
sbb
icebp
add
sahf
ror
add
ret
dec
xor
pop
xor
xchg
inc
mov
hlt
hlt
mov
jb
cli
jne
lock
or
jb
cli
jbe
enter
into
and
daa
test
sbb
add
cmp
xchg
sub
sbb
aam
jle
pushf
mov
(bad)
lahf
xlat
mov
popf
cmp
cwde
xchg
inc
arpl
loopne
loop
pop
shl
fldcw
sub
xor
jl
scas
mov
aas
test
cs
inc
mov
push
outs
hlt
daa
out
out
mov
mov
leave
shl
push
gs
outs
(bad)
nop
out
and
aas
or
loop
rcl
sahf
in
adc
dec
nop
lea
outs
mov
xor
mov
mov
or
jg
sub
mov
add
arpl
nop
loopne
jmp
clc
xchg
sub
mov
sub
mov
xor
mov
stc
pop
(bad)
adc
lahf
test
add
gs
in
xchg
mov
jne
repnz
jbe
in
push
mov
fdivr
rcl
pop
call
out
mov
pop
(bad)
add
sar
out
fnstcw
mov
(bad)
or
mov
xchg
and
cmp
push
mov
inc
inc
sar
mov
xor
loop
addr16
shl
xor
push
mov
mov
sahf
xchg
outs
fldenv
inc
pop
mov
push
dec
retf
rol
mov
pop
fdivr
rcl
aas
nop
jae
xor
(bad)
mov
js
aas
mov
std
aam
and
xlat
xchg
gs
mov
out
jg
sbb
mov
out
in
imul
push
rol
adc
mov
adc
mov
dec
jl
aas
imul
mov
and
in
scas
enter
adc
push
inc
nop
sub
ret
dec
sti
inc
dec
scas
jecxz
enter
rcl
popa
inc
push
addr16
jmp
fistp
test
cli
jmp
test
mov
xchg
fist
and
sbb
dec
mov
or
or
jae
dec
ds
loope
push
movs
out
sub
setne
test
popa
outs
(bad)
mov
jg
(bad)
scas
movs
mov
popa
das
(bad)
adc
cmps
shl
daa
test
sbb
in
dec
rcr
lea
mov
out
add
mov
(bad)
lahf
cmp
std
mov
and
xor
sar
and
xchg
cs
cs
cld
je
ret
sub
in
xor
xor
outs
pop
cmp
idiv
cmps
(bad)
call
cmp
mov
sub
xor
fidiv
fwait
jmp
cmp
in
out
mov
xor
das
jno
jp
adc
mov
sar
sub
mov
je
cdq
adc
xchg
mov
ja
std
inc
or
push
in
or
mov
xchg
inc
lock
neg
das
cdq
mov
fneni(8087
jl
popa
push
pop
mov
mov
ret
lahf
or
dec
push
pop
cmps
sbb
adc
aaa
fnstsw
push
ret
or
mov
stos
es
(bad)
cmp
xor
jmp
iret
sbb
rcr
dec
and
push
and
aam
sbb
adc
jbe
test
cmc
stos
inc
shl
sahf
js
test
in
xchg
packsswb
lahf
xor
or
fidivr
mov
and
nop
inc
es
inc
cmp
aaa
xor
xor
leave
ds
popf
mov
outs
addr16
dec
int
jle
test
or
cdq
mov
int3
addr16
add
mov
fdivr
or
ss
mov
cmp
pushw
mov
xor
add
ret
sub
add
loope
pop
or
sub
add
inc
or
or
sbb
in
jae
lods
loop
mov
push
cmps
sbb
or
clc
push
ins
test
mov
mov
nop
test
pop
cs
mov
sbb
push
jb
inc
into
cld
shr
stos
xadd
mov
frstpm(287
jae
xor
fdivr
iret
mov
fdiv
dec
imul
cmc
popa
xor
add
lds
cmps
sub
and
retf
pop
into
push
mov
xor
xchg
js
sbb
push
xor
outs
sbb
aam
out
sahf
pop
mov
dec
movs
imul
xchg
mov
dec
push
shl
int3
(bad)
push
or
int
gs
into
xor
sbb
cdq
daa
jno
cmps
xchg
scas
xor
dec
xor
stos
les
daa
xchg
adc
mov
xor
xor
jg
xchg
jns
in
mov
neg
sub
jns
fmulp
lods
cli
add
sar
jne
add
mov
shl
and
xchg
mov
mov
adc
neg
mov
shl
add
xchg
mov
jno
sbb
push
fdiv
outs
jp
mov
lahf
(bad)
jmp
push
jg
clc
xor
pop
inc
aam
mov
cmp
call
push
aas
mov
ss
popf
mov
mov
cmps
sahf
iret
adc
stos
adc
(bad)
into
jmp
jo
or
add
jbe
cld
(bad)
in
shl
xor
arpl
jge
shr
jno
fs
push
stos
pop
ficom
xchg
ins
sbb
lods
mov
lods
ja
jp
repnz
in
add
mov
in
out
jns
gs
call
out
fldcw
mov
xor
jnp
stos
in
mov
(bad)
add
xor
jl
add
repnz
jmp
movs
add
ins
popa
pushf
pop
repz
mov
mov
(bad)
and
cmp
xor
into
iret
leave
shl
ds
or
xlat
mov
scas
mov
cdq
cmp
aad
xor
test
and
xor
shl
sti
sub
dec
mov
and
pop
(bad)
cmp
shl
cmp
inc
inc
(bad)
xor
inc
popf
pusha
xlat
pop
test
hlt
scas
out
enter
pop
sub
xor
sar
mov
jno
enter
pushf
enter
stos
std
daa
jns
adc
sub
rcl
sub
nop
xchg
idiv
in
xchg
sbb
loopne
sub
les
retf
and
push
mov
jbe
mov
push
dec
lods
mov
push
xor
pop
call
ins
or
lahf
xor
xor
je
and
jns
add
mov
xchg
pop
das
loope
and
jl
js
sub
test
mov
out
inc
push
mov
mov
adc
jecxz
fimul
stos
mov
jl
or
pop
push
nop
lock
jg
(bad)
rcr
mov
std
adc
iret
push
mov
push
jb
xchg
addr16
xor
popf
xchg
(bad)
push
cld
cmp
jae
inc
lods
mov
outs
pop
mov
pop
(bad)
inc
mov
xor
xchg
daa
adc
cmp
mov
clc
jno
dec
stos
mov
push
and
mov
mov
or
cmp
push
out
push
stos
std
pop
stos
push
push
icebp
imul
test
int3
inc
pop
pop
call
adc
mul
jp
adc
pop
sub
cmp
pop
sub
pop
xchg
cmp
lea
das
lahf
push
sub
dec
aad
lds
pop
or
mov
shl
sbb
add
ret
sub
out
push
jns
mov
fdivr
mov
adc
cli
sar
mov
mov
scas
je
jbe
sahf
jns
push
sub
dec
in
push
out
ja
add
out
xchg
js
lods
stos
stc
punpcklwd
(bad)
rol
xchg
arpl
or
jnp
inc
iret
sbb
(bad)
sti
sub
adc
cwde
fidiv
ins
fs
clc
dec
adc
cli
mov
jecxz
pop
jmp
cmp
ret
pop
xor
mov
adc
mov
(bad)
iret
or
test
daa
xlat
sar
test
mov
and
adc
push
ins
ins
stos
mov
pop
(bad)
cdq
jnp
sahf
pushf
or
xor
rcr
inc
jb
hlt
jmp
dec
and
sbb
and
mov
adc
mov
pop
add
test
lods
jnp
add
mov
inc
push
out
add
(bad)
sbb
pop
call
(bad)
xchg
jno
add
xor
fsub
cs
aaa
(bad)
scas
cld
push
dec
cmp
push
arpl
sti
cmp
vmovhps
pop
fst
inc
mov
push
mov
rol
inc
cmps
arpl
xchg
hlt
in
mov
inc
fidivr
xchg
cmp
fld
add
jl
sbb
or
in
jmp
add
(bad)
adc
jmp
inc
mov
popa
or
jbe
retf
pop
dec
and
fs
add
inc
cli
and
int3
mov
cmp
pop
jnp
je
and
pop
mov
jns
sbb
(bad)
mov
movs
cld
adc
sbb
xor
cmp
addr16
jg
test
mov
cdq
mov
je
out
mov
jmp
add
jbe
and
sbb
btr
and
or
outs
xor
pop
dec
scas
mov
jmp
leave
popf
xor
rcr
shl
mov
mov
mov
pushf
xor
or
sbb
movs
imul
dec
(bad)
shr
jae
test
lods
inc
outs
mov
pushf
test
loopne
stc
cmp
pop
lock
in
sub
xor
idiv
pushw
daa
dec
cwde
sbb
mov
pop
lea
dec
fisttp
mov
cmp
sub
or
cwde
popf
sbb
je
das
push
and
jge
adc
repnz
lock
jmp
iret
call
xor
xlat
test
mov
sub
mov
cs
leave
enter
dec
popf
fwait
and
push
adc
add
mov
inc
pop
xchg
cld
mov
clc
dec
mov
mov
stc
xchg
mov
in
cmp
lods
inc
ret
out
adc
cmp
pop
ret
mov
pop
sub
cmp
sbb
xchg
stos
cld
push
leave
jbe
lahf
ins
adc
adc
sti
push
pushf
stc
mov
mov
jmp
aad
sub
mov
int3
jne
mov
pop
lods
and
cmps
jae
inc
push
std
je
imul
sahf
data16
and
dec
call
test
dec
fild
sbb
or
pop
jo
pop
fistp
jo
test
mov
aas
stos
stc
sbb
ja
sar
inc
mov
aas
div
idiv
mov
popf
hlt
in
inc
shr
mov
pop
mov
in
pop
pop
sub
mov
imul
add
sbb
aaa
mov
cli
add
and
inc
sbb
cmp
pop
fwait
mov
inc
pop
and
cmp
js
mov
test
adc
add
cmp
pop
js
push
popa
daa
js
mov
sub
adc
jle
stos
dec
xchg
mov
pop
scas
jae
lahf
jb
pop
mov
sub
xor
xlat
or
int3
ds
push
dec
clc
cdq
(bad)
cmc
inc
(bad)
pop
sbb
gs
out
pop
sbb
pusha
jmp
jl
lock
sbb
test
jge
lds
ins
xchg
push
mov
aaa
push
xcrypt-ofb
cmps
scas
sbb
call
xor
jl
and
and
mov
gs
test
mov
mov
jns
xor
aaa
inc
pop
sbb
xchg
repnz
test
or
pop
(bad)
ds
jo
shl
outs
mov
pusha
lock
ins
mov
clc
cwde
pop
call
imul
pusha
add
or
jmp
mov
mov
mov
xchg
mov
push
stos
and
psubusw
push
pop
pop
cli
sub
xor
std
dec
jecxz
push
lods
xlat
sub
cmp
call
fistp
push
xchg
mov
pop
adc
mov
jle
cmp
in
sbb
daa
jb
test
(bad)
cmp
mov
mov
cmp
scas
into
fiadd
call
fst
jge
ins
adc
cdq
sbb
and
pop
sbb
lahf
sbb
fisubr
dec
cmp
cmp
stc
mov
test
mov
or
adc
sub
fiadd
fidiv
in
outs
fadd
pop
test
jae
or
dec
xchg
in
jne
aas
jae
adc
cmps
and
adc
inc
sbb
mov
lahf
xchg
das
inc
adc
jae
xadd
div
push
pop
and
inc
call
cld
clc
dec
or
ret
add
(bad)
stos
pop
cmp
or
pop
mov
fwait
sub
call
xor
in
dec
hlt
shl
mov
out
mov
cmp
dec
clc
sub
sub
pop
aam
dec
pop
aad
pusha
sti
cmp
adc
popw
test
mov
in
das
test
(bad)
cli
inc
sbb
fcmovnbe
add
in
xor
and
ret
cdq
push
fnsave
sahf
fbld
mov
and
pop
or
cmp
shl
xor
dec
cdq
cmp
aaa
(bad)
repz
call
lods
loop
push
pop
adc
pop
push
sbb
inc
ror
or
cmp
test
enter
xor
ror
sub
ffree
pop
aaa
pushf
adc
mov
jl
in
outs
stos
and
dec
mov
push
pop
ret
and
icebp
(bad)
arpl
pop
pop
xor
mov
jmp
test
out
cmp
sub
repnz
or
dec
mov
mov
popa
test
add
cmps
mov
call
fcomp
sbb
sar
test
push
xor
int3
enter
xchg
lods
repz
ins
shl
push
pop
dec
ret
pop
inc
stos
mov
xor
xor
mov
sti
ret
movs
push
jo
test
sar
pop
inc
xor
rcl
xchg
adc
or
in
enter
cmp
das
mov
add
pop
(bad)
(bad)
push
xchg
push
in
lahf
test
xchg
sbb
sub
cmp
out
je
stc
and
iret
push
aas
scas
or
and
lahf
iret
push
mov
popa
pop
inc
leave
inc
pop
(bad)
cmps
cld
mov
loopne
jg
arpl
je
inc
ret
fld
jae
outs
mov
and
inc
cmps
repnz
(bad)
fld
aaa
out
xchg
fnstsw
out
js
das
out
call
mov
dec
and
arpl
jbe
dec
pop
(bad)
dec
mov
repz
push
stos
pop
test
shl
push
pop
mov
jae
xor
fiadd
popf
and
mov
push
es
out
xchg
jo
mov
mov
mov
fidivr
das
ins
nop
xchg
aaa
(bad)
lea
scas
lahf
dec
sbb
sub
mov
mov
je
ds
fst
fidivr
mul
add
loope
call
rol
push
cmp
pop
into
cmp
add
mov
mov
add
jmp
bound
or
xor
add
call
pop
jbe
push
fs
cld
jl
xchg
xchg
test
out
ret
in
rol
sub
lds
outs
loopne
mov
sti
fdivr
popf
jmp
(bad)
sbb
xor
xor
mov
loop
cld
arpl
movs
pop
stc
lods
or
shr
xor
xchg
les
lds
jl
sbb
xchg
pop
xchg
add
arpl
shr
arpl
cdq
movs
push
imul
adc
imul
ret
call
jns
popa
(bad)
mov
cli
ret
xchg
jl
cmp
test
dec
xor
aad
jbe
cli
or
push
add
mov
stos
sar
push
scas
fnstcw
scas
mov
xchg
jns
and
out
adc
xlat
mov
cmc
cwde
pusha
fiadd
(bad)
pop
loope
inc
aaa
lds
movs
es
inc
ins
push
or
cdq
mov
cmp
mov
ds
push
mov
aad
daa
or
inc
jle
mov
or
js
mov
inc
xchg
rcl
xchg
and
cmp
sub
les
and
cmc
lea
push
jp
in
movs
xchg
popa
pop
cmp
inc
adc
lock
adc
sub
and
or
nop
arpl
mov
inc
outs
push
jne
sahf
into
cmps
fwait
daa
repz
(bad)
mov
push
fadd
inc
jb
mov
mov
xchg
mov
add
sbb
loop
dec
sub
mov
sbb
inc
rcr
mov
cs
sub
ins
xlat
lock
sbb
jmp
cmps
xchg
mov
push
mov
xlat
or
test
dec
arpl
mov
stos
push
pop
cmp
shl
cdq
dec
retf
mov
cmp
test
adc
push
jl
push
inc
push
bswap
nop
(bad)
int
push
arpl
repz
call
mov
mov
test
mov
(bad)
in
scas
jae
cmc
fnstsw
loope
(bad)
jmp
sub
cli
push
jb
(bad)
adc
ret
pop
repnz
adc
or
ss
inc
iret
inc
jb
sbb
shr
xor
or
ins
sbb
xor
push
pop
test
jb
sbb
adc
and
cmc
adc
pop
popf
call
addr16
fld
or
dec
sbb
mov
mov
call
pop
out
mov
adc
shr
fcmovnb
lods
jmp
(bad)
and
retf
sbb
xchg
adc
dec
jbe
popa
ja
cmp
mov
sbb
push
cmp
xchg
pop
dec
lods
inc
imul
dec
pop
or
jne
inc
or
aam
retf
jmp
mov
jmp
std
sub
cli
(bad)
dec
pop
jp
add
mov
push
jp
xchg
jl
jmp
cmp
mov
cmps
sbb
addr16
mov
dec
in
rol
dec
popa
aaa
push
sub
loope
scas
pop
jmpw
xchg
popf
imul
and
add
in
mov
xor
ror
in
mov
dec
in
add
int3
jo
push
cld
mov
xlat
cmp
adc
mov
xchg
mov
ss
sub
fimul
es
jl
in
popf
outs
cld
lea
jbe
adc
mov
rcr
pushf
xor
xchg
ins
pusha
fst
inc
inc
(bad)
xchg
mov
(bad)
push
(bad)
ds
mov
push
dec
aam
and
js
pop
stc
sbb
imul
sahf
inc
daa
movs
stos
mov
inc
xchg
(bad)
or
sbb
sbb
pop
sub
mov
rcl
jbe
cwde
je
cmp
out
push
push
(bad)
inc
retf
xchg
cmps
ins
cmp
in
xchg
icebp
clc
push
stos
gs
add
(bad)
pop
xor
jg
push
pop
mov
mov
push
sub
mov
outs
mov
test
(bad)
movs
add
imul
dec
xchg
xlat
xchg
icebp
into
fucomi
aam
adc
add
xchg
mov
inc
fistp
ret
ficom
sbb
pop
xchg
sub
adc
popf
adc
and
int3
mov
sub
mov
mov
inc
push
div
(bad)
in
jb
mov
lahf
(bad)
into
arpl
test
cmps
lds
add
pop
pop
adc
scas
inc
in
pusha
sub
(bad)
stc
outs
(bad)
dec
sub
jp
pop
push
mov
xor
sahf
dec
jns
mov
arpl
push
fstp
cmp
xchg
loope
aas
mov
or
adc
idiv
(bad)
jo
and
cmc
ror
add
sbb
cmp
mov
jg
movs
out
imul
mov
inc
push
mov
or
outs
adc
jns
out
mov
dec
ds
adc
xchg
repz
call
inc
sahf
mov
(bad)
mov
or
add
out
push
mov
add
cmp
cmp
in
(bad)
test
rcr
repnz
mov
loope
pushf
int
jo
xlat
ror
rcr
mov
mov
xchg
ret
int3
push
xor
push
xchg
or
je
adc
jecxz
fisubr
aam
lods
lahf
bswap
sti
adc
sub
jl
rcl
daa
test
sar
test
push
mov
cmp
inc
leave
retf
fistp
mov
xchg
aam
mov
fistp
rcr
repnz
outs
retf
xchg
xor
sbb
stc
pop
leave
xor
lock
ds
sbb
daa
loope
dec
cmc
push
mov
jle
pop
test
xor
push
in
sub
not
adc
xlat
(bad)
call
sbb
pop
mov
sub
call
vpor
dec
add
daa
and
test
(bad)
cmp
xchg
cmc
push
jecxz
add
mov
xlat
dec
bound
and
std
jmp
xor
add
dec
push
xchg
lods
or
aas
xlat
and
(bad)
(bad)
dec
cmc
addr16
ds
mov
mov
nop
inc
stos
xchg
and
add
bound
mov
xor
ins
add
stc
push
call
stos
pop
(bad)
push
cdq
xor
mov
daa
or
xchg
or
cmp
jp
in
add
and
xor
pop
addr16
(bad)
jg
imul
mov
jb
outs
leave
add
aad
or
fistp
xor
in
mov
inc
adc
movs
ja
jns
sti
sub
addr16
sahf
xor
or
pop
mov
mov
mov
pop
mov
rcl
popa
imul
(bad)
fwait
out
and
pop
mov
push
ins
mov
rcr
fstp
cmps
sbb
push
in
or
sbb
adc
int3
int3
mov
loope
sbb
in
jns
xchg
addr16
sub
fld
fld
setp
or
fnstcw
cwde
in
retf
retf
mov
popa
(bad)
xchg
pop
xor
mov
mov
pop
and
and
clc
dec
pop
add
data16
ins
adc
loope
loope
xchg
mov
pop
mov
cmp
popf
and
xor
and
xchg
aas
cwde
mov
ret
add
xor
pop
in
push
fwait
inc
mov
sar
in
fs
in
mov
mov
pop
test
sbb
cli
(bad)
sub
retf
sbb
push
push
gs
gs
mov
inc
stc
mov
jbe
fisttp
int
fneni(8087
push
xchg
icebp
add
fisub
mov
jno
push
es
cmps
pop
ret
std
and
pop
jle
fcmovnb
fld
(bad)
stos
push
std
jb
jbe
xchg
inc
inc
aad
call
int3
jp
fcmovnbe
and
sahf
rol
icebp
out
sbb
loopne
cs
sub
and
or
retf
repnz
mov
xlat
cli
cdq
pop
or
js
cmps
xchg
out
adc
mov
or
mov
leave
and
lock
shr
inc
popa
mov
or
cdq
sbb
cmp
add
popf
mov
inc
movs
pop
out
cmc
retf
xchg
cli
sbb
mov
add
cli
sbb
pusha
fs
and
mov
adc
fld
rcr
inc
js
mov
retf
aam
or
mov
aaa
sbb
(bad)
out
cmp
enter
mov
scas
(bad)
(bad)
pop
in
xchg
mov
sub
je
repnz
inc
fidiv
and
daa
mov
sub
cmp
pop
(bad)
stos
and
jmp
mov
push
mov
mov
adc
and
pop
not
jl
movs
lods
retf
fdivr
fnsave
mov
mov
dec
jle
in
jp
inc
xor
xchg
(bad)
jae
(bad)
xchg
loope
cmp
adc
mov
mov
sub
add
mov
sahf
mov
xchg
lahf
ret
stos
jo
xchg
fnstenv
mov
fdiv
dec
xor
xchg
inc
ins
cmp
(bad)
xchg
inc
cmp
mov
cmp
loope
pushf
dec
pop
xchg
enter
adc
and
imul
shl
sti
or
mov
ss
xor
rcl
into
(bad)
fadd
popf
or
dec
sub
fld
mov
ret
ins
call
mov
push
mov
cmc
lds
mov
shr
xchg
ss
aas
jmp
nop
inc
stos
icebp
enter
sti
fstp
rcl
hlt
test
add
mov
inc
mov
scas
mov
pop
dec
scas
cwde
cld
loop
loopne
pop
aad
ins
(bad)
xor
and
xor
sti
dec
ds
gs
mov
mov
push
rcr
cld
push
das
hlt
xlat
jno
sbb
fdiv
call
dec
in
loop
pop
mov
dec
pcmpgtw
(bad)
lea
mov
bound
mov
jge
gs
ja
sahf
aam
xor
push
sub
test
jmp
cld
or
cwd
and
sub
int
inc
mov
mov
xchg
jns
(bad)
jb
addr16
sub
and
hlt
iret
(bad)
push
pop
cdq
cs
loopne
ja
push
sahf
inc
and
imul
jne
add
(bad)
xchg
and
aaa
add
out
hlt
int
and
pop
nop
ret
inc
add
xchg
sbb
xchg
jbe
bnd
sbb
arpl
daa
icebp
cmps
add
sub
clc
mov
pop
sti
test
xchg
lock
stos
and
mov
aaa
jmp
lods
inc
sbb
or
add
pop
dec
cmp
in
push
push
jbe
test
dec
jge
push
ror
sub
mov
scas
loopne
push
adc
mov
in
add
(bad)
fsub
shl
xchg
stos
pusha
nop
(bad)
pop
(bad)
push
arpl
mov
adc
aad
lods
and
std
xchg
stc
cmps
jo
repnz
push
sbb
adc
test
mov
inc
push
push
jmp
and
fcomp
or
add
jl
lds
(bad)
mov
and
popa
pop
aad
stos
add
jle
retf
dec
fwait
cmp
adc
push
cmc
xchg
or
mov
push
jne
or
inc
stos
xchg
push
jbe
rol
cmp
bound
movs
out
lods
mov
pop
aam
(bad)
call
pop
movs
add
xchg
xchg
out
leave
xchg
push
jmp
inc
add
retf
pusha
in
sbb
add
cmp
psubsb
pop
xchg
in
sbb
in
ins
and
repz
pop
repnz
cmp
push
jecxz
xlat
in
fistp
icebp
popa
xchg
mov
add
(bad)
inc
jbe
push
test
not
sbb
sti
je
push
mov
cmp
test
pop
jecxz
lods
pop
add
(bad)
leave
and
cmp
arpl
push
fucom
(bad)
cli
cmc
jne
jl
das
int
ret
or
setae
xchg
jne
lock
and
sar
aad
test
and
sahf
or
fisub
fwait
arpl
out
dec
xlat
sub
popa
sbb
pop
add
callw
lock
es
lock
pop
cld
adc
mov
jp
cld
(bad)
(bad)
fisttp
and
cld
mov
jno
or
add
bound
daa
clc
or
nop
stc
and
mov
jbe
add
outs
cmc
cwde
dec
adc
popf
add
dec
repz
rcr
xlat
retf
aam
in
addr16
div
jge
sbb
pop
sub
mov
xor
shufps
mov
and
shr
data16
sub
dec
pop
mov
into
in
aaa
xor
push
les
or
scas
or
adc
jl
xor
xchg
xor
sbb
scas
mov
dec
push
mov
cmp
add
push
(bad)
stc
pop
jb
xor
sbb
adc
xchg
cmp
dec
xor
loopne
out
and
dec
inc
xor
addr16
enter
fsubr
or
clc
fsub
mov
iret
inc
mov
dec
mov
mov
jle
imul
mov
mov
pushf
lods
cwde
push
push
add
lock
mov
mov
lods
iret
inc
cmp
movs
sub
or
cmp
mov
push
mov
in
mov
pop
jmp
sbb
mov
jno
shr
into
ret
push
clc
cld
xchg
cmp
retf
shl
cmp
jg
lds
and
mov
hlt
in
inc
add
inc
mov
or
in
ins
and
inc
(bad)
imul
jne
cdq
fs
dec
add
pop
pop
loop
jns
dec
xchg
pop
lods
dec
lods
cmp
enter
imul
ds
inc
pop
lods
cmp
aad
outs
or
jecxz
movs
pop
jo
ins
lea
imul
add
jne
fcmovbe
shr
popf
xor
mov
xor
pop
leave
out
xchg
mul
xlat
or
movs
cmps
mov
aaa
leave
(bad)
ror
(bad)
jmp
pop
adc
arpl
js
jmp
je
xlat
gs
dec
cmps
lods
push
adc
ffree
scas
test
cmps
sub
cmp
push
and
jb
sbb
fcmovbe
push
adc
inc
hlt
xchg
mov
mov
sub
or
fnsave
stc
retf
cmps
iret
mov
xchg
push
sub
sbb
movs
sbb
stos
ds
fs
int3
cmp
fdivp
cmps
popa
inc
xchg
pop
daa
push
enter
test
mov
popa
cli
adc
inc
sub
imul
mov
cmp
or
dec
fwait
dec
or
cmp
popa
jmp
xor
mov
sbb
mov
mov
cvtps2pd
mov
shl
loop
sub
lods
bound
and
rol
dec
xlat
xor
lock
fld
push
aaa
xlat
repz
sar
and
jbe
cli
push
dec
lds
arpl
dec
fucomi
repnz
sub
xchg
add
push
mov
lods
xchg
out
pop
out
shl
sbb
cmp
gs
(bad)
adc
out
out
push
cwde
xchg
fs
fwait
mov
lahf
mov
adc
inc
aad
pop
or
daa
fwait
mov
cli
add
popa
jl
cmp
iret
pop
lock
cmp
scas
xlat
xor
arpl
adc
adc
lods
cmp
xor
outs
or
mov
and
pop
loope
test
fidiv
push
sub
scas
lahf
push
out
cli
rcr
iret
aas
mov
mov
mov
cmp
sub
sub
cdq
(bad)
repnz
push
in
push
movsx
or
aad
(bad)
out
stos
sahf
movs
sbb
add
cmp
scas
dec
es
iret
nop
dec
dec
mov
imul
fdiv
mov
mov
mov
and
sbb
(bad)
movs
aas
leave
fnstcw
add
jle
(bad)
mov
inc
cwde
outs
push
mov
test
xor
sti
or
and
addr16
push
cmp
adc
test
ror
and
hlt
or
push
jp
and
xor
fisttp
fs
sub
pop
rcl
test
stos
dec
jp
dec
sbb
out
bound
fs
aad
push
fs
fwait
add
fimul
fwait
mov
adc
fs
and
jmp
mov
in
jbe
ins
test
jns
mov
movs
mov
loope
mov
cmp
jmp
lds
out
cmp
xlat
push
test
cmp
pop
push
mov
and
stos
add
mov
sbb
mov
out
sar
std
fistp
mov
nop
je
fmul
fsub
pop
sub
fwait
mov
mov
adc
cmc
jle
mov
adc
ins
mov
sub
sbb
add
push
sub
das
loop
(bad)
jnp
fnstcw
popf
je
xor
xchg
adc
inc
repz
push
mov
push
hlt
out
or
lods
pop
clc
(bad)
(bad)
test
and
mov
jg
adc
in
(bad)
enter
test
jo
inc
cmc
lock
es
cmovno
shl
xor
inc
leave
push
inc
int
sti
or
cmc
ins
into
out
pop
enter
cmp
popf
mov
sub
ret
sub
and
clc
pusha
and
push
imul
push
cld
aas
je
inc
ins
pop
out
paddb
inc
dec
ss
scas
push
test
sti
ds
retf
push
dec
movs
popf
inc
lock
retf
loope
jo
and
(bad)
dec
dec
sahf
sub
pushf
je
and
cmps
sti
cwde
xchg
pop
mov
dec
daa
loopne
sbb
mov
pop
sub
push
lahf
out
out
xchg
sti
and
xchg
rol
(bad)
pop
jae
call
pop
xor
ret
daa
popf
(bad)
(bad)
mov
mov
call
pop
ins
int
in
xor
movs
pop
jl
inc
inc
xchg
xor
ret
pop
mov
scas
xchg
push
push
icebp
push
pop
mov
lahf
xor
mov
jo
lods
fidiv
cmps
jnp
test
(bad)
jae
and
lds
les
imul
sahf
add
jmp
bound
cwde
or
(bad)
push
(bad)
icebp
cdq
push
mov
pop
cmps
loope
mov
mov
mov
(bad)
lahf
pop
test
cmps
fsubr
das
sbb
out
mov
iret
cld
adc
inc
jp
jnp
push
(bad)
hlt
stos
loop
push
int3
int3
imul
repz
fdivr
repz
fiadd
jno
mov
inc
cwde
mov
aas
cmp
mov
cmc
sub
push
inc
dec
xor
jmp
mov
mov
je
adc
call
push
pop
test
int
pop
jae
ins
pop
pop
(bad)
sahf
(bad)
stos
mov
xchg
inc
lods
ror
xchg
jne
out
outs
scas
or
push
xchg
sub
jo
dec
mov
jl
popf
fwait
dec
mov
jle
mov
fbld
out
sbb
aad
jp
jns
out
jecxz
mov
sbb
es
push
push
xor
loope
ret
pop
mov
push
jmp
(bad)
mul
das
mov
and
dec
mov
cmps
mov
pop
mov
xor
dec
cmp
sahf
add
cmp
out
sbb
sbb
aam
fimul
int3
cmp
jno
jmp
mov
jmp
ret
push
cmp
push
mov
mov
sbb
(bad)
pop
sbb
lods
out
repnz
ins
add
ret
daa
mov
xor
inc
test
rol
fmul
mov
adc
jb
pop
popa
xor
aaa
cmp
xor
mov
cmp
ins
mov
in
or
ficomp
dec
adc
add
arpl
aad
push
xor
jnp
movs
mov
clc
xlat
out
pop
je
fdiv
mov
repz
mov
lahf
call
sbb
hlt
mov
jl
mov
enter
inc
es
je
mov
lds
les
sahf
mov
cmp
sub
popf
add
fucomip
add
pop
push
xor
mov
test
dec
loope
jns
stc
inc
int3
ret
aaa
xchg
clc
inc
js
icebp
adc
cmp
ja
ror
sar
xor
leave
xchg
rcl
xchg
into
(bad)
repz
mov
mov
pop
and
adc
loope
jcxz
retf
mov
push
enter
mov
mov
inc
push
js
add
jnp
pop
stos
sub
retf
fcom
inc
jmp
push
xor
mov
mov
call
stos
call
(bad)
pop
ins
adc
adc
push
jne
icebp
fimul
fstp
ds
dec
in
hlt
push
mov
scas
push
mov
fnstenv
sti
in
add
in
xor
inc
repz
cmp
cmps
xchg
imul
inc
or
fiadd
mov
push
clc
sbb
push
sbb
adc
sub
pop
sti
fldz
adc
inc
mov
nop
call
jle
xchg
or
test
or
push
pop
loop
inc
hlt
shl
iret
fidivr
arpl
sar
std
retf
shr
mov
ja
jae
mov
out
jecxz
sbb
stc
(bad)
out
out
mov
cdq
pop
psubsw
sahf
ins
lahf
inc
cli
push
sti
inc
bound
inc
xor
inc
inc
jo
xchg
pop
jge
sbb
add
ins
adc
shl
mov
test
mov
or
cdq
out
mov
je
mov
dec
jmp
add
imul
int3
mov
sub
std
jmp
sbb
stos
popa
inc
cmp
jmp
(bad)
in
xchg
xor
fstp
shl
cld
cmp
pop
jle
jb
cmps
sub
sti
repz
or
ss
int3
cs
mov
int3
mov
ret
push
cmps
ficom
cli
in
dec
leave
inc
xchg
xchg
mov
mov
or
shr
test
test
sub
jnp
popf
int3
jp
fprem1
push
lock
retf
inc
jge
inc
repz
xor
inc
jge
neg
dec
cmp
(bad)
nop
sahf
into
in
test
(bad)
jne
cmp
pop
hlt
cld
ror
mov
pop
and
lea
test
aam
test
dec
in
cmp
sbb
add
call
xchg
push
push
push
pop
gs
cdq
cmp
dec
push
push
(bad)
push
jle
mov
stos
sar
pop
retf
pop
cmc
xchg
pop
cmp
cmps
popa
xchg
je
xor
in
inc
mov
sahf
xor
pop
lods
pop
enter
je
xor
scas
pop
pop
fidivr
and
xchg
xchg
mov
ins
lahf
out
stos
adc
clc
jb
rcl
das
in
in
js
fwait
clc
adc
enter
and
sub
mov
jns
inc
mov
cmp
push
sbb
jbe
clc
cmp
mov
shl
cli
xor
adc
pop
call
test
adc
push
pop
daa
sub
mov
fs
(bad)
in
cmp
or
inc
mov
xor
call
add
sub
and
xchg
inc
jae
std
lods
xchg
xchg
mov
daa
rcl
cmps
je
or
dec
daa
call
inc
pop
mov
nop
ret
dec
jns
xor
pop
in
adc
sbb
pop
(bad)
lahf
in
in
inc
ja
jbe
cmp
jmp
repnz
ficom
sub
mov
dec
xor
and
mov
popa
icebp
add
loopne
jnp
jo
xor
push
xchg
xchg
lock
or
or
jno
cmp
les
test
mov
dec
push
aam
mov
push
pop
dec
xor
cmp
pop
arpl
cmp
mov
(bad)
(bad)
(bad)
fdivp
push
sbb
pcmpgtb
lock
pushf
dec
push
mov
rcr
sbb
cmp
push
adc
mov
aas
pusha
fsubr
add
adc
xchg
push
sbb
pushf
xchg
imul
sar
cmc
sbb
add
dec
adc
dec
icebp
jmp
dec
sub
shl
gs
loopne
mov
add
lods
mov
jp
mov
mov
add
popa
popf
gs
and
mov
test
jp
adc
stos
cmps
push
adc
(bad)
cwde
je
push
aad
pop
sbb
dec
sub
in
sar
cli
jg
je
inc
ror
mov
xchg
lahf
bound
mov
pop
out
inc
imul
mov
movs
jmp
pop
xchg
inc
jg
movs
xor
adc
xchg
movs
or
mov
mov
sub
jbe
popf
lock
add
ja
jne
jge
and
outs
adc
dec
shr
jo
dec
lods
and
inc
inc
stos
pop
dec
loope
mov
fwait
mov
movs
rcr
jg
jge
inc
imul
jmp
test
mov
out
sbb
lds
lock
aam
(bad)
into
pop
pop
add
pop
hlt
inc
add
xchg
mul
je
cmc
xlat
scas
popf
adc
jl
lock
xor
dec
loope
ficomp
outs
int3
das
mov
ret
mov
mov
sub
stos
repz
push
jge
jg
cmp
in
push
xor
dec
test
mov
mov
mov
pop
cmps
cmp
adc
test
in
or
loope
mov
mov
out
pop
ror
test
jmp
push
push
test
xchg
cs
push
les
dec
adc
xchg
in
jo
xchg
retf
arpl
std
popf
scas
mov
movs
fs
cmps
in
cmp
or
mov
fiadd
lods
sti
movs
mov
hlt
jl
sbb
mov
movs
sub
jo
sub
mov
cmp
clc
popf
sub
mov
xlat
and
cmps
xchg
pop
push
xor
cs
cmp
dec
jg
shl
das
mov
push
xchg
inc
push
or
xor
rcl
and
fsubr
cli
ret
inc
xchg
daa
mov
imul
cmp
test
aad
sbb
pop
sbb
into
imul
sub
sub
cmp
fadd
mov
cmp
stc
lods
frstor
xor
push
shl
inc
nop
jns
push
xor
fnsave
inc
xor
add
sbb
test
mov
inc
aaa
add
aam
cmp
imul
push
data16
movs
test
loop
mov
div
pusha
jne
push
fimul
xlat
add
jnp
mov
ds
cmp
stc
je
lods
gs
ret
jp
mov
xor
mov
and
in
fidiv
movs
dec
getsec
jne
and
stos
les
loopne
sbb
jno
mov
out
mov
pop
sub
push
dec
pop
data16
icebp
jmp
xchg
mov
repnz
sbb
aad
cmp
mov
push
mov
jmp
mov
pusha
(bad)
fs
or
rcr
fcom
push
out
(bad)
scas
mov
cwde
je
cs
test
fstp
out
fidivr
shl
pop
mov
inc
test
dec
mov
retf
pop
jnp
bound
(bad)
cld
xor
push
stos
outs
sbb
cld
cmp
dec
popa
push
cmp
icebp
cdq
mov
sbb
inc
ficom
addr16
lods
jno
cs
cmp
ret
jl
arpl
jns
imul
(bad)
or
sbb
outs
xor
dec
jg
cmc
xlat
ins
repnz
sbb
mov
mov
inc
(bad)
ror
adc
jmp
shl
cmp
or
ficom
mov
das
dec
push
cmc
pop
sub
pop
fsubr
hlt
call
pop
jo
inc
dec
cld
adc
mov
jl
jmp
xor
repnz
push
nop
sti
aaa
imul
inc
cmp
xchg
and
mov
mov
push
inc
aas
scas
fistp
push
mov
iret
clc
mov
lahf
bound
push
int3
sbb
inc
jl
cs
jns
scas
clc
mov
es
idiv
pop
ror
repnz
mov
xor
inc
pop
dec
dec
mov
sti
in
lock
inc
ins
pop
data16
inc
mov
add
out
jl
fwait
xchg
imul
sar
je
sub
push
add
xlat
out
mov
xor
(bad)
daa
add
or
xor
jmp
jmp
pop
scas
repz
jne
push
sbb
lea
push
jl
xlat
jle
jne
xor
aad
dec
sti
ror
hlt
add
sub
retf
sahf
push
mov
add
adc
stos
js
inc
les
std
push
cmps
outs
iret
sub
icebp
bound
push
not
mov
inc
enter
pop
mov
fwait
arpl
imul
sbb
inc
jl
push
data16
and
adc
in
aad
outs
pmovmskb
call
jae
and
sub
fcomp
lock
in
mov
mov
ins
cmps
pop
loop
std
add
stos
sub
bound
mov
jmp
gs
mov
ja
sti
mov
ror
loop
retf
pop
and
cli
xor
(bad)
jge
pop
adc
dec
xor
mul
add
(bad)
push
in
cli
lahf
ret
les
push
sub
fst
mov
pop
and
daa
jmp
sahf
enter
adc
sbb
fcom
push
pop
dec
stc
xchg
inc
movs
inc
inc
pop
xor
pop
(bad)
cmp
mov
in
mov
ficomp
retf
cmp
je
push
sbb
add
pop
or
push
aad
xchg
cmp
or
jo
ror
ins
push
cs
iret
mov
add
inc
and
rcr
adc
int3
add
dec
imul
and
sub
adc
sbb
and
jns
lods
and
dec
mov
xchg
jl
or
fldenv
nop
repnz
test
movs
ins
scas
inc
mov
fisttp
xchg
hlt
out
sub
cmps
hlt
imul
and
data16
pop
push
and
aam
mov
imul
je
xchg
mov
mov
popa
icebp
xor
dec
daa
jg
add
adc
loopne
cmp
push
je
mov
ja
lock
pop
das
js
xchg
mov
das
mov
pop
cmps
jae
daa
int3
pushf
or
dec
push
sub
stc
enter
aad
fistp
add
sbb
enter
ror
mov
jbe
jo
dec
jg
pop
xchg
nop
stos
inc
mov
cmp
mov
jp
pop
cmps
(bad)
and
mov
shl
fwait
jp
and
sub
ret
mov
and
inc
mov
cmp
dec
jecxz
cmps
mov
cmp
jne
test
aas
sub
push
inc
aaa
mov
movs
shl
js
adc
punpcklwd
cmovge
cmps
cmp
cmp
mov
jmp
adc
bound
mov
or
cmpps
pop
add
mov
and
or
cmp
sbb
movs
sub
jnp
cmp
sub
and
jl
adc
push
push
inc
pop
ror
mov
ret
stc
push
xor
mov
dec
in
int
outs
call
sbb
add
xor
add
cmp
xchg
pusha
or
out
leave
clc
fimul
in
dec
mov
rcr
xchg
imul
mov
aad
or
test
sbb
test
mov
add
dec
xor
pop
sar
call
dec
test
jmp
xor
sub
inc
out
fldenv
mov
sbb
aaa
jp
add
in
call
mov
mov
add
xor
popa
dec
aas
ret
in
xor
shr
jg
das
ror
fst
adc
sbb
retf
mov
test
retf
and
icebp
fisub
cmp
test
xor
dec
sbb
fadd
imul
dec
mov
pop
cmp
xchg
pusha
and
or
push
mov
and
xchg
lods
gs
call
out
sub
jl
jne
mov
jbe
add
mov
push
and
ret
add
xchg
sub
push
inc
jle
in
or
call
and
jb
ja
xchg
in
cmp
jno
in
or
ret
jbe
push
cs
std
pusha
push
enter
push
sbb
sub
adc
pop
je
dec
jge
loope
mov
mov
pop
cmp
(bad)
cmc
nop
test
xlat
jle
sbb
retf
xchg
xor
sub
mov
sub
mov
ins
sar
inc
(bad)
vmwrite
loope
fsub
neg
push
movs
lods
rol
cmps
cmp
mov
inc
repnz
rcr
pusha
daa
jmp
shr
mov
pushf
retf
sub
sar
fsub
push
aam
mov
xchg
test
cmp
sahf
or
test
push
cmp
sub
mov
mov
inc
in
jle
sahf
lahf
test
xchg
xchg
dec
in
aaa
in
leave
scas
cmp
scas
push
inc
mov
mov
bound
shr
push
push
sbb
stc
pop
shl
lahf
jmp
loope
outs
scas
jle
pop
sbb
mov
popf
retf
adc
jle
xor
push
sub
jmp
int3
cs
nop
mov
cmp
daa
mov
mov
and
sub
add
pop
mov
ja
inc
lock
inc
pop
pop
retf
rcr
div
cld
mov
jg
loope
xchg
sbb
dec
outs
dec
mov
lahf
ficomp
mov
cmp
sub
pop
stos
shl
lods
cmp
mov
mov
jne
inc
jns
repz
fsubrp
add
add
scas
shl
rcr
or
mov
outs
push
in
call
mov
dec
fdivr
aam
xor
movs
jge
repnz
lods
shr
aad
imul
sub
inc
gs
movs
jmp
aaa
pop
es
movs
push
dec
dec
loope
add
jp
jle
rcr
dec
gs
xchg
cmp
inc
enter
mov
fwait
iret
clc
jg
or
push
pop
or
add
inc
aam
dec
xor
cld
lods
fild
xor
in
xor
and
pop
ins
push
pop
test
dec
jb
dec
sbb
(bad)
xchg
add
adc
mov
into
and
mov
sub
int3
inc
pop
mov
stos
push
cdq
fdivp
add
xchg
dec
pop
scas
mov
push
test
lock
retf
jne
add
unpcklps
in
mov
xchg
in
lock
pop
stc
cs
push
movs
push
mov
or
xor
or
or
jle
popf
dec
and
int3
fcomip
jge
pop
sub
test
jge
sub
test
repnz
data16
xchg
ror
or
sub
fisub
push
ds
cmp
dec
xchg
bnd
addr16
xor
cli
dec
pop
das
cdq
dec
icebp
sub
push
mov
mov
dec
clc
movs
adc
push
mov
sbb
inc
movs
jge
arpl
xchg
enter
in
pop
int
lock
iret
and
add
xor
push
mov
repnz
xor
ins
retf
push
in
cmp
out
loope
dec
push
jg
dec
stos
pop
jmp
lock
sbb
dec
hlt
xchg
pop
or
(bad)
imul
outs
add
(bad)
movs
ret
loope
dec
jno
mov
add
push
jo
ins
pop
ss
sbb
movs
ins
push
dec
add
shl
aam
adc
mov
sbb
mov
fnsave
pop
sub
enter
sub
je
push
cwde
cwde
push
xor
pop
cli
or
(bad)
fist
imul
fisubr
jmp
test
ins
icebp
jmp
push
(bad)
adc
ins
jge
add
ins
cli
push
(bad)
aad
aas
cmps
aaa
int3
or
xchg
and
sti
mov
fistp
into
and
dec
or
test
mov
or
aad
and
fisub
pop
inc
sub
adc
xchg
sub
xor
call
jle
das
push
jno
or
add
test
cld
out
or
retf
retf
adc
xchg
mov
pop
clc
nop
mov
in
ret
(bad)
(bad)
cmc
and
jge
add
nop
cmp
or
in
pop
jmp
sbb
add
call
mov
in
lea
jmp
adc
inc
pop
fwait
and
idiv
cld
sbb
cmp
aam
lds
jle
push
dec
add
mov
adc
leave
nop
xor
gs
out
xor
jae
jmp
(bad)
pusha
push
push
and
inc
mov
push
xchg
je
(bad)
jmp
or
clc
xchg
leave
xlat
or
mov
mov
fcos
sub
cmp
leave
xor
and
out
test
pop
pop
adc
mov
inc
jno
cmp
sub
add
(bad)
sbb
es
idiv
ins
inc
and
ds
dec
punpcklwd
out
xor
sub
movs
jo
cmp
and
fimul
xor
or
cmps
mov
cmp
add
pop
mov
in
out
add
ror
fst
mov
(bad)
adc
sub
xor
aas
cdq
hlt
cmp
jo
movs
cmp
call
inc
mov
jmp
imul
add
or
iret
sub
sub
sbb
repz
ja
mov
lea
add
outs
cmps
pop
dec
mov
(bad)
fwait
mov
out
push
cmp
test
ds
fs
aad
aaa
mov
jno
jmp
sar
out
out
push
ja
les
cmp
inc
inc
push
por
push
and
and
mov
lods
cmp
bound
mov
push
pop
jnp
test
call
push
call
mov
clc
call
(bad)
bound
sbb
rol
xchg
jno
cli
cli
cdq
dec
pop
pusha
aas
imul
cli
loopne
clc
cmp
scas
loope
lds
stos
or
and
or
stc
arpl
sub
sbb
xlat
xchg
loopne
xchg
clc
push
icebp
ins
xchg
sbb
adc
xor
(bad)
or
pop
push
sub
imul
test
mov
dec
push
xchg
xchg
push
fisttp
outs
add
mov
mov
scas
jne
dec
repnz
(bad)
jmp
add
lock
jmp
and
scas
ins
mov
mov
sar
mov
aam
cmp
fisubr
sbb
xor
sub
jae
sub
dec
fwait
sbb
pushf
cmp
push
fst
pushf
cli
xchg
push
dec
shl
or
xchg
jae
inc
jecxz
push
push
dec
inc
sbb
movs
jbe
add
xor
in
cmp
sub
int3
or
cmps
push
out
ret
or
sub
loope
add
xor
cwde
mov
dec
ins
xor
clc
inc
test
stos
addr16
test
mov
or
cmc
or
movs
iret
xor
mov
mov
xchg
mov
jbe
inc
push
ficomp
xor
cmp
dec
xor
sbb
mov
and
imul
out
jmp
fldcw
dec
xor
cmp
sbb
sub
inc
mov
fnstsw
push
popa
outs
lea
pop
xchg
pop
sub
inc
int3
sti
dec
sbb
and
loope
ss
fnstsw
adc
sbb
add
in
pop
in
xlat
cld
enter
sub
aas
(bad)
out
mov
repnz
stos
into
xchg
inc
aam
fist
mov
pop
jmp
cmc
dec
psubsb
xchg
or
mov
xor
xchg
add
sub
inc
idiv
les
in
push
jl
icebp
cwde
adc
repz
cdq
xchg
cmc
pop
loop
sysexit
pop
xchg
bound
adc
fldenv
push
push
mov
nop
mov
lods
adc
data16
and
jnp
pop
push
and
lods
push
or
fild
(bad)
sahf
sbb
out
shr
mov
out
std
adc
push
xchg
jecxz
cmp
sub
in
xchg
popf
mov
xchg
and
mov
pop
mov
test
sti
cmp
xchg
test
rcl
xchg
xchg
or
sub
clc
sub
repz
push
mov
mov
mov
dec
pop
test
ds
scas
movs
stos
push
xor
lods
das
mov
pop
pop
nop
lock
push
(bad)
adc
(bad)
loop
sub
in
movs
test
loop
not
fidiv
mov
fisub
mov
and
fs
(bad)
xor
ret
sub
mov
call
xchg
loop
mov
and
gs
push
das
je
xor
bound
mov
dec
sahf
sahf
loop
scas
out
loope
in
push
movs
mov
mov
gs
aad
push
cs
lods
ds
jmp
add
jbe
mov
in
sbb
dec
pushf
fwait
retf
push
ret
ficomp
les
int
mov
dec
pusha
push
movs
mov
movs
or
int
scas
jecxz
fldcw
fisttp
scas
data16
nop
cld
into
out
add
inc
mov
mov
mov
test
(bad)
jne
add
call
mov
rol
cmp
pop
mov
rcr
xchg
or
or
xor
mov
das
sub
iret
mov
jg
fdiv
jae
inc
inc
cmc
popf
dec
out
pop
(bad)
adc
sbb
xor
pop
push
nop
dec
outs
inc
jmp
pop
(bad)
dec
loopne
(bad)
fcomi
cs
into
fsubrp
jmp
inc
dec
mov
movs
or
dec
sub
nop
stc
in
pop
xchg
ins
xchg
or
xor
mov
push
sbb
(bad)
out
je
fistp
fcmovnbe
and
out
mov
mov
addr16
sbb
test
cs
ins
fild
jge
jl
xor
cmc
sub
jns
add
push
lods
sub
call
push
fsub
xor
out
jg
cwde
cwde
loopne
jno
mov
push
xor
gs
xor
(bad)
das
xchg
loopne
es
cmc
xor
cmps
xor
mov
std
inc
(bad)
mov
ins
dec
xor
add
mov
outs
movs
pop
fisttp
dec
mov
sub
push
pop
inc
jno
xchg
dec
xchg
mov
add
push
xchg
mov
(bad)
cmc
sub
adc
fisub
push
cmp
inc
or
les
xor
popfw
dec
cdq
fiadd
nop
sbb
call
aas
(bad)
jmp
nop
jno
jecxz
dec
mov
cwde
inc
mov
dec
retf
sub
out
and
cwde
retf
daa
jns
hlt
sti
pop
push
idiv
das
dec
pop
xor
mov
ror
xchg
inc
fs
aaa
dec
call
inc
jo
je
jnp
push
gs
push
je
outs
(bad)
jnp
(bad)
mov
pop
rcr
in
xchg
stos
jo
ja
lods
add
or
add
fnstcw
jle
fidiv
mov
test
pop
jl
sub
mov
fnstsw
or
sbb
ficom
retf
ins
mov
cmp
pop
fnstcw
push
aam
sub
sbb
in
pop
jns
stos
sbb
daa
sub
(bad)
mov
dec
popa
repz
dec
addr16
ret
xlat
xchg
xchg
xchg
add
mov
sub
pop
jle
cmps
out
xchg
inc
jb
rol
in
fmul
sbb
pushf
xor
pop
or
jae
fist
or
push
test
rol
maskmovq
not
daa
(bad)
jae
dec
jge
jns
jp
cmp
xor
enter
mov
lock
inc
sbb
cmps
add
xchg
xor
test
inc
movs
inc
ja
add
loope
sbb
mov
arpl
pop
cmp
pushf
sti
mov
push
imul
lea
xchg
push
xchg
test
lea
jbe
stc
loop
lods
repz
mov
loope
cmp
call
jecxz
mov
scas
mov
add
jbe
loope
xor
sar
bound
or
adc
dec
xor
sbb
pop
ja
sub
push
shl
or
jbe
dec
addr16
loop
ja
jno
jmp
sti
mov
mov
lock
repnz
xor
sahf
xor
jecxz
jp
test
pop
mov
jne
retf
rcr
outs
add
(bad)
pop
retf
call
loope
retf
rcr
in
ss
rcl
arpl
mov
fild
sbb
adc
mov
mov
xor
into
and
fbstp
push
in
pop
cmp
jl
push
mov
mov
xchg
push
add
repz
popf
adc
cmp
es
jp
ss
adc
imul
fidiv
in
xor
adc
add
push
rcl
push
enter
sbb
pop
push
into
fcomip
push
aaa
pushf
xchg
or
pop
fmul
add
dec
jmp
bound
sahf
shl
test
sbb
mov
push
xchg
push
mov
rol
mov
repnz
adc
push
stc
cmp
dec
in
mov
inc
ficom
shl
(bad)
fld
hlt
in
pop
pop
retf
test
std
mov
add
popa
cmps
ins
pushf
sub
xchg
xor
dec
jle
lds
adc
aaa
xchg
jmp
fst
inc
dec
jne
add
inc
pop
mov
jp
sbb
daa
or
sub
add
stos
(bad)
call
jp
jae
dec
push
lods
adc
mov
pop
outs
int3
iret
add
lods
gs
cli
fwait
scas
enter
sbb
neg
loop
xchg
cdq
mov
sbb
test
inc
sar
outs
cmp
retf
scas
repz
cmp
in
mov
jne
sub
sbb
mov
les
clc
and
mov
push
cmp
pop
scas
retf
fs
mov
ja
clc
push
ja
mov
lahf
fldenv
pop
imul
fst
shr
out
int3
push
aad
(bad)
ret
push
mov
adc
scas
sub
adc
jo
int3
mov
push
mov
scas
and
std
neg
js
mov
xor
in
sub
out
movs
hlt
xchg
ror
call
cmp
cmp
lods
mov
inc
fs
test
xchg
sub
in
mov
arpl
mov
cmp
and
adc
cmp
and
hlt
cs
jo
mov
jmp
xchg
(bad)
(bad)
sub
mov
mov
add
pop
loopne
ret
ins
cmp
adc
or
popa
lea
and
add
sbb
pushf
loop
outs
jge
fidiv
stos
adc
out
inc
pusha
js
mov
xchg
inc
jge
pop
and
jg
sub
daa
imul
cli
jl
mov
sti
and
adc
in
stos
adc
jne
dec
(bad)
mov
cmp
sbb
cmp
dec
dec
loopne
loopne
scas
jb
ret
hlt
mov
pop
and
stos
out
xchg
mov
inc
in
ja
mov
pop
pop
ja
les
xchg
adc
cmc
xchg
loop
or
mov
lods
loopne
das
pop
pop
jmp
push
std
imul
jno
(bad)
mov
jno
out
mov
div
and
outs
dec
mov
cmp
xchg
sahf
sbb
xchg
and
jmp
mov
mov
push
sar
nop
xchg
aad
stc
js
push
xor
out
cld
add
pop
aam
pop
mov
je
push
ror
push
mov
call
das
mov
xchg
retf
add
inc
out
and
sbb
(bad)
std
inc
fistp
dec
ror
je
mov
push
call
add
popa
pop
add
rcl
call
and
fwait
jne
dec
adc
fmul
fwait
stos
cmp
(bad)
sahf
and
cli
push
ror
stc
out
mov
aam
sbb
mov
aaa
mov
mov
les
cs
sbb
loope
aaa
call
lds
(bad)
xchg
pop
xor
scas
test
pusha
pushf
sti
sti
mov
in
call
jnp
adc
(bad)
(bad)
lea
jge
and
jns
retf
inc
sub
(bad)
ins
outs
dec
sbb
ins
inc
enter
mov
popf
pop
out
jp
inc
loop
push
imul
into
aam
js
push
dec
dec
or
dec
adc
std
stc
cwde
pop
jmp
inc
lock
and
sahf
push
xor
das
mov
fwait
inc
(bad)
xor
data16
rcr
adc
scas
aaa
inc
inc
pop
mov
dec
and
loope
sbb
dec
fcmovb
out
push
clc
sub
lahf
inc
mov
iret
mov
sbb
push
repz
lock
push
movs
out
push
addr16
stos
mov
sub
int
or
add
inc
shl
outs
xor
mov
retf
retf
popa
jnp
dec
cdq
jmp
add
imul
pop
call
in
jge
jnp
inc
or
call
push
stos
das
jno
xor
adc
scas
les
dec
lock
xor
mov
cmp
fiadd
rcl
cmp
in
repnz
out
mov
ficom
pop
xchg
jmp
outs
add
cmp
adc
dec
shl
jne
adc
cmp
in
daa
xchg
lods
jp
xlat
ss
stos
lea
dec
jae
push
das
jle
sub
adc
aaa
out
arpl
shl
test
pop
push
xor
mov
rcl
sbb
jmp
pop
out
adc
mov
mov
les
idiv
outs
or
repnz
pop
adc
into
out
mov
ret
test
(bad)
mov
pop
aad
ins
inc
les
mov
jno
test
popa
dec
mov
push
movs
xor
daa
loope
sub
jmp
ret
mov
lea
dec
sub
cmc
pop
push
retf
outs
inc
sub
enter
repnz
ror
xchg
popa
cmp
repnz
xor
pop
push
shl
cli
mov
jne
(bad)
and
ja
out
leave
and
dec
bound
sub
jle
sub
mov
shr
jge
and
sub
sbb
pushf
xchg
add
test
mov
repnz
cmp
xor
outs
jl
data16
hlt
dec
add
push
movs
sub
test
inc
icebp
mov
jle
add
inc
push
sbb
jge
and
sbb
mov
mov
sub
in
data16
or
leave
loopne
push
js
test
push
repnz
shl
pop
push
sbb
inc
test
mov
cmp
(bad)
pop
movs
inc
push
sbb
jne
ja
test
imul
cmc
push
sbb
aas
mov
ins
jne
(bad)
sar
push
mov
inc
out
cmp
add
or
nop
sub
lock
dec
outs
mov
shr
aaa
jp
xor
cmp
sub
mov
pop
mov
or
in
sub
aaa
lahf
pop
push
call
or
pop
icebp
in
mov
cmp
lock
sbb
or
jo
mov
hlt
cmp
adc
popa
xor
push
dec
stos
jle
in
dec
push
sbb
(bad)
inc
xchg
dec
nop
stc
pop
mov
and
sub
aas
add
push
mov
dec
inc
mov
cmps
cmp
sahf
and
divps
or
iret
dec
lds
push
stos
push
test
call
retf
mov
dec
pop
lods
jmp
stc
xchg
dec
inc
xrelease
pop
scas
ins
sub
in
movs
or
or
mov
fild
outs
xchg
aam
out
imul
mov
mov
pop
test
(bad)
xchg
pop
retf
fild
xchg
and
imul
pusha
cmp
mov
out
jl
data16
aam
leave
iret
aam
(bad)
cmp
pop
jl
pushf
(bad)
mov
adc
inc
sar
data16
xor
ins
add
out
jbe
aam
test
dec
or
jmp
inc
sbb
mov
ret
out
loopne
shl
jo
retf
out
push
jle
add
sub
(bad)
loopne
dec
jle
jmp
push
cmp
pop
test
cmp
mov
fst
dec
scas
adc
(bad)
fiadd
inc
add
(bad)
jecxz
mov
cmps
sbb
or
mov
popf
mov
adc
fdiv
xchg
mov
or
mov
test
or
(bad)
ret
out
mul
ds
cdq
les
sbb
fist
xchg
xor
or
push
push
dec
mov
or
inc
cmp
pop
lock
leave
xor
jnp
ror
mov
pop
jo
scas
int
neg
adc
push
in
pop
arpl
sbb
add
dec
push
test
les
retf
inc
mov
xchg
pop
lea
mov
shl
mov
jns
jecxz
sbb
inc
add
xchg
xor
(bad)
mov
movs
jg
aad
dec
sub
popf
push
xlat
or
add
pop
dec
imul
inc
mov
pusha
cld
mov
cwde
add
scas
loope
pop
jecxz
movs
test
retf
mov
inc
mov
mov
data16
repz
inc
fisttp
sar
add
stos
sbb
add
dec
scas
(bad)
and
jmp
xchg
jp
jmp
mov
dec
or
pop
popa
fisttp
sbb
and
xlat
loopne
nop
adc
cdq
xchg
rcl
(bad)
jmp
mov
sbb
retf
sub
test
xchg
aaa
cmp
in
mov
imul
push
outs
inc
loop
pop
cmp
mov
nop
cmp
push
xor
ret
dec
pop
dec
dec
fsub
cmp
ja
mov
add
mov
je
je
mov
es
push
dec
sbb
adc
adc
loop
test
popa
jle
adc
(bad)
jae
mov
not
and
xchg
fst
in
daa
and
popf
mov
(bad)
xor
test
add
stos
inc
sbb
push
mov
fcomp
jae
sub
retf
inc
sti
(bad)
es
dec
mov
pop
push
sbb
in
push
fwait
loop
inc
inc
mov
inc
neg
ja
ds
pop
xor
and
cmps
inc
inc
mov
lods
fwait
loop
movs
jge
sbb
call
xchg
addr16
retf
jmp
idiv
or
inc
push
xchg
xchg
push
mov
dec
imul
push
pop
lds
movq
pop
xchg
and
xchg
pop
mov
adc
pop
dec
scas
jbe
(bad)
(bad)
sub
out
js
leave
out
push
jp
sbb
lods
jns
aas
outs
icebp
mov
call
aaa
add
and
dec
push
mov
jmp
add
test
out
xor
mov
into
mov
rcl
inc
int
sbb
div
pop
cwde
sub
dec
stc
jecxz
cmc
push
cdq
cs
pop
mov
std
rep
je
sub
add
inc
fadd
arpl
push
pop
inc
push
xchg
push
sub
outs
nop
fs
mov
scas
je
rol
mov
fisubr
iret
xchg
popa
jl
ja
xchg
movs
xor
inc
push
adc
call
jp
frstor
sub
pop
pop
pop
ds
in
cmps
mov
push
lock
push
jno
in
xchg
jae
mov
rol
bound
pop
mov
dec
call
cmp
jecxz
ins
das
mov
push
mov
dec
and
aam
arpl
mov
sbb
arpl
sub
inc
sbb
(bad)
cld
cdq
(bad)
xor
jbe
sar
dec
pop
adc
pop
dec
add
and
jno
out
cmps
pop
enter
loopne
adc
dec
add
sub
retf
add
sub
and
pop
sti
outs
sar
inc
xchg
push
push
cwde
and
out
xchg
das
ja
dec
pusha
dec
push
jo
mov
jns
fsub
push
test
sbb
mov
and
cli
in
sbb
or
add
(bad)
mov
xlat
pop
cld
xchg
cs
jp
push
in
inc
sub
sub
push
fs
lock
(bad)
jmp
mov
cdq
sub
mov
add
scas
imul
dec
fwait
int
neg
mov
aaa
cmp
ss
xor
cmc
cmp
test
inc
out
ror
in
push
pop
xchg
jl
shl
sbb
push
mov
mov
fcom
mov
xchg
inc
add
imul
inc
push
cmp
cmp
dec
push
adc
fmul
add
cmp
(bad)
adc
jne
xchg
das
jbe
sbb
int
pop
mov
add
mov
sbb
jnp
inc
jbe
push
pop
sub
aam
inc
fisttp
jb
and
enter
push
test
pop
push
popf
and
sar
test
jmp
scas
pop
mov
and
pop
daa
in
xchg
call
cmp
or
fst
jns
jno
lea
(bad)
or
cmc
adc
sbb
call
xor
mov
fcomp
cmc
push
retf
loop
bnd
outs
jl
mov
cmps
pop
pop
xor
aad
adc
enter
jns
push
ins
fdivr
sub
mov
pop
sbb
mov
dec
mov
test
xlat
test
rcr
push
push
mov
xchg
scas
sbb
xchg
mov
mov
inc
or
inc
icebp
lock
mov
rcr
mov
mov
jae
cmp
loopne
dec
pop
push
mov
jecxz
jle
xchg
stos
xor
mov
and
dec
rcr
lock
inc
jnp
or
or
fld
push
add
in
test
lods
push
bound
jae
adc
and
pop
cmp
jmp
sbb
jge
adc
mov
xchg
inc
sub
xchg
fsub
dec
push
cwde
nop
retf
mov
sub
mov
mov
scas
lods
mul
(bad)
shr
add
fisubr
fwait
sbb
jns
push
shl
outs
test
add
shl
xchg
shl
movs
jp
xor
call
or
shl
fadd
jp
test
pop
cli
jb
(bad)
fistp
mov
xchg
mov
in
mov
es
lea
and
loopne
std
mov
jbe
ins
les
repnz
sub
lods
jno
mov
xchg
in
dec
and
mov
xor
out
dec
xor
pushw
(bad)
fnstcw
aas
jmp
cmp
xor
mov
daa
adc
aad
rcl
pop
sahf
jle
sub
dec
push
ins
xor
jns
or
cmc
mov
sub
inc
or
test
jae
push
retf
fs
jb
es
wbinvd
test
call
push
(bad)
(bad)
and
mov
lahf
push
sahf
ds
mov
jo
cs
dec
imul
or
jne
pop
fild
adc
aam
mov
daa
in
mov
xchg
inc
jmp
push
popf
and
in
cmp
pop
cdq
aas
sti
mov
dec
inc
sub
pop
(bad)
xor
ins
enter
movs
dec
cdq
test
and
push
ds
(bad)
or
ja
push
inc
(bad)
aas
add
out
mov
in
pop
jge
imul
jnp
or
inc
ins
scas
push
pop
or
or
cmp
mov
es
mov
cmp
sbb
xchg
push
push
outs
sbb
sbb
and
ret
scas
je
fsub
or
xor
scas
rcr
add
xor
adc
xor
aad
add
cld
stos
cmp
xor
mov
xor
or
popa
rol
mov
mov
idiv
into
jmp
les
xchg
ror
mov
push
push
in
movs
sbb
aam
(bad)
arpl
fimul
jae
sbb
sub
nop
adc
pop
inc
adc
aaa
sub
cmp
je
push
xor
mov
mov
rcl
sbb
fcom
mov
test
out
and
icebp
test
pop
mov
aad
in
test
and
(bad)
repnz
(bad)
fadd
(bad)
dec
mov
rol
in
xchg
sbb
loope
add
sbb
scas
cmp
neg
aaa
push
call
push
imul
xor
pushf
xor
je
mov
sbb
stc
ret
shr
arpl
cwde
pcmpeqb
push
pusha
adc
js
int3
xchg
jae
shr
mov
ret
cdq
cdq
xchg
add
mov
push
or
mov
xor
(bad)
or
push
cmc
popa
jp
mov
out
ins
and
or
adc
mov
lea
mov
lahf
not
sub
dec
jbe
xchg
pop
loope
pusha
lods
in
stc
xor
rcl
dec
dec
sub
xlat
(bad)
hlt
ja
and
lods
jbe
movs
movs
call
mov
out
dec
jle
aas
movs
es
adc
add
jmp
loop
retf
sbb
test
lock
lahf
pusha
cmps
(bad)
jne
cld
das
test
fwait
and
cwde
push
fadd
push
mov
out
add
mov
jo
mov
sbb
in
popa
aam
repnz
or
lods
fstp
add
dec
and
ja
(bad)
mov
call
sub
fmul
or
repz
adc
xor
sbb
mov
ror
push
test
xchg
pop
movs
pop
pop
inc
ds
repnz
jecxz
and
retf
cwde
sti
int3
pop
mov
mov
sub
jg
enter
mov
sub
adc
dec
adc
shl
std
out
retf
push
jmp
cmp
nop
adc
push
lods
(bad)
test
cmc
add
int3
and
jb
inc
aad
(bad)
or
xchg
icebp
loope
inc
repz
lds
and
push
sar
mov
dec
jmp
retf
jnp
pop
mov
cmps
bnd
fbld
aam
das
cmp
mov
das
imul
xor
jp
sub
xor
ss
pop
fstp
add
sbb
dec
adc
fidiv
push
shl
loop
int3
addr16
and
movs
pop
inc
dec
and
fnstsw
mov
test
xor
in
test
adc
mov
jns
push
out
sbb
int3
test
ror
(bad)
out
data16
jl
in
xor
cdq
call
dec
add
add
repz
(bad)
sub
add
mov
inc
popf
icebp
(bad)
dec
lods
inc
test
arpl
push
jae
mov
jb
or
jns
inc
stos
sub
ins
sbb
or
retf
mov
enter
daa
cmp
jno
add
rcr
inc
(bad)
add
pop
outs
lods
push
inc
push
xor
sub
clc
icebp
arpl
stos
out
pop
dec
enter
in
pop
stos
dec
call
xor
into
mov
imul
pop
sub
outs
stc
push
xor
loop
leave
xlat
fs
lea
or
sub
xor
sub
fldenv
xchg
sbb
jnp
mov
aas
js
xchg
or
mov
mov
jae
pop
inc
fild
and
adc
int3
icebp
fimul
push
cmp
mov
fcmovnu
inc
add
or
lahf
or
aaa
mov
(bad)
rcr
and
sub
in
push
lods
and
push
mov
mov
(bad)
mov
cmp
ficomp
popa
cli
fcomp
mov
fimul
call
cmp
fsubr
inc
dec
dec
push
or
xchg
leave
enter
push
mov
(bad)
(bad)
loope
mov
pop
inc
test
xchg
xor
pop
in
lock
lods
movs
jg
dec
xor
jo
pop
stos
enter
dec
fisub
xchg
or
rol
retf
retf
push
xlat
out
mov
pop
xchg
sbb
jge
stc
fs
ret
mov
xchg
push
fld
mov
mov
(bad)
scas
jb
sub
sahf
mov
ss
pop
test
pop
xchg
mov
out
push
sub
dec
stc
push
dec
fcomp
retf
movs
sbb
scas
dec
jg
and
mov
mov
and
mov
pop
sbb
xor
dec
pop
inc
cmp
pxor
cmp
sti
jnp
xor
sbb
mov
cmp
sti
cmp
(bad)
fistp
arpl
in
shr
cmps
je
ins
or
sbb
loop
(bad)
fimul
mov
cmp
cmps
(bad)
stc
stc
pop
imul
xchg
cs
ins
hlt
call
mov
aaa
add
xor
clc
aaa
stos
jb
adc
add
adc
mov
inc
pop
dec
jl
test
and
int3
pop
shl
fisttp
lock
ss
jo
dec
jge
ja
popa
rcr
leave
inc
jb
fisubr
out
pop
cmp
mov
sub
(bad)
les
sbb
inc
inc
push
out
popa
mov
fld
nop
mov
inc
popa
mov
rol
push
stc
aam
pop
add
test
mov
test
int3
pop
mov
cli
jne
or
popa
inc
mov
dec
mov
add
mov
stc
adc
sbb
and
icebp
and
or
sbb
or
dec
retf
pop
xor
adc
dec
aas
jns
movs
jnp
or
test
minps
into
retf
ja
(bad)
and
jg
daa
inc
mov
in
cdq
inc
les
lea
cmp
mov
and
rol
jecxz
fiadd
mov
rcl
push
pusha
(bad)
call
out
scas
fdivr
dec
adc
call
out
or
test
dec
sub
xchg
fxch
xchg
dec
inc
xchg
xor
test
jne
pop
push
mov
sbb
and
and
push
lods
add
sub
aam
xor
loope
mov
imul
mov
cdq
sbb
test
ret
mov
adc
aas
jb
or
fdivr
cmp
rcl
dec
xchg
movs
sub
lods
jge
or
mov
cmp
cmp
inc
sar
icebp
test
or
btc
fisttp
enter
add
sbb
stos
div
mov
add
mov
jb
jmp
cli
cmps
inc
or
ret
xchg
int
mov
mov
xor
ja
push
or
jp
pop
imul
mov
push
pushf
mov
pop
pop
mov
lds
add
adc
xchg
pop
stc
cdq
mov
push
imul
dec
add
jmp
xchg
std
adc
cmps
push
mov
rcl
shl
inc
and
and
jne
inc
les
hlt
fiadd
adc
sub
mov
sti
push
or
sar
call
cwde
sub
loop
xor
inc
test
mov
test
sub
outs
retf
stc
xchg
test
cli
fisttp
cmp
hlt
mov
scas
push
xchg
pop
jbe
in
sub
jbe
inc
sbb
add
dec
imul
mov
sbb
daa
out
pop
test
jns
push
(bad)
je
psubq
outs
rcl
add
std
and
ins
push
xor
adc
cmp
push
icebp
push
pop
mov
xchg
cmp
xchg
mov
dec
push
or
je
push
or
dec
xchg
inc
scas
xchg
mov
stos
sbb
out
sahf
cmp
or
mov
std
mov
xor
mov
arpl
fiadd
jo
xchg
jge
iret
shl
add
inc
sub
or
mov
and
or
dec
int
stos
les
movs
jbe
xlat
in
inc
sub
mov
mov
sbb
jmp
xor
add
inc
xor
push
pusha
lods
dec
xor
mov
imul
pop
sbb
sti
sbb
in
ja
out
in
mov
aad
test
or
ret
sbb
mov
jbe
jmp
mov
dec
adc
add
cmc
add
lods
pop
out
rcr
pop
mov
retf
mov
xchg
sbb
adc
out
cmp
xor
xchg
and
push
pop
test
pop
loop
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
add
add
add
add
add
add
and
add
add
xor
add
push
add
add
add
mov
and
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
xor
add
and
add
xor
add
add
add
add
pusha
cs
jb
add
add
add
add
pusha
add
add
add
add
inc
add
inc
cs
ins
outs
arpl
add
add
add
add
add
add
inc
add
inc
mov
add
add
add
add
add
add
add
add
add
add
add
loopne
add
jo
add
xor
sti
repnz
shl
add
inc
xor
add
add
add
add
add
sub
adc
add
pop
add
add
add
adc
push
add
add
jae
add
or
add
or
add
adc
push
add
or
add
xor
add
add
add
add
add
add
add
inc
lea
call
and
add
add
loopne
(bad)
inc
add
add
add
add
xor
push
add
add
jae
add
or
add
or
add
sub
add
or
add
or
and
and
cli
scas
je
sub
add
xor
and
add
add
add
rol
add
add
sbb
add
outs
sbb
add
or
dec
jg
jle
cmc
not
popa
and
add
add
xchg
add
add
add
add
call
add
add
add
mov
add
add
add
add
add
or
add
sub
add
add
add
stc
pop
add
and
add
push
push
add
add
add
out
or
add
add
add
add
add
push
add
pop
add
add
add
add
add
add
add
or
add
or
add
add
add
add
mov
add
sysret
add
mov
add
sub
add
push
add
add
repz
add
or
add
mov
add
dec
or
add
or
add
add
and
add
xor
add
cld
or
add
or
add
rol
add
or
add
inc
add
add
add
push
add
xchg
add
mov
sldt
xor
or
add
pop
add
mov
add
movs
push
add
mov
add
fmul
add
(bad)
or
add
or
add
add
test
or
add
mov
or
add
add
ja
add
fisttp
add
mov
add
aam
add
call
add
add
or
add
je
add
inc
or
add
sldt
xor
add
push
push
add
ss
add
add
push
pop
add
dec
add
data16
cmp
add
retf
add
add
or
add
add
aam
add
add
add
ss
add
add
add
add
mov
or
add
mov
add
add
add
or
add
jg
add
push
or
add
or
add
or
add
add
add
lds
add
push
or
add
or
add
add
add
jnp
add
jns
add
add
push
add
sub
add
pop
or
add
add
add
or
add
add
lods
or
add
add
add
add
add
add
add
add
sldt
adc
and
mov
and
std
packsswb
(bad)
call
sbb
or
adc
adc
adc
dec
loopne
adc
adc
and
mov
pop
pop
and
cmp
(bad)
call
pop
sbb
pop
adc
and
and
call
std
(bad)
call
es
pop
adc
adc
and
cs
into
pop
and
inc
(bad)
inc
popa
cmp
std
(bad)
call
pop
inc
sub
mov
and
xlat
pop
mov
and
icebp
lock
popa
cmp
cld
(bad)
call
add
push
adc
and
fild
daa
pop
and
push
xchg
xchg
popa
cmp
cld
(bad)
call
sub
pop
adc
adc
and
and
pop
mov
popa
cmp
cld
(bad)
call
add
pop
pop
ins
push
adc
push
push
adc
push
push
pop
and
xor
(bad)
call
adc
adc
and
xchg
pop
xor
and
and
and
add
xchg
and
popf
xchg
jne
pop
popa
cmp
(bad)
call
or
or
or
cmp
imul
cld
(bad)
call
and
pop
adc
and
or
cmp
(bad)
call
pop
inc
sub
and
jno
mov
outs
mov
scas
and
jbe
hlt
fs
popa
cmp
cld
(bad)
call
sbb
pop
adc
push
adc
adc
and
and
xor
cld
(bad)
inc
adc
loopne
adc
and
and
and
and
cmc
sti
(bad)
call
sbb
adc
sub
cmp
es
pop
and
add
popa
cmp
sti
(bad)
inc
adc
dec
loopne
sbb
or
sub
mov
and
das
pop
mov
(bad)
call
or
push
pop
adc
push
and
xor
cmps
sti
(bad)
call
and
das
or
cs
pop
and
mov
cmp
adc
sub
and
jge
adc
nop
mov
jno
(bad)
call
pop
pop
or
adc
adc
adc
dec
loopne
adc
adc
and
popa
shl
and
push
shr
popa
cmp
(bad)
call
pop
adc
and
and
sub
and
and
cmps
add
(bad)
call
daa
pop
pop
adc
and
sbb
(bad)
dec
pop
js
dec
sub
xchg
and
sub
jbe
adc
and
cmp
cli
(bad)
inc
adc
loopne
adc
sbb
(bad)
call
and
pop
adc
and
mov
(bad)
cli
(bad)
inc
or
js
dec
loopne
adc
pop
adc
dec
loopne
adc
adc
and
call
and
stc
popa
cmp
sub
pop
adc
and
mov
pop
sub
adc
pop
pop
adc
adc
and
cld
stc
lods
pop
and
push
data16
popa
cmp
sbb
pop
adc
adc
sbb
sbb
adc
and
mov
cli
(bad)
inc
or
pop
or
sbb
or
sub
jns
and
pop
and
cmp
(bad)
call
adc
and
and
pushf
dec
and
repz
adc
(bad)
call
adc
and
and
jne
sub
jle
jnp
cmp
cli
(bad)
call
sub
jle
xor
pop
and
bound
popa
cmp
cli
(bad)
call
pop
sbb
pop
adc
inc
adc
adc
sbb
pop
push
adc
adc
and
and
cmp
stc
(bad)
call
and
pop
adc
and
cmp
cmp
stc
(bad)
call
sbb
pop
adc
adc
inc
sub
xor
sub
inc
ret
and
int
pop
and
cmp
adc
xor
and
sub
and
cmp
adc
adc
or
dec
adc
push
adc
and
or
cmp
call
sbb
push
and
inc
aaa
cmp
pop
stc
(bad)
call
sbb
push
and
push
stc
(bad)
call
adc
adc
and
and
sub
mov
and
pop
loop
popa
cmp
add
outs
push
adc
je
outs
push
adc
pop
and
add
push
adc
push
push
adc
adc
and
adc
pop
and
cmp
clc
(bad)
call
sub
jb
imul
pop
popa
cmp
clc
(bad)
call
sub
sbb
or
repz
cmp
sub
pop
and
(bad)
call
sbb
or
pusha
cmp
jge
sub
and
xchg
push
and
jae
idiv
pop
popa
cmp
sub
das
or
cmp
and
movs
pop
and
(bad)
call
sub
aas
cmp
jnp
and
or
inc
popa
cmp
(bad)
call
and
and
jne
add
add
sub
(bad)
call
pop
inc
sub
mov
and
adc
and
cli
mov
clc
(bad)
call
and
xor
and
mov
and
cmp
adc
(bad)
call
pop
push
push
and
mov
dec
cmp
clc
(bad)
call
pop
adc
and
xchg
pop
xor
and
loop
inc
and
mov
adc
and
loop
and
idiv
call
sbb
push
adc
pop
pop
adc
and
mov
adc
shl
(bad)
call
adc
adc
and
and
cmp
pop
adc
adc
and
fstp
sub
call
sbb
xor
and
or
je
sub
and
aaa
dec
and
(bad)
call
adc
and
adc
xor
sub
sub
and
cmp
(bad)
call
and
pop
adc
cmp
cmc
pop
cmp
(bad)
call
adc
sub
cmp
lock
pop
and
dec
push
pushf
popa
cmp
(bad)
call
adc
adc
and
(bad)
mov
out
mov
(bad)
call
add
cs
push
adc
and
pusha
fstp
pop
and
adc
popa
cmp
lea
or
sbb
add
push
sub
add
or
pop
sub
and
jbe
ds
idiv
inc
or
adc
loopne
adc
adc
and
and
cmp
idiv
inc
adc
pop
or
dec
loopne
adc
adc
and
sti
sbb
test
popa
cmp
idiv
call
pop
pop
pop
adc
adc
and
popf
cmp
idiv
call
pop
push
push
adc
pop
pop
adc
and
lea
xchg
idiv
call
sbb
push
and
jl
pop
cmp
pop
sbb
sbb
push
push
adc
and
xor
fldenv
popa
cmp
(bad)
call
sbb
push
pop
cld
push
loopne
sbb
sbb
pop
adc
adc
inc
adc
adc
and
ret
mov
movs
das
popa
cmp
idiv
call
adc
pop
adc
and
mov
(bad)
dec
lea
add
add
adc
sub
mov
and
xchg
dec
jp
cmp
idiv
call
and
das
or
outs
gs
pop
and
add
cli
cmc
(bad)
call
add
pop
and
add
push
adc
and
inc
pop
and
mov
(bad)
(bad)
call
push
sbb
sbb
push
push
adc
sbb
sbb
push
push
adc
and
mov
cmps
xor
mov
(bad)
call
push
pop
or
or
repnz
and
sbb
and
(bad)
call
sub
push
in
sbb
pop
and
in
pop
popa
cmp
sub
add
sub
pop
pop
cmp
or
sub
mov
and
int3
mov
popa
cmp
call
adc
and
and
sub
and
inc
jp
cmp
(bad)
call
sub
push
or
js
and
jnp
popa
cmp
sbb
sbb
sub
aaa
ss
jne
shl
cmc
(bad)
call
pop
pop
pop
adc
adc
pop
pop
adc
adc
and
and
add
retf
cld
hlt
(bad)
jmp
adc
and
adc
pop
pop
and
cmp
hlt
(bad)
call
pop
sbb
push
adc
and
iret
jle
pop
and
cwde
jg
popa
cmp
hlt
(bad)
call
adc
adc
daa
xchg
pop
adc
adc
xchg
pop
adc
adc
and
cmps
mov
(bad)
jp
cmp
pop
pop
adc
adc
and
and
in
jb
cmp
lea
or
sbb
add
push
sub
add
or
pushf
in
jo
jbe
(bad)
dec
dec
adc
sub
nop
out
cmc
mov
jae
popa
cmp
(bad)
call
sbb
xchg
pop
adc
adc
xchg
pop
adc
sbb
mov
popa
cmp
(bad)
call
pop
sbb
pop
and
sub
(bad)
call
or
adc
and
jecxz
dec
pop
and
cli
leave
popa
cmp
hlt
(bad)
call
adc
pop
dec
sahf
adc
adc
or
adc
dec
sahf
adc
and
loopne
mov
cmp
in
popa
cmp
repz
call
sub
mov
and
jecxz
popa
cmp
repz
call
sub
das
or
lahf
jecxz
adc
aad
add
(bad)
dec
sbb
add
or
or
pop
fsin
movlps
add
push
outs
pop
add
or
cmp
or
nop
leave
push
push
sub
and
pop
stos
pop
and
std
or
sbb
cmp
adc
xchg
adc
or
fninit
xor
and
push
test
and
(bad)
call
and
xor
and
mov
and
mov
and
(bad)
dec
pop
push
pop
or
sub
xor
popa
cmp
repz
call
sub
imul
popa
cmp
repz
call
wbinvd
xor
and
xchg
jbe
sub
and
sar
imul
adc
and
pop
adc
adc
sub
clc
shl
outs
cwde
popa
cmp
repnz
call
sbb
or
adc
push
and
fcom
and
sub
cmp
repnz
call
adc
and
inc
stos
dec
cmp
pop
sbb
sbb
push
push
pop
adc
loopne
adc
adc
and
and
(bad)
xor
(bad)
call
sbb
adc
sub
sub
sub
dec
mov
movs
(bad)
mov
(bad)
call
pop
push
push
adc
and
test
repz
mov
(bad)
call
sub
and
dec
xchg
mov
repnz
call
push
pop
pop
adc
adc
and
and
push
inc
sub
das
repnz
call
adc
adc
and
and
dec
in
popa
cmp
repnz
call
pop
sbb
pop
push
adc
adc
and
in
cld
dec
pop
and
cmp
icebp
(bad)
call
pop
pop
pop
adc
adc
and
cmp
aam
popa
cmp
icebp
(bad)
call
adc
adc
and
stos
or
and
jns
inc
popa
cmp
icebp
(bad)
dec
dec
or
sbb
mov
jl
cmp
sub
rcr
js
and
cmp
adc
and
cwde
icebp
(bad)
call
sbb
xchg
adc
aaa
or
rcl
and
and
and
popa
cmp
call
pop
push
push
and
adc
icebp
(bad)
call
pop
push
push
and
ins
cmp
(bad)
call
sbb
adc
sub
xchg
pop
aaa
or
adc
jle
sub
and
dec
and
inc
addr16
loop
popa
cmp
(bad)
call
movhps
movups
and
mov
pop
and
or
(bad)
call
pop
outs
sbb
push
loopne
pop
adc
and
and
in
popa
cmp
lock
call
add
ins
push
and
dec
shl
f2xm1
(bad)
call
pop
sbb
pop
adc
and
dec
ret
popa
cmp
lock
call
sbb
pop
adc
adc
and
and
ja
popa
cmp
adc
sbb
pop
or
dec
sahf
adc
and
dec
xor
fsub
(bad)
pop
popa
cmp
adc
adc
daa
xchg
adc
aaa
or
fbld
push
and
cmp
adc
and
popa
cmp
(bad)
call
sub
movs
test
pop
and
cmp
(bad)
dec
pop
js
dec
adc
adc
and
ja
pop
and
cmp
lock
call
pop
push
push
adc
pop
pop
adc
and
sbb
sbb
push
adc
and
call
gs
popa
cmp
lock
call
and
adc
and
adc
aaa
or
test
sub
and
xchg
pop
and
stos
xor
out
(bad)
call
push
dec
sbb
and
scas
jecxz
push
cmp
out
(bad)
call
es
or
or
mov
mov
and
push
cmp
out
(bad)
dec
lea
add
add
adc
add
adc
adc
and
jo
xchg
pop
and
cmp
sbb
sbb
sub
jp
fdiv
pop
and
cmp
popa
cmp
(bad)
call
sub
mov
iret
jnp
and
cmp
(bad)
call
adc
and
pusha
xlat
and
fs
out
and
mov
sbb
cmp
out
(bad)
call
sbb
pop
adc
adc
and
adc
inc
pop
and
cmp
out
(bad)
inc
adc
loopne
adc
pop
adc
push
and
sub
cmp
add
cs
push
adc
and
shl
jle
and
cmp
(bad)
call
sub
pop
adc
and
ins
adc
call
add
pop
pop
ins
push
adc
push
push
adc
(bad)
pushf
xor
pop
sub
popa
cmp
add
outs
push
adc
je
outs
push
adc
and
imul
lahf
popa
cmp
adc
pop
adc
adc
push
pop
dec
adc
and
out
(bad)
call
daa
or
or
mov
call
and
mov
es
(bad)
call
add
ins
push
adc
and
xor
popa
inc
cmp
(bad)
call
adc
or
or
jg
movs
arpl
and
and
(bad)
call
push
sbb
push
adc
and
lds
mov
adc
adc
push
pop
dec
loopne
adc
adc
push
push
adc
and
rcr
or
cmp
(bad)
jmp
add
adc
add
imul
add
add
and
add
and
pop
pop
and
cld
sbb
popa
and
add
add
sub
add
add
(bad)
(bad)
jmp
sub
sub
add
push
add
sub
add
or
and
add
add
add
add
and
add
push
and
mov
(bad)
pop
and
rcr
jmp
push
(bad)
push
add
or
and
add
sub
add
adc
add
and
add
add
add
jae
add
or
pop
adc
and
add
add
or
sub
add
xor
nop
add
add
add
adc
add
or
add
or
add
add
add
and
arpl
fsubr
popa
and
add
add
loopne
(bad)
call
add
add
add
add
adc
add
or
jno
retf
fstp
mov
into
add
sub
add
or
cmp
sub
and
xor
and
test
jmp
pop
inc
add
add
loopne
(bad)
call
add
add
add
add
adc
add
or
iret
lds
add
pop
popa
sub
fadd
sub
adc
add
add
add
add
add
add
adc
add
or
add
add
add
add
pop
jae
add
or
add
add
xor
add
add
add
jle
add
add
add
add
add
add
sub
add
or
add
or
add
or
cmp
sub
and
into
retf
js
je
popa
and
add
add
pop
add
add
add
add
(bad)
(bad)
jmp
adc
add
or
jns
or
adc
fadd
sub
adc
add
add
cmp
add
add
xor
add
add
add
add
add
jns
add
sbb
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
sub
jnp
add
add
or
fs
cwde
and
cmc
sbb
and
and
scas
pop
popa
sub
add
sub
add
push
and
and
cdq
popa
sub
add
or
push
popa
cmp
sub
add
mov
add
adc
sub
add
or
and
add
inc
and
add
jae
add
or
xor
add
and
push
and
and
push
add
add
add
ins
add
add
(bad)
(bad)
(bad)
cmp
add
sbb
add
add
add
sub
jb
add
jo
xor
add
push
and
and
popa
sbb
add
js
jae
add
or
xor
add
push
and
and
sub
add
or
and
and
(bad)
pop
popa
sub
add
xor
and
fcomp
pop
and
jp
in
cmp
(bad)
inc
push
sub
add
or
add
xor
add
add
add
pop
jae
add
or
add
pop
sub
add
push
or
cmp
sub
and
jnp
mov
mov
int
popa
and
add
add
pop
add
add
add
add
(bad)
(bad)
jmp
adc
add
or
cmpxchg
pop
and
push
xchg
shl
into
fadd
sub
adc
add
add
add
adc
cmp
add
add
xor
add
add
add
add
jle
add
add
or
add
sub
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
adc
add
add
dec
and
cld
ins
mov
and
add
add
loopne
(bad)
inc
add
add
add
add
sub
jo
add
add
sub
add
or
add
or
add
or
push
and
sbb
cmp
add
add
adc
add
push
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
adc
add
push
sub
add
je
add
add
sub
add
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
push
add
add
add
and
jb
outs
addr16
add
add
push
add
dec
add
add
push
push
add
pop
add
adc
add
and
dec
inc
add
add
pop
add
hlt
add
add
inc
ins
outs
bound
add
add
add
add
add
push
xchg
mov
add
cli
and
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
jl
xchg
or
add
or
or
or
add
or
or
add
or
or
add
or
or
add
pop
or
add
or
add
add
add
or
or
add
in
or
and
in
or
add
or
or
add
or
add
in
or
add
add
add
add
or
or
add
or
and
ins
or
xchg
or
(bad)
or
int
mov
or
add
mov
push
mov
push
pop
or
add
push
mov
push
mov
push
or
add
add
add
push
mov
push
mov
push
hlt
add
add
cpuid
add
add
syscall
add
add
retf
add
add
or
add
retf
add
add
add
add
paddsb
push
add
sete
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
or
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
and
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
and
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
xchg
add
add
xchg
add
add
add
add
les
and
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
sbb
add
add
add
aaa
add
add
xchg
or
add
push
add
add
add
add
add
add
add
add
add
add
xchg
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
ror
test
push
xor
push
cmp
cmp
sub
add
add
push
push
add
pop
push
push
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
ror
add
icebp
push
xchg
xor
test
pop
jg
add
add
add
add
test
or
and
add
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
add
add
add
add
add
pand
inc
add
add
add
retf
add
add
psubsw
sub
xchg
add
add
add
add
add
add
add
add
add
lock
add
test
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
add
add
add
add
pop
imul
ja
add
sldt
add
add
add
add
add
add
add
or
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
inc
or
push
add
inc
cs
ins
add
gs
arpl
outs
jb
pop
ds
imul
push
and
and
xor
push
add
xor
inc
and
inc
jl
dec
pop
pop
dec
push
es
and
add
or
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
or
(bad)
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
mov
or
mov
sub
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
add
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
add
arpl
ins
imul
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
gs
loop
lods
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
or
lods
loop
(bad)
loop
mov
or
lods
loop
mov
sub
lods
loop
scas
add
jae
gs
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
arpl
add
je
jae
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
jns
add
popa
add
ins
outs
jb
push
je
gs
ins
add
jns
je
push
je
gs
ins
add
inc
imul
imul
addr16
sub
mov
sub
mov
sub
scas
loop
lods
loop
stos
loop
mov
or
lods
loop
(bad)
loop
scas
loop
mov
or
mov
or
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
mov
or
loop
stos
loop
mov
or
stos
loop
(bad)
loop
mov
sub
mov
sub
loop
mov
or
mov
sub
lods
loop
stos
loop
mov
or
stos
loop
stos
loop
stos
loop
mov
or
mov
sub
arpl
sub
lods
loop
scas
loop
mov
or
mov
sub
(bad)
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
add
or
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
or
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
mov
sub
loop
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
mov
sub
inc
sub
ins
and
outs
jge
cmp
dec
jno
push
push
outs
push
sub
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
mov
or
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
loop
mov
or
loop
stos
loop
scas
loop
scas
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
sub
lods
loop
scas
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
or
lods
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
jne
gs
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
or
scas
loop
mov
sub
scas
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
mov
or
lods
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
mov
or
scas
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
loop
mov
or
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
or
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
loop
mov
or
scas
loop
mov
or
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
scas
add
sub
stos
loop
mov
sub
mov
sub
lods
loop
mov
sub
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
scas
loop
mov
sub
imul
push
jb
jo
jb
imul
ins
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
sub
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
add
sub
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
or
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
jne
je
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
xor
inc
aaa
xor
xor
xor
xor
xor
inc
xor
xor
inc
inc
aaa
inc
xor
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
or
loop
(bad)
loop
lods
loop
scas
loop
mov
or
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
add
ins
jne
push
jns
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
push
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
inc
cs
jae
jne
arpl
add
inc
sub
ins
and
outs
jge
cmp
dec
jno
sub
outs
push
pop
sub
jb
jae
jne
arpl
add
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
jae
gs
cs
push
imul
gs
add
je
dec
jae
popa
arpl
jb
jne
add
popa
jb
add
je
inc
jne
jb
outs
je
push
add
fs
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
dec
outs
fs
add
je
add
je
je
add
pop
inc
js
ins
imul
jb
push
outs
jo
add
outs
je
xor
inc
gs
dec
dec
push
push
inc
dec
inc
inc
add
je
inc
jne
ins
jns
jne
ins
imul
ins
add
jb
outs
add
je
inc
push
jae
je
push
push
push
popa
jae
bound
add
je
dec
jo
arpl
jns
push
jns
je
ins
cs
jb
ja
outs
add
imul
pop
dec
outs
arpl
imul
outs
fs
gs
dec
popa
outs
popa
gs
outs
je
ins
gs
gs
jo
jb
add
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
jb
popa
ins
add
imul
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
dec
inc
imul
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
gs
je
inc
arpl
jo
outs
jb
inc
outs
outs
je
outs
ins
add
jae
outs
fs
popa
jns
jne
add
jp
inc
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
dec
popa
ins
add
jp
add
je
inc
ins
imul
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
push
gs
add
jae
ins
gs
popa
jns
jne
add
je
inc
jae
gs
bound
inc
jae
gs
bound
push
gs
imul
add
outs
arpl
outs
outs
imul
inc
add
jb
ins
add
add
aaa
push
add
add
sub
add
add
ins
add
xor
outs
add
and
cmp
ja
inc
add
jno
pop
add
add
push
add
push
add
add
add
add
and
push
js
ret
popa
add
add
add
add
sbb
mov
pop
push
sbb
mov
push
adc
add
sbb
or
or
add
add
add
sbb
adc
adc
add
add
add
add
sbb
add
add
adc
and
add
and
adc
and
add
and
add
add
adc
or
adc
push
adc
and
add
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
push
add
add
add
add
xor
xor
xor
xor
add
add
and
xor
cmp
xor
sub
sub
sub
cmp
bound
arpl
add
add
dec
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
add
add
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
jge
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
pop
add
add
sbb
and
add
add
add
test
sub
or
pop
syscall
syscall
syscall
pop
syscall
syscall
syscall
syscall
or
or
or
or
or
add
or
add
or
or
or
or
or
or
or
add
or
add
or
add
add
sbb
push
add
sbb
or
sbb
and
push
add
add
or
add
or
jg
aad
cmp
or
and
add
sub
xor
add
pop
and
add
and
sbb
add
cmp
pop
pop
add
or
add
adc
and
add
push
and
add
or
and
add
adc
and
add
sbb
pop
add
push
and
add
add
sbb
and
add
adc
adc
add
mov
add
and
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
fadd
add
fadd
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
cmp
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
ins
add
add
je
jae
add
add
add
and
add
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
push
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
add
add
add
adc
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
push
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
inc
add
add
add
add
add
add
push
add
outs
add
add
je
dec
add
ins
add
add
add
inc
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
push
add
or
add
shl
add
fld
add
add
test
add
scas
mov
add
movs
out
add
add
jle
add
pop
retf
add
movs
popa
add
mov
add
int3
sbb
add
add
pop
or
add
data16
sbb
imul
(bad)
jmp
add
jno
add
add
add
sysexit
add
out
add
add
add
sar
add
adc
add
push
inc
add
mov
ret
rcl
add
inc
add
jo
add
sub
add
sub
add
stos
pop
add
jne
add
xchg
pusha
add
push
add
test
stos
add
mov
aad
add
add
lods
in
add
(bad)
daa
add
in
add
adc
add
sub
add
cld
add
dec
movs
add
xor
add
inc
add
mov
add
cmp
add
add
outs
xchg
add
pop
mov
add
cmc
add
or
add
push
add
jno
add
inc
dec
add
jmp
mov
add
add
dec
cmp
add
jno
add
sbb
add
lahf
movs
add
cmps
mov
add
cld
add
mov
add
add
cmps
push
add
fld
and
add
lods
sub
add
test
add
mov
add
sbb
add
cmp
add
add
push
aas
add
(bad)
aad
add
add
sub
add
cs
add
dec
fild
add
push
add
cmp
add
mov
jmp
mov
iret
add
pop
or
add
add
lds
add
xchg
add
scas
mov
add
add
repnz
add
pusha
cmp
add
mov
add
add
lea
add
inc
mov
add
(bad)
push
add
dec
fiadd
add
push
add
adc
add
jle
add
adc
add
pop
pop
add
xchg
add
ja
add
loope
add
std
push
add
push
cwde
add
aas
pushf
add
call
pop
add
dec
sub
add
jb
add
add
rcr
add
bound
add
mov
add
adc
add
popf
add
cmp
add
int3
mov
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
or
add
jle
add
push
add
and
jb
outs
addr16
add
add
add
adc
add
and
dec
inc
add
add
add
mov
add
and
outs
bound
add
add
add
push
xchg
add
pop
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
add
add
add
jl
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
fs
add
add
add
add
add
add
add
add
add
add
sub
xor
jno
xor
push
add
add
add
add
add
jmp
add
push
inc
add
add
push
inc
add
add
push
mov
push
add
pop
add
add
mov
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
add
add
add
add
add
add
or
add
adc
add
rol
or
add
adc
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
push
add
add
and
add
add
add
add
and
add
add
add
add
and
adc
or
add
and
adc
push
add
add
add
add
add
adc
push
add
daa
add
add
adc
mov
add
add
hlt
sub
add
add
add
add
sub
add
add
add
add
add
aam
add
add
xchg
add
add
add
add
add
add
xchg
sub
cmp
sub
add
add
add
add
xchg
add
add
add
xchg
sub
xchg
add
add
add
add
les
mov
push
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
adc
sbb
adc
push
add
add
add
add
xor
add
add
add
add
xor
xchg
add
add
add
add
add
add
add
add
adc
xchg
add
add
adc
call
cmp
add
add
add
add
add
add
xchg
sbb
add
add
add
add
add
adc
test
add
add
add
add
add
jle
add
add
add
dec
add
add
add
add
add
push
add
jg
add
add
add
add
add
add
xchg
add
add
add
add
adc
and
xchg
add
add
test
add
add
add
add
test
add
add
add
mov
xchg
add
add
sbb
add
add
add
add
add
add
add
add
add
add
imul
add
test
add
add
mov
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
mov
push
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
sub
imul
add
add
leave
add
add
add
pop
add
sub
cmp
add
add
sub
(bad)
add
sub
(bad)
add
sub
(bad)
add
sub
(bad)
add
sub
(bad)
add
sub
(bad)
add
sub
jae
jns
sub
push
add
add
add
cmps
add
add
add
add
push
add
add
add
add
add
add
add
fld
add
add
add
add
js
add
inc
add
add
pop
add
add
add
loopne
and
pop
add
add
add
add
and
pop
add
add
add
inc
add
add
pusha
add
add
add
add
mov
add
add
add
loopne
and
pop
add
add
add
and
and
pop
add
add
add
add
loopne
and
pop
add
add
add
inc
add
add
add
pop
add
add
and
inc
add
add
dec
add
add
add
add
cmp
add
add
add
sub
add
add
jo
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
call
add
add
add
jno
inc
add
xor
add
dec
add
add
add
add
je
add
pop
add
stc
add
or
shl
add
or
rcr
add
add
add
add
or
pop
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
test
push
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
sbb
add
sbb
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
adc
add
dec
popa
imul
js
add
imul
jae
outs
jb
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
add
jae
gs
cs
jb
ja
outs
add
jb
gs
xor
cs
ins
add
cs
mov
in
mov
nop
mov
mov
in
lahf
cs
jae
jne
arpl
add
xor
arpl
arpl
push
gs
jne
arpl
cs
jae
jne
arpl
add
gs
je
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
add
arpl
outs
jb
loope
mov
add
push
arpl
and
outs
addr16
xor
arpl
add
gs
add
jae
gs
cs
push
imul
pop
dec
jae
popa
arpl
jb
jne
fs
and
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
je
loope
mov
dec
inc
ins
outs
outs
gs
bound
push
outs
push
jo
gs
loope
mov
inc
jb
je
arpl
inc
imul
jb
bound
arpl
jns
je
ins
cs
jne
je
ins
gs
outs
outs
jae
jb
imul
arpl
imul
pop
inc
jne
jb
outs
je
push
add
gs
outs
fs
outs
outs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jo
add
je
gs
outs
add
je
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
sub
dec
outs
fs
add
fs
gs
cmp
jb
dec
popa
jb
push
gs
dec
dec
push
push
inc
dec
inc
inc
add
and
outs
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
imul
mov
outs
jo
inc
js
ins
imul
mov
adc
mov
in
mov
nop
mov
mov
in
lahf
add
add
jb
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
jae
ins
bound
jecxz
popf
call
mov
test
jmp
out
nop
loope
mov
xchg
cwde
out
mov
call
xchg
in
pushf
add
mov
jmp
xchg
jmp
sahf
jmp
mov
scas
xchg
jmp
mov
mov
lods
mov
mov
loop
test
loope
lods
jecxz
mov
call
sub
xchg
jecxz
xchg
add
je
outs
fs
popa
jae
add
imul
ins
add
jo
jae
add
jo
jae
outs
add
outs
je
outs
ins
add
jp
add
je
inc
ins
imul
add
je
dec
popa
ins
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
pop
dec
outs
gs
popa
ins
imul
push
inc
je
jb
bound
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
je
imul
jb
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
fs
sub
gs
ins
gs
popa
jns
jne
add
sub
outs
jo
add
sub
push
popa
ins
jne
push
jns
gs
and
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
xor
dec
outs
jbe
imul
and
ins
outs
jae
dec
popa
outs
fs
add
push
add
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
jae
outs
fs
popa
jns
jne
add
je
inc
jne
ins
jns
jne
ins
imul
ins
add
je
imul
and
and
add
and
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
ins
push
imul
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
nop
xchg
dec
xchg
into
adc
dec
movs
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
or
add
add
or
add
pop
pop
add
or
sbb
push
add
sbb
or
and
add
pop
pop
or
or
or
push
add
add
add
adc
add
push
add
or
add
add
add
or
or
or
or
push
add
add
sbb
adc
add
push
add
add
add
pop
push
or
sub
or
and
push
or
add
push
push
add
add
pop
push
or
sub
sbb
adc
push
add
adc
add
or
pop
or
xor
or
sbb
and
adc
push
or
add
cmp
add
add
or
or
sbb
or
or
and
adc
adc
or
pop
or
sbb
or
add
sbb
cmp
sbb
add
add
pop
or
or
or
sbb
and
add
dec
or
add
push
add
dec
or
or
sbb
or
or
add
sbb
add
add
sbb
add
or
push
adc
add
sbb
adc
add
add
push
add
sbb
push
adc
or
push
adc
or
push
adc
sbb
sbb
pop
add
or
sbb
sbb
pop
push
add
add
or
or
pop
add
or
adc
and
add
add
add
dec
add
gs
or
imul
or
and
add
or
add
push
add
add
push
or
push
or
or
and
add
ins
or
add
push
add
ins
push
add
or
add
or
or
add
add
push
or
add
push
add
add
add
push
adc
push
adc
pop
pop
adc
or
sbb
or
or
adc
or
sbb
add
add
add
push
or
push
or
push
or
jns
or
add
adc
add
pop
sbb
pop
pop
or
or
sbb
adc
add
push
add
or
or
add
sbb
or
push
add
or
pop
pop
add
or
sbb
and
push
adc
pop
add
adc
and
adc
add
xor
add
arpl
push
or
add
pop
pop
syscall
add
add
syscall
syscall
syscall
syscall
or
or
or
or
add
add
add
or
or
or
add
syscall
or
add
add
add
or
add
add
or
or
or
add
add
or
add
add
add
or
sbb
or
adc
cmp
or
push
push
or
push
or
or
and
sbb
sbb
add
add
add
add
or
push
adc
sbb
and
add
push
and
add
adc
add
sbb
pop
or
sub
or
add
add
adc
add
push
add
or
pop
pop
or
add
or
or
lidtd
pop
add
lidtd
push
or
adc
add
push
add
or
push
adc
push
sbb
or
cmp
aaa
cs
sub
add
arpl
arpl
fs
sub
sub
sub
xor
xor
cmp
add
sbb
add
outs
je
outs
and
jae
gs
jae
dec
je
add
and
add
xor
outs
outs
jae
and
jne
outs
je
inc
outs
outs
jbe
jb
gs
add
add
adc
ja
cs
jb
outs
je
outs
popa
jo
jae
arpl
add
pop
add
adc
jne
outs
je
inc
outs
outs
jbe
jb
gs
add
add
or
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
xor
cmp
xor
xor
add
jo
add
mov
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
