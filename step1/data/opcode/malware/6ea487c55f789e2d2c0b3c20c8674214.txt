push
mov
add
mov
jmp
xor
ret
int3
add
(bad)
dec
add
add
inc
add
or
or
or
sbb
das
fwait
pop
add
add
ss
jnp
add
sbb
inc
into
adc
adc
(bad)
in
scas
or
(bad)
out
(bad)
mov
ins
loop
add
and
lock
cmp
jne
sub
fnstsw
stc
rol
add
out
mov
sub
mov
rol
bound
xor
mov
pop
sub
nop
inc
mov
adc
add
adc
call
cmp
or
ins
rcl
fdiv
dec
jae
call
mov
cmp
xor
xor
xchg
adc
jnp
sub
xor
loope
cmp
push
ret
(bad)
es
jb
inc
sbb
add
cld
ret
dec
aas
add
dec
or
iret
pop
jae
add
or
outs
ja
ror
pop
sbb
dec
adc
pop
or
adc
inc
clc
mov
or
not
add
rol
sub
adc
adc
sbb
or
stc
push
or
rcr
or
pop
or
lahf
add
adc
fisttp
sti
fcomip
not
jmp
adc
test
je
push
mov
mov
sub
mov
push
or
and
std
retf
mov
int3
sub
xor
(bad)
imul
in
jo
push
and
imul
or
or
mov
mov
push
adc
jmp
idiv
les
push
add
push
push
js
xor
push
push
mov
xor
xor
or
xor
sar
sub
push
mov
jmp
cwde
loopne
or
and
lea
push
jl
lea
add
push
dec
and
inc
add
(bad)
fsubr
push
or
pop
or
adc
mov
mov
ror
cmp
push
add
leave
hlt
out
mov
fimul
test
cmp
xchg
or
pushf
push
ins
adc
popa
inc
or
and
xor
sbb
int
mov
rol
in
cld
dec
or
or
or
out
in
fcom
push
(bad)
cmc
sbb
push
push
xor
dec
mov
adc
xor
add
sbb
push
push
push
loop
push
int3
and
or
scas
cmp
std
dec
or
pop
push
or
sub
xlat
push
mov
sbb
rol
sbb
sbb
into
cld
sub
adc
sbb
(bad)
shl
pop
and
imul
shl
sub
mov
call
cld
cmp
ins
data16
adc
cmps
mov
and
adc
(bad)
in
jbe
mov
test
dec
adc
outs
loope
inc
sbb
jno
mov
add
add
and
std
les
sbb
movs
js
out
mov
aaa
sub
adc
les
push
xchg
std
push
push
mov
mov
test
std
lea
out
aaa
pop
rep
mov
xlat
mov
push
jmp
aad
xor
or
call
inc
inc
test
push
out
rdtsc
jbe
mov
push
mov
inc
push
inc
sbb
(bad)
in
pop
adc
add
jne
push
lea
call
dec
test
dec
in
jge
adc
div
(bad)
fld
add
nop
add
shl
jmp
push
das
dec
test
call
pop
repz
test
outs
idiv
push
push
jne
pop
or
inc
fsubp
mov
pop
je
xlat
in
mov
cmp
sub
xlat
fwait
je
or
pop
rcl
cmp
daa
push
sbb
push
dec
pop
pop
jbe
and
adc
das
dec
push
or
xchg
jne
rcl
pop
push
sub
pop
cld
dec
pop
jne
sub
push
sbb
push
movd
jmp
jl
ret
loopne
xchg
pop
pop
xor
sbb
push
aas
pop
push
add
imul
dec
push
pop
fcomp
or
cli
adc
pop
ret
mov
jbe
or
push
dec
xchg
fwait
into
add
les
push
nop
or
je
xlat
dec
nop
push
in
mov
sub
mov
pop
mov
sbb
in
mov
mov
sbb
xor
pop
leave
jmp
push
inc
add
fidivr
push
adc
mov
ds
nop
and
es
xor
add
aaa
cmp
scas
sbb
push
and
pop
push
jae
or
(bad)
push
or
in
mov
dec
arpl
loopne
or
mov
jge
mov
jae
cmp
add
push
call
xchg
push
fisubr
(bad)
dec
add
fbld
fist
mov
pop
rep
sub
or
mul
je
push
shr
xor
repnz
lock
jnp
inc
cmp
fisttp
icebp
xchg
jge
out
ja
jae
push
dec
mov
jbe
add
mov
mov
lods
jp
dec
out
dec
or
jne
mov
mov
dec
out
aad
sbb
iret
sub
inc
cs
xor
sbb
or
neg
xchg
sbb
sub
adc
sub
and
and
call
shr
pop
sub
dec
push
in
jne
push
sbb
push
cmps
mov
or
sub
std
push
mov
cdq
inc
push
push
add
jmp
fld
and
retf
mov
push
mov
adc
ss
pushf
sub
enter
clc
test
je
push
sub
ds
mov
sbb
sbb
shl
scas
pop
inc
push
jns
mov
xor
sub
imul
js
ss
(bad)
push
pop
cmp
les
cs
mov
add
push
jle
pop
ss
xlat
sub
pop
add
push
jp
add
push
inc
push
push
push
sbb
push
push
jb
pusha
xchg
jne
mov
hlt
mov
in
movs
jmp
fdiv
add
xor
pop
pop
fsubr
mov
ds
mov
jle
out
mov
push
push
mov
test
lea
inc
stos
jmp
jecxz
or
xor
js
arpl
push
add
push
sbb
add
mov
(bad)
push
pop
ret
(bad)
adc
mov
fcomp
rol
cmp
cmp
mov
or
sbb
lock
outs
loope
(bad)
movs
inc
inc
dec
loopne
mov
test
(bad)
mul
add
lods
fistp
pop
mov
in
mov
les
shr
add
jnp
pop
fcom
fmul
mov
ins
clc
and
cli
adc
popa
cmp
adc
sbb
aad
push
jns
std
aad
scas
fs
or
mov
mov
addr16
ins
or
shl
cwde
std
push
nop
or
in
mov
pop
movs
mov
out
inc
dec
lea
enter
dec
push
iret
cmp
nop
jmp
movs
and
(bad)
enter
jo
adc
add
dec
sub
fwait
in
xor
adc
loope
mov
ret
pop
adc
mov
loop
and
mov
imul
mov
mov
loopne
cld
shl
adc
popa
mov
push
add
push
rcl
dec
(bad)
mov
add
sub
push
xor
pop
inc
outs
dec
out
push
das
and
push
mov
outs
and
push
pusha
mov
mov
test
int
jae
sub
and
pop
push
pop
sub
sbb
or
je
push
cwde
test
popa
and
add
inc
aaa
cmp
loope
mov
ins
adc
sub
bound
cmp
inc
jne
dec
mov
cwde
xchg
rol
dec
sub
sub
mov
clc
data16
aad
stos
xor
and
push
lods
pop
pop
adc
sbb
mov
je
out
add
pop
imul
sub
mov
movs
inc
bound
push
xor
nop
gs
cmp
push
xchg
sbb
mul
push
fs
cmp
pop
pop
inc
sub
push
pusha
cwde
scas
push
mov
sbb
fstp
cmp
dec
push
mov
sub
sub
sub
push
jo
scas
xor
sbb
jno
aaa
je
jp
ins
leave
cmp
mov
cmp
push
pop
xchg
jnp
ror
(bad)
adc
sub
cdq
icebp
add
and
sbb
push
int3
sub
mov
aaa
adc
push
mov
mov
mov
mov
ja
mov
js
sub
push
or
or
pop
out
and
pop
mov
push
add
and
xchg
sub
adc
dec
sub
sbb
or
popf
mov
in
fsub
scas
cmp
retf
sub
inc
inc
push
push
add
js
arpl
ret
in
pop
sub
mov
inc
jge
and
jl
and
test
lods
aas
cs
xor
scas
sub
test
aas
je
push
imul
retf
arpl
lods
lea
push
dec
adc
push
mov
movs
or
xor
sbb
add
cmp
push
push
xchg
push
dec
sub
sbb
push
inc
xchg
or
cmp
push
mov
or
push
xchg
dec
push
push
xchg
dec
clc
hlt
sub
dec
xor
fldcw
gs
and
add
adc
and
pop
int
sbb
mov
in
or
and
and
lea
push
js
push
inc
test
fldenv
add
mov
push
nop
cwde
xchg
(bad)
pushf
pushf
sub
cmps
shl
sbb
xor
pop
pop
les
inc
icebp
mov
mov
pop
shl
cmp
inc
push
push
jae
push
adc
dec
mov
adc
xlat
push
scas
and
mov
sbb
(bad)
cmps
sub
mov
lds
sbb
jo
add
sbb
fwait
pusha
xchg
(bad)
hlt
pusha
dec
enter
pop
push
mov
and
and
push
add
mov
jecxz
aad
je
pop
add
cmp
loopne
in
xchg
adc
dec
adc
pushf
pusha
nop
cs
test
std
aaa
(bad)
push
push
push
cmp
je
sub
je
add
mov
add
jne
push
or
jne
cmp
das
sbb
or
and
add
inc
ins
adc
mov
pop
add
push
ins
inc
mov
xor
push
xchg
push
push
daa
cvttps2pi
mov
outs
stc
js
cmp
hlt
stc
xor
outs
mov
cli
call
js
mov
and
inc
xchg
pop
out
movs
xor
cld
in
jno
cmp
fsub
je
and
mov
xor
sub
and
adc
mov
pop
bound
xchg
push
ror
dec
enter
sub
jmp
pop
inc
loop
js
add
gs
xchg
pop
mov
dec
jb
lea
fidiv
mov
inc
test
jne
sub
icebp
push
fdivr
fcmovnb
(bad)
sbb
call
mov
cs
or
push
push
sub
mov
adc
sbb
adc
add
fdiv
dec
push
mov
cmp
lock
and
(bad)
(bad)
or
jnp
int3
xchg
add
out
test
cmc
xchg
add
pushf
mov
mov
das
shr
lods
mov
sbb
int
jge
dec
sbb
rol
fldenv
push
push
sbb
or
push
out
jnp
iret
lea
adc
retf
xor
shr
aad
add
jb
pop
or
mov
pop
into
pop
iret
shr
jle
push
xor
xor
and
dec
rcr
fisttp
ret
popf
sub
push
dec
xor
xchg
int3
or
ret
std
test
jbe
sbb
and
lahf
std
aaa
hlt
dec
or
mov
ds
and
jnp
fstp
inc
mov
mov
mov
or
and
adc
add
and
sbb
xor
lock
in
sub
movs
adc
mov
jne
jo
and
in
ins
aas
or
mov
mov
data16
inc
sahf
or
jo
dec
push
movs
pop
cld
aad
cmc
mov
mov
cmc
data16
add
add
mov
ret
mov
mov
lods
xor
stc
mov
sti
idiv
mov
outs
or
pushf
test
pop
pop
pushf
sub
add
outs
cmp
in
jbe
push
data16
mov
shr
cmp
setle
dec
and
xchg
add
fdivr
outs
adc
dec
jns
dec
or
inc
pop
mov
cli
pop
mov
inc
cmp
jb
fisubr
scas
xor
test
(bad)
or
sbb
mov
dec
add
cld
aas
add
inc
jne
cdq
out
sbb
push
sar
loope
imul
add
test
fwait
call
pushf
ret
enter
mov
xor
retf
adc
mov
and
sbb
ror
jecxz
rol
(bad)
sbb
add
retf
inc
cmp
jl
adc
xchg
add
rcr
bound
repz
push
sub
mov
arpl
mov
ja
outs
jg
or
xor
and
inc
jmp
ins
push
cld
or
add
mov
jb
test
ret
sub
scas
sub
push
inc
cmp
ja
cmp
hlt
mov
mov
shl
cmp
cmp
add
jg
fdivr
mov
mov
or
(bad)
push
and
add
mov
add
adc
in
bound
add
mov
mov
cs
pop
jnp
pop
cmp
adc
mov
mov
frstor
(bad)
jmp
pop
mov
pop
jmp
push
es
pop
loope
sub
ins
add
adc
cmps
add
mov
jae
sbb
fcomp
mov
jge
sti
setne
cmp
jne
dec
push
inc
cmp
enter
mov
sub
cmp
in
mov
in
je
or
inc
jns
or
sub
sbb
add
pop
cld
cmp
mov
fmul
call
adc
dec
mov
jmp
push
cmps
push
push
inc
mov
adc
push
stos
sbb
pop
mov
mov
ffreep
mov
sbb
push
pop
push
add
loop
iret
jmp
mov
(bad)
adc
call
pop
aaa
sbb
jno
push
(bad)
in
or
retf
(bad)
cmp
or
mov
push
or
jmp
test
aaa
fstp
outs
sti
and
dec
mov
(bad)
dec
push
out
cs
mov
jmp
mov
ins
aaa
data16
(bad)
je
push
mov
add
and
sub
dec
lea
aas
mov
in
xor
sbb
cmp
in
lods
jmp
add
dec
and
stc
jno
add
sbb
neg
pushf
jmp
pop
push
inc
in
fimul
fnsave
jge
and
imul
(bad)
adc
pop
mov
mov
ret
pop
cmp
je
xchg
sub
or
inc
adc
mov
scas
inc
not
fnsave
mov
xchg
mov
je
mov
clc
outs
jmp
repz
cmps
dec
or
or
test
sbb
sti
cmp
jb
call
push
mov
push
mov
jle
jbe
inc
icebp
ds
jmp
cmp
jb
std
cmp
push
xor
mov
jge
not
enter
pop
nop
clc
sub
ds
call
push
push
clc
mov
adc
popa
push
pop
ja
enter
fisubr
sub
or
cmps
jmp
cli
pop
aam
inc
cld
xchg
mov
out
jne
push
shr
sub
adc
or
or
int
xor
cdq
push
fadd
mov
pop
adc
jmp
push
idiv
push
push
add
ret
push
pop
bound
push
adc
(bad)
sbb
xor
mov
adc
adc
into
or
and
adc
jle
(bad)
push
mov
xor
(bad)
enter
mov
repnz
fild
test
mov
sub
xchg
shl
or
or
lods
jns
loopne
mov
ret
fucomi
mov
cmp
pop
mov
pop
xlat
adc
cmp
das
lods
retf
sahf
je
mov
div
jmp
push
push
pop
neg
pop
sbb
mov
xor
aas
arpl
lods
mov
add
int3
int
outs
push
fadd
mov
(bad)
mov
mov
sub
cmp
je
(bad)
sub
loopne
xchg
mov
adc
xchg
inc
mov
and
outs
dec
xor
push
das
cmp
jne
jp
lock
(bad)
push
sbb
adc
mov
lds
sbb
or
jne
fsub
sti
fiadd
test
xor
sar
retf
add
sub
xor
mov
or
dec
daa
daa
into
jecxz
adc
pusha
push
and
and
iret
pop
and
test
sbb
jo
jne
xchg
jg
xor
inc
adc
sub
xchg
or
adc
les
frstor
jmp
sbb
popa
clc
shr
adc
sbb
xor
pop
mov
mov
jae
idiv
push
fsubr
je
mov
test
fdivrp
lea
ret
test
or
ss
jne
pop
add
adc
jmp
add
mov
jne
mov
xor
rcl
dec
mov
stos
xor
mov
ja
push
lea
or
(bad)
cwde
or
add
mov
jbe
arpl
(bad)
fist
ins
mov
add
mov
outs
mov
push
push
clc
sbb
mov
fnstcw
dec
jo
pop
into
bound
sbb
ja
mov
inc
pop
xor
adc
fucomip
inc
mov
add
mov
pop
inc
add
mov
fs
pop
ins
sub
or
mov
fs
mov
xor
clc
and
dec
push
jbe
and
and
(bad)
outs
inc
popa
ss
adc
cmp
mov
data16
mov
or
shl
lock
ja
ds
inc
inc
inc
adc
cmp
je
jmp
cmp
xor
mov
push
inc
adc
mov
iret
or
add
nop
xchg
imul
sbb
cmp
ins
or
cmp
ror
div
jmp
mov
lea
lods
imul
adc
inc
inc
(bad)
cmp
enter
rcl
and
add
mov
mov
cmp
loop
sub
mov
push
xchg
or
cmp
je
cs
bound
sub
or
repnz
sbb
pop
sub
add
sub
dec
inc
inc
cmp
or
inc
and
retf
sub
test
pusha
xchg
loopne
add
sbb
sar
gs
push
pop
cmps
leavew
std
arpl
pop
mov
jmp
(bad)
nop
enter
jo
call
mov
push
mov
stos
fucomp
jp
push
push
xchg
imul
call
dec
clc
cmp
sub
xor
fs
or
pop
cwde
add
jnp
aaa
add
sbb
pop
mov
and
push
mov
pop
pop
fs
pop
jno
push
dec
xchg
and
in
es
xor
mov
pop
les
or
pusha
stos
adc
push
jmp
lods
push
push
imul
je
movs
ss
add
ins
and
dec
dec
(bad)
jmp
inc
sbb
pop
push
mov
cdq
mov
jo
push
sbb
nop
ss
out
leave
add
or
cmp
loopne
sbb
add
lea
sub
mov
dec
pop
movs
pop
jns
aam
or
add
inc
jns
sub
clc
pop
aad
push
sub
jnp
push
ins
or
pop
cmp
jnp
ins
cmp
clc
jne
mov
or
jle
jmp
add
mov
sbb
inc
ja
push
jbe
in
call
mov
rcl
pop
in
jle
in
loop
push
in
cmp
or
daa
mov
ds
adc
jae
popa
xor
jge
lods
and
jle
pop
adc
fcom
(bad)
popf
fs
or
adc
fwait
mov
fwait
jb
idiv
cwde
and
stc
test
loopne
dec
enter
popa
test
rcr
push
mov
jbe
cmp
test
aam
jmp
or
sub
jne
mov
or
sbb
(bad)
or
sub
mov
je
add
call
aam
mov
stc
jl
add
sbb
sbb
repz
xor
or
and
and
(bad)
repz
fadd
sbb
add
and
out
add
jne
push
daa
add
and
add
adc
inc
sbb
and
test
xor
ins
gs
sub
xor
jmp
pop
dec
sbb
pop
jecxz
pop
push
cwde
inc
sub
mov
ret
and
sbb
outs
rcr
idiv
(bad)
outs
lea
sbb
adc
pop
lock
sbb
scas
(bad)
sbb
pop
or
add
or
and
shl
imul
and
add
mov
mov
ret
cwde
mov
adc
dec
mov
jae
mov
push
(bad)
or
jl
sub
push
xchg
fimul
scas
and
loopne
pop
out
imul
lds
and
dec
inc
pop
add
das
or
pop
in
in
cmp
ins
push
mov
push
je
outs
adc
push
ins
retf
pop
unpckhps
lea
jmp
cmps
push
sbb
popa
test
push
or
add
or
dec
and
sbb
or
xor
leave
ds
or
(bad)
fiadd
dec
daa
jge
cs
shl
pop
hlt
sub
les
sub
fist
leave
adc
push
adc
cmp
cli
add
jb
rcl
shl
dec
ret
cli
mov
ins
or
(bad)
sub
bound
out
and
imul
add
lds
jge
fisttp
jle
adc
add
pop
xor
adc
mov
add
sub
loope
ret
sar
dec
cmp
jbe
pusha
mov
retf
aas
pop
mov
dec
into
inc
mov
aas
adc
jae
mov
shr
lea
not
and
(bad)
out
leave
(bad)
out
or
and
jmp
lea
sbb
clc
je
push
pop
add
fnstenv
pop
or
adc
mov
pop
add
mov
jne
jbe
or
jecxz
(bad)
hlt
stos
(bad)
fucomi
ss
sar
sbb
je
pop
sub
mov
inc
clc
xor
or
(bad)
cmp
cmc
dec
xchg
xchg
retf
mov
jno
jno
mov
mov
out
not
and
add
sbb
popf
outs
ss
sbb
aas
inc
xchg
mov
bound
sub
add
gs
pop
or
jae
int
mov
test
jne
xor
lea
mov
pop
add
mov
add
mov
dec
pand
out
inc
mov
inc
and
in
or
or
xor
fild
or
cmps
or
jmp
and
jmp
and
add
push
jmp
mov
xor
fcos
or
repz
scas
xor
mov
push
fadd
js
ins
push
fmul
push
pop
imul
loope
add
push
mov
iret
cmp
xor
push
or
idiv
push
mov
mov
(bad)
mul
dec
or
cmp
cdq
jbe
je
pusha
add
adc
push
mov
or
lods
mov
adc
clc
jno
pusha
out
and
enter
fdivr
adc
sub
nop
test
sub
sub
ins
or
xor
sar
(bad)
mov
pop
mov
mov
sub
leave
jle
movs
add
imul
sbb
push
mov
shr
in
and
js
add
popa
loopne
sbb
das
push
push
sub
xor
pop
popa
add
rol
stos
pop
fwait
loopne
ficom
push
sbb
loope
adc
sub
push
out
jmp
xchg
mov
shr
cmp
push
ins
sti
bound
or
popf
nop
or
(bad)
aaa
pop
lods
shr
add
into
xchg
mov
mov
imul
in
dec
cdq
add
pop
mov
add
mov
mov
dec
jne
test
xlat
nop
pop
test
push
push
xchg
fstp
push
sub
ja
gs
shr
movd
stos
clc
inc
pop
fucomp
lea
pop
out
mov
test
sub
or
in
sub
mov
imul
dec
or
dec
in
mov
mov
sahf
inc
add
icebp
pop
xor
cli
test
lods
mov
outs
mov
inc
js
fs
jmp
sbb
leave
iret
or
push
pop
dec
movs
adc
mov
sub
dec
xchg
mov
retf
not
call
cmp
lea
pop
adc
scas
imul
jle
call
outs
lds
fldenv
sar
pop
mov
or
pop
stc
push
leave
mov
mov
pop
inc
stc
sbb
pop
dec
imul
dec
xlat
mov
pop
add
sbb
nop
or
jmp
dec
or
or
jg
jns
sbb
push
nop
sub
pop
xor
stos
popf
ss
movs
mov
push
sar
dec
shl
mov
xor
push
pop
hlt
imul
sbb
add
aas
dec
inc
pop
dec
pop
retf
shr
pop
push
pop
adc
call
enter
adc
jmp
mov
jmp
sbb
dec
inc
jb
and
fiadd
xor
or
cld
loope
sbb
in
fcomp
mov
adc
ds
and
or
mov
int
fdivp
mov
pop
dec
and
pop
xor
test
jne
imul
adc
(bad)
pop
neg
sbb
cld
and
adc
sbb
dec
and
iret
dec
inc
outs
or
xchg
ror
dec
push
ins
and
rcl
ins
outs
ja
ja
jmp
ins
or
mov
ins
mov
jo
hlt
ret
loope
jns
mov
pop
pop
cmps
jns
sbb
jl
xchg
push
dec
into
mov
repnz
setns
xor
add
dec
and
sbb
cld
dec
loopne
imul
mov
fistp
pop
popa
add
lock
popf
push
dec
xor
jecxz
or
jmp
jbe
retf
jp
adc
stc
frndint
outs
mov
sbb
cmp
adc
dec
xlat
jne
add
mov
or
call
mov
and
fnstenv
jmp
xor
push
jnp
add
lock
sbb
lock
xchg
das
ins
mov
adc
jg
ss
xor
dec
adc
ins
ins
outs
inc
(bad)
cmp
in
imul
mov
jb
adc
mov
mov
dec
pushf
rol
jg
iret
jne
mov
inc
xchg
push
movs
xlat
fwait
stc
add
out
stc
dec
adc
into
imul
push
out
push
push
pop
aaa
leave
inc
test
and
mov
outs
cld
or
stc
icebp
push
pop
xchg
call
dec
test
enter
sub
dec
lea
outs
pushf
xchg
call
cmp
outs
mov
out
and
mov
xchg
pcmpeqw
in
les
or
sub
mov
xor
xor
push
mov
and
and
clc
sub
mov
sbb
dec
jp
gs
cdq
and
push
add
mov
mov
xchg
pushf
jge
mov
lds
jp
out
or
movs
sar
jl
and
mov
push
fwait
enter
out
or
enter
rcr
cmp
adc
jne
add
xlat
add
mov
push
pushf
clc
(bad)
mov
sbb
sbb
xor
adc
js
in
and
add
shl
fwait
jg
push
inc
jp
std
fwait
ins
arpl
add
sub
pop
(bad)
stos
inc
pop
hlt
xor
xor
movs
pop
jae
push
mov
lea
fmul
mov
and
mov
and
and
adc
std
push
xchg
sbb
xor
pop
xchg
push
mov
hlt
add
aaa
aam
(bad)
jnp
clc
(bad)
fwait
add
push
ror
pusha
pop
mov
sub
inc
mov
ins
movs
push
sbb
imul
dec
(bad)
sti
inc
pop
jmp
lea
xchg
sub
pop
dec
sub
in
ss
ss
xlat
inc
dec
cmps
je
push
xor
add
jg
adc
jne
mov
popa
jne
or
push
cmp
std
scas
lahf
fwait
dec
mov
cmp
xor
and
push
cmp
rol
push
stc
cmp
sub
or
jg
clc
mov
cmp
or
adc
dec
sbb
not
mov
push
lock
pusha
xchg
das
(bad)
fnsave
aas
cmp
mov
scas
push
or
lds
retf
push
sti
aaa
hlt
mov
inc
mov
mov
rcr
bound
pop
das
std
add
in
mov
adc
mov
call
loopne
push
call
adc
adc
jle
inc
in
pop
das
rol
xor
xor
or
arpl
jno
dec
jo
je
dec
aas
adc
adc
(bad)
add
sub
pop
cmp
sbb
ror
adc
or
lock
lds
imul
pop
mov
pop
loop
retf
jne
ds
out
push
push
popa
enter
ror
in
lds
nop
lahf
bound
jns
out
adc
gs
push
pop
jl
adc
cwde
rol
pand
int3
fistp
mov
and
(bad)
fld
mov
mov
mov
loop
mov
adc
fwait
dec
sbb
jecxz
inc
sbb
js
cmp
shl
mov
mov
and
int3
test
ins
or
mov
stc
js
test
xchg
call
out
add
pop
jb
sbb
(bad)
dec
aad
dec
mov
cmp
push
stos
call
push
adc
adc
cmp
add
push
fistp
fisubr
popa
mov
jmp
pop
ret
push
add
inc
cmovo
or
test
(bad)
fimul
not
push
je
jmp
add
out
inc
mov
pop
adc
pop
push
sub
push
add
or
jl
repz
std
mov
ds
add
dec
jl
clc
xchg
iret
out
dec
jp
imul
ret
mov
pop
inc
or
and
or
or
sbb
cmp
or
cmc
aad
sbb
add
xor
rcl
sbb
adc
cmp
adc
ret
ins
xchg
jecxz
inc
xchg
gs
enter
loope
push
xor
mov
pop
jo
loope
pop
push
sti
inc
or
add
inc
in
mov
sti
div
push
int3
test
push
add
pop
jecxz
sbb
mov
into
hlt
in
lea
cmp
(bad)
stos
mov
inc
pop
jmp
out
sub
push
das
jle
inc
adc
xchg
imul
daa
push
stos
jge
inc
cmp
and
mov
sub
jo
call
call
push
je
test
push
pop
mov
fdivr
fmulp
or
jno
push
clc
push
lea
fdiv
pop
push
or
mov
jnp
ja
js
add
jne
push
sbb
or
aad
ds
xor
cmp
or
mov
adc
push
pop
mov
hlt
cmp
fwait
or
pop
cmp
sbb
and
dec
int
(bad)
or
xor
mov
pop
cmp
adc
data16
or
xchg
jns
cwde
dec
push
mov
mov
add
mov
repnz
cmp
xchg
push
dec
bswap
mov
push
sbb
jecxz
push
inc
sub
loopne
sar
jo
pop
test
jne
dec
or
xchg
inc
inc
test
je
shl
and
jecxz
cdq
test
add
les
inc
test
xchg
xchg
das
hlt
push
inc
loopne
mov
sar
and
test
pop
jne
into
sti
sbb
out
or
inc
addr16
imul
jg
and
xor
mov
pop
je
stos
or
jmp
mov
pop
mov
pop
sbb
clc
dec
cmp
jp
mov
icebp
jle
push
push
cmp
add
fld
and
xor
add
stos
and
pop
xchg
movs
push
add
mov
add
daa
mov
pop
push
stos
ja
cmp
loopne
pop
and
or
push
daa
push
adc
outs
add
test
test
jmp
mov
sub
pop
leave
call
jno
and
jecxz
lea
and
cld
add
mov
test
outs
jl
(bad)
sub
loopne
fcom
stc
popf
aam
sar
clc
push
inc
mov
(bad)
in
popf
enter
ror
pushf
pop
mov
dec
add
imul
sti
(bad)
hlt
sbb
or
(bad)
xchg
xchg
and
pop
sbb
or
xchg
cmp
fcomp
dec
dec
mov
push
pop
sub
sub
xor
pop
sar
inc
push
arpl
ret
pop
jmp
or
pop
xchg
pop
mov
and
popa
aam
test
pop
adc
and
mov
xor
je
cmp
jne
das
jmp
mov
imul
ja
(bad)
push
ficom
mov
inc
xchg
adc
call
push
inc
test
enter
inc
xor
ret
jl
dec
js
sti
mov
jmp
push
push
xchg
add
repz
sbb
pop
dec
popf
ror
ins
sub
ins
enter
outs
fisttp
sub
lea
xor
push
icebp
push
inc
cmps
xchg
jge
mov
or
mov
and
scas
rol
stos
lahf
jle
mov
pop
mov
mov
sar
(bad)
jge
(bad)
mov
(bad)
sbb
dec
and
adc
fs
push
mov
sbb
inc
jmp
push
imul
or
add
clc
cmp
mov
(bad)
pop
and
scas
ret
mov
push
cwde
mov
and
shl
and
mov
push
pop
cmp
clc
inc
jae
jle
mov
ds
cmp
adc
ror
pop
jbe
in
cmp
pop
repnz
or
pop
inc
xchg
call
xor
ins
jb
cmp
mov
mov
and
stc
add
add
xchg
pop
jmp
sbb
push
adc
loop
adc
push
fwait
ins
sub
or
call
in
push
(bad)
pop
cmp
call
shr
pop
pop
add
jae
cmp
test
jge
xor
pop
mov
mov
inc
call
retf
inc
xchg
sub
aaa
fcomp
and
push
cmp
je
cmp
je
cmp
push
gs
inc
sub
(bad)
js
cmps
xchg
test
mov
or
dec
bound
adc
add
leave
sub
js
leave
inc
inc
dec
push
cmp
xchg
ficom
fisttp
mov
cmp
ucomiss
mov
or
push
jg
in
outs
pop
(bad)
and
leave
or
je
dec
je
pop
pop
repz
in
sbb
or
add
test
rcr
fldcw
adc
mov
or
pop
test
xchg
mov
adc
lock
sbb
add
or
pop
cmp
or
cld
or
adc
gs
popa
and
jne
mov
mov
xchg
push
je
xor
lods
(bad)
ins
dec
push
sbb
ins
std
mov
inc
or
dec
cmp
jne
and
sub
daa
push
cld
idiv
mov
adc
xor
or
iret
adc
cwde
add
pop
push
sbb
adc
retf
lock
ss
lock
dec
sub
sahf
fadd
mov
call
ins
add
jne
sub
fisttp
xchg
and
add
aam
jmp
xor
rcr
leave
das
and
add
push
push
or
pop
add
mul
mov
xor
push
push
and
add
xor
or
dec
add
jg
test
outs
inc
xor
or
test
adc
lea
push
pop
dec
fild
es
aas
pop
iret
lock
inc
dec
pop
mov
or
xor
push
fistp
push
inc
lea
adc
adc
adc
icebp
push
xchg
gs
xor
pop
push
and
push
sbb
jmp
inc
in
push
cmp
or
dec
push
pop
jns
lea
mov
or
or
call
shl
and
jecxz
cmp
xchg
push
and
fiadd
sbb
add
or
stos
xchg
add
dec
test
daa
call
pop
rol
jb
popf
push
push
clts
retf
push
sub
push
mov
or
loope
daa
les
mov
fld
ja
sub
sbb
cmp
mov
cmc
fild
bnd
cmp
pop
mov
or
adc
sbb
int3
push
jae
test
mov
mov
pop
sub
add
call
in
mov
bound
enter
mov
mov
jb
adc
push
stos
pop
adc
pop
and
jb
mov
mov
sub
jno
add
sub
push
cmc
push
mov
pop
scas
loopne
call
rcr
arpl
mov
jmp
leave
push
cmp
out
push
cmp
push
jmp
dec
shr
bound
mov
mov
(bad)
adc
loop
or
call
lds
or
jnp
push
or
popf
xor
sbb
inc
shl
add
sbb
cmp
and
je
jo
jg
pop
mov
mov
pushf
mov
(bad)
and
scas
imul
jmp
add
cli
dec
pusha
xchg
mov
inc
add
sub
and
or
(bad)
js
(bad)
icebp
test
lea
aad
xor
loope
mov
mov
add
movs
adc
mov
inc
cwde
repz
dec
pop
jmp
add
push
sbb
adc
inc
dec
dec
mov
mov
(bad)
jne
adc
int3
into
pop
pop
jb
fs
je
test
popf
call
aas
shl
ins
and
mov
pop
les
das
int
sub
in
dec
movs
mov
jne
mov
or
xor
cmp
mov
call
xchg
daa
xor
fwait
ins
push
and
sub
xchg
pop
les
mov
add
shr
pop
sub
sti
add
add
xor
not
or
dec
in
jne
push
push
pop
addr16
adc
iret
ror
std
cmp
or
in
popf
mov
lahf
loope
cwde
in
pop
add
or
jle
mov
lods
pusha
ins
mov
cmp
cmps
pop
fisub
in
int3
addr16
les
daa
adc
jp
fist
push
stos
data16
sahf
dec
popf
sub
scas
inc
cmp
inc
adc
xchg
or
fimul
cmp
mov
mov
sbb
xlat
out
sub
stc
or
push
mov
js
push
mov
jl
push
xor
push
hlt
mov
and
sbb
mov
jmp
outs
call
pop
cmp
add
lods
mov
enter
sub
mov
sbb
stos
test
add
dec
fsubr
and
in
test
lea
fsubr
cmp
inc
and
pop
aad
and
push
in
and
xchg
push
aaa
pop
int3
jl
sub
mov
add
cmp
fmul
(bad)
mov
pop
test
adc
or
in
add
add
or
rol
cmp
(bad)
imul
add
or
xor
(bad)
movs
aas
jl
cmp
add
mov
movzx
fst
or
data16
fld
sub
mov
ja
out
adc
jmp
xchg
mov
and
sbb
mov
addr16
add
mov
int3
push
shr
aad
lds
lahf
std
mov
outs
jb
jbe
push
mov
and
sbb
sbb
retf
mov
ret
sbb
jl
or
pop
dec
and
js
pop
push
and
mov
inc
dec
sub
jae
mov
(bad)
cmp
or
lahf
jo
daa
cld
mov
inc
fimul
sahf
jge
mov
sub
ret
inc
sub
cwde
xor
push
xchg
sub
adc
lea
and
fidivr
ret
xor
lds
xchg
cmp
je
leave
cmp
jb
or
dec
call
nop
arpl
repnz
ror
in
sbb
inc
cmp
fmul
adc
retf
loopne
inc
hlt
push
fs
loopne
push
add
pop
sub
cs
inc
inc
push
cmp
adc
dec
mov
adc
cmp
mov
mov
pop
add
and
aas
sar
retf
cmps
xchg
enter
pop
retf
cmp
in
mov
les
mov
add
retf
aaa
jnp
rcl
add
fs
test
mov
out
mov
push
push
pop
ins
mov
pop
clc
les
pop
jno
fstp
or
cmp
movs
pop
out
mov
add
test
les
cmp
jmp
cmps
xchg
push
(bad)
int
adc
js
int
add
jmp
arpl
xor
dec
or
cmp
xchg
ds
ins
cmp
jne
sub
call
and
outs
mov
sbb
xor
inc
popf
out
inc
jae
cmp
xor
xor
sbb
fld
jb
test
cmp
(bad)
ss
pop
test
cmp
shr
mov
or
sbb
sbb
adc
pop
jno
fdiv
rol
(bad)
dec
cwde
cmp
(bad)
jbe
adc
mov
out
pop
nop
(bad)
dec
ins
mov
shr
call
pop
dec
add
clc
dec
scas
jne
shr
loop
cmp
jb
rep
jmp
mov
inc
nop
(bad)
sbb
xchg
jb
add
enter
fs
out
fcomp
lea
mov
outs
sti
jg
add
and
mov
mov
mov
mov
add
imul
mov
int3
pop
sbb
lea
and
addr16
sahf
add
sbb
mov
dec
add
xor
inc
cmp
sub
sbb
lods
xchg
xor
in
call
in
lock
mov
lea
ins
xlat
je
test
mov
inc
inc
jo
mov
mov
adc
and
sub
cld
das
sbb
push
test
ins
jecxz
ja
addr16
out
lea
and
xor
mov
adc
cmp
pusha
ins
stc
fstp
add
outs
push
out
add
add
mov
in
dec
and
out
sub
mov
daa
and
sub
pop
mov
push
mov
dec
shl
cmp
inc
fdiv
mul
sbb
cmps
imul
imul
or
and
add
je
sub
fwait
mov
test
pop
or
mov
mov
xchg
mov
inc
pop
and
fstp
ret
mov
fldenv
and
cmp
cmp
mov
xor
push
(bad)
pop
pop
inc
or
xor
adc
add
add
pop
in
je
addr16
push
sbb
or
pop
sub
add
lea
lea
lea
mov
adc
fcom
push
mov
loopne
idiv
jg
pop
jbe
or
je
test
je
adc
std
push
aas
jne
or
ds
shl
push
or
scas
dec
mov
jle
div
retf
mov
call
inc
iret
xor
cmp
outs
iret
out
mov
add
je
add
or
inc
cmp
je
jae
cmp
je
fst
test
mov
shr
adc
rol
aam
xchg
sub
sti
pushf
jl
std
cld
sub
cmps
cmp
je
pop
ins
addr16
mov
or
sub
mov
sub
push
das
and
lea
push
leave
mov
pop
xor
leave
inc
adc
shl
or
lea
push
mov
mov
cmc
sbb
mov
mov
call
mov
add
or
stc
push
xchg
cs
call
loopne
mov
aaa
enter
push
inc
test
fdivp
in
mov
out
sub
test
and
lea
out
adc
mov
add
pop
ja
dec
fcomp
inc
les
or
ret
aam
mov
jmp
ins
fs
cld
ins
push
jns
outs
jecxz
rcl
movs
lds
ret
dec
mov
adc
xor
pop
xor
repnz
movs
inc
and
push
data16
xor
or
push
or
mov
mov
adc
dec
mov
sbb
ret
mov
cs
mov
sub
mov
adc
or
push
lock
inc
ror
sbb
gs
rol
int
ins
in
adc
and
and
daa
(bad)
sub
iret
daa
sub
adc
scas
add
push
mov
outs
inc
jo
sbb
pop
mov
test
daa
inc
inc
xchg
dec
and
mov
or
cmp
dec
cmps
sbb
stos
jno
cmc
sub
and
xchg
jmp
mov
loop
or
mov
sbb
sahf
sbb
add
in
sub
int
js
lea
mov
inc
pop
inc
stc
jmp
(bad)
inc
fisub
std
jne
pusha
jmp
push
cld
lods
xchg
sub
add
mov
call
dec
and
or
inc
xchg
mov
fsubr
clc
add
fdivr
mov
jns
fcmovnu
outs
jp
shl
lock
and
xlat
pop
jo
or
fs
dec
shl
enter
cmp
lahf
inc
call
jno
ds
movs
lea
push
mov
xchg
loop
jae
cmp
enter
jnp
popa
out
push
iret
leave
jne
mov
scas
imul
mov
sub
mov
pop
rol
inc
imul
push
sahf
lock
jmp
or
test
dec
sub
add
loopne
sbb
inc
cmp
lock
jle
(bad)
jbe
mov
mov
inc
jb
pop
push
ja
lods
call
push
mov
inc
or
adc
mov
inc
mov
inc
in
dec
jne
mov
and
not
sbb
shl
jle
jae
sub
pop
cmp
mov
adc
or
inc
dec
pop
inc
add
imul
enter
jae
mov
aas
addr16
cmp
outs
inc
pop
(bad)
mov
pop
sbb
inc
add
push
add
movs
dec
add
and
jno
pop
push
call
xor
inc
icebp
pop
fucom
cs
movs
inc
mov
sti
repz
or
ins
or
std
addr16
push
rol
adc
push
or
dec
rcl
push
cmps
fsubr
fld
cmps
push
jno
stos
pop
push
xlat
std
cmp
pusha
jo
jmp
test
int3
iret
aaa
ja
cld
fild
or
add
and
and
adc
adc
fs
jo
or
es
sbb
cmp
dec
sbb
and
xchg
outs
sbb
jmp
jmp
sbb
out
mov
outs
enter
leave
mov
and
pop
xchg
jmp
retf
add
jmp
fisub
cmp
add
or
loopne
adc
jb
fs
xor
push
sbb
sar
movs
sbb
xchg
xor
outs
cmp
adc
jne
imul
adc
fxch
xchg
pop
fsubr
jnp
dec
cmp
outs
call
or
fwait
cmp
mov
add
(bad)
adc
or
adc
lds
sub
fmul
ret
sub
fistp
adc
jg
sbb
adc
and
mov
pop
retf
pop
test
push
scas
inc
add
inc
adc
push
adc
dec
jne
mov
inc
pop
xor
add
inc
stos
xchg
mov
push
in
mov
fsub
xchg
mov
or
stos
cmp
pmaxsw
jbe
xchg
add
mov
add
scas
call
xchg
mov
aaa
or
js
daa
xor
push
and
popa
ss
icebp
sbb
(bad)
jle
jle
repnz
pop
in
pop
cmp
shr
lods
jns
cdq
lock
and
dec
and
jo
jo
fdivr
pop
clc
cmp
bound
std
rol
arpl
jmp
sub
xchg
enter
mov
sbb
inc
ins
push
sbb
ffree
and
push
sbb
jmp
dec
cmp
shr
js
pop
in
inc
and
push
cmp
pop
loopne
enter
push
sub
loopne
pop
and
cld
mov
pop
jo
popf
mov
pop
adc
jl
jnp
out
not
sbb
test
xor
ins
and
pusha
hlt
(bad)
mov
mov
xor
inc
sar
lods
cdq
push
cmp
or
jae
test
pop
or
movs
arpl
jmp
xchg
inc
pop
jecxz
(bad)
sbb
inc
out
inc
pop
rcr
hlt
jle
mov
xchg
dec
mov
mov
mov
in
cld
sub
xchg
enter
lods
inc
push
dec
add
jg
cmp
xchg
xor
mov
inc
rcl
out
shl
jbe
xor
or
aaa
arpl
pop
or
lock
inc
mov
xor
outs
and
test
cmps
nop
jbe
cmp
outs
add
js
pop
and
inc
mov
mov
cli
or
or
(bad)
add
pop
jl
mov
push
lahf
addr16
adc
sub
outs
sbb
jns
inc
pop
mov
and
fist
jo
xor
xor
inc
adc
and
inc
dec
pop
or
adc
push
fs
inc
push
jmp
xchg
push
dec
adc
movs
ss
ror
push
push
cmp
mov
pop
cmp
and
sbb
cmp
inc
pop
in
dec
adc
ds
pop
adc
test
addr16
je
adc
daa
loopne
mov
mov
pop
mov
and
mov
push
(bad)
pop
or
or
sbb
das
bndldx
movs
push
cmp
mov
lock
(bad)
jmp
pop
mov
push
sbb
sbb
movs
xor
dec
cmps
iret
mov
scas
mov
pop
mov
adc
or
pop
mov
mov
jnp
clc
mov
cmp
je
(bad)
cmp
ret
jb
jmp
dec
cmp
and
cmp
cld
sub
and
sysenter
xor
jnp
xchg
sbb
or
fs
sub
dec
xchg
xor
sbb
xchg
stos
jmp
pop
jns
mov
pop
xor
pop
pop
cmp
ror
mov
push
adc
shl
xchg
lea
sbb
push
sar
das
ds
push
mov
mov
sub
or
lods
fsubr
push
in
mov
ret
ja
sub
mov
je
inc
mov
or
jmp
jno
cwde
stos
ins
loopne
sub
sub
dec
push
push
cmp
and
scas
xor
cmp
div
inc
add
adc
add
sbb
dec
dec
inc
cmp
rol
push
out
xor
sbb
sete
mov
fstp
dec
fstp
aas
push
xor
ins
cld
jbe
jno
adc
add
lea
shr
popa
jbe
inc
dec
or
stc
jb
outs
pop
test
popf
push
sti
jb
inc
cli
sub
(bad)
sub
fimul
push
push
add
cmp
mov
or
xlat
lea
sbb
xchg
sub
fst
pop
cmp
clc
and
call
add
pusha
push
mov
repz
bound
and
retf
shl
mov
xor
mov
add
pop
mov
aas
add
cmp
lock
imul
(bad)
outs
js
or
fidivr
retf
jb
imul
ret
jae
sbb
pusha
mov
mov
adc
ret
in
ins
lods
lods
loopne
dec
sti
add
inc
rcr
dec
fiadd
cmc
push
test
dec
dec
sbb
jns
imul
mov
mov
cmp
stc
cmp
jge
mov
leave
xchg
jle
xor
push
ret
std
mov
sbb
movs
aaa
ror
fs
inc
adc
fs
aas
xchg
jmp
cmp
cmp
iret
test
cmp
lea
xchg
sbb
push
cmp
xchg
stos
cli
aad
pop
mov
movs
push
(bad)
pop
js
in
mov
cmovbe
add
jg
push
(bad)
leave
sbb
push
test
daa
cmp
adc
addr16
int
xchg
adc
mov
or
retf
pop
sahf
jne
dec
push
dec
mov
fs
push
push
ret
clc
mov
cmp
xchg
mov
je
rcr
rcl
add
sub
js
and
adc
and
cmp
jg
push
cmp
cdq
mov
jns
mov
push
cmps
es
push
sbb
popa
mov
jmp
push
add
or
daa
inc
test
mov
xor
or
inc
sbb
fisubr
inc
fstp
and
or
cmp
jae
lock
iret
arpl
out
and
sbb
outs
xor
or
add
push
mov
mov
inc
mov
push
inc
push
test
jo
data16
sbb
sbb
pop
cwde
cmp
inc
inc
cmp
xchg
fwait
std
pop
je
push
xor
xchg
or
mov
push
and
outs
mov
xor
cmp
sbb
push
sub
or
xchg
movs
adc
cmp
das
leave
lods
ret
and
imul
xor
ss
mov
adc
cwde
loope
inc
push
jbe
lea
xor
in
mov
sub
pop
jo
or
add
add
inc
xor
inc
inc
xor
pop
cmp
fld
inc
jb
je
add
push
rcl
cmp
(bad)
cld
sar
xchg
sub
gs
lea
in
dec
stos
ficomp
mov
xchg
pop
inc
cmp
xor
neg
push
and
test
push
xor
add
and
sub
mov
imul
mov
dec
or
(bad)
scas
push
pop
mov
in
mov
imul
or
or
int
inc
sub
clc
xor
adc
pop
xchg
mov
ret
mov
adc
push
lods
test
sub
stos
clc
sbb
dec
sub
adc
mov
xchg
pop
push
data16
mov
add
sbb
sbb
lds
ret
dec
rol
leave
jae
lea
add
add
mov
push
jno
push
jo
sahf
daa
jge
out
inc
lea
push
inc
inc
adc
mov
(bad)
imul
or
jp
cdq
in
add
mov
cli
icebp
pop
lods
xchg
mov
sub
mov
(bad)
in
jne
repnz
inc
push
repnz
imul
pop
jbe
cmp
mov
mov
sbb
outs
push
and
push
fild
push
fsub
or
jecxz
push
push
pop
push
idiv
(bad)
repz
test
mov
xor
lea
fcmovne
outs
test
mov
and
shr
add
xor
neg
or
shl
mov
mov
into
jg
inc
rcr
add
lea
cmp
mov
sub
jl
(bad)
loopne
sub
jnp
pop
(bad)
lea
jne
loope
loopne
lea
pop
or
fmul
and
pusha
fsub
xchg
cmc
xchg
fild
(bad)
sbb
sar
cmp
xor
shr
ins
jle
inc
aaa
sbb
mov
push
adc
or
or
add
cmp
and
pop
dec
sbb
mov
xchg
push
xor
mov
mov
inc
or
out
leave
or
out
pop
push
inc
or
sub
or
(bad)
jl
test
test
mov
jecxz
push
sbb
icebp
xlat
test
test
neg
out
mov
vpunpckhqdq
iret
push
add
cmp
cmps
call
push
fwait
xor
ds
inc
mov
outs
inc
add
or
pop
pop
xlat
push
or
xchg
je
xchg
pop
mov
mov
jl
ret
ins
adc
push
in
adc
scas
mov
das
sar
and
add
jae
pop
and
jmp
(bad)
fdivr
jb
in
and
push
jmp
push
push
mov
sahf
jne
dec
pop
mov
or
inc
ss
popf
and
pusha
push
xor
xchg
jp
jg
cld
xor
scas
shl
and
int
jle
aam
daa
lock
xor
add
or
mov
sbb
push
jmp
repz
loopne
or
out
shr
not
pop
pusha
out
mov
jae
popf
jo
ins
xchg
pop
test
xor
inc
cmp
enter
into
hlt
das
scas
ins
or
leave
push
cmp
je
pop
mov
rol
push
loopne
cli
btr
add
in
std
jns
or
aas
movs
xchg
fdivp
add
cmp
add
out
enter
sbb
pop
movs
xchg
inc
fwait
push
mov
xor
push
or
inc
aas
ins
out
mov
mov
fadd
inc
inc
mov
xchg
xchg
push
or
nop
pop
or
mov
mov
enter
pop
shr
outs
hlt
cmp
add
or
inc
or
dec
sbb
aaa
mov
je
or
and
pop
add
add
fdivr
or
das
and
and
xchg
aad
and
arpl
(bad)
pop
fsubr
jg
mov
sub
lea
clc
pushf
ja
fwait
imul
pop
clc
jae
mov
(bad)
in
(bad)
and
jle
push
int
ins
pop
shl
adc
stos
aaa
adc
sar
dec
cwde
out
aam
adc
push
inc
push
sbb
push
call
nop
cs
and
es
sub
and
sbb
dec
fnstsw
ins
mov
mov
aaa
in
jns
sub
sub
shl
dec
add
(bad)
add
or
and
cmps
clc
jmp
jb
pop
mov
js
jnp
js
push
jp
jmp
pop
pop
jmp
mov
mov
pop
add
mov
push
pop
cdq
out
mov
scas
mov
or
fcom
push
add
adc
icebp
imul
add
sbb
in
push
dec
repz
or
inc
pop
mov
icebp
sub
push
rol
dec
cmps
sti
pop
mov
pop
sub
je
add
or
add
fs
pop
or
add
jne
jl
mov
or
ja
mov
int
pop
mov
test
outs
outs
lahf
push
jmp
dec
sub
dec
add
rcl
or
je
cmp
mov
div
dec
pop
push
mov
mov
hlt
add
in
ret
push
or
outs
pop
inc
fiadd
mov
push
(bad)
pop
mov
jp
mov
pop
stos
jne
inc
cld
xlat
into
or
and
add
jne
mov
out
xchg
ins
not
mov
pop
jne
or
mov
sub
mov
fcmovnu
adc
adc
adc
mov
mov
or
push
pop
mov
fstp
xlat
jl
loopne
mov
fs
stos
movs
jmp
add
stos
in
mov
jl
sbb
adc
xchg
push
or
fs
push
add
push
sub
js
push
or
inc
loope
mov
mov
fldenv
setge
jmp
adc
or
test
pop
adc
pop
inc
es
inc
sbb
cmp
inc
fs
sub
leave
mov
dec
sbb
jp
retf
pop
test
add
dec
cmp
es
sbb
or
sbb
inc
or
lea
adc
sub
mov
inc
test
mul
jnp
imul
sub
mov
xor
and
addr16
sbb
sbb
sahf
xor
imul
jns
pop
adc
and
ja
push
push
rol
cmc
inc
jge
ja
push
mov
arpl
push
and
inc
adc
add
fimul
add
dec
mov
mov
or
mov
add
repz
inc
mov
pop
push
cs
jmp
jae
add
pop
xchg
push
jbe
cli
pop
mov
adc
fiadd
pop
or
mov
cmp
(bad)
mov
xchg
jmp
mov
ror
rcl
sti
outs
sbb
mov
mov
inc
inc
mov
scas
fild
ror
or
dec
aaa
out
stos
mov
mov
fcomi
or
pop
push
call
jle
dec
icebp
inc
dec
pop
mov
pop
loop
mov
mov
dec
adc
loopne
daa
jnp
fadd
mov
mov
cmps
add
pushf
ret
test
xchg
fild
cmp
mov
and
sbb
push
mov
(bad)
adc
add
int
inc
jmp
ret
or
std
cld
add
mov
retf
lock
cmp
mov
leave
test
ret
sbb
push
jg
outs
addr16
jl
inc
xchg
test
or
xchg
adc
or
rcr
mov
push
mov
shl
nop
retf
push
mov
pusha
arpl
jnp
sbb
or
lock
mov
(bad)
jl
iret
push
mov
test
push
or
sub
cmp
adc
ds
out
add
lea
and
ins
push
xchg
adc
inc
mov
into
dec
xor
jne
rcr
mov
ret
retf
adc
jne
inc
cmp
jmp
or
push
sub
into
cmp
jbe
sbb
adc
inc
out
fdivr
jo
xchg
in
dec
mov
(bad)
test
dec
or
test
fist
or
(bad)
out
mov
jmp
or
mov
adc
mov
add
or
push
mov
and
test
lods
les
adc
or
mov
inc
dec
sbb
loopne
inc
mov
cmp
add
push
cmp
repz
arpl
add
shl
add
stc
call
les
jbe
push
ret
jo
push
mov
sti
mov
add
jae
sub
dec
movs
dec
ss
add
adc
jo
adc
pushf
adc
push
cmp
mov
sub
ud2
push
jge
or
adc
sub
adc
das
cmp
jb
aam
xor
and
ins
loopne
das
mov
frstor
mov
mov
fwait
xchg
and
mov
mov
adc
mov
add
or
adc
cmp
ret
test
mov
lods
cdq
ins
popa
mov
sbb
inc
ror
addr16
sti
jbe
arpl
rcl
test
mov
pop
cmp
fimul
mov
test
retf
xchg
adc
test
xor
out
sar
push
sahf
adc
shl
push
(bad)
or
div
jmp
jae
pop
ret
mul
mov
call
out
shr
inc
or
and
jmp
shr
pop
xlat
(bad)
fmul
leave
jne
div
das
and
out
adc
push
cmp
ja
jb
sub
dec
sub
sbb
ins
or
adc
neg
xor
(bad)
retf
lock
(bad)
fldenv
fistp
add
push
mov
xor
cli
aaa
ss
in
add
stc
and
jp
cli
xor
(bad)
add
ror
call
or
rol
push
add
retf
jbe
lods
mov
or
jmp
out
add
xor
jns
cdq
dec
js
mov
(bad)
add
mov
push
ins
inc
sub
cld
mov
shl
push
adc
shr
ins
sahf
mov
(bad)
loope
cmp
dec
xor
out
fdiv
adc
hlt
push
arpl
lods
cmp
add
mov
mov
xor
cmp
lahf
add
iret
mov
sbb
or
dec
sub
mov
cmp
mov
lea
ds
test
inc
call
add
xor
or
test
xchg
cmp
xchg
fstp
sub
jne
sub
clc
rcr
push
or
pop
jbe
loope
add
inc
or
mov
add
daa
sbb
ret
jp
mov
lea
ret
(bad)
out
ins
xchg
ds
jmp
in
inc
mov
fdiv
out
lods
mov
or
push
call
cmc
popf
(bad)
std
and
sub
cmp
ja
rol
out
mov
jg
je
inc
imul
adc
shl
pop
pop
jp
in
sbb
pop
pop
pop
xchg
sbb
fs
xchg
push
xchg
int3
arpl
cmp
jnp
jecxz
jbe
mov
dec
add
xor
(bad)
jne
mov
jbe
dec
sti
or
push
push
or
pop
sbb
add
add
and
xor
sub
mov
cld
mov
mov
adc
push
neg
mov
or
fldcw
push
movs
call
fs
add
repnz
inc
dec
je
add
je
ins
je
pop
xor
ja
bound
rol
pusha
dec
iret
cmp
adc
add
pusha
adc
call
jne
cmp
jne
inc
cmp
arpl
in
cmp
and
movs
pop
out
cmp
and
mov
jecxz
pop
xor
pop
int3
outs
iret
repnz
les
js
pop
ins
shr
pop
rol
push
mov
cld
lea
pop
push
jecxz
retf
and
test
nop
and
mov
xlat
repnz
test
mov
and
sub
xchg
pop
push
add
mov
ja
mov
sahf
scas
(bad)
repz
ds
add
dec
les
or
fs
mov
or
inc
xor
hlt
jg
imul
imul
inc
adc
and
(bad)
jecxz
pop
lea
test
and
stos
and
jne
sbb
inc
out
mov
mov
add
jnp
cli
push
adc
lods
loop
or
out
call
add
sti
dec
imul
ds
jmp
hlt
call
je
sub
cld
lods
cmps
loope
add
add
test
je
fs
ins
and
sub
or
jns
cmp
push
cmp
push
adc
add
xor
(bad)
(bad)
in
cmp
xchg
cmp
or
mov
adc
bnd
jp
sub
loope
gs
add
addr16
je
add
rcr
cmp
outs
jne
sub
stc
mov
popa
mov
jmp
cmp
ins
aaa
mov
test
mov
sub
xchg
int
mov
and
or
pusha
jl
mov
aas
cmp
call
adc
rcl
shl
dec
cmps
jmp
mov
push
mov
mov
data16
inc
push
pop
call
push
push
sbb
mov
mov
sbb
aad
push
cmp
dec
popf
shr
adc
test
test
jno
jmp
pop
inc
pop
jns
mov
sub
mov
jmp
mov
inc
jmp
jge
inc
add
push
jp
mov
mov
mov
je
xor
adc
push
push
das
test
pop
add
adc
in
test
arpl
and
mov
inc
loope
sub
fnsave
ja
sub
sbb
fwait
(bad)
enter
test
shr
jae
mov
loope
mov
sbb
mov
mov
cmps
pop
jmp
or
add
mov
sbb
aad
test
cmp
mov
retf
dec
pop
pop
push
fwait
mov
test
sbb
or
jmp
inc
jmp
aaa
cdq
push
ins
or
mov
cdq
out
shl
adc
sbb
pop
jl
jae
pop
push
push
fcmovu
ret
inc
pop
nop
and
mov
jne
fstp
xor
adc
adc
sbb
mov
sbb
mov
or
jne
and
bound
aaa
dec
jo
push
push
je
mov
ins
push
(bad)
clc
cdq
push
push
retf
rcr
test
sbb
jns
jmp
fmul
mov
dec
jmp
aad
push
mov
pop
fs
cwde
outs
xor
mov
cmp
je
outs
inc
push
push
jp
mov
inc
jmp
dec
mov
loopne
add
inc
inc
jg
xchg
mov
lds
pusha
ins
bnd
jmp
dec
sub
into
ret
jb
pusha
sub
aas
rcl
shr
xchg
push
or
fsub
xor
mov
lea
addr16
shl
fcom
test
xlat
pop
outs
push
and
pop
mov
cmp
fstp
mov
adc
xor
or
ss
mov
sbb
je
jle
scas
xor
shl
fs
ins
pushw
cmp
inc
push
inc
popa
mov
fld
cmp
and
lds
hlt
test
pop
jne
test
sbb
sbb
mov
pop
daa
fdivr
sbb
jae
and
xor
or
mov
mov
adc
ins
mov
xchg
mov
mov
adc
clc
imul
shl
pusha
mov
adc
inc
adc
and
xor
pop
push
mov
ficomp
sub
xchg
add
cwde
addr16
add
pop
xor
sbb
or
sub
add
cmp
xchg
jge
imul
add
inc
inc
lock
adc
cmc
cmp
mov
and
push
or
or
(bad)
mov
inc
jmp
mov
xchg
mov
cli
xor
test
jle
loopne
inc
pop
ror
sub
fdivr
adc
fsubr
int
jb
cwde
xor
mov
inc
sub
pop
or
mov
test
or
pop
(bad)
loope
or
shr
mov
inc
shl
clc
or
add
sbb
mov
pop
adc
sbb
out
adc
ret
push
popa
sub
fs
outs
add
jne
aaa
add
sbb
jbe
mov
cmp
test
push
xor
add
push
xor
add
lock
hlt
and
mov
sub
or
fs
fadd
cmp
pop
popa
xor
add
fxch
pop
arpl
dec
in
das
or
call
ins
aaa
pop
shr
xor
aas
fcomp
fwait
je
or
add
inc
or
and
test
xor
pop
adc
mov
add
or
out
add
data16
push
lock
adc
or
test
pop
aas
fld
jbe
cmps
test
icebp
push
xchg
and
adc
dec
call
sbb
pop
xchg
inc
pop
cmp
or
stos
push
and
or
lods
pop
stos
ror
lock
sub
xlat
inc
inc
ins
nop
xchg
arpl
xchg
out
cmp
jae
cmp
clc
add
and
and
mov
pop
stos
loopne
jbe
push
cdq
cdq
lds
add
inc
inc
mov
cmp
cmp
jne
in
or
nop
arpl
mov
shl
or
cli
fs
pop
test
pop
mov
std
xchg
fwait
dec
push
add
std
and
ror
jb
add
and
and
jno
add
push
retw
pop
add
pop
pop
(bad)
cmp
dec
pop
xchg
aam
inc
jmp
sbb
pop
mov
mov
sbb
jne
arpl
mov
xor
(bad)
sub
xor
dec
mov
cmp
jge
(bad)
loopne
ss
mov
jns
or
ins
xor
cmp
xchg
scas
fld
inc
and
xchg
add
push
jne
adc
add
pop
lea
cmp
out
or
mov
(bad)
adc
dec
test
jae
add
call
adc
clc
mov
imul
dec
mov
ja
and
pusha
fs
das
xchg
sbb
and
jbe
in
adc
sbb
mov
dec
xor
mov
(bad)
inc
test
mov
mov
dec
ret
push
adc
mov
add
fadd
jne
out
mov
lods
in
cmp
aaa
adc
out
mov
lds
rol
or
stos
pcmpeqw
enter
or
inc
adc
adc
xchg
ror
jnp
mov
mov
mov
hlt
inc
push
(bad)
jmp
push
cmp
sub
rcr
push
sbb
add
cdq
push
and
xchg
mov
cmp
pusha
sbb
aas
add
mov
clc
sub
jg
in
sar
xchg
pop
out
in
and
or
cmps
sbb
push
and
xor
and
sub
call
shr
shl
and
or
mov
cmp
jne
add
mov
sbb
xchg
or
mov
push
jl
push
xchg
inc
jbe
push
cmc
push
jmp
adc
jae
mov
and
int3
pop
div
dec
into
and
cmc
and
inc
lahf
movs
mov
test
or
aas
add
sbb
(bad)
mov
jp
cmp
stos
xchg
mov
push
add
(bad)
add
fisttp
sbb
jae
and
sub
rol
in
fisubr
in
cmp
stos
cdq
pop
adc
scas
mov
add
test
pop
add
push
pop
sub
test
mov
sub
aaa
mov
call
inc
cmp
sbb
(bad)
mov
push
adc
push
mov
sti
mov
pushf
retf
pop
or
mov
inc
lds
in
adc
das
popa
sub
inc
pop
dec
add
lods
xor
leave
push
scas
scas
or
dec
jo
mov
leave
or
div
pop
sub
sbb
int3
sbb
in
xor
(bad)
cs
cmp
and
pop
sub
cmp
pop
sbb
out
mov
loope
shl
retf
inc
cmp
aaa
ja
fnsave
add
add
jmp
adc
jb
sbb
icebp
mov
aaa
sbb
and
test
or
test
cwde
mov
mov
sbb
in
mov
retf
jne
mov
popf
pop
cld
je
jl
jmp
mov
ret
mov
jbe
repnz
mov
dec
xor
cld
outs
mov
xchg
pop
or
adc
or
ins
call
sbb
sbb
popa
pop
je
shr
out
sti
xchg
sub
cs
mov
jmp
pop
mov
pop
pop
inc
push
sbb
mov
cld
test
repnz
popf
jmp
jmp
pop
jae
shl
cmp
xor
enter
xor
inc
ret
dec
pop
adc
pop
cmp
lds
cmp
pop
fs
enter
mov
inc
push
cmp
ret
or
adc
fcomip
fmul
out
(bad)
mov
sub
jne
retf
je
pusha
sub
cmp
sub
in
pushf
sti
int3
test
push
stos
pushf
scas
sub
mov
jne
pop
lds
and
loop
test
xchg
mov
sub
and
les
sub
loop
mov
push
push
push
cmp
scas
aaa
pop
and
mov
daa
sub
not
mov
fs
push
cmp
push
ins
mov
and
inc
sub
jl
and
inc
mov
mov
adc
or
pop
rol
and
jnp
ret
mov
cmp
mov
or
push
xor
mov
jno
fisub
jmp
or
inc
pop
inc
or
inc
outs
imul
mov
push
pop
pop
pop
pop
pop
enter
inc
xor
inc
push
loop
add
cmp
xor
add
jo
xor
and
mov
mov
cmp
xor
in
jne
addr16
and
sahf
das
cwde
and
jmp
add
jmp
div
sti
mov
pop
jo
fs
adc
mov
mov
pop
cmp
sti
push
test
pop
add
add
(bad)
test
cmp
adc
inc
add
and
dec
dec
or
jp
adc
jle
pop
sbb
mov
sbb
and
pop
pop
adc
or
add
pop
push
dec
jle
push
mov
and
mov
sbb
inc
push
pop
pop
fbstp
add
mov
inc
rcl
adc
dec
mov
imul
test
adc
or
test
sbb
and
xchg
xor
jecxz
cmp
jg
dec
add
sar
les
sub
xor
xlat
pop
test
pmaxub
xor
pop
adc
mov
jns
adc
cmc
lock
pop
cmp
xchg
inc
or
(bad)
xor
fmul
mov
and
mov
aaa
jnp
outs
lea
push
clc
push
dec
mov
ins
push
leave
add
and
or
addr16
mov
out
es
sbb
inc
dec
loopne
add
sbb
mov
mov
pop
add
popa
(bad)
mov
(bad)
ret
xlat
adc
(bad)
xor
rcr
jmp
mov
fdivr
fs
loope
loope
inc
or
and
fld
or
or
(bad)
jmp
push
xchg
cmp
out
les
xor
int3
push
sar
(bad)
adc
or
lock
cmc
push
pop
imul
push
mov
imul
mov
mov
mov
add
sbb
mov
jne
mov
push
daa
sbb
push
cwde
mov
push
or
inc
and
sub
sub
mov
sar
dec
mov
mov
dec
icebp
cmp
jne
repnz
das
sub
jne
sub
pop
je
es
test
imul
jge
mov
add
add
pop
cmp
movs
jl
xor
je
ret
mov
or
mov
sub
test
xor
cmp
adc
push
mov
inc
lock
fbld
dec
add
lods
loopne
rcl
ins
add
dec
and
mov
les
enter
sub
les
sub
enter
pop
xchg
mov
test
jmp
imul
sbb
(bad)
dec
mov
mov
push
add
add
and
int
xlat
pop
jg
add
jg
jg
outs
jmp
frstor
add
push
jbe
jle
sbb
cs
data16
outs
jg
jg
jo
mov
rcr
add
lods
mov
sbb
popf
xchg
ror
ret
cdq
jne
mov
sub
add
push
adc
xor
sub
adc
sub
mov
pop
push
mov
pop
jg
call
sub
lods
adc
push
(bad)
mov
ins
aam
push
call
clc
mov
sub
mov
add
sub
hlt
loopne
scas
xor
sub
push
cmp
test
inc
rcr
je
adc
or
fadd
add
cmp
aad
xor
mov
push
popa
cmps
and
js
sbb
xchg
mov
scas
add
jae
loop
hlt
jmp
mov
push
sub
push
je
fsubr
and
mov
scas
add
or
mov
inc
inc
dec
data16
(bad)
add
ret
cmp
pushf
pop
xor
out
imul
sbb
pop
in
je
push
popf
pop
cpuid
sbb
pop
call
adc
stos
ficom
aad
mov
mov
jmp
jle
inc
add
jno
ror
or
adc
or
das
cmc
or
fild
inc
mov
icebp
cmp
mov
or
in
pop
jmp
test
mov
lahf
push
jo
sub
call
xlat
fnsave
and
jl
cmp
sti
xchg
sub
es
or
adc
ror
or
jo
add
ja
nop
enter
test
stos
mov
push
test
fisttp
inc
push
add
push
lods
inc
pop
in
jmp
imul
cwde
outs
bound
ret
mov
inc
(bad)
jle
push
(bad)
pop
div
pop
jb
push
jp
aaa
cli
aas
or
dec
cmp
enter
sbb
add
inc
xchg
lea
sub
sbb
mov
stos
je
es
push
mov
or
fsubr
data16
mov
jns
test
and
call
cmp
xor
lds
inc
push
add
or
mov
dec
sbb
dec
imul
fmul
(bad)
cmps
mov
in
addr16
add
sub
jle
mov
cmp
or
hlt
sbb
fimul
mov
xor
ror
ins
inc
out
sub
push
arpl
and
pop
stos
push
cmp
aas
cmp
imul
pop
cmp
or
rcl
popa
cmp
popf
lock
stos
push
(bad)
pusha
push
in
rol
or
lahf
mov
cmp
push
loop
mov
fucomi
int
cmc
sbb
test
addr16
aam
lods
loop
dec
xlat
fcom
push
mov
inc
div
adc
fstp
push
loopne
cmp
adc
inc
and
mov
pop
mov
mov
scas
add
mov
or
and
je
mov
add
and
adc
push
and
in
mov
jge
add
lock
ficomp
mul
ds
xor
xlat
sbb
or
bound
into
shl
cdq
dec
push
rcl
out
lea
loop
stos
loopne
push
push
mov
xchg
inc
or
sub
ret
add
test
dec
inc
push
jne
lea
xor
cwde
jp
stc
movs
fwait
mov
out
mov
repnz
imul
dec
outs
in
add
pop
mov
inc
push
repnz
add
add
add
pop
sbb
adc
nop
dec
inc
or
stos
add
add
cmp
div
cmps
and
mov
mov
pop
aas
xlat
jecxz
call
jb
mov
sbb
mov
(bad)
cmp
sbb
fidiv
(bad)
sbb
ficomp
or
inc
cmp
push
aam
jmp
arpl
and
or
test
add
jmp
and
in
and
pushf
inc
xor
stos
jmp
scas
xor
sbb
or
adc
ror
ss
and
inc
push
sbb
sub
sbb
xor
cmp
add
inc
cmp
inc
adc
sbb
inc
pop
dec
dec
sbb
push
push
pop
and
pop
pusha
fs
inc
push
sbb
jo
push
sbb
jl
pop
sub
(bad)
or
jb
mov
and
les
pushf
test
dec
sub
xchg
je
add
mov
xor
enter
add
jl
xor
imul
jle
or
test
inc
xchg
or
adc
nop
in
nop
sbb
xchg
xchg
or
and
inc
dec
pop
or
or
push
lods
add
or
or
pop
out
inc
pop
pop
stos
iret
jmp
mov
cmp
jge
push
sbb
xlat
push
adc
mov
push
xchg
and
aas
aas
mov
jb
inc
cmp
add
sub
in
out
add
xor
cmp
and
push
cmc
inc
in
adc
fisttp
push
imul
sbb
shr
push
nop
pop
shl
fiadd
pop
push
add
inc
dec
sbb
mov
xor
add
fstp
pop
into
mov
ficomp
jmp
dec
add
and
push
pop
mov
push
pop
jb
lea
test
not
outs
jl
mov
inc
add
push
cmp
jne
mov
or
shr
std
jne
(bad)
es
jne
adc
aad
(bad)
mov
mov
cld
jb
jmp
loopne
aaa
fst
add
inc
or
(bad)
jmp
jbe
fdiv
cld
jmp
ins
adc
pop
jnp
movq
cmp
stc
inc
repz
imul
mov
ss
jnp
pop
test
repnz
in
cwde
pop
xchg
xor
lea
cdq
xchg
push
sbb
jl
ror
or
(bad)
or
inc
dec
repz
ret
(bad)
sub
jne
scas
xchg
rol
imul
pop
aam
inc
or
jae
movzx
mov
sub
pop
xlat
adc
(bad)
push
inc
pop
mov
add
sub
cwde
fiadd
popa
ss
push
push
and
imul
pop
push
pop
cld
add
rcr
in
or
push
add
cs
jbe
xchg
pop
cmps
and
sbb
repnz
sbb
cmp
mov
imul
sub
mov
imul
xchg
inc
pop
push
rol
clc
xchg
mov
loop
or
sbb
push
mov
ret
adc
sbb
scas
in
ffreep
xor
adc
push
mov
or
cmp
mov
adc
lea
or
inc
fcmovne
ret
pop
out
arpl
adc
push
ds
stos
mov
and
sbb
sub
js
ror
and
inc
xchg
add
es
jge
retf
add
mov
repnz
adc
jo
loopne
sahf
jae
mov
xor
cli
or
dec
jmp
push
push
mov
dec
cmp
push
xlat
in
aaa
cmp
mov
push
nop
int3
dec
xchg
push
adc
push
jp
and
shl
and
ins
dec
or
dec
adc
or
in
call
push
jae
xchg
inc
sbb
ins
adc
adc
mov
test
stos
sub
or
and
pop
push
adc
jne
into
cmp
jl
fsubr
pop
cmp
gs
stos
jmp
mov
das
push
cmp
add
scas
loopne
mov
repnz
out
aas
lods
pop
and
push
cdq
or
adc
push
xchg
add
xor
fwait
ja
push
dec
dec
leave
sbb
mov
dec
mov
stos
add
inc
push
mov
mov
inc
inc
test
dec
jne
sbb
or
jne
rcr
fdiv
in
arpl
pop
fistp
jne
sub
clc
dec
pop
mov
xor
scas
push
popf
cmp
je
mov
or
add
cdq
mov
movs
inc
movs
es
push
dec
test
loopne
or
add
stc
dec
pop
loop
and
xor
add
outs
arpl
push
je
cmp
xchg
jp
call
pushf
pop
and
xor
adc
add
hlt
jp
dec
mov
mov
je
and
arpl
xchg
test
sbb
push
adc
dec
out
xchg
test
adc
sub
sbb
jp
or
add
in
pxor
dec
test
outs
or
cmp
xor
les
repz
jo
rcl
lea
pusha
mov
mov
push
and
adc
lods
add
sub
int
(bad)
cli
jb
mov
and
inc
mov
les
loopne
push
stos
into
bnd
sub
fild
or
mov
xor
rcl
les
nop
mov
call
or
cmp
nop
lea
dec
xor
sub
dec
sbb
(bad)
mov
add
jl
add
and
arpl
mov
repnz
cmp
add
adc
mov
adc
adc
sub
or
fcmovnbe
es
pop
inc
jmp
cmp
(bad)
dec
sbb
inc
mov
movs
repz
les
and
(bad)
cmp
fwait
sub
mov
scas
lods
call
cmp
je
cmp
adc
in
jmp
adc
ss
sub
add
loopne
sbb
bound
push
add
or
not
movs
inc
pop
pop
movsx
sub
jmp
out
mov
xor
cmp
pop
fucom
inc
(bad)
sbb
jge
cmp
pop
fidiv
push
shl
push
je
add
add
and
push
and
ret
pop
push
sbb
mov
jne
cli
mov
sub
(bad)
stos
cmp
sbb
ja
or
cmp
jbe
mov
mov
ja
sub
xchg
adc
pop
jns
(bad)
aad
xor
mov
imul
pop
jb
pop
or
mov
fistp
dec
push
inc
in
mov
dec
retf
mov
aad
movs
pop
push
or
aam
mov
add
push
and
cmp
fisubr
pop
inc
adc
or
es
mov
retf
mov
cs
lock
js
cli
stos
push
pop
daa
or
push
ds
test
push
mov
cld
adc
js
dec
dec
xor
mov
gs
iret
je
fcmovu
or
jmp
mov
(bad)
mov
ss
jge
push
jg
shl
mov
inc
das
pusha
fcmovbe
int3
fs
push
mov
lods
push
cmp
push
sub
cmp
jg
jl
adc
push
dec
jne
and
ds
mov
push
sbb
cdq
add
sub
nop
daa
add
add
pop
sbb
mov
les
stos
and
dec
xchg
scas
in
dec
idiv
push
call
fstp
mov
jno
mov
pop
inc
popa
adc
shr
lock
xchg
mov
addr16
add
xchg
xor
sub
loopne
clc
xor
mov
test
mov
cmps
adc
sbb
jmp
cmp
cmp
jb
mov
mov
push
pop
ja
add
or
fild
add
fbld
cli
sar
mov
mov
in
pop
je
dec
sbb
or
ret
push
sbb
adc
push
(bad)
sbb
xor
mov
jmp
mov
jb
cmp
stos
xor
fst
xchg
jns
or
sbb
jns
mov
dec
push
sti
push
push
sub
add
test
je
mov
aam
test
mov
mov
movs
mov
outs
ja
(bad)
in
(bad)
xor
je
push
mov
sub
pop
sbb
lods
inc
sub
in
(bad)
jle
or
sub
push
sbb
inc
dec
push
add
or
call
jge
and
inc
xor
pop
jnp
aad
sbb
jmp
mov
cmp
sub
adc
add
mov
test
out
or
push
ja
or
lea
(bad)
(bad)
or
and
retf
hlt
mov
mov
mov
adc
adc
sbb
ss
or
pop
or
add
pop
sub
mov
adc
jbe
inc
add
mov
mov
jmp
ja
ins
inc
pop
add
lock
mov
loope
mov
push
call
mov
sub
shr
movs
cmp
sbb
dec
push
mov
das
add
mov
add
pop
imul
test
xchg
imul
lock
push
scas
loope
and
loope
(bad)
mov
movs
push
inc
fld
mov
sub
in
out
push
push
xchg
(bad)
jg
jl
push
dec
movsx
cmp
adc
retf
mov
jne
dec
or
dec
(bad)
das
adc
add
fsubr
inc
xor
(bad)
(bad)
jle
dec
cmp
dec
mul
fsub
inc
sub
adc
fstp
push
int3
fisttp
stos
loopne
das
dec
int
xchg
adc
mov
lock
stos
rol
or
add
jecxz
fcomp
mov
in
inc
jg
ins
pop
xor
mov
adc
dec
push
sbb
cmp
inc
mov
sbb
je
xlat
or
pcmpeqw
inc
inc
inc
mov
ret
dec
add
pusha
sar
push
cwde
add
push
push
push
or
jne
or
out
ret
inc
xchg
shr
add
ror
sbb
push
mov
idiv
mov
js
stc
into
mov
and
aaa
push
jmp
cmp
sub
jb
nop
xor
cmp
jno
inc
sbb
popf
lea
fldcw
adc
push
cmp
add
sub
fwait
das
gs
sub
ins
push
xchg
test
xor
dec
mov
jae
sub
push
push
lods
(bad)
test
dec
add
fwait
inc
xor
ja
sbb
sbb
mov
jo
or
sub
adc
clc
pusha
daa
aad
sub
cdq
push
psrad
out
jns
push
sar
cmp
lock
pop
add
or
repnz
add
sbb
(bad)
icebp
cmp
or
and
mov
dec
or
adc
daa
adc
inc
dec
call
or
add
test
dec
mov
inc
and
pop
add
inc
inc
stos
idiv
pusha
aam
mov
cmp
int3
xchg
aad
adc
add
fdiv
add
stos
and
mov
movs
mov
adc
add
mov
xor
push
ror
movs
jo
xor
inc
cmp
mov
push
adc
or
mov
gs
inc
fdivr
or
cmc
sub
dec
lds
mov
mov
test
shl
jmp
cvttps2pi
(bad)
les
and
test
xor
sbb
cmc
xchg
pop
mov
or
daa
adc
push
or
out
add
adc
loopne
and
ror
sgdtd
stos
jnp
inc
cli
pop
mov
or
stos
test
add
add
dec
add
dec
ror
xchg
add
mov
mov
int3
scas
add
sub
push
pop
inc
mov
dec
cmp
xchg
mov
sub
pop
sahf
push
(bad)
push
dec
inc
jae
xor
aam
and
inc
les
idiv
cmp
cdq
push
lea
adc
je
sub
or
sar
pop
jmp
sub
(bad)
mov
pusha
dec
adc
call
fmul
fsubr
or
jg
call
add
and
xchg
fisub
push
ficomp
enter
aam
fisub
sbb
and
dec
(bad)
jne
or
mov
and
sbb
jo
or
xchg
pop
hlt
stos
test
add
add
lea
mov
test
fisttp
sub
mov
icebp
aaa
push
add
sbb
or
adc
or
pop
fldenv
cmp
or
mov
mov
adc
push
sub
inc
mov
mov
add
add
sub
or
rcr
cmp
mov
or
sbb
lods
and
ins
adc
adc
mov
movs
gs
mov
ja
sbb
movs
jl
adc
cmp
sub
lods
movs
test
inc
ret
sbb
jmp
jnp
mov
add
lock
out
rcr
mov
shl
and
xchg
push
int3
call
ins
adc
mov
sbb
test
mov
add
imul
call
xor
cmp
adc
std
cmp
outs
pop
adc
pop
push
push
add
shl
pop
mov
outs
cwde
add
sbb
shl
adc
cmp
add
(bad)
push
les
leave
rcr
shl
mov
mov
mov
mov
mov
(bad)
sbb
mov
je
mov
push
arpl
out
push
cmp
ja
add
cmp
sbb
mov
cmp
jne
mov
(bad)
movs
or
jmp
sub
adc
pop
mov
push
lods
outs
enter
out
or
(bad)
mul
xor
cwde
inc
rol
fild
rcr
jmp
mov
add
mov
dec
mov
mov
jge
out
xchg
shl
or
jns
ror
add
add
nop
pop
adc
pop
sbb
(bad)
call
ds
adc
mov
add
mov
adc
or
scas
int
adc
loop
mov
gs
jmp
xchg
dec
add
scas
(bad)
lods
dec
popa
stc
push
mov
xor
test
outs
inc
xor
or
getsec
mov
mov
sub
retf
es
mov
fld
sbb
int
test
sbb
mov
xor
pop
(bad)
jg
push
push
inc
js
je
jb
arpl
jae
ins
add
repz
add
add
add
mov
(bad)
aaa
jge
outs
je
ins
and
sub
prefetch
or
sub
push
push
adc
add
dec
inc
jg
sti
add
inc
dec
dec
inc
adc
push
xor
xor
std
inc
outs
or
and
jo
imul
fild
push
popa
fs
popa
pop
je
gs
jo
and
ins
outs
(bad)
push
xor
jmp
jb
jb
and
arpl
arpl
or
gs
sbb
test
adc
popa
xor
mov
jae
push
sbb
ins
and
jmp
(bad)
mov
or
lods
pop
div
lahf
xor
outs
jmp
(bad)
pop
dec
fmul
leavew
ins
(bad)
in
fld
sbb
and
jne
dec
ins
sti
mov
dec
jbe
fs
imul
xchg
jp
push
das
adc
cmp
mov
mul
bound
mov
outs
cmp
jbe
xlat
jb
lahf
jae
jmp
gs
into
ins
in
mov
lods
ret
outs
pop
push
ins
ins
sub
sub
inc
sti
or
sub
arpl
sahf
sub
sub
outs
push
inc
sbb
add
dec
push
ins
sti
jl
imul
data16
sub
ins
sahf
push
and
mov
das
test
inc
jb
sti
gs
push
push
outs
or
cmp
out
adc
push
jbe
jnp
lahf
pusha
fs
xor
ins
popa
out
jbe
popa
bound
aaa
imul
aaa
jecxz
jb
dec
push
iret
inc
repnz
je
xor
mov
xor
adc
lds
leave
sub
fisubr
fistp
gs
das
pop
push
fdiv
ret
loop
xor
imul
aas
fistp
outs
test
outs
jbe
ins
xchg
add
inc
jo
jl
jmp
and
aam
(bad)
nop
ins
jbe
push
ret
mov
fild
pop
xor
mov
cs
xor
and
(bad)
ficomp
push
in
adc
cmp
push
dec
pop
dec
in
out
sbb
inc
ja
repnz
enter
xor
pop
imul
adc
out
push
or
sub
xchg
addr16
cmps
scas
addr16
push
xor
je
scas
xchg
ins
imul
test
mov
rol
mov
arpl
in
sub
cmovl
lods
sti
data16
daa
or
jo
mov
cdq
mov
adc
fbld
daa
imul
ins
jae
inc
cmps
and
sahf
cmp
cmp
add
jne
sub
imul
sub
or
push
ins
mov
adc
add
add
add
add
xor
and
push
pop
pop
or
ins
and
push
pop
pop
and
add
pusha
push
pusha
or
js
or
adc
sub
sbb
push
dec
sbb
std
jb
arpl
inc
sub
dec
fistp
stc
mov
dec
inc
dec
inc
inc
add
add
(bad)
(bad)
dec
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
call
ins
cld
sub
sub
cs
js
inc
xor
cmp
cmp
sar
std
ds
inc
inc
inc
inc
dec
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
mov
mov
pop
pop
pop
pop
pop
pop
pusha
and
or
imul
jno
jne
pop
(bad)
push
ja
jns
jnp
jge
jg
inc
outs
mov
mov
jns
adc
dec
xor
les
dec
add
add
add
pop
fcomp
shl
inc
ins
jae
pop
enter
gs
push
gs
mov
icebp
cdq
push
inc
ins
cmp
add
call
sbb
add
nop
(bad)
nop
xchg
pop
nop
add
xchg
xchg
add
xor
nop
jecxz
jp
std
and
das
push
je
pop
push
jae
dec
bound
fldenv
inc
xor
pop
scas
jmp
inc
mov
repnz
jo
jle
cwde
int
inc
mov
inc
outs
js
clc
push
fbstp
push
push
inc
push
dec
cs
dec
dec
push
ins
mov
xchg
add
inc
rcr
xchg
adc
xchg
lea
pop
daa
push
and
imul
adc
sbb
or
ss
xchg
add
pop
jo
add
mov
add
xchg
pop
inc
and
adc
sbb
test
sbb
sbb
sbb
pusha
sbb
cmp
add
xchg
sub
push
add
add
or
mov
add
add
ins
pop
cmp
push
stc
inc
add
adc
adc
add
das
fnstenv
adc
inc
rol
xchg
mov
(bad)
(bad)
dec
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
(bad)
(bad)
(bad)
dec
into
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
stos
in
(bad)
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
adc
and
xchg
stos
inc
pop
adc
ret
dec
fstp
dec
cmp
mov
scas
mov
or
add
das
nop
fnstenv
das
or
push
dec
add
push
xchg
rol
ret
outs
jbe
push
or
or
sbb
jbe
je
inc
in
jne
iret
out
xchg
fiadd
dec
xor
outs
gs
dec
xor
sbb
arpl
ficom
push
or
out
mov
addr16
push
push
fsubrp
fidivr
inc
inc
aaa
jns
aas
jae
mov
cmp
and
jb
sbb
ins
(bad)
ficomp
push
push
mov
mov
xor
or
jne
fsubr
pop
mov
jne
inc
jge
mov
daa
and
add
adc
and
adc
cmp
pushf
sbb
daa
cs
pop
mov
mov
mov
inc
mov
outs
add
or
scas
ss
sub
popa
cmp
push
cwde
gs
push
fsubrp
mov
je
dec
and
sbb
imul
out
(bad)
sbb
add
add
jne
clc
pop
push
and
push
(bad)
pop
xlat
add
das
add
add
jae
mov
pop
fs
sub
outs
movs
mov
addr16
adc
and
gs
popf
int
jnp
mov
jne
pop
popa
sbb
sub
sahf
mov
jne
out
outs
ss
bound
fs
push
fucomp
push
lea
test
popa
inc
mov
xor
inc
stos
ins
arpl
call
add
add
mov
out
addr16
jo
lahf
imul
ja
jne
stos
adc
add
outs
jne
mul
xor
pop
retf
or
test
dec
inc
les
jl
push
pop
jae
(bad)
mov
(bad)
(bad)
in
cs
inc
xor
inc
xor
xor
dec
cmp
dec
xor
push
cld
mov
and
test
and
pop
pusha
(bad)
int
(bad)
das
and
(bad)
mov
iret
add
pop
sar
add
pop
mov
sub
cmp
xchg
jae
inc
outs
xlat
mov
sub
adc
imul
and
inc
jno
pop
(bad)
or
cmp
or
and
(bad)
adc
mov
sbb
mov
cmp
pop
shr
iret
jae
ins
adc
jecxz
xor
jnp
rcl
xchg
push
push
pop
jae
pop
jne
jecxz
pop
test
push
or
xlat
jne
int3
mov
bound
outs
dec
(bad)
nop
icebp
ds
imul
imul
fst
popa
cmp
pop
inc
imul
push
jmp
nop
xor
inc
jns
jo
jb
cmps
or
popa
(bad)
idiv
or
push
ja
int
fisttp
je
pop
aaa
(bad)
out
adc
sbb
int3
fld
cmp
cmp
aaa
fisub
push
cdq
es
je
popa
push
mov
xor
xor
add
pop
sub
gs
out
dec
mov
cli
pop
f2xm1
(bad)
inc
lds
bound
inc
cdq
movs
imul
xchg
pop
in
dec
pop
sbb
fistp
xchg
mov
xchg
xchg
mov
sub
(bad)
pop
dec
mov
(bad)
push
dec
pusha
xor
push
gs
out
add
sbb
jo
bound
mov
outs
mov
ds
aam
lods
sub
and
xchg
adc
popf
cs
inc
pop
xor
or
push
aas
fnstenv
inc
addr16
sbb
enter
sbb
or
mov
test
mov
add
push
sub
xchg
or
cmp
pop
xchg
dec
dec
push
leave
test
test
mov
and
lock
(bad)
int3
imul
aas
or
mov
cdq
in
mov
or
xchg
sbb
ja
ja
jnp
pop
mov
ja
outs
mov
jnp
jo
mov
jmp
sbb
test
pop
or
mov
ret
nop
push
mov
xchg
scas
(bad)
aas
stos
mov
retf
mov
xchg
mov
lods
mov
inc
xlat
das
mov
fstp
addr16
(bad)
jge
dec
or
pop
jne
stc
add
mov
inc
add
add
into
mov
mov
mov
add
pop
mov
adc
fs
(bad)
fldcw
ret
mov
data16
xor
enter
adc
dec
shl
adc
in
imul
imul
sub
pop
mov
jo
mov
xchg
in
shl
js
jns
mov
das
pop
cld
xchg
nop
scas
jmp
add
add
call
sbb
imul
in
inc
push
or
sbb
cmp
push
cmp
xorps
mov
adc
adc
and
fs
xor
mov
push
push
xor
push
pop
mov
push
sbb
pop
jnp
pop
movs
imul
sar
add
sbb
test
xchg
sub
mov
outs
cmps
mov
into
loope
test
pop
xlat
or
pop
xor
jmp
sub
fadd
add
adc
repz
mov
mov
inc
sub
sub
dec
shr
xor
dec
xor
or
add
mov
cld
test
add
pusha
cmp
cmps
fild
sbb
stc
leave
mov
cld
inc
jle
test
into
push
and
rol
and
sub
jmp
pop
iret
mov
in
call
fucom
jle
(bad)
push
add
pop
pop
fisubr
xor
in
push
rcr
fsubp
stc
cmp
jle
out
inc
test
pop
sub
inc
pusha
xchg
push
psadbw
js
and
in
xlat
cmps
and
in
test
add
repz
and
das
pop
jmp
add
cmp
add
pop
daa
adc
or
xchg
inc
add
add
pop
cmps
mov
pop
add
and
add
cmps
imul
cmps
imul
shr
cmps
or
hlt
hlt
lock
dec
shl
fcom
je
shl
int3
enter
frstor
dec
shl
nop
xor
shl
jl
push
rcr
dec
xor
xor
sub
or
jnp
fwait
je
in
sub
pushf
sub
jg
or
test
retf
inc
cs
cmp
retf
add
add
nop
and
out
sahf
lock
xor
icebp
ins
adc
xchg
pop
xchg
loopne
pop
and
push
jae
ret
adc
push
cmp
dec
aaa
dec
pop
xchg
add
data16
add
dec
ins
add
dec
shl
xchg
mov
call
das
dec
ins
pop
xor
cmp
adc
mov
xlat
ins
pop
pusha
jo
and
sbb
adc
add
adc
xor
jle
or
adc
adc
adc
es
add
adc
adc
inc
pop
es
add
add
mov
adc
xor
mov
mov
mov
add
cmp
mov
adc
xor
pusha
add
dec
cmp
aaa
pop
push
push
mov
sub
add
dec
inc
jae
add
add
pop
and
inc
popa
shr
add
cmp
nop
add
pop
add
jae
inc
inc
add
jg
add
xor
int
dec
jne
add
pop
or
fucomp
mov
adc
xor
jae
dec
add
xor
inc
adc
cmp
inc
xor
mov
xor
pop
inc
xor
xor
pop
inc
sbb
int3
fld
cmp
xor
aaa
inc
add
pop
xor
xlat
lea
xor
popf
test
mov
inc
and
inc
aaa
mov
cdq
mov
addr16
mov
fwait
pop
in
adc
(bad)
fsubrp
adc
jne
inc
std
ins
aaa
popf
inc
xor
jmp
ss
sub
push
xor
or
jae
pop
pop
inc
inc
sub
lods
xor
sti
inc
inc
or
jnp
leave
mov
push
inc
xchg
sub
xor
rcl
push
ins
gs
ins
pusha
sti
lea
lds
jns
push
or
push
and
sbb
xchg
or
fs
adc
inc
fs
add
jno
pop
add
mov
sub
xor
pop
popa
je
or
jae
leave
cmp
(bad)
jb
cmp
pop
inc
push
sti
push
outs
ins
jne
jl
test
(bad)
mov
push
or
sub
adc
ins
ss
imul
jg
outs
outs
adc
jp
lea
mov
and
retf
jl
jne
add
and
pop
shr
adc
and
mov
mov
dec
adc
sub
js
xor
ja
je
jnp
adc
ret
xchg
jmp
fs
push
cmp
ret
inc
jns
ds
bound
xor
push
and
ins
int3
fld
xchg
push
or
sbb
js
add
push
fcmovnb
pusha
mov
or
add
inc
or
mov
and
jb
out
adc
sbb
jo
popa
dec
dec
or
arpl
inc
sub
jl
call
or
jne
jae
or
ins
pop
in
and
imul
push
push
mov
cmp
xor
outs
and
or
loope
loope
xchg
ja
sbb
mov
or
xor
inc
mov
icebp
test
jae
rcr
pop
test
lock
or
add
push
add
adc
ss
icebp
retf
pop
lss
or
push
push
retf
dec
adc
push
xchg
out
in
stos
scas
mov
dec
jae
mov
sbb
push
in
add
sub
test
pushf
jbe
out
xchg
sbb
push
imul
mov
xchg
lahf
or
and
adc
mov
dec
push
je
shl
pusha
xchg
imul
cmp
fidivr
or
sti
inc
jne
xchg
sub
jmp
imul
arpl
ins
cs
add
adc
ret
inc
pusha
dec
inc
dec
or
push
ret
ret
inc
addr16
popa
cs
mov
or
push
push
xor
add
sub
adc
bound
mov
std
push
dec
gs
or
stos
fldcw
inc
jmp
and
xchg
adc
push
test
ja
add
push
push
adc
imul
hlt
test
or
add
pop
push
mov
fwait
add
movs
outs
data16
or
mov
xchg
adc
jae
or
scas
(bad)
inc
inc
iret
outs
jns
fcom
fwait
loope
jmp
sub
push
inc
lea
dec
sub
push
fwait
dec
ins
das
push
test
xchg
xchg
push
lods
lods
xor
jp
imul
fldenv
cmp
ins
outs
inc
ja
xchg
or
fadd
dec
in
inc
popa
cs
mov
jb
xor
adc
xchg
and
mov
inc
push
adc
test
xchg
cs
add
loop
inc
ja
add
sub
aaa
cmp
dec
push
add
add
arpl
or
push
dec
imul
or
ss
cmp
mov
outs
push
jmp
sub
pop
(bad)
inc
nop
call
add
add
sbb
ror
loop
outs
fnstcw
test
sbb
xchg
add
or
das
add
push
retf
nop
mov
and
int
shr
imul
sub
jno
sub
add
push
jl
cs
sub
xchg
je
cld
ror
fldcw
or
repz
push
push
add
int3
dec
sahf
adc
adc
inc
mov
adc
sbb
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
cli
inc
add
