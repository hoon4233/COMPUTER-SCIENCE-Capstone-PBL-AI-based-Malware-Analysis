mov
pop
pop
dec
jne
int3
mov
inc
push
mov
(bad)
inc
inc
push
add
mov
xor
push
push
mov
int3
push
xor
int3
push
inc
xor
xor
xor
inc
nop
xor
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
mov
push
call
add
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
test
jne
push
call
add
call
push
push
call
add
mov
mov
lea
push
mov
push
lea
push
lea
push
lea
push
call
add
push
push
call
add
call
mov
mov
cmp
jne
inc
mov
mov
test
je
cmp
jne
cmp
jne
inc
mov
mov
test
je
cmp
ja
inc
mov
jmp
mov
lea
push
call
test
je
mov
and
jmp
mov
push
push
push
push
call
push
call
mov
push
call
jmp
mov
mov
mov
mov
push
push
call
add
ret
mov
mov
push
call
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jbe
inc
mov
jmp
nop
nop
push
mov
mov
sub
push
push
push
cmp
ja
je
cmp
ja
je
mov
dec
je
dec
jne
push
call
xor
pop
pop
pop
mov
pop
ret
mov
lea
push
push
mov
mov
call
push
call
push
mov
call
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
push
push
push
push
push
mov
push
push
push
push
push
push
push
call
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
push
lea
push
push
mov
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
push
call
test
je
push
call
push
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
lea
push
push
call
lea
push
push
mov
call
push
lea
push
push
lea
push
push
call
lea
push
push
call
xor
pop
pop
pop
mov
pop
ret
cmp
jne
mov
mov
shr
mov
cmp
je
cmp
je
mov
push
push
mov
push
push
call
pop
pop
pop
mov
pop
ret
mov
push
call
xor
pop
pop
pop
mov
pop
ret
add
xor
pop
pop
pop
mov
pop
ret
mov
sub
je
sub
je
sub
je
mov
mov
push
push
push
mov
push
call
pop
pop
pop
mov
pop
ret
mov
inc
call
xor
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
call
add
xor
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
inc
cmp
jl
pop
pop
xor
pop
mov
pop
ret
int3
int3
push
mov
mov
push
add
push
pop
pop
pop
push
mov
inc
ret
push
push
push
inc
add
inc
push
(bad)
call
inc
mov
mov
inc
push
inc
int3
push
push
inc
inc
nop
inc
inc
mov
mov
inc
inc
inc
push
push
xchg
jnp
test
xchg
or
pop
test
int3
int3
push
mov
add
push
push
push
push
call
pop
mov
fwait
cmp
push
inc
push
dec
push
inc
push
add
int3
push
inc
int3
push
inc
nop
inc
nop
int3
nop
xor
dec
nop
inc
push
add
nop
mov
push
int3
mov
push
push
mov
lods
dec
dec
dec
xor
dec
pop
jne
pop
sub
push
stos
dec
jne
mov
pop
ret
mov
int3
push
add
nop
int3
nop
mov
inc
add
add
int3
xor
inc
mov
mov
xor
nop
push
xor
push
push
xor
mov
push
add
jmp
add
int3
int3
mov
push
add
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
mov
push
mov
push
push
call
test
pop
pop
pop
push
je
xor
push
add
xor
push
add
push
xor
inc
add
inc
int3
int3
inc
inc
xor
inc
nop
inc
push
add
inc
push
inc
inc
push
int3
nop
nop
mov
dec
push
mov
push
mov
push
mov
xor
mov
mov
inc
mov
inc
cmp
jne
test
jne
jmp
xor
inc
inc
xor
inc
dec
push
inc
inc
jmp
dec
add
inc
push
mov
inc
push
mov
int3
xor
(bad)
push
mov
nop
nop
xor
nop
inc
push
mov
push
nop
inc
xor
mov
nop
xor
inc
pop
pop
mov
pop
ret
inc
pop
data16
xchg
arpl
dec
scas
mov
int3
nop
add
nop
push
nop
inc
dec
inc
inc
mov
nop
push
push
add
push
mov
push
nop
xor
add
push
inc
add
inc
nop
push
inc
mov
inc
push
int3
inc
inc
xor
nop
(bad)
call
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
xor
call
push
ret
add
int3
push
add
nop
int3
push
inc
mov
xor
inc
add
int3
nop
int3
add
push
xor
push
jmp
inc
call
push
jmp
inc
int3
push
inc
add
add
xor
int3
int3
int3
int3
int3
int3
int3
outs
arpl
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
cmps
vmovdqu
push
mov
sub
xor
xor
test
repz
add
mov
push
iret
test
pop
ss
fwait
xchg
stc
movs
imul
sub
mov
xor
mov
mov
outs
dec
bswap
rcl
push
shr
fnsave
xchg
xchg
stc
scas
jge
sbb
inc
(bad)
ror
movs
dec
rcr
mov
jmp
dec
inc
cmp
rcl
xchg
push
mov
sbb
and
mov
mov
retf
sbb
fcom
xchg
dec
lds
cld
mov
pusha
xor
call
sub
leave
imul
js
sbb
sar
add
in
inc
mov
push
iret
adc
xchg
mov
out
dec
or
sahf
inc
imul
arpl
mov
jo
sbb
ror
add
xchg
dec
lds
mov
mov
xlat
pop
dec
add
stc
dec
mov
inc
ret
pop
add
movs
imul
pushf
inc
int3
dec
xor
mov
jo
sbb
movs
jl
push
aam
inc
mov
push
mov
push
mov
ror
lock
dec
scas
xchg
push
sar
(bad)
lods
adc
add
nop
out
mov
movs
sub
into
aam
test
or
inc
pop
mov
add
xchg
call
sbb
ror
repnz
into
pop
push
leave
mov
call
dec
push
into
fcom
popf
dec
into
dec
push
iret
cmp
add
test
call
mov
push
pop
adc
repnz
aam
push
mov
pop
enter
cmp
xchg
xchg
mov
add
leave
jbe
xchg
inc
out
pop
(bad)
xor
adc
rcr
aam
dec
mov
inc
retf
test
popf
in
scas
dec
movs
sub
(bad)
inc
or
inc
pop
mov
sbb
ror
ins
mov
add
sub
mov
push
sbb
rcl
mov
leave
dec
push
iret
mov
push
push
add
(bad)
or
push
push
cmp
mov
lds
push
sub
call
out
dec
add
(bad)
ror
movs
jnp
inc
add
mov
ja
cmps
sbb
sar
aam
inc
scas
xchg
push
mov
(bad)
push
jb
inc
into
ret
ins
enter
xchg
xchg
push
cld
ret
or
dec
ss
rcl
dec
dec
add
fcomp
or
inc
pop
mov
dec
rol
mov
sub
mov
dec
xchg
sbb
retf
mov
(bad)
fnstsw
sbb
int
push
iret
pop
pop
mov
push
inc
cmp
inc
mov
sbb
inc
and
mov
xchg
xchg
mov
das
popf
add
pop
xchg
xchg
push
clc
ret
sbb
inc
cmp
(bad)
scas
jg
sbb
std
fcom
sbb
(bad)
aad
inc
cmp
ret
push
xchg
test
cli
retf
or
js
and
lea
inc
dec
ins
xchg
mov
rcl
sbb
mov
inc
andnps
pushf
stc
scas
sub
mov
xchg
push
add
sti
dec
add
jbe
xchg
mov
xchg
sbb
sbb
fisub
(bad)
or
dec
add
enter
ins
retf
pop
xchg
xchg
push
mov
pop
and
pop
ins
inc
rol
mov
pop
add
inc
mov
dec
add
iret
lds
add
iret
iret
dec
cld
ror
inc
push
mov
inc
retf
(bad)
movs
repz
or
add
inc
mov
adc
int
push
iret
pop
pop
mov
push
inc
cmp
inc
mov
cs
add
pop
mov
pop
pop
mov
push
inc
cmp
inc
mov
ss
sbb
pop
xchg
xchg
sbb
inc
inc
aad
dec
sbb
mul
mov
push
inc
xchg
mov
jecxz
adc
or
inc
rol
arpl
xchg
mov
jae
xor
mov
or
dec
and
mov
mov
xor
jbe
stc
mov
or
nop
xor
repnz
int
ss
jbe
jmp
ja
mov
mov
js
dec
push
push
add
ins
stos
mov
mov
pop
ss
jl
fisubr
inc
mov
lea
sbb
ficomp
fcom
popa
cwde
icebp
ss
xor
xor
jne
enter
sar
aad
fistp
popa
xor
aam
xchg
add
jne
ins
stos
aam
sbb
pop
jge
jmp
lahf
pusha
stos
and
jp
xor
jnp
imul
mov
push
jbe
js
les
sub
sub
or
pop
xlat
pop
mov
jbe
or
iret
sub
cmp
cmp
mov
xor
jae
ja
rcl
out
inc
mov
cli
sub
xor
ds
adc
addr16
in
daa
vmwrite
xchg
call
jnp
(bad)
mov
ret
xchg
inc
cmp
push
jl
imul
and
pop
cwde
dec
push
pop
or
lock
xlat
jnp
data16
jp
dec
fld
das
pushf
xchg
jge
inc
mov
sub
xor
scas
pop
and
out
adc
pop
jl
les
fmul
dec
lock
xor
or
in
nop
stc
mov
out
jbe
fst
mov
fisttp
shl
imul
add
push
js
movs
sub
push
xor
fwait
or
rcr
jns
push
(bad)
rcl
sbb
or
jge
fcomp
in
and
mov
xor
pop
inc
and
dec
in
cdq
pop
cmp
or
in
stos
pop
push
pusha
cwde
push
fnstsw
div
fld
rcr
pop
fdivr
repz
jno
dec
sub
xor
iret
push
mov
out
and
sub
sub
jbe
repz
dec
iret
sub
mov
shr
adc
dec
loope
imul
pop
sub
or
popf
popf
gs
(bad)
out
in
lock
mov
cmp
repz
inc
cmps
sub
fisttp
call
xchg
test
mov
sub
lock
movs
repnz
sbb
lods
mov
std
inc
sub
in
pop
jne
movs
fcmovbe
(bad)
into
out
lea
mov
jns
cmp
add
int
and
add
push
jbe
or
leave
dec
repz
in
mov
xchg
call
ss
sbb
mov
sub
test
pop
aam
nop
xchg
pop
push
add
inc
sub
in
pop
jne
xchg
pop
pop
lea
leave
add
int3
xor
cmp
stos
sub
mov
daa
enter
xchg
xchg
mov
repnz
imul
leave
add
add
aad
sbb
inc
(bad)
popf
not
inc
dec
mov
add
cmp
data16
out
xor
inc
aas
pop
imul
sub
popf
movs
fcmovbe
fsub
add
mov
imul
mov
repz
mov
cmps
mov
outs
test
js
pop
jge
xor
aas
xchg
cmps
sbb
in
stos
pop
inc
and
rcr
mov
cdq
and
out
fistp
add
jle
sbb
fnsave
icebp
lods
movs
dec
xchg
(bad)
fisttp
call
into
fiadd
push
ret
sbb
mul
test
leave
sar
repz
test
jge
xor
fisttp
or
adc
pop
sub
xchg
inc
in
leave
ret
cwde
push
pmullw
popf
fiadd
das
pop
in
push
gs
aad
imul
and
jmp
cmps
adc
test
in
ret
pop
mov
push
(bad)
stc
cdq
(bad)
xchg
jb
aad
loopne
call
retf
into
pop
xchg
sub
xor
xchg
dec
cmc
jl
cmp
jnp
jmp
ja
mov
adc
fldcw
sub
aas
xchg
je
add
sub
jp
jnp
xchg
std
sti
jmp
add
imul
fistp
xor
and
iret
sub
mov
and
xor
xor
fiadd
sbb
sub
xchg
cmc
mov
xor
push
pop
cmp
or
leave
xchg
and
xchg
pop
xlat
and
(bad)
sub
repz
and
in
out
ins
lods
int3
jns
sub
repz
cmp
mov
test
jl
iret
icebp
cmc
sub
jno
xlat
repz
cmc
pop
idiv
fstp
shl
sbb
and
out
mov
add
movs
jnp
cmp
sbb
sbb
mov
inc
sub
movs
sub
inc
jno
jb
pop
pop
xchg
xor
mul
dec
loopne
sub
in
cs
je
jge
cmp
outs
dec
sub
sbb
jmp
iret
or
scas
mov
scas
movs
(bad)
sub
add
int3
repnz
ins
sub
push
jbe
jbe
mov
in
jns
popa
pop
es
and
int
mov
out
repnz
mov
bound
in
repz
repz
stos
and
jns
ds
lods
jp
sbb
jno
stos
mov
nop
mov
sar
or
push
jb
jae
cmp
clc
mov
and
(bad)
push
jbe
jae
dec
popf
fst
rcl
mov
adc
into
out
shl
cli
stos
and
mov
push
jne
pusha
pop
out
inc
mov
and
repz
repz
xchg
sub
mov
and
inc
cs
mov
jb
sbb
shr
sub
cmps
xlat
and
stc
inc
sub
xchg
icebp
je
rcr
cmp
xlat
es
mov
in
sub
adc
pushf
rcl
xchg
sbb
in
add
cmp
js
jge
fdiv
and
movs
fcmovbe
call
leave
add
jbe
mov
cs
lods
aam
daa
xor
je
push
mov
sub
mov
pop
call
pop
xlat
mov
push
mov
cs
imul
(bad)
mov
xchg
mov
std
xlat
and
push
xlat
mov
push
sbb
fnstsw
add
mov
out
inc
mov
adc
into
out
(bad)
leave
and
pop
sub
movs
pop
call
pop
xlat
mov
add
shl
inc
outs
enter
mov
aad
into
out
mov
into
stos
jns
add
out
outs
rol
xor
mov
into
imul
pop
jg
aam
mov
dec
nop
mov
mov
adc
je
and
pop
jg
out
jl
iret
jns
pop
sub
xor
push
icebp
add
xchg
rcl
and
scas
cmps
add
jle
and
sbb
xchg
std
mov
pop
cmp
cmps
(bad)
dec
aam
retf
cs
xor
sub
adc
fidivr
push
xchg
xor
xor
sub
pusha
test
xchg
dec
sub
inc
sub
jae
es
mov
ror
sub
cmc
rcl
xchg
scas
out
xor
xor
and
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
popf
jmp
icebp
retf
jmp
int3
push
mov
sub
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
call
push
push
mov
call
mov
mov
push
push
mov
mov
mov
call
lea
push
mov
call
pop
mov
pop
ret
int3
int3
int3
mov
lea
push
add
push
mov
mov
mov
jmp
nop
int3
add
xor
add
mov
mov
xor
push
push
push
inc
push
xor
int3
push
push
int3
push
int3
nop
nop
inc
push
inc
nop
add
mov
inc
push
push
nop
push
xor
push
xor
inc
add
mov
inc
add
xlat
mov
dec
je
mov
mov
inc
mov
xor
add
push
push
inc
inc
xor
inc
add
push
nop
inc
push
push
push
(bad)
dec
mov
int3
nop
inc
xor
push
int3
inc
inc
push
push
int3
int3
int3
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
and
push
mov
pop
test
jne
push
add
inc
inc
inc
add
int3
push
push
inc
push
inc
inc
add
inc
inc
push
push
nop
inc
push
jmp
xor
inc
inc
int3
inc
push
int3
push
inc
nop
inc
add
push
push
push
mov
inc
xor
inc
push
inc
int3
push
inc
adc
xchg
jns
xchg
mov
mov
movzx
push
push
add
push
add
pop
cmp
jne
mov
mov
add
mov
mov
add
mov
mov
mov
dec
inc
inc
mov
and
jne
mov
inc
mov
mov
cmp
jbe
mov
dec
mov
xor
add
jmp
nop
nop
nop
nop
nop
nop
nop
inc
mov
inc
and
test
jne
dec
cmp
jne
mov
add
push
push
call
test
je
add
inc
mov
cmp
jb
mov
cmp
jae
mov
add
add
mov
add
movzx
mov
lea
mov
mov
add
jmp
xor
pop
pop
pop
mov
pop
ret
inc
inc
push
add
xor
mov
mov
int3
push
xor
add
push
int3
push
int3
nop
xor
push
push
mov
push
xor
push
push
xor
inc
nop
inc
add
mov
xor
je
dec
sub
jmp
xor
mov
xor
xor
push
dec
push
push
mov
mov
xor
inc
push
push
mov
push
nop
inc
inc
add
push
jmp
push
xor
push
int3
xor
inc
mov
mov
nop
int3
call
mov
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
pop
push
push
push
mov
push
call
test
pop
pop
pop
je
add
push
xor
add
nop
inc
inc
int3
mov
inc
mov
int3
push
push
mov
int3
mov
mov
int3
push
push
push
push
push
inc
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
push
mov
push
push
push
push
call
push
push
call
push
push
push
push
mov
call
push
call
add
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
test
jne
pop
pop
pop
mov
pop
ret
mov
push
push
push
lea
push
call
test
je
mov
lea
mov
lea
push
push
push
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
pop
ret
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
