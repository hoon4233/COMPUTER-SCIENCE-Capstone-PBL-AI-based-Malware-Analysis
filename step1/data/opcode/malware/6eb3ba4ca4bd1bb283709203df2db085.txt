lahf
add
jae
popa
cmp
xchg
cmp
or
jae
push
jae
jb
jae
push
cmp
shl
rcr
jae
jb
jae
mov
cmp
or
jae
push
jae
out
jae
ret
jb
aaa
jae
mov
cmp
shl
xchg
sahf
sub
xchg
cmp
dec
cmp
xchg
cmp
add
jae
add
jae
or
cmp
shl
mov
bound
jae
dec
cmp
jne
jae
fwait
ss
ret
aaa
jae
sbb
jae
(bad)
aaa
jae
sbb
jae
sbb
jae
popf
sub
xchg
cmp
ret
mov
ret
and
fwait
ss
xchg
cmp
call
pusha
jbe
jae
inc
cmp
push
cmp
add
jae
jne
jae
fidiv
jae
xchg
cmp
call
aaa
jae
cmp
jae
jp
jae
xchg
cmp
add
jae
add
jae
imul
in
shl
xor
std
cmp
xor
cmp
cdq
cmp
ja
jae
(bad)
aaa
jae
ins
cmp
mov
jae
imul
push
xchg
cmp
imul
bnd
jae
out
cmp
xchg
cmp
(bad)
aaa
jae
xchg
cmp
fdivr
jae
add
cmp
lahf
aaa
jae
add
add
adc
xor
inc
add
add
add
inc
add
add
add
imul
std
imul
jne
inc
add
push
add
imul
imul
imul
ins
inc
add
ins
inc
add
inc
add
ins
inc
add
add
outs
inc
add
add
add
add
loop
inc
add
outs
inc
add
add
add
adc
add
add
xchg
outs
inc
add
outs
inc
add
add
add
adc
(bad)
inc
add
add
add
adc
add
jo
add
add
inc
add
inc
add
jno
add
add
add
add
(bad)
jb
add
add
add
inc
add
add
add
add
jno
add
jno
add
jb
add
add
and
adc
mov
inc
add
add
sub
add
jae
add
jae
add
add
add
add
add
add
inc
js
add
js
add
add
add
add
add
jae
add
jae
add
jae
add
je
add
je
add
inc
add
inc
add
je
add
je
add
je
add
je
add
inc
add
jne
add
jne
add
jbe
add
jbe
add
inc
add
inc
add
ja
add
ja
add
js
add
add
add
add
loope
inc
add
jns
add
add
add
inc
add
add
add
js
add
js
add
js
add
js
add
js
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
adc
or
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
jnp
add
add
fcom
inc
add
add
addr16
add
inc
add
add
jnp
add
add
add
add
add
add
(bad)
jge
add
add
add
adc
add
add
add
jl
add
inc
add
jl
add
add
add
add
add
inc
adc
add
add
add
jge
add
jge
add
jle
add
jle
add
inc
add
inc
add
jle
add
add
add
add
add
add
sbb
inc
add
movs
inc
add
add
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
inc
add
inc
add
add
add
ret
add
inc
add
add
add
add
add
test
lods
test
iret
xchg
test
add
mov
cwde
mov
lahf
mov
jmp
mov
and
add
lea
test
add
inc
add
add
inc
add
inc
add
mov
fimul
inc
add
pop
dec
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
popf
inc
add
inc
add
popf
inc
add
lahf
inc
add
lahf
inc
add
mov
inc
add
inc
add
movs
inc
add
movs
inc
add
adc
js
inc
add
add
add
adc
add
xchg
cmps
inc
add
inc
add
cmps
inc
add
inc
add
add
add
adc
push
inc
add
add
add
push
inc
add
add
aad
inc
add
cmps
inc
add
cmps
inc
add
inc
add
add
add
add
pop
push
inc
add
add
(bad)
test
add
test
add
test
add
test
add
add
add
add
adc
inc
add
stos
inc
add
add
add
add
add
inc
add
test
inc
add
test
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
pop
jp
cwde
mov
movs
inc
xchg
int
sub
dec
fild
add
add
add
add
add
sub
data16
xor
add
add
int3
xor
add
inc
pop
dec
pushf
shl
mov
or
jmp
pop
push
shr
cmp
xor
or
stos
add
xchg
inc
add
add
add
add
add
ins
xor
or
outs
jb
xor
sbb
add
and
(bad)
(bad)
jmp
ins
xor
xor
pop
add
add
add
jno
add
inc
add
add
add
add
add
loopne
inc
add
add
add
add
add
inc
add
add
add
pop
inc
add
add
add
inc
add
add
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
rol
add
add
sbb
cmp
inc
add
add
and
and
add
and
add
inc
xor
add
or
or
add
pop
inc
add
lock
add
(bad)
dec
add
add
add
add
add
add
add
add
sbb
js
inc
add
sbb
js
add
jge
add
test
add
test
add
jo
imul
jne
add
jns
push
data16
push
add
add
inc
pop
dec
pushf
shl
mov
add
add
adc
add
pushf
add
add
add
add
inc
add
add
add
inc
sbb
ss
mov
cwde
fist
add
add
add
add
add
add
add
add
inc
add
add
cmp
add
rol
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
sbb
mov
mov
add
add
sbb
mov
mov
add
add
sbb
mov
mov
add
add
and
xchg
add
pusha
and
jne
scas
lahf
movs
or
jns
xchg
cdq
push
cmp
add
and
add
inc
cmp
add
add
loop
inc
scas
and
aas
and
shl
jge
jo
mov
arpl
mov
popw
push
and
add
add
inc
pop
push
dec
pop
cs
inc
pop
add
inc
ins
gs
jb
fs
imul
jne
push
imul
jne
push
imul
add
add
add
add
add
adc
inc
add
add
add
(bad)
inc
add
add
inc
add
add
add
jmp
add
clc
sbb
add
add
add
gs
add
add
add
sbb
add
add
add
sbb
add
cld
sbb
add
add
add
sbb
mov
push
sbb
inc
add
add
add
sub
add
inc
add
pop
add
add
push
push
inc
add
(bad)
(bad)
inc
add
add
add
add
mov
(bad)
(bad)
(bad)
dec
sbb
add
add
inc
add
sbb
fcomp
inc
add
sbb
rcr
add
add
add
jno
add
add
add
add
add
and
add
add
adc
inc
add
(bad)
(bad)
inc
add
add
and
or
inc
add
add
add
add
add
inc
add
add
add
gs
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
push
inc
add
les
add
add
xchg
xor
inc
add
gs
add
or
xor
add
add
inc
add
add
add
push
inc
add
mov
add
add
inc
add
add
add
add
inc
add
add
add
inc
add
mov
add
add
inc
add
add
add
push
push
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
mov
(bad)
(bad)
(bad)
inc
add
add
inc
add
sbb
inc
add
sbb
ficomp
inc
add
inc
add
sbb
inc
add
sbb
ficomp
inc
add
sbb
inc
add
sbb
ficomp
inc
add
add
add
and
add
add
pusha
imul
rcl
add
or
inc
add
push
inc
add
rol
add
add
sbb
push
add
add
add
add
rol
push
(bad)
inc
add
add
rol
xor
sub
icebp
xchg
outs
cmc
mov
inc
or
add
add
add
and
adc
inc
add
add
add
add
add
add
add
add
add
sbb
(bad)
(bad)
(bad)
(bad)
cmp
add
inc
add
rol
rol
and
push
add
add
add
add
add
add
add
add
add
sbb
(bad)
(bad)
(bad)
(bad)
mov
and
add
add
hlt
and
(bad)
inc
add
add
add
sbb
(bad)
(bad)
mov
add
add
and
add
add
enter
(bad)
inc
add
add
add
add
add
ins
outs
outs
fs
inc
outs
jb
xor
add
inc
outs
jb
xor
add
jns
push
data16
add
add
mov
add
and
inc
inc
add
add
nop
add
and
add
cwde
add
and
call
test
test
add
push
add
add
add
add
add
add
add
add
add
or
add
add
inc
add
and
add
dec
add
and
add
cwde
add
and
add
add
add
add
xchg
add
add
add
add
add
add
add
add
or
and
add
and
add
and
add
or
add
add
add
cmp
lock
lock
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
inc
add
add
add
add
lods
sub
add
add
add
xchg
or
add
bound
add
add
add
add
add
add
add
add
add
or
add
xor
test
add
add
add
add
add
add
add
xchg
add
add
pop
add
add
add
add
add
add
add
add
fadd
add
add
fadd
add
add
add
adc
test
jae
bound
add
add
add
add
add
add
add
add
add
add
add
sbb
je
add
jns
or
(bad)
(bad)
jns
sbb
lods
or
and
add
and
add
(bad)
call
or
and
loopne
push
or
and
add
push
pop
or
push
add
add
add
fwait
add
add
add
add
add
add
dec
test
(bad)
jmp
or
and
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
or
add
in
test
add
adc
and
add
add
add
add
add
add
add
add
add
add
jl
add
xor
sbb
mov
add
add
add
add
xchg
add
add
add
add
push
add
add
add
jbe
add
sub
add
add
add
cmp
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
test
add
add
add
(bad)
jmp
add
add
add
add
add
adc
add
or
add
inc
add
add
add
add
add
push
add
add
mov
xchg
add
add
mov
add
add
add
or
outs
jbe
add
add
add
or
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
and
call
and
add
or
and
add
add
add
xchg
add
add
fadd
add
pop
add
add
add
add
add
or
push
or
and
add
add
add
add
add
add
add
add
or
add
add
test
sbb
add
add
add
sbb
or
(bad)
call
add
add
test
add
inc
push
or
or
add
xchg
add
add
add
add
add
inc
add
add
add
add
or
add
inc
or
or
add
inc
or
and
add
add
xor
add
add
add
add
add
add
add
add
add
add
or
add
call
and
add
adc
adc
and
add
adc
and
add
add
add
xchg
add
add
add
add
add
add
add
adc
in
adc
and
adc
xchg
add
add
pop
add
add
add
add
add
add
or
add
or
sbb
and
add
push
add
inc
add
add
add
pusha
sub
inc
or
inc
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
sub
push
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
test
add
add
call
add
add
add
xor
add
or
add
and
add
sub
add
add
add
add
add
add
xchg
add
add
mov
add
add
add
or
add
or
je
add
add
je
add
adc
dec
add
add
add
sub
add
add
add
add
add
add
add
adc
add
sbb
or
popa
jae
add
add
mov
inc
inc
loop
sub
add
xchg
add
add
pop
add
add
add
add
add
sub
test
jns
or
and
jae
sub
add
add
or
add
add
add
or
add
test
xor
mov
and
xor
xor
add
xchg
add
add
add
add
add
add
add
add
adc
sub
sub
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
test
sbb
das
or
add
add
add
xchg
add
add
aaa
add
add
add
add
add
add
sub
cmp
add
or
cmp
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
test
sbb
test
add
dec
or
add
add
xchg
add
add
je
add
cmp
add
or
add
aam
test
and
add
add
add
add
add
add
xchg
add
add
mov
add
sub
add
or
add
sub
test
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
or
add
sub
add
xor
test
add
add
add
add
add
add
add
xchg
add
add
icebp
add
add
add
add
add
add
adc
add
add
adc
add
inc
add
add
cmp
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
and
or
or
add
adc
adc
add
add
adc
add
add
add
or
add
add
add
add
add
add
adc
pop
push
add
pusha
push
or
and
pusha
push
test
or
pop
or
or
add
pusha
or
and
add
adc
add
xchg
add
add
add
add
add
add
add
add
call
add
and
add
add
and
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
xchg
add
add
jae
add
cmp
add
or
add
cmp
xor
add
add
xor
add
fs
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
rol
add
inc
add
add
add
push
add
add
test
sbb
or
add
sbb
leave
add
add
add
add
add
add
add
or
add
pop
or
add
scas
add
add
add
add
add
add
inc
(bad)
sub
add
add
add
add
add
mov
or
and
ror
add
and
add
or
sub
add
adc
or
add
add
or
add
add
add
inc
add
and
add
add
and
lock
add
add
add
ror
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
push
or
and
add
and
in
add
xchg
add
add
add
add
add
add
add
and
add
add
aaa
add
or
nop
aaa
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
or
das
or
add
add
add
xchg
add
add
lock
add
add
or
add
pushf
sbb
add
add
add
add
add
add
add
add
add
add
add
sbb
cld
push
or
add
rcr
pop
test
xchg
add
push
add
add
add
add
add
xchg
add
add
ins
add
add
add
add
add
add
add
and
and
and
add
add
add
xchg
add
add
into
add
add
add
add
add
add
das
or
add
mov
hlt
das
or
or
mov
and
shr
xor
das
or
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
adc
add
add
add
or
je
add
add
je
add
or
js
add
add
js
add
jmp
add
sbb
add
adc
or
sbb
adc
sti
add
push
or
or
or
adc
test
add
adc
add
push
mov
add
xchg
add
add
pop
add
add
add
add
or
or
jl
or
and
add
test
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sbb
and
add
sbb
adc
and
add
add
add
add
add
add
add
add
add
and
and
add
sbb
cwde
and
and
add
sbb
add
xor
add
xor
add
cmp
mov
add
add
mov
add
mov
push
test
sbb
adc
add
sbb
leave
add
add
add
add
add
or
add
adc
or
add
add
or
add
add
add
cmp
or
add
add
pop
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
jo
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
call
sbb
add
add
add
push
add
push
add
add
add
add
add
les
or
(bad)
inc
add
add
add
and
add
add
add
pusha
and
add
add
or
(bad)
inc
add
add
add
and
and
add
add
add
xchg
add
add
add
add
add
xchg
add
add
and
or
add
add
add
add
add
add
add
or
or
add
add
xor
add
xchg
add
add
add
add
add
add
add
add
adc
add
mov
add
add
xchg
add
add
add
add
add
add
add
add
add
push
add
and
ins
adc
add
jl
cld
push
or
add
adc
add
test
sub
loopne
test
add
add
mov
add
add
adc
pusha
sbb
pop
or
add
dec
push
add
test
add
mov
add
test
add
xchg
add
add
add
add
add
add
and
add
and
mov
or
add
add
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
or
sbb
and
add
pop
add
fs
sub
add
add
sub
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
sbb
and
add
add
add
add
add
add
add
add
add
add
sub
add
fiadd
or
sbb
fiadd
dec
add
add
add
add
add
hlt
push
test
sbb
fiadd
add
sbb
leave
add
add
add
add
add
add
add
or
add
movs
sgdtd
test
or
add
test
inc
test
add
xchg
add
and
add
and
add
add
rcl
adc
les
or
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
add
and
loop
sub
add
xchg
add
add
add
add
add
add
xchg
or
pop
add
jo
jae
sub
add
add
jle
add
add
add
or
add
add
adc
add
les
add
add
add
adc
add
and
add
pushf
or
add
add
add
xchg
add
add
pop
add
add
add
or
nop
add
add
add
add
or
add
add
add
add
add
sahf
add
add
cmp
or
add
or
and
push
adc
add
test
add
dec
adc
and
add
add
xchg
add
add
pop
add
add
add
and
and
mov
add
ja
jae
pop
add
add
add
add
add
add
sbb
test
add
sub
and
imul
xchg
add
add
adc
add
add
add
or
adc
add
adc
call
add
sub
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
push
test
sbb
test
add
data16
and
add
add
add
add
add
add
or
add
call
adc
add
add
add
add
xchg
add
add
add
add
add
or
add
(bad)
or
cmp
push
add
add
test
xchg
add
push
add
xchg
add
add
push
add
add
add
add
add
add
mov
or
or
or
je
add
xchg
add
add
add
add
add
add
add
add
add
sub
mov
and
add
add
lods
sub
add
or
add
xor
cmp
push
push
add
add
push
push
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
or
sbb
and
add
add
add
add
add
add
add
test
add
add
add
or
add
add
add
xchg
add
add
push
add
add
add
add
add
add
test
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
jle
add
push
add
add
add
add
add
xor
add
add
add
add
add
push
pop
push
adc
add
add
add
add
add
add
add
or
add
adc
and
add
and
adc
les
and
and
add
add
add
add
add
and
add
inc
fild
add
xchg
add
add
or
add
add
add
or
jo
mov
test
or
fdiv
add
xchg
add
add
add
add
add
call
and
add
pusha
loopne
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
and
adc
into
add
add
push
add
pop
add
add
add
add
add
or
pop
add
or
and
xor
add
test
jae
cmp
or
xchg
add
add
add
xchg
add
add
add
add
add
add
adc
and
add
adc
and
adc
add
pop
add
add
ins
pop
add
cwde
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
or
add
add
xchg
add
add
imul
add
or
add
cmp
pusha
add
add
add
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
mov
add
xor
add
inc
add
add
rol
add
add
add
add
add
add
add
mov
add
add
mov
add
adc
add
and
test
and
adc
add
mov
add
add
add
add
or
add
inc
add
and
add
add
sbb
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
adc
push
add
add
adc
add
add
sub
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
push
test
sbb
test
add
data16
and
add
add
add
add
add
add
add
add
add
or
and
dec
fild
add
fiadd
and
add
int3
push
add
add
or
(bad)
inc
add
add
and
inc
add
add
add
and
dec
or
jo
adc
xchg
add
add
out
add
add
add
add
and
and
or
or
in
sub
add
add
in
add
or
cld
add
add
add
dec
add
or
and
add
fimul
or
and
mov
add
xchg
add
add
add
add
add
add
add
adc
and
push
sbb
adc
and
add
add
add
add
add
add
add
add
add
jl
add
add
add
add
or
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
test
sbb
test
add
data16
and
add
add
add
add
add
add
add
add
sbb
add
add
sbb
or
add
inc
pop
add
mov
add
add
xor
adc
and
dec
adc
jp
or
add
and
jl
or
add
and
jle
test
(bad)
jmp
or
jo
adc
xchg
add
add
add
add
adc
add
adc
and
movs
push
or
add
dec
push
add
adc
push
or
add
add
add
sub
add
sub
add
pop
add
sub
add
add
add
or
or
mov
add
push
or
or
jo
fadd
add
add
js
in
push
test
or
adc
add
xchg
add
add
add
add
add
add
or
add
clc
push
or
or
xchg
or
ud2
and
add
or
mov
add
add
int
add
add
add
add
add
add
add
add
test
add
hlt
push
or
add
add
or
add
xchg
add
add
add
add
add
add
add
test
add
cli
adc
add
add
add
xchg
add
add
add
add
add
add
add
push
sbb
add
or
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
inc
sbb
add
add
add
xchg
add
add
adc
add
push
add
add
add
add
sub
and
add
cmp
add
add
cmp
or
and
inc
ret
add
adc
and
add
fcom
or
add
adc
ficom
test
(bad)
call
ud2
and
adc
xchg
add
add
add
add
add
add
hlt
push
or
add
xor
add
add
add
(bad)
xor
cmp
add
add
test
mov
add
add
add
add
add
add
add
or
add
cwde
add
cwde
add
test
test
jo
add
test
mov
add
add
add
add
add
add
add
add
ror
adc
and
add
sets
test
pop
add
xchg
add
add
add
xchg
add
add
mov
add
add
add
and
add
movs
push
jl
test
add
test
or
add
add
add
add
xchg
add
add
fld
add
sbb
add
add
xor
sbb
and
add
test
pop
add
and
test
add
add
add
add
add
add
add
pusha
sub
and
add
or
xchg
sub
or
or
pushf
sub
test
add
movs
sub
and
xor
add
add
add
add
add
pop
inc
add
inc
add
add
jl
inc
add
or
je
jmp
push
mov
call
jmp
add
add
in
add
push
add
adc
add
or
(bad)
inc
add
add
add
add
add
and
in
les
test
(bad)
(bad)
call
add
mov
xchg
add
xchg
add
add
rol
add
add
add
add
les
add
add
call
and
add
sldt
or
inc
add
add
add
add
add
add
add
fcomp
add
cld
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
jo
add
add
movs
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
enter
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
cld
add
add
add
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
test
mov
add
add
add
mov
add
add
xchg
add
add
mov
add
cmp
add
or
add
adc
les
add
add
add
sub
add
add
cmp
push
add
xor
push
inc
add
cwde
add
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
test
mov
add
add
add
mov
add
add
xchg
add
add
pop
add
add
add
or
add
enter
fsubr
test
fild
add
add
or
add
add
add
xchg
add
add
sbb
add
aas
add
add
add
add
add
add
add
add
or
(bad)
inc
add
add
test
or
and
or
or
add
in
add
xchg
add
add
cmp
add
add
add
add
or
sub
or
or
or
add
adc
cmp
dec
or
add
add
add
add
add
add
or
add
and
dec
add
sub
add
sub
push
add
xor
add
xor
add
xor
add
xchg
mov
add
sbb
test
test
or
or
inc
pop
add
test
add
dec
pop
or
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
push
or
or
and
jae
sub
add
add
rol
add
add
add
or
add
fcomp
pushf
sbb
and
add
sbb
add
add
adc
add
add
(bad)
cmp
add
add
or
xor
inc
add
ins
cmp
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
or
add
pop
pop
test
fild
add
add
or
add
add
add
xchg
add
add
add
add
add
add
add
add
or
add
pusha
and
test
add
pushf
add
add
add
add
add
xchg
add
add
xor
add
add
add
or
add
mov
add
add
add
add
add
add
xchg
add
add
movs
add
add
add
add
or
or
cld
cmp
test
add
add
or
add
add
add
add
xchg
add
add
add
add
add
adc
add
cwde
or
add
pusha
cmp
add
bound
or
fs
adc
add
add
adc
add
aam
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
add
test
mov
add
or
add
add
xchg
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
or
add
inc
or
inc
or
adc
rcl
add
add
adc
or
or
add
add
add
add
movs
and
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
push
test
mov
add
add
add
add
add
add
add
add
or
add
bound
and
xor
or
add
dec
sbb
or
dec
sbb
add
push
or
add
add
add
pop
add
add
add
add
pop
add
or
cmp
and
add
add
cmp
xor
test
add
dec
push
add
add
add
add
add
xchg
add
add
adc
add
add
add
add
add
add
test
add
mov
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
push
or
mov
push
daa
add
test
add
dec
or
and
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
or
and
push
or
and
add
or
and
add
add
inc
add
and
and
add
mov
sbb
add
mov
add
add
add
add
add
add
or
add
int3
and
add
add
and
pusha
and
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
or
add
xor
xor
or
add
inc
or
or
and
add
add
add
add
xchg
add
add
movs
add
add
add
add
add
cwde
push
test
sub
sub
or
or
sub
add
add
xchg
add
add
add
add
sbb
add
add
and
je
or
or
or
pop
or
or
adc
pop
add
dec
push
sbb
pop
test
add
sbb
or
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
xor
add
or
jl
add
add
add
sub
test
mov
add
add
add
add
add
add
add
or
add
cwde
sgdtd
pushf
sgdtd
mov
or
test
mov
mov
and
or
add
ins
adc
or
add
jo
sub
or
or
je
add
fs
and
add
add
and
sub
or
inc
add
add
add
add
add
add
add
add
add
or
add
pushf
push
test
mov
add
or
add
add
xchg
add
add
jnp
add
add
add
or
iret
add
test
add
add
test
add
sbb
add
inc
gs
ins
fs
inc
jbe
outs
je
outs
addr16
arpl
fs
add
nop
es
sbb
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
test
test
mov
add
or
add
add
xchg
add
add
cmp
add
add
add
or
iret
add
or
call
add
sbb
and
inc
mov
enter
add
or
add
add
add
xchg
add
add
mov
add
add
add
add
cwde
pop
or
add
add
add
add
add
add
pusha
add
add
add
add
add
sbb
add
add
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
test
mov
add
or
add
add
xchg
add
add
loopne
add
add
add
or
iret
add
sbb
add
add
sbb
add
jl
add
dec
and
add
mov
add
add
add
add
add
add
add
add
add
xor
add
adc
add
add
adc
add
dec
add
add
add
int3
add
add
add
or
or
mov
add
test
add
mov
or
pop
add
add
add
add
add
add
add
add
pop
add
and
add
add
add
add
pushf
push
add
dec
add
add
add
add
sbb
add
push
add
inc
add
add
add
add
add
add
add
add
add
or
add
call
pop
test
add
push
or
add
add
add
add
add
cmps
add
add
add
add
add
add
call
add
add
hlt
adc
and
push
adc
add
cmp
pusha
push
add
add
pusha
push
add
and
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
enter
add
sub
add
call
push
or
mov
add
or
pop
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
test
mov
add
add
add
add
add
add
add
add
rcl
add
fs
cmp
push
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
or
mov
add
adc
and
movs
adc
test
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
int3
or
add
add
or
push
add
add
and
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
or
add
add
adc
add
movs
adc
add
add
test
add
add
add
or
add
sbb
push
add
push
add
xchg
push
or
mov
add
add
add
add
add
add
add
mov
or
and
add
adc
and
add
jns
ror
test
gs
or
and
add
add
xchg
add
add
add
add
xor
add
add
adc
push
adc
ud2
and
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
or
lods
or
cmp
add
add
add
and
add
add
add
add
add
add
add
or
add
lock
lock
add
mov
xor
jl
test
add
cmp
or
or
add
jo
add
xchg
add
add
add
add
add
add
xadd
and
add
or
and
add
les
and
add
and
mov
or
add
add
add
add
xchg
add
add
add
add
add
add
add
add
and
add
or
movs
or
add
add
add
add
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
or
inc
adc
adc
add
movs
adc
add
add
sub
add
add
add
or
add
lock
add
add
add
add
and
add
add
add
add
add
add
add
or
adc
call
or
cmp
in
es
add
and
movs
sub
sub
and
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
or
add
add
add
push
add
and
add
add
add
add
add
add
add
add
or
add
js
add
mov
add
xchg
add
add
jo
add
pop
add
add
add
add
push
test
add
or
add
add
add
add
add
xchg
add
add
jns
add
inc
add
add
add
add
add
sbb
add
add
sbb
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
lods
sldt
add
lods
(bad)
sub
add
add
add
add
add
add
add
add
add
add
or
add
ins
add
sub
add
cld
sub
sub
add
xor
test
sbb
add
add
add
add
add
add
add
or
add
loopne
add
lock
add
add
add
mov
add
xchg
add
add
add
add
add
add
or
add
je
cld
cmp
add
cmp
add
and
inc
loope
mov
add
add
call
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
mov
or
add
rol
jae
aam
or
xchg
add
add
add
xchg
add
add
add
add
add
add
add
sbb
and
add
and
add
xor
add
xchg
add
add
pop
add
add
add
add
add
add
int3
sbb
and
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
push
add
add
add
(bad)
mov
(bad)
fldenv
movs
add
or
add
and
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
cmp
and
add
adc
int3
or
add
add
or
in
add
add
add
add
add
add
or
(bad)
inc
add
and
rol
add
add
and
(bad)
(bad)
jmp
add
add
add
add
add
add
pushf
or
and
add
pop
movs
or
and
add
pop
test
or
add
call
and
add
pop
scas
or
pop
or
add
add
add
add
xchg
add
add
add
add
add
add
add
call
and
add
or
and
add
add
mov
add
xchg
add
add
push
sbb
sub
add
inc
add
add
add
add
add
add
add
add
add
add
and
add
add
adc
add
add
xchg
add
add
pop
add
add
add
add
add
add
adc
add
adc
add
add
or
add
add
add
xchg
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xor
add
push
add
cmp
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
or
add
add
xchg
add
add
xor
add
add
add
or
add
push
sbb
fild
es
and
add
sub
and
add
xor
and
add
add
cmp
xor
or
stos
add
xchg
sub
mov
add
or
cmp
add
inc
add
add
add
add
add
add
add
add
add
add
add
and
and
add
and
add
and
add
add
mov
js
or
add
mov
and
add
add
add
add
xchg
add
add
sbb
add
add
add
add
adc
and
and
or
push
and
add
test
add
xchg
add
add
add
add
add
add
add
add
add
adc
and
test
or
adc
or
je
add
xchg
add
add
add
add
add
add
add
or
jo
or
or
mov
js
test
fsubr
lods
sub
add
add
xchg
add
add
iret
add
add
add
add
add
add
add
cld
or
add
cmp
add
add
test
mov
add
add
mov
xchg
add
add
adc
add
add
add
or
outs
jbe
or
and
mov
clc
or
and
mov
add
and
add
add
or
(bad)
inc
add
fadd
or
or
ins
add
add
add
and
(bad)
(bad)
jmp
add
add
add
add
add
add
add
and
add
test
or
or
sbb
add
adc
dec
or
add
add
or
add
add
add
add
add
add
or
adc
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
adc
add
add
or
add
add
xchg
add
add
push
add
add
add
add
add
add
test
add
or
add
add
add
xchg
add
add
add
add
add
add
or
cmp
mov
test
jl
inc
or
add
add
xchg
add
add
sbb
add
adc
add
or
add
clc
sub
add
add
inc
add
adc
add
add
adc
cmp
add
or
sbb
add
add
or
and
add
add
xchg
add
add
adc
add
push
add
add
add
add
add
add
add
xor
add
rol
add
add
test
add
add
add
add
test
sbb
add
add
add
add
add
add
add
add
add
add
test
lock
add
add
add
mov
add
xchg
add
add
in
add
add
add
or
add
movs
or
or
add
add
add
add
add
xchg
add
add
inc
add
add
add
or
add
push
add
add
gs
ins
outs
jae
inc
outs
jne
add
add
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
and
js
add
or
enter
adc
or
(bad)
call
scas
add
test
or
ret
and
and
in
add
xchg
add
add
add
add
push
add
add
add
add
or
and
add
add
test
add
adc
add
add
mov
add
add
add
or
add
lock
or
add
inc
adc
push
or
add
inc
adc
push
or
add
inc
adc
push
test
add
dec
adc
and
and
add
add
add
add
cmp
add
pop
add
add
add
add
test
add
mov
and
(bad)
in
adc
add
add
add
add
add
add
add
add
or
add
test
and
add
and
add
push
add
xchg
add
add
add
add
add
add
jb
or
add
ret
pop
or
add
les
add
add
add
add
sub
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
js
add
push
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
or
add
adc
add
xor
test
add
jo
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
jb
fs
ins
add
inc
cmp
add
add
add
and
call
jnp
push
push
test
or
fadd
and
and
in
add
xchg
add
add
test
add
aaa
add
add
add
add
adc
and
add
hlt
adc
and
add
and
add
add
add
add
or
inc
adc
and
and
add
add
nop
and
and
add
xor
add
xchg
add
add
mov
add
xor
add
add
sub
and
add
daa
sbb
and
add
sub
and
add
sub
and
add
sub
add
sub
and
and
add
add
add
add
inc
add
add
add
dec
xor
add
mov
inc
add
add
add
add
add
add
add
add
cmp
and
add
add
lods
adc
sbb
add
add
sbb
add
or
add
outs
add
add
add
or
(bad)
push
test
or
js
or
or
add
in
add
xchg
add
add
add
add
add
or
push
pop
test
add
nop
adc
and
adc
add
add
add
add
add
add
add
add
add
fmul
add
add
or
sub
add
add
add
or
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
push
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
sbb
add
add
sbb
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
or
aam
add
push
add
add
or
add
add
test
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
(bad)
add
add
add
add
add
add
add
sbb
add
add
cmp
add
and
dec
add
and
add
add
in
add
xchg
add
add
jecxz
add
add
add
add
or
call
add
add
and
or
and
add
add
add
add
add
add
add
add
add
sbb
sub
test
nop
and
add
data16
add
add
xchg
add
add
ins
add
add
add
add
add
sub
sbb
sbb
and
and
add
sub
add
add
add
add
add
add
dec
and
sbb
and
pop
sbb
or
add
pusha
sbb
sbb
and
add
and
add
dec
inc
add
add
mov
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
adc
add
inc
gs
js
je
outs
fs
push
add
add
pop
inc
add
pop
inc
add
add
xchg
les
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
dec
xor
add
add
add
add
jb
popa
ins
imul
arpl
pop
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
push
inc
push
dec
xor
add
add
add
add
jb
je
add
enter
fcomp
add
add
lods
les
mov
or
je
jmp
push
mov
call
jmp
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
add
or
add
add
add
add
add
add
add
add
add
and
in
add
xchg
add
add
inc
add
add
add
add
add
add
add
or
add
add
pop
add
and
add
add
add
add
add
add
add
add
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
jb
add
push
sbb
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
push
popa
jb
gs
add
add
inc
outs
jb
add
add
loope
mov
gs
shl
add
push
sub
sbb
jb
or
sub
push
jp
call
jmp
scas
rcr
xchg
add
sbb
cmc
jle
cmps
adc
pop
mov
into
pop
movs
retf
xchg
cmps
sub
push
daa
jle
adc
aaa
push
inc
movs
xchg
dec
or
fwait
inc
and
cmps
aam
mov
jg
jo
sbb
push
mov
ret
daa
mov
sbb
inc
jbe
mov
pusha
dec
sub
jmp
aam
sub
retf
shl
jmp
dec
rol
adc
popa
cmps
sub
or
xor
jb
xor
jmp
adc
adc
imul
inc
dec
pop
(bad)
scas
(bad)
cli
sbb
xlat
jecxz
cmp
xchg
int3
sub
stc
mov
popf
mov
mov
imul
or
mov
lea
pop
inc
jno
jge
sbb
out
leave
in
inc
test
pop
loopne
sub
fisttp
(bad)
mov
jl
sub
cmp
out
sub
mov
and
adc
cmp
mov
lock
lods
cmp
stc
mov
inc
lds
push
scas
sub
xor
cli
out
jo
push
sbb
jmp
loop
inc
or
leave
icebp
popa
jp
fld
out
xchg
and
dec
ret
or
add
outs
xchg
loope
cld
ret
aaa
sub
jo
jle
ja
mov
popa
imul
push
fsub
mov
cmp
pop
mov
adc
sahf
test
push
ins
inc
ror
inc
and
ins
mov
mov
nop
out
or
add
dec
data16
mov
pop
sub
call
stos
add
mov
sub
(bad)
xor
pop
rep
sbb
aas
jno
cmp
push
mov
(bad)
fmul
mov
add
popf
adc
fcom
dec
retf
and
sub
push
cmps
cli
in
xor
cmp
mov
imul
fmul
ror
xor
jnp
dec
push
ss
jp
xor
and
cmovns
xchg
scas
je
loopne
loopne
xchg
or
mov
in
stc
add
outs
mov
xchg
rcl
push
cmp
inc
jo
cmp
fild
push
sar
mov
pop
in
jne
xchg
inc
pop
or
ins
mov
push
aas
popf
xchg
into
scas
mov
sub
mov
xchg
pop
mov
add
pop
jl
les
adc
pop
pop
mov
xchg
fsub
in
(bad)
dec
fidivr
sbb
mov
inc
mov
jbe
popw
fldcw
add
icebp
or
mov
in
rcl
(bad)
or
cld
mov
xor
lea
fistp
and
cld
xchg
adc
inc
and
mov
adc
ja
popf
les
xlat
mov
ret
es
rol
rcl
mov
outs
adc
add
(bad)
clc
outs
pop
mov
xchg
add
add
sbb
jg
pop
mov
dec
outs
xchg
dec
or
shl
rcr
inc
and
les
loop
sub
dec
lods
cmp
xchg
cmp
sub
into
inc
push
mov
pop
data16
push
in
xor
sbb
add
xor
cli
xor
or
and
add
movs
ror
test
leave
repz
adc
out
mov
outs
push
icebp
das
pop
and
stc
cmps
ds
push
or
cmp
fnstsw
dec
xchg
mov
iret
cmps
add
mov
inc
enter
mov
sub
dec
test
mov
xchg
jne
mov
lea
mov
psubb
xor
or
adc
leave
retf
mov
mov
jbe
mov
cmc
inc
fmul
jmp
retf
mov
cmp
sub
jp
dec
call
fsubr
cmc
scas
lods
push
aas
sbb
shr
into
ret
dec
mov
push
dec
fwait
xchg
xor
or
mov
cmp
xchg
inc
clc
sub
dec
and
stos
enter
pop
xchg
shl
cmp
in
lahf
fimul
imul
push
adc
xor
pop
add
jb
inc
fisttp
xchg
xchg
fnstcw
shl
adc
jmp
jbe
jmp
sbb
xchg
and
cmp
dec
lahf
cmp
mov
or
jmp
inc
icebp
add
dec
cmp
or
dec
sbb
mov
push
js
adc
dec
pop
xchg
ret
cmp
sub
pop
popf
leave
shl
call
cs
cmp
rcl
push
retf
test
in
cmp
cmp
mov
inc
sbb
mov
aad
mov
xor
sub
push
xchg
fwait
adc
xor
repnz
sti
sub
push
push
add
cmp
mov
jo
add
xchg
dec
sbb
test
mov
scas
jle
sbb
hlt
or
hlt
std
sar
dec
sahf
dec
dec
js
cld
rcr
fdivrp
fimul
mov
mov
xchg
cmp
lahf
dec
pop
scas
mov
cmp
fcomp
xor
adc
int
loopne
sar
sbb
aaa
mov
sub
push
std
adc
jno
xchg
fadd
xchg
movs
mov
iret
xchg
mov
fadd
push
sub
dec
test
mov
aad
inc
scas
mov
inc
loop
sub
ficomp
hlt
out
inc
sar
fucomip
addr16
popa
lea
inc
push
lea
add
mov
jg
shr
retf
je
push
mov
shl
je
pop
dec
stos
push
leave
outs
loop
gs
sub
out
aas
(bad)
outs
dec
jne
leave
sub
ret
int
jo
(bad)
fld
xchg
xchg
aaa
adc
nop
daa
aad
cmp
adc
xchg
rol
lea
ret
clc
sub
mov
rcl
pop
xchg
enter
xor
icebp
jmp
mov
out
popa
cwde
fidiv
pop
xchg
push
in
(bad)
cmp
adc
push
mov
iret
icebp
inc
hlt
fisub
dec
push
loop
sub
fimul
mov
lods
rcr
or
mov
es
(bad)
jg
out
test
push
xor
fcmovnu
dec
dec
fldcw
or
jo
nop
in
dec
(bad)
addr16
lea
movs
sahf
stos
int3
or
rol
(bad)
jno
dec
or
sbb
call
cmp
je
adc
(bad)
movs
xchg
mov
mov
adc
fdivr
sahf
ja
je
adc
dec
inc
cmp
ror
enter
dec
and
addr16
sub
xchg
add
fs
lahf
dec
xchg
dec
mov
(bad)
mov
lock
mov
pop
xchg
lahf
dec
add
popa
xchg
movs
inc
js
pusha
fdivrp
adc
pop
xchg
xchg
loopne
pop
sahf
jmp
push
sub
call
test
lahf
sbb
pop
mov
cmp
das
int
shl
inc
xchg
popf
adc
sub
pop
jg
sbb
fwait
repz
and
daa
aam
dec
fbld
adc
aad
pop
xchg
push
sbb
xor
shr
nop
jo
rol
fist
pop
push
test
inc
push
mov
aaa
jle
cmove
test
sbb
jmp
jmp
jbe
fyl2xp1
mov
shl
cdq
xor
xor
sar
loopne
fst
cld
fild
mov
sbb
test
inc
cs
inc
cmp
mov
cmp
hlt
loopne
or
fbld
push
fst
xor
cmp
mov
hlt
pop
xchg
push
xor
pop
ins
pop
mov
pushf
inc
cld
add
imul
xchg
xchg
jne
adc
inc
add
cmc
std
mov
add
mov
adc
arpl
loop
mov
xor
ss
mov
inc
mov
or
xor
je
adc
scas
adc
sbb
mov
pop
mov
cs
mov
xor
repz
and
adc
mov
push
jmp
dec
and
out
sub
fcom
adc
sbb
inc
pushf
into
pop
stc
lods
sbb
jne
or
mov
inc
cld
lahf
pusha
xchg
or
and
gs
stc
adc
fild
arpl
test
stc
call
jg
mov
loop
fcomp
add
pop
arpl
mov
(bad)
ins
mov
mov
sub
sub
cld
neg
add
ss
mov
pop
fwait
or
(bad)
and
enter
or
jle
push
pop
push
or
ja
icebp
idiv
dec
and
fistp
mov
or
dec
xchg
mov
test
stc
loope
test
mov
cmp
mov
lds
adc
inc
mov
mov
jle
in
dec
pop
ds
push
out
pusha
lock
fldenv
push
std
push
stc
dec
les
inc
sub
scas
retf
xchg
pop
pop
(bad)
sbb
aas
pop
inc
fadd
gs
mov
cmps
stos
mov
adc
add
jns
xor
cmp
inc
adc
lods
scas
sbb
push
add
lods
add
pop
xor
and
lds
jle
xchg
cmps
arpl
shl
push
fcom
pop
cmp
jge
cli
or
inc
sub
xchg
jne
jo
in
rol
push
sbb
push
mov
outs
sub
xchg
dec
or
jecxz
fidiv
add
inc
shr
mov
out
jno
pop
mov
div
loope
dec
(bad)
call
mov
pop
add
fs
arpl
and
cmp
push
sbb
push
neg
fldcw
rcl
and
iret
fcmovnbe
out
jmp
jl
push
xor
aad
cdq
adc
jge
scas
inc
dec
and
test
addr16
push
pop
jp
jp
mov
sub
push
jg
cdq
and
into
(bad)
cmp
push
mov
xlat
add
and
ss
test
xchg
mov
jo
in
ja
mov
int
nop
dec
ret
mov
mov
jp
icebp
hlt
xlat
pop
loope
mov
cld
stc
sub
jl
in
int3
cld
mov
push
or
inc
sub
adc
jg
push
cmp
dec
sbb
adc
in
mov
xor
jmp
mov
test
data16
xor
inc
xor
jbe
dec
sub
pop
mov
inc
cmp
inc
cmp
mov
aaa
xor
push
aam
int
add
(bad)
cmp
and
adc
cmp
push
sub
nop
popf
mov
pop
or
cwde
pop
add
mov
pushf
cld
lock
jb
mov
push
in
repnz
xor
div
or
jecxz
cli
scas
sbb
jge
and
rcl
or
(bad)
or
enter
das
out
xor
sub
call
add
jmp
ss
push
push
jae
or
dec
or
sbb
fwait
les
test
lock
hlt
sub
fdivr
jecxz
loopne
stc
fldenv
sti
mov
push
adc
fisttp
stos
hlt
or
and
sub
pop
adc
xor
xchg
movs
adc
mov
(bad)
cmp
aaa
push
push
jns
or
cli
mov
test
iret
les
mov
dec
out
test
out
mov
aad
mov
lea
cmp
lock
stos
inc
out
jle
inc
inc
and
fs
mov
jmp
cmp
ds
cmp
sbb
stos
inc
fdiv
add
outs
popa
pop
push
lea
mov
leave
mov
sar
sbb
cld
mov
call
adc
mov
ret
push
fisub
jno
dec
cld
out
ds
nop
dec
xchg
xlat
ins
push
or
popa
pop
cmp
adc
push
pop
sbb
cmc
mov
frstor
retf
stos
jge
mov
fcmovnu
inc
mov
jns
sub
sub
inc
scas
retf
enter
xchg
loopne
push
mov
call
mov
dec
aas
jmp
cmp
or
cli
out
mov
mov
(bad)
mov
mov
xchg
(bad)
cmp
sbb
cs
test
std
lds
xchg
mov
ss
or
repz
adc
daa
mov
hlt
xchg
int3
add
mov
fild
dec
cmps
xor
inc
pop
shr
dec
xor
pop
bound
fld
shl
fld
rep
hlt
pop
sub
fist
lods
sti
scas
outs
dec
fdivr
sub
clc
ja
jno
push
sahf
push
rol
retf
add
jns
add
jmp
xchg
jno
js
sar
mov
out
mov
and
out
xchg
(bad)
mov
and
div
jo
mov
push
gs
test
mov
mov
addr16
sbb
pop
js
or
sbb
sbb
stos
or
mov
leave
dec
jmp
adc
cli
mov
mov
mov
xor
daa
sub
mov
and
or
gs
(bad)
pop
and
scas
cli
mov
loop
dec
out
jle
pop
or
mov
dec
xor
lea
add
loopne
pop
mov
sbb
adc
inc
mov
movs
pop
in
xor
xchg
es
push
adc
add
shl
nop
adc
inc
data16
lock
aaa
cwde
gs
gs
fistp
inc
and
jmp
in
jmp
sbb
pop
paddq
rcl
push
adc
jns
jmp
jne
out
or
int
loopne
adc
int3
pop
mov
iret
jmp
mov
mov
cwde
rol
or
jmp
pop
or
test
pushf
adc
or
push
sub
stc
xchg
fidivr
add
test
add
cwde
test
ins
int
or
cmp
movs
in
das
mov
push
test
cli
mov
jmp
mov
and
pop
mov
call
adc
lock
sbb
fistp
sub
push
sub
sar
daa
nop
dec
pop
js
gs
jne
and
add
test
inc
cmps
push
fs
test
pop
mov
add
and
ja
sbb
mov
push
stos
or
jae
cmp
or
in
mov
jnp
retf
or
loopne
sub
fst
jne
dec
movs
push
daa
xor
fcomp
sub
pop
movs
pop
nop
inc
inc
and
sbb
dec
pop
mov
jmp
sub
ds
adc
mov
sbb
adc
(bad)
mov
cld
dec
lods
aas
movs
into
mov
jo
sbb
fsub
mov
jb
xchg
rcl
xchg
cmp
sub
add
push
shl
jmp
xor
dec
jbe
sub
xor
(bad)
mov
mov
pop
sub
mov
cmp
aad
call
mov
adc
xchg
addr16
cmp
test
pcmpgtw
and
in
cmp
cld
and
cs
nop
test
fsubr
retf
rol
mov
mov
in
pop
jg
push
xchg
sbb
dec
mov
out
inc
aam
mov
push
fnsave
addr16
pop
jg
jno
mov
data16
dec
fsubr
or
jl
push
loop
test
xchg
or
jne
push
adc
xchg
movs
ss
pop
sub
fld
jg
dec
jle
jno
cmp
pop
pop
and
loop
fcmovnbe
int3
sahf
sar
stc
loop
stos
or
imul
adc
pop
mov
fidivr
dec
fwait
push
mov
out
sbb
jle
cmp
xchg
ficomp
push
mov
js
jecxz
push
sub
push
or
jg
pushf
jae
lea
bound
push
loop
mov
mov
jae
push
xchg
stos
lock
cmp
(bad)
adc
mov
xchg
loop
lds
mov
ds
mov
mov
pop
xchg
ins
sahf
push
(bad)
(bad)
scas
jnp
jns
leave
cli
jl
and
sub
xchg
and
inc
lahf
push
xchg
xchg
ins
adc
imul
jge
mov
mov
popf
pop
popf
mov
mov
leave
sub
push
mov
pop
ror
es
xchg
out
mov
imul
les
sub
hlt
add
es
adc
data16
in
sbb
cmp
repnz
gs
fnstsw
mov
out
mov
in
add
fsub
add
call
dec
xchg
je
in
push
lods
xchg
cmp
mov
repz
xchg
xor
xor
repnz
packssdw
adc
xchg
xchg
pushf
and
les
xlat
mov
inc
xchg
cmp
add
stc
mov
mov
std
mov
mov
inc
ret
movs
xchg
cld
rcl
sahf
or
push
push
and
jb
adc
or
dec
or
inc
out
xchg
imul
out
clc
xchg
dec
clc
mov
adc
retf
jae
push
stos
xor
in
movs
xor
js
gs
cdq
test
jp
lahf
aas
daa
dec
and
icebp
es
js
aas
dec
xlat
es
sar
popf
add
pop
ja
xchg
xchg
add
jo
(bad)
lahf
imul
mov
ins
or
sbb
iret
xchg
out
loope
cli
dec
jle
les
xor
jp
add
into
or
arpl
mov
test
pushf
xchg
call
push
(bad)
mov
lahf
lock
aad
jns
sbb
sar
pop
jg
sbb
pushw
adc
xchg
aam
movs
cmp
lods
in
mov
cdq
or
scas
adc
jb
lahf
sub
xchg
and
mov
or
loopne
stos
jns
cs
or
cmps
movs
xlat
mov
xor
mov
mov
scas
outs
dec
aas
(bad)
stc
(bad)
jns
add
test
ret
stos
jle
stos
ficom
fwait
jge
and
sbb
push
in
sbb
or
and
sti
pushf
or
inc
inc
xor
rcr
stc
cmp
ficomp
test
call
push
leave
mov
inc
or
push
dec
imul
loope
and
imul
mov
(bad)
enter
cmp
repz
add
out
gs
rcr
ficomp
scas
jne
in
mov
sbb
test
add
xor
mov
test
mov
add
hlt
jne
ret
xor
mov
push
(bad)
lods
scas
dec
sbb
jno
mov
xor
and
and
cmp
icebp
inc
push
repnz
fwait
jge
xor
dec
nop
add
loopne
mov
sub
out
clc
ja
and
xor
mov
ret
inc
adc
xchg
sbb
jns
or
imul
(bad)
shl
icebp
push
pop
jl
jnp
dec
jo
cs
push
mov
or
jb
out
mov
jp
mov
push
mov
ins
mov
adc
test
hlt
and
aaa
imul
or
sub
cmp
stos
mov
sub
jbe
loope
pushw
push
(bad)
push
or
xchg
jp
push
neg
icebp
mov
outs
add
(bad)
add
mov
adc
movs
pop
pop
mov
dec
dec
sbb
mov
mov
xchg
bound
sbb
xlat
popa
sar
mov
sbb
jecxz
int
clc
ret
int3
dec
lods
push
jl
mov
popf
leave
mov
sub
xchg
jl
fdivr
xchg
mov
fimul
in
imul
sbb
int3
bound
imul
jmp
cmps
lds
mov
sub
inc
mov
movs
ror
stos
aam
call
in
mov
(bad)
hlt
test
ss
fdivr
cld
mov
cmps
ret
(bad)
stos
popa
int3
push
jo
sbb
or
mov
cmp
loope
leave
stc
sub
ror
int
xchg
jo
stc
pop
(bad)
fiadd
retf
fmul
enter
sub
ror
shl
mov
sub
imul
or
sbb
pop
inc
sbb
call
pop
mov
lods
outs
mov
cmps
fcomp
retf
or
dec
dec
push
fwait
aam
clc
out
call
cmp
and
add
daa
or
in
mov
or
sahf
add
sub
in
(bad)
sbb
inc
push
mov
or
pushf
sub
(bad)
fimul
retf
push
mov
jns
cmp
jne
push
and
nop
dec
lods
add
cs
mov
sub
mov
jne
adc
mov
popf
test
ins
push
into
sbb
push
adc
sub
aaa
in
push
(bad)
lahf
inc
push
js
jne
xchg
retf
addr16
mov
aaa
xor
repz
and
test
sbb
xor
jp
(bad)
xor
dec
mov
retf
dec
sbb
rcl
enter
idiv
sti
popa
leave
inc
push
pop
mov
mov
mov
dec
aam
stc
lds
sub
sub
sahf
or
cmc
fld
pop
mov
or
push
add
inc
movs
hlt
test
mov
pop
dec
ds
inc
jle
inc
cli
cmp
and
sub
and
sub
jne
dec
sub
xchg
add
pop
push
test
loop
jb
cld
out
push
shl
lds
mov
pop
outs
outs
and
call
nop
loope
inc
push
movs
cli
call
inc
mov
xchg
movs
sbb
xchg
mov
cmp
cmp
es
dec
inc
fstp
cwde
push
nop
inc
test
fist
gs
sub
into
sbb
adc
mov
push
in
xchg
ins
xchg
xor
clc
xchg
in
xor
jp
xchg
mov
mov
in
(bad)
cli
jae
and
xor
enter
push
mov
cdq
sub
mov
dec
jp
jg
or
or
xor
xchg
adc
dec
mov
fidiv
mov
mov
inc
xchg
imul
ins
adc
ins
pushf
fld
mov
loop
sub
inc
js
sub
fistp
mov
add
fyl2xp1
es
stc
sbb
inc
shr
mov
repnz
sbb
fcom
push
sbb
cmp
push
(bad)
lods
repnz
mov
and
movs
inc
xchg
scas
int3
mov
xor
cdq
sub
cmp
fs
xchg
gs
fcmovnu
popa
jo
xor
or
add
push
fcmovu
sbb
xchg
and
push
adc
gs
dec
dec
sub
fsubr
mov
sub
call
mov
loope
pop
and
fisttp
mov
loopne
ds
and
popf
outs
mov
out
hlt
add
jae
jecxz
and
mov
pop
cmc
div
mov
xchg
fmul
cli
xor
sti
ins
push
sbb
mov
sbb
xor
pop
pop
mov
rcl
xor
jge
mov
es
sahf
dec
fadd
mov
clc
cmp
cwde
loope
xor
lahf
int3
shl
sbb
rcl
cmp
mov
cmc
add
repz
pop
cmps
add
mov
jge
mov
neg
addr16
cmovp
and
adc
shr
retf
fcom
jbe
sahf
neg
dec
into
xchg
mov
dec
popf
stos
mov
stos
mov
sbb
in
xchg
jb
je
dec
out
adc
sbb
scas
xor
xor
stos
cmp
and
aad
jmp
sub
cmp
mov
and
xlat
lods
mov
cmp
cmps
sub
xchg
popa
loopne
leave
iret
inc
cmp
mov
loopne
daa
adc
and
mov
inc
movs
add
movs
sub
mov
scas
add
bound
fcom
jle
div
inc
aam
jbe
test
mov
jmp
cmc
sbb
xchg
clc
aad
inc
mov
xor
jae
sbb
scas
cmp
mov
mov
ror
mov
push
jp
mov
retf
(bad)
add
jnp
mov
pop
mov
cmp
jno
push
(bad)
neg
push
jbe
sbb
inc
mov
mov
movs
shl
inc
dec
or
mov
push
cmp
pop
fucomp
and
rcr
pop
xchg
push
push
dec
jecxz
fs
js
out
int
xchg
push
fcomp
dec
loope
pop
xchg
and
xchg
push
mov
cmp
push
cmps
sbb
pusha
out
movs
scas
mov
mov
xchg
or
sub
enter
bound
fdiv
aaa
hlt
inc
cld
aam
add
xchg
sbb
mov
inc
fcomi
add
scas
lea
cld
and
inc
sbb
jno
ror
test
jae
xor
jno
mul
push
pop
jp
xor
outs
dec
jns
push
data16
jnp
int
ja
xchg
jmp
into
cmc
mov
movs
xor
or
or
sahf
inc
dec
mov
int3
ins
clc
mov
cmp
adc
pop
push
shl
bound
mov
inc
dec
add
push
mov
je
ss
jp
rol
mov
shl
imul
cmps
mov
arpl
xchg
add
add
test
enter
scas
aad
push
leave
icebp
mov
popf
outs
pop
cmp
pop
pusha
jmp
stc
and
cs
ror
xchg
sahf
ds
pop
ss
imul
(bad)
pop
retf
loopne
aaa
aam
out
(bad)
add
xchg
mov
dec
in
pandn
and
mov
data16
daa
stos
ja
fcmovnu
fcom
cli
popa
sbb
imul
dec
lahf
xchg
push
out
nop
rdtsc
in
adc
xchg
(bad)
push
sub
dec
hlt
mov
push
shr
push
sbb
mov
push
mov
add
mov
es
loop
mov
pop
sbb
out
stos
out
or
pop
mov
inc
xchg
adc
mov
xor
jmp
(bad)
sub
or
and
les
enter
xchg
cmp
in
xchg
fiadd
call
icebp
xlat
cmps
cmps
push
push
in
xchg
xchg
jg
push
dec
cmp
cmc
lock
sti
xchg
jno
jbe
jmp
mov
push
aas
mov
cmp
and
arpl
ret
div
dec
fnsave
lea
cmp
(bad)
pop
lds
pop
retf
cs
pop
push
pop
fcomp
std
mov
cld
mov
add
data16
push
lds
pop
mov
sbb
cmps
hlt
fistp
push
mov
call
(bad)
ficom
sbb
pop
xor
leave
sahf
add
test
sbb
mov
adc
adc
xchg
mov
push
hlt
rcr
out
imul
lds
adc
ret
in
imul
push
inc
out
add
lods
fsub
dec
sub
or
inc
mov
mov
pop
scas
test
stos
movs
mov
stc
dec
sub
es
addr16
xchg
dec
test
inc
jge
add
and
in
(bad)
dec
fcomp
aaa
fs
fnstcw
inc
mov
repnz
stc
popf
arpl
inc
cmc
pushf
push
mov
xchg
add
or
test
xor
mov
cmp
jl
pop
mov
cmp
mov
inc
das
loope
popf
jg
out
mov
icebp
adc
jno
arpl
xchg
fbld
add
movs
xchg
add
movd
test
cmp
mov
test
sti
fistp
inc
or
add
ret
cwde
es
pop
movs
ins
mov
pop
mov
cmp
outs
inc
js
push
cmp
pushf
(bad)
and
add
hlt
xor
adc
call
loope
ins
xchg
mov
push
and
xlat
xlat
out
pushf
inc
gs
pop
popa
popa
xor
xor
ins
push
and
xor
gs
nop
pop
bound
ins
(bad)
jmp
sub
mov
cmp
mov
mov
and
lds
pushf
test
cmp
in
nop
xlat
mov
xchg
push
stos
data16
call
inc
push
mov
cli
ret
sbb
mov
popa
ins
and
and
cs
(bad)
or
int3
enter
ins
push
imul
aam
jns
mov
push
enter
repnz
pop
push
ficomp
cmps
jb
dec
cmps
shl
and
pushf
mov
div
xor
ss
xchg
inc
jns
adc
ja
movs
mov
icebp
jns
(bad)
mov
dec
mov
(bad)
cmp
int
retf
sub
imul
(bad)
in
mov
push
je
ds
loopne
jge
imul
clc
not
push
mov
dec
sub
push
arpl
inc
(bad)
mov
sub
jl
int
repnz
cmp
lock
push
xor
dec
outs
mov
push
movs
sbb
jno
inc
js
jnp
cmp
clc
push
jno
cmp
repnz
jle
in
cli
(bad)
jb
fnstsw
mov
xchg
pop
mov
pop
cmp
mov
js
(bad)
add
loop
es
movs
xchg
jg
xchg
and
push
pusha
sub
adc
and
in
and
nop
mov
inc
sbb
sub
dec
lods
aad
jp
div
push
inc
in
mov
test
mov
jb
adc
dec
dec
jno
and
outs
scas
popa
mov
jb
dec
pop
fcomi
add
loopne
aad
rol
and
pop
int3
fild
outs
stos
dec
cmp
mov
xor
xchg
pop
sub
ds
inc
aad
add
jns
pop
vdivsd
ins
adc
adc
inc
fidiv
mov
pop
lods
popa
(bad)
(bad)
mov
add
ins
pop
mov
xor
pop
sbb
shr
pop
ret
inc
mov
jg
xor
nop
aam
cli
imul
jmp
ror
pop
dec
test
cs
xchg
adc
mov
mov
cmp
xor
jne
inc
xchg
sub
stos
shr
gs
ins
fdiv
adc
leave
jns
lds
jae
mov
rcl
xchg
cmps
andnps
out
jl
hlt
xlat
inc
push
or
not
mov
idiv
cmp
adc
cld
clc
jno
ret
adc
mov
in
inc
sub
mov
jecxz
or
fwait
cli
sti
mov
pusha
or
jb
test
add
imul
stos
jge
dec
ficomp
aad
jle
aam
cwde
leave
sub
mov
adc
sbb
aad
push
sti
inc
lock
sbb
pop
jb
fdivr
push
fdivr
add
push
cmp
retf
push
jmp
mov
ins
fist
mov
and
mov
xchg
push
enter
xchg
sub
dec
cmp
retf
push
sbb
mov
jnp
aad
mov
out
fs
int3
xchg
dec
add
add
aad
dec
fwait
js
rep
xchg
test
in
dec
aas
xchg
(bad)
popf
add
hlt
mov
mov
push
jmp
in
movs
dec
add
jb
xchg
enter
test
or
ins
pop
lods
std
xchg
add
push
dec
cmps
retf
xor
sbb
lods
jo
add
jge
jmp
not
xchg
dec
xchg
push
fnstenv
sub
mul
fild
hlt
retf
hlt
nop
pop
cmps
cmp
idiv
enter
mov
in
add
inc
push
push
add
in
lahf
adc
sub
and
push
icebp
gs
test
push
mov
cwde
mov
fmul
xlat
scas
popf
neg
in
in
imul
imul
scas
inc
pop
fwait
cdq
loopne
scas
imul
retf
xor
cli
cmp
leave
mov
push
shl
xor
dec
add
sar
aad
(bad)
mov
cmp
or
dec
jle
addr16
pushf
das
pop
or
shr
jp
adc
iret
push
adc
inc
mov
in
imul
cmp
jns
xor
lods
mov
dec
jo
pop
lods
daa
fimul
adc
cmp
cmp
add
xchg
inc
mov
cmp
mov
mov
fmul
cmp
push
in
fadd
and
adc
int
sbb
cmp
adc
imul
mov
sub
outs
xchg
mov
mov
jne
ins
stc
pop
into
fisubr
push
lds
dec
pop
jnp
fadd
mov
jnp
fbld
data16
scas
xlat
shr
(bad)
cdq
fwait
sti
ret
adc
loop
push
adc
pop
(bad)
or
xor
and
fs
add
and
sub
jne
xchg
shl
sbb
hlt
fld
cli
inc
lods
adc
popa
ret
xchg
sub
ds
sahf
outs
sbb
ret
imul
repz
mov
sub
sub
jbe
add
mov
(bad)
ficom
mov
adc
icebp
(bad)
mov
rol
mov
jmp
and
mov
retf
clc
enter
iret
add
push
xchg
mov
adc
xchg
pop
dec
ficom
cdq
pop
pop
lea
jl
adc
pop
or
and
mov
ins
and
mov
xor
jb
jecxz
and
sub
adc
push
mov
cmp
fwait
sbb
dec
jb
pop
hlt
pop
inc
pushf
push
xor
arpl
ds
push
rol
pop
pusha
mov
and
lods
fldcw
mov
repnz
shl
mov
dec
ret
adc
or
lock
pop
push
repnz
mov
test
xchg
loop
and
das
cdq
sub
jp
imul
std
js
mov
cmc
outs
(bad)
stc
out
xchg
das
ja
out
inc
in
jns
bound
dec
sar
call
rol
push
out
or
ja
pop
aaa
mov
mov
and
mul
dec
push
test
xor
and
das
mov
xor
or
jmp
cmp
in
ss
(bad)
dec
jno
push
enter
fcomp
sbb
jge
leave
xchg
gs
lods
adc
xchg
ja
xor
jno
xchg
lods
xor
pop
add
fsub
inc
ins
pop
(bad)
xor
push
or
mov
pop
out
jecxz
fidiv
mov
clc
pop
aaa
cmps
call
push
jmp
cli
fdivr
pop
jbe
cwde
paddd
bound
rcr
enter
loope
xor
sbb
jno
outs
inc
push
mov
inc
jb
js
dec
mov
lods
aam
retf
pusha
cld
mov
xchg
lods
xlat
popf
and
sbb
(bad)
adc
fimul
inc
loopne
push
mov
scas
(bad)
sbb
mov
or
add
sar
add
mov
adc
add
stos
into
mov
jmp
out
mov
out
add
xlat
cmp
das
xor
sub
rcr
scas
test
ret
mov
(bad)
jb
push
cld
aaa
shr
xor
cmp
dec
sbb
mov
pop
cmp
adc
jae
dec
mov
test
mov
pop
test
pop
aam
mov
jl
(bad)
out
aaa
(bad)
cmc
sti
lods
sbb
sbb
std
sub
out
dec
jmp
jp
aam
xchg
dec
xor
fdivr
clc
ror
int
aad
jmp
iret
arpl
sahf
add
jmp
ret
(bad)
cwde
pop
ss
lea
retf
cdq
xchg
(bad)
lods
shl
ss
xchg
pushf
call
or
adc
(bad)
dec
inc
add
xlat
repz
adc
mov
addr16
pop
jbe
inc
mov
(bad)
outs
cmc
popa
cli
test
stos
mov
(bad)
imul
push
push
(bad)
and
into
shr
adc
shl
call
inc
mov
adc
cld
inc
out
xchg
shl
sar
std
mov
popa
fisubr
mov
inc
jo
loop
jnp
pushf
(bad)
aaa
(bad)
mov
ds
jne
or
adc
hlt
shl
xchg
mov
dec
(bad)
and
or
cmp
(bad)
enter
bound
xor
repnz
pop
push
fbstp
sbb
pop
loopne
test
std
outs
mov
sub
xchg
xor
mov
cmp
cwde
cmp
int3
mov
inc
add
jo
pop
push
addr16
inc
mov
mov
ins
push
xlat
inc
cmp
popa
mov
in
pop
out
cmps
mov
mov
sbb
pop
add
jb
inc
and
fwait
cmps
call
sub
pop
add
imul
ds
lods
or
je
pop
jne
cli
inc
pop
cmps
jge
pop
idiv
cli
addr16
cld
or
sub
cmp
rcr
push
shl
xchg
pop
push
mov
ficomp
pop
mov
sub
mov
out
pop
xchg
xchg
loopne
leave
push
lahf
mov
pop
in
rcr
xchg
ds
das
lock
pop
rol
push
in
and
movs
jge
movs
xlat
js
lds
cld
(bad)
fbstp
push
pand
mov
in
inc
mov
push
cmp
adc
or
push
aaa
sahf
fst
cmps
push
cmps
mov
and
or
mov
cmp
mov
xchg
ja
cmp
push
push
(bad)
div
pop
and
add
mov
out
mov
imul
mov
adc
pushf
pop
mov
int3
jl
xor
scas
cmp
jmp
mov
or
fst
push
data16
sahf
outs
clc
pop
in
aas
xchg
arpl
push
lods
push
neg
ja
(bad)
fnstsw
dec
scas
sar
cld
pop
lea
adc
add
xor
cmp
rdpmc
jmp
sub
(bad)
dec
add
std
stos
mov
pop
ror
fs
sbb
mov
adc
dec
ret
sbb
push
inc
cmp
test
ins
or
adc
loopne
repz
ret
jae
xchg
(bad)
push
test
das
jge
xchg
pop
fst
xor
retf
xchg
test
or
je
push
call
inc
outs
repz
mov
jns
sbb
or
jno
daa
mov
dec
scas
fld
mov
mov
inc
mov
nop
enter
sub
loope
in
(bad)
lods
cld
outs
adc
stos
mov
ins
daa
or
ja
sar
mov
jp
cmc
sti
push
jae
call
pop
and
jo
ret
ins
lahf
pop
xor
aas
jecxz
in
call
xor
scas
gs
gs
in
rcl
dec
xchg
add
outs
cmp
lods
push
push
(bad)
imul
xchg
inc
retf
xor
sub
xor
ficomp
jns
push
or
aad
daa
xor
cwde
mov
push
dec
push
sbb
mov
call
xor
sahf
mov
mov
xchg
cmps
sti
sbb
fnstenv
lock
sbb
xchg
pushf
mov
cld
lods
test
ins
shl
jbe
stos
jg
fist
and
nop
ror
adc
sahf
iret
pop
fbld
pop
aam
jmp
data16
pop
ror
popa
pop
pop
inc
adc
mov
bound
retf
mov
out
popf
mov
inc
cmp
pop
test
cmp
scas
es
jo
ret
test
(bad)
ror
stos
in
ins
hlt
mov
(bad)
enter
outs
adc
fbld
pop
mov
and
pushf
les
or
data16
cmp
retf
xlat
shl
adc
mov
dec
add
adc
jae
xchg
dec
les
jb
rcr
push
mov
and
or
add
pop
leave
rcr
lds
fs
push
(bad)
loope
xor
lods
jl
std
or
cwde
fnstcw
ins
jns
mov
pop
scas
and
xchg
pop
push
ja
ss
std
lahf
out
test
sbb
fidivr
mov
xor
add
rcr
sub
enter
mov
test
mov
movntq
test
mov
gs
xchg
push
adc
(bad)
and
clc
dec
and
outs
out
push
push
jbe
(bad)
ss
xchg
in
dec
in
ja
push
dec
push
lods
xchg
sub
into
movs
mov
pop
repnz
sbb
loopne
cmp
or
lods
xor
nop
repnz
cmps
push
jecxz
in
fs
sub
addr16
test
movs
xchg
push
movs
sub
sub
add
pop
repz
jp
push
pop
lahf
fadd
sub
mov
inc
pop
aad
call
mov
cmp
fwait
(bad)
push
nop
ret
mov
jle
sbb
shr
inc
add
scas
sahf
sub
jno
lahf
pop
(bad)
movs
inc
fs
xor
jl
pop
dec
arpl
outs
cmp
xchg
sbb
into
fsub
sbb
jb
dec
ja
outs
add
outs
cmps
dec
and
neg
jmp
stc
mov
mov
es
mov
xchg
cmc
mov
rcr
sbb
jo
inc
in
xchg
call
and
cmp
in
cs
xor
scas
xor
mov
sbb
jmp
(bad)
cmp
cli
inc
adc
lahf
sub
adc
jge
xchg
fstp
jle
cmp
dec
jns
adc
pop
cmp
adc
arpl
int
mov
shl
movs
sub
clc
adc
repnz
pop
sbb
stos
(bad)
scas
lea
nop
cmps
jmp
add
shr
add
in
jl
mov
xchg
mov
push
push
push
(bad)
adc
pop
scas
add
leave
adc
push
push
mov
mov
das
gs
mov
jo
mov
stc
xor
xor
fcomp
mov
cdq
test
sbb
fstp
mov
jle
and
(bad)
icebp
inc
pop
popa
addr16
xor
push
rcr
loopne
fcmovbe
xchg
sahf
test
add
jmp
cmp
add
and
add
imul
cdq
or
iret
jmp
mov
and
int
leave
dec
xor
xchg
mov
es
mov
aam
push
inc
fsubr
shr
inc
jnp
fwait
push
mov
xlat
ret
mov
and
push
or
lock
not
cli
pop
mov
out
xchg
sahf
daa
inc
les
js
daa
jmp
and
sub
iret
mov
leave
shl
cmps
mov
mov
fs
jle
scas
jmp
shl
mov
pop
xchg
push
sub
test
and
xor
mov
mov
lods
jl
scas
xlat
loopne
xchg
test
xchg
lea
mov
pop
and
xor
cld
push
js
xchg
in
lods
out
xor
jno
cdq
in
ja
push
fstp
icebp
std
pusha
or
mov
int
and
rcl
cmp
outs
pop
add
in
enter
in
xor
mov
jle
inc
inc
fsubr
cli
fisubr
add
test
jecxz
test
inc
or
or
pop
and
sbb
pop
cdq
std
out
aad
add
xchg
mov
or
stos
cmovb
nop
pusha
daa
loopne
rcr
adc
inc
xor
mov
pop
out
rcr
pop
push
cmps
jo
test
inc
int3
fdivr
(bad)
test
int3
pop
dec
mov
add
jg
jle
jge
sahf
mov
sbb
or
stos
jecxz
mov
lds
jae
ffreep
and
fdivr
lods
pop
adc
nop
imul
adc
test
test
iret
cli
mov
pop
out
ror
jge
outs
int
sub
movs
nop
mov
mov
mov
in
scas
adc
test
mov
push
add
leave
sub
xlat
ja
or
jb
stos
enter
push
pop
inc
dec
inc
into
imul
xor
sbb
aas
or
stos
ret
mov
fsub
loopne
pop
(bad)
repnz
or
leave
adc
rol
(bad)
or
jae
ret
mov
ror
xacquire
stc
mov
scas
mov
mov
test
test
adc
mov
iret
imul
sar
test
retf
loope
pushf
cs
dec
mov
mov
enter
lock
pop
aas
xor
jae
push
push
push
cmp
(bad)
mov
js
pop
xchg
mov
push
mov
jae
fadd
add
xchg
dec
mov
(bad)
mov
jecxz
jmp
adc
xchg
int3
cmp
or
(bad)
in
out
push
mov
scas
aad
jl
ja
inc
xchg
add
popa
sahf
lds
es
mov
je
cmps
rcr
inc
fs
mov
xor
les
mov
sbb
cmp
and
cmp
inc
dec
test
mov
and
inc
mov
add
sub
(bad)
shr
mov
mov
jg
pushf
adc
fldcw
or
aaa
ins
mov
stos
or
sti
ficom
loope
bound
or
xor
lock
fldcw
enter
ret
cwde
(bad)
loop
(bad)
fld
inc
xor
or
xor
jae
in
push
xchg
dec
push
dec
and
gs
push
call
jns
sbb
push
jo
es
jae
retf
mov
or
mov
adc
push
mov
clc
repz
cmp
xchg
lea
push
rcl
add
(bad)
sbb
inc
jo
mov
mov
scas
movs
push
sub
lahf
ins
adc
movs
cmps
xchg
bound
je
test
test
xor
and
sbb
lods
add
stos
cmp
bound
mov
add
adc
xor
stc
lock
fwait
jmp
cmp
cwde
mov
adc
stc
dec
push
jbe
push
ss
lahf
cmp
(bad)
xor
and
test
pop
adc
ja
test
and
mov
mov
or
xchg
inc
rol
push
dec
mov
sbb
ret
out
or
enter
xchg
jno
div
push
mov
mov
jb
cld
test
inc
fistp
pusha
scas
pop
cmp
push
jbe
cdq
out
gs
(bad)
xor
sbb
xor
push
pusha
xor
scas
mov
(bad)
jae
mov
sbb
cmps
push
jbe
or
add
shr
pop
and
sub
fld
dec
xchg
inc
push
or
cmp
dec
lock
jnp
lods
ret
mov
aas
mov
out
jle
data16
or
icebp
(bad)
push
sbb
inc
shl
enter
loope
xor
outs
xchg
jnp
lods
not
repnz
mov
pop
dec
jo
js
mov
or
rcl
mov
cmp
add
inc
leave
repz
push
dec
mov
mov
lock
push
and
addr16
inc
inc
mov
and
sahf
jno
nop
scas
sar
inc
hlt
inc
mov
cmc
cmp
into
fwait
arpl
or
mov
icebp
mov
inc
adc
fmul
pop
mov
lods
mov
push
mov
push
push
jg
and
retf
adc
das
lds
into
bound
rcr
and
xchg
pop
push
fnstenv
mov
(bad)
addr16
test
rol
jae
push
(bad)
cmp
xchg
add
jl
aam
mov
stos
int
lea
inc
and
fwait
inc
in
cwde
out
push
es
bound
jnp
cmp
or
div
int
sub
call
cwde
adc
push
xor
push
lds
sti
xchg
xor
mov
jmp
push
jmp
gs
jb
imul
mov
cmp
ja
jle
ret
imul
add
push
jp
aad
sub
or
std
aas
lahf
aad
daa
mov
sub
inc
cmp
enter
or
cmp
popf
xor
cld
inc
xchg
push
daa
sahf
(bad)
pop
cdq
xor
jl
cdq
push
add
cwde
mov
clc
sub
jbe
xor
aam
retf
sti
add
jne
dec
fcomp
adc
mov
jmp
pushf
jp
push
xor
inc
fwait
pinsrw
xor
fadd
cmp
sahf
repz
sub
cmp
ret
into
lods
scas
scas
push
fild
sbb
adc
fstp
nop
mov
jge
mov
loope
push
xchg
mov
push
jae
ins
in
(bad)
(bad)
and
fild
out
inc
mov
mov
shl
outs
lahf
mov
mov
jae
xchg
cmp
push
sub
popf
and
cmp
call
int3
sar
jno
pop
xor
imul
loopne
adc
out
in
fdivr
jp
lods
out
test
cld
mov
xchg
inc
push
aas
xor
mov
pop
fmul
imul
cld
jno
in
cmp
scas
aad
pop
outs
jecxz
sahf
pop
xchg
xchg
jge
bound
jp
pusha
push
call
dec
xchg
enter
pop
test
xchg
pop
stos
cdq
fistp
mov
outs
into
pop
fucomip
mov
movs
leave
enter
jnp
jge
push
jo
push
or
(bad)
pop
sub
sbb
adc
repnz
dec
loop
test
and
in
imul
retf
test
out
lods
cld
lea
mov
nop
clc
jns
fist
popa
adc
int3
jnp
mov
add
or
jge
push
inc
lock
xor
xor
cmp
jo
das
jae
rcl
pop
inc
movs
cmp
mov
mov
pop
ret
(bad)
jmp
adc
pusha
(bad)
pop
outs
dec
jbe
retf
in
outs
mov
add
(bad)
mov
pop
fsubr
imul
aad
in
jg
loop
cmp
add
push
aas
cmp
xchg
mov
arpl
adc
pushf
stc
xor
lods
mov
sub
mov
popf
lock
mov
jb
test
push
sub
inc
jmp
div
pop
shl
add
leave
jae
lahf
out
inc
rcr
inc
mov
loopne
retf
es
bound
scas
lock
lods
push
mov
dec
xchg
fdivr
cmp
das
aad
mov
cmp
sub
(bad)
sar
pop
loopne
mov
aad
xchg
ins
mov
cwde
inc
std
adc
push
sahf
frstor
call
pop
sbb
sub
rcl
cmp
pushf
es
sub
pop
out
imul
xchg
jmp
cmc
cli
imul
lahf
mov
loope
pop
call
jmp
and
ret
jecxz
stc
fcom
setle
cmp
outs
add
mov
push
or
daa
sub
xchg
xchg
jne
sar
div
cs
and
je
and
in
dec
mov
rcr
sub
pusha
repnz
es
fld
cmps
cmp
inc
jg
add
xchg
or
out
fidivr
cdq
movs
mov
clc
jl
ror
and
pusha
adc
gs
push
loop
cmps
mov
test
adc
mov
jno
push
es
jle
push
sbb
nop
js
sub
xchg
fcomp
adc
add
(bad)
xchg
inc
loop
lock
push
or
imul
aad
mov
in
rcr
add
or
es
mov
scas
adc
into
ret
sbb
stc
aad
jmp
aas
aas
xchg
aad
adc
sub
pusha
pop
xor
add
cld
mov
push
idiv
sahf
adc
imul
lds
pop
sahf
jecxz
xlat
sub
leave
pop
hlt
mov
and
dec
xor
es
mov
sbb
clc
mov
inc
pop
mov
mov
pop
push
clc
mov
call
push
loope
inc
(bad)
push
push
enter
xlat
mov
jmp
rcl
push
dec
mov
jg
add
dec
push
pushf
call
inc
sbb
pop
mov
push
lds
or
dec
jmp
push
cmc
xchg
and
or
push
xor
and
outs
loop
mov
dec
out
lods
repz
jmp
scas
sbb
lahf
mov
add
fadd
and
push
push
pop
loopne
imul
and
inc
push
mov
xchg
in
fist
leave
add
sbb
ret
xchg
sahf
loopne
rol
aad
push
push
int3
inc
push
xchg
test
adc
mov
mov
das
mov
pop
jnp
aaa
cdq
scas
sub
pop
leave
cs
mov
pop
sub
adc
cmp
leave
retf
fdiv
jmp
aad
jnp
sub
xor
xchg
pop
outs
and
popa
xchg
or
ret
mov
or
dec
dec
xor
ror
push
pop
dec
lea
scas
or
or
push
mov
adc
push
xchg
xchg
xchg
adc
aaa
pop
cmps
push
jno
pop
test
cmp
sub
add
mov
call
mov
mov
test
inc
cmp
dec
and
mov
adc
mov
mov
cmps
xchg
jb
jmp
test
ffreep
repnz
sbb
sbb
xchg
addr16
ds
aas
inc
mov
(bad)
lea
mov
sbb
jo
loop
iret
mov
cmp
dec
mov
cdq
xor
shr
leave
push
xor
mov
stos
dec
sub
cmp
sbb
xlat
inc
shl
xchg
xchg
les
sar
mov
stos
jns
jbe
ret
mov
mov
or
inc
push
in
xchg
jp
outs
push
clc
jns
jp
nop
push
sbb
(bad)
scas
cmp
inc
(bad)
enter
leave
jnp
loopne
sub
adc
and
(bad)
int
sahf
or
cmp
loopne
and
and
mov
arpl
repz
mov
jae
iret
pop
adc
icebp
hlt
sbb
mov
shr
and
and
cmc
push
mov
xchg
out
and
and
inc
nop
gs
shufps
and
pop
stos
fisubr
xor
stc
xchg
inc
add
push
and
xor
push
iret
push
add
sbb
int
jle
mov
(bad)
xor
div
add
out
pop
and
(bad)
jnp
pop
sbb
test
dec
mov
repz
xor
cmps
push
std
pop
mov
mov
lock
outs
adc
arpl
data16
sbb
inc
mov
mov
inc
xor
adc
cld
aaa
jbe
enter
retf
es
or
or
(bad)
sbb
fcom
jmp
daa
cmp
outs
jg
mov
mov
fs
push
inc
aas
test
addr16
iret
inc
mov
or
pop
fldenv
mov
cmc
stos
enter
mov
lahf
jge
pop
inc
cdq
cmp
fwait
lea
call
dec
mov
or
push
sub
push
stos
cwde
mov
mov
popf
shl
mov
call
leave
xor
fwait
cdq
shl
lea
fidivr
or
cmp
(bad)
pop
pop
push
fmul
xor
stc
inc
cmps
mov
stos
adc
jmp
push
sub
movs
loop
lahf
enter
xchg
jne
sub
cmp
mov
mov
cwde
hlt
jg
imul
adc
gs
jmp
bound
jns
test
setbe
cmp
xchg
pop
push
scas
fild
jo
xor
fimul
inc
push
and
lea
outs
sub
lahf
pop
dec
scas
or
and
jns
repnz
pop
scas
mov
lods
mov
mov
outs
std
shl
sub
js
outs
ret
jae
xchg
mov
daa
mov
mov
shr
cmp
fimul
pop
or
adc
push
les
sbb
and
loope
mov
sub
xor
jmp
arpl
pop
mov
outs
inc
add
xchg
sahf
cdq
pop
ret
ret
xor
adc
sbb
mov
jmp
inc
xor
adc
cmps
inc
sbb
push
or
sbb
sbb
add
call
loopne
pop
aaa
sub
sub
fisttp
in
ds
call
push
dec
dec
cmp
mov
pop
sbb
rol
loopne
in
loop
mov
mov
ja
in
test
(bad)
hlt
lea
lods
sahf
sar
shl
int
inc
and
push
scas
call
in
xchg
jns
cmp
retf
mov
ds
in
inc
jmp
cmp
stc
or
or
mov
ss
stos
push
pop
ffreep
cmps
aaa
enter
pop
ja
push
push
adc
and
sbb
xlat
sub
xchg
not
call
inc
fcom
aam
cld
xchg
outs
loope
add
loope
xor
and
movs
shl
(bad)
imul
inc
mov
ins
push
xchg
ret
and
stc
xor
xchg
outs
dec
dec
adc
mov
sub
fdivr
stos
xor
push
xchg
or
xchg
cmp
(bad)
scas
lods
jns
xrelease
loop
cmp
lahf
or
loop
cdq
jge
inc
mov
call
shr
jno
cs
xor
cmps
xchg
pop
adc
pop
jnp
push
sub
sbb
dec
out
sub
dec
cmp
test
outs
fcmove
or
(bad)
fidivr
inc
fisttp
in
dec
in
xchg
pop
jp
stos
pop
jae
pop
cmp
mov
mov
add
mov
jle
push
in
mov
jl
rcr
sub
mov
rol
(bad)
xchg
inc
cmp
and
jecxz
(bad)
arpl
shl
aad
scas
clc
inc
pop
int3
mov
mov
fidiv
inc
test
arpl
adc
push
test
jmp
mov
int
and
jb
push
sub
repnz
pushf
ins
push
jno
xor
xor
push
pop
ins
stc
push
popf
cld
jge
jl
push
mov
ret
ss
out
ret
stos
sub
retf
mov
and
dec
ja
push
dec
sbb
dec
lock
xchg
cmps
push
or
repz
frndint
ret
retf
call
jb
js
addr16
add
mov
xchg
and
icebp
stc
fstp
xchg
push
aad
cmp
mov
ja
mov
ret
add
test
sub
xlat
pop
icebp
test
loope
lods
dec
pop
and
mov
dec
cld
push
(bad)
push
push
aas
jmp
jne
xor
in
and
ficomp
test
dec
dec
inc
xchg
cmp
fwait
jae
iret
test
fcom
add
sahf
fwait
mov
enter
shl
rol
push
addr16
sub
dec
inc
push
sbb
or
adc
cld
sar
jmp
dec
call
sbb
jmp
loope
lahf
fcmovnbe
(bad)
(bad)
repz
cmc
mov
xor
dec
and
mov
xor
mov
push
scas
mov
pop
dec
sbb
(bad)
jle
sbb
clc
xchg
push
into
mov
jne
out
cmp
out
test
hlt
or
loopne
shl
cli
xchg
pop
adc
mov
iret
shl
ja
repz
lods
add
outs
xchg
in
fucomp
push
rol
in
(bad)
xor
adc
sub
jge
add
outs
jg
add
leave
jmp
or
leave
loope
scas
push
sti
mov
es
xchg
inc
xor
arpl
dec
pop
aas
pop
adc
rcl
mov
add
or
punpckhdq
std
sub
xor
add
add
mov
adc
adc
jae
ins
outs
gs
test
ja
mov
aad
lahf
shl
aas
cmp
lods
in
and
data16
mov
movs
dec
push
addr16
sahf
je
push
ret
test
out
lock
cmp
ds
test
int3
jo
xchg
adc
(bad)
pop
inc
in
mov
pop
xor
add
xor
jl
or
jp
mov
test
nop
fsub
gs
xor
pop
cmps
loope
adc
xchg
inc
mov
rol
adc
add
jbe
aam
cli
pop
les
int3
mov
imul
arpl
xchg
jge
outs
arpl
dec
or
adc
call
dec
lds
in
fldenvw
sbb
mov
mov
and
sbb
out
jmp
cmp
repz
xor
scas
or
out
dec
or
fst
push
retf
aas
mov
ins
adc
xchg
dec
xor
and
mov
popa
xchg
lahf
mov
mov
add
(bad)
std
pop
jge
cld
jle
test
dec
adc
xlat
xor
stos
(bad)
dec
or
pushf
jle
mov
lods
data16
push
aaa
and
push
jp
stos
fld
test
js
xor
movs
outs
repnz
and
in
popf
xchg
add
sbb
cmp
xchg
or
movs
test
lods
or
fnsave
sti
jne
xchg
(bad)
sub
and
xlat
and
cmp
call
cdq
call
js
iret
jne
jmp
repz
je
hlt
cmp
xchg
push
in
std
ret
dec
xor
sti
push
xchg
and
and
icebp
dec
lods
sub
das
aad
stos
jb
cdq
popf
aas
dec
stos
movs
xor
jb
call
mov
push
sbb
pop
push
cmp
or
or
(bad)
repnz
xchg
dec
push
mov
call
jmp
push
(bad)
jns
fisttp
pop
rol
sbb
sbb
lgdtd
(bad)
lods
cmp
lods
jbe
retf
add
and
inc
cmp
inc
mov
in
push
push
inc
in
mov
sub
mul
shr
jne
jns
or
loope
or
mov
sub
mov
imul
cld
aaa
in
adc
fistp
sbb
imul
sub
dec
scas
xchg
scas
add
jb
ret
xchg
popf
push
mov
cmps
mov
lock
out
cmp
(bad)
outs
aas
push
lea
push
pop
and
call
sub
xchg
inc
pop
mov
mov
scas
sub
adc
and
push
scas
cmp
aad
jnp
pop
xchg
imul
sbb
xchg
imul
push
das
adc
pop
aam
adc
jns
xchg
outs
or
and
shl
mov
div
fld
xor
(bad)
jnp
mov
movs
jno
push
imul
pop
jo
mov
sub
jmp
fidivr
cld
je
int3
(bad)
sbb
(bad)
jle
mov
mov
rcr
push
push
dec
fisubr
xchg
jge
movs
mov
retf
mov
mov
lock
popa
jae
mov
daa
add
xor
jb
mov
arpl
cmps
mov
ficom
push
dec
mov
or
or
or
in
test
les
cmp
loopne
sbb
and
pop
lds
push
cwde
xor
div
xor
fistp
xor
push
pop
jl
mov
push
and
cld
xor
jne
push
mov
inc
push
out
push
and
jle
iret
scas
sar
push
out
add
daa
cmp
mov
ret
loope
pop
(bad)
fcom
mov
push
mov
lods
mov
ins
cs
je
loop
jo
mov
mov
scas
add
dec
mov
outs
loop
push
sub
inc
adc
rcr
mov
shl
repz
push
clc
jb
inc
mov
scas
leave
sbb
hlt
gs
push
fidiv
sbb
loope
inc
cmp
test
sbb
jp
xlat
jmp
into
out
scas
sti
cmp
pop
mov
jne
adc
mov
jno
mov
shl
fcomp
push
dec
stos
inc
(bad)
dec
(bad)
mov
jp
adc
lahf
retf
xor
call
add
cmp
fs
gs
cmps
mov
mov
xor
jge
std
fwait
ins
sub
rcl
ret
lea
jmp
test
lods
jle
or
and
mov
repnz
mov
test
xchg
mov
pop
rol
call
out
add
mov
aam
and
jmp
pop
and
or
jg
push
jo
pop
aaa
mov
jl
or
mov
out
enter
cmp
cdq
sub
repnz
fucomip
jl
enter
lods
hlt
sub
jl
push
arpl
les
inc
mov
enter
(bad)
jne
leave
fmul
outs
xchg
shl
test
sbb
or
call
inc
jg
repnz
cmp
pop
mov
iret
sub
movs
xchg
jecxz
mov
inc
push
xor
jle
cmc
mov
fwait
movs
mov
sbb
and
imul
xor
popa
std
pop
sub
repnz
xchg
call
xlat
(bad)
adc
dec
cmps
int
in
jle
in
fbstp
jnp
retf
pop
aad
mov
pushf
(bad)
ds
ror
cmp
das
pop
mov
sub
inc
dec
adc
adc
jbe
ficomp
inc
shl
jle
sub
lock
xor
pop
sub
mov
(bad)
sbb
shl
icebp
xor
cmp
push
cmp
jnp
pop
nop
movs
sub
or
shufps
cs
je
jnp
popf
dec
inc
pop
call
rol
shl
out
pop
and
jmp
inc
jnp
and
imul
mov
leave
adc
aaa
and
jp
adc
sub
jo
aam
fbstp
mov
dec
popf
mov
imul
push
clc
cmp
ins
jo
jmp
pop
jno
ja
jb
mov
mov
add
mov
hlt
es
cdq
mov
popf
lahf
mov
js
into
fstp
movs
cmp
pop
push
sub
xchg
sbb
sbb
mov
jb
fnstsw
lock
xchg
xchg
ins
push
or
push
sbb
and
cmp
xor
test
inc
test
cmp
lahf
sbb
mov
jb
ret
xor
in
fisubr
mov
sbb
inc
fild
add
cmp
scas
xlat
rcr
push
adc
push
adc
scas
and
mov
pop
out
sbb
and
pop
jo
xchg
push
fiadd
dec
lea
mov
rcr
cmp
inc
das
je
dec
sbb
hlt
add
adc
dec
dec
mov
rcl
inc
or
dec
mov
jmp
pop
lahf
adc
sub
hlt
xlat
fnstcw
mov
jge
xor
jp
repz
pop
and
mov
out
mov
sbb
mov
xlat
inc
test
in
test
movs
aas
cmps
cld
mov
rcl
call
test
call
or
sbb
add
xchg
cwde
cld
mov
dec
mov
in
pushf
aam
push
mov
in
xchg
(bad)
sar
xchg
or
cmp
push
es
fsubrp
jmp
ja
xor
pushf
lods
xor
mov
or
retf
imul
loope
xchg
stos
inc
pop
cli
lea
div
mov
add
inc
push
lods
stos
mov
popa
xchg
pop
test
shl
movs
retf
sub
in
out
in
mov
add
popf
aaa
mov
push
(bad)
ins
rol
jne
(bad)
lahf
jno
xchg
je
mov
xchg
sbb
ja
mov
jl
rcr
hlt
mov
lahf
dec
xchg
mov
add
mov
ror
ins
mov
(bad)
fadd
dec
retf
or
in
enter
cmp
aam
in
fld
ror
and
mov
es
adc
(bad)
es
rcr
add
lahf
mov
mov
xchg
je
(bad)
fild
push
add
lahf
(bad)
fwait
mov
aaa
cwde
sub
and
(bad)
or
aam
add
enter
retf
jle
test
popa
shl
out
ss
int3
cmc
cmps
imul
pop
neg
mov
add
mov
push
aas
imul
imul
fidivr
sti
jo
les
mov
js
in
sbb
cmp
jmp
out
push
mov
mov
mov
inc
jae
ds
mov
push
std
pop
iret
dec
stc
ret
xor
dec
mov
mov
and
ror
sub
aad
push
aad
loopne
adc
and
and
std
pop
cmp
jae
adc
add
aas
(bad)
or
rcl
mov
(bad)
mov
add
ja
shl
add
xor
repnz
push
cmp
mov
inc
jmp
mov
out
popa
push
pop
mov
push
out
loop
loop
mov
and
sub
jbe
cmp
fs
(bad)
ins
jl
movs
(bad)
xlat
mov
addr16
in
xor
jge
rol
cmp
sbb
stc
scas
mov
cmp
and
popf
mov
or
fidivr
sbb
lock
or
mov
scas
repz
stc
jp
cmp
inc
ret
cmp
dec
sbb
nop
jmp
cli
xchg
popa
jp
adc
test
push
sbb
(bad)
lds
pop
xchg
call
js
sbb
adc
mov
fidivr
ins
loopne
xor
aaa
jl
int3
cld
pop
xchg
lea
scas
data16
xor
mov
xor
mov
push
(bad)
mov
sub
push
mov
pop
retf
not
aas
mov
jnp
and
xchg
bound
outs
movs
fcomp
xor
cdq
or
pushf
fisttp
mov
adc
mov
fwait
jg
adc
stos
xor
pop
xchg
test
int
pop
sub
push
push
jl
push
fdivrp
push
add
or
(bad)
stos
xchg
mov
pop
mov
cmp
mov
out
leave
pop
lock
lfs
add
imul
xchg
xchg
pop
imul
mov
mov
cmc
adc
fidivr
(bad)
pop
neg
sti
test
(bad)
mov
jns
mov
xor
std
xchg
or
add
sbb
scas
lods
cmps
mov
lock
inc
cmp
push
xor
mov
adc
push
sub
fistp
shr
mov
jb
sub
mov
inc
xchg
mov
add
sub
sub
clc
or
fcomp
add
xchg
sbb
or
and
scas
or
inc
shl
push
mov
aad
pop
push
inc
loop
ret
shl
inc
jle
pop
aad
sub
mov
sub
icebp
neg
push
mov
lods
dec
loopne
add
(bad)
push
pop
pusha
idiv
rcr
aam
arpl
outs
icebp
(bad)
sar
inc
and
sub
dec
sbb
ds
fisubr
adc
sbb
shl
dec
lods
or
sub
repz
cmp
xchg
sub
in
jl
inc
jmp
pushw
mov
xchg
(bad)
cmp
cld
sub
test
inc
mov
add
in
push
lock
inc
mov
mov
xchg
xchg
dec
rol
cli
cs
je
ins
mov
xor
pop
push
push
add
arpl
ficomp
inc
xchg
rol
loop
add
dec
cmp
xor
adc
mov
lods
pop
jecxz
fsubr
pop
cmp
xor
loopne
push
pop
daa
inc
imul
jb
add
(bad)
mov
mov
or
cmp
mov
xor
les
cmp
int3
imul
add
lock
iret
mov
and
data16
sub
call
push
in
inc
rol
xchg
mov
scas
aaa
pop
sahf
imul
ds
scas
adc
int3
xlat
(bad)
mov
ret
xchg
jecxz
cmps
mov
or
mov
push
push
ins
nop
jmp
or
cmps
lods
adc
inc
outs
xchg
cmp
ret
clc
stos
jb
imul
scas
and
mov
mov
outs
or
jae
popa
outs
and
jmp
add
xor
inc
aaa
dec
imul
jecxz
(bad)
iret
dec
or
cmps
push
cmps
add
dec
adc
sub
xor
es
fistp
fld
lea
jp
pop
rcr
or
or
daa
jmp
retf
int
pop
cmp
loope
cmc
popf
ror
(bad)
push
fld
jbe
repz
aaa
pop
gs
cmp
ret
inc
ins
test
jg
aas
jns
movs
jge
out
xchg
inc
jbe
test
mov
mov
mov
(bad)
xor
sbb
out
in
cmp
ins
cld
inc
xor
jnp
retf
fldenv
dec
push
sti
cmps
addr16
adc
call
inc
scas
movs
mov
ja
xor
les
in
mov
adc
sub
xor
out
jnp
jns
pop
push
fistp
mov
gs
jo
jb
aam
mov
sbb
xchg
pop
mov
pop
push
mov
xor
cmc
int
xchg
cs
and
add
jo
cmp
dec
ret
test
sbb
adc
enter
outs
and
or
add
shr
cmp
es
and
lds
mov
call
dec
js
sti
xor
xchg
es
test
add
dec
fucomp
mov
push
add
adc
mov
xchg
xchg
and
push
test
jne
jnp
mov
stos
sbb
out
retf
sub
arpl
jp
mov
cmp
jne
sti
imul
fs
or
shl
pop
fwait
cmp
rcr
rcl
sub
adc
imul
push
pop
push
mov
push
push
int
cmps
mov
int
add
repz
inc
imul
aas
push
es
xlat
mov
test
imul
pushf
fwait
(bad)
(bad)
popa
jae
and
retf
inc
mov
mov
rcr
sti
out
out
dec
dec
imul
aaa
test
pop
xlat
and
mov
vaddsubps
sub
clc
pop
in
int
mov
fstp
aad
push
mov
jecxz
cmp
mov
lods
add
or
push
xchg
pop
es
ficomp
in
out
call
imul
test
push
scas
push
mov
sbb
add
les
lods
adc
(bad)
mov
mov
cmp
int
inc
ins
repnz
imul
(bad)
repz
inc
push
por
movs
mov
mov
sub
or
(bad)
in
sbb
xchg
push
mov
outs
mov
pusha
xor
sbb
pop
push
test
xchg
test
into
(bad)
mov
test
or
ficomp
dec
mov
repz
call
lock
out
dec
cdq
imul
push
adc
ins
int3
out
pushf
mov
aad
xor
adc
cli
div
or
cwde
push
pop
fucompp
xor
mov
cwde
sub
push
mov
pop
pop
out
repz
and
sub
xor
mov
stc
xchg
mov
sti
(bad)
rol
fstp
pop
push
inc
sub
das
push
fidiv
sub
nop
jmp
ret
and
sahf
jp
or
cmp
xor
retf
inc
mov
mov
mov
sub
ret
push
cmp
inc
fcomp
leave
add
pop
mov
popf
push
mov
mov
cmps
stc
fisttp
or
aaa
inc
or
aad
jmp
xchg
mov
xchg
(bad)
inc
pop
mov
dec
ins
inc
repnz
jecxz
int3
cmp
and
mov
enter
ror
aam
pop
and
daa
and
jbe
cwde
mov
bound
sbb
repnz
scas
loop
inc
std
movs
sub
int
stos
aam
retf
xchg
das
imul
add
mov
xchg
adc
cli
out
fs
and
sbb
mov
pop
and
jp
pop
repnz
daa
nop
or
adc
enter
(bad)
nop
inc
cmps
mov
add
out
ret
retf
sub
mov
mov
into
rol
scas
ins
into
pushf
aad
bnd
inc
fcom
jns
push
add
mov
ins
inc
cmps
push
or
loope
pop
lock
push
sub
int
mov
ds
cld
(bad)
inc
dec
xchg
push
pop
dec
mov
mov
js
fmul
sbb
test
cmp
bound
xor
and
rcr
pop
xchg
jecxz
mov
out
stos
test
mov
xor
test
lods
push
gs
(bad)
xchg
jmp
and
daa
iret
mov
mov
out
dec
push
lds
nop
arpl
cld
jnp
pop
or
fldenv
cmp
stc
loope
mov
sbb
xlat
mov
in
shr
sub
int
loope
push
cmp
aam
outs
aaa
movs
loope
mov
sub
test
push
cld
mov
stos
cmp
pop
cmps
mov
in
clc
cmps
push
xchg
or
mov
lds
or
and
adc
fidiv
pop
in
add
dec
enter
mov
cld
pop
lods
(bad)
daa
add
jl
test
xchg
inc
rol
xor
aas
aad
mov
lahf
inc
enter
test
adc
shr
pop
inc
(bad)
shl
sahf
sbb
into
repz
test
adc
add
test
inc
and
rol
rcl
into
xor
pop
sub
push
daa
pop
add
nop
cmc
pusha
fbstp
retf
ins
mov
jae
scas
aas
xchg
xor
shl
add
jle
dec
and
shl
ror
push
xchg
adc
and
in
add
mov
daa
dec
xor
lock
xchg
call
pop
pusha
loope
xor
xchg
lds
outs
xchg
fld
inc
sub
pop
fiadd
test
aam
add
fistp
loope
scas
imul
loopne
out
gs
ror
sub
mov
push
pop
mov
pop
icebp
or
outs
push
adc
ins
or
cmp
ret
cmp
jae
dec
cmps
or
pop
adc
sbb
mov
or
shl
fisttp
ret
ja
cmc
inc
das
push
mov
and
ja
push
add
mov
and
ficom
jnp
retf
in
loop
fwait
enter
mov
pop
lds
or
ins
mov
(bad)
imul
cmc
ja
xchg
dec
in
sub
enter
inc
or
fcomp
(bad)
lock
xor
mov
loop
cmp
pop
test
out
ret
test
scas
fbld
xchg
xchg
push
fs
out
mov
add
inc
mov
ja
fidiv
bound
fwait
adc
fist
xor
out
dec
mov
sbb
(bad)
gs
pop
mov
addr16
push
int3
mov
test
inc
jp
push
in
mov
ret
pusha
mov
mov
jns
mov
xchg
movs
test
popa
popf
jbe
data16
mov
xchg
fwait
push
mov
sbb
aad
mov
outs
pop
out
push
push
sbb
in
xchg
mov
fisub
ds
or
lds
jnp
fisttp
ja
cmp
sbb
sub
mov
inc
es
jecxz
pop
popa
sbb
pushf
push
xor
sbb
mov
add
in
sub
jmp
lods
lock
sahf
mov
fimul
pop
mov
fmul
fstp
cmps
out
ror
xchg
cmp
jg
pop
(bad)
jmp
nop
scas
mov
lahf
call
out
movs
mov
sbb
repz
loop
arpl
sbb
mov
fdivr
cmp
cmp
jge
inc
or
stos
rcr
jae
jg
sbb
es
sub
(bad)
mul
(bad)
sub
sbb
test
test
mov
in
jg
dec
xchg
jg
add
jmp
(bad)
xor
(bad)
jl
mov
int
cmp
adc
mov
outs
push
shr
imul
frstor
fld
stos
(bad)
cli
xor
mov
and
popa
lods
push
jb
call
loop
and
in
inc
repnz
dec
or
aaa
scas
in
add
repz
pusha
or
xor
sar
adc
sti
adc
sbb
pop
push
loope
ss
(bad)
ss
dec
mov
xchg
sti
loopne
mov
or
adc
dec
push
inc
and
test
mov
jmp
(bad)
mov
loopne
sub
mov
inc
fld
(bad)
pop
cmp
out
jle
sbb
xor
test
add
add
mov
mov
scas
and
and
popf
inc
out
dec
adc
mov
add
aam
and
add
push
es
dec
dec
ficomp
mov
jb
out
rol
sar
ds
mov
jp
ins
icebp
push
pop
jo
cmp
add
and
jle
or
pop
push
daa
(bad)
push
push
je
xchg
pop
push
lds
jnp
or
xchg
xor
mov
push
dec
into
jecxz
push
mov
stc
sar
lds
fisub
jne
xchg
and
or
pop
adc
cmps
and
adc
jae
push
int
stos
mov
movs
mov
adc
in
and
sar
in
sub
outs
jne
fadd
adc
xlat
pop
sbb
push
and
push
movs
adc
(bad)
(bad)
mov
cdq
scas
mov
jg
push
fwait
push
xchg
dec
rol
inc
ss
mov
sar
push
lahf
leave
paddw
fs
or
unpckhps
jnp
push
repnz
jle
shl
add
mov
push
test
mov
xchg
add
ss
inc
adc
in
call
scas
push
aas
jl
jne
mov
adc
out
dec
xchg
dec
xchg
xchg
or
out
shr
hlt
dec
or
enter
retf
(bad)
fadd
scas
nop
xor
add
stos
or
adc
ror
inc
jmp
rcr
daa
mov
push
shl
ds
adc
push
mov
dec
aaa
adc
mov
scas
repnz
cmc
shr
pop
pop
lds
mov
push
jp
mov
dec
sti
lea
(bad)
arpl
mov
mov
mov
call
xor
jle
(bad)
in
popa
fwait
xchg
mov
dec
xor
xor
(bad)
int
daa
div
loope
fcomi
lea
sub
sbb
sbb
sahf
add
int
retf
jb
push
retf
cmp
div
inc
push
mov
jge
mov
adc
ss
neg
push
lods
rcl
div
and
jnp
inc
or
loop
jae
ds
loope
call
fsubr
cmp
or
mov
in
add
loope
add
sbb
addr16
jnp
rol
ror
rcl
sub
push
mov
movs
jecxz
ret
(bad)
mov
pop
cwde
nop
shl
xchg
mov
imul
(bad)
or
ret
in
aam
bsr
test
aas
sub
cs
mov
xor
jecxz
mov
adc
aas
mov
imul
pushf
shl
outs
xchg
sub
(bad)
pop
dec
dec
daa
or
ins
enter
bnd
ss
mov
movs
or
in
jno
(bad)
data16
stos
retf
pop
idiv
(bad)
jmp
sub
daa
inc
push
sub
(bad)
fisttp
jl
rcr
add
(bad)
mov
fs
dec
fnstcw
std
push
arpl
or
sub
aas
sub
xor
inc
cmp
in
jg
jno
and
das
popa
dec
push
aad
mov
cdq
push
mov
mov
pop
jg
call
sbb
dec
leave
(bad)
push
stos
pusha
lods
fs
arpl
jbe
cmp
xchg
pop
mov
sbb
imul
rcl
(bad)
sbb
mov
mov
cmp
xchg
shr
mov
(bad)
cmc
push
lds
rcl
or
test
gs
scas
xor
shr
fcom
pop
(bad)
fbld
loope
jno
in
rcl
sbb
mov
into
mov
jmp
add
lods
sub
dec
cmps
fmul
xchg
jae
and
pushf
mov
stos
adc
xchg
adc
dec
xor
cli
push
cld
mov
clc
hlt
jge
mov
rcr
retf
repz
loope
test
popa
xor
jle
das
pop
dec
jne
mov
cmp
inc
adc
pop
mov
dec
(bad)
or
adc
in
mov
imul
nop
sbb
dec
ret
mov
push
mov
add
in
shl
aam
ss
inc
popa
cmp
cmps
push
in
mov
and
push
push
fs
jge
sub
aam
mov
dec
inc
(bad)
jl
ds
mov
mov
mov
js
ret
inc
adc
add
add
push
xlat
popf
clc
mov
sbb
sbb
mov
push
xchg
pop
sbb
push
popf
rol
xchg
in
push
daa
rol
lock
sahf
retf
fwait
xchg
xchg
(bad)
outs
fisub
popf
pop
out
outs
or
(bad)
or
loop
in
xor
cli
jo
mov
push
ins
xchg
mov
dec
pop
out
sub
test
lea
add
xor
shl
ror
es
xchg
sar
pop
loop
test
pop
stos
adc
(bad)
movs
mov
jne
sub
sbb
hlt
jmp
mov
cmps
jne
sbb
adc
push
or
mov
and
not
loope
inc
ficomp
ins
xchg
mov
cmp
std
cmps
push
inc
ret
loop
in
adc
push
in
pop
call
mov
adc
rcl
into
and
dec
mov
(bad)
sub
mov
mov
stos
(bad)
cmp
or
imul
(bad)
fisub
les
mov
pop
dec
sbb
cmc
mov
xchg
cmp
jp
or
mov
and
pop
rcr
outs
adc
mov
sahf
fld
mov
test
lock
outs
cmps
add
mov
hlt
add
cdq
xor
xchg
and
pop
dec
sahf
dec
lods
mov
mov
pop
repz
fsub
add
xchg
(bad)
imul
or
das
xchg
xor
dec
add
(bad)
enter
or
add
ss
repz
or
cs
inc
mov
fisubr
dec
cdq
pop
jp
shl
mov
xlat
dec
mov
xchg
pop
ins
cmp
add
mov
daa
stos
xor
push
sahf
dec
fs
pop
dec
rcr
(bad)
mov
or
sar
cmps
test
and
movs
out
add
sbb
add
xor
push
jnp
and
adc
stos
pop
cdq
pusha
outs
add
and
xchg
mov
mov
aas
mov
inc
popf
add
outs
popa
sahf
imul
nop
addr16
(bad)
xchg
(bad)
out
mov
test
cwde
xchg
cmp
mov
dec
test
inc
dec
push
loope
xor
sbb
sub
add
inc
sahf
jmp
adc
(bad)
into
stos
loope
sbb
mov
lds
fist
iret
or
out
pusha
cmp
pop
dec
out
jecxz
mov
mov
sub
push
jmp
fistp
push
mov
or
loopne
daa
and
into
aad
xor
les
test
shl
mov
jle
sbb
pusha
std
dec
cs
mov
mov
lds
mov
dec
movs
dec
push
mov
add
ss
cld
xchg
dec
cmp
mov
shl
push
fistp
mov
or
sbb
std
pop
mov
xor
es
dec
mov
cmps
sbb
push
cmp
add
jbe
data16
das
dec
ins
not
jge
add
add
iret
cmps
mov
jae
cli
cmps
adc
out
int3
mov
mov
rol
(bad)
leave
test
neg
scas
jmp
mov
pusha
and
shl
mov
movs
dec
sub
mov
pop
add
(bad)
sbb
mov
jmp
nop
idiv
(bad)
enter
sub
cmps
xchg
pop
mov
inc
xchg
pop
outs
mov
mov
cmps
cwde
adc
scas
and
or
push
jnp
out
mov
cmp
inc
adc
push
push
shr
sbb
dec
and
mov
sub
cmc
cmp
pop
xor
stos
push
cld
lahf
lods
les
jge
pop
push
loop
out
add
or
mov
loopne
mov
(bad)
popf
stos
es
neg
jl
rcr
mov
inc
jmp
ret
inc
sbb
mov
sub
movs
or
mov
xor
nop
push
aam
push
xchg
fst
inc
pop
sbb
xor
pop
sahf
loopne
or
jecxz
add
std
push
pop
adc
push
dec
adc
mov
rol
and
push
jecxz
pop
pop
cwde
lds
push
add
push
pop
push
xchg
fcomp
pop
pop
add
ja
(bad)
and
cmp
sbb
sub
cli
loope
or
inc
sbb
push
mov
fcmovnbe
inc
sub
xchg
iret
pusha
mov
inc
sub
imul
and
push
div
adc
loopne
dec
or
es
push
pop
push
mov
jp
pop
xchg
nop
ins
pop
xchg
aam
shr
push
sub
out
adc
and
jo
and
dec
dec
rcr
sub
outs
daa
jnp
xchg
dec
jbe
fwait
xchg
aaa
mov
out
jmp
js
test
or
adc
add
push
popa
inc
cmp
xchg
xchg
xchg
push
aad
iret
(bad)
dec
leave
xchg
fs
push
jbe
mov
xchg
not
(bad)
mov
jmp
sbb
push
hlt
sub
push
mov
dec
inc
stc
ret
test
jne
loop
daa
mov
push
add
cmp
and
xlat
lock
call
out
mov
xlat
and
retf
fcmovb
stos
mov
push
sub
mov
lods
scas
sbb
sub
mov
imul
and
popf
in
imul
mov
and
test
add
rcl
(bad)
or
jle
outs
(bad)
add
test
inc
mul
aas
cmc
jne
icebp
es
fwait
jle
jne
je
stos
push
or
ja
fwait
xchg
lahf
push
dec
adc
cwde
jno
rcl
inc
fs
and
aad
and
push
dec
inc
fsub
scas
pop
sub
jmp
call
mov
data16
pushf
outs
int
mov
jmp
es
scas
jg
jmp
sbb
inc
cli
movs
int3
sti
sbb
loopne
sbb
jl
loope
test
adc
addr16
jge
mov
fisubr
cmp
retf
cld
mov
stos
pop
test
(bad)
xchg
pop
sub
push
inc
movhps
call
shr
fidivr
es
push
and
das
xchg
xlat
mov
pusha
ret
mov
xchg
push
daa
xchg
hlt
sub
imul
or
cmps
les
mov
inc
push
push
pop
outs
clc
adc
sub
ins
or
sub
pop
scas
dec
call
inc
das
cwde
or
xor
dec
and
mov
(bad)
jae
ds
dec
jg
ret
adc
leave
mov
lock
xchg
inc
ds
push
add
mov
or
clc
ins
je
xchg
out
aad
pop
jo
mov
jecxz
cwde
cmps
and
fs
adc
fcom
and
shr
popa
cdq
add
or
(bad)
and
stos
clc
push
push
loope
push
or
cld
mov
and
popf
pusha
scas
test
mov
sub
outs
xor
in
neg
aad
test
xchg
mov
clc
push
mov
push
xor
and
sti
jbe
adc
xchg
mov
hlt
shl
jno
xor
pop
jp
call
sub
xor
mov
loope
jnp
adc
push
xor
fcom
adc
mov
push
test
repz
stos
add
loopne
shl
cs
sub
sar
push
gs
lock
dec
mul
mov
sbb
push
push
push
mov
xchg
pop
push
stos
inc
mov
les
jb
in
outs
imul
sub
mov
add
mov
das
push
mov
inc
les
mov
les
sbb
repz
jne
mov
loope
ret
ficom
pop
jbe
pop
into
push
sub
jo
sub
gs
mov
xor
daa
push
inc
cmp
mov
scas
jle
jo
fist
cmp
mov
and
jb
add
inc
inc
sbb
(bad)
jns
mov
daa
pop
pop
mov
pushf
push
cwde
sbb
arpl
and
je
ss
into
ins
xchg
fucomip
int
fwait
sar
xlat
(bad)
clc
gs
sub
mov
sub
fst
scas
ja
scas
mov
popa
int3
sub
ds
mov
imul
mov
int
adc
dec
push
xchg
xchg
mov
nop
xchg
push
xchg
scas
pop
loope
or
popf
push
jg
add
out
inc
scas
cmc
aas
mov
or
ja
sub
push
inc
mov
(bad)
int
gs
test
in
push
dec
mov
ffreep
xor
shl
fisubr
lds
lds
imul
dec
stos
or
outs
out
cmps
xchg
inc
mov
shl
ins
xor
sidtd
jl
add
mov
sub
test
and
out
stos
or
rcr
(bad)
mov
cwde
outs
mov
and
test
repnz
mov
pusha
xchg
adc
dec
loopne
mov
xlat
or
xchg
arpl
cmp
inc
jge
mov
push
mov
and
sbb
mov
repz
push
inc
mov
mov
(bad)
scas
out
mov
sbb
push
ja
hlt
scas
inc
dec
dec
sbb
xor
das
movs
jecxz
pop
adc
push
push
clc
mov
test
xchg
jge
test
fst
xor
cwde
cmps
stos
sbb
bt
fs
sub
jnp
jle
dec
pop
inc
add
popa
cmp
sbb
push
lea
mov
daa
dec
mov
fistp
int3
jnp
add
push
xchg
(bad)
bound
pop
dec
jl
out
xchg
shr
mov
pop
cli
fcomp
das
fwait
pop
lea
sbb
pusha
xor
pop
cmps
int
jmp
xor
(bad)
aad
dec
cmp
movs
scas
inc
bound
inc
jae
gs
jl
loope
dec
mov
test
stos
xchg
fcom
out
in
xor
loopne
xchg
add
dec
outs
sub
cmps
xor
loopne
sbb
mov
ins
test
rcr
pmullw
(bad)
(bad)
ja
ds
or
sub
pop
jecxz
rcl
and
pop
sbb
cmp
cmc
jp
fcom
cmp
mov
xor
gs
mov
cmp
daa
(bad)
mov
das
ret
xchg
sub
dec
aas
in
test
and
xlat
sbb
add
fwait
js
daa
mov
ror
mov
test
lods
and
test
sub
fmul
lahf
(bad)
push
inc
pop
ss
(bad)
sbb
or
fidivr
sbb
into
inc
dec
mov
or
cmp
lods
sti
mov
pop
int
cmp
xor
les
pop
inc
mov
dec
jl
jno
sub
jl
sbb
movs
(bad)
mov
pop
pop
cli
xor
xor
pop
dec
sub
enter
mov
jge
mov
shl
into
dec
ss
rcl
and
push
mov
and
push
idiv
dec
inc
fist
clc
mov
jecxz
fwait
addr16
add
mov
push
lds
mov
ret
ret
je
pop
inc
sub
or
mov
inc
fcom
shr
and
xchg
test
out
jmp
push
scas
pop
in
mov
lock
fisttp
arpl
xor
dec
pushf
or
pop
bound
mov
sub
jno
std
cmps
(bad)
jp
shl
movs
inc
pop
xchg
sub
xchg
adc
out
bound
dec
xor
iret
mov
push
ds
clc
xchg
jne
out
addr16
push
lods
or
jns
daa
or
adc
xchg
mov
lds
inc
je
in
jns
jecxz
lock
retf
sbb
jp
or
test
and
and
pop
int3
cld
jns
inc
frstor
xor
into
ja
es
aaa
aaa
in
inc
pushf
jp
leave
popa
mov
out
inc
sub
adc
imul
xchg
jnp
movs
xchg
xchg
out
xchg
jb
retf
(bad)
add
bound
jb
mov
shl
push
xor
retf
cmp
std
jo
loop
pop
dec
xor
xchg
sbb
int3
in
mov
ror
sub
mov
mov
mov
pushf
pop
(bad)
movs
push
imul
fdiv
sbb
jmp
icebp
jae
dec
fadd
scas
stc
(bad)
cmp
sub
ins
lock
ss
jno
fld
cs
mov
inc
idiv
cmp
push
jns
popa
ret
sub
in
or
data16
das
repnz
data16
out
xchg
cmc
mov
jecxz
or
push
sub
stc
or
out
pop
mov
xchg
push
outs
or
jb
gs
aad
jnp
popf
movs
bound
sub
dec
pop
jg
test
mov
mov
jl
(bad)
das
call
inc
jo
arpl
inc
mov
fsub
and
in
std
(bad)
push
test
or
or
std
mov
or
popf
xor
arpl
mov
pushf
dec
mov
cmps
pop
sahf
jnp
xor
cs
je
ins
sbb
cs
leave
fstp
cwde
pop
jmp
retf
and
cmp
xchg
fbstp
ret
mov
sub
xchg
dec
in
sbb
into
arpl
mov
(bad)
ds
call
sahf
bound
inc
sub
mov
push
shr
das
into
jbe
jns
outs
fsubp
aaa
add
retf
fwait
jmp
sbb
std
or
adc
sub
ss
mov
sbb
inc
mov
xor
lds
mov
inc
daa
cmc
mov
mov
pop
stc
mov
push
movs
mov
fiadd
stc
stos
out
inc
rcl
sub
dec
iret
xor
mov
or
pop
ins
xchg
arpl
add
jp
aas
movs
(bad)
rcr
loope
mov
aaa
pop
jge
fucomip
lods
or
or
mov
xor
pop
xchg
dec
daa
dec
xchg
mov
mov
sub
loop
push
xchg
add
dec
xchg
xlat
jle
or
sbb
sbb
test
jo
pop
test
aam
inc
jb
push
mov
adc
mov
test
rcr
mov
shl
in
mov
pop
or
loope
sub
jmp
sti
push
jno
push
scas
add
div
jmp
loope
cmps
std
jo
call
inc
cli
push
mov
(bad)
fsubp
push
lods
cmps
mov
inc
xchg
loope
lds
xchg
adc
mov
pop
or
push
ret
or
lds
(bad)
or
ds
outs
push
pop
in
rcr
mov
xchg
sbb
inc
sub
cmp
lds
pop
clc
retf
cmp
(bad)
fsub
lods
pop
cli
lds
push
jp
and
stos
inc
xlat
inc
mov
pop
xor
jg
jne
div
mov
repnz
(bad)
dec
in
xor
fsub
aaa
pop
sub
sti
push
lea
mov
ins
fisub
lds
into
dec
fucom
xchg
mov
fs
retf
adc
ret
in
js
cmp
xchg
int
out
arpl
adc
jbe
jnp
xchg
pop
or
jl
inc
pop
add
in
loopne
jbe
dec
aad
mov
pop
dec
les
lahf
dec
cmc
out
xchg
rcl
call
lods
scas
cmp
hlt
(bad)
lods
add
fist
call
out
xchg
test
call
int
in
popf
pushf
cmc
mov
jecxz
push
fstp
es
jb
imul
sub
imul
ins
jns
popf
jns
pusha
push
xor
pop
dec
enter
dec
or
sub
xor
ficomp
jbe
sar
pop
out
pop
or
fistp
fwait
and
and
jnp
ins
stos
and
out
imul
add
xor
cmp
jae
test
daa
(bad)
movs
retf
ror
inc
loope
jl
dec
push
test
scas
js
data16
les
in
fild
mov
sar
push
aam
into
mov
les
sub
out
dec
fmul
sbb
mov
int3
ja
xchg
add
pop
dec
vpaddusb
daa
out
dec
add
shl
fadd
mov
aas
pop
cmc
jbe
in
xlat
in
pusha
movs
scas
test
test
mov
outs
(bad)
lahf
push
nop
daa
ret
and
enter
ss
sar
push
pop
mov
in
jne
pop
mov
mov
popf
aad
mov
loopne
retf
mov
push
cmp
mov
(bad)
popa
arpl
xor
xor
sub
and
cli
dec
inc
sub
push
stos
adc
gs
inc
stos
les
in
arpl
ret
xor
enter
mov
jbe
xchg
pushf
dec
cmc
mov
sbb
hlt
xchg
cli
jp
hlt
and
retf
jge
jg
lods
mov
lds
in
loopne
shl
lods
(bad)
sub
jmp
push
mov
(bad)
aam
adc
out
arpl
mov
out
push
inc
sti
sbb
mov
push
cwde
push
loope
arpl
rcl
sbb
dec
push
into
xchg
ja
sbb
cmps
in
adc
and
add
fnstsw
mov
mov
xor
mov
add
shr
adc
xor
jmp
pop
sbb
add
into
bound
leave
mov
jg
cmps
xor
xchg
movs
popa
mov
pop
shl
pop
lahf
(bad)
sub
sbb
hlt
scas
retf
or
adc
bnd
je
lds
(bad)
pop
ins
push
xor
clc
nop
shr
clc
and
out
or
fsub
inc
mov
lods
cld
ja
or
inc
out
jo
inc
fist
out
or
sbb
ficom
xor
cld
mov
test
les
iret
ins
mov
loop
push
mov
sbb
(bad)
sub
and
mov
push
jnp
sti
mov
popa
jp
pop
push
into
scas
je
test
xchg
inc
out
xchg
iret
sub
jge
mov
dec
out
mov
and
lods
mov
shl
xchg
adc
push
iret
and
pushf
push
js
mov
outs
jnp
adc
sbb
add
dec
jnp
push
jnp
jbe
add
jnp
mov
inc
int
mov
cmp
pushf
popa
sub
adc
enter
lahf
cdq
dec
out
jno
jo
xor
jmp
jne
and
clc
push
(bad)
or
push
fwait
es
pop
mov
add
mov
cmp
jmp
mov
jne
retf
loope
sbb
lods
cmps
les
adc
mov
mov
mov
pushf
(bad)
pop
mov
xchg
cmp
or
clc
retf
xor
inc
sub
adc
(bad)
mov
adc
pop
int
mov
test
addr16
test
popa
jnp
lods
xchg
ins
pop
or
mov
(bad)
je
mov
inc
shr
xchg
jns
popa
xchg
jmp
gs
fisttp
sbb
sahf
in
out
pop
mov
outs
jmp
std
aad
push
stc
hlt
lea
mov
push
fimul
mov
mov
loope
xchg
xor
xchg
inc
xlat
dec
shl
popf
(bad)
sbb
jb
rcr
xchg
cmps
sub
lods
aaa
mov
idiv
clc
add
je
movs
pusha
dec
xchg
sar
sub
xor
(bad)
neg
call
(bad)
loopne
and
jmp
jl
jecxz
es
sbb
jp
add
xchg
movs
ins
jecxz
xor
repnz
cmp
cs
pushf
dec
std
pop
and
sahf
or
loope
xlat
ret
jmp
push
lahf
pop
dec
das
pop
xlat
push
sub
gs
test
ret
mov
mov
test
stc
test
cmps
dec
stc
dec
xor
mov
mov
adc
iret
push
xlat
mov
and
(bad)
cmc
jne
sub
sti
fnsave
and
sub
test
int3
aaa
(bad)
int
jl
mov
xor
mov
sbb
int3
lods
pop
adc
cmp
jecxz
xor
test
cmc
std
ror
cmp
xor
jl
jne
push
pop
xchg
ja
and
mov
pop
add
pop
jnp
or
enter
mov
mov
push
xchg
adc
sar
iret
popf
(bad)
pop
push
fs
inc
xchg
push
outs
dec
mov
test
hlt
cmp
inc
cdq
cdq
xchg
and
pop
lods
jp
xchg
cmp
xchg
cmp
retf
mov
sahf
and
mov
inc
inc
mov
cmp
adc
les
push
arpl
movs
or
loop
mov
mov
mov
mov
aas
sbb
cmp
inc
mov
mov
aam
push
cmps
or
scas
stos
dec
cmc
xor
ins
inc
push
aas
mov
loop
sbb
in
xor
ficomp
sbb
imul
xor
dec
xchg
jbe
sbb
and
mov
repz
stc
push
(bad)
test
pop
and
ja
xchg
mov
sub
inc
mov
jnp
test
imul
push
jno
fstp
lea
test
push
inc
inc
imul
aam
mov
int
push
or
mov
lahf
cmp
jmp
adc
shl
mov
mov
out
add
and
dec
cmovle
(bad)
mov
iret
jecxz
out
sub
inc
sub
rol
idiv
add
stos
xor
jae
sti
pop
push
into
cmp
xor
sbb
and
adc
mov
(bad)
jecxz
cmp
xchg
fwait
movs
and
not
xor
int
adc
inc
fdiv
bound
outs
out
jge
mov
popf
xor
lea
sbb
xor
shl
ins
aaa
loopne
jl
xchg
ficom
xor
xchg
pop
adc
push
push
xor
push
inc
mov
pop
in
fisttp
in
fmul
mov
gs
xor
sbb
lods
xchg
cmc
add
repz
sbb
inc
daa
or
mov
loope
rcl
inc
cmps
jns
idiv
xor
pushf
ins
mov
add
mov
sub
aam
or
jg
inc
dec
clc
std
jbe
pop
push
adc
lock
mov
dec
or
arpl
mov
push
(bad)
mov
jmp
out
pop
xchg
ds
in
or
outs
aas
sub
add
jecxz
(bad)
shl
sbb
lds
mov
push
mul
mov
enter
jno
ds
push
mov
(bad)
and
int
pop
daa
mov
das
lahf
inc
cld
adc
(bad)
out
or
mov
(bad)
lds
in
push
and
fbstp
popf
inc
in
mov
add
inc
push
out
test
xchg
mov
cmps
mov
cmp
add
sub
jmp
js
dec
jnp
fwait
jo
test
or
nop
jb
sbb
nop
jne
pop
int
dec
inc
lock
xchg
mov
push
cmp
in
retf
push
or
rcl
mov
mov
clc
cmc
dec
aaa
adc
push
xor
mov
sbb
push
mov
idiv
inc
test
push
cmp
and
cmps
mov
adc
xchg
mov
in
loope
dec
push
sub
into
aaa
fwait
push
adc
ins
mov
loopne
test
lock
push
mov
pop
cmp
(bad)
and
mov
out
rcl
adc
inc
inc
or
sub
loop
cmp
mov
lods
adc
arpl
aaa
xor
and
lods
sbb
mov
jmp
std
dec
mov
xor
mov
ror
cmp
aam
cmp
mov
out
adc
mov
cwde
je
mov
push
dec
jecxz
arpl
cmp
xchg
jmp
mov
imul
or
xor
mov
test
cmps
add
in
(bad)
pop
imul
std
cmp
push
cld
sub
fcmovnu
pushf
mov
ss
out
out
pushf
xchg
or
adc
mov
fild
int
mov
les
repnz
xor
arpl
retf
shl
jno
xchg
xchg
clc
adc
(bad)
psubusw
dec
imul
(bad)
lods
add
cmp
imul
dec
sbb
pushf
cmp
(bad)
mov
or
jg
cmp
and
mov
or
lock
or
ins
fwait
or
je
adc
mov
adc
aad
dec
push
fwait
shl
shr
pushf
xor
and
mov
stc
data16
inc
and
(bad)
and
lods
lods
rol
movs
pop
sub
push
fmul
ins
ss
leavew
xchg
dec
adc
out
call
repz
xchg
jge
fs
shl
xchg
and
ret
les
or
cli
cwde
std
int
xor
adc
popa
jo
mov
jp
pop
inc
rcl
sub
dec
and
jns
call
test
inc
hlt
jb
add
test
test
(bad)
push
push
jno
scas
repnz
stos
lea
xor
scas
fstp
jnp
xchg
in
out
jae
xchg
popf
cdq
push
or
test
adc
les
push
jns
xchg
xchg
add
jg
jo
fdivr
mov
cwde
mov
shrd
sbb
inc
addr16
gs
sbb
mov
jl
mov
dec
rol
jb
lds
sbb
loop
out
jmp
popa
shl
jne
or
mov
mov
movs
cdq
test
xor
jbe
push
sbb
sbb
ins
cmp
pop
pop
adc
mov
fmul
push
add
xchg
cmp
daa
push
iret
mov
sub
add
addr16
sub
lods
adc
aad
xlat
jns
fisubr
(bad)
icebp
jle
push
std
cmp
pop
cmp
pushf
(bad)
push
cli
and
cmp
adc
ret
mov
aad
pop
cs
jmp
mov
and
hlt
adc
fs
pop
dec
adc
jp
ds
data16
lea
mov
ret
ins
jl
sbb
cmp
or
mov
outs
(bad)
push
out
fcmovbe
push
mov
fcomip
(bad)
dec
xor
dec
fisttp
cmc
iret
iret
inc
or
cs
adc
push
push
test
je
lea
pop
mov
jns
test
mov
lahf
cmps
test
addr16
xor
mov
mov
add
mov
std
retf
mov
call
sbb
ds
(bad)
(bad)
jge
mov
mov
dec
add
cmp
inc
inc
dec
gs
fdivr
in
push
lock
or
cmp
dec
ja
lea
mov
sub
push
inc
jmp
(bad)
out
out
stos
pop
inc
out
shl
ja
retf
mov
js
imul
mov
pop
or
shl
add
push
push
(bad)
or
cmp
ret
ret
fstp
popf
js
test
inc
stos
add
add
xor
or
cs
lods
pcmpgtb
imul
push
stos
stc
adc
or
cmp
mov
pop
nop
xchg
test
je
sub
pop
push
int
aaa
adc
or
out
xchg
movs
push
sub
sub
add
mov
mov
outs
and
inc
xor
mov
retf
fsub
retf
sub
test
jmp
or
ins
lds
sub
leave
pop
mov
mov
mov
jne
clc
rcl
sub
inc
and
jle
or
mov
mov
stos
adc
outs
inc
cmp
(bad)
stc
or
stc
xor
pop
xor
sbb
lock
ss
xchg
in
and
aaa
push
test
das
dec
in
icebp
icebp
cli
mov
xchg
push
outs
pop
sbb
pop
inc
sbb
cmp
xchg
popf
mov
(bad)
sahf
xor
inc
cs
pop
sbb
mov
enter
(bad)
daa
xor
test
loopne
jo
out
pushf
and
cs
mov
call
cmps
clc
retf
adc
sub
xchg
enter
rol
push
mov
repnz
sahf
je
lea
and
and
loop
push
push
shl
mov
and
cmp
inc
jecxz
enter
xchg
aaa
icebp
lea
xlat
lods
and
mov
sbb
dec
(bad)
mov
and
(bad)
fcmovnb
push
push
xchg
push
out
in
(bad)
xor
dec
imul
fs
adc
jge
mov
fdivr
inc
test
adc
push
add
ss
adc
jno
mov
adc
pop
retf
jg
adc
xchg
hlt
fnstcw
test
adc
int3
pop
addr16
adc
out
jae
mov
fsubr
mov
movs
jmp
sub
mov
movs
(bad)
outs
fsubr
call
pop
loop
mov
mov
jecxz
or
or
leave
ja
cmps
adc
ins
movs
or
test
adc
idiv
mov
and
fwait
adc
pop
lods
push
cmp
outs
and
jecxz
jmp
cmc
push
adc
inc
add
mov
mov
sbb
in
(bad)
hlt
mov
xchg
or
sub
and
add
in
dec
and
dec
cmp
mov
std
mov
dec
retf
adc
adc
fs
xchg
cmp
push
sub
adc
lock
ins
push
adc
outs
dec
stos
hlt
js
ffreep
outs
aas
int3
xchg
scas
dec
mov
push
push
(bad)
call
int3
pop
pop
outs
in
sub
movs
pop
mov
outs
xchg
dec
lds
pop
jmp
(bad)
das
int
movs
(bad)
sub
push
add
scas
into
jge
scas
xchg
mov
jle
test
jle
lock
sbb
(bad)
jp
or
push
aam
push
dec
loope
shl
mov
fwait
add
shl
pop
or
clc
xor
mov
fistp
mov
ret
xor
sbb
in
pop
adc
outs
pop
add
test
cmps
shl
and
cmp
push
out
jb
jg
stos
adc
stos
mov
add
jp
inc
arpl
push
out
ins
(bad)
mov
mov
jns
sbb
sbb
mov
out
cmp
retf
lahf
push
(bad)
sti
jae
dec
add
pop
push
pop
cwde
or
sub
in
sub
into
mov
pop
mov
out
shl
ret
cmp
out
pushf
pop
fcom
int3
push
out
ja
mov
cmp
mov
inc
sbb
sbb
and
sti
and
fld
nop
add
and
add
outs
mov
neg
mov
pusha
or
dec
jbe
imul
cs
inc
mov
jecxz
inc
push
adc
sub
ins
nop
dec
or
xchg
jmp
mov
(bad)
mov
cs
cmp
std
int3
pusha
mov
mov
pop
cmp
out
sbb
cmp
das
daa
inc
sbb
push
dec
pop
or
shr
scas
ret
adc
jbe
sub
mov
xchg
lods
add
outs
inc
clc
imul
cmps
mov
adc
pop
cld
xchg
mov
addr16
push
or
mov
scas
out
push
scas
sub
xchg
(bad)
jge
adc
sti
shl
addr16
ret
add
push
push
mov
mov
or
lods
ret
and
popa
test
call
push
mov
not
lds
not
shl
out
stos
rcl
xchg
jecxz
movs
xchg
pop
(bad)
cmp
mov
popa
jno
pop
lods
xchg
cmc
fsubr
sub
sahf
shl
mov
test
jmp
test
inc
fidivr
popf
push
push
packssdw
add
int
loopne
stos
daa
xor
ss
out
or
call
ja
in
popa
imul
test
mov
bnd
mov
dec
inc
mov
int
sbb
(bad)
push
push
ror
xchg
ss
stos
lds
je
test
and
jnp
inc
sar
mov
xor
ss
jle
or
jge
push
or
pop
lds
sbb
mov
sub
mov
xchg
sub
ins
jbe
xchg
mov
adc
push
adc
xor
mov
mov
or
sub
add
sub
xchg
mov
add
push
nop
shr
mov
stos
ins
out
mov
xor
ret
xor
adc
out
pusha
shl
pusha
jg
mov
outs
lock
ins
loope
pop
or
movs
sbb
fistp
cmp
ins
sbb
jae
push
aaa
sbb
repz
ss
inc
dec
pop
mov
xchg
sahf
(bad)
repz
mov
jle
and
add
xchg
jg
lods
xchg
sbb
xor
fbld
cmp
cmp
push
in
jmp
call
pop
sub
lds
mov
xchg
mov
ja
mov
jbe
ins
jae
sahf
int3
pop
jno
or
sbb
xor
and
cdq
es
scas
not
sub
mov
test
sub
mov
mov
loop
shl
retf
add
xchg
xlat
xor
push
pushf
js
xchg
sahf
(bad)
adc
sar
push
or
and
retf
in
jge
mov
cmps
sbb
std
jnp
pop
mov
loope
out
inc
lahf
inc
sub
pop
push
lods
push
xchg
dec
sub
mov
int
ja
push
cmp
pop
imul
cmp
fs
bound
(bad)
jmp
ins
js
fnsave
xor
js
sub
jecxz
jg
sbb
mov
mov
out
push
jb
jg
and
xor
les
(bad)
jmp
adc
mov
into
push
cdq
cmps
sub
jmp
jmp
stos
mov
fldenv
pop
(bad)
pop
adc
cmp
xchg
clc
add
jno
iretw
(bad)
in
in
pop
out
std
shr
jo
mov
je
xor
loopne
shl
fist
in
jl
popa
and
dec
ss
inc
inc
sar
adc
dec
xchg
xchg
out
popa
sbb
test
sub
pop
into
popa
lds
pop
and
in
mov
popa
xchg
mov
and
adc
arpl
test
jne
or
std
cld
add
mov
cld
in
mov
mov
dec
add
push
ficom
mov
jo
sub
or
adc
nop
xchg
iret
push
sahf
and
push
mul
sub
mov
loope
movs
loopne
(bad)
icebp
int
idiv
or
push
mov
cmp
sahf
xor
cmp
xchg
ret
jo
jae
xchg
inc
repz
mov
fsubr
pop
std
sbb
cmp
pop
neg
add
aad
loop
outs
and
in
out
cmp
lahf
adc
push
and
ds
imul
iret
sbb
lahf
pop
inc
int3
push
mov
repnz
scas
stos
mov
dec
(bad)
leave
xchg
aam
mov
cwde
mov
jmp
xor
repnz
mov
test
test
push
cli
stos
(bad)
cmp
add
adc
in
retf
iret
xchg
shl
mov
cmps
cmp
shl
lods
mov
add
addr16
cmps
fiadd
sbb
xchg
xor
add
or
sbb
cs
sub
jmp
dec
mov
xchg
adc
mov
fldz
sub
xchg
push
sub
xchg
mov
inc
pop
imul
mov
sbb
inc
or
popa
es
fwait
sub
out
dec
push
ret
jge
and
fisubr
adc
push
push
fdiv
mov
jmp
mov
pushf
mov
outs
xchg
adc
das
pop
pop
out
jne
mov
lds
in
ficomp
jle
sbb
(bad)
sub
es
enter
push
ror
rol
jae
lds
in
xchg
rcr
sub
jnp
adc
jecxz
mov
retf
aam
pop
push
ret
or
neg
movs
ret
cli
xchg
sub
push
sub
push
push
stos
xchg
scas
dec
lds
lock
add
cmp
nop
aam
jbe
push
mov
add
imul
shl
cmps
inc
das
loope
in
vpaddq
xchg
and
mov
test
lock
sbb
ds
mov
rol
icebp
mov
xor
pop
arpl
sbb
sub
mov
test
nop
aaa
push
mov
inc
jno
and
clc
outs
cmp
mov
push
jl
add
aas
sbb
xor
and
pop
das
mov
push
ficomp
out
mov
jb
cld
pop
cwde
dec
hlt
ins
adc
and
mov
ficomp
dec
shl
pop
push
les
dec
xlat
jnp
loopne
push
mov
mov
ja
daa
call
cli
push
jbe
pop
add
cs
xor
push
lahf
sub
mov
mov
jns
inc
lahf
cmps
aam
ret
mov
movsx
scas
xor
mov
or
cli
pusha
push
xor
sbb
fldcw
daa
cmp
fnsave
scas
scas
push
mov
pop
nop
out
xor
and
xor
jge
jns
bound
scas
sub
stos
sahf
inc
outs
add
cmp
ins
loopne
movs
push
cwde
iret
push
sbb
mov
inc
movs
mov
mov
rcr
add
bound
lods
mov
cs
loopne
(bad)
aas
xchg
pop
scas
lods
xchg
(bad)
pop
sti
sbb
mov
and
mov
and
and
fadd
repnz
mov
pop
adc
cmp
loopne
int3
inc
pop
int
push
mov
ret
mul
xor
rcr
aam
imul
or
adc
pop
out
mov
pusha
push
xchg
push
and
inc
adc
inc
xlat
fwait
fs
xchg
add
sbb
or
sti
dec
ret
adc
fwait
jbe
mov
mov
sbb
sbb
lea
push
xchg
(bad)
repnz
enter
push
daa
in
(bad)
mov
pop
xchg
cmp
cmp
or
jmp
pop
pushf
lahf
xchg
fsub
jl
xchg
in
aas
mov
inc
push
fcmovnu
xor
jge
adc
popa
repz
jp
sbb
mov
add
jb
adc
ins
dec
inc
movs
sub
cs
(bad)
das
imul
mov
shl
dec
fsub
in
mov
cwde
jp
push
sbb
stos
inc
repz
dec
pusha
mov
xor
mov
and
(bad)
sti
mov
pushf
icebp
fwait
jg
push
ins
dec
in
dec
xchg
nop
mov
or
jbe
push
stc
repnz
hlt
icebp
sbb
xchg
xor
cmp
je
repnz
mov
stos
mov
iret
es
(bad)
adc
dec
aam
test
jle
sub
test
adc
std
mov
es
icebp
icebp
cli
loop
jecxz
hlt
arpl
(bad)
into
cwde
(bad)
push
ja
les
push
cmps
pop
push
lahf
ret
adc
(bad)
xchg
cmp
scas
xor
xchg
jbe
movs
add
(bad)
adc
or
cmc
xchg
mov
iret
push
jmp
test
jae
stc
sub
ins
std
cld
scas
inc
out
sub
dec
sar
in
mov
push
cwde
push
fst
jne
fsubr
jb
push
jb
je
xchg
popa
imul
mov
inc
adc
jnp
adc
shl
jno
pop
in
mov
push
inc
test
mov
sub
xor
xchg
test
not
xchg
xchg
sub
ins
pop
or
xchg
cmp
fwait
hlt
cmp
xchg
outs
dec
or
mov
jns
push
ror
loopne
pop
lds
mov
mov
xchg
dec
jl
lahf
dec
inc
jl
les
mov
pop
in
fisttp
or
(bad)
out
adc
addr16
mov
mov
popf
les
out
sbb
pop
pop
pop
xor
push
jp
push
add
(bad)
fidiv
and
repz
fs
(bad)
xor
pushf
mov
jecxz
jmp
mov
and
out
rcr
imul
std
stc
f2xm1
in
mov
repnz
inc
xchg
sbb
push
push
inc
inc
sbb
inc
addr16
add
sbb
mov
push
test
shr
popf
das
fdiv
test
sub
dec
jbe
pop
movs
les
add
mov
dec
jg
fwait
das
jns
xor
inc
lea
push
sbb
mov
gs
ret
xchg
ds
bound
add
(bad)
or
(bad)
mov
pushf
fstp
cmps
sub
dec
mov
add
out
retf
adc
out
ret
push
xor
fwait
xchg
inc
pop
sbb
inc
inc
adc
mov
out
xchg
push
hlt
fstp
mul
rcl
dec
shl
sahf
cmp
cs
hlt
repz
test
sbb
int3
inc
xchg
sahf
imul
jb
add
mov
or
dec
xor
jge
call
mov
ins
imul
sahf
lea
addr16
and
in
sub
sub
in
mov
and
jns
xor
in
hlt
jbe
adc
dec
mov
call
mov
push
pop
jae
jae
mov
pop
or
clc
mov
dec
int3
or
mov
mov
or
(bad)
clc
es
test
(bad)
lock
fwait
jmp
popf
xchg
(bad)
xchg
push
ret
xor
mov
sbb
fidiv
sbb
cmp
sar
xor
adc
xlat
out
(bad)
push
jecxz
iret
jg
pusha
out
cmp
shl
das
(bad)
jmp
push
movs
add
lea
loope
shr
sbb
or
mov
add
xchg
ret
outs
add
shr
xor
cmp
or
and
and
jl
in
cmp
scas
and
test
fild
sbb
add
rol
cdq
jecxz
popw
out
inc
mov
fild
adc
pusha
mov
scas
rcl
pop
out
cdq
cmp
leave
jb
pushf
stos
jbe
mov
xlat
add
test
out
loop
mov
je
jg
int
push
rcl
inc
sub
stos
adc
push
icebp
pop
fisttp
jp
sbb
inc
sahf
lds
aad
mov
xchg
cs
in
out
xchg
lea
bound
leave
dec
pop
mov
and
aad
ds
lods
push
imul
jmp
or
or
xor
(bad)
fisttp
fcomp
stos
cmp
mov
scas
je
pop
cli
ror
add
leave
cmp
iret
js
pusha
rcl
ret
fwait
jge
test
retf
fild
xchg
fnstcw
push
xchg
loopne
and
ret
movs
mov
outs
icebp
mov
sbb
call
lods
adc
sbb
cmp
sub
pop
jmp
xchg
push
scas
xor
mov
xor
adc
xor
int3
cmp
inc
xchg
mov
mov
push
xchg
or
mov
push
dec
gs
cwde
mov
inc
mov
mov
mov
cmp
ja
fiadd
inc
outs
test
fdivr
xchg
aad
mov
(bad)
inc
stos
int
clc
mov
mov
outs
jmp
adc
clc
ficom
cwde
sub
inc
pop
jns
cmp
xor
outs
cwde
sub
iret
sub
dec
pop
jae
nop
push
inc
dec
ret
scas
dec
mov
cmc
xlat
lahf
sbb
inc
xor
xlat
jmp
je
outs
xchg
sahf
ffree
push
adc
cmps
add
xchg
cli
jge
jnp
adc
jecxz
test
or
bound
repnz
(bad)
ds
mov
cld
add
jns
adc
inc
gs
sub
or
xor
push
mov
aad
idiv
in
(bad)
outs
cmp
in
clc
std
lahf
iret
adc
push
lods
xchg
mov
pop
out
jae
lock
cdq
stc
aad
cld
std
xchg
fwait
mov
pop
cdq
(bad)
inc
test
dec
mov
xor
jp
xchg
add
je
loop
push
es
mov
xor
cs
mov
xchg
inc
mov
loopne
inc
inc
push
add
xor
movs
inc
sar
int3
cs
dec
mov
jnp
mov
push
dec
loop
je
in
jp
push
leave
mov
repnz
cmp
std
push
ret
mov
inc
(bad)
jl
pop
div
dec
pushf
mov
sub
mov
fcom
inc
xor
fcomp
repz
shl
div
mov
adc
dec
sub
pushf
mov
mov
cli
scas
jmp
xchg
gs
and
pop
sub
neg
clc
fs
push
js
aam
sbb
(bad)
dec
and
inc
xchg
ins
add
jmp
data16
cmp
add
mov
sbb
xchg
ss
xor
xchg
fisttp
(bad)
jae
std
shl
push
xchg
in
inc
imul
cmp
scas
inc
mov
or
or
cmps
aam
dec
mov
fwait
jle
out
repz
stos
repnz
xchg
retf
pop
int3
cdq
fwait
jno
push
dec
add
and
xchg
mov
xor
fld
adc
scas
imul
ret
or
push
add
or
sbb
lods
cmps
pop
test
push
pop
or
inc
jg
stos
les
mov
mov
out
mov
inc
xchg
mov
pop
inc
xor
xor
push
dec
push
cmp
call
jmp
mov
(bad)
add
out
mov
aas
jne
pop
shl
push
in
sahf
loope
sub
and
fs
call
in
sbb
add
fild
fmul
outs
stos
or
lea
mov
push
and
mov
iret
aas
cmp
icebp
pop
lea
dec
cmp
adc
stos
jns
jge
jmp
pop
or
(bad)
rcr
pushf
call
cmp
out
out
sti
cdq
shl
pushf
fdivr
jne
sub
mov
cmp
cmp
xlat
jnp
aam
jle
pop
inc
jae
add
jmp
outs
mov
div
jecxz
popa
sub
ret
xchg
std
jmp
shl
xchg
and
push
inc
inc
mov
loope
ins
mov
rcr
xchg
pop
std
cld
push
jns
and
xchg
shl
repz
dec
leave
(bad)
retf
hlt
xchg
icebp
jp
xchg
sub
inc
(bad)
enter
lds
adc
sub
icebp
imul
aaa
xchg
jge
inc
jp
mov
sub
dec
test
push
adc
mov
popa
jb
ret
ror
push
iret
or
push
dec
(bad)
out
lods
push
cmp
inc
ret
imul
std
ss
jae
cs
call
neg
movs
fsub
inc
or
jo
es
xchg
ins
fstp
fwait
inc
pop
jne
imul
ins
fistp
call
in
ror
rol
popf
je
push
mov
shr
jnp
js
sbb
scas
fs
sar
jnp
push
div
std
aaa
inc
and
mov
mov
dec
(bad)
push
push
repz
mov
jmp
pop
outs
out
push
shl
jbe
rcl
pop
iret
push
imul
es
popf
shr
mov
setnp
mov
ficomp
jecxz
pop
out
rol
dec
mov
push
int
popa
add
daa
call
fnstenv
inc
jo
jne
int
movs
aad
dec
sbb
repz
getsec
inc
int3
pop
fwait
into
adc
lahf
mov
icebp
cmp
int3
push
sbb
inc
bound
in
inc
jbe
mov
dec
into
ret
test
or
mov
mov
and
mov
push
imul
aam
sbb
ret
pushf
test
lahf
stc
mov
mov
in
inc
arpl
stc
add
shl
(bad)
fs
ret
inc
dec
aaa
push
jnp
and
jg
pop
imul
cmp
or
pop
(bad)
aam
dec
and
icebp
ret
xor
out
pusha
arpl
mov
push
in
or
jns
or
or
pop
repz
sbb
and
outs
(bad)
push
push
movs
inc
int3
add
cmp
retf
xchg
out
aas
push
cmp
sbb
xchg
push
mov
arpl
xor
popf
xor
mov
sbb
dec
sbb
push
pop
xchg
sbb
sub
shl
rol
sbb
push
repz
jge
(bad)
imul
push
es
test
jp
ins
push
es
adc
call
into
sbb
cmps
daa
mov
add
dec
xchg
add
add
xchg
sub
cmp
out
mov
cld
jns
inc
mov
pop
push
mov
popa
jmp
inc
movlps
mov
pushf
jno
add
repnz
popa
mov
stc
(bad)
outs
sbb
add
and
mov
add
fild
pop
(bad)
lds
sar
enter
leave
xchg
int3
loop
daa
and
adc
out
push
pop
mov
jo
(bad)
call
fisttp
popa
jb
lahf
les
push
and
push
push
lods
aaa
or
in
dec
popa
shr
inc
sar
xchg
sbb
pushf
pusha
add
push
inc
push
sbb
mov
repz
add
ret
mov
cmp
enter
data16
or
cmp
shr
mov
call
dec
in
mov
cmc
xchg
or
lods
mov
sub
mov
fbstp
or
lea
shl
adc
addr16
je
cdq
xor
push
mov
mov
xlat
(bad)
mov
jno
lods
cmp
inc
nop
xchg
pop
sbb
mov
lods
scas
das
mov
je
xor
fild
jmp
dec
test
(bad)
xchg
in
test
lahf
xlat
sub
lea
jge
xchg
jge
inc
mov
push
lods
daa
xor
ja
pop
or
inc
hlt
ss
adc
mov
test
and
sahf
push
jmp
push
mov
or
fdivr
movs
pop
int
ret
dec
jo
or
ficom
es
dec
jae
sbb
mov
popf
shr
push
mov
mov
pop
ret
das
bound
xchg
sbb
mov
or
xor
fstp
mov
cmp
push
pop
jge
mov
pop
das
ins
push
inc
mov
out
pop
xor
inc
xchg
aam
mov
outs
cld
dec
push
jae
dec
mov
loop
dec
icebp
mov
mov
push
movs
add
cmps
imul
ins
sub
imul
mov
ins
pop
jp
xor
jmp
adc
in
(bad)
fsubr
jne
cmp
xor
ja
push
push
fnstsw
ds
popf
mov
push
repnz
and
test
and
rol
mov
hlt
mov
bound
inc
jp
jle
sub
mov
mov
add
mov
repnz
inc
lods
jge
xchg
leave
rcl
in
or
cmp
mov
cld
push
aam
sbb
sar
sub
fld
jbe
pop
cmp
push
and
pop
sub
or
jae
cmp
cmps
fldcw
mov
cs
popf
out
dec
or
pop
inc
aam
call
mov
pusha
int
sub
imul
ins
in
mov
push
push
into
sub
jb
lahf
push
xchg
sub
xor
xchg
ret
mov
adc
sub
in
dec
dec
pushf
jl
fmul
mov
lea
mov
push
aad
sbb
add
xchg
imul
into
fisubr
std
pop
cs
push
jle
shl
outs
xchg
pushf
jp
cli
mov
(bad)
in
rcl
inc
nop
in
shr
xchg
adc
lods
std
retf
sub
ins
lods
aas
fisub
push
or
sub
ds
in
ficom
repnz
push
jmp
pop
fs
push
push
dec
xchg
mov
xor
pop
(bad)
cld
mov
jmp
retf
and
add
pop
loop
rcl
xor
and
je
add
mov
cld
idiv
pop
sahf
je
sbb
and
jno
scas
je
push
mov
xor
or
xor
ins
cmp
dec
inc
stc
and
inc
pop
data16
and
into
xor
adc
mov
fcom
push
movs
mov
rcl
jge
pop
adc
jne
pushf
mov
mov
mov
outs
fsub
jg
xchg
ret
dec
test
dec
mov
and
push
xchg
cmp
dec
sbb
push
add
inc
lea
push
sub
mov
lods
inc
in
(bad)
cld
jnp
and
inc
jnp
out
outs
inc
imul
mov
fcom
adc
mov
cdq
inc
mov
jmp
push
cwde
add
add
pop
and
test
fidiv
and
adc
jns
mov
stc
aaa
aam
push
arpl
mov
call
add
push
rsm
(bad)
pop
(bad)
jo
call
sub
and
cld
jo
dec
int3
adc
cwde
xchg
sbb
mul
popa
jbe
das
imul
mov
jmp
push
push
xchg
jp
enter
pop
addr16
mov
sub
jmp
in
int3
inc
fistp
sub
ret
out
cli
loope
sub
outs
inc
test
sti
jg
sub
fwait
jg
mov
aam
cs
imul
retf
jecxz
fs
xchg
dec
pop
movs
inc
xor
xor
bound
add
jae
mov
iret
test
dec
inc
cmp
sahf
adc
jno
daa
push
(bad)
add
cs
arpl
arpl
cli
aad
push
mov
inc
mov
test
push
add
or
add
or
inc
(bad)
(bad)
call
xor
ror
lods
adc
inc
adc
jle
jmp
add
mul
mov
dec
sar
dec
imul
fwait
mov
popa
popf
jmp
adc
inc
leave
das
sub
(bad)
cld
or
lods
sub
adc
sub
ds
sub
ror
mov
cld
xor
inc
movs
adc
clc
fsubr
mov
add
add
inc
sbb
pusha
mov
fld
call
jne
stos
sti
sbb
and
(bad)
sub
jbe
mov
or
outs
adc
stos
xchg
mov
xor
scas
jp
pop
movsx
adc
mov
inc
and
pop
fimul
sub
leave
int3
mov
fmul
call
jmp
pop
and
scas
and
sub
or
cmc
cmps
in
test
cwde
adc
aas
fsubr
dec
inc
ror
sbb
push
adc
mov
outs
out
mov
add
(bad)
jb
bound
sub
xor
dec
movs
jmp
mov
call
sti
and
mov
pushf
das
fld
movs
addr16
jl
int3
mov
mul
fild
jo
jmp
fstp
leave
cmp
fnsave
sbb
mov
sbb
ss
lock
lahf
mov
mov
mov
inc
sbb
pop
sub
push
aaa
jne
(bad)
jmp
push
xor
sub
xchg
jno
jg
stos
mov
jb
mov
ss
mov
push
cli
push
pop
xor
xchg
pop
push
push
bound
neg
imul
leave
jecxz
ret
outs
dec
sahf
push
nop
icebp
pop
int3
sub
or
fisttp
fdivr
inc
pop
repz
(bad)
ins
ja
mov
jl
mov
pushf
mov
shl
call
adc
inc
adc
xchg
(bad)
stos
inc
xchg
push
outs
or
jmp
cwde
pop
dec
sbb
pop
retf
test
aam
dec
sub
lock
loope
push
(bad)
xchg
pop
retf
out
push
sti
out
daa
fld
pop
or
and
pop
aaa
xor
mov
push
pop
mov
adc
aaa
fcom
mov
xor
mov
push
mov
aad
fsubr
dec
cmp
push
ret
xchg
and
dec
sub
nop
lds
stc
mov
cmps
xor
pushf
jecxz
pop
lea
sar
add
jb
(bad)
mov
and
inc
(bad)
hlt
mov
cs
push
jge
adc
jp
push
pusha
sub
shl
call
dec
xor
out
adc
or
jg
xchg
jae
imul
push
sbb
ss
xor
stos
inc
mov
mov
or
into
shr
mov
push
in
pop
jno
pushf
das
xchg
mov
jo
and
rcr
add
(bad)
mov
push
daa
xchg
dec
das
dec
fwait
lea
push
popa
(bad)
mov
test
imul
(bad)
ror
lods
fcmovb
out
imul
mov
lahf
les
adc
rcl
cmps
cli
std
leave
or
outs
mov
jne
xor
push
push
mul
jg
sbb
jmp
pusha
push
cwde
addr16
sbb
fmul
je
jmp
ss
jae
sub
mov
call
pop
ds
fimul
movs
scas
pextrw
add
(bad)
adc
xchg
repz
cmp
or
sbb
das
push
mov
rcl
xchg
and
aas
mov
test
outs
cmp
js
int3
aam
popa
imul
imul
mov
outs
or
inc
(bad)
xor
mov
shl
enter
iret
retf
pop
idiv
jmp
lea
inc
push
sbb
mov
mov
(bad)
push
int
push
das
push
xchg
cwde
pushf
test
stos
jnp
mov
mov
mov
clc
jne
xchg
push
xor
sbb
cmp
test
cmp
fiadd
pop
cli
pushf
mov
ss
or
outs
repz
(bad)
jecxz
test
or
aas
push
neg
in
sbb
and
jnp
fadd
and
rcl
or
pop
push
jo
sub
icebp
test
pusha
mov
sti
xor
pop
(bad)
xor
or
xchg
and
cmp
ss
ins
stc
dec
jg
cmp
push
and
adc
pop
xchg
daa
or
(bad)
mov
mov
cmp
inc
popa
push
je
outs
inc
push
shl
push
(bad)
je
jne
or
xchg
sub
cmp
mov
jae
jae
fst
(bad)
jnp
(bad)
xchg
stc
jbe
xchg
aam
jne
mov
pop
ins
dec
je
xchg
sub
daa
xchg
fmul
mov
fsubr
mov
shl
jp
or
cmc
pop
sti
lock
pop
sub
xor
mov
add
pop
cs
movs
and
retf
stc
and
sbb
or
movs
sahf
inc
mov
pop
cmp
and
imul
lahf
push
and
mov
or
jge
jmp
(bad)
vmovaps
jp
cmps
into
div
mov
push
pop
stc
lock
fnsave
pop
retf
jge
add
push
mov
inc
arpl
pusha
pop
sub
es
popf
mov
push
pop
push
shl
push
cmp
adc
mov
mov
dec
imul
push
sbb
adc
mov
and
outs
cld
pop
push
enter
sub
arpl
jmp
retf
movs
jbe
xor
ins
push
mov
(bad)
or
(bad)
std
xchg
jp
dec
imul
inc
lds
jmp
inc
jno
call
adc
dec
rcr
adc
sbb
pop
ins
and
mov
mov
aas
lds
and
out
inc
in
movs
(bad)
cmp
icebp
pop
xchg
dec
push
pop
sub
jns
rcl
mov
(bad)
adc
adc
in
dec
and
cmp
mov
adc
mov
sub
adc
xchg
push
imul
std
jmp
out
(bad)
das
pop
adc
ret
retf
pop
cmp
dec
popf
push
dec
xor
lock
mov
dec
aam
add
(bad)
fst
fstp
fadd
cmp
mov
push
mov
(bad)
lss
mov
push
into
fucomi
es
xchg
sahf
and
aad
(bad)
mov
addr16
ror
or
inc
mov
xchg
(bad)
fwait
and
pop
add
adc
xchg
not
mov
cwde
jecxz
mov
sub
or
cmp
jae
mov
ins
imul
scas
mov
inc
add
or
cmp
hlt
leave
jae
xor
mov
add
stos
int3
div
pop
ret
test
call
mov
cld
pop
nop
out
xlat
int
out
adc
lods
lahf
rcl
mov
repnz
in
(bad)
cmp
adc
aad
scas
xor
mov
push
inc
or
pusha
mov
mov
mov
pop
push
cmp
sub
mov
push
jp
pop
loop
xchg
inc
mov
pop
setle
jge
jnp
daa
add
xchg
dec
rol
cmp
adc
gs
jp
(bad)
gs
bound
es
lock
mov
mov
nop
cmps
or
pop
(bad)
jno
xlat
jecxz
xor
add
scas
sbb
ss
adc
pmulhuw
jecxz
xlat
aad
sub
add
mov
enter
mov
push
push
call
data16
dec
ins
ds
adc
fidiv
shr
clc
mov
jo
imul
les
cmc
adc
dec
stc
int3
test
xor
les
jno
mov
aad
adc
add
nop
jp
cli
mov
and
jge
inc
mul
lahf
fistp
mov
dec
pop
cs
aad
push
out
addr16
ds
xchg
mov
inc
xor
imul
dec
lds
push
(bad)
mov
ins
jne
bnd
sti
jmp
inc
adc
mov
nop
into
clc
retf
fiadd
push
std
pop
xchg
inc
adc
fwait
mov
popf
setl
cmps
mov
jl
das
and
pushf
int3
cmp
loop
aas
ins
adc
pusha
cmp
mov
cs
mov
retf
and
retf
inc
js
ret
push
(bad)
dec
das
inc
or
scas
xor
adc
ror
les
and
aaa
push
fld
stc
out
shr
xchg
clc
dec
xchg
mov
movs
inc
sbb
cmps
out
pushf
out
into
add
adc
repz
xchg
repz
mov
mov
and
pop
mov
test
hlt
sahf
xor
ss
int3
ficomp
movs
daa
sti
sbb
mov
test
pop
mov
mov
imul
rcr
adc
shl
xor
cdq
aam
shl
mov
adc
scas
pop
imul
mov
stc
push
std
mov
outs
lahf
add
or
stos
inc
sti
adc
in
xor
or
sub
fimul
xchg
xchg
jmp
jge
in
sti
ret
cwde
jno
mov
clc
jl
add
sub
xchg
addr16
jge
aad
and
je
fisttp
(bad)
adc
ss
gs
mov
es
cmp
frstor
inc
fadd
dec
adc
push
xor
retf
xchg
ret
push
loopne
add
sbb
jle
xor
fdivrp
imul
xlat
movs
int3
inc
cdq
pop
push
sub
sahf
mov
mov
xlat
loope
and
sti
mov
push
fsub
icebp
mov
mov
sub
mov
or
arpl
or
pop
dec
lods
lods
xchg
adc
mov
mov
nop
jl
jp
or
pop
iret
push
js
in
lods
lock
xor
adc
(bad)
out
or
and
adc
sbb
mov
lods
(bad)
mov
jge
inc
add
bound
xor
lock
pop
or
xchg
stc
ror
cdq
sbb
lock
gs
push
out
mov
jmp
out
test
std
jmp
cmp
and
iret
out
jl
xchg
lock
std
sahf
xchg
jb
or
stc
imul
xchg
mov
pop
fld
sub
and
test
cmps
pop
or
cmp
and
jno
lds
xor
or
inc
mov
xor
xchg
cmp
dec
bound
add
lods
push
pop
out
mov
enter
or
pop
adc
test
adc
fadd
ins
les
mov
cmc
lock
lock
push
xchg
inc
pop
xor
fidiv
jg
jne
or
cmp
cmp
push
gs
or
lock
and
xchg
jecxz
dec
sub
xchg
add
inc
push
cmp
pop
push
pop
imul
cli
fld
out
sbb
stos
push
(bad)
ja
stos
push
and
cmp
inc
cs
cdq
ds
xchg
and
or
leave
call
xor
clc
outs
pop
mov
mov
(bad)
repz
test
pop
outs
cld
jmp
sub
cmps
mov
inc
aaa
jge
xchg
lds
adc
cs
in
fadd
xor
fistp
sahf
mov
in
mov
addr16
sub
xchg
xchg
add
sbb
cli
push
add
lock
into
xor
xor
pusha
pop
out
cmp
jmp
jne
je
xor
push
daa
push
jae
popa
cmp
imul
das
xchg
js
in
sub
pop
cmp
mov
or
in
cld
pop
jle
push
jp
xor
xlat
movs
adc
scas
or
xchg
inc
add
sub
test
fsub
pop
nop
(bad)
orps
fidiv
adc
loopne
jno
push
into
(bad)
xlat
cmp
push
ins
adc
aas
jno
sbb
cmp
cmp
push
sub
icebp
jae
inc
push
push
js
popa
mov
popa
std
xchg
mov
push
mov
push
loopne
loopne
and
retf
mov
aas
ss
mov
push
xchg
mov
xchg
mov
dec
inc
push
nop
ja
retf
sar
lea
pop
mov
(bad)
pop
or
xchg
mov
cmova
mov
std
mov
mov
and
(bad)
sbb
or
ret
test
mov
fnstcw
inc
adc
in
xor
inc
(bad)
cmp
inc
arpl
pushf
adc
jo
add
push
xchg
ror
(bad)
pop
jne
adc
pushf
stos
xor
fiadd
stos
jo
mov
mov
div
dec
jne
and
and
inc
mov
sbb
test
repz
in
add
xor
mov
out
mov
es
pop
dec
xor
jb
or
adc
shr
div
push
jge
ja
jle
dec
pop
les
movs
cmp
mov
push
sbb
daa
iret
mov
loope
xchg
jg
add
xor
mov
repz
xor
repnz
sub
(bad)
push
sub
sub
pop
xor
and
pop
or
outs
ret
ror
lods
outs
push
and
mov
jae
sub
push
cs
cmpxchg
inc
add
and
(bad)
loope
push
fcom
add
dec
jae
popa
add
xor
add
cmp
div
ins
shl
jo
ins
(bad)
pop
xor
lods
cdq
xchg
xor
lea
jne
cmc
cli
xchg
psrlw
pusha
add
sbb
aaa
retf
mov
push
mov
push
cmp
bound
mov
mov
push
outs
daa
scas
sbb
pop
jge
xor
aam
out
(bad)
xchg
arpl
lods
xchg
rcl
mov
xor
and
into
loopne
add
cmps
xor
fs
sbb
sub
ja
std
jb
xor
daa
jno
jl
fnstenv
out
ds
jne
inc
or
push
or
repz
jmp
adc
adc
in
jae
push
in
je
int
fwait
std
mov
and
jno
dec
loop
cwde
icebp
out
popf
pop
xchg
jo
sbb
test
pop
push
jmp
(bad)
movs
pop
or
rcr
xchg
sbb
(bad)
in
xchg
mov
cwde
fsub
bound
xor
aam
neg
icebp
jne
adc
and
xchg
pushf
adc
sub
call
shld
xor
iret
xor
outs
in
adc
fpatan
in
loope
cmc
imul
int
inc
jmp
xchg
repnz
or
stos
xor
stc
ss
jnp
mov
pushf
sub
rcr
pop
mov
out
mov
movs
ret
ja
dec
add
movs
jecxz
cmp
cmc
xchg
sbb
mov
bound
mov
(bad)
ins
xchg
and
clc
sbb
shl
pop
in
jmp
sahf
xor
out
push
cmp
pop
sub
mov
les
mov
sbb
test
jp
pop
mov
imul
outs
das
cdq
arpl
dec
movs
add
div
inc
cwde
cmp
sbb
and
push
les
mov
enter
loope
icebp
xor
lahf
adc
mov
movs
push
pushf
shr
push
enter
out
popf
cmp
sub
mov
div
jle
(bad)
mov
jge
out
push
call
stc
dec
popa
std
fadd
adc
int3
push
sahf
cmp
cs
nop
or
hlt
int3
imul
retf
and
das
fdivrp
pop
mov
ja
daa
out
add
adc
cmps
jnp
fiadd
rcr
je
or
out
or
cmp
int3
loop
dec
xchg
lods
nop
nop
leave
retf
pop
std
nop
push
mov
out
shr
vxorps
dec
mov
dec
lock
xchg
adc
dec
aas
dec
cwde
fs
sbb
mov
retf
jecxz
dec
loop
mov
add
adc
push
mov
push
sbb
imul
in
aas
add
sbb
dec
pop
je
jl
cmp
xor
mov
ret
xor
jl
or
in
mov
out
mov
xchg
in
cmp
dec
sub
das
(bad)
out
(bad)
stc
mov
test
mov
jg
les
aas
mov
and
clc
mov
stos
xchg
xchg
sbb
add
inc
dec
hlt
ja
shl
jns
fst
sar
inc
pusha
dec
cs
loop
cli
bound
es
mov
inc
push
adc
add
inc
dec
fwait
(bad)
ficomp
jecxz
out
scas
retf
xor
xchg
mov
pushf
or
xlat
mov
test
addr16
outs
les
out
xchg
stos
pop
jmp
mov
mov
out
jp
inc
mov
xor
lea
inc
and
or
loope
lock
mov
repnz
dec
std
je
test
cmp
xchg
pop
mov
xor
loop
bound
jb
cmp
out
or
cld
and
cmps
cmps
in
pop
add
jmp
retf
mov
or
add
scas
or
in
jge
cmp
sbb
inc
in
mov
sahf
test
mov
icebp
mov
push
cld
test
or
das
cmp
stos
sub
js
sbb
or
inc
pop
inc
retf
sbb
push
cmp
jo
inc
cmc
cmp
and
into
in
xchg
(bad)
imul
sub
or
repnz
fcomip
repz
adc
imul
xor
movs
mov
xchg
push
xchg
int
inc
in
adc
outs
or
jb
inc
in
adc
inc
(bad)
mov
clc
xor
pop
fxch
adc
repnz
dec
pushf
push
inc
lock
dec
xor
or
dec
das
ss
adc
icebp
fisttp
or
in
sbb
lods
in
and
xchg
pop
sbb
cmps
xor
movs
inc
add
add
dec
or
mov
adc
sbb
fucomip
adc
pushf
setb
add
int3
jno
push
cmp
add
dec
or
jmp
xor
jae
mov
push
mov
repz
and
cdq
or
sahf
mov
or
adc
inc
mov
gs
push
push
pop
imul
mov
in
fadd
loop
dec
loope
pop
repnz
jg
sub
loopne
push
mov
xor
pop
xchg
outs
push
or
ja
repnz
adc
shl
mov
inc
sub
jge
inc
cmps
jbe
mov
inc
jno
mov
sub
aam
push
mov
and
and
jnp
cdq
adc
xchg
pop
out
bnd
neg
jno
xor
jmp
push
inc
xchg
pop
test
push
aad
or
imul
xchg
mov
add
in
les
in
fnstenv
adc
sub
arpl
out
xor
mov
cdq
scas
jmp
lea
inc
jae
(bad)
mov
addr16
lahf
push
push
cmp
inc
bound
inc
not
mov
sub
lahf
mov
add
or
outs
into
mov
cli
out
pop
push
sub
mov
mov
adc
ins
in
sahf
cmc
pusha
dec
fimul
adc
jge
cdq
add
inc
lahf
and
dec
je
pop
test
test
push
movs
adc
rcr
pop
aam
hlt
inc
jmp
jmp
iret
int
sar
sub
lods
(bad)
pusha
mov
cvtps2pi
pop
and
mov
gs
jns
retf
leave
dec
sub
shl
ret
push
jmp
test
xchg
cmps
aas
leave
or
add
mov
pop
mov
push
test
fs
lock
ins
xor
int3
adc
out
mov
nop
cmps
sbb
repz
push
mov
xchg
xchg
test
ds
je
stc
rcr
retf
ins
pop
pop
cmp
lods
inc
leave
dec
add
pop
lods
xchg
addr16
ret
jo
in
repnz
les
retf
jb
rcl
ja
mov
(bad)
mov
sub
fwait
lock
scas
lods
es
jmp
enter
mov
gs
rcr
aad
int
mov
rep
adc
xchg
loope
mov
inc
add
dec
mov
jmp
(bad)
pusha
push
xchg
ror
lods
jbe
dec
jge
jmp
movs
inc
mov
and
fidiv
and
ret
and
(bad)
and
pop
jmp
sbb
dec
mov
sub
(bad)
(bad)
mov
fld
movs
daa
add
cmp
repnz
mov
ds
dec
adc
daa
fs
mov
into
mov
adc
out
jne
dec
mov
mov
cs
cwde
cld
ss
jno
int
in
xor
push
pop
rcr
and
aaa
and
and
mov
dec
sbb
sub
adc
ret
aad
ja
dec
test
ror
popa
jge
test
popa
dec
bound
call
adc
fist
sub
and
and
cdq
sbb
adc
pop
int3
and
adc
cmp
jecxz
xchg
mov
sbb
dec
stc
mov
inc
pop
add
leave
push
push
retw
pop
xor
iret
fisub
jno
push
adc
data16
test
jbe
div
cli
jb
mov
sub
rcl
cwde
popa
xchg
pop
pop
adc
jp
mov
mov
clc
mov
imul
stos
pop
inc
sub
push
xchg
stos
pop
(bad)
out
dec
jmp
sbb
lods
jo
enter
adc
stos
xchg
and
push
fsub
call
(bad)
cmc
xor
cmp
xor
ds
fsubrp
mov
pop
stos
mov
and
out
xchg
xor
in
into
int
adc
bound
xchg
add
inc
xor
lods
fnstcw
mov
cmp
xchg
loop
cmp
icebp
adc
sub
xchg
jbe
ret
jae
mov
cmp
test
and
jns
loop
jge
add
aam
mov
fcomp
aad
out
push
mov
xor
sar
addr16
mov
enter
mov
(bad)
push
xor
out
cmp
jmp
mov
or
pop
mov
push
enter
pop
dec
mov
xor
add
fucom
pop
fdiv
imul
cwde
jmp
loopne
pop
xor
mov
pop
mov
add
loopne
push
mov
xor
cmp
mov
dec
fwait
or
mov
xor
pusha
xor
pop
xor
mov
push
xor
add
(bad)
gs
and
xor
mov
sub
xchg
mov
jmp
aaa
mov
inc
pop
pop
sbb
mov
sub
mov
bound
sub
jbe
stos
fdivr
sbb
mov
cmp
jne
iret
mov
lds
pop
push
mov
ficomp
or
pop
pop
dec
je
jmp
shl
(bad)
out
mov
xchg
xchg
ins
ins
sti
pop
sub
mov
pop
ret
and
aaa
ret
cmp
jnp
(bad)
push
pop
fmul
mov
sbb
inc
or
mov
push
adc
into
mov
mov
pop
cdq
ja
mov
xchg
mov
dec
add
outs
xchg
adc
push
out
or
dec
mov
imul
jbe
jmp
add
add
out
sub
mov
imul
inc
jbe
inc
in
lds
dec
clc
cmc
cmp
mov
stc
(bad)
(bad)
repnz
or
(bad)
(bad)
mov
xor
mov
sub
xchg
dec
xchg
sahf
cli
push
cmp
pop
cmp
les
sbb
sub
pop
xor
mov
movs
mov
cmp
mov
sar
fadd
xchg
fnstcw
outs
dec
xor
jp
adc
add
dec
ds
push
inc
cmp
imul
pop
push
mov
mov
push
cmp
fsincos
jmp
ret
ins
jmp
pop
jns
adc
xchg
das
arpl
jge
fld
lods
mov
fs
inc
adc
jp
inc
sbb
xchg
push
imul
jge
mov
dec
push
pop
hlt
add
and
dec
jo
out
jno
sbb
cmps
inc
push
cs
mov
push
fwait
cli
sti
cmp
popf
mov
dec
mov
and
fst
fisttp
inc
xchg
mov
push
xor
dec
adc
pop
ins
sbb
std
rol
pop
or
sti
jmp
(bad)
xlat
mov
xchg
pop
mov
popa
pop
mov
and
push
sub
adc
mov
scas
pusha
loope
add
pop
dec
shl
ret
pusha
mov
jo
addr16
mov
jbe
dec
dec
jle
stos
mov
add
loope
cdq
xchg
xor
pop
cs
movs
xchg
mov
push
out
xchg
push
xor
or
lods
out
inc
fsubr
push
mov
out
popa
dec
lods
pusha
and
popf
aam
mov
dec
mov
mov
push
sub
inc
imul
lods
jg
pop
idiv
pop
jmp
sub
cld
push
jo
pop
push
jge
sub
or
jbe
pusha
sub
dec
nop
dec
dec
enter
je
xchg
mov
mov
jae
push
stc
inc
rol
sub
add
cmp
mov
(bad)
mov
or
loope
cmp
outs
popf
pop
iret
test
or
call
xchg
cs
fsubr
mov
sti
pusha
mov
pop
(bad)
xchg
imul
mov
mov
mov
test
icebp
push
xchg
mov
cmp
push
or
ins
call
ret
adc
sub
jmp
int3
cld
(bad)
cmc
call
inc
fwait
mov
dec
addr16
adc
bound
fisubr
test
(bad)
scas
sbb
inc
pop
jge
adc
xlat
aam
ror
cdq
arpl
scas
mov
jbe
mov
and
call
xchg
inc
jo
mov
xlat
cmp
push
xchg
pop
push
pop
popf
adc
or
unpcklps
sub
jle
lods
mov
int3
sbb
shl
call
and
lock
test
imul
dec
clc
dec
rcl
pop
popa
ins
clc
das
mov
fstp
sub
cdq
outs
adc
xlat
dec
pop
mov
fwait
mov
mov
mov
ror
push
out
rol
dec
xchg
dec
cmps
(bad)
addr16
sbb
ret
sub
call
push
aam
and
loopne
push
mov
xchg
sbb
jne
ret
neg
jbe
cmps
jmp
and
mov
int
jmp
(bad)
call
lods
fcmovb
jmp
sbb
mov
imul
jg
dec
or
stos
les
sbb
jmp
add
in
fabs
cmps
and
(bad)
cmp
pop
dec
out
dec
stos
mov
call
add
ins
fld
push
(bad)
in
(bad)
mov
out
loope
dec
push
and
xor
sbb
ins
xor
jecxz
push
inc
jmp
push
dec
xchg
or
sahf
pop
fldenv
mov
(bad)
in
fisttp
xchg
jne
ds
hlt
gs
in
jmp
in
cmp
ins
push
imul
cld
pop
shl
das
or
gs
outs
push
daa
daa
mov
sbb
je
push
movs
add
cmp
mov
sub
das
jb
(bad)
sar
xchg
adc
repnz
dec
in
and
sub
(bad)
fild
and
inc
out
mov
clc
pop
out
add
(bad)
int
outs
adc
push
je
mov
popa
jmp
ret
shl
dec
and
nop
sti
loop
in
shl
push
pop
std
adc
mov
adc
(bad)
add
dec
rcl
(bad)
inc
retf
add
cmc
adc
jb
lahf
cmps
rcl
xor
pushf
push
add
lahf
out
cmp
jle
mov
enter
(bad)
mov
int
fwait
mov
(bad)
mov
and
mov
push
mov
mov
or
out
pop
shr
xor
or
jns
hlt
and
aaa
dec
add
in
movs
and
loop
push
jp
popa
sbb
sar
and
sub
cmps
(bad)
ss
mov
add
push
cmp
push
fisttp
and
(bad)
call
rcl
pop
movs
fild
pop
add
mov
xlat
dec
xchg
retf
adc
call
out
in
cmp
adc
rcl
xor
dec
out
lods
rol
push
idiv
scas
sbb
push
out
ret
arpl
xchg
in
push
fdivp
jge
xchg
retf
push
pop
xor
push
cld
mov
xchg
mov
mul
push
push
pop
mov
hlt
in
test
sti
out
dec
ret
cli
sub
iret
inc
scas
jl
pop
scas
cli
pop
add
pop
in
adc
sbb
or
ja
add
shl
data16
pop
popf
repnz
push
ret
imul
mov
add
retf
fdiv
inc
jl
mov
xchg
adc
fisubr
mov
xor
add
out
inc
fwait
icebp
push
sahf
jns
xchg
fxch
icebp
jle
sub
sub
and
or
jle
jmp
mov
jp
add
sbb
adc
push
pop
mov
iret
xchg
and
hlt
es
dec
stos
pop
pop
dec
xor
sub
or
jbe
fcom
jb
push
movs
or
mov
bound
mov
and
sbb
adc
jb
loope
jmp
fs
pop
jecxz
movs
addr16
sub
daa
stc
jle
ds
div
mov
retf
stos
pop
mov
xor
fwait
cmps
popf
shl
stc
xor
push
and
jg
jno
mov
ret
cmp
call
mov
mov
ret
(bad)
fld
scas
test
movs
loop
mov
ficom
addr16
aam
inc
cli
add
mov
div
cdq
ss
xor
sbb
inc
shl
in
or
mov
pop
mov
jns
xlat
jb
jno
push
add
and
cmp
enter
adc
loop
pop
jl
mov
inc
cli
jp
jp
ds
push
adc
inc
mov
mov
cdq
pop
dec
movs
sub
ret
call
xor
inc
enter
lea
ret
xor
and
cmp
out
push
nop
dec
aaa
push
dec
xchg
lods
aaa
cmp
cmp
jbe
fsubr
hlt
adc
scas
sti
sar
mov
sbb
cwde
popf
dec
(bad)
jns
cmps
sbb
sbb
rol
popa
xor
movs
call
lea
icebp
push
mov
iret
sub
inc
or
int
push
ins
xchg
ror
enter
xchg
int
(bad)
aam
int3
pop
cmp
stos
test
jbe
test
inc
add
js
sbb
aaa
mov
ins
aas
std
fidiv
fcom
pop
dec
in
xchg
adc
stc
fisttp
in
cmps
xor
ins
imul
das
rcl
cmps
pushf
call
inc
movs
sahf
(bad)
xchg
mov
and
and
add
cmovo
jns
lods
jl
inc
je
jmp
retf
dec
lods
sahf
(bad)
ins
loope
popa
add
pop
mov
nop
pop
adc
inc
or
int
test
mov
pop
ret
jbe
(bad)
jg
mov
rol
out
mov
pop
inc
fild
movs
xchg
jns
jp
push
jnp
pop
xor
pop
jo
int3
and
rcl
xchg
ret
adc
xchg
mov
adc
xor
loopne
loopne
xchg
pop
ja
pop
or
aas
mov
push
add
sub
jp
pop
ins
je
ss
clc
fild
mov
std
repz
jl
cmp
inc
sbb
aad
or
fst
inc
jb
aad
pop
repz
fst
dec
mov
mov
scas
data16
jmp
xlat
mov
mov
xor
leave
imul
sbb
and
inc
cmp
or
pop
mov
hlt
int3
inc
mov
pushf
push
jmp
add
xchg
stc
push
ds
retf
xor
aaa
sub
mov
loope
sbb
les
add
(bad)
dec
mov
mov
fnstenv
and
sbb
add
ss
mov
xchg
sub
leave
add
push
cdq
ins
sub
or
mov
test
test
mov
hlt
xchg
jbe
push
push
inc
xor
out
in
mov
std
push
jno
dec
shl
int
dec
test
popf
pop
inc
add
adc
adc
sbb
mov
pop
ins
or
mov
or
rcr
mov
add
xor
mov
pushf
jns
xchg
iret
ins
jnp
jno
sbb
inc
dec
pop
mov
cmp
not
sbb
dec
add
shl
mov
xor
fs
jmp
add
icebp
mov
arpl
xchg
ja
in
and
push
mov
pushf
or
inc
hlt
mov
int3
xlat
leave
dec
inc
fst
sub
sti
test
and
fwait
jge
xchg
jmp
stos
ss
sbb
dec
ja
jne
and
push
addr16
pop
push
pop
inc
icebp
test
sub
and
popf
add
in
(bad)
imul
scas
inc
les
retf
clc
add
mov
or
sbb
push
test
dec
add
imul
dec
mov
xor
enter
or
mov
sub
mov
fmul
xchg
out
or
aam
push
fwait
cmp
ror
or
xor
iret
sahf
scas
dec
inc
inc
adc
sbb
jae
repz
aad
cmp
outs
mov
fisubr
ja
dec
jb
push
iret
jnp
out
mov
popf
cmp
lods
int
inc
xor
frstor
inc
cmp
aad
xchg
inc
ror
in
jae
sub
ds
(bad)
mov
ret
in
mov
push
cmp
retf
in
ror
in
fistp
push
adc
mov
popa
sub
push
aad
fcmovnb
sbb
mov
retf
lds
add
ret
icebp
imul
test
jp
js
inc
data16
inc
adc
or
and
sahf
xchg
jmp
xor
xor
pop
jo
push
pop
cmp
sub
jl
iret
or
inc
xor
mov
lock
sbb
mov
xchg
mul
mov
mov
xor
inc
push
push
scas
jp
push
mov
call
es
aas
cmp
adc
imul
cmp
imul
cwde
lods
mov
sbb
loop
inc
push
pop
mov
push
lods
ins
or
mov
jnp
xor
cs
ins
inc
scas
push
mov
xchg
popf
sbb
scas
call
out
rcl
sub
push
orps
pop
das
or
int
fdivr
and
lock
jp
int3
sbb
das
loop
jmp
retf
jb
cwde
xor
sbb
mov
mov
xor
(bad)
es
pusha
pop
gs
sbb
retf
mov
inc
mov
imul
arpl
or
pop
dec
mov
lods
(bad)
cmc
popf
inc
rol
cmp
push
and
stos
jp
call
push
sub
out
sbb
inc
push
ret
mov
mov
push
mov
or
xor
movs
xchg
loop
jmp
subsd
cmps
push
test
shl
and
xor
sub
mul
mov
out
add
in
push
or
imul
mov
mov
(bad)
push
sub
jns
cmp
or
mov
es
jecxz
cmps
xchg
cmps
pop
push
in
and
retf
inc
mov
sbb
scas
xchg
ds
sub
xchg
das
cmp
mov
addr16
fisub
test
mov
mov
jge
inc
sub
in
cmp
icebp
cmps
mov
mov
pop
sbb
leave
adc
xor
lods
jnp
ss
das
xor
fisubr
nop
sub
rcl
xor
push
and
dec
cmc
sub
nop
or
cdq
mov
push
pop
shl
push
jge
sbb
shr
aaa
mov
or
mov
add
arpl
jnp
xchg
xchg
adc
push
jl
call
rol
xor
inc
xchg
xor
push
add
hlt
jge
imul
out
inc
inc
xor
mov
mov
arpl
push
ret
mov
xchg
and
mov
ss
xor
xor
xchg
iret
and
cmps
inc
mov
(bad)
mov
lock
nop
inc
inc
loopne
add
jp
cmp
shr
lock
and
sbb
sti
jns
cld
push
repz
sbb
dec
call
dec
sbb
or
or
sub
ret
adc
inc
(bad)
cs
hlt
inc
adc
push
scas
das
call
(bad)
fsub
lahf
xchg
inc
and
stos
(bad)
iret
jle
adc
pop
mov
jae
and
cs
shr
dec
shl
test
cmps
sahf
push
fwait
jo
push
out
adc
sar
dec
fld
lahf
movs
mov
faddp
push
cmp
outs
lahf
or
push
ins
xor
add
cdq
jne
sub
pop
test
adc
add
push
push
mov
cmp
(bad)
data16
mov
xor
shl
and
push
repz
dec
dec
mov
push
mov
in
fdiv
mul
sbb
mov
push
ja
xchg
das
dec
mov
xlat
add
mov
aad
push
fistp
xchg
out
mov
xchg
adc
inc
sbb
dec
mov
mov
pop
out
push
daa
ja
and
push
fnstsw
test
mov
mov
rcl
jmp
xchg
test
stos
lea
inc
retf
jecxz
ds
out
pop
iret
pop
and
dec
cmps
xchg
jne
xor
mul
fistp
rcr
pusha
jmp
mov
adc
outs
push
js
push
out
inc
jne
cmp
mov
jo
add
and
push
rol
xor
sbb
scas
test
xlat
mov
mov
add
enter
adc
outs
push
sub
push
xchg
ss
stos
loop
pop
push
fisub
mov
es
add
push
sub
mov
sbb
xchg
es
stos
lea
sub
mov
fisttp
mov
out
repnz
push
xor
std
adc
or
stos
leave
add
maxps
inc
addr16
out
pop
inc
pushf
mov
outs
and
loopne
test
stos
hlt
push
js
push
jmp
xchg
dec
fisub
cmp
js
xchg
xlat
je
pop
leave
pop
fild
cli
loop
repz
sbb
sahf
pop
dec
je
popf
sub
mov
frstor
and
adc
pop
jle
int
shl
pop
adc
mov
or
sub
push
movs
(bad)
pop
xchg
daa
aam
in
adc
pop
cmc
jno
in
call
xor
adc
xor
jo
mov
adc
in
mov
test
(bad)
jo
stos
sub
push
stos
(bad)
sti
shl
cwde
loopne
stc
fwait
inc
mov
mov
mov
pop
fwait
dec
lods
add
mov
xchg
adc
adc
or
sub
mov
repz
jmp
mov
jno
push
xchg
jmp
arpl
aam
cli
fs
retf
inc
(bad)
hlt
fwait
jp
push
call
data16
cmp
gs
outs
add
pop
mov
(bad)
jmp
stos
mov
xchg
stc
add
xor
and
or
sbb
fs
loopne
or
xchg
cld
push
xchg
sbb
std
jg
es
mov
scas
mov
mov
retf
push
jmp
mov
add
cmps
aaa
popf
mov
lods
jecxz
fist
mov
aas
test
sub
jg
pop
sbb
xor
in
movs
adc
lds
and
retf
loopne
xor
shl
pop
sub
pop
mov
popf
sub
rol
mov
sbb
shr
inc
inc
jnp
adc
popa
cwde
cdq
call
je
in
xchg
mov
sub
jl
cmp
bound
sbb
add
gs
and
inc
adc
cwde
outs
aas
inc
cwde
cmp
lods
in
jbe
fist
add
mov
adc
mov
or
test
in
push
int
dec
sar
push
cmc
dec
bound
jno
sub
sar
dec
int
sub
call
or
cmp
(bad)
sbb
aaa
pop
fst
retf
sbb
outs
out
inc
pop
jmp
out
and
inc
adc
push
sti
inc
or
fs
jecxz
or
ret
aas
and
cdq
push
in
dec
cld
test
mov
mov
xor
mov
nop
push
pop
stos
gs
adc
(bad)
retf
xor
push
je
test
sbb
xor
adc
dec
out
jg
call
jmp
test
js
fs
inc
xor
scas
and
repnz
mov
add
xor
jno
cmps
cmp
push
jl
jae
inc
jbe
or
xor
add
push
icebp
or
dec
and
dec
stc
xchg
fistp
stc
sahf
popf
sbb
add
enter
jge
out
mov
retf
iret
cmp
pop
xchg
dec
imul
scas
stos
cmp
jmp
int3
leave
inc
mov
adc
jmp
xchg
mov
int3
push
(bad)
push
push
call
enter
xor
fmul
(bad)
test
clc
sub
dec
push
mov
(bad)
cmps
pop
rol
es
mov
push
and
ret
inc
popf
mov
and
(bad)
dec
out
pop
mov
pop
pop
fmul
ficom
push
fsubr
xchg
mov
enter
es
(bad)
push
addr16
inc
daa
add
sub
push
out
gs
xlat
and
pop
push
in
call
xor
inc
fidiv
add
dec
dec
fstp
pop
pop
jmp
xlat
xor
int3
cmps
and
jae
cmps
movs
repz
shl
cmp
xor
out
rcr
inc
add
adc
and
movs
repz
outs
mov
push
mov
sub
pushf
cli
call
and
popa
dec
mov
dec
pop
sub
fstp
pusha
mov
call
and
inc
cmps
pop
daa
cmps
ins
sbb
mov
ins
push
daa
loop
dec
or
inc
add
sub
div
pop
mov
jecxz
retf
sub
mov
pop
jae
or
mov
js
jnp
xchg
dec
in
aad
push
enter
les
pushf
sub
push
mov
out
dec
cwde
mov
xchg
fwait
add
dec
inc
je
int
adc
push
cmp
shl
loopne
nop
xchg
inc
cli
pop
fsub
dec
push
pop
rcr
aad
sub
out
ficomp
mov
inc
scas
xor
inc
aaa
call
ins
mov
lock
or
and
das
jae
outs
cmp
jg
xor
into
out
jl
pop
sub
aad
mov
addr16
xor
out
shr
jnp
fbstp
mov
inc
scas
mov
ret
lea
xchg
pop
mov
push
ins
mov
mov
sub
mov
push
jb
xchg
xcrypt-ofb
cmp
xor
xchg
jno
leave
in
xor
cmps
das
popf
aas
inc
fsub
cld
lds
sbb
jle
outs
add
cmc
cmps
outs
or
adc
retf
fcomp
adc
outs
retf
add
cmp
clc
aam
jecxz
rol
ins
pop
sti
mov
xchg
sbb
jmp
cmp
push
and
mov
in
cmc
xchg
xor
lods
dec
mov
leave
mov
addr16
dec
outs
inc
enter
cmps
pop
jnp
imul
sbb
pop
mov
enter
(bad)
ss
dec
addr16
call
mov
cmps
adc
push
sub
or
fld
nop
xor
jnp
pusha
lock
or
jmp
add
(bad)
xchg
add
bound
push
(bad)
cmp
mov
pop
sar
mov
xor
xor
hlt
add
xor
jbe
inc
(bad)
aaa
dec
scas
mov
inc
and
xor
xor
test
arpl
xor
out
xor
jmp
mov
xor
push
mov
cmp
cmp
pop
jnp
shr
pop
jp
xor
rcr
mov
mov
push
daa
mov
lock
out
das
clc
mov
mov
fisubr
jp
shl
mov
jmp
mov
sbb
xor
mov
mov
jne
test
fcmove
popa
iret
push
dec
scas
hlt
mov
pusha
mov
icebp
dec
ins
add
xor
pop
or
push
jno
xchg
mov
jnp
adc
cld
leave
(bad)
push
es
push
xor
imul
imul
cmp
cdq
jae
mov
std
xor
rcl
std
push
movs
mov
jmp
and
rcl
pop
pop
inc
and
mov
add
xchg
mov
pop
adc
mov
pop
push
xchg
mov
clc
int3
and
and
jne
enter
xlat
mov
aaa
xchg
iret
popf
ds
aad
test
xor
and
jecxz
data16
in
or
push
(bad)
ret
mov
adc
and
mov
push
dec
les
push
inc
div
sub
std
in
or
movs
inc
sub
mov
(bad)
(bad)
fld
pop
data16
add
icebp
sbb
push
scas
push
shr
add
dec
add
mov
sti
mov
repnz
test
(bad)
jb
jp
not
jo
outs
retf
loopne
sti
xchg
cmp
pop
jno
(bad)
mov
enter
call
out
sahf
mov
xchg
cmp
lahf
or
aaa
inc
loopne
dec
push
bound
jge
pop
jmp
adc
lahf
mov
inc
cmp
lods
dec
mov
add
iret
jg
mov
mov
add
xchg
pushf
mov
gs
(bad)
(bad)
cmp
sti
pop
mov
xchg
popf
(bad)
or
xchg
int
jl
ss
ins
lods
lock
mov
adc
xchg
nop
cmc
or
icebp
int3
repnz
ret
or
lods
call
repz
dec
dec
push
cli
scas
aam
sbb
gs
push
jmp
ss
stos
sub
sbb
mov
xchg
lods
inc
mov
scas
hlt
sbb
data16
inc
mov
cdq
mov
leave
daa
xchg
ficomp
pusha
shr
daa
cdq
jecxz
xchg
jg
cmps
rol
cwde
mov
lds
ins
sub
mov
das
aas
mov
xor
loop
(bad)
dec
mov
retf
cmc
sbb
in
adc
adc
shl
jecxz
dec
mov
daa
bound
es
adc
mov
retf
dec
push
add
mov
data16
(bad)
mov
loope
push
movs
addr16
xchg
xlat
out
cmp
mov
fidivr
sbb
pusha
lahf
push
cmp
(bad)
arpl
xchg
mov
xor
sbb
rcr
sub
mov
pop
pop
fst
ins
sub
push
pop
or
enter
push
aaa
xor
call
mov
mov
sbb
outs
imul
sti
push
mov
retf
out
cmp
imul
mov
(bad)
jp
mov
mov
hlt
in
cmp
test
pop
dec
sub
in
and
mov
outs
adc
sub
lods
adc
ret
loop
xor
out
pop
add
add
sbb
push
push
das
xchg
dec
inc
sub
jb
jae
mov
test
cs
mov
cs
dec
mov
movs
pop
int
push
pop
pop
jb
xchg
lods
arpl
push
jle
vandnpd
pop
gs
inc
fwait
xor
mov
or
es
sbb
and
and
scas
mov
mov
mov
mov
xlat
pop
bound
stos
mov
movs
rcl
shl
idiv
mov
xchg
ret
out
mov
xchg
sub
out
xchg
jmp
scas
ins
in
pop
cwde
add
mov
out
imul
call
sbb
adc
mov
jl
add
mov
ins
pop
xor
xor
ret
dec
and
jp
popf
dec
fcom
adc
add
out
inc
lods
push
push
movs
and
xlat
xor
pop
inc
in
pushf
fcmove
add
cmps
mov
out
sub
add
adc
adc
cmp
inc
jno
add
imul
add
retf
outs
sub
mov
pusha
adc
xchg
sub
dec
mov
or
ins
push
mov
sbb
jno
mov
sub
ins
in
sbb
sub
push
pop
(bad)
add
shl
xchg
ror
mov
sub
sub
loopne
add
mov
mov
out
fldln2
in
ins
(bad)
and
mov
adc
adc
adc
arpl
test
test
iret
es
sub
into
pop
cmp
push
mov
es
sbb
fs
rol
sete
pop
ret
je
cmc
call
inc
fadd
ror
jecxz
fstp
inc
clc
in
adc
call
xchg
bound
dec
imul
mov
or
mov
outs
xor
xchg
adc
outs
mov
push
mov
pusha
fcmovnb
ss
pop
in
aad
xchg
cmp
sbb
inc
xchg
int
(bad)
jns
adc
mov
aas
inc
out
cmps
test
call
jae
popaw
imul
repnz
xchg
xor
lea
cmp
pop
push
cmp
test
imul
jmp
adc
pop
je
sbb
pushf
sbb
mov
cmps
call
sub
pop
ror
pop
jmp
mov
pop
ins
inc
das
dec
in
out
or
mov
gs
add
jne
(bad)
cmc
stos
ds
movs
lds
pop
jp
and
xchg
adc
jmp
mov
xchg
retf
test
outs
cmc
cmp
or
test
push
enter
sbb
sub
(bad)
dec
dec
mov
add
out
and
add
or
(bad)
jp
bound
pop
jmp
jp
dec
mov
jb
or
popf
mov
idiv
adc
cli
ins
popf
xchg
es
add
jns
ficomp
mov
sbb
adc
cmps
xchg
mov
inc
cmp
cld
(bad)
ins
push
pop
in
cmovo
add
repz
mov
or
and
pop
mov
rol
add
iret
ja
jno
cmp
jb
enter
test
inc
(bad)
xlat
adc
rcl
pusha
loop
mov
xchg
shr
cdq
pop
rol
xor
in
bound
push
cmp
loopne
cmps
mov
clc
mov
fsub
fs
imul
cmp
lahf
adc
imul
movs
iret
xor
jle
mov
cwde
xor
(bad)
ret
mov
jns
mov
jo
jp
bound
xor
fiadd
jge
lahf
xor
arpl
or
lods
punpckhdq
pop
outs
jnp
into
cmp
dec
sub
int
sub
cwde
(bad)
int
jbe
(bad)
out
inc
clc
es
call
jge
push
push
loop
pop
xchg
je
push
jns
push
addr16
lds
sbb
and
push
xor
and
jmp
in
xchg
mov
movs
push
adc
xor
jp
pop
retf
dec
jl
push
ret
addr16
(bad)
pop
mov
jo
inc
int
cmp
scas
pop
pop
sub
(bad)
xlat
imul
mov
cs
stos
imul
int3
xchg
lods
leave
inc
rcr
add
or
nop
dec
dec
stos
jmp
fwait
push
mov
not
in
fisubr
(bad)
xchg
loope
jge
or
stc
xchg
outs
push
mov
add
cs
das
mov
cmp
ja
dec
mov
ror
shr
ja
jle
adc
push
jmp
ror
das
or
mov
and
pop
adc
xchg
std
leave
test
call
dec
call
test
movs
xchg
mov
jp
lods
lods
push
jp
xor
mov
push
push
gs
stc
enter
and
push
(bad)
cdq
lods
adc
outs
ja
cmps
mov
int
(bad)
mov
cmp
shr
mov
stc
outs
out
xchg
cmp
pop
out
repnz
js
pusha
test
mov
xor
jne
mov
mov
inc
fwait
pushf
push
jnp
mov
pop
fwait
mov
dec
cmp
cmp
cmp
ret
inc
repz
lods
lea
jno
add
cmp
xor
loopne
arpl
and
mov
call
lods
dec
xlat
mov
cdq
(bad)
cmp
jns
fidivr
mov
nop
adc
push
cmp
stos
lds
add
cmp
icebp
movs
(bad)
ret
cwde
or
pop
inc
pusha
add
enter
imul
mov
fucom
mov
pop
inc
inc
das
mul
stos
mov
mov
sahf
call
mov
or
stc
xchg
jle
sbb
cli
inc
xor
fistp
fcmovne
aam
adc
inc
fiadd
cmps
dec
test
mov
lods
or
add
fimul
mov
loop
pop
sbb
icebp
mov
cli
cmp
out
cli
je
sar
adc
pop
rcr
sbb
cli
push
adc
sbb
sub
jns
pop
movs
icebp
sbb
xchg
fwait
out
mov
jne
stc
leavew
stos
std
cwde
(bad)
adc
adc
and
push
jno
push
(bad)
mov
sub
pop
pushf
mov
fnstcw
je
mov
push
add
sbb
mov
cmp
scas
fidiv
push
push
lods
fwait
add
pop
jno
push
out
dec
test
cmps
fnop
inc
jmp
jg
jg
ja
aad
push
aad
xchg
mov
lods
inc
adc
pop
les
es
sbb
js
scas
jl
aad
xchg
xor
mov
test
aaa
retf
mov
xlat
data16
and
imul
out
(bad)
mov
jmp
lahf
clc
fadd
pop
xor
mov
(bad)
cmps
data16
loop
jns
jp
cmp
fcom
mov
cli
popa
fimul
cwde
adc
imul
inc
jl
aam
mov
jbe
adc
call
addr16
lods
and
cmp
ja
pop
sahf
int
fdivr
scas
cs
pop
iret
jg
cli
outs
mov
jg
fdivr
pop
mov
mov
or
test
sub
and
xor
cmps
jbe
sbb
pop
sbb
sahf
stos
fwait
cld
pop
fwait
aad
inc
pop
pushf
out
lods
xor
cwde
pop
mov
inc
and
call
adc
aam
xor
sub
mov
and
or
sub
add
adc
xchg
fnsave
(bad)
test
pop
pop
xlat
xchg
sbb
xchg
push
cmp
mov
icebp
push
movs
ror
sbb
or
mov
retf
mov
fcmovne
(bad)
cli
jmp
int
mov
sbb
jne
outs
mov
int3
cli
in
add
sbb
dec
jbe
mov
clc
into
push
adc
bound
inc
xor
adc
or
icebp
inc
rol
enter
pop
retf
push
enter
push
test
dec
out
cmp
mov
pop
mov
and
lock
cmps
int
dec
mov
(bad)
in
dec
stc
(bad)
mov
xchg
xchg
or
inc
loope
in
xchg
dec
or
add
jnp
es
sbb
test
stos
jmp
or
push
ja
cwde
test
pusha
mov
imul
(bad)
aam
nop
inc
cmps
dec
in
inc
iret
jae
repz
adc
add
imul
in
stos
adc
add
and
jg
out
jb
and
cmp
call
lock
or
(bad)
and
xor
(bad)
stos
xchg
lods
into
or
jmp
cmp
mov
and
xchg
movs
addr16
jle
std
iret
fwait
mov
fadd
fdivr
loopne
push
mov
and
es
jns
mov
sbb
(bad)
cli
mov
and
outs
push
imul
scas
and
pusha
and
mov
push
dec
and
push
addr16
clc
repz
or
rcr
xchg
sub
mov
mov
jae
mov
cdq
mov
lods
ins
ret
push
pop
mov
xlat
cli
mov
outs
pop
add
shl
jge
mov
dec
test
dec
and
loop
pop
sahf
(bad)
jp
mov
mov
aam
js
(bad)
iret
out
push
and
jnp
pusha
lahf
mov
sub
xchg
ror
jle
push
(bad)
test
lds
pusha
mov
pop
mov
(bad)
pop
sbb
jmp
add
jno
loope
xlat
fcom
stc
cmp
fist
mov
dec
repz
xlat
or
xchg
adc
cmp
arpl
inc
stc
mov
mov
fldcw
arpl
mov
jno
adc
retf
add
icebp
cmps
(bad)
mov
retf
xor
into
bound
scas
(bad)
std
out
sbb
test
lahf
xchg
push
jg
fucomp
dec
fdivr
shl
ror
arpl
mov
xchg
mov
mov
xchg
mov
cmp
cld
jg
add
cwde
lods
cmp
sar
(bad)
and
retf
cmps
stos
scas
xchg
pop
movs
dec
rcl
scas
sub
xchg
push
dec
add
(bad)
push
pop
mov
dec
xchg
out
and
(bad)
js
cmp
dec
jmp
clc
mov
xchg
fwait
lds
xor
pop
icebp
imul
retf
neg
and
ja
iret
dec
inc
mov
xchg
sar
cli
mov
cmc
mov
cmps
or
sbb
jno
inc
ds
cmp
dec
outs
jp
jg
jns
push
sahf
dec
mov
das
or
xchg
mov
cdq
icebp
lock
adc
jo
adc
dec
sbb
push
adc
mov
aam
sbb
ret
pop
div
iret
and
repz
test
push
or
adc
ins
test
jo
rcl
push
xchg
test
xor
and
mov
mov
push
pop
pop
lds
mov
mov
cmc
push
(bad)
push
outs
jl
push
xor
sbb
mov
es
mov
or
mov
sub
push
add
aas
mov
inc
or
call
or
mov
repz
push
int3
push
and
ins
mov
stc
push
retf
mov
pop
jo
or
inc
cmp
cvtdq2ps
mov
jle
sub
test
cmp
fimul
and
xlat
adc
into
jle
dec
mov
mov
jo
sub
jnp
icebp
fwait
call
jae
jno
cmp
cmc
dec
rcr
lods
dec
es
fs
das
aad
lods
fstp
cbw
jge
ret
jbe
dec
pop
sub
test
cmps
add
iret
mov
popa
add
pop
adc
je
sbb
test
push
nop
std
mov
bound
jmp
(bad)
xchg
mov
sahf
stos
frstor
addr16
cwde
mov
adc
adc
(bad)
(bad)
fdivr
mov
je
ja
pop
cmp
jecxz
aad
mov
cmp
fisub
hlt
mov
lds
int
mov
imul
mov
ins
and
push
inc
mov
push
imul
leave
push
push
adc
lahf
bound
(bad)
dec
sti
in
xchg
das
loope
shl
sub
enter
je
mov
out
rcr
std
mov
icebp
xchg
adc
add
das
xlat
pop
xor
daa
icebp
mov
mov
sar
xlat
aaa
out
mov
sbb
cwde
mov
(bad)
fisub
mov
adc
out
adc
lods
or
retf
jmp
out
(bad)
sti
mov
std
xchg
lahf
fidiv
cmp
cmps
cli
rcl
xchg
mov
pop
pop
hlt
cld
cmp
dec
pop
mov
mov
les
ficom
cmp
adc
bound
jns
scas
dec
inc
out
(bad)
aam
push
add
jp
push
call
jno
call
stos
xchg
in
hlt
xchg
add
mov
in
in
dec
push
add
xor
cld
aad
pop
pop
data16
sti
xchg
icebp
scas
xor
push
sti
ret
call
rcl
pop
pop
(bad)
adc
pop
gs
repz
dec
les
pop
push
and
mov
mov
push
mov
xchg
mov
loop
pop
imul
mov
sbb
outs
push
sub
(bad)
jnp
rcl
sub
cmps
imul
xchg
xchg
pop
mov
push
(bad)
xchg
enter
adc
bound
ss
push
fwait
mov
mov
xchg
mov
out
cmps
lods
loope
cmps
add
mov
jmp
xchg
xor
push
lods
push
out
add
pushf
(bad)
pop
cmp
sbb
and
test
faddp
fisttp
sahf
bound
rcpps
xchg
mov
scas
and
in
or
xor
ss
les
mov
rcr
(bad)
xchg
jge
out
pop
push
pop
pop
test
test
retf
pop
mov
leave
inc
add
mov
pusha
inc
push
inc
fwait
mov
setbe
popf
enter
mov
jb
inc
xchg
xchg
movs
push
les
pop
out
inc
stc
mov
cmp
pop
lea
(bad)
mov
ror
imul
jle
outs
outs
add
inc
pop
iret
xchg
das
je
xchg
fimul
mov
not
(bad)
jmp
xchg
adc
lds
sub
movs
inc
jns
shl
jo
imul
ficomp
mov
jb
cmps
retf
and
imul
cdq
jnp
out
fsubr
ja
push
out
outs
int3
push
mov
in
and
or
add
push
push
sub
mov
pop
push
add
xor
sti
es
enter
jge
aas
mov
lea
and
cmp
sbb
add
es
jecxz
or
loop
sub
out
sahf
js
iret
adc
xor
cld
cld
loop
sbb
xor
lahf
xchg
rol
push
push
cmp
and
repnz
loopne
aaa
push
push
test
outs
push
add
sbb
push
sbb
outs
jne
xchg
lock
pop
dec
lods
lahf
cmp
loopne
stc
rcr
add
jno
shl
and
fdivrp
movs
and
popf
out
aad
mov
loope
inc
mov
(bad)
(bad)
dec
cmp
jno
xchg
jb
lahf
and
and
adc
cmp
dec
mov
int
jmp
push
lahf
xor
les
and
pop
(bad)
aas
and
mov
cmp
dec
sub
sub
mov
mov
lock
xor
cmp
pop
in
pusha
mov
dec
xchg
mov
cld
mov
adc
adc
cmps
stos
icebp
cmps
sub
inc
push
mov
les
and
hlt
mov
out
mov
push
mov
enter
in
ins
push
sub
pop
and
icebp
push
dec
in
out
aaa
or
jmp
sbb
lahf
inc
dec
fmul
sub
jo
pop
or
je
push
and
sahf
mov
test
cmp
(bad)
mov
and
ja
enter
push
cmp
mov
ror
(bad)
idiv
aad
sbb
ins
ret
ficom
xor
cmc
pop
(bad)
in
mov
mov
push
or
in
inc
inc
or
jge
gs
push
jns
pop
sub
mov
push
cmc
outs
jle
in
clc
pushf
xor
retf
push
fldenv
lds
jo
and
fldcw
in
popa
mov
jns
adc
fsubr
daa
mov
shr
sahf
pop
add
das
scas
pop
jp
repz
stc
imul
loope
rcr
or
lds
push
push
jno
push
cmps
ret
pop
sbb
std
pop
aas
jbe
adc
das
jnp
jecxz
push
pop
in
mov
pop
dec
inc
rcr
cli
dec
iret
aam
pop
nop
test
adc
cmp
and
es
ror
call
dec
sbb
test
add
push
inc
mov
jae
and
and
popa
loop
xchg
cmp
adc
rcl
mov
jno
inc
(bad)
out
cmps
jl
fistp
dec
push
cmp
in
push
out
and
dec
movs
push
adc
jge
lock
mov
sar
pop
stos
jb
dec
mov
sub
push
jecxz
sahf
push
aad
sbb
jbe
pop
xor
ret
sbb
or
mov
ins
pop
fcom
jmp
mov
xchg
cwde
mov
dec
jp
xor
push
std
and
lea
mov
cmp
dec
dec
loop
adc
retf
mov
xchg
adc
adc
cld
mov
dec
bound
ja
mov
in
popf
mov
or
lea
xchg
ins
jecxz
jb
(bad)
xor
test
push
fst
loope
pop
into
pushf
xchg
in
fistp
xor
loope
jle
or
fs
aas
adc
sub
sbb
push
xor
stos
(bad)
loop
cwde
cwde
(bad)
xchg
ins
out
into
sbb
ss
push
mov
fstp
lods
cmc
stc
ret
in
pop
add
xchg
out
out
jmp
aaa
xchg
stc
sub
jge
sti
popf
jno
sbb
or
xchg
dec
jge
mov
retf
(bad)
in
ins
jb
pushf
mov
jg
lock
pusha
stos
cs
xchg
xor
ins
cli
xor
js
push
mov
add
call
add
sar
lods
add
push
ror
mov
jne
xor
retf
mov
sbb
hlt
mov
clc
mov
xor
fcmovb
cs
push
pop
push
jno
fld
mov
jnp
jnp
add
in
dec
sub
or
pop
cmp
xor
(bad)
call
xor
sbb
clc
les
inc
movs
dec
int3
sbb
sbb
(bad)
push
stos
mov
retf
daa
loopne
pop
add
dec
or
in
mov
shr
ror
enter
cld
pop
mov
int3
aaa
adc
ins
cld
repnz
sub
push
inc
push
out
rcl
cmp
adc
stc
push
into
or
mov
lahf
in
leave
fadd
xchg
mov
ret
xor
cld
fbstp
pop
and
xchg
inc
push
xor
loopne
aas
sahf
mov
xor
cmps
sbb
push
sub
(bad)
add
inc
sbb
mov
test
cdq
xor
movs
adc
dec
jmp
in
pushf
retf
adc
mov
cmps
retf
or
xchg
int
test
adc
push
xor
xor
movs
xchg
push
dec
mov
mov
sub
cld
out
sbb
jmp
outs
shl
push
cmp
icebp
jo
sti
add
aaa
mov
pusha
stc
xor
and
pop
jle
lock
dec
ja
inc
mov
add
neg
cmp
movs
into
pushf
dec
fs
push
dec
mov
sbb
push
ds
jo
inc
cld
push
and
sub
xchg
jge
xchg
stos
call
adc
cmc
icebp
inc
xchg
add
scas
mov
sahf
mov
loopne
push
mov
xchg
fistp
pop
inc
cmp
inc
aas
dec
ror
mov
into
xchg
jns
cmp
xchg
loopne
xor
push
push
mov
sbb
inc
aad
jbe
jmp
dec
jle
sub
out
rol
test
out
das
js
ja
test
cmp
mov
test
sbb
(bad)
and
dec
push
ret
cmp
(bad)
bound
adc
add
add
dec
shl
push
jbe
out
jmp
cmps
mov
pusha
jb
pop
sbb
lea
jo
ins
xchg
aas
les
pushf
repnz
fwait
jno
add
jp
dec
in
imul
cmovbe
inc
inc
fistp
xchg
nop
mov
jno
cdq
clc
and
std
loop
mov
xor
inc
push
mov
adc
pop
mov
dec
not
lods
xor
and
hlt
ss
ins
sbb
dec
das
pop
jge
ins
jns
pop
push
call
shr
dec
xor
sub
and
rcl
mul
mov
jo
cli
push
adc
leave
xchg
jg
ds
jnp
ja
push
dec
aad
or
mov
jno
ds
mov
shl
or
into
(bad)
lods
jb
clc
adc
fisubr
xchg
jmp
xchg
out
cld
es
out
or
mov
adc
dec
sar
retf
mov
jmp
mov
mov
jl
mov
and
(bad)
out
inc
mov
inc
or
pop
inc
lods
enter
test
not
fld
sub
xor
mov
push
jmp
in
out
sbb
je
push
imul
fst
dec
bnd
ret
ror
shr
jbe
inc
in
ins
sub
es
aam
cwde
sub
jmp
push
inc
mov
hlt
movs
mov
cmp
xchg
cmps
data16
or
fst
mov
rcl
pop
inc
jl
ins
rol
mov
addr16
mov
add
jmp
leave
rol
and
inc
iret
js
mov
mov
js
(bad)
adc
xor
test
dec
nop
mov
aad
cmp
mov
rcr
into
mov
fild
js
pop
jmp
int
cmps
ins
lods
dec
push
push
sar
add
push
jne
iret
addr16
mov
lods
push
pusha
jb
adc
mov
xor
je
cld
mov
call
mov
push
mov
int3
mov
mov
sub
mov
sbb
repnz
inc
and
cdq
aas
push
(bad)
mov
ja
xchg
retf
jns
into
mov
xchg
inc
movs
and
mov
rcpps
xchg
adc
jmp
mov
leave
outs
mov
js
lds
shl
push
jp
jmp
pushf
dec
adc
and
retf
xchg
cmp
jno
adc
pop
gs
push
and
dec
xchg
rol
jl
repz
adc
pop
jmp
out
icebp
in
mov
hlt
retf
(bad)
mov
sbb
mov
jo
add
and
pop
jp
pop
imul
xchg
(bad)
mov
mov
cmps
mov
push
lods
fadd
hlt
imul
hlt
mov
loope
add
shl
pusha
repz
mov
cmp
mov
jecxz
jno
jge
push
jmp
xchg
xlat
adc
pusha
pop
test
out
retf
jnp
sub
inc
mov
adc
cmp
push
cmp
add
retf
lods
dec
mov
sar
or
lods
adc
mov
out
mov
or
lock
inc
loopne
add
(bad)
push
fsubr
data16
cmps
inc
ficom
jae
in
fsub
arpl
icebp
cdq
mov
jno
push
mov
loopne
call
loopne
fisttp
or
mov
push
aam
inc
dec
push
mov
jmp
jae
jecxz
inc
ins
pextrw
push
es
mov
lahf
inc
and
push
push
or
lock
fnstenv
adc
jbe
add
sti
dec
mov
xlat
popa
jnp
aam
in
pop
pop
sbb
imul
sets
in
arpl
into
dec
clc
loopne
xchg
retf
cmp
retf
xchg
cmps
int
fld
xor
pusha
jp
pushf
into
mov
inc
loop
ror
aas
sub
and
inc
pusha
aad
or
cwde
inc
inc
ss
mov
outs
push
and
jp
arpl
pusha
jg
mov
cmp
(bad)
(bad)
mov
push
iret
leave
xrelease
es
aam
sub
repz
mov
jmp
out
dec
pop
fwait
call
cmovno
push
lods
out
mov
clc
xchg
push
xadd
mov
outs
xchg
fstp
or
mov
ja
cmps
sub
cmovns
push
mov
push
pop
(bad)
outs
loopne
or
adc
jmp
pop
sub
cli
cmp
sbb
pushf
inc
mov
jo
in
mov
sbb
sub
stc
adc
movs
icebp
mov
sub
adc
pop
fst
lock
out
test
lock
pop
pop
jb
sti
adc
mov
mov
(bad)
sbb
rcr
and
xor
and
dec
sub
xor
sub
sub
lock
cmps
xor
and
mov
pushf
les
pop
or
push
test
push
mov
dec
gs
mov
pop
cmp
pushf
xchg
adc
jle
das
sahf
fimul
sbb
dec
pop
iretw
jecxz
push
rcr
outs
out
mov
out
mov
xchg
ins
pop
pop
lock
sbb
fbld
sbb
jbe
cmp
data16
rcl
lock
loopne
out
cmps
cmc
or
add
repnz
test
shl
push
fwait
imul
pop
jnp
mov
clc
jge
and
(bad)
out
lahf
stc
out
retf
pop
sbb
fisubr
cmps
xor
push
(bad)
cmp
cmps
pop
clc
mov
adc
(bad)
adc
mov
and
add
jae
ins
xchg
rcr
cmp
inc
leave
ja
das
mov
out
stos
mov
out
mov
mov
add
sahf
dec
cmp
xor
icebp
pusha
mov
cmp
rcl
push
add
retf
jbe
lds
(bad)
mov
stos
js
push
aas
and
stc
mov
outs
test
mov
lahf
xor
xor
mov
out
aad
mov
cwde
jmp
inc
sub
fst
and
or
out
push
outs
or
cld
loop
ror
sahf
out
std
push
jns
shl
xor
inc
cmps
adc
ror
push
jmp
in
mov
je
test
into
inc
push
(bad)
rcl
xchg
xor
shr
jle
pop
stos
cmc
dec
es
xlat
push
ins
or
and
(bad)
loop
add
jmp
sbb
pushf
mov
movs
inc
test
mov
jo
jp
fstp
push
lds
dec
and
adc
add
aaa
loop
and
scas
inc
aam
pop
cmp
push
call
aaa
dec
stc
(bad)
pop
loope
scas
fidiv
xor
jmp
push
std
jo
fmul
movs
xor
mov
inc
dec
jnp
ss
mov
out
inc
cmc
sbb
jmp
dec
into
mov
lods
mov
movs
outs
cld
in
nop
mov
mov
cmc
mov
adc
stos
mov
pop
outs
ficomp
xor
or
(bad)
movs
cmps
mov
push
fsub
out
push
cmp
setno
pop
mov
xor
ja
fwait
test
or
scas
lds
add
imul
(bad)
pop
mov
sahf
lods
jp
fs
sti
mov
mov
sbb
mov
cmp
add
mov
dec
retf
loopne
push
xor
call
loop
mov
dec
push
ds
sub
lea
loope
shr
sbb
fcom
int3
aaa
mov
sbb
inc
xchg
in
gs
(bad)
leave
inc
sbb
fisubr
cli
out
or
or
fucom
add
jae
mov
loope
mov
cmp
dec
mov
mov
ficom
xor
out
rep
or
pop
loopne
pop
xchg
ja
push
or
fild
ss
je
fisttp
sub
loope
ret
push
dec
push
pusha
test
pop
or
daa
or
xchg
cwde
sub
xor
jne
and
adc
cmp
xchg
das
(bad)
popa
cmc
dec
les
dec
bound
jecxz
cld
repnz
pop
(bad)
int3
inc
adc
adc
not
mov
mov
dec
mov
add
out
nop
scas
shl
ss
cmp
(bad)
or
ja
dec
shr
sub
movs
mov
dec
cli
adc
arpl
pop
shl
rol
out
loop
bound
iret
jns
inc
cmp
out
js
or
jmp
cmc
inc
out
xchg
jge
pop
cld
daa
mov
pop
cmc
shl
pop
xor
mov
push
and
dec
imul
add
data16
dec
mov
lods
mov
xchg
in
sub
test
and
cmp
stos
ja
cmp
fmul
adc
xchg
mov
in
fs
bound
fdiv
or
xor
retf
inc
sub
cld
loopne
sahf
sub
fst
mov
sub
mov
into
cli
jns
mov
cld
dec
retf
or
push
dec
xor
ret
mov
mov
xor
ret
jge
sbb
ins
(bad)
test
sub
pop
pop
cli
cmps
xor
pop
mov
cmp
inc
daa
xchg
sahf
adc
jle
aad
lods
cwde
pop
call
imul
cmps
rol
lods
enter
add
jg
cwde
ror
add
ins
frstor
pop
mov
pop
jns
daa
jbe
sahf
cld
lea
cli
cmp
cmp
xchg
inc
push
mov
call
sub
imul
lods
adc
mov
rol
outs
mov
mov
aam
mul
div
adc
mov
sbb
scas
les
cli
rol
mov
pushf
xchg
jg
pop
xlat
(bad)
sbb
dec
daa
in
(bad)
cld
rcl
leave
xor
enter
paddsw
sub
jl
inc
dec
neg
test
xor
dec
imul
leave
retf
pop
and
xor
in
mov
fcomp
mov
cmp
ret
movs
mov
jo
nop
int3
inc
sub
pop
retf
push
shr
fcomip
push
pop
jmp
aas
ja
pop
(bad)
fs
mov
fidiv
mov
xor
out
repnz
movs
xor
jae
or
dec
movs
mov
mov
jae
sbb
(bad)
cli
cdq
or
jl
mov
jecxz
add
clc
cmp
or
call
mov
mov
lahf
jns
retf
hlt
mov
popf
or
sahf
xchg
icebp
loop
and
ret
xchg
test
fidiv
enter
inc
sub
outs
sar
and
mov
mov
cli
adc
ror
and
or
and
aas
(bad)
mov
xor
xchg
mov
mov
mov
xchg
xor
push
lock
retf
cwde
inc
xchg
fild
mov
popf
repnz
sub
cmc
inc
imul
mov
push
sbb
imul
adc
cmp
(bad)
call
adc
iret
(bad)
sar
jo
jnp
lods
sbb
in
test
out
push
jbe
lods
push
xor
outs
std
test
in
call
ss
xor
xchg
cmp
je
popf
push
cmp
mov
fwait
pop
(bad)
sbb
es
jo
push
jno
out
inc
ror
ins
(bad)
es
js
xlat
and
mov
push
push
mov
les
sub
xor
iret
cli
sbb
and
jl
and
xchg
push
dec
xlat
(bad)
sbb
push
ins
push
and
dec
mov
push
push
or
(bad)
mov
add
int
imul
and
inc
clc
(bad)
mov
push
cli
sbb
movs
fwait
and
add
add
sbb
add
add
xchg
or
add
add
daa
add
add
add
and
push
add
xor
and
push
add
xor
add
add
enter
fsub
add
add
add
lods
xor
or
stos
add
xchg
add
add
and
add
add
add
aaa
add
add
add
add
pop
mov
into
retf
ror
or
in
jae
pop
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
inc
jns
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
inc
outs
outs
ins
push
popa
jb
add
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
gs
add
add
popa
inc
add
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
popa
jb
outs
jb
gs
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
inc
jns
jne
dec
xor
add
add
jbe
popa
dec
xor
add
add
jbe
popa
dec
xor
add
add
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
push
popa
jb
ins
jo
jno
add
pop
pop
jbe
popa
inc
jns
dec
xor
add
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
inc
jns
jne
add
pop
pop
jbe
popa
dec
xor
jns
add
pop
pop
jbe
popa
inc
jns
jne
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
gs
jb
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
fs
jbe
popa
inc
jns
popa
jb
add
jbe
popa
dec
gs
inc
popa
arpl
jb
add
add
pop
pop
jbe
popa
inc
outs
jb
popa
arpl
jb
add
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
jae
add
pop
pop
jbe
popa
inc
gs
inc
jb
xor
add
jbe
popa
push
gs
bound
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
inc
jns
fs
pop
pop
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
add
jmp
pop
push
shr
and
pop
in
dec
dec
inc
stos
ror
adc
ins
push
xor
and
inc
pop
dec
pushf
shl
mov
inc
cmp
outs
addr16
ins
and
ins
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
inc
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
cwde
bound
add
inc
add
jns
imul
dec
movs
mov
sbb
mov
pop
inc
scas
(bad)
sar
shl
xchg
adc
mov
cli
cmp
push
jmp
inc
xchg
cs
ss
fsub
or
pop
inc
scas
and
aas
and
bound
jp
jb
xor
add
dec
mov
ror
movs
mov
cmp
outs
addr16
ins
and
ins
gs
dec
imul
je
push
imul
je
imul
pop
push
imul
inc
dec
inc
pop
push
dec
pop
outs
arpl
add
dec
push
inc
ins
gs
jb
fs
imul
add
and
add
add
add
add
add
add
add
inc
add
add
les
cwde
bound
add
bound
jp
jb
xor
add
dec
add
int3
xor
add
adc
mov
cli
cmp
push
fstp
imul
dec
movs
mov
sbb
cmp
xor
or
stos
add
xchg
bound
add
add
add
add
ins
xor
or
outs
jb
xor
sbb
add
and
(bad)
(bad)
jmp
ins
xor
xor
pop
add
add
add
push
adc
add
inc
mov
add
add
add
bound
jp
jb
xor
call
add
inc
ins
gs
jb
fs
imul
jne
push
imul
loopne
fmul
(bad)
or
pop
sgdtd
sub
dec
add
add
add
add
add
add
repnz
inc
and
add
pop
add
js
je
add
je
js
(bad)
adc
add
add
add
repnz
inc
loopne
(bad)
call
add
je
add
je
jns
or
add
add
or
push
jne
push
imul
call
add
inc
ins
gs
jb
fs
imul
jne
push
imul
rol
add
add
sub
dec
add
add
add
add
add
add
repnz
inc
and
add
pop
add
js
je
add
je
js
mov
add
add
repnz
inc
loopne
(bad)
call
add
je
add
je
jns
ins
push
add
inc
add
add
add
(bad)
(bad)
(bad)
call
inc
add
add
add
(bad)
(bad)
inc
add
add
add
test
add
inc
add
add
add
add
add
add
adc
inc
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
push
inc
add
les
mov
add
inc
add
les
add
add
rcr
(bad)
inc
add
add
add
test
add
inc
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
and
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
and
lea
push
push
call
call
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
and
cmp
jae
and
jmp
call
mov
mov
mov
mov
lea
push
call
mov
call
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
push
jmp
lea
push
push
call
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
lea
lea
call
mov
push
call
mov
push
call
mov
push
push
push
push
lea
push
push
push
call
add
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
lea
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
push
jmp
mov
and
test
je
lea
call
lea
push
push
call
ret
lea
call
ret
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
push
call
mov
call
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
push
jmp
lea
push
push
call
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
push
call
mov
and
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
and
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
push
push
call
mov
call
mov
push
jmp
lea
push
push
call
ret
lea
mov
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
call
mov
mov
add
jo
push
call
push
call
mov
mov
push
call
mov
mov
lea
push
lea
push
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
call
call
mov
push
call
call
mov
mov
push
lea
push
lea
push
lea
push
push
call
mov
jmp
mov
mov
add
jo
mov
mov
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
mov
mov
sub
jo
mov
mov
push
push
push
push
push
push
push
call
add
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
and
or
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
lea
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
call
mov
mov
mov
sub
jo
push
push
call
mov
mov
lea
call
mov
jmp
mov
push
mov
add
jo
push
push
push
push
push
push
call
add
mov
mov
add
jo
mov
mov
and
mov
and
mov
push
lea
push
lea
push
lea
push
call
lea
push
lea
push
lea
push
push
call
add
mov
push
lea
push
call
push
push
call
push
call
mov
call
lea
push
call
push
push
push
push
mov
sub
jo
push
call
push
push
call
push
push
call
push
call
push
push
call
push
push
push
push
call
mov
mov
push
push
call
mov
mov
mov
mov
add
jo
push
push
call
mov
and
mov
push
lea
push
call
push
push
call
push
call
mov
call
lea
push
call
mov
mov
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
call
mov
call
and
lea
push
push
mov
sub
jo
push
call
mov
push
jmp
lea
push
call
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
call
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
lea
lea
call
mov
push
call
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
add
jo
mov
mov
movzx
test
jne
jmp
mov
push
call
push
push
push
push
call
mov
mov
mov
push
push
call
push
movzx
push
call
imul
jo
push
push
push
call
push
call
push
call
mov
mov
jmp
mov
push
call
call
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
push
jmp
lea
call
ret
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
push
call
mov
call
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
push
jmp
lea
push
push
call
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
mov
push
push
call
push
call
push
call
push
push
push
call
push
push
mov
push
push
call
push
push
call
push
push
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
push
call
mov
and
cmp
jae
and
jmp
call
mov
mov
neg
mov
adc
neg
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
and
mov
and
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
push
jmp
lea
push
push
call
ret
lea
mov
lea
push
push
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
mov
movzx
push
call
test
je
mov
mov
neg
push
pop
adc
neg
push
push
call
push
mov
movzx
imul
jo
mov
movzx
add
jo
push
call
mov
call
mov
jmp
mov
xor
mov
mov
push
call
push
push
push
push
xor
mov
movzx
push
call
push
push
call
push
push
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
and
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
mov
mov
and
mov
and
mov
push
push
lea
push
lea
push
push
call
mov
lea
call
push
lea
push
call
lea
call
lea
push
lea
push
lea
push
push
call
add
mov
lea
push
lea
push
lea
push
call
mov
cmp
jne
mov
and
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
lea
push
push
push
call
add
and
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
mov
and
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
lea
push
push
push
call
add
and
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
and
mov
lea
push
push
call
mov
mov
call
and
cmp
jae
and
jmp
call
mov
mov
add
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
and
cmp
jae
and
jmp
call
mov
mov
add
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
and
cmp
jae
and
jmp
call
mov
mov
add
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
mov
lea
push
push
call
mov
mov
call
push
lea
push
call
push
push
call
push
call
mov
call
lea
push
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
push
push
push
push
call
push
push
call
mov
mov
push
push
call
mov
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
push
push
call
mov
push
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
mov
jmp
mov
push
push
push
call
push
push
push
push
push
push
call
add
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
push
call
mov
lea
call
push
call
mov
lea
call
lea
push
lea
push
push
call
add
lea
call
mov
mov
mov
mov
push
push
pop
call
lea
mov
movs
movs
movs
movs
lea
push
call
lea
push
lea
push
call
lea
push
push
call
lea
call
mov
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
jmp
mov
and
mov
and
mov
and
mov
mov
mov
push
call
call
mov
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
lea
push
call
mov
push
push
call
mov
mov
mov
cmp
jae
and
jmp
call
mov
movsx
push
mov
mov
mov
add
jo
push
push
call
movzx
add
jo
push
call
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
movzx
mov
mov
mov
mov
jmp
mov
and
mov
and
mov
and
mov
mov
mov
mov
push
push
pop
call
lea
mov
movs
movs
movs
movs
lea
push
call
lea
push
call
mov
mov
call
lea
call
mov
push
call
sub
jo
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
movsx
push
mov
add
jo
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
movsx
push
mov
mov
mov
add
jo
push
call
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
movzx
mov
mov
mov
mov
mov
mov
cmp
jae
and
jmp
call
mov
mov
mov
cmp
jae
and
jmp
call
mov
movsx
push
mov
mov
mov
mov
mov
add
jo
push
call
mov
cmp
jae
and
jmp
call
mov
mov
mov
push
push
push
call
movzx
push
call
mov
call
mov
push
push
call
mov
mov
jmp
mov
push
lea
push
call
push
push
call
push
call
mov
call
lea
push
call
mov
mov
mov
mov
add
jo
push
call
mov
add
jo
mov
mov
mov
add
jo
push
call
mov
mov
and
cmp
jae
and
jmp
call
mov
mov
mov
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
and
cmp
jae
and
jmp
call
mov
mov
add
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
push
call
mov
lea
call
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
and
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
mov
add
jo
push
call
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
push
lea
push
call
push
push
call
push
call
mov
call
lea
push
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
add
jo
push
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
add
jo
push
call
sub
jo
movsx
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
add
jo
mov
imul
jo
add
jo
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
mov
add
jo
push
call
mov
add
jo
mov
mov
lea
push
push
call
mov
mov
call
mov
add
jo
push
call
mov
add
jo
mov
mov
lea
push
push
call
mov
mov
call
mov
add
jo
push
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
jmp
mov
mov
cmp
jae
and
jmp
call
mov
push
push
call
mov
mov
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
mov
cmp
jae
and
jmp
call
mov
mov
mov
mov
add
jo
mov
mov
lea
push
push
call
mov
mov
call
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
cmp
jae
and
jmp
call
mov
mov
add
jo
push
call
mov
add
jo
mov
mov
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
push
call
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
cmp
jae
and
jmp
call
mov
mov
mov
lea
mov
mov
lea
push
push
call
mov
mov
call
and
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
lea
push
push
call
mov
call
mov
push
call
push
jmp
lea
push
call
lea
push
lea
push
lea
push
push
call
add
lea
call
lea
push
lea
push
lea
push
push
call
add
lea
push
push
call
lea
push
push
call
ret
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
call
mov
push
push
push
push
call
mov
mov
mov
lea
push
call
mov
call
push
push
push
push
lea
push
push
push
call
add
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
push
jmp
lea
push
push
call
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
call
mov
push
push
push
push
lea
push
push
push
call
add
mov
push
call
mov
mov
lea
push
push
call
mov
mov
call
lea
push
push
call
mov
lea
push
push
call
mov
mov
push
jmp
lea
push
push
call
ret
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
push
call
mov
mov
add
jo
push
call
mov
mov
mov
lea
push
lea
push
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
lea
lea
call
mov
push
call
mov
mov
add
jo
push
call
mov
mov
and
mov
and
mov
push
lea
push
lea
push
lea
push
call
lea
push
lea
push
lea
push
push
call
add
mov
mov
add
jo
add
jo
push
call
mov
add
jo
mov
mov
mov
add
jo
push
call
mov
mov
mov
add
jo
push
call
mov
add
jo
mov
mov
mov
add
jo
push
call
mov
add
jo
mov
mov
push
call
call
mov
mov
add
jo
push
call
mov
add
jo
mov
mov
mov
sub
jo
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
call
push
call
mov
push
pop
call
lea
mov
movs
movs
movs
movs
mov
add
jo
push
call
sub
neg
sbb
inc
neg
movsx
test
je
mov
push
push
mov
imul
jo
mov
add
jo
push
call
push
call
push
push
push
call
push
push
call
push
push
call
push
call
add
jo
mov
jmp
mov
jmp
push
jmp
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
push
push
push
push
mov
mov
mov
and
mov
and
mov
mov
push
call
call
mov
mov
mov
push
call
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
fsubr
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
dec
scas
add
pop
scas
add
ins
scas
add
jbe
add
test
add
stos
scas
add
mov
scas
add
fsubr
add
(bad)
scas
add
or
add
sub
add
inc
scas
add
xchg
add
sbb
add
add
sub
adc
add
mov
scas
add
fsubr
add
cli
scas
add
add
add
adc
add
xor
add
dec
mov
add
add
jp
add
xchg
add
test
add
mov
add
(bad)
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
ins
mov
add
mov
add
add
xor
add
(bad)
mov
add
mov
add
mov
add
mov
add
add
es
add
mov
add
add
add
add
sub
jle
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
push
mov
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
dec
gs
inc
popa
arpl
jb
add
add
pop
inc
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jns
jne
add
add
pop
pop
jbe
popa
inc
jb
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
outs
add
add
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
inc
jb
outs
jb
add
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
bound
outs
inc
jb
outs
jb
add
add
jbe
popa
inc
jns
fs
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
jbe
popa
inc
outs
outs
ins
push
popa
jb
add
add
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
jb
jae
add
add
pop
pop
jbe
popa
push
popa
jb
gs
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
jns
popa
jb
add
add
jbe
popa
dec
xor
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outs
gs
je
inc
outs
jne
fs
jb
outs
jb
add
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
jbe
popa
inc
jns
jne
add
add
pop
pop
jbe
popa
push
gs
jb
add
add
pop
popa
fs
data16
je
outs
add
add
jbe
popa
push
gs
pop
jbe
popa
inc
jns
dec
xor
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jns
jne
dec
xor
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
inc
gs
inc
jb
xor
add
add
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
inc
outs
jb
popa
arpl
jb
add
add
jbe
popa
push
popa
jb
ins
jo
jno
add
pop
pop
jbe
popa
push
popa
jb
fs
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
popa
jb
outs
jo
add
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
dec
xor
jns
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jbe
popa
push
popa
jb
outs
jb
gs
add
add
dec
gs
add
add
pop
pop
jbe
popa
push
je
inc
jns
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
