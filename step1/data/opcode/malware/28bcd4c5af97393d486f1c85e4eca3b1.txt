fcomp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
add
add
and
add
add
add
and
dec
inc
add
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
in
add
add
add
aas
add
add
xchg
add
add
add
ja
add
aad
add
add
add
lods
add
add
add
loop
add
mov
add
add
add
sbb
add
xchg
add
push
add
add
add
test
add
cli
ret
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
jg
add
add
add
mov
out
add
add
add
(bad)
add
add
add
add
add
or
add
xor
add
add
add
cs
add
add
add
add
js
add
add
add
add
add
add
add
jnp
xor
xor
sub
sub
sub
sub
aaa
cmp
xor
jge
cmp
outs
fs
gs
jae
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
cs
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jne
je
imul
add
fdivp
dec
nop
mov
cmp
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
nop
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
loop
jb
add
add
fild
add
sbb
bound
ja
push
add
inc
add
jno
inc
add
inc
add
add
add
add
and
nop
add
or
pop
dec
lahf
adc
xchg
mov
fist
push
mov
pop
inc
pop
xchg
pop
xor
movs
add
push
mov
jns
es
sub
xor
mov
lahf
cld
out
ret
iret
or
pop
jo
loope
out
aad
call
inc
fldenv
cwde
shl
popa
push
out
push
sub
mov
fucomi
pop
test
or
cld
xchg
test
dec
mov
xchg
arpl
loope
push
(bad)
xchg
ret
pop
sbb
cdq
mov
mov
retf
in
inc
xchg
inc
sbb
shr
sbb
in
xor
(bad)
fld
lock
lds
test
mov
dec
cwde
out
rcr
add
mov
dec
ins
loop
aad
jmp
shl
mov
and
inc
dec
or
jl
xchg
jns
sbb
adc
mov
fld
add
sub
xor
cmp
push
push
repnz
test
call
and
pop
add
das
push
lds
mov
sahf
div
mov
cmp
pop
push
xor
sbb
sub
call
pop
ss
jb
mov
lods
(bad)
imul
jo
dec
and
add
push
arpl
shl
mov
or
jae
push
dec
cmp
mov
adc
arpl
sbb
pusha
lock
ds
outs
sub
repz
fild
sti
retf
sub
enter
dec
fist
sar
retf
jge
xor
ja
rcr
test
data16
retf
ss
rcr
out
movs
xlat
stos
inc
test
push
xor
(bad)
sbb
pop
sbb
mov
add
sub
xchg
or
leave
bound
jno
jmp
push
inc
or
call
stos
cli
(bad)
in
stos
xchg
in
test
mov
inc
adc
dec
dec
push
add
xor
ret
imul
imul
nop
ja
pushf
push
push
inc
daa
fistp
ss
adc
mov
push
jp
loope
cs
pop
mov
mov
add
pusha
pop
xchg
inc
jno
int3
out
loopne
retf
push
cmps
ror
outs
enter
sub
mov
lea
add
sbb
dec
xchg
jb
jecxz
adc
(bad)
retf
mov
mov
sbb
push
sub
jle
mov
xchg
mov
mov
in
adc
cmps
push
ret
add
sub
inc
ret
gs
pop
test
int3
push
cmps
mov
ins
dec
(bad)
mov
cmc
dec
add
push
retf
xlat
mov
mov
jae
pushf
jecxz
movs
jnp
int3
out
dec
add
je
outs
pop
movs
cmp
pop
shl
cmp
outs
xchg
or
retf
shr
cmp
inc
jb
cs
inc
jl
push
jo
int
in
mov
add
repnz
push
stos
mov
mov
xor
sahf
cmps
dec
cmc
jg
out
js
stos
pop
popf
(bad)
aam
mov
(bad)
cmp
or
or
(bad)
jmp
push
int3
mov
push
pop
aad
shl
sub
cli
repz
outs
push
(bad)
lds
lds
push
cs
arpl
loopne
in
out
add
pusha
mov
jae
mov
into
lds
jg
adc
in
call
les
loop
jle
repnz
add
dec
xchg
ss
xchg
fsubr
jge
pop
xchg
pop
outs
or
retf
idiv
inc
xchg
add
out
push
mov
fldcw
fidiv
and
pop
outs
xor
cld
sbb
sub
sub
pop
mov
xchg
pusha
mov
clc
cmps
sub
aas
mov
cmp
loope
in
xor
(bad)
jmp
shr
cmp
jnp
setnp
leave
popa
repnz
call
dec
dec
aam
fisttp
jno
mov
not
push
jge
xor
ror
jle
push
les
adc
in
ds
shl
in
shl
push
shl
repz
inc
pop
aaa
in
mov
mov
add
jmp
in
inc
add
jg
fs
xchg
cmp
jb
popf
clc
leave
(bad)
push
mov
movs
and
sti
mov
pop
and
inc
xor
pop
or
jecxz
popa
dec
mov
inc
(bad)
jl
push
fwait
hlt
hlt
outs
push
retf
or
mov
mov
pop
adc
jmp
mov
imul
push
sbb
sbb
out
(bad)
xor
xchg
cs
and
mov
lock
sub
xchg
sbb
sbb
sti
dec
(bad)
pop
dec
enter
mov
pop
jmp
inc
mov
mov
lock
aas
inc
mov
sbb
adc
scas
dec
mov
faddp
loop
xchg
or
dec
fisttp
(bad)
lock
sbb
ss
test
or
mov
ja
cmp
sbb
xor
in
sbb
test
dec
fcmovnbe
mov
push
pop
outs
std
ss
ja
pop
std
in
adc
and
and
inc
or
xchg
dec
sub
dec
mov
cld
jecxz
jb
leave
pop
xchg
movs
mov
sbb
push
jb
mov
xor
mov
mov
cmc
pushf
push
neg
mov
ja
fwait
les
sbb
sbb
fadd
xor
cmovge
addr16
jl
mov
or
fld
shl
je
mov
push
and
ds
mov
(bad)
cmp
lods
mov
inc
ins
sub
cmp
xor
clc
in
ss
lods
bound
call
xchg
adc
pop
adc
mov
push
lods
jl
xchg
arpl
push
ss
jnp
fmul
push
stc
ss
cmps
leave
push
mov
retf
mov
lods
jg
shr
mov
mov
cmp
mov
push
inc
aas
dec
mov
xchg
rol
outs
mov
movs
adc
dec
dec
rcl
cmps
adc
loopne
xor
mov
xor
or
mov
pop
(bad)
stos
sub
sbb
mov
or
ret
sbb
push
sahf
lods
fist
inc
rcl
adc
repnz
outs
jg
pop
cmp
fwait
pop
rcl
mov
mov
add
fistp
fdiv
push
loop
pop
shl
hlt
cmps
push
ja
mov
cmp
pop
fild
cmp
xchg
push
shr
sbb
mov
inc
jmp
jno
imul
mov
xor
add
stos
sub
push
inc
cmc
cmp
(bad)
in
xchg
sub
sbb
fwait
xchg
(bad)
or
retf
sbb
popf
mov
test
push
xor
fmul
push
xchg
mov
mov
jns
imul
fidivr
loopne
test
lods
in
inc
vcmpord_sss
pop
dec
jae
out
add
sbb
jmp
retf
jo
xlat
xchg
(bad)
out
addr16
not
xchg
fcom
jbe
xchg
fist
fs
adc
test
repz
sbb
int3
jb
pop
sti
gs
jle
fwait
adc
add
arpl
stos
jg
xchg
out
fucomi
pushf
cmc
mov
aaa
test
push
ret
or
scas
mov
aam
mov
jnp
enter
jg
jnp
dec
call
lods
sub
jo
int
jb
mov
pop
imul
xchg
pop
cs
sbb
mov
sbb
sub
lods
pop
cmp
(bad)
js
or
dec
xchg
aas
sub
sbb
adc
dec
inc
mov
jg
jmp
out
gs
cmc
adc
lods
xor
mov
jmp
retf
or
test
fwait
pop
inc
or
dec
adc
rol
sub
cmp
or
mov
cwde
cmp
out
mov
in
pop
ins
ret
mov
int3
sub
imul
sti
mov
dec
test
(bad)
mov
ror
jmp
dec
add
les
idiv
mov
ins
ror
or
xor
push
and
pop
xor
mov
add
mov
jae
add
shr
ds
test
sub
lods
push
movs
in
lea
fwait
or
mov
mov
imul
xor
hlt
cld
jmp
addr16
clc
dec
jge
xor
cmp
imul
pop
jle
inc
mov
inc
xchg
pop
fldenv
out
ins
inc
mov
ret
aad
mov
xchg
pusha
cmps
aaa
aas
dec
mov
pop
cmp
pop
in
mov
fiadd
leave
call
and
push
mov
or
add
mov
xor
dec
sub
(bad)
fdivr
call
pop
and
and
hlt
fild
retf
mov
sbb
cdq
adc
xor
popa
cwde
test
mov
popa
or
push
jp
(bad)
adc
out
pop
mov
jg
pop
in
mov
pop
pop
ss
fs
cld
js
shr
cs
ja
mov
lds
je
pop
adc
and
xor
adc
retf
push
push
lods
mov
or
jne
cmp
test
and
cmp
sbb
push
enter
jne
jmp
jbe
clc
jle
lds
push
inc
jp
mov
sti
mov
add
test
mov
loop
test
and
mov
mov
ins
ins
jbe
jnp
fadd
mov
and
pop
fist
iret
sbb
jg
retf
jp
xchg
inc
dec
(bad)
or
daa
push
mov
mov
mov
cwde
sub
mov
sar
push
jl
adc
retf
neg
mov
(bad)
shr
xor
and
ins
sub
aam
sbb
adc
les
xchg
rol
add
sub
inc
stos
test
fnsave
and
xor
in
not
test
lds
add
idiv
int3
mov
cs
cmp
jne
cmp
pop
retf
(bad)
cmp
push
pop
test
inc
popa
bound
cmp
mov
push
out
and
add
lock
rol
lea
cmps
sub
pop
mov
data16
pop
add
fwait
push
jns
mov
push
ret
ss
jbe
cdq
mov
test
cmp
sub
jp
mov
fs
(bad)
sbb
xchg
sbb
and
and
push
pop
ins
lds
loope
in
push
or
add
inc
jbe
jae
lock
mov
and
fiadd
ins
stc
jns
sahf
pop
adc
ret
sub
sub
or
pop
cdq
and
pop
movs
in
ins
xchg
inc
ret
ror
mov
push
and
stos
mov
add
(bad)
pop
jmp
retf
cmps
dec
jbe
mov
out
and
adc
dec
inc
mov
sbb
cmps
adc
sti
ret
inc
mov
ror
mov
fnstsw
ret
sar
or
scas
add
hlt
cmc
test
(bad)
icebp
xor
popa
mov
pop
mov
outs
pop
push
mov
dec
xor
imul
mov
pusha
mov
jg
cmc
addr16
or
mov
movs
(bad)
add
inc
shr
push
add
cli
push
aam
and
fdiv
or
push
in
xchg
add
xchg
dec
sbb
in
cwde
jg
pushf
jge
retf
nop
mov
add
fst
not
popf
les
ins
adc
fdiv
repz
enter
test
sub
push
jle
inc
movs
fnstsw
(bad)
jmp
xchg
mov
mov
nop
arpl
dec
fiadd
xchg
ret
dec
fcomp
cmp
dec
shr
mov
enter
out
and
and
lds
lods
dec
pop
inc
cmove
sub
xchg
nop
push
dec
out
pusha
xor
inc
pusha
(bad)
and
dec
jno
es
aam
cli
cmp
js
pop
jne
mov
mov
into
or
adc
add
fld
rol
das
xor
lods
jns
in
test
ss
jmp
dec
sbb
cmc
pop
fwait
and
pop
cmp
pop
pop
push
pusha
mov
lea
jae
(bad)
(bad)
std
lods
mul
hlt
icebp
xchg
mov
push
clc
rcl
add
xor
xor
nop
xor
std
cmp
stc
or
cdq
fdiv
mov
imul
loop
arpl
pop
movs
inc
cmps
sbb
fild
pusha
mov
test
pop
fldcw
lahf
iret
sahf
pusha
mov
pop
cmp
jp
xchg
inc
call
inc
fcom
imul
mov
test
cmc
add
std
movs
addr16
cdq
sbb
push
mov
inc
xchg
add
dec
pop
add
outs
rcl
sub
call
xchg
jmp
ins
js
adc
mov
adc
push
pushf
and
sub
arpl
lahf
xlat
push
clc
push
sbb
outs
cwde
jge
xchg
and
test
(bad)
jbe
stos
cli
mov
repnz
push
jp
shr
adc
lods
test
and
ss
hlt
loope
icebp
lds
adc
push
fs
cmc
xchg
nop
mov
rol
xor
add
cmp
mov
and
and
or
jb
das
test
add
ret
xor
leave
adc
push
outs
sbb
jno
inc
in
jg
cmc
inc
into
jge
in
mov
sbb
sbb
mov
xor
ret
jp
ret
or
pop
mov
inc
jg
cmp
in
push
ja
xchg
js
stc
adc
add
into
bound
jae
popf
and
or
xchg
mov
xchg
xchg
sub
pusha
push
push
mov
leave
dec
adc
dec
cmp
xor
push
js
inc
clc
xor
inc
enter
jp
mov
xchg
or
pop
daa
xchg
mov
inc
jnp
add
sbb
xchg
in
scas
mov
out
xor
push
mov
jmp
(bad)
xchg
fist
retf
repz
test
push
frstor
fst
ret
mov
mov
mov
cmp
jns
pop
sub
jecxz
arpl
clc
repnz
cmps
mov
push
adc
not
xlat
and
std
mov
cmp
daa
repz
out
jmp
fisubr
inc
loope
inc
rcr
out
loop
xor
mov
mov
pop
fs
pop
into
sub
cld
cmp
or
cmp
sar
test
fidiv
dec
(bad)
loop
push
sahf
pop
inc
lods
ds
scas
jnp
ror
(bad)
adc
sbb
cmp
cmp
push
loop
scas
mov
jbe
mov
jmp
mov
inc
ds
sbb
xor
push
movs
nop
or
enter
sub
jne
xor
xor
aas
sub
or
xchg
and
out
loop
into
sub
pop
pop
or
loopne
daa
ret
jmp
cmp
xchg
add
mov
mov
sub
dec
aas
pop
push
cld
adc
adc
popf
cmps
and
inc
sar
lock
idiv
adc
repnz
add
or
dec
cmc
push
ja
rcl
cmp
mov
lahf
mov
xlat
sub
in
nop
sbb
stc
add
dec
mov
xor
dec
mov
cmps
hlt
data16
pop
loopne
and
push
in
pop
push
cmp
stos
icebp
pop
lods
jo
or
inc
pushf
addr16
aam
sub
fld
mov
addr16
fsubr
mov
jmp
(bad)
mov
enter
cdq
dec
or
pop
mov
jmp
mov
push
repz
shl
fwait
xchg
repz
add
push
mov
sub
mov
pop
mov
and
push
int
xor
fdivp
imul
mov
and
jg
bswap
sar
push
pop
outs
adc
jns
addr16
in
fcom
lahf
pop
mov
push
test
pop
mov
loope
jle
aam
imul
pushf
jmp
mov
pop
mov
mov
gs
es
sub
or
ins
jno
xchg
xchg
adc
mov
or
and
dec
jmp
dec
fucomi
adc
(bad)
dec
fistp
add
fdivr
popa
lock
inc
mov
push
lahf
rcl
movs
mov
inc
daa
jmp
push
and
int
jne
cmc
fbld
nop
jns
in
test
icebp
mov
in
test
popa
mov
outs
lods
mov
add
imul
dec
push
inc
mov
push
push
sub
xchg
int3
loop
ins
inc
ret
popa
jae
lods
cwde
div
es
cmps
add
mov
push
or
adc
cmc
add
(bad)
outs
(bad)
dec
int
int3
and
mov
mov
add
in
push
pop
int
hlt
out
inc
mov
mul
and
cmp
fstp
out
ins
in
mov
retf
lahf
or
dec
sahf
fs
sbb
push
xchg
dec
push
mov
sub
arpl
(bad)
iret
jae
xchg
(bad)
jnp
sbb
xchg
jmp
jbe
es
xchg
in
pop
cmps
add
cmp
or
sub
aam
outs
iret
dec
or
daa
sub
inc
rol
pop
(bad)
push
call
(bad)
in
movs
std
cmp
add
xchg
xor
into
cmp
lock
ret
xor
push
mov
fs
mov
ret
shl
fistp
jg
push
mov
pop
lods
xor
in
aad
out
nop
push
xlat
out
mov
mov
sbb
cld
add
jae
cli
pushf
sbb
jg
mov
pop
cmp
dec
mov
jg
popf
xchg
push
and
or
outs
in
in
push
dec
sbb
nop
daa
call
inc
fbld
add
push
pop
jle
aaa
xor
sbb
hlt
lods
outs
mov
test
call
mov
pop
test
sar
inc
(bad)
push
mov
mov
mov
push
mov
not
dec
jp
retf
movs
jp
sub
mov
or
(bad)
repz
ss
dec
lods
xchg
int3
jae
aas
push
adc
inc
pop
rcr
xchg
dec
mov
ja
lods
cld
ret
push
cmp
(bad)
clc
pop
or
sbb
jbe
loop
shr
mov
mov
shr
out
add
sahf
mov
mov
jae
(bad)
mov
dec
mov
mov
lods
xchg
loope
cmp
jmp
ret
idiv
and
pop
jne
fiadd
scas
jecxz
push
dec
push
or
mov
bound
and
aad
in
cld
cmp
inc
sub
sar
leave
test
pusha
add
sub
cmp
pop
mov
pop
inc
jne
into
mov
cld
int
stos
adc
jmp
fcmovnbe
mov
push
std
test
adc
loope
retf
(bad)
cmp
sbb
mov
sbb
fist
xor
ja
inc
aas
mov
mov
out
mov
je
call
pop
cmc
jmp
mov
dec
xchg
daa
mul
(bad)
mov
retf
inc
in
in
scas
inc
ror
xchg
(bad)
jmp
hlt
lahf
mov
mov
or
in
and
retf
cmps
in
inc
mov
in
jp
pusha
add
lods
mov
pop
fwait
add
stc
inc
adc
int
test
cmp
push
(bad)
cmc
les
add
je
xchg
and
push
xchg
jo
mov
div
sub
mov
bound
pop
push
push
fadd
sbb
pushf
dec
add
aaa
les
in
xor
inc
and
outs
lods
lods
rcr
(bad)
mov
add
xchg
inc
mov
fcmovu
out
mov
adc
loopne
or
xchg
xchg
pop
pop
imul
mov
mov
arpl
cmp
pop
mov
shr
gs
or
shl
(bad)
(bad)
shl
cmp
mov
dec
jo
mov
cmps
add
daa
(bad)
mov
(bad)
ds
inc
leave
int3
xor
cmc
pop
sbb
adc
bound
loopne
jbe
xchg
mov
clc
inc
xor
sar
push
add
movs
or
retf
(bad)
jge
or
in
shr
push
dec
or
cmp
cld
dec
bound
xchg
xor
fisub
sar
mov
movs
jo
cmc
dec
add
inc
inc
xchg
jnp
pop
mov
pop
mov
adc
mov
bound
xchg
pop
jge
js
pop
adc
xchg
loop
xor
sti
and
fmul
add
xor
xor
lods
iret
call
ja
aaa
outs
ins
push
clc
jle
push
das
cmps
xor
pop
adc
mov
loope
ror
scas
das
es
popf
mov
das
repnz
adc
sub
gs
mov
inc
cmp
or
pop
repnz
xchg
outs
popf
jae
outs
das
xchg
dec
or
xor
mov
lahf
pop
adc
iret
sti
jno
test
mov
outs
je
jl
cmp
ss
(bad)
mov
fistp
or
xor
mov
repnz
adc
dec
cmp
cmp
mov
mov
aam
pop
dec
pop
cmp
adc
and
pop
mov
mov
pop
(bad)
cwde
cmps
xchg
adc
mov
add
call
scas
pop
push
or
ins
(bad)
cmps
dec
(bad)
mov
dec
pop
cdq
xor
mul
xchg
stos
or
mov
jae
and
call
mov
cmps
inc
inc
push
scas
mov
xor
add
mov
mov
lods
(bad)
push
mov
or
jmp
loop
push
push
inc
rcr
sub
cdq
mov
and
imul
sti
mov
les
ror
mov
ss
sub
in
popf
jmp
lock
jmp
shl
xor
imul
xchg
adc
mov
sub
jb
dec
pop
jecxz
mov
fldenv
adc
or
(bad)
repnz
jae
push
movs
jge
jo
mov
xor
jno
pop
jns
pop
adc
mov
and
pop
sbb
daa
loopne
dec
test
xchg
lods
push
jmp
fidiv
mov
mov
jmp
fwait
test
pushf
pop
loopne
jp
and
das
(bad)
jbe
aaa
(bad)
hlt
pusha
adc
cmp
pop
retf
or
xor
popa
or
movs
push
mov
adc
jg
mov
and
pop
ror
mov
pop
dec
xchg
fs
retf
rcr
sti
jge
push
(bad)
loopne
sbb
mov
jns
aam
jmp
fwait
mov
pop
mov
adc
or
adc
es
les
jmp
lahf
mov
xchg
adc
adc
shl
fmul
(bad)
imul
jbe
push
aaa
or
mov
inc
fsub
jecxz
dec
jecxz
inc
jecxz
adc
das
scas
clc
jae
sti
dec
jmp
dec
rcl
adc
leave
or
xchg
cmps
ror
and
mov
mov
and
lahf
push
jae
sub
mov
mov
scas
pop
mov
pop
mov
push
idiv
jmp
dec
xchg
ficom
xchg
int3
and
sbb
add
add
ja
pop
ret
ror
cli
loop
xchg
in
jbe
cmp
xchg
dec
pop
inc
stos
push
dec
shl
out
aas
ror
mov
pop
ds
mov
fsubr
int3
icebp
xchg
in
(bad)
jbe
inc
cli
retf
lahf
pop
xchg
outs
xchg
aad
aam
dec
push
adc
mov
xor
fild
xchg
add
cs
pop
mov
adc
cdq
pusha
test
cmp
in
ds
(bad)
push
add
mov
sub
fstp
in
(bad)
sub
sub
loop
into
retf
jp
js
and
jge
pop
xor
clc
push
xchg
cwde
cmps
fwait
pop
mov
fsubr
xchg
cdq
scas
mov
fwait
jl
mov
pop
movaps
les
icebp
cmc
push
mov
stos
cdq
mov
dec
aaa
xchg
xchg
sub
pop
hlt
or
add
fnstcw
jmp
nop
push
xchg
mov
cmps
dec
es
adc
xchg
lods
into
pushf
imul
xor
loopne
rol
xchg
adc
push
xor
les
int3
scas
xchg
or
jp
push
cmp
fmul
call
jns
fwait
cli
sub
or
out
imul
and
mov
sbb
movzx
in
inc
(bad)
cmp
das
inc
lock
es
cdq
xchg
shr
mov
arpl
jns
jge
retf
bound
dec
fwait
push
add
(bad)
mov
fmul
mov
mov
idiv
and
mov
xor
push
mov
(bad)
out
nop
xchg
dec
test
push
push
movs
(bad)
or
mov
(bad)
stos
jb
iret
jecxz
call
in
inc
jmp
cmc
(bad)
push
jecxz
jge
cmps
inc
mov
cli
movs
and
sahf
mov
jo
jle
aaa
jle
outs
dec
rcr
mov
jge
mov
(bad)
mov
rcr
cs
test
les
dec
xchg
les
fnstcw
popa
jge
lahf
mov
std
adc
cs
rcr
test
je
into
sub
out
mov
mov
mov
xchg
enter
mov
or
fstp
out
add
cs
sbb
std
shl
(bad)
dec
dec
movs
jl
inc
out
repnz
push
and
jecxz
jbe
sbb
mov
push
add
dec
push
pusha
push
pop
push
sub
outs
imul
cs
shl
add
ficomp
loope
mov
das
std
popf
(bad)
in
or
das
nop
sbb
jge
jmp
inc
lock
popa
xlat
mov
mov
inc
pop
ss
add
in
fadd
inc
ficom
jle
jg
out
jmp
mov
(bad)
imul
movs
aad
sahf
sar
push
mov
out
or
shr
jl
call
ds
fild
dec
or
add
js
or
(bad)
mov
jmp
mov
mov
dec
cli
cld
sahf
mov
and
add
inc
hlt
xor
pop
and
out
jmp
neg
mov
push
and
dec
dec
stos
adc
dec
pushf
cmp
and
popf
test
or
sbb
hlt
fcom
xchg
or
xchg
in
in
dec
in
pop
pop
clc
imul
js
jecxz
nop
bnd
nop
cwde
and
stos
xchg
pop
popf
jge
mov
or
dec
imul
stos
jmp
sub
stc
dec
pusha
push
mov
sahf
dec
or
mov
adc
xor
adc
movs
mov
imul
fdiv
cmp
mov
lock
dec
js
jbe
call
push
jbe
das
lock
cmc
icebp
repz
add
pop
push
mov
inc
pop
mov
adc
ret
je
cmp
mov
retf
in
sbb
inc
push
mov
out
mov
and
into
fdivr
cmp
lock
aad
(bad)
stos
dec
into
sti
fisttp
jb
and
mov
je
add
es
retf
and
mov
xchg
push
sbb
and
xchg
sub
adc
adc
or
test
xchg
and
les
fisubr
outs
fwait
or
mov
and
xchg
mov
inc
cmp
xor
ret
push
sub
xor
sbb
aas
lds
and
clc
cmp
xor
pop
pop
bound
mov
xchg
addr16
cmps
rol
scas
shr
into
jno
fist
xchg
and
cmp
mov
in
(bad)
push
jge
aad
out
sub
push
iret
jmp
mov
fimul
sub
sahf
cmc
cli
out
outs
inc
xor
out
ret
int3
cmp
mov
ja
jnp
and
mov
loope
fwait
sti
or
mov
in
scas
inc
inc
out
adc
(bad)
std
out
jb
ins
mov
adc
mov
ja
mov
mov
xor
pop
inc
pop
xchg
pop
idiv
ret
dec
mov
leave
je
test
aam
xor
push
mov
sbb
push
jns
inc
xor
shrd
sub
sbb
fisttp
adc
xchg
pop
fstp
dec
in
dec
mov
jno
mov
jle
jb
gs
popf
call
enter
fbld
fs
(bad)
call
(bad)
pop
dec
fiadd
push
in
mov
and
xchg
inc
ret
shr
fisub
mov
loopne
sub
aas
out
push
popf
bound
or
xchg
and
push
fcomp
rcr
leave
dec
movs
ja
and
addr16
and
(bad)
out
mov
test
sub
adc
xor
xor
call
mov
xlat
cmp
arpl
popa
ret
iret
xchg
mov
cmc
repnz
push
push
test
sahf
push
xchg
repz
xor
leave
push
xor
mov
pop
stc
sub
mov
mov
adc
and
movs
pop
push
sbb
ja
das
cmp
xchg
(bad)
cmps
mov
pop
pop
pop
test
ins
mov
and
jne
in
fidiv
jmp
cmpps
cmp
les
fisttp
xor
push
fiadd
or
loopne
pop
fs
jne
xor
or
sub
cwde
test
xor
aas
das
out
rol
in
jl
and
lahf
mov
add
popf
pop
push
mov
out
xchg
pop
stos
fld
in
std
jp
mov
into
jmp
enter
fxch
test
(bad)
jbe
push
dec
mov
push
clc
adc
out
xchg
mov
ret
adc
lods
icebp
add
cmp
mov
test
adc
repnz
psubq
inc
jo
push
pusha
(bad)
mov
lods
ret
xchg
xlat
add
call
int
cmp
loop
xchg
mov
push
(bad)
aaa
out
sub
pop
iret
xchg
retf
jbe
iret
and
push
adc
mov
clc
rcr
jno
adc
je
sbb
aad
xor
push
sub
jp
dec
push
and
add
pop
les
fdiv
sub
mov
clc
cs
addr16
pushf
and
add
rcl
and
cmp
jnp
out
push
inc
leave
and
push
jb
cli
pop
fstp
jl
adc
clc
dec
xchg
sub
jl
cmp
es
outs
jbe
and
in
inc
mov
stc
shl
(bad)
pop
sbb
adc
sbb
ret
in
iret
cmps
dec
sbb
or
pop
dec
mov
mov
cmp
arpl
cmp
outs
xor
push
enter
or
popf
iret
mov
pop
xchg
sbb
xchg
add
cmp
xchg
jno
std
mov
pop
jnp
push
rcl
mov
inc
mov
jp
xchg
or
add
cmps
ficom
mov
sub
add
leave
mov
jp
add
cld
mov
pop
dec
add
inc
inc
jbe
push
rcr
mov
lods
sbb
out
xor
jae
movs
push
(bad)
(bad)
outs
inc
popa
popf
hlt
sbb
and
je
cwde
pop
push
dec
paddusb
mov
jns
or
cwd
add
jp
sub
xchg
nop
xchg
sub
ins
scas
aaa
xlat
mov
inc
cdq
into
lods
pop
fs
jb
fs
cwde
add
es
aam
mov
xchg
push
stc
xchg
in
push
and
sub
cmp
loope
cmp
mov
push
stos
clc
add
dec
movs
inc
neg
adc
push
out
ss
dec
outs
dec
xor
out
or
mov
dec
pop
(bad)
cmp
cmps
ret
leave
dec
test
mov
fnsave
xchg
out
fwait
gs
aad
jo
je
pop
fidivr
retf
fwait
mov
mov
adc
xchg
sbb
in
cmp
mov
pop
cmp
out
gs
out
push
fadd
jb
mov
icebp
(bad)
or
call
inc
dec
stc
gs
adc
and
dec
fwait
dec
sub
pop
ret
xchg
call
fsubr
pusha
mov
repnz
xchg
cmc
jns
lea
push
cli
dec
jnp
call
mov
jmp
bound
jp
icebp
cwde
add
repnz
xor
sub
fmul
das
test
jne
add
push
mov
nop
inc
test
xor
mov
or
add
inc
dec
push
add
ins
mov
add
lahf
test
fstp
xchg
cmp
fbstp
outs
pop
pop
mov
push
in
les
push
xor
pop
data16
dec
repz
scas
pop
dec
in
sbb
sbb
adc
mov
js
xor
das
arpl
(bad)
ret
pop
fwait
ds
imul
shl
push
adc
out
xor
or
fst
test
fcmovnu
scas
sub
fcmovnu
sbb
inc
movs
lea
sahf
sahf
mov
add
jae
xor
test
ret
or
popa
ins
iret
lds
sub
xchg
ret
mov
push
add
cmp
scas
cmp
sbb
cmp
sbb
dec
xor
fidiv
outs
pop
or
jecxz
pusha
jg
aaa
push
popf
and
xor
sub
aas
pop
add
mov
cs
shr
aad
clc
sub
sbb
add
jecxz
and
mov
dec
test
mov
bound
aaa
fcomp
cmp
mov
cmp
sahf
mov
paddusb
fnstenv
sub
std
sahf
or
xor
sub
pop
mov
push
xchg
lods
push
xor
cs
sub
popa
mov
in
mov
stos
xor
outs
mov
inc
stos
popa
push
cdq
ror
pop
dec
add
repz
data16
into
clc
adc
push
repz
fisttp
shl
mov
mov
push
setge
dec
test
pusha
(bad)
sbb
hlt
mov
aad
cmps
xchg
or
mov
daa
movs
xor
das
(bad)
loopne
ins
xchg
pushf
sub
iret
ror
jne
out
or
sub
cmp
test
ins
sbb
leave
inc
inc
aas
movs
jae
pop
scas
push
xchg
enter
call
ss
pushf
mov
loope
or
pop
jne
lock
push
sbb
jp
add
inc
sub
mov
xchg
clc
mov
inc
fs
or
pop
icebp
es
add
dec
sub
mov
mov
lds
xchg
push
out
mov
or
stos
dec
and
inc
shl
xchg
scas
outs
push
and
out
loop
loope
dec
daa
or
js
(bad)
dec
push
and
and
(bad)
pop
inc
xchg
test
xchg
sbb
test
xor
dec
imul
cmp
mov
jo
xchg
fwait
xchg
dec
icebp
data16
mov
(bad)
inc
shl
or
add
jp
loop
(bad)
lds
shr
and
jge
sahf
sbb
pop
sub
sub
xchg
stos
neg
outs
and
mov
jnp
nop
loopne
call
call
xchg
(bad)
lock
iret
xchg
mov
push
xor
adc
xchg
xchg
inc
jl
jge
cmps
xor
adc
xor
sahf
sub
outs
cmp
and
xchg
push
movs
jg
dec
sub
lds
movs
es
sub
imul
adc
imul
fldl2e
mov
pop
jo
retf
pop
jg
shl
clc
add
jmp
xor
jae
cmps
fmul
pop
push
jnp
mov
scas
paddd
addr16
dec
lahf
fbld
lock
sub
int
dec
inc
mov
fimul
jbe
in
and
aaa
ficomp
scas
push
lahf
cmc
ins
mov
clc
dec
xor
or
xor
ins
or
jnp
std
cmps
push
adc
out
fcmove
and
cli
xchg
hlt
mov
xor
test
cwde
ja
sub
fist
stos
in
stos
cmp
gs
sysexit
aas
mov
or
cmps
in
int3
dec
add
push
mov
jb
push
cmp
jno
loop
arpl
iret
xor
xchg
pusha
jl
outs
enter
pop
imul
sbb
imul
xchg
ins
sbb
and
repz
push
adc
mov
data16
cmp
xlat
xchg
addr16
cwde
dec
pop
faddp
(bad)
iret
mov
test
xor
and
daa
mov
rcr
ret
push
or
out
ds
neg
popf
shl
sbb
jns
retf
pop
jmp
test
adc
pop
cdq
add
fsub
shl
ja
inc
std
imul
jns
inc
arpl
rcr
int
imul
stos
daa
dec
push
xor
lods
jmp
cmp
add
fcom
xor
dec
sahf
mov
out
xor
and
lock
inc
jge
ja
aaa
retf
or
add
fsubr
out
sub
mov
push
cmp
mov
lea
ja
sub
jns
or
imul
sar
call
pushf
stc
inc
call
push
mov
xor
jmp
push
popa
sbb
adc
retf
js
mov
test
mov
in
xchg
or
xchg
retf
in
mov
lods
and
(bad)
leave
mov
aas
mov
mov
lds
jno
loopne
out
mov
movs
ret
cmp
mov
bound
push
xchg
test
popf
pop
loopne
loope
mov
dec
imul
not
ins
or
test
int
aad
xor
push
adc
mov
inc
xor
xchg
clc
push
sar
stos
arpl
jecxz
adc
fucomp
inc
push
mov
stos
je
jg
add
syscall
lods
stos
aad
popa
lods
bound
dec
std
ins
push
mov
mov
(bad)
js
sbb
add
ret
enter
and
out
call
ss
cld
and
xor
mov
push
test
pop
stc
jge
daa
sbb
aas
rcl
pop
push
jle
xchg
ss
test
es
fadd
cwde
(bad)
mov
mov
fs
sbb
in
jecxz
nop
imul
out
js
shr
mov
xchg
xor
mov
test
aas
imul
dec
add
fyl2xp1
add
sbb
sub
and
push
adc
xchg
cld
(bad)
sub
call
imul
es
sub
imul
pavgw
mov
lods
adc
adc
lock
xor
aad
xor
mov
sub
fistp
xchg
mov
stos
je
or
sti
clc
das
cmc
cmp
push
or
xchg
int3
lds
shl
cmp
in
jmp
leave
int
jge
fbstp
popa
cmp
dec
neg
adc
js
push
dec
inc
aas
cs
or
aas
arpl
addr16
mov
bound
fld
mov
or
lock
movs
add
add
adc
ds
xchg
mov
sahf
cmp
aas
push
retf
retf
loopne
in
push
(bad)
fwait
test
xchg
cmp
jg
cmp
test
push
stos
int3
mov
ret
adc
out
or
in
push
sbb
or
and
sbb
inc
push
ins
and
dec
xor
sub
jmp
into
mov
(bad)
sbb
mov
jbe
fisubr
aaa
mov
and
in
ss
cmps
icebp
rcr
push
mov
(bad)
xor
aaa
adc
push
mov
and
dec
(bad)
jle
mov
mov
mov
div
(bad)
aam
dec
icebp
loope
loope
ins
cmp
sub
xor
test
add
lea
fs
mov
cmps
mov
lods
pop
loop
xchg
test
imul
inc
jmp
pop
jge
sbb
call
hlt
dec
jnp
mov
loopne
cwde
and
or
(bad)
sbb
stos
ja
or
push
xlat
add
loop
fisub
out
rcl
pusha
test
cli
or
pop
fistp
or
cmp
inc
pop
(bad)
cld
mov
icebp
fcomp
and
xchg
push
rcl
push
ins
mov
mov
cmp
ror
jne
mov
or
jmp
jg
jecxz
(bad)
dec
cli
xchg
jge
pop
dec
cmovge
cmp
dec
js
xlat
mov
inc
pop
pop
or
hlt
xchg
lods
loope
push
xchg
mov
push
mov
push
inc
cli
jg
js
sbb
mov
outs
inc
arpl
push
sbb
pop
jg
fld
outs
push
cmp
or
mov
aaa
jne
call
cli
mov
imul
xchg
cdq
xor
cld
xor
ret
add
repz
jp
and
cmp
js
pop
outs
mov
fcomp
es
test
xor
fstp
inc
loope
fwait
imul
xchg
jmp
movs
(bad)
push
dec
mov
xchg
inc
pop
mov
retf
(bad)
lds
jle
sbb
hlt
jo
popa
enter
imul
lods
cmp
and
aad
test
jecxz
or
js
pusha
fimul
xchg
movs
mov
add
pushf
mov
movs
arpl
retf
cmc
jbe
lock
into
aas
push
out
jne
cmp
or
pop
and
dec
repnz
sub
cld
aam
in
repz
adc
loopne
outs
xor
fwait
xchg
dec
pop
mov
or
push
mov
or
fbstp
or
pop
jmp
pop
push
lea
cdq
ss
xor
into
mov
pop
mov
cmp
xchg
js
inc
(bad)
scas
pop
int
shl
push
jl
xchg
aam
and
jb
clc
in
mov
jl
push
sbb
lods
push
cmps
jecxz
cmp
dec
popf
or
push
ds
js
push
pop
stc
push
cmc
jge
mov
jae
stos
or
pop
pop
dec
cmp
cmp
mov
out
scas
xchg
out
push
add
mov
or
repz
sub
aam
mov
shr
mov
ret
jbe
jbe
sbb
xor
mov
sbb
dec
cmc
sbb
pop
sahf
sti
sub
fldenv
xor
ret
cmp
sbb
jle
iret
pop
or
dec
inc
nop
pop
icebp
xlat
fst
push
jnp
pop
fnstsw
mov
jbe
rep
cmp
into
jno
out
sar
jne
fcmovu
pop
outs
push
in
jle
pop
(bad)
ja
mov
xor
cld
(bad)
mov
rol
and
sub
dec
inc
lahf
and
rcr
xchg
out
cmc
iret
add
adc
dec
jmp
in
outs
mov
mov
fsub
out
jl
add
retf
cdq
mov
das
mov
sub
cmp
js
clc
adc
jne
(bad)
in
mov
jnp
imul
aaa
dec
inc
iret
fist
or
mov
aad
daa
jmp
mov
fld
dec
das
mov
ret
outs
push
mov
or
pop
mov
jg
xor
inc
dec
pop
jnp
inc
das
sahf
in
daa
sbb
jbe
xor
pop
in
fnstsw
shl
adc
das
popf
test
movs
cmps
adc
jne
rcr
cmp
dec
test
cmp
jmp
ret
add
pop
imul
ins
xchg
sbb
imul
push
add
add
sub
outs
dec
mov
(bad)
or
dec
xchg
push
xchg
adc
aas
mov
(bad)
pop
sbb
or
xchg
and
mov
repz
test
shl
ror
into
mov
cmp
call
sbb
mov
mov
enter
mov
(bad)
xchg
aas
or
popf
dec
mov
fstp
cdq
es
(bad)
jmp
stos
push
stos
fidivr
mov
popf
pop
lea
scas
js
hlt
jle
adc
pop
inc
push
ror
test
mov
push
xlat
push
retf
xor
dec
movs
adc
outs
jge
pop
push
fsub
lea
xor
sbb
jb
inc
push
dec
adc
jl
push
sbb
in
(bad)
mov
sub
push
xchg
jb
jle
icebp
pop
imul
push
or
lods
pop
int
jge
sub
int3
pop
mov
pusha
(bad)
jns
push
xor
in
fmulp
dec
cs
icebp
fcmove
jmp
or
aam
enter
clc
iret
mov
lahf
add
inc
jnp
xchg
outs
push
jnp
out
mov
nop
add
jne
nop
cmp
cmp
daa
shl
push
inc
push
ss
gs
int
mov
push
xor
push
std
pushf
sub
leave
dec
sub
pop
das
into
inc
pop
mov
jmp
ror
hlt
or
mov
mov
push
push
push
cdq
cmp
pusha
xchg
xchg
enter
js
jae
xchg
pop
xor
scas
xchg
or
inc
sahf
fcom
jge
sub
dec
shl
rol
std
inc
add
call
sbb
ret
xchg
dec
fldl2t
scas
pop
dec
fcomip
sub
je
pop
jmp
pusha
retf
aad
clc
mov
jg
fist
sub
mov
jne
mov
mov
into
mov
xchg
dec
pop
cmp
cmp
or
rcr
mov
js
mov
outs
push
(bad)
aaa
sbb
mov
push
mov
jnp
sub
call
adc
je
iret
mov
dec
lock
mov
adc
pop
pop
mov
push
xchg
cmps
adc
cmp
sbb
sbb
sub
inc
xchg
lea
jnp
mov
ret
mov
in
repnz
xor
lahf
sahf
dec
jnp
jbe
(bad)
pop
add
leave
call
enter
outs
jg
pop
in
sub
shl
or
(bad)
cmp
inc
or
loopne
adc
mov
daa
out
add
push
(bad)
pop
into
adc
loopne
pop
sub
pop
push
retf
(bad)
jecxz
cdq
xor
sub
push
call
xor
xor
ja
pop
rol
xchg
mov
clc
lods
ins
inc
jnp
lods
push
in
sbb
cmp
mov
adc
cmp
or
xor
pop
imul
dec
rcr
outs
leave
fiadd
xchg
and
aaa
mov
in
sub
and
xchg
jmp
cdq
fiadd
in
test
xchg
movd
jo
lods
dec
jg
mov
mov
cwde
rol
sub
pop
sub
xor
outs
dec
jae
mov
(bad)
and
push
std
fisub
outs
mov
popf
arpl
stc
fnstenv
popa
or
nop
les
fcomip
add
ret
scas
push
inc
stc
imul
data16
inc
dec
xlat
xor
sub
bound
das
stos
sahf
add
jecxz
cmp
cmps
or
inc
std
adc
ss
imul
pop
out
push
aam
call
cmp
lods
jnp
addr16
xchg
mov
push
mov
cld
lahf
jb
sbb
push
and
pusha
ja
dec
scas
lods
jge
shl
int
and
arpl
and
ss
scas
cmps
xchg
add
push
ffree
add
inc
jno
stos
and
dec
sub
xchg
int
push
mov
out
jns
out
pop
inc
je
ins
outs
nop
dec
aam
ficom
rcr
inc
ss
retf
hlt
icebp
push
inc
sti
bound
jns
stos
mov
movs
call
data16
bound
sbb
es
sbb
push
fs
shr
movs
out
not
sahf
pusha
scas
xchg
sub
mov
mov
(bad)
pop
dec
fst
cmp
scas
(bad)
shl
and
sti
jge
mov
mov
or
mov
ja
retf
xor
adc
dec
repz
push
repz
push
cmp
(bad)
push
jnp
jge
ret
mov
xchg
rcr
pop
jp
cdq
gs
mov
mov
stc
jp
popf
lods
add
adc
clc
pop
mov
icebp
jne
test
mov
stos
cmp
dec
add
and
stos
xor
in
mov
add
retf
je
rol
out
jae
fdiv
test
(bad)
push
cmp
and
je
cld
push
fdivr
aas
xchg
mov
sbb
push
loope
dec
xor
sbb
or
hlt
xor
pop
add
je
mov
test
jecxz
cmp
sbb
sub
out
daa
sbb
pop
scas
jo
imul
std
sbb
xchg
or
jno
fsubr
sahf
jmp
xchg
pop
lahf
xchg
lea
add
out
mov
test
outs
shl
js
jmp
xor
mov
or
scas
sub
mov
(bad)
loopne
jge
mov
(bad)
or
push
(bad)
and
mov
adc
out
mov
dec
rcl
xor
mov
aam
cs
sbb
js
mov
adc
test
lods
sub
ss
arpl
je
in
je
fnstsw
xchg
jl
sub
ret
adc
mov
push
mov
outs
scas
test
js
sti
dec
pop
xchg
mov
inc
mov
int
mov
fs
adc
add
sub
xor
repz
lea
in
jecxz
ins
and
mov
mov
dec
test
sar
lahf
and
or
ret
push
lea
mov
cdq
push
pop
xchg
jmp
bound
iret
stos
out
cld
fild
lea
inc
es
cmp
jge
xchg
inc
pop
push
clc
push
pop
push
pop
loop
sub
js
jns
hlt
push
ds
aam
in
cmp
fcomp
mov
or
jnp
jle
loop
xor
jbe
pop
jno
shl
arpl
lods
adc
test
out
or
icebp
test
outs
shl
sub
fmul
xchg
push
bound
lock
and
xor
dec
loop
stos
push
sub
push
icebp
xor
sbb
fs
pop
jo
xor
pop
jnp
push
imul
rol
cmp
xchg
adc
add
imul
pop
mov
push
and
(bad)
inc
push
fdivr
ret
jb
inc
repz
fld
dec
outs
mov
cmp
enter
or
cmc
in
jmp
inc
(bad)
fbstp
sbb
dec
iret
mov
mov
scas
retf
mov
(bad)
sbb
std
xor
sub
into
ins
mov
in
push
loop
cmp
fcomp
stc
das
into
test
loopne
repz
jns
add
icebp
adc
stos
xchg
cmc
fisubr
push
shr
(bad)
xchg
push
xchg
ret
pop
ins
stos
loopne
adc
mov
sbb
cmp
push
and
cdq
cwde
bound
mov
sub
adc
and
lock
fcmovnb
inc
adc
(bad)
mov
jge
sub
jo
dec
sbb
dec
push
xor
fsubr
xor
loope
(bad)
fist
jbe
and
int
xchg
mov
xor
sbb
xchg
mov
out
enter
mov
jmp
jle
lea
ret
sub
xor
adc
cmp
int
sbb
loope
and
xor
stc
std
inc
sub
add
adc
data16
sahf
outs
ins
lods
adc
je
movs
add
sub
ror
cmp
leave
xchg
bound
call
sbb
in
cs
lds
xor
in
neg
popa
jno
or
ds
mov
or
mov
cld
hlt
cmps
(bad)
mov
inc
repz
movs
movs
ror
xor
dec
ins
adc
addr16
imul
ror
aaa
fldcw
lods
dec
fwait
repnz
pop
imul
dec
aam
loopne
rcr
fadd
in
cmps
adc
push
sub
sub
and
scas
add
out
xchg
gs
mov
dec
pop
mov
(bad)
mov
cld
pop
mov
mov
push
adc
ins
(bad)
cmp
jp
js
pusha
mov
popa
stos
rol
aas
xchg
xchg
add
aaa
ror
(bad)
mov
or
imul
retf
loop
push
jno
rcl
pop
sub
mov
stos
addr16
mov
ret
push
mov
jmp
fmul
push
xchg
popf
dec
jno
in
jns
das
icebp
pop
in
or
shr
xchg
(bad)
xchg
aam
push
hlt
or
rcr
dec
leave
mov
dec
xchg
dec
imul
(bad)
sti
mov
mov
aaa
jg
fist
pusha
outs
inc
jecxz
mov
dec
fcmovu
aaa
pop
or
inc
sbb
pop
stos
push
jl
pop
cmp
push
(bad)
mov
aam
mov
sbb
and
jns
mov
cmp
jecxz
icebp
sub
fistp
dec
add
iret
cdq
je
retf
or
bound
sahf
in
das
jp
xor
cmps
stc
(bad)
adc
xor
arpl
mov
call
movs
mov
ror
pop
test
stos
leave
dec
mov
bound
xchg
add
fwait
pop
jmp
jnp
xor
cmp
or
mov
xchg
bound
std
mov
adc
mov
scas
adc
add
and
daa
rcr
xchg
pushf
jnp
push
jecxz
fmul
fisub
les
push
clc
cmc
loopne
es
mov
fwait
out
sub
paddb
cmp
mov
jecxz
aad
ss
xchg
pop
(bad)
jb
fsub
mov
fs
add
push
inc
mov
and
or
pusha
pop
adc
aam
or
dec
push
adc
test
pop
and
lds
mov
outs
imul
aaa
or
xor
mov
xor
pop
jne
adc
jae
cdq
cld
ret
mov
cmp
ds
cmps
xor
jno
repnz
lock
mov
jecxz
cmp
pop
lahf
pop
ret
hlt
adc
inc
adc
into
mov
(bad)
push
(bad)
push
fs
(bad)
leave
test
pop
(bad)
pop
sbb
inc
mov
dec
xchg
dec
scas
call
mov
cdq
sbb
adc
es
xlat
cmps
dec
sbb
adc
sar
aad
bound
fs
cmc
cmc
(bad)
aaa
jmp
fiadd
gs
ins
enter
sbb
test
imul
push
into
sub
js
leave
or
and
fistp
cmp
push
push
mov
sub
fwait
rcr
add
in
dec
lds
mov
bound
xor
mov
sbb
dec
(bad)
mov
adc
lea
popf
xor
push
(bad)
movntps
mov
xor
outs
jl
mov
daa
mov
cld
cmp
inc
fist
cs
stos
adc
xchg
jo
sub
pushf
outs
(bad)
mov
nop
out
and
pop
(bad)
or
cmps
int
enter
or
sar
inc
int3
inc
jp
jge
test
lods
xor
add
push
cmc
ret
pop
enter
push
mov
fisubr
retf
cmc
loopne
inc
iret
mov
add
retf
cmp
shl
nop
ror
call
clts
leave
dec
pusha
jg
dec
jecxz
add
pop
mov
pop
mov
ret
data16
pop
pop
or
lods
retf
jno
inc
mov
aaa
and
mov
xor
(bad)
fadd
enter
fbstp
mov
lahf
cmc
pop
jae
bound
cmc
dec
cmp
dec
ja
mov
mov
jne
loop
(bad)
adc
mov
ret
ror
mov
dec
loopne
adc
loope
movs
jecxz
addr16
movs
sub
xchg
sti
daa
cs
data16
or
jno
push
push
cmps
stos
sub
leave
daa
add
mov
pop
jmp
jmp
adc
fdivr
ins
dec
out
das
or
out
cwde
cmp
pop
adc
fisttp
ins
imul
jg
stos
cmps
xor
test
push
dec
xchg
mov
sbb
mov
stos
(bad)
jmp
(bad)
stos
call
mov
inc
cmp
push
pushf
sar
pop
jle
adc
daa
sbb
repz
add
(bad)
dec
in
fstp
xor
ins
movs
jbe
pop
and
cdq
data16
pop
dec
je
out
icebp
in
lahf
fldz
int
jle
les
and
fstp
or
arpl
test
rol
mov
pop
xchg
mov
sub
nop
jmp
pusha
cli
adc
mov
xlat
cmp
sub
scas
repz
leave
aam
ror
pop
mov
jg
xor
cmp
xchg
and
loope
enter
xchg
add
icebp
jle
push
cmc
pop
jb
in
scas
mov
mov
ror
fcmovu
fcmovnb
mov
sub
lods
mov
fdiv
aas
ficomp
push
sbb
lods
into
mov
or
mov
mov
dec
add
sete
rcr
pop
int
std
test
sub
mov
ret
jmp
call
cmp
mov
movs
rcl
mov
mov
call
js
imul
xor
and
adc
mov
stos
imul
(bad)
(bad)
xchg
fist
sbb
int3
jmp
call
into
(bad)
ror
jmp
aas
aas
push
call
(bad)
lock
jbe
pop
xor
sub
xor
adc
push
or
xchg
mov
add
mov
sahf
sub
and
push
daa
dec
add
xor
adc
mov
and
push
jnp
mov
xor
xor
fcom
aas
jecxz
movs
jo
mov
sub
push
in
mov
jb
jb
mov
in
and
or
push
add
movs
mov
shl
sar
pushf
pop
loop
sbb
pop
inc
dec
mov
cmps
xchg
(bad)
mov
loopne
gs
cmp
xchg
sub
push
popa
dec
imul
sbb
sbb
mov
cwde
test
movs
mov
add
or
repnz
sbb
test
push
nop
add
and
adc
daa
or
aaa
sub
xchg
jle
sbb
imul
xchg
add
aad
das
inc
sbb
sub
xor
sar
ret
xchg
stos
js
mov
stc
pop
ret
(bad)
ds
mov
lods
test
push
add
nop
outs
or
xlat
mov
scas
out
out
into
or
xor
or
sub
call
hlt
lahf
or
out
(bad)
imul
retf
xchg
dec
loop
shr
sub
mov
and
jp
cmps
dec
int3
loope
sub
sub
sbb
or
dec
cmp
aas
lods
(bad)
pop
cmp
int3
jo
jbe
(bad)
(bad)
mov
push
and
xchg
rcl
icebp
das
inc
jecxz
pop
dec
jo
test
adc
aam
inc
xchg
xor
jb
or
mov
rcr
inc
test
pusha
push
movs
dec
push
mov
sbb
outs
xchg
cmp
test
ins
pop
les
adc
jns
js
movs
adc
fbstp
data16
dec
clc
and
outs
hlt
in
cmp
clc
jle
out
sub
mov
push
push
shr
mov
mov
push
jmp
loopne
leave
mov
retf
or
cmp
push
in
fimul
popf
sbb
pop
push
adc
dec
fst
mov
mov
cli
dec
inc
sub
sub
push
inc
movs
add
int
icebp
(bad)
sti
stc
loopne
xor
repz
outs
xchg
sbb
jb
pop
dec
jle
xchg
xchg
jp
dec
nop
xchg
(bad)
shl
ret
retf
js
inc
mov
call
jmp
mov
out
and
ja
ror
(bad)
pop
or
stc
xchg
mov
mov
lds
push
jmp
imul
test
outs
clc
sub
iret
cmc
ja
outs
ret
(bad)
(bad)
in
push
adc
call
mov
jecxz
adc
aaa
adc
loop
test
and
jge
dec
not
mov
inc
loope
lock
jg
xchg
xor
cmp
iret
jmp
jmp
fidivr
push
adc
jbe
into
sbb
enter
fsubr
ds
scas
aas
jmp
adc
jmp
xchg
leave
sti
add
scas
ss
sbb
adc
out
push
dec
pop
fadd
stos
fisttp
xchg
inc
dec
repnz
hlt
and
xchg
int3
lds
jl
cmps
sbb
xchg
movs
cmp
retf
mov
adc
mov
nop
xchg
mov
dec
cs
lods
ss
ret
stos
mov
mov
test
fsubr
sbb
sahf
and
xor
iret
jge
xchg
xor
loop
mov
jnp
adc
adc
jge
xor
and
in
test
addr16
inc
adc
lods
shl
sbb
dec
or
push
test
mov
jmp
js
ja
xor
xchg
sbb
push
pop
pop
lea
jb
movs
or
aam
call
jmp
imul
push
lea
movs
push
imul
mov
push
xchg
cmp
loop
push
mov
xchg
sub
out
cs
int
push
hlt
jnp
xor
and
cmc
xchg
sub
aam
push
test
dec
pop
cmp
(bad)
jle
cs
inc
fnstsw
mov
ja
mov
push
(bad)
push
ret
jae
fstp
pop
xchg
dec
mov
cmp
sbb
sar
int3
dec
xor
mov
pop
sbb
dec
dec
in
pop
fild
fs
std
jg
fld
dec
mov
xchg
xchg
push
ds
xor
mov
add
outs
mov
adc
mov
into
jbe
sbb
imul
movs
push
into
clc
stos
pop
(bad)
test
rcr
and
test
loopne
adc
pop
into
retf
xor
inc
and
push
xchg
test
div
nop
push
sub
push
cmps
jae
aam
cmp
jae
nop
in
ss
jmp
adc
jg
lods
test
shl
pusha
adc
mov
push
inc
js
xchg
xchg
jno
ja
or
add
push
inc
and
test
fucom
dec
jmp
call
or
nop
imul
imul
fs
inc
xchg
jmp
sahf
dec
not
retf
mov
push
mov
out
icebp
mov
dec
mov
aas
xchg
jnp
(bad)
mov
add
inc
cs
jmp
mov
and
movs
jno
retf
xchg
cmp
and
xchg
sbb
mov
pop
enter
sbb
aam
lahf
push
inc
push
int
xchg
adc
retf
sub
jns
cwde
out
dec
xchg
xor
sbb
jo
lods
inc
cwde
out
cli
or
out
push
jecxz
push
add
add
or
or
stos
jae
pop
adc
mov
(bad)
sbb
mov
mov
fucom
xor
xlat
pop
xor
mov
jne
dec
add
xor
outs
xchg
pop
dec
or
popf
call
fwait
lods
add
movs
(bad)
or
or
mov
sti
fsubp
adc
int
sbb
dec
fisubr
mov
std
dec
mov
imul
xlat
sbb
imul
call
jno
mov
out
movs
mov
mov
jne
dec
mov
sar
dec
mov
fidiv
loope
loope
sbb
inc
fld
mov
pop
adc
mul
sbb
cmp
aad
inc
dec
ret
test
mov
or
mov
ss
or
add
xchg
or
mov
addr16
push
test
sbb
into
mov
loopne
jne
push
jmp
addr16
xchg
outs
repz
mov
outs
dec
mov
add
ror
leave
jnp
(bad)
adc
repnz
cmp
mov
rol
mov
mov
cmc
leave
jb
xor
gs
repnz
xacquire
fistp
sbb
push
mov
je
push
sub
cdq
aaa
cmp
xchg
and
mov
sbb
jo
mov
fsubp
sahf
or
and
ret
or
(bad)
out
ret
lods
push
je
mov
push
add
(bad)
mov
dec
leave
push
(bad)
daa
call
add
adc
loopne
and
pop
fmul
dec
lea
push
enter
fcomi
mov
addr16
jp
cmp
inc
jmp
xchg
test
cs
fcom
test
call
push
xor
dec
retf
or
out
jmp
add
pop
cmps
stc
or
xchg
inc
stc
pop
sub
mov
pushf
sub
dec
sub
sbb
movs
xor
sbb
enter
ins
fistp
sub
cmps
cdq
pop
add
xor
xchg
xor
xchg
loop
and
out
shr
sbb
and
jmp
sbb
(bad)
and
adc
jg
iret
push
test
sysexit
arpl
retf
xchg
outs
cmp
repnz
push
push
aad
or
xchg
mov
mov
test
call
fs
add
out
pop
js
in
aad
dec
add
ret
out
gs
call
xor
push
fld
adc
xchg
sub
(bad)
int
loop
inc
sahf
add
(bad)
cmp
cmc
jnp
arpl
cdq
cmp
sbb
push
and
pusha
lods
ror
js
xor
jmp
mov
pop
jp
push
inc
or
dec
rcl
xchg
inc
mov
test
test
fs
in
dec
mov
int
outs
lahf
cmp
and
add
pop
mov
cdq
cmps
in
xlat
sub
pop
aaa
sti
mov
sub
mov
push
mov
sub
mov
push
mov
iret
in
stos
cld
mov
into
add
cmc
(bad)
pop
movs
bound
imul
outs
out
xchg
call
xor
cmp
sbb
movs
jmp
xor
cmc
mov
xchg
xchg
xchg
jae
rcl
cmp
pop
cmp
mov
xor
popaw
cdq
pop
dec
sbb
push
jae
out
sub
gs
pop
push
push
es
mov
xchg
jge
add
or
bound
(bad)
pop
(bad)
jae
push
sub
push
lods
push
dec
pop
xor
ins
adc
jno
repz
jle
mov
sbb
stos
fwait
lods
xchg
movs
push
xchg
jg
mov
mov
dec
jne
or
or
mov
jp
fcom
mov
call
mov
mov
loopne
lea
call
push
or
mov
out
mov
jo
cmp
leave
movs
inc
mov
(bad)
adc
xor
es
push
std
cld
cs
mov
test
jno
fbld
int3
cs
lahf
ja
jnp
nop
daa
test
cmc
iret
xchg
dec
cs
addr16
xchg
sub
retf
ins
xor
(bad)
call
inc
sbb
ret
jg
push
mov
pop
jge
push
test
sbb
stc
je
aam
pusha
(bad)
in
test
inc
test
call
cmp
mov
cmp
das
sbb
push
and
xchg
sbb
fidiv
mov
clc
lods
inc
adc
mov
sub
dec
loope
mov
call
movs
lods
adc
and
jo
movs
call
inc
add
call
mov
adc
repnz
xor
fnstcw
inc
inc
add
(bad)
push
jmp
test
mov
repz
aam
push
into
scas
ins
adc
add
js
push
jg
rcl
inc
mov
(bad)
into
xchg
push
int
jne
loop
mov
shl
xchg
and
mov
dec
sbb
cmp
cmp
xor
inc
sub
xchg
and
dec
push
inc
call
and
jns
push
inc
push
sub
loop
test
fcom
fnstenv
xor
dec
test
inc
and
fidivr
jno
or
pop
xchg
xor
and
jmp
ror
ret
push
loopne
add
mov
adc
das
jo
inc
nop
xchg
sbb
fistp
mov
jmp
shr
idiv
fcom
and
and
sub
loopne
loop
inc
add
inc
je
mov
xor
je
pop
test
adc
outs
(bad)
push
dec
lods
sbb
jmp
mov
and
and
lds
(bad)
retf
adc
fstp
das
mov
pop
jle
pusha
jecxz
jmp
(bad)
pusha
loop
outs
adc
iret
add
adc
pop
xor
adc
sub
lahf
fdiv
inc
fucomp
mov
mov
dec
add
pop
cmp
enter
fadd
mov
arpl
pusha
mov
shr
(bad)
jg
aaa
mov
loope
jbe
out
xor
push
mov
jmp
dec
sub
xchg
xor
inc
test
sbb
jne
outs
retf
cdq
in
add
mov
or
jbe
pop
inc
mov
out
pop
(bad)
cmp
repz
shr
cmp
and
fbstp
rcr
mov
jb
mov
or
loope
sbb
mov
out
xchg
rol
sbb
movs
frstor
fnstsw
dec
retf
cwde
xor
dec
out
add
jl
retf
mov
test
mov
int
leave
mov
xlat
clc
jle
pop
push
jmp
inc
repz
mov
ret
pop
sub
mov
or
jbe
xor
and
adc
aaa
test
push
test
push
mov
pop
adc
mov
or
push
ja
xor
mov
inc
ret
into
lahf
div
outs
and
mov
jmp
inc
jl
or
nop
(bad)
jo
movs
loop
outs
sahf
push
stos
cmps
dec
add
ins
imul
(bad)
in
sub
push
cmp
gs
inc
es
sub
pop
pop
in
bound
mov
loop
mov
es
ins
mov
xchg
pop
xchg
add
mov
sub
mov
leave
lods
mov
lea
jge
pop
mov
imul
fidiv
cdq
ss
mov
(bad)
out
(bad)
adc
test
add
push
inc
mov
sti
push
sbb
or
out
movs
in
in
or
in
pop
push
push
push
push
and
cs
push
and
(bad)
xchg
push
jne
scas
cld
lar
pop
push
hlt
dec
pop
mov
pop
jmp
sbb
mov
adc
mov
test
mov
stos
adc
mov
lods
ss
mov
adc
ror
push
out
(bad)
stc
aas
xor
push
dec
aas
shl
dec
pop
mov
shl
jmp
sahf
pusha
popa
add
xor
aad
cmps
pop
iret
shl
mov
sub
sub
xchg
xor
test
call
bound
out
popa
retf
sbb
loop
dec
xchg
daa
shr
not
in
retf
xchg
outs
push
or
xor
jge
xchg
daa
push
clc
das
es
pop
cmp
add
push
test
mov
rcl
dec
dec
pop
pop
(bad)
and
shl
ins
sub
stos
repnz
lock
push
ss
lods
or
mov
mov
int
jl
sbb
loop
and
mov
mov
imul
div
popf
sub
jno
pop
test
adc
xor
scas
call
mov
pop
push
loopne
leave
loopne
jecxz
or
in
out
and
ss
int
xor
sub
mov
rcl
add
repnz
cmp
jecxz
pop
pop
sbb
mov
inc
scas
jg
out
mov
es
lods
sahf
mov
lock
mov
js
dec
imul
push
rol
ret
cmc
xlat
pusha
jmp
xor
adc
sub
jbe
(bad)
cmp
xchg
mov
push
imul
retf
sub
leave
pop
fstp
loope
lahf
je
(bad)
retf
out
(bad)
push
dec
(bad)
adc
test
out
jge
add
mov
ins
pop
xchg
xor
mov
xor
outs
js
popa
inc
(bad)
xchg
mov
and
rcl
test
xor
das
cs
push
das
pop
cmp
mov
stos
pushf
(bad)
jmp
push
xor
and
inc
ds
xchg
or
mov
ret
jne
retf
or
dec
push
lds
idiv
data16
(bad)
mov
or
mov
jbe
fisubr
fist
int
addr16
mov
push
jmp
mov
jl
inc
(bad)
sbb
std
mov
pushf
sti
mov
or
add
sti
add
mov
ins
icebp
std
popf
ins
sbb
cmp
enter
push
adc
lds
push
inc
popa
push
xor
xchg
jns
popf
push
(bad)
sbb
push
es
fistp
mov
jno
loop
adc
daa
pop
shl
daa
es
xchg
gs
(bad)
outs
mov
jae
mov
lods
inc
adc
mov
sub
push
inc
retf
push
or
mov
jmp
and
xor
push
ins
cmp
sti
scas
mov
std
(bad)
shr
fimul
fs
mov
cwde
jbe
lods
mov
movs
pop
div
fbld
call
inc
add
pop
jle
and
mov
call
inc
sbb
cmp
mov
and
loop
xor
in
lds
sub
aam
fcom
inc
xchg
ror
fdivr
cmp
mov
xchg
out
fstp
loop
adc
mov
(bad)
mov
adc
in
enter
or
inc
mov
lods
mov
jnp
sub
or
and
adc
sar
std
xchg
mov
shl
sub
lods
dec
push
push
outs
pop
lods
and
icebp
cmps
inc
mov
push
rol
shl
xchg
pop
ror
pop
enter
scas
mov
jnp
jp
mov
jmp
(bad)
pusha
mov
jmp
stos
js
sub
jl
mov
pop
add
popa
adc
jo
inc
xchg
xchg
bound
mov
push
jbe
leave
scas
movs
push
push
repz
test
test
and
sub
push
inc
cmp
movs
inc
cmp
ds
in
mov
dec
cmp
out
sbb
cmps
leave
sub
leave
dec
pextrw
fwait
xor
shr
mov
stos
jmp
add
adc
movs
ins
dec
add
outs
and
add
ins
or
out
movs
mov
test
in
push
inc
or
mov
setbe
fwait
adc
out
shl
and
fistp
cli
dec
push
or
dec
sahf
shr
cmp
js
aad
mov
add
les
imul
std
loope
(bad)
loope
movs
dec
test
adc
ins
cmp
ficomp
dec
cmp
sbb
(bad)
loope
addr16
push
dec
mov
movs
fcom
test
sub
rol
push
loopne
scas
and
adc
sub
lds
inc
leave
or
sub
mov
js
push
xchg
pop
mov
add
inc
mov
and
nop
fwait
cmc
cmp
pop
xchg
nop
pop
mov
test
cmp
mov
nop
jg
xlat
in
test
adc
lea
stos
push
retf
sar
fidiv
jmp
mov
mov
and
push
mov
push
fimul
div
shr
pcmpeqw
jmp
cmps
cmp
fisttp
mov
xchg
inc
retf
mov
test
js
(bad)
xor
inc
repz
sub
les
push
movs
add
lods
jnp
scas
fadd
pusha
and
adc
mov
dec
mov
popf
lods
shr
sahf
dec
sbb
addr16
shl
gs
jne
xchg
jo
dec
test
sub
mov
push
jns
mov
shl
fnstenv
lea
out
and
cmp
scas
pop
or
and
push
sar
cwde
je
xor
push
arpl
data16
ins
or
in
jecxz
ffree
and
adc
pop
cmp
jge
pop
aad
jmp
xchg
pop
into
or
in
cmp
adc
inc
pop
and
dec
enter
cmp
pop
loopne
adc
push
mov
push
clc
cwde
(bad)
xchg
adc
(bad)
xchg
loop
inc
xchg
imul
cmp
adc
out
and
jecxz
mov
test
cdq
pop
mov
mov
jbe
or
dec
jmp
in
in
jmp
add
push
push
cmp
xchg
ins
neg
cmps
outs
sub
mov
sti
popf
popf
cmp
sbb
jmp
lahf
or
cmp
xchg
or
mov
je
mov
out
lock
fstp
dec
push
cmp
jle
mov
and
xchg
mov
outs
sbb
inc
adc
dec
test
jmp
pop
sub
shl
jo
pusha
sti
jp
bound
xchg
sub
or
rol
or
call
lds
outs
pop
dec
(bad)
sti
xor
xchg
cmp
cmps
not
inc
daa
stos
xchg
jne
sbb
gs
mov
and
mov
or
mov
cli
out
fsubrp
out
pop
test
sti
bound
or
and
jg
(bad)
and
cmp
in
retf
int3
les
shl
fistp
fmul
daa
clc
cmc
retf
pop
es
imul
mov
lods
jge
adc
jg
xor
popf
in
scas
repz
pop
out
(bad)
sahf
dec
out
mov
retf
(bad)
jmp
les
arpl
cwde
pop
mov
jl
mov
scas
aam
int3
fwait
xchg
jbe
xor
jb
and
and
lahf
mov
dec
and
pop
rcr
lods
es
ja
shr
in
outs
sub
xchg
dec
xchg
or
dec
jg
and
inc
add
iret
sbb
mov
mov
push
ficom
fldenv
pop
mov
add
dec
sub
nop
mov
add
aam
leave
js
pop
add
dec
jmp
xchg
mov
jl
pop
mov
mov
rol
pop
pop
sbb
fdiv
cmp
adc
(bad)
pop
in
and
cmps
out
imul
loop
in
dec
mov
mov
(bad)
mov
out
sub
xor
add
enter
(bad)
dec
retf
ret
add
jmp
loopne
outs
xor
dec
rcr
enter
mov
jmp
jecxz
jo
inc
imul
xor
xchg
sub
retf
les
mov
jle
out
jmp
cmp
sub
int
retf
cmc
sbb
dec
sti
out
cdq
int
jecxz
stos
fisttp
sbb
pop
adc
fld
xlat
bnd
sub
ins
mov
fwait
test
mov
mov
cmp
inc
fldcw
push
add
lods
pop
xchg
pop
cmp
jecxz
das
mov
jl
xchg
sar
outs
jmp
mov
jnp
push
xor
cmc
add
xor
lods
or
mov
push
dec
jo
div
push
xor
sbb
mov
(bad)
mov
cwde
sub
push
jmp
mov
popf
inc
and
cmp
loopne
shr
mov
mov
mov
outs
(bad)
stc
and
retf
cmp
(bad)
jle
movs
loopne
xchg
sbb
enter
mov
and
ficom
mov
sub
(bad)
je
cmp
movs
leave
mov
mov
sbb
sub
fwait
cmps
ss
(bad)
call
mov
or
cld
push
cli
xchg
adc
retf
xchg
in
cmc
cdq
adc
jns
jp
add
loope
lods
inc
jecxz
dec
icebp
pop
sub
mov
and
aam
and
xor
les
(bad)
push
mov
and
mov
lods
out
jne
mov
inc
fcomi
or
sbb
and
fmul
pop
sbb
pop
jmp
adc
adc
xchg
sbb
mov
adc
out
sti
jg
xchg
clc
movs
push
jnp
std
cs
mov
cld
mov
mov
cmp
test
sub
xchg
dec
stc
cli
sbb
add
jae
jmp
push
xchg
fucomi
adc
adc
cmp
jns
dec
leave
jne
loop
mov
bound
adc
adc
loopne
(bad)
mov
ret
mov
xor
add
sbb
pop
int
scas
dec
cmp
int3
cld
jecxz
pop
push
jle
sub
scas
lods
cmp
push
xlat
xchg
sti
adc
popf
ins
pop
icebp
add
test
in
xchg
loop
mov
aas
cwde
mov
adc
xchg
rcl
inc
xlat
fmul
sub
pop
jno
(bad)
lahf
sub
push
nop
hlt
enter
or
pop
bound
dec
push
cs
inc
pop
das
push
mov
adc
pop
push
xor
popf
fmul
jecxz
pusha
gs
jg
and
cld
sar
xlat
pop
mov
add
add
add
ror
dec
push
jmp
mov
mov
fwait
out
add
push
int3
push
and
retf
repnz
hlt
sbb
jno
popf
lods
or
popa
paddq
rsm
jnp
loop
(bad)
std
pop
loopne
push
(bad)
jne
repnz
stos
inc
add
shl
sbb
xlat
push
inc
dec
jno
daa
fisttp
and
call
lods
and
lahf
sub
mov
jo
jo
pushf
or
pop
cli
repnz
push
mov
clc
aad
and
push
xchg
cmp
jp
shl
or
gs
jae
call
outs
mov
in
test
pop
sbb
rcl
jmp
jno
sahf
xchg
cmps
sub
in
pop
lahf
data16
dec
push
sub
jmp
inc
mov
test
dec
jae
sbb
(bad)
dec
cmps
mov
inc
ja
ficomp
jbe
jae
pop
sub
push
xlat
inc
mov
or
loopne
push
in
cmp
js
stos
mov
sub
lods
cmp
enter
les
jnp
or
loop
call
jae
scas
pop
outs
push
test
(bad)
sub
adc
sbb
jl
and
arpl
rcl
ret
sub
inc
in
outs
in
repnz
sbb
ss
ins
jle
lds
jl
js
out
add
lods
movs
inc
xlat
loope
mov
xor
inc
pop
ins
mov
dec
sbb
shr
inc
xchg
mov
lea
mov
mov
mov
fist
ret
push
mov
adc
mov
adc
loop
out
out
mov
lea
arpl
sub
lahf
jge
rol
ins
mov
outs
pop
ins
test
xchg
and
mov
out
xlat
nop
(bad)
pop
cli
xchg
jge
mov
es
pop
sub
jecxz
jl
xor
push
jo
(bad)
pop
ficom
inc
add
into
addr16
or
(bad)
fist
pop
jg
inc
fist
pop
cs
pop
cmp
jno
mov
mov
or
std
int3
cmps
bound
inc
dec
cs
inc
add
test
js
in
test
jb
jbe
inc
inc
lock
in
call
mov
pop
pop
call
je
ds
jmp
push
xchg
adc
pop
fdivr
lock
shl
mov
pop
iret
adc
rol
cmp
pop
pop
or
rcl
(bad)
pop
scas
cmps
movs
push
cmp
mov
fimul
push
nop
cmp
ins
mov
xor
stos
sub
(bad)
sub
inc
sbb
loope
pop
push
scas
and
adc
push
mov
popa
inc
std
(bad)
or
pop
js
xchg
iret
xor
retf
sbb
sbb
sbb
sbb
xor
lock
mov
mov
sub
(bad)
shl
daa
add
ficom
shl
jns
neg
je
mov
xchg
test
pushf
sub
mov
mov
mov
sbb
mov
shl
pop
js
or
or
or
aad
rcr
mov
xchg
bound
aam
pop
cmp
cdq
and
ds
pop
movs
lock
je
xchg
mov
jne
outs
sub
inc
xor
mov
push
test
call
mov
stc
push
xor
loop
pop
and
inc
call
jge
add
js
mov
addr16
stos
adc
xchg
mov
loope
and
cmp
adc
xchg
pop
div
or
xchg
pop
aam
and
cwde
ja
sub
(bad)
push
sbb
ss
adc
adc
xchg
mov
jl
fistp
jg
int
jns
adc
xchg
jne
dec
or
cdq
lods
lahf
aas
outs
shr
sbb
jns
rcr
jno
int3
ret
fimul
pop
jno
fistp
sub
popa
retw
cmp
jle
mov
ja
mov
popa
out
movs
mov
or
test
jo
mov
inc
call
fs
pop
push
pusha
call
popa
imul
popa
xchg
and
cmp
mov
out
into
mov
add
dec
into
push
mov
add
or
(bad)
cli
push
xor
sar
jb
js
lock
dec
shr
movs
jge
lods
adc
cmp
aaa
stos
sub
adc
mov
cwde
vucomiss
mov
ins
cwde
pop
arpl
xchg
retf
cdq
scas
clc
jbe
call
jp
sbb
mov
clc
cmp
dec
mov
and
ins
jne
sub
mov
jecxz
mov
mov
sub
sbb
cmp
fimul
push
js
inc
mov
dec
push
jp
add
aam
jnp
addr16
xor
sub
in
dec
jmp
dec
xor
pop
jecxz
jae
std
je
loop
xor
in
mov
cli
jae
jne
mov
div
les
pop
out
and
sub
or
mov
call
lods
add
cs
sbb
(bad)
lahf
xchg
sti
add
jno
and
inc
fnstsw
scas
out
int
mov
fstp
(bad)
pop
in
fucompp
test
fs
pop
rol
aaa
jbe
movs
shl
mov
cmp
xchg
push
fwait
int
pop
pop
test
gs
test
rol
aad
xchg
stos
out
loope
sub
xor
ret
je
stc
mov
(bad)
dec
inc
xor
mov
or
repnz
inc
mov
lods
pop
test
pop
add
cli
pop
int
sub
cdq
push
inc
ja
sbb
rol
stc
mov
inc
sub
test
mov
cwde
sbb
push
ffree
xor
cld
and
cwde
cmp
stos
or
mov
mov
mov
xchg
xor
shr
jb
inc
sbb
cmp
cmp
add
cdq
xchg
retf
(bad)
cmps
pop
cmp
(bad)
in
mov
or
stos
adc
sub
sbb
(bad)
or
(bad)
rcl
call
add
rcl
movs
sub
sub
sub
out
mov
mov
scas
test
dec
adc
or
or
adc
mov
mov
xor
xchg
pop
(bad)
in
xor
push
pop
or
push
mov
rol
aaa
jnp
push
cmp
sti
sub
mov
sbb
xor
push
pop
push
sbb
pop
lods
dec
jne
push
push
jecxz
lea
mov
in
push
dec
mov
das
out
push
xchg
sbb
xchg
xor
xchg
(bad)
sbb
xor
dec
cli
push
loope
mov
and
sahf
jo
mov
test
pushf
ja
fs
push
fiadd
adc
jmp
arpl
xor
push
pop
sti
mov
mov
fsub
adc
xor
push
mov
add
mov
or
sub
movs
or
jb
mov
test
jae
mov
jns
push
out
cmp
adc
cmp
out
dec
mov
stc
jnp
rcl
lahf
test
xor
xor
aas
xlat
push
cld
jmp
js
sbb
push
jmp
paddw
pop
and
movs
mov
adc
movs
outs
out
fiadd
lds
xor
retf
mov
test
ret
and
xor
push
cmp
iret
mov
sub
xchg
push
or
outs
in
and
fdivr
adc
pop
pop
popa
add
addr16
fnstenv
scas
(bad)
or
jo
xor
loop
ds
out
movs
mov
lods
add
inc
dec
sbb
xchg
out
in
push
sub
dec
mov
and
or
int
or
fistp
cmp
sub
test
cmp
sbb
and
cmps
mov
mov
cwde
mov
imul
mov
cmps
shr
retf
scas
test
scas
cmp
lods
inc
(bad)
and
push
aaa
popa
gs
bound
add
shr
outs
add
test
loope
retf
push
pusha
mov
jne
mov
ins
jmp
clc
enter
mov
or
cdq
cli
xchg
lahf
lea
shl
cmp
and
xor
mov
sub
jmp
daa
pop
xor
cwde
push
mov
test
and
gs
fs
xchg
in
lea
out
and
mov
sub
mov
rcl
test
pop
cmp
mov
std
lea
jmp
ja
push
in
sub
add
and
jo
xchg
fwait
xchg
pop
pop
add
pusha
inc
jg
mov
mov
test
ins
test
test
xchg
push
repz
(bad)
iret
clc
mov
jo
xor
xor
dec
jecxz
pusha
nop
cmp
arpl
cmp
repnz
xchg
cmp
mov
jl
and
lods
sub
mov
add
sbb
or
test
xlat
jmp
or
mov
pop
mov
lahf
(bad)
repnz
fsub
and
into
add
add
jge
push
ja
and
imul
mov
addr16
test
pop
movs
aad
outs
push
add
mov
cmp
in
mov
and
sub
push
in
dec
sbb
(bad)
mov
mov
sti
leave
xor
add
call
stos
das
dec
inc
and
test
inc
out
clc
mov
pop
add
scas
pop
sub
add
out
(bad)
call
xchg
cmc
xor
add
sub
sbb
aad
pusha
ss
push
mov
in
inc
call
and
cdq
mov
aam
jecxz
fld
scas
cli
gs
sar
push
movs
lods
out
lock
ss
movs
pop
sub
addr16
pop
xchg
cwde
in
jno
mov
imul
sub
mov
cmp
dec
inc
nop
sbb
pusha
or
outs
hlt
and
cmps
into
push
push
sbb
inc
call
test
ins
sbb
inc
jns
push
inc
adc
mov
into
mov
lods
push
fld
and
xor
xchg
or
fldcw
lea
mov
in
aaa
jle
push
mov
adc
pop
js
mov
mov
mov
(bad)
bound
xchg
loopne
neg
pop
out
inc
push
mov
pop
retf
mov
inc
mov
stos
inc
jmp
pop
add
cli
pop
loope
sub
xlat
in
rcr
jns
sti
jl
enter
(bad)
push
push
int
ud1
pop
xor
sahf
push
cmp
clc
daa
mov
cli
daa
test
iret
popf
mov
mov
repz
pop
add
fwait
call
bnd
(bad)
shl
add
jmp
pop
or
push
sub
std
xor
pop
lahf
mov
pop
mov
xchg
add
xchg
rcr
(bad)
and
and
mov
fisttp
in
dec
cmp
addr16
inc
mov
mov
push
adc
(bad)
les
(bad)
jge
ror
lahf
out
inc
xor
and
cmp
mov
in
sbb
data16
sbb
popf
mov
pop
out
retf
push
nop
fmul
pop
push
mov
das
sub
(bad)
push
fistp
ds
shl
movs
lods
add
jnp
jo
nop
sbb
(bad)
push
sti
sub
push
add
push
or
cmp
mov
jl
and
mov
lods
lock
or
(bad)
iret
test
mov
push
dec
jb
in
(bad)
sti
aam
jo
das
pop
mov
add
adc
bound
bound
mov
or
out
cli
lea
push
mov
int3
mov
fcomi
adc
mov
imul
add
aad
push
test
jo
or
pop
out
movs
int
ror
cmp
pop
lock
inc
jge
add
jg
push
mov
jle
and
lds
xor
cmps
imul
xchg
sbb
or
jle
pop
mov
xchg
xor
jle
mov
sub
cmp
popf
dec
cli
jo
test
and
and
ins
es
clc
mov
loope
into
stc
or
in
mov
push
sbb
mov
pusha
scas
jns
pop
pop
or
ficomp
cdq
test
jbe
jl
push
fldcw
neg
ficom
into
inc
jl
popf
addr16
cmp
(bad)
xor
mov
into
xchg
mov
add
dec
jl
scas
pop
or
pushf
fcmovb
mov
js
aam
bound
icebp
in
hlt
(bad)
and
cli
retf
xor
ja
or
fst
lods
jl
add
xor
mov
and
sbb
test
xor
mov
int
pop
sub
loop
lahf
sbb
adc
aam
pusha
mul
test
popf
dec
loop
mov
pop
les
xor
daa
adc
and
cmp
div
sub
(bad)
in
or
ja
jns
or
mov
scas
pop
cmc
jmp
std
mov
mov
test
and
aam
lahf
dec
rol
xchg
xchg
xlat
dec
mov
outs
movs
inc
mov
push
inc
out
dec
rcl
jmp
(bad)
or
inc
push
mov
lea
push
mov
sbb
adc
or
les
xchg
push
cmps
(bad)
sahf
retf
jbe
jbe
inc
pop
not
fstp
retf
dec
jae
xchg
cmp
(bad)
mov
movs
jge
mov
jp
cmp
sub
cmp
push
inc
sahf
xchg
ss
xchg
jbe
ds
idiv
mov
(bad)
ja
mov
jo
fisttp
mov
lock
sbb
inc
jo
(bad)
pop
sahf
(bad)
add
mov
sub
push
rol
jl
mov
mov
mov
xchg
inc
call
xchg
movs
mov
sub
cmp
jae
pop
jns
sti
fld
xchg
retf
pop
hlt
and
fsub
jb
sub
jne
pushf
sahf
ins
hlt
retf
jle
adc
xlat
jmp
outs
push
stc
jmp
jmp
or
repz
mov
adc
inc
sbb
int
scas
inc
test
cmp
les
pop
push
retf
fwait
shr
(bad)
ins
lods
mov
adc
in
fidivr
pop
lds
shr
xchg
jbe
ret
mov
jnp
retf
mov
and
sub
push
test
jns
cmps
push
loope
outs
leave
and
int
jnp
icebp
xor
pop
xchg
aaa
pusha
ret
xchg
pop
aas
sub
mov
add
xchg
cmp
lods
fiadd
test
mov
xchg
xchg
mov
and
(bad)
mov
adc
cdq
arpl
or
mov
popf
and
jno
mov
fucomi
ss
sub
mov
xchg
xchg
jne
cs
fcom
push
inc
inc
mul
fs
push
mov
in
pop
xlat
neg
and
in
ret
push
in
add
add
dec
loop
lods
and
loop
stos
sub
cs
mov
mov
and
in
lds
dec
aad
pop
jno
jmp
xor
rol
add
sar
jns
jns
aam
sbb
shl
sbb
call
add
mov
mov
xchg
das
aam
out
jg
dec
idiv
xchg
sub
mov
cmp
lods
pop
(bad)
out
mov
pop
hlt
dec
js
inc
push
jmp
or
sbb
dec
pop
jb
push
xchg
push
push
int3
pop
std
pop
(bad)
shr
add
mov
jns
sbb
xor
push
mov
inc
cli
push
das
enter
or
sahf
and
mov
pop
ss
and
sbb
loope
movs
stos
sbb
scas
push
sbb
sbb
or
mov
push
cmc
movsx
iret
lods
pushf
sbb
push
fisubr
or
pop
pop
mov
pop
cdq
out
xlat
inc
div
fiadd
xchg
popf
jl
(bad)
xchg
in
out
mov
retf
leave
shl
mov
out
xor
sbb
loope
push
sub
or
pop
or
not
addps
cmp
jecxz
(bad)
hlt
cld
inc
paddd
add
jle
adc
pop
aad
jb
jmp
jmp
dec
xor
mov
mov
mov
and
add
movs
jecxz
ss
jmp
(bad)
in
mov
outs
outs
or
jae
jle
jnp
loop
adc
cmp
dec
sbb
inc
pushf
test
pop
dec
lods
add
or
mov
ret
fisubr
test
into
dec
dec
stos
sub
inc
pop
push
push
mov
icebp
mov
sub
ins
(bad)
mov
push
sub
mov
push
sub
mov
fcomp
mov
xor
dec
lods
push
fucom
xchg
push
ror
or
repz
mov
cmp
pop
xchg
fcmovnu
push
and
test
mov
dec
inc
fdivp
iret
mov
cmps
fs
xor
stos
and
fnstsw
and
mov
cmp
shl
jge
sub
mov
popa
das
(bad)
mov
or
inc
retf
lods
jp
(bad)
pop
add
push
rcr
jmp
jge
popf
xor
popa
mov
aas
movs
mov
jbe
dec
dec
cmp
xor
retf
std
pop
pop
retf
cmc
pop
(bad)
js
outs
test
or
add
sub
jbe
pop
lds
sbb
adc
mov
mov
cmp
jecxz
mov
pop
lahf
push
or
inc
push
lock
(bad)
cli
bound
pop
fdiv
mov
lods
es
stc
stos
mov
scas
stos
xchg
retf
push
xor
mov
sub
aad
sar
icebp
xchg
xchg
out
aam
cmp
dec
and
mov
test
mov
sbb
mov
xchg
pop
call
(bad)
outs
jno
lea
jns
ja
inc
sbb
push
les
mov
xor
aaa
adc
not
cmp
imul
call
inc
aad
sub
adc
push
sti
gs
or
in
sar
fdiv
adc
(bad)
mov
sub
cmp
xchg
mov
adc
call
fldenv
xchg
mov
push
cwde
lods
outs
neg
xor
in
mov
pushf
adc
jmp
jne
pop
retf
jns
cdq
or
dec
jmp
aad
loopne
push
xchg
aad
or
sti
mov
imul
sub
loopne
call
scas
aad
xchg
mov
mov
aaa
adc
lods
imul
clc
fs
mov
push
repnz
loope
mov
cmp
sahf
loope
or
rcl
cmp
bound
and
pop
fcom
lods
mov
mov
jbe
out
push
mov
mov
and
cmp
into
xor
cmp
div
rcl
and
sti
or
enter
cmp
out
add
lds
pop
add
call
mov
clc
mov
adc
push
aad
outs
jmp
mov
pop
gs
sbb
repnz
daa
in
cli
mov
jo
push
push
shr
pop
and
cli
dec
and
dec
test
and
(bad)
xchg
shr
mov
hlt
jmp
daa
xchg
das
sub
jge
sub
mul
pop
out
sub
xchg
mov
shl
xor
jns
out
stos
push
adc
or
and
push
mov
mov
push
xchg
sub
pop
cdq
mov
int3
fs
je
sbb
in
jp
push
in
cmp
movs
push
pop
stc
(bad)
icebp
push
stos
sbb
out
jmp
in
jo
push
mov
inc
sub
aam
retf
idiv
retf
jno
fdiv
fwait
mov
je
mov
add
mov
jle
fucom
xor
mov
inc
into
(bad)
adc
push
aam
or
pop
shl
daa
(bad)
sbb
mov
loope
mov
xor
loop
adc
arpl
and
xor
mov
loopne
sbb
movs
out
retf
or
push
icebp
ins
out
mov
sbb
jg
mov
imul
imul
inc
push
or
dec
jo
xor
jl
hlt
in
int
outs
fidivr
xlat
outs
xchg
push
push
in
outs
push
adc
sub
add
leave
cwde
mov
mov
imul
sbb
clc
iret
stos
cmps
or
sbb
pop
cwde
movs
loope
ds
sbb
fisub
repnz
call
retf
inc
clc
push
leave
xor
adc
jno
cmp
call
mov
loopne
push
sbb
pop
out
jno
sbb
sar
es
mov
push
imul
shr
sbb
imul
adc
(bad)
adc
and
adc
xlat
pop
fld
jb
lods
(bad)
inc
jno
xchg
sub
movs
pop
push
pop
out
ret
fmul
push
clc
adc
loop
dec
pop
or
rcr
xchg
aas
pop
popa
push
aam
jns
jge
shr
or
adc
cmp
jnp
dec
xor
cmps
and
gs
sub
or
add
pop
inc
or
test
fwait
les
dec
sub
push
inc
test
je
out
les
js
adc
in
cmps
movs
stc
sahf
xor
stc
add
cwde
sti
dec
cmp
imul
add
inc
jecxz
cmp
ja
jo
stos
scas
mov
mov
pop
les
pop
cmp
clc
retf
jle
jns
mov
xor
(bad)
into
cld
std
je
jp
pop
inc
lods
cmp
add
xchg
ret
mov
cdq
sbb
inc
shl
mov
out
cli
iret
mov
outs
xor
mov
mov
cmp
adc
inc
aas
pop
fild
ins
mov
xchg
mov
pop
in
retf
push
aad
add
mov
mov
cmp
iret
aaa
std
ret
xor
mov
inc
push
mov
push
mov
inc
push
or
jo
adc
push
(bad)
sbb
addr16
sbb
sbb
jecxz
and
pop
in
dec
xor
stos
fist
adc
xchg
std
nop
mov
test
(bad)
(bad)
xor
(bad)
(bad)
push
pop
push
mov
sub
jo
stc
dec
lds
xor
push
and
daa
cmp
xor
mov
sahf
push
inc
push
shl
loop
in
popa
ins
push
sub
mov
jb
ret
out
sbb
stos
add
test
cmp
jmp
icebp
mov
or
cdq
mov
jbe
aas
gs
jb
rcl
call
pushf
inc
mov
mov
fldcw
mov
cmp
xchg
push
sar
mov
mov
dec
dec
cdq
push
jecxz
add
xchg
mov
int3
push
mov
fimul
or
push
lods
pop
popa
add
neg
xor
shr
test
addr16
test
jae
adc
scas
pop
std
mov
pop
fst
movs
mov
mov
jo
push
xchg
pop
xor
push
cmp
hlt
xor
retf
scas
dec
inc
sahf
bound
sbb
inc
dec
push
cmp
ds
test
push
sub
push
mov
push
out
popf
cmp
xchg
(bad)
repz
inc
mov
mov
xchg
retf
leave
mov
icebp
jbe
sub
pushf
sbb
popa
stos
test
push
add
push
mov
fiadd
lods
mov
sbb
loopne
inc
imul
into
arpl
lea
(bad)
pop
or
mov
out
jnp
dec
(bad)
push
test
push
and
lds
scas
mov
outs
push
pop
and
push
shr
ss
sub
popf
cmps
adc
pusha
ficomp
js
mov
and
jg
jg
out
add
mul
cld
shl
cli
retf
cwde
imul
or
mov
lea
fstp
retf
fist
bound
mov
dec
jp
jo
pop
xor
mov
mov
and
sbb
ja
sbb
ror
jl
jmp
mul
jmp
xor
ins
push
jge
jns
fstp
sub
adc
inc
mov
cli
lods
dec
jge
adc
fidiv
cmps
mov
out
jbe
dec
aas
cmp
dec
pop
js
inc
inc
test
fcomp
pusha
fistp
ds
imul
pop
dec
data16
xchg
lods
imul
fwait
adc
push
test
in
mov
(bad)
jle
mov
mov
inc
es
jno
out
shl
popa
call
add
mov
xchg
push
les
xchg
inc
push
fnstenv
imul
loope
popa
lahf
add
sbb
jge
push
pop
cmp
scas
retf
xor
movs
xchg
mov
xor
mov
pop
xchg
xchg
dec
pop
sbb
mov
mov
mov
cmps
dec
out
int3
retf
push
cmp
test
adc
fcomip
mov
retf
mov
dec
sub
cli
data16
adc
test
sahf
fadd
data16
rcl
sub
rcl
pusha
cmp
inc
xor
mov
daa
popf
ins
adc
inc
lods
lds
push
jecxz
cmps
mov
push
adc
scas
or
jle
inc
cmp
dec
xchg
sub
pop
mov
cmc
sar
mov
in
jle
cmp
inc
jns
pop
mov
pop
xchg
jae
imul
jg
leave
stos
imul
mov
test
fild
sub
add
jp
inc
stos
or
xor
stc
pop
mov
inc
xor
in
stos
mov
mov
hlt
test
ja
xchg
cdq
test
pop
dec
repnz
cli
int
addr16
dec
jle
(bad)
push
push
mov
mov
sub
mov
adc
sbb
retf
xor
add
cmp
jecxz
outs
add
mov
add
fstp
sbb
push
test
iret
push
mov
jmp
cs
jae
sbb
(bad)
adc
jne
daa
or
jmp
push
jno
add
aad
call
xor
rcr
nop
pushf
(bad)
(bad)
adc
cli
ds
xchg
in
push
xlat
push
in
int
inc
retf
fucomp
pop
pop
cmps
ja
cmps
ja
in
outs
xchg
stos
mov
lods
sub
push
(bad)
push
adc
loopne
dec
inc
fcomp
lods
out
(bad)
cmp
mov
add
cmp
lods
mul
stos
cmp
pop
ror
outs
jl
call
mov
iret
nop
adc
push
add
push
jns
fcmovu
cmp
addr16
sub
into
psubq
inc
test
test
mov
jnp
sbb
xchg
into
or
push
pop
pop
mov
aam
jge
loope
dec
out
std
inc
jmp
mov
out
scas
push
aad
xchg
into
mov
or
adc
stos
mov
movs
test
popf
and
sbb
outs
pop
jg
xor
push
mov
cmps
cwde
and
outs
int
scas
xor
fimul
jmp
mov
inc
pop
jne
inc
xchg
adc
sbb
nop
fst
sbb
sbb
xor
push
dec
mov
inc
fiadd
clc
mov
pop
call
inc
and
add
out
sti
dec
out
stc
add
jo
inc
mov
and
bound
xchg
ret
(bad)
mov
xor
add
dec
push
das
mov
inc
push
cld
add
jle
out
arpl
sahf
aad
retf
div
cmps
inc
inc
data16
xchg
sub
je
jae
gs
jnp
cdq
pushf
cli
mov
pusha
mov
fs
sub
add
movs
test
push
jo
pop
and
sbb
cmp
jecxz
dec
dec
int3
jge
pushf
sub
adc
sbb
jne
imul
pop
aad
cmp
dec
cmp
pop
scas
out
adc
jl
and
lea
mov
adc
cs
int
xchg
ds
stos
fst
inc
pop
daa
ins
sbb
inc
ins
pop
mov
stc
in
lods
mov
xor
push
fstp
retf
test
mov
jno
push
test
aaa
sbb
dec
scas
or
jae
push
outs
(bad)
nop
or
cdq
xor
ret
nop
movs
movs
sbb
pop
xchg
aas
mov
gs
imul
jecxz
or
xchg
and
ss
dec
push
test
jb
fisttp
mov
xchg
mov
jle
cli
xor
sub
fwait
into
add
sub
jge
xchg
xchg
add
ret
test
mov
ret
mov
xor
xor
xor
mov
mov
scas
ror
cmp
loope
ja
pop
jno
add
xor
ret
(bad)
push
hlt
imul
pop
cli
test
test
sbb
add
(bad)
out
(bad)
daa
gs
push
popa
mov
enter
or
pop
cmp
cmp
aas
cmp
(bad)
popf
imul
cmp
cwde
popa
js
xor
daa
pop
dec
daa
dec
pop
stos
int3
and
int
jbe
xor
(bad)
addr16
clc
repnz
xchg
sbb
mov
es
mov
and
movs
inc
add
mov
jbe
push
cwde
mov
sbb
pop
pop
add
lds
mov
pop
mov
lock
sub
es
mov
repz
adc
xchg
or
dec
fisubr
dec
and
ds
shl
gs
sbb
sbb
stos
pop
xor
rol
pop
sbb
neg
sbb
les
push
in
and
outs
mov
xlat
and
cld
sub
adc
xchg
mov
xor
sbb
mov
inc
test
ins
aaa
fidiv
nop
xchg
mov
icebp
js
jg
(bad)
fcom
inc
mov
add
jbe
call
pop
iret
dec
pop
mov
hlt
jne
pusha
cmps
out
mov
mov
jne
popa
hlt
rcl
daa
faddp
or
outs
cdq
and
imul
adc
push
cli
jge
in
movs
jo
imul
xchg
or
mov
out
movs
push
stos
mov
call
mov
mov
div
push
ja
mov
outs
or
int3
sbb
xor
test
movs
dec
jnp
xor
pusha
cmp
mov
sub
or
(bad)
fwait
int3
test
inc
ss
mov
and
icebp
jno
inc
mov
stc
pushf
addr16
sbb
push
xor
jne
xor
mov
mov
pop
and
adc
fdivr
or
jle
(bad)
mov
sub
mov
out
mov
iret
loop
jbe
adc
clc
mov
addr16
sbb
repnz
dec
mov
outs
push
daa
test
jmp
(bad)
push
xor
test
dec
dec
jnp
sub
dec
sub
add
mov
xor
cmc
jbe
xchg
aad
dec
repz
out
mov
ins
cmp
pop
lock
or
add
push
mov
push
(bad)
mov
push
add
lds
jmp
rcr
cmps
pop
push
in
rcl
mov
popf
aad
add
inc
fidivr
enter
dec
cs
leave
mov
or
out
xlat
pop
xor
(bad)
in
jbe
dec
sub
push
mov
rol
cmp
pop
xchg
popa
icebp
dec
adc
ds
cmp
sub
pop
ret
fs
push
or
and
ja
hlt
push
pop
js
ja
mov
loop
sub
or
imul
mov
add
inc
jl
lahf
cli
lahf
dec
pop
test
loopne
fdivr
xlat
call
sub
mov
inc
xor
adc
mov
fidivr
neg
xchg
jmp
fild
loopne
push
mov
xor
dec
push
push
xchg
sbb
fiadd
into
mov
push
(bad)
daa
lea
dec
sub
add
fild
in
mov
xor
adc
cmp
or
pop
cwde
xor
or
retf
mov
push
xchg
add
enter
sti
cmp
imul
mov
and
mov
jnp
push
push
inc
pop
mov
pusha
or
xchg
in
fwait
jo
cmps
mov
addr16
sub
(bad)
repnz
hlt
inc
cmp
pop
or
dec
mov
ds
pusha
pop
adc
mov
inc
mov
sti
js
dec
mov
mov
xchg
jp
mov
test
les
xor
add
outs
sahf
(bad)
repz
and
sbb
dec
sub
cmp
mov
and
data16
leave
mov
or
mov
jns
loope
in
movs
(bad)
mov
cmc
pop
std
rcr
sub
or
stos
test
movs
push
lea
ja
sahf
fiadd
mov
bswap
xor
cmc
clc
adc
xchg
sbb
and
ins
pop
por
cmps
mov
sbb
rcl
push
(bad)
mov
and
in
jbe
hlt
dec
dec
inc
ja
xlat
dec
xchg
cld
ins
nop
popf
jmp
mov
scas
out
jge
push
std
test
xor
push
jae
inc
cmovl
sti
and
or
pop
and
sub
sbb
push
into
in
arpl
shl
leave
dec
lods
addr16
fisttp
mov
push
xor
ds
fucomi
mov
stos
pop
jmp
pop
add
jmp
push
cdq
lods
pushf
sub
sub
xchg
and
jecxz
fidiv
ficomp
push
out
mov
dec
push
push
xor
outs
jne
in
(bad)
fs
mov
add
movs
out
dec
and
jle
sbb
cld
ja
rol
sar
or
pop
loopne
inc
imul
or
mov
push
mov
pop
test
sti
cmp
jb
lods
int
pop
jno
push
push
mov
cmps
add
stos
outs
mov
sti
xlat
add
ror
xor
fisub
push
test
(bad)
mov
mov
test
jmp
add
push
sbb
xchg
fstp
es
and
out
xor
mov
dec
sbb
out
mov
or
imul
enter
ja
pop
lock
les
jle
lock
adc
mov
movs
or
xor
clc
xchg
leave
mov
lods
cmp
outs
fwait
ret
inc
ss
jae
lods
ror
stc
dec
mov
hlt
(bad)
sbb
inc
in
and
shl
sbb
lock
fwait
in
adc
loop
out
mov
lahf
pop
out
pusha
fisubr
mov
cmp
mov
clc
rol
mov
cmp
cs
leave
data16
inc
cdq
std
jnp
lds
sbb
cmp
je
push
(bad)
and
out
cwde
cwde
dec
out
sub
adc
adc
aas
adc
test
sub
call
mov
lea
icebp
sub
mov
sub
movs
cmps
cmc
adc
lds
dec
jo
enter
adc
fimul
call
outs
aam
jno
sti
push
clc
lahf
lahf
xor
or
pop
and
and
adc
add
scas
cmps
dec
int
mov
jl
(bad)
fidivr
mov
dec
js
stc
lods
sti
mov
dec
push
add
push
xchg
hlt
fistp
xor
enter
imul
scas
daa
arpl
mov
pop
mov
push
call
lods
je
test
imul
call
idiv
ror
adc
push
pop
sub
sub
mov
jns
retf
dec
sti
pushf
jp
movs
loopne
jns
div
(bad)
mov
(bad)
cmp
and
jg
out
scas
xchg
inc
je
jnp
cmp
lahf
out
sub
pop
mov
and
jecxz
lds
sub
scas
or
nop
mov
imul
jnp
mov
pop
adc
dec
and
lock
bound
add
sub
iret
sbb
mov
(bad)
popf
repz
ss
(bad)
test
cmps
bound
mov
stos
repz
jno
ja
daa
xchg
push
std
jbe
fldlg2
sbb
inc
nop
arpl
imul
pop
sbb
mov
mov
inc
mov
mov
(bad)
rcl
mov
outs
adc
pop
and
into
or
dec
in
mov
pop
mov
shl
ja
jno
loop
mov
push
ret
cmp
test
mov
call
xchg
adc
add
cmc
sbb
fmul
or
cmps
mov
(bad)
cmp
shr
out
jl
push
inc
push
sbb
das
pop
mov
ret
jg
mov
loopne
xor
lds
sar
push
sbb
dec
xor
fs
not
fidivr
mov
jne
sub
adc
stc
fist
jnp
push
push
mov
ret
jns
inc
or
int3
dec
or
retf
aas
(bad)
jge
daa
pop
mov
inc
cwde
mov
data16
mov
sub
push
loopne
pop
cmc
daa
out
jl
dec
jbe
mov
mov
jmp
push
push
mov
add
test
retf
repnz
pop
in
mov
int3
repz
push
cmp
mov
cmp
fisttp
je
cmp
xor
repz
sbb
sub
adc
mov
cli
dec
sub
jns
cmp
jp
jmp
ja
retf
int
bound
loop
jbe
sub
outs
inc
jne
xchg
xlat
sub
push
add
sahf
lods
push
mov
sub
mov
stc
neg
je
push
xor
xor
cmps
mov
(bad)
loopne
xchg
call
mov
mov
sbb
adc
enter
fist
xor
mov
das
inc
cs
addr16
jae
jbe
xchg
jmp
cmp
or
pop
and
pop
dec
call
mov
or
test
stos
daa
nop
movs
test
inc
scas
pop
out
add
outs
sbb
scas
jg
and
test
pop
mov
adc
pop
imul
(bad)
xlat
jmp
jae
jno
pop
fldenv
lods
sub
outs
outs
jo
lock
push
clc
lahf
jg
pop
fst
push
mov
mov
ins
sti
xchg
inc
cwde
adc
scas
push
outs
xchg
jne
iret
fst
mov
mov
daa
jbe
shl
in
cmc
pop
mov
aam
cmp
add
sub
sub
xor
jo
je
push
inc
push
test
hlt
and
stc
inc
outs
popa
iret
out
pop
jnp
xor
es
in
lods
icebp
mov
shl
xchg
ins
ffree
aas
aam
cmp
in
out
in
adc
or
push
(bad)
or
addr16
das
adc
js
sub
repz
fwait
fs
test
fst
arpl
repz
clc
xor
sub
imul
push
ja
push
mov
rcr
rcl
cli
adc
push
inc
dec
xchg
jmp
dec
out
jmp
cs
cmc
xchg
pop
add
jae
mov
xor
push
(bad)
rol
cmps
clc
xchg
gs
js
add
sub
or
push
pop
movs
sbb
push
add
(bad)
mov
jne
inc
cwde
loop
jl
mov
and
xchg
call
sbb
or
add
and
sub
mov
mov
imul
fwait
retf
xchg
sar
mov
push
fisttp
or
std
mov
pusha
call
loop
mov
push
ins
xchg
not
add
into
mov
and
sbb
push
jge
or
jno
and
pop
rcr
pop
loop
pop
and
jbe
call
repnz
aad
nop
jmp
popf
mov
out
call
or
lea
lock
mov
xchg
sub
sub
jle
pop
sbb
mov
cmp
mov
cmp
pop
mov
pushf
jecxz
not
(bad)
scas
lea
mov
test
loopne
movs
retf
dec
in
lods
mov
(bad)
or
scas
inc
mov
and
je
imul
jecxz
sbb
das
cld
jae
aaa
iret
test
mov
dec
adc
push
xlat
cmp
aam
icebp
pop
xor
mov
pushf
scas
jb
aam
or
fdivr
enter
mov
and
sub
fisub
arpl
out
cdq
adc
push
std
sbb
or
add
mov
cmp
jnp
xor
or
mov
ins
sub
std
retf
nop
lods
in
adc
jae
int3
imul
aam
cwde
int3
into
pop
data16
mov
popa
inc
sti
stos
or
outs
inc
pop
fs
leave
push
div
xlat
or
jmp
js
inc
cmps
ins
imul
and
scas
xchg
test
push
mov
pushf
dec
mov
lds
sti
sti
fnstcw
outs
xor
test
and
scas
das
cmp
bound
pushf
pop
dec
pop
cmp
inc
pop
xchg
xor
rcl
scas
retf
(bad)
iret
xchg
pop
call
add
jne
nop
dec
inc
xor
(bad)
je
add
or
fcom
pop
repz
add
cmp
cmp
out
(bad)
shl
mov
mov
in
jge
in
retf
jb
repz
sbb
lods
and
jge
mov
cmp
adc
cmp
cmp
mov
popa
lods
pop
jb
enter
cmps
pop
loop
mov
inc
sub
aam
(bad)
xacquire
lds
jmp
fwait
sbb
retf
sbb
clc
or
nop
or
pusha
sbb
pop
sub
mov
neg
and
cmps
cmp
jl
add
(bad)
popa
add
shl
outs
aaa
jnp
jmp
es
(bad)
pop
outs
inc
push
jge
call
fadd
nop
push
out
sub
es
and
inc
push
sar
mov
sbb
inc
loop
mov
push
movs
aas
arpl
out
and
out
jg
or
in
dec
fsubr
push
mov
js
adc
(bad)
cld
adc
adc
jmp
ss
and
pop
cwde
dec
pop
repnz
jmp
addr16
scas
xchg
xchg
enter
nop
imul
sbb
in
ds
jo
sub
repnz
aaa
(bad)
adc
adc
repnz
inc
popf
and
sub
add
enter
pop
sti
xchg
mov
xor
adc
mov
sbb
std
inc
popf
das
inc
xchg
xchg
inc
stos
add
bound
dec
mov
ins
stc
mov
loope
daa
bound
test
dec
jmp
cmp
adc
sbb
and
add
push
pop
xor
jle
ss
dec
(bad)
ret
mov
pop
push
add
(bad)
stos
cmp
out
cmp
(bad)
rcr
xchg
xchg
cmp
xchg
les
stos
mov
cmc
push
data16
movs
dec
in
fcom
sbb
pushf
iret
xor
call
(bad)
jb
(bad)
retf
in
jne
scas
push
aas
dec
ds
or
(bad)
xor
retf
jmp
mov
sbb
or
pusha
sub
jmp
das
aaa
cmp
pushf
sub
lds
jl
sbb
xchg
cmp
pop
push
test
sbb
adc
mov
mov
xor
pop
or
push
ror
sub
bound
je
jbe
jnp
pop
cmps
adc
lods
not
repz
test
jne
popa
jecxz
sub
fsubp
mov
xchg
pop
sar
dec
xor
mov
jmp
mov
inc
mov
shr
pop
pop
rcl
sar
scas
xchg
pop
lea
mov
or
gs
pusha
enter
sub
mov
daa
and
xchg
(bad)
jecxz
enter
in
pop
mov
ffree
cmp
in
ja
sbb
push
ins
aam
fmul
sahf
sbb
xor
cmc
dec
xchg
or
jae
cmp
and
and
xchg
sbb
lods
div
shl
into
sbb
fidiv
pop
push
push
pop
jle
loope
jne
ja
pop
jo
adc
mov
jp
(bad)
or
cwde
xchg
loopne
repz
or
aaa
fdiv
xor
repz
xchg
push
lods
dec
call
lds
sub
rcl
(bad)
jo
xchg
mov
lock
mov
loop
imul
les
add
mov
xchg
mov
xchg
mov
pop
std
sub
pusha
mov
pop
mov
fild
popf
sbb
pop
sub
pop
sar
imul
ss
mov
adc
lahf
cmp
or
sbb
dec
and
mov
and
ret
mov
test
(bad)
mov
aaa
aad
mov
mov
dec
pop
popa
mov
adc
nop
jo
add
and
mov
pushf
cs
call
add
mov
jg
cli
xchg
cmps
adc
pop
or
dec
inc
jge
adc
addr16
cmp
fcmovnbe
ins
pop
adc
fsubr
sti
jmp
int3
enter
test
imul
mov
stos
stos
imul
shl
test
adc
jge
enter
rcr
cmps
pop
cmp
fisubr
repz
sub
scas
jbe
xchg
(bad)
call
mov
repz
dec
dec
dec
add
into
fwait
ins
daa
in
adc
xchg
dec
cmp
sub
mov
test
loopne
and
into
dec
dec
xchg
call
(bad)
adc
int
test
push
xor
fdiv
mov
pop
cmp
lods
int3
jecxz
(bad)
pushf
std
enter
ins
pop
inc
pop
ss
push
je
mov
lods
mov
stos
add
inc
adc
dec
pop
adc
push
cmp
jg
pop
fadd
fcmovnb
enter
outs
in
inc
sub
iret
jae
lahf
push
sub
ss
pop
pop
pop
fdivr
das
(bad)
mov
xchg
push
jmp
aam
in
fstp
and
ss
mov
es
out
fcom
popf
xor
ret
aam
xor
movs
in
aam
outs
shl
adc
call
xor
inc
push
and
xor
inc
jbe
in
loope
xor
mov
das
sbb
and
pop
and
dec
mov
out
(bad)
dec
imul
sti
ret
mov
mov
(bad)
scas
(bad)
lds
jecxz
popa
inc
sbb
mov
adc
push
and
pop
hlt
jle
icebp
fs
(bad)
pop
pop
inc
outs
jae
aaa
xlat
inc
mul
xchg
xor
in
movs
int
cld
xor
lods
sub
icebp
fisttp
lods
xchg
adc
shl
pop
aaa
aas
or
daa
ss
inc
xchg
ja
sub
pop
inc
movs
push
adc
cmps
rcr
mov
and
in
test
or
div
addr16
sub
mov
cmp
or
jle
push
and
dec
xor
cmp
jg
movs
xor
iret
imul
mov
mov
ins
sbb
das
in
sbb
sub
data16
(bad)
not
scas
dec
inc
xchg
xor
mov
data16
mov
pop
sbb
lods
and
xor
imul
loope
add
sbb
add
mov
pop
adc
jp
lahf
mov
out
test
pop
movs
mov
jge
test
(bad)
xchg
mov
mov
js
dec
sbb
ja
jnp
add
push
cmp
sbb
inc
dec
pop
and
push
int
xchg
iret
cld
fwait
adc
push
sub
add
sub
cmp
out
shr
dec
jae
into
add
mov
mov
mov
xchg
je
adc
call
jge
push
pop
adc
fwait
push
mov
xor
adc
pop
inc
or
int
sahf
out
mov
fldcw
dec
mov
cmp
mov
mov
mov
jo
sub
sbb
cmp
inc
mov
mov
ins
arpl
dec
retf
test
cmps
loopne
leave
pop
cmc
fist
dec
mov
or
scas
push
test
cs
sbb
mov
sbb
lods
xchg
iret
add
jae
push
cmps
in
dec
repnz
mov
imul
(bad)
jae
mov
pop
add
out
and
shr
test
dec
and
imul
inc
dec
mov
hlt
movs
push
xchg
or
jmp
add
jne
xchg
loop
or
stc
xchg
ret
inc
push
imul
xor
ror
add
(bad)
repnz
push
pop
jp
lds
(bad)
jno
sahf
cmp
loop
sbb
addr16
dec
jne
mov
sbb
idiv
mul
and
cwde
xor
push
rol
mov
adc
loope
nop
mov
aad
lds
mov
fadd
aas
inc
ret
jge
mov
adc
sti
enter
push
rcl
(bad)
lds
cli
ror
adc
loopne
cmps
xchg
pop
in
fld
xor
cmps
bound
test
mov
and
adc
add
xor
fcomp
(bad)
sbb
shr
jecxz
loopne
icebp
cli
mov
inc
lods
popa
pop
ss
jp
mov
jg
imul
and
jge
inc
gs
ds
movs
mov
sbb
mov
push
or
mov
inc
or
mov
sbb
inc
cld
sub
pop
xor
pushf
sti
stos
je
inc
adc
xor
sub
fld
xchg
(bad)
mov
fcmovu
sar
inc
je
mov
idiv
out
sbb
push
bndldx
popf
mov
mov
ss
xchg
sbb
fst
retf
dec
sar
ss
mov
xchg
jno
sbb
mov
and
sub
mov
cmc
add
xchg
sti
inc
adc
and
ret
pop
test
add
jmp
mov
and
mov
pop
pop
xchg
add
pop
jne
lahf
cld
cmp
adc
xor
jecxz
ret
xor
pop
ret
dec
sub
push
call
mov
rol
int
adc
cmc
movs
pushf
jo
adc
mov
fmul
jnp
jp
and
test
or
mov
pop
pop
xchg
sar
nop
cwde
sub
adc
pop
pusha
push
jns
fild
jecxz
in
hlt
out
cmp
retf
out
cmp
mov
and
enter
jle
cmps
lds
add
sti
push
outs
jo
loop
adc
xor
and
(bad)
mov
push
daa
xchg
xchg
mov
dec
mov
xor
inc
fsubr
test
xchg
and
mov
jns
jnp
ins
xor
dec
ret
jg
loope
popa
fwait
aaa
pusha
pop
adc
jl
xor
dec
leave
add
add
fcmovnb
pop
dec
xchg
pop
mov
loop
sub
add
sub
add
lock
xchg
scas
xchg
mov
sbb
dec
pop
data16
jl
dec
cmp
sub
ins
(bad)
pushf
shl
das
fcom
leave
mov
retf
ret
setle
or
je
les
push
push
lea
add
adc
iret
add
in
movs
push
jl
cmp
xchg
cmp
pop
pushf
xchg
jmp
inc
aas
push
stos
imul
leave
out
pop
push
inc
nop
xor
push
cmp
xchg
fnstenv
pop
sbb
xor
and
(bad)
mov
inc
push
jns
imul
mov
or
(bad)
test
leave
adc
sub
mov
or
jg
test
sub
cmp
pop
pop
mov
mov
adc
nop
jmp
in
xchg
xchg
enter
and
and
std
cld
push
mov
cli
ins
enter
cli
xchg
mov
jbe
enter
inc
jb
out
push
mov
neg
repz
push
xchg
sahf
loopne
sbb
push
scas
arpl
xchg
in
imul
mov
jo
sub
mov
outs
popf
out
and
jge
push
adc
jae
add
enter
dec
loope
adc
sahf
aaa
cwde
jge
xchg
not
adc
adc
les
pop
outs
dec
inc
mov
mov
ret
fwait
cli
icebp
imul
mov
enter
hlt
lods
lea
xor
xor
sub
sbb
shr
jmp
pop
xor
sbb
pushf
xor
sub
cmp
dec
push
fs
cld
(bad)
enter
xchg
test
retf
or
fs
bound
fs
add
out
outs
inc
xchg
jo
sti
in
shr
test
mov
pop
ins
pop
pop
lods
aam
pop
mov
popa
jmp
imul
arpl
lock
mov
sbb
(bad)
loope
sub
sbb
xor
adc
and
mov
out
jae
rol
jno
pop
mov
(bad)
mov
test
pop
dec
stos
arpl
push
ret
psllw
movs
movs
sti
scas
dec
inc
fwait
(bad)
jmp
dec
push
cdq
cmps
(bad)
jo
jl
add
pop
hlt
pop
jae
xor
xor
ds
(bad)
aad
out
mov
fs
fstp
ss
ds
adc
inc
ds
cdq
imul
test
sbb
jl
arpl
adc
rep
lahf
shl
ja
js
pop
in
dec
sti
test
push
jbe
arpl
jmp
int3
cld
push
cdq
xchg
pop
cmps
clc
and
cmp
call
cmp
test
push
adc
and
jecxz
imul
ins
cmp
ins
stc
dec
xor
sbb
lahf
jno
cmp
pop
jmp
lods
cmp
xor
call
out
(bad)
mov
xchg
push
lods
pop
stc
sbb
movs
push
mov
int
in
cmp
push
adc
retf
pop
out
repnz
sub
sbb
lahf
fwait
xor
aas
dec
call
shl
cmc
or
cmp
ror
pop
or
fild
add
xlat
aaa
cwde
fist
or
test
xor
shr
mov
pop
xor
fwait
add
loop
add
push
xlat
outs
dec
or
dec
repz
and
cmps
pop
repz
cmc
stos
cs
cmc
xor
pop
lahf
jge
or
sub
call
aas
imul
cdq
dec
xchg
xchg
add
popf
cmp
pop
dec
ja
les
sbb
xchg
xor
push
pop
mov
iret
test
inc
sar
pop
cmc
je
mov
ret
ja
ficom
and
sbb
inc
shr
aad
jge
fcomp
fsubr
out
idiv
add
jb
pop
mov
in
(bad)
sub
fmul
sbb
addr16
jne
mov
and
adc
sbb
pusha
aaa
(bad)
jno
cmp
cmps
mov
popa
xor
xor
dec
ficom
fisttp
mov
outs
jb
mov
shl
imul
aam
popf
pusha
sbb
xor
sbb
cmp
cmp
sub
mov
shl
mov
inc
xor
addr16
jbe
mov
mov
xchg
xchg
aam
(bad)
jns
fild
retf
int3
movs
(bad)
dec
xor
dec
jle
popf
lods
stos
adc
int
stos
popf
sbb
rol
push
or
push
push
and
inc
std
push
and
scas
out
inc
loope
or
nop
jb
mov
mov
outs
fild
xor
fsubp
mov
ret
stc
push
push
mov
cmp
push
in
aaa
retf
nop
(bad)
fbstp
and
jne
adc
xchg
sub
imul
ins
pop
jl
add
cmp
and
dec
mov
scas
pusha
popa
xchg
pop
sbb
bound
aad
push
add
cli
add
add
jmp
cdq
call
shl
in
xlat
mov
mov
mov
mov
xchg
and
(bad)
mov
or
popf
push
cmc
and
sub
loopne
nop
cmc
adc
inc
mov
or
mov
rol
ret
cmp
mov
fwait
(bad)
ret
ror
retf
out
(bad)
ins
inc
(bad)
add
mov
aas
pusha
mov
add
sub
cli
mov
ins
mov
xchg
popf
int
int3
jo
cli
retf
shl
ja
sbb
push
add
mov
arpl
adc
(bad)
push
push
and
jle
or
fsubrp
push
ret
pop
push
out
or
mov
mov
inc
and
inc
xchg
push
push
dec
jle
fwait
sahf
mov
add
leave
jno
cli
call
pushf
lods
and
jno
add
mov
mov
bound
out
lods
fwait
sub
xchg
mov
push
jge
ret
(bad)
cmps
push
cs
popf
inc
xlat
dec
dec
iret
popf
stc
adc
pop
xlat
std
(bad)
jne
sti
fidiv
test
mov
mov
inc
rcr
mov
mov
int3
(bad)
ins
sti
outs
jne
sar
aam
adc
mov
xor
(bad)
pushf
sub
lods
fwait
ja
sbb
xlat
int
out
stos
inc
shl
lock
pop
data16
fmul
mov
mov
jo
leave
cld
cmps
jle
shl
and
xchg
jne
sbb
mov
mov
je
and
das
pop
repnz
movs
or
std
dec
or
test
mov
mov
stos
add
cmp
mov
xchg
jmp
call
inc
sub
jge
sub
in
popf
sub
in
mov
mov
or
push
mov
xor
inc
stos
nop
inc
pop
mov
cmp
movs
dec
dec
add
mov
fwait
push
out
push
repz
jmp
sub
enter
pop
movs
inc
and
mov
dec
iret
ret
mov
sub
xchg
mov
fdivr
pop
in
cmp
(bad)
xlat
sub
movs
xchg
(bad)
xchg
nop
xor
or
pop
leave
fld
movs
into
pop
mov
bound
add
loope
cli
pop
and
(bad)
pop
cs
pop
push
mov
es
mov
mov
push
fsubr
push
mov
cmp
sbb
ja
jo
je
repz
das
sub
sbb
add
call
ss
test
mov
pusha
cld
push
cli
cld
fidivr
mov
cmp
jge
push
dec
mov
pop
jnp
imul
jmp
cmps
mov
(bad)
rcr
mov
pushf
and
icebp
jbe
lahf
ins
imul
into
(bad)
xor
dec
sbb
outs
pop
and
push
ror
xchg
jl
add
xchg
xor
add
nop
cmp
sub
fistp
adc
jne
mov
into
repz
jnp
ins
shl
mov
movs
mov
call
push
shl
add
xor
fwait
inc
dec
mov
cmp
push
fmul
nop
pop
int
nop
xor
cmp
push
minps
call
mov
jg
mov
and
mov
mov
mov
cmp
jne
mov
scas
into
repnz
sub
xor
push
ret
imul
les
add
mov
in
mov
pop
sub
dec
loope
shr
jmp
jmp
sahf
mov
jb
jne
sbb
fdivr
cmps
cmp
inc
outs
mov
fimul
and
ret
int
adc
(bad)
adc
repnz
retf
test
das
int
lods
pop
popf
xor
push
sahf
cmp
into
pop
jno
sub
aas
and
add
pop
sub
dec
pop
cwde
mov
dec
aam
fwait
pop
push
lock
out
ins
sub
adc
dec
stc
mov
aad
idiv
cmp
adc
dec
mov
mov
mul
test
dec
dec
inc
sub
sahf
lahf
mov
aas
int
cmp
push
adc
sbb
xchg
fs
sbb
xor
jp
xor
inc
jne
push
push
inc
adc
mov
or
pushf
xor
jge
pushf
ss
sub
mov
pop
ret
mov
add
push
sahf
adc
push
adc
inc
outs
inc
sub
jg
or
(bad)
out
ret
int3
adc
add
mov
cmp
inc
xchg
lahf
jl
adc
mov
xor
push
ret
lahf
mov
xchg
addr16
hlt
xor
and
fnsave
(bad)
(bad)
enter
iret
ja
aad
arpl
aas
enter
sub
mov
lock
jp
repnz
jg
rol
int3
in
fstp
inc
(bad)
and
and
and
out
popf
jp
xor
mov
inc
test
enter
xchg
and
push
in
push
ins
and
hlt
mov
loopne
pop
js
push
ja
jg
sub
jle
movs
sbb
inc
cs
push
dec
push
ds
sub
sbb
pop
cmp
nop
(bad)
test
data16
adc
lock
pop
dec
add
loopne
fidiv
mov
sbb
add
mov
push
es
xor
sti
outs
addr16
push
aam
add
mov
inc
ins
popa
ja
stos
mov
jecxz
cmps
inc
push
push
in
jg
fild
pop
aaa
add
xchg
sbb
inc
xor
xor
mov
rcl
sar
out
imul
or
imul
ss
scas
push
xor
xor
and
pop
cwde
push
jmp
fadd
xchg
arpl
and
jl
sub
call
rcl
adc
ja
adc
jns
adc
cmp
ds
jp
push
push
iret
pusha
iret
sub
and
cmp
push
sub
mov
rol
shr
in
push
add
hlt
mov
gs
outs
xchg
xchg
xor
fwait
cdq
xchg
pop
adc
sbb
xor
enter
inc
xor
mov
ja
daa
mov
inc
jae
pop
cmc
aas
mov
bound
or
jb
or
lods
out
mov
loopne
jge
out
(bad)
xchg
ja
xor
loopne
pop
or
inc
and
mov
sbb
cmp
dec
sub
ror
dec
xchg
add
fist
mov
mov
xchg
cmps
push
or
imul
in
in
mov
aas
stos
sahf
jge
push
cs
arpl
out
mov
push
inc
cmc
pop
cli
ret
xlat
shl
test
xchg
leave
(bad)
scas
imul
fstp
sub
cwde
inc
and
or
cli
push
jg
pop
iret
pop
add
xchg
pusha
xchg
cmps
push
pop
pop
retf
sbb
adc
sub
inc
hlt
leave
ja
lock
mov
pop
ds
inc
dec
pop
dec
inc
inc
xor
xchg
(bad)
shl
dec
das
clc
and
and
or
in
pop
fwait
mov
jl
sti
xor
test
loopne
push
pop
dec
pop
sbb
pop
jae
aam
fdiv
in
cli
mov
push
lahf
(bad)
sbb
cli
and
pop
cmp
mov
sub
test
jo
or
lds
mov
repnz
and
sbb
sub
cmp
mov
dec
or
dec
xchg
mov
hlt
adc
lahf
aad
iret
sub
lea
test
mov
ret
sbb
and
(bad)
int3
sub
call
mov
out
retf
or
jge
mov
daa
xor
jecxz
ins
add
pop
add
popa
inc
cli
push
je
fsubr
stc
add
std
lods
jmp
lods
pop
mov
dec
js
and
sub
lock
push
fwait
call
jl
dec
(bad)
fisubr
fdivp
data16
sbb
les
shl
add
mov
mov
sbb
repz
jb
ss
(bad)
rol
ins
dec
lock
push
mov
rcr
dec
pop
inc
xchg
inc
xor
dec
dec
cs
push
aas
xor
dec
repz
aam
or
xor
jle
ret
mov
mov
mov
lock
adc
push
movs
add
mov
or
das
adc
mov
loopne
cmps
inc
xlat
rcl
mov
sti
xor
rcr
shl
lahf
add
jg
imul
stos
lahf
sbb
int3
mov
mov
adc
mov
rcr
and
inc
or
clc
fdivr
push
and
add
jns
jmp
fnsave
popa
push
fmul
xchg
test
inc
sbb
dec
inc
ret
in
outs
cmp
repz
mov
cmp
push
sbb
mov
and
loop
mov
lahf
test
lahf
jle
aas
jmp
mov
mov
xchg
sub
mov
jbe
or
mov
mov
xor
lods
in
xchg
jbe
xchg
and
mov
lock
aad
mov
xchg
jl
xchg
adc
repnz
stc
(bad)
ja
fs
mov
jge
mov
push
lods
adc
mov
xor
xchg
fnsetpm(287
pop
xlat
mov
or
mov
jbe
ss
dec
jnp
int3
fcomp
lea
cdq
in
or
sbb
ret
dec
pop
mov
and
or
(bad)
xor
clc
test
xor
xchg
les
inc
mov
stos
cmp
dec
sbb
out
pop
xor
neg
mov
xchg
dec
or
popf
sub
loopne
scas
or
std
neg
clc
sbb
mov
xchg
xchg
or
sub
cdq
repz
mov
or
ss
fst
jae
cmc
pop
ret
out
rcr
jge
cmp
scas
shl
xlat
jbe
mov
div
sub
test
adc
and
jb
xor
push
leave
and
cmp
mov
les
cwde
inc
aam
ja
lahf
mov
mov
into
int
push
mov
ss
fcomp
fld
mov
xor
ds
sbb
sbb
sub
sbb
addr16
cmp
(bad)
(bad)
std
daa
les
dec
and
fdivr
enter
mov
mov
xor
add
ins
lods
fs
rol
sub
scas
daa
ins
adc
fadd
test
fdivrp
cmp
mov
cwde
fsubr
adc
arpl
mov
call
pop
test
mov
pop
sub
or
(bad)
shl
(bad)
cmp
dec
(bad)
lahf
int3
pop
addr16
push
rcr
cmp
jl
jmp
add
stos
adc
popf
(bad)
mov
xchg
int
jae
push
dec
ror
aad
out
sbb
outs
sub
mov
icebp
adc
scas
cmc
pusha
addr16
lock
push
cmps
pop
aaa
add
loopne
js
ret
dec
bound
lahf
scas
inc
lods
or
out
cmp
scas
ins
jmp
stc
sbb
mov
aad
(bad)
or
xor
(bad)
inc
or
mov
xchg
push
enter
or
xor
ja
stos
pop
bound
leave
and
mov
push
jne
push
pop
lods
add
and
lods
or
jno
jnp
sbb
retf
sti
add
test
push
loope
fimul
test
dec
adc
lods
mov
imul
adc
jmp
push
xchg
inc
pop
cmps
ret
mov
jbe
gs
jbe
and
cli
cs
loope
mov
scas
adc
pusha
cmps
xchg
icebp
les
xchg
mov
out
push
gs
xchg
popf
loop
or
movs
jne
inc
sub
mov
jnp
mov
icebp
inc
sbb
sub
icebp
outs
push
dec
inc
cli
mov
int3
mov
mov
(bad)
retf
pop
fwait
popa
push
in
cld
and
mov
clc
xchg
and
xchg
xlat
sbb
call
fst
mov
(bad)
sbb
push
mov
mov
push
ds
jmp
pop
jbe
xor
cli
adc
mov
cmp
repnz
ins
dec
mov
mov
mov
fs
sbb
and
mov
out
xchg
gs
cmp
test
shr
aas
lods
pop
repnz
bound
in
jg
push
inc
inc
sbb
sbb
inc
ins
pop
icebp
scas
mov
fcomp
and
and
out
dec
les
pop
retf
pop
fs
and
push
enter
or
fmul
cmp
test
ret
es
addr16
mov
stc
inc
jg
xor
movs
jg
jp
inc
adc
cmc
inc
sub
test
(bad)
bound
in
(bad)
add
mov
fst
(bad)
xor
enter
imul
xlat
pop
jb
cs
dec
je
xchg
jno
iret
daa
xlat
and
cmps
xchg
(bad)
sbb
sbb
adc
dec
(bad)
stc
mov
cmp
mov
inc
bound
lods
ret
mov
xchg
or
test
test
dec
lods
bound
outs
(bad)
loope
xchg
cmc
cmps
fcomp
mov
push
fnstcw
mov
xor
cmp
enter
cmp
out
mov
sbb
mov
sub
jp
adc
cs
adc
inc
cmps
adc
gs
rcl
hlt
pop
das
mov
jmp
sahf
fdivr
imul
fiadd
push
loopne
enter
into
xchg
adc
jmp
inc
push
and
mov
pop
test
loopne
mov
jbe
push
(bad)
imul
sbb
jno
stos
cmp
into
aam
jmp
pusha
jo
and
js
ss
icebp
daa
push
fbld
(bad)
jnp
mov
test
adc
adc
xchg
jb
(bad)
idiv
ficomp
inc
push
jmp
or
scas
retf
mov
push
mov
add
popf
popf
std
inc
jmp
dec
and
push
shl
jg
(bad)
lods
cmovl
popf
mov
jmp
xchg
jnp
xchg
fisttp
cmp
sar
clc
cmp
dec
or
push
sbb
mov
out
shl
mov
lock
mov
test
imul
xor
in
js
add
movs
jb
cmp
mov
in
test
ficom
psrlw
data16
and
jnp
pusha
retf
mov
(bad)
shl
popf
pusha
aaa
rcl
mov
jb
test
(bad)
std
or
adc
pop
(bad)
mov
lds
push
mov
and
out
scas
repz
jne
xor
cs
adc
out
stos
repz
jae
adc
les
inc
inc
push
cli
cmp
bound
cdq
cmp
xchg
(bad)
imul
and
cmp
sub
clc
xchg
inc
outs
or
ins
(bad)
xor
mov
mov
out
mov
push
jl
sbb
std
(bad)
xchg
out
mov
cld
mov
mov
fisttp
push
psubusb
xor
int
addr16
loopne
shl
stc
and
mov
mov
(bad)
jmp
and
cld
mov
mov
xor
add
jb
rcl
shl
push
out
push
aaa
mov
jbe
cmp
add
and
push
xor
leave
push
in
data16
imul
sbb
dec
mov
ss
in
adc
adc
inc
add
sub
in
xchg
cmp
in
rcr
push
shl
add
or
lock
mov
adc
and
xor
pop
test
mov
out
mov
stos
into
daa
inc
ficomp
xchg
cmp
or
push
fcmovne
not
pop
xor
clc
mov
pop
test
jle
outs
cdq
xchg
pop
int
and
dec
imul
xchg
sar
je
push
push
mov
pop
mov
nop
dec
jno
mov
mov
mov
js
iret
fs
loop
jno
or
(bad)
fisub
(bad)
outs
sbb
cdq
jecxz
jb
loop
or
ins
das
sub
sbb
push
hlt
iret
add
and
mov
int
imul
mov
dec
and
mov
mov
xlat
sbb
xlat
sbb
mov
movs
fcmovb
jp
xchg
dec
xchg
jl
dec
je
pop
inc
sub
sub
pop
idiv
and
sub
mov
lods
test
out
jmp
(bad)
mov
push
(bad)
and
sub
cwde
les
xor
outs
xchg
sub
xchg
(bad)
scas
adc
pop
test
popf
(bad)
stc
retf
rcl
ss
cli
out
and
add
imul
push
pop
and
add
retf
xchg
pop
add
sub
out
ss
lds
or
sbb
(bad)
mov
add
movs
aad
xor
call
add
dec
je
pop
xchg
sar
mov
movs
add
test
sub
shl
sbb
mov
iret
jmp
scas
repnz
jmp
and
repz
std
sub
ins
sub
mov
and
sti
in
fdiv
sub
lods
rol
shr
std
pop
or
or
call
and
dec
enter
push
adc
and
lds
pop
fndisi(8087
mov
push
xchg
dec
push
cmp
or
(bad)
xchg
sub
cmp
or
inc
test
(bad)
and
call
movs
xor
lods
mov
test
stos
push
std
(bad)
cmp
xor
mov
pop
pop
fs
xchg
jge
lgs
mov
jmp
pop
mov
(bad)
mov
dec
fwait
jnp
ja
push
nop
sbb
dec
sub
push
scas
cmp
loopne
jnp
jle
inc
or
add
ins
push
int
fisttp
movs
jmp
pop
dec
clc
pusha
scas
xchg
push
not
fstp
add
mov
hlt
push
mov
sbb
stc
or
ret
jne
dec
mov
in
sub
(bad)
stos
(bad)
sub
dec
mov
xor
mov
jno
or
call
das
mov
fcomp
dec
(bad)
dec
pop
xlat
cmps
cmc
xchg
sub
or
test
mov
mov
pop
fs
cld
sbb
out
xchg
lods
push
sahf
mov
mov
in
fistp
lods
mul
and
pop
iret
(bad)
fnsave
loop
xchg
mov
jg
test
push
mov
jae
loop
add
(bad)
mov
repnz
dec
fwait
fwait
sub
mov
pop
jb
es
ins
ret
inc
rcr
xor
mov
mov
jecxz
add
mov
and
dec
jb
xor
sbb
adc
xchg
mov
not
jle
mov
dec
sub
cld
sahf
push
out
push
ror
cmp
sbb
push
leave
outs
pop
ja
daa
cmps
mov
and
sbb
add
and
fwait
sbb
sub
fmul
jp
test
aam
into
pop
push
cwde
push
xchg
lods
push
mov
enter
das
adc
push
out
aas
ficomp
dec
jl
push
inc
jne
icebp
pusha
mov
xchg
inc
or
jge
xchg
test
jno
in
inc
adc
adc
or
repz
jnp
sub
xor
stos
cmp
icebp
aam
jb
out
mov
aaa
mov
(bad)
sub
mov
and
lods
call
iret
push
outs
jne
mov
xor
sbb
fiadd
xor
jno
xchg
push
cmp
ja
jbe
mov
imul
in
gs
cwde
int
and
cmp
in
neg
clc
loop
mov
cmp
ror
sbb
cwde
mov
cmp
push
fidivr
inc
aaa
inc
mov
mov
mov
adc
pop
in
xor
out
xchg
xchg
or
ror
call
int3
leave
mov
push
(bad)
jmp
fnstsw
dec
jl
xor
mov
ds
xor
sbb
push
inc
or
pop
fisub
jo
or
push
out
and
adc
adc
popa
mov
cdq
pop
jo
push
jmp
xchg
jecxz
mov
push
dec
std
mov
sub
inc
xor
in
aam
fucomi
in
fsubr
cwde
push
mov
sar
xchg
or
sahf
movs
pop
jmp
loope
dec
mov
pop
push
sbb
mov
(bad)
cmc
pop
clc
in
lock
xor
and
pop
mov
xchg
sub
mov
aad
pusha
jmp
jge
aad
pop
out
inc
clc
and
mov
call
jp
in
pushf
pop
push
pop
arpl
sub
dec
add
dec
xchg
mov
in
test
pop
jnp
push
and
rcl
jns
pushf
cmp
icebp
mov
and
clc
(bad)
stc
inc
jnp
mov
and
push
nop
iret
adc
mov
mov
xchg
mov
and
into
addr16
push
aad
(bad)
cmp
and
scas
pop
jns
xchg
out
sahf
pop
popf
xchg
and
add
ss
imul
dec
add
cwde
xor
adc
fcmovu
mov
addr16
(bad)
ds
retf
je
in
fstp
mov
xchg
fisttp
push
je
ficomp
dec
pop
outs
daa
pop
and
call
mov
adc
jle
sbb
in
out
jmp
ja
jns
pop
shr
and
cwde
adc
push
adc
mov
int3
push
pop
mov
mov
sbb
in
mov
mov
xor
and
cmc
int
shl
xor
jmp
jge
fild
rcl
sub
std
add
hlt
sbb
fisubr
add
scas
daa
or
je
ins
nop
dec
pop
adc
stos
fcom
push
daa
sub
cld
add
pop
adc
mov
int3
add
and
inc
sahf
or
xor
add
mov
adc
lahf
dec
inc
push
addr16
out
xchg
mov
lds
jle
xchg
shr
pop
cdq
repnz
mov
hlt
ja
push
xchg
dec
push
lods
pop
push
add
aas
call
mov
fwait
pop
inc
js
icebp
out
xchg
sbb
xchg
push
mul
push
mov
adc
ficom
and
ds
pop
int3
jg
pop
or
xchg
inc
sbb
aas
ins
adc
dec
add
test
nop
sub
std
je
lods
(bad)
fwait
pop
xchg
fimul
test
mov
sbb
cmp
mov
and
pop
sbb
mov
in
add
int
jae
movs
popa
jp
mov
push
xchg
push
xchg
(bad)
lahf
inc
es
inc
jmp
mov
imul
push
xor
xchg
arpl
scas
and
mov
imul
scas
(bad)
xor
mov
scas
sub
sub
jo
test
sbb
xor
(bad)
inc
adc
mov
push
(bad)
enter
push
xor
das
icebp
jp
clc
stos
loope
outs
aam
mov
in
fyl2x
jns
mov
mov
into
fist
rcl
fadd
inc
dec
in
dec
dec
es
out
into
mov
or
movs
or
add
jbe
inc
cdq
inc
sub
out
leave
sub
leave
cli
sub
mov
or
mov
xor
pop
xlat
push
and
(bad)
fsub
out
sub
inc
scas
xchg
push
es
mov
cmp
mov
test
pop
clc
(bad)
dec
or
push
and
test
out
cmps
loope
stos
push
xchg
std
rcr
int
shl
cli
dec
xchg
rcr
shl
mov
sub
outs
neg
inc
xchg
mov
int3
cmp
aam
retf
pop
test
daa
rol
imul
repnz
aam
mov
in
sub
(bad)
in
xchg
ret
test
cmp
(bad)
clc
scas
stc
xchg
sub
ror
ds
idiv
iret
(bad)
cmp
mov
pop
cmc
pop
aad
retf
sub
clc
sub
loopne
and
js
repz
imul
cmp
lods
mov
and
sub
xor
stc
jmp
mov
sub
mov
or
ins
pusha
mov
push
ins
push
jg
hlt
or
xlat
mov
(bad)
out
sub
push
xchg
test
int3
or
adc
mov
dec
sub
mov
js
jp
fild
xor
mov
or
daa
ja
push
ret
call
out
je
push
jecxz
lods
comiss
dec
fimul
stc
fst
jmp
inc
mov
jbe
pop
stos
bound
mov
xor
sbb
(bad)
jle
inc
mov
aaa
push
mov
int
outs
gs
js
pop
rol
add
or
cmp
dec
sti
or
sbb
pop
es
(bad)
pop
push
add
dec
into
xchg
fisttp
in
push
mov
xor
inc
xor
inc
xchg
ret
ss
or
cs
cs
int3
imul
xlat
sub
inc
les
(bad)
dec
scas
mov
inc
in
leave
aam
push
addr16
xchg
in
xor
cmp
and
es
bnd
clc
mov
pusha
dec
ins
ret
cld
(bad)
mov
outs
(bad)
sub
ret
dec
cmp
adc
sub
mov
and
leave
dec
sub
fcomp
inc
fnstcw
dec
cmp
stc
leave
mov
mov
and
rcr
cmp
xor
add
fist
xchg
push
stc
xor
fstp
push
mov
(bad)
mov
push
and
and
sbb
and
std
into
jno
mov
push
or
repz
mov
dec
sbb
push
or
cmp
pushf
mov
sbb
dec
lahf
xor
retf
sbb
(bad)
inc
pmuludq
daa
js
dec
xchg
pop
pop
push
pop
test
sbb
in
jg
mov
push
js
sub
mov
push
pop
inc
js
xchg
vdivsd
xchg
and
cmp
xor
push
pop
jnp
pop
xor
shl
mov
inc
jb
sbb
dec
xchg
cmc
dec
jmp
jmp
movs
scas
sbb
sahf
cmp
mov
adc
jecxz
enter
out
mov
movs
test
adc
cld
call
xor
cmps
adc
popw
jecxz
xchg
cwde
cmps
and
xor
aam
lods
mov
and
ror
gs
mov
jae
aaa
fwait
jge
pop
inc
mov
(bad)
mul
ja
jmp
mov
and
mov
push
jns
leave
mov
jb
xchg
adc
add
(bad)
mov
dec
sahf
lods
dec
push
fstp
inc
(bad)
mov
add
pop
retf
xor
and
mov
sbb
jmp
adc
ins
xchg
jne
pop
cdq
or
nop
mov
ins
dec
cmp
jge
into
add
jecxz
jl
and
or
bound
stc
mov
jmp
(bad)
out
xchg
test
loop
xchg
mov
xchg
jae
dec
fdivp
adc
mov
fcmovnu
test
mov
data16
sbb
fsub
sahf
popa
push
shl
fdivr
test
and
and
mov
xor
retf
jecxz
xchg
fiadd
call
das
xchg
xchg
mov
inc
test
ds
sti
scas
push
or
pop
dec
push
jbe
xor
sbb
sti
jbe
add
sub
mov
das
push
jb
xor
or
lea
push
fistp
fsub
cdq
dec
or
scas
in
cmps
rcr
(bad)
lahf
mov
jl
jmp
cmp
lods
loope
stos
outs
aad
sub
push
leave
dec
pop
xchg
arpl
inc
push
test
cmp
retf
sbb
bnd
aas
cmps
inc
(bad)
mov
mov
retf
push
retf
ror
pop
or
jmp
and
adc
mov
dec
xchg
icebp
test
xchg
aad
fdivr
nop
js
sar
cwde
fadd
adc
sub
out
push
lods
cdq
test
rcl
mov
hlt
neg
hlt
int
mov
inc
jmp
mov
or
sub
mov
mov
inc
into
(bad)
daa
into
push
push
test
ret
clc
jg
pop
and
hlt
adc
xchg
mov
cmp
push
cmc
loope
leave
dec
and
(bad)
pop
loope
inc
stos
adc
scas
sbb
jnp
sbb
mov
xchg
dec
push
repz
icebp
dec
out
shr
shl
lahf
mov
ror
add
fild
aad
cli
push
loop
stos
and
cli
adc
fld
ficomp
push
mov
inc
dec
jns
push
cmps
mov
xchg
out
add
ja
mov
lahf
xchg
imul
push
add
cmp
xchg
inc
into
add
out
rol
jge
or
or
arpl
mov
rcr
bound
inc
add
pop
jle
int
inc
leave
xor
gs
jge
jge
mov
stc
xchg
std
pop
inc
pop
xchg
fadd
mov
stos
test
dec
dec
sar
add
punpcklbw
sub
cmp
inc
loop
mov
sub
mov
mov
adc
mov
int
xor
pop
call
mov
or
adc
sbb
adc
dec
ja
pop
mov
adc
cmp
cld
fsub
sahf
pushf
jle
fsub
cmp
ja
mov
xor
sub
pop
jp
mov
in
add
imul
repz
mov
pop
adc
and
inc
cli
loopne
mov
jg
stos
fwait
jmp
fcomp
add
mov
xor
cmps
test
mov
lods
popf
sbb
ret
mov
add
jmp
jg
xchg
mov
call
cmp
cmp
out
je
fst
jg
and
add
dec
pop
mov
aad
fstp
retf
retf
test
push
dec
and
das
mov
ins
jmp
add
adc
jbe
imul
mov
fcom
push
ret
popw
inc
call
mov
out
lds
xor
pop
pop
leave
pxor
sbb
mov
mov
mov
icebp
sti
nop
add
int3
pusha
or
xchg
pop
stos
push
sub
popa
pop
mov
cmp
mov
dec
jb
mov
mov
add
mov
push
rcr
repz
mov
leave
jg
inc
mov
pop
rol
add
fucom
mov
shl
cmc
lods
lods
sbb
les
and
adc
push
clc
inc
xor
mov
xchg
data16
dec
push
mov
push
sub
dec
push
mov
sub
xor
js
xchg
ds
int3
(bad)
in
jne
sbb
sub
push
repnz
jp
test
in
int
ss
fistp
ins
xor
ja
ret
ret
les
into
or
mov
leave
clc
sbb
test
mov
cwde
call
mov
mov
cmp
adc
sbb
pop
and
push
xor
mov
bound
jl
mov
xchg
sahf
loop
mov
or
nop
sub
push
dec
jle
ror
adc
not
adc
mov
inc
(bad)
cld
sbb
ret
test
test
push
dec
test
fisttp
push
mov
mov
jp
mov
jle
push
cmp
adc
jle
mov
cmp
test
test
dec
cmp
outs
ss
or
jle
mov
adc
mov
xlat
ins
iret
push
mov
sbb
or
ss
fwait
xchg
mov
outs
jb
xor
mov
xchg
and
jb
cdq
into
stos
mov
and
ins
push
scas
popf
mov
or
lods
outs
aaa
ds
and
adc
and
clc
(bad)
lock
cmp
mov
clc
and
out
out
push
loopne
or
std
dec
dec
jno
popf
fdiv
or
test
or
pushf
sub
mov
mov
loopne
fisubr
sbb
inc
mov
and
not
jo
add
std
cmp
jle
retf
ss
into
and
inc
pop
xor
dec
iret
in
add
(bad)
stos
sbb
sbb
xchg
cmps
sub
aas
and
adc
mov
inc
mov
mov
xor
sbb
xor
pop
mov
aaa
das
into
mov
lock
mov
ret
shl
rcl
outs
out
mov
add
pop
push
add
pushf
imul
dec
pushf
xchg
mov
js
nop
push
pop
cmps
mov
jl
pop
xchg
(bad)
xor
add
gs
aaa
js
and
ds
or
sti
bnd
jl
dec
jge
clc
mov
test
jnp
test
dec
sub
hlt
push
(bad)
and
fcmovbe
jmp
cmps
adc
inc
pop
test
stc
data16
test
in
cmc
push
xor
das
(bad)
out
in
mov
push
push
mov
out
and
jno
cmps
or
mov
jmp
ins
inc
ins
into
mov
mov
sbb
cmc
add
retf
and
repz
jno
mov
add
sub
outs
push
nop
jno
test
push
mov
inc
les
jmp
call
mov
lea
xor
dec
sbb
imul
popf
(bad)
adc
test
push
jmp
adc
add
cmp
mov
adc
cs
mov
int
not
je
clc
mov
mov
cmps
sub
add
jne
sub
mov
add
shr
scas
pop
jecxz
mov
cmc
xor
mov
(bad)
cmp
pop
in
imul
in
push
adc
aad
cmp
mov
repnz
dec
or
xchg
cwde
ins
popa
sbb
fwait
rol
es
into
bound
call
addr16
shl
mov
push
fldenv
lds
jecxz
pop
mov
je
inc
je
fnstenv
shl
test
push
ins
push
test
jl
pop
adc
frstor
in
mov
cs
retf
xor
mov
out
mov
sub
push
imul
mov
sbb
inc
int
mov
call
(bad)
rol
mov
push
cmc
cwde
jne
rol
sub
pop
lea
lahf
and
in
jmp
sbb
jmp
inc
jmp
mov
std
(bad)
mov
repnz
jle
iret
fisub
jg
jns
mov
daa
sbb
stos
test
mov
lock
or
and
in
pop
cmp
mov
mov
lock
arpl
jl
(bad)
cmp
adc
jns
aaa
test
push
or
retf
or
enter
sbb
pop
fldenv
int
movs
mov
stos
push
inc
xchg
jp
popf
aas
or
imul
or
icebp
std
cmp
js
jae
sub
mov
loopne
adc
and
sub
fldenv
jnp
cwde
adc
inc
loopne
dec
int
jnp
sub
stos
aas
pop
outs
xchg
fcomi
adc
xchg
pop
push
out
clc
or
inc
xor
or
int3
sub
enter
mov
cmps
dec
xchg
lods
nop
pop
jo
jnp
lods
outs
mov
adc
pop
add
pop
jbe
jns
js
jns
lea
lahf
push
mov
xchg
daa
push
sbb
inc
inc
push
push
fdiv
fst
(bad)
push
or
adc
push
sbb
cmp
dec
cmp
test
push
lods
int3
cmps
in
pop
stc
ret
push
mov
dec
push
test
jnp
cmp
mov
(bad)
(bad)
shl
jns
inc
dec
inc
mov
add
lods
ficomp
pop
loopne
aas
out
jmp
sbb
dec
mov
mov
ret
jmp
sahf
scas
in
sahf
fisttp
or
xchg
xlat
movs
icebp
int
sti
mov
jnp
push
push
stc
ins
mov
sti
pop
pop
es
xchg
cld
push
inc
mov
retf
std
data16
scas
mov
(bad)
ja
cmp
jmp
aad
and
lea
(bad)
xlat
sub
xlat
xchg
inc
in
gs
and
pcmpgtw
rol
pop
jle
jg
cmp
out
iret
aaa
cdq
ss
sahf
shrd
jge
mov
or
fsub
ss
dec
ret
lods
jb
xchg
mov
sbb
jno
lea
ins
test
mov
nop
test
imul
mov
and
sti
dec
fstp
jnp
in
scas
clc
into
jmp
xchg
stos
jno
in
xchg
push
mov
push
push
pop
icebp
and
and
mov
or
movsx
jbe
std
(bad)
xor
jae
push
xchg
mov
xlat
iret
push
adc
or
aas
jbe
xchg
cmp
or
sti
adc
or
(bad)
js
sahf
mov
cdq
int
sbb
pop
cmps
cmps
jns
sub
xchg
dec
call
icebp
mov
ss
mov
fld
lods
push
or
xor
ins
xchg
push
mov
push
stc
xchg
and
add
xchg
mov
xor
(bad)
fsub
sub
mov
xchg
cdq
movs
jp
add
enter
jecxz
mov
xchg
lock
xchg
and
imul
popf
xchg
(bad)
pop
sbb
ds
clc
pop
in
jnp
mov
jne
in
xor
mul
test
lahf
cwde
inc
or
dec
int3
aad
sbb
push
dec
jl
push
scas
sbb
int
push
mov
mov
mul
push
xor
sub
and
ud2
or
sbb
mov
out
push
dec
sub
rol
div
cmp
call
cmp
ins
shl
pusha
pushf
cmp
xchg
jo
push
jge
inc
ffree
xor
ja
push
inc
add
cli
jne
ja
sub
(bad)
loope
jmp
mov
and
js
je
pop
movs
test
sub
dec
or
push
or
cs
neg
out
mov
xor
cmp
loop
mov
mov
sub
xlat
pop
outs
cmp
jb
dec
pop
ins
out
sbb
cmovp
imul
push
adc
mov
and
mov
retf
test
aas
xor
fs
cli
xchg
neg
mov
ret
jmp
(bad)
out
mov
outs
fcomp
xor
sub
push
stc
xor
add
lahf
fld
push
xchg
inc
sub
adc
push
repz
sub
nop
add
sahf
mov
ja
cmp
loopne
div
cmps
(bad)
data16
je
jns
adc
cmp
xchg
scas
jmp
adc
sbb
cmp
add
outs
or
dec
xchg
cmp
add
rcr
fdivr
das
jmp
(bad)
rcl
imul
push
dec
fs
scas
in
mov
ret
into
test
mov
sub
mov
ret
loopne
xor
test
mov
mov
mul
and
inc
push
pop
and
in
sbb
gs
sub
jb
mov
add
loop
(bad)
xchg
es
pusha
fistp
retf
mov
sub
in
test
cmps
mov
xchg
in
dec
xor
dec
not
and
dec
add
or
int
into
mov
sub
sub
inc
xchg
jl
std
sub
adc
xor
sti
outs
mov
mov
sub
add
lds
jo
mov
cmp
movs
adc
add
jns
mov
adc
mov
adc
leave
jno
sub
mov
les
xchg
adc
push
icebp
loope
push
pushf
sbb
jae
in
aam
ret
jl
dec
xchg
rol
fisub
scas
sub
xor
mov
(bad)
add
sub
rol
push
xchg
stos
retf
mov
mov
fbstp
cmp
rcl
xchg
fdivr
pop
jnp
adc
sbb
(bad)
call
xchg
cs
mov
in
jle
xchg
or
inc
jns
scas
mov
or
dec
or
pop
icebp
xor
retf
cmp
mov
(bad)
mov
pop
xchg
pop
xchg
jno
push
inc
les
mov
in
cmp
push
ror
adc
hlt
adc
push
scas
fcmovne
pop
mov
jmp
jle
add
out
inc
loop
mov
jbe
sbb
std
shl
fist
mov
mov
sbb
add
or
push
push
in
push
pop
mov
pop
jne
xchg
cli
pusha
jl
inc
push
jl
pop
movs
ds
call
data16
and
out
sub
pop
ds
mov
push
mov
out
loopne
popf
div
push
push
mov
int3
inc
ret
icebp
or
sbb
scas
jno
add
ins
fcomp
add
push
ss
push
xor
or
mov
mov
loope
fsub
enter
mov
lahf
mov
or
jns
out
xchg
or
cmps
fmul
aam
jecxz
ficomp
sahf
cmp
mov
lds
sub
loopne
dec
and
push
xchg
add
xchg
mov
lahf
retf
jmp
push
lods
in
test
add
adc
sub
rcl
icebp
xor
dec
call
pop
cmp
jecxz
inc
inc
call
inc
pop
gs
dec
xchg
push
popa
(bad)
repz
sub
cmp
out
idiv
mov
and
ss
out
cld
mov
inc
(bad)
aam
push
and
inc
loop
(bad)
call
lahf
sub
dec
fsubr
cmp
push
mov
sub
push
shr
dec
push
pop
mov
dec
retf
sbb
inc
push
cwde
fist
sbb
or
push
push
mov
jae
push
cmp
clc
std
pop
mov
(bad)
(bad)
sahf
in
sub
mov
sbb
inc
into
clc
cmp
push
mov
push
stos
out
dec
pop
sub
mov
call
xor
push
(bad)
out
xor
aas
add
adc
cmps
sub
sub
rcl
add
sbb
jge
sub
jmp
xchg
pop
inc
adc
xor
dec
retf
push
mov
inc
fnstcw
dec
lahf
dec
pop
mov
call
add
neg
ins
in
mov
mov
das
fwait
(bad)
sti
pop
dec
popf
or
push
retf
(bad)
stos
rcr
add
jge
and
movs
nop
sbb
jnp
repz
psubsw
jge
sbb
repz
mov
jae
fnstsw
jns
xor
push
jb
lds
ret
mov
pop
call
jg
cmp
jae
xchg
ffree
lods
jns
pusha
mov
aaa
dec
out
mov
aas
(bad)
std
mov
fwait
pop
mov
aam
mov
mov
(bad)
in
call
(bad)
fistp
jl
jno
fld
movs
retf
sbb
sbb
stos
mov
out
xor
pop
sbb
adc
add
mul
pushf
pop
push
imul
leave
mov
jno
jno
or
shl
aas
push
pop
sti
or
fwait
xchg
mov
mov
adc
sub
std
cmps
sub
loope
call
cmc
retf
sbb
sub
adc
icebp
int3
stos
(bad)
nop
movs
xchg
xrelease
ins
mov
icebp
pop
fld
sti
add
jl
cmp
rcl
cdq
mov
jle
jmp
out
xor
xor
mov
xchg
mov
add
jb
mov
rol
jnp
push
inc
adc
jne
push
(bad)
pop
repz
xor
pop
loope
or
(bad)
bound
ja
sti
or
push
(bad)
aam
aam
cmp
xchg
je
dec
fidivr
popf
pop
mov
mov
sub
icebp
add
pop
dec
adc
jl
lods
or
and
out
sub
pop
xor
repz
mov
test
ss
adc
jmp
lods
xchg
push
fild
fwait
xor
mov
jp
rcr
cmps
mov
pusha
lock
out
xor
scas
movs
pop
das
xchg
loop
bound
inc
jmp
inc
fidiv
test
ret
ss
push
inc
pushf
je
ds
iret
loopne
add
bound
xor
jno
and
mov
push
pop
out
test
add
jae
test
scas
or
lock
inc
(bad)
xor
lahf
pop
leave
sti
cld
push
mov
fwait
lods
jb
leave
call
jmp
in
sti
xor
fs
movs
adc
(bad)
test
mov
and
mov
xor
pop
fild
rcl
das
sbb
lods
popa
pop
iret
dec
and
aas
cmp
and
in
push
xchg
arpl
(bad)
fist
lods
out
call
shr
xchg
push
(bad)
mov
cmc
xor
lods
mov
xor
inc
jb
sbb
mov
(bad)
push
imul
mov
sbb
jns
xchg
adc
out
sub
xchg
xchg
test
mov
dec
ret
dec
and
pop
test
mov
leave
mov
addr16
add
mov
int
test
mov
jae
jo
push
and
mov
dec
sbb
out
repz
push
daa
push
or
xor
sub
(bad)
fnstsw
stos
push
repz
pop
aad
lock
pop
jecxz
inc
mov
jo
sbb
mov
test
jg
mov
js
lods
adc
inc
xlat
push
or
(bad)
stc
test
retf
cmc
(bad)
hlt
loope
(bad)
dec
adc
fwait
cmp
push
add
mov
rcr
out
ds
bound
sub
jmp
(bad)
mov
loopne
mov
xor
jmp
les
lods
dec
xchg
jmp
mov
cmp
into
je
jns
push
cmovle
jae
dec
inc
sbb
jo
rol
mov
dec
or
or
es
or
xor
dec
xchg
ss
push
cmp
ins
adc
div
or
clc
jno
and
add
sbb
mov
sub
imul
pop
lods
loop
out
iret
cmp
out
mov
jge
(bad)
and
div
mov
mov
inc
retf
fist
scas
sub
sub
ror
(bad)
movs
out
push
inc
jb
mov
clc
outs
std
push
movs
pushf
add
movs
ins
adc
js
mov
pop
mov
dec
add
pop
cli
inc
pand
mov
movs
add
mov
xor
ds
mov
push
test
cmp
iret
cwde
repnz
fisttp
jo
adc
cs
xchg
jne
pop
out
xor
dec
and
push
pop
xchg
iret
loop
jae
push
mov
cmps
ret
ret
mov
cs
mov
mov
push
arpl
nop
pusha
(bad)
ror
out
stc
outs
call
mov
push
sub
ins
scas
out
repnz
popf
dec
mov
cmp
(bad)
scas
and
pop
idiv
retf
mov
xor
sub
pop
pop
sbb
cs
mov
push
pop
stos
shl
inc
xchg
xchg
jge
loope
arpl
leave
add
pop
out
cmp
and
xor
imul
mov
stos
xchg
mov
push
lahf
(bad)
mov
in
xchg
sub
fadd
adc
add
call
inc
data16
lock
add
(bad)
shr
test
cmp
test
push
dec
ja
jge
sbb
and
mov
mov
mov
rol
mov
in
adc
aas
xor
in
or
ins
icebp
enter
push
out
jle
repz
xlat
inc
push
mov
inc
pop
ror
mov
inc
popf
and
loopne
iret
fucomi
mov
mul
sub
inc
mov
dec
xchg
pop
jl
push
pop
adc
das
aam
cmp
les
mov
jg
xor
mov
add
inc
push
jmp
dec
xchg
leave
pop
xor
popa
(bad)
nop
mov
pop
icebp
push
sbb
xor
cli
sbb
test
and
xchg
cli
pop
pop
xor
push
xor
xlat
mov
and
lods
repnz
jne
xor
into
std
mov
out
cmps
ja
jo
mov
aaa
xor
dec
imul
cmp
sahf
movs
mov
sub
psubusw
cld
or
push
leave
sbb
cmp
push
jbe
jns
cli
xchg
mov
pop
adc
push
adc
in
mov
jmp
fdivp
nop
out
repnz
aas
mov
ds
out
adc
or
lds
cmps
mov
sahf
jl
inc
or
mov
push
lea
cdq
ret
and
mov
jl
(bad)
dec
dec
jmp
out
in
push
push
xlat
dec
sbb
cmovle
rcr
les
imul
aad
and
ficom
out
ds
jmp
out
mov
gs
mov
inc
jns
aas
pop
sbb
jno
arpl
int3
lock
push
out
sar
inc
stos
in
std
test
rcl
dec
xchg
loopne
cmp
push
into
xor
out
xor
jno
int3
dec
cmp
dec
fdivr
std
stos
xor
lahf
outs
sahf
sbb
cmp
in
cdq
ret
push
stos
out
mov
popa
push
mov
cmp
mov
dec
mov
mov
adc
test
arpl
stc
jecxz
imul
call
xchg
ss
nop
gs
in
inc
sub
repnz
sbb
inc
(bad)
ins
cmp
sub
js
cmp
cmp
add
sbb
push
ret
les
dec
jb
mov
cmc
add
daa
mov
xchg
add
inc
mov
mov
mov
imul
stc
iret
aaa
das
push
xchg
out
add
loopne
add
add
movs
div
jbe
sbb
sub
(bad)
sub
hlt
or
(bad)
or
xchg
call
lock
jae
clc
(bad)
out
popf
lods
jg
popf
pop
cwde
or
xchg
push
mov
test
ret
sub
push
ja
mov
mov
mov
rcl
pushf
or
gs
xchg
cs
fmul
pop
adc
pusha
adc
dec
xchg
lods
cmp
push
int
shl
shl
or
sbb
push
pop
jnp
add
cmp
loopne
pop
in
daa
jmp
mov
ins
inc
adc
scas
inc
pop
(bad)
push
shr
fwait
shl
pop
fisub
add
movs
push
jp
mov
lods
mov
(bad)
rcl
test
sbb
sets
leave
fmul
les
fisub
jg
adc
movs
add
jne
xor
bound
cld
and
sbb
push
stos
push
ret
shl
xchg
movs
mov
pushf
jo
jns
or
or
mov
add
in
and
jle
ins
mov
jae
sub
adc
mov
cs
(bad)
pop
ds
cs
inc
(bad)
and
sbb
fadd
mov
mov
cmps
rol
cmp
inc
movs
imul
lods
inc
dec
mov
arpl
fidiv
xchg
sub
loopne
add
fbld
movs
add
add
inc
and
add
mov
sbb
push
jno
cs
push
std
xchg
repnz
and
and
mov
jge
xlat
mov
xor
push
jbe
or
sub
add
je
push
fadd
shl
fld
push
push
mov
js
or
sub
jne
test
adc
cwde
sub
ret
or
stc
jae
fstp
sbb
gs
ins
sbb
xor
lods
jo
ror
mov
je
add
mov
int3
sbb
mov
mov
mov
jg
mov
das
(bad)
stc
sub
or
clc
(bad)
pop
xor
sub
and
pop
aas
mov
movs
xchg
sar
int
xor
test
lock
adc
xchg
pop
xchg
cmp
pushf
sbb
popa
inc
addr16
sahf
imul
stc
sbb
sub
arpl
jbe
retf
cmc
int3
inc
movs
ret
cmc
mov
cmps
test
pusha
fldenv
mov
push
daa
fwait
pop
(bad)
xor
mov
out
lods
pop
add
pop
mov
push
imul
iret
or
iret
push
jae
test
xchg
inc
mov
test
mov
and
outs
and
inc
and
nop
jecxz
xchg
sar
jp
(bad)
adc
jbe
push
rcr
xchg
pop
cmp
mov
iret
(bad)
pop
mov
dec
sbb
out
pop
pushf
aad
fnstsw
adc
jns
xor
js
fsubr
pop
in
lahf
sub
fmul
cmp
(bad)
add
xor
or
jmp
es
mov
pop
es
sub
pop
movs
pop
nop
push
xor
push
scas
(bad)
rcr
add
cmps
retf
mov
sbb
and
rol
jae
dec
inc
pop
ja
test
cdq
dec
mov
aam
cmc
loop
jecxz
out
outs
push
push
jmp
mov
je
sbb
or
sbb
or
cmp
jno
pop
mov
mov
mov
add
push
mov
mov
sbb
cmp
fldenv
or
mov
pusha
daa
test
add
and
cmp
stos
jne
push
dec
dec
icebp
daa
shl
pop
inc
jae
repnz
sub
and
mov
xchg
inc
or
sbb
sub
push
imul
addr16
mov
push
mov
jle
aam
aas
call
or
fbld
sub
mov
stos
pop
and
mov
sahf
out
push
leave
dec
loope
cld
mov
xchg
xchg
jp
or
push
xchg
call
xor
iret
test
repnz
(bad)
jbe
mov
pop
sbb
pop
shr
sbb
xchg
scas
adc
mov
jg
pop
mov
fmul
in
out
mov
mov
jp
lgs
cld
pop
and
add
(bad)
out
sbb
std
mov
outs
repz
call
cmps
lods
pusha
inc
(bad)
iret
cdq
out
pop
les
stos
popf
rcl
ret
pop
sub
mov
adc
jmp
mov
into
mov
push
xor
pop
stos
pop
mov
xchg
mov
retf
pop
sbb
repz
sbb
sub
jmp
xchg
xchg
repz
pop
mov
mov
adc
jp
out
pop
push
es
in
adc
lods
rcr
mov
xor
mov
cmp
leave
js
xchg
adc
test
jecxz
or
rcl
js
inc
pusha
out
inc
adc
jno
out
push
(bad)
mov
cmps
cmc
popa
out
cmc
jnp
pop
push
dec
rcr
cmps
aaa
add
mov
xchg
jge
frstor
mul
and
js
cdq
imul
push
pop
mov
xlat
sub
retf
jmp
fwait
and
xchg
je
shr
mov
sub
inc
in
mov
int3
in
dec
dec
jne
cmp
or
ja
rcr
mov
int3
mov
pop
dec
jb
mov
stos
mov
aas
call
arpl
pop
ins
fsubp
lock
or
xor
fs
clc
jp
jne
inc
dec
out
xchg
aas
pop
jnp
pusha
lea
xchg
inc
mov
lea
out
ret
shl
stos
mov
push
mov
pusha
(bad)
fbstp
push
sahf
loop
cmps
lahf
lods
or
sub
shl
cmp
sub
cmp
mov
dec
loopne
or
into
mov
test
xchg
mov
and
cmp
fstp
sbb
ror
sub
and
(bad)
aad
lock
cld
js
mov
dec
xchg
xchg
xchg
sbb
jbe
or
adc
dec
cmp
pop
in
dec
mov
loopne
fbstp
call
xchg
idiv
(bad)
mov
fs
pop
hlt
leave
mov
mov
sub
cwde
add
in
cmp
cmps
es
pop
ret
das
shr
push
cdq
test
in
jns
ffreep
push
or
into
and
pop
mov
xchg
ficom
rcl
stos
cwde
adc
repnz
fsub
rcl
cld
dec
pop
inc
pop
cmp
movlps
fidivr
xchg
jno
sub
retf
scas
jns
repnz
xor
nop
xchg
dec
cmps
xor
out
rcl
retf
inc
(bad)
dec
inc
mov
stos
out
cld
pop
lods
inc
aaa
add
sbb
outs
pushf
mov
lods
lea
lock
and
push
pcmpeqd
mov
dec
or
mul
or
in
mov
or
add
xchg
mov
dec
mov
ds
scas
inc
xchg
aad
cmp
and
gs
movs
test
add
mov
fnstsw
mov
xor
push
shl
jle
repz
pusha
mov
enter
mov
idiv
push
push
push
ss
add
stos
ror
pop
dec
retf
push
lds
push
mov
ss
cmp
nop
lock
mov
sbb
(bad)
pop
test
leave
cwde
mov
push
(bad)
xlat
rol
push
jno
jbe
in
ret
adc
sbb
dec
or
ret
test
xchg
ja
sub
aad
xor
cmp
xchg
mov
jge
(bad)
(bad)
out
dec
jge
mov
adc
xchg
push
and
adc
repz
jb
or
je
cmp
ins
sub
push
outs
push
push
xchg
or
rcl
mov
sbb
fnsave
cmp
xlat
fild
dec
clc
adc
(bad)
fnstenv
mov
ret
xchg
xchg
fld
push
and
and
xchg
or
jns
movs
out
call
jle
pop
pop
lahf
cwde
scas
sbb
not
xchg
jle
add
jge
sbb
out
xor
pop
inc
inc
jae
adc
imul
nop
mov
js
push
mov
add
test
mov
mov
popf
or
push
sti
jl
adc
test
hlt
dec
loop
mov
pop
push
or
inc
adc
aas
cld
or
aaa
out
movs
cmp
cmc
adc
mov
ja
jge
jns
addr16
dec
nop
pop
push
or
xchg
mov
inc
pop
jno
dec
mov
inc
rcr
jge
dec
cmp
icebp
arpl
shr
pop
jge
jo
cdq
shl
jge
cmc
outs
pop
jno
cmp
inc
rcr
hlt
rcr
mov
push
cmp
ss
retf
and
push
mov
scas
std
mov
add
loop
clc
ins
mov
add
xchg
jge
cmps
icebp
jne
or
add
(bad)
and
out
add
repz
imul
adc
repz
jmp
push
in
loope
outs
std
mov
sar
or
(bad)
push
cmp
cmp
loop
sub
xor
in
ins
mov
inc
jmp
and
jb
popa
(bad)
fpatan
cmp
push
rcr
loopne
imul
mov
mov
rcr
mov
int3
push
in
add
xor
jl
je
pop
xor
or
mov
aad
mov
cld
std
into
xchg
stos
dec
shl
fs
dec
loopne
sub
std
inc
dec
retf
rcr
test
and
rcl
sub
outs
push
mov
cwde
lods
sti
mov
jbe
sbb
or
or
sar
imul
cmp
cld
pop
(bad)
sub
xchg
or
int
pushf
mov
mov
jmp
mov
add
mov
cmp
lods
outs
sbb
add
cli
out
and
push
inc
imul
adc
leave
or
(bad)
mul
sub
sar
add
sub
shr
gs
fcmovu
in
push
sub
ins
inc
jecxz
arpl
or
cmp
outs
pop
adc
fdivr
xlat
mov
mov
lahf
adc
or
(bad)
jnp
sbb
push
jle
ss
jo
add
outs
lahf
or
jnp
dec
add
adc
adc
paddusw
(bad)
xchg
or
clc
pop
jl
xchg
mov
jnp
mov
lock
in
adc
idiv
lds
cmp
jmp
push
adc
push
mov
sar
or
push
mov
iret
push
cmp
pop
sub
sbb
cli
iret
es
int
lahf
inc
jmp
mov
fstp
shr
(bad)
ins
lock
rcr
lea
mov
cwde
and
adc
adc
dec
sbb
fst
cli
inc
sub
movs
aaa
pop
mov
pushf
lods
dec
call
push
hlt
dec
jge
and
mov
fcomip
mov
sub
mov
jmp
test
js
mov
int
fcomi
pop
cmp
inc
dec
xchg
pop
dec
cmp
or
shl
sahf
das
int3
adc
cli
call
sti
jg
push
je
mov
fbstp
test
cmp
clc
(bad)
sub
sbb
xor
push
pop
aad
es
test
fistp
adc
jle
inc
push
lahf
mov
xchg
jnp
cld
pop
loope
(bad)
shr
call
push
ss
push
pop
mov
imul
es
je
std
in
fwait
out
mov
rcr
ds
jb
pop
mul
xchg
stos
sub
push
int3
or
lds
in
push
jnp
aam
cmc
test
add
or
ds
pop
inc
mov
mov
les
xor
leave
sbb
scas
scas
jge
cmp
xor
xor
das
lea
popf
pop
sar
imul
loop
out
lahf
push
ds
outs
sbb
(bad)
cmp
add
adc
adc
mov
vpminsw
jae
add
mov
push
inc
xor
mov
inc
jg
pop
push
adc
adc
ret
push
sub
push
std
and
imul
cli
ss
dec
sub
dec
pop
adc
je
push
add
push
add
mov
sub
or
adc
loopne
lods
xor
mov
add
ds
and
sar
xchg
bound
sub
mov
repnz
out
pop
and
loopne
add
aad
(bad)
xchg
popa
cmp
aas
xchg
jg
ins
jb
adc
push
cmp
ret
cmp
fs
sti
rcl
movs
inc
xchg
dec
mov
fs
rcl
stos
push
enter
jmp
mov
adc
sub
call
jae
jmp
xor
aaa
jg
xchg
jl
xchg
sbb
je
inc
lock
rcl
mov
aas
xchg
cmp
mov
fs
int
xor
sbb
outs
int
movs
test
pop
add
jmp
add
retf
out
inc
outs
in
cmp
push
into
or
mov
xchg
(bad)
sti
enter
and
add
lea
dec
(bad)
stc
aam
scas
ja
mov
(bad)
test
lock
push
push
ss
das
sbb
fs
repz
xchg
pop
cmp
call
jno
fs
xor
(bad)
mov
je
cld
adc
sub
jbe
inc
scas
in
cmps
cmp
push
adc
add
ret
mov
stos
cdq
adc
xchg
jmp
add
into
jge
add
inc
ret
cmp
leave
movs
int
xchg
lods
popf
cld
jno
daa
pop
shr
cmp
retf
add
jo
stc
inc
and
xor
jg
push
cli
cli
mov
fsubr
mov
pop
repz
xchg
ror
push
jns
loopne
pop
das
xor
lea
mov
inc
push
cld
cmp
cli
hlt
sub
stc
aaa
shr
cmp
jge
add
ins
mov
mov
gs
push
cld
push
in
fdivr
sti
aaa
cmp
fldcw
lds
cs
sti
scas
add
cmp
data16
mov
ds
mov
xor
cmp
dec
das
adc
aaa
adc
mov
adc
arpl
test
push
adc
pop
pusha
sbb
(bad)
call
xchg
stc
pop
adc
and
stos
pop
mov
aam
jno
in
rcl
test
mov
inc
cld
xchg
sbb
inc
and
pop
mov
pushf
mov
xor
push
repz
es
jae
mov
pop
fwait
int3
sbb
scas
push
jae
test
push
(bad)
or
pop
cmp
adc
adc
aaa
fnstcw
mov
xor
and
jp
jne
sub
shl
jecxz
std
inc
mov
pop
addr16
pop
push
xchg
sti
xchg
pop
add
pop
xchg
sub
inc
add
cmps
inc
inc
jne
mov
in
rcr
(bad)
mov
inc
pop
daa
add
add
xor
pop
jno
pop
push
nop
jg
adc
sbb
jmp
cmc
pusha
es
jmp
xchg
mov
pop
out
adc
xor
cmps
outs
test
mov
shl
push
fs
lods
fild
fld
(bad)
xchg
dec
adc
xor
leave
movs
pop
jmp
mov
adc
cld
jns
dec
retf
fadd
stos
in
cmp
jp
mov
pop
push
outs
mov
(bad)
ds
adc
aad
mov
inc
fnstenv
push
pop
(bad)
push
mov
mov
retf
push
dec
sub
mov
push
or
sbb
sub
add
aaa
sbb
jge
mov
sahf
push
iret
je
sbb
jo
jge
fadd
ret
clc
int
dec
mov
and
fld
jmp
add
pop
mov
js
mov
pop
sar
leave
sub
imul
jmp
jbe
xchg
aam
dec
mov
jg
icebp
mov
add
scas
popa
fwait
dec
cdq
sub
push
xor
cwde
cs
inc
(bad)
fbld
inc
mov
and
call
xchg
jo
push
ds
adc
jge
in
xchg
xchg
test
jl
scas
xor
xlat
mov
aad
neg
(bad)
push
adc
or
ds
mov
push
dec
(bad)
inc
sub
push
aam
mov
jno
int
pop
xor
mov
jnp
les
pushf
add
in
shr
jmp
sbb
mov
in
dec
adc
sbb
mov
and
(bad)
jp
push
cmp
ss
nop
push
dec
loope
dec
das
push
retf
loopne
add
test
in
test
test
mov
adc
push
mov
js
jmp
fwait
sti
and
fwait
jbe
clc
and
xor
mov
fwait
rdtsc
shr
into
xchg
jae
pop
add
mov
pop
outs
mov
dec
rcr
sbb
aam
jl
cli
into
pushf
cmp
adc
push
imul
nop
mov
in
ror
mov
push
cli
mov
sub
fwait
jno
push
pop
sbb
adc
out
out
jecxz
add
mov
and
dec
sbb
bound
int
jecxz
mov
shr
push
cmp
les
ins
xchg
fdivr
or
xchg
sbb
xor
aaa
retf
or
outs
jo
cdq
int
inc
mov
jmp
add
les
dec
ins
jnp
not
hlt
xor
or
cmc
cmp
bnd
xchg
lods
je
pop
pop
ja
dec
test
inc
and
pop
aad
inc
in
cwde
fs
lock
repnz
push
xchg
pop
das
mov
lds
aas
stos
jb
adc
sti
add
push
shl
mov
pop
mov
dec
inc
lahf
pop
out
push
addr16
lods
rcl
or
mov
xor
shr
and
jae
add
xchg
dec
mov
jno
into
(bad)
into
xchg
js
iret
test
cmp
popf
xor
adc
adc
in
aam
pop
cmp
pop
adc
xchg
mov
dec
mov
ret
jl
lds
clc
fwait
push
dec
mov
call
pop
adc
sbb
mov
cmp
(bad)
sbb
mov
jl
mov
dec
sub
leave
cli
daa
js
jnp
xchg
jmp
ret
test
pop
(bad)
dec
cmp
jmp
jg
nop
fdivrp
daa
(bad)
sub
cmps
sahf
pop
push
sub
in
jns
pop
lea
(bad)
xlat
sub
push
aaa
loop
mov
mov
int3
mov
shl
jnp
retf
jge
or
add
cmp
jg
aas
push
jecxz
mov
inc
adc
out
pop
inc
add
xchg
and
cmp
xchg
mov
fnsave
aaa
pop
xchg
aad
xor
lock
pop
mov
jl
int
xchg
sub
push
mov
dec
push
aas
xchg
mov
mov
(bad)
sub
and
imul
sbb
or
int3
je
leave
fadd
cmps
cmc
adc
pusha
fwait
and
scas
imul
int
push
ret
mov
fcomp
cdq
sbb
mov
pop
sbb
or
or
scas
jne
inc
mov
arpl
xchg
aad
sbb
xchg
push
std
push
aam
les
je
sahf
or
jmp
repnz
sbb
and
sahf
push
mov
retf
jne
rcl
sbb
push
fistp
bound
dec
mov
push
mov
mov
stos
aas
scas
retf
sbb
inc
xor
jmp
ja
out
in
in
sub
lock
pop
push
bound
push
stos
int
push
sbb
adc
push
call
fimul
mov
and
cmps
data16
cmps
out
pop
call
inc
lods
fld
mov
imul
outs
cli
and
dec
cli
inc
lods
stc
add
(bad)
arpl
cdq
ins
aad
push
add
or
outs
xor
outs
test
sahf
popf
sar
mov
sar
and
xor
sub
pop
fidivr
push
adc
mov
mov
ss
retf
idiv
pusha
int
bound
in
adc
cmp
in
cmp
push
shl
sar
mov
xor
xchg
push
(bad)
out
je
sar
out
xchg
dec
or
xor
mov
hlt
(bad)
dec
gs
mov
cld
or
push
xor
popf
jmp
dec
ret
(bad)
in
push
or
in
cmp
xchg
rcr
mov
pop
add
cs
movs
or
fucomip
cmp
mov
mov
inc
pop
adc
iret
mov
icebp
or
inc
stc
pusha
or
pop
push
inc
cli
push
fbld
push
outs
mov
ss
dec
xchg
mov
xchg
fucomip
lods
shr
xor
shl
es
lods
xchg
cmp
pop
jb
lods
xchg
jmp
xchg
int3
mov
mov
rcr
loopne
out
dec
sbb
clc
std
sub
adc
inc
adc
inc
adc
mov
push
jne
ds
jge
inc
outs
movs
mov
cli
and
scas
fucomp
dec
and
inc
pop
(bad)
mov
mov
(bad)
fcmovnbe
in
scas
xchg
xlat
aam
xlat
add
(bad)
cld
ret
cmc
fistp
imul
and
cmp
xchg
imul
pop
loopne
sti
out
iret
dec
dec
leave
jb
mov
mov
test
mov
int3
leave
jge
add
pop
addr16
cld
or
(bad)
popa
cmp
mov
cmps
jb
rol
cmps
push
mov
xlat
and
push
jle
xor
(bad)
ficomp
lods
jo
and
mov
mov
hlt
xor
xchg
add
pop
cmp
jo
inc
mov
aaa
call
add
push
cmps
arpl
add
push
sub
movs
loop
mov
loop
imul
rcl
inc
sub
pop
fs
or
xor
inc
cwde
call
and
dec
dec
in
jnp
fwait
js
xor
inc
xor
jae
mov
in
xor
push
cmc
loope
sbb
cmps
and
cmp
push
dec
popf
outs
retf
sub
nop
std
cld
mov
jecxz
das
push
mov
mov
imul
adc
pop
jno
sub
mov
xchg
inc
es
push
add
or
das
test
cmp
inc
out
and
xor
dec
movs
adc
fild
adc
inc
inc
cli
mov
popa
std
aad
aam
or
and
cmp
outs
lahf
mov
imul
int
sub
xchg
jnp
pushf
or
or
or
pusha
stos
(bad)
test
iret
in
cmp
dec
lahf
cmps
adc
(bad)
enter
scas
dec
sbb
or
sub
shl
int3
sub
pop
xchg
loopne
inc
cld
and
daa
add
into
lea
xchg
pop
aas
mov
iret
in
sub
repnz
and
int3
sbb
jne
xlat
outs
cmps
add
cwde
aas
mov
dec
jo
ror
bound
dec
mov
fdiv
(bad)
fldenv
pop
nop
adc
push
sbb
mov
lock
std
pop
pop
xchg
mov
pop
and
test
jae
mov
bound
mov
cmp
jecxz
dec
jae
push
test
or
xor
inc
jnp
mov
in
jle
jmp
mov
ss
inc
inc
test
and
mov
lahf
(bad)
xchg
push
cwde
test
mov
lahf
fstp
and
jne
int3
sbb
cmp
push
fimul
mov
cmp
fist
in
push
sbb
push
cmp
jmp
push
arpl
out
test
popa
mov
dec
iret
push
mov
cmp
xchg
outs
test
push
adc
add
jbe
fistp
add
mov
cli
out
dec
movs
in
paddsb
pushf
jl
scas
or
and
out
(bad)
jle
jns
or
in
rcl
xchg
push
add
xchg
cmp
sar
pushf
jl
pop
xlat
mov
jle
inc
out
jle
je
xchg
or
cmp
adc
iret
xlat
outs
adc
and
jg
add
(bad)
mov
mov
sub
shr
cld
popf
or
jno
je
rcl
and
sti
push
into
pusha
dec
sbb
mov
sbb
ss
xchg
retf
dec
cli
xchg
add
enter
mov
int3
xchg
mov
adc
jle
(bad)
test
outs
out
(bad)
not
test
sbb
mov
and
into
test
adc
rsqrtps
jl
aad
(bad)
shl
lea
addr16
arpl
push
inc
xchg
inc
sbb
retf
jle
fwait
mov
push
and
or
jl
mov
pop
xchg
jmp
scas
test
ins
or
bound
mov
imul
je
sub
cwde
shr
jne
mov
loopne
les
mov
inc
jb
push
add
cdq
adc
or
ficomp
and
add
add
jl
push
addr16
push
stos
sub
inc
jnp
pop
jnp
sti
sub
mov
scas
nop
(bad)
mov
loopne
fs
in
mov
xor
(bad)
or
xchg
iret
add
(bad)
sti
sub
ficom
xchg
xchg
jns
inc
add
mov
movs
out
jmp
adc
mov
imul
xlat
jne
push
fcomp
rcr
mov
xchg
les
lock
adc
mov
(bad)
out
xlat
seto
nop
cmc
push
push
or
push
std
jno
jns
and
inc
push
call
jmp
jecxz
jg
js
jg
loope
into
and
add
cmp
sbb
ret
sub
mov
cmp
inc
hlt
mov
mov
cs
aam
xchg
imul
jns
popa
xchg
mov
inc
sub
sbb
out
daa
xchg
add
or
ins
imul
sub
mov
sbb
push
int
mov
inc
icebp
pop
pop
in
cmps
pushf
ins
int3
inc
mul
retf
ficomp
xchg
mov
movs
cdq
aad
bnd
push
xchg
mov
dec
pop
pop
js
push
xor
popa
shl
bound
or
shl
scas
call
(bad)
mov
imul
nop
xlat
int3
or
and
mov
dec
xchg
jl
or
jno
cwde
rcr
in
sti
pop
add
repz
outs
lea
stc
xchg
(bad)
xor
jg
imul
or
mul
sbb
popf
cmc
cmp
and
sti
int
les
inc
or
dec
inc
sub
shl
sub
inc
imul
mov
(bad)
fcomip
cmps
push
xor
sbb
xor
xor
test
mov
pop
not
jns
jns
jae
fst
jmp
ss
lahf
test
mov
pop
or
jge
out
popf
dec
sahf
into
scas
imul
stos
loope
adc
std
ds
mov
fistp
jae
mov
int3
ins
inc
mov
repnz
or
mov
shl
push
call
ret
imul
pop
or
push
inc
int3
or
jnp
sar
inc
test
stc
shl
pusha
add
(bad)
enter
xor
daa
or
sti
xor
cmp
mov
mov
or
cmp
fnstcw
pushf
out
xor
mov
fild
das
clc
push
inc
je
push
push
das
jmp
mov
xchg
push
lods
loopne
fcom
lock
jmp
mov
adc
das
movs
ret
xor
add
or
inc
lea
repz
popa
xor
das
(bad)
push
add
fbstp
adc
jno
addr16
adc
repnz
imul
cmp
int3
mov
add
test
xchg
test
xchg
mov
(bad)
call
push
xchg
xchg
mov
mov
addr16
xor
rcr
scas
cmp
iret
pop
ret
or
or
or
neg
sti
aaa
jno
push
imul
cs
dec
hlt
stos
jae
push
jge
cmp
test
enter
xchg
adc
test
jb
and
gs
shl
sbb
call
lds
es
movs
nop
jp
add
and
pop
ror
lods
and
fucomip
and
dec
or
out
ins
stc
xchg
xchg
cmps
mov
mov
add
imul
into
dec
or
xlat
(bad)
out
jge
xchg
sub
cmp
adc
pop
mov
xchg
cmps
ds
ins
nop
inc
add
or
or
arpl
in
ret
fnstsw
pop
pop
push
xor
mov
inc
or
dec
fmul
inc
out
jnp
jg
addr16
and
std
mov
inc
mov
sbb
pop
test
sar
pop
or
inc
ror
mov
pop
mov
and
and
(bad)
ds
shl
mov
mov
pop
sbb
mov
ss
jmp
lock
cmp
aad
mov
xchg
sbb
or
add
inc
sub
aaa
and
mov
sahf
push
mov
das
outs
std
pop
and
xor
sub
(bad)
sbb
push
outs
mov
or
fistp
jle
in
test
popa
das
or
or
shl
sbb
sbb
fucomi
fstp
inc
sub
movs
jmp
mov
loopne
sti
xor
mov
mov
inc
or
gs
std
inc
add
pop
push
mov
push
out
inc
scas
xor
mov
pop
sbb
jle
gs
ins
mov
cmp
stos
pop
pop
adc
sbb
mov
cmp
cmp
or
lods
(bad)
rol
aad
xlat
mov
scas
out
adc
cmp
stos
sbb
mov
lods
cmps
add
jns
dec
xor
imul
adc
pop
retf
and
cmp
add
push
retf
cmp
ds
into
retf
fcom
adc
cs
adc
in
xchg
das
(bad)
and
lock
inc
add
inc
iret
mov
inc
es
das
sub
fldpi
loopne
xor
mov
add
sub
mov
les
cmps
lea
push
lods
in
cld
push
push
addr16
sbb
out
xor
mov
inc
add
dec
call
push
stc
scas
push
mov
or
cmp
dec
adc
adc
daa
js
rcr
jmp
pushf
repz
imul
push
add
js
jno
ins
out
call
jle
cmp
pop
(bad)
push
pop
aas
shl
pop
scas
out
mov
inc
dec
cwde
out
adc
jne
sbb
pop
xor
and
fnstsw
idiv
mov
mov
iret
dec
lods
cmovle
mov
outs
es
mov
and
xor
dec
fs
sub
into
sub
dec
mov
fdiv
mov
sbb
inc
mov
scas
pop
jno
mov
jnp
(bad)
pushf
sbb
jge
sbb
xchg
lock
sti
adc
out
fsubr
and
ins
call
int
not
dec
test
inc
push
(bad)
outs
lods
test
lods
test
or
retf
jecxz
ret
inc
ror
jae
cmc
xchg
dec
add
inc
jns
add
pop
arpl
mov
sar
(bad)
jae
lds
inc
jmp
out
push
jns
sbb
mov
mov
mov
xor
dec
pop
int3
jmp
mov
movs
inc
or
pop
sub
shl
cmc
xchg
sub
loopne
xchg
jbe
ret
pop
(bad)
fst
mov
xor
neg
ins
jbe
je
and
dec
fisub
or
(bad)
pop
xchg
adc
call
in
add
fcomp
jle
popa
inc
ret
adc
jge
xchg
stos
(bad)
rcr
inc
mov
shl
mul
pop
daa
xchg
xor
add
push
fxch
pop
shr
test
cmp
icebp
leave
loop
adc
inc
dec
dec
cmp
ins
dec
mov
and
xor
sbb
addr16
jns
cld
push
mov
mov
ja
stc
clc
and
out
in
add
scas
mov
es
sar
jle
cld
fmul
inc
mov
pop
cmp
mov
pusha
aad
arpl
iret
xor
or
and
popf
into
adc
dec
jg
sti
dec
mov
dec
push
xchg
iret
cmc
in
fsubr
xlat
and
gs
bound
mov
enter
rcl
fwait
mov
push
rcr
jns
fnstenv
mov
rcr
lock
mov
pop
cmps
lea
int3
(bad)
jo
ret
inc
add
pop
(bad)
dec
lods
out
in
inc
stos
std
js
cmps
jbe
aam
lds
outs
cld
push
nop
cmp
hlt
push
or
cmp
add
ins
push
dec
push
not
xor
clc
pop
jnp
jmp
xor
cmp
(bad)
dec
repz
add
aam
inc
shl
or
push
mov
ret
mov
xchg
jnp
(bad)
fistp
mov
sbb
loop
es
outs
add
fdiv
adc
and
add
loope
call
(bad)
gs
or
inc
pop
repnz
and
pushf
sahf
sbb
xchg
pop
inc
shl
xchg
and
int
jae
cs
jmp
mov
or
adc
movs
ds
stos
sbb
sub
push
xchg
push
push
pop
stos
repz
cmps
aaa
popf
add
cwde
cli
or
push
add
xor
or
iret
add
push
imul
cmp
mov
cli
enter
nop
je
(bad)
in
test
adc
or
into
jne
dec
mov
sbb
mov
mov
pop
xchg
out
xor
cmp
and
adc
addr16
pop
aaa
push
ss
add
adc
call
add
mov
(bad)
aad
inc
mov
ins
js
sub
mov
or
jb
lea
ins
call
adc
ret
sbb
mov
xchg
cmp
pop
dec
leave
or
sahf
push
pop
xor
pop
xchg
fs
jnp
mov
pop
mov
mov
pop
(bad)
in
and
dec
pop
clc
sub
stos
or
clc
fwait
mov
pop
shl
stc
cmp
cs
pop
sbb
out
sub
popa
inc
(bad)
(bad)
jbe
sub
dec
jb
or
inc
mov
ins
mov
mov
mov
nop
retf
jle
retf
div
push
mov
fcom
or
add
out
jne
jo
cld
add
mov
fld
frstor
popf
movs
leave
popa
cmp
cmp
push
jp
dec
fwait
inc
push
push
xchg
jo
enter
ja
sete
mov
cs
inc
addr16
fsub
ins
mov
pop
outs
jecxz
cmp
push
mov
cmp
idiv
push
pop
or
xchg
mov
jns
adc
mov
fs
cmp
retf
stos
stos
cs
mov
popf
fadd
je
in
mov
cmp
bound
mov
scas
clc
sbb
mov
loope
dec
gs
push
and
fcmovnu
std
cmp
inc
add
idiv
aam
nop
cmp
add
std
xor
sbb
or
push
jl
fdecstp
jno
xchg
out
std
outs
jg
inc
pop
mov
cmc
dec
mov
rol
sbb
imul
xchg
aam
dec
mov
not
xor
scas
xlat
loope
popa
retf
push
jnp
push
jbe
retf
hlt
mov
xchg
jae
mov
cmc
mov
cmp
pop
mov
cld
js
mov
leave
sti
(bad)
jns
and
sti
adc
or
pop
fisttp
xchg
jl
mov
(bad)
data16
mov
ds
push
pop
lock
mov
mov
ret
retf
data16
sub
outs
dec
xchg
push
pop
je
cmp
imul
add
cmp
loope
dec
ds
cmp
cmp
push
add
(bad)
mov
cmps
xchg
mov
in
aam
push
push
and
push
and
mov
js
inc
jae
pusha
aam
sbb
adc
add
test
mov
pop
repz
pusha
adc
aaa
adc
add
imul
lods
aas
(bad)
js
mov
leave
dec
sub
and
mov
arpl
mov
mov
adc
pusha
mov
cmp
jmp
mov
xchg
test
add
pop
xor
aam
and
ret
jbe
add
push
lock
lods
gs
retf
movs
in
(bad)
hlt
xchg
cmp
loop
retf
sub
je
jp
std
movs
inc
sbb
sub
inc
hlt
sub
mov
push
and
in
xchg
push
mov
push
in
and
scas
mov
cmp
mov
aam
scas
lea
xor
out
jl
push
pop
sub
sub
mov
(bad)
push
dec
inc
mov
(bad)
out
push
dec
jno
in
xchg
push
sahf
imul
fcomp
xchg
jecxz
and
sub
fsub
ror
sar
or
mov
dec
je
pusha
adc
aad
pop
int3
mov
and
stos
ret
push
lods
push
mov
mov
pop
test
adc
cwde
cdq
sahf
push
mov
xchg
test
jge
fnstsw
jle
and
adc
dec
mov
dec
mov
ss
push
xor
movs
mov
pop
les
ror
in
inc
je
(bad)
jg
fs
adc
push
loope
jns
jle
cwde
test
mov
fadd
jo
hlt
sub
ins
jb
inc
xchg
sbb
vmovdqa
fidiv
push
pop
mov
mov
das
test
les
push
fisttp
push
sub
xor
pop
mov
sar
call
(bad)
inc
jp
imul
repnz
pop
retf
mov
mov
xor
fimul
pop
or
or
or
mov
jne
rcl
pop
pusha
push
add
rcl
dec
ja
ret
inc
(bad)
jae
lock
(bad)
jl
stos
xor
div
(bad)
ret
icebp
fmul
push
iret
stc
mov
ins
jno
fadd
sbb
clc
pop
cmps
fcmovnu
aaa
mov
inc
(bad)
and
lods
rcl
mov
cmp
and
loop
mov
sub
fistp
and
in
add
cmp
push
jmp
or
jbe
ss
stos
add
inc
mov
int
xchg
mov
push
add
fcom
push
call
pop
cmp
imul
jno
jb
add
inc
sbb
mov
push
xor
and
pop
xor
dec
sti
dec
cmp
push
add
xor
lea
mov
bound
into
xor
xor
mov
mov
out
and
(bad)
sub
xor
das
xor
ja
inc
jns
cmc
nop
popa
mov
test
gs
mov
ins
push
or
xchg
shl
rcl
pop
adc
aad
push
popf
aad
out
adc
and
daa
out
iret
ins
push
les
push
cmps
push
fimul
pop
cmc
xchg
push
pop
es
dec
test
add
rcl
sbb
xlat
jo
or
jae
and
bound
retf
and
mov
or
(bad)
das
jb
dec
push
mov
in
vcvtpd2dq
popf
shl
xor
sub
clc
pop
rol
xchg
(bad)
mov
data16
push
loope
xchg
lock
mov
rol
fnsave
mov
ja
mov
cmp
lods
xor
mov
ds
and
dec
ret
inc
das
dec
test
cwde
outs
dec
mov
lds
pop
fisttp
imul
sbb
xchg
ret
xor
mov
das
xchg
mov
push
xor
cmc
les
call
std
jg
mov
xchg
aad
into
pusha
mov
(bad)
dec
inc
push
(bad)
mov
xchg
stos
mov
ds
mov
push
sbb
in
fst
fadd
xchg
loopne
mov
pop
inc
jmp
dec
cmp
inc
sahf
(bad)
test
mov
nop
inc
(bad)
mov
jne
mov
jno
out
pop
imul
retf
sbb
cmp
or
jns
mov
mov
in
mov
jle
or
mov
dec
or
movs
sub
and
lahf
lahf
fs
cmp
shr
mov
cmp
cmc
nop
int3
(bad)
cmps
cmps
mov
jno
data16
rcr
mov
repz
(bad)
mov
dec
sbb
inc
sbb
dec
fwait
cld
fwait
and
leave
movs
cmp
adc
std
in
push
repnz
dec
fst
aam
cmp
dec
ins
lods
sub
and
mov
pop
popa
in
ret
push
mov
mov
cmp
adc
mov
pop
aam
inc
jmp
int3
neg
cdq
push
push
jnp
enter
clc
dec
out
movs
cmps
or
arpl
or
inc
mov
add
(bad)
jno
lock
retf
aam
ds
lds
xchg
sbb
mov
fcomp
jmp
jge
jmp
cmp
jl
sub
lods
je
inc
call
jb
cmp
jg
cmps
adc
dec
jg
movs
movs
push
xchg
out
cdq
pop
pop
scas
or
mov
out
adc
cdq
cld
addr16
imul
adc
cmp
sub
ret
push
jp
xor
mov
fcmovbe
icebp
push
and
adc
and
rcl
ret
mov
mov
pop
icebp
pop
out
(bad)
outs
dec
leave
scas
xor
movs
es
mov
or
mov
cli
loop
sar
pop
jp
ficomp
pop
cmps
call
inc
dec
fisubr
sbb
addr16
cdq
rcl
int
jge
and
xchg
es
aaa
jbe
xor
ret
cmc
retf
lods
push
add
loopne
das
and
aaa
cmps
jae
pusha
cmps
(bad)
loope
push
call
retf
jmp
pop
fild
dec
ja
inc
sub
add
repz
imul
mov
test
jbe
rcr
cmp
mov
call
icebp
mov
lock
jnp
outs
fsubr
emms
inc
das
mov
mov
mov
lock
fadd
mov
inc
dec
sbb
addr16
xabort
add
cmp
mov
jbe
(bad)
adc
jns
inc
cmp
add
fs
inc
push
jmp
push
sbb
jp
(bad)
(bad)
xor
hlt
out
inc
dec
or
sbb
sub
cmp
call
call
xchg
push
xor
aad
lahf
dec
cmp
cmp
es
sbb
mov
(bad)
(bad)
daa
add
jnp
pop
add
imul
fidiv
push
mul
lods
aaa
popf
ins
inc
xchg
retf
iret
and
and
rol
ss
mov
xlat
(bad)
js
inc
test
retf
pop
mov
dec
xchg
and
(bad)
adc
nop
fistp
inc
fadd
add
cmp
add
mov
sti
push
mov
sbb
mov
bound
sbb
dec
lods
mov
mov
mov
mov
inc
out
adc
cmc
dec
jno
fdivr
mov
fldenv
mov
dec
call
push
out
ret
xchg
and
mov
pop
adc
push
or
mov
mov
in
sahf
lods
mov
stos
fidivr
retf
push
or
scas
add
pop
jae
stos
pop
mov
pop
mov
cld
outs
aas
dec
sub
imul
pusha
stos
test
adc
ins
mov
sbb
fstp
adc
cmp
rcr
mov
dec
jge
lea
cmps
xchg
clc
retf
push
mov
cmc
arpl
loopne
and
out
inc
(bad)
pop
out
inc
fild
mov
pop
test
and
sub
int
sbb
adc
outs
adc
push
iret
add
data16
repz
sti
outs
adc
jb
xchg
jl
jmp
and
lahf
fld
nop
cmp
pop
pop
(bad)
sub
mov
fiadd
rol
pop
add
outs
sbb
jo
dec
or
js
jne
or
mov
mov
mov
mov
push
rcl
out
ret
call
and
lds
ds
pop
jge
pop
fucomp
mov
popf
mov
and
test
dec
div
push
ja
retf
xchg
jns
fiadd
mov
lock
and
cmp
add
and
jmp
push
in
lahf
or
cmc
scas
mov
cmp
xor
and
adc
push
das
xor
jae
pop
in
pop
pop
imul
push
mov
ds
imul
sbb
(bad)
sbb
adc
mov
and
sub
in
pushf
inc
inc
inc
add
ror
sahf
mov
mov
sbb
dec
fwait
adc
mov
push
pop
and
daa
xchg
cdq
fbld
daa
in
dec
aam
stos
cmps
(bad)
(bad)
(bad)
jns
js
(bad)
dec
pop
jp
jge
xor
mov
xchg
ret
xchg
mov
dec
ret
pop
aad
mov
jne
push
or
pop
les
pop
and
imul
push
lds
out
pop
inc
popf
sub
add
cmp
lea
pop
int
or
scas
add
pop
and
test
fisub
and
mov
mov
int3
imul
or
mov
inc
out
(bad)
or
out
pop
add
inc
jl
int3
cld
scas
pushf
loope
clc
jg
jge
mov
pop
xchg
mov
xchg
shl
dec
mov
sbb
sbb
(bad)
jp
ins
adc
std
pusha
dec
popf
ror
ja
push
sbb
jp
test
shl
jno
pop
ja
iret
mov
cmp
(bad)
mov
fisubr
movs
pop
retf
ret
in
in
out
pusha
cmps
(bad)
adc
mov
and
retf
xchg
out
xchg
lds
jnp
and
mov
push
push
mov
scas
adc
mov
lahf
jmp
mov
or
outs
ins
mov
clc
cs
mov
not
or
bound
cmp
mov
aas
inc
cld
popa
ret
dec
mov
lods
push
pushf
sahf
shl
push
call
jl
ins
xchg
sub
mov
add
mov
repnz
stos
cli
sub
add
les
pop
adc
pusha
fwait
sbb
gs
dec
push
or
sub
sbb
xor
dec
lea
popf
or
ror
dec
jb
lods
jge
nop
cmp
mov
xor
dec
sbb
dec
daa
xchg
adc
and
dec
sbb
lahf
hlt
mov
loopne
fimul
(bad)
mov
adc
jecxz
inc
shl
jmp
leave
outs
imul
cmp
jbe
add
mov
call
jmp
mov
hlt
push
and
mov
mov
sbb
imul
sbb
repnz
push
dec
gs
ror
in
test
xor
pusha
das
mov
cdq
fstp
mov
stc
sub
jne
int3
pop
mov
adc
jne
mov
pop
imul
sbb
pop
pusha
ds
scas
or
jae
jno
movs
xchg
xchg
fwait
iret
and
xchg
pop
xor
enter
scas
out
mov
lahf
scas
(bad)
pusha
push
call
xor
out
and
movs
push
push
pop
into
pop
pop
pop
pushf
repnz
xor
pop
js
jge
jmp
inc
mov
sub
cmp
or
dec
sbb
inc
movs
mov
in
test
cmp
outs
push
xchg
fcmovbe
out
xchg
in
xchg
dec
rcr
sub
std
xor
ror
aas
jae
idiv
adc
ror
mov
int
push
jb
jmp
shr
call
sub
push
mov
inc
xchg
rcl
(bad)
cmp
push
rcr
jno
jo
loope
push
frstor
mov
enter
rol
push
add
or
jmp
gs
jne
jb
mov
sbb
dec
jns
jae
fsubr
and
retf
aam
loope
loopne
sub
jno
out
retf
mov
fs
ja
jnp
shr
ds
test
xor
cdq
mov
push
lock
mov
stos
int3
pop
popf
out
mov
bound
xor
inc
int
data16
std
ret
xchg
in
mov
in
leave
sti
cmp
enter
dec
mov
push
mov
mov
inc
sub
xchg
(bad)
out
and
test
mov
mov
in
xchg
fwait
sub
xor
add
mov
xor
xchg
addr16
mov
loope
xor
inc
push
retf
or
xor
sbb
addr16
jmp
jmp
push
mov
pop
mov
fadd
xor
xchg
pop
mov
inc
les
and
ror
xor
test
int
adc
popa
sti
hlt
test
sahf
and
jmp
sub
call
int
pop
clc
pop
mov
xchg
push
out
fnstsw
pop
mov
jns
xchg
sti
inc
daa
mov
jg
push
xor
aad
enter
sub
adc
inc
and
fstp
leave
cwde
inc
jl
jl
push
xor
jle
ja
lods
inc
jmp
push
fiadd
mov
push
mov
push
pop
stos
fwait
(bad)
stos
inc
sbb
test
rcl
mov
push
sti
neg
pop
iret
push
and
cmc
adc
cmp
test
pop
add
sbb
xchg
jo
cmps
xor
mov
mov
sbb
sti
mov
inc
iret
pop
add
outs
mov
jmp
jmp
mov
mov
ss
ds
add
dec
ins
mov
iret
ja
psllq
arpl
mov
dec
in
mov
int3
out
xor
and
cmp
cld
in
dec
push
fild
jecxz
pusha
add
jl
jecxz
cmp
call
xor
ror
xchg
inc
jge
mov
arpl
call
not
pop
cmp
int3
sbb
out
push
call
jmp
push
jnp
fcom
mov
call
sbb
pusha
push
(bad)
ret
xor
push
adc
cmp
mov
shr
cmp
dec
call
mov
add
inc
je
(bad)
repnz
push
mov
in
(bad)
rcr
mov
sbb
fldenv
adc
push
mov
(bad)
pop
pop
cwde
or
cmp
lahf
ret
(bad)
mov
les
pop
push
(bad)
push
out
shl
mov
cmps
mov
inc
leave
icebp
add
int
push
dec
jb
adc
ja
add
mov
sub
add
pop
dec
idiv
adc
pop
jle
outs
and
push
inc
fidivr
and
push
xor
xchg
(bad)
push
out
and
sbb
out
out
repz
lods
sub
mov
cld
stos
jl
sub
lea
jge
es
fild
sub
adc
mov
xchg
cmp
sbb
movs
call
jnp
jmp
movs
out
sbb
jge
mov
xchg
xchg
or
imul
neg
xchg
mov
sbb
sub
shl
adc
or
inc
and
hlt
stc
cwde
dec
push
adc
mov
scas
call
jmp
sbb
pushf
mov
lea
xchg
shl
add
int
sti
mov
imul
sub
jecxz
inc
(bad)
nop
or
and
xchg
loop
outs
ret
std
xlat
jecxz
js
mov
int
fstp
sub
pop
or
inc
stos
mov
ficomp
aad
or
cwde
aas
jmp
je
jb
gs
add
je
sbb
add
into
cmp
in
lock
push
jns
in
jno
sahf
and
xlat
sub
pop
es
sbb
xor
lea
sbb
push
sbb
mov
rcl
mov
cmovbe
push
sub
inc
ins
mov
shl
in
xor
loop
jecxz
xchg
outs
push
adc
push
sbb
pop
pop
fndisi(8087
mov
test
push
adc
mov
pop
mov
arpl
lea
xchg
or
xchg
jmp
sbb
mov
xchg
and
lahf
icebp
fdiv
mov
cwde
daa
push
adc
int
fmul
shr
cs
dec
jb
aaa
inc
mov
call
pop
dec
shr
jno
je
popa
push
aas
ins
mov
lock
or
xor
rcr
fistp
sbb
push
mov
(bad)
sar
hlt
out
mov
xchg
mov
stos
mov
fld
or
rcr
lods
mov
nop
jg
sub
int
ret
sub
pushf
mov
ss
pop
mov
sbb
push
mov
push
adc
std
jp
and
sbb
sar
mov
adc
shr
ror
or
(bad)
ret
push
or
xor
retf
in
push
into
mov
gs
push
das
fucomi
xchg
xchg
das
pop
cmp
dec
mov
cs
lods
stos
cld
dec
ss
pop
lahf
cmp
dec
xchg
and
test
mov
sub
jl
sub
mov
cmp
pop
ret
clc
mov
in
mov
xor
into
xchg
push
daa
das
or
push
inc
sub
push
inc
jb
pop
inc
dec
pop
xor
xor
ds
rcr
mov
sti
mov
(bad)
das
ret
mov
mov
cmp
mov
xchg
mov
out
imul
push
ins
xchg
(bad)
xlat
jecxz
mov
lods
mov
cmps
(bad)
jl
mov
movs
leave
jle
add
mov
aad
imul
(bad)
enter
add
out
fdivr
cmp
adc
out
cmc
mov
sub
hlt
sub
add
add
inc
pushf
or
bnd
mov
add
jae
dec
add
imul
mov
fcom
dec
push
(bad)
xor
lds
daa
adc
sbb
jge
ror
cwde
or
and
lds
into
popa
and
enter
pop
clc
mov
adc
in
mov
mov
(bad)
cmp
mov
bound
sbb
sub
xchg
add
clc
or
stc
cmp
add
cli
int3
loope
and
ss
les
retf
cmp
mov
enter
popa
loopne
stos
vunpckhps
out
cli
xlat
cmp
out
xchg
and
push
fnstcw
sub
into
cmps
adc
mov
imul
imul
dec
inc
pop
dec
mov
ret
repz
hlt
cwde
jge
xor
mov
dec
movs
sub
inc
push
je
mov
or
sub
aas
pop
push
sub
lods
mov
je
mov
cmps
aas
push
push
adc
xchg
je
pop
sbb
sbb
dec
mov
jo
stc
mov
jge
mov
pop
xchg
xor
adc
mov
pop
addr16
fistp
xor
xchg
ret
and
(bad)
(bad)
cmc
clc
rcl
mov
push
iret
scas
mov
cmp
jp
ffreep
stos
(bad)
jge
mov
xchg
jg
retf
or
cmps
cwde
jb
or
push
mov
jg
push
in
add
and
rol
jnp
lds
mov
loope
mov
fninit
ret
sub
or
pop
jmp
fcomi
movs
push
add
test
icebp
repz
test
cld
dec
mov
subps
jb
int3
or
arpl
mov
dec
xchg
add
cmps
mov
xchg
sub
(bad)
push
ins
cld
sbb
mov
je
inc
cmc
stc
(bad)
push
repz
mov
inc
inc
aam
push
sub
mov
jns
enter
sbb
ins
fcom
inc
jb
mov
enter
outs
inc
jg
jl
mov
add
out
push
sub
mov
leave
or
add
push
icebp
mov
lea
mov
aaa
xchg
test
mov
mov
cmps
std
int3
iret
mov
cmps
out
push
sub
fidivr
(bad)
inc
ss
(bad)
push
fsubr
xor
int
add
sbb
cs
fist
test
jle
sar
adc
mov
cmps
shl
sbb
stc
dec
ja
jge
jg
mov
xor
add
jg
popa
out
aas
retf
adc
dec
aam
jbe
repz
cli
ds
out
stc
inc
test
fs
adc
or
outs
xlat
fcom
xchg
out
push
adc
aas
adc
ja
(bad)
popf
mov
out
shl
xor
sbb
jmp
gs
xor
retf
stos
(bad)
fist
push
push
test
ret
fs
or
hlt
dec
sub
push
sar
in
sub
mov
sub
dec
dec
jp
rcr
cmp
outs
div
mov
xor
(bad)
cli
inc
out
mov
clc
shl
pop
in
mov
pusha
js
das
scas
ror
dec
aaa
dec
inc
push
rcr
pop
in
dec
shl
xchg
mov
jnp
in
aam
or
mov
scas
push
push
(bad)
xchg
loop
or
mov
or
pop
push
test
stos
aam
(bad)
cwde
sbb
xor
retf
arpl
popf
inc
out
(bad)
sub
fisttp
xchg
sub
mov
cmps
setne
xchg
mov
mov
ret
push
or
(bad)
stos
xchg
ds
sahf
jge
mov
(bad)
dec
push
cmp
fsub
lds
dec
jno
sub
push
cwde
dec
call
xor
dec
js
xchg
sub
repnz
mov
inc
das
adc
push
mov
xchg
inc
adc
js
scas
or
mov
adc
stos
rcr
and
push
cli
movs
adc
pop
mov
dec
movs
inc
dec
cmp
stos
add
loopne
jno
hlt
pop
sub
jb
inc
pop
imul
mov
mov
dec
mov
outs
and
(bad)
inc
push
ins
fwait
jne
sub
nop
jecxz
inc
sub
or
movs
push
das
mov
fld
not
jp
jecxz
mov
enter
sar
gs
adc
(bad)
push
cmp
fisubr
sub
call
xor
loope
xor
and
add
mov
rcr
mov
adc
das
dec
xor
retf
ds
cld
mov
not
ins
sahf
out
cwde
pushf
addr16
adc
sbb
(bad)
lahf
pushf
sti
out
movs
shl
sbb
push
xor
push
nop
add
jne
sbb
pop
pop
ss
fbstp
jo
out
cwde
loopne
dec
fs
lods
sbb
jge
sbb
lds
add
add
adc
cmp
loopne
and
bound
sub
call
enter
mov
sbb
mov
fs
dec
cmps
mov
pop
and
xchg
cmp
(bad)
fst
daa
push
retf
bound
adc
mov
push
popa
shl
das
dec
addr16
ror
ja
addr16
push
push
inc
fild
lods
clc
addr16
mov
add
out
jg
dec
repnz
pop
rol
push
psllq
jl
(bad)
in
push
xchg
mov
lods
lods
xchg
dec
idiv
sub
ins
pop
sub
mov
loope
sar
scas
cmp
xor
das
xor
jle
push
mov
add
xor
jb
(bad)
retf
push
cli
mov
jbe
out
or
dec
and
repz
cs
cmp
gs
(bad)
cdq
mov
pop
add
ret
mov
and
mov
jl
rcr
cmp
nop
lds
cmps
and
imul
outs
cmps
mov
repnz
les
stc
repz
out
dec
hlt
push
cmp
js
pop
(bad)
inc
mov
movs
push
lahf
in
iret
out
inc
std
inc
cmp
repnz
jge
scas
xchg
loope
mov
mov
sti
dec
push
ficomp
mov
mov
(bad)
repz
jmp
ins
or
(bad)
and
jg
stos
mov
js
xchg
push
fwait
dec
mov
push
dec
leave
inc
das
jmp
sub
addr16
ja
mov
(bad)
mov
les
dec
lea
je
jne
pop
je
mov
adc
loop
pushf
popa
repnz
or
out
scas
add
retf
jns
imul
call
or
cli
pushf
cmpxchg
sub
mov
add
inc
push
add
fst
out
cdq
(bad)
pop
repz
test
mov
and
mov
pop
dec
and
call
push
jnp
fstp
push
mov
mov
aaa
mov
popf
mov
push
sub
jmp
mov
jb
ds
dec
lods
retf
xor
inc
ret
add
sahf
cld
jbe
xchg
inc
(bad)
int3
push
inc
inc
leave
mov
call
mov
stc
mov
pop
sbb
inc
js
sbb
ficomp
jl
mov
mov
imul
and
xchg
stos
sbb
mov
jecxz
inc
rcr
and
lods
rol
fadd
out
lods
inc
jbe
xor
add
out
sub
hlt
sub
leave
ficom
in
cld
jno
xchg
test
or
xor
clc
mov
and
cmp
or
test
fmul
pop
mov
ja
jmp
and
call
in
daa
gs
and
jp
and
push
jne
sbb
(bad)
dec
test
jp
std
out
xchg
packsswb
scas
mov
xlat
test
sti
bnd
(bad)
jmp
inc
push
sub
in
rcl
movs
retf
add
lock
ret
mov
cs
push
push
jno
and
dec
mov
mov
sub
lock
(bad)
std
sti
add
sub
jae
add
dec
sub
lahf
scas
(bad)
jno
mov
or
push
ins
rcr
sub
xor
ins
add
cmps
stc
aas
nop
out
or
mov
bound
xor
(bad)
jmp
push
mov
xor
sub
cmp
adc
jns
add
xchg
pop
(bad)
in
(bad)
aas
bound
lea
je
cmps
jnp
mov
push
jns
loope
out
xor
push
push
pop
pop
hlt
sahf
es
push
sub
jl
in
add
out
(bad)
in
sub
lods
pop
mov
imul
jno
test
outs
pop
mov
inc
inc
aam
mov
pop
push
mov
mov
aam
dec
mov
dec
mov
in
retf
or
and
std
push
in
push
mov
mov
xor
dec
xchg
out
jecxz
inc
movs
retf
outs
loop
movs
xchg
jne
jmp
and
push
ja
xor
outs
xchg
dec
jo
mov
sub
fisub
jb
add
xchg
std
sbb
jg
lahf
adc
ror
cli
jmp
scas
fwait
(bad)
ins
mov
mov
call
add
push
pop
push
gs
xor
cmc
aas
pop
xchg
add
fadd
and
dec
push
(bad)
(bad)
es
adc
ficom
pop
es
scas
jmp
add
push
fisttp
xchg
pop
or
inc
ret
fild
mov
dec
icebp
(bad)
or
out
sub
cmc
aaa
std
or
test
imul
sbb
jmp
out
pop
rcl
push
jb
mov
or
push
mov
and
iret
bound
js
je
shr
xchg
xor
push
mov
outs
xor
mov
sbb
loope
dec
dec
mov
test
or
sbb
adc
mov
lock
jns
imul
dec
push
mov
(bad)
mov
into
jmp
push
ins
add
mov
retf
pop
aas
xchg
jmp
in
(bad)
sub
mov
retf
mov
sbb
bound
cmp
dec
rcr
push
xchg
xlat
leave
adc
or
mov
pop
jmp
imul
add
pop
sub
cmp
inc
push
lods
xchg
cmp
adc
cmp
xchg
daa
push
pusha
or
mov
retf
push
les
ja
lock
jno
xchg
aas
mov
pop
stc
hlt
mov
addr16
ror
repnz
jle
mov
xchg
sub
adc
mov
or
(bad)
int
and
fwait
sub
cmp
fnstcw
popa
cmp
push
lahf
in
xlat
int
jnp
stos
jg
hlt
inc
fadd
inc
inc
and
inc
dec
loop
push
fimul
add
jno
repz
stos
aaa
movs
icebp
stos
icebp
jbe
push
loopne
daa
sbb
lahf
xor
mov
daa
push
(bad)
push
idiv
mov
es
int
mov
outs
fisttp
add
jae
scas
cmp
call
inc
xor
ret
cmp
mov
ret
cs
mov
xchg
dec
repnz
aaa
jnp
inc
call
push
cwde
ins
ror
pop
push
dec
mov
sti
(bad)
movs
test
dec
inc
les
xor
sbb
scas
scas
fwait
pop
mov
push
retf
fsub
fnstsw
push
ss
adc
(bad)
jmp
adc
mov
push
retf
push
imul
jl
add
xor
dec
mov
nop
add
maxps
out
loopne
mov
scas
mov
add
push
cmp
adc
retf
sbb
loope
inc
add
adc
xor
inc
or
inc
test
adc
jecxz
cs
jne
sti
jmp
mov
in
mov
scas
xchg
add
lods
retf
or
scas
dec
adc
cmp
mov
adc
gs
leave
mov
aas
fcom
mov
xchg
js
loope
xlat
fwait
and
push
nop
mov
mov
sbb
bound
sti
pop
add
and
test
mov
sar
enter
adc
sbb
iret
adc
dec
repnz
mov
inc
push
fidiv
std
inc
mov
out
gs
shl
jb
aas
push
pusha
call
jmp
pop
add
sbb
sub
inc
int3
aas
es
(bad)
std
dec
shl
in
add
xor
cmp
rcl
adc
sub
add
fcomp
shl
test
out
xor
fst
repz
add
lea
loope
fisub
cmp
ds
iret
js
push
into
out
js
pop
mov
(bad)
mov
xchg
dec
jg
mov
pop
test
xchg
or
nop
dec
scas
dec
cwde
mov
sar
lods
xchg
(bad)
sbb
jmp
sbb
mov
pop
(bad)
into
pop
add
pushf
loop
jb
test
cs
(bad)
into
mov
jge
int
popa
fwait
jecxz
add
jg
xchg
jl
dec
outs
ror
push
mov
push
xor
pop
inc
pop
fidiv
arpl
icebp
mov
gs
jno
cmp
cmovs
ja
adc
call
jne
pop
out
push
sbb
sahf
ror
jmp
mov
test
in
inc
inc
in
sbb
dec
lods
scas
or
dec
idiv
mov
shl
nop
repz
add
push
inc
inc
popf
pusha
xchg
jae
xchg
sti
pushf
fs
pop
ins
mov
cmp
jle
mov
dec
ja
data16
cmps
popa
mov
or
mov
mov
out
and
mov
rcl
gs
dec
or
std
cs
ror
xor
push
pushf
pop
mov
stc
out
mov
enter
jno
jo
adc
push
stos
icebp
outs
cmp
add
jle
push
dec
pop
cmc
pop
dec
rol
out
ret
dec
and
fcom
icebp
popf
pusha
and
dec
retf
fucomip
inc
cmps
fidivr
jbe
sahf
cmp
xor
iret
fcom
sbb
outs
rcl
imul
stc
loopne
out
stos
stc
mov
xor
cmp
ret
jne
aad
sti
mov
shr
fisub
fcmovu
std
jno
stos
mov
and
push
ds
out
push
(bad)
enter
push
mov
mov
std
pop
mov
pop
bound
sahf
mul
xchg
adc
stos
cmps
and
pop
movs
in
dec
and
inc
lods
mov
loop
cmp
inc
mov
aad
adc
jg
mov
push
and
sbb
ficomp
shl
pop
rcr
and
pop
cmp
mov
nop
inc
popf
aad
push
mov
or
mov
imul
stc
xchg
into
call
cmps
sub
aam
ss
inc
mov
mov
test
xchg
rol
mov
in
xor
daa
sbb
sbb
sbb
mov
pusha
fstp
sub
fist
pop
adc
mov
ds
mov
pop
sbb
xor
nop
fwait
lods
rcl
ret
pop
iret
push
sbb
mov
add
stos
pop
inc
dec
bound
nop
xor
sbb
add
jl
xchg
icebp
dec
(bad)
rcl
or
dec
ins
cmp
add
jmp
(bad)
cmp
dec
in
ins
mov
sbb
fist
push
ror
pop
in
js
ins
xor
lahf
pusha
les
mov
sbb
sbb
inc
or
mov
icebp
dec
popa
call
or
xor
jmp
inc
aad
push
cwde
push
repnz
ret
int
and
and
out
inc
call
cld
inc
leave
dec
xor
jnp
xchg
leave
ja
imul
std
sub
stos
fwait
and
mov
lods
xor
jg
retf
adc
and
test
repnz
mov
mov
push
lods
and
mov
mov
mov
mov
ins
loope
mov
(bad)
in
inc
test
div
xor
sbb
cmp
shl
lods
ds
cmp
xor
mov
ins
mov
push
cmp
ror
xor
pop
mov
fcomp
jge
push
xor
pushw
in
shl
stc
fiadd
(bad)
ja
scas
push
(bad)
mov
mul
push
btc
sub
push
mov
fwait
pop
cs
scas
push
xor
pop
(bad)
mov
jmp
imul
fdivr
mov
xor
repz
sub
xchg
or
test
aad
fstp
mov
test
int
aam
lahf
mov
fwait
adc
sub
jmp
xchg
and
and
(bad)
push
push
inc
add
mov
das
les
pop
jl
(bad)
sub
jge
clc
ret
xor
xchg
push
dec
push
ins
popf
add
scas
adc
aam
mov
cmp
fnsave
push
inc
add
inc
cmps
pop
sub
sub
int3
enter
sub
mov
adc
ins
js
aad
std
cmp
xchg
in
cmp
sub
push
clc
sbb
push
adc
movs
inc
loopne
sub
dec
mov
test
(bad)
fiadd
iret
mov
ds
pop
cli
adc
mov
in
sub
mov
sbb
mov
or
push
ins
lahf
popa
(bad)
cmp
out
jbe
out
popf
mov
je
ja
cmp
out
cwde
mov
clc
gs
inc
jo
in
xor
js
xchg
fucomi
adc
daa
jmp
push
xor
jg
pop
dec
in
mov
add
add
test
push
dec
pop
and
mov
fstp
call
daa
movnti
jae
add
sub
addr16
push
sbb
(bad)
adc
rcl
mov
cmc
call
pop
lock
int3
lods
ds
xchg
or
in
cmp
mov
lds
adc
mov
sub
ret
jge
inc
sbb
inc
push
push
adc
pop
repz
mov
inc
std
sbb
aam
push
jl
mov
adc
cli
out
mov
sub
xor
into
push
pop
sub
push
call
and
movs
scas
add
or
enter
and
mov
mov
xor
movs
mov
pop
repz
into
mov
sbb
fs
xchg
(bad)
cwde
mov
xor
lock
scas
cli
cli
mov
cmp
adc
out
xchg
push
icebp
retf
cmc
mov
popa
lods
sub
cmp
dec
into
adc
push
or
addr16
fs
int3
xlat
mov
or
sub
xchg
mov
inc
push
adc
popa
mov
dec
daa
outs
(bad)
mov
jbe
dec
cwde
push
leave
pop
in
pop
sub
cld
repnz
das
jns
fsubr
inc
cmp
pop
xor
push
stos
and
fistp
fdiv
add
dec
jp
ficom
dec
mov
adc
into
push
add
jno
stos
jnp
bound
sti
arpl
out
sbb
cli
sub
push
(bad)
fcomp
stos
lea
cmps
jb
(bad)
mov
sub
inc
lahf
jmp
scas
cwde
mov
call
inc
sbb
mov
jmp
int3
jo
jae
call
sti
fmulp
pop
gs
and
dec
(bad)
adc
lahf
js
lods
repz
loopne
inc
div
mov
jnp
out
aaa
push
add
out
sbb
mov
std
push
xor
fnstenv
add
and
pop
lods
(bad)
imul
inc
cmps
mov
or
jmp
push
sbb
push
sbb
xchg
push
mov
sbb
or
mov
jmp
fadd
and
rcr
sub
scas
push
sbb
aad
(bad)
aam
data16
and
pop
mov
push
mov
mov
sub
cli
dec
out
test
call
loop
pushf
enter
test
and
inc
mov
jne
lods
aad
pop
cmp
outs
loopne
and
xchg
pop
xchg
int3
cs
jnp
mov
mov
lds
mov
lock
or
ins
iret
ja
mov
lea
xchg
stos
adc
outs
or
in
dec
ret
je
push
jo
mov
adc
adc
(bad)
rcl
xchg
adc
sbb
mov
or
loopne
and
xchg
mov
loopne
push
ret
sub
mov
sbb
mov
xor
shl
dec
add
mov
or
xchg
cli
jns
adc
outs
scas
or
hlt
gs
mov
mov
jae
cmps
sub
clc
test
fimul
jg
pushf
sub
mov
adc
(bad)
adc
sub
xchg
(bad)
xrelease
pop
jno
les
cmps
mov
lods
jbe
(bad)
and
enter
or
pushf
cld
int
call
ja
mov
jp
and
out
mov
out
outs
cmp
pop
xor
js
jmp
push
fwait
in
pushf
fstp
ins
je
jg
repnz
mov
in
movs
sbb
xchg
dec
xchg
rol
cmc
call
loopne
push
repnz
push
ins
sbb
aam
fiadd
push
retf
shr
test
pop
push
retf
dec
cmp
mov
pusha
push
jg
push
mov
arpl
aas
xchg
loope
pusha
dec
adc
mov
out
out
repz
xor
clc
and
adc
pop
adc
push
jg
out
cmp
jg
inc
test
adc
movs
in
(bad)
into
adc
cmp
lods
dec
loopne
pop
xor
in
and
xor
ret
sub
xor
int
in
shr
in
add
sbb
push
fldenv
je
jne
inc
mov
push
(bad)
mov
cli
add
xlat
jnp
scas
out
mov
cmc
push
retf
mov
cwde
test
das
les
fwait
pushf
jl
cs
jcxz
sub
sbb
add
push
adc
nop
lahf
bnd
stos
jle
dec
stc
je
sub
popf
cs
loope
xchg
ror
sbb
xchg
leave
dec
cmps
sub
sub
xchg
mov
inc
loop
xchg
pop
stos
stos
dec
pop
ret
sbb
and
ds
and
outs
mov
xor
sub
xor
mov
sbb
shl
adc
jl
sub
jmp
inc
mov
mov
dec
out
adc
or
mov
ficom
adc
jmp
dec
mov
and
neg
jmp
popa
mov
mov
fild
dec
(bad)
js
xchg
mov
inc
jne
ins
loope
or
daa
sbb
sbb
idiv
lods
enter
nop
(bad)
sbb
mov
mov
fsubr
rcl
add
adc
cmp
jo
mov
pusha
mov
sub
add
push
fsubrp
loop
mov
gs
test
lods
or
sahf
iret
xlat
mov
mov
pop
les
int
lods
sub
out
les
enter
bound
gs
int
nop
fdiv
push
mov
repz
arpl
rcl
cmp
cmps
retf
or
xchg
cwde
dec
shl
loope
cwde
sub
out
mov
cwde
pop
push
cmc
(bad)
or
shr
lea
out
jmp
nop
scas
and
jbe
cwde
addr16
adc
movs
dec
and
rcl
test
loope
movs
fidiv
(bad)
repz
and
cmp
sbb
ins
jl
and
adc
enter
fist
sbb
stos
push
xbegin
sahf
leave
mov
lahf
in
lock
loope
jnp
push
jo
cmp
mov
out
repz
mov
mov
or
ja
mov
sbb
fsub
jbe
sub
sub
xchg
leave
push
fld
lds
mov
lock
and
push
dec
int3
lss
cmp
test
pop
arpl
scas
lods
push
loopne
(bad)
xchg
adc
bound
(bad)
inc
dec
jns
xor
xor
ret
or
mov
pushf
xchg
pop
popf
push
add
enter
(bad)
fst
xchg
push
push
(bad)
iret
cwde
out
adc
dec
inc
pop
cmc
adc
pop
ret
jns
test
in
dec
push
fnstsw
mov
jno
push
popf
rol
in
popf
fidivr
or
add
adc
mov
mov
in
lea
push
xchg
movs
ret
inc
dec
jge
dec
jo
call
inc
std
inc
jbe
mov
adc
ficom
pop
sahf
mov
push
mov
bound
mov
call
inc
inc
xlat
data16
adc
fwait
out
mov
add
mov
cmps
or
ins
ret
dec
jl
push
imul
cdq
sahf
mov
inc
mov
push
and
vandps
mov
scas
or
aad
loopne
pop
sub
xchg
dec
aaa
fldenv
mov
sahf
je
fild
pop
sub
enter
pop
loope
adc
in
scas
ins
loopne
ret
cmps
sbb
rcl
(bad)
les
mov
and
mov
pop
pushf
inc
add
dec
jle
push
xor
cmp
sar
mov
mov
or
ret
stos
jp
push
add
mov
xchg
jp
(bad)
hlt
pusha
fiadd
dec
sar
jg
xchg
iret
outs
mov
lahf
inc
jno
push
cmp
cdq
xor
adc
mov
in
or
movs
jecxz
fcmovnbe
push
cmp
mov
jecxz
mov
pop
push
arpl
cmps
and
jmp
add
out
loop
mov
pop
xlat
pop
movq
sub
fsubr
cmp
int
loopne
test
xchg
mov
xor
mov
cmp
inc
mov
push
sbb
jge
xchg
pop
cmp
push
repz
cmp
mov
in
rol
in
pop
lock
adc
stos
rcl
push
adc
xor
or
mov
mov
mov
push
jo
xchg
neg
int3
sub
xrelease
hlt
int
pop
jns
ins
jns
gs
jmp
mov
(bad)
fisubr
jp
retf
mov
lahf
jl
iret
ins
lds
sbb
mov
in
stos
pop
or
fcom
int
xchg
mov
push
xchg
pop
js
outs
ret
std
sub
lods
out
rcl
test
sub
cmps
adc
mov
push
(bad)
and
jnp
inc
pushf
jo
je
add
mov
inc
push
inc
sahf
fcom
xor
loope
call
push
cs
pop
test
or
xchg
jge
mov
lock
lods
inc
(bad)
add
jbe
add
pop
(bad)
aad
cmp
jmp
outs
not
mov
repz
mov
add
imul
(bad)
aam
and
dec
cmc
and
js
sbb
out
add
xchg
das
xor
fdivr
pop
pop
push
bound
inc
lahf
call
mov
and
add
shl
repz
in
repz
scas
dec
sub
mov
icebp
jmp
mov
call
mov
inc
scas
addr16
out
dec
outs
sbb
adc
iret
test
fcmove
jle
push
test
lock
jb
or
imul
sub
xchg
movs
xchg
ins
mov
lds
data16
xchg
xchg
pop
retf
nop
fadd
sub
jg
pop
add
jmp
int3
cmp
push
xchg
mov
lods
or
pop
ins
mov
js
es
xor
jbe
repnz
sbb
fild
jge
pushf
sbb
adc
cmps
jge
ja
cmp
and
xchg
mov
pop
inc
or
stc
popa
cmp
xor
xor
lock
inc
adc
rcl
mov
call
ror
mov
jo
inc
mov
pop
rcl
sbb
push
ds
clc
xchg
lods
adc
mov
lods
sbb
add
xor
dec
add
cmps
xor
out
or
aad
mov
sti
jmp
mov
call
jnp
cdq
xor
movs
xor
cwde
mov
add
lea
rol
sahf
cs
cmp
icebp
cmp
iret
push
cmps
sbb
inc
dec
ret
mov
pushf
jp
and
jne
icebp
lock
sub
stos
and
(bad)
bnd
dec
stos
cld
clc
mov
int3
test
test
inc
xchg
daa
lahf
lahf
dec
add
xchg
push
lahf
or
rcr
dec
mov
mov
dec
pop
or
outs
icebp
adc
or
(bad)
xor
mov
lahf
cmp
in
sbb
xchg
dec
pop
xor
rcl
hlt
xchg
dec
push
fdivr
add
fs
sub
push
pusha
and
test
adc
cmp
movs
scas
rol
das
adc
pusha
mov
ror
das
jb
xor
push
sbb
and
adc
popf
pop
mov
imul
shr
pop
cmp
mov
jmp
imul
pop
jecxz
pop
(bad)
(bad)
in
push
push
js
sub
and
call
jnp
or
mov
add
gs
sub
pop
in
pushf
movs
dec
inc
mov
inc
jbe
jns
mov
stc
jns
icebp
adc
cmp
and
jl
add
out
stos
not
mov
mov
dec
xchg
or
stos
ret
jbe
dec
xchg
adc
mov
cs
push
dec
jmp
dec
pushfw
and
lods
push
lock
xor
mov
lds
in
xchg
push
or
adc
xlat
mov
into
stos
jnp
shrd
lods
cli
fidivr
cwde
imul
test
push
shr
mov
sbb
cmc
es
xchg
(bad)
xor
push
jb
cs
fisttp
fs
dec
iret
sbb
lods
adc
outs
mov
arpl
ins
iret
ins
cmp
jb
push
or
mov
aad
fs
pop
push
sbb
inc
mov
dec
mov
jns
int
call
mov
mov
sbb
add
pop
addr16
ud2
and
jcxz
enter
push
ins
movs
mov
dec
in
int3
sub
cmc
test
xor
stos
jp
jnp
xchg
xor
jge
lock
xor
jns
fidivr
clc
sti
mov
aad
dec
and
gs
subps
sub
xor
inc
call
(bad)
jecxz
mov
mov
sahf
lods
call
sub
cwde
rcl
add
ret
sbb
jnp
dec
loope
or
mov
(bad)
push
mov
and
and
mov
movs
(bad)
mov
frstor
inc
and
jp
dec
leave
or
push
loopne
mov
ss
out
jae
adc
pop
sub
jmp
out
mov
xor
xchg
dec
sbb
sub
outs
xor
mov
xor
inc
pop
sub
fldenv
add
mov
push
pop
rol
inc
dec
lods
adc
push
add
adc
fs
stos
cli
xchg
sub
sbb
push
mov
xchg
out
aas
fs
xor
ja
outs
je
clc
xchg
push
cmps
cmp
inc
(bad)
sub
lods
es
jp
lock
loope
iret
jb
pop
pop
(bad)
xchg
rol
mov
push
(bad)
in
mov
sub
leave
rcr
cmp
into
hlt
push
pop
sub
(bad)
dec
jmp
js
lock
push
mov
mov
leave
scas
ins
fdiv
add
add
pushf
outs
icebp
mov
or
fist
mov
mov
adc
pushf
xchg
outs
add
outs
mov
pop
jnp
pop
sbb
enter
inc
xor
fiadd
addr16
lea
out
mov
arpl
js
iret
jnp
xor
xor
cs
rcl
cmps
add
jmp
cwde
div
lea
icebp
(bad)
scas
and
ret
mov
fdiv
pop
mov
xor
in
lock
jb
mov
fs
loop
mov
test
mov
scas
scas
popa
in
mov
sbb
jmp
jle
mov
enter
push
pop
xor
cdq
pop
pop
and
in
std
idiv
push
ds
pusha
inc
push
jbe
xor
iret
imul
xchg
pop
mov
cli
test
pop
push
jl
push
mov
adc
sti
inc
nop
push
nop
and
test
push
lds
mov
mov
push
pop
jmp
and
daa
shl
pop
mov
jb
aam
dec
xchg
fsub
mov
ds
jne
addr16
test
pushf
retf
shr
xlat
test
pop
sbb
(bad)
and
push
je
out
xor
mov
push
in
pop
sub
mov
dec
rcl
dec
cmp
mul
(bad)
loope
push
out
outs
jecxz
sar
retf
lods
pusha
stos
push
(bad)
lahf
sbb
(bad)
cwde
xchg
stc
and
cmps
xor
pusha
pushf
cmps
xchg
loopne
push
sbb
test
std
xor
dec
popf
jmp
mov
ss
repnz
push
sbb
out
inc
clc
shr
ret
pop
push
fidiv
inc
or
mov
(bad)
pop
adc
movs
std
mov
movs
daa
push
push
push
pop
sub
aam
cli
push
jle
inc
fdiv
and
das
add
retf
xor
dec
aaa
cmc
add
je
push
fsubr
pusha
jmp
ss
xchg
mov
cmp
jecxz
dec
imul
cwde
fwait
jae
pop
fistp
sar
test
mov
js
mov
movs
in
stos
stos
push
xchg
xchg
in
inc
aaa
lods
pop
imul
daa
sub
lea
scas
mov
and
jge
push
xor
adc
ret
dec
icebp
es
ret
mov
pushf
xchg
mov
fsin
ret
inc
xchg
pop
pusha
stc
(bad)
xchg
inc
sbb
popa
(bad)
in
call
adc
stc
sub
out
xor
retf
xchg
xchg
outs
sbb
pop
push
mov
jle
loopne
inc
cmp
mov
shl
and
cmp
jle
out
movs
or
aad
inc
inc
xor
std
or
mov
xchg
mov
addr16
push
fidiv
(bad)
xchg
scas
loope
lods
js
mov
loope
sbb
mov
xchg
add
jne
dec
or
pushf
push
stc
jb
jg
fisubr
inc
cmp
sahf
imul
scas
hlt
mov
dec
jno
and
or
xchg
dec
fild
jmp
int3
mov
and
mov
aaa
push
(bad)
mov
(bad)
enter
(bad)
lock
fld
xor
cmp
add
xor
ins
mov
outs
mov
xlat
mov
adc
inc
pop
aaa
pop
out
retf
gs
ds
mov
into
int3
jne
les
repz
xor
mov
add
cmc
imul
(bad)
in
push
loopne
xor
cmp
adc
sbb
sbb
add
pop
jo
imul
mov
retfw
ins
pop
cwde
nop
inc
mov
ins
ss
rcl
cmp
mov
gs
sahf
sbb
add
sub
mov
mov
and
push
pushf
xor
jg
cdq
cmova
cmp
in
jp
arpl
enter
and
sub
inc
xor
imul
mov
scas
push
xchg
fbstp
retf
sub
cmp
mov
mov
add
shl
in
sbb
push
mov
pop
push
pop
ins
or
fstp
pushf
cmps
fwait
push
adc
gs
(bad)
jecxz
xor
and
int3
aaa
dec
sbb
das
nop
fadd
or
ds
cmp
ret
cs
jge
shl
pop
int3
std
dec
fstp
jmp
xchg
(bad)
cmp
push
xchg
pop
test
xor
icebp
jmp
push
in
fisubr
push
mov
cmp
in
jbe
rcr
cld
mov
sub
adc
push
pop
sub
jecxz
inc
sbb
sbb
push
inc
jae
sbb
stc
fcmove
cmp
mov
adc
rcr
inc
inc
(bad)
retf
shl
sbb
and
cld
push
pop
aas
jp
sbb
or
in
jno
mov
mov
hlt
dec
lock
push
pop
hlt
add
push
sub
pushf
shl
mov
loopne
les
sbb
dec
mov
(bad)
(bad)
sbb
mov
sbb
inc
adc
dec
inc
scas
push
fldcw
out
mov
icebp
shr
aas
in
dec
jmp
dec
pop
mov
hlt
mov
push
mov
fdiv
lods
jb
ror
push
imul
xchg
stc
sub
add
or
sbb
xor
push
add
sbb
outs
xchg
inc
lods
sar
outs
adc
adc
je
or
mov
popf
pop
fwait
inc
jbe
loope
cmp
das
add
aad
push
push
inc
mov
or
adc
sub
cmp
cmp
stos
repz
push
les
jo
dec
add
retf
mov
repz
mul
xchg
repz
xor
stc
js
inc
xchg
jae
int
mov
mov
pusha
dec
test
adc
adc
pop
mov
repz
clc
mov
cmp
xchg
mov
leave
cmp
bnd
repz
retf
adc
call
or
xor
shl
imul
sub
jmp
dec
ss
xlat
(bad)
loop
ret
arpl
add
cmp
mov
inc
fndisi(8087
inc
jno
pushf
movq
pop
dec
push
fdiv
mov
dec
inc
jns
mov
xchg
retf
stos
jbe
retf
popf
dec
push
imul
and
pop
sbb
xor
push
jle
cmp
mov
push
icebp
adc
test
or
out
int3
jne
push
test
lock
sahf
adc
and
ficom
test
mov
dec
sub
sbb
rcl
fldenv
hlt
inc
cwde
icebp
xchg
sahf
or
dec
loop
sbb
or
sub
scas
or
jmp
jbe
cmps
and
add
sub
push
mov
aas
ins
push
xchg
adc
daa
fdiv
in
call
mov
popa
imul
sti
not
out
pop
or
aaa
dec
and
ds
in
jnp
mov
cmp
sbb
cld
aad
ins
pop
aam
jb
pushf
jle
dec
pop
sub
pop
jg
mov
sar
mov
push
mov
cmp
jnp
xchg
and
fs
mov
popf
in
adc
movs
push
sbb
cmp
sub
mov
not
ds
push
popa
pop
push
xor
outs
fldenv
xor
mov
cmp
ret
movs
in
cli
push
inc
pop
std
and
int3
je
test
mov
cmp
fidivr
pop
(bad)
fucomp
jle
mov
push
cmpps
cmps
add
arpl
and
adc
fwait
cmps
push
sbb
fsincos
scas
xchg
aam
hlt
mov
imul
inc
push
adc
jb
cmp
xchg
cmp
loope
enter
aam
inc
aaa
push
aad
add
cs
es
and
xchg
and
repz
call
dec
fild
(bad)
std
mov
xor
cmp
sub
retf
call
sbb
inc
aaa
jecxz
add
repnz
imul
and
sbb
dec
pop
dec
cwde
enter
xlat
cmc
aam
data16
enter
mov
push
push
or
loope
sbb
and
jbe
(bad)
sbb
or
push
jo
cmp
jp
icebp
sbb
mov
push
mov
sbb
into
inc
push
add
jg
pop
sub
ss
in
gs
aas
enter
vphsubbw
out
cli
push
cmp
pop
cmp
fcomp
imul
test
loop
adc
xchg
jge
scas
rol
rcr
out
mov
fld
stc
mov
xor
scas
xor
inc
pushf
repz
push
in
aam
pop
sahf
and
cmp
jb
mov
je
inc
popa
inc
mov
int
and
or
pop
cld
arpl
bswap
imul
jbe
cwde
inc
les
out
icebp
xchg
cmp
sar
enter
ret
xchg
xor
jecxz
je
rcl
inc
ds
call
jge
div
cmp
mov
xchg
fld
aam
or
adc
in
mov
push
fidiv
cmps
inc
sub
and
sub
outs
enter
pop
jb
push
xor
pop
pop
es
jmp
lods
cmp
test
imul
popf
out
push
ins
mov
cdq
repz
inc
and
mov
mov
adc
mov
inc
jg
and
sub
mov
dec
push
xchg
inc
loope
jns
mov
test
fld
inc
fdivr
loope
add
push
imul
aad
push
fcomp
xor
cmp
iret
outs
(bad)
loop
mov
sub
retf
cmp
push
inc
fs
add
add
jg
mov
dec
lock
mov
or
rcl
vaddpd
cs
mov
xchg
test
je
cs
es
mov
or
mov
outs
jns
mov
cmps
and
mov
int
push
fsub
or
pop
jp
sbb
je
lock
icebp
ja
push
arpl
push
adc
mov
pop
inc
out
mov
std
adc
sahf
push
fbstp
aaa
cdq
xchg
and
dec
pop
pop
ja
cmps
and
fld
popa
push
mov
mov
xchg
out
lock
dec
pop
mov
add
fsub
lds
shr
js
int3
ins
loope
add
cld
cli
sbb
cli
bswap
mov
mov
sbb
mov
ror
inc
xlat
loope
mov
mov
pop
ins
mov
lea
fadd
das
cwde
outs
jne
aaa
xchg
sub
push
ins
aad
push
ret
fild
cs
fwait
mov
out
cdq
bound
sub
mul
rol
sbb
inc
shl
mov
xor
aad
xchg
sub
bound
jp
sub
and
jp
sub
pop
xchg
push
dec
dec
stos
sub
int3
test
cmp
dec
cli
sub
mov
movs
adc
pop
js
adc
std
loopne
hlt
jnp
test
or
sti
test
call
aas
fidiv
xor
imul
sahf
xchg
test
into
movs
stos
or
loopne
ret
cmp
push
mov
call
lds
sbb
add
mov
or
and
lahf
ins
dec
cmp
cmp
iret
cmp
cmp
js
mov
dec
pop
(bad)
test
cmps
dec
mov
and
cmp
mov
cmp
sub
je
xchg
cmp
or
mov
pop
pop
in
or
xlat
and
out
shl
or
fucom
cmp
add
dec
fsubr
pop
push
or
enter
lahf
ja
push
add
xchg
stos
or
rol
dec
and
repz
test
xchg
daa
adc
dec
movs
add
jnp
fmul
add
push
cs
dec
cmp
mov
arpl
inc
inc
or
mov
cli
shl
add
dec
sbb
push
cwde
sub
iret
mov
mov
mov
push
jae
inc
mov
aam
mov
mov
push
push
aad
inc
sub
fidivr
cmps
push
xchg
(bad)
aad
stc
sbb
out
xchg
(bad)
mov
sbb
mov
pop
retf
cs
repnz
mov
jge
(bad)
push
ja
sub
sbb
ficomp
xor
icebp
add
js
cmps
dec
fidiv
loope
cli
xchg
mov
out
mov
inc
(bad)
mov
out
inc
inc
mov
xchg
dec
pop
jo
adc
mov
out
mov
fisttp
lods
lahf
adc
sub
fstp
jo
rcl
aad
xchg
stc
lea
bound
adc
dec
hlt
mul
jns
pop
mov
push
into
push
jnp
test
push
or
lock
stos
mov
iret
clc
js
mov
inc
xchg
sbb
cdq
mov
inc
jae
adc
push
sbb
rol
ja
js
mov
cwde
lods
jo
add
or
mov
cmc
scas
push
inc
leave
call
out
cmp
xor
jecxz
fstp
mov
mov
jge
stos
pop
mov
or
adc
xchg
stos
mov
add
ja
enter
cmc
push
repz
jae
out
mov
scas
mov
sub
div
cli
xor
fisttp
push
push
hlt
(bad)
jb
mov
jmp
jnp
mov
ss
mov
mov
test
pop
sbb
jb
xor
pop
cs
sbb
retf
jle
cmps
or
aas
scas
stos
ret
test
jmp
dec
mov
repz
dec
mov
or
out
xchg
rcl
lea
pop
test
popf
ins
or
or
push
clc
jmp
add
dec
inc
push
or
jmp
xchg
ins
inc
int3
mov
shl
or
dec
in
stos
jmp
push
(bad)
xor
sub
and
mov
mov
push
xchg
les
sub
jl
cmps
pop
adc
mov
in
add
jmp
test
inc
mov
pushf
stc
imul
loop
push
test
adc
scas
xor
in
gs
jo
lods
xchg
dec
in
add
in
xor
mov
clc
(bad)
repz
enter
nop
je
leave
and
aad
dec
pop
cmp
daa
jl
dec
mov
cmp
outs
loope
fwait
popa
push
push
out
mov
and
xor
inc
inc
or
xchg
sub
mov
push
sub
jb
xor
scas
fucompp
pushf
mov
pop
or
fcomp
adc
mov
adc
or
pop
push
shl
idiv
out
out
cwde
sar
adc
sub
(bad)
pop
icebp
enter
add
lods
ins
movs
in
adc
jmp
xor
or
nop
imul
call
jecxz
div
xor
dec
ja
in
sahf
pop
or
add
lods
sub
inc
test
hlt
call
addr16
inc
pop
into
push
sub
adc
xchg
loope
push
and
js
sbb
jns
loopne
adc
jecxz
push
lods
mov
cmp
rcl
retf
icebp
xchg
rol
mov
sbb
cmp
push
mov
frstor
push
movs
pop
out
xchg
test
sahf
ror
fs
cmp
adc
jge
mov
and
mov
call
xchg
mov
popa
outs
cmps
jle
ret
push
mov
jecxz
addr16
test
mov
or
sbb
fnstenv
nop
out
inc
push
jne
mov
add
loopne
sbb
dec
jecxz
sbb
dec
mov
push
xchg
int
mov
pop
pop
retf
sub
mov
icebp
cmp
adc
xchg
ins
cld
mov
xlat
cmp
movs
inc
mov
loope
xchg
pop
fs
dec
movs
push
sub
xor
push
xor
lea
sub
push
push
imul
lahf
gs
not
into
nop
jg
lods
outs
lods
test
js
mov
jle
bound
icebp
xchg
cmp
call
jne
push
inc
dec
jp
add
sub
idiv
rcl
cmp
scas
(bad)
lock
mov
outs
dec
jp
scas
outs
mov
lock
leave
push
jge
cmp
dec
jge
bound
cmp
adc
les
popa
ds
xor
sahf
fwait
push
and
xchg
add
movs
xchg
repz
ss
pop
pop
sti
sbb
or
jmp
jnp
(bad)
movs
pop
out
jg
jno
add
mov
jg
sbb
inc
movs
or
xor
hlt
aam
inc
push
jnp
push
jnp
gs
rcr
std
sbb
pop
mov
loope
fist
and
fmul
ds
shr
retf
jg
pop
fnstcw
sub
xchg
cmp
imul
pop
pop
aad
movs
pusha
loope
bound
fcmovu
mov
and
dec
sub
xchg
jmp
xor
mov
pusha
dec
cmp
sub
out
mov
xchg
sub
outs
in
push
mov
push
in
dec
jae
inc
fisubr
(bad)
sti
(bad)
push
shl
nop
movs
fsubr
jns
shl
pop
psubusw
and
imul
lods
or
xlat
mov
add
dec
xor
(bad)
ins
cmp
fist
shl
jo
cmp
lods
xlat
lods
ja
pusha
or
xchg
push
std
iret
imul
cmp
sbb
out
push
mul
mov
mov
test
lods
dec
inc
fnstsw
clc
xchg
dec
xor
mul
test
and
iret
lds
jae
(bad)
adc
jo
push
aas
jae
ret
jmp
lds
or
call
fsubr
push
shl
aam
mov
sbb
scas
push
adc
cmps
mov
or
and
xor
and
jmp
xlat
xchg
and
pushf
adc
or
int3
js
bound
mov
jmp
loope
je
(bad)
xchg
(bad)
(bad)
aad
sbb
(bad)
leave
mov
xor
jae
enter
cdq
ret
pop
mov
shl
ds
add
shr
nop
inc
leave
sub
sub
xor
in
lock
xor
ja
es
fs
cmc
xor
lea
mov
jno
xor
in
mov
outs
push
xchg
in
push
hlt
mov
and
popa
leave
(bad)
cmp
stc
stos
stos
sub
cmp
dec
ja
stos
loope
sub
sbb
sub
or
jl
or
ror
inc
fstp
adc
mov
mov
(bad)
inc
mov
imul
jmp
out
jbe
adc
popa
in
test
scas
sbb
pop
sub
mov
or
int
pop
outs
popf
fs
outs
xchg
mov
mov
jp
push
test
cmp
adc
ror
cmp
push
clc
cmp
push
xor
and
mov
and
inc
(bad)
out
sar
push
add
lds
or
pop
cmp
jle
stc
mov
mov
ret
ja
inc
ficom
xor
cmp
test
dec
mov
xor
js
ret
pop
das
xchg
xchg
sbb
(bad)
repz
mov
sbb
aas
xor
pop
xchg
or
lds
jl
jl
add
js
out
sub
jg
jb
and
mov
mov
lods
xchg
ins
addr16
stc
cmp
sbb
cld
test
lahf
fdivr
(bad)
scas
sbb
or
mov
jo
and
aas
mov
or
mov
sbb
retf
rcr
xchg
xlat
sbb
jae
jle
ret
ja
pcmpeqd
sub
shl
(bad)
fld
jne
adc
cmp
adc
nop
imul
mov
mov
js
sbb
addr16
ss
(bad)
adc
inc
and
inc
adc
mov
jmp
dec
xor
or
out
adc
mov
scas
out
lods
mov
shl
mov
fld
stc
push
cmp
out
and
arpl
pop
push
out
frstor
nop
pop
nop
pop
xchg
test
in
or
stos
xchg
or
lock
mov
icebp
push
data16
rcr
(bad)
jnp
fnstsw
cmp
and
ror
dec
sbb
bound
mov
in
inc
cmps
pop
aaa
aad
cmp
xor
push
in
or
adc
cdq
loope
clc
mov
push
(bad)
(bad)
pop
shl
jno
in
(bad)
mov
pop
les
cli
daa
inc
push
retf
sub
cli
arpl
sbb
iret
pop
test
jle
imul
inc
mov
add
push
movs
cmp
(bad)
adc
adc
jg
xchg
out
jp
push
ja
xor
lea
je
cmc
mov
std
sub
stc
daa
test
pop
aam
mov
sti
push
sbb
xor
bnd
mov
mov
ja
dec
pop
lea
lock
cs
stos
xor
test
mov
xchg
jge
cmp
xchg
ds
mov
jmp
cmp
ret
xor
fild
ins
aad
jns
push
cmps
loope
cmps
fld
pop
and
cmps
(bad)
mov
dec
sahf
lods
out
fistp
cdq
ja
mov
scas
sub
push
dec
adc
outs
repz
dec
mov
lds
and
in
repnz
icebp
and
pop
in
add
es
add
dec
sub
scas
mov
pop
jae
aad
inc
stos
inc
int3
inc
mov
push
ror
mov
stc
imul
jge
or
adc
inc
xchg
popa
cmp
pop
retf
xchg
jns
cli
fcom
daa
add
ror
pop
adc
inc
leave
push
sbb
or
cmp
addr16
pop
repnz
dec
xchg
icebp
adc
dec
inc
lahf
xchg
sti
jbe
jns
test
inc
pop
adc
not
lahf
pop
arpl
xor
xchg
mov
outs
pop
sbb
into
add
in
stos
xchg
push
or
test
sub
xchg
imul
mov
mov
test
outs
outs
retf
dec
inc
hlt
fcomp
mov
jle
and
mov
fiadd
adc
shl
xchg
in
popf
xor
jne
mov
sar
jg
fstp
sbb
fisttp
pop
cs
fadd
call
stos
mov
xchg
pop
nop
mov
sbb
out
shr
add
xchg
mov
not
fdivr
rcl
or
ror
out
push
add
pop
or
in
(bad)
nop
(bad)
push
adc
sbb
pusha
inc
and
outs
sub
aam
sub
push
rcl
fstp
jbe
(bad)
mov
xchg
mov
and
jo
mov
xor
dec
pop
leave
pop
xor
in
jne
cmp
jmp
(bad)
and
add
push
xchg
ins
sub
js
fisubr
ret
pop
cmc
inc
popa
out
call
xor
mov
pop
inc
jbe
fst
enter
aam
daa
shr
(bad)
push
add
jae
or
lock
inc
inc
sar
and
jge
xlat
inc
ss
cld
mov
mov
push
inc
mov
add
add
xor
outs
xor
sti
jmp
rol
es
fdiv
mov
out
cwde
mov
aas
retf
je
and
movs
mov
push
in
call
mov
or
cmps
stos
ret
lock
cmp
sub
sub
test
ds
xor
inc
daa
cmc
dec
or
mov
dec
in
in
pop
in
pop
xchg
pop
(bad)
lock
test
inc
inc
inc
mov
rcl
jnp
mov
adc
cmps
mov
jbe
push
mov
cmps
xor
mov
mov
xor
xor
cmp
dec
ins
push
add
and
jo
leave
retf
xchg
movs
mov
movs
add
das
xchg
nop
int3
nop
in
shl
add
sbb
call
in
inc
xchg
into
repz
adc
pop
xchg
retf
retf
aad
(bad)
fwait
out
inc
mov
rol
xchg
es
mov
retf
outs
lock
pop
sbb
mov
jl
sbb
pop
(bad)
or
adc
pop
lahf
cwde
js
sbb
mov
sub
pop
pop
bound
xchg
iret
add
dec
sbb
ins
adc
and
jle
stos
out
test
adc
in
aaa
out
xlat
mov
sub
mov
sub
popa
sbb
(bad)
cs
fwait
xor
outs
dec
out
test
nop
pop
data16
push
mov
fstp
inc
cmp
faddp
mov
(bad)
fmul
dec
call
cmp
jnp
pop
push
xchg
rcl
imul
lods
cmps
std
sbb
je
stc
mov
jge
dec
adc
mov
jl
xchg
mov
cmp
sbb
jmp
retf
shr
retf
fsubr
hlt
(bad)
stc
cwde
outs
cmps
push
sub
or
pop
nop
mov
ins
shr
hlt
cmps
mov
or
push
mov
je
aam
mov
aam
enter
push
mov
addr16
repnz
aam
data16
sar
jecxz
into
sbb
mov
pop
cmc
in
cmp
push
push
jb
loopne
push
add
clc
sti
cmp
sar
jmp
xchg
pop
sub
js
add
dec
cmp
data16
sub
lods
call
xor
mov
add
in
inc
or
std
cwde
pop
in
in
push
and
ja
sbb
into
inc
mov
xor
into
jmp
sbb
pop
adc
in
icebp
ins
inc
imul
add
stos
inc
(bad)
fwait
jnp
stos
das
and
cs
ins
mov
mov
mov
popa
push
and
pop
repz
(bad)
or
push
mov
nop
pop
(bad)
pushf
push
or
sub
ins
and
iret
sub
sbb
aaa
dec
sbb
push
loop
sbb
cmp
cmps
addr16
rcr
pop
mov
dec
or
jecxz
loop
inc
xor
fisttp
dec
xor
or
sbb
jle
daa
cmp
int3
cli
pusha
sub
cmp
mov
pop
loopne
pop
call
mov
and
jl
mov
and
es
inc
sbb
clc
lods
loop
std
test
test
add
js
out
jae
es
cmc
aas
icebp
mov
fsubr
sub
inc
or
fist
sbb
shr
cmp
shl
jne
push
sub
cmp
sub
jle
mov
std
in
xchg
(bad)
mov
fdivr
cmp
jmp
imul
or
or
xchg
sub
stc
pop
mov
arpl
mov
fsub
jmp
(bad)
sub
adc
xlat
les
(bad)
aas
jns
call
fs
jle
add
movs
push
xor
loope
cli
jge
in
pusha
jae
out
add
cmps
icebp
imul
shl
sub
mov
mov
into
jge
sbb
fwait
sbb
rol
lea
inc
cdq
(bad)
in
jb
jno
outs
ret
or
push
xor
lds
mov
mov
dec
jno
test
mov
fnstsw
rcl
fs
jmp
add
sub
or
popa
or
cmp
or
mov
aam
cmps
imul
pusha
and
inc
fdiv
mov
rcl
addr16
cwde
push
and
xchg
xchg
jl
lods
fnsave
mov
push
mov
scas
add
ins
imul
jecxz
popa
minps
rcl
mov
ja
js
test
loope
movs
mov
lahf
pop
mov
in
inc
sbb
push
add
les
rcl
jle
fwait
jne
(bad)
mov
push
sar
push
pop
dec
hlt
jmp
jo
inc
cdq
loop
sbb
fmul
jp
outs
ja
mul
daa
fwait
or
rcl
jo
pop
fprem1
sub
mov
xchg
pop
dec
xchg
sbb
xchg
iret
push
mov
jecxz
pop
cmp
lods
fcom
xchg
int3
jnp
test
movs
xor
mov
lahf
mov
ins
sub
cmps
shl
or
mov
mov
fnstcw
(bad)
fdiv
pop
jl
in
cmp
adc
out
in
in
inc
sub
and
in
xchg
jmp
bnd
jmp
inc
enter
pop
sbb
jb
lahf
cld
sar
jmp
push
int
jmp
in
test
and
sbb
push
bound
imul
sbb
xor
cmova
jo
je
jecxz
xchg
mov
push
nop
stos
sub
adc
or
pop
xor
jp
mov
icebp
mov
sub
xor
lahf
ret
fsub
xor
test
push
xchg
sub
pop
(bad)
(bad)
call
ja
cmp
lock
(bad)
cld
js
jge
push
fimul
pop
push
in
mov
out
push
push
addr16
dec
xor
pop
call
xchg
stc
sub
adc
aam
cli
cmp
outs
mov
popa
mov
mov
push
int
mov
scas
(bad)
jmp
mov
mov
push
in
xchg
jne
sub
and
inc
cmp
and
and
in
(bad)
dec
dec
(bad)
mov
ja
jmp
test
jmp
jnp
jmp
mov
mov
push
rcl
mov
xchg
and
leave
xlat
sbb
mov
or
adc
test
adc
dec
mov
into
loopne
xchg
pop
xchg
(bad)
repz
test
dec
nop
ins
and
sahf
ror
and
sti
mov
shl
stos
inc
enter
push
div
mov
out
cmp
mov
mov
adc
or
dec
push
loope
mov
jne
jnp
or
push
cmp
jecxz
test
jno
inc
addr16
mov
sub
sbb
mov
outs
and
jmp
pop
cwde
hlt
pusha
(bad)
mov
(bad)
cmp
mov
loope
je
cld
div
xchg
sti
add
cmps
clc
cmps
movs
or
dec
out
pop
adc
push
nop
cmp
inc
sub
sar
shr
lods
loop
xchg
or
push
sbb
jo
cli
popf
sub
push
fld
fs
mov
dec
and
inc
call
outs
cmc
mov
aaa
sbb
push
data16
aad
js
fs
mov
iret
leave
mov
cmp
mov
mov
jnp
mov
movs
inc
nop
jbe
scas
lock
stos
xor
cmp
(bad)
inc
jne
sti
ss
out
hlt
cmps
repz
jb
data16
or
arpl
gs
setne
add
mov
xchg
pop
sub
movs
(bad)
sar
jns
cmp
mov
mov
rcl
xor
inc
or
xor
not
mov
fs
test
scas
push
push
mov
or
adc
cmp
add
cmp
in
sbb
mov
pop
loopne
mov
mov
test
retf
xor
xchg
ret
jne
shl
push
jnp
dec
inc
dec
jae
xchg
sbb
inc
enter
add
test
sahf
inc
imul
xor
lds
out
inc
cmp
xchg
lds
push
div
dec
aad
sub
and
hlt
test
push
push
js
and
ss
mov
repz
nop
push
ret
xor
push
ja
mov
mov
xchg
mov
or
or
push
or
arpl
(bad)
loop
mov
mov
popf
retf
mov
adc
or
(bad)
xchg
test
jmp
je
xchg
leave
js
dec
int3
or
(bad)
pop
idiv
cmp
mov
(bad)
movs
add
adc
scas
push
adc
add
repnz
shr
push
repnz
mov
push
jnp
aaa
xchg
xchg
(bad)
fwait
stos
xchg
rol
dec
mov
mov
mov
movntps
push
add
mov
mov
push
pop
dec
jns
not
sub
inc
xchg
push
pop
mov
dec
mov
pop
mov
mov
cmc
pop
stos
fmul
add
cmp
xor
aam
aad
mov
sbb
or
ror
fcom
cmp
mov
call
pop
xchg
fcom
adc
add
sub
popf
scas
ret
cld
xchg
or
aaa
dec
div
add
inc
cmp
mov
xchg
loope
and
test
sti
adc
cmp
xor
lea
movs
das
fidiv
movs
pop
inc
jne
or
push
sub
clc
dec
fisub
in
ret
mov
mov
inc
cmp
dec
sub
xor
ss
(bad)
outs
int
in
out
mov
jle
mov
outs
inc
int3
lods
loopne
dec
adc
call
pop
adc
shl
int3
mov
sbb
fldcw
jbe
xchg
popf
sbb
out
pushf
sub
icebp
ja
mov
adc
mov
mov
inc
(bad)
push
loope
mov
push
inc
iret
sahf
xchg
int3
out
sbb
sub
pusha
ja
xchg
dec
sub
or
or
mov
cs
add
outs
xchg
into
dec
pop
or
mov
out
cdq
test
jo
or
jno
loopne
jmp
pause
rol
aad
fld
inc
xor
or
fldenv
mov
push
and
pushf
jns
dec
pop
add
ja
jecxz
cwde
push
iret
mov
or
dec
rcl
fidiv
mov
enter
xchg
imul
test
and
or
jle
test
and
cld
lds
or
je
add
in
fwait
popa
dec
stc
adc
cmp
daa
mov
dec
cdq
mov
arpl
jnp
and
(bad)
jbe
adc
dec
inc
jnp
call
inc
pop
ja
sbb
xchg
lds
xlat
jne
xor
sahf
inc
loopne
mov
scas
sti
fs
cmp
retf
adc
sub
aas
or
arpl
ss
cmp
mov
jecxz
sahf
lea
pusha
inc
cmps
cmp
dec
or
lods
push
fmul
test
in
iret
ss
adc
scas
xchg
and
push
xchg
adc
jmp
js
test
dec
hlt
mov
mov
call
xlat
inc
ins
clc
jp
lods
push
nop
test
jmp
xor
or
gs
push
in
xchg
mov
and
cwde
je
popf
addr16
cwde
mov
cmc
jns
dec
in
sbb
into
jmp
nop
in
xor
fcomp
stos
loop
adc
cmp
jns
js
or
dec
fsubr
jbe
push
dec
fs
cwde
dec
adc
out
out
sbb
aam
cmp
lahf
retf
scas
sbb
sar
out
int3
lahf
test
push
test
add
cdq
(bad)
(bad)
xchg
lods
int3
pop
add
or
mov
push
in
add
data16
aaa
xchg
idiv
rcr
add
jae
mov
leave
enter
xchg
sbb
lods
enter
mov
jg
adc
jno
fs
sub
push
cmp
pop
fcomp
pop
sbb
test
jle
retf
add
outs
push
call
(bad)
xor
sub
mov
das
xor
lods
cmp
mov
mov
xor
pop
push
jmp
adc
xchg
int
ins
into
pop
mov
cmps
enter
mov
fcom
fmul
das
dec
jp
sti
jl
dec
popa
mov
inc
stos
jb
(bad)
jecxz
xchg
lds
lahf
dec
or
je
xchg
shl
dec
and
add
stc
jg
lods
call
cmp
iret
pop
pop
sbb
jl
xchg
sbb
dec
mov
mov
loope
jae
addr16
mov
jne
fwait
jle
aad
scas
add
popa
icebp
pop
xor
shr
hlt
movs
mov
add
stos
out
mov
mov
mov
(bad)
xchg
pop
cld
cmps
adc
mov
jecxz
and
cld
nop
inc
fstp
gs
(bad)
push
inc
inc
(bad)
fcom
adc
mov
mul
cmp
inc
hlt
aam
es
(bad)
pop
adc
cmps
inc
shl
loopne
mov
push
jecxz
inc
mov
push
adc
popa
imul
jp
lea
xor
fstp
movs
sbb
cmc
in
mov
(bad)
or
nop
jb
or
cli
out
stos
mov
jg
add
pop
das
cmp
and
scas
hlt
pop
mov
mov
xlat
fwait
loop
inc
scas
inc
jbe
xchg
vpsadbw
outs
stos
int3
cld
(bad)
in
inc
std
mov
retf
pop
mov
ds
sbb
dec
xchg
mov
push
push
xchg
inc
push
hlt
pushf
inc
(bad)
push
fdivr
dec
hlt
aas
xor
lahf
dec
xlat
inc
adc
inc
cld
mov
nop
jnp
jnp
lock
cmp
pop
xchg
call
jo
out
dec
int
inc
and
lds
call
es
mov
push
sub
xchg
setp
sub
call
jo
imul
sub
xor
and
and
inc
(bad)
mov
rcl
mov
sub
push
addr16
cmp
ror
push
call
xchg
ja
xor
jne
mov
mov
or
mov
mov
add
cmps
adc
add
les
call
(bad)
popa
aam
push
adc
pop
nop
mov
xchg
adc
ins
sbb
push
shl
push
data16
jmp
(bad)
in
jae
sub
gs
in
pop
push
cmp
sub
(bad)
in
jle
movs
mov
out
mov
push
ret
add
adc
xchg
(bad)
fwait
into
loopne
mov
popf
lea
pusha
fs
movs
push
push
add
sub
xchg
sub
mov
mov
inc
dec
dec
sub
jmp
popf
cmp
add
dec
test
cmps
aam
push
jp
stos
adc
popf
(bad)
leave
sub
inc
daa
mov
ret
mov
add
mov
mov
(bad)
fwait
push
and
xlat
ss
je
imul
sahf
jno
pop
out
jb
pop
jmp
mov
aam
mov
repz
adc
sub
cmp
imul
daa
data16
dec
mov
cli
popa
cmp
mov
cmps
xchg
(bad)
dec
sbb
pop
sub
adc
into
xchg
pop
cmps
fcom
cld
push
test
dec
or
and
adc
outs
xchg
enter
xor
mov
pop
retf
cwde
add
test
ins
cmp
pop
push
imul
into
into
ffree
scas
pop
fucomi
fimul
mov
outs
mov
pop
(bad)
inc
and
sub
adc
(bad)
ss
pusha
inc
pop
push
aaa
iret
(bad)
pop
mov
jg
aas
scas
xchg
div
cld
inc
sbb
ins
jno
daa
jp
and
xor
ror
mov
jne
nop
aad
btc
ret
lock
jbe
xor
adc
mov
jnp
push
enter
inc
scas
gs
mov
cmp
ret
jae
dec
sub
lock
mov
add
dec
mov
jnp
or
stos
shl
push
into
sbb
xchg
(bad)
xor
mov
jae
std
cmps
and
into
cmp
fwait
pop
pmullw
pop
cmp
and
xchg
aaa
sub
lea
in
das
je
inc
mov
fcmovne
popa
sub
xchg
into
popa
add
mov
fisttp
stc
bound
dec
or
mov
fdivr
inc
jge
cmp
fisub
mov
pop
cmp
ja
sub
pusha
sti
sbb
add
cmp
jnp
ret
cmp
jg
push
sbb
cs
fwait
arpl
sets
push
adc
ret
retf
test
lea
add
mov
or
and
sub
lods
out
loope
aam
xor
xchg
adc
fisub
mov
mov
cmp
loope
dec
and
test
add
xchg
add
pop
jle
pushf
popa
call
mov
call
push
and
sub
out
pop
test
mov
fwait
mov
add
mov
xor
jo
mov
and
(bad)
cdq
pop
pop
inc
mov
sub
lds
movs
ss
xor
cli
js
cli
sbb
out
sub
add
jecxz
pop
ins
out
das
push
scas
and
int3
mov
push
iret
mov
and
sbb
cmps
test
adc
fwait
jg
xchg
cmp
ss
in
mov
repz
inc
(bad)
retf
lds
inc
call
daa
push
push
adc
pop
iret
xchg
jo
shl
xlat
add
add
(bad)
rcr
aaa
cmp
dec
fimul
xchg
or
sub
fld
iret
ficomp
test
push
lock
cmp
scas
sbb
or
xor
adc
mov
in
cmp
push
mov
xchg
in
pop
dec
pop
std
ja
fwait
enter
nop
lea
clc
div
ficom
or
fisubr
aam
ret
dec
test
jmp
adc
stc
aam
mov
test
ja
push
jp
pop
mov
stc
pusha
fldenv
dec
jmp
aas
or
push
scas
jp
xchg
mov
mov
and
fs
mov
xor
retf
pop
cmp
and
mov
push
mov
inc
lods
xchg
addr16
and
pop
or
mov
pop
mov
je
adc
pop
add
pop
cs
cmp
xcrypt-cfb
cmps
and
jmp
popa
or
inc
retf
cli
pop
imul
push
outs
leave
sub
dec
mov
jmp
adc
inc
pop
jne
dec
enter
sub
pop
ss
out
pop
ror
mov
xor
ss
jl
jmp
mov
stos
sub
cld
cld
int3
xor
popf
and
adc
push
inc
and
push
dec
cmp
pop
scas
xor
pop
cwde
mov
mov
jnp
jp
adc
add
jae
pop
adc
inc
(bad)
(bad)
mov
and
and
push
scas
xor
inc
js
cmp
lea
cld
out
or
mov
mov
aad
jne
(bad)
and
shl
jbe
add
jmp
pop
fsub
pop
adc
or
cmp
mov
jmp
push
aad
aas
outs
xchg
dec
mov
cmp
mov
lahf
pop
mov
stc
rol
enter
imul
movs
mov
rcl
(bad)
mov
push
mov
xchg
into
int
dec
sub
push
mov
add
mov
cmps
mov
push
outs
shl
add
jmp
jg
rcr
(bad)
and
ds
stos
outs
or
xchg
loope
out
mov
sbb
or
xchg
mov
xor
sbb
call
popa
push
sub
jecxz
add
inc
outs
js
fsubr
or
popf
add
imul
pop
aam
shr
xchg
sub
inc
sub
mov
lods
pop
(bad)
and
fdivr
into
je
retf
pop
inc
aam
int
jnp
add
retf
pushf
bound
cmps
js
cmp
sub
fisubr
mov
and
dec
add
leave
jl
lods
fmulp
sub
dec
mov
fucomip
popa
mov
pop
pop
or
adc
fs
inc
(bad)
xchg
jne
not
mov
sbb
(bad)
push
ins
inc
jno
retf
sti
adc
stos
test
inc
cs
test
repnz
clc
mov
pop
dec
bound
xor
adc
inc
in
ja
mov
dec
xchg
jns
inc
call
jo
jbe
popf
(bad)
neg
(bad)
mov
mov
push
xchg
sahf
test
and
mov
test
push
jmp
out
mov
xchg
pop
mul
dec
mov
cmp
fbstp
mov
mov
(bad)
(bad)
arpl
inc
jo
loopne
sbb
mov
mov
(bad)
sbb
jle
in
xchg
lds
ins
fistp
fwait
mov
loope
mov
aam
(bad)
lahf
mov
pop
mov
dec
cld
mov
sub
sbb
fdiv
inc
aad
cmps
dec
add
xor
add
sbb
mov
lds
(bad)
into
(bad)
and
(bad)
dec
punpckldq
dec
pop
pop
je
push
pop
fisttp
lahf
xchg
mov
enter
jno
iret
hlt
cmp
(bad)
jmp
and
pop
enter
push
push
xor
movs
dec
(bad)
(bad)
stc
scas
jnp
or
add
lods
mov
hlt
into
mov
lahf
add
sub
out
sbb
cmp
clc
sbb
rol
(bad)
push
or
push
(bad)
jae
xchg
clc
inc
xor
cmp
dec
pop
inc
lock
jge
dec
mov
leave
std
test
or
mov
pop
sar
and
fdivp
lds
xchg
dec
xchg
hlt
neg
cmp
dec
add
adc
int3
movs
enter
fnstcw
addr16
aam
mov
mov
fcomp
sub
xchg
nop
mov
sub
shl
retf
imul
adc
add
cmp
mov
cmps
ins
xor
push
enter
mov
cmps
pop
adc
jb
or
mov
push
jmp
mov
cmp
lods
and
cmp
xchg
or
xor
xchg
lds
xlat
popf
inc
js
or
xchg
and
mov
outs
cmc
lock
imul
mov
fwait
loop
int3
stos
xor
into
and
sbb
dec
pop
push
mov
sub
ins
cmp
xlat
cmp
pop
push
mov
repz
inc
ins
mov
fidiv
push
xor
push
mov
xchg
(bad)
aad
(bad)
out
pop
cmp
out
frstor
ins
fidivr
fmul
pusha
lahf
mov
xor
jno
cld
inc
and
mov
rol
dec
rol
lahf
(bad)
fdiv
aam
sahf
push
xchg
inc
loop
xchg
das
cwde
adc
rcr
inc
ret
fsubrp
scas
fadd
mov
dec
jmp
adc
arpl
mov
inc
dec
xor
test
mov
cmp
jmp
ja
xchg
sti
jns
aam
cmp
inc
mov
xor
jmp
push
cwde
add
ds
cmp
xor
(bad)
pop
out
mov
stc
add
mov
sub
mov
js
mov
(bad)
mov
xor
and
or
xchg
retf
outs
and
push
cmps
xor
and
enter
dec
add
jne
pop
sbb
(bad)
mov
push
and
xor
adc
jge
pop
mov
mov
jmp
(bad)
aaa
push
xor
mov
out
aaa
push
in
aaa
(bad)
jnp
or
xchg
mov
xchg
mov
rcl
adc
loop
xor
leave
leave
or
dec
out
push
inc
les
stos
pop
dec
mov
and
push
in
clc
inc
push
mov
ins
mov
xlat
hlt
adc
shr
mov
fucomp
stos
push
mul
mov
inc
test
mov
add
clc
ss
les
xor
jmp
xor
add
(bad)
ret
and
adc
or
test
pop
retf
and
mov
mov
les
out
aam
pop
repnz
dec
retf
jne
popa
adc
add
(bad)
aad
xor
call
dec
pop
cli
icebp
push
xchg
test
mov
push
xchg
loopne
mov
ins
scas
lock
into
addr16
xchg
clc
jno
into
sub
loop
sub
cmp
adc
mov
nop
sub
lock
push
test
pinsrw
sti
xchg
adc
xor
icebp
mov
pushf
sbb
or
ja
fidivr
repz
repz
call
leave
int3
and
pop
mov
or
or
jg
add
xor
(bad)
and
push
out
daa
xchg
in
out
(bad)
mov
sahf
mov
mov
and
mov
mov
mov
jbe
mov
dec
push
imul
cmp
or
ret
in
(bad)
sbb
sub
mov
movs
test
xchg
xor
push
jb
inc
xchg
ins
pop
ds
sbb
stos
mov
pop
mov
xor
cld
sti
int3
push
enter
rol
push
mov
xor
jmp
es
movs
hlt
int
mov
pop
inc
jg
test
xor
enter
ja
inc
and
add
dec
pcmpeqb
push
xchg
call
adc
pop
stos
dec
mov
loope
ja
sub
call
in
bound
push
push
cmps
push
mov
xchg
movs
dec
(bad)
out
fistp
dec
jl
inc
mov
pop
mov
push
jns
test
mov
xor
pop
arpl
les
movs
or
dec
ds
jecxz
xlat
mov
jl
test
mov
out
sub
pmaxub
sub
mov
scas
ins
mov
mov
sub
jp
fsub
rcr
aam
jecxz
add
(bad)
jno
stos
leave
sti
dec
bnd
and
cmps
pusha
call
pop
sub
popa
ja
ret
cld
les
inc
mov
sbb
inc
aad
jo
test
test
mov
and
ss
lock
fisubr
mov
rol
test
mov
test
jo
fild
pop
xor
loop
inc
xchg
mov
repnz
adc
inc
cli
dec
lods
pusha
push
sub
mov
scas
cmp
xchg
adc
jbe
ret
cs
out
pop
mov
adc
outs
setne
push
jnp
sbb
rol
sbb
hlt
sar
mov
xor
cmps
call
sub
loop
aad
pop
dec
fcmovne
sahf
mov
sbb
mov
fadd
dec
add
push
pop
inc
xchg
jne
mov
add
add
add
(bad)
dec
adc
jmp
adc
or
dec
or
dec
call
inc
add
iret
dec
lahf
add
ret
cmp
lock
inc
inc
dec
sar
xchg
pop
cmp
jb
into
adc
mov
into
mov
pop
daa
xchg
movs
shr
jg
lock
ins
mov
test
fsub
dec
mov
jecxz
das
jb
jge
(bad)
mov
xchg
pop
push
lea
outs
pop
jmp
shl
xor
xchg
mov
mov
inc
push
cwde
pop
xor
mov
sub
mov
or
jg
add
test
add
out
sub
ins
jmp
xor
mov
mov
mov
or
aad
fdivr
mov
mul
loopne
jmp
loopne
sahf
xor
add
outs
fs
in
xor
xchg
lahf
mov
aad
cwde
jle
mov
stos
or
sbb
sub
fwait
loope
ror
std
adc
repnz
xor
out
pop
jecxz
push
cdq
loop
push
mov
shl
xor
retf
into
and
shl
push
inc
push
add
pop
push
out
mul
inc
mov
adc
cli
adc
aas
dec
push
cmp
test
shl
inc
mov
inc
ja
cmp
xchg
gs
mov
mov
mul
xchg
mov
push
pop
dec
push
lods
cwde
jl
pop
pop
push
aad
sub
pop
in
add
out
push
jl
fdiv
dec
out
pop
outs
add
addr16
push
arpl
adc
push
cmp
xchg
xchg
(bad)
sub
cli
and
pop
pop
jne
cmps
(bad)
and
and
pusha
fimul
or
fs
or
xchg
or
popf
cmp
adc
xchg
(bad)
mov
imul
mov
add
or
movs
dec
push
call
xchg
(bad)
push
jo
add
ds
xchg
fldcw
(bad)
mov
daa
mov
inc
arpl
mov
iret
pop
imul
mov
mov
adc
test
and
mov
fs
cmc
xor
and
sbb
mov
sub
inc
mov
pop
(bad)
into
hlt
mov
imul
cmp
inc
inc
adc
or
sbb
sbb
jns
outs
adc
fwait
xchg
pusha
jnp
or
or
enter
leave
lea
das
adc
aas
(bad)
rol
mov
fild
imul
jmp
dec
xor
dec
sbb
adc
cdq
pop
ror
pusha
jmp
div
add
xor
inc
addr16
fsub
sbb
loopne
sbb
scas
out
sub
dec
cmp
in
lahf
ss
pop
mov
loope
ss
sbb
xchg
not
jmp
jmp
pop
std
inc
xor
add
iret
push
mov
in
test
ins
mov
dec
jge
addr16
dec
jge
test
push
and
jge
pusha
jl
xchg
xor
adc
setnp
in
xor
adc
mov
push
hlt
repnz
int
les
pusha
jno
clc
mov
xchg
xor
fwait
les
jl
rol
xchg
icebp
and
pop
lods
loope
(bad)
cmp
adc
outs
cmps
xchg
stos
leave
retf
cmc
bound
ins
mov
imul
xor
es
push
(bad)
jae
mov
inc
retf
or
pop
pop
jb
xchg
dec
shl
sbb
xor
sti
repz
in
push
(bad)
repnz
mov
pop
in
xchg
pushf
add
xchg
or
lea
push
or
inc
add
cld
adc
xor
mov
sti
fwait
cmps
jecxz
mov
loope
jmp
jmp
mov
mov
push
jp
or
inc
out
into
xchg
add
pop
add
adc
cmps
push
and
pop
and
mov
dec
lds
jle
cwde
fcomp
xchg
aas
xor
mov
sub
lahf
dec
jo
xor
rcl
and
cdq
dec
xor
je
fadd
push
pop
arpl
(bad)
retf
pop
cmp
popa
test
xchg
mov
xor
and
mov
imul
cmp
stos
std
out
test
int3
call
adc
outs
pop
xor
int3
mov
jge
nop
mov
push
enter
add
mov
(bad)
cmps
xchg
pop
push
movs
jae
cmp
dec
mov
mov
mov
shl
and
popa
int
lea
nop
je
es
push
jecxz
and
dec
or
cmp
xchg
cmp
mov
retf
jb
jmp
jle
push
lods
pop
inc
cmps
lahf
or
inc
das
out
pushf
mov
mov
mov
imul
out
pop
mov
jb
xchg
pusha
pop
test
cmps
xor
fisub
xor
and
cld
rol
adc
dec
cwde
icebp
aas
sbb
add
push
je
rcr
mov
rcr
mov
sbb
je
xor
jb
jnp
hlt
jge
into
xchg
jns
sbb
inc
js
sub
dec
mov
or
cmc
aad
push
xor
cs
jb
push
cmc
cld
call
mov
fwait
and
nop
jb
inc
pop
(bad)
jmp
jle
aad
dec
std
fstp
inc
cld
xchg
movs
ret
xchg
sbb
arpl
cmc
mov
ss
mov
sbb
pop
cmc
add
pop
outs
test
iret
into
xor
sbb
retf
add
add
jno
push
jmp
retf
call
mov
mov
dec
and
addr16
sub
push
cmp
jp
push
push
test
sub
(bad)
scas
inc
jp
and
iret
xchg
jno
addr16
pop
mov
cmp
cmp
inc
(bad)
aaa
add
(bad)
clc
pushf
jb
cmp
dec
jmp
addr16
ret
cld
lods
loopne
stos
stc
clc
jecxz
mov
shl
outs
or
das
xor
inc
mov
dec
add
cmp
stos
mov
pushf
cmp
sub
daa
dec
jbe
icebp
call
pusha
popf
xor
xchg
xchg
push
add
dec
cmp
add
jns
sbb
mov
clc
mov
shl
fadd
jl
mov
daa
stos
fstp
fwait
push
ins
xchg
pop
sub
(bad)
je
or
pop
enter
mov
jmp
dec
outs
scas
sbb
ss
xor
ret
ins
(bad)
jmp
jbe
pop
dec
aam
mov
mov
ret
mov
bound
and
fisub
addr16
or
push
outs
pop
(bad)
jo
inc
sbb
(bad)
arpl
xor
pop
scas
mov
jle
(bad)
push
mov
int
inc
inc
and
adc
es
adc
sub
enter
jns
mov
ja
imul
in
(bad)
push
mov
arpl
and
adc
fld
inc
test
mov
mov
test
mov
mov
outs
pusha
dec
mov
dec
mov
jmp
push
cmc
sbb
je
push
aam
add
xor
cmp
xchg
and
or
ret
clc
xchg
sbb
mov
rep
jno
push
(bad)
mov
iret
outs
sbb
inc
mov
dec
pop
mov
jno
xchg
out
fwait
xor
popf
jo
dec
lods
add
cmp
adc
imul
jle
or
mov
xchg
jmp
imul
movs
fnsave
add
loop
cmps
push
loop
ret
cmp
cmps
or
pop
repz
inc
and
mov
stc
shl
ror
imul
lea
(bad)
shr
mov
pop
icebp
pop
mov
mov
out
sub
jbe
xchg
or
lock
int
xchg
sub
add
je
loopne
pop
cmp
pop
shl
and
sbb
adc
shl
push
push
xor
jno
jge
push
or
adc
sti
ja
mov
inc
pushf
dec
dec
push
inc
dec
add
xor
add
inc
pop
add
adc
or
in
jb
jp
test
jecxz
xor
ds
std
sub
aad
ja
stc
push
xor
cmps
xor
sub
push
das
xor
xor
inc
jne
repz
cmp
sti
xchg
inc
hlt
pusha
or
jno
mov
sar
and
pop
xchg
sbb
jl
jmp
ret
mov
xchg
loop
std
pop
aas
cmps
add
xor
jb
jne
jne
mov
mov
arpl
mov
pop
or
push
leave
repnz
or
jns
stos
cmp
mov
mov
push
or
test
std
xchg
jne
sub
addr16
std
bound
mov
mov
and
into
repnz
movs
fld
ret
loope
ins
scas
cdq
(bad)
xchg
test
push
push
mov
dec
dec
imul
(bad)
fdiv
jne
mov
ds
repz
ficom
mul
mov
xor
imul
leave
retf
xchg
mov
inc
jno
(bad)
fmul
pop
popa
rol
mov
and
(bad)
sbb
fisttp
nop
xchg
xchg
retf
xor
sub
or
neg
into
(bad)
mov
cli
(bad)
fild
mov
jecxz
or
or
lock
(bad)
lods
xchg
mov
mov
lahf
mov
lds
ror
and
rcl
call
inc
arpl
mov
jns
movs
adc
clc
jbe
loopne
mov
inc
pop
inc
jo
movs
xor
jge
jge
push
(bad)
lods
dec
jb
mov
pusha
fisubr
fld
add
out
outs
ins
cdq
cmc
xor
pop
vmptrst
jecxz
push
fcmove
sbb
shr
pop
movs
mov
pushf
or
loopne
pmullw
pop
mov
mov
jg
pop
loop
imul
fidivr
out
fistp
inc
es
(bad)
adc
mov
dec
daa
stos
jle
xlat
cmp
div
(bad)
fcom
adc
add
popa
ret
ja
pop
cli
mov
jno
cmp
mov
outs
and
enter
dec
pop
push
scas
jno
mov
les
push
or
inc
push
jmp
(bad)
out
ficomp
popf
mov
loopne
(bad)
push
inc
cmpxchg
cmp
or
dec
mov
pop
jecxz
addr16
sub
sahf
int
clc
xchg
loop
aaa
mov
pop
push
ret
stc
sbb
sub
adc
aas
ja
loop
sub
cmps
push
repz
cmp
leave
call
xchg
mov
push
mov
xchg
fcomp
addr16
sbb
inc
or
pop
adc
lahf
fldenv
mov
icebp
sub
(bad)
loope
jno
xchg
dec
in
push
mov
ins
movs
mov
jg
cmps
shr
pop
and
mov
pop
adc
push
cmp
clc
bound
sub
mov
pop
cmp
aas
test
inc
shl
adc
mov
sub
rep
cmp
int3
adc
push
mov
in
cdq
mov
mov
and
mul
fild
sub
rol
pop
pop
add
test
mov
push
inc
into
or
xchg
ins
mov
xchg
cli
add
loope
es
popf
push
push
leave
pusha
aad
jle
or
push
leave
stos
xchg
lock
addr16
gs
hlt
es
xchg
bound
or
mov
mov
jge
les
cs
mov
dec
in
arpl
jge
mov
es
enter
jo
mov
add
xor
je
(bad)
dec
dec
test
sbb
push
inc
jo
into
dec
or
mov
mov
lods
lods
jne
stc
in
jle
sahf
push
pop
aad
xor
xor
mov
jge
push
or
adc
or
fcmovb
mov
stos
or
xchg
sub
retf
out
test
jns
add
or
mov
popf
ss
(bad)
adc
sub
nop
outs
stos
cmp
pop
dec
mov
xor
cli
lock
lds
cld
dec
out
push
call
(bad)
sub
aam
pop
aam
retf
jne
sbb
inc
scas
sub
outs
cwde
cmp
cld
jnp
jb
push
add
push
(bad)
and
test
jne
mov
jno
push
hlt
push
call
xor
outs
add
mov
cmc
xor
mov
sbb
mov
popf
and
sbb
mov
ret
xor
movs
mov
fcmovu
lods
inc
lahf
aas
cmc
inc
jp
jae
ja
shl
int3
jmp
pop
cmp
ror
movsx
(bad)
sbb
repz
scas
hlt
jl
add
lods
add
mov
mov
jge
bound
stc
push
(bad)
or
cmp
cld
shl
cmp
lds
inc
jmp
jl
jno
test
dec
inc
jmp
ret
cmp
out
push
ret
popf
pop
sub
jmp
inc
xchg
lods
add
pusha
jle
inc
movs
call
call
mov
imul
xor
enter
(bad)
pop
xchg
fild
mov
test
push
lds
mov
mov
xor
mov
push
pushf
sbb
cmp
ficomp
(bad)
pop
jmp
inc
add
add
jno
aam
xor
xor
add
cmovge
dec
jge
push
ficomp
xor
jle
test
movs
push
mov
xchg
sub
fiadd
das
nop
fisub
xor
inc
xchg
loope
rol
imul
out
mov
push
add
scas
jp
setns
les
push
cdq
sti
push
mov
pop
pop
sub
loop
xchg
adc
cmc
push
sub
fcom
ret
pop
(bad)
mov
popa
repnz
fwait
stos
dec
jbe
jne
mov
jnp
mov
mov
stos
cmp
stos
ret
stos
push
(bad)
xchg
mov
and
mov
std
call
cmp
int
xor
mov
adc
jg
shr
xchg
daa
cmps
adc
xor
stos
icebp
mov
pop
adc
scas
mov
retf
mov
arpl
push
daa
shl
test
cmp
inc
mov
scas
aad
push
xor
or
dec
jo
and
cmp
jl
ins
jae
ret
cs
test
daa
push
mov
cmp
call
shl
into
int
or
and
aaa
ficomp
aam
aaa
lods
jno
test
jg
cmp
scas
ins
jmp
mov
push
add
and
leave
fsub
loopne
and
mov
(bad)
loopne
and
or
fisttp
shl
add
inc
ret
mov
call
out
retf
cdq
push
(bad)
daa
stc
(bad)
out
push
outs
jmp
test
adc
jle
std
jg
jo
or
in
push
jle
lods
ss
ja
mov
dec
rcl
ins
dec
push
adc
in
jmp
xor
aad
inc
xor
mov
sub
lgs
xor
and
retf
stc
jl
add
clc
push
ret
fld
pop
fistp
sbb
cmp
out
add
jne
jle
mov
push
add
stos
mov
sbb
dec
push
call
mov
push
lods
jbe
cmp
lds
mov
pop
and
mov
ja
data16
or
cmp
sub
push
frstor
fisttp
and
repnz
loope
push
mov
shl
inc
add
push
out
jb
xchg
xor
mov
dec
xor
add
adc
mov
xchg
scas
fdiv
and
pop
fcmovnbe
in
fcomp
jmp
std
sahf
mov
inc
test
repnz
icebp
int3
pop
jmp
in
mov
jb
add
out
ror
loop
add
in
rcr
adc
cmps
mov
inc
xor
daa
out
mov
fisttp
or
mov
xchg
mov
mov
adc
adc
push
lds
sbb
add
in
dec
lock
aam
push
aas
or
dec
aam
dec
pop
or
push
jl
jle
and
in
aaa
jle
or
int
mov
test
lahf
scas
(bad)
pop
pusha
lods
cmp
ins
shl
in
sbb
jge
push
das
stos
dec
mov
adc
inc
retf
rcr
mov
add
xor
call
dec
jecxz
retf
add
xor
xor
out
mul
xchg
and
sbb
shl
rcl
in
sbb
clc
leave
ret
xor
fs
lds
xchg
fwait
int3
cmps
in
jle
loop
lock
pop
ret
lods
and
and
push
(bad)
call
cvtps2pi
xchg
and
mov
ds
xlat
test
inc
repz
push
sar
pop
loope
(bad)
sbb
cmp
cmp
hlt
push
ja
cmp
jge
xchg
les
(bad)
fimul
xor
pop
mov
mov
test
retf
in
dec
dec
scas
adc
pop
idiv
sub
movs
(bad)
jl
arpl
icebp
sbb
mov
cmp
cmp
jle
pop
and
or
lods
lea
popa
xor
ret
mov
enter
sbb
pop
loop
pop
mov
hlt
push
imul
pop
fs
inc
mov
dec
pop
add
push
pop
mov
shr
xor
into
mov
jno
out
or
add
sub
jmp
dec
(bad)
call
or
jne
repz
div
mov
pop
fidiv
and
jl
cmp
xor
inc
outs
psrlw
ss
rcl
(bad)
mov
shr
jmp
mov
repnz
mov
daa
std
mov
push
mov
pop
stos
adc
mov
aad
xchg
cpuid
and
movs
sub
mov
call
pop
retf
cdq
std
jl
mov
xchg
imul
xor
and
stc
scas
inc
icebp
cmps
fdiv
scas
cmp
cmp
mov
out
pop
loop
mov
inc
mov
jg
or
shr
inc
push
pop
ret
(bad)
gs
gs
pop
inc
ret
sub
and
iret
es
or
mov
jno
sub
sub
shr
and
fmul
adc
xor
clc
jmp
mov
dec
daa
xchg
mov
push
fs
cmps
(bad)
mov
push
sub
sbb
into
or
push
push
jne
dec
push
or
jecxz
cmp
dec
mov
mov
lock
inc
movs
cmc
or
jmp
scas
adc
stos
xor
fadd
or
stos
scas
add
std
sub
(bad)
ja
adc
fild
jecxz
mov
pop
aad
push
xor
adc
daa
jno
xor
sbb
add
xchg
cmp
fcom
repz
arpl
jl
pop
add
dec
fisttp
lea
in
inc
sbb
dec
push
movs
mov
mov
(bad)
out
test
lods
cdq
stos
xchg
push
leave
jg
fs
pop
and
jp
xor
or
jg
and
shr
jl
push
imul
call
js
aad
es
sbb
sbb
(bad)
fidivr
ja
xlat
push
dec
cli
in
scas
cmc
lahf
retf
stc
arpl
pop
inc
mov
cmps
test
dec
test
jmp
push
pop
cld
inc
jg
jp
mov
dec
in
test
ja
xchg
inc
xchg
pop
inc
ret
int3
jmp
adc
fnstsw
push
sbb
jnp
sub
cld
dec
inc
ds
shr
push
push
jg
shl
pop
icebp
jmp
mov
pop
xor
leave
clc
je
nop
lea
jae
and
leave
dec
ja
sub
fiadd
jae
inc
out
mov
daa
aam
or
mov
sub
or
lea
xchg
movs
inc
fisttp
mov
add
retf
sahf
les
push
adc
xchg
jmp
push
jb
xchg
mov
pop
mov
xchg
fcomp
xor
adc
sbb
mov
outs
sbb
pop
inc
push
fldenv
sbb
rcr
cmps
cli
mov
sbb
xchg
jne
jg
cmp
popf
mov
jmp
mov
jb
mov
mov
cli
jl
inc
pop
jg
push
nop
pop
jp
adc
cmp
fcom
xchg
dec
ret
cli
xchg
sbb
cmp
xchg
add
sbb
retf
pop
sbb
dec
adc
sbb
sbb
les
mov
sahf
arpl
sub
mov
mov
shl
cli
add
rol
stos
cmps
push
ins
shr
imul
adc
in
in
mov
cmp
(bad)
stc
adc
jns
jo
jge
pop
int
push
adc
fdivp
dec
mov
or
imul
in
mov
push
xor
xchg
ror
lds
adc
fcmovnbe
push
rcl
arpl
jmp
push
xchg
cmps
in
fnstenv
pop
shl
std
adc
push
xor
test
arpl
ror
xchg
inc
adc
dec
mov
or
pop
add
scas
inc
sub
mov
lahf
test
rcl
ja
cmc
push
enter
jae
cdq
dec
dec
lahf
push
xchg
cmp
jp
lods
jge
mov
or
clc
jb
(bad)
fldenv
fcmovnb
sbb
pop
aaa
adc
jno
mov
das
rcl
and
aas
add
sahf
rcr
gs
mov
dec
and
push
xor
pop
sub
mov
(bad)
fidivr
das
ins
mov
daa
les
lds
adc
in
lods
je
jnp
pop
push
mov
jmp
cmp
into
cmc
ror
or
lds
add
mov
mov
ret
add
push
ja
rol
int3
cwde
inc
nop
push
scas
dec
into
inc
xor
adc
rcr
rcl
mov
push
push
cli
adc
mov
sbb
int3
int3
pop
adc
cdq
xchg
sub
pop
jo
fs
dec
cmp
sub
imul
push
or
test
xlat
add
inc
test
outs
mov
mov
pusha
ja
int3
ja
outs
or
imul
int
mov
jge
lods
mov
loopne
aas
adc
push
(bad)
imul
sar
adc
or
inc
loope
adc
(bad)
inc
xor
mov
lods
or
jp
addr16
dec
or
fbstp
add
dec
xchg
mov
fisubr
pop
pop
loop
popf
lds
xchg
fild
leave
fild
call
adc
jae
xchg
xor
lods
test
leave
ds
xor
in
scas
out
stos
fwait
dec
cli
in
sbb
mov
hlt
cs
and
push
and
test
retf
ds
add
ror
clc
mov
mov
mov
in
test
mov
cmp
cld
or
mov
xor
(bad)
imul
dec
rol
nop
or
or
test
push
loope
add
mov
pop
xchg
out
sub
dec
push
pop
push
movs
pop
and
enter
mov
sub
jno
xchg
push
aad
shl
pop
out
dec
and
cmps
jl
cmp
inc
iret
jmp
rcl
dec
sar
mov
jp
jp
jle
xlat
push
nop
lds
add
xchg
lds
je
sbb
mov
or
sbb
sub
retf
ret
inc
jmp
or
xor
mov
sub
icebp
xor
mov
mov
cmc
xlat
cmovp
pop
xchg
in
adc
fwait
dec
xor
leave
aad
stos
cmp
or
dec
fs
jns
loope
stos
pop
and
pop
jmp
(bad)
cmp
les
aas
mov
dec
aad
cld
(bad)
xor
jbe
retf
call
stc
inc
dec
push
push
adc
jmp
dec
fs
push
repnz
rol
pusha
push
daa
pop
sub
push
int
and
pop
pop
out
loope
imul
dec
and
les
inc
enter
in
sub
pop
jmp
enter
lock
movs
hlt
push
sar
mov
out
push
mov
dec
out
push
fisub
xor
xchg
retf
add
idiv
push
sbb
sub
add
test
icebp
sbb
mov
ror
clc
(bad)
shl
add
repz
dec
ins
jno
and
push
ret
mov
pop
test
lea
dec
or
jnp
aam
jmp
and
scas
dec
mov
cmp
and
dec
ins
xor
dec
ss
stc
add
sub
mov
xor
lods
cmp
dec
leave
mov
(bad)
mov
dec
(bad)
mov
sub
icebp
xor
pop
add
cmp
jnp
pop
push
inc
cmovl
mov
sahf
mov
(bad)
mov
inc
mul
mov
arpl
out
test
mov
fcmovnu
sar
dec
add
sar
outs
scas
or
cld
mov
sub
test
push
or
inc
and
pop
adc
sub
pop
mov
aam
aad
or
xor
pop
jp
lahf
add
mov
pop
push
xchg
pop
das
lods
out
push
sub
cdq
cmp
or
dec
dec
cdq
adc
rcl
ds
jbe
dec
fwait
mov
mov
leave
mov
aaa
adc
or
inc
xchg
cmp
(bad)
(bad)
ds
cmp
sbb
mov
in
test
push
test
scas
ret
mov
stos
jmp
xlat
inc
ja
cmp
in
gs
repnz
mov
mov
pop
ins
inc
sbb
push
cmps
clc
jno
sbb
daa
int
(bad)
mov
inc
cs
xchg
push
int
sti
xlat
sub
out
xchg
fild
inc
fcomp
sub
ins
or
dec
(bad)
fcmovne
mov
sbb
mov
pop
pop
aam
imul
test
stc
lahf
xor
inc
xchg
call
mov
mov
cmp
les
mov
in
dec
jle
jb
mov
outs
jp
sub
punpckhbw
mov
mov
sbb
rcr
xchg
inc
sub
pop
mov
(bad)
mov
cmps
outs
push
aam
clc
js
in
xchg
mov
push
je
xchg
ror
push
inc
fucom
push
std
jl
sbb
or
repnz
push
jmp
xor
push
xchg
popf
push
push
xor
loopne
outs
fmulp
in
sub
pusha
jbe
movs
xor
and
test
and
(bad)
xlat
dec
sbb
out
push
mov
sub
lahf
repz
sbb
xchg
mov
jbe
test
mov
mov
popa
inc
call
es
rcl
pusha
sbb
sub
stos
mov
imul
cs
cmp
cmp
jns
mov
cmp
add
enter
inc
xchg
pushf
ss
mov
lods
pusha
ins
inc
fdivr
fwait
int3
mov
inc
jl
fidivr
fld
cld
xchg
jmp
into
bound
jecxz
sub
vphaddbq
popf
jmp
mov
and
mov
fwait
xlat
sahf
adc
jl
cwde
popf
jo
cmp
mov
sub
add
fyl2x
cmp
movs
pop
sti
je
mov
sbb
in
pop
inc
and
les
mov
xlat
cdq
inc
pop
pop
imul
sbb
inc
(bad)
mov
push
arpl
adc
pusha
movs
fbstp
cmp
outs
jmp
mov
and
sar
mov
lea
aam
pop
or
sbb
xchg
push
adc
repz
ret
jp
sub
outs
pop
rol
sbb
addr16
mov
jne
cmc
ja
push
je
push
push
and
push
cmp
dec
mov
mov
(bad)
js
ins
adc
and
inc
leave
movaps
daa
movs
test
sbb
and
aaa
adc
aas
imul
xor
and
inc
pop
(bad)
push
mov
or
cmp
or
jae
pop
addr16
in
fmul
adc
dec
dec
and
adc
mov
repz
push
mov
sar
jnp
movs
lock
and
fs
sub
push
loopne
pop
movs
aam
pop
mov
inc
retf
mov
lods
leave
mov
mov
cmp
mov
outs
scas
pop
or
popf
pop
movs
ds
push
sub
mov
call
adc
(bad)
and
pop
mov
or
sar
retf
lods
out
xchg
fnstsw
sub
jp
push
jnp
pop
or
sbb
fcmove
sub
cli
dec
ja
scas
rep
xor
ins
xor
push
jne
cmps
inc
lahf
adc
pop
mov
sbb
mov
cmp
mov
aad
lds
pop
scas
mov
xchg
and
push
mov
push
sti
iret
pop
enter
out
repnz
into
sahf
cwde
lods
cld
cmp
in
inc
mov
xor
mov
clc
or
rcr
outs
enter
sub
pop
out
jae
push
cdq
rcr
sub
fstp
adc
jp
sbb
mov
inc
ins
push
push
sbb
in
jb
(bad)
add
aam
xor
mov
pop
or
cmc
ret
sar
retf
ror
dec
push
mov
xchg
jl
cmps
mov
inc
test
out
mov
sahf
pop
adc
xchg
adc
into
je
repz
in
inc
test
hlt
push
push
in
rcr
push
mov
div
in
mov
adc
out
mov
and
and
jne
sub
push
jbe
or
test
(bad)
mov
inc
repnz
bound
sub
loopne
lea
pop
pusha
sub
xchg
push
enter
js
xor
fsub
jbe
add
xor
icebp
pop
jns
sbb
mov
into
jno
push
pop
dec
adc
stc
ds
hlt
push
aaa
stos
add
mov
sbb
scas
push
outs
pop
imul
cmp
lock
mov
sub
popf
cwde
jle
test
rcl
scas
int
or
cmp
xor
outs
mov
inc
lods
cld
jae
add
cmp
pop
pop
sub
call
cs
fwait
push
jg
mov
sub
add
ins
test
popf
mov
pop
xchg
sbb
cs
push
repnz
popa
add
ja
xchg
xchg
sar
push
outs
jb
add
mov
or
js
mov
fwait
xchg
retf
fmul
hlt
pop
add
dec
mov
cwde
pop
sti
ds
xor
pusha
xor
xor
call
dec
frndint
imul
mov
jb
out
stc
jl
sar
sti
mov
jno
imul
and
sub
inc
inc
xor
pusha
adc
je
push
dec
out
cld
mov
add
idiv
inc
out
xchg
out
fwait
cmp
push
inc
gs
int
fldcw
jle
xlat
call
or
push
pop
into
call
pop
mov
not
add
and
jnp
xchg
(bad)
aas
cmps
(bad)
mov
or
js
inc
sti
mov
sbb
sbb
inc
pop
dec
dec
jno
cmps
movs
mov
dec
mov
add
and
cmc
or
hlt
pop
leave
xor
sahf
clc
push
dec
jecxz
xor
jo
sbb
push
pop
mov
inc
jmp
dec
fsubr
stos
mov
or
imul
cli
leave
sar
jmp
mov
dec
ja
aas
lods
ret
pop
adc
fild
jmp
mov
(bad)
inc
nop
pop
out
jecxz
push
pop
out
xchg
ins
sbb
xchg
or
ins
sbb
sub
add
xchg
inc
fucomp
jge
(bad)
pop
xlat
push
inc
movs
cwde
cmps
(bad)
retf
dec
mov
retf
inc
xchg
leave
rcl
cld
lods
leave
(bad)
and
push
mov
icebp
sbb
jnp
pop
lods
push
mov
retf
int3
mov
lea
pop
cli
xlat
pop
arpl
cmc
xchg
add
popa
mov
xlat
adc
cmp
outs
push
pop
add
leave
and
(bad)
fwait
sbb
test
cdq
add
repz
and
push
add
pusha
sbb
or
into
hlt
loop
inc
repz
loop
je
enter
mov
mov
or
inc
push
jne
leave
mov
shl
sub
bound
iret
adc
cwde
cmp
fiadd
pop
or
push
xchg
(bad)
jmp
aaa
lock
inc
cld
ret
cmc
in
lock
inc
mov
and
popa
test
jg
fmul
test
(bad)
fld
xor
inc
push
xor
ret
add
rol
loopne
sbb
int3
(bad)
arpl
dec
xchg
test
scas
imul
or
es
sub
xor
mov
movs
or
jmp
gs
sahf
cmp
sbb
mov
pop
sub
(bad)
jb
lods
arpl
add
pop
and
push
xchg
mov
dec
dec
mov
sub
and
aas
xchg
iret
dec
inc
(bad)
and
(bad)
lock
xlat
in
adc
mov
addr16
sbb
pop
lods
dec
maxps
sub
lds
mov
push
js
lods
dec
cmp
xacquire
pop
mov
or
and
dec
les
sbb
xor
or
retf
ds
cmps
jne
sub
outs
add
adc
mov
jle
jle
es
lahf
push
jmp
sti
(bad)
cmps
clc
movs
pop
bswap
jno
xor
sbb
mov
inc
lods
mov
lea
inc
cld
mov
aam
(bad)
enter
jle
dec
in
sub
adc
repnz
push
jbe
push
mov
jl
jb
and
ret
mov
loopne
jp
adc
sub
add
dec
or
cmp
or
in
xchg
ret
or
adc
jno
cmp
jmp
repz
aad
rol
cld
mov
push
push
jmp
mov
es
(bad)
test
fnsave
retf
cmp
loopne
fdiv
mov
xlat
iret
aas
pop
sub
dec
sbb
jmp
mov
xchg
lds
icebp
scas
dec
xor
jp
je
sub
in
push
cwde
pop
or
fsubp
repz
adc
sbb
xchg
jne
enter
mov
sbb
xchg
add
push
popf
in
fld
jecxz
push
or
pop
xchg
out
cmp
popa
hlt
xor
mov
adc
enter
ret
dec
std
mov
jae
sbb
mov
cwde
push
jecxz
scas
pop
js
dec
pop
add
ficomp
fld
xor
jnp
lds
or
outs
jb
pop
jge
mov
dec
movs
mov
xchg
jno
aaa
das
jp
(bad)
test
adc
sub
mov
pop
outs
mov
in
sbb
mov
stc
fistp
sub
(bad)
fstp
adc
ja
fidivr
mov
push
and
sar
inc
shr
push
fist
shr
push
imul
mov
daa
lahf
lea
xor
cmp
mov
jmp
aas
mov
mov
pop
jle
dec
jae
add
jo
scas
inc
push
outs
pop
mov
push
add
int
ficom
(bad)
into
movs
push
nop
mov
pop
jnp
aaa
lahf
push
into
mov
xor
sahf
loope
or
or
mov
(bad)
push
inc
aaa
cmc
xor
loopne
lahf
stos
int
xchg
mov
cld
aaa
inc
ret
pop
mov
stc
leave
mov
push
popfw
shr
jl
adc
mov
xchg
fcmove
cmp
ins
jae
cmp
aam
add
arpl
mov
in
inc
add
mov
mov
fnsave
or
mov
push
inc
xchg
pop
fldenv
out
clc
sbb
cmc
and
jb
push
adc
mov
inc
cs
(bad)
addr16
push
ficomp
cmps
mov
sti
test
inc
or
jns
push
in
cmc
fimul
mov
pop
push
mov
add
dec
xor
scas
stos
push
test
in
or
jl
or
aaa
ds
daa
jg
sar
sub
(bad)
fcomp
(bad)
(bad)
scas
cmps
or
adc
loope
cmp
adc
out
packssdw
adc
push
pop
mov
call
mov
dec
shr
and
retf
shr
pop
sub
pop
mov
pop
call
nop
xlat
mov
sub
push
(bad)
stc
jmp
loope
(bad)
leave
cmp
adc
outs
dec
std
lds
fsubr
mov
test
test
cmp
jge
outs
sar
retf
push
jo
inc
mov
mov
dec
test
inc
fwait
and
loopne
in
sub
(bad)
jo
push
or
push
xchg
mov
out
and
mov
sti
jl
inc
mov
(bad)
cdq
rcl
das
sub
aas
popa
scas
push
pushf
ins
pop
sub
ret
mov
shr
rcr
out
pop
jmp
cdq
mov
mov
sbb
fild
and
mov
jl
arpl
inc
jne
je
pop
test
mov
add
jb
inc
(bad)
pop
mov
sahf
mov
imul
adc
mov
inc
mov
ret
jns
rcl
or
cmp
pop
iret
mov
sub
pop
daa
shl
mov
jge
ds
mov
xchg
or
and
ds
push
push
pop
or
or
imul
das
xchg
cmps
bound
retf
(bad)
cmp
dec
push
cs
repz
das
mov
sbb
popf
mov
gs
dec
stos
pop
xlat
push
int
and
movs
int3
jo
ds
ins
dec
cli
shl
sahf
and
push
(bad)
test
retf
test
hlt
add
push
(bad)
outs
push
loop
data16
cld
stos
xor
je
pop
xchg
mov
push
mov
stos
mov
sar
cmp
std
push
es
xor
sti
fst
sbb
es
mov
(bad)
pop
pop
mov
add
aaa
aaa
sti
into
retf
loopne
(bad)
nop
adc
loope
jno
sub
es
fs
sahf
pop
cs
pop
das
cld
or
cmp
repz
cvtps2pi
dec
int3
cld
bound
div
jle
mov
xchg
(bad)
jns
sahf
cld
adc
mul
xor
scas
clc
jg
loopne
or
shr
adc
cmp
push
fs
movs
aad
in
clc
mov
add
loope
and
mov
dec
dec
leave
cmp
(bad)
xor
(bad)
jl
pop
dec
dec
fld
inc
or
cmovl
cli
mov
or
clc
pop
fcomp
jp
inc
push
retf
mov
aam
sahf
jl
sti
xor
adc
mov
loopne
add
mov
aas
les
pop
ret
jge
sbb
cmp
loopne
popf
pop
std
cmp
lock
mov
inc
out
mov
push
mov
outs
mov
(bad)
or
cmp
and
inc
cmp
gs
jno
push
paddusw
mov
scas
neg
nop
sbb
xlat
pop
fwait
lea
mov
repz
sbb
ror
xor
sahf
outs
idiv
fisttp
bound
fdivr
and
inc
lods
(bad)
or
dec
adc
(bad)
in
add
(bad)
mov
sbb
repz
aas
pop
out
cs
inc
scas
push
sub
shl
xchg
pop
add
mov
jb
mov
fidivr
cmp
shl
sub
ret
dec
and
ret
dec
loope
addr16
mov
jp
pop
ins
jne
xchg
ins
rcl
outs
repz
dec
jns
ror
arpl
imul
fisttp
push
lods
push
and
sub
addr16
ret
out
into
in
cld
add
xor
jp
in
in
imul
cdq
xchg
shl
mov
bound
push
dec
pop
jmp
cdq
imul
xor
dec
int
shl
div
ja
je
mov
(bad)
or
add
movs
or
loopne
ds
mov
xor
data16
xchg
push
jmp
int3
stos
(bad)
mov
add
cmps
int
sub
(bad)
test
jns
jmp
daa
(bad)
mov
jle
popf
(bad)
xlat
push
adc
adc
jmp
jno
mov
push
fisub
call
(bad)
and
inc
pop
data16
cmp
fwait
ret
clc
jno
pop
push
inc
cmps
leave
cmps
mov
or
jbe
ss
lods
xlat
popa
cs
or
leave
inc
jmpw
sub
dec
dec
mov
jns
rcr
xchg
iret
sub
fisub
fisub
sub
adc
sbb
jge
jecxz
enter
daa
add
adc
push
mov
lods
cmp
mov
fst
loop
pushf
xlat
arpl
inc
cmp
or
mov
jle
hlt
mov
mov
push
mov
or
mov
dec
sbb
mov
dec
and
lods
ins
mov
iret
lock
jle
dec
fistp
shl
ds
cmps
imul
jmp
adc
sub
cmp
dec
imul
daa
xchg
cmc
je
jle
xchg
jb
dec
inc
xchg
cmps
mov
ins
pop
shr
sti
mov
cdq
mov
or
out
test
mov
mov
mov
xor
mov
daa
test
xor
cwde
pop
sub
jge
icebp
movs
cmp
out
push
mov
adc
push
mov
repnz
je
push
cmp
shl
pop
sub
push
mov
mov
and
mov
into
(bad)
sub
pop
mov
rcr
lea
hlt
int
push
scas
add
cmp
fst
push
mov
mov
inc
xchg
shl
and
and
lods
clc
mov
cld
pop
and
xchg
sbb
and
add
mov
push
hlt
test
mov
sar
in
bound
std
ds
and
out
fwait
xchg
mov
(bad)
xlat
ins
popa
add
xor
jge
or
(bad)
arpl
lods
jns
and
ja
push
push
(bad)
std
fsub
lods
sub
cmp
add
push
adc
xchg
std
sbb
adc
dec
scas
sti
sbb
xchg
dec
sbb
mov
push
xor
out
shr
push
xor
push
and
and
and
mov
jns
shl
dec
pop
or
dec
jae
xchg
and
cmp
ja
xchg
and
xchg
mov
into
mov
mov
mov
lock
outs
loope
pop
mul
dec
push
push
push
and
pop
push
pop
cmp
adc
jle
aaa
push
mov
sti
mov
or
or
test
repz
adc
mov
mov
mov
pop
push
mov
mov
iret
push
mov
cmp
jmp
(bad)
(bad)
lods
mov
xor
pop
pop
sbb
xor
or
(bad)
(bad)
adc
pop
mov
adc
push
pusha
mov
mov
outs
ror
xor
dec
mov
ret
(bad)
idiv
pusha
lods
test
jmp
adc
leave
das
fs
mov
xchg
fstp
enter
mov
hlt
dec
test
xor
push
cmp
cwde
jmp
lock
mov
jmp
adc
jns
cwde
loope
fwait
or
jne
int
mov
push
jbe
sub
nop
inc
shl
sbb
sub
cmp
mov
fiadd
(bad)
adc
add
push
lds
jns
(bad)
fwait
or
mov
(bad)
pop
mov
cmc
push
adc
std
mov
aad
rcl
adc
out
pushf
jle
push
jnp
push
repz
aas
aaa
jmp
sti
(bad)
(bad)
test
mov
mov
ja
or
dec
(bad)
sub
gs
test
std
push
stc
mov
out
and
jecxz
cdq
cmps
movs
dec
cmp
mov
sbb
mov
int
or
aad
add
cmp
jo
cmp
lock
inc
loopne
mov
loopne
cmp
mov
(bad)
mov
mov
outs
daa
movs
cmp
push
inc
jmp
mov
dec
retf
sti
fadd
(bad)
mov
pop
mov
fstp
fwait
add
stos
sahf
or
in
lods
test
xchg
sub
leave
repz
rol
in
icebp
mov
fwait
aaa
in
push
bound
cmc
jge
jg
sbb
rol
stos
data16
in
sahf
sub
sub
xlat
adc
sahf
pop
dec
int
dec
cld
call
jg
xchg
xor
stos
hlt
pop
add
inc
gs
mov
adc
lock
push
push
sbb
xlat
inc
bound
sub
idiv
out
cmc
jle
and
push
shr
mov
push
test
lods
mov
pop
mov
jp
dec
movs
add
sar
jl
mov
cmp
mov
ret
test
test
shl
outs
jns
(bad)
loopne
dec
xchg
scas
pop
push
js
jb
jge
sar
pop
aad
fnstenv
xchg
push
mov
cmp
jle
add
and
out
jmp
ja
loopne
adc
push
xchg
lahf
call
xchg
mov
inc
imul
fwait
dec
ins
adc
(bad)
pop
outs
mov
xor
call
shl
pop
test
rol
pop
mov
(bad)
add
add
pop
mov
jno
fs
push
scas
mov
pushf
(bad)
xchg
add
sbb
fs
cmps
push
inc
outs
dec
add
cmc
arpl
lods
and
sbb
into
es
fsubr
xor
lea
sbb
mov
dec
iret
ror
test
push
(bad)
cmp
xor
pop
into
adc
mov
stos
jnp
mov
daa
cmp
out
pop
pop
jecxz
add
push
pop
movs
lds
stc
fistp
ret
pop
rcr
dec
test
dec
xor
fwait
adc
ret
jnp
jb
lds
mov
ins
xchg
into
data16
inc
rcl
call
mov
movs
test
mov
cmp
inc
call
nop
rol
jnp
mov
imul
icebp
fcomp
xor
fld
mov
cld
mov
xor
xor
idiv
icebp
lods
pop
dec
jg
sub
imul
or
xchg
(bad)
ja
inc
inc
inc
cs
mov
add
cmp
scas
and
adc
jp
jmp
rcl
or
inc
jnp
sbb
imul
es
cmp
add
mov
imul
jae
dec
fs
add
jmp
bound
js
bound
xlat
pusha
lea
add
rcr
test
pop
jbe
jp
(bad)
aam
gs
xchg
(bad)
pop
pop
rol
ret
and
sub
mov
ret
dec
xchg
mov
cmp
mov
addr16
inc
dec
and
and
push
retf
cmp
shr
shl
cmp
popf
jmp
dec
stos
cs
fcmovnu
scas
ja
cdq
popa
sahf
cmp
mov
(bad)
sub
std
push
or
ret
mov
mov
(bad)
push
and
xor
and
pushf
aad
push
aad
jne
sub
mov
dec
out
sti
(bad)
mov
outs
push
mov
in
ja
pop
xchg
shl
push
push
pushf
(bad)
in
push
in
ret
fsubr
das
lods
lods
or
and
faddp
in
and
loope
jmp
cmp
scas
push
stos
rol
mov
inc
dec
int
sbb
add
lods
push
inc
(bad)
fwait
lds
xchg
data16
out
or
and
hlt
push
test
or
outs
dec
rep
push
pushf
je
xchg
push
repnz
mov
daa
jno
push
adc
push
sar
ret
push
xchg
stc
or
cmp
mov
(bad)
jle
inc
push
jecxz
sub
dec
xchg
jmp
xor
scas
enter
lods
imul
push
jge
fbld
jno
cmp
rol
js
sub
test
inc
mov
mov
fwait
movs
xor
mov
mov
mov
jns
pop
(bad)
popf
mov
sbb
add
add
test
push
jecxz
movs
or
retf
fisubr
or
jmp
sar
pop
imul
mov
es
(bad)
mov
and
jmp
cmps
or
add
mov
outs
nop
pop
fcom
and
dec
cmp
and
dec
push
mov
lea
mov
jmp
mov
aam
mov
outs
jg
fwait
adc
in
dec
cmp
movs
push
xchg
loope
(bad)
cmp
and
jbe
mov
mov
into
xchg
xor
xor
imul
push
les
xchg
cmp
sub
sub
jbe
inc
push
ret
dec
jbe
fimul
lods
int
retf
and
jp
adc
sbb
adc
and
inc
(bad)
outs
pop
pusha
lods
lods
in
sti
or
push
and
sub
mov
jp
in
xchg
mov
cmp
cmp
cmp
mov
retf
(bad)
cmc
ret
inc
mov
adc
mov
stos
pop
dec
jno
mov
outs
xlat
dec
hlt
ds
jge
fcom
cdq
dec
scas
mov
mov
push
sti
add
es
enter
retf
gs
mov
retf
pop
mov
daa
test
mov
cli
int3
mov
mov
sbb
call
xchg
xchg
cdq
inc
jmp
mov
xlat
dec
out
xchg
pop
pop
movs
movs
pop
mov
mov
shl
mov
sbb
call
addr16
mov
jl
mov
xlat
sbb
ja
jmp
in
retf
and
mov
jb
(bad)
or
ds
cmc
xchg
pop
ss
fcmovnb
or
sub
xor
hlt
mov
cmp
sbb
jbe
mul
mov
jbe
mov
xor
add
jns
xlat
in
lock
xchg
in
lock
aam
cmp
je
sbb
in
pop
std
adc
adc
test
xlat
add
cs
pop
imul
mov
dec
hlt
xor
mov
int
addr16
iret
fs
inc
aad
mov
arpl
out
rcl
ja
pop
dec
mov
mov
stc
shl
mov
inc
fidiv
mov
cmp
mov
push
xor
fwait
retf
out
and
fdivr
jb
xor
dec
(bad)
in
add
cmp
stos
ds
out
popf
mov
add
into
in
pop
(bad)
ficom
sahf
pusha
dec
cmp
or
cmp
hlt
xor
inc
jle
dec
mov
int3
xchg
or
out
es
scas
mov
test
push
jno
cmp
sub
and
stos
sub
push
mov
pushf
in
je
xlat
retf
mov
push
test
sbb
mov
mov
inc
(bad)
jae
adc
test
imul
xor
add
imul
fisubr
or
jb
neg
pop
scas
(bad)
or
jmp
or
adc
inc
and
jb
jno
stc
inc
fdivr
dec
loope
data16
popf
icebp
in
pop
div
movs
int3
xchg
adc
nop
sti
out
fwait
xor
shl
jne
add
aaa
out
push
out
leave
(bad)
or
sar
arpl
pop
adc
jns
popa
scas
nop
or
mov
inc
call
cmp
je
sti
push
fwait
push
ffree
push
mov
jmp
enter
jp
in
sbb
sub
jnp
cld
jo
mov
icebp
jp
cmc
and
mov
retf
inc
lahf
push
mov
mov
and
arpl
mov
loop
aad
adc
dec
xlat
inc
add
or
inc
sar
jns
xor
xchg
scas
call
(bad)
popf
sbb
dec
push
sbb
jbe
cwde
data16
dec
inc
test
test
adc
mov
bound
inc
iret
add
adc
or
add
rol
jp
out
out
es
cmp
iret
fs
dec
lods
sbb
aam
jb
pop
daa
or
pushf
mov
jp
mov
jo
jb
jnp
jmp
out
sub
cmp
mov
mov
sbb
hlt
je
in
inc
and
call
push
push
(bad)
push
daa
push
ins
in
sti
pop
xor
pop
fidiv
mov
inc
lds
loopne
push
pop
dec
adc
popf
arpl
mov
and
test
push
jg
mov
hlt
jbe
pushf
push
mov
or
cmp
aas
hlt
mov
sahf
jmp
jmp
loope
xor
scas
add
movs
jecxz
xlat
in
dec
adc
xor
push
mov
movs
shl
mov
push
shl
pop
dec
icebp
adc
repz
cmp
mov
nop
dec
or
jnp
jb
mov
fiadd
mov
out
sbb
inc
retf
test
mov
mov
add
fwait
jne
dec
inc
paddw
fild
ins
into
cmp
out
pop
scas
lahf
inc
dec
(bad)
dec
add
fnsave
adc
cli
into
jp
les
cld
cwde
and
add
or
clc
dec
and
cs
popf
mov
in
mov
ret
cwde
daa
jmp
ret
sbb
ins
dec
mov
mov
lock
or
inc
das
test
xchg
adc
or
fwait
cs
cli
xchg
repz
lock
xchg
test
mov
arpl
jp
test
call
out
pop
scas
cdq
pop
or
mov
fst
push
stos
int
dec
jmp
xchg
cmp
std
xchg
jmp
test
push
mov
dec
imul
rol
xor
fild
mov
inc
inc
test
aam
movs
pop
sub
leave
jae
sub
mov
fs
cmp
sti
fisub
repz
imul
lea
sub
sub
dec
add
scas
mov
es
(bad)
fisttp
iret
sbb
adc
xchg
idiv
mov
xchg
retf
add
jecxz
push
arpl
mov
fwait
dec
cmp
mov
push
cmc
int3
dec
lahf
adc
cmp
mov
mov
xor
push
dec
pop
mov
cmps
xor
push
lds
xor
pop
(bad)
repnz
xor
mov
es
aaa
into
sbb
out
stos
xor
push
icebp
int
call
leave
clc
jp
stos
les
push
hlt
mov
(bad)
outs
clc
push
mov
lds
sbb
in
movs
test
mov
repnz
lods
iret
pop
xchg
sahf
rcl
fsub
push
cli
cmps
sub
inc
push
adc
mov
mov
adc
ja
xor
xchg
inc
dec
jne
adc
daa
ss
rol
shr
into
add
je
jl
mov
sub
xchg
rcl
and
repz
cs
bound
int
adc
cmps
(bad)
sbb
fcomip
pop
lock
fs
inc
push
sbb
xor
jae
std
leave
or
cwde
cmp
cld
and
mov
les
mov
lock
adc
pop
jne
mov
mov
bound
sbb
add
jl
call
mov
aaa
dec
je
adc
scas
add
test
mov
mov
es
sbb
adc
inc
test
stos
fld
pop
jmp
add
in
popf
stos
xchg
xchg
add
jecxz
push
daa
ret
sub
sbb
jge
xchg
adc
je
out
movs
data16
sub
sbb
cmp
lds
shr
mov
mov
cmp
push
enter
adc
sbb
xor
daa
idiv
ins
jecxz
mul
movs
cmp
lds
scas
jp
sbb
call
(bad)
sub
cld
xchg
dec
jnp
push
mov
or
fimul
inc
and
add
or
mov
mov
clc
test
jae
and
mov
mov
bound
or
outs
dec
push
fsub
rol
inc
gs
jle
jp
mov
mov
aaa
scas
or
or
push
fcomp
or
sbb
inc
mov
retf
dec
int
out
jp
sbb
gs
(bad)
movs
inc
arpl
pop
sub
stos
dec
lahf
shl
dec
iret
inc
imul
lea
cmp
push
add
and
or
adc
outs
repz
jb
sub
pushf
xchg
sbb
in
call
mov
das
fs
call
aam
inc
bnd
and
adc
dec
into
ds
sub
xchg
lods
add
xchg
xlat
or
or
lds
mov
adc
imul
test
arpl
push
mov
cmp
pop
push
push
cli
adc
lock
in
ds
icebp
lods
rol
and
adc
push
xchg
ret
fcomp
mov
mov
out
cs
into
cmp
pushf
inc
neg
repz
xchg
cli
pop
xlat
(bad)
mov
test
nop
cld
jp
leave
mov
xor
cld
inc
aaa
ds
mov
cli
je
loop
out
fiadd
dec
ja
xor
(bad)
aaa
push
rcl
adc
push
iret
add
pushf
dec
frstor
pushf
fadd
mov
and
(bad)
std
pop
or
cmps
xchg
clc
xor
adc
pop
push
das
cmc
inc
inc
or
cmp
inc
call
mov
adc
adc
(bad)
pop
sbb
mov
in
sbb
aad
mov
xor
leave
mov
xchg
aas
scas
dec
hlt
imul
call
and
int3
push
jnp
movs
mov
sub
xor
cli
or
imul
cmp
sub
shl
cld
add
or
fnstsw
int3
sub
sub
aam
rcr
dec
adc
xchg
push
adc
out
punpcklwd
mov
stos
add
test
(bad)
add
add
sub
xchg
or
sbb
mov
add
pop
fwait
jl
dec
aam
cmp
xor
cmps
xor
cmps
jno
add
addr16
cli
fsub
pop
repnz
xchg
shl
cmp
pop
ficom
mov
rol
lea
or
xlat
push
test
es
inc
lock
pop
adc
movs
jbe
sbb
scas
data16
call
lock
push
jne
in
mov
add
ror
aas
push
(bad)
jmp
push
fnstcw
int
retf
cdq
lahf
repz
pop
into
test
loope
sahf
push
add
add
add
addr16
enter
movs
pop
(bad)
jns
cs
sub
ins
xchg
iret
push
add
ret
xchg
ror
aaa
jmp
imul
pop
jmp
repnz
mov
enter
jg
ja
(bad)
cmps
jo
ds
repz
retf
icebp
lods
mov
jbe
movs
or
fwait
push
cmps
mov
pop
jl
or
jp
scas
mov
and
mov
fst
xor
pop
xor
in
mov
cli
cli
test
mov
jnp
add
(bad)
mov
add
(bad)
ror
int3
fcom
pop
pop
dec
pop
outs
mov
xor
js
pushf
add
repz
sub
add
mov
cld
add
push
and
lods
and
mov
daa
or
out
test
or
out
sbb
(bad)
nop
psrlq
cdq
inc
inc
dec
mov
in
mov
adc
dec
dec
xchg
(bad)
xchg
fwait
add
out
test
xchg
(bad)
ins
ds
popa
test
push
xor
repnz
ds
jle
data16
jg
push
imul
cmps
push
fdivr
into
fist
jmp
add
inc
mov
lds
add
(bad)
pop
out
push
cmp
gs
push
loop
scas
movs
sub
(bad)
aad
push
repnz
addr16
fcom
push
mov
push
and
xchg
jae
or
sub
jns
dec
mov
fimul
cmp
int3
mov
(bad)
pop
out
pop
dec
shl
or
mov
jg
int3
stos
ins
js
adc
xlat
mov
push
pop
xlat
sub
xchg
out
and
push
push
cmp
cld
or
sbb
xor
ret
pop
retf
cmps
mov
sti
test
imul
inc
dec
enter
pop
mov
pop
cld
sbb
stos
pop
cs
cmps
push
stc
xchg
imul
ja
fwait
aaa
das
int3
js
and
imul
adc
(bad)
mov
cmp
xchg
stos
sub
adc
jp
in
mov
ret
test
cmovne
sbb
mov
lea
rcl
out
test
in
je
dec
adc
sbb
aad
arpl
and
jns
out
rol
call
cmp
mov
add
or
lock
ds
cmp
mov
(bad)
dec
jecxz
xchg
xlat
push
ins
fcmovb
test
loope
scas
add
repz
push
movs
loop
mov
pusha
mov
fs
mov
fwait
mov
or
in
push
jmp
sbb
and
xchg
test
or
and
std
shr
fmul
(bad)
leave
lock
xchg
dec
or
cli
stc
jb
jno
push
fild
and
fmul
xchg
je
rol
movs
push
out
test
jbe
and
test
adc
outs
push
sub
(bad)
push
popf
adc
inc
adc
ds
jmp
sbb
push
loop
lock
add
adc
repz
pop
jl
bound
ds
pop
cmp
add
icebp
ror
sbb
adc
(bad)
mov
es
add
aaa
(bad)
lock
adc
add
sti
jae
or
jne
pop
jno
mov
pop
mov
mov
cmp
xchg
lods
mov
xchg
call
rol
jbe
aad
cwde
cmps
lock
or
cld
mov
outs
mov
xchg
cmc
in
sub
pop
cli
ret
or
cwde
and
jmp
jmp
cwde
push
repz
pushf
sbb
xchg
xor
jmp
dec
adc
xlat
lock
or
and
aaa
ret
(bad)
(bad)
sti
fs
je
ror
movs
mov
mov
(bad)
retf
sar
fcmovb
sub
sub
inc
push
xchg
mov
cli
test
adc
inc
dec
mov
(bad)
jmp
adc
pop
ror
into
out
ret
sub
mov
and
ret
cs
lahf
shl
in
mov
push
pop
mov
xor
mov
mov
scas
jne
or
sub
mov
pop
mov
in
xor
and
push
retf
loopne
pop
jbe
div
arpl
sub
or
push
pushf
test
and
xor
pop
fadd
xor
sub
jb
mov
inc
imul
fstp
iret
fnsave
mov
(bad)
cmp
mov
cmp
aaa
es
xor
ds
mov
dec
sbb
push
jno
ret
sub
cdq
cld
aas
aaa
push
jns
jmp
fiadd
shl
pushf
nop
leave
xchg
mov
std
cmp
mov
mov
add
xchg
or
cmp
jns
add
mov
sbb
jmp
or
outs
sub
jnp
add
ins
cmps
dec
in
xor
cmps
inc
cmp
ret
or
lods
cld
frstor
add
std
mov
xchg
cmps
aam
cmp
jne
push
bound
jmp
out
or
sbb
arpl
das
or
ja
jle
xlat
out
lahf
rcl
imul
das
out
fadd
pushf
repnz
sahf
dec
pop
aaa
repz
leave
and
or
cmps
je
stos
dec
mov
xor
outs
dec
aaa
sub
or
in
sub
mov
sbb
xor
pop
aaa
ror
fadd
stos
mov
mov
and
out
adc
cli
adc
pop
mov
imul
aaa
push
mov
rcl
mov
adc
xor
cmp
dec
jns
pop
cli
div
outs
arpl
or
add
int
popf
mov
adc
out
fadd
pop
stos
out
retf
sbb
nop
mov
or
and
mov
cmp
mov
lock
scas
pop
fst
mov
inc
xor
mov
cmp
in
dec
fnsave
rcr
cld
test
push
or
fisttp
jg
push
cmp
jmp
shl
mov
or
(bad)
and
int3
cmp
mov
jbe
mov
xor
pop
cmc
jecxz
mov
ja
mov
push
push
jo
daa
pop
pushf
fs
inc
push
pop
cmp
js
mov
loope
jle
mov
lods
nop
mov
push
mov
add
xchg
dec
push
loope
rol
sbb
rcl
mov
enter
cmp
inc
(bad)
cmp
rcr
mov
(bad)
aas
scas
adc
test
call
sub
dec
cmps
inc
xor
hlt
inc
test
sub
jle
stos
push
(bad)
repnz
cmps
not
inc
lods
and
movs
iret
test
mov
in
les
outs
loope
mov
aad
mov
add
cmps
stos
inc
(bad)
lods
retf
xor
clc
fs
and
sar
test
into
adc
rcr
xor
mov
sub
inc
data16
fldcw
inc
rol
in
mov
mov
push
xchg
xor
mov
fbld
or
jle
out
icebp
shl
and
ds
inc
xor
out
ret
cmp
scas
les
xlat
dec
push
adc
gs
sbb
add
pop
popa
xor
push
jmp
das
cmp
pop
test
ja
dec
push
sar
mov
pop
rcr
sti
mov
icebp
call
fidiv
(bad)
add
mov
jnp
lahf
enter
pop
and
push
pop
dec
sti
jl
repz
sbb
fadd
inc
mov
mov
sub
loopne
sub
dec
sub
fs
int
das
test
mov
cmp
ror
sub
pop
or
leave
pop
sub
mov
mov
repnz
jecxz
div
or
call
cmp
lahf
imul
je
xchg
test
jae
mov
gs
rcr
push
int
xor
jmp
repz
adc
icebp
xchg
cmps
and
(bad)
ins
js
adc
cmps
iret
ret
shl
dec
loop
push
cmp
outs
mov
imul
sbb
test
mov
movs
ss
sbb
(bad)
es
push
hlt
out
sbb
call
mov
cwde
fmul
aas
loopne
fwait
cld
fld
aas
fnstcw
arpl
hlt
js
nop
leave
call
clc
pop
sti
add
shl
sahf
call
xor
dec
retf
jnp
vpshaw
sbb
jmp
mov
mov
addr16
test
and
sub
or
test
int3
dec
xchg
cli
sahf
add
ins
lea
retf
ins
in
pop
jnp
dec
xchg
inc
adc
sbb
mov
out
ja
xor
in
and
jl
mov
pop
cmps
out
push
xlat
imul
ficom
lahf
out
pop
mov
sub
cwde
in
aaa
vpshufd
retf
dec
sbb
lock
cmp
loope
xlat
push
dec
jo
imul
fbstp
mov
xor
loop
jne
rcl
stos
mov
cld
in
mov
and
cmp
ss
push
jge
jmp
lock
das
pop
adc
aam
(bad)
aad
sub
cmps
mov
dec
sub
pop
xchg
sbb
aaa
mov
mov
cld
jg
add
push
sbb
lock
push
xchg
xlat
mov
jns
inc
test
call
repz
inc
sub
fsubr
rcr
and
test
daa
fisttp
fwait
add
adc
frstor
fist
in
lock
ds
inc
and
cs
mov
adc
or
jne
or
pop
int3
imul
and
retf
in
pop
popf
cmps
hlt
mov
xchg
cmp
adc
rol
outs
pop
mov
(bad)
aas
xchg
lods
in
mov
or
inc
ins
sahf
jecxz
clc
push
daa
sahf
test
dec
push
sbb
xchg
inc
mov
and
xchg
sbb
fcom
into
cmp
scas
jmp
pop
sub
xchg
pusha
fist
dec
js
push
jecxz
pop
sub
cmp
cmp
imul
dec
mov
stc
not
mov
stc
mov
scas
mov
cmps
in
mov
fnstcw
mov
(bad)
fld
mov
mov
push
inc
call
shl
xchg
das
fild
fimul
add
pop
mov
pop
cmp
mov
je
ds
icebp
sbb
cmps
adc
popf
aas
dec
adc
fst
or
ins
mov
fnsave
cmp
sub
lahf
out
cwde
test
mov
or
aam
pop
sub
mov
mov
jno
inc
loop
in
sub
jg
clc
or
dec
sbb
std
pop
stc
hlt
xchg
in
retf
push
cld
push
push
int3
cwde
jns
and
jmp
cmps
push
or
jp
jg
pop
mov
out
dec
(bad)
mov
retf
adc
add
jp
fst
cmps
mov
(bad)
out
mov
mov
test
out
pop
cli
pop
shr
add
cmp
pop
dec
aas
mov
inc
sbb
(bad)
aas
mov
inc
ret
mov
ins
lea
jno
mov
jl
sub
jae
and
dec
push
jb
ins
mov
pop
retf
xor
sbb
(bad)
sbb
lods
ins
mov
and
pop
ret
mov
(bad)
bound
pop
or
cmp
in
add
repnz
popf
mov
leave
(bad)
daa
sub
jmp
je
jns
imul
loop
mov
lock
das
and
nop
xchg
shl
sub
cmp
cmc
sbb
mov
dec
push
xor
aad
pushf
and
xchg
sbb
xchg
or
out
xlat
inc
outs
sbb
inc
mov
push
or
mov
add
jns
arpl
gs
inc
lea
pop
push
lds
pop
ins
nop
mov
xor
(bad)
cmps
push
movs
cmp
push
(bad)
in
sbb
mov
outs
sbb
and
xchg
pop
mov
enter
xchg
ret
add
push
popa
fistp
sub
pop
inc
movs
jmp
fisubr
push
cdq
cmps
sbb
adc
jmp
cmp
(bad)
ror
jl
pop
call
push
(bad)
outs
pop
fninit
mov
mov
out
ins
adc
dec
ss
inc
xor
pusha
and
cmps
rcr
imul
xchg
sbb
pop
or
pop
or
out
sbb
push
test
sbb
mov
xchg
xor
cmp
jmp
pusha
ss
add
add
add
mov
and
outs
push
(bad)
mov
or
or
(bad)
cld
push
add
or
pop
mov
sbb
neg
stos
test
je
xlat
push
push
fisubr
cmc
push
imul
and
in
add
nop
fidiv
cmps
mov
dec
mov
xor
xor
or
jle
rol
bt
fwait
jecxz
xchg
inc
mov
jb
add
movs
aad
cmp
push
and
pushf
pop
cmp
mov
out
ss
push
lahf
aas
cmp
jno
test
mov
dec
or
inc
lods
sbb
dec
dec
push
cmp
add
lods
fldcw
fldenv
loopne
sub
sbb
sbb
inc
inc
add
adc
sbb
clc
jbe
scas
sbb
sub
mov
cdq
ins
jae
lahf
retf
int3
or
add
pop
mov
xchg
xor
and
mov
adc
jmp
fimul
xchg
inc
stos
push
outs
adc
cli
push
in
out
cmp
xor
adc
shl
push
push
pop
dec
cmps
push
inc
sbb
pop
test
mov
sbb
data16
mov
fmul
cdq
mov
or
retf
rcl
ins
mov
xlat
cdq
ss
adc
cmps
call
stos
test
jecxz
fisub
les
mov
(bad)
mov
and
xor
shl
sbb
stos
add
push
(bad)
sbb
fadd
popa
cmp
retf
(bad)
stos
imul
push
cmp
aam
test
or
xor
cld
mov
imul
sbb
jb
sti
gs
retf
movs
mov
mov
outs
pop
cmovae
push
pop
inc
inc
xchg
mov
das
pop
mov
test
in
xchg
adc
ins
pop
push
adc
out
and
sub
add
or
cwde
nop
xchg
inc
adc
fldenv
pop
and
es
out
dec
xchg
jns
mov
and
gs
ror
xchg
test
push
sbb
stos
cmc
fiadd
dec
cmp
inc
or
cmp
add
sbb
in
scas
fwait
loopne
loopne
adc
inc
cmps
xor
xchg
jbe
push
pop
and
not
in
retf
pop
mov
out
pop
mov
mov
test
pusha
out
loope
dec
inc
iret
pop
frstor
adc
add
mov
cmps
fisub
fwait
stos
add
dec
pushf
retf
add
sar
dec
mov
inc
sub
mov
in
inc
sub
sahf
jge
(bad)
mov
mov
xor
mov
pop
jecxz
push
dec
cmp
sbb
sub
pop
sbb
vpblendvb
mov
jl
(bad)
aad
and
cld
inc
mov
sub
or
jecxz
adc
jge
mov
cmp
and
pop
(bad)
(bad)
scas
shl
in
add
xchg
mov
jno
shl
in
mov
daa
cs
jl
fsub
jp
adc
fist
pop
test
inc
fdivr
dec
pop
test
mov
add
inc
add
fnstenv
jmp
movs
(bad)
dec
cli
mov
loope
movs
add
push
nop
add
test
pushf
std
sbb
xor
push
or
mov
lahf
inc
pop
(bad)
imul
sbb
outs
loop
mov
in
mov
pop
sti
and
retf
push
push
push
mov
push
ja
daa
jb
jle
je
sub
ins
mov
fimul
dec
test
std
push
scas
loope
nop
mov
jbe
jns
daa
stos
xor
pop
outs
xchg
and
cmps
mov
outs
mov
in
inc
pusha
xchg
fcomp
arpl
cmps
scas
add
mov
mov
clc
sbb
add
pop
call
pop
adc
imul
push
loope
aad
mov
xor
std
add
push
adc
mov
cld
outs
sub
nop
adc
ins
pop
lock
mov
out
daa
es
and
rol
aam
jnp
pushf
pop
sbb
pop
sahf
jo
cmp
(bad)
pop
loopne
into
jmp
inc
fsubr
xor
mov
retf
xchg
dec
dec
cld
retf
sbb
mov
push
push
test
out
out
ins
inc
cs
or
push
sti
push
mov
and
rcr
pop
mov
(bad)
and
nop
pushw
xchg
push
jp
lahf
call
inc
sti
adc
je
ins
push
push
mov
ret
mov
xor
(bad)
jge
or
xchg
inc
pusha
dec
or
adc
pop
ss
pop
or
jg
rol
pop
leave
mov
scas
mov
jns
jnp
dec
out
pop
cmp
movs
inc
push
call
push
or
gs
xchg
ins
sbb
xchg
mov
pop
and
(bad)
popa
mov
das
or
push
mov
push
sub
cli
mov
jbe
xor
push
jnp
popf
jl
int
or
test
mov
mov
int3
fwait
push
stos
(bad)
int
rcl
fcmovnb
pop
pop
cmp
test
stos
dec
aas
pop
int3
jg
push
out
add
shl
imul
cs
les
sar
add
push
jmp
nop
cwde
xor
mov
cmp
fist
popf
sahf
scas
in
fsubp
outs
mov
dec
or
pusha
sbb
xchg
push
int3
movs
(bad)
fwait
adc
daa
or
jno
xor
inc
(bad)
repz
xlat
cmp
int
in
jne
into
xchg
and
iret
dec
jne
movs
mov
inc
mov
pop
scas
push
ins
popf
js
jge
mov
jb
hlt
cmp
imul
ficomp
sbb
xchg
(bad)
les
fadd
test
mul
cmp
mov
ins
adc
add
xor
out
sub
adc
ins
sahf
mov
gs
call
cmp
add
xchg
imul
adc
sub
sti
nop
call
scas
iret
test
sbb
bound
xor
arpl
adc
sbb
xchg
xchg
aaa
int
(bad)
sub
dec
push
into
fs
and
xchg
mov
push
and
mov
pop
dec
mov
lea
int
dec
mov
cli
add
push
push
or
add
inc
sub
adc
pop
nop
popa
mov
loopne
popf
fnstcw
pop
hlt
xchg
mov
in
cs
outs
push
mov
xchg
imul
jno
test
dec
call
dec
call
cmp
leave
scas
mov
pop
retf
int
mov
mov
int
push
jl
or
add
mov
xor
adc
inc
fld
push
das
in
jmp
js
ror
sar
and
fsub
ja
popa
pusha
jns
test
jl
popa
aad
ss
mov
add
lods
and
sub
or
mov
sbb
cmps
outs
sub
or
sti
cmp
out
dec
fdivr
mov
scas
push
or
adc
xor
fs
test
cmp
xor
ror
into
adc
adc
popa
xchg
dec
xchg
sbb
ds
push
cmp
(bad)
outs
cli
hlt
sub
fild
inc
push
movs
dec
rol
mov
add
(bad)
pop
and
xor
mov
(bad)
rcl
sbb
mov
pushf
push
jmp
out
sbb
dec
push
fdivr
xor
ret
inc
jns
les
in
leave
aas
ja
or
repnz
mov
mov
cmps
nop
ins
push
mov
sub
or
cmps
cmc
sbb
jbe
cmp
jmp
loop
add
call
push
nop
mov
scas
cs
pop
std
push
mov
pop
dec
movs
mov
fxch
repz
ror
or
mov
jmp
es
xchg
and
test
jmp
add
adc
pandn
cmp
jle
loopne
pop
mov
ret
cmps
jmp
(bad)
sbb
jnp
ja
ret
adc
pop
movs
mov
mov
std
mov
push
xchg
test
pop
ficomp
(bad)
(bad)
lods
pop
inc
repnz
pop
mov
std
mov
jp
test
mov
add
loop
push
mov
(bad)
jge
push
and
cmc
not
in
mov
jge
or
pop
sbb
stc
sbb
xchg
adc
mov
pop
(bad)
shl
add
or
fst
or
icebp
scas
fwait
xor
js
xchg
xchg
inc
push
pop
(bad)
cli
ror
bound
in
cmp
fld
and
dec
ins
sti
sub
xchg
push
pop
(bad)
push
add
jmp
scas
xchg
ins
sbb
jle
mov
add
es
or
retf
lods
in
push
add
movs
fwait
cmp
sub
nop
imul
js
iret
sub
push
xor
xor
movs
test
inc
or
mov
das
in
or
mov
sub
inc
jge
xor
add
jbe
jmp
test
push
xchg
popa
cmp
(bad)
sbb
cmps
(bad)
cmp
mov
cmp
mov
sub
cmp
rol
mov
(bad)
out
clc
ror
imul
out
jne
adc
fwait
lods
and
and
xchg
fst
push
push
sbb
jns
sub
daa
lahf
sub
adc
and
jecxz
movs
out
xor
bound
int
pop
dec
outs
scas
dec
sbb
cmp
cmp
cmp
gs
pop
out
jg
push
cmp
pop
retf
loope
lock
fdiv
xchg
and
xchg
fbstp
imul
mov
daa
adc
popa
sub
pop
or
hlt
loop
dec
imul
in
pop
cmp
pop
fcom
push
mov
sub
or
jle
les
push
sub
sub
leave
shl
dec
not
mov
push
adc
lea
pop
push
sbb
mov
fwait
cmp
inc
mov
dec
jmp
jp
pop
outs
stos
dec
push
jbe
jl
add
jg
mov
sub
mov
mov
es
mov
sub
es
mov
in
rcl
addr16
rcl
fwait
inc
(bad)
pop
pop
fidivr
push
adc
fild
mov
int3
fs
pop
add
imul
fnstenv
adc
mov
retf
jmp
mov
aad
push
jg
sub
retf
imul
cmp
add
mov
mov
inc
imul
sti
dec
std
inc
iret
xchg
into
or
leave
inc
mov
in
push
adc
aad
pop
xchg
sub
cmp
xor
push
mov
scas
dec
adc
rcl
test
mov
(bad)
fsub
xchg
jo
fiadd
repnz
cdq
out
(bad)
jmp
pop
mov
mov
sti
pop
jb
lds
inc
setb
push
mov
ins
or
std
cld
and
pop
hlt
pop
push
xchg
cmps
xchg
mov
mov
pushf
cdq
cmp
cmp
push
jb
(bad)
jae
lahf
ror
(bad)
aam
sub
in
dec
mov
shl
push
cwde
ret
sbb
retf
ficomp
or
aad
xchg
sub
and
test
jnp
cmp
dec
push
sbb
cwde
test
add
movs
repz
cmps
mov
inc
in
mul
or
xchg
adc
bound
adc
add
sbb
xor
int3
mov
jmp
jp
lahf
in
add
pop
(bad)
mov
rcr
push
sbb
jle
mov
js
ds
pop
sar
mov
sbb
lods
mov
inc
add
xchg
or
push
rcl
push
add
xor
movs
aam
nop
jmp
in
mov
movs
repnz
xor
add
fs
jge
fild
lods
inc
mov
xlat
iret
push
inc
push
cmp
(bad)
ja
popa
jl
dec
gs
cmc
dec
adc
repz
sti
jns
jno
fisttp
add
sbb
xchg
xor
sbb
push
pop
aaa
scas
jg
xor
ficomp
aam
into
stc
push
aam
cmp
pop
mov
inc
fs
repnz
add
shl
popf
sub
shl
jecxz
ss
aad
rol
aaa
add
jg
iret
and
mov
cmp
stos
int3
std
cs
inc
retf
and
mov
and
mov
mov
js
les
mov
fwait
push
fadd
jecxz
add
fs
lea
push
rcl
popf
push
jae
mov
loope
jo
repnz
mov
adc
cli
mov
pop
add
adc
push
arpl
movs
or
xor
inc
dec
call
inc
add
dec
ins
jg
daa
cmps
mov
rcr
mov
jecxz
fdivr
into
inc
sbb
js
lea
pushf
inc
dec
lds
movs
jne
push
sbb
cmp
aas
dec
cmp
cmp
stc
aaa
out
and
jp
sbb
cmp
repz
adc
xchg
push
mov
push
daa
outs
or
lock
sbb
aas
pop
fistp
pop
fwait
nop
cmp
call
stos
out
xor
cmp
repnz
adc
aad
(bad)
mov
repz
pushf
jbe
cmp
xor
sbb
ret
arpl
mov
sbb
sbb
rcl
xchg
xor
cmp
cmc
xchg
jno
add
push
sub
pop
inc
lahf
inc
stc
jbe
push
std
push
sbb
sub
mov
ss
retf
and
cdq
ja
or
and
mov
and
fwait
lds
xor
cmp
mov
pop
fwait
ds
ss
jge
pop
and
iret
test
pop
add
lds
inc
dec
jecxz
push
(bad)
into
jmp
push
mov
movs
jmp
pop
push
push
es
mov
daa
inc
ret
pop
pop
outs
pop
jns
in
loopne
mov
imul
inc
cmp
dec
pop
int3
dec
retf
adc
pop
ficomp
cmps
dec
movs
push
mov
loopne
pop
sbb
cmps
hlt
jmp
iret
iret
and
test
(bad)
jmp
inc
call
popf
inc
cmp
adc
jl
pusha
and
mov
inc
or
xlat
hlt
std
push
or
ja
(bad)
cmc
add
or
mov
mov
push
fdiv
mov
out
and
xchg
mov
leave
icebp
adc
(bad)
pop
or
cwde
or
(bad)
sahf
sub
inc
les
jge
xchg
js
adc
ins
pop
retf
mov
lock
arpl
xor
icebp
ficomp
scas
xchg
xor
sahf
jnp
movs
inc
ins
inc
lea
cmp
in
sub
push
push
push
xchg
or
and
xor
inc
mov
dec
adc
sub
fdiv
sub
inc
arpl
mov
loope
xor
push
aad
cvtps2pd
inc
jnp
sbb
dec
arpl
cwde
cmp
fwait
cmps
aaa
cmp
xor
inc
xor
or
push
jb
xor
inc
or
mov
arpl
adc
sub
enter
pop
push
cmp
sub
cmp
xchg
xchg
stc
sub
test
retf
add
shr
push
mov
sbb
dec
adc
ds
xchg
mov
sub
(bad)
jp
les
fbstp
(bad)
cmp
retf
fld
out
fdivr
mov
mov
loope
jecxz
enter
and
adc
sbb
js
retf
lahf
sbb
and
jae
push
sub
or
ins
or
adc
mov
out
shl
dec
adc
jne
xor
xor
jmp
or
aas
cdq
add
call
or
retf
cmp
add
loope
sahf
push
(bad)
enter
pop
ror
pop
mov
dec
mov
push
and
mov
idiv
mov
jmp
or
imul
imul
or
enter
fimul
shl
std
xor
ds
aas
movs
test
mov
inc
push
imul
aaa
imul
out
enter
mov
out
int3
and
mov
sub
mov
bound
iret
jecxz
mov
cmp
mov
int3
push
mov
repz
das
jae
or
out
sbb
ret
out
out
mov
test
(bad)
movs
cmc
push
out
push
fdivr
dec
sub
push
imul
xor
out
push
jge
dec
adc
imul
sbb
add
push
adc
stc
adc
fdivr
in
lods
xor
jnp
aaa
jno
sub
outs
daa
pop
cmps
lods
scas
adc
rcr
cmp
sahf
xchg
xor
jae
pop
test
push
mov
fwait
xchg
cmp
xchg
ss
test
jle
and
pop
dec
push
and
inc
pop
adc
in
sbb
sub
jl
push
jae
and
xchg
sbb
add
jne
dec
push
sar
mov
push
je
adc
adc
out
jnp
ficomp
adc
xor
ins
push
pop
les
sub
or
jecxz
movs
push
inc
inc
loop
data16
fsub
stos
mov
sub
dec
mov
mov
(bad)
out
cli
aas
pop
test
and
stos
lea
xor
jl
jg
mov
imul
retf
sahf
add
fcom
cld
cmc
cli
jecxz
test
jns
sti
clc
loopne
mov
movs
nop
xchg
xchg
js
sub
loope
or
mov
jecxz
xor
inc
addr16
inc
out
clc
and
daa
pop
xlat
mov
push
ss
jno
imul
lahf
pop
cli
xor
add
cmps
hlt
mov
dec
xchg
hlt
shl
cmps
xchg
test
nop
adc
retf
cmp
cmps
jmp
ret
xchg
movs
imul
mov
sub
sahf
mov
sahf
test
fcomp
outs
jnp
jnp
mov
mov
jecxz
adc
mov
add
push
jbe
ss
cld
scas
outs
test
loop
outs
cmovb
cmp
or
sub
mov
xchg
xlat
out
push
test
push
mov
in
adc
add
fistp
jmp
sbb
or
dec
ror
repz
sub
outs
(bad)
ds
inc
sbb
movs
jmp
and
std
push
aas
rcr
into
je
jg
xor
jge
mov
sti
fbld
xchg
shr
arpl
jmp
not
jb
add
sti
pop
sbb
mov
call
xchg
in
cmp
imul
cmp
dec
and
cld
pop
jbe
pop
jbe
test
dec
add
or
int
jg
icebp
push
aad
loope
test
data16
jb
test
mov
popa
daa
xchg
mov
sub
xchg
mov
mov
jne
cmp
push
inc
inc
cmp
dec
(bad)
mov
(bad)
ins
inc
push
adc
lock
mov
sar
(bad)
add
or
mov
mov
pop
push
sub
pop
(bad)
imul
inc
ja
push
fldcw
in
xor
pop
test
add
(bad)
out
test
pop
mov
mov
sbb
pop
xchg
jb
ins
mov
mov
dec
sbb
test
or
push
dec
in
xchg
je
sbb
stos
mov
out
out
mov
rcl
jp
inc
inc
mov
out
xchg
xor
popa
xchg
jno
clc
xor
add
mov
sub
(bad)
pop
pop
fwait
hlt
pop
test
ret
das
jbe
sahf
test
(bad)
pop
fs
xchg
or
mov
adc
rol
imul
pop
mov
fwait
add
pop
mov
sub
jns
lds
pop
call
add
xchg
lahf
cld
enter
dec
loop
into
call
cwde
xchg
xchg
out
jnp
mov
cmp
cmps
cmp
(bad)
jo
and
add
mov
rcr
mov
rol
mov
and
pop
clc
fwait
push
dec
cmp
adc
xchg
sbb
mov
pop
int3
mov
in
inc
out
call
pop
jmp
retf
in
and
mov
jnp
fdivr
xchg
and
mov
add
mov
push
jl
mov
jo
xor
dec
stc
xchg
and
lahf
mov
and
push
mov
clc
xchg
jmp
inc
mov
and
movs
or
jge
ret
repnz
test
lods
xchg
mov
pop
ss
cld
sub
fadd
call
sub
inc
adc
add
ror
in
inc
(bad)
add
loop
enter
jae
in
inc
push
fidivr
mov
les
and
clc
xlat
pushf
xor
push
mov
pop
lock
xlat
bound
inc
jp
pusha
jp
sub
imul
mov
xor
in
adc
jmp
iret
call
dec
(bad)
mov
sub
sub
inc
adc
or
lahf
mov
sbb
popf
clc
xor
jle
cmp
mov
ins
push
sub
popf
movs
xor
repz
lods
mov
gs
push
pop
dec
movs
div
lods
cmp
(bad)
pop
push
fcomp
and
std
add
pop
or
lahf
cmp
iret
movs
movs
cmp
push
and
daa
outs
jbe
retf
test
mov
dec
fild
jns
jge
adc
dec
mov
cwde
cmp
jo
idiv
(bad)
pop
fbstp
mov
xor
adc
push
ror
(bad)
and
cmp
jmp
push
enter
cli
fidivr
xchg
cs
in
adc
in
cld
mov
cmps
dec
add
sahf
rcr
fld
add
scas
cmp
mov
mov
es
and
leave
or
aas
add
int3
les
mov
popa
test
cmp
sahf
in
ins
push
fsubr
(bad)
and
pop
je
sbb
loope
repz
imul
pop
bound
adc
cmp
test
hlt
mov
shr
jmp
das
scas
call
mov
xor
(bad)
retf
fwait
test
inc
and
in
in
retf
xchg
lds
(bad)
aam
in
lods
inc
lea
pop
push
mov
xlat
in
mov
rcl
xchg
int3
out
dec
or
mov
fiadd
popf
push
jle
movs
lock
jb
sahf
(bad)
adc
push
in
cld
frstor
ds
mov
ja
pop
jp
sar
mov
add
mov
fstp
daa
mov
sbb
sahf
(bad)
xlat
pmaxub
test
and
stos
mov
repnz
bound
es
sub
pop
xchg
push
jne
or
mov
dec
jae
pop
and
fucomi
cmc
aaa
je
cli
lds
mov
test
xlat
pop
jno
xchg
mov
xchg
mov
cmp
add
xor
pusha
cwde
test
cmp
push
test
mov
arpl
in
cmp
cmp
jns
mov
cmc
daa
cdq
pop
lods
jae
in
dec
inc
dec
push
sbb
and
xor
or
sahf
xor
cmps
adc
pcmpgtw
sub
push
in
sub
push
retf
loop
inc
and
sub
div
lock
dec
jle
les
mov
gs
jmp
xor
fdiv
dec
dec
mov
sbb
mov
sbb
cmp
sub
popf
jno
push
cmc
imul
movntps
pop
mov
mov
jae
test
cmp
es
and
stc
xchg
shl
ret
adc
cld
mov
cmc
adc
inc
loop
addr16
lods
test
fisub
arpl
add
xchg
popa
jae
test
pop
loope
retf
push
sub
pop
paddb
xor
jne
je
aaa
sub
pop
pop
bswap
sub
in
sbb
push
mov
jmp
mov
sub
sbb
lods
mov
test
cmp
out
sahf
in
jge
lea
sub
and
ja
icebp
retf
(bad)
cmp
fistp
mov
shr
adc
repnz
stos
test
sbb
retf
rol
push
sahf
jnp
imul
repz
mov
jg
aas
ret
pop
pop
ds
and
xchg
mov
scas
pop
sahf
fcmove
jno
imul
(bad)
gs
xchg
sbb
adc
or
aad
xor
div
xor
in
mov
cmp
outs
mul
ins
or
test
xor
jge
sti
repz
or
dec
call
or
daa
mov
mov
cwde
(bad)
mov
movs
adc
addr16
xor
int3
int3
xchg
cmp
mov
mov
pop
add
pop
dec
into
and
pop
mov
xchg
pusha
jns
xor
xchg
lods
push
in
shl
add
call
xor
mov
mov
sbb
(bad)
jbe
mov
jge
aad
je
loopne
or
cmp
sub
call
loopne
jmp
or
or
mov
loopne
enter
xor
cmp
ins
fdiv
(bad)
cdq
add
scas
xchg
aaa
ficom
jmp
data16
mov
movs
into
rcl
mov
cmp
shr
adc
stos
adc
pop
out
pop
cmp
pushf
mov
xlat
in
sahf
(bad)
(bad)
push
in
dec
lahf
leave
push
outs
mov
mov
lds
pop
jo
fisubr
out
and
fwait
repnz
sbb
jae
data16
fiadd
aad
int
in
in
sbb
and
xor
mov
jg
sbb
mov
adc
popa
jmp
adc
cmp
jbe
xchg
mov
aaa
xor
push
mov
(bad)
call
xchg
xchg
pop
xchg
lahf
fdivr
mov
push
mul
ss
div
adc
inc
hlt
or
xstore-rng
cmps
test
adc
jp
fmul
push
add
call
popf
lock
inc
das
and
(bad)
fsub
addr16
pop
cmps
xor
add
mov
cwde
mul
out
pop
inc
cmp
dec
shl
ins
xor
xor
or
(bad)
mov
lods
div
sbb
(bad)
lea
mov
dec
in
cld
sub
xchg
ja
call
sub
ds
jns
xchg
dec
test
inc
push
les
sti
inc
sub
push
retf
loope
sub
inc
adc
xor
test
sub
fld
dec
sub
mov
iret
mov
dec
add
stc
mov
inc
xchg
retf
dec
sbb
out
jmp
dec
(bad)
sar
lods
(bad)
pop
jo
cdq
gs
loope
sub
jg
mov
xor
push
mov
iret
test
or
push
daa
stos
push
nop
push
cmp
dec
test
pop
arpl
dec
mov
mov
in
jmp
pusha
fwait
dec
jmp
dec
pop
in
loop
shl
xor
fidivr
sahf
gs
(bad)
in
sti
das
enter
cmp
pop
shr
mov
call
cmp
sbb
fwait
jo
inc
test
push
push
push
loopne
out
cmp
inc
mov
mov
add
sbb
pop
ficom
stc
xchg
pop
pop
jo
loope
enter
stos
dec
xchg
sub
in
enter
les
(bad)
mov
sbb
pop
pop
inc
icebp
mov
xor
and
adc
add
lahf
lock
xor
sbb
xchg
cmps
(bad)
nop
xchg
in
lds
lods
jb
ret
fdivr
or
add
inc
cdq
ds
mov
mov
idiv
sub
and
push
scas
xchg
hlt
xchg
lods
retf
mov
in
dec
and
enter
pop
shl
pop
imul
test
sub
xor
bound
jno
ins
fadd
test
pushf
mov
inc
xchg
addr16
push
or
imul
leave
mov
and
movs
(bad)
js
imul
dec
push
jg
xor
int
lds
out
movs
cmps
enter
pop
cmps
mov
add
clc
pop
xchg
jae
daa
mov
inc
fild
lock
loop
and
mov
push
repnz
push
shr
mov
sbb
jb
(bad)
xor
or
adc
aaa
aam
test
inc
cs
xchg
fdivr
addr16
sbb
mov
and
rcr
enter
push
push
and
scas
xlat
xchg
out
and
xchg
mov
ins
xchg
jp
imul
(bad)
cwde
sbb
mov
enter
mov
mov
inc
xchg
xchg
or
ds
aam
shl
data16
pop
jne
or
sub
addps
cmp
cmp
jb
stos
pop
dec
repnz
inc
scas
mov
inc
adc
sub
dec
popf
or
(bad)
adc
cld
push
rcr
scas
pop
adc
xor
into
fist
rcl
das
test
cdq
jmp
ror
add
cmp
add
and
je
push
dec
int3
in
(bad)
fs
(bad)
xlat
pop
jnp
adc
pop
and
pop
je
(bad)
push
jmp
cmp
mov
ja
fnstenv
ds
imul
aam
(bad)
enter
jmp
pop
adc
and
movs
dec
mov
and
cmp
mov
sub
or
fmul
fs
sti
leave
aas
mov
or
dec
xchg
sbb
mov
cli
scas
xchg
jne
push
sub
lahf
cwde
jb
repnz
mov
fnsetpm(287
call
aaa
add
and
or
or
inc
test
loop
mov
lods
xor
(bad)
(bad)
repz
xor
jae
iret
jae
movs
iret
xor
out
pop
sub
inc
arpl
repz
sbb
(bad)
mov
jmp
add
fisttp
mov
mov
mov
push
pop
cdq
mov
popf
outs
scas
stos
sub
inc
repz
cdq
vaddsubpd
jae
cmp
stos
fldcw
sahf
add
mov
rcr
add
cmps
mov
pop
inc
pop
xlat
xor
inc
xchg
fdiv
movs
scas
test
sub
xor
push
aad
movs
fdiv
js
call
cld
cwde
mov
sub
xor
add
inc
mov
rcl
imul
mov
xor
xchg
or
push
push
and
push
cmps
sbb
add
ins
push
rcl
cmp
(bad)
pop
cs
loope
fsubr
inc
je
ret
mov
dec
leave
movs
int
ss
test
lods
ficomp
pop
jnp
out
movs
jmp
mov
call
mov
push
aad
sbb
cmp
pop
push
dec
xchg
jle
dec
cld
jl
scas
test
imul
inc
(bad)
fwait
test
scas
fnstcw
aaa
xor
mov
ins
mov
movs
cwde
dec
retf
outs
sar
or
jns
ret
pop
fs
jl
fsubr
stos
fstp
mov
jae
jl
dec
clc
in
jecxz
jne
jl
add
rol
pop
push
out
and
stos
pop
jmp
push
dec
or
push
(bad)
stos
pop
daa
add
jne
imul
jnp
test
push
sub
or
mov
jns
sub
adc
or
into
lods
cmp
inc
pop
mov
arpl
sub
(bad)
in
mov
retf
cs
mov
les
loop
popa
push
test
add
psubsw
nop
dec
loope
test
sar
outs
pusha
xlat
mov
scas
sbb
data16
lods
cli
test
ja
jo
movs
shl
enter
arpl
sub
add
inc
(bad)
mov
push
fisubr
xchg
mov
enter
xor
xchg
dec
jmp
mov
arpl
sti
scas
jg
pop
xor
and
push
call
or
lock
cmp
mov
sub
rcr
jae
cwde
icebp
gs
rol
inc
add
repnz
(bad)
loopne
xor
mov
mov
imul
shl
aad
adc
(bad)
loop
jbe
jb
inc
pop
lock
mov
mov
pop
cmp
mov
in
pushf
sar
cmp
or
in
cli
jne
cmps
xchg
iret
dec
push
xchg
mov
ins
jb
aam
and
sbb
or
icebp
or
sub
test
or
sbb
fnstcw
xacquire
sar
pop
cmp
out
mov
ss
sub
xor
int
shr
adc
push
or
or
pop
dec
mov
xchg
mov
push
retf
popa
jnp
adc
ins
dec
jmp
outs
dec
(bad)
leave
sar
sub
mov
sbb
pop
xacquire
movs
push
mov
popf
int3
mov
sbb
aad
jl
scas
mov
xchg
or
out
int3
adc
inc
jg
xor
jmp
push
pop
aas
fwait
jmp
imul
loopne
pusha
xchg
cwde
cmp
jp
mov
loope
or
mov
jno
mov
loope
lea
pop
iret
adc
and
xor
shl
sub
push
cmp
arpl
mov
sub
and
mov
aaa
mov
or
into
lea
rcl
jmp
stos
fiadd
or
xlat
adc
fidiv
adc
cmp
sbb
pop
loope
and
mov
rcl
push
(bad)
loopne
push
sahf
hlt
jle
call
sbb
inc
xchg
jns
repnz
les
stos
xchg
int
xor
test
hlt
test
adc
cdq
fisttp
push
(bad)
data16
stos
retf
xor
mov
fwait
dec
scas
pop
mov
daa
mov
dec
std
jmp
cmp
mov
mov
sub
adc
inc
xor
lock
jb
adc
jle
sti
in
leave
test
adc
rcl
mov
in
pusha
std
pusha
cmc
retf
jno
or
dec
pop
lods
xchg
repz
pushf
mov
jmp
test
adc
sbb
cli
cld
mov
stos
push
lock
mov
or
call
popa
push
call
add
pop
inc
xor
mov
and
pop
cmp
jle
shr
fdiv
cmp
mov
or
into
sti
push
xor
sbb
in
jae
int3
ins
sbb
repz
adc
jge
scas
push
xchg
int3
fdivrp
mov
mov
pop
pop
fsubr
into
sub
jecxz
in
mov
xchg
scas
cmp
mov
in
cld
int
int
pop
arpl
push
add
scas
lea
add
rcl
inc
dec
mov
(bad)
cmp
hlt
mov
adc
jo
jge
jns
cld
sahf
jno
ss
pop
pop
sahf
mov
xchg
xor
mov
cmp
aad
adc
call
mov
mov
sub
shr
sub
mov
into
jns
pop
sub
in
test
imul
mov
pop
xchg
or
pop
ss
xchg
jmp
rcr
out
bound
push
xor
mov
cmp
popa
and
nop
test
scas
popf
push
gs
mov
xor
test
cmp
jns
or
loope
or
retf
in
arpl
push
fdivr
scas
out
shr
clts
lock
or
retf
test
sahf
adc
jns
fs
xor
xchg
in
jg
mov
sub
ds
push
add
cmp
and
or
sub
cmc
mov
js
xor
test
aad
cld
shr
cs
pop
ret
xor
mov
ins
idiv
mov
data16
aaa
enter
test
std
mov
imul
bound
stos
adc
xchg
dec
lock
dec
cs
xchg
jecxz
cmc
jl
xchg
add
adc
ins
cmp
sub
int3
fucom
(bad)
xchg
inc
out
or
pop
rol
mov
jle
imul
mov
pushf
test
ja
ja
(bad)
addr16
sub
jno
cdq
repnz
cmps
jp
test
mov
inc
jge
shl
mov
nop
mov
xor
sahf
adc
jp
shl
int
xor
rcr
cmc
push
in
fstp
xor
call
mov
adc
jne
out
aad
pop
js
and
sbb
pop
cmp
mov
and
sub
push
(bad)
jecxz
int
xor
or
ss
push
mov
add
ins
and
add
setl
fisttp
sub
mov
sbb
ins
fwait
jb
(bad)
xor
cwde
nop
lds
out
xchg
xchg
inc
push
rcl
fild
cmp
test
pop
or
outs
shl
mov
loopne
cmps
dec
lods
mov
push
add
mov
mov
inc
rcl
push
dec
or
xor
out
loop
xchg
mov
mov
push
sub
int3
sbb
cli
icebp
das
aas
fsubr
cli
cmp
jae
add
hlt
adc
or
xor
jle
mov
fwait
sub
packssdw
mov
mov
outs
repnz
loop
pusha
jmp
sub
pop
sti
sub
test
cli
imul
mov
and
xchg
mov
test
les
mov
push
sbb
cdq
jbe
dec
aas
cmc
mov
out
(bad)
fmul
cwde
jg
pusha
pop
mov
mov
shl
add
or
push
cdq
xor
(bad)
pop
mov
popf
jne
cmp
mov
mov
adc
test
inc
lods
(bad)
fnstcw
cmps
xchg
cmp
add
repz
sbb
cmp
jbe
jb
jle
sub
or
les
cs
lods
dec
jmp
aam
xchg
ror
cmp
dec
xchg
cmp
enter
xchg
cmp
mov
aad
popf
lahf
and
jmp
movs
and
fld
add
pop
ja
or
sbb
test
lods
movs
mov
jl
sbb
and
push
jecxz
jns
add
mov
gs
(bad)
lds
or
mov
pusha
xchg
or
test
mov
inc
jl
mov
push
inc
pop
out
mov
mov
out
neg
mov
repnz
inc
adc
cmp
dec
pop
idiv
pop
popf
dec
fistp
sub
out
lea
mov
dec
fnstenv
std
pop
push
jg
dec
push
shl
fmul
cwde
addr16
repnz
pop
dec
outs
pop
add
jo
push
sub
int3
xor
aas
outs
iret
cmp
out
arpl
out
(bad)
jle
repnz
dec
xlat
rcr
ins
xchg
test
cld
and
or
xchg
pop
aas
adc
push
jmp
dec
movs
loop
adc
xor
(bad)
lock
jge
mov
mov
jbe
dec
mov
adc
mov
sti
or
fisub
fbstp
aaa
test
jns
jno
add
lock
add
in
jno
push
dec
dec
adc
add
pop
lods
sub
jmp
or
dec
push
mov
je
fist
xor
mov
fild
push
not
stos
add
(bad)
jns
fdiv
jb
imul
push
and
xchg
imul
fcomp
xchg
popa
add
jae
mov
loope
pop
(bad)
int
or
nop
(bad)
add
pop
cli
das
loopne
jecxz
mov
inc
sbb
fisttp
daa
mul
dec
nop
out
stc
mov
test
shl
inc
push
sbb
jecxz
mul
xchg
fadd
lock
cmp
arpl
data16
inc
adc
dec
popa
(bad)
dec
fld
jmp
inc
fisub
addr16
xor
dec
xor
ss
out
arpl
jmp
pop
adc
mov
fadd
mov
cmps
or
xor
sbb
in
push
outs
xchg
mov
jns
retf
fs
stos
inc
jno
sub
cld
loop
mov
jns
pop
(bad)
jne
retf
bound
rol
inc
sbb
loope
push
cwde
pop
rcl
in
jl
fcomp
inc
push
jmp
inc
arpl
push
cli
push
dec
ins
inc
mov
test
pop
out
enter
sbb
adc
(bad)
push
cmp
add
mov
mov
test
jge
scas
je
cdq
(bad)
(bad)
retf
ss
test
or
shl
ins
in
ret
les
xchg
fsubr
inc
out
adc
fisub
pop
pusha
fidiv
xor
je
ror
lock
retf
sub
push
mov
and
sub
ficom
rcr
push
dec
jns
mul
imul
imul
neg
arpl
xchg
mov
add
shr
fs
fwait
call
xchg
ins
mov
or
jmp
int3
shl
lock
mov
xchg
mov
and
lea
or
inc
mov
sti
sbb
loop
loopne
sbb
xchg
outs
les
call
xchg
or
movs
xor
(bad)
dec
and
inc
dec
and
test
pop
sbb
jnp
add
add
jmp
cmp
lock
leave
or
shl
or
fcomp
pop
ins
stos
cmp
nop
scas
daa
cmc
dec
dec
dec
daa
nop
mov
sbb
(bad)
cmp
push
(bad)
xchg
add
cmc
jmp
or
inc
lods
lods
sahf
and
pushf
mov
out
xchg
idiv
data16
inc
fldenv
out
jns
retf
cli
fcom
repz
sahf
jne
mov
add
fild
cli
aad
sbb
(bad)
retf
add
imul
push
mov
and
shr
in
rcl
ins
sbb
imul
clc
fidiv
stos
jle
retf
scas
lds
mov
add
in
mov
jns
dec
call
mov
mov
lahf
pop
fwait
xchg
addr16
sub
mov
mov
mov
pusha
mov
arpl
sbb
imul
add
pushf
jns
mov
pop
outs
sub
push
data16
sbb
test
sub
xchg
push
(bad)
cmp
(bad)
add
fimul
or
dec
mov
into
out
shr
inc
stos
and
push
cwde
adc
iret
fs
jb
test
xchg
fisttp
les
mov
jno
xchg
sahf
movs
nop
test
adc
mov
xchg
das
xchg
push
push
sub
mov
xchg
cmp
xchg
stos
push
jae
mov
adc
imul
dec
pop
ss
in
lahf
mov
aaa
stos
xchg
aas
es
add
sub
cmps
je
sub
push
neg
pushf
punpcklwd
mov
sub
sub
aaa
std
je
push
and
jle
fld
movs
(bad)
iret
push
adc
jge
push
daa
jp
sbb
jne
or
dec
cld
mov
shr
xchg
dec
mov
add
loope
sti
xchg
mov
mov
adc
push
pop
hlt
not
push
push
dec
int
and
inc
je
xchg
adc
fld
fld
call
and
add
adc
xchg
jp
inc
xchg
mov
aas
xchg
or
repnz
cwde
in
adc
pop
and
dec
mov
ret
mov
int3
xor
nop
data16
dec
sub
xchg
cmps
xor
push
int3
sbb
sti
cmc
mov
gs
dec
es
cmp
push
ins
fsub
popf
jge
retf
xor
push
sbb
cmp
inc
xchg
lods
das
out
adc
mov
mov
imul
dec
movs
addr16
ja
mov
pop
cmc
mov
inc
push
(bad)
jmp
pop
(bad)
mov
fnstsw
jb
push
fimul
push
xor
and
and
adc
add
mov
pop
jbe
add
xor
imul
enter
mov
jle
repnz
mov
xor
xlat
je
jg
xchg
fistp
dec
shl
sub
pop
into
sub
movs
adc
pushf
pop
inc
int
jmp
movd
leave
mov
(bad)
mov
jle
retf
sbb
add
std
mov
int
cmp
call
push
add
jno
hlt
icebp
outs
packuswb
into
inc
adc
push
das
jo
lods
lds
inc
in
clc
xchg
lahf
lods
inc
jns
mov
enter
xor
jl
repnz
mov
imul
cwde
mov
fst
cmp
jle
dec
enter
test
push
das
mov
lea
fld
clc
push
sbb
cdq
es
popa
dec
in
dec
jae
push
pop
and
mov
or
pop
repz
and
mov
sub
jmp
aas
or
rol
inc
cmps
or
sbb
push
mov
sbb
(bad)
rol
pop
sub
mov
call
shl
inc
test
scas
cmp
jo
ds
add
xor
mov
add
xchg
xor
popa
cli
les
and
popf
fsubr
cmp
mov
stc
push
jno
idiv
or
loop
inc
lods
das
in
cdq
mov
mov
cmp
push
add
add
xchg
gs
xor
into
jl
pop
std
or
imul
aaa
push
mov
sbb
lock
out
add
jecxz
jbe
push
cs
fisubr
mov
pop
xchg
mov
outs
fimul
mov
loope
pusha
inc
mov
(bad)
loope
sbb
jp
jne
fwait
jecxz
repz
inc
mov
int3
dec
or
fs
push
fidiv
xchg
shr
or
nop
inc
cmps
mov
mov
test
fwait
adc
add
mov
sar
xlat
lods
mov
add
jle
ins
inc
jmp
mov
or
mov
push
loopne
data16
(bad)
mov
push
xchg
fidiv
cs
push
loopne
push
test
mov
call
jp
xchg
xor
push
inc
push
cmp
in
xlat
mov
dec
dec
outs
call
je
ret
imul
scas
(bad)
fidivr
lods
push
sub
mov
inc
pop
inc
and
xlat
call
pusha
jle
mov
and
and
cmp
dec
bound
pop
inc
add
aam
repnz
add
shl
loope
add
sbb
rcr
or
fidivr
xchg
adc
pushf
pusha
mov
hlt
mov
xchg
add
push
dec
dec
fst
or
sub
lods
call
adc
xchg
imul
mov
pop
cmp
loope
pop
sub
aas
push
and
cli
rol
pop
sbb
cmc
or
loop
push
mov
mov
push
mov
pop
cmp
jae
adc
ret
movs
out
or
(bad)
jmp
int3
add
pop
lock
jecxz
ja
pop
(bad)
jl
fisttp
adc
in
mov
mov
dec
xchg
std
add
(bad)
mov
jge
out
mov
mov
pop
adc
ss
lea
jmp
aam
popf
xlat
add
add
xor
mov
push
imul
jg
jmp
dec
push
push
push
jmp
mov
or
pop
mov
add
ret
and
xchg
push
cmp
jno
jecxz
jp
pop
jb
jge
jne
mov
cmp
mov
int3
mov
xor
pop
inc
stc
repz
adc
cmps
mov
mov
sahf
das
sti
or
rcr
pop
lods
adc
or
test
mov
or
xchg
and
mov
inc
ret
and
sti
xor
lods
jo
and
lahf
mov
mov
mov
push
cmps
aaa
dec
xor
push
pop
bsf
jbe
gs
pop
test
or
addr16
mov
icebp
mov
movs
xchg
ficomp
add
sub
cli
cmps
jnp
dec
fcomi
(bad)
cs
nop
sbb
pop
pop
repnz
inc
xor
sbb
xchg
lds
dec
fwait
sub
add
sbb
cdq
je
icebp
sbb
je
or
cmp
cwde
in
sub
ficomp
xchg
sbb
lock
add
cwde
shl
mov
ror
push
gs
xor
loope
xchg
clc
iret
js
lock
test
xor
lahf
jmp
adc
mov
gs
mov
pusha
loopne
jmp
adc
jle
ss
cmp
inc
lea
in
retf
icebp
and
pop
repz
add
ret
cld
in
test
lods
(bad)
sti
mov
mov
or
jecxz
test
push
add
call
dec
shr
sub
shl
in
imul
adc
mov
lods
push
rcr
lods
(bad)
cmc
cli
addr16
jge
lock
push
loopne
ja
stos
mov
sbb
push
adc
into
fistp
mov
mov
int
xor
pushf
(bad)
pop
adc
in
fld
fldenv
inc
or
xchg
outs
inc
je
push
xchg
test
(bad)
out
mov
iret
adc
std
inc
pop
addr16
jae
sbb
pop
sbb
dec
loop
out
mov
and
ins
jns
in
scas
mov
pop
fcmove
shl
pushf
push
shl
stos
(bad)
adc
fdiv
imul
cmp
popa
out
dec
jmp
inc
ss
stc
mov
jg
push
daa
inc
jle
cli
cdq
xor
lods
sbb
push
(bad)
mov
imul
popa
push
pop
into
mov
mov
repz
dec
xor
inc
mov
jg
mov
(bad)
bound
dec
sbb
lods
xlat
inc
adc
(bad)
jge
push
bound
repz
add
sub
data16
cmp
adc
stos
fisub
push
mov
popa
pop
and
cmp
add
repnz
sbb
fmul
shl
push
scas
dec
rcr
mov
pop
outs
test
add
push
outs
xchg
sahf
cmp
pop
cmp
adc
int
fwait
xchg
shr
int3
jmp
sub
xchg
push
xchg
pop
dec
movs
(bad)
cld
call
add
shr
test
outs
mov
jmp
cmp
int3
popa
leave
ins
out
ss
retf
or
jp
imul
xor
sub
add
sub
pop
and
jne
pop
xor
cmp
int3
mov
push
jecxz
mov
push
cmp
test
shl
push
js
jecxz
ja
ja
fs
sbb
fdiv
fiadd
mov
mov
pusha
mov
and
gs
jbe
pop
ficomp
jmp
mov
push
jne
icebp
test
sub
es
add
addr16
cs
call
adc
jge
clc
or
stos
call
fiadd
dec
adc
mov
(bad)
jns
imul
dec
lods
ds
mov
xchg
out
mov
and
jae
dec
or
arpl
(bad)
daa
adc
pop
mov
push
cmp
pushf
xchg
add
inc
mov
inc
mov
add
pop
add
cs
mov
bound
(bad)
inc
sub
lds
or
fcom
or
lock
mov
jl
sbb
cs
(bad)
bound
neg
cmps
fdecstp
xchg
xor
nop
addr16
scas
aas
(bad)
icebp
jnp
pop
xchg
cmc
cmp
mov
jb
hlt
ficomp
ss
ret
push
fs
enter
iret
outs
adc
lds
push
inc
nop
cmp
jge
test
mov
jae
(bad)
in
lods
cmc
or
xchg
push
jmp
sub
cmc
(bad)
bound
push
jge
adc
sub
retf
mov
jae
mov
or
add
shr
fisub
scas
stos
loop
sub
or
sub
ins
das
add
inc
xor
clc
xor
add
daa
shl
int3
mov
or
fnstenv
adc
adc
push
jmp
push
adc
je
xchg
lea
fild
push
and
mov
pop
sbb
test
pop
add
out
inc
mov
push
outs
jb
ror
movs
ins
(bad)
cli
cmps
jl
retf
inc
mov
mov
add
pusha
cmc
gs
movs
lea
in
or
mov
fwait
sbb
xchg
xor
scas
dec
cmp
jl
or
xchg
(bad)
call
lods
inc
(bad)
leave
ins
sub
int3
movs
sbb
mov
xchg
out
pusha
xchg
xchg
and
out
mov
cli
jmp
pusha
mov
push
xor
jecxz
mov
imul
rol
pop
test
aaa
pop
mov
sbb
pop
jle
inc
and
mov
into
movs
cwde
mov
jne
outs
xlat
pop
lods
inc
sbb
mov
fdiv
cdq
test
gs
mov
sub
mov
push
ror
outs
or
jp
ror
daa
fisubr
(bad)
aas
das
pop
adc
mov
test
push
sub
scas
pop
out
mov
xchg
or
pop
je
mov
pop
adc
stos
rcl
xor
adc
dec
into
sbb
or
mov
retf
test
repz
or
adc
pop
dec
das
pop
je
push
sti
call
xor
sub
mov
sub
or
pop
sbb
out
xor
dec
fs
xor
hlt
js
jmp
retf
js
div
test
jns
xor
pop
fnstcw
add
sub
pop
mov
fisttp
and
xchg
push
and
retf
sub
enter
mov
retf
bound
(bad)
fisub
add
inc
sub
es
sbb
call
sub
xchg
adc
push
and
cwde
inc
sub
dec
pop
pop
push
out
cmp
push
jp
jne
inc
je
aaa
mov
mov
pop
push
cmp
push
and
jl
pop
jae
in
jmp
out
loop
xor
dec
nop
pushf
fmul
sti
outs
mov
repz
push
push
mov
cmp
push
push
xor
sahf
loope
movs
call
addr16
sbb
mov
nop
mov
outs
jnp
test
lock
test
bound
adc
mov
inc
fisttp
xchg
ins
mov
push
int3
push
rcr
cmp
inc
fild
loopne
ds
mov
sbb
inc
imul
into
lods
aaa
xchg
mov
sbb
aad
ret
push
pop
mov
mov
ror
call
xchg
pand
ss
bound
frstor
in
sbb
mov
jb
mov
and
mov
pop
push
xor
add
mov
daa
dec
scas
inc
enter
push
cmc
(bad)
lahf
js
push
sub
or
test
out
dec
shrd
test
xchg
aaa
repnz
pop
stos
push
pop
and
(bad)
iret
jne
(bad)
out
mov
aad
adc
in
push
rcr
mov
adc
sub
aaa
das
mov
xor
neg
adc
dec
ss
fwait
rcr
(bad)
push
mov
mov
(bad)
mov
inc
mov
inc
mov
lods
pmulhw
inc
mov
loop
outs
(bad)
rol
pop
mov
(bad)
xor
aaa
sub
call
(bad)
in
lods
movs
sti
xlat
in
pushf
daa
ins
push
sahf
out
adc
stos
imul
pop
jl
loop
test
inc
mov
xor
cmps
xor
adc
imul
sub
int
mov
sub
out
add
pop
clc
jnp
and
add
int
adc
push
sub
outs
lock
shl
jb
cmp
fwait
scas
and
retf
mov
out
icebp
or
hlt
(bad)
jmp
cmp
inc
sub
retf
or
rol
push
ror
inc
movs
fistp
add
jne
jecxz
out
(bad)
into
xchg
or
lahf
sub
xchg
ret
jle
cmc
shl
and
ins
ret
and
iret
inc
outs
mov
pop
ja
push
adc
fnstcw
push
inc
jp
enter
jmp
retf
cmp
mov
sub
jle
ret
mov
mov
pushf
lock
ins
sub
xchg
pusha
xor
into
sbb
out
sahf
ficomp
outs
outs
xchg
add
psubq
inc
mov
dec
pop
jo
ins
outs
sub
test
xchg
push
mov
mov
jmp
movs
cmp
jne
push
or
mov
jmp
retf
fdivr
xchg
jno
sbb
mov
mov
jle
mov
sti
cmp
lock
not
loopne
xor
(bad)
ins
in
xchg
dec
aad
inc
xor
loopne
inc
or
sub
retf
and
fst
push
adc
std
jns
and
scas
dec
cmp
xchg
sub
nop
inc
pop
jnp
int3
pop
jb
stos
sub
pop
fstp
push
pusha
jl
jl
ins
mov
and
into
xlat
cmp
pushf
inc
scas
jle
int
mov
add
cmp
jae
adc
xchg
push
loopne
loope
in
adc
pop
test
(bad)
xchg
repnz
and
xchg
dec
push
sub
xchg
add
lea
loop
jle
iret
fdiv
and
sbb
push
and
mov
cmc
cdq
push
lds
dec
shl
cmps
fstp
inc
test
movs
jb
jl
inc
dec
or
mov
mov
sbb
jge
mov
mov
xchg
cli
(bad)
xor
inc
icebp
sub
sub
fs
out
mov
in
je
or
test
add
adc
or
ja
cmp
xor
out
push
and
int
xchg
fsubr
bt
or
cmp
cmp
cmc
gs
xchg
pop
inc
pop
xchg
inc
shl
sub
push
out
jb
pminsw
ret
adc
js
mov
mov
repnz
iret
mov
pop
mov
xchg
es
dec
ins
xor
add
in
dec
sub
and
cli
mov
xchg
mov
shl
test
mov
and
mov
loope
mov
xchg
inc
sar
push
addr16
cli
jge
(bad)
adc
repz
cmp
cmp
mov
popf
add
mov
dec
dec
data16
sbb
adc
lds
lods
dec
mov
cmp
out
mov
mov
pop
sbb
addr16
mov
mov
nop
cmp
pop
xlat
fadd
jg
outs
aad
mov
in
xchg
mov
xor
scas
retf
inc
arpl
iret
gs
call
call
sbb
mov
test
xchg
in
pop
iret
out
mov
jae
xchg
enter
inc
fcom
jl
pop
enter
les
add
test
mov
sbb
pushw
mov
inc
xchg
jg
int
mov
fxch
xchg
pop
mov
push
sub
mov
ins
lods
lods
mov
mov
lods
xchg
and
repz
sbb
pop
lock
mov
gs
ror
sbb
popa
loop
or
cld
inc
xlat
pop
and
mov
rol
pushf
adc
dec
cmp
push
sub
stc
xchg
dec
das
push
lea
inc
mov
stc
int3
push
paddb
pushf
das
add
ja
ins
das
enter
push
rcr
mov
aas
xchg
dec
sbb
int3
adc
test
pop
test
xor
stos
mov
cmps
rcr
inc
inc
pop
das
enter
retf
pop
loop
leave
sub
inc
out
pop
retf
aam
jno
es
push
add
call
arpl
pop
ins
jl
rol
outs
sbb
or
sbb
cld
and
push
sub
sub
jb
or
test
mov
add
aas
enter
int
cmps
bsf
push
sbb
push
jo
scas
xchg
scas
dec
mov
rcl
xor
loopne
jmp
iret
xor
xor
dec
sbb
xor
pop
xchg
repnz
sbb
or
push
jg
fsubr
stos
mov
aas
sub
arpl
repnz
in
xchg
shr
stos
jb
xor
dec
dec
cld
fsubp
mov
xchg
mov
loope
push
cdq
mov
fwait
(bad)
test
popf
js
mov
xchg
fld
cmp
imul
inc
jae
es
jle
icebp
dec
dec
fisub
dec
or
jnp
in
or
das
scas
xchg
jns
mov
movs
mov
pop
mov
mov
push
aaa
in
pop
mov
outs
sbb
xor
test
add
pop
test
cmp
adc
jno
pop
add
push
sub
enter
nop
cmps
push
push
sbb
push
mov
xlat
pop
mov
icebp
retf
xor
loope
mov
cmp
je
scas
mov
shr
ret
mov
out
dec
push
ja
sahf
lds
push
leave
jge
shl
idiv
(bad)
jae
in
outs
cmc
arpl
arpl
and
mov
ins
xchg
and
xchg
push
or
xchg
cmp
movs
dec
sub
xor
mov
push
fidivr
test
out
xor
scas
daa
call
cwde
push
xor
adc
(bad)
call
into
loopne
pop
xchg
cwde
and
and
inc
stos
or
sbb
jmp
mov
sub
push
pop
mov
push
fs
inc
rcl
leave
push
xchg
and
mov
sbb
add
je
clc
inc
(bad)
mov
xchg
popf
mov
test
(bad)
cld
sbb
pop
mov
scas
mov
les
mov
push
add
and
inc
ds
push
mov
xchg
pop
xchg
inc
xchg
fdivr
std
pop
cmp
and
dec
and
stos
mov
push
mov
inc
stc
fistp
xor
and
xor
xor
and
xchg
mov
daa
add
(bad)
lahf
and
enter
cmp
cs
jb
adc
add
sub
out
jb
cmp
retf
mov
fsubr
pop
sbb
jg
daa
mov
(bad)
fidivr
mov
movs
pop
xor
dec
jmp
enter
xchg
cmc
leave
loope
or
test
retf
jns
jmp
pop
cmp
mov
sbb
(bad)
outs
or
sahf
xchg
mov
imul
sub
push
jecxz
std
xchg
(bad)
jae
sub
fld
ret
js
es
add
cmp
xor
push
pop
test
mov
enter
pop
cdq
in
xchg
(bad)
stos
aam
or
jg
jae
add
ds
pop
xchg
sar
sti
jecxz
xor
mov
push
mov
xor
xor
pop
inc
data16
into
pop
mov
ja
jge
int3
popf
xchg
inc
mov
out
test
mov
lds
mov
stos
dec
repnz
jb
psubusw
std
ins
jle
cld
iret
mov
add
aam
push
push
fist
or
xchg
jmp
addr16
push
mov
sahf
(bad)
in
mov
out
mov
lods
ret
add
or
repz
sbb
push
imul
fistp
movs
out
leave
rcr
jb
in
jmp
fcomp
ins
pop
or
adc
push
mov
out
or
adc
hlt
inc
fbld
xchg
fisub
das
ins
and
addr16
into
retf
retf
mov
stos
dec
ins
rcr
and
xchg
sbb
in
addr16
pusha
scas
mov
push
lods
or
out
ins
ja
dec
add
dec
cmp
xchg
dec
mov
jg
test
fs
sub
cmp
pop
xor
inc
out
pop
or
test
aas
jecxz
fild
and
repnz
data16
xlat
sub
push
sbb
repz
ja
call
scas
or
dec
lahf
mov
aas
and
outs
pop
mov
inc
jecxz
cwde
jecxz
loope
sar
xor
fistp
mov
and
add
adc
xor
jg
in
mov
out
stc
scas
jo
in
rcr
shl
retw
xlat
ror
xor
es
mov
movs
in
call
jb
js
sub
inc
(bad)
scas
push
out
(bad)
adc
sbb
dec
mov
rcl
ja
retf
or
mov
cmp
fld
hlt
test
aaa
mov
push
dec
adc
pop
push
in
cs
lds
mov
push
in
not
fisubr
dec
push
sub
jmp
(bad)
xchg
mov
mov
(bad)
ja
stc
jb
cmp
mov
cmps
push
xor
in
fild
out
popa
dec
ins
add
mov
sti
aad
push
jp
sub
pop
nop
push
sahf
inc
xchg
enter
(bad)
push
dec
imul
loope
sub
cmps
hlt
or
xor
or
lea
and
push
mov
test
inc
jb
and
mov
dec
dec
cmp
jno
stos
xchg
and
(bad)
aas
test
sbb
mov
adc
or
call
rol
and
mov
hlt
mov
(bad)
stc
adc
inc
push
or
imul
jnp
scas
mov
push
pop
add
arpl
sbb
jo
loop
cmps
cmp
jnp
jno
daa
pop
js
mov
or
dec
mov
test
dec
leave
xchg
sbb
adc
push
xor
js
int3
call
push
or
mov
and
sti
mov
lds
xor
ficom
repz
jp
lds
adc
sar
fidiv
aam
lahf
int3
movs
stc
sbb
stc
cwde
dec
xor
adc
or
popa
adc
mov
iret
pop
cmp
and
sbb
fmul
fisubr
repz
sub
dec
dec
sub
mov
xor
fcomp
dec
mov
dec
lods
push
pop
test
mov
inc
push
cmp
hlt
dec
push
adc
and
cmps
xchg
xor
sub
rcr
repz
cmp
(bad)
jmp
out
lds
adc
pop
xchg
jno
jle
cmp
push
jbe
xchg
push
lock
dec
jnp
add
mov
outs
out
sub
addr16
mov
fistp
pusha
fsubp
inc
rcl
repz
add
ss
div
sub
xor
pop
(bad)
sti
add
test
sub
test
adc
push
xor
cwde
xor
ret
mov
test
daa
out
mov
mov
fs
adc
mov
cmp
sbb
bound
test
fwait
ja
jno
loopne
add
adc
pusha
push
cmps
aam
mov
sbb
mov
xor
xchg
test
pop
aaa
in
loope
xor
dec
cmps
pop
jmp
out
in
push
inc
test
stos
repnz
mov
jmp
push
mov
lods
out
ret
and
xchg
in
xor
mov
mov
retf
data16
inc
nop
movs
in
shr
out
jns
daa
mov
(bad)
jmp
jmp
lods
fcom
sar
xchg
out
jne
(bad)
mov
inc
fisub
retf
stos
xchg
rcl
xchg
lds
icebp
inc
test
dec
sti
outs
cmc
movs
xchg
sar
cmps
pop
xchg
or
test
adc
out
or
xor
div
jge
cwde
mov
mov
inc
pop
in
pushf
repnz
mov
push
dec
sar
inc
enter
xor
sbb
mov
xchg
shl
stos
push
repz
pop
(bad)
mov
cmp
popf
inc
sbb
rol
rol
lods
shr
push
mov
mov
sbb
mov
mul
pop
(bad)
loopne
fdivr
daa
es
push
or
cwde
jle
out
mov
stos
inc
mov
adc
push
jg
mov
push
arpl
loope
sti
xchg
fdiv
inc
mov
sbb
jmp
cdq
pop
aaa
inc
add
das
cmps
cmp
in
sub
adc
mov
cmp
sbb
enter
mov
inc
push
adc
inc
or
mov
sbb
out
mov
cmp
dec
xchg
or
xlat
call
adc
pop
jno
jle
lea
pusha
lods
inc
push
cmps
mov
jle
cmp
popa
lds
mov
fild
enter
sbb
fadd
push
or
adc
out
and
sub
rcl
xchg
imul
bound
call
loope
dec
test
push
mov
xor
outs
std
mov
cdq
fisttp
jp
jg
std
xchg
mov
ja
or
pop
xchg
imul
fbld
cmp
pop
lock
in
movs
imul
xchg
fnsave
xchg
sar
add
lods
imul
int3
sbb
sti
cmp
mov
aaa
xchg
in
ss
xor
lods
fldcw
mov
lock
gs
mov
jmp
mov
adc
aas
and
and
data16
pop
out
nop
rol
lods
movs
retf
fistp
jmp
xchg
sub
test
loope
push
push
pop
repz
add
(bad)
jns
fistp
and
ja
in
dec
xor
pop
mov
xchg
or
int3
xor
push
test
cld
shl
fbstp
cmp
cdq
lea
(bad)
push
xchg
xchg
xchg
xchg
jl
push
clc
retf
jle
addr16
je
xor
cmc
mov
lods
fwait
pop
cmp
adc
pop
sbb
jge
xchg
aam
mov
mov
mov
dec
es
cmp
mov
jge
jbe
lods
add
sub
push
sbb
mov
push
ss
jbe
pop
enter
push
fmul
cmc
xlat
cmp
mov
movs
xor
(bad)
lds
push
adc
ror
jmp
(bad)
and
inc
mov
shl
cmps
fsubr
xchg
inc
in
gs
stos
loop
(bad)
movs
aam
int
xchg
xor
(bad)
mov
shr
xlat
sbb
mov
xchg
pop
sub
or
add
das
(bad)
(bad)
push
out
push
mov
mov
mov
pushf
and
cmp
jmp
not
outs
aaa
mov
xchg
adc
sbb
add
fwait
or
mov
inc
repz
aam
dec
test
shl
inc
sbb
xor
icebp
cmp
dec
jl
pushf
sub
push
mov
das
shl
rcl
jl
add
int
clc
sbb
mov
inc
cs
push
or
inc
xor
nop
mov
scas
sbb
inc
das
test
jmp
mov
xlat
xlat
ret
add
and
ins
in
loopne
bnd
xor
scas
push
mov
dec
rcr
es
(bad)
repz
ja
cmp
inc
(bad)
fidiv
add
inc
aad
dec
pop
add
dec
mov
es
pop
shl
mov
cmp
sbb
mov
dec
inc
lea
add
stc
and
ret
(bad)
imul
out
dec
lea
call
jle
icebp
div
mov
xor
jb
pop
vrcpss
inc
sbb
mov
xor
sbb
fwait
movs
jno
fsub
cmp
aam
clc
mov
ss
lds
xor
mov
loopne
imul
stc
cdq
int
xchg
cmps
jle
gs
mov
fnsave
sub
push
aas
push
xor
sub
dec
sub
test
mov
sbb
leave
jo
push
je
adc
push
je
push
adc
push
shl
stos
adc
adc
sbb
push
loop
jb
and
push
pop
cli
xor
fucomip
mov
inc
fdivp
jo
not
pop
inc
mov
cs
pop
push
push
xor
sar
mov
je
outs
push
retf
mov
iret
lock
adc
mov
sbb
stos
jg
mov
and
xor
and
hlt
lea
pop
call
in
pop
loopne
std
(bad)
mov
je
and
cmp
scas
xor
mov
mov
push
sbb
repz
dec
inc
ret
call
inc
sbb
scas
out
cmp
ins
mov
outs
(bad)
in
fcmovne
add
shl
cmp
adc
and
lods
mov
cmp
mov
outs
xor
imul
pushf
data16
sar
mov
in
xchg
or
xchg
inc
mov
inc
fs
ins
or
lods
xor
ror
xchg
push
(bad)
mov
jno
push
fucomp
aad
pushf
dec
leave
and
lods
cmp
or
not
dec
pushf
inc
shl
fucomi
cmp
out
mov
inc
mov
ds
push
sub
in
lods
xor
lahf
jne
xchg
ja
jnp
cmp
shl
rcr
xor
test
daa
and
push
dec
sbb
xlat
loop
ror
mov
jae
fbstp
sbb
imul
push
push
cmp
add
jo
cmp
push
sahf
mov
pop
mov
popf
sbb
retf
inc
cmp
fcomp
pop
mov
adc
sbb
iret
xor
or
adc
push
add
mov
mov
cli
xchg
push
pop
push
pop
mov
dec
pop
movs
frstor
mov
mov
xchg
pop
cmc
mov
xor
jle
pop
daa
imul
scas
(bad)
dec
scas
pop
cmp
adc
sub
sbb
retf
daa
cmp
xor
xor
dec
inc
jnp
jbe
or
jae
fwait
sub
aaa
mov
jecxz
push
pop
push
dec
push
rep
shr
jmp
push
das
jecxz
aas
push
push
mov
ds
jmp
cmc
sub
jno
das
xchg
sub
push
sar
ror
adc
xchg
stos
in
es
xchg
jmp
mov
call
cmps
sub
bnd
cmp
movs
xlat
cmp
pop
shl
lods
(bad)
cmp
sbb
push
lods
out
shl
sbb
retf
dec
imul
jnp
pop
dec
dec
or
mov
int
out
mov
mov
cmc
out
mov
add
adc
loopne
stos
xor
xchg
in
imul
push
or
fdiv
push
rcr
adc
imul
pop
mov
adc
inc
add
mov
adc
loop
inc
bound
pop
fs
mov
push
fwait
jecxz
sub
call
adc
not
imul
cmps
js
in
int3
in
cs
jo
mov
mov
out
lahf
mov
xchg
or
mov
push
mov
repz
adc
outs
inc
add
sub
enter
jle
xor
mov
loope
ror
sbb
xor
ins
sahf
lahf
mov
imul
jb
mov
inc
addr16
push
in
not
jp
push
int3
test
stos
or
in
cmp
hlt
mov
sar
add
mov
or
iret
sti
std
loope
in
cli
mov
ds
cmp
scas
shr
inc
pop
sahf
out
in
inc
add
enter
inc
xchg
int3
or
imul
aad
mov
and
jge
div
jnp
mov
inc
pop
lods
mov
dec
push
mov
in
and
adc
sub
mov
lock
dec
out
pop
push
inc
mov
and
jmp
push
xchg
xchg
das
cs
mov
movs
into
aam
imul
sub
mov
pop
sub
stos
test
xor
add
sub
repz
adc
dec
fcom
cdq
sbb
sbb
add
jge
mov
call
mov
jmp
mov
(bad)
(bad)
clc
or
mov
mov
dec
(bad)
jne
fwait
xchg
adc
mov
or
mov
imul
int3
sbb
retf
in
movs
cmps
rcr
pusha
(bad)
cmc
shl
inc
pop
mov
jmp
and
mov
mov
and
mov
out
cdq
sar
shl
adc
inc
add
dec
cdq
stc
bound
fdivr
mov
inc
cli
sbb
mov
popa
cld
jge
fcmovne
or
aas
xchg
add
icebp
dec
lahf
call
dec
or
(bad)
sbb
cld
loope
push
push
cmp
push
xchg
jae
sar
jp
test
jnp
enter
and
dec
xchg
mov
outs
mov
imul
loopne
clc
push
mov
loope
js
scas
or
loop
call
(bad)
mov
mov
das
test
cmp
adc
mov
cmp
stos
dec
or
sub
movs
mov
neg
mov
inc
or
adc
in
sbb
jne
dec
xchg
imul
sbb
jl
dec
mov
xchg
add
outs
jmp
pop
pop
(bad)
daa
cmp
es
mov
sub
push
adc
mov
lods
daa
pushf
xchg
ja
jae
cmc
leave
(bad)
push
fbstp
sub
aaa
lock
jmp
push
xchg
mov
add
mov
lods
movs
jmp
mov
(bad)
sbb
addr16
jle
cmps
fsubr
je
cmp
mov
es
jmp
pop
and
add
add
xor
je
loop
jno
dec
aam
not
lock
fs
adc
adc
out
jnp
in
in
ja
jne
dec
lds
inc
call
and
adc
mov
adc
or
sub
dec
mov
mov
cmp
pop
and
jg
fdiv
mov
pushf
and
cld
inc
push
ins
xchg
pushf
sti
sub
sar
mov
cmp
clc
xlat
sub
test
jno
xor
jmp
push
scas
jb
add
jp
scas
dec
(bad)
dec
cmps
test
jge
sbb
test
inc
cmp
or
test
inc
jbe
imul
fsub
lods
faddp
fstp
sahf
or
mov
int
clc
mul
cmp
or
adc
cs
rcr
adc
dec
aam
gs
sub
sub
mov
fild
out
mov
sbb
adc
inc
mov
adc
push
pusha
ins
out
jne
jns
jmp
into
adc
xor
out
and
jae
mov
mov
add
xor
hlt
pop
fcomi
imul
jge
pop
mov
in
out
cmp
icebp
jle
pusha
add
ins
jnp
inc
movs
dec
fcmovnbe
test
out
mov
mov
scas
cmp
daa
xlat
int
movs
lods
xor
jmp
dec
or
and
mov
idiv
mov
aas
in
shr
mov
pop
mov
xchg
cmps
sub
call
jnp
dec
lods
in
mov
inc
mov
dec
cmps
and
xchg
dec
lds
jmp
shl
imul
mov
push
adc
mov
fisubr
xor
jge
mov
enter
ret
mov
inc
lods
xor
jns
das
push
ss
iret
cmp
jb
jo
pop
leave
inc
dec
cmp
xor
adc
test
(bad)
adc
outs
xchg
cld
call
fld
std
lahf
outs
mov
cmp
pop
xor
popf
cmp
test
xor
fnstsw
dec
mov
push
jge
retf
inc
mov
ret
daa
or
pop
sub
sbb
ret
nop
adc
hlt
mov
call
xor
imul
outs
sbb
add
clc
mov
pushf
daa
adc
mov
leave
fbstp
ds
in
pop
xchg
xor
push
fwait
xchg
mov
inc
imul
cmp
dec
mov
ins
popa
mov
movs
inc
xchg
frstor
dec
cmp
dec
or
les
mov
stos
ss
rcr
(bad)
mov
jno
aas
xor
adc
push
add
xor
push
push
and
pop
xlat
mov
pop
stos
cmp
or
adc
add
and
int3
into
xor
hlt
xor
sbb
jp
mov
das
popa
mov
(bad)
or
dec
repz
iret
cmp
jmp
call
loop
rcr
imul
sahf
mov
cdq
retf
mov
pop
pop
leave
rcl
mov
and
inc
xchg
retf
in
inc
push
xchg
fstp
dec
movs
adc
je
cmps
out
cs
aam
inc
out
shl
jmp
or
cmps
add
out
cmp
mov
test
(bad)
jmp
cmp
xor
or
push
repnz
cdq
or
push
call
mov
fs
pop
xor
xor
push
sub
xchg
mov
cmp
lods
mov
popa
int3
push
xor
push
sub
mov
mov
dec
into
in
rcl
(bad)
out
rcr
sahf
cmp
inc
ss
jmp
lea
jle
jmp
inc
sbb
mov
xchg
nop
std
push
cli
push
int3
xchg
mov
in
in
(bad)
xor
xchg
lahf
xor
test
and
out
sbb
adc
or
add
pop
xchg
inc
fild
aas
das
add
sub
cmp
test
pusha
jg
mov
or
mov
into
mov
mov
or
add
pop
mov
fnsave
and
(bad)
in
test
inc
ret
adc
sub
loop
bound
push
push
and
push
push
scas
xchg
scas
xlat
(bad)
mov
mov
aad
or
push
daa
rcl
fnstsw
jnp
daa
lods
add
leave
or
mov
mov
pop
mov
(bad)
test
imul
shl
jb
in
and
shl
pop
jae
xchg
mov
push
add
shl
mov
pop
jg
xor
cwde
push
cmp
cmp
xchg
jbe
mov
push
cmp
jno
jp
pop
cwde
xor
ins
jo
loope
les
add
imul
fwait
pop
inc
(bad)
or
movs
iret
and
dec
mov
push
inc
jne
xchg
ror
sub
add
imul
or
mov
and
icebp
add
mov
xchg
mov
and
mov
and
mov
push
and
fsub
ret
inc
jnp
loopne
jmp
add
xchg
icebp
sub
xor
inc
int3
mov
stc
add
mov
lods
test
jp
sbb
mul
inc
test
dec
inc
das
outs
daa
or
pop
push
lahf
ins
mov
cmc
inc
mov
daa
arpl
stc
inc
das
std
data16
enter
sti
inc
adc
push
call
jo
sbb
(bad)
aad
adc
push
dec
in
fidiv
sub
lahf
sti
adc
inc
ss
and
shr
int3
xchg
sub
loopne
mul
inc
mov
inc
scas
sub
jb
jno
pop
lahf
stos
fidivr
or
pop
daa
int3
mov
(bad)
push
pop
stos
mov
lods
mov
adc
stos
and
sub
(bad)
in
loope
movs
ficom
shl
pop
ins
cmp
mov
xchg
fwait
jae
rdpmc
sbb
adc
pop
pushw
test
adc
nop
lods
jmp
mov
adc
test
popf
sti
test
pop
(bad)
in
xchg
les
push
jo
not
in
cdq
test
ret
pop
mov
mov
and
jbe
mov
es
xor
inc
iret
pop
test
xor
inc
mov
js
push
push
pushf
cmc
pop
hlt
fwait
jmp
jmp
stos
xor
sub
jl
out
mov
mov
and
push
push
arpl
pop
push
xor
repnz
rcl
rol
dec
cmp
cld
cmp
fiadd
push
fs
push
sub
xor
es
scas
mov
imul
fstp
mov
jp
test
cwde
sub
pop
cli
ds
cdq
shl
cmps
iret
fnstcw
inc
push
mov
(bad)
jle
jl
adc
retf
adc
je
or
nop
outs
push
sbb
mov
add
test
push
leave
fadd
sub
and
sub
mov
mov
cli
push
inc
aam
jmp
inc
pop
inc
das
cld
out
les
mov
fld
popf
cwde
sub
or
jbe
es
inc
cmc
mov
movs
nop
jge
push
xchg
ins
cs
stos
imul
and
lods
cwde
call
or
inc
lea
push
and
ficomp
mov
sbb
fist
or
jl
or
and
mov
mov
or
je
mov
xor
cmp
mov
in
jb
loope
adc
scas
mov
mov
sub
popa
dec
movs
call
out
pop
jnp
and
pushf
pop
inc
adc
fadd
xor
inc
std
repz
xchg
in
sbb
cmp
mov
in
mov
sub
cmp
mov
cmp
push
int
scas
test
sub
xchg
mov
leave
xor
mov
lock
fdiv
(bad)
cwde
inc
pop
cld
stc
dec
jb
(bad)
mov
mov
mov
ficom
jmp
mov
mov
cmc
push
jne
mov
pusha
scas
movs
adc
fimul
dec
or
dec
repz
mov
pusha
jbe
jmp
mov
leave
bound
pop
adc
into
imul
(bad)
data16
cwde
test
jp
imul
pop
jo
sar
push
sbb
test
lock
sub
push
jno
sahf
dec
xor
fnstcw
hlt
mov
into
stc
and
lock
test
mov
fistp
and
and
sar
aad
ja
xor
jno
mov
es
aam
jnp
jmp
lock
cmc
(bad)
fldenv
pop
mov
jbe
dec
hlt
loopne
je
push
pop
mov
pop
pop
fsubr
call
stc
loop
out
cwde
ds
(bad)
lahf
in
retf
fstp
add
xchg
pop
movs
mov
jo
push
call
xchg
dec
push
adc
sub
add
addr16
out
arpl
mov
out
mov
inc
jb
daa
les
(bad)
mov
push
push
cs
jns
int3
sbb
mov
mov
bound
lods
sub
popa
popf
pop
xor
cmp
add
pop
pop
pop
inc
jno
pop
mov
fidivr
rcl
push
and
cs
or
hlt
sub
sub
loopne
xchg
lods
cmp
pop
xor
rcl
mov
jge
int3
mul
inc
cmp
and
mov
jno
into
lahf
jmp
mov
jg
fldl2e
dec
cmps
dec
mov
push
sbb
imul
loop
and
out
mov
aaa
jecxz
leave
test
cmp
mov
dec
adc
arpl
push
pop
and
pop
jae
mov
in
dec
je
mov
lods
xchg
outs
inc
ins
inc
lds
dec
xchg
inc
push
mov
adc
repnz
push
and
dec
lods
call
loopne
jbe
adc
loopne
xor
push
mov
mov
cdq
jmp
xor
out
push
int3
pop
rcl
cli
loop
mov
xchg
call
shl
mov
and
imul
jbe
jle
cli
ss
nop
add
cmp
xor
inc
push
sbb
mov
int3
mov
jmp
sti
or
cmp
push
sbb
retf
push
scas
inc
and
dec
(bad)
in
stc
xchg
jecxz
inc
lods
push
add
push
push
mov
cmp
cld
popf
out
cmp
xlat
jns
mov
jge
jmp
sbb
pop
bound
adc
mov
mov
or
mov
daa
xor
jb
dec
mov
adc
mov
xor
jb
and
ret
pusha
pop
push
and
mul
and
into
aad
aad
jl
xor
idiv
cli
xchg
push
ins
inc
rol
fcmovu
sti
inc
pop
add
push
(bad)
lds
pop
popf
cli
cdq
sti
test
data16
das
pop
sbb
popa
test
and
idiv
sub
and
xchg
sti
push
push
xor
div
sub
mov
and
sbb
mov
fsubr
adc
and
xor
fistp
inc
aad
call
jl
paddb
cmp
xchg
cli
sub
cmp
and
(bad)
rcl
or
or
into
jnp
outs
scas
inc
fidiv
cmp
jb
repnz
psllq
icebp
lods
clc
test
push
xor
dec
jge
xchg
cdq
fcomp
mov
add
stos
repz
xchg
push
xor
xor
retf
js
mov
xor
push
cmovno
sbb
(bad)
loope
inc
push
popa
aaa
push
xchg
sbb
pop
push
ret
add
jb
cs
rcl
lea
pop
sahf
xor
pop
push
addr16
cdq
cwde
pushw
xor
aaa
mov
out
inc
xchg
jl
mov
inc
add
das
(bad)
pop
xor
gs
mov
sbb
into
or
pop
outs
hlt
iret
push
stc
inc
mov
adc
inc
repz
retf
not
not
mov
test
out
and
out
fdivrp
push
pop
es
xchg
lods
loopne
shl
xchg
or
pop
cmp
and
jle
(bad)
push
test
inc
pop
cmp
lock
cmc
gs
xchg
out
mov
push
mov
add
sub
or
dec
dec
dec
sti
out
mov
xor
adc
xchg
dec
ja
xchg
jp
and
and
mov
ss
cs
push
not
mov
cs
sub
pop
inc
or
inc
ret
push
ror
ret
jecxz
sahf
ins
push
xor
dec
aad
sub
add
iret
aam
sub
and
cmps
int
inc
or
(bad)
push
inc
in
ret
aas
jnp
out
mov
mov
push
dec
and
mov
mov
cli
mov
(bad)
push
aam
dec
sub
out
mov
mov
(bad)
jmp
aaa
jmp
leave
cwde
pop
test
jbe
jno
mov
jmp
jecxz
js
fwait
push
add
gs
jbe
out
outs
inc
mov
push
jo
sub
(bad)
xchg
push
add
xor
sahf
lods
in
adc
out
pop
sub
test
lods
sahf
fwait
mov
jmp
fstp
fisubr
mov
push
mov
leave
mov
or
call
or
jmp
xchg
adc
test
and
es
or
(bad)
mov
in
dec
jmp
mov
mov
loop
or
pusha
imul
in
add
pop
fbld
dec
mov
iret
xchg
lock
pop
pop
test
xchg
mov
shl
cmp
xchg
xor
mov
bnd
push
into
sti
out
fxch
inc
enter
pshufw
ins
shr
call
fsubr
int3
xchg
icebp
out
test
inc
stos
inc
jecxz
fild
jo
push
pop
push
das
mul
push
dec
pusha
cmp
and
sub
push
pop
cs
push
mov
dec
push
cwde
cmp
push
ret
mov
adc
imul
push
sbb
push
jo
xor
xchg
and
xchg
push
lahf
adc
shr
cs
stos
iret
mov
pusha
adc
mov
das
xchg
movs
or
cmp
cmp
push
dec
rcr
scas
fdiv
dec
arpl
xchg
les
test
xchg
(bad)
repz
dec
pop
(bad)
jnp
xchg
ret
cmp
(bad)
xchg
leave
sbb
adc
jnp
dec
(bad)
into
sbb
cld
pop
in
xor
ret
mov
adc
jp
(bad)
cmp
inc
cmps
outs
dec
xchg
jnp
jo
cli
imul
(bad)
ja
sbb
fnstsw
sub
aas
test
add
xlat
cmp
(bad)
mov
inc
and
lods
and
ins
xchg
jo
retf
mov
mov
xchg
inc
aad
and
and
sbb
(bad)
popf
outs
sbb
or
(bad)
cli
retf
push
jp
stos
out
or
push
cmps
les
popf
ins
(bad)
bound
movs
sbb
cmp
dec
adc
lods
jge
ds
pop
mov
mov
sbb
out
pop
cdq
mov
jnp
cmp
mov
mov
repnz
pop
outs
cld
push
dec
ds
add
mov
add
lods
dec
aad
nop
xor
test
push
das
push
lods
xor
mov
or
adc
mov
dec
neg
ins
imul
hlt
mov
retf
sbb
out
je
cld
sub
in
cmp
xchg
dec
into
cmp
mov
(bad)
dec
cmp
(bad)
adc
dec
fmul
enter
mov
mov
in
push
jmp
shr
dec
xchg
out
adc
inc
jg
adc
ret
(bad)
jne
das
outs
or
mov
sbb
dec
fcomp
pop
out
ja
inc
ret
retf
into
pop
mov
xor
pusha
adc
aaa
push
les
mov
add
jae
in
pop
mov
loope
sahf
xor
mov
pop
jae
repz
fnstcw
imul
mov
push
inc
jno
xor
jmp
cmp
cmp
mov
in
jnp
aas
or
xor
ror
fisubr
sub
jg
dec
pop
add
mov
push
mov
iret
loop
jmp
mov
sub
mov
lahf
adc
push
jns
scas
int
cmp
mov
pop
dec
sub
xor
cmp
dec
mov
mov
mov
ret
pop
sbb
jg
pushf
movs
outs
mov
jne
adc
cmp
repnz
sbb
xor
xchg
cmp
or
pop
inc
into
push
cli
stos
sbb
cmp
sahf
xor
out
mov
les
outs
add
sbb
xor
retf
imul
dec
cmps
js
test
stos
sub
push
jmp
adc
xchg
xor
and
and
sub
mov
jmp
loop
(bad)
jmp
push
ins
ds
ins
jmp
test
push
repz
mov
ret
adc
ja
cmp
test
in
movs
ret
sub
push
ret
pop
ror
mov
shl
pop
in
dec
bound
ret
jno
xchg
test
cli
and
adc
pusha
lods
jnp
shr
ins
jmp
pop
cli
cmp
cmp
cld
inc
push
lahf
push
dec
scas
pop
lahf
add
lods
xor
mov
and
mov
sub
mov
cmps
leave
repnz
pop
mov
in
pusha
(bad)
clc
mov
ss
cdq
in
inc
cmp
xor
icebp
and
xor
and
scas
mov
fsub
stos
mov
ret
inc
leave
add
xchg
sti
ficomp
sbb
xchg
dec
adc
dec
dec
nop
jbe
and
mov
jmp
sbb
in
scas
jb
int
fcomp
fldcw
mov
cmp
and
xchg
sub
fsubp
jp
push
jo
aas
xchg
das
pushf
movs
pop
sub
ds
hlt
xor
pop
xchg
repnz
jbe
sbb
pusha
lea
int
lock
dec
or
jb
call
call
jnp
xchg
scas
fmul
cwde
imul
inc
or
retf
xchg
icebp
add
mov
imul
inc
inc
ins
cwde
pop
scas
idiv
inc
ss
inc
cmp
arpl
mov
jl
jg
outs
repz
lea
cmp
or
data16
cdq
cmc
cmp
in
xor
push
in
push
fwait
mov
jl
imul
xchg
cdq
sbb
dec
and
fwait
retf
lahf
push
ret
mov
retf
cmps
cmps
mov
sub
pop
aas
xor
imul
cmp
les
(bad)
and
add
mov
mov
stc
dec
pop
ror
dec
stc
call
xchg
dec
daa
adc
(bad)
adc
mov
adc
test
nop
mov
mov
ja
push
fcom
test
(bad)
and
xor
push
subps
fs
sbb
arpl
jl
adc
and
(bad)
mov
sub
dec
das
jmp
in
retf
ret
add
cmp
mov
ret
xor
fisubr
lahf
or
and
into
out
sbb
lahf
sar
mov
sub
test
retf
xor
sbb
pop
mov
xchg
jae
sbb
add
cmp
inc
ret
jge
pop
pushf
int3
jbe
sub
and
mov
ret
fcom
popa
pop
movs
rcr
mov
fwait
aam
(bad)
fcomp
push
cli
dec
push
xchg
xchg
in
movs
rol
and
lea
adc
push
into
dec
dec
stc
loopne
sub
stos
mov
push
mov
mov
popa
out
imul
inc
mov
(bad)
xlat
ror
dec
lock
pushf
pop
xor
stc
mov
pusha
into
jns
mov
(bad)
and
sub
std
pop
ret
sbb
mov
inc
in
cdq
mov
xchg
add
mov
mov
mov
fisttp
cmps
mov
jns
mov
sbb
adc
xchg
mov
lock
movs
sbb
pop
test
shl
std
mov
and
pop
retf
int3
mul
pop
retf
ins
push
test
repz
adc
je
ret
xchg
xchg
jecxz
jno
cmc
sub
imul
loopne
xchg
outs
pop
(bad)
inc
adc
mov
cmps
popf
sub
retf
inc
mov
cmp
addr16
js
sub
movs
into
movs
scas
repnz
mov
bound
cmp
sub
jbe
repz
or
jle
or
sahf
clc
leave
shl
mov
(bad)
arpl
sbb
in
lods
inc
mov
mov
les
call
xchg
sub
or
clc
xor
add
rcr
push
sub
daa
or
popf
icebp
sub
inc
das
dec
push
push
(bad)
mov
in
shl
cld
ins
fs
ins
(bad)
sub
sub
xchg
jb
test
mov
add
(bad)
sbb
xchg
ins
and
cmp
adc
test
je
leave
or
loopne
ins
data16
jo
out
scas
mov
test
cwde
adc
xchg
mov
pop
icebp
ds
inc
dec
stos
je
jnp
movs
jne
adc
cmps
ret
inc
out
clc
pop
mov
sub
arpl
popf
cmp
pop
ds
push
repz
sar
xor
lahf
inc
and
push
inc
pop
ins
sub
pop
call
cmp
mov
fcom
cld
cmp
add
mov
cmp
push
stos
pop
add
scas
dec
mov
jmp
cmp
lahf
out
mov
ror
jmp
in
mov
in
or
loopne
pop
lods
pop
xchg
pusha
or
add
je
xor
outs
xor
(bad)
mov
or
dec
mov
mov
xor
jg
pop
pop
push
cmp
ins
nop
mov
pop
out
cli
mov
xlat
movs
ret
cmps
pop
pop
ret
jns
and
xchg
lea
mov
jo
js
(bad)
push
pop
xchg
adc
xchg
js
cli
(bad)
shl
repnz
cmp
jbe
and
add
push
mov
pop
sahf
stos
fcom
inc
xchg
sbb
add
and
or
setp
push
jmp
mov
cmp
ficom
cmp
pop
div
daa
and
call
aaa
adc
pop
fdivr
es
mov
mov
inc
mov
jbe
retf
push
sti
adc
add
pop
mov
xor
dec
mov
mov
pop
outs
dec
out
add
xchg
xor
dec
in
inc
and
js
inc
ins
js
aas
jns
in
add
lock
(bad)
adc
std
(bad)
in
cli
scas
lods
clc
and
and
or
scas
jmp
sub
pusha
jne
jge
imul
adc
cmp
push
push
sub
loope
ins
push
mov
mov
jmp
rcr
es
push
retf
call
add
loop
imul
out
addr16
or
cs
xchg
enter
int
xchg
stos
ja
sub
xor
and
inc
int
or
fimul
(bad)
mov
test
mov
pop
scas
push
je
fisub
lea
xor
gs
push
(bad)
out
sub
shl
mov
cwde
xor
adc
and
lods
mov
jbe
jmp
and
out
jp
es
sbb
aad
mov
sub
sbb
pop
rol
arpl
popa
into
mov
mov
icebp
mov
in
and
push
pop
dec
nop
jnp
adc
mov
dec
mov
ficomp
aad
sub
inc
push
dec
lods
mov
leave
push
enter
dec
push
inc
aaa
nop
movs
clc
jl
push
cdq
jp
out
mov
lock
ins
pop
les
or
rcl
clc
retf
jb
jecxz
sub
mov
jecxz
fcomp
(bad)
and
pop
ror
xor
daa
pusha
es
ret
jmp
rcl
fld
push
mov
scas
mov
pop
in
es
sub
dec
adc
adc
imul
xchg
push
dec
cmps
ret
add
dec
and
and
out
in
jmp
add
ret
add
rol
jl
es
stos
mov
outs
xor
ret
jne
popf
lods
jmp
mov
mov
xchg
add
test
jmp
std
fadd
(bad)
or
lods
dec
cwde
jns
out
fadd
cld
sub
repnz
and
mov
mov
outs
aam
mov
mov
cmps
ret
cld
and
jp
xchg
and
pop
sbb
loop
js
mov
push
and
xor
ins
mov
push
mov
mov
cmps
pop
rcr
mov
jno
out
in
pavgb
push
cmp
pop
jae
jp
fldenv
mov
and
fidivr
gs
dec
ins
mov
xchg
leave
xor
fst
add
push
xchg
push
retf
push
call
pop
jle
cmp
hlt
sub
(bad)
imul
xor
xlat
inc
outs
fs
enter
rcl
aaa
in
inc
jno
or
test
cli
or
repz
or
mov
aas
pop
cwde
xchg
ss
dec
cmp
and
dec
adc
xor
(bad)
fs
arpl
sbb
sub
or
loop
bound
fidivr
cli
mov
mov
mov
imul
rcl
hlt
xor
sub
and
js
leave
cmp
pop
mov
xor
mov
arpl
pop
int
xor
fst
test
je
push
(bad)
cmc
mov
cli
cmp
call
out
ja
pop
sar
mov
sub
adc
stos
sti
mov
call
and
push
mov
xchg
iret
mov
mov
xor
fisttp
and
dec
(bad)
sbb
mov
and
jo
repz
or
into
loop
into
out
mov
adc
call
dec
pop
xchg
adc
add
pop
cmc
jbe
inc
cmovbe
outs
cmps
cmc
cmp
aas
out
lea
sub
adc
xor
push
out
rep
dec
xchg
push
mov
and
sub
jne
(bad)
test
sbb
xchg
clc
mov
mov
jns
jg
in
in
lds
(bad)
dec
jg
add
xor
out
repz
pop
add
sbb
(bad)
adc
inc
mov
mov
inc
push
mov
js
ja
stos
je
dec
inc
add
inc
test
cld
jle
jmp
frstor
mov
xchg
fwait
int3
cmp
xor
dec
dec
push
sbb
mov
adc
cmp
pop
ret
int3
out
sub
ja
add
cmp
ficom
add
or
mov
mov
jle
or
xor
(bad)
sbb
sbb
cmc
ins
nop
mov
inc
and
out
inc
mov
mov
and
leave
mov
push
js
xor
into
jmp
lds
add
out
add
je
ret
xchg
inc
and
lods
test
hlt
cmp
push
stos
xchg
fld
(bad)
int3
test
scas
sub
lea
push
popf
sub
test
in
daa
(bad)
les
cmps
clc
jo
imul
outs
stos
clc
jbe
std
lock
int3
jle
movs
or
cwde
jmp
adc
ror
test
cmp
dec
lock
in
movs
nop
pusha
mov
enter
push
and
inc
fcompp
fadd
dec
push
xor
call
inc
pop
sbb
outs
(bad)
sti
aas
push
add
out
movs
xchg
and
(bad)
enter
xor
mov
je
(bad)
fwait
scas
cld
fwait
mov
mov
push
cmps
nop
or
dec
xor
or
mov
push
loop
cwde
dec
imul
xchg
xor
mov
cmps
and
xchg
jo
sar
mov
sbb
lods
mov
push
das
sar
cmps
movs
mov
rcr
xchg
fadd
sbb
fstp
call
jmp
test
and
jle
in
mov
and
out
inc
jbe
jmp
xor
inc
dec
mov
mov
push
cdq
pop
cmp
xor
mov
mov
or
inc
inc
pop
inc
cwde
popa
and
adc
ror
xor
cld
loopne
push
adc
lods
add
lods
mov
sbb
sbb
daa
inc
mov
cdq
xchg
faddp
out
(bad)
xchg
adc
pop
bound
rol
xor
mov
cmp
sbb
push
cs
and
int
inc
dec
aad
fisubr
push
mov
xchg
mov
out
jno
cwde
out
adc
xchg
inc
hlt
push
jmp
pusha
test
pop
jge
popa
cli
ret
or
push
data16
or
sbb
and
lahf
fadd
jp
jge
fisttp
(bad)
jge
xchg
xchg
(bad)
dec
cmc
pop
add
or
jnp
ins
xchg
sbb
ret
rcr
sbb
mov
jecxz
in
mov
mov
mov
and
(bad)
aas
jo
cmps
jne
shl
add
jno
lods
je
loopne
pop
mov
(bad)
dec
sar
cmp
ins
mov
adc
sub
pop
out
push
pop
outs
jmp
nop
setle
inc
into
sub
dec
cmc
scas
mov
pop
shl
div
cmps
adc
fisttp
clc
jne
cmps
outs
ins
sbb
push
mov
adc
dec
and
ret
xor
lods
(bad)
je
ror
push
xor
mov
nop
repnz
cmp
mov
clc
cmp
rcr
aam
sub
(bad)
aas
sub
xchg
in
mov
mov
and
movs
add
dec
inc
mov
or
fistp
sbb
jp
and
xchg
xlat
jmp
and
imul
in
add
sub
loopne
cmp
pop
sbb
or
js
data16
aam
hlt
in
xlat
fcom
arpl
push
aam
or
jmp
fdivr
fdivr
jae
xlat
int3
and
gs
mov
xchg
or
cmp
int3
pop
in
jmp
(bad)
mov
or
jp
pop
adc
jbe
mov
mov
movs
jl
xchg
mov
inc
dec
and
cs
aam
(bad)
hlt
mov
mov
adc
inc
pop
jmp
jl
push
fdivr
push
jae
(bad)
into
shr
push
or
fucomp
xchg
or
jg
xchg
jecxz
inc
mov
push
(bad)
les
sub
(bad)
or
dec
pop
adc
dec
jmp
mov
fstp
call
jg
dec
in
xor
dec
out
xor
cwde
and
cmp
ins
or
xchg
and
mov
daa
add
pop
jp
aam
or
dec
sub
addr16
retf
or
mov
gs
popa
push
push
cld
jns
pop
iret
jnp
outs
pop
inc
out
sahf
push
cmps
sub
xor
frstor
xchg
movs
sub
dec
push
xlat
lods
(bad)
xor
sub
cs
aam
add
dec
sahf
mov
inc
inc
mov
cwde
mov
outs
test
inc
fisttp
in
xor
pop
mov
and
dec
inc
add
pop
add
std
sub
ss
(bad)
cmp
or
mov
jle
jo
(bad)
jecxz
jmp
add
(bad)
and
mov
push
bound
imul
out
add
in
lods
push
cmp
pop
adc
inc
pop
mov
shr
loopne
mov
enter
mov
dec
cmps
add
mov
dec
inc
push
mov
pop
lock
lods
cmp
jle
ins
xlat
cmp
dec
gs
mov
movs
mov
addr16
jae
popa
dec
fisubr
fst
add
in
dec
not
lods
fs
je
movs
push
mov
mov
dec
pop
push
sub
int3
rcl
and
sub
and
out
xchg
out
fidivr
lea
fiadd
jnp
clc
adc
mov
mov
out
aaa
xor
mov
out
out
out
test
push
mov
fidiv
xchg
fst
loopne
rcr
dec
xchg
mov
(bad)
(bad)
xlat
das
push
mov
jg
dec
lock
xchg
cmp
sub
imul
jmp
inc
inc
out
cmp
or
push
(bad)
jle
das
pop
add
push
xchg
jae
inc
and
inc
add
jo
outs
mov
cld
pop
sbb
cld
loop
cdq
call
vtestps
je
call
lahf
pop
xchg
sbb
cmp
retf
lods
mov
leave
mov
dec
popf
add
call
cmp
test
and
and
movs
cmc
loopne
xchg
mov
mov
mov
cdq
cmp
pop
lea
jno
dec
and
rcr
call
inc
pop
test
mov
push
stc
test
inc
sbb
ja
retf
push
or
stos
enter
jmp
mov
repz
outs
mov
or
lahf
loopne
fiadd
jo
push
xor
jecxz
xchg
ret
scas
enter
shr
scas
adc
pop
pop
xchg
and
sub
jmp
push
lock
sbb
fist
loope
not
jle
lods
push
add
sar
mov
mov
inc
bound
mov
jne
(bad)
mov
sbb
out
cmp
mov
stos
data16
mov
rol
sub
stc
cmps
test
lea
or
jge
mov
test
(bad)
mov
push
sbb
aam
dec
lahf
inc
jns
in
arpl
ja
xchg
fdivr
orps
mov
pop
cmp
inc
(bad)
pop
repnz
sbb
cli
retf
mov
xor
mov
add
aas
sbb
and
sbb
inc
adc
pushf
cld
ds
mov
ins
xor
loopne
push
mov
sbb
imul
jne
lock
das
in
loope
stc
pop
sti
idiv
cs
pop
pop
pushf
je
(bad)
ret
pop
jae
xor
out
ss
sub
jp
shl
jmp
xchg
test
aad
popf
dec
sub
cwde
adc
mov
pop
outs
sub
cmps
daa
pop
mov
dec
jg
pop
sbb
xor
test
jg
jp
fnstsw
stc
add
adc
inc
(bad)
cmp
and
stos
repnz
popf
test
cmp
in
push
mov
out
ret
(bad)
retf
cwde
add
mov
outs
rol
aas
pushf
lea
sbb
mov
lds
mov
stos
sbb
and
mov
mov
test
dec
mov
in
int3
lods
mov
cmps
aaa
jl
or
sbb
add
mul
out
push
icebp
mov
fcomip
nop
pop
mov
xor
sub
hlt
scas
scas
xchg
das
fnsave
cmp
push
mov
sbb
gs
es
jl
aad
push
jne
add
test
fsub
stos
inc
mov
jle
or
enter
mov
cmp
mov
into
mov
or
imul
sbb
outs
rcl
xchg
fwait
lock
add
dec
fs
es
cli
popa
pop
mov
hlt
fwait
popf
mov
mov
je
jmp
(bad)
dec
cmc
nop
or
mov
cmp
aaa
enter
mov
mov
js
xchg
aaa
pop
(bad)
mov
mov
ins
add
cld
sbb
jg
enter
push
out
pop
lods
sub
test
add
imul
add
jle
push
dec
push
retf
das
enter
xor
stos
je
(bad)
int
(bad)
out
pop
inc
xchg
pop
aas
push
mov
repz
jge
ror
mov
cli
(bad)
test
popa
out
mov
in
sub
add
nop
inc
add
inc
das
sub
sub
push
lods
push
test
adc
daa
mov
xchg
aaa
test
ss
mov
jmp
or
inc
stos
add
mov
movs
(bad)
push
mov
xchg
bound
xchg
push
(bad)
ret
dec
sbb
jo
test
and
sti
cwde
cs
xchg
mov
test
sbb
mov
sub
or
jecxz
inc
push
cmp
mov
out
jl
ret
xchg
push
sub
mov
(bad)
push
sbb
iret
jl
enter
mov
mov
loopne
retf
dec
and
and
add
mov
in
repnz
mov
pop
xor
cmp
sbb
xchg
xchg
leave
or
mov
mov
add
out
sbb
repnz
js
imul
(bad)
stc
lahf
or
arpl
ss
xchg
out
jmp
push
cmp
add
(bad)
out
pusha
test
sub
pop
je
out
xchg
push
mov
mov
retf
mov
out
out
xchg
mov
std
lods
in
dec
bound
enter
retf
call
loopne
iret
jo
mov
data16
mov
cmps
(bad)
movsx
outs
int
in
mov
mov
pop
ja
sar
(bad)
jecxz
lea
icebp
inc
jmp
jmp
mov
mov
xchg
aam
enter
xor
xchg
mov
retf
sbb
mov
xlat
fwait
ins
dec
jmp
fdivp
jo
dec
mov
ja
out
xchg
lea
icebp
sbb
jl
scas
or
push
sbb
mov
jp
lock
xor
(bad)
pushf
jle
xor
call
ds
scas
addr16
xchg
mov
add
jl
push
sbb
popa
pop
cmp
mov
cli
mov
rol
add
mov
jno
xor
scas
hlt
aam
dec
sbb
out
xchg
bound
ss
xchg
ficomp
mov
popf
and
cmp
stc
pop
scas
push
add
mov
mov
ds
xor
call
repz
push
push
jle
push
movs
adc
mov
fisttp
sub
fcmovnb
mov
arpl
cmp
fidiv
arpl
xchg
mov
leave
scas
jp
xchg
pop
fadd
cmps
push
add
cmp
push
call
dec
jae
retf
xchg
pop
lea
mov
add
pop
enter
ins
icebp
scas
mov
push
jns
sub
aam
and
mov
call
aas
pop
xor
rol
and
lock
mov
mov
cmp
stc
xor
push
push
(bad)
jb
cli
idiv
(bad)
loope
inc
inc
mov
stc
push
jnp
pop
mov
push
push
or
mov
cmps
imul
dec
jp
sbb
movs
ret
sbb
mov
mov
aaa
daa
enter
lahf
dec
daa
mov
ins
jns
mov
test
and
sbb
xchg
pop
xor
lods
fnop
lds
imul
ficom
jle
pop
mov
xchg
out
xor
pop
bound
clc
stos
push
push
test
cmp
adc
aaa
aad
fild
xor
cwde
mov
add
mov
sbb
cmps
daa
xchg
lods
push
int
dec
and
aam
aam
mov
fld
ss
mov
and
and
mov
sub
lahf
cwde
mov
enter
(bad)
sbb
adc
mov
mov
loopne
popa
neg
sbb
jmp
pop
add
mov
add
add
int
cdq
cmp
xchg
icebp
jle
add
pop
inc
add
dec
cmp
push
sub
clc
mov
retf
and
cmp
lahf
leave
push
(bad)
inc
sbb
mov
in
loop
push
pop
stos
inc
push
xlat
rcl
or
mov
lods
lock
adc
or
cmp
out
dec
mov
loope
dec
test
and
and
popw
movs
pop
mov
sbb
int3
retf
retf
push
pop
arpl
cld
adc
dec
shr
inc
fdivrp
inc
mov
loopne
hlt
jmp
popf
push
gs
inc
inc
dec
xlat
mov
neg
and
icebp
xchg
iret
xor
pop
repnz
test
cmc
ficomp
push
add
push
mov
fdiv
mov
gs
xchg
sbb
call
mov
(bad)
jne
jnp
cmp
test
xor
xor
add
pop
repz
in
icebp
dec
cmp
cld
movs
stos
or
lods
inc
push
in
ss
and
dec
scas
fcomp
(bad)
enter
js
inc
hlt
fstp
out
pop
fdiv
inc
leave
or
or
jne
jb
xchg
jge
cmp
cmps
and
push
sbb
ins
retf
jns
out
aas
popf
push
jmp
jge
push
adc
in
imul
imul
cwde
ret
test
xchg
ror
mov
dec
cmp
stos
cwde
jge
cld
jo
jno
jbe
adc
cli
sub
aad
or
and
cmps
inc
jbe
add
shl
add
jbe
jbe
cmc
cmp
or
xchg
jecxz
lds
ja
xchg
shl
xchg
mov
dec
aad
sub
call
mov
jbe
gs
mov
iret
ret
nop
jmp
out
les
and
shl
pop
mov
jnp
inc
push
in
push
fstp
push
or
xor
xlat
pushf
mov
pop
dec
dec
hlt
jne
fiadd
push
pop
ins
shr
pop
add
aam
out
in
shl
into
push
xchg
mov
dec
mov
xor
jmp
jnp
mov
es
jne
cli
data16
jb
push
aad
pop
mov
jne
xor
adc
nop
stos
je
jle
jp
add
adc
or
frstor
lds
sbb
and
add
cmp
jmp
addr16
and
or
add
cmp
sbb
stc
arpl
pop
pop
pop
ret
mov
pop
mov
mov
add
add
daa
aaa
cli
cmp
pop
jge
adc
push
fs
push
push
add
mov
pusha
dec
jb
jmp
pushf
ins
xor
push
shl
inc
add
popf
xchg
jmp
cmp
add
jmp
xor
cld
xchg
push
mov
pop
push
mov
movs
inc
sub
push
or
jno
ds
mul
leave
xor
and
jl
jae
imul
jb
test
push
mov
ds
lea
sbb
mov
push
push
jg
pop
mov
add
pop
or
inc
sbb
xchg
inc
fwait
int
adc
push
std
mov
or
mov
mov
jp
mov
das
ret
sub
lods
xchg
(bad)
scas
ss
sbb
in
mov
cs
inc
lock
push
je
fild
adc
mov
push
loop
cdq
shl
inc
xchg
sub
in
xor
lods
pop
stos
mov
dec
mov
cwde
(bad)
sub
push
test
dec
mov
mov
dec
in
sbb
inc
or
out
jmp
mov
pop
lock
cs
das
pop
je
push
push
mov
sbb
add
and
ja
aad
sar
cmp
ror
arpl
mov
iret
movs
jge
cmp
mov
ficomp
xor
xchg
rol
inc
pop
in
sar
es
sbb
ja
cmp
mov
pop
repnz
push
xchg
xchg
xchg
push
fcomi
iret
js
push
push
fdivp
daa
arpl
mov
mov
lods
mov
and
mov
in
shl
sub
jl
jmp
out
or
jo
mov
push
movs
sbb
jbe
add
dec
mov
icebp
or
daa
(bad)
jmp
push
cmp
imul
pop
mov
shl
in
dec
idiv
mov
xchg
out
cli
mov
jmp
in
popa
dec
push
mov
pusha
(bad)
mov
int
mov
pop
enter
xor
push
sbb
hlt
mov
outs
cmp
push
retf
and
test
xor
adc
pop
and
cld
mov
push
shl
retf
js
sub
add
test
push
pop
std
iret
sbb
inc
lds
cmps
or
xchg
pop
jnp
add
aaa
iret
push
mov
out
pop
jg
test
lea
mov
outs
mov
xchg
jns
mov
das
mov
pusha
fcmovnb
fstp
bound
mov
pop
sahf
enter
sub
fbstp
int3
std
std
imul
pop
mov
push
ds
in
inc
and
popf
pop
leave
and
dec
sub
and
fistp
cwde
jnp
mov
mov
movs
(bad)
addr16
dec
push
mov
mov
xchg
jp
ja
test
(bad)
push
mov
xchg
call
jmp
popa
xchg
jns
push
pushf
je
mov
test
icebp
stc
sti
add
jmp
jge
fmulp
add
popa
xchg
mov
jle
jge
mov
push
dec
xchg
dec
push
cmps
lahf
out
add
daa
adc
fidiv
xlat
xlat
int
push
pusha
movs
fadd
into
xchg
jae
rol
xlat
loope
jge
loopne
out
adc
xchg
or
xchg
mov
mov
fimul
mov
pop
xor
fdivr
cld
mov
aaa
and
aam
inc
adc
sbb
push
add
xor
movs
and
adc
lea
adc
sub
les
lds
or
add
scas
mov
repz
in
(bad)
dec
jbe
pop
mov
outs
dec
rol
imul
dec
stos
out
repnz
call
adc
test
aas
lahf
ins
test
fcomp
inc
dec
ret
jmp
push
fadd
inc
aam
add
das
stos
mov
ins
xor
mov
mov
call
jle
adc
rcl
mov
cmp
or
sbb
sti
popa
call
push
mov
rcl
or
cdq
ins
jle
mov
push
cs
lods
enter
aas
add
outs
xchg
pop
mov
jne
dec
pop
js
mov
popa
fisubr
jbe
sar
fist
loopne
sub
loope
cmp
imul
add
ins
push
ds
push
jmp
mov
cmp
addr16
shl
inc
es
(bad)
fsubr
jmp
ffreep
jne
std
rcl
cmp
cs
sbb
movs
rcl
std
fld
mov
(bad)
in
bound
lahf
mov
stos
dec
mov
sub
imul
and
mov
daa
inc
rcr
rcl
push
js
sub
mov
cmp
gs
inc
loop
hlt
adc
cld
imul
fdecstp
shl
fsubr
mov
ret
inc
ret
inc
jg
push
les
mov
add
inc
push
pop
sbb
arpl
push
xchg
and
xchg
pop
cmp
xor
aad
outs
lods
inc
pop
sahf
fwait
movs
mov
mov
fiadd
push
mov
sub
or
mov
movs
(bad)
push
sti
inc
mov
bound
retf
arpl
loopne
mov
and
test
loope
pusha
mov
jno
fdivp
cs
inc
mov
adc
cwde
and
sbb
cmp
push
call
mov
addr16
adc
jle
aad
inc
jns
xchg
jp
mov
add
(bad)
lods
pop
pop
mov
retf
xchg
movs
sbb
mov
les
or
call
and
and
add
daa
sbb
or
add
cmp
in
pop
xchg
dec
leave
shl
or
pushf
xchg
inc
mov
cs
fiadd
call
cmp
xchg
push
stos
mov
in
pop
in
jo
ins
inc
retf
or
test
jmp
fild
adc
dec
fisub
addr16
lods
xchg
je
xchg
test
push
leave
xor
cwde
test
sbb
rcl
or
out
neg
clc
pop
mov
movs
push
div
push
into
pop
jge
out
cmp
test
outs
cld
pop
repnz
(bad)
(bad)
bound
pop
pop
clc
aas
dec
adc
hlt
rol
jb
cmp
ds
test
mov
pop
sub
icebp
(bad)
mov
cwde
mov
nop
push
jg
mov
ret
imul
imul
popf
xlat
xchg
jo
aas
push
stc
and
xchg
test
jmp
imul
ins
repz
pop
mov
jle
and
push
imul
cmp
aaa
and
jmp
stc
push
call
in
(bad)
call
sbb
mov
cmp
mov
mov
cmp
sbb
es
or
shl
icebp
mov
cli
int
scas
xor
sbb
gs
aaa
cdq
test
inc
push
jne
retf
shl
stc
dec
retf
pop
mov
push
cmp
mov
pop
(bad)
sbb
or
push
adc
int3
mov
int
popf
std
(bad)
scas
or
xchg
jmp
mov
out
clc
xor
fmul
fdiv
mov
sbb
adc
and
out
xor
add
pushf
push
push
fnstenv
mov
jnp
pop
imul
scas
mov
pop
in
sub
loope
fisttp
jo
rcr
sub
inc
jo
push
dec
aaa
mov
xor
test
fsubp
mov
push
inc
mov
imul
popf
jb
stos
jo
adc
sbb
push
ret
fwait
xor
adc
jne
dec
aas
in
jle
pop
es
push
adc
dec
aam
sbb
(bad)
stos
or
xor
ret
xchg
xchg
inc
mov
mov
mov
jnp
inc
das
inc
mov
mov
jbe
in
rol
and
lahf
sti
xchg
out
shl
daa
inc
xor
jg
cld
push
mov
sub
jo
cmp
lods
shr
xchg
loop
test
pop
clc
fsub
scas
add
std
jp
mov
(bad)
ret
fs
and
std
jno
aam
mov
xchg
hlt
mov
(bad)
not
sbb
test
leave
jnp
mul
jns
xchg
mov
adc
popf
inc
adc
rcr
dec
outs
and
cli
adc
add
inc
outs
mov
outs
pop
dec
dec
adc
dec
sub
cmp
in
mov
pop
inc
add
js
mov
xor
stc
jae
adc
les
out
push
(bad)
(bad)
in
fnstsw
push
test
shr
aad
retf
push
enter
push
push
xchg
aam
pop
dec
push
sbb
lods
into
gs
mov
shl
retf
mov
shr
mov
lods
ja
lods
xor
dec
xlat
jo
mov
xchg
push
into
gs
fisttp
inc
mov
ja
rcr
je
enter
mov
pop
mov
adc
clc
adc
repnz
pop
ficom
pop
(bad)
and
(bad)
mov
jo
sub
inc
in
xchg
loope
hlt
bound
icebp
pop
ret
outs
mov
add
adc
jnp
cmp
hlt
popf
ret
or
fincstp
repnz
inc
mov
dec
jge
xor
out
movs
or
xor
push
les
pop
pop
dec
push
data16
scas
cwde
sar
xchg
mov
cmp
add
push
fbstp
cmp
jne
call
jg
cdq
mov
cld
fnsave
dec
out
jb
dec
add
add
rcr
cld
adc
mov
mov
into
in
mov
and
push
jge
push
inc
add
cmp
out
xor
dec
cld
test
icebp
bound
add
inc
popf
pop
cmp
sbb
retf
clc
dec
push
mov
xchg
retf
retf
dec
popa
xchg
or
lods
mov
adc
call
xchg
(bad)
push
add
xchg
add
gs
xchg
jmp
loopne
je
push
adc
mov
adc
ret
int
jecxz
sub
adc
ror
frstpm(287
mov
loop
dec
adc
js
loopne
sbb
adc
cmp
in
fwait
or
lds
jbe
popa
ss
arpl
cmp
or
les
mov
cld
outs
dec
aaa
xor
repnz
xchg
cmp
pushf
lock
adc
sub
es
addr16
(bad)
aam
lods
pushf
(bad)
test
cmp
adc
sbb
fadd
lods
test
sub
xor
nop
cdq
(bad)
(bad)
mov
xchg
mov
into
mov
and
not
(bad)
fisub
sub
ja
jmp
repz
in
mov
inc
or
mov
adc
out
faddp
push
xchg
test
gs
ret
in
mov
dec
and
push
test
pop
xchg
sub
add
mov
and
sub
dec
mov
pop
js
mov
shr
fst
inc
xchg
jmp
(bad)
scas
fsub
inc
pop
mov
rcl
sbb
push
(bad)
pop
data16
xor
xchg
dec
div
mov
out
or
daa
adc
movs
outs
clc
fild
xor
aam
mov
test
pop
not
mov
xor
push
jmp
push
and
add
into
jno
mov
push
in
mov
sti
sti
mov
xchg
ret
pop
mov
inc
push
mov
dec
jne
stos
rcl
jmp
cmp
iret
int3
stos
stc
pop
and
gs
movs
aas
push
cdq
push
jl
shr
xor
inc
les
xchg
mov
outs
dec
ficom
push
(bad)
ins
add
mov
out
std
imul
das
mov
call
add
(bad)
sti
mov
push
pop
mov
idiv
adc
aam
test
(bad)
mov
add
cmp
es
js
ins
pop
ins
movs
xlat
jp
rol
adc
scas
mov
idiv
in
xor
or
ins
adc
and
xlat
call
mov
xchg
xor
fwait
or
sub
dec
xchg
jns
out
ret
popf
dec
fsub
ret
pop
pop
and
sub
mov
cwde
add
cmps
mov
mov
mov
xor
stos
pop
mov
and
es
jae
jmp
sbb
pop
cmps
hlt
jle
pop
in
mov
pop
inc
jo
xor
pop
out
or
retf
and
lock
lock
pop
inc
sbb
test
mov
jae
ins
aad
cmp
out
sub
arpl
ror
sti
or
push
cmp
cmp
leave
pop
sub
cld
jnp
jne
jae
jecxz
icebp
les
popa
call
dec
or
or
daa
jp
add
inc
sub
in
mov
(bad)
cmp
jge
xchg
popa
ficom
fild
je
dec
popa
add
add
lahf
nop
sbb
lods
mov
lahf
loopne
jmp
cli
aas
ret
rcl
repnz
pusha
daa
cmps
push
push
out
ins
ja
push
xchg
pop
add
push
call
xchg
es
aas
movs
push
push
pop
int3
arpl
repnz
imul
cli
pop
mov
rcr
sub
fs
(bad)
sbb
leave
(bad)
jnp
ins
push
rcl
mov
jns
hlt
dec
mov
sub
and
dec
movs
in
neg
mov
sbb
adc
inc
ret
das
jns
fbld
jne
fdiv
cld
scas
inc
push
bound
sbb
or
cmp
ror
xchg
xor
(bad)
mov
adc
(bad)
out
cmp
or
sub
inc
adc
pop
aaa
les
mov
sbb
dec
lahf
or
cld
jg
(bad)
repz
pop
adc
adc
fwait
in
repnz
repz
mov
fist
push
shl
(bad)
es
into
push
iret
fisttp
sbb
popa
cmp
sbb
pushf
inc
add
out
jg
mov
jbe
add
mov
xchg
call
pavgb
icebp
pop
lock
jle
xor
lds
mov
call
pop
mul
pop
xchg
push
pop
push
xchg
out
dec
imul
jge
xor
and
mov
jae
inc
mov
int3
sub
outs
arpl
outs
pusha
mov
mov
jno
retf
xchg
mov
push
xlat
add
xchg
gs
mul
popa
clc
cmp
adc
imul
mov
lock
rol
icebp
sub
sbb
mov
popa
xchg
(bad)
dec
adc
inc
xchg
mov
stos
jmp
dec
daa
popa
fld
mov
fistp
movs
clc
pop
jbe
xlat
xor
mov
dec
call
or
adc
inc
xchg
inc
movs
jo
mov
mov
repnz
js
xor
push
mov
or
dec
dec
lock
enter
outs
gs
pop
mov
fs
pop
and
pop
jp
jns
js
rcl
cmc
pop
and
add
fistp
aas
push
or
addr16
mov
sub
push
pop
stos
aad
dec
stos
les
and
cwde
lods
and
adc
ss
mov
fidiv
push
push
dec
sbb
mov
sbb
fnstcw
adc
retf
(bad)
push
fwait
jmp
or
sar
fild
mov
jle
inc
arpl
dec
jg
adc
fistp
fbstp
dec
inc
cmc
lds
loope
mov
push
mov
rol
jmp
mov
push
into
add
jbe
ds
xchg
pop
and
dec
fidiv
sub
movs
test
fdivr
bswap
push
pop
or
idiv
fidivr
pop
inc
pop
push
into
loop
out
pop
inc
movs
and
mov
sub
data16
jecxz
mov
cmp
cdq
loope
and
retf
dec
pop
mov
test
push
stos
pop
(bad)
mov
loopne
icebp
inc
pop
test
pop
ss
std
or
jae
push
fisttp
jle
popa
push
pop
xlat
inc
data16
and
lods
test
jp
push
and
push
and
repz
dec
xchg
mov
mov
rcl
ins
std
cmp
outs
gs
int
pop
jns
iret
bound
cmp
hlt
sbb
xlat
inc
push
cmp
imul
pushf
mov
outs
cld
enter
cdq
xor
cmps
bound
stc
xor
out
xor
mov
jnp
fsubr
ror
mov
pop
shl
pop
xchg
xor
sub
ror
xor
dec
fs
pop
js
shl
mov
sub
pop
cli
cmp
out
int
jne
and
add
jge
cmp
out
mov
inc
push
inc
sbb
sub
mov
test
push
clc
mov
ds
dec
out
out
mov
leave
sbb
movs
(bad)
or
adc
adc
dec
push
test
inc
pop
mov
cmps
push
adc
mov
jmp
adc
out
(bad)
stc
pop
out
xor
bound
cmps
mov
inc
push
retf
push
pop
mov
ret
mov
or
xchg
inc
lahf
pop
imul
pop
sbb
arpl
test
push
repz
ja
add
mov
ror
js
lods
mov
imul
inc
rcl
dec
xor
test
sbb
dec
ds
cmp
(bad)
icebp
ret
xchg
jne
pop
std
inc
jns
(bad)
fadd
and
out
ss
pusha
sbb
arpl
cwde
add
fld
mov
jmp
dec
sub
std
int3
daa
sbb
inc
call
es
fucomip
(bad)
sub
mov
in
sbb
cmp
add
imul
fisub
fisub
adc
jb
push
leave
out
push
adc
outs
aas
mov
cmp
nop
sbb
sub
in
push
aam
inc
or
test
inc
jno
(bad)
dec
ret
push
sub
(bad)
fsubrp
pop
fnsave
ror
rcl
imul
or
xor
sar
pop
int
lods
inc
aam
jmp
and
xor
dec
or
mov
xchg
dec
cmp
int
ds
test
push
pop
mov
out
push
mov
push
push
adc
mov
scas
lds
inc
ror
div
fidivr
push
in
pop
push
add
sar
mov
shr
jne
inc
xor
scas
test
std
pop
mov
aad
aas
inc
or
sahf
inc
(bad)
jmp
cmp
sub
out
xchg
mov
xchg
fidivr
lods
test
test
mov
rcl
add
xchg
mov
fcomp
aas
cmps
aad
sbb
pop
hlt
dec
test
sub
out
loope
inc
jne
arpl
xor
sbb
rcl
ds
ret
shr
mov
std
xchg
loope
icebp
loopne
jne
xchg
rcpps
les
gs
jle
mov
pop
jo
mov
out
adc
js
scas
adc
or
pushf
fst
xchg
dec
dec
or
stos
into
adc
movs
add
in
mov
imul
fst
aaa
cmp
mov
ins
ins
or
cdq
js
fsubr
lods
and
out
les
pop
and
xchg
push
pusha
aam
add
(bad)
in
jae
add
icebp
ins
into
dec
mov
push
fdivr
mov
add
(bad)
rol
sbb
pusha
int3
mov
stos
mov
cmp
data16
jno
(bad)
bound
jmp
(bad)
repnz
cs
mov
bound
jg
adc
dec
sbb
icebp
xor
in
jmp
pop
mov
mov
in
lods
out
and
ret
jg
xchg
je
icebp
ins
mov
pusha
sbb
pop
cwde
xchg
dec
xlat
jne
shl
inc
hlt
xor
dec
mov
inc
sub
pushf
das
jns
jns
neg
jmp
(bad)
jmp
mov
mov
cmp
sub
xor
add
out
adc
xor
mov
cmps
dec
inc
jmp
or
push
scas
push
adc
lock
ds
fwait
(bad)
fstp
jl
imul
or
mov
hlt
mov
jmp
inc
add
pushf
dec
add
sbb
xor
mov
mov
mov
addr16
or
jne
outs
mov
(bad)
aad
adc
jle
leave
sbb
mov
js
sub
fwait
pop
retf
jl
or
mov
cmp
mov
and
ins
mov
inc
mov
and
sub
pop
mov
mov
add
jp
mov
fmulp
cmp
outs
adc
xchg
clc
rcl
push
ss
pop
and
cmps
sub
imul
push
xor
ds
fsubr
push
xchg
pop
xor
sbb
sbb
bndldx
imul
std
push
pop
pop
sbb
push
retf
test
xor
dec
add
pop
sbb
out
dec
iret
rcr
icebp
sar
mov
dec
dec
mov
fst
(bad)
jp
test
arpl
mov
in
mov
rol
mov
push
into
mov
popf
shr
sub
(bad)
loop
mov
es
push
cdq
xor
jne
lahf
fdiv
sub
cwde
repnz
cli
xlat
sub
repz
jne
sub
sub
sub
loop
xchg
jp
ins
dec
in
clc
inc
mov
loopne
inc
sbb
inc
inc
les
or
xchg
sub
push
inc
mov
mov
pop
fld
or
ret
pop
push
cmp
jno
mov
sbb
add
fstp
cmovge
dec
ins
(bad)
in
and
loop
out
pop
std
cmp
enter
enter
repz
loop
inc
mov
sub
repnz
push
lock
add
repz
(bad)
loop
div
outs
fwait
adc
call
cmp
xlat
jno
jecxz
push
adc
inc
bound
pushf
cmp
push
jmp
sbb
stc
push
cdq
pcmpeqd
ins
icebp
loopne
les
mov
mov
sub
jmp
mov
mov
jae
inc
stc
fistp
in
sub
xor
cmp
or
call
test
rcl
scas
inc
adc
sbb
mov
mov
out
cmps
add
loop
mov
std
ins
cmp
imul
out
cld
fnstsw
cmp
call
mov
add
ins
test
mov
popa
adc
rcr
int
lahf
mov
pop
jns
fsub
mov
push
aas
push
jno
or
push
adc
int
arpl
mov
dec
adc
lock
outs
sbb
sbb
sub
call
sbb
xlat
popf
shr
inc
out
xor
mov
mov
je
mov
dec
rol
jb
mov
xor
xlat
xchg
xor
add
xor
mov
jnp
cmp
pop
xchg
xor
idiv
in
aaa
xchg
loope
adc
call
mov
inc
(bad)
mov
jl
scas
out
jp
sti
inc
adc
rcr
sbb
jno
cdq
or
dec
push
mov
arpl
cmp
xchg
popa
xor
jno
das
outs
fsub
outs
jo
or
push
sbb
cmc
jae
jl
xchg
jle
bound
add
add
push
pop
push
jb
push
pop
jp
stos
ds
and
into
pushf
nop
add
cmps
dec
adc
inc
push
ins
mov
ja
cmp
out
jmp
loop
lds
inc
push
std
push
(bad)
vpavgb
xchg
mov
push
scas
lods
mov
xor
in
adc
aam
je
mov
push
loop
jmp
fsubp
sub
inc
inc
ins
mov
aaa
and
and
mov
xchg
xchg
push
movs
fistp
ins
pop
ret
mov
push
sub
repnz
sub
call
xchg
es
ret
add
gs
outs
and
inc
mov
or
mov
and
retf
in
dec
mov
dec
imul
mov
leave
sbb
xchg
hlt
call
and
push
dec
mov
mov
cmps
cmp
mov
mov
ficomp
(bad)
sub
dec
push
mov
rcr
xchg
into
push
retf
xor
adc
retf
sub
out
ss
test
pop
fstp
jmp
cmc
in
ret
dec
stos
sub
mov
sub
retf
dec
je
mov
jne
imul
int
test
nop
and
sub
push
inc
lods
in
cmp
out
mov
mov
dec
jbe
jmp
(bad)
push
arpl
jle
(bad)
enter
nop
mov
int3
add
jge
inc
xchg
push
sub
sbb
ins
rcr
movs
add
sbb
jg
out
dec
ret
jmp
jmp
je
add
pop
cmp
fwait
pop
xor
in
sub
ins
scas
jo
test
mov
xchg
cmp
push
push
push
or
xor
sub
pop
cdq
das
cmp
daa
mov
pop
jge
pop
jns
mov
(bad)
hlt
jmp
popa
xor
xchg
or
sar
and
out
lahf
mov
mov
add
pushf
hlt
and
ins
inc
xlat
mov
adc
mov
call
outs
sbb
and
imul
test
pop
fs
xchg
cmp
and
addr16
push
int
add
ds
pop
push
inc
jno
adc
das
test
push
std
mov
sub
fcomp
hlt
dec
popf
je
or
mov
(bad)
push
adc
dec
and
jne
add
shl
pop
jecxz
adc
loope
jbe
jmp
lock
mov
push
(bad)
push
fdiv
in
mov
loopne
cmps
pop
inc
mov
add
adc
(bad)
fdivr
imul
cmp
out
cmps
outs
ins
pop
gs
push
repnz
test
loopne
call
imul
add
cmp
(bad)
xor
scas
jl
jecxz
call
and
jno
push
in
jno
pop
xor
out
popf
pop
pop
repz
xchg
daa
lods
cmp
daa
mov
fs
or
stos
cdq
repnz
pop
scas
imul
inc
std
xor
xchg
xchg
dec
mov
add
(bad)
cli
aam
lds
jnp
shl
add
cmp
es
xchg
jmp
clc
(bad)
mov
mov
cmps
sar
xor
mov
cli
(bad)
das
sbb
cmp
cmps
imul
push
adc
out
fistp
rcl
jae
js
adc
jg
popa
xchg
(bad)
mov
and
and
repz
push
popf
bt
ret
enter
fwait
mov
lahf
mov
xchg
or
jb
mov
adc
mov
test
add
mov
xor
mov
rep
pop
and
pusha
dec
pop
bswap
push
outs
imul
es
dec
test
jmp
cmp
or
lahf
xor
inc
mov
pop
pop
sub
jb
shl
sub
jg
mov
and
movs
test
xchg
jb
jno
mov
inc
loopne
and
xor
mov
stos
mov
sbb
or
lea
jle
test
fimul
mov
jmp
in
retf
lock
mov
inc
push
inc
inc
push
movs
arpl
test
mov
add
loopne
add
pmaddwd
jmp
sbb
inc
pop
movs
loopne
cmps
and
into
lea
mov
mov
fidiv
xchg
sbb
test
mov
mov
std
rcl
mov
dec
and
sbb
test
repnz
push
jnp
push
pop
cwde
shr
add
jge
je
pop
add
int3
fs
jae
jno
sub
popa
arpl
add
dec
mov
fldenv
jecxz
xchg
stos
pop
bound
mov
sub
dec
push
jmp
jne
pop
sub
(bad)
mov
jmp
push
sbb
or
jl
or
enter
mov
pop
sub
(bad)
adc
fidivr
in
xchg
jo
adc
jmp
pop
imul
and
ja
cmp
or
rcl
adc
lock
aas
stos
xchg
ja
pop
(bad)
and
(bad)
rol
sar
lods
test
or
ret
ds
cld
call
mov
clc
and
adc
ds
cmp
mov
add
fiadd
sub
and
pmuludq
push
inc
test
pop
push
ss
mov
push
outs
mov
pop
outs
xchg
popf
cmp
gs
lods
in
jge
inc
add
jno
dec
inc
ins
pushf
mov
inc
cmp
push
mov
imul
sahf
push
ins
loopne
pop
jg
rol
dec
(bad)
repnz
test
fwait
mov
mov
fnsave
jle
mov
popf
pop
aas
popf
jae
mul
adc
inc
mov
push
loopne
mov
pushf
ret
rcr
or
dec
test
push
or
cmps
ds
stc
mov
rol
and
and
cmc
nop
fisub
and
adc
out
leave
addr16
popf
jns
jb
xchg
leave
xor
inc
jno
(bad)
cmp
ds
lods
jmp
add
cld
jge
cmps
test
dec
in
or
es
retf
dec
mov
cmps
mov
fsub
cmp
pop
test
cli
xchg
popf
jae
scas
or
xor
pop
or
and
lock
scas
add
enter
ins
call
lea
imul
std
adc
sbb
xchg
cwde
xor
jecxz
cld
mov
xchg
mov
mov
mov
cld
gs
pop
addr16
mov
sub
add
adc
cmc
and
xor
cmps
and
jmp
outs
mov
xchg
or
add
fist
mul
dec
ja
dec
rcl
cmp
pusha
lahf
mov
and
jmp
or
neg
aas
stc
sbb
sbb
xchg
cmc
enter
or
mov
dec
dec
inc
int
out
xchg
or
xchg
xlat
push
hlt
sub
mov
test
adc
movs
push
arpl
dec
xor
xchg
xchg
xchg
push
jnp
add
mov
cmp
cmp
aaa
or
cmps
or
out
out
xchg
arpl
or
sar
pop
sbb
movs
push
add
lea
mov
pop
pop
xor
and
dec
outs
jmp
cmp
mov
scas
in
dec
cmps
loopne
adc
or
pop
aam
xchg
adc
push
sbb
push
ret
(bad)
fcmovu
or
scas
push
jp
lahf
mov
push
inc
jb
das
cld
xchg
fadd
mov
pop
pop
(bad)
hlt
cmp
pop
adc
pop
hlt
or
xchg
and
dec
stos
lds
xor
in
ins
xchg
push
pushf
int3
xor
clc
pop
fimul
or
pop
sub
mov
fdiv
cmp
inc
cs
adc
cmp
jbe
mov
xchg
push
and
(bad)
pop
sbb
stos
or
jnp
out
rcr
shl
fsubr
push
imul
jmp
lods
cmp
xchg
mov
cmp
fld
jno
ret
cmps
ins
xor
iret
sbb
adc
in
fisubr
mov
mov
out
in
(bad)
jecxz
aad
outs
in
sar
pop
or
loope
jns
add
inc
mov
jno
pop
mov
in
ret
call
(bad)
shl
pop
setl
xchg
adc
jb
int3
out
call
xchg
pop
jg
inc
mov
xchg
or
cmps
sbb
gs
or
leave
pop
rol
push
xchg
pop
fsub
push
mov
sbb
pushf
out
in
fld
xchg
xchg
clc
pop
push
add
and
aad
(bad)
enter
or
dec
aad
xchg
popf
test
rol
pop
mov
jmp
je
loopne
cmp
std
aad
pusha
jp
jb
stos
jno
push
jmp
xor
imul
addr16
add
jno
std
(bad)
sbb
psubsw
or
xlat
mov
test
cdq
mov
jns
aaa
imul
adc
lock
daa
push
inc
jo
adc
jl
sub
inc
fistp
popf
cs
mov
push
xchg
inc
stc
retf
or
pop
fnstsw
pop
mov
sti
mov
sbb
push
fadd
sub
xor
movs
add
aad
cmp
dec
test
adc
mov
pop
(bad)
jl
inc
xchg
outs
cmp
xchg
mov
out
frstor
pop
hlt
int3
jge
ficom
add
movs
lock
imul
(bad)
and
add
mov
or
jle
xchg
mov
sub
dec
lods
popf
clc
push
ins
jmp
cli
mov
in
and
sar
fmul
lock
scas
hlt
jp
movs
jmp
mov
dec
into
ret
ficom
inc
fsub
sub
mov
lahf
leave
aad
in
cmps
mov
es
shr
mov
clc
push
mov
inc
addr16
add
sbb
or
call
js
fadd
or
xor
vmread
sub
cmp
adc
xor
xchg
mov
and
daa
push
pushf
mov
out
mov
test
fstp
push
sub
mov
test
adc
(bad)
repnz
mov
retf
mov
loopne
mov
stos
mov
out
dec
xor
dec
mov
mov
push
push
(bad)
lock
xchg
pop
inc
cmps
xor
jg
mov
jbe
fs
rol
(bad)
hlt
bound
mov
fs
jmp
and
aaa
fsubr
jo
mov
sub
mov
aad
add
adc
stc
aam
in
lea
not
cmp
inc
cs
and
rcl
push
mov
push
mov
(bad)
clc
jo
lahf
into
ret
add
cmp
in
mov
loop
xchg
push
popa
jge
fld
ficom
iret
icebp
sub
xchg
enter
mov
jno
pop
sub
mov
push
repz
push
sar
jb
sub
xchg
jns
xchg
repz
lods
rol
or
(bad)
loopne
mov
xor
fiadd
adc
ret
mov
sub
or
add
pop
mov
jb
and
inc
mov
cmc
sbb
xor
mov
cld
or
je
xchg
fdiv
cmp
movs
mov
xchg
mov
mov
out
xchg
shl
adc
retf
push
fwait
repz
out
ret
arpl
outs
imul
or
test
pop
ja
pop
adc
sub
mov
stc
add
scas
cli
into
pushf
mov
dec
pop
mov
repnz
aas
sti
ja
lods
sbb
popa
xor
cs
jmp
es
or
sub
mov
mov
inc
in
and
mov
xchg
addr16
(bad)
jns
(bad)
mov
int
ror
dec
xchg
cmps
sbb
sbb
push
scas
fcmovnb
xor
jo
cmp
xor
scas
(bad)
dec
sbb
cmp
xchg
bound
or
shl
pop
sub
mov
mov
call
daa
imul
adc
popa
mov
ror
stc
jns
pop
in
pop
sub
jl
icebp
dec
xchg
stos
fmul
test
arpl
push
stc
push
jl
lds
adc
dec
or
ret
pop
int
push
stos
mov
pop
inc
mov
mov
and
imul
imul
mov
jae
or
fadd
(bad)
ret
jge
outs
jns
fcom
shl
call
pop
mov
or
sbb
mov
in
cmp
cs
fstp
push
and
or
mov
repz
mov
and
xor
das
lds
add
xlat
jmp
mov
xlat
mov
jo
xlat
jb
ins
call
popf
scas
push
xchg
sub
xlat
ss
and
jno
test
retf
test
cmp
cmp
fldcw
mov
mov
gs
jmp
mov
int3
dec
retf
mov
and
dec
aam
dec
push
sub
jle
into
imul
(bad)
les
hlt
cmp
imul
xor
mov
jg
pop
dec
mov
and
shl
mov
and
jne
cmp
jne
dec
or
mov
cmps
int
mov
movs
and
jge
scas
dec
xchg
mov
mov
push
sbb
mov
and
ins
mov
data16
imul
dec
and
repnz
xchg
or
sub
sbb
xchg
sbb
movhps
ret
push
cld
out
sbb
mov
call
inc
adc
cmps
mov
sbb
lods
mov
mov
fwait
push
inc
mov
adc
push
mov
mov
pushf
lea
call
jmp
pop
mov
js
sbb
jl
or
xchg
(bad)
adc
out
add
cmp
sbb
adc
int
lea
xchg
dec
aad
shl
jae
cmps
cmp
popa
cld
stos
test
sbb
stos
jno
ror
mov
or
imul
xor
adc
ret
adc
scas
push
pushf
aam
imul
fwait
mov
popf
dec
ss
inc
cmps
fwait
adc
xchg
int3
mov
push
cdq
and
pusha
out
into
imul
scas
enter
rcr
js
jge
mov
and
dec
popf
pop
cmp
ja
push
cmp
xchg
pop
cli
jl
cmp
mov
mov
xlat
mov
cmp
or
adc
adc
nop
sbb
inc
xchg
cmp
mov
cdq
or
jns
mov
sub
stos
pop
outs
hlt
and
ins
xlat
push
icebp
and
cmp
add
loope
(bad)
clc
add
mul
sbb
neg
jle
lock
jne
pop
gs
dec
add
scas
fmul
sti
sahf
push
or
push
out
push
les
lods
in
leave
push
mov
stos
add
dec
rol
std
mul
dec
pop
sbb
xchg
adc
add
xor
out
dec
pop
fist
shl
push
jmp
loopne
int3
mov
nop
or
pop
femms
neg
xchg
inc
mov
jecxz
iret
arpl
lahf
iret
xchg
jne
xchg
and
ins
and
pop
cmc
add
lods
inc
inc
fs
or
popf
pop
lods
and
jmp
inc
pop
inc
mov
aad
pop
mov
pop
out
aas
push
aad
add
ret
pop
adc
cmp
mov
test
ret
ja
mov
cmp
jecxz
cs
hlt
mov
aaa
out
sbb
std
jnp
addr16
es
cmp
(bad)
js
push
pop
add
sub
je
inc
mov
sub
mov
xlat
mov
push
retf
and
or
pop
mov
cmp
cmps
ins
test
push
in
test
not
sti
lods
xchg
scas
ja
mov
inc
inc
lods
and
push
mov
mov
cmp
hlt
xlat
(bad)
cmps
arpl
mov
add
xlat
repnz
sbb
dec
in
mov
jg
sub
xchg
jle
mov
scas
and
fstp
fs
mov
fs
loopne
repz
xor
or
test
dec
xor
inc
pop
sbb
cdq
cdq
cmp
shr
out
popf
(bad)
shl
jmp
mov
and
ins
repz
add
pop
lock
push
mov
std
adc
sbb
loopne
ror
add
(bad)
pop
xor
xchg
ds
pusha
daa
retf
movs
cmc
loope
add
fxch
imul
cmc
(bad)
or
jle
jle
mov
les
rcr
mov
or
pop
ins
and
int3
jo
ror
push
jb
and
shr
nop
inc
test
bound
add
enter
cld
mov
ins
or
cli
push
cmp
scas
scas
clc
jecxz
sbb
or
out
shl
sub
aas
bound
das
inc
add
movs
or
jecxz
inc
xchg
test
out
xchg
cmc
iret
xor
push
mov
daa
and
es
xor
sub
mov
cmp
dec
test
les
jmp
cmp
ret
mov
xor
mov
push
sub
cmp
repz
xor
enter
pushf
adc
sub
dec
out
cmp
mov
jb
mov
mov
cld
mov
mov
retf
cmp
pop
push
fisttp
mov
jo
lahf
push
lds
test
cli
cmp
mov
sub
call
pusha
or
inc
cmp
loop
xor
adc
sti
inc
sar
jp
push
jo
in
mov
hlt
jo
loop
mov
in
adc
pop
or
mov
jno
stc
sub
je
enter
repz
or
sub
repz
sbb
popf
sbb
cmp
inc
leave
test
les
sbb
aad
mov
repz
mov
xor
or
cmp
cmp
mov
sahf
add
rcr
pause
mov
jnp
jg
pop
aad
retf
adc
push
enter
xchg
dec
dec
cmp
xor
jne
dec
mov
and
xor
pushf
pop
test
inc
rcr
iret
jo
fist
sbb
stos
int3
and
sahf
push
push
enter
xchg
and
in
scas
push
inc
scas
gs
clc
lock
mov
add
pop
cmp
mov
cmp
enter
loop
push
pop
movs
fst
add
outs
jbe
mov
xor
in
fst
jmp
xchg
mov
das
shr
push
loopne
push
cmp
xchg
xchg
inc
jns
pop
cmp
jno
pusha
xor
sub
faddp
cmp
xor
loop
and
mov
mov
sub
aam
or
mov
fmulp
sbb
adc
imul
pop
mov
aas
pushf
icebp
jae
push
and
rol
clc
pop
loopne
mov
movs
adc
addr16
dec
neg
int3
stos
sub
aam
and
mov
cli
stos
test
sbb
lds
aas
lahf
pop
or
adc
inc
cmps
push
or
inc
rcl
jno
pop
cmps
loop
outs
jns
xor
inc
xchg
bound
lods
inc
repz
les
add
(bad)
pop
xchg
cli
xchg
mov
mov
xchg
aad
pop
mov
loopne
jbe
repz
mov
int
mov
(bad)
ss
inc
mov
jo
call
xor
jmp
test
stos
pop
dec
fbstp
clc
add
push
sahf
dec
and
fdivp
pop
sti
push
ror
jl
out
fwait
cmp
popf
data16
cmp
in
jnp
nop
mov
jb
retf
sub
mov
cmps
arpl
sti
ficomp
push
js
mov
loopne
movs
mov
jne
mov
dec
int3
int
das
loope
inc
mov
imul
or
fwait
stos
stc
inc
test
pop
in
gs
imul
adc
mov
cs
jnp
cmp
pop
dec
faddp
pop
dec
cmp
les
aas
mov
mov
andps
hlt
xor
adc
mov
sub
lods
ret
push
inc
in
push
shr
push
ss
jnp
mov
hlt
lods
pop
cmp
push
aam
jl
mov
and
dec
xor
xchg
inc
lea
sbb
dec
mov
inc
inc
call
ja
push
inc
mov
mov
fild
pop
inc
mov
mov
adc
(bad)
or
pushf
adc
sub
cli
or
das
rcr
fsubp
dec
jnp
jg
ja
out
es
lock
imul
pop
ss
jbe
and
aas
adc
xchg
adc
inc
mov
ret
loope
(bad)
adc
fcmovu
adc
comiss
stc
popf
xchg
call
and
mov
shl
jb
inc
sub
mov
cmps
and
in
daa
ret
fist
inc
xor
mov
xchg
in
xor
push
sub
pop
xchg
leave
in
cmps
sbb
adc
cs
push
xor
pop
jb
inc
in
mov
mov
push
mov
cmp
icebp
iret
cli
push
(bad)
shr
mov
sti
lock
mov
cmp
adc
rcr
add
cmps
cli
jns
stos
enter
mov
pop
mov
dec
push
mov
cld
(bad)
jno
inc
stos
dec
test
sahf
mov
ret
ficomp
mov
nop
clc
repz
inc
fbstp
xchg
xlat
add
push
inc
xor
push
jns
(bad)
aaa
add
loopne
cmp
(bad)
xlat
lea
out
lds
sbb
or
inc
or
out
and
fucom
aam
dec
fwait
push
addr16
(bad)
adc
adc
add
fdivp
fsub
scas
lds
mov
cmp
sub
mov
leave
jg
(bad)
pop
int3
cmps
or
pop
mov
not
enter
push
xor
xchg
add
mov
xchg
int3
pop
fwait
sub
outs
or
addr16
das
push
aas
ds
add
aam
pop
dec
and
inc
add
out
call
mov
mov
add
test
push
adc
pop
sti
dec
in
sub
inc
cmp
pop
pop
leave
sbb
jb
and
dec
test
div
gs
cli
fpatan
push
les
cli
lea
jnp
mov
mov
js
xchg
sti
and
cmc
retf
jge
popa
or
pop
inc
xchg
cmp
inc
xlat
mov
test
dec
push
outs
jle
dec
pop
and
mov
jne
sbb
out
(bad)
ficom
xor
jae
mov
sub
pop
inc
adc
in
adc
mov
rcl
aas
daa
and
pusha
push
mov
rcr
fisub
push
mov
or
xor
push
movs
dec
push
push
add
das
sub
aad
jmp
lods
pop
cmp
data16
inc
das
cmp
ret
sub
das
(bad)
aas
ret
adc
in
adc
repnz
data16
imul
jl
(bad)
(bad)
xchg
je
pop
in
test
test
add
and
pop
push
pop
ret
(bad)
jecxz
adc
adc
mov
int
jecxz
ret
and
sti
cs
mov
cmp
cmp
cmp
sub
data16
movs
xchg
add
jb
sub
jp
gs
popa
or
mov
cs
push
push
push
mov
jne
push
push
xor
test
test
call
jns
inc
mov
pop
stos
fnclex
js
imul
mov
mov
lods
push
or
inc
add
outs
mov
inc
dec
cmc
sahf
enter
cwde
xor
adc
in
add
mov
dec
xor
push
(bad)
rcl
cmp
inc
movhps
fild
iret
movs
push
cmp
scas
mov
test
ins
in
pop
fld
imul
add
inc
mov
test
adc
in
nop
(bad)
dec
mov
and
outs
xchg
jle
push
mov
add
or
pop
xchg
inc
loop
pop
jne
enter
sub
sub
daa
sub
xchg
pop
dec
mov
jo
push
in
inc
out
add
cld
and
dec
mov
les
xchg
and
enter
mul
xchg
pop
jnp
shl
dec
jecxz
ss
push
xor
sbb
dec
dec
iret
(bad)
movs
fsubr
push
mov
sub
mov
aam
cld
ss
pop
int3
lock
out
add
sbb
cmps
push
sub
fmul
loopne
cmps
add
fs
dec
push
ins
bnd
xchg
sub
in
aas
stos
sbb
mov
scas
mov
jle
sub
push
adc
gs
push
xchg
popf
loop
push
leave
mov
pop
neg
test
push
cld
and
js
test
inc
cmp
out
and
in
push
je
or
jns
cli
loopne
int
push
mov
sbb
js
sub
das
or
adc
lahf
hlt
mov
js
nop
adc
in
pop
fdiv
in
repz
pop
popa
rol
and
iret
sub
adc
scas
imul
outs
arpl
pop
imul
fld
mov
add
xchg
hlt
push
leavew
cmps
fiadd
and
mov
push
jae
or
rol
scas
cmc
imul
fmul
sar
hlt
shl
outs
fild
repnz
jns
ins
jg
cmp
imul
push
jg
or
daa
arpl
out
clc
or
mov
test
adc
loope
xchg
or
add
sub
jno
adc
popf
(bad)
add
sub
pop
jg
inc
into
mov
mov
les
adc
xchg
and
add
push
in
add
inc
aad
dec
mov
paddq
lock
in
mov
sub
cmp
aad
or
adc
or
jnp
sub
shl
cmc
xchg
adc
mov
dec
ins
das
xchg
and
or
sti
and
scas
and
mov
or
outs
add
popf
aaa
sbb
ins
pop
cld
fdiv
jbe
adc
or
cs
nop
mov
repnz
mov
and
shr
sub
or
in
jmp
inc
pop
shr
mov
sub
stos
rol
inc
dec
fs
psubusw
shr
inc
js
ja
or
shl
pop
or
push
rcr
push
outs
push
pusha
into
dec
imul
cwde
cwde
xor
inc
fcomip
daa
cmp
mov
mov
cmp
cmp
or
fdivr
ror
ret
push
fld
add
jb
or
xlat
xchg
dec
mov
lock
and
mov
add
sbb
data16
adc
ret
imul
stos
push
inc
nop
sar
mov
and
mov
sub
and
in
sub
js
jno
jmp
aaa
fwait
loopne
(bad)
and
test
outs
inc
bound
adc
enter
or
pop
xor
adc
fcmovne
fsubr
jl
jg
in
pop
lods
mov
je
cmps
or
mov
(bad)
(bad)
cmp
cs
(bad)
xchg
in
xchg
mov
adc
add
mov
rol
ins
das
jp
add
popa
xor
out
aas
add
jle
mov
cli
mov
sub
leave
cmps
xchg
jmp
cmp
or
pop
jp
add
and
and
dec
pop
mov
shr
push
cld
rcl
jmp
pop
js
mov
mov
out
imul
pushf
sub
xchg
pushf
push
cmp
xchg
arpl
pop
mov
es
jo
xchg
(bad)
mov
dec
stos
push
fnstsw
fnsave
ja
fwait
inc
cwde
mov
movs
out
lods
or
mov
pop
xchg
scas
mov
or
fistp
sti
cmp
test
and
sbb
sub
adc
mov
test
push
mov
lods
enter
pop
xor
ins
sar
loope
jbe
push
ja
xchg
iret
imul
in
add
push
in
mov
adc
push
jbe
sub
xchg
les
call
out
fsubr
adc
mov
xchg
rcr
push
shr
out
push
scas
adc
cmp
call
nop
dec
data16
dec
push
jne
cwde
fs
gs
jecxz
pop
or
sub
inc
dec
sub
aaa
das
jg
mov
cmp
xor
or
or
lahf
scas
pushf
add
or
das
je
aam
in
aam
mov
js
xor
sahf
inc
js
jg
outs
jp
pop
and
and
ret
nop
stos
out
lods
xor
fimul
mov
out
mov
sbb
les
aad
sub
sub
pop
cmp
int
(bad)
mov
push
xchg
ja
(bad)
loope
mov
jle
mov
pushf
in
xchg
push
dec
xchg
dec
pop
es
jne
jp
push
rcl
aad
xor
cmc
out
iret
int
aaa
dec
jae
repnz
cmp
fimul
jecxz
sbb
pusha
aaa
jbe
add
mov
(bad)
cmp
cwde
pop
stos
loop
pushf
(bad)
imul
inc
das
fiadd
arpl
or
inc
sub
inc
jge
cld
adc
scas
daa
adc
movs
gs
or
xlat
add
mov
add
pop
test
scas
mov
inc
add
jbe
mov
(bad)
xchg
cs
aas
sbb
rcr
ja
mov
xor
cmp
repz
or
add
stos
adc
xor
int3
std
mov
stc
cmps
fcomp
mov
jmp
add
cmc
inc
int
xlat
repnz
mov
sbb
xchg
stos
cmp
gs
cmp
imul
and
add
inc
lods
inc
in
push
add
add
pop
push
retf
push
outs
adc
(bad)
das
clc
push
push
adc
jge
adc
mov
add
jb
in
loope
dec
and
into
mov
push
outs
sahf
aam
(bad)
mov
test
fld
push
push
scas
cmps
ins
push
add
ja
sahf
test
popa
adc
sbb
sbb
repnz
pop
mov
jp
push
repz
ss
fs
gs
or
outs
jmp
mov
stc
inc
jnp
sbb
cmp
xchg
push
outs
pop
push
lock
cmp
out
pop
in
adc
push
jno
pop
cdq
arpl
into
ret
push
ror
clc
das
retf
mov
inc
out
stos
jne
sbb
outs
xchg
xchg
rcr
ret
imul
mov
mov
lods
aas
je
jmp
hlt
(bad)
daa
dec
rcr
adc
pop
sbb
std
(bad)
mov
int
out
push
push
mov
push
repnz
stc
mov
(bad)
jmp
pop
nop
inc
ror
jno
xor
jmp
inc
mov
jp
loop
adc
pop
bound
xor
jl
cmps
adc
push
adc
addr16
rcl
movs
rol
ficomp
mov
sbb
and
push
inc
movs
scas
movs
retf
bound
(bad)
mov
xchg
inc
mov
push
shl
fucomi
imul
cmps
fs
add
or
push
repnz
cmp
je
movs
or
sub
inc
fadd
jmp
out
jo
lock
add
mov
xchg
push
pop
pop
inc
es
popa
mov
dec
mov
cmp
or
pop
xor
loope
inc
je
dec
rol
imul
stos
jmp
pop
add
pop
test
imul
push
or
cs
mov
pop
neg
je
daa
test
sub
jg
scas
repz
or
push
lds
imul
xlat
ins
dec
dec
cmp
add
jl
xor
sbb
mov
adc
test
cmc
mov
mov
xchg
arpl
adc
xor
xchg
xchg
outs
out
mov
pop
popf
add
das
(bad)
aaa
(bad)
test
imul
(bad)
mov
mov
push
mov
scas
xchg
push
stc
out
add
sub
push
sub
fisubr
jae
xor
cmp
jge
fistp
arpl
sbb
sahf
dec
pop
es
xor
jns
adc
(bad)
push
sub
sub
retf
mov
dec
mov
imul
push
aas
ja
es
loopne
arpl
adc
ins
retf
xchg
movs
retf
aad
iret
dec
mov
dec
sub
in
push
lock
arpl
fist
imul
xchg
sub
fidiv
mov
ficom
sbb
cmp
out
xchg
inc
sub
dec
icebp
frstor
xor
imul
cmp
xchg
mov
push
cmp
dec
inc
ja
jbe
xor
out
das
dec
xchg
jmp
mov
call
inc
rcl
jmp
scas
mov
jnp
adc
jae
xchg
out
jl
xlat
pop
in
popa
push
push
push
imul
jbe
call
cli
adc
jno
xor
fdivr
xor
fiadd
hlt
jb
dec
and
sub
addr16
repz
jne
ins
psubq
sbb
dec
or
push
pop
adc
loop
les
add
pop
mov
cmc
sub
test
mov
cmp
pop
out
sbb
dec
push
mov
aad
in
mov
fild
shl
push
repz
mov
add
and
mov
cmps
xlat
adc
fsub
dec
pop
bound
mov
mov
icebp
rcl
xchg
sbb
shl
and
fistp
fild
jmp
das
sub
xor
and
mov
sub
mov
inc
inc
and
(bad)
hlt
add
mov
outs
pop
jg
arpl
cmp
shl
sub
push
push
fadd
sbb
fdivr
lods
mov
lds
and
xchg
in
mov
movs
and
dec
jb
into
pop
scas
dec
sar
push
popa
jne
xor
je
cmp
jae
ss
xor
push
cwde
int
mov
pop
ds
push
mov
fmul
mov
fcom
and
imul
mov
in
ja
dec
mov
call
add
(bad)
pop
rol
in
and
arpl
dec
adc
js
lock
ror
sbb
xchg
fwait
jo
adc
(bad)
xchg
popa
add
push
mov
fbstp
mov
(bad)
pusha
and
add
pop
push
(bad)
jne
mov
fucom
int3
adc
popa
xchg
std
xchg
pop
lock
mov
inc
xor
test
cld
aas
stc
cmp
test
sbb
cmp
dec
sbb
outs
sbb
push
es
pop
xchg
mov
in
push
cmps
bound
add
mov
int3
mov
or
imul
cdq
ja
cmp
or
adc
dec
sbb
jno
test
ret
mov
adc
mov
addr16
fnstcw
and
dec
icebp
les
pop
jecxz
cmp
cmps
test
gs
inc
popa
test
inc
scas
fistp
cmp
cmp
ficom
mov
xchg
ret
data16
fsub
inc
repnz
inc
pop
scas
or
in
(bad)
data16
add
push
mov
push
call
bound
mov
mov
nop
cdq
sar
leave
sub
sbb
mov
xchg
pusha
and
jecxz
jmp
nop
imul
ins
jecxz
pop
scas
mov
fs
int3
popf
cli
cmp
fwait
or
adc
enter
sub
xor
out
adc
sub
inc
icebp
outs
dec
and
xchg
pop
call
imul
push
mov
inc
out
dec
ret
adc
ret
adc
out
aaa
outs
sub
xchg
loope
daa
cmp
inc
jo
xchg
lods
inc
movups
scas
mov
dec
aad
jecxz
jp
cmp
imul
mov
sbb
pop
arpl
add
jp
mov
jno
sbb
push
iret
push
lahf
scas
jle
std
jmp
mov
sti
jp
add
jne
inc
sub
add
add
cmp
out
sti
cmp
cmps
shr
jae
sbb
not
rcr
gs
sbb
test
jge
mov
jb
retf
js
add
shl
pop
xchg
test
mov
add
movs
pop
push
ss
ins
mov
adc
pop
sub
enter
scas
addr16
dec
add
call
(bad)
cld
in
mov
xchg
jmp
(bad)
jb
xor
stos
stos
loop
imul
pop
cmp
stc
push
or
fld
neg
in
jo
sar
loope
mov
sub
pop
arpl
add
cmc
cmp
js
pop
inc
or
pop
and
dec
iret
xor
pushf
(bad)
or
pusha
pop
or
mov
test
retf
mov
int
sub
jne
(bad)
scas
cmp
push
jecxz
enter
xor
and
aaa
(bad)
aad
loopne
mov
mov
pushf
mov
sub
adc
jmp
ins
shl
stos
xlat
pop
test
cli
cmp
xchg
mov
and
cmps
popf
(bad)
movs
es
jb
outs
out
in
xchg
jnp
and
shl
(bad)
mov
jp
jecxz
mov
xor
add
pop
push
loope
and
(bad)
push
in
out
xor
pop
jne
xor
mov
and
add
loope
xlat
in
dec
add
mov
mov
push
sar
mov
xor
nop
ret
xchg
psraw
int3
scas
xchg
xchg
sbb
cmp
(bad)
in
xchg
stos
call
adc
stc
push
cmp
mov
jo
ds
fsub
cmc
sbb
out
dec
or
stos
les
int
fld
dec
jb
or
clc
(bad)
mov
ror
loope
mov
add
mov
sbb
xchg
outs
out
or
aam
pop
dec
dec
stos
sub
inc
mov
and
stc
ret
movs
lock
xlat
cmp
sahf
pop
enter
bound
ins
adc
or
jl
xchg
adc
cmc
test
fild
push
jns
ror
call
cmc
in
mov
sbb
pop
cmp
mov
pop
mov
cmp
xchg
popf
pop
gs
leave
sbb
js
dec
nop
mov
out
adc
jne
add
pop
push
popa
or
inc
xor
out
ror
mov
and
lods
mov
xor
cmps
jno
test
jl
push
dec
mov
aaa
ficom
cmp
ds
mov
or
sbb
and
xor
pop
aaa
mov
sub
rep
shr
jbe
mov
mov
jne
jge
xor
xchg
shl
aaa
jns
das
cli
push
mov
cmp
push
mov
cmp
push
enter
ja
adc
and
pop
jecxz
pop
mov
sbb
(bad)
jge
nop
mov
xchg
or
sbb
bound
std
stos
adc
mov
mov
cld
adc
out
mov
lahf
or
sbb
xor
cdq
in
jo
loop
rcr
sahf
popf
ror
ja
adc
xchg
mov
sbb
ins
xchg
scas
in
sbb
mov
jp
data16
mov
fdiv
sbb
cmc
jle
out
sbb
and
inc
xchg
xor
idiv
cdq
scas
in
or
jl
cmp
daa
mov
push
sbb
inc
lahf
and
retf
adc
mov
jg
dec
fwait
pushf
test
rol
sahf
jecxz
out
addr16
loope
jo
inc
push
sbb
fsubr
push
pop
into
sub
mov
xchg
adc
icebp
inc
xchg
hlt
loopne
xchg
lods
add
cmp
clc
cmps
aas
pop
cmps
imul
retf
jl
adc
mov
sbb
rcl
scas
dec
cmc
int
lods
fcom
push
ins
pop
mov
adc
inc
push
mov
add
mov
cld
dec
cdq
inc
test
shl
movs
test
jne
cli
fs
aaa
dec
cmp
sbb
imul
cdq
inc
push
ffreep
mov
sti
xchg
mov
push
push
inc
test
push
xor
dec
lds
or
jnp
push
fiadd
mov
cmp
sub
(bad)
jp
fwait
cmp
inc
add
jae
data16
xor
inc
outs
inc
fwait
je
jo
dec
cwde
sti
pop
inc
shl
fistp
dec
mov
clc
ss
xor
add
dec
int
inc
rcl
and
mov
int3
mov
js
mov
lock
fsub
mov
cld
fst
dec
sti
sbb
ds
icebp
inc
int3
sub
fdiv
(bad)
xchg
retf
xor
sbb
xchg
lea
retf
inc
cmp
sbb
jg
outs
sub
lods
mov
adc
gs
push
cdq
mov
lods
test
mov
xor
cwde
mov
ret
sahf
js
adc
lods
fnstcw
mov
mov
push
and
and
(bad)
adc
dec
call
push
sti
jb
jae
or
mov
jmp
enter
push
adc
cmp
pop
sub
hlt
xor
xlat
repz
loopne
or
jecxz
pop
mov
cmp
push
call
and
add
dec
jne
mov
add
inc
fild
cmp
push
xchg
mov
stos
pusha
sub
dec
sub
push
sahf
adc
fild
xchg
out
je
es
mov
or
mov
xor
scas
mov
jnp
mov
dec
push
movsx
add
push
int3
rcr
enter
adc
bound
adc
add
mov
lahf
lds
add
and
xlat
xchg
cmovg
jg
fmul
and
add
test
paddsw
or
fwait
sbb
mov
aaa
mov
nop
outs
inc
out
ss
xor
imul
jae
jb
out
mov
(bad)
cs
inc
xor
sbb
jle
imul
fcomp
les
(bad)
out
scas
add
mov
pop
js
cmp
jmp
push
retf
ret
addr16
fld
dec
movs
sbb
or
fdivr
scas
movs
outs
daa
cwde
sbb
out
std
addr16
mov
popf
push
iret
jae
hlt
mov
es
cmp
lods
adc
push
pop
dec
xchg
pop
pop
cmp
scas
push
adc
iret
movs
gs
in
xor
enter
imul
cwde
sub
jb
call
ins
mov
mov
ins
xchg
loopne
movs
les
xchg
push
push
out
push
es
(bad)
imul
test
pusha
cwde
(bad)
into
out
jo
cmps
adc
in
push
out
movs
jge
hlt
sbb
and
outs
mov
cdq
lea
xor
aaa
mov
outs
mov
fst
xor
sub
jecxz
add
sbb
icebp
movs
pushf
mov
lea
mov
repnz
inc
imul
pop
jle
adc
shl
jne
xchg
shr
mov
sub
adc
pop
lock
or
push
pop
sbb
mov
aad
or
mov
cmps
mov
dec
iret
sbb
outs
mov
cmps
shl
repz
mov
sbb
(bad)
pop
push
add
and
(bad)
out
fwait
dec
mov
mov
mov
jp
jb
stos
sbb
rol
add
fidiv
mov
repnz
or
clc
lock
inc
repz
jp
hlt
cli
and
lea
xchg
sbb
or
(bad)
in
xchg
lods
jbe
test
add
(bad)
jle
sbb
add
fwait
pop
fcom
mov
or
mov
fmul
inc
fs
push
mov
clc
jle
retf
add
std
mov
(bad)
xlat
or
xchg
popf
cli
and
ds
jnp
xchg
sbb
mov
sbb
mov
retf
hlt
shr
adc
jl
pushf
out
mov
(bad)
fcomp
sub
push
push
scas
push
add
mov
setl
xchg
ins
fmul
out
sub
int
mov
sbb
jbe
bnd
bound
ror
int
mov
jp
out
cmp
leave
and
(bad)
(bad)
cmp
cmp
scas
xchg
lea
test
push
dec
mov
loopne
dec
dec
xor
mov
push
sub
popa
shr
gs
or
pop
(bad)
stc
push
pop
push
mov
scas
and
hlt
push
gs
mov
in
inc
xor
lea
mov
push
jl
mov
sbb
pop
xor
cmc
es
push
in
mov
cmp
bound
fwait
test
dec
or
pop
dec
fstp
out
mov
add
cmps
xor
test
repnz
ss
xchg
inc
xor
push
sub
daa
jge
jbe
sbb
repnz
jnp
jle
stos
push
fcom
loop
push
xor
out
inc
jmp
pusha
mov
iret
push
xchg
fimul
fwait
in
mov
mov
fld
retf
mov
pop
jmp
push
aaa
fsub
(bad)
inc
in
mov
inc
adc
sbb
test
push
(bad)
outs
shr
jg
mov
out
(bad)
cmp
add
fadd
pusha
(bad)
out
jg
out
push
shl
cmc
xor
cmp
pop
inc
fidivr
movs
jo
jmp
inc
xor
loopne
repz
sbb
dec
xor
enter
and
shl
or
movs
lods
es
inc
les
dec
and
fiadd
stos
repz
xor
inc
adc
inc
fisttp
mov
inc
lea
outs
cmp
pushf
inc
es
(bad)
call
push
xchg
out
sbb
pop
cmp
dec
jmp
pop
in
pop
mov
jmp
clc
ror
rcr
mov
test
pushf
jmp
repz
pop
pop
lahf
ins
mov
fnsave
and
cmp
adc
je
or
cmp
mov
push
or
dec
pusha
adc
adc
popa
dec
ins
ret
movs
cmc
pop
inc
das
push
sbb
stc
ret
dec
cmps
dec
push
dec
adc
sti
out
push
fadd
scas
outs
add
inc
ins
sub
ja
enter
es
out
xchg
mov
(bad)
lahf
and
cld
(bad)
ins
xchg
jne
aam
lea
mov
adc
int3
dec
xor
aad
popf
and
or
add
add
jl
mov
cmp
xchg
dec
mov
mov
std
mov
int3
das
mov
pop
dec
sar
cmp
xchg
out
sbb
test
add
retf
sti
cmps
and
cdq
fnstsw
lahf
in
cmps
ret
jge
push
mov
add
(bad)
push
ret
aam
adc
cmp
pop
inc
jle
mov
mov
mov
jmp
(bad)
aaa
fst
out
lock
and
pop
xchg
ins
(bad)
sbb
add
icebp
fucomi
aam
jnp
pop
mov
out
shl
lods
ins
call
out
lods
jns
addr16
repnz
jmp
(bad)
aam
adc
xchg
in
out
bound
fnstsw
out
call
add
mov
lea
aaa
(bad)
jb
add
cli
and
add
lods
xchg
and
cwde
dec
push
sbb
int3
mov
imul
ret
and
sysret
js
cmp
push
xor
cmp
adc
xchg
and
cwde
leave
pusha
sub
imul
cdq
ins
or
repz
sbb
mov
mov
stos
jl
cmps
adc
push
fsubr
xor
cmps
ret
fimul
dec
int
jnp
ds
and
daa
daa
inc
outs
inc
jle
mov
push
cmc
fisubr
call
xor
adc
xchg
outs
pop
mov
or
adc
and
fld
cmc
mov
mov
inc
add
push
fdiv
mov
clc
fld
xor
fistp
lock
or
jno
test
dec
ss
xor
add
outs
sbb
(bad)
rol
int
fldcw
loop
jnp
cli
mov
jp
mov
test
mov
mov
jmp
nop
xlat
mov
dec
jae
push
push
inc
fistp
pop
push
inc
test
js
pop
outs
jno
fld
xchg
mov
xchg
xlat
inc
in
fstp
lods
or
arpl
cmp
xchg
mov
adc
mov
mov
fsubr
push
fisttp
das
(bad)
inc
push
cmp
adc
sbb
mov
push
fld
dec
xchg
adc
xor
data16
adc
shl
mov
retf
xchg
daa
add
cmps
cmp
out
repnz
je
cmp
sub
mov
jl
mov
push
retf
popa
loop
fdivr
mov
das
rcl
js
outs
mov
mov
push
fwait
mov
dec
ret
or
jp
mov
retf
xor
mov
es
imul
(bad)
jl
mov
jno
mov
jno
sub
call
add
adc
jl
sub
mov
fsub
xlat
pusha
push
sar
imul
movs
jne
jl
sbb
lea
into
fdivp
(bad)
xchg
mov
inc
adc
scas
jns
out
xlat
xchg
xchg
xor
clc
out
je
adc
repz
cmps
mov
aam
cs
jae
fadd
push
stos
aad
stc
jns
add
dec
fsubr
outs
sub
xchg
pushf
pop
add
pop
push
jle
push
repz
mov
loope
cmp
ret
add
popf
inc
cs
mov
and
push
pop
pop
lods
pop
sbb
inc
sbb
jno
retf
pop
in
bound
sahf
test
add
jnp
frstor
sbb
mov
jns
sbb
pop
hlt
scas
cli
or
sub
adc
cmp
push
and
(bad)
jns
shl
cmps
fcomip
and
mov
mov
cmp
jns
std
push
mov
movs
nop
clc
and
or
repz
(bad)
and
lods
add
pop
mov
lods
fstp
ja
push
dec
in
(bad)
push
cmp
mov
lock
mov
stos
jge
inc
adc
mov
(bad)
jl
sub
push
addr16
push
mov
cld
out
repz
fdiv
mov
sub
ja
sub
lea
jp
xor
dec
test
gs
sti
jge
push
and
popa
in
sbb
adc
outs
stc
in
cmp
dec
repnz
idiv
or
mov
mov
add
loopne
or
xor
test
movs
pop
xchg
jnp
cli
in
dec
mov
mov
imul
call
adc
fiadd
sub
(bad)
lods
outs
test
int
dec
stos
jae
pusha
loope
fbld
imul
inc
sti
fcom
push
xor
cmp
rcl
movs
outs
jge
jo
pop
mov
dec
adc
dec
cmp
mov
loope
fcmovnb
inc
not
inc
jg
cdq
int3
fidiv
mov
xchg
pusha
sub
xchg
jne
push
hlt
hlt
and
push
mov
in
je
inc
xlat
dec
push
and
aaa
adc
push
call
cdq
xor
mov
cs
jmp
push
push
(bad)
and
jp
adc
(bad)
shr
dec
jo
and
mov
adc
jns
ins
sahf
test
sbb
pop
aaa
aam
stc
in
mov
pushf
pop
test
jge
clc
mov
add
push
(bad)
add
push
xchg
dec
es
mov
dec
hlt
xchg
add
iret
repz
jmp
mov
(bad)
sbb
mov
xchg
adc
es
xchg
mov
out
imul
pop
call
mov
inc
cmp
loopne
fs
dec
mov
sbb
push
push
mov
scas
inc
mov
movhps
adc
mov
je
mov
imul
add
in
loopne
js
mov
pop
or
fnstenv
mov
imul
movs
mov
mov
sub
jne
or
or
icebp
mov
cld
outs
cmps
mov
clc
inc
mov
fidiv
arpl
cli
xor
(bad)
adc
movs
aad
je
sar
ds
push
outs
(bad)
push
xor
mov
inc
jne
xor
inc
in
xchg
and
loopne
pusha
jno
mov
jl
mov
jno
add
inc
cmp
icebp
jl
nop
jecxz
repnz
cli
in
mov
and
adc
icebp
outs
daa
sub
out
xor
xor
call
sti
inc
test
inc
mov
xlat
test
push
fdiv
cmc
in
clc
dec
or
jb
xchg
int
cmps
sbb
xor
popa
test
idiv
pop
inc
fst
sub
mov
adc
inc
pop
jmp
retf
aad
test
push
(bad)
cmp
add
scas
mov
sbb
pop
jnp
fs
mov
outs
xchg
call
jmp
lahf
push
adc
mov
cs
in
xchg
mov
inc
adc
dec
call
popa
mov
fnstcw
inc
jae
xlat
and
cdq
rcl
lods
loope
xchg
inc
mov
cmp
jecxz
dec
shr
push
repnz
xchg
ins
pop
fs
gs
dec
mov
add
iret
push
bnd
enter
xchg
pushf
fcomp
test
scas
aad
stc
ins
or
jae
scas
pop
sub
(bad)
dec
icebp
xor
and
dec
add
jb
stos
add
leave
mov
xor
das
dec
stc
(bad)
push
dec
in
push
ror
mov
sti
xor
mov
and
test
and
pop
xor
cld
stos
call
dec
inc
aas
outs
dec
pusha
push
inc
arpl
inc
fmul
cld
fwait
jbe
stos
xchg
scas
inc
out
out
lds
adc
stos
imul
fxch
pop
ss
mov
add
jb
dec
les
xchg
mov
dec
sub
fwait
mov
rep
inc
inc
bnd
retf
jne
mov
js
es
ret
mov
ds
pop
dec
(bad)
into
mov
mov
pop
test
fwait
mov
scas
mov
xchg
jecxz
aad
cmp
jp
and
loop
aad
add
inc
adc
add
push
lods
xor
hlt
xchg
fild
repnz
push
daa
xchg
push
push
xchg
pop
push
pop
inc
jp
sbb
hlt
or
push
shl
xor
or
js
fadd
sub
leave
js
test
xchg
pop
lods
push
out
jp
push
add
mov
and
fwait
adc
jg
(bad)
mov
mov
mov
sbb
adc
shl
cmp
icebp
push
jns
mov
cmp
data16
push
aad
outs
loopne
xor
xor
or
sti
adc
dec
rcr
xchg
jge
ins
sbb
xchg
sub
xchg
lods
aam
or
pushf
pop
dec
aam
or
out
mov
mov
imul
add
mov
xchg
nop
jne
outs
xchg
add
mov
xchg
(bad)
pop
out
into
hlt
push
(bad)
sahf
mov
mov
xor
push
sar
mov
or
sbb
push
mov
enter
jmp
imul
cmp
adc
or
scas
jmp
or
dec
(bad)
ror
bound
add
bound
mov
mov
mov
mov
or
push
out
addr16
xchg
mov
xor
daa
aam
popf
push
add
in
mov
aam
div
dec
inc
or
dec
cmp
lods
mov
pop
loop
cmp
sahf
data16
daa
push
out
test
add
xor
test
mov
dec
hlt
jmp
pop
test
or
arpl
out
into
dec
ror
imul
add
add
fdiv
cli
dec
imul
mov
sbb
or
loope
(bad)
pop
mov
mov
leave
push
mov
mov
mov
out
add
je
and
mov
(bad)
rsqrtps
loopne
imul
ss
push
(bad)
mov
call
stos
lahf
mov
rep
repnz
(bad)
sub
mov
dec
add
xchg
add
xlat
lds
jecxz
(bad)
mov
inc
sbb
dec
mov
or
add
repz
sub
stos
data16
dec
xor
dec
lahf
push
aas
int3
inc
test
stos
cmp
push
pusha
mov
add
xor
mov
sub
retf
or
dec
hlt
out
push
test
xchg
add
mov
test
mov
and
(bad)
iret
mov
push
test
xor
push
adc
ss
xchg
mov
mov
pop
or
outs
pop
sar
iret
mov
mov
mov
adc
cmp
pop
cmps
(bad)
int3
mov
dec
adc
sub
xchg
xor
jmp
add
paddusb
ins
push
mov
aas
and
mov
mov
mov
movs
jmp
mov
cli
aad
xchg
sbb
cmp
add
cld
cmp
out
pop
push
sbb
scas
outs
stc
call
daa
and
xlat
add
sbb
ins
add
xchg
movs
sbb
(bad)
iret
(bad)
jb
mov
mov
xor
push
adc
imul
loop
cmp
sub
cmc
loopne
retf
push
and
pushf
xor
mov
xchg
dec
fidiv
jle
xchg
jae
push
cmp
xor
push
add
and
test
das
add
stos
(bad)
mov
js
add
nop
in
test
mov
cmp
xchg
mov
mov
(bad)
mov
inc
imul
scas
jge
lods
popa
cmps
hlt
pop
call
int
mov
(bad)
fadd
mov
jne
xchg
sbb
xor
cmp
fidiv
mov
gs
inc
rcl
loop
ficom
jne
jnp
xor
fmul
pop
dec
dec
adc
or
pop
int
cmc
add
fwait
push
das
nop
dec
add
daa
cmp
adc
cmp
inc
call
or
stc
add
xchg
out
ins
pop
mov
xchg
push
aad
cmp
cmc
or
xadd
cmp
test
mov
stos
add
loop
les
imul
aad
aad
retf
(bad)
shl
pop
dec
hlt
sbb
fs
sbb
jae
add
mov
jg
mov
adc
enter
in
push
mov
js
xchg
cmp
out
popf
cmps
pop
aam
cs
fistp
inc
fwait
mov
mov
fisub
popf
repnz
mov
jmp
(bad)
cld
push
repz
add
adc
pop
test
sbb
test
and
hlt
outs
jmp
inc
and
cmp
cs
ss
sar
imul
mov
push
mov
sar
retf
ret
lahf
(bad)
test
jmp
add
mov
test
push
pop
add
adc
js
or
cld
mov
lahf
pop
pop
push
inc
leave
xchg
inc
mov
lea
std
cmps
stos
movsx
pop
mov
xchg
imul
mov
lahf
and
add
pop
movs
gs
div
mov
pop
xor
hlt
or
mov
adc
clc
in
mov
jmp
add
pop
and
adc
pop
mov
aas
and
sbb
xor
div
test
cmc
repz
xchg
pop
xchg
lds
pop
jp
in
iret
pusha
(bad)
push
mov
and
xor
xor
or
xchg
mov
adc
push
push
mov
je
cmp
cld
data16
mov
in
pop
cld
mov
(bad)
aam
cmp
push
std
ror
lahf
jmp
lds
cmps
repnz
cmp
(bad)
fdiv
adc
adc
cmps
pop
mov
push
push
popa
dec
add
xlat
iret
rcl
cmp
fisub
cdq
sbb
cmp
jmp
or
mov
mov
and
getsec
jb
mov
push
cmps
pop
outs
pusha
outs
jno
lods
cmp
lock
lods
scas
addr16
gs
jns
inc
add
(bad)
ins
add
sub
div
jecxz
test
mov
mov
and
int3
jno
mov
mov
mov
(bad)
aas
fiadd
pop
mov
loop
xlat
or
sbb
aam
jg
fucomi
in
xor
mov
iret
clc
comiss
mov
adc
cmp
xor
cld
loope
dec
sahf
rcr
in
dec
jns
adc
popf
mov
ss
and
mov
jmp
loopne
pop
test
and
out
and
dec
jg
fs
lds
push
adc
or
loopne
rol
stos
jge
push
dec
cmc
push
jle
cmp
xor
out
sbb
or
mov
pop
iret
or
fwait
jge
popf
push
pusha
mov
and
cmp
sar
cld
fnstenv
test
js
test
mov
stos
mov
adc
ret
pushf
mov
cld
mov
outs
fisttp
pushf
shl
into
ds
sub
lea
aaa
pop
mov
pop
arpl
inc
iret
jp
popa
das
test
ins
sbb
xchg
xchg
test
jmp
test
aad
push
retf
sbb
(bad)
adc
push
imul
jae
lds
aad
pop
clc
xor
aad
dec
mov
leave
push
mov
jnp
sub
or
xor
dec
add
out
cmp
outs
lsl
in
lods
or
sbb
add
or
das
out
mov
dec
popf
cmps
push
cmps
cmp
out
mov
cmps
int3
xchg
mov
mov
ror
in
mov
xchg
pop
or
inc
aam
fimul
cmp
in
or
jecxz
adc
mov
xchg
shl
mov
push
inc
push
ret
sub
dec
sub
sbb
out
arpl
shr
jmp
stc
mov
fidivr
mov
pushf
frstor
push
rol
test
mov
movs
dec
add
pop
gs
jmp
dec
inc
jecxz
mov
ficomp
call
jmp
cdq
xchg
dec
dec
mov
push
retf
aad
pop
jbe
(bad)
ins
xchg
sbb
ret
std
imul
adc
das
mov
adc
mov
fidiv
push
in
mov
scas
test
sar
aaa
ror
into
add
ss
fdiv
(bad)
shr
push
es
les
sub
push
and
int3
jmp
xchg
daa
jae
sbb
cmp
(bad)
sbb
dec
xchg
jmp
mov
push
ja
popa
add
ss
(bad)
and
add
cli
dec
xor
jns
xor
xchg
mov
aas
lds
adc
add
call
push
int3
imul
in
and
ud0
daa
mov
xor
xchg
sahf
xchg
xchg
in
push
scas
or
inc
mov
mov
pop
fsubr
inc
int
dec
sbb
stc
jecxz
test
sbb
rcr
hlt
scas
shr
pop
or
mov
cmp
arpl
push
and
adc
fsubr
leave
add
test
maxps
xchg
mov
jg
shl
adc
fnstcw
loope
mov
in
xchg
mov
cmps
pause
cmps
sub
inc
pop
dec
call
mov
add
scas
les
std
jbe
mov
jo
out
xor
test
xchg
int3
lahf
push
movs
cdq
xchg
pop
pop
dec
dec
sbb
test
mov
adc
fwait
retf
sbb
js
dec
pop
mov
mov
sahf
hlt
hlt
inc
sbb
ret
sbb
jb
in
retf
xchg
push
add
mov
mov
loopne
mov
xor
pop
arpl
cmp
loope
dec
mov
mov
adc
data16
mov
mov
xchg
sbb
icebp
les
sub
pop
fist
daa
fbstp
sub
test
push
push
fdivr
movs
sub
dec
mov
pusha
bound
or
fldenv
push
aas
inc
push
dec
scas
out
push
mov
inc
cmp
pop
push
mov
jl
rol
sahf
adc
push
xor
mov
ins
xchg
aam
push
adc
je
adc
dec
mov
dec
jge
and
aad
out
push
adc
scas
cmps
int3
mov
loope
xchg
je
ret
stos
adc
jno
aad
xlat
xchg
jmp
push
mov
lahf
fcom
or
dec
stc
jge
mov
cmps
pushf
inc
jbe
xor
fisubr
xor
iret
sub
cmp
sbb
mov
mov
setle
mov
in
inc
xchg
es
fwait
dec
fwait
aaa
enter
push
stc
adc
cdq
repz
sub
lahf
(bad)
sar
xor
push
leave
adc
ins
stc
lahf
fld
retf
hlt
inc
jns
cdq
pop
fstp
dec
jno
mov
adc
mov
jge
adc
pop
mov
sbb
push
push
aaa
cmp
xlat
mov
stc
or
pop
and
rcl
lods
jmp
fucomip
mov
xchg
out
dec
mov
test
pusha
lahf
inc
lods
sub
push
jo
dec
imul
loop
adc
adc
popf
ss
les
add
dec
mov
out
pop
cld
xor
pop
xlat
jno
add
pushf
outs
out
lds
jns
test
jae
add
mov
mov
dec
jbe
inc
movs
jmp
movs
test
push
mov
jecxz
ret
xchg
addr16
cs
fimul
test
imul
sub
dec
inc
mov
add
test
std
femms
pop
inc
stos
fsincos
lock
sub
retf
adc
pop
ror
fidivr
cmc
sbb
popa
gs
pop
pop
push
adc
cmp
push
mov
fsubr
outs
(bad)
jae
and
adc
inc
lds
in
dec
cmovns
xchg
das
ss
pop
cdq
mov
lea
int
sbb
xor
mov
push
inc
test
or
mov
push
fstp
mov
mov
cld
cwde
mov
add
icebp
(bad)
mul
adc
ror
xor
push
lock
fisttp
xchg
cmovle
add
inc
pop
sub
fwait
push
scas
add
jle
mov
js
inc
std
loopne
fst
mov
mov
and
imul
adc
cmc
cli
cmp
adc
jbe
loope
pusha
push
jmp
xchg
dec
neg
mov
and
fadd
jle
sub
stos
sti
test
out
inc
xor
mov
dec
mov
imul
dec
aad
xchg
bnd
fld
adc
xor
loope
and
int3
pop
jnp
xor
sti
(bad)
pop
xchg
and
push
add
push
shr
int
push
mov
xchg
movs
cmps
in
loope
jg
cmps
sbb
fsub
xchg
cmp
push
cmps
cmp
out
pop
jp
movs
cmp
aam
adc
cmp
push
mov
jo
sub
xchg
dec
push
jle
fs
dec
sbb
dec
cmp
test
aaa
xchg
xchg
aas
push
xchg
or
pop
rcr
pop
loope
js
push
(bad)
(bad)
pop
fisubr
and
sbb
dec
add
and
sbb
inc
mov
push
enter
sub
movs
out
(bad)
aad
and
mov
and
leave
mov
nop
movs
push
iret
shl
cmps
(bad)
jno
mov
lods
cmp
add
mov
bound
sbb
fcom
add
sti
sar
aad
call
and
xchg
cmp
push
pop
xchg
cmp
cmp
xor
jp
dec
adc
or
mov
pop
ins
cmp
dec
push
dec
mov
jp
nop
sub
ret
ins
pop
test
outs
push
pop
stos
in
test
inc
fsub
movs
dec
push
popa
(bad)
cmp
mov
enter
inc
mov
pop
sbb
sahf
xchg
das
shl
mov
dec
ret
sbb
or
dec
sbb
bound
lods
adc
aaa
add
sti
movs
pop
pop
dec
adc
aaa
push
inc
or
push
(bad)
(bad)
in
add
dec
mov
out
aam
popf
clc
jmp
sar
xor
add
adc
push
and
xchg
(bad)
sub
out
jne
fidivr
mov
jecxz
push
dec
ins
int3
dec
sub
sub
jecxz
push
inc
test
mov
retf
push
dec
lock
xor
icebp
in
xchg
or
jne
pop
movs
ds
ins
inc
jo
push
jno
repz
sub
or
jno
xchg
js
jb
in
or
sbb
push
xchg
jp
inc
pop
int3
add
(bad)
or
xor
inc
push
xchg
push
sbb
jae
rol
(bad)
sub
mov
mov
xchg
mov
std
push
retf
mov
mov
mov
retf
lds
mov
stos
xchg
fcmovb
push
pop
pop
gs
cmp
or
mov
inc
int3
cmps
inc
jb
mov
or
ja
lahf
push
jmp
lea
ds
lods
add
inc
out
std
mov
fldcw
in
cmps
cmp
pushf
inc
shr
jle
mov
xchg
lods
cmp
push
inc
std
retf
pop
sbb
dec
arpl
or
pop
test
mov
and
xlat
popa
add
loopne
pop
ds
popa
scas
out
or
mov
sbb
inc
vmovhps
mov
xor
dec
mov
out
jp
jmp
sbb
and
ret
call
jg
enter
in
adc
cs
ins
icebp
dec
dec
push
popf
xor
sar
mov
jbe
xchg
mov
je
push
pop
imul
neg
ror
sbb
enter
test
push
mov
aas
out
mov
jo
lea
xlat
mov
xor
mov
clc
les
lods
sbb
xchg
arpl
xor
iret
push
jle
dec
retf
pop
push
scas
out
jb
aas
xor
or
test
jl
pop
sbb
call
ret
pop
jo
(bad)
(bad)
mov
repnz
sbb
sahf
stc
ds
das
push
sbb
inc
pop
push
dec
xchg
mov
inc
mov
add
ss
mov
sar
sysret
dec
push
mov
sbb
pop
sub
sbb
sub
xchg
and
push
bound
push
push
ins
sahf
add
xor
xchg
retf
mov
movs
xchg
mov
mov
cmp
dec
xchg
int3
enter
mov
xchg
std
sbb
xchg
push
mov
dec
int3
adc
and
or
je
fsub
xchg
xor
inc
out
mov
mov
lods
xchg
cmp
push
jbe
ss
mov
shr
bound
sbb
or
test
outs
enter
ficomp
push
xchg
in
cmc
add
pop
int3
aas
(bad)
push
cli
push
mov
push
ds
mov
shl
or
jl
sbb
xchg
shl
pop
ds
cmp
enter
inc
and
push
dec
xor
mov
xchg
inc
or
mov
fld
icebp
push
push
dec
call
ret
xchg
sub
mov
push
push
mov
cmp
(bad)
mov
push
push
je
fdiv
call
jo
pushf
sub
pop
in
shl
arpl
outs
jmp
mov
jae
or
pop
and
lds
ins
in
and
in
jmp
mov
retf
pusha
and
adc
shr
or
jl
test
mov
push
daa
push
into
push
imul
or
and
fstp
mov
idiv
pop
push
mov
test
(bad)
lock
iret
add
dec
js
mov
(bad)
mov
push
mov
jge
mov
add
pop
sbb
sub
inc
jbe
push
outs
add
ds
jl
rcr
mov
mov
sub
jbe
or
push
mov
mov
neg
jmp
mov
enter
fsubrp
ror
inc
jns
pop
(bad)
sub
mov
stos
xchg
in
xor
shr
movs
lods
xchg
and
cdq
fs
aaa
mov
lea
(bad)
test
and
aas
or
popf
or
mov
mov
xor
adc
ror
shl
jb
cmp
cmc
shl
mov
xchg
push
ins
mov
xchg
ror
repnz
mov
das
mov
pop
sub
cmc
mov
cdq
fdiv
loop
icebp
stos
addr16
mov
and
mov
mov
sti
mov
test
mov
sbb
call
cld
lds
es
movs
jecxz
icebp
jmp
add
jns
clc
jecxz
pushf
nop
int
mov
ds
sbb
jl
push
popf
daa
sbb
aad
fsubrp
mov
loop
ds
dec
cmp
cmp
into
fcomp
push
sbb
fdiv
dec
xchg
sar
mov
cwde
mov
xor
(bad)
cmps
in
call
inc
xchg
add
xchg
xchg
sub
aam
sbb
cmp
xor
ffreep
test
sbb
shl
(bad)
out
pop
and
xlat
(bad)
push
push
and
mov
and
sti
and
pop
imul
mov
mov
push
arpl
ins
lods
mov
mov
rcl
inc
xor
add
arpl
aam
rcl
sbb
dec
jno
cld
mov
test
iret
add
add
cmc
pop
pusha
mov
pop
push
add
lods
imul
call
pop
mov
add
jne
aas
test
gs
fmul
int
mov
mov
dec
xchg
pop
jne
ins
test
pop
call
pop
cmp
xor
pop
add
cmp
mov
and
mov
mov
inc
cmps
xchg
in
out
push
in
movs
pushf
sub
out
jmp
rcl
xor
ins
or
jmp
mov
test
lahf
adc
rcl
inc
pop
cwde
(bad)
adc
iret
mov
adc
shl
cmp
scas
push
dec
movs
scas
mov
sbb
mov
retf
(bad)
xchg
mov
shl
cmp
push
add
je
repz
mov
popa
inc
jno
adc
imul
call
mul
mov
jnp
push
push
jo
es
xchg
retf
mov
fwait
adc
pop
(bad)
mov
and
ss
jmp
jecxz
push
push
pop
xlat
inc
pusha
dec
out
mov
dec
xor
movs
cmp
test
cmp
adc
inc
jmp
xchg
mov
inc
loopne
adc
mov
add
push
mov
add
dec
xchg
dec
push
xor
push
sbb
daa
rol
cwde
hlt
push
ffreep
or
xchg
rcr
hlt
sbb
stos
cmp
icebp
jle
sub
or
lock
inc
rcr
gs
rcr
mov
xor
test
mov
push
popf
enter
adc
outs
scas
imul
xchg
bound
arpl
(bad)
(bad)
jmp
test
inc
and
and
arpl
mov
dec
and
arpl
jo
dec
stc
aaa
cmp
imul
jne
(bad)
xor
jl
xlat
sbb
ja
push
mov
sbb
add
stos
adc
mov
mov
push
xchg
cmp
(bad)
cmp
repz
cmps
shl
ret
sti
nop
xlat
icebp
xor
fadd
loop
ror
aas
mov
sub
inc
add
xor
pushf
imul
cmp
mov
or
pushf
cwde
mov
inc
cmp
daa
mov
sub
js
mov
sbb
pop
(bad)
or
mov
stc
cs
xor
push
stc
int3
pop
mov
jp
push
repnz
sbb
gs
clc
lock
mov
test
bound
fsubr
imul
imul
cmc
xor
jle
xor
xchg
push
imul
jle
inc
sbb
xchg
ja
retf
xor
sub
xchg
xabort
mov
imul
jnp
pop
cld
pusha
les
in
je
shl
hlt
pop
mov
push
cld
shl
sub
sub
xchg
ret
loopne
(bad)
mov
imul
adc
rol
loope
stos
ss
(bad)
(bad)
adc
mov
jp
inc
jmp
jbe
xor
cmp
lds
retf
xchg
scas
and
xchg
int3
nop
pop
mov
dec
adc
sbb
cmp
rcl
dec
cmp
jns
xchg
mov
gs
adc
repz
add
lods
out
push
add
daa
int
stc
daa
push
cdq
popa
data16
aaa
inc
lahf
or
pop
xchg
cmps
push
loope
push
inc
sbb
ret
or
and
xchg
push
mov
xor
push
dec
push
cwde
jge
repnz
loope
lea
sub
jbe
push
loope
fucomi
lahf
cmp
fmul
retf
push
ud1
(bad)
dec
ins
stc
and
gs
push
sub
rcr
pop
in
and
(bad)
cld
test
fcomi
jae
test
inc
sar
movs
xchg
and
daa
cld
lods
outs
out
inc
cmps
in
mov
clc
and
sar
je
fcom
(bad)
cmps
cld
fcomp
cmp
popf
mov
push
adc
lahf
push
push
cmp
std
xor
outs
repz
push
xchg
dec
rol
cdq
sahf
mov
sti
pop
out
aas
dec
xchg
sar
lods
pop
and
jmp
arpl
pop
mov
lea
add
out
call
jp
push
adc
into
pop
push
es
push
sub
jae
add
ins
neg
int3
xor
shr
das
stos
add
repz
cmps
or
mov
(bad)
pop
enter
(bad)
cwde
pop
gs
pop
cli
mov
sbb
rcl
test
ret
jl
pop
in
(bad)
imul
push
mov
jmp
(bad)
in
push
in
lock
cmp
mov
jmp
dec
fdivp
loop
xchg
out
cmp
sbb
lods
repnz
lods
mov
mov
add
mov
mov
xchg
or
pop
cdq
std
inc
push
xchg
test
bound
xchg
adc
mov
scas
add
std
imul
cmp
cmp
mov
jbe
lahf
sbb
js
imul
dec
enter
mov
mov
lahf
ror
call
add
ja
jmp
inc
ret
cmp
clc
stos
xchg
outs
dec
mov
or
scas
xchg
cmps
push
stos
inc
js
fldcw
pushf
call
mov
leave
push
pop
sub
sahf
pusha
jle
lods
pop
sub
fild
sub
add
jno
mov
and
in
into
push
or
stc
std
xchg
mov
adc
mov
cmps
and
mov
mov
call
(bad)
pop
sbb
dec
rcr
adc
(bad)
icebp
inc
jns
lea
or
cmp
push
mov
test
xlat
ins
mov
jle
mov
inc
out
jle
out
inc
mov
ret
push
xchg
les
stos
mov
mov
mov
lea
push
loope
xor
mov
mov
cmp
lock
daa
pop
aas
dec
aas
push
bound
or
mov
or
lds
aam
mov
retf
rep
imul
pushf
cld
cmp
xchg
lea
jns
fldenv
fidivr
nop
imul
leave
cmps
sub
pop
mov
ins
add
imul
arpl
inc
dec
or
clc
xor
mov
or
and
scas
fisubr
jle
jle
fist
pop
sub
xchg
jp
into
shl
sahf
(bad)
ja
mov
sub
icebp
push
hlt
xchg
idiv
sub
fimul
cmp
cmp
inc
popa
loope
xor
sub
in
or
cmps
(bad)
fadd
sub
cli
mov
or
cmp
fidiv
fld
mov
jecxz
xlat
movs
xor
jns
jbe
ret
xor
loop
mov
dec
push
stos
add
xchg
dec
push
jo
jns
xchg
push
xchg
pop
aad
jmp
das
pop
and
(bad)
jle
sub
dec
cmp
pop
iret
lods
daa
push
or
daa
lods
not
mov
jmp
imul
movs
pushf
cld
mov
cdq
mov
mov
cmps
push
mov
lea
push
push
jg
outs
jp
hlt
sbb
jg
int
xchg
repnz
mov
mov
inc
xor
inc
mov
or
repnz
sar
mov
cmc
repnz
mov
lods
pushf
lock
(bad)
jno
fst
outs
jo
pop
pop
dec
addr16
cmp
inc
mov
addr16
arpl
test
mov
xlat
mov
shr
outs
inc
arpl
fstp
dec
pop
xor
adc
inc
add
movs
hlt
stos
xchg
cmps
pop
dec
arpl
dec
call
push
aas
xor
pop
loopne
mov
arpl
pop
dec
xchg
mov
pop
in
lods
mov
cmp
jge
sbb
pop
test
sti
jb
fidivr
cmp
xchg
inc
and
inc
(bad)
pop
cmp
test
stc
push
or
fwait
aad
dec
push
retf
and
lea
pop
sbb
xor
das
(bad)
outs
dec
dec
(bad)
cwde
push
xchg
or
jle
push
movs
mov
push
and
sub
add
jge
fcmovu
jmp
shl
pop
test
in
xchg
add
mov
stos
in
or
daa
adc
mov
dec
iret
bound
(bad)
retf
sub
and
addr16
cmc
pop
xlat
pop
fwait
xor
stos
push
mov
stc
add
loope
mov
cmp
rcr
dec
cdq
fmul
add
jne
and
jl
xlat
shl
add
fsub
sbb
test
xchg
mov
out
test
repnz
stos
sar
cmp
ror
fld
sbb
or
in
ja
sub
cmp
mov
nop
and
in
pop
push
leave
add
in
jae
inc
pop
ja
mov
xchg
add
adc
pushf
inc
and
(bad)
lods
or
cmp
pop
hlt
mov
arpl
(bad)
ins
jmp
fstp
push
in
mov
mov
(bad)
rcr
xchg
jg
adc
or
jmp
adc
cmp
dec
cmp
es
and
fbstp
jae
cmps
loop
push
(bad)
ficomp
jecxz
loop
cmp
popa
es
sti
ffreep
ins
out
xchg
call
cdq
jns
rcl
and
xor
xor
cs
push
scas
lds
scas
pop
aam
daa
mov
pop
in
scas
aaa
aas
and
test
clc
add
ret
mov
dec
pop
push
xor
scas
mov
rcl
push
imul
sbb
mov
int3
push
int
addr16
push
add
sahf
push
mov
mov
xchg
push
lods
add
jo
push
jno
aaa
and
pop
daa
frstor
mov
inc
mov
ror
xchg
sbb
and
sbb
pop
inc
imul
mov
mov
inc
push
imul
and
pop
je
outs
scas
and
push
movs
lock
push
dec
iret
repnz
and
js
sub
out
bnd
aad
fdivr
test
es
cmps
nop
sub
dec
ret
mov
xchg
sub
add
inc
popa
repz
ins
mov
add
shr
stos
shr
adc
call
jge
daa
repz
xchg
outs
hlt
cmp
push
fsubr
mov
sbb
add
mov
das
add
mov
sti
js
sbb
fs
inc
push
adc
cmc
dec
fsub
pusha
sbb
xlat
adc
add
sar
out
sahf
stc
cmps
and
loop
jmp
adc
imul
(bad)
into
or
cmc
inc
call
inc
sar
push
mov
inc
push
rcl
xchg
cmp
jbe
jnp
mov
ds
ins
mov
dec
mov
jbe
loop
mov
sub
and
or
outs
leave
popf
daa
push
iret
iret
sub
rcr
das
jl
or
dec
xor
es
out
test
pop
mov
dec
xchg
(bad)
(bad)
dec
into
xchg
dec
jge
mov
add
or
pop
cmp
aad
mov
sbb
ja
sbb
std
jmp
cmp
lods
lods
mov
xor
xchg
dec
in
mov
sub
mul
ds
adc
fadd
cld
outs
imul
jns
mov
mov
xor
sbb
inc
pop
jecxz
dec
pop
sub
sbb
mov
test
jmp
repz
pop
nop
and
repz
mov
jb
push
jmp
sub
push
movs
arpl
cmp
xchg
fild
outs
(bad)
jbe
(bad)
gs
lock
push
sub
arpl
jbe
aas
inc
mov
mov
adc
jnp
loopne
sbb
sbb
xchg
add
mov
and
sbb
mov
aad
(bad)
xor
xchg
push
jbe
repnz
jge
jb
rol
dec
int3
xor
je
iret
das
popa
in
xor
sub
cmps
adc
pop
shl
loopne
dec
cwde
mov
nop
sar
xor
lahf
xor
jbe
sub
xor
ror
sbb
adc
cmp
js
dec
into
ss
in
and
mov
inc
jl
or
sub
dec
inc
test
rcr
cmps
jnp
outs
xchg
jnp
pop
not
ja
sbb
(bad)
mov
sub
inc
mov
fistp
test
adc
(bad)
push
or
fld
jmp
(bad)
jbe
out
lds
lods
stc
cmp
loopne
mov
or
jns
sar
(bad)
std
push
data16
mov
pop
cmp
mov
inc
outs
cmp
xor
jo
repnz
xchg
mov
push
xor
aam
popf
repz
or
push
or
test
into
cwde
js
and
imul
outs
sub
push
rcr
adc
ja
lahf
fbld
out
inc
push
iret
xor
push
push
clc
les
into
fsub
push
test
jmp
loopne
jp
mov
ror
jbe
cld
cmp
and
aad
push
adc
mov
ja
jb
lods
in
test
add
push
popa
scas
icebp
xchg
ins
loopne
scas
inc
xor
fs
out
inc
(bad)
jae
stos
sbb
bnd
daa
(bad)
pop
mov
into
fldcw
push
std
aas
mov
xor
or
push
pop
cdq
loopne
iret
xchg
fsubr
push
stos
ss
mov
jno
les
mov
xor
pop
sub
jo
inc
mov
mov
jmp
call
movs
mov
les
push
jb
aas
test
das
iret
dec
nop
adc
test
xchg
push
mov
xchg
push
inc
ja
cmp
es
push
pop
push
mov
adc
add
dec
stos
gs
dec
sti
out
dec
or
xchg
jbe
outs
xchg
mov
jg
scas
mov
mov
mov
mov
jae
mov
bound
inc
add
mov
rol
jnp
mov
and
out
add
rcr
jge
push
pop
sub
mov
bswap
adc
mov
idiv
hlt
ret
nop
jae
push
hlt
jmp
fs
(bad)
loope
stc
adc
iret
ret
loopne
sbb
arpl
retf
retf
push
xchg
les
jno
xor
inc
push
loope
jecxz
mov
inc
loope
lods
mov
cmp
inc
jg
out
dec
adc
adc
xor
xchg
mov
and
or
out
push
push
arpl
loopne
xchg
push
jne
cld
or
std
popa
addr16
mov
jp
fnstenv
sbb
cmp
jg
dec
sbb
fdivr
sbb
jns
cmp
sub
loope
add
ins
jnp
(bad)
in
in
stos
sbb
add
call
nop
sub
ret
add
ret
jp
gs
ficom
(bad)
jle
mov
in
ss
cld
test
call
and
pop
(bad)
sub
repnz
rcr
int3
jle
or
dec
and
imul
mov
add
div
xchg
jb
imul
mov
ja
push
aaa
xchg
and
retf
push
or
push
sahf
cmps
mov
mov
lock
rol
xlat
xor
add
sub
popa
xor
sbb
mov
cs
jge
std
sbb
sti
jge
inc
sbb
jmp
pop
push
sub
sbb
mov
loope
mov
push
sbb
inc
jns
fwait
lahf
ret
add
mov
push
fcmovu
daa
pop
sti
jg
mov
movs
or
jmp
sbb
in
mov
mov
retf
pop
dec
cwde
jmp
fisubr
or
leave
pushf
(bad)
icebp
stc
sti
imul
cmp
add
jbe
mov
add
nop
mov
push
cmp
push
lds
push
dec
xor
sub
fs
push
outs
jl
push
lds
sar
inc
idiv
add
cmps
dec
xor
or
jge
cmc
add
adc
aas
and
adc
xchg
js
mov
adc
les
jl
call
popf
inc
nop
jecxz
xchg
test
mov
sbb
in
push
jg
xchg
mov
mov
jl
cwde
cmp
loop
std
call
aad
adc
sub
enter
mov
sub
bound
scas
cmp
inc
stos
pop
jns
leave
test
and
aam
fisub
idiv
mov
add
xor
pushf
adc
push
outs
retfw
sub
xchg
rcr
xlat
enter
jnp
jp
sahf
(bad)
mov
mov
jmp
jecxz
cli
jmp
pop
ss
out
mov
mov
out
dec
(bad)
xor
std
out
mov
xchg
sbb
cmp
scas
sbb
xor
loopne
popa
outs
sbb
inc
scas
xor
mov
addr16
sub
sar
mov
or
daa
popf
(bad)
fnstsw
sub
and
out
xor
out
pop
xchg
xor
jl
loope
adc
(bad)
test
mov
sbb
loopne
mov
bound
les
clc
xor
mov
cs
inc
mov
mov
sbb
out
in
movs
fucom
movs
jle
shr
movs
repnz
adc
in
or
xchg
movs
and
loope
jl
iret
(bad)
ins
push
loope
pop
repz
shl
mov
int
dec
sbb
pop
aas
and
inc
lods
pop
int3
sar
pushf
loop
nop
leave
ja
aad
cmp
push
lock
imul
dec
gs
inc
and
mul
cmps
hlt
dec
mov
fmul
jg
cmp
inc
mov
jnp
and
fsub
retf
in
sub
leave
stos
addr16
pop
jo
rcl
movs
sbb
movs
pusha
jge
div
ret
add
sahf
fdivr
xchg
jle
pop
sbb
push
inc
push
jmp
mov
and
xor
or
jo
sub
jno
jmp
add
loope
adc
stos
xor
lds
lds
pop
mov
ds
out
or
(bad)
push
add
aaa
jne
bound
adc
push
call
mov
call
xor
inc
imul
jne
ret
sti
ja
or
aas
cmc
mov
int3
enter
cs
ja
lock
jp
aaa
cvtpi2ps
and
and
daa
xlat
repnz
jb
(bad)
jmp
in
and
in
mov
fs
mov
(bad)
jecxz
cmp
pop
inc
movs
add
in
in
mov
cld
xor
je
jmp
sbb
add
mov
sub
push
jle
loop
cmp
mov
and
nop
repnz
stc
pusha
add
fsubp
inc
cmps
jmp
sahf
retf
xchg
sar
mov
(bad)
jle
call
dec
jno
ja
xchg
aas
dec
mov
(bad)
inc
mov
mov
adc
cmp
jl
jnp
push
aaa
adc
in
and
ret
ds
inc
xchg
mov
add
(bad)
mov
das
fisub
jge
jo
(bad)
shl
dec
retf
ror
das
sbb
xor
jg
lds
inc
repz
inc
in
call
push
xor
lods
cld
hlt
out
dec
cmp
jp
shl
lea
cmp
push
cwde
repz
cmp
aam
fcompp
dec
frndint
in
adc
pop
rcr
jecxz
stos
out
sbb
outs
push
es
mov
mov
rol
cmps
inc
inc
(bad)
ret
xchg
dec
rcr
inc
add
ret
push
mov
into
out
push
pop
(bad)
aad
scas
push
in
iret
add
ja
daa
push
push
sahf
mov
xor
fwait
push
jmp
mov
retf
fcom
mov
or
mov
push
stos
mov
jne
add
shl
(bad)
mov
or
sar
xor
jg
ins
jge
mov
test
push
mov
pop
xchg
out
arpl
and
pop
lahf
xor
jbe
push
mov
call
push
test
push
nop
sbb
push
xor
clc
push
jne
dec
or
mov
sub
or
out
sar
repnz
or
ins
aam
ins
cmps
adc
cmp
or
paddsb
test
jbe
fwait
out
shr
and
inc
test
stos
pop
daa
daa
mov
test
pop
jns
mov
jmp
(bad)
rol
xchg
clc
xor
int
lds
movs
das
loop
pop
ret
test
xor
mov
adc
lea
cmc
pop
inc
fiadd
xor
mov
js
cli
repnz
or
repz
lock
cmp
inc
repnz
ss
cmp
push
push
or
(bad)
cli
out
in
stc
je
sbb
test
cwde
adc
adc
pop
sub
cmp
mov
cli
jno
inc
cli
xchg
aam
lahf
shl
mov
push
pop
mov
mov
adc
(bad)
jl
pop
fstp
mov
call
add
ds
shl
and
in
mov
adc
sub
cmp
enter
jns
(bad)
dec
pop
xor
js
inc
jae
aaa
data16
pop
dec
fcomp
sub
fidiv
loopne
jno
or
sub
mov
mov
pop
dec
les
push
cmps
stos
lods
(bad)
in
cmp
mov
adc
pop
test
jo
xor
jnp
std
inc
mov
inc
xor
cld
(bad)
and
iret
mov
and
stos
jb
mov
int3
jge
pop
mov
and
repnz
leave
outs
lds
or
sbb
(bad)
(bad)
dec
enter
or
mov
fnstenv
dec
popa
mov
sbb
clc
scas
call
xor
jnp
push
cmc
pop
cld
dec
inc
cmp
push
pop
test
loopne
jno
(bad)
cwde
ss
add
je
or
out
add
cmp
outs
inc
cli
out
push
in
rol
mov
nop
rcl
(bad)
adc
jl
mov
adc
xor
dec
ins
push
lea
sbb
xor
dec
and
inc
scas
lock
cmp
push
lods
xchg
push
shl
and
aaa
mov
in
cwde
arpl
pop
test
lock
jo
xor
pop
aam
imul
test
or
and
pop
(bad)
fcom
das
cwde
jp
or
test
sahf
pop
add
out
cmp
in
bswap
fs
test
jbe
mov
inc
daa
retf
ss
push
lock
jne
ins
add
movs
sbb
pop
les
icebp
das
(bad)
or
mov
jbe
mov
cmp
lahf
and
cmps
aad
xchg
popa
push
mov
lea
loope
xor
nop
mul
push
sub
fdivr
push
int
adc
xchg
adc
jecxz
lahf
mov
mov
loop
in
movs
daa
xchg
frstor
pusha
jns
or
(bad)
cwde
jle
lods
push
sub
mov
and
(bad)
inc
sbb
xchg
jbe
(bad)
aad
call
dec
aad
dec
xor
out
stos
mov
int3
stc
popf
mov
std
jo
mov
xor
leave
clc
je
retf
cdq
pop
stos
mov
dec
rcr
clc
int3
and
pop
cld
adc
or
addr16
push
lods
out
cmp
repnz
or
cdq
jo
fist
xor
and
fadd
fmul
(bad)
sub
test
mov
jmp
inc
dec
push
pop
jno
add
jge
test
arpl
jl
push
sbb
cwde
inc
xchg
movs
push
cmps
stos
cdq
cmc
cmps
ret
add
and
sbb
test
push
ins
mov
arpl
ret
outs
dec
cmc
xor
xor
fstp
dec
xchg
cmp
cdq
stc
mul
paddsw
add
addr16
jmp
adc
or
or
mov
xchg
mov
pop
hlt
nop
mov
cld
loope
nop
dec
fadd
fnstcw
popa
pop
inc
push
aad
in
sbb
popf
bound
xchg
loopne
mov
rcl
jle
jmp
mov
inc
push
adc
(bad)
call
xor
sub
popf
sbb
xor
stos
popa
xchg
jle
fist
mov
jmp
inc
xchg
jg
xor
dec
add
mov
cwde
mov
and
pop
jbe
sbb
and
dec
js
mov
ja
sbb
mov
mov
scas
or
cmp
fst
loop
sbb
add
push
enter
adc
jmp
stos
mov
xchg
cmp
inc
xlat
and
xchg
jl
xor
test
pusha
nop
loop
fcomip
in
or
or
sub
pop
pushf
inc
lods
jne
add
cmp
(bad)
repnz
mov
xchg
mov
jge
push
xchg
xlat
ins
adc
outs
jle
call
scas
sbb
xchg
call
adc
(bad)
xchg
(bad)
sub
mov
sahf
aam
ss
mov
jle
push
cmp
add
mov
dec
mov
movs
fsubr
enter
test
jbe
out
stos
shl
push
add
inc
mov
mov
xor
outs
adc
pushf
rol
out
push
dec
dec
jl
xchg
sbb
mov
xchg
aad
cwde
lahf
loopne
cmp
aaa
inc
push
icebp
and
loopne
mov
nop
mov
pop
mov
cmp
aaa
ds
jbe
adc
aaa
adc
jle
arpl
dec
or
loope
pop
mov
mov
(bad)
sub
fistp
mov
sbb
jmp
inc
dec
repnz
movs
jmp
xchg
push
imul
mov
retf
imul
or
sub
sub
das
pop
jmp
daa
or
fadd
clc
(bad)
pop
cmp
divps
sti
int
inc
adc
mov
(bad)
adc
push
dec
lods
cmp
shl
and
aam
add
cs
popf
pop
data16
(bad)
outs
cmp
jnp
adc
inc
scas
push
adc
shl
xchg
xlat
push
daa
jno
sti
fdiv
jge
mov
mov
enter
loope
mov
xchg
push
mov
ins
mov
cmps
pusha
jno
sbb
movs
mov
rcl
retf
mov
ss
dec
movs
cmp
pop
cmp
ja
sub
pop
stos
sub
jg
mov
mov
jbe
movs
sahf
idiv
ss
out
int3
scas
push
sub
pop
cmp
mov
pop
inc
mov
rol
xchg
cmp
fwait
xchg
add
jae
je
repnz
mov
push
mov
ins
sub
mov
and
js
dec
cmp
push
mov
in
mov
into
leave
mov
push
scas
out
xor
int3
pop
shr
bound
pop
addr16
push
outs
das
es
jo
pop
mov
pop
and
xor
jl
mov
fistp
mov
popf
pop
lock
mov
jmp
mov
mov
jl
test
mov
nop
out
adc
out
sub
xor
adc
leave
xor
push
inc
call
adc
jns
cmp
push
cmp
dec
push
imul
adc
sbb
arpl
pop
inc
popf
fsub
in
xlat
jmp
mov
or
loopne
cmp
add
dec
clc
fdivr
call
aaa
pop
fwait
push
mov
call
push
mov
jne
in
(bad)
push
leave
sub
(bad)
jnp
enter
ret
in
pop
iret
in
cmp
xor
push
daa
xor
cmp
push
push
push
call
xchg
pushf
add
popa
add
xchg
or
dec
dec
or
push
iret
or
(bad)
retf
sub
adc
test
rol
leave
mov
out
sahf
sbb
mov
bound
and
enter
call
mov
loop
mov
mov
shl
push
fstp
ret
push
pop
mov
daa
dec
stos
aas
mov
std
jecxz
div
xchg
popa
(bad)
xchg
sahf
out
std
imul
inc
popa
xor
rcr
mov
add
add
lahf
mov
push
imul
adc
icebp
sub
in
out
xchg
mov
cmp
stos
sar
pop
cs
inc
hlt
call
cdq
push
push
cmp
mov
or
dec
call
or
mov
jg
(bad)
push
arpl
xchg
sbb
jmp
ficom
or
mov
mov
jl
jnp
jno
sbb
sub
(bad)
sbb
cs
ror
inc
cwde
into
push
cli
xchg
inc
jbe
(bad)
pusha
leavew
daa
dec
cmps
rcr
add
fwait
out
mov
xor
rol
data16
test
sub
dec
push
cdq
arpl
ja
outs
jg
xor
cmp
lea
cdq
mov
mov
loop
jl
jecxz
test
xor
xor
sub
dec
in
and
push
out
in
je
cmc
into
es
enter
cmp
push
jae
cmp
push
lods
sbb
test
imul
mov
rol
nop
popf
or
hlt
jecxz
hlt
call
xchg
iret
call
sub
jg
push
or
push
jae
xor
popf
popf
enter
fldcw
ja
cmp
sub
imul
mov
fbld
xor
ror
jp
adc
push
pop
lock
fstp
mov
or
fwait
cdq
shl
(bad)
hlt
sub
fwait
dec
lods
push
or
mov
pop
sbb
lahf
adc
push
loopne
xor
mov
shl
mov
pop
cmp
push
cmp
xchg
add
dec
ins
daa
ret
push
push
into
ja
popa
jl
mov
add
es
ins
stc
fs
pop
xlat
(bad)
rcr
pop
cmc
ror
dec
cmp
call
pop
jge
call
jae
sub
mov
pop
dec
mov
cli
push
pop
push
neg
push
cmps
and
add
enter
push
ficomp
out
and
xchg
and
push
(bad)
adc
not
pop
and
fisttp
push
mov
and
add
test
xchg
pop
std
cmc
jae
pop
sub
out
dec
pop
mov
(bad)
mov
sbb
pop
pusha
ins
xor
ja
and
aad
jo
bnd
mov
sbb
xchg
je
or
sbb
xlat
aaa
aam
les
aam
and
fmul
je
mov
dec
aaa
(bad)
scas
push
jb
test
inc
or
xor
or
bound
std
xchg
mov
xchg
out
mov
pushw
and
xchg
xor
sub
div
daa
jmp
push
sbb
scas
js
cmp
test
xor
dec
std
xchg
movs
adc
push
pusha
outs
xor
xor
inc
nop
lods
sti
push
xchg
ret
pop
or
pop
cmp
dec
stc
lea
je
xchg
imul
movs
xor
(bad)
adc
mov
xchg
xchg
loop
cmps
inc
into
cdq
sbb
popf
in
std
mov
sbb
ret
xor
int3
fisubr
dec
push
cmp
mov
xchg
add
inc
and
popa
mov
lods
mov
aad
scas
sar
mov
mov
cmp
xchg
retf
and
ds
test
inc
jmp
imul
push
push
sbb
std
(bad)
push
sbb
call
inc
test
dec
cmp
adc
lock
xor
mov
lock
pop
jg
fs
inc
mov
mov
loop
rol
xchg
test
jno
loopne
(bad)
push
mov
leave
sub
mov
enter
jns
scas
mov
adc
pusha
xor
sbb
pop
xchg
loope
pop
(bad)
mov
fnsave
sti
movaps
mov
ins
adc
add
jecxz
add
out
jbe
clc
and
aam
or
fs
aam
or
outs
and
scas
inc
adc
enter
je
pop
jns
retf
xchg
jb
push
sbb
xchg
imul
pushf
iret
pusha
test
sbb
dec
and
mov
lods
ftst
pop
scas
imul
cmps
cmp
pushf
(bad)
retf
mov
mov
loopne
movs
sub
fldenv
test
sbb
or
push
in
jecxz
lods
jl
and
and
xchg
xlat
pop
push
push
clc
inc
sbb
mul
je
hlt
aaa
and
out
mov
fcom
(bad)
mov
push
loopne
cmc
sahf
retf
test
push
cld
movs
xchg
cld
dec
xchg
push
push
aaa
dec
aad
into
enter
xchg
jns
jmp
cmc
pushf
es
mov
stos
adc
dec
or
and
in
and
les
adc
ror
xor
inc
push
mov
xor
xchg
mov
out
sub
es
outs
icebp
xchg
popa
test
add
push
out
adc
ja
stos
movs
test
sbb
(bad)
and
sar
js
mov
sub
test
jnp
pop
int
fdiv
mov
push
add
fidivr
cmc
xchg
into
and
movs
pop
cwde
inc
mov
mov
or
xchg
in
jae
hlt
in
sub
shl
mov
stos
lock
pop
xchg
es
stc
add
and
xchg
mov
mov
mov
xchg
out
leave
jno
stos
xchg
movs
and
and
mov
inc
and
stos
(bad)
jb
add
sbb
(bad)
jle
mov
push
inc
pop
push
rcl
not
movs
push
or
imul
mov
pop
push
hlt
sub
jb
mov
adc
xchg
or
stos
lods
loope
lods
movs
(bad)
out
stos
scas
das
cmp
aas
es
jecxz
or
ret
mov
xchg
and
outs
lahf
scas
scas
mov
cmp
pop
lods
xchg
aaa
push
in
xlat
pop
mov
sub
jno
(bad)
cmp
icebp
mov
pop
test
sub
aaa
cmp
add
sub
xchg
cdq
dec
sar
jp
sar
fcmove
rcl
jg
or
xchg
push
or
cmps
fidivr
and
inc
push
mov
sub
in
xor
ins
inc
cmp
xchg
pop
mov
jno
icebp
sbb
popa
xor
and
arpl
fwait
push
push
sub
pop
pop
outs
mov
js
inc
(bad)
dec
sub
ins
ss
pop
cmp
mov
xlat
add
jb
mov
fistp
pop
sbb
sbb
ror
inc
sbb
fstp
lea
cmp
dec
push
and
xor
aas
xchg
push
add
push
(bad)
inc
fild
ret
pop
mov
fsubr
or
push
or
ds
movs
ficom
add
sbb
icebp
aaa
xor
idiv
and
sbb
out
adc
jg
mov
leave
int3
add
pushf
mov
in
out
cmp
in
ficom
int
push
arpl
push
add
stos
dec
repz
pop
nop
push
mov
les
in
add
loope
xrelease
adc
cs
mov
and
sahf
mov
data16
jb
cmp
push
xchg
sub
enter
aam
jge
loope
add
fbld
cmc
xchg
sub
dec
pusha
xchg
cmp
hlt
ud1
mov
push
push
mov
sub
sti
cmp
push
dec
cmc
inc
lea
sub
ja
mov
shr
push
jno
jecxz
xor
mov
jmp
cmp
scas
das
xchg
into
mov
jmp
call
lods
pop
mov
mov
fcmovbe
rcl
fsub
sbb
out
leave
daa
fs
push
icebp
jno
add
int
xchg
(bad)
fisttp
inc
mov
adc
push
(bad)
push
xor
test
out
push
push
inc
call
push
aam
push
daa
xchg
push
dec
retf
dec
push
rol
pop
jae
shr
cwde
enter
adc
inc
cld
xor
cli
jg
in
cwde
gs
setbe
mov
ss
(bad)
mov
and
xchg
(bad)
adc
imul
loop
cld
xor
xor
(bad)
xchg
dec
mov
mov
retf
movs
adc
inc
pop
addr16
call
jge
movs
add
mov
pop
cmps
xchg
xchg
out
add
pushf
xor
and
je
and
or
xchg
stos
pop
sub
jge
(bad)
push
inc
(bad)
adc
xchg
add
pop
iret
mov
xor
pop
out
outs
cmp
adc
jecxz
std
mov
push
leave
xchg
dec
call
jecxz
in
popa
xchg
lods
sub
out
pop
div
jmp
stos
dec
js
outs
loop
adc
sbb
in
scas
sbb
sub
cmp
int3
pop
or
push
add
adc
inc
les
(bad)
mov
adc
fdivr
xchg
shr
push
ins
push
pusha
sahf
addr16
push
xchg
fwait
xchg
pop
and
jecxz
(bad)
repz
fst
mov
or
jge
fidivr
imul
std
pop
loope
inc
cmps
ds
inc
inc
push
imul
inc
outs
popa
dec
jmp
shr
movs
(bad)
lods
std
inc
mov
sub
adc
mov
out
fwait
ins
and
mov
pop
js
or
add
cmp
pusha
adc
into
lock
sub
xor
popa
rol
or
mov
js
adc
aam
retf
test
pop
mov
xor
pop
jp
xchg
sbb
xor
pop
sbb
xor
push
adc
sbb
add
push
and
jl
pop
mov
sti
popa
imul
sub
adc
mov
jp
cld
clc
in
mov
pop
mov
mov
adc
lea
call
jecxz
mov
push
out
rcr
mov
and
into
ins
ret
add
imul
mov
ja
dec
call
mov
mov
dec
xchg
dec
mov
iret
leave
scas
jp
mov
xor
(bad)
mov
inc
add
cmc
pop
movs
push
fbld
ds
sub
sbb
icebp
addr16
(bad)
loop
cmp
hlt
push
ds
sti
mov
pop
leave
mov
jne
sub
mov
and
js
stos
imul
and
mov
adc
pop
mov
bound
xor
xor
icebp
dec
xchg
popa
mov
jle
ss
pop
(bad)
sbb
sub
dec
or
hlt
jg
mov
or
stos
mov
repz
ins
push
push
mov
sub
gs
js
movs
stos
das
jne
xchg
jecxz
mov
aam
daa
push
xor
stc
xor
mov
jbe
data16
pop
bnd
into
xor
and
push
(bad)
pop
arpl
jns
hlt
scas
and
cld
call
call
ds
adc
scas
mov
pop
inc
ds
pop
fdivr
mov
dec
pop
test
aam
loopne
xor
mov
mov
repz
mov
pusha
fnstcw
mov
fwait
int
in
xor
or
xlat
dec
mov
fdivp
pop
(bad)
(bad)
fcomp
fdivr
outs
lds
cs
fs
jb
push
adc
lods
xchg
jge
loopne
push
(bad)
sub
sub
mov
xchg
fimul
sub
fs
add
cmc
xor
pop
bound
inc
sbb
mov
mov
mov
movs
lea
shl
hlt
jns
(bad)
jae
jne
retw
push
sbb
sub
aaa
dec
mov
int3
scas
retf
xchg
mov
aam
xor
cmp
in
xor
and
jne
push
into
mov
cdq
inc
pop
pop
cdq
rcl
jno
or
mov
fidiv
call
mov
mov
test
cs
bound
les
push
loopne
jnp
push
test
inc
retf
lahf
adc
push
mov
lods
add
fs
mov
pop
xchg
call
loopne
xchg
(bad)
rol
jl
or
pop
add
mov
(bad)
jge
sub
lods
sub
ficom
mov
pusha
inc
or
pop
xor
or
call
and
push
faddp
rol
dec
mov
punpcklbw
in
(bad)
je
and
sub
test
cmc
push
(bad)
push
(bad)
movs
out
push
rol
imul
test
dec
ds
push
fwait
ret
mov
or
inc
fwait
push
xchg
jp
lods
les
jg
mov
or
lds
ror
fld
mov
mov
movs
sbb
jns
mov
(bad)
mov
scas
leave
clc
lock
cmc
pop
cmps
push
movs
push
mov
mov
ja
xchg
inc
and
scas
es
popf
rcl
and
cmp
and
scas
cdq
mov
imul
jl
stc
sbb
mov
scas
xor
pop
daa
retf
aas
adc
stos
adc
and
cwde
dec
fucomip
out
test
adc
ss
cwde
push
and
jno
lods
rcr
cmps
jno
scas
test
gs
or
mov
mov
xchg
mov
pop
or
daa
fisttp
fidiv
xchg
fdivrp
pop
sbb
xor
mov
jb
imul
sbb
fs
nop
mov
out
adc
cmp
enter
push
add
lds
pop
int
(bad)
out
adc
and
cld
in
movs
adc
xchg
sub
cmp
cmp
je
ins
xchg
enter
out
ins
add
jl
scas
inc
push
xchg
outs
sbb
xchg
fnsave
cmp
push
imul
mov
jo
fiadd
push
mov
in
jmp
mov
ret
mov
sub
(bad)
jge
je
xchg
test
fsubr
add
add
jmp
pop
scas
adc
jmp
arpl
sub
push
stos
push
jno
push
cmc
add
test
and
pop
clc
rcl
fld
sbb
xchg
dec
push
movs
mov
push
nop
mov
shl
cmp
call
or
inc
dec
inc
fidivr
sbb
in
sub
cmp
adc
pop
retf
pop
pop
bound
jbe
cmps
rcr
mov
mov
cmps
sbb
dec
pop
mov
nop
fcos
mov
xchg
sbb
rcr
out
aaa
loope
mov
pop
or
test
adc
push
xor
das
loopne
addr16
fxch
test
es
ret
ds
jmp
inc
in
mov
mov
movs
jp
popa
lea
or
xchg
movs
pop
rcl
(bad)
cmp
fisttp
xlat
adc
cwde
add
fstp
das
push
pop
mov
repnz
dec
pusha
mov
lds
or
cld
iret
cli
ret
or
cmp
or
or
cwde
dec
inc
mov
cmp
sbb
mov
mov
sub
xchg
rol
jnp
iret
mov
rcr
call
and
add
xchg
xor
(bad)
jge
mov
arpl
das
ins
xchg
icebp
call
inc
(bad)
jne
adc
in
pop
push
pop
push
pop
and
push
pop
movs
clc
pop
and
jmp
fld
push
jno
pop
pop
dec
or
jmp
jo
ja
mov
jns
or
xchg
dec
jg
jmp
imul
pusha
std
mov
jnp
loop
push
call
in
adc
out
dec
inc
jmp
int3
leave
mov
loop
into
mov
lds
mov
sub
push
int
xor
adc
movs
popf
aam
cmp
test
call
out
jnp
movs
sub
stos
or
movs
call
(bad)
and
pop
fidiv
cdq
mov
out
cwde
add
cmp
add
xchg
(bad)
mov
shl
xor
and
and
sti
fsub
xchg
pop
(bad)
outs
out
adc
dec
mov
sbb
cmp
adc
cmc
daa
nop
inc
pop
sub
inc
cmp
aad
fstp
ror
rcl
dec
popf
mov
xchg
inc
dec
arpl
jecxz
adc
js
(bad)
jb
dec
or
xor
sbb
dec
addr16
out
mov
push
inc
sub
test
mov
jp
push
jne
ror
stos
or
add
sbb
and
pmuludq
sub
xchg
push
jp
das
mov
icebp
dec
in
xchg
inc
xor
pop
jbe
mov
dec
cld
add
sub
and
fist
sub
push
sub
into
test
push
movs
fst
sbb
mov
sub
sub
jmp
fneni(8087
push
(bad)
(bad)
icebp
mov
xor
mov
addr16
fadd
jne
lahf
pop
xlat
pop
or
les
and
fild
outs
pop
fimul
pushf
push
(bad)
dec
cli
mov
mov
inc
adc
mov
push
inc
popf
sbb
inc
jp
mov
cwde
xchg
nop
fmul
test
(bad)
sub
mov
dec
or
mov
fnstcw
daa
lods
jmp
stos
mov
mov
inc
and
sbb
les
pop
mov
adc
mov
mov
mov
imul
cld
add
pop
cmp
popf
nop
imul
jbe
ins
push
into
mov
pop
mov
pusha
dec
pop
(bad)
or
(bad)
jp
add
dec
sahf
std
pop
in
mov
jl
mov
cmp
xchg
cld
stos
pusha
test
clc
sbb
(bad)
and
mov
movs
or
and
cmp
call
lods
sub
push
sbb
jbe
cmp
popf
cmp
sub
clc
call
ror
aam
inc
xchg
scas
dec
outs
(bad)
cmp
sahf
inc
jmp
mov
push
mov
jne
xchg
lods
pop
mov
xchg
pop
int
ja
call
fs
out
mov
test
les
icebp
cld
rcl
repz
xchg
out
aaa
mov
mov
mov
inc
bound
popa
fidivr
ins
out
dec
pop
push
xor
(bad)
loop
test
and
scas
dec
or
xchg
jbe
test
cmps
outs
xor
movs
push
popf
lds
(bad)
imul
xchg
push
scas
mov
scas
jg
mov
ror
sub
xor
fidivr
xchg
cmp
xchg
jmp
jmp
outs
inc
xor
iret
sbb
mov
push
dec
sub
add
arpl
xchg
test
stos
push
sub
jno
popa
fcmovbe
mov
sbb
sub
adc
or
shr
or
call
push
inc
inc
cmp
jg
push
imul
or
add
sbb
popa
mov
mov
fs
xchg
inc
loope
outs
or
mov
div
lods
rol
ds
and
hlt
push
in
xchg
(bad)
enter
push
xor
sub
call
scas
out
xchg
and
inc
cmp
or
cmc
out
fsubr
data16
jg
dec
push
cld
mov
pop
rcr
jbe
setl
push
pop
popf
add
cmp
ret
lea
sar
data16
lods
pop
xchg
dec
ins
and
jp
push
int3
std
cmp
(bad)
fs
or
ret
das
arpl
(bad)
outs
push
push
xor
ffree
pop
and
test
jge
ss
popa
inc
fld
jbe
not
cwde
push
test
out
mov
in
cmp
add
cmp
mov
nop
movs
cmp
hlt
cs
std
dec
sub
shr
lds
imul
or
xchg
adc
les
jne
in
icebp
sub
mov
ss
pushw
push
pop
mov
and
(bad)
cli
test
mov
push
inc
jns
sub
in
out
outs
es
cs
mov
pop
ja
fwait
ds
mov
(bad)
out
pop
add
stos
les
add
stos
pusha
dec
not
sub
lods
push
mov
pusha
add
call
fistp
cmps
mov
(bad)
cld
aad
or
add
push
aaa
cmp
or
pop
in
pop
lods
mov
dec
add
xchg
stos
xchg
sahf
cwde
lods
mov
(bad)
sti
sub
aaa
inc
out
xchg
xor
xchg
adc
imul
push
cmp
push
pop
cmp
inc
ret
test
adc
cmps
pop
cmp
mov
sbb
mov
ins
ja
std
or
pop
repnz
add
pop
cmp
daa
fnsave
ds
aad
test
aam
loope
imul
sbb
cmp
or
mov
add
loopne
sub
dec
stos
xor
pop
pop
(bad)
mov
dec
sub
mov
mov
xor
lea
pop
push
test
sub
test
ins
sbb
and
adc
pop
pop
sub
jb
sbb
retf
or
ss
daa
add
call
pop
hlt
enter
fisttp
in
ficomp
xchg
mov
add
inc
ins
daa
xchg
(bad)
(bad)
in
aas
jb
popa
and
(bad)
loope
(bad)
fisttp
out
aaa
jb
mov
pushf
idiv
ret
fnstcw
and
sub
dec
mov
jmp
push
push
mov
inc
aam
cld
xchg
sbb
jnp
xchg
in
(bad)
mov
fstp
out
xor
pop
push
aas
(bad)
(bad)
div
stos
retf
pop
call
xchg
push
cmp
ret
and
dec
mov
xchg
iret
xchg
dec
dec
fs
adc
not
(bad)
not
jmp
push
or
xor
adc
ficomp
iret
mov
mov
adc
pushf
jl
movnti
xchg
mov
call
sub
mov
pop
pop
mov
sub
cs
les
addr16
or
pusha
dec
mov
add
xor
push
mov
cwde
aaa
push
stc
or
and
cmp
pushf
lods
pop
add
sbb
movs
(bad)
call
retf
int
dec
std
jbe
mov
mov
xor
outs
jecxz
mov
inc
(bad)
in
fst
sbb
ficomp
inc
outs
jmp
pop
out
xchg
xchg
int
icebp
sahf
push
dec
sub
mov
or
bnd
test
push
and
repnz
dec
or
or
gs
test
outs
jno
xchg
mov
inc
int3
cmc
shl
int
cli
mov
jmp
and
cdq
mov
push
(bad)
pop
mov
js
mov
xchg
xor
and
dec
loop
in
sub
pusha
jb
pushf
mov
adc
outs
xchg
inc
mov
gs
and
mov
(bad)
dec
xchg
cmp
sti
xchg
push
std
and
stos
dec
mov
jge
jae
inc
mov
mov
cmp
mov
jmp
popa
sub
push
xor
cmp
adc
xchg
mov
test
stos
or
idiv
xor
mov
imul
call
ror
fistp
in
pop
fnstsw
icebp
pusha
jg
js
dec
and
js
cld
nop
inc
in
popf
stos
mov
pusha
pop
out
cmp
rol
push
in
nop
xor
ret
sub
(bad)
aas
loope
mov
or
xlat
rcr
mov
jnp
fwait
add
push
mov
repz
and
sub
push
repnz
mov
sub
rcr
(bad)
adc
out
xor
sbb
je
jmp
cmp
fcomp
stos
mov
out
jno
mov
pop
test
inc
imul
and
cmp
int
jp
xchg
cwde
int3
call
sub
inc
dec
shl
mov
xor
xor
stc
mov
push
mov
es
jmp
cmp
xchg
and
push
imul
push
jno
pop
sbb
jmp
sub
add
or
sub
and
aas
je
xchg
mov
imul
cmp
dec
fidivr
ja
mov
sahf
call
push
push
fist
(bad)
retf
mov
push
adc
test
inc
add
popf
cmp
xor
pop
cmp
(bad)
xor
cmps
fidiv
mov
popf
sub
pop
outs
pop
or
mov
retf
test
mov
xor
out
test
cmp
push
pop
sub
ret
test
fistp
jo
(bad)
stc
xchg
xchg
dec
jg
pop
test
sub
jne
push
and
int
pop
test
cmp
mov
sahf
mov
pop
(bad)
cmps
and
cld
mov
movs
cdq
xchg
sub
cs
sub
push
mov
mov
push
lds
js
cmp
(bad)
adc
xchg
rcr
leave
data16
jl
push
pop
xchg
jle
(bad)
data16
popf
popf
sti
sbb
mov
push
jecxz
jnp
inc
add
xchg
and
cmp
add
inc
mov
fcomp
data16
fist
jno
adc
sti
push
adc
sbb
cmps
or
pusha
dec
(bad)
loope
loope
xor
rcr
jmp
cld
push
xchg
test
inc
js
adc
or
lods
push
mov
sub
cmc
(bad)
sbb
test
scas
call
das
test
imul
xchg
inc
sbb
(bad)
cli
mov
into
cmp
dec
nop
popf
push
jb
lods
pushf
cmp
cmps
ret
jmp
in
fist
mov
aaa
pop
enter
mov
fcomp
es
mov
in
add
mov
sar
add
sub
popf
adc
adc
sbb
sti
aas
xchg
adc
cmp
int
cmp
and
push
loopne
imul
dec
push
(bad)
push
adc
icebp
lock
dec
enter
call
pushf
sbb
cli
pop
jbe
sar
mov
enter
popf
hlt
fstp
mov
cmc
mov
pop
and
jae
addr16
jg
adc
shl
push
cdq
jb
dec
je
outs
push
xchg
mov
loope
icebp
xor
xor
rol
mul
push
xchg
jne
les
ret
fnstsw
pop
pop
outs
dec
in
(bad)
sub
test
aas
cmp
leave
push
jle
jbe
push
repnz
je
ret
adc
cs
retf
in
mov
jle
mov
stc
test
push
or
sub
pop
and
or
inc
arpl
jne
or
pop
push
or
not
jg
cmp
ins
bound
mov
fs
cs
sbb
(bad)
mov
lds
push
(bad)
mov
dec
mov
into
popf
dec
scas
mov
xor
pusha
std
retf
push
xchg
retf
inc
jns
ins
xlat
xchg
ds
add
repz
push
xlat
or
cmps
test
shl
adc
cld
pop
add
test
ss
dec
ja
fwait
or
loopne
fs
fwait
add
xor
cmp
ror
xlat
xchg
jg
cmp
and
and
loopne
repnz
ds
loop
adc
push
call
loop
inc
rcr
in
mov
sub
in
jle
jp
and
bound
fmul
or
repz
aas
sub
dec
cmc
cmp
in
jge
xchg
xor
pop
dec
popf
cmp
add
mov
not
inc
fcomp
clc
fstp
cmc
push
push
ud1
sub
jecxz
clc
cwde
sub
(bad)
lock
inc
mov
push
jo
inc
jb
test
leave
(bad)
test
or
mov
inc
retf
sar
int
inc
pop
sub
test
fistp
mov
sub
(bad)
(bad)
mov
std
xchg
mov
dec
ror
out
pop
inc
retf
scas
xor
cld
mov
out
into
(bad)
out
inc
not
mov
scas
es
jl
push
sti
(bad)
shl
xlat
jl
xchg
adc
pop
aas
cli
sub
xor
into
pop
enter
inc
rdpmc
push
lods
and
mov
mov
push
(bad)
aaa
div
pop
test
cmc
(bad)
outs
xchg
push
cmps
dec
mov
outs
sbb
push
lods
xchg
xchg
push
loope
in
xor
cld
push
jmp
or
and
cmps
fsubr
sbb
fadd
repz
add
inc
std
lods
inc
stc
jp
popf
repnz
das
adc
xchg
daa
and
jmp
imul
adc
jmp
in
xchg
retf
in
ret
xchg
out
push
xchg
std
adc
cmp
loop
stos
(bad)
xchg
pop
xor
adc
pop
int3
jmp
add
test
icebp
jecxz
add
mov
jno
in
mov
mov
pop
in
jmp
loope
cld
jmp
outs
pop
rol
sahf
push
pop
mov
jmp
ins
mov
mov
test
or
sub
pop
cmp
jge
sub
mov
cdq
es
icebp
xor
lods
mov
sar
sbb
fs
pop
test
sub
std
fidivr
rcl
fisub
sub
jge
xchg
int
or
inc
movs
aam
push
out
xchg
lods
aam
in
add
mov
push
mov
sbb
nop
dec
xchg
xor
adc
test
(bad)
mul
fild
sub
add
mov
shl
cmp
test
push
sbb
pop
xor
les
jg
jmp
mov
out
push
xlat
pop
mov
mov
movs
push
cwde
in
pop
dec
dec
sub
xchg
push
in
lods
adc
push
or
jnp
pop
stos
cmp
add
mov
(bad)
hlt
mov
inc
(bad)
stos
add
and
xor
ins
pop
ret
scas
aaa
cmp
test
cmp
in
in
xchg
test
mov
sar
loope
sbb
add
mov
lahf
xchg
cdq
adc
loopne
mov
sar
xor
sbb
aas
sub
cmc
push
mov
mov
mov
xor
sti
cmp
in
dec
push
sti
pop
mov
add
nop
imul
in
les
inc
ror
repnz
sbb
xchg
fcom
hlt
sbb
push
push
cmps
shl
ins
add
jmp
jp
das
sbb
xor
mov
adc
inc
jo
aad
adc
sub
cmp
ins
sahf
mov
pop
bound
pop
lea
pop
es
test
or
fsubrp
mov
mov
(bad)
mov
jbe
js
(bad)
cmp
imul
and
(bad)
cli
jnp
loope
pop
js
mov
mov
loope
pusha
or
ja
leave
push
cmc
ss
(bad)
sub
ss
push
dec
push
clc
mov
lods
cdq
add
and
hlt
jns
ss
jno
mov
jne
mov
mov
loop
js
(bad)
xchg
outs
dec
push
je
cmp
cmc
loopne
mov
add
repnz
stos
adc
xchg
repz
cli
xor
xor
ja
cld
icebp
adc
and
dec
push
mov
test
mov
out
ja
(bad)
sbb
cmps
pushf
ds
cli
fadd
and
pop
push
pop
xchg
push
pop
idiv
push
xor
inc
mov
cmp
dec
mov
push
enter
sbb
loopne
inc
arpl
fsub
fdivr
sbb
jae
dec
scas
lds
jecxz
aam
add
nop
cld
ss
stos
test
lods
and
xchg
data16
mov
jns
pop
pushf
ficom
das
xlat
frstor
pop
cmp
sbb
pop
cmp
xchg
push
dec
(bad)
mov
add
stos
aad
adc
in
add
cwde
cmp
clc
movs
xchg
mov
mov
dec
(bad)
in
push
movs
(bad)
js
pop
mov
jecxz
sub
jo
lods
xlat
dec
sub
pop
xchg
in
test
das
aam
add
add
adc
push
add
sbb
ins
pushf
mov
dec
lock
pop
jne
out
pop
inc
xchg
inc
xchg
inc
js
xlat
or
cmp
or
lods
fnstenv
push
es
repnz
ret
jmp
mov
dec
mov
scas
pop
ficomp
mov
jle
add
dec
mov
(bad)
or
dec
sub
mov
adc
rol
adc
xchg
ds
fs
(bad)
mov
jae
mov
ror
mov
mov
or
cvtps2pd
add
icebp
shr
fstp
xchg
push
adc
mov
cmps
hlt
dec
mov
hlt
xchg
pop
jbe
cmc
es
not
cmp
mov
jns
mov
xchg
test
aaa
jns
mov
jnp
push
dec
mov
push
repnz
cmp
and
mov
call
jae
xchg
mov
mov
in
addr16
jp
sahf
jb
es
(bad)
mov
jns
sbb
mov
out
mov
in
sub
pusha
pop
lods
push
movups
or
dec
pop
nop
cmp
or
inc
mov
inc
xchg
jnp
idiv
mov
js
adc
icebp
mov
and
cwde
dec
(bad)
fdiv
cmp
fnstcw
hlt
mov
cmp
(bad)
sub
iret
pushf
popf
daa
mov
sbb
push
jg
xor
jp
xor
mov
xchg
neg
fimul
(bad)
loopne
push
cmp
repnz
xor
push
inc
mov
leave
(bad)
sti
sar
and
pop
xor
mov
sbb
xchg
inc
sub
jecxz
pop
shr
in
inc
nop
jg
mov
xchg
cmp
scas
inc
daa
hlt
xor
cmp
or
adc
add
push
jmp
cmp
sbb
lds
xor
push
mov
call
outs
mov
fmul
jnp
dec
xor
adc
push
out
cmp
dec
cmp
add
adc
ret
loopne
(bad)
repnz
movs
imul
aas
scas
mov
xor
dec
mov
mov
aas
add
mov
dec
aaa
pop
stc
mov
fistp
std
ins
or
pop
lods
lods
lds
mov
pop
shl
xor
dec
icebp
lds
inc
pop
mov
mov
xor
call
dec
mov
adc
(bad)
cs
ins
ds
cmps
sti
(bad)
cmp
xchg
push
cmps
shl
dec
sahf
jg
mov
cli
int
pusha
(bad)
push
int
cwde
hlt
shr
xor
adc
dec
jle
pop
sub
data16
cli
bound
ret
xchg
out
pop
daa
leave
jl
fwait
out
add
pop
jl
lds
push
add
push
mov
inc
mov
fnstsw
or
jno
dec
inc
(bad)
cmps
and
add
mov
and
ds
mov
in
rcl
mov
fs
cmp
test
sub
and
jle
fcom
sub
fld
cs
mov
out
sub
mov
cmc
arpl
and
fdiv
sub
test
mov
data16
inc
jg
add
or
or
cmp
pop
sbb
test
inc
test
inc
mov
push
xchg
xchg
lods
xchg
pop
mov
and
fcmovbe
jnp
sub
mov
cmp
cmp
out
mov
push
mov
jecxz
push
jae
or
dec
push
mov
ficom
push
ins
vpmaxub
scas
cli
push
fs
iret
inc
pop
in
mov
xor
mov
and
push
sub
mov
add
inc
rol
dec
xchg
aad
enter
and
xor
or
jae
mov
sub
pop
add
xchg
sub
or
xor
pop
lea
mov
inc
inc
mov
gs
int
xor
dec
outs
stos
mov
push
fisub
fiadd
sbb
mov
jg
aad
or
cs
scas
sahf
cs
(bad)
mov
jg
or
xor
pusha
fucomip
or
dec
rol
stc
sbb
repnz
mov
(bad)
xchg
sub
icebp
out
pop
add
jmp
adc
cmp
or
mov
sub
int
ret
xlat
clc
or
in
cmp
jmp
imul
or
mov
cmp
inc
fdivr
mov
fldenv
(bad)
mov
dec
pop
aam
push
ficom
imul
add
push
imul
xchg
sub
pusha
outs
mov
pop
arpl
aam
in
sahf
xor
cli
rcr
jne
cli
outs
and
add
sbb
fsubr
jo
repnz
ret
shr
out
mov
das
outs
loope
and
or
xor
add
or
dec
dec
mov
repnz
jge
sbb
sbb
xor
jmp
movs
adc
fild
cli
and
js
cwd
and
pop
mov
loop
out
sub
je
retf
add
in
push
out
sbb
jnp
mov
cmc
mov
mov
or
and
lahf
loop
scas
jnp
std
test
jbe
clc
in
sti
mov
jl
loopne
mov
xor
xor
cmp
mov
fsubr
or
inc
mov
mov
shr
ins
jmp
xchg
inc
mov
xor
ins
sbb
cmp
adc
not
adc
xchg
repnz
push
jo
in
jge
pop
jb
call
out
rcr
das
lock
cmp
adc
adc
adc
idiv
imul
and
inc
cmp
pop
cmp
push
mov
mov
xor
repz
add
jmp
jmp
lock
inc
bnd
mov
lea
xchg
and
xchg
adc
scas
push
mov
fs
sti
dec
les
sbb
and
loope
popf
arpl
or
pushf
int
pusha
les
ror
fadd
out
or
(bad)
retf
inc
stos
xchg
cs
jns
add
or
add
call
repz
and
xchg
ss
sbb
adc
cmp
mov
pop
xchg
cdq
fcmove
jnp
xor
pop
inc
xlat
jne
lods
aas
popf
call
pop
push
or
inc
add
or
loop
adc
outs
adc
mov
xchg
and
push
rcl
cmp
pop
in
ja
aad
mov
(bad)
cmps
inc
into
outs
pop
mov
or
inc
inc
jmp
sbb
fist
retf
stos
into
inc
mov
lods
push
push
jno
jne
(bad)
xchg
pop
cmp
add
add
sahf
icebp
sbb
jbe
lds
mov
rol
dec
xlat
xlat
xor
and
push
pop
dec
enter
stc
push
jb
ds
repnz
xlat
scas
jg
dec
in
popf
repz
xor
mov
ins
xchg
lock
into
jbe
bound
idiv
enter
xor
xor
cld
shr
or
adc
lods
inc
add
or
out
test
in
and
(bad)
addr16
pop
cmps
test
adc
inc
push
add
leave
sbb
pop
push
pusha
push
mov
sbb
lods
iret
outs
call
cmp
aad
mov
adc
sub
jne
xor
xchg
aaa
ret
or
dec
aaa
repz
push
mov
jge
pop
leave
cmp
push
cmp
stos
mov
xchg
cmp
pop
pop
or
sub
enter
int3
pusha
js
sbb
out
movntq
aad
xchg
cmp
jmp
(bad)
cld
ins
or
push
push
and
push
add
pop
mov
jmp
popf
sub
sub
mov
cdq
push
or
pusha
lea
push
cmp
jo
mov
popa
pop
pusha
stos
lock
jle
sub
lds
jno
mov
das
imul
jmp
iret
push
mov
je
daa
sbb
into
jno
push
or
sahf
rol
ins
enter
inc
js
cmps
jge
out
inc
mov
retf
test
xchg
movs
shl
and
mov
movs
out
inc
pushf
cmp
test
out
adc
retf
mov
aad
sbb
(bad)
inc
and
mov
mov
fmulp
scas
xchg
arpl
cmps
data16
mov
enter
shl
jge
mov
mov
popa
out
(bad)
xor
pop
sahf
sub
push
and
mov
(bad)
aas
xchg
add
xchg
dec
sub
mov
xor
ins
xchg
inc
ds
and
push
cmp
or
xchg
test
xor
repz
sub
mov
call
ret
mov
mov
pop
mov
stos
imul
jne
das
enter
js
popa
and
idiv
add
stc
std
jno
call
push
lods
jmp
popa
ret
adc
outs
cmp
xchg
lods
(bad)
fmul
gs
push
pusha
daa
pop
stos
call
pop
pushw
fucom
sub
cmp
shr
jecxz
sbb
ret
inc
cmps
std
nop
stos
dec
cmp
sbb
adc
pop
pop
aaa
push
xor
inc
xchg
pop
inc
test
xor
and
imul
mov
push
das
jge
xor
dec
inc
(bad)
enter
adc
inc
dec
imul
cmp
adc
adc
xchg
mov
dec
push
mov
or
mov
pop
ret
fstp
jle
outs
xor
inc
out
mov
dec
in
dec
push
pop
sbb
mov
xor
cmps
pop
cli
aad
sbb
push
aam
or
jbe
mov
fwait
retf
mov
sbb
and
dec
jmp
outs
test
push
mov
popf
in
out
out
xor
mul
push
mov
inc
jns
jge
enter
pushf
mov
shr
add
push
and
mov
xor
in
shr
jl
inc
adc
mov
adc
xor
xchg
imul
leave
mov
(bad)
in
out
push
jne
dec
cmp
jge
icebp
cld
stos
or
leave
mov
adc
js
pop
rol
adc
arpl
ss
fcmovnbe
xchg
jg
retf
(bad)
fbld
pop
add
push
(bad)
in
test
out
nop
mov
lock
mov
(bad)
test
sbb
lds
push
aam
in
xchg
and
jb
add
xchg
adc
arpl
ror
sub
jecxz
icebp
scas
dec
nop
fld
(bad)
jmp
cli
inc
jecxz
dec
xchg
mov
xchg
(bad)
into
imul
jne
sub
xchg
dec
xchg
(bad)
fcom
and
mov
xchg
sbb
xchg
aad
mov
imul
sub
retf
or
xor
jns
xchg
xor
ror
mov
jbe
dec
(bad)
data16
add
ja
leave
push
mov
xor
xor
sub
fs
test
lods
cmc
xor
or
(bad)
xchg
pop
in
sbb
xchg
inc
mov
push
push
lods
dec
pop
imul
adc
daa
sbb
jmp
cwde
jg
cmc
lods
dec
cmps
xchg
push
jle
and
sti
inc
stos
gs
jp
xchg
rol
jne
retf
sub
jle
repnz
xor
test
hlt
stos
adc
je
test
adc
adc
call
dec
fild
mov
loop
adc
rol
aad
jnp
retf
call
scas
out
out
adc
or
dec
scas
out
sbb
dec
dec
test
sbb
push
cmp
inc
mov
das
mov
(bad)
imul
jo
pop
xor
and
fmul
dec
push
mov
mov
add
mov
add
cmp
adc
push
xor
cmp
and
mov
stos
call
stos
aad
xchg
movs
fdiv
imul
sar
cwde
mov
pusha
xchg
sbb
xchg
inc
and
hlt
dec
les
sar
cmp
adc
push
repnz
push
daa
imul
loop
je
dec
dec
xchg
push
dec
pusha
push
jmp
lahf
rcr
push
imul
sub
lock
dec
inc
std
mov
sub
jae
daa
cmp
mov
and
mov
retf
in
fistp
loopne
(bad)
jecxz
(bad)
jb
ror
pop
stos
pop
inc
cmps
stos
cmps
loopne
xor
pop
push
fiadd
dec
fldpi
ror
lds
fs
mov
test
add
xchg
mov
cmp
out
cmc
mov
mov
xchg
xchg
not
jmp
xchg
or
xor
push
mov
add
mov
jno
jns
imul
push
push
arpl
in
(bad)
push
pop
shl
mov
movs
inc
sbb
push
and
sub
cli
dec
enter
mov
xor
xor
or
ret
xchg
xor
(bad)
ss
in
jb
push
sar
mov
mov
js
fmul
sahf
mov
sub
xchg
sbb
ins
pop
jp
pop
push
sub
xchg
jb
mov
div
pop
clc
mov
dec
(bad)
adc
mov
mov
push
mov
xor
mov
lock
in
in
mov
adc
push
push
shr
movs
std
inc
cmp
dec
mov
mov
sbb
ficomp
jp
out
ror
adc
pop
pop
fiadd
xor
push
fdiv
(bad)
hlt
mov
push
lods
cmp
or
xor
jmp
dec
in
adc
pusha
mov
sub
mov
inc
or
mov
fst
inc
jns
add
scas
mov
add
fidivr
sbb
(bad)
retf
lock
adc
inc
dec
push
mov
fadd
mov
les
je
les
lods
cmp
jge
into
adc
mov
push
xchg
mov
xor
push
inc
fidivr
pop
aam
ret
mov
and
ja
in
mov
adc
adc
aam
fadd
xchg
je
popa
in
jg
and
aaa
mov
xchg
ins
dec
mov
in
retf
shr
adc
pop
fistp
call
cmp
shr
cld
lock
cmps
mov
mov
pop
xor
pop
push
fdiv
mov
in
cmp
pop
xor
stos
loope
and
or
test
cs
dec
mov
mov
adc
xchg
mov
sub
adc
push
les
cmps
mov
call
punpckhdq
jg
xchg
arpl
ds
cmps
lea
les
add
sub
push
aaa
pusha
xlat
push
cmp
xor
or
mov
add
jp
sub
cli
shl
dec
add
inc
mov
jmp
cmps
ror
es
jbe
test
cmp
or
arpl
cmp
jle
push
and
mov
mov
mov
in
sar
icebp
mov
fstp
test
std
ja
push
popa
ins
fnsave
push
rol
or
push
scas
ds
and
xor
mov
outs
movs
fwait
test
adc
dec
push
aam
pop
movs
sbb
cmp
cmp
test
pop
stos
les
out
stos
mov
mov
cwde
dec
out
out
adc
enter
cmp
fbld
cmps
pushf
out
jl
and
jnp
or
adc
out
in
and
icebp
test
dec
mov
nop
fbld
mov
enter
(bad)
idiv
enter
mov
push
jne
push
xor
sbb
out
test
test
inc
xor
adc
dec
aaa
pushf
xchg
(bad)
mov
mov
xchg
pop
dec
mov
movs
jno
pop
es
sbb
mov
repz
inc
pusha
mov
lods
push
adc
xlat
dec
out
into
push
xlat
imul
fs
cmp
out
jns
pop
call
mov
add
rcl
mov
mov
neg
xchg
stos
hlt
(bad)
test
les
xor
mov
mov
sbb
mov
inc
push
in
inc
lahf
and
js
ret
or
rol
stc
leave
(bad)
xchg
cld
sahf
xor
pop
cmc
in
out
mov
adc
sbb
dec
mov
mov
inc
fidiv
test
das
(bad)
mov
ds
push
outs
jae
(bad)
rol
push
jae
fbstp
data16
add
pop
test
or
lods
dec
leave
iret
sbb
mov
dec
test
cmp
sbb
pusha
addr16
pop
jmp
ds
cdq
icebp
fstp
xchg
(bad)
or
rol
sti
sbb
call
inc
inc
and
aam
pop
imul
dec
xchg
loope
jb
adc
test
jecxz
xchg
or
mov
arpl
push
cld
mov
js
call
call
jb
cs
inc
xchg
daa
mov
fs
xor
out
push
loope
mov
jecxz
or
in
test
push
(bad)
jle
xor
xchg
xchg
adc
in
lds
dec
jp
xor
sar
jns
jle
idiv
in
inc
push
sar
and
cmp
sbb
xor
jbe
out
add
and
setae
stos
jno
mov
outs
push
pop
scas
mov
sub
or
jno
sub
aad
mov
fimul
shr
loope
test
gs
jo
add
fs
(bad)
pop
inc
dec
cmps
test
fimul
jl
inc
cmps
ror
js
(bad)
lahf
cmp
xor
ja
rcr
adc
div
adc
movq
jbe
and
mov
jns
xor
loop
xchg
(bad)
scas
adc
loope
test
mov
sub
hlt
iret
(bad)
scas
mov
push
or
adc
nop
mov
add
dec
xchg
or
cmp
push
jle
(bad)
popa
cmps
adc
into
scas
loopne
ror
cmp
(bad)
fistp
lock
out
leave
les
(bad)
fild
push
mov
addr16
int
mov
sbb
pop
inc
loopne
clc
xchg
xlat
or
out
outs
idiv
pop
aam
pop
mul
(bad)
(bad)
and
jbe
std
dec
ds
inc
jbe
bound
adc
cli
sub
xor
out
and
das
outs
mov
hlt
add
push
jno
xchg
(bad)
std
enter
cs
mov
push
test
jmp
mov
ss
daa
add
jg
stc
push
dec
push
sub
jg
fcomp
iret
lods
cmp
mov
pushf
retf
leave
mov
cmc
push
popf
pop
out
jb
lds
ins
std
leave
adc
(bad)
fidiv
push
dec
inc
xchg
test
fisub
aas
call
pop
or
xor
fst
sub
out
aas
and
imul
out
add
push
jbe
bound
scas
das
stos
jp
loop
lock
sbb
movs
aas
in
out
push
cs
lahf
and
sbb
in
adc
loopne
(bad)
shl
jb
sbb
scas
xchg
loop
jle
xchg
bound
xor
adc
enter
inc
loop
xchg
add
test
mov
cmp
jmp
out
or
or
out
fcom
fnstenv
push
adc
cmp
sbb
in
jno
dec
mov
jge
pop
jle
or
mov
outs
mov
(bad)
jmp
jecxz
lahf
or
mov
xchg
jp
mov
jnp
sbb
int3
call
mov
in
dec
mov
dec
dec
mov
push
inc
repnz
nop
mov
pop
sahf
fsub
aam
inc
shl
push
mov
repnz
jnp
push
enter
mov
sub
push
inc
jnp
jl
xchg
and
dec
jmp
push
dec
pop
iret
mov
cli
pop
cmp
scas
add
mov
test
jge
sbb
pop
loopne
add
pop
jle
adc
leave
mov
xlat
pop
adc
rcl
cwde
mov
loopne
pop
xor
mov
out
jmp
push
jle
loopne
mov
add
(bad)
and
retf
push
push
pop
pushf
cmp
pop
inc
and
inc
movs
repnz
cli
cmp
jns
(bad)
arpl
add
mov
xchg
sahf
xor
aam
jne
bound
inc
sahf
xchg
lds
(bad)
jmp
xchg
out
data16
fiadd
aaa
pop
adc
cwde
add
dec
sbb
fisubr
adc
sub
mov
(bad)
ins
dec
mov
add
mov
pop
mov
inc
test
into
fimul
push
rol
and
xchg
(bad)
int
in
sbb
jae
outs
jp
and
adc
pop
pop
adc
dec
sub
std
fsub
mov
mov
jmp
das
xchg
xchg
aas
sbb
mov
mov
sbb
dec
xchg
push
sar
jno
(bad)
(bad)
ins
arpl
sahf
ins
xor
pop
cdq
xor
iret
imul
jbe
dec
cdq
mov
mov
mov
push
mov
ins
sub
retf
push
sbb
and
adc
pop
xchg
test
sub
stos
sbb
inc
sbb
stos
add
cmp
mov
out
scas
mov
mov
fwait
out
adc
rol
(bad)
mov
sub
mov
repz
fdivp
xchg
cwde
(bad)
push
aad
cmp
adc
fldenv
icebp
cdq
mov
in
jl
xor
int
inc
pop
jb
mov
repnz
mov
and
add
loop
pop
push
lds
mov
outs
xor
hlt
fwait
(bad)
(bad)
not
xchg
mov
pop
dec
(bad)
leave
lahf
jp
enter
pop
in
or
inc
adc
je
lea
xor
lds
fcmovnu
xchg
jecxz
inc
inc
loop
(bad)
adc
mov
ins
sahf
cmps
and
lahf
pop
add
test
out
ds
bsf
sbb
in
cmp
mov
std
mov
and
or
push
sub
and
lahf
mov
push
leave
xchg
or
and
das
aad
push
ret
sub
lods
inc
mov
sbb
shl
(bad)
repnz
adc
cmp
dec
shr
cmc
cmp
dec
outs
mov
push
jns
ror
adc
sbb
icebp
popa
xor
sub
int
ret
imul
adc
mov
(bad)
push
add
mov
mov
dec
in
aad
mov
int3
cli
and
xor
shl
or
shl
call
inc
xor
or
jp
out
mov
scas
xor
jmp
sbb
or
mov
inc
leave
jmp
cmp
es
xor
push
aas
mov
pop
dec
sbb
call
pop
loope
cmc
movs
or
add
retf
adc
call
sbb
jns
clc
int
stos
addr16
and
imul
mov
sbb
out
movs
xchg
ins
popa
xor
sbb
rcr
xlat
adc
and
in
sbb
push
enter
pop
fisubr
aaa
or
add
mov
mov
dec
pushf
call
cmp
mov
mov
loop
stos
fst
aad
mov
in
pmulhw
push
das
and
mov
rcr
ds
xor
je
div
and
outs
mov
mov
lods
lock
icebp
inc
jp
std
dec
enter
mov
test
adc
lods
xchg
loope
jg
inc
ja
fild
fcomp
sub
mov
into
push
inc
repz
out
(bad)
gs
mov
nop
sahf
popf
push
out
fs
pop
push
pop
stos
xchg
sbb
mov
stc
das
sbb
and
cld
dec
stc
aas
fwait
pop
and
and
(bad)
xchg
out
call
and
push
sub
xchg
dec
mov
test
inc
add
in
hlt
jno
and
stos
jnp
pop
fadd
push
cmps
outs
cmps
inc
sub
fild
pop
xchg
rol
aas
xchg
test
cmpps
ror
shld
es
ret
imul
inc
repnz
ret
inc
test
(bad)
loope
aam
add
repz
fsub
pop
adc
fidiv
xchg
lods
(bad)
idiv
cmp
in
xchg
popa
pusha
sub
push
cmp
out
add
cmp
sub
push
or
sbb
gs
xchg
jg
cdq
xor
inc
or
in
mov
loopne
imul
test
fucom
cmc
cmp
mov
adc
hlt
nop
jno
xor
cs
cmp
jge
addr16
std
ss
das
sub
nop
mov
push
ins
out
jecxz
sbb
stos
cmp
mov
repz
lds
push
ficom
cli
sahf
fldcw
mov
sbb
adc
inc
data16
ret
adc
mov
scas
(bad)
leave
int3
daa
dec
loope
out
stos
fidiv
or
je
cld
cmps
cwde
scas
shl
dec
add
fstp
pop
jb
jp
lds
cmp
sti
push
cmp
loopne
adc
add
adc
xchg
push
jns
jp
mov
pushf
jg
ins
lods
das
les
sub
mov
sub
sub
inc
push
loop
call
xor
fwait
ins
add
mov
push
popa
lock
push
pop
rcl
xchg
mov
push
mov
or
xor
addr16
imul
sub
fild
xor
cmp
imul
pusha
sbb
pop
mov
push
inc
push
push
aad
add
push
clc
mov
pop
mov
les
cwde
in
add
in
xchg
fcompp
xchg
out
nop
std
ds
aad
fsubr
adc
dec
mov
daa
sub
and
in
daa
dec
push
fisttp
adc
push
mov
inc
xchg
dec
push
sub
in
mov
loopne
inc
or
jl
inc
test
inc
jecxz
pushf
xchg
pop
sub
inc
xor
jnp
fwait
dec
call
imul
inc
mov
push
(bad)
mov
neg
cmp
or
xchg
inc
pushf
test
pusha
int3
cmp
inc
inc
bswap
mov
aas
scas
adc
and
cmps
das
ins
inc
addr16
cmp
movs
in
jmp
pop
test
enter
pop
dec
inc
push
enter
jns
lods
mov
in
rol
push
icebp
and
pop
jns
jg
loop
aas
ja
das
mov
sub
xor
mov
and
pusha
arpl
mov
jns
add
out
mov
mov
lock
xor
inc
or
inc
dec
out
call
or
call
mov
mov
js
stc
adc
add
mov
pusha
jno
fcos
popf
call
sub
leave
(bad)
mov
jmp
ins
or
cmp
mov
jo
idiv
ins
dec
and
pop
in
loopne
mov
inc
push
dec
xor
jae
xchg
dec
lods
or
xchg
(bad)
jns
jle
rcl
inc
shl
ret
lods
or
adc
jno
out
and
jnp
jne
in
iret
mov
and
popf
add
xor
and
fild
js
mov
(bad)
cmp
push
xchg
push
ins
or
mov
call
add
test
sub
add
popa
lock
shr
fsubr
push
sub
and
dec
inc
dec
jge
mov
pop
xor
adc
nop
aaa
daa
mov
lock
repz
rcr
adc
shl
imul
ja
sahf
in
cmp
arpl
inc
sub
sub
fst
fimul
sub
out
ins
in
inc
pop
mov
aaa
xchg
adc
push
jmp
cli
fucom
mov
cwde
mov
xchg
lods
mov
inc
fimul
jp
add
stos
and
nop
jle
adc
sbb
out
sub
lahf
stos
sbb
(bad)
adc
adc
out
lods
repnz
or
retf
mov
sbb
imul
sahf
sub
loope
outs
jge
xchg
mov
dec
mov
inc
inc
jb
popf
cmp
ds
jp
xlat
cdq
out
xor
mov
push
outs
lock
div
hlt
lahf
movs
or
dec
mov
pop
in
mov
pop
movs
push
dec
mov
or
ins
in
ss
push
popa
cs
scas
sar
adc
js
push
test
dec
xlat
pop
aas
cld
sbb
(bad)
out
gs
and
sub
or
lea
and
push
mov
cmp
fst
lock
cld
mov
pop
jecxz
stos
or
ds
ret
sub
retf
jno
outs
dec
shl
sbb
dec
jmp
adc
jecxz
dec
mov
loope
lods
shl
pop
mov
mov
add
and
add
out
xchg
div
or
sar
mov
aam
mov
ss
mov
cs
iret
mov
mov
ds
dec
call
enter
ss
into
pop
les
in
sub
stc
in
fiadd
stos
mov
pop
xor
cld
cmp
or
jo
jne
cli
push
xchg
js
inc
scas
stos
in
retf
arpl
push
nop
test
(bad)
or
and
fsubr
sub
dec
adc
and
adc
push
bound
xchg
jb
push
inc
pop
dec
ds
test
adc
jle
outs
dec
cwde
mov
into
or
push
inc
mov
pop
enter
xor
jmp
ins
data16
push
sub
repz
repz
(bad)
cmps
push
movs
cmp
mov
icebp
pop
(bad)
pusha
push
mov
cmp
inc
dec
lea
stc
mov
(bad)
mov
into
test
jae
and
fdiv
stc
das
fcomip
jmp
pop
cmp
test
add
jmp
sub
test
stos
out
push
movs
sbb
out
int
stc
sbb
sbb
aaa
push
jge
add
fsubrp
lds
leave
xchg
mov
push
loope
push
dec
ror
push
inc
add
fnsave
out
sbb
ins
nop
push
mov
(bad)
cmp
test
mov
loop
test
xor
inc
out
lods
mov
dec
in
fstp
fst
scas
cmps
ss
in
sub
ins
xchg
xchg
xchg
cmp
mov
add
xchg
je
out
or
jmp
sbb
dec
xor
iret
repz
xor
push
outs
mov
push
mov
cmp
cmps
ret
rol
lds
mov
dec
mov
f2xm1
fcom
rol
jns
clc
pushf
mov
dec
cmp
dec
xchg
shr
mov
jmp
mov
adc
or
sbb
cmp
ror
pop
push
sub
and
mov
mov
or
sub
test
xor
fdiv
mov
push
adc
push
cmc
div
popa
out
xor
out
pop
bound
test
not
mov
bound
inc
loope
fmul
das
and
cmps
mov
pop
cmps
cmp
mov
push
mov
inc
cmp
add
out
xor
pop
cli
mov
xchg
xchg
push
cli
and
in
fwait
test
dec
aas
xlat
adc
mov
ja
cld
and
jecxz
xchg
mov
jmp
test
pusha
jge
cmp
add
popf
and
mov
mov
xchg
cmps
mov
pop
ja
cmp
xor
icebp
retf
ficomp
and
idiv
mov
aam
jnp
cdq
cld
jl
inc
mov
add
push
fdiv
cs
je
mov
pop
mov
cmc
stos
test
js
aas
out
sub
js
mov
jmp
add
pop
loop
shl
pop
mov
scas
adc
jne
cmps
clc
aas
fwait
repnz
jg
fdivr
into
ss
sbb
inc
mov
das
mov
movs
pop
adc
sahf
aas
fldenv
xchg
ds
mov
fcmovu
loopne
push
dec
add
pop
mov
mov
pop
mov
rcl
jg
jge
inc
push
jnp
ins
into
and
and
sbb
pop
or
(bad)
xor
xchg
cmps
mov
dec
cmps
iret
repnz
cmp
js
fs
pop
cmp
add
push
pop
jecxz
es
stos
out
lods
fsubp
xchg
fbstp
adc
xchg
inc
xor
inc
ror
leave
mov
rcr
and
pop
dec
cld
cmc
jnp
scas
(bad)
ret
in
fild
js
mov
inc
test
out
xchg
ins
jns
inc
cs
dec
movs
xchg
or
fst
loop
mov
stos
je
int
aas
jae
or
fsub
inc
movs
mov
stos
cmps
lock
ins
or
or
push
adc
mov
cmps
or
sub
rcl
pop
mov
int
add
bound
push
in
sub
mov
xchg
dec
dec
xchg
nop
mov
jne
or
sar
out
ror
test
lods
mov
(bad)
fucompp
inc
xchg
sbb
cdq
fcom
and
mov
fild
pop
repz
call
push
push
mov
or
dec
cmp
sbb
fcom
mov
iret
mov
mov
pop
jp
mov
mov
sub
mov
push
jmp
mov
xor
inc
sti
xor
in
js
(bad)
retf
push
out
or
loope
mov
repnz
cwde
lahf
repz
std
inc
movs
dec
idiv
push
push
push
data16
dec
mov
xchg
cmc
pop
ret
fwait
repz
cli
inc
xor
push
or
fmul
(bad)
mov
or
arpl
dec
je
add
inc
jno
jne
mov
push
test
les
je
or
out
lods
sub
ja
sbb
and
rcr
les
(bad)
pop
out
in
popa
popa
pusha
xchg
(bad)
ss
(bad)
mov
sub
mov
mov
iret
pusha
mov
(bad)
in
fimul
pop
jle
mov
stos
jno
adc
dec
and
loopne
imul
aaa
mov
fwait
movs
xor
add
gs
inc
ret
into
aaa
fisub
pop
xor
sub
mov
push
lock
mov
shl
mov
jmp
test
dec
(bad)
ss
dec
cli
xor
dec
inc
outs
gs
jg
sbb
fsubrp
stos
inc
out
cli
xlat
cmp
sar
aad
push
add
mov
cs
inc
enter
cwde
loopne
pop
cmp
ins
or
popa
sbb
movs
mov
add
ja
jg
sbb
mov
or
push
data16
push
and
cs
dec
inc
jne
repz
fmul
imul
sbb
pushf
test
in
and
adc
pop
or
dec
int3
xchg
sub
movs
xchg
mov
add
push
push
in
xchg
adc
rcl
cmp
arpl
ds
pop
add
imul
xchg
jmp
mov
out
or
and
int
rcr
jp
ins
lahf
jo
movs
fistp
lea
mov
jmp
adc
clc
loop
mov
gs
xlat
cmps
(bad)
jge
lods
repz
pop
shr
les
cmp
out
mov
mov
enter
test
or
std
xor
push
jns
cmps
or
out
mov
in
xchg
es
das
mov
pop
push
cwde
fst
mov
pop
cwde
les
pop
in
push
pop
add
add
push
adc
mov
push
mov
mov
or
or
push
or
int3
cmps
jns
movs
(bad)
in
fisubr
jg
push
(bad)
xor
idiv
arpl
mov
xor
sub
sub
push
(bad)
fisub
in
bound
mov
stc
xor
inc
fdivr
sub
das
adc
and
mov
jle
loop
mov
sbb
in
jb
push
sbb
adc
lods
fild
pop
mov
pop
lods
jbe
dec
fisub
mov
xor
(bad)
ror
sub
jnp
fiadd
call
xchg
push
mov
int
ins
sbb
hlt
xor
push
lahf
jmp
in
in
xor
xor
mov
je
iret
xchg
test
scas
ficomp
inc
lea
sbb
lds
dec
or
bswap
scas
hlt
pusha
jae
or
adc
aad
xchg
mov
cwde
adc
(bad)
push
out
daa
mov
or
in
mov
jo
push
push
sti
sahf
shl
aas
cli
fst
pop
add
pusha
sub
sub
pop
mov
iret
push
loope
xchg
dec
jmp
mov
jmp
push
into
adc
cmp
jno
dec
leave
mov
mov
shl
(bad)
je
cs
mov
sti
out
xor
icebp
xor
cld
mov
pop
push
pop
stos
mov
les
aad
pusha
push
pop
icebp
cmp
in
hlt
addr16
ret
out
lods
cmp
test
or
aas
sub
movs
arpl
es
inc
into
jg
in
push
outs
jp
data16
sub
sub
pop
or
sbb
push
movs
xchg
mov
nop
outs
scas
or
fwait
out
xchg
dec
popf
test
out
retf
bound
xlat
sahf
and
out
adc
adc
lds
in
test
and
xor
retf
dec
push
adc
jns
jb
push
loopne
push
pop
lahf
mov
pop
and
push
adc
cld
lea
(bad)
mov
mov
or
jl
adc
push
lock
test
dec
(bad)
aad
xlat
xchg
jmp
xor
pushf
loop
(bad)
dec
lock
and
cmps
push
mov
(bad)
aam
push
dec
dec
or
stos
push
cmp
cmps
dec
stos
(bad)
out
add
mov
or
stos
jbe
push
mov
in
jg
imul
repnz
les
imul
sub
adc
(bad)
xchg
fbstp
mov
outs
xchg
ret
lock
call
dec
mov
mov
mov
outs
pushf
or
jecxz
xchg
test
pop
sar
out
add
push
jge
imul
dec
mov
or
add
call
aad
sti
data16
jmp
addr16
pop
xchg
or
pop
push
call
imul
scas
shr
adc
pop
and
mov
adc
movs
test
and
sti
xlat
mov
sub
ss
popa
dec
sub
mov
and
xchg
mov
fimul
mov
cmps
mov
repnz
jae
hlt
(bad)
push
push
mov
in
add
push
je
adc
test
pop
or
add
jne
int3
or
sbb
loopne
addr16
pop
jp
cmp
pavgw
mov
fdivr
xchg
add
mov
sub
xchg
mov
push
ss
fucomi
push
adc
sub
sub
xchg
sbb
inc
mov
xchg
or
jge
pop
aam
cld
add
pop
sub
ja
mov
cld
outs
test
aaa
icebp
add
or
repz
movs
inc
sub
inc
movs
and
jg
mov
mov
(bad)
pop
and
fcmovu
sbb
push
icebp
(bad)
cmps
mov
(bad)
stos
call
sbb
pop
jle
popf
mov
stc
retf
rol
xlat
dec
jl
leave
sub
ja
jmp
rol
nop
adc
xchg
mov
fld
dec
xchg
push
push
jnp
test
inc
mov
aas
inc
push
jnp
dec
push
lea
enter
out
sub
das
jbe
push
fs
push
out
movs
out
cmp
cmp
cdq
mov
in
ins
sub
inc
scas
sub
(bad)
mov
xchg
cmp
sub
sub
cmc
inc
push
pusha
xor
out
sbb
push
and
test
pop
sahf
cmp
xchg
pop
pop
cmp
nop
cld
xchg
sub
or
mov
and
pop
push
cmp
xlat
cs
movs
mov
mov
dec
inc
mov
sahf
pop
mov
inc
push
popf
aam
ds
jno
xchg
out
or
std
cmp
std
loop
add
sub
sub
fwait
lds
mov
and
(bad)
pop
hlt
sub
sbb
push
xchg
adc
outs
push
sbb
js
ret
adc
movs
aas
xor
sbb
lods
or
lock
(bad)
gs
cs
cmps
mov
sbb
sub
inc
les
stos
das
cld
or
(bad)
xor
out
xor
adc
mov
fiadd
ret
adc
call
sbb
stc
int3
scas
aas
mov
sub
adc
adc
stc
lahf
in
xchg
mov
dec
push
test
pop
ret
push
in
xchg
gs
jno
jecxz
pop
jo
lods
sti
adc
and
imul
pop
dec
sub
push
(bad)
test
or
lock
dec
jmp
jmp
cdq
mulps
pop
push
mov
adc
pushf
stos
retf
and
jp
inc
aaa
sbb
mov
jne
jno
mov
jge
fadd
jp
adc
loop
xchg
cmps
push
jnp
push
jo
mov
cwde
push
lea
mov
aas
test
shl
retf
ds
pop
inc
fnstenv
daa
addr16
push
int
jmp
repz
push
mov
adc
sbb
xor
fs
ret
sbb
js
inc
jecxz
and
dec
jge
inc
inc
jecxz
inc
xchg
push
mov
pop
les
adc
ins
add
out
lds
fsubr
(bad)
retf
dec
sub
inc
cli
push
shl
fadd
push
mov
cmp
mov
cmp
mov
lods
cmp
mov
sub
aad
retf
imul
shl
lock
mov
retf
sbb
cmp
add
sub
mov
cmp
(bad)
out
scas
bound
aam
and
add
pop
jo
xchg
out
or
popa
ss
dec
addr16
dec
jecxz
pop
dec
cmc
mov
add
mov
mov
mov
fmul
ins
xchg
push
inc
or
pusha
xlat
xor
iret
retf
es
push
xchg
lock
dec
inc
enter
xor
out
cli
leave
sar
cmc
cmps
cmp
lods
cdq
sti
ret
adc
into
fbstp
push
daa
lock
stos
jnp
cmp
int
mov
aad
test
fisubr
cdq
push
xchg
repz
rcr
pushf
and
stos
sub
lods
adc
xchg
adc
iret
dec
dec
jge
sbb
sahf
mov
jp
sbb
or
call
xor
push
add
in
lds
sbb
cli
aas
push
out
sbb
sub
push
xchg
xchg
inc
adc
cwde
add
and
mov
mov
pop
stos
dec
ss
sbb
imul
loope
and
mov
aas
push
lock
rcr
and
mov
sub
fadd
mov
sbb
(bad)
pop
pop
mov
aad
stos
lock
(bad)
cld
push
fnstenv
loop
push
xchg
popa
push
cs
pop
mov
mov
stos
pop
xor
stc
stos
jecxz
lea
test
xor
popa
mov
pop
xlat
clc
xor
aad
push
jno
mov
test
or
ins
xor
test
pusha
out
and
je
pop
inc
test
psrlq
call
cli
and
mov
push
pop
inc
xchg
data16
outs
iret
push
inc
push
clc
into
sub
inc
loop
jbe
in
in
inc
mov
movs
mov
mov
idiv
movs
mov
sbb
or
cmp
movs
mov
pop
aad
cmp
scas
mov
and
fnstcw
jns
or
test
sbb
into
dec
call
scas
push
dec
jae
push
dec
int3
pusha
and
jmp
imul
adc
and
shr
test
clc
into
adc
pushf
dec
fstp
push
ret
outs
lea
leave
dec
imul
outs
ja
xchg
(bad)
mov
jbe
push
inc
(bad)
xchg
in
ror
mov
test
aam
les
inc
iret
imul
or
jmp
push
das
push
sub
retf
jmp
inc
pop
and
add
sqrtps
int3
xor
call
add
(bad)
jg
imul
sbb
sub
outs
movhps
and
arpl
daa
lods
(bad)
dec
dec
lea
fisubr
add
push
dec
mov
jl
test
dec
mov
cmp
push
std
xchg
inc
neg
iret
nop
cmp
add
jno
test
arpl
dec
fnstcw
stc
pop
push
xor
push
leave
neg
xchg
out
sahf
call
(bad)
xchg
push
xor
cmp
cli
mov
jbe
adc
out
and
stos
test
in
push
mov
mov
push
fidivr
and
and
mov
outs
js
retf
dec
jb
dec
pop
sub
imul
xor
ror
popf
mov
xor
xlat
mov
mov
pop
inc
or
pop
or
dec
and
pusha
push
iret
dec
aam
dec
ror
ficomp
and
ins
jb
and
ins
or
imul
adc
jnp
xor
lods
cmp
ret
sub
leave
popf
push
arpl
(bad)
(bad)
adc
int
out
(bad)
retf
cs
sbb
add
add
and
inc
push
mov
jle
mov
push
sahf
popf
mov
jmp
not
xchg
popa
sub
push
jmp
shl
dec
out
movs
clc
fcmove
pop
fisttp
iret
mov
shl
hlt
or
lods
out
mov
adc
xchg
in
xchg
je
mov
ret
pop
sub
sub
inc
(bad)
(bad)
scas
and
test
(bad)
sbb
retf
mov
mov
outs
outs
xchg
xor
xchg
or
loope
mov
push
add
out
int3
mov
cdq
(bad)
or
test
or
sbb
push
js
dec
sbb
in
pop
jb
inc
je
mov
scas
or
and
inc
sbb
das
fcomp
xchg
mov
sub
jo
in
hlt
push
rcl
out
inc
mov
mov
mov
stos
addr16
ds
push
pop
out
sub
or
push
push
mov
sbb
push
adc
dec
test
les
or
sub
push
sahf
jae
stc
jge
mov
std
mov
pop
xchg
push
or
aaa
and
je
lahf
lods
call
jle
and
sbb
mov
sbb
mov
(bad)
lahf
sbb
in
cmp
inc
hlt
jnp
jb
in
dec
out
pop
xor
js
sahf
mov
add
fimul
repz
addr16
daa
repz
sbb
inc
adc
popa
sti
mov
lock
push
into
inc
dec
cmps
push
push
mov
imul
(bad)
in
xor
lock
pop
test
cmps
mov
lods
outs
aas
scas
popa
jno
mov
mov
clc
push
adc
sbb
movs
imul
clc
push
outs
push
scas
sbb
pusha
es
neg
les
inc
add
lods
dec
jbe
loope
idiv
add
cmp
dec
(bad)
sub
add
int3
ja
sub
add
xchg
mov
test
mov
test
sub
repz
sub
into
das
pop
add
mov
sbb
mov
cmp
out
mov
lods
and
push
sub
pop
shr
movs
xor
and
mov
fild
stos
repz
adc
fdivrp
jl
adc
jo
test
popf
jnp
out
jns
xor
sbb
xor
in
cmp
call
and
mov
icebp
shr
stc
popf
xchg
test
stos
adc
inc
dec
retf
arpl
push
adc
mov
mov
rcl
xchg
rol
or
fucom
cmps
fidivr
les
jb
xchg
icebp
popf
je
jge
(bad)
div
ret
daa
cmc
inc
movs
mov
push
push
mov
loopne
cmps
dec
dec
js
stc
pop
popa
popa
div
add
(bad)
call
call
push
xchg
xor
addr16
int
sub
and
aaa
call
lea
es
(bad)
(bad)
scas
imul
sub
pop
fwait
xor
(bad)
mov
loope
imul
(bad)
add
mov
jnp
sub
push
(bad)
mov
ret
repz
sub
rcr
and
push
mov
xchg
retf
int
cdq
out
clc
or
cmp
ds
or
rol
add
icebp
dec
or
cmp
call
icebp
adc
add
add
adc
ds
aas
jb
(bad)
cmp
sti
aad
mov
lock
pop
ja
inc
ins
(bad)
mov
arpl
daa
fld
adc
data16
lahf
retf
lods
push
jnp
xlat
fs
inc
ins
jge
leave
inc
sbb
pushf
sub
mov
mov
(bad)
sahf
dec
scas
in
(bad)
out
mov
mov
popa
push
or
outs
sub
fcom
inc
dec
lea
call
stos
std
mov
in
movs
xor
and
mov
imul
sbb
mov
mov
ret
repz
fdiv
pop
and
inc
into
cdq
jne
sub
daa
or
std
push
dec
sbb
in
xrelease
and
sbb
bound
out
movs
fsub
sub
cmp
push
sar
mov
mov
push
mov
mov
test
sbb
lods
adc
cmc
lock
pop
ja
fs
arpl
push
daa
jno
not
sub
iret
test
in
inc
ss
stc
mov
retf
and
nop
sub
in
xchg
cmp
cmp
repnz
repnz
scas
xchg
aas
mov
sub
sub
add
xchg
sub
out
or
push
int
inc
fwait
sbb
icebp
stos
push
(bad)
inc
cwde
ret
js
es
pop
into
pop
movs
or
xchg
rcl
mov
(bad)
neg
sti
sti
scas
rcl
pop
dec
aaa
lds
jmp
fisttp
and
and
aam
pop
push
das
es
inc
pop
hlt
(bad)
aam
add
push
fistp
jb
mov
das
mov
leave
gs
jp
sbb
xchg
repz
nop
(bad)
(bad)
fidivr
xor
sub
pop
(bad)
sti
test
adc
dec
mov
cmps
pop
pop
out
mov
sub
cdq
mov
cwde
adc
out
sub
es
push
fimul
xor
std
push
add
xor
inc
sbb
ror
mov
adc
xor
cmp
cli
xor
mov
(bad)
stos
push
loope
mov
cwde
adc
out
shl
retf
ss
add
cmp
pop
cld
inc
sti
loop
loope
dec
sbb
fs
cmp
push
mov
nop
dec
adc
mov
mov
jecxz
call
sbb
cmp
pop
ins
lds
or
std
push
and
mov
cwde
fldcw
sub
push
cmp
and
add
test
push
lods
pop
ds
cmp
and
add
push
call
mov
mov
mov
scas
outs
loop
fbld
sbb
xchg
mov
loope
push
test
mov
mov
pop
adc
push
xor
xchg
ja
int
and
cmps
xor
fstp
dec
pushf
or
jp
xor
lods
arpl
sub
adc
inc
mov
call
jo
cli
xor
fnstenv
jp
jp
aas
add
dec
xor
not
xchg
aad
cs
popa
adc
mov
loope
dec
(bad)
icebp
pop
in
and
xchg
pop
repz
or
retf
cld
dec
mov
rcl
xor
sub
hlt
call
shl
lock
pop
fsubp
(bad)
inc
or
inc
addr16
jae
fldcw
jg
mov
mov
sub
enter
in
icebp
mov
mov
shl
jp
jno
into
and
inc
bound
xchg
fadd
xor
sub
pop
jl
push
xchg
lods
jnp
je
fisubr
ror
xor
outs
mov
sub
into
mov
xor
mov
movs
imul
pusha
adc
cld
enter
sub
xchg
bnd
cmp
xchg
lahf
xchg
ja
loope
stc
inc
into
cmp
pushw
ins
arpl
add
popa
scas
pop
fs
popa
push
mov
mov
cmp
push
pop
and
cmovbe
jp
cmp
imul
mov
pusha
jo
inc
pop
jmp
xchg
imul
or
sbb
call
shl
stos
jo
(bad)
movs
(bad)
sti
leave
loop
jb
xchg
mov
mov
lods
mov
mov
cmovle
mov
push
scas
(bad)
push
adc
cmp
sti
jmp
ins
jae
(bad)
sbb
jns
adc
jbe
mov
outs
push
retf
fsubp
jg
rcr
iret
push
dec
inc
cmp
mov
sub
jns
cs
mov
iret
xor
lahf
jl
in
mov
int
adc
or
jle
push
inc
pusha
into
movs
int
mov
mov
out
and
lods
ror
cmps
pop
shl
fstp
or
out
cld
sbb
jbe
ins
jle
popa
in
test
cs
movs
inc
mov
or
and
add
in
xor
js
dec
jmp
ss
fild
js
push
mov
jae
cli
mov
pop
cdq
gs
or
xchg
jp
sahf
xchg
inc
ins
pop
add
aam
or
pop
mov
push
cmps
fmul
shr
in
or
mov
push
pop
jmp
dec
dec
mov
sbb
loopne
cmp
jg
inc
xor
pop
repnz
inc
mov
and
movaps
sub
xlat
icebp
call
jns
retf
sub
(bad)
push
(bad)
fild
out
lds
mov
clc
les
les
jecxz
test
in
aas
sub
mov
(bad)
data16
and
pop
jns
and
mov
jnp
loopne
jp
jo
inc
ficomp
jnp
shl
inc
daa
add
jns
mov
ror
sbb
cdq
shr
xchg
mov
cmps
mov
ds
lods
inc
adc
fwait
and
jns
aaa
or
ror
ret
xchg
mov
aas
mov
rep
jmp
cmps
rcr
and
iret
fimul
rcl
xor
mov
add
and
mov
iret
outs
xor
mov
test
cwde
or
add
xchg
aad
mov
test
shl
mov
ss
mov
and
xor
call
mov
sahf
jne
dec
fadd
sti
into
mov
mov
pop
es
dec
mov
sti
cmp
sahf
cmc
lock
aad
add
(bad)
mov
mov
sub
cmps
push
jp
lds
gs
mov
ins
xor
adc
cmp
push
mov
mov
loop
lahf
cmps
out
out
into
ja
pop
shl
push
aam
or
xchg
or
inc
sbb
xor
(bad)
fist
xor
imul
std
fadd
ins
add
mov
and
test
dec
mov
pop
ss
cmp
and
dec
push
jno
inc
ins
xor
inc
cmp
fcmove
sbb
xor
xor
mov
sbb
cli
pop
pushf
in
inc
js
push
pop
xor
lods
lods
jmp
imul
pop
cmc
push
pop
sti
adc
mov
lods
daa
adc
inc
ins
mov
into
(bad)
adc
ins
ret
call
pusha
cmp
pop
mov
mov
jmp
aas
push
and
daa
arpl
les
xchg
gs
sbb
pop
add
jmp
pop
inc
imul
push
test
sbb
lds
in
jl
aad
ss
and
pop
xor
je
arpl
adc
test
dec
push
int3
or
mov
sub
jo
cmp
cwde
jb
je
hlt
mov
jno
sbb
jo
lahf
(bad)
and
rcl
add
ins
add
add
pop
test
jg
dec
nop
inc
dec
or
inc
and
call
dec
jbe
in
or
push
lods
push
jnp
xchg
icebp
mov
push
mov
jg
out
dec
mov
sti
(bad)
sub
push
fistp
and
pop
test
inc
cmp
mov
xchg
jmp
jmp
mov
pop
inc
push
sbb
cmp
pop
test
sar
fwait
jle
push
cs
scas
xchg
push
xchg
sbb
mov
xor
cmp
ret
popa
aas
inc
out
inc
sub
sub
inc
pop
jecxz
xchg
add
fadd
xchg
adc
adc
cmp
leave
push
cmps
aaa
pop
push
mov
mov
or
iret
sbb
push
cmp
add
jge
inc
cmps
or
xchg
pop
inc
pusha
jle
add
not
or
push
(bad)
cmp
jecxz
(bad)
push
or
mov
sub
sub
cdq
out
test
das
fild
sbb
movs
pop
and
mov
mov
push
adc
adc
xchg
and
cmps
xchg
in
sbb
fiadd
mov
cmc
nop
adc
mov
(bad)
and
(bad)
(bad)
inc
cmps
fsubr
dec
ins
adc
sub
or
xchg
push
outs
xor
adc
bt
out
cmp
push
push
or
lock
(bad)
mov
xor
push
xchg
sbb
in
xor
stc
pop
not
jno
jmp
loopne
sub
push
mov
imul
fild
mov
mov
or
retf
add
dec
aad
jae
mov
fadd
(bad)
mov
jno
dec
ret
push
aad
cs
dec
mov
jge
or
sbb
xchg
jp
sub
cdq
(bad)
pop
or
clc
test
mov
pop
outs
cmp
cs
(bad)
push
std
push
mov
xor
add
mov
pop
mov
mov
arpl
push
data16
sbb
shr
add
sti
pop
cmp
push
in
lods
in
std
jnp
and
xlat
(bad)
mov
jmp
mov
out
enter
sbb
push
out
inc
punpcklbw
(bad)
in
adc
pop
adc
or
out
std
out
call
movs
in
int3
xchg
jne
xor
jbe
and
call
sbb
add
sahf
jmp
(bad)
jecxz
cmp
iret
jg
test
ins
ror
xor
xor
(bad)
jmp
js
push
mov
clc
dec
xor
adc
xchg
jo
xor
jmp
push
add
mov
mov
sub
sub
xchg
push
and
aas
jge
shl
pop
cdq
push
mov
xchg
in
add
mov
sub
xchg
pop
bound
add
xor
popw
les
push
repz
call
cmp
nop
imul
ss
xor
push
dec
cmp
and
and
int
arpl
push
sbb
inc
into
(bad)
sub
push
cmp
sbb
in
push
scas
retf
ja
dec
pop
and
adc
in
or
shl
call
and
lahf
mov
(bad)
in
xlat
cld
mov
dec
xor
shl
les
call
movs
cmp
add
mov
cmps
sub
pop
or
cmp
dec
pop
paddusb
adc
cmc
pop
popa
pop
(bad)
jnp
lock
fwait
cmp
add
sub
sub
inc
mov
iret
xchg
js
mov
dec
xlat
jmp
mov
jbe
nop
test
inc
dec
sti
cs
lods
retf
movd
mov
icebp
mov
popa
pop
adc
mov
and
push
sti
in
in
sti
add
sub
jmp
cmp
pop
shl
cmp
popa
lods
push
fild
jae
aaa
sbb
xor
mov
or
(bad)
mov
or
inc
shl
add
push
jl
gs
call
in
fwait
aam
mov
fsubr
push
sub
bound
push
xchg
sub
or
pop
ret
mov
pop
push
jb
inc
add
mov
sbb
call
int
mul
in
adc
adc
and
mov
mov
sub
push
ficom
lea
pop
test
mov
fst
bound
popf
fild
jo
stos
jge
cs
add
cmp
sbb
stc
test
aad
sahf
test
mov
pusha
cmc
in
test
sub
gs
or
push
fcmovu
test
int
inc
sbb
rol
add
outs
ror
(bad)
sbb
push
shl
dec
sub
push
sbb
and
out
jle
push
lock
jne
test
add
ror
jle
sub
pop
movs
mov
int
out
cmps
in
push
pop
sub
stc
jb
test
setle
mov
jge
das
mov
or
shl
xor
sbb
(bad)
mov
pop
fild
push
adc
add
stos
push
jmp
xchg
les
xchg
xchg
pop
xchg
xchg
sti
test
pop
cmp
or
lock
(bad)
test
(bad)
in
dec
push
imul
pop
cli
jp
xlat
add
out
xchg
scas
xor
retf
loop
sbb
jmp
or
pop
pop
jae
hlt
inc
je
enter
mov
cwde
pop
js
scas
mov
or
ins
mov
push
aas
mov
imul
cld
add
int
in
xchg
pusha
push
aad
les
(bad)
fbld
mov
xor
leave
add
sub
ror
sbb
push
jno
jmp
stc
or
enter
mul
das
test
xor
aaa
fist
or
pop
loopne
inc
ds
pushw
jno
sar
loope
xor
mov
repnz
or
mov
and
test
pop
and
hlt
in
mov
pop
(bad)
iret
sub
sbb
jmp
mov
inc
cs
retf
cmp
xor
test
into
xchg
mov
adc
or
xchg
mov
or
sbb
es
mov
add
pop
test
mov
and
movs
(bad)
and
fcom
sahf
in
retf
push
cmp
(bad)
arpl
gs
ret
test
movs
sbb
adc
outs
call
mov
mov
sub
pop
xor
fisttp
sahf
mov
or
mov
xor
push
ins
sub
lock
jecxz
adc
es
dec
or
call
sbb
or
xor
je
je
mov
jnp
xor
js
jg
cmp
out
pop
aad
xchg
jge
mov
(bad)
mov
loopne
push
loope
or
sub
add
jp
or
(bad)
mov
ins
lock
ins
(bad)
ss
mov
add
fild
xchg
push
mov
jg
iret
cdq
out
call
je
call
sbb
push
xor
xor
push
mov
fbstp
cmc
rol
ret
mov
jnp
mov
mov
mov
push
cmp
mov
ins
rol
mov
jmp
jae
adc
adc
ss
ror
cmp
jp
cwde
jmp
fdiv
mov
int
xor
imul
jge
jo
mov
inc
sub
aas
dec
dec
outs
add
maxps
test
fldcw
sti
cmp
out
mov
or
dec
out
and
js
scas
jl
ins
leave
jnp
lods
inc
popf
mov
fs
mov
scas
daa
std
out
jnp
repnz
mov
pop
scas
push
out
enter
or
mov
repnz
fist
sub
push
mov
xchg
cmp
out
movs
ja
icebp
mov
je
jmp
pusha
jno
sbb
or
or
pop
pop
push
mov
xchg
inc
fcomp
ficomp
pop
popa
sub
and
xchg
xchg
pop
mov
leave
cmc
and
cmp
jg
ss
cmc
imul
sahf
fld
out
inc
fidivr
jge
movs
mov
lea
add
arpl
in
mov
mov
sbb
inc
pop
lods
add
lar
fdivr
and
jbe
shl
inc
rcr
fdivr
shr
sbb
jle
bt
int
cs
scas
inc
ficomp
iret
cmps
cmc
(bad)
adc
cmps
das
xchg
ret
fs
arpl
mov
mov
push
pop
or
stos
daa
mov
(bad)
xlat
outs
pop
les
int
enter
lods
loope
or
pop
xor
int
ret
int3
fstp
inc
xchg
les
pop
jns
sub
out
or
in
pop
pushf
xchg
test
hlt
in
movs
xor
mov
fst
inc
shl
cmp
retf
es
lds
lds
nop
test
lea
test
(bad)
xchg
in
lods
mov
pop
sbb
ja
inc
add
pop
jp
aas
sub
ja
jae
cwde
outs
je
dec
adc
dec
in
sub
xchg
and
fs
call
mov
gs
jge
pop
sub
jnp
aad
stos
cdq
in
xor
mov
push
repz
sub
dec
add
sti
jl
sub
clc
(bad)
shr
or
jmp
pop
pop
nop
pop
adc
fcom
test
pusha
leave
(bad)
gs
lahf
fild
int
leave
(bad)
popf
jns
sahf
(bad)
lock
data16
push
fldcw
mov
loop
dec
mov
cmp
adc
repnz
sub
xchg
xchg
push
mov
inc
and
pop
loopne
ret
ficomp
jge
shl
mov
pop
inc
inc
lods
(bad)
mov
gs
cmp
and
pop
cmp
cmps
aam
mov
sbb
inc
daa
push
sub
xchg
pop
xchg
pop
cmp
pop
xchg
inc
scas
stc
and
cmp
pop
stos
mov
xor
int3
(bad)
scas
push
sbb
mov
pop
mov
call
jecxz
fimul
jnp
or
inc
dec
add
sub
shl
cmps
int3
push
cld
sub
popf
loop
pop
cmp
push
mov
pop
cmc
xor
movs
clc
rep
mov
sbb
mov
xchg
push
or
pushf
mov
mov
mov
lea
sbb
xchg
pop
xchg
scas
ins
push
sbb
jp
xchg
daa
mov
std
out
mov
lahf
stc
outs
imul
pop
push
fld
pushf
scas
mov
dec
push
sar
leave
in
cmps
sbb
xchg
out
and
idiv
xor
sub
add
or
inc
adc
out
inc
or
jle
jo
sub
xor
jo
sbb
dec
stos
xchg
mov
bound
sbb
les
cli
js
ja
mov
int
lock
adc
xlat
cli
sbb
lahf
cmc
das
mov
lods
mov
xchg
jno
xor
sub
mov
mov
cld
xor
into
scas
jb
xor
into
or
lds
jb
loop
inc
arpl
je
or
xor
mov
div
push
cld
pop
jne
ins
aad
and
xchg
pop
push
adc
or
movs
shl
lahf
cwde
mov
xchg
stos
and
adc
shl
or
pop
jbe
mov
xchg
dec
push
and
pop
sbb
and
ss
sbb
xchg
push
hlt
mov
jmp
cdq
and
fadd
or
jb
scas
cmp
inc
test
sti
mov
inc
fcomp
fdivr
ss
clc
mov
scas
test
es
jp
in
push
cld
pop
in
sub
add
(bad)
mov
jbe
sbb
fwait
lock
aam
mov
arpl
popf
mov
and
cmp
sahf
add
sti
hlt
push
pop
stos
fsubr
aas
mov
jns
and
fldenv
add
test
call
adc
out
pop
test
and
xor
mov
mov
jmp
mov
ins
ror
lods
imul
or
and
out
fwait
mov
pop
mov
pop
dec
mov
scas
adc
sbb
cmp
pop
leave
add
push
mov
add
rcl
pop
test
shr
inc
xchg
test
inc
adc
cdq
jbe
lds
xchg
(bad)
loopne
xchg
or
mov
popf
fimul
imul
pop
add
test
mov
test
mov
pop
cmps
int3
cs
mov
jecxz
xchg
out
push
(bad)
or
jl
add
cmc
sub
jmp
push
(bad)
in
cmp
neg
and
popa
mov
(bad)
push
sbb
test
adc
mov
test
mov
fdivr
out
and
xor
xor
ins
test
icebp
aas
mov
pop
aad
inc
cmp
pslld
outs
cmp
sahf
push
push
popf
je
loope
leave
mov
push
add
mov
sub
ss
pop
and
ret
xchg
jmp
and
jge
aad
aam
jmp
shr
push
test
jns
into
pusha
out
sub
pop
fst
lods
adc
mov
movs
jmp
ja
(bad)
dec
test
fld
inc
ss
push
dec
mov
mov
push
xchg
fnsave
push
push
aad
loop
inc
push
gs
cmp
or
jae
jbe
and
das
xor
fsub
js
idiv
push
mov
ins
test
mov
inc
iret
stos
jo
or
sub
push
das
jmp
ds
sub
call
jmp
cmp
inc
sub
(bad)
aad
mov
or
stos
scas
fcomp
xchg
mov
mov
dec
xor
mov
pop
cmps
xchg
stc
pop
adc
sub
data16
push
cmp
adc
movs
sub
fdivr
cmp
inc
ins
add
outs
cmp
mov
mov
xchg
or
jecxz
mov
jmp
sub
or
jmp
pop
cmp
push
sub
adc
xchg
cwde
ror
xor
cmps
xchg
ins
jbe
mov
pmulhw
add
(bad)
jmp
xor
add
cld
xor
add
xchg
pop
cmp
inc
(bad)
je
imul
cmc
js
xor
sbb
sbb
adc
xor
jp
add
popa
loop
fwait
(bad)
test
mov
pusha
push
movs
out
cmp
jmp
pop
pop
les
out
gs
lods
xchg
mov
jne
cmp
pop
adc
push
loope
std
ja
sbb
std
ins
adc
pop
and
outs
ss
add
addr16
and
ficom
cdq
push
outs
adc
cmps
std
mov
in
mov
jmp
jmp
test
movs
int
out
mov
mov
rcl
ret
out
mov
sbb
sar
ins
and
retf
inc
hlt
dec
stc
cmp
dec
jne
adc
sbb
mov
dec
retf
ficom
cwde
add
dec
jle
callw
sar
shl
(bad)
loopne
xor
sbb
mov
cmp
push
inc
inc
loope
push
movs
mov
add
pushf
loope
and
loopne
test
or
test
cmps
je
push
cmp
adc
sub
in
int
mov
cs
cmp
int3
jmp
jmp
daa
(bad)
mov
loopne
iret
or
int3
mov
sbb
retf
cld
lds
inc
in
cwde
les
into
cmp
pop
out
(bad)
ror
bound
sub
dec
loop
test
je
sbb
cmp
retf
xchg
sub
into
push
out
int3
iret
adc
mov
ja
in
in
int3
imul
inc
test
jge
ret
hlt
les
leave
pop
rcr
and
jp
retf
add
test
repnz
mov
adc
in
xchg
xor
ror
or
mov
lds
xor
(bad)
cmp
ror
rcr
cs
xor
push
sbb
jae
adc
retf
rcl
in
push
pop
or
inc
push
ret
jne
ss
mov
or
and
xchg
mov
adc
jl
clc
sar
adc
lods
cmp
daa
ins
fxch
jg
sbb
sahf
xor
adc
cmp
and
retf
outs
xor
test
mov
clc
pop
ins
in
(bad)
sbb
xor
and
outs
inc
dec
push
pop
rcl
mov
ror
mov
mov
mov
jne
cmp
sub
es
or
sti
ds
clc
add
iret
repz
cwde
cmps
ficom
push
inc
cld
lds
mov
push
push
adc
or
aad
enter
adc
or
xchg
iret
xor
or
jnp
xor
cmps
push
out
mov
daa
cwde
clc
rcr
retf
jle
adc
mov
enter
pop
and
ins
jae
jo
push
dec
ret
adc
jns
imul
inc
dec
aam
pop
jb
inc
mov
xchg
fsub
into
imul
jns
mov
mov
repz
rol
pop
loopne
ds
xor
stos
pop
fiadd
js
adc
jecxz
adc
push
leave
add
mov
sahf
push
jp
ficomp
int
in
cmp
rcl
dec
adc
or
xchg
sbb
cmp
mov
adc
hlt
sbb
fwait
hlt
sbb
clc
in
lods
scas
mov
jns
pusha
xchg
fwait
aad
sahf
inc
ret
or
pop
aas
add
inc
arpl
int3
sub
add
inc
pop
push
adc
cmp
in
dec
sbb
mov
neg
add
sbb
sub
jo
mov
in
iret
dec
and
mov
xchg
out
outs
inc
sub
stos
fild
or
imul
add
enter
leave
mov
scas
xchg
mov
aam
jae
clc
add
jmp
das
cmp
cmp
push
sbb
ins
inc
iret
pop
aam
es
inc
push
stos
int3
mov
(bad)
cli
push
add
jl
lods
hlt
fld
inc
lea
aad
es
ror
or
(bad)
(bad)
idiv
inc
pop
jge
stos
and
imul
scas
mov
(bad)
fstp
xor
(bad)
repz
sub
pop
xchg
clc
cld
inc
sbb
pop
rol
repnz
ret
push
loop
jmp
imul
shl
xchg
call
mov
mov
push
or
nop
sub
mov
lods
fnstenv
add
test
hlt
or
stc
test
push
jge
les
imul
in
ret
aaa
mov
stos
dec
cmp
pop
and
xchg
dec
push
dec
sub
aas
inc
mul
sub
fild
sbb
xor
test
cwde
and
pop
sub
es
push
(bad)
xchg
sbb
outs
in
int3
repz
push
adc
fst
xor
shr
push
in
inc
dec
dec
sbb
add
aam
and
push
test
inc
jnp
(bad)
mov
call
mov
push
jmp
stc
push
dec
fild
aaa
cmp
jo
test
rcl
add
dec
sub
hlt
call
inc
ins
adc
cmps
push
mov
into
push
push
call
jne
dec
ror
xor
mov
add
out
fsub
mov
pop
pop
cli
sub
imul
fst
sub
xor
push
aas
cli
sti
fsub
pop
pop
jb
pop
pop
dec
xlat
aam
int
xchg
jg
loope
mov
pop
aaa
das
hlt
sbb
add
(bad)
rol
inc
or
faddp
pop
sahf
jno
sbb
push
cmp
imul
jnp
cmp
(bad)
dec
call
mov
hlt
scas
sbb
cs
inc
cs
pop
mov
ret
out
ja
cwde
jg
mov
shl
imul
jecxz
gs
or
push
fcomip
aas
adc
fwait
pushf
xchg
xchg
retf
inc
mov
jecxz
mov
mov
jne
icebp
push
inc
nop
lds
sbb
daa
shr
adc
int
sbb
cld
xor
mov
shr
aad
loopne
mov
jle
inc
call
jmp
shl
in
iret
das
cwde
mov
rol
or
dec
sbb
mov
mov
xchg
push
or
add
push
sar
cmp
push
sub
jbe
jo
mov
mov
push
ss
dec
jg
pop
arpl
imul
pop
jbe
das
xchg
push
rcr
cdq
outs
iret
cld
sbb
sub
inc
add
fwait
push
and
scas
pusha
dec
and
into
pusha
ret
jne
sbb
mov
inc
xor
pop
mov
ret
mov
stos
jbe
call
loop
ret
dec
mov
mov
push
sbb
repnz
sub
daa
mov
ins
fstp
out
cmp
and
fucomi
mov
sub
fld
mov
add
add
push
fxam
iret
adc
inc
fisub
inc
inc
sti
nop
je
daa
pop
xchg
push
mov
xor
hlt
mov
inc
out
je
jmp
mov
sti
jg
test
or
pop
mov
dec
data16
js
cmp
jbe
mov
aam
mov
cld
cdq
retf
mov
pop
jns
push
enter
or
push
push
(bad)
cwde
outs
and
rol
(bad)
aas
inc
sub
sub
repnz
push
mov
test
or
and
jmp
ja
mov
mov
cmp
xchg
fs
cmp
fwait
push
sti
in
or
pop
mov
ror
xchg
out
jl
loop
mov
sbb
jae
mov
jecxz
data16
lods
icebp
shl
jne
mov
(bad)
fsub
xor
movs
pusha
cmps
cwde
xchg
add
xchg
mov
or
ffreep
pop
call
les
call
movs
retf
pop
shr
fadd
stc
mov
lods
push
mov
or
out
xchg
std
popf
test
ror
adc
sahf
shl
retf
or
jns
in
fwait
xor
or
je
sbb
mov
and
mov
add
ror
movs
cmc
mov
out
jmp
dec
mov
retf
int3
push
test
push
add
clc
jmp
sub
mov
dec
mov
sbb
je
clc
cmp
fsub
pop
gs
lds
mov
out
push
out
bound
xchg
jns
xchg
cmp
or
push
(bad)
mov
cmp
dec
sub
sbb
pop
add
sti
(bad)
cmp
push
pop
fbld
sbb
xor
push
add
call
nop
cmp
and
pop
dec
dec
cmp
and
add
pop
in
add
cs
adc
ds
(bad)
dec
das
ror
cmp
push
xor
cdq
push
repz
pop
ror
adc
ds
push
mov
cdq
pop
inc
outs
and
sub
sub
(bad)
cmps
mov
sbb
cmpxchg
jo
fidiv
mov
pop
ins
adc
add
push
inc
sub
inc
pop
sbb
adc
adc
sub
dec
clc
jmp
fnsave
sbb
and
lds
adc
add
lods
push
into
pusha
cmp
inc
(bad)
imul
mov
sbb
(bad)
pop
mov
mov
and
jns
pop
xor
fwait
pop
out
add
add
mov
sub
inc
xor
jbe
outs
jp
fimul
pushf
or
inc
mov
test
sti
mov
push
in
mov
dec
imul
test
int3
sbb
jns
pop
jl
aaa
adc
popa
ret
xchg
push
cwde
sub
inc
vpandn
cs
test
clc
pop
pop
cmps
xor
xchg
fidivr
dec
pop
add
(bad)
jp
push
cmps
xor
xor
mov
inc
fmulp
out
xor
jg
not
sbb
mov
add
fdivr
xor
mov
or
adc
loopne
jno
leave
loop
sub
xlat
or
out
lods
dec
mov
add
xchg
fnstcw
sub
hlt
xchg
ja
sub
adc
xchg
add
dec
stc
ins
test
sub
adc
inc
mov
shl
ror
jecxz
int
push
push
aaa
aaa
hlt
(bad)
mov
enter
jo
outs
js
mov
mov
ins
mov
xchg
sbb
xchg
xchg
aad
xchg
inc
xchg
dec
sbb
lea
add
jae
lock
jns
pop
mov
(bad)
dec
xor
test
lock
mov
(bad)
stos
pusha
out
adc
sub
sbb
int3
pop
das
inc
push
imul
dec
mov
xor
mov
cmp
arpl
test
mov
jne
jno
xor
add
jge
gs
addr16
(bad)
xor
call
sar
pop
sub
in
popf
fdiv
xor
test
or
mov
ss
mov
inc
jns
add
add
arpl
xchg
add
mov
lds
ror
xchg
popf
inc
inc
aas
ss
xor
mov
mov
fld
or
test
add
cli
or
loop
(bad)
lods
stc
and
iret
imul
or
(bad)
jmp
mov
and
push
jbe
pop
scas
jmp
sbb
lds
or
std
mov
push
xchg
dec
popa
jae
outs
mov
and
dec
xchg
fcomp
mov
test
xor
inc
mov
xor
(bad)
(bad)
hlt
adc
adc
imul
sub
int3
cmp
dec
adc
cmp
sub
mov
div
sub
add
call
mov
(bad)
pop
(bad)
pushf
rcl
jnp
mov
adc
das
and
inc
outs
(bad)
sbb
or
mov
in
xchg
dec
gs
dec
sub
loopne
(bad)
ja
xor
pop
cmps
cmp
(bad)
jl
fdivp
dec
inc
pop
inc
xchg
sbb
cmps
jae
fstp
xor
mov
retf
fcmove
add
out
loopne
clc
cmp
xor
in
add
repz
push
mov
movs
push
push
pop
cmp
jbe
or
pop
int
cmp
retf
lock
inc
push
iret
retf
cld
fdiv
dec
cmp
(bad)
cmc
clc
sbb
int3
out
add
add
or
ror
es
rol
test
dec
mov
adc
(bad)
fistp
addr16
jae
cmp
fdiv
xchg
cli
stc
(bad)
mov
inc
ret
out
mov
push
fsubr
adc
in
add
call
pop
sahf
cmp
ror
jnp
add
sub
xor
and
jo
dec
jg
leave
mov
inc
adc
stos
push
sbb
xchg
ret
or
push
mov
(bad)
jb
jno
mov
pop
lahf
data16
or
mov
jle
jns
ret
push
or
lahf
sub
test
outs
pop
cmp
lods
adc
push
xchg
sbb
cmp
lods
adc
imul
mov
lea
adc
adc
mov
dec
adc
aaa
dec
or
sub
mov
mov
xor
dec
xchg
mov
inc
push
cmps
cmp
xchg
jne
dec
cmp
cmp
pop
in
fsub
mov
not
sub
movs
push
call
add
jmp
movs
push
jbe
sbb
mov
pop
push
mov
repz
hlt
ret
sti
pop
and
rcl
(bad)
ins
ss
xchg
leave
add
xchg
(bad)
and
aaa
cmps
jmp
je
inc
cmps
xor
pop
xor
outs
inc
lock
adc
cmp
cwde
adc
dec
pop
pop
push
mov
push
sub
ja
rcl
and
dec
sub
cdq
movs
push
xchg
and
pop
shl
(bad)
(bad)
es
je
out
xchg
mov
sub
mov
nop
stos
es
xor
xor
or
ss
inc
add
aaa
loop
dec
scas
stos
cmp
inc
in
inc
pop
jmp
popf
jg
add
push
sub
ja
movs
jo
or
xchg
int3
mov
shl
xchg
mov
and
add
mov
xor
sub
stos
pusha
cdq
mov
and
dec
in
fisub
leave
dec
mov
xchg
cmp
mov
mov
loop
(bad)
xchg
push
(bad)
push
sbb
push
xchg
jmp
mov
imul
or
out
js
mov
scas
xchg
shr
loop
stc
push
scas
xchg
or
mov
test
pushf
adc
cmp
add
repnz
mov
mov
bnd
ds
add
sub
sahf
inc
jmp
aam
test
scas
jl
fidivr
stc
cdq
rcl
xchg
inc
arpl
loop
ficom
sbb
(bad)
ins
scas
mov
call
mov
cmps
mov
sbb
cmp
jae
jae
ret
mov
popa
jmp
or
movs
push
mov
adc
call
dec
sbb
pop
and
jg
push
mov
stos
push
into
add
pop
jb
ss
and
ins
(bad)
mov
fisttp
pusha
add
into
cmp
mov
sti
mov
jb
jbe
mov
mov
sahf
mov
aad
mov
inc
xchg
pushf
and
stc
cmp
call
int
sbb
jb
mov
inc
icebp
mov
rol
fmul
neg
fidivr
fiadd
mov
pop
inc
sbb
jo
add
test
mov
sahf
je
or
imul
call
add
call
push
in
imul
imul
mov
push
add
(bad)
fild
xor
rcl
sub
enter
jno
jno
out
les
pop
sub
test
das
jmp
push
mov
jnp
sahf
test
cmp
sbb
xchg
jecxz
arpl
mov
sbb
xchg
cmp
mov
sub
pop
xchg
in
test
movs
repnz
adc
and
add
jne
movhps
cmps
cdq
imul
jmp
jmp
aaa
ja
(bad)
ret
mov
mov
rol
out
inc
cmp
pop
fsin
mov
jmp
pop
test
push
ret
ss
pusha
xor
xchg
push
adc
xor
pop
cmp
sbb
sbb
retf
sbb
or
add
inc
xor
into
add
rol
adc
test
xor
mov
and
xchg
mov
popa
mov
or
push
push
dec
stos
idiv
fcom
cdq
xor
test
ds
icebp
imul
ret
mov
int
aam
ja
movs
int
jno
dec
(bad)
into
les
out
inc
ja
jnp
js
inc
mov
mov
in
xor
inc
xchg
loopne
ds
jb
xchg
xchg
mov
call
cmp
loop
mov
and
test
xchg
ds
or
mov
into
jg
sbb
ret
mov
pop
xor
inc
push
push
data16
test
pop
and
mov
xchg
or
xor
lods
cmp
call
les
xchg
movs
mov
mov
dec
repz
jbe
sub
pop
jge
frstor
cs
dec
in
test
and
add
xchg
stos
xchg
cmp
inc
adc
call
add
pushf
sbb
add
jnp
loopne
inc
sbb
popa
pop
cmc
lods
jp
loop
cmp
push
sub
stc
pop
daa
fbld
inc
ret
cmp
dec
inc
repnz
gs
dec
repnz
cmp
das
push
adc
movs
jmp
fwait
mov
xchg
sub
call
fidiv
call
outs
scas
jo
xlat
mov
add
scas
scas
inc
(bad)
dec
in
in
sub
stos
es
adc
xor
sbb
mov
adc
cld
cmps
xor
add
jbe
aad
or
movs
je
(bad)
retf
icebp
cmp
dec
imul
in
(bad)
repz
xchg
shr
scas
xor
jae
(bad)
mov
fistp
pop
call
dec
mov
push
call
cmp
mov
sub
popf
pop
adc
iret
push
in
or
and
lds
jmp
ret
loopne
scas
dec
cmp
xchg
sub
rcr
dec
sub
stc
sahf
cmp
mov
dec
fidivr
sti
push
scas
fst
popf
inc
dec
xor
aam
imul
adc
xor
hlt
dec
pop
sar
add
mov
(bad)
or
sbb
shl
out
mov
test
and
mov
outs
xor
ror
or
jl
cmps
aaa
push
push
sub
and
jb
jg
fisub
repnz
adc
data16
sub
mov
nop
add
in
shl
cmp
aas
xor
mov
rcr
push
jmp
pop
cmp
jbe
and
xor
jge
popa
mul
fimul
mov
add
jo
fmul
retf
ss
mov
test
add
rol
adc
ds
scas
xor
fs
jp
ret
jmp
mov
popf
pop
arpl
jl
push
or
(bad)
addr16
imul
cmp
push
pop
sub
inc
in
add
mov
icebp
fcomp
add
push
and
loop
sbb
push
push
inc
pop
add
sbb
pop
push
sub
push
aad
dec
movs
in
xor
fstp
jecxz
popf
std
fst
mov
inc
ret
push
lea
outs
outs
dec
ds
(bad)
mov
fild
test
cdq
outs
nop
push
push
or
pop
pop
das
pop
imul
jl
cmp
inc
sub
jg
mov
inc
cmps
sub
cmp
add
call
sahf
mov
leave
xor
jno
sub
adc
mov
mov
lds
jns
(bad)
into
nop
sub
imul
mov
pop
mov
xor
je
add
fwait
mov
addr16
out
dec
inc
mov
je
cmp
sbb
jb
imul
adc
call
jmp
lods
mov
fiadd
pop
fild
shl
daa
shl
movs
mov
jmp
xchg
cmps
ins
stc
sub
scas
adc
(bad)
aaa
int
cmp
push
dec
mov
movs
push
popa
and
jle
icebp
dec
mov
and
mov
xchg
mov
fadd
(bad)
rep
call
sti
mov
jns
popa
test
int3
rol
pop
sbb
lods
call
pop
or
dec
push
je
icebp
xchg
push
push
addr16
sub
mov
repnz
jmp
add
pop
mov
enter
sub
js
jle
(bad)
or
out
xor
ror
jg
inc
les
pop
call
xchg
arpl
jae
ret
or
ja
imul
and
mov
mov
mov
jp
stc
lahf
pop
inc
mov
scas
pop
fmul
xor
push
push
adc
jns
js
push
or
fninit
or
lods
dec
add
fs
sub
iret
and
mov
or
outs
push
pop
jmp
adc
mov
or
test
lahf
(bad)
jge
jp
hlt
xchg
mov
fldcw
daa
fsub
mov
call
sbb
sub
sbb
dec
aad
jl
jl
inc
mov
paddusb
pop
cmp
inc
in
jg
(bad)
cld
jmp
out
ja
ins
xchg
ror
cmps
fwait
(bad)
iret
in
neg
cmp
stc
sub
sbb
retf
xor
ret
and
add
and
and
mov
xor
dec
cwde
stos
push
pop
jecxz
xchg
jnp
ds
mov
imul
push
mov
loopne
and
dec
adc
pop
sub
or
icebp
ja
adc
cmp
push
add
ficomp
hlt
pop
nop
test
sub
mov
and
lea
mov
pop
(bad)
push
dec
scas
inc
xchg
cmp
push
sbb
push
outs
or
dec
mov
mov
mov
pushf
inc
mov
add
mov
les
cmp
gs
jb
je
ds
mov
sub
inc
cmps
xchg
mov
arpl
xor
dec
dec
xor
xor
les
ficom
jecxz
and
(bad)
movs
clc
jae
pop
sub
mov
xlat
jbe
push
fst
sbb
add
xchg
rol
jo
imul
pop
repnz
inc
push
nop
dec
dec
sbb
xor
push
xchg
pop
dec
mov
cwde
shr
push
adc
lds
sbb
mov
xor
dec
aam
xchg
iret
mov
add
(bad)
adc
xchg
bound
fidivr
sbb
mov
sahf
movs
call
ret
cdq
movs
gs
clc
dec
mov
jp
dec
xchg
xor
xchg
mov
pop
xor
pop
nop
aaa
push
push
cmp
mov
iret
fadd
push
imul
pop
fdivr
sub
not
adc
ret
ret
dec
loopne
xchg
pop
int3
dec
out
sti
pop
push
mov
mov
sub
pop
or
cs
fdiv
call
repz
icebp
and
or
stos
imul
div
jbe
cmp
aam
(bad)
clc
test
out
enter
test
or
xchg
fisttp
arpl
or
mov
mov
pop
xlat
lea
aaa
lea
inc
dec
aam
push
imul
cmp
xor
dec
test
shr
mov
cpuid
loop
and
sbb
lock
mov
shr
xlat
in
mov
xor
cmp
xor
int
mov
imul
and
or
aam
pop
add
sub
push
test
(bad)
int3
hlt
sub
xchg
cmp
cmp
pop
out
scas
icebp
and
sub
sbb
pop
aas
cld
cmp
pop
jge
inc
pop
sub
sub
dec
push
es
aaa
inc
mov
sbb
xchg
cmc
jb
daa
je
sahf
icebp
(bad)
nop
dec
mov
mov
dec
lahf
clc
nop
pop
sbb
pop
jae
xor
pop
test
pop
pusha
mov
cmp
and
dec
push
xor
popf
and
stc
data16
adc
xchg
dec
hlt
(bad)
jg
popf
sub
jb
or
or
popa
mov
aas
or
mov
and
arpl
add
xchg
test
dec
mov
(bad)
out
cdq
and
mov
push
mov
push
push
pop
fs
int
fstp
mov
cmc
push
aas
fstp
loop
inc
and
or
jne
xchg
adc
cli
xor
push
lea
iret
mov
adc
cdq
adc
repnz
mov
stos
mov
rcr
inc
push
repz
mov
sub
sar
out
js
mov
mov
outs
ins
push
test
jmp
stos
push
inc
cmp
test
js
mov
fst
dec
mov
or
call
inc
cmp
int
stos
movs
popa
push
cmp
data16
xchg
cmc
jmp
fcmovb
push
sub
addr16
scas
mov
jo
rcr
dec
mov
adc
pop
pop
cmp
outs
popa
stos
push
jnp
or
sar
ror
mov
outs
cmps
(bad)
cmp
mov
or
aam
adc
mov
daa
push
nop
dec
stos
vpaddd
push
ficomp
pop
xchg
jge
ins
xor
jmp
mov
add
inc
add
xchg
mov
daa
mov
sub
dec
mov
(bad)
adc
jns
cdq
fistp
pop
ss
neg
cwde
jg
push
int3
mov
fcom
ins
loop
call
popa
inc
shl
xchg
jge
rcl
jmp
cmp
outs
iret
sahf
adc
cwde
mov
fidivr
les
nop
sub
xor
sar
cld
fldenv
xchg
fadd
clc
pushf
cmp
fcmovne
xchg
mov
jge
lods
jl
push
xor
imul
pop
jmp
mov
lock
fdivr
bound
pop
xor
js
sbb
test
mov
out
out
pop
mov
and
ins
test
or
cmp
scas
mov
cs
mov
dec
iret
scas
movs
test
std
cwde
out
in
sub
in
dec
sbb
mov
minps
lea
daa
pop
ss
push
and
shr
movs
sbb
jbe
mov
xor
repnz
fcomp
sub
add
push
mov
and
push
xchg
lods
test
jp
push
cwde
neg
push
fild
and
jmp
mov
test
js
dec
(bad)
ret
dec
gs
fld
lods
dec
mov
and
xor
dec
(bad)
mov
call
cmp
call
ret
cdq
or
aam
std
sbb
xchg
jbe
(bad)
movs
dec
repz
fdivp
popa
cmp
hlt
idiv
or
mov
xor
or
leave
mov
sub
mul
sar
pop
add
popf
ja
enter
jns
fstp
sub
sub
jmp
dec
inc
cmp
in
ja
mov
out
pop
ret
enter
lahf
fs
bound
popa
sub
loopne
scas
xor
jns
adc
loop
cld
ficomp
cmc
lods
aam
repz
fbstp
daa
enter
jb
imul
into
int
mov
js
(bad)
lahf
pop
mov
add
ins
sub
std
je
inc
sbb
inc
jae
js
mov
or
jecxz
add
imul
lock
loope
jmp
mov
xchg
in
and
adc
sub
out
cmp
xchg
xor
sti
or
sub
jbe
mul
inc
inc
xchg
cdq
outs
(bad)
adc
mov
in
imul
mov
mov
mov
and
xchg
xchg
fst
mov
inc
ins
fcomp
sbb
push
pushf
sbb
cmp
xor
ret
sar
fsub
push
repz
cmps
mov
cmc
mov
lods
cmp
dec
inc
jmp
jl
lock
cmc
test
cmp
push
xor
add
adc
pop
movs
or
cmps
aad
es
push
and
and
icebp
dec
in
shr
sub
or
mov
pushf
sbb
fld
push
fs
sbb
lahf
rcl
cmp
jns
adc
xor
pushf
lock
test
cmp
neg
test
or
cld
ins
xbegin
daa
push
mov
push
rsqrtps
(bad)
mov
rcr
leave
cli
mov
xchg
(bad)
in
rcl
dec
fsub
imul
push
(bad)
repnz
pop
imul
pusha
stos
push
xor
je
jmp
mov
lds
mov
pop
or
mov
scas
adc
jge
aas
lods
mov
mov
je
mov
mov
add
pusha
jecxz
or
inc
adc
and
sti
jns
(bad)
inc
mov
es
mov
leave
sub
mov
push
leave
lods
int
arpl
push
addr16
mov
arpl
outs
bound
jmp
mov
cmp
imul
cdq
xchg
ss
push
out
shr
inc
shl
mov
shl
push
adc
js
adc
xor
frstor
mov
xor
xor
adc
jle
call
fstp
and
push
jmp
add
pop
test
xor
sar
mov
out
sub
mov
lea
jmp
bswap
dec
jmp
fs
shl
jns
jno
jae
sahf
and
add
add
mov
sub
push
je
adc
movs
mov
imul
addr16
lods
aaa
ins
arpl
pop
xchg
cmp
scas
mov
lea
sub
add
inc
cs
push
dec
frstor
pop
ret
push
pop
or
(bad)
pmulhw
call
add
jp
(bad)
rcr
jg
sbb
ret
mov
xchg
shl
xlat
mov
pop
imul
int3
pop
icebp
mov
inc
dec
or
mov
jo
ret
test
inc
into
sub
push
fldz
sub
sub
sbb
mov
scas
pop
inc
retf
pop
add
movs
add
lods
sub
cmps
sbb
xchg
scas
jge
dec
pop
inc
mov
push
jl
sbb
cmp
pop
imul
je
mov
shr
mov
jmp
adc
or
inc
add
cmp
ins
or
lea
mov
mov
ds
lods
popa
int3
adc
xchg
lock
call
jle
mov
sub
out
stos
or
dec
scas
xchg
mov
mov
mov
jle
ins
and
iret
out
aad
adc
xor
cmp
retf
ja
jmp
out
cmps
les
(bad)
sahf
inc
adc
pop
xchg
inc
or
pop
sub
mov
fstp
scas
cs
pop
add
mov
ja
push
aam
sub
mov
inc
pop
pop
inc
jo
xchg
jbe
(bad)
cs
mov
cmp
dec
mov
ds
push
shr
push
cld
mov
push
les
and
pushf
pop
add
cmp
sti
sbb
jno
cdq
loope
push
sti
sbb
aas
repnz
inc
pop
daa
dec
adc
jmp
test
test
pop
retf
pop
call
(bad)
fld
mov
ror
cmp
push
adc
xchg
xchg
pushf
icebp
sbb
mov
test
dec
cmp
shl
sub
pop
pop
xor
outs
les
jo
aas
sbb
jbe
adc
and
jg
das
sbb
shl
cmp
and
ror
mov
pop
jge
dec
fidivr
in
mul
call
or
outs
jb
sbb
shl
cmp
test
repz
stc
aaa
xchg
adc
xchg
js
or
sbb
add
cdq
add
pop
xor
and
push
outs
mov
js
jo
mov
cmps
stc
cmp
test
and
popf
and
imul
sar
shl
outs
rcl
push
lods
xlat
sbb
sbb
push
aam
pushf
shl
push
dec
add
test
push
arpl
jg
leave
test
inc
adc
jmp
cmp
jo
xchg
fwait
push
add
test
inc
call
imul
inc
fcomp
popa
clc
xor
mov
imul
inc
ret
cwde
sbb
sub
xchg
xor
push
jbe
sub
stos
jge
or
shl
push
imul
dec
pop
mov
jp
ins
add
jae
ret
fstp
std
add
cmp
les
in
inc
fst
rcl
inc
and
jmp
je
push
mov
retf
test
ins
xchg
fmul
jo
fs
js
inc
push
out
js
movs
adc
mov
and
jns
xchg
mov
jb
pop
inc
or
lahf
push
(bad)
sbb
retf
(bad)
push
mov
ins
test
or
xor
xchg
and
sbb
pop
xchg
mov
ss
jmp
push
loope
mov
ret
imul
repnz
int
add
pop
xlat
or
sub
pop
daa
(bad)
xchg
xor
and
cwde
and
dec
sub
nop
cmp
xor
bswap
add
lea
dec
cmp
ds
lahf
and
pusha
aam
xor
adc
xchg
test
jne
ret
jbe
add
sbb
ja
mov
enter
sbb
mov
push
aad
int3
jae
cwde
pop
mov
xchg
pushf
aad
add
jbe
sbb
out
add
pop
jp
jl
mov
fidiv
push
push
dec
sub
ror
mov
bound
pop
retf
jb
(bad)
mov
or
(bad)
mov
jl
adc
push
fld
cdq
arpl
mov
out
pusha
jbe
out
push
sar
push
mov
ins
mov
pop
cli
scas
pop
adc
rcl
push
fwait
xor
shl
pusha
rcl
ins
test
mov
mov
mov
ins
mul
or
push
ja
popf
sub
sbb
xor
mov
push
and
scas
mov
neg
xor
retf
sahf
mov
call
adc
jne
mov
iret
cli
mov
sbb
rcr
mov
imul
imul
mov
repnz
fld
fdivr
mov
sahf
(bad)
call
mov
sub
js
add
arpl
or
int3
adc
popf
add
sub
movs
adc
lea
and
mov
pop
or
cmp
loope
out
test
ja
fistp
ss
mov
aas
adc
dec
and
sar
xor
(bad)
ins
pop
loop
data16
fist
cli
push
pop
cwde
inc
mov
aad
and
in
add
lea
push
sbb
push
popa
cmps
push
pop
sub
fld
push
lea
aaa
mov
push
in
lock
(bad)
sbb
call
imul
(bad)
mov
cld
jecxz
das
stos
lea
mov
inc
aam
inc
std
jmp
and
test
and
dec
inc
(bad)
push
sbb
mov
or
cmps
jbe
clc
push
and
(bad)
lock
call
xor
mov
les
cmp
data16
mov
jne
mov
mov
stos
pushf
ja
ins
shr
enter
div
adc
cmc
or
add
cs
sti
scas
xor
push
sbb
cld
iret
test
inc
jge
and
pop
icebp
rcl
add
sub
or
inc
mov
in
add
jecxz
scas
clc
sub
mov
movs
xchg
or
cmp
shl
mov
pusha
jnp
jmp
mov
and
sbb
daa
arpl
in
mov
mov
jns
arpl
icebp
xchg
mov
sub
jne
leave
repz
fistp
dec
xchg
mov
sub
jecxz
lods
sbb
sbb
dec
and
(bad)
push
cmc
imul
stos
lods
and
movs
pusha
inc
sbb
dec
dec
sar
test
mov
arpl
(bad)
nop
scas
icebp
sub
sub
pop
mov
push
das
retf
push
push
leave
ds
lea
jmp
xchg
fnsave
and
scas
(bad)
mov
jmp
mov
out
pop
dec
lods
pop
jmp
inc
or
xchg
ret
cmps
daa
mov
cli
mov
adc
dec
push
pop
xchg
popa
push
repz
cld
cmp
and
push
rcr
(bad)
and
mov
test
or
dec
test
and
pusha
and
xor
jle
lds
jecxz
cmps
aad
movs
sbb
jle
jne
cmovge
xor
lahf
jb
cmp
sbb
icebp
in
xor
(bad)
fisttp
mov
xchg
xchg
mov
outs
xchg
addr16
js
imul
inc
fisubr
in
sbb
inc
fsubr
not
jecxz
mov
xchg
mov
jmp
or
(bad)
add
fcmovnb
inc
push
mov
out
stc
enter
fs
mov
dec
sahf
sti
(bad)
ins
cmp
rcl
jno
mov
jp
cmc
push
or
aam
mov
(bad)
jecxz
rcl
jb
dec
mov
icebp
fwait
pop
shr
in
stos
fldenv
push
shr
mov
mov
call
into
sub
in
push
jmp
adc
test
add
dec
jo
mul
fimul
jbe
jmp
mov
jo
pusha
iret
xlat
shl
dec
jp
clc
stos
adc
fistp
xchg
xchg
les
loopne
jb
dec
and
mov
mov
inc
jo
in
mov
int3
mov
(bad)
push
test
lock
cmp
out
inc
dec
scas
add
jp
jb
in
sti
mov
or
je
cdq
xor
out
jo
add
cmp
cli
inc
lidtd
cmp
mov
mov
sti
jp
or
outs
add
test
retf
sar
test
iret
jl
scas
jmp
call
pop
push
push
(bad)
jmp
dec
aad
repnz
pop
dec
sbb
das
imul
push
(bad)
and
inc
sbb
xor
sub
or
xchg
or
loope
push
frstor
sbb
les
cmp
test
les
mov
ror
dec
dec
cmps
pushf
jns
mov
xchg
sub
and
in
ss
mov
(bad)
xchg
add
cmp
aaa
pop
jmp
adc
xchg
jnp
xchg
sub
cmp
jmp
mov
ret
ds
jno
call
pusha
hlt
mov
inc
sub
xlat
mov
call
sbb
inc
fbld
mov
and
mov
mov
or
xor
cli
cwde
adc
in
sahf
push
xor
outs
scas
(bad)
retf
retf
test
nop
movs
sbb
cmps
sub
dec
enter
sub
push
call
dec
ror
ins
test
pop
xor
test
jbe
loopne
jge
and
sub
xchg
jne
mov
push
and
fld
out
mov
push
xchg
inc
cmps
push
cmp
push
xchg
ret
mov
pop
cdq
add
jl
lods
or
arpl
or
dec
mul
mov
das
shr
mov
inc
rcr
push
mov
or
addr16
jbe
pop
xchg
or
ficomp
jecxz
mov
mov
mov
xlat
adc
fwait
leave
push
pop
shl
das
pop
mov
cmp
stos
mov
in
movs
push
pushf
cld
mov
or
retf
icebp
retf
cmp
(bad)
jge
and
adc
arpl
(bad)
nop
push
jle
adc
(bad)
lea
pusha
cmp
sbb
sub
fimul
rol
data16
leave
sub
adc
retf
pop
fcomp
cli
and
inc
mov
mov
jmp
es
mov
xor
mov
mov
imul
jp
mov
inc
les
sbb
cli
dec
xor
or
lahf
imul
sub
jmp
mov
xor
stos
push
sub
sbb
mov
ret
jmp
loopne
repnz
jae
popa
cli
push
pop
popa
xchg
dec
add
loope
pop
dec
gs
pop
jl
bound
std
pop
push
push
test
sti
add
or
cmp
inc
inc
bound
inc
shr
dec
mov
gs
mov
out
aas
push
xor
mov
and
jl
ds
call
loope
xor
test
dec
xchg
jge
xor
inc
adc
js
xchg
mov
push
(bad)
ds
mov
push
js
fisubr
pop
push
div
mov
aad
pop
mov
jp
mov
fbld
dec
push
daa
dec
test
retf
shl
cdq
mov
inc
int3
sbb
mov
xor
js
es
xchg
mov
jle
je
xor
cmps
mov
dec
mov
cmp
out
mov
mov
xor
xchg
daa
pop
cwde
stos
add
inc
jns
call
cmps
xor
les
in
mov
je
pop
add
sbb
push
in
sbb
jmp
addr16
cmp
aas
cmps
or
xchg
test
aaa
xchg
mov
mov
loopne
rol
xchg
cwde
mov
fist
sahf
es
push
add
add
adc
add
in
cmp
pop
ins
jp
out
and
mul
mov
leave
add
sub
pop
mov
mov
dec
aas
movs
ins
outs
sbb
xchg
adc
cmps
jo
in
sbb
bound
add
dec
cmps
pop
loope
xchg
xor
xor
adc
adc
in
adc
jno
test
push
mov
inc
sbb
repnz
popa
jmp
ficom
jo
dec
jp
or
cmp
inc
in
mov
jne
cs
adc
rcl
stos
push
sbb
cs
mov
jl
mov
mov
mov
inc
inc
push
test
iret
sar
jae
loope
or
out
push
aaa
inc
test
sbb
addr16
nop
or
data16
mov
xchg
xor
sbb
shr
jb
push
fadd
sub
add
cmps
add
and
xor
pop
push
stos
call
mov
push
xor
ficomp
popa
into
test
daa
inc
push
aad
add
sub
cmp
pushf
jmp
call
mov
cmp
scas
in
js
xchg
or
mov
sub
iret
cmp
cmp
xchg
stc
ins
and
movs
dec
jns
push
les
fdivr
xchg
jae
sub
mov
and
mov
imul
dec
and
das
ins
fnsave
je
lahf
xor
in
push
push
imul
sub
xchg
or
sub
dec
push
jp
imul
push
int
inc
(bad)
mov
psubusw
mov
stos
fiadd
mov
mov
mov
mov
xor
sbb
pop
push
add
push
push
xchg
adc
repnz
imul
lds
jno
jecxz
lahf
jb
add
fdiv
fcomp
fcom
pop
push
cmp
scas
ins
lods
(bad)
popf
aas
shl
cdq
sub
leave
test
daa
adc
jle
mov
mov
jno
iret
imul
mov
fs
hlt
or
pop
lods
ins
pop
dec
cs
add
loopne
pop
adc
imul
mov
mov
cmp
jge
or
test
call
sahf
mov
push
xor
fidiv
fdiv
movs
es
retf
mov
jle
mov
cli
pop
es
or
sti
into
add
jb
sub
fild
pop
xor
ins
stc
outs
dec
and
in
jo
cs
xor
pop
mov
inc
push
popa
call
dec
mov
push
mov
jecxz
clc
push
ds
inc
jle
ret
cwde
add
mov
pop
or
sub
(bad)
xchg
stos
sub
movs
mov
jmp
in
leave
mov
lock
call
or
cmp
cmp
lea
js
nop
cwde
adc
rol
inc
and
cmps
ret
jl
nop
repnz
mov
jge
inc
xor
xchg
mov
mov
loop
mov
xor
(bad)
dec
xchg
cmc
bound
push
or
rol
sub
fisttp
sub
retf
dec
rcl
jmp
das
imul
inc
jns
mov
and
xchg
and
pushf
cmps
inc
push
dec
or
mov
pop
dec
inc
adc
cdq
aas
frstor
mov
in
adc
and
call
(bad)
fst
clc
loopne
out
pushf
or
clc
sub
sar
pop
xlat
mov
test
ins
jl
mov
inc
loop
pop
cld
mov
xlat
out
mov
repnz
mov
mov
mov
mov
out
ds
sub
xchg
fwait
sub
test
xor
push
ja
pop
dec
or
dec
cs
jp
cmp
inc
mov
cmc
and
sub
sub
push
je
and
xor
xor
and
neg
push
shr
push
call
mov
lods
lods
sub
mov
xor
xchg
fnstsw
or
aas
or
in
jnp
pushf
sub
cmp
jge
pop
int
rdmsr
inc
jno
hlt
fisttp
je
pop
loop
fnclex
pop
ds
xor
mov
iret
xor
push
test
jg
in
fadd
cmp
lahf
add
arpl
mov
fld
cmp
push
xor
and
dec
out
out
mov
out
popa
adc
sbb
or
xor
sahf
xchg
sub
movs
ss
xchg
inc
jnp
push
jle
jg
cmps
div
pop
fiadd
ret
mov
xchg
sub
fwait
jo
outs
dec
xchg
pusha
jns
and
and
xchg
loop
or
test
push
and
push
jnp
xchg
sub
sub
lods
jo
repz
cs
dec
sbb
push
ja
ret
sbb
rcl
jmp
adc
inc
test
movs
dec
sbb
jmp
(bad)
jmp
push
cdq
ins
test
lods
dec
enter
out
dec
mov
push
push
cli
inc
les
and
call
pop
xor
or
stos
retf
pushf
into
cld
rcl
dec
and
rol
sbb
dec
ins
loopne
pop
cmp
cwde
ss
outs
push
push
int3
sbb
ret
or
inc
jl
cwde
and
xlat
mov
sbb
mul
jnp
xor
into
push
xchg
inc
jo
push
ja
push
sub
xchg
add
in
icebp
ja
xor
rcr
push
int3
cmps
pop
imul
das
dec
into
sti
gs
in
sub
sbb
mov
mov
es
inc
and
shl
repnz
int
ret
in
out
sar
imul
jns
dec
lahf
dec
aam
scas
cmc
push
fbld
scas
cld
ja
jmp
mov
mov
ins
test
jo
jmp
mov
vmovsldup
cmps
mov
xchg
mov
or
cmps
mov
cmps
mov
pop
in
fist
mov
xor
call
test
pop
add
jae
in
ja
push
pop
sub
ja
sbb
or
nop
sbb
call
pop
retf
pop
cdq
cmp
stos
les
fs
mov
push
or
into
lea
or
mov
mov
add
shl
rcr
xchg
ss
mov
imul
pop
mov
mov
xor
xor
lods
pop
rol
fidiv
adc
sbb
mov
loopne
sub
push
jb
test
daa
or
jne
gs
cwde
daa
pop
xchg
mov
psubb
enter
jne
sub
xor
fisttp
ret
xchg
mov
mov
jle
call
leave
pop
cmps
(bad)
aam
xlat
inc
add
jbe
std
in
mov
and
imul
pushf
push
aaa
call
push
jle
aam
adc
inc
dec
lea
repnz
les
or
mov
dec
mov
xor
or
test
pop
jno
aaa
mov
mov
jg
pop
push
sar
xor
lea
push
pop
xchg
add
fcmovbe
ss
dec
pop
je
rol
enter
xor
xchg
inc
in
movs
call
mov
mov
repz
push
out
push
bound
hlt
pop
pop
cli
mov
mov
ror
enter
jo
jbe
mov
mov
jne
push
stos
mov
out
pop
jecxz
xor
fadd
mov
xor
mov
and
loop
pop
push
cmps
inc
jg
hlt
sbb
push
cmp
in
imul
and
shl
push
ss
cmp
ret
in
inc
or
xchg
cmps
sahf
jmp
das
or
loopne
repnz
jle
jle
test
fadd
jmp
inc
adc
(bad)
sub
or
jle
mov
sysenter
in
gs
mov
mov
in
mov
pop
fdivr
arpl
ror
and
test
fild
(bad)
lods
sar
arpl
lds
imul
push
jne
sbb
add
das
cmp
cmp
mov
imul
cli
lea
stos
enter
sbb
(bad)
addr16
pop
adc
retf
cmc
movs
ja
stos
aas
in
inc
js
ss
xchg
fnsave
loop
add
adc
and
fisttp
ins
jno
outs
inc
test
inc
mov
dec
jnp
sbb
xchg
test
cmps
stc
or
imul
jnp
sub
mov
fcmovb
inc
test
jo
sub
adc
push
jmp
clc
xchg
push
cld
xor
pop
xchg
test
jmp
xchg
mov
mov
enter
retf
xor
dec
inc
(bad)
outs
xor
cmp
mov
in
aaa
popf
stos
fld
cmps
or
test
mov
add
rep
mov
retf
aaa
mov
xor
outs
rcr
ret
imul
call
pop
and
ret
pop
push
jge
enter
sub
lock
mov
xor
call
push
lods
(bad)
(bad)
ins
or
xchg
out
add
lahf
retf
jmp
pop
fist
mov
mov
ss
sub
mov
sbb
lock
ss
jle
hlt
adc
jbe
sub
sti
add
scas
shl
xchg
je
ja
stos
test
pop
in
mov
popa
lds
mov
dec
dec
cmp
xchg
cmp
mov
hlt
js
jno
mov
in
inc
cmp
mov
pusha
xor
ins
movzx
xor
mov
xchg
je
jmp
sub
jp
repnz
ja
pop
or
pop
fistp
mov
cwde
fwait
mov
iret
pop
sub
retf
jmp
add
jge
fnstsw
fistp
ja
repz
xchg
push
xchg
les
cmp
es
xor
and
mov
fcom
mov
cmp
mov
sub
cmp
fwait
add
inc
sbb
(bad)
into
jae
stos
sbb
stc
icebp
push
mov
pop
xchg
adc
or
push
cmc
sahf
scas
sub
inc
ins
sahf
lds
xor
xor
jno
xlat
push
lods
(bad)
out
push
sti
das
stos
imul
jnp
test
dec
rcl
sub
pusha
stos
push
ins
dec
fwait
bound
inc
shl
outs
mov
adc
pop
mov
outs
shl
inc
out
adc
inc
jp
ret
push
sub
cmp
in
ret
movs
enter
jbe
dec
(bad)
call
xchg
cmp
lock
dec
xchg
push
or
and
mov
sub
adc
aam
dec
jp
mov
mov
js
push
in
cmp
movs
sub
stos
ja
push
push
jl
cmc
push
xchg
(bad)
std
loopne
mov
mov
mov
scas
mov
sub
test
push
xlat
push
jbe
arpl
mov
adc
inc
lea
adc
daa
dec
stos
mov
xchg
sub
add
call
into
pop
dec
jno
rcl
xor
add
push
jnp
cmp
mov
push
stc
jno
or
xchg
mov
loop
aas
mov
aaa
push
in
adc
fldenv
mov
lahf
ss
pop
and
fnstcw
adc
call
loopne
sub
jecxz
ss
cwde
xlat
inc
sbb
cmps
mov
imul
jg
or
jle
(bad)
pop
sub
outs
sbb
test
lds
cwde
lods
lock
xchg
in
xlat
out
cs
test
aam
out
inc
outs
loop
inc
mov
mov
push
mov
push
dec
out
mov
push
xor
cld
repz
push
dec
mov
aaa
jmp
sbb
ins
or
(bad)
add
mov
adc
sub
xor
test
adc
sbb
fstp
ins
jo
adc
cmp
in
stos
in
ror
dec
data16
test
test
cs
ret
sub
pop
cmp
fwait
jne
dec
mov
pop
sub
add
pop
jno
lods
and
mov
jge
push
(bad)
mov
xchg
(bad)
push
dec
fcmovne
imul
sub
push
out
jmp
inc
xchg
and
xor
and
sbb
sahf
(bad)
imul
call
rol
js
xor
mov
jecxz
out
or
push
lods
sbb
pop
mov
push
pop
jecxz
ret
in
shl
mov
push
mov
adc
fmul
push
jbe
mov
ins
nop
ds
neg
add
mov
scas
jns
lds
pop
outs
nop
ja
sbb
loopne
outs
jne
push
je
(bad)
frstor
popa
pminub
ret
je
pop
shl
sub
dec
shl
inc
mov
ja
dec
sbb
loopne
lea
div
xchg
xor
sti
xchg
lahf
cwde
and
sbb
push
push
add
add
fmulp
cmp
outs
mov
jb
lods
movs
mov
das
sub
mov
out
sbb
jmp
mov
xchg
adc
not
cmp
add
cwde
mov
jl
mov
aam
push
rol
mov
xlat
gs
inc
test
adc
aas
ret
jno
and
dec
fst
cmc
xor
pop
fsubr
inc
inc
ss
adc
loopne
fisttp
stc
test
in
mov
scas
add
aam
test
pop
add
mov
push
out
mov
sub
jle
dec
jo
in
xor
lods
ret
fld
call
and
add
std
xchg
push
ror
dec
xchg
and
sub
scas
(bad)
js
repz
jg
scas
cmp
sub
jg
test
mov
ins
xor
jns
push
mov
ja
lahf
neg
inc
test
outs
xchg
sub
mov
fisttp
pop
cmp
ins
in
movs
retf
xchg
es
(bad)
scas
push
lock
into
jecxz
sbb
(bad)
dec
iret
test
mov
imul
imul
pop
aas
(bad)
mov
push
pop
mov
mov
test
push
push
and
cmovp
aad
dec
pop
mov
test
nop
je
push
out
fsub
fsubp
inc
loop
leave
outs
sub
test
inc
cmp
add
xchg
or
pop
int
mov
xor
ret
fmul
inc
mov
jb
fistp
inc
inc
push
outs
cmp
mov
pop
dec
aad
ja
fwait
cwde
cwde
test
mov
enter
cmp
xor
call
test
sbb
outs
std
outs
push
scas
xor
pop
aam
(bad)
pop
adc
movs
js
shl
mov
mov
mov
stos
ja
cdq
xlat
mov
nop
cmp
bound
repz
add
rcr
jno
mov
cmp
(bad)
idiv
adc
and
jg
mov
jecxz
jbe
pusha
or
movs
mov
add
mov
clc
les
push
ins
xchg
aam
xor
clc
out
(bad)
sar
mov
fdivr
hlt
int3
jmp
sub
fdivr
cmc
lahf
mov
mov
xor
outs
xchg
ja
jne
dec
fcmovb
and
arpl
mov
adc
push
xchg
jle
push
and
push
and
ret
jecxz
outs
pop
cdq
in
push
pop
cld
jns
adc
jne
and
mov
call
cdq
in
int
mov
je
mov
lds
sub
les
popf
cdq
rcr
cmp
mov
mov
adc
test
fucomp
inc
repnz
jp
cmps
adc
pop
mov
jge
cld
iret
push
fwait
xchg
stos
inc
loope
cmps
fcomp
(bad)
not
or
jp
ror
add
call
xchg
adc
jl
push
mov
int3
js
jge
cmp
rol
jecxz
sbb
and
mov
add
jmp
cmp
push
jl
aas
int
mov
sub
inc
fidivr
push
mov
and
push
lahf
test
fmul
mov
dec
out
cmp
adc
xchg
imul
cmp
cli
sti
push
sub
sar
xor
sub
add
jp
int3
adc
pop
dec
hlt
jge
pushf
sar
nop
mov
mov
jl
or
mov
dec
ret
out
mov
aam
jle
xlat
xlat
lock
fisubr
pop
mov
xor
xchg
rcr
pop
inc
mov
inc
mov
retf
shl
cmp
fidivr
fcmovbe
sbb
call
cmp
and
adc
(bad)
scas
or
xchg
ds
add
fisubr
mov
retf
rcl
retf
retf
fs
ret
and
into
xchg
mov
cmp
inc
cmp
sbb
test
inc
jns
adc
into
ja
inc
xor
mov
fcmovnb
push
push
sar
aam
jmp
rcl
addr16
(bad)
popf
rcr
(bad)
aad
push
pop
cmp
jge
xchg
lods
(bad)
ror
mov
lock
arpl
cmps
pop
sbb
mov
xor
fadd
mov
or
loopne
mov
push
repnz
fs
xor
or
pop
sahf
inc
daa
pop
sbb
std
inc
mov
dec
mov
aam
in
je
aas
mov
adc
ds
or
lods
cmp
mov
and
inc
out
pop
mov
stos
ret
mov
fild
mov
lods
fadd
or
xchg
pop
and
mov
adc
rol
lods
(bad)
icebp
imul
jns
add
mov
xor
adc
pop
inc
mov
iret
clc
lahf
shr
or
dec
pop
ds
mov
cmp
sbb
or
dec
scas
test
retf
push
dec
imul
xor
gs
cmp
loope
xchg
sub
sbb
(bad)
dec
ss
cli
enter
mov
movs
mov
pop
jecxz
scas
push
sbb
outs
jbe
cdq
popf
test
scas
add
or
and
mov
jae
mov
xchg
mov
fstp
sbb
and
bound
push
mov
icebp
sbb
stc
fsubr
mov
adc
cld
cmp
mov
inc
inc
cmp
mov
push
dec
in
test
push
int3
mov
xor
and
xor
mov
push
jmp
mov
mov
(bad)
push
retf
mov
js
xchg
retf
mov
push
add
sub
ret
add
bound
jns
dec
xchg
mov
arpl
xchg
inc
push
mov
xchg
jmp
adc
(bad)
cmp
inc
scas
mov
(bad)
and
cmps
jg
xor
cmp
pushf
dec
(bad)
shl
ja
pushf
push
not
iret
cwde
push
cmp
or
pusha
dec
daa
cdq
cmp
push
jns
mov
fst
jp
out
shr
(bad)
imul
rcr
iret
mov
jmp
mov
call
mov
fstp
jge
ja
pop
dec
test
fst
outs
cmp
or
sub
dec
or
inc
in
(bad)
pop
inc
les
sub
jp
int3
xchg
lods
mov
lods
test
mov
push
cs
in
test
mov
push
(bad)
int
pop
xchg
jl
xchg
das
scas
sbb
loopne
pop
adc
adc
jge
test
cmc
dec
jno
push
je
xchg
add
ins
dec
loop
xchg
fist
push
mov
jmp
inc
mov
or
mov
fmul
int3
iret
mul
dec
int
in
sbb
xlat
push
mov
mov
ret
cmp
cmp
cli
mov
shr
shr
inc
in
fs
cmps
jne
xlat
test
ins
test
ss
in
bound
xor
jg
bound
ret
mov
in
mov
jno
stos
out
mov
cmps
scas
(bad)
shl
push
(bad)
and
(bad)
cld
test
push
pop
mov
imul
mov
push
loop
ja
inc
push
std
xchg
sti
leave
int3
pop
jno
add
pop
cmc
sbb
addps
push
(bad)
pop
ja
movs
xchg
inc
cmp
out
jl
sbb
sar
xchg
inc
les
inc
lods
mov
mov
in
push
xchg
aaa
not
xchg
cmps
xlat
cmps
dec
sbb
retf
and
sbb
or
stc
pop
or
lods
ds
sub
inc
adc
inc
arpl
adc
mov
sub
mov
(bad)
dec
test
in
jno
mov
xlat
popa
add
sar
loope
mov
cmp
jo
ror
stc
pop
sbb
dec
sub
push
addr16
popa
fidiv
xor
mov
adc
hlt
je
inc
lock
mov
aad
xor
cmp
(bad)
or
or
(bad)
cmc
and
sub
inc
mov
pop
dec
and
or
jle
imul
sub
lods
cld
test
mov
xor
xor
sti
cs
mov
mov
push
cmp
sbb
pop
and
movs
jae
sbb
xchg
sbb
dec
mov
mov
mov
jbe
mov
jns
(bad)
cmps
push
fcom
jle
mov
adc
scas
add
or
sub
test
add
mov
fnstsw
sahf
stos
jns
mov
call
push
(bad)
ins
pusha
mov
sbb
divps
(bad)
retf
call
ss
or
jg
bound
inc
inc
stos
mov
jmp
call
inc
jmp
mov
cmps
xchg
cmc
pop
stos
mov
cld
neg
out
in
std
test
clc
rcl
xor
fist
call
pusha
adc
jno
in
cwde
cmp
outs
add
xor
cmp
mov
call
cli
dec
es
jae
stos
mov
(bad)
sahf
cmp
or
sub
push
xor
ss
mov
pop
rcr
mov
xor
scas
add
push
fbld
popa
push
and
xor
idiv
icebp
jmp
sbb
scas
and
mov
movs
add
push
movs
outs
bound
add
jno
ins
and
and
ds
xadd
ret
xchg
ss
mov
scas
or
sbb
cmc
leave
cld
push
pop
mov
enter
mov
cmp
push
cmp
jno
push
js
mov
ja
repnz
cli
push
(bad)
pop
add
jle
iret
push
jns
pop
hlt
push
cld
jmp
(bad)
pop
xchg
mov
jmp
movs
xchg
div
retf
loope
jbe
lock
lods
jae
shr
dec
sahf
xor
smsw
pop
into
push
push
lahf
cmp
aad
cli
ret
sbb
sub
lods
add
cmp
les
iret
outs
jns
mov
fwait
or
and
cs
mov
jle
ret
fidivr
xor
adc
push
test
adc
sbb
push
adc
add
jnp
sar
mov
pmovmskb
scas
sar
push
jae
mov
in
das
xlat
repz
push
adc
xor
or
in
leave
inc
xchg
add
push
mov
scas
push
mov
adc
ss
(bad)
inc
cmp
div
cmc
cmp
sbb
out
test
cmp
dec
out
inc
repnz
cmps
rcr
sbb
mov
dec
inc
mov
(bad)
out
gs
pop
out
xchg
(bad)
xchg
inc
xor
ja
fcomp
pop
ret
fs
xchg
cmps
pop
aad
out
xor
stos
fldcw
mov
sub
in
repz
jnp
sbb
and
mov
retf
inc
sub
(bad)
xor
mov
test
gs
retf
mul
push
cs
jno
xlat
out
(bad)
(bad)
mov
js
mov
dec
mov
dec
(bad)
jmp
icebp
retf
aam
dec
sub
cli
add
add
mov
jb
push
add
mov
pop
nop
push
dec
shl
pop
jns
cmc
xor
ins
adc
adc
mov
not
out
inc
xor
push
or
mov
ss
mov
mov
mov
push
pop
shr
dec
test
xchg
lock
push
mov
xchg
cld
data16
mov
ins
dec
mov
outs
sub
std
movs
adc
int3
mov
push
inc
sbb
mov
or
xor
sbb
pop
loop
add
int
sti
leave
imul
cmp
cdq
or
jl
add
xchg
data16
sbb
dec
dec
jp
jo
dec
repnz
out
sub
enter
mov
adc
or
sbb
mov
imul
add
cwde
mov
nop
mov
and
mov
push
or
jne
and
lods
pop
retf
jmp
div
hlt
ret
sub
mov
ins
fisttp
add
jb
jl
lods
mov
rcl
mov
mov
pop
out
sub
jnp
(bad)
sti
test
pop
jle
in
xchg
jecxz
lea
cmps
mov
sar
fsubr
sbb
fcomp
cmp
nop
mov
nop
shl
adc
inc
dec
je
aam
in
jnp
add
rol
jp
mov
pop
imul
xchg
jg
dec
dec
pop
movs
ret
push
movs
test
mov
in
stc
and
mov
jnp
retf
arpl
adc
xor
test
xchg
jb
pop
sti
jmp
sbb
jnp
inc
xor
loop
add
xor
pop
sti
pop
inc
imul
mov
lock
sub
rcl
xlat
xchg
in
imul
inc
mov
mov
sbb
loop
js
aam
shr
xchg
cmp
rcl
gs
push
inc
stc
loop
and
in
pushw
xor
out
icebp
das
add
xchg
and
inc
mov
(bad)
dec
sbb
(bad)
icebp
and
inc
cmp
aaa
rcr
jecxz
adc
pop
dec
or
sub
cmp
ins
xor
neg
jmp
push
ja
pop
fsubr
mov
sub
ret
ds
arpl
gs
inc
cld
syscall
aam
ficomp
inc
retf
bound
pop
xchg
js
mov
add
jle
mov
add
sti
xchg
inc
in
int3
icebp
fwait
into
fsub
test
cmp
repnz
inc
dec
adc
in
pop
inc
leave
sbb
repnz
outs
mov
ins
cwde
aas
push
inc
lds
mov
sub
hlt
outs
mov
aas
sbb
mov
das
mov
jecxz
movs
push
test
push
pop
(bad)
adc
sti
lods
cs
jl
dec
test
retf
cdq
popf
sbb
jns
or
mov
dec
push
hlt
or
adc
jbe
mov
mov
into
mov
xchg
jbe
mov
pop
xchg
cmp
inc
mov
or
sub
fsubr
lods
movs
sub
out
or
aad
test
mov
add
jb
inc
(bad)
(bad)
punpckhdq
in
fistp
test
test
inc
nop
dec
or
or
cld
bound
mov
dec
lock
push
fsubr
jle
icebp
cmc
mov
sbb
sub
xor
inc
lods
popf
cmp
cmp
popa
dec
pop
call
dec
movs
ins
sub
(bad)
pop
movq
shl
xchg
cmp
data16
jmp
out
(bad)
or
jns
jae
loopne
das
ss
das
shl
int3
loopne
push
cmp
jp
dec
lods
dec
push
and
jmp
pop
fldcw
xchg
pop
fsub
mov
sub
jbe
ds
and
push
cs
popf
(bad)
hlt
cwde
aaa
lock
mov
fisubr
pop
push
ss
aaa
sbb
dec
cmp
aam
or
mov
pushf
dec
mov
imul
pop
push
lods
mov
icebp
mov
les
outs
adc
xor
ss
cdq
xor
adc
xchg
icebp
cmp
xor
sub
xchg
jo
jmp
test
mov
bound
fwait
aam
xor
mov
popa
sub
les
cli
mov
sbb
icebp
mov
cmp
mov
xchg
aad
push
xchg
in
into
push
pop
cli
xchg
or
lock
and
loopne
cmp
test
ins
repnz
xchg
repz
sbb
jbe
fwait
sub
pop
leave
jg
or
shl
mov
test
inc
fs
sti
sbb
jne
jl
jp
dec
mov
sub
enter
lds
adc
rcl
xor
shl
pop
or
rol
inc
sub
or
xchg
or
pushf
xchg
push
test
sahf
fwait
add
cld
jae
jno
cmps
and
shl
or
xchg
out
fidiv
lds
push
fstp
cs
fimul
xchg
cmc
lea
xchg
or
pop
pop
and
and
push
stc
shl
leave
sbb
cmps
pusha
(bad)
xchg
repnz
(bad)
jmp
mov
inc
and
pop
pop
int
int3
xchg
xor
cdq
mov
mov
(bad)
jnp
inc
stc
popa
fmul
bound
call
fld1
and
jbe
daa
jne
jmp
test
jmp
xor
pop
cmp
(bad)
lods
in
mov
jle
in
xor
fiadd
test
or
lods
gs
aaa
or
sar
(bad)
inc
ins
jb
mov
movs
sub
je
jae
sbb
inc
repz
adc
add
add
mov
or
lahf
shl
mov
xchg
enter
jb
xchg
ins
and
jns
and
ror
call
in
test
sub
xor
icebp
fmul
sbb
inc
cmp
sar
lock
xor
test
lods
push
ret
sbb
push
jbe
push
das
lahf
jp
cmp
imul
test
push
aam
push
fwait
jbe
xor
push
pop
in
push
cmp
mov
xchg
push
mul
test
add
enter
arpl
jae
jg
test
sbb
jae
pop
out
pop
sbb
mov
pop
mov
xchg
push
inc
scas
sahf
push
ret
push
push
mov
pop
add
push
push
in
addr16
push
ficomp
test
sub
jmp
dec
xchg
pop
in
pop
stc
inc
sub
stos
lds
dec
cli
inc
ins
pop
dec
mov
xor
cmp
inc
(bad)
leave
sbb
sub
ins
dec
test
and
rcr
(bad)
clc
add
push
ja
(bad)
jae
aaa
cmps
jle
std
inc
add
iret
push
adc
movs
pop
cmp
sbb
push
sbb
out
mov
xor
mov
pusha
and
mov
fdiv
jo
outs
out
sub
jl
xor
and
fldenv
inc
cmp
rcr
into
add
jp
add
fisub
retf
or
loope
xchg
push
je
std
inc
out
out
xchg
mov
stos
mov
addr16
push
ins
shl
push
repz
fs
dec
lods
inc
add
push
sbb
inc
mov
ins
push
adc
mov
rcl
xchg
adc
sub
dec
retf
into
dec
sub
fnstsw
fisttp
loope
sub
daa
mov
add
mov
aam
cmc
adc
mov
jp
ds
add
jmp
add
add
push
push
fistp
jno
dec
fistp
int3
(bad)
add
call
jp
and
aam
mov
sub
out
mov
jmp
inc
sbb
sub
sub
and
cmp
arpl
pop
or
data16
ja
sbb
call
rcl
rol
cmc
test
xchg
sahf
movs
je
inc
shl
mov
fnstcw
mov
lods
rcl
retf
loop
pusha
mov
jne
ins
or
adc
call
xchg
les
and
ret
pop
push
mov
xor
ds
outs
mov
xor
and
push
sub
jp
mov
test
cmp
or
stos
mov
leave
gs
js
inc
mov
aam
add
pop
jp
and
adc
or
dec
imul
or
lods
push
mov
sub
movs
imul
retf
aam
mov
ret
push
jmp
pop
cmp
cli
dec
or
xor
jne
adc
hlt
jns
pushf
call
int
clc
mov
hlt
and
inc
dec
sbb
mov
int
mov
scas
pop
pop
lds
mov
mov
adc
movs
or
in
xchg
jl
jns
sbb
sti
les
aam
sahf
and
dec
outs
pop
cmps
push
fidiv
hlt
loopne
jmp
bound
jne
jmp
jp
enter
xchg
std
jns
mov
iret
push
or
add
(bad)
inc
add
test
mov
scas
fisub
and
(bad)
cmp
out
test
cmp
fsubr
ins
xchg
push
fimul
add
or
(bad)
daa
ins
pop
test
mov
stos
and
leave
inc
fwait
and
int3
jo
mov
stc
and
jo
ret
imul
call
and
add
addr16
lods
into
mov
gs
pop
sbb
dec
push
fidivr
push
cmp
ss
push
inc
xchg
ss
popa
dec
jae
cmp
dec
push
xor
mov
gs
inc
sbb
(bad)
jmp
adc
xchg
ret
movaps
ss
psrlq
(bad)
sar
dec
test
popf
inc
sar
ins
sub
mov
push
out
or
fidiv
dec
xchg
jg
push
ret
sbb
aas
ror
pusha
inc
push
lds
loope
mov
pop
lock
xor
loope
inc
pop
pop
retf
mov
test
mov
movs
jmp
push
movs
fisub
retf
scas
ret
repnz
sbb
ja
adc
jmp
mov
outs
out
mov
ficom
sbb
outs
lds
push
lds
xchg
inc
push
push
test
pop
out
sti
jns
std
jge
cmc
dec
jb
addr16
imul
(bad)
out
jle
shl
jne
mov
imul
and
mov
push
loop
cwde
sbb
mov
push
call
sbb
fwait
xor
sar
fs
ja
addr16
test
shl
pop
movs
ds
jl
mov
in
lahf
pop
pop
call
sbb
sub
imul
enter
add
icebp
retf
imul
xlat
repz
adc
jne
cwde
mov
mov
pop
push
cmp
xor
jno
push
hlt
add
sub
lods
push
call
xor
sbb
push
push
imul
retf
adc
cwde
xor
into
jae
outs
dec
inc
js
cmp
aad
mov
pop
mov
imul
push
lds
cs
and
jae
fwait
leave
jae
jb
add
adc
adc
iret
xchg
ja
hlt
push
adc
fist
mov
daa
inc
inc
into
xor
jge
gs
mov
mov
xchg
aaa
xor
js
pop
sbb
scas
mov
out
data16
adc
mov
sub
fdiv
sbb
movs
lea
ror
lock
sub
cli
fimul
fcom
xchg
or
sub
outs
gs
lods
jecxz
(bad)
jo
xchg
push
add
xchg
data16
gs
pop
jecxz
jp
fdivr
mov
jge
mov
push
fcomp
pop
jecxz
lods
ror
jae
cmp
adc
mov
(bad)
xor
add
xchg
lods
sbb
mov
call
daa
out
imul
mov
xor
icebp
test
pop
fimul
push
inc
inc
repz
je
sbb
pop
rol
lahf
dec
(bad)
sbb
pop
mov
or
adc
(bad)
loopne
add
cdq
data16
out
sahf
sbb
mov
leave
sbb
hlt
in
call
icebp
int
cmp
mov
test
mov
int
pop
mov
(bad)
jbe
adc
and
xor
sub
adc
xor
test
leave
mov
arpl
nop
das
xchg
pop
test
jmp
add
push
sub
mov
xor
test
ror
fcomp
nop
aam
rol
fistp
lea
xchg
shl
call
jb
add
into
and
adc
push
movs
cmps
lea
xor
xor
jbe
or
pop
and
xchg
pop
(bad)
rcr
push
imul
xchg
mov
(bad)
stc
xchg
cmps
xchg
in
mov
popa
in
inc
stc
(bad)
jp
sbb
iret
or
movs
pop
mov
push
test
inc
outs
xchg
loopne
mov
aas
mov
popa
fidivr
cmp
xchg
repnz
dec
mov
dec
xor
es
sete
push
out
push
(bad)
mov
das
clc
push
pushf
hlt
jmp
cmp
dec
cdq
aad
repz
in
les
cmp
lock
movs
xor
xchg
movs
jnp
das
push
xchg
and
jecxz
sub
mov
icebp
add
jp
lods
js
cmp
fadd
stos
pop
lods
cmp
mov
(bad)
repnz
xchg
cld
sar
(bad)
pop
pop
jbe
inc
mov
xchg
inc
sub
xchg
push
mov
pop
mov
fld
arpl
fimul
lock
add
fdivr
fwait
sti
(bad)
and
es
push
pop
dec
sub
stos
iret
mov
or
adc
lock
jle
mov
mov
iret
inc
add
pop
pop
sub
mov
add
into
sub
mov
arpl
sti
(bad)
push
imul
daa
mov
cmp
std
push
and
rcl
into
or
add
pusha
retf
and
dec
je
mov
cmps
(bad)
push
fs
ror
(bad)
sti
bound
xor
or
mov
std
je
sbb
retf
jp
xor
shl
test
pop
push
out
jl
stos
sub
inc
or
pop
retf
iret
or
std
clc
jae
leave
push
retf
out
popf
pusha
mov
add
jge
sbb
mov
icebp
int
ss
fadd
xchg
push
call
loopne
mov
iret
ret
xchg
dec
call
mov
out
outs
xchg
cmc
jl
cmp
and
jnp
cmc
cmps
mov
mov
fs
sti
gs
add
sbb
push
ficom
fist
outs
inc
sti
and
xchg
pop
ror
(bad)
(bad)
xlat
std
test
or
xchg
push
fwait
lahf
sub
rcr
jno
adc
and
xchg
cmps
push
imul
dec
adc
xchg
js
mov
push
inc
mov
sahf
addr16
pop
push
add
jae
movs
bound
ret
inc
cdq
fmul
dec
pushf
iret
jecxz
es
mov
cld
mov
xor
cli
repnz
mov
loope
mov
jle
adc
aad
add
push
push
scas
or
arpl
fnstenv
dec
mov
es
dec
fwait
mov
lods
mov
sbb
aaa
xchg
lea
movs
push
je
(bad)
jmp
stos
push
pop
out
lahf
cmp
lods
ds
aad
jmp
lahf
pop
jecxz
lock
lds
jp
data16
out
jnp
inc
call
rcr
retf
pop
mov
pusha
clc
ss
or
push
(bad)
sbb
or
ret
pop
fnsave
loop
(bad)
call
add
fwait
(bad)
dec
dec
imul
push
or
movs
outs
push
cmp
(bad)
out
push
scas
outs
and
popa
jo
xor
inc
lahf
shl
mov
or
movs
inc
push
sbb
mov
pop
add
data16
daa
fcomip
mov
dec
loop
js
aad
pop
mov
(bad)
shr
push
ss
inc
adc
xchg
shl
ds
cmc
(bad)
jl
sbb
imul
test
xchg
add
scas
sahf
scas
mov
mov
aas
mov
inc
stos
and
(bad)
xor
mov
mov
sub
add
retf
pop
pusha
aas
int
xlat
rcl
out
or
push
jns
pop
(bad)
arpl
retf
fstp
cmp
mov
pushf
fdivr
and
cmp
out
xor
dec
in
fcmovbe
addr16
mov
add
int3
mov
cmps
addr16
inc
jp
fldenv
nop
mov
sub
mov
push
xchg
adc
or
adc
pop
retf
sub
xchg
xor
sub
jmp
xor
inc
add
xchg
imul
pop
mov
mov
(bad)
or
out
mov
jl
mov
shr
std
mov
pop
adc
mov
jae
and
mov
mov
xchg
inc
xchg
pop
sbb
(bad)
retf
idiv
imul
mov
fild
xor
mov
mov
mov
in
xchg
inc
ret
cmps
push
mov
jae
add
es
push
dec
lds
call
push
dec
mov
push
jae
enter
push
test
mov
(bad)
popf
push
imul
adc
push
mov
mov
pop
retf
je
pop
mov
inc
imul
ret
cld
scas
and
mov
add
sti
and
(bad)
push
js
and
test
mov
movs
xchg
or
call
sar
out
jmp
and
and
ds
mov
jnp
fsubr
mov
jns
inc
ret
imul
cdq
data16
fnstenv
sahf
jo
out
or
sbb
jecxz
gs
outs
xchg
imul
adc
xor
mov
mov
jns
test
cmp
ss
data16
aad
or
idiv
mov
xchg
push
ret
lock
jb
mov
pop
mov
clc
push
loopne
push
xlat
xchg
imul
mov
scas
push
mov
test
adc
fild
pop
sbb
add
pop
loope
sti
popf
rcl
or
ja
cmp
gs
repnz
int
daa
mov
lea
cli
fwait
add
int3
add
mov
daa
jne
and
dec
jne
nop
xchg
sub
xchg
dec
sar
inc
aas
mov
inc
sub
cmp
ror
dec
cmp
loop
and
mov
stc
xor
cdq
pop
dec
movs
std
pop
xor
int3
lea
cmp
loope
push
add
inc
std
repnz
inc
ins
pop
(bad)
mov
mov
test
scas
out
aas
stos
jecxz
sbb
sbb
jbe
out
shl
xchg
jnp
add
jns
push
push
test
loopne
and
ja
inc
sub
mov
mov
ins
stos
adc
iret
add
pushf
jge
push
push
push
cmp
mov
add
lahf
outs
mov
(bad)
sbb
push
mov
dec
jg
jb
aad
pop
lods
pop
add
iret
adc
push
mov
xchg
retf
jbe
sub
sub
retf
lock
aaa
mov
pop
cdq
cwde
(bad)
jge
leave
xchg
jnp
cmp
pop
retf
pop
aad
xor
imul
pop
inc
sbb
mov
out
push
mov
jmp
lods
push
movs
ret
xchg
fs
je
or
mov
sbb
push
dec
sub
loopne
rcl
shl
aaa
dec
fwait
(bad)
pushf
ja
sbb
cmp
test
dec
js
jnp
inc
mov
lods
fdivr
jae
mov
add
scas
out
sub
lock
pop
mov
jp
add
cmc
dec
jmp
out
shl
push
or
out
test
push
or
mov
fidiv
pop
ins
test
and
sbb
mov
(bad)
cdq
or
sub
cld
dec
mov
leave
adc
out
ins
pushf
out
js
(bad)
out
std
xchg
mov
dec
mov
js
dec
inc
je
sub
adc
mov
push
lock
and
mov
mov
stos
out
mov
dec
inc
jmp
lea
or
and
adc
or
mov
dec
loop
loop
popa
int
jle
loope
lods
data16
mov
ror
in
(bad)
shr
ja
jmp
jmp
outs
stos
jp
or
jns
in
jno
mov
xor
ret
inc
xchg
dec
sahf
jb
push
(bad)
cmp
xor
and
mov
scas
inc
push
add
or
xor
outs
add
dec
cmp
(bad)
pop
dec
in
fcomp
inc
fld
arpl
push
and
mov
mov
dec
sahf
mov
ficom
pop
pushf
in
mov
pop
xchg
ins
or
lods
fwait
setb
in
(bad)
mov
push
sbb
test
daa
and
ss
iret
inc
pop
enter
out
and
scas
jl
sub
xchg
pop
iret
dec
scas
or
fstp
adc
loop
mov
sbb
inc
cmp
fsubr
push
inc
(bad)
mov
push
je
ret
mov
scas
mov
ret
or
es
cli
out
cdq
cmp
out
int3
xor
ret
push
(bad)
inc
repz
fst
or
xchg
sbb
adc
sti
mov
adc
mov
idiv
std
in
ficomp
lea
push
xchg
mov
xor
and
loope
xor
or
sub
xor
and
xchg
mov
push
dec
xchg
das
je
dec
gs
xor
cmp
adc
add
push
retf
adc
mov
ret
cmp
cmc
mov
xchg
inc
xchg
dec
fs
mov
retf
add
fsubr
add
daa
das
mov
cmc
mov
std
add
xchg
scas
stos
stc
pop
mov
out
add
cld
mov
xchg
sub
fwait
jmp
popa
push
in
(bad)
aas
mov
bound
stc
in
jmp
faddp
cmovge
adc
inc
mov
aas
das
mov
in
scas
sar
popa
js
mov
je
and
into
adc
outs
das
sub
retf
(bad)
mov
mov
cli
mov
dec
stos
hlt
xchg
ja
or
dec
ret
pop
or
loopne
repnz
xchg
mov
sbb
inc
mov
ins
test
mov
out
mov
cmp
adc
or
js
and
je
dec
mov
fldenv
dec
out
fsubr
jecxz
add
cmp
fwait
jle
cld
mov
add
mov
pop
stc
test
clc
cld
(bad)
stc
mov
(bad)
jg
mov
push
mov
mov
dec
mov
scas
cld
lock
je
sbb
add
sbb
inc
les
data16
mov
into
add
pop
xlat
leave
movs
push
movs
(bad)
ret
sub
xor
dec
mov
test
ins
movs
pop
mov
sub
aaa
retf
add
dec
imul
mov
dec
push
fimul
test
sbb
pop
xor
sub
xor
imul
rol
ss
out
mov
sbb
outs
lds
mov
int
cmps
jne
in
scas
sub
jno
sbb
or
pop
xchg
dec
pushf
xchg
sbb
cmp
in
cmp
lods
mov
ror
scas
jmp
dec
jecxz
int3
cld
add
and
xlat
inc
pop
jno
push
fisub
mov
in
fisttp
test
push
(bad)
jmp
cs
repnz
fisubr
push
mov
cmp
jl
fwait
out
repz
fadd
and
inc
ror
sbb
xor
nop
pop
xchg
lods
jmp
loop
pop
add
mov
dec
outs
xchg
pushf
repnz
dec
ja
inc
fsubr
inc
rcr
ins
scas
out
pop
mov
fidiv
adc
xor
imul
dec
or
mov
lock
repz
xchg
ret
stos
fadd
mov
shr
cmps
xchg
xor
mov
into
retf
adc
and
inc
jne
leave
adc
mov
test
repz
cmp
retf
and
outs
mov
push
mov
mov
cmps
sar
cmp
aaa
sub
lods
jnp
iret
addr16
and
div
cmp
test
pop
inc
es
pop
push
es
xchg
pop
scas
and
add
push
je
add
scas
adc
pop
mov
hlt
fs
xchg
mov
retf
cmp
and
loopne
inc
cmp
cwde
in
pop
nop
or
lock
test
(bad)
and
popf
inc
ins
xchg
xor
ja
(bad)
push
xchg
out
mov
retf
dec
(bad)
and
push
nop
jo
std
aam
xchg
scas
adc
in
sbb
pop
jp
ror
sub
mov
mov
cmps
lea
addr16
xor
sti
push
sti
daa
mov
fs
mov
in
xor
dec
popf
movs
(bad)
leave
mov
movs
mov
mov
pop
or
retf
(bad)
push
mov
or
daa
xchg
push
lods
sbb
aas
call
stos
out
xchg
jbe
not
fs
add
popa
dec
retf
mov
inc
jae
push
daa
shl
loop
jecxz
(bad)
jecxz
ficom
mov
and
loop
fisubr
ret
neg
das
adc
cmp
and
jbe
add
rol
pop
leave
rcr
out
mov
pop
jg
sbb
xor
fsin
shr
aaa
popf
pop
out
inc
cmp
xlat
sbb
xor
call
add
test
fist
cmp
scas
mov
mov
mov
dec
jbe
push
jns
adc
mov
cli
jp
cmp
mov
mov
ja
and
sar
retf
fsubr
xor
jb
push
adc
popa
xor
stc
data16
fld
fiadd
in
inc
or
jae
pop
sbb
jp
mov
popf
outs
out
ja
sub
jbe
mov
pop
aad
fs
mov
xchg
xor
xchg
ret
test
(bad)
cmps
(bad)
mov
lock
js
loop
into
cdq
std
dec
and
and
jecxz
cmp
add
dec
push
les
or
sub
aas
or
pop
push
xchg
inc
and
mov
ins
jp
cli
jbe
mov
gs
cwde
and
xor
push
rcr
idiv
das
xchg
jae
or
or
and
cmps
outs
add
cmp
dec
js
js
repnz
push
sub
or
scas
cmps
jmp
inc
imul
dec
add
cmc
push
test
ss
out
loop
repz
call
test
sub
adc
das
adc
mov
iret
push
inc
jg
xor
scas
loop
loope
scas
pop
xchg
mov
xchg
sar
nop
rcl
sbb
jl
lods
jl
cwde
stc
pop
hlt
cmp
pop
loop
pop
sti
and
mov
inc
lods
or
pop
test
xchg
jle
pop
cmp
gs
in
sti
outs
je
inc
into
cdq
das
(bad)
jno
xchg
stc
mov
sub
mov
xor
js
dec
mov
rcl
out
dec
jnp
cs
ror
push
pop
in
(bad)
das
or
xchg
xchg
ds
pop
repnz
iret
ret
sbb
lds
loope
mov
cli
ja
cmp
mov
mov
sbb
jns
jp
test
mov
jno
mov
out
jmp
push
es
or
cmp
scas
mov
cwde
sbb
mov
out
dec
pushf
ins
xchg
xchg
push
inc
sbb
jmp
push
dec
lahf
cmp
iret
sbb
or
fwait
test
jl
ret
call
jmp
cmps
and
mov
inc
xchg
aas
stos
or
pop
adc
mov
add
sub
nop
aas
mov
jbe
dec
clc
jne
pop
xchg
pusha
jl
push
xchg
int3
inc
push
jl
sbb
mov
in
out
fmul
(bad)
cmp
shl
neg
rcr
ds
sar
sub
pop
shl
stc
and
cmps
inc
outs
sub
stc
lea
dec
(bad)
jle
push
(bad)
mov
arpl
mov
push
pushf
out
(bad)
xor
adc
fcomip
sbb
sub
push
fcomp
popa
xor
ret
sbb
adc
pop
clc
bound
adc
mov
inc
and
sub
or
movs
test
sbb
pop
(bad)
mov
ss
daa
movs
inc
lods
dec
sbb
fldenv
lock
mov
xlat
xchg
loope
jbe
lock
stc
xchg
leave
mov
push
push
pop
(bad)
cld
push
lds
xor
pop
ja
mov
xor
cld
mov
iret
jo
outs
jmp
and
test
fnstcw
xor
cmp
pop
pop
xor
xchg
sub
pushf
repnz
dec
popf
xchg
push
loop
(bad)
fiadd
push
repnz
jl
out
fmul
call
js
movs
dec
and
sbb
sub
int
clc
stos
jl
dec
int
inc
retf
ja
shl
mov
lea
push
mov
inc
sti
(bad)
sub
cmps
lds
aaa
push
les
mov
mov
adc
cmps
(bad)
(bad)
clc
push
test
rcr
test
in
jmp
lock
mov
xchg
shl
cmp
inc
popf
jmp
rcl
adc
mov
adc
add
daa
cmovne
and
movs
xor
pop
pusha
sub
and
loop
rcr
in
xchg
jbe
mul
sbb
or
and
test
jne
pushf
in
sti
inc
cmp
mov
add
adc
std
std
jecxz
scas
jno
setl
sar
stos
pop
jmp
adc
inc
ins
jno
in
(bad)
fst
push
xchg
or
dec
jl
stos
xchg
bnd
cwde
mov
std
push
lock
ds
in
cmps
xchg
jl
and
cmp
sbb
clc
add
dec
add
sub
mov
adc
movs
adc
icebp
and
and
or
mov
lahf
push
and
cmc
lahf
mov
lahf
shl
lods
mov
iret
xor
or
cmc
ror
pop
cmp
sbb
cmp
dec
fdivp
ins
add
sub
dec
jne
imul
push
cmps
mov
inc
fwait
test
int3
and
push
ror
scas
xchg
(bad)
sbb
lea
pusha
adc
lods
mov
call
or
sub
pusha
push
dec
dec
push
mov
xchg
or
xchg
outs
fcmovu
repz
dec
(bad)
inc
pop
stc
and
adc
daa
sub
lock
neg
inc
sar
push
sbb
rol
jnp
into
xchg
(bad)
jae
mov
test
mov
push
sub
les
jae
mov
imul
jl
and
aaa
(bad)
adc
mov
pop
hlt
jbe
push
or
in
enter
sub
inc
daa
enter
loope
sar
fnstsw
or
stc
(bad)
out
test
sbb
pop
xor
(bad)
mov
bound
jle
cmps
scas
and
sbb
push
cmps
lea
push
jo
fs
add
jb
pop
lods
scas
and
push
ror
stos
clc
push
bound
adc
xor
sti
pop
jne
jmp
or
push
xor
ss
or
out
adc
mov
push
jb
sub
push
mov
xchg
jo
jmp
and
sub
dec
sar
pop
popa
cmp
pusha
jb
ins
adc
adc
push
mov
js
int3
xor
repz
add
add
or
fcomp
mov
inc
out
or
add
cs
lods
add
cmp
nop
sub
push
icebp
lods
mov
and
jno
icebp
sbb
shr
mov
pusha
pop
shl
out
add
cdq
push
cmc
dec
push
scas
cli
and
jne
push
pop
xor
loopne
mov
mov
pop
js
hlt
adc
mov
leave
cwde
xchg
int3
xchg
xchg
pop
and
dec
sub
and
mov
xchg
aad
mov
mov
nop
mov
in
add
mov
inc
mov
xor
cmp
bound
scas
mov
jge
bound
mov
sub
jmp
fidivr
jecxz
push
xchg
or
mov
jmp
sub
xor
pop
xor
sub
sbb
mov
sbb
jb
movs
arpl
movs
xor
xor
mov
dec
dec
call
and
ret
push
scas
pop
movs
push
bnd
pop
outs
cmp
scas
add
fiadd
inc
adc
fnstcw
fisub
pop
xor
pop
xchg
arpl
dec
adc
jmp
mov
retf
or
test
rcr
stc
jns
das
enter
ret
sub
inc
sbb
or
sbb
adc
loopne
sbb
imul
loop
adc
fwait
ret
ss
das
sub
ret
call
push
cmps
jo
or
xchg
adc
xor
stc
hlt
int3
sbb
jmp
lods
inc
inc
adc
inc
addr16
add
in
jmp
scas
test
dec
xchg
shr
ficom
push
je
int3
add
mov
lods
cmp
lea
or
push
xchg
adc
pop
shr
xor
xchg
dec
mov
adc
push
cmp
inc
sub
fsubr
inc
xor
fsubr
inc
xchg
gs
(bad)
push
pop
into
sub
xor
inc
push
(bad)
mov
out
test
xor
dec
xchg
outs
cdq
mov
ja
sahf
ja
and
and
and
or
jo
mov
fdivr
pop
push
xor
pop
leave
int3
mov
xor
jmp
std
mov
add
clc
hlt
jl
adc
imul
push
(bad)
mov
in
jge
cmc
xchg
sub
sub
lea
mov
cli
(bad)
xor
mov
hlt
mov
cmps
mov
fdivrp
movs
jb
adc
mov
lahf
ss
loope
gs
push
test
cdq
stos
rcl
retf
mov
mov
mov
xor
repz
cdq
pushf
mov
outs
sahf
dec
cmp
cwde
enter
mov
cdq
arpl
pop
xchg
pop
mov
es
loope
mov
jmp
xchg
sbb
pop
ds
jmp
or
push
scas
dec
(bad)
(bad)
push
add
ror
pop
jmp
nop
cmps
aam
mov
or
stc
shl
cmp
cmp
sbb
pcmpgtb
fwait
mov
xor
inc
sub
retf
std
fnop
out
jb
js
mov
mov
push
les
cmp
add
pop
jae
scas
push
dec
nop
xchg
repnz
pop
retf
jecxz
hlt
add
sub
ds
mov
inc
add
xchg
inc
(bad)
scas
cmc
xchg
mov
jb
idiv
arpl
int
nop
push
test
dec
out
pop
pop
test
mov
sti
jno
mov
xor
ja
movs
daa
adc
movs
sar
nop
and
fcomp
jp
xor
or
xor
das
(bad)
movs
sub
out
imul
fsubr
js
dec
push
sti
jbe
pusha
push
xchg
cli
and
push
fmul
sub
jg
das
mov
lods
in
dec
pop
(bad)
cmps
or
mov
das
inc
sbb
add
rcl
mov
fcom
movs
hlt
inc
or
ds
mov
dec
lds
shr
xor
cld
pop
sbb
mul
fsub
ja
lds
add
popf
push
dec
or
lahf
lahf
mov
adc
into
jno
cwde
dec
cdq
stc
gs
(bad)
pop
nop
outs
adc
push
pusha
retf
push
lea
xor
fdivr
sbb
sub
adc
sbb
data16
dec
not
imul
(bad)
stos
mov
jg
ror
cmp
loop
je
cwde
mov
iret
mov
or
scas
scas
stos
xor
call
xor
pop
fstp
lds
hlt
js
cmp
add
ret
jg
xchg
popf
push
ins
aam
jmp
add
mov
movs
(bad)
mov
das
outs
ins
sbb
lahf
or
das
jg
retf
xor
push
adc
retf
xor
fcmovb
mov
jo
hlt
clc
and
fcomp
xchg
enter
popf
cdq
pop
pop
ss
ret
add
lods
iret
in
adc
dec
popa
push
sbb
sbb
not
dec
mov
xor
push
jae
nop
adc
sbb
dec
lds
inc
sahf
jle
sub
ja
xchg
movs
cmp
iret
mov
into
cmc
test
pop
mov
xchg
scas
hlt
jmp
mov
jl
movs
loop
push
bound
sbb
mov
(bad)
jmp
inc
aam
push
inc
mov
in
mov
pop
push
push
and
sar
popa
test
scas
mov
xor
rol
div
and
stos
sub
inc
mov
or
es
rol
movs
fs
jp
dec
sbb
add
or
fadd
push
and
or
pop
push
popf
sub
nop
mov
sbb
push
pop
mov
int
cmps
mov
aas
(bad)
and
inc
mov
adc
test
retf
sub
rol
shl
xchg
arpl
dec
cmp
cmp
push
and
jge
(bad)
ins
jecxz
jmp
outs
xchg
pop
jae
jne
xor
and
int
dec
shl
xorps
rol
pop
outs
mov
movs
(bad)
pop
xchg
fimul
xchg
inc
push
pop
fld
adc
sub
dec
jne
or
push
mov
cmp
xchg
scas
dec
imul
stos
or
and
sbb
inc
enter
(bad)
or
jns
(bad)
mov
dec
push
jns
jb
(bad)
jbe
cld
shl
aaa
xchg
fdiv
mov
stos
dec
xchg
mov
repz
xor
jmp
sbb
dec
(bad)
rcr
aam
mov
rcl
pop
or
dec
cmp
xchg
je
push
lock
mov
test
and
ret
add
retf
addr16
push
int3
xlat
mov
enter
dec
adc
cld
mov
js
ins
fwait
jg
dec
xlat
mov
pop
clc
call
ret
repnz
call
ins
add
int
push
mov
je
in
sub
lock
jmp
loop
fsub
push
retf
add
popa
sub
imul
xchg
inc
xor
stos
and
or
ret
sbb
dec
(bad)
and
jno
ins
jne
mov
std
mov
mov
addr16
inc
(bad)
fst
aad
jmp
adc
pop
aad
out
imul
xchg
jge
out
mov
cmp
clc
mov
bound
and
cmc
jno
xchg
lahf
jle
aaa
and
les
lea
mov
call
push
jo
pop
fdivr
pop
push
inc
hlt
lods
sbb
inc
fldcw
sti
mov
mov
fnsave
and
inc
push
jns
test
mov
int
push
mov
cmp
inc
lock
cmp
xor
jp
or
and
mov
ret
ins
(bad)
cmp
stos
pushf
xchg
bound
xchg
or
mov
or
sbb
dec
les
ret
sbb
pop
(bad)
mov
and
fild
jecxz
enter
or
cmp
je
paddd
dec
hlt
jmp
test
inc
mov
dec
or
cmp
inc
mov
push
mov
adc
mov
addr16
je
mov
or
and
pop
push
add
add
xchg
push
add
dec
js
loope
jle
push
jg
in
xor
jmp
inc
ins
sub
jo
jne
push
mov
aaa
aam
loop
ins
or
fist
dec
nop
ins
ficom
pop
pushf
es
mov
mov
and
(bad)
jnp
inc
jmp
in
ss
pop
push
jbe
jmp
lea
and
jnp
(bad)
js
or
mov
push
mov
pop
xchg
push
(bad)
cli
mov
jge
jbe
out
call
push
gs
dec
mov
scas
gs
pop
push
ins
cmp
mov
jge
adc
scas
jl
inc
xchg
shl
pusha
mov
or
out
adc
in
mov
imul
push
dec
test
xchg
pusha
add
xchg
adc
movs
add
mov
js
shr
xor
push
cmp
fwait
or
mov
xchg
or
lock
dec
push
retf
out
(bad)
repz
adc
xor
or
cmps
xchg
inc
imul
push
cs
mov
xchg
mov
div
xchg
jb
outs
aaa
adc
inc
cmp
test
dec
or
arpl
ins
adc
add
push
push
test
cmp
or
mov
pusha
std
pop
mov
in
cmp
pop
inc
mov
jno
add
dec
push
adc
out
mov
push
aad
test
stos
imul
stc
scas
jg
cmp
mov
jge
repz
js
lock
xchg
sar
mov
dec
push
sub
addr16
(bad)
retf
add
and
dec
mov
js
mov
aad
ret
test
pop
repz
sub
jp
inc
inc
mov
mov
pop
mov
fs
aam
(bad)
fwait
hlt
call
out
jle
inc
shl
dec
mov
xchg
xor
mov
rep
inc
pop
jmp
addr16
pop
not
and
cmp
out
test
mov
jo
ja
mul
jl
cdq
ins
jmp
push
aam
xor
xchg
lods
call
xchg
xchg
mov
push
(bad)
js
lock
xchg
call
xchg
test
inc
push
mov
xchg
mov
data16
out
push
add
popa
jl
xor
into
pop
sbb
outs
or
mov
add
sub
adc
sub
mov
inc
pop
mov
xor
cmp
lahf
outs
sub
(bad)
or
push
cwde
fs
cmp
jle
call
push
les
mov
ret
fwait
mov
scas
push
mov
(bad)
cmc
xlat
and
jl
retf
call
add
or
pop
leave
je
dec
jae
std
inc
mov
cmp
and
cmps
add
jno
xor
jnp
dec
adc
jge
nop
xchg
jge
push
gs
ficom
push
call
aad
aaa
movs
jae
fcomp
mov
icebp
fwait
pop
jecxz
repnz
les
sub
fbld
(bad)
push
dec
adc
mov
dec
aam
add
mov
xor
sub
cmp
or
cmp
push
mov
inc
dec
fwait
das
mov
add
lods
mov
cmp
sub
jmp
ficomp
out
fisttp
imul
or
mov
ficomp
inc
mov
sahf
mov
addr16
scas
xor
mov
or
movs
xor
loopne
pusha
mov
movs
sub
call
sar
scas
mov
mov
mov
push
or
not
mov
aas
aam
lahf
addr16
ror
push
hlt
pop
mov
pop
or
ror
bnd
dec
xchg
leave
jmp
pop
push
xchg
inc
ins
call
pop
call
xchg
lods
enter
sbb
shl
icebp
and
sbb
sti
add
adc
aaa
sub
pop
std
and
jp
mov
(bad)
cmps
xchg
or
cli
or
xor
mov
out
ret
xor
repnz
pop
test
cld
mov
iret
pop
fwait
ja
mov
lock
shl
movs
adc
inc
or
aad
inc
ds
mov
arpl
mov
mov
and
jge
adc
pop
test
adc
mov
mov
sub
add
dec
add
repz
sub
cdq
push
in
pop
(bad)
out
dec
ins
retf
lahf
ins
pop
and
out
iret
test
xor
pop
and
mov
loop
inc
(bad)
xor
daa
jb
imul
out
xor
gs
loopne
cli
and
and
inc
inc
mov
std
ret
push
arpl
add
jbe
xor
lock
into
sahf
or
daa
pop
add
pop
cmp
inc
cmp
shl
inc
fmul
lods
clc
mov
pop
ds
or
cmp
fwait
in
int
jbe
pop
or
pop
jo
shl
mov
fcom
cs
push
add
xchg
mov
jmp
mov
jle
mov
ins
popa
xor
call
push
adc
stc
fldpi
daa
mov
push
inc
and
call
xor
xor
cmps
push
in
jl
push
ds
mov
cmp
or
outs
das
mov
pop
mov
add
xchg
pop
dec
jecxz
jns
sbb
mov
pop
push
mov
xchg
pop
jmp
and
(bad)
push
mov
test
cmps
mov
mov
sbb
inc
and
inc
jmp
in
add
ror
mov
scas
mov
add
xor
int3
outs
or
retf
jmp
dec
sub
mov
mov
shl
and
loop
mov
dec
sbb
retf
ret
or
adc
pop
push
test
jb
cld
pop
div
push
movs
or
inc
in
pop
push
adc
clc
or
mov
dec
sar
ret
and
dec
adc
aas
jl
imul
push
xchg
xchg
mov
ds
and
(bad)
jp
jge
sar
inc
push
jbe
outs
nop
xchg
ss
mov
xchg
iret
dec
fsub
outs
xchg
sbb
mov
jbe
popa
cdq
int
ficom
cld
jb
inc
sar
hlt
call
cmp
xor
add
loope
jbe
pop
loop
or
pop
or
mov
xor
jge
sbb
(bad)
sbb
sub
mov
sub
mov
mov
cmp
xor
mov
ins
mov
cmps
ins
dec
dec
addr16
and
and
or
pop
inc
pop
mov
into
inc
std
stos
push
jmp
stc
retf
push
out
lds
xchg
and
popf
or
sbb
(bad)
mov
push
ror
hlt
out
test
inc
or
or
cdq
ja
xchg
mov
mov
stc
adc
lea
pop
pop
in
imul
sbb
rol
fld
push
div
xor
in
sbb
addr16
mov
xchg
jo
movs
push
idiv
mov
dec
push
cdq
retf
cmp
call
js
pop
xchg
jmp
jne
retf
cld
pop
iret
add
adc
push
sbb
movs
dec
adc
shr
sbb
jno
adc
shl
fcmovnu
outs
jecxz
adc
ficom
xchg
shl
adc
ret
xlat
rol
mov
cmp
add
sub
add
ins
aam
xchg
push
dec
xchg
data16
or
sub
mov
xchg
out
test
sub
popf
add
push
mov
mov
add
push
ret
ins
pop
and
pop
cs
jae
cmp
xor
jle
add
dec
pop
sbb
js
movs
mov
xchg
jbe
lock
push
bound
mov
or
shl
sbb
pop
pop
adc
xchg
push
out
add
(bad)
cld
jg
fwait
sub
ret
mov
lahf
sar
pop
xchg
mov
add
dec
and
push
imul
cs
repnz
stc
(bad)
fnstsw
ins
es
retf
lea
cmp
or
retf
sbb
mov
test
dec
cmc
or
fnstenv
out
fadd
mov
fmul
push
dec
lds
in
call
fsubr
xchg
ret
popa
sub
and
mov
sbb
dec
out
fwait
push
sub
repz
movs
lahf
dec
sbb
in
out
mov
mov
fsubr
lods
popf
repz
and
pop
xchg
sar
in
jmp
sbb
sbb
sub
mov
jb
pop
xchg
cli
dec
jae
xlat
sub
enter
jp
je
shl
or
push
fs
sar
neg
push
mov
add
sub
cmp
cmp
sti
sbb
pop
div
pop
xlat
mov
call
jg
mov
and
out
or
dec
xor
cmps
popf
and
mov
mov
xchg
mov
fsubr
test
fcomp
mov
enter
sbb
addr16
inc
(bad)
popa
rcl
into
mov
push
add
ret
in
dec
inc
daa
nop
add
xor
jne
xchg
push
shld
cmps
call
lock
sub
mov
and
inc
aam
jmp
aad
jmp
sbb
xchg
bound
push
in
iret
mov
jno
adc
and
mov
lea
dec
ret
mov
nop
(bad)
mov
mov
mov
fild
shl
aad
inc
jecxz
mov
sbb
adc
test
cmp
jl
stc
dec
mov
(bad)
imul
outs
mov
(bad)
jno
add
push
mov
or
pushf
fcom
loopne
test
push
outs
cmps
jge
(bad)
push
cmps
in
jl
add
dec
add
lods
repnz
inc
or
shl
jg
add
sbb
cmp
cmp
das
outs
int
addr16
pop
outs
jmp
push
aas
xchg
in
jl
xchg
jno
div
aas
stos
scas
sahf
iret
int
loopne
fs
pop
nop
mov
sbb
mov
adc
std
dec
dec
call
xchg
test
mov
mov
shl
pop
mov
mov
in
xchg
pop
test
jns
adc
xchg
adc
popa
fisub
sbb
fsubr
loopne
push
push
mov
jl
lea
test
xchg
aaa
jne
sub
(bad)
add
loopne
ins
out
push
ret
pop
mov
jg
repnz
push
cld
loope
gs
xchg
cmp
xchg
inc
mov
and
outs
out
ins
cli
mov
jle
jle
mov
(bad)
cmp
fisub
xor
in
fdiv
inc
push
iret
jmp
adc
scas
call
sbb
cmp
jae
lods
jne
fld
push
pop
push
xchg
mov
pop
mov
jbe
sbb
push
fnstcw
push
ret
xor
lods
lods
xchg
shl
sbb
neg
cvtps2pi
(bad)
and
add
dec
inc
fcom
push
les
adc
xchg
mov
pop
mov
lfs
inc
repnz
mov
mov
pcmpgtw
jmp
dec
inc
xor
in
push
cmps
dec
and
arpl
das
hlt
push
pop
dec
or
clc
cmp
cmps
cdq
jmp
jnp
or
mov
cmp
cmp
mov
fst
(bad)
xor
pusha
out
dec
push
out
retf
mov
mov
dec
push
test
dec
sub
sti
jg
ss
jp
enter
movs
out
mov
pop
push
inc
lds
xchg
push
test
data16
ins
dec
imul
jno
fisub
xor
jns
ins
addr16
jge
ins
dec
(bad)
js
xor
test
jbe
xchg
adc
mov
out
ret
in
sti
lea
lods
cmps
daa
and
sbb
ficom
jnp
cmp
out
ror
rol
pop
adc
lods
mov
cmps
mov
or
ret
pop
mov
rol
adc
shr
xchg
icebp
cmps
xchg
cmp
inc
sub
mov
and
call
addr16
fxch
mov
cli
popf
push
cmps
sbb
xor
aam
and
dec
push
sub
xchg
dec
jl
xchg
xchg
adc
shl
push
lods
push
push
gs
into
cmp
(bad)
xlat
adc
inc
enter
mov
in
adc
cmp
in
nop
ret
mov
in
or
sub
popf
jmp
jmp
dec
jno
jl
add
dec
leave
sub
cmp
and
sub
dec
outs
jnp
lods
loop
and
add
and
xchg
lods
imul
lods
mov
xor
and
and
mov
xchg
xchg
(bad)
out
and
cmc
retf
xor
out
addr16
push
and
mov
jbe
repz
xor
nop
shl
sub
inc
ret
pop
jb
sti
fmul
(bad)
sbb
fistp
gs
dec
loop
inc
mov
mov
neg
movs
mov
or
push
jmp
mov
sub
inc
mov
xor
mov
or
ret
data16
mov
cmp
pop
ffree
loop
cmp
inc
(bad)
mov
cmp
jb
lea
xchg
sar
xor
sbb
scas
mov
jecxz
sahf
test
(bad)
idiv
jno
or
ret
cmp
mov
imul
or
popa
adc
mov
mov
mov
sub
fs
jg
push
mul
xchg
fadd
pop
sbb
push
data16
std
and
leave
fld
cmp
push
stc
or
int3
aam
neg
aaa
lea
pop
sbb
jnp
push
xor
pop
cli
iret
pop
fsubr
mov
rcl
pop
cmp
aad
pop
cdq
push
jnp
xchg
je
add
vmread
stos
adc
popf
sbb
fiadd
xor
ins
cmps
outs
mov
add
cmps
push
adc
inc
sub
push
ficom
sub
pop
jb
(bad)
rcl
mov
shl
inc
loope
mov
push
xchg
mov
pop
dec
lock
loopne
ret
push
pop
movs
rcr
push
xor
xchg
jmp
retf
scas
push
int3
inc
enter
mov
add
and
out
imul
push
xor
jle
std
shl
(bad)
xchg
jne
adc
mov
jo
data16
dec
xchg
push
and
pop
arpl
lds
inc
cmp
mov
and
sbb
stc
lods
lea
test
jae
sbb
out
xchg
out
sahf
and
cmps
xchg
add
and
outs
je
xchg
aam
popf
cmp
sbb
dec
out
cwde
enter
xchg
shl
xlat
mov
(bad)
out
call
cmp
into
call
mov
jp
add
(bad)
mov
ret
push
sti
push
arpl
pop
xor
xchg
cwde
cdq
sbb
pop
cmc
(bad)
push
iret
jbe
idiv
pop
ins
adc
fs
xchg
add
xchg
jne
icebp
push
add
and
pop
ror
inc
mov
sbb
iret
int
xor
mov
jg
mov
(bad)
pop
ret
scas
fimul
cmp
in
test
loop
not
ds
mov
test
dec
or
sar
mov
mov
cmp
push
test
scas
cmp
loopne
js
sar
popa
push
pop
sbb
add
cmps
ficomp
fsubr
aaa
scas
mov
cmps
fsubr
into
mov
jne
aas
inc
pop
test
lock
ins
enter
js
xlat
jle
inc
scas
cmp
loope
pop
mov
sub
push
mov
mov
in
mov
mov
pop
mov
or
fcomp
arpl
sub
repz
or
lds
jne
add
popa
jp
into
mov
ins
sbb
enter
jp
xor
xlat
fidivr
ficomp
sar
push
mov
mov
xchg
sar
ret
mov
and
in
fwait
pop
sbb
push
xor
xchg
xor
icebp
push
inc
test
jge
stos
xchg
dec
dec
inc
pop
sbb
and
cmc
fwait
dec
xor
sub
test
data16
shl
cmp
aaa
xchg
mov
push
popf
test
mov
jl
xor
lds
or
mov
adc
(bad)
clc
or
inc
dec
xor
adc
jmp
int
neg
sub
add
mov
mov
fistp
(bad)
sbb
fnstsw
cwde
inc
pusha
movs
sahf
add
jae
jns
out
sub
sub
mov
scas
sbb
push
dec
xchg
fadd
stos
retf
ins
jbe
sub
repnz
outs
lds
add
aam
mov
inc
fisubr
mov
dec
dec
and
adc
xlat
pop
cmp
retf
cmps
xchg
iret
sub
sbb
daa
stos
xlat
(bad)
nop
and
sbb
repz
cwde
mov
xchg
push
inc
adc
int3
jmp
sub
arpl
fwait
cli
or
loopne
xchg
fist
xchg
ds
lahf
push
dec
out
sbb
jecxz
add
push
mov
pop
jecxz
daa
cmp
daa
ffreep
test
jb
jl
dec
jmp
push
inc
stos
ficom
mov
lea
shr
pop
(bad)
jno
in
cmp
int3
cmp
pusha
push
pop
test
mov
xchg
iret
sub
cmc
daa
xor
dec
dec
loop
sbb
xchg
sub
fdiv
xor
js
adc
test
inc
xor
stos
dec
sar
xchg
test
sbb
add
mov
push
das
mov
dec
aaa
les
(bad)
xlat
fwait
xchg
push
or
jbe
mov
aas
mov
das
pushf
pop
loop
sbb
gs
sbb
test
add
adc
fucom
loopne
fisub
cmp
push
in
or
xchg
sbb
leave
dec
push
imul
adc
cmp
stos
sbb
test
lds
test
data16
sbb
adc
xor
jecxz
push
test
clc
in
ret
xchg
pop
cmp
sbb
(bad)
hlt
ror
test
push
pop
xchg
js
cmp
jle
jae
xlat
cmp
repnz
xor
dec
or
pop
sub
or
or
(bad)
jp
push
int3
nop
dec
dec
js
out
pop
pop
and
pop
fst
push
shl
into
out
fsincos
stos
aad
in
and
cmps
jmp
sbb
jmp
fist
push
mov
jns
das
push
or
fwait
lds
inc
outs
or
dec
fs
or
add
mov
add
add
xchg
sub
aam
iret
adc
cmp
mov
in
pop
or
ret
rcl
push
in
imul
pop
out
mov
sub
lods
dec
xchg
aas
add
pop
mov
cmp
addr16
leave
mov
ror
outs
shl
outs
cmps
test
adc
pop
xor
jo
mov
xchg
mov
dec
adc
arpl
mov
stos
xchg
or
xchg
or
inc
pop
dec
mov
je
iret
add
fsubr
inc
aas
push
mov
dec
fld
pop
jbe
adc
call
imul
call
dec
imul
rol
mov
das
xchg
sub
shl
ss
sar
into
out
fmul
jo
out
add
jnp
adc
cmc
cmp
js
xchg
xor
dec
jg
imul
jae
and
sub
add
push
xchg
mov
sbb
dec
enter
inc
fldenv
jb
adc
adc
mov
push
push
xchg
in
pop
jno
mov
or
js
call
mov
ret
popf
xchg
sbb
cmp
test
jb
imul
hlt
cmps
inc
pop
xchg
fsub
jae
push
mov
or
(bad)
sbb
out
sahf
mov
rcr
ja
arpl
js
fistp
xor
lahf
add
nop
dec
jae
loop
ja
dec
sub
xor
int
push
jmp
jae
xchg
xor
adc
jmp
int3
popf
cmp
(bad)
repnz
loope
xlat
mov
fadd
jbe
sbb
enter
ja
lea
xor
mov
retf
arpl
pusha
fisub
jnp
(bad)
xchg
dec
add
js
and
adc
test
scas
mov
outs
stos
dec
add
outs
mov
shl
push
fdivr
ret
leave
inc
or
fisub
ss
mov
aaa
jae
movs
shr
sti
test
test
pop
adc
hlt
in
leave
mov
mov
jns
repnz
(bad)
out
mov
inc
lds
xchg
fs
mov
aaa
mov
sbb
fist
pop
pop
mov
and
das
rcl
shl
jae
adc
dec
cs
inc
xchg
imul
pop
pusha
aad
loopne
stc
jnp
adc
pop
add
das
(bad)
stos
js
jmp
in
push
mov
xlat
and
dec
or
out
push
leave
fcom
xchg
jb
cli
in
xchg
mov
mov
es
add
cmp
mov
out
mov
mov
add
call
pop
outs
xor
es
dec
js
dec
inc
mov
mov
cmp
ins
lahf
pop
mov
leave
test
faddp
and
sbb
ret
faddp
(bad)
out
idiv
dec
popa
push
pop
sahf
cld
sub
xchg
add
fnsave
push
push
data16
mov
push
sub
sbb
inc
cmc
mov
xor
(bad)
ins
mov
push
mov
(bad)
enter
fiadd
jb
arpl
and
sub
arpl
dec
mov
shl
pop
add
dec
mov
or
jns
cs
mov
retf
mov
push
or
mov
or
inc
sbb
xchg
dec
bound
push
push
inc
lods
fnsave
sbb
out
sub
xchg
jno
movs
pop
int3
dec
inc
sbb
pop
push
jecxz
mov
jb
sbb
xlat
addr16
mov
out
ins
addr16
shr
mov
xchg
mov
out
xor
js
into
mov
and
cmp
push
sub
cmp
fmul
mov
shl
int
cli
das
std
push
xchg
pop
imul
adc
inc
enter
aas
cmp
and
mov
imul
xchg
jmp
jnp
cmps
cli
(bad)
fstp
test
fs
adc
mov
add
and
jns
cmp
into
sbb
jmp
fs
clc
and
clc
mov
(bad)
loopne
inc
mov
adc
ret
mov
shl
inc
daa
inc
push
cmp
jge
mov
popa
cdq
cwde
retf
test
sahf
jl
in
add
and
add
adc
pop
(bad)
ficomp
xlat
retf
add
mov
sar
fs
repnz
in
dec
pop
icebp
ror
imul
or
bnd
or
jg
sti
dec
test
out
fbstp
adc
mov
or
imul
repz
stos
jmp
sbb
mov
lods
sub
retf
out
pusha
push
mov
pop
ins
movs
inc
(bad)
data16
mov
xchg
stos
sub
nop
stos
push
sbb
test
(bad)
fmul
int3
mov
jp
inc
xchg
xor
push
outs
test
or
and
scas
cmp
popa
jae
int3
cmp
and
dec
stos
or
pop
jl
ret
fiadd
loopne
sbb
jecxz
loope
outs
push
fild
push
call
inc
adc
shr
mov
repnz
cld
sahf
sbb
or
add
fisub
retf
mov
mov
jmp
add
xchg
fidivr
loopne
jnp
loope
aaa
xchg
mov
mov
jbe
out
jg
add
cdq
adc
(bad)
fdivr
xor
call
xchg
xchg
mov
and
shr
cmps
das
mov
add
adc
je
xchg
or
movs
arpl
sbb
jge
mov
sbb
lds
mov
mov
jb
repz
push
fimul
dec
xchg
xor
jns
adc
jl
sbb
arpl
lahf
out
xchg
ror
cmp
lds
nop
test
push
adc
cld
or
mov
jmp
es
pop
pop
cmp
aam
push
lods
ins
mov
movs
mov
or
ret
mov
sbb
push
pop
xchg
push
fcomp
and
push
hlt
lods
pop
test
pushf
ds
sub
xor
mov
sub
aam
mov
push
jmp
mov
mov
jle
js
fist
inc
aaa
es
loop
mov
and
jmp
dec
or
xor
and
dec
dec
pushf
jp
sbb
sbb
pop
cmp
add
enter
movs
in
mov
ss
popf
stos
inc
sub
cmc
dec
ds
pop
mul
xrelease
fisubr
scas
sub
and
push
outs
sti
(bad)
icebp
inc
(bad)
stc
loope
pop
sub
adc
mov
arpl
add
sub
call
sub
pop
add
sbb
jge
cmps
cmc
and
test
cmps
mov
jb
cmp
xor
add
ds
or
scas
outs
das
xchg
icebp
sub
and
ror
sahf
pop
pop
repz
rcl
push
xchg
inc
loope
mov
jae
pop
fst
sub
aam
mov
fdivp
(bad)
push
sar
push
hlt
iret
sub
(bad)
xor
dec
cmp
mov
add
fcom
sbb
dec
inc
bound
mov
cmp
fbld
cmp
test
xor
mov
cmp
mov
retf
xor
jle
test
and
and
outs
adc
push
and
aas
int3
repz
daa
xor
adc
clc
fucomip
lods
loopne
hlt
sbb
fidiv
add
pop
inc
or
lock
sub
mov
mov
push
push
pop
sub
movs
dec
mov
movs
sub
or
dec
icebp
data16
iret
cmp
outs
xor
pop
push
in
mov
test
addr16
jmp
push
jnp
mov
iret
aaa
cmp
iret
leave
xchg
push
aam
push
dec
leave
loopne
call
call
ds
int
sub
adc
sti
cli
and
(bad)
jb
repnz
aaa
mov
mov
mov
cmp
ins
dec
jge
(bad)
out
arpl
sbb
(bad)
pop
push
mov
and
push
mov
dec
popa
ds
push
data16
in
mov
hlt
push
and
xchg
jo
sub
bound
push
scas
mov
(bad)
shl
aas
sbb
mov
inc
gs
dec
add
cld
inc
xchg
test
adc
jne
dec
ud1
movs
cmp
cmp
adc
fcomp
mov
cmp
cmps
pop
xchg
lods
or
lods
cli
jg
inc
mov
xchg
push
or
sbb
and
push
(bad)
les
int
pop
test
pop
and
mov
rol
and
cmp
inc
je
ror
mov
sbb
enter
inc
add
mul
adc
add
push
outs
imul
test
jle
(bad)
pushf
arpl
in
not
or
xor
add
jns
int3
cdq
mov
xchg
lahf
inc
jnp
adc
mov
push
sub
push
xchg
add
sub
xlat
inc
and
lods
push
jp
jge
and
jnp
pop
fild
lds
sub
dec
or
xchg
jb
push
xor
xchg
add
(bad)
sbb
outs
(bad)
movs
bound
pop
mov
(bad)
xchg
push
inc
sbb
jecxz
cmp
sub
cdq
sub
cmp
xlat
je
loopne
pop
adc
push
test
stos
aam
push
mov
pusha
lahf
das
in
ret
jb
leave
nop
push
das
lock
repnz
fsubr
inc
jge
retf
sub
or
and
retf
jne
cli
cmp
test
add
mov
std
in
lds
sbb
mov
pop
fwait
ret
and
jmp
pop
xor
cdq
(bad)
xchg
stc
test
pop
pushf
add
push
sub
jge
ins
out
int
popa
push
neg
aaa
xchg
ror
and
xchg
sbb
push
xor
xchg
mov
clc
and
cmp
dec
sub
lea
dec
sub
call
nop
cmp
pop
lods
add
stos
mov
cmp
(bad)
sbb
push
shl
xor
in
mov
xor
sbb
(bad)
mov
mov
mov
pop
mov
in
and
popf
add
inc
stos
int
inc
popf
inc
fcom
xchg
sub
xor
jns
sub
stc
cld
lods
ret
pop
pusha
fst
std
(bad)
and
jecxz
jecxz
popf
or
xor
or
jmp
clc
mov
add
mov
call
jb
xor
outs
sbb
ret
mov
mov
sub
and
push
aas
les
pop
repz
adc
cmp
add
aas
add
add
es
and
jg
imul
das
xchg
(bad)
mov
movs
ret
(bad)
in
pop
jp
retf
or
imul
mov
push
or
sbb
mov
mov
stos
pop
and
(bad)
pusha
pop
stc
and
in
repz
repz
and
xchg
cld
pop
ret
(bad)
ins
repz
mov
ret
adc
cs
mov
cmp
bound
xlat
push
fdiv
aaa
dec
cli
xchg
mov
pop
test
mov
stos
(bad)
loope
js
outs
xchg
in
mov
jmp
ins
push
cmp
mov
scas
mov
mov
call
mov
cmps
cld
and
ror
push
test
rcl
jmp
sbb
xor
(bad)
pop
daa
xchg
idiv
sub
fsubrp
xlat
dec
pusha
ret
popa
jne
mov
adc
dec
mov
pop
sbb
addr16
or
push
lods
ins
inc
test
out
cs
mov
jge
sub
add
jge
je
retf
push
inc
dec
or
jg
mov
xchg
jnp
fild
mov
push
daa
push
je
jae
mov
je
scas
ret
lock
(bad)
ja
xlat
nop
pop
into
ins
xor
shl
cmc
loopne
dec
push
test
lock
std
jle
data16
into
push
xchg
test
cs
in
out
fcmovnb
in
add
into
inc
cmp
pop
and
mov
or
out
std
inc
xor
aad
lods
mov
outs
xor
jl
pop
mov
es
jmp
cmc
jnp
aam
mov
jmp
call
adc
int3
xchg
jge
fs
scas
xchg
mov
sbb
fs
dec
test
retf
ja
and
mov
sub
std
out
in
pop
add
imul
inc
push
jl
or
js
push
mov
in
sub
sub
add
icebp
mov
lock
pop
lahf
(bad)
adc
jle
jecxz
mov
cmp
dec
and
lea
inc
aas
or
scas
dec
ret
add
sub
(bad)
xchg
and
adc
jno
jnp
push
and
movs
cli
mov
popf
call
dec
sti
shr
js
rcr
cmps
loope
test
ss
mov
adc
popf
stc
repz
or
mov
retf
or
sahf
adc
sub
mov
jno
add
pop
fcmovu
in
dec
iret
popf
adc
gs
mov
nop
cmp
jl
fld
lods
jg
mov
push
add
retf
xlat
pop
mov
pop
in
pop
xchg
fwait
push
lds
out
test
mov
xor
xor
aas
addr16
sub
mov
pop
pop
sbb
(bad)
ins
data16
adc
mov
and
outs
jecxz
aam
retf
in
dec
aad
loopne
int3
push
ret
(bad)
push
fwait
mov
(bad)
xchg
xchg
sub
mov
jmp
aam
outs
push
lock
cmp
das
mov
sub
inc
and
add
mov
test
out
scas
(bad)
cmp
cli
fwait
xor
leave
sbb
inc
cmp
mov
and
mov
jecxz
sub
scas
adc
push
push
mov
add
cmp
sub
call
sbb
sub
jmp
gs
imul
in
int3
fistp
pop
push
cmc
in
idiv
mov
(bad)
icebp
aam
stos
and
stos
lahf
mov
cli
jle
cmc
jge
in
ret
jo
adc
int
xor
xchg
call
(bad)
mov
into
fwait
cdq
cmp
mov
cmp
mov
adc
mov
sar
mov
ds
dec
(bad)
jle
scas
cwde
push
outs
inc
mov
fmul
cmp
xchg
xor
jbe
xchg
dec
loope
pop
in
inc
xchg
scas
data16
cmp
call
mov
xchg
ins
ss
sub
dec
retf
mov
mov
cwde
(bad)
mov
cmps
lds
jns
mov
dec
(bad)
in
jmp
add
pop
movs
sahf
dec
pop
and
sbb
aam
call
xor
pop
sbb
push
lods
dec
adc
test
push
pop
sub
sub
addr16
int3
stos
mov
sub
sub
dec
shl
call
dec
aas
mov
lahf
xlat
xchg
scas
outs
inc
pusha
call
cmp
jae
out
cmp
lock
jle
dec
or
in
push
mov
mov
les
enter
ds
ds
mov
dec
(bad)
cli
sub
add
jp
and
jae
mov
inc
lods
test
pop
imul
dec
sti
or
stc
mov
mov
mov
jb
mov
mov
arpl
in
sbb
shr
sbb
xor
ins
nop
mov
add
jmp
rep
cmps
cmps
test
cmps
mov
jmp
cmps
rcr
inc
jge
data16
pop
repz
xchg
jge
push
jmp
and
sub
(bad)
repz
pop
shl
sbb
jmp
dec
lock
iret
add
pop
enter
in
shl
pushf
aaa
jmp
enter
inc
stos
or
push
adc
hlt
pop
mov
xor
int
clc
(bad)
xchg
cli
mov
jg
into
ja
ret
loopne
inc
lods
xor
and
pop
sub
sub
mov
xor
lds
mov
mov
pop
dec
scas
in
or
not
(bad)
nop
div
push
cwde
xor
ja
cli
shr
(bad)
comiss
mov
cmp
nop
out
lds
pop
das
in
pushf
xlat
mov
out
add
cmp
mov
jecxz
mov
xchg
gs
je
xchg
aam
xchg
mov
jmp
mov
sub
jo
ds
sbb
mov
pop
ret
sbb
test
dec
dec
(bad)
aas
nop
outs
scas
jnp
xor
pop
sub
sub
and
les
data16
mov
mov
leave
add
or
dec
inc
hlt
fcomip
(bad)
mov
inc
xlat
xor
daa
cdq
ins
loope
fisub
lods
outs
ret
addr16
ss
ja
jmp
fdivr
out
leave
xor
std
pop
int3
rcl
sub
and
repz
jno
cmp
jns
inc
jmp
jno
ds
cmps
iret
cmp
sbb
cmp
xchg
lds
ins
inc
fdivr
fcomp
mov
mov
fiadd
add
sub
pop
mov
lods
xchg
dec
cmovl
leave
add
ins
out
ror
and
loop
(bad)
pop
xor
mov
ss
mov
xchg
outs
dec
dec
lds
movs
pusha
inc
xor
add
mov
sub
call
call
sub
add
icebp
inc
das
ja
and
mov
sub
punpcklbw
mov
icebp
cmp
adc
cwde
cmp
les
xor
pop
xlat
dec
aam
mov
(bad)
mov
movs
or
push
bound
bound
daa
scas
pop
in
dec
out
mov
pop
mov
mul
push
test
jbe
cmc
std
jl
test
push
add
call
dec
push
daa
dec
add
ss
repz
dec
jge
(bad)
hlt
pop
jle
cmp
test
cmps
sub
cmps
ins
xor
adc
(bad)
jmp
cwde
int3
mov
data16
dec
xor
pusha
(bad)
sub
imul
add
push
inc
jns
adc
cmc
xor
and
push
push
ret
sbb
or
cmp
adc
arpl
ficomp
push
popf
and
pop
mov
adc
adc
ret
jle
dec
jae
fistp
xchg
sbb
xchg
cmp
leave
(bad)
aam
and
sbb
retf
add
jno
(bad)
(bad)
mov
int
in
adc
pusha
call
dec
sbb
xchg
cmp
(bad)
dec
ret
jnp
cmp
and
nop
mov
sub
lea
das
adc
jl
sbb
std
imul
arpl
xchg
mov
or
fisttp
out
call
sbb
cld
cmp
rol
rcr
call
and
mov
mul
nop
ins
iret
(bad)
xchg
(bad)
fidivr
mov
dec
sub
xor
rcl
mov
sub
dec
or
cli
lods
data16
sub
dec
xor
xchg
jne
(bad)
movs
movs
jbe
mov
dec
hlt
adc
sub
scas
adc
ficomp
pusha
les
stos
sub
outs
push
test
in
or
xor
(bad)
jl
(bad)
mov
sub
and
repz
jg
out
scas
ins
mov
inc
test
and
scas
cmp
cli
int
mov
xor
xchg
loopne
iret
movd
sar
(bad)
sahf
jmp
hlt
push
ret
idiv
mov
int
mov
cli
sbb
idiv
pop
addr16
mov
mov
jno
test
adc
nop
retf
jne
fild
sbb
lods
sub
jmp
ret
ins
adc
aaa
xchg
xchg
sub
pop
dec
push
scas
xchg
pop
movs
in
stos
xchg
shl
jae
push
popa
inc
dec
adc
sbb
iret
stc
ret
mov
mov
xor
retf
(bad)
sti
adc
ret
and
pop
out
fwait
test
sbb
xchg
retf
icebp
ds
xor
push
mov
retf
or
adc
dec
inc
fbld
mov
rcr
leave
mov
loop
mov
scas
rcl
mov
lock
outs
and
xchg
imul
inc
stc
data16
xor
xlat
sbb
icebp
(bad)
pop
int
push
popf
pop
sbb
mov
mov
sub
stos
in
fdivr
jae
pop
and
or
mov
pop
cmp
push
ins
test
sar
cmp
sar
sbb
ret
push
sbb
or
dec
push
lods
cwde
push
add
bound
sar
stos
dec
push
lds
leave
sahf
mov
adc
je
call
mov
cdq
inc
and
popf
in
sub
jp
or
jp
dec
jo
cwde
mov
call
and
call
bound
xlat
cdq
jo
mov
cs
and
push
adc
inc
shl
xor
jae
mov
cmp
lods
out
cmps
xor
inc
sti
jne
add
ficom
jns
inc
pop
pop
cmp
add
loop
dec
and
(bad)
jle
rcr
push
xchg
out
inc
mov
int3
jmp
(bad)
pop
rol
add
into
std
jle
mov
add
xor
fisttp
mov
pop
mov
xor
gs
std
pop
ror
pop
xchg
mov
call
dec
sbb
fnstenv
lea
push
inc
mov
jp
ret
mov
in
push
int3
mov
fstp
shl
out
loopne
and
icebp
push
cs
(bad)
fnstcw
std
aad
inc
call
push
fld
ins
push
cmp
dec
or
or
cmp
jp
cmc
jno
dec
dec
cmp
jmp
and
xchg
mov
mov
mov
daa
fdivp
cmp
into
call
in
jl
dec
(bad)
cmp
or
(bad)
nop
mov
mov
idiv
sahf
stc
repz
dec
mov
js
sub
jmp
inc
xor
pop
sub
(bad)
aad
jmp
outs
pop
imul
xor
cwde
das
leave
add
daa
iret
cs
mov
add
sbb
cmpxchg
xor
jbe
inc
movs
adc
jg
ja
mov
jge
adc
inc
pop
adc
enter
mov
jno
pop
xchg
bound
lds
popf
add
cld
int
mov
ja
or
out
pop
pusha
imul
xchg
lea
outs
loop
fcmove
push
or
cmps
cmp
dec
(bad)
adc
xchg
int
dec
xchg
jbe
xor
mov
fs
pop
push
mov
dec
xor
cmp
dec
add
adc
mov
(bad)
pop
nop
fs
lahf
or
test
out
sbb
xor
scas
sub
mov
push
jecxz
push
pop
xchg
pushf
dec
fdivr
in
xlat
lahf
std
int3
loopne
sti
sbb
cmp
out
mov
shl
sar
ja
cmp
aad
nop
dec
fimul
js
and
push
in
(bad)
addr16
test
imul
jge
std
dec
into
nop
sub
add
sub
bound
inc
inc
aas
inc
frstor
ja
mov
(bad)
inc
jmp
iret
mov
lods
cmp
lods
xor
xor
(bad)
dec
mov
out
icebp
outs
jmp
daa
and
test
dec
or
push
push
pop
pop
stos
add
out
fist
mov
cld
popf
adc
psubd
ins
ret
mov
mov
loop
sbb
not
pop
loop
and
fcom
sbb
test
inc
das
or
push
lods
mov
ret
pusha
xor
ja
psubusw
movs
pop
add
ins
or
jg
cmp
push
sbb
fstp
test
mov
aam
mov
adc
ret
fidiv
ins
mov
adc
mov
out
pushf
out
fwait
dec
xchg
scas
fiadd
out
cwde
add
jge
adc
xor
inc
dec
xor
jae
adc
add
dec
xor
call
retf
loope
jbe
jmp
and
retf
push
jns
ror
pop
js
or
jne
test
mov
xchg
xor
aam
test
div
rcr
jmp
jge
inc
ins
ds
xor
out
clc
int3
mov
jo
sti
dec
mov
repz
inc
ficom
(bad)
sub
mov
movs
mov
mov
adc
sub
mov
pop
xor
xor
call
mov
ret
test
leave
retf
and
xchg
(bad)
pop
stos
test
fidiv
test
lahf
xor
iret
add
rcl
lods
stos
dec
dec
pop
inc
(bad)
or
fnstenv
push
mov
inc
rcl
xchg
rol
push
ficomp
repnz
xlat
adc
adc
jne
mov
mov
cmc
es
aaa
and
shl
mov
imul
das
fiadd
arpl
jne
cdq
out
into
pop
pop
fcom
lahf
sahf
mov
xor
pop
in
push
cli
dec
jg
and
mov
sub
sahf
cwde
mov
(bad)
xchg
mov
xchg
and
ja
jle
mov
rcr
repnz
iret
push
add
ins
sub
and
in
cmc
(bad)
(bad)
mov
xchg
adc
aaa
xchg
cli
jno
push
aam
inc
hlt
mov
lds
std
adc
and
icebp
xor
lahf
stos
pop
or
adc
fcom
adc
cmc
cmc
leave
ins
mov
sbb
mov
xor
mov
aad
popa
call
xchg
xchg
jmp
sub
xor
push
or
sbb
and
jo
inc
mov
sti
mov
pop
(bad)
out
in
int
push
shl
out
popf
fst
and
sbb
sbb
xor
inc
test
pop
or
mov
test
add
push
jo
sub
mov
inc
scas
xchg
sub
jae
stc
sbb
addr16
fisttp
mov
or
outs
push
xor
sbb
and
scas
adc
jns
aaa
xchg
inc
mov
jle
in
out
daa
mov
sub
(bad)
jmp
dec
adc
repnz
sub
xchg
in
in
pop
jl
push
sbb
inc
outs
sbb
inc
ror
sbb
inc
lea
mov
sub
dec
stos
rcr
dec
or
test
sub
shl
(bad)
jae
cmc
sub
ret
jg
mov
cs
pushf
fs
rol
xor
pop
xchg
push
push
aad
mov
or
int3
push
or
jo
add
hlt
jns
add
inc
pusha
sub
lahf
lahf
jp
test
cld
cwde
test
pushf
stos
pop
mov
push
jmp
xor
std
arpl
xor
sub
sar
imul
dec
icebp
sbb
aad
loop
dec
jo
(bad)
cmp
add
rcr
dec
or
jle
or
stc
push
stos
cmps
shl
xchg
push
rol
inc
or
cmp
cmp
sar
add
lahf
inc
pop
dec
jp
mov
and
jne
dec
sbb
xor
cmp
push
nop
and
sub
mov
cwde
call
adc
mov
imul
gs
mov
cmps
mov
outs
test
or
dec
xor
das
ins
dec
push
add
fist
loop
repnz
mov
test
pushf
aam
xchg
adc
in
xlat
mov
or
sahf
pop
pushf
sub
push
stos
cmp
jno
daa
dec
mov
sahf
dec
and
sub
(bad)
out
adc
leave
sub
lods
(bad)
pop
inc
add
imul
pop
cmp
aas
xchg
jo
dec
mov
or
push
dec
or
pop
fcomp
jmp
inc
enter
fcom
jb
jecxz
scas
lds
pop
mov
fs
push
sbb
mov
jp
outs
jp
mov
pusha
cwde
push
mov
(bad)
push
in
and
dec
inc
fst
and
pop
mov
(bad)
fcom
mov
shl
retf
mov
cmc
ret
in
jmp
fdiv
out
dec
jge
jmp
test
jecxz
jne
mov
xchg
outs
pop
pop
add
mov
inc
or
sbb
scas
xchg
jle
ins
mov
adc
xchg
cmps
repnz
repnz
ret
icebp
pop
es
inc
sti
dec
outs
sar
imul
sahf
fcmovb
fst
inc
ds
mov
retf
pusha
sub
sub
mov
adc
rol
add
arpl
sbb
cmp
ins
mov
fwait
xchg
in
mov
shr
mov
sbb
mov
into
lods
dec
or
push
ins
dec
jmp
shl
sbb
xchg
pop
sbb
mov
sbb
cmps
cmp
aam
pop
push
or
stc
mov
ins
cmps
ficom
mov
push
mov
pop
adc
popf
sub
fdivr
cmp
jno
mov
popa
bound
adc
adc
sbb
adc
push
(bad)
aaa
cld
inc
imul
pop
mov
add
mov
pop
sub
std
fistp
aas
pushf
inc
push
and
sbb
cs
sbb
mov
shl
inc
jbe
or
jo
cmp
hlt
test
in
fcmove
inc
sbb
pusha
outs
test
movs
pop
push
je
sub
mov
jl
or
dec
dec
outs
pusha
std
pop
repnz
cdq
xchg
test
leave
push
aam
(bad)
jp
test
(bad)
xchg
sub
sbb
add
movs
movs
xchg
xor
mov
xor
stc
cs
out
bound
mov
cmp
ins
rcl
popf
xchg
or
push
mov
push
call
(bad)
xor
adc
ja
clc
rcl
cmp
aas
xchg
fdivr
xlat
leave
fwait
jb
xchg
inc
or
jge
jge
push
repz
repnz
into
scas
mov
lods
mov
push
cli
movs
mov
xchg
xchg
push
sbb
mov
std
out
inc
sub
xchg
cmc
rcr
push
cmp
(bad)
add
(bad)
mov
bound
jns
(bad)
xor
adc
sbb
jb
(bad)
ds
mov
pop
ret
(bad)
mov
cwde
jnp
sbb
fwait
sub
inc
(bad)
test
mov
movs
call
out
sahf
pop
js
(bad)
xchg
and
cmp
cs
or
mov
imul
mov
pusha
loop
xchg
addr16
cli
inc
pop
or
sub
push
retf
jae
addr16
mov
cld
push
push
imul
adc
sbb
ja
ins
fcmovu
sub
mov
clc
dec
mov
test
add
xor
xor
movs
jne
(bad)
fadd
pushf
imul
inc
and
jns
gs
dec
dec
les
xchg
retf
(bad)
mov
sbb
imul
cs
xor
lds
jno
sbb
arpl
and
(bad)
dec
out
adc
mov
stos
xchg
adc
fdivr
imul
push
loopne
mov
push
aaa
ds
or
repnz
cwde
test
stc
in
pop
cmc
mov
cmp
add
fcomp
push
sbb
in
inc
dec
retf
out
jecxz
test
xchg
xchg
mov
fdivr
leave
lods
xor
jne
xlat
dec
push
dec
test
xchg
pop
fs
into
inc
mov
mov
jg
retf
addr16
mov
push
(bad)
xor
repnz
mov
lds
sub
in
xchg
adc
pop
sahf
repz
mov
jl
sbb
aas
xor
(bad)
push
cmp
das
mov
into
xor
mov
xor
mov
push
sbb
fisttp
lock
out
or
stos
loope
jle
jl
mov
imul
or
je
je
sbb
add
and
iret
gs
pop
inc
bound
in
cmp
adc
push
mov
fist
jge
xchg
outs
mov
cs
pop
push
test
push
push
or
cmp
into
sub
jnp
cmc
mov
aam
inc
jnp
or
rol
xor
sub
mov
dec
mov
push
cdq
inc
mov
stc
adc
leave
push
jno
mov
stos
test
into
ss
cmp
jg
cmp
mov
(bad)
or
xor
push
ror
sbb
mov
mov
mov
mov
mov
stos
loopne
popa
test
jmp
adc
imul
mov
mov
cld
arpl
in
pop
das
repz
jp
outs
iret
enter
mov
shl
fidivr
icebp
scas
push
xlat
sub
mov
inc
xchg
xchg
ins
loopne
arpl
lea
repnz
outs
ret
test
sbb
adc
pushf
xor
mov
outs
imul
xchg
push
fisubr
shr
shl
mov
pop
lods
pop
cmp
jb
push
lds
jae
add
pushf
push
sbb
ror
in
or
sbb
mov
retf
lods
(bad)
jl
fld
pop
xchg
(bad)
sub
sbb
mov
sbb
mov
pop
xor
mov
mov
cwde
nop
jne
ins
(bad)
fucomi
stos
pop
push
call
movs
ds
mov
les
inc
cs
(bad)
mov
mov
scas
enter
jns
inc
cmp
xchg
movs
lock
pop
(bad)
not
gs
inc
data16
mov
jg
jae
and
pop
fbstp
or
dec
pop
add
pop
adc
sbb
mov
xchg
into
loop
jns
popa
icebp
xchg
test
mov
les
xor
rcr
aad
(bad)
jle
(bad)
xor
jg
mov
xchg
xchg
xchg
jnp
rep
daa
adc
xlat
data16
or
and
jmp
mov
aaa
or
pop
jmp
lds
dec
dec
scas
push
test
adc
cld
xor
or
xchg
mov
loopne
push
mov
fs
ret
out
mov
xor
mov
pop
adc
fisub
xchg
repnz
in
sub
ret
cwde
dec
(bad)
(bad)
fcom
imul
sar
xor
rol
hlt
sti
and
outs
dec
jp
sub
loopne
ja
xchg
mov
xchg
call
inc
xchg
lods
mov
jg
clc
and
daa
fs
or
arpl
or
add
mov
ins
aam
mov
and
fist
js
or
out
add
dec
jle
mov
cs
test
sti
scas
add
(bad)
fild
sub
daa
or
cmp
shl
es
mov
mov
mov
push
test
dec
das
das
in
nop
xor
test
mov
xchg
push
mov
xchg
xor
cmp
(bad)
push
test
mov
adc
jecxz
mov
jne
sub
icebp
loope
inc
mov
jecxz
fstp
jns
cmp
jbe
lods
inc
cmc
int
xchg
inc
xchg
push
or
loope
clc
loopne
dec
aad
or
adc
jmp
sbb
(bad)
mov
nop
or
mov
or
or
repz
adc
loope
pop
mov
mov
test
iret
dec
add
iret
mov
ret
pop
inc
mov
scas
dec
sub
jne
jbe
in
out
movs
push
rcl
sbb
adc
test
and
ror
fistp
mov
inc
sub
xor
push
xor
jl
adc
jne
xchg
out
push
pop
stc
sti
inc
inc
cmp
cmps
jae
js
fwait
sbb
xchg
repz
(bad)
or
jle
sub
imul
add
jne
(bad)
not
or
pop
lahf
les
cwde
out
pop
xchg
sbb
pop
or
fisubr
cmc
fcmovb
mov
cmpps
test
lock
xchg
out
adc
ret
mov
mov
pop
sti
xchg
int
pop
pushf
xchg
inc
inc
mov
icebp
ins
jle
lock
cs
enter
cmp
retf
inc
and
pop
push
(bad)
jns
xchg
pop
jge
or
jecxz
push
xchg
std
and
int
sub
aaa
jne
push
aaa
lea
ret
or
mov
or
addr16
inc
loope
popa
test
into
inc
or
ins
mov
iret
mov
mov
mov
mov
xor
inc
cmc
dec
jge
pop
jbe
xchg
adc
ja
retf
cdq
fwait
rcr
icebp
rol
push
test
outs
lods
xchg
inc
test
mov
aad
aaa
mov
neg
push
dec
into
xchg
pop
loope
xchg
push
inc
push
mov
pop
cmp
adc
fild
cs
int3
arpl
in
das
dec
inc
dec
shl
pop
and
gs
pop
ret
mov
fsubr
stc
ja
retf
dec
cmp
pop
call
aas
rol
xchg
push
xor
test
add
sar
into
mov
xor
enter
or
sidtd
mov
jne
and
lahf
add
add
jl
xor
mov
and
je
pop
fwait
jle
mov
mov
int3
xchg
call
call
pop
add
sbb
in
leave
pusha
mov
cdq
pop
in
mov
xchg
xor
idiv
jmp
movs
or
mov
mov
dec
cli
ret
mov
xor
hlt
push
addr16
sbb
push
mov
jg
and
loop
(bad)
iret
test
cdq
clc
in
shl
jg
int
mov
(bad)
pop
lods
scas
movs
dec
dec
jnp
call
adc
in
mov
test
sub
in
cmp
mov
in
cmps
ficom
call
push
cmps
je
rol
or
xchg
and
xor
sbb
aaa
mov
jmp
add
or
mov
adc
jns
aas
retf
sub
ja
mov
lods
pop
dec
out
fsubrp
das
leave
or
mov
xchg
cmp
jmp
jno
pop
mov
sub
repz
fdiv
fwait
mov
mov
clc
cs
cld
aaa
rcr
sti
jno
icebp
out
out
push
cmp
jmp
(bad)
movs
cdq
daa
addr16
jge
push
jecxz
call
push
in
cs
add
jl
(bad)
not
mov
inc
stos
push
adc
fisubr
xor
jecxz
inc
adc
out
ja
mov
pop
int
xchg
sbb
mov
push
bound
xchg
lea
xchg
jno
push
xchg
adc
mov
pop
xor
icebp
cmp
xor
rcl
jmp
push
sub
cmc
out
ficomp
sbb
pushf
inc
push
and
xor
mov
pushf
or
lahf
mov
sahf
sbb
inc
cmps
xor
pop
xchg
xor
xchg
pop
sbb
push
sahf
nop
(bad)
js
mov
fucomip
out
sbb
pop
push
xor
pusha
adc
jb
or
dec
mov
cli
loopne
movs
xlat
lahf
push
out
dec
sbb
add
int3
loop
stos
cs
(bad)
jmp
sti
push
mul
or
popa
mov
clc
das
les
mov
mov
jmp
jg
bound
mov
or
scas
cmp
xchg
jns
pop
pop
nop
adc
inc
inc
push
aad
ret
in
xor
mov
push
out
test
sar
imul
(bad)
push
repnz
sbb
adc
fdivr
and
std
loopne
popf
shl
das
loopne
arpl
adc
or
and
ss
loop
jg
loope
stc
push
push
cmps
sbb
lods
rcr
xchg
mov
lock
out
or
mov
dec
stc
fs
movs
add
in
adc
out
mov
pop
sti
sub
je
cmp
adc
mov
mov
test
ss
push
in
stc
imul
push
int3
out
cmp
cmps
sbb
out
jmp
mov
sub
dec
ret
mov
mov
mov
fsubr
cmps
dec
hlt
xchg
sbb
or
pop
jmp
jbe
ret
jns
cli
and
in
add
mov
and
(bad)
cmp
scas
inc
cli
(bad)
jge
and
retf
lds
cmp
push
xor
std
cmp
push
test
jne
and
je
adc
arpl
or
fidivr
sub
retf
enter
adc
dec
mov
mov
dec
shr
das
mov
rol
adc
pop
inc
jne
push
add
pop
push
mov
stos
nop
es
ficomp
fcom
call
jle
fwait
js
and
movs
lds
fistp
aam
jecxz
mov
or
lods
cwde
xor
stos
icebp
xchg
xor
mov
scas
jmp
bound
mov
shl
dec
out
ret
clc
out
pop
jg
or
or
or
pop
out
xor
mov
int3
scas
xor
and
leave
paddsw
sti
addr16
push
jns
xchg
sub
out
fstp
xchg
cmp
xchg
pxor
sahf
stc
push
sub
add
adc
jle
cmp
(bad)
mov
aad
aaa
sub
pop
fcomp
(bad)
in
xor
daa
mov
hlt
push
mov
jnp
sbb
mov
mov
xchg
loop
(bad)
cmc
inc
push
jge
jle
stos
jb
mov
pop
lahf
add
xchg
jmp
aam
sub
xor
adc
inc
and
scas
add
pop
test
int
hlt
ror
(bad)
jmp
sub
dec
xchg
mov
(bad)
xor
cmp
jb
aas
repz
or
jb
sub
js
cwde
cli
and
lods
cmc
or
push
pop
pop
fldenv
faddp
push
or
jne
jle
or
arpl
sbb
lods
xor
test
iret
les
push
sub
ss
pop
cmp
push
je
sub
adc
mov
ret
popa
inc
or
jmp
xchg
xchg
cmp
test
cmp
outs
arpl
push
dec
or
outs
pop
movs
sub
les
or
push
ds
jno
pop
sub
xlat
add
icebp
ret
sub
or
stos
imul
mov
imul
(bad)
jmp
test
(bad)
retf
inc
lahf
jb
inc
jbe
in
add
cmc
ret
sbb
cmc
fwait
pop
les
sub
jae
in
pop
mov
leave
mov
test
scas
xchg
sub
call
aas
shl
xor
mov
(bad)
retf
xchg
(bad)
fld
loop
data16
aaa
jecxz
mov
jge
dec
push
cmp
shl
and
mov
pushf
inc
pop
pop
mov
pop
or
js
out
stos
jae
and
out
jb
pop
sub
fist
nop
enter
xchg
or
out
inc
movs
adc
jnp
fisubr
test
push
inc
mov
cld
mov
push
fisub
hlt
jmp
dec
pop
cmp
stos
into
sbb
es
(bad)
neg
es
outs
mov
rcl
dec
xor
scas
mov
dec
outs
push
pusha
mov
loopne
xchg
stos
pusha
mov
dec
fs
cli
jno
pop
hlt
mov
test
push
retf
movs
sar
push
xor
cmp
jle
popf
xchg
stos
jge
cmp
xchg
pusha
(bad)
lahf
jecxz
and
inc
dec
out
clc
jmp
hlt
out
rcr
std
mov
jge
call
sbb
daa
jno
push
push
fldenv
inc
cwde
mov
scas
(bad)
sahf
push
cmp
xor
fcom
lds
in
lahf
mov
pop
arpl
push
dec
mov
xchg
dec
sub
jmp
xchg
test
cdq
dec
mov
test
jle
inc
mov
daa
aam
cmpxchg
imul
pop
icebp
jo
into
int
ja
fcomi
fsubr
pop
(bad)
mov
(bad)
sbb
sub
push
mov
es
and
push
cmps
inc
inc
repz
icebp
cmp
jns
jbe
dec
inc
or
test
mov
mov
cmp
dec
arpl
cmp
dec
push
out
add
rcr
add
sbb
xor
nop
pop
scas
leave
loop
mov
adc
xchg
sti
aas
test
test
ins
adc
xchg
pop
jmp
scas
sub
sub
stos
and
jbe
mov
adc
ja
mov
push
cmp
mov
jle
int3
xchg
test
and
sbb
adc
cmp
xchg
sbb
in
cmps
pop
call
xor
cmp
(bad)
and
fdiv
cmp
(bad)
inc
sub
cmp
popf
in
sbb
xchg
xor
(bad)
movs
gs
or
scas
shl
imul
mov
inc
outs
js
movs
pop
pop
mov
mov
daa
sahf
loope
into
jmp
and
or
inc
inc
sbb
push
ss
cmp
cmp
add
sub
daa
cmps
add
out
pop
pusha
adc
and
sub
fdivr
add
cmp
lods
and
sub
ins
es
movs
adc
push
push
push
cli
ficomp
arpl
jg
pop
popa
int3
imul
icebp
push
shl
inc
mov
movs
loopne
xor
xchg
jno
mov
xor
pop
test
out
inc
mov
lds
mov
clc
or
jno
and
xchg
movs
loope
sbb
repz
aam
jb
sub
stos
or
das
push
sub
lods
movs
imul
fadd
call
rol
dec
adc
enter
psadbw
fs
or
mov
push
call
(bad)
jae
sub
fcomi
mov
test
sahf
lahf
enter
js
xor
js
shl
sbb
and
(bad)
and
inc
nop
ret
test
jecxz
shl
lods
fadd
adc
mov
jmp
stc
adc
inc
jnp
outs
xchg
mov
mov
and
fs
xor
xchg
sub
add
inc
pop
jle
and
jmp
inc
push
mov
cld
les
addr16
std
mov
sbb
pop
in
pop
pop
div
jge
jno
mov
jge
add
(bad)
out
mov
dec
test
popa
inc
adc
push
out
nop
sub
cld
adc
mov
scas
stc
in
push
frstor
ds
add
(bad)
pop
pop
mov
mov
xchg
or
add
cmp
test
mov
jmp
push
fiadd
jecxz
mov
ss
mov
retf
int
out
mov
sbb
into
(bad)
add
mov
ret
rcr
dec
in
jle
jbe
in
mov
rcl
adc
pop
push
retf
jge
push
xchg
jae
jnp
(bad)
out
stos
imul
push
mov
or
adc
sbb
and
sbb
hlt
mov
loope
addr16
movs
pop
lock
outs
lods
ss
xchg
mov
popf
mov
clc
icebp
xchg
and
jle
adc
mov
or
les
leave
int
jno
or
shl
jne
jb
aas
aaa
das
dec
xor
fwait
mov
mov
loopne
add
mov
mov
add
retf
dec
jp
push
add
push
test
xchg
loope
rcr
push
sbb
xor
pop
add
inc
adc
test
js
sbb
dec
push
(bad)
imul
push
fcomp
adc
xchg
repnz
jo
cmp
xchg
xchg
cmps
(bad)
mov
sar
addr16
add
test
sub
shr
(bad)
adc
push
push
lock
cmp
mov
fwait
scas
ja
cmp
stos
repz
jl
and
out
fcom
ret
or
pop
inc
pop
jns
repz
pop
xchg
(bad)
or
mov
cli
mov
ds
xor
sar
jbe
inc
cli
cmp
fiadd
jmp
cmp
jg
lods
fwait
xchg
out
inc
inc
repz
ret
jecxz
fldcw
jg
mov
aad
mov
xor
stos
inc
inc
dec
cmp
and
ds
add
push
cmp
mov
test
jp
shl
jg
(bad)
xor
aaa
repz
aad
cmps
mov
imul
arpl
mov
cdq
dec
sub
mov
es
jne
cmp
pop
scas
inc
inc
or
hlt
fcomip
push
fnstenv
pop
adc
enter
xchg
push
fmul
fs
aam
sbb
mov
rcr
xchg
dec
retf
jg
push
adc
js
mov
mov
cmps
jbe
sbb
dec
mov
add
(bad)
out
pop
push
bound
xchg
inc
pushf
loop
loope
retf
mov
cdq
push
test
cmp
test
pusha
(bad)
lods
pop
sub
sbb
loope
rcr
cmc
out
mov
add
sti
add
ins
inc
bnd
into
test
push
clc
in
cmp
(bad)
call
cmp
test
jae
jno
xchg
or
push
mov
add
movs
mov
inc
add
cmc
cmp
jp
dec
les
out
lods
xchg
shr
xchg
sub
aad
js
or
push
inc
test
fs
sahf
sbb
push
es
mov
xor
mov
stos
gs
push
xor
pop
pushf
test
in
cmp
push
out
in
or
or
mov
sbb
pop
xchg
(bad)
movs
or
lods
sbb
int
jle
and
popa
test
jecxz
xchg
test
pop
and
or
clc
push
push
push
dec
xor
xor
dec
mov
mov
mov
jno
push
and
cmp
inc
lods
pop
into
or
cli
jb
ret
mov
mov
dec
lods
push
(bad)
cmc
lea
rcl
jbe
pusha
aas
shl
shl
mov
clc
cmc
lds
cmp
adc
push
in
jge
or
ret
xchg
push
ins
shl
lea
dec
iret
or
mov
inc
adc
mov
ret
jmp
dec
rcl
iret
adc
daa
pop
jb
mov
cli
int3
fcmovnu
ds
fadd
lock
mov
push
data16
arpl
xchg
add
mov
aad
cmp
scas
call
aas
xchg
pop
rcl
pusha
cmp
cmp
pop
sbb
push
sbb
int
dec
stos
mov
mov
pop
inc
dec
push
lock
inc
cli
mov
out
sti
daa
rcl
test
leave
and
sahf
dec
pop
mov
push
mov
(bad)
mov
adc
jo
cdq
add
out
sub
sti
dec
sahf
jbe
xchg
aam
mov
das
pop
inc
ss
aaa
fdiv
or
jp
xor
or
push
mov
js
mov
mov
cmp
pop
retf
or
cmp
push
mov
sub
mov
dec
in
or
pop
jbe
mov
fisubr
adc
push
call
outs
jle
shl
jns
push
mov
je
stos
clc
xchg
hlt
icebp
repz
inc
bound
cmp
sbb
ins
xchg
cmps
dec
mov
xor
pusha
jecxz
aad
jae
pop
pop
xchg
cli
(bad)
pop
jmp
cmps
xor
in
out
xchg
adc
lods
test
aam
iret
stc
call
loop
or
ficom
or
not
add
(bad)
fidiv
or
mov
sbb
xchg
retf
inc
iret
mov
mov
xor
pop
jge
inc
sti
dec
pop
adc
add
sbb
mov
aas
and
ss
adc
retf
lock
ja
ins
add
mov
push
(bad)
push
repz
bound
adc
jge
xchg
or
int
(bad)
mov
out
fs
push
or
pop
push
js
add
in
inc
imul
push
test
fcom
dec
pusha
in
adc
push
fiadd
add
daa
(bad)
push
sbb
lea
ins
loope
gs
jo
stc
inc
sbb
out
daa
mov
popf
mov
sahf
or
imul
gs
clc
jne
xor
ss
(bad)
adc
jns
cmps
adc
fisubr
jl
sbb
mov
sbb
in
xor
or
xchg
js
mov
movs
cs
std
loope
outs
in
int3
hlt
cmp
xor
and
jmp
cmp
cmp
ds
xor
fiadd
xor
retf
sub
push
push
cmp
in
add
ud1
and
xchg
aas
and
cmp
inc
dec
sbb
bound
(bad)
sbb
mov
jmp
xchg
fcom
xor
rcr
fldenv
dec
inc
cs
push
call
ficomp
mov
stos
jae
sbb
popa
retf
mov
(bad)
(bad)
mov
mov
aaa
mov
xchg
aam
xor
jle
outs
ret
mov
(bad)
(bad)
(bad)
retf
jo
daa
add
mov
xchg
xchg
ret
inc
rol
leave
or
cmp
call
and
cli
dec
inc
jl
sbb
std
mov
mov
mov
mov
dec
and
pop
push
jb
push
retf
fadd
(bad)
cli
(bad)
cmp
test
fld
push
rcl
jo
add
lods
cmp
cmp
pop
(bad)
cmp
xchg
inc
ror
cmp
xor
aaa
sbb
xchg
sub
test
pop
inc
jle
loopne
mov
lods
idiv
cwde
sub
mov
mov
mov
push
fadd
std
jge
cmp
mov
hlt
movs
jmp
mul
or
fwait
cmps
jg
imul
adc
add
push
das
int3
adc
jno
xchg
shr
test
jns
fxch
push
sub
lds
push
sahf
ins
fcomp
fstp
lock
adc
cli
das
push
xchg
jbe
sub
ja
xchg
sti
adc
loopne
jns
leave
outs
out
cdq
and
mov
push
sahf
loop
inc
pop
ror
sub
out
push
cwde
sbb
push
xchg
push
push
data16
adc
loop
(bad)
jp
div
jnp
js
cmp
push
imul
mov
xchg
rcl
xlat
loope
xchg
adc
in
sbb
test
test
mov
scas
dec
push
sub
xor
push
test
adc
jmp
into
push
stos
js
cmp
sbb
push
pusha
icebp
fucomp
xchg
imul
sub
cdq
jmp
mov
add
daa
int
adc
adc
adc
dec
idiv
mov
dec
sbb
sahf
mov
(bad)
adc
pop
jo
cmp
sahf
or
inc
(bad)
fistp
mul
or
sahf
cmps
mov
das
mov
xor
or
sub
je
push
jmp
cwd
shl
std
scas
test
in
jo
push
pop
pop
(bad)
cld
mov
mov
je
das
mov
int3
add
popa
or
int
inc
enter
stos
mov
es
xor
in
pusha
add
dec
not
add
addr16
ds
cmp
sub
(bad)
repz
adc
jb
aam
mov
cwde
xor
rol
or
or
lods
sbb
or
xor
ds
jle
fisub
xchg
and
jb
into
and
(bad)
xchg
and
push
es
pop
aad
pop
pusha
loopne
pop
mov
movs
cmps
les
ret
(bad)
ss
shl
mov
ss
(bad)
aad
icebp
enter
shr
mov
fld
sbb
pop
inc
ins
repnz
jnp
and
jbe
push
ins
inc
ret
retf
lods
into
cmp
iret
out
pusha
pop
mov
stos
(bad)
out
cmp
mov
xor
retf
jmp
sub
je
in
jns
mov
cli
mov
xchg
movs
jl
dec
sbb
dec
stos
inc
fcomp
mov
mov
fwait
xchg
cs
lods
and
push
dec
dec
pop
or
adc
fsub
cmp
sub
pop
or
mov
jnp
jecxz
sbb
dec
fnstsw
shr
jp
jecxz
mov
mov
push
and
sahf
xchg
mov
push
cdq
imul
xchg
push
(bad)
test
rcr
mov
mov
mov
popf
jg
enter
adc
cmp
push
or
inc
jmp
inc
or
popa
pop
jmp
in
or
sti
jbe
or
fwait
outs
aad
pop
pop
xchg
and
loop
jle
aam
cmp
call
push
jecxz
jno
pop
adc
in
xor
sub
aaa
ret
test
xchg
lods
repnz
sbb
or
aas
and
mov
cli
mov
cli
mov
(bad)
out
mov
push
movs
sbb
xor
jo
movs
push
inc
movs
fucomip
pusha
mov
popa
push
loop
or
sbb
dec
pop
jmp
jns
add
pop
fiadd
mov
int
xchg
sub
in
mov
cmc
dec
mov
std
push
sbb
cmp
and
call
fcmovb
sub
test
xchg
dec
dec
ins
or
xchg
stos
and
inc
pop
pusha
enter
cwde
hlt
inc
dec
push
or
and
inc
scas
test
mov
imul
mov
cmp
mov
(bad)
ror
or
aad
imul
adc
jno
int
cli
neg
dec
inc
pop
mov
ins
mov
pop
data16
daa
sub
sbb
cli
add
cmp
push
adc
push
jecxz
jo
daa
test
(bad)
fsub
into
aaa
(bad)
es
jne
pop
cwde
inc
sbb
cmp
dec
mov
dec
mov
test
(bad)
and
jmp
mov
jbe
push
test
xchg
stc
shr
add
or
arpl
pop
dec
dec
jbe
jmp
stc
in
punpckhbw
inc
and
adc
stc
dec
or
dec
dec
pushf
sub
dec
inc
ja
mov
jmp
iret
ins
scas
ja
mov
scas
push
sub
or
push
pop
mov
jecxz
and
cmp
int
mov
in
push
repnz
mov
dec
mov
xchg
sbb
lods
mov
adc
lock
mov
push
fidiv
cmp
stos
inc
out
dec
mov
jp
dec
xchg
sbb
jle
ret
movs
jmp
fst
add
ret
in
xchg
loopne
dec
push
imul
sub
fsub
std
pusha
mov
adc
mov
stc
ror
ss
dec
or
sub
cs
stc
inc
cmps
sbb
ret
fist
dec
dec
xchg
ja
and
imul
pop
jae
sti
aam
test
and
pop
movs
jge
fbstp
in
sbb
cdq
arpl
call
mov
rol
arpl
sub
lahf
aas
fimul
(bad)
pop
inc
and
or
jmp
(bad)
pop
ins
sub
scas
inc
ins
loop
cmps
sti
int
test
and
les
rcl
test
out
jb
aaa
push
jnp
loop
scas
inc
push
pop
pop
mov
adc
rol
cmp
xor
loop
dec
dec
repz
(bad)
jl
addr16
mov
call
mov
jno
ja
inc
stos
pushf
stos
aaa
out
pop
mov
idiv
mov
aam
jge
ror
cld
push
pop
mov
cmp
sbb
cmp
inc
loope
push
popf
inc
popf
and
call
and
into
in
stos
cdq
iret
js
icebp
pop
call
ds
pop
outs
nop
mov
push
stos
jns
xchg
stos
retf
pop
cs
jmp
(bad)
std
add
and
adc
pop
pushf
push
in
sub
(bad)
popf
fdiv
jmp
rcl
cli
cmp
out
call
mov
adc
xchg
jb
lds
jp
sbb
cmp
jno
pop
jg
jnp
dec
pop
lods
pop
int3
pop
lods
loop
pop
mov
push
shr
loope
popf
cmp
xor
push
mov
pushf
mov
fild
ror
and
dec
aas
mov
pushf
out
ds
sar
cmp
ja
sahf
or
fidiv
fstp
jg
xchg
mov
adc
daa
inc
sub
mov
mov
movs
xchg
outs
push
cmc
sbb
mov
cdq
mov
or
cmp
(bad)
jmp
jecxz
cli
adc
arpl
xor
jb
sar
mov
shl
bound
shl
sub
xlat
mov
inc
int
(bad)
test
loop
and
push
pop
mov
arpl
rcl
(bad)
mov
push
adc
std
pushf
js
cmps
into
xchg
mov
nop
fwait
ror
cli
into
xor
aas
mov
add
mov
rcl
push
dec
mov
push
pop
or
pop
push
and
inc
shr
repz
lock
mov
aaa
cmp
pushf
arpl
std
shr
dec
(bad)
std
leave
xchg
and
stos
push
sbb
pop
jbe
sub
in
cdq
mov
enter
sbb
xor
push
sahf
mov
cmps
or
push
xchg
mov
cdq
out
out
lods
pop
outs
push
dec
stos
jle
sbb
in
test
dec
mov
xor
fcmovnu
jecxz
pop
pop
(bad)
mov
movs
xor
add
addr16
adc
jne
inc
(bad)
pop
retf
loope
jns
ins
cmps
adc
mov
or
jmp
call
aas
call
jle
mov
pop
mov
fist
(bad)
int3
inc
xor
pop
sbb
inc
shl
mov
or
mov
and
int
jl
fnstenv
(bad)
jnp
ret
lahf
cli
mov
xor
(bad)
jne
xchg
rol
adc
xchg
push
and
icebp
test
cmp
out
cs
sub
adc
sub
dec
aas
and
int3
aaa
in
test
pop
pop
mul
push
push
and
pop
pop
call
(bad)
shl
xor
cld
mov
(bad)
mov
mov
xchg
sahf
and
int3
es
and
push
push
dec
inc
cmp
sbb
and
ftst
pusha
std
jns
mov
sub
sub
cmp
and
mov
das
lods
push
pop
mov
rol
inc
cwde
sbb
in
mov
sbb
pop
pmaxub
add
sbb
lods
cmp
or
lods
push
and
pop
fldcw
sbb
and
clc
scas
sub
cmp
cld
mov
and
jl
leave
mov
sub
movs
ret
pop
cmc
or
or
ins
mov
mov
add
or
sub
jne
lea
repnz
sahf
(bad)
imul
mov
bound
push
push
mov
pop
add
repz
jbe
jnp
cmp
(bad)
mov
xchg
dec
jg
pop
jo
xchg
call
pop
or
dec
mov
mov
pusha
xchg
ret
icebp
pusha
mov
or
loop
cmp
iret
pop
mov
inc
xor
hlt
leave
and
(bad)
sbb
stos
xchg
push
les
mov
xchg
repz
mov
and
dec
cmps
hlt
(bad)
cdq
iret
shr
stos
push
fimul
sbb
call
(bad)
popf
sbb
jnp
dec
mov
xchg
lods
cmp
(bad)
rcr
sar
cld
xchg
loop
pop
dec
or
inc
(bad)
ins
and
adc
sti
adc
pop
mov
xchg
xchg
mov
sub
aas
mov
jecxz
xchg
jae
outs
fimul
or
jle
ret
gs
cmp
test
cmp
stos
stos
cmp
and
in
popf
push
inc
ins
fnstcw
sbb
out
jmp
nop
aaa
mov
in
fwait
mov
adc
add
push
push
adc
and
es
shl
pop
pop
push
aad
test
not
es
test
mov
mov
adc
xor
outs
jne
sub
mov
mov
aad
cmp
rol
pop
mov
outs
jno
out
rcl
push
cmp
retf
pop
add
outs
call
out
dec
xlat
sub
jb
jae
fs
mov
inc
retf
dec
mov
and
push
mov
(bad)
xor
push
stos
mov
add
imul
std
test
mov
in
mov
ins
xor
jmp
dec
inc
and
pusha
push
daa
jle
add
push
push
call
dec
xchg
in
lock
pop
int
inc
es
inc
push
xor
int
sbb
cmp
dec
mov
ror
test
bound
int
test
pop
frndint
repz
imul
xchg
pop
outs
jg
imul
shr
push
shl
hlt
nop
jmp
cwde
xchg
or
aaa
push
push
cmp
lods
sub
mov
or
xchg
xor
mul
ins
push
jl
rcl
iret
fcmovbe
push
push
jb
cli
xor
fiadd
mov
sbb
in
stc
aaa
fistp
sub
pop
int
xchg
mov
not
mov
sbb
fldenv
fsubr
test
pop
loope
mov
or
add
scas
lahf
loopne
push
mov
movs
push
xor
push
cli
dec
lock
cmc
mov
(bad)
dec
cwde
pop
mov
push
add
cmc
mov
arpl
psrad
(bad)
mov
repnz
inc
xchg
or
icebp
popa
jb
(bad)
pop
adc
popf
sar
test
push
popf
jp
push
adc
cmp
push
mov
arpl
jle
ds
jno
dec
fnstenv
pop
mov
dec
pop
and
mov
xchg
inc
push
push
cmps
adc
inc
mov
ins
sbb
jmp
push
rcl
leave
xor
jp
push
xor
loop
outs
sbb
call
outs
xor
fstp
xchg
(bad)
mov
pop
push
out
inc
stos
loopne
xchg
pmuludq
push
pushf
outs
outs
ret
shl
dec
pushf
arpl
adc
bnd
dec
or
clc
int3
or
dec
sub
dec
out
cli
cdq
out
daa
out
(bad)
add
xor
mov
inc
sbb
and
js
pop
bound
mov
shr
dec
mov
mov
cwde
jmp
ret
das
mov
popf
icebp
rcr
fcmovu
jecxz
dec
xor
mov
scas
push
out
inc
cmp
rcl
inc
rol
pop
mov
jmp
call
pop
xchg
and
iret
mov
dec
xor
mov
bts
loope
(bad)
xor
mov
pop
fst
push
add
xchg
fdiv
lea
jmp
dec
scas
adc
stos
ss
and
das
or
push
mov
sub
daa
xchg
ins
mov
xchg
call
retf
push
xor
jmp
push
fiadd
retf
inc
inc
or
push
cmps
jp
jg
pop
mov
shr
push
sar
inc
push
jmp
push
add
pop
mov
xchg
addr16
or
outs
(bad)
ja
mov
push
push
jbe
imul
fwait
cmc
xchg
inc
add
adc
add
xchg
das
ds
cwde
fstp
jg
fidivr
ucomiss
je
push
mov
out
aas
sub
in
js
xor
sbb
cmps
and
mov
xchg
push
mov
mov
xor
xchg
pop
mov
(bad)
cmc
hlt
in
pop
or
sub
jne
mov
pop
mov
adc
cmps
test
or
fidivr
fdivr
mov
lods
adc
or
call
in
mov
out
or
pop
arpl
jmp
leave
fdivr
jbe
mov
push
or
jmp
pop
sbb
in
xlat
or
xor
(bad)
jl
outs
pop
test
jo
mov
retf
pop
add
pop
out
js
es
inc
mov
popa
nop
in
shl
jbe
add
stc
pop
cmp
fidivr
pop
loope
bound
movs
jecxz
punpckhdq
sub
fadd
xchg
out
test
pop
test
ret
(bad)
bound
cli
lock
lds
sbb
and
lahf
fnstenv
add
sbb
jge
sbb
lock
dec
sti
jnp
iret
mov
int
add
enter
fcom
pop
mov
cmp
cmp
inc
ror
sub
and
ins
dec
mov
xchg
shl
push
cmp
fwait
xchg
xor
repz
ds
or
ret
or
xor
adc
cmp
push
push
lods
scas
in
push
retf
add
add
fimul
sti
dec
mov
dec
cmc
cmp
pop
imul
lods
mov
push
pusha
cmp
add
adc
jg
inc
xor
lods
int
(bad)
loop
enter
fsub
push
xor
adc
jo
inc
and
sbb
mov
pop
mov
xlat
and
push
inc
jmp
in
arpl
xor
xchg
pop
es
fstp
dec
cs
popf
mov
and
aad
jnp
pop
shr
out
inc
in
push
jne
adc
pop
pop
push
dec
and
lods
fwait
xor
push
das
mov
gs
dec
pusha
adc
sbb
mov
dec
cmps
(bad)
sbb
xchg
xchg
pop
inc
loopne
dec
hlt
and
xchg
(bad)
cmps
dec
inc
test
(bad)
mov
fwait
outs
push
sub
pop
mov
pop
push
sbb
lahf
fcomip
ret
cmp
push
aas
stc
repz
ins
mov
jg
pop
mov
rcl
stos
sbb
mov
mov
lock
adc
arpl
jecxz
mov
dec
mov
sub
mov
sub
ja
sub
xor
(bad)
aam
dec
mov
pop
push
mov
pop
shl
ins
mov
or
bound
sbb
inc
gs
xor
mov
sbb
int3
inc
xchg
test
xlat
inc
shl
push
and
imul
div
addr16
arpl
fdivrp
pop
stos
out
inc
jge
mov
lahf
arpl
push
push
call
sar
ins
dec
cld
nop
shr
cmp
cdq
inc
(bad)
(bad)
dec
sub
aad
push
mov
out
or
call
jae
jmp
cmp
cmp
mov
stos
popa
dec
sbb
sub
addr16
aad
and
pop
and
adc
popa
jmp
or
stos
sbb
dec
mov
xor
jmp
mov
dec
mov
ja
jns
cmps
repz
push
in
int3
fld
mul
inc
mov
ror
das
repz
inc
jno
inc
out
int
jb
fisub
jo
lea
inc
pop
push
hlt
inc
std
dec
or
popf
push
push
sar
mov
push
xchg
leave
pop
sub
and
(bad)
or
mov
and
dec
fxch
pop
mov
es
mov
cmc
mov
xchg
inc
pop
push
sti
xchg
sub
push
aad
out
mov
pusha
imul
gs
and
inc
cmp
pop
inc
adc
retf
arpl
es
into
call
bound
mov
mov
mov
in
das
loop
aad
outs
cmp
mov
loopne
jne
jmp
aad
mov
lods
or
xor
loop
in
and
xor
pop
mov
mov
xchg
xor
pushf
jns
sbb
sub
adc
mov
shr
add
sbb
sbb
add
out
sub
mov
popf
int
cwde
popf
fisub
dec
add
xchg
imul
out
pop
mov
add
arpl
sti
(bad)
mov
or
add
scas
xor
sbb
adc
xchg
pusha
and
imul
mov
push
add
push
xor
add
inc
ins
adc
adc
pop
or
inc
mov
dec
xlat
pop
jp
fbstp
add
jnp
das
pop
imul
(bad)
shr
sbb
or
int
outs
mov
ret
ins
pusha
popf
into
jmp
pop
inc
mov
xor
stc
cs
push
fs
movs
cwde
or
xlat
cwde
scas
scas
push
mov
jae
in
jp
jp
sub
aam
mov
mov
pop
mov
test
addr16
sbb
add
xchg
imul
push
dec
push
xor
js
neg
push
pop
inc
lock
iret
(bad)
icebp
mov
and
mov
das
sub
out
out
xchg
ss
xor
push
fidiv
cmp
and
loope
cwde
dec
inc
inc
pop
lods
sub
pop
repnz
and
and
adc
xchg
(bad)
aad
jns
jns
out
stos
fwait
lods
call
sub
adc
push
int3
fwait
lahf
pop
mov
mul
pop
push
lahf
loopne
jne
imul
cmps
inc
ins
push
loope
loop
lea
mov
(bad)
scas
sbb
rcr
lahf
js
cmp
mov
xor
jg
hlt
inc
and
add
out
adc
mov
xor
push
popf
sbb
out
scas
mov
lods
test
xchg
sub
or
stc
push
pop
lock
mov
add
jle
and
mov
pop
xchg
inc
and
mov
shl
adc
adc
push
and
stc
test
fldl2t
jmp
xchg
mov
dec
sar
ds
sub
mov
dec
and
arpl
ja
sbb
inc
addr16
ficomp
jl
cld
and
adc
aad
retf
mov
push
and
nop
pop
fsub
adc
push
das
mov
jbe
sub
and
dec
or
je
or
inc
or
jg
inc
xor
test
repnz
cmp
sar
hlt
xchg
int
dec
dec
fistp
aaa
cmc
push
mov
sahf
adc
jb
outs
add
add
xor
add
adc
mov
shl
test
xor
mov
sti
leave
fadd
mov
and
imul
xchg
fmul
lods
fisttp
add
jb
push
out
sub
arpl
adc
fsubr
retf
(bad)
jne
das
or
pop
in
cdq
jno
pusha
mov
xor
pop
loopne
mov
xchg
and
sbb
ins
push
pop
int
mov
sub
repnz
daa
add
add
rcl
aad
dec
cmp
test
jg
popf
adc
sub
pop
mov
push
dec
aad
or
xchg
xchg
clc
or
push
bound
cli
sar
test
lock
jle
jns
push
sti
mov
sbb
dec
push
xor
fstp
bound
das
shl
into
push
les
adc
shl
cmp
add
adc
mov
shl
stc
pop
jo
sahf
sub
cmp
push
sub
in
retf
daa
inc
mov
sub
and
and
inc
cmps
sahf
mov
mov
je
mov
xor
xor
dec
mov
test
sti
fs
js
retf
sbb
xchg
mov
sub
loope
sbb
into
lahf
xchg
pushf
xchg
(bad)
jmp
add
test
dec
mov
sub
(bad)
int
xor
enter
mov
int
int
cmp
je
imul
fs
int
in
mov
loope
adc
pop
cli
sub
dec
out
mov
mov
out
adc
callw
(bad)
cmc
xlat
jnp
clc
mov
sub
lock
mov
neg
fst
and
mov
stos
xlat
adc
sub
mov
cmp
and
ins
add
xchg
sahf
jmp
xchg
es
cmp
xchg
imul
adc
stc
into
cmps
pop
aad
xor
and
mov
cmp
aas
fnstcw
add
ins
xchg
push
lahf
mov
mov
imul
pop
(bad)
addr16
pusha
jecxz
mov
add
xlat
retf
sub
rcl
pop
pop
(bad)
cmp
inc
fistp
xchg
mov
xor
jle
nop
in
mov
pop
outs
dec
lahf
out
retf
cld
das
jno
jl
je
scas
imul
xor
xchg
mov
mov
lds
(bad)
out
jecxz
jo
jae
push
sub
enter
jbe
enter
leave
div
pop
dec
pop
(bad)
fmul
je
mov
jns
pop
gs
push
dec
jne
pop
shr
aas
outs
xchg
and
mov
int3
jmp
scas
div
sbb
mov
mov
fsub
mov
push
outs
out
in
dec
mov
mov
icebp
dec
push
sbb
outs
retf
inc
xor
or
mov
shr
mov
pop
push
and
dec
sahf
cmp
and
in
pop
test
push
xor
nop
lods
stc
sahf
xchg
xor
sub
pop
mov
adc
jle
mov
adc
ret
jnp
or
xor
sub
mov
js
out
ins
mov
push
lods
pop
or
cwde
adc
dec
cmp
inc
ror
(bad)
jp
inc
mov
mov
xor
cdq
xor
fcom
ss
jp
cmp
dec
mov
dec
mov
or
ja
int3
mov
mov
dec
fimul
pop
jno
stos
out
cmc
in
rcr
mov
cmp
push
shl
mov
hlt
ret
arpl
mov
call
mov
ret
jno
(bad)
je
loop
mov
mov
in
outs
retf
(bad)
loope
mov
out
jg
hlt
hlt
idiv
sbb
mov
cmps
pusha
inc
(bad)
into
(bad)
(bad)
pop
xchg
scas
shr
pop
test
and
jecxz
jae
retf
scas
jl
add
lea
mov
xchg
push
or
mov
push
sahf
cmp
mov
mov
xchg
xor
inc
repnz
xor
pop
xchg
adc
and
mov
ja
(bad)
fnsave
mov
adc
(bad)
xchg
adc
div
outs
xchg
sbb
ret
paddw
and
jmp
imul
test
inc
js
cld
cdq
aaa
adc
or
jb
mov
push
jp
push
xchg
cmp
sub
sbb
xchg
out
adc
out
push
sbb
inc
ficom
cmps
mov
addr16
outs
pop
and
mov
adc
dec
arpl
sub
das
ja
jp
xchg
dec
mov
stos
mov
mul
in
jb
sub
mov
(bad)
into
(bad)
cmp
aas
mov
mov
mov
cmp
or
dec
add
test
movs
pop
ficom
inc
ficomp
and
(bad)
mov
test
cmp
cdq
mov
loope
aam
les
and
and
xor
scas
fisttp
jo
jno
stc
out
dec
(bad)
adc
outs
sbb
sub
fwait
jg
add
mov
cmp
retf
popa
mov
xor
mov
dec
or
or
xchg
frstor
stc
pushf
mov
punpckhbw
push
ja
inc
sub
inc
mov
(bad)
out
scas
add
(bad)
fnop
and
inc
xor
add
adc
xchg
xchg
arpl
and
nop
sbb
xchg
push
pop
adc
int3
pop
add
adc
test
jo
adc
xor
mov
pushf
cs
jb
adc
pop
mov
mov
(bad)
repnz
pusha
inc
xor
xor
push
dec
imul
arpl
xchg
mov
jmp
cs
inc
jo
adc
jns
inc
sbb
cld
(bad)
mov
jb
pop
bound
(bad)
push
test
into
mov
stos
sub
stc
out
mov
inc
mov
mov
sbb
mov
add
es
into
pop
aad
and
mov
loop
sub
inc
sub
cli
or
lea
jae
dec
inc
sub
jecxz
rcr
in
add
push
wrmsr
mov
adc
or
scas
call
jno
pop
mov
scas
ds
cld
fdivr
mov
pushf
hlt
mov
inc
mov
xor
adc
mov
cmp
ret
(bad)
stos
sbb
inc
movs
or
inc
jmp
clc
sub
mov
call
scas
inc
dec
cmp
cmp
push
hlt
cmp
add
inc
(bad)
xor
sub
test
movs
gs
jg
or
xchg
cwde
mov
push
inc
scas
ja
add
push
dec
fild
jp
mov
dec
jbe
fbld
ds
jle
xchg
dec
inc
mov
push
das
lock
jmp
cmp
pushf
push
les
mov
mov
popa
dec
in
xor
cmp
dec
mov
int3
push
fistp
inc
daa
lds
ret
xor
lea
sbb
cmp
add
mov
mov
and
stos
xchg
call
mov
loop
or
xor
sub
les
in
fs
mov
jecxz
fs
lock
push
mov
and
or
sbb
xchg
cli
and
lods
ret
shr
mov
cmp
dec
push
in
xor
lds
cs
stos
cdq
cwde
mov
pusha
mov
xchg
xchg
js
inc
jno
mov
pop
retf
sbb
or
jne
sbb
loop
cmp
(bad)
js
clc
test
push
mov
(bad)
xor
adc
enter
push
or
fdiv
add
movs
sar
inc
inc
mov
mov
pop
icebp
and
js
inc
mov
scas
and
cmps
mov
(bad)
std
mov
jmp
leave
and
test
addr16
push
ja
loope
retf
loopne
push
xor
xchg
nop
ror
ror
daa
mov
rcr
pop
jo
ja
imul
or
stc
xchg
call
cdq
xchg
loop
xchg
push
sub
ins
nop
mov
loop
mov
daa
fcom
das
in
aas
rcr
pop
mov
cmc
cmp
ds
dec
dec
rol
pop
jmp
mov
mov
(bad)
sbb
sub
cmp
xchg
cmp
inc
add
in
jmp
jge
mov
sub
jae
jo
mov
ror
ror
xchg
rol
xor
out
mov
ins
fisttp
repz
sbb
xchg
sub
jge
or
nop
or
out
or
push
cmp
popa
cmp
inc
sahf
xor
fidiv
lods
inc
xor
or
mov
mov
adc
add
test
loopne
dec
dec
or
cmp
movs
gs
xor
cmp
xchg
pop
xor
fucom
sub
cmps
push
test
dec
mov
pop
mov
jae
cmps
jg
pop
cmp
in
mov
mov
(bad)
adc
push
and
test
add
cmp
mov
dec
add
xor
and
xchg
lods
mov
mov
xor
jp
pushf
aad
and
scas
sbb
dec
clc
xor
imul
repz
fadd
sub
icebp
gs
and
ja
sbb
jmp
push
aam
lgs
pop
jp
retf
xchg
sti
mov
cmp
test
xor
jmp
in
call
aas
sbb
aam
jp
mov
sti
fisttp
pop
push
xchg
loope
sub
mov
repz
shr
enter
push
pop
mov
mov
mov
xor
fimul
pop
daa
movs
je
ins
sbb
pop
loope
lods
and
call
cdq
outs
bound
sar
les
ds
call
jmp
and
in
loope
push
xchg
mov
xchg
vpcmpgtw
inc
(bad)
dec
and
or
mov
mov
mov
loop
mov
push
and
aad
sbb
sub
and
retf
test
mov
add
fwait
sbb
mov
test
lock
movs
inc
cmp
std
iret
retf
xchg
jge
test
add
test
retf
add
push
xor
inc
icebp
cmps
out
mov
sub
test
jle
mov
lea
cmps
sub
neg
outs
ins
and
mov
adc
cdq
jno
aad
loop
mov
dec
push
cli
push
xor
cmc
push
xchg
pop
adc
cmp
repnz
push
in
jns
pop
cmp
loop
es
stc
xlat
mov
pop
or
aam
retf
mov
cmp
cmp
fimul
iret
mov
fst
int3
xor
dec
cmp
cmc
stos
test
jge
or
dec
inc
(bad)
cmc
mov
xchg
fistp
in
call
gs
loope
cmp
cmp
popf
pmullw
test
lea
mov
inc
repnz
xchg
dec
sbb
jne
add
jno
jae
popf
dec
je
loope
pop
clc
pop
sub
mov
les
cmp
xor
xrelease
push
and
jns
push
in
loope
std
xor
pop
mov
add
mov
repz
mov
add
mov
push
add
test
dec
inc
mov
in
ret
test
pop
loop
sub
(bad)
movs
jb
xor
xor
jbe
or
int3
sbb
or
push
je
inc
std
scas
xor
gs
mov
loopne
xlat
popf
std
sub
inc
adc
imul
dec
adc
loope
fwait
mov
je
cmp
repz
stos
pop
cmp
xchg
repz
cmp
dec
fbld
aad
xchg
sub
pusha
cli
scas
idiv
dec
dec
shl
stc
shl
sti
sub
and
and
in
fistp
xchg
and
iret
(bad)
and
add
xchg
or
es
adc
xchg
mov
adc
mov
shl
pop
cmp
sub
ja
add
mov
daa
je
outs
add
sbb
test
push
retf
jno
pop
push
pop
or
rcr
pop
pop
cld
sub
jle
sbb
or
mov
push
ins
jecxz
in
jle
movs
xor
mov
cmp
ins
sub
loop
or
call
ins
pop
in
jge
je
rcr
pop
push
popa
retf
mov
xchg
fs
in
jle
sub
mov
iret
mov
sbb
push
ds
xchg
icebp
cmps
frstor
repz
push
adc
mov
sbb
paddb
push
call
dec
ret
mov
adc
mov
cmps
xchg
in
mov
mov
sti
sub
pop
push
dec
sbb
jge
cli
stos
inc
and
inc
sub
mov
push
jg
or
push
lds
rol
push
xor
xchg
arpl
xchg
add
ficomp
syscall
mov
pop
cmp
ror
inc
mov
or
lods
shl
mov
std
pop
dec
hlt
adc
popa
cs
retf
jmp
cld
std
dec
cmp
outs
mov
dec
inc
dec
inc
and
jns
and
ficom
jmp
leave
push
out
int3
(bad)
lods
lock
dec
ss
and
pop
cwde
scas
mov
and
mov
add
out
dec
mov
or
or
mov
rcl
aas
push
push
mov
xchg
test
inc
mov
lea
fwait
and
ror
pop
cdq
imul
mov
adc
or
das
xchg
mov
test
mov
lea
shl
test
cld
jmp
jae
push
setno
ss
jecxz
inc
adc
(bad)
sub
sti
sub
xchg
sub
jno
(bad)
or
cmp
xor
inc
xchg
enter
fild
js
adc
les
or
jb
jg
adc
cmp
and
inc
movs
add
ins
jne
or
pop
ja
movs
xor
sub
addr16
push
jns
std
jecxz
mov
retf
jae
jbe
sar
mov
and
ds
imul
adc
cwde
mov
cmc
add
push
xchg
movs
mov
in
daa
xor
fld
imul
cmps
push
push
dec
inc
repnz
push
ins
jle
push
sbb
fcmovnb
and
xchg
jno
in
(bad)
(bad)
sbb
loop
dec
pop
std
ret
jo
dec
int
fist
les
cmp
test
mov
fcom
pop
hlt
stos
inc
pushf
pop
gs
cmp
inc
xor
rcr
add
mov
in
hlt
add
mov
fcomp
int3
mov
retf
pop
jmp
xor
pop
(bad)
test
inc
add
std
mov
cmovbe
jmp
loopne
mov
push
inc
std
in
dec
mov
xchg
cmp
outs
(bad)
or
ret
jp
rol
pop
fld
jo
add
adc
ror
stc
int
int
mov
lea
cs
and
jmp
ja
mov
sub
mov
xor
fnstsw
mov
shl
scas
ins
in
sbb
mov
mov
cmp
push
jnp
mov
(bad)
pop
sub
icebp
pusha
fs
jl
push
xchg
shr
or
and
inc
mov
xor
xor
popa
ss
ret
sub
xchg
sbb
into
mov
push
push
mov
xor
leave
gs
cld
retf
stos
out
push
and
sbb
imul
push
push
call
aas
sub
out
int3
(bad)
ror
push
adc
cli
idiv
mov
jle
mov
cmp
lahf
jns
int
lock
push
sbb
je
(bad)
pop
lock
adc
cmps
jo
popf
mov
out
movs
shl
pop
idiv
movs
out
ins
or
dec
or
xlat
xchg
ret
and
and
ja
call
ret
shl
cmps
imul
test
lds
retf
lock
push
sub
xchg
outs
push
jge
aad
popa
xchg
xor
inc
mov
mov
ror
or
fist
loop
fbstp
cmps
fs
cmps
js
push
mov
or
arpl
sar
scas
sbb
inc
pop
ret
jge
(bad)
mul
stos
lods
or
push
ss
push
jmp
mov
lea
xor
test
loope
sub
retf
sub
retf
jle
rcr
dec
mov
sahf
and
leave
cld
rol
jmp
push
dec
mov
pusha
pop
fcomp
movs
(bad)
ins
jg
sti
sbb
xchg
mov
mov
push
jne
ins
ins
fwait
adc
xor
aam
cmps
xor
xchg
or
mov
in
dec
xor
ret
cmp
sbb
inc
xor
js
fs
iret
push
pusha
scas
ret
push
out
test
or
icebp
mov
mul
jmp
mov
push
arpl
test
push
jne
xor
pop
mov
mov
aad
cmps
(bad)
in
ja
dec
sub
xor
pop
popa
mov
mov
into
(bad)
fisub
pop
jl
sub
mov
xchg
outs
scas
cmp
lea
cmp
pop
sub
ins
and
xor
cmp
or
mov
adc
das
outs
outs
movs
jbe
clc
loop
add
jmp
jge
jnp
cmp
lods
out
or
out
jg
outs
loopne
movs
dec
jno
(bad)
push
pop
mov
pop
push
ins
lea
es
xchg
outs
and
push
and
xor
mov
pop
es
xchg
dec
cmp
ins
mov
sbb
neg
ror
ins
jl
sti
ss
sbb
fisub
cmp
mov
jo
pop
repz
dec
lahf
pop
ss
xchg
xchg
cmp
das
out
lahf
retf
pop
push
dec
inc
lahf
adc
dec
add
mov
int
aam
push
and
icebp
inc
cmp
mov
dec
mov
mov
jb
xor
fadd
dec
sub
cld
popf
cmp
mov
sub
push
fdiv
popf
push
fimul
loope
dec
stos
xor
iret
mov
push
js
mov
xchg
mov
mov
repnz
add
pusha
test
ins
(bad)
sbb
shl
mov
or
pop
ja
lahf
je
jbe
lods
jne
std
pop
ret
loop
pop
inc
adc
imul
pop
cmp
fisubr
sub
and
sub
mov
xor
je
test
sub
inc
rcl
int3
aam
pop
fs
pop
jp
push
and
xchg
xchg
jmp
mov
les
cmp
pop
jl
jmp
jo
pop
(bad)
out
ins
inc
test
cmp
arpl
sti
in
ror
push
retf
lods
mov
mov
xor
clc
mov
sbb
fstp
std
xchg
push
push
rcr
das
mov
jecxz
jae
jns
movs
mov
or
repz
fidivr
jno
cmp
neg
mov
call
(bad)
jle
inc
rcl
in
dec
dec
sub
in
adc
lods
push
xor
scas
cmp
loope
jmp
inc
cmp
dec
and
sub
imul
sub
loopne
inc
add
cmc
repnz
and
pop
dec
in
pop
aaa
call
callw
test
dec
arpl
ror
int3
sbb
rcl
push
je
pop
lods
dec
sti
mov
cmovp
fnstsw
cmp
loope
dec
iret
test
fisub
fwait
jg
cwde
sbb
jecxz
or
je
stc
scas
jmp
and
jmp
icebp
and
and
fisttp
and
in
mov
lods
adc
outs
mov
and
mov
push
cmps
cmp
fstp
loopne
icebp
daa
ins
jmp
cmp
push
dec
addr16
bound
ins
mov
push
mov
sbb
clc
(bad)
pop
nop
fwait
aam
mov
jle
out
aaa
add
push
daa
test
jmp
cmp
movs
sti
mov
mov
cmp
(bad)
mov
loopne
lds
and
fnstenv
pop
add
outs
mov
fcom
movs
das
push
xchg
test
sub
jbe
mov
xchg
push
push
cmp
cwde
xor
pop
push
and
cmp
jecxz
fcmovne
scas
js
neg
shl
mov
sbb
mov
dec
fild
mov
cs
sahf
out
and
mov
into
fld
push
adc
mov
mov
mov
ja
add
cli
shr
and
je
shl
mov
inc
or
lds
jecxz
xor
jbe
pop
or
pop
pop
mov
cwde
add
js
sub
xor
daa
dec
mov
retf
sub
mov
xchg
outs
mov
stos
mov
retf
test
xchg
mov
aad
in
hlt
push
loopne
(bad)
push
mov
icebp
xor
jns
shl
outs
xor
aad
mov
sbb
mov
pop
mov
adc
lds
mov
cmp
imul
ja
loopne
js
cmp
int3
aaa
push
xchg
aaa
push
stc
call
sbb
lods
add
retfw
sbb
sub
mov
(bad)
mov
stc
ret
ss
or
or
rcl
fsub
cmps
dec
push
push
push
lods
mov
fsub
test
sbb
pop
jge
shl
pop
xor
mov
cmp
repnz
sub
cld
fcomp
jl
adc
std
xchg
pop
leave
stos
jp
std
push
ret
adc
jb
mov
adc
dec
and
int3
jnp
sbb
dec
mov
cmps
inc
aam
add
mov
adc
or
push
vmwrite
mov
jne
adc
cwde
sub
adc
cmps
fnstsw
inc
mov
add
jb
mov
xchg
ret
xchg
jbe
int
inc
jne
mov
and
loope
mov
(bad)
fistp
jnp
scas
outs
retf
lods
mov
aad
xchg
shl
es
rol
xchg
(bad)
popa
and
dec
cmp
pushf
xchg
push
push
lods
jae
pushf
rcl
(bad)
mov
sub
(bad)
fsub
int3
mov
mov
jl
stos
movs
cmp
xchg
into
out
jle
retf
pop
into
push
outs
fmulp
push
(bad)
pop
fs
out
je
cdq
cmps
lods
leave
push
scas
mov
(bad)
xor
push
pop
imul
icebp
mul
push
fs
mov
pop
out
ins
popa
xor
lods
pop
sbb
loope
jnp
dec
jg
dec
hlt
retf
ins
std
mov
fist
cmp
inc
xor
fdivr
xchg
mov
popf
fs
mov
adc
in
dec
clc
(bad)
nop
and
test
in
inc
inc
and
or
iret
sub
ret
inc
clc
inc
int
sub
fs
outs
leave
fs
ins
fstp
jge
call
rcr
xchg
cmc
xor
int3
cmps
inc
daa
repnz
(bad)
push
adc
aad
push
inc
fldenv
rcl
jnp
inc
xchg
mov
adc
sub
and
mov
sar
xor
jb
lods
fs
lock
push
dec
std
mov
out
scas
out
xchg
jno
nop
push
push
or
mov
cmc
and
or
mov
data16
push
out
sti
sbb
hlt
test
push
xchg
cmps
test
xor
add
pop
loope
mov
fdivr
neg
xlat
sub
inc
add
jmp
xor
mov
aaa
adc
sti
xchg
jp
dec
aad
jle
push
push
enter
mov
add
xchg
sub
push
pop
mov
jbe
cmp
ja
and
not
mov
addr16
push
add
stc
movs
xchg
sbb
push
bound
pop
cmps
dec
dec
mov
mov
mov
daa
data16
loop
mov
cmp
sbb
lods
shl
mov
out
push
mov
or
pop
dec
inc
cmps
inc
or
fs
xchg
das
mov
call
ret
ror
fild
dec
dec
rcl
mov
dec
pushf
cmp
outs
(bad)
ja
jp
push
sar
mov
pop
mov
or
jp
(bad)
fnstsw
xor
or
into
hlt
(bad)
(bad)
out
sub
sbb
xchg
in
fs
iret
pop
jb
push
(bad)
addps
scas
and
ja
sbb
mov
push
outs
mov
mov
inc
xor
add
jae
je
call
mov
into
retf
cmc
rcr
mov
mov
push
sbb
popf
(bad)
loopne
call
and
fstp
enter
in
ins
ins
or
xchg
lods
mov
arpl
sub
xchg
cmp
jp
into
cmp
jle
aas
pop
mov
repnz
fsubr
(bad)
jne
lods
leave
mov
(bad)
push
jb
jae
test
out
out
push
jmp
xchg
xchg
ja
push
sub
stos
shr
mov
stos
sti
fisubr
inc
sbb
iret
(bad)
loope
ins
dec
xchg
inc
or
add
iret
int3
xchg
push
inc
xchg
dec
test
jg
push
mov
inc
movs
repz
outs
mov
retf
scas
inc
(bad)
js
jg
sub
mov
jo
push
xchg
mov
jmp
leave
adc
les
mov
call
ror
mul
pop
dec
ror
jbe
push
mov
cdq
mov
popa
je
stos
jnp
test
retf
mov
jg
mov
push
outs
mov
dec
jb
or
mov
add
loop
add
adc
adc
rol
mov
test
mov
movs
xchg
test
or
and
inc
loop
jnp
imul
push
cmp
loopne
lock
pop
jecxz
(bad)
cmp
xchg
xchg
mov
popf
bound
jo
ret
aas
jbe
jmp
jg
pop
pop
cwde
cmp
push
ins
mov
arpl
sub
mov
jl
mov
or
cmp
or
fdiv
fucomi
hlt
or
dec
push
dec
ret
xchg
mov
sub
fldenv
(bad)
inc
mov
mov
jno
sbb
sti
push
inc
xchg
call
fisub
idiv
repnz
movs
mov
mov
push
and
pop
bound
cld
outs
addr16
iret
pop
outs
and
mov
pop
xchg
scas
cmp
push
push
adc
stos
mov
out
out
cmps
push
xor
jg
push
clc
sub
mov
add
icebp
sub
in
fndisi(8087
xlat
add
push
das
jae
(bad)
mov
xchg
ja
ret
dec
arpl
xchg
test
shl
push
mov
cli
cmp
je
and
ins
mov
xlat
adc
jge
into
xlat
jle
lahf
adc
push
xchg
dec
jns
sbb
aaa
cld
ins
and
cmp
jmp
dec
cdq
mov
and
rcr
cmp
cmp
jo
jecxz
push
inc
adc
sbb
adc
sahf
jo
sub
dec
sub
mov
fisub
push
cmc
test
imul
sub
and
push
cmp
les
push
inc
rcl
pop
outs
mov
out
neg
sbb
add
pop
or
mov
sbb
ss
dec
adc
cmp
jmp
sub
push
es
sub
les
enter
or
and
aas
mov
fistp
sbb
xchg
clc
pop
imul
xor
in
mov
jmp
jecxz
pusha
fisub
mov
imul
jmp
cwde
adc
sar
or
fist
stc
mov
mov
inc
or
lock
pop
sub
adc
pop
mov
ins
add
mov
sub
test
jl
fabs
xor
fwait
pushf
xor
aam
sbb
cmps
loop
fist
xchg
hlt
inc
mov
pop
dec
clc
pop
es
or
ret
pop
mov
inc
stc
(bad)
std
(bad)
fwait
or
cmc
ffree
pop
jbe
mov
out
jns
xchg
or
pop
pop
fiadd
repnz
fist
sbb
loop
xchg
mov
adc
mov
js
dec
std
or
jle
test
jo
repz
(bad)
cmp
cdq
xchg
(bad)
fwait
jp
sub
movs
cmps
pop
xchg
mov
inc
imul
rcr
mov
arpl
popf
xchg
rol
cmc
iret
inc
enter
mov
adc
es
push
xchg
sub
js
int3
outs
in
jmp
movs
lds
adc
lahf
dec
enter
icebp
adc
dec
jno
jmp
shl
xchg
pusha
div
jmp
ror
mov
add
mov
and
lods
xor
scas
xor
out
inc
jle
mov
sub
push
mov
pusha
inc
stos
adc
inc
dec
xor
into
mov
sbb
mov
inc
jl
retf
gs
push
xor
retf
add
and
mov
xchg
test
(bad)
ss
inc
push
test
lea
add
bound
mov
push
push
(bad)
stos
cmp
lock
stc
pop
mov
call
cmp
sub
push
push
sbb
adc
cdq
ja
xor
ins
shl
xchg
fstp
movs
call
push
mov
(bad)
and
ficom
add
ret
push
dec
ret
(bad)
sbb
lock
push
lods
inc
enter
pop
xor
cmp
rol
loopne
out
cwde
sbb
jb
pmaxsw
arpl
jle
or
sti
iret
xchg
pop
jle
or
movs
loope
and
cli
daa
mov
stos
mov
test
pop
mov
pushf
hlt
push
mov
adc
test
sbb
arpl
jns
movs
cs
sub
mov
xchg
mov
nop
ret
(bad)
fdivr
les
(bad)
sbb
xchg
pop
jecxz
jnp
sbb
fidivr
repnz
xchg
dec
ret
pop
test
mov
add
push
inc
push
inc
mov
cld
fnstcw
push
pop
call
aas
shl
scas
xchg
and
xchg
push
fcomp
xchg
xchg
adc
inc
in
cmp
push
lock
test
inc
bound
mov
add
mov
retf
cwde
into
loop
push
jecxz
lods
add
outs
(bad)
inc
inc
adc
inc
rcr
mov
sbb
loope
jle
jl
add
xor
dec
xor
popa
add
ss
pushf
sub
fstp
call
xchg
or
jmp
arpl
and
hlt
adc
adc
mov
jle
sar
ret
inc
aas
mov
add
pushf
idiv
add
(bad)
mov
fwait
lds
lea
push
int
xor
aas
dec
test
mov
loopne
jns
push
push
cmp
add
clc
or
jns
movs
jb
iret
jle
push
jmp
stc
pop
add
push
pop
loop
aas
fs
imul
test
pop
adc
ret
ret
push
clc
sub
xor
inc
xlat
push
in
or
add
aad
xchg
cmp
int
mov
push
enter
dec
dec
les
test
out
test
push
ret
inc
ds
jge
movs
cmps
pop
pop
es
xor
adc
fldcw
icebp
in
xchg
mov
and
montmul
cmps
lds
adc
and
pop
push
js
popf
outs
push
outs
push
sbb
cmps
clc
xor
add
push
xor
cwde
cmp
jo
dec
shl
pusha
mov
enter
dec
or
int
inc
loope
or
jo
cmp
pop
adc
mov
jne
push
sbb
loop
cmp
pop
pop
icebp
jno
mov
lea
in
hlt
movs
mov
imul
sub
mov
retf
(bad)
call
dec
pop
ret
dec
dec
jns
push
cmp
mov
mov
xor
(bad)
(bad)
mov
test
dec
or
jmp
rcr
push
and
inc
push
and
cmp
xchg
imul
pushf
inc
mov
loope
in
xchg
mov
popa
or
push
dec
loopne
int
pop
mov
test
fs
fild
sti
sub
jo
sbb
mov
xchg
sub
cmp
and
pop
icebp
and
stos
pop
mov
retf
in
dec
jnp
popf
push
xor
aaa
push
push
and
ret
test
sub
push
out
in
repnz
mov
inc
inc
push
outs
aaa
xchg
ds
dec
add
(bad)
dec
fistp
in
inc
(bad)
cld
int3
lock
cmp
mov
add
add
xor
stos
jge
fmul
fldenv
xchg
test
clc
push
inc
loopne
fs
xor
inc
gs
mov
sub
adc
add
push
xor
jle
movs
ror
fnstenv
push
sbb
push
(bad)
lods
bound
scas
xchg
add
adc
scas
cld
hlt
ret
cmp
jmp
fsub
mov
xor
push
jge
sub
fsub
jp
cdq
into
daa
dec
push
dec
and
add
mov
push
shl
stos
dec
es
inc
dec
iret
push
add
ret
repnz
jge
sub
push
js
and
retf
pop
add
inc
repz
add
push
mov
mov
adc
shl
test
lds
add
dec
lea
pop
rcl
dec
lahf
sub
pop
icebp
sbb
cmp
mov
cmps
jge
sbb
mov
pop
mov
inc
dec
cmp
pop
mov
or
dec
ret
xor
cmps
popa
out
stos
(bad)
mov
fwait
xchg
push
cmp
rcl
popa
dec
repz
outs
jnp
jmp
push
and
inc
and
dec
(bad)
sti
lods
in
jno
loop
loopne
dec
or
ds
xor
iret
sub
mov
and
in
rol
(bad)
imul
push
xchg
call
push
pop
push
(bad)
into
leave
sub
dec
xor
pop
or
sbb
dec
aad
lock
es
jecxz
mov
lahf
jg
lods
and
jns
fmul
fnstenv
and
bound
push
dec
xchg
and
cmp
push
mov
aam
imul
push
push
out
je
jmp
xchg
or
jmp
addr16
adc
clc
(bad)
push
push
call
ja
pop
cmp
cmc
xor
std
xchg
mov
movs
clc
lods
inc
sbb
dec
mov
sahf
pop
adc
mov
test
add
xchg
pop
xor
push
pop
jae
inc
and
push
out
jmp
outs
shl
cmp
(bad)
aam
pop
mov
imul
push
xchg
cmp
leave
inc
pop
jp
sbb
add
pusha
mov
loopne
cmps
and
aaa
(bad)
out
out
xchg
fcmovb
shr
imul
mov
push
enter
repz
push
add
xor
stos
or
mov
and
movs
jno
jle
dec
test
mov
int3
ficomp
stc
pop
jmp
(bad)
adc
scas
lea
lahf
pop
sub
dec
and
data16
or
or
fcom
cmc
vmaxsd
pop
dec
scas
jb
bound
test
pop
mov
scas
sbb
enter
ror
inc
ins
popf
in
or
jl
lahf
mov
leave
inc
cmp
pop
jo
xchg
aam
cli
push
popa
inc
fsub
cmp
inc
cmp
push
sub
cmc
xchg
jmp
or
ds
retf
mov
stos
jno
cmp
sbb
pop
xor
es
cmp
or
sbb
and
outs
or
fadd
push
pusha
dec
pusha
sub
adc
(bad)
push
xlat
int3
push
dec
mov
jmp
mov
xchg
repnz
fisub
cmp
add
push
je
sub
fisub
sub
push
(bad)
cmc
je
scas
mov
mov
aas
xor
leave
push
pop
sti
pusha
sub
gs
or
iret
fnstsw
push
nop
test
cmp
sbb
inc
mov
shl
outs
cwde
push
xor
mov
ins
push
stos
movs
jb
lods
dec
(bad)
push
ja
sbb
sub
lock
push
pop
sar
sub
mov
repnz
icebp
int
int3
(bad)
mov
jecxz
sahf
sub
cmp
jp
sti
jne
pop
push
fnstsw
sbb
and
and
pusha
jne
xor
cdq
xor
lods
pop
push
ror
sti
jle
scas
je
xchg
dec
out
pop
int
sti
or
push
mov
shl
adc
cmp
(bad)
scas
movs
les
pop
xchg
jecxz
jno
mov
cmp
fnstenv
jno
mov
sbb
sub
mov
sbb
xchg
or
pushf
and
inc
jbe
push
movs
inc
pushaw
sti
shr
aad
sbb
push
ins
jnp
pop
jl
dec
jnp
mov
push
outs
clc
mov
nop
ror
sahf
mov
imul
rol
js
out
sub
or
je
fs
pop
ds
(bad)
std
pop
outs
and
and
neg
imul
iret
mov
pop
sbb
bound
xchg
js
xchg
clc
ins
push
test
push
pushf
mov
enter
mov
or
out
inc
xchg
movs
add
sbb
mov
and
push
repz
sub
jp
inc
xchg
jno
inc
jmp
neg
and
jno
or
fst
out
cmp
inc
push
js
sub
lods
popf
mov
test
scas
clc
(bad)
ror
push
adc
call
popf
push
ins
adc
inc
jns
daa
jle
shr
idiv
adc
add
shl
fistp
fdivrp
out
mov
dec
(bad)
mov
adc
stos
inc
xchg
xor
push
add
fwait
mov
fwait
and
fs
iret
sub
mov
push
cld
or
push
(bad)
dec
mov
pop
mov
jns
pop
jmp
shl
dec
mov
movs
xor
movs
repnz
mov
out
iret
movs
pusha
dec
add
(bad)
gs
push
rcr
and
repnz
out
ins
mov
dec
adc
or
and
inc
out
loop
sbb
mov
mov
fnstenv
ret
out
lds
mov
and
cs
call
aas
mov
xchg
and
retf
jge
jp
lds
pop
nop
xchg
mov
call
test
and
push
sub
and
sub
mov
push
xchg
and
fcomp
mov
or
outs
mov
and
daa
mov
mov
push
push
fldenv
es
cdq
scas
push
test
xor
cs
mov
add
jge
ficom
mov
jmp
lds
stos
push
xor
lahf
cmp
mov
repnz
inc
sahf
leave
jne
jnp
jb
sti
in
out
xor
mov
test
mov
cdq
out
stc
pop
sbb
and
daa
cmps
add
movs
fisttp
loopne
icebp
pop
xchg
adc
je
pop
mov
pop
test
xchg
cmps
add
cld
xchg
cs
test
pop
iret
popa
or
dec
outs
adc
bound
and
sbb
mov
call
jecxz
mov
(bad)
sub
add
movs
xor
in
add
dec
push
add
cmp
dec
xor
xor
pushf
pop
push
pop
push
push
jg
push
dec
jl
sub
(bad)
movs
xchg
push
test
jmp
test
mov
jge
pop
(bad)
xlat
mov
mov
outs
mov
rol
xor
ret
aas
cmps
xchg
add
xor
retf
adc
sub
dec
xor
push
inc
pop
aaa
scas
popf
or
xor
mov
push
mov
lea
leave
out
mov
inc
sub
aas
dec
or
scas
test
add
jo
pop
jp
fadd
enter
mov
mov
nop
sbb
pop
test
mov
cmp
retf
lods
gs
ja
pop
sub
xor
push
pop
lds
popa
sbb
mov
(bad)
or
jmp
xchg
pop
pop
mov
(bad)
mov
loop
jg
push
ins
xchg
mov
sti
adc
mov
push
pop
repnz
loop
into
and
into
xchg
pop
ja
or
jo
cs
(bad)
xor
adc
int
xchg
lods
add
fst
push
add
inc
jge
jg
(bad)
add
sbb
xor
adc
push
inc
stos
jno
sti
and
cmp
adc
dec
cmp
mov
inc
test
sbb
mov
stos
add
lds
xor
or
xor
adc
data16
sub
jg
pop
cmps
pop
jmp
pop
imul
pop
ret
arpl
mov
and
dec
adc
scas
add
jp
test
sub
inc
and
das
and
add
mov
and
loope
rcl
pusha
pop
cmp
clc
adc
xor
pop
pop
sbb
push
xor
mov
push
into
cmp
bound
pushf
pushf
(bad)
xchg
icebp
adc
sbb
ins
xchg
mov
rcr
cmp
fs
test
(bad)
arpl
mov
jmp
nop
pop
push
xor
push
jno
mov
stos
enter
and
dec
xor
inc
mov
btr
mov
lahf
pop
pop
adc
out
adc
xlat
push
rcl
sub
cdq
sub
cli
mov
pop
mov
repnz
inc
movs
hlt
sbb
iret
fwait
xor
mov
dec
imul
aad
jle
mov
int3
je
in
paddd
loopne
arpl
fcomp
out
push
mov
pcmpgtb
ss
add
imul
or
inc
inc
add
sbb
ret
fisubr
add
cmps
enter
mov
retf
push
mov
jmp
imul
add
xchg
dec
in
(bad)
out
cmp
pushf
sub
movs
pop
xor
dec
mov
pop
leave
vmwrite
test
(bad)
ror
pop
jae
mov
lock
jmp
je
aam
in
hlt
fsubr
dec
(bad)
mov
push
into
ret
xor
in
mov
lods
in
fsub
sbb
inc
outs
pop
jge
jl
sti
jae
inc
scas
fadd
mov
lds
push
test
mov
lahf
and
jge
and
jmp
xchg
push
not
push
jbe
cmp
mov
fist
mov
nop
sbb
stc
shl
or
mov
xchg
cmp
fs
pop
cs
shl
jmp
mov
and
arpl
faddp
in
scas
retf
jne
xchg
cld
cmps
fwait
jp
in
repz
cs
sbb
inc
sbb
push
(bad)
shl
dec
retf
fsub
cmps
aaa
mov
add
test
imul
or
dec
push
jno
popf
cmp
ds
dec
lods
push
dec
sbb
int3
cmps
(bad)
lock
loope
push
arpl
adc
fcomip
push
popf
fwait
sti
xor
dec
aaa
and
xchg
imul
push
ja
add
jns
pop
push
mov
pop
and
jnp
in
jp
mov
fnstcw
bound
ja
ror
out
int
stc
xor
in
aam
sbb
nop
jecxz
iret
rcr
pop
fst
jge
mov
inc
repz
and
cmp
pop
or
in
pop
loop
in
mov
ja
push
and
push
in
lods
data16
push
es
(bad)
xor
cmp
in
sbb
xlat
pushf
in
lahf
inc
lahf
xor
(bad)
cmp
data16
xchg
cmp
cdq
push
or
jb
jge
push
sbb
mov
ret
mov
add
adc
(bad)
mov
lods
xor
adc
mov
arpl
loopne
xchg
cmp
mov
dec
push
ret
sar
addr16
push
pop
mov
xor
jg
rol
add
pop
mov
cs
repnz
fnstenv
popa
daa
aad
cmp
mov
xchg
mov
sbb
int
inc
or
inc
rol
inc
jg
popf
sbb
pop
stos
les
call
mov
add
mov
pop
out
leave
aaa
cmp
sbb
cwde
mov
sbb
fsubrp
stc
lods
xchg
fwait
lea
jo
add
dec
adc
mov
lock
dec
cmps
mov
mov
xor
pop
push
rcr
xchg
loopne
dec
pusha
jb
(bad)
cmps
ja
mov
and
out
push
scas
fild
pop
pop
adc
pop
sub
fidivr
and
nop
jle
test
and
fnclex
jmp
(bad)
scas
mov
mov
call
test
cmc
cmp
fiadd
lods
out
cs
jl
sti
push
xchg
out
sub
fsub
or
icebp
je
repz
xlat
inc
push
leave
and
popf
(bad)
adc
pop
jl
or
cs
or
mov
in
inc
imul
push
sbb
add
repnz
stc
vmovq
or
hlt
cmp
xchg
cmp
mov
clc
mov
nop
sbb
push
outs
xchg
cmp
push
jbe
int
mov
lea
rol
popf
add
in
jmp
pusha
ret
mov
ds
test
push
push
mov
stos
mov
and
adc
jg
icebp
test
push
icebp
pop
xor
inc
cmp
sub
(bad)
xor
bound
daa
popf
pop
inc
inc
nop
mov
div
shl
sub
shr
fadd
std
dec
push
nop
add
repnz
popa
stos
adc
cmp
(bad)
in
imul
js
in
sti
sbb
enter
lss
jb
add
pop
(bad)
into
shr
ss
mov
dec
rcr
push
jp
cmc
mov
push
pop
xchg
mov
adc
test
sub
pop
adc
fst
imul
fsub
mov
fmul
outs
mov
mov
cmp
sbb
or
out
in
sbb
enter
jmp
pop
scas
sbb
dec
retf
stos
dec
pop
jmp
mov
mov
xchg
or
inc
mov
fdivr
mov
fnstcw
(bad)
jecxz
mov
pop
cmps
or
adc
outs
push
jb
add
inc
mov
and
pop
push
lods
iret
das
adc
movs
sub
pxor
dec
push
sbb
mov
cmp
push
shl
xor
adc
jmp
jle
jbe
cmp
cmps
shr
lahf
dec
cli
adc
dec
pop
sub
xor
cmp
cmp
ds
mov
xor
mov
mov
dec
imul
popa
outs
or
bound
jae
xchg
imul
adc
adc
div
adc
es
sbb
dec
cdq
out
xchg
dec
dec
sbb
sub
adc
dec
jl
mov
(bad)
or
jo
push
xchg
popf
loope
mov
push
fidivr
sub
cmc
add
movups
lock
inc
test
popf
and
and
pushf
fisttp
mov
gs
in
jo
gs
popf
out
xchg
dec
scas
fistp
dec
out
cwde
fsubr
addr16
out
mov
ins
or
call
arpl
aam
jno
sbb
daa
js
sbb
push
xchg
loop
mov
push
sub
test
dec
sub
stc
sti
cmc
cmp
sbb
cs
in
pop
jg
sti
inc
dec
cmp
fsub
cwde
shl
out
pop
adc
mov
retf
xor
test
ror
or
loop
mov
push
and
sub
retf
scas
neg
cli
add
pop
outs
pop
push
pop
sbb
sbb
lods
push
xor
pop
xchg
in
into
aaa
sbb
sub
enter
out
cwde
push
mov
idiv
nop
mov
mov
jge
clc
add
xor
xchg
sysenter
mov
ins
jle
or
jge
push
inc
cmp
into
sbb
sub
push
sbb
std
cs
ss
gs
pop
mov
mov
mov
pop
mov
ret
(bad)
jg
cmp
sbb
into
mov
in
sbb
mov
cmp
push
push
imul
fwait
jge
xor
and
pop
sbb
mov
add
repz
(bad)
call
inc
(bad)
shl
pop
or
jg
sbb
inc
push
(bad)
cmp
xor
add
jo
fucomp
xor
test
popf
mov
mov
call
xlat
pusha
mov
and
sub
lock
stos
add
fisttp
push
aaa
sbb
jmp
bound
les
cli
xchg
fild
sub
outs
jo
data16
adc
mov
xchg
retf
pop
pop
and
into
add
arpl
cmp
cmp
lahf
fmul
dec
add
inc
push
cmp
push
and
sar
outs
out
pop
(bad)
in
daa
pop
(bad)
loop
into
enter
sub
pushf
call
mov
pushf
ret
sub
xor
jo
push
lds
and
mov
pop
gs
mov
jbe
ret
sub
arpl
jmp
pop
jno
add
push
xor
push
les
mov
add
xchg
jb
aas
inc
xor
add
sbb
pop
mov
fwait
pop
sbb
inc
ds
loop
jl
xchg
jae
data16
out
(bad)
xchg
sar
mov
vpord
cmp
pop
mov
(bad)
aaa
into
pop
mov
fnstsw
push
jae
jo
jl
inc
outs
sti
sub
xchg
mov
jnp
std
fndisi(8087
jbe
inc
xchg
test
enter
cwde
test
dec
mov
push
and
es
push
out
test
mov
outs
gs
and
in
loopne
ret
lea
inc
push
dec
ds
sub
mov
mov
loope
lods
sub
and
les
xor
and
cmp
inc
mov
cmp
scas
data16
dec
sub
jmp
sbb
add
ds
cmp
add
hlt
cmp
enter
ret
push
inc
inc
xchg
mov
xor
cmp
jb
sahf
and
and
fs
leave
outs
mov
jns
test
cmp
fst
in
and
bound
shl
rcr
cmp
adc
push
mov
shl
por
nop
out
dec
push
mov
ja
xchg
sub
add
mov
inc
xor
fwait
data16
or
into
xchg
xor
cmps
ja
sbb
push
fcomp
jo
sbb
dec
cmp
ins
mov
test
dec
inc
adc
fild
sbb
push
in
jl
cmp
(bad)
ds
imul
out
mul
call
(bad)
rcr
xor
jp
inc
jnp
test
test
xchg
or
xchg
or
je
adc
and
add
loopne
adc
sti
add
push
mov
jecxz
jmp
bound
mov
pop
in
and
in
leave
push
inc
jnp
add
inc
gs
fdiv
cmps
sbb
dec
lods
cld
cs
icebp
scas
sub
sub
jmp
mov
lahf
hlt
pop
popa
sar
push
adc
push
and
inc
fadd
neg
test
inc
(bad)
add
test
xor
sbb
push
loop
movs
out
ja
adc
xchg
xchg
ret
adc
mov
into
mov
sub
mov
sbb
clc
idiv
adc
std
iret
repz
(bad)
arpl
add
fs
xchg
fwait
or
fsub
fcomi
cwde
xchg
pop
fwait
jb
clc
stc
sub
test
into
and
add
into
pusha
add
jbe
pusha
cmps
pop
or
bound
sub
cwde
push
xor
mov
cld
inc
xchg
scas
ins
inc
lods
in
inc
lods
cmp
ret
add
(bad)
call
fs
dec
mul
pop
outs
pop
cmp
push
xchg
mov
in
psubb
dec
fdiv
jmp
lahf
cmc
sub
jge
sahf
sar
ficomp
in
inc
into
sub
cwde
mov
sub
sbb
cmp
out
loopne
inc
or
fiadd
aaa
stos
jg
add
ds
das
iret
cmp
dec
jp
cli
sub
sub
fld
popa
mov
jl
std
lahf
ficom
sahf
pushf
arpl
movs
rol
mov
fld
out
pop
int
arpl
pop
sub
jb
lahf
dec
xor
loop
call
scas
out
and
mov
movs
xchg
mov
std
fstp
mov
imul
lods
cmc
loop
std
test
movs
arpl
sbb
adc
nop
sbb
ins
xchg
fadd
(bad)
fmul
add
sahf
pop
data16
mov
push
(bad)
(bad)
ss
or
cmp
addr16
mov
lahf
xchg
ins
repnz
and
inc
fsub
xor
cmp
add
ret
in
in
mov
dec
cs
add
cmp
fs
(bad)
out
adc
imul
es
dec
out
aam
and
mov
das
push
inc
sub
inc
mov
cmp
psubusw
iret
inc
sbb
mov
adc
sbb
xchg
mov
outs
test
jge
mov
add
shl
sbb
(bad)
xor
jo
pop
adc
adc
xchg
les
repz
clc
pop
in
adc
in
(bad)
call
xchg
jbe
fwait
sub
rcl
pop
(bad)
idiv
fcmove
aad
adc
jnp
fs
cwde
push
rol
not
jge
ss
test
dec
addr16
adc
dec
xchg
xlat
out
sub
cmc
dec
(bad)
in
push
rcr
aam
jg
or
ret
fcmovnu
mov
pop
ficom
aam
jnp
clc
dec
cmp
mov
push
fist
imul
loopne
repz
cdq
xchg
ja
ret
out
mov
cli
scas
in
ins
stos
xchg
addr16
test
pusha
sbb
fld
or
xchg
xchg
mov
and
push
push
sahf
adc
test
push
push
mov
sahf
scas
xchg
jmp
inc
jnp
jg
inc
leave
push
bound
add
sbb
cdq
pop
mov
jl
push
jb
mov
sbb
shl
popa
or
rcr
jmp
retf
lods
mov
rcr
inc
cmp
es
aaa
sbb
mov
push
fmul
xor
adc
mov
fnstenv
out
xchg
mov
sub
xlat
es
fiadd
sbb
cmp
out
mov
repz
add
lods
add
dec
data16
add
jp
dec
xlat
xor
popf
push
jg
push
dec
or
sbb
aas
push
xor
int3
retf
stos
js
inc
ins
scas
cmp
dec
jp
test
popa
dec
mov
pop
xor
int3
add
dec
pop
arpl
out
jmp
inc
fild
fs
adc
scas
outs
clc
pop
or
loop
mov
rol
jmp
cmp
fldcw
gs
mov
inc
adc
xlat
inc
daa
mov
popf
jge
or
adc
sub
add
sbb
aas
scas
adc
div
inc
test
popf
mov
(bad)
sbb
sub
xchg
inc
pop
sbb
mov
out
and
pop
dec
lea
adc
mov
mov
mov
ins
pop
cwde
mov
dec
and
sub
dec
jmp
or
pop
and
sbb
mov
or
mov
adc
xchg
das
outs
xchg
mov
jg
ret
iret
mov
xor
add
jecxz
inc
cmp
fist
jmp
xchg
or
out
and
popf
xchg
mov
xor
xor
cmp
idiv
jb
or
xor
outs
fst
aam
pop
mov
(bad)
or
and
sub
out
jmp
inc
inc
push
and
das
pop
imul
inc
cmp
push
adc
addr16
ror
push
and
mov
pop
jbe
fnstsw
test
or
xchg
je
(bad)
jns
(bad)
push
push
(bad)
in
cmp
fcomp
mov
cvtps2pd
in
jg
inc
add
sub
scas
push
(bad)
xchg
into
repnz
dec
mov
mov
loope
rcr
dec
mov
xor
test
ins
shl
rol
inc
aam
rcr
xchg
jle
inc
inc
adc
nop
add
mov
int3
pop
js
lds
xor
sbb
std
clc
or
pop
dec
cmp
jge
outs
dec
pushf
sub
inc
adc
imul
mov
inc
fwait
xor
sbb
addr16
sti
out
int3
xchg
sahf
add
mov
xor
cmp
push
sub
aas
add
jg
inc
pop
out
ins
das
shl
imul
es
pop
ds
mov
dec
(bad)
sub
dec
fdivr
cmp
mov
mov
sub
jae
dec
out
shl
sbb
outs
inc
and
jmp
adc
add
mov
ss
test
ret
lahf
rcl
push
shl
aad
stos
loop
xor
test
loop
sub
iret
xchg
dec
and
cli
adc
sbb
xor
retf
pushf
mov
mov
in
je
jp
lahf
add
push
mov
xchg
sub
movs
push
add
bound
std
scas
ror
cmp
jmp
push
mov
mov
mov
add
scas
cmps
aam
jbe
clc
jno
outs
(bad)
je
in
repz
mov
xor
repz
xor
and
nop
inc
daa
out
xor
and
(bad)
fstp
test
add
outs
xor
dec
inc
mov
cmp
sbb
inc
mov
aas
out
dec
test
mov
or
dec
jns
in
and
pop
push
cmp
loop
mov
cmps
lods
inc
mov
or
sub
and
xchg
push
mov
mov
mov
mov
fwait
cmp
mov
test
lods
js
jno
js
xor
es
(bad)
retf
lahf
aaa
std
lds
movs
jecxz
jle
sbb
mov
xchg
out
rcr
and
idiv
xchg
lds
pop
call
(bad)
mov
out
jmp
es
adc
mov
sbb
xor
or
xor
cmp
sahf
xlat
mov
jge
mov
cdq
push
bound
and
dec
fsubrp
cmp
jae
cli
test
je
(bad)
mov
cmp
jmp
xchg
into
pop
leave
rcl
xchg
shl
mov
int
jmp
sub
and
push
dec
call
pop
cmp
push
call
test
jmp
xchg
or
push
repz
ror
xor
pop
stos
push
push
pop
mov
enter
call
fisubr
ins
je
xchg
lock
jb
xchg
fs
inc
movs
mov
push
push
aaa
xchg
mov
scas
jge
cmps
add
or
add
xchg
mov
movs
ds
rol
aas
arpl
jo
(bad)
(bad)
push
adc
aaa
cmp
cli
inc
in
je
scas
add
gs
jo
je
mov
pop
fiadd
adc
lahf
(bad)
fsubp
fisttp
or
push
pushf
repz
pop
ja
scas
or
jb
add
mov
dec
int3
test
retf
ins
ss
push
fmul
cmp
sbb
out
addr16
or
mov
pusha
dec
jo
xchg
icebp
loopne
adc
ret
sbb
mov
out
jecxz
ins
std
enter
pop
mov
sub
jg
jne
dec
shl
push
pop
scas
pop
pop
mov
scas
sub
int
and
jge
mov
sbb
lods
ins
pop
mov
(bad)
hlt
ror
stc
(bad)
iret
sbb
aas
in
ins
data16
int3
xor
mul
add
pop
ja
(bad)
xchg
sbb
sub
xchg
xor
shl
cmps
cld
adc
stos
and
(bad)
mov
sbb
cmp
mov
(bad)
fwait
std
test
movs
or
out
jp
test
xor
hlt
cmp
fyl2xp1
imul
adc
xor
and
cmps
movs
push
out
daa
rcl
jge
mov
ja
fdiv
movs
or
mov
icebp
mov
es
jne
push
xor
sub
mov
cmp
clc
sbb
not
push
mov
inc
mov
sbb
bswap
xchg
das
paddq
call
adc
movs
jp
shl
loopne
sbb
movs
sbb
jne
push
mov
push
movs
std
fiadd
inc
hlt
adc
or
mov
sti
jp
fucom
push
(bad)
loopne
stos
aam
xchg
enter
dec
pushf
loop
mov
pop
les
or
or
push
fisub
retf
inc
xlat
bound
pop
mov
mov
scas
mov
cwde
fucomi
add
inc
push
(bad)
xor
jge
cwde
xchg
inc
mov
push
adc
and
retf
dec
adc
xchg
pop
pop
jmp
loopne
shl
inc
lahf
push
sbb
hlt
push
repz
dec
sbb
mov
xor
cmp
les
xchg
sbb
dec
and
ins
mov
cli
ror
adc
mov
aas
push
cwde
cmps
mov
jns
adc
push
mov
outs
fwait
jle
stc
int
and
fcmovb
inc
sbb
jmp
xchg
add
inc
inc
adc
rol
pop
push
hlt
lods
xor
popw
add
popf
fcomp
jecxz
mov
inc
xor
or
lock
hlt
cmp
jb
pop
mov
jp
(bad)
repnz
mov
out
(bad)
push
jge
mov
es
cmp
je
mov
(bad)
retf
popa
xchg
pusha
pop
mov
pop
xchg
(bad)
mov
lds
mov
sub
jmp
mov
popf
mov
mov
inc
dec
stos
out
jg
hlt
pop
jg
or
add
jp
cld
sub
or
dec
or
mov
push
idiv
(bad)
aaa
adc
and
test
xchg
push
mov
nop
adc
mov
or
int
popf
std
jo
xor
fstp
sti
jmp
(bad)
sbb
sub
fdiv
sbb
sbb
mul
lahf
push
stos
mov
cdq
daa
jne
js
cld
jo
and
mov
sti
add
push
or
fistp
clc
xchg
xchg
cmp
adc
sub
retf
mov
xchg
mov
loopne
repnz
in
xor
lds
lock
sub
js
or
call
sti
dec
add
and
xor
ret
sbb
repz
aam
leave
movs
pop
call
das
retf
and
inc
dec
mov
xor
sub
std
or
enter
lock
sub
mov
mov
hlt
ret
dec
shr
sbb
push
mov
dec
fwait
mov
jp
inc
lock
xchg
pop
mov
in
xor
xchg
mov
inc
movs
jae
dec
(bad)
mov
stos
adc
jge
pop
lods
jae
sbb
pop
pusha
mov
cmp
sbb
loope
or
mov
js
push
or
dec
icebp
stc
or
ins
pusha
xchg
and
leave
(bad)
clc
sub
enter
mov
push
cmps
bound
sub
add
sar
(bad)
cmp
pop
jge
daa
mov
daa
mov
adc
xor
adc
mov
jg
scas
shl
cwde
add
xor
add
add
and
mov
xchg
and
mov
jecxz
shl
push
loop
mov
inc
jnp
cmps
jae
dec
out
mov
sub
mov
clc
(bad)
(bad)
pop
cmp
xlat
xchg
push
ja
pop
mov
add
or
aam
bound
in
adc
dec
adc
lods
data16
sbb
mov
ficom
rol
push
pop
or
inc
or
into
pushf
cmp
and
mov
pop
dec
scas
popf
out
mov
jne
pop
xor
call
test
scas
test
dec
lea
pop
add
(bad)
jne
jge
push
mov
and
mov
ror
in
cmp
or
push
(bad)
inc
ror
inc
mov
mov
clc
aam
popf
movs
pop
fisub
xchg
or
iret
push
pop
in
inc
mov
jle
ja
fs
stos
cmp
mov
stc
and
shr
sahf
(bad)
push
dec
mov
inc
jnp
mov
jmp
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
lods
leave
out
add
add
jecxz
add
and
pop
add
add
add
add
add
arpl
add
add
je
add
add
add
add
jne
and
jne
ins
imul
jae
outs
and
gs
imul
outs
and
ja
jns
jne
jne
and
jge
or
push
outs
jb
popa
je
outs
outs
and
jne
jae
outs
and
ins
ins
and
ins
jo
jne
and
imul
and
and
ins
imul
jns
popa
outs
and
jb
outs
jb
popa
outs
arpl
outs
data16
jge
or
data16
jne
popa
arpl
jo
sub
jnp
jge
ja
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
outs
and
jge
imul
je
outs
outs
and
outs
jne
and
and
popa
je
jb
jae
je
popa
je
jns
jne
jne
gs
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
add
add
add
add
pop
add
add
pop
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
