(bad)
cmc
fmul
mov
sahf
add
jl
mov
adc
div
iret
mov
retf
lock
or
cwde
add
shl
fsub
xlat
mov
xchg
xchg
retf
int3
inc
mov
xor
jns
or
mov
addr16
inc
cmp
popf
add
xor
(bad)
pop
lods
test
adc
push
mov
pop
or
(bad)
(bad)
jg
xor
adc
stos
mul
rcr
jmp
mov
jo
cmps
jnp
fiadd
mov
outs
inc
repz
mov
mov
adc
mov
sub
mov
mov
data16
clc
mov
add
xor
adc
jmp
push
add
int
jl
cmp
inc
ja
mov
ja
push
mov
xor
sub
mov
cwde
not
movs
cmp
cwde
mov
add
inc
imul
or
add
cmp
jno
dec
lods
mov
addr16
je
pushf
mov
data16
or
out
mov
mov
int3
mov
mov
out
mov
mov
addr16
fsubrp
push
jp
mov
data16
or
xchg
cmp
add
mov
xchg
add
pop
mov
add
(bad)
cmc
in
and
xor
fiadd
popf
cmp
cwde
xchg
cmp
and
xor
pusha
cli
sbb
cli
ret
inc
neg
sar
xor
lods
adc
ror
add
div
(bad)
pop
jle
(bad)
or
lock
in
push
sbb
inc
neg
cli
pop
ins
and
xor
cmp
jle
repnz
lahf
sub
inc
neg
adc
jle
cwde
add
out
into
push
jle
jo
or
hlt
in
mov
je
pushf
outs
neg
ins
fild
sub
pop
mov
inc
mov
sub
retf
inc
ja
cli
ret
inc
idiv
in
xchg
add
ds
sar
xor
cwde
add
mov
jns
add
mul
push
dec
(bad)
sti
push
xchg
cmc
inc
retf
mov
pop
cwde
outs
neg
outs
neg
ins
div
or
fisttp
(bad)
dec
or
mov
sub
or
add
cmc
jae
popf
xor
data16
cmps
pop
nop
dec
div
data16
cmps
data16
xor
add
xor
ins
addr16
fiadd
inc
retf
addr16
pop
adc
or
retf
test
sbb
mov
add
adc
jle
mov
cli
test
test
int3
xor
adc
cmps
gs
push
dec
fisubr
bound
int
mov
pop
cmps
add
popf
xor
xchg
cli
cmp
mov
mov
dec
shl
pushf
xor
fisub
jo
retf
popf
xor
in
stc
pop
repnz
idiv
pushf
mov
pushf
xor
fimul
jo
lea
or
repnz
xor
(bad)
int3
xor
adc
je
xchg
push
mov
dec
and
xchg
xor
(bad)
jle
adc
sbb
aaa
cwde
outs
test
nop
in
mov
repz
repz
lds
addr16
retf
or
outs
test
fs
mov
cwde
add
or
xchg
xchg
repz
lds
test
mov
ret
mov
adc
test
push
(bad)
mov
and
in
or
jo
repz
mov
(bad)
not
push
bswap
popf
jno
ja
xchg
leave
cwde
out
call
(bad)
div
adc
retf
inc
ja
xor
(bad)
mov
pusha
nop
or
call
inc
cdq
inc
jle
sbb
or
cmp
xor
in
adc
mov
mov
mov
or
std
std
jle
push
mov
mov
cli
mov
movs
add
inc
popa
cmp
inc
xor
mov
adc
mov
fadd
push
or
stc
clc
mov
cli
or
and
or
push
(bad)
mov
xor
in
add
jl
xchg
mov
retf
ret
js
mov
cli
or
adc
fdivp
adc
or
in
mov
xor
pop
xchg
retf
retf
xor
jo
or
jae
repz
add
sbb
adc
faddp
adc
mov
popf
add
retf
into
jmp
or
adc
jle
ins
cli
or
outs
mov
jle
push
or
data16
jle
mov
xor
addr16
or
(bad)
pop
lods
cld
pop
push
jle
sbb
jecxz
into
push
jl
xchg
ret
cmp
aad
xor
adc
mov
jae
pop
add
add
dec
out
addr16
adc
add
pop
push
hlt
popa
sbb
call
aad
mov
adc
shl
mov
adc
repz
sbb
jle
ins
mov
mov
fs
test
mov
into
push
jl
xchg
ret
stos
or
inc
or
stc
mov
and
cli
out
add
dec
out
addr16
adc
add
pop
push
hlt
popa
sbb
call
aad
mov
adc
shl
mov
and
shl
inc
bsf
stc
or
in
mov
xor
pushf
sbb
ds
adc
mov
push
sbb
add
inc
or
stc
or
in
mov
xor
adc
cmp
add
mov
aad
clc
mov
(bad)
cmc
fsubr
stc
jb
fimul
loopne
add
test
mov
into
push
jl
nop
mov
jle
test
add
inc
xchg
ins
test
fstp
clc
or
adc
mov
lock
push
ja
push
pop
push
gs
or
pop
or
push
pop
(bad)
gs
or
adc
add
adc
mov
push
(bad)
mov
data16
push
jl
xchg
mov
dec
mov
jg
mov
adc
or
in
fild
add
popf
xor
cwde
push
mov
xor
jmp
test
pusha
mov
repz
idiv
(bad)
mov
arpl
mov
lahf
rol
movs
cdq
push
ja
add
push
ja
push
jl
addr16
(bad)
mov
pushf
mov
retf
jl
xor
addr16
(bad)
mov
(bad)
jle
jo
xchg
push
(bad)
mov
sub
push
mov
jo
mov
mov
pop
xchg
xor
repnz
idiv
mov
mov
jo
xchg
pusha
add
mov
inc
or
adc
cmp
jo
arpl
mov
ja
outs
repz
cwde
mov
inc
cwde
add
(bad)
out
xchg
cdq
aaa
mov
in
ss
sbb
rep
push
ja
mov
retf
out
mov
div
sbb
mov
cmc
xchg
fdivrp
test
xchg
lds
ficom
mov
arpl
or
addr16
(bad)
cmc
(bad)
pop
lods
cld
pop
push
jle
and
div
in
inc
inc
cwde
add
jp
cmp
jle
mov
jle
sbb
mov
cwde
add
pop
loopne
mov
mov
int
xor
cmp
ja
test
movs
cdq
push
ja
add
push
ja
push
jl
addr16
push
xchg
test
lock
or
addr16
or
jo
fld
ja
xor
js
idiv
addr16
pop
push
arpl
or
addr16
shr
jno
div
nop
add
movs
xor
enter
adc
adc
mov
sbb
xor
cwde
add
clc
mov
add
xor
sbb
mov
cwde
add
add
adc
jle
add
add
repnz
sub
test
inc
div
cwde
mov
pop
cwde
add
test
test
ret
call
fnstsw
jns
ja
mov
aad
jmp
repz
adc
mov
cmps
cli
mov
mov
sbb
mov
in
test
add
idiv
mov
add
or
jo
mov
pop
mov
addr16
or
cdq
push
ja
push
jl
addr16
arpl
fs
inc
(bad)
ret
sub
test
fisttp
into
mov
cli
or
in
cmp
sbb
div
fiadd
imul
cli
mov
mov
pusha
or
addr16
or
cwde
add
test
addr16
or
(bad)
mov
and
push
dec
inc
sbb
push
dec
cwde
add
jbe
mov
pusha
or
movs
xor
div
mov
mov
cdq
add
jle
outs
loop
jo
mov
fsubp
mov
sbb
dec
je
mov
mov
fwait
add
add
or
je
fs
mov
cdq
push
lahf
movs
cmp
fld
sar
pusha
repnz
add
fiadd
or
xchg
lds
xor
in
push
push
popa
cmp
xchg
cld
mov
xor
cdq
std
jle
sbb
xor
outs
loop
jo
mov
fiadd
add
call
xor
cmp
dec
pushf
xchg
add
mov
jae
inc
push
sbb
xchg
leave
cwde
jno
retf
lahf
add
dec
push
jbe
or
div
repnz
xor
cwde
fwait
mov
jo
cwde
xor
repnz
popf
xor
scas
push
xor
pop
xchg
retf
retf
xor
jo
mov
aad
cmps
addr16
retf
pop
dec
test
cmc
pop
push
jo
(bad)
push
xor
adc
mov
addr16
frstor
div
pop
push
jle
and
rcr
add
nop
dec
xchg
dec
xchg
add
jb
addr16
or
add
or
addr16
neg
cli
imul
retf
jp
pop
cli
or
enter
addr16
scas
cmp
or
nop
add
das
mov
mov
div
cwde
mov
addr16
or
cli
inc
stc
addr16
or
addr16
pop
fbld
or
add
mov
cwde
jno
(bad)
les
div
sub
or
adc
jp
js
or
enter
fiadd
mov
cmp
jo
mov
sbb
mov
sbb
push
lahf
push
jns
idiv
addr16
jl
addr16
xor
(bad)
(bad)
cmc
xchg
add
cwde
add
div
data16
cmps
xchg
add
mov
enter
iret
jge
jo
or
cmp
ins
cmps
xchg
fld
or
jo
push
retf
xor
and
mov
addr16
or
adc
fsubrp
adc
jp
es
or
enter
fiadd
mov
cmp
or
lahf
add
dec
retf
idiv
sbb
cmc
xor
addr16
or
cwde
add
push
ja
mov
addr16
or
mov
xor
adc
xchg
mov
test
mov
add
push
retf
retf
add
cmc
xor
ds
or
fcom
mov
cli
or
enter
fld
div
sbb
ret
repz
movs
mov
cwde
xchg
addr16
or
fiadd
div
mov
ins
and
fiadd
neg
mov
or
sbb
sti
or
div
lock
pop
ja
mov
addr16
or
or
retf
xor
movs
cli
or
sbb
add
xor
pop
in
xor
cwde
in
pop
shl
icebp
xchg
cmp
retf
adc
add
mov
idiv
addr16
pop
(bad)
ins
cli
or
addr16
jb
addr16
or
add
pop
aad
add
neg
ds
sbb
sti
or
div
lock
dec
enter
bound
add
xchg
cmp
jno
repnz
add
xor
cmp
mov
lock
push
je
in
xchg
shl
icebp
xchg
cmp
retf
adc
add
mov
idiv
addr16
pop
jb
cli
or
addr16
jb
addr16
or
add
adc
sbb
mov
cdq
ins
arpl
fiadd
neg
mov
or
sbb
sti
or
div
xor
or
cdq
add
lahf
mov
inc
neg
movs
mov
jo
add
xchg
cmp
jno
repnz
add
xor
loopne
mov
lock
push
je
in
cmp
addr16
je
xchg
cmp
retf
xor
lahf
mov
idiv
addr16
pop
call
retf
add
neg
in
xor
data16
mov
retf
sti
or
div
xor
or
cdq
add
mov
mov
cli
or
cwde
jo
repz
jne
ja
add
or
enter
addr16
scas
fimul
inc
div
push
push
ja
cmps
xchg
sbb
fnstsw
pop
or
data16
neg
add
xor
cwde
add
or
enter
addr16
or
cmp
mov
xchg
(bad)
outs
add
xor
data16
cmps
mov
addr16
jl
addr16
xlat
mov
cdq
fnstsw
sbb
xor
cwde
add
or
cwde
test
rol
or
addr16
or
cdq
or
cwde
add
mov
add
or
pop
or
cdq
add
jg
data16
cmps
mov
addr16
jl
inc
cli
or
enter
into
sbb
outs
out
mov
cli
or
adc
jp
dec
cli
or
enter
fiadd
or
enter
mov
div
fs
cmp
mov
addr16
or
and
data16
cmps
mov
cwde
add
jle
cdq
fnstsw
sbb
xor
cwde
add
or
enter
addr16
or
cmp
mov
xchg
(bad)
push
push
div
cwde
add
pop
retf
cmps
mov
addr16
jl
addr16
iret
mov
cli
add
jb
addr16
or
or
fwait
add
or
addr16
jl
jo
or
enter
iret
and
mov
add
mov
in
idiv
sbb
test
cld
add
or
addr16
or
lock
push
je
mov
addr16
or
xor
xor
sbb
neg
cwde
push
div
repz
mov
cwde
cli
inc
fldenv
or
addr16
lahf
push
js
idiv
addr16
pop
or
add
jle
mov
jle
inc
jb
addr16
or
cwde
mov
addr16
or
mov
addr16
or
mov
retf
je
mov
xor
adc
or
sbb
out
jg
repz
adc
mov
sbb
inc
or
or
call
retf
addr16
div
data16
cmps
pop
sbb
mov
adc
cmps
mov
cwde
add
or
or
call
xor
addr16
or
adc
cli
cmps
mov
adc
cmp
or
cdq
add
or
addr16
neg
in
or
add
das
mov
call
add
or
adc
jp
sbb
or
enter
addr16
or
and
div
sub
xchg
and
cwde
add
dec
xchg
addr16
or
cmp
(bad)
in
mov
xor
sbb
mov
in
idiv
sbb
xchg
addr16
or
data16
cmps
pop
call
xor
cli
cmps
mov
cwde
add
or
or
cdq
add
or
addr16
div
data16
cmps
pop
cwde
cli
inc
shl
mov
addr16
jl
addr16
xlat
mov
mov
jle
sbb
xor
cwde
add
or
addr16
div
data16
idiv
sbb
div
addr16
or
mov
retf
pop
dec
imul
mov
or
dec
ins
addr16
or
test
addr16
or
cwde
add
or
cdq
add
or
adc
cli
cmps
pop
(bad)
xor
data16
cmps
fnstsw
shl
adc
xchg
retf
retf
xor
jo
mov
test
sub
pop
or
mov
addr16
or
or
data16
jp
popf
clc
or
addr16
pop
stos
icebp
add
popf
xor
cli
cmps
pop
shl
xor
data16
cmps
fst
div
imul
cwde
xchg
addr16
or
sbb
or
enter
into
or
jle
sar
retf
or
adc
into
mov
cli
or
xchg
xchg
retf
addr16
jl
cmp
or
enter
into
or
or
enter
into
or
or
adc
into
mov
cli
or
xchg
xchg
leave
addr16
je
push
jo
repz
add
test
addr16
or
sti
or
xor
dec
in
sti
or
dec
cli
or
enter
into
or
or
cwde
jno
mov
addr16
jl
addr16
(bad)
mov
addr16
jl
addr16
(bad)
mov
addr16
jl
addr16
(bad)
mov
pop
mov
addr16
or
xor
rol
addr16
test
ret
int3
xor
adc
popf
retf
inc
ja
ins
ins
and
cwde
add
jle
cwde
add
jecxz
into
push
jle
jo
mov
mov
push
div
(bad)
div
jl
shl
cwde
add
div
outs
cli
or
cwde
add
xor
cli
or
addr16
fcomip
fucom
div
js
jl
jo
mov
and
adc
mov
in
fstp
pop
inc
or
addr16
or
pop
mov
xchg
xchg
cwde
add
xor
ror
push
dec
(bad)
(bad)
daa
mov
mov
lock
cwde
outs
neg
ins
xchg
adc
add
pop
pop
std
add
pop
sar
add
mov
and
push
jl
nop
mov
jle
cdq
cmc
jle
add
add
rep
fadd
pop
mov
pop
inc
div
fld
addr16
add
mov
pushf
add
mov
fld
jle
(bad)
mov
xchg
mov
jne
inc
idiv
or
call
xor
cwde
add
inc
ja
test
sub
jno
cmc
xor
sub
test
nop
aaa
jge
in
jne
inc
sysenter
popf
cmp
enter
ja
sbb
or
cwde
add
mov
cdq
jno
xchg
je
mov
cdq
add
stos
fld
iret
stos
fld
jle
ins
mov
fcomp
add
stos
fld
test
cwde
repz
in
add
cmc
jno
hlt
xor
lahf
add
push
jne
inc
not
jno
or
addr16
in
add
cmc
jno
hlt
xor
mov
push
cmp
or
popf
sbb
xor
lds
aam
add
xchg
xor
pop
inc
idiv
cwde
cmps
mov
fld
or
popf
sbb
xor
lds
sbb
pop
mov
pop
inc
div
add
test
add
push
and
ret
popf
sbb
xor
lds
mov
jbe
clc
xor
pop
inc
div
pop
add
xor
data16
or
popf
jno
ja
cli
repnz
push
test
sub
jno
div
fld
mov
and
pushf
xor
(bad)
jle
sbb
out
stos
fld
div
cwde
xchg
aaa
cdq
add
stos
fld
not
add
movs
fadd
not
add
stos
fld
test
cwde
xchg
or
jno
div
push
cmp
push
mov
pop
in
cmp
add
mov
mov
add
jge
cmp
ja
or
enter
xchg
lds
dec
lahf
cli
shl
movs
test
xor
push
add
or
sbb
test
sub
jae
or
in
mov
xor
add
cmp
aad
popf
cmp
pop
add
mov
mov
sbb
sbb
test
add
mov
inc
sub
test
cwde
inc
clc
mov
add
mov
cwde
cmps
xchg
cmc
jle
xchg
mov
inc
cmp
adc
div
add
aad
lea
into
movs
(bad)
cwde
or
cwde
add
mov
sahf
cli
repnz
jbe
mov
cwde
or
arpl
ja
cwde
add
outs
je
add
cmp
movs
inc
outs
je
pop
and
js
xor
bound
cmp
jmp
fild
shl
cwde
test
cdq
cmc
jle
adc
mov
cwde
cmps
adc
popf
loope
je
xchg
xor
inc
or
inc
xchg
test
mov
or
jle
mov
jle
sbb
sti
movs
fadd
aas
je
adc
movs
fadd
loop
add
popf
or
cwde
movs
jmp
xchg
xchg
mov
jmp
xor
fadd
aas
je
adc
movs
fadd
loop
cmp
retf
addr16
movs
iret
stos
fld
mov
jmp
xor
cmp
addr16
xor
jne
pop
ds
adc
mov
and
leave
mov
cwde
repnz
add
cmp
inc
neg
out
pop
div
and
bound
test
cwde
cmps
stos
xchg
fiadd
mul
je
xor
fld
test
adc
lahf
or
inc
mul
push
test
cwde
cmps
add
and
bound
test
cwde
cmps
(bad)
stos
fld
mul
xor
xchg
fiadd
mov
inc
retf
push
mov
dec
adc
imul
adc
or
in
mov
xor
cwde
mov
imul
in
out
xor
cdq
fnstsw
sbb
xor
(bad)
xor
inc
div
movs
add
div
popf
jno
ja
xchg
add
mov
std
shl
repnz
div
inc
add
xor
cwde
add
outs
mov
and
mov
in
mov
xor
cwde
add
div
or
xor
fnsave
je
and
and
add
xor
fucomp
cmps
pop
cwde
add
adc
adc
test
add
jle
adc
add
popf
xor
repnz
inc
jl
imul
jo
push
or
mov
fnstsw
div
fiadd
push
pop
cwde
outs
neg
outs
icebp
retf
pop
dec
stc
add
div
or
fcmovb
add
inc
ja
mov
test
adc
test
add
icebp
mov
mov
test
mov
pop
inc
or
lahf
inc
mov
jo
mov
mov
mov
mov
pusha
xchg
mov
jo
repz
cwde
outs
idiv
fucomp
cmps
retf
popf
xor
repnz
or
cli
loop
pop
inc
idiv
sbb
and
add
jle
leave
push
dec
xor
sbb
bsf
repnz
sub
test
addr16
stos
fld
test
adc
test
pop
push
jle
sbb
sti
data16
push
jl
nop
mov
sbb
mov
or
jo
cmp
inc
shl
fistp
cs
shl
cli
div
cs
shl
cli
div
cs
shl
cli
div
call
jno
add
cmps
(bad)
jecxz
pop
inc
or
xchg
mov
xor
mov
jecxz
mov
add
mov
or
or
cwde
add
sbb
and
push
or
mov
mov
add
sbb
inc
(bad)
or
outs
aaa
cmp
inc
mul
pop
stos
xor
outs
and
out
inc
mul
in
stos
imul
push
out
int3
push
repnz
xchg
jo
xchg
xor
inc
add
fwait
add
int
in
repz
popf
add
xor
cs
or
adc
popf
xlat
dec
ja
add
or
xor
retf
repnz
sub
div
int3
mov
jge
cmp
xor
dec
jle
sbb
cmc
mov
add
inc
fmul
or
std
je
pushf
or
sahf
cmp
xor
adc
je
popf
test
xor
mov
adc
out
repz
add
lea
xor
call
or
std
je
call
mov
sbb
icebp
aaa
in
inc
jle
sbb
repz
add
or
div
cwde
add
aas
retf
out
int3
push
repnz
xchg
in
sbb
repz
mov
movzx
jl
pusha
mov
xor
cmp
xor
push
jle
rol
mov
aaa
sbb
icebp
xor
cmp
sbb
hlt
mov
add
inc
stos
mov
mov
add
sbb
retf
cwde
add
or
jo
lods
xor
adc
push
mov
and
test
xor
sbb
test
mov
retf
push
mov
ja
mov
retf
ja
cmps
add
or
fwait
add
or
fwait
add
jl
xchg
sub
ss
add
push
fcomp
invd
xor
mov
xor
pop
out
mov
fadd
imul
enter
addr16
scas
retf
inc
ja
or
xchg
pop
xor
movs
in
div
std
stc
neg
xchg
mov
ss
jge
lahf
(bad)
jecxz
addr16
or
inc
or
out
sar
xchg
idiv
(bad)
in
push
out
cdq
aad
jo
mov
rcl
hlt
sub
repnz
adc
imul
mov
jle
cdq
fcomip
in
in
repz
stos
in
jp
xchg
pusha
pusha
mov
retf
inc
ja
xchg
retf
jp
xchg
mul
sbb
repz
jno
repz
push
clc
or
xlat
call
xor
xchg
cmp
pop
lods
cld
pop
push
jle
and
xor
cwde
add
sub
addr16
xor
cwde
in
dec
ins
cwde
add
ja
lahf
ret
jb
inc
cli
or
add
cli
div
cwde
add
jnp
or
cwde
jo
cmp
add
cli
ja
popf
gs
ja
add
das
sbb
test
jmp
and
div
in
pop
sbb
xchg
mov
(bad)
ja
or
outs
cmp
or
jo
scas
xor
inc
cli
or
add
sbb
outs
cmp
jmp
inc
mul
cmc
mov
addr16
ret
and
pushf
mov
jo
scas
xor
inc
cli
or
add
or
cdq
or
imul
retf
jmp
mov
add
or
addr16
jb
ja
or
ja
or
jp
je
lea
clc
mov
add
xor
ja
or
jp
jl
lea
je
mov
inc
cli
or
popf
jno
ja
test
inc
cli
or
cwde
add
or
cli
repnz
sub
idiv
mov
hlt
jae
ss
mov
xor
addr16
(bad)
retf
lahf
xor
jo
scas
xor
outs
add
rcr
jmp
mov
sbb
addr16
mov
addr16
pop
push
add
inc
ja
xchg
ja
or
cwde
ins
or
cwde
add
or
addr16
jmp
or
fs
inc
cli
xchg
inc
cli
or
addr16
sbb
test
out
cmc
hlt
jp
hlt
pusha
fs
(bad)
sbb
repz
sub
pminub
cmp
or
inc
test
retf
test
adc
ja
addr16
sbb
sbb
mul
cwde
cmc
div
fs
cld
iret
addr16
scas
mov
jmp
div
mov
inc
cli
or
addr16
div
addr16
clc
mov
cli
or
add
add
or
jo
mov
ss
add
sbb
les
aaa
adc
loop
or
mov
xchg
ja
or
addr16
xlat
call
aam
push
mov
mov
addr16
jl
ins
jmp
inc
les
aaa
pop
in
ss
idiv
sbb
cmc
retf
sbb
test
ja
or
das
cli
repnz
sub
div
addr16
dec
ja
in
pop
arpl
fisttp
retf
hlt
and
mov
inc
cli
or
adc
jl
cmp
or
adc
je
test
cmc
mov
mov
inc
cli
or
addr16
cmc
mov
mov
inc
cli
or
mov
inc
cli
or
mov
inc
cli
or
mov
jmp
idiv
addr16
mov
or
mov
inc
cli
or
add
jmp
and
add
div
mov
mov
retf
sbb
lea
or
jb
movs
pop
xchg
add
pop
jmp
add
neg
retf
adc
jmp
or
adc
loop
or
nop
add
addr16
xlat
call
xor
addr16
lahf
xor
jo
mov
test
or
or
cdq
add
idiv
sbb
div
ja
or
cs
test
or
cdq
add
div
addr16
jl
popf
add
xor
adc
adc
addr16
xor
cwde
xchg
inc
cli
or
adc
jle
rol
jle
sbb
cmc
mov
add
je
fwait
test
xor
sbb
repz
add
je
popf
test
xor
push
cli
repnz
sub
idiv
cs
push
jmp
cli
xlat
call
retf
push
jmp
cli
idiv
cs
fcomp
mov
add
in
or
sbb
out
jne
outs
out
clc
mov
addr16
sbb
(bad)
loopne
mov
mov
retf
ja
cmp
or
cdq
or
cmp
or
pop
out
mov
addr16
xor
cwde
test
or
jo
mov
cmp
xor
xchg
div
movs
cmp
xor
xchg
test
or
jno
jb
int
sbb
aaa
dec
cmp
jno
cmp
add
cli
cmps
retf
sub
addr16
inc
loope
cli
or
out
cld
or
sbb
sti
mov
out
retf
xor
add
addr16
idiv
les
aaa
adc
fcomp
dec
or
addr16
jle
mov
jb
ja
or
add
daa
retf
inc
ja
in
fxch
addr16
ja
imul
retf
inc
mov
jmp
movs
add
mov
add
or
addr16
test
mov
retf
push
mov
jo
sti
(bad)
test
xor
adc
jno
ja
mov
add
adc
mov
push
repnz
stc
adc
mov
inc
mov
mov
inc
test
mov
mov
lahf
add
jbe
pusha
sbb
xor
in
or
(bad)
jle
cdq
(bad)
jle
pusha
ret
mov
cwde
out
loope
fwait
or
data16
mov
jg
icebp
mov
cli
repz
test
repz
neg
cmp
clc
or
int
(bad)
(bad)
mov
add
btr
add
idiv
cs
test
add
clc
sbb
shl
cwde
add
xor
inc
or
mov
xor
(bad)
je
lahf
xchg
iret
popf
jo
mov
inc
mov
sbb
xor
mov
xor
inc
div
in
or
xchg
xor
add
addr16
jl
pusha
mov
int
mov
xor
(bad)
cwde
cmp
cwde
add
or
xchg
mov
or
div
cdq
cmp
or
sbb
xor
js
cmp
cli
xor
add
clc
or
int
(bad)
aam
xor
inc
or
emms
jo
add
dec
add
lahf
fld
retf
add
mov
cdq
or
addr16
test
mov
adc
mov
adc
jnp
out
mov
cwde
add
mul
add
idiv
test
xor
jo
mov
movs
cmp
add
xchg
xor
call
jle
(bad)
pop
lods
push
and
xlat
xor
cwde
add
cdq
sub
mov
inc
cli
or
mov
cmp
addr16
cmps
fisttp
xor
addr16
cmps
fst
shl
pusha
xor
mov
(bad)
int3
xor
adc
mov
sbb
jmp
repnz
neg
push
push
div
adc
je
xchg
push
mov
sub
add
ja
cwde
add
popf
ss
cmp
mov
mov
cli
sub
sti
xor
xchg
xchg
xor
adc
mov
retf
arpl
cmps
xor
pop
adc
xor
jle
test
nop
fwait
add
mov
cwde
jno
mov
ins
out
icebp
mov
ins
cli
add
cli
or
in
aas
fs
add
div
sahf
mov
sbb
mov
push
pop
ds
adc
mov
pop
adc
test
ret
lock
xor
cwde
outs
neg
add
(bad)
fucom
push
div
ror
div
pushf
xor
fmulp
outs
cmc
pop
cwde
outs
mul
test
cmp
les
inc
ja
cdq
add
popf
xor
retf
cli
cmp
in
cmp
popf
xor
repnz
lahf
lds
mul
mov
add
mov
mul
push
cmps
xor
cwde
add
xor
adc
je
xchg
push
mov
and
es
cwde
repnz
add
neg
outs
neg
ins
div
nop
in
pop
gs
add
add
adc
mov
in
add
cmc
jae
popf
aaa
repnz
adc
add
or
jo
retf
mov
xor
adc
mov
xor
(bad)
int3
xor
adc
cmps
data16
push
jl
nop
ret
jno
jge
sbb
mov
inc
mov
ficomp
add
jb
js
dec
ins
push
or
ins
mov
fiadd
div
add
neg
repnz
div
inc
out
in
cs
lock
ja
in
mov
icebp
nop
inc
int3
push
addr16
cld
mov
cmp
inc
pushf
ret
repz
jns
arpl
sub
(bad)
add
mov
adc
div
adc
push
pop
ds
adc
mov
inc
xchg
ret
dec
adc
dec
sbb
icebp
mov
in
xor
cwde
pop
(bad)
retf
clc
sbb
xor
cwde
xchg
cmp
jno
rcl
fiadd
imul
or
stc
test
ret
int3
xor
adc
je
mov
mov
push
scas
mov
xor
mov
pop
inc
adc
fstp
xchg
(bad)
adc
add
test
cwde
add
sub
jo
push
pop
inc
adc
cmp
adc
fidiv
add
das
mov
or
popf
hlt
je
xchg
fstp
js
aaa
in
add
pop
jbe
cmp
div
sbb
xor
xchg
or
call
fidivr
div
xchg
mov
xor
aaa
sub
sti
cmc
inc
pushf
xchg
retf
cdq
test
mov
fstp
jle
adc
cmp
add
inc
daa
mov
sahf
cmc
cmc
add
xor
xchg
stos
xor
in
cdq
fnstsw
adc
mov
xchg
mov
xlat
outs
in
jo
add
rcl
inc
sti
cmp
inc
icebp
mov
retf
in
mov
xlat
xchg
stos
xor
jo
or
nop
mov
cmp
jl
mov
jae
jle
cdq
fnstsw
(bad)
pop
lods
cld
pop
movs
or
mov
or
addr16
sbb
push
or
movs
or
movs
or
movs
or
movs
or
movs
or
movs
or
movs
or
movs
or
mov
or
addr16
or
or
addr16
test
jmp
pop
add
or
movs
or
movs
or
or
out
addr16
xchg
movs
or
div
or
retf
xchg
ficom
adc
jl
pushf
xchg
movs
adc
movs
or
movs
sbb
rep
or
movs
in
movs
or
movs
sbb
cmp
xchg
movs
stc
xchg
movs
or
or
cwde
adc
mov
loopne
loopne
cwde
mov
xor
fisttp
xor
pop
movs
or
mov
or
movs
or
movs
or
addr16
retf
movs
or
addr16
or
movs
or
movs
or
movs
or
movs
or
add
or
movs
or
loopne
or
movs
or
movs
or
add
lea
xchg
xor
retf
movs
or
addr16
or
movs
or
movs
or
movs
or
movs
or
add
or
movs
or
xor
or
movs
or
movs
or
add
push
or
push
push
mov
or
pop
push
jle
sbb
out
data16
push
jl
nop
mov
cmp
or
fidivr
xchg
mov
cdq
(bad)
jle
fs
push
pop
inc
pop
xor
cwde
add
cmps
fld
repnz
ror
arpl
or
data16
add
dec
retf
test
adc
fsubp
add
push
mov
add
push
mov
and
mov
cwde
repnz
leave
adc
mov
xchg
xchg
cmp
xor
inc
clc
or
cmp
xor
add
test
or
xchg
mov
iret
mov
jg
sbb
test
add
addr16
push
pop
call
or
adc
test
mov
iret
cdq
aad
fst
dec
div
push
jle
cdq
cmc
cmps
fucom
dec
div
pop
add
fs
xor
push
dec
into
repz
xchg
retf
test
ret
int3
xor
adc
je
mov
mov
out
test
mov
neg
test
and
div
pop
push
jle
outs
out
idiv
pop
(bad)
cli
hlt
popa
sbb
call
aad
mov
sbb
xor
lahf
xor
(bad)
pop
div
addr16
frstor
std
or
sbb
(bad)
mov
sbb
cmc
xor
ja
adc
adc
retf
inc
neg
mov
pop
mov
add
mov
iret
or
ja
adc
addr16
popf
and
push
retf
inc
mul
les
pop
cwde
mov
ss
ror
push
mov
enter
cwde
add
aas
mov
add
loopne
pop
ins
test
(bad)
jl
dec
mov
je
add
and
leave
dec
ja
cmp
leave
jmp
mov
and
movs
xor
fstp
jle
adc
hlt
jo
mov
jmp
mov
and
inc
mov
cmova
fwait
js
add
xchg
js
add
inc
retf
clc
or
and
dec
mov
jmp
jbe
add
pop
push
aad
idiv
mov
cmp
xlat
xlat
mov
mov
cwde
outs
mov
and
hlt
xor
mov
enter
cwde
add
aas
mov
add
loopne
jae
lds
(bad)
jl
dec
mov
je
ins
add
and
leave
dec
ja
cmp
shr
push
loope
inc
idiv
cmc
hlt
jo
mov
jmp
mov
and
inc
mov
pop
inc
inc
mov
movs
ror
or
ja
adc
mov
add
mov
adc
int
outs
push
retf
inc
idiv
cs
sbb
jp
jecxz
jl
mov
adc
sub
mov
add
test
call
push
jle
fwait
add
mov
add
or
sbb
call
outs
neg
outs
neg
ins
div
nop
in
(bad)
jl
add
add
pop
mov
enter
into
cli
adc
js
xor
jo
mov
repnz
sbb
and
adc
fst
jle
(bad)
pop
lods
cld
pop
push
jle
sbb
out
aaa
cwde
add
sub
xor
mov
add
jb
gs
or
inc
neg
test
sub
mov
add
mov
frstor
dec
div
mov
outs
out
ss
lahf
les
sub
mov
mov
inc
jle
adc
xor
add
sbb
mov
dec
addr16
cmps
mov
bound
ss
xchg
neg
(bad)
xchg
mov
addr16
ja
addr16
jo
cmp
inc
push
ret
jb
addr16
or
cwde
mov
cmp
repnz
(bad)
repz
aaa
jbe
xchg
adc
cli
cmps
pop
or
ja
mov
gs
or
xor
cwde
outs
cmc
pop
cwde
outs
neg
add
or
addr16
cmps
fisttp
div
addr16
or
mov
cmps
fstp
add
or
enter
cwde
add
test
addr16
(bad)
jge
add
jle
addr16
enter
neg
add
inc
ja
push
lahf
call
sbb
push
pop
mov
add
or
addr16
lahf
jmp
sbb
push
lahf
xor
retf
add
mov
mov
mov
retf
inc
ja
ins
xor
fiadd
idiv
addr16
lahf
xor
mov
ins
fwait
jmp
neg
add
div
sbb
test
cwde
add
xor
adc
je
xchg
push
mov
mov
std
fmulp
adc
or
in
mov
xor
adc
mov
cwde
mov
leave
enter
cmps
add
popf
xor
xchg
cli
cmp
mov
mov
cli
mov
movs
add
inc
popa
mov
arpl
add
xor
in
stc
pop
sbb
add
into
xor
jo
mov
outs
push
(bad)
mov
stos
mov
cmps
mov
adc
xor
jo
mov
cwde
outs
mul
jo
retf
or
cli
cmp
xchg
sub
adc
cmps
bound
loop
push
mov
cmpps
leave
adc
popf
xor
add
mov
inc
mov
cmp
jo
fstp
shr
push
(bad)
mov
bound
mov
(bad)
pusha
mov
mov
(bad)
cmps
pop
cwde
ins
icebp
xor
repnz
sti
retf
pop
outs
rol
repz
out
ror
sbb
sub
add
or
push
aaa
inc
xchg
cli
or
cmp
fimul
mov
retf
pop
push
rol
test
pop
push
jle
sbb
out
iret
mov
push
adc
mov
dec
adc
repnz
cwde
add
(bad)
pusha
mov
mov
add
cmp
or
inc
pushf
xor
fisub
push
popf
xor
mov
or
loopne
xor
xchg
cli
or
les
fiadd
mov
xor
sub
lea
xor
push
int3
xor
adc
cmps
gs
push
dec
xchg
(bad)
pusha
out
mov
inc
xchg
xor
dec
inc
div
fadd
mov
cwde
mov
int
ret
dec
inc
test
outs
neg
add
popf
xor
inc
inc
neg
ret
xor
cwde
test
and
add
repz
out
loope
lods
stc
and
in
mov
jo
out
icebp
mov
loop
xor
pop
mov
jle
mov
jle
adc
xor
add
mov
arpl
mov
repnz
stos
jne
xor
mov
leave
adc
sbb
sbb
leave
cmp
sub
mov
cmps
mov
addr16
ffree
inc
div
pusha
sub
mov
call
fdivp
test
xor
cwde
jo
cmp
jno
mov
cmp
inc
or
in
pop
jl
mov
div
mov
inc
sbb
adc
imul
enter
cwde
add
or
addr16
mov
addr16
fucom
inc
div
pop
sub
mov
cdq
std
sbb
test
int3
xor
adc
je
mov
bound
pop
push
(bad)
adc
push
push
pop
data16
jle
dec
loop
repnz
push
popf
jne
test
test
mov
push
sbb
xchg
jno
cmp
add
mov
je
xor
ja
mov
cmc
xlat
or
sti
div
in
clc
and
xor
adc
je
stc
push
jle
and
div
pop
dec
add
pop
out
hlt
mov
sbb
xchg
bound
js
(bad)
lock
sub
push
pop
dec
fiadd
xchg
retf
clc
sbb
int3
jo
ja
mov
ret
int3
xor
adc
dec
jge
pop
neg
out
div
aam
or
pop
jecxz
mov
icebp
or
addr16
or
cwde
mov
addr16
or
jo
fld
cmc
or
sbb
(bad)
mov
push
jo
add
in
fistp
cwde
add
or
cwde
jo
data16
mov
cwde
xor
fmul
jo
fst
inc
div
gs
dec
sub
add
or
mov
addr16
or
outs
dec
in
addr16
or
adc
jp
mov
push
popf
jne
push
mov
cwde
mov
addr16
or
cli
cmp
in
dec
je
add
jle
adc
mov
mov
cli
mov
movs
add
inc
popa
mov
pop
nop
mov
addr16
or
push
pop
pop
push
cli
or
inc
inc
test
fld
lahf
jnp
inc
test
addr16
scas
jo
add
iret
jo
add
imul
js
pop
push
mov
retf
pop
(bad)
fld
jle
test
or
xor
popa
xchg
into
fadd
div
adc
mov
xor
cwde
add
das
jno
add
imul
js
pop
push
mov
retf
pop
ret
div
inc
inc
test
addr16
adc
add
push
jno
add
imul
js
pop
push
mov
retf
pop
mov
add
pop
dec
fadd
div
bound
mov
jo
mov
cwde
mov
outs
ret
jl
fs
or
iret
ins
leave
jmp
div
in
and
mov
addr16
lahf
adc
inc
mul
dec
mov
cwde
xchg
and
jmp
ins
cwde
add
test
add
ja
cli
inc
leave
addr16
or
fiadd
xor
xchg
fidiv
retf
pop
sbb
add
pop
(bad)
add
div
bound
mov
lock
pop
ja
cli
inc
leave
addr16
or
xchg
inc
div
fidiv
retf
pop
ret
div
fild
div
bound
mov
jo
mov
cwde
mov
outs
ret
jl
fs
or
iret
ins
leave
jmp
div
in
push
jle
push
cli
or
adc
pop
pop
fild
div
lock
sub
mov
addr16
or
push
jb
addr16
or
jo
mov
addr16
lahf
in
inc
mul
push
mov
cwde
xchg
adc
cwde
mov
outs
ret
or
sub
add
div
adc
mov
xor
cwde
add
pop
ret
jb
addr16
or
add
imul
js
pop
push
mov
retf
pop
cmp
add
pop
(bad)
fiadd
div
bound
mov
lock
sub
cli
inc
leave
addr16
or
jb
div
ds
div
cwde
pushf
add
sbb
repnz
mov
aad
add
or
jo
mov
cwde
xchg
cmp
adc
lahf
mov
in
adc
cli
or
enter
fiadd
div
mov
and
div
sbb
repnz
mov
jmp
add
or
jo
mov
cwde
xchg
cmp
cwde
mov
outs
ret
or
lds
test
addr16
scas
ja
add
jecxz
cwde
add
imul
js
fstp
div
retf
leave
addr16
or
cmp
ja
push
pop
retf
div
mov
add
xor
gs
neg
xlat
add
xor
addr16
div
xchg
addr16
or
pop
cli
or
fwait
xor
gs
int3
mov
cli
or
jmp
jl
pop
cli
or
fwait
mov
clc
and
xor
sbb
xchg
addr16
dec
das
cwde
add
xor
out
fistp
clc
or
mov
cwde
cli
or
pop
sub
mov
cwde
cli
or
ins
mov
cwde
xchg
and
sub
adc
mov
retf
or
test
addr16
or
sbb
addr16
inc
shl
retf
jp
cwde
add
jb
addr16
or
popa
sub
push
pop
sub
add
pop
retf
test
add
ja
cli
inc
leave
addr16
or
xchg
sbb
(bad)
fld
div
cwde
pushf
add
sbb
repnz
mov
jmp
add
or
jo
mov
cwde
xchg
cmp
adc
pop
call
div
bound
mov
lock
pop
ja
cli
inc
leave
addr16
or
push
inc
div
sbb
test
xor
addr16
or
addr16
icebp
addr16
or
sbb
jb
addr16
or
lds
enter
fsub
add
xor
sbb
in
mov
mov
or
cdq
add
pop
mov
popf
add
jb
addr16
or
sbb
xor
addr16
or
cli
and
pop
sub
mov
addr16
or
sbb
xor
adc
cli
je
addr16
ja
cdq
add
xchg
mov
mov
add
mov
mov
addr16
clc
sbb
jae
ins
cli
or
enter
cwde
add
or
enter
addr16
je
pushf
mov
addr16
or
sub
cli
sub
cli
jl
fs
or
enter
fiadd
div
push
cmp
xor
cwde
pushf
add
sbb
repnz
mov
jmp
add
or
jo
enter
xor
adc
pop
outs
cmps
add
div
bound
mov
lock
sub
cli
inc
leave
addr16
or
loop
div
scas
cmp
xor
cwde
pushf
add
sbb
repnz
mov
aad
add
or
jo
enter
xor
gs
pop
mul
inc
loope
cwde
cli
jb
addr16
or
addr16
or
retf
in
ffreep
addr16
je
xchg
mov
addr16
or
or
data16
or
(bad)
retf
pop
xor
or
test
add
ja
cli
inc
leave
addr16
or
jp
div
push
cmp
xor
cwde
pushf
add
sbb
repnz
mov
jmp
add
or
jo
leave
xor
adc
add
adc
jle
jo
leave
xor
cwde
add
or
lds
test
addr16
jnp
cwde
add
(bad)
add
or
jo
leave
xor
jo
leave
xor
cwde
add
or
push
cmps
add
div
adc
mov
xor
cwde
add
test
cwde
add
je
popf
js
pop
(bad)
xor
data16
pop
sub
or
div
cwde
mov
outs
ret
or
inc
test
addr16
add
cwde
add
inc
or
add
je
popf
js
pop
push
mov
retf
pop
cli
movs
add
pop
mov
xchg
add
push
mov
add
xor
cwde
add
jl
fs
or
iret
ins
leave
jmp
div
mov
mov
addr16
retf
pop
mov
add
jle
mov
jle
jo
retf
mov
outs
ret
or
lds
test
addr16
stos
or
ins
jmp
fiadd
or
jo
retf
xchg
cmp
cwde
mov
outs
ret
or
lds
test
addr16
ror
cwde
add
in
jmp
add
or
jo
retf
xchg
cmp
cwde
add
test
add
ja
cli
inc
leave
addr16
or
jle
div
sbb
push
jl
fs
or
enter
fiadd
div
push
cmp
xor
cwde
pushf
add
sbb
repnz
mov
aad
add
or
jo
retf
xor
lock
inc
leave
addr16
or
or
div
(bad)
cmp
xor
cwde
pushf
add
sbb
repnz
mov
aad
add
or
jo
retf
xor
and
xor
sbb
mov
fld
in
hlt
xor
adc
jbe
mov
div
addr16
or
in
sub
push
pop
cmp
pop
fisub
add
push
mov
add
ja
cli
inc
leave
addr16
or
xchg
cmp
xor
inc
fdiv
retf
pop
into
mov
or
test
add
ja
cli
inc
leave
addr16
or
dec
div
outs
jbe
xor
cwde
add
imul
js
fucom
div
cwde
pushf
add
retf
leave
addr16
or
cmp
ja
push
pop
inc
mov
adc
test
addr16
jg
cwde
add
neg
outs
cmc
pop
cwde
outs
neg
add
(bad)
fstp
sbb
gs
jbe
add
xor
data16
pop
mov
add
dec
shl
(bad)
enter
addr16
or
sub
in
xchg
or
jo
or
jo
shl
sti
or
cmp
div
adc
movs
fisttp
xor
xor
gs
test
ret
int3
xor
adc
jbe
nop
add
xor
xchg
push
jle
outs
loop
mov
sti
or
adc
xor
add
mov
enter
fiadd
or
enter
cwde
add
jle
repnz
idiv
addr16
lahf
xor
add
or
sbb
jmp
(bad)
idiv
jmp
ja
ins
mov
xor
add
or
lock
ja
ins
sub
fiadd
pop
fwait
add
pop
retf
xor
cwde
add
jle
sbb
arpl
cwde
add
pop
cmp
jne
int
std
jle
sbb
idiv
cdq
or
sbb
idiv
mov
xor
add
or
mov
sbb
mov
add
mov
repz
push
pop
jle
add
jp
call
retf
pop
add
jns
retf
inc
xchg
gs
or
mov
push
(bad)
mov
mov
mov
mov
adc
test
ret
call
enter
cmp
or
jo
shl
cli
or
sub
in
pop
add
mov
gs
or
adc
mov
aaa
cdq
inc
jle
adc
or
sbb
xchg
pop
cwde
add
neg
es
xor
addr16
jbe
je
div
adc
cli
cmps
fstp
push
ret
push
pop
or
add
xor
addr16
cmps
pop
aaa
fnstenv
ja
ins
cmc
xor
push
and
cmc
in
or
xor
call
retf
div
data16
or
add
cli
cmps
(bad)
xor
xor
addr16
or
addr16
enter
adc
or
addr16
enter
cmp
or
into
mov
gs
or
dec
add
adc
addr16
(bad)
cmc
in
or
xor
cdq
add
mov
adc
cli
cmps
fnsave
cmp
fmulp
adc
jp
sub
or
enter
data16
or
xchg
iret
xor
addr16
jle
sbb
or
repnz
popf
xor
addr16
cmps
fisttp
shr
pusha
sub
mov
data16
or
add
or
addr16
xor
jo
or
cwde
add
or
cwde
jno
push
pop
sbb
addr16
div
cwde
add
or
enter
addr16
scas
mov
addr16
jp
and
or
enter
cwde
outs
xlat
pop
cwde
outs
neg
mov
data16
or
add
idiv
or
cwde
add
or
addr16
dec
push
cwde
add
jle
addr16
enter
daa
inc
inc
neg
fnstenv
retf
addr16
cmps
fnsave
xor
xor
sbb
add
cld
push
fs
or
enter
fiadd
idiv
ins
pop
ss
add
div
addr16
mov
clc
or
movs
add
pusha
lock
mov
mov
clc
or
cwde
jno
pop
cwde
cmc
div
cwde
ins
repz
add
or
enter
lods
add
popf
jmp
fs
or
enter
addr16
je
xchg
cmp
retf
adc
mov
neg
test
or
cwde
add
imul
cli
div
mov
gs
or
pop
ret
xor
cwde
add
xchg
addr16
jle
into
in
xchg
cwde
add
push
enter
imul
mov
push
pop
cwde
add
or
jae
dec
ins
xchg
add
jb
gs
or
(bad)
repz
je
movs
arpl
mov
xor
pusha
mov
retf
pop
cli
stos
add
jle
data16
add
mov
retf
pop
mov
arpl
fs
and
mov
data16
les
adc
cmp
inc
or
das
push
or
or
outs
add
cmp
push
add
repnz
idiv
add
mov
cdq
or
adc
mov
fstp
cmps
frstor
xor
xor
in
or
bnd
(bad)
xor
xchg
mov
retf
adc
push
pop
adc
sub
mov
xchg
mov
retf
adc
mov
leave
adc
in
inc
add
or
das
push
or
or
outs
mov
fisubr
std
cmps
pop
cwde
push
lahf
(bad)
retf
inc
neg
outs
neg
bound
div
and
xor
cmp
div
into
in
mov
xor
xor
(bad)
pop
ds
adc
jo
(bad)
xor
adc
mov
push
adc
fmulp
adc
dec
mov
jg
jb
js
or
cli
or
add
pop
retf
jp
pop
in
retf
xchg
jmp
mov
idiv
xchg
div
mov
xor
addr16
pop
mov
pop
or
or
addr16
fnsave
std
add
adc
jle
test
ret
js
or
add
pop
retf
jp
pop
in
retf
pop
pop
mov
idiv
jno
mov
pop
push
or
jo
ret
xor
xchg
lds
aad
cli
or
in
and
cwde
add
std
mov
cmp
add
pop
test
mov
cwde
add
mul
push
jl
nop
mov
jbe
mov
cmc
test
ret
movs
pop
pushf
add
xor
cwde
mov
mov
cli
mov
movs
add
inc
popa
mov
pop
nop
mov
push
and
or
inc
inc
mul
inc
ret
xor
sbb
pusha
pop
cwde
add
jle
lock
sub
mov
js
or
add
xor
jo
les
cwde
add
or
lds
idiv
addr16
pop
retf
div
stos
add
div
bound
mov
lods
les
cwde
add
jp
cwde
in
retf
scas
jmp
cwde
in
retf
push
push
cwde
add
ja
cwde
add
imul
js
pop
push
xor
addr16
cmps
fld
div
push
ins
shr
add
or
enter
cwde
add
mov
cwde
add
imul
js
pop
push
xor
addr16
cmps
ffree
div
xor
xor
cwde
pushf
add
sbb
repnz
mov
inc
cwde
add
imul
add
lahf
ins
inc
inc
idiv
addr16
pop
retf
div
mov
jmp
or
enter
fiadd
or
enter
cwde
add
pop
ret
jb
inc
cli
or
add
imul
js
pop
push
xor
addr16
cmps
fst
div
xchg
fidiv
aad
cli
cmps
frstor
aaa
div
out
aaa
div
cwde
pushf
add
sbb
repnz
mov
aad
add
or
enter
cwde
add
hlt
jmp
or
enter
cwde
add
pop
ret
jb
inc
cli
or
add
imul
js
fld
div
retf
xor
lock
sub
mov
js
or
adc
xor
lock
ja
mov
js
or
and
xor
jo
(bad)
xor
cwde
add
or
lds
idiv
addr16
pop
retf
div
inc
inc
idiv
addr16
pop
fisubr
or
jle
jo
(bad)
xor
cwde
add
or
lds
idiv
addr16
pop
mov
or
idiv
addr16
pop
sahf
test
or
test
add
ja
mov
js
or
add
cwde
xchg
cmp
cwde
add
jb
js
or
sub
ja
mov
js
or
cmp
xor
jo
(bad)
xor
cwde
add
or
lds
idiv
addr16
pop
push
test
or
idiv
addr16
pop
adc
or
test
add
ja
mov
js
or
add
xor
and
cwde
xor
sbb
mov
fnsave
xor
hlt
xor
adc
jbe
mov
div
js
or
adc
ja
mov
js
or
cwde
(bad)
xor
jo
(bad)
xor
cwde
add
or
lds
idiv
addr16
pop
scas
test
div
inc
inc
idiv
addr16
pop
mov
add
jbe
sub
jo
(bad)
xor
cwde
add
or
lds
idiv
addr16
pop
outs
test
div
test
test
add
xor
cwde
add
jp
cwde
in
retf
scas
jmp
cwde
in
retf
or
cwde
add
daa
call
cwde
in
retf
sti
add
nop
outs
neg
outs
cmc
pop
cwde
outs
neg
add
jg
cwde
add
or
sbb
and
in
retf
sti
sbb
mov
mov
aad
cli
mov
retf
adc
cwde
add
or
jo
fdiv
jae
jle
mov
jle
(bad)
pop
lods
cld
pop
push
jle
sbb
jae
cwde
add
sbb
outs
jle
outs
loop
mov
dec
retf
je
add
or
cwde
xor
mov
ja
xor
retf
in
push
sbb
mov
mov
pusha
repnz
mov
fst
div
cwde
add
or
ins
mul
fiadd
idiv
outs
out
cwde
mov
gs
or
(bad)
fnstenv
cwde
add
or
enter
fiadd
neg
add
adc
xchg
adc
pop
div
cwde
mov
data16
or
add
cli
cmps
frstor
std
test
ret
cmp
or
retf
mov
gs
or
sub
retf
xor
xchg
(bad)
jmp
movs
sub
mov
data16
or
lods
fnstenv
gs
or
or
addr16
cmps
fisttp
sub
xor
mov
gs
or
outs
mov
cwde
mov
data16
or
adc
xor
sbb
loopne
cwde
add
or
fadd
adc
addr16
div
add
or
cwde
jno
push
pop
sbb
addr16
div
cwde
add
or
enter
addr16
scas
mov
addr16
jp
and
or
enter
cwde
outs
xlat
pop
cwde
outs
neg
mov
data16
or
add
idiv
or
cdq
add
or
addr16
aaa
sbb
add
jle
addr16
enter
daa
inc
inc
neg
fnstenv
retf
addr16
cmps
(bad)
sub
xor
sbb
add
xchg
fs
or
enter
fiadd
idiv
ins
pop
ss
add
div
addr16
mov
dec
retf
test
xchg
repz
mov
add
xor
cwde
in
cmps
pop
cwde
add
jle
lock
xor
fs
or
in
aas
pop
cwde
add
sub
mov
fs
or
push
inc
retf
xor
movs
cli
or
cwde
add
or
addr16
movs
(bad)
repnz
sbb
(bad)
cmp
or
cwde
add
inc
mov
sbb
push
pop
jp
add
pushf
xor
gs
or
mov
enter
jns
cli
or
cli
or
shr
div
cwde
in
jmp
cwde
add
mov
into
in
nop
or
inc
mov
cld
jmp
mov
idiv
xchg
bswap
mov
imul
or
or
jo
das
retf
xor
jae
jl
add
or
sbb
les
cli
inc
mov
sbb
retf
sti
mov
loopne
xor
mov
div
sbb
add
xor
gs
or
int3
fidiv
pusha
mov
pop
cwde
cli
inc
xchg
gs
or
cmps
sub
xor
addr16
pop
sub
cdq
or
addr16
icebp
mov
or
outs
push
(bad)
repz
je
movs
arpl
mov
adc
test
retf
into
add
fidiv
addr16
fst
sub
xor
int3
pop
out
repnz
pop
dec
mov
idiv
and
xor
cwde
repnz
in
xlat
sbb
add
mov
xor
pop
shl
enter
lock
test
pop
cwde
in
out
cwde
add
mov
xor
adc
mov
enter
mov
push
mov
(bad)
pop
lods
cld
pop
push
jle
and
arpl
cwde
add
mov
mov
add
cmp
mov
mov
pop
or
inc
pushf
xor
(bad)
ins
or
cwde
add
or
enter
mov
neg
cli
cmp
xor
addr16
cmps
fstp
mov
retf
sti
or
div
jae
jbe
xchg
xor
ss
sbb
(bad)
pop
ds
adc
fild
sub
repnz
dec
cwde
add
div
(bad)
cmps
pop
sahf
fnstenv
gs
fnsave
rol
pop
cwde
ins
mov
cwde
add
mov
jo
fidiv
data16
ss
fiadd
pop
stos
mov
div
ins
push
popf
xor
cwde
cli
ret
inc
neg
bound
mov
xchg
mov
retf
sbb
cli
dec
or
mov
mov
or
sub
cwde
add
or
outs
neg
outs
repnz
cdq
outs
neg
outs
neg
add
xor
repnz
xor
hlt
maskmovq
div
pusha
mov
pop
cdq
push
popf
add
fiadd
neg
push
popf
add
fld
neg
push
popf
add
fiadd
neg
push
popf
add
fld
neg
push
popf
add
fadd
div
outs
mul
xor
mov
jo
fbstp
repnz
mov
jo
fbstp
repnz
mov
jo
fbstp
repnz
mov
jo
fbstp
push
push
popf
add
fld
neg
push
popf
add
fld
neg
push
popf
add
fiadd
neg
push
popf
add
fiadd
test
ins
mov
push
int3
xor
daa
(bad)
jmp
addr16
add
ret
inc
neg
fisub
div
cwde
ins
out
fadd
pop
test
add
neg
cli
ret
inc
neg
mov
cmp
cwde
ins
out
fadd
ja
fiadd
div
outs
or
lods
sub
cwde
in
movlps
inc
neg
xor
mov
mov
jo
shl
lods
sbb
cwde
in
and
cwde
add
neg
xor
test
shl
lods
sub
inc
adc
inc
neg
xor
mov
mov
jo
shl
lods
and
jnp
cwde
add
neg
xor
mov
test
xor
pusha
mov
pop
fs
ret
inc
neg
cli
and
xor
cwde
ins
out
fadd
jae
fiadd
imul
push
jle
sbb
jecxz
iret
mov
jbe
inc
div
cwde
cli
cmp
mov
pop
je
mov
into
in
je
addr16
je
mov
popf
xor
cwde
add
div
into
in
fwait
adc
xor
stos
fld
mov
mov
add
inc
nop
cmc
cmps
pop
cwde
outs
neg
add
sub
ins
push
out
fiadd
neg
cmps
and
xor
cwde
outs
test
cwde
outs
mul
cmp
cs
sbb
xchg
repnz
mov
ins
xor
fiadd
neg
in
call
cwde
add
idiv
outs
test
cwde
outs
test
cwde
ins
addr16
add
mov
sbb
xchg
gs
popf
and
or
mov
ins
sub
fiadd
neg
in
xor
cwde
add
neg
outs
cmc
pop
cwde
outs
neg
outs
neg
outs
neg
ins
dec
aaa
cwde
add
popf
cmp
mov
outs
mul
xor
mov
jo
shl
lods
xor
cwde
outs
test
cwde
outs
out
scas
pop
div
lock
fwait
out
fiadd
neg
in
scas
adc
inc
div
outs
test
cwde
outs
test
cwde
outs
out
mov
jge
sbb
enter
fiadd
neg
in
jmp
cwde
add
neg
cli
ret
inc
neg
cli
ret
inc
neg
ins
es
add
neg
ins
div
inc
inc
neg
fidiv
(bad)
mov
call
lods
call
fsub
lahf
dec
cdq
add
div
cwde
add
mov
lock
cwde
outs
neg
xor
div
cwde
outs
test
cwde
outs
test
cwde
outs
xchg
pop
cld
ins
pop
xor
lock
div
fiadd
neg
in
adc
add
div
ins
(bad)
out
fiadd
div
mov
fbstp
jbe
add
push
cwde
in
jmp
cwde
add
ret
stos
fld
xchg
xchg
fiadd
neg
ins
pop
xor
lock
div
fiadd
neg
in
sti
adc
inc
div
outs
test
cwde
outs
test
cwde
ins
(bad)
add
div
cwde
add
cmps
pop
inc
fidiv
ja
outs
neg
push
div
cwde
in
(bad)
addr16
popf
xor
fld
mov
fld
lahf
rcr
add
xor
enter
fiadd
neg
in
jnp
cwde
add
idiv
jmp
or
lods
call
fsub
lahf
mov
add
div
cwde
ins
div
inc
inc
neg
fidiv
jb
add
mov
repnz
mov
repnz
mov
repnz
div
cwde
add
cmps
pop
fcmovu
mov
lock
cwde
outs
neg
xchg
div
cwde
outs
test
cwde
outs
test
cwde
outs
out
gs
div
cwde
add
sub
out
fiadd
aad
cwde
cmps
pop
test
add
ret
stos
fld
mov
fld
lahf
jg
add
div
enter
fiadd
neg
in
imul
add
neg
cli
ret
inc
neg
cli
ret
inc
neg
ins
(bad)
add
neg
ins
div
inc
inc
neg
fbstp
xor
cwde
add
neg
cli
ret
inc
neg
cli
ret
inc
neg
ins
jne
cwde
add
neg
ins
div
cmp
pop
cdq
fbstp
xor
cwde
add
idiv
outs
test
cwde
outs
test
cwde
outs
out
pop
mov
sub
lock
sub
fiadd
neg
pop
div
cwde
cmps
fild
addr16
stos
fld
xchg
xchg
fiadd
lahf
rcr
div
inc
inc
neg
fbstp
xor
cwde
add
neg
cli
ret
inc
neg
cli
ret
inc
neg
ins
ins
xor
cdq
add
div
inc
inc
neg
fdiv
inc
mov
cmps
mov
jo
bswap
mov
sbb
mov
fstp
cld
or
(bad)
pop
ds
adc
daa
xor
add
mov
pop
ins
fidiv
fnsave
ret
lahf
fld
mul
sbb
retf
xor
cwde
mov
sbb
mov
pop
cwde
cli
ret
inc
neg
sahf
and
xor
into
in
not
addr16
stos
fld
mov
mov
add
inc
nop
cmc
cmps
pop
cwde
outs
neg
add
sub
ins
push
out
fiadd
neg
dec
and
push
je
outs
test
cwde
outs
mul
cmp
cs
sbb
xchg
repnz
mov
ins
ds
fiadd
neg
in
imul
inc
div
outs
test
cwde
outs
test
cwde
ins
(bad)
add
mov
sbb
xchg
gs
popf
and
or
mov
ins
sub
fiadd
neg
in
scas
adc
cmp
pop
cwde
outs
cmc
pop
cwde
outs
neg
outs
neg
outs
neg
ins
dec
aaa
cwde
add
popf
cmp
mov
outs
mul
xor
mov
jo
call
retf
push
retf
push
ja
outs
xchg
pop
cld
outs
jecxz
mov
xor
inc
inc
neg
fbstp
fiadd
cwde
mov
sbb
out
and
inc
neg
ins
mov
cwde
add
div
cwde
outs
neg
add
xor
fld
div
cwde
xor
xor
dec
div
add
sbb
xor
repnz
test
cwde
in
xchg
sub
xor
stos
fld
xchg
xchg
fiadd
neg
outs
jecxz
loop
hlt
xor
inc
inc
neg
fbstp
bound
movs
mov
adc
test
ret
addr16
stos
fld
xchg
xchg
fiadd
neg
outs
jecxz
ss
div
fiadd
neg
in
out
sub
inc
neg
loopne
or
repnz
mov
repnz
mov
repnz
neg
ins
jecxz
cwde
add
cmps
pop
retf
fbstp
ja
outs
neg
inc
sbb
xor
cwde
outs
test
cwde
outs
test
cwde
outs
out
jmp
xor
cwde
add
mul
inc
sub
out
fiadd
jmp
lods
fld
test
adc
popf
xor
fld
mov
fld
div
cwde
add
div
fiadd
neg
in
stos
sub
inc
neg
cli
ret
inc
neg
cli
ret
inc
neg
outs
mov
xor
cwde
ins
div
inc
inc
neg
fidiv
push
xchg
mov
repnz
mov
repnz
mov
repnz
neg
add
lahf
xor
out
mov
lock
cwde
outs
neg
jb
div
cwde
outs
test
cwde
outs
test
cwde
outs
out
gs
div
cwde
add
cs
ins
sub
xor
cwde
cmps
push
xchg
fiadd
ret
stos
fld
xchg
xchg
fiadd
div
mov
xor
cmp
pop
cdq
fbstp
xor
cwde
add
div
outs
test
cwde
outs
test
cwde
outs
out
pop
mov
mov
mov
xor
inc
inc
neg
fbstp
xor
cwde
add
neg
cli
ret
inc
neg
cli
ret
inc
neg
outs
xchg
pop
(bad)
outs
jecxz
cwde
add
sub
ins
imul
fiadd
neg
sahf
sbb
xor
cwde
outs
test
cwde
outs
test
cwde
outs
loopne
add
div
cwde
add
cs
ins
or
xor
cwde
cmps
outs
xchg
fiadd
or
outs
loop
jo
mov
fld
or
(bad)
pop
ds
adc
iret
mov
jle
outs
loop
jo
mov
pop
cwde
ins
ja
cwde
add
popf
ss
cmp
mov
mov
cli
clc
mov
add
mov
xor
cs
xor
pop
inc
add
cwde
add
adc
inc
pop
gs
inc
or
jo
pop
movs
mov
xor
sbb
mov
icebp
cmp
jmp
popf
xor
retf
xor
cwde
cli
cmp
jo
fld
retf
out
mov
in
es
xor
add
pusha
push
or
ins
retf
add
ja
out
or
sbb
out
mov
pop
pop
test
mov
cdq
add
inc
sbb
cmc
jle
sbb
inc
jae
add
idiv
addr16
pop
push
add
div
cwde
pushf
add
adc
jg
test
jo
pop
and
xor
addr16
cmps
(bad)
cmc
faddp
adc
ja
addr16
and
inc
ja
mov
addr16
or
sbb
xor
fwait
jo
pop
ins
mov
xor
addr16
cmps
fstp
js
xor
adc
and
inc
idiv
addr16
pop
fimul
add
mov
popf
jo
pop
test
mov
adc
cli
cmps
fst
div
in
adc
jle
inc
idiv
addr16
pop
or
lock
mov
test
add
or
enter
cwde
add
and
inc
ja
mov
addr16
or
mov
xor
push
cli
inc
ins
push
test
add
or
enter
cwde
add
and
inc
ja
mov
addr16
or
push
loopne
cwde
test
pop
cdq
mov
xor
addr16
cmps
frstor
js
cmp
adc
adc
inc
idiv
addr16
pop
adc
cli
cli
inc
mov
xchg
add
or
enter
cwde
add
jle
fs
or
adc
ja
or
push
inc
ja
mov
addr16
or
call
neg
ins
mov
fiadd
idiv
addr16
lahf
xor
je
or
lock
ins
dec
test
add
neg
(bad)
clc
or
lock
cwde
in
pop
das
cwde
add
pop
ret
jb
data16
or
cli
test
xor
into
push
jl
nop
mov
jle
mov
jle
adc
mov
xor
iret
push
pop
cmp
cli
or
in
or
mov
imul
xor
rcr
jmp
movs
arpl
mov
jbe
in
imul
or
add
idiv
addr16
pop
push
mov
div
cwde
pushf
add
adc
ja
imul
retf
out
xor
mov
adc
cli
cmps
frstor
div
addr16
cmc
inc
mov
xchg
add
or
enter
cwde
add
or
fwait
jo
pop
jg
mov
adc
cli
cmps
fst
div
cwde
repnz
mov
mov
test
add
add
ja
mov
outs
cli
or
movs
loop
cwde
test
pusha
cli
or
in
adc
sub
inc
idiv
addr16
pop
mov
add
bswap
add
xor
mov
outs
cli
or
push
dec
(bad)
pusha
cli
or
in
adc
jp
inc
idiv
addr16
pop
lea
pop
mov
pusha
cli
or
sub
mov
addr16
pop
push
lea
bswap
addr16
and
mov
mov
outs
cli
or
sbb
xor
pusha
cli
or
in
adc
lahf
sub
mov
addr16
pop
retf
div
addr16
and
inc
ja
mov
outs
cli
or
loopne
xor
jle
jb
outs
cli
or
cli
or
in
adc
(bad)
inc
idiv
addr16
pop
mov
bswap
or
push
inc
ja
mov
outs
cli
or
mov
dec
(bad)
pusha
cli
or
in
adc
adc
sbb
push
pop
mov
call
sbb
addr16
cmps
fisttp
add
adc
jle
lock
ja
ins
js
fiadd
or
jo
or
sbb
lds
xchg
outs
cli
or
cwde
add
div
adc
jle
mov
jle
test
jne
ja
in
mov
addr16
je
nop
mov
pusha
cli
or
or
call
xor
addr16
idiv
sbb
cmc
xor
fs
or
xchg
or
cwde
add
or
mov
add
or
addr16
test
outs
cli
or
cli
or
xor
ja
mov
fs
or
test
xor
sbb
test
add
xchg
fs
add
pop
push
hlt
popa
sbb
call
aad
mov
pusha
std
or
xchg
cmp
clc
cwde
mov
call
xor
cwde
mov
data16
or
adc
xor
push
movs
mov
lock
ja
mov
pusha
cli
or
cld
loopne
cwde
xchg
sub
pushf
add
bswap
addr16
pop
push
mov
div
dec
repnz
adc
jp
fs
or
enter
fiadd
or
enter
cwde
add
idiv
addr16
pop
cli
pop
jp
fs
or
enter
cwde
add
or
sbb
repz
cli
cmps
pop
(bad)
fnsave
int
cli
cmps
fucom
adc
xor
cwde
mov
pusha
cli
or
mov
neg
fnsave
leave
addr16
cmps
fucom
cwde
or
sbb
sti
cmp
or
cdq
add
or
xchg
xor
in
sub
cwde
add
bswap
mov
ret
jb
outs
cli
or
cli
or
xchg
add
cwde
add
or
lock
push
ja
ins
adc
fiadd
or
enter
cwde
add
js
fiadd
or
enter
cwde
add
or
enter
cwde
add
or
jae
jl
dec
repnz
sbb
or
in
adc
or
pop
xor
xor
dec
repnz
sbb
hlt
inc
dec
mov
ret
jb
outs
cli
or
cli
or
addr16
lahf
jecxz
inc
idiv
addr16
pop
dec
mov
jp
fs
or
enter
cwde
add
or
adc
cli
mov
xor
addr16
jp
lahf
adc
pop
daa
cwde
add
or
sbb
pop
and
add
or
enter
pusha
cli
or
out
adc
xor
addr16
cmps
fucomp
push
div
addr16
mov
retf
mov
cdq
push
pop
mov
bswap
addr16
popf
xor
addr16
lahf
xlat
jmp
ffree
push
div
cwde
add
or
enter
je
or
jo
cmp
xchg
cmp
(bad)
(bad)
cmc
xchg
cmp
addr16
or
jo
in
cwde
test
sbb
add
in
xor
cwde
pop
push
cwde
(bad)
cli
or
pop
neg
xchg
es
add
mul
push
dec
xchg
test
sar
ins
arpl
lock
sub
add
or
xchg
lds
and
add
loop
cwde
pop
jbe
push
cmp
call
pop
add
xor
outs
out
mov
call
lahf
gs
adc
xor
cwde
ins
addr16
fiadd
neg
scas
adc
xor
cwde
add
div
cwde
mov
jbe
or
jo
fst
div
cmp
mov
addr16
pop
ds
or
addr16
div
sub
idiv
fiadd
mov
sbb
xchg
das
cwde
add
test
jb
or
sbb
mov
ins
adc
je
(bad)
retf
jb
jne
or
xor
inc
mov
inc
fsub
dec
out
addr16
adc
add
pop
push
hlt
popa
sbb
call
aad
mov
adc
jg
movs
cmps
sbb
test
jne
or
add
retf
cmp
in
div
addr16
neg
mov
mov
repz
xor
stos
mov
jne
or
xchg
push
ja
ins
cmp
fiadd
or
enter
cwde
add
div
pop
jmp
jb
jbe
or
dec
out
cwde
mov
je
or
inc
xor
mov
jne
or
int
retf
xor
pop
jmp
repz
add
clc
xor
mov
fnsave
ja
ins
xor
fiadd
neg
cmp
div
addr16
jp
pushf
shl
xor
lock
ja
ins
addr16
fiadd
neg
movs
mov
jo
in
cwde
mov
sbb
mov
and
mov
jae
inc
test
fnsave
ja
ins
xor
fiadd
neg
ficom
div
addr16
jp
sbb
mov
and
div
lock
das
ja
ins
addr16
fiadd
neg
fwait
mov
jo
in
cwde
xchg
jne
mov
jp
pop
shl
xor
inc
sub
mov
cwde
outs
repz
cwde
outs
neg
add
imul
jle
sub
cmc
pop
cwde
outs
mul
test
xor
addr16
xor
adc
cli
cmps
(bad)
or
xor
addr16
je
addr16
ja
cdq
add
jp
and
mov
addr16
or
in
sub
cwde
add
dec
gs
lahf
lds
test
xchg
add
mov
cwde
ret
addr16
xor
adc
cli
cmps
fucomp
adc
xor
addr16
je
addr16
ja
cdq
add
jp
and
mov
addr16
or
in
jae
cwde
add
dec
gs
lahf
lds
test
xchg
add
pop
ds
add
div
sub
or
adc
jle
adc
add
ret
stos
fld
repnz
in
idiv
add
dec
cmp
ins
hlt
dec
cwde
add
clc
xor
sbb
and
add
div
or
das
repnz
jle
mov
jle
pop
inc
xor
(bad)
div
and
pop
cmps
xchg
add
ret
inc
neg
outs
neg
outs
neg
outs
neg
add
sub
cwde
ins
push
out
fiadd
out
cwde
cmps
imul
sub
pop
cwde
outs
neg
fimul
div
sub
or
xchg
add
div
inc
inc
neg
or
xor
cwde
push
pop
adc
test
sbb
pop
div
or
ret
jbe
or
cwde
add
das
mov
jne
or
sbb
cli
cmps
pop
hlt
mov
xor
cwde
ins
cmps
sbb
add
or
sbb
out
cmp
jo
mov
imul
hlt
mov
xor
jo
pop
retf
das
sbb
mov
sbb
push
popf
xor
call
outs
neg
xchg
or
xor
cwde
add
or
enter
cwde
ins
call
xor
xchg
add
sti
xor
ins
add
xor
cwde
call
cwde
out
out
mov
and
div
cwde
add
pop
adc
neg
mov
cmp
shr
and
sbb
iret
aaa
cwde
add
out
or
gs
cld
push
div
pusha
adc
div
call
fcom
div
cwde
or
call
xor
cdq
add
push
cwde
add
div
cwde
xchg
pop
sub
div
cwde
add
test
cwde
in
enter
jle
je
or
adc
test
ret
inc
inc
test
addr16
aam
addr16
je
mov
mov
addr16
or
jo
cli
xor
sbb
div
gs
or
xor
ret
idiv
jno
mov
addr16
gs
or
dec
clc
or
mov
aas
enter
in
sbb
clc
or
mov
sub
addr16
je
pushf
mov
gs
or
or
cmp
inc
test
loope
retf
jb
gs
or
adc
addr16
fdiv
enter
cwde
cli
ret
inc
neg
xor
div
cwde
add
mov
cwde
or
lahf
add
mov
cmp
ja
test
pop
mov
popa
inc
ja
add
mov
cwde
jo
gs
sbb
addr16
ja
call
or
lahf
add
inc
ja
in
mov
addr16
scas
fsub
add
xor
adc
push
xor
fisttp
div
xchg
add
div
cwde
cmp
cmp
nop
in
jecxz
cwde
add
test
gs
or
add
jb
data16
or
repnz
cmp
inc
fdivr
repnz
cmp
inc
movs
ds
lods
repnz
repnz
mov
inc
test
inc
test
inc
test
inc
idiv
sbb
outs
test
xchg
add
or
addr16
cmp
inc
mov
repnz
cmp
inc
nop
repnz
inc
test
add
dec
cmp
cli
test
xchg
add
div
inc
clc
or
adc
je
inc
clc
or
cwde
xchg
gs
or
addr16
cmps
fst
or
xor
addr16
jbe
sbb
div
cwde
mov
sbb
mov
pop
addr16
test
cli
cmps
retf
push
cwde
in
sbb
cwde
add
or
cwde
jo
pop
cwde
outs
neg
fnsave
bound
in
push
cwde
in
repz
add
idiv
(bad)
jb
addr16
or
addr16
jb
gs
or
fiadd
div
cwde
add
or
enter
cmp
fstp
maskmovq
div
addr16
je
addr16
ja
cdq
add
repnz
test
pop
(bad)
in
xor
addr16
movs
frstor
or
sbb
sti
or
div
repnz
neg
in
aas
aas
cwde
add
mov
jo
std
xor
cwde
add
test
gs
or
cli
or
add
addr16
cmps
pop
mov
mov
adc
cli
cmps
fstp
or
xor
addr16
test
cli
cmps
retf
bound
in
sbb
add
or
cwde
jo
pop
cwde
outs
neg
fnsave
bound
sbb
cwde
in
repz
cwde
add
idiv
xchg
retf
retf
xor
jo
mov
adc
popf
xor
cwde
outs
neg
mov
xor
mov
xchg
add
div
addr16
neg
movs
or
cwde
cli
or
adc
or
test
repz
outs
neg
shl
(bad)
xchg
add
bound
in
addr16
add
div
addr16
mov
cli
or
movs
adc
fmulp
adc
jp
cdq
cli
or
enter
gs
or
sub
ja
mov
gs
or
nop
cld
xor
lock
div
addr16
or
xor
fiadd
div
addr16
popf
xor
cwde
outs
neg
repnz
xor
fiadd
neg
xchg
add
xor
cwde
add
or
enter
gs
or
sub
ja
mov
gs
or
sub
xor
lock
div
addr16
or
xor
stos
fld
div
addr16
popf
xor
cwde
outs
neg
call
stos
fld
neg
cmp
div
adc
jp
cdq
cli
or
enter
gs
or
cmps
and
mov
gs
or
sar
cwde
xchg
and
cwde
mov
addr16
or
xor
stos
fld
div
addr16
popf
xor
cwde
outs
neg
add
fild
nop
add
div
addr16
je
addr16
ja
cdq
add
hlt
inc
mov
ins
fnclex
fiadd
push
pop
inc
neg
mov
hlt
xor
data16
or
sbb
(bad)
jae
cdq
cli
or
movs
xor
mov
lock
ja
outs
neg
mov
xor
stos
fld
neg
pop
pop
div
addr16
idiv
addr16
inc
and
mov
addr16
jp
ins
clc
or
enter
fiadd
or
enter
cwde
add
or
cdq
cli
or
enter
pop
inc
neg
fiadd
div
addr16
test
ins
out
fiadd
lock
pop
inc
neg
ret
xor
cwde
ret
jb
data16
or
sbb
(bad)
jae
cdq
cli
or
movs
xor
mov
lock
ja
outs
neg
test
xor
fld
neg
xchg
pop
div
addr16
idiv
xchg
retf
retf
xor
jo
cmp
nop
or
addr16
into
imul
lods
jle
test
xor
addr16
cmps
mov
addr16
lahf
sbb
idiv
addr16
pop
cmp
adc
test
gs
or
mov
pop
cwde
outs
neg
outs
neg
ins
div
pop
inc
neg
push
add
xor
addr16
popf
aaa
repnz
add
addr16
pop
xchg
popf
add
inc
ja
add
(bad)
lods
fadd
ja
cdq
add
popf
xor
addr16
movs
lock
cwde
cli
inc
shl
fld
div
push
outs
cmc
pop
push
mov
retf
addr16
pop
mov
lock
xchg
retf
retf
xor
jo
pop
cwde
mov
gs
or
mov
gs
or
mov
retf
addr16
pop
cmps
popf
add
jb
gs
or
pop
lahf
lds
test
addr16
(bad)
xor
sti
or
jo
repz
cmp
es
xor
repnz
xor
mov
mov
jb
data16
or
loope
retf
jb
gs
or
outs
test
addr16
inc
xor
cmps
mov
sbb
or
cmp
xor
repnz
or
retf
movs
cmp
retf
or
addr16
add
cwde
add
pop
enter
pop
cdq
ins
sbb
fiadd
or
jo
repz
data16
or
jmp
sbb
add
jle
repnz
ja
ins
mov
fiadd
neg
add
jnp
xchg
sub
nop
call
cwde
mov
add
adc
jle
jae
or
cli
and
or
imul
pop
test
push
mov
push
xchg
test
bsf
mov
movs
add
jb
cwde
add
(bad)
cmp
ds
inc
test
inc
neg
push
add
xor
adc
mov
add
cli
ret
inc
neg
sbb
div
fiadd
fld
pushf
add
push
retf
bound
in
stos
xor
loop
jo
mov
push
lods
sbb
cwde
jo
retf
push
xor
call
mov
sub
xor
pop
inc
test
inc
div
jo
mov
jo
repz
pop
inc
test
inc
div
movs
mov
jo
hlt
xor
pusha
repnz
fmulp
add
mov
in
add
nop
mov
mov
add
retf
stos
fld
mov
in
add
call
cwde
add
mov
in
add
xchg
mov
mov
add
(bad)
xchg
fiadd
mov
in
add
pushf
mov
mov
add
jmp
fld
or
cli
and
in
xor
add
icebp
das
cwde
add
xor
adc
xchg
div
xchg
div
xor
mov
mov
or
or
mov
mov
or
or
mov
xchg
div
mov
mov
or
or
test
mov
or
or
lods
div
xor
jge
mov
xor
mov
mov
jne
in
cmps
xor
mov
sbb
ret
cdq
inc
ja
mov
inc
clc
mov
xchg
adc
fisttp
dec
xor
std
xlat
inc
imul
pop
add
mov
push
ja
or
(bad)
scas
mov
add
mul
mov
add
jb
mov
add
(bad)
cmc
and
or
or
ss
mov
and
(bad)
cmp
jo
adc
xor
div
fdiv
mov
or
or
fdiv
mov
or
or
shl
mov
or
or
aam
mov
or
or
enter
or
or
int3
div
xor
shl
xor
cwde
add
mov
or
or
clc
div
xor
cld
div
xor
lock
xor
hlt
div
xor
call
xchg
div
in
div
xor
loopne
mov
or
or
in
mov
or
or
sbb
mov
or
or
sbb
mov
or
or
adc
mov
or
or
adc
mov
or
or
or
mov
or
or
or
mov
or
or
add
mov
or
or
add
mov
or
or
cmp
mov
or
or
cmp
mov
or
or
xor
mov
or
or
xor
mov
or
or
sub
mov
or
or
sub
mov
or
or
and
mov
or
or
and
mov
or
or
pop
div
xor
pop
div
xor
push
div
xor
push
div
xor
dec
div
xor
dec
div
xor
inc
div
xor
inc
div
xor
js
mov
or
or
jl
mov
or
or
jo
mov
or
or
je
mov
or
or
pusha
div
xor
div
xor
cwde
icebp
mov
or
or
pushf
icebp
mov
or
or
nop
icebp
mov
or
or
xchg
icebp
mov
or
or
mov
mov
or
or
mov
mov
or
or
xor
xor
cwde
add
mov
or
or
mov
xchg
div
mov
xchg
div
mov
mov
or
or
mov
mov
or
or
test
mov
or
or
lods
icebp
mov
or
or
mov
xchg
div
movs
icebp
mov
or
or
fdiv
mov
or
or
fdiv
mov
or
or
shl
mov
or
or
aam
mov
or
or
enter
or
or
int3
icebp
mov
or
or
shl
xor
cwde
add
mov
or
or
clc
icebp
mov
or
or
cld
icebp
mov
or
or
call
xchg
div
in
icebp
mov
or
or
loopne
mov
or
or
in
mov
or
or
sbb
mov
or
or
adc
mov
or
or
or
mov
or
or
or
mov
or
or
add
mov
or
or
add
mov
or
or
cmp
mov
or
or
cmp
mov
or
or
xor
mov
or
or
xor
mov
or
or
and
mov
or
or
and
mov
or
or
pop
icebp
mov
or
or
pop
icebp
mov
or
or
push
icebp
mov
or
or
push
icebp
mov
or
or
dec
icebp
mov
or
or
dec
icebp
mov
or
or
inc
icebp
mov
or
or
inc
icebp
mov
or
or
js
mov
or
or
jl
mov
or
or
jo
mov
or
or
je
mov
or
or
push
xchg
div
ins
icebp
mov
or
or
pusha
icebp
mov
or
or
fs
mov
or
