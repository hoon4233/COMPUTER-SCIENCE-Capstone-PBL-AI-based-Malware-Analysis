xchg
into
or
das
add
adc
add
push
cmps
add
(bad)
outs
jae
ret
fmul
xchg
cld
inc
adc
das
dec
repnz
push
popa
sbb
push
mov
jae
cld
lods
dec
dec
xchg
scas
and
pop
fsubr
retf
test
inc
sub
jp
jb
lock
stc
ins
mov
outs
dec
sub
lea
cld
cmp
lahf
daa
repnz
add
jae
inc
addr16
in
lods
mov
retf
jl
cmp
push
ret
mov
aaa
jae
gs
push
imul
xchg
push
sahf
ret
mov
sbb
bound
xchg
cmp
and
retf
or
clc
or
xlat
or
mov
mov
jns
push
std
xor
enter
out
sub
cmp
pop
mov
pop
push
cmp
and
aas
and
repz
push
fmul
xchg
push
aam
push
aas
cld
dec
shl
mov
popf
xor
jno
out
or
fisubr
mov
nop
and
sahf
(bad)
and
das
shl
mov
das
sbb
sbb
mov
pop
loop
inc
pop
pushf
jge
loopne
out
repnz
call
clc
push
imul
jg
ins
test
cmps
add
sar
jno
nop
in
test
pop
sub
mov
xor
in
sub
mov
and
cmp
adc
ins
aas
fucomip
repz
mov
sbb
jge
cmp
dec
mov
stos
sbb
and
daa
call
xchg
push
ss
imul
lahf
jmp
lods
jae
push
jnp
xor
sbb
cli
push
add
adc
js
(bad)
cli
and
stos
mov
cmps
out
aas
sti
imul
cmp
add
test
push
fs
stos
adc
ds
scas
pop
xor
icebp
ins
xchg
fdivp
test
xchg
mov
ret
lds
mov
mov
pop
std
sub
scas
(bad)
std
xor
mov
jge
push
fs
mov
sub
retf
xlat
xchg
cmp
xchg
inc
or
mov
ins
sub
mov
sub
cmps
pop
cmp
mov
cld
or
in
push
out
push
loopne
fisttp
scas
imul
sbb
in
or
lea
cvttps2pi
fild
sub
dec
xchg
jne
mov
cmc
sub
imul
mov
or
fcomp
test
jle
in
cmovb
data16
pop
or
popf
cdq
mov
push
test
ret
dec
cmp
sub
add
push
fisub
push
push
adc
mov
pop
pop
mov
cmp
push
push
jae
adc
sub
sbb
jg
and
data16
ins
cwde
es
fld
inc
hlt
gs
mov
pop
mov
rol
mov
mov
nop
retf
fbstp
inc
or
push
mov
in
stc
mov
xchg
aam
add
movs
and
rol
retf
jge
push
pop
mov
mov
stos
jle
add
pop
push
(bad)
sbb
jecxz
cmp
enter
stc
push
pop
sub
imul
push
ss
(bad)
pushf
adc
push
adc
xor
add
pop
or
push
fstp
pop
jbe
xor
mov
xor
outs
lds
adc
das
and
lds
add
xor
packuswb
call
xor
adc
push
pusha
(bad)
jae
fistp
mov
and
(bad)
sub
out
inc
movs
and
cmp
xor
and
sub
adc
fild
mov
fisttp
mov
and
les
jns
imul
mov
enter
mov
pop
test
cmp
add
repnz
inc
dec
pop
or
jae
inc
adc
lea
call
rcl
mov
dec
adc
in
inc
in
es
cmp
adc
aas
jecxz
enter
(bad)
imul
xchg
jg
sahf
sbb
(bad)
ds
push
in
add
shl
loope
mov
das
push
jp
fbstp
sbb
cmps
jmp
pushf
popa
ss
sbb
loopne
or
loop
xor
pop
push
mov
popf
and
pusha
imul
mov
push
xchg
xchg
jge
and
and
inc
add
dec
sahf
shl
mov
mov
retf
les
push
loope
mov
bound
adc
mov
add
xor
std
lock
lods
xor
dec
pop
test
pop
jl
sbb
pop
mov
mov
xor
sbb
and
in
mov
dec
jmp
lea
jge
dec
fs
fcomi
mov
sbb
ficomp
jmp
test
inc
hlt
fld
pop
loope
in
push
leave
mov
push
jo
mov
outs
xchg
adc
enter
mov
rcr
out
add
sbb
nop
sub
push
int
mov
aam
xor
test
mov
xchg
and
and
mov
dec
pop
jne
jge
mov
add
test
(bad)
inc
fdiv
jg
loope
sbb
fs
je
std
adc
outs
jne
scas
int3
lods
repz
retf
adc
add
jp
push
(bad)
sar
je
rol
std
lds
adc
call
jmp
jl
pop
push
sbb
xchg
ret
cli
or
xchg
shl
aas
enter
mov
adc
cmps
dec
xor
stos
sbb
loop
(bad)
shr
add
jbe
nop
test
or
call
pop
outs
(bad)
ret
xor
cdq
int3
adc
(bad)
fisttp
add
call
lea
add
mov
xchg
cmp
bound
pop
add
dec
lahf
mov
les
adc
pop
xchg
fisub
ss
mov
xchg
movs
fdiv
ffree
adc
jle
push
mov
data16
inc
pop
aaa
lock
mov
(bad)
inc
aad
aaa
push
cld
lods
xchg
aad
or
pop
and
adc
pop
test
xchg
scas
xor
imul
and
sub
mov
push
inc
sahf
or
pop
or
test
iret
mov
xchg
xor
scas
sub
(bad)
adc
inc
or
adc
add
mov
or
cs
out
jge
sub
or
fimul
fdivr
add
retf
add
sub
fwait
push
retf
cmp
(bad)
test
add
dec
cmps
ins
jl
inc
xor
scas
popf
pop
ds
jle
out
in
mov
or
jge
ins
daa
inc
(bad)
int3
sahf
icebp
sub
or
icebp
jge
fwait
outs
adc
mov
dec
stc
ret
pop
into
mul
and
shr
dec
imul
test
and
inc
mul
xor
or
(bad)
daa
jns
rcr
cdq
xor
mov
mov
adc
mov
icebp
(bad)
sbb
cmp
ficom
xchg
pushf
icebp
xchg
jno
xlat
sar
arpl
inc
dec
mov
repnz
ffreep
sbb
add
aad
pop
jl
xlat
inc
jecxz
sub
addr16
mov
xor
lahf
out
push
js
mul
int
xchg
sub
sbb
bound
mov
mov
stos
mov
mov
jno
pop
movs
ret
nop
popf
xor
inc
neg
jecxz
xchg
arpl
enter
out
lahf
ja
sub
sub
idiv
enter
loope
sbb
cmp
in
xchg
or
and
push
cmp
mov
add
sub
imul
nop
cmp
aad
into
jecxz
popf
sahf
movs
mov
xchg
cmc
test
mov
mov
mov
xor
mov
sub
leave
push
push
mov
in
mov
pushf
in
ret
sbb
sti
out
sbb
pop
dec
sbb
jmp
sbb
ret
xchg
fnclex
out
xchg
js
call
mov
daa
mov
push
sbb
xor
and
dec
mov
shl
dec
xor
icebp
clc
dec
add
cwde
rcl
xor
lock
int
sahf
jnp
scas
enter
mov
push
in
faddp
and
cs
retf
cdq
sub
ja
xor
mov
adc
mov
leave
cld
clc
sahf
inc
mov
in
call
addr16
fcomp
mov
test
sub
popa
mov
sti
sbb
jae
pop
inc
sbb
add
mov
in
fadd
xor
xchg
or
lods
mov
jae
add
and
and
jbe
cmp
mov
les
cmc
push
push
push
and
push
(bad)
addr16
sbb
in
jns
cmp
test
push
movs
add
add
pop
jb
cmps
ins
mov
dec
lds
push
into
jp
and
ret
and
mov
test
add
push
sti
cmp
scas
inc
ja
je
ss
pop
pop
ret
jae
ret
repnz
imul
mov
inc
or
(bad)
in
and
(bad)
pop
sub
idiv
aas
sub
movs
in
cdq
jmp
sbb
dec
cli
pop
jno
std
pop
jbe
iret
xlat
jmp
cdq
sbb
imul
cs
aam
or
jge
cmp
sub
out
outs
xchg
outs
fstp
cli
ret
mov
pop
cmp
jnp
loopne
jge
xchg
sub
bound
popa
cld
pop
xor
jmp
inc
cli
add
fmul
sbb
dec
cmc
dec
jge
xor
inc
(bad)
or
cmp
jo
pop
scas
pop
xchg
pusha
dec
test
jno
idiv
cmps
(bad)
sub
movs
fwait
jp
shr
(bad)
and
fcom
test
fisub
int
int
sbb
mov
sar
repz
stos
icebp
xlat
addr16
sar
mov
and
out
pop
(bad)
pop
fadd
lods
loop
nop
int
jns
and
dec
jmp
dec
fidivr
cli
addr16
inc
cmps
arpl
mov
imul
lods
cmp
adc
xor
adc
xor
std
in
push
(bad)
jmp
mov
mov
aas
dec
push
imul
jl
mov
or
cli
inc
cmp
pop
jno
sub
ja
stos
sar
xchg
test
ret
or
scas
xor
dec
sub
sub
mov
xor
xor
(bad)
jge
psrlq
xchg
dec
inc
inc
xor
mov
movs
loop
inc
mov
cmp
pop
jns
cld
jno
out
sahf
stc
pop
mov
popa
inc
sbb
mov
hlt
push
idiv
jge
sub
push
shl
xchg
pop
xor
add
xchg
pop
mov
xchg
sub
xor
xchg
push
push
sub
jmp
retfw
mov
mov
xchg
adc
mov
daa
arpl
cmps
mov
mov
stc
mov
in
and
pop
ret
cwde
push
pop
adc
addr16
popf
or
loop
jmp
jmp
retf
pop
xor
out
les
call
pop
aas
cmp
icebp
addr16
fadd
push
test
out
pop
xor
lods
rol
jnp
lods
and
dec
pop
shl
pop
mov
ror
push
xchg
aam
retf
pop
stos
loope
int3
in
xor
jmp
ret
push
popa
nop
mov
push
mov
pop
push
fst
sbb
lock
add
cmp
dec
and
and
mov
imul
pop
inc
xchg
or
jbe
js
sbb
shl
mov
pop
sti
mov
ss
outs
ins
jmp
iret
mov
add
inc
and
cmc
jns
fiadd
test
xchg
out
adc
jmp
mov
mov
aaa
sub
jg
xchg
sbb
stos
cmp
ret
push
adc
mov
push
call
push
jmp
cwde
je
pop
cs
push
addr16
mov
xor
push
ins
cld
int
repz
cmp
push
xor
add
vandps
mov
call
pop
outs
mov
push
pop
pop
sub
loop
cli
sub
hlt
add
push
sbb
dec
ja
imul
test
pusha
mov
and
lea
mov
daa
jno
mov
cdq
pop
loop
push
adc
cmps
inc
push
retf
test
jmp
mov
sub
ins
repz
jle
retf
leave
mov
sub
rcr
mov
in
rol
fild
xor
mov
mov
mov
cdq
pop
push
ss
mov
xchg
pusha
loop
dec
aad
test
cwde
dec
cmps
dec
jle
arpl
stos
cdq
cli
dec
mov
fwait
dec
(bad)
xchg
add
pop
adc
aam
shr
pop
pop
mov
xlat
push
push
inc
adc
faddp
int
test
pop
xchg
ret
fs
dec
jbe
mov
movs
clc
pop
dec
fdiv
imul
test
push
lock
and
gs
test
sub
sbb
(bad)
enter
push
or
(bad)
shr
sbb
ret
fnsave
adc
or
imul
push
jb
xchg
aad
mov
sbb
xchg
dec
mov
mov
xor
mov
out
lods
fist
(bad)
xchg
cs
shl
xchg
inc
popf
fstp
push
mov
inc
enter
in
cmp
inc
pop
out
dec
mov
mov
push
into
imul
(bad)
lods
rcr
add
jbe
adc
daa
ins
dec
mov
sti
xchg
movs
pop
paddusw
jmp
dec
fcom
stc
xor
in
and
mov
jge
sbb
ficomp
stos
sbb
pop
dec
pop
cmc
add
mov
inc
xlat
xchg
cmp
cmp
push
dec
cdq
adc
movs
hlt
in
mov
sbb
mov
out
dec
xchg
sbb
xchg
sub
adc
enter
shr
aad
dec
ficomp
inc
jne
jo
cmp
fcmovbe
mov
sub
inc
es
push
pop
inc
(bad)
mov
scas
loope
jno
dec
adc
or
sbb
sahf
or
enter
mov
(bad)
sbb
inc
ret
jmp
inc
in
shl
pop
popa
ficomp
test
cmp
dec
sub
pop
call
inc
jae
ret
jl
inc
sub
add
fstp
cmp
pop
cwde
sub
test
inc
jg
lods
cmp
or
jns
gs
mov
aad
dec
adc
nop
jns
(bad)
cmp
ret
xor
fucomp
cld
std
(bad)
or
xor
xchg
loop
sbb
inc
mov
inc
push
(bad)
xchg
inc
into
test
std
push
or
push
push
and
inc
jno
mov
mov
pop
jb
hlt
repz
stos
pop
add
gs
ins
dec
mov
fimul
add
stos
xor
shr
xor
mov
pop
popa
xor
inc
jns
jle
arpl
add
out
jno
pop
std
out
pop
mov
lock
xchg
clc
mov
out
fwait
jg
pushf
push
les
test
outs
xchg
icebp
lock
push
sti
test
sub
adc
jb
in
mov
mov
mov
and
cmps
imul
fld
and
enter
cli
fwait
mov
(bad)
out
mov
mov
xchg
and
sbb
xchg
test
addr16
retf
popf
sub
mov
movs
jns
mov
sub
mov
clc
and
add
out
push
fs
push
sub
iret
loopne
(bad)
fsub
js
jge
aad
jns
out
mov
imul
inc
lea
pop
xlat
mov
ret
loope
(bad)
jp
repz
out
stos
fadd
sbb
outs
out
jge
inc
out
scas
xchg
xchg
inc
and
rol
mov
add
dec
and
stos
fldcw
es
adc
call
scas
repz
out
lods
fimul
scas
push
add
call
es
out
xchg
xchg
dec
invd
fimul
cmp
shl
and
push
mov
lods
pop
sub
cmp
ja
adc
jbe
fs
jne
cmp
jae
xchg
in
mov
cmp
adc
dec
(bad)
mov
xor
pop
mov
or
sbb
(bad)
int
mov
(bad)
(bad)
test
fiadd
pop
sbb
jno
iret
fst
into
add
jecxz
out
lds
pop
mov
cmps
cmp
and
outs
adc
repz
push
mov
cdq
retf
mov
pop
fstp
loopne
lods
mov
imul
or
sahf
dec
outs
jg
imul
scas
xchg
lock
xor
xchg
aaa
pop
and
fwait
enter
push
push
cmp
fs
data16
out
inc
sub
push
cmp
sbb
in
dec
jo
ds
mov
sar
push
adc
mov
stos
nop
in
jle
pop
ins
push
add
push
pop
mov
cmp
push
add
outs
xor
mov
mov
(bad)
fistp
jge
outs
icebp
jnp
mov
or
dec
(bad)
repnz
xor
int
push
shl
test
cwde
mov
ss
js
push
mov
fwait
(bad)
addr16
(bad)
xor
cld
call
popa
adc
sub
ins
xor
or
add
loopne
cmps
das
(bad)
pop
std
mov
pop
mov
push
(bad)
scas
retf
sub
scas
jns
pop
nop
inc
jle
jo
add
mov
adc
push
loop
xchg
sub
popf
fidivr
ja
and
test
jne
repz
rcr
cwde
sub
scas
pop
retf
ret
cmp
jge
pop
push
iret
test
test
js
or
std
js
push
jno
jmp
add
push
mov
lock
je
mov
cmps
call
cdq
iret
xchg
adc
push
jbe
stos
jbe
dec
es
mov
outs
cmp
ret
and
retf
mov
mov
push
pop
xor
push
and
adc
push
xor
shr
cmc
xchg
stc
clc
jecxz
clc
jp
xchg
imul
pop
inc
add
adc
cwde
jge
mov
push
loope
fcmovne
jp
push
jb
aaa
ja
in
push
add
(bad)
out
movs
xor
popa
push
dec
xchg
pop
xchg
mov
sbb
es
sbb
pop
xlat
jp
aaa
mov
jle
sbb
test
jl
sub
sar
rcl
mov
pop
xor
push
jecxz
(bad)
div
and
adc
jno
push
stc
fstp
sbb
or
pop
jo
iret
retf
sbb
xchg
loopne
jne
xchg
jle
push
xor
(bad)
adc
(bad)
cmc
ds
out
or
pop
push
mov
addr16
xor
mov
outs
loopne
xchg
neg
cmp
sub
adc
or
jns
jnp
inc
inc
int
iret
js
cs
fdivr
aas
fld
mov
jne
push
cmp
dec
shr
pop
add
and
sub
jmp
mov
or
inc
out
ror
jne
les
inc
cmp
push
imul
out
jb
stos
pop
inc
sub
and
lahf
test
cli
pushf
xor
mov
or
cdq
arpl
aaa
rcr
cdq
or
test
and
mov
pop
cdq
inc
mov
loopne
push
rol
call
shl
ins
das
mov
xchg
xor
jae
and
xor
and
pop
or
(bad)
call
adc
cmp
not
in
and
shl
xchg
mov
int3
repz
adc
mov
(bad)
push
xchg
shr
dec
lds
mov
jp
inc
push
adc
add
pusha
test
pop
jbe
cmp
sub
push
or
sar
adc
mov
pop
mov
xchg
xchg
adc
imul
outs
(bad)
push
ins
call
stos
push
jl
inc
jp
cmp
sub
retf
xchg
mov
sbb
mov
imul
pop
push
mov
sub
rcr
and
add
mov
pop
scas
retf
(bad)
je
inc
rcl
or
or
mov
into
sub
sbb
imul
sbb
movs
outs
js
popa
test
xchg
jns
jl
ds
(bad)
movs
sub
cmps
pop
nop
adc
or
stos
mov
push
imul
das
mov
cmc
lods
cmp
imul
adc
xchg
rol
sar
cwde
inc
inc
jo
test
dec
pushf
add
and
imul
dec
xor
adc
lock
adc
imul
pop
mov
aas
mov
push
mov
fisub
fs
jle
adc
and
xchg
movs
in
xchg
inc
xor
xor
add
test
movs
fs
dec
les
xchg
jno
loopne
inc
or
or
sbb
out
popa
cmp
movs
mov
leave
xchg
lsl
sbb
jecxz
xchg
or
pop
in
jns
or
outs
jno
jmp
(bad)
mov
int3
repnz
dec
ins
mov
push
sbb
mov
pusha
lods
stos
sahf
(bad)
fcomp
pop
pop
je
or
cmps
daa
cmps
fcmovb
mov
(bad)
xor
inc
imul
xchg
pop
pop
push
mov
sub
outs
shr
(bad)
xchg
or
cdq
iret
(bad)
mov
push
fcomip
(bad)
lahf
pop
inc
sub
xchg
(bad)
ret
lds
xchg
int
push
adc
and
imul
stos
ins
pop
int
das
sbb
or
adc
xchg
push
lds
cmc
cwde
xlat
dec
loope
sub
inc
dec
stc
fisub
and
add
arpl
idiv
imul
sub
lea
ret
pop
rcl
inc
shl
or
mov
and
pop
adc
dec
and
jb
je
push
inc
cmp
sbb
int
ss
sub
mov
pop
push
rol
(bad)
mov
lods
and
xor
pop
jb
inc
js
nop
test
rol
inc
mov
mov
xchg
dec
pop
call
ins
sub
les
es
and
xchg
jbe
xchg
test
pop
shl
inc
stos
and
(bad)
pop
xchg
sub
sbb
push
rcr
cmp
pop
mov
mov
(bad)
jno
xor
fs
xchg
push
jge
(bad)
cmp
neg
jbe
inc
jp
sub
mov
les
inc
xchg
mov
push
add
fmulp
or
jle
inc
stc
sbb
inc
inc
pusha
or
ss
movs
sbb
pusha
aad
imul
(bad)
fstp
add
jbe
cmp
jmp
pop
test
cwde
or
cmp
xor
mov
(bad)
ds
xor
sbb
mov
enter
sbb
ss
int3
ret
test
jmp
mov
scas
sub
cmps
popa
mov
or
jmp
cmps
xchg
jb
rol
retf
push
sbb
ret
movs
mov
xor
shl
xor
xchg
mov
lods
adc
mov
js
pop
rcr
push
or
and
fild
lods
ss
jnp
cmp
jne
outs
repnz
out
sbb
iret
cmp
jl
xor
and
jle
pushf
dec
push
xchg
mov
rol
sbb
lods
xor
push
push
push
inc
(bad)
(bad)
push
adc
xchg
mul
mov
push
push
fdivp
rcr
iret
sbb
mov
movs
push
cmps
adc
icebp
jecxz
mov
ret
inc
fwait
sbb
dec
scas
cmp
or
jbe
stos
retf
das
pop
xlat
sar
jne
call
push
dec
mov
mov
jle
xchg
mov
cmc
rcl
cld
push
or
cmp
call
dec
int
mov
out
das
push
sbb
lea
mov
pop
mov
jbe
or
ret
loop
sbb
jnp
cmp
jns
xchg
scas
push
push
aad
lods
xchg
mov
rcl
pushf
xchg
xor
pushf
int
or
adc
adc
jl
lahf
cmp
bound
adc
adc
cmps
pushf
(bad)
call
push
test
mov
cs
adc
xor
push
loop
hlt
xchg
mov
sub
pop
ror
cmc
xchg
adc
xchg
retf
std
ret
jnp
sbb
dec
sbb
cmp
xor
jmp
xchg
pop
and
and
cli
cdq
in
movs
mov
cmp
aaa
jle
repz
inc
fisubr
or
and
(bad)
xor
test
scas
push
add
arpl
mov
and
popf
xchg
or
popa
jae
sar
cld
inc
hlt
in
mov
mov
adc
sub
push
(bad)
fwait
movs
les
test
hlt
or
xchg
(bad)
xchg
mov
mov
lods
retf
mov
int
xlat
push
int3
mov
jp
sbb
and
xchg
sbb
jae
je
nop
js
(bad)
repz
xor
pop
adc
ds
sbb
icebp
into
jecxz
push
jbe
cmc
adc
inc
neg
xor
stc
mov
test
imul
out
inc
or
icebp
mov
pop
xor
dec
inc
imul
xor
(bad)
sub
fadd
ror
push
or
fnstenv
cmp
adc
dec
ret
inc
xor
push
dec
jno
adc
cwde
daa
shr
pop
int
and
jp
in
dec
jae
adc
adc
in
ins
dec
mov
mov
cwde
ret
dec
pop
(bad)
jmp
add
push
cdq
push
pop
mov
fcmovnbe
dec
in
out
les
inc
xchg
call
jl
cwde
mov
inc
adc
fwait
lea
inc
sti
ret
pop
mov
pop
and
dec
jmp
std
popa
ficom
jge
push
pop
arpl
pop
jbe
hlt
aas
fistp
xchg
mov
push
mov
jns
popa
add
sub
or
daa
daa
(bad)
push
in
daa
mov
push
jo
inc
cli
mov
mov
sbb
add
jp
xchg
inc
addr16
xchg
jnp
dec
dec
add
shl
movs
fcmove
cmp
(bad)
scas
(bad)
push
outs
sub
jbe
es
inc
imul
sub
mov
loop
dec
push
rcr
fld
stc
out
cli
xor
xchg
(bad)
imul
adc
sar
inc
pop
(bad)
pop
jle
xor
cmp
repz
xchg
sbb
je
pop
mov
push
mov
push
adc
shl
jp
adc
bnd
xchg
shl
pop
jge
fstp
in
dec
int
cmp
ror
lock
outs
iret
int
cmp
neg
inc
cmps
aas
lahf
pop
fsub
cmp
cs
dec
or
cmp
movs
and
or
cli
pushf
pushf
xchg
pop
jge
frstor
dec
in
inc
js
xor
out
pop
mov
(bad)
jno
sub
retf
cmp
loopne
int
lock
ins
mov
dec
scas
pop
mov
fistp
add
pop
xchg
adc
push
jnp
xchg
scas
fidiv
dec
push
ret
jmp
jb
mov
inc
aaa
dec
xchg
inc
pop
pop
xchg
or
jo
pop
pop
push
pop
mul
push
xchg
enter
sbb
ss
inc
jb
imul
cmp
cmp
mov
xchg
shl
aaa
retf
dec
push
mov
pop
push
icebp
push
loope
sub
retf
mov
es
sub
mov
test
int
movs
imul
mov
int3
push
push
inc
mov
imul
int3
je
popa
loop
(bad)
push
cmp
mov
jmp
jmp
shr
mov
ffree
sbb
pushf
(bad)
cmp
add
shl
push
fdivrp
test
daa
xchg
and
sbb
scas
xchg
add
addr16
daa
dec
sbb
pop
inc
cmp
xor
nop
pop
ins
lods
pop
in
sbb
xchg
fxtract
xchg
ss
les
dec
movs
ror
inc
mov
or
mov
push
jmp
jo
test
dec
sub
cmp
and
jl
leave
ret
dec
sbb
xchg
in
das
mov
xchg
retf
inc
jp
jg
es
lods
and
lods
dec
mov
sbb
(bad)
pop
daa
push
cmp
(bad)
pop
mov
(bad)
mov
out
test
sub
xor
out
or
cmp
mov
popa
cmps
clc
mov
jg
sbb
sbb
or
mov
push
jns
in
cld
loop
mov
sub
(bad)
(bad)
inc
mov
data16
(bad)
imul
or
or
test
inc
leave
aad
xor
xchg
push
mov
jns
inc
push
les
and
cli
mov
cmp
and
jl
sbb
or
mov
call
push
xchg
pop
pusha
mov
sbb
test
xor
shl
shl
mov
push
xchg
popf
stos
in
xchg
sub
(bad)
cmc
sub
adc
pop
dec
out
sub
out
imul
dec
dec
xor
sub
mov
inc
cwde
xor
popf
popf
add
sub
and
daa
or
add
in
add
movs
in
and
and
pop
push
fs
adc
mov
jg
cdq
sbb
jecxz
out
xchg
xor
cmp
in
xchg
sar
and
(bad)
xchg
(bad)
adc
lahf
retf
mov
scas
sub
mov
adc
ret
sbb
inc
mov
in
iret
std
cmps
dec
pop
scas
dec
mov
ret
cmp
mov
pop
mov
or
nop
test
cwde
cmps
push
in
dec
aam
sahf
and
xor
mov
cmp
push
int
mov
fcomp
or
cwde
movs
xor
push
push
out
sub
and
pop
mov
mov
out
or
xchg
pop
push
lods
cdq
xchg
(bad)
dec
fcomp
sbb
clc
jecxz
popf
mov
jp
sub
jmp
loopne
test
out
pushf
or
sbb
mov
call
and
dec
sbb
mov
lahf
mov
cmps
nop
sar
xor
mov
mov
ins
inc
jnp
mov
inc
retf
adc
mov
inc
lock
cdq
xchg
popa
lods
mov
inc
and
test
pop
xchg
ror
call
mov
adc
push
push
inc
push
lock
xchg
mov
pop
cmp
lds
ins
test
in
(bad)
fcom
adc
dec
push
retf
mov
add
repnz
gs
jmp
mov
add
pop
adc
mov
xor
pop
pop
fcom
cmc
mov
call
lods
or
je
xchg
add
inc
inc
add
pop
mov
pop
jge
xor
mov
mov
xor
lock
inc
dec
mov
jo
or
scas
jno
mov
push
pop
lock
js
pushf
ficomp
mov
add
cmp
xor
xor
dec
add
and
outs
fwait
loope
cdq
sar
in
jle
adc
rcr
ret
jp
movs
add
out
aam
clc
adc
pusha
pop
cmp
fs
or
cld
jecxz
loope
mov
push
ins
sbb
and
xchg
icebp
jmp
mov
outs
aad
mov
and
dec
test
mov
pop
xchg
int
mov
ret
cdq
lahf
lahf
sub
pop
mov
mov
inc
mov
xor
inc
sar
js
pop
jl
mov
(bad)
and
loope
xchg
retf
ds
add
mov
pop
imul
iret
pop
inc
and
fisub
xchg
stos
jmp
mov
cmc
or
in
push
adc
mov
js
or
mov
fwait
mov
movs
outs
jbe
ss
ins
mov
or
ror
mov
scas
fsubr
xchg
rcr
pop
ret
push
sbb
outs
add
fs
jecxz
xchg
sub
ficom
inc
(bad)
xlat
js
stos
fisubr
loope
pop
jge
fadd
add
push
sbb
adc
imul
dec
ret
xchg
or
and
test
adc
loopne
fs
popf
inc
scas
out
jge
loope
pushf
jg
jns
call
mov
push
ficomp
push
loopne
or
leave
adc
aam
jbe
stc
loopne
icebp
pop
add
cmps
shl
push
out
inc
ja
adc
movs
sub
sahf
jnp
pop
nop
data16
cdq
leave
in
lock
adc
add
retf
push
cmps
dec
retf
call
mov
pop
(bad)
or
dec
fs
stos
add
dec
cmps
faddp
push
sub
retf
js
mov
stos
faddp
and
push
mov
int3
sub
mov
jmp
jp
sub
(bad)
or
mov
fnstenv
(bad)
icebp
add
cs
das
es
ins
add
mov
fld
mov
inc
ins
dec
jae
dec
scas
das
popf
nop
lods
out
das
loope
out
push
loope
mov
sbb
pusha
and
cld
xchg
adc
retf
mov
dec
fnsave
lds
iret
push
std
out
pop
int
pop
stc
mov
push
test
arpl
outs
and
sub
cmc
cmp
cwde
push
cmp
or
jns
pop
ins
dec
rcl
and
adc
xchg
aas
pop
ret
sub
lock
adc
mov
test
fisubr
rcr
aad
mov
retw
jl
xor
sbb
pop
and
das
jp
mov
cmp
movs
scas
mov
xor
sbb
inc
push
mov
clc
in
mov
add
arpl
mov
cmps
(bad)
or
fld
clc
mov
add
pop
add
cli
aas
in
neg
xchg
jno
jl
adc
iret
fidivr
sar
and
add
(bad)
mov
(bad)
(bad)
out
movs
loope
mov
mov
add
(bad)
jmp
in
imul
mov
jnp
std
call
(bad)
test
fcomp
dec
push
pop
not
mov
scas
loop
or
nop
xchg
xchg
not
inc
and
and
jb
adc
shl
cld
pop
test
in
dec
xor
xchg
dec
and
sub
lock
pusha
ret
lds
xchg
sub
addr16
fstp
sbb
xor
sti
or
shr
popf
cmp
mov
ins
(bad)
add
dec
neg
popa
and
pop
xlat
int
jne
daa
scas
cmp
in
neg
cmp
aas
js
mov
or
test
ins
ds
aam
jmp
or
ins
sbb
jb
jmp
cmp
mov
inc
cwde
ret
mov
loopne
adc
mov
outs
push
lods
mov
popf
push
daa
pop
or
sti
fs
pop
sbb
add
das
xchg
in
outs
cmps
jge
(bad)
adc
sbb
not
push
jle
xchg
into
scas
dec
jbe
push
rcr
test
popf
mov
std
and
imul
sahf
iret
push
out
scas
xor
lods
aaa
pop
push
enter
ins
das
retf
add
js
xor
clc
jmp
dec
loope
fnstsw
or
sbb
div
nop
retf
cli
dec
arpl
lods
mov
out
mov
cmps
mov
int
push
pop
fldcw
sub
inc
pop
xchg
scas
push
stos
dec
lea
mov
xor
inc
pop
sbb
cmps
pop
push
imul
adc
imul
(bad)
sti
push
mov
or
stos
ror
mov
push
inc
cmp
adc
cld
loopne
imul
in
stc
add
pause
push
xor
pop
push
mov
push
mov
cmp
in
icebp
jl
dec
cmp
add
cwde
and
jnp
pop
xchg
pop
lods
imul
into
push
cld
lods
out
mov
mov
add
fld
mov
stos
lea
jecxz
adc
test
jle
dec
(bad)
bound
and
adc
pop
cmp
push
cmc
pop
test
(bad)
movs
sbb
leave
daa
push
aam
int3
add
popa
arpl
or
or
cmps
mov
retf
or
inc
clc
movs
movs
(bad)
adc
and
cld
pop
mov
and
sbb
mov
repz
bound
jmp
imul
mov
pop
loop
adc
popa
push
loopne
push
dec
sbb
ret
pop
int
out
mov
xchg
add
loop
orps
add
loopne
push
push
cmp
jl
jecxz
popa
mov
imul
loopne
outs
sbb
hlt
xor
sbb
popf
and
lock
push
mov
push
fst
pusha
loope
inc
out
mov
cmp
sbb
cmps
arpl
pusha
cmps
jo
imul
out
add
mov
gs
and
inc
push
xor
ins
in
jnp
repnz
adc
retf
pop
adc
sub
sub
pop
in
sbb
scas
xor
dec
ret
or
cmp
mov
add
adc
push
in
clc
push
enter
cmps
call
xchg
xchg
sar
loopne
pusha
not
hlt
mov
cmp
jae
jne
cmp
pop
lock
xchg
push
lods
or
sub
ins
push
lea
add
sub
popa
ret
stc
cmp
popf
arpl
jno
(bad)
and
mov
jmp
inc
in
sbb
push
sbb
div
push
mov
and
mov
xor
fisubr
(bad)
addr16
pop
ror
or
loope
ret
add
lds
push
cmc
xchg
dec
mov
mov
adc
fisttp
pop
add
(bad)
xor
loop
repnz
mov
test
and
mov
retf
jae
adc
lea
xchg
in
xchg
fist
loopne
add
push
dec
or
inc
dec
xor
pop
out
test
and
out
mov
push
ins
popf
cmp
aam
icebp
pop
inc
std
(bad)
jnp
int3
xor
mov
(bad)
pop
cmp
sti
ins
mov
push
jle
nop
sbb
sbb
jmp
sub
dec
data16
adc
imul
fdivrp
stc
test
stos
lea
xor
sti
jmp
out
sub
push
fisub
loop
sub
lods
xchg
lahf
or
pop
jmp
data16
lahf
or
and
jbe
loopne
pop
xchg
xchg
ret
xchg
inc
push
mov
loope
inc
imul
(bad)
adc
xor
mov
lahf
adc
mov
(bad)
xchg
xchg
fiadd
bound
mov
retf
adc
sbb
jmp
xchg
imul
call
mov
mov
out
rcr
int
test
mov
xchg
mov
call
cmp
lea
repnz
mov
dec
cmp
arpl
mov
sbb
jmp
(bad)
fbstp
xchg
mov
mov
xor
pop
sub
add
or
dec
repz
sbb
repz
push
fcomp
pop
fdivr
mov
in
dec
dec
or
jg
add
shl
cmp
fwait
out
mov
call
inc
sbb
lea
jnp
in
loope
fcomp
ret
pop
mov
dec
aaa
sahf
cmp
or
sar
adc
push
(bad)
sub
inc
pop
sahf
sahf
pop
cld
jnp
icebp
outs
xor
sti
cmp
test
test
and
xchg
sti
sti
adc
(bad)
xor
jbe
add
pusha
ja
popf
outs
aad
imul
test
icebp
xchg
out
data16
mov
and
jns
pusha
mov
iret
xlat
pop
js
push
push
pushf
mov
mov
pop
stos
dec
adc
adc
push
(bad)
int
arpl
fcomp
jb
xor
mov
movs
sti
mov
jo
outs
mov
fbstp
xchg
or
scas
lock
sti
pop
sub
xor
jne
pop
mov
sbb
imul
ret
je
jae
std
nop
push
push
sbb
or
dec
sti
stc
and
ret
xchg
repz
cmp
fild
sbb
shl
loopne
and
dec
xchg
(bad)
mov
int
jne
jmp
adc
scas
(bad)
and
add
fwait
dec
pushf
cmp
mov
adc
cmc
mov
fwait
lds
pop
cmps
imul
mov
nop
nop
lea
movs
pop
xchg
pop
sub
add
inc
cmps
pop
push
push
inc
jmp
pop
clc
add
dec
dec
test
xchg
cmp
or
xor
arpl
movs
ins
sbb
cmp
sbb
and
pushf
sti
cmp
mov
(bad)
sbb
fisubr
pop
bound
rcr
xchg
xchg
push
or
(bad)
in
in
and
mov
inc
xchg
cwde
or
jae
iret
popa
test
imul
cmps
dec
mov
repz
mov
dec
lock
(bad)
stc
push
mov
jge
add
and
lea
mov
xchg
je
retf
inc
or
mov
pusha
setp
out
mov
retf
push
push
rcr
adc
xchg
stos
mov
idiv
pop
bound
mov
and
fmul
mov
adc
mov
movs
pop
aad
mov
xor
js
cdq
scas
xor
push
fdiv
rol
cmp
push
jge
add
shl
dec
call
pop
ja
fs
cmps
inc
jl
adc
pop
mov
jmp
push
lods
mov
dec
in
aad
mov
or
ds
mov
push
and
not
mov
mov
test
adc
mov
fs
std
dec
xchg
loop
gs
rcl
sub
ds
pop
clc
into
adc
pop
gs
sti
not
ja
lds
clc
add
jp
mov
aaa
push
in
out
push
sub
aaa
sub
sbb
dec
ror
or
jmp
push
jo
retf
mov
les
dec
or
xor
test
lods
xor
sbb
pop
aaa
push
jg
lods
add
pop
jae
retf
jbe
dec
dec
xor
scas
inc
or
mov
mov
les
leave
jne
and
or
xor
push
and
je
imul
aad
dec
fnstenv
loope
or
mov
inc
xchg
pushf
in
jmp
inc
ds
ret
test
cmp
push
scas
pop
dec
push
fsub
ss
cmp
xor
imul
pop
mov
mov
mov
test
dec
or
int
push
cmps
rcr
fs
arpl
sub
nop
sub
fdivp
(bad)
out
out
ret
je
mov
mov
cmp
adc
push
(bad)
xchg
das
in
pop
std
jns
dec
xchg
test
in
sbb
push
out
daa
sub
add
iret
repz
mov
mov
sbb
cli
arpl
inc
(bad)
scas
xchg
push
cld
les
pop
xchg
or
jecxz
jmp
mov
cwde
aad
and
in
mov
add
(bad)
fs
adc
jae
inc
inc
loopne
jbe
cli
push
je
in
out
sbb
sbb
sti
pusha
aam
ror
add
aaa
popf
stc
js
repz
(bad)
repnz
xor
push
sub
jmp
inc
ds
adc
mov
jno
aad
sahf
sbb
and
ins
mov
cmove
aad
out
les
popf
jge
jae
mov
push
out
jne
or
movs
dec
or
(bad)
jbe
and
dec
and
inc
pop
xchg
jecxz
mov
mov
push
sbb
repz
cdq
xchg
pop
xor
jg
sbb
xlat
push
mov
adc
xor
cli
add
pushf
pop
leave
dec
push
test
popa
mov
aas
scas
sbb
arpl
adc
dec
addr16
and
inc
dec
call
adc
cmp
test
inc
lea
inc
xchg
xchg
scas
repz
jne
ret
cmp
mov
xchg
mov
lahf
dec
and
adc
mov
lea
xor
mov
and
in
add
cs
mov
or
aas
imul
das
mov
and
fbld
fcmovnb
arpl
push
test
stos
ja
js
mov
test
rcr
(bad)
push
out
cdq
sub
(bad)
jecxz
ret
icebp
cmp
adc
push
(bad)
ds
inc
(bad)
adc
xlat
mov
int
cwde
in
jge
rcr
leave
cmp
mov
fdivrp
push
addr16
sbb
push
mov
xor
call
lods
icebp
push
dec
pop
in
stos
call
test
daa
mov
push
stc
sub
mov
pop
enter
(bad)
iret
cmp
jae
rcl
std
scas
cmp
or
mov
xor
je
jmp
out
(bad)
and
mov
rcl
xchg
jae
mov
ror
int3
inc
push
sbb
mov
and
pop
cmp
and
pop
xchg
fnstsw
(bad)
sub
sub
cld
sub
jo
mov
inc
shr
in
ret
inc
fbld
inc
test
int
inc
das
inc
out
(bad)
in
gs
cld
gs
mov
nop
enter
mov
push
sbb
push
jae
and
fdivr
pop
sub
dec
cs
push
test
fcom
hlt
push
lock
mov
stos
stc
sub
mov
repnz
mov
loope
mov
lea
or
jbe
push
sub
mov
jnp
xchg
in
or
test
dec
inc
shl
fisubr
jecxz
cmp
xor
adc
cmps
mov
popf
fs
dec
addr16
cmp
and
push
xchg
mov
lahf
mov
out
test
jl
sar
cmc
mov
outs
or
push
mov
adc
bound
xchg
push
(bad)
mov
mov
arpl
sub
leave
mov
nop
std
xchg
hlt
mov
or
lods
sbb
outs
cs
nop
and
out
push
sbb
fsubr
fisubr
jl
movs
loope
push
aad
inc
and
and
push
push
cs
data16
cmp
mov
fild
pop
add
test
test
(bad)
push
and
jno
jo
ss
dec
and
(bad)
and
and
test
dec
mov
test
add
div
call
xchg
and
mov
jnp
ds
inc
jmp
fcom
leave
cld
mov
mul
out
(bad)
mov
jmp
call
(bad)
add
jle
xlat
int
fwait
push
out
or
pop
adc
addr16
scas
dec
pop
inc
lock
push
xor
pop
cs
movs
cmp
cmp
ins
cmps
or
lock
sbb
retf
push
jo
mov
ficom
cmp
mov
adc
(bad)
jl
out
loopne
xchg
fcom
xor
jl
xchg
xor
in
les
sbb
data16
mov
lods
(bad)
push
movs
mov
clc
inc
mov
ficom
jl
mov
in
mov
out
imul
es
lods
inc
pop
mov
or
int
int
ret
xchg
sbb
push
sub
frstor
or
adc
lock
inc
push
jne
push
mov
icebp
data16
jmp
ret
leave
sbb
sbb
lea
jmp
jge
xchg
xor
mov
cmp
or
mov
lods
adc
and
pushf
loop
dec
outs
inc
repz
push
mov
sub
sbb
test
pop
das
aam
pusha
cli
stos
adc
sbb
push
adc
icebp
xor
inc
iret
and
xchg
sbb
mov
ret
dec
int
lahf
mov
scas
pop
jg
add
fdivr
hlt
inc
out
movs
fdivr
nop
xor
in
jne
jmp
cld
ficomp
inc
inc
or
clc
ret
inc
mov
cs
push
addr16
loope
test
add
push
ss
xchg
movs
mov
jge
neg
xor
iret
lods
cmp
fimul
les
pop
movs
aas
fcmove
test
std
add
test
jb
(bad)
adc
movs
xor
sti
cmp
mov
jp
in
pop
inc
imul
jae
pop
jg
popf
and
push
jno
retf
jmp
dec
ins
mov
inc
aad
test
dec
rcl
cmc
mov
rcl
mov
cli
cld
mov
icebp
outs
fcmove
mov
xor
sbb
imul
pop
lock
div
hlt
cmp
sets
pop
xchg
retf
xor
or
sbb
adc
fdiv
dec
das
stc
out
mov
lods
pop
ins
pop
cmps
fld
sbb
out
leave
pop
xor
xchg
push
xchg
add
call
lahf
es
xor
cmp
call
cmc
and
mov
xchg
mov
popf
lahf
lods
xchg
or
inc
pushf
and
(bad)
arpl
scas
adc
adc
fisub
scas
xor
dec
jne
or
sub
das
xor
xlat
out
add
sub
cmp
push
adc
push
cli
pop
hlt
push
je
pop
ins
or
xchg
lahf
and
call
in
ffreep
jns
mov
inc
cdq
push
lods
jg
jle
lea
shl
and
into
inc
sbb
repnz
sub
sar
clc
lahf
into
push
mov
mov
out
fisttp
ins
jne
mov
jge
inc
movq
mov
mov
test
fbld
cwde
mov
jbe
sar
or
rcl
(bad)
sub
pop
test
call
adc
xchg
mov
in
out
repz
adc
shr
adc
push
imul
ins
test
and
sub
fistp
mov
cmp
les
xor
and
jnp
add
imul
fs
cvttps2pi
and
pusha
pusha
nop
add
fnstsw
mov
cmp
mov
inc
push
push
and
sub
xor
xor
test
mov
fmul
retf
in
(bad)
pop
adc
jb
fs
push
pushf
loop
pushf
dec
pop
mov
sti
xchg
jecxz
mov
xor
inc
dec
scas
bound
push
out
xchg
cmp
xchg
pop
pop
rcl
mov
mov
rol
fisub
push
ja
sbb
pushf
enter
xlat
imul
or
inc
pusha
ins
add
mov
lock
inc
dec
aaa
adc
mov
xor
clc
or
pop
mov
push
inc
sbb
jmp
cmp
or
(bad)
aad
adc
mov
adc
ds
inc
jmp
jmp
sti
mov
xor
out
cmp
enter
mov
mov
dec
jecxz
fiadd
loop
in
stc
sub
and
xchg
pop
(bad)
cs
xchg
inc
mov
mov
(bad)
sub
cmp
imul
call
idiv
push
pop
add
ins
out
sbb
inc
fistp
ror
sahf
scas
pusha
ret
lods
adc
xchg
test
dec
call
jle
mov
lock
and
xor
(bad)
stc
mov
mov
fidivr
xchg
add
std
jle
in
je
sbb
xor
out
iret
jge
in
call
cmp
hlt
sbb
movs
call
in
cwde
sbb
pop
pop
fmul
pop
popa
adc
push
mov
cmps
jmp
dec
mov
into
popf
out
out
std
jb
xor
push
ins
sbb
sub
aaa
sub
out
mov
shl
xlat
dec
rcr
in
in
push
mov
pop
addr16
sbb
call
or
rol
push
xor
ins
imul
sub
mov
shl
mov
pushf
fidivr
je
cmp
sti
ss
ja
out
mov
fwait
push
outs
inc
push
adc
out
pop
loopne
mov
dec
cld
pop
ret
xor
(bad)
mul
and
mov
push
xchg
sbb
mov
cmp
pushf
cs
xor
mov
daa
push
inc
mov
xchg
cmps
sub
push
test
pop
nop
jb
aaa
and
test
adc
adc
sbb
(bad)
out
xchg
xchg
sbb
or
addr16
fwait
jle
imul
imul
div
test
into
test
fnstcw
sti
mov
sti
popa
inc
imul
neg
dec
adc
in
mov
xchg
xor
in
cmp
xchg
pushf
lods
push
fs
cdq
ss
movs
(bad)
xor
cmp
pushf
loopne
out
xor
loopne
mov
adc
jae
fsubr
stc
xlat
add
sub
mov
or
sbb
mov
ins
cmps
into
outs
fadd
sbb
xor
dec
shr
test
imul
cmp
adc
jl
js
push
dec
jl
xchg
mov
jmp
jmp
push
mov
imul
fpatan
sub
(bad)
add
gs
es
imul
pop
shl
pop
dec
fisubr
retf
xor
adc
das
push
pop
dec
and
inc
loopne
adc
xor
clc
jge
mov
mov
xor
test
movs
mov
lods
xor
(bad)
pop
jle
loopne
retf
dec
sbb
ins
mov
data16
mov
outs
cli
or
lahf
pop
mov
std
cmp
xor
mov
xchg
lahf
adc
out
and
daa
stc
add
(bad)
jmp
mov
arpl
ja
dec
test
imul
jne
pop
cs
call
add
cmp
aad
lds
xchg
push
mov
loope
jnp
into
ror
adc
pusha
push
test
mov
mov
aad
jg
or
aaa
idiv
pop
inc
pop
xor
arpl
xor
and
mov
lods
push
enter
in
xlat
push
clc
jg
jbe
mov
add
(bad)
or
add
sub
mov
fisubr
xor
arpl
and
call
add
push
push
fwait
add
xor
leave
cmp
(bad)
arpl
add
pop
pop
out
mov
mov
adc
test
stc
sbb
scas
movs
call
popf
mov
fisubr
std
outs
loope
adc
inc
sub
pop
sbb
enter
xchg
pop
mov
inc
rol
lock
push
fs
ja
jge
rcl
mov
mov
dec
es
xlat
sub
xor
dec
pop
xlat
mov
push
push
shr
mov
(bad)
in
retf
jnp
jbe
mov
add
(bad)
repnz
mov
push
inc
pushf
cli
ins
neg
out
xor
xchg
push
pop
out
jbe
daa
dec
xchg
ss
test
pop
jmp
dec
mov
std
push
and
dec
or
inc
add
add
call
push
and
call
xchg
sub
pop
movs
pusha
aas
out
sbb
dec
mov
xlat
push
out
sahf
mov
leave
xchg
mov
mov
jp
fmul
sub
fstp
push
test
inc
mov
int3
sbb
(bad)
pop
xchg
sbb
xor
lods
sbb
imul
fimul
aam
fstp
jbe
push
daa
mov
add
and
mov
mov
mov
cmp
mov
test
jns
out
sbb
jae
ins
or
push
cmps
(bad)
push
out
mov
push
cdq
xchg
xchg
jmp
fld1
pop
sbb
movs
and
dec
sbb
test
ret
rol
xor
xchg
inc
pop
int
sbb
cmc
and
(bad)
out
cmps
fistp
mov
or
fstp
sub
neg
xchg
dec
push
sub
jg
sub
push
mov
imul
or
stc
xchg
push
stos
aas
cmc
ror
lahf
adc
(bad)
ficomp
mov
js
outs
jecxz
jnp
xor
push
pop
inc
lods
mov
or
sahf
mov
push
fs
jb
repz
xor
je
and
sub
ins
xor
stos
push
cli
add
pop
popa
lock
cwde
adc
(bad)
pop
out
mov
mov
sub
in
pop
lds
xlat
dec
in
sbb
popa
mov
fidiv
cmp
xchg
lds
push
rcr
out
dec
pop
call
mov
adc
cli
and
out
pop
jl
out
add
xor
mov
push
pop
or
push
and
shl
cmp
sbb
repz
and
push
and
mov
sbb
mov
lods
iret
jl
in
dec
(bad)
out
lods
sbb
lods
adc
inc
movs
jbe
xor
cmp
in
cmp
mov
aas
clc
mov
add
cmp
inc
fs
xor
pop
jle
je
test
xor
imul
(bad)
je
dec
aam
mov
sbb
and
shr
inc
es
out
nop
daa
mov
adc
push
enter
icebp
in
ins
sub
dec
add
jge
out
jnp
jb
mov
and
xchg
fwait
lods
inc
lods
pop
popf
movs
sti
sbb
cmp
sbb
int
ss
fcmove
adc
mov
das
in
push
clc
mov
ret
lahf
rcr
mov
xchg
push
jp
sahf
pop
and
adc
xor
mov
imul
or
lds
xlat
xchg
and
jnp
add
jnp
cmps
xchg
inc
push
(bad)
mov
out
jecxz
sbb
jo
sbb
popa
cmp
xchg
add
dec
sub
cmp
jmp
xchg
cmps
(bad)
mov
jae
outs
or
sub
mov
adc
push
(bad)
xor
and
xchg
dec
test
cs
daa
push
sub
cmc
addr16
cmp
jae
js
fmul
imul
sbb
inc
(bad)
in
xchg
cmp
into
cmps
sbb
std
xchg
mov
dec
rcr
add
jecxz
scas
adc
pushf
loope
mov
retf
pop
ret
sub
es
push
outs
out
push
cmps
xchg
or
addr16
jl
mov
in
pop
xlat
jle
in
xchg
sbb
cwde
andps
mov
add
mov
dec
mov
addr16
sub
out
jp
xor
and
fist
push
cmps
pop
mov
mov
lods
push
add
pop
jmp
jns
shr
or
cmp
jbe
pop
dec
(bad)
mov
mov
jbe
sbb
pusha
(bad)
loop
ds
movs
dec
cdq
mov
mov
ss
jmp
cdq
fisttp
cmp
std
pop
in
ins
and
leave
push
sbb
mov
jge
mov
add
enter
test
mov
sbb
and
mov
rcr
mov
mov
adc
jle
cli
xor
add
cli
aas
sub
mov
lds
lahf
dec
mov
fmul
ror
adc
ds
xchg
into
adc
shr
mov
in
fbld
sbb
push
test
fild
retf
jae
xchg
ret
iret
popf
and
and
mov
push
mov
ja
leave
ret
and
adc
sub
je
bound
dec
ja
pusha
mov
mov
pushf
mov
cmc
xor
jge
sbb
mov
xchg
imul
and
inc
stc
cmp
jbe
cmp
or
and
jmp
jae
push
pop
jmp
cmp
aam
fcomp
shl
mov
push
fisubr
retf
fwait
xchg
inc
in
xor
push
jo
aam
push
mov
in
push
mov
jge
pop
ja
cs
cs
fs
scas
xor
jbe
jo
xchg
outs
xchg
sbb
sbb
xchg
aas
xchg
cld
test
or
cli
ins
retf
imul
jmp
mov
dec
imul
pop
add
adc
sbb
push
mov
aaa
mov
xchg
imul
rcl
mov
adc
mov
lods
cmp
data16
mov
jno
xchg
sbb
mov
sar
sbb
rol
sahf
shl
mov
dec
inc
xor
test
fstp
sub
push
icebp
fwait
add
and
pop
push
js
shl
gs
cwde
cmp
stos
push
pop
out
mov
mov
lea
push
xchg
ins
(bad)
inc
cmp
jo
dec
int3
adc
mov
sti
test
jo
std
popf
or
xor
mov
jmp
pop
pushf
shr
movs
mov
sahf
test
dec
and
sub
xor
stos
cmp
int3
xchg
jmp
lods
mov
jg
adc
sti
push
fs
stc
imul
fwait
sahf
mov
fwait
outs
imul
fist
adc
(bad)
out
add
cmp
into
fucomip
fwait
jne
test
sahf
sti
or
cmp
in
sbb
dec
(bad)
aam
inc
mov
jmp
dec
sbb
nop
movs
xor
out
cmp
sub
sub
xchg
jmp
cwde
xchg
mov
repnz
push
cmp
call
xor
pop
sbb
xchg
xchg
sub
xchg
mov
jnp
js
into
dec
mov
or
out
bound
push
pop
mov
inc
popa
jo
xchg
add
jne
out
std
push
stc
sub
cmp
lds
mov
jmp
mov
dec
dec
out
dec
(bad)
dec
ss
xchg
mov
cmp
fwait
adc
lods
aas
ds
jnp
outs
cmp
inc
xor
cmps
in
pop
dec
mov
shl
sub
pop
jno
mov
cs
jmp
dec
movs
inc
xchg
pop
cli
jp
(bad)
xchg
dec
jb
lods
add
fnstcw
aad
pusha
lea
and
cmc
sar
pop
cmc
dec
push
leave
ficom
inc
jo
mov
sub
cmp
movs
imul
popa
inc
cdq
sub
inc
(bad)
adc
call
pop
pop
pop
std
and
xor
test
adc
jno
and
jo
lea
int
outs
je
cmp
sub
rcl
shl
jmp
add
xchg
push
lock
xchg
jmp
add
pop
out
mov
aam
pushf
in
push
inc
cmp
push
cmps
xchg
xchg
and
pop
dec
shl
or
out
int
test
add
test
and
push
push
rcl
rcl
push
fistp
movs
dec
(bad)
push
imul
mov
addr16
pop
jb
int3
dec
mov
push
dec
adc
xchg
mov
cmp
inc
jae
jl
lock
inc
es
jns
or
call
lods
in
xchg
mov
(bad)
test
dec
ins
call
imul
test
rcl
or
ret
mov
xor
push
mov
jle
jb
inc
mov
mov
loope
mov
jae
jecxz
sbb
and
cli
movs
cmp
adc
cmps
inc
mov
adc
ds
dec
imul
dec
cmp
call
in
or
test
out
stos
jns
or
sbb
movs
xor
mov
inc
retf
movlps
push
mov
sbb
aam
adc
inc
retf
fs
(bad)
xor
rcr
dec
mulps
mov
aam
(bad)
pop
aaa
arpl
mov
fwait
jl
push
pop
and
mov
mov
ror
mov
fisttp
pextrw
ins
fisub
cmp
add
mov
ins
inc
aaa
cs
add
xor
or
mov
jg
pop
ins
jmp
in
jge
xchg
in
stc
inc
pop
call
ror
in
mov
retf
xchg
or
test
and
out
(bad)
popa
mov
cmps
xor
scas
sahf
or
adc
mov
xor
test
gs
out
or
add
cmp
mov
ror
out
repz
mov
xchg
rcl
or
push
(bad)
adc
adc
pop
inc
jbe
mov
jp
out
sbb
pop
out
add
adc
mov
ja
cmp
xchg
stc
daa
lahf
sub
cmc
movs
jbe
fcom
fadd
sbb
mov
xlat
jge
and
fsubrp
cmp
xchg
xlat
sti
ja
and
jmp
mov
or
es
test
add
mov
mov
ss
loopne
scas
out
and
mov
in
mov
fst
in
sahf
arpl
std
xchg
mov
mov
mov
sbb
dec
push
mov
ins
adc
test
clc
sti
cmp
dec
pusha
and
(bad)
loopne
(bad)
das
test
xchg
xor
test
inc
mov
jmp
imul
inc
in
jp
xchg
dec
outs
nop
idiv
cmp
scas
cdq
mov
xlat
cmp
sbb
lahf
int
out
xor
shl
out
adc
ins
lock
adc
(bad)
and
jp
jbe
jge
sub
mov
xchg
sahf
mov
mov
jmp
icebp
cmp
cmp
call
add
ror
dec
jle
inc
(bad)
ins
cli
imul
int
aas
add
adc
pop
shl
dec
xor
cmp
and
retf
mov
mov
xchg
mul
call
in
mov
pop
push
sub
retf
(bad)
mov
sub
add
call
sub
push
push
jb
clc
xor
jle
les
fldenv
sar
and
aad
or
loope
in
dec
scas
pop
in
and
xor
mov
mov
mov
jmp
push
mov
repz
push
cdq
sbb
pop
aas
sub
jge
xor
gs
fisttp
cmp
cmp
inc
hlt
inc
test
xor
pop
adc
fwait
and
inc
sbb
mov
and
sub
cld
fnstsw
mov
dec
into
pop
outs
jne
and
test
cdq
cmps
jno
sub
lods
dec
add
int3
jp
sub
cmps
sbb
sub
int3
enter
mov
int
in
and
xchg
pop
pop
and
movs
bswap
sub
aad
stc
test
cmp
sub
repz
pop
imul
ror
push
inc
jno
inc
xchg
mov
and
scas
push
test
xchg
(bad)
imul
xchg
mov
cs
aas
push
cwde
ror
sub
aas
add
sub
stos
fs
cdq
mov
mov
jbe
in
aas
pop
ffree
int
adc
cmp
sub
enter
push
(bad)
cmp
cmp
cmps
mov
inc
adc
inc
call
push
jecxz
sbb
neg
outs
and
sar
inc
jno
jno
lods
mov
pop
sbb
scas
push
mov
add
push
outs
dec
inc
push
push
vcvttss2si
cld
retf
stos
mov
inc
sub
mov
mov
jns
add
lods
mov
adc
rol
inc
or
jbe
std
jns
hlt
add
mov
lea
jae
sub
xchg
cli
cmps
mov
(bad)
loop
pop
je
pop
inc
push
scas
faddp
bound
cmps
out
aaa
and
stos
movs
gs
mov
fdiv
sar
mov
jne
add
xor
adc
aas
call
scas
stos
or
inc
pop
popf
lahf
test
mov
sbb
aas
(bad)
or
mov
popf
leave
xchg
and
xor
ss
das
jnp
lahf
aad
xchg
sub
aad
in
xchg
(bad)
in
hlt
out
arpl
ret
jge
out
cli
xchg
dec
and
inc
mov
jno
push
add
cmps
pusha
int
inc
aas
adc
mov
push
push
fldl2t
cmp
add
push
adc
popf
test
mov
aas
mov
jbe
add
mov
pushf
add
push
inc
adc
sbb
sbb
mov
sbb
add
or
cmp
adc
(bad)
and
(bad)
out
xchg
adc
cmc
push
mov
idiv
sub
jno
cmps
jne
and
cld
cmp
or
ja
repz
jo
imul
cmp
and
dec
pop
fs
sub
or
push
add
cld
push
mov
dec
cmp
pop
or
pop
push
ss
push
mov
out
lock
enter
(bad)
retf
sbb
movlps
add
cmp
pop
jmp
pushf
pop
mov
sbb
enter
adc
cs
stos
out
out
xchg
stc
or
sbb
inc
pop
inc
and
lea
dec
ja
repnz
imul
xor
call
rol
test
pop
enter
mov
mov
adc
xor
iret
xchg
sub
inc
mov
push
rol
aaa
pop
push
pop
jmp
push
mov
(bad)
pop
aaa
cmp
into
ins
in
loopne
adc
retf
jae
(bad)
xor
mov
out
xor
adc
jo
fisttp
push
or
dec
sub
lock
cwde
dec
mov
sub
je
test
out
dec
test
in
in
cmp
pop
xor
ss
stos
sahf
fst
fs
arpl
jne
push
and
repz
add
cmp
xchg
pcmpgtd
xchg
and
dec
lea
pop
ins
sub
xchg
and
rcl
rcl
and
ffreep
data16
out
jne
push
adc
mov
into
(bad)
ror
sub
sbb
pushf
test
pop
aad
xchg
sbb
push
cld
xchg
stos
inc
(bad)
aaa
fdivrp
dec
mov
outs
loop
cmp
push
repnz
mov
mul
pop
inc
mov
aas
or
adc
and
outs
pop
adc
gs
shl
retf
test
xchg
out
lock
inc
mov
pop
mov
mov
push
inc
nop
or
dec
lahf
or
repz
push
push
mov
cmps
adc
mov
mov
mov
dec
sti
dec
addr16
rcr
(bad)
aas
inc
idiv
cmc
mov
jne
fiadd
sbb
sahf
sub
mov
cmp
dec
stc
pusha
nop
shr
add
cmp
mov
in
jae
mov
xchg
push
out
jo
into
sbb
in
xor
popa
push
sub
or
repnz
jp
outs
xchg
cmp
push
inc
pop
arpl
mov
jbe
jp
inc
fs
mov
gs
fadd
or
ror
mov
add
push
add
cmps
in
jl
es
sahf
test
mov
jnp
jle
dec
clc
mov
pop
ret
call
mov
cmps
ret
push
add
push
rol
xchg
xchg
jb
popa
sub
inc
iret
jno
mov
mov
out
sub
int3
adc
fst
inc
(bad)
mov
pusha
xchg
cmps
cmps
mov
fistp
int3
fiadd
pop
adc
mov
sbb
aam
cmp
js
(bad)
lahf
mov
jg
inc
jp
mov
mul
xchg
xchg
jnp
mov
mov
mov
lods
adc
es
inc
sbb
cld
inc
xchg
or
jo
neg
or
scas
sbb
and
jecxz
fstp
(bad)
pop
push
or
mov
movs
adc
mov
outs
push
bnd
mov
ret
cs
push
sub
ds
sbb
into
push
dec
mov
inc
cld
js
and
sub
jns
out
and
adc
sbb
xchg
jo
in
sub
es
mov
sub
call
push
jbe
es
int3
sbb
push
cmps
fwait
adc
or
mov
pop
fwait
shl
sub
cmps
lods
inc
call
lea
ret
push
mov
out
xchg
jmp
jno
adc
popf
sbb
inc
ins
int3
push
xchg
cmc
mov
jbe
xor
lods
or
imul
pusha
fisubr
adc
stos
ss
fstp
xor
pop
mov
fistp
cmc
mov
sbb
ins
iret
mov
push
imul
cmp
xor
jbe
xchg
push
retf
fdivr
xor
les
push
fiadd
adc
lods
and
sub
mov
sbb
or
cmp
dec
push
dec
push
pushf
(bad)
test
mov
sub
and
push
push
pop
int
es
pop
sub
adc
push
hlt
cmp
fsubr
ret
sbb
nop
stos
sub
leave
pop
sub
retf
and
dec
dec
faddp
jb
bound
mov
ins
fsubr
push
out
leave
sahf
wbinvd
ins
movs
test
push
rcl
retf
pop
push
inc
xor
bound
add
sub
inc
xor
or
js
(bad)
xlat
rcr
call
and
icebp
fisubr
pop
outs
in
in
enter
sub
xor
aaa
ins
and
adc
movs
pop
push
mov
and
call
dec
cld
test
jecxz
mov
loope
cli
std
outs
jg
test
les
adc
out
(bad)
(bad)
inc
loope
push
jmp
add
fcmove
add
push
add
movs
sub
scas
mov
pop
or
mov
scas
outs
push
push
(bad)
adc
dec
cld
cmp
push
aam
ja
mov
jl
out
inc
sbb
shr
xor
rcr
push
add
lods
mov
push
pop
push
imul
mov
or
adc
sub
fstp
data16
sbb
inc
call
test
ret
in
hlt
lods
neg
xchg
jmp
and
mov
mov
stc
sbb
xor
cwde
icebp
mov
cmp
loopne
adc
xor
xchg
movs
test
sahf
mov
or
outs
sub
shl
mov
sahf
(bad)
pusha
imul
popf
xor
add
or
ins
xchg
xchg
xchg
cmp
cdq
xlat
add
cs
stc
jge
jne
inc
iret
aas
outs
ja
pushf
push
pop
mov
nop
test
bound
mov
je
scas
add
je
inc
adc
mov
dec
daa
out
mov
stos
les
sar
mov
(bad)
je
mov
into
cmp
add
xor
mov
nop
xchg
mov
jo
out
or
jnp
add
inc
xor
dec
leave
sub
lahf
mov
outs
fdivr
das
lock
push
inc
or
jmp
bound
dec
retf
rcr
retf
lods
fimul
imul
dec
int
dec
mov
cld
mov
sub
fld
jno
xor
jmp
xor
fst
rcl
cmc
nop
cmp
daa
call
and
mov
je
push
loop
add
jl
stc
fwait
scas
sub
xor
jecxz
or
pop
enter
arpl
or
lods
aaa
pop
dec
xchg
jmp
pop
fs
xchg
adc
lock
rcl
(bad)
add
xor
popa
jecxz
ret
push
js
inc
inc
ins
test
call
ret
mov
in
cwde
in
outs
jecxz
lock
scas
jmp
add
inc
scas
ss
aam
xchg
xor
mov
adc
js
or
(bad)
cli
push
jg
xor
mov
or
icebp
mov
bound
shl
bnd
ins
retf
in
leave
pop
pop
sub
rep
jns
test
push
push
sbb
js
pop
push
call
fidiv
mov
lods
or
cwde
cmp
inc
movs
cmp
adc
jge
add
loopne
or
xor
dec
rcr
adc
jb
or
enter
push
dec
jecxz
enter
push
leave
outs
mov
ret
pop
xchg
ficomp
retf
mov
imul
mov
mov
hlt
pop
int3
(bad)
fcmovbe
mov
mov
xchg
xchg
xchg
ret
loop
ret
repnz
or
cmp
sahf
out
fild
stos
push
int
or
out
inc
xchg
(bad)
dec
sbb
jb
shl
(bad)
sbb
and
jl
outs
mov
lock
jnp
mov
sub
xchg
pop
fdivr
shl
(bad)
int3
movs
popf
(bad)
sbb
test
sbb
sbb
ret
std
mov
mov
dec
jp
sub
iret
repnz
fldenv
xor
ret
retf
aas
inc
add
out
adc
mov
outs
pushf
cli
das
sbb
mov
inc
sbb
stos
add
retf
shl
out
mov
push
mov
std
sbb
cmp
mov
sub
or
cmp
mov
jb
outs
jno
push
add
sbb
out
add
jbe
not
and
xor
xchg
pop
cli
call
and
ret
push
jmp
and
jns
in
(bad)
cmp
in
or
test
fldl2t
adc
ja
mov
test
pop
dec
imul
dec
adc
in
mov
jle
pop
mov
fidiv
jle
sub
sbb
sahf
out
xchg
sub
in
cmps
mov
xor
pusha
sub
loope
into
dec
mov
mov
daa
pop
xchg
pop
push
mov
mov
push
or
rcr
adc
pop
jg
stos
push
pop
sti
ss
or
cdq
sbb
hlt
nop
retf
mov
push
es
mov
sub
nop
addr16
dec
xchg
fsub
push
or
add
cdq
jg
pop
jnp
std
jmp
jno
ins
imul
retf
rcr
pop
mov
sahf
lahf
loopne
pop
iret
mov
sbb
jge
pop
fwait
rcl
shl
adc
in
loop
fimul
add
dec
inc
out
lea
mov
test
push
loopne
stos
sahf
repnz
mov
dec
mov
mul
pop
push
xor
cmps
pop
add
imul
mov
ret
mul
ficom
lods
push
dec
neg
or
xor
test
loopne
mul
and
ins
and
outs
mov
inc
fcom
(bad)
cmps
inc
mov
pop
or
mov
mov
xchg
sub
stos
bswap
arpl
jno
xor
and
aam
shl
mov
fwait
aaa
and
jmp
cmc
push
mov
xchg
jp
cld
mov
jmp
ds
ret
sbb
lds
mov
inc
lahf
ret
mov
mov
and
sbb
dec
rcr
les
out
mov
sub
fcom
mov
cwde
sbb
jno
sub
mov
dec
add
jmp
mov
sbb
mov
jecxz
add
jno
mov
dec
loopne
add
daa
mov
call
inc
stc
inc
sahf
adc
ja
das
fidivr
mov
cmp
leave
add
les
mov
mov
iret
ss
hlt
lods
loop
ins
lea
repz
loope
adc
push
mov
cwde
xchg
daa
std
inc
jne
sbb
adc
test
pop
jmp
push
mov
clc
pop
xchg
inc
and
sub
or
hlt
add
push
data16
mov
add
dec
mov
jmp
loopne
push
ja
or
mov
mov
xor
lahf
adc
jmp
inc
and
dec
repz
ja
jnp
not
(bad)
mov
out
out
xchg
xchg
jle
xor
js
mov
mov
inc
ja
or
(bad)
xor
xchg
or
push
jb
out
shl
repnz
shl
test
mov
ror
sub
adc
xor
out
fiadd
cld
add
lds
test
push
adc
ins
iret
repz
(bad)
not
rcr
imul
mov
sub
mov
pop
aaa
mov
push
imul
out
ins
lods
addr16
nop
mov
test
sbb
mov
das
and
cmp
mov
(bad)
out
jmp
pop
dec
les
cli
loopne
push
push
(bad)
aam
adc
adc
dec
mov
fwait
lea
jmp
repnz
lea
stos
sub
popa
inc
(bad)
sbb
mov
jbe
inc
sub
sub
mov
cdq
and
jns
addr16
cmc
js
push
add
mov
push
das
adc
xchg
pushf
cwde
nop
cmp
popa
push
sbb
inc
lds
push
or
add
ds
pop
lock
mov
pop
push
cmp
xor
sbb
cmc
and
jne
in
push
or
fisttp
movs
mov
dec
jmp
scas
cmp
xchg
push
mov
enter
popf
je
xor
aas
ror
sub
fild
cwde
test
call
mov
pop
sbb
add
jecxz
jbe
stc
push
pop
adc
mov
mov
call
cmp
jae
jecxz
add
mov
and
push
adc
sbb
jmp
or
xor
mov
pop
add
mov
test
(bad)
pushf
fcom
mov
(bad)
shr
and
mov
mov
sub
test
retf
cmp
rcl
pop
xchg
outs
sub
push
jno
adc
lea
mov
out
adc
popa
in
jmp
mov
into
cs
data16
ror
int
dec
add
jns
cs
ffreep
outs
stos
mov
jecxz
ins
lea
adc
sbb
stos
loopne
daa
(bad)
push
push
adc
pop
lods
cmps
xchg
inc
or
sub
adc
(bad)
js
stos
add
and
jns
pop
ins
dec
pop
shl
(bad)
mov
add
and
jo
xor
cs
jbe
pushf
mov
in
cmp
xchg
mov
daa
jnp
lock
jge
xchg
shl
inc
jo
dec
bound
push
add
mov
add
fst
outs
test
sbb
push
adc
dec
push
mov
mov
jb
inc
dec
out
cmp
je
xor
add
jl
xchg
into
sbb
mov
aad
sub
and
fs
sbb
adc
mov
out
pop
push
fld
js
push
sbb
sbb
imul
add
push
inc
shl
jle
adc
push
mov
int3
mov
sti
sub
mov
fs
push
adc
sar
jo
dec
push
xchg
int3
cli
(bad)
pop
stc
xor
sub
jae
in
adc
jge
cmp
cmp
jg
leave
in
add
jb
aas
adc
xchg
ret
aam
ret
es
gs
loope
sbb
fstp
lock
or
push
ficomp
adc
cmp
push
and
dec
in
loop
jp
test
jp
imul
mov
pop
jae
mov
loope
push
fsubr
ret
push
xchg
out
push
cmp
or
push
or
aad
lahf
or
popa
mov
lods
lea
data16
add
xor
cmp
cli
test
add
movs
mov
hlt
jae
cmovp
mov
push
mov
stos
add
jl
in
inc
mov
mov
test
mov
ins
and
push
xlat
jno
and
pop
leave
mov
mov
mov
in
push
inc
lds
mov
jo
jl
sub
call
imul
adc
add
pop
push
clc
push
jp
fcomi
(bad)
lea
in
retf
xchg
xor
shl
fistp
mov
xchg
daa
mov
icebp
cmp
xor
or
sahf
mov
mov
xchg
call
(bad)
pop
sbb
add
retf
sub
adc
mov
cmps
mov
mov
mov
or
fsubr
aam
jmp
jmp
stos
shl
or
adc
dec
or
hlt
pop
or
pop
mov
stos
xchg
xor
xchg
push
push
and
push
xchg
adc
xchg
dec
mov
cdq
scas
jne
in
pop
ins
and
je
jbe
inc
out
pushf
rcl
daa
iret
or
xor
aaa
add
push
add
imul
pop
pop
out
fcomip
push
add
leave
in
aam
jg
imul
and
jnp
std
imul
and
jb
cdq
fwait
aam
push
call
push
mov
adc
dec
loopne
jo
inc
and
aaa
int3
pop
test
dec
das
int3
daa
(bad)
imul
and
pop
out
cdq
cld
and
mov
and
test
xor
mov
mov
mov
adc
jmp
retf
js
arpl
mov
ja
mov
aaa
dec
sbb
fwait
mov
push
mov
add
jno
call
mov
aad
mov
adc
mov
ucomiss
out
and
lods
test
inc
iret
jb
movs
xor
pop
and
dec
aam
dec
jmp
nop
mov
xor
and
cwde
cli
cmp
lods
jb
or
dec
js
dec
sahf
loopne
jns
out
xor
cmp
lods
fnstsw
cmp
xor
popa
dec
inc
mov
(bad)
repnz
sub
mov
aaa
repnz
test
xchg
icebp
xlat
push
xor
sbb
je
push
fld
jnp
xor
loop
ins
dec
jmp
inc
ins
or
xchg
cdq
xor
push
mov
sahf
and
test
ror
mov
sbb
xor
in
ficom
mov
aaa
lods
mov
pop
shl
inc
movs
(bad)
daa
test
addr16
cmp
inc
aaa
(bad)
mov
int3
or
repz
dec
repz
stos
test
push
ret
sub
icebp
sub
out
(bad)
mov
into
pusha
fstp
inc
xchg
pop
les
(bad)
mov
lods
inc
ds
dec
cmp
fs
inc
cmc
or
sub
inc
retf
out
outs
adc
lock
mov
cmps
mov
dec
rol
push
(bad)
push
dec
sbb
test
nop
dec
push
out
bound
shr
retf
(bad)
call
adc
repz
push
fcomi
jmp
fwait
pop
push
jge
iret
imul
and
and
sub
adc
arpl
add
rcl
sbb
out
(bad)
xlat
ins
rcl
test
pop
and
jo
cdq
test
push
or
or
js
mov
pop
or
mov
out
pop
pushf
rcl
lods
lods
sub
ins
sbb
xchg
ret
push
xchg
cmp
cmp
xchg
jmp
fucomi
lods
sahf
mov
inc
mov
adc
push
syscall
sar
outs
inc
in
lahf
dec
loop
dec
add
outs
cmp
and
bound
sbb
cmp
pop
cmp
pop
jmp
std
js
mov
push
sbb
pop
enter
adc
xor
or
es
mov
jns
fldenv
dec
mov
in
mov
out
dec
test
dec
mov
add
xchg
xor
sbb
repz
jnp
jmp
fimul
and
pop
test
and
enter
daa
xchg
mov
jae
jno
outs
push
lods
sub
add
fld
pop
cmc
sub
and
dec
mul
enter
mov
idiv
mov
lea
(bad)
pop
xchg
sub
xchg
and
cmps
xor
(bad)
ins
sbb
xor
dec
add
enter
push
dec
ret
pop
xlat
clc
les
lock
xor
cmp
retf
pop
sahf
outs
push
mov
aaa
sbb
pop
or
sub
push
ss
test
cmp
inc
mov
test
ds
lea
nop
mov
adc
mov
inc
jno
(bad)
neg
mov
xchg
or
out
into
in
mov
shl
fisub
adc
inc
aaa
loopne
lea
outs
pop
dec
je
add
in
dec
dec
daa
outs
test
arpl
jg
and
movs
sbb
in
pop
icebp
aam
jecxz
sar
mov
or
dec
fldcw
aad
addr16
mov
mov
mov
(bad)
retf
mov
mov
jnp
xor
push
or
xchg
inc
and
sti
cmps
or
mov
es
adc
sbb
addr16
xchg
or
fcomp
retf
mov
push
jns
rcr
ror
lods
add
out
pop
push
test
test
pop
enter
add
sub
push
sti
pop
push
dec
xor
pop
push
sbb
inc
fsubr
mov
add
or
jb
push
ss
mov
push
sbb
stos
push
push
cs
pop
icebp
jns
mov
add
and
fild
(bad)
jp
xchg
js
scas
push
into
out
jne
out
loop
or
jo
in
dec
shl
cmc
daa
clc
sub
xchg
mov
push
ja
add
cmc
scas
jmp
xor
ret
xchg
rcr
(bad)
pop
movs
add
dec
push
xchg
push
and
call
adc
imul
ins
scas
mov
sar
sti
loopne
in
and
push
xchg
push
stc
mov
and
mov
ficomp
xchg
dec
mov
push
sbb
test
jge
(bad)
jno
jl
int
dec
dec
popf
jmp
and
pop
rol
or
jmp
mov
pop
sbb
(bad)
dec
aam
jle
test
sbb
rcl
dec
add
push
pop
fimul
cmp
aaa
push
loop
mov
cmp
shr
pop
and
ds
cmc
test
idiv
jb
inc
add
inc
lahf
inc
inc
cmp
cs
xor
in
loopne
mov
cld
push
in
dec
and
adc
cmp
push
imul
jnp
adc
push
sub
(bad)
xor
cli
(bad)
mov
mov
jg
push
dec
push
inc
push
mov
mov
xor
cmp
sbb
ret
and
mov
pop
aam
int
lock
push
sub
pop
and
inc
add
scas
loope
fisubr
aam
mov
and
xor
push
xchg
inc
jle
pushf
sbb
(bad)
sub
push
int3
icebp
(bad)
cmp
sahf
(bad)
and
addr16
aaa
or
bound
lock
dec
sub
(bad)
into
popa
cwde
sti
ror
cs
ss
test
mov
xor
push
(bad)
idiv
sub
sub
das
aas
clc
cdq
push
add
cdq
fs
iret
jg
sub
pop
imul
jle
fxam
push
or
imul
int3
xor
fidivr
mov
loope
mov
test
daa
repz
aas
mov
js
retf
(bad)
movs
imul
xchg
mov
cmp
push
xlat
mov
mov
mov
jns
scas
xor
lea
in
cs
push
xchg
adc
mov
push
mov
fdivr
sbb
or
xchg
dec
adc
sub
xor
int
out
inc
js
fld
retf
mov
jecxz
repnz
add
js
dec
xchg
scas
sbb
jo
or
enter
xor
mov
repz
pop
pop
rcl
shl
mov
sbb
xchg
loop
and
pop
fmul
div
movs
cld
out
xchg
sar
jno
fisttp
outs
jl
adc
iret
stc
xor
out
aaa
scas
dec
movs
inc
sbb
inc
jge
cmp
lea
stc
inc
and
lds
xor
iret
sub
cmp
or
hlt
dec
mov
outs
sub
ins
lds
lods
call
add
pop
int3
std
leave
sub
jo
rol
test
(bad)
lahf
inc
rcr
sbb
arpl
retf
mov
jl
(bad)
not
xor
ss
(bad)
in
icebp
mov
mov
and
(bad)
ins
sub
ja
lods
and
xchg
retf
sbb
push
enter
fwait
sar
(bad)
fcom
call
jae
push
dec
xlat
jo
cmp
not
xor
sbb
retf
push
xchg
add
ret
stc
and
push
sti
mov
mov
inc
sets
mov
ret
aam
in
out
hlt
xchg
add
mov
loopne
ins
cmp
mov
cmps
mov
mov
mov
jne
sbb
cmp
(bad)
push
retf
dec
mov
sbb
rep
add
sub
fs
push
mov
fisttp
and
and
fs
leave
pop
mov
adc
repz
inc
add
mov
addr16
push
ins
aam
xchg
repnz
pusha
pop
cwde
mov
push
sbb
pop
pop
xchg
mov
push
inc
rcr
xchg
jo
jp
push
sub
dec
scas
int
cmps
push
mov
cmp
add
bound
imul
jecxz
pop
cdq
mov
adc
cmc
js
pop
mov
mov
sub
sub
enter
fadd
push
mov
dec
fimul
scas
aaa
das
add
je
in
fld
in
fild
out
sbb
xor
xchg
xchg
mov
lds
loopne
push
dec
and
sub
out
cdq
sti
jb
inc
sbb
mov
mov
jmp
and
cwde
jge
aaa
mov
repnz
mov
loopne
cmp
stos
push
shl
daa
inc
cmp
cwde
pusha
ds
pop
in
enter
ja
xor
test
mov
scas
and
out
add
cdq
loopne
pop
stos
jmp
xchg
aas
jecxz
rcl
or
(bad)
and
inc
test
push
arpl
aam
das
cmps
jbe
xor
jl
push
push
jge
movs
adc
fwait
(bad)
mov
daa
(bad)
rcl
cmps
(bad)
jle
fcmove
inc
mov
(bad)
int
jl
and
pop
imul
and
shl
add
in
jnp
xchg
sub
ds
(bad)
inc
bound
sub
mov
arpl
fisubr
and
fstp
clc
add
fstp
std
push
mov
mov
scas
inc
xchg
adc
out
push
dec
ret
fisub
loope
das
out
stc
ds
mov
(bad)
loopne
pop
jecxz
stc
cmp
call
inc
out
xbegin
push
loopne
xor
or
int
pusha
xchg
dec
ror
xchg
outs
and
jge
push
int
addr16
push
dec
cdq
outs
outs
icebp
ds
add
xchg
(bad)
sub
push
out
in
pop
fwait
adc
cmp
iret
mov
retf
retf
les
xchg
(bad)
and
aam
inc
push
cmps
mov
and
mov
mov
jmp
xor
mov
loop
mov
sub
daa
push
fild
xor
mov
hlt
push
mov
mov
xchg
daa
mov
ror
mov
xor
jp
cli
dec
int3
je
mov
mov
movs
lahf
push
fild
ret
les
pusha
xlat
dec
mov
mov
adc
psubsw
jecxz
mov
mov
stos
adc
mov
in
adc
cmp
imul
inc
mov
pop
lahf
pop
stos
xor
xlat
adc
and
add
ret
aas
push
jb
loopne
pop
inc
push
in
scas
enter
mov
or
ss
aaa
cmp
sub
ja
cs
jbe
push
inc
jo
rol
rcr
sub
adc
ss
stc
nop
kmovd
or
aam
in
rcl
jae
jmp
or
call
pop
dec
mov
and
out
cmp
dec
movs
sub
cld
in
or
les
and
in
js
imul
sti
cmp
sub
sbb
pushf
(bad)
test
xchg
cld
arpl
stos
ins
mov
lods
call
fisub
test
adc
and
mov
jge
imul
pusha
mov
(bad)
lods
fstp
mov
add
mov
xchg
mov
mov
leave
sti
ins
sub
loop
push
mov
cdq
les
push
and
mov
xlat
sbb
cmps
or
outs
out
dec
shr
mov
lods
mov
icebp
pop
xor
pop
(bad)
lods
and
xchg
mov
test
xchg
(bad)
mov
cli
inc
push
(bad)
popf
mov
cmp
popf
push
in
gs
(bad)
pop
cwde
arpl
shl
xor
push
pop
xchg
dec
gs
mov
sbb
jg
data16
enter
dec
test
xchg
stos
(bad)
jmp
or
xor
push
jno
adc
sbb
gs
cmp
sub
jle
cmp
into
sub
add
push
lock
sbb
cmps
or
mov
mov
test
inc
inc
xor
pop
icebp
dec
and
xchg
xor
inc
shr
cwde
and
lods
jbe
inc
push
(bad)
push
cdq
mov
jmp
out
pushf
int3
mov
lods
(bad)
leave
mov
movs
lahf
std
xchg
loopne
(bad)
out
(bad)
add
dec
push
or
xlat
mov
mov
gs
cmp
pop
and
or
jbe
dec
push
mov
adc
in
stos
and
cmp
dec
jge
das
cmc
dec
push
scas
lock
ins
pushf
push
mov
rcr
pop
sub
sub
pop
mov
(bad)
adc
cmps
lock
gs
scas
mov
dec
push
mov
ret
mov
pop
pop
popf
imul
adc
aas
cs
ret
jno
mov
pop
shr
shr
sub
mov
xchg
out
cmp
lods
xchg
mov
add
pop
int3
lock
test
ja
add
mov
or
(bad)
pop
sbb
test
jbe
lods
(bad)
clc
sahf
xchg
pop
retf
jo
ret
pop
pop
push
push
mov
aad
sub
mov
(bad)
iret
mov
sub
sbb
push
or
pcmpeqb
xchg
test
clc
xor
dec
fisttp
loop
call
rol
jg
in
mov
jno
and
inc
int3
call
mov
push
cmp
cwde
push
out
aam
aas
pextrw
add
jno
inc
je
popa
jmp
repnz
ins
fidiv
pop
pop
pop
dec
fdivp
mov
call
scas
jno
adc
ja
repnz
aas
sbb
cmps
push
xchg
jb
push
cld
mov
fs
mov
add
lds
scas
(bad)
sbb
mov
arpl
or
jo
mov
inc
cmp
call
xchg
sbb
fdiv
das
sub
stos
xor
loop
push
sub
jmp
pop
pop
in
ins
cmp
sbb
and
aas
sub
push
cmp
into
xchg
sti
mov
call
dec
mov
ins
mov
imul
std
or
fstp
cmps
iret
adc
dec
int
and
sub
movs
repz
xchg
adc
push
stos
shl
pop
mov
inc
pusha
dec
fiadd
shl
push
cmps
ror
dec
xor
or
xabort
dec
popf
push
leave
xor
pop
hlt
cmps
int3
icebp
(bad)
(bad)
popa
mov
out
cmp
sub
iret
sbb
in
push
push
shr
(bad)
loop
clc
jp
sbb
stc
pop
pop
mov
pushf
xor
stos
pop
mov
hlt
dec
push
lods
aaa
shl
jo
inc
div
ret
cdq
push
add
dec
mov
ficom
std
int
(bad)
loopne
push
jnp
sbb
xor
lea
in
or
dec
repz
pop
dec
cmp
mov
cs
hlt
je
inc
mov
pop
inc
dec
fild
inc
aaa
xchg
fwait
iret
sub
cmp
jl
arpl
fldenv
data16
sub
in
cld
retf
xchg
push
aas
sbb
jecxz
push
in
xchg
and
or
addr16
loopne
retf
ins
repz
nop
mov
xor
pop
mul
pop
push
pop
ret
aas
push
out
jo
add
add
pusha
sub
das
aas
sub
sub
jg
mov
cld
mov
add
mov
cmp
shl
or
and
repnz
fisttp
xchg
jecxz
test
jmp
(bad)
icebp
sahf
aaa
mov
jle
cmc
sahf
pop
out
cmp
pop
xchg
je
mov
or
pop
mov
xchg
jmp
pusha
test
cwde
jbe
jmp
ds
fmul
xchg
mov
dec
jmp
xor
fist
pop
fild
cwde
adc
jmp
out
adc
push
hlt
pusha
pop
xchg
imul
mov
mov
or
push
sub
sbb
ins
inc
rcl
jne
xor
addr16
add
sbb
jbe
fistp
push
cmp
popa
out
stos
pop
push
aas
dec
clc
dec
fsub
sbb
div
mov
and
pop
sub
adc
fisttp
aaa
sub
iret
ret
mov
retf
sar
fwait
add
scas
pop
ins
jns
lds
pop
js
xchg
std
in
lods
out
fld
data16
in
push
fsub
sbb
je
xchg
popf
sti
cld
sub
xor
and
xor
pop
push
cmp
xchg
and
xchg
mov
jno
jae
aas
std
cmps
mov
mov
loope
mov
sub
inc
stos
adc
push
mov
mov
es
push
aaa
mov
push
or
push
in
popf
outs
fcom
push
in
call
sbb
or
adc
imul
jmp
jne
adc
out
push
clc
xchg
and
ins
dec
(bad)
xchg
repnz
dec
into
pop
std
fisttp
leave
xchg
jb
enter
imul
push
sti
ss
pop
outs
aam
fs
xchg
cmc
loop
pop
fwait
(bad)
bound
cmp
xchg
fwait
test
pop
fild
adc
adc
fidivr
out
inc
inc
iret
lea
clc
cmp
jne
cld
dec
jbe
push
jle
inc
shl
pop
cmp
pop
int3
pop
or
fild
mov
jne
cmp
xchg
pop
addr16
test
das
cmp
mov
sbb
retf
inc
sub
xor
mov
jae
in
loope
add
(bad)
add
adc
sahf
inc
(bad)
pop
jo
pop
inc
push
and
sbb
loopne
div
es
gs
aad
cmp
int
test
rcl
cmps
loope
enter
dec
pop
pop
(bad)
out
fiadd
scas
adc
xchg
sbb
sbb
fidiv
xor
out
lea
lea
outs
pop
jg
loope
faddp
in
test
pop
pandn
adc
clc
inc
mov
cmp
pop
cmps
mov
repz
inc
sbb
ror
loopne
jmp
mov
inc
fwait
or
dec
or
xor
ret
iret
cmps
sub
cli
and
or
stc
jmp
jb
and
sar
push
fs
fmul
dec
lods
dec
loop
lea
push
mov
je
shufps
aas
jo
mov
call
jmp
sbb
jae
cmp
mov
out
or
loopne
sbb
loope
xchg
(bad)
icebp
add
int
lea
or
sub
inc
movs
jmp
jmp
ret
pop
dec
jle
xor
mov
ficom
dec
xlat
and
aaa
ficom
jb
cmp
sbb
mov
push
sub
enter
ds
fwait
mov
or
cmp
mov
mov
lock
aam
mov
cmp
sti
ja
push
xlat
push
dec
sub
mov
inc
stos
enter
inc
push
xchg
retf
sahf
cmp
shr
sbb
or
dec
lods
addr16
jb
fbld
mov
outs
xchg
stos
sti
cmps
sub
jmp
jmp
mov
iret
mov
enter
xor
add
mov
jne
addr16
mov
aas
mov
mov
mov
call
call
mov
mul
xor
lea
ret
pop
or
movs
imul
mov
iret
mov
nop
imul
lods
sti
jae
jno
dec
ja
add
xor
dec
cmp
xchg
xchg
repnz
inc
push
mov
int3
retf
daa
lahf
mov
imul
into
loop
(bad)
pop
inc
sub
mov
xchg
pop
stos
xchg
fcomp
pushf
pop
mov
jb
mov
not
push
inc
icebp
add
adc
imul
adc
fcomp
dec
loopne
xor
inc
(bad)
or
imul
xor
and
and
jecxz
mov
shr
cmc
lea
inc
jo
lock
addr16
mov
mov
arpl
test
es
lods
aaa
sbb
inc
mov
stc
adc
mov
mov
dec
or
push
sub
pop
(bad)
js
(bad)
jne
jp
sub
cmp
inc
pusha
or
cs
mov
sub
and
loope
jge
dec
(bad)
gs
and
xor
mov
pop
add
retf
pop
mov
mov
or
(bad)
push
loopne
call
ja
and
mov
mov
jmp
shr
push
or
shl
fidiv
push
and
jge
cli
in
outs
shl
xor
mov
cmp
pusha
(bad)
pop
mov
ret
dec
scas
test
adc
or
(bad)
xor
push
loopne
and
and
pop
sahf
jmp
cmps
sub
sbb
mov
mov
pop
mov
outs
xchg
sub
push
cmps
pop
sbb
xchg
pop
mov
es
jns
jno
lea
je
cdq
adc
in
sub
xor
call
(bad)
lock
pop
xchg
adc
test
and
xor
(bad)
ins
(bad)
into
sub
add
xor
push
mov
sub
and
adc
push
or
dec
shr
dec
jns
ds
dec
pop
sbb
sub
jnp
mov
and
repz
arpl
lds
xchg
and
scas
in
rcr
jo
shr
jg
scas
jbe
cmps
int3
and
jp
daa
aam
cs
and
xchg
push
retf
mov
call
inc
mov
ret
nop
push
aaa
pop
push
push
jmp
ja
cwde
sub
stc
fs
jbe
pop
ins
xchg
mov
lea
xor
inc
inc
bound
or
sbb
xchg
inc
jb
xor
push
movs
cdq
push
dec
or
shl
popa
mov
or
jae
cwde
aaa
cmc
and
and
add
xor
mov
pushf
and
and
imul
fwait
dec
shl
scas
cmp
xor
pmulhw
cmc
test
and
and
or
mov
lods
fwait
and
js
jecxz
jae
dec
jl
rcr
cmp
(bad)
out
push
pop
stc
loopne
xor
les
mov
sub
push
call
sbb
adc
addr16
int3
int
mov
pop
cmp
mov
test
ja
xchg
ins
xlat
pop
sbb
jmp
loope
movs
or
idiv
pop
cmc
popf
inc
dec
ror
jnp
xor
test
mov
cmps
dec
aas
mov
out
jge
clc
scas
mov
scas
push
call
lahf
add
mov
stos
push
test
ds
jbe
sub
retf
add
dec
mov
jmp
lds
jbe
push
cwde
add
test
fcomp
enter
ja
fwait
mov
jo
push
mov
sbb
scas
cmp
push
inc
loope
test
mov
aas
popf
jo
dec
push
sbb
sbb
ss
out
add
icebp
push
inc
aaa
movs
inc
mov
das
ret
rol
cwde
mov
les
cmps
aam
ins
xchg
inc
or
dec
int
and
(bad)
cmps
call
rcr
out
(bad)
jge
sti
jecxz
add
mov
stc
fsubrp
push
pop
push
les
adc
dec
jo
inc
(bad)
push
lods
popa
xlat
das
pop
lods
push
shl
and
sbb
sqrtps
fcomp
jmp
mov
gs
cmc
stos
lahf
js
mov
dec
inc
(bad)
mov
ds
(bad)
enter
sar
sub
fidivr
pop
clc
bound
(bad)
fidiv
push
icebp
pop
pop
mov
xor
mov
jnp
aaa
jp
inc
xor
aaa
sbb
xchg
jecxz
and
sbb
mov
xchg
push
ja
data16
fbstp
mov
cmp
int3
cmp
dec
mov
je
in
add
cmps
mov
cld
loop
in
out
xchg
shl
pop
(bad)
sub
mov
test
jp
loop
out
loopne
adc
lock
cmp
pop
mov
jp
jle
cmp
cmp
inc
out
retf
shl
clc
lea
mov
mov
jmp
out
pop
or
pop
aaa
call
adc
jge
aam
(bad)
xchg
test
push
inc
sar
sub
cmp
in
gs
movs
fst
out
add
call
adc
nop
sbb
push
jb
mov
nop
jl
push
sar
fnstsw
adc
sub
ins
jnp
xor
leave
fisubr
adc
inc
push
pop
inc
mov
xor
pop
dec
sbb
fld
leave
push
inc
inc
add
cli
push
nop
out
sub
aad
jns
loopne
add
lods
aam
sbb
ins
das
push
jecxz
pop
imul
add
inc
push
push
out
xchg
mov
mov
cmp
adc
sbb
cmps
adc
imul
inc
aam
cmps
jmp
int3
jb
xchg
jne
mov
inc
add
repnz
gs
mov
pop
retf
in
icebp
out
or
dec
ret
out
icebp
jmp
inc
out
mov
or
or
dec
stos
push
call
popa
stc
lea
push
fst
adc
jle
mov
adc
pop
cli
or
stos
fistp
pop
shl
push
xor
ja
jo
shr
fistp
outs
rcr
sub
or
sti
lock
cmp
xchg
push
mov
push
or
fld
shl
xchg
xchg
or
add
adc
stos
adc
mov
out
push
add
ss
cmp
push
xchg
out
neg
ror
adc
int3
jno
xor
and
mov
push
jp
cld
jle
pop
inc
mov
dec
sub
bound
(bad)
ret
mov
pop
pop
xchg
dec
inc
mov
push
ins
xor
std
push
adc
test
dec
popa
push
dec
call
and
fs
xchg
cmps
mov
cmp
fwait
aad
mov
adc
shld
test
aas
xor
add
sbb
imul
adc
sbb
sti
mov
add
aas
nop
cmp
xchg
daa
lahf
repnz
in
inc
mov
out
mov
inc
xor
int
cmp
test
in
addr16
and
pusha
or
adc
mov
int
(bad)
cli
add
xlat
popa
mov
and
mov
enter
scas
enter
or
mov
xchg
(bad)
cld
in
adc
mov
daa
je
or
push
mov
and
sbb
and
push
jmp
nop
movs
rol
(bad)
or
mov
std
dec
psubb
ins
add
ret
xchg
xor
sub
push
mov
sbb
add
fild
out
cmp
add
add
xor
movs
mov
pop
jae
fmul
or
movs
bound
add
ret
xor
(bad)
addr16
sub
jne
jecxz
test
or
in
and
sub
add
or
movs
adc
es
imul
mov
inc
data16
and
bound
xor
and
movs
retf
call
popa
mov
push
hlt
addr16
cmc
push
jae
imul
sub
add
xor
out
sbb
cwde
ror
in
inc
outs
ret
xchg
push
mov
fbstp
xor
cmps
and
or
mov
mov
outs
out
and
out
mov
fidivr
adc
jno
fimul
and
pop
pop
pop
fdivr
aam
repz
repz
jae
mov
movs
mov
std
xchg
cwde
jno
fsin
cmp
pop
xor
push
mov
out
scas
pop
pop
js
pop
xchg
sub
ror
or
cs
xor
add
retf
xor
test
popf
dec
jbe
xor
or
into
fdiv
sub
sub
int3
and
cmp
idiv
push
retf
out
cwde
sub
xchg
pop
shr
cmps
data16
pop
add
imul
add
lods
sbb
jns
add
mov
push
sbb
outs
stc
out
outs
inc
and
jae
popa
dec
sub
dec
sbb
push
push
stc
pop
retf
sbb
popa
maxps
or
mov
pop
pop
sti
dec
jne
xchg
scas
sub
or
ret
icebp
sub
cmps
iret
push
xchg
lahf
adc
int
ss
cwde
mov
push
js
jmp
mov
aas
adc
idiv
push
loop
mov
or
xor
popf
sub
add
js
repnz
jmp
xchg
popa
fld
sub
mov
clc
pop
lods
or
xchg
xchg
aas
inc
mov
(bad)
call
push
add
inc
es
idiv
jmp
out
cdq
xchg
inc
xchg
adc
imul
fucomi
cs
xchg
fmul
add
pop
mov
jmp
cmp
div
cmps
int3
shl
xlat
pop
cmc
(bad)
cli
push
je
je
jp
jmp
mov
pop
shl
bound
popf
repz
dec
iret
in
rcl
gs
int
mov
xor
aam
out
mov
jns
test
adc
clc
pop
gs
fmul
in
mov
xor
jae
std
jmp
test
rcr
xchg
fucom
pusha
cmps
add
movs
int
push
std
pushf
js
adc
cmp
inc
lds
mov
(bad)
nop
mov
jmp
sar
aaa
adc
add
leave
test
retf
mov
sub
push
retf
test
imul
dec
xor
das
mov
jl
xchg
push
xchg
rcr
ret
outs
out
lock
push
mov
pop
movs
mov
ret
in
std
stos
jmp
std
cmc
push
js
push
jge
add
or
xchg
sbb
add
or
cmp
or
loopne
fsubr
jno
out
in
(bad)
dec
inc
fstp
xchg
pop
imul
sbb
out
nop
loope
out
repnz
mov
push
adc
mov
in
xor
pop
xor
adc
cmp
mov
pop
pop
and
or
popa
sbb
hlt
call
sbb
fwait
jo
mov
or
les
mov
push
fnstsw
mov
ja
push
pop
dec
gs
in
(bad)
cmp
mov
fabs
mov
mov
mov
aas
call
int
aad
jmp
scas
daa
xchg
xlat
stc
jo
mov
xor
je
hlt
jle
mov
bound
ds
pop
cmc
les
push
js
lds
ret
mov
jl
jae
aam
repnz
imul
mov
rcr
sbb
movs
shl
jb
int
sbb
je
adc
std
mov
out
stos
gs
test
and
xchg
es
xor
outs
imul
adc
adc
push
mov
movs
mov
lock
cmp
sbb
imul
cs
outs
xchg
push
mov
lods
mov
sub
xchg
ficomp
push
(bad)
in
jnp
iret
or
and
sub
xchg
sbb
mov
or
popa
pop
adc
dec
and
ror
xchg
inc
test
jae
adc
idiv
popf
jbe
push
das
popf
pop
test
lds
ins
jmp
xchg
adc
mov
mov
mov
push
xor
jp
mov
mov
ret
xchg
jmp
xchg
lock
out
add
mov
jnp
cmp
js
stc
(bad)
mov
jge
test
push
daa
xchg
mov
ds
adc
jg
push
scas
daa
mov
stos
test
mov
push
imul
dec
addr16
push
xor
adc
sub
retf
mov
and
jg
dec
and
cwde
leave
sub
sbb
or
jne
xor
loopne
jecxz
xor
test
xor
in
push
add
ficom
in
cs
test
adc
inc
push
cli
push
cld
xchg
dec
sub
pop
inc
cs
js
rcl
sub
add
or
daa
mov
jmp
cs
xor
je
mov
push
push
out
shr
mov
mov
outs
adc
lods
call
jns
push
leave
xlat
or
loope
das
cmps
sbb
xchg
mov
mov
mov
ins
mov
outs
repz
hlt
ds
call
adc
mov
repnz
xor
push
dec
add
scas
pop
or
push
rol
(bad)
cmps
js
out
sub
fisttp
js
sbb
lar
shr
add
push
jne
imul
xchg
ret
in
cwde
test
push
mov
out
test
call
xchg
mov
push
in
cmp
xchg
shl
jp
fucomi
mov
push
sub
push
mov
xor
sti
jb
(bad)
mov
ror
jmp
mov
cmp
pop
dec
call
lds
mov
cwde
int
sti
icebp
jg
mov
mov
shl
push
enter
mov
cmp
push
jg
jg
push
test
pop
add
jle
into
inc
or
or
arpl
mov
pop
xchg
mov
xchg
and
mov
(bad)
mov
mov
ret
mov
sbb
mov
out
jmp
ret
xchg
ins
(bad)
mov
adc
mov
push
pop
sub
fisttp
adc
mov
sub
sub
aaa
cmps
push
enter
or
int3
inc
inc
cmp
mov
iret
mov
xchg
ret
push
mov
cmp
mov
pop
vandnpd
jmp
push
test
adc
fcmove
fmul
xor
pop
cdq
mov
adc
sbb
xchg
jmp
pushw
dec
pop
pop
jae
inc
add
outs
daa
mov
or
enter
cmp
cmps
jnp
jnp
cwde
shl
(bad)
mov
mov
jp
fistp
xor
mov
icebp
xchg
pop
mov
outs
mov
xchg
sti
mov
mov
arpl
pop
mov
push
cld
mov
mov
out
push
in
repz
fbld
mov
lods
add
fstp
mov
dec
int
add
call
shr
hlt
loopne
xchg
test
sub
adc
jl
(bad)
sbb
mov
lea
pop
in
cmps
test
sub
push
shl
es
xor
nop
mov
pop
(bad)
cwde
fild
push
out
aaa
xor
jae
ja
bound
pusha
sahf
and
xchg
jl
or
test
scas
xchg
mov
out
cmp
dec
sar
xchg
cli
mov
xor
stc
imul
popf
xchg
sub
inc
test
lds
inc
inc
sub
fisub
and
mov
jo
mov
loope
(bad)
mov
xor
rcr
or
les
jmp
leave
bound
test
sub
fdivr
sub
call
(bad)
and
pop
in
test
jae
push
or
xchg
add
push
jle
push
mov
rcr
lahf
loopne
jle
inc
cdq
jb
adc
push
sub
inc
pop
mov
inc
das
loope
adc
xlat
push
cli
popa
fwait
cmp
in
xchg
inc
das
sahf
add
lea
jns
dec
test
jno
int3
fnstenv
sbb
shr
push
sub
fsub
sub
add
pop
mov
aas
xlat
mov
(bad)
pop
mov
jl
sahf
mov
enter
in
les
xor
jmp
xchg
aad
jnp
mov
addr16
shr
sti
or
stc
fs
mov
push
inc
ffreep
adc
lods
fimul
pop
repnz
mov
in
(bad)
enter
(bad)
loope
xchg
add
cmp
(bad)
rol
jp
mov
int3
ss
push
js
(bad)
loope
mov
cmp
out
ins
push
push
jge
retf
lea
idiv
dec
jmp
jle
test
pop
cmp
les
je
mov
loope
fwait
mov
inc
scas
jno
mov
sbb
loop
icebp
sub
xchg
sahf
das
out
aad
inc
dec
mov
sub
gs
imul
mov
add
(bad)
cli
call
ret
pushf
hlt
adc
jo
push
jb
add
mov
cmp
sub
out
inc
push
data16
push
arpl
inc
mov
or
lock
add
pushf
shl
mov
shr
sbb
sbb
adc
cld
mov
jns
aam
ss
addr16
xchg
sbb
mov
out
and
daa
and
daa
jp
jge
loopne
jmp
adc
sub
gs
mov
scas
lds
mov
(bad)
jl
push
push
jb
adc
fneni(8087
dec
or
out
sbb
xchg
mov
ds
sbb
into
repnz
in
or
cmp
inc
stos
mov
clc
sub
into
dec
movs
lahf
pop
cdq
scas
pop
fdivr
inc
out
sahf
call
xchg
fstp
mov
out
dec
inc
cmp
push
lock
je
cmp
mov
daa
out
lods
inc
mov
call
mov
cld
or
cli
rcr
cmps
dec
ss
in
fwait
cmp
mov
rol
test
xor
shl
push
sub
retf
xchg
lea
mov
push
mov
inc
arpl
lahf
fdivr
lods
mov
or
sub
stos
adc
xor
cdq
xchg
push
jecxz
scas
lea
dec
pop
aas
xchg
and
sub
sbb
and
cmp
das
in
inc
dec
enter
div
sub
mov
sbb
cmps
dec
sub
mov
push
in
adc
(bad)
aam
ror
pop
inc
rcr
fdiv
mov
sbb
pop
sbb
push
push
cmp
retf
pop
mov
and
fs
mov
ror
dec
add
mov
std
push
out
mov
retf
sbb
iret
ror
mov
mov
test
or
cmps
mov
xchg
sub
pushf
int3
outs
call
xlat
fidivr
cmp
dec
and
(bad)
or
loop
push
ffreep
jo
arpl
hlt
scas
das
nop
jns
pop
movs
mov
fwait
mov
(bad)
jo
or
jb
addr16
inc
loope
inc
inc
pop
xchg
pop
push
mov
pop
or
mov
inc
fild
imul
push
mov
loopne
xchg
push
cmp
aad
sub
movs
inc
fcomip
sub
loop
dec
jae
ret
lahf
(bad)
dec
jl
and
pop
cmp
popa
inc
mov
xor
icebp
xor
dec
adc
ins
ret
ja
jl
in
pop
mov
call
enter
in
inc
or
iret
(bad)
(bad)
retf
mov
rcl
fdiv
shl
xor
xchg
add
popa
mov
and
fisubr
lods
push
aaa
jmp
lods
(bad)
xor
xchg
xor
pop
movs
pop
div
aaa
ror
lods
lock
cmp
(bad)
xchg
cmp
xchg
js
dec
adc
mov
aad
adc
xchg
or
sbb
cmp
dec
xchg
ins
jnp
mov
nop
pop
jg
inc
fcomp
mov
iret
mov
inc
pushf
leave
and
mov
ror
or
pop
or
push
cmp
stc
dec
outs
or
add
movs
lods
daa
jmp
mul
sahf
fld
mov
or
mov
sub
(bad)
pop
in
pop
cmps
inc
or
mov
mov
ins
movs
cmc
fwait
mov
nop
ss
xchg
aaa
cmp
add
cs
xor
in
or
fild
fsubr
xor
adc
lds
jns
mov
pop
lods
mov
cmp
xchg
add
dec
mov
push
sub
cmp
dec
mov
sub
aaa
xor
push
jb
out
stos
out
je
adc
xchg
dec
lea
scas
jecxz
jbe
test
in
jmp
push
sbb
dec
fs
jo
mov
lds
loopne
ret
popf
push
and
inc
push
xor
mov
sbb
pop
jmp
outs
pop
mov
fisttp
xor
inc
loope
in
jno
pop
cmc
and
cmp
inc
imul
int
mov
mov
ins
dec
repnz
jns
pop
call
dec
das
out
das
sbb
in
in
fxch
mov
std
or
mov
aad
mov
rol
mov
sub
aam
loop
daa
in
stos
adc
mov
sahf
call
push
lock
mov
inc
inc
sbb
jo
mov
mov
repnz
xchg
cmp
push
inc
es
push
inc
arpl
movs
iret
pop
les
(bad)
outs
push
push
mov
sbb
aaa
adc
adc
cmp
adc
add
(bad)
fdiv
sbb
dec
(bad)
retf
mov
arpl
loope
lahf
and
cli
add
adc
mov
mov
test
inc
push
jae
mov
xor
add
sub
or
add
mov
xor
dec
sbb
cmp
lods
in
aam
and
sub
int
pop
pop
xor
sbb
ins
mov
mov
outs
push
nop
fimul
jmp
xor
ss
and
jmp
das
push
jne
call
xchg
jns
and
sbb
jp
jnp
mov
into
or
mov
and
xchg
xor
sbb
aam
xchg
mov
inc
repz
lahf
imul
add
aas
pop
push
mov
adc
and
mov
cld
mov
cmp
xchg
lahf
mov
cmp
jbe
stos
cmps
fisttp
out
adc
pop
cmp
sbb
rcl
cmp
inc
outs
sar
(bad)
iret
ins
sub
cs
dec
div
pop
cwde
pop
imul
fwait
or
scas
pop
adc
lahf
aas
outs
test
fsubrp
cmps
stos
mov
out
sbb
(bad)
adc
mov
mov
push
aas
fisub
adc
jl
out
test
leave
daa
retf
lahf
mov
xlat
jp
and
mov
rcl
sbb
(bad)
sbb
sub
push
scas
mov
dec
adc
out
adc
xor
inc
clc
ins
adc
add
push
sbb
fdivr
sub
push
gs
movs
pop
xor
fmul
lea
pop
dec
imul
test
aad
xor
push
mov
mov
sbb
mov
dec
pop
xor
repz
call
cmp
(bad)
push
push
jnp
or
cmps
int
mov
rol
mov
and
mov
mov
push
fdivr
ret
bound
imul
shr
xor
xlat
out
inc
in
jae
pop
pop
and
xor
pushf
scas
mov
fisttp
push
int3
xor
neg
popf
mov
imul
push
push
adc
adc
scas
jnp
jl
adc
scas
out
not
push
xchg
std
push
(bad)
icebp
mov
inc
mov
fdiv
inc
xor
ins
clc
outs
cmp
jmp
mov
cmc
and
mov
retf
js
push
or
or
cwde
(bad)
in
lods
cmp
shl
pop
dec
sbb
mov
stos
pusha
push
xchg
loope
jge
stc
mov
dec
lahf
xlat
jge
test
mov
pop
sbb
sbb
das
or
push
sar
mov
(bad)
xchg
fsub
mov
in
je
adc
aaa
xor
loope
std
stos
in
outs
(bad)
dec
mov
adc
inc
mov
aad
cmc
xchg
int3
gs
aam
xchg
sub
int3
jnp
or
retf
add
icebp
and
daa
cwde
fistp
div
xchg
cmps
mov
pop
or
scas
mov
xchg
sbb
dec
ret
jl
dec
sbb
add
dec
pushf
push
pop
movs
jge
cmp
fstp
popf
jle
sbb
pushf
fsubp
mov
and
inc
xor
(bad)
jbe
call
push
add
enter
mov
dec
in
and
test
jo
and
fimul
es
js
ret
push
enter
mov
sbb
inc
cmp
cmp
add
xor
sub
inc
adc
adc
repz
shr
movs
test
push
mov
jl
loop
mov
in
dec
mov
lods
ss
xor
mov
jle
sub
je
mov
mov
mov
dec
movs
fs
shr
jae
adc
xchg
fnstsw
fisub
sbb
jmp
ficom
fsub
test
imul
or
push
shl
loope
dec
dec
dec
mov
aam
mov
lds
mov
xchg
add
aas
enter
sahf
neg
jl
loopne
xchg
dec
pop
mov
jo
cmp
(bad)
daa
sub
cmp
movlps
push
pop
int3
sbb
gs
add
rcr
mov
pop
jnp
je
and
sbb
mov
jno
les
int3
loopne
jns
hlt
add
cmps
(bad)
shr
scas
es
call
xchg
stc
xchg
push
xor
ja
movs
inc
jbe
cs
inc
test
fwait
retf
pusha
(bad)
dec
fisttp
imul
fild
les
xchg
pushf
xchg
push
outs
dec
push
mov
pop
retf
pop
push
xchg
cmp
clc
mov
xchg
pop
pop
mov
arpl
mov
pop
iret
dec
retf
mov
rol
adc
or
fdivr
pop
nop
sar
xchg
ret
shl
outs
shl
mov
push
in
call
and
arpl
and
imul
test
mov
ins
fsub
push
jbe
jbe
pop
xchg
mov
inc
jmp
inc
clc
add
cld
test
sti
pop
push
icebp
jmp
fchs
dec
pop
mov
mov
std
mov
leave
adc
xchg
xor
xchg
icebp
xor
nop
out
sub
xor
stos
out
xor
in
ds
adc
xchg
jnp
inc
fwait
sub
shr
or
loopne
pop
mov
xor
test
pop
loop
pop
push
ja
ror
jge
adc
mov
cmp
aas
mov
adc
or
test
xchg
push
pop
add
mov
(bad)
out
dec
mov
icebp
cmp
push
gs
call
sbb
mov
cmp
dec
mov
or
jge
jo
dec
aam
rcl
popf
movs
cmp
popa
mov
div
test
xchg
out
out
outs
adc
sub
or
cmps
shl
clc
pop
sbb
lock
push
call
add
lahf
es
sub
js
jp
mov
psubb
push
pop
loop
gs
rcr
pop
sbb
mov
sub
int
cmps
sbb
sub
lahf
jbe
push
push
leave
lea
loop
iret
retf
mov
jl
mov
cmps
bnd
into
xor
leave
(bad)
sbb
sbb
ret
pmulhw
repnz
mov
aam
or
leave
adc
sbb
es
sub
adc
sub
test
(bad)
xchg
add
int3
mov
mov
sbb
fsub
mov
dec
xchg
adc
outs
sbb
(bad)
inc
jne
shl
mov
inc
repz
fadd
inc
inc
and
or
jo
add
cmp
rcl
jge
pusha
mov
pop
xor
xchg
mov
in
jp
not
icebp
mov
and
lods
das
jecxz
scas
mov
jle
call
movs
imul
or
(bad)
jmp
ror
lock
les
imul
repz
inc
push
adc
std
adc
das
cmp
cmp
std
imul
pop
movs
jg
stos
pushf
sub
aad
push
into
test
or
jl
mov
sub
push
scas
movs
call
shl
adc
ja
(bad)
stos
sbb
jns
adc
je
stos
out
jecxz
jg
jbe
cmps
mov
push
cmps
pop
jnp
loopne
ja
and
sar
cmp
jae
ins
mov
sub
test
xor
outs
push
sahf
sbb
xchg
push
mov
inc
popa
das
ins
sub
inc
mov
pop
(bad)
movs
dec
mov
test
ds
push
je
shr
jle
test
retf
inc
pop
inc
shl
xor
or
js
pop
push
aam
jnp
xchg
xchg
clc
xor
cld
jno
cmc
adc
jp
cs
in
cmp
bound
dec
clc
leave
push
mov
xlat
(bad)
addr16
pop
pop
es
mov
loopne
xchg
xlat
adc
sbb
call
push
rol
cwde
pop
xchg
aad
pop
ins
mov
jle
(bad)
mov
in
mov
adc
movs
jnp
test
lea
xchg
sub
(bad)
icebp
outs
sar
retf
and
push
dec
gs
add
cld
and
mov
add
ins
push
or
mov
cmp
cmc
adc
add
loopne
add
scas
fbld
outs
and
dec
nop
xchg
lock
jnp
xchg
adc
add
stc
out
ds
inc
xchg
mov
mov
xor
push
and
(bad)
mov
jecxz
jnp
shl
jo
jnp
dec
pop
cs
dec
out
jl
mov
scas
cmp
sbb
out
scas
stc
cmp
sbb
adc
movs
rcr
mov
dec
outs
arpl
jmp
dec
push
sub
pusha
cmc
into
dec
mov
mov
dec
jg
clc
cld
in
pop
in
lods
and
aaa
sub
pushf
xor
inc
jae
jne
sbb
(bad)
imul
pop
repnz
mov
xchg
adc
sbb
loopne
fstp
cli
fwait
dec
adc
cli
add
sub
fs
int3
bound
jge
mov
sub
and
mov
iret
daa
mov
in
jno
mov
jno
ins
ds
mov
add
ja
cmp
inc
(bad)
sbb
and
out
xabort
adc
and
mov
fsubr
dec
daa
stos
loop
inc
xorps
(bad)
push
or
dec
push
sub
inc
div
out
add
xor
pop
lods
lods
pop
xchg
mov
popf
fild
dec
dec
push
or
jecxz
mov
and
adc
xor
leave
stos
arpl
stos
test
adc
pop
cmc
mov
mov
test
fsubr
fs
inc
ins
cdq
clc
out
jns
out
mov
rcl
mov
and
mov
sub
xor
out
and
jno
add
and
add
test
xchg
jo
popa
xchg
popa
inc
jbe
push
pushf
mov
rol
in
pop
sbb
mov
mov
js
mov
(bad)
fcmovbe
sbb
push
arpl
adc
push
call
in
pop
xor
xor
daa
icebp
out
inc
push
push
jae
jecxz
test
cs
fidiv
cmp
mov
jno
fs
xor
ss
(bad)
xlat
mov
or
clc
add
adc
pop
call
mov
rcr
enter
stos
sbb
add
jg
mov
jmp
jl
in
test
ficom
pop
push
clc
dec
mov
sbb
mov
fwait
mov
mov
pushf
(bad)
loope
popa
in
push
sbb
pusha
loop
jae
mov
mov
fwait
ins
push
leave
(bad)
aam
dec
cmps
repnz
movs
popa
and
jmp
nop
cmp
test
sar
repnz
jbe
or
js
jecxz
sub
add
pushf
jae
into
mov
add
mov
call
add
xchg
pop
and
mov
retf
inc
xor
jmp
sahf
fcomp
mov
adc
les
jmp
xchg
nop
pop
loope
ins
xlat
ins
sub
mov
mov
icebp
div
out
sbb
addr16
loope
mov
fdivr
outs
fistp
in
mov
bnd
mov
mov
inc
stos
push
imul
cmp
repz
push
sbb
cmp
mov
out
in
hlt
add
pop
xchg
retf
mov
xchg
bound
hlt
cmpps
aad
xchg
es
sbb
outs
dec
push
js
fild
scas
mov
and
nop
and
mov
mov
sub
scas
fcos
call
jp
ins
in
push
mov
cdq
push
sub
jg
mov
jmp
mov
stos
das
imul
iret
adc
jl
rol
ins
ret
adc
jnp
(bad)
repz
adc
clc
cmps
pushf
jnp
fcom
fiadd
fmul
mov
jmp
mov
mov
fmul
sub
js
ins
outs
jp
cmp
or
lea
cs
sub
repz
cs
jmp
cmp
js
leave
cwde
sbb
out
pop
std
repz
sar
call
clc
mov
jecxz
ficom
pop
leave
add
push
push
and
fldenv
push
popa
inc
xor
or
mov
ds
pop
cs
xlat
inc
sub
and
cwde
cmp
inc
sar
xchg
pop
mov
jb
xlat
out
dec
inc
mov
xchg
div
cs
sahf
inc
ja
mov
sahf
fld
inc
add
leave
push
iret
xchg
mov
pusha
inc
jno
imul
mov
repz
or
or
retf
out
lea
sbb
or
(bad)
mov
dec
sbb
out
add
xor
movs
pop
adc
sbb
mov
fild
pop
sbb
cmp
dec
test
mov
sahf
sahf
fdivr
(bad)
es
pop
mov
sub
cmp
cld
mov
add
mov
pop
(bad)
xor
test
cli
mov
adc
bound
xchg
js
test
int
pop
std
mov
lock
jno
adc
ficomp
pop
fnstsw
jno
jmp
lods
sbb
xchg
retf
dec
gs
call
add
pop
mov
ret
icebp
shl
aam
jo
mov
jmp
push
jbe
inc
push
retf
stos
jge
int
sar
rol
inc
xor
jle
jno
fcom
cwde
test
mov
leave
loopne
or
and
(bad)
pop
push
cli
in
xor
cmps
mov
retf
adc
leave
push
addr16
mov
push
jmp
mov
cmp
push
dec
push
or
push
push
dec
xlat
ins
push
hlt
cwde
inc
ret
loopne
inc
ins
pop
xor
ds
fstp
inc
fwait
mov
sbb
cdq
ror
mov
xchg
in
mov
les
out
out
shr
inc
in
xchg
mov
cmps
std
inc
pop
sbb
je
stc
leave
pop
test
mov
stos
mov
mov
cli
es
mov
je
call
inc
leave
push
xor
fcom
mov
pushf
cmp
(bad)
jbe
xchg
arpl
dec
jno
and
iret
inc
icebp
adc
push
adc
shl
std
xchg
xor
retf
sub
rol
mov
call
out
jo
fcmovbe
dec
xchg
jmp
mov
jae
out
jns
mov
add
sub
out
scas
mov
lock
mov
(bad)
in
jle
cmp
mov
sub
mov
pop
sahf
ins
add
pop
and
inc
ret
outs
xor
xchg
xor
push
ins
jb
and
cmps
jnp
mov
into
mov
jb
test
mov
dec
std
sub
pop
leave
jp
(bad)
in
ret
or
add
fldenv
mov
jmp
das
mov
inc
nop
dec
mov
ja
push
scas
mov
imul
ret
in
mov
stc
jno
xor
push
xchg
mov
rep
cmp
jmp
cmp
sub
fstp
push
rcr
sub
adc
jns
bnd
idiv
pop
hlt
in
pop
xor
bound
mov
jbe
xor
retf
call
mov
xchg
add
dec
adc
mov
sbb
mov
loope
sub
mov
(bad)
xchg
mov
test
out
jb
or
out
imul
and
ja
loope
arpl
sahf
mov
shr
ret
out
pop
add
cli
ficomp
mov
test
cs
push
(bad)
inc
lea
(bad)
ds
call
dec
mov
ja
sahf
pusha
mov
xor
out
add
add
xchg
cmp
or
mov
pop
hlt
dec
js
ds
ins
sub
inc
cdq
sub
mov
inc
sbb
cli
fistp
cld
test
mov
push
sub
mov
(bad)
repz
push
dec
stos
cmp
jl
scas
loop
jnp
dec
inc
sbb
popa
int
out
push
cmc
xor
out
inc
aaa
jmp
cmp
add
into
xlat
push
in
sbb
cmp
pushf
lods
les
scas
xor
bound
xchg
shl
sbb
icebp
and
mov
push
push
loopne
adc
leave
stos
jg
rcr
add
and
mov
mov
and
mov
cmc
mov
in
mov
mov
fst
cmps
mov
fs
mov
rcr
cs
push
xor
sbb
mov
mov
mov
mov
add
inc
push
jmp
cmp
pop
fild
cmp
cli
or
jecxz
ja
push
jmp
call
leave
fwait
adc
repnz
mov
retf
cmp
int3
into
sub
or
shr
ror
imul
add
adc
cwde
retf
movs
jmp
sub
jmp
add
sub
mov
loopne
movs
ja
js
es
xor
mov
sbb
jbe
mov
and
add
adc
mov
sti
icebp
xchg
leave
mov
mov
and
xlat
stos
lds
xor
sbb
pushf
repz
pop
push
jmp
inc
pop
mov
xor
mov
gs
mov
cmps
lahf
push
mov
mov
mov
push
cmp
fimul
fwait
mov
adc
cmc
mov
inc
push
add
mov
xchg
aam
add
jmp
cs
popf
mov
arpl
sbb
into
fld
jge
stc
loop
aaa
xchg
icebp
adc
outs
xor
add
pop
pusha
cmp
pop
mov
mov
ror
mov
fwait
push
push
in
cmp
int3
repnz
ins
icebp
cli
loop
dec
and
lahf
int3
std
and
adc
ss
xor
iret
xor
add
sbb
adc
push
jb
and
add
jp
or
push
stos
leave
dec
dec
sbb
fwait
xchg
xor
ret
xchg
cwde
(bad)
aad
xchg
stos
in
imul
retf
scas
push
sub
and
pop
addr16
xchg
repz
dec
sbb
push
gs
jae
sahf
call
and
ja
xchg
leave
jno
adc
mov
sbb
mov
hlt
jb
xor
xchg
jmp
or
add
inc
pop
test
fimul
add
inc
sub
jp
jno
or
lock
jl
inc
into
xchg
add
inc
test
lea
jmp
push
in
popf
ins
xchg
rcl
leave
in
iret
cmp
bound
mov
icebp
or
fwait
xor
sub
xchg
not
jmp
cld
lahf
sbb
adc
mov
push
in
fidiv
ud1
retf
adc
xchg
inc
pop
out
aam
jmp
jae
dec
lods
gs
sub
mov
mov
out
lock
enter
xchg
mov
shl
pop
mov
icebp
jns
ror
idiv
repz
and
out
adc
loop
sbb
sbb
dec
push
mov
fmul
mov
js
jae
mov
int
and
push
mov
dec
sbb
push
push
cwde
test
xor
and
fcmovb
fistp
mov
or
xor
imul
dec
test
jo
mov
mov
jmp
pop
sub
mov
call
(bad)
popa
mov
and
jp
and
sbb
aaa
popa
retf
xor
adc
mov
mov
sbb
pop
rol
xchg
xor
push
cdq
pop
dec
xor
ds
inc
or
xchg
xor
and
(bad)
jnp
pushf
hlt
push
jge
les
daa
imul
or
cmc
enter
pop
jne
pusha
sub
call
add
hlt
inc
enter
push
jge
test
aam
ins
inc
xor
jo
ds
(bad)
push
stos
sub
add
mov
xor
(bad)
std
ror
xlat
pop
dec
dec
lods
ret
in
pop
dec
dec
lds
jge
nop
mov
cmp
mov
addr16
inc
xchg
cld
bound
test
mov
ins
xor
inc
jbe
fsub
movs
dec
dec
jge
cmp
push
mov
push
push
push
mov
cmp
imul
and
rcr
cmp
pop
push
fbld
jge
xor
repz
sub
mov
add
retf
fisttp
aad
cmp
(bad)
push
dec
jbe
and
push
cmps
idiv
les
pop
dec
push
fisttp
call
cmps
js
pop
aad
xchg
pop
cmps
and
(bad)
retf
sbb
or
ds
or
push
fmul
ret
push
dec
dec
enter
cmp
add
dec
xlat
lods
cmp
shr
(bad)
in
xor
xchg
inc
cmp
scas
jnp
addr16
adc
je
imul
mov
mov
(bad)
mov
sub
std
int
and
cli
push
and
stc
mov
adc
xor
call
fsubr
xor
and
dec
outs
movaps
xchg
mov
fwait
pop
das
fwait
dec
mov
inc
cli
mov
or
or
pop
stos
or
fnstsw
repnz
ins
dec
mov
call
jg
ja
inc
or
dec
addr16
gs
jle
add
pop
or
pop
or
in
lds
lea
fldcw
shl
mov
xchg
hlt
cmps
cmp
fild
in
in
xor
cdq
push
push
fmul
sbb
inc
shl
dec
popf
cmp
fincstp
pop
add
iret
mov
fiadd
xchg
imul
shl
fcmove
and
test
or
and
pop
lods
(bad)
cmps
cmps
lods
mov
sar
inc
(bad)
mov
shl
and
(bad)
aas
(bad)
addr16
data16
mov
pop
(bad)
out
cli
int
adc
iret
inc
or
jns
push
in
cld
jp
(bad)
popf
dec
jmp
fs
adc
mov
fcmovne
popf
icebp
pop
xor
dec
gs
sub
fiadd
jmp
cdq
adc
inc
jb
jnp
or
stos
dec
fimul
sub
xchg
and
push
add
rcl
push
dec
sbb
(bad)
ja
push
out
daa
push
in
mov
mov
aas
dec
test
aas
mov
mov
cwde
test
cmp
cmps
out
dec
mov
cs
mov
dec
add
(bad)
push
mov
out
lahf
(bad)
cmp
mov
fnsetpm(287
jbe
hlt
xor
in
mov
cmp
fstp
and
in
push
div
mov
push
pop
(bad)
cmp
fxam
pop
xchg
ror
xor
jmp
scas
cmc
mov
mov
and
adc
and
xchg
adc
or
jb
xchg
scas
je
(bad)
pop
ficom
cmps
xchg
adc
dec
data16
sar
add
jmp
aad
pop
push
sbb
movhps
add
loopne
hlt
loopne
pop
cmp
data16
mov
lds
nop
je
inc
mov
or
loopne
adc
cli
or
xchg
or
inc
out
push
je
push
mov
or
in
mov
pop
push
in
(bad)
pop
xchg
and
ror
xchg
add
xchg
pushf
adc
into
dec
sahf
push
sar
xchg
push
sahf
mov
out
clc
pop
or
popf
test
cmps
retf
xor
or
mov
add
adc
sub
push
fnstenv
std
(bad)
or
xchg
cwde
push
je
adc
hlt
dec
shl
adc
sub
pop
int3
test
push
sub
and
sbb
sbb
sbb
push
cld
adc
leave
outs
data16
neg
push
inc
and
test
repnz
cmp
stos
(bad)
jno
aas
aad
fild
pushf
cmp
inc
das
push
mov
adc
ds
mov
es
hlt
addr16
xchg
add
ss
sub
scas
daa
xor
adc
icebp
lock
(bad)
nop
inc
pop
test
les
mov
not
pop
push
push
inc
popa
sub
fisub
adc
mov
(bad)
out
cli
sbb
cdq
push
repnz
xor
fimul
pop
and
les
popf
in
pushf
jne
or
loop
sub
or
movs
jb
jne
push
fiadd
mov
adc
add
add
movs
stos
xor
sub
xor
(bad)
mov
shr
push
cld
jb
repz
pop
mov
ins
dec
mov
mov
mov
js
push
(bad)
sbb
enter
cwde
ja
test
scas
pop
jno
cmp
not
cmc
lock
add
dec
stos
fwait
or
pop
cdq
and
mov
(bad)
sti
dec
stc
fcom
stos
fist
pop
xchg
les
ja
hlt
push
jno
arpl
test
in
sti
cmp
cwde
retf
dec
int3
mov
retf
(bad)
xchg
lds
jno
(bad)
jno
leave
enter
imul
out
and
dec
jle
dec
push
scas
cmp
repz
(bad)
sub
pop
in
in
ja
xchg
stos
add
in
imul
nop
fwait
(bad)
pop
and
mov
or
pop
or
(bad)
call
in
fcom
or
jns
fs
fwait
and
pop
and
fcmove
and
add
(bad)
fst
add
xchg
shl
mov
test
pop
(bad)
sbb
aam
and
cmp
pop
out
dec
and
out
popa
int3
adc
push
jne
out
mov
dec
cmp
xchg
mov
repz
mov
lea
out
repnz
sub
mov
push
cld
fsubr
add
cmp
and
retf
mov
fucomi
fwait
xor
loope
mov
push
xchg
cmps
jmp
or
push
or
mov
pusha
rol
(bad)
jle
xor
fadd
xor
call
inc
mov
std
mov
gs
call
ret
cmp
mov
shl
push
stos
imul
sbb
pop
pop
dec
test
imul
and
adc
mov
xchg
into
or
push
scas
sub
cmp
clc
xchg
popa
aam
mov
cmp
add
clc
mov
out
sbb
enter
bound
dec
dec
repnz
sbb
mov
dec
add
mov
push
adc
data16
call
pop
mov
and
sbb
push
push
shr
mov
cwde
cdq
das
xchg
mov
pushf
xor
fisttp
imul
push
fcmovb
sahf
out
mov
das
scas
mov
mov
xchg
aam
(bad)
popa
(bad)
mov
mov
arpl
in
and
ja
xor
shr
sbb
and
mov
idiv
push
js
pushf
aaa
xlat
movs
scas
leave
out
mov
and
(bad)
and
fwait
mov
adc
xchg
push
mov
xor
(bad)
push
aad
mov
icebp
cmp
push
repz
imul
add
daa
mov
das
sti
sbb
out
push
adc
lock
adc
sahf
stos
pop
inc
jbe
fild
push
das
outs
push
pusha
ins
xlat
pop
and
pop
int3
pop
test
add
test
adc
call
or
scas
inc
cmp
and
jae
mov
lahf
cmp
lods
lahf
pop
sub
pop
pusha
xor
or
scas
fwait
mov
or
mov
xchg
xor
cmp
mov
pop
sbb
fcomip
in
jb
cld
or
(bad)
push
das
push
jp
jge
and
fst
push
in
push
cmp
fs
xchg
mov
xchg
inc
mul
mov
sub
aaa
jb
sub
sub
xchg
mov
icebp
add
arpl
xlat
shr
and
sbb
xchg
ret
xor
out
inc
jge
dec
adc
cmp
pop
push
cmp
fist
stos
sub
add
call
ins
sub
syscall
ins
xor
xchg
sub
pop
je
scas
and
ss
sbb
pop
push
mov
xor
aaa
push
ds
loop
adc
(bad)
cld
mov
test
icebp
mov
and
inc
aad
pop
stc
out
js
mov
dec
arpl
mov
hlt
aaa
pop
lds
fsub
pop
mov
fisubr
inc
pop
aam
(bad)
addr16
arpl
and
inc
push
leave
rol
inc
mov
jge
cmp
add
add
and
mov
call
imul
fdivr
sbb
lds
mov
mov
mov
outs
push
xor
leave
lods
push
js
popf
(bad)
sbb
inc
mov
fs
jmp
cmps
enter
jbe
ins
cmps
or
xor
fdiv
(bad)
repz
add
ja
dec
mov
into
and
ins
out
int3
test
xchg
pop
es
inc
xor
sub
push
rcr
inc
or
pop
ret
xchg
gs
ss
or
jecxz
jle
add
mov
push
and
push
push
sub
pop
push
and
ror
mov
inc
jne
mov
mov
add
movs
sub
push
in
pop
push
pop
xor
xchg
call
mov
imul
(bad)
ret
sbb
jecxz
and
mov
add
sub
mov
(bad)
mov
data16
or
xlat
push
das
cmps
loop
(bad)
popf
add
out
js
sbb
popa
pop
push
shl
mov
repnz
js
cs
adc
ins
sbb
sub
lds
cs
ins
push
imul
pop
push
and
int3
mov
jmp
jge
pop
sbb
xchg
imul
lock
aad
imul
jmp
and
int
add
outs
fs
xor
mov
dec
gs
mov
cmps
xor
pop
add
shr
or
jmp
dec
lods
xor
cmp
xchg
je
dec
div
fild
adc
mov
clc
mov
ins
rcl
repnz
fmul
dec
mov
call
daa
imul
or
jbe
jmp
pop
pop
push
inc
stc
xchg
and
xchg
dec
and
sub
lds
jns
mov
cmp
mov
adc
mov
fadd
leave
int
push
std
es
out
inc
pusha
jl
js
rcl
bound
add
(bad)
and
movs
nop
push
loopne
jnp
int
push
aaa
sub
adc
mov
les
(bad)
mov
or
mov
sub
inc
aam
mov
sub
out
movs
mov
movs
sbb
pop
and
xchg
(bad)
or
pop
dec
ret
xchg
pop
ror
js
xor
or
(bad)
int3
push
es
stos
mov
mov
mov
inc
fnsave
arpl
and
xor
fstp
(bad)
mulps
jno
sub
mul
sahf
(bad)
sbb
mov
je
mov
sbb
and
fs
adc
or
int
push
and
push
push
cvtps2pi
jne
sub
xchg
adc
pop
sub
adc
sbb
add
stos
mov
loope
inc
loop
fcmovnbe
ss
jae
xchg
pop
xor
pop
adc
mov
xchg
push
test
or
mov
cld
mov
ins
aas
int3
retf
ins
gs
mov
nop
dec
pop
in
fs
ret
mov
int
imul
jae
jbe
call
neg
push
out
(bad)
mov
cdq
jnp
cwde
enter
pusha
jp
retf
sbb
bnd
in
xchg
dec
jo
mov
xor
cmp
cmp
mov
in
(bad)
xchg
cmp
f2xm1
ins
ds
dec
data16
push
add
mov
mov
test
xlat
adc
ret
xor
jmp
rcr
push
ret
aas
or
xor
or
jb
adc
loope
dec
movs
hlt
loopne
jg
jmp
xchg
mov
int3
dec
jo
push
lods
mov
jmp
js
cld
pop
or
push
or
repz
imul
jbe
pop
jl
icebp
cmp
mov
popf
cmps
push
retf
xchg
push
jp
mov
sti
movs
mov
push
cli
push
ret
stos
cmp
addr16
out
std
data16
cpuid
pusha
mov
jae
mov
lods
mov
mov
mov
pop
pop
dec
retf
xchg
lahf
jo
out
sbb
xchg
push
xor
pop
mov
push
mov
js
add
mov
lds
push
lds
add
and
ret
mov
sub
call
fcom
into
cdq
mov
xchg
mov
jmp
(bad)
clc
mov
les
movs
dec
dec
(bad)
cwde
repnz
pop
inc
out
pop
sub
xor
xchg
mov
push
lds
test
sti
aad
dec
pop
sbb
int3
and
cli
push
pop
sub
jae
fcom
mov
dec
fnsave
push
lock
daa
pop
dec
lahf
test
mov
xchg
dec
popa
out
pop
or
out
leave
lods
sub
inc
sbb
push
and
xor
shl
fist
enter
test
mov
push
inc
out
mov
jae
add
jmp
(bad)
mov
(bad)
popa
xchg
je
test
scas
ins
cmp
es
mov
cld
jge
in
jg
repz
fs
or
bound
scas
gs
test
or
pop
or
clc
retf
scas
ud1
pop
or
inc
cmp
cs
xlat
je
and
and
xchg
mov
mov
mov
mov
les
dec
xchg
dec
pushf
inc
bound
mov
jge
jo
into
imul
repnz
(bad)
dec
cmp
retf
ins
push
cs
sbb
jge
mov
adc
sub
loop
push
imul
push
aad
adc
test
pop
jno
inc
addr16
adc
cmp
pop
leave
fcom
test
push
rol
or
dec
sbb
and
imul
dec
push
cmps
xor
outs
inc
inc
iret
ins
dec
pop
test
int3
retf
mov
mov
mov
xor
mov
stc
and
inc
shl
mov
(bad)
sbb
mov
fdiv
loop
sahf
mov
fld
push
test
pop
and
xchg
lahf
cli
sbb
jmp
and
mov
clc
xchg
push
pop
movs
cmp
hlt
lods
addr16
or
dec
test
ins
mov
out
loop
add
fidiv
popa
fs
int
fisub
shr
adc
adc
mov
mov
pop
adc
(bad)
je
dec
xlat
int
sub
rcr
leave
inc
int3
popf
ja
test
and
mov
sub
lahf
call
jae
(bad)
in
leave
cli
jne
pop
cmps
clc
fidiv
push
and
aam
movs
jge
in
cmp
xor
lea
mov
push
popf
outs
xchg
hlt
les
test
xor
(bad)
sub
pop
dec
loop
into
mov
(bad)
cmps
xchg
cmps
inc
dec
fmul
mov
push
ret
xchg
mov
sub
lods
or
jns
ret
(bad)
fwait
sbb
(bad)
out
xchg
ficom
sub
fnstcw
out
imul
lods
fsubrp
adc
cmp
int
aam
and
repz
cmps
xchg
mov
ins
inc
inc
lahf
and
mov
jl
jge
xchg
inc
pusha
mov
push
or
jae
sub
jno
push
mov
xor
cmc
push
fadd
in
enter
cmp
jae
lea
mov
dec
dec
pop
push
fidivr
pop
sti
aad
out
ja
jle
outs
aad
inc
jg
jno
mov
dec
loopne
out
jmp
mov
int3
xchg
jno
pop
pop
dec
pushf
fcmovnb
loop
mov
cmc
jecxz
out
je
stos
fisubr
push
ja
loope
pop
xor
adc
mov
rcr
xlat
loopne
imul
pop
test
xchg
mov
cdq
xchg
fcom
ret
pop
push
add
mov
push
cmc
inc
fbstp
xchg
pop
es
lahf
jno
outs
mov
push
push
out
outs
xchg
scas
loope
sahf
aam
cwde
call
out
inc
repnz
pop
(bad)
aad
inc
lds
imul
sar
inc
add
iret
test
xchg
(bad)
icebp
xchg
cwde
and
jmp
add
mov
aam
sti
pop
pop
xor
and
mov
and
ins
jle
shr
imul
in
inc
in
retf
mov
jnp
dec
movs
test
push
inc
pop
jge
and
retf
mov
loopne
inc
add
rsqrtps
xlat
xchg
and
ffreep
test
out
xor
fs
repnz
sub
xchg
sbb
cmps
jge
dec
mov
pop
enter
outs
xchg
je
jb
inc
mov
out
data16
pop
loopne
dec
aam
cs
mov
add
xchg
xor
sbb
pop
adc
jno
(bad)
mov
sti
sub
aam
enter
movs
dec
pusha
jne
pop
xor
push
mov
mov
ret
stos
stos
pop
outs
mov
push
leave
push
and
into
imul
jl
(bad)
pop
call
loope
and
mov
sahf
jb
cmp
jge
int
fldcw
lods
loop
push
lds
cli
push
dec
mov
mov
xchg
in
aas
jbe
pop
mov
movs
je
cmp
dec
repz
mov
sub
movs
fwait
sbb
jge
cmc
int
sub
lods
jg
(bad)
movs
xor
cmp
popa
add
xchg
push
fcomp
or
cmps
add
addr16
fild
call
adc
and
mov
mov
loop
push
mov
mov
sar
test
dec
gs
push
inc
gs
ds
inc
and
outs
cmp
mov
inc
fadd
clc
ss
bnd
sahf
aam
jmp
int
pushf
je
in
mov
sub
jmp
fbld
mov
jns
adc
cmp
fist
mov
lock
aas
popf
mov
mov
sbb
mov
push
outs
ds
and
cmp
add
dec
xchg
int3
or
add
jae
sbb
dec
in
mov
sub
cmp
jmp
outs
test
call
mov
and
nop
add
inc
jl
mov
loop
sub
or
clc
test
mov
sti
dec
ss
adc
inc
cmp
not
jmp
je
xchg
inc
push
cmps
sbb
sbb
push
xor
and
and
mov
(bad)
pop
push
iret
pop
pop
pop
push
mov
imul
xchg
sub
out
js
inc
dec
mov
cdq
daa
mov
adc
cmc
daa
mov
js
push
leave
shl
int3
imul
jbe
iret
cmp
push
out
jnp
adc
call
adc
jo
test
mov
mov
int3
lods
xor
xor
jo
repnz
sub
stos
xor
push
in
inc
js
xor
retf
jns
js
mov
xchg
loopne
popf
and
das
loope
scas
push
xor
rol
int3
inc
or
jle
adc
aas
xchg
sbb
inc
inc
jge
dec
mov
fcomp
and
dec
pop
iret
out
mov
dec
pop
fadd
popa
clc
lods
iret
mov
ret
dec
int3
popa
jo
add
sbb
or
dec
and
shl
mov
mov
call
cmps
ror
adc
xchg
push
in
sub
iret
enter
(bad)
mov
mov
shl
cmp
in
jecxz
mov
jge
(bad)
push
leave
fild
pop
mov
jae
and
cs
shr
sub
or
push
popf
pushf
in
mov
out
mov
daa
or
xor
pop
(bad)
ins
add
jp
sbb
or
or
adc
stos
xor
jmp
dec
push
test
aad
pop
or
pop
mov
cmps
xchg
sub
jns
dec
retf
inc
outs
xlat
xchg
in
xor
xor
test
mov
fcomp
(bad)
dec
mul
sub
pop
sbb
pop
test
imul
or
je
and
pop
stc
jno
je
xor
imul
cmp
jge
pop
stos
or
jmp
xchg
jmp
xor
stos
cdq
xchg
inc
movs
xor
not
cdq
sub
ret
jb
aas
in
fld
inc
neg
pop
mov
vmovaps
jnp
adc
mov
repnz
std
inc
jmp
pop
xchg
pop
lock
movs
ret
popf
in
pop
mov
pop
push
pop
xchg
cmc
in
or
mov
add
adc
push
push
push
adc
push
mov
shl
imul
mov
imul
(bad)
fstp
loopne
adc
xor
inc
retf
or
outs
jns
jo
cmc
fld
add
aaa
mov
xor
nop
cmps
fwait
push
test
jns
xor
outs
adc
or
cli
mov
xor
shld
sub
push
pop
mov
dec
mov
dec
mov
ja
and
ss
cmp
popa
outs
cmp
aaa
and
mov
adc
push
xor
jp
push
xchg
ja
cmp
mov
fisubr
sbb
rcl
cwde
rcl
in
stos
das
mov
jne
sub
cld
imul
xlat
icebp
fmul
(bad)
ins
jle
mov
js
es
jb
daa
or
into
ret
data16
std
xchg
stos
cmp
xchg
cdq
push
mov
xlat
xor
mov
cmc
sbb
push
stos
xchg
mov
push
cli
cmps
repnz
pop
jne
push
add
shr
xor
push
sub
retf
and
or
add
ins
cmp
mov
scas
nop
outs
loop
xchg
or
cmc
scas
aas
loopne
add
pushf
stos
jmp
movs
cli
cli
rcl
cmps
rcr
pop
lea
loop
(bad)
xchg
daa
xchg
rcl
stos
jns
inc
test
dec
inc
ss
daa
xchg
sbb
pop
(bad)
sub
inc
inc
cmp
mov
(bad)
dec
fwait
xor
ret
push
fdiv
mov
out
loope
push
jmp
test
jp
sub
jle
sbb
dec
ss
mov
sbb
imul
scas
rol
hlt
jns
adc
inc
nop
adc
inc
dec
cdq
jmp
pop
inc
jmp
mov
in
add
ins
lods
pop
mov
int
and
mov
mov
pop
fbld
lods
xchg
mov
mov
adc
xchg
jne
inc
dec
xchg
inc
add
xchg
push
into
pop
push
push
jmp
xor
loope
push
int3
imul
mov
pop
adc
push
fs
call
lods
fstp
ss
rcr
inc
in
pop
pop
jge
dec
cmp
aam
out
iret
mov
in
cmp
pushf
mov
or
pop
sbb
lds
imul
mov
arpl
cld
push
ja
cmp
mov
call
repz
sub
and
sbb
pop
vmwrite
dec
pop
cmp
add
jl
scas
les
jge
movs
es
pop
test
xchg
outs
adc
inc
je
xchg
retf
xchg
or
inc
fbstp
adc
nop
loopne
or
hlt
retf
pop
dec
xchg
fwait
dec
sti
aam
enter
in
div
mov
jo
bnd
xchg
lods
inc
pusha
mov
xor
das
imul
adc
mov
dec
call
adc
(bad)
lods
aad
loop
std
arpl
popf
in
psrad
enter
ret
mov
neg
std
ret
jno
push
xchg
shl
fidiv
stos
cmps
or
and
bound
arpl
arpl
add
adc
popf
push
sub
sbb
add
les
pusha
dec
jecxz
jmp
loope
icebp
dec
mov
xchg
dec
jl
div
cwde
adc
lods
in
cld
sub
loope
dec
ins
mov
pop
mov
add
and
sub
mul
or
pop
mov
iret
adc
cli
sub
(bad)
scas
aas
xchg
dec
jecxz
aaa
sbb
loopne
add
adc
mov
xor
xor
in
call
add
jecxz
cli
jo
mov
add
mov
xlat
inc
(bad)
pop
popf
enter
pop
add
retf
sub
mov
call
sbb
jne
(bad)
mov
stc
mov
inc
xchg
in
add
lods
repz
add
test
xchg
cmps
push
test
mov
stc
sti
in
jge
add
das
cmp
mul
xor
push
sbb
jo
popa
jno
inc
pushf
xor
mov
cdq
push
sub
outs
and
mov
addps
div
fild
or
movs
mov
mov
mov
and
ja
into
dec
fcom
lahf
pop
cmp
fsubr
add
mov
sbb
dec
mov
imul
dec
popa
dec
add
sub
icebp
mov
test
popa
fptan
pop
push
xchg
pop
adc
popf
mov
xchg
xor
outs
pop
cmp
adc
xchg
(bad)
mov
loope
xor
(bad)
mov
pop
int
stc
cs
aaa
fld
retf
call
xchg
fst
inc
cmp
into
push
push
push
mov
gs
cmc
scas
xchg
mov
data16
dec
enter
adc
xor
cwde
cmp
mov
jne
out
cmp
inc
mov
cld
mov
and
sub
and
dec
inc
(bad)
bound
or
les
mov
and
push
add
inc
out
adc
lods
pop
call
das
nop
mov
xor
test
and
ins
mov
jmp
sub
aam
or
retf
and
out
stc
add
in
inc
test
adc
add
cmp
cli
into
cmp
or
xor
xor
repnz
xchg
cmps
test
out
xchg
mov
inc
sub
sar
jmp
dec
jae
mov
add
sbb
dec
push
(bad)
fcomp
jmp
jbe
int3
movs
xchg
jno
jnp
ss
xchg
adc
mov
dec
pop
and
in
push
jbe
mov
pop
fadd
mov
push
adc
xchg
leave
aas
pop
jle
loopne
push
in
push
dec
inc
gs
cmps
push
sbb
dec
clc
pop
out
(bad)
push
out
inc
stos
fdiv
pop
sti
ins
inc
or
or
fwait
daa
ss
lods
mov
retf
sbb
xor
out
jbe
or
popf
sub
jno
test
jp
push
mov
adc
std
push
loope
jae
jnp
or
push
fld
add
sub
lds
aaa
stos
jp
in
jmp
jo
movs
fmul
pusha
rcr
adc
dec
xor
dec
stc
mov
and
(bad)
int
sub
(bad)
pop
outs
xchg
adc
pushf
mov
and
or
sub
cmp
dec
aaa
or
xchg
adc
and
out
sbb
xchg
dec
push
mov
push
lock
sub
fidiv
outs
fdiv
add
adc
ds
daa
aaa
push
mov
mov
fistp
ds
xchg
in
es
outs
scas
mov
fisub
loopne
xchg
pop
mov
sub
xor
sbb
popa
jp
lea
stos
(bad)
popf
jl
dec
mov
iret
test
retf
mov
sub
adc
(bad)
into
mov
add
mov
mov
aad
outs
push
pop
sbb
jl
mov
repz
mov
pop
sbb
push
adc
inc
sbb
popf
and
adc
jnp
imul
lods
mov
jno
xor
imul
fild
shr
or
movs
cmp
cld
into
sub
push
and
xchg
jle
inc
jno
stos
aad
ins
cld
jle
stos
je
cmp
push
ja
add
inc
cs
add
cmp
sbb
pop
test
or
mov
xchg
xchg
gs
mov
sbb
lods
pop
enter
push
xchg
jns
frstor
sbb
fimul
push
test
out
mov
push
test
jae
std
fldcw
xor
movs
mov
sbb
dec
out
int3
jle
jge
or
and
xchg
xchg
push
dec
aad
out
hlt
sbb
cli
or
push
xchg
std
pop
std
popa
ins
mov
xor
sub
(bad)
ins
mov
and
(bad)
xchg
xor
lock
in
push
pop
fs
repnz
pusha
push
ficom
xor
sub
jp
xchg
sbb
mov
or
je
int3
sub
(bad)
loopne
mov
pop
dec
dec
mov
mov
popf
jl
cli
push
or
(bad)
cmp
push
and
rcl
shl
in
bound
push
nop
xor
test
shl
or
mov
or
pop
push
call
or
fcmovne
mov
jg
push
aam
std
dec
fs
xchg
inc
mov
pop
inc
pop
mov
mov
in
test
ins
loopne
int
mov
fidivr
push
cmp
mov
std
add
dec
retf
jge
clc
mov
lods
sub
and
pusha
jb
outs
or
in
adc
into
or
pusha
adc
daa
sub
mov
call
add
mov
fld
aas
rol
mov
add
fild
sti
aaa
sbb
pusha
in
call
aaa
cmp
jo
ds
mov
shl
xor
out
cmc
or
mov
pushf
pop
push
inc
lock
jmp
cmp
mov
das
fs
xchg
push
mov
and
(bad)
mov
loope
stos
push
in
jae
sar
and
repnz
scas
fdivr
inc
add
inc
std
cmc
adc
inc
sbb
or
xchg
imul
push
(bad)
out
pop
cmp
sub
push
mov
push
mov
in
cmp
pop
minps
mov
push
das
nop
mov
sub
or
(bad)
pop
dec
push
mov
add
xor
add
out
fwait
mov
outs
mov
in
mov
(bad)
test
mov
jnp
add
clc
add
mov
fbld
dec
call
inc
sbb
sahf
test
jbe
lahf
stos
jmp
adc
jo
es
movs
ins
or
jmp
and
lds
fs
push
stos
retf
lods
loop
sub
std
cld
stos
sahf
pop
cmp
das
pop
or
int3
mov
xor
cli
sub
dec
les
dec
mov
pop
(bad)
and
out
jnp
dec
scas
add
pop
push
push
sub
sbb
xchg
push
ret
push
xchg
call
mov
ds
ins
mov
dec
test
push
push
ins
inc
(bad)
sbb
mov
jne
loop
push
add
inc
rcr
in
jle
push
or
ins
das
leave
ret
mov
cmp
pop
cmp
test
sti
and
lea
mov
sbb
out
inc
cld
jne
jnp
jo
jnp
(bad)
fst
mov
nop
push
adc
push
adc
xor
push
and
dec
ror
xchg
out
std
stos
xor
test
or
mov
ret
adc
iret
(bad)
fwait
es
idiv
push
shl
pop
sub
mov
xchg
sbb
nop
jb
scas
fcomp
sub
ror
call
repz
ss
xor
dec
pop
cdq
jo
mov
xchg
pop
inc
out
cdq
mov
xchg
mov
push
loop
sti
pop
ficomp
cmp
or
push
mov
mov
jmp
xchg
call
dec
cli
pop
mov
fld
shr
fwait
repz
or
xor
clc
mov
xchg
scas
dec
mul
es
xor
push
sbb
or
(bad)
mov
cld
mov
pop
cld
or
sar
or
inc
call
or
mov
xchg
pop
ss
aas
scas
ins
push
mov
scas
mov
jge
adc
in
pop
cli
in
sti
shl
clc
add
fimul
les
mov
es
scas
mov
jns
adc
or
pop
std
inc
mov
and
and
add
inc
sbb
fist
sbb
mov
aaa
pop
aas
xchg
inc
fcom
dec
xchg
add
push
push
ds
(bad)
sar
rcr
mov
sbb
pop
fdivr
fs
or
icebp
stc
ins
xchg
xor
icebp
repnz
scas
or
xor
(bad)
adc
jbe
aaa
rcl
jbe
cmp
fisubr
mov
dec
mov
and
jbe
int3
adc
shl
outs
enter
or
add
cld
ja
sub
dec
scas
add
shl
pop
xlat
outs
xor
and
xor
mov
or
mov
js
add
push
test
(bad)
jl
not
ss
push
imul
jb
int3
stc
push
inc
mov
push
test
dec
fadd
mov
lock
sub
fidiv
scas
in
inc
cmp
sbb
dec
test
loope
sahf
push
aaa
add
imul
or
dec
jge
inc
dec
out
mov
aad
push
pop
into
mov
jle
clc
and
iret
or
cmp
mov
clc
push
dec
mov
outs
adc
aas
outs
xchg
adc
stc
xor
jno
pop
add
or
and
mov
xchg
mov
xchg
lea
fs
imul
dec
sub
outs
dec
pop
cmp
jge
push
push
xchg
ins
cmp
enter
call
ja
xchg
jbe
popa
daa
ss
jg
in
in
das
ret
push
dec
int3
out
test
mov
or
hlt
scas
fadd
ss
add
ret
sahf
mov
imul
test
inc
push
adc
popf
push
popa
fucomi
mov
inc
dec
imul
ins
mov
mov
outs
cmp
and
fsin
aad
pop
jp
je
xor
stc
mov
aaa
shr
test
mov
or
stc
mov
sub
sub
fldl2t
adc
gs
out
pop
les
jp
cwde
sub
xchg
jns
data16
and
add
jecxz
mov
iret
mov
adc
adc
jp
test
frstor
imul
lods
dec
sti
int
loopne
ja
jle
fnstenv
lods
add
adc
fs
dec
xchg
sub
xor
(bad)
shl
cmp
push
(bad)
cld
retf
shl
jmp
add
adc
rcl
retf
movs
dec
mov
sar
sahf
lea
(bad)
sti
jp
pop
push
xchg
cmp
sub
cmps
mov
dec
mov
fcmovu
pop
popa
in
or
jecxz
mov
xor
or
cwde
adc
sub
cmp
push
xor
ss
add
in
pop
xchg
adc
mov
pop
in
syscall
push
mov
mov
pushf
mov
xchg
mov
jmp
mov
mov
inc
xor
jge
adc
add
pushf
sbb
dec
ds
pop
sbb
cmps
in
add
js
in
pop
(bad)
jne
xchg
or
xchg
popa
adc
pushf
sub
data16
push
dec
pop
fild
add
pop
lea
adc
fsubp
dec
out
repz
mov
fwait
xor
push
or
ja
pushf
cmp
mov
inc
mov
aam
rcr
ret
or
or
inc
ror
pop
(bad)
fst
xlat
imul
stc
mov
inc
aas
ror
mov
aaa
xlat
mov
xor
or
pop
sub
fldenv
ror
fdivr
mov
or
add
mov
xchg
adc
pop
test
jle
outs
mov
jb
leave
stos
(bad)
hlt
ss
jmp
sti
push
shl
fwait
jae
rcl
fcom
cdq
adc
and
ins
or
addr16
cld
mov
stos
inc
add
xchg
rcr
push
cmp
adc
cmc
lock
sbb
sbb
mov
xchg
adc
mov
in
daa
inc
dec
hlt
adc
xchg
pop
push
push
mov
cmc
jle
movs
add
aaa
cli
aas
jmp
ja
adc
and
call
cs
bound
(bad)
mov
xchg
inc
cwde
iret
jo
jge
out
call
in
mov
push
pusha
cmp
sub
xchg
test
jmp
mov
cmp
push
rcl
sub
aad
cmps
sbb
ins
xor
and
shr
fs
loope
(bad)
cmp
test
(bad)
xchg
out
push
sbb
fsubp
(bad)
cs
mov
(bad)
pop
out
pop
data16
sbb
mov
mov
mov
xor
add
call
jb
jb
fstp
sub
hlt
pop
mov
xor
sub
idiv
ret
and
call
call
mov
leave
(bad)
lods
int3
sub
test
(bad)
and
jmp
ss
or
cmp
dec
aad
jecxz
clc
cmp
dec
(bad)
cwde
mov
bnd
cli
bound
pusha
pop
call
xchg
add
lods
fwait
mov
inc
lods
xor
fldcw
ret
jns
pop
xchg
gs
in
je
shl
jg
cs
neg
pop
fisttp
or
in
mov
es
adc
push
ret
leave
xchg
dec
sub
xchg
inc
mov
test
das
jo
(bad)
push
in
pop
and
ds
movs
xchg
ror
xlat
(bad)
(bad)
xor
(bad)
aad
leave
xchg
dec
or
sar
daa
fs
jecxz
cwde
sub
fnsave
idiv
cld
ins
mov
inc
int
inc
shl
mov
inc
inc
ins
xor
mov
pop
cwde
and
xchg
mov
inc
inc
push
mov
imul
push
jmp
and
aaa
mov
out
push
or
test
jnp
dec
inc
dec
mov
in
push
jo
stos
pop
mov
xor
or
pop
jnp
addr16
mov
ror
neg
out
xchg
loope
in
rcl
cmp
inc
fs
sbb
cld
xor
out
jne
xchg
pop
sub
xor
fwait
dec
mov
xor
retf
mov
adc
repnz
xor
pop
mov
icebp
xlat
shl
mov
test
cmp
(bad)
jmp
rcl
dec
lea
in
add
inc
scas
daa
fistp
and
jle
popa
mov
call
dec
ins
cmps
out
jae
dec
mov
stos
dec
pop
adc
add
jge
jg
sbb
mov
lea
xlat
mov
dec
inc
inc
test
shl
call
pop
fprem1
jb
or
inc
cmp
mov
inc
xor
xchg
mov
push
jns
jmp
call
and
add
xor
pop
inc
(bad)
push
ss
mov
hlt
mov
or
aad
xchg
stos
inc
add
cwde
hlt
sbb
push
gs
push
rol
ja
scas
pop
addr16
cmp
adc
sbb
sbb
mov
or
adc
and
out
cs
mov
sbb
pop
mov
ins
push
push
inc
jmp
ja
fwait
pop
iret
outs
das
pop
loope
push
fsub
push
in
push
xor
xchg
fmul
dec
in
jmp
fmul
sub
or
cld
mov
jbe
rcl
ror
(bad)
jmp
add
popf
jg
shl
jp
ret
(bad)
shr
in
mov
dec
arpl
push
xchg
aaa
daa
push
adc
dec
dec
xchg
jmp
sub
sbb
cmp
or
cld
mov
in
cmps
gs
cmp
out
adc
and
jmp
xor
test
jb
inc
xor
sub
adc
cmp
xchg
in
imul
call
repnz
dec
cs
call
sti
sub
lock
fcom
ja
lds
fwait
push
sbb
fs
pop
stc
pop
jl
cli
cmp
add
pop
inc
sub
retf
or
retf
loope
mov
rcl
das
mov
fdivrp
push
or
dec
shr
xlat
inc
dec
inc
outs
(bad)
xor
xor
xor
cli
adc
popa
or
outs
sbb
jae
(bad)
aaa
loop
pop
jge
jno
mov
jg
mov
std
in
inc
xor
(bad)
fcomp
int
mov
int3
push
scas
ja
add
dec
rol
push
mov
push
int3
pop
call
lea
jo
loopne
rcr
push
out
sub
pop
and
ret
add
mov
sub
dec
sbb
mov
(bad)
cli
inc
inc
and
call
pusha
lea
je
inc
dec
xor
lahf
pushf
outs
xchg
push
stos
add
test
fcom
cmp
mov
rol
push
adc
push
(bad)
into
(bad)
and
outs
js
mov
stos
loope
ret
mov
cmp
or
gs
ss
push
fdivr
ret
in
cmp
ret
adc
imul
mov
enter
in
sbb
or
mov
mov
mov
xchg
mov
mov
sahf
add
or
bound
shl
and
stos
fldenv
sbb
int3
ficomp
jmp
scas
outs
push
adc
cli
fwait
sbb
test
push
call
cmps
loope
shr
(bad)
sbb
jl
lods
test
ins
jo
aad
or
pusha
mov
xor
sbb
js
push
sbb
sti
or
mov
leave
xchg
or
cmp
push
mov
scas
out
dec
and
(bad)
fist
(bad)
jmp
and
retf
adc
push
mov
into
jle
dec
jae
movs
inc
adc
inc
nop
fsub
(bad)
and
inc
adc
mov
jb
pop
mov
mov
adc
sub
dec
pop
push
jb
or
into
(bad)
inc
xor
dec
sub
cmp
pop
ret
cmp
movs
xchg
inc
push
pop
dec
ror
sbb
jno
rcr
repnz
xchg
mov
mov
scas
cmps
fadd
call
inc
mov
jle
test
or
xor
adc
mov
fimul
sti
ins
inc
repnz
jecxz
add
mov
paddq
sbb
mov
repnz
and
xchg
xchg
mov
and
out
mov
(bad)
jo
mov
jecxz
sete
or
pop
lds
mov
lods
or
xor
sub
iret
xchg
mov
cwde
iret
ret
(bad)
lock
das
(bad)
fld
imul
cld
xchg
jge
push
call
mov
dec
dec
cmp
dec
mov
jno
stos
inc
add
xor
xor
jne
add
mov
gs
mov
out
in
(bad)
clc
push
cli
push
pushf
cmps
fstp
aaa
push
out
jg
sahf
jnp
jge
pop
call
retf
sbb
inc
stos
retf
mov
cmp
jg
ss
jae
aam
jl
adc
lods
sub
sbb
push
repnz
inc
mov
ins
pop
hlt
loopne
mov
dec
jmp
dec
ss
(bad)
push
inc
sub
cmps
jmp
daa
out
adc
dec
and
dec
jmp
addr16
fdivr
cmps
push
outs
xchg
in
push
in
lds
cs
xchg
hlt
mov
pusha
push
jns
loop
sar
mov
push
(bad)
cmc
jp
out
pop
push
(bad)
push
dec
test
ins
pop
dec
push
sub
fbstp
in
mov
jae
xchg
cwde
fwait
inc
(bad)
cmp
shr
lahf
mov
loopne
cmp
pop
mov
add
ror
sbb
cmc
pop
xchg
and
test
stos
adc
pmuludq
pop
mov
fimul
fild
jge
dec
cwde
sub
ins
ror
pushf
xlat
fwait
dec
push
xor
xchg
or
lea
int
pop
js
mov
rcl
xchg
push
into
mov
and
add
pop
popf
cmp
cmp
add
mov
out
jae
and
fwait
sbb
scas
dec
inc
mov
loop
add
fsubr
js
jl
adc
and
xor
rcl
pop
repnz
lahf
hlt
jmp
lahf
adc
dec
das
div
mov
test
inc
gs
(bad)
jg
jo
pop
and
lods
dec
(bad)
mov
(bad)
mov
inc
jns
or
jmp
loopne
(bad)
repz
cmc
pop
hlt
movs
sbb
(bad)
je
loope
mov
ret
in
lea
pop
cmc
xchg
hlt
jmp
(bad)
shl
jbe
jbe
sub
push
imul
rcr
mov
sahf
xor
(bad)
fdivr
je
push
fadd
stos
icebp
clc
mov
dec
es
data16
addr16
and
add
or
and
jg
fs
mov
adc
ficomp
popa
jl
dec
mov
sub
cmp
lahf
shl
inc
cmp
data16
sbb
loop
fisttp
mov
shr
arpl
sbb
sbb
or
test
and
ins
xchg
fwait
mov
in
or
mov
cmps
sub
push
out
xchg
jns
mov
mov
dec
cmp
lea
movs
jns
dec
shl
js
cld
jmp
inc
icebp
int3
call
push
fs
sahf
sbb
gs
imul
cmps
pop
fmul
pop
enter
add
or
ret
mov
adc
push
cmc
bound
loop
mov
clc
or
out
repnz
jne
fs
jo
out
je
in
arpl
sub
xlat
add
popf
call
shr
push
sbb
inc
js
hlt
or
ins
fst
cli
jo
in
push
push
adc
push
jo
(bad)
ss
retf
jl
ret
push
adc
pop
xchg
cli
mov
sub
adc
out
sub
fucomp
cld
fs
cli
xor
fnstcw
sbb
test
inc
ins
sbb
popa
or
pop
adc
pop
jne
int
outs
or
out
jmp
cmps
fild
retf
movs
mov
daa
push
bnd
(bad)
dec
aaa
jg
mov
adc
or
sbb
out
pushf
jae
jp
sbb
push
mov
shr
and
mov
ins
ss
or
xchg
iret
sti
pop
mov
xor
mov
dec
xor
xor
(bad)
and
jmp
sbb
es
jbe
fs
movs
push
fdivr
sub
sub
rol
push
es
repnz
mov
movs
enter
popf
sub
fst
dec
mov
adc
xchg
inc
mov
pushf
sahf
mov
pop
hlt
jge
mov
inc
dec
push
(bad)
pop
test
pop
jg
cwde
leave
(bad)
pop
cwde
mov
jne
xlat
or
push
add
jmp
cmp
enter
test
adc
adc
iret
repnz
xchg
mov
push
xor
push
iret
jmp
or
xor
cwde
inc
adc
loopne
add
or
push
mov
jge
sti
xor
es
mov
and
lock
fidivr
inc
fcmove
scas
mov
or
pusha
fnstenv
stos
in
mov
aam
sbb
pop
lahf
dec
push
sbb
pop
mov
mov
mov
xor
mov
fcmovnu
jo
les
dec
adc
(bad)
out
inc
push
fcomp
cmc
cmp
sub
pop
push
cmps
ja
push
test
out
aas
adc
push
adc
sbb
(bad)
test
adc
jp
fnstsw
dec
add
test
push
or
dec
and
das
xor
push
adc
xor
dec
les
jo
aam
(bad)
xor
push
nop
mov
or
adc
push
fisub
test
adc
pop
fcmove
inc
movs
sbb
rol
push
ret
push
movs
aaa
shl
js
pop
jmp
xchg
xlat
repz
mov
daa
dec
jne
and
out
je
icebp
cmps
adc
pop
fs
push
imul
dec
(bad)
pop
pop
rol
repz
int3
xchg
mov
punpcklwd
pop
pop
mov
adc
and
jecxz
stc
push
loope
xor
cdq
push
lods
add
mov
std
int
push
pop
dec
fcomip
xor
xchg
stc
clc
jmp
jne
out
pop
retf
xlat
mov
(bad)
cmps
adc
add
aaa
mov
jg
pop
inc
adc
repnz
pop
cmovg
pop
rcl
mov
cs
fwait
mov
sub
in
call
scas
pop
daa
lods
xlat
xlat
inc
ins
scas
dec
neg
xchg
test
add
fwait
popf
add
push
fisubr
sbb
jno
xor
jg
and
xor
pop
pop
cdq
and
daa
test
jp
push
sbb
adc
pop
and
cwde
xor
jge
jb
pop
inc
jne
mov
xor
pusha
shr
in
fs
aam
jnp
inc
mov
push
mov
xor
movs
jl
xchg
dec
lock
les
sbb
cmps
cmp
jmp
fwait
sbb
mov
loope
mov
jp
fisttp
(bad)
adc
stc
nop
add
ins
fs
sub
jno
sbb
mov
inc
loopne
adc
enter
and
inc
in
in
jmp
call
call
rcr
arpl
mov
fs
in
lahf
or
mov
or
xlat
ins
mov
retf
lock
mov
or
add
inc
mov
mov
xlat
or
add
mov
jg
imul
out
int
cli
les
cmps
mov
mov
push
xchg
push
jne
shr
movs
sub
arpl
dec
cld
loopne
enter
mov
jno
imul
aas
xor
xchg
stos
lea
mov
xor
data16
pusha
sbb
lea
push
adc
test
xor
sub
test
dec
gs
dec
es
adc
push
repnz
mov
cli
js
lahf
sub
rcl
push
sbb
sbb
sub
dec
ins
icebp
iret
shr
ins
rcr
shl
nop
mov
(bad)
xchg
sub
lds
mov
add
push
loopne
call
pop
add
(bad)
in
cmp
icebp
jns
add
pop
sti
sar
repnz
jle
mov
pushf
ror
jo
loopne
into
jmp
cs
jbe
shl
pop
push
stc
adc
(bad)
clc
xlat
adc
push
add
pop
push
loopne
cmps
jl
ret
enter
sahf
push
xor
call
cdq
in
in
inc
or
in
mov
aad
cmp
pop
xchg
and
jge
lahf
or
inc
inc
sbb
xor
fdivp
add
pop
push
sbb
pop
sub
inc
popa
bound
sub
adc
(bad)
hlt
mov
inc
cmp
mov
mov
push
xadd
xor
fld
jb
sar
push
push
add
xor
fild
cmp
nop
in
lds
push
aas
dec
mov
test
and
cld
xor
sbb
xor
or
scas
inc
pop
cmps
mov
loop
repz
mov
jb
iret
out
mov
push
inc
into
retf
lahf
sbb
daa
mov
in
jbe
jae
push
das
inc
stc
aas
and
add
test
movs
sar
xadd
fnstenv
lock
xchg
jecxz
push
jns
cmp
jo
fs
fdivr
jnp
mov
dec
(bad)
and
(bad)
(bad)
and
fcom
enter
fiadd
mov
jo
or
cmps
mov
xchg
ins
in
out
popa
fwait
pop
stos
aas
jmp
fs
js
sub
dec
cmp
cmp
int3
(bad)
xchg
fmul
iret
adc
aam
push
lods
xchg
inc
inc
outs
daa
pop
ins
and
or
es
cmp
fmul
mov
jno
push
div
jnp
mov
push
out
mov
je
push
mov
mov
dec
js
lea
cmp
fisub
scas
dec
or
sbb
leave
cmc
out
sti
retf
fwait
mov
call
and
mov
jnp
jge
push
mov
mov
jbe
aad
(bad)
xchg
dec
push
fistp
cmp
jmp
dec
adc
inc
fild
or
mov
test
icebp
jmp
outs
gs
add
xor
mov
sub
or
jae
push
cmp
scas
sbb
lods
jmp
das
ret
loopne
xor
push
cs
mov
cmp
bound
or
and
int3
xor
cmp
clc
adc
xor
call
aam
ret
popa
in
dec
loopne
dec
xchg
rcl
push
(bad)
jmp
add
repz
jp
inc
cmc
repz
loop
sbb
xchg
push
mov
xor
dec
pop
outs
int
cmp
(bad)
arpl
ins
shl
mov
lea
push
mov
sub
sub
fistp
push
in
test
mov
cli
add
aad
jmp
loopne
jg
out
fisubr
mov
push
sub
adc
mov
pop
dec
gs
(bad)
mov
scas
cmps
sahf
lahf
jmp
scas
push
jge
inc
push
mov
xchg
stos
aam
push
ins
add
out
mov
loope
loope
mov
ja
pusha
adc
aam
adc
test
push
imul
xchg
or
jo
xchg
inc
gs
ja
pop
cdq
sub
mov
mov
jge
mov
mov
or
mov
sti
outs
cmc
mov
jl
mov
jg
scas
push
lods
adc
sbb
pop
fwait
push
cmp
hlt
sub
jle
mov
dec
xor
aaa
repnz
out
jbe
inc
retf
sbb
or
xor
adc
xchg
mov
inc
pop
adc
nop
jns
mov
movs
fs
push
mov
xchg
adc
and
dec
rcr
xchg
out
and
add
xchg
cwde
lock
lods
push
or
xchg
inc
(bad)
cmp
pop
pop
std
and
dec
call
sub
fdivr
push
mov
inc
adc
fcomp
dec
push
jl
mov
sar
mov
bound
mov
fiadd
mov
ins
fsubr
jle
test
dec
mov
test
mov
mov
mov
out
iret
popf
inc
dec
adc
loope
mov
pop
popf
pop
call
pop
fist
xor
mov
xor
test
cmp
lods
jmp
cmp
sub
mov
fimul
pop
loop
loopne
xlat
leave
mov
das
pop
pusha
inc
es
in
stos
pop
mov
jne
xor
cmps
mov
push
shr
push
call
retf
fild
push
clc
jge
push
mov
and
aad
dec
push
push
push
lods
sbb
mov
add
jo
js
pop
popa
test
push
outs
push
mov
cmps
adc
inc
xor
inc
mov
push
movs
mov
in
ins
and
mov
mov
pop
(bad)
movs
das
sub
push
out
dec
sub
and
rcl
clc
xchg
push
pop
imul
and
(bad)
mov
rep
add
(bad)
cmp
mov
jae
hlt
scas
sbb
test
sub
pop
in
shr
dec
ret
inc
inc
sahf
ret
mov
adc
mov
sbb
jno
popa
leave
add
ss
mov
mov
push
cs
outs
push
mov
xchg
mov
inc
repnz
cmp
or
sub
test
cmp
ret
push
jl
icebp
sbb
test
out
mov
xlat
(bad)
push
mov
sbb
int3
inc
push
xchg
loopne
mov
or
and
sbb
mov
xchg
inc
add
mov
jns
pop
lahf
mov
jne
daa
in
in
push
adc
pop
in
rcl
das
mov
cmps
xchg
pop
clc
fdivr
lods
jo
ret
(bad)
mov
pop
ins
stos
add
or
aad
mov
add
sub
and
lahf
mov
pop
push
jl
scas
pushf
and
fdiv
pop
or
inc
xchg
mov
add
inc
or
xor
sti
repnz
(bad)
jmp
repz
push
dec
add
pop
addr16
xlat
sbb
or
sbb
sub
pop
shr
cmps
leave
xchg
retf
pop
mov
int3
es
clc
or
mov
movs
cmp
fld
mov
cdq
inc
or
sbb
jp
jp
stc
fidivr
mov
xchg
pop
sbb
mov
lds
inc
sbb
pop
pop
and
dec
scas
xor
jmp
mov
addr16
xchg
mov
cmps
std
mov
lahf
mov
fbld
inc
movs
loop
jle
ds
dec
mov
popf
jbe
sysret
fld
and
int3
jae
fild
shl
add
(bad)
outs
pushf
or
xor
test
sub
les
call
jbe
cmp
loop
jmp
cmp
jecxz
mov
std
push
aam
inc
aaa
into
test
jne
add
pop
rol
cmp
jno
dec
fcmovb
mov
std
cmps
xor
cli
add
cs
lods
add
pop
push
mov
push
push
push
push
mov
mov
iret
xchg
(bad)
dec
add
sbb
jmp
inc
test
adc
scas
scas
and
inc
xchg
sbb
push
cs
sub
stc
add
adc
sub
mov
xor
and
lods
sbb
js
sub
xchg
(bad)
pop
dec
sub
retf
pop
je
arpl
adc
sbb
pop
mov
sub
mov
sub
and
jmp
cld
scas
xor
push
and
fwait
xchg
loopne
pop
aas
sbb
dec
mov
adc
mov
stos
xchg
xor
inc
leave
xchg
or
cmc
xor
xchg
jnp
jge
rcl
cdq
div
jne
hlt
cmp
push
push
adc
cld
mov
jbe
in
ss
sub
xor
sbb
in
or
jb
push
rcr
inc
pusha
ja
call
jno
mov
es
leave
sub
das
out
cmps
mov
aam
jecxz
imul
xor
add
push
mov
xor
mov
jb
popa
push
jae
add
inc
add
xchg
xchg
push
lds
test
test
mov
sbb
pop
or
test
test
repz
aas
ja
scas
repnz
push
dec
test
xchg
pop
daa
add
(bad)
mov
xor
lea
sbb
inc
test
push
push
mov
adc
pushf
fdiv
xor
adc
mov
add
fcomp
jmp
pop
dec
lock
dec
add
lahf
in
jne
icebp
loop
mov
xor
xchg
sub
mov
jg
out
mov
retf
in
stc
push
arpl
xchg
jp
arpl
add
fwait
call
dec
(bad)
jmp
mov
sub
test
push
adc
jg
fstp
mov
cmp
ins
mov
fdivr
cmp
or
outs
gs
dec
out
rol
(bad)
dec
fld
jb
mov
mov
mov
sbb
mov
sahf
xchg
mov
pushf
test
sti
adc
adc
lods
(bad)
xchg
mov
dec
imul
out
pop
sub
fdivr
pushf
xchg
movs
cmps
fsubr
in
mov
jmp
mov
xor
sub
mov
pop
inc
daa
ja
jne
and
add
call
cli
icebp
add
jmp
shl
aam
fidivr
push
je
xor
aaa
xchg
cmp
pop
jl
dec
add
out
pop
jp
xchg
cli
push
fldcw
adc
fist
xor
retf
ja
pop
cmp
fcmovne
nop
xor
fisttp
pop
aam
cmp
(bad)
daa
popf
ss
les
pop
add
push
cmps
mov
dec
jo
xchg
push
popf
mov
adc
cdq
jp
fwait
mov
or
add
xchg
sbb
ds
push
mov
jecxz
jle
imul
dec
loope
fisttp
push
push
je
(bad)
mov
repnz
mov
std
test
mov
xchg
adc
shl
inc
movs
jns
adc
xchg
leave
xor
mov
mov
add
fmul
dec
and
sbb
jo
ficomp
push
mov
push
or
inc
mov
fisub
outs
mov
xor
jl
cmp
and
pop
sbb
push
mov
jnp
sar
sbb
adc
cwde
push
mov
pop
pushf
dec
mov
push
stos
int
retf
mov
fild
jmp
cmps
sbb
cdq
add
push
xchg
mov
out
pop
lods
in
jmp
push
popf
in
mov
cmp
xchg
loope
idiv
aam
iret
stos
push
ret
repnz
and
push
add
or
ror
and
pop
cmp
imul
or
xor
add
test
mov
sbb
psubw
sub
movs
pop
mov
mov
inc
ins
cmp
jno
lahf
fisubr
xchg
xor
xchg
in
ja
(bad)
sar
sbb
add
mov
xchg
(bad)
mov
fstp
ja
and
sbb
movs
loopne
fldenv
test
or
cwde
retf
cmp
adc
hlt
mov
xor
jnp
std
push
dec
in
xchg
in
and
jmp
xchg
test
fwait
outs
sbb
sub
jmp
imul
out
mov
xchg
add
push
js
xchg
xor
jae
test
lock
mov
stos
jl
mov
and
xchg
xchg
retf
in
cmp
call
sbb
xor
lds
inc
inc
xchg
dec
sbb
lahf
inc
scas
in
xchg
sub
js
xor
cmp
push
pop
sub
ret
jecxz
shl
push
adc
or
xchg
xchg
pusha
mov
test
xchg
jb
sub
jbe
adc
mov
inc
or
in
xchg
inc
jp
sbb
mov
aad
jge
daa
mov
jmp
lahf
(bad)
cmc
dec
out
jmp
outs
or
loope
cmps
ins
xchg
xchg
cld
faddp
das
sub
add
test
push
bound
imul
mov
jle
loop
mov
fldenv
pop
int
dec
sub
mov
mov
xor
dec
popa
jecxz
push
add
ins
inc
ror
cmp
sub
lods
lds
and
push
mov
jle
shl
int
jl
push
rcr
clc
sbb
mov
xor
mul
shr
or
rcl
jmp
push
xchg
xor
call
test
and
jo
jle
fdiv
cli
xor
movs
lea
xchg
(bad)
pop
and
enter
cmp
call
in
xor
loope
sub
xor
pop
jg
mov
sti
adc
out
push
fstp
push
and
xchg
push
xchg
sub
pop
sub
mov
dec
pop
sti
dec
cmovp
cmp
gs
add
mov
inc
push
add
lahf
lds
out
jbe
or
xchg
out
or
xchg
ret
inc
inc
sbb
mov
out
mov
jl
jne
add
mov
inc
popf
cli
mov
jo
pushf
lock
mov
sub
jecxz
std
jne
sbb
pop
sub
retf
out
xchg
scas
pop
pop
xchg
sbb
imul
mov
sti
mov
sub
popa
xchg
and
pusha
shl
inc
rcl
push
fistp
sbb
dec
lods
pop
cmp
xchg
mov
and
std
imul
(bad)
jl
test
leave
and
mov
mov
jmp
mov
and
xor
lds
in
jl
pop
adc
xchg
jecxz
mov
jnp
fnsave
ins
jae
leave
mov
das
jg
cli
call
jmp
mov
leave
add
push
push
add
dec
test
or
dec
aam
in
mov
sar
cmp
stos
in
int3
mov
cmp
pop
cmps
lahf
loopne
and
ror
(bad)
adc
(bad)
cdq
xchg
test
ret
pop
and
dec
add
adc
mov
lahf
and
xchg
fnstenv
ss
or
jno
xchg
aaa
in
xor
stc
cmc
xchg
test
(bad)
into
inc
loope
mov
lods
cmp
jl
cmp
out
push
push
mov
mov
imul
aas
xchg
popa
add
call
pop
sti
fnstcw
sbb
mov
xor
sbb
mov
(bad)
cmp
(bad)
adc
jne
cs
lock
lods
jne
stc
xchg
popa
push
mov
add
adc
push
jb
xor
inc
jb
leave
pusha
scas
push
(bad)
fwait
or
push
cmps
cld
xor
push
(bad)
pop
call
dec
nop
xor
fiadd
xchg
mov
pop
fisubr
jb
movs
add
mov
pop
shr
dec
xor
out
leave
js
repz
pushf
push
(bad)
dec
sub
sub
fwait
sub
sub
jp
in
mov
mov
aad
mov
div
rcl
jnp
mov
cdq
jge
add
pusha
mov
frstor
push
iret
jge
mov
mov
sbb
mov
add
jmp
push
sti
mov
inc
mov
fcom
pop
mov
sub
push
out
mov
hlt
(bad)
into
(bad)
and
repz
inc
xchg
pop
int3
aam
iret
mov
mov
or
cdq
pop
adc
push
fist
mov
ins
shr
mov
jecxz
ins
sub
lods
mov
cmp
mov
pop
adc
fisttp
dec
xchg
xor
add
pop
leave
mov
xchg
ret
fdiv
pop
test
mov
xlat
cmps
sub
jmp
in
xchg
and
and
mov
and
mov
loopne
inc
or
popa
add
ss
(bad)
sbb
shl
pop
sbb
push
call
xchg
shr
jnp
mov
mov
add
sbb
adc
xchg
sub
jne
inc
pop
stos
int3
sub
retf
xor
addr16
xor
xlat
(bad)
test
jp
adc
inc
mov
adc
je
sbb
inc
int
push
jecxz
(bad)
sub
dec
cdq
sbb
shl
repnz
adc
lods
push
idiv
enter
jae
mov
add
leave
adc
mov
sbb
ret
cdq
je
out
pop
ds
fdiv
push
ret
ja
and
arpl
and
dec
and
in
xor
retf
mov
mov
in
sahf
cdq
fidiv
mov
dec
dec
mov
add
fisub
jmp
cmp
or
pop
out
jnp
inc
inc
cmp
ss
push
mov
jo
es
sbb
sub
dec
(bad)
xchg
arpl
mov
xor
sbb
and
neg
mov
xchg
push
xor
adc
or
cmp
push
lds
les
xor
repz
adc
and
outs
xchg
std
and
sbb
mov
inc
sub
xchg
pop
xchg
or
and
bound
xchg
mov
adc
xchg
gs
mov
arpl
push
cli
out
push
popa
xor
adc
xchg
test
mov
or
xchg
push
stos
adc
mov
fwait
add
inc
pop
add
jecxz
xor
retf
cli
cli
push
or
inc
daa
loopne
ficomp
xor
aaa
sahf
sbb
cmc
cld
icebp
and
fs
and
outs
inc
(bad)
loope
daa
dec
(bad)
dec
(bad)
mov
ins
jmp
mov
mov
lea
repnz
jp
push
pop
dec
cmp
push
je
adc
nop
mov
fmulp
retf
lea
dec
cld
cmc
sub
mov
mov
xor
std
rcr
push
and
or
test
mov
dec
ret
jle
lods
sub
popa
repz
ja
mov
fsub
imul
cmp
mov
sub
pushw
cmp
std
scas
mov
pop
pop
jmp
pop
sub
bound
jmp
cmps
mov
loope
sahf
sub
(bad)
(bad)
dec
mov
adc
and
jo
cs
call
scas
fucomi
xchg
pop
mov
xchg
call
xor
popa
imul
push
sbb
leave
fwait
jnp
in
jmp
gs
loope
push
stos
repz
sub
jmp
(bad)
imul
icebp
popf
in
sbb
pop
and
and
dec
or
inc
scas
pusha
je
jle
daa
das
sbb
push
fwait
jns
cdq
icebp
(bad)
(bad)
jge
out
sub
ja
or
dec
loope
mov
mov
cmp
xchg
xchg
je
je
sub
pop
jle
stc
jg
fstp
arpl
test
pop
in
lods
add
adc
add
cmp
sub
outs
(bad)
ja
add
mov
jne
xor
add
sub
xchg
inc
mov
inc
pop
test
dec
or
and
ror
jge
or
lods
lahf
xor
xchg
sbb
push
xchg
lea
cli
test
(bad)
ja
dec
and
loop
add
sub
arpl
cmp
sub
dec
pop
fiadd
and
mov
push
scas
cmps
or
sub
mov
push
popa
gs
loopne
loope
xor
leave
add
xor
jmp
sbb
add
ss
adc
cmps
rcl
jnp
add
clc
pop
cmp
aas
jmp
test
jo
(bad)
jle
mov
aad
sar
jo
mov
shl
or
inc
add
xchg
push
bound
sub
movs
cld
add
dec
cmp
call
outs
push
fwait
mov
pop
pop
pusha
std
mov
and
push
sbb
stos
pop
xchg
pop
push
adc
sub
mov
fsubp
test
mov
imul
jns
test
adc
and
and
push
pop
enter
xor
jbe
mov
pop
sub
push
xchg
dec
lahf
(bad)
clc
push
inc
pusha
mov
fcomp
std
mov
add
mov
int
inc
dec
jns
jmp
mov
fisubr
pushf
mov
dec
js
sub
inc
mov
fmul
sub
movs
mov
out
psubb
adc
xor
jns
mov
xor
inc
out
xor
pop
imul
cmp
pop
jmp
dec
xlat
push
xor
fwait
popa
scas
jg
xchg
add
pushf
test
cli
fistp
xor
cmps
xchg
es
leave
and
movs
cld
leave
inc
es
clc
or
jnp
sub
mov
popf
inc
jns
scas
int
shl
push
jbe
in
aaa
jb
add
(bad)
mov
add
jno
sub
jo
fiadd
in
fucomip
push
ja
ficom
mov
mov
aaa
adc
pop
lea
add
test
test
aas
adc
dec
cmp
dec
icebp
jae
div
call
test
lea
mov
(bad)
iret
stos
adc
xchg
push
xchg
mov
adc
mov
imul
mov
xchg
out
fucomip
add
push
inc
add
pop
mov
out
xchg
bound
jmp
cmp
lods
loopne
je
push
ret
aas
mov
lahf
ja
icebp
test
sbb
xchg
fmul
inc
jl
std
les
jg
test
stos
ins
mov
pop
and
mov
into
mov
in
iret
pop
ins
icebp
dec
pop
push
clc
xor
lock
push
jp
xor
test
mov
push
adc
mov
and
mov
retf
sti
ins
out
inc
lds
xor
shr
mov
sbb
arpl
mov
fdivr
out
xor
sbb
retf
pop
test
sti
pop
out
imul
or
or
add
hlt
add
xor
out
pop
cmps
and
pusha
rcl
mov
mov
pop
push
stos
in
jmp
icebp
pusha
outs
xlat
adc
fisub
xor
repnz
cwde
mov
dec
gs
jnp
jne
xor
stc
(bad)
jbe
mov
jae
push
add
movs
push
ja
fisttp
push
xor
dec
movs
js
push
fdiv
ret
fnsave
push
inc
cld
les
test
cmc
add
dec
test
movs
or
jge
bound
cmp
mov
call
ficomp
retf
in
add
les
mov
xor
stos
test
mov
int3
in
sbb
mov
jl
mov
scas
jmp
mov
jl
adc
xchg
jmp
mov
pop
or
repnz
pop
in
out
cmp
addr16
aas
jno
int
ret
push
data16
dec
add
mov
jnp
iret
xchg
rol
test
add
mov
mov
push
inc
rcr
sahf
sbb
adc
xchg
jnp
xor
and
imul
loopne
push
jge
jmp
xchg
sbb
mov
addr16
mov
loopne
mov
(bad)
loop
adc
push
mov
or
fistp
dec
fwait
cmp
movs
sar
mov
loope
mov
xor
outs
xchg
es
les
out
jnp
sub
push
jne
pop
sti
sbb
fsubr
pop
sbb
imul
and
loope
out
stc
xlat
icebp
inc
jl
es
out
leave
sbb
lods
outs
jmp
clc
(bad)
pop
jecxz
adc
pop
movs
xor
cs
push
mov
outs
test
lods
mov
sub
xor
push
jmp
jmp
daa
push
and
xchg
test
js
loop
loopne
cwde
mov
add
bound
cdq
lock
cld
jnp
inc
out
push
or
push
gs
or
mov
fcomp
or
cmp
jl
add
push
cdq
shr
ja
mov
push
push
mov
and
inc
xchg
mov
mov
xor
(bad)
lahf
mov
sub
cmc
into
inc
popa
or
pmovmskb
(bad)
out
xor
in
dec
cmp
lods
repz
jmp
mov
mov
(bad)
mov
or
mov
jno
jbe
shl
xor
xor
aad
jl
adc
cs
sub
mov
dec
js
adc
push
xchg
shr
adc
ret
push
mov
jl
gs
xchg
cmps
scas
add
jb
lods
pop
sub
fidivr
add
(bad)
cmp
jns
idiv
sub
imul
mov
inc
sti
xchg
pop
push
movs
sbb
aas
test
shr
push
sub
mov
jmp
out
fstp
add
jmp
xor
sar
push
dec
jae
enter
adc
iret
or
xchg
int
iret
paddq
call
jns
test
ja
outs
xchg
out
cmp
aad
push
jnp
loope
xor
inc
jo
stos
jmp
sbb
mov
or
call
outs
bound
mov
adc
scas
inc
inc
inc
sub
sar
add
inc
inc
adc
in
inc
add
mov
(bad)
push
mov
jnp
out
push
inc
inc
pop
inc
mov
mov
sbb
mov
mov
fwait
rcl
repz
fld
jbe
dec
int3
push
pmulhuw
cwde
adc
mov
mov
popa
outs
cmp
bound
sti
sbb
clc
sub
sub
adc
sbb
jecxz
mov
mov
pushf
pop
sub
sbb
fs
mov
cmp
mov
jns
pop
pop
out
and
leave
jg
push
and
test
xlat
jmp
inc
movs
in
dec
outs
push
clc
pop
loop
test
call
pop
inc
adc
add
stos
mov
sbb
add
inc
cmp
push
in
mov
push
imul
out
fdivr
add
push
shr
mov
mov
aaa
xchg
mov
cwde
sti
push
or
add
fdiv
pop
bound
in
and
push
xchg
xor
xor
rcl
sub
fidivr
sub
mov
ret
loope
adc
movs
xor
arpl
xor
(bad)
lea
std
inc
ss
mov
jbe
dec
xchg
sub
cmp
add
pop
sub
fmul
xchg
loop
ret
pusha
not
es
mov
and
aas
bound
in
jae
and
out
add
cmp
stc
inc
cmp
and
xchg
out
adc
push
je
sub
loop
pop
repnz
rcl
mov
jne
and
adc
pop
sbb
add
loop
inc
jle
sar
pop
idiv
imul
sub
cmp
aas
repnz
mov
repz
rcr
movs
or
jno
or
push
leave
ja
cmp
add
pop
sbb
gs
inc
mov
dec
jge
inc
ins
sbb
push
jmp
mov
dec
out
rol
inc
(bad)
retf
jmp
cmp
int3
lods
or
in
arpl
push
push
dec
rol
cmovne
cmp
scas
push
inc
arpl
adc
outs
dec
push
inc
mov
pop
mov
std
ret
jp
xor
adc
jg
sbb
add
cmp
inc
sbb
ds
jecxz
mov
arpl
and
(bad)
adc
mov
mov
clts
inc
add
add
jle
cdq
inc
ror
jb
sbb
dec
ror
cmp
xor
clc
add
loop
jecxz
ja
icebp
outs
cmps
adc
fwait
pop
mov
push
mov
adc
push
sub
xor
mov
daa
mov
movs
std
sub
movs
fld
pop
fdiv
(bad)
in
enter
or
cmp
fwait
push
jmp
ret
mov
xor
(bad)
jmp
sub
mov
loopne
jb
dec
cli
les
push
test
cmp
jmp
jmp
(bad)
cmp
adc
or
in
jp
stos
shr
adc
or
dec
xchg
mov
enter
js
sbb
call
sub
dec
fsub
xor
mov
mov
push
(bad)
mov
xor
jmp
fs
push
xchg
cdq
scas
adc
and
push
jle
outs
pop
mov
fstp
(bad)
je
aad
sub
jg
scas
(bad)
data16
dec
(bad)
call
jp
push
cwde
retf
ja
lods
data16
cmp
pushf
sbb
push
dec
xor
jmp
aas
rcl
daa
add
cld
push
add
bnd
stos
fdivrp
fmul
push
lahf
mov
xchg
ss
mov
pop
mov
sti
pop
dec
inc
adc
sbb
xor
dec
(bad)
nop
or
mov
jmp
clc
dec
xor
into
xor
fsubr
pop
(bad)
push
jle
jo
push
mov
inc
idiv
sbb
or
retf
xchg
das
jb
into
push
cmp
xor
jbe
scas
cwde
sbb
rcr
movs
adc
mov
jle
mov
and
add
out
mov
test
jnp
cwde
fs
test
fstp
push
imul
mov
sub
pop
call
fsub
fbstp
push
sub
es
enter
push
sub
data16
mov
xchg
mov
push
or
or
ja
jecxz
int3
call
pop
ins
outs
aad
bound
xor
leave
mov
adc
dec
clc
jmp
mov
std
mov
sbb
cmc
adc
cli
add
pushf
xchg
mov
xchg
addr16
and
in
and
jns
mov
pop
cmp
(bad)
lds
pop
pop
add
jnp
mov
movs
sar
lahf
or
fbstp
push
jge
pop
cmp
test
xchg
push
jmp
iret
pop
ins
pop
jge
mov
lahf
mov
and
cmp
mov
outs
jae
out
cwde
cmc
jo
mov
mov
or
jns
mov
pop
int3
pop
popa
xchg
rol
test
xchg
cmp
jae
dec
jo
add
fisttp
es
jo
scas
or
fnsave
ja
test
sub
xchg
mov
(bad)
mov
mov
dec
jmp
xchg
inc
stos
sbb
push
in
stos
and
mov
xchg
das
(bad)
repnz
mov
jns
in
bound
cmp
mov
aam
mov
out
mov
or
repnz
or
packsswb
inc
ins
pop
push
jbe
mov
and
sub
(bad)
mov
hlt
inc
xor
(bad)
fadd
test
fnstcw
sbb
sbb
sbb
dec
enter
cmp
add
daa
jno
(bad)
rol
sub
mov
jbe
mov
add
add
adc
dec
push
mov
add
fbld
pushf
retf
xchg
inc
es
fld
(bad)
cmc
iret
retf
sbb
dec
or
inc
out
xor
push
jmp
xor
sub
mov
call
push
xor
or
(bad)
gs
in
xchg
(bad)
sub
ret
sti
scas
add
js
test
shl
repz
shl
or
repz
push
bnd
push
outs
test
and
mov
movs
pop
mov
mov
cmps
bound
popf
push
mov
bound
sub
xchg
adc
out
and
fnsave
call
test
push
and
sar
dec
dec
jb
push
pop
popf
pop
ficomp
cmp
shr
push
fs
jl
dec
into
xchg
cmp
xchg
or
out
imul
sti
xchg
mov
dec
ret
jge
cmc
cmc
jg
(bad)
mov
je
mov
dec
movs
cwde
fs
data16
je
popf
and
sub
cmp
shr
sti
jecxz
pop
xchg
retf
addr16
jmp
jg
loope
rcl
pop
bound
mov
je
mov
mov
fiadd
cwde
jb
test
jecxz
imul
xchg
jns
scas
cmp
(bad)
jl
mov
jmp
sbb
or
sbb
mov
pusha
pop
add
popf
dec
push
ss
neg
xchg
test
jb
xchg
clc
cmp
or
sub
cmp
xchg
push
imul
in
pop
test
loopne
stos
mov
or
push
test
push
pop
push
mov
or
sbb
xchg
xchg
xlat
retf
mov
in
ret
sub
das
call
jns
je
ins
inc
jg
fdiv
cmp
pop
inc
xlat
mov
fmul
(bad)
dec
repnz
push
idiv
inc
sub
pop
push
pop
sub
pop
pusha
cmp
int3
out
cmp
jge
sub
leave
xchg
rol
(bad)
xor
mov
add
adc
popf
stos
mov
jp
adc
pop
data16
out
aad
mov
das
lock
inc
mov
push
pusha
and
or
ins
jmp
push
sbb
dec
mov
adc
jmp
pop
sar
pop
in
psllw
lock
in
push
movs
(bad)
fwait
movs
movs
cmp
pop
jge
ds
retf
jne
in
std
mul
icebp
xchg
xor
pop
xor
(bad)
(bad)
sub
or
adc
clc
les
lea
or
sar
push
js
(bad)
xchg
iret
cwde
jo
test
jb
shl
cmp
cmp
adc
sub
out
xor
les
shl
rcr
cmp
pop
ss
inc
sbb
cli
imul
aaa
xor
mov
ror
jb
pop
sub
dec
int
rcl
mov
inc
sbb
ins
cli
popf
ret
jl
loopne
vorps
cli
lea
call
hlt
in
lds
stos
and
jge
jno
pop
add
into
lock
imul
mov
rcl
test
and
push
call
shl
(bad)
dec
(bad)
cmps
pop
push
push
out
inc
mov
fst
(bad)
fcmovb
data16
add
pop
jne
pop
pop
fcom
addr16
out
mov
jo
dec
ins
div
fcomp
fidivr
pop
aam
adc
inc
ret
sub
das
jg
xchg
or
loopne
sahf
dec
xor
sti
ds
inc
ret
mov
shl
xchg
gs
clc
mov
fidiv
fcomip
arpl
aam
gs
sbb
xchg
stc
jb
xor
fs
pop
test
out
fwait
pop
movups
xor
popf
xor
xor
imul
(bad)
adc
int3
ins
sbb
hlt
cmc
mov
add
lods
clc
or
(bad)
lahf
mov
jmp
(bad)
and
and
jmp
loopne
add
cmps
mov
(bad)
lods
loope
call
movntq
out
lods
xchg
ror
outs
arpl
gs
outs
jmp
jg
loopne
(bad)
cmp
lea
xchg
stos
adc
add
retfw
inc
ins
mov
loopne
lock
mov
dec
dec
sub
and
bound
loopne
ja
lock
stos
fadd
inc
outs
dec
and
cmp
or
adc
push
aaa
ins
inc
push
dec
xor
call
lods
outs
fidiv
jno
dec
add
int3
xor
stc
ret
xor
mov
lock
mov
loopne
shr
cli
mov
inc
dec
mov
into
cwde
gs
pop
push
or
jle
test
push
push
stos
push
sub
(bad)
jle
dec
dec
ins
pop
add
xchg
add
in
inc
mov
push
pop
xor
scas
sbb
jae
cmps
ja
dec
test
xor
jle
dec
xchg
es
inc
inc
shl
sub
or
sub
dec
jecxz
mov
std
mov
lahf
enter
xor
push
push
or
xor
jl
push
cmp
shl
jne
scas
fs
xchg
push
shl
pusha
enter
lds
and
pop
add
sti
mov
inc
mov
and
lahf
sbb
arpl
adc
scas
dec
(bad)
call
rcr
aam
out
out
pop
sub
pop
jo
sub
stc
push
out
cmp
fnsave
call
fsubr
mov
mov
les
ret
or
pushf
and
inc
xor
mov
das
xor
in
or
mov
rol
fdivr
mov
inc
mov
ret
inc
add
repz
lea
inc
and
cmps
mov
popf
daa
(bad)
xor
scas
sub
arpl
and
je
cwde
in
sbb
aad
or
sahf
jecxz
pop
out
mov
out
pop
sub
xor
adc
cld
cmp
aas
sub
or
in
(bad)
jo
cmp
xor
or
sub
in
adc
adc
pop
add
retf
arpl
add
sti
mov
data16
cmps
repnz
movs
test
adc
jb
je
addr16
fisttp
mov
push
fwait
or
xchg
loopne
das
inc
stos
test
adc
(bad)
mov
or
cmps
aaa
stos
call
ret
or
adc
pop
(bad)
cs
test
dec
push
repz
jbe
mov
sti
cs
ret
jno
pop
sbb
mov
pop
imul
dec
or
xchg
cmp
retf
fwait
jbe
in
sti
sbb
push
rol
ret
in
or
mov
sbb
adc
hlt
ret
and
ins
cli
jbe
and
fs
mov
jbe
test
lea
or
pop
or
fdivr
jecxz
jle
jae
stc
pop
fnsave
and
popf
mov
xor
cmps
sahf
std
ja
inc
es
movs
add
fsub
test
fimul
xchg
sub
dec
loop
inc
inc
mov
stos
mov
scas
dec
push
xlat
in
mov
lahf
out
outs
and
mov
fcmovnu
cs
sahf
jg
xchg
or
adc
or
(bad)
mov
aas
stc
movs
and
push
out
repz
std
div
pop
jg
cmp
in
inc
mov
stc
(bad)
adc
in
stos
or
xlat
ficom
cmp
daa
mov
stos
mov
add
xor
sar
aas
mov
adc
adc
add
dec
icebp
sbb
stos
iret
jecxz
inc
jno
and
out
sahf
rcr
sub
xchg
stos
into
int3
(bad)
jg
aam
addr16
sbb
add
xchg
pop
mov
scas
ss
jne
xor
pop
inc
xchg
mov
add
in
test
sbb
js
aam
and
push
add
mov
in
jmp
aam
fs
mov
jb
inc
shr
or
cmc
not
xchg
retf
and
jb
imul
cmp
inc
add
dec
xchg
xchg
aas
dec
dec
sub
mov
arpl
outs
mov
and
ja
inc
cli
sub
ficom
push
mov
mov
adc
scas
xor
dec
pushf
jb
mov
cld
inc
or
cli
aam
outs
es
ss
dec
int3
ret
jns
je
pop
loope
stos
repz
imul
jp
enter
(bad)
pusha
or
sbb
loope
jo
xlat
cmp
adc
sub
pop
dec
pop
push
push
outs
mov
mov
cwde
(bad)
sbb
gs
jns
pop
inc
pusha
shl
add
jo
cmp
(bad)
push
mov
lock
cmp
push
int3
mov
out
jmp
jns
xchg
jns
rcl
add
lea
adc
popf
adc
data16
mov
xchg
(bad)
xor
into
arpl
jbe
mov
sub
(bad)
xor
add
fsubp
mov
dec
dec
icebp
ja
cmp
shl
push
and
shl
add
mov
test
les
pushf
jae
adc
jae
jne
loopne
cmp
icebp
mov
add
les
scas
dec
jmp
int3
pop
ret
xchg
dec
into
dec
enter
sub
loope
out
pop
je
or
jo
bound
xor
push
repnz
data16
cmps
test
push
fnstsw
cmp
xchg
adc
shr
adc
stos
ret
jecxz
cdq
retf
lods
repz
fnstcw
jle
pop
mov
or
and
pop
ss
xchg
test
mov
pop
and
or
sbb
jns
or
dec
xchg
adc
imul
adc
dec
or
push
outs
cli
sub
cmps
adc
mov
fwait
cmp
sub
cld
push
sub
inc
movs
cmp
imul
lahf
jle
test
cs
mov
movs
fld
lds
out
pusha
jp
xchg
cmps
push
test
ret
mov
xchg
rol
xor
lea
xor
mov
test
cmp
push
test
imul
adc
dec
pusha
repnz
test
sar
clc
outs
pop
retf
adc
xor
adc
(bad)
stc
repz
stos
mov
lea
mov
test
inc
loop
add
or
clc
mov
cmps
iret
sti
push
push
mov
mov
repnz
adc
pop
sbb
mov
test
push
push
sbb
mov
lds
addr16
jg
dec
xchg
bound
mov
fwait
fwait
jg
mov
and
cmp
push
sub
dec
mov
fmul
push
dec
test
pop
dec
pop
lock
adc
mov
xor
imul
pop
sub
mov
jle
add
(bad)
cmp
xor
mov
fild
or
push
jo
dec
cli
fst
and
int3
in
adc
popf
mov
cld
and
push
add
adc
sub
stos
rcl
es
loop
gs
mov
int3
pop
mov
and
jo
ins
sub
dec
retf
jp
jmp
push
pop
inc
jmp
sti
sub
inc
push
and
inc
repnz
cmp
mov
cmps
test
cmp
clc
sbb
cmp
mov
adc
pop
mov
stos
stos
mov
adc
je
gs
loope
xchg
pop
retf
push
pop
push
test
dec
fprem
inc
imul
out
scas
popf
mov
data16
push
sbb
jnp
ror
pop
cmp
dec
test
add
xchg
jle
fsubr
pusha
test
mov
rcl
fisttp
icebp
xchg
xchg
xchg
pop
retf
cdq
loopne
movs
add
push
mov
mov
adc
mov
or
ret
ins
(bad)
movs
scas
retf
les
xchg
push
daa
fs
mov
cmp
and
aam
bound
sar
jp
jmp
push
mov
xchg
(bad)
test
mov
fstp
mov
cmp
inc
dec
jp
inc
gs
push
mov
mov
add
inc
in
outs
mov
push
daa
and
mov
(bad)
mov
arpl
test
mov
sbb
xchg
lock
shl
int3
xchg
or
out
mov
cli
xor
mov
gs
or
and
movs
mov
cdq
jno
(bad)
push
test
pop
xor
or
adc
ret
push
jmp
imul
adc
jae
retf
ds
ja
jb
and
jp
iret
inc
aaa
pop
aam
test
adc
and
cmp
sbb
adc
dec
neg
cmps
les
pop
cmc
inc
sbb
mov
pop
std
jno
(bad)
lock
pop
or
leave
(bad)
test
outs
outs
xchg
jo
inc
test
aam
not
inc
aas
hlt
(bad)
jae
imul
mov
adc
iret
cmp
ins
shl
js
push
fisttp
pop
xor
jecxz
(bad)
jnp
ss
(bad)
sbb
xor
not
pop
xor
sub
dec
stos
or
push
jo
add
mov
js
sbb
sbb
fldenv
dec
ficomp
cmp
ret
mov
jp
loopne
lea
cmp
lea
addr16
push
out
pop
pop
sahf
bound
pop
fwait
jle
cld
lods
inc
push
iret
xchg
mov
mov
stos
(bad)
sbb
leave
jne
jmp
jcxz
jle
in
imul
mov
or
les
adc
mov
pop
pop
test
pop
sbb
mov
mov
loop
scas
in
jmp
xor
out
ds
mov
int3
ficom
cmp
aad
pop
mov
add
xor
je
cmp
mov
add
pop
jmp
nop
push
es
mov
rol
pushf
ss
fldcw
adc
push
mov
mov
mov
pop
stos
xor
mov
aas
ins
rcl
aaa
out
pop
jo
jbe
push
out
or
stos
mov
pushf
arpl
daa
xor
mov
neg
call
ins
fs
pop
movs
push
mov
fist
pop
cmc
mov
xchg
cld
xlat
addr16
sbb
pop
aas
or
mov
lock
sub
adc
jecxz
jmp
retf
push
mov
test
sbb
add
mov
movs
jle
repnz
xchg
shr
xor
dec
test
cmc
or
push
ret
rol
data16
sub
pop
pop
cmps
cmps
out
test
stos
or
fs
ret
leave
push
(bad)
mov
in
test
add
iret
or
stc
outs
(bad)
call
sub
pslld
fbld
jecxz
cmp
scas
in
pop
cmps
xchg
push
pop
test
xchg
lahf
and
jge
int3
pop
mov
fstp
in
jns
or
dec
loope
xlat
pop
or
sbb
adc
mov
sbb
popa
stos
dec
cmp
sub
jge
push
push
cmc
and
cmps
test
stc
cld
sbb
ret
sub
sar
fsubr
sub
mov
cs
(bad)
cmp
pop
mov
cld
ror
xor
lock
outs
imul
mov
aad
icebp
or
jp
mov
ror
and
mov
ins
jecxz
mov
xchg
fcom
mov
aad
int3
enter
fisubr
and
div
xchg
pusha
lock
mov
aas
rcl
inc
push
aam
scas
jnp
jne
adc
scas
loope
icebp
mov
inc
in
sub
sub
jge
add
push
test
cwde
sbb
mov
leave
fst
inc
lock
push
dec
movs
call
sub
int
inc
fstp
enter
and
mov
hlt
outs
call
mov
enter
adc
pushf
movs
mov
aas
(bad)
and
or
mov
and
dec
cmp
lahf
jb
int3
ins
sbb
stc
fmul
loopne
aas
imul
and
les
jne
mov
stc
imul
jmp
gs
sub
and
push
test
daa
jo
les
fld
enter
mov
test
dec
and
or
stc
push
adc
push
pop
loope
or
in
and
xor
cmp
cmp
xchg
scas
js
shr
out
and
mov
jb
add
in
out
mov
fs
or
xor
not
int
adc
push
push
push
leave
xor
mov
test
mov
shr
xchg
xchg
and
sbb
adc
stc
dec
mov
push
stos
fimul
ja
das
sbb
pop
rcl
popf
fwait
outs
cmp
inc
sbb
retf
xchg
push
pop
je
pop
mov
idiv
mov
ror
inc
jecxz
out
imul
lds
gs
jecxz
aam
js
imul
sbb
push
push
pop
dec
sbb
out
inc
sub
jmp
mov
div
test
cmp
jecxz
enter
aam
pop
enter
fadd
lods
stos
push
dec
inc
jge
arpl
cli
loope
push
and
push
mov
mov
out
jnp
sar
mov
movs
and
pop
dec
mov
cmovg
repnz
inc
add
dec
cmps
mov
xchg
jne
out
aas
and
ss
cld
loopne
outs
mov
lahf
(bad)
push
push
(bad)
mov
xchg
fwait
mov
outs
ret
outs
std
or
mov
lods
push
in
and
hlt
fwait
dec
jo
sti
repz
iret
mov
popa
adc
and
sub
push
pusha
mov
popf
jns
leave
dec
fistp
pushf
test
mov
les
xchg
pop
das
inc
push
inc
test
dec
cmp
cmp
leave
pop
out
cmp
std
ins
jle
pop
rol
add
retf
out
mov
ret
xor
pop
cwde
pop
imul
and
shr
add
inc
gs
push
adc
out
fnsave
out
(bad)
jnp
xlat
or
shl
dec
mov
out
jmp
sbb
rdmsr
pop
inc
sahf
pop
jp
out
cwde
loop
dec
jmp
cmps
call
fisubr
repz
xor
retf
push
pop
xor
clc
jne
aad
cwde
push
pop
outs
enter
mov
pop
and
div
cld
ja
rol
bnd
add
pop
ins
daa
jle
mov
arpl
retf
dec
jae
and
fcmovb
es
xor
or
loopne
jge
mov
cmp
out
push
xchg
push
push
rcr
mov
in
push
mov
jmp
test
movs
dec
div
push
bnd
loop
dec
repz
xor
lock
aad
and
fldenv
ss
inc
out
xor
inc
or
lahf
mov
das
push
(bad)
cmps
stc
mov
mov
outs
inc
dec
fistp
add
in
xchg
ins
jge
jmp
cld
dec
xor
inc
jg
loope
loopne
inc
push
daa
push
jo
xchg
inc
or
sbb
rcl
(bad)
fsub
int3
call
cmp
pop
push
jb
mov
sub
pminub
sub
dec
leave
sar
mov
stos
cmp
xchg
add
(bad)
sub
mov
dec
mov
xlat
test
popf
xchg
pop
push
and
inc
jmp
js
add
jmp
jmp
cmp
cmps
cwde
mov
ins
in
ret
pusha
mov
add
mul
and
cmp
sbb
cmps
hlt
scas
adc
loop
repnz
sub
jg
and
loop
sub
jmp
movs
adc
data16
int3
retf
xchg
mov
jno
stos
adc
sub
rol
call
add
pop
inc
dec
jne
loop
lea
and
je
fidiv
sub
mov
popa
inc
or
xor
xchg
add
or
outs
xor
jno
sbb
cmp
push
add
jo
add
idiv
cmc
(bad)
jne
xchg
neg
or
xor
cwde
cmc
push
pushf
push
xor
jno
dec
xor
jo
rol
enter
sub
mov
mov
push
mov
stc
add
xor
sar
stos
inc
mov
test
out
mov
lods
cmp
xchg
out
cmp
dec
xchg
cmp
jnp
jae
cmp
cmps
and
ret
ja
xchg
aam
mov
dec
pshufw
scas
mov
pop
enter
leave
retf
pop
cmp
in
or
imul
cs
cmp
dec
ds
and
push
std
sbb
mov
in
mov
xchg
aad
adc
jmp
imul
inc
and
fstp
call
adc
inc
mov
push
call
test
add
mov
xor
dec
dec
in
add
xchg
sbb
ins
dec
sbb
aas
stc
pop
xor
jmp
fsubrp
fmul
mov
adc
cs
push
push
and
dec
sbb
inc
cmp
push
mov
xor
or
out
repnz
cmp
xchg
call
movs
pushf
jecxz
sub
mov
popf
cmp
jl
mov
mov
aaa
mov
add
xchg
mov
(bad)
xchg
jmp
ja
push
(bad)
dec
mov
arpl
stc
push
xchg
add
imul
(bad)
push
inc
pop
ror
dec
jecxz
mov
pushf
addr16
jmp
cmps
gs
repnz
int3
std
push
movs
ins
repz
les
fistp
add
(bad)
(bad)
xor
lds
ins
pop
lahf
push
fild
jmp
push
in
mov
sub
jae
iret
lock
mov
mov
mov
and
outs
inc
addr16
xchg
xchg
mov
cmp
sub
mov
sub
sbb
xchg
pusha
or
ror
data16
fbld
sbb
dec
arpl
dec
xchg
xor
sbb
test
into
les
sbb
fcomip
test
dec
pop
leave
fisttp
pushf
push
mov
jne
pop
and
test
enter
push
clc
ins
(bad)
adc
jnp
dec
sbb
adc
daa
push
and
andps
jg
outs
scas
mov
fild
das
(bad)
push
cdq
cli
cmovno
adc
dec
movs
mov
int
or
and
ret
out
xchg
dec
sbb
(bad)
push
sub
jbe
mov
jg
xor
fldenv
test
bound
xor
stc
aad
pop
into
push
mov
leave
sub
out
jp
mov
inc
call
cdq
mov
adc
and
mov
sub
sbb
mov
shl
scas
sbb
inc
jle
daa
and
xchg
sub
out
ins
out
icebp
fucomp
jmp
stc
add
cmc
xor
xchg
jge
xchg
inc
lods
inc
out
dec
icebp
and
dec
mov
or
sbb
out
cmp
push
mov
sbb
call
and
cmp
pushf
push
add
and
ror
push
in
push
inc
jge
push
dec
cmps
lock
jle
pop
pop
xchg
and
in
inc
out
pop
inc
mov
les
mov
pop
cld
adc
fistp
mov
jp
retf
out
jl
xlat
mov
push
adc
fs
retf
mov
cmp
and
jno
adc
jmp
hlt
ret
mov
lds
enter
pop
arpl
mov
push
or
jnp
inc
jecxz
loope
mov
ins
and
into
dec
icebp
ds
mov
out
repnz
mov
cdq
daa
mov
mov
mov
jmp
push
jmp
and
cmp
sub
pop
movs
cmp
xor
mov
aas
shr
std
xchg
mov
and
xchg
mov
cmp
or
dec
dec
pop
fstp
mov
xlat
adc
mov
sub
out
fs
in
fs
lods
pop
mov
inc
mov
sbb
stc
sbb
adc
inc
xor
aam
in
or
ins
pushf
add
adc
add
sub
jnp
inc
enter
aas
or
or
ja
xor
test
test
or
imul
pop
aas
hlt
jmp
push
xchg
jnp
in
pop
addr16
lods
or
por
add
jge
xchg
out
push
add
xor
cmp
shl
sbb
ds
repz
lods
dec
mov
inc
push
cmps
mov
or
xor
pop
push
push
movs
sub
mov
in
mov
jg
mov
push
jmp
repnz
add
int
iret
xchg
(bad)
cmc
add
in
xor
out
or
hlt
cwde
int3
push
cwde
movs
ret
push
mov
rol
xlat
mov
aaa
fld
shl
fisub
lock
mov
push
sbb
inc
dec
xchg
out
(bad)
repnz
jge
imul
jno
xor
(bad)
mul
jae
adc
into
pop
push
loope
dec
dec
pop
pop
jne
cs
test
push
in
std
clc
sar
shr
sub
and
or
pop
stc
sbb
les
(bad)
adc
or
ja
xchg
xchg
inc
pop
loop
cmp
(bad)
mov
test
xchg
xchg
pop
xchg
mov
das
cmp
stos
cld
xchg
test
jne
test
cs
inc
aam
int
or
adc
mov
out
lock
fisttp
sub
arpl
push
cmp
ret
(bad)
iret
xchg
aas
push
in
mov
pop
or
fstp
adc
sbb
popf
lea
fild
pop
je
and
les
xchg
xchg
fist
neg
out
xor
in
and
mov
cmps
inc
mov
cmp
lds
add
xchg
xor
jecxz
xlat
push
inc
test
jns
jne
inc
rcr
mov
sti
mov
mov
jg
test
push
adc
mov
sahf
test
mov
push
test
mov
or
cmp
dec
push
mov
mov
test
mov
mov
mov
stc
jne
aad
jl
mov
sahf
in
mov
push
jo
add
pop
les
shl
dec
xchg
test
sub
aas
pop
and
scas
push
cmp
mov
cmp
outs
outs
fisub
mov
sub
xor
sub
pop
lods
pushf
and
dec
adc
sub
outs
sub
or
adc
pop
or
push
gs
xchg
int
cmp
enter
pop
jnp
es
sbb
ss
nop
or
xchg
test
pop
or
stos
add
add
mov
jp
pusha
mov
sbb
fbld
mov
adc
leave
movs
cmp
mov
push
dec
pop
stc
(bad)
retf
add
add
es
push
mov
xchg
mov
pop
call
lahf
neg
loop
(bad)
pop
adc
fucomp
inc
dec
mov
cwde
dec
mov
fisttp
xchg
sub
or
test
movs
mov
mov
in
pop
scas
sbb
fmul
pop
mov
jp
icebp
aas
mov
lahf
cmp
cdq
push
dec
dec
push
inc
jo
std
xor
mov
ds
push
push
call
or
sub
xor
pop
mov
les
xor
les
xchg
dec
imul
xchg
cmp
xchg
sahf
push
ror
adc
loopne
sbb
imul
xchg
lods
rcr
mov
fstp
cmp
int
hlt
or
cmp
xor
repnz
inc
inc
inc
std
xor
mov
push
mov
pop
in
shl
jne
sbb
lods
retf
mov
adc
sysexit
ins
lds
mov
aam
jmp
sbb
ds
leave
adc
jbe
and
addr16
addr16
mov
out
inc
mov
xchg
xor
cld
push
pop
test
aam
xor
movhps
sub
call
lods
(bad)
jg
pop
test
cmp
imul
xor
adc
je
xchg
mov
add
ds
dec
adc
imul
jb
rol
out
hlt
push
(bad)
mov
cmps
push
xchg
mov
inc
adc
pop
xchg
mov
mov
aas
js
iret
std
jle
sbb
fstp
pop
push
loop
mov
mov
scas
dec
or
(bad)
cmp
ss
dec
push
xor
outs
lahf
jge
pop
inc
mov
push
push
dec
inc
rcl
adc
out
push
cmp
xor
loopne
imul
mov
dec
xor
xchg
fwait
lods
jge
jmp
push
lods
or
sub
shl
mov
mov
adc
cmp
(bad)
aad
sahf
pop
inc
je
adc
shl
xor
cmp
jmp
add
mul
fldl2t
inc
test
bnd
dec
fild
into
out
stc
retf
xchg
push
push
mov
dec
in
in
pop
ins
cdq
repnz
in
sbb
lds
pop
into
dec
jg
push
mov
mov
ds
test
lods
stc
inc
cmps
loopne
mov
push
data16
xor
adc
sub
ja
add
(bad)
bound
push
push
xchg
lods
pop
cmp
push
stc
inc
jmp
jge
stc
push
xchg
mov
xchg
sub
test
mov
fwait
adc
jno
mov
mov
pop
mov
mov
jnp
jo
lahf
add
sbb
xor
mov
sbb
mov
clc
dec
adc
call
sub
push
cmps
xchg
push
and
ds
dec
mov
or
(bad)
leave
sar
and
stos
dec
pop
mov
es
enter
stos
icebp
imul
jp
push
gs
neg
adc
inc
pop
or
sub
movs
cdq
mov
or
mov
xor
rol
gs
leave
cwde
jecxz
fdivp
cld
fdiv
cwde
xchg
cmp
inc
sub
fiadd
js
jmp
sti
jecxz
fild
inc
fwait
leave
call
outs
in
sub
cmp
dec
int
pushf
jge
lods
es
mov
test
rol
cmps
push
(bad)
cmp
push
loopne
popf
adc
inc
addr16
mov
push
popf
cmp
jne
fldcw
fistp
popf
add
in
in
into
stos
add
add
xor
dec
addr16
pop
cmps
or
mov
dec
stos
inc
and
mov
ret
mov
mov
jmp
int3
mov
mov
and
or
inc
call
jns
icebp
fucom
bound
adc
push
dec
pop
dec
and
daa
in
push
sbb
ror
xor
cs
push
lods
imul
mov
mov
dec
sar
(bad)
frstor
inc
inc
repnz
test
hlt
retf
call
sbb
test
in
inc
mov
(bad)
jnp
mov
stc
pop
and
xchg
jne
adc
mov
mov
jne
push
adc
mov
jecxz
jnp
push
aad
std
(bad)
cmp
ds
sub
dec
lods
pop
sub
add
add
aas
rol
adc
push
sub
int
iret
mov
test
jo
sub
in
mov
mov
pop
jl
and
adc
out
lds
sbb
fbld
addr16
xor
sub
call
xor
fld
jge
or
bound
daa
mov
mov
mov
mov
mov
mov
push
sub
mov
inc
in
jae
push
xor
ret
or
test
mov
xor
add
(bad)
push
fimul
jbe
sbb
add
sub
(bad)
jecxz
dec
cmp
retf
int3
add
jns
fsub
cmp
loopne
cmc
xchg
fidivr
sar
sahf
push
add
inc
xor
dec
adc
push
pop
(bad)
mov
or
int3
jbe
xor
jo
sub
cmp
push
xor
mov
jno
mov
pop
icebp
mov
inc
mov
push
push
nop
adc
mov
add
in
and
cmps
lock
inc
xchg
fs
and
cs
rol
cld
sub
pusha
mov
dec
mov
cld
push
adc
lock
call
mov
iretw
movs
mov
stos
out
fadd
leave
lods
and
pusha
stos
add
dec
sub
ja
mov
mov
push
mov
enter
outs
mov
call
lahf
and
mov
mov
rol
aam
icebp
lahf
xor
sahf
ss
or
neg
mov
sub
sbb
pop
lods
lods
ds
scas
stos
mov
rcr
inc
aam
jmp
je
xchg
or
sub
aam
fmul
arpl
je
add
in
dec
hlt
xchg
in
shl
pop
es
(bad)
aad
ins
call
push
fnstenv
bound
enter
jle
das
es
cmp
loope
daa
scas
popa
or
retf
retf
loopne
cld
imul
adc
mov
test
push
xchg
inc
xchg
and
or
punpckhwd
loop
cmps
add
sbb
aam
std
scas
sbb
into
sub
lahf
pushf
in
or
push
dec
cmp
dec
sahf
adc
mov
and
inc
(bad)
icebp
(bad)
shl
mov
mov
ret
fsub
into
ins
push
test
xchg
repz
xor
cdq
je
push
push
and
call
es
ins
das
rcr
stos
cmp
(bad)
mov
pop
adc
pop
xchg
out
out
mov
jmp
sbb
adc
or
popa
cmps
inc
mov
jo
aas
xor
dec
pop
jg
push
icebp
xchg
cmp
cdq
mov
and
rol
sbb
mov
or
sub
dec
and
(bad)
fild
clc
les
ret
fwait
ja
cmp
std
mov
les
dec
pop
xor
and
xchg
sbb
jg
fistp
sti
mov
jb
sub
dec
inc
hlt
popa
arpl
js
repz
and
sti
loope
or
push
fsubr
enter
ficomp
stos
add
in
jb
or
mov
in
lods
out
sbb
iret
push
dec
adc
stc
je
mov
and
repnz
jle
inc
stos
movs
dec
cmp
loop
sbb
mov
sbb
fdivp
aam
push
mov
fadd
in
shr
add
sbb
and
cmc
adc
in
lock
arpl
loopne
jl
fst
pop
adc
pushf
loope
leave
in
(bad)
stos
aam
out
repnz
je
cld
lods
std
inc
inc
xor
shl
dec
adc
test
out
ficomp
sub
mov
lahf
inc
retf
aas
inc
adc
xchg
cmc
xor
hlt
sbb
xor
int
shl
sbb
bound
cs
(bad)
jmp
ret
jbe
div
pop
pop
in
and
dec
mov
ret
push
daa
aam
repz
outs
int
cli
sbb
mov
adc
imul
mov
ret
mov
ja
js
in
(bad)
inc
int3
pop
das
aad
push
mov
sbb
fld
shl
and
mov
mov
sub
icebp
sub
or
ss
mov
jbe
movs
cwde
pusha
or
ss
sbb
int3
movntq
out
pop
aad
mov
fstp
sub
and
lods
pop
into
cli
fdivr
js
(bad)
stc
mov
sub
cmc
rcl
jae
lds
add
icebp
sub
pop
push
fistp
ret
xchg
in
loopne
and
call
pop
push
mov
xor
cmp
out
pusha
mov
sub
push
push
add
pop
cmps
or
inc
cmp
pop
mov
or
mov
mov
fldcw
xchg
or
test
loop
fadd
xor
neg
sub
xchg
addr16
in
mov
xchg
aam
cmp
jbe
adc
sar
mov
iret
pop
pop
(bad)
mov
cmp
call
(bad)
out
add
xor
cvtps2pd
xchg
and
push
xchg
test
sub
xchg
mov
out
in
pop
xor
out
test
repz
stc
js
mov
gs
sub
xchg
sar
icebp
js
jb
jl
xor
sub
or
inc
retf
dec
movs
xchg
cld
or
mov
icebp
mov
std
jge
imul
cli
xchg
xchg
jecxz
and
cli
icebp
xor
call
xlat
test
fcomp
(bad)
mov
jl
add
and
dec
in
movs
adc
sbb
dec
fwait
inc
xor
mov
mov
sti
sbb
ss
mov
cld
pushf
add
mov
mov
add
add
cld
and
scas
and
and
popf
pop
je
pop
mov
sbb
pop
call
jns
bound
adc
jno
call
add
shr
mov
retf
out
ret
cld
adc
jnp
mov
mov
mov
push
sbb
mov
or
rcl
leave
xor
js
adc
pop
jno
sbb
out
sub
ss
or
bound
jge
inc
sbb
rcr
mov
jecxz
sub
add
pop
cmp
retf
push
cld
add
xchg
imul
mov
sub
push
fwait
cli
jbe
(bad)
mov
in
dec
xlat
cmp
add
mov
jmp
pusha
or
sub
ficom
ja
ins
outs
push
ss
sar
xor
movs
dec
rcr
xor
in
push
repz
sahf
and
add
push
arpl
test
mov
sti
call
pop
lea
inc
pop
fs
cmp
ss
sbb
jae
shl
loope
or
mov
in
dec
pop
imul
xlat
mov
loop
in
mov
sbb
jo
mov
add
xchg
icebp
jle
sar
fwait
mov
std
aam
mov
add
jae
jb
pop
dec
jno
inc
jno
into
sti
sbb
loope
(bad)
loopne
xchg
mov
pop
je
add
fstp
inc
adc
shl
mov
and
rcl
inc
cmp
aam
imul
cmp
and
into
ja
sar
and
cmp
adc
sub
xor
cmp
fwait
xor
out
pop
cmps
hlt
inc
dec
xor
sbb
sub
pop
out
test
jb
cld
pop
dec
push
call
stos
addr16
add
popa
fisubr
xor
retf
rcl
pop
in
pop
and
(bad)
xchg
mov
sti
lahf
inc
push
daa
lea
aad
outs
ret
mov
call
popf
aad
pop
popf
mov
lods
pop
(bad)
dec
loop
cmp
jns
mov
xor
mov
mov
icebp
hlt
int
add
xor
mov
mov
xchg
add
nop
hlt
in
and
enter
js
xchg
out
mov
push
push
(bad)
mov
pop
ja
aad
push
test
enter
stos
into
lods
popa
call
(bad)
xor
sub
jmp
jne
loope
(bad)
jl
jno
(bad)
and
push
rcr
or
fldenv
sbb
shl
and
or
jg
dec
fs
cmp
dec
adc
test
mov
dec
int3
jge
(bad)
lahf
popa
and
in
(bad)
imul
push
mov
mov
pop
nop
adc
bound
cmp
das
cmc
xchg
fidivr
mov
adc
fidivr
scas
fnsave
loop
mov
xchg
xchg
mov
mov
sahf
mov
xor
aas
inc
pop
leave
push
imul
les
sbb
stc
xchg
xor
ds
(bad)
arpl
pop
imul
inc
fs
popf
(bad)
inc
inc
nop
push
jge
gs
pop
call
cmp
jbe
pop
and
dec
ds
popa
mov
frstor
inc
sub
(bad)
dec
(bad)
and
xor
mov
dec
and
mov
xchg
leave
std
pop
fs
pop
aaa
cld
js
ins
cli
in
adc
pop
ds
stos
push
loope
push
inc
aaa
push
rcl
or
jnp
(bad)
add
pusha
movs
adc
push
int3
jge
or
test
sub
ret
(bad)
adc
jmp
fistp
bound
shr
retf
fwait
in
jbe
pop
jecxz
mov
xchg
adc
xor
aas
add
or
xor
mov
test
mov
fimul
xchg
pop
aam
sbb
and
or
xor
pop
popf
hlt
mov
ret
dec
push
outs
sbb
mov
jl
jmp
ds
xor
int3
inc
xor
push
jmp
mov
pop
xchg
fmul
into
fcom
add
cmp
ins
data16
hlt
in
mov
(bad)
ds
repz
pop
aad
in
in
or
add
mov
adc
add
mov
or
mov
mov
mov
repz
stc
mov
mov
loop
inc
fwait
xchg
std
stos
mov
cmp
inc
repnz
cwde
xor
and
mov
dec
mov
ja
das
ret
push
fbstp
jl
add
hlt
adc
aam
popa
scas
cmp
sahf
pop
sub
inc
leave
leave
repz
xchg
push
movs
in
pop
(bad)
sub
stos
mov
push
fst
rol
inc
jecxz
xor
adc
aas
push
test
in
pop
int3
pop
sub
jmp
inc
mov
test
jg
cmovs
stc
jbe
jmp
add
and
sub
mov
jns
call
je
ret
aas
or
jns
lahf
mov
xchg
rcr
call
loop
mov
pop
(bad)
sti
add
mov
sbb
jns
int3
and
jae
addr16
jmp
push
push
mov
imul
xlat
pushf
into
clc
and
es
ret
jmp
or
mov
(bad)
mov
push
mov
pop
or
or
dec
xchg
stc
dec
pop
bound
pop
push
push
xchg
jb
and
daa
sti
dec
sbb
pop
out
icebp
or
cmc
pop
or
int
lods
push
fadd
mov
lods
sbb
shr
mov
xchg
lea
push
jmp
div
mov
pop
cmc
into
ror
or
cwde
(bad)
rcl
popf
mov
jl
push
add
mov
mov
adc
xchg
ficom
test
inc
inc
mov
enter
pusha
out
dec
repnz
mov
mov
sbb
fcomp
outs
cmp
aas
pop
and
jns
jbe
leave
retf
cmps
in
call
retf
aas
in
jmp
fidivr
je
xchg
int
out
mov
retf
aas
(bad)
mov
xor
out
sbb
jnp
js
call
sub
pop
push
pop
dec
rcr
(bad)
(bad)
lods
xor
add
(bad)
xchg
fdivr
or
pop
test
cdq
sar
cmp
jno
lds
pop
mov
jecxz
jl
rcr
jnp
jmp
inc
clc
mov
rcl
ja
sbb
jnp
adc
or
cdq
sbb
fnsave
jne
int
jmp
addr16
mov
out
fisub
cmp
adc
sbb
sbb
add
shr
das
cwde
mov
or
dec
xchg
enter
push
cmp
ds
(bad)
(bad)
jmp
call
push
pop
jecxz
pop
movs
arpl
mov
ror
inc
out
dec
cmps
or
jmp
mov
pop
call
ja
sub
out
dec
xor
cmp
cli
test
call
push
xchg
lds
daa
jecxz
out
fwait
sub
iret
enter
push
rcl
cld
test
fsubr
push
outs
sub
stc
fldcw
pop
and
outs
mov
fadd
dec
dec
mov
in
out
pop
ins
mov
aad
fadd
dec
xor
bound
in
cmp
mov
add
test
and
and
pop
loop
movs
or
test
daa
in
inc
sub
stos
add
inc
and
jno
stos
(bad)
lods
loopne
push
add
inc
or
and
add
in
cmp
sub
sub
out
or
sti
clc
inc
sub
push
fcomp
into
dec
xor
sub
adc
mov
sar
loope
icebp
(bad)
clc
movs
mov
leave
aam
adc
xor
repnz
retf
repz
mov
cmp
dec
rcl
mov
aad
mov
add
fsin
dec
pusha
rol
mov
ins
xchg
(bad)
pushw
sub
pop
das
sub
xor
mov
adc
dec
inc
mov
sub
or
jo
outs
and
mov
cli
stos
or
std
mov
mov
push
cmps
dec
retf
dec
cmp
mov
inc
xor
dec
nop
sar
push
jno
sub
cmps
loope
pop
xchg
mov
cwde
in
lea
mov
aaa
inc
ins
sub
sub
push
call
gs
std
bound
xor
hlt
cs
out
jl
ss
pop
out
movs
mov
or
adc
out
fidivr
mov
mov
push
mov
push
call
outs
outs
rol
fisubr
in
jb
repz
js
fs
jne
mov
add
mov
pop
shl
and
cmp
add
inc
or
xchg
repnz
mov
in
das
jo
mov
std
mov
mov
aas
mov
rol
fstp
je
dec
int
mov
std
inc
pop
adc
loop
fdivr
pop
xchg
mov
mov
rcl
mov
mul
inc
lods
dec
pop
ret
push
sbb
sbb
fidivr
mov
movs
out
xchg
(bad)
lods
test
mov
xor
push
dec
jle
adc
sub
xchg
push
adc
pop
rcl
and
push
int
inc
mov
leave
ret
inc
jb
dec
mov
add
cmc
jge
outs
pop
cmc
push
mov
shl
mov
in
loope
jmp
push
and
sbb
xchg
jmp
mov
retf
popf
inc
sub
add
jo
or
test
mov
xlat
xchg
inc
not
arpl
loopne
lods
mov
and
das
stc
lea
icebp
lods
dec
jo
fprem
or
test
mov
(bad)
fist
scas
push
push
aas
push
and
mov
push
fadd
xor
outs
mov
dec
das
push
aad
mov
ja
dec
imul
lods
cdq
in
adc
ret
adc
test
test
imul
aad
in
mov
sbb
fstp
pop
rcl
stos
dec
or
xchg
sub
sbb
mov
sbb
xchg
mov
fadd
retf
lods
dec
clc
pop
arpl
add
jg
(bad)
xor
fsub
pop
pop
or
fucomp
adc
xchg
mov
cmp
add
repnz
std
hlt
ficom
inc
cmps
xlat
pushf
int3
mov
xor
cld
xor
xchg
jl
sbb
add
mov
cmps
(bad)
repz
ret
stos
(bad)
mov
ins
pop
rcr
pop
xchg
sbb
jb
cld
cs
xor
sub
cmp
pop
dec
mov
clc
fbstp
or
int3
icebp
mov
movs
into
pop
inc
mov
or
mov
and
mov
cmps
test
in
das
mov
mov
lock
pop
out
dec
int
push
cmp
push
jb
push
mov
push
dec
stos
or
std
and
dec
adc
loop
sbb
lea
inc
sbb
mov
outs
jmp
mov
dec
call
xor
pop
int
inc
lds
out
inc
stos
fstp
adc
bound
setnp
iret
jl
pop
dec
and
jle
add
push
mov
jb
je
stc
movs
pop
aad
fild
loop
imul
xchg
inc
pop
int3
mov
loope
fsubr
test
aad
stc
(bad)
jp
cmp
mov
mov
loop
mov
outs
push
push
fcmovbe
int3
cmp
cmp
popa
icebp
mov
mov
arpl
adc
scas
jge
cmp
xlat
jge
out
sub
into
loope
inc
cmps
push
jge
jmp
sbb
xchg
mov
pop
daa
pop
jmp
pop
movs
cmp
add
add
daa
push
mov
adc
sub
cmp
sti
push
shl
loopne
add
cmp
jne
fistp
sbb
inc
dec
movs
push
fwait
ret
sub
push
mov
add
test
aas
push
cmc
and
push
push
inc
inc
cmc
stos
pop
pop
into
pushf
pop
aad
inc
lds
xor
xchg
rol
xchg
sbb
pop
outs
add
aam
xor
outs
pusha
push
sbb
and
imul
sti
jae
gs
enter
mov
add
fsub
outs
(bad)
repz
fwait
jmp
xchg
daa
stos
jecxz
mov
shl
ret
sbb
fwait
mov
pop
daa
out
push
push
fwait
xor
fiadd
push
mov
adc
cmp
retf
pop
imul
lock
and
xchg
xor
clc
mov
test
cmps
mov
jge
aas
add
mov
add
scas
mov
inc
call
or
dec
cmps
std
nop
add
mov
xchg
sbb
xchg
cmp
sbb
int3
cmp
push
and
test
mov
(bad)
sti
test
cmp
nop
cs
aam
pusha
xchg
jo
dec
pop
ret
cmp
push
pop
mov
push
push
adc
dec
vmptrst
int
cwde
int3
fs
adc
ja
jmp
xchg
sbb
inc
pop
or
push
outs
das
sbb
bound
jne
add
fsubp
xor
(bad)
cmps
ja
pop
scas
xchg
push
pop
je
jmp
jbe
and
(bad)
dec
(bad)
xor
mov
scas
sbb
pop
push
nop
shl
push
rcl
and
jb
rcl
inc
and
adc
shl
daa
imul
sti
sbb
sub
out
inc
cmp
je
push
xchg
and
daa
in
inc
leave
mov
test
push
cmp
mov
xor
mov
add
les
ins
ins
inc
adc
dec
in
cmp
enter
and
mov
stos
cmps
dec
inc
pop
das
sbb
mov
mov
add
mov
imul
push
fst
sti
mov
daa
push
cdq
dec
xchg
sub
mov
sahf
fdiv
sub
dec
int3
cli
jns
neg
lock
call
sub
add
xor
fiadd
xor
scas
xchg
cld
mov
jecxz
fwait
stos
das
adc
jae
push
and
cmc
push
xlat
push
cmps
lods
and
data16
mov
into
mov
push
cmp
jmp
dec
sar
and
mov
mov
int3
jecxz
or
in
ficomp
pop
clc
and
movs
push
xlat
mov
(bad)
adc
inc
stc
jmp
xchg
jmp
das
jo
daa
(bad)
(bad)
cmps
jno
stos
hlt
(bad)
int
out
(bad)
push
in
fdiv
ret
(bad)
xor
out
push
jg
scas
push
and
sbb
jbe
or
add
hlt
dec
and
mov
repnz
sar
adc
dec
xor
in
add
nop
push
jmp
movs
inc
(bad)
dec
retf
jge
xchg
mov
daa
pop
adc
and
(bad)
push
clc
and
imul
mov
std
jo
mov
daa
add
stc
lods
mov
adc
pop
sti
fdiv
jge
loopne
xchg
mov
xchg
jge
mov
add
sar
fbstp
pop
jmp
test
mov
mov
mov
mov
sbb
and
mov
out
jnp
jecxz
add
mov
out
in
cmp
movs
add
and
push
mov
fs
shr
push
prefetcht0
pop
cmp
xchg
push
lods
adc
xor
shl
push
fild
outs
push
das
jp
aaa
inc
jno
call
xchg
les
imul
mul
outs
add
imul
mov
test
stos
(bad)
jnp
pop
jg
mov
push
dec
push
cmps
and
and
adc
jns
cmps
or
push
push
dec
movs
adc
cld
jmp
xor
daa
mov
fcomp
xchg
sub
call
add
sti
dec
xchg
mov
loopne
cmp
mov
push
sbb
fdiv
mov
iret
push
push
sub
dec
and
sar
outs
mov
shl
pop
push
add
or
test
dec
add
(bad)
jge
mov
(bad)
jg
in
dec
je
sub
je
sub
mov
jns
hlt
cmp
test
stos
dec
push
(bad)
mov
js
sbb
(bad)
mov
les
outs
xchg
es
in
iret
cld
ss
jl
cwde
inc
retf
test
sbb
clc
sbb
or
cdq
loope
cmp
mov
stos
mov
ss
push
dec
add
or
cdq
enter
test
retf
inc
push
or
or
popa
mov
push
mov
pop
scas
mov
or
cmp
out
pop
mov
jne
std
dec
mov
bound
cld
and
out
test
mov
loop
mov
inc
movs
(bad)
xchg
xor
(bad)
xlat
jnp
rcl
fisub
sbb
xor
jecxz
movlhps
loop
sub
aaa
js
sbb
fstp
(bad)
dec
or
call
not
ds
cmp
mov
shl
leave
sahf
hlt
cmp
repnz
sti
sub
sbb
mov
in
xchg
scas
retf
xchg
sub
mov
imul
mov
lock
out
in
push
in
mul
pop
push
pop
int
int
pop
fldenv
mov
imul
dec
jne
xchg
jnp
imul
repz
(bad)
mov
fcom
cli
mov
movs
ins
nop
test
repnz
mov
mov
inc
cmp
xchg
mov
push
out
aas
aad
test
jnp
test
jecxz
pop
pop
pushw
jg
pop
ins
loope
inc
or
fidiv
jle
loopne
pop
rcr
ins
push
es
pop
and
aad
push
xchg
push
clc
ins
xchg
mov
ret
lods
rol
mov
retf
or
test
cwde
cdq
out
mov
cwde
pop
inc
inc
mov
and
fsin
iret
jmp
(bad)
leave
push
nop
sub
rcr
imul
in
jl
and
lahf
push
test
int3
movs
inc
nop
jnp
aas
adc
and
popa
mov
sub
mov
mov
jmp
sbb
mov
adc
sub
(bad)
out
fadd
push
xor
mov
jmp
pop
jmp
int
and
int
popa
xchg
adc
out
add
push
mov
out
cmps
xor
sub
loop
ret
xor
xor
jp
dec
push
out
pop
jnp
mov
mov
dec
fnsave
iret
pusha
xchg
jnp
cmps
adc
nop
call
rep
or
pop
cli
enter
and
push
out
icebp
push
adc
inc
lods
inc
and
adc
(bad)
not
rcr
ret
nop
imul
(bad)
or
cmp
(bad)
xor
mov
fild
test
icebp
daa
fsubr
push
pop
inc
neg
adc
lods
pusha
mov
jmp
mov
mov
mov
ss
call
cmp
rol
mov
cld
out
jl
(bad)
out
je
arpl
sahf
mov
cmp
cli
hlt
mov
push
xchg
jge
sub
fadd
cmp
sub
stos
repz
imul
mov
mov
aam
cmp
xchg
xchg
hlt
mov
sti
add
jecxz
xchg
pop
retf
inc
mov
xchg
mov
add
push
(bad)
jo
repnz
xchg
nop
cmp
xchg
dec
xlat
stos
jae
jb
push
in
push
outs
psubsw
xchg
jp
hlt
mov
xor
lds
adc
inc
pushf
mov
sahf
add
mov
pop
push
mov
in
lods
out
inc
sub
dec
sar
ficomp
cs
adc
sub
jo
mov
xchg
mov
push
lods
cmp
es
dec
xchg
cmp
ja
mov
xor
xchg
outs
or
xchg
lds
mov
dec
push
mov
sbb
push
ror
xchg
in
pop
jmp
cs
mov
xor
mov
jp
sbb
pop
out
leave
and
xchg
jg
dec
push
sbb
or
into
js
or
push
cmp
pop
stos
and
fdivr
jnp
pop
mov
adc
mov
std
test
add
inc
outs
arpl
popf
xor
adc
sub
pop
lods
dec
rol
stos
and
fcomp
lods
(bad)
or
and
out
clc
clc
mov
fincstp
fstp
push
pop
test
xor
lock
jno
xor
cmp
out
(bad)
ins
xchg
push
clc
mov
push
pop
adc
aam
movs
mov
xor
xor
mov
or
pop
ds
jbe
xchg
(bad)
fsubr
add
retf
sbb
test
xor
cdq
inc
xor
jno
btr
mov
jns
mov
movs
test
xor
(bad)
cmp
test
pop
gs
shl
add
mov
inc
aad
pop
test
repnz
(bad)
mul
xchg
into
push
sub
out
xlat
and
jns
inc
out
add
cmp
popf
out
mov
movs
js
ja
ja
js
sbb
push
adc
push
jg
shl
pop
stos
sbb
out
neg
into
rcl
int3
xor
ret
fld
mov
pop
jno
cmp
hlt
mov
stos
add
adc
iret
pushf
call
adc
cmp
xor
xchg
jmp
and
std
sbb
xchg
pop
cli
inc
xor
icebp
aad
mov
xor
(bad)
jge
call
loop
add
in
es
inc
pop
pop
pop
div
ret
pop
retf
bound
scas
sub
xchg
pop
mov
xor
jno
mov
dec
sub
cmps
cmp
xchg
dec
out
xor
fld
jo
xor
ins
out
or
(bad)
xchg
xor
mov
mov
pop
aam
push
ss
push
(bad)
jbe
addr16
clc
pop
(bad)
inc
dec
icebp
pusha
mov
mov
lods
cmp
mov
das
je
dec
jo
xchg
iret
fst
jp
popf
push
pop
jmp
retf
cli
mov
push
sti
and
and
push
dec
clc
ror
sub
into
mov
mov
sub
cwde
cmp
fwait
dec
fcomp
mov
loop
jo
push
fisub
loopne
jmp
xchg
dec
jae
and
sub
jb
or
cmovl
xor
adc
fist
mov
addr16
dec
fimul
repnz
add
mov
pop
push
push
and
push
scas
dec
sar
pop
push
in
stc
jo
pop
jg
rcr
cmp
data16
jmp
imul
lock
test
mov
pop
dec
or
mov
dec
dec
adc
stos
cmp
into
add
(bad)
arpl
mov
add
loopne
test
jno
sbb
pop
push
or
pop
sbb
not
retf
outs
jns
mov
adc
or
mov
in
repnz
cwde
(bad)
outs
adc
mov
mov
push
cmp
ins
pop
xchg
loope
sahf
or
mov
icebp
mov
shl
rcl
aam
adc
lea
pushf
in
push
add
and
mul
xchg
call
pop
nop
cmps
(bad)
rol
stos
jmp
int3
(bad)
js
mov
mov
sub
or
in
fstp
cli
stos
jle
imul
sub
sahf
push
out
push
adc
mov
stos
ret
ret
mov
xchg
or
aaa
sub
sbb
into
test
js
(bad)
mov
std
inc
push
shl
cmc
fild
push
mov
adc
jmp
aas
movs
push
fwait
movq
ins
push
or
fbstp
jbe
pop
retf
mov
add
mov
push
cdq
call
push
(bad)
push
push
mov
or
add
adc
ror
outs
push
in
aas
in
dec
mov
cmp
test
mov
mov
(bad)
stos
div
mov
(bad)
in
cmp
lahf
aas
add
popa
push
mov
mov
adc
je
cmps
sar
mov
jl
push
imul
xor
push
in
das
mov
mov
mov
sti
ins
dec
fild
lods
je
or
lods
xchg
inc
call
hlt
xchg
daa
retf
fwait
sahf
sbb
call
fsubr
popa
movs
arpl
lock
push
ins
iret
xor
std
into
(bad)
cs
jp
cli
dec
je
or
test
rcl
loope
sub
(bad)
adc
dec
clc
imul
pop
push
ret
data16
pusha
dec
data16
repz
cmps
sub
push
cmp
outs
jecxz
xor
xor
sub
cmp
mov
es
mov
cmc
lds
dec
or
pop
jp
call
adc
jae
(bad)
mov
sub
outs
cld
lods
fld
mov
inc
mov
and
jp
cmp
xchg
push
mov
jmp
adc
(bad)
fnstcw
gs
mov
push
cmp
test
inc
jnp
mov
(bad)
jmp
popa
mov
call
push
not
pop
icebp
js
addr16
lds
imul
les
je
sbb
mov
hlt
dec
pop
fwait
in
sub
(bad)
enter
dec
cdq
imul
xchg
and
(bad)
push
ss
adc
cmps
inc
ds
stos
push
inc
sub
pop
and
mov
sub
mov
ins
mov
xor
mov
add
ds
dec
sub
adc
push
fs
mov
pop
sahf
test
xchg
mov
jo
mov
lods
xchg
lods
js
sub
dec
arpl
mov
pop
mov
mov
xchg
mov
adc
pop
pop
sub
add
enter
sbb
mov
mov
(bad)
cmps
pop
enter
add
in
pop
or
iret
or
arpl
jne
imul
hlt
inc
loopne
and
cmps
mov
fist
lods
fstp
or
pushf
add
outs
pushf
je
add
hlt
int3
outs
mov
adc
dec
lock
adc
sub
fdiv
in
inc
sbb
cmps
mov
rcl
mov
stos
sbb
sub
sbb
mov
inc
pop
xchg
add
pusha
test
push
sar
push
fs
loopne
scas
lods
mov
xor
fwait
sub
sbb
pop
(bad)
sub
mov
movs
aad
mov
inc
aam
stos
dec
pop
fst
js
or
sub
mov
xchg
nop
sub
(bad)
xor
lahf
test
hlt
adc
cmp
loopne
pop
sbb
mov
cli
inc
gs
(bad)
retf
inc
cmp
aad
stos
cmp
outs
iret
dec
(bad)
imul
fcom
xor
sbb
xchg
movs
pushf
out
jbe
cmps
pop
(bad)
not
mov
xor
adc
mov
cmps
push
jge
es
jno
xchg
adc
dec
mov
sub
sbb
xchg
sub
mov
fsubr
imul
add
int
and
add
mov
shl
pop
fwait
rol
pop
fwait
push
std
xor
jbe
lea
nop
pusha
adc
mov
shr
inc
adc
shl
in
push
cmps
neg
ds
test
jae
inc
(bad)
les
mov
repnz
xchg
push
mov
pushf
enter
ja
pop
call
dec
sbb
dec
push
repz
mov
cmps
repz
movs
mov
jo
out
jmp
cmc
sub
mov
cmp
test
mov
pop
push
lock
(bad)
cli
pop
sub
cli
sub
cmp
out
mov
std
test
mov
mov
shl
cmp
sub
cmp
xchg
xor
mov
inc
repnz
(bad)
leave
cmp
pop
xor
in
out
xchg
inc
mov
xor
mov
loopne
jmp
lods
inc
mov
dec
xchg
mov
pop
sahf
jle
int3
jmp
leave
stc
mul
mov
mov
scas
mov
fistp
jl
pop
cwde
mov
and
out
dec
inc
inc
scas
push
jo
and
jnp
mov
jge
push
call
xchg
jo
fstp
xchg
fnstenv
mov
xchg
scas
adc
test
imul
in
xor
outs
adc
xchg
sbb
cmps
sub
add
pushf
sub
lods
push
les
rcr
mov
ja
cmp
or
imul
test
jmp
daa
popf
pop
xlat
imul
mov
adc
bnd
or
fistp
push
dec
jbe
sbb
pusha
lea
fidivr
imul
adc
sbb
sbb
mov
cmp
sbb
mov
add
dec
(bad)
pop
addr16
mov
mov
dec
scas
jg
jecxz
add
xchg
movs
mov
pop
dec
pop
xor
mov
mov
push
aas
sub
icebp
(bad)
retf
je
mov
aad
sub
mov
xor
sbb
push
fst
aas
std
loop
iret
stc
data16
mov
mov
imul
cmp
jmp
adc
sbb
and
and
cmps
inc
lock
cmps
sub
icebp
sub
jl
adc
pop
xor
push
xor
mov
mov
sbb
mov
adc
or
(bad)
icebp
xchg
mov
or
adc
les
rcr
cmp
mov
enter
mov
push
shl
cmps
retf
dec
aaa
je
add
push
sbb
(bad)
push
sub
das
mov
cwde
inc
and
lahf
enter
out
push
pop
cmp
into
fcmovnbe
in
cmp
addr16
mov
fist
dec
and
test
out
dec
dec
dec
bound
push
inc
cmp
hlt
mov
mov
arpl
mov
dec
fnsave
aad
gs
inc
xor
pop
fs
movs
sahf
sub
cmp
out
push
pop
pop
inc
and
and
push
adc
jg
xchg
xor
stos
test
fnsave
cmc
cmp
sahf
fs
test
out
data16
in
std
cmp
push
inc
push
or
pop
and
leave
mov
pop
std
lods
into
xor
jge
dec
imul
scas
adc
ret
in
dec
in
or
sbb
jg
pop
mov
clc
cwde
pop
cmps
mov
cmp
pushf
push
(bad)
pusha
mov
in
sbb
(bad)
jge
jnp
daa
outs
and
adc
xchg
add
je
fcmovnbe
push
adc
les
inc
adc
jmp
pushf
cmps
neg
(bad)
fcmove
dec
or
cmp
stos
adc
mov
fadd
mov
or
test
push
dec
dec
cwde
outs
lea
retf
ja
std
jge
scas
imul
mov
scas
mov
nop
inc
sub
sub
rcl
dec
mov
call
jmp
inc
add
mov
outs
sti
dec
xchg
repz
sar
jmp
ja
aaa
mov
mov
fld
dec
pop
jnp
stos
ret
retf
loop
mov
fstp
mov
stos
retf
inc
push
push
std
loop
(bad)
and
xor
movs
shl
sbb
(bad)
dec
xor
shl
mov
add
test
lock
jnp
mov
adc
stc
xor
jmp
test
loope
inc
jmp
neg
shr
loop
jg
and
repz
in
test
mov
add
or
jae
mov
jmp
or
mov
dec
push
in
pop
xor
femms
jno
mov
cmps
pop
clc
xchg
fisub
push
xchg
shr
mov
xchg
mov
adc
ror
mov
push
push
(bad)
sbb
js
ins
xchg
enter
xchg
imul
neg
xchg
xor
movs
adc
add
loop
arpl
xchg
aam
fadd
and
dec
sub
pop
dec
push
out
mov
mov
or
cmp
push
push
cmp
add
int
mov
mov
xchg
push
cwde
js
xchg
push
repz
shl
ss
jmp
lods
sbb
repnz
leave
sti
clc
cmp
jno
pusha
dec
jmp
test
(bad)
jmp
mov
pop
sbb
scas
js
scas
jbe
(bad)
sub
pop
adc
mov
jb
bound
in
cmp
mov
ss
dec
aam
(bad)
jge
sbb
stos
and
aaa
pop
sub
lds
jecxz
movs
or
mov
daa
movs
in
sbb
fst
jg
int
mul
dec
out
pusha
sahf
sub
fcomp
int3
fdivr
test
mov
sub
(bad)
mov
sbb
dec
pop
gs
mov
or
jge
xchg
add
sub
jge
not
push
cmps
(bad)
adc
stc
push
mov
cmp
mov
retf
adc
push
cwde
cmc
nop
jnp
and
mov
int3
sahf
jne
mov
ss
movs
adc
mov
shl
jmp
imul
repz
dec
repz
sti
push
pop
pop
dec
adc
mov
iret
mov
in
jmp
stc
or
lods
test
pop
shl
pop
cmps
or
aad
push
fldenv
pop
repz
push
test
rcl
xchg
sbb
xchg
jmp
mov
xchg
xor
outs
loope
aaa
stos
neg
imul
ins
addr16
or
pop
out
sub
jmp
cwde
shl
ret
adc
adc
dec
loop
mov
test
pusha
mov
(bad)
xor
inc
fcom
bound
(bad)
and
ds
jns
cmp
push
inc
cmp
xlat
std
rcr
aam
cmps
icebp
or
mov
cmps
pop
sub
xor
mov
(bad)
retf
pop
xor
mov
and
into
fbld
popf
add
pop
test
jno
or
mov
inc
push
inc
or
mov
mov
and
fsub
repnz
fcom
inc
pop
inc
xchg
fwait
adc
pusha
fild
mov
adc
mov
or
push
cmp
daa
dec
sub
sub
das
(bad)
fild
ins
inc
fcmovbe
xchg
cmp
std
(bad)
nop
addr16
pop
xor
xchg
mov
inc
int3
push
icebp
scas
enter
cmp
mov
push
xchg
xchg
pop
and
ror
outs
mov
test
adc
xchg
adc
push
lods
hlt
(bad)
cld
or
sbb
jmp
ss
jns
pop
xor
or
jmp
and
and
nop
mov
mov
loope
or
dec
sbb
cmc
cmp
ror
jle
sbb
sar
inc
dec
mov
push
pop
retf
mov
fmul
mov
in
dec
fsubr
in
inc
or
add
mov
mov
(bad)
sub
jle
sar
inc
sbb
pop
data16
out
mov
aam
inc
pop
sbb
push
and
bound
push
iret
pop
adc
test
jge
arpl
xor
stos
jge
xchg
jge
or
inc
imul
nop
push
adc
sbb
fsub
sbb
shr
lods
adc
or
mov
(bad)
ja
repz
xor
sbb
cmc
in
outs
movs
push
xchg
xchg
outs
add
pop
pop
(bad)
stc
xchg
hlt
jo
cmp
mov
and
test
mov
(bad)
int
retf
pop
imul
in
test
loopne
adc
loope
xchg
loope
outs
push
mov
sub
xor
add
gs
pushf
dec
sub
jo
mov
and
mov
out
lahf
sbb
ffree
in
inc
pop
and
sub
shl
adc
stos
dec
or
adc
xchg
arpl
and
pop
sub
pop
leave
into
test
xchg
pop
fcomp
cmc
arpl
cmps
scas
push
sub
mov
add
mov
adc
mov
jbe
mov
inc
sahf
fidivr
pop
xor
cmp
mov
dec
scas
mov
adc
int
sbb
xor
popf
dec
mov
sbb
(bad)
xor
aaa
and
mov
mov
stos
fild
push
xor
cld
lods
inc
pop
daa
cmp
push
das
out
sahf
std
shl
mov
std
mov
jg
pop
imul
adc
int3
aas
mov
ss
jmp
add
outs
ror
js
mov
adc
mov
mov
pop
cmps
(bad)
(bad)
pushf
gs
arpl
mov
xchg
mov
mov
and
clc
pop
mov
or
std
in
lea
add
inc
dec
les
aad
xchg
push
adc
or
aam
pop
mov
mov
dec
mov
mov
pusha
or
xchg
enter
idiv
pusha
adc
pop
into
jbe
mov
shl
push
lods
scas
aam
fs
loopne
test
pop
ins
sub
lock
cmp
mov
add
cmc
jnp
jmp
inc
idiv
sbb
inc
out
loopne
cli
xor
(bad)
test
sub
inc
aam
jl
push
gs
or
adc
push
aam
sbb
ret
cwde
cmp
arpl
js
or
or
push
dec
or
xor
js
xchg
test
xchg
test
adc
js
shr
jb
cmp
ins
loope
xor
daa
mov
sub
pusha
call
or
shl
pop
sbb
inc
movs
popf
push
test
xlat
hlt
jg
test
or
dec
mov
dec
mov
mov
cmp
xchg
inc
pop
and
sbb
cmp
mov
inc
push
les
push
ror
fwait
push
xor
test
push
and
ret
mov
(bad)
jmp
loope
xor
cmp
cmp
jo
stos
push
in
push
les
stos
out
out
xlat
(bad)
inc
push
mov
out
cmps
shl
and
es
out
test
outs
jge
xlat
dec
and
and
jl
out
shl
xor
sub
out
pop
pop
(bad)
outs
stos
or
sub
cmp
hlt
mov
or
(bad)
sti
sbb
mov
pop
and
xor
mov
mov
ja
mov
push
mov
in
adc
xchg
or
stos
retf
xor
adc
(bad)
mov
push
loopne
mov
rol
mov
mov
movs
mov
push
pusha
cmc
dec
fucomi
sub
adc
iret
mov
pusha
das
data16
jo
in
push
jne
rcr
leave
mov
ss
and
jecxz
xchg
mov
xchg
loope
ss
jb
and
sub
or
pop
es
add
pop
add
pushf
mov
add
fs
inc
fcom
mov
xor
shl
int
push
sti
xor
lods
int
cld
xchg
xor
xchg
cmp
push
inc
xor
retf
std
hlt
(bad)
rcr
iret
shl
mov
or
push
call
mov
enter
mov
push
outs
cld
gs
pop
inc
pop
icebp
push
push
xchg
mov
ret
fnstcw
int
sub
add
mov
dec
add
stc
add
gs
dec
fdivr
mov
(bad)
out
pop
pop
push
div
dec
daa
dec
clc
pop
adc
out
setno
xlat
cmp
sub
repnz
push
call
popa
inc
lods
cli
pop
test
jne
sbb
mov
out
dec
fst
xchg
sbb
hlt
sahf
popf
shl
ins
xor
loop
es
pusha
xchg
adc
out
aam
adc
add
inc
jl
int
jmp
push
xchg
jbe
jbe
in
add
jmp
je
or
rcl
jp
rol
(bad)
retf
ret
scas
mov
push
jae
jle
xchg
xor
dec
push
or
out
sbb
lds
cmp
jae
sbb
imul
fidiv
(bad)
sti
xor
fnstcw
add
ds
fisubr
xchg
cmp
push
jne
(bad)
(bad)
out
jno
mov
shl
rcr
rcl
push
mov
daa
into
jo
xor
stos
mov
mov
test
sub
mov
ret
test
idiv
jecxz
js
push
icebp
lds
xchg
jbe
aaa
das
lahf
cdq
or
ins
xor
sub
dec
mov
popf
mov
repnz
mov
nop
(bad)
and
cmp
xor
or
jb
push
sbb
push
dec
fucomip
and
clc
mov
test
shl
test
and
add
or
in
test
push
inc
nop
mov
xor
clc
xchg
xlat
pop
adc
cld
arpl
dec
outs
sub
push
ins
inc
int
out
sar
sbb
mov
or
cmp
mov
mov
inc
or
outs
jl
mov
cmp
cmps
inc
jecxz
gs
rol
mov
sbb
dec
sbb
rcr
ret
(bad)
test
out
push
and
xor
ror
fmul
aam
lds
pop
fild
cld
popf
aas
jge
cdq
pop
fwait
jle
mov
loope
mov
test
ret
sub
rcr
sbb
push
add
pop
out
xchg
jb
pop
xchg
sbb
mov
std
lds
jno
add
in
xchg
mov
xchg
mov
sti
cdq
sub
fstp
push
inc
push
jbe
adc
sub
adc
outs
inc
test
pop
cmp
ficomp
cmp
push
repz
(bad)
mov
inc
ins
xchg
aaa
mov
cli
adc
lods
popa
out
pushf
(bad)
in
(bad)
bound
jae
scas
jb
or
push
shr
add
jle
popa
and
jmp
or
popf
lds
mov
jmp
ficomp
jmp
and
icebp
fidiv
pop
mov
test
mov
mov
add
mov
lahf
shr
fsub
ret
pop
sbb
(bad)
cdq
mov
add
arpl
ret
sbb
call
scas
mov
dec
(bad)
lock
pushf
addr16
pop
repnz
xor
cmps
adc
movs
mov
add
js
imul
out
sbb
push
fs
in
gs
add
lock
(bad)
mov
pop
sti
cmps
sub
js
std
scas
jns
add
pop
test
add
adc
inc
sar
jbe
aaa
pushf
in
bound
mov
in
pushf
and
xchg
imul
rcl
push
or
sub
jp
xchg
pop
pushf
ins
jbe
out
jns
popf
jmp
out
shl
mov
add
or
gs
sahf
pop
xchg
xchg
ror
xlat
les
push
adc
jl
push
call
icebp
cmp
popf
test
jb
sub
xchg
retf
inc
jb
cmp
je
test
add
hlt
push
gs
adc
xor
call
leave
lds
or
(bad)
sub
scas
and
fdiv
and
inc
or
ficomp
xchg
mov
fnstsw
xchg
adc
pop
sbb
jb
lock
retf
in
or
retf
mov
inc
sbb
xor
or
xchg
popf
jne
sub
jmp
add
and
cmp
mov
frstor
int
inc
loope
jne
add
fisttp
and
jbe
in
xor
out
in
mov
jae
gs
shl
int3
les
jae
imul
sub
ss
aam
and
ficomp
pop
pop
xchg
and
dec
xor
pop
mov
sbb
out
pop
or
stc
les
jae
push
fldenv
stc
aaa
mov
xor
fcmovnb
test
adc
leave
js
das
pop
sub
and
cmp
mov
push
mov
jns
fmul
inc
dec
stc
push
out
(bad)
sub
push
jecxz
mov
or
mov
sub
test
or
xor
jecxz
rol
or
xlat
pop
fdivr
jge
and
js
xor
mov
in
in
retf
fist
popa
test
daa
xchg
fld
test
in
xlat
and
jl
sbb
inc
sbb
daa
push
fdiv
repnz
xor
fisubr
mov
cmp
popf
lds
mov
xor
pop
les
dec
mov
xchg
add
mov
enter
dec
gs
pop
mov
cli
into
into
sub
fsubr
and
imul
jmp
popa
pop
jl
jne
fldcw
scas
xor
cdq
fstp
aad
sub
dec
fstp
call
pop
push
inc
jae
add
shl
adc
jmp
xchg
popa
mov
sbb
dec
jp
pop
sbb
test
pop
cmps
xchg
(bad)
mov
xchg
mov
inc
out
cmp
int
aad
xchg
jl
scas
movs
ror
les
xor
fs
mov
loopne
or
in
inc
mov
inc
cwde
jecxz
stos
jmp
retf
outs
ss
dec
push
sbb
sub
pop
addr16
sub
push
call
adc
xor
add
ror
push
and
adc
les
jmp
inc
push
mov
sahf
pop
std
fcomi
stos
movs
fidivr
jecxz
xchg
xor
cmp
shl
pusha
aam
push
test
add
push
int
dec
hlt
mov
lods
cmp
push
sub
mov
dec
pop
inc
pop
jle
mov
rcr
add
dec
pushf
pop
cmp
fcom
hlt
loopne
sbb
retf
sahf
inc
rcr
lea
adc
mov
jb
jmp
and
popa
adc
js
sub
cmps
cmps
or
push
loop
xor
ficom
dec
rcl
div
retf
clc
and
mov
xor
dec
and
jno
pmulhuw
xchg
lods
ret
mov
cmc
xchg
fstp
outs
arpl
cmp
dec
in
dec
mov
sbb
nop
cmp
mov
jmp
xchg
jl
pop
outs
fadd
outs
push
jecxz
rol
xchg
ret
or
in
mov
mov
or
xor
mov
lods
outs
int
out
stos
mov
daa
cmp
adc
callw
call
rcr
xor
sub
enter
xor
xchg
cdq
push
xchg
mov
dec
jbe
stos
cmp
stos
jg
dec
out
fwait
xchg
shr
add
test
retf
pusha
not
xlat
retf
jb
xor
mov
pop
not
or
xchg
pop
sub
jne
fsubr
cmp
inc
dec
or
and
daa
adc
ds
test
das
sbb
xor
add
sub
jno
and
sbb
cld
pop
cmp
mov
jo
hlt
jl
cmp
lods
push
and
fcomp
das
addr16
fld
add
stc
mov
add
scas
lds
inc
cmp
shr
dec
mov
(bad)
aas
sbb
aam
inc
add
dec
in
pop
sub
aad
stos
sbb
mov
mov
cwde
xlat
lea
mov
adc
test
inc
fwait
and
push
mov
mov
pop
ins
out
repz
hlt
inc
jl
retf
push
mov
dec
adc
fsubr
pop
fst
mov
cmp
pop
pop
xchg
mov
sbb
ror
inc
and
ss
dec
push
sub
mov
cmp
or
addr16
das
push
adc
les
dec
add
mov
shl
fcom
test
mov
dec
xchg
and
dec
xlat
or
sbb
aam
cmp
mov
lods
sahf
jnp
adc
repnz
mov
int3
sahf
ret
pop
pop
mov
adc
in
sti
pop
daa
fsubr
jecxz
jge
es
ins
inc
xor
mov
cmp
adc
in
mov
ret
sub
push
stos
out
jbe
xor
mov
push
(bad)
xor
nop
cmc
mov
sub
mov
or
xchg
bnd
fcomp
push
neg
icebp
das
fadd
jo
mov
xchg
rol
shl
ja
fiadd
ds
cld
push
pop
jnp
pop
jno
fmul
sub
pop
mov
mov
ret
mov
imul
sbb
mov
scas
xor
outs
mov
pop
adc
jb
ss
fidivr
mov
pop
sub
or
xchg
xor
test
das
jae
out
iret
imul
inc
mov
pop
scas
shl
mov
sbb
or
or
inc
dec
loopne
scas
mov
push
repz
pop
inc
rol
cmc
ja
sub
adc
cmp
mov
clc
and
xchg
gs
arpl
lods
test
scas
div
xlat
xchg
call
or
dec
adc
out
sti
add
inc
ret
and
xchg
dec
out
pop
mov
movs
jno
sbb
js
jns
jle
and
das
out
push
or
sub
repz
inc
pcmpeqw
cmp
inc
pop
push
inc
or
rcr
adc
pop
push
mov
xchg
xor
sahf
movs
push
mov
ja
inc
aam
aad
popa
sbb
popf
xor
lahf
leave
cli
(bad)
jge
retf
mov
mov
fisub
jb
mov
or
xchg
pop
mov
loopne
add
push
push
push
xor
aam
or
out
out
jbe
mov
mov
mov
test
xor
pop
jbe
cmp
jg
jb
mov
fld
sub
ins
test
movs
dec
pop
mov
ins
cwde
pop
dec
cmps
mov
int3
(bad)
fs
fisttp
mov
push
push
inc
ins
push
inc
cmps
dec
adc
cli
out
ins
xor
stos
add
jmp
cmp
pop
(bad)
rcr
loopne
adc
xchg
arpl
das
dec
push
lds
pop
(bad)
cmc
leave
push
push
jnp
lods
lods
loope
push
in
shl
fidivr
data16
and
push
dec
sbb
pop
aad
jo
mov
mov
dec
xor
inc
es
pop
mov
mov
jl
imul
ds
ficom
add
adc
mov
inc
ret
or
into
cmc
pop
mov
scas
sahf
inc
pop
jns
sub
idiv
das
sbb
push
lahf
gs
xor
push
xchg
mov
dec
xchg
test
mov
jmp
dec
iret
pop
push
inc
pop
mov
es
mov
dec
out
and
(bad)
pop
pop
push
jbe
sahf
mov
pop
into
ret
xor
stc
cs
movs
jo
add
out
mov
ror
scas
sub
int3
dec
ret
je
aam
movs
mov
pop
jb
shr
daa
cmp
sti
pop
mov
in
lds
xor
add
sbb
sbb
sub
ror
retf
sti
stos
cmc
dec
xchg
fdiv
dec
or
dec
jns
lds
inc
sub
dec
jne
scas
add
hlt
sub
mov
shr
leave
push
sbb
test
je
inc
dec
lock
and
jmp
xor
outs
mov
(bad)
xor
in
mov
pop
mov
idiv
sbb
cmc
and
fcom
lahf
cmp
xchg
div
jmp
xor
push
jp
(bad)
inc
mov
loope
jge
jmp
add
inc
das
xchg
icebp
add
int
ja
movs
gs
(bad)
loopne
adc
dec
pop
adc
inc
or
clc
pop
and
shl
push
xor
js
inc
and
int3
push
test
fs
fdiv
push
jbe
push
mov
nop
test
mov
sbb
dec
out
lock
and
out
push
dec
(bad)
call
dec
xchg
or
ror
sub
mov
nop
test
add
loop
sub
and
mov
pop
pusha
and
xchg
lock
cmps
test
and
and
loopne
sub
(bad)
jge
xlat
stc
clc
clc
sub
(bad)
xor
gs
dec
pop
(bad)
sti
add
inc
into
in
je
xchg
cs
in
std
dec
inc
xor
(bad)
ret
in
sbb
xchg
push
xchg
pop
jno
mov
xor
jb
push
or
mov
ss
xchg
aas
hlt
ss
push
imul
sub
sbb
jmp
sar
pop
test
sbb
test
aas
adc
cmp
mov
adc
xor
dec
sub
mov
gs
imul
sbb
pusha
cmc
popa
pop
dec
shl
das
(bad)
jb
fwait
mov
or
popa
pop
loope
sub
push
imul
or
inc
pop
inc
ror
inc
jns
mov
pop
xchg
push
leave
jg
or
sub
mov
inc
adc
cmc
pop
aam
xchg
cwde
dec
mov
enter
ror
sbb
mov
shl
mov
dec
dec
aad
cli
pop
inc
test
stc
push
jns
jo
mov
push
repnz
push
push
lock
adc
into
fcmovnb
sub
sbb
pushf
ja
cdq
retf
inc
sub
push
rcr
lods
test
les
and
in
sbb
aad
mov
cmp
in
bound
jbe
mov
(bad)
mov
int
mov
pop
fcomp
pop
sub
addr16
jne
in
sub
push
cmp
fxam
sahf
xor
sti
ins
and
push
ret
xor
xchg
mov
scas
aas
dec
or
fisttp
fwait
mov
stos
sbb
and
rcr
pop
arpl
stos
addr16
adc
mov
push
lock
aam
sahf
call
push
sub
in
push
mov
inc
sbb
mov
ror
dec
mov
sub
(bad)
mov
inc
adc
mov
mov
xor
test
out
neg
rcl
int
and
add
mov
retf
mov
cmps
addr16
xor
retf
enter
mov
push
jo
cmp
out
arpl
test
push
inc
(bad)
and
mov
das
and
xchg
cmp
mov
xchg
jp
or
add
pop
out
js
inc
mov
aad
icebp
add
push
push
jg
in
inc
and
loopne
pop
mov
cmp
mov
ins
cdq
mov
jl
sar
cs
popa
daa
sbb
xchg
push
outs
mov
cmp
mov
ret
cdq
add
mov
mov
jno
sub
push
mov
les
xlat
xchg
dec
test
aad
pop
je
icebp
lds
jbe
stos
out
jo
sbb
int
fs
dec
pop
daa
test
daa
xchg
sar
jmp
push
in
xor
add
dec
inc
pop
fistp
cwde
adc
bt
in
jmp
sub
enter
pop
lds
lock
in
outs
cmp
pop
imul
and
mov
mov
pop
dec
sub
pop
mov
jg
push
ins
inc
push
aaa
retf
mov
scas
or
fdivr
scas
(bad)
push
push
xor
lds
xchg
cmp
xor
in
sbb
movs
jge
jns
xor
sbb
in
xchg
lods
in
dec
sub
cmps
fisubr
add
jne
cdq
imul
sbb
int3
mov
mov
xor
add
daa
test
cmps
pop
mov
push
xchg
or
(bad)
retf
(bad)
test
idiv
test
inc
xchg
test
jb
hlt
dec
pop
cmp
jo
mov
push
pop
dec
add
or
idiv
jge
or
scas
cmp
push
mov
or
mov
mov
fcmovnbe
cmps
icebp
add
push
add
cmp
fs
lods
fcom
nop
retf
popf
(bad)
mov
scas
icebp
pop
or
inc
leave
cmp
jae
mov
mov
dec
gs
jg
fist
movs
hlt
lock
test
mov
push
push
mov
or
call
or
sbb
jnp
retf
inc
pop
add
rcl
stos
mov
pop
in
dec
(bad)
push
outs
cld
jne
call
sub
jbe
nop
test
fstp
stos
rol
lea
mov
test
pop
mov
cmp
add
adc
fwait
mov
mov
mov
rcl
sbb
jecxz
and
cwde
into
sahf
shl
(bad)
aas
jmp
sub
jmp
popa
dec
mov
push
jns
int
and
adc
pop
fidivr
push
lock
(bad)
inc
xchg
xchg
push
inc
sub
lds
fwait
dec
jb
jge
daa
mov
data16
sub
jmp
mov
mov
test
pop
inc
xor
push
(bad)
jnp
mov
in
hlt
push
fld
mov
push
adc
loop
cmp
jne
jae
jmp
push
outs
ret
jge
out
xor
jb
bound
int3
icebp
dec
lods
lock
mov
inc
pop
nop
and
jmp
push
mov
and
and
bnd
sub
(bad)
and
cwde
jle
pop
or
sbb
xchg
rcr
mov
dec
jae
and
inc
xchg
lods
xor
push
jo
mov
fs
mov
dec
(bad)
test
dec
aam
push
mov
dec
mov
pop
pop
mov
ds
int
sub
aam
mov
test
movs
lds
out
das
fdivr
adc
cdq
out
mov
xchg
adc
and
(bad)
mov
cwde
jb
outs
lock
xor
mov
mov
test
outs
mov
pop
into
mov
jno
adc
scas
shl
mov
test
adc
jp
xor
scas
out
scas
enter
mov
or
in
sub
movs
stc
sbb
sub
add
ss
pop
cmp
enter
cmp
(bad)
mov
pushf
ins
and
mov
xchg
(bad)
lock
push
push
popf
fstp
popf
push
xor
push
iret
dec
mov
cmps
out
xor
lods
jg
test
mov
dec
xor
lea
xor
or
sub
pop
ss
push
loopne
sub
shl
jmp
cmps
scas
or
not
xor
or
cwde
cmp
dec
out
shl
fiadd
rcl
push
jne
sahf
adc
and
shl
loope
jle
cmp
fcomp
cmp
jge
jne
mov
pop
add
or
pop
out
sub
xchg
adc
sbb
pop
pop
dec
inc
arpl
clc
mov
rol
xor
aaa
or
sub
inc
fsubr
fstp
call
adc
and
ins
xor
jmp
mov
adc
or
ins
js
dec
bound
xchg
or
push
xchg
and
ror
xchg
iret
je
push
in
dec
dec
cmp
shl
call
xchg
mov
mov
pop
lock
xchg
(bad)
inc
sub
sbb
mov
xor
pop
add
bswap
ins
mov
push
je
repnz
jb
sbb
pop
cmp
aad
(bad)
mov
sahf
adc
dec
jae
or
ficomp
pop
retf
mov
scas
jge
repz
test
repz
cwde
pusha
clc
inc
je
out
sbb
stos
nop
nop
cmp
in
call
pop
xchg
in
push
xlat
sbb
pop
int3
les
or
cld
leave
xchg
mov
sbb
xchg
fimul
sahf
and
add
fcmovnb
ret
dec
push
fistp
rcr
test
(bad)
sub
and
jns
sub
add
mov
ins
ins
in
loopne
mov
inc
cdq
jns
push
mov
(bad)
(bad)
fst
sub
fstp
or
pop
push
shl
movs
ror
jnp
and
xor
test
jge
mov
sar
xor
and
jne
(bad)
jnp
or
dec
in
repz
cli
pop
je
sub
cwde
sbb
or
or
mov
retf
std
repnz
cmp
sbb
scas
mov
or
fwait
ret
adc
xlat
adc
movs
sub
movs
or
mov
fcom
(bad)
mov
fdiv
push
icebp
mov
sahf
es
xchg
pop
addr16
rcl
aaa
repnz
fisttp
into
loopne
aad
out
jbe
pop
fimul
jp
es
mov
fld
daa
repnz
pop
aad
xchg
or
repz
retf
mov
jae
mov
ficom
xlat
mov
cmc
stos
xor
push
pushf
fnsave
push
mov
and
ror
xchg
rcl
mov
push
ss
pop
dec
or
push
inc
ror
dec
ret
(bad)
(bad)
sbb
inc
xchg
mov
push
int
lds
inc
xor
scas
sti
adc
out
mov
pusha
popf
xor
loopne
mov
ret
or
dec
pop
cmp
std
xchg
sbb
dec
xor
xor
jo
rcl
xor
jno
aam
xchg
not
sub
xor
or
out
add
(bad)
adc
push
lods
pop
jmp
adc
out
sub
(bad)
mov
icebp
rcr
mov
sbb
fcos
fsubr
mov
sub
adc
or
or
sbb
add
icebp
lods
jmp
push
dec
xchg
addr16
mov
ror
test
cmps
sub
mov
stos
sbb
ins
push
retf
sub
out
std
push
rcr
inc
into
add
inc
xchg
cmps
mov
xor
and
xchg
mov
and
xchg
inc
sar
repz
push
inc
aaa
fldcw
jg
add
cmp
imul
dec
rcr
stos
inc
mov
inc
mov
arpl
dec
inc
fs
mov
mov
cdq
retf
test
sbb
(bad)
in
xchg
call
inc
push
xor
daa
fisubr
aad
scas
cmps
dec
retf
mov
shl
ins
(bad)
mov
in
jmp
push
out
icebp
pop
jge
idiv
cmps
lds
or
repz
mov
mov
mov
jmp
push
test
fbld
mov
cmc
test
ins
cmp
dec
sub
mov
push
mov
xor
(bad)
mov
sahf
jb
inc
stos
sub
in
jo
(bad)
sti
push
sbb
dec
out
call
popa
push
icebp
cmc
(bad)
shr
loope
aad
xlat
jmp
fsub
aad
dec
jnp
popa
dec
xchg
dec
ret
pop
push
test
mul
mov
shr
scas
xor
mov
or
sbb
in
push
or
jl
shr
dec
and
xchg
cld
(bad)
mov
push
cmp
mov
ss
push
adc
cwde
sub
mov
sub
ja
mov
mov
(bad)
sub
xchg
push
add
dec
rcl
out
jne
xchg
mov
mov
lahf
add
cmps
in
sbb
cmp
test
mov
enter
and
repnz
clc
mov
hlt
dec
push
fwait
in
mov
pop
sub
push
push
pop
mov
cdq
adc
loopne
out
sbb
add
stos
xchg
jns
(bad)
pop
jp
inc
(bad)
xchg
data16
mov
cwde
neg
aas
ss
mov
sbb
pop
inc
icebp
cmp
(bad)
and
cdq
movs
es
xor
inc
ffreep
dec
cmc
pop
cld
jno
ret
rcr
ret
cwde
retf
and
push
jle
test
(bad)
sahf
ror
aas
jg
xchg
aas
add
push
mov
cmp
mov
pop
aaa
pop
hlt
movs
sbb
mov
dec
push
daa
in
movs
mov
sbb
push
jbe
aaa
sub
movs
clc
push
jecxz
popa
jle
test
into
adc
in
repz
stc
out
imul
push
stc
test
xchg
loopne
push
jno
cmp
dec
sbb
ds
mov
daa
add
loope
(bad)
imul
xchg
jbe
aas
mov
mov
mov
loop
jb
inc
scas
stc
aas
nop
in
mov
inc
jecxz
jne
and
retf
and
mov
jno
pop
scas
fiadd
xchg
jmp
push
inc
leave
jle
jmp
xor
cli
add
int
pop
ret
icebp
mul
ins
inc
xchg
jnp
out
sbb
mov
inc
inc
test
jo
ret
stc
retf
add
out
int
jle
push
xchg
jbe
push
(bad)
std
mov
xor
sahf
scas
dec
fsub
mov
lods
shr
dec
dec
push
mov
sbb
cmp
stc
mov
dec
dec
sbb
xor
mov
fbstp
cmps
mov
popf
and
xchg
add
fld
(bad)
sahf
int3
xchg
cmp
jmp
and
cdq
dec
rol
ins
repnz
mov
inc
leave
mov
inc
pminub
pop
retf
lods
ficomp
cmc
inc
push
ss
mov
or
jmp
iret
mov
xchg
clc
sbb
mov
int3
(bad)
ja
enter
and
cmps
outs
adc
or
xor
jg
int3
sbb
dec
adc
fwait
inc
mov
es
ds
loope
cmp
and
imul
pop
pushf
arpl
xchg
push
sbb
iret
xor
bound
or
lods
test
gs
dec
and
push
ficomp
loop
mov
dec
frstor
icebp
adc
or
into
cmp
xor
fcmove
cwde
mov
cmp
test
and
xlat
ins
sub
test
pop
in
aaa
inc
or
scas
sahf
add
mov
and
jmp
outs
mov
and
aad
pop
adc
sahf
pop
stc
mov
cvtps2pd
cmc
mov
je
test
fdiv
test
mov
dec
je
icebp
cmp
inc
mov
fst
adc
(bad)
or
ret
call
fsubr
adc
xlat
repz
das
popa
mov
mov
icebp
mov
push
jmp
sbb
adc
jbe
ja
mov
lea
aaa
ficomp
bound
inc
sti
xlat
jge
fmul
pop
test
jnp
inc
xor
sub
adc
shl
stc
push
dec
mov
rcr
xor
cmp
loop
xchg
mov
out
aaa
push
clc
mov
test
bound
in
pushf
xor
sbb
idiv
pop
into
and
xor
lods
push
sbb
adc
ins
jae
out
stc
inc
push
movs
jb
cmp
popf
rcl
pushf
pop
fs
loopne
mov
xlat
test
popa
ffree
mov
das
xchg
outs
(bad)
cmp
pushf
mov
mov
inc
adc
mov
repz
pop
sub
add
jb
mov
mov
push
sbb
frstor
jmp
sahf
les
ins
es
inc
pop
sub
sbb
add
cmps
aam
cmp
adc
or
xchg
pushf
in
iret
push
repz
stos
and
int
and
jnp
or
test
retf
pop
jb
and
dec
clc
dec
movs
xor
test
pop
pop
loop
aad
repz
adc
cmp
sbb
xchg
or
jl
mov
pop
fidiv
pop
cdq
xor
or
sbb
aas
add
icebp
mov
test
scas
xor
popf
and
pop
fsub
in
pop
sbb
outs
leave
and
pop
cld
xor
inc
add
in
sbb
lahf
pusha
loop
jae
or
dec
lea
sbb
test
mov
test
ins
or
add
add
into
jnp
jl
xlat
push
jg
rol
inc
mov
sbb
pop
or
jbe
into
sar
jno
mov
bound
jne
jmp
jnp
fcom
xor
test
retf
sbb
(bad)
mov
(bad)
js
push
fldcw
jns
das
xchg
ja
call
sti
sbb
xchg
sar
ds
ficomp
xor
repnz
(bad)
xlat
jnp
sub
aas
lahf
aad
(bad)
retf
in
sar
mov
and
fist
mov
mov
and
scas
movs
stc
mov
lods
repnz
test
outs
mov
clc
xchg
int3
out
jnp
and
xor
cmp
shl
add
(bad)
int
sbb
add
cmp
inc
pusha
jns
pop
and
movs
out
sar
test
sbb
push
in
fist
jno
xor
sbb
xchg
ss
out
push
adc
pop
movs
(bad)
push
(bad)
loopne
push
cmp
jne
mov
dec
xchg
cs
cmp
jmp
retf
pushf
xchg
outs
adc
xchg
jmp
and
pop
mov
ss
pushf
lds
shr
aaa
fwait
or
pop
mov
mov
(bad)
std
lods
adc
jae
ror
push
jg
movs
and
retf
fld
bts
fisttp
cs
cmp
hlt
and
or
stos
add
or
test
and
sar
and
mov
mov
xchg
pop
xor
xor
xchg
popf
imul
in
xchg
pop
jmp
and
jg
in
dec
jmp
jb
mov
aas
dec
fimul
test
(bad)
mov
add
scas
sar
add
rcr
(bad)
in
dec
retf
xchg
inc
popa
cmps
and
shr
jnp
ja
nop
mov
popf
push
jae
pop
aam
sahf
mov
out
adc
dec
aas
and
lock
jmp
jne
ins
cmc
les
dec
adc
(bad)
dec
lods
aam
daa
sub
cmp
call
adc
hlt
cmp
fidiv
jbe
inc
call
or
out
ins
fmul
and
sub
loope
mov
or
(bad)
scas
mov
lahf
cmp
popa
cmp
adc
mov
push
fs
sub
inc
sub
ss
adc
or
mov
mov
push
scas
popa
out
and
lods
xor
das
dec
ficomp
call
je
push
mov
adc
test
rcr
or
scas
mov
pusha
or
adc
or
sub
clc
scas
dec
xlat
push
jne
ror
jnp
pop
loope
adc
icebp
rcl
jmp
aaa
xlat
sub
inc
mov
aas
dec
(bad)
xor
daa
xchg
dec
add
js
mov
stc
movs
popf
mov
mov
push
xor
mov
cdq
push
xor
idiv
sbb
xchg
adc
jl
mov
inc
outs
jecxz
jo
mov
xchg
gs
sub
adc
adc
rcl
daa
mov
mov
sub
or
(bad)
inc
stos
dec
pop
adc
scas
in
push
shr
mov
retf
pop
add
inc
adc
inc
ins
retf
mov
dec
jge
jmp
js
stos
dec
cdq
cmp
xlat
outs
sbb
shr
call
pop
(bad)
dec
cmp
cld
dec
stos
ror
push
fwait
inc
mov
call
pop
add
int3
addr16
or
and
int
pop
cld
loop
imul
jno
jno
cmp
push
movs
xchg
xor
or
sbb
ror
addr16
add
pop
mov
sub
xor
push
arpl
push
int3
mov
ret
leave
popa
mov
mov
(bad)
mov
push
stc
jbe
sbb
jmp
loopne
pop
jns
shl
mov
add
and
dec
adc
xchg
and
shr
sahf
adc
sub
sbb
xchg
(bad)
dec
push
loope
pop
adc
and
loopne
push
fisttp
xor
test
xor
add
arpl
jle
push
int3
fistp
push
and
je
outs
cld
push
scas
(bad)
std
push
rcl
enter
stos
popf
inc
std
sub
adc
(bad)
push
(bad)
sbb
or
add
pop
mov
call
xor
mov
fistp
ret
cwde
das
fisttp
xor
jno
repz
mov
sbb
(bad)
jb
adc
out
jle
and
jbe
lahf
test
fisub
mov
aam
cmp
pushf
mov
ficom
adc
std
cmp
out
sbb
mov
adc
pop
mov
cmp
adc
cmp
cmp
mov
ds
pop
pop
inc
jnp
imul
xor
ins
pop
(bad)
cmp
sub
xchg
mov
and
jl
aaa
mov
sti
adc
ins
std
(bad)
adc
imul
push
ret
mov
jl
fisub
out
pop
mov
icebp
(bad)
in
repz
(bad)
mov
fs
mov
je
out
aaa
cwde
xchg
pop
push
fstp
outs
jae
dec
mov
pop
cmp
jns
fdivr
stos
bound
loop
data16
sahf
popf
cmc
and
mov
xlat
mov
adc
dec
pop
mov
jp
cld
fadd
repz
push
inc
aas
(bad)
aaa
inc
jne
and
mov
and
jge
sbb
int3
fldcw
dec
xlat
xor
adc
int
mov
cmp
adc
jle
pop
or
lahf
clc
clc
mov
add
div
fsubr
xchg
mov
in
add
dec
(bad)
push
sbb
cmp
mov
loope
xor
xchg
shl
mov
in
push
jns
sbb
add
mov
ret
mov
mov
dec
push
sahf
lds
add
imul
sbb
mov
outs
pushf
xchg
push
pop
mov
and
pop
push
and
jge
scas
inc
mov
call
add
mov
es
out
jg
mov
sar
call
lea
sbb
or
mov
adc
add
call
mov
mov
inc
push
jge
jns
jp
inc
out
mov
mov
stc
xchg
sbb
lahf
loop
jl
mov
push
dec
dec
mov
cmp
cmc
outs
inc
test
xchg
or
mov
ds
cmp
arpl
and
lea
push
fistp
call
std
idiv
jo
int3
cmp
fbld
(bad)
push
inc
neg
lods
xchg
mov
dec
enter
cld
sbb
mov
sahf
rcl
dec
into
sbb
adc
mov
mov
fnstsw
fisttp
das
fst
push
mul
inc
cmps
mov
mov
and
outs
or
sub
xchg
mov
pop
cmps
out
arpl
(bad)
imul
pushf
pop
add
jne
cmp
jbe
sbb
and
adc
sub
push
dec
popf
mov
adc
ja
mul
les
loope
cwde
hlt
in
cmps
dec
ret
dec
xor
shl
stos
ins
jne
mov
pop
cmps
pop
push
mov
jg
mov
out
addr16
mov
loope
cmp
xor
sub
sbb
pop
shl
call
jne
mov
lods
nop
ret
xchg
dec
leave
push
std
loop
push
(bad)
xor
gs
inc
xchg
test
mov
aas
cwde
cld
mov
mov
dec
call
(bad)
xor
xchg
test
aam
or
in
pop
adc
dec
jle
loopne
rcl
int
inc
and
dec
mov
push
das
cmp
pushf
sbb
xor
neg
in
xchg
cmp
dec
stos
inc
push
ins
out
jg
pop
pop
outs
test
das
mov
dec
inc
and
mov
push
pop
cmc
enter
ss
in
inc
push
cmps
popf
pushf
je
ret
lods
inc
inc
test
adc
data16
cli
fwait
pop
ror
xor
fcmovb
neg
inc
xchg
sub
mov
popa
inc
mov
jae
and
fucomi
ja
inc
sbb
fnstenv
pop
stos
cmp
push
dec
cmp
sahf
sahf
(bad)
retf
call
dec
jne
in
loop
sub
cmps
xchg
imul
sbb
cmp
repz
loop
test
(bad)
push
aam
jmp
ret
mov
sar
dec
das
jno
cmp
jle
xchg
jecxz
sahf
sbb
inc
and
fidiv
cmp
aas
call
add
jmp
cmp
xchg
adc
lods
int3
push
dec
inc
lea
push
add
jb
imul
fstp
cmp
ficom
test
jg
push
imul
dec
xchg
jl
adc
fld
xor
lock
dec
cmp
add
ins
int3
inc
pop
clc
xor
dec
mov
test
xchg
repnz
add
int3
cmp
jno
outs
fdivr
cmps
fmul
inc
out
idiv
scas
mov
push
and
outs
and
sbb
in
pop
pop
shl
push
xchg
add
mov
sbb
into
jmp
and
xor
mov
cmp
cmp
into
je
pop
xchg
aaa
mov
in
int3
je
mov
dec
push
and
out
pop
ins
and
inc
mov
push
cmp
inc
mov
xor
stos
jno
fldenv
xchg
dec
ret
cmc
pop
jle
xchg
sbb
(bad)
xlat
jp
imul
or
dec
mov
xor
outs
sub
sbb
test
push
and
and
mov
(bad)
icebp
in
idiv
out
adc
cli
push
hlt
adc
outs
mov
(bad)
cmp
ins
mov
xchg
into
dec
xor
jae
xor
movs
in
sub
or
jo
push
pop
or
jbe
mov
push
or
cmovge
and
xchg
or
test
mov
js
add
leave
push
bound
push
imul
pop
lds
popa
rol
xor
pop
add
inc
or
test
xor
fisttp
or
inc
pop
adc
mov
jecxz
jmp
rcr
mov
or
mov
sub
cmp
pop
int
dec
sahf
pop
adc
sti
lods
xor
xchg
rol
cmp
aad
cmps
mov
cwde
ss
stc
(bad)
cmp
scas
push
fidivr
loop
mov
fimul
push
cs
gs
xor
outs
cmp
add
pop
hlt
out
jp
scas
and
sbb
adc
outs
ror
cmp
repz
repz
sti
test
pusha
push
push
mov
inc
jg
fimul
sbb
or
pop
test
cmps
mov
dec
add
jge
push
add
sub
out
add
mov
sbb
cmps
sub
xchg
inc
and
cdq
clc
pop
xchg
shl
and
xchg
inc
imul
daa
sub
inc
mov
mov
mov
push
and
and
add
cdq
pop
jle
xchg
mov
mov
lods
push
adc
mov
push
popa
pusha
jne
sub
repz
inc
stos
cmp
push
xor
push
(bad)
(bad)
shl
pop
adc
js
aas
popf
pop
adc
lock
lds
mov
retf
mov
cmp
cmp
add
mov
mov
test
fcmovb
push
je
loope
popa
sub
test
hlt
out
push
cs
add
pop
xor
scas
push
addr16
lods
adc
add
outs
mov
ds
adc
outs
sub
pop
fisubr
xor
add
inc
adc
jp
mov
pushf
into
pop
xor
and
dec
jnp
inc
dec
call
and
cmp
lahf
xchg
inc
mov
retf
mov
cmps
mov
hlt
pop
loopne
adc
push
jmp
loopne
jmp
rcr
and
sbb
(bad)
(bad)
pop
push
mov
loopne
push
mov
adc
xor
shl
test
daa
mov
mov
cli
jmp
jge
dec
cmp
and
push
fadd
dec
test
ud2
inc
shl
mov
pop
sbb
mov
out
inc
xor
sub
push
rcl
sbb
adc
repz
loope
pop
gs
mov
sti
imul
lock
mov
cmps
mov
cmp
pop
add
sub
loopne
push
fs
sub
sbb
fucomip
cmp
mov
inc
mov
cdq
inc
lods
inc
inc
mov
mov
(bad)
leave
gs
sub
mov
cmp
push
jb
clc
sbb
mov
sub
mov
dec
adc
xchg
jecxz
jb
shl
fild
xor
dec
xchg
add
hlt
jecxz
aad
(bad)
jae
jg
push
push
xor
sbb
sbb
xor
and
mov
lea
ret
jmp
push
sub
jnp
or
sub
in
das
jmp
prefetch
or
jmp
cmp
rcr
jmp
sub
cwde
push
cmp
mov
xchg
loopne
loop
inc
xlat
jmp
je
add
retf
sub
stos
popf
cdq
jg
imul
movs
cmp
mov
scas
add
out
popf
dec
sub
pop
ss
mov
fcmove
adc
cmp
out
push
lds
pushf
pushf
xchg
jmp
movs
pushf
in
mov
mov
ficomp
sar
mov
je
js
shl
adc
mov
imul
leave
inc
(bad)
out
jmp
xchg
mov
mov
(bad)
and
retw
cmc
test
mov
pop
(bad)
push
add
sbb
in
popf
add
retf
cmp
pushf
fisttp
mov
loope
cmp
into
cmp
push
(bad)
xchg
xor
mov
or
pop
lods
hlt
pop
das
loopne
mov
fcmovnb
(bad)
icebp
and
inc
sub
sub
les
xchg
add
inc
mov
fwait
out
arpl
mov
fwait
pop
mov
jmp
adc
dec
xchg
fldl2t
sub
jmp
pop
inc
xor
jmp
(bad)
add
push
leave
lods
sub
fidivr
add
jecxz
lds
and
mov
repz
retf
clc
inc
and
inc
loope
adc
push
sti
add
dec
(bad)
adc
dec
xchg
movs
mov
sbb
aas
xchg
xlat
mov
jmp
adc
xchg
loope
jbe
push
xchg
xlat
test
mov
jbe
or
(bad)
mov
ins
shl
xchg
sub
inc
push
xchg
mov
cmp
jne
inc
stc
jmp
xchg
jmp
sbb
and
dec
jb
or
pop
out
das
inc
daa
jne
bound
out
xchg
mov
xor
lods
mov
jle
cld
aaa
aad
adc
mov
addr16
mov
(bad)
xchg
arpl
mov
adc
test
dec
jp
mov
inc
test
cmp
mov
test
xor
add
jb
fdivr
je
or
ja
jp
retf
test
push
xchg
jbe
fsubr
es
outs
push
or
int3
gs
cmp
sub
mov
cmp
call
and
loop
sub
mov
jge
and
inc
and
(bad)
dec
push
inc
out
scas
rcl
(bad)
xchg
mov
adc
adc
jecxz
outs
inc
push
aam
je
shr
sar
neg
sbb
mov
loop
in
ror
mov
idiv
push
xor
jge
xchg
fnstenv
jbe
mov
dec
fmul
out
mov
and
call
aad
sbb
nop
or
sbb
mov
sbb
cmc
(bad)
or
loope
push
loope
pop
xchg
pusha
sub
pop
xchg
mov
ja
jno
rol
mov
push
loopne
and
jmp
loope
fst
mov
inc
jg
xchg
mov
leave
xor
dec
cmp
mov
pop
jmp
mov
aad
scas
jecxz
repz
mov
shl
pop
mov
mov
in
pop
call
dec
enter
mov
adc
imul
aaa
xchg
aaa
jmp
or
pop
pop
out
(bad)
out
add
push
push
adc
(bad)
shl
aas
cmps
pusha
adc
mov
sbb
xchg
push
mov
lds
sbb
pushf
movs
fs
jmp
fldcw
rcl
jne
xchg
call
js
push
fsubrp
ins
and
dec
jge
pushf
inc
repz
cmp
jbe
inc
mov
sbb
mov
sbb
mov
mov
push
cmp
mov
ret
push
outs
movs
inc
out
xchg
shr
ins
cmp
lock
loope
aam
adc
mov
xlat
std
mov
push
cmps
jmp
jp
js
cmps
sub
pop
cmc
(bad)
or
mov
cs
arpl
xlat
fsubr
sub
sub
in
sbb
push
jb
retf
cwde
cmp
out
cmp
test
dec
dec
inc
das
aad
add
movs
jge
sbb
hlt
push
mov
sti
stc
rcl
fidivr
out
in
dec
sti
xchg
ds
ja
or
std
in
or
push
stos
popf
adc
ret
pop
and
push
in
in
test
not
aad
adc
pop
nop
xchg
inc
sub
inc
call
or
add
add
sar
xchg
pop
cli
enter
mov
xchg
push
xchg
jge
sub
pop
out
lahf
or
or
xchg
or
sub
shl
adc
sbb
int3
mov
push
out
inc
std
sbb
xor
dec
add
mov
arpl
idiv
mov
mov
repz
or
popa
ret
popf
sub
cmps
adc
mov
inc
cdq
pop
repz
(bad)
and
ja
std
ds
hlt
movs
dec
cmps
les
stc
test
fsub
(bad)
xor
or
imul
and
cmp
repnz
jmp
xor
mov
cmp
xchg
js
or
adc
adc
fstp
dec
test
(bad)
fcomp
out
in
arpl
inc
dec
stos
jle
fisub
and
sbb
inc
add
(bad)
push
call
cmps
fs
in
push
jns
dec
std
pop
pushf
fld
mov
sbb
xchg
pop
cmp
dec
add
xor
mov
cmp
div
xchg
(bad)
pushf
shl
stos
mov
cmps
pop
ins
xchg
enter
push
lods
lock
dec
(bad)
or
rcl
pop
aad
add
jo
xchg
or
in
adc
mov
and
or
mov
adc
pop
dec
mov
xor
les
lods
inc
les
pop
(bad)
into
dec
repnz
popa
xchg
add
push
xor
mov
and
mov
cmc
shl
jns
mov
sub
mov
js
cmps
cmp
data16
lock
scas
fsubr
mov
sbb
mov
hlt
out
xor
jge
push
hlt
jmp
and
sub
push
test
fstp
jae
out
xchg
push
dec
and
push
or
jecxz
add
sub
pop
fbld
stos
repz
add
or
sub
or
jl
or
mov
push
ds
push
jecxz
ret
ret
lea
and
cmps
dec
aam
cli
pushw
repz
lock
aaa
js
aam
sti
dec
test
out
sti
jmp
inc
call
sub
add
push
pop
cmc
ror
call
adc
ret
out
ja
xchg
pop
rcr
fcomi
sbb
mov
or
dec
jae
xchg
loope
bound
jo
adc
aaa
sbb
inc
and
loop
(bad)
outs
shl
gs
xchg
cwde
js
mov
sbb
pop
push
push
inc
push
jecxz
(bad)
sbb
sub
lods
mov
dec
cwde
call
mov
mov
es
xor
test
jae
xlat
jle
imul
(bad)
das
mov
mul
inc
pop
test
cmp
xor
xor
mov
jbe
or
loope
add
or
lds
pusha
ss
das
in
cmp
js
push
(bad)
sbb
push
push
mov
daa
jne
mov
fist
cmps
sbb
xchg
jae
jbe
adc
lods
clc
and
aad
mov
aaa
mov
push
pop
fisttp
mov
out
dec
fisub
add
xor
in
fdivr
lods
call
cmp
pause
pop
mov
jle
(bad)
add
xchg
sbb
stos
dec
mov
cdq
and
loope
data16
cld
fs
sub
movs
stc
fild
mov
push
stos
pop
shr
jl
cmps
sbb
mov
pop
inc
fsubr
aaa
les
mov
les
fmul
sbb
pop
popa
mov
cli
mov
xchg
repz
fcom
mov
retf
jmp
fild
enter
mov
lea
js
data16
pop
cmp
ins
out
int3
add
in
jno
stos
aas
jno
xchg
pop
xchg
js
(bad)
or
cli
ss
lods
mov
pop
arpl
inc
inc
lods
or
call
hlt
pop
xchg
sbb
int3
push
out
ins
dec
push
sahf
xor
pop
or
retf
hlt
lods
popa
into
dec
and
fistp
cmps
push
mov
scas
lock
(bad)
cli
fsubr
cmps
ins
int3
pop
aaa
mov
push
aas
in
jge
dec
retf
and
das
xchg
cmps
lock
cli
in
inc
jbe
xchg
in
sbb
or
adc
(bad)
mov
xor
outs
mov
sub
jmp
loop
retf
jae
arpl
sbb
adc
rcr
mov
fnstcw
inc
cmp
cmp
(bad)
adc
push
inc
dec
(bad)
cs
nop
mov
popf
mov
mov
and
maxps
test
aaa
adc
ret
daa
loop
and
and
mov
mov
dec
jno
adc
call
mov
icebp
enter
mov
mov
mov
mov
enter
jne
ins
fwait
mov
loopne
test
nop
lods
xchg
push
jae
push
push
loopne
adc
mov
call
(bad)
icebp
ret
or
lahf
jbe
add
retf
push
cmp
retf
pop
popf
popf
pop
out
push
addr16
mov
cmp
sub
mov
fcos
mov
es
sbb
icebp
dec
xor
add
aaa
out
out
(bad)
imul
sub
xchg
mov
out
arpl
dec
call
(bad)
jge
int
inc
mov
lods
add
ret
pop
in
aam
cld
xor
cs
rcr
push
inc
jb
mov
dec
mov
lea
test
fcmovb
hlt
cld
sub
xchg
adc
inc
mov
pusha
jno
cmp
test
inc
dec
ss
ins
pop
lods
repnz
jnp
or
inc
xchg
std
or
push
mov
jmp
or
dec
ins
fmul
push
lods
and
xchg
mov
int3
popa
jmp
sbb
add
xor
add
adc
sbb
hlt
inc
gs
mov
mov
and
retf
mov
inc
xor
or
jmp
push
dec
add
cmc
or
mov
pop
jmp
adc
sahf
loopne
shl
jl
je
scas
adc
mov
mov
in
push
shl
jns
cmps
sbb
das
adc
push
sub
dec
cmp
(bad)
(bad)
cmc
iret
or
and
mov
cmp
jg
jg
jbe
(bad)
cmps
xchg
jbe
push
repnz
rcr
leave
lods
cld
mov
mov
fs
xor
outs
or
push
push
scas
ret
mov
jae
mov
adc
ror
out
sub
or
or
pop
imul
jle
or
adc
or
clc
jo
out
lahf
scas
inc
scas
mov
xchg
sbb
scas
imul
cli
pushf
out
(bad)
adc
cwde
icebp
jle
rcr
adc
pop
jp
mov
test
pop
mov
mov
cmp
pop
sti
mov
pop
sbb
dec
lock
add
in
jl
shl
retf
mov
fs
imul
pop
sbb
dec
in
jmp
sbb
cmc
in
sub
(bad)
mov
or
pop
dec
bound
(bad)
repz
imul
in
jge
sbb
push
mov
enter
xchg
iret
fistp
cmovge
iret
sbb
xchg
in
popa
mov
mov
mov
sub
cmps
ja
xchg
pop
and
(bad)
imul
cdq
xchg
test
shr
dec
arpl
neg
bound
jae
mov
in
fucomi
lods
xchg
inc
iret
out
shl
ror
fild
aas
ss
sar
mov
pop
jl
push
mov
sub
ins
int
pop
jne
dec
ss
out
mov
ja
adc
rol
(bad)
rdtsc
mov
jecxz
xor
fs
scas
mov
inc
xor
xchg
pop
xchg
xchg
loopne
fdivr
mov
pop
jo
setno
(bad)
sbb
push
call
cmp
jae
cs
rcr
add
ret
popa
mov
push
cmp
add
out
pop
and
hlt
cmp
(bad)
loop
(bad)
inc
repnz
jnp
add
(bad)
lods
xchg
mov
in
add
mov
push
push
mov
sub
(bad)
push
cmp
div
cwde
jno
adc
and
push
cmps
ret
les
(bad)
mov
imul
mov
cwde
and
pop
add
dec
(bad)
jmp
xor
jae
pop
cdq
leave
cs
clc
xchg
push
enter
xor
ret
rol
ror
mov
ja
push
cmp
xlat
dec
jbe
sbb
fild
sbb
jae
pusha
add
mov
js
(bad)
inc
pusha
pop
mov
jno
aaa
pop
test
mov
pop
sbb
jne
jnp
mov
aad
sbb
fstp
xlat
cmp
and
sub
pop
in
jae
inc
and
loope
dec
outs
lods
xchg
pop
mov
sbb
sub
xchg
test
mov
sti
xchg
test
cli
cmp
scas
jno
sbb
adc
dec
sub
or
jge
(bad)
popa
cmp
adc
sahf
dec
pop
movs
cs
jno
mov
shr
or
mov
mov
call
jb
mov
(bad)
stc
repnz
fsub
out
xchg
mov
rcl
fstp
dec
ja
or
adc
in
ins
sub
push
add
cmp
in
xchg
lods
jae
xor
(bad)
fcomp
rcr
push
sub
int
mov
push
daa
sub
jg
icebp
fwait
push
cld
or
mov
xchg
aam
cld
push
dec
dec
daa
sub
mov
aam
jg
add
lods
adc
scas
add
push
or
ret
sbb
inc
add
je
mov
mov
cmp
mov
mov
add
sar
cmps
cli
js
mov
sub
add
adc
jmp
xchg
mov
mov
mov
add
pop
(bad)
imul
jns
xchg
cmp
mov
std
mov
sbb
nop
lods
mov
movs
loope
out
jp
js
mov
mov
pop
inc
mov
push
jae
mov
xor
(bad)
nop
cmp
imul
neg
data16
xor
leave
mov
mov
add
and
pop
ss
icebp
lods
push
addr16
int
push
mov
inc
into
xor
in
inc
sub
inc
movs
test
loopne
cmp
xor
nop
call
cmp
test
sub
fmulp
cmps
xchg
(bad)
xlat
xor
cmp
add
jb
sub
xchg
lock
lods
push
xchg
mov
add
fldenv
xor
pop
aaa
test
cmp
xor
mov
adc
shl
mov
test
sub
mov
(bad)
and
aas
outs
mov
pop
xchg
(bad)
lock
cld
cdq
jbe
in
imul
fsubrp
(bad)
hlt
cs
mov
pop
cmp
retf
xor
xlat
jp
in
cmp
outs
lds
sub
shr
js
cs
sbb
xchg
ror
pushf
xchg
mov
scas
push
das
in
ror
pop
mov
dec
adc
data16
(bad)
jae
push
adc
xor
inc
adc
xchg
popf
stc
loopne
into
jbe
inc
sbb
(bad)
xchg
push
aad
ins
movs
(bad)
daa
adc
push
iret
xor
es
daa
jae
sub
mov
not
retf
neg
fild
lahf
mov
repz
push
outs
lea
pushf
sub
mov
jmp
stos
cld
dec
xchg
push
aam
cmp
mov
shr
inc
cwde
sub
inc
push
sbb
xlat
pop
outs
push
cld
jp
(bad)
push
push
imul
adc
sbb
out
mov
sbb
add
sub
aas
ret
test
test
stc
stos
push
jg
inc
jo
js
cmp
mov
fld
int
mov
sbb
adc
push
aad
mov
sub
push
push
xchg
xlat
fimul
or
cmc
jb
xchg
dec
mov
fst
out
(bad)
mov
repz
cmp
push
rcr
xchg
xchg
fisttp
movs
rcr
mov
pushf
cli
das
es
jns
jb
ror
pop
lock
repz
popa
or
sbb
fadd
sub
jne
addr16
jg
and
sub
jge
and
out
aam
(bad)
in
jae
push
rcl
daa
xor
sub
push
add
xchg
and
pop
add
cld
sub
push
dec
outs
mov
jecxz
or
ss
std
xchg
mov
cmp
mov
jo
jns
jl
iret
and
lahf
push
ja
mov
fs
cmp
push
jno
shl
hlt
and
stc
cs
ins
ins
js
sub
call
fwait
add
mov
push
jp
loope
scas
je
xor
mov
fisttp
mov
popa
push
inc
inc
mov
add
cmps
je
cdq
xor
loope
mov
mov
cmp
shl
and
ret
nop
es
mov
mov
(bad)
and
cli
outs
je
sub
sub
test
jne
ins
(bad)
jecxz
rcr
xlat
enter
outs
and
xlat
rcr
inc
push
bnd
pop
out
inc
shl
mov
loope
mov
outs
add
imul
cdq
mov
xchg
push
push
jno
mov
push
jecxz
push
loope
dec
mov
aad
and
pushf
lahf
iret
loopne
sbb
mov
fwait
fs
ror
pushf
rcl
or
inc
outs
add
pusha
shr
mov
adc
mov
imul
pusha
or
sub
dec
xchg
jne
out
mov
retf
xchg
cld
push
popf
inc
or
mov
inc
xor
sahf
xor
and
xor
std
xchg
mov
stos
xchg
mov
mov
jns
xchg
pmuludq
cmps
mov
push
pop
sub
and
js
and
mov
out
and
cwde
daa
fs
ja
stc
or
add
cmp
fist
xchg
cmc
xchg
test
jecxz
mov
inc
(bad)
int
mov
xchg
or
push
jecxz
aas
test
movs
cwde
lea
lahf
pop
in
mov
or
or
fcomip
(bad)
lea
mov
jnp
mov
adc
loope
fbld
lahf
mov
in
mov
enter
lahf
mov
std
int3
xchg
jo
test
xor
add
pop
dec
mov
retf
outs
mov
mov
pop
xor
int3
rcr
retf
jmp
sub
jns
xchg
add
pop
and
ret
pop
clc
shl
add
enter
into
enter
pusha
ficomp
bound
jl
aaa
pop
jb
sbb
sti
jle
dec
(bad)
out
inc
mov
xchg
icebp
fucompp
jb
out
out
or
add
call
lods
repnz
ds
ja
dec
jmp
stos
cdq
and
mov
fmul
adc
ret
pusha
cmp
mov
in
les
add
pusha
rcr
add
call
mov
test
rcl
shl
cmp
xchg
int
xchg
lods
jp
mov
clc
aad
daa
push
in
test
call
int
das
inc
sbb
and
xor
cmp
jbe
sbb
jp
mov
addr16
inc
inc
out
loope
mov
cmp
aaa
fistp
lahf
(bad)
jae
sbb
dec
or
inc
xchg
hlt
and
in
sub
and
mov
mov
sbb
fsub
jp
xchg
outs
jmp
xchg
add
test
mov
ja
cmp
inc
dec
adc
and
sbb
inc
sub
ret
or
push
jle
inc
sbb
imul
or
add
call
and
mov
xor
mov
push
pop
or
stos
test
mov
popa
test
pop
outs
std
lock
mov
push
imul
stos
xchg
inc
or
push
push
cmp
push
push
fld
mov
lock
adc
or
arpl
aaa
and
sub
and
and
adc
mov
add
mov
sbb
retf
hlt
mov
pop
and
xor
cmp
stos
push
ret
sub
and
loop
imul
stos
rol
xchg
adc
sbb
sbb
dec
jb
adc
xchg
lock
mov
xor
cmp
shl
in
jne
(bad)
xor
retf
adc
mov
xchg
mov
add
outs
lea
adc
push
mov
loopne
jmp
out
jl
outs
add
xchg
push
jmp
ss
movs
hlt
mov
mov
xchg
test
xchg
sbb
popf
imul
sbb
js
nop
xchg
fstp
jo
ror
stc
arpl
div
push
mov
jle
bound
mov
sub
pusha
mov
fild
fild
sbb
and
fild
int
cmp
jl
test
inc
outs
daa
jb
jns
pop
cmp
retf
stos
scas
enter
sbb
add
rol
lods
jg
clc
dec
sub
mov
mov
jmp
inc
mov
es
jo
pop
mov
jl
and
das
or
and
lock
pop
mov
sbb
test
dec
mov
lea
fidiv
fcomp
add
push
shl
xchg
cwde
fdiv
sub
push
outs
clc
dec
jecxz
loope
iret
xor
(bad)
xor
inc
dec
loop
push
jl
js
ins
pop
cmp
or
jno
pop
mov
adc
aam
aad
into
push
inc
mov
cdq
(bad)
mov
clc
in
add
bound
mov
cmp
sub
cmp
ins
pop
lods
sub
lods
pop
jns
sbb
scas
stc
dec
dec
xor
ins
cmp
cdq
retf
jne
aas
test
test
(bad)
push
out
mov
pop
xchg
loope
pop
mov
mov
jnp
push
cmp
test
sub
popa
shl
mov
and
adc
or
lods
psllw
fcmovnu
cdq
jl
pop
mov
retf
xchg
pushf
movs
pop
movs
jbe
ins
or
leave
pop
lods
sbb
nop
xchg
pop
data16
lock
inc
out
inc
add
inc
stos
stos
pop
into
fcom
out
jl
inc
sahf
fimul
mov
sbb
dec
jmp
cs
ficomp
(bad)
arpl
lock
inc
mov
sub
mov
push
mov
loop
mov
loope
jle
push
cmps
retfw
rcr
dec
aaa
sub
out
xchg
sub
or
mov
sub
ret
nop
jne
cmp
(bad)
ins
ins
out
jl
push
sub
enter
and
icebp
xchg
xchg
inc
sbb
sahf
xor
sub
dec
imul
in
mov
mov
dec
xor
outs
addr16
mov
cmc
jbe
ins
sub
sti
mov
jmp
shr
push
mov
loope
aaa
pop
cmp
sbb
jmp
xchg
les
pushf
xlat
loope
test
pop
(bad)
cli
(bad)
jnp
cld
or
inc
icebp
cmp
ins
cmps
fbstp
push
les
xor
gs
das
jbe
or
xchg
or
mov
or
push
and
aad
or
imul
xchg
xor
gs
push
(bad)
in
pop
cmp
cdq
sbb
dec
xchg
push
mov
pushf
sbb
push
fld
inc
jge
xchg
jg
fiadd
xlat
sub
out
icebp
sub
les
push
pop
int3
mov
arpl
shr
sbb
and
xlat
retf
xor
test
mov
lods
sub
jg
push
jo
xchg
(bad)
loop
jg
adc
mov
sub
add
dec
push
cmp
sbb
popa
arpl
iret
push
jge
lahf
jge
and
in
xchg
adc
sbb
in
lds
or
dec
pop
add
sub
(bad)
push
rol
mov
mov
or
inc
mov
out
jg
mov
and
mov
sar
adc
push
pop
data16
pushf
push
or
cld
pop
jle
xchg
cmp
dec
mov
jmp
out
into
fwait
pop
dec
xchg
cmp
call
inc
push
scas
test
adc
jmp
lods
popa
int3
outs
ret
xor
call
pop
(bad)
mov
adc
leave
xor
out
ret
mov
mov
out
pop
adc
sub
(bad)
sbb
(bad)
int3
cmp
outs
add
xchg
rcl
mov
lahf
dec
div
pushf
dec
out
or
inc
ret
pop
nop
jmp
aam
leave
dec
mov
dec
daa
(bad)
cs
mov
cmps
mov
dec
jmp
mov
fidiv
mov
sbb
adc
mov
arpl
adc
mov
(bad)
pop
sbb
ins
test
mov
je
lods
lea
paddw
sub
(bad)
mov
fwait
dec
mov
int
mov
cmps
out
and
adc
dec
aam
mov
inc
in
adc
dec
push
shr
cmps
stos
iret
push
shl
adc
ds
movs
pop
add
(bad)
and
xchg
dec
xlat
fiadd
fdiv
mov
es
aaa
rcl
jmp
xor
jle
sar
adc
mov
xor
call
popa
cmp
add
sub
fsub
pop
shr
popf
retf
lods
inc
mov
ins
jge
sub
iret
mov
jno
inc
and
movs
js
jl
ins
cmp
adc
xor
ret
mov
pusha
jl
inc
out
(bad)
pop
idiv
xchg
addr16
jmp
adc
or
test
push
adc
cdq
sti
or
adc
cmp
sbb
dec
push
retf
div
adc
aaa
sub
shl
push
jnp
jns
adc
mov
xor
test
sbb
in
repz
call
sti
shl
lea
fadd
lea
lea
aaa
cmc
in
push
mov
out
xchg
pop
stc
add
daa
jne
push
inc
jp
mov
xor
out
test
mov
pop
mov
hlt
sti
repz
cli
out
adc
int
push
sbb
mov
aam
or
cmp
loopne
mov
push
ja
cmps
push
cwde
sub
sub
push
inc
xor
iret
outs
lahf
rcl
inc
ins
mov
dec
ins
test
repz
pop
test
xor
adc
out
sbb
and
cmp
(bad)
jl
pop
mov
addr16
cmp
xor
or
data16
cdq
pusha
aaa
push
xchg
pop
mov
js
xchg
outs
cs
adc
ret
xchg
cmp
out
xor
dec
lea
mov
mov
push
mov
xchg
retf
fdiv
dec
sub
inc
mov
or
and
in
sahf
repnz
dec
addr16
dec
add
ins
cmp
fisub
ja
adc
jmp
stos
cmp
bound
stc
pushf
shl
fistp
out
dec
xor
xchg
pop
ret
call
js
fld
das
int
call
mov
popa
dec
movs
shl
in
sar
jb
jns
sub
(bad)
pop
inc
push
mov
jecxz
xchg
outs
add
clc
cmp
int
or
mov
in
pop
outs
movs
retf
pop
rol
retf
out
outs
rcr
adc
repnz
add
lods
test
popf
xchg
sub
ficom
mov
lock
mov
ss
movs
mov
call
mov
pop
push
push
fwait
lods
cmp
mov
xor
cmp
stos
mov
iret
sub
adc
rcl
xchg
cmp
imul
sbb
sbb
xor
cmps
add
mov
in
mov
lahf
(bad)
dec
sub
xchg
mov
mov
mov
sbb
cmp
(bad)
xor
popf
xor
cli
sub
dec
jl
xor
and
fild
in
shl
pop
inc
sub
(bad)
dec
mov
push
stc
leave
mov
push
fmul
cmp
arpl
sub
mov
cmp
pusha
jmp
pusha
add
out
and
push
sub
add
test
ret
popf
loope
add
push
dec
repz
dec
add
lds
or
inc
push
xchg
xchg
mov
add
pop
mov
sub
cmp
lods
mov
sbb
or
fsubr
lds
clc
push
adc
sbb
sbb
add
push
ins
movs
push
xchg
xor
not
mov
inc
neg
mov
cdq
sub
jg
(bad)
push
adc
sbb
mov
jg
jle
and
cmp
pop
xor
mov
xchg
call
clc
test
add
xor
mov
or
jmp
pushf
jl
fstp
push
into
mov
ror
fdivr
imul
popf
imul
fs
mov
arpl
or
mov
dec
jecxz
mov
push
cmp
mov
test
mov
leave
pop
xchg
cdq
dec
push
cmps
push
mov
push
push
lods
adc
arpl
sub
or
xchg
test
out
jb
mov
pop
add
pusha
aad
xchg
jb
addr16
sar
hlt
mov
pop
std
imul
sbb
or
jns
sbb
mov
add
repz
push
adc
ins
mov
fs
movlps
unpckhps
imul
in
mov
inc
sbb
(bad)
mov
arpl
shl
es
sub
leave
and
jp
rol
mov
cmp
test
mov
push
daa
sti
xor
xchg
adc
ret
cwde
jae
inc
sub
push
jle
fcmovne
clc
ins
jnp
mov
int3
scas
add
sbb
test
dec
aam
sti
or
je
push
test
push
sub
jae
icebp
xor
jg
jb
repz
adc
jno
leave
adc
pop
lock
mov
mov
das
mov
mov
pop
retf
dec
repz
xor
mov
loop
loopne
mov
fst
(bad)
(bad)
mov
inc
stc
pop
cs
lahf
in
adc
lahf
ja
lahf
jle
cmp
cs
adc
push
mov
movs
mov
mov
add
iret
mov
fldenv
mov
js
pop
popf
stc
in
scas
mov
movs
dec
scas
push
jno
adc
jmp
jne
cwde
jle
pop
fdivr
std
xchg
push
fnstenv
aad
stos
call
arpl
ds
fld
in
retf
idiv
or
mov
mov
fucompp
in
xor
ja
(bad)
stos
addr16
out
mov
sahf
xor
push
pop
(bad)
scas
mov
dec
adc
fwait
sub
xchg
test
call
cld
hlt
retf
xchg
sub
mov
retf
sbb
dec
inc
out
inc
dec
pop
cmp
add
mov
xor
pop
jl
imul
xor
rol
iret
jmp
adc
and
mov
push
push
frstor
mov
shl
sub
add
or
mov
daa
jnp
das
push
mov
inc
aas
mov
sti
ret
gs
lods
(bad)
inc
scas
fwait
les
scas
mov
cld
mov
(bad)
int
mov
imul
rcr
cmps
mov
lahf
dec
loope
lods
outs
lods
dec
aam
dec
jp
xchg
add
xor
cwde
pop
ja
xor
pop
adc
add
es
call
pop
jo
out
sbb
and
fiadd
dec
sbb
push
mov
sub
sahf
jmp
lea
stos
inc
stos
inc
rcl
inc
inc
inc
dec
pop
adc
dec
inc
cli
test
xchg
sbb
add
addr16
mov
outs
sbb
xor
cld
adc
mov
mov
adc
das
stos
adc
and
in
push
xchg
retf
call
in
sbb
repnz
push
adc
xchg
es
fcom
call
or
mov
lahf
xchg
rol
(bad)
mov
sub
mov
dec
ror
loop
jmp
cmps
cdq
sbb
add
sub
dec
pop
xchg
inc
push
int
outs
pop
lds
call
imul
mov
data16
mov
jb
and
lods
jge
pushw
fs
and
xchg
sub
(bad)
and
pop
je
ja
lods
leave
adc
mov
(bad)
stc
clc
popf
ja
push
xor
daa
sub
ins
inc
xchg
xchg
push
fwait
xchg
(bad)
cwde
pop
fwait
rcr
inc
and
repnz
cmp
call
sbb
push
int
pushf
bound
cmp
fisttp
pop
cmp
mov
and
ins
les
dec
lahf
rcl
out
cdq
mov
pop
jmp
aas
in
in
pop
mov
test
cmc
xchg
xchg
aas
mov
retf
js
or
ss
inc
cmp
sub
lahf
inc
ins
dec
add
aam
mov
(bad)
push
cld
mov
jo
in
adc
xchg
jno
dec
scas
sbb
hlt
add
(bad)
fisub
popf
data16
or
cs
and
inc
or
fiadd
adc
dec
in
dec
popa
adc
gs
mov
cmp
dec
mov
xchg
xchg
sbb
adc
or
test
cli
popf
jg
mov
jne
test
mov
inc
pop
ret
adc
daa
cli
and
jp
sub
(bad)
test
push
imul
shr
xor
jae
and
push
pushf
inc
nop
push
retf
jl
cmp
imul
bound
sub
pop
repz
sar
jl
ret
or
mov
das
push
ss
daa
lea
mov
fidiv
clc
add
outs
mov
fdiv
or
test
int
fstp
and
test
mov
cmps
xor
cwde
mov
cmps
sub
loopne
daa
popf
inc
in
sub
ja
cmp
inc
(bad)
loopne
adc
sub
mov
ja
mov
add
jbe
mov
adc
jmp
mov
call
fisttp
int
enter
imul
pop
xchg
sbb
mov
mov
adc
sbb
out
jg
mov
pop
push
lods
(bad)
mov
ds
in
lods
stos
inc
sub
mov
(bad)
lock
(bad)
mov
pusha
push
or
aas
mov
inc
jne
pop
pop
dec
sub
xchg
out
scas
fild
stc
xchg
movs
mov
jp
sbb
inc
sub
das
outs
dec
fcomp
(bad)
mov
imul
les
dec
push
xchg
push
adc
imul
mov
lock
xor
pop
cmps
mov
dec
in
adc
mov
cmp
ss
xlat
jl
xchg
popf
and
mov
mov
mov
std
sub
mov
jmp
ins
mov
pusha
(bad)
les
out
dec
dec
dec
cmp
push
dec
bound
mov
cdq
leave
loope
cmp
fdiv
cmp
out
pushf
push
cs
xlat
out
arpl
loop
sub
or
mov
or
mov
cmp
dec
or
out
cld
ss
jo
pushf
or
mov
inc
jns
std
fild
or
(bad)
fbld
loope
pop
add
shl
dec
shr
loop
les
(bad)
sti
and
rcl
and
jno
xor
and
add
jb
or
mov
xchg
dec
push
pop
movs
xchg
inc
cmp
cmp
inc
mov
(bad)
push
in
jmp
jp
mov
aad
xchg
ins
nop
scas
cwde
call
adc
ret
movs
movs
cmps
scas
ret
aam
jns
sti
adc
inc
xor
cmps
cdq
sbb
pop
push
inc
pop
xchg
cli
sbb
jg
xor
call
xchg
outs
mov
hlt
cmps
push
mov
sub
mov
int
xor
xor
aaa
cmp
cmp
ror
ja
loopne
inc
mov
pop
and
outs
mov
mov
xor
outs
sbb
fidiv
xchg
shl
fstp
push
pop
imul
aas
call
popf
dec
inc
mov
jnp
out
sbb
pop
dec
adc
popa
enter
push
jbe
les
jae
ds
mov
test
loopne
xchg
test
adc
push
mov
imul
inc
inc
mov
xor
mov
das
xor
xchg
aaa
push
sbb
retf
out
es
or
xlat
pop
fisub
and
movs
fwait
cdq
aaa
cmp
adc
and
inc
sub
daa
inc
daa
xchg
pushf
xor
gs
lock
jne
dec
imul
inc
sar
xchg
push
imul
out
add
retf
sub
push
jo
cdq
xor
mov
das
fnstenv
push
test
cmc
fadd
stc
mov
(bad)
cld
mov
mov
bound
arpl
mov
outs
and
cmc
in
rol
cli
mov
push
xchg
daa
xchg
(bad)
out
push
xchg
cmp
cmp
mov
bound
cmp
pop
(bad)
call
imul
push
mov
cmps
push
dec
adc
xor
add
mov
push
fstp
push
in
xor
mov
les
sbb
cmp
mov
lea
jg
retf
pop
call
loop
enter
bound
retf
mov
repz
cli
dec
(bad)
repz
and
ja
mov
mov
xor
sub
cmpxchg
test
data16
scas
xchg
in
pop
mov
inc
int3
push
dec
mov
or
leave
cmp
mov
inc
xlat
mov
int3
sar
lea
xchg
and
les
cmc
iret
sbb
pop
(bad)
je
(bad)
in
add
push
repnz
sti
fisub
icebp
mov
mov
xchg
jmp
adc
clc
ror
outs
pop
aas
cmp
cli
mov
das
repnz
mov
std
pop
stc
xlat
sub
aas
mov
and
dec
xchg
dec
jo
pop
rcr
enter
and
cdq
fld
xchg
lods
es
in
xchg
dec
mov
sub
lss
test
int3
out
sahf
rol
sbb
lock
inc
or
imul
shr
jo
mov
or
xchg
push
xor
or
icebp
or
cs
ds
and
cmp
outs
(bad)
push
outs
mov
mov
dec
mov
pop
pop
aaa
lock
or
inc
jns
jp
icebp
push
push
xor
and
out
jae
add
sbb
ins
jae
pushf
ins
ds
retf
(bad)
data16
jp
cld
inc
call
cmp
ins
stos
popf
in
push
dec
inc
xchg
add
lock
das
mov
cld
mov
adc
cmps
dec
rcr
fdivr
pop
pushf
in
arpl
pop
fcomp
ficom
sbb
es
aad
push
xor
adc
add
inc
bound
xor
dec
int3
lock
stc
mov
jno
mov
fdiv
cmps
jb
cmp
cmp
jb
mov
inc
dec
int3
ins
xor
ins
xor
out
rcl
(bad)
push
mov
bound
retf
fwait
ss
push
xor
cs
add
push
xor
inc
paddb
nop
or
std
and
pop
repz
retf
cs
add
dec
arpl
mov
out
sbb
jns
das
pusha
sub
xor
addr16
sbb
pop
aad
ds
iret
fcmovnbe
or
lods
cmps
push
retf
mov
cdq
sub
push
repz
sbb
inc
(bad)
js
mov
jle
push
xor
outs
pop
cdq
pusha
xchg
jp
xor
mov
xchg
sub
mov
push
mov
pusha
ret
sub
jno
call
inc
rol
add
fistp
js
movs
aaa
(bad)
lahf
pushf
aaa
lock
fbstp
xchg
les
pop
test
lock
mov
call
in
daa
dec
inc
xor
push
jbe
sub
aas
push
ret
les
add
ficomp
jl
dec
test
push
retf
pop
pop
lock
pusha
dec
inc
or
xor
dec
xlat
xchg
fmulp
out
sbb
pushf
add
hlt
cmp
mov
mov
mov
pop
into
cmp
pushf
pop
out
xor
stos
mov
and
push
outs
out
add
stc
sub
das
add
or
lods
aaa
cmps
xchg
lahf
push
loop
shr
mov
push
lods
out
jmp
clc
pop
mov
(bad)
lods
jae
jno
adc
shr
sahf
mov
imul
mov
divps
jge
adc
cmp
cs
(bad)
mov
mov
repnz
sub
cmp
pop
push
(bad)
loop
data16
xor
outs
cmp
popf
mov
mov
cmp
sbb
fnstcw
dec
xor
(bad)
mov
mov
push
push
ret
mov
jbe
and
fcomip
or
lods
mov
inc
mov
mov
mov
xor
add
mov
push
rcr
add
jns
adc
fmul
push
clc
imul
jae
or
pop
and
mov
inc
dec
retf
retf
sti
repnz
sahf
sbb
xor
loopne
in
add
jmp
cmp
and
test
popa
pop
push
add
adc
into
pop
push
cli
xchg
nop
in
xchg
enter
mov
lds
sub
popf
lea
loope
xchg
das
or
rol
or
dec
push
(bad)
pop
es
mov
dec
lods
leave
xor
movs
cmp
dec
adc
iret
ss
aaa
mov
sbb
iret
jns
stos
jg
fsubr
in
fcmovbe
mov
push
ins
repz
out
test
add
mov
idiv
lock
stos
and
pop
mov
sub
add
xor
jb
imul
xor
test
adc
jle
stc
clc
dec
sub
loop
add
test
jle
push
add
ja
cmp
jmp
les
popa
xchg
ja
mov
es
pop
jmp
test
arpl
scas
pop
je
push
(bad)
jmp
(bad)
(bad)
gs
ret
xchg
rol
or
cmp
(bad)
aad
xor
data16
jno
sbb
jae
jl
push
aas
or
sbb
psrlw
and
dec
iret
push
xor
sbb
inc
not
clc
inc
loop
or
sub
fbstp
and
adc
dec
jns
aaa
loope
(bad)
sub
js
(bad)
jg
adc
aam
xor
mov
in
pop
mov
adc
(bad)
pop
stos
mov
jae
cmps
inc
xor
inc
mov
movs
sub
dec
cli
jmp
pop
sahf
sbb
mov
cmp
fcom
mov
imul
cdq
and
ja
adc
inc
xor
cmps
(bad)
push
xor
ror
and
test
pop
das
mov
loop
add
mov
arpl
xchg
cmp
cs
pop
inc
push
sahf
pop
pushf
clc
or
jnp
call
mov
loopne
push
arpl
push
(bad)
jl
cmp
dec
rol
adc
test
loopne
xchg
data16
inc
mov
dec
mov
(bad)
pushf
jl
popa
popa
xchg
jae
je
push
dec
cmc
jl
ret
(bad)
inc
dec
pop
cld
sub
call
sar
test
fist
out
add
movs
lock
(bad)
xor
mov
movs
mov
cmc
std
movs
pop
ja
inc
push
adc
pusha
pop
jno
or
(bad)
lahf
fisubr
imul
aaa
ins
scas
jb
add
mov
pop
pop
jne
add
repz
add
shr
xchg
mov
adc
mov
(bad)
gs
mov
xchg
inc
outs
frstor
or
cli
add
add
push
sti
xor
(bad)
imul
or
pusha
sub
repnz
jno
jp
mov
sub
imul
mov
and
pop
push
ja
pop
add
sti
hlt
test
pop
mov
ret
cmp
mov
out
inc
and
mov
xchg
sub
sub
(bad)
mov
mov
call
fimul
out
stos
mov
out
mov
cdq
jl
mov
out
(bad)
jns
pop
fs
jmp
adc
xor
push
int
or
je
cmc
stc
data16
stc
fld
cdq
jnp
stos
lea
retf
cmp
out
or
pop
imul
or
xor
outs
cmp
pop
sub
jmp
xchg
dec
push
mov
jmp
xor
enter
add
sub
pushf
leave
(bad)
div
call
sar
(bad)
and
out
dec
push
movs
cmp
dec
push
in
inc
add
push
arpl
dec
mov
fild
add
sub
icebp
sbb
push
mov
out
ret
mov
mov
lahf
daa
push
push
mov
repz
and
inc
(bad)
std
enter
dec
repnz
outs
pop
fcmovne
aaa
scas
bound
inc
mov
mov
add
adc
(bad)
shr
xor
and
stos
fstp
push
sbb
nop
jg
neg
retf
push
inc
mov
xchg
and
mov
mov
xchg
adc
enter
or
dec
mov
(bad)
rcr
mov
sub
and
cs
(bad)
jle
pop
mov
push
lock
jge
hlt
enter
(bad)
fist
in
xlat
cmp
shr
(bad)
leave
lods
jmp
call
adc
jmp
mov
nop
(bad)
out
xor
pop
or
clc
mov
jp
test
ins
push
inc
aaa
iret
mov
mov
adc
sbb
dec
in
(bad)
out
add
pop
out
lods
push
dec
loopne
je
pop
cmp
cmp
ret
(bad)
retf
or
mov
ret
and
pop
cmp
ret
int
hlt
xchg
mov
cmp
push
adc
cmps
cmc
jmp
retf
adc
ss
and
mov
icebp
data16
fistp
pop
test
pop
push
sbb
jae
mov
mov
push
push
lea
mov
enter
cmp
cli
and
sbb
lea
cmp
(bad)
int3
lock
shr
retf
jo
jmp
cmps
js
mov
jbe
mov
shl
repz
rcr
sbb
and
xor
nop
adc
adc
fisubr
test
aaa
push
pusha
stc
pusha
pop
scas
push
jne
fmul
pusha
js
pusha
and
ror
sbb
stc
xchg
outs
out
les
jmp
and
mov
mov
add
adc
icebp
ficomp
mov
or
aad
push
leave
in
out
xchg
not
aaa
aas
or
cld
xchg
sbb
aam
in
test
outs
mov
add
ffree
jmp
mov
(bad)
sbb
pop
std
(bad)
xlat
mov
fistp
pop
lods
xor
les
in
cmc
mov
test
in
sbb
pop
mov
or
or
aad
lods
ds
cmp
xchg
cmps
xchg
push
mov
gs
sbb
pop
dec
(bad)
(bad)
xor
push
dec
scas
outs
outs
add
stos
test
adc
add
pop
out
mov
dec
(bad)
mov
fnstsw
mov
sbb
pushf
fnclex
sub
jmp
out
cmp
mov
sbb
cwde
cmp
mov
ins
lea
mov
adc
retf
rcl
ins
pop
adc
xor
mov
mov
add
jbe
fistp
or
inc
push
fiadd
loope
mov
leave
mov
call
loopne
in
adc
or
push
mov
sbb
test
pushw
outs
mov
aaa
into
jmp
bound
fiadd
dec
mov
xor
mov
in
adc
mov
xchg
adc
aas
loopne
adc
mov
test
aaa
mov
test
or
adc
xchg
add
lahf
scas
mov
push
cmp
out
es
ins
jg
rcl
scas
stos
mov
jns
shl
(bad)
js
mov
(bad)
repz
scas
(bad)
iret
sub
mov
jl
enter
test
cli
xor
into
pop
std
and
dec
xchg
loope
mov
sbb
push
(bad)
das
pop
or
sub
mov
cmp
and
jae
std
add
loope
cmp
out
ja
fld
mov
(bad)
dec
sub
xor
out
call
jmp
fdivr
iret
inc
in
or
inc
mov
stos
mov
mov
sub
mov
jbe
cmc
fimul
push
loop
xchg
push
pusha
cdq
mov
(bad)
adc
mov
mov
jno
call
test
test
xchg
and
inc
or
pushf
push
inc
test
loop
jle
fst
jmp
aam
push
xor
out
cmc
mov
cwde
pushf
es
fcmovbe
je
jge
mov
add
push
sbb
cli
mov
cmp
inc
xchg
popa
call
iret
jns
jmp
sahf
jbe
pop
fsubr
dec
mov
sub
inc
(bad)
jl
int3
mov
(bad)
(bad)
inc
mov
ror
popf
push
jnp
je
nop
out
sub
jge
add
fsub
or
fsub
lahf
outs
sub
mov
mov
ins
sahf
nop
mov
xor
outs
es
mov
xchg
inc
sbb
xchg
dec
je
pop
sbb
push
push
pop
mov
dec
jecxz
add
rol
(bad)
xchg
das
inc
jmp
aad
jns
cmc
jmp
(bad)
retf
push
pop
mov
inc
pop
xchg
aam
cld
mov
add
hlt
repnz
pop
pop
out
or
push
mov
inc
int
mov
out
movs
ja
fcom
cs
shl
add
xchg
loopne
(bad)
fst
cld
sbb
adc
in
cmp
mov
mov
xchg
inc
sar
sbb
fidivr
or
stos
arpl
xor
outs
jns
aaa
or
bound
push
lock
jmp
iret
imul
in
repz
out
outs
jnp
or
jge
pop
pusha
retf
lods
adc
ds
mov
push
mov
mov
sbb
hlt
pmaddwd
xlat
sbb
pusha
add
pushf
sbb
shl
cmp
add
scas
ss
sbb
js
cmps
pop
popa
(bad)
test
xor
jp
add
outs
ins
mov
leave
push
movs
or
sar
fwait
(bad)
nop
in
sbb
adc
cmps
sti
and
sub
dec
lods
lods
pop
ins
outs
mov
stc
sub
adc
inc
cmps
dec
mov
push
sub
mov
aaa
stc
movs
jb
fadd
xor
lods
jecxz
xchg
into
nop
adc
ret
mov
cmp
jne
scas
jne
in
sub
pop
and
jno
(bad)
icebp
retf
add
dec
sar
sbb
shl
or
in
(bad)
adc
das
xlat
sub
call
loop
test
push
pusha
mov
popa
popa
loop
pop
pop
xor
mov
in
jecxz
cmps
or
leave
mov
mov
push
ud0
in
pop
mov
mov
push
sub
xor
or
pop
sar
push
ds
xor
push
dec
push
loopne
(bad)
adc
and
js
mov
stos
mov
push
push
outs
popf
add
arpl
and
push
divps
jo
pop
lds
scas
xor
ss
xchg
std
fdivr
out
mov
test
adc
cmp
sub
setnp
jns
sbb
add
sub
xchg
sub
push
popa
sub
inc
sbb
int3
(bad)
mov
xchg
xchg
jne
push
and
fisub
lock
cmp
sbb
lods
adc
adc
mov
adc
push
mov
adc
xchg
rcl
outs
inc
push
mov
les
xor
xchg
xor
sahf
sub
sbb
fdiv
dec
dec
xlat
aas
adc
mov
aad
into
cmp
cld
sub
lds
pop
inc
gs
scas
(bad)
jnp
xchg
mov
aad
cmp
and
(bad)
mov
add
cdq
sbb
in
dec
pusha
pop
outs
xor
mov
push
loope
or
mov
xchg
mov
adc
cmps
xchg
(bad)
jo
ret
ja
test
push
pushf
sub
xchg
fiadd
lods
arpl
mov
pop
and
fstp
cmp
rol
push
scas
int
add
mov
mov
xchg
inc
add
add
pop
jle
test
outs
fsub
mov
std
jns
psrld
dec
test
pop
push
xchg
arpl
jle
mov
nop
pusha
mov
jp
adc
les
fidiv
mov
call
cwde
xchg
mov
aas
pop
adc
ins
icebp
popf
ds
and
cmp
mov
(bad)
and
xchg
cs
mov
mov
push
xor
mov
inc
fdiv
mov
xchg
(bad)
jns
dec
inc
fs
mov
ins
pop
cwde
jns
fcom
scas
pop
xchg
into
inc
mov
ja
xchg
mov
ror
sub
xchg
inc
add
lahf
outs
arpl
add
je
cmp
mov
inc
and
pop
daa
mov
add
cmp
and
int3
arpl
cmp
outs
jl
repz
popa
jno
sub
inc
pop
xor
mov
movs
and
inc
outs
mov
popf
and
bound
sti
cmp
scas
push
jns
push
call
mov
sub
aad
iret
in
cmps
jmp
out
cs
push
lods
jmp
daa
mov
(bad)
cs
xor
popa
fwait
lods
cmps
stos
mov
xor
cmp
gs
jb
mov
mov
(bad)
lds
or
mov
ins
jb
mov
outs
sbb
shl
ss
shl
pop
jno
sub
cmc
push
daa
fucomp
mov
sub
test
cmps
fst
mov
mov
in
push
pop
mov
jg
popf
or
xor
aad
in
enter
imul
pop
xor
adc
dec
mov
popf
lods
jmp
xor
int
push
jmp
pushf
pop
mov
sar
jbe
push
pop
mov
(bad)
xlat
or
in
jnp
inc
call
inc
push
pusha
lods
jbe
or
pop
xchg
(bad)
mov
add
(bad)
sti
les
push
pop
(bad)
fsubrp
sub
or
mov
push
jae
push
mov
jmp
movs
leave
cld
data16
call
and
addr16
out
pop
jecxz
outs
(bad)
fwait
and
xor
nop
cs
(bad)
loope
cmp
push
and
xchg
into
cmp
sbb
lahf
mov
test
jae
fimul
aaa
mov
mov
dec
push
push
rcr
(bad)
in
xchg
mov
lods
xor
mov
or
cmp
xchg
sbb
or
js
cmp
xchg
mov
fild
sub
xchg
es
mov
in
sbb
mov
xchg
adc
out
mov
lock
inc
shr
out
outs
lahf
aaa
pop
outs
ss
jecxz
and
sub
ja
rcl
mov
fst
mov
(bad)
sahf
retf
mov
div
jae
dec
sbb
push
imul
add
mov
dec
fidiv
sbb
jmp
xor
xchg
je
adc
xchg
je
jmp
movs
ret
out
std
cmp
push
adc
jge
xchg
push
lea
mov
mov
pusha
movs
xchg
push
add
test
cdq
cmps
mov
cmp
ret
in
xchg
lahf
addr16
mov
cmp
lods
xchg
cmp
imul
(bad)
imul
xor
sbb
mov
cmp
outs
inc
sbb
mov
in
xor
mov
ds
jo
lock
xchg
cld
and
test
fnstenv
rcl
sub
dec
fisubr
aam
call
add
cli
inc
and
jmp
and
and
scas
jecxz
and
sar
and
data16
push
sbb
stos
sahf
dec
push
xor
js
fld
ins
xchg
sar
cmp
pop
bound
dec
sub
push
jp
(bad)
ins
sbb
stc
(bad)
inc
and
mov
sub
daa
popf
test
imul
paddb
cmp
bound
sub
mov
nop
push
(bad)
shl
push
cs
stc
dec
out
xchg
pop
ins
xor
xlat
cmp
inc
push
xlat
mov
xchg
push
enter
mov
mov
arpl
in
pop
(bad)
and
je
mov
fiadd
jecxz
xchg
xor
cmp
gs
xor
pop
or
retf
sahf
adc
mov
retf
aad
dec
in
jmp
sbb
cmp
and
dec
sar
add
xchg
xlat
sbb
ret
fwait
rol
ret
call
and
pop
sub
inc
push
test
sbb
pop
mov
sbb
xlat
dec
gs
sbb
aad
or
cmps
fsubrp
nop
fisub
adc
in
xlat
sar
cs
cmc
xchg
and
inc
pushf
push
fcmovu
push
ins
inc
stos
jl
jmp
push
retw
idiv
int
cmp
fstp
(bad)
sbb
pushf
inc
xchg
cmp
ins
loop
shr
pop
jb
fdivp
pop
out
cmp
cmp
mov
inc
movs
cdq
int
int
popf
mov
sbb
xchg
lock
cmp
add
(bad)
ins
jmp
imul
enter
pop
call
iret
cmp
test
lock
enter
into
in
sar
mov
out
sbb
repz
cwde
in
mov
cld
mov
addr16
fnstenv
push
(bad)
out
jo
xchg
adc
or
das
add
mov
mov
add
(bad)
mov
scas
arpl
dec
nop
test
or
movs
sbb
imul
xchg
jns
std
test
jmp
cmp
mov
ja
fst
cmp
pop
aas
(bad)
jle
add
icebp
jge
mov
cmps
sbb
outs
push
aad
dec
jmp
sub
jl
xchg
sbb
dec
call
stc
in
push
pop
mov
push
int
cmp
xchg
mov
nop
pushf
stc
movs
ret
push
stc
pop
movs
ret
add
stos
(bad)
dec
sub
out
sub
xchg
jne
(bad)
ins
mov
movs
jb
rcr
and
ret
iret
jno
pop
icebp
jmp
mov
inc
js
dec
movs
mov
xor
aad
movs
mov
inc
call
fsub
rcl
(bad)
(bad)
fwait
adc
addr16
mov
mov
cmp
mov
jo
mov
imul
(bad)
loop
fcomp
sbb
and
(bad)
xchg
or
cmp
sahf
(bad)
retf
dec
or
arpl
push
jle
pop
sbb
pusha
(bad)
imul
(bad)
cmp
mov
mov
sahf
and
and
fdiv
scas
pop
int3
cmp
mov
pop
and
push
jl
or
shr
xlat
xchg
dec
cmp
out
cmp
jno
cmp
stos
daa
ja
pushw
push
out
sbb
pop
fidiv
std
pop
ds
mov
mov
shl
cmp
jmp
movs
sbb
retf
adc
xor
sbb
sbb
mov
cmp
xor
push
pop
ss
inc
xchg
clc
inc
stc
hlt
fimul
or
xor
xor
xor
jle
(bad)
aam
and
shl
lock
retf
out
(bad)
xchg
and
cmp
pop
cmps
shl
pop
out
adc
int
jmp
das
ret
dec
sti
sub
popa
jb
ficom
addr16
out
stos
retf
in
mov
ins
mov
retf
cmp
and
push
cwde
arpl
cmp
mov
sbb
cmp
daa
mov
mov
add
or
fldcw
in
cmp
push
inc
test
pop
in
pop
aam
xor
pop
push
iret
int3
dec
pop
mov
sbb
int
(bad)
hlt
bound
jno
loope
ins
cs
(bad)
mov
stos
(bad)
mov
fadd
sub
sbb
jge
push
sbb
(bad)
aad
pop
adc
(bad)
add
push
xor
pop
lock
mov
push
aas
mov
cwde
je
add
(bad)
pop
jmp
out
xor
inc
in
cli
enter
fsub
push
cmc
mov
push
xchg
int3
jnp
nop
(bad)
and
pop
push
fsubr
ja
out
aad
sbb
adc
ins
cmp
push
ror
xor
iret
js
fs
push
push
adc
add
mov
jno
pop
imul
mov
stc
xor
lods
mov
ja
xor
pop
xor
and
xlat
push
shl
pusha
or
add
scas
xchg
ja
push
ret
call
jmp
inc
mov
cmp
push
popa
xchg
mov
scas
mov
or
push
inc
into
cli
cwde
pop
sbb
(bad)
outs
cmp
hlt
ret
test
cdq
lods
xchg
adc
pop
fwait
test
sub
retf
fwait
shl
outs
adc
sbb
(bad)
retf
pop
xchg
aas
(bad)
pop
pop
lahf
mov
retf
mov
sbb
or
sti
je
jle
nop
inc
push
fwait
cmc
push
sbb
movs
mov
lods
xchg
or
test
push
sbb
jmp
sub
scas
pushf
jns
dec
push
rcr
adc
stos
jbe
pop
ret
sar
and
add
in
fdiv
or
cwde
xor
xchg
shl
loop
push
jge
jb
xchg
es
jle
sbb
sub
sbb
add
xchg
imul
or
mov
lods
js
dec
clc
aam
mov
add
dec
lahf
cmp
pop
push
stc
mov
fstp
aas
sbb
inc
push
(bad)
dec
aaa
aam
repz
fsubr
test
add
repz
fld
cmps
cmps
aaa
pop
(bad)
xchg
dec
mov
sub
add
pop
and
es
xchg
stos
mov
jmp
cmc
cmp
dec
aaa
xlat
xchg
xchg
sbb
fbstp
mov
aaa
cmp
add
pop
test
pop
shr
stos
ins
cmp
and
fdivr
int3
adc
jecxz
xor
fild
inc
pop
retf
xor
test
(bad)
add
loop
mov
sub
inc
sbb
shr
lea
mov
mov
push
cwde
dec
rol
hlt
cmp
mov
fist
jmp
adc
adc
mov
xchg
pop
add
add
adc
inc
arpl
or
vphadddq
mov
jnp
repnz
ins
inc
xchg
mov
into
je
mov
loop
stos
arpl
or
pop
and
arpl
pop
leave
daa
and
adc
fisttp
add
(bad)
jp
out
xor
adc
das
sub
jae
pop
ss
pop
aaa
std
adc
neg
pop
xchg
loope
iret
nop
inc
inc
sub
mov
ja
sub
cmc
dec
fwait
int3
clc
test
ficom
push
sahf
stc
push
sub
adc
mov
cmp
or
stos
icebp
out
mov
outs
mov
and
sub
xchg
stc
bound
adc
popf
cmp
push
mov
out
mov
icebp
test
cwde
add
ins
(bad)
cli
ficom
cmc
(bad)
dec
shl
pushf
fwait
out
jmp
ja
and
mov
clc
add
fimul
inc
js
add
mov
sub
popf
cmp
sub
xchg
into
aad
xchg
xor
ss
dec
dec
ds
cs
addr16
jns
fsubr
inc
or
jmp
xor
xchg
out
mov
daa
jge
addr16
sbb
(bad)
mov
mov
add
ret
dec
xor
jl
dec
mov
or
and
jl
enter
dec
inc
mov
fiadd
ins
outs
mov
adc
scas
or
mov
pop
gs
aas
and
clc
enterw
dec
xchg
mov
xchg
or
dec
lahf
cmp
ret
jmp
scas
fist
outs
pop
cmc
scas
scas
out
outs
adc
mov
aaa
(bad)
ror
xor
clc
daa
or
jo
sub
iret
jns
pop
sbb
mov
xor
cdq
inc
dec
add
and
movs
fstp
mov
js
lods
js
add
stc
sub
inc
push
mov
sti
pushf
jmp
ins
bound
imul
jb
pop
xchg
push
stmxcsr
fmul
mov
sbb
sbb
sbb
cmp
jae
push
retf
aad
push
jnp
cmp
stc
scas
retf
jg
jo
fisttp
enter
stos
xchg
cmp
retf
jae
clc
or
cmps
cmp
push
push
lds
mov
adc
daa
mov
push
lods
mov
inc
out
lds
cdq
dec
test
inc
daa
cli
and
xchg
fmul
in
fsubr
ds
jns
inc
cmp
repnz
sar
or
cdq
mov
ss
mov
cwde
sbb
lock
(bad)
xor
cmp
ret
cmps
mov
xchg
add
cli
das
daa
jne
pop
jecxz
and
mov
bound
inc
les
iret
bts
inc
repz
push
fdiv
je
xlat
mov
(bad)
cld
imul
jg
mov
push
xchg
rol
cmc
jecxz
jecxz
mov
stc
sbb
mov
shl
add
sub
fwait
jb
sub
in
dec
mov
push
std
call
jge
leave
pop
inc
subps
pop
sbb
jmp
and
ja
retf
leave
es
push
repnz
inc
xor
pop
cli
ja
sti
shl
test
push
push
add
not
sbb
inc
outs
cmp
adc
ret
lahf
sti
and
cmp
xchg
cmps
jge
dec
jbe
scas
out
or
mov
gs
or
sub
jle
jge
rcl
xor
dec
sub
cmp
(bad)
out
mov
bound
in
int3
fidiv
xlat
cmp
cli
xchg
pop
test
xchg
push
movs
js
sub
int3
leave
mov
test
adc
inc
cdq
sbb
xor
xor
cld
xor
and
add
scas
pop
jno
jo
in
pop
stc
mov
xor
pop
test
(bad)
cwde
mov
or
lock
jbe
std
ins
mov
sahf
fnstcw
push
mov
mov
and
mov
ins
or
stos
test
xchg
pop
push
cmps
(bad)
cmp
mov
scas
cmc
inc
jp
xchg
and
inc
mov
push
adc
mov
xchg
fs
push
and
out
into
add
jne
test
aaa
(bad)
push
je
(bad)
sub
xor
inc
loope
inc
lock
pop
cdq
sar
das
jle
inc
cmc
jae
cmps
sub
xchg
(bad)
xor
dec
call
mov
or
push
mov
xor
inc
lods
test
scas
mov
(bad)
hlt
and
cmp
xchg
das
sub
lods
mov
mov
test
push
mov
jmp
jbe
inc
int3
fld
cmps
aas
push
cmp
fidivr
mov
in
dec
not
pop
add
les
inc
dec
cmc
mov
cmp
ret
mov
jbe
arpl
stos
out
dec
add
adc
enterw
out
cmp
mov
inc
jge
fdivr
ror
mov
push
push
add
out
aam
stc
add
inc
sub
rol
movs
inc
mov
aas
mov
fs
pop
jb
push
sbb
cmp
mov
cld
inc
rcr
and
stc
xlat
xchg
push
xlat
dec
mov
xchg
pop
xor
cs
and
pop
ror
or
gs
icebp
fwait
mov
add
(bad)
icebp
test
xchg
cmp
mov
inc
push
push
inc
retf
pop
push
icebp
fld
pushf
aas
dec
dec
xor
cmp
les
(bad)
cmp
sub
repnz
push
or
out
mov
stc
mov
out
xchg
dec
inc
scas
or
xor
inc
int3
xchg
cmp
push
ds
in
pushf
ficom
sbb
add
test
lods
cmps
loop
and
dec
retf
jnp
cmps
add
movs
adc
ret
adc
fnstsw
iret
aam
jnp
dec
push
gs
lods
push
stos
mov
call
cmp
mov
sub
pop
inc
aaa
pop
pop
test
es
pop
cs
mov
or
(bad)
fdivr
sub
jb
fbstp
adc
add
fdivr
cmp
fcom
(bad)
cmp
int
inc
shr
jae
ficom
mov
and
and
lods
add
sar
mov
out
mov
icebp
icebp
fdivp
push
push
ins
lods
mov
mov
cmc
dec
adc
call
dec
(bad)
fcom
les
mov
pop
push
push
or
(bad)
dec
or
inc
cmps
and
loope
push
dec
push
xchg
mov
and
ja
pop
xor
repz
xor
jmp
(bad)
jnp
mov
xchg
add
add
(bad)
dec
cmps
movs
lods
mov
mov
mov
addr16
add
mov
shl
mov
mov
xor
call
nop
test
pop
pop
and
sbb
add
xchg
or
cmp
cmps
stc
scas
sub
pop
adc
and
imul
daa
es
push
jge
leave
pop
adc
mov
pop
mov
mov
add
and
mov
dec
jle
pop
mov
aad
daa
movs
ja
test
mov
ret
xor
outs
(bad)
cs
out
pusha
inc
icebp
call
push
push
icebp
xchg
xor
push
bound
into
inc
adc
sub
push
mov
out
inc
ins
pop
xlat
out
iret
in
hlt
es
mov
xchg
fidivr
push
push
fistp
imul
inc
(bad)
call
stos
inc
xchg
push
jno
jne
into
enter
mov
retf
jle
cmp
jnp
mov
icebp
cdq
xor
gs
outs
cs
pop
jmp
call
sbb
adc
pop
mov
cmc
call
cmp
mov
icebp
lods
jnp
xor
out
cmp
inc
inc
cwde
cmp
inc
dec
(bad)
mov
data16
cld
mov
fimul
repz
add
call
aaa
lock
cmp
sti
cs
test
pop
ins
aaa
and
mov
cmps
sbb
cdq
jp
aas
pop
pop
and
and
adc
jbe
ja
jl
jo
fdiv
jb
and
ret
push
idiv
push
(bad)
push
mov
iret
sti
fstp
and
in
cli
ja
stc
jg
stc
mov
mov
jb
arpl
neg
push
dec
inc
adc
leave
jbe
mov
outs
mov
push
cmp
push
or
bound
ins
cmp
call
fnstcw
pop
test
xchg
or
push
nop
jmp
jmp
in
popa
fwait
jmp
jno
aaa
lods
pop
xchg
push
loop
ret
and
push
cld
(bad)
aad
xchg
mov
ss
int
js
mov
or
mov
adc
or
xor
pop
pop
test
cmps
stos
xchg
fimul
rcr
pop
sbb
es
and
xchg
jmp
push
pop
and
cmp
mov
cmp
out
mov
add
push
cwde
push
xchg
movs
xchg
outs
retf
fimul
aaa
sbb
or
enter
mov
adc
lds
cmp
adc
or
comiss
inc
xor
aaa
sub
rcr
add
sahf
adc
movs
inc
inc
xor
xor
in
into
sbb
mov
jnp
das
das
scas
sti
(bad)
pop
imul
jne
ret
cs
push
imul
pop
sub
shl
pop
test
(bad)
sahf
sub
sbb
and
lahf
sbb
jmp
push
cmp
and
dec
push
jg
movs
cmp
mov
jg
test
bound
and
adc
sub
push
icebp
mov
or
popa
btr
rcl
or
mov
loop
mov
loop
mov
or
outs
sub
(bad)
arpl
sub
dec
ror
fisttp
inc
sbb
push
loope
imul
aam
or
dec
sbb
or
add
sub
xchg
cmps
xor
iret
leave
sbb
jo
bound
push
gs
xchg
outs
pop
(bad)
leave
ja
call
in
and
and
int
stc
adc
and
scas
adc
ret
mov
pop
sbb
pop
add
outs
push
adc
imul
and
mov
jmp
setl
sbb
out
dec
dec
jmp
sahf
and
and
mov
into
pop
cmps
push
pop
ftst
mov
cmc
test
daa
(bad)
out
jnp
gs
in
loop
aam
jl
call
xor
ret
push
call
stos
pop
(bad)
cdq
in
clc
sahf
jmp
pop
(bad)
adc
cmp
loopne
pushf
mov
lahf
jmp
test
xchg
jnp
sub
dec
push
ror
int3
lds
sub
xor
mov
mov
loopne
mov
xor
mov
push
mov
sbb
sahf
xor
mov
loope
or
pop
mov
mov
push
mov
out
nop
outs
rcl
nop
jno
jno
cld
adc
push
es
scas
std
pop
scas
cs
xor
inc
shr
dec
fadd
dec
rcr
icebp
ins
jg
lods
mov
aas
xchg
and
xchg
fs
jb
xor
xchg
and
int
sub
xchg
dec
jbe
cmp
jbe
gs
test
mov
call
and
int
lods
scas
mov
cld
outs
mov
jge
adc
inc
pop
jae
or
mov
and
sbb
xchg
adc
jo
rol
mov
dec
je
dec
sbb
imul
repz
jno
loop
pop
dec
dec
(bad)
or
loopne
aad
mov
int3
fdiv
sbb
xor
mov
xchg
dec
test
dec
jnp
sub
(bad)
pop
sar
push
jns
sub
add
mov
push
arpl
sbb
bound
(bad)
out
cld
dec
or
mov
sbb
mov
jno
ret
scas
imul
pop
stos
mov
push
sbb
jnp
sbb
test
inc
(bad)
aas
in
pop
lock
or
mov
and
sub
sub
xchg
sub
adc
and
int
pop
ins
mov
pop
and
mov
xchg
aad
pushf
cli
jl
imul
mov
dec
or
daa
lods
js
mov
lock
lods
gs
cmps
fisubr
cmp
xchg
(bad)
fadd
sbb
jbe
ins
stc
push
aad
ds
sbb
ins
mov
out
add
pop
mov
(bad)
icebp
cwde
int
xor
pop
xchg
add
sbb
push
ja
pop
inc
adc
dec
jb
and
fwait
lods
mov
sub
adc
mov
(bad)
xchg
nop
or
xchg
rol
das
fs
ret
push
pop
jmp
pushf
jno
movs
mov
pop
adc
cmp
add
js
push
movs
cld
jmp
dec
mov
dec
rcl
xor
(bad)
jmp
stos
sbb
out
fdiv
fwait
and
(bad)
gs
es
jmp
ret
mov
arpl
leave
lock
cmp
mov
inc
cld
cmc
sbb
(bad)
gs
and
outs
and
cmp
jge
ss
cmp
cmp
jge
pop
(bad)
mov
xchg
out
sbb
aaa
(bad)
(bad)
dec
sbb
sti
dec
adc
inc
adc
pop
jae
int
movs
mov
mov
push
mov
into
sahf
xchg
add
inc
pop
add
cmps
jne
inc
imul
and
fstp
sub
fcomp
out
mov
movs
pop
push
test
pop
jmp
mov
std
mov
push
je
sbb
cmp
mov
and
inc
ins
cmp
inc
imul
and
sub
xlat
mov
fbstp
mov
inc
pop
mov
mov
fist
mov
push
out
or
(bad)
outs
sub
std
ins
pop
adc
loopne
sbb
push
test
inc
sub
bound
adc
jp
push
test
lods
xor
or
inc
cdq
push
inc
jg
(bad)
arpl
xor
(bad)
jp
sub
std
cld
xor
pop
cmp
dec
rcr
outs
mov
mov
adc
xor
mov
xor
add
outs
and
inc
mov
push
cld
and
retf
repnz
push
sahf
or
and
add
lods
mov
imul
addr16
sub
ja
pop
xor
in
enter
imul
popa
loop
inc
push
cmp
inc
lahf
jle
xchg
repnz
xchg
mov
lahf
mov
pushf
ja
icebp
mov
xor
xor
aad
adc
xor
(bad)
nop
test
add
add
jno
xor
add
mov
inc
xadd
iret
mov
dec
mov
xchg
pop
das
out
into
jae
test
scas
jmp
xchg
loop
fidiv
(bad)
into
stos
jg
pop
leave
xor
test
das
xor
dec
aam
sahf
xchg
or
in
rcl
cmp
mov
out
mov
xor
jne
ss
(bad)
mov
imul
xchg
jo
jl
xchg
mov
int3
push
mov
sub
adc
mov
fld
pop
ins
dec
popf
sub
xor
bound
xchg
or
stos
shl
shl
or
fist
sub
sbb
inc
dec
fmul
movs
mov
add
pop
jle
push
mov
inc
cmps
pop
add
push
ficom
sub
jnp
arpl
popa
add
mov
movs
leave
xor
mov
mov
popf
mov
call
pusha
mov
or
mov
pushf
scas
cmps
cmps
inc
(bad)
push
fbld
add
sbb
xchg
and
adc
idiv
das
sahf
push
frstor
mov
cmp
iret
int
dec
ret
inc
push
dec
data16
(bad)
push
aam
xchg
sub
test
jl
pop
enter
mov
and
sar
sti
imul
lock
xor
and
bound
and
aam
fsubr
inc
pop
sub
mov
add
shl
bound
cld
ds
out
arpl
popa
adc
push
popa
dec
push
jmp
ret
retf
fs
loopne
mov
stos
and
(bad)
push
dec
pop
add
repnz
sbb
fisub
aas
mov
jbe
xchg
xchg
xor
push
iret
cmp
pop
bound
shr
mov
sbb
mov
mov
loop
xor
jno
retf
push
inc
mov
mov
pop
dec
sbb
imul
mov
mov
es
sbb
sub
jnp
dec
cs
nop
mov
ret
xchg
adc
push
pop
cmps
mov
pop
and
shl
les
out
jb
imul
pop
sub
sub
cld
ins
push
mov
lea
jne
adc
and
cmp
push
(bad)
adc
pop
and
or
jnp
mov
push
stc
xlat
repnz
nop
lds
ret
dec
cmp
mov
repz
sub
dec
cmc
enter
push
daa
in
push
push
add
sahf
pop
dec
lds
mov
out
(bad)
dec
xchg
imul
fwait
xor
cmp
pop
in
jb
out
cmp
jecxz
and
fnstenv
repz
push
repz
or
imul
push
and
das
cli
sahf
push
xor
xor
aas
int3
push
mov
sbb
xchg
rcr
adc
pusha
xor
dec
and
dec
adc
into
sbb
imul
push
xor
jno
and
xlat
cmps
es
xchg
and
fwait
mov
inc
or
jnp
dec
xchg
jge
and
mov
push
in
add
sub
adc
mov
pop
mov
loopne
xchg
mov
mov
jecxz
imul
and
inc
(bad)
mov
loop
mov
ins
call
lahf
(bad)
mov
cli
in
call
inc
mov
inc
in
fldcw
pop
std
push
fidivr
jle
add
shl
lods
call
mov
push
mov
fadd
in
getsec
mov
pop
loop
fs
or
cmps
not
xchg
ss
pop
sbb
cmps
test
call
dec
(bad)
int3
adc
mov
ror
mov
mov
xchg
(bad)
adc
in
or
sbb
xchg
ss
jge
xchg
pop
(bad)
nop
push
sahf
retf
add
sahf
sahf
enter
sbb
data16
mov
and
xchg
sbb
inc
ror
ror
cli
dec
adc
inc
push
(bad)
pusha
iret
ror
movs
aaa
push
inc
outs
or
push
dec
jbe
cmp
icebp
xadd
cmp
jne
imul
out
push
sub
dec
dec
scas
fs
imul
mov
or
arpl
ss
rol
imul
xor
clc
add
push
and
and
retf
data16
mov
addr16
pop
dec
cmp
mov
xlat
test
or
mov
pop
jle
mov
daa
add
jno
xchg
jl
int
mov
out
xlat
int3
mov
clc
ret
push
lods
nop
frstor
mov
adc
out
adc
pushf
pushf
loop
mov
jge
pusha
rol
mov
ret
stc
xlat
addr16
mov
inc
mov
retf
fdiv
cmp
xchg
icebp
push
and
cmp
adc
dec
cs
js
rcr
call
nop
jp
xor
in
fxch
(bad)
in
ins
daa
pop
ret
add
in
jnp
retf
lds
(bad)
xchg
mov
mov
scas
fistp
test
pop
test
(bad)
test
and
sti
or
mov
pop
fmulp
enter
das
mov
push
mov
pop
jbe
in
adc
or
pop
sbb
add
add
fwait
cmp
dec
outs
jbe
jb
pop
enter
div
sub
add
push
sti
pusha
fdiv
adc
daa
jecxz
arpl
std
xor
sbb
mov
test
pop
xlat
pop
mov
push
sub
mov
push
dec
jg
lahf
test
ret
or
sub
loop
int3
inc
mov
or
mov
fnstsw
sbb
pop
popa
and
(bad)
aas
aas
cmps
jl
and
xchg
je
shl
mov
out
sbb
sbb
mov
movs
jnp
pop
xor
and
add
inc
(bad)
fnstcw
sbb
mov
repnz
sbb
je
lods
sbb
test
rcpps
ror
jns
call
jne
add
cmp
fsubr
imul
and
outs
mov
outs
cwde
out
fs
mov
stos
inc
jmp
and
into
ja
in
out
iret
jo
pop
in
movs
fld
pop
lods
mov
jge
mov
(bad)
fstp
cmps
invd
lods
mov
xchg
add
cmp
jno
xor
xor
int3
mov
imul
dec
xor
xchg
jb
std
leave
dec
adc
leave
(bad)
adc
cmps
jo
add
and
mov
mov
inc
dec
sub
out
inc
jo
jmp
imul
pmulhw
(bad)
retf
icebp
xchg
cmps
cmp
jo
daa
out
mov
and
neg
mov
sbb
mov
jbe
enter
test
cmp
mov
jl
shl
xchg
lock
sub
repnz
cmp
jp
(bad)
xor
out
mov
loopne
or
call
xor
sub
in
retf
icebp
fsub
ret
and
adc
ss
clc
test
(bad)
aam
mov
mov
scas
push
in
adc
repz
sbb
xor
out
inc
inc
push
and
xchg
fwait
mov
pop
dec
pusha
mov
loope
push
mov
add
jns
xchg
sbb
jmp
mov
xchg
push
pop
cmp
cwde
push
jg
push
and
push
or
mov
nop
add
or
retf
in
out
mov
dec
sbb
(bad)
rol
add
and
fcmovbe
sti
rol
addr16
jns
mov
pop
test
hlt
push
movs
jno
add
dec
rcl
adc
mov
das
or
call
xchg
adc
scas
add
xor
jbe
mov
or
leave
inc
mov
cld
out
sbb
cmp
popa
pop
daa
jle
int3
mov
shl
clc
idiv
push
sbb
outs
dec
xchg
fs
dec
aaa
sub
enter
pop
adc
rol
xor
mov
lods
outs
sbb
push
(bad)
xor
ds
das
into
mov
xor
stc
jb
repnz
mov
iret
push
and
push
inc
xor
pusha
cwde
(bad)
jb
dec
push
push
fldcw
add
shl
or
mov
out
and
ret
aam
loopne
jno
mov
sub
jns
and
dec
cmp
in
(bad)
pop
stos
dec
mov
dec
inc
data16
xchg
sub
ja
cli
into
cmp
dec
and
adc
sub
xchg
push
pop
out
gs
jae
or
mov
sub
push
lods
repnz
jne
shr
jge
jno
mov
push
movs
fnstcw
aam
add
scas
lock
lds
xchg
xchg
mov
mov
push
mov
mov
or
lds
and
lods
cmps
xchg
dec
or
mov
stos
into
fucomp
pop
xchg
lahf
call
add
mov
mov
cmp
cmp
out
popa
hlt
or
test
mov
and
xchg
(bad)
mov
dec
ds
pop
in
xchg
jle
pop
fcmovnu
popa
mul
cmp
mov
dec
push
outs
outs
cmp
inc
inc
adc
sub
ret
mov
cmp
stos
pop
push
fisttp
into
pop
pop
xchg
add
(bad)
cmovns
cmp
cmps
loop
pop
mov
pop
repz
inc
or
add
cmp
fdivr
xchg
aam
adc
sbb
test
lds
ds
in
lds
fwait
test
popf
mov
mov
pop
adc
lods
(bad)
daa
div
fwait
or
fld
ins
mov
loopne
jns
mov
jle
ins
inc
mov
add
idiv
sti
aas
or
mov
pop
jmp
rcl
pop
push
xlat
mov
mov
mov
into
sar
push
les
scas
or
fst
mov
and
retf
les
shl
pop
jmp
es
rcr
pusha
call
(bad)
je
movs
jbe
mov
push
(bad)
das
xor
(bad)
xlat
xor
pop
sub
push
repz
add
ins
and
cmc
and
loop
aad
dec
in
scas
mov
jae
gs
ficom
out
in
mov
sub
xchg
cmps
retf
push
inc
mov
cli
stos
cdq
imul
xor
xlat
fs
ins
sar
inc
les
mov
mov
fsubr
pop
cmps
or
or
je
mov
sbb
and
cmpps
and
ds
lods
movs
sbb
jge
cmp
scas
lahf
sub
repnz
mov
mov
or
mov
stc
das
pusha
fbstp
xor
or
ret
ins
sti
or
fwait
add
sbb
fbld
stc
ins
xchg
sbb
cmp
je
lods
ins
(bad)
(bad)
adc
ins
dec
enter
fdivr
jecxz
sbb
call
(bad)
ins
inc
jmp
mov
fcmovne
enter
pop
xor
inc
jp
mov
test
inc
pusha
arpl
dec
mov
leave
mov
dec
das
mov
movs
or
push
adc
cmp
cmps
pusha
movs
sti
pop
pop
lahf
stos
mov
loopne
xor
inc
(bad)
mov
scas
adc
icebp
nop
push
mov
pop
not
fs
dec
cmp
jecxz
mov
aaa
shl
add
sbb
sbb
je
push
outs
push
cli
cmp
(bad)
jno
rol
jns
mov
daa
daa
je
adc
dec
mov
ror
loop
adc
mov
pop
mov
sar
and
shr
xor
pop
ficom
es
scas
ja
ins
fist
adc
push
jns
int
retf
lods
push
mov
push
int
push
and
cli
in
into
ret
sahf
sar
aaa
jge
mov
call
xor
movs
dec
mov
loop
retf
test
push
adc
or
dec
pop
push
fld
std
adc
inc
adc
icebp
inc
mov
ret
mov
fst
cs
mov
cdq
sub
xor
pop
shr
out
add
shr
inc
mov
test
xchg
les
cdq
lds
ret
call
or
lods
jmp
mov
mov
xor
cs
mov
out
push
or
ret
mov
gs
mov
dec
aaa
adc
bound
mov
mov
inc
sbb
seta
adc
jp
xor
std
retf
aam
mov
nop
and
adc
jo
mov
imul
jno
mov
enter
cdq
sub
ins
sub
test
pusha
and
test
mov
stos
daa
pop
imul
or
fwait
jnp
push
aas
push
nop
(bad)
pop
out
div
mov
dec
pusha
xchg
inc
lds
cld
movs
xor
inc
repz
stc
xor
shl
jne
outs
imul
inc
pop
imul
ret
pop
iret
(bad)
sbb
idiv
lds
cmps
popf
xchg
inc
pop
out
arpl
dec
jp
dec
leave
pushf
xchg
push
pop
movs
sbb
in
je
jle
and
lea
jbe
ja
push
nop
movs
outs
icebp
fwait
mov
inc
mov
cmp
inc
sbb
retf
imul
sbb
ja
cmps
mov
in
cmc
mov
and
and
adc
gs
add
mov
jbe
cmps
push
xchg
adc
and
ret
push
mov
shl
sbb
fdiv
mov
and
push
ror
mov
sbb
fcom
loope
loopne
sbb
jo
popf
add
mov
scas
outs
pop
or
ror
push
push
ret
cmp
pop
cmp
sbb
ds
imul
pop
xchg
pop
ss
std
add
jp
jge
aas
add
retf
jno
push
mov
inc
bound
out
lock
outs
xchg
dec
scas
in
add
in
dec
mov
mov
xchg
fs
fistp
das
pop
cmps
lds
push
mov
cdq
add
jle
cmc
push
leave
push
adc
push
mov
sub
lods
xor
pop
inc
scas
jmp
out
xor
pop
sar
mov
xchg
hlt
xchg
push
jmp
repnz
pop
sub
leave
into
mov
lahf
mov
fs
sub
or
pushf
sub
xor
mov
lds
adc
sub
pop
sahf
or
and
xor
push
push
mov
pushf
and
pop
test
pop
hlt
shl
mov
mov
and
hlt
pop
(bad)
in
cmp
pop
add
(bad)
push
mov
shr
rcl
inc
movs
outs
sbb
jmp
pop
pusha
mov
test
sbb
and
pop
add
aaa
jns
and
dec
outs
and
cld
xchg
cmp
mov
(bad)
test
inc
imul
lock
movs
xor
pop
push
adc
daa
bound
hlt
pop
rcl
push
push
neg
mov
fild
jge
xchg
aas
movs
ror
push
sbb
das
cli
inc
dec
push
ret
xchg
movd
aad
or
test
fsub
test
inc
add
jb
lods
mov
inc
jbe
rol
sbb
fist
mov
dec
nop
push
mov
mov
outs
jb
cmps
out
fsub
imul
mov
add
push
mov
or
cwde
dec
hlt
sbb
push
pop
and
setge
daa
adc
jp
pop
push
pop
mov
cmp
movs
rol
mov
mov
cs
pop
mov
fiadd
and
dec
lods
call
mov
dec
sub
(bad)
fldenv
daa
push
test
pop
cmps
popa
test
dec
mov
or
and
mov
jge
(bad)
out
adc
xor
loopne
push
mov
stc
adc
and
dec
ffree
xchg
hlt
sbb
(bad)
mov
mov
xor
sub
and
sub
sub
es
neg
push
pop
xchg
pop
or
enter
fld
outs
movs
jne
mov
xchg
add
popf
jecxz
xchg
repnz
mov
sbb
aas
imul
mov
into
push
js
(bad)
out
retf
retf
jmp
push
dec
je
pop
mov
(bad)
ds
pop
push
retf
jno
xchg
scas
cld
cmps
xor
mov
cmps
adc
push
hlt
(bad)
dec
ja
xchg
add
xchg
call
pushw
mov
dec
cmp
mov
imul
add
cmp
rol
call
ror
call
dec
add
or
out
or
fld
arpl
in
scas
mov
mov
js
js
sub
outs
in
push
xchg
shl
cmp
shl
mov
cmp
pop
scas
mov
fbld
or
sbb
xlat
es
outs
fisub
clc
retf
push
jo
stos
dec
or
scas
add
jg
fwait
daa
xor
mov
popa
in
icebp
sbb
jge
xchg
push
mov
or
jmp
pop
ins
ret
inc
clc
jmp
ret
sub
add
inc
xor
cmps
and
mov
in
cld
inc
sar
sbb
add
popf
ja
fsubr
in
inc
ins
add
mov
inc
dec
test
cmps
pop
jo
in
add
and
or
dec
mov
fnstcw
push
comiss
dec
inc
aad
dec
push
pusha
jl
shl
je
jnp
jl
in
cmp
iret
lahf
xor
sub
hlt
out
jl
out
hlt
retf
jo
stos
lock
adc
mov
arpl
stos
mov
jecxz
inc
mov
pop
into
out
inc
das
mov
ins
push
inc
loop
pop
fcomp
cmp
jge
adc
pop
aad
aaa
cmc
bound
scas
mov
call
sub
lock
and
sbb
shr
test
rcr
jne
shl
sub
push
std
inc
dec
push
pop
pusha
xchg
shr
or
out
inc
sbb
cmps
dec
mov
cwde
sub
xor
mov
ins
lods
or
hlt
add
arpl
adc
out
cs
call
mov
mov
sar
lahf
cwde
shl
sti
jns
dec
clc
mov
fisub
in
(bad)
das
dec
jmp
shr
mov
cmp
sub
int3
xchg
fmul
aaa
addr16
mov
xchg
imul
sbb
dec
inc
pop
movs
jl
ja
mov
pop
cmp
mov
mov
adc
jmp
daa
call
add
ins
fnstcw
iret
mov
xor
dec
repnz
xchg
add
jae
cmc
xor
sub
inc
aad
int3
mov
ins
std
add
call
pop
xor
cmp
mov
divps
scas
xor
dec
cld
in
sti
pop
pop
int3
and
mov
mov
mov
out
xchg
xchg
mov
xor
and
mov
mov
push
fdivr
push
push
stos
adc
out
lods
push
enter
mov
cwde
adc
inc
jo
loopne
fcmovnbe
adc
stc
mov
cs
mov
add
ins
aad
xor
jmp
lahf
mov
jo
mov
adc
xor
addr16
and
adc
push
xchg
xchg
pop
sub
rol
nop
pop
cmps
(bad)
cdq
mov
xlat
jae
and
(bad)
push
mov
icebp
div
(bad)
fcos
jb
mov
fcmovnbe
mov
fmulp
sub
ror
and
dec
hlt
mov
push
cmp
es
xor
push
and
inc
(bad)
enter
inc
ins
jbe
and
loop
add
inc
push
test
xchg
add
into
pushf
rcl
outs
popa
and
cs
cld
mov
mov
into
push
xchg
mov
repnz
or
xlat
inc
ret
and
sub
popf
test
push
in
jne
fst
lds
xrelease
xor
sbb
iret
sbb
sbb
lock
mov
adc
inc
mov
or
inc
push
add
sahf
cmp
mov
lock
loop
jmp
sbb
ja
adc
js
aam
jmp
call
cmp
out
jecxz
test
(bad)
outs
jo
jae
les
fisub
imul
bound
sbb
xchg
fwait
(bad)
js
xor
enter
push
sahf
push
add
dec
push
icebp
ret
repz
pop
scas
xchg
dec
xor
inc
jo
in
push
pusha
data16
push
mov
outs
mov
dec
aad
or
inc
mov
call
dec
push
pop
fmul
nop
mov
jmp
fs
in
jnp
or
sub
mov
push
jae
test
mov
mov
pop
xchg
add
mov
lock
mov
pushf
stc
xchg
pop
daa
div
pop
(bad)
xor
push
lahf
imul
shl
(bad)
xlat
adc
mov
inc
and
inc
jo
add
mov
int3
les
inc
pop
repnz
cdq
sub
push
pop
dec
xchg
test
push
mov
jb
cmp
ret
adc
popf
jle
rcr
sbb
mov
aad
cdq
xchg
cmp
fsubr
pop
ret
push
(bad)
cli
clc
mov
push
sbb
xchg
xchg
dec
movs
adc
xlat
dec
sahf
sub
inc
mov
retf
stos
jle
movs
iret
imul
pop
or
inc
pusha
aas
loopne
retf
std
cmp
xchg
mov
hlt
xor
mov
and
(bad)
popa
push
dec
cmp
out
popa
adc
aad
mov
fcmovnbe
cld
mov
addr16
pop
(bad)
imul
or
loop
bound
fidivr
sub
icebp
ins
adc
sbb
stc
mov
cs
fwait
add
mov
and
sbb
test
jnp
jl
lods
lods
or
cwde
rol
sub
jl
repnz
or
mov
in
outs
(bad)
mov
mov
data16
std
iret
es
stos
aas
retf
jecxz
adc
arpl
cmc
dec
jle
push
sahf
iret
clc
(bad)
mov
les
adc
push
mov
nop
mov
jg
repnz
loop
jns
sbb
lods
sub
push
jbe
push
xchg
cs
movs
dec
push
fsubr
inc
ret
mov
cmps
data16
out
jae
cmps
cli
adc
out
pop
test
adc
add
add
fisttp
mov
dec
scas
in
hlt
cmp
in
pop
movs
sbb
aas
loope
xor
or
jb
and
xchg
es
jno
mov
cwde
mov
setl
xor
rcr
call
mov
xor
add
dec
outs
call
xor
xor
aaa
ss
cmps
pop
jl
or
nop
xchg
cmp
and
les
mov
dec
xchg
adc
sbb
push
and
pop
adc
test
test
inc
imul
add
in
xchg
pop
push
imul
jno
and
scas
pop
dec
jg
out
add
icebp
lahf
xchg
or
add
cli
and
pop
jecxz
mov
mov
inc
push
out
out
loope
inc
jle
mov
sbb
pop
loope
push
pop
and
and
enter
pop
jb
push
xchg
mov
in
sbb
or
mov
mov
push
xchg
mov
mov
jg
mov
jle
js
imul
stos
fidiv
dec
dec
fld
add
push
out
jae
sbb
sub
adc
push
jno
inc
adc
sub
mov
out
adc
enter
and
cmp
fwait
mov
mov
fwait
mov
test
mov
ret
fsubr
adc
fisttp
les
(bad)
xor
icebp
rol
idiv
imul
mov
push
mov
add
inc
push
outs
stos
test
stc
sub
das
adc
movs
dec
mov
adc
sbb
mov
mov
ins
(bad)
jecxz
ins
cs
sti
push
(bad)
or
cmp
or
mov
cmp
(bad)
into
daa
cmp
sbb
adc
lea
inc
push
mov
outs
outs
push
lahf
push
or
xchg
pop
mov
popf
jmp
sbb
nop
les
sbb
stc
push
push
test
and
scas
cmps
jns
mov
jle
pop
or
idiv
cmp
fwait
or
fld
mov
mov
sub
inc
sbb
stc
in
cwde
(bad)
(bad)
fcmovnbe
ret
dec
xchg
dec
xchg
pop
jmp
fidiv
lds
or
into
stc
ret
cmp
inc
test
mov
cmp
outs
in
lods
ror
in
adc
test
setge
ds
fbld
xor
add
pop
jae
mov
or
in
cld
and
nop
into
xchg
push
cli
adc
mov
test
inc
push
(bad)
(bad)
mov
and
out
repnz
rol
mov
(bad)
xor
cmp
push
sbb
dec
lds
test
ja
call
and
ins
pop
mov
out
add
into
outs
mov
jno
jecxz
cdq
adc
test
pop
(bad)
jne
mov
mov
nop
mov
shl
lea
addr16
jle
jmp
pop
jp
mov
mov
add
pop
sti
mov
or
test
fsubr
pop
fcos
sub
test
ins
cmp
cmc
sbb
and
push
add
push
pop
mov
inc
xchg
(bad)
dec
xor
jecxz
repnz
(bad)
adc
adc
mov
inc
movs
push
add
or
into
rol
int
xor
xor
mov
jbe
loopne
dec
jg
ror
pop
psllw
clc
ror
xor
adc
xor
add
test
jb
dec
mov
sub
retf
xchg
sti
clc
call
arpl
jg
pop
cmps
icebp
mov
mov
lahf
clc
add
and
cld
lea
jl
outs
sub
push
sub
xor
and
rcl
cmp
dec
test
mov
inc
mov
enter
mov
sub
xchg
pop
aaa
addr16
jb
inc
push
mov
dec
adc
sbb
dec
enter
in
mov
mov
sti
icebp
xchg
test
pop
scas
mov
in
dec
adc
ins
push
jmp
(bad)
xor
ret
xor
xor
inc
mov
pop
push
push
cmp
sbb
jae
xor
mov
lds
loop
dec
push
sub
sub
jl
loopne
pop
jbe
(bad)
xor
add
call
loop
retf
lods
sbb
dec
mov
sub
xchg
dec
stos
push
ret
sub
add
sbb
mov
xchg
jmp
or
jno
dec
add
push
in
push
stos
aaa
cmovns
shl
out
push
sbb
jmp
retf
(bad)
stc
fbld
idiv
lods
cmp
sub
cmp
(bad)
cdq
mov
sub
outs
add
pop
xchg
sahf
pop
and
dec
imul
push
xor
mov
fstp
pop
push
aam
adc
pop
icebp
ret
jb
fs
mov
adc
pop
lods
xlat
iret
or
cmps
adc
lods
jge
sub
or
mov
rcr
adc
movq
movs
jno
xor
adc
dec
xchg
xor
mov
jl
sub
call
dec
mov
int3
pop
jo
cs
sbb
arpl
inc
cmp
scas
jl
cli
addr16
cmps
xchg
lods
ins
addr16
loop
sub
xor
jl
out
mov
std
cdq
shl
fdiv
mov
(bad)
or
cmps
add
inc
mov
fiadd
cmp
mov
nop
mov
pop
ror
mov
mov
shl
out
ja
std
imul
fmul
inc
cmp
xchg
dec
inc
ret
test
imul
inc
addr16
push
cmps
xor
push
or
arpl
inc
jno
sub
and
add
cmps
xchg
or
les
in
test
(bad)
fisub
retf
xor
stc
out
push
retf
fcomp
loop
adc
ret
bnd
xor
cmp
inc
jmp
jb
jne
xor
and
sbb
je
pusha
jge
cs
xchg
sbb
addr16
fst
test
loope
jns
enter
adc
pushf
pop
mov
sub
and
sbb
int3
popf
fisub
push
fbstp
leave
aam
jb
stos
mov
call
or
movs
mov
jne
dec
outs
neg
jg
jle
stos
ret
dec
xchg
xchg
ret
ss
es
arpl
bound
aas
test
mov
adc
repnz
iret
jne
xor
dec
and
ss
(bad)
sbb
mov
repz
imul
cmp
ror
sub
mov
xchg
adc
cwde
push
adc
mov
or
call
(bad)
in
and
xor
cli
xchg
(bad)
jns
test
jbe
scas
push
sub
scas
clc
rcr
fsub
popa
xchg
inc
enter
or
push
sbb
dec
movs
jmp
inc
sbb
xchg
fs
out
cwde
ret
inc
(bad)
push
mov
je
stos
sti
jmp
jmp
jb
outs
mov
bound
fs
fcmovu
sahf
add
loop
mov
mov
jmp
inc
dec
outs
cmc
push
repz
xor
adc
add
inc
xor
cmp
mov
jne
out
mov
sahf
adc
sub
push
fs
xchg
jmp
test
sbb
cli
cmp
fcomp
stos
or
xor
sahf
repnz
ja
stc
dec
loope
cmp
fstp
imul
sub
xchg
dec
fsub
test
rcl
retf
cmc
jge
dec
sub
imul
ja
mov
cmp
mov
jmp
xor
inc
test
xchg
push
push
retf
pusha
cmp
(bad)
out
or
jl
jbe
or
test
invlpg
call
or
std
add
sbb
imul
mov
mov
enter
ror
jp
mov
sub
pusha
bound
pop
repz
bnd
mov
loopne
lds
out
ins
push
adc
xchg
pop
pop
dec
or
(bad)
int
adc
(bad)
dec
arpl
loop
sub
nop
jp
pop
sbb
into
mov
and
scas
jbe
mov
loopne
jae
cdq
std
repz
call
aaa
stc
dec
jmp
sub
int
mov
push
pusha
adc
sbb
pop
mov
and
imul
sbb
outs
jnp
call
test
das
pop
(bad)
rcl
or
mov
outs
outs
xchg
xchg
lods
enter
jl
dec
xchg
inc
aaa
push
jmp
push
popf
dec
cmp
in
or
sbb
(bad)
call
xchg
jp
out
fld
lds
mov
xor
(bad)
sar
imul
sub
mov
js
mov
cmps
xchg
sti
xor
mov
ret
scas
pop
sbb
les
je
int3
ja
stos
pop
mov
call
pop
out
xchg
add
pop
or
imul
and
repnz
mov
push
mul
cmp
and
cld
das
jo
fdiv
daa
push
sbb
xor
add
movs
jae
jne
push
int3
adc
(bad)
out
fist
dec
(bad)
cwde
not
dec
pop
cmp
mov
add
inc
fcom
jo
mov
mov
and
aam
or
push
sbb
and
cmp
mov
sbb
mov
adc
dec
retf
cli
adc
mov
repnz
pop
in
sbb
jmp
jge
(bad)
cli
jl
bsr
sahf
sysret
jae
icebp
mov
cli
pop
xor
int
mov
xchg
movs
in
fiadd
inc
jp
add
jns
xor
hlt
call
sub
mov
pop
cmc
inc
push
push
fs
adc
and
ret
sub
loopne
movs
lds
or
mov
and
pop
inc
cmp
aam
inc
sub
data16
mov
xor
jns
popa
out
pusha
mov
xor
in
pop
nop
aam
and
mov
mov
repz
call
leave
loope
inc
fisttp
(bad)
pop
lods
nop
fcomp
retf
std
inc
cld
int
dec
dec
stos
repz
pop
inc
leave
fimul
xchg
adc
in
mov
test
out
mov
ins
push
mov
psubw
jg
mov
or
pop
jecxz
mov
retf
int3
and
fisubr
push
xor
shr
push
or
adc
js
ror
test
mov
aam
adc
(bad)
xchg
pop
adc
sub
popw
stos
xchg
repz
cli
jp
jge
dec
stos
or
or
fs
fiadd
(bad)
or
imul
jb
xchg
push
test
inc
inc
mov
fstp
retf
dec
sub
inc
cmc
mov
fnstcw
xor
sbb
movs
and
adc
aaa
mov
sub
imul
push
(bad)
cmps
jle
mov
ret
mov
ret
jle
mov
mov
mov
(bad)
arpl
aad
arpl
add
bound
(bad)
sbb
(bad)
or
or
adc
pop
adc
(bad)
cmp
add
fldcw
stos
mov
int
into
cmp
(bad)
xchg
push
add
cmp
jns
ja
les
add
pop
loope
pop
aaa
pop
int
pop
test
jns
dec
xchg
mov
mov
arpl
test
mov
es
and
jo
loopne
not
rol
mov
adc
xchg
xor
daa
movs
jl
fistp
push
scas
clc
jg
push
repz
rcr
add
and
cmps
inc
ret
std
add
lea
cmp
mov
mov
mov
push
(bad)
mov
lea
test
arpl
xchg
push
xchg
mov
cmp
inc
fcomp
iret
ins
outs
jmp
pop
xor
retf
mov
xchg
and
cmc
adc
movs
pop
sbb
ret
dec
inc
dec
jmp
push
cli
add
fistp
mov
jo
idiv
inc
(bad)
out
stos
cs
cdq
sub
pop
aaa
jbe
test
push
mov
clc
(bad)
(bad)
fdiv
mov
jp
shl
push
jne
cld
pop
push
lea
push
pop
(bad)
sahf
lahf
inc
retf
sahf
jle
xchg
cmp
ror
daa
ss
loopne
fmul
jmp
xchg
aam
loop
les
pop
mov
and
sub
jo
sar
movs
mov
in
xchg
cmp
in
shr
jp
mov
xor
xchg
push
daa
adc
and
outs
iret
push
mov
adc
shl
cld
imul
ret
dec
sti
outs
mov
mov
stos
aam
test
jmp
movs
loope
mov
or
adc
mov
jmp
xchg
sub
repz
addr16
shl
out
loop
mov
xor
inc
mov
or
dec
dec
loope
pop
sub
fwait
jbe
adc
or
lahf
and
repnz
in
mov
(bad)
loop
sbb
outs
loop
xor
sar
push
push
sahf
jne
adc
add
inc
aam
pop
dec
fcom
cmps
fbstp
adc
pop
fst
xchg
push
lods
pop
mov
out
xor
ins
pop
test
push
adc
add
sbb
cmp
jae
(bad)
sbb
retf
jmp
ins
iret
cmps
sar
mov
add
jmp
jo
or
sbb
push
mov
add
in
jb
imul
mov
or
iret
mov
fst
mov
pushf
call
pop
inc
cli
pop
outs
nop
push
ret
pop
ret
das
cdq
mov
adc
pop
ss
lods
xchg
lahf
jne
mov
cmc
aas
jge
dec
sti
add
ret
dec
imul
fisub
lea
std
dec
mov
icebp
imul
jae
bound
lds
dec
scas
repz
out
dec
mov
out
pop
jp
aas
push
push
cmp
loopne
loope
adc
pop
or
clc
retf
pop
outs
adc
mov
xchg
lods
sub
jo
push
mov
fs
jge
addr16
or
rcpps
dec
test
(bad)
shl
dec
xchg
mov
xor
xor
push
inc
or
popf
and
loopne
mov
cmp
(bad)
(bad)
pop
mov
daa
sbb
das
jno
arpl
mov
mov
mov
repnz
int
xor
ins
xchg
test
dec
add
dec
cdq
lock
int
mov
das
stos
scas
movs
xor
push
fild
fist
xor
inc
shr
adc
sbb
xor
mov
out
xor
mov
cmp
loop
cld
or
push
or
push
adc
cwde
sahf
retf
xchg
sbb
lock
xor
aad
xchg
mov
push
sbb
sub
fstp
jp
pop
or
and
xchg
jnp
push
popf
or
cmp
das
inc
xchg
jl
or
push
(bad)
sbb
mov
movs
mov
mov
ja
(bad)
cdq
icebp
fnstenv
pop
pop
jmp
iret
xor
jl
inc
push
in
or
sub
mov
dec
xor
fsubrp
fld
mov
sbb
inc
pop
(bad)
jle
repz
cmc
loope
ins
and
aaa
lods
outs
icebp
or
outs
lods
jle
jns
shl
mov
push
jge
mov
daa
cdq
mov
(bad)
das
out
movs
fsub
test
jle
adc
sbb
daa
or
mov
movs
xor
and
jecxz
(bad)
sbb
fcom
imul
pop
jns
xor
shl
shr
retf
mov
ss
xchg
into
aaa
cmp
xor
loope
add
aas
mov
fmul
nop
into
add
call
push
xlat
push
arpl
pop
jno
pop
sub
in
lods
ror
mov
sar
adc
xor
push
jle
(bad)
adc
mov
cmp
pop
cvtdq2ps
push
call
fsubr
sbb
push
ror
les
loopne
mov
retf
adc
iret
jle
(bad)
retf
xchg
out
shl
neg
lods
sbb
inc
sub
loopne
mov
fdiv
or
push
shr
push
adc
xchg
inc
(bad)
(bad)
arpl
mov
jno
sti
sbb
in
mov
push
sub
add
cmp
(bad)
mov
mov
imul
icebp
inc
ins
nop
retf
test
addr16
sahf
imul
daa
jbe
pop
nop
xor
dec
add
pop
jge
pop
nop
jnp
not
mov
push
int3
in
popa
and
and
xor
test
adc
mov
(bad)
dec
mov
inc
cmp
test
push
bound
push
outs
inc
mov
cmp
push
das
lock
outs
cmp
imul
clc
mov
sub
push
je
sbb
loope
ins
shl
push
inc
shl
lahf
gs
sbb
ficom
movzx
mov
sahf
or
test
sbb
and
jnp
ins
mov
cmps
dec
in
adc
test
repz
xlat
stc
mov
(bad)
cmps
ror
jge
adc
stc
add
jp
push
xchg
and
jnp
xchg
fmul
xchg
xchg
xchg
push
jecxz
mov
cs
adc
push
lds
and
sub
pop
jns
call
bound
or
mov
js
stc
jns
sub
add
je
ret
mov
enter
xchg
out
ds
in
pop
mov
fcmovnb
fisttp
xor
jbe
push
xchg
ror
cmps
mov
mov
sbb
loope
out
popf
inc
fimul
inc
push
(bad)
retf
cmp
mov
ret
test
push
mov
jno
hlt
(bad)
fidiv
dec
lock
les
ror
bound
ins
aaa
fnstenv
adc
cmp
lods
mov
lods
and
div
adc
sub
cmp
adc
mov
hlt
pop
fcom
ret
pop
lahf
ins
enter
and
ja
retf
outs
mov
imul
sbb
xchg
sbb
cmp
hlt
fst
ret
push
imul
into
push
sub
cld
cmp
xchg
push
and
mov
adc
repnz
xor
dec
add
test
sub
je
stos
push
mov
daa
adc
mov
stos
inc
ror
dec
(bad)
ret
xchg
push
or
stos
hlt
pop
add
dec
inc
pushf
sub
mov
mov
cld
imul
xchg
sub
shl
add
xchg
daa
mov
push
arpl
into
fwait
leave
pop
in
push
sub
add
ret
fisttp
jl
lock
in
(bad)
jp
shl
inc
and
mov
rcr
les
sbb
mov
and
push
fcmovnbe
pop
inc
dec
add
dec
mov
dec
jmp
les
pop
push
das
ror
lea
push
xor
ds
add
mov
fisttp
popf
enter
movs
push
adc
mov
sbb
push
call
xor
sti
add
jbe
or
daa
jbe
pop
repnz
dec
or
cmp
fld
outs
scas
out
mov
pop
xchg
sub
cwde
loope
jnp
sbb
es
pop
stc
mov
(bad)
sub
aas
cmp
pop
iret
inc
popf
movs
inc
test
and
jmp
sbb
xor
ins
iret
fild
daa
stc
xor
mov
loopne
sti
add
dec
imul
test
push
daa
jmp
push
bound
(bad)
jmp
pop
inc
clc
and
out
loopne
scas
push
inc
out
mov
mov
adc
sbb
stos
add
fimul
in
jbe
jecxz
rcl
cmps
(bad)
movs
(bad)
(bad)
adc
cmp
push
div
cmps
mov
mov
mov
pop
ins
lea
jno
call
xor
outs
push
clc
les
inc
popf
repnz
inc
xchg
lea
imul
add
std
jb
fcomp
inc
loope
pop
fbstp
xchg
scas
or
xchg
(bad)
nop
inc
test
data16
adc
bound
push
neg
pop
rcl
shl
js
(bad)
mov
out
pop
lods
push
rcl
cwde
out
jbe
stc
xor
push
stc
(bad)
jg
cdq
mov
xchg
outs
adc
sbb
xor
xchg
pop
inc
imul
data16
mul
pop
fild
mov
scas
push
pop
sub
aaa
sbb
or
in
push
dec
rcl
sbb
bnd
daa
inc
add
int3
push
mov
inc
or
shl
std
pop
(bad)
xlat
push
jle
into
imul
sbb
aad
dec
leave
iret
dec
jno
mov
movs
cmps
mov
popa
test
pushf
aaa
cmp
and
cmps
sub
cmp
int3
xor
(bad)
in
and
xlat
cmp
push
adc
test
jp
movs
push
shl
mov
mov
std
cdq
and
stos
cmp
hlt
ds
xlat
and
mov
aaa
sub
shl
js
push
stos
mov
add
push
aaa
or
mov
ss
je
das
jmp
cwde
push
xchg
add
aaa
jmp
or
(bad)
aad
test
xor
inc
fdivr
push
(bad)
xchg
(bad)
sti
mov
ins
or
inc
mov
lds
fldpi
ins
repnz
xor
add
dec
lods
fwait
cmp
(bad)
push
adc
lods
push
sub
jmp
push
xchg
in
mov
sti
in
loop
sbb
loopne
test
inc
in
repz
fild
mov
dec
sub
xchg
adc
imul
inc
cmp
jbe
fimul
pop
pop
xlat
cmp
outs
push
cwde
lock
mov
aas
cmp
xchg
scas
pop
fdiv
cmc
adc
jmp
fstp
push
jmp
jns
shl
jbe
and
cdq
nop
or
ins
ds
xchg
dec
mov
in
xor
mov
ins
jge
fxch
imul
sahf
adc
es
adc
ja
dec
and
sbb
cmp
mov
stc
sbb
sbb
loop
test
pop
and
sbb
and
mov
sub
fisub
movs
sar
fcomp
jb
lods
(bad)
sbb
out
movs
xchg
call
cmps
sub
xor
push
xchg
pop
or
xchg
retf
in
shl
inc
xchg
cmp
call
pop
(bad)
jle
rcl
sbb
jae
(bad)
mul
test
jg
leave
sub
cmp
retf
aas
out
xchg
and
loope
(bad)
jbe
ins
call
sbb
sbb
sub
enter
push
leave
mov
ud2
cs
cmp
(bad)
mov
mov
inc
cmp
std
add
fidivr
jo
daa
push
int
data16
jnp
inc
add
and
loop
gs
pop
test
sahf
jb
mov
fs
in
outs
sti
dec
pop
push
jl
mov
mov
jmp
rcr
test
xor
jg
pushf
push
mov
movs
xchg
jbe
dec
loop
out
xchg
push
xor
jns
lods
(bad)
adc
inc
xlat
fidivr
pop
mov
cmp
and
xor
loopne
push
xchg
es
test
stos
pushf
mov
add
fcmovnu
add
rcl
aaa
dec
fisttp
ins
enter
pop
or
lods
scas
scas
mov
sbb
(bad)
pop
dec
mov
inc
outs
cli
sahf
and
dec
adc
and
out
ficomp
cmp
call
stc
mov
pop
dec
and
scas
lds
fs
into
fstp
pop
ror
mov
lds
pop
dec
aam
adc
movs
cld
cmp
xor
sub
mov
adc
dec
add
fsub
adc
sub
pop
popa
or
add
pushf
cmp
cmp
lahf
mov
cmc
xchg
cmp
inc
les
adc
rol
push
loopne
pop
iret
outs
(bad)
lock
sub
xchg
mov
loope
sbb
and
mov
aad
xchg
out
lds
(bad)
ds
xor
add
add
retf
shr
inc
and
retf
mov
repz
xor
cmp
nop
mov
mov
ins
pop
xor
xchg
push
inc
je
mov
cmp
or
mov
fs
jl
mov
in
dec
mov
add
out
xchg
aas
push
movs
jecxz
call
clc
jg
xor
mov
stos
sub
lea
call
test
aam
test
aam
movs
fst
add
xchg
call
or
and
sub
pop
inc
test
xchg
popa
dec
fidivr
pop
icebp
aaa
shl
test
cwde
retf
sub
js
fs
pop
cmp
aas
call
inc
push
stc
hlt
add
bound
dec
or
iret
cmp
adc
in
cli
cmp
fidivr
adc
addr16
scas
mov
fdivr
cmp
out
jg
cmp
pusha
loop
sub
inc
dec
sbb
imul
shl
xchg
mov
retf
sbb
test
jne
or
lock
jno
dec
xlat
cmp
add
xor
loop
jle
xor
repz
push
push
jbe
imul
aas
add
inc
pop
ds
dec
adc
cmp
and
std
and
push
add
jnp
xchg
add
ss
imul
pusha
clc
push
or
add
jp
sub
sbb
cld
popf
mov
mov
sub
mov
ins
outs
out
xchg
cld
jecxz
sub
addr16
jge
enter
sti
sub
ds
retf
and
xchg
(bad)
movs
mov
inc
test
pop
mov
nop
cmp
xor
in
and
mov
sti
inc
sahf
cld
push
add
pusha
pusha
mov
rcr
fld
jns
and
loop
stos
inc
mov
fnstsw
cdq
div
sbb
cmp
loop
out
fisubr
bound
xrelease
(bad)
pop
call
loopne
ficom
int
xchg
ja
xchg
push
xchg
pop
mov
clc
add
inc
(bad)
or
cdq
dec
fbld
cmp
sub
ins
dec
jae
sub
mov
and
sahf
jno
inc
(bad)
xor
or
mov
in
icebp
in
lahf
xchg
mov
call
and
clc
das
call
scas
dec
push
xor
int
imul
stos
jo
mov
xchg
and
dec
cwde
jge
adc
pop
ret
pop
xchg
adc
and
data16
jmp
jmp
call
lods
ret
mov
cwde
xchg
adc
imul
ins
and
jo
push
ds
js
out
mov
inc
fwait
pop
out
sub
cs
in
sub
call
leave
mov
cmc
loop
mov
(bad)
retf
popaw
mov
xchg
mov
repz
les
xor
add
test
lods
std
cmps
lds
in
push
and
gs
adc
dec
fimul
push
xchg
push
loope
call
lock
in
push
hlt
mov
xlat
int
sub
loope
mov
lea
stos
mov
sti
jb
cmps
dec
jb
test
mov
or
retf
lods
jmp
leave
outs
inc
fucomp
xchg
adc
jmp
mov
xchg
stos
push
test
xor
mov
movs
call
cwde
mov
aad
mov
mov
cmc
retf
sbb
dec
mov
outs
lahf
pushf
cmps
pop
push
call
sbb
mov
shl
pusha
fadd
push
rcr
mov
pushf
jge
test
sub
add
repnz
shr
int3
mov
push
sahf
xor
call
out
out
push
adc
jg
into
or
mov
or
sbb
test
sbb
(bad)
cdq
cmp
fwait
or
push
int3
pop
das
leave
cmps
pop
sbb
pop
jb
fld
bound
call
sbb
gs
pop
cmp
dec
inc
ins
dec
(bad)
cwde
push
inc
aam
fisubr
jg
scas
adc
add
mov
xchg
push
nop
mov
pop
jne
rol
mov
sub
xor
ins
outs
sub
cmps
and
shr
xchg
in
jbe
cmp
and
inc
shl
or
xor
ror
push
popf
add
sub
jb
fild
cli
push
add
mov
sti
pop
scas
ja
xor
jbe
lds
rcr
int3
mov
idiv
fld
sub
cmps
shl
nop
rol
inc
mov
mov
sbb
in
sar
push
dec
arpl
test
ds
or
sub
ret
stos
push
xor
jmp
xor
pop
and
jbe
aad
mov
dec
daa
mul
xor
mov
out
sub
dec
xor
cmp
pop
dec
fucom
(bad)
pushf
sbb
dec
aad
xchg
cmps
mov
mov
loopne
pusha
fst
sbb
jnp
imul
xchg
aas
ins
test
or
das
and
xchg
mov
ins
adc
movs
test
into
shl
sub
or
lods
dec
ret
mov
aad
and
cmps
mov
xor
test
fbstp
lds
mov
push
pop
mov
push
sti
jge
dec
jo
in
scas
xchg
jg
jmp
iret
pusha
mov
fidiv
mov
test
pop
into
cmp
inc
dec
int
or
mov
dec
and
jle
jbe
ins
inc
sti
dec
sbb
push
cmp
push
dec
jae
cmp
dec
dec
pop
ret
adc
int3
xor
push
dec
cdq
sub
xchg
inc
sbb
push
imul
xchg
cld
mov
mov
xor
mov
adc
sbb
mov
es
paddd
cmp
loope
mov
push
test
and
cmp
xchg
std
jg
sub
add
xchg
call
fdivr
hlt
mov
jmp
out
add
repz
adc
push
(bad)
dec
add
popf
mov
mov
sub
inc
jp
inc
or
ret
cld
jne
cmp
loop
outs
adc
in
adc
mov
cmp
out
add
out
jl
or
ror
jmp
sti
pop
rol
popf
rcl
int
mov
mov
xor
fidiv
mov
jge
repz
fdiv
out
loope
cli
jp
xchg
jle
ret
das
jmp
jp
shl
push
jb
outs
enter
imul
jp
sbb
dec
cmps
outs
pusha
(bad)
push
int
pop
dec
jmp
push
(bad)
hlt
(bad)
jae
mov
mov
es
mov
mov
rcl
cmc
xor
movs
aaa
in
xor
inc
rcr
cmp
push
xchg
jge
aas
mov
(bad)
mov
mov
cmp
add
stos
jl
xor
adc
lock
ja
mov
dec
mov
push
and
mov
mov
shr
dec
push
mov
adc
and
mov
(bad)
test
xchg
cmc
(bad)
in
cld
dec
mov
(bad)
mov
sub
push
inc
cmp
ret
or
mov
sub
mov
lods
pop
push
sub
in
inc
add
xor
dec
dec
jge
push
mov
inc
mov
push
adc
das
pop
cdq
xchg
jmp
repz
sbb
sub
xchg
add
jl
mov
pushf
add
icebp
push
jo
stos
(bad)
fwait
cmp
mov
add
sar
addr16
cmp
mov
inc
mov
mov
and
and
rol
retf
ss
sbb
fwait
pop
xchg
les
pop
cmps
or
mov
popf
and
ds
rcr
dec
or
pop
pop
xor
mov
outs
out
xor
dec
sub
bound
jmp
pusha
gs
jmp
push
cmp
pop
aaa
(bad)
jbe
adc
jo
stos
push
neg
fadd
or
cwde
xor
mov
xchg
sub
pop
pop
adc
jb
shr
hlt
loop
sbb
mov
inc
xchg
pop
ins
or
out
imul
inc
test
pop
lds
jg
mov
sub
std
cdq
pop
retf
xchg
pop
adc
pop
loope
xchg
jnp
retf
inc
and
(bad)
mov
pop
lods
jmp
retf
fs
and
in
leave
xchg
fcmovnbe
scas
sub
xchg
sub
mov
outs
lock
ss
outs
push
mov
sub
call
dec
push
das
test
sar
inc
sub
cld
xchg
adc
out
or
pop
(bad)
imul
daa
inc
pusha
jns
out
mov
dec
(bad)
fstp
lock
(bad)
pop
hlt
data16
adc
jae
mov
stos
daa
lods
les
ins
xchg
pop
lods
in
pop
xor
gs
mov
call
push
push
pop
adc
jmp
jg
push
lock
mov
cmp
xlat
addr16
(bad)
stc
adc
xchg
fidiv
xchg
aas
mov
cmp
mov
scas
xchg
aad
inc
in
leave
push
push
cli
mov
xor
pop
imul
mov
jae
ror
mov
pop
rcr
push
or
pop
inc
mov
jnp
push
xor
movs
jg
das
jns
out
aad
and
repnz
mov
sub
push
xchg
dec
add
inc
or
push
pusha
mov
retf
mov
ss
(bad)
jmp
mov
dec
dec
sub
sbb
fisttp
lahf
sbb
sub
cmp
test
cmp
mov
test
xor
jl
fnstenv
mov
inc
das
aad
mov
mov
repnz
lahf
mov
jl
pop
out
icebp
popf
ror
mov
stos
scas
add
adc
gs
fucomi
cmps
add
mov
xor
cmps
addr16
(bad)
or
cmp
cmp
shl
stc
xchg
push
and
mov
pop
pop
cdq
push
cmp
shl
pop
push
ds
sbb
add
sbb
daa
inc
cwde
push
push
mov
enter
xchg
push
adc
dec
cmp
push
jl
cmp
pop
dec
fidivr
ret
popf
sbb
pop
xor
sub
into
in
or
loop
rcl
xchg
cld
push
pop
call
es
fwait
lods
inc
xchg
cld
shr
fmul
inc
mov
dec
inc
add
xor
add
out
loopne
(bad)
(bad)
jg
sbb
pop
paddq
jmp
ret
fcmovnb
mov
ror
mov
mov
sahf
out
(bad)
in
cmp
in
mov
sub
enter
movs
jo
ret
ds
xchg
pop
out
mov
pop
in
shr
mov
push
jno
push
repz
mov
inc
js
add
pop
jp
add
adc
out
dec
and
sub
mov
adc
nop
sub
cmp
(bad)
sbb
push
les
or
xor
popf
lahf
mov
cs
stos
iret
jns
inc
push
mov
daa
xor
mov
loopne
and
inc
mov
stos
(bad)
push
jge
outs
sbb
sbb
jmp
int
jmp
idiv
xchg
pop
sub
push
stc
movs
push
pshufw
jb
ret
imul
inc
inc
xchg
xor
jmp
addr16
adc
inc
ret
sub
push
pop
jmp
jle
inc
mov
dec
scas
mov
in
or
dec
fisub
mov
in
dec
mov
call
mov
mov
ins
call
add
xor
xchg
loopne
test
aas
outs
out
bound
ss
out
or
cmp
mov
repnz
inc
popa
sbb
nop
out
aaa
outs
movs
push
mov
adc
pop
in
icebp
push
scas
call
push
jp
rol
cmp
xchg
sbb
dec
(bad)
fidiv
sub
cmp
cmp
xor
mov
xchg
xchg
and
sbb
pushf
movs
mov
mov
push
das
inc
push
cmp
dec
mov
fld
xchg
add
cmp
dec
sbb
push
lahf
or
je
cmp
retf
scas
gs
(bad)
int3
adc
dec
test
test
pushf
fs
fnstcw
lock
in
call
stos
cmp
loope
popf
adc
push
nop
dec
lods
push
inc
jle
icebp
gs
cmps
retf
xchg
fs
jo
sbb
test
cmp
ds
mov
retf
paddd
cmp
add
and
fstp
dec
pop
mov
cmp
push
int3
pop
add
dec
jmp
dec
fs
and
push
imul
ins
or
out
and
stc
fdivrp
jg
inc
push
jno
fs
jp
call
out
xchg
fstp
jb
lds
shr
scas
ret
add
inc
mov
ins
jno
aas
(bad)
outs
inc
test
xor
out
adc
aas
jnp
sbb
cdq
fmul
sahf
jne
xchg
pop
or
mov
mov
push
lock
adc
popf
jge
pop
nop
test
loope
push
jg
dec
jmp
cmp
scas
nop
daa
pop
rol
test
in
pop
pop
mov
add
nop
loop
pop
sbb
in
push
xlat
lods
add
aad
and
xor
xchg
dec
pop
(bad)
bound
stos
shl
gs
ret
jns
xchg
xchg
pop
push
xor
adc
bound
xor
mov
push
pop
push
cmp
mov
mov
call
int3
cmp
mov
fwait
pop
es
loopne
daa
dec
sub
cld
mov
adc
xor
inc
int3
data16
or
add
pop
jns
shr
add
lods
leave
jns
fld
pop
scas
mov
les
leave
jmp
pop
movs
mov
adc
in
movs
sub
cmp
and
test
outs
jl
add
retf
fsubr
ret
add
mov
xor
dec
mov
xchg
adc
pop
gs
shr
leave
movs
int3
push
sbb
fsubr
sbb
aad
mov
or
xchg
sub
and
leave
ds
mov
dec
mov
or
inc
mov
(bad)
mov
jmp
jno
pop
sbb
ret
int
push
(bad)
push
dec
sti
mov
imul
jg
loopne
xor
rol
push
adc
inc
or
push
xor
adc
adc
cld
ins
dec
or
jp
xor
xor
(bad)
cmp
test
stc
stos
xchg
cmp
loope
cs
xchg
add
inc
push
(bad)
and
jg
popa
fstp
mov
cmp
fidiv
ret
xchg
push
aam
jnp
push
lock
dec
int3
or
adc
loope
fidivr
sub
bnd
dec
jmp
outs
and
popa
sbb
mov
sbb
shr
dec
lock
out
xchg
call
or
xchg
test
(bad)
sub
push
mov
mov
in
pop
sbb
dec
test
lahf
push
dec
mov
out
fst
jo
dec
mov
test
call
in
jmp
add
idiv
in
adc
and
shl
sar
adc
push
xchg
pop
sub
mov
rcl
lea
hlt
test
iret
jle
and
nop
sub
mov
aad
pop
jbe
dec
stos
mov
(bad)
ds
xor
add
mov
out
outs
jle
push
cmp
callw
mov
cmp
(bad)
cld
push
xchg
jbe
in
cmp
stc
outs
test
cmp
or
ret
dec
ret
lahf
popf
push
cmp
repnz
scas
fadd
ja
leave
or
int3
int3
push
bt
mov
mov
sahf
sub
ja
xchg
mov
dec
ret
bound
fmul
mov
adc
lods
leave
xchg
arpl
ss
jmp
lods
fcmovne
add
mov
mov
cmps
cmp
jg
xchg
mov
arpl
scas
(bad)
push
xchg
rcl
loope
lahf
repz
movs
adc
push
jge
dec
stc
xchg
pop
(bad)
in
pop
mov
(bad)
push
call
mov
lods
cmp
mov
sbb
dec
mov
cli
sahf
dec
aad
je
es
or
or
(bad)
clc
fdivr
mov
js
jns
ins
and
xlat
gs
pop
dec
(bad)
xchg
test
mov
dec
ret
sbb
js
xor
sub
and
sbb
add
cmp
scas
and
push
bound
sbb
lods
mov
dec
int
retf
shl
pop
rcl
xor
push
jae
lds
push
push
sti
lahf
mov
sub
mov
repz
std
leave
inc
je
rcl
retf
repz
xchg
or
jmp
mov
xchg
and
push
shl
mov
out
sub
and
imul
adc
cld
pusha
dec
mov
jnp
mov
ret
inc
fisttp
cmp
gs
cmp
clc
jbe
loopne
jo
lahf
and
xor
xor
outs
(bad)
out
shl
sbb
and
xor
aad
mov
aaa
fcomp
dec
aad
shr
mov
dec
cmp
push
cmp
test
je
lea
cmp
push
dec
dec
std
sar
data16
pop
es
lock
xchg
pop
test
nop
mov
mov
add
mov
xor
popa
loop
(bad)
or
xchg
daa
test
jge
sub
xchg
mov
movs
(bad)
or
aam
adc
test
push
sub
inc
sbb
dec
jmp
mov
movs
ss
hlt
(bad)
pop
mov
push
ins
cmp
scas
(bad)
adc
adc
inc
outs
push
ret
loopne
dec
sub
in
ficom
mov
sub
cmps
in
push
cmp
sahf
icebp
jmp
adc
das
push
ret
pop
movs
sub
ss
pop
fwait
xchg
mov
jmp
inc
loope
add
pop
jle
and
pop
and
xchg
add
pop
stos
aad
(bad)
and
xor
or
inc
test
add
jmp
les
mov
xchg
cmp
and
imul
cli
push
out
pusha
aam
sbb
popf
add
xchg
stos
and
push
mov
ds
jge
movs
jg
inc
sbb
sti
cli
les
inc
push
mov
inc
mov
cld
popa
clc
sti
pop
inc
mov
lds
pusha
cmp
sub
imul
cmp
mov
das
xchg
cmps
xchg
mov
pop
movs
jo
fsubrp
sub
xor
xchg
pusha
iret
(bad)
mov
int
add
lea
inc
icebp
in
inc
cdq
jae
jg
movs
or
stc
ret
push
mov
aas
cld
call
jp
add
lahf
out
add
mov
inc
in
mov
xchg
pop
push
ret
ins
test
cli
xchg
retf
bound
pop
pop
movs
jne
arpl
xchg
(bad)
jp
shr
cmp
pop
int
ret
add
jle
jmp
inc
pop
test
push
loop
ret
loopne
lods
imul
adc
shl
hlt
dec
retf
jmp
int
add
and
std
push
push
mov
mov
dec
arpl
(bad)
push
arpl
adc
jno
test
dec
dec
xor
call
lods
shl
sbb
adc
es
add
test
pop
ret
in
ficomp
mov
pop
aas
pusha
jl
imul
mov
mov
add
pop
std
cwde
mov
and
icebp
scas
mov
in
jmp
imul
xchg
out
aaa
test
out
cs
popa
sub
ret
inc
imul
push
pushf
push
jns
cwde
push
push
jo
into
sar
cmp
or
icebp
outs
pop
mov
sbb
sbb
in
push
push
test
daa
jno
push
gs
inc
in
popa
in
mov
jp
or
arpl
mov
push
and
mov
add
rcl
test
and
inc
mov
xchg
sub
dec
pcmpgtd
ja
out
and
lahf
sub
ret
xchg
bound
and
out
retf
inc
enter
inc
push
retf
adc
mov
out
mov
clc
loope
pop
fbld
jmp
mov
add
push
(bad)
mov
adc
inc
mov
fwait
sub
sbb
sub
dec
push
sbb
mov
mov
(bad)
mov
lods
sub
in
aad
lods
pop
jecxz
repnz
sbb
push
mov
test
push
or
add
and
or
mov
mov
test
pop
cld
mov
fs
loope
loop
dec
and
pop
cmps
in
jg
icebp
sub
outs
in
nop
je
sbb
das
and
mov
jp
push
sbb
pop
mov
out
jae
jg
nop
sbb
dec
xchg
arpl
das
mov
aas
(bad)
dec
test
call
pop
test
add
pop
loopne
aaa
test
jns
stos
fsubrp
pop
and
add
vandps
push
adc
jmp
xchg
sub
sub
xchg
sar
sbb
cmc
sbb
sbb
out
sub
mov
movs
or
in
aam
xchg
jb
and
ins
push
jg
fisubr
pop
aad
or
and
loop
mov
rcr
cmp
sahf
outs
(bad)
jo
pusha
sub
mov
ss
adc
icebp
pop
in
jp
cmc
test
and
cmp
int
cmp
popa
popf
mov
push
jp
pause
(bad)
push
idiv
and
movs
lods
jmp
mov
dec
gs
xor
pop
fist
test
ret
adc
jge
xor
and
sub
into
add
push
jge
pusha
out
mov
mov
cmp
rol
inc
inc
mov
xchg
(bad)
mov
fisubr
pop
xor
call
out
and
ds
xchg
lock
jbe
lea
lahf
cwde
sub
sub
mov
sub
retf
mov
mov
movs
test
jge
mov
sub
jg
lods
fst
rcr
daa
or
popf
or
pop
int3
add
fld
sbb
fwait
or
mov
(bad)
in
pusha
push
and
mov
out
(bad)
fcom
push
push
ror
pop
mov
call
mov
shl
bound
adc
lahf
fistp
inc
dec
xor
cwde
ds
mov
xchg
lods
out
loopne
shr
push
inc
push
dec
popf
mov
mov
xlat
stos
sti
push
mov
push
es
bsr
mov
mov
mov
jmp
sbb
jne
ss
jnp
cmps
or
cmp
rol
scas
sub
pop
push
mov
ror
or
aam
xchg
dec
push
inc
cld
pop
add
jge
push
jns
jne
sbb
leave
loopne
mov
ret
popa
ret
mov
int
lods
mov
pusha
sbb
test
mov
mov
movs
icebp
sub
cmp
sbb
add
mov
pop
in
out
loope
xlat
mov
out
fs
mov
(bad)
aam
iret
imul
mov
and
mov
mov
xchg
jno
jg
push
enter
push
push
dec
adc
popf
pop
mov
mov
jge
mov
(bad)
jge
push
xchg
clc
adc
out
adc
sub
pop
inc
mov
cmps
cli
mov
int
mov
cli
out
call
sti
sub
xor
cmp
jl
push
(bad)
and
mov
js
sub
ds
in
dec
mov
outs
out
add
aaa
adc
jmp
push
dec
mov
or
mov
pop
adc
jb
std
or
xchg
rol
push
push
push
jp
rcl
sbb
lds
dec
scas
retf
sar
inc
adc
ss
test
test
xchg
lods
mov
xchg
outs
popa
mov
stos
inc
lea
es
and
jecxz
and
and
retf
sub
dec
ins
cmp
mov
push
(bad)
cmc
xchg
jns
stos
jbe
pop
ret
jbe
call
lea
movs
ja
add
mov
inc
ins
sub
jmp
xor
gs
aaa
and
mov
es
arpl
sub
ret
retf
xor
(bad)
lods
xchg
mov
nop
pop
(bad)
dec
imul
scas
sbb
mov
xor
dec
pop
push
mov
xchg
lea
mov
pop
ror
cmp
adc
cmp
ds
cmp
rol
add
mov
adc
mov
imul
lds
push
test
xchg
pop
dec
push
bound
arpl
loope
pop
sbb
repz
aad
sbb
pop
push
mov
iret
xor
sub
pop
mov
dec
ins
cli
adc
push
not
mov
add
add
and
aaa
push
or
out
pop
push
jb
push
sbb
mov
and
jp
int
fist
je
jnp
xchg
jbe
push
add
stos
cmps
gs
mov
arpl
imul
ret
pop
inc
cmc
add
sbb
popf
dec
adc
and
and
loop
fldcw
push
push
mov
fs
pop
sahf
mov
(bad)
aad
jne
lds
sbb
stc
cmp
(bad)
fidivr
addr16
lahf
or
fist
add
aad
adc
cmp
imul
(bad)
xor
fidivr
inc
or
dec
mov
rcl
cdq
js
or
ficom
das
mov
imul
jns
mov
test
call
(bad)
pusha
repnz
mov
sub
jmp
ret
mov
xor
jb
inc
out
cmp
sbb
mov
repnz
pop
repnz
mov
or
gs
xor
arpl
nop
not
cmp
jecxz
clc
mov
and
pusha
(bad)
std
pop
xor
xor
scas
sbb
cmp
push
add
push
sbb
fstp
inc
jl
loop
fmul
clc
jecxz
and
fisttp
cli
jle
leave
push
push
ds
xlat
pop
pop
rol
mov
sahf
or
adc
mov
ret
shr
iret
call
add
loope
pop
adc
adc
aas
xchg
xchg
jne
mov
pop
cdq
or
push
dec
cmp
ret
mov
or
xchg
cmp
xchg
pop
test
sahf
adc
xor
lods
xchg
mov
pop
aas
sub
adc
ins
xor
add
inc
leave
sar
(bad)
fdivr
pop
inc
add
jo
inc
push
cmp
push
adc
and
std
scas
ret
inc
inc
jnp
lock
ret
push
stos
mov
clc
stc
scas
sub
sub
pop
addr16
sbb
icebp
ins
das
add
pop
cmp
jns
repz
scas
stos
xor
dec
xor
or
and
mov
add
retf
adc
ins
adc
mov
sbb
dec
(bad)
retf
and
mov
nop
jmp
sar
scas
cmp
enter
sbb
daa
popf
mov
lods
push
(bad)
int3
xchg
mov
mov
imul
mov
mov
jno
stc
sbb
mov
stos
mov
or
shl
in
sub
jb
ds
aaa
(bad)
pop
test
push
cmps
jmp
fcom
call
sub
cmp
aam
push
out
in
cs
fimul
cdq
cmps
xchg
ds
cmp
jg
add
(bad)
push
mov
retf
inc
jmp
test
loope
sti
add
ror
cld
mov
cmc
cmc
lahf
out
inc
dec
sub
call
or
mov
or
and
lock
xor
mov
das
stos
stos
jne
cmps
int3
jge
shr
(bad)
adc
in
cmp
les
mov
in
mov
shl
mov
mov
mov
mov
ss
cmps
mov
and
sub
fs
sub
dec
dec
mov
push
sbb
xlat
dec
jge
popf
cwde
dec
cwde
adc
xor
sar
xchg
pop
mov
cmp
retf
mov
ins
xor
(bad)
(bad)
sti
repnz
(bad)
jecxz
mov
out
jnp
push
inc
cli
pop
lods
add
scas
dec
and
push
pop
sahf
jnp
std
pop
jl
jg
pop
adc
xor
test
sbb
or
outs
retf
sbb
icebp
jo
and
pop
shr
pop
cmovp
gs
pop
sbb
push
push
ins
ret
and
retf
call
mov
mov
mov
repz
xlat
pop
cmp
add
pop
pusha
xchg
mov
pushf
lahf
push
add
jmp
(bad)
rcr
pxor
int
add
sbb
scas
jge
retf
idiv
data16
mov
jno
out
movs
(bad)
or
jmp
push
and
lods
ficomp
(bad)
(bad)
adc
mov
xor
dec
pop
push
fstp
xchg
sub
or
scas
or
lods
pop
loope
stos
dec
ins
or
sti
mov
aas
stos
pop
jge
imul
xor
int
movs
xchg
js
jno
xor
cdq
test
adc
jns
adc
pop
mov
cmp
push
xchg
test
sbb
push
or
push
jg
mov
mov
fild
or
or
mov
push
xor
dec
fisub
test
dec
enter
dec
sbb
adc
pop
xor
int3
in
les
dec
inc
out
adc
push
sbb
rol
jmp
sbb
xlat
or
or
(bad)
shl
gs
js
(bad)
jae
fldcw
inc
xlat
xor
jg
int
mov
cdq
mov
adc
bound
mov
mov
fist
mov
xchg
mov
mov
and
das
shr
aam
push
cmps
pop
push
and
xchg
pushf
nop
push
in
mov
mov
sub
fnstcw
ror
inc
jb
cmc
dec
addr16
mov
mov
pop
stos
xor
inc
ss
movs
adc
in
call
mov
in
sbb
xor
or
in
sti
leave
mov
dec
pop
fdiv
mov
push
add
sub
jae
mov
pop
mov
sub
xor
or
dec
imul
xchg
fwait
cmp
es
jo
mov
adc
ins
push
outs
loop
sbb
in
jge
jmp
(bad)
int
rcl
push
cmp
jo
cmpps
fwait
addr16
aam
and
xor
xchg
xchg
fnstenv
sub
imul
push
push
or
out
xchg
fstp
push
in
inc
(bad)
sbb
stos
mov
xchg
xchg
dec
jp
bound
in
pop
fidiv
frstor
lock
lods
leave
fadd
ret
and
lds
mov
int
pop
sbb
js
jl
push
adc
or
in
fld
retf
ins
mov
xchg
sub
(bad)
in
pop
dec
int
ds
sbb
jmp
inc
push
adc
mov
xrelease
dec
ret
dec
add
les
cmp
adc
(bad)
mov
int3
rcl
pop
mov
pop
jmp
inc
sar
movs
test
scas
sub
fist
push
cld
pop
dec
clc
out
ret
pop
dec
push
movs
shl
jmp
mov
loope
sbb
or
mov
pop
mov
clc
ins
leave
jmp
(bad)
cdq
inc
sub
cli
inc
jl
inc
ret
fst
es
and
xchg
int3
ror
sbb
imul
mov
cmp
test
adc
imul
out
xchg
ret
sahf
add
ins
out
cdq
shl
ret
cmp
or
cwde
out
pusha
adc
clc
cmp
mov
test
inc
test
inc
mov
xchg
gs
cmp
sbb
push
push
inc
and
aad
out
push
call
sub
psllw
inc
popa
mov
xor
inc
sahf
aaa
add
repnz
loop
sti
cs
ja
(bad)
cmp
mov
ror
inc
or
in
outs
daa
add
aad
clc
sbb
mov
xchg
sbb
mov
dec
pop
retf
jno
pushf
(bad)
scas
push
stc
adc
data16
xchg
jecxz
jmp
and
or
adc
mov
cmp
int3
xchg
stos
cmp
es
add
pop
nop
xchg
in
dec
sub
jp
jecxz
fidiv
jle
push
bound
xlat
mov
cmp
(bad)
jle
dec
dec
mov
push
test
stos
fimul
in
call
sbb
fisttp
sti
and
xchg
xchg
xchg
int3
and
ins
fiadd
arpl
call
mov
inc
nop
sub
retf
dec
add
push
xor
popf
(bad)
and
jno
cmps
ss
pusha
adc
arpl
sahf
imul
jmp
pop
mov
movs
movs
adc
xchg
clc
mov
sub
outs
jge
dec
imul
xlat
sub
test
push
xor
pop
jnp
adc
sbb
sbb
sub
fsubr
inc
ret
cwde
inc
mov
pop
call
popf
sub
dec
mov
ins
adc
daa
cwde
jne
push
cwde
inc
xchg
in
sub
mov
hlt
jge
mov
cmp
mov
push
mov
out
in
(bad)
iret
mov
add
jl
ret
pop
scas
mov
pop
lea
pushf
jnp
mov
jae
xchg
mov
sub
or
lods
cmps
out
stos
lods
push
mov
pop
xchg
in
mov
add
xor
cmp
shr
call
jle
push
into
adc
mov
inc
das
push
arpl
add
data16
add
hlt
sbb
inc
sub
lods
scas
push
push
or
adc
icebp
and
push
xor
adc
pop
lahf
scas
xor
xchg
pop
call
xlat
jbe
mov
jl
call
add
adc
movs
jle
mov
ror
hlt
jg
push
cmp
jo
pop
ror
sahf
push
outs
out
lea
mov
(bad)
jno
jo
call
sub
int3
scas
int
jg
int
call
icebp
or
xchg
pop
pop
call
into
mov
sub
mov
repz
int
iret
adc
and
mov
cmp
aas
inc
ja
and
add
test
push
or
dec
add
jb
out
test
fstp
cmp
mov
and
pop
addr16
call
inc
adc
inc
xor
popf
stc
test
retf
dec
movs
ror
pop
jp
push
test
repz
std
xchg
stos
jecxz
cmp
pop
(bad)
in
popf
pushf
push
push
aam
stos
xchg
fldenv
adc
jp
clc
dec
jnp
xchg
stos
fbld
jge
shl
ret
repnz
mov
sbb
dec
and
mov
mov
mov
mov
rcl
out
fcmovb
sbb
call
sbb
inc
cmp
sub
hlt
cmp
push
or
jnp
inc
or
xchg
fisttp
inc
mov
aaa
jmp
adc
cmps
in
sub
imul
pop
jp
add
daa
fidiv
cmp
dec
or
inc
retf
fld
lds
mov
inc
mov
and
pop
pop
jb
xor
and
jne
or
in
xor
mov
push
rcl
pop
aam
cli
sub
cmp
loopne
jno
mov
and
arpl
cmp
sbb
or
cmp
int
ret
ins
(bad)
scas
test
xor
addr16
ins
adc
jo
xchg
push
dec
test
ins
pop
adc
pop
dec
add
ss
int3
xlat
sbb
push
and
mov
imul
popf
xchg
retf
mov
pop
mov
pop
push
sub
xchg
or
(bad)
aam
fidivr
movs
sbb
xchg
push
les
mov
fst
(bad)
dec
out
out
retf
movs
out
icebp
push
dec
pop
mov
outs
in
pop
lods
imul
xor
icebp
test
lods
mov
add
cmp
sbb
xchg
(bad)
or
clc
retf
jmp
pop
dec
sbb
jo
mov
ror
int3
jp
inc
jmp
mov
push
push
aaa
mov
retf
loop
jo
mov
add
mov
mov
or
adc
dec
xor
or
mov
and
pop
xor
pop
pop
inc
jge
sbb
cmc
push
daa
mov
test
adc
sub
xchg
loopne
push
dec
inc
enter
das
mov
in
ja
xlat
in
sub
xchg
cld
or
data16
das
cs
jno
push
lds
jno
add
call
mov
add
xor
adc
push
mov
pop
cmp
nop
sub
xchg
push
mov
ja
aaa
and
ror
cmc
jae
adc
push
pop
or
ret
es
dec
pop
ins
fwait
xchg
fst
aaa
or
cmp
retf
rcr
cmp
ins
mov
nop
jp
lahf
bound
mov
adc
sub
repz
outs
(bad)
mov
mov
adc
gs
out
cmp
jno
fs
aas
mov
push
xchg
mov
movs
loopne
pop
mov
dec
pop
and
mov
stos
sbb
sbb
xlat
add
shl
sub
pop
xor
mov
(bad)
das
xor
sahf
jae
fwait
std
jbe
and
push
aaa
dec
jmp
sub
sahf
pushf
cmp
mov
add
and
inc
xor
std
test
xchg
sub
and
movs
ror
jl
in
pop
shl
mov
add
ins
dec
mov
icebp
and
dec
jle
pushf
sbb
mov
ret
mov
pop
sti
mov
lods
mov
push
int
fst
cmovbe
jbe
ret
jae
imul
clc
lock
push
push
inc
pusha
xchg
fst
aam
pop
mov
lahf
shl
sbb
xor
(bad)
jns
dec
push
sbb
imul
mov
cmps
cmp
mov
jmp
adc
inc
jb
ret
popf
jno
std
jmp
bound
nop
push
pop
jecxz
aam
shl
mov
pop
or
mov
xor
repz
lds
pusha
inc
in
and
jmp
outs
ja
mov
aad
fidivr
(bad)
xchg
test
push
jmp
xchg
dec
dec
xor
mov
add
inc
mov
dec
cmp
movs
mov
fs
jmp
dec
mov
imul
jae
dec
clc
ret
loopne
xchg
sub
loop
rcl
ins
fdivr
fmul
mov
int3
stos
adc
pushf
xor
bound
and
popf
sbb
ins
loopne
rol
pop
(bad)
test
mov
push
jge
sti
fist
(bad)
call
aam
sbb
mov
jno
ja
aam
addr16
aaa
sub
pop
pop
in
push
xchg
pop
jae
pop
out
leave
jbe
mov
xor
test
stos
(bad)
data16
add
icebp
mov
xchg
jg
mov
ret
xor
fs
ja
shl
cmp
cmp
push
sub
aam
imul
xor
or
add
xchg
popf
ds
loopne
retf
pop
lea
ret
sbb
movs
inc
sub
fwait
outs
sub
xor
xlat
and
bound
push
xchg
mov
pop
cmp
clc
retf
bound
and
stos
mov
daa
ins
ss
mov
pop
lock
sub
mov
retf
into
xchg
dec
mov
push
mov
adc
lahf
movs
shl
sub
(bad)
out
iret
into
aas
cld
je
jae
xor
fistp
les
sub
adc
sub
jns
xchg
dec
(bad)
neg
pop
mov
cmp
ret
sar
loop
mov
adc
sub
push
mov
xor
mov
jmp
mov
jl
mov
and
cmp
fstp
jmp
add
fiadd
dec
iret
out
mov
iret
lahf
rol
xchg
pop
shl
cld
jne
mov
(bad)
jo
mov
or
mov
or
jne
adc
mov
pop
add
and
dec
in
add
pop
dec
cdq
push
dec
sbb
mov
imul
or
and
mov
rcr
(bad)
jmp
popa
mov
mov
mov
popf
inc
dec
jge
mulps
aam
mov
imul
leave
push
mov
push
jmp
or
or
fs
fmul
out
mov
dec
mov
in
imul
and
cld
mov
aad
cmp
das
xchg
mov
adc
xlat
lds
in
fmul
jmp
loop
jecxz
into
lea
jmp
cmp
sub
sub
imul
or
sub
jnp
gs
xchg
xchg
mov
xchg
es
shl
dec
and
sbb
xchg
push
or
outs
and
jl
xchg
ret
out
mov
push
mov
es
and
add
fcom
or
sub
inc
inc
dec
ja
push
adc
push
push
add
mov
aaa
adc
mov
mov
(bad)
sub
call
ins
(bad)
mov
stos
jp
adc
out
mov
xchg
mov
push
repnz
dec
inc
lock
push
xor
pop
in
inc
mov
popf
popf
mov
in
stos
call
jge
mov
inc
ret
or
mov
retf
cs
inc
pop
mov
mov
or
mov
cli
cli
push
xor
mov
sub
pop
cmp
dec
adc
xchg
sub
rcr
fnstenv
dec
fisttp
mov
pop
aas
in
jae
inc
clc
mov
add
fmul
(bad)
push
idiv
jl
bound
(bad)
mov
mov
cmp
lock
bound
jo
icebp
push
pushf
mov
popa
mov
mov
ins
repnz
jle
sbb
mov
jbe
data16
test
jae
out
aas
push
mov
push
jmp
call
mov
sub
repnz
std
bnd
test
ret
loope
daa
ins
cmp
pop
add
jb
add
popf
loopne
out
lds
ret
rcl
pushf
pop
push
cld
cmps
adc
jecxz
cmps
dec
inc
cmp
ds
out
call
adc
sahf
sar
push
or
mov
jno
loop
cmc
sbb
in
ja
ins
or
push
adc
and
adc
inc
pop
loope
mov
add
push
sub
loop
test
push
cmp
jae
inc
(bad)
sbb
pop
psubw
xchg
xor
retf
adc
pop
(bad)
and
push
dec
mov
inc
int3
pop
dec
or
in
mov
mov
push
pop
push
scas
cmp
sbb
jmp
and
lds
in
rcl
sbb
arpl
and
xor
xchg
cmp
inc
pop
popf
sbb
int3
mov
mov
js
into
cmp
add
dec
mov
loope
pop
je
stos
mov
nop
mov
xchg
xor
out
xor
add
icebp
cmp
jno
pop
push
push
out
push
sahf
jecxz
mov
rol
mov
mov
and
(bad)
or
adc
adc
mov
add
ds
jmp
cmp
xor
push
mov
shr
aad
pop
(bad)
sub
sbb
test
ja
ret
mov
aam
stos
lods
push
jl
mov
vpmaddubsw
jmp
pop
pop
stos
loope
xor
sub
and
cmp
int
in
mov
pop
add
or
lea
jmp
jmp
mov
jmp
leave
int
lea
shr
pop
nop
jg
pusha
mov
stc
add
(bad)
adc
test
enter
cmp
cmp
retf
cwde
pop
inc
lds
or
lds
sub
push
mov
in
adc
jmp
xor
iret
push
movs
pushf
call
inc
fst
jle
js
(bad)
(bad)
sub
loop
sub
sub
imul
sub
cmc
ins
popf
adc
cmps
lahf
cmp
addr16
dec
push
lods
sbb
invd
and
xor
movs
mov
int
dec
cdq
rcl
popa
repz
and
daa
sti
test
mov
mov
je
xchg
sbb
rcr
dec
mov
mov
inc
ds
xor
mov
and
in
mov
adc
or
mul
push
cmps
gs
push
sbb
pop
sub
pop
scas
xchg
gs
push
das
shl
xor
call
mov
int
cmp
mov
in
inc
push
or
stc
add
adc
xlat
or
xor
xlat
retf
cmp
in
(bad)
mov
push
cmps
mov
push
outs
xchg
mov
mov
jp
inc
mov
sti
test
dec
pop
jo
jge
mov
adc
call
movs
jno
jg
add
imul
arpl
add
cmps
retf
xor
outs
fstp
movs
jmp
jecxz
jge
shl
push
mov
or
lds
movs
mov
push
jne
cmp
mov
dec
cmp
mov
mov
loopne
push
in
mov
ds
outs
jno
mov
jnp
pop
xchg
dec
scas
scas
dec
das
add
stos
xchg
pop
test
fs
or
daa
mov
push
popf
cmp
or
adc
cli
jecxz
je
mov
cmp
sbb
ficom
ins
add
sbb
jp
gs
sub
mov
dec
daa
fidiv
bound
xchg
cmps
push
(bad)
sub
jmp
mov
jge
jecxz
push
cld
sbb
jecxz
jmp
push
test
test
mov
mov
cmp
jmp
int3
cdq
clc
inc
mov
cmp
(bad)
mov
jmp
pushf
loope
mov
jo
imul
pushf
or
outs
cmovnp
xchg
or
out
add
rol
pop
jo
fst
movs
loop
(bad)
fild
pop
and
mov
adc
lea
pop
js
jmp
ds
fisttp
daa
in
and
leave
xchg
mov
std
inc
push
int3
and
ins
push
ins
(bad)
into
push
and
pop
adc
push
dec
cli
in
push
in
loop
xor
repnz
pop
pop
aam
icebp
call
inc
mov
sbb
mov
push
adc
jo
and
dec
xor
and
arpl
cmp
pop
ins
shl
mov
data16
xor
call
mov
or
or
daa
lods
aam
arpl
movs
or
sub
xchg
or
pop
sbb
push
daa
jnp
outs
ficomp
adc
repz
stos
pop
nop
pushf
sbb
add
clc
call
pop
adc
ret
fwait
xchg
mov
cld
pop
in
stc
dec
cmp
push
dec
je
hlt
fstp
mov
aaa
dec
cmp
pop
movs
in
es
cmp
out
sbb
mov
or
arpl
inc
lods
pop
xchg
mov
enter
push
jmp
mov
mov
shl
add
mov
push
ins
movs
push
xchg
mov
mov
cmp
dec
dec
xchg
inc
(bad)
or
repz
mov
jmp
push
cmp
lods
jne
mov
bound
fdivr
pusha
push
mov
adc
mov
push
addr16
pop
int
test
add
mov
push
addr16
sub
mov
lods
cs
test
enter
xchg
stos
icebp
ins
xor
push
fisubr
xlat
mov
xchg
je
popf
loope
lock
ret
aaa
lock
xor
mov
lods
xor
or
dec
iret
jbe
sbb
loop
lods
mov
shl
dec
jle
pusha
fadd
xchg
ins
and
xor
xor
enter
fs
rcr
add
test
imul
and
sbb
xor
int3
das
js
loope
jmp
cwde
fist
int3
scas
imul
iret
test
sbb
test
lock
or
retf
mov
push
mov
and
repz
xchg
fwait
ret
nop
pop
pushf
or
repz
(bad)
ficom
and
sub
ffreep
dec
push
sar
pop
mov
ds
xor
jbe
outs
pop
inc
xchg
bound
add
push
cli
loope
(bad)
adc
dec
jp
out
sbb
xchg
dec
add
sbb
dec
mov
(bad)
cld
push
mov
dec
xchg
adc
test
sbb
mov
int3
ja
and
push
dec
dec
pop
push
and
mov
cld
adc
movs
in
jbe
and
je
lahf
jecxz
inc
das
cwde
les
stc
test
fstp
aas
lock
cmp
fisttp
pop
hlt
retf
mov
ds
and
xor
adc
icebp
arpl
mov
and
inc
mov
inc
or
jnp
(bad)
jns
adc
(bad)
rcr
jl
mov
add
add
inc
sub
mov
or
aam
and
(bad)
or
cld
lds
sbb
mov
ret
imul
ins
adc
adc
jmp
cdq
inc
pop
out
inc
dec
push
inc
scas
mov
dec
outs
inc
shr
lods
(bad)
out
dec
stos
xchg
push
ret
cmp
repz
imul
out
dec
xchg
out
cmp
fstp
ret
push
and
dec
adc
adc
and
inc
out
fldcw
gs
dec
mov
dec
xor
add
lds
mov
fisub
outs
cmp
lahf
nop
arpl
sbb
arpl
(bad)
jmp
lods
sub
mov
in
mov
ins
scas
scas
sbb
rol
imul
cwde
pop
mov
mov
mov
mov
stc
frstor
sub
xchg
jmp
fisub
aaa
or
es
xor
je
inc
xor
pop
add
psrlq
iret
inc
cs
test
inc
repnz
data16
ins
sbb
loopne
jmp
jo
movs
push
imul
out
test
xor
clc
pop
sub
mov
inc
fidiv
popf
test
jmp
mov
je
pushf
scas
dec
mov
push
movs
(bad)
jae
mov
loope
dec
jle
jae
pop
cmp
pop
bound
mov
sahf
mov
inc
cmp
arpl
xchg
cwde
mov
ins
jae
sbb
mov
movs
mov
pop
jmp
pop
lods
addr16
and
cdq
mov
push
cmc
and
pop
in
push
lods
push
imul
xor
bound
cmps
mov
or
sar
xlat
xchg
mov
lods
jbe
mov
jg
(bad)
stc
xchg
mov
pop
(bad)
les
add
sahf
mov
arpl
mov
xchg
adc
loop
inc
push
add
outs
cmp
cmp
jns
dec
inc
mov
xor
or
xchg
aaa
lods
hlt
pushf
(bad)
ret
ins
add
rcl
fsub
gs
cmps
mov
sub
xor
mov
cmp
mov
aaa
xchg
jne
lock
cdq
or
and
sbb
sbb
mov
(bad)
pusha
mov
and
pop
fdiv
xchg
sub
mov
sub
cmp
sbb
xchg
sbb
ficomp
dec
mov
pushf
outs
add
or
dec
clc
xor
test
mov
nop
loopne
dec
loopne
ror
and
add
fisttp
and
add
out
jecxz
std
sub
cmp
push
jo
lods
mov
dec
and
lods
stc
or
stos
pop
dec
retf
clc
xchg
loop
retf
push
ins
mov
(bad)
inc
popf
mov
dec
xchg
jmp
sub
loop
or
scas
loop
(bad)
jl
push
add
xchg
arpl
xchg
inc
add
push
cs
adc
mov
cld
xchg
cmp
dec
bound
add
cmp
stos
pop
repnz
xor
mov
cmp
mov
ret
xor
pop
inc
shr
hlt
(bad)
sub
push
cmps
test
push
aam
mov
jo
ds
std
ror
push
inc
arpl
fadd
or
mov
fst
dec
xchg
rcl
sub
add
stc
rcr
rcl
hlt
data16
cmp
mov
into
(bad)
addr16
fsubr
jmp
adc
mov
mov
fsub
inc
pop
bound
mov
shl
jae
nop
js
in
aad
shl
xchg
push
jmp
sub
and
xchg
or
test
paddq
cld
fs
aas
xchg
push
in
mov
lahf
jne
pushf
daa
fiadd
loop
hlt
fnstsw
pop
pushf
dec
data16
mov
jne
lods
adc
into
sahf
packsswb
ret
stc
sub
ror
imul
cld
and
jbe
pushf
jge
add
mov
hlt
ret
aas
push
ficomp
adc
dec
mov
and
pop
inc
adc
cmp
xchg
mov
aaa
scas
dec
cmps
cdq
imul
lods
add
pop
(bad)
fsub
push
icebp
cmp
dec
sub
lea
popa
jb
in
pop
and
mov
out
push
aam
mov
inc
sub
in
jb
imul
out
(bad)
mov
xchg
mov
ja
cdq
les
or
jle
call
jg
div
ja
jl
mov
pop
bswap
rcr
sub
pop
and
xchg
mov
(bad)
(bad)
retf
push
jb
cmps
sub
icebp
lods
(bad)
jg
popf
cld
or
loop
mov
addr16
pop
pushf
sbb
add
jmp
add
fwait
cmps
retf
loopne
fs
das
out
mov
sub
cmc
or
jns
pop
jne
xchg
and
retf
sub
pop
mov
jnp
jg
inc
es
dec
push
pusha
fidiv
add
gs
cmps
sub
leave
mov
sbb
das
xor
mov
stos
sub
push
jge
cmp
inc
test
jns
or
dec
ror
jl
stos
mov
ret
out
inc
jne
add
aad
xchg
or
push
(bad)
sbb
lahf
inc
ins
or
in
pop
or
mov
ss
outs
lods
sub
je
push
xor
mov
and
enter
xchg
inc
adc
loopne
push
bound
cdq
popf
sub
iret
lods
push
(bad)
rol
jp
arpl
daa
add
icebp
jae
lock
sub
int
test
dec
and
mov
sub
cmps
dec
iret
call
push
ret
add
pop
push
mov
xchg
in
push
push
rcl
sbb
pop
mov
call
leave
mov
outs
adc
arpl
popa
(bad)
in
pushf
and
(bad)
fidiv
fldenv
clc
lds
jp
sbb
ja
mov
(bad)
(bad)
xor
lock
fsubrp
add
int
cmp
sbb
mov
sub
mov
mov
cmp
arpl
xchg
(bad)
sar
mov
mov
lods
sub
xlat
loope
je
test
sub
push
dec
jnp
mov
(bad)
sti
movs
jmpw
jb
cld
mov
data16
loopne
jnp
fadd
stos
aam
fisttp
sar
inc
repz
stc
pop
or
(bad)
mov
sbb
rcl
popf
jno
nop
inc
cmp
fiadd
nop
fs
push
xor
imul
(bad)
and
jo
jmp
mov
(bad)
rol
and
mov
int3
ss
lods
test
push
sub
cmps
je
mov
nop
jne
inc
jmp
xchg
lods
std
clc
jno
inc
fst
sub
popf
dec
fwait
(bad)
out
loope
scas
cld
aaa
cli
fs
fcom
scas
fwait
xchg
retf
sbb
loop
in
ins
pusha
inc
popf
fstp
dec
cmp
or
or
das
les
mov
ds
cmp
xchg
fidiv
(bad)
shl
mov
mov
out
pop
dec
dec
je
xchg
gs
sub
call
and
mov
dec
mov
sti
outs
cmp
rcr
xchg
nop
lods
jo
rol
pop
jne
ins
inc
xchg
add
push
mov
enter
test
cmp
push
or
ffreep
icebp
test
cmp
jb
sub
stc
fadd
dec
cmp
mov
cmp
in
dec
mov
add
jo
outs
sub
pop
in
mov
std
add
cli
addr16
sbb
mov
and
jne
sbb
xchg
cmp
cmp
dec
mov
sbb
push
xchg
push
jmp
(bad)
icebp
movs
or
mov
pop
cs
and
loop
xor
or
mov
arpl
jno
xchg
jnp
mov
jl
outs
push
push
push
mov
add
mov
clc
xor
and
xor
inc
fbld
push
ficom
mov
or
leave
cmp
or
lods
and
int3
int
xor
jbe
inc
test
clc
fdivr
jl
dec
out
or
stos
push
repz
ds
cwde
xchg
mov
je
or
cmp
call
xor
clc
pop
fxch
adc
cwde
sub
test
adc
xchg
or
sbb
imul
test
popf
dec
ins
stos
xchg
add
aam
pop
xchg
jle
inc
mov
xchg
jb
pop
cli
and
gs
jecxz
fimul
test
daa
jl
in
push
xor
(bad)
scas
ja
cwde
dec
add
pop
loope
adc
push
adc
fwait
xchg
ins
movs
adc
popa
mov
fidivr
or
mov
cmp
psraw
cmp
cmc
outs
ret
je
clc
ror
pop
cmp
ins
jge
or
sub
xchg
lea
gs
add
inc
pop
adc
jge
in
jne
icebp
mov
push
frstor
xchg
mov
arpl
cmp
sub
mov
add
out
push
je
aam
imul
xchg
add
jl
test
inc
pop
mov
popw
popa
dec
jno
test
ror
sub
enter
cmc
push
fsubr
push
in
mov
lock
cmp
sar
xchg
pop
mov
and
(bad)
xchg
push
xchg
or
repnz
test
loop
cmps
mov
jns
movs
inc
dec
ss
stos
loope
mov
call
fwait
inc
fst
xor
pop
loop
loopne
dec
pop
push
xchg
data16
xchg
sub
daa
sbb
movntps
mov
shr
jnp
pop
std
mov
fwait
pop
int3
inc
enter
fwait
and
pop
ret
jmp
stos
fnsetpm(287
imul
fist
dec
mov
out
mov
fcomp
and
adc
je
leave
sub
dec
sub
mov
repnz
xchg
xchg
mov
in
sbb
shl
jb
fiadd
jecxz
scas
cli
push
push
test
push
dec
push
jo
mov
cwde
icebp
pop
sbb
cmps
or
sub
es
xchg
mov
test
imul
retf
lods
int3
dec
cmp
icebp
push
adc
(bad)
les
inc
jecxz
loope
fcom
push
mov
adc
mov
daa
xchg
push
bound
cmp
hlt
mov
nop
xchg
loope
inc
adc
add
lods
lods
cmp
pop
fadd
clc
rcl
enter
test
sub
cld
sub
stos
data16
adc
out
movs
movs
push
enter
(bad)
inc
scas
lds
std
add
jg
bnd
cdq
pop
add
pop
jp
in
je
push
sbb
cmp
ss
push
add
rcr
cmp
jp
cld
aaa
xchg
mov
mov
adc
push
scas
neg
call
(bad)
mov
mov
jne
pop
cwde
add
push
mov
test
pop
hlt
jae
dec
mov
rol
aad
ret
push
lea
and
add
push
mov
out
push
sbb
in
mov
sbb
aam
sub
mov
sbb
cmps
mov
cli
loopne
fist
push
jbe
(bad)
and
jno
in
js
fst
cmps
arpl
push
or
icebp
sub
mov
inc
std
sbb
imul
pop
shr
adc
push
cdq
xchg
add
jne
dec
add
ret
dec
loopne
cdq
shl
das
mov
mov
push
cmp
arpl
mov
cwde
cs
repz
add
stos
jecxz
adc
mov
(bad)
data16
aad
push
xor
retf
mov
test
mov
rcl
fistp
push
lods
jp
bound
xor
mov
rcl
nop
sbb
std
or
das
ja
pop
ds
mov
out
cmps
jg
icebp
cwde
push
or
pop
dec
sub
sbb
inc
jg
dec
push
xor
out
test
or
cld
xchg
sbb
xbegin
mov
mov
dec
popf
inc
mov
gs
xchg
push
xchg
lahf
sbb
ret
aaa
jmp
mov
push
add
adc
jmp
jp
ret
movs
xlat
or
and
dec
out
xor
mov
xor
and
mov
pop
in
or
jb
rdtsc
mov
cmp
or
addr16
xlat
xlat
jg
mov
dec
lea
(bad)
imul
sbb
popf
repz
xor
mov
jne
inc
sub
jo
mov
cmps
fsub
push
mov
arpl
cmps
ror
fxch
das
cld
cmp
inc
mov
xchg
sbb
mov
inc
cmc
inc
and
dec
mov
into
in
sti
adc
mov
cmp
loope
dec
jecxz
mov
mov
div
dec
lahf
xchg
gs
cs
mov
push
jg
repz
sbb
add
sbb
retf
out
mov
inc
pop
pop
jno
xchg
jg
fisubr
and
stos
bound
cmp
frstor
imul
loop
repnz
sbb
dec
pop
mov
call
iret
ret
xlat
(bad)
js
jb
call
pop
pusha
mov
cmp
mov
rcl
dec
js
jp
push
xor
xlat
pusha
push
rcl
adc
mov
push
add
ficomp
dec
in
push
dec
test
(bad)
pop
push
aad
sbb
out
or
aam
xlat
or
sar
mov
push
pop
push
sub
mov
mov
test
pusha
test
loopne
mov
rcr
adc
push
test
ins
add
fimul
jb
jecxz
and
adc
and
stos
sub
mov
mov
mul
lds
inc
sbb
sub
arpl
clc
xchg
not
gs
push
add
pop
or
add
push
push
das
rcr
jecxz
adc
imul
mov
fsub
xchg
jecxz
cmp
pop
pop
(bad)
lock
pop
loope
ss
addr16
popf
cmp
ins
mov
mov
test
and
sbb
xor
sbb
pop
shl
cmp
stc
mov
imul
xchg
ret
cmp
sbb
jle
mov
mov
lock
cmps
movs
imul
mov
movs
sbb
in
pop
xchg
xchg
popa
cmps
dec
add
jbe
pop
cld
inc
pop
stos
sub
hlt
add
shl
(bad)
mov
and
pop
jle
xor
or
lds
(bad)
xchg
(bad)
dec
sbb
jl
call
dec
cmp
sbb
add
ja
cmp
and
sbb
hlt
mov
pop
adc
stos
ret
stos
jns
mov
inc
inc
outs
mov
test
leave
fnsave
shr
(bad)
push
sahf
shr
cmp
pop
pushf
adc
sbb
outs
lahf
fsubr
fcmove
cmp
mov
add
and
div
loop
sub
xor
sbb
arpl
in
add
adc
addr16
sub
cmp
leave
lds
push
cmp
xor
cmp
scas
add
mov
and
jge
mov
retf
shl
shr
gs
test
sub
sti
xchg
bound
mov
push
sub
scas
stos
push
int3
xor
mov
(bad)
arpl
sbb
lods
movs
add
cs
xor
out
mov
dec
jb
xor
xchg
scas
xor
shr
or
sahf
add
retf
scas
fmul
lahf
push
fwait
push
(bad)
sbb
or
or
xchg
dec
daa
xchg
nop
cmp
mov
(bad)
jle
pop
or
sahf
dec
lods
jbe
repz
int
jmp
pxor
push
cli
xchg
and
pop
fstp
inc
fdivr
pop
pop
data16
retf
mov
or
les
sahf
jg
adc
int3
imul
bound
ror
inc
xlat
outs
call
mov
cmp
mov
das
retf
adc
mov
in
mov
(bad)
pop
or
cmp
call
sbb
das
pcmpgtw
or
movs
add
pop
push
sub
adc
push
sbb
xchg
adc
(bad)
popf
pop
mov
add
mov
lahf
mov
out
push
jno
jne
mov
pusha
sub
inc
das
test
daa
sti
mov
cmp
out
popf
pusha
jmp
sub
xchg
pop
jbe
push
inc
sbb
push
daa
imul
stc
jnp
ret
xchg
nop
mov
leave
(bad)
fstp
jo
(bad)
add
xchg
out
cmp
rep
mov
add
add
sbb
movs
adc
add
inc
frstor
mov
inc
xchg
ins
dec
xchg
push
hlt
dec
int
adc
dec
adc
mov
cmp
inc
repnz
adc
push
das
or
add
sbb
pop
cmp
loope
jp
cmps
ins
ins
mul
data16
(bad)
pop
xor
jne
aas
adc
add
jge
bswap
push
pop
inc
int3
inc
imul
pop
cmps
mov
adc
push
and
ins
std
adc
rcr
cmp
mov
mov
inc
sub
ror
sub
sub
psubq
mov
mov
out
push
or
scas
adc
push
pop
sti
cmc
popa
test
push
int
inc
pop
mov
and
paddusw
cmp
mov
pop
div
inc
test
cmps
pop
and
arpl
mov
test
push
lahf
shr
push
push
enter
daa
out
jecxz
pop
inc
daa
push
mov
lock
adc
gs
pop
lea
adc
popf
in
jns
xchg
mov
movs
inc
and
test
mov
bound
into
rcr
push
and
add
push
push
xor
mov
mov
and
mov
int
pop
sub
mov
rcr
jle
pop
mov
dec
push
sub
addr16
lahf
and
pop
pusha
movs
push
push
mov
adc
test
cmp
call
add
test
and
test
aaa
les
cmp
shl
gs
pop
dec
out
push
gs
jnp
pop
aad
adc
inc
xor
xchg
lds
dec
dec
mov
mov
aad
jae
fstp
pop
mov
inc
sub
gs
pop
xchg
jge
es
pop
and
mov
jo
shl
call
pop
mov
push
mov
(bad)
jb
inc
cmp
lods
scas
call
shl
inc
fimul
mov
(bad)
push
inc
into
nop
mov
mov
xor
jbe
scas
loop
test
add
add
aas
xchg
fbstp
cmp
scas
inc
cwde
cdq
sti
pop
cmp
push
out
lods
sbb
sbb
inc
mov
ret
lods
push
cmp
sbb
mov
out
mov
dec
fs
mov
cmp
adc
and
adc
inc
in
cmp
cdq
cwde
inc
ficom
jmp
inc
or
and
into
sbb
iret
xchg
gs
mov
mov
sbb
std
div
scas
test
inc
adc
leave
xchg
idiv
jge
popf
mov
inc
loope
jmp
add
inc
(bad)
xchg
jmp
(bad)
call
and
aad
xchg
rcl
xchg
ret
add
fild
mov
mov
test
gs
icebp
lods
xchg
dec
pushf
icebp
and
(bad)
push
push
adc
mov
jb
fmul
push
jmp
xchg
movs
std
push
and
and
mov
scas
mov
push
cld
adc
stos
call
test
mov
pop
call
jg
js
push
clc
outs
xor
cli
call
(bad)
sar
or
loopne
sbb
mov
js
stos
js
mov
dec
jb
icebp
xor
sbb
clc
cmc
pop
and
inc
inc
mov
cmp
mov
sub
ss
inc
cmp
or
cmp
cmps
xor
dec
iret
jp
test
jle
push
loopne
sbb
pushf
sub
imul
xor
xor
mov
aaa
sbb
xor
popf
inc
xchg
mov
pushf
jl
in
sub
pop
lea
ins
out
and
pop
lds
das
inc
xchg
jp
mov
sbb
jg
mov
not
or
out
and
es
lea
inc
jae
outs
inc
ds
mov
jbe
inc
jae
scas
push
dec
cmp
inc
adc
in
xchg
jl
mov
pop
repnz
push
mov
pop
inc
jo
sbb
int
adc
aas
add
test
push
mov
fwait
repnz
pop
mov
xchg
ja
jge
inc
mov
sbb
jns
jg
(bad)
xchg
pop
(bad)
jg
mov
pusha
mov
pop
adc
aas
push
aas
std
push
xchg
movs
xor
and
jg
inc
call
or
test
nop
dec
in
std
call
ja
ror
ret
adc
fisttp
jno
cli
and
add
cmp
shl
test
cmp
push
adc
cmc
enter
sub
loop
mov
cmovge
push
xlat
push
adc
test
push
call
sub
lock
call
jecxz
loop
nop
add
jge
dec
aaa
arpl
push
and
pop
mov
fdivr
mov
add
add
cmps
retf
inc
lea
neg
jmp
pop
icebp
push
mov
fnsave
jne
push
(bad)
inc
jb
mov
shl
inc
xor
shr
in
add
inc
xchg
inc
xor
gs
pop
xchg
push
fistp
popa
aam
sbb
sbb
jg
or
addr16
pop
dec
mov
rcr
jbe
pop
add
mov
and
jl
fbld
adc
sub
pop
inc
push
sub
and
jl
bound
ror
(bad)
daa
sbb
xchg
adc
mov
fwait
popf
int3
in
push
out
jb
int
icebp
mov
add
cs
shr
and
enter
dec
fs
mov
push
mov
sub
push
xor
out
cmc
mov
xchg
fisttp
add
xor
mov
fwait
and
test
sub
push
cs
loope
mov
push
push
dec
mov
rcl
jns
rcr
inc
loop
pop
lods
push
inc
push
mov
and
mov
iret
dec
jl
inc
mov
out
pop
stos
and
sub
dec
stos
(bad)
dec
js
aam
ret
jg
inc
outs
dec
gs
mov
cmp
push
and
scas
fbstp
ins
cli
xchg
sbb
mov
dec
inc
lea
gs
gs
add
mov
inc
test
xor
xchg
stos
inc
pushf
mov
sahf
mov
aam
jg
sbb
mov
mov
sti
cmp
loop
mov
gs
push
fisubr
xchg
add
into
movs
cmp
out
or
inc
movs
and
dec
and
in
push
pop
sbb
mov
or
sub
(bad)
fdiv
and
in
cmp
scas
push
pop
dec
call
and
lock
dec
daa
inc
xor
cs
push
adc
mov
stos
push
stos
imul
cwde
xor
add
mov
dec
shr
les
repz
pop
sub
sub
jbe
xchg
jmp
popa
xor
jp
cmps
jns
enter
das
out
push
pop
aas
(bad)
fldenv
jp
cmp
sbb
mov
inc
sbb
jl
sub
cmps
dec
jbe
inc
mov
sub
out
cmp
fcmovnbe
mov
lock
aad
leave
adc
jne
push
call
inc
cmp
mov
mov
xchg
in
xor
outs
(bad)
push
mov
iret
dec
sbb
mov
loope
into
scas
call
pop
jmp
out
stos
not
test
das
inc
popf
jb
jmp
cmp
stos
fs
pop
or
(bad)
enter
pushf
mov
js
jnp
repnz
gs
lahf
xchg
push
fistp
dec
mov
push
and
add
in
xchg
sub
out
push
jecxz
push
add
push
or
mov
inc
fsub
jge
and
pop
out
cli
fldenv
ret
mov
call
mov
dec
das
std
mov
mov
xchg
pop
xchg
lods
xchg
xchg
std
jno
jnp
push
ins
repz
ror
int
(bad)
inc
push
pop
sbb
shl
jnp
stos
push
loope
dec
push
adc
or
stc
mov
push
xor
shl
loop
inc
sbb
fwait
sbb
add
mov
jb
or
test
test
mov
adc
mov
out
es
fs
jle
cdq
mov
inc
(bad)
out
sub
ror
je
push
mov
es
jp
mov
test
sbb
mov
pop
xor
call
lds
sbb
add
cmc
xchg
loop
sbb
enter
sub
push
stc
pop
imul
pop
dec
outs
sbb
pop
cmc
in
cmp
(bad)
push
retf
test
repnz
dec
add
sahf
test
sbb
arpl
mov
mov
dec
and
fisub
repnz
(bad)
or
push
jbe
stos
stc
pop
enter
push
inc
fcmovnbe
cwde
popa
icebp
scas
xchg
adc
inc
loop
sbb
xlat
clc
cmc
jg
icebp
rcl
jl
inc
lea
and
and
sbb
(bad)
inc
push
push
daa
jno
(bad)
retf
pushf
sbb
out
pop
cmp
cmp
push
in
add
inc
jo
push
push
push
pop
jge
loope
xchg
cli
lods
outs
and
out
outs
loopne
mov
call
jbe
ins
int
repz
and
ror
cmps
jae
sub
rol
int
scas
aas
in
xlat
sahf
nop
rsm
aad
and
mov
in
or
daa
retf
jmp
jge
lea
mov
xor
icebp
pushf
push
shl
ds
jg
out
xor
adc
int3
iret
enter
pop
add
or
sbb
mov
dec
and
mov
pop
xchg
fmul
sbb
or
call
repz
rcl
sti
mov
loope
sbb
jnp
daa
dec
sti
and
in
out
aas
sahf
jo
inc
sbb
xchg
dec
dec
mov
std
fcom
lea
sbb
fiadd
add
sub
je
lgs
fadd
ss
inc
sbb
sbb
inc
mov
(bad)
mov
dec
pop
sti
pop
aas
jne
jbe
ss
sub
push
cmp
and
lea
pop
mov
inc
adc
das
mov
mov
mov
daa
jno
in
mov
jb
mov
stc
add
push
in
(bad)
jecxz
daa
sbb
push
cdq
and
xor
pop
inc
mov
rol
fisttp
adc
sti
adc
push
cmc
or
pop
pop
and
add
fst
mul
pop
mov
in
and
push
inc
ins
dec
ds
sbb
sub
push
xlat
shl
cmp
add
push
scas
dec
jp
pop
scas
jmp
shl
push
fwait
loopne
clc
mov
adc
loope
in
jae
sbb
stc
jae
mov
aas
adc
push
adc
or
sti
sbb
lahf
xor
scas
mov
xor
or
add
xor
fistp
xor
sahf
xchg
pop
enter
adc
push
push
cmp
jmp
aam
stc
jne
dec
jb
(bad)
stc
jle
ret
aad
mov
inc
dec
(bad)
sub
mov
add
nop
in
pop
jo
sbb
xor
addr16
fdivr
lock
arpl
mov
es
push
inc
pop
movs
(bad)
sub
shl
shl
mov
pop
jns
bound
call
push
out
sar
sbb
adc
retf
hlt
aas
and
pop
push
or
inc
mov
mov
(bad)
les
sahf
add
and
cli
(bad)
int
mov
dec
test
imul
fst
int3
cdq
jo
imul
xor
push
inc
callw
leave
je
popa
add
cdq
or
std
popf
xlat
shl
cmp
lea
test
cmp
mov
cli
into
cmp
loop
inc
pop
(bad)
fdivr
js
adc
xchg
cmp
into
cwde
cmp
ins
pmovmskb
sub
jecxz
nop
js
push
push
in
inc
mov
shr
imul
fadd
stos
in
mov
push
or
pop
sub
call
in
sti
cs
mov
push
lahf
add
or
lock
lock
xchg
daa
push
ret
test
sbb
rol
icebp
xchg
or
test
std
stos
(bad)
cs
mov
pop
push
or
jns
aad
jp
mov
enter
aaa
push
sbb
sbb
dec
(bad)
(bad)
push
adc
lock
mov
lahf
loopne
and
loope
bound
push
test
test
mov
pop
test
stos
push
mov
push
jmp
mov
cld
daa
or
mov
scas
scas
or
mov
mov
mov
xchg
push
mov
pop
shl
add
sbb
clc
dec
in
xor
xchg
out
cmp
shl
push
ror
jecxz
leave
sub
popa
xchg
popf
ret
jp
retf
or
outs
idiv
(bad)
push
inc
jl
xlat
sbb
xlat
jne
push
or
xchg
lods
stos
inc
mov
xlat
out
xchg
cmovs
fdiv
add
call
sbb
adc
addr16
icebp
(bad)
in
mov
pop
sub
js
add
loopne
fnsave
cmp
inc
mov
fmul
push
out
aad
pop
popa
lahf
jnp
dec
push
mov
movs
out
add
pop
add
xor
int
aas
cmp
sahf
and
cmp
xor
or
rcl
fstp
mov
add
lods
stos
fs
scas
adc
nop
test
in
jo
xor
and
mov
stos
sub
movs
mov
xor
ror
fisubr
icebp
sbb
ins
and
jne
jne
in
pop
jne
push
int
(bad)
mov
test
aas
loopne
fnstsw
inc
mov
pop
cmp
fstp
add
xor
clc
mov
xchg
cmc
fdiv
(bad)
hlt
cwde
iret
ss
xor
rcl
pop
inc
pop
loopne
add
pop
cmp
push
xor
fstp
add
lock
push
lods
shl
xor
(bad)
adc
cs
aaa
push
in
mov
adc
fcomp
in
stos
push
sub
mov
sub
ins
xor
mov
outs
add
bound
jno
sbb
les
pushf
and
cmp
les
or
xchg
or
les
dec
mov
pusha
in
popa
sub
xor
jle
or
(bad)
adc
test
scas
pop
mov
dec
dec
dec
loope
push
ins
mov
rcl
clc
pop
adc
sbb
or
sub
and
addr16
movs
(bad)
jns
and
and
xchg
sbb
add
dec
mov
movs
mov
bound
jb
dec
pop
in
mov
mov
pop
xchg
sub
sbb
ja
xor
xor
pop
push
cmc
jle
cli
inc
(bad)
mov
aas
jmp
fdivr
jg
push
inc
jle
jne
jl
lea
cmc
sub
cmp
in
xor
or
sub
xor
das
int
adc
jbe
adc
push
out
push
xor
xor
jp
enter
xor
outs
sub
sbb
cdq
in
cwde
lods
call
test
(bad)
retf
or
jmp
and
sbb
sbb
inc
das
jnp
push
mov
out
rcl
call
leave
clc
icebp
imul
addr16
sub
cmc
jne
js
retf
sub
call
adc
arpl
xor
cmp
cwde
aam
inc
xor
and
jmp
pop
adc
lock
mov
loopne
pop
mov
mov
repz
lds
xchg
stos
(bad)
xchg
adc
push
scas
pushf
call
inc
cmps
retf
ret
(bad)
into
fimul
mov
lods
xchg
jg
jmp
int
cmp
xchg
inc
cmp
(bad)
mov
(bad)
popa
call
jmp
jl
mov
mov
sahf
pop
cmps
push
adc
mov
pop
sub
lds
fdivr
dec
cmc
repz
addr16
lods
(bad)
(bad)
(bad)
nop
lock
mov
mov
movs
shr
pop
jns
fst
sar
gs
enter
int
std
mov
mov
(bad)
in
repz
movs
xor
mov
sahf
call
fmul
fnstcw
test
aam
js
sub
sub
loope
xchg
dec
lahf
imul
test
aam
xchg
leave
clc
movs
jmp
dec
icebp
(bad)
xchg
push
push
call
out
scas
out
mov
mov
dec
(bad)
(bad)
adc
mov
dec
push
inc
add
xchg
inc
test
mov
mov
adc
test
pop
push
cmps
jmp
and
xor
out
or
or
fs
out
repz
push
sahf
sub
jmp
and
and
cld
iret
or
int3
popf
or
fbstp
out
ret
mov
sbb
fcmove
jl
test
movs
push
ja
mov
mov
mov
jle
mov
mov
push
inc
adc
(bad)
adc
mov
lds
push
push
adc
dec
retf
and
js
mov
(bad)
mov
movs
aas
xor
xchg
es
in
mov
sub
cmps
ins
in
mov
cmp
inc
cs
pop
or
in
sub
rol
enter
imul
add
push
sbb
scas
push
js
fsubr
inc
jo
xlat
pop
fild
cmps
call
xor
lods
icebp
and
repnz
jmp
mov
xor
pop
add
psubusw
ficomp
stos
test
mov
lds
jno
int3
fisttp
js
outs
test
ret
fld
inc
cmp
jo
scas
inc
add
fwait
push
cmp
xchg
dec
inc
in
call
lods
repz
(bad)
sub
sub
clc
or
fs
das
xor
gs
or
call
in
mov
xor
shr
loop
push
call
mov
jge
pusha
xchg
xlat
cmp
adc
loopne
jge
mov
adc
or
dec
sahf
mov
inc
pop
xchg
and
xor
push
sub
mov
jbe
inc
pusha
sub
repnz
in
sub
lods
hlt
test
in
cmp
and
mov
and
jmp
mov
scas
aad
outs
jbe
dec
dec
push
jae
imul
mov
mov
xor
(bad)
into
loop
xchg
je
sbb
adc
pop
and
(bad)
loope
xlat
jmp
pop
outs
pop
int3
repnz
mov
pop
or
xor
stc
sub
and
inc
pop
and
xor
movs
test
hlt
or
in
push
sub
mov
inc
dec
lea
jmp
in
pop
mov
or
sbb
push
xor
fstp
mov
mov
lea
in
jmp
xchg
jg
cmp
rol
add
dec
ret
and
mov
daa
or
dec
cmp
sub
push
jl
push
loopne
rcr
jnp
(bad)
out
jns
mov
loop
aad
retf
mov
(bad)
clc
rcr
out
cmps
ja
out
mov
leave
test
js
pushf
cmp
jmp
and
jmp
sar
jg
sbb
inc
mov
fsubr
jecxz
ja
inc
jmp
es
call
jg
rol
and
pop
pushf
add
xor
mov
or
jne
jb
imul
lahf
rol
pop
pop
out
ins
das
dec
(bad)
jae
and
fidivr
jnp
push
dec
mov
loop
push
push
cmps
mov
jecxz
inc
daa
popa
push
or
fs
push
retf
sbb
ret
pop
les
sbb
mov
push
sub
or
(bad)
push
(bad)
jecxz
retf
test
add
test
xor
fiadd
int3
out
scas
pop
xchg
out
je
push
loope
ds
mov
xor
ss
out
inc
add
mov
scas
stos
outs
add
int
bound
lods
ror
mov
jmp
std
imul
into
lods
mov
call
jns
scas
aad
or
xchg
test
dec
in
dec
push
test
mov
stos
jns
push
dec
ret
out
mov
repnz
mov
xchg
outs
mov
dec
sbb
mov
sub
outs
ror
lock
popaw
cmps
cmp
push
jmp
dec
cwde
cwde
xchg
fidivr
add
push
xchg
xchg
or
inc
fisub
mov
mov
out
and
popa
scas
adc
dec
ins
mov
shl
ins
(bad)
iret
pop
jg
stos
fimul
push
fild
mov
bound
add
inc
sub
clc
test
(bad)
mov
imul
scas
shl
pop
mov
imul
cmp
or
mov
xor
loopne
cwde
in
dec
(bad)
(bad)
rcr
aas
loope
js
push
(bad)
dec
adc
adc
repnz
xchg
pop
push
add
test
nop
sahf
icebp
or
fimul
mov
add
fmul
pop
dec
or
pop
sbb
arpl
and
(bad)
in
cmp
jmp
dec
adc
jl
dec
mov
sub
ret
nop
cld
mov
mov
inc
mov
cmp
xor
ins
or
fadd
and
mov
imul
push
shl
pop
or
jp
cmp
xchg
out
push
mov
xor
push
xchg
pop
jbe
dec
mov
out
neg
cmp
cmps
add
pusha
sub
cmp
jg
adc
pop
test
imul
clc
fsub
xchg
lea
mov
sbb
and
jo
cmps
pop
inc
xchg
inc
test
shl
mov
push
dec
imul
adc
cs
hlt
xchg
bound
pop
mov
ficom
outs
inc
in
push
popf
ds
cmp
add
add
inc
dec
cmp
sbb
nop
push
push
push
in
mov
ds
cmps
mov
add
lahf
aaa
data16
mov
retf
fdivr
jge
jo
jnp
mov
shr
and
cmp
in
xchg
xchg
pop
retf
test
push
or
loopne
cld
jbe
pop
jne
iret
add
pop
jmp
outs
mov
rcl
repz
push
xor
daa
sub
dec
adc
or
mov
test
xchg
fistp
or
jg
(bad)
imul
data16
and
and
xchg
(bad)
in
shl
test
out
or
sahf
pop
hlt
dec
cmp
dec
sbb
inc
addr16
push
stos
push
neg
loop
fdecstp
fnstsw
das
lock
cmp
sahf
retf
inc
pop
xor
nop
call
shr
sar
mov
mov
push
in
fild
adc
js
loopne
sub
ss
push
xchg
pusha
xor
or
test
call
and
rcl
int3
mov
mov
jb
push
pop
out
push
ret
adc
add
mov
(bad)
lods
test
cmp
adc
push
xchg
and
inc
imul
jb
clc
pop
push
jno
je
std
and
call
ins
sub
mov
fsub
add
inc
loop
sbb
jbe
and
jge
xchg
sbb
cmc
rcr
mov
jno
cmp
push
jge
dec
scas
mov
inc
adc
leave
fdivr
cmp
cwde
repz
hlt
aaa
cmp
movs
test
popf
or
fist
nop
mov
mov
lahf
jo
rcl
lock
xor
nop
dec
jle
sub
pushf
cmp
push
retf
xor
sbb
ds
and
add
stc
pop
aam
adc
mov
push
jmp
aam
push
cmp
jmp
cmp
xlat
sbb
bound
cmc
push
int3
div
movs
cmp
cmps
xchg
ja
mov
inc
jmp
inc
inc
xchg
aas
mov
adc
popf
(bad)
popa
push
add
push
mov
lods
mov
cwde
pushf
jmp
lods
in
frstor
out
or
push
push
mov
repz
and
inc
les
pop
dec
xchg
lahf
pop
cmp
call
cdq
sub
pusha
sar
jl
aas
xor
dec
sar
xor
push
vpsubq
popf
mov
jg
les
sbb
imul
data16
lods
ja
test
ret
mov
jmp
fwait
pop
cmp
pop
mov
daa
jecxz
in
fidiv
mov
mov
sbb
ja
pop
fisub
pxor
add
loopne
mov
cld
int
push
outs
push
inc
jbe
shl
dec
mov
ja
add
imul
ret
(bad)
test
mov
push
stos
int
jge
pop
dec
xchg
(bad)
xchg
loop
jmp
push
(bad)
(bad)
mov
test
fwait
scas
jae
and
into
(bad)
mov
add
pop
dec
mov
or
test
call
mov
out
ret
scas
jo
or
cmc
mov
cmp
jb
jbe
jg
gs
pop
(bad)
mov
clc
mov
fsub
push
xchg
repz
pop
fistp
fsubr
stos
pop
jmp
inc
cmp
les
dec
mov
inc
sbb
aaa
(bad)
mul
jnp
adc
or
aaa
sbb
cmp
cmp
in
sub
shl
mov
xor
fisub
inc
shl
aaa
fnstcw
jle
and
mul
adc
sub
mov
in
and
arpl
mov
xchg
xor
fdiv
push
lea
jo
arpl
ja
cdq
aaa
xor
add
xor
add
movs
mov
mov
inc
iret
mov
add
out
sub
and
das
inc
ret
sub
fiadd
push
cmp
push
inc
cwde
jno
xchg
stos
(bad)
jne
pop
sub
and
xlat
push
adc
jb
sbb
xchg
cli
push
aad
push
dec
movs
call
mov
imul
mov
sbb
movs
add
ret
mov
or
pop
loop
jge
imul
sbb
repz
add
hlt
leave
fisttp
sbb
test
test
enter
sbb
mov
scas
mov
hlt
mov
inc
jg
dec
aaa
xor
adc
push
mov
pop
sub
inc
mov
int
lea
loopne
mov
(bad)
mov
fldcw
jl
dec
cmps
inc
call
or
sti
(bad)
leave
into
aas
std
jge
cmp
pop
lods
push
fnstsw
pop
lock
cwde
repnz
popa
xchg
and
mov
daa
inc
shr
mov
adc
jle
push
xor
test
or
shl
sbb
sub
pop
ins
stc
mov
std
pop
xchg
mov
loop
cmps
mov
or
inc
aad
or
xor
or
cdq
xchg
or
and
cwde
mov
stc
lock
jno
add
ja
aam
mov
jmp
pop
xchg
aas
ror
arpl
mov
mov
(bad)
retf
fprem
jmp
xlat
mov
jle
or
adc
inc
mov
call
push
mov
pop
inc
mov
and
mov
xor
(bad)
xor
xchg
sahf
adc
dec
xchg
lea
lods
cld
jns
movs
sbb
inc
dec
and
mov
ins
mov
lahf
jg
cmc
jb
xor
xchg
jl
ins
nop
retf
stc
jno
inc
adc
and
or
jmp
inc
jmp
rol
jb
cdq
clc
pop
cs
mov
jnp
inc
lods
in
cwde
jae
aaa
mov
sub
or
ret
push
out
cmp
out
fnstenv
mov
pop
pop
xchg
out
aam
mov
push
call
shl
fwait
js
fs
test
retf
push
out
xor
inc
jmp
mov
fild
js
icebp
cli
inc
lods
push
inc
mov
mov
test
fisttp
mov
ins
js
pushf
push
retf
fcmovnu
xchg
pop
push
pusha
adc
stos
push
inc
daa
movs
xchg
mov
jae
pop
sti
xor
cld
loope
aas
(bad)
cld
call
jo
aam
hlt
inc
pop
jnp
idiv
and
inc
adc
xor
pop
fnsave
jb
adc
push
(bad)
jmp
fwait
pushf
pop
aaa
pop
out
mov
sbb
repnz
cmps
mov
push
out
ret
mov
adc
dec
jmp
dec
pop
movs
icebp
(bad)
in
push
push
in
xor
cwde
loop
sub
or
push
leave
lods
pop
stc
imul
push
inc
ficom
dec
xchg
inc
jnp
inc
fst
js
fcos
mov
(bad)
jge
dec
loopne
dec
ss
sub
call
aam
dec
sbb
fst
dec
adc
mov
cwde
inc
jb
outs
(bad)
retf
popf
mov
fwait
jo
clc
push
outs
inc
push
jae
xchg
addr16
(bad)
out
or
js
jl
dec
jmp
push
pusha
inc
xchg
or
push
pop
call
push
sub
dec
mov
sahf
outs
add
jnp
sub
pop
lock
bswap
pop
shl
push
mov
and
mov
sub
pop
pop
lock
fdivr
jbe
popa
outs
aad
and
clc
adc
pop
scas
clc
lea
mov
push
and
mov
(bad)
ret
mov
fsubr
jl
enter
loope
jns
shl
ret
add
(bad)
iret
rol
dec
or
jnp
xchg
mov
in
pop
int
sbb
cmp
push
dec
rcl
sub
pop
sahf
mov
aam
test
(bad)
aam
iret
pop
cmc
inc
cmc
push
mov
push
ror
bound
sbb
stos
cmp
lods
pop
daa
add
imul
sub
repnz
repnz
push
repnz
popa
pop
gs
les
mov
mov
stos
and
xchg
dec
mov
xchg
adc
aad
jp
loop
mov
mov
mov
push
enter
test
mov
mov
call
or
scas
test
jnp
mov
in
cmps
lods
in
adc
dec
in
pop
xchg
jg
or
or
outs
jecxz
xor
dec
dec
jno
jmp
xor
add
adc
sbb
mov
shr
pop
aas
inc
sti
pop
inc
jl
jmp
xchg
fidivr
in
add
ins
push
sbb
retf
and
pop
in
jns
mov
aam
adc
into
push
(bad)
cli
imul
test
push
push
div
aas
add
pop
xor
(bad)
inc
in
in
xor
push
stos
mov
pushf
ins
call
cwde
push
cmc
jb
pop
sbb
inc
mov
les
sub
loop
scas
movs
fs
fimul
repnz
(bad)
dec
cmp
cli
mov
adc
dec
adc
cmp
cmp
shl
pop
ins
scas
and
call
gs
push
mov
int3
jno
add
add
jo
jecxz
xor
or
imul
lea
pop
pusha
loopne
xchg
ja
popf
dec
mov
arpl
cmpps
jg
test
loop
int3
int
mov
fs
icebp
arpl
pushf
lahf
cmp
xor
inc
cmp
push
cmp
and
call
pop
repnz
push
mov
stc
shr
mov
and
enter
mov
sub
je
add
inc
loop
mov
int
lds
cmps
out
pop
inc
xor
jle
mul
adc
pop
shr
add
sbb
cld
pop
dec
rcr
ins
call
sysenter
mov
int3
lock
in
rcr
int
fstp
cwde
es
push
out
and
jnp
loope
mov
push
sbb
cmp
mov
clc
adc
test
repz
int
cwde
fidivr
daa
inc
dec
shr
add
inc
ffreep
aam
add
sbb
jg
rcr
rcr
mov
icebp
add
rcl
and
xor
aam
in
jne
div
sub
pop
sahf
push
popa
fld
xor
lds
mov
push
and
shr
xchg
loope
cdq
mov
ins
(bad)
push
and
add
(bad)
pushf
cmp
ins
bound
xchg
jbe
fwait
gs
cdq
jb
stos
dec
cdq
jno
sub
idiv
addr16
neg
in
mov
xchg
cmc
or
cmp
pop
out
pop
mov
icebp
add
push
loop
clc
retf
push
mov
loopne
sub
aad
mov
push
ins
mov
sbb
cmp
outs
add
push
mov
mov
hlt
jmp
gs
js
adc
and
in
pop
les
addr16
ss
pop
mov
lds
hlt
inc
sbb
pusha
jo
jg
add
xchg
das
jl
push
retf
test
and
(bad)
push
aas
ja
adc
pop
fisub
jne
adc
pusha
sub
adc
mov
retf
mov
jg
popf
mul
adc
jo
mov
jno
mov
mov
std
outs
fdivp
(bad)
xchg
loope
mov
pop
mov
xchg
shl
and
jne
xor
pushf
adc
popa
outs
in
ss
cs
adc
out
cld
and
and
fisttp
dec
es
mov
daa
cld
es
in
mov
sub
cmc
pushf
adc
jle
dec
pop
clc
adc
mov
or
fldenv
xchg
xor
and
in
jmp
rcr
push
out
adc
add
aas
les
or
pop
jg
loop
xchg
push
loopne
inc
(bad)
mov
imul
xor
fwait
aas
or
imul
inc
xlat
inc
fidiv
jns
scas
xor
or
cs
add
jmp
iret
lahf
sti
jb
jge
xchg
sbb
lods
mov
outs
rol
(bad)
(bad)
dec
xchg
dec
jmp
lea
mov
add
aaa
pop
mov
push
loop
sub
sbb
pop
jmp
or
sub
(bad)
xchg
push
and
mov
imul
cmp
sub
out
push
popa
es
or
adc
pop
in
sub
push
(bad)
dec
stc
call
pop
cdq
cmp
loope
pop
je
jg
fwait
movs
call
jmp
jg
lea
fadd
fsub
loopne
push
dec
or
add
or
pop
aas
test
or
jge
mov
inc
pop
outs
jp
sub
jb
inc
lds
mov
push
or
cwde
pop
mov
xchg
push
cmp
ret
cmp
push
mov
arpl
icebp
push
cmp
dec
adc
push
imul
mov
ror
sti
jns
pop
and
mov
adc
lock
push
mov
sbb
jl
pop
adc
scas
int
adc
jg
imul
inc
es
and
sahf
mov
mov
icebp
js
xor
repnz
mov
xlat
and
dec
dec
sub
mov
fld
ds
ds
aad
inc
cmp
shr
sbb
add
ja
outs
xor
dec
sub
sahf
xor
inc
push
xchg
dec
(bad)
adc
scas
rol
lahf
xchg
push
and
cs
jge
adc
ins
inc
les
jns
popf
or
adc
call
xor
(bad)
jp
ja
movs
cmc
out
outs
ins
ins
inc
or
xchg
shr
push
mov
pop
cmp
(bad)
fstp
mov
sub
lods
jno
xor
enter
cmp
scas
adc
(bad)
pusha
sti
xor
mov
stos
outs
and
movs
xchg
jecxz
mov
or
xor
pop
(bad)
push
inc
pop
fsub
or
push
jmp
pop
xchg
ret
mov
shl
dec
call
jp
jno
js
mov
mov
cmp
cs
daa
xchg
and
sub
in
push
mov
or
neg
shr
in
jg
sbb
ret
fst
jecxz
sub
int
push
(bad)
ins
jae
mov
xor
fst
fistp
lahf
mov
fld
adc
jge
xchg
test
inc
call
jl
jne
fild
pop
push
adc
or
push
sub
mov
ffreep
mov
(bad)
dec
jmp
retf
je
call
push
cmp
and
fmul
mov
gs
cs
sub
cdq
(bad)
leave
ret
inc
mov
sbb
enter
mov
dec
xor
movs
mov
pop
loope
adc
pop
dec
mov
imul
push
xchg
mov
lods
jbe
les
bound
cdq
out
inc
mov
ret
loope
inc
dec
cli
push
pop
inc
lods
xor
and
add
test
popf
fistp
stos
dec
inc
xchg
inc
push
sbb
push
push
ja
lds
hlt
push
cmp
fcom
pop
pop
jb
les
sar
cmps
mov
out
cmp
pop
shr
je
aad
outs
cs
es
clc
cwde
jns
outs
cld
mov
jae
ret
inc
addr16
pushw
jns
jl
fadd
mov
and
sub
call
jbe
out
add
data16
jg
adc
in
cmp
fild
cs
aas
adc
adc
sahf
popa
retf
data16
aaa
fnstcw
sub
and
jo
and
leave
imul
xchg
dec
loope
pusha
xor
jge
mov
nop
movs
jge
(bad)
cdq
pop
push
stos
xchg
xor
push
stos
mov
test
fcomp
cmc
cmp
xchg
add
scas
push
mov
push
mov
js
test
in
and
popa
retf
pop
out
jae
fistp
std
push
ja
bound
pop
cmc
or
shr
pushf
rcr
inc
ins
es
aas
mov
xor
dec
shl
es
sar
mov
xchg
imul
cs
add
(bad)
xchg
adc
xchg
aam
and
inc
mov
into
stos
out
ret
mov
stc
jmp
push
xchg
movs
push
(bad)
jp
push
mov
and
enter
jno
mov
data16
lahf
jle
(bad)
jnp
adc
sub
js
xchg
movs
inc
pop
jle
(bad)
cmps
push
xor
xor
cmp
mov
aad
in
sub
scas
mov
mov
sahf
mov
mov
dec
mov
neg
(bad)
in
sub
(bad)
jecxz
enter
js
mov
adc
popf
mov
lds
xlat
pushf
neg
es
std
inc
arpl
adc
or
arpl
pusha
imul
lock
sub
mov
movs
mov
mov
fdivr
jbe
int3
je
lods
loopne
jmp
fst
test
sbb
jnp
lock
mov
push
pop
jp
ins
cwde
imul
add
aaa
dec
adc
push
das
and
cmps
enter
mov
lahf
stos
lods
fldcw
push
mov
test
mov
adc
dec
or
mov
fs
xchg
sbb
bound
adc
mov
or
mov
movs
fs
or
div
in
and
dec
xchg
pop
fisubr
mov
popa
or
sub
sti
(bad)
adc
daa
(bad)
mov
daa
test
mov
out
dec
mov
push
repnz
xchg
xchg
pop
ja
inc
sub
pusha
mov
in
aad
test
test
xor
jns
mov
jae
div
inc
xor
sbb
sub
inc
inc
xor
or
out
mov
ret
es
push
call
(bad)
sti
sub
xlat
call
mov
stos
js
mov
inc
addr16
imul
mov
cwde
add
cdq
jp
cmps
push
and
cwde
inc
jmp
fs
fnstcw
rcr
pop
(bad)
in
cmp
push
and
test
and
sub
pusha
pop
stos
jns
shl
and
int
push
pop
and
js
pusha
and
jne
hlt
imul
idiv
mov
inc
stos
es
sbb
dec
push
test
xor
mov
dec
dec
cmp
jecxz
repnz
movs
popf
mov
fsubr
cmp
ror
sbb
or
sub
push
dec
leave
(bad)
sub
ins
adc
out
mov
jp
lods
jg
(bad)
xor
cwde
xchg
mov
js
mov
xor
sub
call
cwde
test
mov
dec
aas
jge
mov
jns
and
push
scas
jge
mov
pop
les
cli
in
sbb
and
popa
fucomp
mov
pusha
cs
js
fcomp
stos
xor
iret
mov
fisub
cmp
inc
stos
in
jmp
inc
dec
sub
ins
inc
push
xchg
or
mov
sar
mov
and
pop
paddusw
inc
sbb
sub
call
mov
cmp
ret
and
mov
out
je
pop
rcl
and
pop
movs
jg
cld
mov
call
inc
stos
sub
pop
cmp
pop
mov
or
and
mov
(bad)
pusha
xchg
lds
inc
sbb
mov
mov
sub
adc
popf
loope
add
in
aaa
add
jecxz
cmps
loopne
jns
sar
stos
mov
(bad)
in
inc
sbb
in
adc
int
outs
test
inc
and
xchg
mov
test
adc
xchg
inc
sub
and
fistp
cmps
leave
push
jge
mov
sub
cli
inc
test
xchg
cli
jnp
pop
push
push
popf
movs
cld
jg
sub
dec
push
test
ins
cmp
cmp
jg
mov
retf
xchg
fnstenv
aas
pop
jp
jae
lds
(bad)
(bad)
pop
ins
pop
xor
call
(bad)
pop
add
sub
xchg
xchg
movs
js
dec
push
xorps
add
jae
rcr
cmp
xchg
sub
mov
mov
jge
inc
mov
push
in
push
sbb
jns
xor
imul
cmc
and
xor
inc
and
pop
lds
pop
pop
loopne
loope
cmc
push
dec
jp
pop
xor
mov
jbe
jmp
jne
xchg
bound
jp
xchg
div
xor
xor
(bad)
shl
nop
mov
inc
mov
dec
or
aam
jecxz
sub
lods
loope
enter
aam
in
cwde
xchg
sbb
into
inc
test
pop
mov
xchg
lea
xchg
shr
scas
jle
in
out
dec
ja
xchg
add
lods
cwde
cs
xor
jno
cmp
fcomp
movs
push
mov
in
xchg
mov
pop
cld
mov
cmp
lahf
fsub
das
scas
sub
xchg
lods
lea
cmp
xor
sub
inc
scas
jno
pop
and
lahf
xor
(bad)
int3
sbb
sbb
out
sub
aaa
mov
push
and
sbb
lds
mov
dec
lds
adc
mov
stos
add
out
scas
or
sub
add
loop
dec
mov
dec
ds
push
sbb
dec
in
mov
mov
pop
dec
shl
les
mov
dec
jnp
aam
cwde
pop
out
inc
adc
cmp
mov
mov
add
pop
inc
mov
or
imul
mov
pop
xchg
push
fcmovb
sbb
cmp
std
xchg
retf
div
pusha
in
dec
adc
lahf
(bad)
adc
adc
pop
adc
ret
mov
(bad)
fisttp
sub
into
or
je
mov
or
or
xchg
int
push
fsub
add
mov
add
je
jbe
pop
and
aas
inc
cs
test
aad
not
psllq
xchg
stos
adc
push
mov
addr16
xchg
mov
hlt
fcmovnu
test
das
dec
loope
scas
int3
jmp
out
nop
jno
retf
sbb
addr16
int3
test
xor
mov
je
adc
jecxz
mov
in
js
rol
push
adc
push
imul
gs
push
mov
ret
push
push
add
mov
psubusw
adc
cmp
push
jnp
mov
mov
loope
in
push
push
sahf
mov
mov
test
add
and
push
jo
pop
cwde
xor
fs
ds
and
sbb
sub
enter
pusha
adc
ss
fs
fnstcw
sbb
gs
xlat
sti
inc
js
gs
or
pop
dec
xchg
jg
sbb
push
cmp
mov
mov
js
in
in
popa
xor
repz
dec
jo
xchg
ucomiss
(bad)
and
add
outs
adc
jecxz
cmp
pop
jnp
cmps
jno
inc
gs
adc
dec
adc
clc
in
fidiv
in
movs
bound
call
adc
adc
pop
pop
xor
inc
rcr
bound
push
arpl
push
mov
imul
(bad)
mov
fld
outs
cmp
jo
test
in
int
into
std
shl
jle
dec
pop
pop
daa
lock
retf
add
mov
mov
outs
sbb
adc
jb
enter
movs
div
inc
popa
dec
loopne
push
cmp
(bad)
fcomp
std
xchg
mov
outs
xchg
popf
dec
sub
scas
arpl
fdivr
in
lods
dec
sub
loop
pop
dec
sub
mov
shl
test
push
mov
call
not
dec
mov
adc
cmp
cmp
mov
mov
clc
mov
sub
scas
scas
xor
add
jns
fst
in
cmp
in
adc
stos
mov
xor
sbb
or
sub
pop
cmc
retf
push
sub
sub
jle
iret
mov
fnstenv
scas
xchg
pop
mov
pop
add
das
push
stc
pusha
stos
and
or
retf
jns
fst
jne
jmp
repnz
aaa
mov
mov
fiadd
rcr
mov
mov
xor
les
ss
cwde
xchg
add
push
push
push
push
sbb
jo
or
push
push
aam
add
mov
cwde
dec
add
pop
sbb
rcl
out
jnp
pop
and
aas
and
fisttp
cmp
loope
jnp
xchg
jb
imul
jnp
loop
cmp
lahf
adc
xchg
es
mov
loop
scas
scas
push
rcr
or
inc
fisubr
pop
cmp
fsubrp
popf
cmp
and
call
push
imul
xchg
add
mov
xlat
repz
add
mov
dec
dec
pop
cmc
pop
or
je
or
not
mov
cmp
mov
mov
xchg
or
xchg
cmp
and
daa
iret
add
pop
out
jmp
add
adc
fwait
in
cmp
addr16
dec
cmp
or
push
dec
loopne
(bad)
retf
mov
cmp
mov
aam
ins
mov
in
mov
pop
hlt
push
cmp
pushf
xchg
mov
cmp
sahf
sbb
sar
sbb
jecxz
ja
pop
push
inc
mov
and
bound
mov
adc
mov
aas
mov
mov
xchg
and
nop
mov
or
outs
add
test
stos
ins
in
push
lds
movs
js
or
adc
xchg
movs
pop
push
xchg
retf
push
mov
mov
outs
outs
and
xor
ret
mov
sub
scas
mov
jo
stc
sbb
and
and
jnp
sub
xchg
outs
add
loop
pop
mul
cld
gs
pop
test
xchg
stc
aaa
leave
dec
jae
xchg
es
mov
cmp
adc
sar
mov
lds
icebp
popf
repz
push
xchg
sbb
mov
outs
cli
fdivr
jae
mov
fstp
pop
(bad)
ins
shl
ds
xchg
call
shl
scas
mov
aam
loopne
jns
mov
retf
popf
mov
jnp
adc
cmp
call
mov
mov
nop
in
add
cld
ins
mov
cdq
or
mul
mov
jae
lds
and
push
push
mov
jno
jo
ss
gs
fs
mov
inc
leave
jb
repnz
or
pop
and
jmp
dec
test
popa
push
pop
inc
sti
pusha
mov
icebp
or
loop
cli
call
mov
icebp
xchg
enter
push
out
cdq
ds
push
xor
xor
rcl
adc
mov
ds
rcl
cdq
pop
mov
bound
pop
jmp
sub
and
sub
call
xlat
(bad)
mov
xor
push
int3
int3
retf
mov
inc
inc
stos
shl
repz
das
daa
aad
or
sbb
jnp
adc
ds
or
stos
or
push
rcr
ds
mov
in
or
in
cmp
pusha
(bad)
dec
jge
xchg
(bad)
cli
enter
pop
push
in
fs
inc
test
jnp
test
cmp
inc
lea
push
out
mov
fwait
in
xchg
mov
pop
out
jne
jo
jbe
popf
loope
dec
sub
cwde
push
and
ret
les
or
cmp
xchg
jmp
jp
stc
jne
xchg
dec
inc
rcl
jns
(bad)
fisub
gs
ins
dec
retf
jns
xchg
ja
sub
shr
xlat
ror
pop
jno
add
movs
gs
mov
pop
mov
pop
pop
fdivr
lods
or
imul
fbld
push
mov
std
xor
ds
pusha
and
lods
mov
cmps
fbstp
iret
mov
(bad)
pop
sub
in
ficom
lea
adc
out
pop
ret
inc
shl
and
aam
loopne
add
mov
xchg
push
aaa
or
data16
hlt
jns
fisubr
sbb
nop
stos
mov
ins
(bad)
xor
and
lods
inc
xchg
shl
addr16
mov
out
mov
dec
jmp
jns
cmp
xchg
or
xor
aaa
and
pop
mov
aad
add
lods
jbe
cmp
xchg
xchg
shr
fimul
ret
(bad)
movs
mov
mov
or
in
sub
and
xor
jae
jmp
dec
call
outs
shl
retf
and
icebp
inc
xchg
push
test
lahf
ror
push
push
aam
add
fsubr
das
fwait
push
mov
jne
xchg
sbb
(bad)
cmc
ret
sub
mov
push
in
stos
adc
scas
sahf
mov
lods
or
out
dec
repz
dec
into
or
fimul
inc
sub
mov
clc
loopne
in
jnp
(bad)
push
pop
sbb
and
(bad)
stc
adc
ret
fisub
add
stos
sub
pop
out
xchg
fmul
jb
xor
rcl
dec
daa
aam
pop
lods
sub
pop
lds
lods
mov
jge
mov
inc
call
sbb
or
or
or
stos
or
dec
jbe
out
push
mov
xchg
cmp
push
xchg
bound
jle
enter
std
sub
out
call
jmp
push
enter
test
lds
inc
aaa
int3
fstp
scas
sub
aam
inc
xchg
inc
cmp
inc
je
inc
cmp
dec
repnz
in
and
mov
sbb
bnd
sbb
aam
xchg
sti
sbb
add
xor
mov
repnz
sub
loopne
and
or
or
cdq
push
lock
add
(bad)
add
xchg
outs
int
int
mov
mov
cs
fimul
adc
mov
dec
dec
jns
dec
sbb
and
das
jb
push
dec
add
cwde
mov
lods
loope
push
lods
inc
push
test
add
mov
xor
out
xor
jns
mov
xor
fisttp
(bad)
jmp
xchg
aas
(bad)
push
sub
shr
jp
adc
dec
cmp
and
stos
jmp
or
fwait
cmp
pop
add
call
xor
push
(bad)
xchg
imul
cmc
ret
add
popf
push
jge
cmp
aam
jb
mov
jle
(bad)
aas
inc
adc
add
mov
out
adc
cld
pushf
test
adc
cmp
push
lds
jae
xor
add
(bad)
fwait
jae
jns
jmp
test
fsub
stos
mov
sbb
push
mov
loope
aaa
mov
pop
stos
xlat
inc
mov
pop
pop
in
and
cmps
sar
jb
clc
outs
pop
mov
iret
and
jne
jmp
push
or
xchg
cli
and
xor
movs
xlat
in
fadd
xchg
idiv
sub
mov
mov
ror
(bad)
fcomi
sti
push
popa
cmp
push
sub
xor
xchg
out
push
loope
nop
pop
jl
dec
in
fwait
or
and
mov
les
cmp
gs
push
cmc
xor
xor
ss
sbb
out
xchg
jnp
push
pop
sbb
rcl
shl
daa
iret
push
or
inc
repnz
mov
call
mov
movs
int3
imul
(bad)
call
popf
add
or
sbb
fsub
inc
cwde
cmps
adc
lods
das
and
push
xchg
adc
sbb
sbb
cmp
addr16
sbb
inc
add
and
mov
and
mov
push
scas
clc
dec
and
in
push
sbb
mov
call
mov
idiv
lods
stc
adc
push
mov
jecxz
cmp
out
inc
sbb
add
(bad)
ins
lods
jae
mov
mov
and
test
add
inc
sub
cli
ja
and
in
lock
out
int
es
pop
jle
xor
test
mov
fmul
jmp
sbb
mov
ficomp
stos
shr
push
add
mov
popf
push
pop
pop
aam
outs
sub
xor
(bad)
xlat
imul
add
(bad)
sub
mov
pop
(bad)
popa
nop
out
dec
iret
xor
aas
or
adc
sub
cmp
or
or
push
adc
sub
lock
pushf
cmp
cwde
sbb
fdivr
and
add
call
sbb
sbb
jg
mov
pop
mov
outs
mov
aad
cs
es
inc
sbb
mov
jnp
xor
jecxz
add
cmps
dec
jbe
stos
fld
dec
dec
(bad)
push
out
mov
sub
outs
lahf
sub
pop
movs
pusha
adc
xchg
sbb
fucomip
add
xor
mov
dec
sub
push
pop
repnz
xchg
xor
(bad)
and
cwde
or
jo
cmp
(bad)
fsubr
pop
popf
scas
pop
and
xchg
jp
and
sar
jp
stos
push
out
mov
cmp
push
adc
dec
xchg
jno
in
jl
xchg
stc
js
pextrw
in
js
retf
imul
imul
and
int
inc
or
dec
jmp
cdq
(bad)
and
jno
in
cmp
jbe
jmp
xchg
pop
test
cli
sub
xor
jae
lahf
dec
arpl
push
iret
xor
scas
adc
inc
je
adc
add
imul
or
jmp
sbb
pop
lahf
lock
pop
pop
es
lods
mov
dec
pop
mov
xor
lods
ror
pop
test
bound
add
cmp
xchg
stos
ins
movs
jo
in
sub
cld
add
(bad)
cmp
mov
and
sbb
test
push
sbb
cmp
daa
iret
xchg
push
in
ret
or
sub
pushf
or
adc
and
aaa
cli
mov
add
inc
and
sbb
or
add
jl
mov
cmp
push
lock
aam
je
cmps
test
lds
add
fisttp
sbb
xchg
adc
cwde
jnp
rcl
mov
fistp
xor
scas
sub
arpl
mov
ja
xor
jo
cs
and
sahf
pop
ds
lock
adc
lods
sahf
sahf
cdq
arpl
mov
out
xchg
xor
das
mov
pop
adc
jmp
loope
adc
jne
into
push
loop
data16
addr16
xor
xchg
je
cmp
aas
push
sbb
retf
mov
push
xchg
int3
arpl
lds
xchg
loop
pop
sbb
mov
add
pop
xor
mov
xlat
ret
xchg
pop
add
mov
lods
mov
mov
pop
xor
ja
or
sub
add
cwde
cmc
bound
(bad)
pushf
sbb
push
lods
xchg
in
ins
pop
jecxz
out
and
jne
loop
xchg
mov
mov
sub
mov
jne
sbb
fs
jg
sub
outs
push
xchg
mov
int
xor
inc
ret
aaa
sub
test
rol
imul
pop
push
mov
push
fcom
movs
inc
inc
iret
fcomp
jns
mov
cs
sbb
call
aaa
mov
ror
adc
jmp
adc
(bad)
ror
test
cmp
test
or
and
loopne
add
icebp
retf
std
jp
inc
(bad)
jl
js
and
xor
and
sbb
jbe
cwde
xor
push
pop
push
mov
je
retf
sbb
movs
pop
sti
add
pop
stos
call
and
inc
pop
(bad)
repz
ins
xchg
mov
sub
xchg
scas
leave
data16
ret
stc
inc
std
sbb
adc
or
add
jmp
push
jne
mov
mov
(bad)
pop
sbb
add
lods
mov
xor
cmp
fst
xor
xchg
ss
cmp
sbb
pop
aas
xor
(bad)
push
pop
(bad)
mov
rcl
jns
xchg
xchg
cmc
mov
jo
mov
mov
jno
mov
cmp
sbb
lods
(bad)
ja
add
xchg
shl
adc
sub
push
(bad)
xlat
adc
adc
fnsave
mov
sahf
in
pusha
jl
inc
sbb
jp
and
push
fistp
xchg
clc
pusha
cmps
shl
and
pop
movs
in
xor
pop
es
xchg
fisttp
xor
pop
jnp
sbb
test
add
push
pop
stc
lds
repz
cmps
out
pop
mov
scas
xchg
and
dec
stos
mov
jo
and
or
xor
jp
daa
jg
aam
mov
add
or
dec
std
xor
xchg
mov
aaa
sub
in
pop
test
mov
enter
popf
repnz
aam
adc
pop
sahf
out
jl
mov
push
adc
push
popa
push
popf
out
push
ror
inc
mov
loop
test
ds
fisub
lahf
and
mov
enter
ret
movs
push
inc
nop
pop
xor
dec
div
retf
jne
ja
div
jno
arpl
ror
lods
enter
repnz
adc
push
jmp
in
and
ret
xchg
loopne
int
sub
scas
test
in
push
mov
test
test
fwait
push
in
daa
xor
arpl
pop
cli
data16
scas
inc
jge
mov
cmp
retf
jmp
xor
fmul
jge
or
mov
sahf
mov
push
mov
push
(bad)
pop
push
ins
jno
daa
adc
dec
push
(bad)
retf
mov
fisubr
mov
shl
scas
dec
in
int3
fndisi(8087
lods
jmp
xchg
icebp
cmps
pop
or
loope
lock
test
out
mov
sub
ret
xor
fcmovne
pop
cli
xchg
cmp
pop
fdiv
mov
movs
loopne
xchg
mov
push
xchg
sub
pop
cli
and
and
sub
jg
mov
repnz
mov
mov
mul
inc
fwait
inc
outs
or
add
jge
(bad)
shr
mov
xchg
in
cmp
retf
pop
leave
and
(bad)
xlat
mov
inc
(bad)
iret
(bad)
cmps
jbe
arpl
inc
pop
addr16
shl
add
inc
dec
or
jnp
ins
fbld
dec
push
sbb
mov
mov
ins
mov
cmp
push
jmp
pop
inc
cwde
addr16
cmps
in
fistp
(bad)
mov
sbb
push
shl
ja
cli
add
and
adc
xor
jg
lds
jnp
xchg
repz
and
retf
pop
mov
lods
iret
(bad)
(bad)
gs
(bad)
cdq
and
dec
sahf
and
push
adc
pop
loopne
or
mov
daa
push
dec
(bad)
cmp
add
xor
add
je
mov
mov
outs
lods
push
fcmovnu
pop
call
in
dec
push
adc
mov
ss
aam
ins
or
jmp
pusha
mov
pop
scas
jne
sbb
xor
jno
add
mov
xchg
sbb
mov
out
and
mov
pop
sar
mov
add
pop
fild
push
fbstp
push
dec
call
and
mov
enter
pop
dec
div
pop
sub
jmp
dec
and
mov
in
dec
add
icebp
movs
or
adc
add
rcr
sbb
std
fnsave
and
jne
es
mov
mov
mov
mov
cdq
dec
cmp
xor
and
aam
fst
push
repnz
and
sbb
gs
mov
jmp
movs
dec
loope
mov
rcr
adc
mov
mov
or
cli
lea
cmc
nop
mov
sbb
dec
jle
xor
jae
dec
(bad)
pop
sar
jnp
call
test
das
cmp
(bad)
into
inc
(bad)
imul
add
adc
mov
push
(bad)
bound
push
inc
adc
sti
inc
cmp
ret
mov
xchg
and
add
out
mov
jne
das
aas
loopne
push
daa
mov
inc
add
mov
mov
aam
add
out
jecxz
cs
mov
or
movs
cwde
xchg
mov
(bad)
pusha
push
add
retf
pop
psubusw
jb
and
cld
push
inc
stc
loopne
xchg
sub
xor
or
sbb
ret
and
xchg
xor
dec
movs
loop
fs
adc
sti
(bad)
sti
fisub
mov
retf
out
les
cmp
cwde
adc
push
sbb
mov
loop
in
mov
adc
push
inc
push
dec
mov
sbb
push
cdq
xor
jne
int3
xchg
mov
ins
xchg
repz
or
push
add
jno
mov
sbb
xchg
push
in
in
lods
cli
pop
mov
imul
loop
xor
and
and
pop
test
mov
jnp
xor
push
push
in
test
push
mov
pop
mov
and
or
imul
shl
xor
and
inc
shl
add
shl
dec
push
mov
test
jne
popa
sub
(bad)
jmp
mov
xchg
cmp
lock
pop
outs
(bad)
jp
outs
daa
adc
adc
lods
cmp
inc
xchg
and
jnp
mov
sbb
leave
inc
movs
scas
sbb
or
imul
lods
jg
(bad)
xchg
mov
inc
rol
mov
pop
mov
cld
and
inc
ins
pop
sub
dec
fld
mov
cld
jnp
sbb
sub
(bad)
sbb
cs
xchg
adc
dec
pop
push
int
jns
inc
mov
add
inc
stos
js
sub
push
xchg
rcr
das
push
push
scas
leave
push
jmp
push
call
jae
lds
mov
push
lock
push
cld
clc
mov
out
inc
pushf
sbb
fcom
xchg
and
lds
push
loop
fsubr
dec
lock
mov
ins
jae
cs
clc
repz
mov
cmp
outs
dec
mov
(bad)
adc
fcmovne
or
xor
fidivr
movs
cdq
and
jno
std
mov
mov
sub
mov
sub
mov
adc
xchg
sahf
aad
pop
xor
sti
sbb
mov
fidivr
sbb
outs
push
(bad)
sbb
ja
or
icebp
jmp
jns
popf
test
es
push
pop
jno
push
pop
mov
sbb
mov
in
inc
daa
jbe
pop
outs
sbb
iret
xchg
int3
jg
fwait
in
ja
mov
add
mov
sub
fwait
inc
outs
xchg
ror
nop
cdq
addr16
and
sub
out
dec
fcom
loop
stos
shl
sbb
xchg
mov
test
cld
daa
es
mov
mov
aaa
sub
pop
shl
add
jge
sar
push
sbb
pop
out
sbb
call
cmp
test
xor
idiv
lock
in
mov
and
test
mov
ins
sub
pushf
push
int
in
(bad)
jp
aad
dec
dec
data16
cmp
int
enter
pop
mov
test
push
mov
gs
pushf
cmp
sub
dec
jo
ins
jb
push
mov
or
or
and
push
stc
xchg
(bad)
push
std
ss
mov
xchg
hlt
sbb
out
dec
test
mov
stc
fwait
iret
dec
mov
mov
pop
bound
repz
or
dec
or
fcom
fdivr
mov
cwde
das
push
cmp
lods
adc
xchg
cld
or
jle
jmp
std
clc
sub
fimul
call
or
lds
mov
push
repz
popf
int3
sbb
fnstenv
cmp
fidivr
fisttp
xor
mov
aaa
(bad)
icebp
jge
aam
std
xchg
push
pop
adc
push
jmp
cmps
imul
xchg
and
and
mov
dec
out
jl
push
fisub
jbe
scas
xor
int
lock
mov
out
xchg
adc
jp
dec
inc
mov
pop
ds
(bad)
(bad)
(bad)
in
or
jae
lods
les
adc
pop
mov
rcl
mov
pop
push
inc
nop
popa
psubsw
outs
aad
es
mov
mul
push
fisub
pop
loop
clc
arpl
cmps
xchg
jmp
fst
iret
mov
movs
jnp
or
dec
sti
and
in
fcomi
retf
push
sub
xor
jb
push
aaa
ins
and
test
dec
mov
call
out
jg
sahf
out
jmp
adc
pop
movs
or
dec
ins
retf
add
dec
es
in
push
xchg
rcr
cmp
mov
jbe
(bad)
ja
sti
dec
fcmovb
ja
das
jmp
cwde
jecxz
sub
popf
or
popf
test
xor
test
ds
jp
out
mov
push
(bad)
(bad)
popa
lods
jge
lods
and
fcmovb
aad
jno
out
push
adc
jbe
mov
adc
loopne
lods
pop
sub
or
xchg
push
ds
popa
sub
retf
int
mov
push
lods
dec
xor
cmps
fst
jb
mov
rcl
jl
dec
mov
lahf
int3
xchg
inc
in
inc
outs
push
inc
ins
daa
icebp
retf
jb
pusha
stos
out
or
outs
jmp
clc
cmp
jnp
add
aaa
xchg
add
pop
and
dec
in
add
mov
cli
inc
loope
nop
mov
in
jne
test
sub
repz
and
fisttp
cwde
test
add
pop
sar
leave
stc
rcr
sti
sub
push
jbe
imul
inc
fsub
mov
test
push
fdiv
jp
enter
stos
ins
popa
mov
lods
mov
cmp
add
push
fwait
(bad)
hlt
mov
xchg
mov
iret
popf
gs
jg
shl
cmp
pop
imul
retf
jp
xchg
mov
out
sub
pop
stc
mov
pop
aaa
sar
xlat
shl
push
fist
mov
addr16
mov
push
xor
mov
mov
scas
repz
dec
pop
(bad)
fisttp
enter
adc
sbb
and
xchg
jp
in
adc
addr16
ffree
sbb
mov
xchg
adc
push
test
or
call
and
fwait
mov
push
jge
push
adc
xlat
lea
out
push
adc
test
mov
loopne
lds
pop
sub
ror
pop
loope
call
push
cwde
sbb
xor
cmp
jle
xchg
adc
xor
push
fldcw
lds
inc
push
push
mov
xor
xchg
vpextrw
cmps
shl
int3
out
leave
mov
xchg
inc
xor
sbb
(bad)
hlt
mov
cmp
ret
xchg
mov
or
xchg
sti
data16
dec
std
or
add
loope
fdivr
enter
imul
sar
push
mov
fisub
mov
bound
mov
bound
mov
dec
stos
pop
mov
and
cmp
xchg
shl
iret
es
lods
push
mov
pop
dec
lds
add
mov
cmp
fwait
ja
adc
aaa
shr
dec
pusha
adc
ss
jno
mov
push
and
jmp
mov
xor
pop
and
xchg
jmp
aam
add
jecxz
jmp
cmc
sar
xor
out
mov
popf
retf
xor
cmp
je
inc
retf
fs
xchg
daa
push
pop
sar
fmul
xchg
popa
mul
stc
sbb
add
jmp
inc
xchg
ror
fsub
sub
push
jge
sahf
inc
in
in
dec
mov
adc
dec
cmp
test
ins
jmp
jle
out
cmp
mov
xchg
or
outs
int
test
sbb
pop
xchg
repz
jge
and
xchg
lock
les
dec
or
inc
(bad)
ficom
push
jle
or
push
mov
xchg
outs
fndisi(8087
push
xor
int
movs
repnz
push
div
lock
mov
ret
repz
add
pop
sbb
dec
in
mov
mov
sahf
ins
mov
inc
adc
pop
out
or
push
jl
outs
jbe
xor
jb
rcr
cmp
ss
inc
dec
repnz
in
cmps
sbb
jecxz
sahf
loope
dec
pop
test
mov
jecxz
pop
scas
stos
out
mov
arpl
jmp
sti
jle
push
sbb
mov
jbe
rol
xchg
cmp
pop
mov
je
or
mov
inc
imul
sti
je
ss
test
jmp
in
leave
inc
nop
xchg
xchg
add
push
fisttp
data16
pusha
leave
cdq
les
daa
pusha
pop
and
pop
inc
xor
inc
and
push
lahf
mul
fistp
push
mov
repz
cwde
call
push
xchg
popf
aam
pop
pusha
xchg
arpl
xor
stc
cmps
cwde
das
xchg
imul
jns
pushf
xor
dec
dec
push
push
cmp
loope
rcr
cmp
cmp
mov
ja
ret
out
xor
mov
shr
push
lock
fist
pop
(bad)
mov
fiadd
add
adc
cmp
xchg
out
push
cdq
and
pop
stc
stos
int
hlt
test
pop
loope
aam
test
mov
bound
add
rcr
loope
pop
pop
outs
lea
aam
in
(bad)
fistp
movs
jge
outs
push
nop
out
dec
dec
jae
sub
outs
cld
inc
or
xor
cmps
call
fld
xchg
int
pushf
imul
fwait
retf
mov
fwait
mov
std
imul
mov
sbb
ins
dec
or
inc
push
pop
mov
adc
sbb
daa
inc
test
push
cmps
test
les
pusha
fld
inc
ins
test
(bad)
mov
adc
inc
mov
aaa
adc
iret
mov
xlat
retf
cmp
in
and
leave
pop
mov
mov
sub
mov
sbb
jge
mov
push
test
ficom
add
and
(bad)
push
hlt
mov
sbb
add
aas
mov
pop
retf
dec
xchg
xchg
or
inc
push
call
pop
xchg
repnz
add
push
gs
xchg
dec
das
and
push
sub
and
shl
ins
(bad)
retf
adc
jno
xor
lea
cmp
jmp
add
pop
xchg
push
sbb
leave
and
push
xchg
jle
xor
mov
pop
aam
fist
pop
mov
je
push
push
movs
(bad)
dec
or
ins
icebp
lods
cmc
out
stc
push
add
sar
bnd
xchg
jns
les
xchg
dec
lahf
push
enter
movs
enter
ins
ror
inc
cmp
cmp
sub
add
pop
mov
pop
outs
fsub
(bad)
fdiv
sbb
adc
jnp
in
out
retf
cs
xlat
(bad)
sti
das
pop
in
or
loope
loop
mov
fst
popa
ror
les
push
mov
sub
push
nop
int3
retf
mov
jae
pop
jae
push
cmp
or
dec
or
inc
xchg
scas
push
dec
fnsave
xlat
rol
cmp
mov
stos
arpl
jecxz
popa
pop
add
push
jmp
dec
push
adc
jmp
xor
retf
sbb
fdiv
xchg
inc
mov
add
into
sbb
cwde
cmp
std
ret
stos
mov
mov
or
mov
scas
call
cli
or
sbb
sti
push
or
mov
jb
mov
cmp
sbb
test
xchg
adc
pop
adc
sti
(bad)
loopne
mov
arpl
pushf
(bad)
scas
and
ins
mov
adc
outs
adc
push
sub
or
sub
inc
adc
sbb
stc
cmp
xor
jp
and
inc
inc
cmc
cmps
jno
inc
cli
mov
inc
sub
mov
cmc
fcmovb
into
mov
xchg
mov
pop
sahf
xor
pop
test
pop
cs
int3
shl
in
sar
enter
inc
gs
(bad)
mov
fsub
mov
ds
cdq
fwait
cmp
pop
adc
lods
data16
ret
popa
xor
mov
fldenv
out
test
lea
sbb
ficom
cdq
fild
retf
push
adc
div
pop
dec
lock
retf
sti
cmp
fucomip
mov
push
xor
aad
ja
dec
mov
push
lds
(bad)
jle
and
dec
aam
out
shr
cmp
lods
(bad)
dec
add
imul
dec
cmp
jmp
pop
mov
call
jno
inc
loopne
mov
jo
mov
jae
adc
in
sbb
leave
pop
(bad)
fstp
cmp
shl
cmp
enter
stos
loope
les
push
inc
(bad)
stc
movs
jne
in
fwait
pop
loope
sub
stos
fwait
(bad)
call
stos
scas
outs
stos
mov
mov
daa
or
scas
cmp
sbb
shl
mov
jne
push
add
jnp
mov
in
cmp
inc
xchg
jmp
js
push
aam
and
push
pushf
push
jmp
(bad)
out
enterw
pop
rcl
lods
xchg
sbb
ins
test
fdivp
cld
push
inc
sub
pushw
lahf
shl
aaa
add
fcom
push
push
push
xor
or
cs
mov
repz
jp
sub
int3
or
or
call
sub
rcr
mov
adc
mov
dec
rcr
loop
xor
adc
xor
jecxz
jge
xchg
mov
xor
int3
psubb
mov
fadd
call
xor
pop
and
fs
rcr
xchg
mov
jl
out
div
xchg
ja
dec
(bad)
cmp
mov
shr
sub
dec
and
sahf
data16
mul
popa
push
adc
mov
aam
push
cmp
add
iret
inc
or
xchg
jno
adc
loop
mov
fsubr
add
pop
cld
call
and
in
sub
mov
(bad)
push
and
sti
movs
push
les
mov
add
aas
mov
std
xor
imul
repz
lods
mov
mov
(bad)
mov
add
int3
lods
pop
xlat
cmp
push
mov
jo
or
add
inc
test
push
xor
add
xchg
sub
xor
or
xchg
push
mov
push
jno
movs
ins
pop
stos
ja
mov
xchg
sub
pushf
repz
in
mov
cld
cmp
xor
lods
lods
lock
pusha
mov
lods
rcr
push
test
in
in
ja
and
cmp
mov
ror
fsubr
mov
cmp
add
push
in
jnp
loope
jp
push
loopne
test
xor
pop
mov
outs
jnp
adc
nop
cld
add
mov
nop
bound
mov
or
sub
sbb
pop
jg
xor
pop
xchg
fst
cmps
imul
in
jecxz
sbb
and
mov
mov
sbb
inc
test
mov
test
mov
push
ins
inc
call
ss
or
jae
xchg
xchg
ret
outs
(bad)
mov
into
test
lods
stos
fcom
mov
(bad)
push
jnp
scas
cwde
pop
jbe
inc
sub
mov
cmp
dec
ss
push
popa
jo
cmp
(bad)
es
and
fmulp
sub
dec
cmc
jle
mov
cmp
mov
mov
es
icebp
or
jmp
xchg
mov
xchg
sbb
or
jmp
in
adc
mov
mov
xor
fcomp
(bad)
inc
clc
pop
mov
jnp
aaa
push
inc
mov
adc
sahf
out
aas
sahf
xchg
add
nop
aas
mov
mov
add
xchg
out
push
es
ror
cmp
jecxz
jmp
shl
js
leave
add
not
inc
cmp
adc
idiv
mov
stos
cmp
retf
popa
dec
retf
fcmovnbe
xchg
and
inc
repnz
xlat
icebp
sar
sbb
mov
pop
jecxz
outs
jb
push
or
xor
movs
xchg
dec
inc
mov
or
mov
mov
cli
jge
shl
push
shl
cmp
cmps
and
dec
inc
mov
cmp
push
outs
push
leave
into
mov
arpl
or
adc
pop
jmp
push
jmp
fild
loopne
jbe
and
sub
push
mov
or
sub
jg
mov
call
jae
lock
inc
add
mov
movs
adc
xchg
dec
adc
imul
out
push
outs
cmp
popf
sub
xor
xor
cs
aam
loope
xchg
push
sub
push
jnp
fwait
pop
cli
and
lods
add
sbb
outs
push
scas
add
in
jl
mov
pop
dec
das
push
mov
popf
sub
cld
iret
pop
in
div
mov
mov
in
mov
int3
ins
mov
(bad)
sub
jnp
(bad)
mov
fsubr
xchg
(bad)
aad
sub
lahf
(bad)
(bad)
and
aad
scas
xchg
sti
pop
js
test
cld
xchg
stos
cmp
sar
xchg
pop
mov
jmp
shl
lahf
push
xchg
jb
cld
inc
int
push
ror
push
aas
aaa
jp
and
in
sub
jo
inc
push
ja
push
sahf
hlt
gs
retf
mov
aad
jle
in
cs
imul
add
push
mov
inc
in
or
bound
xlat
hlt
push
jnp
sub
and
cdq
xlat
sub
and
repnz
icebp
loopne
scas
add
mov
cs
inc
jbe
int3
xor
and
add
xchg
mov
int
mov
adc
fdivr
xchg
in
out
jae
xchg
jns
or
mov
popf
push
fisubr
int3
test
sahf
ficomp
fild
aad
test
aas
imul
(bad)
jl
mov
push
sub
pop
add
sahf
mov
in
cmp
mov
mov
in
xchg
cld
mov
(bad)
cwde
pop
mov
mov
push
ror
pop
and
jmp
int
xor
sub
retf
fiadd
imul
movs
xor
add
cs
xchg
int
xchg
adc
out
mov
push
daa
aam
xchg
pop
lods
scas
into
jmp
add
dec
rcr
xor
sbb
scas
mov
iret
sub
into
cmp
or
cmc
das
fmul
jmp
cmp
push
mov
adc
es
setg
add
and
push
int3
lahf
pop
mov
or
inc
icebp
loopne
adc
push
xacquire
out
mov
or
xor
int3
aam
mov
inc
xchg
inc
popa
cmp
sbb
xor
in
aaa
cmps
xchg
cmp
add
fldcw
fstp
(bad)
fidivr
jnp
retf
or
int
lods
and
(bad)
mov
(bad)
in
xor
fs
ss
ror
pushf
sbb
jnp
rol
sub
mov
mov
shr
cmp
jge
jmp
mov
test
xor
cli
or
adc
fist
xchg
adc
cmp
ins
aad
pusha
je
add
fcom
mov
jno
pop
lock
xchg
xor
fs
loopne
mov
mov
imul
loop
mov
adc
jecxz
fucom
nop
mov
daa
inc
aaa
rol
push
adc
scas
sub
pop
sub
(bad)
or
adc
mov
sahf
mov
xor
pop
push
(bad)
loop
loope
inc
add
sub
stos
sub
jae
rcl
pop
or
xchg
std
pop
mov
ds
xchg
jbe
sub
inc
xor
mov
out
inc
mov
stc
push
jbe
js
and
scas
inc
pushf
mov
dec
xor
and
or
adc
adc
(bad)
in
ror
inc
adc
je
mov
and
outs
out
iret
(bad)
pop
jp
cmp
jmp
loope
movs
add
retf
pop
mov
mov
repnz
mov
js
mov
mov
lahf
mov
pop
inc
sahf
mov
pop
dec
dec
imul
push
mov
loope
repz
or
rcl
jg
mov
pop
sub
fdivr
mov
sub
sti
xor
repz
(bad)
ins
cmp
enter
int
add
mov
adc
jmp
leave
fisubr
aam
xor
test
push
cmc
(bad)
xor
or
imul
call
xor
jmp
push
and
mov
ret
xchg
jo
out
fsub
ss
les
pop
(bad)
sub
sbb
fimul
push
stc
xor
(bad)
ins
push
loop
adc
or
pop
add
lea
outs
xchg
cmp
clc
sub
mov
mov
xchg
and
dec
xchg
and
push
and
aas
inc
dec
(bad)
mov
mov
push
loope
or
into
fnsave
mov
leave
leave
loopne
mov
popa
add
sbb
cmp
jl
pushf
rcl
fild
lods
mov
test
pop
je
push
mov
mov
sub
out
sbb
aas
fiadd
push
scas
sub
dec
inc
(bad)
aad
out
cmp
push
popf
inc
outs
pop
push
pop
scas
aam
nop
adc
shl
jns
inc
shr
or
cmps
arpl
imul
lea
mov
push
mov
mov
push
and
inc
or
sub
add
int
cdq
std
leave
into
cdq
pop
dec
dec
push
imul
sub
repz
lods
jmp
in
pop
push
inc
inc
gs
push
pop
mov
sbb
jl
mov
ins
mov
sbb
adc
push
shr
scas
or
popf
(bad)
and
xchg
fimul
lods
out
adc
xor
sub
and
sbb
inc
jp
out
or
ficom
call
aas
and
add
dec
ss
das
pop
push
xchg
scas
call
lods
and
push
ror
mov
nop
dec
jge
jbe
movs
popa
xor
(bad)
mov
sub
jecxz
shl
pop
call
adc
mov
daa
dec
xchg
lock
or
and
fiadd
das
lods
xlat
cld
and
(bad)
imul
js
test
mov
popf
jne
adc
leave
xchg
(bad)
jno
leave
lahf
adc
das
es
xchg
mov
or
push
or
movs
dec
sti
jecxz
mov
(bad)
cmp
jp
mov
(bad)
sbb
cwde
gs
fs
xlat
mov
call
pop
clc
mov
fist
or
adc
ficom
sub
lahf
das
dec
popf
cdq
pop
stos
ret
ror
push
inc
inc
xor
(bad)
adc
dec
js
fld
fdiv
xor
out
push
aas
mov
ficomp
xlat
mov
jnp
sbb
enter
inc
aas
cmp
dec
or
shl
mov
sbb
aas
ret
fs
dec
xor
cmova
sbb
pop
sub
call
xor
sbb
js
in
sub
mov
out
enter
dec
into
es
jle
pop
push
inc
in
mov
and
dec
test
add
js
sti
jo
or
sbb
outs
pop
jmp
xchg
aad
pop
out
stos
mov
loope
enter
inc
cmps
ret
fwait
retf
nop
int3
dec
or
repz
rcr
pop
mov
scas
pop
data16
sub
imul
and
fistp
not
cdq
jl
jmp
(bad)
ja
and
pop
inc
out
pushf
pushf
add
ss
mov
dec
adc
(bad)
mov
mov
mov
mov
pushf
inc
leave
dec
dec
stc
fild
ja
mov
outs
loope
sar
cmovg
clc
xor
shr
pop
pop
adc
xor
mov
shl
mov
outs
pushf
or
lods
es
xor
sub
pop
in
dec
(bad)
and
retf
mov
(bad)
xlat
mov
push
pop
or
movs
ret
or
fwait
sub
push
pusha
ja
(bad)
cmp
js
inc
jbe
adc
call
xchg
mov
dec
cmp
push
jg
in
pop
add
inc
call
and
sub
mov
sti
mov
jmp
stos
je
(bad)
xchg
loop
mov
sub
push
fsubp
inc
jle
and
add
inc
(bad)
sbb
inc
jge
call
cmc
stos
mov
push
mov
leave
push
mov
loop
aam
xchg
mov
jno
clc
scas
jmp
push
popf
add
popf
or
loop
inc
xchg
jne
jb
rcr
dec
loop
ja
sbb
and
jmp
out
mov
test
les
icebp
or
jnp
and
jno
stc
jl
lods
rcr
push
rcl
jmp
cmp
addr16
or
in
daa
adc
xchg
clc
push
sub
pop
fcomp
les
pop
(bad)
retf
or
sub
div
sbb
pop
inc
mov
mov
jb
mov
sub
jmp
outs
(bad)
(bad)
icebp
das
add
not
(bad)
(bad)
call
dec
rcl
dec
pushf
aad
mov
mov
dec
fcmove
(bad)
cmp
mov
fld
js
sub
mov
ret
adc
iret
sahf
sbb
xor
mov
mov
in
sbb
cs
xchg
adc
push
in
aas
sar
or
lock
mov
pop
dec
sub
fwait
out
movs
in
mov
sbb
test
pop
stos
mov
cmc
sbb
or
sub
or
mov
pop
imul
jnp
push
cld
inc
lock
loop
out
dec
add
cdq
ret
(bad)
pop
ja
sub
movs
jle
jmp
and
cmp
add
hlt
mov
pop
fsub
xchg
aas
jae
loopne
ins
rcr
and
xor
sub
sub
jne
clc
push
jp
sub
jbe
pop
dec
cmp
lahf
push
call
sahf
test
es
in
sbb
(bad)
std
(bad)
or
jp
aas
pop
xchg
jmp
push
inc
inc
mov
adc
and
das
clc
push
pop
sahf
mov
cmp
dec
jg
mov
mov
scas
xlat
dec
aam
sbb
jp
inc
ja
jl
push
addr16
mov
bswap
xchg
ret
int3
sub
seto
stc
or
shl
and
in
xor
pop
lods
sbb
mov
sbb
cmp
sbb
cmc
clc
ss
shr
sub
add
test
sbb
add
inc
dec
cmp
push
jecxz
pushf
jns
popa
pop
push
xchg
movs
jle
dec
or
cmp
pusha
aad
push
inc
mov
sub
outs
sbb
pop
dec
dec
dec
fdivrp
ret
sti
outs
or
push
push
pop
enter
int
push
mov
cmps
push
push
pop
stos
mov
mov
inc
outs
loop
scas
mov
lea
xchg
aam
pop
or
mov
lahf
popa
aam
xor
in
sub
xlat
or
push
fiadd
imul
or
icebp
jne
xchg
loope
sub
lds
mov
out
add
rol
push
pop
cli
mov
std
inc
push
aam
pushf
mov
xor
inc
add
sbb
mov
pop
loopne
cld
hlt
movs
ror
ficom
and
lods
fst
adc
cld
scas
ins
in
mov
cli
mov
pop
pop
jecxz
(bad)
mov
pop
jne
adc
jae
pop
sbb
pop
outs
mov
mov
sahf
and
mov
adc
inc
jbe
mov
push
outs
stc
sbb
ins
push
mov
pusha
pop
lock
jl
sub
retf
fild
xor
cmp
push
(bad)
mov
fwait
lods
push
xchg
cmps
cli
xchg
data16
fscale
inc
or
sub
fild
push
cvtdq2ps
dec
pop
xchg
fcomp
cld
jge
(bad)
popf
inc
dec
shl
pop
in
(bad)
test
jmp
mov
mov
loop
aas
mov
xchg
cli
movs
in
movs
inc
mov
repz
test
and
or
mov
repnz
sub
(bad)
stos
mov
dec
hlt
imul
movs
jecxz
dec
mov
ins
cmps
test
repz
mov
jp
xchg
inc
scas
retf
bound
sahf
cmp
das
je
inc
popaw
lea
pop
push
movs
xchg
fcmovbe
push
lea
fidiv
inc
push
movs
inc
and
and
sti
cmp
pop
loopne
dec
cmps
rcr
jb
in
jno
jmp
int3
pop
and
out
jmp
add
(bad)
js
push
mov
push
jmp
or
pop
cmp
ja
je
jbe
data16
test
sti
xchg
cmp
push
adc
jecxz
add
fdiv
repnz
sbb
inc
inc
push
ins
clc
rcr
jg
gs
dec
sahf
das
ds
cli
bound
xchg
inc
adc
push
jnp
jb
mov
jae
mov
add
fst
je
push
ret
icebp
dec
pop
mov
mov
ret
mov
xchg
mov
and
xor
mov
add
cmc
lods
xor
imul
jnp
out
movs
push
xor
into
dec
fwait
imul
retf
mov
ins
inc
pop
cwde
push
push
enter
fbstp
sbb
mov
jle
mov
mov
mov
or
jbe
mov
pop
pop
add
mov
outs
leave
cdq
ds
and
cmp
stos
xchg
sub
mov
jo
mov
cmp
mov
scas
mov
cs
lds
cmc
je
push
mov
or
inc
outs
xchg
call
mov
sbb
add
ds
jmp
gs
push
mov
ins
sub
mov
xchg
mov
lods
mov
xchg
pop
jg
jmp
(bad)
imul
(bad)
push
clc
push
dec
pop
pop
mov
ins
adc
sbb
scas
lods
loope
push
stos
lds
aam
neg
ss
shl
mov
pop
mov
fldcw
fs
test
mov
add
mov
stc
xchg
daa
loope
jno
and
pop
inc
dec
dec
mov
jne
mov
stos
and
xor
jmp
imul
dec
push
mov
mov
mov
inc
call
mov
test
nop
hlt
adc
pop
push
sti
jg
test
stos
mov
mov
pop
inc
cli
aas
push
jns
retf
aad
jge
xor
push
jno
push
jbe
mov
mov
imul
sub
out
(bad)
xchg
das
int
jbe
lea
jb
cld
dec
cmps
and
add
loopne
call
sahf
mov
(bad)
imul
dec
int
sub
(bad)
cmps
lock
icebp
push
imul
js
(bad)
(bad)
dec
dec
sbb
stc
and
popf
or
fs
aas
fst
pusha
jmp
jns
cld
frstor
add
dec
shr
mov
mov
(bad)
adc
jp
inc
lahf
cmp
outs
lock
sbb
out
sub
dec
push
push
icebp
mov
or
in
fild
loope
fcomp
or
sahf
jno
dec
jo
(bad)
aam
sti
mov
daa
cmp
or
mov
(bad)
out
lods
and
out
adc
sub
jne
xchg
cmps
xor
pop
int3
jmp
mov
cmp
dec
fdiv
add
xchg
push
outs
fistp
(bad)
jns
cli
adc
xchg
jmp
std
pop
test
inc
movs
ret
mov
(bad)
retf
push
movs
stos
inc
add
test
jle
pop
and
mov
pop
out
push
jo
or
hlt
sbb
sub
push
cmps
add
jmp
pop
loope
shl
loope
das
inc
inc
fist
mov
dec
mov
xorps
jno
pop
xchg
pop
push
and
dec
fsubr
add
(bad)
dec
xchg
or
xor
fsubr
lea
in
mov
sar
mov
das
dec
lods
xor
push
pop
sub
in
aad
fnsave
push
daa
jnp
mov
sbb
pop
mov
jge
lods
cmps
arpl
out
sub
aad
jnp
pop
jge
mov
not
aas
jno
inc
(bad)
addr16
and
(bad)
fwait
sub
cwde
in
(bad)
sub
sub
adc
aam
ss
fnsave
sahf
xor
adc
sbb
neg
sub
nop
rcr
inc
cs
pop
lock
push
sub
out
out
cwde
mov
pop
and
aam
dec
adc
fs
aam
inc
mov
jp
add
sub
mov
push
or
jb
outs
add
xchg
inc
iret
or
aam
add
jecxz
sbb
imul
xchg
call
arpl
ins
sahf
es
mov
int3
imul
loopne
mov
lahf
stos
fwait
ret
jns
adc
add
add
sbb
fcom
add
sbb
jecxz
ja
cmp
(bad)
fldlg2
(bad)
lods
sbb
adc
sbb
add
sbb
adc
call
mov
add
pushf
pop
sbb
cs
dec
pop
dec
mov
or
nop
dec
cld
stos
popf
cmp
js
add
mov
ud2
mov
push
add
rcr
mov
mov
imul
add
mov
stos
adc
in
lea
cmp
mov
in
lods
cld
sub
cld
mov
sbb
sahf
cmp
sbb
sahf
fcomp
ds
ja
je
and
cdq
fwait
ja
dec
stc
dec
sbb
pop
sti
and
add
mov
imul
enter
mov
dec
xor
jle
les
repz
loopne
cmc
cmps
xchg
loopne
cmp
inc
cld
not
lods
js
iret
add
jge
push
or
xchg
add
sahf
call
lods
mov
cmp
in
test
test
lea
iret
push
cmp
lock
clc
mov
dec
jl
outs
xchg
sti
pop
sbb
(bad)
cli
je
mov
xor
icebp
fwait
mov
xchg
xchg
ret
test
popa
pop
mov
cmp
ins
sbb
call
pop
jge
mov
push
and
add
and
imul
cmps
or
mov
inc
ins
loopne
icebp
clc
push
les
sbb
add
in
mov
test
mov
stos
add
sub
adc
sbb
mov
dec
rol
xor
push
mov
jae
adc
inc
(bad)
push
jge
jbe
cwde
push
sbb
bound
add
mov
lock
adc
cmp
cmp
xor
test
mov
jns
enter
add
fldenv
sti
push
cmp
es
mov
xchg
and
dec
push
pop
push
pop
lock
sub
mov
jae
push
pushf
mov
sbb
mov
or
add
pop
inc
das
enter
xchg
sub
mov
sub
lahf
mov
clc
enter
in
fsub
xlat
inc
jle
retf
test
ins
sub
test
push
xchg
cmps
je
push
push
sbb
dec
call
lahf
lds
loopne
iret
ror
cmps
daa
push
fmul
shr
cmps
out
jmp
ins
sahf
add
in
out
pop
in
out
sbb
cdq
fldcw
push
mov
in
(bad)
leave
lods
sub
cmp
fs
pop
cdq
xor
mov
gs
sub
dec
into
mov
jb
(bad)
jecxz
pop
aam
in
pop
inc
push
scas
dec
test
and
cmp
add
scas
mov
mov
jp
xchg
shl
gs
or
mov
add
xor
aam
dec
out
inc
mov
into
xor
push
test
mov
and
je
mov
adc
int3
xor
jg
dec
or
push
mov
test
sub
inc
xor
lock
cmps
div
rcr
nop
iret
sub
sub
sti
inc
pop
xor
mov
adc
sar
cmps
push
pop
add
xchg
sahf
je
and
icebp
jns
fisub
jle
pop
xchg
jo
xlat
fwait
(bad)
jnp
xor
fadd
mov
aad
imul
cmp
ins
std
or
adc
repnz
daa
aam
mov
ins
mov
adc
sar
loopne
aad
xor
xchg
rcl
ss
push
xor
mov
push
jne
test
enter
inc
push
iret
adc
mov
(bad)
in
repz
pop
inc
inc
call
xor
push
cmps
jecxz
and
pusha
add
pop
push
push
fadd
push
retf
jge
pop
push
out
movs
ret
jno
imul
dec
and
inc
test
jmp
loop
adc
js
adc
push
scas
mov
pop
push
add
inc
outs
mov
ja
mov
loop
jge
sti
lahf
jno
cmp
das
dec
dec
mov
cmps
cld
fidiv
dec
jo
clc
sti
das
cmp
call
es
jge
and
clc
sar
daa
xchg
in
push
mov
or
push
ret
xchg
in
jl
stos
mov
jns
pop
lods
sub
ficom
cmps
cmp
in
push
push
in
sahf
mov
mov
jno
pop
and
fs
nop
test
fmul
push
retf
movs
mov
into
ss
retf
dec
dec
aam
shl
movs
pop
imul
cmp
inc
gs
loop
dec
push
retf
popa
push
mov
cmc
dec
jge
scas
outs
bound
sbb
and
pop
mov
xor
add
test
retf
or
movs
sub
dec
lods
clc
int3
lods
adc
or
stos
imul
jmp
sub
arpl
shr
cs
mov
hlt
data16
cmp
or
ficom
mov
mov
sahf
jo
dec
mov
mov
cmp
cdq
cli
push
add
mov
jge
add
mov
mov
sub
dec
push
imul
pop
popf
pop
and
add
mov
add
scas
call
dec
and
sub
inc
sub
stc
cmps
fdivr
cld
pop
sbb
leave
sbb
test
push
inc
int3
int
stos
mov
lods
xchg
jmp
cmps
push
pop
nop
push
int3
int
inc
cmp
xchg
jmp
push
and
adc
mov
enter
jl
jb
jns
mov
(bad)
hlt
cs
loope
push
leave
int
aas
test
fnstcw
es
and
call
or
or
rep
fwait
daa
jb
inc
sbb
push
add
sub
push
push
or
push
sbb
shr
mov
movs
xchg
push
push
mov
int
ret
pop
fstp
or
pop
loopne
xor
add
sbb
push
out
inc
mov
or
and
push
push
inc
leave
outs
pop
pop
(bad)
fimul
(bad)
(bad)
in
xor
jp
mov
push
push
pusha
icebp
push
xor
ficomp
lahf
and
or
jnp
xor
jle
das
ret
push
fisubr
shl
mov
popa
popf
movs
cmp
es
or
int
sub
push
mov
fidivr
imul
xchg
push
add
pop
not
xor
mov
adc
inc
es
jno
mov
addr16
clc
xchg
jae
repnz
in
mov
or
pop
cli
add
in
mov
mov
je
push
ins
scas
mov
inc
pushf
test
sub
jmp
dec
adc
jecxz
and
test
mov
push
mov
das
mov
gs
pop
pop
xchg
test
pop
ror
test
add
(bad)
stos
dec
mov
int
jmp
fisub
and
mov
enter
mov
xor
mov
mov
xlat
dec
call
add
xchg
mov
aam
arpl
sbb
add
fsub
pop
hlt
daa
fimul
mov
dec
cmps
out
mov
imul
jbe
stos
jne
sbb
adc
push
int
jbe
repz
xor
nop
pusha
(bad)
mov
mov
outs
pop
jnp
xlat
jmp
cmp
mov
mov
sbb
jecxz
mov
ds
cmp
enter
adc
addr16
test
bound
or
inc
pop
lahf
dec
stos
adc
pop
daa
mov
or
mov
das
jmp
in
aas
jge
test
test
and
aaa
inc
xchg
aas
sub
jb
push
sub
rol
sbb
mov
loop
add
aas
jo
pop
or
mov
popa
(bad)
in
pop
dec
jle
out
push
mov
dec
sti
add
mov
mov
dec
pop
mov
mov
ins
or
push
mov
jb
pop
std
mov
scas
cmps
push
div
fs
jne
retf
mov
push
or
idiv
out
inc
cs
xor
(bad)
xchg
fiadd
fwait
scas
jns
sub
imul
int
inc
sub
out
cmp
jge
push
ror
or
popa
(bad)
idiv
cmp
mov
dec
loop
lock
(bad)
or
adc
mov
jne
data16
test
icebp
imul
lods
ror
sub
xor
sub
add
dec
and
out
push
push
and
sbb
xchg
fstp
add
push
inc
jnp
stos
sti
pop
pop
movs
test
jae
mov
clc
adc
out
or
mov
or
jno
in
shl
gs
pop
sub
xchg
mov
idiv
push
xor
inc
sub
push
cs
addr16
mov
jl
xchg
add
adc
lea
daa
(bad)
pop
mov
jbe
call
xchg
mov
add
and
sub
pop
adc
push
mov
lea
in
and
std
dec
xchg
stos
mov
pop
das
xchg
out
js
out
movs
sbb
push
or
imul
mov
sub
add
test
clc
call
es
pop
jp
aad
imul
inc
xor
test
call
ins
mov
fsub
dec
repnz
add
and
inc
mov
test
std
retf
sub
cmp
jo
in
ret
lahf
dec
jnp
or
push
dec
ins
mov
mov
repnz
dec
je
jmp
mov
call
xchg
retf
or
stos
push
mov
xchg
jmp
leave
pop
mov
pop
es
mov
cmps
mov
das
in
lahf
(bad)
fmul
cmp
ror
adc
mov
push
retf
push
mov
cmp
pop
mov
sbb
dec
push
inc
fst
outs
pop
cmc
jbe
xchg
xchg
xor
test
add
mov
push
movs
mov
mov
xchg
adc
jb
xchg
jle
loop
lds
out
and
ins
cli
mov
add
sti
sbb
aaa
cli
sbb
jge
stc
mov
in
add
cli
test
icebp
mov
fimul
fld
mov
sbb
xor
add
pop
mov
mov
adc
sbb
lock
js
mov
outs
mul
nop
fstp
pusha
imul
stos
jg
jbe
pop
add
add
jmp
movs
or
je
mov
xor
sbb
push
push
jbe
loop
pop
fiadd
jg
pop
(bad)
es
lods
cwde
add
gs
cdq
in
cmps
adc
mov
jns
jecxz
enter
mov
(bad)
jne
xchg
and
retf
sbb
cld
mov
fidiv
cmp
and
adc
xchg
xchg
push
inc
jo
add
xchg
int3
mov
xchg
push
mov
and
retf
leave
cmp
and
and
sub
sbb
ds
je
fistp
add
cmp
and
(bad)
jge
movs
test
fdiv
xchg
iret
push
mov
out
cmp
sti
pusha
push
pop
scas
sbb
dec
add
mov
fs
dec
xchg
ins
adc
sbb
cmp
mov
arpl
or
repz
imul
push
sub
aad
xchg
inc
lds
add
mov
cmp
(bad)
mov
fimul
or
xchg
jle
mov
dec
mov
fstp
pop
cld
mov
inc
jge
push
add
or
push
sub
jg
test
add
or
pop
lds
adc
cmp
xchg
cmp
mov
popa
jp
jle
test
mov
(bad)
int3
lahf
jmp
out
add
and
pusha
mov
mov
loopne
ret
bound
fs
stos
xor
retf
fsubr
daa
repnz
mov
cmp
cmp
push
pop
sbb
fs
das
mov
mov
pushf
data16
inc
movs
push
mov
or
mov
push
xchg
(bad)
cmps
mov
movs
dec
and
or
inc
mov
fld
lods
in
cdq
sub
or
cld
rcr
pop
xchg
outs
mov
pop
icebp
fnstenv
sbb
push
sti
xor
xor
adc
(bad)
mov
or
lea
mov
sub
add
fwait
jae
test
pop
fidivr
push
jecxz
push
cmp
inc
push
mov
dec
pop
cmp
lds
and
stc
ror
sub
ins
(bad)
adc
pusha
jns
add
pop
sub
out
and
cmp
xchg
and
or
sub
mov
sbb
push
mov
pop
jl
pop
inc
push
add
push
in
jmp
stos
adc
sbb
jb
and
pop
inc
pop
dec
xlat
push
test
and
out
sahf
jge
popf
jae
cmps
int3
pop
imul
xchg
fidivr
rol
scas
pushf
push
jae
into
jns
xchg
xor
xor
ja
jge
je
cwde
loope
mov
cmc
ds
mov
inc
and
xchg
fadd
ret
pop
mov
js
xlat
das
fst
iret
push
shl
jnp
sbb
mov
repnz
test
fist
out
int3
out
jb
jmp
mov
sti
jecxz
push
add
and
cmps
fwait
ret
in
adc
sbb
icebp
push
pusha
mov
lea
mov
test
or
icebp
mov
shr
aas
mov
jo
data16
enter
xchg
add
addr16
xor
test
das
inc
hlt
je
cwde
imul
mov
mov
ficom
fwait
sbb
jl
cdq
ins
loopne
icebp
test
mov
daa
das
jmp
jge
jmp
mov
adc
adc
in
add
sub
mov
mov
nop
jno
inc
fdivp
in
or
pop
jo
jg
push
add
popa
dec
sub
xor
(bad)
mov
pop
inc
xchg
mov
dec
lods
in
mov
xchg
js
int3
mov
cli
(bad)
add
dec
shl
punpckhwd
inc
pop
and
pop
push
jge
je
sub
retf
out
scas
(bad)
ins
ret
rcr
loope
mov
call
xor
mov
stc
push
ret
test
xchg
jmp
and
fistp
mov
xor
dec
scas
cmp
retf
jne
outs
mov
ins
ss
jae
and
pop
pop
fnstenv
(bad)
jo
xchg
jmp
sub
aas
mov
pop
mov
pushf
pop
mov
ins
ficomp
dec
loop
mov
cmp
and
test
adc
shr
iret
mov
or
or
sbb
(bad)
mov
in
jle
mov
outs
lods
(bad)
and
ja
dec
js
in
push
aas
inc
mov
idiv
jle
int3
bound
jmp
and
fst
xor
push
push
mov
loop
das
test
push
sub
mov
mov
jmp
push
push
ror
push
or
dec
movs
cld
ficomp
jmp
push
jo
jns
xchg
retf
popa
xchg
and
adc
repz
movs
sub
ins
fild
jne
jmp
pop
(bad)
and
aam
push
sbb
xchg
cmp
lods
test
cli
into
ret
and
and
in
loopne
sbb
aas
call
clc
push
jmp
cld
pop
sub
pop
mov
sub
xchg
popa
sbb
mov
dec
jecxz
test
jmp
cli
pusha
push
test
mov
jmp
jbe
mov
sbb
pop
pop
mov
or
cdq
cmp
lods
mov
jl
xchg
out
bound
mov
sahf
mov
mov
dec
(bad)
fprem
or
in
es
lahf
loopne
inc
mov
cmp
lock
sub
and
aad
aam
pop
neg
or
leave
mov
pusha
mov
sub
cmps
scas
xchg
xor
lea
pop
dec
cmp
mov
xchg
cwde
sbb
inc
or
xchg
mov
imul
pop
jmp
addr16
pop
in
jne
popa
adc
popf
adc
jne
mov
xchg
aad
out
adc
mov
lea
and
(bad)
mov
mov
and
jns
add
jg
clc
cmps
push
jmp
stos
sub
out
sub
dec
and
jg
cmc
mov
(bad)
out
push
leave
cpuid
fdivr
sbb
es
inc
inc
push
lock
fiadd
jmp
retf
inc
call
jae
int3
dec
sub
cdq
pop
jne
pop
xchg
xchg
push
sbb
cmp
scas
adc
mov
stos
mov
sub
out
loop
sub
stos
mov
lods
and
pop
push
into
jne
lds
aam
bound
inc
sub
add
les
(bad)
lock
xchg
test
ins
xor
pop
push
and
(bad)
repnz
addr16
int
cmp
dec
adc
aaa
(bad)
mul
push
sbb
ins
(bad)
push
shl
sub
rol
inc
and
jecxz
add
mov
mov
push
fwait
ror
sbb
jl
cli
std
gs
cld
adc
cmp
xchg
test
push
add
pushf
cmps
addr16
imul
call
jno
adc
add
add
cmp
ret
adc
jb
test
mov
pop
xchg
mov
sub
push
daa
addr16
xchg
push
jmp
sbb
mov
and
sbb
iret
and
mov
xor
in
iret
call
dec
xchg
add
daa
push
int
lahf
mov
push
mov
inc
outs
lds
out
mov
xor
pop
outs
aad
xor
jne
ret
cmp
mov
out
add
leave
(bad)
out
cmp
test
test
iret
mov
fisttp
aas
cmp
mov
xchg
add
push
ret
movs
push
or
cmp
xor
test
cmp
in
movs
jge
and
lock
test
xchg
add
popa
clc
rcr
xchg
(bad)
push
sbb
addr16
dec
add
shr
jl
in
rcr
add
mov
jge
or
pop
add
cmovs
es
xor
ficomp
cli
call
repz
jecxz
mov
mov
xor
xor
leave
fldcw
inc
inc
fwait
dec
xor
mov
inc
xchg
mov
cmp
inc
pop
lods
mov
dec
or
rcr
xor
xor
inc
(bad)
mov
add
xchg
(bad)
push
dec
mov
jmp
jnp
hlt
sub
mov
mov
out
retf
fdivr
cmc
mov
mov
mov
sbb
lods
xchg
sub
and
jno
xor
data16
cdq
jmp
jmp
ss
jecxz
cmp
shr
not
push
cs
fcomp
push
(bad)
jge
mov
shl
sub
xchg
imul
enter
out
mov
sbb
ret
fidiv
ja
retf
mov
(bad)
push
icebp
mov
arpl
cwde
mul
pusha
mov
add
pushf
sbb
leave
and
mov
enter
(bad)
push
xchg
cmp
jl
repz
lods
cmp
xor
cmp
mov
mov
jne
jmp
fwait
test
call
add
add
shl
sbb
add
aad
adc
mov
xchg
dec
jecxz
adc
sahf
lock
cmp
sub
mov
cmp
inc
pop
call
push
rol
cmp
jnp
adc
xchg
dec
out
cld
rcl
sbb
sbb
adc
and
fs
push
mov
jno
xor
icebp
repz
bound
mov
push
nop
jge
cwde
test
adc
mov
in
add
sti
xor
inc
and
loopne
dec
ret
jb
jl
mov
mov
enter
imul
leave
fisttp
and
jmp
ret
in
test
je
bound
idiv
cmps
inc
push
sbb
gs
cdq
aam
adc
inc
push
push
jne
push
mov
test
pop
repnz
call
mov
dec
movntps
mov
jno
ds
fld
fst
jbe
outs
ja
or
aaa
sub
push
mov
pop
(bad)
mov
es
addr16
xchg
push
bound
shr
add
enter
jnp
mov
out
test
and
cld
jae
div
out
push
ins
cdq
mov
sbb
aad
mov
adc
(bad)
les
mov
push
push
dec
aam
out
repnz
inc
out
dec
bound
retf
lods
aad
jecxz
sub
std
mov
sub
push
into
out
out
cmc
xchg
pushf
syscall
and
xchg
push
sub
scas
or
adc
pop
mov
les
mov
add
data16
jb
or
sbb
push
push
sti
(bad)
repnz
ds
and
icebp
shl
ins
scas
mov
loope
shr
push
scas
push
loop
or
inc
fsub
loope
pop
gs
mov
adc
(bad)
mov
inc
sbb
aaa
hlt
cld
dec
loop
xor
out
push
xor
xchg
inc
popa
enter
int3
dec
fnstenv
arpl
pop
and
in
(bad)
mov
push
popf
mov
add
or
icebp
xchg
iret
pop
iret
in
xor
std
imul
add
into
and
bound
hlt
arpl
out
or
call
push
pop
fld
xchg
ror
or
das
imul
repnz
popf
popf
outs
mov
mov
jmp
push
(bad)
xor
xor
rcl
dec
(bad)
push
sub
mov
out
mov
pop
nop
arpl
aas
mov
mov
stos
call
adc
movs
xchg
pop
jmp
movs
push
add
mov
push
push
cmp
mov
xor
scas
ror
dec
pop
lds
mov
shl
rcl
(bad)
repnz
retf
sub
inc
pop
xor
push
nop
adc
mov
sar
icebp
mov
mov
fild
inc
ds
call
sbb
sahf
xor
sbb
mov
and
jne
or
mov
inc
call
inc
and
sub
loopne
sbb
cmp
pop
gs
sub
aas
dec
(bad)
or
call
xor
sbb
ins
movs
fcomi
xchg
pop
cmc
inc
sbb
push
addr16
sbb
call
retf
mov
jno
xor
(bad)
fbstp
addr16
cld
dec
mov
cmps
cmp
jmp
or
aad
lock
nop
jle
not
push
inc
pop
push
addr16
movs
adc
mov
sbb
idiv
or
cmp
js
and
dec
addr16
test
inc
cwde
and
jge
push
add
popf
jecxz
dec
and
dec
inc
cmp
mov
ins
pop
test
es
and
add
dec
ja
imul
shl
imul
sbb
in
nop
das
add
mov
daa
mov
cmp
scas
pop
xchg
scas
mov
cli
push
sbb
sar
adc
scas
cmp
push
imul
loopne
shl
pushf
movs
dec
stc
lods
add
cmp
mov
cs
xor
sub
retf
xlat
(bad)
push
and
mov
cwde
xchg
(bad)
inc
sub
outs
dec
cs
daa
mov
mov
into
sbb
pop
push
mov
push
xor
mov
mov
leave
jno
(bad)
adc
ror
push
mov
pop
icebp
test
dec
jg
imul
lea
cmp
push
and
cmp
repz
retf
inc
inc
pop
mov
les
jg
fs
push
test
rcr
shl
outs
cld
xchg
jbe
in
push
dec
mov
popw
push
jecxz
dec
mov
retf
and
add
inc
inc
lods
test
call
mov
mov
daa
mov
stos
movs
push
and
mov
dec
and
call
shr
xchg
ja
ret
cmp
dec
jnp
aaa
pop
ja
lods
xchg
nop
shl
inc
sbb
pop
pop
lea
pop
lds
mov
aas
xchg
je
enter
and
es
pop
lds
or
test
adc
mov
call
(bad)
jmp
jge
push
pop
cwde
ds
(bad)
cmp
not
jge
add
movs
mov
dec
xor
jmp
and
lods
mov
jmp
cwde
pop
pop
cmp
push
ret
sbb
test
fwait
das
lods
lea
lods
pop
ror
mov
ins
cmps
mov
jmp
xor
dec
add
cmp
mov
dec
idiv
jne
cld
clc
dec
jge
push
xchg
fisttp
cmps
inc
jb
js
xchg
jecxz
and
jmp
sub
mov
in
or
sbb
xchg
jge
mov
loope
adc
mov
pop
scas
xchg
mov
nop
or
jbe
mov
mov
imul
leave
mov
stos
shr
repnz
test
mov
push
dec
imul
mov
test
enter
call
shl
adc
and
pop
jno
mov
int3
call
dec
add
leave
and
out
sbb
hlt
xor
mov
xchg
cmp
mov
and
pop
mov
outs
adc
xchg
adc
dec
out
cmc
fadd
movs
shr
sbb
jae
clc
in
hlt
ror
lods
test
lods
jno
jmp
arpl
rcr
mov
push
cs
nop
mov
loope
fist
test
push
push
scas
inc
popa
xlat
add
stos
sar
ins
xchg
shl
xchg
push
xchg
fild
mov
mov
xchg
cmps
xchg
add
jne
adc
nop
or
test
shl
jbe
outs
pop
repnz
sub
das
push
aaa
or
inc
arpl
add
cmp
push
sbb
cmp
xor
add
mov
dec
jmp
fidivr
mov
addr16
retf
int3
in
cmps
stc
and
ja
mov
lds
mov
dec
push
adc
lods
es
(bad)
cdq
ret
push
xchg
clc
loope
xchg
mov
mov
test
xchg
pop
jg
or
mul
aaa
mov
scas
xlat
ja
jmp
xchg
out
jb
add
lea
(bad)
dec
pop
cmp
imul
sub
lds
dec
sbb
add
mov
call
mov
cld
push
ss
rol
xchg
xchg
out
movs
scas
xor
cs
cmp
aad
or
pop
lds
(bad)
loopne
dec
mov
xchg
xchg
mov
pop
fisubr
arpl
cmps
cld
fdivr
imul
push
addr16
cmc
scas
xchg
fucom
cmps
out
mov
lock
(bad)
cli
jbe
neg
mov
cmp
rol
mov
jbe
xchg
jb
and
mov
or
mov
fldenv
pop
xor
stos
jge
rcr
int
rdpmc
mov
out
push
out
fcomp
push
push
out
xchg
xor
shr
or
scas
mov
fld
popf
pop
pop
push
dec
push
pusha
hlt
icebp
xchg
mov
mov
movs
ins
pushf
fstp
jnp
xchg
rcl
lods
and
jns
daa
popf
or
data16
lods
push
push
out
dec
jecxz
cmp
add
sub
cmps
mov
jmp
imul
imul
mov
dec
inc
xchg
xlat
inc
shr
outs
jecxz
cmp
pusha
pop
pop
cmp
call
or
cmp
mov
xchg
repz
popa
shl
push
or
mov
ror
sti
jns
cwde
mov
or
mov
ror
push
jmp
xchg
xchg
mov
stos
xchg
leave
int3
in
scas
fwait
pop
cmp
outs
pop
jb
push
dec
or
hlt
jl
icebp
out
xlat
(bad)
clc
or
cld
mov
push
mov
cmp
(bad)
sbb
in
fwait
retf
xchg
or
movs
int
pop
push
jl
mov
loop
mov
outs
je
xor
movs
out
push
dec
mov
into
mov
adc
mov
adc
push
rcl
nop
cmp
jno
xlat
sub
mov
adc
jmp
sbb
cmp
mov
lahf
add
mov
mov
repnz
push
movs
cs
loope
and
mov
fdiv
in
mov
iret
adc
xchg
or
sahf
aaa
fwait
push
sub
xchg
mov
jle
call
imul
jp
lods
sub
call
aad
fisttp
push
fldenv
(bad)
rol
out
ja
jmp
(bad)
push
into
jo
stos
push
out
add
mov
sub
test
js
popf
mov
pop
gs
xor
adc
mov
cmc
dec
(bad)
cdq
imul
lds
iret
jno
nop
pop
movs
loope
sub
mov
hlt
fucomp
out
(bad)
pop
in
inc
mov
push
add
sub
dec
pop
loop
jnp
hlt
mov
jmp
jns
push
psubsb
xlat
inc
pop
pop
leave
out
push
outs
sahf
icebp
inc
pushf
int
clc
or
into
xchg
push
jge
shr
stc
dec
std
adc
pushf
cmp
loop
lods
add
repz
or
cmp
push
jmp
xlat
cmp
sub
(bad)
or
aaa
out
(bad)
push
jl
shl
lahf
int
push
out
cdq
lahf
hlt
mov
pop
pusha
push
push
test
pminsw
lods
rol
outs
div
movs
cli
(bad)
mov
in
rcl
jg
in
and
sub
add
test
sbb
jnp
dec
xchg
test
mov
or
add
lods
daa
movs
les
xor
add
cmp
cmc
aam
cmc
jno
add
inc
imul
bound
ret
jns
imul
(bad)
jmp
retf
pop
fcmovbe
fadd
sub
dec
mov
jnp
test
repz
xor
pop
sub
jg
ret
in
lock
inc
and
aas
mov
sti
outs
or
push
test
mov
pusha
xchg
mov
rcr
cmp
pusha
ins
rcr
(bad)
jge
push
in
fistp
(bad)
add
pop
into
imul
xlat
cmp
mov
jg
jae
repnz
dec
or
pop
sbb
pop
mov
hlt
jns
in
inc
mov
push
cdq
repnz
addr16
or
mov
push
adc
cmc
in
pop
call
test
int3
add
rcl
xchg
push
iret
ret
sti
cli
movs
repz
mov
and
sbb
test
hlt
push
aam
sub
mov
mov
pop
add
mov
hlt
mov
lea
(bad)
mov
cmps
push
inc
jns
adc
jle
(bad)
gs
push
(bad)
pushf
mov
int3
pop
cmp
outs
scas
(bad)
std
iret
stc
(bad)
in
jns
sub
fist
bound
mov
pop
jg
fisttp
movs
dec
(bad)
adc
inc
cmc
sub
ror
inc
xchg
in
call
push
dec
out
jns
push
mov
and
aad
push
cmp
or
sbb
xchg
les
ret
add
ret
stos
push
shr
pushf
repz
repz
jp
scas
ret
jmp
mov
iret
loope
dec
adc
push
mov
mov
ins
inc
out
mov
loopne
into
test
jbe
lods
mov
mov
cmp
push
dec
imul
dec
adc
out
xor
addr16
pop
cmp
sbb
mov
inc
adc
and
es
fstp
nop
cmp
add
icebp
push
fwait
mov
cwde
jmp
cmc
push
sti
std
jne
inc
jge
pop
or
mov
dec
and
pushf
pushf
pop
mov
inc
lock
loope
xchg
push
je
sbb
aad
jecxz
sbb
inc
fsubp
xchg
fwait
div
ins
mov
or
push
add
push
xchg
dec
repz
cmp
fcom
mov
inc
repnz
xchg
mov
loope
outs
push
sub
fwait
mov
mov
fsubr
(bad)
xor
call
lea
fcomp
mov
sbb
or
(bad)
fnsave
pop
inc
nop
outs
add
retf
adc
add
push
cmp
push
into
or
jg
jge
dec
or
bound
arpl
mov
jp
dec
cmp
das
jns
(bad)
ins
mov
jmp
fidiv
(bad)
fcomp
pop
mov
bound
adc
cld
stc
daa
in
pusha
out
jg
(bad)
pop
dec
mov
scas
xor
cld
push
inc
add
icebp
fisubr
adc
xlat
(bad)
push
inc
jecxz
lds
fsub
pop
jno
mov
ds
dec
sbb
nop
xchg
clc
sub
mov
gs
cmp
ja
or
jmp
or
mov
and
push
fld
jnp
pop
xchg
aas
push
loope
and
in
fist
out
fs
mov
sub
mov
pusha
dec
outs
jl
mov
pop
pop
iret
adc
in
cmp
push
xchg
scas
leave
fld
pop
std
mov
rcl
sar
pop
rep
retf
je
mov
adc
or
in
add
push
iret
jno
dec
adc
test
ror
push
shr
into
push
lods
sub
mov
cmp
mov
sub
cs
xchg
or
mov
sbb
xchg
jle
xchg
jnp
cmps
dec
push
out
aam
cdq
in
rcr
xchg
push
add
jge
pop
push
scas
mov
jmp
mov
xchg
(bad)
mov
addr16
bnd
bnd
push
cs
jne
fnstsw
pop
js
cdq
mov
(bad)
or
push
(bad)
xor
pop
mov
mov
(bad)
(bad)
sbb
(bad)
popa
inc
outs
and
fdivr
sbb
pop
push
jmp
ss
jge
cmp
movs
popa
shl
ja
dec
in
xor
xor
push
neg
jo
jne
pop
dec
pop
repnz
mov
test
iret
sub
or
sbb
lods
(bad)
fsub
fs
mov
xor
fiadd
mov
cld
or
mov
mov
mov
mov
jle
into
retf
mov
xor
and
add
xor
xchg
inc
sub
fwait
and
mov
mov
add
push
cmp
daa
mov
rcr
add
cmp
or
imul
cld
inc
stos
add
shl
mov
(bad)
in
or
cmp
mov
add
neg
sti
fs
rcl
push
mov
and
in
xor
and
test
and
in
dec
fcmovne
add
mov
scas
lods
jmp
push
xchg
fs
xor
mov
inc
add
std
xchg
outs
add
into
in
lds
inc
fidiv
sub
cmps
rol
push
pop
mov
mov
loopne
jo
mov
mov
dec
mov
mov
push
add
mov
imul
jb
dec
rcr
sub
and
or
inc
pop
inc
push
sub
pop
xchg
outs
rcl
popa
imul
cs
cdq
xor
push
dec
js
pop
(bad)
int
push
loop
mov
(bad)
mov
nop
adc
call
sbb
mov
rol
jg
xor
pop
ins
or
adc
fdiv
or
add
or
inc
inc
fwait
mov
int3
xchg
sub
xchg
mov
jg
adc
aam
adc
retf
cmp
mov
pop
test
fucomp
test
and
dec
outs
mov
adc
sbb
stos
clc
and
sub
ret
sub
mov
xchg
sub
ds
ins
loop
cli
xchg
push
and
adc
dec
out
xor
test
in
data16
ret
push
pop
aad
aas
or
and
mov
jo
mov
pusha
cvttps2pi
jmp
inc
scas
jmp
push
xor
mov
fsubr
rol
stos
cld
cli
sti
pop
cmp
and
cmc
pop
pushf
rcl
ror
or
pop
test
jo
mov
or
lahf
je
bound
repz
in
sti
dec
retf
leave
or
inc
pop
xor
lods
xor
jmp
xor
fwait
mov
rcl
rol
mov
popf
push
addr16
in
dec
adc
out
add
jnp
jecxz
adc
fidiv
adc
xchg
inc
cmp
loopne
pop
cld
sub
sahf
mov
iret
repnz
loope
shl
into
icebp
jo
les
and
retf
jnp
movs
fwait
jmp
add
je
sbb
xchg
stos
sbb
cli
movs
fidiv
into
daa
cmc
push
fwait
mov
dec
cs
icebp
mov
jp
arpl
cli
pusha
jno
int3
xchg
xor
xchg
sub
push
cmp
xchg
pop
inc
xchg
pop
shr
retf
add
inc
das
in
imul
push
movs
fidiv
adc
lds
cdq
xchg
mov
mov
pop
mov
stos
dec
jle
fnstsw
out
cmp
jne
lods
cmp
rcl
jb
lock
ss
loope
cmp
sbb
xchg
outs
jge
inc
add
stc
fs
xor
dec
pop
add
leave
sahf
cld
fs
clc
inc
rol
call
mov
inc
lods
loope
ret
pop
cmp
ficom
test
jmp
mov
test
enter
out
out
mov
dec
test
jmp
add
mov
(bad)
int3
fcom
xor
popa
in
(bad)
push
test
fst
cs
xor
dec
jnp
sub
jg
(bad)
repnz
xor
sbb
mov
dec
ret
out
xchg
adc
xor
xor
cs
clc
scas
fsubr
dec
sub
dec
ret
jl
and
jl
cvtpi2ps
and
les
jae
pop
cmp
mov
jns
aad
ss
jp
pop
jmp
xchg
xchg
and
or
and
pop
test
and
popa
inc
and
(bad)
clc
sub
pop
test
in
jb
jns
(bad)
outs
or
pop
push
mov
xchg
in
fwait
mov
ins
int
ja
(bad)
push
sbb
dec
cmp
movs
mov
add
loope
adc
ret
mov
in
inc
call
dec
(bad)
cmc
cs
retf
cli
adc
fisttp
xchg
mov
inc
imul
fwait
mov
ins
arpl
hlt
pop
dec
pusha
ds
mov
pop
jle
and
fwait
mov
daa
cmp
xor
sub
repz
int
jns
push
(bad)
dec
ret
xchg
jns
push
(bad)
adc
scas
cmps
outs
ins
leave
or
pop
xor
jp
iret
xchg
mov
sahf
xlat
or
dec
stos
jbe
xchg
rol
xchg
iret
adc
xchg
jmp
int3
adc
shl
cmps
xchg
mov
aad
iret
push
inc
sahf
mov
jb
out
xchg
scas
mov
lahf
push
fdivr
mov
jmp
adc
mov
sbb
ret
push
rol
mov
lock
mov
(bad)
adc
sub
push
add
into
sbb
call
add
outs
test
stos
push
mov
out
int3
jno
xchg
setbe
out
xor
mov
inc
pop
sbb
sub
or
fnstcw
adc
add
adc
data16
cmp
lods
push
xor
jmp
jnp
sub
rcr
mov
fwait
out
pushf
pop
dec
les
mov
xchg
sar
sub
jno
lods
iret
arpl
dec
or
jb
in
dec
mov
push
movs
sub
test
shl
sar
pop
dec
adc
lahf
lods
fild
fnsave
pop
sub
out
pop
hlt
adc
add
cmp
dec
cmps
adc
xor
sub
fcomp
(bad)
pop
movs
je
scas
pop
mov
data16
cmc
shl
test
aad
fdivr
fsub
jmp
stos
push
bnd
ror
xor
push
mov
jae
pop
fsub
(bad)
test
dec
jge
sub
sti
repnz
dec
push
ret
lods
dec
cvtpi2ps
lock
std
push
add
es
mov
mov
and
imul
(bad)
out
sbb
dec
rol
test
aaa
xchg
adc
mov
sbb
ds
scas
ror
mov
in
fucomi
mov
xchg
pop
sub
push
xchg
sub
push
fs
jmp
jns
les
cmc
jno
mov
mov
and
fnsave
ja
aas
cdq
push
cmps
inc
push
and
pop
lock
mov
mov
mov
inc
sbb
mov
dec
or
sub
(bad)
mov
pop
bound
fs
out
movs
dec
loope
stos
and
lahf
lods
pop
punpckhwd
jno
outs
xor
cmp
or
(bad)
push
dec
jo
(bad)
push
sbb
mov
add
or
imul
sub
xor
sbb
mov
shl
cld
inc
push
push
add
jmp
jg
and
push
mov
shl
(bad)
cld
div
adc
ds
(bad)
cmp
scas
sub
icebp
into
push
movs
sbb
ret
and
add
lea
test
cmp
jmp
mov
mov
sbb
or
dec
popf
mov
call
icebp
mov
cmp
and
jns
mov
mov
pop
pushf
fisub
mov
push
mov
sub
cmps
fmul
jne
lods
(bad)
ror
in
sahf
sbb
push
cmp
ja
stos
mov
or
adc
dec
jecxz
and
mov
or
sub
enter
or
dec
and
mov
add
push
jmp
push
cmp
mov
mov
loope
pop
mov
cmp
icebp
push
adc
das
fwait
cmp
aaa
retf
scas
mov
test
cmps
xchg
sbb
mov
sub
push
inc
shl
xchg
(bad)
data16
mov
jp
repz
mov
imul
lods
psubq
mov
mov
test
pop
dec
test
fisttp
and
mov
mov
aam
dec
cmp
addr16
push
push
jle
sbb
call
lahf
push
xor
arpl
jo
icebp
mov
jae
arpl
sub
mov
xchg
adc
or
sub
or
ficomp
cmp
mov
dec
aam
std
or
adc
adc
mov
call
and
xchg
cwde
mov
out
outs
or
std
sbb
imul
arpl
sahf
sub
mov
leave
les
cmps
mov
inc
sbb
adc
test
cmp
sbb
mov
xchg
push
retf
jmp
inc
add
pushf
stos
add
fbld
out
cmp
scas
cld
sbb
das
dec
clc
inc
pop
sar
pop
push
ret
mov
icebp
push
mov
mov
clc
ds
inc
(bad)
scas
inc
cmp
jg
pop
cmp
test
stos
and
loopne
rcr
or
and
xor
mov
push
dec
push
sti
mov
xor
(bad)
cmps
xchg
push
sbb
push
or
(bad)
jmp
js
mov
adc
sbb
neg
lods
rcl
pop
jl
pop
cmp
cld
fisttp
(bad)
fsubr
(bad)
push
mov
ds
pushf
iret
dec
or
push
ret
pop
mov
lods
pop
cld
pop
lea
or
adc
lods
cmp
lods
xor
mov
dec
adc
(bad)
das
mov
xchg
addr16
sbb
jg
or
(bad)
mov
add
das
adc
mov
icebp
repz
shl
or
in
pop
rol
shl
sti
div
cmps
mov
aas
adc
pop
inc
or
xchg
mov
mov
aad
es
test
inc
sti
xchg
dec
add
cmc
mov
ds
adc
rol
or
mov
call
push
cmp
dec
mov
dec
jo
pushf
pop
and
dec
mov
fdivp
push
push
cmp
mov
out
pop
sub
sub
cmp
mov
loop
xchg
cmp
gs
enter
lods
lds
mov
inc
mov
and
std
adc
cmp
push
retf
add
and
das
and
or
pusha
out
cdq
mov
or
clc
leave
sub
out
repnz
pop
mov
out
fadd
imul
jns
push
mov
stos
xchg
jno
fidivr
jl
add
adc
cmp
xlat
sqrtps
ror
(bad)
fld1
cmp
arpl
lods
dec
scas
fdivr
idiv
out
dec
fwait
adc
rol
test
mov
pushf
int
lahf
lahf
(bad)
mov
jb
test
xor
jmp
mov
jb
ror
sub
(bad)
jmp
mov
ja
mov
cwde
sti
enter
lods
fist
sbb
dec
pop
xchg
push
xor
aam
push
(bad)
pop
xor
and
lods
nop
cmp
cmp
cld
inc
in
push
push
imul
arpl
xchg
fdivr
sbb
xchg
icebp
(bad)
pop
popf
in
out
into
mov
leave
dec
pop
add
cmc
mov
cld
mov
jae
push
inc
mov
fs
push
xchg
xchg
pop
cmp
jge
cmp
sbb
cmp
inc
push
sub
int
pop
lods
sub
mov
add
mov
mov
test
xor
cmps
leave
cwde
imul
inc
jmp
into
mov
dec
dec
bound
cmp
cmps
inc
xchg
pop
add
retf
ins
fbstp
cmp
xchg
(bad)
cmp
push
or
lahf
in
add
data16
add
pushf
jno
dec
push
sbb
mov
popf
aaa
sahf
push
xor
mov
loope
or
push
push
sahf
or
jmp
push
retf
jge
push
cmp
mov
pop
cmp
jecxz
cmp
push
int
daa
(bad)
cdq
ins
popf
xor
xchg
adc
mov
mov
dec
repz
cmp
daa
int3
or
sub
inc
sub
push
and
js
in
repnz
(bad)
stc
jbe
sbb
setge
cmc
cmp
push
jno
dec
xchg
push
lea
sbb
jo
sub
stos
popa
shl
cmp
push
add
adc
into
in
xchg
jmp
pop
mov
jmp
fidiv
lods
xchg
call
inc
dec
lea
inc
xor
xchg
xor
mul
push
loope
inc
cmps
push
inc
and
fild
int
mov
xchg
out
sbb
cmc
cmp
mov
iret
jb
bnd
cmp
or
add
test
sbb
fcmovbe
inc
cld
adc
cmp
inc
cmp
jne
push
pop
and
mov
mov
mov
or
mov
push
outs
jp
shl
push
loope
add
push
test
pushf
add
mov
test
dec
adc
lock
jb
loopne
out
or
xlat
ins
and
aad
add
mov
fnstsw
nop
mov
push
dec
push
mov
cmp
cmp
fs
test
(bad)
mov
sbb
aad
rdtsc
aad
sbb
adc
loope
add
xor
mov
jne
inc
rol
sahf
scas
stos
pop
sbb
enter
cmp
fdivr
and
jns
jae
and
dec
mov
or
movs
ja
out
les
jae
stos
mov
lock
int
and
jle
test
cmovno
pusha
add
fstp
dec
movs
xchg
mov
dec
stos
cld
xchg
cwde
xchg
fwait
add
int3
push
mov
dec
jno
loop
cdq
mov
xlat
lods
adc
jl
inc
fnstsw
pushf
mov
xor
and
inc
dec
xlat
stos
sbb
sbb
aam
fcomp
rol
bound
stos
out
push
test
pop
push
jg
mov
cmps
xor
fmulp
aaa
cmp
adc
cdq
cld
cwde
loop
jle
arpl
dec
push
int
jge
sub
push
(bad)
xor
mov
dec
addr16
sub
(bad)
ins
test
push
xor
pop
add
sub
addr16
pop
adc
ins
push
imul
cli
cmp
cld
or
jle
inc
pop
loop
add
sbb
jmp
enter
lock
popf
mov
inc
mov
mov
push
and
sar
fiadd
popf
pop
jo
sahf
add
or
push
int
popaw
push
cmps
push
in
xchg
cmp
out
out
ret
jecxz
mov
js
inc
pushf
xor
in
int
sub
aas
push
jge
xchg
xor
popa
inc
cmp
cld
cmps
xor
div
sub
or
adc
lahf
movs
pop
mov
mov
cs
fiadd
dec
mov
xchg
push
and
lea
mov
inc
inc
xchg
nop
sar
jnp
dec
(bad)
enter
call
jo
inc
or
inc
cmp
scas
adc
mov
cmp
mov
in
and
call
cmp
(bad)
lock
push
std
fst
pop
shl
xchg
jae
mov
call
scas
mov
cbw
inc
(bad)
xchg
jnp
push
pop
and
xchg
es
add
inc
mov
dec
cmp
enter
loop
jmp
fndisi(8087
repz
in
jge
push
pop
push
mov
ja
fistp
loope
test
mov
ins
xchg
sub
mov
sub
dec
or
cs
cmps
mov
daa
xor
xor
push
nop
jmp
int3
gs
int3
neg
(bad)
and
pop
into
adc
mov
mov
(bad)
push
retf
add
call
jle
push
push
push
lahf
cld
lock
push
inc
retf
jbe
sbb
aas
mov
popf
sub
mov
lods
outs
add
int
iret
jne
out
retf
push
adc
call
lea
ins
fnstenv
int3
call
(bad)
std
xchg
mov
sbb
les
in
cmp
lahf
out
cmp
xchg
data16
xor
ja
jo
xchg
cmp
or
mov
in
cmps
mov
jne
add
(bad)
out
das
xchg
push
sub
aam
pop
out
inc
xor
push
xor
movs
sbb
sbb
lds
or
mov
loopne
mov
jb
or
test
js
mul
pop
in
pop
outs
cmp
push
test
fstp
out
add
neg
retf
cmp
add
xchg
retf
push
push
jge
js
adc
cmp
mov
cmp
gs
scas
push
mov
in
inc
pop
test
mov
in
shl
jp
lods
shr
adc
data16
ins
mov
adc
(bad)
shr
mul
xchg
out
mov
adc
sti
retf
sar
or
loop
call
(bad)
mov
mov
push
jbe
cmp
(bad)
je
jp
out
fs
xlat
rcl
in
mov
into
push
enter
rcr
adc
push
in
ins
movs
mov
push
mul
mov
test
pop
sbb
rcl
ja
or
xchg
repnz
sbb
(bad)
jne
mov
dec
out
or
dec
and
retf
ficomp
push
loop
or
lods
mov
cmp
mov
fisttp
xchg
push
sub
dec
retf
or
pusha
leave
pusha
enter
fsubr
sbb
mov
mov
xor
cdq
popf
clc
arpl
xchg
fld
jo
mov
mov
push
ja
rcr
sbb
lods
dec
adc
cmp
pop
push
data16
mov
mov
fld
adc
popa
cld
sahf
mov
je
xchg
push
or
mov
add
mov
mov
clc
dec
and
pop
cmp
sbb
pusha
call
icebp
cmps
test
and
ss
xor
inc
jno
sbb
pop
loope
ins
pop
(bad)
pop
mov
jmp
jmp
mov
lods
movs
mov
push
fdivr
jl
(bad)
icebp
int
loopne
push
mul
pop
sbb
pop
movs
cmps
xor
je
add
clc
cmp
push
fstp
pushf
jg
pop
jp
repnz
add
js
or
cmc
xor
retf
pop
stc
(bad)
dec
xor
fs
sub
push
loop
into
mov
pop
pop
aam
shr
push
mov
out
lock
cmps
sbb
ja
dec
sub
add
dec
popf
loope
(bad)
(bad)
scas
aaa
sub
sub
and
shl
es
mov
bound
cmp
movs
js
inc
xor
xor
ins
dec
pop
test
lds
in
push
and
xchg
aaa
mov
fwait
adc
add
int3
fs
aam
adc
pop
in
xchg
addr16
aam
push
xor
xchg
pop
out
aam
outs
adc
ret
sub
sub
push
mov
shr
and
sub
or
js
fmul
aaa
(bad)
int
xchg
pop
push
sahf
or
std
or
sub
dec
popf
inc
mov
xchg
popf
call
inc
mov
mov
and
sbb
or
shr
pop
mov
std
test
push
mov
or
loop
(bad)
push
test
push
cmc
scas
and
nop
int
mov
mov
add
push
pop
shl
out
nop
pop
mov
pop
sbb
add
and
outs
dec
sub
icebp
repz
or
inc
mov
push
pop
cld
pop
aad
jecxz
clc
inc
ja
addr16
nop
sbb
je
mov
sub
rcr
ss
loope
and
es
adc
push
pop
ins
clc
ret
loop
xor
sahf
mul
add
fcomp
std
aas
xchg
or
dec
push
call
loope
sub
add
iret
inc
sbb
fldcw
movs
xor
sar
fucomi
ja
inc
pop
xor
xchg
stos
jl
mov
jne
xlat
int
call
(bad)
stc
out
or
pop
in
lock
sub
xchg
iret
cmp
aam
mov
cmp
xor
repnz
mov
sub
out
adc
cmp
scas
int
inc
inc
sahf
gs
lods
nop
dec
ins
int3
rcl
pop
mov
inc
push
in
push
xchg
fsub
sbb
jae
sub
iret
aad
push
into
int
sub
fsubr
jmp
xor
cmp
repz
(bad)
sbb
aad
adc
adc
mov
sub
or
(bad)
iret
inc
(bad)
fld
mov
lds
ss
pusha
dec
cwde
stos
push
mov
cs
into
loop
test
dec
adc
adc
sbb
clc
inc
mov
sub
ja
aam
(bad)
outs
sub
pop
or
and
mov
jo
push
inc
mov
mov
movs
sub
mov
adc
mov
mov
rcl
jp
movs
es
data16
out
outs
in
dec
fidiv
and
sub
push
sahf
clc
fisubr
xor
fidivr
mov
popa
(bad)
into
pop
add
mov
cwde
imul
gs
imul
out
xchg
inc
jb
ror
inc
lods
jl
xor
inc
in
imul
aam
popf
not
sbb
mov
lock
mov
test
adc
pop
add
xor
cmp
inc
mul
jecxz
mov
shl
mov
add
rcl
sbb
or
mov
nop
nop
ins
cmp
fist
xchg
pusha
test
dec
inc
icebp
dec
inc
mov
cmps
aad
jge
pop
pop
inc
lea
std
ins
aaa
mov
inc
jg
dec
bound
mov
sub
icebp
cmp
mov
fsub
pop
jmp
jae
cmp
rcr
sbb
repz
adc
cmp
xlat
xor
xor
loop
rcl
mov
jbe
pop
mov
pop
xchg
xor
sbb
jl
je
jns
mov
popa
nop
(bad)
cmp
lds
ret
mov
mov
repz
loopne
cdq
or
add
test
push
and
out
in
leave
fmul
in
inc
push
pop
mov
sbb
jmp
hlt
and
arpl
mov
ficomp
cmps
jnp
sub
(bad)
fsubr
scas
and
scas
in
pop
sbb
iret
in
test
jmp
lds
hlt
pop
sti
aas
or
rol
dec
enter
inc
call
jp
test
jno
jg
loopne
daa
lds
(bad)
mov
inc
pusha
mov
xchg
test
(bad)
mov
popf
add
test
test
fiadd
push
cmp
lds
stos
push
das
mov
add
rcl
into
int
call
aas
ja
retf
and
stos
ficomp
outs
enter
fwait
sub
arpl
not
inc
xchg
mov
mov
test
sbb
loop
jns
gs
inc
pop
sbb
jge
xor
xor
mov
daa
pop
and
ja
ficom
rcr
dec
mov
repz
repz
imul
cli
push
mov
jnp
ins
enter
add
lahf
xchg
cld
fild
adc
icebp
pop
(bad)
out
repnz
scas
dec
ins
dec
outs
pop
xchg
xchg
repz
push
dec
test
xor
sub
push
jecxz
popf
mov
aas
pop
push
pop
adc
sbb
lds
inc
dec
dec
sbb
sahf
mov
mov
mov
(bad)
js
lahf
adc
stos
and
sbb
shl
pushf
add
into
mov
push
mov
xor
bound
inc
jle
icebp
pop
cdq
or
jl
shl
jo
lahf
pop
mov
sti
push
mov
hlt
repnz
or
push
and
add
fild
aam
dec
sti
lds
adc
inc
dec
ins
aaa
add
test
mov
and
dec
mov
daa
jae
sbb
pusha
jmp
cld
fldcw
inc
icebp
jp
push
dec
imul
lods
sbb
jg
outs
jb
or
adc
or
mov
daa
aas
stc
dec
or
shl
mov
jne
xchg
xchg
dec
add
lds
bswap
imul
jbe
jg
and
sub
lods
out
cmp
add
les
mov
daa
jle
lahf
int3
call
mov
pop
data16
sbb
inc
adc
fiadd
shl
jg
das
push
leave
setl
cmp
test
or
and
xor
mov
cli
out
(bad)
repz
push
add
stc
and
or
jp
xor
fwait
in
sub
xchg
popf
icebp
jnp
std
mov
mov
popf
and
hlt
mov
repz
int
test
xor
repnz
mov
fcmovbe
dec
or
ins
enter
mov
add
add
and
iret
pop
popf
lods
mov
push
adc
add
leave
mov
dec
pop
cmps
jp
push
lahf
xchg
retf
movs
xchg
loope
enter
loopne
dec
pushf
xor
push
retf
push
mov
lock
out
js
jbe
mov
movs
pop
dec
inc
movs
xor
rol
mov
lods
pop
stos
int
scas
out
sti
jmp
inc
or
jl
add
sub
jp
add
and
cmp
iret
sbb
add
sbb
faddp
repz
or
ror
dec
adc
loopne
inc
arpl
mov
or
mov
(bad)
cmp
dec
(bad)
cwde
pop
sti
dec
arpl
xchg
je
retf
mov
jg
pop
inc
adc
sbb
in
test
fsubr
loopne
mov
mov
push
pop
add
or
mov
(bad)
in
out
dec
jno
sar
inc
mov
fwait
(bad)
iret
cmp
out
retf
jb
cmp
adc
push
fs
imul
mov
cs
movs
(bad)
rcl
js
leave
dec
mov
in
loope
push
push
and
or
push
adc
dec
mov
movs
jge
pushf
inc
sub
jge
scas
mov
in
pop
and
dec
daa
adc
xchg
pusha
add
stos
pop
push
in
hlt
jl
push
cmp
shr
push
shr
cmc
fmul
data16
retf
ret
sub
addr16
scas
inc
arpl
inc
inc
fcom
push
or
pop
jg
cmc
leave
xor
inc
xor
and
shr
sbb
inc
sub
and
fst
fidiv
cmp
mov
jmp
inc
hlt
ret
push
test
scas
add
pop
jmp
not
push
sub
inc
adc
ds
mov
mov
jbe
outs
es
ins
mov
pop
sub
jle
data16
(bad)
pop
ss
pop
addr16
loope
dec
rcr
sti
jae
and
push
mov
cmovo
inc
nop
add
or
inc
(bad)
shr
sub
mov
(bad)
mov
mov
mov
not
mov
fsub
(bad)
sbb
mov
adc
mov
ins
jbe
sbb
enter
push
jge
jge
aas
xor
bnd
mov
outs
adc
jge
stos
pop
jo
push
jle
in
cs
les
sti
outs
cmp
mov
sti
cmp
ss
adc
sub
into
mov
add
and
and
xchg
les
xor
mov
ins
cs
push
je
cmc
ret
push
repnz
sar
lods
stc
mov
fadd
adc
stc
outs
out
push
jl
and
cs
sub
xlat
inc
mov
mov
jbe
sub
lock
hlt
mov
jnp
imul
pop
dec
pop
fimul
je
imul
jnp
push
adc
aam
pop
rol
sar
icebp
les
jae
xor
test
push
fcomi
jg
xchg
push
ror
dec
pusha
jge
dec
cld
or
mov
test
dec
pop
sbb
inc
shld
shr
sub
fstp
xor
test
jo
loope
sub
adc
cmps
cdq
dec
data16
push
push
jmp
push
pop
xchg
xchg
dec
scas
push
inc
ficomp
test
xor
lods
sbb
dec
in
add
add
jbe
fcmovnb
inc
icebp
push
loop
pop
clc
in
loop
(bad)
xchg
xor
xchg
pusha
lods
cld
int
das
(bad)
fcmovnu
mov
int3
scas
(bad)
pop
mov
xchg
(bad)
mov
or
loop
cmp
iret
in
and
adc
adc
out
lods
mov
jne
loopne
dec
xlat
xchg
cld
dec
fld
sub
gs
dec
cmps
cli
mov
jo
les
sub
jmp
dec
inc
inc
mov
jno
loopne
fs
cmp
or
sub
aam
or
pop
mov
push
push
sbb
ins
stos
cdq
pop
cmps
mov
push
dec
dec
xchg
in
inc
mov
sub
movs
enter
sub
push
loope
mov
arpl
pop
dec
xchg
sub
rcr
ret
sar
test
sub
movs
(bad)
fsubr
sbb
aad
inc
into
outs
addr16
pop
inc
add
pusha
aad
push
xchg
dec
iret
jge
xlat
bnd
fprem
repnz
push
jmp
(bad)
or
and
sbb
sub
(bad)
int3
cmp
mov
or
scas
pop
data16
push
stc
push
jo
or
push
lods
inc
jle
fild
push
cmp
xor
test
ret
lahf
mov
push
jge
pop
outs
fistp
rol
out
call
pushf
or
mov
ins
sub
xchg
repnz
popf
call
test
loopne
jp
cmp
cmc
sub
std
push
jno
and
jmp
ret
lea
inc
add
xchg
mov
push
aas
stc
inc
xchg
loope
sub
cmp
imul
jno
pop
stos
fnstsw
pop
pop
ret
lock
rcr
inc
test
mov
imul
mov
es
(bad)
mov
sahf
dec
jmp
inc
out
sbb
bound
loopne
dec
xchg
dec
mov
mov
in
push
pop
aad
adc
push
sahf
aam
xor
push
fwait
push
add
outs
xchg
adc
sbb
dec
jnp
dec
push
add
push
cli
xchg
cld
push
neg
push
mov
cld
mov
xchg
mov
nop
sbb
(bad)
outs
add
sub
and
sub
xchg
popf
push
mov
push
xchg
bound
mov
int
jge
js
out
dec
mov
or
movs
lds
add
mov
fadd
out
xchg
xchg
jns
or
adc
jp
mov
cmp
push
dec
out
cld
stos
inc
and
aad
and
mov
fcmovb
inc
dec
lods
jmp
outs
aad
loope
retf
jno
add
and
lods
push
and
lock
into
fisubr
arpl
not
jmp
lock
xchg
imul
leave
scas
int3
out
idiv
jp
xor
test
inc
sbb
shr
cmc
or
pop
jmp
mov
icebp
adc
xor
push
cwde
mov
in
iret
daa
mov
adc
jge
pop
sbb
in
movs
or
sbb
jg
nop
add
ret
je
sbb
xor
ins
stos
sbb
retf
fwait
repnz
and
popa
mov
retf
loop
gs
sbb
add
mov
mov
cmp
inc
xor
scas
push
adc
(bad)
add
xor
jbe
popa
int3
mov
gs
loop
mov
mov
pushf
pop
ret
cld
and
int3
rcr
scas
mov
loope
jo
stos
sti
mov
mov
shl
addr16
mov
mov
and
sub
shl
add
loopne
call
rcr
loop
retf
lock
(bad)
clc
push
push
inc
(bad)
ror
jecxz
push
lods
jmp
repnz
jmp
iret
inc
or
out
or
mov
data16
mov
pop
and
adc
(bad)
in
push
int
jns
(bad)
jmp
push
mov
and
lods
mov
dec
std
jmp
pop
out
fstp
push
sbb
(bad)
ins
add
mov
mov
inc
inc
test
icebp
xchg
push
ja
ss
test
mov
in
movs
mov
popa
jmp
add
jno
nop
inc
daa
ss
xor
lahf
arpl
gs
mov
or
out
ret
push
adc
cmp
arpl
jp
les
xor
or
dec
loop
xchg
pop
lahf
mov
dec
adc
fs
jg
cmps
mov
pop
or
enter
pop
pop
(bad)
sar
gs
xchg
bound
leave
sub
cmp
outs
repnz
jmp
mov
repnz
push
cdq
(bad)
push
test
add
(bad)
jnp
call
cwde
inc
or
sahf
add
jge
and
pop
ficom
adc
ret
inc
sub
loop
pop
pop
movs
adc
scas
mov
mov
addr16
dec
ds
lea
xchg
xor
mov
pop
test
sub
rcr
inc
xchg
inc
aad
push
cmp
mov
test
jb
js
aad
and
mov
cwde
xor
push
sub
mov
mov
adc
bound
shl
mov
movs
fwait
cmp
test
pop
imul
in
sbb
push
mov
push
sbb
div
daa
pop
jno
mov
out
int
imul
or
add
ret
sub
iret
in
mov
sbb
fsubr
imul
lods
mov
lock
cld
xchg
mov
adc
into
cmp
fdiv
in
mov
sbb
inc
sub
dec
cmp
repnz
test
das
xchg
push
and
(bad)
hlt
test
mov
sahf
mov
and
jmp
sti
mov
leave
xchg
cld
scas
xchg
adc
enter
jecxz
lds
push
and
or
mov
pusha
adc
out
shl
sub
xor
inc
adc
retf
inc
pop
test
test
hlt
lds
inc
cmp
cli
lahf
sbb
fistp
mov
jne
(bad)
popa
mov
dec
push
adc
out
mov
test
cmc
jbe
adc
jbe
icebp
add
adc
xor
bound
fidivr
int3
in
js
xor
pop
jmp
cmp
stos
in
das
aas
jg
ss
push
and
pop
stc
mov
jge
enter
aaa
mov
sti
pop
jl
popf
jb
and
xchg
lea
cmps
push
pop
push
pushf
lods
sub
fwait
es
jle
fist
jae
mov
(bad)
sbb
xchg
sbb
into
fs
lods
test
lahf
jle
int3
adc
xchg
cwde
out
dec
test
jne
mov
add
fidivr
xchg
inc
jbe
mov
dec
int3
and
aam
lods
cld
outs
and
dec
pop
dec
pusha
loop
aad
dec
pop
xchg
adc
fdivr
add
adc
mov
xor
jge
dec
jg
imul
sar
cmc
or
xchg
pop
cmc
add
daa
call
xor
jg
push
cmp
cli
nop
clc
lahf
push
push
iret
fcmovnb
adc
iret
mov
int
dec
mov
jle
aas
test
inc
(bad)
(bad)
div
sahf
loop
lods
push
mov
push
out
adc
icebp
push
mov
dec
or
aad
xor
shr
mov
xchg
(bad)
xor
push
lahf
cdq
jno
jmp
sub
mov
out
add
imul
je
cmc
in
push
jnp
fdivr
jmp
fcmovne
iret
adc
popa
fldenv
sbb
xchg
(bad)
xchg
pushf
mov
jmp
and
(bad)
dec
out
pop
shl
into
push
pop
xor
or
(bad)
cwde
out
jg
xchg
call
adc
inc
adc
sti
dec
xchg
xchg
out
fwait
adc
cld
jmp
push
jmp
movs
xor
(bad)
data16
(bad)
sub
cld
xchg
lahf
in
sar
fs
out
sbb
sahf
iret
pushf
mov
imul
push
cmps
inc
inc
aaa
xor
mov
enter
mov
icebp
mov
adc
mov
xchg
or
mov
sbb
in
adc
pop
cmp
mov
dec
push
dec
sahf
sbb
and
hlt
and
fisttp
xchg
pop
imul
jnp
or
dec
retf
outs
or
punpcklbw
idiv
ror
or
aaa
mov
adc
popf
sub
xchg
sbb
mov
enter
push
enter
pop
stos
cld
add
jb
lock
in
push
push
in
mov
fucomp
repz
call
and
sbb
lahf
daa
lock
(bad)
jmp
push
pop
push
xchg
je
sub
out
dec
in
cs
cmp
jmp
ret
outs
cmps
test
xor
adc
mov
inc
(bad)
push
mov
das
jmp
loop
fldcw
cmp
jo
retf
imul
or
cmp
pop
dec
ret
ret
push
jno
jb
sub
pop
pop
ror
shr
add
inc
jmp
xchg
push
fadd
icebp
outs
dec
imul
imul
xchg
cmp
push
rcr
and
imul
fistp
gs
xchg
mov
pop
(bad)
iret
pop
out
add
ret
and
dec
inc
xlat
or
add
out
xchg
xchg
add
sub
inc
cdq
je
push
dec
ins
cli
adc
xchg
push
mov
push
or
test
fcmovu
fst
jnp
sub
jae
and
das
outs
push
fisttp
mov
shufps
xchg
into
out
mov
pop
or
stc
fnsetpm(287
arpl
and
popa
jbe
sub
cli
ret
shr
pop
add
xor
in
test
sub
sbb
scas
rcr
xor
rcl
fsub
cmc
or
xchg
push
std
mov
(bad)
int3
pop
data16
sub
rol
and
addr16
cli
shr
in
mov
sbb
mov
shl
cmps
adc
int
int
pop
jmp
or
ins
imul
in
add
outs
adc
sub
mov
lds
xor
arpl
inc
mov
test
jle
mov
lahf
jae
push
shl
shl
in
pop
sbb
add
fsub
cmp
pop
cmp
nop
imul
cmp
mov
mov
lods
push
push
dec
test
mov
imul
push
aad
popa
jmp
repz
xor
pop
jmp
or
pop
jo
adc
push
push
leave
sub
push
xchg
pop
mov
popf
or
dec
jmp
sbb
sbb
inc
add
sti
mov
jo
mov
in
push
or
les
out
cs
inc
pop
pop
xchg
repnz
je
shr
cmps
sbb
mov
jmp
stc
into
push
jno
xlat
pusha
clc
aad
jp
mov
inc
movs
sub
mov
aad
(bad)
jmp
mov
and
sub
iret
out
leave
pusha
mov
adc
das
daa
inc
pop
es
shrd
jo
xchg
fstp
pop
mov
or
inc
xor
xchg
add
mov
sub
hlt
xor
in
ins
das
outs
pop
lods
xor
(bad)
nop
or
sbb
adc
push
xchg
jb
loop
aad
xchg
sbb
and
pop
and
dec
(bad)
std
mov
arpl
stos
jecxz
ror
or
and
jge
cwde
inc
into
mov
fimul
jo
aam
cmps
je
movs
adc
fdivr
call
xor
inc
mov
sub
sub
dec
pusha
fwait
and
aas
shr
je
aam
cmps
fmul
scas
or
xor
sahf
shr
(bad)
(bad)
stos
jbe
push
inc
sub
ss
xchg
fisub
xchg
inc
out
stos
hlt
div
cli
imul
pop
push
out
jns
push
sub
stos
push
loop
dec
xchg
sahf
iret
xchg
sbb
(bad)
mov
loope
jmp
cmp
inc
cs
mov
cmp
lods
add
xchg
ja
rol
jmp
pop
lock
ds
jae
push
cli
fimul
jb
push
sahf
aad
es
scas
add
stos
js
sbb
mov
xor
rcl
jno
fldcw
mov
imul
sbb
push
dec
pushf
call
sti
sbb
xchg
mov
xor
stos
cmp
mov
pop
inc
js
cmp
jmp
loop
dec
retf
mov
int3
sub
sbb
xchg
sub
mov
mov
push
(bad)
gs
mov
out
(bad)
inc
aas
push
leave
adc
call
or
mov
mov
(bad)
leave
jo
cmc
cmc
sub
movs
jae
shr
ins
xor
jmp
in
push
in
mov
xor
xor
div
test
dec
not
pop
in
mov
sub
scas
add
jb
cld
dec
dec
cmp
xor
dec
(bad)
clc
(bad)
xchg
mov
mov
mov
add
pop
push
add
sub
imul
retf
fist
cdq
addr16
and
(bad)
jns
mov
and
push
mov
bound
clc
sub
add
sub
pop
call
jbe
push
outs
loope
sbb
xchg
adc
sar
xchg
mov
pop
push
outs
jb
lea
mov
rcl
out
jbe
mov
xor
push
cmp
cmp
push
test
and
clc
fwait
icebp
sub
vmwrite
mov
add
scas
mov
arpl
dec
jnp
cld
mov
int3
adc
jno
and
pop
cli
add
adc
inc
movs
aad
pusha
sahf
sub
neg
sub
sub
test
das
mov
xor
sub
lods
jno
cld
aaa
pop
inc
mov
js
rol
xchg
out
or
sti
call
nop
inc
jae
or
cld
xchg
and
(bad)
push
mov
pop
xlat
call
call
test
(bad)
repz
or
mov
ins
(bad)
cmp
cmp
cld
addr16
adc
jno
addr16
push
ins
aam
sbb
or
mov
xchg
push
mov
xchg
lods
xchg
mov
(bad)
mov
jno
jnp
test
or
les
fcom
nop
enter
jmp
adc
mov
movs
mov
xchg
xchg
mov
fild
sti
(bad)
xor
pop
cdq
and
xchg
cmp
add
mov
les
out
xchg
fwait
mov
cmp
adc
cmp
ret
ret
popa
mov
sbb
xor
loope
sar
add
(bad)
fisttp
lock
int
push
icebp
push
sub
cmp
mov
inc
(bad)
dec
imul
sbb
mov
and
sbb
jmp
fsubr
jnp
rol
dec
lea
or
cmp
outs
dec
repz
xchg
inc
adc
pop
and
and
rcl
pop
mov
xor
test
pusha
xchg
push
cmp
stc
xchg
test
or
xchg
mov
retf
sbb
xor
cmp
cmp
push
jae
hlt
mov
out
mov
std
aaa
iret
dec
sub
xchg
dec
data16
sbb
lock
add
jae
int
sub
sahf
xchg
cwde
xchg
pop
pop
jbe
je
mov
add
or
and
push
xchg
cmps
mov
jo
push
popa
dec
hlt
pop
xor
ret
movs
or
and
arpl
cmc
je
nop
enter
enter
pop
xor
or
es
cmp
rol
popf
in
push
dec
out
inc
nop
stos
push
sub
jne
outs
in
and
out
ret
mov
fiadd
out
test
stc
jp
addr16
sti
fsubr
mov
sar
test
adc
add
rcr
or
mov
pop
and
mov
loop
push
mov
sbb
cli
mov
pop
mov
test
cwde
cld
jne
push
int3
lock
repnz
xor
add
retf
std
gs
inc
cmp
xor
cmp
jge
add
mov
popa
pop
push
xchg
or
sub
clc
inc
test
add
dec
ins
add
pop
adc
dec
or
or
xchg
pusha
sub
push
ins
bound
cs
stos
mov
xchg
loopne
sub
test
mov
movs
mov
mov
test
call
push
dec
lahf
lahf
adc
aam
mov
xchg
call
jne
idiv
shl
jb
mov
(bad)
mov
or
sahf
adc
inc
stos
test
in
stos
inc
or
cld
push
outs
lods
repz
sub
pop
push
sbb
fdivr
pop
jb
sub
arpl
loope
arpl
inc
jb
out
fsubr
les
aas
fist
push
and
dec
gs
jle
scas
mov
cli
idiv
jmp
(bad)
in
out
outs
or
pushf
shr
sbb
or
mov
and
cmp
dec
retf
outs
adc
push
(bad)
stos
or
and
out
jecxz
push
sub
or
pop
push
gs
mov
adc
ins
jmp
mov
sti
pop
xchg
push
mov
jne
(bad)
in
push
aaa
mov
or
jns
ror
cmp
push
in
push
add
xchg
pop
(bad)
retf
add
jge
pop
or
push
scas
xchg
push
fidiv
adc
xlat
int
fs
(bad)
outs
les
fsubr
pusha
in
imul
in
call
cmp
pop
(bad)
xor
mov
nop
imul
(bad)
pusha
sub
add
inc
push
xchg
nop
aas
ja
imul
loopne
xchg
ret
leave
xor
rcr
movs
hlt
push
pop
call
clc
mov
je
rcl
loope
push
outs
hlt
jbe
sahf
fnsavew
movs
stos
addr16
mov
mov
sub
cmps
mov
aas
out
jne
mov
push
fwait
sbb
ins
outs
pop
aas
sbb
or
daa
sbb
push
sbb
je
out
add
leave
jno
mov
loope
cmc
outs
fadd
push
shl
sbb
loopne
and
aam
lods
jnp
dec
jno
or
daa
addr16
and
cmp
and
(bad)
push
mov
aaa
or
cmp
cdq
shl
fisubr
sti
and
inc
(bad)
sub
cmp
push
in
shl
push
xor
out
push
dec
test
cmp
xchg
fstp
add
sbb
(bad)
int
and
mov
out
(bad)
adc
lea
xchg
leave
sub
popa
test
cmp
js
mov
cmp
ss
adc
nop
sbb
int3
out
sahf
shr
test
or
sbb
mov
addr16
mov
loopne
jno
mov
mov
jbe
ins
arpl
mov
add
scas
or
dec
mov
pop
mov
inc
lods
jl
xlat
dec
push
in
push
mov
sbb
or
stc
and
push
mov
jno
push
scas
jle
aam
fadd
std
jae
repz
loope
into
add
push
cmp
xchg
mov
outs
mov
jbe
or
jns
fimul
xchg
inc
ficom
fidiv
mov
and
ret
mov
mov
call
mov
and
add
lea
inc
cmp
jno
dec
xchg
std
pop
mov
xlat
sbb
and
mov
add
mov
call
data16
into
mov
cmc
test
sub
sar
mov
mov
jg
cmp
lods
mov
jnp
fnstenv
push
int
or
fsubp
scas
push
movs
shl
sub
and
bound
rcl
nop
xlat
jns
test
movs
mov
xchg
inc
xchg
movs
or
push
push
outs
lods
into
cmps
loope
sbb
ret
sub
mov
cmc
and
jp
mov
aad
push
add
push
in
iret
sub
cmps
mov
jg
pop
push
pop
stos
pop
mov
ins
add
call
mov
dec
jbe
test
jg
dec
dec
sub
cli
push
rol
adc
mov
leave
push
sbb
mov
pushf
inc
sbb
jmp
lea
mov
ds
sbb
or
aaa
fimul
lock
rcr
xchg
adc
neg
loope
push
pop
adc
outs
push
mov
cmp
sahf
jae
das
imul
aaa
mov
popa
push
in
adc
jle
stc
or
xchg
push
mov
xor
call
cdq
loopne
pop
aaa
jne
or
outs
sub
sub
jge
xchg
xchg
std
xchg
adc
xor
adc
jmp
mov
rcr
mov
daa
jbe
hlt
retfw
inc
inc
iret
add
push
fsubr
xor
fcomp
mov
es
addr16
jns
addr16
hlt
inc
shl
inc
test
sbb
call
dec
cmp
cmp
jns
fsub
cmp
pop
ins
out
enter
repnz
sar
shl
and
dec
mov
push
jmp
shr
dec
dec
sbb
popf
xor
sti
push
cs
xchg
pop
pop
outs
enter
hlt
push
mov
imul
js
xchg
sbb
lods
fcomp
out
jl
jbe
adc
mov
aaa
dec
pop
stc
aaa
add
pop
jmp
sbb
mov
inc
outs
push
imul
and
pop
pop
(bad)
push
and
dec
cmc
aaa
fwait
ja
stos
repz
or
dec
inc
bound
xor
mov
pop
fbstp
mov
dec
ret
ds
lods
mov
mov
daa
ret
test
retf
imul
push
pop
retf
mov
push
add
pop
adc
xchg
mov
mov
jns
cwde
jmp
mov
push
or
test
stos
push
rol
pop
in
loop
cmc
fs
dec
inc
std
push
push
push
xor
cdq
jo
rol
push
enter
and
push
or
call
stc
and
jle
adc
enter
xchg
mov
mov
(bad)
sbb
outs
push
lahf
fld
sbb
mov
xor
movs
cmp
stc
(bad)
or
fidivr
push
ins
xchg
pushf
test
mov
sti
adc
ss
std
pushf
mov
outs
outs
mov
mov
jbe
shr
(bad)
(bad)
cmp
cwde
scas
push
(bad)
sahf
ds
cs
push
in
sub
and
int
out
sub
pop
cmps
xor
adc
jg
sub
dec
push
push
dec
into
shr
ss
lods
popa
mov
mov
lds
addr16
xor
sub
xlat
jo
test
mov
dec
add
scas
ja
jns
mov
fcmovnbe
and
push
js
and
clc
dec
jbe
in
xchg
and
or
dec
fbstp
push
inc
stc
imul
mul
enter
adc
repnz
ret
mov
mov
xchg
into
call
cmc
xor
popa
jno
sbb
mov
fmulp
mov
xor
and
cld
in
and
dec
hlt
dec
pop
or
sub
shl
sar
shr
imul
fimul
mov
gs
mov
mov
xor
pusha
mov
and
sbb
mov
sub
ret
mul
adc
xchg
jmp
arpl
jle
mov
push
popf
scas
sub
sti
ja
mov
xchg
pusha
or
jb
aaa
inc
xchg
jecxz
dec
and
pop
sbb
and
xchg
add
jbe
repnz
sbb
lods
xchg
sbb
inc
test
and
mov
or
aad
mov
adc
pop
adc
dec
fcmovne
pop
push
fs
stos
sub
sub
fwait
push
cmp
adc
out
or
mov
std
ins
ds
adc
adc
inc
adc
ficom
mov
add
(bad)
push
or
stos
add
lea
nop
xchg
fcmovbe
sbb
push
xor
test
loop
sub
sar
in
adc
push
test
je
and
popa
and
mov
xchg
sub
pop
add
scas
jge
daa
and
jmp
ss
pop
sub
fidivr
popf
je
mov
mov
stc
jge
(bad)
popf
hlt
or
cs
out
add
jno
and
push
mov
lea
fdivr
inc
mov
lock
jmp
mov
mov
adc
sar
out
data16
push
xchg
outs
pop
imul
sbb
jno
(bad)
push
mov
sbb
(bad)
jmp
cmp
push
and
(bad)
sub
cmp
mov
popf
push
sbb
or
imul
push
sbb
jns
jae
retf
mov
pop
adc
jmp
test
dec
cmps
push
sub
pop
cwde
std
xor
dec
iret
lds
pop
sbb
push
xor
sub
jge
adc
pusha
xchg
lds
popf
xchg
aad
das
pop
fwait
cld
xor
pushf
jb
push
sar
jg
les
cld
xchg
xchg
shl
pop
shr
mov
pop
icebp
xchg
jl
outs
(bad)
or
out
fcom
vpmacssww
stos
scas
test
xchg
mov
sti
jle
and
shl
xor
aas
mov
mov
jb
aam
jb
mov
inc
xor
or
mov
mov
lods
sti
movs
pop
mov
sbb
inc
push
inc
xchg
cmp
pop
cmps
add
fnstsw
jo
mov
(bad)
addr16
mov
cdq
adc
push
push
in
or
or
cwde
fld
daa
xor
lods
dec
pop
pop
imul
xor
js
jp
xchg
and
mov
push
daa
push
fcmovnbe
pop
sbb
or
outs
jl
inc
add
std
pusha
jmp
imul
sub
mov
iret
cmp
mov
and
dec
xchg
adc
xchg
in
push
test
push
jb
inc
mov
es
hlt
or
adc
lods
sub
mov
mov
dec
mov
loop
shl
(bad)
xchg
lahf
sahf
cs
outs
sbb
cdq
jnp
dec
ins
scas
mov
pop
retf
pop
cmp
lds
mov
sbb
(bad)
cmp
call
inc
cmp
or
int
jae
inc
jae
shl
aaa
inc
mov
sub
in
sub
inc
out
pop
shl
int
dec
call
imul
mov
out
enter
daa
mov
pop
cli
jne
int3
enter
icebp
mov
das
dec
mov
jp
adc
dec
xchg
fwait
mov
jno
cwde
psrlq
xor
ins
mov
pop
(bad)
pusha
movs
dec
cmp
stc
inc
add
idiv
xchg
fcomp
lds
pop
fisttp
fldenv
inc
push
dec
mov
ss
sbb
mov
out
les
cmp
in
inc
int
pop
cmc
push
xor
retf
adc
adc
hlt
mov
loopne
es
cld
stos
mov
mov
jmp
cld
ret
pusha
push
or
psadbw
mov
out
xchg
test
or
xor
test
out
jb
inc
fwait
or
nop
rcl
jne
popf
adc
sbb
xor
(bad)
jae
call
adc
sub
push
mov
push
or
lods
(bad)
arpl
(bad)
(bad)
int3
jp
cmc
inc
mov
pop
adc
push
in
call
(bad)
mov
adc
movs
lods
xchg
jmp
enter
dec
add
xchg
jne
fcom
jl
xor
cdq
sti
adc
inc
xchg
jo
out
jb
inc
mov
loope
adc
(bad)
mov
lods
mov
add
add
cmp
mov
clc
in
popa
jp
imul
retf
lock
into
out
and
add
popa
popf
pop
mov
cmc
add
aam
ret
xor
gs
idiv
mov
mov
fs
(bad)
mov
inc
jge
push
(bad)
xchg
dec
shl
rol
push
adc
xor
sti
xor
push
dec
or
adc
add
sti
jb
xor
es
push
push
adc
loopne
xor
jns
inc
mov
mov
ja
dec
vmread
outs
adc
jb
das
leave
add
dec
aam
sar
aas
cmp
sbb
xor
scas
retf
sub
mov
xor
xchg
fucomip
sar
push
fadd
loop
les
mov
mov
xchg
rol
inc
inc
xor
mov
push
shl
jle
jmp
jo
and
cmp
mov
out
xor
lods
nop
ins
pop
xlat
inc
inc
jl
cmp
lock
sar
mov
xor
or
mov
adc
lods
call
arpl
mov
dec
or
pusha
push
or
pop
test
xchg
mov
pop
dec
mov
xor
retf
ins
and
and
add
push
sbb
and
fiadd
cmc
daa
push
adc
cmp
push
fincstp
(bad)
xchg
pop
in
jle
sub
das
or
pop
jbe
inc
inc
loop
out
cmp
cmp
jmp
mov
xor
stos
jbe
popa
sub
test
gs
pop
test
mov
pop
pop
mov
mov
pop
rcl
push
dec
mov
jp
pushf
mov
in
mov
cwde
(bad)
lock
mov
test
mov
aad
sbb
jmp
xor
out
push
or
fcomip
mov
loop
sbb
mov
jge
mov
int
inc
sbb
imul
push
test
sbb
fst
cmps
sbb
jcxz
mov
sub
fiadd
cld
cmp
pop
retf
mov
fsubr
mov
mov
mov
cmp
sub
cmp
xchg
in
xor
idiv
and
fwait
cmps
ret
mov
stos
and
xchg
dec
jbe
ins
xor
push
icebp
je
inc
into
mov
xchg
cs
mov
cmc
jns
fcomp
sbb
dec
sub
mov
dec
je
push
jno
or
sub
add
inc
add
call
jb
jns
retf
lock
inc
enter
mov
sub
js
rep
xlat
sub
(bad)
jmp
xor
in
add
daa
cld
hlt
pop
fisttp
repnz
mov
add
lods
lods
add
inc
add
shr
lods
sbb
xor
pop
xchg
pop
dec
push
or
test
mov
inc
adc
xchg
cmps
or
cmp
das
sbb
(bad)
lods
add
mov
rcl
pop
mov
add
mov
loope
mov
ficomp
lahf
data16
mov
lock
pusha
xchg
mov
repz
lahf
pop
mov
mov
sub
out
push
cmp
ins
jbe
and
jns
int3
xchg
xchg
(bad)
pop
cwde
xor
jnp
(bad)
mov
in
imul
pop
xor
add
fmulp
dec
jmp
xor
or
mov
sbb
std
or
fstp
aam
lods
xchg
xchg
jecxz
xchg
mov
cwde
ret
push
and
in
(bad)
xchg
cwde
adc
mov
xchg
out
mov
dec
aad
in
aad
sbb
inc
scas
loop
sub
call
arpl
mov
xor
mul
sar
int3
int3
jmp
dec
retf
or
cmp
inc
dec
(bad)
rcr
mov
cmp
push
fidiv
sbb
ja
add
cs
(bad)
pop
(bad)
pop
add
xor
adc
pop
nop
outs
or
and
dec
pop
mov
pop
add
popa
and
jg
or
shl
and
mov
mov
fidivr
cmp
cmp
add
sub
pop
inc
mov
rcl
and
xor
push
jp
jne
cwde
jno
push
mov
xchg
aad
jbe
popf
adc
jae
or
and
push
ins
cmp
in
fs
and
jbe
xor
repz
test
push
pusha
std
inc
in
push
mov
fadd
std
ss
adc
(bad)
jg
mov
adc
mov
add
mov
cmp
add
in
loop
inc
vphaddubq
sub
sbb
dec
loop
or
xor
cli
adc
sub
outs
pusha
push
push
neg
cmp
sar
popa
jmp
mov
fisub
and
adc
pop
cmp
test
add
push
call
pop
in
(bad)
mov
enter
sbb
jbe
mov
or
jl
add
lods
js
mov
and
test
fst
out
iret
xchg
nop
aaa
js
push
sar
mov
jb
xchg
or
sub
ja
popf
pusha
adc
sub
mov
adc
retf
out
mov
fisub
fstp
mov
pop
adc
adc
inc
adc
mov
popf
clc
push
push
test
xchg
cwde
sbb
jmp
or
xchg
jle
mov
std
add
or
sub
sbb
mov
sti
cli
dec
xor
popa
jmp
push
cli
fisubr
mov
pand
and
(bad)
fdivr
add
in
xor
xor
push
mov
jmp
mov
bound
sub
dec
test
adc
ins
fisubr
or
xor
mov
aad
popf
movs
cmp
shl
xor
in
sti
or
iret
cmp
(bad)
ins
inc
cmp
mov
mov
fs
pop
mov
mov
lock
jne
jle
std
pop
(bad)
fcom
mov
jb
pusha
pusha
in
add
loopne
cmp
push
int3
mov
dec
lmsw
es
(bad)
ret
jmp
add
and
bound
out
dec
or
mov
ret
dec
mov
popa
mov
push
push
mov
mov
loope
xlat
repnz
repnz
and
mov
push
pop
inc
xor
cdq
jl
push
fistp
xor
repz
adc
xor
xchg
fstp
sub
mov
aad
rcl
add
fisttp
cwde
int
enter
in
in
retf
add
xchg
pop
dec
xor
mov
das
xchg
pushf
loope
push
out
idiv
movs
push
mov
int
not
sub
pop
xor
mov
and
jns
cmp
jo
iret
jnp
pop
inc
cmp
popa
(bad)
jnp
fld
out
(bad)
js
out
test
pop
(bad)
jl
cmp
int3
out
fisttp
loop
xor
es
add
sbb
je
or
mov
sub
rcr
add
or
aam
ror
push
retf
inc
and
mov
inc
jecxz
ret
cmp
test
iret
dec
ja
shl
mov
pop
out
push
cmp
xchg
je
movs
pusha
es
imul
mov
retf
push
pop
jb
aaa
add
scas
or
fistp
pop
sbb
inc
cmp
or
call
mov
and
mov
dec
jns
inc
sub
or
leave
add
pop
and
pop
mov
jle
mov
inc
popa
xchg
hlt
mov
in
in
sbb
in
push
fadd
cli
push
call
js
in
mov
int
push
pop
adc
mov
outs
loopne
xlat
push
out
lds
enter
in
gs
call
push
dec
and
fwait
mov
cmp
push
xchg
mov
jmp
lds
lock
pop
push
iret
jb
cmps
ret
xchg
loop
nop
and
retf
sub
xlat
imul
inc
sub
mov
inc
adc
iret
push
sub
fiadd
dec
pop
stc
push
adc
cmps
jecxz
loope
shl
addr16
or
jp
xor
fisttp
jle
sti
stos
mov
xchg
fnsave
sbb
and
rcr
cmps
(bad)
fucomip
jecxz
dec
dec
sbb
jmp
mov
add
sbb
or
data16
call
push
inc
sbb
inc
cli
imul
fdiv
movs
jmp
push
in
movs
adc
shl
push
lods
xor
xchg
pop
xchg
xchg
ffree
clc
mov
mov
xchg
dec
sub
xchg
les
and
leave
add
mov
push
gs
sbb
mov
xchg
xor
hlt
(bad)
clc
popf
scas
sub
in
xchg
(bad)
sbb
inc
inc
inc
xchg
repnz
ds
ret
in
mov
jne
dec
outs
in
sbb
ss
ret
cld
fimul
sub
jecxz
cdq
or
cmp
je
adc
ds
jmp
mov
sub
xchg
push
xchg
mov
je
adc
sbb
xchg
fist
add
fadd
daa
pushf
loop
jmp
xchg
mov
pop
fcmovu
(bad)
std
fild
je
push
aad
mov
jo
imul
repnz
scas
cmp
adc
ins
cdq
popa
xchg
mov
arpl
xor
cmc
(bad)
adc
sbb
jnp
daa
cmp
push
ds
push
mov
sbb
mov
iret
inc
test
imul
push
jnp
xchg
push
sub
mov
or
xchg
popf
xchg
push
pop
cmp
and
jecxz
pshufhw
push
and
mov
je
mov
jae
jns
add
adc
adc
lods
or
jp
cmps
test
shl
or
sub
pop
js
pop
jns
and
push
pop
loopne
and
push
adc
xor
sub
test
stc
inc
cmp
in
fidiv
js
jle
test
das
aas
repz
push
(bad)
les
ins
outs
shl
pop
sbb
test
punpcklbw
iret
idiv
mov
sbb
outs
data16
jg
mov
add
ja
stc
add
add
cs
cmp
inc
out
cld
mov
jnp
loopne
ins
push
jo
jb
mov
push
arpl
sbb
mov
sbb
or
in
and
cld
jg
push
cmp
into
aas
fsub
cvttps2pi
std
or
adc
jp
(bad)
inc
or
jg
mov
fmul
sbb
add
shr
test
inc
mov
inc
jns
in
dec
push
jmp
test
adc
pop
out
xor
add
jno
out
je
cli
ror
sbb
pop
mov
loope
mov
xchg
add
mov
fwait
jmp
jmp
mov
in
(bad)
cmp
pop
push
fistp
iret
inc
adc
jp
pop
ret
mov
sub
(bad)
adc
addr16
mov
mov
jmp
inc
push
rcr
inc
test
or
xlat
pop
mov
push
sub
jg
mov
mov
mov
add
sbb
iret
mov
das
repnz
push
ret
test
rcl
movs
test
ror
pop
pop
push
inc
retf
clc
pop
jmp
loop
inc
push
cmp
(bad)
push
imul
out
ja
sbb
into
lea
cmc
xor
fcom
push
xor
mov
mov
test
sbb
jge
(bad)
loopne
push
in
test
outs
sbb
jns
jns
fisttp
out
pop
inc
aam
dec
lahf
pop
enter
sbb
cmp
(bad)
push
jbe
(bad)
nop
xor
and
mov
mov
loope
inc
push
mov
data16
mov
jp
leave
dec
or
pop
mov
retf
js
xchg
sar
jae
call
jns
rcr
push
jecxz
test
dec
sub
pop
mov
ror
in
xchg
aaa
xchg
outs
mov
inc
pop
fimul
sub
push
out
popf
push
fisubr
sub
cmp
mov
repz
pop
cmp
jmp
inc
cmps
out
iret
pop
lods
jge
clc
in
out
(bad)
in
pop
(bad)
out
clc
push
sbb
dec
xchg
and
movs
into
push
gs
test
fs
popf
ds
xchg
imul
dec
addr16
pop
aas
sbb
ins
ins
pusha
cmp
push
push
push
fidiv
and
sbb
jae
push
scas
lahf
adc
movs
shr
into
sbb
nop
in
push
xor
int
dec
movs
mov
cld
loop
jns
sub
fbld
ins
ds
push
ins
int3
cmps
fs
aaa
sub
xchg
pushf
data16
mov
mov
arpl
push
pushf
sub
xor
pop
mov
ja
out
dec
rcl
(bad)
int
jbe
lds
or
out
cld
pushf
cli
jg
cmp
pop
jmp
or
push
jl
arpl
mov
mov
cli
mov
sbb
push
cmps
mov
in
ja
es
ret
sahf
and
lea
mov
inc
cmps
mov
loop
sbb
sub
cmps
sbb
sbb
stos
mov
jne
mov
pop
dec
push
push
adc
and
into
cmp
je
add
dec
(bad)
push
clc
in
int
ins
dec
ficomp
push
dec
sbb
and
dec
(bad)
and
add
aam
or
adc
ja
jge
pop
pop
pop
mov
xlat
pop
cmps
push
daa
pop
adc
movs
xchg
dec
mov
sbb
iret
movs
xor
shl
xor
mov
jmp
sbb
push
lock
push
mov
or
dec
mov
ds
imul
sbb
stc
in
(bad)
fidiv
jg
mov
ret
push
cmp
jb
fcmovnbe
add
rcr
sub
mov
mov
mov
lock
(bad)
jo
xchg
fstp
adc
xlat
adc
stos
or
int
xor
(bad)
or
cmp
aas
das
add
repz
jmp
mov
xchg
cmp
push
push
lahf
and
cmp
pop
(bad)
(bad)
xor
dec
aam
sub
test
push
add
push
adc
sub
mov
pushf
lds
dec
cwde
retf
stos
fadd
int3
movs
and
xor
pop
xor
cmp
and
push
cmp
fimul
cmp
pop
adc
lea
ja
sbb
push
mov
mov
mov
(bad)
in
test
je
cwde
retf
movs
mov
sbb
rcl
dec
inc
test
cmp
xchg
mov
jge
ss
jmp
lea
sub
xchg
sahf
and
call
xor
inc
jb
cmp
push
jae
sub
mov
xchg
jp
add
adc
inc
or
out
xor
mov
cs
sar
add
mov
add
push
repnz
pop
cmovge
xchg
cmp
xchg
pop
xchg
adc
sub
test
cmp
lds
adc
aad
mov
inc
sbb
push
xchg
(bad)
in
rcr
dec
out
outs
mov
int3
pop
jno
scas
fsubr
or
sub
cli
jbe
int3
add
retf
sub
xchg
outs
lea
dec
daa
and
inc
stos
pushf
ret
inc
in
cmp
xor
in
lods
shl
jmp
arpl
hlt
iret
in
js
push
test
add
ret
aam
cmc
stos
mov
mov
pop
add
loopne
xchg
in
cdq
cmp
push
fs
or
add
pop
daa
push
adc
call
out
mov
dec
sbb
(bad)
dec
fldenv
cmp
xchg
pusha
pop
cs
mov
pop
fnsave
pop
xor
(bad)
cmp
and
jno
jns
les
cdq
(bad)
pop
cmc
std
cmp
xchg
std
jns
cli
adc
fild
xchg
data16
adc
dec
sar
push
movs
(bad)
mov
out
movs
mov
mov
jae
inc
cdq
mov
clc
out
mov
xchg
inc
nop
pop
and
daa
es
movs
fsub
mov
ins
aaa
and
not
push
or
fdivr
mov
xchg
addr16
push
and
jmp
enter
ret
sar
shl
jns
cli
xor
mov
sahf
mov
xchg
adc
dec
je
nop
fdivr
or
dec
repz
leave
dec
iret
xor
scas
mov
dec
popa
cld
xor
or
aas
sar
(bad)
test
xor
mov
jns
push
ret
enter
mov
lahf
sub
into
fnstcw
adc
inc
enter
xchg
inc
add
test
mov
inc
repz
mov
loope
out
sbb
mov
jae
sbb
neg
out
sub
(bad)
in
sbb
out
scas
addr16
and
jp
sub
icebp
jno
sbb
pop
mov
das
and
cmp
pop
cld
mul
sar
push
pop
lods
cmps
outs
pop
or
or
jbe
jmp
add
enter
sti
push
clc
pusha
iret
retf
dec
shr
xlat
xchg
in
lods
sub
sub
add
fdiv
mov
outs
pop
mov
adc
sbb
push
dec
pop
scas
mov
jg
imul
add
and
fsubp
ins
lea
inc
fnstenv
cmps
adc
jl
les
xlat
test
arpl
ror
adc
jp
xchg
or
dec
push
(bad)
xchg
rcr
inc
sbb
xchg
sub
mov
xchg
cmps
dec
pop
lock
iret
mov
mov
stos
test
sbb
and
call
div
sbb
mov
loopne
pop
push
lahf
jo
cmp
ds
xor
fwait
inc
loop
(bad)
xchg
or
sbb
fdiv
retf
loopne
lea
int
inc
scas
push
in
dec
aad
test
mov
push
idiv
push
or
outs
inc
fs
icebp
jne
es
push
dec
fistp
popa
pop
cwde
push
aaa
mov
into
sbb
shr
test
inc
out
dec
xchg
gs
add
mov
sub
test
pushf
push
xor
or
mov
dec
test
gs
ss
das
jle
mov
jne
xor
inc
loope
out
and
sbb
ins
push
aad
xchg
sbb
(bad)
fsub
dec
outs
test
ret
cmps
ficomp
add
pop
ds
jg
jno
cmp
stos
bound
bound
dec
sbb
pop
cmp
rol
or
repz
or
push
in
imul
jle
inc
add
icebp
cmp
jns
mov
pop
inc
je
lahf
addr16
mov
push
cdq
jae
dec
pop
mul
icebp
mov
dec
mov
mov
fnstcw
jecxz
sbb
xor
test
inc
scas
and
movs
inc
pop
cmp
or
sbb
add
jno
mov
xchg
sub
adc
lea
inc
cmp
into
popf
inc
clc
cmp
je
xor
iret
add
dec
scas
sbb
not
push
ja
push
fcmovnu
sub
(bad)
jo
jecxz
cdq
xchg
bound
dec
fwait
scas
pop
jecxz
cmc
ja
mov
mov
movs
(bad)
pop
loopne
je
push
bound
push
add
lea
and
push
rcr
mov
xchg
jno
jl
cli
jl
movs
aas
sub
ins
lods
adc
ror
jae
loop
outs
sbb
dec
addr16
dec
ret
ret
int
jbe
imul
cmp
addr16
add
push
push
popf
or
lods
add
pushf
(bad)
mov
xor
jmp
not
pop
pop
jecxz
iret
pop
mov
or
mul
or
inc
inc
jnp
popf
in
enter
sbb
aam
nop
ror
inc
xchg
pop
dec
aas
outs
gs
loop
pusha
jp
sbb
inc
inc
call
and
loopne
mov
ds
or
(bad)
(bad)
fisub
add
add
dec
test
and
ficom
aaa
and
cmp
cs
xor
add
retf
mul
adc
push
ja
lods
movs
int
stos
lods
ret
jmp
rcl
int3
es
or
xchg
ss
dec
pop
mov
xchg
aad
in
icebp
xor
sbb
fisttp
clc
xchg
add
ret
arpl
(bad)
cld
and
or
pop
ins
cmc
xchg
pop
sbb
or
nop
std
stos
divsd
(bad)
sub
repz
inc
shl
ds
xchg
and
popf
cmps
and
addr16
push
jno
adc
int3
dec
push
int
push
aas
push
scas
stos
repz
fiadd
xchg
mov
mov
cmp
mov
push
xchg
push
dec
stc
add
xor
(bad)
jmp
aaa
push
cli
imul
daa
mov
cwde
pop
xchg
in
mov
jb
push
jp
popf
cwde
sbb
pop
or
frstor
mov
cdq
test
gs
addr16
push
adc
dec
lds
cmp
cmp
pop
or
jg
js
cs
popa
lea
xor
fld
sub
cli
mov
(bad)
nop
add
mov
sub
xchg
das
fild
dec
je
jne
js
push
imul
mov
xor
and
cdq
in
inc
stos
popf
ror
lods
dec
cmp
mov
pop
xchg
jl
mov
lock
or
xor
or
mov
cdq
test
js
clc
mov
push
cmp
fbstp
jb
jp
mov
mov
sbb
jmp
xchg
cmp
pop
out
sbb
popa
xchg
loope
adc
push
lahf
js
call
movs
popf
pop
sbb
jb
neg
and
dec
movs
or
(bad)
fst
jbe
mov
cli
lds
cmp
sub
push
out
in
mov
sbb
fdivr
pop
push
sub
cmps
add
push
mov
cld
add
or
int3
mov
xchg
cmc
or
pop
movs
idiv
sti
fcom
mov
sub
push
or
mov
sbb
add
xor
fsubr
jp
inc
test
and
mov
lods
daa
lods
dec
xchg
and
data16
pop
ss
add
lea
jle
cmc
xchg
mov
je
add
cmps
js
cld
lds
arpl
push
pop
imul
mov
dec
imul
cmc
xchg
xor
mov
aam
lock
sahf
sub
add
out
jnp
stc
mov
xor
fcmovne
and
leave
test
adc
repz
sbb
dec
shl
and
mov
enter
aam
ss
sub
xchg
rcl
lea
push
xchg
jge
inc
bound
mov
rcl
sti
pop
retf
lds
pop
or
idiv
pushaw
aam
mov
pusha
fcomi
out
rcr
push
mov
cmps
scas
inc
adc
fmul
pop
adc
out
in
fldenv
xor
mul
shr
adc
cs
fsubr
jbe
xor
xor
lods
dec
dec
icebp
cdq
(bad)
ror
pop
int3
mov
add
test
mov
outs
add
out
push
mov
call
or
aaa
dec
adc
stos
mov
or
imul
sub
icebp
lods
fwait
daa
and
pusha
loopne
xchg
sar
ins
xlat
sahf
je
shl
cld
std
add
xchg
jae
and
push
fsub
fwait
add
sbb
jo
dec
xchg
xchg
aaa
jg
adc
mov
mov
push
jmp
xchg
pop
push
xlat
xor
sub
into
push
push
push
mov
sub
fs
inc
int
sbb
sub
lods
add
imul
out
loop
psadbw
pushf
sub
dec
xor
out
cmps
imul
and
gs
mov
mov
or
add
push
test
push
leave
mov
lea
and
imul
push
jmp
es
xchg
mov
std
dec
cmp
xchg
fdivrp
(bad)
pop
fiadd
cdq
pop
mov
mov
retf
rcl
loope
sub
das
test
push
sbb
adc
mov
repnz
xor
dec
popf
add
xchg
std
inc
call
xchg
mov
imul
dec
jo
push
pusha
into
mov
jae
add
and
lea
rcr
or
stos
shl
iret
sbb
stos
popa
sbb
int
cmp
outs
adc
daa
lods
cmc
cmp
cmp
hlt
pop
push
cmp
and
fucomip
dec
xor
mov
ja
xchg
aaa
out
aas
pop
jmp
adc
sbb
inc
sti
push
adc
mov
into
push
in
xchg
rcl
nop
popa
in
sub
inc
ret
loope
data16
inc
cmp
in
and
push
cwde
xlat
enter
push
push
push
es
test
and
add
hlt
and
bound
cli
pop
test
xchg
jp
loopne
cmp
or
jg
adc
movs
cs
(bad)
fbstp
sahf
jne
dec
(bad)
xchg
push
jle
jb
jge
inc
loopne
xchg
xor
sbb
push
push
push
jle
mov
ficom
scas
xor
mov
in
cmps
mov
in
push
sub
fwait
loopne
(bad)
fbld
int3
adc
fsub
sub
scas
loop
xchg
jle
mov
rol
ss
sbb
dec
fdivr
neg
call
out
leave
shr
xor
into
xchg
cmp
pop
inc
lds
sbb
sub
mov
xchg
adc
imul
jne
jnp
xchg
adc
(bad)
and
pop
std
dec
es
ins
dec
inc
fbstp
pop
out
xchg
popa
jo
scas
cmp
shl
and
mov
movs
mov
outs
ja
ins
lock
pop
outs
fsubp
adc
mov
mov
jp
cdq
inc
dec
push
sar
pop
lea
push
nop
cli
jmp
jg
(bad)
daa
add
jmp
dec
scas
loopne
xchg
das
mov
mov
or
mov
sbb
cmp
lock
(bad)
ss
jo
bound
adc
outs
mov
ins
jecxz
jno
jmp
mov
cmps
lock
cmp
repz
xchg
shl
inc
push
scas
mov
loopne
out
les
repz
icebp
adc
iret
and
push
loop
xchg
mov
mov
mov
call
jp
or
add
dec
jmp
sub
imul
pop
xchg
iret
call
xor
xchg
mov
push
and
retf
cmps
and
add
sub
mov
dec
push
and
ds
xor
test
xor
mov
aad
dec
repz
sub
gs
call
push
test
mov
enter
fs
inc
out
mov
mov
mov
das
sbb
imul
(bad)
out
mov
test
jmp
fst
push
sahf
mov
arpl
mov
test
and
xor
push
jbe
push
xchg
leave
ret
xor
mov
jmp
scas
lods
pop
movs
pop
xor
(bad)
sti
sbb
les
stos
xchg
icebp
jo
push
daa
ins
inc
in
popa
xchg
inc
jns
xchg
push
mov
ds
cmp
jp
data16
xchg
jg
clc
push
sub
les
cmp
jo
test
pop
mov
arpl
pop
mov
out
push
cld
mov
and
jmp
js
sbb
or
mov
add
test
adc
mov
fisub
mov
movs
mov
pop
imul
in
mov
movs
mov
call
inc
cmp
imul
enter
(bad)
cmc
mov
mov
test
out
inc
ror
jo
pop
ret
sbb
movs
aaa
sbb
xlat
outs
sbb
jbe
sub
mov
and
out
pusha
sar
add
shl
inc
xor
arpl
sbb
dec
jb
cmp
ret
and
push
push
push
and
xor
jmp
daa
mov
dec
push
cmp
imul
push
adc
pushf
and
pop
mov
dec
or
fwait
and
inc
mov
xor
jecxz
adc
jp
aad
ins
pop
dec
jmp
adc
sbb
popf
push
sub
fist
jae
call
shl
or
ss
pop
mov
cs
sar
push
cwde
sub
fimul
pop
test
repz
inc
push
cmp
(bad)
pop
jecxz
pop
sbb
adc
xor
outs
test
or
loopne
jae
ds
pop
(bad)
pop
adc
movs
xchg
mov
aas
dec
sub
sub
aas
ins
popa
(bad)
sbb
inc
(bad)
les
ret
call
pop
scas
jg
inc
mov
shl
push
js
jmp
out
addr16
shr
pop
loopne
ja
lods
cld
push
sub
cmp
xor
or
pushf
mov
xchg
test
mov
or
pushf
fdivr
call
mov
fdiv
mov
dec
push
data16
out
mul
or
fisubr
scas
movs
pop
pop
push
mov
xor
dec
loopne
adc
test
sbb
test
fs
push
or
add
jmp
jg
mov
hlt
ja
pop
sub
and
dec
add
les
mov
fdivr
cmps
inc
jno
push
out
movs
adc
cmc
push
pop
jns
out
arpl
mov
out
rcl
sbb
sub
enter
cmp
mov
inc
or
jb
push
jge
lods
addr16
or
and
add
sahf
mov
adc
sbb
pop
xchg
or
push
out
or
adc
ins
or
adc
add
jns
gs
icebp
and
ret
sbb
dec
inc
aaa
inc
sbb
call
mov
sbb
outs
rol
and
xchg
cmp
and
adc
mov
cli
(bad)
(bad)
push
jle
mov
imul
push
push
jecxz
inc
loopne
sub
and
sbb
data16
mov
xor
stos
lods
mov
jp
scas
stc
neg
jmp
push
in
nop
mov
push
fistp
cwde
outs
cmp
retf
dec
clc
jp
cmp
xlat
cmp
fild
mov
xchg
pop
arpl
mov
or
fsubrp
fnstcw
(bad)
push
push
pop
mov
and
push
repnz
std
je
imul
lods
movs
mov
lock
ds
ins
mov
or
dec
std
popa
fild
jno
daa
(bad)
sahf
ss
sub
mov
pop
movs
daa
lea
mov
mov
(bad)
test
xchg
(bad)
and
aam
add
cmps
or
push
mov
iret
mov
rcl
rcl
je
inc
xor
cmp
imul
ret
or
pop
popa
push
pop
call
xlat
mov
push
cmp
mov
test
cs
lahf
dec
mov
jo
push
bound
jne
neg
mov
pop
in
xor
lods
or
xor
xchg
int3
jecxz
mov
adc
dec
pop
xchg
ds
daa
jno
xchg
pop
cmc
rcl
leave
add
push
je
nop
inc
cmps
scas
xchg
mov
(bad)
ror
xchg
ins
xchg
or
cmc
xchg
jle
(bad)
cli
or
lock
add
inc
rcl
outs
sub
shl
xor
jo
add
xor
jne
jae
lock
and
jl
mov
or
sbb
or
sbb
xor
into
xor
ror
lds
mov
xchg
daa
mov
sbb
cmp
jno
pushf
ins
iret
xlat
push
out
hlt
mov
enter
adc
mov
cmp
stos
aam
ficom
shr
mov
dec
cs
lahf
(bad)
pop
lea
mov
ins
inc
mov
mov
add
jecxz
sub
stc
scas
shr
ficomp
test
dec
push
pop
and
xadd
sub
jecxz
iret
leave
mov
fiadd
sbb
lods
jns
imul
jne
sbb
mov
ror
jae
jae
fistp
js
or
or
bnd
cmp
icebp
sub
jbe
cmp
mov
sub
cli
inc
push
push
add
adc
js
jne
hlt
add
je
test
int3
shl
ror
cmp
add
jg
cmc
push
jns
xchg
jbe
ds
lds
aas
inc
cmp
test
repz
out
push
adc
adc
pop
dec
scas
or
sub
add
sbb
push
jno
sar
sahf
pusha
dec
pop
and
cmp
sbb
in
fwait
dec
mov
icebp
xchg
or
cwde
adc
push
jnp
fdivr
jno
shr
pop
inc
adc
stc
dec
cmp
ds
mov
xchg
gs
pop
lahf
jnp
push
sub
jle
dec
jmp
mov
mov
and
xor
sbb
cld
cmps
fs
cmp
and
dec
fisubr
js
add
stos
test
aas
push
mov
vcvttss2si
or
or
fmul
adc
xchg
idiv
sub
div
aam
ret
jbe
daa
sti
aas
retf
cmps
fs
dec
xor
sub
mov
test
cld
in
mov
add
daa
enter
sbb
iret
cmp
rol
not
and
(bad)
rcr
imul
je
pusha
pop
test
jl
cmp
push
(bad)
adc
and
sub
mov
jo
cmp
push
xchg
mov
adc
(bad)
jne
shl
in
(bad)
mov
sub
out
dec
mov
pop
data16
adc
call
mov
(bad)
outs
sub
out
imul
jle
cmp
movs
or
dec
adc
cmp
data16
in
sbb
mov
xlat
sub
mov
add
mov
pushf
dec
inc
pusha
sub
cld
adc
inc
out
jp
ret
into
shl
scas
jmp
in
jge
adc
adc
adc
ins
leave
push
fmul
(bad)
rcr
test
std
sbb
add
jns
push
or
jno
stos
imul
(bad)
aad
xchg
imul
mov
dec
sbb
pusha
push
cmc
push
sub
shl
(bad)
xor
jg
xlat
hlt
hlt
ret
xchg
mov
xchg
lock
stc
and
push
mov
and
push
popa
cwde
imul
pop
out
nop
and
dec
xor
sbb
sbb
ins
pop
push
jmp
test
cmp
icebp
cmps
mov
(bad)
jle
pop
data16
sbb
xor
dec
adc
xlat
and
scas
cld
jo
outs
je
pop
rcl
mov
pushf
leave
fist
mov
mov
sub
pop
pop
daa
xchg
xchg
add
scas
mov
mov
add
xchg
rol
sub
mov
dec
daa
adc
rcl
pop
lea
mov
rcr
lea
scas
movs
pop
jecxz
and
cmps
jb
ret
inc
or
push
inc
mov
stos
push
add
cmp
aas
fwait
cmp
pusha
pop
add
adc
fwait
ins
not
imul
add
push
xor
sbb
mov
xchg
ret
mov
leave
sbb
stos
call
adc
pop
(bad)
int3
jecxz
dec
movs
ret
add
and
inc
loop
push
pop
iret
in
pop
fistp
out
lds
mov
call
fs
movs
popf
(bad)
(bad)
sub
lahf
jl
sbb
cs
out
pusha
push
push
cmps
inc
jo
and
or
pop
stos
push
das
add
mov
and
(bad)
dec
adc
test
out
pop
pop
dec
leave
pop
jl
scas
cmp
dec
cmp
jp
xor
fsubrp
sub
push
enter
(bad)
fbstp
push
(bad)
stos
mov
sahf
aad
rol
jmp
lahf
and
(bad)
and
div
aam
pop
fcomp
or
(bad)
sub
(bad)
xlat
sub
adc
adc
inc
pop
cwde
push
xchg
call
sub
popf
out
xor
or
sub
or
xor
add
ds
cmp
clc
xchg
or
aam
push
inc
adc
mov
call
cli
or
xchg
cmp
scas
mov
sbb
push
pop
cdq
push
mov
sub
push
add
pop
outs
pop
and
push
call
dec
int
div
jg
cwde
xchg
push
out
or
adc
add
mov
hlt
and
jmp
mov
or
sbb
cmp
inc
sbb
outs
lods
sub
iret
test
sub
and
mov
xor
shl
or
or
add
xchg
enter
jns
xor
jnp
jle
jnp
outs
lock
pop
cmc
xchg
sbb
cmp
clc
lods
and
jge
jb
adc
mov
mov
aaa
fcomi
mov
int
jl
(bad)
cmp
adc
scas
retf
es
sbb
sub
shr
and
loopne
sub
rcr
in
cwde
pop
pop
std
mov
es
inc
je
addr16
jae
push
loop
adc
pop
stc
xchg
sar
fldcw
retf
jbe
sbb
add
xchg
fisub
call
sbb
mov
clc
pop
ins
add
push
xlat
test
mov
sub
cld
cli
rol
and
(bad)
xor
jg
cmp
mov
shl
inc
jno
jo
cmp
push
shl
ss
sbb
addr16
int
loopne
inc
add
or
aam
outs
sub
dec
dec
hlt
in
sbb
jmp
xor
leave
repz
aam
cmp
mov
lahf
and
sbb
and
inc
ret
repz
dec
ret
mov
adc
mov
push
shl
fsubr
shr
inc
ja
inc
outs
cmp
shr
iret
add
mov
jmp
pop
les
es
dec
xor
dec
jmp
jne
adc
ins
push
xchg
ins
pushf
and
dec
nop
jbe
push
push
and
xor
mov
outs
sbb
add
adc
cli
pop
jns
ret
jno
(bad)
ins
mov
cwde
sar
pop
xchg
out
cwde
repnz
orps
mov
pop
aad
lahf
repz
aam
mov
lods
xchg
sub
mov
pop
mov
pop
in
adc
add
xchg
dec
and
retf
sub
pop
lods
xchg
cld
xor
fist
mov
daa
mov
jmp
or
or
ins
lods
dec
adc
mov
(bad)
and
loopne
cmps
push
rcl
pop
leave
adc
jno
add
and
retf
cs
cmp
addr16
jp
mov
outs
fwait
xor
out
cmp
shl
aas
cmp
out
pop
or
push
sbb
jae
aam
adc
jle
inc
mov
mov
out
or
mov
mov
mov
aaa
inc
inc
data16
pushf
pop
push
call
push
or
aad
stos
dec
aas
fsubp
mov
cmp
mov
inc
arpl
push
sub
push
jbe
xchg
dec
jle
sbb
stos
cmp
push
jnp
add
js
daa
pop
mov
add
test
adc
mov
and
sub
hlt
fisttp
jbe
addr16
mov
push
div
or
test
out
fucomi
das
scas
push
into
lahf
jbe
test
inc
sti
fisttp
adc
daa
sti
pop
inc
sbb
mov
(bad)
xchg
mov
cmc
imul
js
into
fcom
lea
mov
push
mov
rol
aas
aam
pop
xor
or
xor
jecxz
xchg
cmp
fdivr
pop
ins
in
xor
mov
or
and
call
pop
movs
sbb
mov
bnd
inc
mov
call
mov
mov
xchg
pushf
push
mov
xchg
icebp
mov
pop
jne
sub
mov
add
rcl
retf
dec
aad
sub
gs
xor
cmp
push
(bad)
cmc
mov
dec
and
rcl
cmp
test
int
and
shl
mov
and
cmp
popa
repz
dec
aam
ins
in
sub
lahf
mov
push
fcmovne
je
push
or
inc
and
push
jb
(bad)
nop
dec
adc
mov
cmp
or
std
fiadd
rol
loope
js
sti
jo
mov
jbe
pop
ins
xchg
push
cli
xor
add
sti
cld
iret
add
cmp
mov
test
inc
xchg
das
stos
sbb
test
inc
lods
ret
ss
idiv
push
stos
pop
push
mov
push
test
xor
in
aad
ins
pop
icebp
or
movs
inc
inc
sbb
or
inc
ret
fstp
cmps
xlat
pushf
sbb
fsubr
mov
mov
out
test
imul
mov
fstp
pop
xchg
sbb
and
jp
dec
retf
or
mov
out
ja
test
cmps
(bad)
pop
pop
mov
inc
push
push
dec
mov
mov
rcl
lahf
or
adc
sub
(bad)
cs
fst
jl
mov
nop
jge
dec
mov
sbb
ror
(bad)
leave
in
push
in
(bad)
aas
cli
add
jmp
jnp
mov
(bad)
cmp
mov
jno
outs
xor
add
hlt
scas
stos
mov
xchg
mov
retf
jle
push
mov
imul
or
jmp
jmp
retf
ret
and
dec
clc
mov
lds
mov
out
outs
adc
xchg
lods
jg
sar
dec
out
cdq
leave
adc
outs
out
cwde
sbb
or
bound
add
pop
hlt
xchg
xor
jmp
push
push
mov
mov
in
std
xor
cmp
jp
adc
(bad)
xchg
sub
mov
cwde
lods
sub
stc
cmp
sbb
out
xchg
sub
retf
call
sub
inc
mov
cmp
pop
je
pop
cmp
arpl
jo
pop
dec
jg
pop
inc
loopne
stos
dec
rcl
or
iret
mov
lock
iret
ins
sub
add
push
(bad)
lock
sahf
in
lea
sbb
int3
jnp
call
ins
stos
(bad)
jns
xchg
jno
ins
and
pop
push
pop
mov
iret
test
push
inc
icebp
bound
and
ja
arpl
sub
shr
retf
mov
sbb
or
push
arpl
rcr
jae
lock
stos
int
xchg
push
inc
push
daa
xor
nop
jae
retf
rol
lea
pop
sbb
ja
in
(bad)
in
js
dec
inc
daa
mov
imul
jnp
or
jbe
out
das
ja
push
fs
(bad)
ins
aaa
test
in
jecxz
push
sbb
sbb
cwde
jmp
iret
adc
or
lea
fwait
aas
lock
imul
sar
leave
shl
jae
xchg
loope
pop
mov
scas
pushf
pop
push
test
aad
in
mov
lahf
inc
loop
xor
adc
rcr
ins
inc
mov
pop
adc
dec
test
sbb
xchg
stos
popa
inc
out
imul
rcl
int3
mov
int
jmp
jge
inc
ins
xchg
cmp
jg
imul
aaa
sbb
ins
fldcw
pop
inc
mov
sbb
xchg
xchg
dec
in
pop
imul
xchg
clc
std
xchg
xlat
fcomp
push
and
out
popa
pop
bound
jle
(bad)
movs
xchg
jne
rcl
sbb
add
inc
cwde
out
test
loope
jl
movs
hlt
dec
jg
les
fisubr
dec
pushf
ret
arpl
mov
daa
mov
iret
aad
rcr
mov
cmp
mov
pop
xor
push
cdq
push
jecxz
fdivr
mov
mov
xchg
test
aas
aad
gs
cmps
cmp
and
or
cmp
jno
aam
fs
push
xchg
retf
daa
rol
addr16
ins
fnstenv
mov
sub
push
cmc
je
push
jbe
scas
les
clc
retf
push
adc
adc
xchg
jbe
push
pushf
add
xchg
int
add
clc
pop
leave
mov
jmp
xchg
repnz
or
out
xchg
adc
add
pop
inc
xchg
out
push
(bad)
aad
in
popf
jb
(bad)
pop
xchg
adc
movs
xor
mov
(bad)
fbstp
es
jns
imul
addr16
add
cli
les
movs
push
sbb
mov
mov
adc
in
imul
clc
jne
mov
add
and
fsub
and
bound
nop
pop
inc
jbe
jge
out
das
cmp
cmp
sub
and
test
call
xchg
mov
or
mov
enter
js
call
cli
cmp
call
push
or
fsubr
jno
dec
cli
movs
cmps
pop
ins
pop
fidiv
sbb
adc
adc
add
cmp
and
cmp
sti
or
test
sub
jge
or
jbe
cwde
pop
jmp
add
add
test
xchg
xlat
js
jo
addr16
call
push
sbb
fwait
lods
ja
lds
call
jmp
xor
fwait
call
cs
adc
iret
in
and
out
sub
xor
or
lock
call
sub
push
inc
jp
push
outs
outs
out
cmp
outs
lfs
xchg
and
or
push
sar
cwde
int3
and
inc
retfw
outs
xchg
stc
icebp
fmul
loopne
test
pop
sub
xlat
jmp
lods
hlt
inc
push
inc
xchg
mov
add
stc
call
(bad)
cld
fsub
stos
xor
ud2
retf
aad
mul
mov
ss
outs
mov
outs
ret
lea
push
pop
sub
or
outs
inc
rol
in
xor
fstp
cmp
sub
cmps
lea
data16
aam
rol
nop
movs
data16
fwait
test
hlt
xchg
rcr
js
push
jmp
or
loope
call
inc
loop
mov
cld
and
das
mov
loopne
mov
push
imul
adc
xor
nop
inc
mov
mov
sti
in
ror
pop
popa
add
pop
movs
mov
data16
loopne
sub
aad
mov
shl
push
mul
fisttp
pushf
jo
pop
ins
sub
jns
sub
and
jl
or
mov
mov
(bad)
pop
into
dec
mov
je
adc
cmp
jnp
int
dec
cmc
dec
popf
sub
mov
jns
adc
or
sub
and
rcl
mov
mov
or
dec
test
nop
outs
sbb
add
sub
add
lahf
cmp
mov
add
pop
ret
mov
pusha
daa
dec
cld
sub
std
inc
mov
sub
retf
mov
lods
aam
inc
xchg
push
pop
sbb
pushf
out
lods
adc
repz
xchg
xor
test
jo
fs
sub
cmp
xchg
pusha
push
jno
mov
arpl
add
pop
pop
pop
mov
mov
add
std
stos
call
sub
fwait
ins
mov
mov
ins
pop
pop
loopne
add
cmps
dec
xchg
std
cmps
mov
sbb
push
jmp
pop
out
pusha
mov
into
sti
fwait
inc
inc
scas
jle
push
adc
xor
sub
repnz
(bad)
jg
jmp
hlt
shl
cs
imul
mov
out
push
mov
test
fcmovb
add
rol
fisubr
pop
and
mov
nop
ins
fisubr
adc
add
xchg
fstp
outs
aaa
out
inc
push
sub
aad
jno
mov
not
mov
cwde
push
loopne
fbstp
adc
xor
int3
jne
or
xchg
test
fsubr
loope
jge
sbb
xchg
clc
fimul
mov
push
push
sub
push
mov
fmul
xchg
call
mov
in
xor
xchg
stc
(bad)
mov
mov
xchg
jne
out
dec
lods
mov
dec
out
xchg
dec
enter
gs
pushf
push
daa
cmp
jne
loop
mov
rol
mov
(bad)
movs
xchg
das
retf
(bad)
imul
imul
jmp
(bad)
idiv
lds
adc
pop
inc
nop
cdq
scas
adc
mov
arpl
in
jo
push
outs
data16
mov
ja
jmp
test
ror
(bad)
js
pusha
xchg
sub
ins
jle
daa
call
sub
data16
(bad)
out
mov
xchg
lods
fadd
(bad)
fwait
pop
dec
dec
push
lahf
ror
test
push
add
rcr
dec
or
out
std
movs
jmp
loope
mov
sbb
adc
add
add
sahf
ds
xor
pop
lds
not
dec
or
inc
dec
lahf
iret
cwde
xchg
add
pop
iret
es
retf
mov
daa
sbb
mov
sbb
jge
iret
mov
loope
fld
aad
mov
aas
add
imul
or
mov
mov
sub
inc
adc
mov
pop
(bad)
sbb
cmp
mov
rep
ret
mov
and
pop
scas
sub
in
test
inc
adc
adc
dec
add
xchg
mov
loopne
cli
shr
inc
push
push
daa
mov
sbb
pop
push
xchg
cmp
out
add
mov
cmps
jg
xchg
adc
xchg
and
lods
mov
loop
add
mov
popa
cmp
mov
cmp
mov
test
nop
jmp
out
mov
ja
xor
rol
and
aas
and
mov
push
(bad)
mov
pushf
pop
push
mov
arpl
nop
xor
imul
push
call
cwde
mov
or
push
jle
pusha
(bad)
mov
cmp
jl
sbb
mov
or
mov
in
inc
adc
fidivr
sub
push
inc
ficom
push
dec
push
inc
xchg
pop
jmp
pop
and
push
mov
push
cs
pop
neg
imul
dec
cmp
inc
repz
xchg
stos
jmp
out
dec
sar
(bad)
sub
mov
mov
cmp
add
int
push
imul
lods
xor
mov
push
test
sbb
ins
jno
lock
add
push
data16
jle
mov
push
lock
pop
ret
out
mov
ss
or
adc
fwait
sub
je
popa
fisttp
sbb
inc
cdq
and
imul
inc
dec
repz
dec
jmp
iret
dec
inc
inc
dec
jae
xchg
jg
push
mov
xchg
loop
or
jo
data16
cmp
in
jb
das
add
pop
enter
pop
ret
ret
sub
imul
inc
mov
and
inc
(bad)
xlat
sub
enter
or
retf
sub
jle
dec
push
push
xchg
or
cmps
call
mov
cli
scas
ss
and
frstor
pop
mov
out
je
sub
lods
or
rcl
(bad)
push
stos
pop
sahf
jle
cmc
mov
mov
xchg
sbb
ret
fwait
inc
pusha
pop
hlt
imul
mov
movs
lods
retf
shl
mov
ja
dec
xor
and
(bad)
repz
cmp
mov
dec
outs
jne
out
out
cs
imul
xor
cs
or
adc
push
fimul
or
push
loop
add
imul
test
mov
or
andps
xor
rcr
je
mov
(bad)
dec
(bad)
sub
add
and
sub
jp
add
(bad)
mov
push
out
mov
iret
test
loop
adc
jmp
scas
pop
dec
xor
pushf
sbb
mov
lods
push
inc
mov
cmp
cmp
and
pop
or
loop
pop
out
mov
inc
dec
mov
outs
loopne
or
test
ror
mov
inc
and
jne
jnp
(bad)
into
aas
xchg
stos
(bad)
cmp
pop
test
lds
adc
cli
mov
repnz
mov
adc
loopne
xchg
xchg
or
frstor
cmp
add
ds
jg
sbb
sub
pop
call
ret
xchg
adc
cs
aam
ds
cmp
sub
out
jne
inc
mov
ret
mov
pushf
xchg
repz
cmp
addr16
jg
rcr
icebp
shl
mov
or
mov
lods
push
cmp
out
push
sbb
add
inc
adc
jl
dec
xchg
and
(bad)
in
cs
or
(bad)
jbe
test
arpl
xchg
(bad)
fisub
xchg
pop
data16
movs
jb
cld
jle
fabs
adc
sub
data16
sub
push
cmps
and
add
cmc
add
add
or
cli
aas
jmp
fist
jge
add
jmp
inc
movs
mov
mov
and
push
mov
loopne
lock
(bad)
jbe
fcomi
sub
call
ror
mov
dec
sub
push
ja
aaa
sub
xor
sub
outs
and
das
sbb
ins
mov
enter
aaa
popa
fwait
push
out
sub
or
mov
mul
and
aaa
loopne
popa
stos
xchg
mov
sbb
adc
xor
(bad)
clc
jb
mov
pushf
retf
mov
adc
jl
mul
cmp
push
mov
mov
mov
dec
sbb
adc
mov
mov
js
aad
ss
aam
mov
(bad)
cmc
lea
sbb
adc
adc
fsubr
push
xchg
cmp
pop
cmp
(bad)
fadd
bndldx
push
and
and
retf
fsubp
test
pop
fs
xlat
sub
jnp
out
inc
vpmadcsswd
mov
out
fucomp
mov
pop
or
pop
or
popf
mov
push
movs
mov
test
mov
outs
in
sbb
idiv
lods
push
fbld
shr
jae
pop
xchg
sbb
add
mov
and
mul
jb
fist
ror
js
cmp
xchg
es
stos
repz
mov
push
jne
sbb
dec
mov
mov
gs
or
lock
stos
push
movs
push
dec
in
jle
dec
xchg
push
dec
cmp
inc
cmp
stc
push
ret
push
lods
inc
push
jmp
mov
xlat
inc
shr
jae
fsubr
int
imul
(bad)
pop
cdq
pop
ror
xor
or
shr
les
push
fst
xor
lds
mov
sub
ja
xchg
leave
mov
pop
pop
in
cmp
mov
cmp
scas
mov
mov
out
xor
jle
jmp
jmp
daa
mov
xchg
sti
inc
vmread
fucomp
jl
cmp
lock
xchg
adc
pop
out
imul
cmp
out
xor
mov
jmp
push
cmp
idiv
xor
pop
xchg
pop
pop
sub
rcr
push
mov
add
push
jg
scas
dec
lods
mov
pushf
add
call
data16
mov
neg
mov
call
cmp
hlt
push
hlt
ins
repz
mov
out
push
sbb
cmc
nop
out
mov
push
mov
cmovb
repnz
leave
mov
mov
sbb
push
imul
mov
rcl
jecxz
mov
jno
fisub
pushf
int3
fisubr
xchg
lods
int
(bad)
test
into
jge
xchg
mov
scas
shr
adc
adc
hlt
cmp
jecxz
xor
add
cmp
push
cmp
add
imul
xor
jl
inc
in
rcl
add
and
jmp
sub
xchg
mov
dec
mov
jnp
pop
mov
daa
adc
push
ins
test
jbe
lods
cmp
dec
adc
test
jge
pop
mov
xchg
dec
fidiv
sar
xchg
popf
sbb
push
cmp
sbb
js
dec
out
pushf
frstor
sti
sub
pop
rol
inc
ds
retf
xor
mov
js
lahf
pusha
fcomp
inc
add
or
push
pop
pop
adc
or
loop
mov
add
add
xor
in
mov
inc
xchg
push
(bad)
jbe
mov
je
xor
js
ret
dec
(bad)
push
mov
dec
cli
adc
xor
out
cmc
arpl
sbb
sti
leave
add
shl
not
xchg
addr16
retf
push
add
mov
les
mov
jmp
(bad)
in
inc
sbb
stc
push
add
push
xchg
sbb
mov
aam
inc
loopne
cmp
je
mov
mov
push
ficomp
adc
inc
cwde
jmp
aam
push
hlt
mov
outs
and
jle
cmp
mov
cmp
sub
push
cs
mov
push
ss
adc
in
int3
jbe
add
inc
fistp
cmp
push
std
aam
sbb
xor
push
(bad)
sub
std
arpl
pushf
dec
push
pop
shr
fist
bound
shl
leave
mov
xor
outs
shl
test
movs
inc
test
cmps
sahf
mov
jmp
ins
xchg
fsub
inc
and
neg
jge
xor
scas
aaa
(bad)
cmp
(bad)
sti
xlat
sbb
imul
pop
sbb
sub
and
clc
dec
pop
fadd
sub
sahf
mov
push
or
inc
cmc
outs
sub
and
cmp
jb
ficom
(bad)
les
xor
adc
cmc
pop
iret
fisubr
les
or
add
xchg
xchg
lds
pop
gs
(bad)
cmp
das
arpl
movs
scas
sbb
ror
repz
adc
mov
cmps
or
loopne
repz
mov
in
sti
mov
rcl
mov
nop
out
xchg
xchg
jae
sbb
iret
fld
jae
cld
sbb
outs
or
inc
add
ret
adc
out
lods
adc
mov
push
adc
jb
dec
(bad)
rol
mov
sbb
das
push
mov
push
outs
add
cmp
repz
in
cmp
sbb
outs
adc
fcom
aad
sbb
je
or
xchg
hlt
mov
cmc
stos
imul
out
sbb
xor
and
ja
inc
push
adc
mov
pop
jecxz
out
icebp
mov
and
mov
mov
inc
xlat
adc
lock
inc
out
test
sbb
pop
out
movs
int3
xchg
mov
les
xchg
into
jmp
aaa
mov
inc
sub
inc
dec
xor
fwait
xlat
fs
mov
mov
mov
push
jmp
outs
mov
pop
jmp
(bad)
adc
imul
inc
xchg
mov
bound
dec
fistp
lock
jmp
xlat
in
xchg
cmps
jne
hlt
push
cmps
lods
push
and
outs
js
imul
mov
cmps
mov
ret
retf
and
mov
pop
xchg
dec
ret
mov
daa
sbb
call
mov
nop
(bad)
sub
jp
jle
dec
mov
push
dec
adc
lock
xchg
jp
nop
xchg
push
ret
pop
(bad)
adc
call
xchg
icebp
mov
aaa
pop
shr
xchg
push
jae
test
jmp
cld
sbb
and
or
cmp
sbb
or
stos
mov
fcom
inc
pop
mov
xchg
xchg
int
pop
fwait
stos
xchg
and
jnp
sub
(bad)
and
pop
(bad)
data16
pop
cmp
push
push
or
and
and
out
push
call
rcr
addr16
fcomip
mov
sbb
mov
xchg
push
div
(bad)
cld
cmp
outs
inc
inc
fsub
ror
sub
in
pop
xor
sbb
inc
fdivr
daa
sbb
inc
xchg
gs
(bad)
xor
in
mov
add
mov
and
cmp
or
in
arpl
repnz
pop
stos
ffree
inc
je
mov
inc
sbb
mov
mov
push
or
sar
hlt
xor
aad
cmp
or
cmc
jl
cmp
ins
mov
ins
mov
cmp
clc
or
loopne
rcl
cmps
mov
lods
xchg
xchg
mov
bound
jb
fistp
xchg
xchg
inc
(bad)
sbb
clc
mov
sti
int
bound
mov
xchg
jmp
aad
inc
xchg
mov
xor
leave
movs
pop
push
retf
stos
ins
cwde
out
icebp
jne
es
rcr
cmps
out
xor
aas
mov
retf
inc
inc
lea
arpl
inc
pop
xchg
test
fldcw
pop
iret
test
push
or
add
jle
in
or
gs
mov
pop
cmps
iret
jmp
jmp
pop
mov
inc
or
outs
repz
stos
mov
or
jle
push
inc
dec
out
jp
movs
adc
jmp
pushf
mov
adc
aam
gs
(bad)
std
adc
gs
fidiv
pop
out
xchg
xchg
pop
movs
add
popf
jbe
or
daa
outs
sti
out
pushf
mov
inc
scas
inc
or
mov
cmp
xchg
dec
and
loope
rol
pop
cmp
mov
mov
jo
outs
xchg
enter
xor
cld
push
jmp
iret
int3
out
mov
mov
pop
loop
push
inc
arpl
aaa
sar
mov
repnz
xor
retf
mov
push
fsub
add
lock
mov
(bad)
into
(bad)
ror
cld
xchg
cli
add
jnp
lock
mov
sbb
scas
sti
mov
sbb
into
jge
loopne
iret
jmp
mov
or
jp
push
in
ffreep
into
cs
fs
inc
sbb
push
test
dec
jge
cmps
fisub
into
dec
je
je
and
idiv
mov
aad
daa
add
jl
mov
mov
fldenv
fs
mov
fcomp
pop
ins
push
lods
fs
jb
xlat
add
shl
pop
imul
and
mul
inc
sub
sbb
sahf
xor
cwde
inc
in
retf
out
and
jp
arpl
fistp
mov
jns
push
adc
dec
test
pop
mov
bound
push
push
sub
stos
sbb
(bad)
in
mov
pop
sub
sar
(bad)
call
loop
popa
movs
mov
sub
jnp
movs
popa
inc
pop
lock
sub
lods
lock
clc
dec
cmp
pop
push
jl
scas
out
adc
clc
loop
out
mov
and
pushf
cmp
lock
popf
push
mov
call
ret
imul
ja
push
dec
int3
loopne
xchg
mov
sbb
test
xchg
call
clc
fwait
inc
or
stos
aaa
or
mov
scas
inc
rcl
adc
jl
jae
imul
xor
dec
cmp
xor
frstor
xchg
cmp
push
jno
popa
push
ret
(bad)
sub
retf
jg
mov
cmp
aad
inc
mov
imul
stos
add
in
mov
pop
xor
jns
retf
in
push
ja
jecxz
sub
call
cmp
retf
js
or
push
js
sbb
ss
loop
mov
xchg
je
or
leave
in
mov
inc
inc
js
cmp
or
cwde
mov
cmps
push
sbb
xchg
mov
mov
out
ss
mov
sub
sub
mov
clc
cs
xchg
and
xor
cmp
sbb
adc
lds
test
sbb
in
rol
les
xchg
sbb
cmp
cwde
push
jmp
stos
xchg
test
mov
adc
jno
add
lods
outs
mov
push
addr16
aaa
cld
mov
mov
sub
and
fld
pop
loop
and
cs
aaa
inc
add
mov
test
jl
jnp
mov
sahf
mov
inc
shl
leave
cdq
push
pushf
outs
inc
ret
jmp
jb
scas
jl
cmp
xchg
popf
jno
sub
(bad)
fadd
add
sti
push
jns
cli
xlat
mulps
mov
or
and
dec
call
loopne
shl
leave
mov
ror
fdivrp
in
cmp
fnstenv
pop
loopne
aas
xor
push
mov
cmp
adc
mov
imul
mov
outs
add
and
imul
movs
jne
add
pop
xchg
dec
cwde
pop
scas
jnp
jge
lds
or
cmp
mov
adc
test
and
sahf
inc
add
xchg
es
fidivr
jmp
stc
clc
sub
push
and
vshufps
adc
(bad)
xor
shr
test
adc
ret
gs
jnp
pop
cmp
int
stc
jl
(bad)
cmps
sub
sub
and
adc
addr16
jl
ja
loopne
ror
add
sar
ja
pop
and
push
outs
cs
loope
bound
ins
mov
cmp
mov
(bad)
or
(bad)
stos
stc
inc
inc
jno
movs
cmc
or
outs
(bad)
ins
sub
bound
fcmove
mov
into
aad
inc
lahf
jle
cmps
pop
sbb
and
or
in
nop
and
add
push
dec
neg
(bad)
xor
mov
lock
pop
cmp
or
seto
cwde
shl
add
pop
push
in
or
(bad)
sbb
and
xchg
imul
mov
dec
jo
inc
cdq
cmps
push
ret
jbe
sbb
dec
mov
scas
fld
test
add
cmp
push
or
add
fsub
xchg
mov
mov
cmps
aam
push
arpl
pop
xlat
lds
mov
out
popf
cmp
push
jne
cmp
sahf
jge
xor
test
lods
fdivr
sub
aad
cli
cmp
aaa
fldenv
into
mov
sub
imul
xchg
jg
test
ret
lods
add
pop
js
in
dec
ds
mov
movs
jns
fsubr
jno
pop
in
dec
or
bound
data16
clc
sbb
fsubr
xor
push
(bad)
pop
push
add
das
imul
mov
add
ds
inc
sub
mov
sbb
aas
push
dec
inc
mov
pop
and
and
mov
inc
adc
gs
aaa
cdq
dec
lea
pushf
icebp
outs
jo
(bad)
fsubr
sub
jp
adc
rcr
and
jmp
lahf
and
inc
push
imul
inc
ss
jns
mov
outs
cli
stos
shr
rol
sub
jl
movs
call
pusha
pushf
call
out
js
cmc
and
retf
fdivr
enter
scas
popa
imul
sbb
out
jns
mov
adc
add
pop
outs
sbb
and
out
xor
and
jle
cmp
fs
imul
in
loop
xchg
(bad)
bound
iret
cld
mov
outs
arpl
(bad)
lea
mov
movs
and
(bad)
imul
jp
xchg
jg
sahf
cld
and
icebp
xor
dec
shl
inc
mov
mov
cmp
ret
psubsw
cdq
pop
jmp
ret
xchg
or
imul
stc
cmp
adc
sub
leave
dec
jno
lahf
mov
(bad)
mov
fadd
ret
scas
jbe
adc
or
loope
or
shl
outs
dec
xchg
and
or
(bad)
and
push
(bad)
xchg
das
jecxz
cli
sti
fst
iret
mov
and
mov
fisttp
les
xor
rol
adc
test
sahf
pop
test
mov
push
mov
mov
or
jnp
inc
test
mov
or
sub
jae
mov
add
nop
lods
je
xor
pusha
mov
lds
adc
call
into
je
loop
aad
add
jp
xchg
sub
adc
pusha
xor
mov
sbb
addr16
outs
mov
and
dec
inc
js
call
cmps
pop
pop
inc
xor
sahf
mov
ret
sbb
push
cs
jae
imul
jmp
mov
std
push
xor
mov
mov
out
mov
push
(bad)
popf
sbb
xor
scas
jno
mov
pop
mov
jge
stos
ds
aad
xor
sbb
(bad)
movs
retf
test
jnp
xchg
inc
and
xchg
jbe
cli
push
mov
sbb
push
call
jno
cld
push
push
push
shr
pop
push
xor
mov
sub
inc
jo
push
sahf
jb
xchg
hlt
xor
bound
xor
and
or
pop
scas
add
dec
imul
shr
inc
dec
dec
outs
push
mov
pop
in
dec
inc
repz
or
shr
retf
add
enter
mov
fild
scas
fcmovbe
dec
mov
jmp
cmps
push
shl
bndldx
test
sahf
in
ret
jp
add
cmp
pop
pop
add
xor
retf
push
inc
xchg
or
gs
das
into
pop
in
mov
loop
mov
dec
loop
push
sub
fdiv
push
jle
jge
enter
out
sub
mov
sar
(bad)
es
ins
sub
pushf
jnp
sub
test
cmp
stos
xor
add
cmps
neg
add
jae
retf
push
fwait
(bad)
scas
leave
xor
sub
jecxz
xchg
or
xor
mov
dec
mov
mov
mov
push
call
pop
xor
dec
call
adc
in
mov
pop
add
(bad)
or
(bad)
in
jp
cmp
jg
sub
shl
mul
jle
iret
movs
sahf
or
or
xor
aaa
and
and
sbb
mov
int
sbb
rcl
xchg
add
mov
push
fcom
scas
inc
dec
jle
int
jecxz
movs
xor
inc
fdiv
sub
fs
cmps
outs
inc
movs
push
enter
push
mov
push
xorps
int
mov
jno
leave
add
test
sbb
xor
cs
js
and
clc
je
add
nop
mov
(bad)
rcl
and
les
mov
sub
mov
out
add
rcr
dec
add
in
xlat
push
and
sub
jae
sar
sbb
fmul
imul
lock
or
pusha
mov
cli
adc
outs
je
lock
dec
mov
jp
xchg
fld
ins
pop
or
ficom
mov
in
(bad)
or
das
(bad)
pusha
sahf
or
mov
add
push
(bad)
fisubr
mov
(bad)
jecxz
sbb
and
cld
aam
add
into
xchg
push
jecxz
ret
fwait
sub
mov
std
dec
repnz
int3
pop
sub
or
jmp
test
xor
shl
sti
inc
clc
in
mov
aaa
add
or
dec
fs
push
adc
push
test
ret
ins
jmp
cwde
mov
nop
jecxz
pop
inc
out
lods
jae
and
push
xchg
sub
stos
mov
popf
ins
mov
leave
sbb
stos
call
(bad)
adc
or
in
and
loopne
(bad)
stc
jge
cdq
push
inc
push
mov
cmps
ss
arpl
pop
arpl
call
xchg
or
xchg
xor
cmp
push
das
add
dec
and
pop
or
xchg
(bad)
rcr
push
ds
lea
sub
movs
dec
push
stos
jg
retf
ja
adc
mov
sti
ins
cmp
xchg
push
into
loope
mov
inc
mov
mov
or
pop
cmps
test
mov
adc
add
mov
out
mov
dec
test
pop
popa
jmp
push
ret
in
sub
sbb
cld
sbb
es
dec
sbb
nop
sar
dec
xor
or
retf
pop
in
cmp
(bad)
adc
jne
popf
mov
xchg
(bad)
fcomp
in
pop
scas
sbb
mov
pop
mov
add
fdiv
and
lea
jg
mov
icebp
pop
mov
cmp
mov
(bad)
mov
mov
inc
inc
sbb
jbe
add
mov
ss
xor
outs
dec
repnz
ret
cmp
mov
xor
sub
scas
fld
icebp
bound
popa
push
jp
cmc
int3
mov
mov
jae
inc
mov
mov
addr16
mov
cmp
call
adc
xchg
or
and
xor
std
sti
ins
call
and
dec
and
movs
jne
or
xchg
inc
pop
rcr
inc
test
stos
lods
mov
push
mov
ret
sahf
sbb
and
retf
lock
movs
jle
jae
push
adc
push
mov
hlt
jne
push
pushf
mov
cmc
stc
(bad)
nop
push
inc
jmp
cmp
rcr
adc
xor
push
out
retf
out
xlat
lods
push
mov
mov
test
adc
push
dec
clc
ins
jae
adc
sub
hlt
mov
fidivr
aas
rol
ins
adc
aam
aam
movs
mov
mov
(bad)
xchg
and
inc
or
ja
jnp
xlat
xchg
jmp
dec
cld
xor
mov
jne
cmp
fcom
cmp
mov
sub
popa
fild
mov
cmp
popf
addr16
loope
mov
aas
sbb
arpl
mov
and
jmp
adc
sub
in
add
fisttp
(bad)
test
push
push
aam
pop
mov
mov
jmp
lahf
adc
xchg
pop
add
shr
xchg
push
mov
ret
pop
sub
mov
xchg
dec
cld
dec
add
add
jle
xchg
push
mov
(bad)
sbb
mov
scas
cmp
mov
push
mov
or
scas
push
js
xor
loope
fbld
push
lock
popa
dec
fs
xor
mov
enter
hlt
mov
xor
out
rcl
dec
adc
(bad)
xor
ds
push
fdivr
push
sub
inc
in
rcl
pop
int
shl
test
jo
add
fwait
sbb
test
dec
sub
test
push
mov
push
jp
popa
cmps
cmp
xchg
ja
cdq
fcom
rol
pop
repz
daa
mov
cmp
cld
or
push
movs
jb
je
into
(bad)
xlat
pop
(bad)
out
mov
xor
xchg
adc
test
fs
imul
cmps
repz
pop
and
stc
pop
pop
fstp
shl
(bad)
shr
mov
mov
(bad)
ret
daa
shr
mov
jne
fld
sub
jbe
ds
cmps
icebp
stos
pop
loop
or
hlt
xchg
sub
add
adc
cmps
jp
inc
(bad)
sbb
clc
jmp
cmps
fcmovu
imul
enter
sub
hlt
test
cli
dec
out
stc
test
aad
mov
in
ret
or
cmp
cld
hlt
jmp
retf
popf
jae
jge
shr
pushf
imul
pop
sti
cs
cld
push
sub
mov
sahf
test
xchg
and
mov
jno
xchg
outs
or
pop
sbb
neg
add
push
or
or
test
inc
scas
xchg
test
push
dec
push
pushf
(bad)
out
sub
xor
add
int
imul
mov
addr16
pop
icebp
cmp
pop
int3
sub
jmp
jle
cmp
adc
adc
ret
call
push
retf
mov
out
pop
jle
add
mov
cmps
jmp
or
pusha
xchg
je
xor
popa
mov
int
and
imul
xchg
xchg
aam
sbb
dec
jae
movs
push
push
mov
imul
pushf
mov
out
enter
(bad)
fbld
stos
loope
xor
aaa
add
push
stos
call
mov
add
sbb
(bad)
out
aad
lods
jnp
xchg
sub
inc
sub
mov
(bad)
dec
je
leave
mov
jnp
ins
sbb
pop
add
(bad)
push
fwait
push
ds
in
in
popf
(bad)
loop
xchg
dec
iret
scas
aad
and
repz
cld
test
sbb
cmps
cli
mov
imul
unpcklps
pop
imul
mov
imul
std
jmp
(bad)
aam
outs
ja
loop
and
inc
mov
int3
inc
mov
bound
les
xchg
dec
loopne
xor
aaa
in
fisub
mov
mov
lahf
aad
hlt
xchg
xchg
(bad)
cmp
es
dec
mov
loope
(bad)
jge
call
popa
mov
pusha
jp
sbb
fidivr
mov
stos
pop
push
adc
add
leave
mov
xchg
repnz
jo
cs
mov
adc
sbb
add
xor
mov
mov
popa
jmp
push
push
push
movs
pop
mov
push
sahf
enter
xor
or
rcl
sbb
cmp
int3
aam
add
and
imul
in
xchg
lea
scas
push
mov
jg
cmp
xchg
out
push
fs
retf
push
ss
cmp
jno
push
addr16
ror
push
in
sub
loope
call
in
mov
xchg
test
add
inc
pop
ds
jmp
enter
mov
pop
inc
sahf
aas
xor
je
retf
xchg
iret
or
cmp
jl
pop
imul
sbb
push
mov
xchg
test
sahf
or
push
xchg
push
fwait
shl
mov
mov
movs
sahf
push
mov
and
out
and
and
es
add
loop
(bad)
es
sub
int3
jb
push
mov
mov
scas
shl
inc
test
sbb
ds
mov
inc
out
out
sbb
mov
(bad)
out
out
test
inc
lods
jl
(bad)
not
aad
add
and
(bad)
retf
mov
(bad)
xchg
nop
(bad)
fwait
ss
jbe
cmps
leave
jbe
xor
adc
fld1
fsub
fld
cmp
outs
fcomp
xor
repnz
pop
dec
pop
(bad)
sti
mov
ins
addr16
imul
sbb
jnp
scas
dec
pop
icebp
ret
ret
bound
mov
fwait
jmp
push
in
sub
je
lock
add
mov
add
push
retf
sahf
push
cld
pop
imul
mov
fdiv
retf
(bad)
das
adc
xchg
pop
mov
(bad)
out
mov
inc
mov
xor
or
and
and
scas
(bad)
jnp
stos
inc
mov
into
sub
cmc
lods
fwait
push
sbb
push
push
or
aam
pop
mov
test
fsub
push
mov
setnp
aas
shr
ss
xlat
sar
and
leave
shl
sbb
pop
and
mov
jl
or
ss
jmp
mov
pop
scas
mov
je
icebp
cs
int
push
mov
mov
mov
into
jb
ja
enter
inc
sbb
shl
fwait
inc
jmp
push
dec
mov
ds
or
aaa
cmp
(bad)
fldenv
retf
in
idiv
ss
jnp
xchg
jmp
jmp
xlat
mov
xor
shr
sbb
jl
lods
(bad)
xor
dec
xchg
mov
or
mov
jae
or
das
es
fwait
push
call
pushf
cmp
fmul
lahf
out
xor
dec
push
jle
clc
xchg
in
mov
(bad)
or
mov
jbe
dec
ret
xchg
mov
pop
jg
out
call
pusha
push
(bad)
pop
push
jmp
mul
inc
dec
sbb
adc
sbb
jmp
cli
adc
loopne
dec
dec
mov
sbb
fnstcw
jbe
aas
sbb
mov
mov
push
jnp
(bad)
mov
lods
popf
leave
and
push
gs
stc
sub
idiv
mov
xchg
xor
addr16
nop
dec
mov
cmp
ds
enter
add
stos
and
pop
jbe
inc
iret
movs
mov
add
adc
push
lods
or
outs
loope
scas
or
lods
dec
test
test
sub
mov
jae
outs
and
and
sub
pop
mov
aas
sbb
adc
(bad)
jp
ins
or
movs
pop
out
ja
push
xor
xchg
mov
in
xor
in
xor
pop
pop
push
jb
or
ret
rcl
pop
test
(bad)
fld
cmp
xchg
mov
mov
pop
ds
sbb
add
cmp
sbb
jmp
adc
sub
stos
and
push
and
(bad)
cwde
sbb
dec
push
mov
xor
push
jle
mov
lds
mov
loopne
ja
push
test
outs
and
lods
aas
stc
inc
sbb
sbb
retf
fwait
xchg
inc
dec
jecxz
ret
mov
adc
and
inc
push
and
add
pop
mov
adc
dec
add
sub
jns
xchg
pop
xchg
movs
mov
inc
imul
(bad)
xchg
clc
and
ja
nop
sbb
and
dec
add
in
push
inc
mov
stos
adc
call
xchg
(bad)
xchg
cs
mov
mov
pop
in
jp
and
dec
sbb
ins
pushf
add
lods
xchg
add
jl
pop
fwait
mov
jle
addr16
out
or
mov
xor
dec
xchg
and
(bad)
push
clc
sbb
outs
mov
dec
loop
call
xchg
or
mov
cmps
pop
push
mov
inc
enter
lahf
jnp
cmp
call
mov
mov
loop
outs
lahf
pop
cmp
cmp
lds
pop
out
cmp
jne
jmp
adc
cdq
inc
sub
fwait
jle
push
pop
ffree
xor
inc
jmp
push
jmp
xchg
jmp
pop
ins
adc
inc
ins
mov
mov
and
arpl
idiv
jp
stos
ds
push
popf
and
jnp
out
mov
aaa
pop
test
add
mov
std
add
xchg
rcl
sbb
test
mov
adc
and
inc
movs
in
cmp
fadd
enter
sub
or
leave
es
pop
jmp
pop
jp
mov
shl
mov
mov
aad
in
jle
out
cwde
mov
loop
push
push
fsub
mov
mov
hlt
pop
jo
shl
pop
cmp
mov
mov
das
pop
mov
dec
mov
ins
pop
cld
outs
sub
cmp
xchg
cdq
leave
sub
mov
xchg
dec
lahf
mov
out
inc
int
xchg
inc
dec
in
inc
out
mov
std
out
aas
cmp
sbb
repnz
push
jmp
fcom
push
mov
jo
xor
popf
call
sbb
repz
push
cmp
fisub
adc
(bad)
pop
mov
or
pop
in
and
and
fisub
shl
jge
iret
mov
out
shl
aad
test
jecxz
ins
and
adc
rol
add
dec
ror
sahf
(bad)
dec
lea
add
sub
aad
std
push
jno
pop
add
or
mov
inc
bsr
cmp
sbb
lea
cld
jo
push
jne
push
ins
idiv
dec
xor
adc
out
pop
pusha
jmp
lahf
fidivr
into
add
add
adc
imul
push
and
ret
loopne
xor
lds
sub
xor
mov
push
or
dec
sub
jae
sub
or
jbe
imul
xor
push
xor
cdq
inc
inc
pop
mov
pop
mov
mul
pop
leave
jmp
lock
cmc
xchg
nop
push
push
mov
popa
fwait
and
mov
mov
jno
add
jmp
push
or
mov
ins
mov
add
or
cld
out
mov
neg
adc
into
out
push
in
mov
mov
arpl
push
movs
push
test
sbb
cmp
sti
mov
and
mov
lds
xlat
cmp
mov
xor
outs
push
pop
xchg
mov
xchg
neg
sub
push
nop
ror
enter
push
add
fidivr
idiv
cmps
or
push
outs
arpl
inc
sub
mov
cmp
rcr
call
cwde
mov
mov
repz
out
cmps
enter
lahf
sbb
stc
inc
cmp
int3
xor
std
push
cld
cli
mov
into
mov
pop
mov
ret
pop
xchg
jbe
pop
mov
rcl
repz
inc
fcom
mov
shl
jp
fsubr
dec
mov
or
cmp
fld
mov
or
fcom
fisttp
lods
mov
xor
dec
je
jg
sub
or
hlt
add
leave
fld
arpl
sub
dec
int
and
inc
in
mov
sbb
icebp
cdq
mov
jmp
cmp
(bad)
enter
adc
and
or
in
jbe
lock
xchg
sti
sti
push
pop
je
dec
enter
and
cmps
mov
fs
and
imul
ins
xchg
aam
ss
push
xor
stc
imul
xor
loop
mov
loop
in
ss
outs
scas
jg
test
push
pop
es
cld
jp
add
sbb
(bad)
movs
mov
gs
ins
imul
cmps
cdq
ficom
add
xchg
push
pop
mov
sbb
dec
mov
repz
std
retf
mov
jno
jmp
mov
fild
cdq
(bad)
pop
adc
fnstsw
jmp
push
je
(bad)
xchg
std
cli
push
fnstsw
inc
repz
xchg
ss
mov
inc
mov
jmp
xchg
(bad)
push
ss
pushf
xor
jae
mov
cmp
pop
test
add
out
das
jbe
mov
in
xor
fldcw
or
push
push
in
icebp
sub
or
js
jmp
push
sar
pop
cmps
out
xchg
ins
aam
fsubr
pop
xchg
xor
mov
in
aam
mov
cmps
or
pop
adc
ins
mov
rcl
mov
aad
call
jb
lahf
or
fnsave
ds
fst
out
inc
outs
and
je
ja
out
popa
fnstcw
jmp
mov
or
mov
mov
xor
dec
xchg
ss
stc
int
fst
cmp
push
xchg
iret
cwde
mov
call
stos
fcom
mov
adc
and
jmp
adc
xchg
xor
sbb
lds
xor
mov
neg
mov
sbb
addr16
mov
je
push
sub
div
mov
add
enter
sub
int
and
lock
dec
push
ins
mov
inc
mov
fucomp
shl
cmp
cmovge
xor
add
mov
sub
js
test
and
push
cld
leave
push
xor
dec
xchg
inc
pop
adc
nop
push
repz
gs
rcl
sub
fsub
inc
shl
xchg
mov
das
(bad)
push
loop
mov
and
cmp
pop
scas
pusha
or
mov
pop
arpl
fidivr
dec
sub
and
call
mov
adc
sbb
out
inc
mov
xor
and
clc
sbb
or
fisub
or
xchg
ret
xchg
mov
add
xchg
setl
icebp
cdq
mov
add
add
xchg
adc
adc
into
xchg
dec
cmp
xor
mov
in
lahf
dec
mov
outs
sbb
cmc
cmc
mov
fs
movs
cmp
(bad)
and
xor
shr
mov
mov
xchg
out
dec
jae
pop
fidivr
add
(bad)
pop
sbb
pop
shl
into
xchg
xor
fisttp
xor
inc
repz
pop
add
loopne
pop
data16
enter
into
adc
test
dec
int3
add
cmps
popa
xor
fcomp
mov
or
cmc
jl
dec
js
hlt
bound
mov
mov
movs
and
(bad)
aam
and
xor
mov
sub
push
out
jns
out
jecxz
iret
mov
jns
mov
aam
dec
xor
les
lds
pop
mov
mov
adc
xor
pop
sbb
popa
adc
mov
pushf
add
sub
and
inc
movs
sbb
cwde
pop
xor
xchg
jae
jle
cmp
inc
mov
add
mov
push
pop
sar
mov
lds
jns
daa
xor
mov
dec
xor
dec
sbb
or
int3
cmc
sbb
push
push
pop
arpl
fiadd
test
mov
jne
sub
push
dec
dec
aas
call
cmc
jp
rol
pop
scas
xchg
call
or
xor
jbe
(bad)
aad
ror
wrmsr
fstp
jl
and
daa
imul
pop
sbb
add
leave
sbb
add
clc
sub
jns
mov
icebp
loop
jo
data16
repz
fisubr
out
jns
mov
jl
mov
pusha
push
jmp
pop
mov
arpl
aaa
jge
xor
dec
inc
pusha
mov
mov
mov
in
lea
cli
data16
mov
pop
jp
inc
jo
xlat
outs
jae
rol
pop
es
mov
mov
pop
gs
cwde
shl
pop
inc
xchg
mov
popf
adc
outs
add
cmp
push
mov
mov
mov
dec
enter
(bad)
out
cs
mov
loop
into
(bad)
jae
or
mov
adc
(bad)
sub
push
idiv
cdq
mov
push
mov
cmp
js
jg
mov
mov
mov
or
add
outs
mov
sahf
cmp
add
sub
sub
cmp
and
jne
outs
mov
ins
ret
into
or
mov
clc
je
in
scas
pusha
cmp
dec
add
ins
std
stos
loopne
cmp
and
pop
pop
push
jae
mov
and
ror
pop
xchg
bound
pop
sub
xchg
adc
call
fidivr
mov
in
dec
mov
addr16
xchg
mov
loopne
out
(bad)
retf
out
(bad)
sbb
rol
jo
xchg
div
pop
imul
outs
mov
push
adc
rol
xor
in
mov
lea
inc
mov
stos
ins
lahf
push
push
retf
sub
aas
push
xlat
push
je
push
dec
xor
repz
jmp
(bad)
push
call
mov
repnz
and
pop
fidiv
xchg
fisttp
nop
sub
mov
adc
mov
mov
fistp
mov
jge
xchg
jbe
cld
sar
sbb
cmp
clc
sar
jecxz
clc
and
ret
inc
sti
(bad)
daa
push
pop
xor
(bad)
out
call
xor
shr
pop
js
jno
sahf
mov
dec
icebp
mov
and
xor
add
xchg
sub
test
mov
jo
scas
jg
xchg
jle
jecxz
inc
mov
out
adc
mov
xchg
and
and
sbb
mov
setae
sbb
aas
imul
das
mov
inc
popf
fisubr
pop
ds
rol
xor
fcomp
pop
pop
cld
or
lds
mov
mov
popf
and
es
rol
pop
sbb
add
mov
add
push
arpl
es
test
and
push
lods
jns
jb
fsubr
xchg
test
sbb
jl
jo
outs
pushf
pop
mov
inc
in
xchg
pop
loopne
enter
iret
xchg
jecxz
ror
sbb
push
or
daa
mov
add
mov
xchg
push
mov
ja
mov
cmps
int3
and
fstp
test
pop
cmp
repnz
in
imul
cmp
jle
jle
mov
in
rcr
mov
addr16
ret
add
out
loopne
sub
dec
and
add
cmps
jp
dec
fdivr
fistp
rcl
push
mov
fcom
cmp
sub
add
sti
pushf
enter
dec
sub
pop
pop
adc
retf
in
loope
push
arpl
ja
sub
(bad)
(bad)
popf
inc
xchg
mov
cmp
adc
adc
enter
ret
sub
dec
mov
sbb
or
pop
pusha
sub
retf
pop
adc
push
mov
sbb
jae
push
adc
jle
cmps
clc
mov
mov
fidivr
hlt
sub
pop
xor
dec
jle
fild
mov
xor
jmp
aaa
cmp
sub
jo
mov
stc
mov
xchg
repz
xlat
push
mov
cwde
mov
daa
sbb
outs
or
clc
mov
mov
inc
push
mov
popf
aaa
in
imul
cmp
and
pop
mov
mov
retf
jns
xor
push
or
ins
dec
aaa
enter
call
dec
loop
fcom
aam
push
ja
in
pop
test
ror
pop
pop
xor
imul
mov
inc
stc
out
jmp
lds
sahf
iret
pop
xor
jp
lds
jl
scas
jbe
pushf
xlat
or
adc
outs
mov
test
out
add
add
(bad)
dec
jge
sti
xor
push
pushf
icebp
push
mov
sbb
or
mov
lea
ins
pop
jl
sbb
jecxz
mov
jle
movs
lods
adc
sbb
mov
jae
dec
in
repz
cwde
gs
inc
xor
rcl
movs
popa
adc
add
dec
push
xchg
adc
sub
add
xor
jl
push
pop
ret
jb
mov
shl
sahf
and
xor
ret
dec
int3
xchg
in
aas
cmp
iret
sbb
nop
in
pop
add
iret
add
call
in
pop
dec
pop
mov
inc
mov
shl
pop
push
or
shl
pop
sub
push
mov
imul
pushf
nop
(bad)
jge
and
and
add
dec
cld
pushf
test
xor
lea
addr16
mov
jno
pop
pop
dec
gs
in
sahf
(bad)
mov
cli
xchg
lock
pop
xchg
xchg
sbb
sub
pop
cmp
xchg
pop
push
mov
xchg
imul
pop
pop
fnstsw
(bad)
test
add
cs
mov
outs
mov
(bad)
dec
loopne
mov
les
or
pop
add
std
push
pop
xor
aad
fst
xor
push
ret
int
pop
gs
xchg
or
scas
jle
adc
(bad)
jne
xor
arpl
ds
(bad)
and
add
mov
mov
mov
mov
mov
outs
movs
push
add
jecxz
xor
arpl
inc
cmp
mov
daa
lea
loopne
add
popf
mov
pop
out
mov
fld
repz
(bad)
jg
cmp
lods
jb
in
xchg
es
(bad)
pop
mov
cmc
in
fstp
mov
xor
jo
lds
add
ficomp
jge
mov
je
stos
mov
xor
shl
adc
das
bound
hlt
shr
pop
(bad)
xor
leave
sbb
test
jno
jae
je
adc
jne
enter
aaa
jmp
cmp
sub
loopne
pop
ins
mul
fwait
and
mov
cdq
mov
xchg
in
clc
clc
enter
cmp
mov
ret
in
or
pop
xor
cmps
xlat
stos
inc
mov
dec
push
mov
mov
out
cmc
mov
cmps
mov
cmp
inc
pop
and
and
(bad)
lods
iret
adc
xlat
outs
fbld
lods
out
sbb
pusha
adc
pop
push
adc
pop
fnstcw
stos
push
mov
mov
arpl
push
aad
pop
sub
bound
push
shl
pop
movs
fs
(bad)
fdivr
std
inc
mov
aaa
adc
retf
and
enter
dec
adc
xor
es
retf
imul
inc
std
sub
adc
cmp
adc
sbb
popf
push
cmp
out
xor
add
jo
mov
inc
jl
mov
cmps
das
xchg
mov
adc
xor
call
xchg
clc
push
pop
pusha
cli
mov
sbb
std
sbb
dec
out
cmp
loope
dec
xchg
jmp
mov
sar
or
aad
dec
xchg
pushf
mov
gs
mov
add
pop
call
dec
jns
popf
jns
sub
adc
mov
push
add
xor
(bad)
jle
clc
outs
inc
cdq
sar
gs
das
mov
jae
mov
add
jo
or
out
cdq
jb
shr
out
(bad)
and
iret
pop
pop
in
jnp
lods
pop
fwait
cmp
(bad)
ja
sbb
dec
mov
js
pop
fsub
cmp
jle
xor
ss
stc
and
cmp
lods
fldcw
and
add
repnz
sbb
(bad)
mov
adc
pop
xor
inc
jno
and
not
into
mov
add
push
xchg
shl
pop
jmp
ds
gs
movs
dec
jl
out
inc
mov
test
push
mov
adc
mov
add
xor
jmp
dec
(bad)
in
push
mov
mov
sub
and
retf
aad
idiv
mov
(bad)
loopne
scas
mov
pop
stos
cmp
lock
lea
imul
cwde
mov
out
adc
xchg
ja
stos
jne
push
inc
sub
push
cmp
mov
xchg
sbb
dec
mov
clc
xchg
push
sbb
xchg
mov
ja
(bad)
sar
stos
push
je
or
lahf
jb
out
in
ja
and
enter
stos
pop
out
add
movs
add
pop
retf
sub
fcmovbe
fwait
and
pop
int3
out
ins
add
add
pusha
adc
sbb
lods
int3
push
pop
xlat
pop
fwait
popf
mov
mov
push
lea
jae
mov
mov
mov
repz
and
dec
push
mul
mov
out
fwait
aam
pop
sbb
adc
pop
add
and
(bad)
or
fsub
adc
scas
pop
in
retf
cdq
pop
das
mov
adc
dec
xor
xchg
mov
mov
call
mov
lock
scas
jle
clc
xchg
sbb
mov
enter
jecxz
cmp
inc
mov
jns
cdq
inc
jns
cli
retf
shr
sub
dec
popa
lahf
ret
test
bound
cmp
add
shl
mov
(bad)
cmps
xor
sti
leave
(bad)
cmp
out
dec
and
jae
daa
rcr
jg
sbb
div
ret
and
sbb
adc
cmp
push
movs
dec
adc
test
enter
pop
mov
mov
retf
pop
sbb
shl
(bad)
fist
fisubr
cmp
pop
cmp
ss
addr16
ja
cld
test
call
pushf
leave
mov
mov
int3
xor
xor
and
fs
add
mov
mov
popf
loop
dec
jmp
cmps
icebp
mov
xchg
inc
mov
sbb
xor
repnz
leave
fwait
sbb
ss
xor
cmp
outs
mov
test
sbb
(bad)
or
or
in
dec
inc
outs
das
jmp
repnz
jl
sbb
fnsave
jp
sbb
mov
cs
popf
jp
push
mov
adc
retf
mov
cdq
leave
xor
xchg
push
jle
(bad)
scas
sbb
test
dec
mov
iret
inc
scas
out
jns
cmp
clc
adc
into
jle
(bad)
sub
movs
mov
inc
dec
(bad)
(bad)
neg
int
cmp
aas
or
cli
inc
sbb
inc
js
mov
dec
sbb
dec
test
sbb
xchg
dec
or
shl
(bad)
repz
cmps
push
popa
stos
adc
add
lock
dec
out
aas
sub
fisub
xor
inc
add
xchg
xchg
mov
push
out
cmc
push
sub
push
mov
push
and
mov
pop
ja
not
mov
lea
iret
mov
sub
les
test
cmp
in
shl
ins
inc
jno
sbb
into
cmps
dec
jmp
or
xchg
mov
retf
addr16
push
(bad)
sub
add
xchg
xchg
dec
mov
push
cmp
mov
cmp
(bad)
push
inc
inc
popf
cli
fcmovnbe
nop
or
sar
pop
add
add
imul
sbb
jge
and
ret
mov
mov
mov
stos
sbb
ss
mov
stc
ret
popa
adc
jg
adc
retf
pop
adc
(bad)
les
(bad)
dec
mov
into
mov
add
dec
jmp
lds
jae
out
mov
fwait
jle
push
pop
aad
popf
cmp
mov
xchg
imul
mov
push
mov
call
cdq
cwde
or
mov
mov
adc
icebp
mov
add
mov
clc
cli
mov
add
and
retf
mov
push
loop
fwait
enter
xchg
fmul
and
adc
in
addr16
push
sub
pop
jne
jge
mov
jae
retf
iret
jbe
movs
sahf
jbe
dec
and
lods
into
push
adc
sbb
inc
xchg
jmp
mov
push
mov
mov
call
movs
ja
scas
jo
cld
xchg
test
jb
mov
inc
mov
or
sub
xor
jne
sahf
ins
pop
mov
pop
mov
addr16
pop
add
fimul
push
add
jl
aam
inc
jle
(bad)
push
mov
jmp
cmp
add
and
mov
sti
adc
sub
mov
stos
(bad)
adc
sar
mov
(bad)
repnz
out
mov
mov
add
test
and
sbb
retf
add
xchg
arpl
sbb
(bad)
or
mov
push
push
or
xchg
xchg
pop
loope
ret
outs
push
enter
xchg
dec
icebp
push
neg
mov
sub
arpl
loop
sub
mov
mov
inc
push
jg
loopne
dec
jp
jl
mov
popf
push
adc
ror
mov
not
aam
stos
push
icebp
shl
dec
addr16
mov
fdiv
adc
test
mov
sub
cmps
addr16
nop
inc
(bad)
push
cmp
xchg
cli
push
sti
ja
add
dec
pop
rol
adc
lods
rcr
pop
loop
aam
jg
lods
retf
div
sub
cmp
inc
jmp
movs
jnp
cmp
mov
(bad)
mov
cmps
neg
and
les
cld
test
aas
icebp
jmp
mov
arpl
sub
cmp
loopne
lods
fwait
ja
dec
push
iret
imul
xchg
lds
add
call
xchg
mov
fisubr
(bad)
in
loope
xchg
mov
into
in
leave
shl
sti
into
xor
nop
nop
lods
jmp
fistp
cmp
fistp
and
in
in
inc
xor
xor
xor
fisubr
mov
sub
sahf
leave
jne
shl
and
cld
cli
inc
adc
mov
jecxz
mov
cmp
mov
or
ins
sub
aam
pop
repz
call
jp
leave
pusha
loopne
sub
out
push
sub
ins
fs
jp
sub
and
aad
mov
imul
pop
mov
mov
and
nop
ret
inc
mov
shr
xchg
mov
add
cdq
pop
sub
jae
jns
xor
test
retf
test
repz
and
xor
push
fidivr
xchg
loope
idiv
in
jne
out
dec
dec
fwait
add
or
ds
sbb
into
pusha
mov
pop
popa
push
test
jp
xor
inc
jbe
mov
outs
dec
jns
dec
scas
pop
lods
dec
xor
bound
cmp
or
iret
cdq
push
sbb
xlat
adc
push
or
xor
mov
mov
xor
inc
sbb
sahf
fcmovu
mov
mov
pop
and
mov
xchg
inc
push
lods
aaa
and
pop
sub
mov
sbb
popf
mov
mov
push
mov
cmps
fdivr
div
add
int
or
add
inc
and
outs
cdq
ret
in
jns
out
xchg
imul
scas
int3
push
ins
jbe
jbe
mov
xchg
xchg
fcom
jne
mov
test
pusha
mov
mov
sub
mov
mov
dec
inc
(bad)
cmp
mov
push
jle
push
xchg
shl
mov
out
xchg
leave
fiadd
mov
push
fistp
sbb
or
push
push
cli
loopne
ja
push
xchg
test
psubsw
fimul
inc
rol
cmp
xor
dec
rcl
push
mov
jnp
imul
xchg
retf
iret
cmp
aad
inc
nop
dec
and
sti
and
ins
dec
fwait
pop
or
call
dec
mov
cmp
inc
sbb
mov
push
sub
adc
popa
inc
aas
sub
inc
push
fild
adc
call
pop
(bad)
in
mov
inc
cmp
(bad)
mov
arpl
xchg
cli
imul
inc
xor
outs
sbb
cmc
imul
inc
xchg
push
cmps
gs
mov
scas
mov
sbb
jmp
rcl
pop
or
push
jb
sbb
jae
jle
jecxz
push
add
dec
dec
jo
mov
dec
jle
mov
cmp
shl
(bad)
cmp
std
or
mov
lods
add
mov
adc
and
cwde
repz
mov
adc
(bad)
push
push
inc
outs
pop
lods
jae
mov
in
ss
push
fdivr
addr16
xor
mov
cmp
repz
ret
rcl
mov
push
mov
popa
rcl
push
outs
add
inc
push
xor
mov
jae
fidiv
cmp
retf
xchg
das
daa
mov
ins
daa
shl
outs
addr16
or
(bad)
jo
mov
pop
cmc
cmp
lock
push
fmul
mov
push
int3
xchg
iret
push
das
fsubrp
pop
fs
imul
mov
loopne
(bad)
neg
mov
js
daa
outs
leave
xor
pop
or
pusha
or
fidivr
push
shl
test
fwait
stos
bound
mov
clc
pop
ja
add
pop
ins
mov
dec
inc
and
cmps
ss
ret
cmp
inc
xchg
shl
lods
ds
mov
clc
js
inc
cmp
push
outs
jbe
icebp
shl
in
xor
call
fidivr
push
jb
push
dec
retf
sbb
xchg
add
xor
hlt
movs
sbb
mov
push
rol
adc
shl
add
in
cs
adc
idiv
or
ficomp
mov
ret
push
and
mov
or
les
dec
cmp
int3
ins
adc
es
jns
arpl
dec
out
cmp
xor
stc
mov
jbe
dec
jge
aaa
cmp
sub
xchg
test
xchg
call
clc
xor
fs
retf
movs
push
data16
rcl
dec
inc
(bad)
jg
in
cli
dec
outs
test
stos
mov
mul
jecxz
dec
sti
movs
mov
jo
movs
je
jl
sub
bound
jbe
pop
xor
xchg
loop
aas
and
stos
sub
daa
fiadd
add
arpl
or
mov
cmp
sti
push
lea
ror
or
jae
repnz
add
test
(bad)
cmp
cld
inc
cld
dec
push
jne
int
xor
mov
sbb
pop
mov
shl
ficom
mov
lahf
fcomp
das
push
outs
jno
out
mov
lea
repz
add
adc
sahf
sar
xor
xor
mov
xchg
leave
and
dec
xor
hlt
fld
fwait
sahf
ror
lds
xchg
jmp
sbb
xchg
ins
xor
sub
jnp
mov
in
inc
inc
xor
outs
shl
stos
popa
jl
jmp
xor
push
inc
pop
sahf
fwait
cmp
mov
mov
daa
loop
icebp
mov
adc
push
(bad)
mov
std
shl
in
iret
(bad)
icebp
int3
push
adc
jno
mov
and
xchg
(bad)
je
dec
dec
sbb
pop
adc
xchg
stos
dec
and
or
sar
dec
jg
pop
sub
mov
cmps
rol
ret
inc
mov
daa
mov
adc
or
sub
jl
mov
xchg
call
call
stos
stos
mov
jge
rcl
push
push
and
nop
cld
fstp
dec
jge
cmp
dec
mov
out
div
jg
adc
clc
xchg
mov
xchg
ror
mov
into
jge
dec
cwde
sbb
cmp
es
pop
fwait
jne
test
lods
sahf
test
and
repz
pop
(bad)
int
push
xchg
push
pop
mulps
les
(bad)
xchg
add
(bad)
jae
idiv
pop
xchg
das
xor
fsub
ja
rcr
mov
inc
or
sar
pop
mov
or
push
mov
out
loopne
pop
(bad)
cld
adc
ror
fisub
fdivr
mul
and
or
jmp
fidivr
add
addr16
rol
mov
loopne
aad
aas
arpl
mov
xchg
movs
mov
pop
pop
fsubr
adc
imul
test
xchg
fmul
dec
dec
cmp
or
mov
shl
das
ret
ins
mov
hlt
sbb
mov
(bad)
pop
pop
xor
add
xlat
jg
retf
cmp
ret
gs
cdq
jno
pslld
outs
jle
inc
dec
imul
adc
fwait
xchg
rol
or
and
inc
jno
call
mov
test
pop
pop
test
jecxz
rcl
sub
mov
in
fcmovb
adc
sub
lds
in
mov
add
push
lock
jmp
mov
add
aad
ds
loop
sahf
je
ss
push
(bad)
icebp
ss
or
lods
test
and
and
pop
imul
cmp
adc
jl
sbb
out
cmp
call
clc
dec
sbb
sbb
xchg
jno
enter
mov
add
data16
and
sbb
cmp
jb
aad
lds
adc
push
mov
cli
loopne
(bad)
or
push
push
mov
pop
sar
popf
dec
scas
bound
repnz
sbb
fist
mov
les
dec
in
loope
cs
push
inc
iret
std
lods
js
mov
and
dec
mov
mov
cld
imul
iret
loopne
mov
cmp
lea
dec
arpl
add
retf
fs
aam
sbb
mov
pop
or
pop
mov
arpl
mov
add
dec
jb
test
iret
adc
ins
dec
int3
sbb
nop
inc
shl
ins
sbb
das
push
test
adc
pusha
retf
mov
xor
ror
jmp
ss
or
xchg
fistp
xor
sbb
mov
leave
pushf
ins
pusha
adc
inc
lods
mov
add
lahf
sbb
out
cmp
xchg
dec
std
push
(bad)
aam
in
mov
daa
push
cwde
cmp
pop
sbb
jmp
shl
dec
xchg
xchg
inc
mov
push
add
push
lods
pop
loop
fstp
xchg
je
popf
cmc
fdivr
ret
lahf
js
sbb
jbe
add
jo
scas
and
mov
mov
xchg
xlat
into
fsub
jb
mov
out
aad
stc
inc
mov
pushf
push
fwait
loop
jmp
and
or
inc
mov
imul
jo
add
lahf
(bad)
dec
dec
push
lock
jno
dec
push
retf
stc
and
loop
dec
mov
mov
inc
xor
int
out
adc
in
icebp
dec
lds
pop
inc
adc
mov
popf
repnz
iret
mov
clc
xor
stos
xchg
and
call
sub
(bad)
neg
ds
cmp
push
aad
fmul
nop
loopne
mov
or
pushf
xor
or
mov
push
inc
pop
loopne
test
xchg
cs
out
imul
jo
enter
ss
les
hlt
xor
pop
ret
test
xor
sbb
xchg
ret
jmp
getsec
jns
addr16
push
adc
sbb
clc
shr
inc
pushf
lds
jge
aam
cmps
fistp
add
test
pop
out
ja
pop
movs
sub
ja
movs
dec
add
imul
jbe
ret
test
dec
inc
outs
push
inc
(bad)
dec
or
ror
data16
fdivr
pop
sub
int
ret
imul
test
xchg
cmp
aad
aad
nop
pop
pop
sbb
aas
jge
mov
or
pusha
mov
rol
or
push
mov
imul
jbe
jb
nop
mov
movs
adc
daa
jle
imul
popa
loop
push
mov
sbb
sub
mov
mov
mov
ret
jno
aad
adc
push
xor
cmc
jmp
dec
mov
add
sub
pop
fs
ret
dec
jecxz
cli
in
add
mov
mov
sbb
pop
(bad)
mov
fldlg2
sbb
into
xchg
sub
cmp
dec
(bad)
out
imul
sub
lods
push
jns
les
push
xchg
jnp
cmp
test
ss
out
xchg
aad
ret
rcr
mov
pop
xchg
cdq
mov
neg
inc
dec
lea
push
sbb
or
pop
outs
nop
pop
rcr
inc
and
fisttp
push
sbb
iret
inc
xor
repz
mov
cmps
std
mov
mov
stos
mov
(bad)
stc
cmps
dec
bswap
std
(bad)
and
cs
mov
push
xchg
in
adc
mov
mov
push
pop
mov
mov
cmps
shl
imul
dec
push
les
lahf
xor
cmp
in
or
push
xchg
repnz
es
loop
ds
xchg
pushf
mov
or
loope
shr
aas
jmp
jno
stos
xor
movs
mov
fistp
gs
stos
int
inc
mov
fsub
aad
xor
in
aad
xor
push
push
daa
loopne
xchg
stos
out
dec
cwde
retf
and
iret
or
aam
push
addr16
aaa
and
adc
push
aad
pop
push
inc
fwait
repz
cmp
into
test
lds
dec
scas
or
das
inc
pop
pop
and
(bad)
or
mov
ds
cli
out
pop
mov
inc
mov
push
jle
push
pop
adc
xchg
push
sub
mov
dec
pop
pop
stc
xor
aaa
jb
das
loope
xor
mov
sub
jmp
repnz
adc
cld
daa
or
in
lahf
xchg
ret
aas
adc
inc
in
xchg
mov
mov
retf
hlt
and
sub
and
hlt
ins
adc
fisttp
movs
pop
sub
mov
sub
sbb
xor
inc
jns
imul
and
cmp
mov
dec
stos
in
add
mov
jns
jns
aas
push
add
pop
mov
and
sub
or
and
pop
cmp
dec
jns
popa
fisttp
sub
fs
push
outs
aaa
movs
adc
out
fnstsw
stos
jns
int
jmp
enter
pop
dec
(bad)
ja
nop
repnz
mov
arpl
adc
and
int
jae
xor
dec
lock
test
mov
push
sub
(bad)
jb
cld
adc
clc
and
lock
mov
sbb
mov
mov
jp
jecxz
pusha
push
repz
mov
and
xchg
stos
int3
in
push
sbb
rcr
movs
xlat
dec
cli
aad
xor
inc
clc
or
jl
or
and
add
add
xor
aaa
mov
rcl
sbb
int
inc
xor
lock
outs
add
cdq
pop
mov
cmp
push
dec
sahf
in
(bad)
cld
icebp
mov
inc
fld
cmp
mov
dec
xor
and
and
xor
inc
ficom
sahf
inc
mov
sbb
ret
(bad)
mov
jl
scas
xchg
pop
dec
pop
scas
xor
adc
cmps
lds
lods
pusha
gs
pop
sub
xchg
sbb
lahf
ficomp
xor
popf
xchg
pop
adc
cmp
xor
test
sub
xchg
adc
movs
push
and
mov
stos
cmp
stc
jg
inc
les
xchg
movs
rol
sub
xchg
push
stos
stos
jb
dec
cmp
xor
xchg
push
call
push
cmp
sbb
mov
jg
pop
xlat
pusha
cmp
test
mov
(bad)
lods
push
daa
adc
push
arpl
pop
fidivr
jp
xor
aaa
xchg
jp
xchg
pop
cli
mov
test
fbld
xor
jb
loop
add
pcmpeqd
mov
aaa
pop
fisttp
sbb
jnp
(bad)
imul
test
sbb
mov
or
test
mov
xlat
das
dec
int3
fbld
xchg
cmp
adc
sub
mov
jae
ss
and
xor
(bad)
shl
ss
fs
repz
and
or
mov
pop
adc
dec
ins
push
mov
call
adc
add
in
mov
div
fsubr
stc
pusha
dec
mov
pop
jnp
sar
add
popf
sub
mov
and
std
pop
shl
cdq
mov
push
(bad)
imul
bound
or
add
xchg
add
mov
nop
xchg
xchg
pop
cdq
aam
ja
stos
cmp
push
jne
shr
gs
fmul
ds
cmp
(bad)
movs
jmp
dec
movs
addr16
add
jle
jge
out
rol
nop
push
fs
pop
xchg
scas
jno
adc
popf
pop
jbe
adc
cwde
inc
ficomp
jo
cmps
jge
arpl
scas
push
mov
jnp
inc
dec
pop
nop
add
pop
call
div
shr
ror
repnz
out
pop
fs
xchg
cmp
inc
addr16
inc
stc
test
repnz
and
cli
mov
xchg
test
adc
aaa
pop
stos
and
inc
jle
outs
out
mov
sbb
mov
fs
sahf
scas
shl
cmp
xchg
call
sbb
add
out
in
nop
int3
jle
and
std
nop
cmp
adc
mov
push
in
mov
lahf
jne
lods
adc
les
test
add
adc
xchg
int
pop
test
jnp
dec
inc
ret
push
(bad)
pop
xchg
(bad)
fld
xchg
inc
sub
add
popf
xor
pusha
pushf
push
mov
jbe
hlt
inc
test
fxam
dec
popa
hlt
sti
arpl
jno
and
int3
pop
add
fisttp
mov
in
ret
sbb
xchg
push
stc
pushf
imul
xchg
pop
sbb
dec
and
pop
sbb
int3
pop
das
pop
xchg
mov
mov
lods
sahf
fcmovu
in
std
push
ficomp
mov
jmp
imul
(bad)
sub
push
xor
jnp
adc
adc
icebp
dec
enter
mov
mov
xor
xchg
enter
sbb
mov
mov
or
mov
pop
cmp
fdivr
push
mov
adc
and
dec
xchg
sub
mov
cmp
jecxz
mov
dec
xchg
ins
or
data16
lahf
bound
dec
fs
xchg
push
lds
retf
and
fbld
inc
stc
jp
fsub
xchg
(bad)
jecxz
imul
ss
dec
ins
stos
lea
cwde
sbb
pop
and
jne
cwde
add
outs
xchg
cmp
rcr
adc
movs
pop
pop
mov
sub
push
and
sbb
add
pop
mov
jo
repnz
cmp
ins
hlt
add
cmp
jge
adc
out
and
fiadd
pop
jne
inc
retf
fcomp
mov
dec
mov
pop
leave
movs
outs
aam
mov
pop
fs
mov
push
sub
xor
dec
xchg
mov
retf
cs
mov
adc
jne
and
mov
pop
outs
and
ret
sahf
movs
hlt
(bad)
enter
das
sbb
cmps
in
mov
mov
test
mov
stos
inc
loopne
sahf
lea
mov
push
xchg
add
sbb
cwde
push
das
ficom
or
test
test
add
mov
scas
add
je
mov
add
cs
call
sar
inc
jno
sbb
iret
clc
les
repz
jnp
(bad)
jg
dec
mov
pop
dec
inc
push
push
sub
aam
(bad)
pop
mov
shr
pop
sbb
fwait
ret
dec
popa
fwait
aad
xor
mov
clc
sub
ret
dec
add
cdq
mov
mov
xchg
xor
sub
cli
fs
pop
(bad)
(bad)
hlt
fild
push
or
jo
icebp
mov
ds
sbb
(bad)
(bad)
push
mov
lea
gs
fcom
adc
xor
sbb
add
bound
mov
clc
pushf
int
jge
push
push
add
popf
into
xlat
stos
out
in
enter
sub
or
clc
mov
pop
ja
idiv
add
sbb
movs
aad
inc
xor
stos
and
leave
cmp
movs
jnp
enter
call
mov
inc
cwde
push
fidiv
pop
out
cdq
and
aad
cmp
push
das
sbb
or
pop
rcl
add
addr16
in
mov
iret
loope
neg
ins
cmp
call
movs
add
sbb
pop
jg
cli
inc
fmul
(bad)
data16
fsub
push
ffree
cmp
pop
sbb
ret
iret
icebp
sahf
sbb
rcl
mov
ret
inc
pop
and
daa
(bad)
retf
stos
mov
xor
mov
xor
mov
call
sbb
retf
mov
mov
sar
mov
cmp
inc
es
mov
daa
mov
fucomp
ficom
test
pop
dec
add
cmp
ror
xlat
push
ss
shl
movs
addr16
xchg
jnp
imul
pusha
push
loop
pop
test
(bad)
mov
mul
jp
adc
(bad)
pop
jns
cli
hlt
retf
dec
bound
inc
and
cmc
adc
mov
push
sbb
mov
cmp
scas
into
sub
mov
pop
jns
jle
lods
call
in
stc
add
retf
leave
(bad)
dec
mov
adc
bound
stos
inc
mov
repnz
pop
sbb
push
stc
repz
xchg
call
std
sub
cdq
jbe
mov
setl
ret
push
les
mov
add
out
lods
je
pop
push
mov
ret
add
mov
(bad)
jno
movs
adc
imul
scas
enter
cmp
idiv
inc
sar
adc
stc
aam
sahf
xor
mov
sub
xchg
outs
ficomp
daa
ss
xor
cmp
inc
cs
ins
fsubr
leave
push
jp
aaa
js
add
and
fwait
rol
(bad)
push
push
scas
or
cld
xor
lea
cmp
aas
push
jg
out
jmp
dec
cmp
mov
xchg
out
out
mov
(bad)
mov
fist
mov
fnstcw
lods
adc
arpl
and
and
imul
(bad)
lock
mov
or
jo
imul
xchg
mov
add
imul
mov
fxch
mov
sbb
mov
mov
sbb
jmp
sbb
pop
inc
adc
push
xchg
adc
dec
sub
ret
lds
aaa
loope
xchg
push
in
ins
cmp
cmp
cwde
std
mov
xchg
sbb
xor
xchg
fcom
push
jae
mov
mov
repnz
add
sbb
and
outs
mov
adc
data16
call
mov
jb
ret
adc
inc
sar
push
fwait
outs
dec
ja
mov
mov
jmp
adc
dec
xor
mov
mov
ja
push
and
cld
enter
lock
lock
daa
push
icebp
(bad)
test
mov
add
and
cld
xchg
cdq
retf
or
(bad)
jle
out
mov
pop
mov
add
loope
loope
push
or
ret
jo
mov
sbb
movs
mov
adc
stos
daa
mov
mov
mov
sar
shl
js
or
in
into
pushf
or
test
pop
dec
push
(bad)
aaa
add
adc
pop
fist
pop
js
or
mov
pop
hlt
sbb
inc
sub
pusha
pop
adc
call
enter
mov
cmps
push
add
cmp
test
push
out
les
mov
dec
adc
pop
repnz
clc
je
(bad)
mov
aam
scas
cmps
or
jbe
pop
loop
test
mov
icebp
bound
mov
test
mov
cmp
jmp
aad
mov
or
cmp
mov
rcl
mov
rol
jnp
fmul
pop
pop
dec
popf
pop
xlat
mov
fistp
test
add
mov
pop
movs
loop
pushf
adc
cmps
push
icebp
inc
cmps
cli
sub
lock
in
xor
xchg
pop
mov
push
movs
aam
sbb
in
inc
jbe
adc
dec
sbb
cdq
push
loop
add
retfw
add
and
cmc
dec
mov
lods
sub
cs
dec
jecxz
les
cmps
and
jmp
shr
bound
add
je
xchg
dec
jae
cs
push
add
in
call
sbb
in
mov
sub
mov
jmp
dec
mov
cmps
les
daa
or
xchg
imul
dec
sub
pop
jbe
call
jb
cmp
pop
inc
mov
jge
inc
and
or
lea
jmp
xchg
push
pop
ror
cdq
xchg
jmp
lds
jmp
jbe
cmps
cmp
test
sbb
dec
lds
aam
mov
call
(bad)
adc
icebp
aaa
jge
icebp
stos
pop
xchg
push
xor
int
mov
sar
int3
mov
cli
shl
(bad)
jp
mov
loope
mov
cmps
shl
and
jecxz
out
(bad)
enter
mov
call
inc
inc
stos
dec
in
std
or
aaa
scas
jle
jo
sub
fiadd
les
rol
adc
fistp
das
mov
aaa
mul
push
jg
call
neg
daa
mov
inc
adc
stos
sub
xchg
rcl
mov
(bad)
out
mov
xlat
test
out
mov
icebp
adc
add
sti
mov
sbb
pop
xchg
push
ins
or
ss
jp
push
(bad)
ins
cs
rcl
movs
retf
pop
sbb
outs
push
xchg
call
fdivp
sbb
adc
mov
adc
outs
movs
shr
dec
test
sub
outs
aaa
retf
cld
xor
cmp
pop
sahf
dec
movs
jge
movs
fs
jge
pop
inc
push
out
cli
jl
ret
xor
shr
loop
mov
xchg
into
xchg
xchg
hlt
repnz
mov
xchg
ret
xchg
add
call
mov
mov
in
inc
leave
addr16
or
jne
outs
sub
or
fisub
mov
in
movs
lahf
loope
cdq
xor
add
enter
pop
and
mov
jp
inc
adc
xor
dec
mov
add
arpl
les
ins
cmp
scas
popf
fldenv
or
popf
cmps
stc
sub
sub
dec
add
mov
repnz
frstor
dec
xor
push
(bad)
and
jne
push
ja
cmp
pop
(bad)
mov
sub
leave
mov
mov
ins
adc
xchg
ins
xor
mov
jbe
cs
call
or
inc
jmp
adc
sub
mov
jg
and
movs
sbb
or
push
stos
test
in
mov
fisubr
pmaddwd
test
jmp
test
out
rcr
out
aad
or
popa
dec
gs
xor
cmps
xchg
les
lea
fs
adc
cld
xor
pusha
out
(bad)
xor
jl
jmp
inc
sub
lock
call
lods
cli
std
mov
test
xlat
xchg
mov
inc
mov
ja
aaa
pop
(bad)
sub
fcom
lods
xchg
call
adc
xchg
shl
shl
in
aam
enter
and
fisub
nop
xchg
cwde
(bad)
ss
add
ja
sbb
popf
mov
push
(bad)
pop
out
adc
push
cmp
(bad)
or
xor
lods
jle
test
addr16
ins
inc
pop
inc
dec
inc
rcl
push
sahf
pusha
dec
jne
mov
or
jle
jecxz
xchg
clc
xor
fcmovne
sbb
es
movs
mov
pop
dec
loopne
pop
and
mov
sbb
mov
and
cmp
sahf
cdq
fcmovbe
les
sar
lds
sub
cli
retf
hlt
cdq
sbb
xor
je
daa
int3
pop
mov
dec
(bad)
push
shl
fcom
push
lods
lds
adc
sub
arpl
jg
fist
xor
iret
mov
imul
repnz
stos
jo
jl
cmps
xor
out
jo
mov
lods
dec
cmp
dec
push
test
jl
or
rol
shr
ins
inc
movs
mov
cwde
mov
mov
ror
dec
fwait
jmp
mov
out
mov
in
lahf
push
mov
int3
je
or
jge
fmul
cli
push
dec
rol
xchg
leave
std
jl
mov
mov
adc
(bad)
pop
int3
and
fcmovne
loopne
and
je
dec
clc
sub
lods
repz
pop
mov
and
jle
nop
dec
jg
or
sahf
dec
push
xlat
cmp
loop
push
push
inc
mov
mov
or
push
movs
push
pop
pop
jne
dec
xchg
sbb
rol
call
clc
jno
lods
jle
hlt
inc
scas
add
out
push
sub
jg
cmp
mov
and
stc
mov
pop
ror
push
sti
sbb
aas
push
add
push
fstp
ficom
xchg
fdivr
mov
pop
dec
imul
pop
cmp
mov
mov
fwait
xor
ret
call
sahf
cdq
in
sbb
ins
pop
pop
mov
addr16
mov
or
mov
hlt
jge
icebp
lea
cmps
stos
inc
push
push
shl
dec
pop
xor
icebp
shl
fcom
inc
or
xchg
imul
sbb
cld
or
aas
call
mov
dec
dec
movs
inc
sti
pop
ins
es
cmp
push
outs
dec
not
fs
pop
mov
scas
fwait
cld
add
mov
mov
(bad)
(bad)
daa
cwde
add
xchg
xchg
test
aad
call
mov
cdq
push
add
test
scas
data16
pop
ret
arpl
inc
cld
lds
jl
js
sti
mov
sbb
lds
pop
movs
and
inc
cmps
mov
and
sub
es
mov
pushf
push
stos
repnz
ret
adc
sbb
add
sbb
and
add
add
scas
call
pop
mov
movs
push
and
xchg
gs
xchg
bound
sti
sub
imul
sub
popf
cli
dec
adc
xor
popa
test
add
pop
mov
ja
add
push
pushf
dec
repnz
dec
jnp
xchg
jp
sahf
or
cld
sbb
in
fdivr
pop
test
adc
mov
out
add
adc
iret
aaa
mov
icebp
pusha
out
pop
sbb
pop
retf
icebp
jo
sub
sbb
xlat
imul
aas
inc
test
test
sub
mov
mov
and
jp
sbb
jl
(bad)
mov
ret
sbb
hlt
jmp
inc
adc
loop
push
inc
xchg
imul
ret
pop
push
xor
icebp
mov
adc
xor
jmp
mov
outs
mov
jecxz
sti
mov
jecxz
or
lds
inc
out
xor
mov
or
fidiv
mov
xor
fsubp
fnsave
fist
mov
jnp
pop
cmp
mov
cs
fsubr
mov
pop
int
test
outs
push
popf
ret
mov
sbb
adc
sahf
mov
mov
or
(bad)
jmp
retf
cld
stos
fisub
mov
mov
out
jo
fldenv
jle
mov
sbb
add
shl
sbb
mov
retf
mov
and
pop
addr16
mov
rol
cmps
jb
setge
ss
out
ins
jge
ret
cdq
xor
pop
aad
mul
push
aaa
pop
jae
lahf
ja
and
pop
sub
dec
fldcw
jno
adc
idiv
iret
je
xor
cmp
xor
pop
xor
add
mov
sbb
jbe
or
pusha
shr
bnd
jnp
mov
mov
adc
cmp
fwait
leave
out
mov
xor
pop
xchg
inc
cmp
(bad)
sub
pop
dec
sbb
and
inc
pusha
pusha
mov
shr
push
jne
add
add
adc
fimul
loop
or
mov
sub
addr16
out
push
retf
sahf
sub
int
pop
imul
movs
xchg
inc
sbb
or
xor
lahf
xchg
or
loope
test
lods
out
fwait
scas
pushf
shl
push
cmp
mov
gs
scas
inc
mov
in
movs
push
test
push
je
movs
push
fistp
dec
mov
add
add
push
in
nop
push
sbb
enter
sti
mov
pop
fs
sbb
ja
(bad)
stos
mov
inc
mov
bound
inc
in
pop
cwde
sbb
outs
repnz
imul
inc
xor
loopne
lods
lock
add
shr
imul
shl
add
cmc
sbb
cmp
test
jbe
and
cmp
sbb
mov
repnz
mov
bound
mov
pop
sub
out
das
iret
sbb
addr16
fidivr
call
js
sbb
outs
jmp
xchg
sub
mov
popa
cmps
add
sbb
shl
and
jno
imul
or
fsub
xor
(bad)
cdq
dec
(bad)
test
jmp
xchg
out
add
movs
xor
sbb
add
mov
add
fidiv
adc
movs
ins
xchg
push
push
push
lock
dec
sbb
jns
pop
std
jne
push
call
lahf
loopne
and
out
fist
inc
out
cmp
les
arpl
int3
jecxz
lahf
mov
sub
dec
sbb
sbb
fmul
jne
rcl
jae
xlat
aaa
sbb
xor
add
mov
mov
sub
fiadd
test
pop
icebp
outs
mov
lods
and
repnz
pop
repz
sub
sub
and
in
add
nop
retf
cld
fwait
push
lahf
xlat
cdq
adc
cmp
push
lahf
retf
scas
loop
or
or
xchg
fist
pop
lods
inc
jmp
cmc
push
(bad)
int
icebp
xchg
sbb
add
pop
sbb
popa
adc
vpsllq
(bad)
ror
cli
cmp
jecxz
(bad)
in
test
pop
ja
pushf
int
sbb
shl
adc
call
dec
cli
inc
jmp
cmc
mov
and
jb
sub
lds
fild
shl
add
das
mov
adc
pop
(bad)
inc
mov
out
aam
dec
xchg
mov
xchg
push
je
inc
jno
dec
push
(bad)
sub
xchg
jmp
xchg
jmp
sbb
data16
movs
out
adc
pop
cli
jne
or
mov
dec
mov
xchg
pusha
or
jmp
in
mov
test
adc
repz
pop
enter
jl
test
push
mov
xchg
add
div
and
aam
or
mov
jg
in
stc
fistp
repnz
leave
mov
hlt
xor
mov
jmp
ins
jg
pushf
sti
mov
outs
inc
lods
daa
push
sub
mov
jo
dec
xchg
cmp
mov
sbb
and
outs
jmp
mov
jb
mov
jns
mov
mov
mov
ja
xchg
add
jae
cwde
sub
dec
dec
mov
scas
pop
inc
arpl
call
aad
adc
lea
jbe
mov
inc
scas
test
or
sub
push
xchg
jae
sbb
sbb
(bad)
test
mov
sub
sbb
jecxz
fwait
daa
or
pop
mov
outs
mov
sti
ins
inc
mov
inc
push
retf
or
addr16
xchg
rol
push
adc
sub
pusha
sub
cmc
or
inc
sbb
mov
mov
fst
mov
push
test
and
pop
jmp
call
jge
fwait
ins
outs
xor
lods
cmps
mov
add
pusha
sbb
daa
ror
pusha
inc
repz
lea
je
(bad)
cmc
mov
rcl
dec
mov
das
push
retf
jae
repnz
sub
aam
scas
mov
add
and
js
(bad)
adc
arpl
mov
(bad)
fstp
cmps
lods
je
dec
inc
lock
gs
xchg
sbb
and
inc
sar
jmp
add
or
popa
jecxz
je
xlat
popf
test
daa
lea
xor
enter
or
retf
mov
or
mov
sub
std
aam
scas
sub
adc
add
ja
int
shr
mov
cmps
aaa
mov
iret
jmp
shr
int
or
ds
push
punpckldq
pusha
jle
aad
pusha
pop
imul
out
in
rcr
mov
stos
mov
inc
add
cdq
and
cwde
outs
lods
aam
je
xor
cmps
xchg
push
jnp
jbe
pop
popa
ins
retf
pop
(bad)
adc
(bad)
call
mov
fst
xor
adc
mov
jne
and
repz
int
mov
cmp
jne
xlat
repz
fisttp
pop
repz
add
sub
fbstp
sar
mov
sbb
mov
cmp
call
fiadd
mov
cmp
xchg
cdq
inc
xor
or
arpl
inc
push
xor
add
adc
mov
(bad)
and
cmc
jge
mov
xor
sub
sbb
mov
add
in
or
into
es
push
adc
mov
aad
cmp
mov
ret
clc
dec
les
mov
outs
cmp
enter
(bad)
mov
adc
not
movs
push
add
leave
mov
mov
mov
je
bsr
int
sub
pusha
loopne
ffree
test
mov
les
xchg
dec
jg
(bad)
cmp
jecxz
stos
jae
outs
data16
pop
mov
add
mov
test
push
stos
xor
jno
cvttps2pi
cmps
(bad)
ins
pusha
pop
popf
inc
sub
in
(bad)
xor
enter
mov
femms
sbb
sbb
ins
sub
ret
ss
loope
mov
enter
mov
ret
dec
out
mov
sub
data16
adc
cdq
xor
repnz
push
pop
cmc
mov
fmul
mov
std
movs
inc
std
xlat
jo
mov
shr
and
call
outs
xor
or
in
ins
xor
(bad)
clc
ror
jo
in
repz
jp
cmp
dec
call
sub
aas
xchg
out
test
dec
dec
inc
es
aas
and
sub
add
in
pop
pop
lock
ss
enter
adc
das
mov
and
adc
in
add
cld
sub
aad
push
push
lds
mov
mov
xor
jg
(bad)
inc
xor
imul
jg
cmp
imul
mov
jl
in
push
neg
add
(bad)
mov
pop
adc
xor
div
sbb
jnp
fdiv
and
sahf
(bad)
mov
xor
xchg
mov
mov
lea
or
jne
xchg
leave
jae
pop
shl
xchg
les
jl
dec
(bad)
loope
xchg
push
popf
cmp
popa
jp
fld
pop
retf
ins
das
cld
or
mov
sub
sbb
js
sub
and
or
leave
retf
int
inc
sub
retf
inc
cmp
and
loop
dec
imul
jmp
retfw
push
out
xchg
imul
idiv
cmp
sub
lock
(bad)
push
mov
inc
pop
mov
fild
in
mov
arpl
pop
and
movs
sub
jns
into
je
rcl
mov
mov
pop
cmp
xchg
ret
mov
loopne
sbb
pop
dec
xchg
sar
jnp
xor
dec
cmp
scas
adc
pusha
push
push
pop
call
jns
imul
inc
fist
push
push
xor
push
les
icebp
xor
mov
jle
ja
and
pop
or
xchg
push
push
fisttp
pop
cld
pusha
dec
xchg
shl
mov
lock
nop
inc
mov
or
mov
bound
mov
or
xchg
popa
ror
leave
pusha
pop
retf
push
imul
lock
dec
mov
sbb
pop
xchg
dec
hlt
scas
or
push
lahf
push
xor
lock
ds
sub
xchg
sub
push
cld
xchg
int3
(bad)
add
out
ins
add
bound
into
lds
push
push
jp
aad
das
inc
jle
loop
mov
xor
dec
fisttp
sub
repnz
push
adc
xor
or
enter
push
mov
pop
enter
push
icebp
cld
gs
pop
or
mov
test
add
sti
mov
into
clc
cmp
mov
xor
push
mov
xchg
fcom
adc
adc
jns
addr16
cmp
test
jo
or
and
pop
mov
shl
repnz
in
in
ss
push
in
outs
scas
mov
lods
dec
ficom
addr16
mov
sbb
nop
sbb
jl
cmp
les
lock
xchg
add
shl
pop
leavew
pushf
addr16
push
stos
xchg
cmp
xchg
in
test
daa
arpl
cmp
or
push
mov
push
lods
(bad)
fwait
push
xor
mov
add
ret
xchg
add
push
(bad)
jb
xor
imul
dec
(bad)
call
add
add
dec
sbb
retf
mov
mov
fwait
dec
inc
mov
mov
aaa
jb
pushf
out
cmp
loope
shl
xor
fwait
inc
adc
aam
jae
push
enter
mov
pop
fsubr
pop
cmp
mov
pushf
out
mov
lahf
test
es
cmp
xchg
cwde
and
mov
out
mov
mov
push
std
(bad)
jns
pop
ret
push
sar
daa
inc
pop
(bad)
inc
adc
adc
adc
cmp
js
ror
arpl
lahf
jbe
lock
sbb
sub
aaa
popa
mov
(bad)
xor
pushf
cld
imul
jo
push
xchg
mov
mov
in
int
leave
test
(bad)
outs
std
sbb
mov
push
push
test
gs
pop
mov
mov
push
mov
fmul
mov
dec
sbb
add
inc
cmp
test
push
jnp
(bad)
je
jp
in
sbb
adc
add
inc
xor
inc
in
aad
dec
(bad)
rsqrtps
in
(bad)
dec
mov
adc
sub
ss
fistp
(bad)
adc
pusha
jl
test
popa
jg
adc
push
push
cmp
int3
add
stc
shl
sahf
in
out
dec
mov
cwde
out
push
fimul
sbb
lods
push
outs
cmp
dec
adc
nop
jb
scas
dec
sbb
outs
scas
sbb
xchg
fs
mov
dec
jle
xor
out
xchg
in
shl
mov
inc
repz
adc
pop
mov
mov
mov
xchg
(bad)
lods
in
ffree
repnz
aad
lods
aad
data16
jg
ret
add
jno
adc
cmc
test
pop
int3
ficomp
push
mov
sbb
fnsave
bound
cmovae
or
cmp
(bad)
repnz
test
test
in
sbb
shr
xchg
retf
out
(bad)
outs
pop
in
xchg
imul
rol
pushf
hlt
dec
or
mov
call
pushf
inc
int3
repz
push
push
cmps
and
fiadd
pop
(bad)
push
pop
stc
mov
jmp
std
(bad)
fcomp
cmps
xchg
adc
(bad)
jbe
xchg
mov
xor
cdq
or
cmp
or
das
adc
mov
(bad)
call
lods
mov
jp
sti
mov
dec
dec
lods
mov
pop
jns
movs
xlat
mov
stc
adc
mov
lods
pop
xor
mov
retf
int3
jmp
ret
sbb
push
fstp
enter
xor
(bad)
ja
xchg
scas
inc
aam
or
jge
mov
cmp
popf
je
iret
add
cmp
sub
data16
xor
mov
movs
mov
mov
mov
pop
cs
mov
and
mov
inc
jno
push
neg
stc
pop
sbb
or
xchg
scas
xchg
sahf
xchg
inc
cmp
test
jmp
dec
dec
int
leave
in
jl
cli
push
pop
jns
mov
dec
or
(bad)
gs
fs
push
xchg
inc
test
jmp
pop
sub
fcom
lods
add
and
test
or
(bad)
ret
inc
ins
dec
pop
adc
fwait
add
das
not
and
sar
int3
jmp
adc
or
mov
jmp
stos
or
push
jecxz
xor
int
or
fisubr
cld
cdq
mov
ins
add
and
push
dec
inc
push
cmp
fsubrp
repz
xchg
cmp
sub
push
and
stos
fadd
push
mov
dec
inc
and
sbb
inc
sbb
mov
hlt
scas
jb
push
push
call
xor
mov
or
add
ror
sbb
les
push
xor
lods
movs
jo
cmps
jle
sbb
jmp
test
adc
push
in
xchg
fsubr
enter
aaa
iret
je
jae
adc
xchg
repnz
xchg
(bad)
(bad)
mov
jne
cmc
push
in
out
inc
mov
add
dec
adc
lods
or
push
outs
and
loopne
aas
xor
mov
and
rcr
loope
add
loop
int
push
xchg
push
sub
add
inc
stos
and
enter
or
dec
inc
or
xchg
jo
cmp
add
imul
in
les
jmp
pop
int
jg
xor
addr16
sbb
add
lea
inc
xor
icebp
(bad)
cli
test
adc
(bad)
shl
hlt
xchg
adc
or
in
lea
(bad)
ds
fwait
sbb
jns
cmps
cmp
in
arpl
push
push
fnsave
aad
dec
stc
dec
(bad)
mov
xor
jecxz
push
pop
xor
movs
out
stos
sar
mov
pop
sbb
mov
or
push
and
std
inc
and
js
push
mov
jl
and
rcl
sub
aam
pop
mov
jbe
sub
dec
push
or
mov
fisub
cwde
cmps
cmp
mov
mov
scas
daa
addr16
jns
jo
mov
out
jne
sub
sahf
fisubr
adc
pop
cmp
jge
scas
adc
xor
inc
push
mov
ins
cs
lds
push
ss
out
retf
movs
cld
mov
les
jo
or
and
inc
mov
adc
in
mov
(bad)
test
icebp
sbb
aaa
xchg
dec
xchg
out
arpl
mov
addr16
bound
jno
sbb
ret
add
xor
sti
fwait
rcr
in
leave
push
inc
retf
test
(bad)
enter
mov
test
xchg
jnp
inc
test
mov
shl
mov
scas
imul
repz
adc
jb
mov
out
(bad)
in
fcmovne
clc
mov
jge
movs
(bad)
jmp
cs
mov
pop
aas
push
fsubp
inc
adc
mov
or
pop
fidivr
jecxz
lahf
repnz
mov
pop
xchg
pop
sahf
inc
dec
test
jnp
jo
and
pop
lock
in
mov
ret
bound
lods
movs
rcl
mov
xor
test
jecxz
xlat
inc
in
test
scas
sub
stos
xchg
jo
sbb
xor
fldenv
inc
push
add
xchg
mov
or
or
add
add
ss
or
(bad)
push
adc
or
out
test
or
dec
jno
sbb
loop
lock
adc
lock
and
inc
jb
test
pop
and
cmp
pop
cmp
test
pop
ja
or
cmps
loopne
pop
cmc
add
inc
fisubr
push
cwde
or
arpl
repz
lahf
dec
pop
sub
mov
std
add
xchg
cmp
mov
aam
xchg
cmp
stc
fsubr
mov
inc
ret
lods
movs
aas
sub
cs
lock
and
jmp
sub
push
lds
add
adc
jmp
sbb
mov
add
cdq
cs
popa
add
mov
mov
mov
sub
mov
cdq
xchg
mov
sbb
pop
xor
mov
in
push
jmp
fwait
add
jp
push
jecxz
mov
add
jle
in
stos
xchg
test
ins
mov
(bad)
pop
cmps
ss
aaa
ret
and
xchg
cmp
movs
jns
xor
jle
xor
jp
mov
test
or
inc
enter
repz
jmp
mov
retf
mov
out
sbb
pop
sbb
sbb
push
es
or
cs
rol
or
xchg
data16
into
sub
jmp
pushf
iret
retf
fcmove
enter
shr
sbb
ins
xlat
sbb
jl
repz
fisub
lods
and
out
adc
and
jp
and
lods
jle
imul
inc
dec
in
repnz
push
and
stos
mov
inc
rol
jbe
jo
jnp
cmps
pop
cmp
hlt
call
call
cmp
sbb
lods
iret
add
sub
xchg
mov
push
(bad)
sahf
inc
popa
inc
or
xor
ror
mov
push
and
sbb
sbb
jb
jmp
mov
arpl
out
pop
push
ja
scas
cli
fnstcw
or
mov
xor
cmps
cmp
int3
leave
mov
sbb
or
shr
scas
adc
or
data16
sbb
adc
icebp
in
stos
stc
test
in
int3
imul
push
cli
in
iret
outs
cwde
(bad)
loope
dec
add
sub
and
aaa
push
jp
jb
pop
mov
aas
mov
jo
inc
xor
test
inc
inc
cli
out
cmp
call
pop
and
bound
ins
ins
push
add
add
push
pop
sbb
push
jmp
push
push
mov
mov
and
xchg
popf
cmp
push
ror
adc
addr16
sub
sub
or
xchg
test
movlps
std
jnp
pop
scas
mov
xor
sub
xchg
inc
fstp
pop
ret
mov
adc
int
test
sub
cmc
mov
mov
(bad)
mov
mov
push
pop
fild
cmp
scas
sub
hlt
dec
sbb
mov
pop
popf
popa
clc
mov
and
dec
cmp
retf
outs
xchg
sub
or
xchg
mov
mov
xchg
and
ss
test
mov
lahf
mov
xchg
jmp
sbb
enter
cmp
punpckhwd
popf
sbb
mov
or
(bad)
jl
int
fldenv
dec
push
aaa
retf
adc
inc
jae
loope
(bad)
push
xchg
addr16
daa
das
mov
shl
dec
xchg
fbld
inc
dec
mov
loop
mov
jae
sbb
lods
es
jmp
daa
rcl
sub
data16
and
scas
dec
rcl
fst
pop
inc
mov
mov
xchg
pop
ins
stos
stos
cmp
and
xchg
inc
mov
adc
stos
cmp
cdq
fbstp
mov
push
inc
push
or
aaa
and
xor
sti
or
das
sub
mov
xor
xchg
call
in
pop
cmp
pop
inc
xchg
jae
jp
ss
jo
stos
inc
pop
dec
loope
mov
mul
and
xor
xchg
stc
jbe
dec
jae
idiv
out
jbe
or
or
mov
cmp
sub
mov
aam
mov
jne
add
rcr
mov
scas
xor
jns
scas
loop
pop
cmps
aas
pop
clc
cmp
dec
mov
leave
ins
sbb
or
push
sub
nop
jmp
dec
ja
sar
pop
jbe
test
dec
sub
rol
pop
popf
das
std
and
loop
repnz
mulps
jb
jnp
test
repnz
or
or
dec
int
cld
and
jl
and
das
sub
retf
ret
es
jae
push
push
js
cs
das
pop
pop
aaa
out
mov
adc
cmp
sbb
push
cmp
daa
push
jb
mov
cmp
add
mov
(bad)
cmp
cwde
bound
shl
jmp
scas
fnstcw
test
outs
div
add
cmp
mov
xchg
push
jg
xchg
xor
call
adc
dec
and
scas
popa
push
jmp
and
not
stos
into
add
push
cmp
jl
push
shr
call
mov
imul
es
sahf
mov
(bad)
sub
xlat
aas
or
sub
cli
loopne
adc
cli
fidivr
(bad)
fadd
pop
out
fld
icebp
ss
xlat
xchg
xchg
retf
adc
pop
push
jae
push
mov
ds
stos
add
push
inc
in
jne
xchg
add
stos
sub
mov
call
or
push
(bad)
jno
inc
mov
imul
mov
movhps
mov
in
aam
adc
push
daa
xchg
scas
pop
int
pop
paddq
enter
movs
cs
sub
icebp
sbb
jl
pop
vinserti64x4
xor
inc
mov
dec
out
imul
inc
adc
mov
stc
sub
mov
fnsave
or
inc
cmp
push
mov
cld
ficom
cmp
das
add
dec
mov
std
movs
sub
add
jmp
inc
or
cmp
out
jl
lods
mov
cwde
xor
mov
xor
fidiv
leave
loop
dec
sub
(bad)
push
dec
pusha
sbb
adc
mov
mov
dec
sar
inc
ins
arpl
or
out
cmp
xor
mov
(bad)
pop
(bad)
pop
pop
inc
retf
xchg
mov
xor
mov
bound
push
es
outs
mov
push
add
daa
aad
cmp
add
push
fild
or
and
leave
leave
lea
fistp
nop
xor
xchg
cwde
xchg
bound
jne
outs
push
mov
add
jecxz
inc
test
movs
or
mov
xor
sar
in
hlt
fsub
jb
sbb
fsub
cs
dec
sub
adc
aas
movs
fld
fsubrp
mov
jne
out
enter
jb
xor
retf
movs
jmp
dec
mov
call
cmps
lahf
in
dec
scas
enter
and
ret
aas
clc
fcomp
pop
mov
inc
dec
mov
inc
dec
clc
jbe
les
cmps
stc
inc
pop
mov
pop
scas
xchg
dec
stos
xchg
scas
xchg
fs
movs
cmp
fcmovnbe
test
dec
or
dec
pop
inc
and
arpl
mov
out
out
and
xor
adc
push
test
dec
push
xor
add
adc
jae
jae
shl
movs
xchg
xor
repnz
jle
or
cmp
hlt
adc
popa
pop
stc
cmp
sahf
mov
dec
in
(bad)
jns
mov
jnp
ss
imul
in
stos
jmp
xor
outs
add
call
adc
adc
hlt
add
stos
sub
adc
xor
push
cmps
sbb
ja
push
rcr
scas
not
jns
jnp
adc
mov
icebp
mov
test
bound
adc
ret
push
and
cli
(bad)
cld
loopne
sbb
or
xchg
or
mov
shl
aaa
ror
push
sub
push
jns
mov
jmp
pop
les
xchg
stos
ja
rcl
xlat
or
xchg
in
xor
xor
scas
push
ins
call
ret
aad
stos
or
fnsave
sbb
loope
repz
dec
outs
xor
ds
dec
into
daa
mov
mov
cmp
scas
scas
hlt
mov
lods
pusha
inc
cli
add
sub
adc
pop
(bad)
(bad)
push
popa
jae
xor
mov
add
dec
jecxz
mov
out
mov
cli
fdiv
sub
adc
out
add
jp
mov
retf
adc
data16
call
mov
(bad)
int
dec
jge
mov
loop
add
inc
in
mov
add
sub
or
in
dec
pop
mov
imul
dec
xchg
mov
push
repnz
mov
mov
loop
icebp
retf
xor
pop
fadd
xchg
jg
cmp
xchg
add
iret
inc
adc
push
faddp
sub
mov
test
loope
mov
jp
in
arpl
out
inc
mov
out
rol
daa
jmp
mov
mov
push
push
js
adc
ja
int3
ret
popa
outs
xor
fldenv
mov
mov
jmp
jb
mov
ss
jbe
adc
lea
repnz
test
push
sub
ret
add
test
or
out
push
mov
popa
jp
or
repz
hlt
or
xor
jle
push
mov
sub
test
ins
jg
adc
cmp
or
jns
scas
adc
imul
stos
outs
retf
add
shl
inc
jl
jbe
pop
icebp
add
stc
sub
xchg
dec
es
test
mov
jl
mov
clc
(bad)
or
movs
xchg
mov
cmp
popf
inc
rcr
add
icebp
lea
mov
add
repz
cld
bound
gs
and
jge
xchg
sbb
jmp
(bad)
lods
scas
pop
ds
mov
dec
imul
rol
imul
jmp
mov
les
mov
(bad)
sahf
icebp
push
std
and
lds
push
xor
jo
fsubr
retf
into
sbb
jge
in
mov
xor
cmp
test
jg
das
nop
sub
fisttp
fadd
sbb
rcl
cmp
aaa
fdivr
cmps
shl
enter
(bad)
aam
mov
mov
lds
pusha
sahf
push
cmp
xor
(bad)
mov
dec
(bad)
sub
and
mov
mov
sti
dec
std
pusha
push
mov
ret
inc
lods
das
sub
push
pop
pop
mov
inc
and
inc
xchg
mov
jb
and
add
adc
push
jne
sbb
mov
adc
pop
cmps
jbe
mov
dec
leave
out
inc
cmp
fistp
shl
imul
jmp
lahf
add
inc
cmp
(bad)
adc
sar
mov
ins
leave
and
cmp
bts
pop
out
enter
jmp
adc
dec
mov
es
adc
leave
aaa
jns
xchg
(bad)
idiv
sar
xchg
cmp
sbb
test
and
xchg
add
pusha
scas
cmps
ret
and
adc
cmc
mov
outs
jl
out
pop
sub
xchg
clc
sub
mov
repz
shr
ret
nop
out
rcr
add
retf
xlat
into
push
and
jnp
retf
cmp
mov
int
cmp
adc
jae
jp
jle
add
(bad)
shr
push
shr
lods
mov
nop
xchg
sbb
aaa
jl
les
xor
pop
adc
ds
mov
push
mov
sti
pushf
sahf
sub
int3
push
enter
add
ins
add
adc
lds
in
mov
test
test
test
pop
pop
fstp
fnsave
test
mov
cmp
icebp
jo
retf
sbb
out
sub
or
imul
adc
clc
leave
or
adc
sub
into
jg
or
pop
sbb
jle
fwait
xor
add
adc
and
jns
push
adc
and
sti
mov
adc
fwait
jecxz
dec
cmp
ret
lds
leave
xor
dec
call
cli
push
or
jp
mov
and
stos
dec
test
out
xor
sti
sub
push
ror
aaa
aam
push
add
fimul
lahf
mov
cmp
xlat
retf
inc
jle
shr
data16
(bad)
in
cmp
push
sahf
sub
shl
adc
push
push
mov
jecxz
cmps
mov
pop
jg
mov
rcr
mov
adc
mov
sbb
(bad)
xor
pop
jne
shr
in
ss
adc
in
jbe
(bad)
out
lods
add
jge
jns
pop
or
bound
xor
or
mov
push
pop
jnp
mov
pop
push
and
arpl
lds
push
jg
jp
lods
int
scas
dec
inc
ds
and
mov
cmp
call
pusha
push
out
lods
sub
mov
jae
xchg
out
mov
neg
pop
movs
frstor
jge
lds
inc
repnz
mov
cdq
add
mov
rcl
xchg
lods
mov
mov
sti
aad
iret
sub
push
pop
sbb
fidiv
cs
or
lahf
ror
mov
stc
or
enter
jns
test
xor
out
ins
test
fidivr
out
or
aam
jno
test
int3
pop
push
and
nop
gs
clc
arpl
std
ds
sbb
dec
or
into
adc
call
(bad)
sbb
imul
in
sub
clc
or
test
xchg
sbb
inc
cmp
sbb
sar
sbb
mov
jo
inc
mov
sub
jg
stos
dec
fincstp
push
add
xor
imul
push
test
push
xor
cmps
push
and
pand
cmp
mov
test
mov
push
aad
push
jmp
cmp
jmp
scas
shl
in
out
out
pop
adc
frstor
jg
pop
stc
cmp
jge
div
lahf
ret
fbstp
aad
adc
daa
dec
mov
adc
sub
shr
psubusb
push
adc
rol
out
ins
(bad)
mov
sub
inc
cmp
pop
mov
ds
dec
stc
push
inc
push
scas
sub
sbb
repnz
cmc
push
fstp
xchg
dec
adc
pop
xchg
stos
inc
stos
jecxz
mov
mov
jno
cmc
cld
nop
retf
xor
push
mov
pop
cmp
pop
or
or
jmp
mul
jae
rcl
pop
aam
adc
pop
movs
xor
add
ja
outs
cli
out
xchg
and
jne
into
sbb
gs
aam
idiv
jb
lea
sahf
test
data16
pop
dec
adc
sbb
ins
nop
lods
inc
aam
jbe
sub
scas
sbb
fiadd
and
mov
mov
dec
pop
push
test
and
sub
jae
lods
add
xchg
or
int3
out
sbb
sbb
addr16
dec
pop
mov
sahf
pop
pop
ss
rol
outs
into
loop
test
ror
into
mov
and
and
into
stc
in
xor
cmp
pop
jne
xor
pop
or
movs
sahf
mov
adc
add
add
rol
(bad)
mov
and
out
jmp
lock
mov
fiadd
mov
mov
loopne
inc
xor
stc
push
adc
fimul
(bad)
in
fdiv
inc
mov
jg
sub
test
stc
and
gs
mov
lods
inc
xor
test
mov
push
fs
cmp
mov
int3
mov
add
jle
add
pusha
scas
mov
fisub
cmps
dec
test
jl
cs
test
xchg
gs
xor
lsl
inc
and
adc
aas
pop
daa
fld
push
mov
and
xchg
inc
lods
xlat
mov
push
add
fst
mov
jmp
adc
in
inc
or
mov
pushf
test
mov
sahf
int3
push
cdq
pop
movs
xor
and
das
jle
xchg
shr
cmp
push
imul
push
aad
or
ret
cmp
es
repz
in
or
repz
imul
inc
(bad)
pop
ror
mov
lods
or
mov
add
rol
sbb
cdq
pop
jno
and
push
test
das
sbb
out
bound
int3
std
inc
mov
or
and
jecxz
inc
jb
in
int3
cmp
movs
jo
and
push
icebp
pop
scas
xchg
jl
or
lea
jmp
cmps
aad
test
bndldx
data16
fnstcw
dec
push
mov
stos
xchg
jg
sbb
add
inc
daa
jo
mov
loopne
and
mov
pop
ins
shl
pusha
fcomp
pop
popf
in
shl
sub
fist
mov
(bad)
fs
arpl
daa
aam
mov
sbb
sbb
sbb
xor
mov
ins
sbb
xchg
jb
icebp
(bad)
fisubr
scas
fwait
shr
inc
std
inc
lds
cmp
xchg
lds
cmp
mov
imul
ds
ja
in
cld
push
mov
push
(bad)
pop
into
aaa
xchg
shl
mov
push
inc
es
jnp
int3
shr
test
ss
mov
int3
arpl
loopne
gs
popf
adc
fistp
sub
pop
or
mov
jae
inc
test
push
sub
sti
leave
mov
loopne
shl
mov
inc
dec
xchg
cmps
xor
inc
fs
leave
lock
sbb
in
push
push
stos
or
in
inc
int3
xchg
xchg
jmp
pop
pop
test
mov
cmp
inc
mov
cmps
pop
jmp
inc
mov
leave
iret
fld
or
(bad)
fcom
dec
mov
popf
fs
scas
dec
mov
fist
dec
sbb
xchg
in
mov
cmp
(bad)
ds
sbb
jmp
xor
jbe
bound
mov
aaa
inc
daa
xor
and
xchg
fadd
ficom
gs
sbb
repz
jbe
add
inc
stos
sub
mov
jne
pop
inc
cwde
push
cmp
aaa
sub
cmp
stos
inc
jne
mov
ja
sub
aad
xor
push
cld
out
ret
in
lds
dec
in
sar
xchg
inc
cmc
jmp
pop
jmp
and
es
mov
mov
dec
mov
xchg
gs
xchg
lahf
push
pop
loope
out
popf
fwait
adc
nop
xchg
sub
mov
outs
call
cmp
test
data16
cmp
(bad)
pop
ret
aad
mov
xor
dec
ins
mov
mov
adc
cld
ret
test
mov
stc
xchg
fst
jbe
aas
aad
fwait
pop
inc
sub
mov
sub
addr16
xchg
cmps
and
in
jne
and
movs
sbb
fdiv
push
mov
cmc
aaa
mov
or
pop
in
adc
and
push
rol
push
nop
add
std
push
test
mov
mov
std
mov
ins
mov
mov
int3
ins
push
out
xor
xchg
(bad)
mov
(bad)
jmp
push
inc
xchg
sub
push
enter
lea
scas
and
xor
cmps
repnz
add
push
out
add
inc
and
cmp
addr16
mov
or
pop
pop
scas
out
xchg
test
xchg
leave
out
iret
jmp
pop
movs
and
inc
adc
(bad)
or
inc
cld
or
jp
mov
not
rol
mov
std
mov
adc
ja
sub
fs
pop
retf
cmp
lahf
dec
adc
push
inc
popa
mov
xchg
(bad)
call
xchg
jecxz
or
pop
dec
add
inc
xchg
xchg
dec
push
mov
inc
xchg
outs
popa
cmp
push
inc
or
mov
jo
jge
pop
mul
xor
das
(bad)
loope
mov
jb
(bad)
outs
call
pop
std
inc
loop
out
scas
ror
push
and
jne
sub
mov
fs
fistp
dec
lods
push
and
sub
jle
retf
cdq
out
mov
aas
xor
outs
sbb
dec
repnz
lock
xchg
cdq
test
and
iret
adc
aaa
mov
sub
jg
pop
sar
cdq
imul
outs
or
mov
mov
cli
(bad)
pop
hlt
call
lahf
(bad)
xor
outs
in
xchg
cdq
adc
xchg
shr
int3
sub
out
pop
outs
jle
add
iret
mov
lods
add
mov
inc
cmps
sub
pop
(bad)
stos
dec
ja
pushf
push
test
je
addr16
aas
ins
sbb
(bad)
dec
pop
sbb
jge
mov
dec
mov
and
jl
mov
mov
in
mov
sub
jb
fsubr
inc
imul
lea
(bad)
stos
jmp
jp
gs
adc
xchg
int
xchg
lea
sub
fdiv
ins
loop
test
jae
sar
cmc
in
xor
ins
fisub
mul
mov
lahf
or
dec
clc
mov
and
jns
aaa
mov
mov
nop
es
stc
mov
sbb
aam
dec
arpl
in
add
loopne
fwait
gs
test
mov
dec
aam
jae
addr16
mov
sbb
sbb
imul
mov
cdq
xor
and
push
jg
(bad)
arpl
sub
aas
xor
in
jg
mov
mov
daa
(bad)
lods
outs
cmc
ss
outs
cwde
mov
fist
aaa
xlat
retf
nop
jno
mov
test
push
pop
sub
and
mov
xchg
xor
(bad)
ins
add
add
cmp
ret
je
cmp
sub
sub
leave
stc
pop
lahf
call
xchg
mov
scas
fwait
jb
pop
dec
cmc
dec
sbb
dec
mov
or
popf
adc
fdiv
xchg
xchg
pop
lahf
cmp
fistp
or
rol
adc
sbb
div
sub
mov
pop
and
pop
cli
into
pusha
scas
int
mov
xor
test
cmp
sbb
adc
and
(bad)
imul
pop
inc
sub
or
mov
std
adc
adc
pop
push
scas
clc
sub
sar
xchg
dec
jne
pop
lods
sub
sub
mul
sar
or
les
scas
mov
mov
rcl
(bad)
push
pop
push
jle
fcomi
retf
imul
and
cmp
imul
inc
push
dec
std
retf
add
dec
movs
jge
pushf
jmp
arpl
sub
std
in
call
jge
jbe
(bad)
pop
fwait
mov
adc
jmp
stc
and
mov
jmp
aam
and
sahf
push
jns
jnp
add
or
pop
push
test
or
dec
fistp
jl
dec
pop
and
dec
cmc
lahf
jmp
les
rcl
es
jge
mov
movs
(bad)
sub
mov
mov
push
hlt
or
jmp
fdivr
xchg
addr16
leave
popa
push
pop
daa
mov
and
(bad)
fldenv
sti
adc
jmp
test
lock
fwait
xor
pop
int
jle
jl
inc
imul
icebp
mov
adc
adc
lods
mov
or
lods
lods
inc
mov
ins
mov
in
or
sbb
pop
add
ret
popa
mov
nop
lds
mov
cmp
pop
ds
js
xor
in
sbb
inc
movs
outs
jbe
dec
popf
inc
or
sub
add
shl
ret
sub
xchg
hlt
into
shl
int
jl
push
adc
xchg
add
popa
mov
adc
inc
enter
jg
movs
xlat
cmp
inc
sbb
or
add
pusha
pop
(bad)
mov
dec
inc
popa
mov
xor
xchg
add
or
xchg
push
les
mov
(bad)
cld
or
add
pop
jecxz
push
mov
mov
xor
hlt
mov
(bad)
les
(bad)
adc
push
sub
pop
clc
das
fldcw
sub
es
bound
stos
movs
enter
in
xor
popa
adc
dec
mov
jo
push
cs
out
push
and
and
cmp
cmp
pop
push
std
mov
hlt
(bad)
jmp
push
or
lock
add
stos
jg
or
xchg
cmp
push
popa
cwde
jb
jno
icebp
loope
cli
pop
push
push
adc
in
rcl
xor
(bad)
adc
out
adc
stos
mov
xor
outs
mov
cdq
mov
ja
or
mov
mov
outs
jle
cmp
fcom
xor
sbb
movs
icebp
out
push
xor
stc
cmp
add
stc
shr
xchg
fild
inc
add
ss
das
mov
inc
push
mov
aad
dec
push
cli
jl
adc
neg
push
loop
inc
out
dec
mov
in
pop
dec
iret
test
xor
into
loopne
das
call
fistp
imul
out
hlt
cs
test
retf
jg
test
ja
rol
sub
dec
dec
sub
pop
sbb
adc
adc
sbb
clc
cmp
jnp
ds
mov
inc
shl
and
aas
cmp
sub
test
push
push
mov
adc
pusha
xlat
je
dec
inc
nop
push
jge
sub
add
pop
je
fld
loope
repnz
sar
mov
jbe
lds
call
pop
add
mov
aaa
mov
lods
inc
jle
mov
and
ss
fistp
cmp
cmp
cmp
jl
xchg
cmc
and
mov
inc
arpl
adc
or
out
popf
adc
and
mov
in
fiadd
cmp
shl
(bad)
push
push
xor
cmc
leave
int3
dec
daa
fld
loopne
stos
fwait
cmps
shl
and
fbld
inc
push
shl
pop
cdq
fs
and
pop
sbb
fisub
mov
retf
push
out
mov
test
push
in
add
test
in
pop
in
add
pop
je
mov
scas
ror
hlt
add
fnstenv
push
inc
xchg
jp
jecxz
popa
inc
and
dec
inc
push
popa
add
ja
outs
inc
sahf
dec
sub
repnz
(bad)
das
cmp
xor
bound
xor
jb
sbb
cmps
arpl
iret
dec
sbb
mov
movs
(bad)
jmp
push
fsubr
fldln2
push
adc
add
pop
nop
int
pop
mov
sbb
je
xor
dec
mov
mov
and
xchg
rcr
xchg
into
mov
in
inc
iret
cmp
push
adc
out
and
inc
jnp
data16
mov
lods
shl
xor
sub
mov
arpl
(bad)
pop
pop
adc
fistp
xor
adc
push
add
test
xor
add
jbe
sbb
or
inc
mov
mov
sub
(bad)
xor
mov
add
into
mov
fld
inc
out
rcl
aam
aaa
push
arpl
xchg
addr16
sbb
and
mov
jmp
das
cmp
xor
stc
loop
add
or
jg
dec
or
inc
shr
cmp
xchg
es
cmp
ss
inc
idiv
ror
cmp
mov
mov
adc
inc
shl
pcmpeqw
add
mov
inc
stos
pop
(bad)
in
icebp
push
outs
mov
add
popf
cld
ror
addr16
jbe
shl
mov
jb
jnp
push
mov
jge
aad
jne
and
pusha
repz
(bad)
push
adc
mov
out
push
sub
fdivr
push
adc
ins
fxch
call
sub
xlat
inc
push
out
jge
test
cdq
push
test
and
inc
stos
shl
adc
mov
push
in
mov
push
in
mov
xchg
addr16
or
xor
test
add
mov
xchg
dec
int
out
pextrw
dec
xchg
sti
jnp
imul
and
cmc
pop
inc
(bad)
mov
jl
push
mov
pop
sub
int
jecxz
nop
sub
cmps
hlt
xchg
mov
xchg
pop
mov
movs
shl
in
movs
dec
mov
xchg
sub
mov
xchg
mov
popa
dec
add
(bad)
js
inc
or
movs
and
add
and
push
imul
in
mov
(bad)
cmp
lahf
push
ret
and
jmp
jmp
mov
mov
add
mov
sbb
or
les
jecxz
cld
mov
jmp
ja
lea
enter
or
xchg
pop
xchg
dec
ds
cs
ds
(bad)
cmp
jp
(bad)
leave
adc
es
lahf
retf
mov
out
in
lea
vpunpckhdq
iret
stc
push
shl
sbb
sub
adc
inc
sbb
dec
or
jl
sub
cdq
or
mov
imul
xchg
cvtdq2ps
nop
shl
sub
mov
in
mov
fs
arpl
inc
adc
hlt
cmp
icebp
mov
div
fcomp
mov
out
not
jbe
jns
js
and
dec
mov
pusha
cld
and
jmp
shr
mov
cmp
mov
add
pop
push
mov
jbe
cmp
pop
pop
cmc
pop
push
lock
xor
push
nop
ins
in
test
ret
mov
pop
adc
jo
scas
std
mov
mov
mov
inc
and
xor
add
cmp
add
inc
stos
pop
sbb
mov
cmp
inc
daa
test
mov
or
div
dec
jnp
cmp
xchg
push
xor
jbe
lock
push
xchg
out
loope
lods
sub
adc
jecxz
inc
and
popa
xchg
ret
cli
sbb
pop
push
xor
das
xchg
sbb
xchg
and
fbstp
cli
lahf
mov
les
jmp
cli
aam
int
xchg
shl
dec
pop
fdiv
adc
cmps
retf
sbb
pop
adc
movs
inc
test
sub
cmp
cmp
retf
loopne
cmp
aas
mov
out
mov
and
cmps
retf
jne
fld
dec
iret
stos
or
or
fistp
sbb
pop
fnsave
int3
daa
adc
imul
cmp
sbb
sub
xchg
inc
xchg
ss
in
xchg
cs
test
mov
repz
xlat
adc
sbb
or
ja
sbb
push
daa
cmp
mov
and
push
mov
mul
pop
xchg
pop
retf
sbb
push
inc
cwde
je
sub
sar
ret
aaa
nop
movs
js
sub
ret
xchg
shl
mov
stos
add
sar
pop
(bad)
fs
mov
loop
loop
mul
push
jl
not
shl
push
lock
mov
mov
pushf
push
inc
(bad)
add
mov
mov
outs
(bad)
mov
(bad)
xchg
rcl
xor
push
jb
scas
or
scas
xchg
(bad)
in
cmps
es
sub
stos
xchg
cdq
push
stos
mov
mov
adc
mov
push
dec
daa
cmp
mov
sbb
rcr
sar
fstp
xlat
je
out
sti
popf
sbb
sahf
shl
stos
cmp
jne
mov
add
adc
xchg
lods
add
add
pop
mov
or
outs
adc
cmovno
xchg
ror
jb
sbb
(bad)
daa
push
clc
xor
int3
ret
adc
mov
sbb
lea
push
daa
popf
mov
and
adc
gs
mov
lahf
in
fist
jmp
push
iret
stos
mov
ret
cli
cwde
and
(bad)
cmp
sub
xor
std
test
shr
cdq
add
jmp
jg
jmp
aas
int
adc
sub
xor
ins
pusha
call
imul
ds
cmp
dec
aad
ds
jp
sub
sub
movs
xor
mov
leave
push
gs
js
inc
test
scas
movs
sub
mov
xchg
or
xchg
cwde
hlt
cmp
lods
(bad)
add
cmps
out
jb
fld
inc
nop
mov
sahf
out
out
dec
xchg
inc
xchg
sar
pop
push
iret
mov
sbb
adc
fidiv
jbe
xor
push
add
hlt
into
mov
out
and
cmp
cmc
sahf
cmp
dec
mov
xor
xchg
push
xchg
dec
aas
dec
push
jge
inc
add
jb
add
sbb
lahf
dec
fwait
sub
sar
stos
xlat
pop
icebp
jns
retf
icebp
push
or
les
jl
xor
lahf
pop
fld
cld
loop
rcl
push
sahf
or
xor
test
add
ins
popa
mov
push
sub
out
jae
xchg
push
sub
inc
inc
xchg
imul
ret
and
lea
sub
loopne
repnz
stos
hlt
je
inc
xchg
sub
push
inc
pop
scas
push
outs
test
mov
jb
das
mov
push
out
cmp
pop
pop
jo
scas
hlt
lods
jbe
xor
stos
jg
inc
jmp
mov
fdivp
call
data16
sbb
or
test
jns
xchg
ror
div
push
jb
xor
xlat
jecxz
pop
mov
cmp
and
sbb
dec
in
ror
and
fsubp
ret
add
mov
fwait
dec
sub
psubsw
dec
pop
mov
xor
or
cmps
mov
sbb
or
inc
adc
mov
out
nop
mov
push
push
push
sub
lods
cmp
fwait
test
add
push
jp
push
bound
adc
cmp
in
js
test
loope
enter
lds
adc
std
sbb
xchg
jnp
or
push
jecxz
dec
add
cmp
out
mov
pop
lds
pop
aas
jg
add
int3
mov
mov
cmps
sbb
sti
or
ins
loope
(bad)
push
stos
dec
xchg
loop
jg
into
test
xlat
sar
scas
add
(bad)
push
in
in
fst
test
jecxz
mov
adc
xor
add
dec
pusha
lods
test
dec
sbb
sbb
add
mov
inc
inc
mov
popa
jb
inc
pop
arpl
mov
outs
packuswb
jne
mov
sbb
outs
adc
idiv
repz
mov
xor
call
and
in
add
das
pop
add
movs
test
cld
push
sub
in
pop
pop
mov
mov
jns
cdq
pop
mov
mov
mov
into
popa
sub
int3
rol
scas
or
fsub
or
repz
xor
mov
jmp
mov
cmp
call
xor
scas
adc
sbb
arpl
lods
xchg
out
push
fnstsw
push
push
add
neg
int3
pop
out
loopne
jmp
dec
fisubr
sub
popa
push
lahf
addr16
cwde
sbb
jmp
bound
in
sbb
fcom
push
xchg
hlt
scas
push
dec
push
xor
out
out
pop
cld
sub
sub
or
imul
or
mov
ret
nop
mov
addr16
int
loope
adc
fidiv
sahf
push
out
je
(bad)
mov
ret
xor
sub
scas
lock
(bad)
push
add
adc
repz
not
arpl
pop
jb
cmp
dec
pop
es
mov
ret
fsub
add
lahf
push
mov
mov
outs
xor
fmulp
ins
scas
xor
lods
lods
aam
push
pop
adc
fisubr
imul
or
mov
and
sar
jmp
shl
and
mov
mov
ss
std
mov
nop
adc
push
fisubr
loopne
push
cmp
mov
sub
fcmovu
out
fisttp
xchg
arpl
mov
je
sub
jmp
iret
div
jo
into
jo
xchg
mov
in
mov
mov
fadd
mov
js
or
fsub
fsub
test
test
cmp
and
test
shr
xor
push
daa
jns
data16
shl
in
xor
hlt
inc
push
dec
pop
sub
xor
adc
out
mov
lods
cwde
test
enter
loope
retf
or
add
add
jmp
adc
imul
sti
out
ins
pop
ins
inc
cmps
dec
push
xor
hlt
scas
and
xor
xor
xchg
xchg
xor
es
div
adc
mov
cld
lods
sub
stos
aaa
out
or
bound
or
sti
cmp
push
dec
fs
dec
and
adc
cmp
aaa
call
xor
call
sub
iret
mov
retf
jns
jae
pusha
mov
jo
xchg
inc
and
mov
pop
inc
cmp
and
imul
jge
outs
push
inc
mov
xor
sbb
mov
imul
pop
cmp
mov
mov
shl
jmp
pop
popf
mov
cmp
repz
dec
clc
neg
lea
bound
sbb
mov
cmp
xor
or
dec
outs
ret
movs
hlt
in
out
ret
cli
push
inc
pop
rcr
sbb
je
inc
loop
call
fiadd
loop
pop
cmp
jb
in
pop
add
fcmove
fist
xchg
shr
arpl
inc
ret
popa
pop
add
cwde
aad
push
pop
movs
es
xor
sbb
jo
ret
jbe
mov
jbe
loopne
movs
mov
cmc
and
xchg
leave
mov
pop
popf
jb
cvttps2pi
add
mov
push
out
xlat
pushf
inc
bnd
mov
(bad)
pop
or
jo
mov
add
and
xchg
out
scas
ror
cmps
xchg
rol
retf
cmp
fs
scas
and
inc
inc
(bad)
fxch
ret
mov
fbstp
dec
xchg
mov
xor
sbb
scas
shr
rol
(bad)
ficomp
pop
pop
mov
add
jecxz
jecxz
fs
push
(bad)
jo
cld
mov
or
mov
pop
call
cmps
loop
aad
inc
inc
or
and
cmps
aam
clc
movs
ins
pop
jb
and
outs
imul
std
jb
ja
ret
shl
ins
bound
jmp
push
push
jg
and
jmp
jmp
mov
dec
int
dec
sbb
cmp
sbb
mov
es
sub
cs
adc
push
fs
outs
imul
repnz
in
xor
out
dec
mov
jae
outs
sub
sbb
nop
push
fisubr
mov
inc
adc
pop
es
sahf
in
pop
iret
dec
inc
out
sbb
xor
add
jge
xchg
repnz
test
jno
cmps
imul
add
fwait
or
and
and
lea
movs
pusha
outs
pop
mov
and
hlt
push
mov
shl
mov
add
or
test
push
aam
daa
loopne
xchg
aad
retf
and
add
sub
adc
lods
pop
(bad)
adc
and
out
dec
inc
mov
pop
add
add
div
add
jns
sbb
or
mov
inc
arpl
in
pop
std
inc
mov
int
rol
adc
mov
mov
mov
or
jns
add
jb
and
push
into
fwait
mov
repz
cmp
(bad)
movs
mov
shr
out
frstor
mov
xor
push
inc
popa
fadd
(bad)
ret
adc
cmp
ret
add
xor
inc
and
dec
ds
(bad)
ins
xchg
pop
mov
xchg
dec
(bad)
cmc
les
cs
ins
fneni(8087
inc
lea
pop
jmp
es
adc
pop
fnstsw
aad
rcr
pop
test
mov
jp
shl
jmp
push
mov
lahf
in
jns
cwde
adc
rol
cdq
repz
mov
adc
mov
push
inc
(bad)
add
mov
sub
adc
and
pop
lea
pushf
and
xor
push
push
adc
pop
jmp
jl
jg
dec
mov
dec
dec
aas
cmp
movs
inc
adc
pop
jmp
std
shl
cmp
and
or
lock
in
inc
enter
idiv
add
pop
push
or
mov
in
lds
daa
ss
sahf
pop
aaa
sub
lock
ins
xor
push
pop
xor
js
xchg
call
call
cs
or
xor
add
arpl
adc
adc
pop
pop
cwde
outs
fwait
sbb
leave
mov
mov
outs
jle
aad
sbb
mov
mov
xor
lock
pop
dec
je
sbb
cmp
mov
mov
jmp
out
aaa
ins
jb
push
xchg
inc
inc
and
sub
aas
and
sbb
das
loop
nop
xchg
scas
fcom
in
mov
jmp
inc
sbb
adc
imul
aad
lods
aad
xor
sbb
pop
je
ror
jmp
icebp
add
test
or
and
fild
and
clc
or
repz
or
pop
cmp
sbb
cmp
out
imul
call
add
in
xor
mov
pop
or
cmp
pop
out
test
je
or
mov
ins
in
add
cmc
ja
push
(bad)
sub
sub
(bad)
je
out
(bad)
jg
jb
scas
test
sub
stc
pop
lods
jl
cmp
lea
dec
shl
mov
mov
xchg
and
or
adc
rol
retf
out
das
and
pop
pop
rcr
add
loope
jmp
je
push
lock
lock
pop
or
or
add
inc
pop
sahf
ret
mov
fnstsw
out
dec
sbb
cmp
inc
jno
outs
aaa
sbb
popa
pextrw
pop
or
stc
out
imul
push
push
mov
inc
jl
out
mov
int3
mov
icebp
popf
(bad)
cdq
mov
ret
scas
mov
(bad)
push
sahf
mov
test
call
xor
(bad)
ds
mov
popf
jecxz
inc
movs
pop
fmulp
push
leave
jb
movs
fs
pushf
loopne
sbb
jmp
gs
in
or
ret
adc
dec
pop
mov
sbb
out
arpl
ret
mov
xchg
sbb
out
(bad)
mov
das
sub
sti
mov
cmps
into
std
call
or
pop
xor
mov
aad
mov
pop
bound
sub
in
jl
iret
imul
in
jp
ds
fist
pop
inc
push
outs
mov
jge
sub
rcr
mov
jnp
out
sbb
lds
xor
(bad)
mov
jns
add
gs
arpl
add
cmps
add
stc
mov
outs
dec
jnp
fwait
adc
pusha
popa
mov
clc
loopne
push
xchg
es
xlat
mov
adc
pop
cmp
push
lock
dec
fsubr
lods
(bad)
mov
int3
add
mov
sbb
mov
mov
ja
loope
fldenv
jae
jge
cwde
jb
out
xor
into
fisttp
xchg
xlat
cmp
ins
cmps
in
(bad)
out
paddb
(bad)
leave
fpatan
lods
inc
push
mov
sbb
addr16
int
in
push
xor
pop
add
in
mov
adc
push
mov
cmp
loopne
into
dec
(bad)
and
outs
jnp
imul
in
ds
mov
leave
xchg
imul
push
sar
inc
aas
je
iret
dec
(bad)
or
lea
push
add
push
loop
push
ins
jge
inc
xor
push
push
repnz
popf
and
ficom
pop
es
iret
add
or
xor
ins
xor
pop
sub
in
(bad)
sub
loop
jge
xor
or
lods
inc
fstp
pusha
in
jns
cmc
aaa
jecxz
daa
adc
ror
push
mov
xchg
pop
aam
mov
dec
sti
mov
jnp
add
les
es
xor
xchg
fbstp
xor
or
mov
push
sub
call
xchg
jb
stos
sub
mov
jp
or
aaa
mov
jbe
dec
fbld
pop
dec
mov
fld
xchg
or
out
sbb
cdq
stc
aaa
shr
stos
mov
xchg
lea
or
call
or
push
sbb
fnsave
imul
repnz
(bad)
test
outs
dec
mov
cmp
and
cmp
shr
shl
leave
test
cmp
adc
cmp
mov
adc
cmp
push
xor
xchg
and
leave
mov
movs
outs
in
loopne
arpl
sbb
jnp
xchg
adc
loop
fidiv
pop
push
fidivr
(bad)
bound
lea
mov
push
loope
imul
jne
or
xchg
pushf
lods
jb
fwait
movs
nop
in
cmc
mov
outs
or
fwait
xchg
dec
or
cmp
push
aad
shr
or
aam
cmps
pop
inc
std
dec
lock
push
stc
mov
jmp
push
jbe
push
int3
xchg
retf
jge
out
idiv
hlt
xor
push
mov
nop
xchg
aaa
es
aas
daa
or
mov
loope
movs
xchg
inc
ja
ins
int
jne
add
(bad)
gs
stos
or
cmp
jne
push
jp
inc
and
cld
call
lock
shl
repnz
(bad)
mov
ror
pop
lock
xchg
and
inc
push
mov
out
pop
cwde
(bad)
ficomp
adc
lahf
adc
call
das
rcl
xchg
push
in
push
and
fldcw
sbb
lds
xor
stc
lods
mov
dec
ret
(bad)
and
ds
fwait
push
mov
mov
iret
movs
add
(bad)
fild
push
(bad)
push
out
inc
add
out
push
jmp
push
data16
ret
cld
cdq
dec
xchg
jo
fs
push
add
pop
sub
clc
xchg
repz
adc
sub
shl
sahf
fs
jns
sbb
pop
data16
dec
jecxz
in
iret
daa
lods
(bad)
mov
push
sar
icebp
jge
dec
cmps
mov
arpl
sbb
mov
sbb
push
jbe
push
call
inc
jno
cmps
sub
add
add
test
adc
(bad)
cmp
lods
xchg
sbb
out
pop
mov
mov
clc
add
and
xchg
int
popa
mov
bound
js
xchg
das
mov
push
sub
jo
into
into
out
clc
jl
add
je
shl
mov
jl
shl
xchg
dec
sub
shl
out
dec
push
cld
clc
popf
push
jle
jb
js
(bad)
jnp
add
jne
adc
cdq
lock
test
stc
jmp
mov
retf
addr16
das
lds
sbb
adc
and
mov
jo
cmp
inc
aas
or
adc
xlat
jg
pop
jmp
dec
sub
test
fwait
pop
add
hlt
jmp
fdivp
or
mov
fs
xor
jge
add
cmp
mov
xor
mov
in
das
vmread
mov
pushf
idiv
stos
outs
sub
lock
mov
sbb
daa
lahf
sbb
lock
jae
(bad)
icebp
out
mov
push
inc
jmp
aas
fcomip
repz
and
out
std
gs
add
dec
cmc
sbb
in
push
in
call
and
in
bound
and
dec
or
movs
in
inc
idiv
das
xor
push
mov
stos
lea
je
cdq
cli
cmps
aas
mov
push
cmp
mov
arpl
jns
inc
out
jmp
clc
pop
and
jne
das
out
ds
inc
mov
jl
pushf
stc
fs
jmp
inc
push
inc
aas
mov
in
ds
inc
ficomp
pop
mov
jbe
retw
xchg
test
push
sbb
retf
pop
sbb
int3
xchg
mov
pop
aam
add
outs
pop
push
jae
mov
xchg
and
(bad)
pop
stos
cmp
push
xchg
mov
or
pop
lods
pop
cmp
hlt
out
repnz
dec
mov
mov
mov
sar
fild
cmps
dec
aas
jo
into
addr16
call
sub
test
jne
js
rcr
jle
pop
jae
(bad)
sub
mov
adc
or
cmps
addr16
add
dec
pop
test
or
ja
xor
bound
add
mov
inc
cmp
mov
jb
cmp
mov
test
sbb
and
sub
xchg
cmp
daa
sbb
and
repz
jae
(bad)
das
adc
inc
xor
scas
ds
in
scas
(bad)
sub
xlat
out
fst
scas
out
fcmovne
xor
movs
(bad)
push
das
jbe
arpl
mul
into
adc
push
dec
or
sub
movs
and
push
les
lds
sbb
mov
mov
je
push
dec
dec
stc
fs
xor
mov
ror
sbb
clc
mov
cmps
das
add
add
adc
add
push
mov
fistp
fcom
adc
mov
or
iret
out
fstp
lea
inc
aad
push
fisub
je
jle
sbb
bound
fiadd
jl
shl
mov
jae
ja
xchg
dec
and
out
sbb
lock
jmp
jno
and
loopne
cmp
mov
test
jge
aad
or
adc
shl
repnz
jp
les
ret
pop
jmp
dec
or
adc
int
jno
lahf
popf
dec
cmp
das
sub
cmp
push
dec
fild
sub
xchg
add
and
inc
in
arpl
jl
imul
leave
scas
in
rcr
cmp
fs
pop
cmps
inc
mov
push
xor
and
inc
or
and
nop
fwait
add
and
xor
repnz
jo
fdiv
lods
fs
xor
jge
sub
mov
dec
sbb
inc
jae
lea
push
sar
dec
jmp
cmp
lock
ins
test
jno
movs
adc
fisubr
test
test
arpl
imul
mov
in
outs
mov
(bad)
into
mov
xor
jg
jecxz
xchg
jmp
(bad)
lea
mov
push
fnsave
out
push
pushf
imul
sub
(bad)
adc
ror
outs
rol
rcr
lock
int
retf
mov
cld
add
fs
jmp
adc
call
fidiv
cdq
scas
bound
mov
dec
popa
mov
add
push
sub
sbb
mov
dec
addr16
adc
dec
imul
loope
in
and
push
xlat
or
dec
pushf
adc
sti
xor
jmp
enter
int3
lahf
pop
cmp
pushf
(bad)
aad
push
adc
mov
xchg
stos
movs
out
adc
inc
mov
ret
xchg
lahf
sub
mov
test
push
add
pop
jo
jmp
mov
sub
test
lods
pop
fstp
and
pop
fcmovnu
add
rol
nop
stos
js
les
cmp
sbb
xchg
add
icebp
inc
sar
mov
imul
repnz
add
arpl
mov
xor
xchg
aad
jle
dec
pop
cmp
jle
jg
jmp
jecxz
jno
rcl
mov
nop
pop
cmp
idiv
popa
push
fsub
add
sbb
jmp
mov
and
push
pop
shl
mov
out
into
add
lods
jno
add
fwait
sub
das
xchg
or
sub
dec
call
out
pusha
mov
cmp
mov
ficom
mov
adc
xchg
(bad)
(bad)
sub
sub
fisub
mov
fcom
jp
sahf
xchg
clc
fidiv
mov
sub
jmp
xchg
ins
add
sbb
mov
sub
mov
pushf
sub
cmps
cmp
xor
and
ins
fmul
loop
inc
push
mov
pop
jmp
ss
mov
cmp
mov
in
and
inc
into
in
cmp
jo
arpl
stos
jmp
sub
mov
out
pop
jns
and
xchg
mov
jo
jmp
sahf
fnstenv
mov
loopne
sti
pop
fwait
cmp
inc
inc
fwait
add
arpl
scas
nop
sbb
clc
stos
inc
cmp
fstp
xor
inc
and
je
(bad)
icebp
sbb
dec
cmp
dec
adc
out
(bad)
and
loopne
sub
xchg
or
pop
mov
mov
rcl
inc
repz
std
std
in
and
sbb
cmps
les
cwde
mov
repnz
in
out
or
adc
loop
jmp
cmp
xchg
dec
scas
movs
adc
adc
push
das
xlat
xor
out
and
push
fisubr
dec
jle
sahf
imul
push
into
out
(bad)
ins
pop
mov
fmul
test
sub
inc
imul
ret
leave
push
or
es
push
shl
ret
out
sysenter
aaa
add
jmp
fild
push
dec
nop
and
dec
xchg
xor
push
sbb
dec
push
or
and
dec
call
mov
popf
or
ds
(bad)
fsubr
les
std
sub
addr16
mov
adc
mov
(bad)
inc
sub
test
mov
xor
inc
adc
jnp
test
cmp
dec
add
arpl
and
dec
xchg
xchg
daa
out
or
pusha
lods
and
inc
and
stos
push
lods
mov
lds
or
movs
sbb
daa
adc
adc
lahf
jmp
mov
pop
lock
movs
mov
loope
jp
pop
aad
add
(bad)
jp
dec
xchg
dec
inc
xchg
adc
dec
push
sahf
test
mov
icebp
cmp
pusha
dec
push
mov
and
mov
data16
lock
cmps
xor
aas
cmp
sbb
sub
sbb
sub
pop
or
mov
mov
adc
jmp
loope
mov
je
out
jl
mov
cs
loop
movs
movs
pop
jno
jmp
adc
inc
repnz
pop
lds
mov
dec
pop
mov
std
test
inc
xor
inc
ss
out
lock
lock
push
pop
fdiv
daa
jmp
mul
and
jae
xchg
jg
mov
mov
loopne
stos
aas
scas
dec
inc
bound
sub
out
popf
(bad)
push
cdq
adc
add
push
loope
xchg
xchg
rcr
cmp
mov
jl
xor
sbb
ret
sub
sbb
sbb
sti
call
cmps
movs
mov
cmps
cmp
mov
jg
pop
push
and
cs
retf
enter
push
lea
call
and
push
mov
loope
popf
xchg
sbb
jecxz
into
adc
rol
jg
inc
lods
cmp
inc
mov
pop
loope
fidiv
out
xor
std
jne
xchg
mul
pop
add
nop
add
and
sbb
push
or
lock
or
iret
test
xchg
jb
mov
cmp
jno
popf
and
fnstcw
cwde
or
repnz
stos
inc
xor
(bad)
mov
das
xchg
and
(bad)
mov
pop
add
cmps
xor
stos
sahf
arpl
fwait
sub
xor
sub
cmp
(bad)
mov
and
mov
mov
or
add
cmp
xor
out
push
call
pop
ins
sar
call
sbb
jae
sbb
add
shr
(bad)
movs
add
mov
adc
movs
mov
add
ins
stos
cld
jmp
sub
add
sbb
outs
xchg
pop
ja
int
stos
scas
leave
inc
or
lods
sub
popa
sbb
bound
dec
into
xchg
mov
adc
pop
bound
into
dec
jno
sbb
pop
push
jmp
lods
cmp
data16
ret
push
repz
pop
cmp
cmp
pop
push
fiadd
out
push
pushf
retf
xchg
test
popf
mov
mov
sbb
test
mov
dec
in
aas
in
arpl
mov
and
cwde
dec
fist
xchg
jmp
push
bts
rcr
(bad)
xchg
jg
out
push
ins
xchg
js
xor
sub
xor
dec
or
fadd
xchg
sub
(bad)
lock
push
cmps
es
jmp
sub
loop
cdq
adc
jle
test
inc
mov
mov
div
scas
pop
push
(bad)
dec
sbb
dec
(bad)
pushf
ftst
out
cmps
fwait
jg
xchg
and
mov
jne
xor
sti
adc
jnp
into
mov
sbb
or
mov
inc
pushf
push
aaa
add
cmp
and
xchg
cmp
cli
ins
or
fst
inc
pusha
jo
jle
popa
sub
or
retf
jmp
inc
push
js
adc
dec
push
mov
test
xchg
push
xor
mov
call
dec
ret
mov
lock
gs
cdq
sub
outs
out
and
cmp
xor
mov
add
jno
xor
hlt
xchg
scas
sbb
cli
sar
and
add
adc
(bad)
adc
pop
xchg
mov
out
call
dec
add
lea
(bad)
in
cmps
xchg
not
sar
cmc
sbb
lock
add
fwait
push
popf
mov
xchg
xor
jg
cmc
or
lds
fisttp
pop
call
xlat
sbb
fisttp
ja
push
jbe
test
xstore-rng
cmps
test
xor
or
dec
fimul
ror
push
mov
pop
sub
mov
pop
dec
and
das
xchg
pop
popa
dec
sub
jmp
xchg
mov
mov
adc
pushf
dec
xchg
or
xchg
jns
cwde
mov
ins
(bad)
sub
shl
stc
mov
pushf
add
pop
push
or
xor
popa
fld
or
(bad)
lea
pusha
jmp
mov
or
jnp
mov
cmps
sbb
dec
stos
pop
jecxz
ret
push
shl
sbb
repnz
(bad)
(bad)
cli
fwait
sti
in
adc
icebp
rcl
fsubr
cmp
sub
dec
and
adc
loop
movs
ins
lods
jmp
sub
popa
sub
cwde
stos
xor
(bad)
sub
xchg
shr
xchg
or
lds
imul
and
xor
pop
pop
adc
adc
aam
add
push
sub
adc
push
push
repnz
mov
mov
dec
dec
mov
sbb
mov
xlat
addr16
test
fwait
dec
xchg
stc
ins
or
sbb
push
inc
mov
or
jle
shl
push
mov
retf
or
outs
das
out
dec
fsubr
push
(bad)
add
nop
scas
adc
pop
out
mov
inc
in
ja
dec
xchg
fs
pop
sti
stc
push
add
shl
and
push
or
dec
and
inc
retf
out
mov
pop
imul
dec
mov
cwde
pop
icebp
sbb
in
push
test
retf
jecxz
jge
addr16
out
cmps
add
inc
xlat
sbb
dec
mov
mov
lods
sub
adc
push
pop
imul
test
stos
(bad)
fsub
fild
jge
or
mov
jmp
stos
mov
loopne
sub
icebp
shl
xor
push
mov
bound
lods
xor
xchg
hlt
inc
jg
adc
mov
dec
mov
enter
jae
jae
cld
stc
clc
and
sub
stc
sbb
ret
popa
mov
out
fwait
pop
add
jge
xlat
scas
jmp
dec
loope
gs
call
sbb
aam
aad
popf
mov
cmp
pop
shl
sbb
out
retf
mov
popa
jmp
push
loop
sbb
mov
pop
fstp
pop
cwde
stc
adc
push
hlt
fisttp
jecxz
pop
int
rcr
xchg
push
mov
sbb
je
mov
xchg
and
(bad)
xchg
mov
sbb
push
paddb
xchg
or
ja
sti
xchg
jmp
mov
adc
add
jnp
mov
mov
mov
ficom
cli
jno
jno
xor
les
je
dec
adc
clc
mov
mov
je
das
enter
outs
lods
cmps
mov
test
add
xor
out
fisubr
inc
leave
cmp
mov
jle
pop
out
mov
dec
push
mov
in
xlat
jmp
scas
and
stos
idiv
daa
dec
pop
inc
pusha
loop
or
inc
and
pop
xor
push
or
fidiv
int
fld
cmp
add
js
mov
pop
cmp
mov
inc
push
mov
mov
adc
test
push
adc
fidivr
ja
mov
jns
sub
stos
in
inc
pminub
xchg
fistp
add
adc
std
inc
nop
adc
add
in
pop
icebp
adc
pop
pusha
in
push
xchg
addr16
outs
push
ja
xor
sbb
xlat
inc
or
mov
pop
(bad)
out
mov
xchg
in
pop
lds
jbe
loopne
mov
stos
int
fcmovnb
cmp
cmps
fdiv
std
test
add
ja
ret
call
mov
jmp
imul
cmp
pop
fdiv
mov
shl
sbb
inc
fimul
je
aaa
pop
ret
and
mov
sub
iret
jmp
rcr
cld
mov
movs
sahf
push
jl
fs
call
sub
mov
in
(bad)
sahf
sbb
pusha
dec
popa
add
push
mov
jge
out
rol
sub
fild
xchg
inc
cmp
loopne
fidiv
aad
les
std
inc
clc
std
pop
sti
and
or
(bad)
(bad)
and
data16
inc
lock
jle
stos
inc
and
test
(bad)
sti
loop
add
push
lea
into
jbe
imul
fcmovu
cmp
pushf
test
retf
xchg
pushf
push
xchg
sbb
js
or
out
mov
jo
(bad)
movs
mov
mov
add
int
fdivr
dec
scas
les
or
mov
call
pop
shr
sbb
cmp
mov
js
mov
mov
mov
ja
(bad)
cmp
cmps
pop
pusha
mov
ins
mov
data16
nop
cs
dec
inc
or
jnp
lock
enter
mov
sub
or
ret
iret
push
int3
pushf
sbb
sti
xchg
shl
dec
add
lea
mov
in
push
in
stc
ins
or
retf
push
or
mov
(bad)
lods
add
and
mov
fldenv
mov
cmp
jmp
vmaxss
stc
repnz
inc
jbe
mov
out
push
movs
sbb
inc
push
test
and
mov
dec
add
stos
mov
test
push
int
jne
mov
inc
mov
fdivr
sahf
xchg
fcmove
shr
mov
loopne
ret
pushf
jge
inc
xlat
cli
jmp
pop
and
fst
cmc
jne
dec
not
and
xchg
cmp
js
sbb
fwait
into
pop
push
mov
shr
push
(bad)
ins
sub
rol
hlt
mov
pop
shr
ja
popa
jg
mov
xchg
adc
mov
xor
sti
cmp
fwait
jnp
xor
es
mov
jg
rcl
pop
aaa
(bad)
push
data16
jae
retf
movs
in
pop
adc
aas
or
pop
sub
fimul
mov
or
jge
wbinvd
jp
pop
pop
xchg
lods
add
pop
xor
(bad)
gs
jmp
pop
push
inc
or
in
scas
xor
adc
push
inc
jns
or
into
sub
test
lahf
mov
adc
je
pop
pop
dec
or
adc
jae
not
loope
jecxz
cli
movs
pushf
pop
pop
sub
leave
add
aaa
and
cmp
fild
(bad)
and
cs
push
cmps
mov
scas
jae
frstor
sub
(bad)
or
fwait
iret
enter
loope
fsubr
and
mov
mov
(bad)
ins
adc
inc
dec
jl
mov
div
inc
jp
mov
dec
mov
loopne
pop
ds
or
es
and
push
ins
pop
cmp
int
xor
xchg
shr
das
mov
popa
int
call
fiadd
push
mov
xchg
mov
popf
scas
and
add
cdq
call
sub
pop
mov
lds
xor
cwde
sbb
dec
xor
(bad)
jmp
mov
cmp
push
fs
push
sub
ficom
xor
int
cmps
test
jg
daa
add
xchg
jns
call
push
jnp
movs
adc
daa
adc
cwde
test
(bad)
xlat
sbb
into
push
and
ds
sbb
or
pop
test
dec
mov
add
repz
push
fwait
mov
xor
sbb
cmp
xor
inc
cwde
mov
dec
(bad)
(bad)
inc
xchg
jae
dec
and
xchg
js
movs
fnstenv
push
clc
fxch
test
(bad)
outs
sub
cs
cmp
xchg
in
mov
std
sahf
ss
adc
bnd
cmp
stos
(bad)
std
cmp
gs
call
lock
push
es
jo
mov
xchg
test
mov
test
and
lods
aad
pushf
push
xchg
cmps
fdiv
jnp
add
mov
sub
out
sbb
ja
sub
int3
push
mov
xlat
add
stc
jecxz
out
or
push
push
cmps
mov
push
or
imul
cdq
pop
inc
xchg
pop
int3
jo
stc
in
jnp
popf
mov
outs
stos
mov
push
inc
inc
push
(bad)
jg
rol
daa
mov
xor
mov
pop
mov
sub
mov
inc
fsubr
repz
clc
cdq
in
mov
xchg
mov
packsswb
cs
arpl
lods
arpl
jnp
ror
or
mov
outs
rcl
cli
push
cmp
sbb
imul
in
repnz
mov
pop
jmp
pop
mov
mov
add
sahf
adc
dec
popf
push
adc
xchg
xor
mov
push
outs
js
dec
clc
(bad)
cwde
cmp
push
push
ror
sbb
rcl
xchg
jnp
sbb
jge
je
xor
aaa
push
mov
dec
pop
push
inc
sub
jp
sti
shr
mov
mov
test
das
pop
xor
popa
push
inc
repz
jmp
and
(bad)
out
jmp
repnz
mov
repz
rep
int
pop
pop
mov
icebp
push
sub
add
in
mov
scas
or
scas
hlt
xor
fimul
adc
mov
sbb
fs
mov
int
fwait
(bad)
adc
jge
scas
and
jne
es
das
test
cs
inc
call
aad
movs
ins
je
pop
test
fimul
and
jle
mov
push
xor
adc
pop
arpl
sub
(bad)
sti
xchg
popf
in
and
(bad)
aad
pop
and
pop
mov
mov
out
sub
xchg
mov
xchg
cmp
add
xchg
dec
jle
jnp
repnz
nop
arpl
nop
and
mov
pushf
add
inc
xor
inc
in
addr16
sub
jo
xchg
adc
add
jnp
xchg
test
mov
enter
mov
popf
pop
adc
sahf
into
fdivr
add
push
sbb
inc
pop
dec
imul
dec
push
pusha
test
mov
data16
jnp
mov
ja
ins
outs
or
das
sbb
icebp
or
xlat
xchg
hlt
jno
leave
adc
outs
jno
xchg
movs
cmp
iret
mov
dec
or
xchg
mov
push
jns
cli
add
xchg
stc
xchg
stos
call
ror
cmp
leave
inc
xor
fcmovu
lock
das
cwde
loop
push
clc
sbb
cmp
cli
adc
fist
push
xor
sar
ret
test
cmp
(bad)
adc
rcr
gs
sbb
or
dec
fldenv
in
ss
sbb
out
xor
pusha
jp
fst
xchg
and
cmps
dec
cli
mov
add
jg
cmp
cli
push
sub
nop
inc
pop
push
pop
push
push
popf
rcr
loop
jno
jnp
test
or
sub
sub
movs
(bad)
push
ins
pop
mov
add
mov
mov
push
and
cwde
sbb
retf
stos
fisttp
mov
inc
jge
mov
ja
mov
push
push
ret
fld
pop
cmp
ret
ja
rcl
pop
pop
add
or
cmp
sbb
ja
movs
imul
mov
fbstp
cmps
and
loop
data16
xchg
sar
sub
add
inc
(bad)
in
iret
test
in
std
cmc
pop
xor
pop
pop
cmp
or
or
xchg
int
scas
inc
outs
jl
cwde
jmp
adc
push
push
stos
in
push
inc
rcl
loop
xchg
loope
popf
and
mov
fwait
push
xchg
jns
dec
jne
mov
mov
fs
jmp
mov
mov
or
data16
mov
pop
cli
jle
mov
dec
xor
cmp
xor
xor
fwait
cs
or
push
mul
or
xchg
mov
xor
repz
ret
mov
sbb
loopne
dec
out
mov
(bad)
(bad)
popf
mov
and
icebp
sub
std
imul
jb
stos
aas
and
stos
out
sbb
sbb
mov
out
fwait
lods
sbb
mov
lods
aaa
adc
inc
loop
fimul
mov
js
add
nop
mov
ret
inc
ret
xchg
jnp
mov
inc
cwde
test
(bad)
stc
ret
adc
inc
outs
das
jo
xor
out
out
push
fstp
sbb
pop
cmps
jnp
scas
dec
xor
movs
cmp
mov
jo
mov
mov
dec
inc
push
inc
jmp
add
mov
mov
push
ficomp
dec
shl
pushf
xchg
mov
add
sbb
mov
jb
lods
xchg
xchg
pop
rcl
xchg
(bad)
cwde
jmp
mov
mov
(bad)
int
mov
jnp
adc
ins
test
and
int
loop
mov
push
test
movs
cld
push
cmp
jmp
xrelease
mov
ror
out
lock
push
sbb
lea
psubq
or
pop
adc
xor
pop
inc
jmp
je
data16
fcmove
in
outs
sbb
cld
ins
sub
ins
cs
jg
fldlg2
daa
ficom
pushf
mov
cmp
clc
inc
xchg
jg
pop
mov
stos
pop
stos
stos
fist
pop
pop
or
jo
fcomp
or
xor
in
mov
leave
xor
mov
idiv
imul
adc
xchg
mov
ins
push
scas
and
push
out
and
inc
es
cdq
mov
push
mov
push
jnp
addr16
push
jns
std
out
sbb
xlat
xchg
cmps
jg
mov
push
fldcw
push
xchg
jno
jl
lods
or
ja
(bad)
lds
inc
pop
lods
mov
adc
shr
push
push
dec
in
and
cmps
retf
js
dec
jb
stos
bound
inc
mov
jne
lock
adc
mov
and
es
test
mov
add
adc
mov
xor
xlat
add
jecxz
scas
idiv
xor
mov
jne
dec
or
pop
xchg
fcomp
jnp
jmp
repnz
sub
out
in
dec
xchg
xor
les
int
aaa
jmp
xchg
std
jo
inc
mov
pop
lea
push
cmp
sub
push
ins
movs
push
dec
mov
test
pop
loop
xchg
in
inc
dec
mov
jl
int
sub
pop
and
push
adc
sub
(bad)
sub
dec
lods
(bad)
dec
mov
loope
cmp
mov
cmp
adc
dec
sbb
test
jb
sqrtps
scas
retf
mov
into
mov
test
xor
and
cmp
sub
adc
push
fwait
stc
idiv
outs
fxch
je
das
out
stos
nop
push
and
fwait
outs
or
push
hlt
dec
inc
int
in
loopne
sub
pop
inc
sbb
(bad)
in
mov
sbb
push
sahf
jmp
mov
dec
mov
movs
mov
popf
dec
sbb
loopne
(bad)
add
ret
mov
rol
xchg
les
inc
clc
mov
data16
fucom
lock
push
lods
test
outs
sar
pop
add
xor
lock
or
xchg
adc
shr
push
jecxz
jl
or
cdq
mov
inc
dec
iret
scas
ins
mov
(bad)
mov
div
cs
mov
xchg
xor
mov
nop
ret
cli
iret
cmc
pop
clc
mov
arpl
test
add
sub
ins
mov
mov
or
adc
xchg
jb
test
mov
rcr
into
pop
add
xchg
sub
add
and
test
ret
shr
(bad)
retf
mov
mov
neg
out
loope
int3
xchg
in
cmp
aaa
lea
adc
mov
imul
aaa
stc
out
inc
xor
call
mov
mov
and
xchg
js
jb
cmc
xchg
pop
sbb
(bad)
stc
outs
cmp
or
dec
xor
in
push
fcmovnu
add
lods
jmp
int3
retf
fisttp
les
push
jno
xchg
mov
inc
sub
mov
jae
xlat
xchg
fstp
push
inc
mov
jg
jne
jecxz
idiv
sub
jecxz
std
stos
ret
adc
(bad)
xchg
or
fucom
or
jg
inc
adc
fild
in
mov
push
jnp
push
inc
adc
call
cmp
jae
mov
inc
neg
test
iret
or
xchg
das
mov
fwait
or
pop
xor
adc
push
cld
mov
and
aas
jne
into
jb
xchg
sbb
xchg
adc
in
in
and
mov
cld
dec
lahf
xchg
jg
xor
push
scas
std
xchg
es
mov
sbb
mov
ret
ds
push
pusha
loope
cli
cmps
(bad)
pop
mov
mov
and
int
pop
dec
mov
(bad)
cmp
mov
mov
gs
sub
fistp
xor
sub
cmps
div
and
sbb
shl
sub
push
popa
scas
aas
dec
or
xor
pop
xor
retf
jecxz
sbb
xor
mov
push
je
mov
or
popf
gs
shl
mov
inc
in
or
shl
call
push
aaa
cmp
aaa
or
mov
or
mov
adc
ror
pop
pop
and
jge
fcmovnu
and
dec
sbb
int
sub
adc
jge
call
js
pop
push
push
push
mov
mov
js
pop
jmp
out
sub
pop
sbb
add
dec
pop
jb
xchg
and
jb
mov
mov
out
dec
xor
sub
mov
jb
leave
call
pop
push
sar
inc
xor
cld
rcr
mov
mov
mov
and
pop
push
sbb
test
pop
add
mov
xchg
or
xor
ret
lds
inc
add
and
pop
ror
retf
jl
lahf
pop
in
add
scas
aaa
push
xchg
scas
xchg
xchg
push
mov
mov
aas
ins
dec
in
pushf
clc
inc
shr
xlat
leave
adc
bswap
dec
cmp
cmp
nop
iret
mov
add
push
xchg
pop
fist
lods
push
dec
push
jne
loope
push
ja
call
jge
loopne
fild
push
pop
and
imul
cmp
push
sub
push
icebp
sbb
sbb
dec
dec
inc
push
ds
inc
stc
sbb
int3
ret
fldl2t
xchg
fdiv
mov
xchg
imul
push
mov
(bad)
inc
jmp
retf
push
int
loope
cmp
in
pop
out
popf
sbb
fisttp
and
lea
or
scas
fsub
ja
lods
cmp
in
push
mov
cli
fucomp
pop
rcr
test
cdq
inc
sbb
mov
pop
and
pop
xlat
inc
movs
rcr
call
or
sbb
sbb
cmp
int
push
aam
aad
js
add
mov
push
xor
or
or
fidiv
es
in
stc
in
aaa
cdq
add
sbb
add
std
aas
and
lock
and
xchg
icebp
cld
jl
mov
icebp
vdivss
scas
mov
push
push
lds
dec
pop
dec
push
stc
call
gs
fisub
(bad)
mov
pop
jmp
daa
sub
push
adc
inc
retf
ret
pop
mov
mov
dec
mov
es
cs
rcl
and
sub
pop
pop
mov
or
push
add
ror
xchg
test
cmps
pop
inc
repnz
(bad)
aas
pop
(bad)
ins
aas
sahf
fs
cmps
jle
lock
push
jns
dec
(bad)
iret
ja
inc
sub
test
sbb
xor
xchg
mov
cdq
in
pop
and
xchg
call
cmp
jno
sbb
adc
sub
call
push
jne
xor
xchg
imul
xchg
sbb
mov
sub
mov
add
xor
inc
aas
jb
lods
fs
and
cmp
mov
in
add
stos
mov
lds
test
cmp
test
ret
pop
inc
movs
lea
add
data16
cmps
scas
mov
cmp
dec
jecxz
push
xor
push
sbb
mov
pop
add
inc
jo
das
cwde
addr16
push
das
jnp
cmp
jmp
pop
out
popf
add
mov
xchg
mov
or
aas
push
(bad)
sbb
xchg
out
cwde
dec
stos
fnsave
adc
cdq
lods
fbld
push
in
push
(bad)
jmp
jnp
lds
xor
mov
daa
inc
push
fisub
sahf
jle
adc
jmp
cmps
jo
retf
test
add
mov
scas
jbe
mov
push
sub
ficomp
test
test
leave
xchg
mov
push
(bad)
not
cmp
sub
and
leave
push
cmp
ss
int3
(bad)
add
repz
hlt
stc
xor
add
pop
pop
icebp
mov
push
je
ss
lods
jp
mov
xor
xchg
mov
pop
add
movs
sbb
not
cmc
push
dec
sysenter
in
(bad)
idiv
sub
dec
(bad)
xor
or
scas
inc
or
xchg
xchg
sub
bound
push
into
lods
mov
(bad)
xchg
mov
inc
int
nop
retf
xor
shl
test
push
mov
inc
pop
pop
int3
int3
test
movs
pop
iret
cmp
clc
fs
sbb
ficom
and
xchg
pop
or
mov
idiv
xchg
into
(bad)
push
and
paddsw
xchg
mov
and
sub
inc
xor
inc
ret
ins
iret
sub
sti
pop
push
imul
sub
pusha
sub
fdiv
fbstp
pop
hlt
push
adc
or
repz
or
fisubr
mov
xor
push
jmp
test
mov
pusha
mov
mov
inc
cs
xor
(bad)
mov
mov
cmp
rol
ds
mov
or
lods
push
xor
inc
ret
push
push
fld
jmp
dec
leave
cmp
test
push
fidiv
sub
dec
inc
ins
aaa
or
adc
hlt
data16
aas
mov
daa
or
test
ins
xchg
cmp
mov
mov
mov
inc
add
sti
cmp
(bad)
sub
pop
ins
jmp
pop
mov
dec
add
addr16
ja
adc
loope
and
mov
pop
cmps
hlt
mov
dec
mov
mov
repz
data16
or
sbb
in
fldenv
out
and
xor
fsubr
in
(bad)
lock
fisttp
adc
adc
push
and
mov
cmp
pop
call
push
fmul
fadd
mov
scas
mov
loop
inc
dec
xor
mov
test
rcr
cmp
fcmovnb
(bad)
sub
into
cwde
fcmovne
in
les
ret
sub
push
xchg
pop
ret
inc
imul
icebp
add
push
xor
jmp
and
mov
out
push
inc
adc
out
cmp
in
rol
xor
loop
test
cmp
inc
jge
push
push
sbb
mov
lock
aaa
daa
daa
inc
hlt
cwde
mov
(bad)
sub
jmp
mul
inc
jle
into
out
daa
iret
ins
adc
in
imul
ins
and
ret
cmc
pusha
stc
(bad)
(bad)
fdiv
jbe
dec
gs
das
xor
pop
iret
fdivr
mov
or
sub
mov
jne
popf
or
mov
xor
adc
cmp
xor
push
or
xchg
jb
ret
push
cwde
cwde
mov
mov
adc
or
pop
push
stc
into
fdivr
or
mov
xchg
and
fcom
test
stos
sub
mov
mov
retf
fnsave
pop
aaa
dec
mov
xor
loope
retf
ins
push
lock
sahf
nop
push
and
mov
dec
fsub
cmc
fs
adc
addr16
dec
mov
jp
push
aad
xchg
icebp
loop
cmp
xor
mov
fwait
dec
mov
mov
div
gs
ss
jbe
mov
jno
jns
mov
xchg
jne
mov
push
retf
or
retf
push
loopne
xor
ja
xchg
popa
xor
inc
ror
inc
in
xchg
int3
cli
adc
inc
test
dec
rcr
ds
mov
daa
adc
inc
dec
sti
mov
lea
dec
adc
xor
inc
es
lods
mov
mov
sti
jmp
clc
in
push
imul
cld
lea
jne
je
lods
jle
ror
std
jno
add
add
cmps
jne
cmp
aaa
jno
sti
jno
jbe
in
jle
pusha
add
ffreep
popa
add
icebp
repz
jbe
xor
arpl
jg
not
ror
idiv
mov
or
cmp
and
inc
pop
xchg
int
mov
push
push
mov
clc
mov
xor
xor
or
stc
mov
pop
hlt
adc
call
xchg
fcom
push
cli
setno
in
cdq
daa
and
jns
ret
xchg
cmp
cmp
jb
pusha
push
int
imul
push
jno
xor
pop
mov
enter
add
pop
loope
push
or
cmc
inc
and
mov
mov
enter
sbb
cmps
mov
int3
and
jo
ret
mov
xor
xchg
loopne
mov
mov
or
xchg
jmp
movs
lahf
jno
inc
aaa
sar
jae
mov
in
scas
sbb
cmp
or
dec
imul
xor
push
mov
jg
cmp
and
cmps
clc
fst
xchg
sub
psraw
(bad)
fist
shr
xlat
inc
je
cdq
push
cmp
cdq
push
jbe
shl
xchg
or
mov
add
into
xor
sub
(bad)
mov
inc
cmp
xchg
(bad)
inc
fbld
cmp
stos
leave
fisub
test
ds
jge
add
or
inc
jae
pop
call
pop
fcmovbe
sahf
jbe
mov
(bad)
cdq
xchg
popa
xchg
fs
xor
pop
(bad)
cmp
xchg
fwait
xlat
loope
fist
cdq
mov
rcr
aaa
and
int
mov
out
mov
push
pop
push
mov
(bad)
imul
leave
(bad)
mov
fdivr
adc
and
and
mov
and
pop
popa
mov
lods
daa
ss
ret
xchg
outs
mov
xchg
fadd
das
mov
or
enter
xchg
mov
shr
sub
sbb
and
inc
inc
dec
mov
comiss
mov
imul
pop
out
adc
xchg
stc
pushf
inc
fild
loop
xlat
xor
fdivr
inc
inc
out
push
ss
leave
fwait
js
cwde
icebp
rol
(bad)
pushf
mov
cdq
cmp
xor
mov
(bad)
stc
adc
sub
out
call
aas
push
ret
jb
leave
sbb
sub
rcr
daa
leave
xor
mov
sbb
push
mov
rcr
or
rol
add
movs
add
movs
ret
dec
xchg
ret
inc
in
imul
les
pop
outs
dec
hlt
adc
pop
nop
mov
enter
outs
and
test
(bad)
pop
fs
scas
xchg
jle
inc
lock
clc
mov
inc
mov
out
dec
fistp
imul
add
mov
cdq
push
jns
movs
mov
mov
clc
adc
mov
addr16
movs
sub
(bad)
(bad)
xor
rcr
jnp
mov
mov
jecxz
rcr
mov
sub
jae
mov
sbb
jg
frstor
mov
or
in
sbb
lods
repz
iret
fild
xchg
out
aad
dec
pop
inc
adc
inc
dec
mov
psrlq
pushf
cmp
and
jnp
or
cwde
sub
inc
jmp
xchg
lahf
aaa
mov
push
cdq
fld
push
vmaxsd
push
psrad
ins
push
cmp
push
popf
xor
sub
rcl
cmp
(bad)
imul
cmp
call
test
leave
dec
inc
xor
pop
pusha
and
in
pop
repz
inc
out
cli
mov
jno
cmps
sub
(bad)
int
mov
jl
pop
fwait
jg
ins
jg
jne
test
and
mov
rol
or
dec
cmp
arpl
fisub
mov
xadd
xor
sti
out
jae
mov
jmp
subps
xchg
jns
and
or
aaa
inc
imul
(bad)
xor
loop
add
xor
pop
test
adc
jmp
call
cmp
sub
push
pop
dec
xchg
cmp
xchg
or
shl
add
add
cdq
stos
test
call
pop
jmp
test
aad
cmp
cmp
retf
mov
xchg
imul
in
hlt
and
inc
iret
pushf
(bad)
ins
retf
lods
dec
mov
mov
std
ds
pop
fisubr
iret
mov
sbb
stc
sbb
xlat
in
adc
fbld
cmc
xchg
hlt
enter
ja
push
jmp
mov
std
jge
mov
iret
pop
push
aaa
aaa
shld
test
repnz
or
and
lds
or
pusha
mov
xor
or
add
add
cmps
push
dec
sbb
jl
(bad)
xchg
xchg
inc
ret
mov
loop
xor
cmp
push
call
sub
retf
inc
je
xchg
push
fstp
ja
push
push
mov
popa
ror
dec
mov
inc
and
xchg
stos
xchg
cld
iret
jne
jo
xchg
lock
push
enter
cmp
dec
xchg
js
and
xchg
outs
ja
mov
sub
cmp
mov
dec
retf
push
mov
out
mov
out
clc
jle
out
es
push
adc
mov
or
out
sti
mov
jle
or
pushf
test
rol
(bad)
xlat
cmp
xchg
jns
bound
jge
ins
and
sbb
sub
push
cld
pop
sbb
adc
arpl
fmul
dec
out
mov
sti
cmps
mov
mov
out
mov
std
jns
sbb
or
pop
xchg
retf
sar
inc
sbb
sti
call
in
outs
outs
in
add
outs
js
mov
pusha
fnstsw
in
push
jb
mov
push
push
mov
div
push
(bad)
jecxz
ret
push
sar
cmp
fmul
dec
out
and
test
xor
jae
fild
outs
mov
dec
(bad)
jecxz
jae
out
sbb
push
push
dec
xchg
adc
in
iret
pop
ss
or
es
jae
ds
mov
stos
pop
cmp
mov
cmps
mov
mov
ret
dec
push
dec
adc
cld
gs
dec
jmp
fisttp
addr16
pop
adc
jno
adc
push
shl
mov
jmp
leave
popa
jno
adc
mov
mov
mov
addr16
jbe
xor
(bad)
iret
cmp
repnz
mov
add
push
daa
in
push
mov
push
loop
or
dec
fwait
jg
sbb
rcl
cmps
mov
dec
jno
(bad)
mov
fwait
outs
mov
imul
not
and
jb
and
jb
or
shr
outs
xchg
loop
pop
test
lahf
pop
dec
push
pop
sbb
push
leave
fild
mov
sub
mov
scas
pop
out
dec
mov
rcr
adc
cmp
(bad)
push
pop
mov
mov
xchg
repnz
out
pop
mov
sar
dec
add
inc
mul
inc
cli
loopne
push
sbb
xchg
stos
sbb
or
cmps
test
dec
mov
mov
leave
js
jbe
aas
adc
bnd
push
inc
mov
cmp
jne
hlt
leave
arpl
mov
data16
stos
ss
(bad)
xor
pop
icebp
rol
outs
mov
mov
mov
jmp
add
aam
cmp
xlat
(bad)
pushf
fcomp
cld
inc
scas
mov
loopne
mov
scas
push
add
sub
out
(bad)
mov
xchg
stos
nop
and
je
popf
xor
mov
or
jnp
cli
sbb
and
loopne
sub
(bad)
xchg
sbb
or
and
push
in
sti
popf
out
out
push
or
add
mov
sub
out
pop
push
popf
inc
cld
fidiv
loope
sub
sbb
call
and
idiv
or
loope
retf
fidiv
(bad)
xchg
sbb
(bad)
jp
and
pop
xchg
ja
loope
jb
jbe
pushw
pop
xchg
fild
stc
ins
pop
push
or
enter
push
and
jb
xor
and
jo
sar
xchg
fsub
pop
scas
or
push
repnz
loop
div
test
rol
inc
sub
jmp
dec
inc
(bad)
out
in
push
lods
sub
std
cmp
pop
add
fistp
cmps
jbe
addr16
lock
mov
jmp
aaa
jne
es
fs
lds
iret
mov
mov
leave
sbb
adc
mov
leave
xchg
sub
or
sub
sti
in
mov
add
stos
fmul
jne
or
mov
stos
out
shl
jns
jge
das
gs
adc
and
xor
jno
cmps
xchg
popa
sbb
int
mov
and
xor
or
call
xor
jae
retf
hlt
pop
push
add
inc
mov
dec
shrd
mov
test
mov
cmp
sar
sbb
in
repnz
jns
jae
xchg
mov
data16
dec
jge
out
dec
sub
add
je
ret
outs
pop
imul
pushf
lahf
cmps
push
stos
or
sti
adc
mov
pushf
in
imul
mov
movs
jne
inc
cs
aad
fs
and
mov
xor
cmc
jns
mov
sub
sub
fisubr
or
mov
icebp
shr
test
xchg
inc
div
jns
lods
adc
dec
mov
jp
push
xor
adc
jae
or
inc
mov
cmp
rcr
dec
jle
or
jmp
inc
sbb
inc
(bad)
sub
push
hlt
cmc
add
mov
push
sub
and
in
mov
cmp
stos
push
cdq
inc
dec
and
mov
mov
ror
mov
adc
dec
gs
dec
ins
cmp
xor
dec
cli
add
ds
add
push
(bad)
xchg
jecxz
mov
push
js
iret
or
jbe
jo
and
and
adc
xchg
fdivrp
pop
dec
mov
sbb
sbb
add
outs
push
xor
mov
(bad)
cmp
inc
fisub
push
jecxz
in
aam
pusha
mov
push
cmp
cmps
mov
es
repnz
dec
movs
es
outs
mov
icebp
mov
mov
inc
enter
cs
push
rcr
cmp
jmp
mov
xchg
mov
std
xchg
inc
mov
add
loopne
pop
push
xchg
sub
fscale
fisub
jecxz
nop
sbb
jl
inc
movs
cmp
add
xchg
cs
dec
leave
std
sbb
push
jmp
dec
retf
push
xor
jmp
les
inc
fisttp
mov
sub
cmp
pop
dec
mov
cmps
repnz
popa
inc
movs
cli
mov
imul
mov
sbb
fs
aad
mov
push
retf
pop
sub
loope
es
push
repz
pop
les
cmp
sbb
fdiv
cli
xor
sub
shr
in
xor
stos
add
rcl
mov
sub
sbb
mov
inc
sti
sub
fisub
jg
cmp
lods
idiv
dec
and
imul
push
push
(bad)
cld
ficomp
fld
adc
in
inc
clc
jnp
imul
jae
aam
sub
outs
jge
repnz
cmp
imul
pextrw
mov
mov
fild
and
cmp
push
xor
(bad)
aam
sub
pop
inc
adc
fwait
jp
mov
dec
inc
inc
jnp
adc
(bad)
sub
xor
lods
mov
lds
aas
repnz
mov
lock
xchg
retf
sub
adc
ret
rcl
in
in
add
mov
sysenter
in
pop
or
popa
rcl
outs
ins
popf
dec
(bad)
test
das
cmp
mov
jb
cmps
and
jb
adc
ss
out
scas
xor
fsub
pop
xor
and
aas
mov
mov
les
jo
mov
rcr
fdiv
and
push
sub
int3
inc
sub
dec
adc
and
fild
inc
and
jecxz
pop
stc
pop
cmp
or
loopne
int
cld
pop
fst
sti
in
aam
lods
call
pop
and
cdq
lods
pop
jmp
mov
adc
test
fld
sbb
jecxz
push
daa
jp
jno
mov
pusha
loope
(bad)
xchg
add
adc
test
das
mov
sahf
cmp
cdq
add
sbb
xor
or
loop
arpl
je
daa
je
jp
sbb
pop
pop
inc
mov
pop
mov
mov
sbb
sbb
xchg
jns
div
sub
xlat
cmp
ret
xchg
sbb
jecxz
xchg
and
fcmovnu
sahf
sbb
clc
test
mov
push
xor
mov
aaa
test
mov
mov
jl
(bad)
in
pop
jb
cld
hlt
add
jg
sub
xchg
ins
xlat
scas
jns
loop
inc
mov
sub
in
push
adc
inc
mov
jmp
cmp
hlt
neg
sub
adc
sub
lock
jge
push
in
loopne
jnp
adc
in
(bad)
mov
add
lds
mov
sbb
test
std
repz
sbb
push
imul
les
push
outs
pop
mov
fwait
inc
fldenv
xchg
mov
cld
cmp
ret
inc
mov
movs
dec
cmp
xchg
adc
jecxz
xchg
add
xchg
adc
sbb
ror
aas
cmovge
mov
mov
mov
ror
add
out
inc
mov
add
mov
mov
jle
xor
fwait
pop
and
cmp
mov
mov
add
out
sub
cmp
adc
push
loopne
mov
jbe
test
pop
or
push
push
ficomp
sub
jmp
addr16
jne
outs
jnp
call
jns
(bad)
es
sahf
clc
lahf
(bad)
daa
add
or
inc
add
pop
(bad)
jmp
pop
mul
push
push
adc
jecxz
mov
push
mov
sbb
out
aas
jb
loopne
and
ret
into
loopne
or
cwde
xchg
mov
test
aam
clc
mov
or
cmp
(bad)
fcmovne
lds
xor
and
lea
mov
fwait
dec
inc
xlat
sub
imul
adc
mov
mov
xor
fstp
push
pop
call
(bad)
lock
and
loopne
adc
pop
mov
nop
jo
in
mov
mov
or
imul
loopne
outs
and
push
and
inc
aaa
sbb
and
xlat
push
jbe
xchg
sar
xchg
nop
and
in
movs
aaa
mov
ins
cmp
jmp
pop
pop
mov
in
movs
add
pop
mov
mov
cmps
adc
jp
push
mov
imul
inc
cs
cmp
inc
dec
mov
cs
fwait
push
pop
stos
mov
pop
push
ins
data16
mov
fcomp
jo
push
addr16
aam
sbb
jns
scas
repz
push
cli
aaa
or
sbb
mov
or
jnp
rcl
nop
fyl2x
inc
enter
or
mov
jp
neg
fnstcw
fcom
lods
sub
test
loopne
dec
pop
xchg
call
jmp
cmps
stc
xor
les
inc
and
push
nop
cwde
leave
push
mov
retf
push
fdiv
in
mov
fstp
pop
jecxz
cmp
pop
js
push
outs
pop
dec
push
loopne
mov
fcom
movs
fstp
rcr
mov
push
js
out
fld
jmp
ds
int
adc
fidivr
mov
mov
pop
adc
xlat
sar
stos
shl
mov
lahf
jmp
mov
add
sbb
or
movs
outs
mov
stc
out
out
ja
lods
lea
mov
add
loopne
repz
push
aad
leave
jecxz
fs
test
mov
jp
mov
call
xchg
xchg
jmp
retf
adc
cmps
add
stc
mov
push
fld
(bad)
ficom
xor
imul
sti
stos
iret
sub
out
mov
bound
stos
adc
cmp
push
dec
jo
scas
jo
cs
stos
xchg
(bad)
jno
ret
fsubrp
and
hlt
jae
mov
sar
add
sub
and
(bad)
(bad)
pop
pop
or
lods
je
sbb
fisttp
inc
sub
or
adc
int3
retf
xor
push
dec
adc
movs
dec
hlt
(bad)
inc
shl
dec
adc
dec
rcl
jnp
shl
mov
rol
daa
jne
mov
mov
jbe
out
in
pop
test
pop
aam
je
dec
out
add
loopne
clc
pop
mov
dec
js
add
push
in
mov
mov
scas
jnp
dec
cwde
jne
in
and
(bad)
jp
mov
imul
lods
xchg
repnz
addr16
pop
jmp
shr
inc
stos
adc
jmp
iret
neg
mov
in
or
sub
xor
ins
nop
into
lods
and
add
jl
sbb
rol
ret
mov
dec
in
sub
sti
ins
and
ins
aad
test
dec
cdq
bound
xor
xor
jmp
cmp
mov
mov
cdq
loopne
and
retf
xor
push
fwait
stos
xchg
retf
and
inc
adc
inc
ret
mov
xor
pop
int
and
(bad)
jns
ja
sti
adc
cmp
call
(bad)
jl
cmps
mov
jb
pop
cli
ror
pop
es
add
push
push
push
push
out
aad
aam
jg
js
nop
pop
cdq
sbb
mov
aad
dec
dec
sbb
stos
pop
pop
sbb
ja
cs
mov
arpl
or
fcom
test
imul
xchg
stos
enter
jbe
lock
nop
xchg
mov
sub
dec
cli
out
sbb
jg
push
xchg
shl
jmp
das
rcr
cmp
das
arpl
xor
xchg
shr
(bad)
pop
pop
jecxz
jo
mov
mov
push
fucomp
pop
call
cdq
add
sti
cmp
or
fiadd
xlat
push
ins
iret
or
cli
mov
hlt
cmp
inc
fst
test
sub
pop
xor
adc
push
push
pop
xchg
mov
dec
stos
xor
push
ins
and
or
idiv
cwde
pusha
cmp
aad
int
xchg
mov
stc
push
adc
movs
pop
add
xchg
repnz
std
jge
inc
dec
inc
xchg
sbb
jo
jp
dec
fwait
and
push
std
cmps
mov
lods
jmp
sbb
mov
inc
dec
cld
pop
xlat
sub
xor
xchg
add
cmp
mov
ins
sub
mov
mov
mov
sbb
pop
adc
je
test
cli
jnp
pop
out
adc
call
cld
adc
imul
pusha
cs
cmps
cmp
rol
mov
in
lahf
aas
jmp
jmp
int3
cdq
aad
adc
pop
jle
shr
das
mov
xor
push
leave
xor
test
inc
dec
div
fild
arpl
leave
jmp
cmp
push
inc
adc
or
mov
mov
xchg
call
test
or
call
aam
pop
test
or
jmp
mov
xlat
mov
xor
push
xor
aam
xor
ror
sbb
jmp
or
xor
fist
cmp
psrlq
cld
cmc
pop
dec
mov
int3
and
repnz
jmp
xor
adc
in
repnz
mov
pop
mov
popa
xor
jno
mov
sbb
daa
cmp
dec
loope
in
clc
sahf
repz
or
push
push
jb
xchg
test
ja
xor
out
xchg
pop
fimul
(bad)
dec
out
loope
scas
sub
jle
stos
mov
pop
adc
das
inc
adc
push
not
(bad)
mov
sahf
js
push
push
movs
aad
xor
or
dec
icebp
sbb
xor
cmp
shl
mov
in
pop
mov
sbb
lock
repnz
mov
sub
and
arpl
(bad)
mov
test
shl
(bad)
loopne
pop
mov
pop
sub
lods
sbb
cld
xor
out
sub
ss
aad
adc
ds
into
adc
movs
inc
sub
cmp
lds
lds
arpl
in
cmp
jg
fild
cs
xor
test
aas
(bad)
xchg
jne
jmp
mov
lea
in
in
lods
jmp
sub
and
div
adc
adc
and
adc
mov
push
mov
mov
nop
ficomp
pop
loop
test
fsubr
ret
movs
push
scas
cmp
xchg
push
or
jbe
(bad)
ja
mov
xor
out
ins
ins
stos
bound
or
push
mov
int3
push
dec
jno
cmps
int
add
jb
mov
or
jne
movs
and
and
dec
imul
inc
mov
dec
mov
inc
into
in
fs
repz
add
push
imul
or
cmp
push
fadd
mov
cmp
pop
jl
push
enter
cmp
in
int3
lea
call
dec
outs
lea
shl
fimul
adc
jb
jmp
jmp
jmp
pop
mov
or
push
jl
pop
jmp
loopne
adc
xor
push
arpl
push
(bad)
iret
inc
lock
call
mov
adc
test
cmc
stos
adc
jb
mov
push
pop
push
outs
leave
icebp
(bad)
jns
xchg
loope
jae
inc
inc
imul
mov
mov
xchg
in
(bad)
test
sbb
repnz
(bad)
sbb
push
adc
adc
push
mov
or
enter
movs
or
pop
jl
daa
aaa
mov
stos
fidivr
mov
sub
jno
test
mov
rcl
mov
les
sbb
pop
or
sub
clc
fist
fdivr
rcr
and
dec
jnp
daa
out
push
clc
stos
arpl
inc
mov
aam
imul
cmp
idiv
lock
pop
push
cli
js
inc
cmps
cld
mul
adc
scas
lods
call
or
(bad)
les
cmp
in
ins
inc
sub
ins
xlat
ss
das
jmp
outs
clc
add
push
lea
xor
sbb
pop
mov
popa
and
dec
push
int3
ins
mov
nop
or
je
fadd
fist
je
ret
sahf
add
into
(bad)
pop
add
es
or
cmp
jmp
pop
es
(bad)
test
aaa
gs
mov
add
int
and
push
add
inc
lds
and
mov
mov
sar
mov
and
mov
inc
repz
nop
sbb
cmp
push
dec
in
in
dec
out
shr
push
cdq
stc
jbe
xor
mov
and
push
add
mov
sub
arpl
or
out
inc
fisubr
ss
imul
shr
movs
retf
adc
(bad)
fs
mov
frstor
and
push
ds
sti
data16
cmp
(bad)
cmp
cs
stos
sbb
inc
fwait
dec
les
inc
cmp
mov
xchg
mov
fs
repz
popf
stc
inc
fisubr
jnp
push
pshufw
cmp
xor
test
pop
mov
cmp
mov
push
mov
jns
jmp
cmp
cmps
or
js
xchg
pusha
dec
mov
mov
push
push
in
mul
pop
push
aad
loop
jg
push
imul
mov
mov
std
adc
sbb
into
add
pop
push
aas
xor
scas
stc
or
adc
jge
add
add
in
xchg
xchg
outs
iret
clc
cmc
mov
xor
mov
fdivr
ins
pop
jge
pushf
or
push
dec
movs
mov
in
rol
cmp
cwde
lds
ret
mov
xchg
fiadd
and
scas
add
push
or
add
popf
mov
add
cmp
daa
(bad)
mov
adc
leave
dec
test
ins
das
adc
cmp
mov
pusha
jmp
cdq
(bad)
imul
test
sub
fs
dec
fnstenv
cmp
gs
outs
in
les
sub
idiv
and
sub
mov
icebp
jl
sbb
dec
add
add
mov
in
in
push
adc
enter
sub
ja
xchg
jmp
sbb
ja
mov
ins
dec
ficomp
jmp
ret
sub
scas
pop
push
sub
lds
inc
xchg
mov
test
call
mov
lahf
xor
sbb
cmp
cmp
dec
lahf
push
push
gs
aas
jo
stos
outs
dec
(bad)
mov
push
jb
sub
into
mov
je
jae
cmp
and
inc
push
ins
mov
dec
inc
pop
adc
and
inc
ret
jmp
call
xchg
loope
jl
and
fwait
into
mov
inc
pop
adc
inc
and
sbb
push
(bad)
mov
(bad)
scas
sbb
push
push
cld
xor
push
and
push
xor
pushf
cld
and
adc
push
mov
pop
inc
add
jb
push
pop
cmps
data16
(bad)
push
cmps
xchg
loopne
inc
movs
add
adc
out
(bad)
hlt
sti
aad
call
les
in
mov
dec
xchg
call
mov
pop
fwait
xor
ins
int3
dec
aas
bound
or
or
int3
pop
pushf
rcl
loopne
imul
(bad)
sub
pop
inc
add
push
stc
or
leave
add
cs
mov
int3
mov
add
pop
cmp
or
sub
shl
imul
int
pop
scas
push
xor
bound
xor
adc
sub
dec
cmp
push
bound
dec
xchg
or
ja
add
pop
xchg
seta
cmps
adc
dec
cmp
mov
adc
pop
add
les
out
mov
jp
aas
retf
ret
or
stc
fimul
popf
pop
mov
dec
sub
inc
ret
hlt
jbe
push
data16
push
pop
jl
popa
or
nop
outs
ja
cmp
inc
xchg
sar
je
gs
mov
mov
test
and
mov
stos
sbb
fsubr
pop
in
outs
dec
fist
cld
mov
pop
inc
pop
sbb
adc
add
jp
xlat
xlat
mov
loopne
out
sub
rcl
mov
add
fwait
and
and
pusha
fcomp
fisubr
and
sub
pop
aam
xor
in
pop
or
mov
out
mov
push
push
mov
add
mov
movs
fimul
cmp
stc
and
dec
mov
nop
push
adc
xor
mov
and
fst
xchg
sbb
ret
out
lds
pusha
push
dec
jl
xchg
inc
les
ds
inc
dec
inc
out
jns
adc
stos
popf
out
adc
sbb
xchg
or
and
cmp
xor
ficomp
push
or
inc
fmul
ret
fstp
sub
adc
mov
lock
sbb
pop
fidiv
sub
std
imul
dec
adc
and
in
lea
or
mov
lods
lahf
cmp
lds
(bad)
push
sbb
pop
je
jns
xlat
test
lods
ins
add
aas
add
(bad)
xor
xor
xchg
inc
es
jne
sub
loopne
mov
fild
cmp
or
repz
xor
pop
push
dec
unpckhps
outs
mov
push
daa
(bad)
out
into
adc
lods
inc
icebp
pop
retf
bound
fld
fmul
pop
(bad)
addr16
hlt
fist
jne
push
xchg
addr16
adc
fist
fcom
fst
cli
loopne
div
cmp
sub
fimul
pop
sar
dec
js
cs
xlat
cmp
dec
gs
cmc
nop
outs
fdiv
dec
aad
add
test
sbb
loope
fwait
add
push
cmp
pop
jae
jbe
ficomp
ror
add
aaa
cmp
aas
lods
mov
popf
in
in
mov
popf
repz
call
mov
ret
jb
push
fmul
test
inc
or
pop
push
xchg
imul
out
leave
ret
jl
jmp
aam
or
dec
add
or
push
in
pop
enter
lds
daa
xor
test
cmps
stc
mov
dec
outs
int
jg
or
sbb
daa
(bad)
es
ror
and
ja
and
rcr
dec
not
push
fidivr
jns
mov
pusha
fist
cmps
or
adc
push
and
jl
or
cs
outs
bound
(bad)
stc
sbb
fdiv
inc
(bad)
std
mov
daa
xor
xor
sti
ja
pusha
cli
adc
(bad)
aam
xor
pop
jmp
and
mov
add
mov
hlt
or
in
xchg
aaa
and
dec
sub
repnz
pop
push
pop
mov
sbb
or
push
dec
pop
sbb
mov
bound
sbb
dec
add
cmp
mul
sub
mov
add
js
clc
xchg
daa
popf
xor
(bad)
leave
fs
adc
pop
fstp
mov
call
or
jmp
mov
or
jp
je
imul
mov
inc
inc
push
jae
ja
pop
push
outs
mov
(bad)
jb
lods
xchg
fidivr
xchg
or
repnz
out
jae
mov
push
arpl
sub
xchg
fild
sahf
cmps
mov
std
test
lds
mov
call
lahf
mov
aad
add
cmp
cmc
xchg
mov
ss
mov
stos
outs
js
cld
(bad)
in
imul
enter
pop
sub
mov
aaa
xor
add
xchg
and
xchg
mov
test
adc
cmp
pop
or
jnp
inc
into
mov
mov
test
rol
push
xchg
scas
jns
pop
sbb
leave
mov
stc
jl
or
inc
test
jp
jmp
xor
aaa
and
push
xchg
pushf
fldcw
je
and
je
iret
or
mov
dec
pop
pop
inc
xchg
out
cdq
mov
adc
jp
lock
cld
jbe
out
xor
shr
stos
pop
sbb
js
icebp
adc
jne
mov
xor
pop
pop
adc
mov
daa
sti
mov
out
fcom
push
gs
xchg
xlat
and
xchg
mov
inc
imul
xchg
sti
mov
aas
fs
adc
dec
in
ret
fsubr
pushf
loop
sub
or
xchg
mov
mov
aaa
popf
scas
jne
aaa
je
ret
cld
jg
or
xor
jb
jp
or
(bad)
jl
mov
inc
shl
cmp
aad
and
jmp
lods
push
es
jo
neg
cwde
mov
mov
cdq
mov
icebp
aam
cmp
fwait
push
shl
scas
mov
jmp
test
arpl
jmp
aas
pushf
jns
je
mov
mov
xchg
sti
test
popf
mov
push
cmp
repz
xor
add
push
adc
ins
mov
jno
add
cli
mov
arpl
push
dec
mov
sub
lods
inc
cmps
leave
(bad)
cwde
xchg
xor
sar
call
cmp
mov
jns
hlt
repz
hlt
inc
int3
and
fmul
xchg
lea
addr16
jl
fwait
mov
int
jns
loope
aam
bnd
jne
pop
cwde
jecxz
pop
and
add
sbb
sub
ins
lds
mov
pop
xchg
mov
mov
or
loopne
fnsave
test
and
mov
pop
dec
mov
ins
or
jnp
pop
pop
dec
push
mov
jecxz
lods
lds
js
enter
inc
ss
stos
cli
into
ins
push
shl
inc
inc
jge
aaa
mov
jb
shr
xchg
fstp
dec
mov
fs
scas
add
mov
xor
test
fs
sub
cmps
mov
mov
inc
fst
hlt
xchg
arpl
popa
les
xchg
les
xor
scas
into
xor
mov
pop
mov
xchg
cmc
sbb
pop
(bad)
aam
(bad)
mov
pop
sbb
lahf
cli
adc
ins
fisub
les
mov
mov
jne
fsub
shl
push
pushf
in
and
pop
sub
xchg
addr16
sbb
xor
cmp
sub
adc
push
icebp
stc
adc
pop
rcr
or
(bad)
repnz
(bad)
call
dec
mov
mov
or
inc
inc
jbe
in
test
add
push
dec
sbb
jecxz
in
sub
clc
pop
pop
daa
call
retf
fmul
and
add
dec
sti
imul
mov
ins
jno
jle
out
enter
push
shr
or
nop
pop
mov
cmp
outs
test
sti
and
call
in
loop
test
pop
add
int
pop
xor
xchg
jnp
stc
add
retf
dec
xchg
push
sbb
inc
push
inc
sub
add
(bad)
fdiv
sahf
(bad)
inc
pop
jg
je
pop
fwait
pop
xor
jge
fptan
xchg
clc
inc
outs
inc
in
dec
cmc
popf
mov
pop
jp
hlt
in
fistp
not
in
mov
xor
je
enter
(bad)
pop
mov
pop
jne
out
sub
and
bound
cs
fisubr
sbb
ja
dec
iret
movs
adc
mov
xchg
xchg
repz
sbb
and
popf
dec
nop/reserved
jmp
cli
cdq
and
scas
adc
or
sbb
add
je
jmp
in
jmp
call
sti
iret
ficomp
fsub
or
sbb
aad
mov
not
cmp
repz
jle
push
idiv
inc
addr16
leave
xchg
cwde
ja
gs
fild
out
cmp
lahf
inc
add
mov
out
inc
std
test
push
and
jecxz
out
popa
les
rcr
or
repz
jae
sti
retf
pop
mov
arpl
add
arpl
movs
sti
jp
push
sbb
adc
fadd
sbb
scas
inc
adc
je
jmp
cmps
and
push
adc
add
push
jne
push
out
fisttp
mov
sbb
mov
push
stc
cmp
into
es
pop
push
dec
ficom
imul
mov
test
ret
mov
icebp
jnp
sub
cwde
into
int3
retf
(bad)
jns
dec
aad
jg
imul
cmp
pop
rcr
inc
int3
cli
mov
xchg
mov
sub
cwde
and
dec
lods
not
daa
add
je
fnstenv
pop
pop
dec
outs
jno
cld
lds
dec
scas
jns
xchg
xor
addr16
push
imul
pushf
in
push
mov
dec
fmul
push
nop
sbb
dec
xor
adc
mov
ins
mov
rcr
popf
mov
retf
jmp
sti
push
add
lods
retf
std
(bad)
cmp
call
bound
nop
popf
ret
outs
push
shr
pop
lds
xchg
mov
jns
mov
or
mov
dec
je
loop
and
ja
mov
inc
push
mov
add
xchg
not
mov
(bad)
xchg
jge
sub
jo
pop
and
push
sbb
push
hlt
dec
in
dec
inc
jbe
call
in
repz
jmp
test
inc
or
stos
add
pop
pop
lods
int3
stc
nop
ficom
inc
retf
sub
aad
mov
iret
cli
lods
loop
sbb
stos
sbb
or
pusha
fadd
fwait
xchg
(bad)
lods
or
push
xor
int
xchg
aad
push
sbb
in
dec
inc
xor
fidiv
fiadd
cmp
dec
cmp
fdivrp
jbe
int
mov
pop
mov
retf
and
mov
push
mov
push
adc
add
sbb
add
sbb
and
pop
or
or
push
mov
arpl
and
das
jp
in
or
sbb
mov
out
mov
sub
sub
ds
repz
mov
(bad)
stc
cmp
mov
fcmovu
es
(bad)
scas
jb
jnp
push
mov
leave
lahf
jb
js
retf
xchg
(bad)
sti
jo
push
or
loopne
nop
(bad)
movs
sub
cdq
add
xchg
or
pop
cli
(bad)
and
or
dec
call
pop
mov
or
cmp
mov
mov
pop
pop
push
fstp
xor
pop
pop
outs
shr
ins
mov
mov
je
and
aam
scas
out
mov
sbb
push
shr
mov
mov
pop
and
out
out
sbb
mov
and
fld
or
xchg
fwait
add
inc
mul
sahf
aam
inc
dec
ds
jno
(bad)
lahf
inc
data16
pop
cmp
(bad)
popa
mov
sbb
out
test
retf
into
jmp
inc
pusha
test
jl
xor
add
mov
adc
sbb
cmp
arpl
xchg
mov
sbb
imul
mov
dec
mov
bound
mov
(bad)
movs
xor
xor
cmp
push
xor
cdq
outs
add
xor
je
push
nop
push
mov
pop
dec
sar
sbb
inc
call
sub
sub
mov
mov
test
clc
push
xor
leave
jbe
xor
test
jmp
inc
add
jl
add
and
daa
sar
jnp
and
out
mov
lods
das
lahf
and
lods
pop
leave
pop
mov
sbb
jno
imul
(bad)
ss
call
pop
or
jnp
scas
imul
(bad)
add
xchg
cmp
pop
aas
es
xor
shl
xlat
jle
xor
jne
dec
aad
jmp
xor
out
mov
mov
add
mov
adc
cmps
retf
xor
mov
dec
push
gs
jb
adc
lods
(bad)
(bad)
fisub
retf
or
dec
leave
enter
inc
imul
call
add
adc
bound
loopne
fs
cvttps2pi
(bad)
lods
jl
adc
in
pop
or
cli
and
inc
shr
cs
jbe
into
out
outs
cmp
or
dec
and
jbe
sar
neg
jmp
cmp
xchg
cld
out
sbb
out
lahf
jecxz
adc
cdq
ret
mov
ins
mov
xor
fdivrp
jg
jo
loopne
das
dec
push
pop
and
cmps
adc
jnp
ret
test
jnp
retf
ror
jo
retf
call
xchg
repnz
dec
sub
mov
xlat
jle
sbb
inc
mov
sub
scas
cmp
ss
mov
mov
dec
or
cmp
dec
add
xchg
xor
mov
or
and
test
mov
ret
inc
repz
pop
push
test
test
out
(bad)
mov
out
push
xor
xor
adc
jnp
dec
jo
rcr
sub
mov
mov
stos
mov
dec
cmp
inc
pop
adc
pop
dec
mov
mov
pop
in
cmp
jae
mov
inc
jp
push
dec
fdiv
call
sbb
aas
movs
(bad)
sbb
int
sbb
adc
fst
fmul
push
lods
scas
call
aam
and
in
into
xchg
mov
and
push
push
push
fldenv
mov
leave
add
add
dec
in
mov
jno
gs
lds
mov
jo
test
or
pop
into
cs
sahf
or
jnp
(bad)
dec
rol
push
pop
jge
popf
sbb
mov
test
jp
and
jmp
add
push
stos
xor
fcomp
jnp
imul
addr16
rcr
(bad)
enter
xchg
test
mov
lods
fadd
pop
jne
add
ss
jmp
ins
mov
sbb
call
rcl
cmp
sub
sahf
jmp
dec
push
fimul
and
inc
aad
test
xchg
outs
retf
pop
clc
pop
sub
xchg
mov
jne
push
add
out
pop
xchg
mov
add
cmp
and
je
in
mov
xor
data16
inc
mov
fmul
rcr
inc
lds
mov
enter
inc
cmp
sar
stos
imul
jp
retf
in
xchg
mov
lea
dec
pop
popf
dec
cmp
push
cli
xchg
(bad)
cmps
jnp
nop
hlt
in
clc
xchg
jge
(bad)
daa
lahf
push
mov
pop
xchg
and
mov
mov
cmps
inc
lds
lods
cmps
fcmovne
or
movs
sti
inc
xchg
pop
sbb
outs
sub
repz
ins
fsubr
or
cmp
add
(bad)
adc
pop
stos
pop
add
xchg
clc
push
mov
sub
ffree
cli
add
mov
pop
inc
jne
sbb
xchg
adc
ret
dec
daa
add
dec
ficomp
cmp
or
icebp
mov
shl
call
adc
fs
jo
(bad)
xchg
(bad)
cmp
inc
cmp
neg
ficomp
xchg
sti
xchg
adc
xor
mov
ss
add
sbb
mov
mov
jbe
bound
lahf
jmp
add
retf
pop
sar
popf
mov
lock
in
bound
mov
aad
pop
ins
and
push
(bad)
and
stos
stos
div
test
dec
mov
repz
jl
push
sbb
ds
pop
push
movs
inc
mov
push
add
xchg
bound
jnp
daa
fisub
adc
adc
popf
push
adc
or
adc
js
cmc
push
cmps
sub
(bad)
out
inc
arpl
jmp
fmulp
adc
test
div
dec
scas
mov
pop
xchg
loopne
imul
jge
out
pop
cmp
dec
adc
cmp
inc
fninit
push
add
sub
lds
outs
test
sbb
in
test
adc
pop
adc
push
push
cs
xor
or
cmp
or
mov
mov
cmps
jae
cdq
das
jns
dec
in
call
repnz
jo
pop
pop
imul
mov
xchg
mov
xor
mov
inc
sahf
push
dec
pop
fucomi
mov
aaa
(bad)
stos
(bad)
cdq
fwait
inc
ret
xor
mov
mov
cmp
clc
dec
jge
inc
dec
sub
mov
add
dec
fst
adc
loop
stc
lds
and
or
(bad)
loope
jmp
popa
add
mov
out
fild
fild
out
mov
jecxz
pop
icebp
xchg
loopne
aad
icebp
stos
test
cmp
jne
(bad)
xchg
cmp
adc
push
lods
fs
clc
xchg
pop
lods
fnstenv
aad
sbb
add
mov
mov
pop
lods
jg
dec
test
pop
or
scas
mov
dec
sbb
outs
(bad)
cmps
mov
movs
lock
inc
dec
jbe
mov
ja
xor
mov
aaa
jns
xchg
aad
push
ret
mov
jb
mov
mov
sbb
dec
add
test
leave
loope
inc
push
or
inc
mov
push
cmps
adc
jb
loopne
push
sbb
jp
pop
into
push
adc
jge
jmp
mov
mov
scas
add
cmp
inc
cmp
dec
xlat
inc
jo
push
xor
and
add
push
fild
mov
xor
jo
sti
jecxz
push
sahf
in
push
adc
test
mov
xor
jnp
dec
push
xchg
mov
cmp
and
mov
cmp
fcmovnb
add
xchg
push
pop
push
sub
cmps
leave
gs
adc
mov
lods
shl
in
ror
fistp
push
pop
xor
jmp
stos
sbb
(bad)
movs
ss
inc
test
xchg
(bad)
out
arpl
push
iret
mov
mov
popf
jbe
dec
mov
call
ror
fadd
add
xchg
(bad)
cmps
js
inc
ins
mov
ss
es
clc
retf
clc
jle
xchg
xor
xchg
push
cmp
mov
sti
call
jns
out
sbb
xchg
add
ret
push
jmp
in
sub
jp
jne
out
or
fs
jne
mov
mov
mov
lea
fist
bound
iret
cwde
jae
inc
mov
loope
push
fmul
sub
je
lods
out
adc
aaa
jb
cmp
outs
push
pop
fiadd
inc
inc
xchg
lods
test
or
fld
lock
icebp
mov
jae
jle
mov
xor
daa
popa
jne
mov
and
mov
scas
cmp
adc
rcl
mov
mov
xor
pusha
adc
xor
iret
push
frstor
aam
inc
icebp
ins
mov
xchg
jge
repnz
add
cmps
sti
imul
mov
and
or
mov
rcr
sbb
pop
mov
or
in
xchg
popf
in
push
jb
movs
dec
and
mov
iret
cmp
fstp
inc
adc
dec
cwde
loopne
imul
(bad)
sub
xor
mov
jns
in
xchg
sub
nop
adc
cli
pop
cmp
ja
pop
sahf
in
retf
ffreep
mov
lock
and
pop
iret
std
ins
mov
lds
popa
add
sbb
xchg
sub
push
jo
pop
imul
mov
jae
sub
pop
jge
pushf
push
pop
int3
jb
aad
sahf
shl
add
retf
mov
cmc
mov
adc
inc
aas
push
(bad)
push
and
pop
lods
add
or
xchg
add
adc
push
sub
out
mov
pop
xchg
popa
addr16
mov
rcl
es
sub
dec
jp
rcr
addr16
scas
pop
inc
fcom
cmp
cmp
shr
loope
and
xor
aam
fwait
cmp
push
jg
into
retf
dec
shl
cmp
pop
lds
in
(bad)
stc
je
sub
scas
push
scas
fcomp
retf
(bad)
enter
push
fcmovbe
sti
je
pushf
cmps
and
test
test
xor
sbb
ret
pop
sbb
mov
loopne
mov
pusha
mov
data16
and
jnp
push
test
xor
pop
mov
into
sub
popa
mov
jmp
arpl
or
inc
adc
data16
test
mov
shr
test
out
es
dec
scas
jmp
test
inc
les
aas
xor
call
add
sbb
jb
mov
adc
popa
ins
jnp
inc
(bad)
cmp
or
inc
fstp
test
or
xor
sub
pop
pop
cmp
sub
xor
push
test
lods
mov
shl
xor
xor
loop
xor
mov
mov
movs
fcomp
dec
pop
cwde
loopne
xchg
lock
or
xor
mov
scas
xchg
out
sub
push
or
dec
ins
into
fdivr
shl
mov
rol
out
inc
and
jge
iret
inc
sub
push
xchg
mov
rcr
sti
sti
xor
aaa
std
les
jge
sub
outs
shl
adc
cs
inc
and
push
ror
inc
inc
call
add
mov
imul
int3
movs
or
fwait
push
push
xchg
cmps
jp
sti
bound
jns
mov
mov
xchg
dec
das
lahf
xchg
push
repz
mov
adc
cwde
jnp
test
dec
(bad)
int
jl
sbb
test
xchg
out
sbb
ss
dec
fs
and
xchg
psubd
adc
push
pop
test
in
inc
mov
mov
scas
test
add
pop
cmp
add
aad
out
test
ss
dec
sub
test
dec
inc
and
mov
push
(bad)
pop
ret
inc
int
cmp
ret
adc
dec
inc
sar
je
inc
iret
push
dec
or
mov
sbb
arpl
push
cli
sub
jb
and
ins
pop
mov
adc
lahf
xchg
int
(bad)
adc
nop
ror
pop
cld
xor
test
push
pushf
into
mov
sbb
iret
xchg
sub
out
mov
stc
mov
jnp
push
push
sbb
fidivr
and
xchg
arpl
out
clc
mov
push
jecxz
in
sub
stos
fsubr
(bad)
adc
enter
ds
or
xchg
sbb
imul
rol
sub
jns
cdq
loopne
dec
dec
icebp
add
loop
bound
ss
pop
(bad)
leave
xchg
loope
push
jecxz
jne
xchg
xchg
jbe
inc
or
movs
push
xlat
call
(bad)
dec
mov
test
inc
push
mov
xchg
fs
(bad)
les
popf
xor
push
mov
xor
xchg
fldcw
xacquire
add
dec
sbb
ror
fldenv
out
or
adc
push
repz
jbe
mov
sub
shr
or
adc
stos
sti
popa
dec
and
sub
cmp
adc
lock
xchg
fadd
dec
mov
js
iret
fwait
mov
xor
test
ds
jb
je
and
xchg
dec
jecxz
pusha
jo
mov
stos
mov
inc
cmp
mov
jns
int
lahf
sub
xchg
(bad)
mov
mov
stc
push
jle
leave
retf
cmc
xor
mov
scas
fist
add
mov
jo
mov
xchg
ficom
imul
adc
mov
sahf
fwait
lea
mov
mov
mov
in
loop
xlat
xchg
sub
or
xor
xchg
fiadd
lock
daa
aas
pop
lds
jb
mov
push
xor
inc
mov
iret
popf
inc
cwde
mov
stos
jbe
lahf
imul
iret
loope
cmp
mov
xchg
cmp
sbb
dec
sbb
fild
cmp
sbb
jl
or
xchg
xchg
jnp
push
jle
bound
push
(bad)
mov
xchg
(bad)
mov
outs
scas
mov
(bad)
test
xchg
ins
or
xchg
add
rol
push
imul
ror
out
ror
and
ds
bound
neg
add
gs
addr16
push
retf
cmps
push
and
sahf
iret
xor
jle
mov
sub
sub
lock
sti
jnp
pop
ret
je
test
or
mov
or
imul
mov
idiv
adc
repz
movs
adc
loop
add
aaa
xchg
(bad)
out
push
mov
js
cdq
jecxz
ins
neg
cmp
fcomp
cdq
and
int
mov
cmp
cmp
cli
jge
sti
daa
iret
jae
xchg
int
mov
rol
jbe
stos
and
repz
mov
mov
mov
fst
or
js
rep
fstp
lock
pop
rcl
sbb
(bad)
xor
aas
push
jg
and
test
cmp
xchg
lahf
lds
cs
fwait
dec
fsubr
mov
int3
stos
pop
inc
inc
int
add
ds
mov
jno
ins
iret
por
xchg
dec
mov
and
dec
mov
and
movs
adc
push
add
adc
rol
xor
mov
out
movs
das
sbb
icebp
mov
xor
or
xchg
retf
and
rcr
jns
jmp
mov
mov
out
cmp
pop
(bad)
cli
mov
xchg
cdq
pop
test
retf
mov
xchg
adc
in
shl
cmp
xchg
and
mov
push
add
push
xchg
nop
xchg
pop
mov
in
cmp
sbb
mov
std
xchg
inc
pop
imul
(bad)
mov
add
aas
jge
xlat
and
mov
mov
mov
xchg
int3
rcl
xchg
mov
sub
xlat
pop
mov
ss
mov
pop
inc
scas
jns
or
push
retf
or
cmc
xlat
or
jmp
mov
jl
jge
pop
ins
ror
or
dec
nop
adc
mov
fnstsw
imul
pushf
or
jae
mov
in
in
mov
xchg
push
scas
ins
dec
test
sub
or
xchg
dec
iret
int3
sbb
push
inc
sbb
cmc
xchg
lods
sti
mov
mov
rcr
ror
mov
mov
jns
xchg
xchg
jb
(bad)
aaa
(bad)
mov
mov
adc
neg
pop
fs
inc
push
push
pop
in
ss
pushf
repnz
add
mov
jns
inc
pusha
adc
inc
jecxz
repnz
inc
pop
mov
into
fsubp
retf
jl
clc
cmp
and
icebp
xchg
pop
xchg
dec
jnp
dec
mov
mul
adc
out
popa
dec
rcl
arpl
repz
inc
push
scas
icebp
pop
cwde
dec
lods
and
mov
dec
hlt
adc
xchg
int3
adc
sbb
jb
data16
cmp
xor
lods
xor
call
es
in
jl
stc
xchg
das
cmps
pusha
inc
pop
adc
ss
and
retf
jmp
cmps
pop
not
adc
mov
and
fwait
lahf
arpl
lods
test
push
loop
repz
jae
(bad)
outs
inc
loope
int3
inc
bound
std
arpl
jp
sub
ds
push
bound
dec
into
xor
imul
fcom
ret
(bad)
dec
add
ins
jo
adc
(bad)
jg
addr16
in
xchg
fs
cli
mov
xchg
xchg
push
loop
inc
(bad)
xor
dec
push
xchg
pop
out
inc
or
mov
retf
rcl
arpl
adc
push
out
fldcw
mov
sub
add
and
or
mov
xchg
ret
loopne
jae
mov
(bad)
neg
mov
dec
fldcw
pop
test
mov
in
and
jecxz
int3
inc
mov
jo
aas
sbb
mov
and
add
xor
loop
pop
pop
sbb
iret
je
scas
and
outs
sbb
push
mov
icebp
xchg
ins
fsub
scas
fld
add
jle
fsubr
pop
hlt
mov
cld
inc
bound
in
stc
cmp
adc
or
inc
(bad)
retf
push
rol
mov
mov
or
jns
lock
ja
jecxz
sbb
ins
push
xor
pop
adc
and
sub
sub
and
pop
xor
push
xor
stos
xchg
popf
jnp
xor
call
xchg
or
push
and
inc
adc
sbb
(bad)
retf
scas
and
shl
mov
mov
pop
pushf
pop
dec
(bad)
jmp
mov
enter
jne
pop
test
test
pushf
std
cmp
sbb
jno
cmp
adc
push
fcom
ja
inc
mov
imul
and
outs
cmp
stc
out
mov
ds
pop
aad
inc
mov
xchg
sub
sbb
sbb
scas
sbb
arpl
xchg
loope
(bad)
jp
lahf
lods
scas
mov
pop
xchg
movs
call
in
aas
xchg
fimul
lods
int
mov
fild
sub
test
sbb
sub
jecxz
shr
mov
xor
cld
jecxz
xlat
fdiv
xchg
pop
xchg
cmp
xchg
jnp
mov
add
xchg
rcl
int
adc
cwde
xchg
dec
inc
dec
pop
lock
(bad)
sbb
xchg
inc
sti
call
xchg
call
mov
shr
jle
(bad)
xor
cmp
adc
sahf
and
fstp
pop
arpl
in
push
mov
shl
dec
int3
test
fsubr
jbe
(bad)
cmp
test
inc
inc
add
add
mov
sbb
add
(bad)
rcl
xchg
bound
inc
jl
adc
outs
dec
mov
mov
lods
jae
pop
jnp
movs
xchg
jmp
push
xchg
in
inc
sti
inc
test
adc
dec
test
std
dec
cmps
mov
out
adc
out
cmp
push
and
jmp
mov
arpl
aas
cmps
add
rcr
mov
mov
sti
adc
cmp
sbb
loope
adc
mov
sar
mov
pusha
ret
sbb
sub
(bad)
jmp
fistp
add
int3
loop
cmp
or
scas
repz
leave
ins
loopne
js
adc
push
inc
add
mov
mov
inc
(bad)
mov
jmp
dec
fst
cdq
sub
sub
popa
cmp
dec
push
xchg
inc
fdiv
jns
sbb
push
xor
mov
in
or
pop
and
push
lds
xor
mov
cmc
cmps
cmp
scas
mov
or
inc
ja
movs
shl
add
addr16
jo
(bad)
mov
sub
mov
cmp
add
ins
out
(bad)
call
jmp
(bad)
cmp
out
cmp
retf
test
push
sahf
sub
loope
sbb
test
and
gs
cld
daa
rol
test
cmc
or
stc
cs
stc
das
adc
pop
retf
push
retf
imul
xchg
adc
mov
jno
mov
nop
add
(bad)
dec
xchg
fadd
mov
xchg
xchg
(bad)
sub
sbb
idiv
dec
adc
jne
ins
mov
hlt
inc
jg
adc
gs
sbb
jno
test
aam
(bad)
push
add
sub
in
jno
je
push
pop
addr16
outs
jo
clc
pop
sub
aad
dec
loope
xchg
pop
pop
push
jmp
out
pop
int
test
inc
pop
inc
xor
mov
inc
mov
dec
mov
int
jge
iret
add
mov
mov
push
les
mov
out
mov
xlat
shr
mov
daa
nop
sahf
rcl
call
ins
retf
sbb
pop
sub
jl
mul
inc
jmp
out
sbb
dec
ins
stos
(bad)
repz
mov
jo
ja
pushf
aas
xor
test
dec
sub
mov
mov
aaa
(bad)
adc
jecxz
inc
adc
ret
cmps
fcomp
outs
pop
add
fcom
sti
mov
adc
fwait
ins
rcl
jmp
jg
bt
fldcw
adc
and
dec
in
jo
push
jb
push
stos
fstcw
arpl
test
xor
stc
adc
pop
enter
pop
jne
xor
jecxz
mov
int3
rcr
xor
rcr
shl
nop
imul
mov
mov
and
inc
jge
ficom
aam
mov
mov
jns
mov
push
mov
sub
test
(bad)
push
ja
das
add
pop
loop
es
test
mov
stos
mov
shl
push
sub
jo
repnz
xchg
lods
les
adc
lods
rcr
call
pop
or
jmp
jle
mov
mov
jns
pop
mov
repnz
std
outs
test
lds
add
cmps
dec
mov
jp
lods
mov
inc
arpl
push
fstp
stc
(bad)
inc
cs
dec
repnz
test
popf
and
inc
pushf
or
retf
sub
movs
clc
popf
xor
aas
jp
xchg
push
test
and
outs
xor
inc
addr16
sub
xor
xchg
loop
xchg
scas
xor
imul
inc
call
pop
lods
jne
mov
sbb
push
sbb
mov
or
(bad)
std
movs
and
mov
cmc
push
lds
shr
movs
js
pop
and
and
xchg
mov
(bad)
frstor
(bad)
into
cwde
(bad)
or
push
bound
addr16
jmp
adc
push
movs
or
and
out
bound
into
mov
xchg
into
mov
add
out
in
sub
jns
cmc
push
jg
je
enter
adc
outs
call
stc
retf
or
jae
dec
aas
aaa
pop
inc
cli
shl
xor
xchg
lea
jmp
ins
(bad)
mov
xchg
fucom
ja
push
and
popf
jl
test
cmp
popf
imul
xchg
mov
push
inc
loopne
out
lods
mov
dec
mov
dec
sub
cdq
sbb
addr16
jmp
sub
dec
sbb
dec
bound
fdiv
cli
xor
popa
outs
and
cli
xchg
mov
fadd
std
adc
enter
and
fs
(bad)
aas
pop
sub
mov
js
dec
(bad)
stos
adc
push
push
sub
shr
jp
inc
xor
adc
push
sub
fmulp
xchg
mov
add
shl
fstp
mov
sub
(bad)
jae
stos
pop
jp
js
xchg
arpl
push
mov
sahf
jge
loope
shl
call
js
xchg
and
mov
jecxz
daa
retf
sti
imul
out
adc
and
adc
test
jecxz
jmp
loopne
jno
lock
stc
daa
aam
mov
inc
scas
mov
inc
(bad)
or
les
mov
aam
shl
jb
mov
sbb
add
xor
inc
mov
dec
loope
fcomi
cld
cmps
add
mov
xor
adc
add
push
inc
push
add
adc
mov
popf
or
jecxz
mov
or
(bad)
add
js
(bad)
and
adc
or
(bad)
jl
pushf
(bad)
movs
add
push
fadd
cmp
clc
fcomip
cli
cld
push
fs
xchg
dec
inc
or
push
dec
mov
adc
hlt
arpl
pop
jl
push
(bad)
std
push
pop
jmp
call
jb
in
lods
and
shl
lods
xchg
mov
dec
in
ds
pop
sub
shl
push
cmp
dec
ret
fisubr
call
or
aad
jnp
add
les
aaa
push
xchg
loopne
adc
test
mov
xchg
push
xchg
and
sti
push
(bad)
pop
mov
jle
retf
mov
rol
popa
add
(bad)
fsubr
jo
dec
loopne
fs
ins
into
imul
cmps
cdq
inc
out
adc
test
scas
std
mov
push
fsub
in
mov
sub
in
xchg
sub
in
call
xor
push
loop
jecxz
idiv
mov
inc
sar
lock
ins
add
fisubr
syscall
adc
into
lods
pop
out
in
sbb
cmps
addr16
std
movs
sbb
outs
xchg
int
sub
enter
fwait
xor
sbb
call
mov
jnp
stos
(bad)
xchg
sub
pop
pop
outs
dec
test
cdq
lds
mov
push
jle
outs
arpl
push
mov
(bad)
fwait
not
push
cmps
vmovaps
cmps
(bad)
and
(bad)
cmc
sub
push
xchg
or
add
xchg
in
pop
stos
sub
add
popf
xchg
push
hlt
fld
mov
out
imul
adc
push
sbb
adc
pushf
(bad)
jecxz
iret
or
(bad)
movs
sub
arpl
push
dec
mov
mov
add
mov
jmp
push
mov
and
jle
setbe
and
push
fcomp
fisubr
test
or
(bad)
mov
mov
cmp
neg
mov
out
imul
call
das
pop
adc
xchg
ret
adc
inc
or
mov
pop
add
xchg
xchg
bound
mov
outs
movs
fs
sub
pop
or
mov
mov
dec
adc
mov
push
imul
xchg
sti
inc
inc
dec
popa
or
cmc
push
jl
mov
add
dec
xchg
bound
mov
clc
out
mov
not
aas
iret
xchg
fist
push
jecxz
fs
jmp
js
cmps
and
inc
mov
cdq
push
aad
or
imul
ins
das
stos
movs
jp
inc
les
pop
clc
xchg
add
mov
xor
cwde
jp
and
out
jge
stos
bound
ficom
lods
xor
mov
adc
cmp
fadd
sub
push
xchg
and
sub
inc
rol
scas
je
cmc
in
cs
fsubr
jge
in
cmps
aas
jle
repz
jnp
aam
movs
in
lods
pop
shr
(bad)
popa
push
mov
add
ins
pop
mov
jae
fild
mov
adc
pop
cmps
rcr
and
leave
popa
jge
inc
stos
outs
cld
nop
push
in
cmp
push
mov
pop
push
rcl
prefetchw
out
idiv
inc
icebp
xchg
sbb
push
add
cmc
push
mov
xchg
cmp
sub
pop
jns
pop
add
mov
or
test
mov
dec
mov
(bad)
cmp
add
xchg
jno
pop
fs
dec
xchg
enter
pcmpgtb
mov
inc
imul
repz
add
cmps
ja
xor
icebp
push
mov
or
in
pop
(bad)
jae
retf
add
nop
sti
fld1
loopne
js
mov
retf
sub
xor
cmp
mov
aas
fisub
lahf
push
dec
mov
xor
jnp
scas
ror
inc
mov
mov
loopne
mul
sub
mov
scas
mov
mov
sbb
push
mov
xchg
test
jne
cmp
xchg
popa
ins
repz
jbe
mov
mov
retf
addr16
sahf
sti
repnz
mov
mov
pushf
pop
xchg
stc
call
sbb
cdq
xor
in
dec
fisttp
jg
sbb
or
push
inc
imul
gs
shl
popf
pushf
lods
stos
sti
add
sub
lea
sbb
push
dec
xchg
test
and
movs
adc
pop
in
(bad)
fild
push
xor
push
xchg
cmp
and
int3
cmc
imul
xor
xchg
cmps
adc
mov
push
shr
jo
imul
xor
pop
ins
xor
cld
std
dec
bound
cli
or
mov
mov
jbe
mov
push
sbb
outs
sub
xor
imul
mov
or
xor
ja
mov
cli
jns
in
ins
gs
xor
les
or
xchg
or
and
lods
(bad)
(bad)
adc
adc
mov
call
and
jbe
or
movs
repz
sub
(bad)
call
mov
mov
sub
and
mov
lds
mov
ins
sub
(bad)
mov
cwde
push
jmp
loopne
(bad)
mov
push
adc
mov
xchg
fisub
and
or
inc
lods
aad
(bad)
dec
fnstenv
inc
and
cmps
daa
sub
call
xchg
mov
call
inc
rcr
stos
jo
mov
pushf
xchg
or
jae
test
out
sahf
ins
inc
(bad)
ficomp
mov
and
das
cmp
pop
mov
cli
dec
xchg
xor
add
mov
sub
nop
outs
arpl
ins
out
ret
cld
sbb
les
push
js
test
sti
sbb
es
mov
movs
clc
or
popf
jmp
sub
data16
aaa
or
aas
pop
scas
neg
jge
inc
and
icebp
shl
movs
dec
pop
or
fnstenv
adc
daa
xor
xlat
inc
repnz
cmp
(bad)
int3
stos
xchg
pop
fwait
mov
or
xlat
lods
cmp
cmp
fsubr
adc
gs
inc
data16
cmc
push
push
in
inc
das
leave
retf
pop
cmp
repnz
sub
in
(bad)
lods
cmp
push
idiv
and
adc
dec
inc
outs
cli
in
shl
fiadd
shr
add
cmp
xor
into
stos
shl
cmp
pop
or
push
mov
fiadd
mov
fucom
dec
push
sbb
imul
push
or
inc
mov
cld
push
mov
repz
inc
lods
fs
push
aam
lods
cmps
enter
mov
out
(bad)
movs
push
or
push
fnsave
mov
sub
mov
dec
or
loopne
adc
call
stc
or
cmp
jg
inc
ins
sub
enter
adc
cmp
add
lods
and
rcl
add
sbb
ror
and
data16
or
rol
ret
lods
loop
mov
clc
icebp
shl
(bad)
or
cmp
inc
sub
test
cwde
xor
(bad)
xor
movs
or
pop
pop
repz
dec
xor
cwde
bound
pop
push
or
shr
mov
xchg
scas
mov
xchg
div
out
out
xchg
dec
and
loope
dec
mov
sbb
cld
inc
mov
hlt
mov
lahf
je
mov
(bad)
sti
push
dec
adc
rcl
fs
inc
scas
fadd
cli
push
aad
mov
mov
and
xchg
in
int
pop
sub
aaa
inc
mov
int
jb
cmps
call
shl
movs
out
add
and
out
lds
adc
popf
stos
mov
sbb
aas
push
jne
sub
ficomp
movs
movs
dec
mov
mov
sbb
test
imul
jbe
int3
mov
outs
pop
mov
xchg
pop
pop
js
pop
daa
and
jmp
call
movs
int3
(bad)
push
dec
and
adc
mov
mov
out
cmp
xchg
xor
sbb
cmps
jg
pusha
cwde
xor
mov
fidivr
dec
push
add
dec
lea
sbb
ss
push
inc
das
mov
fadd
les
(bad)
call
jecxz
test
add
dec
sub
xor
push
mov
mov
xor
jmp
inc
scas
leave
popa
pop
and
loopne
outs
push
xlat
or
scas
cmp
push
lds
pop
dec
lods
jmp
imul
pusha
(bad)
stc
xor
rcr
test
shl
nop
mov
push
ss
rol
push
dec
push
rcr
inc
inc
data16
mov
and
xchg
sbb
cld
cli
dec
pushf
rcl
ret
dec
dec
mov
mov
data16
pushf
rcr
mov
xchg
out
or
imul
shl
sub
sahf
mov
mov
std
jbe
rcl
adc
out
dec
sbb
inc
pop
arpl
mov
fbld
outs
mov
loopne
push
cwde
lods
nop
push
pusha
pop
int3
add
sahf
pusha
cli
inc
jmp
popf
hlt
inc
sub
call
dec
xchg
inc
bnd
arpl
arpl
jmp
cs
add
xchg
adc
(bad)
rcl
adc
stc
addr16
out
icebp
cmp
cmp
mov
daa
add
jl
mov
sbb
xor
adc
inc
pop
or
xchg
in
and
inc
out
or
add
ret
cmp
jns
das
pop
push
test
mulps
and
add
inc
rol
mov
int3
inc
xor
adc
or
mov
push
mov
fcomp
and
ins
cwde
js
and
ret
xchg
xchg
shr
sbb
out
xor
js
popa
in
pop
and
nop
dec
add
test
inc
push
repnz
inc
cmp
popa
pop
cmp
xor
int3
mov
jnp
in
shl
imul
(bad)
and
mov
out
mov
xor
mov
jo
adc
lea
sub
adc
jmp
cmps
cmp
mov
je
mov
jne
mov
and
xor
jg
or
sbb
cmp
xchg
and
jno
pop
stc
leave
pop
xor
fstp
jo
jne
jmp
inc
mov
push
scas
xor
inc
outs
dec
loop
dec
gs
nop
sbb
shl
adc
dec
xchg
cld
mov
inc
loopne
(bad)
js
mov
es
mov
cmp
jns
mov
pop
cmp
adc
add
or
and
pop
adc
mov
xor
xlat
out
aam
jp
rcr
adc
mov
jmp
mov
mov
sbb
shl
xlat
jge
fwait
xor
inc
sti
jge
lahf
js
mov
push
aas
ds
scas
outs
adc
pop
in
lock
jo
xchg
mov
sub
and
inc
mov
xchg
mov
jmp
push
push
cmp
push
or
(bad)
fs
dec
jl
in
mov
add
xor
sbb
mov
call
(bad)
push
jle
jns
in
arpl
inc
fadd
lock
test
gs
jne
and
mov
push
lock
lods
jge
ja
leave
pop
jl
xchg
(bad)
or
add
inc
ror
and
(bad)
mov
cmps
arpl
xor
mov
pop
xor
pop
pop
ja
pop
push
mov
test
adc
aad
jno
imul
dec
jno
jecxz
pop
js
and
mov
in
xchg
cli
popf
or
mov
push
scas
jg
sub
pop
dec
mov
cmps
push
ret
inc
loope
mov
mov
xchg
fcmovnu
adc
ins
data16
jmp
dec
cmp
fs
ja
fsubr
shl
sahf
pop
xor
retf
and
shl
add
and
sub
adc
xchg
(bad)
and
xchg
add
xor
sbb
cmps
retf
push
mov
jno
sub
dec
jge
mov
imul
in
not
test
cld
stos
jae
movs
mov
push
sub
cmp
sar
(bad)
xor
dec
fucomp
fisttp
in
mov
shl
dec
push
leave
loope
(bad)
in
retf
dec
imul
inc
jmp
pusha
adc
dec
pop
fld
fidivr
call
sub
addr16
mov
adc
fst
add
jmp
icebp
aam
pop
sbb
sbb
cmp
add
stos
sti
mov
dec
sti
icebp
shr
ins
and
or
retf
add
leave
push
aas
mov
imul
int
clc
mov
ret
cmp
sub
mov
xchg
aaa
enter
pushf
sbb
movs
push
dec
(bad)
aas
test
ret
movs
adc
out
clc
xlat
gs
out
fistp
out
inc
pop
cmp
jb
xchg
pushf
xchg
scas
mov
push
cmp
push
pushf
fidiv
int
adc
sub
lods
out
cdq
and
dec
adc
je
pop
pop
mov
xchg
outs
repnz
fucomip
inc
xchg
data16
pop
scas
jge
ret
pop
lahf
int
mov
push
push
test
add
mov
cmps
xchg
pusha
jl
fld
and
test
ss
sbb
xchg
jecxz
(bad)
xor
sbb
js
inc
push
loopne
and
mov
stos
dec
pop
sbb
push
mov
fld
jbe
and
or
or
popf
inc
mov
int
in
cmp
dec
in
fisubr
sub
jmp
in
jne
mov
out
jb
test
push
ret
jl
cmp
test
add
sbb
in
sahf
pop
popf
mov
ret
inc
or
push
inc
mov
int3
ins
xor
imul
dec
lea
mov
inc
pop
mov
(bad)
rol
push
fs
jmp
jns
jno
mov
and
jmp
ins
xor
and
fsubp
ficom
push
loopne
mov
sti
or
cmps
(bad)
ins
cmps
loop
retf
fs
pop
rol
push
push
outs
sbb
cmps
(bad)
outs
push
or
pop
loopne
mov
dec
ins
loop
mov
ins
lea
mov
cli
cmp
jmp
jns
fist
mov
sub
data16
xchg
dec
fmul
push
add
enter
jge
mov
icebp
jp
out
in
ja
jne
dec
inc
xchg
cld
and
xchg
div
sbb
dec
pop
inc
test
jg
mov
imul
das
mov
xchg
jp
test
dec
pop
les
sbb
pop
sub
adc
push
iret
iret
cmp
in
xor
or
fwait
xchg
pushf
popf
xchg
mov
rcr
add
xchg
fidiv
add
aaa
fsubp
fwait
leave
test
shl
cdq
xchg
jbe
dec
push
jecxz
cmp
dec
jl
push
loope
or
xor
cmps
mov
adc
es
push
mov
outs
push
sahf
mov
jmp
xchg
jo
rcl
push
(bad)
loopne
cmps
enter
test
sbb
dec
es
in
movs
aam
xchg
(bad)
push
jmp
ret
call
or
mov
mov
inc
out
repz
dec
mov
sub
iret
or
lods
fcomp
test
xor
sub
lods
inc
sub
or
jg
adc
sub
sub
cmp
stc
mov
dec
sub
pop
sbb
inc
jmp
(bad)
mov
push
ss
inc
and
dec
mov
add
andnps
cwde
mov
push
js
adc
cmp
psllq
js
ror
sbb
idiv
adc
xchg
xchg
jmp
pop
fadd
adc
adc
sub
lahf
cmc
sahf
sbb
icebp
into
repz
push
jmp
dec
in
sbb
js
in
jecxz
xchg
ds
mov
dec
call
neg
loopne
push
(bad)
jl
xlat
add
jp
jmp
jbe
sub
daa
jmp
jg
lds
cmps
xacquire
dec
ret
int
outs
adc
nop
dec
sbb
mov
in
inc
scas
lods
popf
call
jmp
sar
pushf
mov
mov
jle
jno
cmps
sbb
aad
jnp
push
in
aad
mov
enter
xchg
xchg
mov
repnz
dec
push
test
push
dec
pop
out
aad
xchg
mov
push
in
mov
fld
adc
jo
leave
push
lea
fimul
jns
fadd
(bad)
sbb
xor
push
mov
sbb
out
adc
js
fistp
cmp
das
mov
adc
jbe
retf
int
mov
dec
mov
mov
mov
xchg
cmp
or
dec
lods
and
or
je
ret
push
and
fistp
mov
xor
mov
mov
leave
adc
outs
xchg
(bad)
push
pop
adc
iret
pop
cmpxchg
mov
push
cmp
data16
mov
fiadd
or
push
mov
inc
mov
jecxz
test
add
ficom
inc
shr
cmp
sub
mov
in
daa
outs
adc
cwde
fnstenv
aam
rcl
push
ret
cmp
imul
leave
fnstsw
movs
loope
mov
jl
pop
pop
into
lods
movs
dec
inc
iret
pop
add
or
enter
sub
xor
ss
jmp
adc
out
xchg
push
pop
enter
cmps
imul
mov
jae
jmp
and
in
inc
ins
inc
aad
mov
out
mov
out
adc
pop
push
jp
ror
stc
sbb
(bad)
jle
lods
dec
pusha
mov
jp
inc
pop
mov
les
test
test
mov
fcmovne
in
inc
fs
xchg
ror
std
xor
pop
jb
and
lock
xchg
adc
add
sar
out
push
jl
mov
ds
mov
sub
test
pop
cmp
ja
inc
or
outs
pop
pop
pushf
adc
ds
mov
xor
enter
sub
sub
outs
push
adc
jmp
popf
lods
jne
ret
(bad)
fs
push
call
sub
dec
call
shl
mov
add
mov
dec
pop
mov
outs
sbb
inc
mov
cmc
aad
in
jge
mov
ud0
test
data16
fisub
in
ins
push
out
xor
in
adc
hlt
loop
mov
or
mov
or
sbb
cs
jle
test
enter
dec
int
jb
push
jp
sub
xchg
(bad)
test
stos
dec
jecxz
mov
or
ret
(bad)
int
push
(bad)
int3
mov
sbb
gs
data16
push
mov
adc
xchg
lds
push
and
rol
out
push
(bad)
push
xchg
adc
or
lea
das
or
pop
psubb
ins
jne
sbb
push
xchg
or
loope
je
and
pop
push
xor
out
push
cmps
jb
(bad)
es
inc
dec
jmp
aas
retf
sbb
stos
xor
xchg
sbb
and
imul
jno
sti
cwde
retf
and
stos
inc
pop
cmc
rcr
adc
jp
dec
lods
pop
lods
movs
jecxz
adc
pop
je
sbb
int
lahf
pop
jmp
fwait
out
or
sbb
ins
mov
cmp
xor
sbb
test
fild
jb
fnsave
fild
ins
and
xchg
arpl
clc
out
mov
or
stos
xchg
shl
into
in
or
inc
dec
jmp
dec
sbb
dec
sar
mov
lea
adc
sub
cmc
dec
xor
aaa
xchg
dec
pop
pop
jmp
lods
mov
jo
jnp
sub
bnd
inc
fist
retf
mov
stc
scas
pop
xor
mov
jle
dec
add
xchg
push
int
fild
outs
xor
pusha
and
jmp
div
push
pop
ror
fucomi
jecxz
repnz
add
adc
in
mov
in
aam
in
js
sbb
pop
adc
xlat
leave
or
cmp
or
jp
out
sbb
js
inc
je
and
push
adc
sbb
push
pushf
ficom
dec
mov
jnp
mov
sub
add
div
mov
jbe
lahf
cmp
pop
std
repz
xchg
or
in
jbe
(bad)
bound
inc
add
and
jl
mov
mov
shl
fstp
ror
xchg
sahf
(bad)
and
leave
push
cld
cdq
sub
cld
test
loop
fstp
aaa
pop
pushf
out
mov
stos
les
pop
pop
sar
ins
inc
shl
inc
stc
pop
cmps
mov
adc
or
and
mov
loopne
(bad)
movs
shl
jg
test
dec
pop
int
jmp
sbb
mov
movs
adc
cwde
pop
lahf
aad
jbe
xor
ficomp
cmc
mov
(bad)
xchg
xchg
hlt
add
dec
das
xchg
out
dec
mov
xchg
repz
mov
fild
sti
retf
add
fs
xchg
dec
ror
mov
xchg
cmps
test
std
sahf
jmp
out
test
mov
add
mov
inc
mov
aam
xor
and
push
sbb
push
stc
sub
addr16
adc
add
adc
je
loop
push
retf
mov
aas
xchg
loope
cdq
xchg
lea
iret
sub
xor
inc
outs
push
mov
ds
das
bound
xchg
out
mov
inc
outs
sub
stos
cmc
dec
xor
adc
pop
cmc
xchg
ins
outs
not
stc
sbb
pop
add
pop
bnd
loop
cmp
and
inc
movs
cmc
jnp
icebp
(bad)
sbb
inc
(bad)
cdq
and
stos
and
call
fmul
loope
xchg
push
mov
popa
(bad)
cdq
je
and
in
in
fist
pop
test
es
add
into
push
or
rol
adc
sahf
js
fidiv
into
dec
daa
xor
pop
push
dec
xchg
and
or
xchg
sbb
fdiv
or
push
inc
cmp
adc
inc
mov
mov
inc
stc
jmp
lahf
sub
ds
mov
sbb
pop
adc
cmps
fwait
mov
xchg
jle
sar
cmp
int
outs
mov
cmp
and
ins
ret
call
push
cmp
sub
mov
or
shr
adc
ret
inc
mov
pop
rcl
int
sub
push
push
push
sub
jg
fst
stc
mov
pop
jo
xchg
stos
cdq
or
movs
or
sbb
cmp
or
aad
imul
adc
(bad)
xchg
pop
mov
jmp
pop
add
shl
mov
and
dec
adc
div
jne
adc
mov
fadd
not
sbb
dec
adc
in
sbb
xor
mov
rol
test
dec
popa
adc
mov
dec
(bad)
mov
mov
sub
pop
gs
inc
jae
pop
jecxz
rcl
sub
mov
(bad)
imul
sub
push
mov
icebp
into
jmp
aad
jmp
push
push
xor
sbb
jnp
mov
dec
push
(bad)
sahf
push
sbb
shl
inc
aad
nop
dec
jl
sar
inc
lods
je
out
sbb
add
adc
repnz
push
pop
popf
sbb
repnz
cmp
inc
xchg
ja
pop
inc
mov
mov
push
and
sar
xchg
jns
mov
outs
and
sbb
push
push
(bad)
test
adc
pop
daa
skinit
test
pop
das
jge
sbb
sbb
movs
mov
call
mov
arpl
ficom
push
repnz
dec
je
(bad)
push
addr16
jno
and
xlat
jbe
push
xor
daa
dec
xor
add
fs
xchg
jmp
mov
mov
lock
leave
ret
push
pop
gs
popf
mov
jno
dec
xor
ficomp
neg
in
icebp
jecxz
mov
or
sti
jp
mov
test
scas
xor
mov
loop
xor
cmps
pop
push
aas
test
adc
imul
jmp
loopne
pop
loop
inc
and
and
mov
push
lods
fninit
rcr
xor
sbb
mov
push
pop
xchg
mov
aaa
dec
aad
pop
or
jl
sbb
pusha
lods
pop
lds
imul
jge
loopne
mov
les
outs
(bad)
jmp
fadd
shr
jg
pop
inc
sar
xor
fidiv
in
movs
(bad)
xchg
push
loope
xchg
adc
adc
xchg
inc
sub
(bad)
sub
(bad)
push
into
cmps
(bad)
add
cmc
es
push
adc
sub
pop
lds
mov
stos
mov
lds
mov
enter
xor
jbe
out
dec
inc
aaa
push
jae
(bad)
push
lahf
mov
xchg
sub
test
fmul
or
mov
lock
dec
fisttp
(bad)
inc
push
push
add
sub
aad
sar
mov
sbb
dec
cmp
inc
jbe
pop
push
fist
ret
jae
xor
dec
add
sub
xor
popa
xor
lods
enter
dec
data16
cdq
js
neg
dec
das
inc
in
jb
or
and
rcl
test
xor
aas
xchg
int3
mov
es
mul
jb
imul
pop
jl
inc
push
jecxz
jmp
lahf
jo
paddsw
jno
push
cmp
and
pop
and
ss
aad
inc
push
out
mov
mov
pop
jg
ss
xor
mov
add
enter
adc
cs
pop
or
in
jns
sub
aaa
(bad)
ins
xchg
lahf
movs
or
mov
xchg
mov
fsubrp
clc
in
hlt
enter
jg
inc
sub
rol
inc
jnp
cmp
jne
pop
sub
pop
(bad)
inc
movs
into
push
in
pop
sub
lods
les
xor
add
mov
cwde
outs
add
not
xchg
jne
jl
(bad)
mov
adc
dec
enter
jecxz
or
mov
test
cmps
xchg
xchg
or
inc
aad
sar
and
push
and
ja
pop
into
mov
rcl
xchg
adc
sti
dec
and
(bad)
ss
and
cld
xchg
mov
or
sub
mov
and
pop
(bad)
popa
shr
(bad)
fwait
pop
out
mov
pop
or
xor
xchg
mov
lock
push
add
inc
mov
jno
push
sub
mov
pop
jmp
gs
nop
vfmsubadd231pd
loope
das
mov
in
pop
sbb
xchg
popf
mulps
mov
movs
test
add
mov
mov
and
call
ret
hlt
sar
pusha
sbb
add
jns
jecxz
xor
ficomp
pop
mov
ss
inc
sbb
dec
mov
push
and
cld
imul
aas
ret
ucomiss
xchg
popf
xchg
pushf
xchg
mov
mov
bextr
mov
mov
inc
dec
sbb
and
push
mov
dec
sbb
sub
lahf
cli
push
loope
mov
xor
ficomp
fmul
mov
or
pop
outs
js
(bad)
adc
movs
imul
push
mov
dec
fdivr
push
add
and
cwde
fcom
xchg
jge
push
mov
cmp
test
jno
call
push
inc
leave
fld
jg
xchg
or
pop
add
mov
pop
repz
jmp
cmp
ss
xor
pop
shr
inc
mov
repz
in
imul
dec
add
hlt
mov
adc
repz
test
jmp
cli
push
xor
adc
(bad)
adc
mov
test
inc
fstp
dec
ins
pop
in
mov
retf
ret
push
or
jne
xchg
xor
stos
mov
stc
adc
push
dec
icebp
rol
dec
icebp
imul
(bad)
stos
cli
or
outs
mov
movs
pusha
loope
shr
sub
movs
mov
push
push
dec
aad
outs
mov
aaa
push
loop
out
and
outs
addr16
test
sbb
lea
aaa
inc
sahf
sti
test
pop
jecxz
ffreep
mov
js
mov
int3
jle
clc
mov
push
and
idiv
xor
aam
stos
cmp
or
xchg
cmc
mov
inc
call
jg
jg
dec
mov
cmp
mov
cdq
int
pop
jbe
loope
xchg
pop
mov
dec
pop
scas
jnp
fwait
and
xchg
xchg
add
sub
hlt
jl
in
shr
repnz
cs
ret
nop
lock
rcl
daa
add
repnz
sbb
cmp
js
and
push
inc
and
xor
daa
mov
leave
pop
shl
int3
outs
xchg
mov
in
cs
mov
add
xchg
(bad)
aam
dec
or
neg
cmp
pop
mov
xor
mov
retf
pop
xchg
push
(bad)
popa
mov
mov
cmp
ins
icebp
arpl
mov
in
mov
jmp
push
mov
or
xor
sahf
test
mov
sbb
jns
mov
cmp
mov
mov
jp
mov
jecxz
dec
scas
leave
xchg
push
inc
sbb
enter
test
and
push
adc
and
mov
mov
sub
pop
(bad)
or
cmp
push
(bad)
(bad)
fbld
ror
test
and
xchg
mov
and
sahf
mov
sbb
inc
je
hlt
xchg
or
fstp
ret
fwait
dec
(bad)
pop
jg
rcr
push
ja
pop
push
mov
push
sub
pushf
inc
iret
adc
das
lods
adc
fild
add
mov
stc
xchg
adc
push
cs
hlt
jae
jbe
call
mov
icebp
aaa
sar
inc
xchg
jl
or
in
inc
or
mov
fdivr
ficom
jb
test
lea
sub
dec
sahf
mov
jl
ins
popa
cs
xchg
xchg
push
dec
(bad)
rcl
xchg
mov
adc
dec
repnz
repz
or
jg
pop
ret
shr
scas
sub
stos
jmp
pusha
push
dec
sbb
lods
xchg
(bad)
movs
pop
test
fucomip
dec
(bad)
adc
shr
cmc
iret
xchg
in
lods
cmp
rcr
jns
sub
jl
ja
popf
mov
(bad)
cmc
push
js
pop
lahf
cmp
jecxz
sbb
adc
ins
dec
test
xchg
shr
repz
(bad)
push
mov
lahf
ret
xor
aam
inc
jns
repz
fdivr
mov
jp
test
mov
jbe
js
add
mov
push
jmp
push
push
or
(bad)
fsub
mov
frstor
(bad)
xor
xor
std
jmp
aaa
shr
arpl
mov
add
dec
jno
inc
mov
pop
test
push
jle
mov
mov
pop
pop
aaa
icebp
jmp
call
mov
dec
adc
cmp
mov
xchg
push
and
sbb
mov
jl
sbb
repz
and
adc
lods
mov
cwde
test
test
ror
sub
mov
dec
mov
dec
dec
push
arpl
ja
and
ret
cmps
clc
cmp
cwde
int3
and
inc
sar
mov
sub
aas
retf
test
dec
pushf
adc
sub
mov
fwait
push
es
fadd
xchg
test
sbb
mov
(bad)
mov
aas
and
pop
pop
jns
push
mov
inc
jno
out
sbb
sbb
test
fwait
and
cs
push
or
dec
push
xchg
dec
add
ins
mov
jg
jns
xchg
je
or
leave
or
mov
lods
movs
es
popf
daa
std
jb
adc
push
aad
jmp
inc
mov
mov
mov
int3
cmp
xor
stos
mov
sub
stos
fnsave
sub
ficom
push
repnz
cmp
test
xchg
and
ja
cdq
icebp
pop
ret
mov
mov
outs
adc
jp
ror
rcl
pusha
in
nop
sub
aad
dec
jge
or
or
ins
mov
repnz
pop
dec
icebp
and
pop
aam
clc
cwde
imul
jno
cs
mov
je
sbb
fist
rcr
xchg
xchg
ins
(bad)
mov
mov
(bad)
add
(bad)
xor
jmp
mov
fstp
inc
enter
fldenv
dec
(bad)
call
leave
mov
mov
dec
shr
jno
inc
jle
fimul
sbb
sub
retf
shld
lods
xor
test
dec
cli
out
out
sbb
inc
cli
je
(bad)
jns
xor
mov
jb
push
sub
xor
mov
fiadd
movs
pop
sub
inc
cmp
pop
sub
out
movs
add
pop
in
outs
push
enter
dec
mov
push
popf
test
mov
jnp
adc
push
jne
jmp
bound
push
mov
out
inc
mov
cmp
call
ret
je
xor
stos
xor
adc
cmps
jae
fldcw
dec
das
push
cmps
scas
stc
data16
and
or
push
pop
or
outs
or
test
mov
adc
add
jns
dec
loopne
cmp
xchg
sbb
ja
jmp
inc
cmp
push
repz
dec
out
push
jecxz
in
and
or
dec
setle
into
rcl
mov
out
jno
fbstp
mov
and
popf
push
adc
dec
test
test
dec
cmp
bound
arpl
lea
retf
adc
xchg
and
sbb
out
ins
fwait
mov
xchg
push
repnz
ins
sbb
sbb
jns
test
outs
xor
add
loop
pusha
mov
xchg
jge
add
call
lock
pushf
sahf
pusha
cmps
xlat
inc
inc
lods
xchg
div
lods
adc
xchg
nop
sbb
adc
mov
add
jae
or
arpl
(bad)
pop
(bad)
shl
jmp
imul
movs
xlat
dec
idiv
daa
into
imul
jo
pop
out
ret
mov
call
mov
push
xchg
mov
fimul
ss
jo
lock
in
popf
mov
mov
xlat
ins
(bad)
cwde
bnd
or
push
cmp
scas
sahf
mov
cmp
(bad)
hlt
shl
inc
fs
dec
sbb
mov
cld
shl
adc
imul
cdq
into
scas
jno
jmp
pop
ret
repz
xlat
add
test
aam
or
neg
xor
adc
enter
push
adc
lea
and
movs
xor
sbb
stos
sub
retf
and
fwait
pop
xor
imul
push
push
xchg
loopne
mov
imul
int3
popf
xchg
ja
clc
xchg
jb
dec
jnp
cmp
iret
call
lea
cmp
mov
addr16
shr
add
ins
adc
mov
arpl
xchg
xor
jae
pop
ss
fcomp
bound
lea
xor
cmps
pop
repnz
push
je
pop
cli
dec
in
(bad)
pop
repz
retf
push
lods
into
cmp
popf
or
mov
rol
cmovns
cmp
ficomp
sbb
push
shr
test
ss
les
int
or
sub
xchg
sbb
adc
mov
rcr
or
out
fcmovnbe
pop
inc
jmp
pop
add
cmp
stc
cli
hlt
pop
add
shl
dec
nop
(bad)
lods
leave
jmp
jb
cli
js
out
cwde
daa
out
test
push
pop
(bad)
call
lahf
test
test
mov
inc
rol
mov
pop
retf
ins
sti
in
dec
pcmpeqd
sbb
stc
jmp
icebp
rcr
xchg
(bad)
adc
scas
or
iret
lock
dec
mov
sub
jo
jns
push
push
or
aam
adc
hlt
aaa
aaa
out
test
mov
pop
inc
push
adc
mov
iret
push
mov
push
movs
pop
repnz
(bad)
sub
fld
xlat
dec
rol
jbe
(bad)
jmp
add
jb
cmp
dec
xchg
(bad)
inc
cmp
inc
hlt
pop
aaa
aas
sbb
mov
and
mov
mov
sub
(bad)
fnstenv
arpl
mov
sbb
push
add
loope
sbb
mov
ss
lods
add
sub
mov
aad
adc
lods
(bad)
fnstsw
and
xchg
loop
cmps
and
lea
fisttp
pop
cmp
jecxz
or
jp
icebp
fstp
(bad)
mov
dec
fsubr
and
xchg
mov
and
dec
mov
mov
pop
or
mov
mov
push
sub
(bad)
outs
in
pop
mov
ds
push
pop
les
out
and
ffreep
aad
adc
and
addr16
mov
fsub
dec
add
cld
hlt
pop
fs
sub
xor
(bad)
ficom
stc
pop
xchg
xchg
repnz
sub
imul
add
ficomp
frstor
jg
xor
inc
jne
xchg
in
enter
aam
ret
jo
rcl
dec
int
stos
add
rcl
rcr
pop
movs
pop
cdq
add
inc
lods
dec
popa
gs
adc
dec
sub
sbb
add
movs
leave
mov
inc
or
ds
mov
xchg
push
xor
rcl
mov
clc
shr
scas
and
les
xor
fsub
or
sub
call
in
(bad)
cs
call
ficomp
imul
rcl
js
or
mov
jb
sub
add
dec
call
cmp
sub
xchg
ins
mov
cmp
hlt
cmp
jne
mov
mov
repz
mov
ror
or
popf
adc
fs
inc
lock
mov
cld
std
dec
sbb
dec
dec
data16
movs
int
sbb
push
aad
jne
push
add
xchg
mov
(bad)
outs
ss
cmc
ins
adc
mov
push
or
pop
cmp
pop
pusha
lock
scas
mov
sub
fisttp
jecxz
jg
ret
(bad)
hlt
loopne
or
test
dec
xor
scas
and
push
enter
adc
mov
inc
sub
loope
scas
xor
(bad)
test
jmp
(bad)
aaa
fadd
and
daa
and
jnp
(bad)
mov
jl
dec
jg
movs
jl
dec
imul
movs
sbb
adc
(bad)
popf
das
mov
mov
mov
je
cwde
jnp
idiv
mov
neg
jae
or
or
sbb
mov
mov
push
mov
push
pop
scas
cwde
shl
test
lods
mov
inc
mov
xor
mov
jmp
xchg
fsub
mov
loop
xor
mov
icebp
jl
loope
mov
repz
jns
xor
mov
push
inc
ja
jecxz
aad
jmp
gs
loope
rol
pushf
mov
push
sub
(bad)
jp
pop
rcl
pop
push
(bad)
and
clc
xchg
pop
mov
pop
fistp
push
or
int
xchg
sti
xchg
xchg
sbb
mov
pop
mov
aaa
test
imul
dec
idiv
hlt
cli
dec
sahf
daa
sbb
mov
popa
ins
ins
arpl
inc
lea
mov
call
arpl
sub
dec
inc
stc
push
outs
cmp
inc
cmp
fldenv
or
inc
push
call
fnsave
push
pop
sub
ja
enter
cli
mov
mov
sub
ins
mov
(bad)
rol
sbb
ja
(bad)
icebp
nop
or
inc
xor
jg
int
fcomi
and
mov
lods
out
gs
hlt
mov
or
fldenv
repnz
mov
das
(bad)
in
and
inc
mov
adc
or
jge
jmp
call
ret
les
and
or
xlat
std
rcl
jmp
xchg
sub
dec
mov
or
mov
movs
pop
xlat
punpcklbw
jle
push
clc
cdq
sbb
fsubr
es
fmul
xchg
movs
(bad)
fdiv
sar
(bad)
hlt
sub
mov
repnz
fst
mov
mov
in
push
nop
outs
push
xchg
jp
fist
xchg
adc
mov
jno
test
pop
aas
ja
cld
std
sar
and
mov
xor
out
adc
xor
out
push
rcl
aad
inc
xchg
lods
mov
mov
bound
xor
hlt
daa
dec
fadd
xchg
cmp
xor
and
jl
dec
ds
call
adc
push
cmps
pop
neg
adc
mov
and
repz
pop
sub
arpl
sti
mov
push
dec
jmp
xor
shl
xor
clc
popf
lods
push
pop
out
push
imul
data16
lds
ins
mov
push
outs
cld
mov
rcl
or
out
(bad)
push
call
das
add
dec
xchg
push
xchg
outs
jmp
or
mov
popa
cld
mov
gs
xchg
imul
or
mov
sbb
(bad)
sub
lea
icebp
popf
rol
arpl
icebp
mov
bound
rol
(bad)
fbld
sbb
pop
call
sbb
ficomp
jne
mov
daa
cmp
lock
fld
push
hlt
inc
cdq
and
ins
out
aaa
mov
pop
adc
mov
adc
pop
out
sub
fisttp
mov
sub
push
mov
jno
xchg
loop
push
xchg
fsubr
mov
cmp
sahf
outs
and
bound
pop
mov
stos
add
xchg
into
shl
pop
sub
int3
cmps
dec
popf
div
sbb
call
mov
or
inc
pop
sbb
add
adc
test
les
sub
(bad)
pop
movs
stos
push
and
push
cdq
repz
es
fst
cmp
je
mov
ror
pop
icebp
dec
push
in
neg
imul
and
mov
dec
clc
pop
adc
xchg
and
in
xchg
mov
mov
(bad)
(bad)
mov
lds
push
imul
xlat
fdiv
mov
xor
clc
popf
sub
loope
xor
lods
aad
ds
test
leave
je
push
xchg
outs
pop
(bad)
push
mov
cmps
mov
push
aad
and
mov
xchg
mov
mov
cs
popa
jno
jmp
dec
(bad)
push
push
push
pop
ror
cdq
xlat
mov
mov
dec
mov
loop
loopne
in
ret
rol
movs
popf
xchg
mov
push
sub
adc
scas
js
jae
add
cmp
mov
xchg
adc
fisttp
(bad)
push
push
ds
lahf
dec
inc
dec
xor
aad
xor
rol
mov
and
aad
lea
std
pop
sbb
xchg
(bad)
push
outs
stc
repz
add
jmp
xor
pushw
mov
scas
stos
inc
push
shr
out
dec
pop
and
xchg
or
data16
imul
and
jbe
and
cld
bound
cwde
loop
mov
call
loopne
lea
push
test
jnp
shl
mov
call
push
and
(bad)
stc
retf
jns
xlat
mov
les
lds
clc
(bad)
punpckhbw
scas
leave
dec
dec
and
fisubr
push
int
jne
sar
pop
xor
aad
pushf
jo
sbb
mov
cmps
mov
arpl
push
push
test
dec
mov
xchg
jbe
xor
jns
cmps
stos
mov
push
hlt
pusha
jo
dec
add
sub
or
pushf
cld
jecxz
pop
outs
and
dec
(bad)
punpckldq
shl
xor
push
retf
jl
sbb
popa
outs
and
inc
or
int3
mov
sti
scas
inc
pop
push
inc
cmp
dec
sti
lods
cwde
pop
cmp
dec
push
cmp
outs
pop
mov
adc
outs
sbb
dec
jb
jo
cdq
mov
fild
sti
mov
mov
aam
ins
and
sbb
aaa
sbb
xor
sahf
adc
pusha
add
xchg
je
or
pop
cli
outs
addr16
call
sahf
leave
cmp
mov
daa
xor
pop
pop
ja
cmp
in
and
sub
daa
out
and
cmp
adc
lods
lods
out
sbb
out
add
xchg
loopne
repz
or
ret
call
mov
push
pusha
cmp
add
mov
and
pop
and
sbb
(bad)
in
sbb
mov
add
mov
mov
jl
and
out
shr
jne
clc
bound
pop
mov
cmps
adc
jmp
adc
and
mov
inc
push
jnp
push
inc
inc
add
mov
sti
pop
push
sub
repz
repz
mov
movs
out
sbb
fwait
arpl
into
jle
je
mov
and
ja
div
xchg
js
aas
mov
daa
leave
mov
(bad)
fisubr
in
popf
je
xlat
adc
leave
sbb
test
or
ins
ja
add
cs
jno
fadd
mov
jne
cmp
imul
add
inc
fwait
jno
mov
jo
xchg
mov
movs
jne
add
cmp
cs
std
fild
jle
sbb
(bad)
aam
cld
or
in
outs
imul
cli
and
stos
stos
push
jo
outs
shl
mul
sbb
leave
daa
je
adc
pop
(bad)
sbb
pop
and
mov
sbb
inc
lahf
mov
enter
imul
inc
xchg
jge
mov
je
cmp
and
das
pushf
mov
pop
shr
add
mov
xchg
dec
dec
mov
pop
iret
in
adc
int3
pop
pop
cmp
pop
ds
ja
pop
cmp
jb
daa
jb
test
adc
push
add
mov
test
fwait
adc
cmp
push
xchg
xchg
mov
lods
mov
sbb
popa
fs
xchg
inc
stc
enter
add
js
sbb
and
cwde
and
shl
(bad)
mov
out
ret
mov
add
int
mov
push
or
es
inc
int3
in
aam
shr
or
icebp
jo
pop
outs
ins
leave
test
jg
cmc
(bad)
das
fimul
lds
jmp
jns
dec
push
mov
push
and
adc
pop
and
int
lods
xchg
enter
cwde
ins
out
push
push
xchg
mov
stos
lds
jge
pop
and
push
int3
out
cmp
imul
dec
lock
loop
sahf
cmp
add
in
push
loopne
adc
stos
dec
aas
jecxz
mov
mov
fsub
inc
fdivr
and
push
and
inc
xor
fldcw
popf
sbb
mov
movs
bswap
jle
repnz
xlat
pop
mov
or
xor
aam
iret
shr
(bad)
jmp
imul
and
ins
in
pop
jge
fbstp
lock
adc
ds
pusha
push
sub
inc
lea
imul
retf
or
shl
and
dec
dec
sub
mov
popf
stos
jecxz
mov
std
push
and
push
jp
xor
xchg
ds
repnz
ja
cmp
jnp
inc
inc
clc
jg
inc
fnstenv
adc
mov
fwait
out
mov
pushf
mov
pop
pushf
sbb
das
and
dec
mov
adc
xor
movs
lds
xor
loopne
and
and
push
inc
ins
cwde
int
jmp
sar
mov
and
leave
xchg
lods
jno
or
sti
jne
aam
cmp
sbb
mov
and
jnp
push
sbb
sub
mov
sbb
retf
das
aaa
jno
or
cmp
in
pop
rep
mov
cmp
rol
jmp
jecxz
push
inc
fstp
sbb
mov
pushf
in
(bad)
jp
out
mov
test
xlat
mov
sbb
dec
pop
retf
jge
add
out
(bad)
aas
sub
aas
cmp
pop
retf
jbe
bound
xor
icebp
adc
ss
fimul
xchg
and
sub
and
ss
xchg
inc
add
pop
dec
jp
xchg
sbb
jno
mov
iret
sbb
int3
push
shl
test
or
pop
mov
mov
aas
pop
mov
sbb
dec
out
popf
sbb
std
fadd
fcmovne
pop
jae
sbb
stos
ror
pop
stos
call
inc
shl
cmp
loop
xabort
(bad)
rol
mov
jl
cmps
jmp
cli
push
jle
shl
add
xchg
xor
mov
dec
cld
fnstcw
jmp
lods
xchg
xchg
jge
dec
cmp
out
adc
mov
mov
call
mov
cdq
(bad)
lock
cmp
mov
dec
clc
mov
xchg
inc
push
cwde
jp
cmps
stos
xchg
push
rol
jl
loope
inc
jo
test
or
lods
bound
out
pop
out
adc
or
xor
inc
and
adc
and
add
outs
(bad)
cmp
add
jle
(bad)
fist
popf
mov
nop
mov
in
shl
sbb
mov
jae
sbb
mov
add
inc
dec
ins
das
add
cs
adc
cmp
sub
pop
bound
loope
outs
(bad)
mov
fiadd
sbb
test
dec
scas
bound
scas
inc
pop
hlt
cmp
(bad)
jne
and
add
rcpps
movs
mov
mov
nop
popf
mov
dec
test
xchg
xor
sbb
out
mov
std
jge
and
jno
inc
dec
lea
xor
mov
(bad)
in
xor
adc
in
mov
or
inc
xor
in
xchg
hlt
repnz
imul
cld
pop
fild
pop
fdiv
int
xchg
mov
mov
call
outs
jmp
cmp
loop
dec
scas
mov
iret
mov
adc
mov
std
add
and
sub
lahf
and
adc
or
movs
dec
jbe
scas
fucomip
push
aam
outs
dec
inc
outs
sub
ss
xor
sti
add
lods
aas
mov
enter
sub
inc
cmps
mov
lds
mov
in
movs
sub
cmc
jg
or
add
xor
jb
dec
loope
dec
adc
mov
loop
push
xchg
fnstenv
leave
clc
loope
daa
push
mov
fimul
movs
repz
ins
push
xor
push
popf
sub
xor
and
cmp
inc
div
test
mov
xchg
xchg
ja
(bad)
and
mov
out
pop
jno
add
jmp
jmp
adc
dec
rol
adc
add
xchg
xchg
shr
bound
mov
adc
push
cli
push
popa
xchg
or
mov
idiv
jp
mov
sub
fmul
ja
mov
ret
ins
or
adc
jmp
adc
call
jbe
cmp
push
and
in
call
lock
xchg
xor
mov
test
mov
cmp
or
dec
jmp
jge
(bad)
mov
mov
stos
je
push
int3
mov
sub
xchg
scas
(bad)
mov
cmp
cmps
pop
mov
into
mov
jp
adc
sub
mov
pop
push
mov
jns
sti
dec
sti
pusha
ins
sar
lods
sbb
test
mov
jg
daa
pop
or
nop
mov
mov
and
push
(bad)
cmp
sti
jg
pushf
dec
mov
jae
mov
mov
(bad)
inc
xchg
imul
jae
mov
push
repnz
loopne
icebp
mov
cmps
out
mov
fcomp
ds
in
nop
xchg
pop
adc
cmovbe
inc
jnp
pop
push
stc
mov
push
ss
cld
or
scas
mov
mov
jp
adc
(bad)
cli
into
out
fld
std
xor
mov
mov
aam
ins
das
jge
in
xor
or
push
dec
mov
fcomp
lahf
scas
xchg
push
pop
cs
push
pop
and
shl
dec
jae
dec
cmp
dec
and
pusha
imul
addr16
ds
pop
adc
scas
inc
fisttp
lea
enter
neg
push
mov
and
fsubp
aas
push
movs
jmp
pcmpeqd
jp
add
xchg
aas
jmp
mov
retf
jg
loope
xor
jecxz
hlt
add
(bad)
in
inc
cli
cmp
popa
push
sbb
dec
rol
dec
(bad)
jecxz
popf
jmp
cmp
scas
ss
pop
stc
jp
or
xchg
adc
mov
mov
xchg
xchg
add
xchg
or
fidivr
and
cmps
nop
add
xor
lds
mov
mov
data16
mov
or
add
shl
arpl
sbb
ret
sub
ins
sbb
mov
inc
pop
sub
jmp
into
mov
jne
cli
add
retf
mov
add
test
std
aaa
test
jl
mov
nop
adc
dec
repz
aam
xor
and
loopne
lahf
lds
xchg
test
nop
mov
leave
mov
add
mov
retf
cmps
mov
mov
mov
xchg
(bad)
call
(bad)
in
(bad)
scas
stos
mov
in
inc
xlat
pop
(bad)
xchg
mov
repz
(bad)
pop
xor
and
popf
xchg
mul
test
push
imul
push
fcomp
xchg
sub
mov
std
mov
arpl
xor
aad
retf
inc
jp
ins
sti
ins
fcmovu
xor
sbb
push
jp
mov
cld
inc
push
add
inc
lds
les
aaa
ror
inc
mov
and
add
dec
fs
fcomp
test
jecxz
cs
and
paddusw
scas
and
cmp
ret
fistp
pushf
mov
call
push
mov
cmc
cwde
movs
mov
in
addr16
inc
loope
sub
test
aad
gs
cmp
xchg
stos
mov
repz
pop
dec
bound
rcr
adc
ins
(bad)
jg
jecxz
sub
(bad)
test
jmp
mov
xor
lods
movs
add
xor
cmp
jns
mov
outs
pop
add
(bad)
push
cmp
mov
loopne
sbb
mov
inc
ret
inc
pop
xor
hlt
xor
scas
in
add
dec
push
xor
popf
and
push
push
lahf
xchg
or
push
rol
ss
fwait
arpl
rcl
repnz
mov
outs
out
pusha
inc
dec
xor
popa
mov
movs
add
ret
mov
mov
ja
test
clc
push
mov
enter
pop
shl
inc
pop
(bad)
out
repz
add
outs
sub
lods
mov
push
inc
mov
pop
xchg
xchg
fwait
inc
out
mov
out
xchg
punpcklwd
push
stos
aad
pop
and
out
xor
inc
gs
out
push
mov
mov
outs
pop
mov
cli
mov
inc
cmp
jg
add
mov
retf
fdivrp
cmps
scas
aad
jmp
fist
out
les
mov
xor
jbe
xchg
push
movhlps
jne
inc
jecxz
loope
add
repz
pop
and
out
repz
cld
jle
adc
jmp
push
rol
aad
sbb
int
sbb
test
mov
cmps
mov
into
mov
or
sbb
fisttp
sub
loopne
pop
xor
frstor
outs
imul
nop
dec
xchg
test
sahf
sub
mov
jne
sar
(bad)
mov
mov
stos
adc
popf
pop
jnp
pop
xchg
jecxz
shr
dec
or
xchg
cmps
outs
jno
or
push
jo
aad
mov
add
or
jns
scas
or
frstor
test
pushf
test
jb
adc
test
(bad)
std
jmp
mov
leave
sbb
cli
jae
inc
and
aas
dec
popa
mov
cmp
aaa
adc
fnstenv
std
dec
cdq
cmc
add
sub
sahf
(bad)
and
sbb
and
or
adc
in
cmps
ja
sbb
daa
adc
cmp
ja
fdivr
lea
push
sub
outs
ja
push
inc
ins
int3
setae
or
arpl
aas
mov
les
or
dec
jne
lea
mov
repz
mov
push
jmp
sbb
inc
scas
lea
adc
nop
loope
mov
inc
les
faddp
mov
in
stc
jmp
mov
fbstp
fistp
icebp
xchg
pushf
cwde
out
jnp
sbb
in
imul
int3
int
sbb
sub
int
dec
xchg
mov
pop
dec
js
jp
push
mov
fmul
dec
and
ins
jecxz
stos
push
pop
ds
cmp
hlt
or
and
pusha
enter
ficom
ja
ret
jmp
mov
ss
cmp
dec
add
xor
add
sub
mov
cmps
xor
in
mov
or
xor
push
scas
xchg
aas
xor
and
out
fsub
les
icebp
retf
(bad)
(bad)
lods
or
push
in
lds
adc
mov
std
lods
adc
es
jmp
xchg
or
mov
lock
in
or
xchg
int
mov
jae
out
and
stos
xor
outs
pop
adc
shl
out
mov
sbb
fldcw
retf
adc
in
popa
push
aas
cdq
sbb
cmp
das
dec
std
sbb
test
inc
sub
mov
xor
mov
inc
xor
sbb
test
shl
into
int3
sar
movs
push
xchg
cmp
push
(bad)
pop
in
stos
xchg
inc
xor
ret
sbb
(bad)
jp
rol
out
popa
adc
ss
aad
cmp
mov
jle
push
dec
leave
mov
mov
sti
cmp
std
arpl
cmp
mov
pop
push
jmp
sti
mov
or
(bad)
retf
xor
mov
loope
std
jp
xchg
es
nop
ja
or
pop
mov
pop
xchg
sub
pop
dec
jne
push
(bad)
std
loop
or
repnz
xlat
xchg
xor
push
les
call
jmp
(bad)
sbb
and
cli
push
stc
bound
pop
mov
inc
in
aam
std
push
inc
or
xor
sahf
push
add
fild
inc
pop
push
clc
and
and
fadd
fwait
and
add
stos
loope
call
dec
ficomp
jecxz
dec
mov
outs
(bad)
sahf
test
mov
inc
or
mov
ja
cmp
call
add
hlt
lds
(bad)
or
add
(bad)
or
push
pusha
js
inc
call
movs
cmp
jne
sbb
jae
rol
sub
jg
(bad)
retf
adc
lods
add
dec
fmul
pop
cmp
fdivrp
fisub
inc
pop
cmc
add
adc
sti
add
pop
and
xchg
mov
push
add
sbb
push
dec
dec
push
mov
fs
push
xchg
in
xor
adc
shl
push
daa
shl
mov
cli
push
mov
sti
mov
out
lds
loopne
into
xchg
int
mov
jp
fwait
test
fbld
lods
retf
shl
adc
stos
mov
in
xor
test
mov
adc
bswap
xchg
pushf
pop
xchg
inc
sbb
mov
bound
push
ins
or
sbb
jmp
push
inc
inc
ficom
ins
or
fild
cmovg
add
das
ss
xchg
test
jecxz
aad
jg
mov
out
icebp
nop
in
rcl
pop
mul
into
jl
jl
idiv
call
ja
(bad)
jge
jno
cdq
nop
xor
sar
sbb
xor
out
les
mov
cmp
les
or
xor
fnsave
popa
cmp
test
xchg
loope
cmps
addr16
inc
aas
xor
adc
shl
test
mov
jmp
dec
bound
mov
mov
mov
test
ret
scas
sahf
adc
scas
sbb
fmul
add
jg
and
mov
lods
sbb
int
jne
ret
mov
cmps
dec
sub
inc
test
or
jnp
pop
dec
sbb
fmul
cmp
in
(bad)
dec
sbb
aaa
sbb
clc
inc
dec
ficomp
mov
xchg
xor
jae
nop
(bad)
daa
inc
adc
pop
mov
or
fs
xor
jp
and
test
leave
enter
stos
test
out
mov
xchg
loope
xchg
cwde
call
in
fidiv
xchg
test
xor
dec
mov
adc
stos
popa
push
mov
ins
bound
and
or
dec
fdiv
ret
imul
cmp
sub
pop
call
adc
add
xchg
inc
popa
repnz
idiv
or
mov
rcl
aaa
jp
sbb
lods
stos
scas
jnp
fs
stos
les
mov
fld
out
and
jb
inc
icebp
retf
push
xor
xchg
cmp
xlat
push
sar
addr16
jb
mov
push
inc
sbb
shr
cdq
mov
(bad)
adc
push
and
jmp
outs
lock
jge
(bad)
je
push
(bad)
jmp
sti
push
retf
pop
cmps
(bad)
xlat
sub
jg
dec
pop
mov
cli
ins
lahf
test
hlt
loope
cwde
mov
sub
test
jp
dec
push
xor
dec
popf
imul
mov
mov
cld
bound
xchg
add
pop
jg
jns
mov
sbb
shl
xchg
ret
xchg
sbb
sub
out
add
les
mov
pusha
cmp
pusha
fisub
sub
rol
fstp
jnp
nop
cmp
fwait
sub
xor
lods
sub
push
xor
push
js
cwde
xchg
dec
(bad)
fistp
aas
cmp
cmp
push
and
pop
fcomp
lds
adc
mov
inc
rcr
js
or
adc
lods
push
push
sub
push
jnp
sub
push
adc
sbb
add
fdiv
xlat
mov
xor
test
shr
js
push
push
ss
push
loope
into
je
mov
or
push
call
mov
xor
xchg
sbb
add
sti
push
dec
cmc
cmc
sbb
(bad)
cmp
push
mov
sahf
enter
xor
add
bswap
in
movs
xchg
test
rcr
push
test
fcmovnbe
jge
(bad)
xchg
js
hlt
in
xor
adc
ror
stos
mov
fsubp
lea
scas
mov
push
fwait
mov
adc
sub
fucomip
imul
inc
ret
xor
sbb
inc
fst
push
jmp
jo
jb
jmp
jecxz
int
or
sar
mov
retf
jbe
jmp
retf
mov
sbb
pop
fptan
std
jne
out
and
in
pop
cmp
jo
sti
ja
fwait
xor
retf
mov
jmp
js
call
add
cmp
cmp
sbb
loope
inc
xchg
ret
shr
or
sbb
or
lahf
pop
ss
lods
xor
mov
xor
sub
push
stc
jmp
sub
jp
jmp
push
jnp
mov
dec
cmp
loop
and
mov
loopne
stos
jp
push
dec
push
clc
adc
call
xlat
pop
rcl
adc
mov
xlat
mov
outs
retf
neg
add
test
pop
ds
add
cmp
ja
add
je
stc
ret
mov
lea
es
call
and
sar
jo
mov
outs
push
jno
outs
arpl
and
loop
and
imul
pop
rcr
sbb
imul
fbstp
popf
fistp
add
cwde
mov
(bad)
push
xchg
push
jae
sahf
mov
xchg
push
mov
cs
test
scas
and
push
(bad)
cld
lock
mov
gs
and
jmp
push
test
enter
pop
(bad)
cmps
jl
sub
popa
cmp
pop
and
pop
mov
into
cmps
popf
and
inc
push
ss
ret
cs
adc
push
jae
adc
daa
inc
fld
fnstcw
mov
push
movs
jle
jecxz
popa
or
mov
ja
mov
pop
and
out
cdq
pushf
mov
loop
pop
pop
jb
or
jbe
fcmovbe
xor
test
mov
xchg
pop
push
pop
out
ins
shl
in
mov
dec
les
adc
and
sahf
mov
sbb
mov
mov
jb
or
je
out
fadd
add
(bad)
js
lds
out
push
pop
fild
pop
pop
and
sub
out
retf
lahf
std
push
xchg
repz
mov
and
mov
xor
xchg
push
imul
aaa
inc
lea
or
mov
ins
adc
push
jl
xchg
sub
inc
je
test
sti
imul
push
lods
xchg
mov
mov
call
jae
(bad)
bound
daa
rcl
in
enter
(bad)
push
xchg
xchg
test
xlat
inc
adc
sbb
aad
ficomp
mov
ins
xchg
cmp
(bad)
clc
xor
cli
in
jmp
movs
cmp
in
movs
xlat
shl
sbb
fst
ds
les
fcmovnbe
sbb
js
mov
jb
es
movs
retf
rol
push
sub
ror
jecxz
ins
dec
jne
xchg
sbb
dec
xchg
fmul
fld
inc
out
adc
icebp
add
mov
or
js
or
stos
add
mov
mov
push
push
sub
pop
jp
inc
test
mov
fnstenv
jg
add
les
movs
add
clc
jmp
cmp
(bad)
jmp
es
jae
pushf
lea
add
mov
dec
xor
or
repz
into
sbb
aas
cdq
push
jle
pop
arpl
sub
lea
test
add
add
clc
jno
xor
retf
test
scas
xchg
dec
(bad)
ror
pop
lods
(bad)
sub
mov
dec
fldcw
jbe
bound
(bad)
mov
ins
inc
pop
retf
pop
dec
mov
cmp
js
push
mov
outs
xchg
mov
imul
mov
in
adc
mov
sbb
pop
sub
inc
xchg
bsr
popf
pop
call
and
sub
test
or
test
ret
adc
xchg
sbb
jg
push
sbb
sub
add
ins
(bad)
rcl
retf
aaa
add
jbe
mov
daa
pop
and
sbb
mov
jbe
rcr
cs
rcl
js
dec
jbe
xchg
dec
sub
popf
mov
ins
sar
stc
retf
sub
and
test
fldlg2
iret
xor
mov
xchg
(bad)
nop
lods
mov
(bad)
iret
xchg
clc
int3
ficomp
in
je
nop
adc
xchg
sbb
cmp
add
ins
cli
outs
movs
and
dec
add
sbb
cmp
adc
push
xor
in
xor
int
inc
call
sub
ret
int
jecxz
mov
in
adc
adc
or
outs
mov
push
pop
out
stos
xchg
jo
pop
cmp
sub
push
xchg
adc
jge
jae
sub
mul
fdivr
int3
popa
sbb
in
jno
(bad)
push
out
jmp
sbb
lods
dec
hlt
call
mov
pop
call
xchg
sbb
sti
pop
in
jo
fidiv
dec
out
xchg
add
cmp
dec
mov
adc
fild
cld
aas
dec
xchg
jne
pop
cmps
xor
or
fnsave
shr
out
pop
cwde
neg
iret
sub
repz
pop
xchg
aas
jns
push
jbe
adc
fs
jbe
add
in
outs
lock
sub
cmc
xchg
xchg
dec
aad
dec
jae
iret
sbb
mov
mov
and
jmp
(bad)
jecxz
sbb
movs
enter
xchg
loopne
pop
jne
mov
push
outs
mov
fiadd
ror
jmp
jge
(bad)
shr
cmps
jge
aad
mov
push
jle
jecxz
sti
jmp
jmp
hlt
sub
daa
sbb
(bad)
jne
popf
(bad)
imul
loop
pcmpgtd
add
enter
mov
pop
sar
inc
and
aam
jle
shl
jmp
mov
xchg
in
xchg
push
mov
sbb
sbb
retf
jns
sub
test
es
cdq
movs
mov
rol
or
pop
fistp
and
dec
enter
push
inc
clc
jmp
je
sahf
fdivr
int
dec
xchg
mov
mov
ins
ds
outs
mov
add
adc
fnsetpm(287
test
call
xlat
jecxz
(bad)
sub
dec
jge
pop
pop
or
mov
arpl
sbb
xchg
mov
jo
sahf
lds
push
cmps
mov
push
sub
into
mov
mov
mov
(bad)
test
aad
jl
inc
mov
and
pop
xor
leave
das
test
dec
cs
mov
test
popf
add
push
in
sub
adc
jp
cmp
mov
in
fistp
mov
lods
gs
ret
dec
outs
enter
jge
push
dec
fist
mov
adc
pop
and
sub
pusha
aam
scas
pop
or
nop
mov
add
imul
jae
inc
arpl
icebp
cs
(bad)
sub
loopne
sahf
(bad)
into
jno
and
cmp
jmp
(bad)
shl
imul
jmp
movs
or
pop
les
int
cld
outs
aas
mov
fld
mov
fsubr
(bad)
cmc
fcomp
stos
pop
adc
jae
add
enter
shl
sub
(bad)
aam
xchg
mov
stos
pop
ds
and
and
pop
mov
iret
mov
ds
addr16
cld
cs
push
int
lahf
dec
cmp
(bad)
mov
push
es
arpl
mov
test
ins
loop
xor
in
in
jmp
(bad)
sub
call
jnp
add
loopne
mov
mov
repz
hlt
inc
frstor
dec
add
out
add
icebp
and
imul
hlt
lea
dec
retf
sti
push
fstp
xor
jmp
dec
sub
and
popa
lock
dec
(bad)
lods
dec
test
rol
call
das
retf
cmpps
rcr
cmp
scas
mov
add
push
rcr
rol
sbb
aas
shr
ret
xchg
test
test
clc
(bad)
fwait
popa
fidiv
outs
pusha
mov
sbb
out
ds
and
in
adc
cmp
cmps
mov
scas
dec
mov
sub
pop
mov
mov
loope
adc
jo
xchg
add
mov
jo
jmp
shr
test
add
or
xor
jge
pop
and
xor
push
pop
mov
adc
sti
jge
fdivp
test
xchg
pop
push
inc
jecxz
pop
push
ins
retf
shl
pop
inc
(bad)
mov
dec
xor
or
or
dec
jmp
stos
leave
xchg
sub
sub
mov
dec
jno
xchg
leave
and
jmp
xor
lock
xor
out
rcr
shl
cmp
cmp
lahf
push
pop
push
mov
outs
icebp
jecxz
shl
lods
xor
hlt
dec
call
shl
ins
ins
sbb
push
rol
cmp
not
sbb
sub
scas
xor
aad
(bad)
push
mov
int
xor
ins
pushf
xchg
int3
xchg
nop
icebp
jp
mov
and
xchg
xchg
mov
adc
cs
daa
stos
add
and
sbb
adc
add
push
sub
mov
mov
(bad)
les
xchg
ins
or
jge
sbb
mov
arpl
mov
out
loopne
mov
sub
fistp
movs
adc
movs
pop
sahf
(bad)
push
or
retf
ret
gs
mov
push
mov
scas
mov
loopne
or
popf
leave
ins
xchg
pusha
jo
cwde
and
mov
gs
inc
out
inc
inc
pop
cmp
push
shl
push
in
push
(bad)
dec
sbb
cmp
cld
movs
sti
(bad)
xchg
xchg
mov
sbb
in
add
adc
pop
dec
xor
nop
xlat
inc
inc
adc
rcl
(bad)
shl
pop
inc
int3
adc
js
or
fisubr
shr
lods
pop
fwait
pop
or
pop
and
call
int
xor
dec
rcl
dec
xchg
outs
and
dec
arpl
aam
popa
push
xor
push
nop
loope
mov
xchg
(bad)
iret
cmp
popa
jmp
xchg
and
arpl
or
in
into
mov
push
mov
sbb
push
xor
in
mov
es
dec
or
int3
xchg
mov
pusha
dec
inc
shl
pop
push
add
jne
xchg
imul
adc
add
stos
out
xor
lods
test
sbb
mov
and
cdq
call
outs
dec
cmp
mov
pop
dec
jnp
or
aad
adc
push
daa
hlt
pop
or
push
rcr
aas
nop
mov
or
push
sub
cwde
lahf
test
stc
loop
inc
mov
imul
inc
retf
aas
mov
mov
ds
jl
jp
out
xchg
lds
or
jmp
mov
jg
arpl
jg
hlt
xor
repnz
jnp
mov
mov
cmp
xor
ficom
in
pop
jae
push
sar
mov
sti
(bad)
lock
cwde
jp
cmp
mov
cmp
sbb
fld
cmps
repnz
imul
jb
shr
mov
pop
dec
push
enter
dec
loop
es
fs
loop
pop
jne
mov
add
aam
pop
and
dec
jge
out
(bad)
ja
ror
pop
and
icebp
(bad)
std
ret
push
out
xor
mov
iret
imul
pop
sbb
addr16
xor
sub
pop
mov
add
stos
sar
lahf
xor
sahf
xlat
das
aas
dec
push
pop
pop
repz
adc
mov
test
add
push
fisub
sbb
mov
sub
jae
(bad)
fist
pop
ins
mov
lods
in
push
les
fld
mov
dec
daa
fbld
adc
jbe
pop
mov
or
dec
fstp
int3
inc
pusha
jbe
jge
stos
stc
ret
pextrw
sub
xchg
pop
mov
inc
stc
aad
sbb
icebp
and
push
jge
outs
mov
xor
push
aam
mov
push
and
loopne
push
and
adc
mov
(bad)
xor
mov
pop
mov
scas
push
test
out
sub
pminub
scas
in
mov
(bad)
or
das
and
jo
mov
inc
or
int3
adc
dec
inc
stos
mov
dec
mov
push
in
dec
jmp
inc
mov
sbb
int
int3
sbb
out
add
test
gs
jbe
jmp
js
inc
sub
cdq
ret
mov
cdq
(bad)
xor
cmp
pusha
fcmovu
cmp
mov
enter
pop
push
out
pop
outs
jns
inc
outs
ror
aam
push
repnz
addr16
pop
push
iret
sub
fild
add
adc
pop
sub
inc
add
pop
(bad)
jmp
in
mov
xchg
push
inc
arpl
js
js
xor
ja
mov
jle
xchg
jge
test
aaa
sub
fnstcw
jbe
mov
repz
inc
data16
stc
scas
sbb
call
jmp
mov
cmp
add
or
sub
push
mov
stos
sti
pop
sub
test
test
or
add
cld
ror
mov
repz
sbb
dec
bound
xlat
cs
sub
mov
shr
pop
nop
mov
(bad)
call
jg
lock
scas
scas
test
jecxz
pushf
mov
adc
shl
mov
(bad)
xchg
mov
pushf
mov
add
test
lods
sar
dec
enter
pop
leave
mov
inc
cmp
mov
das
pop
fs
sub
xlat
add
stos
outs
adc
mov
fmulp
add
xchg
inc
inc
std
(bad)
clc
(bad)
nop
(bad)
pop
mov
jecxz
push
sbb
cdq
ins
cmp
fistp
ja
push
in
(bad)
jp
jne
dec
mov
inc
mov
gs
dec
jle
mov
test
dec
ret
dec
cmp
ja
mov
fwait
add
xlat
mov
test
dec
pop
pop
pop
pop
(bad)
push
push
rcr
out
adc
addr16
inc
and
mov
div
sti
mov
dec
jae
arpl
cmp
call
arpl
(bad)
push
dec
jmp
aad
push
ja
jno
push
xor
lods
add
mov
sahf
or
retf
sub
(bad)
jmp
push
mov
inc
aas
sbb
pop
cld
xor
enter
in
fdiv
push
sub
push
mov
scas
aam
ja
add
push
cmps
bound
enter
mov
jae
jmp
ins
movs
ret
fiadd
push
and
sub
xchg
inc
inc
jle
jmp
add
xor
in
add
jmp
js
jmp
fadd
ins
mov
xor
imul
cs
imul
test
inc
rol
sar
fisubr
push
jne
adc
push
lods
pop
es
inc
lahf
cwde
push
cmp
push
pusha
pop
mov
pop
jle
jecxz
mov
test
imul
dec
repnz
lods
ja
pop
outs
and
or
jecxz
adc
jg
inc
mov
loope
add
cmp
xor
ret
repz
and
bnd
and
lock
cmp
je
sub
inc
rep
popf
xor
fmul
jne
int3
adc
or
sub
pushf
je
in
cmp
stc
cli
mov
addr16
mov
rcl
sub
and
xchg
das
dec
or
pop
cwde
mov
pop
push
fld
ret
sub
mov
jbe
pop
lea
das
ret
sbb
add
and
scas
les
imul
jle
in
add
pop
ins
xor
ja
clc
or
inc
ja
test
xlat
es
push
sbb
xor
mov
icebp
cdq
jne
lds
sub
mov
dec
inc
shr
adc
mov
push
fwait
xor
lods
xchg
(bad)
push
jae
cmc
jbe
clc
mov
pushf
xchg
cmovns
or
mov
jne
bound
add
push
std
test
jbe
movs
pop
imul
ret
(bad)
mov
push
jns
jp
mov
imul
lock
adc
pop
pushf
inc
dec
adc
cli
adc
aaa
repnz
not
xchg
gs
cld
pop
in
dec
cdq
loope
cmp
push
xchg
stos
mov
js
imul
mov
loope
fadd
mov
scas
scas
gs
dec
dec
dec
sbb
retf
data16
pop
movs
mov
dec
fcomp
data16
sbb
add
(bad)
jae
sub
and
ins
popf
aaa
lahf
push
loope
xor
in
mov
jecxz
mov
mov
inc
sbb
sbb
out
mov
sub
imul
jbe
lods
iret
out
test
repnz
jl
mov
ins
xchg
popf
cmp
dec
call
xchg
shl
jp
nop
cmp
fwait
in
stos
mov
mov
inc
enter
adc
and
sub
fild
fadd
sti
adc
clc
out
push
fwait
ret
mov
mov
add
sar
sbb
inc
dec
and
bound
je
pop
scas
int
stos
inc
mov
ds
jbe
add
test
pop
or
mov
add
jnp
xchg
inc
mov
retf
icebp
fcom
xor
jl
jg
(bad)
dec
inc
cdq
xor
shl
dec
sub
in
xchg
or
cmp
mov
sub
and
jp
pop
xor
push
inc
sub
retf
or
fmul
mov
pop
or
in
ds
div
ds
fmul
jge
inc
pop
lahf
cwde
dec
xchg
cmp
shl
mov
fdivr
pop
or
push
cli
popf
je
jb
cdq
push
mov
add
or
xchg
inc
repz
or
inc
adc
inc
or
fsubp
mov
adc
xor
in
xchg
cmc
mov
push
jle
cmps
outs
jns
and
push
push
ret
push
and
into
or
dec
ficom
bound
or
inc
jmp
jge
lock
ins
or
out
js
jmp
test
xchg
stc
fxtract
shl
in
jg
idiv
loop
pop
or
es
push
out
xchg
cdq
out
push
adc
hlt
icebp
fs
mov
ret
xchg
mov
push
jmp
mov
ss
(bad)
cmc
mov
push
(bad)
retf
and
in
sub
(bad)
cmp
call
das
ja
mov
sub
aaa
ja
pop
jnp
pop
mov
test
push
retf
daa
bts
adc
int3
pop
bound
adc
jns
pop
ret
shl
scas
int
jbe
mov
push
push
mov
jmp
cs
or
pop
cmps
stos
data16
jle
xchg
test
xor
cmp
aam
les
add
inc
out
ins
fistp
out
js
pop
fdivr
pop
add
adc
aam
out
mov
test
fmul
jae
adc
out
rcl
pop
mov
sbb
xor
and
pop
nop
inc
neg
mov
sbb
mov
mov
xor
push
cmps
dec
ds
mov
pushw
popf
ret
into
xchg
stos
ficomp
cmc
mov
jno
dec
or
or
outs
loop
dec
hlt
sbb
scas
inc
mov
mov
leave
into
test
sbb
cdq
adc
pusha
(bad)
inc
mov
not
imul
dec
popf
out
aas
xchg
pushf
and
sbb
sub
nop
scas
jnp
add
(bad)
push
repz
and
nop
mov
jb
inc
jmp
jae
sbb
mov
push
mov
adc
add
and
adc
or
mov
stc
jnp
jo
mov
rol
in
fst
cmp
nop
xor
cli
lods
stos
lods
mov
fldenv
dec
outs
in
imul
mov
hlt
enter
jl
fimul
iret
cmp
push
jae
dec
jno
ins
nop
cmp
call
sub
aaa
aaa
bound
xor
sbb
movs
mov
xor
and
(bad)
cmp
fwait
dec
adc
pop
or
pop
sub
dec
hlt
dec
hlt
rcl
les
sbb
pop
sahf
and
jb
mov
mov
or
(bad)
adc
icebp
pop
scas
test
lods
push
dec
sahf
or
dec
mov
sbb
xchg
mov
std
sbb
sbb
sub
cmp
pop
cs
enter
push
ins
nop
mov
and
ror
inc
sbb
mov
cmovg
popa
jns
mov
jmp
sbb
hlt
sbb
(bad)
adc
fwait
add
push
inc
iret
int3
in
add
or
lahf
dec
sbb
shl
adc
mov
retf
movs
and
test
hlt
xlat
add
xchg
dec
dec
jmp
(bad)
fisttp
xchg
add
xchg
in
push
cmp
(bad)
pop
mov
jb
ins
xor
xchg
aaa
jmp
dec
call
xchg
sub
add
cmp
out
pop
xchg
pop
xchg
push
sbb
mov
sub
enter
imul
stos
mov
and
scas
pop
pop
idiv
cmp
aas
dec
add
xchg
pop
sbb
outs
ins
push
cmps
(bad)
lahf
imul
pusha
fldcw
mov
vfrczss
push
outs
adc
pavgw
and
adc
imul
retf
mov
or
dec
lods
mov
jnp
icebp
test
aas
jp
and
push
and
sub
dec
scas
jnp
inc
leave
in
jg
push
xor
inc
in
(bad)
out
shl
cs
dec
and
xlat
sbb
(bad)
cmp
cli
cmp
lods
sub
sbb
pop
push
retf
(bad)
fimul
xchg
cmp
imul
mov
push
das
loope
mov
jae
repnz
inc
popf
dec
sbb
push
neg
mov
mov
out
jno
inc
fist
lds
and
stc
sbb
ins
pop
sub
sub
and
lds
mov
sti
cwde
pop
stos
adc
adc
ret
jecxz
push
sub
add
mov
push
in
lock
and
fisub
jecxz
mov
ror
sub
dec
iret
mov
push
ins
adc
in
adc
or
inc
test
jle
jl
fdiv
test
pop
or
xchg
push
jbe
mov
in
stc
inc
and
mov
mov
push
or
cld
movs
mov
out
sbb
mov
add
outs
push
movs
add
mov
xchg
jne
ror
(bad)
int
cld
es
mov
sbb
dec
xor
lods
dec
dec
pop
fcmove
pop
xchg
cmp
iret
push
loop
(bad)
lock
and
jno
ret
das
cmp
jne
dec
add
push
cld
imul
cli
adc
sbb
gs
dec
lock
xchg
fnsave
sub
jae
sub
cli
mov
mov
jl
gs
mov
dec
cmps
shl
lods
idiv
inc
aas
ffree
movs
push
and
(bad)
sub
sbb
nop
imul
push
ja
add
loopne
mov
sbb
imul
jle
jle
lods
push
dec
and
dec
ror
les
push
mov
inc
ins
in
adc
(bad)
xchg
xor
fsub
add
hlt
sub
dec
pop
mov
(bad)
sub
push
rcl
repnz
mov
ss
jbe
pop
jl
fucomip
pop
mov
into
xchg
push
push
retf
xor
bound
pop
clc
aas
lahf
pop
in
push
outs
scas
cmps
rcr
dec
ret
mov
jg
mov
mov
fstp
aad
jmp
inc
stc
pop
(bad)
sub
xor
mov
pop
in
(bad)
scas
mov
add
push
mov
dec
scas
jmp
ja
dec
ins
cmc
ja
and
push
push
(bad)
es
push
sti
xor
cmp
cmps
mov
add
js
jbe
pop
fist
jno
push
xchg
je
dec
push
dec
adc
push
icebp
int3
mov
sbb
adc
addr16
in
and
sub
mov
pop
test
sub
pusha
fwait
sbb
xor
shr
(bad)
je
xchg
xchg
cmp
cli
retf
inc
jbe
popf
mov
mov
sbb
rep
jne
(bad)
lahf
call
stc
ret
fwait
das
lods
add
repnz
pop
mov
adc
fdiv
dec
fidivr
xor
outs
jno
std
jl
xor
lods
dec
icebp
adc
movs
les
cmc
jno
dec
inc
jle
shl
cmp
push
dec
(bad)
imul
cdq
dec
mov
cmp
lods
in
pop
cmc
ins
jle
mov
rcl
jmp
pop
clc
cwde
mov
push
cmp
outs
sbb
sub
(bad)
push
push
clc
iret
fist
xchg
or
sbb
jmp
adc
jg
test
test
je
add
pop
inc
(bad)
cmps
cmc
clc
mov
adc
inc
mov
loope
mov
add
(bad)
sub
mov
enter
cmc
icebp
cld
fidivr
xor
and
xchg
das
js
mov
sbb
jg
sub
lds
movs
add
pop
mov
hlt
adc
repnz
sbb
stos
jo
mov
les
mov
(bad)
xchg
sub
std
test
cmp
pop
inc
add
stos
mov
mov
mov
dec
xchg
jmp
ja
push
stos
pop
pop
adc
movs
mov
lds
lahf
xchg
dec
cmps
lods
repnz
push
jmp
jl
das
rcr
sbb
repz
cmp
add
inc
sub
cmps
icebp
lock
call
enter
and
adc
or
push
mov
inc
and
test
jle
cmp
add
adc
or
fdivr
add
out
loope
jle
pop
iret
xchg
jae
push
pop
jg
fdivr
or
ret
test
stc
mov
xchg
imul
push
cmc
cmc
inc
sub
push
out
gs
jmp
cmp
cmps
push
lea
xchg
mov
jns
adc
cli
adc
pop
lods
rol
jl
aas
ffreep
add
test
push
cwde
fidivr
push
ss
lds
sti
inc
xchg
add
and
dec
hlt
scas
dec
dec
retf
add
and
sub
test
out
cmp
sub
inc
xchg
dec
ror
cmp
jns
fucom
cmp
fadd
inc
jl
scas
loop
in
cmp
scas
loope
ret
ja
xor
fstp
test
ret
push
mov
leave
pushf
outs
dec
xor
mov
mov
jno
(bad)
movs
fs
cmp
dec
dec
cs
push
scas
es
ins
sahf
imul
es
cwde
repnz
jnp
mov
push
repz
or
dec
fidivr
push
ficomp
adc
mov
fild
and
and
(bad)
mov
sub
icebp
sub
jl
xchg
xor
cmc
dec
pop
(bad)
pop
mov
sbb
push
int
pop
pop
jb
xchg
pusha
adc
mov
or
jecxz
adc
inc
lock
(bad)
sbb
push
shr
sub
fild
scas
jecxz
xlat
mov
and
call
in
xchg
or
push
cmp
jge
or
adc
adc
xchg
cs
hlt
icebp
jno
je
or
sar
inc
out
jne
aam
xor
ins
adc
pop
fild
inc
mov
sbb
sub
cmp
jns
pop
je
sub
mov
xchg
out
jmp
out
iret
pop
pop
push
pop
sbb
mov
cmp
pop
outs
or
dec
in
call
fcmovnb
out
push
push
xchg
out
cmc
in
(bad)
(bad)
frstor
and
imul
fcmovbe
fcmovb
cmps
stos
lods
sub
or
sub
rcr
lds
sub
nop
je
pop
cs
pop
(bad)
retf
fiadd
imul
jnp
scas
adc
adc
cmp
add
push
mov
mov
push
jo
inc
nop
(bad)
outs
adc
out
mov
sbb
mov
mov
icebp
adc
cli
push
fcomi
jb
mov
(bad)
ss
or
pop
test
mov
inc
mov
and
cmp
ss
jmp
and
js
push
pop
mov
je
and
lds
mov
cmps
imul
dec
add
pop
inc
stos
pop
fadd
push
inc
mov
add
stc
mov
loopne
popf
mov
test
scas
jbe
pop
or
arpl
cmp
jmp
mov
jle
jno
push
mov
rcl
mov
pop
xor
xchg
jb
xor
arpl
mov
cmp
(bad)
fnstcw
inc
gs
(bad)
aas
pop
mov
inc
jl
xor
push
js
pop
sbb
lods
fdivr
dec
stos
or
push
retf
cli
ds
jnp
js
test
push
scas
mov
out
mov
and
leave
call
in
cmc
daa
sbb
mov
mov
fmul
and
lock
cmp
inc
(bad)
adc
adc
fs
jp
add
cld
or
jle
jno
shl
jp
ss
daa
mov
or
test
mov
cdq
push
inc
xchg
nop
and
jl
adc
cmp
pop
jmp
in
cmps
bound
xchg
ins
jl
push
retf
inc
das
push
and
std
rcr
cmp
fsubr
inc
ficom
mov
sub
ds
or
ffree
push
rcr
jo
mov
fcmovnbe
outs
movs
sti
add
std
mov
pusha
test
cmp
mov
sub
outs
adc
cli
cs
jle
jns
pop
stc
fwait
shl
mov
dec
sar
add
test
jae
lock
mov
pop
mov
xchg
add
test
imul
pop
out
mov
fmul
jl
popa
push
xchg
popf
js
test
pop
cmp
pop
sub
push
fisub
movs
mov
jecxz
mov
mov
rcl
pop
dec
sti
pushf
sub
scas
(bad)
(bad)
fcomi
int
mov
lods
arpl
out
or
mov
aad
into
sbb
sbb
mov
dec
sbb
add
leave
lock
sbb
ins
jp
and
mov
xchg
adc
loop
std
inc
fcmove
push
out
or
dec
mov
and
test
pop
out
jo
dec
jo
and
(bad)
push
mov
stos
out
outs
dec
test
pushf
loope
popa
xchg
lods
enter
or
std
add
jmp
mov
xchg
push
or
dec
int
adc
into
call
jae
cs
pop
xor
sub
sbb
(bad)
push
mov
jl
or
retf
cli
pop
rcr
in
out
(bad)
ror
jecxz
out
cmc
xchg
outs
pop
fisub
scas
in
xchg
rcl
cld
call
cmc
push
gs
and
cdq
popa
test
cmp
cmp
pop
test
mov
das
aas
xor
test
js
xor
lahf
mov
dec
pop
cld
imul
cmp
cmp
xchg
aas
cs
sbb
xlat
pop
and
inc
pushf
xchg
push
xchg
and
and
pop
push
daa
movs
mov
cmp
sub
pop
sub
inc
rdpmc
xchg
out
and
push
mov
mov
push
push
add
mov
out
mov
jmp
gs
pop
ror
mov
aam
loop
pop
jmp
cmps
lods
push
dec
pop
(bad)
sbb
stos
mov
retf
je
push
add
mov
rcl
xor
jmp
add
js
enter
sub
push
stc
es
std
je
adc
gs
cmp
iret
stc
call
mov
jae
cmp
push
jne
dec
(bad)
mov
call
add
jae
(bad)
mov
hlt
mov
dec
popa
push
das
or
clc
test
movs
or
and
push
jle
in
cmp
push
inc
ret
cwde
push
jae
lea
inc
std
lea
mul
mov
mov
ja
xor
jg
or
in
repz
jns
add
popa
sbb
dec
ret
jo
cmc
fmul
mov
mov
add
xlat
xchg
push
and
pushf
inc
jecxz
and
push
cmp
out
fcomi
or
push
push
xor
stc
xor
xor
mov
pop
lods
std
mov
ds
int
outs
cmp
ins
mov
loopne
fisttp
pop
or
fldcw
aam
jl
dec
in
dec
loop
(bad)
shl
icebp
call
pop
jg
jecxz
or
adc
jl
xor
push
pushf
mov
loope
jnp
adc
scas
inc
cmp
mov
adc
mov
repz
imul
test
repz
les
pop
gs
shr
jg
sbb
sbb
push
pop
adc
movs
pop
xor
ret
sbb
leave
mov
adc
cli
sar
scas
test
in
outs
or
test
movhps
test
cmps
pop
xchg
cmp
cmp
xor
adc
mov
xor
push
pusha
xchg
jno
jmp
inc
pop
rcr
movs
enter
dec
jb
dec
rcr
iret
mov
repz
sub
shl
out
or
jns
int3
mov
repnz
stos
ret
adc
pop
outs
movs
cli
push
lods
mov
add
push
or
xor
sbb
dec
sub
and
cvtps2pi
mov
xchg
aam
and
test
stc
test
imul
pop
sbb
(bad)
scas
and
jmp
pop
fwait
dec
je
pushf
aas
pop
cwde
sbb
shl
daa
imul
xrelease
jge
cdq
imul
inc
stos
push
pop
or
or
cmp
sahf
rol
jne
jnp
mov
sub
mov
adc
jmp
adc
jmp
scas
add
xor
out
int
iret
xchg
hlt
adc
ja
bnd
push
lea
mov
mov
jb
jbe
adc
inc
and
(bad)
fwait
or
jb
cmp
mov
rsqrtps
jns
push
in
mov
jg
aas
xchg
sub
sub
cmps
jmp
lahf
push
cmp
pop
dec
xchg
daa
push
vpmacsww
fsub
dec
jge
dec
push
add
inc
inc
rcl
jecxz
sbb
add
jl
mov
xchg
nop
out
ins
push
je
pop
cmp
ret
xor
shl
sub
in
pop
gs
push
js
push
scas
in
fwait
lea
inc
ficom
xor
xchg
jbe
dec
les
mov
out
sub
pop
lds
sub
mov
add
rcl
out
outs
push
add
arpl
xor
add
and
scas
aam
sub
push
scas
jecxz
mov
xchg
and
out
cmp
out
add
dec
shl
scas
fwait
(bad)
push
aaa
inc
ins
mov
jl
xor
sub
sub
jmp
out
cmovl
gs
inc
lods
mov
dec
scas
test
sti
adc
into
rcr
hlt
(bad)
jae
jmp
arpl
sub
mov
dec
pop
lods
imul
dec
xchg
adc
inc
xchg
cdq
fld
ss
push
loopne
ins
and
and
(bad)
and
aaa
jg
not
mov
mov
xor
or
lods
pop
ficomp
ja
retf
rcr
inc
pop
push
movs
xchg
aam
dec
cmp
fistp
cmc
nop
xor
fucomp
iret
mov
adc
movs
xor
pushf
mov
jl
ret
imul
nop
imul
jnp
add
cwde
outs
lock
scas
aaa
lea
pop
inc
inc
js
cmp
fisubr
fld
out
in
or
pop
xchg
jae
out
adc
aaa
ret
imul
or
inc
arpl
xchg
sub
pop
popf
out
jl
inc
ror
mov
jae
mov
add
rcr
and
les
push
add
push
fmul
cmps
push
fdiv
ror
xchg
mov
ds
jl
stos
pop
test
andnps
push
ror
jg
jle
jl
cmp
test
test
cmp
jle
jle
(bad)
fstp
and
pop
push
loopne
js
or
idiv
push
inc
ror
enter
pop
mov
mov
loop
out
pushf
dec
xor
clc
out
push
mov
es
movs
fsubr
addr16
jns
jg
sar
xchg
or
clc
scas
out
cmp
pushw
add
cmovs
in
jns
sti
mov
aam
pop
dec
iret
es
sbb
bound
xchg
sub
test
mov
dec
mov
dec
(bad)
sbb
xchg
jecxz
jl
push
je
movs
test
xor
ror
adc
imul
fsub
pop
mov
push
pop
or
stc
jno
neg
fcmovne
sbb
mov
pop
jb
ins
into
xchg
or
cmc
mov
arpl
adc
mov
or
retf
pusha
xor
push
mov
mov
xchg
or
pop
sbb
lods
pop
gs
inc
imul
dec
(bad)
(bad)
cmps
sub
mov
cld
inc
int
lock
and
imul
inc
xchg
stos
cs
mov
xor
nop
imul
dec
call
loope
imul
fstp
fdivr
adc
cmc
adc
out
jmp
push
std
sub
out
push
jp
imul
in
fst
or
pop
or
das
js
sub
arpl
sub
fdivr
inc
addr16
push
sbb
mov
cmp
mov
dec
fwait
lahf
jle
push
add
data16
in
adc
mov
cmp
dec
cwde
mov
push
retf
std
pop
mov
add
mov
and
cdq
mov
xor
xchg
leave
test
mov
xor
xchg
pop
mov
retf
adc
jb
jb
stos
add
es
add
mov
mov
out
aaa
scas
or
push
jnp
pop
cmp
inc
or
pop
mov
push
or
faddp
es
das
jp
adc
mov
mov
xor
mov
jbe
dec
jmp
mov
fucompp
push
cmc
sub
jns
ds
fcomi
stos
sar
pop
cld
sbb
cmp
js
add
(bad)
cli
mov
push
mov
cwde
inc
adc
fbstp
xchg
xchg
add
aam
in
mov
mov
call
cmp
aad
add
nop
sub
inc
cmp
enter
(bad)
add
xor
loop
add
ret
shr
fwait
scas
mov
int3
nop
icebp
push
add
and
cmp
sbb
ss
loopne
popf
gs
mov
and
jne
sub
dec
and
jg
(bad)
xor
xchg
ja
scas
push
les
popa
not
test
cmp
mov
icebp
repnz
sahf
inc
adc
movs
cwde
jge
pop
fidivr
mov
imul
xor
lods
push
imul
mov
call
mov
push
cmp
pmuludq
les
outs
(bad)
jbe
mov
push
xchg
and
(bad)
ror
rcl
xlat
cmp
fld
pushf
cmp
mov
push
int
int
mov
in
dec
cs
pop
push
pop
das
(bad)
xchg
dec
or
mov
ficom
or
(bad)
adc
xchg
ret
into
lahf
sbb
pushf
in
(bad)
loopne
jb
xchg
aas
lods
xlat
xlat
inc
stos
shl
cmc
xor
adc
push
icebp
jmp
out
movs
jno
jo
call
xchg
cwde
or
cmp
and
inc
push
pop
dec
(bad)
es
push
sti
aad
or
ja
inc
mov
mov
int3
addr16
popf
push
es
in
pushf
pop
nop
xchg
fistp
fs
inc
dec
addr16
daa
cmc
loope
adc
jno
ret
dec
and
(bad)
ins
jl
lods
fnstenv
and
pop
fld
sub
dec
add
scas
jle
lds
aam
jb
adc
hlt
cmp
or
mov
cmp
neg
push
adc
stos
xchg
rol
retf
push
pop
xchg
je
enter
out
in
mov
in
mov
str
fsub
pop
sbb
(bad)
clc
or
and
adc
repz
dec
xchg
std
sbb
and
push
fnsave
popa
stos
push
xor
pop
cmp
push
cmps
sub
push
cmp
fisttp
mov
nop
add
loop
jmp
cmps
sti
loope
out
push
and
int
push
popf
js
test
sub
adc
or
or
adc
adc
jle
pop
imul
cs
retf
xchg
jbe
inc
dec
cmps
fcomip
inc
mov
sbb
scas
jbe
repnz
test
inc
xor
xor
add
push
push
push
ret
mov
jge
sbb
jne
nop
xchg
cmc
push
movs
cmp
popf
aaa
dec
je
mov
pop
stos
add
aad
jne
push
aam
scas
idiv
lods
in
cmc
and
xor
inc
bound
dec
imul
lds
inc
test
call
les
lds
bound
int3
inc
or
or
mov
xchg
or
add
(bad)
out
cmps
(bad)
daa
xchg
push
outs
cmp
mov
and
test
jo
add
or
mov
cmp
popa
sub
aaa
and
and
and
stos
rcl
movs
push
cmc
clc
aaa
cli
shr
add
and
mov
dec
sahf
sbb
pop
mov
pop
(bad)
push
int3
imul
xchg
cmp
pop
test
data16
addr16
aas
outs
les
mov
jmp
or
jnp
pop
leave
pop
jp
or
pusha
push
sbb
mov
das
fldz
retf
xor
mov
enter
adc
fistp
inc
pop
mov
inc
jnp
mov
iret
leave
mov
xor
pop
(bad)
dec
inc
inc
popa
rcr
cmp
sbb
fs
inc
dec
xchg
push
lods
(bad)
in
out
inc
dec
icebp
jo
iret
push
les
or
mov
push
jne
fmul
and
cmps
popf
gs
xchg
mov
dec
std
pop
test
push
sti
push
cmp
ins
scas
pop
es
push
rol
cmps
in
cmp
sbb
and
sub
js
das
and
xor
mov
mov
fs
(bad)
mov
shr
icebp
mul
popa
jnp
sar
jo
push
mov
sti
lea
mov
xchg
xchg
not
push
dec
sbb
iret
(bad)
cmps
inc
mov
or
mov
mov
sbb
push
in
imul
stc
mov
arpl
and
sub
xchg
push
sub
and
mov
addr16
pusha
sub
sub
dec
vpinsrw
add
aas
arpl
movs
mov
test
add
push
push
add
inc
dec
rol
fstp
mov
cmp
mov
or
xchg
xchg
outs
adc
cmps
mov
popa
fbstp
sti
dec
push
adc
mov
enter
pop
outs
jl
in
popa
mov
dec
jmp
jg
aad
sar
jno
sbb
dec
cli
mov
bswap
xchg
clc
xchg
jmp
push
or
dec
aas
dec
mov
aaa
ret
call
add
imul
pusha
mov
xor
adc
inc
icebp
das
sar
sbb
int3
stos
ins
xor
loop
repz
and
lahf
aam
stos
sbb
mov
add
cmp
sub
xchg
inc
pop
fabs
test
pop
mov
fs
cdq
add
pop
in
in
cmp
or
mov
push
int3
shl
xlat
adc
movs
xor
jle
mov
into
fcmovbe
clc
sbb
(bad)
jb
adc
(bad)
adc
sbb
div
mov
jbe
jl
mov
inc
xor
push
xlat
iret
mov
shl
popa
out
xor
jecxz
inc
xor
cmc
pop
das
or
inc
and
mov
or
pop
mov
jbe
fwait
pop
jo
inc
adc
cmp
xchg
(bad)
push
dec
loop
inc
adc
lock
add
imul
add
stos
call
dec
scas
sahf
pop
mov
push
push
cmps
iret
xchg
mov
sbb
adc
(bad)
clc
dec
dec
iret
mov
pop
push
fimul
fld
in
inc
inc
mov
test
ret
imul
push
xchg
mov
call
test
test
fsubr
push
jns
out
out
in
xor
fs
jns
lods
out
jmp
stos
pusha
out
and
fistp
imul
mov
sti
or
shr
pop
mov
pop
iret
(bad)
sti
test
popf
xor
xchg
sbb
mov
sub
add
mov
shl
sbb
mov
sub
cmp
dec
(bad)
mov
cmps
js
sub
dec
std
push
pop
cld
mov
add
push
pop
push
jmp
push
stos
jbe
sbb
lods
and
in
in
and
test
shr
cmp
jne
rcr
popa
call
mov
push
icebp
je
mov
mov
popa
int3
xchg
dec
push
fsubr
bound
and
ja
ss
data16
add
scas
pop
inc
stos
loop
mov
pusha
scas
loope
dec
pop
add
jb
fldenv
cmp
cdq
ret
dec
and
mov
mov
pushf
cmp
popa
add
pop
xchg
sbb
outs
pop
inc
je
jmp
jno
cmps
icebp
mov
mov
jp
add
js
mov
add
popf
outs
dec
daa
mov
fstp
(bad)
jmp
mov
lods
sub
dec
mov
sub
(bad)
pop
sub
mov
cmp
cli
cld
cmp
jnp
xchg
ss
cmp
push
xor
cwde
or
cmc
adc
icebp
retf
sbb
test
aam
(bad)
dec
ins
adc
sbb
inc
or
inc
lods
xchg
stos
pop
fild
loope
(bad)
and
push
sar
inc
fidiv
cmps
call
pop
jne
call
arpl
xor
test
pop
call
sbb
mov
pop
fistp
(bad)
lods
mov
cmps
mov
fucomip
icebp
cmps
sbb
stos
int3
sar
mov
in
sub
rol
fcom
push
not
out
inc
stos
retf
(bad)
push
lea
jno
xor
in
dec
mov
pop
or
mov
xchg
jo
mov
jne
mov
jnp
sub
das
mov
std
(bad)
stos
mov
(bad)
mov
xchg
cmps
out
cmp
psllq
adc
push
ficomp
add
call
and
sub
adc
sti
sahf
aam
or
scas
fisttp
shl
jbe
test
popf
cmp
pop
inc
into
pop
push
sahf
adc
test
sub
loopne
in
mov
(bad)
div
dec
mov
mov
call
ins
mov
fdiv
leave
ret
add
or
and
stc
fwait
aad
dec
mov
ret
pop
fcmove
addr16
mov
add
jo
push
mov
dec
push
push
arpl
sbb
or
xchg
xchg
je
cwde
or
adc
jnp
cld
popf
jge
mov
and
lock
add
pop
dec
mov
pop
scas
out
js
add
mov
es
stos
int
cwde
push
es
xor
add
cwde
cld
xor
inc
inc
cmp
cs
cmc
dec
dec
out
lea
xchg
or
test
imul
cmp
mov
inc
adc
jecxz
dec
sar
add
hlt
(bad)
mov
stos
xor
icebp
outs
dec
mov
addr16
cmps
sbb
push
xchg
mov
push
ja
mov
push
xchg
xchg
shr
shl
shl
shl
and
repz
arpl
fst
mov
jl
aam
push
or
add
push
(bad)
cmp
pop
sub
test
push
ret
and
and
and
in
mov
sbb
push
sub
out
pusha
in
push
sar
mov
mov
and
lock
jne
push
imul
xchg
imul
and
add
add
dec
cld
and
xchg
fist
addr16
push
movs
and
call
jnp
into
push
(bad)
and
je
(bad)
arpl
mov
test
and
dec
sti
jo
push
sub
or
inc
jb
mov
and
xchg
hlt
lock
jmp
cwde
jns
(bad)
in
push
ds
retf
and
in
ror
cmp
lea
push
js
jbe
adc
mov
sti
in
cwde
js
nop
and
mov
pushf
retf
in
pop
es
push
pop
(bad)
sbb
mov
shl
jne
cmp
fiadd
ds
jb
mov
jl
dec
rcr
cmp
push
test
fsub
xchg
xchg
fisub
cmp
sub
fcmovnbe
push
push
imul
or
or
and
iret
xlat
pop
dec
xor
imul
dec
jmp
lods
and
loopne
ds
pusha
pop
shl
scas
inc
sbb
mov
jp
push
dec
adc
pop
jge
mov
sub
es
pop
dec
push
push
xchg
iret
dec
mov
js
leave
mov
fs
add
jge
sub
out
adc
(bad)
mov
enter
jle
mov
sub
fs
and
dec
pusha
mov
or
scas
push
jg
inc
pusha
aas
xchg
ret
dec
push
cmps
push
aad
jo
jae
inc
xor
cmp
dec
jae
bound
(bad)
or
cmp
inc
cmp
cmp
dec
hlt
fimul
aam
sbb
aam
dec
xor
jae
or
test
mov
sub
push
aas
repz
das
sbb
(bad)
out
(bad)
stos
sti
les
or
inc
dec
imul
fcmovnu
sbb
mul
push
cmp
mov
cmp
clc
out
mov
cld
retf
sub
dec
adc
inc
mov
pop
rcl
mov
ret
sub
mov
mov
in
cmc
in
ins
pop
call
inc
fbld
mov
and
xchg
ss
and
stos
or
popa
rol
pusha
push
pop
(bad)
cwde
cmp
hlt
ja
pusha
ror
xchg
xlat
ss
popf
(bad)
pop
out
mov
retf
rep
add
xor
sub
jp
icebp
fcom
jns
fnstenv
xor
mov
mov
mov
ins
lds
mov
dec
inc
pop
imul
(bad)
mov
mov
je
jbe
jae
sub
push
dec
add
dec
jle
pop
sahf
or
cmp
push
aaa
lds
jmp
fs
iret
inc
push
leave
scas
sub
xchg
dec
mov
adc
xor
je
jb
mov
sub
jmp
mov
mov
popa
adc
pop
sub
ficom
dec
mov
push
mov
add
xor
and
dec
shl
pushf
fld
outs
pop
or
pop
or
(bad)
bound
(bad)
xchg
inc
clc
jmp
div
pop
cmc
sub
and
leave
xor
jne
ins
movs
pop
dec
ins
adc
fcmovu
jnp
push
popa
sub
cld
ja
push
std
scas
sub
aad
lss
push
and
add
jp
retf
jl
popf
stos
mov
imul
and
fst
cwde
mov
sub
dec
dec
rol
ja
daa
xlat
retf
xchg
call
inc
xor
inc
in
cmp
inc
xchg
xor
dec
mov
test
add
sti
ins
push
fld
push
mov
add
mov
adc
xor
(bad)
and
fbstp
pop
loope
enter
repnz
aas
jmp
cmps
cmp
add
inc
sbb
sub
or
lods
shl
jbe
mov
or
std
aas
cmps
pop
add
mov
adc
push
sti
popf
inc
pop
aas
pop
retf
cmps
dec
fisttp
(bad)
(bad)
and
xchg
xlat
sub
pop
mov
or
outs
or
pop
cld
loopne
push
ins
cmp
sub
add
mov
std
inc
stos
jl
retf
mov
retf
push
pop
retf
or
(bad)
pop
xor
in
ret
jmp
cmps
adc
in
or
cmp
xor
mov
mov
in
push
pop
in
cmp
into
jmp
sahf
adc
adc
fabs
jno
(bad)
pcmpeqd
mov
jl
lea
and
adc
inc
or
xchg
dec
fcomp
xlat
popf
sti
retf
or
sbb
pushf
pop
call
xor
mov
ja
nop
pop
mov
in
outs
sbb
push
or
xchg
and
pop
xchg
push
stos
add
adc
ss
sub
in
pop
pop
cs
inc
rcr
(bad)
popf
push
sbb
test
sub
je
sbb
cmps
mov
xchg
out
call
xchg
outs
std
(bad)
sub
daa
in
pop
ret
enter
pop
sbb
mov
xchg
push
imul
push
(bad)
cmc
xchg
aad
enter
cli
scas
mov
push
jge
jnp
dec
mov
mov
xchg
popa
xchg
dec
mov
shr
ins
pop
and
loope
ret
fdiv
call
sub
mov
enter
sbb
movs
mov
jmp
test
dec
test
imul
imul
sub
test
and
dec
adc
add
fidiv
in
int
and
mov
pop
rcl
test
cmp
aaa
pushf
xchg
test
fadd
icebp
mov
or
jne
mov
dec
cwde
out
add
nop
sub
cmps
fdiv
cmps
jbe
mov
pop
inc
pop
jmp
pop
inc
add
pop
xor
jno
aam
jge
aad
adc
lock
test
dec
clc
add
sub
jns
cmp
adc
daa
add
sbb
cmp
ins
ss
mov
push
mov
sub
jne
es
loop
mov
xchg
retf
pop
in
cmps
mov
pushf
movs
ror
in
in
adc
push
inc
test
adc
pop
iret
xchg
mov
sahf
les
cwde
fs
inc
loopne
ja
ret
iret
push
loop
push
dec
jp
sbb
ret
dec
add
xlat
sti
clc
xchg
xchg
or
addr16
xchg
jle
es
cmp
shl
inc
sub
xor
jbe
cmp
stos
(bad)
test
fadd
jle
pop
adc
aam
or
cmp
or
fist
push
stc
imul
les
and
icebp
dec
imul
push
leave
xchg
sbb
cmp
das
add
cwde
(bad)
pop
popf
inc
ror
test
cdq
call
addr16
mov
xor
ss
pop
test
dec
imul
and
and
addr16
stos
out
mov
leave
mov
push
mul
out
mov
retf
out
and
rcr
cmp
ret
jmp
faddp
sar
lea
movs
int3
jmp
or
fisubr
xchg
mov
xor
jl
mov
sub
sub
sahf
sar
xchg
mov
jg
adc
jns
add
mov
ror
xchg
cmps
in
sbb
call
xchg
sub
clc
jle
sub
outs
outs
repnz
jmp
out
xchg
xchg
push
fcmovu
pusha
push
push
(bad)
push
(bad)
mov
cwde
xchg
or
repz
sub
addr16
push
mov
lahf
lds
sub
jle
iret
ret
xchg
sub
pop
fnstcw
ret
inc
and
push
or
or
stos
xor
mov
aaa
cmp
icebp
xor
pusha
cmp
mov
(bad)
enter
test
in
imul
push
push
pop
cmp
call
cld
inc
ja
js
adc
xchg
jg
push
cmp
test
popa
pop
aas
sub
xor
mov
fistp
or
bound
icebp
in
fs
(bad)
sbb
push
pop
or
jbe
mov
loope
pop
pop
(bad)
and
push
and
sbb
push
es
aam
cwde
shl
stc
inc
jp
fidivr
pop
jg
mov
sub
mov
ror
pushf
sub
mov
out
pop
ja
jp
and
inc
data16
or
push
sub
aam
fisubr
adc
imul
(bad)
jp
sub
movs
call
mov
sti
jno
jae
ss
pop
and
jp
push
call
sub
sub
xor
push
rol
es
out
out
and
xchg
(bad)
fcom
out
scas
in
movs
test
cwde
addr16
sbb
and
arpl
inc
(bad)
pop
dec
movs
sub
xchg
mov
add
bound
mov
xor
jne
retf
imul
jp
outs
aas
mov
or
repnz
popf
int3
leave
test
adc
pop
mov
adc
sub
sbb
punpckhdq
xchg
xchg
shl
fidivr
sub
test
cmp
scas
and
inc
fs
das
push
in
xchg
sbb
lahf
test
push
shl
jl
aam
out
out
cmc
push
dec
addr16
xchg
scas
cwde
inc
bound
inc
(bad)
stc
bound
pop
inc
out
xor
iret
mov
xor
sub
or
sbb
(bad)
cli
jle
add
shl
(bad)
sbb
xor
or
popf
jmp
mov
cmp
mov
xchg
leave
(bad)
xor
pop
and
push
or
bound
pop
sbb
or
mov
xlat
pop
jno
jp
jmp
cmps
out
outs
addr16
mov
dec
outs
daa
xchg
or
jmp
adc
shr
arpl
push
cmps
inc
and
mov
fidivr
sbb
pop
daa
es
out
(bad)
sub
ret
push
enter
adc
add
xor
add
aad
mov
push
bound
cmps
and
adc
pop
adc
and
arpl
(bad)
daa
cmp
dec
jns
cli
mov
fldcw
dec
data16
xor
push
push
js
fist
push
mov
gs
repnz
push
ss
adc
xchg
int3
jle
ret
in
push
cmp
and
xor
loope
cmp
rol
outs
(bad)
ja
xchg
scas
pop
stos
jne
add
mov
mov
mov
and
stos
hlt
dec
push
sub
lds
sbb
fld
cmp
xchg
adc
mov
jno
mov
test
je
in
add
pop
and
pop
xchg
xor
push
push
daa
cs
pusha
cmp
or
stos
stc
mov
data16
test
(bad)
mov
out
dec
mov
adc
mov
push
idiv
jbe
scas
in
into
fcom
pop
lea
data16
outs
xor
cmc
mov
les
jecxz
xchg
(bad)
fdivr
xor
cmc
mov
sbb
ficom
and
sub
xchg
fidivr
dec
mov
popf
mov
nop
inc
(bad)
jle
jmp
sub
cwde
inc
sahf
repnz
xlat
fist
idiv
adc
in
jae
loop
xchg
push
adc
cdq
xchg
xchg
push
mov
jne
imul
and
mov
out
inc
out
aas
sub
cmps
iret
bound
mov
stos
aas
lds
cmp
cmp
fs
add
dec
lea
mov
ins
xor
stos
loope
scas
and
ror
pop
in
xchg
in
loopne
lods
push
push
inc
xor
xchg
pop
push
aas
add
and
cmp
mov
cld
mov
xor
call
pop
imul
ds
cli
in
mov
pop
test
loopne
mov
xchg
and
call
xlat
xchg
into
mov
mov
cdq
and
mov
mov
add
lea
ins
and
xchg
dec
pop
aas
adc
test
stos
es
(bad)
xlat
push
ja
mov
jne
mov
pop
cmps
fmul
xchg
lahf
(bad)
outs
sar
lods
stc
mov
jne
fiadd
lock
leave
dec
cmp
pop
mov
dec
sbb
retf
cmp
mov
inc
mov
mov
fsub
sub
fldenv
jge
(bad)
jle
pop
jmp
inc
adc
jno
xchg
fstp
test
inc
and
push
add
xor
retf
fucomip
dec
xlat
pop
(bad)
jmp
scas
fisttp
push
or
cmp
clc
aad
mov
jmp
aad
std
out
xchg
cmps
sbb
or
shl
xor
xchg
mov
shr
and
mov
ret
inc
pop
jge
add
imul
retf
in
stos
jae
nop
(bad)
jp
inc
dec
stos
push
push
push
ficomp
inc
int3
adc
clc
outs
mov
pop
dec
sub
pushf
mov
std
or
test
inc
pusha
xor
sub
add
sbb
movs
imul
clc
bndstx
je
(bad)
dec
cwde
pop
mov
aaa
push
scas
sub
test
adc
sbb
dec
pop
sbb
sbb
fadd
inc
or
mov
ret
inc
(bad)
in
cmps
std
fwait
in
repz
jge
sar
(bad)
adc
mov
call
and
rcl
fs
xchg
in
mov
pop
dec
and
shl
addr16
not
cwde
stos
aas
jnp
lods
push
fwait
repz
aad
in
std
fsub
sbb
ins
stc
js
rcl
sub
std
pop
mov
push
cs
push
cmps
xor
and
jae
cmp
jno
cmp
pop
adc
jns
jo
lock
sub
sbb
and
ins
pop
cdq
shr
add
xchg
xchg
retf
arpl
inc
cmp
add
push
jno
add
xor
js
adc
icebp
inc
out
leave
jmp
mov
mul
test
sub
enter
xrelease
cmp
mov
xchg
cdq
cld
lock
add
pop
xlat
xchg
dec
daa
data16
popf
push
fild
imul
mov
fild
and
mov
fldenv
mov
mul
pop
fidivr
bound
not
cs
sahf
mov
dec
xchg
call
xchg
xchg
imul
cmp
cmc
push
loop
pop
pop
ret
pop
add
push
fwait
or
sti
movs
mov
cli
aaa
das
mov
push
jp
aad
jecxz
jp
dec
mov
rol
sbb
sar
sbb
and
lea
and
xchg
imul
loope
test
jmp
(bad)
sbb
xor
cld
sahf
mov
dec
jnp
movs
inc
jae
xor
popf
ja
pop
sbb
and
fwait
pop
and
or
nop
das
mov
sub
sub
enter
enter
inc
inc
clc
add
in
mov
sbb
pop
push
(bad)
loopne
push
sbb
adc
imul
jmp
rol
push
mov
push
(bad)
cmp
jmp
inc
ins
lock
(bad)
imul
aas
dec
jge
push
test
outs
cmp
dec
dec
(bad)
mov
add
mov
adc
mov
xchg
and
xor
test
enter
jmp
mov
xchg
cmp
jg
fist
dec
mov
outs
pop
dec
or
adc
push
mov
cmp
lock
rcl
retf
fstp
in
push
jnp
cli
pushf
outs
push
lds
sub
scas
mov
xchg
out
dec
test
push
fild
aas
hlt
imul
dec
inc
iret
add
push
arpl
mov
cli
cdq
repnz
mov
scas
push
test
inc
jmp
fs
jmp
fbld
(bad)
mov
mov
sub
test
scas
push
js
repnz
sub
jns
xlat
mov
outs
xchg
scas
mov
sub
movs
jp
push
adc
push
lods
sbb
call
imul
xor
push
call
and
nop
mov
(bad)
sti
scas
jp
mov
cmc
iret
add
xor
and
add
mov
mov
cmps
in
and
mov
mov
jnp
push
loop
mov
sub
(bad)
mov
sub
out
cmp
out
adc
xchg
pop
jg
adc
mov
(bad)
out
mov
shl
inc
xchg
jb
push
inc
lahf
aam
adc
mov
shl
mov
or
pop
cmp
fadd
arpl
loop
mov
lods
and
push
sti
mov
retf
xor
test
xchg
and
xchg
jmp
jle
add
and
rol
jmp
ins
cmc
mov
or
inc
loop
ins
icebp
rcr
inc
pop
xchg
mov
inc
or
xchg
call
int
ss
das
pop
mov
fst
mov
das
(bad)
mov
outs
popf
imul
mov
cmps
xchg
leave
push
outs
(bad)
cdq
out
add
fwait
into
xchg
test
xchg
es
mov
jp
or
je
and
push
jns
daa
adc
in
inc
or
dec
mov
scas
cwde
popf
cmps
fisttp
mov
sub
add
mul
mov
xchg
push
pop
push
jl
push
in
mov
sub
mov
outs
push
stos
outs
inc
mov
mov
mov
loope
arpl
mov
mov
test
mov
arpl
cmp
adc
in
sbb
aas
ficom
stos
dec
stc
mov
das
pop
pop
jne
mov
xor
push
or
xor
jecxz
sbb
call
pop
cmp
test
fisub
popa
mov
adc
leave
push
data16
or
push
pop
cmp
gs
mov
fist
add
dec
cmp
imul
hlt
aas
adc
sbb
(bad)
mov
add
in
daa
pop
jp
sahf
mov
in
outs
sbb
cmp
cmp
push
jle
gs
lds
push
sbb
aas
mov
rol
mov
xchg
add
pop
in
fist
out
and
sbb
or
popf
inc
das
into
leave
out
repnz
mov
shl
push
fld
pop
push
(bad)
sbb
scas
fs
xchg
loope
in
add
xor
pop
es
or
test
mov
xor
or
fdivr
(bad)
and
int3
and
push
rcr
repz
xlat
jbe
xchg
pop
test
gs
or
cdq
stos
inc
popf
js
jnp
push
pop
in
mov
je
adc
enter
test
idiv
out
cwde
mov
cmc
pop
dec
and
jo
addr16
and
pop
ins
loope
test
xchg
imul
repz
jo
mov
mov
mov
mul
push
aas
mov
add
pop
add
out
dec
inc
(bad)
sbb
mov
pop
pusha
(bad)
sub
dec
popa
push
and
std
(bad)
cli
ret
in
xchg
mov
lea
push
pop
dec
hlt
jge
mov
jl
mov
push
adc
in
retf
stc
nop
outs
icebp
cs
aad
push
jne
dec
xchg
mov
popa
cmp
test
retf
leave
mov
sahf
(bad)
mov
xchg
repnz
xchg
inc
mov
mov
movs
sahf
adc
push
xchg
mov
push
cs
pop
mov
pop
fwait
outs
sbb
mov
mov
add
adc
bound
lods
addr16
in
test
je
fs
adc
xlat
sbb
sbb
dec
pop
cmc
das
add
int3
and
test
xchg
fiadd
ror
jle
shr
outs
ins
int3
pop
dec
pop
adc
fnstsw
inc
xchg
inc
adc
and
shl
out
xor
mov
mov
add
pop
mov
mov
ret
and
jnp
test
or
mov
xchg
mov
je
cmp
imul
fisttp
shl
outs
mov
daa
pop
sbb
ss
and
jo
cs
and
dec
cwde
outs
aad
cld
xor
int3
xlat
inc
shl
dec
popa
mov
mov
shl
xchg
dec
mov
jo
lods
aas
pop
sub
out
mov
data16
out
test
pusha
mov
xchg
jbe
daa
push
sbb
cmp
xor
mov
and
fldcw
ss
(bad)
push
loope
out
push
mov
dec
xor
mov
jbe
dec
xchg
xlat
das
jnp
dec
loop
in
mov
dec
cmp
dec
loopne
(bad)
div
(bad)
fld
xlat
lahf
ret
imul
mov
mov
in
(bad)
cli
xor
lahf
inc
xchg
sub
aam
inc
dec
xchg
iret
dec
(bad)
mov
repz
cmp
mov
inc
xchg
adc
gs
fild
aas
bnd
xor
cmp
adc
ret
fsub
mov
stos
mov
push
nop
pusha
or
push
aas
push
inc
add
jle
add
and
aaa
imul
fnstenv
dec
mov
test
into
xor
pop
cmps
outs
popf
test
push
adc
clc
or
dec
retf
inc
and
hlt
jge
shl
je
mov
sub
or
neg
push
lahf
push
jo
pop
mov
ret
lahf
dec
mov
pop
daa
sbb
mov
and
mov
aam
std
jne
sbb
gs
and
in
rol
test
clc
push
loopne
bound
out
(bad)
clc
adc
inc
push
xchg
fistp
or
dec
cmps
nop
jb
rol
loop
fisubr
das
ins
and
cmp
sub
dec
add
xchg
push
pop
or
cmp
test
jmp
scas
cmc
lea
xchg
mov
les
mov
mov
not
mov
inc
(bad)
std
dec
inc
enter
sbb
test
xlat
ins
and
sub
pop
movs
scas
add
sub
xchg
repz
mov
add
loope
repz
cmps
mov
sbb
mov
jg
pop
pop
fdivr
in
jecxz
mov
jno
std
fimul
xor
ret
xor
(bad)
sbb
push
and
pusha
in
dec
cmps
mov
push
and
outs
pop
sub
sub
cmc
inc
jne
jg
test
dec
jne
mov
and
(bad)
adc
(bad)
pop
jle
outs
push
cmp
adc
fs
xchg
jl
arpl
dec
cmp
clc
add
hlt
and
pushf
loopne
popa
arpl
retf
lds
mov
cli
pusha
dec
int
mov
stc
xor
mov
outs
icebp
push
adc
or
in
and
pop
adc
imul
cs
cmp
inc
inc
outs
mov
and
iret
call
mov
and
mov
popa
fs
pusha
enter
in
or
outs
das
retf
(bad)
stos
lea
loop
aas
xlat
test
cmp
test
jmp
lea
add
and
xchg
lds
inc
or
pusha
loopne
cmp
(bad)
in
sahf
inc
dec
sub
dec
jno
je
pusha
lock
mov
dec
shl
sub
cmp
les
test
ret
daa
push
call
add
arpl
sub
fisub
inc
pop
sbb
call
jmp
daa
or
idiv
neg
pop
fiadd
repnz
adc
popa
lods
or
cmp
mov
mov
movs
sbb
push
out
cmp
cli
adc
lds
loopne
sbb
push
mov
push
repz
in
pushf
loopne
jns
pop
cmp
inc
jb
mov
inc
mov
bound
ret
aas
push
repz
xor
ss
sbb
jno
push
dec
bnd
jbe
jl
add
popf
sar
push
mov
mov
icebp
(bad)
cli
mov
mov
cmps
test
daa
shl
ficomp
retf
hlt
mov
xor
push
dec
or
push
imul
mov
dec
pop
jb
shl
and
ret
push
mov
pop
or
(bad)
ficomp
in
repz
enter
daa
test
ins
xlat
mov
mov
mov
ins
daa
add
xor
dec
call
mov
pop
mov
sbb
push
arpl
jbe
adc
push
ja
inc
ins
push
repz
push
cmp
sbb
pop
sbb
or
test
mov
and
ja
lods
mov
outs
xor
jg
dec
jo
add
rol
xchg
outs
mov
pop
inc
mov
test
test
push
push
push
jle
out
push
xchg
movs
(bad)
movs
sub
inc
dec
fidiv
es
push
sub
inc
fwait
jle
xchg
or
nop
sbb
lods
ret
pushf
add
jns
cdq
inc
pop
stos
leave
ja
mov
fcomp
push
mov
adc
aas
and
inc
sbb
sahf
or
jle
inc
lahf
leave
(bad)
(bad)
repz
pusha
pushf
mov
pop
cs
es
inc
pop
aaa
jl
sbb
out
jp
test
jle
dec
pop
call
retf
and
xor
or
pop
and
jb
sbb
dec
push
adc
je
jge
xchg
int3
dec
sub
je
inc
fisttp
clc
mov
jnp
ficom
movs
mov
and
or
ss
scas
jnp
sub
mov
xchg
jmp
jmp
mov
pop
cwde
scas
xor
inc
mov
(bad)
mov
ss
add
or
mov
icebp
sbb
int3
sti
test
adc
(bad)
scas
mov
inc
sbb
push
sbb
(bad)
dec
add
add
adc
push
test
sbb
dec
les
daa
sub
sbb
jmp
les
fiadd
jno
inc
mov
add
cmc
xor
mov
and
loopne
hlt
outs
rcl
adc
movs
data16
sbb
int3
mov
xor
mov
adc
cdq
(bad)
mov
aam
fsub
scas
sahf
pop
inc
out
ds
stc
lock
inc
adc
pushf
dec
cmp
pop
icebp
rol
ret
mov
mov
sub
in
add
pusha
xchg
jne
add
test
lock
(bad)
jnp
std
jg
arpl
inc
cld
add
popa
retf
cld
out
fadd
add
scas
lahf
and
jnp
push
adc
inc
pop
or
into
xor
leave
mov
inc
ja
jle
call
jno
retf
jge
cmps
adc
jecxz
jmp
movs
add
add
loopne
xlat
lea
ja
dec
inc
jo
mov
rol
sbb
out
jmp
sub
or
cmp
jmp
mov
aas
scas
pop
add
nop
xchg
fisttp
int
call
mov
std
sbb
lock
lds
mov
xor
cli
push
cmp
lock
mov
ins
loop
nop
or
outs
and
fimul
push
nop
lods
loopne
lock
jmp
cld
fistp
retf
add
fstp
dec
in
cmp
adc
xor
mov
inc
repnz
repnz
mul
loopne
sbb
add
or
popa
sub
jp
or
jmp
mov
arpl
add
cdq
add
pop
xor
dec
push
mov
xor
aam
cmc
mov
fmul
mov
stos
or
push
mov
adc
test
sub
in
xchg
ret
retf
(bad)
xchg
in
(bad)
je
shl
sar
fcomp
cmp
out
adc
add
iret
dec
and
dec
xor
test
sti
(bad)
mov
sbb
repz
leave
neg
pop
adc
lods
test
cmps
sub
adc
test
mov
(bad)
pushf
sub
cmp
inc
pop
push
and
xchg
call
jo
or
int3
mov
idiv
ret
adc
(bad)
jmp
outs
lahf
fidiv
inc
not
and
leave
xlat
xchg
shr
cmps
push
pushf
jmp
out
(bad)
retf
iret
iret
jnp
push
in
addr16
jne
loop
cwde
and
lods
and
push
or
hlt
sub
inc
sub
sub
push
ds
(bad)
int3
push
push
push
lock
in
scas
pop
out
icebp
add
repnz
fld
mov
mov
inc
sbb
mov
fisttp
push
pop
push
mov
(bad)
push
fadd
add
lods
retw
add
xchg
cmp
xchg
mov
sub
xchg
and
mov
adc
jmp
cdq
sahf
ja
int
imul
sbb
jl
mov
loopne
push
mov
xchg
(bad)
fild
dec
jns
jmp
dec
xchg
inc
mov
add
stc
push
xor
movs
jbe
test
ins
xlat
and
xchg
adc
(bad)
push
inc
popf
rcl
xor
mov
sbb
outs
jp
xchg
call
xor
sub
push
jns
nop
dec
adc
add
daa
and
fcomp
je
scas
test
add
arpl
out
xchg
xor
push
mov
in
push
(bad)
jbe
lock
cwde
xchg
call
mov
pop
loopne
push
mov
iret
xchg
outs
jp
add
test
out
jl
xchg
sub
dec
push
aaa
out
add
xchg
cmps
out
mov
(bad)
loope
dec
cmps
mov
mov
push
push
push
xchg
xchg
cmp
pop
mov
pop
rol
jge
pusha
sbb
in
outs
leave
retf
imul
xchg
add
je
in
add
icebp
xchg
adc
jecxz
repnz
xchg
loop
xor
mov
in
cmp
hlt
imul
stos
loop
inc
jo
sbb
jl
scas
mov
sub
test
pop
shl
xchg
movs
movs
test
sbb
gs
push
loop
(bad)
pop
sbb
jp
push
mov
(bad)
pop
fs
xchg
mov
push
retf
pop
loop
mov
sub
fwait
sar
dec
xor
push
rol
rcl
xor
jnp
pop
adc
sub
xchg
sub
pop
enter
add
xor
ret
cmp
ja
mov
sub
push
arpl
dec
call
cmp
mov
or
ds
les
ins
add
jno
sub
and
jge
fistp
fisubr
ins
pop
rcl
mov
cmp
retf
mov
pop
push
outs
jle
mov
adc
frstor
add
imul
jmp
ds
cld
adc
pop
push
mov
(bad)
lds
or
cmp
pop
lea
and
jae
cwde
in
iret
inc
add
cld
add
call
addr16
mov
arpl
mov
jmp
popa
and
push
fidiv
popa
outs
jne
mov
mov
xchg
xchg
mov
push
cmp
or
mov
push
jge
pushf
nop
push
xor
int
fistp
ja
push
movs
add
icebp
int
xchg
adc
xor
cmp
gs
(bad)
lods
mov
jecxz
pop
inc
xchg
test
ds
push
in
sbb
jbe
aaa
stos
sub
imul
int3
in
jp
stos
jp
xor
pop
mov
sbb
xchg
es
cmp
jmp
xchg
es
loope
mov
inc
cmps
jge
jb
xor
push
in
pusha
mov
mov
out
test
mov
jge
ss
mov
shl
div
mov
add
jmp
aaa
sbb
addr16
xor
icebp
mov
pushf
int
fcom
cmp
cmp
cmp
rcl
cmps
aas
fs
or
pop
jp
sub
push
jecxz
mov
fnsave
ss
push
or
cmp
jae
mov
cmp
mov
or
and
sbb
rcr
dec
jne
test
inc
out
out
rcr
inc
into
imul
mov
mov
(bad)
add
lea
sbb
push
(bad)
xchg
cmp
cmp
in
xchg
push
and
fdiv
xor
outs
inc
jmp
ror
lahf
push
mul
add
jne
pop
xor
jg
std
lods
or
mov
jo
iret
loop
push
test
int
out
out
mov
hlt
jae
stos
data16
sub
cmp
test
(bad)
jo
push
jae
adc
xor
mov
aam
cmps
lods
fmul
clc
sub
sub
push
ffree
bound
inc
adc
and
mov
lea
dec
add
lss
fdivr
std
mov
adc
stos
and
gs
ret
pop
push
scas
cld
(bad)
(bad)
js
inc
xlat
dec
inc
fidiv
(bad)
call
xchg
xor
mov
xor
inc
inc
inc
cmp
push
jae
sub
and
xor
mov
and
xchg
fwait
mov
int3
jnp
and
dec
cli
sub
nop
aad
push
ins
sub
xor
ret
jo
and
xchg
or
retf
sbb
lods
push
int
mov
in
test
retf
xchg
test
mov
mov
popf
push
xor
cmp
test
ss
cmp
out
gs
mov
pop
movs
mov
imul
dec
popa
cmc
cwde
loop
ror
adc
mov
push
idiv
(bad)
mov
add
sbb
xor
lea
or
xor
pop
mov
push
inc
sbb
xor
(bad)
jae
jg
mov
rcl
jmp
and
aas
cmps
mov
cwde
sbb
ins
(bad)
shld
sti
scas
cmp
mov
arpl
pop
sahf
jl
xrelease
ret
in
sar
cmp
mov
in
icebp
neg
out
push
movs
ins
push
mov
mov
or
fistp
push
retf
sets
push
addr16
cwde
cli
cmp
mov
outs
lea
or
or
inc
movs
cmp
scas
jne
(bad)
mov
int
cmc
sub
sar
and
dec
bound
fadd
jmp
(bad)
inc
xchg
sti
inc
(bad)
cmp
fcom
imul
xor
add
mov
fist
mov
xchg
inc
adc
sub
ins
fbld
loop
mov
nop
dec
jo
mov
xchg
add
mov
mov
out
adc
and
jp
imul
test
loop
dec
mov
jmp
in
pop
mov
add
pop
pushf
or
jo
arpl
bound
mov
push
pop
add
or
mov
scas
pop
add
nop
sbb
mov
ja
iret
adc
and
in
clc
(bad)
pop
add
shl
mov
and
pop
adc
dec
in
aas
cmc
fnstsw
call
push
cdq
mov
cmp
and
pop
mov
fisttp
movs
mov
jecxz
les
add
push
xor
rol
dec
and
mov
test
and
mov
stc
out
dec
in
aas
aaa
ds
sub
jo
ret
sub
and
push
cmps
and
and
mov
loopne
adc
inc
mov
lds
or
int3
dec
xor
push
mov
xor
mov
ret
cwde
add
sub
retf
es
mov
jmp
push
xchg
push
jmp
out
je
mov
jl
scas
imul
movs
pop
cmc
enter
push
jo
mov
or
push
adc
into
adc
(bad)
fidiv
ss
mov
adc
dec
add
dec
leave
lock
and
adc
out
xchg
ror
adc
add
ins
mov
inc
dec
push
adc
and
in
stos
pop
fdivr
mov
adc
imul
lds
cmc
jg
push
gs
jbe
xor
jb
pop
add
mov
dec
push
stc
add
(bad)
pop
imul
call
ret
rol
test
xchg
jle
jg
and
sub
xchg
adc
or
mov
xor
jne
add
test
jns
push
pop
movs
in
inc
cmp
xor
test
fstp
je
pop
dec
or
xor
out
xor
cmc
push
lods
(bad)
test
(bad)
(bad)
or
and
xor
cmp
in
mov
cs
fsqrt
(bad)
retf
xchg
mov
ret
push
sbb
pop
popa
adc
pop
push
add
aad
jg
out
gs
pop
mov
scas
inc
jne
outs
ret
arpl
mov
(bad)
mov
lods
inc
cmp
test
aad
loop
cmps
jne
mov
add
xor
mov
enter
cli
mov
rcr
loope
mov
pushf
test
movs
je
dec
mov
pop
xor
sub
(bad)
mov
test
retf
pop
movs
int
bound
mov
sub
lods
mov
(bad)
icebp
inc
ins
nop
jns
icebp
rcr
in
sbb
cwde
push
inc
push
clc
aaa
mov
push
das
mov
psrad
in
cmp
and
xlat
sbb
fnstenv
xchg
cld
pop
jae
xchg
cmc
and
aas
mov
ret
dec
stos
arpl
xchg
mov
sar
popf
outs
pop
dec
pusha
ja
jnp
and
ss
retf
cli
xchg
sbb
xchg
lods
call
or
in
or
or
dec
xor
add
ja
push
mov
jno
sahf
lods
(bad)
jne
movs
jae
pop
rcr
rcl
int3
std
jns
lods
dec
jb
aad
and
shr
in
xor
jbe
jl
mov
popf
sub
fsub
jns
shl
jbe
pop
push
inc
or
cs
sar
add
dec
or
fs
aad
scas
cmc
dec
mov
shr
clc
xor
xchg
sbb
ds
scas
mov
mov
dec
inc
adc
shl
ds
mov
lock
and
jmp
push
push
shl
sbb
test
adc
jp
dec
aam
rcl
add
mov
cmp
aas
lods
mov
mov
mov
stos
xchg
xor
es
ror
adc
jmp
fstp
jmp
cmps
sub
cmp
jb
pushf
popa
mov
jge
inc
mov
add
shl
paddd
and
aaa
imul
data16
(bad)
out
cmp
aad
movs
add
or
pop
jnp
inc
pop
inc
and
xchg
sub
push
mov
mov
popf
into
jmp
inc
push
xchg
enter
add
inc
and
or
dec
scas
mov
je
movs
movs
shr
in
repnz
mov
mov
sub
xchg
sub
fldcw
xchg
dec
xchg
mov
cmp
or
repnz
pop
mov
add
test
inc
pusha
rcr
sbb
addr16
aad
iret
xor
sbb
jmp
cmp
push
movs
dec
(bad)
or
loope
stos
inc
cmp
stc
movlps
adc
and
mov
inc
or
dec
loop
pminub
xchg
mov
loopne
jnp
cmovne
xchg
adc
pop
mov
popa
jge
enter
(bad)
ffreep
stc
fnstsw
sub
cmp
in
inc
adc
mov
add
mov
ret
lds
sub
dec
div
mov
scas
stos
xor
pop
repnz
adc
cmps
sbb
mov
sub
lds
cld
cwde
add
push
adc
xchg
ja
inc
rcr
(bad)
fidiv
and
add
sub
fiadd
or
(bad)
scas
xor
or
sbb
mov
or
sti
mov
pushf
push
push
add
stos
adc
hlt
add
push
push
sub
(bad)
sbb
push
jl
cmps
xchg
out
lea
enter
jne
aaa
dec
inc
mov
inc
(bad)
mov
jae
sbb
movs
lods
div
in
pop
das
ret
sti
xchg
cmp
dec
pop
ret
retf
cwde
ins
jecxz
sub
cmp
mov
fwait
out
mov
(bad)
call
das
or
je
or
retf
iret
jecxz
adc
mov
jnp
shl
das
scas
cmp
in
mul
loop
inc
push
popf
and
or
(bad)
dec
xor
jmp
popf
adc
ds
bnd
adc
repz
mov
pushf
pandn
and
mov
pusha
mov
jle
jl
push
xchg
push
adc
lahf
sti
xor
shl
stos
icebp
cmp
mov
adc
call
ja
test
mov
and
mov
sbb
sbb
mov
sub
gs
inc
jae
bound
out
out
stos
js
je
retf
ud1
inc
jecxz
std
add
div
xchg
outs
gs
sub
(bad)
dec
loopne
hlt
xchg
jb
ja
dec
gs
nop
(bad)
cmp
sbb
adc
mov
inc
xlat
mov
into
push
imul
xchg
mov
pop
outs
adc
loope
addr16
mov
test
mov
in
enter
retf
aad
ss
inc
test
loop
pushf
rcl
test
test
retf
add
movs
ss
(bad)
arpl
and
xor
(bad)
push
fcomp
push
mov
mov
pusha
sub
lods
bound
cli
add
fimul
push
(bad)
xchg
mov
in
add
xlat
(bad)
int3
out
pop
xchg
xchg
dec
jl
sahf
inc
stos
ds
movs
and
push
dec
add
pop
mov
dec
ret
jae
jp
rep
jne
xchg
mov
mov
inc
inc
jecxz
ret
adc
stos
and
clc
lds
addr16
push
sub
add
mov
(bad)
sahf
outs
sub
(bad)
mov
push
xor
sbb
push
mov
aad
aas
sub
push
pop
jp
xchg
dec
popa
jg
or
movs
inc
add
fs
imul
or
jnp
jo
aad
add
lahf
add
sbb
cmpps
jl
clc
dec
cli
xchg
stos
inc
or
sbb
push
int3
cld
call
mov
ja
jecxz
pop
jae
dec
mov
mov
push
sub
cmc
js
call
xchg
cmps
test
inc
jno
mov
jae
pop
test
sub
and
xor
sub
jp
xor
lods
aad
jbe
js
test
and
jle
test
mov
imul
add
xchg
aam
xchg
push
inc
sti
mov
mov
ret
test
ins
adc
ins
daa
mov
sbb
cmp
in
push
fstp
xchg
dec
popa
out
loope
jge
test
xor
cmp
loope
xlat
pop
(bad)
xor
sbb
cli
adc
hlt
cmp
aaa
repz
pop
or
add
mov
(bad)
fdiv
cs
adc
cmp
cmp
xchg
jmp
pushf
xchg
ret
inc
repnz
aas
jg
hlt
inc
in
jmp
inc
mov
scas
ret
jmp
jno
xchg
dec
add
xchg
imul
dec
aaa
add
int3
clc
push
mov
inc
scas
fidiv
add
mov
and
mov
hlt
mov
ss
xlat
mov
mov
pop
jns
in
pop
cs
or
or
adc
js
or
pop
xlat
out
mov
mov
mov
push
stos
mov
call
idiv
retf
leave
mov
loop
out
and
div
push
adc
dec
es
mov
mov
or
push
inc
loope
loope
js
in
es
loope
ret
loop
(bad)
adc
adc
xchg
xchg
dec
psubb
inc
pop
pop
ds
mov
or
mov
push
fcomp
mov
test
mov
push
sub
mov
and
(bad)
cli
sub
out
or
retf
cvtpi2ps
mul
bound
pusha
pop
jno
jmp
sub
test
mov
out
repnz
hlt
sbb
push
addr16
ret
inc
hlt
mov
rcr
int3
sub
cld
aad
sub
sub
aaa
cmp
adc
mov
scas
dec
inc
inc
fistp
push
xor
lds
jmp
aas
out
lock
out
cmp
ja
and
xchg
mov
mov
test
adc
sub
xchg
pop
shr
cmps
loope
pusha
or
int
ins
test
dec
cmp
pop
inc
jno
xchg
push
mov
call
xor
cmp
rcl
inc
test
xchg
jb
fimul
in
mov
(bad)
lahf
xor
jp
xchg
test
mov
movs
pop
repz
xor
jae
add
adc
jbe
sbb
adc
sub
pop
popf
jmp
test
ror
aas
jecxz
push
mov
adc
ss
ins
mov
jns
xor
lods
dec
dec
inc
adc
loopne
(bad)
inc
dec
push
data16
call
jb
and
push
(bad)
adc
xor
imul
xchg
dec
fwait
jle
pop
or
jecxz
pop
out
ror
lods
mov
jle
scas
push
xor
into
fwait
xchg
ror
popf
sar
pop
ds
mov
sbb
mov
add
lahf
mov
dec
and
mov
mov
adc
mov
inc
push
fwait
mov
rol
popa
imul
aas
ffree
xchg
fcom
or
add
mov
repz
ins
add
jo
jmp
jb
xchg
and
mov
push
adc
add
leave
mov
iret
mov
push
mov
imul
push
(bad)
push
cmp
cmp
js
lea
fist
pop
push
and
nop
xor
xchg
mov
jge
jge
sbb
mov
int
mov
fsub
mov
sti
in
pop
arpl
pop
mov
sahf
cwde
scas
jecxz
mov
movs
push
cmp
pop
sub
mov
inc
cmp
dec
stc
mov
pop
xor
leave
jg
xor
inc
or
dec
lahf
jp
xor
inc
repnz
jbe
repz
jge
test
push
(bad)
lock
fisttp
lahf
outs
loop
hlt
stos
lahf
xchg
std
das
jmp
fidivr
inc
clc
outs
add
lea
push
arpl
repz
push
jno
cli
inc
mov
xchg
sbb
mov
hlt
popf
out
mov
jmp
sti
iret
pop
test
fbld
dec
mov
pop
mov
lock
jl
jecxz
adc
jns
sub
mov
pop
ret
xchg
xchg
dec
mov
call
xor
jge
pop
mov
clc
std
sub
adc
fild
out
jg
pop
xchg
mov
je
out
sbb
rcr
retf
sbb
and
shr
push
push
outs
mov
sbb
lods
sub
mov
pop
add
cmp
and
mov
shr
inc
retf
cmps
push
xchg
mov
dec
cmc
aas
rcl
fs
dec
iret
add
add
int3
cld
and
fistp
loop
sbb
fld
in
jns
push
(bad)
jge
sub
dec
inc
jae
dec
out
push
into
in
out
call
enter
and
dec
repnz
enter
fdivr
add
mov
loop
push
ins
jmp
addr16
jmp
cwde
dec
xor
ja
jnp
(bad)
repnz
pop
leave
sub
xor
jmp
popf
popw
or
lahf
add
push
test
loope
adc
mov
cdq
ins
cmp
push
jecxz
fs
dec
rcl
gs
fcom
jae
inc
add
lods
(bad)
cmc
jge
lods
ret
popf
test
call
lds
lds
pop
inc
cmp
mov
mov
test
or
or
xchg
loop
es
add
in
fild
or
pop
hlt
popa
lods
dec
aad
stos
mov
sub
push
dec
push
pmaddwd
inc
pop
rcl
into
mov
dec
sbb
xchg
pusha
adc
jmp
add
sbb
inc
xor
sti
repz
push
xrelease
aaa
xchg
jbe
push
into
pop
cmp
cli
stc
inc
or
outs
push
cmp
xchg
mov
push
inc
mov
test
pop
dec
call
ja
adc
xchg
inc
call
jp
je
stc
rcr
pop
push
in
stos
xor
mov
cmps
or
inc
js
pop
xlat
cmp
loope
sub
outs
inc
or
inc
pop
sahf
xchg
fsub
push
test
mov
push
cmp
test
xchg
or
adc
push
repnz
dec
sbb
add
add
es
addr16
mov
xchg
push
pop
scas
pusha
popa
and
jle
sub
ss
std
mov
and
nop
jmp
loopne
jne
jg
div
js
sbb
xchg
inc
jge
mov
inc
addr16
or
not
(bad)
dec
adc
pop
ins
dec
pop
repz
fimul
pop
jo
out
add
int3
ins
jne
ins
inc
je
addr16
rcl
inc
inc
ins
cwde
jne
mov
pop
pop
inc
xor
mov
outs
jmp
shl
loop
and
ffree
test
idiv
xchg
jle
ins
sahf
sub
les
shl
iret
xchg
jns
inc
les
cmp
mov
mov
mov
pop
sbb
add
mov
loop
add
cmp
pusha
rol
mov
aam
jmp
sub
loop
shr
mov
dec
xor
pop
mov
sar
fwait
mov
gs
enter
sbb
sbb
sbb
rcr
xor
daa
bound
das
gs
cdq
test
in
ret
or
hlt
test
outs
in
sub
loope
pop
xor
jl
inc
sub
stc
sub
pusha
jno
mov
test
scas
lea
mov
pop
add
xor
add
mov
loopne
adc
dec
mov
xor
mov
xchg
je
popf
mov
aad
and
sub
cmp
mov
jbe
push
arpl
push
mov
cmp
jo
outs
inc
gs
aad
xor
adc
and
icebp
jae
scas
mov
leave
jo
xchg
add
cmp
pop
dec
or
jp
inc
arpl
pop
jno
jns
test
inc
dec
pop
jbe
mov
(bad)
imul
lahf
cwde
and
xor
icebp
pop
jge
jg
add
loopne
dec
sbb
xlat
leave
inc
adc
nop
in
xchg
adc
mov
cmps
bound
rol
add
cmp
mov
aas
fmul
(bad)
xor
jl
lods
je
jno
sbb
pop
or
inc
cmp
dec
push
mov
mov
movs
xchg
or
es
add
mov
rcl
xchg
std
ret
loope
cmps
popf
pop
shl
loope
jecxz
sbb
mov
ret
test
in
stc
mov
xchg
add
adc
or
(bad)
ins
pop
popf
jne
add
xchg
clc
mov
clc
(bad)
sbb
mov
xor
gs
aas
fwait
inc
xchg
fucomp
test
sbb
stc
mov
mov
jl
int3
bound
out
sbb
mov
and
std
lea
dec
cdq
dec
adc
pusha
repnz
push
ret
(bad)
loope
das
ja
pop
push
popf
add
inc
or
es
push
xor
xchg
pushf
lock
dec
iret
ret
shr
pop
adc
enter
push
sbb
out
inc
jae
inc
sbb
inc
push
iret
(bad)
popf
(bad)
push
jne
inc
gs
push
xor
sub
cld
into
(bad)
call
and
movs
dec
sub
pop
and
fisub
jecxz
cwde
push
es
fisttp
mov
add
popf
lahf
xchg
dec
and
dec
ds
push
jae
sub
pop
js
jb
mov
and
xlat
retf
dec
fsubr
mov
xor
xchg
test
pop
outs
push
mov
jo
mov
int
(bad)
sub
mov
cmc
es
(bad)
pop
int3
dec
xchg
imul
jns
jno
inc
adc
mov
sbb
mov
mov
leave
fld
sub
sub
cmp
push
jae
and
push
xchg
imul
push
xchg
jmp
pop
retf
(bad)
mov
mov
mov
inc
movs
xchg
(bad)
mov
lock
ja
sbb
push
cmps
jne
mov
retf
leave
das
dec
or
dec
test
lea
aaa
and
adc
mov
or
cs
mov
fidivr
sub
sbb
pop
lods
xchg
push
cs
jae
stos
inc
push
cmp
push
mov
aaa
pop
mov
mov
mov
aad
pop
leave
cwde
js
popa
dec
pop
pop
mov
ret
and
inc
das
test
adc
push
push
in
lahf
loopne
neg
daa
(bad)
xrelease
bound
xor
mov
mov
push
inc
jle
push
mov
shr
jle
adc
inc
add
lea
lea
cs
sbb
jecxz
pop
jae
in
(bad)
xlat
and
aam
and
adc
bound
mov
aam
inc
push
push
addr16
add
xchg
mov
adc
mov
push
mov
fwait
xor
in
sbb
jmp
pop
mov
retf
mov
sbb
or
xchg
add
leave
pop
jae
jecxz
cmp
adc
sbb
sbb
jne
movs
int3
stos
xor
jae
cs
lods
inc
lock
cmp
sbb
mov
scas
imul
jmp
repnz
inc
sub
jmp
cdq
cli
cmp
jne
lock
not
fidiv
push
sub
pop
ret
jae
fistp
lahf
test
(bad)
jl
pop
adc
fistp
ret
aas
sbb
inc
push
(bad)
test
or
pop
and
push
int3
push
dec
cmp
adc
xchg
add
stos
cmp
inc
stc
sub
repz
ss
repz
mov
movs
(bad)
std
jbe
dec
les
adc
stos
sbb
lock
(bad)
dec
in
xlat
add
(bad)
mov
ins
cmp
inc
ins
sub
xchg
das
xchg
icebp
jp
sahf
addr16
adc
fnstcw
push
iret
in
out
std
add
aad
rol
sbb
adc
fist
mov
inc
lock
xchg
sbb
or
mov
aam
sbb
sub
stc
(bad)
aas
shr
sahf
lods
mov
sbb
int3
(bad)
mov
jb
sub
stos
pushf
sub
push
xor
mov
or
dec
int
outs
cmp
cmp
mov
rcl
scas
mov
into
mov
retf
pop
jmp
xor
add
add
push
loop
and
lahf
cli
mov
and
jnp
dec
add
addr16
jg
aas
mov
cmps
popf
stos
sti
out
mov
inc
ret
dec
cmps
add
test
call
pushf
jmp
push
(bad)
aaa
lods
pop
(bad)
movs
adc
in
sahf
fiadd
daa
fdiv
enter
leave
icebp
mul
sub
jg
pop
movs
sub
xlat
les
(bad)
push
scas
test
xchg
push
adc
repnz
cmc
clc
jmp
aas
mov
test
mov
mov
mov
inc
arpl
lods
stos
je
cld
popaw
cdq
xor
test
add
jecxz
cmp
push
scas
jae
call
sbb
mov
push
stos
and
shr
pop
fdiv
enter
xchg
popf
jge
stos
repnz
cs
mov
push
shl
lock
ins
jmp
pop
mov
in
ja
and
cmps
cld
sahf
push
neg
sbb
sub
and
loopne
and
stos
cmp
jl
clc
add
call
cmps
push
enter
adc
pop
iret
pop
xchg
adc
sahf
repz
stos
not
xor
enter
sub
inc
inc
pop
pop
sub
lea
push
xchg
push
and
leave
adc
mov
pop
ss
sub
cmc
test
and
dec
jle
out
mov
retf
mov
ret
push
pop
outs
xlat
rcr
int3
pop
stc
or
dec
jmp
sahf
ds
mov
mov
mov
imul
movs
je
gs
xor
repz
adc
or
or
lds
inc
xor
test
xchg
fcom
adc
xor
sbb
cmps
(bad)
mov
pop
cmp
mov
arpl
stos
fcomip
xchg
cwde
clc
movs
xchg
popa
(bad)
pop
jecxz
(bad)
loop
or
lods
jecxz
push
pop
ja
dec
cmp
stos
hlt
push
jl
cmp
push
rcr
jb
add
mov
mov
and
fsubr
or
xor
sub
(bad)
setnp
sti
pop
fild
inc
sub
retf
pop
push
mov
jae
jb
pop
jmp
and
jp
inc
sbb
repnz
dec
push
lahf
push
add
mov
stos
cmc
dec
mov
pop
movs
inc
mov
mov
cmp
inc
adc
add
ror
lahf
add
cmp
loope
sar
mov
outs
push
jnp
lds
aad
or
(bad)
fdivr
pop
iret
dec
xor
retf
pop
adc
sti
nop
ss
jne
out
ins
push
aad
sbb
movs
lods
mov
mov
sub
out
push
pop
add
dec
sub
xor
scas
sbb
sub
aam
lods
and
dec
ss
mov
cld
and
js
retf
xchg
lods
push
xchg
retf
push
pushf
scas
mov
xor
imul
int
out
sbb
mov
pusha
test
mov
xor
loop
xlat
adc
pop
add
iret
loop
pushf
sub
push
out
add
daa
push
xchg
mov
test
mov
js
xchg
stos
ror
push
mov
mov
test
add
pusha
jns
xor
jge
mov
cmps
or
ja
int3
adc
add
pop
push
and
nop
sub
aaa
xor
pop
mov
pop
push
out
repz
sar
mov
jecxz
or
in
sti
mov
retf
ja
lock
out
cmp
in
sbb
cmc
mov
push
mov
push
add
xor
add
daa
lods
ret
jbe
inc
cmc
ret
nop
mov
test
add
iret
sbb
jecxz
(bad)
in
movhps
and
pop
xchg
sahf
jmp
push
jle
mov
adc
pop
add
xor
push
hlt
and
push
ss
out
mov
xchg
inc
fwait
addr16
icebp
mov
hlt
pop
(bad)
div
mov
ficom
push
add
lock
sbb
mov
xor
daa
stos
add
xchg
stos
pop
and
xchg
loope
in
fwait
mov
mov
and
xchg
sub
fmulp
adc
nop
popa
sar
clc
push
test
pop
into
rol
pop
bound
imul
adc
bound
xchg
jg
xchg
retf
not
fs
pop
rcr
mov
sar
sub
shl
push
jns
jmp
xchg
call
aaa
sbb
dec
and
out
int3
and
sub
dec
(bad)
pusha
cmp
dec
sub
cmp
je
mov
fimul
or
xor
movs
gs
jae
enter
sbb
rol
call
pop
xchg
jae
inc
out
icebp
sahf
mov
mov
adc
dec
shl
imul
push
xchg
pop
xor
adc
pusha
inc
stc
push
inc
fst
xor
sahf
pop
sbb
mov
mov
and
pop
xchg
lods
into
jge
mov
rcr
ins
(bad)
test
call
shl
neg
aaa
mov
into
sahf
dec
sub
add
cmc
scas
cli
xchg
mov
je
mov
js
out
sub
(bad)
push
sar
fdivrp
aam
ins
dec
out
xlat
and
int3
xchg
inc
sbb
hlt
outs
adc
mov
(bad)
push
mov
cmp
xchg
sub
cmp
cmp
iret
mov
das
push
push
mov
mov
lods
lahf
or
cdq
repnz
cmc
ja
inc
jmp
dec
mov
cs
je
test
push
inc
inc
iret
push
(bad)
pop
or
mov
push
pop
add
retf
or
inc
vpmacssdd
mov
das
xor
mov
push
adc
xor
inc
call
mov
out
inc
add
jl
sub
arpl
stos
cmc
lea
mov
loop
(bad)
and
or
neg
xor
mov
sub
mov
inc
mov
fcom
fst
test
sbb
movs
jns
mov
fisttp
(bad)
(bad)
clc
and
in
xchg
outs
mov
or
mov
fbstp
lds
sar
int
mov
inc
(bad)
aaa
jmp
enter
stos
push
mov
add
jmp
ret
ins
stc
mov
and
push
cmc
pop
xor
arpl
dec
jbe
icebp
mov
ficom
inc
mov
xchg
or
and
jle
cmp
lods
mov
push
and
xchg
xchg
pusha
jmp
ret
mov
dec
cmp
rol
icebp
fstp
cmp
sahf
jle
fiadd
adc
bound
cmc
test
popf
jmp
(bad)
fst
stc
xlat
inc
xor
and
lock
and
neg
test
dec
leave
aam
sub
mov
add
mov
mov
cmp
mov
cdq
jmp
inc
and
and
ret
push
jne
cmps
sub
push
cmp
cwde
adc
sub
test
iret
ins
cmc
jno
jg
sbb
in
jmp
mov
nop
xor
push
retf
ja
jmp
xor
mov
mov
mov
or
add
outs
xor
and
adc
mov
rcl
loope
ss
nop
lods
repnz
push
inc
scas
xor
into
or
movs
adc
icebp
mov
scas
xchg
dec
ds
mov
jne
or
ror
mov
push
pop
rol
and
cmp
sbb
movs
imul
pop
int3
cli
call
loop
sbb
inc
add
push
xchg
cwde
inc
mov
sti
fs
in
xchg
outs
jmp
stos
loope
xchg
push
test
mov
dec
mov
pop
xchg
out
inc
(bad)
xor
lods
stc
pop
popf
ficomp
push
or
jns
(bad)
jnp
mov
aaa
mov
sub
in
call
sbb
adc
push
adc
rcr
or
ss
or
mov
mov
loop
mov
test
jl
mov
movzx
mov
xor
jae
jge
leave
ins
sar
stos
sbb
in
bound
movs
adc
push
jno
enter
mov
ror
shl
clc
aam
test
sahf
sbb
in
dec
and
js
aad
loopne
mov
(bad)
jp
ss
mov
ins
stc
and
and
mov
retf
out
pop
xor
in
pop
push
mov
std
adc
mov
(bad)
jle
push
pop
and
push
or
cdq
repnz
arpl
movs
icebp
cmp
in
call
mov
ss
and
addr16
mov
sub
hlt
test
movs
std
xlat
sahf
push
fidivr
lods
fmul
repnz
hlt
loope
sti
xor
mov
rol
mov
pop
enter
push
arpl
cmp
ss
inc
cmp
aad
lods
inc
loope
retf
loop
fisub
sub
in
test
cdq
repz
test
and
xchg
xchg
retf
cmp
loop
in
aam
sbb
jo
pop
mov
xchg
mov
sub
xchg
icebp
push
jnp
fnstcw
inc
fnsave
jecxz
dec
push
out
inc
(bad)
stc
cmps
xchg
xchg
loop
sar
movs
jl
xchg
ror
jl
mov
stc
xor
lea
cwde
mov
push
popf
mov
mov
daa
rsqrtps
cli
dec
xor
and
call
lahf
mov
jne
adc
dec
pop
sub
mov
es
in
lods
push
call
movs
push
dec
sbb
dec
sbb
inc
pushf
pop
adc
cmp
inc
push
add
nop
mov
sbb
mov
shl
daa
xchg
dec
icebp
sbb
(bad)
daa
adc
int3
pop
cld
icebp
xor
add
fs
bound
repnz
popa
mov
scas
add
test
retf
push
ror
inc
pop
into
arpl
push
sbb
pop
mov
mov
jp
mov
outs
adc
rol
adc
mov
es
and
dec
iret
adc
fmul
mov
xchg
xlat
and
bound
je
push
add
mov
jp
scas
xchg
inc
mov
std
xor
push
dec
push
iret
leave
cmp
add
mov
popf
sbb
lods
fcompp
push
and
xor
cmp
dec
jmp
or
jl
and
inc
cmps
pop
cmps
jbe
or
sbb
shl
pop
aaa
mov
out
mov
aaa
cmp
sbb
sbb
mov
jns
arpl
xor
and
daa
in
mov
aam
cmp
call
test
ds
dec
out
xchg
inc
sub
sub
and
ins
ror
cmp
add
repnz
sub
dec
mov
or
inc
inc
in
add
sahf
es
(bad)
and
adc
leave
mov
ficom
or
imul
mov
add
mov
adc
xchg
aam
cmp
mov
cmp
adc
scas
sahf
add
or
ins
or
push
xor
outs
loope
gs
mov
clc
mov
jbe
push
jecxz
jecxz
inc
inc
sahf
cmps
sbb
sub
jecxz
sub
lds
cmps
mov
mov
add
adc
sbb
inc
mov
cmc
sub
and
xchg
sbb
jl
cmp
fcomp
movs
adc
pop
cmp
je
stos
call
test
cwde
js
cmp
(bad)
mov
call
xchg
sub
sar
adc
mov
in
sub
inc
out
cmps
ficomp
fs
mov
jae
pop
aad
dec
(bad)
(bad)
add
pop
lds
dec
add
aas
inc
xor
out
popf
in
or
shr
pop
jns
les
jno
add
(bad)
cmp
push
imul
dec
jnp
mov
xor
addr16
pop
mov
addr16
(bad)
stc
scas
std
mov
jle
xchg
pop
push
adc
jecxz
mov
mov
imul
jle
inc
pop
aas
fcom
outs
xchg
xchg
add
inc
mov
lods
mov
mov
adc
stc
icebp
cmp
mov
xchg
mov
ja
xchg
(bad)
(bad)
push
adc
pop
dec
mov
sti
mov
mul
dec
jecxz
mov
pop
les
push
lea
in
dec
je
sbb
sub
addr16
std
leave
mov
dec
jmp
and
inc
fstp
test
push
scas
dec
js
add
sub
and
and
jae
retf
jmp
xchg
jno
sahf
clc
mov
sub
pop
sub
loop
sub
in
pusha
push
retf
call
nop
push
mov
aad
mov
int
mov
mov
add
ins
jmp
mov
test
inc
cmp
inc
aam
ja
inc
or
scas
call
cmp
or
loop
hlt
outs
pusha
adc
outs
lahf
sub
int3
retf
popa
pop
fmul
push
pop
pushf
inc
cmps
mov
adc
mov
jmp
neg
xchg
dec
les
or
mov
loopne
call
je
(bad)
idiv
lahf
ror
xchg
iret
and
scas
mov
fiadd
cmps
repnz
xor
lahf
mov
loope
mov
mov
and
es
ficom
pushf
test
and
sub
xor
mov
push
xchg
and
and
fs
sbb
mov
jne
jno
sub
fs
pop
or
pop
loope
cli
scas
test
shr
xor
rcl
test
test
popa
pushf
sub
lods
cs
cmp
in
or
clc
adc
and
inc
cmp
and
mov
call
inc
aaa
in
stos
aad
dec
jmp
fimul
and
pop
pop
iret
adc
fdiv
in
push
rol
push
jmp
pushw
jne
test
xor
shr
mov
xor
sar
lock
cld
xor
add
cmps
jnp
or
into
xor
pusha
sub
movs
data16
das
(bad)
cs
and
push
push
cmps
sub
xor
cmp
pop
inc
loop
push
stos
xor
xor
push
shl
loope
add
test
push
xchg
jne
lods
stos
jg
adc
mov
cmp
in
and
mov
add
sbb
pusha
movs
mov
and
push
xchg
dec
into
out
add
jmp
popa
hlt
cmp
js
inc
or
iret
adc
ins
mov
bound
mov
das
adc
pop
push
cwde
jo
call
sbb
lock
jo
icebp
jae
scas
test
and
adc
int3
imul
test
push
add
mov
pushf
pop
pop
push
je
adc
movs
push
loope
mov
mov
fisttp
sbb
mov
loopne
mov
xchg
clc
loopne
loop
sbb
push
mov
loop
jecxz
rcl
mov
mov
lods
fnstcw
jmp
stc
add
nop
ja
mov
push
push
or
mov
aad
aam
loope
arpl
xchg
or
rol
mov
mov
jmp
xchg
inc
jg
push
push
(bad)
outs
cmp
ja
out
movs
lods
dec
sbb
xlat
and
fwait
cld
out
mov
sub
aad
xchg
leave
rcr
test
add
adc
inc
ins
sahf
das
and
aad
jnp
push
add
pmaddwd
pop
push
bnd
mov
push
adc
lea
in
inc
int
repnz
or
pop
(bad)
push
dec
jmp
pop
test
adc
sub
mov
into
push
push
in
and
std
jne
pop
enter
stos
push
shl
and
out
cmps
loop
mov
sar
jns
call
push
add
rcl
mov
hlt
pushf
rcr
push
sub
outs
ja
dec
mov
sub
dec
scas
(bad)
retf
pop
xchg
ins
sub
sub
shl
mov
aam
adc
mov
sbb
stos
add
cmp
xchg
pop
retf
dec
shl
fimul
or
sub
cmp
pop
sbb
add
mov
jnp
nop
dec
push
test
inc
pop
mov
popf
in
loope
mov
add
push
push
aad
inc
mov
cmps
test
bound
ss
cdq
loope
mov
adc
cmc
movs
or
adc
jo
popa
shl
sub
cmp
push
popa
movs
data16
jmp
loopne
push
pushf
push
push
adc
cmps
adc
(bad)
in
cmps
and
jecxz
fld
imul
and
pop
sub
loopne
into
push
js
inc
jmp
gs
cwde
sahf
mov
pop
mov
adc
cld
sub
lahf
fucom
cmps
xchg
xchg
imul
add
neg
imul
icebp
pop
xor
pop
adc
std
dec
jl
repz
in
pop
cli
fisttp
stos
jo
lods
and
pushf
jp
push
pop
scas
lods
xchg
mov
fwait
or
lahf
mov
adc
ds
ror
cmc
scas
dec
lock
add
sub
jp
neg
adc
das
xchg
scas
fiadd
and
mov
call
dec
and
xchg
xchg
repz
pop
xchg
sbb
movs
lds
and
xchg
cdq
and
data16
and
push
imul
mov
push
adc
jmp
and
lds
loopne
mov
or
xchg
out
add
je
shl
test
fcomip
imul
push
outs
and
xlat
adc
cmp
pop
xchg
adc
shl
sub
mov
mov
cli
or
test
xchg
pusha
cmps
ficomp
je
cmp
xchg
jmp
in
cmp
aam
and
lock
mov
jmp
pop
push
pop
mov
pop
popf
adc
mov
xchg
sbb
rcl
fcmove
inc
pop
xor
jne
emms
sub
mov
push
lds
shl
cmp
sbb
push
fs
fwait
iret
sti
xchg
cmp
xchg
lea
ins
inc
push
push
sbb
les
pop
xor
jb
shr
cwde
loopne
aas
mov
fist
leave
jo
(bad)
stos
es
fstp
repz
shl
(bad)
loop
repnz
inc
int
test
sbb
mov
jbe
jl
imul
sub
cdq
adc
push
repnz
push
push
mov
sbb
aas
xchg
xor
pop
adc
les
adc
sahf
dec
jg
mov
push
repz
(bad)
(bad)
aam
je
int
lock
xchg
inc
dec
mov
in
push
inc
arpl
pop
adc
loop
xor
es
stos
add
pop
into
outs
cwde
push
inc
pop
mov
pmaddwd
push
rcl
arpl
xchg
push
cmps
in
sub
mov
inc
arpl
mov
adc
imul
or
js
in
or
mov
fdivr
sti
gs
xor
or
pop
jno
mov
arpl
repnz
mov
dec
stos
ins
in
mov
cmps
pop
add
inc
lock
scas
cmc
xor
push
leave
enter
int3
mov
loope
ins
pop
mov
add
or
(bad)
cmps
in
cs
sbb
mov
movs
adc
adc
dec
jae
mov
adc
stos
add
inc
mov
es
imul
mov
xchg
repz
or
(bad)
div
dec
adc
inc
enter
sub
shr
sub
cli
xor
loop
icebp
xor
arpl
sbb
xchg
ins
jl
sub
out
xchg
sbb
movs
mov
or
xor
mov
pop
in
push
and
ror
test
jg
out
out
sbb
add
sbb
mov
sbb
in
push
aam
leave
pushf
aas
or
enter
rcr
fisttp
inc
jns
je
cmps
cwde
xor
test
cwde
fstp
ja
arpl
cmp
sahf
jne
mov
push
add
mov
sub
jg
mov
es
adc
jmp
in
jmp
sbb
addr16
mov
fdiv
fisubr
adc
test
dec
jg
(bad)
mov
retf
cmp
(bad)
pop
xchg
test
out
into
outs
ror
sahf
vmwrite
std
cmp
mov
in
jp
add
int3
cmp
dec
iret
ss
iret
jl
push
in
cmp
pop
add
ds
push
and
or
mov
sub
fld
xor
pop
out
cmp
dec
mov
enter
fsub
sub
mov
adc
jecxz
call
push
jle
xchg
outs
mov
dec
push
cmc
stc
push
iret
iret
add
xor
push
ret
add
into
sbb
cmp
dec
adc
scas
inc
mov
ds
pop
jae
sbb
pop
jae
or
mul
dec
push
dec
data16
movs
or
pop
(bad)
mov
cwde
in
repz
stos
repnz
jecxz
int
sub
daa
mov
lea
es
(bad)
push
loope
sti
cdq
daa
(bad)
mov
lock
mov
xchg
cld
xor
xchg
sub
in
push
jns
cld
sub
gs
mov
sub
jg
or
adc
inc
jmp
mov
push
jb
and
xchg
les
jmp
data16
sub
out
sbb
lea
cmp
icebp
jbe
jge
ret
shr
sbb
jbe
mov
mov
mov
push
push
jb
test
neg
int
inc
xchg
xor
scas
sub
mov
mov
cmp
push
dec
sar
inc
cmp
cdq
in
pop
int3
pop
std
sub
inc
in
mov
sub
xor
xchg
xchg
fild
adc
lods
xor
push
in
retf
hlt
xchg
add
fwait
add
popf
lods
out
jge
std
or
adc
dec
movs
or
fidivr
mov
jmp
fmul
push
dec
push
mov
mov
mov
inc
nop
and
push
or
mov
inc
popf
mov
enter
jle
hlt
cli
push
or
mov
add
pop
inc
adc
xor
cmp
push
push
or
push
push
dec
mov
fmul
jne
pop
jae
xchg
adc
icebp
sbb
jae
popa
loopne
sbb
call
and
adc
rol
push
dec
inc
cmps
into
es
sbb
cmp
out
test
dec
ja
cmp
in
push
call
mov
inc
cmp
jb
adc
or
and
ror
shl
mov
push
add
pop
gs
(bad)
inc
dec
(bad)
in
shl
xchg
jp
in
push
fnstsw
pop
mov
js
ja
pop
xchg
pop
std
jg
out
cdq
ins
popf
pushf
jg
and
xchg
push
jl
pop
mov
movs
jmp
sahf
or
jne
outs
xor
jns
push
jns
sbb
add
inc
push
loop
xchg
sbb
popf
sub
mov
movs
ret
jno
jle
and
jae
jne
push
aad
inc
in
mov
pop
cmp
lea
lods
jmp
jne
xor
mov
pmuludq
and
pusha
mov
mov
cdq
sbb
popf
lds
bswap
add
into
stc
push
movups
popa
adc
popf
stc
lea
pushf
fsub
fstp
ret
jp
movs
pop
xchg
cwde
test
addr16
mov
pop
js
test
(bad)
cmc
pop
push
sub
mov
pushf
jp
ds
xor
inc
daa
dec
add
(bad)
stos
push
(bad)
dec
mov
hlt
jg
push
test
call
das
and
cmps
pop
nop
(bad)
mov
daa
fadd
les
mov
fcmovb
push
adc
loopne
ror
mov
addr16
lds
mov
icebp
repz
lea
loop
sti
adc
sbb
cmp
jbe
in
add
mov
xor
sti
add
sbb
mov
arpl
fstp
sub
enter
sub
sbb
cmp
(bad)
xlat
nop
fwait
dec
out
cdq
repnz
in
xor
push
(bad)
xchg
imul
in
xchg
and
pop
retf
push
dec
dec
jae
xchg
mov
retf
push
adc
sub
retf
cmc
pop
pusha
mov
imul
out
mov
xchg
sub
pusha
pusha
enter
xor
mov
imul
pop
mov
scas
inc
cmps
shl
xor
shr
adc
js
cmp
inc
test
cmp
mov
mov
scas
xchg
lods
lea
es
addr16
cmc
fwait
mov
mov
pop
jo
ins
push
inc
jns
(bad)
push
cmps
inc
jge
jnp
mov
adc
out
xor
pop
push
pusha
(bad)
pop
daa
loop
cmps
daa
movs
std
imul
mov
sub
jmp
fstp
daa
pusha
ds
out
imul
rol
dec
les
xchg
push
loop
in
lods
fcomp
xchg
and
or
or
and
and
call
adc
cld
push
fucom
jno
mov
cmp
outs
adc
dec
test
fsub
xchg
lahf
or
sbb
or
addr16
addps
retf
push
data16
jl
in
mov
pop
adc
loope
popa
jmp
in
(bad)
aam
in
in
neg
pop
js
lods
addr16
mov
pop
test
cmp
call
mov
jns
sub
scas
mov
jno
mov
scas
or
inc
or
rcr
movs
jnp
ja
pop
xlat
pop
pop
mov
cmp
sbb
dec
mov
enter
push
fdiv
cmp
push
repnz
pop
loope
mov
dec
dec
xchg
jnp
daa
lahf
(bad)
out
ins
add
push
push
jg
mov
cli
add
push
dec
in
je
cdq
dec
cmps
mov
rcl
sti
mov
enter
int3
pop
sbb
pop
pop
std
xlat
(bad)
push
jnp
jo
jmp
ret
out
xchg
and
ins
add
mov
xchg
push
inc
xor
rcl
push
mov
xor
sbb
dec
es
sbb
push
or
push
pop
loop
vpsraq
shl
(bad)
and
cmps
aam
imul
popf
pop
stos
push
(bad)
jl
retf
out
adc
leave
push
push
daa
or
sbb
jae
(bad)
xchg
test
fwait
and
out
dec
mov
les
mov
dec
xchg
test
add
fcomp
push
cli
dec
adc
dec
cmp
sub
mov
jge
(bad)
stos
stc
pop
inc
mov
adc
cli
push
inc
xchg
push
cld
cmp
cmc
repnz
mov
and
cmc
pop
mov
shl
mov
pop
push
cmp
mov
or
jmp
bound
jmp
(bad)
nop
lods
call
mov
sub
scas
add
loope
sub
push
push
leave
rcl
mov
ins
push
pushf
(bad)
fbld
mov
test
xchg
dec
icebp
and
in
out
pop
mov
stos
ret
call
pop
ret
add
ror
or
sub
mov
sub
dec
pop
mov
outs
push
jg
adc
test
add
aas
mov
sbb
cmp
cmp
jp
mov
sbb
sub
cmc
add
fmul
iret
cmp
mov
mov
dec
leave
popa
jbe
ins
jno
sub
cmp
in
and
sub
scas
retf
fbld
loope
in
mov
mov
outs
in
fld
mov
aam
push
rcl
jg
mov
pusha
mov
xchg
mov
push
ds
sbb
popf
mov
pop
sub
sbb
std
add
mov
or
xchg
rol
cmp
(bad)
js
daa
add
movs
es
lds
pop
hlt
push
fmul
mov
pop
retf
aaa
jl
or
xchg
jno
icebp
lods
jp
and
dec
shl
enter
les
dec
into
cmp
popf
dec
push
(bad)
div
outs
cmc
out
push
stc
mov
push
mov
pop
cld
xchg
dec
lahf
add
mov
xor
pop
lea
cmp
dec
and
push
sahf
and
add
jno
and
cmp
in
mov
add
out
pop
movs
dec
sahf
in
in
sahf
push
cmp
jp
jae
sub
mov
jp
dec
push
outs
xchg
ror
jne
sub
pop
nop
pop
inc
ins
into
pop
imul
xchg
popa
dec
xchg
ja
out
sub
out
mov
aaa
ret
retf
clc
push
mov
pushf
sub
fadd
sbb
fsubr
pop
loop
sti
out
xchg
into
out
(bad)
in
imul
stc
push
pop
mov
arpl
fs
push
mov
pop
or
out
sub
mov
inc
push
out
cli
call
loopne
mov
xchg
sub
iret
sbb
or
inc
push
add
inc
push
mov
pop
push
mov
jp
and
sbb
mov
inc
push
or
add
imul
cmp
push
fwait
cld
loope
lds
mov
xor
stos
push
cmps
and
jo
push
pop
add
stos
push
out
mov
hlt
dec
repnz
lods
aam
jbe
jns
scas
mov
xchg
outs
out
or
mov
and
inc
fdiv
jg
sar
jns
and
dec
into
retf
add
fisubr
in
dec
mov
aaa
xlat
cmp
xchg
and
push
lea
push
fld
push
call
mov
cmp
mov
adc
inc
push
sub
in
push
jge
sbb
xchg
and
dec
imul
cli
cdq
mov
ficom
push
push
pop
add
fnstenv
mov
mov
fldcw
clc
push
add
xchg
and
xchg
cs
test
xchg
fsub
mov
pop
sbb
jge
mov
in
(bad)
and
pusha
pop
imul
ret
or
or
jae
and
ret
sub
(bad)
or
mov
inc
mov
stos
cld
xor
push
mov
test
pop
and
outs
cld
test
mov
pop
test
dec
cmp
cmp
stos
push
out
sbb
push
out
mov
imul
cli
inc
sub
pop
loopne
and
gs
cmps
retf
xor
loop
xor
xchg
mov
icebp
cmc
push
jmp
dec
jg
in
stc
cdq
cmp
out
mov
sbb
not
ret
sbb
ja
lds
fidivr
cmps
scas
(bad)
dec
psubq
add
(bad)
daa
push
inc
stos
xchg
cs
jl
mov
std
cmp
inc
cmps
sysret
pop
adc
mov
mov
pop
mov
mov
xchg
into
aas
adc
iret
out
sti
ss
push
xlat
movs
jo
fwait
loop
mov
popa
pop
xor
mov
jge
int
push
int3
xor
pop
fmul
add
jne
cli
sub
iret
mov
add
iret
sub
popf
adc
mov
mov
aas
jge
cmp
and
sbb
stos
int3
or
xor
jae
shl
pop
fnsave
clc
hlt
rcr
jge
cmps
push
sub
xor
cdq
cmp
jle
arpl
mov
cmp
mov
cmps
sub
cmp
add
sbb
fwait
das
lock
cmc
sub
xchg
pop
mov
lahf
dec
sub
shl
sbb
out
inc
ins
or
and
jl
dec
push
fiadd
sbb
fisttp
das
ja
sbb
inc
and
int
jmp
ss
mov
push
pushf
push
xor
jmp
sbb
fisubr
adc
data16
test
nop
jmp
cmp
mov
nop
and
add
push
loopne
aad
add
add
jne
lock
leave
cmc
mov
inc
push
stos
adc
shr
shl
daa
xchg
out
scas
fst
inc
dec
jmp
xor
(bad)
stos
jle
jl
push
add
jge
push
push
xchg
call
pop
repnz
inc
adc
cmp
pushf
iret
cdq
(bad)
sbb
sar
lds
push
addr16
js
mov
xor
cmps
mov
jmp
mov
dec
and
scas
cmps
loop
mov
xor
sbb
cdq
rcr
jne
cmp
cmp
xchg
gs
mov
mov
xchg
jecxz
sub
popf
fucomp
sbb
jns
adc
mov
mov
clc
mov
jno
adc
fidiv
mov
fist
dec
fnstenv
jnp
or
xor
fdiv
aad
jmp
add
push
push
inc
mov
add
rcl
pop
sub
or
ins
jg
cmps
nop
hlt
jge
outs
push
in
cmp
mov
mov
imul
aas
adc
jae
in
sub
xor
in
es
dec
mov
fist
ins
mov
(bad)
xchg
sbb
ja
loop
hlt
sub
dec
test
dec
scas
pop
xchg
cmps
push
push
movs
sbb
lock
out
jns
and
inc
xor
imul
pushf
mov
mov
arpl
mov
out
scas
pop
adc
jnp
adc
retf
int
enter
jg
mov
mov
push
xor
(bad)
xchg
stc
dec
jmp
sbb
sub
movs
in
adc
fwait
mov
xchg
div
and
icebp
in
xor
js
mov
push
out
add
sub
jo
push
in
popa
shl
sti
aas
dec
push
add
loopne
pop
pop
sbb
mov
js
xor
cwde
xor
pop
cdq
arpl
mov
adc
rcr
imul
or
(bad)
xchg
pop
mov
lods
in
retf
stos
add
pop
neg
dec
mov
add
mul
jbe
sbb
mov
mov
and
pushf
or
pop
or
cld
enter
cmp
hlt
cmp
or
and
xchg
pushf
push
vcvtsd2si
dec
lea
push
cdq
into
push
popf
enter
(bad)
js
or
push
xchg
jb
xchg
pop
bnd
add
mov
jmp
stos
adc
movs
fprem
mov
cmp
ins
add
(bad)
js
inc
and
or
and
aas
rcr
lock
ja
sahf
sbb
lahf
(bad)
daa
movs
add
add
mov
ds
sub
or
jl
mov
fcomp
fistp
stos
xchg
rol
ret
repz
push
sub
std
add
xor
retf
adc
or
lds
dec
adc
inc
jle
ins
js
add
clc
and
pop
neg
out
fiadd
hlt
mul
stos
xor
push
cmp
cmp
pop
hlt
xchg
sub
mov
inc
cld
pusha
xchg
in
dec
jg
adc
(bad)
cmp
add
fwait
push
or
sbb
loop
sub
ret
xchg
lock
ss
repz
pop
push
mov
cs
daa
idiv
iret
jno
mov
add
mov
inc
inc
gs
(bad)
scas
pusha
and
add
popa
cmp
mov
cdq
aas
loopne
(bad)
mov
les
push
sbb
jo
ins
ret
rcl
retf
loopne
(bad)
jg
add
std
xchg
cmps
mov
ret
std
xor
add
ja
idiv
hlt
pop
ret
fwait
stos
shl
mov
pop
add
sub
sbb
cs
inc
cwde
push
ds
imul
fs
jno
and
out
xchg
test
ret
cmps
mov
int3
pop
fstp
in
ins
test
jae
int
xchg
mov
popa
xchg
retf
mov
enter
sub
mov
xchg
mov
mul
xchg
cwde
imul
nop
mov
stc
data16
lds
les
cmp
inc
test
out
push
mov
sbb
inc
fcomp
pop
ficom
out
xor
mov
sub
aaa
inc
jp
jb
and
in
push
adc
je
sar
push
inc
enter
sbb
pop
jns
sar
mov
mov
das
ins
fsub
cmp
lds
xor
retf
pushf
push
ret
(bad)
sbb
add
loop
(bad)
outs
fcmovbe
out
icebp
mov
jecxz
test
push
sub
test
jp
jno
and
cmp
out
mov
int
xor
adc
push
es
jae
pop
mov
or
xchg
adc
bound
ftst
mov
jne
pop
xchg
cmp
sahf
repnz
or
sub
add
cmps
inc
add
cdq
int
test
outs
outs
sub
sbb
xchg
gs
sbb
xchg
xlat
push
adc
les
rcr
mov
cmp
mov
mov
xchg
push
in
iret
retf
popf
movs
add
inc
inc
pop
std
mov
cmp
out
gs
mov
push
xchg
xor
aam
(bad)
(bad)
or
push
daa
jmp
lahf
xor
mov
and
xchg
and
mov
ret
jns
pushf
popf
jl
sbb
sub
jp
mov
leave
enter
ret
js
fstp
adc
fidiv
ror
ja
into
mov
inc
mov
push
(bad)
out
xchg
enter
stos
(bad)
fisttp
xchg
test
icebp
inc
(bad)
push
(bad)
std
repz
adc
sub
es
push
imul
or
sub
out
cmp
jle
das
int3
fld
mov
cmp
push
xor
fstp
loopne
mov
movs
pop
call
cmps
mov
add
mov
mov
pop
sbb
or
dec
pop
xchg
test
je
jge
pop
jb
mov
inc
fld
mov
out
fadd
add
mov
and
cli
mov
aaa
or
xchg
fcomi
inc
mov
jno
(bad)
jecxz
xchg
lahf
push
adc
add
xchg
push
dec
mov
and
xlat
sub
pop
outs
dec
es
in
and
imul
push
sbb
inc
pop
jmp
pop
mov
sbb
mov
std
(bad)
xchg
pop
mov
adc
xor
pop
mov
mov
sar
xchg
push
ret
mov
cmp
adc
retf
enter
sbb
adc
xlat
je
ins
imul
lea
push
lods
or
sbb
jl
sbb
pop
rol
sbb
in
xchg
xor
adc
add
shl
jge
jecxz
lock
sub
jmp
jo
addr16
add
sub
gs
sub
add
adc
mov
icebp
jl
(bad)
les
xor
mov
xchg
cmps
or
test
add
(bad)
mov
loope
ja
je
pop
adc
dec
das
adc
push
jbe
lods
dec
jmp
sbb
out
mov
cmp
pop
sbb
(bad)
push
jne
fcmovu
jbe
pop
or
pop
mov
ret
gs
fs
dec
das
xchg
push
addr16
cmp
dec
push
xor
xor
outs
push
mov
xchg
dec
call
cmp
test
push
(bad)
bound
jg
sbb
shr
mov
sbb
call
enter
out
lds
sbb
mov
mov
xchg
pop
out
push
fs
jno
rol
ins
sbb
mov
mov
clc
dec
jmp
mov
mov
or
cli
dec
fisubr
push
sub
mov
jns
jbe
das
rol
mov
stos
ret
cmp
fcomp
mov
xchg
push
ror
icebp
fadd
dec
mov
cmp
xor
mov
nop
test
mov
iret
dec
xor
sub
push
lods
sti
push
cmc
add
push
mul
xchg
lahf
inc
push
cmp
push
add
mov
sti
cmp
daa
sbb
cli
or
cmp
add
into
or
xor
sub
loope
cmp
popa
in
dec
cmc
clc
ja
push
and
pusha
sub
mov
repz
(bad)
lds
sub
leave
ret
xor
fcom
push
or
mov
mov
adc
jl
dec
ret
mov
and
sub
mov
adc
add
jle
xor
pusha
xchg
mov
adc
dec
test
retf
adc
outs
mov
mov
movs
push
pop
loopne
mov
(bad)
lea
retf
ja
stos
scas
imul
loop
mov
lahf
inc
xor
sti
mov
jo
pop
mov
pop
arpl
sbb
mov
sub
imul
push
pop
fs
xor
fldenv
mov
sub
xchg
sar
or
inc
sub
xchg
loopne
xor
mov
leave
and
fs
(bad)
add
inc
push
jle
fsubrp
pop
pavgb
movs
inc
pop
or
adc
cmps
test
cld
arpl
pop
push
pcmpgtb
mov
xchg
xchg
xchg
jecxz
mov
mov
(bad)
mul
int
sub
xchg
jne
pop
and
jne
cmc
daa
pusha
add
std
add
jg
cmp
jmp
shr
rcl
rcr
fistp
cmp
stc
sub
aas
std
fsub
sbb
test
jg
pop
inc
or
(bad)
rcl
adc
and
pop
imul
mov
push
repnz
sbb
mov
test
fs
fwait
lods
sub
cmc
sbb
jl
stc
lock
lock
dec
mov
ret
dec
rcr
shl
xchg
(bad)
xor
and
sbb
mov
(bad)
jbe
(bad)
ins
push
push
das
fucomip
mov
ret
out
fwait
push
lds
or
cmps
lea
jmp
int3
adc
push
std
(bad)
retf
out
inc
ror
pop
dec
out
retf
mov
mov
sar
dec
lea
push
lods
jo
popa
std
push
stos
pushf
cmp
or
pop
sbb
sbb
jl
inc
popf
xchg
and
adc
(bad)
out
aam
into
es
jg
mov
daa
pop
fs
ret
rcl
dec
add
jle
xchg
stos
dec
xchg
mov
adc
enter
pop
call
pop
xchg
mov
sbb
adc
inc
mov
inc
pop
or
(bad)
das
sub
add
sbb
pop
cmp
mov
mov
xor
push
clc
push
(bad)
mov
lahf
std
xor
call
fld
arpl
add
xor
cmp
les
pop
(bad)
sti
aaa
pop
sbb
and
adc
xchg
xchg
outs
rol
arpl
cmps
inc
push
neg
mov
inc
push
sub
ror
call
pop
jg
pushw
imul
movs
cs
dec
lock
pop
push
and
pop
(bad)
movs
int3
addr16
and
pushf
fld
jg
push
out
movs
push
inc
xchg
dec
jp
adc
and
cmp
jge
adc
mov
aad
jecxz
stos
push
stc
inc
imul
mov
loope
mov
rol
ficomp
mov
sub
cwde
add
cmp
push
mov
aaa
dec
test
and
dec
loop
ds
mov
mov
or
es
sub
aas
sti
adc
jp
or
dec
test
lea
xchg
mov
cmp
lock
adc
adc
cmp
mov
mov
add
mov
arpl
rcr
xor
mov
add
aam
out
jne
xchg
adc
mov
or
or
and
mov
mov
xor
dec
mov
dec
jmp
inc
inc
cmp
sub
mov
mov
shl
push
cmp
sahf
pop
pop
cli
push
pushf
sub
loop
cmp
scas
mov
push
mov
mov
int
mov
test
test
cwde
ja
adc
mov
mov
dec
xor
hlt
and
enter
les
xchg
cld
loop
sbb
jb
add
sbb
add
push
dec
mov
dec
enter
fisubr
and
mov
out
add
cli
push
push
push
sub
adc
mov
cdq
push
xlat
xor
pop
inc
imul
cmp
je
xchg
test
loopne
dec
or
test
in
popa
js
fld
sbb
mov
pop
ins
loope
jmp
dec
je
mov
mov
pop
pop
cmp
pusha
mov
aas
pop
clc
dec
cli
dec
call
(bad)
hlt
mov
push
push
imul
aas
inc
cwde
add
enter
mov
sub
lea
jecxz
mov
outs
xchg
push
popf
pop
jge
inc
push
xchg
dec
adc
aaa
out
inc
call
jmp
adc
dec
ss
sub
aad
fcmovu
xor
cmps
xchg
pop
add
inc
pop
add
inc
dec
fcomp
rcl
adc
mov
cld
iret
and
mov
mov
outs
inc
cwde
xor
cmp
mov
mov
dec
mov
test
xchg
xchg
mov
mov
mov
pop
pop
sbb
sbb
enter
pop
call
pop
or
mov
mov
in
gs
adc
rol
cdq
leave
(bad)
mov
jmp
adc
sbb
jno
int
rol
dec
cmps
rol
mov
push
adc
xchg
sub
mov
inc
movs
add
cmp
jge
stos
xor
sbb
push
sub
jb
loope
pushf
jle
inc
xchg
pop
push
popf
sub
lock
add
push
popf
inc
jmp
dec
add
into
aad
data16
adc
loop
dec
hlt
retf
arpl
mov
push
mov
jg
and
aas
fild
and
mov
pop
cdq
mov
cmps
loope
movs
lahf
stc
test
mov
mov
and
cmp
out
xchg
test
dec
adc
ds
pushf
test
pop
xchg
mov
mov
push
je
xbegin
and
lods
shl
push
push
jo
mov
cmp
ja
mov
test
jb
mov
xchg
push
rcr
jge
rcr
add
jo
pop
push
or
jns
add
push
sub
jbe
mov
or
aaa
pop
dec
push
inc
jmp
les
or
movs
in
mov
cmp
dec
in
fwait
js
xor
xor
adc
add
mov
add
(bad)
es
mov
icebp
dec
and
je
mov
imul
mov
jnp
popa
and
sub
cmp
cmps
dec
movs
imul
out
iret
push
mov
pop
clc
neg
push
jecxz
xor
inc
add
dec
jae
add
push
jae
call
xlat
mov
xchg
dec
(bad)
stos
dec
xor
dec
loope
sub
retf
add
cld
lods
stos
shr
push
xchg
enter
ret
imul
fs
xchg
mov
xchg
add
mov
mov
pop
jl
jmp
dec
adc
sahf
repnz
stc
std
cmc
push
mov
cld
dec
adc
idiv
mov
inc
and
inc
shl
not
xor
xchg
xchg
xchg
mov
cmps
sub
in
jmp
scas
movs
xor
adc
nop
mov
mov
out
cmp
retf
push
sub
call
add
xlat
aaa
inc
imul
stc
jbe
in
jl
pop
in
pusha
or
xchg
and
cwde
xor
sti
int3
mov
adc
bound
iret
and
sar
xchg
js
cs
mov
xchg
adc
aaa
into
push
add
mov
xor
out
mov
mov
push
cmps
(bad)
mov
je
cmp
aas
mov
mov
popf
xchg
test
mov
(bad)
cmp
repz
es
jae
test
mov
pop
fcom
or
pushw
movs
test
movs
pop
pop
clc
or
jbe
(bad)
div
in
mov
(bad)
xor
ret
rcl
sub
and
add
pop
or
movs
push
call
inc
popf
ret
pop
xchg
leave
or
pop
ret
sub
sub
and
inc
gs
lock
xchg
jmp
rcr
xchg
int
ret
add
jno
ins
shl
jns
rol
pop
test
mov
lock
jmp
stos
or
rcl
sbb
pusha
jb
sub
adc
push
call
pusha
sub
fisttp
mov
add
outs
or
pop
cdq
sub
test
fdivr
ficom
pop
inc
addr16
frstpm(287
dec
rol
vpavgw
xchg
mov
out
pop
call
cmp
mov
jg
shr
mov
xchg
mov
fmul
mov
jbe
mov
mov
jae
mov
jne
aad
lods
pusha
retf
xchg
dec
xor
(bad)
lea
or
cmp
inc
cmp
or
push
or
rol
add
mov
jns
xchg
jns
jg
and
jmp
xchg
mov
and
inc
cld
cdq
and
jp
cmc
fimul
clc
push
jnp
and
imul
jb
push
push
inc
mov
imul
cmp
es
(bad)
out
sbb
push
mov
sub
in
mov
push
daa
jge
rol
sub
jle
cwde
je
ins
repnz
je
jmp
cmp
fstp
push
jo
push
cld
pop
or
and
lea
test
outs
es
mov
jecxz
pop
jp
mov
adc
and
cmp
xor
inc
ins
sbb
jbe
icebp
mov
pop
cmp
push
mov
xchg
adc
mov
in
cwde
fld
pop
stos
jecxz
xchg
cwde
pop
enter
stos
jmp
xchg
xor
loopne
js
in
xor
jns
loope
cmp
xor
das
or
mov
js
xchg
ret
mov
aad
and
fnstcw
fstp
inc
scas
cdq
scas
jecxz
cmp
das
ror
loope
cmp
rcl
xor
fs
cdq
iret
xchg
jae
mov
jge
mov
icebp
pop
jo
div
mov
loope
pop
sbb
mov
pop
mov
pop
jnp
daa
out
fisttp
jecxz
xchg
xor
loop
jno
cmc
(bad)
call
jp
ss
cdq
adc
stos
fld1
or
out
bound
scas
add
int
mov
fisubr
push
repnz
je
sbb
dec
rcr
xchg
push
test
ss
test
xchg
dec
stos
jmp
movs
sahf
xlat
ins
mov
push
in
sbb
push
in
das
fidiv
sub
fwait
jmp
(bad)
pop
adc
cli
dec
movs
clc
sbb
xchg
arpl
mov
pop
adc
std
fnstsw
jg
mov
dec
sub
ins
xor
lahf
add
jge
sbb
(bad)
add
mov
pop
out
jo
jl
fwait
shl
int
xlat
xchg
out
mov
outs
(bad)
fsub
hlt
imul
in
out
mov
xor
(bad)
nop
mov
iret
jnp
mul
jbe
stc
mov
inc
sbb
sbb
cmp
and
pop
int
xlat
xchg
xlat
sbb
mov
sbb
rol
jge
in
lods
(bad)
cld
push
xchg
fnstsw
cmp
ret
xchg
jg
iret
imul
sar
inc
mov
sbb
fmul
mov
xor
(bad)
rcl
jg
sub
or
fild
jae
xchg
fs
pop
test
add
loop
das
mov
jp
(bad)
add
jns
out
xchg
adc
add
jecxz
xchg
loopne
xchg
jo
pop
jno
and
jb
lods
sahf
movs
push
inc
icebp
or
loope
(bad)
cmps
shl
movs
push
daa
ins
pusha
cmp
xchg
lea
mov
outs
pop
add
sub
or
ds
push
jmp
jne
mov
adc
adc
dec
cmp
aad
push
dec
(bad)
sbb
dec
std
jg
call
add
adc
xchg
xchg
xchg
inc
pop
test
clc
mov
mov
fstp
ja
mov
inc
std
arpl
adc
add
pop
lds
sub
ret
or
shl
cmps
sub
pop
adc
ds
add
pop
aaa
sub
cdq
add
jnp
lock
adc
xchg
and
adc
(bad)
cmp
rcl
inc
dec
leave
mov
add
(bad)
rcr
cmp
xchg
mov
mov
sub
jne
rep
(bad)
(bad)
out
bnd
mov
xchg
jecxz
dec
push
mov
arpl
dec
pop
dec
jl
mov
je
ret
out
jmp
sub
inc
mov
add
mov
mov
loope
neg
mov
mov
fnclex
sub
pop
jp
or
out
js
sar
in
add
add
add
or
push
sbb
dec
test
inc
sub
jge
add
mov
jo
mov
ret
add
jg
ror
dec
(bad)
fst
js
in
pop
adc
les
xor
add
pusha
loop
pushf
jmp
sub
pop
mov
call
or
into
mov
cmp
ds
and
fst
std
and
push
dec
iret
jl
scas
iret
lahf
popf
fmul
cmp
movs
dec
dec
push
mov
xor
mov
sub
sub
mov
mov
xlat
adc
dec
rcr
retf
dec
jmp
push
mov
aam
or
stos
outs
mov
jne
fs
add
lea
icebp
mov
shl
popa
xchg
mov
test
xor
pop
push
retf
xor
icebp
cmps
(bad)
jg
lods
adc
outs
mov
je
stc
sar
fbstp
cld
loop
xor
ins
or
pop
mov
mov
mov
sbb
lods
push
retf
ja
push
dec
popa
movs
push
jbe
pop
aaa
int
xor
and
sub
loop
int
inc
adc
inc
(bad)
jns
adc
mov
arpl
and
mov
mov
ficom
gs
fidiv
or
sub
dec
(bad)
adc
xor
in
push
jg
adc
imul
repz
mov
iret
or
aas
mov
(bad)
or
cld
cmp
jnp
jno
test
ja
retf
(bad)
add
inc
(bad)
jmp
cmp
dec
jno
mov
mov
iret
cmp
movzx
in
scas
retf
mov
imul
jmp
rol
push
sub
pusha
inc
cli
into
fistp
in
(bad)
push
or
pop
test
loop
mov
dec
(bad)
or
or
xlat
repz
mov
jns
inc
xor
loop
cmps
inc
cld
inc
lea
pop
lea
cli
test
xchg
adc
pop
int
cmc
into
inc
repz
imul
and
lods
or
sbb
lods
inc
push
in
in
sub
out
pop
mov
mov
mov
popa
mov
sub
jns
jnp
jbe
sbb
mov
add
test
outs
sub
mov
mov
cmp
pop
adc
mov
test
cmp
scas
out
mov
inc
test
adc
ins
cld
in
mov
out
sub
pop
hlt
dec
jne
stc
popa
sbb
pop
ins
mov
push
inc
test
aaa
or
in
std
je
hlt
aas
sbb
ins
loopne
adc
cmps
cmc
das
add
ds
push
push
pop
and
fadd
mov
xor
sbb
inc
hlt
sbb
and
fcomp
or
mov
xor
retf
jns
cmps
aam
retf
pop
mov
xor
sbb
dec
popf
(bad)
jns
test
add
gs
xchg
movs
inc
and
push
scas
sbb
pushf
or
add
std
daa
mov
(bad)
aad
rol
test
in
out
cwde
adc
push
or
stos
cmp
xor
stc
mov
mov
scas
shl
mov
popa
pop
dec
push
xchg
fist
outs
int3
xchg
imul
jg
and
cmps
in
sbb
sbb
test
fcomp
mov
(bad)
inc
shl
sbb
push
(bad)
jae
and
mov
retf
or
sbb
push
push
cmp
in
cld
pop
stos
jmp
ja
sbb
sbb
sub
push
lahf
call
dec
cmp
iret
or
jmp
ret
xchg
jle
rol
pop
push
fld
push
inc
ret
mov
std
leave
cli
sbb
mov
out
std
dec
fsub
sub
into
jo
or
int
hlt
loop
sti
icebp
test
stos
repz
mov
sbb
xchg
addr16
jno
daa
pusha
ins
or
fist
stc
pop
ss
mov
and
pop
dec
aaa
enter
pop
popa
es
fld
mov
(bad)
pop
mov
push
cld
and
movs
jb
je
mov
jmp
jmp
arpl
or
retf
lds
xor
arpl
mov
sbb
popf
mov
sbb
add
xchg
dec
lahf
pusha
loopne
enter
jg
mov
xorps
pusha
dec
(bad)
or
rol
xor
cmp
psubusb
jae
push
ja
retf
(bad)
imul
sar
pop
xchg
fld
sub
sub
pop
scas
sahf
fild
or
imul
and
cmps
mov
or
dec
dec
out
popf
push
fsubr
push
pop
call
sbb
call
pusha
test
pop
inc
mov
inc
test
pushf
xchg
adc
mov
add
(bad)
adc
mov
and
mov
out
adc
mov
out
loope
mov
std
cmp
sbb
lods
in
inc
push
cli
or
pop
js
movs
sbb
fild
loop
repnz
add
add
mov
jecxz
je
(bad)
dec
js
sub
pop
ds
mov
pop
dec
adc
retfw
popa
or
dec
pop
sbb
push
ret
test
dec
cwde
xchg
pop
jecxz
lds
cmps
push
or
push
fcom
data16
mov
mov
sub
sbb
imul
movs
mov
jp
rol
push
lods
fiadd
mov
test
adc
mov
repz
mov
dec
mov
shl
push
xchg
repnz
jl
inc
std
sub
test
push
loope
mov
std
xchg
push
out
mov
pop
das
out
ret
scas
test
push
adc
sbb
dec
test
mov
mov
mov
add
xor
sub
or
inc
into
push
jo
lods
cld
adc
sbb
push
mov
jmp
xchg
xor
retf
jle
in
xchg
pop
cld
inc
xor
les
xchg
movs
fstp
add
push
mov
or
xchg
mov
popf
mov
sbb
je
adc
call
scas
shl
adc
and
xchg
xor
xchg
ss
sahf
scas
pop
addr16
mov
ret
jb
push
loop
hlt
xchg
mov
sbb
jns
cmp
mov
sahf
fucomp
imul
(bad)
fidiv
std
stos
push
test
rcl
mov
inc
stos
loope
pop
push
rcr
fidivr
push
or
or
popf
xchg
dec
mov
bound
adc
push
ins
cmp
call
jns
into
imul
mov
ror
mov
mov
movs
mov
pop
(bad)
aam
jno
mov
cld
rcr
jbe
repnz
daa
aad
rol
imul
loopne
xchg
adc
pop
pusha
sub
xor
retf
jnp
mov
inc
call
icebp
xchg
sub
sbb
xor
icebp
cmp
scas
push
repz
cmp
fcomp
mov
bound
dec
in
in
pop
pop
mov
mov
adc
pop
scas
js
sub
add
es
jge
or
(bad)
stos
xor
test
push
lahf
jne
mov
rcr
sub
push
push
jp
retf
mov
xor
jno
fbstp
mov
outs
cmp
scas
movs
test
jmp
inc
dec
cmp
repnz
sub
mov
out
nop
xchg
adc
mov
mov
push
shl
cmp
sub
mov
movs
int
movs
sti
lods
mov
push
mov
pop
ins
jg
jp
mov
call
into
jmp
mov
push
cwde
adc
clc
dec
add
popf
mov
mov
iret
ja
cdq
pop
add
dec
jno
out
enter
jmp
add
loop
sbb
int
or
push
xchg
int3
dec
push
mov
aam
ss
ins
mov
dec
pop
push
loop
into
dec
push
enter
ins
xchg
mov
aad
leave
jmp
pop
fwait
call
imul
test
test
cs
lds
inc
test
cmp
mov
push
fs
cmp
xor
in
xor
jmp
or
sbb
ds
gs
fdiv
ret
jno
pop
cmps
mov
(bad)
jg
add
mov
xor
jl
mov
sub
repz
mov
adc
imul
push
inc
(bad)
stos
cmps
addr16
sub
fld
shl
cmp
cmp
inc
imul
push
loop
mov
and
arpl
test
nop
imul
or
and
xor
cdq
or
ret
jp
sub
adc
and
sahf
xchg
and
loopne
mov
imul
test
xor
js
xchg
enter
(bad)
jmp
pop
fdivrp
clc
mov
push
xchg
sub
jbe
adc
inc
dec
scas
in
retf
retfw
inc
test
lds
nop
push
mov
mov
(bad)
loop
xchg
and
(bad)
mov
test
les
dec
movs
test
jmp
pop
into
xor
es
loope
jl
popa
cmp
pop
mov
imul
outs
adc
outs
xor
add
sub
movs
lock
fcomp
jmp
cmp
cli
mov
inc
and
push
and
or
pop
imul
cld
imul
cmps
and
(bad)
sub
pop
xlat
push
(bad)
fisub
mov
retf
pop
daa
mov
lock
leave
and
test
imul
mov
mov
mov
sbb
fwait
ja
jnp
or
mov
retf
in
stc
aas
mov
pop
mov
in
arpl
xor
adc
push
adc
xchg
repnz
jg
fld
out
push
sub
outs
retf
bound
fstp
call
cmp
repz
cmp
xchg
retf
inc
fidiv
das
cld
cs
jle
call
out
jg
(bad)
fst
push
jae
dec
and
sbb
and
or
js
mov
xchg
mov
mov
(bad)
add
popf
cmps
pop
mov
mov
not
fidiv
ret
int
xlat
dec
(bad)
addr16
test
sbb
jno
mov
cmc
jnp
adc
push
jbe
or
leave
(bad)
xchg
jl
ja
cwde
jns
leave
mov
inc
push
stos
mov
jns
shl
loope
mov
fwait
shl
loope
ins
mov
pop
push
xor
sub
dec
xchg
(bad)
(bad)
icebp
into
sub
mov
dec
cmc
lea
jns
icebp
int3
xor
stos
cmps
mov
xchg
dec
shl
pop
movs
stos
push
icebp
out
mov
call
jmp
(bad)
inc
scas
cmp
fisub
mov
shl
add
int
or
dec
jnp
mov
mov
sbb
mov
retf
aam
out
inc
scas
arpl
popf
call
sahf
outs
mov
mov
or
leave
fst
movzx
repz
add
outs
jo
pop
adc
in
xor
rcr
les
aad
xchg
sub
(bad)
pop
pop
cli
sub
or
js
add
stc
inc
mov
xchg
out
xchg
aad
fimul
lock
xchg
clc
push
dec
or
lods
lock
ficomp
jmp
dec
popa
sbb
aam
gs
gs
and
add
fadd
outs
mov
sub
test
cmps
dec
cmp
and
adc
out
push
fwait
mov
ds
cmp
add
xchg
dec
mov
jge
(bad)
loope
das
adc
adc
or
xchg
push
lds
test
cdq
xor
icebp
and
push
cmps
cwde
in
cmc
mov
push
and
imul
mov
adc
lea
mov
sbb
lock
mov
and
xchg
div
or
ins
icebp
dec
dec
(bad)
js
mov
sbb
mov
dec
dec
ins
jae
cmp
jge
sub
ret
push
icebp
call
jl
push
cmp
mov
lds
xor
into
sub
daa
in
jp
lds
mov
sbb
sti
sub
cli
mov
loope
data16
movs
jecxz
repz
mov
adc
(bad)
dec
lods
lahf
push
sub
push
xor
mov
mov
mov
push
test
repnz
dec
xchg
scas
mov
pop
dec
push
fimul
popa
outs
cmp
sub
pop
aad
repz
push
push
cdq
and
fist
sub
std
inc
or
xor
arpl
fcmovnu
dec
cli
icebp
pushf
dec
fisttp
xchg
imul
mov
jo
mov
mov
lock
pop
pop
stc
fsub
test
inc
idiv
sub
adc
mov
cmp
rol
push
ds
daa
fwait
jge
(bad)
pop
push
and
je
push
add
sbb
ret
pop
or
cmc
pcmpgtd
pop
and
mov
adc
(bad)
hlt
call
dec
push
fcmovb
daa
int
xchg
stos
mul
fidivr
outs
stc
or
cdq
leave
and
mov
int3
loopne
jg
in
push
cmps
mov
cmp
pop
cmp
jo
dec
out
in
cmovp
ds
mov
lahf
(bad)
test
adc
push
cli
dec
mov
or
mov
sub
jne
scas
add
mov
(bad)
cs
cmp
out
test
cld
imul
jo
loop
pop
shl
(bad)
js
shl
dec
sbb
jbe
scas
mov
cmps
and
pop
add
sbb
jle
cmps
xchg
neg
sbb
loopne
pusha
or
mov
and
das
dec
push
(bad)
sub
push
pusha
dec
shl
mov
adc
pop
push
or
cmp
ja
inc
cmp
fsubrp
bound
push
inc
jecxz
arpl
clc
xchg
pop
das
out
jbe
jmp
enter
test
inc
stos
loop
add
fadd
ins
out
add
cmps
ja
dec
sbb
shl
fwait
into
fnsave
(bad)
or
mov
mov
shr
arpl
in
addr16
sti
add
ret
in
xchg
mov
xchg
xor
and
pop
sbb
xor
inc
xlat
outs
or
pop
push
or
(bad)
jb
(bad)
mov
mov
push
aad
out
ror
adc
mov
test
int3
fist
into
mov
call
mov
sbb
popa
and
cmp
out
ret
in
mov
iret
out
xchg
mov
cli
and
stos
fistp
and
or
and
jmp
or
sbb
mov
daa
dec
sbb
dec
sub
push
mov
rcl
jge
sbb
pop
mov
dec
adc
inc
sbb
inc
dec
(bad)
xlat
jmp
or
or
test
cmp
mov
test
enter
xchg
pop
and
push
js
add
xchg
push
and
test
enter
std
adc
push
sbb
sub
shr
loop
cmp
inc
loope
inc
inc
mov
mov
sti
and
ds
lahf
mov
mov
into
fimul
mov
or
stos
lds
dec
test
push
test
pusha
adc
popf
in
repnz
sbb
sahf
ja
fist
jg
sbb
(bad)
mov
mov
into
imul
lahf
aam
xchg
xchg
push
adc
in
fdiv
sub
mov
iret
test
or
adc
js
xor
rcr
jb
(bad)
dec
fld
or
fs
push
xor
lods
xor
loopne
pushf
mov
imul
mov
stos
mov
xor
fs
xchg
push
inc
mov
mov
into
sub
fsubrp
xchg
jmp
cwde
addr16
pop
xor
sub
mov
inc
or
sub
cli
sbb
push
in
scas
mov
clc
cmp
push
clc
stos
xchg
outs
pop
ror
mov
les
retf
xor
jnp
test
mov
or
sbb
aad
inc
cwde
mov
jbe
dec
fidiv
movs
inc
mov
iret
ret
push
nop
push
call
inc
inc
rcl
dec
movs
push
cmp
fdiv
xchg
push
inc
ins
sub
jno
and
daa
push
sub
icebp
xor
lods
shl
movs
repnz
(bad)
das
into
pop
jmp
sbb
std
push
sub
adc
xor
pop
cmp
ret
mov
fsub
jo
dec
test
xchg
imul
xor
cmc
movs
sub
mov
mov
rcr
add
enter
jg
lds
std
push
das
outs
xchg
mov
jae
cmc
dec
jge
cld
int
out
ret
xchg
xor
std
add
sub
or
pop
mov
and
sbb
ror
sub
test
js
fcomp
cmp
mov
into
mov
loopne
retf
xlat
and
dec
aad
mov
(bad)
(bad)
or
in
mov
pusha
pop
test
arpl
pop
ret
les
iret
rol
inc
jecxz
sbb
pop
out
in
mov
jge
adc
xor
push
lahf
and
jns
mov
popa
int
inc
adc
add
in
inc
cmp
cmp
sti
sub
int
repnz
jle
inc
mov
in
and
stc
cmp
pop
cmp
js
sbb
fwait
ja
shl
lods
add
jbe
inc
inc
push
sti
xchg
push
dec
popa
call
cmp
and
adc
shl
fsubr
arpl
daa
(bad)
dec
inc
in
mov
test
cmp
jmp
push
sub
enter
xchg
mov
retf
icebp
jo
js
push
int
sbb
xchg
jbe
sar
and
mov
pop
mov
clc
cmp
mov
add
aaa
pusha
imul
xor
or
ins
hlt
das
sbb
loopne
mov
inc
mov
cmp
int3
mov
test
shl
xor
(bad)
pop
dec
and
xchg
aas
adc
xchg
inc
or
mov
cmp
(bad)
or
push
mov
cwde
out
mov
test
push
or
cdq
lahf
and
icebp
or
(bad)
mov
jno
jle
or
xor
ja
push
add
pop
jecxz
cmp
dec
sub
fcmovnu
outs
and
cmp
push
lds
mov
pop
dec
push
cs
call
xchg
or
js
in
push
or
inc
inc
mov
inc
xchg
jge
mov
stos
in
inc
ret
popa
jo
inc
fs
sbb
mov
sbb
jns
add
outs
cmp
loop
retf
jmp
das
shr
fwait
sbb
inc
hlt
(bad)
test
mov
dec
and
div
jb
fwait
daa
cmp
ds
mov
pop
mov
dec
mov
stc
(bad)
sub
cmc
sub
sbb
inc
sub
inc
jae
das
push
and
leave
sub
xchg
pushf
adc
adc
inc
inc
in
sub
int3
fwait
sub
je
mov
outs
xchg
xlat
loopne
lods
in
mov
imul
pop
mov
pop
push
push
movs
sbb
sbb
lahf
mov
imul
and
push
xchg
cmp
jo
cs
xor
add
inc
dec
push
xchg
xor
cld
aam
data16
in
dec
jnp
mov
push
push
xlat
int3
test
mov
(bad)
fild
sbb
push
xchg
test
ss
and
std
xlat
xor
rol
retf
add
adc
(bad)
fsubr
or
loop
aam
push
bound
cmp
into
stos
cmp
pop
imul
mov
(bad)
cmc
sbb
js
pop
add
jg
cli
fst
outs
fild
fbld
mov
stos
sbb
mov
lods
and
fsubr
cmp
sub
mov
cmps
aad
xchg
jp
mov
cmp
push
jnp
enter
add
or
int3
adc
cmp
push
dec
mov
mov
fistp
clc
call
mov
test
fldenv
and
mov
in
fs
mov
push
lahf
or
sbb
in
push
or
mov
push
mov
mul
or
in
out
push
pop
dec
or
or
in
xchg
inc
lods
pop
adc
loop
sub
icebp
push
adc
or
mov
ds
mov
or
adc
sar
enter
popf
cmp
dec
(bad)
push
sub
adc
popa
and
xor
call
bound
mov
call
add
dec
and
and
rol
add
xor
outs
jo
pop
add
pop
add
sbb
push
or
into
test
fdiv
repz
adc
pushf
mov
push
adc
sbb
cmp
pop
adc
pop
loopne
push
sub
mov
inc
or
gs
iret
pop
mov
call
sub
cmp
push
xchg
les
lahf
push
aam
push
xor
cmp
push
adc
lods
xchg
pop
cdq
xor
aaa
inc
sbb
push
pop
push
(bad)
cwde
jmp
dec
add
mov
leave
ror
and
xchg
mov
das
dec
mov
mov
xor
fist
pop
xor
jnp
xchg
xchg
mov
int
xor
dec
jmp
and
adc
mov
add
inc
loopne
retf
adc
add
ins
cmp
xor
outs
pushf
std
mov
aad
lahf
popf
xor
xchg
in
retf
dec
and
mov
jg
mov
adc
test
in
lods
or
(bad)
int3
fwait
stc
cmps
fmul
xchg
inc
mov
jg
adc
shr
add
sbb
retf
call
test
ja
mov
add
shr
bound
dec
mov
sbb
sub
int
aad
outs
movs
and
dec
iret
repnz
cmps
jg
xchg
adc
(bad)
bound
cmp
inc
mov
outs
jp
lahf
dec
js
scas
sub
add
dec
and
pop
(bad)
xchg
or
cmp
aad
push
inc
frstor
push
xchg
shl
lods
cli
jb
and
loopne
loop
popf
cmp
xor
sub
loop
int3
xchg
neg
xchg
adc
or
movs
adc
scas
aam
test
cmp
imul
mov
xor
movs
ror
and
dec
mov
jnp
shl
ins
cli
inc
ja
cli
sbb
fldenv
retf
cli
dec
push
mov
xchg
inc
or
inc
cmp
sar
ins
jmp
cmps
(bad)
retf
aas
mov
adc
or
mov
movs
jp
(bad)
cmp
xchg
lds
sbb
ins
cmc
div
or
ficomp
in
jae
lahf
push
cmp
sahf
jae
stos
rcr
add
sub
add
fadd
test
std
mov
jl
movs
xor
mov
in
imul
scas
mov
mov
jne
daa
and
jmp
sbb
shl
or
es
pop
cmp
popa
imul
sbb
cli
iret
jnp
(bad)
ficom
imul
(bad)
imul
jmp
bswap
cld
mov
mov
push
dec
lock
jp
fwait
sbb
fcmovnbe
sahf
push
inc
sti
xchg
add
jmp
repz
arpl
jae
and
aam
cmp
pop
dec
data16
es
enter
aad
inc
mov
cmp
mov
adc
(bad)
mov
arpl
pop
inc
add
dec
je
cmps
adc
in
sbb
aam
out
pop
cmp
lea
xor
icebp
jbe
jnp
jmp
fdiv
push
xchg
fwait
movs
xor
outs
mul
inc
lods
push
sahf
leave
mov
not
dec
aaa
fwait
sbb
fs
xchg
lods
or
xchg
imul
mov
mov
or
out
fld
cmp
or
mov
ins
push
ficom
shl
mov
and
push
fidiv
ret
clc
test
(bad)
sbb
pop
gs
xchg
inc
std
xchg
or
div
cwde
sbb
(bad)
mov
test
xchg
mov
mov
sub
fiadd
mov
inc
movs
pop
jns
sbb
(bad)
out
push
lds
push
push
scas
cmp
xor
push
or
int
or
pop
mov
pop
mov
ficomp
sahf
pop
pop
leave
xor
or
add
fdiv
pop
and
jp
xor
or
dec
int
inc
add
dec
mov
sub
add
popa
nop
mov
ret
fcomp
fld
jmp
pushf
cs
imul
in
dec
adc
icebp
xor
cmp
popf
test
(bad)
icebp
xor
(bad)
xchg
push
inc
mov
aas
imul
mov
arpl
sub
cmp
push
dec
call
push
xor
jb
mov
xor
in
icebp
cmps
or
dec
int3
mov
add
sub
pop
imul
jl
ja
scas
push
adc
jg
pop
cmp
dec
shl
mov
movs
cs
dec
scas
cmp
(bad)
(bad)
ficom
push
jo
std
je
mov
leave
jno
xchg
(bad)
mov
leave
cmc
pop
fild
add
stc
shl
sar
adc
hlt
out
bound
jge
cld
adc
cld
mov
leave
mov
das
sub
test
call
mov
mov
xor
inc
aam
iret
shl
push
scas
fistp
jne
cmps
jns
and
add
sbb
jb
cmp
(bad)
mov
xchg
icebp
sub
lea
add
sbb
stc
add
and
or
sar
jne
pop
xchg
fdivr
mov
mov
cdq
adc
inc
sub
outs
es
jge
repz
(bad)
repnz
leave
inc
adc
mov
and
add
xchg
xchg
or
out
mov
shr
out
xor
add
and
rol
or
call
cmps
xchg
and
dec
(bad)
sub
mov
jo
adc
xchg
inc
push
lea
jmp
test
cmp
jmp
stos
mov
mov
in
sbb
mov
nop
or
pop
push
popf
hlt
adc
xor
push
(bad)
mov
ds
xchg
and
xchg
outs
ja
push
dec
gs
fild
sbb
jb
inc
pop
pop
inc
inc
xor
lea
(bad)
sbb
ins
aas
mov
call
mov
sub
push
sub
push
mov
bound
fisttp
xor
jge
popa
es
imul
xor
outs
ja
dec
inc
out
and
out
out
fwait
sub
mov
mov
mov
xchg
mov
push
out
mov
scas
xchg
or
push
sub
arpl
xchg
(bad)
dec
add
test
ds
rcl
add
stc
shl
push
shl
mov
gs
cmps
mov
or
test
sub
mov
daa
dec
mov
stc
aas
mov
push
and
adc
jecxz
cmc
movs
retf
imul
popa
jnp
cmp
test
dec
mov
addr16
aaa
jmp
and
fidiv
scas
stos
xor
dec
push
in
cmp
jno
mov
data16
movs
jmp
add
scas
and
pop
push
jb
sar
and
push
adc
ja
xlat
sub
lods
ss
cld
xchg
jns
lods
xchg
dec
sbb
push
lock
mov
dec
popf
push
inc
jno
mov
push
sbb
out
xchg
es
sub
pusha
les
fwait
stc
sbb
or
and
gs
sbb
push
xchg
das
repnz
repz
jno
jbe
jge
loope
jl
push
shl
sbb
fnstcw
mov
ins
(bad)
dec
jle
call
movs
jle
xor
jo
bound
adc
repz
fmul
push
js
ret
int3
mov
cdq
or
sbb
jae
popa
add
mov
adc
out
push
(bad)
and
icebp
jo
cmp
jmp
pop
into
sub
sub
(bad)
push
out
add
sbb
sub
pop
iret
or
cmp
dec
mov
in
dec
imul
addr16
mov
sub
hlt
mov
popf
mov
jb
popf
jae
pusha
rcl
je
stos
xor
sti
adc
(bad)
pop
mov
cs
push
sub
and
add
cld
retf
push
loop
push
dec
mov
sub
mov
fldz
push
(bad)
shl
cmp
aaa
fadd
xchg
bound
stos
cmp
xchg
lea
push
aas
push
test
(bad)
fist
pop
(bad)
mov
rcr
scas
bound
dec
mov
(bad)
mov
imul
into
sub
pop
hlt
add
mov
cwde
jmp
push
and
adc
jne
and
je
inc
pushf
mov
ficomp
retf
sahf
mov
icebp
inc
dec
jo
fisttp
cmp
pop
or
js
scas
mov
repnz
add
nop
bound
pop
push
movs
adc
sub
retf
rcr
mov
test
mov
push
(bad)
jge
fistp
js
jge
jge
jl
push
mov
pop
cmc
jle
lods
jge
ret
cli
(bad)
jne
xlat
and
fsubr
fiadd
and
or
xchg
xchg
and
xlat
add
xchg
(bad)
cld
push
jecxz
xlat
cli
ret
push
cwde
jmp
jmp
fistp
cmp
or
sub
lock
stc
call
cmp
shl
in
adc
mov
cmp
nop
out
leave
neg
pop
test
(bad)
mov
mov
pushf
sbb
mov
(bad)
jmp
cdq
pop
pop
and
dec
pushf
pop
and
addr16
pop
jl
sub
jle
int3
pushf
clc
test
(bad)
xor
xor
inc
dec
mov
mov
and
hlt
adc
jmp
cmp
(bad)
test
das
adc
jl
jg
adc
adc
sub
test
in
iret
dec
jns
les
adc
jmp
ret
xor
sbb
mov
call
mov
iret
mov
jo
enter
in
or
add
shr
jecxz
popa
push
scas
jp
addr16
push
or
and
xchg
(bad)
dec
sbb
pushw
fsub
xor
(bad)
hlt
ds
push
mov
das
rcr
fstp
jle
js
xor
arpl
out
mov
jg
ja
sub
mov
sub
push
or
cld
int3
sbb
xor
arpl
sar
shl
sbb
enter
inc
xchg
and
lea
jb
out
loop
iret
mov
and
out
cli
or
retf
and
dec
add
nop
xor
sbb
(bad)
xchg
test
mov
sub
xor
ja
or
repz
sub
es
test
jl
xor
dec
xor
ret
rol
sahf
test
xchg
into
jg
or
mov
xchg
add
lock
outs
(bad)
popa
or
push
pop
fst
hlt
shl
test
pop
add
scas
ret
mov
mov
push
sar
xlat
jnp
push
and
mov
sub
or
(bad)
mov
push
pop
pop
xchg
int
sbb
push
jb
push
shr
stos
ror
cld
and
es
adc
push
mov
popf
in
psrld
push
or
push
pop
mov
in
xor
push
aam
leave
mov
xor
sub
pop
leave
sbb
shl
cld
aad
sar
ja
sub
pop
xor
scas
arpl
cwde
fsubr
scas
les
cmp
mov
repz
into
push
pop
out
sub
push
pop
and
test
cmps
and
xor
lods
out
out
ins
xor
sbb
ja
movs
add
inc
(bad)
out
pop
jecxz
mov
adc
cmp
call
pop
or
stc
or
cmp
bound
(bad)
repnz
cmps
popf
add
(bad)
(bad)
(bad)
(bad)
push
cmp
mov
ds
jl
icebp
pop
mov
push
addr16
cmp
icebp
inc
stc
dec
sub
xchg
inc
mov
cmps
jle
pop
cdq
vsubss
mov
shl
inc
mov
sub
cmc
or
repz
bound
neg
jae
imul
mov
xchg
cwde
in
jnp
lods
test
je
cmp
pop
push
imul
dec
jbe
and
rol
(bad)
addr16
aaa
pop
adc
sub
out
bound
cmp
add
mov
and
mov
out
mov
aas
or
cs
arpl
daa
fmul
add
lock
xor
cmp
and
fadd
and
icebp
aad
popa
push
out
pusha
cs
lahf
mov
je
mov
lods
mov
push
sbb
dec
fbstp
mov
or
sub
inc
mov
mov
mov
adc
xchg
inc
scas
imul
mov
push
lock
test
(bad)
pushf
cmp
push
sti
jge
xchg
push
add
cld
std
aaa
fsub
(bad)
cli
(bad)
in
inc
dec
stc
in
push
(bad)
cs
punpcklwd
push
int3
cli
lock
mov
inc
mov
push
or
or
cmps
fcomp
out
cdq
clc
fdiv
pushf
mov
xchg
mov
push
cmp
or
xchg
(bad)
aad
ror
rol
xchg
push
sub
mov
mov
call
add
and
sbb
mov
dec
dec
xchg
mov
sbb
add
jecxz
sub
pop
dec
cmp
aaa
int3
push
clc
(bad)
adc
cmps
scas
sub
xor
sahf
pop
outs
into
push
xlat
jo
retf
push
jnp
xchg
or
loopne
out
cmc
cmp
fist
and
shr
and
neg
fild
push
xchg
add
repnz
retf
call
adc
vmovaps
push
mov
aaa
les
mov
js
nop
aas
jne
or
push
imul
call
paddb
cmps
in
jne
scas
sar
adc
push
pop
xor
or
pop
ja
out
pop
jp
add
mov
or
repnz
inc
scas
enter
mov
jnp
int
mov
adc
mov
add
xor
push
or
jl
loop
stos
loope
sbb
mov
in
sahf
loop
jl
stos
jae
push
ds
dec
cmps
jne
jae
jnp
cdq
xchg
movups
mov
pop
lahf
jl
in
dec
add
das
stc
adc
dec
imul
mov
pop
pusha
xchg
popf
dec
or
jmp
and
loop
inc
jl
loopne
mov
inc
cs
or
sbb
sub
pop
pop
int
push
dec
push
movs
or
cmp
js
and
pushf
lock
ins
adc
fst
pushf
xchg
push
data16
and
xor
dec
push
dec
dec
mov
scas
mov
add
cs
les
pop
in
pusha
mov
jnp
cwde
in
stos
jg
pushf
cmp
cmp
popf
dec
test
jecxz
les
nop
icebp
xor
fimul
mov
aas
adc
sar
loop
stos
xor
dec
sbb
dec
fcmove
mov
sti
sbb
sub
inc
jp
stos
sub
add
mov
mov
mov
dec
(bad)
mov
aaa
ins
fisttp
(bad)
jl
popa
sub
or
fimul
adc
test
stos
sti
ins
sbb
cmc
push
ror
or
hlt
dec
inc
and
shr
cmp
jnp
aas
pushf
xchg
pop
pop
pop
retf
mov
push
dec
cli
cwde
sar
push
rcl
in
add
pop
test
adc
shr
outs
rol
inc
mov
neg
xor
dec
jmp
pushf
dec
and
or
and
adc
shl
int
cmp
dec
or
pop
pop
push
lea
xor
or
mov
(bad)
xlat
xchg
lds
nop
popa
add
out
lea
sbb
je
cmp
xlat
imul
adc
sub
push
xlat
(bad)
jns
push
cmc
shl
in
cmp
daa
ins
add
cmps
in
push
loope
dec
sbb
fadd
inc
rcl
data16
adc
mov
out
pop
ss
frstor
fdivrp
inc
inc
mov
xchg
inc
pop
int
push
xor
aaa
sti
test
movs
retf
xchg
repnz
pop
push
iret
inc
aaa
mov
mov
mov
cld
mov
bound
ret
fnstenv
hlt
mul
cs
pop
int
dec
inc
sbb
or
popa
mov
cmps
(bad)
cdq
mov
lods
jge
mov
jmp
into
and
add
cmp
inc
pop
lds
in
ss
loopne
push
cdq
sub
fwait
and
dec
jno
sub
dec
lods
out
outs
xchg
pop
aas
mov
ins
dec
pusha
(bad)
cdq
jno
pop
xor
push
mov
outs
das
add
adc
pop
cs
(bad)
cdq
ror
adc
fcomp
pop
ss
mov
add
jecxz
xor
pop
dec
outs
cmp
call
pop
xchg
xchg
movs
pop
lahf
sbb
sbb
test
or
fcomp
(bad)
out
adc
jg
cli
push
sub
fld
pop
pop
hlt
push
sbb
xchg
push
mov
in
mov
push
cmp
retf
push
or
mov
or
dec
int
out
mov
call
mov
scas
xor
and
mov
lods
stc
test
sub
mov
mov
out
jb
sub
jae
mov
ins
add
sbb
mov
aaa
mov
shl
sub
pushf
push
in
xor
and
jbe
loop
jbe
mov
dec
in
aam
in
pop
mov
movs
in
popa
shl
and
outs
cmp
sbb
int
addr16
push
or
fwait
aaa
aaa
(bad)
mov
sub
sbb
and
cld
adc
lods
mov
cmp
jle
rol
pop
scas
in
jo
and
arpl
lock
(bad)
xor
lods
xor
dec
outs
sub
add
inc
push
addr16
jnp
or
arpl
add
mov
lea
push
(bad)
lods
popa
addr16
stc
sub
xlat
outs
fcmovne
adc
fwait
dec
pop
inc
xchg
(bad)
ins
jbe
pop
das
mov
loope
int3
mov
add
call
lods
fisubr
movs
dec
repnz
or
sti
stos
ss
out
cmp
dec
push
mov
xor
in
or
retf
jp
jo
pop
btr
xor
mov
dec
arpl
nop
adc
push
out
jne
xor
enter
cmps
add
(bad)
mov
fwait
cmp
mov
xor
sbb
pop
inc
sub
test
jmp
outs
stos
or
lods
ret
test
mov
(bad)
cli
shl
xchg
into
out
ja
jno
ds
add
push
std
mov
pop
jnp
push
mov
jno
inc
xor
jle
in
fisub
push
(bad)
sub
cmc
fidiv
adc
sbb
adc
push
adc
mov
push
sub
add
mov
retf
jmp
xchg
dec
stos
pop
repz
not
mov
shl
scas
das
mov
mov
fs
adc
(bad)
mov
stc
cmp
imul
add
jl
jae
xor
cmp
sti
cmc
sbb
out
cmps
xchg
add
cmp
sti
jae
mov
daa
lods
push
(bad)
mov
bound
ficomp
xchg
sahf
sub
jno
cwde
stos
out
xrelease
inc
adc
dec
jo
inc
into
cmp
jmp
lea
ins
retf
push
fmul
arpl
lods
lahf
jmp
fstp
addr16
xor
je
arpl
sbb
das
pop
sbb
push
ins
pop
xchg
mov
mul
(bad)
popf
sar
jnp
adc
dec
(bad)
mov
(bad)
or
dec
xor
and
add
call
mov
gs
xlat
dec
int
mov
lods
or
not
cmps
ja
(bad)
out
(bad)
add
addr16
loop
sbb
push
int3
daa
mov
push
and
iret
daa
outs
xchg
aam
mul
sahf
rcl
ins
sub
fs
mov
sbb
add
mov
add
add
sbb
xchg
pushf
or
or
xor
dec
sahf
dec
add
mov
jne
loopne
add
xchg
sub
sub
lahf
xchg
call
neg
mov
add
imul
sub
icebp
or
aad
stos
mov
inc
cmp
movs
hlt
adc
into
jecxz
add
not
jb
pop
xchg
fs
call
or
xchg
adc
in
cli
adc
nop
xchg
pop
xor
test
jp
xchg
jnp
adc
pop
cmp
outs
stos
scas
test
cmp
jb
outs
jle
sbb
xor
fcomp
fcmovb
lea
les
push
test
ins
(bad)
sub
xor
mov
iret
(bad)
mov
imul
cmc
scas
imul
xchg
in
das
into
mov
jno
jl
jmp
inc
dec
cwde
and
adc
aas
outs
ja
(bad)
int
jecxz
mov
mov
out
push
scas
movs
jno
test
or
das
rcl
inc
adc
jae
pop
push
xchg
mov
push
call
inc
jmp
mov
push
lds
adc
xchg
and
xor
call
dec
add
xlat
mov
add
adc
mov
push
ss
mov
and
gs
sub
ds
mov
pop
adc
dec
scas
jae
pop
push
pop
cmps
mov
outs
pop
jmp
outs
retf
iret
inc
xor
stos
and
cld
stos
pop
dec
pop
jl
mov
pop
pop
dec
and
cmp
dec
sbb
mul
repnz
inc
test
xor
sub
ja
iret
(bad)
cmps
xchg
test
xor
cmc
imul
(bad)
call
repz
aad
into
jecxz
mov
sbb
ds
xchg
test
xlat
mov
neg
and
sbb
mov
push
mov
sub
push
loope
jne
in
pop
inc
jbe
outs
imul
test
test
mov
in
ja
imul
test
aas
(bad)
dec
cmp
imul
(bad)
daa
retf
cmp
cmp
push
cli
shr
adc
and
ja
push
es
sub
add
cmps
mov
sub
cs
mov
dec
or
add
mov
pushf
cmc
jl
pop
cwde
adc
adc
xchg
jnp
xor
les
mov
cdq
jns
pop
js
inc
rcr
test
mov
pop
aaa
pop
adc
fidivr
add
lock
jnp
ficom
push
aad
inc
sub
add
pop
leave
dec
xchg
push
dec
(bad)
(bad)
jge
mov
push
jno
dec
test
dec
pop
imul
mov
imul
pop
push
push
daa
mov
adc
pop
inc
out
hlt
repnz
or
mov
mov
int3
add
aad
sub
cmp
fld
add
and
mov
inc
iret
push
popa
mov
sbb
add
test
popa
(bad)
ror
cmps
ins
(bad)
and
and
add
and
arpl
adc
and
sti
jmp
(bad)
loopne
loope
add
(bad)
mov
jmp
fdivrp
sub
lds
jno
lahf
stos
icebp
inc
sub
or
mov
out
dec
pop
sub
mov
mov
inc
cwde
xor
inc
and
sbb
cmp
dec
xchg
xor
jns
jb
inc
das
ret
sbb
mov
pop
enter
imul
call
push
enter
popf
outs
mov
mov
adc
stc
(bad)
inc
sub
xchg
jnp
or
cmp
xchg
(bad)
in
dec
adc
jecxz
push
lock
push
add
jmp
and
sti
aad
adc
mov
pusha
(bad)
jmp
mov
idiv
xor
or
cli
xor
inc
inc
or
mov
or
lods
call
xchg
mov
mov
leave
ins
outs
push
inc
iret
movs
sbb
scas
loop
mov
leave
mov
cwde
loopne
pusha
iret
aas
or
mov
adc
mov
imul
push
das
out
sub
jge
scas
jb
or
movs
add
pop
push
push
inc
ins
jmp
xchg
xlat
rcl
scas
mov
arpl
mov
pop
or
dec
clc
sub
repnz
or
push
xor
es
add
test
jne
or
cmp
pop
pop
jmp
hlt
ret
scas
add
sub
add
pushf
ret
repnz
jg
or
lahf
jle
jae
das
or
push
je
adc
add
aad
in
mov
xor
gs
or
pop
enter
mov
push
mov
sub
stc
or
xchg
sub
xlat
sub
data16
jg
xchg
pushf
and
mov
pop
mov
pop
das
mov
out
xor
jp
cmc
(bad)
jl
fld
jl
jnp
xchg
adc
out
pop
push
popa
xor
movs
push
mov
mov
repnz
adc
or
adc
movs
pop
xchg
cmps
cmc
add
xor
sbb
or
jle
sbb
imul
mov
cmp
test
xor
adc
test
jmp
(bad)
fadd
cdq
inc
imul
das
lds
mov
push
gs
outs
sbb
repnz
jmp
inc
out
sub
(bad)
jbe
push
sub
(bad)
or
push
in
adc
mov
loope
cwde
(bad)
inc
or
mov
push
cmp
cmp
arpl
xchg
mov
out
dec
pop
lock
sti
mov
mov
(bad)
sub
fmul
leave
add
dec
pusha
ret
mov
lds
pop
pop
jno
xchg
sti
push
fisttp
fs
mov
in
xor
push
in
dec
rcr
and
fisttp
inc
add
mov
jns
pop
jl
dec
popa
outs
push
popa
std
push
and
fbstp
or
push
dec
ins
shl
pop
cmp
jmp
enter
xchg
mov
push
outs
mov
pop
imul
add
mov
aad
pop
ins
xchg
add
inc
rcl
mov
shl
movs
mov
fisubr
dec
xchg
scas
cmp
sub
fisttp
push
mov
adc
(bad)
in
or
lds
xor
dec
fistp
or
adc
pushf
or
out
retf
into
loope
adc
cmp
pop
and
cdq
ss
adc
pop
or
add
ss
movs
rcr
cmp
test
jne
sbb
inc
sbb
es
scas
and
imul
fwait
ss
(bad)
bound
jae
dec
fidivr
mov
aaa
inc
shl
data16
sub
or
pop
iret
sahf
test
add
or
(bad)
dec
sub
mov
jge
popa
retf
sbb
add
imul
adc
dec
ins
leave
and
or
and
loope
dec
mov
std
mov
std
jmp
mov
mov
es
xchg
mov
aaa
js
pop
aas
movs
xchg
test
cmps
dec
add
je
stos
in
bound
jecxz
(bad)
mov
les
mov
mov
test
add
shl
popa
inc
mov
(bad)
hlt
push
and
mov
hlt
sub
mov
xchg
cmps
mov
stos
outs
dec
xchg
loop
xchg
pop
xor
daa
push
sub
rcpps
std
pusha
xor
jno
mov
and
xor
add
xchg
cmp
and
rol
leave
mov
xchg
sub
jle
xchg
sub
sub
mov
or
add
mov
outs
lahf
dec
jge
mov
push
scas
ret
or
(bad)
sbb
fistp
jbe
sub
jno
cmps
xor
daa
push
mov
lock
cmp
rcr
xchg
mov
ret
add
pop
cwde
adc
inc
arpl
mov
scas
sub
sub
cld
xchg
cmps
cmp
iret
inc
sbb
imul
mov
sbb
mov
(bad)
sub
icebp
sahf
scas
clc
inc
pushf
out
lahf
add
sub
pusha
jno
or
(bad)
xchg
xor
jns
push
out
mov
lods
bound
sbb
stos
fiadd
fistp
xor
pop
xor
les
mov
cmp
pop
pop
mov
shl
daa
and
adc
jle
push
sub
or
mov
clc
jmp
fnstcw
adc
add
push
fwait
xor
pop
stc
sbb
sub
xchg
imul
adc
push
out
daa
push
int
fwait
aam
movs
xchg
cdq
mov
(bad)
cmp
cld
std
out
mov
sbb
push
imul
aad
add
push
neg
outs
cmp
ds
xor
aas
nop
add
js
inc
shl
add
cmp
movs
in
xchg
stos
inc
pop
jecxz
aas
inc
leave
jp
mov
aas
sbb
icebp
jae
push
aam
adc
jnp
inc
cmp
mov
add
sbb
dec
aad
add
into
jmp
iret
jbe
rcl
cli
dec
xlat
mov
mov
add
push
std
fmul
addr16
iret
dec
pop
or
fwait
daa
out
mov
push
(bad)
mov
mov
mov
imul
std
pop
sbb
jb
jae
cmp
mov
sar
repz
fcomp
retf
stos
pop
mov
sub
rcr
push
mov
or
sbb
xor
js
cmp
jno
pop
jp
mov
push
aad
jo
ret
xchg
mov
mov
dec
pop
imul
inc
mov
imul
sti
out
add
mov
cmps
sahf
mov
mov
adc
jg
repnz
lods
pop
jb
xor
scas
add
add
pop
mov
imul
sbb
rol
enter
push
dec
jecxz
cmp
inc
or
repnz
test
mov
rol
(bad)
in
adc
inc
push
test
push
leave
push
cld
jmp
and
fwait
sbb
sub
mul
sbb
addr16
retf
movs
xor
lahf
test
mov
into
and
sub
sahf
dec
jecxz
dec
sub
jnp
mov
and
mov
dec
jl
pop
scas
in
mov
xlat
xchg
(bad)
dec
mov
test
(bad)
pop
aad
jmp
ror
mov
in
dec
fisttp
fcomp
cmp
aad
mov
mov
mov
dec
mov
add
fcomp
pop
inc
fs
cs
push
out
cmp
std
cwde
cmp
xor
sub
jmp
adc
retf
(bad)
xor
pop
sub
cmp
and
shl
or
(bad)
call
ror
xchg
ss
je
or
sub
sub
clc
outs
pop
out
ret
and
aas
psubusw
aas
jno
inc
jne
xor
push
loop
fwait
sub
prefetch
ret
cmps
or
push
(bad)
into
jb
shr
mov
pop
test
bound
sub
adc
iret
sti
ins
bound
inc
enter
cmp
hlt
xchg
fiadd
pop
aad
jmp
xchg
mov
inc
in
push
jle
ret
stos
mov
jmp
and
lock
sub
push
or
(bad)
fst
scas
mov
aad
mov
sti
push
cli
stos
(bad)
clc
sub
cmp
dec
adc
(bad)
ja
mov
mov
mov
xor
pop
push
pop
dec
jbe
hlt
dec
ret
pushf
pop
xor
push
xchg
pop
jae
cmp
sbb
cmps
mov
cmc
cmp
push
and
xlat
push
test
mov
mov
sbb
xor
cmovle
je
sub
das
ins
ins
lahf
imul
jp
(bad)
jmp
cmp
inc
fisubr
enter
int
jae
and
ds
mov
stc
cmp
add
fdiv
ror
pushf
or
loopne
or
push
leave
sub
sti
or
movs
shl
sbb
(bad)
pusha
xor
sti
shl
jge
mov
neg
in
mov
fdiv
jns
push
hlt
or
popf
aam
fisttp
cmps
(bad)
into
jnp
inc
mov
int3
adc
cmp
in
ret
xchg
cmp
popa
jg
loope
lahf
jns
mov
icebp
xchg
xor
inc
jo
clc
cmp
xor
push
xor
inc
sub
jmp
xchg
ror
dec
mov
mov
pop
div
mov
fimul
add
test
outs
leave
jmp
jmp
aaa
xor
movs
outs
mov
gs
adc
out
pop
or
loopne
mov
dec
lahf
and
sub
xchg
jle
leave
jp
cmc
arpl
data16
imul
cmp
scas
enter
fdivr
fwait
loopne
sub
pop
les
mov
add
popa
sti
xchg
push
sub
lock
(bad)
hlt
mov
mov
adc
mov
fsincos
dec
sub
(bad)
call
call
rcl
sahf
sbb
retf
mov
or
mov
add
inc
xor
test
and
mov
rol
lea
test
gs
sub
mov
idiv
sub
not
push
(bad)
jecxz
push
pusha
in
cwde
mov
test
dec
inc
sub
or
dec
lea
mov
inc
mov
ret
ret
int3
nop
mov
cli
sbb
xchg
sti
stc
mov
inc
shl
adc
dec
jb
push
dec
jmp
inc
xchg
out
jo
cmpps
xlat
fcom
xor
xchg
cmp
(bad)
(bad)
push
das
jae
mov
and
inc
jo
frstor
std
jnp
pusha
sub
push
(bad)
adc
or
pop
adc
inc
out
sbb
or
and
fld
mov
cwde
(bad)
out
push
add
cmps
sub
jmp
cmc
sbb
enter
loope
push
int3
jbe
add
add
imul
jns
popa
fmul
fcom
cmps
xor
mov
fld
iret
xor
es
fsub
sbb
add
inc
lea
ja
sub
call
xchg
push
and
loopne
ret
dec
mov
add
pop
daa
into
ds
jmp
xchg
popa
dec
xchg
sub
jg
cmc
xchg
les
xor
xchg
mov
frstor
inc
xor
(bad)
mov
lahf
aas
cdq
mov
test
dec
inc
pop
jge
xchg
mov
pop
mov
mov
xchg
pop
xchg
and
lods
std
lahf
pop
shl
ret
jecxz
pop
(bad)
xchg
lea
mov
std
mov
mov
cwde
push
xchg
mov
dec
cs
test
push
or
sub
sub
jmp
and
dec
xor
imul
dec
jl
add
adc
fdivr
push
cs
mov
sti
push
dec
repnz
sub
aad
ins
mov
mov
adc
mov
bnd
mov
lahf
jg
jno
shl
into
imul
mov
pop
mov
xor
movs
xchg
iret
enter
in
cli
pop
pop
push
sub
(bad)
mul
pop
jns
and
push
mov
sbb
out
fcomp
xor
xlat
sbb
fnstenv
mov
pop
mov
cmp
clc
jmp
scas
std
adc
ret
in
(bad)
lock
push
push
scas
mov
add
std
in
sub
dec
je
jbe
call
add
ss
pop
mov
mov
cli
push
jb
mov
aam
dec
push
dec
call
in
pop
mov
and
loopne
push
(bad)
push
cmc
or
xchg
imul
mov
cmps
xchg
mov
shr
test
push
imul
dec
pop
jg
sbb
jne
in
xchg
aad
daa
fild
mov
dec
pop
cmp
dec
cmps
shl
mov
ret
sub
and
mov
ins
in
retf
xchg
(bad)
adc
leave
pop
sahf
in
fwait
cli
mov
push
les
in
fcmovnu
add
into
cmc
push
mov
jae
cmps
ret
shr
and
and
xchg
das
(bad)
sub
mov
cmps
mov
dec
sub
xchg
xlat
ds
test
mov
or
in
jmp
adc
stos
push
add
add
pushf
aas
push
ins
fist
mov
sti
pop
mov
shl
mov
inc
mov
in
aas
rcl
mov
mov
mov
pushf
cmp
stc
imul
out
cmp
mov
jmp
iret
shl
mov
cmp
cmc
shr
stos
or
or
xor
or
and
jg
jns
mov
push
das
in
int3
inc
mov
fiadd
push
test
std
push
push
daa
js
movs
in
push
xor
cmp
lds
sbb
loopne
sub
fisub
lock
(bad)
and
clc
xlat
ret
ss
mov
in
(bad)
div
pushf
lahf
ins
sbb
or
lods
bound
int
dec
mov
in
pop
xor
imul
sbb
js
cmp
xlat
xchg
aam
ds
out
mov
cdq
(bad)
je
mov
addr16
imul
sbb
mov
mov
stos
jmp
pop
test
xlat
popa
mov
pop
retf
shl
ret
in
popa
fmul
jp
(bad)
cmp
dec
push
out
push
push
pop
sahf
call
cmp
mov
jl
mov
mov
call
mov
adc
xchg
sbb
loopne
stc
mov
out
push
icebp
push
scas
jns
daa
and
xor
sub
loope
jae
inc
dec
leave
ja
ret
je
and
add
adc
push
(bad)
test
adc
sbb
mov
pop
pop
lock
push
sar
sbb
dec
cmp
lea
addr16
cmp
pop
and
in
or
stos
jb
test
js
pop
jecxz
movs
popf
jl
mov
xchg
shr
inc
cs
test
test
mov
cs
jae
and
add
mov
push
cdq
movs
pop
add
inc
add
mov
outs
pusha
add
mov
(bad)
hlt
dec
sub
add
add
inc
stos
dec
ror
stc
pusha
adc
pop
xchg
data16
xchg
(bad)
icebp
xor
mov
sahf
into
rcr
fcomip
test
mov
mov
mov
mov
(bad)
mov
or
or
out
mov
mov
inc
leave
jns
pop
inc
sub
cld
inc
dec
xor
add
out
pusha
aas
sbb
fadd
adc
retf
adc
in
mov
lods
or
ret
cmps
iret
enter
cmp
scas
je
imul
sub
fld
xchg
sbb
mov
mov
pop
cmp
popf
xor
mov
sar
aam
add
in
aad
cmps
pusha
jge
jp
addr16
xlat
bnd
aam
(bad)
sub
pop
ins
in
mov
mov
mov
inc
mov
movs
sub
aad
neg
ror
xchg
mov
clc
lea
push
xchg
pop
mov
ficomp
pop
mov
outs
imul
adc
jb
rcl
add
push
push
or
pop
fild
mov
add
repnz
pushf
xchg
xchg
inc
and
mov
in
fsub
popf
leave
mov
pop
push
test
xor
sbb
into
mov
push
pop
xchg
inc
dec
mov
xchg
add
cmp
(bad)
mov
fcomp
sbb
test
sub
arpl
(bad)
mov
addr16
xchg
inc
jl
nop
rcr
mov
cld
sti
cs
loop
ds
ret
cli
cmc
jb
sub
or
test
ds
fwait
xor
outs
out
cmps
ss
cmp
mov
push
and
mov
test
(bad)
mov
inc
sti
test
pop
lahf
sahf
mov
fwait
mov
ret
pop
aaa
inc
(bad)
xchg
pusha
push
inc
mov
sbb
mov
enter
mov
xchg
outs
inc
and
pop
retf
hlt
lods
mov
dec
fs
ins
sub
hlt
nop
iret
jns
fsub
sbb
xchg
inc
outs
mov
leave
adc
or
push
adc
ror
jns
jae
cmp
xor
cld
lods
jmp
push
dec
ss
add
cmp
mov
in
fidiv
sbb
pop
pop
adc
cmp
stos
xchg
fild
enter
or
rcr
or
sbb
(bad)
loope
das
test
fdiv
adc
mov
les
or
cmp
loop
mov
imul
out
and
dec
fst
les
jae
test
es
adc
or
(bad)
xchg
es
add
and
jae
mov
mov
pushf
sbb
dec
push
mov
int3
jmp
popf
or
adc
std
jle
sbb
outs
test
pop
nop
sub
ds
lock
ror
mov
pusha
sbb
iret
icebp
inc
cli
leave
mov
jb
ror
xchg
fwait
cld
sti
ror
in
lock
inc
aaa
outs
xchg
or
push
cmc
in
fisubr
adc
and
sbb
jbe
outs
shr
cs
jb
xor
adc
pop
jg
adc
mov
push
imul
hlt
std
imul
(bad)
lahf
lock
imul
test
mov
add
cmp
neg
push
xor
ret
mov
jmp
sar
adc
jb
shl
out
jnp
mov
inc
lea
mov
les
js
call
xor
les
cld
loope
cmp
addr16
add
bound
mov
and
mov
jecxz
and
or
push
mov
cs
jl
inc
fild
mov
cmp
push
in
stc
fcom
mov
push
sbb
fs
repz
aas
popf
pop
xor
scas
cmp
aaa
inc
int
popw
dec
dec
xchg
mov
ja
scas
cmp
(bad)
mov
into
stos
call
sub
aaa
lahf
mov
bound
inc
scas
push
les
test
jmp
ja
or
mov
adc
in
add
outs
jbe
pop
fdiv
js
jmp
push
mov
adc
mov
sub
adc
je
pop
jge
sbb
cmp
rcl
mov
into
xchg
fwait
movs
inc
imul
mov
xchg
aad
xor
mov
push
fnsave
movs
loopne
out
dec
sbb
int
lds
or
arpl
stos
fldenv
adc
mov
lock
pop
dec
ins
inc
jl
fcomp
adc
movs
push
sub
rol
pop
(bad)
pop
jne
pushf
adc
retf
rcl
xchg
daa
jecxz
stc
out
jne
sti
sub
pop
test
sbb
xor
xchg
sbb
push
iret
adc
or
pop
retf
and
je
scas
sti
icebp
mov
dec
sar
adc
cmp
inc
mov
adc
xor
fs
push
or
mov
lods
ret
jne
imul
stc
aas
cmps
neg
int3
call
out
push
fdiv
sub
jle
mov
and
adc
inc
sbb
push
out
adc
sbb
test
fsubr
jmp
jge
sub
xchg
mov
adc
daa
cld
fnstcw
mov
(bad)
fisttp
ins
add
loop
adc
pushf
(bad)
pop
fwait
mov
push
or
shr
mov
ror
dec
out
jmp
(bad)
xchg
adc
retf
ja
call
inc
cmp
ret
xchg
mov
arpl
retf
pushf
retf
xor
jmp
scas
cmp
sub
ins
lods
add
add
cld
(bad)
enter
mov
cmp
dec
xchg
imul
xor
mov
and
(bad)
gs
mov
cmp
mov
clc
inc
mov
add
pop
cmp
fild
out
in
out
mov
scas
mov
loopne
jo
mov
outs
inc
js
cmp
sbb
mov
push
inc
sbb
cmps
into
(bad)
jae
pop
daa
push
jne
push
dec
cmp
cmp
daa
test
fsubr
add
push
or
fidivr
mov
pop
mov
mov
jbe
xor
xchg
xchg
pop
mov
mov
xchg
addr16
sub
xor
and
pop
push
mov
mov
sahf
ja
leave
stos
test
outs
in
and
dec
sbb
push
fidiv
jne
mov
mov
mov
cdq
scas
xchg
xor
iret
pop
add
and
mov
and
dec
lods
mov
xor
or
adc
dec
in
jmp
pusha
out
popf
out
jle
add
fdivp
dec
or
jo
and
ins
lock
lods
add
and
pushf
jl
sub
push
dec
(bad)
xchg
(bad)
call
out
cmps
fsub
aas
popa
push
imul
aad
je
cld
mov
or
mov
outs
dec
ins
jo
ins
or
mov
leave
rcl
jl
xor
inc
xchg
mov
lock
pop
or
sbb
push
mov
inc
in
lock
jne
fisttp
dec
dec
fs
xor
xchg
cmp
jmp
data16
inc
cwde
call
retf
into
cs
sbb
imul
ror
rcl
retf
add
push
rol
xchg
inc
push
adc
(bad)
(bad)
jl
clc
test
jg
add
inc
push
and
outs
sbb
rcl
repnz
loope
test
jmp
dec
cmc
cmp
retf
mov
and
ja
push
xor
push
sub
mov
or
sub
cli
mov
cmp
es
adc
cmp
xor
mov
sbb
sbb
push
cmp
cmp
fwait
jp
mov
push
fidiv
dec
sub
arpl
or
xor
jb
xor
pop
cs
jge
movs
out
fsubr
std
jmp
movs
sub
ds
inc
into
adc
sub
mov
or
lahf
adc
out
jle
shr
addr16
pop
sbb
clc
sub
cmp
jl
fwait
sub
sub
push
imul
aas
sub
sub
sub
(bad)
pop
out
ret
daa
jno
xor
popa
cmps
stc
or
outs
push
xlat
iret
mov
dec
pop
and
(bad)
xchg
cmps
jmp
xchg
cdq
cmp
shr
jle
sub
add
add
push
add
xor
inc
mov
leave
data16
test
xchg
hlt
sbb
inc
or
in
or
imul
aas
ficom
sti
mov
or
loope
xchg
push
sub
fs
jp
mov
(bad)
pop
inc
mov
sub
fiadd
das
or
loop
aad
inc
sbb
enter
nop
mov
pusha
fiadd
and
(bad)
nop
pushf
pop
and
pop
fcomp
in
out
jb
ins
in
loopne
data16
push
ja
add
and
(bad)
mov
pop
mov
push
sub
adc
fwait
or
or
pop
dec
add
popf
aam
call
mov
fmul
jl
cmc
cmp
inc
cs
mov
xchg
adc
sar
hlt
out
jno
das
popf
in
adc
daa
rep
ja
mov
mov
mov
popf
rcr
int
shl
adc
imul
mov
jnp
stc
js
inc
push
pop
mov
mov
and
sbb
sbb
inc
pop
loop
adc
nop
inc
cld
pop
and
pushw
fdiv
xchg
ins
adc
pop
mov
mov
and
push
inc
sbb
es
mul
loopne
out
addr16
pushf
mul
retf
xchg
mov
shl
movs
jbe
stos
clc
loopne
add
and
leave
ins
sar
sub
out
pusha
hlt
cmp
mov
jle
add
pop
les
dec
or
and
in
push
dec
add
sbb
pop
pop
jp
outs
(bad)
pop
test
pop
push
mov
dec
sbb
out
add
loopne
jge
pop
jb
loopne
push
in
or
das
jecxz
arpl
(bad)
jmp
in
add
pusha
inc
ja
icebp
jmp
stc
push
mov
cmp
aam
jmp
mov
fs
dec
push
imul
mov
inc
push
std
dec
mov
enter
fisubr
mov
or
push
(bad)
xor
aaa
stos
push
jb
xlat
cmp
mov
call
leave
cmp
dec
push
pop
dec
mov
mov
mov
stc
inc
popa
out
ins
ja
jno
je
in
and
sbb
and
and
mov
xor
inc
cld
lea
jmp
inc
dec
cmp
mov
mov
pop
and
push
xor
out
(bad)
retf
gs
test
xchg
inc
cmc
add
mov
rol
cmp
mov
sbb
cmp
hlt
cmp
jg
pop
jns
cmp
movs
(bad)
adc
mov
push
pop
sub
push
hlt
movs
push
inc
and
mov
jno
adc
bound
jns
mov
dec
adc
jl
mov
jge
mov
(bad)
fld
loope
cmp
loope
pop
arpl
icebp
dec
stc
cmp
fmul
outs
inc
jns
imul
cmps
xor
fistp
(bad)
xor
mov
jl
or
xor
scas
pop
push
and
(bad)
rcr
(bad)
fmul
fild
sbb
jne
inc
jmp
jo
xor
jnp
shl
lods
pop
inc
xor
mov
pushf
out
imul
cwde
repz
fwait
aam
cli
xor
cld
mov
mov
shl
mov
aas
loop
and
cs
xor
cwde
inc
xchg
repz
scas
mov
mov
daa
adc
mov
bound
std
in
or
jbe
(bad)
enter
int3
mov
aam
inc
gs
adc
imul
mov
xchg
popf
jmp
xchg
into
shl
inc
dec
in
ss
push
addr16
repnz
and
mov
rcr
(bad)
cli
inc
sbb
push
(bad)
fs
lds
add
iret
fadd
(bad)
not
mov
aad
sub
(bad)
mov
or
sahf
inc
and
add
scas
cmps
sbb
(bad)
scas
push
add
fs
test
adc
jp
sbb
sub
mov
sti
mov
cld
mov
cli
int3
in
and
add
cmp
bnd
dec
scas
or
xor
iret
jno
je
sub
jo
mov
stos
out
ins
xor
lds
mov
or
jbe
pop
mov
xor
inc
aad
dec
movs
mov
outs
cwde
aam
rol
push
test
fnstsw
xor
stos
rol
lods
xor
dec
xor
xor
test
sub
repnz
inc
jo
xchg
hlt
sbb
imul
pop
cmp
push
adc
jbe
or
(bad)
xchg
cmp
jmp
idiv
mov
push
mov
jnp
mov
mov
and
data16
neg
mov
or
imul
xor
cmp
jecxz
push
pusha
xlat
or
mov
adc
mov
xor
popf
jb
shr
(bad)
and
retf
xchg
add
jmp
sbb
loopne
outs
or
test
xchg
cmp
in
add
cs
xchg
pop
out
in
jns
daa
jl
sbb
push
dec
xor
xchg
(bad)
fisub
mov
mov
int3
jns
add
retf
mov
sbb
sbb
adc
out
stc
jae
call
scas
pop
mov
push
sbb
sub
adc
retf
(bad)
or
mov
inc
mov
into
push
stos
xor
push
jo
lds
and
jne
out
mov
fstp
adc
aaa
jne
mov
sub
test
sub
sti
jne
sbb
shl
add
inc
and
or
addr16
fld
mov
dec
aaa
xchg
xchg
call
mov
mov
lods
jle
mov
mov
mov
pop
xor
sub
add
sbb
cmp
pop
adc
or
fld
gs
sub
leave
rcr
mov
sub
js
test
jno
xor
mov
xchg
add
test
jae
jno
test
xor
sub
mov
test
fwait
pop
fsub
add
inc
mov
cld
sbb
dec
cmp
push
ja
sub
inc
push
mov
sub
movs
daa
mov
sbb
pop
ja
ins
fldcw
lods
pop
mov
sub
sub
pop
inc
push
add
cs
add
jle
mov
pop
push
pop
xor
dec
dec
mov
sub
arpl
lods
outs
jnp
scas
inc
inc
add
leave
jmp
xchg
jecxz
sahf
dec
stc
jecxz
ins
or
mov
mov
and
jnp
mov
jnp
push
outs
fild
and
mov
pusha
(bad)
mov
pop
ja
retf
jno
add
jns
out
scas
mov
stc
xchg
inc
leave
jmp
jge
(bad)
sbb
cli
or
lea
xchg
retf
lea
scas
or
jne
jmp
fisttp
cmp
lods
ficomp
repnz
push
loopne
xchg
ret
test
sub
or
in
mov
pop
lea
mov
out
or
bnd
mov
mov
sbb
push
or
add
hlt
mov
dec
in
inc
imul
jmp
pop
xor
shr
xchg
cdq
iret
jg
cli
dec
mov
inc
in
adc
std
dec
sub
push
jecxz
arpl
scas
repz
mov
and
dec
adc
aas
cmp
adc
sbb
pop
or
outs
mov
sub
push
test
shr
fidivr
inc
ja
out
sbb
test
xchg
push
fbld
vmovq
aam
adc
lock
(bad)
xchg
shl
xchg
dec
movs
cld
cmp
repz
mov
ret
(bad)
loope
je
xor
add
jbe
pop
jmp
mov
or
fwait
dec
fsub
lds
int
daa
fs
int3
test
dec
test
cmps
inc
dec
out
inc
cdq
mov
jbe
dec
push
mul
jnp
imul
test
mov
or
cld
cmc
xchg
fild
jbe
ja
hlt
aam
mov
repz
ret
mov
pop
pop
push
mov
imul
rep
inc
xchg
push
int
push
add
and
retf
jl
xor
hlt
sub
push
enter
adc
loope
fwait
cmp
xchg
add
push
sbb
ss
cmp
mov
mov
out
lock
add
push
call
nop
scas
icebp
and
xor
add
sar
aaa
add
push
inc
ins
mov
cmp
jecxz
shl
push
cmc
xor
mov
icebp
mov
inc
loopne
push
shr
add
(bad)
iret
xchg
ins
pop
add
je
cmp
outs
call
dec
xor
icebp
hlt
in
cmp
sti
dec
jmp
add
adc
aad
push
mov
xchg
es
call
cmp
add
test
aam
push
mov
dec
repz
pop
mov
inc
jg
dec
movs
repz
jbe
jp
jge
fstp
les
mov
xor
ret
call
mov
ds
popf
xchg
mov
xchg
push
cwde
pop
sub
test
dec
rcl
ret
xchg
mov
jo
loope
add
popf
cs
mov
adc
outs
retf
sbb
pop
adc
sub
(bad)
or
dec
pop
add
cs
mov
out
mov
icebp
push
retf
cmp
xor
mov
jb
ret
jge
rol
push
add
sbb
dec
in
out
xor
dec
(bad)
cs
addr16
push
pop
(bad)
cmps
sub
cwde
jecxz
sub
leave
mov
add
cmp
jmp
adc
(bad)
adc
fdivr
lds
add
jno
cmp
push
adc
add
daa
inc
sbb
inc
pop
scas
adc
fwait
stos
pushf
pop
stc
mov
out
shr
mov
push
and
jge
arpl
jae
ror
xor
xchg
in
mov
fnstsw
mov
and
imul
and
mov
es
out
mov
inc
cmp
or
or
mov
pop
mov
movs
clc
cwde
push
aas
jmp
pop
jne
ins
(bad)
push
inc
scas
pop
jge
lods
mov
ins
adc
inc
test
mov
adc
lods
inc
outs
push
push
fwait
mov
dec
add
pop
pop
arpl
mov
mov
sahf
aam
mov
and
pop
sub
mov
sbb
mov
mov
js
mov
mov
imul
and
sub
jb
ja
inc
movs
call
jne
mov
daa
inc
retf
pop
inc
pop
into
loop
leave
cwde
loope
test
mov
or
jo
(bad)
mov
mov
sbb
les
mov
xor
push
in
or
xor
in
daa
(bad)
adc
push
(bad)
mov
push
test
push
fwait
rcl
out
test
xchg
cli
and
cli
xor
(bad)
and
dec
in
test
fwait
sub
aam
pop
inc
cli
lds
mov
les
mov
jp
mov
fisttp
repnz
push
add
movs
pop
iret
inc
(bad)
(bad)
sbb
push
ss
aam
test
push
imul
clc
xchg
retf
ss
fdiv
aam
fsubr
test
push
daa
mov
xchg
test
push
xor
sar
sub
push
jne
retf
popf
fsubp
or
adc
push
and
mov
leave
adc
jbe
(bad)
xchg
sub
cli
or
addr16
jne
and
shl
adc
mov
or
sub
loop
mov
cmps
fwait
push
xor
test
jmp
sub
push
add
lods
inc
icebp
pop
out
ins
(bad)
out
shr
cli
icebp
dec
mov
cmp
and
ja
lods
loop
sbb
aam
sbb
rol
or
mov
dec
xchg
and
sti
mov
not
or
enter
jb
(bad)
sar
(bad)
mov
je
fisttp
int3
call
mov
stos
test
mov
retf
shl
hlt
xor
retf
iret
test
out
ss
or
cmp
popf
pop
data16
inc
aaa
movs
jbe
fs
int
loop
cmp
(bad)
popf
adc
lds
xchg
mov
movs
leave
inc
ja
stos
imul
loopne
pop
push
popf
xchg
leave
inc
imul
adc
mov
test
neg
sub
add
ret
pop
xchg
hlt
jmp
pushf
lahf
ds
sbb
stc
in
or
repnz
mov
fnstcw
into
inc
cmps
lods
add
mov
imul
xchg
daa
(bad)
pusha
cld
jecxz
mov
cmp
mov
add
ja
or
pop
cld
call
repnz
jnp
and
xchg
(bad)
xchg
or
jmp
(bad)
fisubr
xchg
repz
adc
sbb
pop
xchg
xor
sbb
dec
jecxz
add
cld
push
sub
xor
jp
scas
mov
fbstp
or
cmp
leave
fist
mov
push
dec
adc
mov
clc
test
mov
call
and
in
cmps
cmp
imul
dec
mov
pop
lea
and
xor
or
push
cmp
fmul
iret
mov
bound
jl
pop
outs
pop
stos
stos
mov
add
stos
clc
or
xchg
pop
push
aad
out
lock
movs
(bad)
test
lock
pop
fbld
rol
inc
rol
ror
pop
ret
pushf
mov
mov
mov
push
rcl
and
inc
rcl
add
mov
cmp
and
aaa
in
inc
add
inc
pop
mov
icebp
inc
loopne
push
lea
sbb
dec
ret
mov
imul
leave
cdq
ja
shr
push
fistp
add
xchg
mov
jae
call
cmp
inc
push
loopne
fnstcw
adc
mov
stos
add
fs
call
mov
mov
push
ret
mov
mov
popf
(bad)
pop
xchg
push
mov
int
pushf
inc
cmp
js
stos
xor
cwde
aas
and
int
cs
push
div
adc
imul
pop
fsubr
jo
dec
daa
retf
inc
and
add
hlt
(bad)
pop
jne
sub
pusha
xor
enter
lods
gs
and
cmp
fsubr
in
in
pop
mov
imul
push
pushf
stos
loop
cs
sub
sub
imul
mov
pop
in
inc
test
cmp
ds
dec
mov
push
dec
and
leave
add
dec
xor
mov
or
push
ret
jno
mov
or
or
or
test
add
inc
or
addr16
jle
xchg
ja
inc
and
pushf
iret
fs
pop
sbb
jmp
jo
das
retf
sub
lea
xchg
out
adc
pop
xchg
sbb
js
and
lock
ins
dec
mov
and
ror
stos
movs
retf
pusha
jge
dec
pop
je
add
in
push
out
outs
rcl
mov
sub
inc
jmp
(bad)
imul
push
fidiv
std
xlat
pop
or
inc
jecxz
or
popa
mov
mov
cvtps2pd
inc
sbb
inc
push
jg
int3
sbb
and
xchg
lock
mov
dec
add
(bad)
fsubr
jnp
cld
pop
mov
mov
repnz
jnp
sar
arpl
or
jecxz
fdiv
adc
call
ss
shl
cmp
dec
sub
test
sub
pop
in
sbb
push
(bad)
push
in
push
out
xchg
(bad)
mov
lahf
retf
fisttp
sbb
loopne
sub
pop
cwde
mov
push
loop
mul
or
inc
in
mov
out
pop
dec
fidivr
sahf
addr16
xor
xor
enter
fidiv
mov
dec
cmp
aad
int3
lds
pop
stc
inc
retf
xchg
imul
jge
jge
pop
mov
push
ror
mov
fwait
aas
lock
(bad)
jle
sub
fs
loope
or
imul
jle
sahf
(bad)
movs
das
sbb
dec
in
fcmovnu
pop
mov
xchg
sbb
pusha
pushf
or
sbb
ret
xor
dec
push
cmp
test
aam
mov
movs
jg
sti
(bad)
cld
adc
pop
mov
jle
(bad)
dec
push
and
push
imul
lea
lock
(bad)
xchg
shl
test
lahf
inc
pop
and
(bad)
ror
dec
test
and
ret
sub
push
outs
adc
clts
in
gs
and
fs
fcom
test
ret
push
out
mov
sar
in
sub
pop
cwde
xor
scas
dec
lock
hlt
fisubr
adc
mov
leave
mov
scas
ret
sub
sbb
and
mov
xor
sub
and
cmp
cwde
mov
inc
clc
loope
in
movs
mov
scas
pop
sbb
lahf
lods
ret
sbb
mov
je
jg
sbb
add
adc
adc
mov
int
cmp
outs
mov
or
fldenv
sub
fimul
add
aad
cwde
(bad)
sub
add
and
dec
pop
pop
pop
xchg
adc
bound
cmps
outs
adc
sub
cmps
push
ret
or
lods
xchg
sbb
xchg
push
xchg
xchg
add
cmp
mov
mov
mov
add
inc
inc
aad
inc
pop
adc
inc
cmps
(bad)
movs
jae
inc
loope
adc
(bad)
cmp
sub
dec
shr
out
adc
cmp
into
dec
xchg
xor
lds
stos
mov
cmp
je
add
(bad)
loopne
aad
dec
xchg
mov
sbb
push
call
cmp
ficomp
imul
aas
lds
ret
(bad)
mov
pop
xchg
adc
or
or
pushf
cdq
mov
test
mov
xor
adc
(bad)
setns
jne
adc
xchg
fld
adc
jmp
aaa
and
pop
mov
shl
pop
push
pushf
xchg
pop
fwait
mov
fs
lock
add
lods
in
mov
pop
div
idiv
jae
loope
lds
pop
aas
sbb
aaa
push
scas
cmp
push
or
and
cmp
mov
xchg
dec
ins
jl
push
push
jb
and
xchg
jnp
pop
push
xchg
ins
inc
imul
push
mov
lods
fistp
push
lods
fidivr
pop
adc
(bad)
arpl
cmps
cmc
xor
(bad)
sahf
test
test
dec
mov
aas
sti
jge
lock
or
int
loope
mov
in
cmp
fs
in
stos
add
sbb
and
out
scas
mov
in
sub
push
mov
cli
addr16
or
arpl
mov
sbb
stos
sub
popa
or
cmp
jb
lea
sub
js
ret
shl
jae
xor
sbb
dec
jno
fcomp
push
fwait
cwde
addr16
shr
push
cmp
stc
ja
rcl
jle
das
les
js
test
sahf
fmul
fcmovne
imul
pop
outs
sub
adc
test
adc
and
mov
test
out
cli
and
pop
cmp
les
pop
push
out
je
jbe
or
mov
mov
dec
mov
sbb
pop
scas
xlat
stos
inc
cmp
adc
rol
ins
jb
gs
push
icebp
jl
pop
and
movs
push
fidivr
jecxz
stos
int3
gs
mov
mov
push
test
into
sub
xchg
loope
cmp
xchg
pop
arpl
adc
mov
jmp
cmp
and
in
dec
dec
push
das
sbb
xchg
jp
mov
and
sub
cld
es
(bad)
pop
cmp
jo
add
pop
adc
dec
pop
jne
inc
cmp
cmp
ds
lds
ins
rol
mov
jae
cmp
mov
(bad)
fistp
rol
adc
inc
jo
or
repz
cmp
and
aas
cmp
jecxz
into
lods
inc
and
repnz
jns
retf
pop
pusha
outs
pusha
movs
or
ss
ret
pop
ins
mov
aam
inc
(bad)
inc
xchg
jns
stos
mov
enter
popa
xor
(bad)
out
mov
inc
sub
or
jg
in
retf
(bad)
in
and
jne
sub
jmp
ds
or
jmp
(bad)
dec
inc
jnp
sbb
mov
hlt
pop
push
ins
sbb
iret
bound
sub
sub
(bad)
xchg
fld
or
dec
(bad)
sbb
imul
mov
inc
fcmovu
inc
push
out
bound
push
jnp
mov
test
push
adc
dec
mov
jp
fimul
xchg
ins
rcl
test
or
aaa
or
repnz
xchg
addr16
jbe
push
jmp
jg
test
sbb
idiv
and
xor
enter
ret
or
test
jmp
int
jo
jns
adc
leave
(bad)
fiadd
mov
popa
(bad)
jl
xchg
test
xchg
jno
jb
inc
cmps
jp
sbb
pusha
or
add
in
or
xchg
inc
das
jecxz
jno
addr16
lds
pop
aam
sbb
and
jmp
je
xchg
jbe
dec
ffreep
mov
fdiv
cmp
and
cmp
cmp
add
mov
scas
outs
cmp
mov
retf
(bad)
pop
retf
in
push
jmp
outs
(bad)
sub
adc
xor
sub
fld
mov
xchg
jbe
sbb
ret
xor
jno
or
add
mov
xor
jmp
add
daa
shl
mov
fnstsw
rcr
cld
popa
add
in
fcmovb
clc
adc
dec
rcl
dec
shl
xlat
adc
xor
rcr
or
and
popf
xchg
cmps
add
xchg
pop
push
cli
clc
cmp
lock
jge
adc
addr16
rol
push
retf
fidiv
adc
pop
dec
xchg
fcom
jge
jo
mov
into
mov
shr
fs
popa
add
fsubr
test
mov
xor
or
xchg
cmp
ss
mov
call
mov
mov
repnz
in
sbb
push
ins
mov
arpl
or
jne
adc
call
shl
or
sub
mov
addr16
or
mov
icebp
and
pop
mov
lods
jecxz
xchg
xchg
add
xchg
call
pop
jno
inc
retf
xor
aad
cmps
and
aam
imul
cmp
in
xor
in
push
adc
push
scas
repnz
jl
(bad)
movs
std
loope
push
push
pop
xchg
cmp
imul
cmp
and
mov
add
and
movd
mov
ds
aaa
xor
and
aam
mov
pop
add
or
or
jo
sbb
adc
mov
inc
cmp
in
(bad)
js
inc
out
sub
and
movzx
xor
cdq
add
ds
bound
fsubp
retf
lods
jmp
in
xor
test
aaa
aam
jnp
js
(bad)
scas
loop
popf
ret
rcl
sbb
push
mov
and
push
push
pusha
cmovo
xor
push
aam
add
mov
jmp
fisubr
pop
inc
inc
icebp
dec
add
retf
stos
add
pop
je
(bad)
cmp
cld
add
xor
popf
dec
push
sbb
rcl
pop
pusha
jno
or
inc
jno
aas
inc
in
or
test
dec
lds
sbb
sbb
aad
pushf
sti
xchg
push
add
sub
fmul
dec
ja
aam
jp
and
jb
cmp
scas
mov
dec
(bad)
out
je
repnz
mov
pushf
loopne
mov
xchg
sahf
dec
or
mov
jl
pop
mov
hlt
pop
push
call
add
ins
sub
pop
pop
das
add
xor
jp
das
xor
add
jecxz
mov
cmp
arpl
aam
or
inc
(bad)
js
mov
mov
imul
int3
shl
mov
inc
call
(bad)
mov
mov
gs
pop
jnp
or
mov
sbb
adc
lahf
push
call
ins
aam
mov
jb
dec
bound
xchg
in
les
mov
adc
ss
jae
pop
leave
icebp
in
ss
sbb
mov
adc
xchg
mov
push
pop
jb
sub
dec
push
dec
or
inc
mov
mov
frstor
test
fdiv
push
push
int
stos
test
rsm
loopne
add
movs
xor
lds
push
mov
push
iret
pop
jo
or
add
aad
ds
jecxz
not
sbb
sub
push
in
add
nop
mov
sbb
xor
xor
pop
outs
dec
push
outs
jmp
imul
or
(bad)
xor
pop
lds
imul
adc
inc
ss
out
cmp
jno
and
inc
mov
loope
cmps
xchg
mov
dec
in
dec
pop
jbe
imul
jno
loop
mov
js
mov
aaa
push
cmp
lahf
(bad)
mov
rol
popf
inc
(bad)
scas
jge
fst
or
cmp
rol
and
xlat
mov
sbb
add
adc
loopne
lahf
stos
scas
or
xchg
add
jne
cmc
rcl
out
icebp
ins
cs
popf
inc
sbb
call
(bad)
fstp
cmp
cmp
loope
push
pop
imul
or
scas
xor
cmp
test
aas
jmp
mov
jae
dec
aam
(bad)
pusha
rol
push
lods
sub
lods
mov
leave
add
pop
cli
out
mov
dec
push
jl
loop
xor
jno
sub
sub
adc
sub
jle
shl
cs
addr16
push
out
push
test
cwde
js
mov
sub
movs
imul
data16
xchg
push
mov
enter
push
out
cdq
arpl
dec
dec
mov
or
xchg
fisttp
das
jecxz
popa
pusha
lds
and
cs
cmp
fs
dec
scas
imul
cmp
stos
and
cmps
enter
push
lods
inc
loope
lea
movs
sbb
xor
(bad)
pop
lahf
ds
popf
sub
(bad)
push
push
lahf
retf
pop
ret
je
das
movs
les
sub
pop
pop
icebp
inc
mov
and
cs
xchg
lods
ja
push
jo
jno
and
mov
add
mov
sub
jo
stos
fwait
dec
jno
imul
popf
ficomp
jno
and
pop
call
sbb
out
xor
nop
call
sti
pop
call
in
stos
cvtdq2ps
lahf
cmp
mov
mov
nop
imul
or
(bad)
mov
dec
jge
xchg
movs
jno
in
add
push
inc
sbb
scas
and
push
and
and
mov
jbe
or
cld
sar
dec
jnp
arpl
lahf
mov
(bad)
std
sub
add
popf
sbb
ret
cmp
dec
scas
inc
dec
movs
outs
mov
dec
xor
test
jecxz
gs
lds
aam
xchg
add
hlt
xor
push
sbb
or
pop
repz
cmp
fisubr
push
jae
lods
sets
mov
pop
push
or
out
(bad)
rol
cmps
aam
lods
pop
jg
xor
(bad)
(bad)
ss
hlt
ja
pop
push
push
pop
mov
sub
xor
pop
stos
ficom
jno
push
lods
xlat
xchg
out
xchg
push
fadd
loop
xor
ror
ret
outs
pop
sub
sbb
fisub
in
mov
mov
cmp
pusha
lock
xchg
jb
and
inc
xchg
popa
mov
stc
cmps
clc
scas
stos
bound
inc
add
pusha
ret
cmp
xchg
xchg
cld
cwde
in
out
lds
pusha
dec
rcl
hlt
dec
shr
mov
stos
in
jo
add
lea
mov
shl
mov
mov
adc
inc
mov
push
(bad)
mov
dec
fnstsw
stos
dec
das
std
pop
sbb
add
pop
pop
add
adc
dec
pop
adc
fstp
imul
jl
popf
retf
ror
es
pop
mov
inc
jmp
add
sahf
loopne
fdivr
inc
in
sbb
cmp
and
lods
fiadd
push
fdivr
test
fld
pop
lahf
pop
push
in
dec
in
fcom
stos
push
sahf
jl
in
push
lock
sbb
add
inc
mov
stc
lods
fucomip
sub
shl
test
mov
movs
bound
pop
and
test
cmps
push
jae
push
test
dec
adc
std
out
push
(bad)
push
lods
dec
push
mov
mov
fstp
je
arpl
xor
xchg
scas
sub
shl
mov
into
cmps
or
fsub
and
lods
sub
add
inc
adc
retf
stc
xchg
out
xlat
mov
push
push
cmp
pop
dec
sbb
mov
call
mov
inc
cmp
retf
div
in
adc
jg
cmp
(bad)
gs
daa
popa
lea
stos
mov
jmp
aaa
jp
cmp
ja
push
push
clc
div
pop
xor
mov
pop
xchg
push
call
ins
push
pop
daa
sbb
mov
cmp
mov
cdq
test
sbb
push
test
mov
mov
aaa
mov
(bad)
sti
adc
inc
out
aad
jns
jle
or
add
push
out
rcr
sub
cmc
das
into
jno
mov
(bad)
and
jmp
and
adc
adc
pusha
fdiv
shl
jnp
bound
repnz
rcr
xchg
out
mov
int
xchg
push
inc
sub
imul
fisubr
aad
clc
inc
mov
add
and
inc
or
lahf
(bad)
je
test
cs
loope
sub
hlt
dec
ins
stos
push
mov
loope
push
ja
lea
leave
jno
pushf
ror
cmps
mov
jno
leave
aad
cdq
out
jl
adc
inc
or
jns
loop
jle
mov
xchg
dec
test
fisubr
fst
jp
mov
push
push
(bad)
imul
test
cmp
pop
xchg
mov
cwde
push
dec
cmp
data16
cmp
fptan
mov
push
mov
sub
popa
pop
inc
loop
and
sbb
ret
and
xor
dec
mov
adc
pop
jle
lds
ja
imul
ins
adc
mov
jo
jnp
inc
sbb
mov
adc
xor
(bad)
pop
jb
repz
mov
or
ret
cmp
xor
pop
lahf
retf
stos
sbb
pop
jno
and
lea
xor
cdq
dec
and
inc
pushf
cmps
push
test
cdq
idiv
add
pop
pop
test
mov
lock
add
out
xlat
(bad)
xor
jb
call
xor
cs
xor
in
pop
aaa
fwait
stos
inc
sub
lahf
mov
test
retf
(bad)
js
popf
inc
mov
xor
pop
mov
(bad)
jle
cwde
mov
and
or
shl
iret
iret
aaa
clc
hlt
outs
adc
add
jae
fst
dec
idiv
mov
pop
cmc
mov
add
ror
shl
mov
ins
cmp
push
je
push
jl
loope
adc
ror
lea
loopne
and
and
movs
stos
jbe
shr
jmp
icebp
lahf
mov
push
jmp
sbb
imul
add
jns
test
mov
std
ret
hlt
sub
ret
out
jo
sbb
sbb
pop
retf
lea
addr16
dec
pusha
push
loopne
mov
mov
sbb
dec
out
mov
dec
popf
mov
mov
mov
(bad)
hlt
push
pop
mov
xchg
popa
ret
int3
adc
dec
int3
dec
and
jne
mov
push
cmps
jns
mov
stos
lods
pop
loopne
fdiv
stos
int
out
ins
cwde
add
sti
sbb
fcomp
scas
add
mov
repz
xor
int
and
imul
scas
mov
pop
(bad)
fstp
les
push
add
ficomp
rol
pop
les
je
enter
mov
jne
stc
movs
mov
push
cmp
retf
call
fmul
cmp
dec
test
xchg
in
jp
xchg
aad
sbb
pop
out
push
imul
or
push
sub
fcom
(bad)
mov
or
leave
inc
dec
in
cmps
pop
mov
call
mov
pop
push
pop
adc
loopne
call
xchg
push
(bad)
or
retf
into
dec
repz
xchg
loopne
rcr
(bad)
fist
loopne
loopne
test
cmp
inc
mov
outs
mov
xlat
sub
outs
fwait
mov
pop
xor
xor
pop
dec
gs
pop
mov
xlat
(bad)
loopne
mov
and
inc
adc
into
cmp
cmc
xor
sahf
rol
aas
leave
xor
push
sub
dec
iret
popf
xor
in
cli
mov
icebp
jle
dec
jb
fwait
push
or
loop
repz
xchg
mov
fwait
xchg
sbb
or
cdq
or
mov
out
fucomip
bound
push
cmp
mov
cmp
sti
ins
aam
psadbw
loopne
jae
ja
repz
sub
jp
xchg
loope
rol
stc
push
mov
xchg
mov
xchg
clc
mov
ja
aas
shr
cmp
mov
push
shl
dec
imul
mov
rcl
clc
js
gs
ret
sub
das
ds
leave
lock
fld
repz
out
imul
push
pop
call
out
xor
push
stos
sub
pop
mov
jae
xchg
push
call
arpl
retf
mov
hlt
dec
mov
sbb
and
mov
js
sti
out
cmc
popa
mov
mov
les
dec
and
scas
in
pop
jg
adc
sar
and
ss
clc
cmps
jp
test
shl
sub
lea
or
int
retf
sbb
adc
push
xchg
push
fwait
inc
aad
fistp
mov
call
mov
xor
xor
shl
adc
pop
stos
cmps
or
add
dec
retf
mov
aas
out
dec
sub
sti
repnz
push
loopne
cld
pop
or
mov
mov
cmp
mov
xchg
jo
stos
xor
mov
and
arpl
aad
pop
dec
bound
inc
jns
pop
push
pop
nop
lea
inc
dec
frstor
int
xor
cmps
xchg
adc
push
fidiv
inc
test
inc
xor
(bad)
pop
add
cmps
cmp
push
sub
ret
mov
dec
pop
out
cmp
retf
add
fs
(bad)
cld
and
inc
movs
lock
jb
fild
dec
stos
es
sub
dec
arpl
cmps
in
aam
jo
fdivr
or
push
ret
inc
mov
call
mov
fadd
sti
enter
movs
sahf
push
leave
jle
mov
daa
pop
jmp
adc
jmp
pop
xor
dec
push
sahf
sahf
or
push
loopne
push
in
int
jae
adc
(bad)
iret
lea
mov
addr16
inc
cmps
xor
push
leave
pop
jecxz
or
mov
and
outs
mov
mov
into
ds
repnz
pop
jnp
and
pop
add
jecxz
mov
iret
fstp
stc
call
dec
retf
jmp
and
pop
clc
aad
adc
fadd
cmp
mov
fcom
cli
pop
movs
mov
sbb
add
xchg
int
xchg
mov
xchg
pop
imul
pop
mov
cmc
(bad)
sbb
outs
sub
or
cwde
sub
lea
rcl
push
leave
push
xchg
loop
fistp
rol
jo
retf
adc
pop
daa
and
in
pop
loop
fidiv
leave
out
mov
cmp
xchg
xor
iret
push
sti
and
iret
mov
ds
sub
fadd
aam
rcr
push
push
push
das
or
mov
ds
push
pop
in
sbb
aam
lods
mov
outs
fwait
and
jne
xor
neg
(bad)
in
sbb
adc
jl
dec
mov
or
xor
dec
test
ins
adc
rcl
sbb
dec
icebp
jmp
inc
cmc
adc
dec
or
iret
aam
push
inc
ins
mov
fisttp
jmp
aaa
out
sar
dec
pop
sahf
sub
pusha
(bad)
adc
inc
loopne
push
ins
sbb
and
stc
ret
jb
pop
hlt
or
pop
mov
(bad)
fprem
adc
inc
in
jecxz
sbb
push
sub
jle
push
mov
xor
fisttp
inc
push
movs
or
jge
mov
push
je
in
jae
push
outs
xor
mov
ret
push
leave
movs
(bad)
ror
or
dec
retf
out
push
fs
shl
mov
jp
jne
iret
xchg
xchg
jle
cmps
shl
pop
sub
sub
sar
cmp
pop
and
fistp
mov
stos
fnsave
or
pushf
and
pop
(bad)
or
jg
cld
sbb
repz
mov
sub
aas
sub
mov
dec
ss
sub
ret
jl
frstor
cmps
mov
xchg
and
das
jmp
sbb
sub
xchg
and
sub
and
sahf
adc
cmp
iret
pop
or
inc
sbb
pop
add
sbb
sub
test
bound
aas
dec
cmp
retf
mov
call
sbb
sbb
arpl
stos
and
mov
adc
idiv
out
movs
test
shl
ret
and
mov
jl
fst
adc
sbb
pop
mov
xchg
sub
setl
cmp
or
out
jmp
mov
xor
inc
inc
(bad)
jle
adc
and
aaa
cmps
fsub
daa
fisub
add
add
fucomip
aam
imul
jecxz
inc
(bad)
sub
in
ret
call
rcr
add
jno
pushf
mov
xor
xlat
lods
mov
test
and
fidiv
sub
int3
in
test
dec
retf
or
lods
xchg
fld
sub
cmp
out
xor
pusha
retf
nop
movs
pusha
scas
add
in
pop
inc
enter
push
lock
ret
jmp
mov
cmps
inc
inc
xor
add
jno
xchg
ins
les
fsubr
cdq
jno
and
mov
(bad)
mov
shr
repz
mov
lock
cmp
cmp
dec
aas
out
hlt
mov
or
scas
or
lds
inc
add
arpl
adc
xchg
inc
mov
xor
clc
mov
and
and
xchg
pop
fsubrp
(bad)
dec
add
jmp
icebp
jne
sbb
push
push
push
iret
out
fld
and
push
xchg
pop
(bad)
mov
mov
fst
call
in
and
jmp
mov
das
mov
or
cmp
in
std
test
xchg
scas
frstor
cdq
aam
add
fucomi
ret
cmps
cmps
xchg
xchg
dec
push
in
jmp
inc
and
xor
mov
jle
and
inc
mov
ror
sbb
ja
xor
pop
dec
and
inc
movs
xor
out
jle
mov
in
jmp
adc
mov
hlt
icebp
sbb
(bad)
and
ins
mov
sub
add
xor
shl
xchg
jle
pusha
outs
adc
daa
pop
or
add
das
mov
sbb
or
pop
dec
in
or
jge
std
adc
push
not
lock
test
sub
test
mov
rcl
mov
aad
sti
and
adc
jbe
lods
daa
jecxz
pop
or
pop
sbb
push
pop
shl
iret
mov
sbb
and
mov
ja
cmp
jmp
pop
push
jecxz
push
dec
cmp
mov
mov
mov
dec
dec
cmp
push
fidiv
jno
push
(bad)
and
sub
rol
pop
push
shr
or
cdq
mov
mov
repnz
dec
lods
mov
push
scas
mov
or
xchg
mov
cmp
jecxz
adc
push
imul
or
mov
xchg
pop
sbb
(bad)
jmp
fild
and
add
je
jecxz
dec
fbld
inc
in
cmp
dec
pop
inc
jb
sub
cmp
add
xor
clc
ret
in
jbe
xor
add
hlt
mov
jbe
dec
sub
lods
rol
pop
cmc
popa
pop
push
ins
ja
mov
push
pop
in
movs
out
cmp
jg
lods
test
jae
xchg
fs
fldl2t
(bad)
cmp
dec
add
cli
iret
and
not
xchg
ins
fcmovnbe
retf
fild
xchg
or
and
mov
(bad)
mov
ja
daa
dec
mov
cmp
jae
pop
xchg
or
and
push
dec
(bad)
mov
imul
mov
sub
mov
mov
sbb
test
fmul
or
bound
mov
(bad)
or
loope
adc
sub
xchg
stc
push
xchg
test
add
inc
push
fstp
xchg
xlat
aam
jae
rol
pop
lods
xchg
xor
sub
pop
ins
ins
inc
xor
and
add
pop
aam
mov
(bad)
fisttp
mov
test
jo
nop
pushf
sbb
adc
aad
add
jns
xor
js
lock
mov
sub
push
cmc
ss
lea
les
cmps
daa
pop
icebp
add
es
lahf
sub
outs
xchg
inc
fadd
dec
imul
shl
ss
sub
mov
push
fisubr
cmp
cli
enter
fmul
xor
jo
inc
xlat
loopne
xchg
sub
xchg
je
nop
gs
inc
in
jg
repz
lahf
jp
iret
ret
mov
pop
and
lock
xchg
test
push
pusha
hlt
shl
push
shr
stos
lods
ins
xchg
imul
sti
popa
retf
retf
mov
sub
icebp
ds
sbb
push
jmp
mov
sbb
ret
jl
push
xchg
and
adc
adc
jae
sub
sbb
sub
add
add
mov
mov
icebp
dec
scas
movs
mov
in
imul
movs
cli
fcomip
sbb
es
mov
xor
push
sub
pop
fidivr
pop
out
push
nop
das
lds
ret
xchg
adc
hlt
and
and
clc
(bad)
in
fnstsw
adc
cmp
jmp
icebp
addr16
push
inc
aad
out
ss
in
jle
dec
adc
out
xor
cs
mov
add
(bad)
mov
shl
add
xchg
push
or
test
lea
stos
les
(bad)
inc
stc
lock
jp
and
ins
popf
shr
retf
fwait
jns
fstp
sbb
push
or
outs
adc
add
cs
xchg
push
push
adc
imul
add
arpl
jo
rol
dec
mov
mov
jns
sub
mov
jmp
das
cmp
call
retf
jne
and
jns
mov
(bad)
jbe
in
into
sbb
mov
or
outs
lds
mov
xchg
cmp
mov
adc
call
adc
hlt
cmps
icebp
push
(bad)
lock
and
imul
add
adc
push
das
mov
shl
nop
mov
adc
adc
push
pop
shl
fidivr
cmp
and
and
call
pop
push
fstp
out
rcl
rol
mov
fiadd
or
std
lahf
push
lods
ret
mov
jmp
push
mov
cs
xor
dec
inc
aaa
dec
ret
mov
jle
cmp
enter
mov
pop
imul
in
xchg
stos
mov
inc
addr16
pop
fwait
int3
sahf
mov
loope
pop
mov
xchg
push
push
pop
enter
lahf
dec
aad
sub
fistp
fadd
cmps
cmps
in
or
mov
pop
cmp
fcom
jnp
mov
lock
retf
leave
dec
push
hlt
fiadd
es
jne
shl
and
sub
mov
cld
cmps
jmp
cld
and
data16
push
fldcw
sahf
pop
out
adc
pop
shr
sahf
dec
dec
inc
shl
add
pop
xor
aas
lds
cmps
mov
dec
mov
fdiv
das
mov
or
cdq
xor
mov
call
out
lods
addr16
xor
(bad)
or
pop
cmps
mov
aam
cmp
test
scas
pop
mov
jmp
pop
pop
pop
cmp
movs
adc
add
sti
mov
inc
sub
sti
leave
jmp
mov
iret
jge
sub
lods
clc
push
mov
xor
or
push
mov
loop
mov
in
(bad)
loope
loopne
sahf
cmp
jno
xor
test
mov
call
xchg
stos
dec
retf
xor
fadd
in
mov
out
dec
addr16
cmc
es
sub
or
in
retf
push
data16
fsubp
xor
jnp
dec
jns
pushw
xchg
sar
inc
cmp
inc
seto
stos
adc
adc
cmps
and
adc
mov
nop
dec
mov
stos
popf
(bad)
in
call
loopne
mov
cs
push
movs
mov
in
shr
inc
jmp
dec
stos
jno
push
jo
xchg
xchg
scas
push
retf
xchg
sub
ja
scas
xor
sbb
push
adc
into
aas
lahf
push
fadd
inc
or
inc
push
mov
cdq
call
pop
jmp
and
jp
inc
iret
cmp
adc
or
dec
xlat
daa
sub
in
cmp
rcr
xchg
lods
sbb
test
out
mov
test
mov
lahf
mov
mov
cwde
ror
mov
or
loope
aam
mov
mov
shl
xlat
(bad)
in
fist
sub
movs
in
mov
popf
mov
pop
rcl
int
and
xchg
in
scas
and
hlt
push
push
push
sbb
add
call
pop
push
adc
push
or
inc
mov
mov
pop
cmps
inc
outs
mov
out
out
sub
cvtpi2ps
ins
xor
pop
or
mov
xor
(bad)
jo
push
xor
jno
str
je
aam
stos
jb
mov
aas
outs
mov
call
into
add
out
(bad)
cs
xchg
pop
sub
lods
call
movs
xchg
shr
(bad)
int3
pop
outs
mov
inc
pop
repnz
lods
dec
fadd
xchg
sbb
push
(bad)
cmp
jmp
xchg
arpl
jmp
jecxz
hlt
in
jp
mov
sub
loopne
jecxz
call
jns
icebp
movs
fwait
arpl
repz
aad
dec
loop
pop
mov
repnz
clc
(bad)
out
xchg
sub
icebp
add
clc
ret
test
pop
int3
outs
xchg
xor
fs
pop
ret
push
lds
mov
or
pop
cmc
dec
xor
fcom
and
sbb
inc
pop
and
and
cmp
ins
shr
mov
mov
push
xchg
xchg
les
fs
call
pop
aam
fsubr
and
and
jge
retf
and
and
mov
inc
cmp
add
cmps
adc
jne
cs
retf
or
inc
push
icebp
sub
sub
(bad)
sbb
dec
shl
xor
or
pop
ror
int
(bad)
and
xchg
lods
pop
sub
ins
aam
jno
xchg
inc
loope
(bad)
out
lea
pop
add
dec
jmp
inc
inc
test
gs
jnp
popf
mov
ja
test
call
mov
xchg
jbe
iret
mov
test
mov
xor
ds
adc
xchg
dec
and
aam
and
sbb
dec
dec
popf
in
mov
pop
adc
dec
iret
inc
outs
fsubr
mov
(bad)
fdivr
dec
jb
xrelease
scas
(bad)
stos
add
(bad)
sbb
retf
aas
mov
mov
scas
(bad)
aas
jno
or
pop
iret
icebp
cmp
xchg
cmp
pop
jnp
ins
js
xchg
mov
(bad)
adc
ja
hlt
test
mov
cmp
sub
adc
loopne
(bad)
xlat
xchg
lods
push
add
lds
cmp
ds
mov
pop
fs
xchg
add
sbb
jmp
sar
sub
jo
(bad)
pop
test
mov
lahf
jp
jle
xchg
or
es
mul
inc
mov
pop
push
lods
sbb
sar
nop
pop
fstp
test
popf
sub
mov
popa
cmp
mov
sahf
in
jae
pop
arpl
outs
add
arpl
arpl
lock
out
sbb
add
loopne
cld
sub
xchg
dec
and
mov
lock
push
and
data16
mov
xor
and
int3
mov
imul
sbb
outs
stos
in
push
push
lds
add
jecxz
mov
rol
test
xchg
cmp
iret
popa
clc
mov
sub
cmp
mov
add
pop
int3
dec
jmp
xchg
xchg
mov
sahf
(bad)
sbb
fisttp
scas
xor
pushf
push
fs
out
push
pop
and
fsub
adc
mov
and
pop
mov
sub
cmp
lds
call
or
std
ss
sub
pop
pushf
mov
movs
mov
cmp
adc
stos
jge
dec
jl
xchg
mov
std
dec
aas
jle
(bad)
mov
sub
cmp
(bad)
ret
repnz
or
(bad)
js
jge
sbb
mov
fst
in
fwait
or
push
sub
cmp
mov
ss
shr
and
fwait
push
mov
cld
jp
cmps
repnz
cli
mov
outs
in
sbb
repnz
pinsrw
into
cmp
push
and
push
punpckhbw
xor
in
aad
cs
les
addr16
mov
and
out
jle
test
xchg
test
jmp
stc
aad
sahf
jg
hlt
stc
outs
loop
movs
out
mov
fiadd
movs
(bad)
adc
pop
cwde
fwait
aad
sub
outs
into
push
ds
xor
out
inc
jae
into
in
mov
imul
mov
pop
sub
popf
retf
scas
in
sub
mov
adc
mov
dec
jl
jecxz
aaa
fisttp
and
ins
daa
or
fnstcw
inc
mov
call
stos
jl
aaa
rcr
push
mov
mov
call
fucompp
fwait
and
pop
ret
dec
test
push
pop
bnd
jne
stos
push
cmp
mov
mov
sti
xor
test
mov
xchg
jmp
mov
and
xchg
add
jle
stos
jle
xchg
scas
mov
push
push
sbb
test
and
scas
jmp
push
aam
js
xchg
sub
and
(bad)
(bad)
xor
pop
mov
bound
fisttp
mov
mov
xchg
pop
add
sbb
sub
test
sbb
mov
jmp
mov
push
aad
clc
and
mov
dec
sub
jbe
xchg
inc
jg
(bad)
mov
adc
lock
pop
js
add
ins
push
xor
or
mov
mov
das
call
inc
jg
or
jno
ja
jle
aaa
adc
mov
inc
mov
or
adc
in
loopne
(bad)
add
mov
ins
fistp
lahf
sub
pop
imul
xchg
shl
push
sub
dec
xor
movs
dec
jae
fisttp
mov
aas
jo
leave
jbe
stc
mov
push
aad
inc
jle
scas
daa
out
fs
mov
push
inc
sbb
mov
xchg
(bad)
jl
sub
fsub
aam
dec
test
cwde
fs
sbb
repz
data16
imul
mov
add
dec
arpl
loope
push
ror
(bad)
sahf
out
pop
cmp
sbb
add
sub
test
movs
mov
rol
pop
push
cmp
push
cmp
mov
sub
mov
push
fst
jbe
or
mov
cmp
mov
cmc
push
sar
loop
aam
mov
jns
push
leave
cmp
sar
dec
fisub
push
push
int3
shl
or
pop
enter
call
(bad)
mov
mov
adc
mov
cmp
push
ror
stc
sub
xor
sbb
(bad)
(bad)
leave
jg
jno
inc
xor
jl
add
nop
sub
cmc
or
and
popf
push
push
mov
xor
push
(bad)
fcmovnb
mov
push
pop
rcr
mov
cmp
xchg
sbb
(bad)
outs
mov
xchg
adc
mov
(bad)
cmps
ss
addr16
xchg
jae
fwait
in
pop
enter
dec
shl
out
ins
mov
fisttp
dec
out
adc
(bad)
fstp
call
xchg
sar
mov
push
pop
sub
pop
ins
fdivr
jle
cmp
loope
jns
add
inc
push
xchg
mov
push
retf
int3
mov
mov
out
cwde
xchg
or
repnz
mov
dec
fdivr
gs
ret
push
fidivr
dec
push
add
jno
mov
pop
fwait
in
inc
fstp
js
lahf
xchg
(bad)
sar
sbb
or
cmps
push
sbb
pop
push
jp
jb
jmp
jns
jmp
add
std
dec
cwde
lods
std
mov
xor
loopne
shl
sbb
xlat
jp
mov
pop
sub
jmp
or
stos
xor
mov
cld
jbe
inc
shl
mov
add
fild
(bad)
mov
wbinvd
stc
cmps
push
popf
dec
cmp
sub
test
push
xor
popa
pop
pop
in
mov
imul
dec
pop
fs
mov
pop
mov
pop
sbb
push
in
xchg
pushf
adc
std
xchg
xor
ins
mul
sbb
jp
test
mov
imul
test
inc
mov
and
pop
adc
mov
push
xlat
stos
loope
jmp
mov
cwde
xor
pushf
cmps
inc
adc
fld
mov
xchg
cmp
push
ins
cmps
adc
in
loope
nop
jae
sbb
push
inc
into
jle
jecxz
inc
inc
pushf
or
inc
fcomp
dec
popa
and
dec
push
cmp
pop
jb
ds
stos
out
(bad)
or
enter
xchg
mov
clc
dec
sbb
popa
test
popa
add
jmp
jo
cwde
add
sub
fild
add
xchg
pop
push
test
xchg
in
mov
sbb
std
or
adc
add
ror
adc
les
int
int3
icebp
mov
jbe
(bad)
jmp
sbb
arpl
lea
dec
fdivr
adc
cmp
xchg
jmp
hlt
sar
fidivr
or
pop
popa
imul
paddb
jns
sub
fsubr
cmp
cmps
ins
dec
sbb
or
mov
adc
not
jne
mov
dec
mov
dec
jo
lea
push
pop
shl
push
ret
fst
in
ja
push
ins
mov
xchg
icebp
int3
cmp
cld
scas
pop
push
test
xchg
mov
dec
ret
shr
test
stos
out
pop
or
das
cli
ja
out
sbb
popf
sbb
mov
call
jmp
(bad)
cs
ret
jbe
call
enter
xor
jns
and
xor
fs
in
jne
fiadd
scas
das
repz
dec
(bad)
push
or
cmp
jmp
pop
xor
pop
fidiv
sub
call
mov
adc
push
or
mov
ss
retf
or
popa
cmc
push
popf
adc
pop
mov
test
icebp
pop
jge
adc
cmp
(bad)
xor
test
inc
scas
aaa
dec
sbb
test
leave
test
gs
cmps
mov
pop
cwde
into
test
jbe
or
inc
cmp
mov
std
lgs
std
adc
or
stos
push
ins
scas
add
mov
sbb
cmp
daa
jmp
mov
jno
mov
(bad)
cwde
dec
stos
and
pop
mov
out
mov
cmp
repnz
jecxz
ins
fdivr
aaa
in
fnsave
xchg
pop
jmp
in
ins
pop
int
(bad)
out
mov
mov
jg
clc
sbb
into
stos
loopne
jg
jge
inc
aaa
mov
fs
shl
hlt
fbstp
ret
mov
stos
fdivp
pop
or
mov
mov
popa
jp
or
push
out
fwait
mov
push
sub
jo
je
jg
and
xor
mov
pop
inc
loop
jecxz
dec
ins
dec
push
xchg
mov
xchg
cwde
test
push
lds
das
xchg
push
lock
lods
jb
jne
and
into
in
cmps
mov
mov
enter
add
jp
in
shl
xor
cmc
shl
cmps
pop
and
xchg
sbb
or
jmp
cwde
fld
stc
lock
inc
retf
fimul
mov
add
pop
in
pushf
pop
adc
push
je
lds
ds
xor
sub
jb
sar
jge
rcl
xor
adc
inc
pop
push
out
or
pop
xor
push
xchg
pop
jmp
mov
ins
aaa
mul
nop
pop
pop
(bad)
xchg
test
mov
push
mov
call
leave
mov
retf
and
fptan
ins
adc
cmc
scas
out
mov
fdivr
(bad)
std
inc
mov
sub
jnp
add
test
adc
mov
mov
(bad)
ins
mov
mov
call
cmps
pop
xchg
sub
int
sbb
ret
and
pop
iret
mov
cmps
ret
lods
mov
ret
jbe
jb
cmp
test
sub
aas
cmps
arpl
dec
inc
add
push
es
inc
push
pushf
push
and
in
dec
dec
mov
adc
mov
fwait
out
aad
xchg
cli
sti
ss
lods
clc
push
jg
push
sti
scas
(bad)
sbb
(bad)
cli
sub
jmp
rcr
(bad)
out
shl
sbb
lahf
push
dec
lods
mov
int3
(bad)
loopne
xchg
add
arpl
jne
mov
ss
inc
sbb
retf
in
adc
xor
ja
shl
pushf
xor
add
pop
xchg
lods
dec
int
jbe
es
pop
add
stos
shr
add
mov
jmp
sar
pop
inc
cmp
cs
xchg
(bad)
mov
xor
mov
jns
mov
shl
in
and
mov
inc
icebp
mov
into
push
mov
int
xchg
sub
xchg
sub
stc
cmp
dec
fidivr
jp
nop
xor
dec
stos
js
mov
je
cmp
cmp
adc
sub
lods
pop
mov
test
xor
daa
inc
add
xchg
mov
call
sahf
stos
pop
js
in
dec
call
int
(bad)
aam
mov
outs
or
ss
inc
movs
push
push
push
mov
xor
jnp
aaa
gs
popf
sub
jbe
fmul
add
daa
aam
shl
mov
adc
cdq
cmp
xchg
pop
sbb
dec
cmp
retf
mov
jle
jg
and
in
add
or
fiadd
push
cli
or
loop
dec
sbb
int
mov
mov
adc
lods
aam
adc
xchg
mov
lods
mov
retf
movs
bound
aas
pop
stc
and
imul
pop
mov
cmp
test
(bad)
lahf
and
jne
dec
dec
pop
xor
int
xchg
mov
pop
xlat
xlat
cmp
fisub
ins
pop
pop
pop
fistp
les
xchg
call
and
mov
inc
push
imul
jbe
stos
hlt
call
aad
pop
and
dec
jcxz
xlat
call
push
shl
fs
push
cmps
dec
adc
sbb
mov
sbb
inc
movs
or
(bad)
in
cmp
sub
popa
jp
mov
cmc
push
push
push
imul
sbb
out
sbb
in
out
out
dec
hlt
add
ins
xor
and
lock
xchg
fimul
out
sar
repnz
sti
ins
xor
dec
sbb
outs
mov
inc
mov
inc
cmps
push
pop
aas
(bad)
ja
mov
in
loope
cmp
retf
(bad)
mov
jge
jl
xchg
jg
xchg
imul
lahf
cmps
imul
and
popa
pop
aas
mov
xor
out
int3
mov
(bad)
push
mov
(bad)
test
repnz
fistp
es
out
ret
outs
ss
or
cdq
shl
loope
pop
mov
icebp
xchg
and
leave
ins
pop
xor
mov
pusha
cld
and
adc
fsub
mov
sbb
pop
(bad)
hlt
jmp
ins
les
push
icebp
mov
jbe
or
xlat
repz
mov
cwde
lock
out
sub
mov
mov
and
pop
jecxz
and
sbb
push
retf
jno
lahf
sbb
jmp
xor
in
outs
mov
aam
ret
shl
cld
cmp
js
mov
shl
outs
pop
gs
fwait
push
ins
fnstenv
mov
dec
popa
xor
gs
adc
adc
adc
pushf
into
xor
stc
lock
dec
jmp
call
mov
repz
mov
(bad)
jno
and
in
cld
int
scas
add
fstp
dec
mov
mov
jae
mov
popa
xchg
test
lods
jae
sub
out
xchg
mov
mov
cmp
nop
enter
push
aad
pop
sub
push
xchg
inc
xchg
xlat
push
retf
cmc
push
iret
xchg
push
pop
xor
loopne
aad
adc
ror
jl
repnz
lods
cmps
mov
push
sub
test
or
out
outs
mov
repnz
loop
sbb
push
jge
ins
addr16
or
pop
adc
add
pop
mov
adc
data16
xchg
mov
pop
sbb
dec
jb
shl
das
xor
test
xor
sbb
dec
xchg
add
loope
aam
adc
lds
repz
lods
bnd
push
test
outs
test
pop
mov
inc
pop
movs
das
jmp
popa
mov
out
pushf
addr16
daa
cmp
sub
cmp
or
push
ror
dec
push
add
jae
jg
and
mov
lods
shl
jmp
fs
jmp
adc
adc
push
or
aam
pusha
fdecstp
js
xchg
(bad)
dec
cmps
mov
jb
loopne
repnz
mov
jmp
pop
mov
es
or
inc
outs
dec
fucompp
jo
inc
push
adc
mov
ja
lds
movs
add
test
dec
inc
inc
test
pop
pop
inc
ins
in
cmp
ret
xlat
imul
call
aaa
in
and
test
fdivr
ins
jne
xchg
(bad)
jg
inc
push
pop
pop
into
je
sub
mov
adc
popf
popf
inc
lock
retf
mov
sbb
add
sbb
xor
sub
cmp
jmp
das
xchg
lea
adc
repnz
stc
out
es
and
xchg
pop
mov
nop
gs
cdq
pop
adc
ins
cmc
dec
imul
cmp
cmp
jg
in
cli
push
mov
push
xor
jno
pop
mov
gs
mul
sub
enter
(bad)
or
ins
pop
scas
xor
call
jb
aam
mov
lock
push
nop
movs
and
add
add
jmp
bound
shl
jmp
mov
adc
inc
in
in
lods
imul
shl
jae
pop
hlt
jle
sub
inc
jmp
cmp
idiv
mov
xchg
pop
jle
shl
retf
cmp
sub
sbb
repnz
(bad)
xchg
jb
mov
shl
fidivr
rcr
mov
add
movs
hlt
(bad)
fisubr
cs
mov
cmp
xor
test
fsubr
jecxz
dec
iret
push
int
iret
pop
int3
dec
push
stos
bound
(bad)
fcom
data16
pushf
pop
pusha
jo
mov
(bad)
push
adc
repz
int3
xor
cmps
mov
cdq
dec
fadd
or
ss
sbb
fnstenv
in
(bad)
cmp
pushf
call
mov
nop
fdiv
inc
mov
lods
cdq
push
mov
je
out
cs
inc
je
push
push
and
pop
cmps
bound
add
inc
xchg
xor
inc
jle
sub
xor
ss
jecxz
rcl
(bad)
call
jge
mov
aad
jl
pop
jmp
inc
fmul
add
jbe
mov
jae
aam
test
sub
jle
push
pop
clc
inc
test
jmp
ret
mov
pop
pusha
dec
jmp
js
mov
mov
cmp
jns
xchg
jmp
sahf
xchg
mov
test
retf
mov
popf
fstp
shl
adc
cmp
push
add
(bad)
aam
mov
stc
xlat
inc
shufps
pop
data16
xlat
gs
push
mov
rcr
xor
call
xchg
fild
jno
sub
pop
pop
dec
adc
xor
jne
xchg
outs
or
dec
mov
fsubr
and
mov
mov
mov
sbb
adc
fdivr
out
sbb
mov
call
mov
sti
cmps
sbb
jle
mov
add
mov
jns
imul
push
xor
mov
mov
xchg
jo
push
adc
xor
(bad)
repz
jmp
call
scas
push
mov
mov
push
push
jecxz
add
sub
xor
pushf
imul
stc
cs
and
cmp
jne
mov
jmp
test
das
jmp
cmc
jb
call
stos
pop
in
adc
sti
outs
xor
pop
nop
mov
cmp
jge
popa
cmps
ret
and
push
sub
or
push
xchg
in
test
jae
loopne
jecxz
mov
xchg
adc
rcl
xchg
jle
xor
cdq
sub
test
shr
mov
je
xchg
sub
movs
mov
mov
aam
xor
inc
inc
or
push
aam
iret
jo
sub
add
lahf
icebp
retf
daa
imul
out
ret
adc
lea
or
out
fdivr
pop
inc
pop
adc
dec
or
dec
pop
lock
xor
add
test
(bad)
rol
mov
jmp
test
jp
xchg
mov
or
std
mov
stos
stos
fsubr
bound
fwait
or
fucom
or
xchg
inc
mov
pop
lea
loop
mov
ins
xor
aaa
mov
adc
aad
xor
ja
dec
inc
and
push
retf
jmp
lods
ss
xor
push
pop
movs
ret
in
loope
lahf
adc
jge
sti
dec
xor
aad
push
pop
push
mov
pop
add
repnz
dec
jge
sbb
mov
cmp
std
or
mov
ja
jle
jp
pop
pop
imul
not
cmp
popf
std
or
clc
cli
bound
(bad)
ds
outs
repnz
push
xor
frstor
jmp
idiv
retf
adc
and
mov
adc
out
pop
push
mov
fs
jl
(bad)
icebp
xchg
rcr
sub
mov
gs
mov
xchg
push
push
scas
push
add
inc
jmp
mov
test
faddp
mov
shr
ins
int
adc
add
mov
lock
xchg
push
mov
xor
shl
and
xor
inc
pop
jbe
xchg
(bad)
aam
pusha
fisttp
imul
(bad)
neg
call
mov
push
jge
sub
retf
jp
ds
loopne
inc
mov
imul
mov
popa
inc
pop
ins
dec
xor
cdq
dec
fdivp
xchg
xor
(bad)
call
inc
cwde
xchg
jmp
jg
pop
mov
inc
pop
shl
fdiv
xchg
les
ins
jmp
adc
or
cmp
dec
fs
xchg
sbb
jno
mov
imul
mul
inc
push
daa
std
push
sbb
repnz
mov
jne
adc
dec
dec
xchg
mov
add
or
mov
(bad)
jl
das
and
icebp
leave
int3
sub
lea
add
pop
ja
or
jno
add
(bad)
adc
inc
inc
and
sbb
ret
js
iret
jle
mov
cmp
call
mov
add
add
ds
fild
aas
xchg
lods
retf
in
gs
stos
sub
adc
xor
jo
(bad)
lods
(bad)
cs
lods
and
sbb
xchg
ss
retf
les
mov
sub
es
fst
call
inc
pop
push
neg
dec
mov
push
cmps
pop
(bad)
fiadd
jl
inc
in
stc
push
xchg
and
dec
xchg
leave
add
mov
int3
js
daa
and
jb
adc
fbld
mov
es
sar
mov
mov
xchg
jbe
mov
jge
mov
and
out
push
mov
or
cwde
pop
and
mov
push
jns
retf
sub
cli
ss
mov
inc
ret
jge
or
cmp
push
test
iret
loopne
popa
push
stc
loop
mov
aad
outs
xlat
mov
adc
daa
xor
pop
jmp
test
xchg
xor
(bad)
out
jbe
jge
sbb
mov
jecxz
pop
xchg
sub
cld
xor
mov
test
adc
xchg
dec
and
or
pop
or
jne
push
or
call
pushf
mov
mov
loop
push
xchg
test
ins
lods
add
loop
jo
sar
leave
push
clc
adc
jo
jno
dec
xchg
xor
lds
loop
sbb
xor
xor
xchg
repnz
push
adc
cmps
push
into
mov
inc
nop
popf
in
dec
js
scas
dec
pusha
int3
sub
xchg
pop
pop
lahf
repnz
add
xor
sahf
lea
adc
fld
aas
mov
ins
add
(bad)
xchg
pop
jmp
pop
shl
into
mov
es
ror
or
xor
mov
sbb
dec
mov
inc
and
inc
or
cmp
jg
shl
bound
(bad)
jae
dec
dec
inc
add
je
xchg
sbb
mov
repnz
scas
cmp
or
sub
icebp
clc
ret
ds
add
inc
out
fs
push
rep
pushf
push
cli
mov
mov
xor
push
shl
xlat
fs
fisubr
mov
shl
sbb
ror
test
push
sub
and
cmp
sub
and
sbb
add
ret
fsub
sahf
hlt
in
jl
cvtps2pi
dec
pop
sar
dec
push
scas
mov
jns
or
push
pop
mov
push
aaa
cld
mov
push
xchg
adc
add
shr
iret
push
lock
(bad)
repnz
add
test
xchg
add
or
dec
push
and
mov
adc
fild
sub
cmps
rcl
iret
test
sti
nop
jns
dec
fdiv
lods
lahf
mov
inc
dec
xchg
stc
sub
and
inc
pop
xchg
ret
loop
pop
jmp
push
cmp
in
mov
js
cmp
mov
popa
addr16
sub
xchg
fild
dec
daa
and
mov
inc
sub
fucomp
push
stos
jbe
jle
sahf
fbstp
sbb
pop
inc
xchg
push
inc
retf
in
mov
adc
dec
lock
in
test
out
inc
mov
into
in
sub
jle
dec
xlat
and
loopne
mov
cdq
aas
stos
cmp
dec
fwait
xchg
and
add
jae
or
pop
sbb
ss
sbb
(bad)
add
adc
mov
fdivp
jnp
stos
jp
and
setge
inc
das
lods
test
sub
stos
sub
in
xor
mov
shr
xchg
mov
mov
adc
ins
cmp
dec
cs
rol
cmp
cmp
test
xchg
inc
inc
cdq
ins
xlat
xchg
add
mov
xor
scas
bnd
push
xchg
mov
mov
ds
push
call
mov
pop
pop
(bad)
pop
pop
fwait
aas
mov
ds
test
icebp
dec
add
or
popa
or
daa
arpl
push
shl
push
popf
adc
in
or
xor
cmp
(bad)
mov
jl
call
dec
ss
jge
jle
xchg
and
xor
add
mov
mov
ficomp
and
aaa
clc
das
jecxz
and
sbb
adc
push
iret
scas
js
aam
pushf
les
loopne
jbe
inc
shr
pop
call
jecxz
jmp
cdq
inc
inc
jae
dec
sti
neg
in
idiv
leave
call
jg
push
inc
retf
mov
fld
cmp
retf
mov
sub
shl
jns
adc
repnz
or
sub
js
movs
shl
mov
add
inc
xchg
xor
sub
and
(bad)
loopne
loopne
mov
inc
pushf
fidivr
push
pop
sub
sub
mov
inc
ins
inc
popa
mov
aad
test
rol
dec
push
jl
arpl
inc
and
clc
shl
mov
cmp
hlt
cmp
sbb
xchg
dec
aaa
xchg
jno
out
and
inc
inc
or
dec
aas
into
pop
inc
sub
jg
jl
inc
adc
int
out
push
cmps
adc
pop
dec
and
sbb
cmp
fild
push
stos
pop
pop
test
jmp
rcl
imul
js
out
or
jae
ret
pop
sub
clc
jl
fcmovu
test
fadd
mov
test
push
aaa
out
(bad)
pop
fwait
jmp
sahf
jg
pop
outs
mov
out
dec
pop
inc
loop
mov
pop
xchg
push
dec
pop
retf
loopne
cmp
daa
mov
pop
pop
cmp
jne
cmp
sbb
in
call
jmp
adc
mov
push
push
push
nop
xor
jp
aad
clc
xchg
mov
pop
dec
add
xor
inc
mov
rcl
fwait
retf
cmps
ds
mov
adc
mov
xchg
icebp
aam
cmp
out
loop
jle
sub
inc
xchg
jno
ret
lods
fild
mov
sub
cmp
rcr
jnp
adc
or
outs
(bad)
inc
dec
inc
pop
shl
outs
push
aad
aam
jge
outs
sub
inc
dec
es
in
push
fadd
mov
push
outs
sti
icebp
cmp
popa
sti
cmps
mov
xchg
sti
out
imul
mov
mov
test
out
mov
push
add
int
pop
add
pop
xor
inc
div
inc
jmp
adc
mov
es
shr
sbb
ins
(bad)
retf
xchg
in
dec
mov
daa
add
jg
mov
add
aaa
pop
sahf
cmp
out
lock
push
int3
cmp
bound
loope
(bad)
mov
or
(bad)
lahf
fisubr
dec
retf
and
fmulp
mov
sti
fwait
lahf
dec
jmp
icebp
add
jle
sbb
ret
dec
mov
into
sub
mov
retf
jb
mov
jl
in
xchg
sub
int3
dec
pop
push
sub
int
rcr
stc
pusha
gs
xchg
sbb
pop
xlat
pop
sbb
xor
add
and
ins
push
and
jb
cmovb
and
loop
sti
inc
out
jecxz
lods
push
pop
pushf
imul
jl
mov
sub
in
push
sahf
push
popf
fadd
mov
or
sbb
adc
jns
sub
jo
(bad)
xchg
fdiv
inc
mov
jo
pop
ss
inc
inc
movs
xor
fidivr
clc
stos
fidivr
lea
dec
jmp
sbb
loope
xchg
jp
in
mov
sbb
(bad)
dec
hlt
dec
in
int3
lds
scas
fimul
adc
lods
adc
xor
mov
ins
daa
int3
jmp
ins
in
add
pop
mov
inc
jbe
ret
(bad)
ins
stc
pop
pop
pop
aad
cmp
pop
sub
das
pop
xor
push
jg
cmp
xchg
dec
cmp
push
jle
lods
sub
mov
fcom
push
aaa
sub
mov
inc
stc
push
and
(bad)
push
cmc
pop
jne
test
jecxz
mov
(bad)
dec
lods
xchg
xchg
gs
int3
push
ss
out
pop
ins
jae
mov
and
outs
(bad)
jp
mov
js
push
xchg
and
pop
pop
fadd
jl
std
jle
imul
and
pop
pop
jmp
cmps
mov
xor
scas
xchg
fwait
mov
clc
jnp
jb
dec
mov
jmp
(bad)
stc
jle
scas
jb
cmps
test
pusha
out
inc
push
cmp
fwait
mov
inc
int3
mov
mov
inc
enter
mov
cli
jmp
fwait
dec
mov
xor
pop
fiadd
fcom
inc
mov
xchg
inc
mov
cdq
lock
int
pop
mov
(bad)
rep
add
pushf
rcr
retf
xchg
daa
in
jmp
dec
mov
cwde
fs
scas
mov
mov
pop
clc
mov
outs
or
cmp
push
lea
add
xlat
fimul
out
rcl
push
inc
add
xchg
js
out
es
pop
cmps
sbb
in
adc
cmc
sbb
dec
xchg
sbb
cmc
mov
sbb
clc
adc
aaa
dec
loopne
je
std
(bad)
mov
or
cmc
mov
push
mov
repz
mov
xor
std
pop
mov
inc
popa
inc
addr16
pop
jno
int3
jmp
out
(bad)
jae
xor
das
push
dec
ss
out
repnz
xchg
ins
ror
movs
mov
ret
test
jecxz
inc
pop
sbb
loop
fadd
cs
sub
outs
jnp
adc
adc
or
call
cmp
add
or
das
cld
and
dec
es
sbb
mov
scas
push
aad
imul
std
in
xchg
pop
inc
stos
rol
stc
in
add
xchg
js
pusha
cmps
add
test
retf
inc
sub
fcmovbe
xchg
adc
xor
movs
dec
jbe
(bad)
retf
adc
adc
push
inc
and
sub
push
ins
imul
arpl
stc
mov
test
dec
jb
dec
dec
inc
das
push
fwait
cmps
mov
or
gs
push
sbb
mov
mov
imul
xchg
rcl
ret
jecxz
(bad)
mov
adc
inc
ins
add
xor
and
or
and
js
mov
cmp
xlat
jg
add
xchg
or
pop
sub
stc
movs
xor
pop
fwait
or
jo
mov
addr16
pop
pusha
push
ja
dec
retf
pusha
cmp
inc
dec
cwde
out
xor
mov
and
jmp
dec
xor
aad
inc
mov
jns
xchg
call
not
jmp
jecxz
out
cmps
sbb
daa
shl
push
mov
or
cmps
adc
xor
adc
mov
int
clc
popa
push
(bad)
stos
add
popf
and
movs
mov
sbb
dec
mov
mov
xchg
into
test
std
mov
cwde
setp
test
ss
call
pop
loope
and
repnz
loopne
xchg
lea
inc
mov
mov
add
mov
cmp
fldcw
fidivr
stos
adc
jmp
jg
xchg
jno
std
mov
sbb
loope
mov
shr
dec
inc
mov
in
arpl
jecxz
mov
pop
je
sub
cmp
aaa
jmp
jp
leave
sbb
push
mov
scas
mov
inc
sub
cdq
jb
cmp
jo
xor
pop
test
and
mov
mov
xlat
out
in
retf
mov
imul
xor
add
into
movs
add
fwait
dec
mov
mov
or
repnz
inc
repz
shr
or
sub
fs
neg
cld
fsub
pop
xchg
mov
enter
push
and
jb
xlat
sbb
xor
mov
dec
and
sub
cmps
add
call
out
mov
loop
push
xor
adc
adc
and
cmp
sub
fidivr
jecxz
lods
jmp
outs
fstp
lea
out
push
je
(bad)
call
pop
sub
sbb
movs
int3
add
push
xchg
cmp
mov
inc
int3
fdivrp
sub
adc
jbe
cli
xchg
cwde
push
dec
mov
outs
iret
xor
ss
cmp
in
(bad)
cwde
pop
jmp
sahf
shl
aas
cmp
xor
pop
pusha
pop
addr16
push
cmp
in
cmp
adc
lahf
cmps
push
es
cwde
cli
popf
into
xor
pop
outs
jno
dec
xor
inc
aad
out
inc
ins
aam
jnp
pop
xor
push
mov
push
inc
sub
push
sub
xchg
cmp
cmp
cmc
push
dec
mov
test
mov
enter
sub
stc
mov
(bad)
gs
dec
in
inc
pop
(bad)
pop
sub
inc
mov
popa
rcr
jo
cdq
or
mov
and
add
pushf
inc
sub
pushf
or
ds
sub
ret
loope
rcl
out
and
retf
loop
fst
dec
stos
xchg
iret
add
jecxz
mov
fidivr
mov
loope
in
sub
ret
mov
pop
shl
mov
repz
mov
lock
and
sub
or
fld
push
cmp
cs
adc
fcom
jmp
push
lods
dec
pusha
repnz
(bad)
jns
mov
cs
dec
jmp
in
(bad)
mov
lods
loopne
jmp
in
mov
sbb
adc
mov
adc
cdq
pushf
sbb
test
fwait
and
mov
jnp
test
xchg
pop
imul
scas
movs
ror
retf
lds
mov
sub
xchg
out
push
and
mov
dec
popf
outs
pop
imul
pushf
fild
cs
rcl
push
jge
sub
scas
cmp
hlt
(bad)
(bad)
or
and
ror
ja
jmp
push
jge
(bad)
add
mov
leave
movs
pop
push
iret
sbb
loope
pop
bound
and
inc
mov
mov
test
mov
hlt
and
mov
imul
imul
inc
test
aas
inc
aam
mov
jge
fbld
dec
cmp
stc
mov
int
sub
push
push
xor
ds
je
not
sbb
(bad)
leave
pop
in
mov
inc
jecxz
(bad)
int3
sub
shr
mov
rcr
jmp
mov
inc
test
ja
shl
inc
xchg
dec
imul
pop
int3
mov
xchg
and
mov
jmp
sub
in
fcomp
or
dec
fild
jp
in
pop
pop
jns
add
scas
cmp
xor
cmp
rcr
and
ins
mov
pop
or
retf
xchg
adc
fldenv
xor
push
stos
mov
xchg
pop
ret
stc
fdiv
lea
xchg
cmp
push
mov
mov
adc
sbb
cld
sub
sti
in
cmp
dec
jb
test
xchg
ror
inc
xchg
sti
je
push
dec
(bad)
test
xchg
push
outs
mov
inc
movs
std
sti
daa
fst
out
sahf
push
loope
mov
leave
xchg
mov
mov
es
xlat
jle
xchg
mov
pop
mov
shr
sbb
or
sbb
rol
cmp
dec
dec
mov
in
jl
movs
inc
shl
xor
xchg
xchg
adc
scas
mov
or
(bad)
xchg
imul
ins
push
add
mov
inc
adc
call
adc
ret
bound
cmps
sub
mov
jnp
test
add
test
loopne
sub
jl
in
sub
sbb
outs
in
sub
push
and
xor
test
daa
inc
sub
jmp
div
add
push
mov
lods
jecxz
je
test
cdq
ss
and
xchg
sub
test
mov
mov
test
cmp
paddusb
adc
mov
or
mov
mov
sbb
(bad)
lds
sub
and
jne
pop
jno
and
sbb
adc
push
retf
sub
pushf
pop
aam
and
dec
mov
adc
(bad)
pusha
inc
in
ja
rcl
lahf
pop
fs
ror
out
sbb
dec
jae
push
xchg
add
and
jae
out
jecxz
sub
mov
setnp
pop
dec
adc
jle
sahf
retf
dec
jno
cld
sub
push
push
jl
(bad)
sub
or
adc
out
clc
inc
cdq
scas
cmp
inc
mov
sar
fwait
cmps
dec
mov
sti
mov
into
cmp
repz
not
lods
sub
and
(bad)
fisub
adc
in
pop
mov
js
adc
add
call
push
inc
sub
rol
popf
js
cli
mov
dec
popf
sub
ins
lods
adc
or
inc
add
jmp
adc
xchg
popf
popa
in
lea
inc
xchg
adc
into
repz
xlat
lds
ins
inc
inc
cld
mov
jl
sub
fisub
pop
ret
jo
cmp
leave
sbb
inc
call
mov
out
movs
loope
ins
movs
sbb
jno
xlat
adc
mov
(bad)
or
test
(bad)
adc
mov
mov
(bad)
add
dec
stos
js
add
cmp
mov
and
test
lock
xchg
push
ins
jle
cmp
je
imul
jns
jbe
(bad)
sbb
mov
or
jnp
push
dec
fisttp
ret
adc
out
ja
add
jbe
call
lea
lock
leave
add
adc
jnp
shl
pusha
cld
cmp
xchg
pop
lock
sub
out
jmp
jnp
xor
jl
retf
adc
add
addr16
push
dec
(bad)
ins
ja
adc
and
mov
cdq
cmp
add
inc
mov
ds
daa
sub
loope
retf
fisttp
mov
adc
mov
and
lahf
xor
ret
fs
and
cmps
movs
push
mov
add
pop
aad
xor
pop
dec
xchg
ds
cld
sbb
outs
jge
js
je
mul
inc
inc
sbb
into
cld
push
or
pop
mov
std
cmps
sbb
or
xchg
pop
push
or
mov
adc
cmp
pop
push
cmps
or
std
std
mov
int3
jp
sbb
scas
push
xchg
cli
ins
mov
xor
jle
inc
out
jp
mov
loope
cmps
or
mov
lahf
jb
pop
mov
sbb
mov
popa
retf
pop
neg
xor
loop
pop
(bad)
hlt
pop
mov
in
dec
mov
push
rol
xchg
(bad)
fucomi
test
idiv
scas
adc
dec
shl
jl
mov
hlt
fidiv
push
ss
push
mov
pop
(bad)
(bad)
push
mov
push
icebp
jno
mov
out
jg
sbb
(bad)
push
icebp
imul
xchg
imul
cdq
xchg
inc
pushf
pusha
sbb
pop
add
sub
pop
int
pop
mov
push
inc
dec
int
shl
(bad)
sub
mov
enter
dec
js
rcr
mov
push
inc
adc
mov
dec
pop
sbb
mov
mov
or
retf
mov
scas
jmp
enter
and
mov
dec
xchg
pop
outs
hlt
push
jmp
jmp
cmp
cs
lods
outs
mov
int
and
out
cmps
and
retf
push
lods
push
xchg
mov
leave
xor
lods
cmp
inc
jo
jbe
dec
imul
sub
loopne
aaa
loop
es
or
mov
stc
jmp
sub
fstp
and
mov
adc
jnp
(bad)
pop
push
mov
mul
dec
fld
arpl
cmp
mov
push
mov
nop
movs
lods
or
out
and
lahf
aad
cmp
fimul
mov
(bad)
movs
and
(bad)
rcl
(bad)
repnz
inc
stos
dec
mov
shl
push
getsec
test
cmp
mov
(bad)
xchg
xor
in
clc
push
mov
call
or
jmp
xchg
or
dec
and
mov
mov
int
xchg
lahf
push
gs
les
js
add
repnz
jle
movntps
mov
jmp
popa
inc
sub
fmul
or
hlt
inc
ss
int
inc
fld
mov
loop
push
xor
loope
sbb
jecxz
push
fs
lds
cmp
in
fadd
cmps
in
mov
mov
movs
leave
shl
sahf
mov
outs
js
(bad)
xlat
mov
pop
shl
enter
(bad)
sbb
push
pop
iret
jmp
je
dec
div
fimul
fiadd
sbb
hlt
jo
popa
(bad)
cmp
mov
in
outs
mov
movs
or
fld
lods
pusha
and
pop
inc
(bad)
jne
and
add
lock
inc
dec
xchg
and
pop
daa
mov
call
and
mov
pusha
cmp
jmp
ss
rol
imul
fsubr
pushf
cld
xchg
int
xor
pop
mov
cwde
push
jle
out
je
ss
xchg
lock
loop
mov
or
push
jae
xchg
push
fist
(bad)
fistp
and
into
inc
xchg
pop
mov
ds
sbb
iret
icebp
inc
data16
test
mov
nop
out
add
punpckhwd
pushf
xchg
loop
push
sti
adc
pop
movs
xchg
xchg
mov
iret
test
dec
es
cmps
mov
pusha
inc
jnp
int3
add
pop
loope
cmp
push
or
push
jle
dec
mov
xchg
ficom
pop
push
ret
retf
cli
add
lods
adc
push
cwde
pop
and
clc
in
addr16
repnz
ds
idiv
iret
aas
hlt
add
pop
dec
into
pop
enter
ret
fwait
pop
stos
dec
sub
add
mov
leave
jmp
not
cmp
icebp
inc
(bad)
pop
or
retf
add
mov
pop
and
fwait
push
mov
in
jb
add
pop
out
dec
mov
out
push
ret
mov
es
loop
daa
aaa
push
cmps
sub
or
dec
cmp
sub
bnd
stc
cmp
and
(bad)
xor
call
rcl
mov
mov
in
adc
(bad)
sbb
adc
cmc
jmp
push
pop
sub
or
je
mov
sbb
cmps
mov
mov
jmp
jae
enter
fwait
dec
mov
cld
mov
jg
icebp
or
xor
jns
std
push
int
sbb
les
fdiv
jnp
xchg
xor
push
dec
popa
dec
arpl
or
sub
test
dec
leave
test
push
icebp
std
and
mov
arpl
cwde
aad
pop
shr
mov
xchg
aam
dec
pushf
sbb
xor
push
mov
sub
dec
jmp
repnz
jmp
shl
out
dec
pop
dec
rol
sub
mov
cmp
mov
jmp
pmulhuw
scas
cwde
stos
pop
sbb
mov
fild
pop
sbb
sub
jp
iret
sub
mov
push
shl
test
loope
xor
and
push
test
fisttp
ins
sbb
(bad)
scas
push
push
retf
push
mov
aaa
fcom
(bad)
mov
add
pop
pusha
cmp
sbb
lahf
lahf
call
data16
push
fwait
xchg
les
push
jo
aaa
mov
cld
push
push
and
sar
adc
mov
test
(bad)
call
xor
push
ins
pop
retf
sbb
mov
jp
xor
xchg
add
sbb
lahf
jge
and
cmp
or
jmp
pop
and
(bad)
aaa
fidivr
dec
pop
pop
sub
jbe
mov
fstp
cmp
stos
push
das
or
jno
xor
jb
stos
aam
mov
cld
shl
jl
sbb
dec
jp
test
sbb
rcr
stos
fdivr
sar
mov
jp
sbb
out
push
sbb
mov
jl
sti
lahf
push
xchg
mov
adc
adc
js
or
test
push
in
aad
xor
data16
popf
ins
mov
out
retf
(bad)
enter
or
leave
adc
xchg
inc
xchg
xchg
add
xor
mov
pop
ret
iret
xchg
dec
mov
jne
sub
into
jge
push
push
xor
scas
add
and
popa
xchg
mov
popa
dec
push
ds
jg
std
or
icebp
lahf
jmp
popa
retf
rol
or
jb
mov
jae
cs
shl
sub
inc
jae
int3
or
mov
idiv
lea
dec
ret
vpunpcklwd
fldcw
(bad)
sbb
adc
stc
ret
cmp
fimul
pop
(bad)
jb
test
or
jo
ins
pusha
push
mov
gs
enter
jmp
inc
push
js
jo
cld
or
or
neg
ficom
out
stos
stos
jp
inc
fwait
sbb
mov
sbb
dec
(bad)
lods
xchg
ret
in
xor
push
ins
add
and
jg
lahf
inc
test
imul
jmp
adc
dec
sub
aad
stc
in
sub
fadd
sar
shr
icebp
dec
dec
aas
cmc
inc
adc
cmps
ins
push
xor
or
std
outs
dec
xchg
pop
lock
or
sbb
imul
dec
pop
dec
jmp
out
dec
mov
in
sub
arpl
mov
mov
cld
test
out
loopne
test
jno
inc
add
mov
jb
xchg
in
retf
fsubr
and
sub
xchg
imul
xchg
pushf
pop
push
inc
xor
add
cmovge
ficomp
loopne
es
cld
add
fisub
lods
std
gs
sbb
push
imul
push
(bad)
cmps
out
les
cmp
jno
and
inc
mul
inc
add
cld
sub
mov
js
mov
popf
inc
mov
jle
mov
push
push
cmp
lea
xchg
scas
pop
add
dec
cdq
repnz
and
push
mov
out
adc
test
and
shl
leave
pop
push
ins
outs
push
mov
ror
out
hlt
sti
sub
xlat
mov
mov
cmc
nop
pop
mov
ja
addr16
cmp
retf
xchg
jae
out
inc
or
(bad)
data16
mov
shl
lods
fsubr
std
xchg
je
fs
jecxz
cwde
cmp
pop
or
ins
imul
xchg
mov
ins
mov
dec
add
push
pusha
jns
mov
data16
jmp
loope
repnz
in
mov
jnp
sub
in
xor
mov
ja
or
popf
adc
jnp
xchg
sub
sub
and
and
popa
pop
arpl
shl
and
fwait
jg
inc
int
add
shl
mov
(bad)
adc
xchg
pop
adc
sbb
ret
neg
aaa
sti
cmp
sbb
out
adc
add
mov
mov
movs
shr
loopne
and
icebp
sti
sub
dec
add
add
cld
inc
sub
mov
sbb
pop
ret
dec
fdivr
jno
loop
mov
rcr
lds
mov
repz
push
call
inc
movs
push
jae
aam
mov
jbe
inc
dec
push
gs
ins
and
jg
out
clc
add
nop
xchg
adc
sub
test
imul
add
lock
mov
push
in
cmps
gs
scas
adc
je
and
shl
push
test
mov
hlt
push
ret
sub
push
retf
dec
cmc
iret
sub
and
jecxz
push
jo
into
add
mov
mov
rol
fisubr
push
sbb
dec
ins
and
cmp
cmp
and
mov
push
xor
jmp
xor
loope
adc
inc
sbb
cmp
sbb
xchg
(bad)
mov
cmp
pop
mov
test
xchg
sti
or
repnz
or
in
ds
ds
loope
xchg
inc
cmc
jnp
mov
test
pop
repz
jbe
(bad)
out
int3
jns
jmp
ss
mov
aad
or
sub
inc
mov
sbb
mov
data16
push
inc
sub
repz
(bad)
fs
leave
inc
jb
jecxz
inc
in
xor
(bad)
aas
mov
inc
in
and
xor
cdq
loop
rol
cs
or
test
lds
pusha
iret
xchg
out
pop
ret
inc
jmp
shl
mov
jmp
shl
and
or
jp
fcomp
mov
repnz
pop
inc
add
outs
lods
scas
sub
lahf
(bad)
pop
xchg
test
sub
int3
inc
cmp
push
push
iret
inc
scas
cmp
mov
pop
out
inc
popa
xchg
adc
add
cmps
stos
or
repz
or
dec
in
cmps
inc
cmp
push
or
lahf
and
and
or
out
popf
dec
idiv
mov
loopne
dec
ret
aas
cmc
(bad)
dec
mov
test
pushf
int
lea
xor
sub
push
mov
sub
sar
or
pop
push
adc
cmps
scas
test
and
ss
dec
push
ret
gs
sub
enter
(bad)
imul
sub
mov
jmp
inc
xchg
or
enter
cmc
or
ffree
ds
icebp
ret
mov
or
xchg
pop
ins
pop
(bad)
aam
mov
cmp
mov
adc
cmp
jb
stos
and
push
dec
sbb
jb
dec
dec
fisub
stos
aas
call
xchg
ins
xor
loopne
movs
jb
add
scas
out
es
dec
or
retf
iret
(bad)
sbb
in
aad
imul
sbb
arpl
push
ss
fs
add
loope
rcr
mov
inc
pop
jle
push
in
gs
(bad)
addr16
data16
sbb
mov
jo
lahf
and
outs
stos
addr16
push
shr
loopne
xor
aam
and
lock
add
sub
sub
xchg
ret
retf
push
test
dec
es
dec
dec
cdq
pop
out
dec
aad
loope
loopne
inc
lahf
cdq
bound
movs
sahf
cmp
jmp
sbb
pop
and
sub
(bad)
lods
retf
stos
adc
mov
jp
inc
icebp
ret
in
and
out
cmp
psrad
mov
es
push
jbe
xchg
sbb
add
(bad)
jnp
movs
pop
mov
push
pop
aas
movs
xchg
call
inc
or
test
ds
mov
fisub
hlt
pop
imul
push
ins
add
sub
jne
add
ja
mov
jnp
rol
mov
pusha
push
sar
push
das
ret
call
imul
vmovd
das
jae
out
inc
mov
fwait
or
sahf
pop
xchg
shr
pop
xchg
inc
movs
jmp
sbb
cmp
fcos
and
jecxz
cmp
div
and
scas
add
xchg
xor
jmp
jnp
ret
in
jmp
inc
fwait
xchg
adc
rcr
mov
push
mov
fmul
add
jne
push
dec
dec
arpl
data16
adc
fisub
jnp
pop
test
sahf
mov
and
ins
mov
jmp
pop
fchs
enter
lock
xor
jns
loop
pop
mov
adc
movs
add
aaa
xchg
dec
test
xchg
sub
ficomp
inc
fmul
dec
inc
sbb
and
dec
adc
add
dec
push
add
into
sbb
imul
cmp
xchg
in
inc
push
fs
push
shr
jl
repz
ins
mov
fbld
imul
iret
jns
xchg
xor
or
mov
pop
js
in
or
fs
add
sbb
mov
sub
iret
ficom
gs
or
mov
or
pop
retf
inc
jmp
fadd
pop
and
repz
jmp
mov
dec
push
xor
mov
lods
pushf
push
cmp
mov
ud2
aam
mov
das
bound
jmp
leave
pop
call
push
test
js
call
scas
ds
jbe
mov
icebp
jl
adc
and
arpl
std
popa
repz
imul
pop
das
in
imul
sbb
loop
jb
aad
test
inc
js
push
jno
push
scas
sbb
sti
push
adc
mov
lods
pop
ins
jp
call
sub
cli
dec
pop
(bad)
lea
not
int
mov
xchg
jg
(bad)
ins
xor
and
in
cwde
inc
xchg
das
mov
adc
sar
retf
loopne
fstp
cwde
adc
in
shr
push
mov
pop
test
cmp
add
lods
lds
cmp
mov
int3
pop
shr
or
mov
lds
mov
mov
test
movs
adc
fwait
sti
sub
xchg
inc
outs
pusha
dec
test
aaa
cs
jbe
sbb
xor
xchg
sbb
mov
iret
sbb
sub
rcl
cmp
add
lahf
add
inc
dec
movq
push
pop
mov
jo
inc
pop
mov
push
cli
push
pop
jmp
or
mov
xchg
inc
fnstcw
dec
ss
lea
push
fwait
mov
fmul
scas
arpl
fs
mov
and
dec
les
jno
sub
rol
adc
enter
in
add
jo
pushw
pop
dec
dec
movs
fs
cmc
in
ret
xor
pop
ret
in
fcom
les
scas
ins
push
pop
xor
adc
inc
jl
test
xrelease
leave
xor
inc
add
push
adc
aas
out
mov
mov
movs
bnd
push
cdq
les
mov
dec
inc
pop
pop
ret
mul
addr16
mov
adc
cmp
jmp
ja
sbb
push
sbb
mov
push
jl
mov
xchg
out
cmp
out
adc
xor
mov
call
mov
fstp
pop
inc
jno
push
mov
in
adc
retf
sub
push
adc
xor
(bad)
mov
xor
add
lods
cmp
push
lds
fcomp
sub
sub
retw
jmp
adc
xor
cmp
cmp
jne
cmp
add
xchg
out
jl
pop
ror
inc
je
inc
mov
push
or
dec
jp
das
pushf
jp
lods
lods
adc
pushf
fild
pop
mov
outs
sbb
jl
inc
es
push
adc
(bad)
aaa
adc
push
cmp
xor
imul
xchg
(bad)
xor
sub
daa
out
imul
add
movs
inc
mov
std
shr
stos
push
jge
push
sti
push
cmp
in
mov
bound
sbb
fcomp
push
ds
dec
xor
and
mov
aad
test
call
test
gs
add
outs
es
(bad)
(bad)
sub
xchg
push
push
ja
xor
mov
test
scas
cmp
mov
(bad)
xor
push
and
and
dec
stos
and
ret
mov
arpl
aaa
aad
mov
arpl
int3
lfs
pop
mov
mov
push
adc
adc
add
add
sub
lea
cwde
icebp
lock
cs
aam
out
and
push
ficomp
pop
sub
xlat
adc
or
stos
scas
cmp
fld
into
xor
xchg
call
outs
ins
adc
push
jle
pop
sub
cli
ins
and
mov
pop
jmp
popa
add
inc
pop
jmp
repnz
pop
cmp
ret
mov
inc
or
dec
cld
xchg
add
xor
sbb
bound
xor
aaa
dec
enter
pop
pop
xchg
push
mov
inc
mov
out
xor
les
jle
mov
movs
xchg
inc
sub
out
jno
int
adc
dec
mov
inc
stos
xor
cmps
add
rol
dec
(bad)
ins
mov
or
push
xor
call
jnp
pop
bound
mov
es
out
shl
push
push
retf
mov
test
fstp
loopne
jg
lahf
push
pop
dec
popf
(bad)
jmp
mov
jl
outs
jl
jbe
repnz
dec
jg
mov
mov
cdq
add
and
bound
xor
lahf
fwait
or
sbb
imul
inc
les
(bad)
pusha
cmc
hlt
push
push
aaa
scas
lock
jge
mov
int3
aam
lock
or
xchg
icebp
mov
jns
and
in
sbb
adc
leave
or
cdq
jle
mov
ja
cdq
push
movs
or
jnp
call
rcr
rcl
adc
ins
mov
and
dec
shr
out
repz
sbb
mov
add
pop
fcmove
mov
popa
dec
push
loopne
data16
test
and
and
ins
retf
jl
(bad)
(bad)
aam
jno
aaa
pop
mov
sub
add
xchg
jnp
cs
cdq
call
call
mov
in
jnp
push
pushf
imul
pop
mov
pop
and
mov
and
mov
hlt
sar
daa
out
call
ss
push
(bad)
std
call
xor
in
into
(bad)
(bad)
mov
into
mov
ret
jae
dec
jb
jne
push
faddp
mov
push
push
adc
push
xor
and
stos
rcl
out
or
(bad)
cld
cmovb
sbb
retf
adc
(bad)
cmp
and
(bad)
lahf
cmp
sar
mov
xor
(bad)
jmp
dec
lahf
sub
jecxz
xor
scas
repnz
pop
out
push
and
and
lea
pop
cmps
cld
shl
out
dec
fwait
sub
enter
inc
mov
pop
cmp
and
nop
cdq
cs
sub
mov
mov
sbb
repz
aad
mov
pop
pop
test
int
dec
adc
cmp
and
popa
jmp
sahf
jbe
popf
aaa
fisubr
daa
add
(bad)
push
and
repz
pop
mov
ins
push
test
fiadd
pushf
mov
shl
cmp
inc
push
ins
push
test
popf
into
mov
outs
mov
adc
adc
fiadd
aad
or
pusha
in
ja
into
in
fiadd
pop
push
mov
adc
int3
adc
sub
jns
jno
and
adc
pop
add
sbb
imul
aaa
mov
cmp
pop
stc
shr
cdq
fmul
adc
loope
sbb
push
cli
popf
xchg
jno
xchg
das
dec
int3
popa
or
ins
sbb
push
lock
in
aas
push
inc
retf
pop
rol
jne
mov
loope
cmps
cmps
jmp
sahf
out
push
mov
add
mov
(bad)
cmc
sti
cwde
lock
sahf
cmp
fmul
fwait
jns
aaa
fs
or
in
xchg
fimul
mov
adc
aas
dec
inc
movs
neg
push
mov
(bad)
rcr
and
dec
(bad)
aas
test
(bad)
dec
and
aam
push
popa
xor
rcl
jmp
mov
ja
out
jmp
cli
std
cmp
jecxz
stos
fisub
inc
dec
mov
add
push
xor
neg
jg
imul
push
xor
loope
leave
mov
cmps
das
test
shl
jae
push
mov
xchg
test
or
test
pushf
mov
(bad)
mov
mov
stos
or
pop
adc
not
scas
stos
or
in
cmps
pop
add
dec
js
sbb
inc
ror
mov
sbb
sub
push
scas
xchg
xchg
push
bound
imul
cdq
cmp
pop
mov
pop
mov
aaa
mov
test
jge
pop
and
and
inc
push
retf
inc
inc
scas
mov
fs
cmc
rcr
adc
or
and
sahf
call
loopne
xor
pop
push
retf
jmp
adc
or
fld
aad
out
inc
mov
pop
gs
adc
inc
out
pop
fmul
push
pop
(bad)
enter
cmp
and
xchg
repnz
dec
rol
inc
dec
jmp
(bad)
inc
int
mov
int3
inc
stc
jno
sbb
arpl
stc
(bad)
js
mov
repnz
mov
inc
jb
push
cdq
es
outs
jo
pusha
xchg
mov
(bad)
aas
push
je
adc
sub
sub
dec
pop
xchg
mov
or
inc
jo
add
enter
retf
bound
add
push
and
call
mov
sbb
(bad)
stc
push
ja
mov
sahf
js
and
fdiv
ins
push
add
inc
lods
ins
dec
test
retf
scas
lods
int
call
mov
sbb
es
push
inc
cmp
ja
push
not
dec
push
and
dec
cmp
movs
or
xor
stos
mov
outs
jae
sbb
in
in
ret
sub
sbb
xchg
dec
fcomp
jmp
nop
out
mov
lahf
mov
lods
icebp
(bad)
adc
inc
shl
sar
cs
lea
int
test
inc
repnz
int
xor
mov
dec
adc
test
std
imul
pop
inc
(bad)
leave
dec
add
stos
push
pop
ret
push
in
stos
lods
cmps
(bad)
int3
add
lods
daa
and
cmp
(bad)
mov
test
mov
pop
adc
jecxz
adc
pop
xor
xchg
ins
mov
fisttp
mov
imul
aam
iret
ret
shr
pusha
fcomp
enter
inc
mov
add
scas
fmul
adc
sbb
mov
lea
inc
xchg
pop
int3
movs
rol
mov
idiv
xlat
jl
jmp
mov
mov
xlat
shl
data16
sub
jle
gs
push
cmp
ret
inc
popf
push
pop
lods
retf
jl
cli
push
cmp
repnz
nop
cmp
cmp
(bad)
fwait
aam
jbe
mov
jecxz
xchg
push
loope
repnz
(bad)
mov
bound
nop
push
push
(bad)
xchg
pop
or
pusha
jg
and
mov
mov
test
push
sub
xchg
popf
mov
pop
or
adc
pop
xchg
add
(bad)
push
rcr
adc
sahf
ins
ins
fdiv
jmp
jge
pop
ret
movs
xchg
mov
lods
int
stc
cmps
pop
lods
out
out
outs
(bad)
mov
pushf
mov
add
cld
cld
mov
push
xchg
inc
mov
push
sub
stos
(bad)
lds
cmp
mov
int3
fcmovu
push
es
aas
pusha
lea
lods
inc
cli
and
add
and
int
push
xor
gs
mov
mov
mov
fsub
fidivr
out
sbb
add
(bad)
test
sti
or
aam
(bad)
mov
jl
clc
std
mov
fild
call
vmovq
call
mov
loop
(bad)
pusha
rep
leave
push
jne
cmp
test
scas
cmp
scas
pop
inc
hlt
je
dec
mov
jecxz
call
leave
xchg
nop
aas
push
jae
hlt
mov
in
int3
test
je
lds
sub
arpl
cs
pop
cmps
xor
(bad)
gs
ret
xor
sub
cmp
pop
push
sbb
movs
sbb
push
sbb
sbb
mov
mov
fld
xchg
pusha
push
fucomip
addr16
fild
fsub
dec
into
push
bound
jl
mov
xor
lahf
loopne
rol
sbb
enter
sar
ret
leave
jg
xor
pop
jl
jns
sub
jb
mov
jl
mov
jns
(bad)
mov
outs
cmp
mov
mov
push
xchg
stos
cmp
sahf
dec
pop
xchg
(bad)
and
xchg
repz
fwait
pop
ja
mov
popf
pop
or
pop
push
xor
imul
xchg
sbb
(bad)
jb
int3
jns
mov
mov
add
push
test
mov
xor
mov
sbb
popa
call
fsub
ffree
jmp
mov
(bad)
or
inc
xor
ret
aaa
add
enter
sti
push
dec
iret
xchg
fs
cmp
xchg
shr
loop
mov
or
mov
mov
call
pop
cmp
ffree
loopne
sahf
pop
dec
int
push
or
xchg
push
xchg
shl
xor
imul
push
sub
jl
mov
fs
push
mov
fcomp
xchg
dec
fwait
mov
(bad)
sti
int3
cmp
clc
xor
pop
loop
pop
hlt
fbstp
bound
pop
stc
jnp
movs
(bad)
repnz
mov
jle
jmp
xor
in
mov
jno
and
outs
cmp
pushf
dec
adc
or
mov
ret
scas
xchg
mov
jg
icebp
or
cmp
cs
popa
sbb
xchg
push
addr16
jns
jge
xor
enter
mov
cs
(bad)
das
pop
fist
sub
sbb
push
push
lahf
fiadd
cmp
push
cmp
call
push
pop
sub
(bad)
call
rol
sbb
stos
dec
cmp
add
iret
mov
adc
test
or
xchg
fs
inc
inc
(bad)
pop
pop
mov
xor
push
xchg
mov
and
pop
push
and
mov
lds
aas
jp
adc
cmp
aas
scas
scas
mov
sub
and
push
shl
out
hlt
jmp
jg
movs
and
scas
jmp
ss
adc
jle
jecxz
dec
loope
pusha
ins
xor
dec
sbb
movs
dec
and
adc
pop
push
pop
jb
mov
aam
mov
xchg
mov
pushf
xchg
pop
lock
jbe
jl
icebp
dec
popf
fidiv
mov
dec
sub
xor
xchg
in
and
enter
cmps
pop
jns
mov
sub
pop
and
cmp
add
push
jl
aas
repnz
iret
inc
adc
adc
outs
mov
out
jmp
pop
xchg
pop
add
mov
iret
mov
dec
fiadd
mov
mov
and
pop
popf
jno
cld
xchg
sub
xor
add
ins
mov
in
jecxz
(bad)
lahf
push
(bad)
pop
push
pop
xor
adc
sub
mov
fisubr
xor
sub
jb
jmp
lods
mov
dec
loop
pop
or
shl
mov
sub
sar
mov
and
icebp
mov
sub
cmp
adc
add
jp
int
js
out
jb
adc
xor
movs
push
les
aad
push
into
nop
push
xchg
cwde
jg
adc
mov
mov
jmp
push
pop
imul
imul
add
retf
jns
xlat
mov
inc
ret
jle
push
ins
aam
in
jle
fcmovnb
sbb
xchg
outs
movs
aam
jg
sbb
xchg
or
mov
stc
push
sub
sbb
push
dec
inc
inc
jno
xor
int3
mov
lods
sti
loopne
cmps
or
add
ficomp
aad
sub
mov
sbb
scas
mov
jge
ret
out
cwde
fcom
test
cmp
gs
sbb
cmp
fsub
and
cmps
dec
jge
sbb
fsubr
aas
xor
mov
dec
inc
xor
push
rcr
mov
repz
bound
sub
and
idiv
add
mov
mov
(bad)
pop
pop
mov
mov
pop
add
xchg
into
pop
push
and
inc
jno
movs
outs
in
aam
xchg
in
sub
pop
sub
fisttp
dec
inc
dec
sub
popa
jno
add
cmp
xor
enter
add
adc
mov
mov
sar
pop
in
xor
daa
bound
in
popa
adc
scas
pop
sbb
inc
mov
pop
inc
mov
(bad)
mov
aaa
mov
movs
scas
movs
and
jb
loop
fisub
jbe
jle
outs
loop
adc
adc
ret
movs
or
cmp
cmps
iret
push
icebp
int3
mov
push
shr
in
(bad)
mov
or
or
pop
out
dec
cs
pop
sbb
pop
inc
xor
ja
push
cmps
jne
jmp
push
sbb
ins
xchg
xchg
jns
out
or
or
sti
jns
dec
rol
ror
push
mov
in
lods
cmp
cmp
adc
cmp
xchg
or
push
xor
and
es
jbe
out
inc
or
jnp
ret
mov
cmps
mov
imul
mov
add
call
sub
dec
rol
jmp
fist
dec
add
cmp
cmp
push
or
mov
bound
mov
xor
icebp
shl
call
push
lods
add
es
ficom
int3
sub
jle
push
nop
mov
pop
lahf
jl
mov
cmc
popf
xchg
outs
pop
mov
push
call
jb
adc
std
add
std
sahf
or
mov
xchg
mov
adc
or
gs
or
rol
sbb
inc
mov
xor
mov
outs
xchg
xlat
shl
or
popf
sbb
dec
das
adc
inc
stc
scas
sub
sub
inc
and
dec
mov
pop
add
loop
rcr
push
pop
push
or
cmp
ins
mov
push
adc
repnz
pop
inc
ds
mov
mov
pusha
outs
out
fimul
inc
aad
pop
and
mov
ror
xor
xchg
out
test
leave
fdivrp
mov
sub
push
scas
add
add
add
idiv
fimul
std
sub
jno
push
push
dec
mov
pop
mov
jnp
imul
jle
dec
(bad)
mov
rcr
fistp
es
sub
mov
mov
loope
xchg
cmp
mov
jecxz
cli
xchg
loop
sti
movs
cmp
mov
aad
out
cmp
cmps
(bad)
xor
mov
outs
hlt
mov
pop
popa
outs
mov
mov
pop
mov
ss
ret
adc
scas
jecxz
push
adc
call
add
retf
mov
shl
pop
test
jae
stos
aad
pop
pop
xchg
ror
cmps
sub
imul
mov
into
sbb
cli
imul
dec
sub
jmp
and
push
mov
cmp
xor
mov
test
int
cmp
jns
jns
lods
cs
pop
jecxz
ja
in
or
les
xor
adc
sbb
cmp
inc
push
or
das
cdq
pop
cmp
xor
dec
mov
sbb
and
inc
ins
ret
mov
fsubr
aam
es
dec
pop
test
cmp
add
lahf
mov
mov
das
int3
or
iret
ret
jge
icebp
dec
add
dec
cs
sbb
xchg
and
fnstenv
fidiv
lahf
pop
scas
jl
loope
ja
cmp
and
out
loop
mov
inc
mov
(bad)
mov
popf
enter
not
add
fwait
lods
sub
xor
cmp
add
sbb
loop
jae
sub
iret
pop
inc
loopne
mov
mov
mov
lea
cmp
bound
add
sub
in
test
sbb
mov
mov
loope
sti
inc
mov
movs
xchg
push
xchg
sar
xchg
fild
pop
aam
xor
retf
imul
xchg
push
mov
mov
out
movs
xor
mov
sbb
xchg
rol
push
and
cwde
mov
sar
cmc
mov
stos
inc
add
inc
mov
mov
mov
mov
or
fistp
adc
outs
mov
push
out
out
retf
cld
and
js
dec
aad
enter
es
jmp
cmp
cmps
out
xor
or
pop
aam
mov
data16
mov
add
pop
fbld
mov
or
in
dec
lods
pop
leave
mov
add
ds
fadd
dec
imul
cmp
(bad)
pop
vpaddusb
mov
and
out
in
jnp
jmp
adc
outs
mov
mul
or
or
inc
push
pop
cmps
xchg
ja
mov
pop
int
(bad)
sub
jecxz
sbb
fsub
jbe
xchg
sbb
sub
jo
out
cmp
in
icebp
and
outs
cwde
enter
leave
inc
adc
xor
add
cmp
and
pop
aad
out
(bad)
into
ins
fidiv
pop
cmp
cmp
jle
clc
mov
in
lock
in
pop
mov
aaa
adc
mov
js
in
ret
cwde
push
push
mov
test
or
and
idiv
out
lock
add
out
and
dec
jo
mov
adc
lods
xchg
push
stos
push
cmp
lds
inc
sbb
fcomp
add
stc
ret
pop
pop
mov
jnp
push
in
adc
mov
mov
sbb
aad
and
aaa
adc
xor
mov
sbb
push
mov
cmp
push
sti
xor
mov
dec
sbb
cmc
imul
pushf
ins
push
mov
xchg
pop
push
imul
pop
xchg
or
(bad)
rcr
jnp
inc
xchg
and
or
retf
mov
(bad)
jnp
scas
inc
std
imul
mov
imul
fnstsw
push
xor
cli
les
arpl
popf
xor
test
imul
call
xlat
test
outs
push
jmp
fadd
outs
jbe
movs
and
retf
and
iret
shr
sbb
mov
cmp
cmp
add
push
lds
mov
repz
sbb
mov
xor
jg
cmp
arpl
(bad)
ins
pop
jl
imul
cmp
mov
lea
pop
adc
mov
mov
outs
mov
mov
adc
jbe
dec
mov
push
cwde
ss
pop
cmp
add
pop
sbb
jns
cmp
jp
daa
add
xchg
inc
add
jmp
pop
in
xor
xchg
mov
psrlq
add
and
(bad)
rol
scas
movs
and
xlat
mov
loopne
fs
scas
rcr
mov
pop
call
inc
adc
rol
and
scas
add
sbb
cmp
jne
xlat
out
push
(bad)
pop
mov
inc
aas
mov
add
push
(bad)
adc
or
and
cmp
jo
dec
xor
in
sub
pop
lea
cwde
jb
mov
adc
xchg
adc
pop
stos
cli
das
inc
je
pop
inc
mov
ror
inc
cmps
xor
jmp
push
dec
push
fnstenv
lods
mov
rcl
dec
dec
jbe
scas
cwde
and
mov
rol
test
repnz
add
cmc
xrelease
mov
into
iret
add
or
jg
cmp
test
call
and
je
mov
retf
call
jae
std
cmc
call
sbb
sub
in
(bad)
jge
xchg
sbb
cmp
adc
adc
and
pop
gs
jb
cli
out
iret
movs
and
(bad)
jns
int
xchg
add
or
jl
inc
retf
push
xor
scas
fcom
mov
mov
stos
shl
xor
js
cli
retf
pop
mov
mov
pop
int
ss
mov
lods
push
dec
pop
cmc
pusha
fbstp
(bad)
in
in
ret
push
adc
dec
out
jmp
jo
push
jge
or
aam
aam
(bad)
test
add
test
in
clc
leave
das
cmp
pop
adc
mov
inc
jb
movs
dec
and
dec
idiv
stos
push
cld
shl
xor
dec
cwde
adc
test
jp
imul
sbb
mov
lods
cdq
dec
jns
adc
(bad)
xchg
fwait
inc
and
cmp
clc
ret
jno
mov
jle
mov
fisubr
push
mov
lahf
pop
mov
shr
push
ficomp
ja
jmp
jno
call
xor
mov
jge
jo
dec
hlt
add
lods
inc
sub
jmp
cmp
div
cmp
jno
sub
test
push
inc
imul
mov
rcr
popa
cmp
sub
loopne
imul
mov
clc
cs
or
imul
inc
and
jmp
aad
cwde
pusha
lds
mov
popa
or
pop
int
mov
mov
xor
(bad)
int
xchg
or
pop
rol
push
iret
add
jb
pushf
dec
cmc
and
jl
mov
xchg
popf
call
jmp
jg
(bad)
mov
dec
xchg
mov
(bad)
xchg
cmp
mov
mov
jle
pop
imul
dec
imul
out
aaa
outs
inc
fcomp
jg
sbb
es
cmps
dec
sbb
xor
pop
dec
popa
in
in
jns
daa
cwde
fld
xor
cmps
les
icebp
cmp
jge
or
cmp
sar
or
and
add
sbb
jle
rcl
fs
pop
arpl
push
push
lock
cmp
dec
leave
cmps
aaa
or
sub
mov
push
in
icebp
je
gs
pop
xchg
adc
sub
xchg
and
fcom
mov
shr
(bad)
out
pop
xchg
and
or
shr
call
lock
jge
push
sub
push
stc
mov
stos
sbb
inc
test
aad
mov
xchg
cdq
call
push
bound
cmp
inc
cmps
dec
test
out
in
add
dec
push
shr
xor
jg
pop
and
mov
jb
push
push
stos
mov
push
xchg
mov
jg
xchg
daa
enter
cs
scas
out
inc
xor
add
icebp
ret
add
(bad)
in
sub
in
aas
fxtract
adc
jmp
push
push
les
lods
je
(bad)
outs
loop
pusha
fiadd
lock
xchg
aaa
mov
mov
add
pop
mov
fiadd
ins
push
pop
int3
fidivr
inc
cdq
movs
xchg
fadd
xlat
xor
nop
mov
xchg
rol
pop
mov
repz
rol
mov
fdivr
xchg
nop
push
xor
je
lds
inc
lods
push
das
adc
ss
out
mov
or
fmul
mov
jns
test
mov
imul
push
cmp
idiv
fs
scas
hlt
push
mov
sub
ja
sti
xchg
loope
pop
sub
mov
stos
inc
imul
xchg
adc
test
in
cmp
pop
rcr
mov
dec
and
in
jbe
sbb
and
sbb
or
and
or
ret
xor
cmps
push
cmc
(bad)
sbb
sti
shl
int
mov
jl
jl
repnz
mov
(bad)
frstor
and
xchg
sbb
lods
jge
cmp
movs
in
fstp
dec
or
in
inc
pop
sub
sbb
bound
add
inc
imul
sbb
shr
inc
(bad)
sbb
lahf
out
inc
xchg
or
arpl
fimul
out
mov
and
neg
push
lods
imul
iret
mov
mov
mov
sub
adc
push
lahf
pusha
or
mov
push
iret
push
stos
aad
leave
xchg
shr
stc
loop
pop
stos
mov
and
sub
jle
ficom
mov
xor
scas
and
test
or
inc
out
mov
mov
aas
(bad)
xchg
cmp
xchg
push
aas
test
ins
pop
jp
mov
(bad)
repz
jb
cmp
das
fsub
into
lahf
in
jge
inc
mov
sar
scas
data16
imul
jmp
adc
mov
cdq
sub
clc
add
pop
imul
cdq
cdq
aaa
jmp
mov
mov
inc
call
(bad)
xchg
cmp
jo
test
add
ret
(bad)
mov
xchg
add
outs
jae
push
mov
mov
dec
retf
call
sti
mov
ss
sbb
imul
pop
(bad)
(bad)
arpl
mov
cmps
stc
es
(bad)
in
shl
push
mov
js
nop
rcl
jmp
sub
cmp
pop
(bad)
lock
push
dec
sub
dec
int
sbb
icebp
stos
fs
push
jle
xor
popf
fdivp
and
mov
cmp
outs
scas
mov
mov
inc
call
ret
cmc
mov
mov
das
xor
lea
dec
call
sti
xchg
push
sbb
xchg
and
iret
idiv
xchg
dec
inc
adc
stos
retf
push
arpl
cld
mov
ret
push
std
push
adc
cmps
dec
jb
inc
jmp
fiadd
mov
sti
sub
pmulhw
sbb
mov
and
mov
and
fwait
push
shl
ficom
pushf
mov
sti
mov
pushf
inc
adc
prefetch
add
jns
dec
sub
pop
(bad)
std
and
ins
jge
in
popa
fs
lods
jle
fldenv
and
adc
xchg
mov
xchg
pmuludq
aam
push
inc
iret
sub
cld
mov
sbb
mov
mov
or
arpl
enter
lock
sbb
push
or
lahf
jno
dec
sub
imul
mov
mov
xchg
inc
out
dec
test
sahf
addr16
and
mov
lods
cmp
test
jmp
inc
inc
lods
out
lock
wrmsr
into
jl
cmps
outs
dec
xchg
adc
es
mov
sbb
ss
fnstcw
psrlw
rol
js
push
cli
add
or
in
(bad)
push
dec
paddusb
test
jmp
xchg
pop
add
clc
cwde
fcmove
push
mov
jge
aam
ja
add
jecxz
add
mov
inc
mov
push
hlt
or
in
inc
push
ret
jae
pop
pushf
dec
cmps
jns
mov
push
dec
mov
cmp
loop
push
jecxz
(bad)
jae
shr
cdq
inc
stos
pop
out
push
mov
or
mov
push
adc
fld
xor
push
dec
sbb
fst
or
into
sahf
pop
das
ins
push
in
das
sbb
sbb
and
mov
cmps
cwde
rcl
icebp
sub
pop
les
arpl
mov
retf
fcmovnu
outs
(bad)
popa
jns
or
and
pushf
aas
fld
ja
xor
mov
mov
pop
(bad)
mov
sub
scas
in
push
hlt
lahf
arpl
arpl
sbb
add
inc
adc
add
push
leave
loop
les
or
test
cmp
mov
jbe
arpl
bound
js
and
xchg
mov
aas
or
or
adc
bound
int3
xor
out
mov
lods
xchg
and
mov
sbb
xchg
pop
cmp
mov
dec
bound
call
outs
push
fnstcw
scas
jbe
ror
mov
sbb
stos
imul
arpl
and
fwait
lea
xchg
xor
push
lods
hlt
cmp
lods
sbb
outs
push
push
mov
mov
pusha
loope
jno
rcl
sbb
hlt
xchg
jl
pop
daa
xchg
jo
jle
dec
dec
pop
cmp
repz
neg
push
adc
loop
push
cmps
mov
ss
xor
iret
inc
in
adc
enter
(bad)
mov
popf
mov
add
bound
adc
fstp
dec
fistp
push
mov
pop
mov
push
shr
add
sbb
inc
inc
mov
adc
repz
add
or
daa
and
test
stos
mov
iret
dec
jmp
inc
gs
xor
ficomp
xor
sbb
mov
std
popa
mov
dec
scas
(bad)
inc
sub
lods
pop
(bad)
sti
into
cmp
dec
out
fidiv
push
xor
or
scas
int
sub
pop
adc
jae
fistp
xor
xchg
sbb
dec
bound
shl
(bad)
pop
mov
or
(bad)
leave
mov
ret
add
ss
in
push
sub
mov
cwde
shl
retf
dec
inc
mov
mov
out
jne
stos
movs
jne
(bad)
mov
(bad)
leave
popf
adc
push
add
jbe
push
loopne
loope
dec
stc
sub
dec
scas
popa
(bad)
hlt
int3
mov
cmp
and
mov
out
mov
dec
gs
mov
sbb
rcr
or
or
mov
out
ins
or
mov
arpl
push
shl
jbe
cmc
cdq
push
pop
test
mov
out
xchg
in
es
or
not
cmp
push
aas
popa
in
int
pushf
mov
addr16
repnz
xchg
(bad)
lea
pop
adc
sub
sub
mov
mov
cmp
mov
mov
lods
jnp
sub
and
movs
test
out
sub
mov
test
inc
xchg
test
int
cld
add
add
daa
dec
pushf
xchg
cmp
jl
xor
jo
iret
ins
mov
pop
and
sub
pop
(bad)
fs
repnz
cli
popa
sar
and
js
aaa
mov
out
test
inc
pause
xor
paddsw
mov
mov
and
retf
cmp
sub
xor
dec
dec
ins
push
pop
mov
dec
pop
(bad)
or
mov
inc
out
cdq
or
push
(bad)
call
cld
out
out
xchg
addr16
daa
daa
pop
sahf
inc
pop
outs
sub
add
aad
lock
or
scas
pop
jb
ja
pusha
aad
mov
mov
icebp
test
in
pop
ds
imul
into
leave
aas
in
enter
out
outs
imul
mov
cwde
jmp
retf
xor
mov
repz
or
jns
enter
sti
pop
mov
int3
fxch
(bad)
retf
lods
out
push
shl
inc
dec
add
in
pop
mov
xor
cmc
sbb
call
xor
mov
xor
sti
rcl
cmp
pop
stos
lock
mov
inc
aad
pop
pop
mov
(bad)
mul
(bad)
std
cmp
add
or
xchg
hlt
addr16
fisttp
cmp
push
loop
cmp
lds
loope
out
(bad)
and
xchg
cld
sbb
jae
or
add
dec
fcmovnu
mov
cmp
bound
(bad)
mov
sahf
out
cmps
outs
sbb
cmp
xchg
or
mov
xchg
dec
sbb
push
pushf
cs
fcomp
add
ret
pushf
js
test
adc
xor
xor
xlat
fbstp
mov
stc
mov
push
jne
ficom
std
iret
push
popf
jg
sbb
or
dec
xor
jmp
xchg
mov
mov
fisttp
mov
xor
sbb
mov
cmp
inc
dec
push
pop
test
jno
xchg
cdq
ret
and
hlt
and
arpl
dec
mov
pop
out
push
xlat
cmp
xchg
dec
ficom
xor
enter
jmp
fld
dec
mov
jl
adc
xlat
mov
addr16
push
lods
rcl
stos
lahf
inc
pushf
jbe
mov
mov
fdiv
mov
out
sub
ins
fisub
(bad)
out
cmp
mov
push
popf
sbb
ja
pop
sub
loope
sbb
fadd
push
pop
ror
pop
in
sbb
sbb
dec
stos
push
das
dec
cmp
mov
ret
jns
popf
fcomp
mov
dec
jns
inc
enter
xchg
ror
and
sbb
scas
dec
(bad)
dec
xor
mov
sub
out
dec
mov
call
xchg
fwait
int3
add
aaa
sub
mov
pop
or
mov
push
cmc
rol
sbb
sub
inc
inc
cmps
fdiv
je
jg
pusha
fld
fidivr
(bad)
js
leave
mov
(bad)
iret
sub
scas
or
daa
arpl
das
nop
cmp
test
or
push
fimul
and
jno
je
not
mov
arpl
push
push
mov
loopne
add
jl
mov
(bad)
es
leave
stos
adc
dec
into
mov
cmps
mov
pop
mov
sahf
stos
mov
loope
xchg
xchg
cs
jnp
mov
xchg
call
jg
pop
jb
dec
retf
fldcw
rol
aad
int
pushf
xor
shl
push
push
mov
cmp
(bad)
cs
push
pop
fs
into
sahf
(bad)
pushf
(bad)
mov
sar
inc
lods
jl
adc
xchg
sub
cmp
into
rol
cmp
sbb
mov
or
popa
add
push
and
push
fs
mov
and
mov
or
sub
or
pop
mul
dec
and
bnd
fistp
inc
stos
pop
inc
aas
test
mov
adc
dec
mov
repnz
rcr
popf
cs
bound
jo
daa
add
js
xchg
jg
pop
lea
adc
jge
ss
mov
aad
jl
dec
ret
in
or
es
dec
loope
mov
adc
jmp
ret
popa
pop
mov
xchg
outs
movs
mov
inc
jp
dec
mov
rcl
pushf
mov
mov
add
mov
pushf
clc
test
and
and
test
jne
jno
sub
aas
and
inc
(bad)
and
push
std
mov
push
xchg
mov
test
sbb
mov
jp
cmc
mov
fnstsw
es
push
(bad)
mov
or
inc
call
cmc
jno
mov
cmps
in
mov
add
int3
in
pushf
ja
sbb
add
test
mov
xchg
dec
and
pop
and
mov
push
scas
pop
sub
popa
cvttps2pi
add
xlat
es
fwait
mov
pop
jo
xchg
enter
ror
sub
aad
mov
xchg
inc
pop
pop
inc
js
shl
xor
cmc
mov
ins
inc
outs
mov
sbb
mov
jne
cld
movs
xchg
enter
adc
lahf
push
pop
shr
inc
ins
dec
jno
pop
cdq
daa
mov
xchg
push
sbb
inc
je
pop
xor
fcmovbe
in
sti
pop
imul
inc
sbb
adc
add
mov
gs
dec
push
adc
pop
(bad)
loop
cmp
adc
jb
add
xor
loopne
and
xor
adc
and
scas
and
or
out
ds
pop
test
int3
jbe
mov
add
sub
daa
and
push
sub
leave
cmp
arpl
sbb
xor
ins
and
retf
dec
sub
mov
into
jmp
(bad)
imul
mov
out
adc
call
mov
cdq
mov
mov
call
js
cmp
mov
call
iret
retf
add
or
addr16
mov
in
movs
mov
add
movnti
imul
out
mov
idiv
call
mov
jge
cld
bound
test
test
push
sar
cmp
xor
cwde
data16
in
fisttp
and
dec
mov
hlt
xlat
ja
mov
popf
(bad)
pop
xor
or
inc
sub
mov
(bad)
pop
aam
loop
mov
xchg
mov
popf
test
push
pop
inc
and
retf
ret
push
imul
sti
mov
mov
lods
pop
idiv
xchg
xchg
cmp
pusha
aad
in
out
xor
dec
or
ja
or
xor
pop
jnp
sbb
stc
outs
push
popf
movs
in
dec
cmps
scas
std
or
mov
shr
icebp
xchg
and
cmc
outs
adc
ss
fldcw
das
mov
xor
pop
mov
cmp
dec
scas
fist
(bad)
cdq
add
or
adc
cmp
lea
cwde
das
jmp
mov
cmp
sub
loop
xchg
xor
sar
pop
arpl
dec
inc
jne
mov
mov
inc
xchg
les
pop
and
mov
push
mov
leave
mul
push
fsubr
sub
adc
ds
retf
pop
js
pusha
hlt
dec
push
popf
mov
push
loop
(bad)
ficomp
jae
mov
add
sbb
int
das
cmp
mov
sbb
adc
stos
pop
mov
jge
jae
(bad)
movs
pop
pushf
xchg
pop
out
lahf
sahf
ds
in
mov
pop
imul
leave
sub
call
and
mov
je
cs
rcr
mov
ss
ja
dec
add
dec
adc
mov
aam
imul
outs
aas
icebp
mov
dec
and
jno
jb
and
mov
test
fadd
pop
sub
dec
ret
stos
aad
xchg
cli
mov
outs
in
or
popf
call
jmp
ficomp
shl
inc
dec
cmp
mov
cld
push
sar
fsubr
xor
mov
ins
or
pop
push
sar
add
sahf
ror
fimul
nop
hlt
mov
imul
loope
cmp
sbb
push
fucomp
rcr
mov
(bad)
push
push
dec
cmp
cmp
jp
sbb
adc
jns
repnz
jo
inc
cvttps2pi
cmp
clc
lods
cld
out
mov
xchg
movs
dec
outs
in
jge
add
push
hlt
mov
jge
xchg
sub
add
cmps
shl
ror
mov
and
mov
adc
push
mov
jno
imul
xchg
jmp
cmp
jmp
lahf
sub
rcl
cmps
ss
adc
jg
xor
xor
sbb
in
adc
inc
mov
test
in
mov
je
aaa
rol
xchg
stc
arpl
ret
push
pop
push
cmp
inc
cmps
and
stos
dec
rcr
and
arpl
mov
fist
leave
add
das
push
iret
jnp
add
stos
or
call
pop
in
test
cmp
sbb
add
mov
sbb
and
fstp
jl
mov
jo
pushf
jg
lods
in
into
and
(bad)
loop
call
imul
sub
jae
mov
add
and
xor
jp
sahf
sbb
div
adc
outs
inc
aaa
jle
(bad)
ins
cmp
popa
(bad)
mov
ror
sahf
mov
dec
std
retf
push
call
xchg
sub
ja
xor
fucomp
fisttp
pop
inc
jmp
out
inc
add
dec
xlat
xchg
fsub
and
call
cdq
test
scas
pop
pop
push
sbb
loopne
push
iret
jae
ins
int
mov
pushf
cmp
pop
jno
es
mov
mov
adc
xor
vhsubpd
mov
(bad)
icebp
sub
js
mov
nop
int3
and
imul
or
cmp
cmp
inc
stc
xor
dec
sub
mov
pop
gs
fnstenv
adc
pop
nop
pop
popa
adc
pop
or
stos
and
inc
jne
mov
(bad)
mov
(bad)
and
mov
lea
mov
fistp
xchg
icebp
ret
repz
lock
push
jge
(bad)
(bad)
cs
inc
dec
mov
in
dec
push
inc
xor
cmp
ins
push
sub
mov
or
int
fistp
popf
xor
sti
inc
fwait
les
inc
pop
ret
xor
lods
mov
add
movs
push
xor
aam
push
mov
push
icebp
dec
(bad)
arpl
pop
out
in
enter
shl
and
fldenv
adc
xchg
pop
mov
sar
dec
xchg
retf
pop
cwde
mov
shl
sub
jnp
jmp
fsubr
adc
test
xor
adc
leave
inc
retf
sbb
imul
push
fbstp
adc
jne
sbb
(bad)
cmps
fxch
adc
int3
loop
aas
dec
out
add
pusha
mov
mov
popf
movs
std
ror
add
sti
pop
mov
js
sub
mov
xor
sub
mov
loope
leave
and
ss
les
add
sbb
jmp
cmc
pop
push
fwait
jmp
std
mov
std
js
pop
pop
cdq
rol
rcr
push
dec
sbb
pusha
xchg
push
mov
int3
out
rol
sub
jbe
mov
(bad)
jg
sub
dec
inc
push
xchg
ret
pop
mov
mov
mov
jg
jnp
cmc
les
mov
lahf
repz
popa
int3
bound
mov
test
movs
sub
pushf
test
jp
inc
repnz
ins
pop
mov
pop
xlat
(bad)
dec
fld
pop
mov
cmc
pop
and
and
mov
and
push
pusha
push
mov
outs
sbb
nop
into
mov
push
dec
loopne
xor
dec
add
inc
pop
and
out
mov
out
loop
jg
ins
xchg
xchg
jbe
(bad)
mov
(bad)
imul
movs
jb
pop
adc
sbb
outs
outs
cmovp
repz
jmp
stos
imul
jae
(bad)
inc
and
jp
mov
xor
pop
rcr
push
fneni(8087
pop
int
daa
ficom
mov
adc
adc
jae
and
movs
addr16
mov
inc
popa
daa
mov
out
and
lahf
(bad)
sbb
ss
cs
or
ins
jmp
cli
pop
pop
loope
(bad)
jne
pushf
xchg
rol
bswap
xchg
stos
test
ds
sub
mov
js
pop
ss
push
movs
popf
cmp
xchg
dec
retf
sub
jo
add
arpl
sub
pop
rcl
dec
mov
or
sub
dec
cmp
push
es
xchg
adc
repnz
push
pop
xchg
adc
outs
cwde
out
icebp
cmc
mov
fs
mov
inc
pushf
lods
arpl
das
das
xor
lock
pop
jae
out
adc
shl
repz
push
gs
xor
stc
xchg
fmul
lods
and
addr16
sbb
xlat
enter
mov
xor
cld
sbb
aaa
sar
mov
imul
cli
xor
mov
(bad)
sahf
jmp
or
nop
mov
stos
sub
arpl
mov
scas
std
in
into
push
jae
cmp
stc
aas
fdiv
nop
jae
jae
pop
cwde
cmp
mov
test
nop
repz
(bad)
sar
rol
mov
pushf
retf
clc
(bad)
cmp
sbb
repnz
add
jg
xchg
mov
cmp
(bad)
ror
and
and
pop
mov
dec
or
sbb
mov
sbb
dec
mov
bound
test
mov
push
mov
es
arpl
mov
cmps
and
rcr
imul
inc
sbb
mov
and
out
into
fnsave
ss
lea
adc
cmp
lahf
stc
and
add
int3
push
call
repnz
adc
hlt
jbe
pop
cmps
es
sub
xor
cmps
idiv
mov
pop
pop
push
addr16
sub
sbb
cmp
lahf
(bad)
mov
push
push
movs
idiv
sub
adc
pop
clc
xlat
fldenv
and
push
cmp
cmp
ins
iret
adc
rol
cmp
or
imul
cmp
jb
mov
or
add
mov
add
jmp
movs
bound
test
push
mov
sbb
outs
mov
dec
pop
fidivr
mov
cmp
jnp
ins
pop
adc
or
add
scas
ins
jg
cmp
das
bound
ds
test
sbb
scas
inc
dec
stos
lea
jge
and
loop
pop
sti
mov
dec
cld
loope
mov
push
jae
out
repnz
arpl
aam
aam
(bad)
fnstsw
and
fnsave
dec
aam
dec
ss
ja
test
out
jmp
mov
inc
cdq
cmps
pushf
and
push
xchg
dec
sub
xlat
fcom
adc
inc
icebp
mov
not
cld
into
dec
iret
mov
shl
addr16
adc
loop
(bad)
(bad)
jp
mov
pop
xchg
mov
xor
pusha
inc
sar
loop
hlt
add
and
sbb
push
jge
xchg
loop
retf
dec
add
mov
arpl
aam
bts
sar
jnp
scas
sbb
sbb
adc
jp
or
outs
xor
scas
add
or
hlt
push
rcl
pop
int
pop
fiadd
leave
and
inc
mov
xchg
dec
jne
out
pop
(bad)
xchg
mov
loopne
lods
adc
sbb
shl
xor
lea
mov
icebp
xor
rcr
enter
sub
push
icebp
xor
int
je
mov
daa
jnp
lds
jmp
inc
xor
cmps
mov
repz
int
iret
fstp
pop
push
cmp
push
jbe
leave
push
repz
retf
lea
add
(bad)
iret
rol
stos
les
mov
fdivr
jno
sti
inc
rol
xchg
lods
sbb
adc
jp
mov
jns
mov
jecxz
mov
xchg
jmp
pop
xchg
scas
cmps
mov
and
cmc
mov
cmp
sahf
push
and
cmp
dec
scas
push
shr
adc
inc
mov
inc
inc
je
jno
in
dec
test
pop
and
imul
int
xchg
xor
lods
jbe
scas
add
xchg
rcl
mov
sbb
add
push
mov
test
or
mov
cwde
sub
(bad)
xor
push
imul
sbb
push
or
fstp
mov
mov
cmp
mov
mov
sub
nop
cmps
mov
outs
fcomp
int
sub
rcr
sub
sub
outs
adc
xor
shl
imul
adc
jl
hlt
jae
dec
into
mov
jbe
scas
cdq
sub
hlt
xor
or
sbb
mov
jnp
lahf
and
icebp
push
int3
and
and
ds
fadd
pop
retf
(bad)
fstp
fidivr
cld
push
hlt
(bad)
push
ret
fdivr
(bad)
mov
mov
mov
call
ds
jns
lahf
inc
in
dec
icebp
aaa
ret
dec
and
jnp
push
jge
jp
jmp
scas
sbb
jnp
iret
cdq
push
cmp
and
pop
mov
cli
das
js
outs
and
cmc
ficomp
call
push
pop
std
out
cld
xor
inc
push
xor
out
dec
loope
inc
dec
sar
ret
sbb
pop
mov
sub
in
outs
je
aas
lods
xor
cdq
sbb
xor
xlat
mov
out
les
cmp
jmp
and
sbb
cmp
test
sbb
pop
fisub
std
lock
adc
js
or
adc
test
test
push
mov
(bad)
repnz
adc
test
aad
loope
jle
dec
repnz
ficom
inc
iret
pop
test
ret
ror
cmp
lods
(bad)
sub
imul
add
push
cmp
addr16
and
loope
adc
ret
push
sub
imul
repnz
out
scas
mov
jle
or
jns
or
rcr
and
sbb
into
xor
cdq
add
jg
push
cwde
call
aam
fwait
inc
mov
bound
inc
(bad)
lods
mov
cmc
jns
out
fstp
push
icebp
mov
ins
dec
outs
cmp
dec
push
jl
icebp
imul
aam
xchg
and
mov
jp
adc
mov
pop
adc
(bad)
xchg
loop
fbstp
data16
scas
push
and
mov
cmc
dec
es
add
cmp
hlt
add
mov
inc
sbb
sbb
add
adc
or
ins
inc
in
and
adc
adc
hlt
cld
ror
pusha
out
jg
imul
inc
dec
xor
jbe
add
stc
lds
ret
cmp
imul
stc
fldenv
mov
add
and
movs
adc
mov
xchg
idiv
aas
xor
popa
jns
sbb
sbb
(bad)
jae
test
mov
gs
push
clc
sbb
mov
in
call
fisubr
in
xchg
ret
or
mov
jae
xchg
sbb
lock
cmps
mov
mov
aas
sbb
outs
xchg
mov
imul
fdivr
das
out
movs
jp
cmp
(bad)
xor
std
xor
ficom
mov
inc
(bad)
(bad)
jbe
and
push
mov
loopne
pop
xchg
jnp
(bad)
cmp
out
lods
add
nop
sub
mov
add
add
push
adc
ja
mov
shr
gs
ror
jbe
mov
dec
mov
dec
inc
dec
push
pop
fs
jl
std
mov
repz
xor
rcl
mov
movs
and
jmp
pop
test
and
jns
fwait
mov
sbb
outs
pop
mov
call
pop
sub
aad
retf
pop
shr
sub
mov
push
push
fimul
sub
and
clc
add
dec
in
pop
shl
inc
outs
ror
dec
lods
lods
(bad)
inc
xor
sub
xor
mov
mov
int
cli
xchg
pusha
aas
mov
repnz
mov
mov
adc
pop
shr
ja
push
cs
xchg
outs
jmp
pop
mov
iret
push
jno
jne
jbe
out
ficom
mov
(bad)
je
aam
dec
(bad)
sbb
scas
retf
lea
pop
cmps
mov
(bad)
out
pop
jg
or
nop
and
nop
add
outs
leave
xchg
pop
pop
pop
cmps
add
lock
jne
jle
scas
inc
or
inc
jbe
arpl
call
nop
daa
cmp
not
jb
lahf
jl
ror
or
xchg
xchg
sti
popa
sbb
mov
mov
dec
es
repz
mov
ins
inc
pop
cmp
jmp
movs
dec
pop
jecxz
data16
fs
cmps
(bad)
jne
or
fld
xor
cs
data16
repnz
dec
xchg
jecxz
and
nop
leave
xor
popf
ja
or
add
xchg
pop
mov
mov
push
push
jmp
mov
pop
or
shr
fdivrp
add
or
jbe
shl
or
bound
lahf
mov
popf
(bad)
and
bound
ins
sbb
cmp
mov
dec
push
lods
out
pusha
je
mov
sub
cmps
fbld
retf
rcl
icebp
test
pop
cmp
and
add
(bad)
icebp
mov
jl
dec
or
aas
fsubr
icebp
dec
mov
mov
pushf
push
and
mov
aaa
xor
retf
rcl
fild
mov
pop
adc
pmaddwd
pop
scas
test
test
pop
or
push
in
jg
(bad)
out
sub
jge
mov
xor
fwait
(bad)
xor
lahf
stc
xchg
dec
pushf
aas
imul
inc
cmps
mov
hlt
lea
push
or
retf
cmc
icebp
stos
out
movs
cmc
lea
test
(bad)
mov
mov
push
repnz
cdq
sbb
test
call
in
std
cmps
xchg
or
popa
rol
pop
fst
sbb
or
or
dec
mov
aas
sbb
in
add
mov
cmp
cmp
gs
mov
test
sub
vmovhps
test
cmp
mov
mov
mov
add
stc
test
mov
out
jnp
out
scas
xor
jp
sub
xchg
in
add
mov
js
ss
enter
or
jo
push
aaa
xchg
inc
inc
movs
loop
jae
xor
inc
sub
add
sar
cmp
mov
mov
or
imul
enter
push
inc
lock
cmp
jecxz
ret
xlat
cmp
pop
push
push
sub
clc
sub
or
mov
dec
popf
popa
jg
lahf
div
aaa
add
icebp
inc
cmp
jmp
fisubr
lods
xchg
dec
enter
daa
or
imul
fwait
mov
outs
push
hlt
scas
addr16
inc
push
mov
add
repz
movs
aam
push
push
imul
push
and
mov
mov
inc
jbe
fistp
call
rcl
pop
push
mov
mov
cmp
call
rcl
sub
test
xchg
add
arpl
mov
dec
ret
xchg
sbb
mov
push
jl
adc
ins
imul
mov
mov
(bad)
xchg
cmp
pop
mov
stc
ror
stc
fstp
outs
mov
sub
pop
lods
inc
gs
adc
mov
fsubr
add
push
(bad)
push
les
xlat
fimul
inc
xchg
fild
add
mov
or
pop
cmp
jp
push
and
sbb
add
jmp
(bad)
aad
mov
in
cmp
pop
(bad)
in
enter
in
pushf
mov
fadd
add
lods
ret
jp
pop
or
and
sbb
paddd
fcmovu
xchg
pop
mov
or
dec
vcvtsd2ss
inc
mov
push
int
je
(bad)
fdiv
push
loopne
pop
inc
popf
and
sub
shl
sbb
mov
sub
push
out
xchg
jno
loop
mov
fidiv
push
mov
sbb
and
aas
fnstenv
fild
cmp
and
dec
mov
inc
mov
cli
push
retf
pop
add
bound
shl
cwde
inc
or
mov
jbe
lds
mov
mov
nop
dec
bnd
jmp
inc
out
fs
pushf
nop
push
cmp
dec
dec
dec
daa
outs
mov
xchg
(bad)
fsub
in
xor
add
adc
rcl
in
fcomp
xor
jno
ret
iret
daa
lock
lock
cs
ja
out
mov
inc
int3
sbb
pop
repnz
loop
cmp
mov
out
aas
mov
in
inc
into
hlt
jmp
cmc
or
mov
out
dec
lods
aad
jns
mov
jmp
in
sbb
fbstp
push
push
out
push
mov
mov
inc
(bad)
dec
sub
sub
xlat
call
pushf
outs
aad
jge
in
hlt
cmp
xor
(bad)
sti
or
fdiv
mov
dec
cdq
call
mov
(bad)
dec
out
jp
sbb
mov
mov
loop
cmp
sbb
and
xlat
mov
fistp
pop
movs
cwde
hlt
mov
fnsave
daa
add
jns
in
in
jmp
adc
enter
pushf
inc
jb
mov
push
cmp
or
jne
and
leave
es
xor
aas
inc
ss
imul
pop
mov
out
push
cmp
or
mov
sub
pop
add
adc
inc
and
mov
data16
(bad)
mov
jp
in
int3
jecxz
sbb
mov
repz
add
mov
scas
test
or
xchg
fsubr
jl
in
sahf
out
inc
dec
xor
addr16
push
lock
repnz
ja
addr16
test
cmp
cmp
lods
sbb
dec
dec
cli
std
inc
inc
and
lods
mov
cld
rol
ds
ins
scas
lahf
xchg
push
add
fadd
and
stos
pushf
adc
nop
fisttp
cld
adc
gs
dec
arpl
fisubr
inc
mov
adc
data16
int
sbb
cmp
and
je
cmp
push
jge
xor
xchg
movs
jne
jmp
sbb
xchg
mov
xchg
(bad)
movs
inc
pop
mov
ret
outs
sbb
sbb
neg
dec
cs
fs
sub
push
push
mov
in
xor
cmp
xor
and
xor
or
push
call
pop
mov
or
test
lods
sub
popf
jmp
sbb
in
fiadd
aas
sub
scas
loop
sahf
inc
popa
push
push
pop
out
add
add
xchg
fmul
push
repnz
in
int
cmps
mov
inc
rcl
mov
push
pop
out
pop
and
scas
mov
les
ds
and
push
stos
cmp
iret
xor
mov
daa
ss
cs
lock
loop
and
aam
ins
mov
ins
jne
mov
mov
xchg
int3
mov
stos
jne
and
dec
adc
fmul
push
pop
test
and
pop
and
imul
mov
test
stos
dec
(bad)
mov
and
fisttp
popf
fidivr
push
inc
adc
mov
push
shr
xchg
adc
sbb
jmp
ret
int3
cwde
aas
push
int
in
or
add
mov
dec
inc
es
aas
jmp
jb
push
jno
sub
ja
sti
dec
push
cmp
ins
in
out
push
sahf
inc
lods
or
cmps
inc
push
pop
mov
aas
cmp
and
cmp
jo
nop
loop
movs
adc
mov
and
test
(bad)
ret
pop
imul
pop
sti
cli
outs
repz
mov
in
xor
push
dec
pop
xor
pusha
not
ret
lds
movs
into
jle
inc
retf
out
adc
adc
aam
mov
stos
or
mov
cmp
pop
out
xor
jmp
jne
mov
push
sbb
arpl
jmp
call
dec
jne
cmp
imul
adc
adc
push
das
out
dec
rcr
fimul
inc
inc
add
faddp
jmp
rcr
std
cli
mov
and
rcr
sbb
call
aam
xchg
mov
add
adc
lahf
jae
cmps
jns
push
test
push
or
adc
or
jmp
dec
push
fisttp
mov
inc
loope
xlat
and
test
or
jb
and
mov
loopne
cwde
(bad)
arpl
(bad)
jmp
fidiv
sub
sub
dec
jbe
dec
jno
or
fstp
repz
daa
cmps
add
mov
pop
xchg
pop
daa
mov
pop
lds
das
mov
adc
arpl
adc
and
pop
mov
jl
or
imul
jl
sub
test
(bad)
mov
in
mov
call
adc
pop
adc
and
fwait
xchg
daa
mov
add
fbstp
imul
pop
repnz
jnp
inc
push
in
hlt
cmp
out
jl
fwait
sbb
dec
fmul
sbb
scas
ss
(bad)
jmp
(bad)
fsubr
sbb
inc
in
leave
out
(bad)
fbstp
sbb
imul
cmp
sbb
sbb
or
cmp
not
(bad)
pop
xor
pop
fcmovnu
xor
push
jp
stos
enter
push
bound
mov
(bad)
fisttp
test
sbb
arpl
or
arpl
pop
push
dec
inc
imul
sbb
xor
mov
mov
mov
jle
push
popf
fimul
in
pop
inc
shl
in
pop
ss
or
inc
mov
push
xor
fs
cli
jp
leave
mov
and
sub
jne
in
xchg
out
int3
imul
int
cmps
adc
cmp
push
ins
retf
into
test
jmp
or
mov
lds
dec
sti
or
pop
add
mov
cld
js
push
dec
push
shl
ins
or
pop
jge
jno
retf
popf
jle
pushf
jne
push
pushf
fisttp
inc
fs
test
xchg
shl
or
mov
sub
mov
pusha
and
sub
in
lea
add
ret
mov
sahf
mov
shr
loop
sbb
and
adc
cmp
mov
inc
fmul
loopne
xchg
shr
xlat
call
das
dec
arpl
std
int3
dec
add
add
movs
push
cmps
je
fdivr
fsubr
movs
or
sub
and
push
xchg
xchg
xchg
jae
es
cmps
popa
scas
sti
cmps
lock
stos
les
xchg
dec
push
leave
ret
bound
push
pop
xchg
xor
mov
lahf
es
retf
out
or
pop
stos
loopne
fisttp
sbb
dec
cmps
in
add
mov
mov
pop
clc
sbb
inc
or
xchg
or
stos
jmp
push
inc
leave
(bad)
std
jns
xor
lock
dec
call
mov
pop
ret
mov
(bad)
icebp
(bad)
clc
sar
push
mov
inc
mov
int3
scas
cmp
add
lahf
sbb
pop
jb
push
ror
push
jp
or
fsubr
jmp
mov
dec
(bad)
fidivr
sub
and
rol
je
movs
es
clc
push
(bad)
enter
push
dec
lahf
adc
xchg
les
sub
mov
ret
mov
inc
iret
sbb
and
repz
lods
mov
adc
xlat
fadd
mov
in
ret
(bad)
(bad)
ja
in
fwait
xchg
lods
sbb
pop
movs
adc
out
adc
jbe
dec
push
push
ins
mov
jg
jne
pop
and
test
push
mov
arpl
rcl
mov
pop
and
aas
fsubr
mov
dec
or
aam
jp
std
lds
in
push
or
cmp
je
pop
aam
xchg
cmc
inc
jbe
adc
xor
inc
pop
pop
pusha
mov
mov
jmp
xor
lea
out
das
dec
scas
jbe
or
push
and
ret
cwde
in
xchg
dec
pop
pop
and
adc
fsub
mov
push
fst
ret
add
shr
pop
cmp
xchg
sub
pop
stos
shl
clc
push
cmp
xor
xor
fidivr
nop
out
push
push
ds
scas
loope
xchg
fcmovnb
fwait
jp
rcl
push
aam
cmp
add
jl
inc
sbb
push
inc
(bad)
cmp
(bad)
push
sub
sub
jns
push
(bad)
cwde
xor
xchg
ins
inc
or
or
mov
test
push
jne
sti
pop
sub
dec
rcr
stos
jecxz
jno
cdq
mov
ds
mov
sbb
mov
popa
stos
in
add
jnp
add
rol
call
push
add
fcom
adc
add
cmp
out
mov
cmp
xor
test
cmp
fstp
stos
mov
xchg
mov
pusha
or
mov
lahf
mov
jo
repz
cmp
push
mov
mov
aas
fidiv
xor
xor
or
and
test
xchg
icebp
cmp
lahf
stos
mov
cmp
movs
xchg
push
jge
sub
mov
mov
pop
stos
fild
cmp
ins
addr16
bound
adc
enter
xor
enter
inc
repz
jae
mov
mov
das
pop
stos
cli
inc
aam
jecxz
mov
not
cs
or
sub
call
adc
inc
pop
xor
lods
xchg
lds
bound
paddusw
int
pop
dec
test
cmps
jle
scas
dec
fcom
pop
or
mov
jo
cmps
xchg
ss
in
stc
inc
pop
or
ds
sahf
leave
dec
inc
(bad)
retf
rol
retf
xor
(bad)
out
mov
sub
add
dec
mov
jmp
fwait
pusha
pop
pop
out
sbb
xor
repz
in
jne
movs
daa
mov
retf
fiadd
cmp
in
push
clc
addr16
ficomp
sub
xor
pop
aam
fs
mov
sub
push
adc
enter
adc
mov
push
mov
sub
pop
push
cmps
or
sub
and
pusha
pushf
fucomp
ret
in
sbb
(bad)
shl
jmp
sub
sub
dec
into
mov
retfw
cmps
and
test
aas
lods
mov
fdivrp
add
jno
jl
sub
test
jecxz
push
jp
adc
and
enter
ins
mov
int
pop
mov
jae
and
mov
in
add
test
into
push
and
inc
push
retf
dec
xor
push
stc
jmp
push
mov
push
imul
push
mov
sbb
or
(bad)
sub
gs
xchg
loop
(bad)
mov
loop
shr
lea
outs
pop
das
jnp
jl
sbb
add
sbb
mov
add
and
and
push
cdq
and
mov
ret
es
mov
jb
mov
(bad)
mov
(bad)
mov
jnp
nop
and
aas
fcom
jne
inc
add
push
jne
pop
adc
dec
fs
or
cmp
and
lods
ds
imul
jg
dec
push
bound
push
xchg
cmp
mov
imul
mov
adc
xchg
xor
fistp
push
pop
icebp
push
jae
ja
cmp
sbb
jmp
cli
daa
cwde
adc
sbb
cmp
mov
cmps
into
jge
lods
cmp
or
cmp
jmp
pop
push
mov
sub
gs
pop
sub
movs
push
fld
out
test
xchg
loopne
jg
int
or
push
push
fnsave
and
fistp
inc
fldcw
arpl
mov
data16
cmp
aam
div
add
ins
push
cmp
xchg
xor
imul
xor
data16
jmp
push
mov
sbb
nop
retf
or
jae
or
les
pop
push
cli
and
je
ror
repnz
dec
jnp
outs
movs
push
add
(bad)
sahf
jp
push
ja
pop
mov
or
inc
and
daa
xor
es
mov
mov
ret
xor
call
aaa
movs
lahf
retf
or
(bad)
pop
sub
test
gs
inc
enter
lods
sbb
mov
sbb
cmp
mov
movs
scas
xchg
(bad)
call
jno
fs
and
inc
es
or
pop
mov
add
retf
jbe
sbb
lods
fisubr
adc
xor
cmp
and
stos
dec
aam
mov
jno
mov
lock
loopne
stos
pop
xlat
nop
push
retf
mov
push
jg
sbb
ss
jae
ins
jp
pop
in
das
dec
test
inc
arpl
adc
dec
cmc
or
rcl
push
test
xlat
sub
mov
fimul
ret
jg
ret
fsubr
lods
cmps
mov
les
and
jno
test
aad
loope
cmp
int3
pop
dec
sub
icebp
movs
xlat
test
jne
jl
sub
dec
cld
jge
jo
cmp
pop
shl
jmp
xor
push
dec
adc
inc
jmp
and
aas
add
adc
hlt
sub
cld
ja
fnstcw
outs
in
shl
xor
pop
(bad)
rol
mov
xor
mov
sub
data16
xlat
outs
cmps
shl
repnz
ss
test
lods
fbstp
mov
push
push
out
adc
call
mov
hlt
cmp
or
pop
fsub
(bad)
mov
mov
rcr
ret
je
inc
and
into
jnp
rol
test
loopne
test
xlat
lea
sbb
pop
adc
scas
cmp
aas
sbb
mov
push
bound
inc
mov
push
fistp
mov
stos
ins
jge
and
adc
jg
jo
aas
jae
lods
lods
fsubr
test
inc
mov
movs
jo
sub
pmovmskb
push
or
pushf
aam
leave
loop
mov
mov
inc
ss
mov
enter
mov
xchg
xlat
mov
test
xor
data16
adc
and
cmp
fisub
pop
cmp
pop
mov
(bad)
adc
mov
test
nop
inc
and
xchg
sub
mov
call
sub
adc
shl
inc
mov
ror
mov
mov
out
cmps
cld
in
or
int
iret
mov
out
fcomi
js
mov
nop
inc
jbe
inc
clc
push
push
imul
mov
sbb
addr16
(bad)
int3
mov
jl
loopne
lods
push
test
bound
push
cs
or
jg
int3
mov
dec
xchg
mov
cmp
ins
fist
and
push
adc
and
dec
(bad)
jecxz
scas
pop
repz
in
(bad)
rcr
test
push
sbb
inc
(bad)
jnp
cmp
stc
jp
test
and
jo
inc
and
pop
(bad)
pop
mov
pop
dec
xor
aad
cmp
jo
shr
in
xchg
xchg
mov
ret
push
test
dec
mov
or
inc
aaa
jno
lods
bnd
cdq
scas
int3
gs
mov
fisttp
out
push
dec
mov
and
cld
xor
test
movs
xchg
ss
imul
int3
stos
inc
mov
movs
into
retf
call
xchg
pop
xor
jb
and
xchg
iret
ret
int3
fwait
cli
add
test
das
mov
mov
push
fcom
mov
ss
jmp
sub
jne
xchg
enter
mov
adc
mov
movs
push
xor
bts
pushf
popf
aad
dec
pop
push
shr
ror
inc
pop
sbb
jbe
sbb
xchg
stos
mov
loopne
inc
(bad)
lock
lahf
cmp
xchg
mov
fwait
mov
frstor
jne
sbb
sbb
lea
js
jmp
aad
cld
push
sbb
inc
ins
fcomp
cdq
hlt
hlt
jecxz
outs
jbe
lds
test
add
imul
ret
cmps
clc
mov
mov
popa
lock
xor
outs
or
pop
xlat
aad
push
ss
and
jecxz
mov
dec
inc
pop
gs
xchg
dec
push
lahf
push
imul
movs
xchg
xchg
mov
ret
sub
fldenv
xchg
mov
test
ins
frstor
mov
int
xor
nop
inc
adc
xchg
bound
popf
push
in
xor
enter
add
ror
out
aam
fcomp
rcr
call
je
dec
xchg
sbb
loop
je
aad
xlat
test
push
cmps
mov
inc
lods
mov
and
stc
lahf
cld
fcomp
pop
adc
jns
sub
adc
push
sub
nop
xlat
mov
in
and
hlt
inc
call
enter
and
loopne
aas
shl
sahf
ins
je
sbb
pop
pop
mov
fstp
push
mov
push
and
outs
scas
xchg
ficom
aam
dec
sub
xchg
mov
test
popa
mov
fistp
inc
cdq
std
push
dec
outs
cmp
dec
ja
scas
mov
dec
xchg
sub
sub
cmps
push
cmps
push
jae
lds
shl
cmp
lea
popa
inc
pop
mov
in
inc
leave
je
mov
pop
daa
cmp
push
sbb
pop
js
call
add
std
lds
pop
popf
dec
popa
aam
add
jae
sub
pusha
inc
or
and
xchg
out
retf
outs
sbb
mov
sbb
imul
test
inc
not
sbb
xor
imul
loopne
and
call
in
lahf
cmp
pop
ret
outs
mov
out
inc
outs
js
stos
cld
out
stos
push
lahf
cwde
dec
ficom
mov
out
data16
dec
push
jmp
pop
and
jnp
loop
pop
ror
pop
sbb
adc
pop
pop
inc
sbb
pop
mov
mov
fs
and
(bad)
fwait
pop
outs
outs
adc
add
dec
cmp
mov
fiadd
fcmovne
loope
adc
cmc
or
xchg
xor
icebp
push
jae
xor
inc
mov
ins
mov
sbb
lods
pop
inc
xor
test
mov
popf
adc
daa
push
cmp
gs
ja
lods
pop
jae
sbb
pop
aas
test
repz
sbb
int
(bad)
cmp
ins
and
dec
dec
js
inc
sbb
sub
xchg
dec
sbb
ss
inc
mov
inc
ja
sub
fwait
cmps
push
xor
out
jb
and
pop
mov
xchg
cmc
dec
xor
ret
push
mov
and
add
nop
popa
pop
adc
push
call
add
dec
(bad)
iret
xor
int3
add
retf
push
add
test
push
std
pop
clc
push
push
imul
or
cmp
popw
ror
adc
out
rcr
xchg
sti
ret
icebp
gs
sbb
pop
and
and
repnz
mov
jmp
sub
lock
cli
mov
push
mov
enter
and
add
cmp
lds
mov
mov
mov
xchg
test
jne
and
and
inc
pusha
icebp
add
ds
inc
leave
sub
adc
bound
jmp
inc
mov
fwait
pop
adc
or
jns
xor
aam
sub
jno
cmp
dec
les
jle
cmp
sbb
sbb
sub
ret
repz
inc
div
stos
shl
aad
dec
sub
jle
out
jle
or
mov
out
popa
pop
ins
adc
loopne
jp
or
xor
ja
sub
and
dec
xlat
fs
mov
jno
cmp
cwde
pop
dec
ror
loope
mov
loopne
pop
cmc
pop
mov
rol
fidivr
nop
push
jne
xchg
jmp
pop
pop
arpl
jle
les
fdiv
repnz
cli
ret
cs
mov
out
loope
xchg
rol
pop
stc
xchg
call
mov
xor
pop
mov
ret
jge
sbb
out
and
and
out
or
push
mov
xor
cdq
inc
bound
test
cmp
lods
enter
dec
mov
or
add
sbb
xor
ins
dec
or
xchg
leave
stc
push
mov
sbb
push
mov
aaa
in
jl
ss
jmp
adc
mov
inc
adc
and
(bad)
pop
or
lea
and
enter
sbb
mov
mov
(bad)
sar
mov
mov
das
clc
clc
add
sub
pop
xor
jecxz
pop
in
sar
adc
dec
loopne
sbb
mov
inc
adc
dec
int
xor
out
sub
fcom
or
iret
and
movs
mov
cmc
sub
push
xchg
pushf
cdq
in
retf
mov
div
aad
mov
fmul
aad
loop
sbb
mov
lds
mov
test
and
mov
push
xlat
cs
fsubr
xor
inc
xchg
clc
pop
mov
mov
pop
inc
and
lds
aam
jecxz
int
lds
in
pop
retf
(bad)
pop
mov
idiv
fbstp
sti
and
(bad)
jp
sub
add
jne
push
nop
ds
shl
popf
mov
fisub
sbb
movs
mov
xor
outs
inc
mov
sbb
sbb
pop
jnp
adc
out
clc
(bad)
mov
aad
jno
mov
lods
adc
scas
jb
into
sbb
inc
mov
and
add
retf
lods
adc
out
bound
dec
sbb
clc
fstp
dec
inc
das
add
retf
adc
(bad)
mov
and
xor
rcr
cmp
sub
cmps
out
out
add
mov
jmp
xor
addr16
dec
sahf
enter
and
sbb
cmp
cld
pushf
xchg
sbb
add
in
dec
and
daa
icebp
gs
mov
mov
(bad)
push
(bad)
retf
movs
adc
imul
sbb
cs
xor
jns
mov
pop
out
xor
shl
scas
mov
retf
cli
mov
cmp
push
mov
loope
cmp
in
lock
lds
adc
mov
(bad)
jmp
call
cli
loop
jb
or
fisubr
mov
mov
out
cmp
icebp
push
in
pop
adc
imul
pop
int3
repnz
mov
sub
add
hlt
mov
sub
sbb
or
inc
mov
lds
(bad)
stc
cmps
into
stc
shr
jp
push
test
adc
movs
(bad)
(bad)
jbe
cmps
cmps
sbb
jle
xchg
enter
inc
push
popa
cmps
retf
outs
push
pop
popa
popf
mov
leave
sub
ins
mov
sub
or
ret
aam
dec
jbe
js
and
inc
mov
push
inc
mov
pusha
cmps
sub
xor
in
rol
pop
je
mov
jne
xor
and
inc
lods
xor
aam
call
inc
fisub
sub
push
pop
sbb
stos
xor
sbb
jge
(bad)
mov
repz
in
pop
icebp
mov
test
mov
in
jae
jno
pop
iret
dec
out
scas
lods
inc
mov
outs
retf
pop
or
fs
pop
lods
cmp
mov
inc
jmp
pushf
or
jb
rol
mov
or
ins
pop
or
ins
pop
test
imul
aam
iret
xor
or
push
xor
lods
sbb
mov
nop
push
lea
push
push
test
pushf
and
xlat
xor
das
mov
mov
jp
lods
lea
jle
xor
repz
mov
mov
pop
sbb
pop
stos
inc
outs
or
fnop
jp
lods
gs
jae
shl
std
popf
stos
sbb
jge
pop
test
mov
xchg
sbb
add
mov
pop
push
daa
int
add
mov
xchg
or
cwde
jecxz
mov
or
fist
test
cmps
push
int
outs
mov
aas
pop
jno
add
adc
out
xchg
sub
sub
jb
rol
fild
jg
jb
push
push
mov
in
push
ror
mov
sub
dec
or
fcmovb
adc
and
ret
cmp
inc
je
icebp
daa
repnz
arpl
test
(bad)
movs
call
movs
movlhps
push
and
jb
adc
jmp
cli
lds
mov
pop
or
sub
inc
add
pop
call
ss
xchg
push
push
aas
rcl
hlt
cwde
(bad)
fldenv
inc
fadd
sub
outs
outs
cmp
push
jmp
inc
xchg
sbb
lea
ja
(bad)
fidivr
fsubp
cwde
add
xchg
(bad)
popf
movs
lahf
lock
add
dec
inc
push
int3
add
popf
pop
inc
fwait
push
pop
jecxz
hlt
neg
push
sub
xor
dec
loope
fnstsw
sub
pop
ins
mov
jg
sub
jp
cmp
jo
pop
stos
jge
cwde
mov
ss
cli
int3
mov
xchg
out
ja
mov
dec
mov
push
popa
sbb
pop
add
aaa
fmul
mov
sar
push
push
xor
jl
adc
les
das
push
mov
das
outs
push
push
add
stc
mov
sti
xchg
jnp
push
cmps
loope
sbb
add
ins
pop
rcr
inc
imul
xlat
jae
mov
rol
leave
push
and
add
in
sub
cmp
pop
sbb
inc
xor
sahf
int3
sbb
in
mov
aaa
mov
xchg
jg
add
jmp
add
je
in
data16
in
adc
cdq
ja
rcl
mov
sub
add
ds
imul
jae
cdq
sub
jo
iret
mov
jno
cmps
inc
rol
xchg
mov
cmp
push
out
xchg
xacquire
mov
adc
cmps
jg
pop
scas
nop
test
or
mov
fimul
mov
add
aam
push
mov
pop
push
icebp
dec
aas
cld
xchg
out
aas
test
pop
daa
arpl
(bad)
xchg
lea
shl
mov
sbb
jp
jae
mov
popa
adc
fsubr
and
dec
lods
inc
inc
push
xor
pop
add
xor
and
pop
das
xor
(bad)
push
(bad)
jmp
arpl
xchg
rcl
dec
mov
add
mul
call
add
jmp
aas
jmp
enter
pop
lods
mov
inc
and
or
fxch
add
add
inc
mov
and
pop
(bad)
adc
popf
cwde
add
xor
mov
loope
outs
add
repz
stc
cmp
fcom
mov
inc
inc
jmp
xchg
ins
jl
arpl
xchg
pand
imul
cwde
sbb
scas
add
add
mov
mov
mov
jmp
enter
sub
dec
aad
sub
movs
shr
mov
scas
dec
shl
(bad)
popf
xor
pop
fwait
lahf
mov
ret
lahf
ds
dec
lea
or
aam
or
das
mov
(bad)
lea
fild
loope
loopne
inc
cmc
add
adc
in
inc
adc
gs
mov
cli
push
cmp
loop
sub
or
jb
loop
add
xor
dec
lods
mov
(bad)
sub
out
mov
(bad)
xchg
jb
test
fstp
mov
xor
rcr
pop
lock
adc
push
jmp
jb
cmp
in
push
jl
sbb
sbb
out
pushf
loope
fiadd
jl
repnz
mov
fwait
std
outs
stos
hlt
aas
push
mov
inc
cdq
adc
aaa
jl
jno
push
jl
loope
mov
push
xchg
jne
add
shl
das
mov
jg
mov
inc
add
xchg
sbb
lock
(bad)
sar
stos
xchg
hlt
cmp
and
pop
mov
out
dec
icebp
pop
lahf
bound
xchg
ja
push
leave
inc
mov
or
jecxz
push
pop
lock
add
arpl
jbe
xchg
xchg
sbb
lock
lock
cwde
retf
jl
ficomp
mov
aaa
lds
sub
pop
and
enter
mov
scas
jae
call
sub
fist
cdq
std
push
pop
mov
stc
xchg
or
sbb
dec
mov
retf
sub
mov
cwde
jo
fstp
mov
dec
jmp
jns
arpl
out
cdq
dec
scas
nop
not
xchg
jns
imul
gs
ss
les
cmp
leave
pop
push
test
clc
jg
jbe
scas
inc
sub
sbb
adc
repnz
inc
std
movs
mov
inc
je
sub
gs
mov
sbb
mov
enter
fistp
add
mov
sub
addr16
jge
xor
or
jae
mov
adc
adc
or
and
cmp
enter
fst
pushf
xchg
fidiv
add
inc
jb
xor
adc
lahf
mov
ret
js
ret
and
out
ret
jne
sub
ins
cdq
es
adc
pop
daa
add
and
mov
push
pop
push
jno
dec
daa
jno
push
and
rol
mov
mov
and
jp
adc
sbb
or
fstp
imul
jl
and
inc
jne
fnstenv
mov
cs
add
test
fmul
dec
or
sbb
stc
fistp
and
mov
xchg
sbb
push
mov
or
(bad)
adc
movs
cmc
jmp
in
scas
loope
adc
in
sub
add
sti
mov
cmp
and
je
ss
xchg
cmc
and
repnz
iret
push
popa
pop
lds
dec
jo
sub
movs
lds
mul
mov
hlt
jge
std
pop
mov
test
mov
push
add
test
int
xchg
movs
nop
fbld
sbb
pusha
outs
and
xchg
sbb
push
fwait
mov
inc
push
dec
sub
dec
call
mov
(bad)
sbb
(bad)
mov
xchg
cli
pop
mov
xchg
fcomip
call
sbb
adc
hlt
in
pop
pop
mov
icebp
jg
push
clc
jno
pop
scas
sti
lea
add
xlat
dec
sbb
adc
idiv
push
jle
pusha
outs
sbb
retf
jmp
fwait
sbb
mov
test
push
ins
cld
ds
fdivr
dec
xchg
ds
push
inc
pcmpeqw
mov
jo
imul
add
bound
popa
ins
mov
iret
push
mov
jg
adc
push
inc
or
sti
adc
hlt
cli
inc
ins
lods
mov
pop
jo
or
dec
jle
rcl
adc
sub
imul
jp
mov
pop
cmp
lahf
aam
mov
push
jae
outs
adc
cmp
xchg
xchg
sbb
mov
pop
sbb
aaa
inc
mov
cmp
inc
sub
mov
and
add
mov
lock
or
mov
bound
xchg
add
neg
mov
nop
rol
mov
aam
rcl
mov
mov
(bad)
push
or
icebp
mov
and
stc
out
(bad)
(bad)
pushf
sets
aam
(bad)
mov
sahf
(bad)
enter
xchg
cmp
jb
jl
dec
jecxz
sub
xchg
out
cmps
sub
call
xchg
mov
xchg
retf
in
mov
repnz
pop
sub
cmp
cmp
pop
jno
scas
retf
das
frstor
mov
test
ror
mov
jno
cmp
ins
call
jae
mov
imul
(bad)
dec
push
(bad)
inc
and
mov
jb
popf
mov
or
mov
(bad)
xor
cmps
aam
mov
dec
push
adc
fxch
ds
mov
and
mov
mov
cmp
je
jg
in
stos
sbb
mov
mov
mov
fwait
repnz
xchg
aas
fsubr
out
(bad)
std
sub
mov
xchg
test
jle
ror
in
push
jge
mov
idiv
mov
fcomp
sbb
dec
mov
cmps
and
pop
clc
outs
jno
jbe
inc
imul
push
clc
cli
add
fidiv
nop
mov
fsub
sbb
mov
jbe
push
movs
add
adc
mov
movs
pop
sbb
mov
popa
push
cmp
aaa
mov
rol
sbb
in
in
mov
and
movs
xchg
fcomi
inc
push
cmps
push
inc
sub
mov
xchg
fwait
rol
int
cmp
jno
addr16
leave
fmul
push
jl
adc
out
xchg
and
inc
push
pop
js
sti
arpl
les
ret
or
loop
enter
leave
sub
out
cdq
imul
outs
xchg
mov
aad
mov
dec
loopne
gs
adc
fcomi
ds
shr
movs
mov
push
add
mul
rcl
pop
sub
mov
jmp
sbb
jmp
fsubr
push
jbe
and
jnp
mov
adc
nop
ds
adc
mov
fsubr
xor
pop
xchg
out
adc
adc
es
daa
je
and
xor
ds
inc
xor
adc
dec
jmp
data16
sbb
or
or
jno
jmp
retf
pop
outs
mov
pop
jmp
std
or
cmp
aaa
imul
push
sub
ins
sub
sub
ja
sub
inc
xchg
mov
push
call
idiv
mov
xor
inc
out
dec
aaa
jg
es
push
sub
mov
mov
adc
push
clc
js
cmp
push
es
aad
lea
adc
or
jne
jge
cli
and
sbb
in
pop
xor
pushw
xor
cmp
or
or
or
or
rol
and
nop
in
sub
(bad)
arpl
jmp
xor
sub
add
ins
dec
std
sbb
xor
popa
clc
pop
sbb
pop
ins
mov
pop
call
rcl
in
mov
ins
adc
push
out
clc
cmp
dec
push
pusha
inc
adc
nop
fwait
shr
(bad)
movs
nop
aam
push
xor
xchg
mov
iret
daa
mov
pop
lahf
ror
inc
int3
fimul
fild
out
(bad)
xor
ja
pop
cmps
adc
je
cbw
jo
rcr
add
sub
jbe
xor
arpl
push
cmps
lea
dec
test
add
(bad)
movs
push
xlat
rol
in
(bad)
rcr
push
push
xchg
imul
pop
adc
pop
adc
cmp
mov
mov
cwde
mov
test
mov
aaa
out
std
arpl
cmps
mov
movs
sub
cs
fwait
mov
jmp
neg
xchg
jecxz
fisttp
data16
retf
jae
scas
std
adc
sub
mov
push
mov
lods
mov
lea
sbb
loope
cmps
xor
mov
out
mov
mov
mov
or
inc
and
fwait
leave
pushf
jecxz
push
stos
aam
inc
inc
test
(bad)
push
fisub
jne
ret
xchg
push
mov
xchg
fdivr
std
cmp
push
js
icebp
sub
mov
or
iret
push
jmp
fs
cmps
stos
xlat
and
inc
cmp
(bad)
sub
jns
rcr
call
pusha
sbb
jecxz
xor
jecxz
lock
or
popf
out
aam
ret
mov
retf
ins
test
ret
mov
xchg
xor
push
mov
push
adc
retf
cmc
js
fbstp
push
mov
cmc
cld
sub
lds
fnstcw
xor
push
jmp
repnz
ret
xchg
jne
inc
repz
cld
gs
jns
fisubr
jl
push
jmp
invd
jae
leave
(bad)
jl
mov
cmps
nop
mov
rol
pop
adc
rcl
aas
jp
out
xchg
and
data16
ja
jge
repz
or
xor
jp
leave
inc
sub
inc
mov
adc
(bad)
adc
pop
ret
mov
pop
(bad)
loop
rcl
mov
ror
or
arpl
fincstp
adc
adc
clc
push
std
xchg
in
xchg
call
cmc
adc
(bad)
dec
cmp
jmp
cld
cwde
js
js
mov
push
jge
shr
iret
dec
cmp
push
(bad)
cdq
mov
ja
push
lods
add
sub
and
fucomip
loopne
xor
fiadd
ss
ret
add
outs
jns
iret
push
test
xchg
mov
je
fwait
sbb
push
dec
outs
sbb
pushf
std
pop
jb
xchg
jmp
xchg
xor
adc
and
iret
daa
cmp
cli
loopne
and
mov
imul
mov
jmp
in
mov
test
xchg
add
push
data16
aas
mov
xchg
dec
or
jnp
ja
cmp
cmps
xor
mov
popa
popa
and
daa
adc
push
or
mov
lods
fidiv
scas
leave
cmp
inc
push
jae
out
xlat
pop
sub
xchg
mov
adc
push
test
xor
mov
xchg
cmp
adc
mov
and
add
scas
les
jmp
call
push
adc
and
adc
sub
push
inc
dec
pusha
pop
pop
in
outs
xchg
add
gs
xchg
std
pop
test
popa
iret
inc
(bad)
int
(bad)
mov
retf
xor
adc
call
scas
cld
cmps
popa
push
(bad)
jp
out
xor
and
ja
(bad)
pop
and
xor
loope
and
hlt
adc
sbb
dec
lds
out
test
sub
push
mov
mov
sar
sub
push
cmp
in
arpl
push
jecxz
xor
adc
xchg
inc
jecxz
or
cmp
push
dec
add
add
adc
push
retf
pop
mov
mov
inc
xchg
(bad)
dec
js
mov
fsubr
std
repnz
daa
jmp
icebp
movs
icebp
pushf
and
test
mov
xchg
loope
ret
test
mov
inc
push
sub
dec
hlt
sbb
neg
in
fnstcw
sbb
(bad)
mov
je
out
push
xlat
and
dec
add
fdiv
inc
inc
mov
xlat
retf
in
ficom
call
pop
adc
sbb
std
hlt
in
lea
daa
cli
std
jbe
jmp
mov
ret
mov
and
repnz
inc
adc
cld
or
lea
cmc
pop
inc
dec
pop
and
sub
jo
cmp
stos
sbb
or
jmp
sub
jmp
mov
(bad)
repnz
(bad)
adc
ss
push
int
aad
pop
jge
out
and
mov
imul
mov
fcomp
adc
mov
mov
jmp
sbb
movs
xor
fcmovne
cmp
pushf
ret
das
add
ins
fst
add
pop
jae
jge
test
mov
jecxz
adc
mov
ror
or
test
pop
mov
(bad)
jbe
pop
jmp
stos
mov
pop
inc
and
cmp
movs
lods
sub
and
movs
pop
add
(bad)
push
popa
xlat
sbb
icebp
push
jae
fild
mov
jne
dec
push
(bad)
push
pop
xchg
popf
pop
inc
retf
sbb
mov
mov
fsubr
inc
std
jg
in
popf
mov
pop
xchg
push
inc
out
gs
mov
aas
(bad)
(bad)
call
pop
xchg
icebp
and
pop
or
mov
or
retf
sub
clc
xlat
adc
push
cmp
or
call
xor
adc
and
mov
test
mov
xor
push
pop
(bad)
ror
adc
lahf
pop
push
test
ins
push
in
(bad)
xor
fdivr
jg
xchg
dec
sar
shl
arpl
cld
add
lds
(bad)
jo
mov
inc
and
outs
mov
jmp
xchg
in
(bad)
sbb
ins
jmp
and
test
sbb
pop
mov
and
mov
std
inc
ror
push
es
mov
cmp
xor
jns
sbb
pop
or
cmp
call
sub
mov
add
in
sub
xor
lahf
jecxz
inc
cli
ds
hlt
nop
jge
(bad)
out
lods
fldcw
xor
fld
add
out
lock
and
ret
push
and
push
add
jb
aad
adc
sub
stos
addr16
mov
and
(bad)
jle
pop
cmps
cmp
movs
mov
call
mov
nop
push
fst
pop
xchg
out
mov
adc
aaa
fimul
mov
mov
psubd
popa
test
enter
jg
xor
dec
loop
push
call
icebp
push
leave
inc
ss
xor
and
inc
inc
mov
jge
and
sbb
cmps
cmps
ltr
jbe
or
aaa
stos
inc
xchg
aam
(bad)
arpl
movs
inc
pusha
sbb
jae
cmp
xchg
push
cld
(bad)
fs
pop
push
scas
pop
mov
std
adc
mov
(bad)
nop
inc
lds
push
arpl
(bad)
test
lock
push
daa
or
dec
sar
aas
mov
dec
push
add
add
add
loopne
es
pop
and
sbb
pop
add
jmp
cdq
addr16
adc
mov
into
xchg
adc
xchg
cmps
fwait
je
popa
(bad)
cwde
addr16
pop
stos
adc
mov
cmp
jge
and
inc
jmp
mov
(bad)
(bad)
dec
pop
dec
sub
mov
outs
mov
push
xchg
leave
test
in
dec
ret
shl
fs
pusha
bound
jmp
inc
pop
xlat
cmps
movs
(bad)
fdiv
inc
fs
sub
nop
push
mov
dec
jmp
xlat
xchg
shl
fisubr
add
cmc
repz
scas
dec
mov
adc
cmps
inc
test
(bad)
pop
mov
test
popa
shl
addr16
inc
repz
rol
(bad)
movs
add
aam
xchg
pop
scas
call
repz
push
inc
pop
mov
adc
clc
jns
shr
cmp
and
(bad)
jne
pop
ds
cmps
push
ret
and
fwait
mov
in
fs
in
call
out
arpl
test
jl
sbb
out
(bad)
push
or
mov
mov
jmp
test
sbb
ret
cmp
sub
(bad)
enter
test
pop
in
pop
mov
xor
ficom
xchg
and
es
xchg
into
dec
mov
pop
test
mov
or
sbb
inc
neg
popf
aas
add
in
test
mov
rcr
inc
je
sbb
push
inc
push
into
and
inc
mov
ror
and
leave
adc
xor
dec
cmp
in
call
sbb
ja
sar
shr
jp
dec
cmp
push
pop
lea
outs
rcl
xchg
xor
repz
inc
out
sbb
out
lods
mov
test
fsubr
mov
inc
dec
and
jecxz
ret
nop
or
or
and
out
xchg
out
jno
lds
in
pusha
mov
push
push
ja
enter
cmp
sbb
lods
xchg
bound
lods
adc
int
add
js
inc
jge
jb
call
mov
pop
mov
stc
jnp
aam
dec
mov
push
push
not
xlat
shl
xlat
retf
and
fnsave
out
daa
into
inc
lea
or
pop
xor
cld
pop
fucomp
repnz
(bad)
push
cmp
dec
shl
gs
xchg
push
add
xor
out
aam
xor
sahf
xor
jle
mov
jb
pop
std
div
sub
and
aad
ins
rol
mov
stos
pop
cmp
out
fwait
sti
popa
add
pop
fs
inc
sub
leave
loop
mov
dec
or
mov
jmp
mov
popa
mov
adc
add
outs
popa
or
mov
and
leave
and
or
xchg
dec
ret
cld
sbb
cmp
rcr
and
cmp
popf
imul
in
out
push
repnz
inc
inc
mov
and
movs
add
pop
clc
movs
shl
shr
pop
sbb
sahf
outs
xlat
push
inc
inc
imul
xchg
adc
cdq
movs
jae
jge
jmp
scas
cld
mov
and
or
cwde
mov
push
repnz
aad
ror
in
inc
and
call
mov
iret
dec
mov
push
push
fsub
jmp
push
sub
rcl
sti
sbb
dec
mov
movs
push
in
in
jbe
and
js
pop
pop
adc
or
out
in
cmp
repnz
mov
mov
cvtps2pi
sti
stc
lods
ja
scas
sub
rcl
adc
adc
cld
out
xor
into
sti
push
stos
cmp
sub
jecxz
jmp
fimul
inc
mov
imul
pop
int3
fisttp
xor
shr
mov
adc
fwait
mov
(bad)
add
jmp
lds
xchg
retf
xchg
pop
retf
lds
movs
pop
test
int
outs
push
dec
pop
xor
pop
mov
mov
dec
dec
push
cmp
bound
cmc
gs
cmp
mov
loopne
xchg
and
int3
mov
jge
mov
ret
jbe
in
fisubr
jle
or
or
fstp
sbb
(bad)
inc
pushf
sti
xchg
sbb
daa
xor
ins
cmps
mov
lea
(bad)
(bad)
jle
sub
test
mov
aad
xor
shl
inc
cmp
imul
and
jbe
je
sbb
cmp
aad
xchg
cmp
inc
add
dec
add
add
push
imul
jecxz
out
arpl
xor
adc
push
cs
xchg
(bad)
mov
lea
mov
mov
cld
adc
push
out
ds
or
ror
pop
mov
xor
dec
inc
fistp
xchg
xlat
ins
mov
std
(bad)
xlat
jl
push
pop
xchg
cwde
push
jo
retf
inc
jne
es
mov
rcr
inc
cwde
push
inc
jae
pop
int3
js
xchg
mov
add
jne
ss
aad
call
inc
cmp
scas
ins
les
mov
adc
fisub
inc
movs
jecxz
jmp
pop
cmp
inc
pop
rcr
pop
int3
dec
jle
cmp
fwait
scas
enter
mov
std
outs
loopne
pop
inc
cmp
cmc
jb
mov
jne
dec
fwait
add
mov
pusha
mov
addr16
pop
adc
add
sahf
rcr
add
scas
sub
(bad)
jecxz
call
fld
jns
out
pusha
in
les
mov
(bad)
aas
loop
inc
mov
inc
sub
push
sub
stos
push
fstp
int
pop
mov
test
ds
cmp
jmp
sbb
dec
int
push
fnstcw
daa
cmps
dec
mov
xor
adc
pop
mov
stos
sbb
mov
push
xchg
dec
mov
mov
pushf
sub
xchg
dec
xchg
pop
xchg
rcl
or
jns
cmps
xchg
rol
ret
es
jno
dec
mov
pusha
cmp
jmp
or
mov
fimul
mov
stos
clc
jbe
movs
or
popf
sub
aad
call
loope
cmps
sbb
and
aas
lahf
or
adc
xor
mov
xor
imul
test
add
inc
outs
je
mov
xchg
popf
mov
outs
xor
aaa
mov
xchg
call
ins
aas
mov
inc
lea
cmps
imul
loopne
stc
(bad)
or
sub
jge
idiv
shl
daa
out
xor
lods
(bad)
cld
xchg
sbb
loopne
ror
inc
mov
jns
in
out
fsubp
out
pop
inc
mov
cmp
js
xor
sub
mov
cmc
aas
jbe
stc
or
cmp
pop
gs
ror
mov
cmp
cld
pusha
xchg
pop
xor
and
mov
and
sbb
jmp
mov
icebp
pop
shr
add
stc
sbb
jecxz
std
pop
dec
adc
xchg
mov
inc
mov
in
adc
pusha
mov
outs
or
inc
sbb
cld
push
push
adc
lock
jbe
in
lods
adc
and
mov
ror
cld
sahf
sub
gs
into
dec
movs
ds
add
lods
clc
pushf
mov
mov
add
adc
jbe
lds
adc
cmp
sbb
jae
mov
pop
pushf
push
jbe
div
dec
(bad)
fadd
dec
mov
sti
loope
jle
lods
test
in
imul
pop
pop
cmp
scas
mov
cmps
retf
or
sbb
imul
scas
jl
pop
push
and
(bad)
(bad)
call
out
cmc
js
aaa
mov
pop
(bad)
in
or
jp
pop
jle
cmp
mov
mov
in
les
cmp
fsubr
pop
out
mov
retf
sar
cmp
sbb
sub
mov
xchg
cmp
push
aam
bound
jb
mul
(bad)
lds
jno
xchg
and
push
outs
aaa
jno
fidiv
in
jecxz
adc
xchg
pop
jecxz
adc
cmps
stc
les
jmp
dec
xor
and
outs
(bad)
stos
cmp
clc
call
sub
fnsave
adc
push
in
sahf
lea
dec
loope
test
fimul
xlat
mov
push
pop
(bad)
jge
and
adc
lds
cwde
mov
or
out
ss
jmp
or
popf
mov
ins
and
pop
inc
adc
and
or
add
cs
push
pop
mov
idiv
pop
and
dec
bound
mov
in
xchg
jg
push
add
fild
pop
sbb
or
dec
popa
(bad)
imul
pop
sahf
or
movs
pextrw
mov
mov
cld
clc
mov
dec
xchg
xchg
add
idiv
xchg
jo
repnz
mov
stos
sub
xor
addr16
mov
push
pop
xchg
xchg
in
fild
cmps
cmp
xlat
ss
xchg
inc
xchg
rcr
out
test
iret
sub
daa
add
lahf
aaa
mov
inc
fst
mov
cmp
daa
jmp
cmp
adc
bound
push
xor
lock
int3
mov
pusha
mov
daa
or
fld
push
or
cld
pop
pop
mov
pop
jo
ret
sbb
lahf
aad
cld
rcl
fcom
cmp
sub
(bad)
mov
xor
mov
push
and
add
add
inc
xor
jle
imul
sar
adc
mov
int3
push
test
cmp
es
je
cmp
into
(bad)
in
dec
cld
or
mov
ror
sub
jge
sub
test
ins
lock
xchg
jno
mov
mov
mov
std
push
mov
inc
sbb
nop
mov
mov
(bad)
fbstp
mov
movs
sbb
imul
out
mul
cli
xor
sub
test
sub
cwde
mov
mov
(bad)
sbb
daa
mov
ss
fisub
idiv
mov
xchg
push
test
jns
dec
out
rcl
cmp
imul
sub
sub
(bad)
mov
lods
cmp
pop
aaa
lahf
enter
sub
mov
loop
dec
xor
pop
jle
mov
fidiv
jae
push
dec
jg
(bad)
addr16
dec
or
add
bound
pop
lahf
(bad)
loop
scas
scas
ret
dec
outs
out
jno
lahf
inc
jne
fsubr
pop
sbb
imul
cs
push
jecxz
rcr
ret
imul
arpl
push
jg
outs
rcl
sti
into
mov
in
adc
push
jo
loop
movs
sbb
ret
xor
sbb
addr16
add
sub
xchg
xor
xlat
xchg
js
cmps
out
adc
adc
add
pop
mov
sqrtps
outs
(bad)
push
std
mov
pop
mul
sub
adc
jo
in
or
retf
stos
push
out
push
adc
aad
test
fsub
or
sub
cmp
and
pushf
mov
cwde
add
mov
enter
jg
jmp
mov
push
sbb
and
dec
icebp
popf
int3
push
leave
mov
pop
sub
mov
(bad)
push
or
ficom
movs
pop
jmp
mov
push
pop
mov
inc
cmps
fwait
fs
int3
add
cdq
xor
sar
inc
inc
sub
sub
fadd
push
mov
repnz
sbb
pop
fs
sbb
pop
int3
inc
pop
dec
xor
jnp
ss
xchg
imul
lea
dec
loop
fwait
sub
xchg
mov
inc
sub
and
xor
push
arpl
leave
and
inc
cmps
fmul
inc
xchg
xor
sbb
add
jmp
sbb
cwde
loopne
mov
iret
fimul
add
xor
dec
cmp
pusha
js
adc
movs
mov
fidiv
test
cmp
out
push
(bad)
loopne
sbb
jp
sbb
dec
hlt
add
and
jne
repz
fnstcw
push
sub
inc
and
push
or
out
popa
lock
jge
or
push
cmp
lock
cs
retf
fst
sbb
enter
sbb
xchg
mov
cmp
mov
or
movs
xor
aad
cld
fs
dec
ins
imul
sub
in
out
shl
cmp
imul
in
jb
and
fwait
out
lods
std
jnp
fild
inc
mov
add
in
adc
add
xor
xchg
pop
jns
nop
sbb
sbb
lods
add
pop
adc
push
ret
test
inc
xchg
jl
in
mov
add
adc
mov
ss
nop
sbb
push
lahf
fdivr
xor
xchg
jnp
adc
mov
or
inc
pusha
scas
jmp
sub
rol
pop
daa
pop
fnstenv
adc
shr
loop
(bad)
lea
ret
leave
call
pushf
loopne
(bad)
sti
lods
in
sbb
mov
ins
mov
mov
ds
adc
stos
das
icebp
push
inc
pop
sbb
ret
jae
cmp
pop
int
jno
das
jle
add
cdq
jnp
lods
popf
pop
stc
pop
sub
dec
outs
ret
pusha
ja
mov
fwait
push
lods
sbb
lahf
fwait
mov
push
sar
repz
ret
and
fstp
jmp
in
lds
out
jo
adc
sub
mov
adc
lahf
jmp
mov
nop
scas
out
mov
fs
adc
xchg
sbb
stc
pop
fisubr
fdivr
inc
cmp
lock
mov
or
push
ins
in
push
pushf
inc
cmp
loopne
sub
adc
and
adc
into
xchg
xchg
xor
stc
gs
loope
push
mov
cmp
(bad)
fld
mov
xor
(bad)
push
add
std
(bad)
xchg
push
mov
int
fsubr
and
icebp
push
mov
xchg
mov
(bad)
ins
nop
jp
push
outs
jge
out
pushf
add
adc
push
cmps
add
int3
fimul
jmp
jg
push
jne
retf
pop
or
sub
jmp
sub
mov
mov
je
test
inc
loopne
in
xchg
loope
arpl
mov
xchg
(bad)
pop
mov
int
adc
(bad)
loope
add
cld
push
inc
in
test
aaa
pusha
mov
addr16
in
fsub
pop
sbb
mov
mov
jnp
dec
dec
sub
mov
(bad)
jmp
ror
add
cli
fisubr
call
stos
outs
arpl
cli
(bad)
xchg
jmp
mov
ror
inc
(bad)
add
test
xor
(bad)
fld
out
mov
cmp
mov
test
cmc
mov
and
dec
pop
sahf
jb
push
frstpm(287
or
dec
mov
fyl2xp1
icebp
stos
iret
std
iret
mov
bound
sbb
pop
fistp
cs
ins
sbb
es
fcomp
jo
out
pop
sbb
scas
mov
push
mov
add
(bad)
adc
shr
mov
push
pop
sub
pop
sbb
push
cld
repnz
(bad)
push
mov
or
pop
nop
out
or
movs
adc
pusha
cwde
sub
inc
dec
add
or
mov
inc
and
in
and
movs
ret
adc
fidiv
sub
ins
adc
adc
pop
push
xchg
mov
retf
loope
mov
mov
inc
push
pop
add
(bad)
movs
sbb
or
mov
in
push
lahf
dec
fisub
or
popa
mov
in
or
(bad)
xchg
and
das
mov
cmp
sub
and
ja
rcr
mov
dec
fnstsw
mov
idiv
in
mov
mov
cmc
enter
sub
out
sahf
add
add
cld
les
(bad)
push
aas
mov
xchg
cli
and
pusha
jmp
aam
into
call
or
mov
daa
pop
mov
xor
sbb
lock
pop
rcr
pop
jp
int3
movs
loope
test
mov
(bad)
adc
repz
jmp
mov
push
dec
dec
fistp
sub
sbb
cmp
mov
out
jg
jbe
cmps
into
jl
popf
mov
cmp
iret
inc
fcmovnbe
mov
jp
sbb
mov
movs
mov
adc
lods
stc
xchg
test
std
pop
dec
mov
cmps
dec
icebp
fucomi
mov
jg
cmp
enter
arpl
and
mov
test
xchg
outs
dec
dec
fs
scas
(bad)
sahf
fistp
jnp
sbb
retf
icebp
imul
fiadd
not
mov
push
mov
pop
sub
call
ret
int
cs
xchg
test
retf
mov
popf
fsub
xchg
cmc
test
jnp
je
clc
sub
(bad)
mov
mov
mov
int3
ins
mov
in
mov
jl
adc
cmps
jne
adc
ret
jl
xchg
pop
aad
sbb
cmp
outs
push
push
ret
mov
aad
sub
push
add
xor
enter
in
mov
sbb
cmp
xchg
aam
sahf
xlat
xchg
fild
mov
xor
or
repnz
fwait
or
adc
jb
fdivrp
cmp
scas
fisttp
push
pop
push
pop
ficom
dec
dec
push
std
out
out
inc
cmp
mov
gs
test
mov
jno
stc
ins
lods
fld
or
pushf
repnz
adc
es
add
aad
test
or
xor
sbb
mov
fadd
nop
(bad)
clc
out
add
cdq
dec
push
dec
aam
lods
adc
stc
ror
mov
mov
pop
add
rcl
mov
cmp
push
outs
sbb
inc
inc
inc
jmp
clc
mov
hlt
mov
pop
jg
pop
cmps
sub
scas
inc
fidivr
sar
sbb
ficomp
imul
pop
repnz
mov
loop
outs
jp
bound
stos
(bad)
mov
sub
clc
adc
inc
mov
push
pop
in
cmps
xor
aad
daa
out
jl
mov
icebp
mov
or
cmp
and
sbb
popf
nop
pop
in
pop
pop
inc
in
mov
loope
imul
pop
leave
pop
inc
dec
in
inc
in
push
or
push
push
mov
nop
xor
fiadd
(bad)
sbb
stos
cmp
loop
jno
push
mov
push
in
aaa
rcr
js
lea
adc
push
icebp
jle
test
dec
push
xor
inc
cmps
cvttps2pi
mov
mov
cmp
xor
add
pop
leave
emms
push
pop
sahf
push
mov
cmp
stos
dec
pop
fidiv
jbe
dec
out
jmp
adc
(bad)
lods
jmp
fst
arpl
outs
int3
or
and
add
add
or
jp
dec
xchg
(bad)
cmp
xchg
mov
add
inc
adc
retf
dec
out
and
or
add
enter
ss
pop
sub
mov
sbb
outs
dec
ja
enter
stos
test
jbe
loopne
mov
movs
dec
sbb
lds
fisttp
out
dec
lods
(bad)
test
out
jp
inc
int
std
sbb
fisttp
shl
push
mov
dec
xor
lds
pop
push
aam
ret
fild
xchg
and
cld
cmp
loop
(bad)
xor
cmps
ret
pop
cmp
sbb
jo
enter
dec
lea
mov
mov
xchg
xor
xchg
inc
es
add
cmp
lock
push
mov
es
es
out
mov
movs
lods
mov
fmul
jb
cmc
movs
lds
sbb
cmp
pop
popf
stos
retf
dec
mov
loope
test
add
aaa
adc
add
retf
jle
xor
test
sbb
jo
movs
mov
cli
xor
mov
mov
pop
cmps
dec
fistp
imul
out
mov
enter
mov
or
jecxz
mov
xchg
cmp
add
sub
mov
add
fidiv
sub
mov
add
fwait
add
push
fimul
jl
or
xor
in
lahf
mov
test
cmp
adc
data16
jb
xor
pop
movs
pop
add
inc
ffree
or
lods
out
sbb
push
cdq
(bad)
push
sub
jae
sbb
mov
or
aam
ins
lods
aam
xor
es
or
mov
and
jp
adc
xchg
push
xchg
movs
iret
das
inc
xlat
out
scas
fwait
retf
cmps
sete
push
test
push
fisubr
sti
js
shr
out
pop
stc
nop
test
clc
cmovle
pop
fdivr
lds
xchg
and
cmc
repnz
ror
mov
cmp
in
ficom
stos
rcl
movs
xor
imul
ret
inc
jno
icebp
ret
jle
jle
adc
cmp
adc
cmp
loopne
add
fcom
ss
inc
daa
or
adc
fcom
(bad)
jmp
xlat
inc
int
sbb
add
xchg
movs
pop
jne
sub
xor
mov
mov
mov
mov
dec
stc
push
and
std
mul
fidiv
xchg
loope
push
cmps
test
dec
jo
jnp
gs
in
test
push
pop
loop
fbstp
(bad)
lods
je
adc
cs
outs
mov
dec
jl
adc
loope
(bad)
and
and
fnsave
push
mov
call
loope
or
jmp
mov
test
and
push
not
xchg
push
adc
inc
mov
ret
hlt
cs
add
outs
popa
and
mov
ins
dec
inc
outs
test
(bad)
xor
xchg
sub
jle
jmp
test
mov
ja
(bad)
in
cmc
ins
inc
push
mov
mov
idiv
adc
stc
mov
or
xchg
xchg
mov
stos
jmp
jb
cmp
mov
push
xchg
ins
add
inc
or
mov
cwde
adc
bound
mov
enter
test
loope
sub
add
outs
sbb
loopne
fisubr
stos
pusha
lahf
inc
loop
jmp
fcom
inc
and
ins
add
mov
shl
iret
scas
sub
test
daa
or
daa
cmps
or
cmps
fcmove
call
call
mov
out
fild
jp
in
in
push
add
add
and
lea
jp
mov
loopne
lds
outs
pop
sbb
jnp
or
mov
mov
mov
ret
test
icebp
(bad)
fsubrp
cwde
xchg
jmp
push
test
dec
int3
jp
and
stos
push
stos
sbb
fsubr
mov
scas
jmp
and
cmp
xchg
xchg
add
iret
xor
into
es
outs
fnstsw
jns
add
into
jno
ret
dec
outs
xor
(bad)
cmp
sahf
xor
fs
fstp
retf
jne
lods
dec
daa
xor
imul
and
mov
outs
mov
ss
add
fwait
push
dec
mov
out
lods
jne
stos
jne
mov
scas
adc
enter
scas
xor
and
jmp
add
push
aam
mov
das
add
fwait
sub
in
outs
addr16
div
and
out
movs
loopne
clc
mov
push
mov
mov
imul
cs
sbb
inc
ins
adc
and
sbb
jle
sbb
cs
push
xadd
add
stc
adc
cs
int3
jb
inc
inc
outs
addr16
mov
sbb
xchg
test
mov
mov
push
or
adc
mov
ret
outs
dec
test
xor
mov
cmc
pop
push
sub
lahf
lods
jbe
jnp
dec
jg
jg
mov
movs
call
push
fs
push
js
and
mov
lods
cmp
inc
cmp
mov
add
adc
sbb
mov
fstp
xor
(bad)
in
ins
icebp
(bad)
sti
nop
cmps
cdq
in
js
cmp
cld
sub
das
cmp
aam
pop
or
aad
push
inc
pop
sub
jb
and
adc
shl
(bad)
test
int
cwde
dec
or
shr
mov
pop
lea
mov
adc
enter
sub
jg
or
mov
(bad)
mov
jne
pop
sbb
sbb
add
mov
xchg
pop
cld
mov
fs
add
adc
sbb
pop
js
repz
cdq
xor
mov
loope
cmp
add
jmp
dec
test
in
add
or
cld
loop
(bad)
dec
xor
leave
movs
sbb
push
(bad)
call
ret
pop
and
js
xor
or
adc
or
divps
icebp
ret
add
push
arpl
pop
mov
mov
sbb
xor
clc
mov
adc
dec
and
jbe
dec
(bad)
imul
mov
inc
xor
out
jge
fisubr
pop
stos
int
in
inc
cli
inc
pop
jno
inc
inc
es
pop
push
(bad)
sar
push
adc
jp
add
jl
mov
push
mov
in
and
xchg
rol
and
call
adc
test
pusha
inc
and
and
fbld
or
aam
push
lock
mov
mov
clc
mov
or
jg
icebp
(bad)
xor
retf
mov
push
(bad)
test
mov
ins
mov
cs
inc
cs
mov
or
loope
cmp
jb
outs
outs
movs
callw
js
pusha
stos
inc
inc
aaa
dec
rcl
push
cmp
push
or
xchg
out
cmc
add
or
and
test
push
outs
mov
cmp
push
inc
lods
retf
xchg
jo
fisub
push
imul
jo
hlt
push
jnp
mov
jmp
cmp
and
push
or
scas
out
fild
cmp
(bad)
(bad)
aas
inc
or
pop
inc
or
add
xor
call
ficomp
retf
outs
xor
pop
and
icebp
shl
daa
fcmovb
push
mov
daa
push
xchg
push
dec
sub
cmps
push
(bad)
lea
ds
ret
push
pop
cmp
(bad)
mov
jns
jo
dec
fs
fadd
pushf
sub
adc
sub
or
sbb
xchg
inc
jp
call
pop
retf
ins
cwde
rcl
mov
or
or
(bad)
jp
aaa
mov
retf
js
add
cmp
lods
popa
cmp
lds
and
push
iret
pop
lock
mov
jl
adc
jmp
adc
cmp
mov
outs
fcom
or
dec
jle
adc
dec
or
xor
and
je
pop
pusha
aas
inc
mov
push
js
retf
add
jecxz
fild
pop
cmp
loop
out
cld
adc
jnp
jp
or
loope
test
clc
out
(bad)
idiv
test
mov
xbegin
fnstsw
iret
cs
mov
adc
jl
dec
popa
pand
pop
inc
mov
out
jae
push
movs
rol
mov
(bad)
call
xchg
inc
loope
dec
sbb
pop
jns
sub
dec
sar
or
outs
mov
adc
in
and
jae
inc
loop
rol
push
and
pusha
add
pop
into
cmp
das
jp
inc
push
dec
inc
gs
sar
aad
sbb
int
test
jle
mov
inc
adc
jne
cmp
mov
cwde
dec
mov
xchg
mov
or
outs
nop
retf
sub
or
mul
fmul
xchg
mov
fbstp
xchg
pop
or
mov
ins
mov
fcmovbe
cmp
stos
cmp
(bad)
and
mov
xlat
jecxz
jg
(bad)
xor
lods
into
sub
clc
cmc
mov
dec
loop
popa
mov
inc
and
mov
ss
test
push
mov
mov
mov
out
xor
(bad)
adc
int3
mov
pop
shl
sub
loop
cdq
aad
xchg
loop
mov
aaa
cli
sub
jo
mov
push
pop
sub
shl
test
sbb
add
imul
call
xchg
pop
shl
mov
sbb
pop
sub
push
push
mov
jne
(bad)
out
xor
cs
xor
push
pop
adc
jbe
ror
popf
shr
mov
in
sbb
call
pop
jns
mov
xor
jmp
mov
lea
lea
mov
inc
hlt
out
std
and
push
fild
cdq
imul
iret
hlt
cmp
imul
mov
dec
pop
ins
dec
pop
push
jmp
popa
mov
ja
in
in
dec
lods
not
push
popf
retf
xchg
push
adc
mov
jbe
repz
mov
cmp
ins
cmps
or
jge
inc
rcl
shl
xlat
rcl
inc
adc
jle
sbb
in
adc
ror
aam
js
adc
mov
jle
out
pop
xchg
cli
in
sti
adc
in
or
lea
jbe
cmp
clc
je
pop
jle
addr16
push
and
pop
loopne
push
pop
adc
out
dec
inc
test
xor
popa
in
push
popa
xchg
mov
ror
int
syscall
mov
ret
mov
dec
test
je
fistp
idiv
jge
mov
fst
jle
jmp
push
cdq
pop
clc
mov
call
loopne
xor
and
jmp
cmp
mov
add
adc
(bad)
pop
jnp
popa
shr
pop
mov
xchg
jmp
push
jno
lock
loopne
inc
(bad)
lock
lock
push
cmp
pop
mov
stos
and
add
sbb
push
cld
int3
mov
add
jne
sbb
push
xchg
test
loope
jle
sbb
outs
in
stc
lahf
dec
popf
adc
(bad)
sbb
jnp
ret
mov
jae
scas
add
push
xor
movs
movq
inc
loop
ss
sub
cmps
push
cmp
popf
cmps
jl
pop
out
sbb
ror
push
xor
cmp
das
lahf
push
push
xchg
shl
stos
push
addr16
nop
and
push
and
das
gs
jecxz
rol
mov
inc
in
jp
imul
sub
adc
or
push
and
lahf
daa
mov
sub
xor
sbb
push
int3
jo
push
sbb
(bad)
cmp
cmp
call
stc
sbb
inc
ss
mov
xor
xor
sub
add
aas
retf
shl
pop
int3
sub
jecxz
(bad)
cdq
iret
adc
sbb
and
ja
or
sub
sub
lds
fisub
fiadd
adc
xor
in
mov
int3
inc
push
loop
pop
pop
fld
sbb
stc
aam
or
enter
in
fld
sbb
jecxz
nop
pop
and
addr16
push
and
aaa
stc
das
push
mov
(bad)
sbb
fisttp
shl
mov
dec
or
movs
(bad)
adc
add
cmp
jl
or
jne
xchg
add
push
pop
lahf
push
cs
cld
popf
int3
(bad)
mov
xlat
unpcklps
cmp
shl
mov
mov
mov
outs
push
int3
push
or
push
sub
mov
adc
popa
cmp
stos
bound
jb
add
xlat
xchg
stos
lods
mov
cmp
push
std
outs
daa
xor
cmovae
push
mov
pop
aaa
xchg
paddusb
hlt
jge
and
xchg
pop
cwde
repz
je
or
jbe
rcl
dec
push
xchg
jle
mov
ins
sbb
scas
add
cmp
loop
push
inc
jl
test
int3
js
(bad)
or
or
mov
les
ficomp
jp
xchg
xor
rdpmc
mov
sbb
xchg
mov
loopne
dec
push
push
(bad)
add
inc
mov
sbb
sub
push
test
lods
add
enter
loope
test
int
stos
add
sub
call
and
imul
test
mov
pop
fs
mov
popf
mov
cmp
mov
add
test
in
xchg
cwde
(bad)
pop
fidivr
jo
mov
push
sbb
pop
adc
call
in
loope
adc
inc
xchg
pop
into
or
push
dec
lods
pop
fdivr
xchg
(bad)
sti
aaa
stos
enter
ret
mov
add
cwde
(bad)
fbstp
or
retf
test
sub
lods
mov
xchg
pushf
mov
loopne
mov
fs
ds
inc
and
stos
stc
sahf
push
sbb
cdq
mov
neg
jge
dec
jmp
and
es
dec
movs
adc
jno
push
xchg
ss
sub
fmul
xor
mov
inc
push
jns
mov
push
and
push
mov
icebp
pop
jb
std
stos
or
js
mov
jno
outs
pop
sub
sub
jp
jle
rcl
retf
xor
inc
movs
imul
inc
sub
js
das
sar
add
test
pop
cmp
mov
in
sbb
data16
inc
rcl
dec
pop
call
popa
dec
xor
rol
jmp
scas
outs
(bad)
or
pop
adc
jle
cdq
(bad)
jecxz
out
mov
fstp
aam
jmp
ror
cld
cld
js
and
ds
mov
dec
xchg
mov
inc
xor
mov
fiadd
cmp
xchg
sub
call
dec
sbb
scas
retf
mov
(bad)
clc
add
rol
add
retf
mov
pushf
cwde
dec
cdq
sahf
pop
xchg
inc
push
and
stos
iret
jbe
jae
mov
sbb
cld
test
aam
xchg
outs
pop
ins
adc
daa
std
mov
and
pop
lock
sbb
loope
sbb
add
fisub
or
mov
xor
imul
dec
jbe
aaa
cmp
je
addr16
sbb
xchg
dec
sub
xor
lds
and
mov
int3
out
push
mov
call
aas
pop
test
shl
pop
xor
adc
dec
mov
dec
adc
mov
pop
cmp
mov
jbe
nop
adc
mov
or
jae
ret
fmul
frstpm(287
sahf
cmc
mov
lahf
(bad)
inc
(bad)
mov
cmp
sti
inc
movs
or
lods
dec
nop
mov
(bad)
cs
pop
push
jns
xor
stos
in
icebp
xchg
jmp
outs
jne
outs
or
sbb
lods
mov
das
mov
mov
test
cld
cmp
jb
sbb
push
loop
sub
xchg
cmp
xor
arpl
(bad)
pop
sbb
cld
jne
enter
(bad)
inc
dec
sub
mov
in
mov
ret
adc
pop
loope
and
fmul
jbe
popf
in
add
jb
int
pop
pusha
retf
mov
pop
jnp
mov
fisubr
pop
js
pushf
and
fild
imul
imul
fdiv
dec
in
pop
cmp
cld
outs
loopne
shl
sahf
out
dec
scas
out
mov
frstor
ins
sub
xchg
jno
sub
out
lahf
and
movs
lds
nop
add
aaa
sbb
mov
into
cmp
cmps
adc
push
into
mov
sti
push
(bad)
ins
push
imul
mov
or
push
pop
enter
into
xchg
xor
shl
dec
adc
daa
inc
cmp
and
mov
and
test
sub
push
jbe
sub
mov
xor
ficom
pop
lods
aas
and
cmp
jle
mov
repz
cmc
sub
cmp
mov
and
sub
repz
(bad)
ins
mov
xlat
jmp
pop
scas
mov
sbb
add
or
jmp
jb
ret
idiv
sahf
jmp
loopne
cmp
faddp
pop
cmc
fwait
aam
outs
push
rcl
sbb
sbb
mov
xchg
sbb
out
sub
cmp
outs
sub
inc
mov
scas
mov
xchg
push
jg
adc
cmp
xchg
clc
mov
sub
int3
cmp
and
adc
test
jg
jne
fisttp
pushf
sub
icebp
pop
push
inc
ins
lods
fnstcw
xchg
(bad)
cs
add
mov
add
jp
into
lds
adc
pop
and
jns
mov
cmp
fidiv
or
jecxz
jg
out
lea
in
popf
mov
mov
popa
sahf
mov
call
ret
xchg
cmp
and
sti
mov
dec
scas
shl
jecxz
nop
int
fsubr
aam
adc
enter
call
sar
outs
fnsave
cmp
dec
mov
xlat
pushf
loope
fnstenv
sub
mov
into
sti
jmp
xor
ja
xlat
jmp
fwait
lea
scas
lock
(bad)
and
ja
in
jle
ja
imul
and
ss
mov
jmp
lods
cmp
cmp
xchg
cmp
dec
mov
scas
ffree
dec
(bad)
int
cmp
popf
adc
fdiv
fist
jno
mov
rcr
sbb
cmps
pop
es
xchg
inc
lahf
jle
push
fsubr
push
push
pop
(bad)
sbb
mov
aam
aam
fld
sahf
popa
adc
ret
sub
push
adc
xchg
scas
gs
xlat
add
push
test
aam
mov
fdivr
pop
jg
xchg
inc
cld
xor
in
(bad)
cmp
sbb
loopne
in
bt
ins
repz
enter
or
leave
pop
outs
jnp
mov
inc
inc
cmc
jns
pop
fistp
inc
and
mov
jle
adc
rcl
int3
mov
xchg
jbe
shl
push
jae
mov
into
aaa
dec
xor
or
lea
ret
rcr
adc
out
popf
dec
jae
jne
jbe
mov
pop
outs
ret
mov
or
pop
fild
int3
adc
xchg
std
(bad)
pushf
icebp
jo
inc
aas
sbb
sbb
fidiv
nop
push
stos
daa
inc
ret
mov
sbb
sub
sub
retf
sub
mov
int3
inc
mov
xchg
cmp
jl
mov
adc
into
cmp
int3
xor
pop
xor
aam
loop
and
and
(bad)
inc
inc
pop
not
fisub
test
int
lahf
push
call
sbb
mov
mov
rcl
sub
inc
pop
push
out
xor
inc
retf
addr16
mov
(bad)
bound
adc
jnp
ins
add
mov
mov
xor
mov
loop
inc
mov
pop
push
idiv
sub
pop
repnz
jl
mov
xor
fidivr
xor
test
jb
and
imul
push
jns
fild
inc
mov
lods
push
mov
das
movs
out
cmps
das
inc
ins
mov
mov
mov
xor
pop
fisttp
mov
jle
xchg
xor
in
mov
cmp
sbb
inc
jns
inc
hlt
and
jo
push
loop
popf
add
mov
int3
or
or
add
sahf
popw
iret
cmp
add
and
pop
or
int3
or
cs
pop
adc
add
push
inc
outs
jmp
imul
(bad)
int3
int3
adc
sub
mov
push
adc
mov
call
xchg
dec
out
enter
push
cmp
(bad)
push
popf
add
cmp
addr16
fidiv
pop
fsub
adc
sti
aam
jo
retf
(bad)
sub
cli
xchg
sub
in
xchg
iret
pushf
into
loopne
sar
jo
push
rcr
cmp
(bad)
mov
inc
ins
mov
ja
sar
test
xchg
cmc
sub
dec
sahf
pushf
sbb
xchg
loop
(bad)
jns
cmps
ins
arpl
fisttp
dec
out
lds
lock
repnz
movs
jge
mov
xor
imul
jmp
rcl
sti
cmp
sbb
cmps
jbe
int3
loopne
mov
enter
scas
cli
adc
jo
push
inc
sbb
push
xor
xchg
dec
jno
mov
xor
(bad)
scas
clc
push
retf
fimul
stos
inc
bound
sub
cmp
push
movs
js
imul
jb
and
aas
bnd
jmp
mov
pop
aad
loope
cmps
inc
xor
sbb
dec
aaa
imul
loopne
scas
pop
(bad)
mov
sbb
imul
jp
jecxz
and
fistp
and
leave
inc
pusha
aam
and
adc
inc
stc
sbb
dec
dec
outs
inc
xchg
outs
jmp
cmc
sub
int3
pop
dec
pushf
shr
gs
mov
dec
hlt
or
lock
pop
iret
daa
pop
icebp
sub
jg
fisubr
mov
or
loopne
cmp
cld
jb
imul
mov
mov
(bad)
icebp
mov
mov
or
rol
cmp
je
jge
out
adc
push
pop
aaa
cmp
sbb
test
dec
xchg
xor
ret
adc
mov
pop
mov
ret
xor
xor
cs
call
inc
in
popf
inc
cmp
mov
pop
out
sub
xchg
inc
jl
sahf
in
sub
pop
sub
movs
mov
and
les
xor
into
out
and
call
imul
xchg
lock
je
push
stc
jle
rcl
and
outs
mov
adc
fwait
pop
xchg
fld1
mov
int
adc
or
inc
int3
push
call
push
jbe
fcomp
cmps
inc
and
aas
fist
ins
rcr
fcom
retf
xor
push
pop
mov
jo
loop
or
jo
sub
mov
mov
add
data16
mov
test
cdq
mov
mov
movs
jbe
sub
inc
add
(bad)
fistp
or
pop
in
push
lock
mov
into
lds
jmp
iret
cmp
xchg
mov
popf
or
mov
cmp
mov
mov
fisub
arpl
xchg
dec
in
dec
or
mov
ins
seto
push
sbb
jb
xor
(bad)
mov
xlat
xchg
test
mov
or
pop
int
stos
mov
sub
jecxz
push
jae
arpl
in
imul
inc
jmp
sbb
inc
mov
pop
addr16
or
cmps
mov
xchg
repnz
outs
inc
push
xchg
in
inc
mov
dec
pop
add
push
add
stc
lahf
sbb
fstp
push
imul
lods
(bad)
cmp
in
push
dec
sub
xchg
(bad)
mov
mov
leave
aaa
mov
mov
inc
push
jb
and
test
cmp
call
sub
fucomp
imul
aam
sub
loop
rol
and
es
mov
inc
add
inc
xor
sar
jmp
dec
rcr
jnp
mov
adc
and
hlt
repz
stos
sbb
(bad)
push
test
pop
icebp
not
lahf
inc
leave
jno
std
pop
xor
and
fimul
in
call
outs
sub
adc
daa
and
push
xlat
int
and
pop
cwde
add
dec
cmps
jle
mov
das
out
adc
cs
push
pop
repz
(bad)
add
stc
rol
add
(bad)
lods
ror
(bad)
jmp
xor
fcom
sahf
in
retf
mov
fcom
inc
push
cmp
mov
and
dec
loopne
out
cmp
mov
bound
or
cwde
push
(bad)
loop
mov
into
dec
jmp
cmp
mov
icebp
jne
or
aaa
jg
pop
sbb
ret
pop
adc
outs
fist
sub
add
push
sbb
jns
push
xor
in
mov
jecxz
xor
out
in
outs
retf
test
out
lea
ror
lock
into
add
mov
mov
fmul
sub
into
mov
test
test
push
(bad)
aam
jo
jg
mov
pop
leave
cmp
data16
xchg
(bad)
mov
mov
aas
aam
shl
push
cdq
bound
mov
sbb
scas
fadd
xchg
pop
dec
dec
mov
mov
mov
jno
xor
mov
test
mov
xchg
popa
and
adc
fs
aad
rcr
add
push
fist
popa
sbb
xor
pop
stos
cmp
add
leave
sub
cmp
or
pop
sbb
iret
clc
test
(bad)
jnp
xor
ins
mov
popa
and
clc
mul
aam
pop
adc
stos
pop
fisttp
dec
call
mov
mov
shl
scas
mov
js
loop
je
sbb
pop
sbb
enter
in
stos
or
dec
jnp
jno
pusha
(bad)
into
std
aas
into
push
pop
lods
push
pop
mov
jge
inc
ins
cld
outs
daa
cld
mov
lock
cs
xchg
mov
xor
mov
out
retf
xor
mov
push
fs
push
push
das
jns
or
shl
(bad)
mov
out
(bad)
popf
aas
loopne
iret
fild
ret
fiadd
add
sub
outs
push
jmp
sub
shl
jb
rcl
idiv
cmps
cmp
mov
push
or
sub
test
mov
push
cmps
daa
sub
mov
popa
adc
call
lahf
and
mov
ret
or
sbb
mov
sbb
cli
movs
iret
mov
mov
fst
or
(bad)
movq
inc
ins
lock
jge
and
fs
mov
loope
push
xchg
mov
xor
movs
mov
aaa
test
lds
sbb
repnz
push
mov
fs
fs
sub
push
ss
out
retf
jmp
mov
push
test
adc
or
mov
call
out
push
fisub
les
repz
mov
(bad)
je
es
adc
loope
cld
cmp
mov
push
les
retf
scas
sub
push
sub
fs
push
es
mov
test
movs
cmc
inc
xlat
test
in
gs
cld
cs
es
pop
sub
cmp
(bad)
adc
out
mov
jne
mov
popf
cdq
xchg
sbb
sbb
mov
ins
ins
(bad)
in
lods
test
call
into
mov
sub
mov
or
inc
xor
retf
mov
push
leave
int
jl
add
mov
xor
rol
push
ret
imul
xlat
icebp
addr16
mov
push
scas
ins
fs
xchg
xchg
pop
in
(bad)
pop
lahf
sub
bound
in
fs
jmp
imul
shl
jnp
fs
lds
bound
lock
mov
add
imul
mov
out
stos
out
and
jl
pop
push
out
pop
sbb
mov
bnd
mov
ret
push
sub
cmps
add
pop
fsubp
xor
push
dec
mov
inc
les
ror
rcr
mov
icebp
test
xchg
xor
push
call
pop
retf
fiadd
cli
dec
call
test
cmp
or
sub
pop
xor
icebp
test
sbb
jae
lds
xchg
in
sub
pop
test
stc
sbb
js
das
xlat
cli
jle
stos
test
(bad)
or
cmc
popa
inc
loop
mov
mov
jae
daa
iret
out
jno
xchg
call
sub
scas
repnz
xchg
shl
hlt
enter
sbb
xor
aas
std
jmp
outs
es
ror
aaa
jl
and
adc
enter
sar
or
mov
mov
cmp
sbb
fdiv
inc
es
fs
mov
mov
or
mov
pop
cli
das
cmp
and
sbb
mov
mov
mov
fist
leave
mov
xor
and
mov
mov
repz
xchg
rcl
in
adc
cmp
(bad)
js
ficom
into
inc
cwde
pop
and
cmps
cmp
jns
add
xor
fs
or
punpcklbw
scas
retf
test
iret
mov
jne
stos
pop
and
push
test
fist
sub
jnp
jp
and
sub
js
aas
fldenv
je
stos
arpl
adc
inc
adc
cmc
adc
in
int3
add
jns
and
sahf
dec
and
pop
out
jge
push
xlat
push
dec
je
push
pushf
cmp
pop
or
mov
int
cmp
mov
aaa
lea
ins
sub
ins
ror
imul
mov
sar
pop
sbb
sbb
retf
sbb
add
leave
aaa
xor
push
mov
pusha
cmc
cdq
or
jae
sar
int
mov
inc
pop
aaa
pop
inc
mov
in
xchg
mov
adc
and
mov
test
cmps
in
jo
arpl
mov
jae
mov
enter
retf
and
sbb
adc
jns
cmps
ss
scas
rcl
arpl
popf
rcl
sti
aad
in
pop
sbb
jmp
cmps
mov
mov
adc
add
ds
mov
xor
xchg
cmp
jae
and
shr
lods
mov
or
xor
adc
pop
lds
sub
sub
cmp
std
out
xchg
dec
xor
dec
xchg
push
pop
cli
inc
xor
in
add
pop
pop
push
outs
(bad)
mov
aad
mov
jl
mov
xchg
in
ds
into
sub
sbb
or
jmp
pop
sub
mov
cmps
sar
aaa
in
cmovle
xchg
push
out
fmulp
imul
cmp
cmp
cmp
loopne
fld
mov
dec
fdiv
dec
ss
dec
ins
scas
xchg
pop
aas
pusha
mov
pop
jmp
adc
(bad)
mul
xchg
ja
aad
mov
push
call
js
dec
fist
push
xchg
aam
js
push
jg
cli
cmp
cs
mov
add
sub
mov
jns
movs
mov
pop
sub
out
repnz
(bad)
push
sbb
mov
scas
push
rcl
pop
adc
sub
je
popf
mov
loopne
fild
mov
jbe
pushf
imul
mov
arpl
jns
fcomp
xchg
aas
mov
and
inc
mov
sbb
sar
or
fild
fsub
ins
adc
ret
adc
adc
(bad)
test
jae
add
fwait
sbb
lods
jo
repz
push
daa
outs
out
rcl
pop
aas
push
leave
ret
add
mov
cmps
test
cmp
cld
pop
fidiv
push
push
loope
repnz
and
jg
fsubrp
sbb
and
int3
or
and
inc
jecxz
cmp
push
ror
imul
adc
pop
mov
or
imul
lahf
or
lahf
shl
jne
outs
ss
pop
xor
jge
aas
push
sub
mov
shr
jo
fmul
ja
mov
push
scas
add
scas
arpl
js
add
cmp
es
xor
or
ja
and
xchg
(bad)
repz
fidiv
jl
daa
stc
sub
test
inc
stos
fchs
mov
xchg
jecxz
mov
ds
xchg
jae
aad
mov
inc
sub
xchg
ds
(bad)
pop
movs
jg
xchg
adc
cmp
mov
adc
mov
clc
in
add
adc
sbb
sti
cmp
sbb
inc
push
jnp
xchg
dec
cdq
xchg
hlt
mov
shl
imul
jle
mov
shr
push
test
sub
jl
fnclex
in
dec
(bad)
cwde
(bad)
imul
hlt
enter
loopne
ss
nop
adc
inc
push
xlat
xor
add
(bad)
mov
mov
btr
pop
and
jmp
mov
xor
lahf
sub
jg
pop
dec
or
pop
cmp
push
loopne
cs
popf
lock
xchg
movs
pop
mov
push
mov
mov
movs
push
push
jg
add
(bad)
stos
cmp
(bad)
adc
push
in
mov
add
jmp
xlat
mov
call
pop
adc
iret
aaa
pop
dec
cli
sahf
aad
icebp
sub
sar
lods
jns
mov
jbe
pushf
xchg
scas
call
pop
add
cmp
es
or
movs
inc
ds
fldcw
mov
mov
adc
jns
js
push
add
repz
(bad)
jg
or
pusha
xor
push
out
ret
mov
pop
mov
mov
push
scas
add
xchg
lock
leave
mov
pop
push
gs
das
sbb
pop
mov
dec
movs
jmp
popf
jl
ja
and
add
adc
addr16
xchg
inc
(bad)
sbb
pusha
mov
loop
aas
mov
daa
adc
inc
scas
imul
hlt
je
cdq
adc
fcomp
mov
into
cmp
mov
pusha
push
das
inc
adc
mov
mov
popf
adc
test
mov
add
rol
mov
call
xchg
cmp
call
ret
out
xor
sti
fdivr
mov
stos
lock
cmp
loop
in
movs
cmp
push
lods
mov
(bad)
lock
fdivr
jmp
adc
mov
fdivr
pop
jge
pop
or
cli
movs
pop
in
mov
test
mov
shl
push
xor
repnz
aam
xor
fstp
inc
scas
xor
mov
inc
mov
test
or
jo
mov
aam
pop
sub
shr
add
pusha
imul
inc
data16
fsub
(bad)
sbb
pop
sar
arpl
mov
rcr
addr16
stos
lea
ss
inc
xchg
fimul
pop
in
retf
pop
outs
std
add
jg
std
sbb
(bad)
imul
xchg
jnp
inc
cmp
add
jns
or
add
cli
dec
call
jbe
add
cli
movs
xchg
daa
dec
(bad)
ss
xchg
adc
arpl
ret
inc
jmp
test
dec
loope
sub
push
retf
mov
and
aas
enter
jl
out
mov
jo
ret
lahf
sub
loop
cli
jg
movs
pusha
lds
inc
mov
dec
dec
xchg
inc
mov
rcr
sub
mov
inc
pop
jo
iret
mov
fild
mov
jnp
mov
cwde
and
inc
test
jne
repnz
sahf
mov
ins
in
jb
sub
pop
fcmovnb
adc
xchg
lock
pop
lods
cmp
add
cmp
int
int3
adc
outs
sbb
fstp
aad
inc
mov
es
inc
ins
mov
movs
addr16
outs
movs
mov
pop
push
aad
ins
adc
fiadd
addr16
lods
into
push
dec
lds
sti
scas
inc
jno
and
jno
jns
mov
mov
mov
xchg
inc
mov
ds
mov
out
sub
dec
xchg
mov
shl
scas
cmp
fst
sbb
call
xchg
and
(bad)
cmp
adc
sbb
adc
js
mov
test
mov
ss
push
push
and
call
mov
mov
add
lods
fwait
in
or
jno
sub
adc
(bad)
cwde
sbb
push
pushf
stos
jmp
scas
outs
push
mov
fnstsw
ja
lods
mov
inc
fucom
sub
push
enter
pop
ret
jge
lods
and
or
or
mov
inc
pop
xchg
mov
fist
ret
loop
fdiv
dec
cmp
fidiv
addr16
jno
jae
xor
movs
stos
adc
mov
movs
pop
sar
je
push
jg
and
and
mov
lds
mov
push
and
mov
mov
pop
into
test
call
out
popf
push
and
movs
stc
adc
cld
test
xchg
mov
adc
icebp
ja
mov
daa
jmp
into
mov
(bad)
stc
add
sub
add
push
fidivr
call
sub
add
cli
mov
pop
movs
scas
nop
sub
es
dec
pop
mov
into
or
xchg
push
cmps
pop
sbb
(bad)
mov
mov
mov
loop
mov
int
cmp
scas
and
push
popf
jne
mov
loopne
stos
jns
adc
stc
adc
mov
out
leave
dec
mov
imul
int3
call
dec
dec
mov
test
xlat
out
mov
lock
jnp
aaa
psraw
iret
sbb
add
std
dec
add
shl
(bad)
and
inc
mul
pop
push
mov
or
add
retf
popf
sbb
test
dec
jns
jmp
imul
adc
cli
mov
mov
sar
cmp
rcl
test
adc
imul
clc
dec
sub
and
xchg
lds
pop
aaa
outs
xchg
(bad)
lods
or
ja
lods
mov
sub
and
push
mov
pop
pop
cmps
addr16
mov
nop
and
clc
fistp
out
in
in
mov
stos
mov
test
sbb
push
mov
and
ss
nop
fadd
or
inc
ficom
pop
xchg
cwde
sbb
push
sbb
mov
adc
push
dec
(bad)
xchg
pop
push
and
cmps
or
test
jl
xor
push
add
dec
sbb
sub
data16
inc
(bad)
call
dec
popa
mov
stc
xor
std
cdq
not
push
jmp
add
fisubr
fwait
or
cmp
fisttp
push
jge
test
(bad)
push
sar
or
push
adc
adc
out
sahf
mov
jecxz
xchg
call
scas
arpl
inc
and
fcomp
xor
jne
rcl
pop
mul
pop
jns
mov
in
sub
icebp
iret
ficom
and
mov
stos
outs
or
in
dec
xchg
dec
and
mov
stos
ror
fidivr
rol
stos
popa
not
(bad)
mov
push
cmps
dec
out
ss
dec
jb
loopne
shl
mov
xchg
jae
inc
lods
push
ja
push
push
loopne
dec
xor
xchg
sub
adc
(bad)
cmp
push
scas
xor
ins
mov
mov
inc
dec
pop
sub
dec
sub
loop
not
dec
in
mov
inc
mov
adc
shl
xchg
(bad)
in
lds
inc
mov
xchg
frstor
pop
add
jmp
fcom
mov
mov
mov
inc
out
pop
add
sbb
sti
push
cli
adc
ja
clc
jns
cmps
stos
dec
inc
cli
les
mov
push
adc
int
cmp
jl
pop
push
pop
in
ret
popa
jne
addr16
mov
mov
dec
jns
popa
ret
(bad)
(bad)
sub
stc
pop
pop
and
sar
xor
push
mov
mov
jns
push
daa
dec
or
sub
jbe
pop
sub
sbb
mov
(bad)
(bad)
push
js
(bad)
and
repz
pop
sub
and
cmp
gs
mov
and
scas
es
(bad)
xor
add
std
sahf
xchg
jg
xchg
mov
cld
cmp
std
add
or
fwait
popf
neg
mov
pop
or
sbb
xchg
(bad)
pop
mov
sbb
inc
push
jmp
jno
xor
adc
jbe
cmp
fwait
aad
les
xchg
mov
(bad)
xor
push
mov
test
and
ds
inc
add
xor
add
inc
test
mov
mov
push
cld
sub
push
sub
or
aad
dec
lock
inc
cmp
push
mov
popa
cmp
jmp
add
mov
call
jbe
mov
cli
add
inc
call
shl
dec
popa
aam
pop
cmp
mov
dec
bound
fsubr
or
aam
mov
mov
data16
imul
cmp
mov
mov
dec
jg
out
fmul
addr16
push
pop
fdiv
mov
pop
add
adc
outs
arpl
pushf
lahf
daa
cs
xchg
bound
sbb
cmps
hlt
or
iret
stos
pop
lds
icebp
jb
mov
ficom
je
or
fisub
dec
mov
jle
(bad)
sbb
ret
ret
pushf
in
pop
and
daa
in
jle
pushf
sub
enter
test
cmp
stos
(bad)
lahf
jp
imul
cmp
into
pop
pop
pop
pop
pop
pop
xchg
aaa
mov
xor
out
dec
inc
cmps
hlt
sbb
ficom
(bad)
(bad)
fidivr
loop
fs
cmps
cld
push
push
fstp
cld
sub
mov
shl
mov
jl
mov
ror
mov
nop
jge
mov
(bad)
push
repnz
je
dec
iret
loope
pop
dec
xchg
shl
mov
retf
dec
repz
sub
ror
adc
sub
rol
popa
pop
ret
mov
je
rcl
mov
push
cld
xor
push
repz
xchg
or
sahf
js
sar
mov
pop
add
fnstenv
jo
div
fst
sub
ss
in
sti
push
test
jp
shl
sub
mov
cli
cmp
sbb
jp
in
std
or
push
ficomp
outs
mov
imul
push
(bad)
iret
ret
test
daa
xchg
xlat
xor
aam
cmps
jb
addr16
enter
das
ficomp
js
lds
(bad)
enter
mov
outs
retf
pop
ins
mov
(bad)
mov
sbb
sbb
stc
gs
out
outs
fmul
popf
push
lock
repnz
xchg
pop
imul
data16
in
xchg
xchg
sub
fadd
mov
sbb
mov
jo
ret
aam
loopne
sbb
test
stos
xor
mov
out
add
xchg
jge
test
in
xor
test
cmc
nop
pushf
ins
pop
mul
dec
ffree
hlt
dec
(bad)
cld
cmps
jge
dec
lods
loope
imul
movs
jg
mov
dec
shl
ror
clc
inc
clc
or
daa
or
inc
dec
adc
stos
stos
imul
sub
gs
cmp
push
push
movs
stos
lock
sub
cld
sub
fidiv
or
jae
mov
fst
jecxz
pop
push
dec
xchg
sbb
cwde
jbe
arpl
mov
jge
push
imul
(bad)
(bad)
pop
mov
sub
push
add
sub
fbstp
clc
adc
mov
push
arpl
sbb
popf
jge
(bad)
(bad)
aaa
sub
jb
out
or
push
fsub
in
xchg
les
mov
dec
pop
mov
sahf
mov
jl
movs
loope
jo
sub
jo
sahf
loop
gs
sbb
outs
jle
push
jecxz
inc
loopne
shl
das
(bad)
fdivp
xor
sub
pop
scas
mov
mov
out
call
dec
mov
icebp
aad
add
cmp
(bad)
outs
sub
adc
call
inc
cmp
sahf
xor
es
sbb
or
cli
pop
mov
or
ins
mov
shl
mov
retf
fsub
inc
dec
fld1
imul
jl
retf
and
inc
lea
push
scas
sahf
push
loope
cmps
das
adc
in
sbb
push
pop
pop
and
fisttp
mov
int3
push
push
scas
pop
cmp
and
test
inc
int3
mov
inc
mov
lahf
cmp
(bad)
sbb
mov
jbe
lock
mov
(bad)
(bad)
loop
jns
sar
sub
(bad)
jae
xor
ja
outs
mov
cmp
or
sub
mul
mov
adc
aas
cmp
out
repz
shr
jmp
jge
pushf
cmp
rcr
test
cwde
ds
cmovge
pusha
xchg
and
(bad)
pop
mov
lock
ss
hlt
outs
or
cwde
add
inc
cwde
fdivr
sbb
xor
mov
mov
stc
xchg
and
sub
mov
les
jge
adc
pop
cld
sbb
jbe
out
sbb
dec
sub
jp
or
push
icebp
add
in
xor
dec
xor
and
mov
xchg
mov
adc
mov
adc
push
jbe
dec
movs
and
dec
and
push
arpl
das
push
jnp
fidiv
mov
mov
mov
std
fcom
aad
inc
adc
mov
call
xor
dec
dec
and
xor
or
push
mov
pop
sub
retf
retf
xchg
push
jg
push
js
enter
mov
or
dec
and
mov
xor
les
mov
mov
inc
inc
stos
test
push
xchg
call
jbe
imul
loop
pop
inc
sub
push
pushf
popa
shl
jp
mov
adc
lea
xchg
jne
cmp
popa
jb
fisub
or
jmp
aad
nop
fidiv
cmp
add
dec
pusha
(bad)
mov
xchg
inc
or
dec
sahf
sbb
shl
int3
cmove
xor
aas
frstor
xchg
hlt
dec
ds
pop
xchg
aaa
stos
cs
or
outs
pop
movs
mov
or
xchg
jns
pop
and
jnp
lea
sbb
lds
data16
call
inc
lahf
jnp
mov
shr
inc
dec
or
loopne
jp
xchg
daa
jmp
or
xchg
int3
gs
sub
mov
imul
dec
shr
or
xchg
jmp
adc
pop
push
cmp
popf
and
dec
mov
movs
add
jae
fldcw
mov
loop
fist
lock
popf
hlt
xor
mov
mov
stc
in
fsubr
leave
ins
out
jecxz
das
or
sbb
clc
lock
mov
xor
jmp
xor
arpl
push
shl
sub
sub
aad
(bad)
movs
cli
jnp
rcl
cli
xchg
das
inc
ds
pop
dec
retf
div
mov
push
mov
std
rcl
pop
arpl
inc
pop
inc
leave
int
ror
out
in
add
jecxz
jl
les
xor
shr
out
fwait
xor
dec
add
gs
fisttp
into
lods
pushf
popf
out
in
sbb
inc
jno
iret
call
jo
xchg
fldpi
(bad)
push
into
sub
dec
add
cmp
add
enter
add
dec
enter
mov
mov
push
mov
rol
sub
mov
add
mov
aas
shl
lea
adc
imul
mov
inc
mov
(bad)
clc
xor
jns
or
scas
push
sbb
retf
push
pop
cmc
mov
sar
call
sub
lods
mov
sub
sbb
mov
sbb
jne
mov
hlt
daa
inc
jne
and
dec
push
mov
enter
mov
push
fdivr
sub
pop
and
xchg
mov
fst
add
rep
jo
push
mov
fidiv
sti
out
pop
mov
lahf
lds
dec
adc
imul
inc
pop
pop
cmp
shl
jp
inc
push
and
jge
shl
dec
pop
xor
outs
pop
sub
jmp
jmp
mov
inc
dec
pop
and
xor
stos
mov
cmp
pushf
add
shr
inc
outs
jle
stos
ret
adc
es
xor
test
lock
sub
in
pop
xor
inc
jmp
icebp
sbb
or
(bad)
jae
cdq
jecxz
mov
nop
cld
xchg
and
xchg
mov
mov
sbb
rcl
sbb
push
out
fucomp
mov
bound
and
xchg
sti
add
xor
ja
and
out
add
and
lods
cld
cwde
mov
xchg
and
cld
xchg
rol
aad
mov
js
push
mov
jbe
sbb
jns
aas
loopne
mov
adc
xlat
and
int3
test
das
mov
bound
jmp
adc
mov
mov
xchg
dec
mov
mov
pop
movs
test
rol
jle
out
and
inc
or
sub
jo
cwde
add
shl
out
xor
or
cmp
pop
xchg
mov
(bad)
push
dec
lods
push
repnz
sti
scas
mov
push
jmp
jl
or
loope
retf
push
xor
repz
xchg
scas
adc
xchg
in
inc
movs
adc
neg
scas
cwde
pushf
inc
aam
int3
mov
movs
adc
or
rcr
xchg
mov
cmp
sub
ret
mov
cwde
mov
pop
jb
cmps
lock
iret
mov
jno
lahf
sti
aam
xchg
(bad)
in
dec
xor
loop
and
cmc
and
dec
cmp
dec
dec
jbe
fiadd
sub
adc
clc
sbb
and
in
jg
sub
test
(bad)
aaa
popf
or
mov
pop
retf
push
fbld
popf
int3
sar
out
adc
add
call
sub
jge
xchg
mov
jg
stos
bound
push
mov
cmp
add
adc
out
mov
mov
push
clc
add
or
jnp
ds
and
pop
aas
jg
ror
and
ror
out
pusha
loopne
daa
adc
jnp
arpl
retf
pop
adc
mov
lods
jmp
cmp
xchg
jl
shl
adc
and
jl
out
mov
mov
bnd
inc
in
sbb
sbb
sbb
inc
jb
mov
pop
add
enter
lods
cli
jmp
shl
out
jmp
inc
call
mov
add
mov
int3
inc
lds
cmp
mov
ffreep
sub
call
aam
xchg
pand
mov
ins
sub
shr
leave
sub
adc
into
mov
mov
dec
imul
fs
pushf
sub
jmp
icebp
mov
xchg
ins
lods
enter
pop
(bad)
stc
shl
cmp
stos
xchg
adc
int3
in
and
push
mov
ret
jle
ds
ins
frstor
fsubr
fs
or
sbb
cs
fidiv
push
sbb
push
adc
pop
and
fistp
je
xchg
dec
movs
sub
cmp
push
mov
mov
cld
mov
popa
sbb
loopne
ins
imul
jbe
mov
mov
sub
mov
xor
idiv
pop
and
paddq
and
rcr
and
cmps
jmp
ds
popf
(bad)
movs
push
test
popf
pop
push
rcl
push
push
and
push
jl
jl
push
mov
push
or
fisttp
test
not
(bad)
push
sahf
repnz
mov
jb
xlat
cmp
std
pop
cmp
push
dec
fs
jmp
std
std
outs
pop
xor
and
icebp
jmp
push
fnstsw
jno
pop
jnp
cli
jbe
out
cmp
outs
jne
int
ins
and
add
(bad)
cmp
imul
adc
jg
sbb
mov
and
out
bound
ror
or
push
xchg
enter
and
popf
lds
loope
repz
popa
pop
or
(bad)
pop
or
out
add
loop
sar
inc
jne
pop
and
movs
fdiv
aaa
jns
bound
fwait
sar
mov
cmp
inc
js
push
push
cmp
out
imul
dec
jb
addr16
pop
ret
push
sbb
mov
inc
pop
loope
and
cmp
xchg
mov
or
cld
test
ret
push
mov
xor
adc
jno
inc
sub
jae
imul
push
outs
fs
loop
arpl
fist
es
jmp
mov
popf
ins
add
sub
jmp
mov
push
mov
in
aaa
pop
jg
push
cmc
mov
dec
es
dec
and
cli
push
pushf
sti
pop
in
dec
mov
sub
js
cs
push
jecxz
fcomp
inc
mov
ficomp
fmul
imul
mov
mov
xchg
push
je
lahf
in
ret
jp
sub
pop
jge
dec
les
dec
xor
sbb
push
jecxz
push
outs
inc
mov
push
jp
(bad)
and
xor
cmps
outs
lods
xchg
dec
xchg
pop
or
sbb
push
dec
push
inc
sahf
fcomip
add
hlt
hlt
aaa
sbb
out
les
push
cmp
cmp
cmp
inc
sbb
mov
jmp
push
and
test
int3
lock
retfw
std
gs
ret
pop
xor
sub
inc
adc
fstp
sbb
out
add
xor
or
(bad)
push
mov
lds
cmp
mov
sub
xor
mov
arpl
pop
outs
mov
lea
ins
out
or
push
pop
xchg
sbb
cmps
mov
and
pop
repz
adc
sub
cwde
mov
fcomi
add
lds
mov
push
sub
and
pop
dec
push
add
imul
xor
inc
push
scas
shl
and
cld
xor
push
xchg
stc
jb
pause
popf
loopne
and
les
push
retf
mov
xchg
mov
xchg
sub
fiadd
push
add
daa
ret
jmp
adc
es
shr
aad
xchg
adc
sbb
jg
inc
jb
jmp
mov
dec
ret
dec
push
or
lahf
mov
inc
sbb
adc
or
pop
data16
outs
call
inc
xchg
aaa
push
mov
(bad)
pop
xor
fwait
dec
mov
out
inc
(bad)
xor
mov
xor
cmc
(bad)
enter
into
test
mov
xor
push
cmp
aad
sbb
retf
pop
dec
mov
jg
dec
xchg
sub
dec
cmp
adc
hlt
lahf
cli
pop
mov
xchg
dec
rcr
and
dec
adc
dec
mov
fnstsw
sbb
and
mov
adc
inc
xor
or
jge
push
fwait
scas
sub
cmp
nop
popa
div
cmp
imul
fcomp
push
lods
jae
pop
inc
push
inc
xchg
ja
pop
ret
in
push
jmp
mov
push
inc
pop
adc
xor
sahf
mov
iret
iret
xor
mov
movs
pop
dec
cmp
mov
lods
movs
cdq
movs
daa
inc
adc
call
push
jecxz
sahf
adc
arpl
inc
xlat
in
adc
or
shr
fabs
outs
cmp
aam
inc
adc
fiadd
jns
and
fwait
dec
es
lahf
adc
fwait
sbb
pop
test
jle
in
cmp
mov
out
fwait
bound
ror
nop
or
jge
cmc
or
movs
adc
sub
pop
mov
add
cs
mov
int3
fnstsw
and
into
movs
push
and
daa
outs
jp
mov
mov
pop
ret
fcmovne
xor
mov
dec
mov
retf
rcr
ret
xchg
and
inc
mov
sub
in
inc
inc
sub
xor
fild
sbb
push
loop
aad
push
aad
xchg
mov
aam
pushf
iret
mov
pop
jl
je
mov
jno
arpl
aad
gs
in
scas
add
retf
mov
fld
js
clc
adc
loopne
xor
pop
pop
ins
jae
add
mov
call
pusha
jmp
das
out
xchg
dec
fwait
xchg
xchg
test
push
pop
call
pop
push
jo
dec
scas
out
ret
fisttp
pop
in
jp
add
push
push
mov
jns
mov
xchg
push
inc
adc
push
mov
add
(bad)
pop
aam
xor
rol
inc
xor
aad
scas
dec
(bad)
pop
out
pop
addr16
jbe
jge
pop
xor
call
mov
push
xchg
or
xchg
test
cmp
bnd
dec
stos
push
mov
mov
dec
sti
das
rcr
in
pop
ins
xchg
dec
or
test
fistp
jmp
push
ins
inc
into
daa
out
dec
or
outs
int
int
dec
in
ds
mov
mov
sti
or
cs
push
jnp
sub
pushf
std
dec
test
jg
push
in
(bad)
adc
call
xor
test
sbb
or
daa
push
dec
stos
xchg
cmp
and
out
(bad)
adc
outs
xchg
pop
lock
(bad)
and
stos
(bad)
adc
mov
adc
(bad)
pop
push
mov
mov
xor
xchg
dec
and
sbb
push
inc
or
mov
inc
add
jmp
add
(bad)
repnz
retf
and
cld
mov
push
pop
cmc
mov
mov
or
and
add
add
jbe
js
mov
jl
pusha
fwait
outs
arpl
fist
ud0
pop
stos
faddp
or
sbb
inc
bound
mov
div
in
les
sar
das
jle
stos
aam
pop
out
ret
push
jno
fmul
rcl
popa
rol
loopne
aaa
pop
cmp
jmp
push
sub
jg
xor
daa
int
adc
cli
sbb
mov
fnstenv
pop
or
(bad)
pop
or
mov
repnz
jns
mov
mov
arpl
pop
out
arpl
adc
jns
mov
pop
iret
icebp
adc
rcl
out
aam
jo
add
mov
cwde
fistp
mov
inc
dec
add
push
cmp
fsubr
mov
jnp
push
stos
push
pop
(bad)
cmc
adc
jnp
(bad)
push
dec
sub
aam
or
dec
push
fucomi
das
mov
jmp
jbe
jg
int3
and
adc
ret
mov
push
mov
out
pop
retf
test
dec
xor
sub
jmp
sar
xor
je
cwde
lea
int
inc
sub
int
fmul
loope
iret
cmps
xor
xor
fiadd
push
fcom
inc
repnz
scas
xchg
push
fs
push
div
popa
nop
out
in
adc
xlat
icebp
imul
test
sub
test
(bad)
mov
rcl
out
or
pop
push
adc
dec
mov
pop
shr
pusha
mov
inc
xchg
inc
push
loope
enter
cdq
xchg
out
adc
sar
retf
movsx
pop
in
dec
cmp
add
cs
mov
lods
jmp
fisttp
out
jo
jp
add
push
or
mov
cld
rol
ds
inc
loopne
mov
sbb
int3
xchg
ficomp
out
mov
xor
pop
mov
mov
out
and
xchg
mov
mov
call
and
jecxz
mov
mov
cdq
cli
push
mov
mov
cmp
push
jo
icebp
sub
push
(bad)
sub
xchg
icebp
repnz
mov
and
pop
movs
jo
xchg
sbb
adc
cmp
mov
push
add
iret
scas
cwde
ins
jnp
std
mov
jmp
pop
jae
inc
in
iret
jns
jne
jl
mov
inc
pop
mov
ficom
inc
sub
pop
fs
mov
mov
sbb
movs
pop
cmps
xor
aas
call
adc
inc
es
popa
stos
xchg
dec
push
mov
xor
test
jmp
aas
leave
sbb
mov
aam
loope
dec
out
mov
jle
sub
xor
fnsave
dec
fisub
add
push
pop
add
or
fst
sar
popf
cmp
mov
pushf
in
sbb
hlt
mov
pop
mov
repnz
icebp
gs
push
(bad)
aad
clc
rcr
fisttp
leave
inc
add
(bad)
movs
test
ror
cli
pop
mov
sbb
sbb
sbb
lods
imul
out
mov
pop
jo
cmp
and
loop
dec
cmp
inc
(bad)
pusha
lods
shl
hlt
dec
xor
inc
arpl
sar
mov
adc
sbb
pop
adc
call
(bad)
fnsetpm(287
mov
add
movs
cli
mov
mov
daa
mov
mov
or
and
ss
push
icebp
std
rol
mov
in
cmps
imul
lods
push
pop
fs
dec
and
scas
jmp
fisttp
sbb
inc
dec
shr
movs
jmp
fcom
push
enter
fdiv
rol
cmps
pop
repnz
or
push
adc
mov
jmp
add
dec
sbb
sbb
inc
and
jg
xor
rcr
scas
nop
cld
mov
xor
arpl
pop
adc
inc
repz
fwait
test
call
pop
jmp
xor
call
es
xchg
mov
sub
pop
mov
xchg
pop
iret
rcr
adc
pop
in
jb
add
xor
sbb
hlt
jbe
call
pcmpgtw
in
cs
cmps
mov
cmp
call
mov
jmp
mov
aam
sbb
push
ret
mov
cwde
push
sbb
fdivr
fistp
xchg
in
cmps
test
xchg
sar
sbb
push
mov
xchg
inc
out
push
xchg
sub
out
test
sbb
std
pop
in
cmp
or
popf
push
jmp
or
dec
cmp
xor
stc
icebp
adc
mov
cmp
lahf
add
scas
das
lods
cmc
js
sub
push
sbb
cld
dec
pop
aaa
add
into
retf
jne
arpl
prefetchw
or
and
and
add
call
mov
popf
or
xchg
cs
js
inc
sub
outs
fadd
or
lds
ror
inc
fdiv
test
add
adc
or
(bad)
retf
stos
in
jle
call
mov
jecxz
add
mov
mov
jecxz
(bad)
jg
ds
cld
pop
push
(bad)
pop
mov
xor
pop
cmps
and
inc
loop
push
xor
pop
push
cmp
sti
inc
call
cmp
in
ror
mov
rcl
fisub
loop
sbb
rcl
mov
jb
mov
inc
mov
jns
cmps
jg
sbb
xchg
in
dec
loopne
outs
ss
and
movs
loopne
int3
nop
mov
mov
xchg
int
ins
adc
into
nop
out
jo
mov
pop
sti
mov
inc
nop
das
adc
loop
shl
pushf
push
enter
and
out
mov
gs
or
fucomi
push
and
adc
(bad)
ja
imul
fisttp
jmp
xor
inc
(bad)
xchg
and
jp
cld
mov
shl
mov
and
fnstenv
ret
pop
cmp
add
fistp
das
(bad)
(bad)
mov
jecxz
es
or
daa
das
adc
mov
sbb
adc
test
dec
call
into
sbb
fdiv
clc
pop
popf
push
rol
js
inc
mov
rcl
fmul
cmp
cmp
sbb
outs
adc
jb
adc
inc
ja
jl
push
rol
inc
dec
push
movs
arpl
sahf
hlt
imul
scas
outs
leave
jg
jmp
imul
xor
cmps
push
sub
or
jno
call
xor
pop
push
lock
cmp
inc
cmps
cmp
jge
sbb
xor
pop
ret
ror
sub
fs
or
fistp
mul
add
jmp
enter
cmp
shr
loop
cmc
mov
loop
daa
shl
xchg
dec
in
ins
cld
inc
xchg
ja
call
cmp
stos
pop
data16
popa
pop
aas
mov
mov
mov
ds
gs
jne
aas
and
cdq
mov
cld
push
jg
push
cmp
mov
out
push
shl
lea
dec
cdq
sahf
fs
sbb
cmp
push
daa
push
push
jb
out
sahf
push
xchg
fwait
in
or
push
mov
and
cmp
addr16
xor
cmc
cmp
xor
sbb
repz
sar
push
(bad)
(bad)
call
jg
lock
mov
sub
out
and
push
add
fsubr
cmp
sbb
dec
jle
daa
jno
outs
das
adc
jnp
sbb
inc
cdq
mov
dec
neg
fxch
les
sub
ins
or
daa
jmp
pop
fstp
push
cmp
std
dec
and
push
mov
mov
and
xor
mov
les
hlt
cli
or
sbb
or
cwde
lock
sti
(bad)
dec
xor
push
jmp
sbb
fs
inc
mov
xor
push
mov
movs
inc
movs
jle
sbb
push
rol
jmp
aaa
lods
jmp
jbe
mov
(bad)
mov
mov
pusha
das
adc
push
outs
test
push
in
test
jbe
mov
ins
int
test
retf
lods
leave
inc
in
aas
movs
xchg
pop
mov
sub
cmps
xor
or
mov
repz
shr
cmp
out
test
mov
and
ret
sbb
repz
pop
jp
repnz
push
lods
cmp
sbb
cmp
cli
cmp
jae
ins
int3
fstp
dec
outs
xor
cmp
push
arpl
pop
and
pop
popf
gs
adc
das
imul
pop
fistp
arpl
(bad)
ret
ds
pop
lock
mov
xor
mov
out
inc
call
call
pop
fcomp
jmp
loope
jno
pop
loopne
nop
xchg
cmp
fs
arpl
xchg
scas
test
test
jo
rol
inc
mov
push
test
mov
or
mov
retf
cmp
push
shr
inc
lods
jmp
cmp
lds
adc
sbb
sbb
mov
dec
movs
mov
loop
(bad)
addps
aaa
(bad)
lahf
add
paddusw
ror
mov
adc
push
or
cmp
sahf
pop
bound
arpl
sub
(bad)
jge
add
xchg
ins
lahf
inc
and
call
inc
sub
leave
xchg
les
outs
loopne
movups
call
ds
sub
pop
xchg
push
mov
mov
sub
call
xchg
mov
mov
inc
push
xor
adc
test
mov
sub
stos
push
adc
hlt
ror
or
out
add
cli
movs
rcl
inc
jo
xor
rcl
push
jb
xor
ret
sbb
jne
or
cmp
sbb
push
je
ror
xchg
ror
jp
(bad)
and
lahf
std
call
sahf
out
pop
push
or
jbe
sub
in
inc
das
mov
sti
cdq
dec
stc
stos
in
xor
adc
mov
and
add
mov
rcl
fsubr
in
dec
out
inc
push
jne
mov
fimul
mov
sti
cmp
gs
cmp
fldenv
xchg
xchg
xchg
rcl
cmp
(bad)
repnz
not
mov
movs
(bad)
push
add
mov
mov
sbb
jo
aaa
xchg
sub
es
iret
lahf
adc
add
xchg
into
ins
xchg
stos
aad
popf
jmp
lods
and
or
sbb
mov
stos
in
sbb
adc
xor
shl
in
adc
scas
xchg
nop
mov
cmps
or
sub
cs
cmp
(bad)
pop
fs
in
ins
fs
mov
(bad)
arpl
pop
pop
xor
or
xchg
inc
dec
sbb
xor
mov
popa
out
retf
(bad)
aas
pop
js
mov
inc
int
xchg
int
dec
call
jmp
sti
stos
cmp
fsub
cmp
inc
ficomp
inc
push
movs
call
ret
scas
cmp
sahf
pop
cmp
fimul
xchg
push
sbb
lods
daa
ret
pop
dec
jmp
pusha
mov
sub
add
stos
popf
cdq
add
pop
push
(bad)
aad
jp
arpl
daa
lahf
jno
jge
movs
fsubrp
push
xor
sub
dec
shl
push
push
mov
fs
xchg
into
out
and
pop
sti
and
adc
jl
aaa
cmps
sar
push
fwait
scas
jb
jae
ficomp
maskmovq
div
imul
stos
cmp
or
(bad)
push
add
or
xor
out
dec
pop
ins
jmp
dec
movs
shl
std
std
loop
mov
mov
lods
sub
sbb
cmp
shl
lds
loop
cmps
icebp
inc
lods
xor
clc
mov
or
mov
into
mov
push
jmp
cmp
aas
les
lods
push
addr16
punpckhwd
(bad)
mov
cmp
adc
cs
or
xor
fmul
jle
inc
xchg
movs
mov
pop
test
int
call
mov
cmp
inc
cmp
jl
xchg
fdivr
jns
sbb
repz
stc
retf
inc
in
xor
int3
cmps
lods
lock
adc
retf
into
sbb
inc
pop
js
retf
mov
push
mov
clc
pushf
and
push
mov
dec
cli
or
outs
jg
xor
out
ds
push
xchg
dec
inc
iret
addr16
out
add
sub
pusha
sbb
leave
inc
icebp
adc
stc
repz
dec
shl
adc
std
call
popa
mov
inc
add
cli
int3
int
call
mov
leave
push
cmp
test
inc
pushf
inc
into
or
mov
sub
scas
pop
cmp
sbb
daa
popa
fsub
sbb
sbb
rol
jae
sbb
out
sbb
cmp
loopne
and
dec
mov
daa
inc
lahf
gs
into
mov
imul
jp
stos
into
inc
movs
stos
jl
sub
mov
mov
popa
shr
pop
inc
out
cld
jmp
cmp
(bad)
push
arpl
lahf
psubusb
dec
jg
sti
xchg
stos
test
out
out
icebp
rcr
jne
dec
dec
mov
add
nop
push
add
outs
jg
stos
mov
cmp
ret
sub
jl
cli
lea
add
scas
cmc
mov
cmp
push
sahf
loopne
jmp
mov
ja
call
bound
int
out
les
call
sti
mov
pusha
pop
int3
hlt
push
call
mov
(bad)
jp
ds
mov
or
push
fadd
das
idiv
daa
lea
movs
sub
(bad)
fbld
fwait
pusha
sub
xchg
out
and
push
mov
jnp
pop
and
fwait
push
imul
and
in
add
and
lea
call
jmp
ins
add
or
(bad)
pop
pop
dec
repnz
inc
and
fcomp
sub
shl
(bad)
mov
mov
push
sbb
mov
inc
or
retf
xchg
mov
idiv
xchg
push
(bad)
dec
orps
ret
sbb
fidiv
test
pop
sbb
mov
jae
xchg
pushf
stos
cmp
fbstp
add
and
push
xor
push
outs
push
mov
adc
add
jg
add
sti
lock
add
jg
jg
cdq
fdivr
movhps
mov
add
add
pop
push
repz
jp
arpl
pop
int
jbe
fnstsw
inc
or
inc
fbld
xchg
hlt
(bad)
loopne
arpl
nop
repz
cmp
aaa
mov
mov
push
movs
sub
imul
xor
outs
dec
inc
fcomp
and
mov
movs
popa
outs
gs
test
stc
je
mov
xor
fmul
in
jmp
mov
inc
dec
or
rcr
loop
sub
xchg
add
ins
xchg
int
mov
jmp
repz
iret
dec
inc
lds
mov
add
hlt
bound
neg
adc
jle
bt
mov
repz
stos
cli
xor
test
mov
nop
cld
fwait
jbe
jne
dec
jecxz
aad
xor
lods
imul
sub
mov
js
sub
repnz
jnp
test
out
push
(bad)
sbb
xchg
les
pushf
jb
imul
in
inc
and
or
rcr
movs
outs
sub
clc
jnp
cwde
loope
jmp
mov
jae
fldenv
xor
inc
mov
(bad)
pop
jmp
mov
mov
push
or
ins
das
push
mov
ret
sub
pop
leave
mov
data16
fcomp
bound
dec
clc
push
ins
sbb
mov
xor
aam
or
push
pushf
xor
xchg
adc
jl
adc
inc
fcom
mov
das
pop
rcl
retf
(bad)
int3
push
jno
adc
adc
xchg
(bad)
in
not
out
jmp
sub
(bad)
ja
mov
std
and
dec
mov
in
pushf
inc
loopne
xchg
cwde
sub
(bad)
inc
repz
sub
cwde
imul
mov
aaa
push
push
je
xlat
je
inc
lods
mov
and
mov
push
shr
jecxz
inc
pop
sbb
or
mov
mov
sbb
icebp
sub
inc
aam
imul
out
jmp
retf
aaa
outs
xor
xchg
std
hlt
aas
jns
mov
test
push
sbb
xor
mov
mov
lock
call
mov
int
dec
xchg
pop
adc
(bad)
sti
xchg
iret
test
imul
test
inc
fld
test
mov
push
arpl
loope
lods
push
adc
or
push
mov
jg
inc
fs
mov
test
dec
mov
mov
pop
sub
lock
mov
push
sets
add
adc
outs
push
retf
cmp
push
aam
push
ret
fisttp
aaa
call
rol
popa
clc
fnsave
(bad)
shl
(bad)
mov
dec
xlat
cmps
adc
test
jle
and
inc
(bad)
dec
les
xchg
jp
push
repz
rcl
jp
mov
xchg
mov
fmul
not
or
out
adc
push
xor
and
jne
cli
lods
xor
cmp
dec
jmp
jle
cmp
(bad)
sti
xchg
add
mov
shl
sbb
stos
or
popa
jp
jbe
pusha
push
hlt
xchg
das
(bad)
cdq
icebp
outs
sub
mov
sbb
sahf
jno
pop
and
mov
mov
outs
sbb
or
pop
xchg
sub
fstp
leave
aad
adc
fidivr
or
xchg
mov
test
and
xlat
(bad)
jl
adc
dec
das
jne
rol
(bad)
cmp
movs
jmp
mov
rcl
pop
xlat
mov
pop
and
fcom
jge
stc
push
inc
xchg
push
and
lods
jg
xor
(bad)
lahf
sahf
jne
rcr
jmp
int3
imul
ret
mov
sbb
xchg
pop
push
mov
cwde
mov
xor
js
and
test
xchg
ror
movs
rcr
mov
xchg
xor
imul
imul
aam
inc
jecxz
dec
dec
mov
xor
retf
cmp
jo
paddd
aad
xchg
call
inc
jle
inc
jg
jno
pop
mov
adc
and
out
dec
mov
shl
movs
xchg
int3
sti
mov
push
loop
aam
rcl
pop
fstp
xchg
mov
xrelease
sbb
retf
in
or
inc
xor
and
in
(bad)
scas
jae
or
jge
cld
and
adc
test
mov
outs
mov
fimul
push
xlat
lods
push
push
adc
push
cmp
xor
push
fmul
test
sbb
cmp
pop
cli
call
rol
fxch
and
add
jb
pop
push
dec
daa
(bad)
dec
pop
pop
jecxz
icebp
std
(bad)
mov
cmp
sub
or
test
sub
aam
ja
(bad)
dec
imul
mov
mov
jecxz
sbb
mov
repnz
or
mov
cli
dec
push
das
in
mov
cmc
(bad)
fiadd
add
adc
xchg
dec
push
into
call
ins
mov
dec
pop
fld
mov
stos
sub
sub
call
xor
and
inc
cmp
pop
dec
int
fbld
sub
into
mov
pop
in
rol
xchg
jmp
scas
mov
jl
in
or
xor
les
test
mov
push
iret
push
(bad)
push
jmp
std
ret
inc
cmp
inc
mov
retf
sub
mov
bound
aaa
ja
mov
pop
mov
add
dec
stos
jns
dec
push
out
add
or
pop
jo
jmp
and
jge
sbb
add
pop
aam
cmp
adc
in
movs
das
or
cwde
pop
in
and
imul
mov
scas
imul
sahf
mov
or
cli
lock
iret
pop
sahf
push
pop
sar
int
test
in
push
pop
inc
retf
mov
push
inc
mov
jae
test
mov
push
dec
lock
or
test
repnz
fcmovnu
(bad)
out
repnz
xor
outs
fwait
push
das
test
push
fild
sbb
addr16
mov
test
sbb
or
sbb
dec
dec
add
push
push
sbb
adc
fimul
shl
aad
xor
inc
rcl
scas
add
pop
inc
or
lods
fcmovnbe
div
jnp
inc
mov
cmps
bound
lods
mov
cdq
adc
jbe
add
mov
pop
mov
cmps
adc
pop
fldenv
xchg
xor
in
mov
cmc
push
push
inc
hlt
stos
sbb
and
fdiv
pop
mov
loop
daa
add
xchg
dec
fsub
adc
cmp
sbb
add
inc
sahf
fisubr
xlat
jno
pop
in
jno
cwde
(bad)
iret
mov
fild
repz
ins
inc
push
hlt
stos
add
push
call
xchg
sub
ret
jae
mov
dec
mov
pop
je
cmps
push
xchg
inc
and
cmp
adc
lods
test
push
inc
mov
jge
cli
and
shl
inc
push
or
adc
aad
shl
rol
xchg
mov
jge
test
sub
frstor
xchg
mov
sub
sbb
sub
cmc
push
icebp
push
(bad)
mov
mov
in
push
lock
popf
rol
push
jle
cmps
pop
mov
or
add
push
stos
xor
iret
mov
cmp
inc
aad
xchg
sub
aad
mov
add
sbb
scas
fistp
jne
jnp
repz
cmps
jmp
cmp
movs
jno
push
js
push
xchg
cmp
cmp
pop
dec
sbb
fbld
jo
fldcw
(bad)
fnstenv
icebp
shl
dec
es
movs
pop
cmp
(bad)
inc
xor
adc
jle
add
xor
ins
jnp
dec
daa
cmp
popa
rcr
adc
inc
ins
dec
add
icebp
xchg
paddsb
ror
scas
icebp
adc
xor
and
xor
clc
nop
push
mov
jle
call
adc
push
ror
pusha
sub
jp
xlat
and
and
jge
lea
call
imul
sbb
ja
movs
jb
int
cli
les
popa
mov
or
(bad)
xor
scas
mov
add
jmp
push
ja
and
push
and
and
dec
cs
mov
inc
or
aaa
xor
(bad)
dec
mov
cdq
push
rcr
or
inc
push
and
pop
xchg
loopne
adc
adc
fist
imul
inc
jmp
out
mov
pop
movs
data16
xor
aaa
sar
out
lods
or
out
sbb
jle
bound
pop
mov
mov
shr
fcmovb
test
test
pop
popa
fcmovb
xchg
lods
or
cmp
out
sub
xchg
jmp
inc
ret
mov
and
sti
and
pop
in
cmp
mov
call
hlt
or
(bad)
mov
loope
cmp
ror
fstp
cdq
xchg
inc
and
outs
ficom
add
cmc
inc
mov
cmp
xor
dec
clc
pop
je
mov
xor
fmul
mov
jns
mov
mov
inc
add
fcmovnbe
scas
in
push
push
fimul
jmp
outs
cld
out
and
inc
jno
stos
inc
add
daa
push
jb
jmp
fcom
mov
and
ins
sub
adc
fstp
inc
inc
out
sbb
xchg
inc
test
cld
mov
inc
test
xor
test
push
ins
sti
lods
mov
mov
daa
(bad)
stc
xchg
ucomiss
lea
push
push
mov
lahf
jbe
push
inc
and
dec
xor
xchg
cmp
into
jge
mov
xlat
jmp
inc
xor
pushf
sub
jmp
pop
add
dec
sbb
and
out
pop
xchg
pop
adc
rol
outs
add
cmp
mov
sub
aam
mov
cmps
pop
sub
or
addr16
jecxz
cld
out
cmp
loop
test
enter
in
xchg
ror
sbb
and
sbb
xor
mov
stos
mov
mov
stos
mov
popf
mov
aad
mov
ins
fyl2x
clc
lds
xchg
mov
and
xchg
popa
mov
cmp
adc
push
dec
inc
lods
out
push
loope
shr
xor
mov
mov
sbb
je
rol
pop
cli
adc
arpl
sub
fidivr
mov
sbb
or
loop
cmps
jl
loop
sub
pusha
adc
int
mov
xlat
xchg
outs
push
(bad)
(bad)
popf
pop
sub
dec
mov
dec
mov
nop
and
mov
test
lds
mov
(bad)
loope
hlt
enter
fisttp
cld
jmp
clc
jg
fwait
sub
(bad)
inc
and
scas
jne
aam
jns
adc
cmp
shr
mov
or
jbe
retf
jmp
lds
jmp
dec
mov
sub
push
sub
jb
lock
ins
data16
or
clc
aad
pop
test
rol
xchg
push
shl
adc
xor
lods
lods
xchg
sub
sub
adc
jns
add
test
sbb
cmp
hlt
jle
inc
add
sbb
pop
call
icebp
mov
ss
mov
dec
jecxz
aam
and
jmp
cmps
or
jmp
add
jo
xchg
je
retf
fisub
data16
call
push
outs
icebp
xchg
sbb
xchg
stos
cli
xlat
xchg
jp
lahf
in
mov
sub
adc
sub
and
(bad)
pop
xor
cmc
stc
xor
nop
dec
sbb
inc
sub
push
or
pop
inc
xor
cdq
pop
jae
pop
sbb
add
fcmove
xchg
xlat
sbb
add
jns
jmp
push
arpl
sbb
jge
punpcklwd
daa
inc
pop
dec
(bad)
cmp
or
push
xor
mov
sbb
dec
mov
dec
mov
unpckhps
scas
dec
movs
sbb
cmp
mov
std
stos
int3
int
aam
mov
mov
dec
push
or
(bad)
aam
iret
adc
or
mov
stc
mov
cmp
data16
mov
inc
bound
or
cdq
inc
adc
xor
enter
fstp
jl
cmps
fst
(bad)
(bad)
sub
leave
xchg
call
cmps
gs
ds
mov
pop
mov
xor
mov
xchg
repnz
jg
stos
sbb
pop
xlat
sbb
imul
mov
cmp
xor
and
inc
ror
std
push
push
aas
test
out
push
loope
fadd
or
dec
lods
mov
mov
aad
loope
pop
push
push
hlt
mov
inc
push
mov
movs
and
push
dec
xor
sbb
adc
ds
jmp
push
cmp
aaa
xor
xchg
sub
fmul
je
add
sahf
pop
sbb
pop
sbb
sar
add
stos
and
xchg
inc
inc
pop
mov
push
xor
fs
stos
or
(bad)
cmp
(bad)
push
in
stos
repnz
test
sub
and
in
sbb
aad
sar
test
adc
mov
jnp
(bad)
lahf
pop
xchg
fnstenv
rcl
pop
icebp
push
sti
inc
pop
imul
cmp
aas
push
fimul
loop
shl
or
cwde
pop
and
mov
aas
mov
dec
frstor
push
and
pushf
adc
(bad)
iret
sbb
in
or
sbb
in
imul
out
mov
add
xor
pop
movs
ss
mov
test
es
adc
inc
dec
mov
xchg
xchg
lock
xchg
or
(bad)
mov
push
push
xchg
mov
cwde
test
mov
jmp
xchg
mov
xchg
mov
jno
pop
dec
pusha
cld
aad
(bad)
rcl
movs
shr
jmp
xchg
jb
scas
cmps
sbb
cmp
pop
sub
xchg
cmp
xchg
arpl
test
mov
std
sti
mov
mov
push
imul
enter
xchg
ss
sbb
(bad)
pusha
mov
dec
jmp
add
aam
fs
call
pop
jge
mov
aaa
dec
dec
cmp
ror
xchg
js
fld
inc
xchg
add
out
scas
cdq
(bad)
ret
or
addr16
cld
cmp
jp
dec
mov
(bad)
in
xor
into
adc
mov
mov
push
mov
dec
add
pop
out
inc
mov
mov
ret
mov
xchg
pop
fisttp
or
or
jge
fldcw
enter
mov
fmulp
and
xchg
sti
jbe
aaa
cmps
dec
pop
and
std
add
retf
sbb
loop
mov
push
add
adc
int3
in
fdivr
fcomp
jne
sub
inc
mov
xor
je
mov
cwde
fnstsw
loope
shr
inc
mov
js
jno
imul
shl
push
int3
iret
cs
and
mov
cli
xchg
inc
stos
or
movs
push
dec
add
and
pop
cmps
mov
jae
sbb
and
es
loope
les
jbe
es
inc
sar
pop
push
cld
aam
cdq
pusha
aaa
pop
jns
mov
lods
pushf
int
test
shr
inc
ret
cwde
in
push
mov
js
fwait
hlt
sub
mov
std
lock
out
shr
lea
lds
ins
out
scas
cmps
add
mov
xchg
jno
pusha
data16
pusha
out
adc
jnp
mov
and
lea
xor
dec
(bad)
ss
mov
cmp
mov
fcmovb
sub
fld
adc
sqrtps
xor
dec
(bad)
pop
nop
push
fwait
cmp
movs
out
movs
mov
jnp
ret
retf
fwait
inc
fwait
mov
popa
push
aad
ret
cli
fist
inc
ss
cmp
pop
imul
mov
jp
add
dec
or
xchg
je
ins
mov
stos
inc
popf
inc
cld
test
sub
xchg
lods
cmp
xor
push
dec
jno
lea
push
mov
setne
inc
mov
movs
mov
pop
(bad)
hlt
sbb
(bad)
stos
out
imul
or
mov
std
pop
lods
jecxz
pop
inc
jae
add
rcr
push
outs
enter
icebp
xor
inc
mov
je
enter
mov
in
jmp
inc
aas
xlat
hlt
mov
xor
push
xchg
inc
mov
or
mov
pushf
pop
and
xchg
xor
cwde
cdq
repz
lahf
xor
fiadd
mov
push
iret
mov
ins
push
retf
test
sbb
jge
xchg
pop
shr
icebp
aad
mov
jb
aam
into
push
mov
xor
inc
pusha
fdiv
ror
aaa
cdq
lods
(bad)
adc
xor
int3
dec
call
ja
leave
das
xchg
or
push
stos
xchg
and
sbb
push
sahf
jmp
scas
in
and
in
xchg
or
movs
xchg
pop
and
dec
icebp
in
and
cmp
shl
fadd
pop
bound
lds
or
push
aad
sub
test
jmp
aam
jecxz
shr
mov
pop
imul
lods
and
stos
stos
jge
call
dec
pop
and
mov
sub
mov
xchg
cmp
sbb
xor
xor
pop
adc
fsub
push
push
fcmovb
and
and
pop
fild
cmp
xor
fucomi
push
repnz
mov
arpl
(bad)
mov
js
pusha
push
adc
inc
jle
pusha
aad
mov
arpl
jp
jle
add
cmps
sub
call
inc
repnz
lock
cmp
pushf
dec
enter
cmps
imul
adc
or
ja
jno
push
pop
ret
mov
call
pop
mov
adc
pusha
js
mov
inc
adc
sbb
jl
dec
pushf
pop
dec
mov
mov
mov
cmp
arpl
adc
and
cmps
cmp
mov
inc
ins
inc
loop
mov
jmp
inc
jb
xor
push
or
jl
cmp
sbb
mov
stc
cmps
xor
inc
hlt
dec
inc
mov
fnstcw
jbe
fidiv
mov
mov
xor
inc
and
jns
jne
pop
repz
xchg
jno
jl
les
jp
(bad)
cdq
gs
sti
call
xor
mov
mov
test
pop
or
ins
push
sbb
mov
loopne
mov
sahf
adc
in
jne
test
add
xchg
jns
xchg
jmp
(bad)
repz
push
push
cmp
inc
aas
sbb
loope
imul
xchg
pop
pop
fnstcw
sbb
popa
lods
push
outs
(bad)
out
xor
push
sbb
(bad)
int3
shl
lahf
xor
cli
pop
lds
fst
mov
(bad)
xchg
in
fdivp
add
and
fadd
and
lahf
push
and
jmp
fistp
ja
pop
popf
stc
ins
loop
lods
dec
xchg
mov
jbe
push
sub
imul
pop
cmp
xchg
push
gs
inc
inc
(bad)
xchg
or
adc
jbe
xchg
dec
push
ret
dec
push
ja
(bad)
into
(bad)
loope
sub
aaa
and
stos
push
sbb
add
lock
scas
enter
lds
push
mov
xchg
jp
fistp
add
xchg
popf
jmp
xchg
dec
in
push
ins
and
xor
lock
jns
arpl
pop
mov
retf
add
fwait
jg
pop
div
test
cwde
and
mov
cmp
pop
adc
cmc
shl
add
xchg
mov
lods
cmp
leave
xor
push
or
in
call
loopne
mov
dec
and
lds
repz
rcl
cs
sahf
ja
pop
lea
sbb
dec
pop
mov
bound
js
mov
add
jmp
or
xlat
jae
leave
sbb
aam
mov
xlat
mov
in
cmp
inc
dec
test
and
sub
jmp
xchg
push
and
mov
xor
aam
xor
pop
xchg
push
sub
loop
ja
mov
sbb
test
sub
push
fcom
sub
or
dec
xor
inc
(bad)
outs
push
(bad)
mov
stos
adc
xor
jecxz
fsub
gs
push
sar
ja
les
push
push
cli
out
xchg
in
js
and
or
pop
idiv
leave
mov
out
scas
adc
stc
pop
inc
push
sahf
std
inc
int3
xchg
div
mov
leave
ret
jbe
xor
jle
sub
dec
mov
xchg
test
add
pop
xchg
movs
mov
push
cli
popa
dec
ins
sbb
lock
and
pop
push
jg
pusha
hlt
inc
dec
mov
test
gs
inc
adc
popf
out
pop
add
(bad)
cmp
(bad)
cmps
push
stos
fadd
cmps
test
cmp
jecxz
dec
xchg
js
enter
cdq
and
in
data16
sbb
inc
adc
mov
lahf
sub
fcomp
or
int3
mov
loopne
cli
push
ins
add
dec
fidivr
arpl
mov
and
fwait
movs
shr
pop
lahf
aam
addr16
mov
mov
jg
div
ror
std
test
fcomp
pop
fwait
dec
xchg
inc
(bad)
popa
xlat
in
mov
xchg
aas
lea
xchg
aaa
push
aad
out
iret
outs
adc
popf
xchg
retf
sahf
mov
xlat
pop
sbb
fadd
inc
aas
pop
sub
hlt
ins
repz
push
retf
fnstsw
idiv
fucom
mov
push
mov
xchg
movs
push
mov
push
cs
sbb
xchg
mov
pushf
jmp
jmp
mov
or
mov
xchg
data16
out
mov
dec
and
in
add
xchg
aaa
(bad)
std
sti
cmp
repz
popa
xlat
cmp
stos
fist
cwde
(bad)
pop
sbb
xchg
arpl
nop
pop
cld
add
(bad)
xchg
jge
xchg
jno
cli
in
std
inc
xor
das
add
push
(bad)
(bad)
and
adc
ror
sbb
sbb
and
dec
xor
or
xor
xchg
fs
or
jns
daa
movs
xchg
mov
pop
jns
imul
pop
mov
jmp
cs
ins
jne
mov
in
pop
mov
int3
cmp
mov
cmps
inc
(bad)
das
shl
je
mov
out
pop
and
jns
lods
sahf
retf
push
mov
pusha
dec
arpl
adc
enter
test
ret
rol
cmp
call
cmp
mov
lock
cmc
mov
loopne
xor
adc
jmp
and
enter
mov
inc
clc
out
pop
mov
jge
xchg
cmps
lock
xchg
data16
ss
pop
nop
and
shl
sbb
outs
ror
(bad)
xor
das
leave
(bad)
in
xchg
ret
push
and
fsub
push
fsin
mov
jmp
add
dec
sub
enter
aas
ret
pop
out
in
rcr
sti
mov
and
iret
adc
sbb
imul
daa
nop
or
xlat
cmp
mov
ficomp
loop
jl
xchg
mov
xchg
scas
pop
inc
and
ret
pop
jmp
pop
pop
jb
into
arpl
scas
push
adc
mov
sbb
loop
jae
ss
shr
mov
(bad)
fsubr
ret
cmps
lds
out
out
push
movs
loope
adc
push
psubsb
push
jmp
les
stos
jp
out
inc
repz
jbe
ins
inc
adc
in
inc
loope
mov
test
adc
sub
mov
dec
sub
fist
nop
or
sar
stos
jns
div
and
jmp
(bad)
pop
loope
loop
cmc
and
add
inc
cmc
dec
jp
and
push
push
pop
ret
pusha
adc
pop
arpl
mov
push
dec
xchg
movs
inc
jg
ret
test
sbb
call
imul
sar
out
movs
daa
mov
popf
loope
ds
dec
push
or
sub
push
leave
add
xor
retf
mov
in
push
les
(bad)
cmc
add
xchg
out
push
jmp
sub
add
stos
fidivr
fsubr
and
int
jle
cmp
inc
cli
and
mov
cmp
test
loopne
nop
gs
shl
pop
push
dec
(bad)
jle
push
in
cmp
aaa
enter
arpl
lock
mov
ret
fmul
jnp
xor
fs
test
(bad)
fwait
and
pop
ret
jle
cli
mov
inc
lods
add
fwait
mov
inc
nop
in
and
inc
jns
out
xchg
adc
inc
jbe
clc
pushf
stos
out
pop
aaa
dec
pop
sub
(bad)
es
not
mov
movs
mov
loop
daa
arpl
pop
and
pop
in
jae
rol
jecxz
lock
adc
dec
iret
push
mov
adc
out
mov
inc
mov
xchg
xor
and
sbb
nop
and
(bad)
ds
xor
movs
inc
adc
data16
mov
stc
pop
adc
jo
push
or
mov
mov
xchg
xor
jl
enter
out
lea
adc
mul
scas
xchg
mov
(bad)
jae
cmp
mov
loope
dec
js
pop
adc
xchg
repnz
fwait
stos
arpl
adc
xchg
pop
gs
sub
push
(bad)
cmp
xchg
mov
inc
mov
mov
stc
call
push
test
fiadd
mov
jge
pop
imul
sub
push
adc
sub
pop
cmc
mov
hlt
push
cmp
movs
mov
mov
add
pop
ds
movs
xchg
add
lds
repz
mov
imul
test
dec
aad
jb
(bad)
fwait
loopne
push
lds
dec
cmp
dec
shl
into
jp
sub
(bad)
sbb
jmp
fld
popf
sar
dec
data16
popf
push
add
out
sub
mov
in
pop
or
fistp
and
dec
inc
leave
pop
jno
sbb
enter
mov
jmp
push
push
daa
or
out
and
retf
retf
imul
xor
(bad)
xchg
mov
mov
shr
jnp
add
int3
or
(bad)
push
rcr
test
xor
push
test
mov
retf
mov
push
and
jp
pop
cdq
push
int3
mov
push
xchg
and
jl
xchg
push
out
(bad)
jbe
addr16
mov
or
xchg
jge
push
adc
cli
sub
jnp
mov
(bad)
in
retf
mov
xor
lods
out
sub
dec
adc
out
jb
fild
xor
push
(bad)
dec
enter
mov
push
mov
imul
(bad)
aam
dec
dec
hlt
fistp
(bad)
push
inc
mul
ins
inc
jo
mov
repnz
stos
dec
mov
sbb
push
xchg
fisttp
mov
test
fmul
push
xchg
sbb
icebp
call
sbb
jmp
mov
mov
xchg
pop
lea
ja
mov
shr
imul
xchg
dec
sbb
add
les
jge
das
push
or
sub
bound
out
dec
call
cmp
dec
ret
std
cmp
add
stc
sub
lock
(bad)
in
(bad)
sbb
sbb
int
(bad)
fadd
cs
loope
or
pop
repz
sub
dec
loopne
outs
cmp
add
fmul
jae
push
mov
test
mov
mov
add
xor
pop
dec
gs
push
sbb
and
jg
bound
jge
xchg
mov
ja
or
push
das
push
mov
inc
hlt
ret
test
push
mov
pushw
xor
push
jns
and
lahf
data16
cmp
push
jno
pop
imul
cdq
in
(bad)
outs
mov
jmp
cmp
neg
neg
and
addr16
sub
or
data16
jmp
lods
push
jnp
add
adc
lock
cld
sub
loope
fsubr
sahf
jmp
cmps
xor
mov
ins
lods
les
test
loop
dec
mov
jp
sar
scas
inc
ret
movs
test
in
test
xchg
push
popf
addr16
(bad)
out
jae
int3
xor
push
arpl
and
sub
inc
test
loope
jmp
ja
cmps
scas
adc
aaa
mov
xchg
clc
ss
les
dec
xchg
cmp
mov
and
add
in
sub
adc
ror
add
aaa
add
or
xchg
push
les
ja
ds
jno
and
mov
or
je
pop
xor
es
popf
and
inc
in
and
les
sub
mov
xlat
push
imul
fsub
cwde
inc
test
and
jge
inc
inc
sub
inc
and
mov
mov
out
call
jp
(bad)
stc
adc
movs
repnz
pop
xor
out
pop
test
push
cmp
add
mov
dec
add
adc
ret
dec
fs
inc
or
jle
pop
mov
rol
jne
jno
cmps
aam
lea
sbb
sbb
movs
push
push
adc
aam
repz
sub
add
sub
add
pcmpeqw
or
jle
mov
add
dec
loop
mov
leave
sub
iret
mov
in
mov
outs
xor
sub
jl
jge
hlt
icebp
imul
inc
out
sub
or
mov
ret
xchg
push
adc
jns
inc
mov
retf
scas
xchg
inc
pop
sub
int3
sbb
mov
fwait
in
(bad)
xchg
sar
or
mov
inc
xchg
inc
mov
jns
aas
jmp
inc
dec
popf
test
cmp
adc
inc
popa
arpl
mov
pop
cs
leave
xor
shl
fxam
jg
bound
xor
xor
loope
mov
mov
push
sbb
pop
jmp
pop
or
sti
sbb
mov
jae
idiv
and
pop
mov
ror
xchg
push
das
mov
imul
shl
jnp
jno
repz
jnp
push
fimul
push
inc
mov
in
pop
or
dec
jnp
sbb
gs
adc
mov
loope
daa
daa
xchg
cmp
add
mov
cmp
pushf
cmp
mov
je
cmp
lds
jmp
in
je
xchg
in
sbb
cs
pop
outs
loope
sar
jg
xchg
outs
mov
mov
inc
rol
lods
or
push
pop
ds
loopne
adc
mov
push
xchg
cmp
cmp
jg
(bad)
pop
jbe
ret
(bad)
fmul
dec
push
ds
stc
dec
loop
in
cmps
popf
in
pop
mov
out
bound
(bad)
mov
push
pop
adc
(bad)
std
adc
(bad)
test
rcr
icebp
inc
mov
push
dec
stc
movs
inc
int
cld
lock
sub
movs
add
xchg
jmp
push
test
push
xchg
mov
adc
push
mov
lds
out
fwait
jo
add
jbe
cmps
outs
retf
imul
cs
xor
xor
or
cwde
adc
stos
shl
push
ins
arpl
rcl
xor
jecxz
cs
jne
or
cmp
(bad)
cmp
test
mov
cs
jmp
shl
loopne
sub
mov
push
sbb
inc
push
pop
cmc
arpl
xchg
inc
das
xor
loopne
sub
in
dec
mov
jecxz
loope
lods
mov
xchg
mov
mov
push
pop
aam
pop
inc
fxtract
mov
aam
mov
inc
push
push
add
scas
sbb
mov
js
xor
(bad)
jnp
adc
add
and
jmp
cmp
xor
mov
(bad)
xchg
mov
cmp
and
add
push
or
scas
imul
into
mov
sub
or
cmp
mov
cwde
xor
aas
xchg
dec
jbe
call
adc
stos
xchg
dec
mov
inc
push
out
inc
fsub
pop
jl
adc
outs
ins
int3
cmp
and
outs
leave
cmp
out
push
mov
outs
adc
outs
and
push
cmp
cmc
fcomp
mov
add
lds
(bad)
mov
test
es
push
addr16
mov
and
xchg
das
mov
fld
mov
jns
retf
push
fild
loopne
cmp
sub
loopne
cmc
xor
aad
xchg
ins
hlt
lds
and
stos
push
dec
xor
pop
jne
lods
mov
ret
pop
leave
push
mov
mov
fld
mov
inc
sbb
pop
fmul
sub
push
push
mov
cmp
lock
ins
(bad)
mov
stc
push
xor
dec
mov
xchg
imul
je
dec
pop
inc
addr16
ret
dec
dec
jno
push
mov
stos
ficomp
xor
add
lods
mov
jp
mov
mov
xchg
(bad)
in
gs
dec
add
(bad)
out
out
ins
(bad)
call
mov
fucomip
dec
retf
push
add
test
or
mov
cmp
sub
or
dec
in
ret
call
fidiv
fwait
imul
inc
cs
aam
aaa
jp
adc
xchg
fs
and
aam
lock
rol
das
loop
sbb
dec
jmp
lds
dec
inc
div
xor
sbb
mov
push
dec
adc
sub
es
dec
cmps
or
sub
leave
inc
cmp
push
inc
fwait
outs
cli
addr16
fdiv
push
sbb
jno
sbb
fnstsw
adc
in
stc
fwait
mov
push
mov
jb
aas
fisubr
push
sti
daa
xchg
jns
scas
dec
mov
je
call
leave
fisttp
mov
add
inc
rol
call
adc
jmp
stc
movs
pop
sahf
sbb
test
int
jmp
(bad)
xor
xor
and
sub
inc
mov
lods
iret
(bad)
(bad)
inc
pop
cmp
fwait
mov
mov
mov
inc
gs
or
xor
pop
movs
fsub
mov
pop
push
jne
inc
rcr
xor
pop
xor
dec
hlt
add
push
lods
mov
mov
enter
leave
hlt
ret
push
add
(bad)
cmp
frstor
icebp
xor
test
xchg
int
ss
pmulhuw
stos
mov
push
push
sbb
ret
iret
int3
or
ds
fimul
fcmovnb
loope
cmp
xor
xchg
add
in
sti
(bad)
loopne
mov
scas
test
scas
gs
imul
adc
dec
xchg
hlt
test
xor
adc
jmp
imul
sbb
add
xchg
fiadd
inc
mov
fnstcw
adc
and
shl
setns
scas
adc
test
mov
sahf
movs
popf
push
push
mov
inc
ret
and
push
cmp
pop
cmp
aaa
test
test
xchg
lods
cld
stos
adc
pop
sub
adc
push
or
ja
mov
pop
jo
inc
not
jae
or
imul
das
adc
int3
div
inc
xchg
mov
or
mov
or
pop
(bad)
xchg
mov
xchg
or
pop
dec
mov
jmp
int3
fisub
push
or
pop
mov
and
and
daa
adc
loop
jbe
xor
sbb
(bad)
stos
outs
or
pusha
mov
mov
mov
cmc
das
adc
mov
es
mov
popa
jns
lock
xchg
(bad)
scas
push
ds
loop
mov
arpl
lds
outs
sbb
xlat
push
out
mov
shl
hlt
mov
or
ja
cmp
cmc
out
jl
jns
mov
mov
lods
lock
movs
jo
sub
xor
mov
pop
pop
xchg
and
adc
add
pop
xor
mov
sbb
mov
out
(bad)
jmp
xchg
and
mov
mov
jb
jl
dec
cmp
sub
jmp
std
mov
inc
mov
cmc
addr16
(bad)
mov
fldenv
pop
jg
push
movs
and
jns
inc
ins
mov
jp
shr
jnp
push
xchg
gs
bound
pop
ret
jne
lea
adc
icebp
repz
jge
scas
or
loopne
pop
push
call
and
mov
pusha
popa
jecxz
add
in
mov
shl
clc
add
fnsave
mov
mov
fdivr
cmps
xor
mov
loop
and
test
push
cld
mov
test
mov
fidiv
mov
jae
inc
cmps
icebp
push
in
or
pop
jo
xor
add
rol
out
mov
out
(bad)
or
mov
and
dec
and
(bad)
mov
out
jecxz
(bad)
in
sti
add
cwde
cmc
adc
sahf
movzx
push
pop
or
mov
loope
inc
cmps
add
jmp
iret
mov
dec
or
aam
dec
aas
inc
outs
adc
sbb
sbb
xchg
and
cmp
jl
mov
popf
jns
cli
xor
and
mov
shr
ja
jg
sbb
dec
aad
ja
retf
daa
adc
push
xchg
stos
jmp
push
out
sub
data16
out
std
inc
mov
cmp
adc
lea
jle
push
ss
dec
lea
cdq
outs
cdq
mov
pop
and
jge
sbb
rcl
fst
stc
inc
push
hlt
outs
cmp
jnp
mov
cmc
mov
jno
(bad)
in
jno
pusha
jns
jecxz
rcl
xor
sahf
scas
clc
jmp
mov
jmp
das
pusha
shr
mov
loopne
mov
jnp
adc
movsx
add
xor
xchg
inc
and
adc
jmp
in
mov
xor
or
or
call
ror
mov
or
ja
adc
lock
out
ins
dec
aad
push
imul
retf
jg
jbe
mov
fprem
push
and
and
jns
sti
sub
sbb
out
adc
xor
bound
repnz
popf
mov
in
movs
mov
(bad)
mov
and
int3
cmp
dec
loopne
movs
push
xchg
and
cdq
mov
test
jmp
in
push
sbb
fsubr
fild
mov
mov
repnz
outs
dec
fisttp
stc
ret
sbb
sbb
cmps
jle
lea
jne
aas
sbb
imul
dec
xchg
(bad)
sub
jle
xchg
bound
xor
or
dec
ret
cmp
mov
add
shl
iret
inc
outs
jecxz
or
cmp
push
adc
(bad)
jmp
dec
loop
jo
jbe
pop
add
loop
mov
mov
xchg
lahf
pop
push
dec
test
sub
push
inc
mov
imul
cmp
xor
push
lock
mov
fisub
dec
aaa
aad
mov
scas
int3
out
(bad)
imul
jmp
or
addr16
clc
retf
test
jae
and
pop
sar
add
jl
in
inc
push
ficom
jbe
cmc
mov
pop
int3
mov
mov
push
mov
clc
jno
movs
sbb
pop
call
mov
xor
nop
bnd
adc
xor
adc
push
loop
sbb
bnd
test
push
scas
inc
aaa
jo
sbb
push
sti
loope
sar
or
ds
adc
pop
add
out
dec
icebp
shr
loope
test
shl
ins
in
popa
cmp
and
repnz
pop
retf
cmp
jecxz
push
jno
mov
ja
test
adc
jb
adc
sub
shr
adc
pop
xor
mov
ja
scas
sub
mov
add
pop
sbb
xor
inc
or
inc
inc
retf
clc
cmps
add
dec
push
das
call
push
mov
cmp
rol
loope
and
(bad)
std
mov
mov
mov
and
clc
hlt
push
stos
fimul
cmp
sahf
out
outs
jbe
cdq
es
jecxz
add
or
pushf
je
(bad)
bound
stc
mov
dec
in
outs
push
pop
fxch
sbb
pop
ret
dec
div
cmp
(bad)
out
outs
sub
in
lea
mov
push
jmp
les
pop
mov
adc
pushf
push
push
mov
pop
jl
push
mov
adc
jmp
sbb
dec
mov
mov
and
or
mov
lods
mov
div
and
nop
adc
cwde
ja
(bad)
mov
(bad)
cld
iret
jp
inc
frstor
mov
ins
repz
call
inc
mov
add
and
ret
mov
cmps
shl
pop
out
inc
add
lds
dec
and
hlt
loopne
aam
cmp
(bad)
fcmovnbe
fsubr
ins
add
das
pop
and
mov
sub
ror
mov
mov
outs
call
(bad)
mov
add
mov
cdq
repz
rcr
pop
ja
outs
xor
outs
test
scas
xor
leave
push
ret
ins
push
repnz
sub
ror
div
inc
fcmovne
mov
xchg
loopne
push
inc
out
out
mov
out
sub
pop
inc
fild
lahf
add
sbb
jmp
test
loopne
push
xor
lods
lods
cwde
adc
push
push
sbb
sbb
add
push
clc
retf
(bad)
fdivp
in
or
mov
cmps
push
pusha
out
js
iret
pop
dec
popa
mov
popa
paddsw
loopne
dec
jl
pop
hlt
mov
sub
out
fiadd
xor
rcl
out
adc
test
movs
loop
or
repz
mov
dec
adc
outs
jo
lock
loope
leave
mov
cmp
xchg
int3
cmps
cdq
pop
mov
aaa
das
ror
push
test
xor
pop
loope
cdq
cmp
(bad)
repz
les
nop
pop
cdq
test
gs
call
fsub
daa
dec
scas
jmp
add
loopne
inc
cmp
clc
mov
jp
sbb
pop
xchg
pop
adc
vunpcklps
dec
or
pop
xlat
int
dec
and
shr
pop
adc
in
pop
(bad)
pop
xchg
call
fisttp
push
(bad)
(bad)
sbb
push
or
or
xor
mov
(bad)
mov
pop
shl
xor
add
addr16
dec
mov
stos
sbb
lock
pop
sub
ror
aas
out
in
or
mov
mov
jne
iret
push
pop
popa
mov
das
ds
pop
fidivr
icebp
das
inc
fcom
dec
addr16
sub
or
cmp
push
add
sub
push
dec
shr
jg
jne
pop
ror
ins
(bad)
and
clc
dec
xor
jl
push
loopne
bound
mov
adc
dec
inc
je
in
mov
into
mov
fld
cmp
movs
imul
jbe
scas
cmp
fidivr
add
shl
ss
mov
mov
cmp
adc
movs
push
pop
inc
ret
(bad)
call
(bad)
pusha
xchg
or
loop
push
fdiv
lods
ret
stos
mov
sbb
push
leave
rcl
xor
in
push
pop
jae
pop
mov
not
and
cli
cmp
ret
and
dec
dec
test
mov
mov
jle
ret
jnp
mov
xchg
sub
pop
gs
mov
mov
cmp
push
(bad)
(bad)
lds
sar
jae
(bad)
out
xchg
mov
dec
scas
sub
sar
xlat
in
stos
(bad)
xchg
test
cmp
pop
arpl
movs
dec
or
mov
pop
dec
push
and
adc
sbb
dec
(bad)
xchg
(bad)
lods
sahf
dec
xchg
jno
ret
and
mov
or
sub
popa
imul
movs
jbe
mov
jo
jnp
push
fmul
pop
mov
add
sar
cmp
xor
cmp
shl
xchg
iret
test
sub
mov
cwde
adc
fisub
add
in
mov
inc
pop
jb
xor
(bad)
mov
dec
push
aas
(bad)
aad
jae
cmp
jl
push
xor
sbb
bound
add
dec
call
mov
mov
js
call
dec
adc
push
inc
xor
std
pop
xchg
cmc
nop
xchg
fsub
call
jno
pop
jmp
add
fcom
pop
fmul
and
adc
(bad)
into
dec
or
dec
cmc
xchg
dec
inc
movs
add
adc
inc
aam
xor
mov
pop
dec
and
push
mov
ins
sbb
add
out
aad
pop
nop
je
xor
imul
adc
xchg
fld
cmp
jnp
xchg
mov
pop
pop
sbb
fcom
inc
sbb
nop
mov
jge
cs
call
cmp
cmc
mov
jmp
movs
shr
mov
xlat
mov
js
iret
arpl
dec
mov
div
mov
out
in
inc
or
movs
out
dec
and
and
out
mov
call
out
dec
outs
cmp
mov
shl
dec
ret
jno
fmul
pop
xchg
jmp
mov
inc
adc
nop
xor
enter
xchg
pushf
sbb
adc
out
lock
mov
out
lods
or
pop
xor
in
push
jo
dec
(bad)
gs
add
adc
test
fnstcw
fcom
jns
pop
ja
mov
inc
adc
pop
leave
mov
in
or
jnp
cdq
cld
jmp
ds
jge
xchg
jbe
in
ficom
enter
leave
inc
xor
(bad)
jo
aaa
ror
outs
imul
mov
in
retf
aad
aas
in
in
popa
push
movs
rcr
test
add
movs
stc
mov
jecxz
mov
adc
mov
jmp
cmp
sub
pusha
out
jno
loopne
out
es
mov
cwde
pusha
ds
push
xor
sub
inc
push
pop
pushf
call
push
stc
xor
fs
mov
xor
ins
mov
sub
(bad)
mov
mov
jmp
cs
sub
jo
xchg
cmp
in
mov
jl
or
in
mov
inc
pop
xor
sub
and
enter
scas
sub
ins
jb
(bad)
mov
aad
push
out
cmp
add
outs
rcl
sub
clc
out
cmps
xchg
push
mov
mov
lods
icebp
pop
out
call
pop
xchg
(bad)
sbb
fisubr
jne
inc
icebp
sbb
jecxz
push
add
lock
push
cmp
in
sbb
daa
or
mov
int
lock
and
cmp
pop
lock
dec
(bad)
xchg
fiadd
xchg
das
ja
mov
popa
(bad)
xor
pop
or
adc
in
or
data16
adc
sahf
sub
mov
les
sbb
(bad)
es
xchg
mov
jo
out
jmp
push
cmp
int
xor
shr
ret
lahf
jns
fcomp
jns
cli
sub
pop
nop
mov
pop
sbb
mov
sti
inc
pop
xchg
cmc
not
xchg
leave
shl
add
lahf
xor
shl
popf
rcl
data16
fist
imul
push
and
repnz
(bad)
dec
loop
clc
sahf
mov
retf
sti
xchg
xor
jmp
jle
dec
dec
mov
sub
(bad)
aam
push
xchg
mov
jno
jg
popa
ret
jge
jge
push
xchg
cmovo
imul
mov
xchg
daa
jo
mov
jmp
add
or
shl
nop
jo
cmc
push
(bad)
loope
dec
inc
xchg
mov
dec
xchg
xchg
loopne
sahf
in
push
leave
out
push
(bad)
mov
(bad)
fisubr
outs
dec
cmp
sub
cmps
test
pushf
scas
(bad)
dec
jb
std
pop
lods
mov
fdivr
and
and
retf
push
ror
scas
shr
and
add
mov
xchg
jbe
or
xchg
xchg
push
jnp
xchg
fucomip
ins
loop
cs
out
adc
int
es
xor
adc
lea
mov
jne
test
pop
and
shr
jg
or
nop
add
bound
jmp
mov
add
fs
enter
cmps
lahf
mov
(bad)
jb
ja
xor
sbb
ins
inc
repz
dec
cmp
sbb
(bad)
fwait
pop
ins
cmp
mov
lods
div
push
xor
loop
or
mov
pop
cli
inc
into
out
outs
and
neg
jmp
sbb
inc
xor
jo
movs
fadd
cmp
aaa
push
or
or
aam
movs
jecxz
pop
push
in
push
and
pop
ret
xor
or
call
xor
dec
cmp
(bad)
loopne
sub
mov
add
xchg
aam
dec
push
cdq
add
push
mov
nop
retf
cmp
das
aas
jae
and
mov
outs
jecxz
mov
adc
sub
(bad)
sbb
inc
dec
ret
std
mov
adc
repz
ror
je
loope
fcom
sub
ja
pop
add
pop
xchg
and
mov
jge
sub
mov
rol
push
ja
push
js
ret
pop
xchg
xor
add
add
(bad)
mov
dec
std
out
arpl
lods
ret
(bad)
fidivr
pop
out
mov
stos
adc
or
add
cmp
xor
mov
aas
into
dec
shl
mov
ins
inc
cmp
out
pop
lahf
mov
movs
retf
movs
and
push
push
and
fistp
fimul
add
jae
sti
jp
iret
or
enter
ror
lods
sbb
out
mov
fdivrp
es
in
sub
adc
cmp
stos
pop
push
(bad)
in
(bad)
cmp
fcomp
xor
ror
cmp
mov
mov
clc
ret
cmp
push
fild
or
xchg
loopne
out
jno
xchg
pop
js
out
into
and
xchg
adc
push
xchg
out
push
lea
ins
mov
xchg
pop
scas
mov
lock
sub
in
lea
sbb
pop
push
mov
test
mov
cmp
pop
call
pop
daa
cmp
nop
mov
mov
pop
add
and
mov
popf
fsubr
popa
sbb
test
sar
jecxz
sbb
loopne
bound
or
(bad)
mov
xchg
ins
gs
cwde
sbb
rcl
lahf
fldpi
jmp
sub
test
pop
lahf
push
and
cwde
adc
stc
shl
pop
sub
test
fisubr
pop
hlt
sub
pop
and
push
or
pushw
bnd
movs
pop
scas
clc
cmp
popf
sar
(bad)
repz
xor
pop
mov
and
test
and
mov
rol
out
add
int
loopne
sbb
sub
or
out
xchg
clc
test
fnstenv
push
cli
or
div
push
ins
ds
pop
push
xchg
rcr
sbb
lods
or
sub
jmp
shl
ja
cmp
dec
shrd
cmp
lahf
je
push
mov
test
adc
icebp
imul
pusha
ins
cdq
in
xchg
movs
or
dec
das
dec
inc
aas
push
test
movs
(bad)
stos
int3
(bad)
in
imul
fmul
xlat
repnz
or
and
mov
inc
cs
xchg
fidivr
adc
xor
ins
mov
push
and
js
repnz
xchg
dec
pusha
push
xchg
cdq
or
jbe
je
push
lods
sub
jmp
dec
sbb
pop
inc
mov
out
push
icebp
cmc
add
aas
pop
or
fwait
mov
mov
xlat
imul
icebp
add
rol
sbb
(bad)
cmp
cmp
push
in
adc
ret
pop
lods
pop
cli
mov
and
leave
ror
mov
cmp
fs
mov
cmp
arpl
cmp
adc
cmp
cmp
and
cmp
data16
mov
das
mov
sar
dec
xchg
xor
add
in
mov
pop
jne
fbld
add
sbb
mov
push
jmp
or
sub
std
or
mov
das
or
adc
push
std
xchg
jg
outs
bound
in
or
cmp
adc
sub
call
jecxz
and
adc
xlat
lock
shr
push
stos
leave
mov
loope
mov
(bad)
popa
nop
popf
shl
fnstcw
retf
mov
sbb
push
adc
cwde
jle
cmp
dec
maxps
mov
adc
mov
popf
push
pop
sar
mov
sbb
cwde
mov
(bad)
std
jmp
or
adc
or
out
je
sbb
aam
jo
xor
add
mov
push
xchg
mov
jl
test
out
js
out
loop
lahf
adc
loopne
jo
fnstenv
cmp
pop
xchg
and
push
stos
std
xor
out
sbb
test
inc
and
shr
fiadd
dec
or
push
imul
movs
mov
imul
(bad)
mov
loop
push
bound
xchg
dec
xchg
ret
dec
jo
mov
mov
dec
mov
jb
sahf
xlat
ins
bound
cli
and
outs
arpl
xor
add
xor
(bad)
mov
repz
dec
adc
inc
jecxz
cmc
arpl
bnd
test
rcr
jge
cmp
xchg
dec
pusha
push
add
out
and
pusha
mov
bound
dec
push
ja
sti
fnstenv
nop
into
icebp
mov
push
pop
in
loope
movs
jne
jnp
ja
or
test
sahf
imul
sbb
adc
or
cmps
(bad)
push
mov
sub
mov
xchg
add
ret
aas
mov
push
pop
into
mov
mov
ret
not
push
arpl
mov
sub
xor
stos
movs
xchg
add
mov
pop
add
retf
data16
popf
loope
or
loopne
jl
fld
sub
dec
cmps
into
mov
sbb
mov
and
pop
ins
ror
(bad)
or
mov
bnd
inc
cli
jge
(bad)
mov
sahf
pop
sub
jp
sub
jo
(bad)
xor
(bad)
mov
mov
repz
nop
push
xor
push
and
ret
mov
stos
jmp
call
jl
lds
cld
sub
add
test
sar
cmps
jno
je
fcom
push
sti
and
xor
test
jbe
iret
jmp
mov
rcr
hlt
stos
sar
mov
test
(bad)
push
push
lods
mov
(bad)
cmp
inc
ja
jnp
mov
es
xchg
add
test
dec
stos
mov
mov
jmp
sbb
cmps
push
mov
shr
(bad)
out
into
push
outs
jmp
je
or
stos
inc
sub
mov
mov
jo
mov
ret
inc
adc
inc
adc
lds
imul
cdq
dec
jmp
ja
push
neg
hlt
push
xchg
addr16
mov
icebp
mov
div
push
jecxz
dec
push
mov
shl
and
sbb
jg
jmp
pop
and
dec
xor
aaa
sub
iret
or
call
dec
mov
ja
sub
sub
sbb
iret
push
jnp
adc
and
jb
test
pusha
mov
popf
mov
push
jmp
jp
(bad)
mov
adc
fwait
loopne
xor
fcomp
inc
in
push
js
ja
mov
xchg
cdq
shl
call
xor
and
mov
or
jp
or
push
pop
xchg
inc
adc
in
or
iret
sahf
push
sub
cmp
loope
imul
cmc
pop
sbb
dec
cmp
add
in
(bad)
out
push
adc
push
dec
scas
scas
popf
test
sub
ret
outs
mov
mov
aam
jle
mov
in
mov
aas
xor
add
push
cmc
xchg
push
std
cdq
sub
sub
cmc
xchg
jo
cmc
inc
cmp
mov
fisttp
pop
loope
stos
imul
rcl
jl
bound
pop
out
js
call
pop
in
stos
pop
and
add
dec
cmps
dec
jp
xchg
jae
sbb
ss
mov
ins
sub
xchg
mov
sub
imul
mov
sti
adc
test
inc
fwait
rol
lods
and
into
in
sbb
cmps
push
inc
jmp
or
aam
fsubr
mov
pop
rcr
xchg
jg
iret
and
push
fwait
lods
cdq
sbb
xor
or
push
cli
stc
mov
jl
dec
or
(bad)
hlt
sub
inc
sub
and
push
ss
cmc
fs
jno
popf
xchg
pop
int
sub
das
inc
xchg
rcl
out
inc
sub
adc
cs
mov
pop
push
repz
movups
inc
sub
arpl
(bad)
xchg
mov
ror
cdq
adc
movs
cmp
iret
daa
out
sbb
dec
push
lock
jl
daa
cli
dec
std
inc
push
aas
xor
mov
mov
mov
jbe
dec
xchg
sbb
mov
cdq
xchg
push
rcl
imul
addr16
inc
jns
sbb
ins
mov
outs
mov
xor
xor
jl
lea
adc
stos
(bad)
add
popf
imul
icebp
mov
repnz
pop
dec
inc
dec
adc
fidiv
dec
inc
jl
fsub
clc
mov
cmp
xlat
jmp
add
in
ss
xor
push
imul
push
push
clc
ret
cmp
dec
push
in
push
out
std
ins
add
js
repnz
jne
rcl
outs
jo
xor
mov
inc
jecxz
enter
inc
mov
cmc
retf
not
sbb
jb
jo
lods
dec
and
push
cmp
mov
mov
ds
jmp
(bad)
sub
push
bound
iret
cmp
inc
fldl2t
(bad)
in
int3
in
push
das
scas
jne
stc
pop
or
mov
lock
loop
sub
push
hlt
adc
out
jmp
rol
add
jo
xor
adc
(bad)
imul
sub
mov
(bad)
ds
jb
ror
sbb
and
sub
xchg
mov
ja
xlat
das
cmp
in
jno
xchg
add
scas
adc
xchg
repnz
mul
pop
jge
dec
js
jbe
loop
cmp
into
mov
cmp
aam
or
sub
mov
aad
jo
(bad)
inc
sbb
in
fsubr
fsub
iret
mov
jecxz
cmp
cmp
xor
inc
cmp
pop
mov
repz
arpl
xor
jecxz
sub
retf
push
jge
lock
push
add
jbe
and
mov
mov
dec
push
aas
in
jge
dec
int3
js
pop
mov
(bad)
mov
xor
xor
and
mov
dec
dec
icebp
xor
shr
call
inc
xchg
adc
stos
cmc
xchg
in
call
xchg
mov
sbb
jo
sar
jg
mov
call
jo
lods
(bad)
sbb
aaa
iret
pop
push
and
xchg
stc
sahf
xchg
add
jb
test
dec
sub
bound
add
sub
scas
inc
or
in
leave
clc
mov
jns
pop
xchg
ret
add
(bad)
sahf
or
in
or
jp
push
div
movs
adc
or
mov
addr16
loopne
popf
adc
push
lock
mov
sbb
ds
push
mov
call
lock
daa
adc
aam
lods
push
adc
out
xor
inc
cmp
test
pop
mul
rcr
movs
out
fisub
add
mov
movs
ja
pushf
enter
pop
mov
and
inc
add
jl
mov
and
cmc
ror
jge
neg
leave
nop
xchg
or
call
out
xor
lea
sbb
mov
je
inc
imul
pop
(bad)
ja
ret
in
shl
xor
movs
aas
jl
jmp
iret
or
mov
dec
pop
pop
hlt
cmp
fs
push
leave
dec
inc
daa
ja
in
scas
jb
test
inc
jne
or
test
mov
mov
mov
mov
nop
imul
call
push
dec
or
sar
mov
out
push
jno
es
pop
push
fild
(bad)
frstor
jmp
xchg
sub
(bad)
out
neg
sahf
xchg
loop
push
or
js
mov
in
call
and
jmp
jp
les
fadd
push
shl
mov
mov
repz
jno
dec
adc
prefetch
scas
(bad)
pop
mov
stos
jne
daa
mov
cs
je
pop
and
sbb
pushf
hlt
pop
jp
gs
int3
mov
adc
sub
fisubr
sub
pop
mov
gs
pop
mov
dec
(bad)
push
fmul
and
neg
hlt
in
jmp
push
xchg
out
es
and
sub
cmp
dec
lods
ins
xchg
dec
mov
(bad)
lock
nop
(bad)
les
sub
adc
inc
and
in
mov
mov
cmp
sbb
(bad)
ds
or
xor
and
cmp
fcom
(bad)
sub
inc
shl
in
hlt
mov
dec
shl
adc
mov
aad
inc
or
(bad)
inc
add
mov
sub
push
jno
fs
cld
out
and
mov
in
xchg
sbb
test
jp
jne
cs
js
and
pop
mov
arpl
in
cmp
mov
js
jg
push
mov
inc
add
loopne
sbb
(bad)
(bad)
mov
sar
sub
stos
mov
cs
shr
dec
mov
mov
mov
pop
sub
sub
pop
sub
dec
rcr
sbb
das
loopne
test
test
mov
loop
in
or
mov
xchg
out
out
sbb
xor
or
int3
adc
sub
or
adc
scas
hlt
or
mov
test
cmp
movs
pop
fcom
cmp
cmp
xchg
test
cmp
cmp
stc
pcmpeqb
loop
(bad)
cmp
loopne
mov
xchg
mov
fistp
aad
or
mov
test
jge
xor
lahf
cmp
jns
add
mov
(bad)
stc
dec
scas
ds
pop
push
ja
popa
pop
mov
and
ffree
and
addr16
loopne
mov
push
push
sub
mov
leave
mul
adc
sbb
addr16
retf
test
adc
cmp
lds
dec
lock
or
(bad)
ror
pop
cli
adc
add
sub
aas
and
out
(bad)
pop
dec
test
xor
jmp
mov
aaa
jecxz
ins
mov
out
dec
gs
jae
mov
call
retf
pop
cmp
sar
push
loope
stos
xor
cli
jmp
add
aaa
ja
jo
inc
xchg
fmul
es
icebp
adc
sub
add
loopne
das
push
aad
aas
and
push
scas
push
gs
mov
push
cmp
(bad)
hlt
jb
fcmovnu
shl
mov
and
(bad)
pusha
lods
sbb
or
outs
pushf
mov
adc
pop
iret
out
bound
jmp
lods
jmp
fld
(bad)
cmc
sub
mov
cmp
std
push
cmp
sbb
pminub
sub
xchg
xchg
movs
sbb
into
ja
push
repnz
loopne
aam
jb
imul
fistp
add
sar
(bad)
xchg
test
test
ins
mov
in
aam
cmp
call
int
sbb
or
sbb
stos
pop
dec
jbe
retf
int
mul
cmp
cmp
(bad)
retf
fistp
lock
inc
popa
retf
mov
mov
push
add
inc
loop
fadd
pop
das
ja
mov
mov
in
push
push
ds
icebp
dec
and
sbb
pop
in
jle
mov
push
retf
push
xor
mov
add
xchg
sahf
push
jmp
xchg
cmc
or
dec
data16
sti
push
ss
fmul
adc
scas
inc
xchg
jae
out
stos
push
mov
and
push
test
mov
push
sar
popa
lea
adc
jp
jmp
sub
inc
test
fld
mov
cmp
imul
mov
and
imul
outs
sar
icebp
in
out
sahf
cmp
gs
cmp
sub
rol
sbb
rcl
mov
js
mov
mov
push
repz
or
xor
pop
test
cmp
mov
loopne
mov
mov
mov
jecxz
mov
ss
add
push
xchg
and
mov
and
mov
call
inc
lods
mov
lods
das
(bad)
clc
xor
mov
push
ja
jg
or
sub
iret
push
sub
shl
ins
jge
or
push
ffreep
sti
arpl
mov
mov
pushf
inc
rcl
lahf
jmp
cmp
and
xchg
cmp
aaa
pusha
clc
xor
arpl
push
add
cmps
sub
xchg
bound
ret
push
lods
dec
jns
aas
pop
and
(bad)
jne
sub
inc
jge
push
pusha
pushf
mov
or
xchg
data16
std
daa
scas
fidivr
mov
(bad)
sub
pop
xor
adc
ret
xchg
and
mov
pop
dec
or
in
lahf
hlt
mov
fcomp
loopne
and
add
mov
jmp
(bad)
es
ret
(bad)
adc
xor
push
test
cmp
in
cmp
sar
and
jns
push
adc
in
aaa
sahf
nop
jns
aad
xchg
fisubr
jae
lahf
pushf
xchg
shr
retf
shl
pusha
daa
pop
or
es
ss
xchg
inc
dec
ja
xor
cmps
(bad)
imul
outs
out
rcr
aad
xor
(bad)
into
sub
pop
mov
sub
jnp
sub
jmp
aaa
icebp
xchg
dec
cmc
(bad)
sbb
fdiv
retf
jp
xchg
mov
xor
push
cmc
rcl
adc
inc
cmc
push
stc
inc
cmps
scas
and
scas
mov
sbb
js
sbb
push
xor
cmps
lods
pop
xor
or
cmc
sbb
jg
xchg
adc
jns
scas
push
aam
jmp
call
and
dec
xchg
mov
daa
mov
gs
mov
out
jle
dec
out
mov
arpl
aaa
pusha
xor
cmps
test
add
leave
pop
inc
sub
data16
aam
jb
mov
jmp
mov
or
test
pop
mov
mov
hlt
xchg
nop
mov
mov
xchg
mov
movs
aaa
ror
xchg
inc
out
mov
push
push
and
add
shl
out
pop
imul
movs
cs
xchg
repz
inc
jbe
pop
mov
sti
std
push
xor
dec
shr
fst
daa
cs
test
dec
call
and
mov
dec
dec
nop
cmp
scas
sub
cmp
nop
sbb
mov
push
mov
mov
push
popa
xor
fsubr
jmp
iret
adc
loop
call
into
or
mov
push
cmp
ret
sub
mov
(bad)
neg
mov
retf
add
int
push
fs
dec
rcr
dec
add
in
jmp
sub
pop
jg
bound
adc
mov
call
cmps
popf
shl
jo
jno
int
(bad)
les
aam
adc
inc
lds
mov
pop
cmp
cmp
je
retf
mov
out
or
jg
hlt
stos
add
sbb
adc
xchg
aas
cwde
cmp
xor
mov
inc
xor
jns
push
push
pop
aas
pusha
mov
mov
cmp
sbb
fwait
pop
adc
mov
(bad)
fdivr
xor
mov
add
dec
add
aam
fwait
add
mov
sub
movs
(bad)
rol
sub
mov
inc
aas
lock
push
imul
jo
hlt
gs
movs
sub
sub
lahf
jmp
inc
mov
sub
popa
add
out
shl
ds
lahf
jmp
dec
sbb
inc
pop
ins
rol
rol
js
add
pop
jmp
lahf
les
aad
in
dec
push
popf
out
ss
hlt
mov
xchg
cmp
lahf
out
mov
mov
loopne
or
inc
add
pop
push
inc
sbb
mov
js
jmpw
lahf
and
mov
jmp
iret
cmp
mov
sub
xor
lock
xlat
daa
mov
dec
pop
xor
xor
push
adc
jbe
jmpw
mov
pop
xor
mov
pushf
lods
cli
add
(bad)
jno
mov
sbb
mov
fucomi
or
or
popa
cmc
clc
fnstenv
lock
mov
mov
ret
push
ja
arpl
add
cs
or
int
enter
hlt
sbb
mov
xchg
repz
push
imul
adc
mov
and
pop
pop
cmp
in
add
pop
jmp
in
push
jbe
xor
add
add
xchg
repnz
imul
sbb
xchg
bnd
out
ins
xchg
xchg
and
fsub
cli
inc
dec
loop
xor
xchg
movs
push
(bad)
repz
out
cwde
sub
sbb
jae
jb
mov
out
in
jo
dec
push
ja
jg
cmc
xchg
fcomp
cmp
mov
sub
mov
cli
jecxz
cmps
out
ins
mov
test
inc
rcl
or
mov
mov
dec
jb
sbb
(bad)
jbe
popf
ins
mov
add
mov
arpl
sbb
loope
inc
nop
loopne
xor
push
mov
out
or
ins
sub
xchg
xchg
mov
and
cmp
rcl
ins
fcomip
(bad)
adc
and
fstp
rol
mov
or
ins
and
jmp
addr16
sbb
test
ja
outs
dec
adc
xchg
fdiv
sbb
mov
xchg
out
movs
mov
sub
int
push
aas
pop
sbb
push
out
mov
inc
rcr
mov
call
mov
lds
cmps
sub
sbb
fld
mov
icebp
push
sahf
mov
inc
and
mov
xchg
dec
mov
push
pop
jg
mov
arpl
out
fidiv
sub
retf
cmp
pop
adc
nop
sbb
sbb
sbb
and
dec
out
mov
mov
aad
test
test
lods
mov
sub
ds
mov
push
outs
jnp
xchg
jae
sbb
or
pop
xchg
dec
xor
popa
fcmovb
cmp
jno
fadd
out
fsubr
std
cmc
jmp
sbb
xchg
pop
pop
jbe
mov
ds
mov
mov
(bad)
adc
fisub
xchg
js
test
mov
inc
xor
addr16
and
mov
ficom
sub
rcr
sbb
lds
test
or
sahf
jns
mov
out
mov
pop
mov
fbstp
jbe
mov
sbb
sbb
cdq
xchg
push
(bad)
push
inc
or
test
aaa
xor
and
cmp
or
stc
push
adc
and
add
jnp
inc
cmp
sub
pushf
rcl
mov
inc
and
inc
scas
adc
sub
retf
js
xor
jp
mov
add
retf
les
cmc
retf
and
sub
sar
or
retf
jae
test
jbe
mov
sbb
neg
mov
call
into
push
cmp
pop
repnz
in
mov
dec
mov
fwait
cmp
imul
leave
add
inc
into
repnz
sbb
aas
inc
pushf
retf
fmul
das
xchg
jb
icebp
fild
pop
mov
xchg
dec
loope
inc
sbb
das
cs
shl
cmp
xchg
into
sbb
mov
fidivr
(bad)
jmp
inc
cli
movs
and
mov
arpl
mov
loop
sub
push
xor
inc
add
mov
in
push
(bad)
movs
call
imul
dec
mov
add
outs
iret
push
test
fs
in
sub
jbe
push
into
or
cdq
inc
sub
les
adc
popa
cwde
jmp
adc
xchg
and
fdivr
xor
jns
in
icebp
xor
dec
aas
pop
xchg
dec
add
sub
mov
jbe
sbb
out
ins
out
scas
sub
stos
ja
out
stc
cmp
push
xchg
pop
add
dec
cld
data16
stc
fiadd
adc
push
cld
xchg
out
movs
pushf
xor
sub
sbb
or
stos
push
gs
pop
out
push
adc
jae
imul
ins
sbb
xchg
adc
sbb
jecxz
adc
lods
cmp
test
mov
mov
lahf
xchg
loopne
ret
sbb
hlt
test
push
adc
daa
jne
lds
in
test
lods
mov
adc
cwde
push
mov
in
and
mov
push
xchg
js
jae
sar
xchg
adc
inc
inc
sbb
(bad)
hlt
inc
pusha
add
ss
test
sub
push
sar
push
ins
fadd
fsubr
mov
ror
pop
add
pop
stos
(bad)
mov
enter
data16
sahf
test
jecxz
xchg
push
shr
or
mov
push
into
mov
cmp
imul
mov
std
repnz
stos
adc
fst
dec
adc
into
mov
jb
xor
sub
mov
ins
inc
sbb
pop
mov
add
or
sbb
or
jbe
dec
icebp
mov
outs
or
adc
cmp
or
cmp
popf
jb
xchg
push
cmp
jle
cmp
cwde
das
fs
int
dec
daa
hlt
mov
and
movs
add
retf
(bad)
cld
les
(bad)
pushf
jbe
sub
aam
scas
ja
push
in
sbb
int3
ret
adc
mov
add
bound
adc
adc
jge
mov
in
cmc
scas
push
test
cli
fadd
in
jecxz
fsubrp
or
cld
fs
stos
in
and
imul
cmp
push
add
(bad)
lock
(bad)
fimul
push
cmps
push
and
mov
xchg
ins
sbb
repz
sub
dec
push
addr16
mov
repnz
add
ja
jmp
call
(bad)
sbb
cmp
cmp
std
dec
(bad)
(bad)
push
pop
sbb
aaa
loop
and
fucomi
jbe
retf
add
dec
out
and
sbb
xchg
sti
push
rcl
xor
jno
sbb
mov
xchg
aam
jecxz
call
cmp
in
fdiv
jecxz
adc
cmc
xchg
mov
int
rcl
test
in
jnp
mov
cmp
dec
imul
enter
mov
sub
dec
sub
mov
stos
ficom
dec
sbb
(bad)
fnstsw
push
xor
call
aad
inc
(bad)
mov
mov
int3
neg
jmp
fmulp
inc
shl
(bad)
test
ja
mov
test
adc
imul
(bad)
pop
sub
iret
xor
dec
pop
push
clc
sbb
int
or
dec
dec
ins
mov
arpl
push
mov
loopne
pop
imul
test
xor
(bad)
pop
push
retf
addr16
cmp
mov
pop
arpl
add
bnd
mov
ror
mov
repz
sub
sub
or
loop
in
(bad)
(bad)
stc
lahf
mov
cmps
inc
add
fldenv
lods
fwait
sub
cmp
mov
lahf
cmp
rcl
movs
lods
cwde
arpl
iret
or
shr
mov
pop
xchg
icebp
fmul
mov
outs
scas
std
in
push
adc
jp
movs
xchg
jo
sbb
pusha
inc
cmp
jmp
push
push
mov
pop
test
adc
jge
retf
outs
je
in
lods
aaa
jmp
adc
add
(bad)
mov
outs
lods
sub
xor
xchg
dec
mov
nop
stc
call
mov
mov
loopne
sub
push
sbb
aam
sbb
mov
mov
sbb
jp
in
loop
and
add
push
push
dec
dec
push
mov
fnstenv
mov
mov
sbb
cs
out
rol
mov
inc
lods
mov
inc
call
int
mov
nop
push
ins
imul
mov
icebp
adc
jmp
and
pop
cmp
mul
mov
pop
into
pop
jmp
push
push
xor
and
add
pop
call
test
push
rcr
aaa
ja
scas
or
lods
inc
(bad)
dec
test
and
add
mov
rcl
imul
inc
lea
stos
jne
icebp
sub
or
dec
fidivr
pop
loopne
or
jne
mov
add
or
mov
sbb
ins
je
cs
push
dec
ins
or
lahf
(bad)
gs
inc
push
es
xchg
fadd
mov
retf
out
mov
adc
das
fldcw
xchg
add
push
sbb
push
loope
dec
jmp
retf
add
lods
popa
xchg
inc
mov
sbb
jbe
jmp
pusha
mov
rcl
mov
push
sbb
mov
dec
pusha
call
icebp
inc
and
cwde
call
pop
push
cdq
or
jle
cld
sbb
mov
xchg
ins
mov
or
pop
adc
call
or
xchg
pop
push
fnstsw
fild
test
inc
(bad)
iret
jg
icebp
lahf
inc
pop
dec
loope
add
(bad)
jmp
pushf
mov
adc
xchg
jg
sbb
sub
std
mov
popa
jmp
movs
cmp
int
mov
or
movs
cld
fsubr
call
xchg
into
xor
cs
jg
scas
mov
call
hlt
mov
sub
cmp
popa
dec
daa
mov
(bad)
std
stos
sub
test
je
adc
xor
adc
pop
or
adc
cmc
sbb
das
call
repz
push
lock
inc
dec
iret
xchg
out
ins
repz
mov
(bad)
jo
xchg
mov
out
sub
das
mov
inc
fwait
dec
(bad)
inc
fidiv
ins
inc
outs
ins
sti
mov
xor
mov
cs
cmp
(bad)
xchg
imul
call
aaa
cli
xchg
sbb
aaa
inc
or
cmp
hlt
stos
(bad)
sub
cwde
pop
mov
xor
xchg
mov
push
mov
pop
mov
xor
mov
and
fild
call
xchg
cmps
retf
stc
test
cs
adc
hlt
retf
xchg
mov
cmp
mov
stos
sub
push
gs
jns
mov
pop
jo
pop
adc
xchg
in
sub
adc
push
mov
shr
and
xchg
int
popf
xchg
dec
push
xor
cmps
lea
xchg
mov
adc
push
and
leave
mov
movsx
push
sbb
mov
lahf
push
push
jl
ret
bound
aaa
movs
gs
or
xchg
xor
daa
mov
push
loop
inc
fild
cmp
test
stos
mov
pop
pop
sbb
mov
pop
sub
bound
dec
ret
add
test
rol
jl
test
mov
and
sar
sub
xor
and
xor
iret
pop
pop
addr16
push
jg
pop
(bad)
pop
arpl
sub
mov
and
imul
(bad)
loope
mov
inc
sub
xchg
cmp
or
fwait
mov
mov
xchg
ret
push
push
sbb
mov
mov
mov
mov
adc
retf
ins
xchg
xchg
mov
or
mov
jmp
(bad)
fbstp
push
lods
sbb
retf
push
jge
cmp
and
leave
adc
stos
movs
pusha
xchg
fstp
inc
pop
dec
popf
xchg
test
retf
add
rol
es
test
aas
or
adc
inc
mov
mov
stos
pusha
mov
sbb
or
push
push
out
movs
aad
stos
cld
(bad)
pusha
pop
dec
xchg
push
jge
xchg
adc
mov
fwait
movs
pop
add
dec
xchg
sbb
inc
test
and
mov
int3
cli
cmp
inc
jg
lock
adc
lods
sub
popa
jle
dec
mov
dec
icebp
jg
leave
dec
int
aad
jbe
(bad)
jecxz
shr
or
jge
lods
shl
inc
cmp
neg
(bad)
push
lods
mov
push
scas
inc
xor
movs
cdq
push
and
lea
jb
cmp
xchg
lods
pop
rol
cwde
mov
or
aas
das
iret
pop
das
adc
adc
test
add
push
pop
or
enter
loope
xchg
dec
pushf
xlat
push
mov
and
rcr
xchg
sbb
or
loop
sub
mov
loopne
push
fisub
repnz
test
lock
rcr
mov
mov
shl
inc
mov
pusha
dec
or
js
lods
dec
xchg
loop
mov
cmp
dec
test
cmps
push
cmp
push
call
and
cld
or
addr16
iret
push
pop
xchg
mov
hlt
jmp
jg
leave
or
mov
loope
mov
dec
or
xchg
daa
loope
sub
push
dec
arpl
mov
aaa
shr
(bad)
push
(bad)
xchg
js
mov
add
mov
mov
pusha
mov
and
sub
inc
add
mov
loop
jp
sbb
ja
push
gs
dec
xor
enter
adc
sbb
cdq
sub
xchg
mov
or
add
pop
add
inc
hlt
add
arpl
int3
xchg
cmp
xor
and
lahf
call
cmc
movs
(bad)
push
inc
dec
mov
add
xchg
clc
xor
jl
mov
dec
add
mov
mov
mov
(bad)
inc
adc
xor
jnp
push
jecxz
dec
inc
ret
and
es
xor
fsubr
jae
retf
lea
aam
pop
inc
dec
(bad)
(bad)
lea
sbb
inc
push
fldlg2
fstp
jno
mov
mov
movs
stc
mov
mov
dec
mov
jmp
leave
sbb
push
mov
ret
icebp
cmps
jecxz
arpl
jl
out
test
data16
push
adc
repz
movs
inc
call
add
push
(bad)
pop
cwde
hlt
popa
push
pop
add
repz
jnp
scas
xchg
jo
cmp
cmp
sub
mov
(bad)
arpl
add
mov
sbb
repz
lods
mov
inc
mov
nop
mov
aaa
jg
inc
adc
and
inc
or
or
or
call
jmp
xchg
scas
cmp
pop
xor
adc
push
call
inc
or
pop
xor
jmp
sub
add
mov
cmp
dec
shl
aad
and
stos
cmp
outs
mov
add
(bad)
dec
enter
scas
mov
scas
aaa
cmp
jmp
cs
mov
mov
movs
fwait
push
inc
sub
movs
lock
loope
add
dec
std
sub
pop
addr16
or
jbe
cmps
leave
clc
enter
lea
cmp
ja
mov
retf
fcmovnb
jecxz
jae
mov
into
int3
mov
jns
sbb
scas
cdq
in
mov
test
jns
pop
cmps
rol
dec
xor
jmp
pop
push
xchg
in
dec
sbb
test
pop
xchg
sahf
je
ficom
ja
or
mov
sbb
(bad)
int3
or
add
adc
imul
dec
ret
push
into
mov
mov
mov
enter
fsubr
std
daa
mov
int
inc
imul
ins
aad
sbb
in
jne
mov
rol
mov
fnstsw
into
out
aam
fbstp
add
xchg
cmp
or
adc
sysexit
xchg
mov
or
mov
mov
das
dec
cwde
loop
in
adc
xor
fwait
ret
mov
cmp
adc
push
call
(bad)
retf
and
sbb
sub
adc
icebp
jno
leave
adc
jmp
or
das
adc
or
sub
outs
int
inc
mov
scas
je
std
mov
dec
aam
int
or
lea
xor
inc
pop
(bad)
loope
stos
push
in
mov
mov
imul
fcmovnb
pop
xchg
retf
stos
neg
not
jmp
aas
push
xchg
xchg
icebp
push
adc
xchg
scas
dec
and
inc
add
push
mov
das
mov
jle
sbb
ds
jns
cli
and
xchg
cmp
mov
pop
mov
rcr
sti
shl
inc
sbb
lahf
pop
std
or
add
cdq
dec
sub
jmp
inc
sub
xchg
rol
inc
dec
jge
seto
push
or
out
fwait
cwde
cmp
test
movs
sub
cmp
ss
sbb
aaa
xchg
(bad)
mov
out
mov
jnp
mov
pop
test
inc
add
jnp
out
stos
(bad)
loopne
std
or
sbb
sub
fmul
stos
mov
dec
add
frstor
or
hlt
push
jl
jnp
push
xchg
jle
icebp
and
ret
div
mov
jp
inc
dec
sbb
dec
inc
xchg
loopne
sbb
jecxz
xchg
movs
in
dec
retf
and
movs
gs
dec
cmps
popf
xor
push
xor
sar
nop
movs
gs
cwde
shl
mov
pushf
es
xchg
jnp
ins
out
dec
rol
cmp
cs
iret
mov
mov
add
ror
shr
lods
loopne
mov
pop
pop
sbb
loop
shl
cwde
mov
inc
sub
inc
retf
and
(bad)
push
unpcklps
lahf
(bad)
std
retf
mov
mov
inc
imul
or
mov
int
movs
dec
xor
fstp
xchg
cdq
inc
test
lahf
cdq
rol
sub
sbb
xchg
test
xor
push
sti
emms
adc
push
aaa
fs
push
dec
push
ret
iret
dec
ds
shr
and
arpl
dec
jbe
loopne
sbb
lock
fldcw
retf
mov
sub
(bad)
mov
cmp
fs
cmp
fiadd
fwait
mov
das
cli
mov
xor
cmps
ror
enter
dec
cdq
adc
sbb
sub
jp
retf
repnz
pop
inc
std
mov
pop
add
xchg
es
jmp
dec
leave
sbb
cmp
movs
inc
idiv
add
sbb
std
fcomi
fcmovb
ret
push
nop
mov
sbb
movntps
cmp
call
hlt
addr16
fs
std
lods
push
das
imul
not
adc
jmp
mov
je
adc
test
jne
movs
xchg
pop
mov
jb
aad
push
scas
fbld
imul
out
sbb
outs
(bad)
or
lahf
push
sub
jl
ss
(bad)
mov
(bad)
call
pop
xchg
out
loope
gs
outs
adc
adc
cmp
rol
cmc
js
sar
mov
mov
into
pusha
jg
dec
add
cmps
push
mov
xchg
rcl
call
mov
xchg
call
jle
xchg
adc
push
mov
push
retf
data16
push
jecxz
pop
xchg
bound
push
loop
loope
fidiv
(bad)
lahf
int3
mov
push
xor
(bad)
popa
fild
sahf
xor
fist
dec
mov
push
push
je
pop
(bad)
sub
inc
sahf
push
loope
push
sbb
(bad)
push
mov
sbb
dec
xor
(bad)
xchg
push
movs
out
jbe
xor
jns
nop
xchg
sub
es
push
or
mov
std
loope
add
xchg
and
xor
xchg
jnp
cwde
aad
sub
fwait
lods
lea
and
push
lahf
aas
pop
sbb
dec
sti
xchg
mov
jb
in
shl
retf
and
pusha
jnp
(bad)
mov
inc
mov
(bad)
popa
ret
repz
mov
xor
fdivrp
xor
add
xor
dec
adc
aam
stos
jnp
add
movs
je
ss
xor
mov
mov
xchg
ss
sub
or
cli
sahf
(bad)
dec
adc
or
inc
cdq
cmp
mov
push
fsubrp
fcomp
into
pop
stc
test
(bad)
jge
xchg
clc
lea
mul
mov
cli
bound
in
jge
cmp
jle
push
or
mov
in
cmps
jb
sti
jp
dec
pop
sub
xchg
rol
movs
jl
dec
ss
jp
push
add
lock
iret
out
or
in
inc
fist
mov
fs
jmp
call
jg
cmp
sbb
data16
cmp
sub
pop
push
outs
retf
mov
adc
out
dec
sub
mov
push
aas
fcom
ret
mov
sub
jbe
sub
aad
push
xchg
add
les
dec
aam
inc
test
fisub
cmp
lea
rol
dec
movs
(bad)
cs
ins
jl
retf
fcmove
cmps
xchg
pop
push
xchg
clc
cmc
adc
pop
adc
aaa
push
push
xor
mov
test
mov
pop
sub
cmp
into
sub
lea
dec
pmaxub
stc
cmc
mov
test
cmps
inc
push
lods
xchg
xchg
add
sti
inc
sub
iret
pop
aas
movs
jg
push
mov
or
xchg
nop
cmp
mov
sbb
and
pop
ds
fmul
add
ds
jecxz
push
pop
push
or
aaa
sbb
pop
test
js
(bad)
jge
adc
dec
mov
std
jae
inc
cwde
sbb
and
jae
mov
pop
in
adc
sub
lock
push
rol
jecxz
and
out
xchg
xor
pop
mov
jne
btr
sub
icebp
mov
add
sub
or
mov
and
mov
rol
mov
les
jnp
lds
loope
dec
cmp
dec
push
xchg
dec
(bad)
stc
in
adc
xor
mov
ja
(bad)
lods
pop
es
inc
add
add
mov
inc
xchg
outs
mov
jno
pusha
add
(bad)
mov
clc
(bad)
loopne
popa
daa
fs
sbb
in
xor
pop
mov
jnp
mov
xchg
lods
sub
bound
xor
or
pop
dec
jmp
adc
sub
es
inc
cmp
fld
inc
retf
shr
pop
xchg
sbb
xchg
add
or
xchg
sub
enter
shr
ss
movs
fidivr
mov
jb
mov
and
into
stos
inc
lods
aad
mov
mov
mov
scas
in
clc
xor
add
adc
jo
imul
xlat
test
out
push
dec
mov
lods
push
pushf
adc
or
shr
lock
add
push
es
xchg
loop
aad
ins
call
add
sahf
popf
xor
push
ret
int3
xchg
movs
push
inc
xbegin
cmp
cmp
repz
movs
or
lods
pusha
daa
push
ds
sub
xchg
dec
dec
push
mov
sub
std
adc
retf
hlt
xchg
sar
stc
cmp
cmp
call
fdivr
mov
jae
les
cmp
aad
fisttp
retf
xor
in
enter
inc
mov
mov
sbb
adc
push
or
std
or
mov
scas
xlat
cld
ret
xor
mov
cli
(bad)
sub
das
push
inc
push
mov
mov
inc
jne
mov
dec
enter
inc
pop
cwde
ret
(bad)
lods
mov
cmp
mov
fs
je
cmp
or
fwait
out
sub
cmp
xor
lahf
mov
clc
lds
pop
cmp
jmp
stos
sbb
adc
cmp
xor
sbb
jecxz
pop
cmp
jo
jae
jne
or
or
jno
cmp
mov
arpl
jp
cmp
sahf
hlt
and
jg
xchg
retf
(bad)
xor
push
enter
jecxz
in
sub
lods
call
into
jecxz
movs
gs
mul
enter
je
ret
pop
add
mov
jb
push
addr16
aaa
mov
adc
lods
out
repz
xchg
sbb
jge
lds
test
push
mul
dec
loope
ja
jae
jge
cmps
nop
ret
pop
cmp
dec
fnstenv
inc
bound
xchg
push
bound
pop
not
sub
movs
ja
retf
(bad)
bound
xchg
mov
mov
push
dec
cmp
sbb
cdq
sub
push
or
adc
mov
push
mov
cmps
xchg
mov
mov
xor
popa
and
jno
dec
mov
cmps
mov
(bad)
xchg
dec
sub
clc
mov
mov
ja
and
idiv
enter
jmp
ds
jno
xchg
mov
jne
dec
int
pop
es
push
adc
sbb
std
fldcw
cmp
pop
and
aas
out
ret
fsubrp
cwde
(bad)
jae
sti
loopne
push
rcr
sbb
xchg
pusha
inc
mov
(bad)
mov
aaa
jge
push
push
sub
lods
push
xor
sti
imul
jne
nop
lahf
jl
lahf
inc
adc
cmp
and
hlt
inc
in
dec
adc
ins
inc
mov
(bad)
ja
gs
loopne
push
rol
bound
test
fcom
cli
sub
fisubr
cmp
jmp
retf
shl
(bad)
mov
pushf
(bad)
mov
inc
fdivr
mov
nop
ficomp
add
add
and
xchg
in
pop
jl
adc
ds
ja
push
not
mov
aad
add
pushf
cli
sbb
mov
push
in
jg
pop
and
or
ss
cli
mov
mov
cwde
movs
iret
xbegin
push
(bad)
mov
mov
movs
xchg
pop
sub
stos
imul
sub
mov
mov
adc
fwait
sub
sbb
enter
sub
iret
xchg
frstor
or
adc
fdivr
and
add
repz
lds
mov
or
dec
jmp
(bad)
rcr
or
(bad)
les
mov
sub
stos
aaa
fxch
inc
jmp
xchg
inc
fild
rcl
hlt
test
test
movs
scas
std
jo
ja
cmp
pop
mov
iret
lds
pop
adc
xor
push
lds
xchg
pop
add
ja
arpl
pushf
xor
retf
mov
lds
shr
xchg
and
movs
mov
stos
jp
test
(bad)
ss
bound
stos
cmp
outs
out
xchg
cmp
adc
dec
xor
pop
in
fwait
pop
mov
xor
out
mov
push
enter
stc
add
imul
(bad)
stos
jns
xor
(bad)
stos
enter
aaa
push
push
xor
mov
bound
inc
mov
pusha
sub
cmps
fisubr
xor
cwde
xchg
sti
mov
xor
loop
sbb
clc
cdq
pop
imul
pop
daa
rol
xor
cwde
test
outs
loop
adc
(bad)
nop
out
retf
jo
add
fst
movaps
and
inc
push
ins
stc
sbb
retf
retf
mov
dec
jno
xchg
push
movs
jle
sbb
int3
and
shl
fs
pop
mov
mov
adc
mov
ret
mov
dec
cmps
icebp
cmps
pop
lods
aad
jo
arpl
cmp
push
mov
mov
hlt
dec
test
and
int
arpl
push
mov
inc
sub
jmp
jl
test
or
xor
add
cmp
out
dec
icebp
sbb
scas
sbb
leave
daa
lock
movs
pop
cmps
ins
sbb
pop
jne
sub
push
push
xor
or
fimul
std
test
int
out
lahf
add
retf
cmp
sbb
lods
dec
pop
adc
xor
xlat
and
mov
fdiv
mov
mov
xor
add
add
or
ds
int3
mov
cmc
jl
mov
jg
push
mov
mov
mov
cmp
inc
cmc
int3
jbe
sub
xchg
(bad)
out
push
mov
imul
aam
fs
push
fsubr
loopne
std
adc
mov
mov
sub
mov
fmul
imul
mov
jl
fucomip
mov
jae
add
gs
sbb
inc
ins
mov
jg
(bad)
jg
rol
(bad)
cmps
or
adc
lods
push
aad
adc
sub
jne
fst
fisubr
pop
ins
jns
xchg
jb
xchg
jo
pop
push
sbb
test
jmp
jo
add
loop
stos
rol
sub
jnp
pop
xchg
xchg
or
adc
ins
popa
test
(bad)
push
pop
iret
pop
xchg
shl
pop
mov
lock
adc
xchg
pushf
inc
or
outs
(bad)
loop
test
sub
je
into
and
inc
jns
popa
jo
adc
outs
pop
outs
imul
sub
aas
dec
ss
sti
mov
bound
push
push
push
test
scas
(bad)
or
inc
daa
jno
cmp
add
(bad)
out
repnz
push
mov
mov
pop
stc
and
loop
movs
mov
iret
push
add
pop
jp
idiv
mov
mov
in
and
xor
adc
xor
inc
aam
cmp
fist
and
(bad)
aad
les
pusha
and
jmp
pop
fdiv
outs
into
inc
add
lods
scas
mov
xchg
push
lock
enter
cmp
loope
xchg
jecxz
es
adc
push
and
das
push
in
movs
add
data16
in
push
dec
add
pop
jae
sub
mov
(bad)
jo
rcl
push
adc
jns
push
adc
dec
mov
mov
(bad)
es
xchg
jg
nop
ja
fsub
xlat
mov
mov
jmp
idiv
push
xor
cmc
mov
(bad)
push
dec
movs
adc
stos
pop
fild
sub
xchg
stos
pusha
jns
or
addr16
lods
lock
cmc
mov
push
add
icebp
call
punpcklbw
mov
sbb
iret
jmp
jbe
iret
movs
or
push
sub
dec
enter
and
or
js
sub
xchg
repz
mov
fidivr
push
stos
push
pusha
ja
popf
lods
and
sbb
clc
jb
loopne
adc
xchg
adc
int3
jbe
fidiv
push
clc
ins
dec
fimul
popf
and
mov
pop
add
mov
add
sub
mov
push
fisttp
xchg
adc
mov
jl
dec
cmp
adc
push
ss
mov
adc
ss
aaa
cmp
dec
adc
retf
popa
scas
or
mov
mov
xor
fnstcw
stos
xlat
jo
add
mov
ror
push
or
jne
mov
jl
xlat
call
arpl
scas
xor
ja
test
mov
pop
dec
xor
loop
(bad)
xor
xchg
in
add
adc
ja
aam
xor
mov
(bad)
xchg
sbb
outs
and
dec
test
xchg
pusha
(bad)
lds
in
jecxz
leave
je
cld
ins
adc
inc
or
ret
inc
std
lahf
sar
icebp
(bad)
and
fs
dec
test
jno
dec
or
xlat
sub
pop
mov
gs
scas
out
xor
sub
scas
pop
mov
adc
std
mov
aam
xor
mov
mov
fdiv
and
pop
cmp
repnz
push
leave
xor
fadd
ret
ret
test
loopne
nop
shr
stc
add
gs
dec
add
movs
mov
test
dec
mov
pop
and
cmp
jg
(bad)
out
pop
add
test
mov
fwait
pop
xchg
or
add
pop
xchg
dec
jecxz
retf
or
lds
test
bound
jmp
outs
out
or
data16
mov
jb
std
mov
sub
out
lahf
push
and
sbb
call
into
in
mov
outs
fs
mov
cmp
cmc
sub
sbb
push
les
movs
sbb
push
adc
mov
cli
call
fdiv
cmp
popa
xor
inc
xlat
sbb
cdq
cmps
aas
clc
and
and
mov
mov
mov
lods
rcl
repz
(bad)
jns
mov
mov
idiv
clc
mov
mov
push
jo
fisubr
dec
les
pop
(bad)
loopne
test
scas
(bad)
(bad)
outs
mov
lea
inc
mov
fwait
xor
ret
jns
mov
fwait
adc
cwde
sbb
cmp
dec
mov
xchg
or
das
dec
add
outs
and
xchg
pop
in
xchg
push
push
int
and
push
scas
inc
sti
jge
ss
push
sar
pusha
or
push
loopne
ins
es
enter
fdiv
sub
je
adc
mov
jbe
mov
jl
mov
xor
arpl
inc
stos
adc
ins
(bad)
jle
imul
popa
xchg
scas
pop
aad
imul
fsubr
mov
arpl
dec
cmp
mov
xchg
sar
push
retf
mov
push
mov
inc
ja
outs
les
cmp
xchg
and
inc
frstor
push
jle
xor
cld
stos
pusha
int3
lds
push
fild
in
xlat
sub
popa
movs
sub
icebp
imul
int
xchg
fdiv
stc
rol
mov
or
sub
fs
and
rcl
mov
and
and
out
push
sub
jne
jne
or
test
xchg
mov
or
sbb
pop
sub
ror
jge
sbb
push
sti
pop
push
mov
adc
add
push
stos
add
dec
fimul
retf
mov
dec
mov
mov
xchg
aaa
cli
test
mov
adc
loop
call
rcl
add
and
xchg
add
es
(bad)
jmp
pop
xor
icebp
or
lods
adc
lock
jl
add
adc
xchg
fimul
movs
push
xor
xchg
and
cwde
xlat
mov
sub
in
xchg
cmp
jmp
int3
repnz
popf
adc
jbe
mov
xor
cmps
sahf
adc
leave
add
mov
nop
dec
retf
mov
icebp
push
arpl
adc
jne
test
pushf
cmp
or
cwde
pop
ret
hlt
inc
addr16
mov
shl
dec
js
cmp
loope
idiv
(bad)
adc
mov
mov
jle
push
cmc
push
les
out
adc
xchg
ret
icebp
mov
pusha
ret
pop
jle
inc
call
sub
sbb
cmp
popf
fisttp
movs
dec
repnz
mov
fucom
sbb
test
or
xchg
shr
and
xchg
test
mov
mov
fstp
and
je
enter
adc
xchg
cwde
push
push
xchg
sbb
sbb
push
and
cmp
lahf
cmp
pusha
inc
out
mov
xchg
or
adc
jns
pop
jl
xor
or
call
mov
xor
mov
jns
cmc
movs
pmulhw
adc
outs
cdq
test
dec
mov
xchg
js
movs
jbe
in
aam
in
call
xchg
mov
inc
push
push
cld
or
stos
outs
fmul
or
mov
imul
pusha
jbe
cli
dec
adc
inc
mov
cmp
dec
push
ret
ror
fistp
fnstcw
popa
pusha
cwde
sbb
push
ret
fbstp
clc
sbb
push
leave
sub
or
inc
sbb
pop
push
xlat
clc
push
xchg
lods
and
pop
jo
cmps
test
cmp
cmp
mov
dec
stos
mov
mov
jl
in
cmp
in
or
add
mov
mov
jnp
jo
fst
mov
sti
push
push
add
pop
mov
push
jnp
jge
or
jecxz
pop
cmc
sub
adc
and
(bad)
pop
push
out
push
inc
mov
idiv
repnz
mov
cld
push
mov
popa
mov
(bad)
xor
xchg
push
aam
or
sahf
add
jne
jae
outs
jne
out
into
mov
popf
inc
mov
loop
sbb
push
adc
jno
pop
jmp
inc
addr16
sub
add
fsubr
mov
call
dec
ds
jbe
les
cdq
(bad)
jmp
sqrtps
leave
ror
mov
mov
mov
xor
movs
hlt
jp
mul
push
pop
and
push
and
out
push
dec
inc
cli
push
xor
xor
add
sbb
xchg
popa
mov
stc
mov
popf
icebp
inc
div
jmp
or
scas
xor
push
pop
xchg
movs
cmp
test
arpl
mov
xchg
out
add
jp
sub
rcr
cmc
scas
sub
lock
pcmpgtd
out
mov
rcl
mov
push
xor
(bad)
inc
or
pushf
out
push
dec
dec
mov
aaa
xor
popa
xchg
ret
mov
sub
push
in
ja
das
lahf
sbb
pop
aas
mov
les
cli
(bad)
ins
test
sub
or
xchg
pop
pop
lahf
lods
jl
and
or
ins
test
mov
mov
ins
mov
mov
cld
dec
fst
mov
lods
xchg
push
adc
pop
scas
scas
add
jbe
cdq
gs
inc
movs
cmps
mov
sbb
pop
out
push
pop
in
rcr
lods
scas
xchg
dec
mov
jmp
and
or
aas
and
cmp
int3
cld
mov
popa
lds
cmps
xor
call
das
jb
inc
fimul
push
int
mov
xor
pop
outs
fmul
aad
jmp
and
mov
aam
cmc
jno
mov
jb
test
jmp
sbb
imul
cmp
ret
out
je
mov
pop
lds
add
ret
push
loopne
or
or
lods
and
inc
mov
(bad)
jle
push
test
xor
hlt
mov
push
ds
and
lahf
push
and
xchg
push
scas
test
test
daa
sbb
jo
stos
or
sbb
and
add
pop
dec
leave
xchg
mov
cli
test
inc
mov
mov
and
xchg
xor
adc
imul
mov
ret
mov
pushf
int3
pop
or
and
push
iret
clc
repz
mov
push
into
nop
pushf
sbb
pop
or
xor
xchg
aad
xchg
jg
xor
push
adc
mov
je
in
jbe
or
aam
lods
xor
pop
lahf
aaa
ins
push
movs
xchg
inc
xchg
mov
inc
xchg
xchg
dec
mov
pop
(bad)
or
(bad)
xchg
sub
add
mov
(bad)
jbe
out
ja
sub
mov
(bad)
mov
sbb
mov
pop
jecxz
fisub
mov
cmp
inc
ins
push
(bad)
sub
jmp
ins
add
push
imul
cmps
cdq
lods
loope
test
adc
xor
dec
ds
lea
or
and
xchg
scas
(bad)
jmp
(bad)
sbb
jno
jmp
js
int
loope
cdq
jnp
dec
rcl
push
sbb
push
loopne
std
xchg
sti
pop
push
mov
pop
add
inc
shl
mov
pop
daa
hlt
js
xlat
clc
div
jg
fidivr
cmp
pop
mov
mov
xor
cmps
pop
and
daa
mov
sbb
test
icebp
dec
out
adc
and
inc
mov
rol
jge
int
xchg
out
push
out
ja
lods
push
pop
iret
mov
cmp
movs
ret
inc
pop
stc
push
mov
daa
in
push
mov
xchg
add
push
movs
push
cmp
dec
icebp
ja
out
push
jmp
jnp
sti
gs
adc
or
sahf
sub
push
sbb
xchg
push
xlat
inc
pop
int
jg
ins
sub
inc
dec
imul
fwait
aaa
enter
mov
jmp
mov
jmp
ins
xchg
repz
addr16
jle
sahf
pop
lds
fldcw
pop
out
cli
push
mov
xchg
iret
lahf
in
ins
int
mov
nop
adc
mov
adc
push
xor
lea
sub
push
lods
push
repnz
mov
jge
mov
add
mov
xor
mov
ins
into
popa
in
test
imul
popa
sub
and
add
fadd
and
jb
mov
es
lahf
mov
call
pop
jne
or
xor
bound
int
mov
iret
dec
pushf
rol
mov
aas
sbb
add
mov
inc
call
mov
add
imul
int3
xchg
test
popf
scas
pop
xor
push
inc
int
and
mov
mov
lahf
sete
mov
retf
pop
scas
cld
sti
aam
rcr
test
retf
add
or
scas
(bad)
fldcw
in
push
les
xchg
add
add
adc
test
nop
push
cmc
out
xchg
sahf
stc
inc
xlat
jp
(bad)
mov
std
mov
cmp
mov
lods
xlat
stos
dec
pop
mov
test
jl
outs
ds
lahf
add
call
sti
add
je
lods
jecxz
fsubr
lock
cmp
xor
inc
sub
adc
mov
or
mov
hlt
cmp
arpl
cli
aaa
jmp
and
addr16
fistp
jns
pop
fstp
pop
jmp
dec
pop
mov
mov
(bad)
movs
xchg
lods
dec
in
fst
or
and
xor
call
push
mov
and
add
dec
ja
add
pop
inc
or
leave
add
aas
ror
nop
fwait
sbb
and
scas
ins
or
mov
aas
inc
jae
add
ret
dec
mov
fcmovnu
inc
cli
pop
lods
sar
mov
sub
adc
cmp
je
xchg
xchg
sbb
jns
adc
fild
fs
xor
inc
nop
mov
ret
and
push
pop
mov
jae
pop
aam
ficomp
js
inc
dec
call
test
cdq
pop
(bad)
retf
ret
xchg
in
mov
inc
mov
add
icebp
jb
and
mov
mov
add
pop
sti
or
fimul
sti
add
push
jne
xchg
xchg
cmp
or
sbb
cmc
ficomp
add
loope
stc
ror
lods
aaa
std
push
stc
jnp
pop
test
cmp
in
adc
mov
mov
pop
dec
outs
jmp
sub
pushf
pop
pop
fs
mov
cs
pop
sub
mov
pop
ret
add
loop
mov
cmc
cld
inc
js
loope
mov
pop
sbb
add
loope
push
mov
arpl
mov
mov
ss
xchg
or
cmp
stos
inc
test
push
repnz
adc
mov
int
and
sbb
pop
sti
ret
out
xchg
pop
in
int3
and
ror
imul
adc
loopne
dec
test
aam
pop
dec
repnz
popa
aad
shr
jmp
adc
movs
xor
cs
sub
call
adc
test
pop
shl
xor
out
sub
push
xchg
cmp
inc
inc
loope
rcr
sub
push
mov
repz
imul
xor
cdq
mov
out
xor
xchg
add
push
push
int3
push
fucomip
xor
movs
mov
ins
iret
jmp
loope
push
inc
repnz
xor
xor
inc
popa
imul
mov
imul
cmp
cld
sar
jle
(bad)
pusha
sub
dec
lahf
test
(bad)
stos
pop
xor
pushf
push
jmp
pop
jge
lods
xchg
adc
addr16
xchg
mov
mov
sub
test
sbb
pop
je
retf
retf
pop
mov
movs
inc
div
lahf
ret
add
clc
pop
mov
dec
and
mov
call
push
pop
jmp
inc
loopne
dec
mov
and
xlat
(bad)
int3
pop
mov
dec
sub
push
pop
jge
cmovns
mov
mov
int
cwde
or
mov
add
aam
cld
dec
push
xchg
std
xor
xchg
xchg
xor
call
sti
dec
and
lea
mov
push
sub
ss
or
add
mov
mov
fs
imul
pop
ds
push
xor
fidivr
aas
xchg
mov
cmps
retf
cmps
inc
pusha
imul
les
adc
jmp
or
fnstenv
and
xor
jo
retf
xor
ret
(bad)
jge
push
aaa
lahf
rcr
pop
pop
movs
std
out
xchg
out
pop
mov
push
sar
jnp
jge
popf
out
jbe
arpl
stc
das
mov
cmps
sbb
xor
add
imul
(bad)
ds
pop
add
push
inc
sub
imul
call
ins
or
add
sbb
or
mov
jl
and
cmps
lahf
cmp
test
imul
addr16
mov
cmp
iret
push
dec
mov
pop
bound
(bad)
adc
jmp
sbb
xchg
(bad)
(bad)
retf
cld
cmp
pop
jl
dec
lods
pop
push
push
in
jmp
ja
in
dec
xor
add
mov
sub
(bad)
dec
lods
xor
clc
or
sbb
stc
pop
mov
pop
dec
lea
fdiv
adc
xchg
mov
fidiv
inc
and
(bad)
dec
mov
dec
mov
je
xor
jg
push
sbb
(bad)
bound
mov
popaw
pop
pop
push
xor
stc
mov
iret
out
mov
jno
pop
jno
mov
inc
movs
out
add
stc
lods
mov
stos
addr16
sub
int
gs
sbb
xor
adc
inc
mov
dec
fisttp
push
int3
loop
or
jne
mov
ins
mov
and
add
xchg
nop
cwde
retf
ret
cmp
mov
(bad)
in
dec
mov
and
push
add
fisub
popf
cli
pop
inc
push
mov
push
pop
(bad)
mov
sub
jne
outs
pop
mov
mov
int
ins
(bad)
js
dec
gs
or
mov
fisttp
push
cmp
cmps
inc
jle
mov
dec
cmp
fsubr
and
shl
retf
dec
(bad)
in
movs
push
and
xlat
mov
fistp
(bad)
(bad)
dec
fsubr
jmp
call
je
sbb
push
or
push
(bad)
cmps
mov
jge
jb
shl
ss
test
inc
push
xor
jmp
out
cld
add
je
jmp
pop
int
das
ror
and
lock
fsubr
push
int3
xchg
inc
in
nop
pop
push
cdq
xchg
pop
inc
pop
jmp
jecxz
cs
jecxz
(bad)
(bad)
dec
ja
movs
call
scas
dec
lock
iret
mov
push
dec
ficom
jmp
popa
mov
adc
sub
sbb
jecxz
loopne
jo
fwait
push
mov
scas
pop
dec
fcmovu
cmc
pop
push
imul
jge
test
inc
mov
bound
jmp
xor
sub
test
aas
ins
pop
mov
dec
jno
rol
xor
push
xor
data16
shr
cmp
clc
xchg
idiv
pop
cdq
add
xor
retf
loop
dec
bound
add
ins
movs
sub
aad
retf
in
call
jne
cmp
inc
mov
add
xor
or
cmp
jnp
test
dec
add
scas
push
add
jle
adc
inc
mov
ja
push
sti
sub
out
pop
push
loop
pop
iret
mov
dec
pop
fisub
pop
and
ins
or
fsubr
inc
add
lods
xchg
cmp
mov
inc
and
leave
dec
loope
fld
push
js
dec
sbb
adc
fcomp
push
aam
sti
mov
test
sbb
jnp
xchg
leave
adc
out
cmp
mov
jmp
adc
sbb
into
lds
(bad)
push
add
inc
lahf
pop
jnp
(bad)
cs
ret
dec
outs
movs
clc
cdq
sub
out
aam
fisub
cmp
out
(bad)
push
cwde
iret
frstor
test
and
xor
loop
jmp
sbb
pop
fcom
inc
cmps
inc
add
sti
cmp
bound
xchg
sub
jo
into
ss
pop
cmp
mov
inc
enter
cwde
ss
push
xor
or
xlat
jb
daa
mov
pop
dec
dec
jmp
jecxz
hlt
mov
jns
lea
add
inc
addr16
loope
push
push
scas
lock
imul
(bad)
push
pop
pushf
ins
add
xlat
mov
aad
mov
inc
or
jno
dec
push
scas
aad
pop
cld
enter
loopne
mov
idiv
punpcklwd
pop
cmp
ins
std
enter
push
jae
lock
fucom
sub
addr16
or
sub
jge
push
aam
pushf
lods
mov
mov
push
inc
(bad)
jne
and
and
mov
ins
sbb
and
sub
ret
dec
fcomi
mov
xchg
push
movs
mov
bound
(bad)
mov
mov
sbb
mov
sbb
xor
mov
sbb
mov
jmp
je
mov
dec
mov
(bad)
push
cmps
fbstp
or
jecxz
fdiv
repz
mov
lea
sub
adc
popa
(bad)
call
jnp
adc
add
or
cmp
rol
sbb
and
test
call
add
imul
retf
cmps
pop
ror
jb
hlt
dec
or
sub
xor
enter
push
mov
add
rcl
(bad)
push
mov
test
adc
lods
dec
call
jnp
add
mov
adc
and
enter
cld
lods
stos
mov
push
addr16
mov
jecxz
ror
and
je
rcr
xchg
mov
outs
push
cli
pop
or
push
ja
push
ds
adc
mov
jae
mov
ins
aaa
ins
push
xor
in
cs
rcl
or
pop
leave
mov
sbb
xchg
aad
mov
dec
stos
sbb
dec
pop
and
aad
leave
pop
mov
daa
xchg
fs
or
leave
cs
pop
adc
pop
and
call
sahf
outs
outs
cdq
cli
daa
into
dec
out
sar
fiadd
mov
pop
adc
adc
pop
dec
cmp
pop
xchg
lock
das
push
inc
popa
int
or
adc
test
jne
fcom
pop
dec
mov
das
sahf
lock
lahf
retf
jae
test
inc
std
sar
cmp
and
or
stc
jp
jmp
icebp
addr16
lahf
cmp
test
lds
jg
ficomp
and
mov
(bad)
arpl
in
xchg
xchg
jmp
jecxz
pop
sub
dec
sub
sbb
inc
jp
in
push
cld
sbb
loope
sbb
ficomp
mov
stc
mov
mov
inc
cwde
sub
xor
adc
jo
adc
popf
sti
cmc
sbb
adc
cwde
pop
mov
ror
(bad)
lods
sar
call
mov
outs
jmp
push
jg
adc
lods
es
mov
lea
outs
(bad)
shr
adc
ret
mov
rol
icebp
(bad)
jne
inc
iret
shl
pop
and
mov
fdiv
popf
cmp
mov
add
fsub
sahf
popf
sbb
cmc
jp
mov
cmc
pop
pusha
mov
jno
ds
xchg
xchg
fdivr
sub
imul
mov
addr16
cdq
mov
leave
push
je
push
bound
rcl
xchg
pop
mov
push
jmp
jmp
jne
xor
(bad)
push
mul
clc
jl
cdq
cmp
push
popa
adc
mov
and
or
jb
pop
jecxz
pop
out
das
mov
mov
jnp
popf
gs
sti
jb
pop
mov
cmp
pop
inc
pop
push
arpl
not
retf
sbb
adc
dec
js
dec
push
rol
dec
push
pop
neg
outs
popa
jae
repnz
lds
and
cmp
or
repnz
lods
cs
mov
xchg
mov
ja
sti
gs
ds
ja
mov
add
ror
cli
clc
sub
dec
aad
or
inc
imul
sti
dec
push
ss
ds
jecxz
stos
pop
into
push
fwait
shl
sub
nop
dec
dec
or
pop
out
xchg
pop
mov
inc
jae
push
(bad)
pop
rcr
cmp
dec
cmp
pop
inc
cmp
arpl
cmp
add
call
imul
outs
daa
fist
je
cmp
and
fistp
mov
loope
in
std
mov
test
cmp
dec
lea
inc
stos
sub
push
clc
mov
dec
fwait
jmp
or
pop
les
pop
das
inc
out
aad
jns
sbb
clc
bound
(bad)
mov
loope
loope
or
push
push
in
or
add
pop
dec
repz
aam
push
and
mov
dec
mov
sub
inc
aam
mov
mov
retf
sbb
js
loop
outs
cmp
pop
adc
xor
mov
add
adc
out
sbb
cli
pop
outs
mov
jge
shl
xor
mov
test
push
ins
(bad)
adc
mov
add
inc
arpl
mov
sub
push
or
(bad)
sub
ins
hlt
iret
movlps
out
or
imul
mov
add
not
push
lahf
push
retf
mov
ds
popa
call
mov
xor
mov
dec
fbld
out
dec
loopne
iret
imul
arpl
clc
vmovmskps
and
sbb
push
jno
sub
inc
sub
call
mov
addr16
ret
sub
(bad)
aam
xlat
neg
xor
xchg
call
out
popa
shl
sbb
cld
mov
mov
es
xor
div
mov
leave
shl
out
mov
xor
adc
call
jmp
jbe
retf
loope
sbb
daa
xor
(bad)
cli
retf
es
or
inc
adc
or
push
jns
jl
(bad)
push
mov
push
or
push
adc
bound
test
add
push
push
xchg
(bad)
mov
mov
loope
push
inc
cwde
pop
ins
or
adc
or
(bad)
mov
bound
aaa
inc
pop
test
sbb
sbb
(bad)
fiadd
(bad)
jmp
sub
mov
pop
jp
fldcw
xor
pusha
into
sahf
and
xchg
push
in
jae
ret
mov
pop
std
stc
out
pop
or
inc
jmp
aaa
push
lock
push
mov
xchg
addr16
sbb
pop
das
push
fsub
out
clc
pop
fwait
cs
jmp
jmp
mov
jecxz
push
mov
pop
(bad)
out
jg
xchg
popa
outs
fucomip
mov
jbe
cmp
test
stos
(bad)
out
add
sub
scas
out
cld
inc
sti
jmp
pop
or
sbb
jmp
stos
sbb
xchg
dec
test
pusha
jno
adc
test
mov
daa
(bad)
push
jle
jg
jecxz
mov
fisttp
ins
xchg
xor
sub
test
hlt
(bad)
mov
mov
jae
adc
jl
data16
pop
lods
shl
out
aas
push
aam
mov
push
push
mov
ret
data16
cli
movs
xlat
inc
push
aam
pop
arpl
inc
lods
fcom
sbb
sbb
add
add
fidivr
mov
in
popf
cmc
hlt
(bad)
ret
enter
and
inc
push
jl
inc
stos
hlt
pop
cmc
jge
sbb
xchg
in
test
(bad)
jg
mov
push
js
in
pop
sahf
out
in
cmp
add
fisttp
sbb
(bad)
jo
and
leave
hlt
rcr
in
in
mov
arpl
xchg
xor
je
in
dec
rcl
repnz
lahf
je
sub
cld
add
fst
mov
loope
dec
outs
(bad)
sbb
hlt
sbb
adc
aad
cld
rcl
push
mov
jle
in
pushf
(bad)
push
hlt
cli
mov
outs
adc
cmp
xor
mov
cwde
cs
dec
mov
jecxz
jae
cld
inc
cld
mov
add
sub
push
push
adc
fwait
out
or
push
ja
lds
inc
pop
jb
aam
pslld
or
xlat
sbb
(bad)
push
movs
mov
icebp
xlat
(bad)
fidivr
pop
push
push
outs
enter
js
cmp
scas
retf
cld
(bad)
mul
clc
pop
sub
cmp
pushf
ins
add
mul
das
(bad)
add
pop
data16
lds
sbb
movs
shl
aas
outs
mov
lahf
xchg
(bad)
cld
xor
scas
sub
gs
jg
xor
ins
jp
ror
inc
adc
mov
jb
jle
add
scas
add
sub
lock
ins
inc
cmp
cmp
mov
mov
movs
mov
sub
cwde
and
cmps
(bad)
add
test
ins
add
cdq
mov
push
mov
lahf
pop
dec
mov
sub
xchg
xchg
int3
xchg
bound
outs
jo
push
maskmovq
div
popa
jnp
add
in
dec
iret
retf
sbb
and
sbb
fdivrp
jo
or
push
xchg
inc
shr
and
pop
pop
hlt
inc
cwde
test
jne
test
cmp
jmp
sub
jecxz
xlat
push
ret
jl
pusha
fbld
loopne
add
jne
xor
scas
jb
jnp
lock
retf
aad
mov
push
inc
mov
cld
mov
xor
mov
push
inc
jge
xor
sub
ret
adc
cmp
std
stc
and
xchg
(bad)
adc
mov
es
dec
add
jno
(bad)
fisub
scas
(bad)
sahf
call
xor
frstor
pop
xor
jle
push
lahf
div
dec
or
xor
xor
adc
neg
pop
pop
es
fs
fisubr
pop
aaa
inc
loope
jo
lock
(bad)
xchg
jae
icebp
scas
fstp
dec
lfs
loope
add
mov
push
(bad)
dec
adc
mov
xchg
push
jmp
imul
lea
mov
xchg
mov
push
in
scas
xor
push
push
and
(bad)
das
jmp
inc
xor
fistp
and
or
out
nop
and
enter
clc
mov
lahf
or
cmc
in
or
or
sar
addr16
les
psrlw
scas
add
jb
sub
fwait
push
adc
jg
icebp
xor
cmp
jecxz
push
pop
sub
add
imul
xlat
push
sub
sub
adc
int
dec
aad
xchg
jg
rcl
xor
sbb
mov
xor
xor
(bad)
xor
ja
pop
sub
outs
mov
pusha
cmps
add
jecxz
pop
scas
xor
(bad)
repnz
mov
shr
and
sub
jnp
xchg
in
lahf
ficom
call
sahf
dec
push
cdq
ja
mov
pop
cs
loopne
mul
push
pop
push
scas
jno
fild
ror
fcomp
test
icebp
outs
mov
(bad)
lods
cld
and
repz
sti
jbe
mov
cmp
cdq
scas
test
mov
mov
retf
icebp
cwde
inc
adc
mov
scas
repnz
enter
mov
mov
scas
repz
and
je
jmp
pop
in
pop
in
xchg
xchg
imul
push
xchg
aam
inc
cmp
bound
fistp
fmul
pushf
rep
cdq
stos
and
and
dec
mov
bound
gs
loop
add
and
jmp
arpl
jbe
sub
stos
mov
and
sbb
aas
icebp
nop
mov
outs
jge
(bad)
adc
dec
ja
fadd
push
stos
push
pop
call
fstp
jg
(bad)
fisubr
test
dec
lods
cmps
imul
lahf
push
inc
mov
(bad)
lahf
retf
sub
pop
jle
jmp
mov
and
xor
bound
mov
dec
addr16
push
cwde
pop
dec
mov
les
push
popf
adc
shr
ror
fwait
leave
or
cmps
push
fsub
pop
push
repz
mov
xor
imul
out
cdq
cmp
mov
mov
shl
add
loopne
pop
mov
add
sbb
loop
xchg
xchg
in
ss
pop
mov
jl
hlt
jp
adc
inc
retf
inc
test
das
and
xbegin
loopne
mov
cmps
sbb
icebp
je
adc
call
pop
repz
(bad)
fs
cmps
or
xchg
fldenv
iret
mov
mov
stos
repnz
mov
jecxz
sahf
sbb
cmps
push
cmp
lea
or
fdiv
stc
or
aaa
or
stc
imul
pop
mov
hlt
jno
hlt
outs
sbb
add
outs
lds
aam
test
xchg
push
outs
je
ins
mov
and
cmp
inc
sbb
outs
inc
mov
jnp
and
and
cld
xor
cmp
xchg
inc
movs
imul
test
sub
xlat
arpl
aas
jae
dec
hlt
mov
call
inc
(bad)
(bad)
mov
test
loopne
aaa
jecxz
pop
jnp
xor
movs
leave
adc
and
push
iret
cmp
mov
mov
fbstp
mov
enter
mov
push
jl
mov
inc
loope
fnstenvw
inc
dec
sub
dec
xlat
bound
daa
inc
fdivr
lds
fnstsw
pop
pop
or
jp
push
xor
popa
(bad)
lahf
aam
sub
push
rcl
or
sahf
ret
jge
inc
cmp
(bad)
sbb
mov
js
push
aas
xchg
call
xchg
shl
push
cmp
daa
div
mov
retf
mov
iret
and
outs
daa
neg
jae
and
fidivr
mov
jne
(bad)
mov
ja
rcr
xchg
cmc
xchg
shl
pop
add
or
push
add
test
mov
push
popf
(bad)
mov
dec
add
lock
xlat
std
in
push
adc
fdiv
mov
sbb
jp
in
outs
mov
cmc
mov
into
lods
mov
iret
(bad)
or
and
sbb
fild
fsub
dec
push
aad
sti
sub
push
sbb
pop
test
inc
fs
stos
xor
mov
(bad)
push
dec
push
xor
or
(bad)
aam
outs
and
xor
pop
sbb
daa
daa
mov
xchg
inc
inc
xchg
mov
sbb
jne
push
dec
push
jbe
iret
arpl
cs
test
imul
rcl
xor
stos
cld
call
daa
xor
mov
in
mov
sbb
adc
out
in
into
xor
fnsave
ret
cld
cmps
mov
cmp
push
inc
xchg
gs
rol
xor
shl
out
jle
jno
fwait
jl
icebp
jae
popf
fldenv
clc
mov
push
mov
push
int3
cmp
sub
pushf
(bad)
xchg
mov
aam
jbe
iret
dec
xor
(bad)
ficom
clc
push
bound
in
ret
jge
cmps
sub
popf
dec
push
pop
aas
xor
xor
push
mov
or
repnz
inc
sar
pop
adc
sub
(bad)
lock
xor
jg
cs
add
test
push
jmp
lock
mov
sbb
(bad)
pop
jnp
and
ds
icebp
repz
ja
mov
popf
sbb
imul
std
pop
mov
call
push
cmp
shr
and
jl
cmp
mov
mov
lods
(bad)
test
mov
sub
nop
imul
and
in
movs
sbb
pop
(bad)
jg
mov
mov
jl
pop
jl
ds
loope
add
fiadd
fcom
jecxz
dec
push
out
(bad)
jnp
fidiv
popf
jle
daa
dec
dec
mov
push
pop
and
push
jmp
mov
mov
pop
dec
int3
lods
jmp
jecxz
and
mov
dec
mov
call
(bad)
retf
in
jns
iret
scas
dec
mov
mov
pop
into
inc
mov
mov
lods
inc
xchg
xchg
jle
jle
xchg
or
xor
xchg
push
adc
jne
mov
mov
sub
aaa
std
repz
pmulhw
loope
xchg
cmp
pop
lock
mov
jmp
mov
jle
stos
out
xchg
add
ins
xchg
scas
dec
cmp
jns
jb
mov
push
(bad)
adc
cmp
shl
ins
add
je
ror
xor
shl
push
lock
mov
arpl
hlt
outs
fwait
stos
ss
xor
scas
in
ds
push
retf
add
(bad)
stos
ja
lock
fnstcw
stos
stos
mov
mul
push
pop
pop
aad
in
push
ror
mov
and
push
stc
xchg
test
add
les
pop
xchg
xor
fwait
cmc
dec
jns
jmp
or
movs
lea
jge
cbw
mov
or
and
faddp
mov
pop
xor
push
dec
fs
(bad)
dec
pop
test
test
lock
inc
pop
or
fsubr
jmp
or
cdq
popf
pop
loop
cmps
add
fisub
or
shl
mov
push
int3
outs
pop
xchg
and
inc
hlt
push
popa
and
xor
mov
mov
pop
push
inc
mov
test
rcr
sub
jg
psrlq
sbb
retf
jno
inc
rol
xchg
xor
fdivrp
leave
inc
imul
xor
imul
jmp
call
xor
mov
lods
arpl
sbb
mov
in
icebp
mov
fdiv
dec
jbe
ficom
mov
lds
inc
mov
lahf
add
xchg
sub
or
call
pop
(bad)
mov
and
in
push
and
fld
and
inc
jo
call
adc
sbb
add
test
and
dec
pop
mov
pop
adc
(bad)
mov
fdivr
push
bound
push
and
cwde
addr16
xor
mov
pop
jb
loope
push
add
sbb
and
mov
addr16
jo
or
push
inc
sub
mov
enter
into
pop
dec
mov
(bad)
and
inc
push
pop
mov
imul
pop
arpl
cli
addr16
inc
ror
outs
sbb
fiadd
nop
jae
in
sbb
test
imul
aad
retf
jbe
xor
xor
retf
xlat
xchg
bound
cmp
xchg
adc
sub
dec
inc
ret
outs
pop
pop
dec
aas
adc
xor
dec
sar
xchg
push
dec
lods
icebp
sar
fidiv
mov
or
dec
lds
pop
xchg
loope
fdiv
fwait
mov
push
sub
or
in
enter
ins
rcl
pop
sbb
in
repz
cld
movs
cmp
push
push
bound
and
jmp
and
out
fxch
adc
sbb
mov
cmp
lahf
mov
scas
inc
outs
sbb
sahf
sti
ins
xchg
movs
pop
mov
push
xchg
pop
push
lods
mov
clc
jp
sub
enter
push
pop
sub
adc
dec
cmc
fadd
push
add
xor
lahf
jl
les
inc
push
sbb
cwde
jl
and
mov
arpl
dec
mov
mov
sub
shr
pop
leave
mov
mov
xchg
repz
call
xchg
pop
rcl
icebp
sub
inc
icebp
jns
adc
test
inc
(bad)
jmp
pop
inc
pop
lock
add
pushf
mov
cmp
std
ret
inc
in
call
cmp
push
stos
popf
xor
dec
xor
das
add
push
test
and
cmp
scas
jno
mov
adc
dec
movs
dec
ror
pushf
sbb
push
in
and
lahf
js
hlt
test
je
mov
xchg
cmp
mov
dec
pop
sub
inc
fild
adc
jb
add
nop
loopne
adc
shl
std
psraw
push
sub
mov
mov
mov
in
loope
outs
pushf
into
add
stos
adc
and
fsub
ficomp
lods
jbe
pop
in
gs
jl
xchg
cmp
fiadd
mov
push
or
jp
dec
rol
lds
neg
dec
fst
mov
cli
cmp
and
mov
lahf
cmp
mov
xor
mov
pop
sbb
std
(bad)
(bad)
iret
mov
mov
inc
arpl
cmp
or
jmp
xchg
and
mov
mov
xor
cmp
jnp
sub
dec
xchg
add
ins
jb
mov
popf
inc
xchg
cmc
jmp
(bad)
cmc
ret
push
inc
dec
popa
pushf
adc
mov
or
pop
imul
ret
sbb
test
outs
inc
cmp
lods
add
sbb
sbb
jmp
adc
sbb
pushf
push
xchg
mov
retf
fld
sub
addr16
es
jg
and
outs
mov
popf
int3
push
shl
sub
pop
xchg
pop
mov
sub
adc
inc
adc
test
fnstenv
jle
(bad)
jl
fxch
jmp
push
repz
xor
cmp
jle
icebp
pop
and
xchg
inc
jl
jecxz
mov
or
cmp
gs
push
imul
outs
inc
sbb
adc
rcr
sbb
jg
cs
out
pushf
or
and
jmp
adc
mov
xchg
sahf
push
in
add
dec
leave
xchg
jns
lods
out
or
dec
fucom
push
sub
sbb
js
dec
or
push
popa
push
test
inc
inc
add
loope
push
pop
jb
mov
add
outs
(bad)
jl
dec
sbb
dec
ja
or
clc
neg
mov
retf
call
sub
dec
pushf
mov
xor
mov
push
mov
mov
pop
out
dec
sub
sub
cmp
or
jge
adc
enter
or
test
lahf
jno
repz
add
nop
mov
scas
leave
out
dec
out
pop
lar
mov
(bad)
mov
es
and
cs
push
sbb
xlat
rcl
cmp
dec
inc
sbb
out
jecxz
stos
xor
or
icebp
push
ror
sub
or
push
imul
push
push
xlat
int3
mov
pusha
xchg
icebp
dec
dec
add
pop
fsub
push
jmp
fwait
mov
and
inc
hlt
data16
inc
in
add
icebp
xchg
and
add
cmc
popa
ficom
xchg
pop
ins
push
cmp
dec
cmp
stos
xchg
xchg
push
hlt
test
mov
or
inc
out
in
mov
adc
lods
mov
jns
mov
cli
push
adc
stos
sbb
dec
xchg
xor
sbb
out
out
mov
loop
push
pop
lods
push
jmp
or
(bad)
lods
stos
adc
ret
pop
xor
dec
xor
push
lahf
mov
fmul
jmp
mov
shr
and
sbb
stos
lods
rol
shr
lahf
jle
pusha
mov
inc
test
xchg
and
mov
inc
add
test
repnz
xchg
pop
inc
xchg
dec
jae
cmp
ror
fs
les
lock
or
ret
(bad)
mov
mov
dec
inc
hlt
loop
and
jmp
lahf
fdivr
jo
add
dec
push
cmp
add
xchg
(bad)
pop
pop
jmp
jecxz
ror
jns
xor
out
dec
xchg
rol
ss
loop
jb
and
not
and
inc
(bad)
rol
jnp
mov
cmp
push
jne
cmp
jae
add
lea
push
or
sub
sub
xchg
call
in
imul
daa
inc
mov
xchg
sub
aas
lods
int3
mov
inc
jmp
xchg
push
call
test
pop
jmp
int3
shl
lods
jl
fistp
rcr
xor
mov
aaa
mov
mov
and
jp
pop
mov
data16
and
xchg
ror
dec
dec
jl
je
cmp
jmp
or
cmc
dec
pop
push
xchg
pop
sahf
pop
jnp
int3
adc
xor
push
mov
adc
mov
and
sbb
cmp
popf
mov
push
and
xchg
mov
jae
xchg
repz
(bad)
lds
mov
push
fisttp
jo
fdivr
sbb
and
jg
xlat
add
into
in
ds
dec
push
pop
scas
dec
xchg
cwde
ficom
loope
enter
pop
mov
or
jmp
jmp
add
aad
retf
jne
mov
outs
pop
cli
jecxz
iret
mov
iret
into
dec
xchg
mov
mov
adc
sub
into
pop
mov
loopne
cmp
sbb
xchg
sbb
cdq
pusha
movs
adc
stos
or
adc
cmps
movs
retf
sbb
call
retf
xchg
dec
cmp
ins
push
mov
fs
inc
inc
mov
and
mov
stos
imul
jns
imul
(bad)
call
adc
es
cli
adc
je
xor
ins
aaa
shr
call
mov
mov
aam
in
mov
pushf
aaa
mov
fist
daa
imul
adc
aas
mov
mov
popf
sbb
popa
lods
leave
scas
xor
jg
pop
repz
and
xchg
je
pop
shr
stos
scas
adc
scas
xchg
xchg
pop
retf
lock
dec
sbb
lds
fsubp
sbb
nop
xor
dec
aam
xchg
jb
test
fst
inc
xchg
dec
xchg
adc
push
leave
in
pusha
and
push
push
inc
jp
(bad)
pop
fisubr
out
sub
sub
call
(bad)
stc
jecxz
dec
(bad)
stc
mov
and
xchg
sar
ss
and
xchg
jmp
das
sbb
add
and
in
push
xchg
popa
jb
call
enter
or
cmp
adc
lods
aas
mov
int3
adc
div
xor
rcr
bound
adc
mov
out
push
(bad)
pop
add
pop
cs
push
adc
xchg
rol
popf
fidiv
popa
mov
(bad)
cmc
sub
bound
vmovups
mov
jecxz
or
iret
nop
shr
mul
xchg
ret
and
and
ror
and
adc
stos
nop
fild
bound
cmp
rcr
jecxz
dec
cmp
xchg
dec
sar
out
and
lock
popa
add
cmp
int3
and
mov
stos
push
rcl
iret
clc
push
jp
out
pushw
xchg
dec
sbb
fsub
mov
fbld
mov
cmp
cmc
out
push
mov
test
xlat
pushf
popa
inc
jle
or
adc
pop
rcl
sbb
add
addr16
add
push
(bad)
jo
in
call
mov
jl
lds
cmp
jns
jge
mov
mov
mov
test
int
aam
xchg
fs
jbe
pop
jge
dec
imul
xor
add
in
stos
mov
sbb
mov
xchg
retf
ja
inc
shl
jo
cdq
xchg
or
sub
sbb
jbe
test
imul
sub
ss
mov
dec
xor
sub
sbb
cmp
shl
(bad)
fdivr
aaa
jae
cwde
lods
push
addr16
and
std
pop
xor
xchg
push
pop
pop
dec
push
and
and
jb
xchg
jb
inc
in
dec
inc
movs
add
test
repnz
loopne
adc
pop
or
aaa
popa
adc
jg
jo
cld
cmps
(bad)
adc
fmul
(bad)
ficomp
add
mov
mov
cmp
rol
aad
mov
test
jae
ror
loop
xor
xor
cmps
xlat
mov
cmp
js
fidiv
push
sub
xchg
sub
push
cmps
rcl
adc
push
add
cmp
dec
xchg
and
pop
push
jmp
movs
popf
cdq
lods
jns
movs
sbb
and
cmp
jle
cmp
leave
aas
sbb
sbb
call
jmp
rcr
push
ror
mov
xchg
sub
mov
in
shl
adc
sbb
ss
jns
mov
test
std
dec
push
les
call
enter
pop
fistp
enter
clc
pop
sbb
mov
sub
push
xor
pop
sub
mov
push
sbb
adc
inc
mov
sub
dec
lods
push
imul
adc
sbb
xor
ins
and
cmp
xchg
in
xor
rcl
and
pusha
outs
ret
(bad)
in
sbb
cmp
add
repz
or
ret
xor
pusha
aam
jae
leave
mov
out
mov
imul
sbb
inc
cmps
daa
xor
sahf
leave
xchg
sbb
push
pop
clc
sub
cmp
mov
jne
clc
xor
leave
mov
pop
aam
pop
adc
and
daa
ret
int
sbb
inc
add
out
or
ins
cli
pop
cdq
pop
xlat
inc
push
(bad)
lock
aad
mov
adc
retf
std
sbb
sub
dec
sbb
mov
mov
lods
pushf
adc
push
pop
fsub
(bad)
jg
inc
sbb
xchg
inc
fwait
jo
mov
mov
(bad)
in
sub
gs
pop
mov
jb
aam
test
push
push
sbb
cmp
add
imul
sub
sub
inc
mov
pusha
lock
pop
mul
stos
add
mov
add
stos
icebp
adc
sar
or
inc
push
jp
xor
mov
jae
jmp
fdiv
or
mov
pushf
mov
dec
retf
repz
xchg
test
call
test
ins
cmp
xor
cli
mov
xchg
xor
sbb
or
jl
cmp
(bad)
cmc
mov
or
xor
inc
or
sbb
lahf
cmp
loop
jg
leave
xchg
push
cmps
loope
inc
sbb
loop
lods
mov
stos
xchg
or
stos
or
jmp
xor
pop
sub
pop
inc
dec
or
je
cmp
push
xor
and
shr
and
mov
xchg
test
mov
jmp
les
loopne
stos
sub
aad
mov
test
ficomp
repnz
inc
xor
ds
xchg
dec
mov
cmp
adc
jns
and
mov
push
dec
adc
mov
sar
sbb
push
dec
outs
fs
jmp
or
outs
aaa
xchg
adc
mov
fstp
out
pop
fwait
inc
iret
ds
ficomp
sbb
sbb
movs
push
fidivr
fwait
pop
aaa
dec
push
adc
retf
lock
mov
mov
xchg
and
jl
mov
stos
xor
nop
pop
and
hlt
daa
sahf
push
mov
sub
inc
hlt
lods
xchg
jge
mov
das
jmp
cmp
or
xchg
in
movs
or
mov
repz
movs
aaa
mov
fwait
inc
mov
rol
inc
(bad)
mov
aad
adc
(bad)
in
dec
clc
scas
add
fstp
in
dec
outs
sbb
inc
jne
(bad)
dec
sbb
cmp
mov
inc
(bad)
push
imul
adc
arpl
(bad)
jl
arpl
sbb
or
lock
leave
sub
das
xchg
jo
cmc
inc
leave
adc
cs
cmp
xor
sub
and
and
sub
out
popf
test
imul
push
hlt
lods
ret
push
pop
imul
std
push
les
mov
xchg
fadd
fst
mov
push
inc
mov
mov
or
ret
mov
clc
fbstp
mov
push
push
push
retf
jae
cmp
sub
stc
push
xchg
push
stos
repnz
sbb
cmp
outs
imul
xchg
test
mov
push
inc
mov
sbb
sub
adc
stos
cmps
mov
daa
pop
ret
mov
or
adc
sbb
ret
cmc
jp
jmp
cmp
jg
(bad)
xor
pop
fist
add
cmp
and
xor
imul
mov
pop
mov
push
pop
pop
or
sahf
mov
inc
jb
pop
(bad)
lahf
push
ja
sbb
push
inc
sub
jnp
xor
ss
outs
xor
sahf
pop
(bad)
rcl
and
sti
adc
and
test
or
or
mov
xor
out
jnp
push
pop
data16
out
push
test
popa
jp
push
pop
cmp
push
pop
in
pop
adc
outs
lea
mov
xchg
mov
sub
popf
mov
mov
outs
into
rcr
bound
mov
pop
not
ss
call
faddp
stos
(bad)
inc
jb
cmp
enter
add
mov
(bad)
add
mov
inc
jle
fst
test
jecxz
inc
xlat
and
push
cmps
repz
mov
xor
(bad)
jns
std
cmps
inc
lds
or
adc
int
in
xor
xor
cmp
sbb
or
jmp
jmp
stos
lds
inc
fs
inc
faddp
pop
jle
rol
xchg
sub
dec
xchg
sbb
mov
int3
jmp
pop
test
in
push
jb
lock
xlat
xor
and
mov
icebp
sbb
int3
out
loopne
cmps
gs
cmps
pop
sub
adc
push
stos
or
std
add
out
jp
sahf
mov
(bad)
mov
sbb
mov
retf
adc
fidiv
fnstenv
loopne
sub
es
stos
nop
ret
lahf
out
out
ins
jg
jae
and
(bad)
sub
loopne
ins
(bad)
xchg
sahf
into
test
sbb
pop
mov
or
pop
shr
jne
cmp
xchg
and
xchg
fdivr
int3
in
or
push
fincstp
jle
adc
lods
iret
cwde
mov
push
sbb
lds
xlat
fnstsw
inc
cmc
jmp
jl
out
ret
aaa
sub
cmc
add
addr16
call
out
or
mov
icebp
mov
(bad)
test
iret
push
dec
icebp
mov
cld
inc
jmp
cmp
push
sbb
jbe
add
push
jp
shr
test
or
test
ficom
out
int3
ror
and
arpl
call
push
addr16
xchg
addr16
cdq
sub
loope
repnz
xor
(bad)
(bad)
sbb
in
mov
xor
mov
inc
cmp
bnd
cs
cmp
mul
shl
xchg
mov
dec
mov
mov
inc
enter
push
push
mov
inc
loopne
add
push
test
mov
cwde
shl
jno
fcom
jmp
enter
fst
in
adc
(bad)
sbb
jo
pop
mov
stmxcsr
fstp
sbb
mov
stos
cmp
jecxz
cs
or
cmp
test
movs
xchg
xchg
(bad)
fld
adc
or
repz
pop
imul
icebp
dec
pop
out
and
pop
sbb
shr
repz
scas
iret
sbb
dec
sysenter
loopne
jg
jnp
cld
mov
shl
push
ds
scas
jne
sbb
jno
pushf
mov
ss
pop
sub
es
pop
ret
dec
cld
mov
mov
data16
pop
inc
lahf
hlt
fs
outs
ss
jns
pop
xor
dec
cdq
addr16
mov
bound
xchg
sbb
cmp
mov
push
add
aaa
lods
push
test
and
or
add
add
adc
clc
jecxz
sbb
pop
jno
mov
ja
js
idiv
dec
(bad)
adc
jmp
fwait
push
mov
iret
dec
inc
or
popa
scas
xlat
dec
retf
test
and
rdtsc
mov
out
xlat
or
pop
ret
adc
cmp
xor
aas
jmp
sub
in
cmp
dec
jl
repnz
fistp
gs
xor
mov
jl
(bad)
cmp
mov
cld
cli
ret
cmp
das
xchg
(bad)
sub
fisttp
xor
not
sub
xchg
dec
into
(bad)
in
adc
aas
pop
dec
xchg
xor
and
mov
sbb
jge
mov
sub
pop
xor
popa
adc
into
pop
or
lds
xchg
sub
mov
adc
dec
jp
gs
fidiv
lds
push
popa
mov
pop
aam
pusha
rcl
adc
adc
ss
mov
add
stos
jmp
cld
push
loope
mov
int
mov
imul
pop
mov
(bad)
mov
jle
xchg
mov
xor
cmc
inc
or
shl
inc
sbb
jecxz
in
dec
out
loopne
cmp
test
in
mov
shl
inc
and
mov
jo
or
test
ret
test
fdiv
clc
iret
repz
out
js
data16
in
xchg
mov
adc
(bad)
jmp
or
mov
and
xor
loop
adc
xor
mov
imul
push
or
aad
das
cld
mov
je
test
shl
(bad)
and
mov
cmp
xor
ror
and
xchg
enter
arpl
call
mov
aad
mov
push
jb
call
shr
jb
dec
mov
and
add
pop
sub
cmps
dec
pop
mov
or
or
xchg
jge
cwde
or
lea
(bad)
adc
sbb
xchg
mov
fcom
sbb
xor
in
retf
add
jno
or
xchg
lock
outs
pop
daa
sbb
pop
les
push
pop
sbb
lock
outs
sub
ja
movlps
test
cmc
retf
sub
lea
jns
dec
scas
push
ror
xchg
sub
add
push
pop
sbb
sbb
(bad)
lahf
sbb
outs
pop
sub
in
loope
(bad)
dec
inc
fisubr
sub
or
in
and
xlat
mov
rcl
gs
mov
(bad)
dec
and
mov
addr16
cld
xchg
sub
add
push
jmp
mov
adc
cwde
add
call
lock
ja
enter
xor
mov
clc
lds
dec
(bad)
xchg
out
jno
ds
and
fsubr
outs
loope
add
ins
test
cld
add
push
mov
add
stos
lock
inc
xchg
movs
loope
xchg
dec
push
(bad)
add
aad
sub
(bad)
fadd
movs
cmp
cwde
mov
(bad)
xor
das
mov
outs
aaa
loopne
sub
out
div
and
or
out
or
bound
out
jp
inc
mov
retf
addr16
inc
movs
out
in
mul
stos
cmps
jmp
adc
scas
add
imul
pop
mov
imul
add
into
xor
call
sub
jl
pop
jmp
xor
xor
xor
ret
xor
sti
xchg
sahf
sahf
push
add
int
sub
adc
dec
pop
test
aam
xchg
sub
add
jge
sbb
jecxz
mov
outs
jp
lods
cmp
nop
shl
jge
cmp
jbe
fsub
xchg
xor
les
out
ins
or
ins
push
leave
fild
fs
fisub
mov
call
repz
ret
and
adc
(bad)
fisubr
jo
add
mov
imul
push
(bad)
fisttp
push
pop
or
sub
ret
out
(bad)
mov
pop
inc
mov
rol
sub
ret
shl
cmc
repz
pop
dec
sub
mov
into
dec
out
sub
adc
jp
adc
adc
jmp
outs
dec
idiv
sub
ss
in
aam
mov
movzx
add
pextrw
mov
jb
pop
rcr
mov
jmp
out
lods
out
das
xchg
lods
shr
movs
out
fsub
xchg
push
rol
xchg
gs
sti
inc
sbb
(bad)
stc
jo
push
jb
xchg
js
out
xchg
cmp
cmp
and
ds
sbb
inc
inc
push
ficom
and
clc
popa
adc
mov
adc
push
idiv
mov
hlt
(bad)
std
rol
jmp
in
and
add
inc
cmc
sbb
pop
push
jmp
ins
aaa
(bad)
sar
(bad)
aam
pop
loope
(bad)
xor
neg
push
adc
test
(bad)
rol
inc
mov
pop
mov
cmp
and
push
ja
pop
not
lods
test
pop
je
add
xlat
lods
pop
jmp
aam
shl
mov
fwait
mov
cmp
mov
pop
push
ror
mov
lods
mov
pop
add
ficom
les
loop
les
mov
sbb
sar
movs
das
(bad)
pop
dec
mov
mov
sub
rol
sbb
(bad)
les
mov
int
adc
daa
daa
dec
test
cwde
mov
sbb
inc
sub
ror
popa
inc
out
mov
mov
cli
push
das
push
pop
out
dec
cmps
or
popf
(bad)
or
xor
pop
and
jo
jno
cdq
in
inc
call
sbb
and
sub
mov
or
jle
mov
adc
xchg
inc
inc
arpl
lahf
ss
push
xchg
lods
cdq
imul
pop
xchg
dec
pop
loopne
or
lods
sub
je
in
hlt
xor
idiv
repz
lods
shr
jbe
mov
cmc
lods
fs
fcmovb
inc
dec
(bad)
fidiv
pop
lods
ins
dec
ret
mov
shr
lods
adc
mov
scas
das
mov
enter
add
jnp
jbe
movs
add
xor
test
and
mov
mov
aas
inc
sbb
adc
sub
mov
push
and
add
mov
push
jp
or
xchg
adc
inc
inc
bnd
std
into
jb
xchg
adc
inc
(bad)
das
and
rcr
jbe
stc
mov
mov
fsub
ret
pop
and
retf
pop
mov
(bad)
rcl
push
sti
fstp
jo
frstor
jno
xlat
cmp
movs
xchg
fisttp
sti
jge
fistp
mov
ja
mov
addr16
cld
test
les
mov
scas
aas
inc
lods
jmp
or
lock
pushf
pop
iret
popf
daa
(bad)
mov
cmps
pop
fsub
or
sbb
xchg
jl
shr
inc
das
xchg
and
fdiv
call
pop
push
or
and
je
mov
dec
into
ins
mov
add
push
pop
and
push
stos
or
and
mov
jns
clc
cli
adc
ins
cmc
mov
int
mov
ins
xchg
pop
ins
jmp
(bad)
sbb
(bad)
retf
movs
fiadd
jp
xor
mov
jo
fisttp
lods
push
clc
sub
test
xchg
push
iret
xor
push
sbb
pop
iret
shl
xor
and
mov
sar
push
jb
jecxz
pop
neg
popf
dec
xchg
stos
call
xchg
jae
lahf
add
add
repz
popf
lea
cdq
jmp
in
out
lods
xor
xchg
inc
adc
inc
int3
jp
dec
(bad)
(bad)
pop
mov
scas
pop
js
call
adc
mov
fistp
stos
and
test
xor
clc
xor
xchg
fs
adc
loop
scas
lea
pusha
xor
cmps
in
arpl
ds
loope
add
ja
(bad)
bnd
sub
clc
sub
test
pop
(bad)
(bad)
fadd
cmp
cdq
mov
sbb
icebp
retf
shl
sub
ins
jle
mov
sub
cmp
or
movs
pop
aas
dec
dec
pop
mov
mov
ins
jle
out
xor
cmp
aam
cli
and
ja
fisubr
bound
pop
mov
lea
ds
push
push
ret
or
outs
loope
inc
cmp
in
in
adc
adc
mov
call
mov
push
std
adc
xchg
push
pusha
mov
adc
add
sub
xor
iret
inc
leave
jmp
push
xchg
leave
or
std
xor
cmc
sub
adc
mov
jb
xchg
mov
sbb
mov
mov
(bad)
pop
dec
out
in
in
xchg
test
mov
or
int3
(bad)
inc
xchg
xchg
call
mov
aam
lahf
and
mov
push
push
out
push
outs
jnp
outs
imul
xchg
fcom
mov
mov
sub
ja
and
not
add
jae
push
in
sbb
xchg
mov
fdivp
imul
push
push
mov
xchg
(bad)
jg
mov
cmp
mov
clc
jno
pop
iret
test
cs
lea
les
push
mov
leave
push
push
idiv
aaa
jmp
cmp
ret
cmp
fld
into
and
(bad)
daa
mov
enter
inc
cs
ins
adc
add
stos
fld
cmp
dec
pop
push
mov
sar
mov
pop
and
mov
push
or
ss
jmpw
inc
mov
push
lods
shl
mov
inc
mov
jb
mov
dec
rcl
loope
stos
aaa
addr16
mov
int3
mov
mov
cmp
pop
and
aas
pushf
push
test
lahf
enter
sbb
retf
nop
xchg
jb
xor
movs
imul
mov
(bad)
(bad)
adc
sbb
call
xchg
cs
push
rcr
and
call
ins
mov
mov
test
mov
cdq
and
xor
jg
cld
daa
push
test
xchg
xchg
popa
dec
das
fcmovne
or
pop
add
inc
cmp
inc
ror
stc
mov
(bad)
(bad)
pop
add
xchg
retf
mov
mov
lods
out
pushf
jle
mov
mov
sbb
push
inc
mov
shl
clc
inc
fsubr
scas
call
jg
push
or
call
add
cmp
cmp
in
inc
add
lds
or
pushf
jge
inc
repnz
dec
mov
(bad)
fwait
pop
mov
push
out
mov
push
or
cs
pusha
jmp
(bad)
call
or
arpl
pop
loope
mov
xchg
sbb
mov
and
movs
mov
in
xchg
cdq
lea
out
loopne
inc
xchg
mov
mov
scas
xor
fstp
shl
not
ret
inc
inc
push
push
aas
jns
and
imul
call
test
popf
ror
mov
pop
ret
in
movs
xchg
scas
test
add
nop
or
cli
je
das
std
mov
pop
mov
icebp
adc
dec
mov
mov
adc
jo
pop
retf
retf
dec
repnz
jnp
and
push
cs
jo
out
cmp
aad
adc
std
xchg
cmp
test
pop
pop
fist
lahf
jp
pop
fisub
xor
dec
sbb
(bad)
sub
xchg
push
inc
out
xor
mov
(bad)
push
sbb
cmp
test
mov
cld
bound
ret
int3
lods
adc
adc
arpl
and
jle
add
bound
xor
movs
sahf
mov
sub
cmp
movs
pop
mov
and
dec
fbstp
sbb
retf
es
mov
or
mov
imul
add
ja
mov
mov
adc
stos
daa
ret
pusha
lock
xchg
jns
mov
mov
and
loope
mov
adc
cwde
ds
aam
pop
out
add
rcr
jge
jl
inc
inc
mov
js
daa
or
ss
cld
into
inc
push
push
(bad)
xlat
mov
ficomp
mov
inc
sub
enter
jmp
sbb
(bad)
mov
hlt
bound
fldenv
mov
sub
inc
je
sub
cmp
call
pop
es
jmp
fistp
fs
test
cwde
add
xchg
mov
(bad)
mov
dec
mov
or
retf
or
cmp
jle
(bad)
and
lods
scas
aam
dec
fincstp
sbb
stc
fnsave
mov
sti
stc
mov
jnp
jmp
mov
(bad)
loop
addr16
loopne
mov
sub
adc
call
or
fst
cmp
cs
cmp
mov
and
adc
mov
add
mov
enter
push
pop
jb
add
dec
xchg
cmp
ret
(bad)
sbb
inc
in
mov
inc
pop
sti
push
add
push
sbb
jg
mov
push
(bad)
jmp
mov
mov
adc
xchg
stos
fdiv
fmul
and
and
sub
and
arpl
(bad)
(bad)
inc
shr
inc
push
mov
adc
cdq
shl
(bad)
pop
add
repz
scas
fild
push
add
xchg
or
xor
sub
pop
inc
(bad)
int
(bad)
push
call
(bad)
imul
dec
loope
xchg
fnsave
(bad)
dec
pusha
icebp
outs
inc
loop
out
mov
fisub
mov
fs
sbb
pop
or
or
je
les
sbb
daa
iret
push
sub
out
and
cmp
mov
aaa
int
div
mov
mov
mov
push
push
ror
xchg
ret
ret
scas
lods
ss
dec
mov
ja
jecxz
mov
mov
sub
in
mov
mov
out
jmp
cmp
clc
sub
cwde
data16
xchg
nop
inc
add
add
(bad)
aas
data16
cdq
push
ret
hlt
xor
jns
call
out
and
add
movs
loope
je
sub
test
hlt
cmps
jns
ror
cmp
imul
dec
push
aad
popf
cdq
mov
xchg
pop
imul
retf
out
hlt
retf
jnp
lea
jae
scas
shr
add
enter
jae
movs
push
pop
sbb
call
lahf
push
or
dec
shr
lock
cmp
mov
int
rcl
mov
test
outs
dec
and
addr16
jmp
rcl
sbb
retf
mov
std
int3
rcl
xchg
sub
dec
or
sub
pop
or
sub
icebp
dec
mov
adc
(bad)
rcl
mov
stos
in
in
push
jno
stos
daa
add
mov
inc
les
jle
mov
sbb
pop
cmp
out
inc
icebp
nop
out
push
pop
jmp
or
inc
stc
sbb
mov
xchg
out
popa
jo
xlat
lahf
mov
aaa
and
jns
pop
mov
das
mov
pop
add
dec
stc
es
adc
lods
jle
in
and
repnz
push
jmp
push
add
add
cmp
mov
mov
repz
fsubr
mov
xchg
mov
std
pop
data16
sub
in
push
clc
and
je
adc
in
leave
mov
sbb
mov
shr
adc
fisub
clc
xchg
lods
dec
movs
data16
inc
ins
stos
leave
pushf
leave
call
sbb
jne
hlt
mov
sbb
inc
aad
push
hlt
and
jge
jge
mov
ss
(bad)
mov
(bad)
or
lahf
inc
add
mov
scas
lds
je
adc
inc
dec
xchg
stc
cld
movs
rol
loopne
mov
xchg
rcr
dec
xchg
push
shl
push
cmp
test
aam
hlt
mov
xor
pusha
mov
mov
outs
push
pop
sub
adc
cmp
inc
repnz
mov
mov
jo
call
jmp
cli
xor
je
pcmpeqw
or
and
pop
shl
jl
pop
nop
ss
xchg
clc
mov
les
loopne
jns
and
and
cwde
mov
pop
adc
sub
(bad)
push
lock
sahf
outs
adc
jo
mov
sub
xchg
mov
adc
retf
fdiv
outs
test
sbb
test
arpl
add
fldcw
lods
aad
or
jnp
xor
popf
xlat
out
mov
jbe
mov
in
movs
jbe
(bad)
lahf
dec
stc
mov
(bad)
data16
fistp
call
iret
pop
int3
xor
jne
icebp
or
sbb
addr16
dec
loop
(bad)
fs
data16
fmul
bound
setno
adc
sub
out
adc
icebp
(bad)
push
inc
xor
push
hlt
xor
and
add
ja
pop
rcl
jae
cmp
call
lds
xlat
outs
outs
(bad)
and
xchg
inc
retf
add
movs
in
mov
in
xor
sar
inc
into
dec
bnd
call
or
shl
aas
pmulhuw
(bad)
sbb
(bad)
push
scas
(bad)
jmp
add
aaa
rol
mov
xlat
sbb
imul
dec
cmp
int3
push
fcmovnbe
push
add
fwait
movs
cwde
outs
mov
stos
imul
push
sbb
daa
sbb
add
xchg
lea
xlat
fisttp
out
rcl
movs
jle
retf
jns
popf
cld
pop
cmp
ret
push
pusha
adc
vmovntdq
das
sub
mov
fmul
cdq
cmp
adc
sub
push
or
xor
inc
push
jg
pop
mov
mov
loop
mov
fidiv
mov
sub
inc
cld
(bad)
cmp
and
je
dec
or
test
inc
dec
sbb
data16
cmp
xor
sub
inc
and
div
sbb
ret
rcl
arpl
repnz
lahf
std
cld
inc
jmp
push
imul
call
mov
es
inc
mov
pop
dec
cmps
imul
sbb
stos
daa
pusha
mov
(bad)
(bad)
pop
mov
ss
pop
lods
and
clc
or
out
cmps
adc
push
ret
xchg
inc
push
dec
sbb
sbb
call
cmc
xor
imul
or
xor
leave
es
add
lods
and
pushf
dec
jbe
adc
loop
sbb
test
jne
mov
mov
loopne
jb
xor
retf
pushf
sub
cmp
daa
and
add
(bad)
les
xor
fidiv
in
aam
add
mov
stc
arpl
add
jae
inc
mov
adc
scas
scas
pop
xchg
dec
jno
xlat
mov
in
mov
icebp
dec
(bad)
jmp
jnp
loope
in
xor
shl
dec
ret
int3
es
push
push
aad
push
loop
call
dec
adc
and
mov
fs
cmps
jns
retf
fs
push
cs
jne
mov
out
or
nop
scas
mov
les
dec
xlat
(bad)
enter
and
aaa
push
aam
arpl
xchg
pop
sahf
mov
jmp
aas
in
ins
les
sbb
(bad)
mov
hlt
dec
call
mov
pop
add
mov
adc
sub
xchg
ret
xchg
xor
cdq
xchg
or
and
sub
xchg
pop
mov
stos
push
jle
jge
inc
inc
out
xchg
lock
sbb
jno
sbb
adc
push
sub
pop
and
inc
push
in
jecxz
movs
daa
jnp
mov
ins
cmps
scas
xchg
stos
push
pop
bound
(bad)
fisubr
ret
loopne
pusha
(bad)
test
push
jne
nop
out
jbe
lds
scas
mov
cmp
xor
cli
sub
mov
ins
sbb
push
in
add
mov
scas
aam
fsubr
lea
cmp
sub
test
lods
add
lahf
mov
push
(bad)
cmp
cmps
pop
inc
push
(bad)
cwde
out
aaa
jge
cmp
nop
hlt
dec
mov
lods
mov
retf
cmp
push
stc
cmp
sbb
lods
(bad)
sub
adc
push
retf
mov
mov
jae
sub
fwait
inc
mov
mov
nop
aaa
and
pop
(bad)
mov
dec
add
popf
jmp
xchg
(bad)
lods
daa
xor
jae
ss
push
mov
sbb
mov
jmp
adc
data16
adc
and
inc
(bad)
in
outs
div
jnp
pop
fwait
sub
rcl
and
inc
daa
mov
mov
mov
dec
arpl
push
inc
ret
cwde
fucom
iret
mov
ror
fwait
jge
daa
mov
cmp
jns
and
rcl
ja
pop
retf
(bad)
push
stc
pop
dec
loopne
or
add
fcom
dec
xchg
or
loop
xchg
sub
imul
jae
add
mov
sub
imul
mov
lea
shl
mov
xor
dec
in
mov
add
outs
pop
pop
data16
jo
mov
inc
push
mov
data16
or
sub
(bad)
mov
push
or
mov
or
repz
in
sub
sbb
xlat
dec
dec
inc
dec
inc
xchg
pop
loopne
add
adc
in
stos
xchg
add
iret
or
ins
fcomp
mov
pop
sub
xchg
je
jbe
sub
adc
mov
mov
sbb
adc
retf
scas
cmp
mov
push
jb
cmps
stos
pushf
adc
cdq
daa
dec
xchg
icebp
in
enter
jo
add
leave
into
(bad)
jecxz
mov
mov
rcr
or
jl
enter
leave
jecxz
and
fst
fidivr
fldenv
sbb
popaw
fdiv
jne
or
sub
loope
and
xchg
mov
dec
lahf
adc
into
retf
mov
(bad)
mov
dec
jle
push
mul
ficom
xchg
jbe
pop
and
test
inc
add
shl
xchg
leave
ins
inc
lock
pop
dec
ffree
or
sub
std
aad
(bad)
sub
fwait
jmp
push
add
push
mov
jmp
sub
cwde
jno
cs
rcr
cmps
sar
cld
mov
shl
mov
mov
adc
jmp
and
lods
pop
jns
pop
mov
xchg
ss
sbb
test
div
and
retf
adc
in
push
cwde
sub
or
inc
sub
push
in
int
cmp
cmc
xchg
or
test
mov
scas
fs
jp
sub
mov
stc
xchg
stos
push
push
pop
(bad)
jmp
in
out
into
ins
clc
loopne
in
movs
shl
cwde
sbb
loop
inc
cmp
xor
dec
mov
mov
mov
les
scas
lock
dec
ins
mov
adc
xchg
mov
lock
dec
mov
adc
and
sbb
cmps
add
jp
push
xchg
push
sub
inc
arpl
mov
mov
add
xchg
fs
jmp
inc
xchg
stos
in
into
iret
and
retf
mov
push
dec
sub
or
call
mov
jno
mov
popa
shl
adc
push
xor
add
xor
adc
loopne
sbb
cld
and
cli
xor
mov
sti
jmp
cwde
(bad)
pop
das
sbb
scas
jmp
xor
cwde
dec
dec
jmp
cmps
add
sbb
add
adc
mov
jge
xor
ins
sub
test
inc
daa
cmps
or
clc
adc
ret
add
lock
mov
ja
jle
add
mov
jmp
lahf
ins
les
adc
or
mov
mov
or
repz
js
clc
jae
mov
dec
shr
xchg
pop
test
mov
and
aaa
ja
pushf
mov
repnz
cmp
cmp
retf
scas
push
je
rcl
jno
cmp
add
xor
pop
mov
js
lods
push
mov
sbb
add
fistp
test
cwde
push
ret
cmp
mov
push
jge
out
fcomp
cmp
sbb
fist
mov
xchg
mov
push
lods
addr16
(bad)
arpl
popfw
inc
push
xchg
add
push
sbb
push
xchg
repz
mov
daa
pop
and
sub
pop
mov
or
push
int3
call
test
xor
xor
fadd
psraw
lock
idiv
ss
mov
je
xor
and
cmp
cs
sbb
into
push
xchg
mov
mov
pop
cdq
cdq
inc
inc
mov
mov
pusha
add
sahf
outs
xor
add
xlat
mov
push
jo
mov
xor
pop
outs
and
jb
push
and
jns
ss
(bad)
dec
sbb
dec
(bad)
adc
fwait
sar
shr
aam
inc
enter
pop
imul
test
mov
and
push
push
cmp
xor
xor
pop
mov
stos
stc
and
inc
fnsave
aam
sbb
stos
adc
iret
(bad)
out
add
sbb
cmp
loope
aad
fwait
dec
popa
leave
add
pop
out
dec
sbb
dec
repz
enter
enter
mov
mov
sar
pop
inc
gs
dec
das
cmps
push
adc
test
or
sub
loope
lds
outs
fs
or
adc
fdivr
xor
jno
jno
and
add
stos
aam
sub
xchg
or
mov
sub
js
add
mov
test
xchg
test
or
pusha
jl
cmc
mov
mov
mov
pop
repz
mov
pop
mul
mov
int3
mov
outs
loopne
es
adc
ss
inc
dec
xchg
and
jmp
inc
adc
les
add
popf
ficom
sbb
lods
jle
dec
jb
jge
das
mov
mov
adc
cli
(bad)
pop
pop
adc
cmp
ds
xor
or
cmp
mov
shl
pushf
push
xchg
cmp
pop
mov
stos
std
jb
and
and
ficomp
pop
pop
xor
mov
lods
in
imul
leave
sub
push
neg
or
sbb
jp
leave
aad
mov
dec
in
fadd
dec
mov
loop
sub
mov
mov
sbb
mov
pop
ds
jl
bound
dec
push
xlat
inc
sti
aad
mov
jmp
mov
test
retf
imul
xor
fbld
mov
fwait
test
sub
sbb
(bad)
fstp
and
sub
mov
not
(bad)
or
xchg
rol
and
add
in
js
inc
out
(bad)
int3
ror
xor
popa
xchg
cmps
xchg
cmp
xchg
push
dec
fidiv
or
in
fidiv
xchg
jbe
pop
xor
pop
dec
outs
jp
xor
cmp
das
ficom
lods
xchg
jl
inc
ins
jecxz
adc
(bad)
mov
jge
cmp
pop
inc
test
mov
shl
jecxz
inc
out
adc
inc
fucomi
iret
or
cmp
cwde
int
mov
xchg
pop
mov
xchg
ins
jecxz
mov
enter
test
add
popa
fld
inc
iret
imul
pop
out
xchg
lods
inc
std
push
adc
push
pop
sahf
or
dec
js
jg
call
mov
xchg
push
out
ins
lds
shl
cmp
or
adc
fldl2t
rol
sub
jmp
fdivrp
in
into
loopne
test
mov
jmp
ins
pop
and
push
bound
daa
or
out
ret
outs
movs
add
pop
xlat
add
xlat
xchg
mov
les
mov
(bad)
test
sub
mov
imul
rcl
and
sub
clc
ret
scas
and
push
xchg
stos
into
in
mov
out
adc
jecxz
inc
popa
jbe
dec
pushf
mov
nop
pop
dec
cs
add
mov
cmps
icebp
mov
push
dec
dec
dec
rcr
fldenv
jmp
shl
add
(bad)
mov
ins
ret
cmps
sub
setne
or
xor
je
cdq
jne
push
rcr
or
cmp
out
call
inc
stos
das
ror
jbe
outs
pop
addr16
ret
repnz
fst
push
push
mov
ficomp
mov
mov
out
movs
mov
shr
(bad)
in
sbb
jo
jecxz
jge
mov
jp
loopne
cmp
dec
fstp
ss
mov
fwait
mov
push
fs
cs
xor
movs
lock
sbb
sbb
and
add
shl
sub
pop
push
in
outs
imul
sbb
jns
arpl
stos
hlt
pop
aaa
dec
and
and
sti
inc
leave
lea
rcr
popf
or
dec
pop
aas
clc
push
enter
pop
or
repz
or
xchg
stos
sub
adc
adc
repz
jbe
repnz
inc
std
xor
mov
imul
jp
jno
ficom
cmp
sbb
ret
test
add
outs
(bad)
aas
jmp
pop
das
in
hlt
xor
scas
pop
cli
push
in
pop
push
add
push
stos
inc
bnd
cmp
aas
imul
mov
xor
mov
cmp
jbe
xchg
sbb
popf
push
out
sbb
fcom
cld
in
add
pop
ss
jo
cmp
xchg
adc
jl
ins
int
mov
lahf
int
mov
adc
dec
loop
test
xchg
in
in
les
pop
and
loopne
jo
(bad)
jg
ja
enter
fs
(bad)
mov
lock
and
test
sbb
sub
pop
rol
movs
push
shr
sbb
cmps
inc
call
gs
cmp
iret
pop
mov
scas
loope
icebp
movs
and
icebp
mov
cmp
ret
movs
(bad)
ins
out
or
sbb
push
sub
mov
sub
mov
mov
mov
rcr
bsf
inc
jmp
dec
xlat
cmp
push
aam
fwait
dec
loop
jb
adc
fs
push
jb
sbb
jl
dec
mov
sbb
sbb
push
ror
ja
movs
stc
lea
fdivr
pop
outs
imul
fild
and
or
pop
imul
fstp
(bad)
mov
add
mov
and
add
imul
stc
cli
mov
into
mov
dec
sti
mov
cmp
inc
xor
push
rol
loopne
xor
rol
mov
sub
les
add
js
adc
dec
xrelease
std
mov
or
mov
xor
enter
stos
mov
stos
sub
sub
xchg
inc
mov
or
outs
ret
test
imul
pop
jae
clc
mov
sbb
push
adc
sbb
mov
(bad)
cld
jbe
sub
sbb
cli
and
and
inc
sbb
dec
cmp
test
daa
adc
sub
mov
sub
inc
or
dec
sub
pop
out
hlt
ss
stos
pop
add
ins
gs
int3
or
lock
xchg
lods
cmp
push
les
popf
cmc
mov
data16
sbb
retf
test
loop
call
das
in
or
call
ins
lds
pop
pop
data16
int
(bad)
pushf
sub
loope
add
jmp
mov
lods
sub
retf
xchg
sti
adc
cmps
cld
sub
mov
fistp
mov
ret
mov
and
cmp
lods
dec
aas
stos
sub
inc
ficomp
adc
pop
out
sub
pop
cwde
aad
icebp
call
and
push
mov
mov
outs
fidivr
scas
js
retf
mov
adc
outs
out
mov
push
(bad)
shr
xchg
call
jns
mov
das
xor
stc
popf
sub
adc
loopne
jnp
push
out
pushf
pop
out
add
call
dec
mov
cmc
shl
or
lea
inc
or
push
sbb
push
lds
inc
sbb
adc
and
xchg
jne
mov
ret
test
lock
add
sub
jmp
jo
call
test
fbstp
dec
retf
sub
add
fldenv
fdivr
xchg
fdiv
cld
int
xor
or
test
(bad)
push
jg
or
and
out
shr
in
xchg
inc
inc
dec
or
(bad)
pop
les
hlt
mov
pop
pusha
mov
das
lods
mov
push
punpckldq
cmps
aad
scas
out
xor
(bad)
xchg
not
addr16
jo
jge
fidiv
(bad)
js
mov
inc
lods
mov
fstp
lock
test
sbb
push
in
shr
(bad)
rol
mov
rcl
fadd
mov
and
dec
xchg
push
jno
add
or
inc
dec
sub
aam
mov
sbb
call
adc
leave
mov
jle
and
add
ja
cmps
cmc
pop
out
out
pop
xchg
stos
pop
mov
sti
jmp
fisub
adc
aaa
movs
rcl
div
jmp
or
in
mov
xchg
(bad)
adc
outs
jbe
sbb
scas
popa
sahf
dec
ret
adc
test
mov
dec
ins
in
mov
push
imul
jp
cmp
fs
jmp
outs
(bad)
mul
pop
push
add
imul
pusha
fwait
jg
inc
add
in
daa
sar
lods
and
pop
gs
into
ror
pusha
inc
pop
inc
imul
xchg
imul
movs
mov
sub
mov
in
dec
das
push
dec
pop
fdiv
dec
arpl
(bad)
jnp
jb
into
jp
dec
movs
movsx
push
mov
ss
add
jae
jb
and
xchg
push
inc
xchg
add
outs
test
or
cmc
in
xor
jmp
enter
add
stc
mov
push
adc
mov
mov
rcr
jns
popa
aaa
xor
stc
in
pop
mov
xchg
mov
xchg
mov
xchg
sti
adc
mov
test
mov
adc
pop
stos
stc
aas
mov
and
movs
scas
xor
pushf
cmp
mov
in
nop
repnz
fsub
mov
call
ja
xor
mov
xchg
xchg
mov
pusha
call
dec
ds
addr16
ins
push
jbe
cmp
out
test
adc
fimul
xchg
mov
fcom
xchg
and
mov
xchg
in
icebp
mov
loop
fs
pop
add
cmp
xor
sbb
pop
mov
popf
xor
rcl
(bad)
mov
jecxz
pop
rep
adc
adc
mov
mov
inc
push
jle
pop
(bad)
push
sbb
outs
sbb
sub
xchg
pop
int3
xor
adc
call
repnz
dec
fild
or
fstp
mov
retf
push
inc
in
xor
aam
cmc
(bad)
(bad)
sbb
jns
add
xor
push
xor
pusha
dec
push
mov
add
inc
out
mov
retf
fiadd
aaa
pusha
shl
mov
push
inc
std
sub
cs
push
cmp
dec
inc
mov
enter
cmp
pop
xchg
lea
xchg
xor
ss
xchg
mov
arpl
hlt
sar
inc
mov
inc
fsub
pop
dec
aad
mov
adc
jno
inc
icebp
jecxz
xchg
dec
in
aam
retf
lock
jo
outs
sbb
lahf
jo
and
call
iret
out
mov
rcr
push
add
push
pop
icebp
mov
outs
push
icebp
add
cli
out
data16
and
xor
push
sbb
mov
dec
and
loop
sbb
imul
xor
jb
leave
cmc
pop
outs
in
stos
mov
sub
outs
ret
xor
mov
popa
sub
(bad)
in
stos
sub
inc
and
(bad)
xor
cmp
movs
or
out
fsubr
cmp
sti
sti
imul
mov
popf
mov
inc
das
and
fdiv
enter
mov
call
or
cmp
outs
adc
vmovaps
test
xchg
xchg
gs
out
push
dec
mov
push
jmp
je
adc
cmp
xor
push
js
ret
jmp
in
mov
idiv
push
push
(bad)
fstp
xchg
gs
inc
mov
xchg
cmp
je
ins
sbb
jns
imul
push
adc
sbb
je
mov
dec
mov
cmp
lods
mov
test
in
test
scas
pop
cmp
inc
repnz
mov
dec
push
sub
mov
xor
sub
stos
imul
jns
fisubr
movs
sar
das
sahf
pop
mov
push
lahf
(bad)
mul
imul
fwait
sahf
inc
imul
gs
leave
std
lock
add
jmp
stc
adc
not
nop
mov
jle
nop
cmps
sub
out
cmp
mov
cmp
push
icebp
mov
in
pop
xchg
test
pop
inc
jb
adc
sub
je
sbb
rcr
cmc
in
iret
xor
and
sahf
jo
in
mov
inc
mov
and
leave
lods
push
push
or
inc
and
test
xor
cmps
xchg
cwde
repnz
jnp
out
lock
push
cdq
rol
call
dec
push
ins
sub
mov
lea
jb
or
mov
loope
push
ja
aaa
mov
aad
mov
fild
xor
push
or
and
push
stc
mov
add
sub
push
sbb
mov
jns
jmp
daa
cmp
inc
jl
mov
in
sub
adc
add
(bad)
jl
je
test
fsubr
leave
sub
fwait
push
sti
in
nop
stc
sar
outs
ror
xchg
dec
mov
call
push
pop
jno
out
test
cmp
dec
bound
dec
add
pop
inc
std
sti
out
aaa
out
dec
leave
fbstp
xchg
pop
push
xchg
not
cmp
cmps
inc
mov
jbe
daa
cmp
mov
sbb
ins
inc
jns
mov
stos
fsubr
retf
cmp
icebp
pop
mov
(bad)
mov
mov
jnp
mov
jno
les
cmps
out
push
fwait
mov
or
test
(bad)
in
xchg
jg
aad
mov
xor
pusha
mov
daa
sub
leave
pop
adc
inc
push
cmovl
mov
dec
mov
aam
jno
lahf
mov
jnp
test
add
fwait
cmp
test
push
xor
inc
sbb
cs
cwde
cs
inc
dec
fwait
and
mov
push
cli
or
enter
add
pop
stos
std
pop
rcr
add
or
ja
mov
sub
sub
lahf
cmp
mov
jge
inc
les
in
xchg
adc
dec
add
mov
mov
xchg
jno
mov
inc
cdq
mov
jae
mov
gs
in
jmp
out
mov
push
scas
leave
bound
das
push
loopne
std
and
adc
(bad)
push
add
jle
pop
push
cmp
push
int3
movs
retf
in
in
mov
enter
inc
imul
xchg
aam
or
pop
test
aam
xchg
xlat
add
jnp
dec
xchg
(bad)
mov
in
cmps
push
nop
fs
cmp
xor
add
xchg
and
mov
push
bound
mov
mov
out
movs
and
push
pusha
frstor
pop
lds
clc
adc
scas
clc
icebp
add
sti
outs
or
ret
push
jns
and
jmp
sbb
xchg
push
loope
cmp
mov
jbe
das
cmp
mov
mov
add
aam
sub
call
inc
outs
cmc
push
mov
icebp
mov
popf
retf
out
rol
ja
pop
inc
mov
inc
or
add
imul
cs
ret
sub
pop
test
into
lahf
xor
gs
cmp
or
and
fcmovb
(bad)
xlat
dec
jae
cs
sub
sbb
sbb
out
adc
add
iret
das
xchg
outs
push
shl
xchg
fisub
cmovno
sahf
outs
and
push
sub
daa
cmc
or
movs
xchg
stc
es
jbe
ret
(bad)
neg
popf
jns
gs
bound
mov
xchg
pop
xor
dec
jle
sub
fst
jnp
neg
mov
and
xor
imul
fisubr
push
(bad)
fcmovnbe
js
or
imul
mov
xor
aad
mov
fisub
mov
test
adc
test
xor
xchg
pop
out
cmc
(bad)
add
sub
adc
sub
dec
imul
dec
imul
fisttp
pop
pop
out
outs
in
cs
es
mov
mov
sub
mov
cmp
adc
sub
fcomp
fiadd
mov
xchg
mov
bound
aaa
cmp
inc
cli
push
setne
aaa
sbb
fsub
ja
cmc
shl
lock
dec
iret
mov
outs
repnz
cmp
mov
retf
loop
ja
lahf
push
pop
fisub
cmc
push
inc
mov
mov
mov
stc
mov
mov
in
mov
mov
lods
pushf
adc
cmps
or
leave
ins
bound
in
add
sub
movs
push
mov
loopne
in
cmc
rol
xchg
jg
adc
leave
dec
add
out
push
test
sbb
and
lds
pop
push
fstp
and
jl
and
(bad)
or
dec
cmp
jne
lock
inc
fldcw
mov
dec
sbb
xor
lods
shl
fisub
sbb
mov
adc
mov
xor
nop
or
or
jle
fnstcw
and
adc
push
pusha
loopne
pop
not
or
dec
cmp
stos
shl
loope
das
(bad)
imul
xchg
jne
(bad)
jge
push
add
mov
xchg
mov
imul
in
ret
sbb
add
xchg
imul
sbb
cmp
aad
push
pop
cld
and
cmps
arpl
gs
outs
lods
outs
in
ins
in
test
mov
mov
sub
cmp
lods
into
or
data16
mov
adc
sar
pop
jb
int3
push
jl
mov
test
or
push
jmp
test
sar
cld
aas
xor
int3
mov
into
mov
mov
out
add
dec
mov
es
cmp
add
xor
push
aam
mov
fisub
jecxz
std
xor
cmps
test
xchg
lock
fld
ficomp
cmp
push
pop
xor
cli
fucom
mul
inc
sbb
stos
mov
sti
or
(bad)
xor
pop
inc
jnp
cmc
xchg
jmp
add
pop
sahf
fwait
cmp
sub
or
mov
jns
fwait
push
xlat
push
mov
mov
hlt
xchg
or
xchg
cld
add
cld
test
or
xor
mov
(bad)
repz
sti
mov
mov
cli
xor
dec
scas
push
shl
imul
retf
jb
mov
sub
cwde
mov
repz
inc
mov
mov
mov
sbb
pandn
imul
xchg
je
fucomip
icebp
aas
sbb
pop
or
xor
lea
loope
push
sub
ja
loop
leave
mov
pop
xor
mov
mov
pop
xchg
sub
inc
stc
sub
jecxz
cmp
out
jp
push
mov
stos
cmps
shr
inc
xchg
cmp
pushf
aas
mov
sbb
xor
or
pop
mov
adc
bound
aam
jbe
pop
jecxz
es
in
push
(bad)
int3
hlt
cmp
fmul
rcr
mov
adc
nop
ds
jg
dec
mov
cmp
fldcw
sbb
fnstenv
add
xor
xor
ss
es
mov
mov
adc
daa
cmp
hlt
mov
xor
mov
push
scas
int
mov
sbb
in
jns
jbe
adc
pop
mov
and
lods
adc
sub
inc
or
in
test
and
push
xor
mov
pop
sbb
ins
outs
icebp
loop
jmp
xor
loopne
pop
(bad)
ss
in
dec
inc
xchg
xor
sbb
outs
jnp
int3
jmp
in
popf
out
jo
adc
pop
lock
push
rcl
outs
xor
div
xchg
xchg
push
movs
push
sahf
fist
push
fisttp
jo
jl
enter
jle
xor
aad
inc
div
or
jb
push
pusha
push
call
dec
and
int
std
aaa
xlat
iret
fdivrp
sub
cmp
repz
cmp
dec
sbb
inc
cmp
data16
mov
xor
sbb
xor
jp
or
xchg
ja
push
inc
mov
add
fdiv
add
clc
dec
mov
add
pushf
push
xchg
add
or
xchg
in
scas
ins
jmp
enter
cld
xor
sub
aam
sbb
adc
or
(bad)
xchg
sahf
xchg
mov
pop
(bad)
hlt
or
test
inc
xchg
and
pop
enter
pop
arpl
xchg
add
retf
mov
and
sbb
scas
dec
cmc
xor
cmp
sbb
jmp
imul
hlt
jmp
fdiv
pop
mov
mov
jge
stc
sahf
(bad)
cmp
push
sub
mov
icebp
or
xor
les
push
xor
sub
pushf
pop
dec
sub
jno
sbb
jns
lods
xor
sbb
jle
or
xor
mov
or
pop
aad
lock
pop
mov
pop
sub
in
dec
mov
sbb
inc
sar
cmp
jg
inc
jo
push
pop
fwait
inc
xlat
or
sub
xchg
xchg
aam
push
adc
mov
std
inc
push
push
fild
cmp
lahf
imul
and
clc
or
ret
dec
enter
adc
test
(bad)
aam
mov
mov
sub
(bad)
push
in
ror
cmp
inc
cmc
cli
sub
mov
popf
data16
pop
xor
cwde
pop
cld
fmul
push
(bad)
(bad)
and
(bad)
stc
inc
fadd
and
and
retf
push
jge
dec
das
ja
mov
adc
ds
es
cmp
xchg
and
cmp
xor
loopne
add
push
pop
pushf
cmp
into
clc
lock
xchg
(bad)
mov
xor
mov
enter
outs
sbb
fs
ret
sbb
aam
adc
je
cmp
fdivr
(bad)
stc
sbb
mov
add
les
jae
adc
scas
mov
pop
(bad)
mov
nop
call
ficom
ret
xchg
sar
fstp
test
in
gs
fadd
jp
jmp
xor
xchg
add
add
popf
jne
sbb
xchg
push
bound
add
dec
retf
in
inc
dec
ret
mov
or
jmp
xor
stc
xor
data16
cmp
mov
add
divps
adc
aas
xor
adc
retf
push
sbb
jle
fdivr
mov
inc
push
push
mov
std
and
adc
retf
pop
ds
mov
in
rcr
scas
sbb
jns
xchg
pop
mov
or
mov
xor
xor
test
cmps
xor
popa
fs
sbb
sub
cmp
mov
add
fs
cmp
jo
push
mov
test
arpl
add
jno
cwde
xchg
jmp
jae
push
mov
sbb
cmp
mov
repz
shl
shr
sub
cmp
dec
xor
aad
inc
cmp
fadd
push
jmp
clc
mov
lea
cmp
dec
cmp
add
pop
pop
adc
or
mov
pop
and
mov
and
icebp
repz
lock
push
jle
push
(bad)
in
movs
inc
dec
and
sbb
inc
xchg
lods
cmps
cmps
xchg
mov
jb
xchg
addr16
xor
jnp
or
and
fwait
rol
jecxz
inc
mov
iret
mov
rcl
jnp
retf
jmp
xor
jmp
in
cmc
or
jno
popf
out
loope
mov
xor
(bad)
xor
adc
mov
mov
or
inc
jmp
daa
jmp
pop
loope
sub
pop
cmp
loopne
leavew
xchg
js
into
adc
and
test
jns
aaa
xor
fidivr
div
pop
mov
sbb
mov
pop
ds
loop
clc
adc
mov
aam
repz
div
cmp
inc
stc
(bad)
jecxz
data16
mov
dec
sbb
test
push
adc
dec
in
add
fld
test
or
sbb
add
push
adc
cmc
mov
in
pop
mov
mov
push
test
sbb
in
mov
jbe
dec
int3
add
pushf
xor
fmul
stc
dec
push
push
aad
leave
dec
gs
lock
pop
cmp
xchg
pop
stos
in
or
repz
daa
rol
jne
sub
push
push
bound
aas
xor
inc
(bad)
in
push
aas
and
loope
mov
imul
(bad)
mov
pop
imul
sub
ins
mov
cwde
jle
jecxz
sub
cdq
jp
int
and
test
leave
loope
test
es
jno
push
jmp
mov
or
and
mov
imul
fwait
sbb
aam
pop
call
mov
pop
in
adc
mov
pop
aas
add
(bad)
xor
(bad)
mov
in
test
out
div
xlat
cdq
test
ins
cmp
(bad)
(bad)
push
popa
and
sbb
fidiv
push
mov
xor
out
dec
mov
pushf
adc
mov
inc
pop
sub
test
test
enter
xor
movs
leave
js
and
xor
inc
mov
mov
aad
adc
lock
and
ror
jle
bound
test
cli
fld
jle
sysexit
push
mov
lods
sub
(bad)
in
cmp
mov
arpl
sbb
mov
sti
iret
repnz
sbb
rcr
mov
bound
scas
mov
sbb
fild
pop
loopne
jo
adc
pop
push
cdq
cmp
push
test
mov
fwait
orps
int
or
push
jle
das
cmps
jmp
sub
ins
jo
bound
cmp
mov
inc
daa
cmp
jmp
xor
inc
xchg
mov
lods
mov
ror
jmp
mov
f2xm1
fisubr
ret
cmp
add
mov
into
popa
dec
loopne
sub
and
(bad)
xor
push
repz
or
sti
xchg
aas
xchg
cld
clc
int3
stos
int3
call
push
sahf
xor
xor
data16
inc
aas
stos
pop
add
jae
sub
inc
mov
push
push
(bad)
sbb
xchg
les
pusha
loope
pop
inc
or
push
jae
lds
loopne
pop
in
rcl
pop
lds
iret
push
inc
pop
lds
sbb
cdq
cmps
in
cli
retf
dec
int
frstor
enter
(bad)
loopne
popf
inc
pop
mov
jnp
lods
imul
pop
int3
push
aaa
push
push
cmp
(bad)
jle
dec
in
mov
xchg
aad
pop
movs
mov
aaa
pusha
aaa
xor
mov
not
mov
aaa
(bad)
ja
mov
enter
or
xchg
pop
test
pop
rcr
mov
xchg
mov
push
sub
adc
inc
pop
scas
push
push
mov
test
repnz
leave
je
pop
mov
sub
mov
adc
movs
fcomp
push
out
ds
lods
dec
mov
jle
xchg
aad
dec
ffree
nop
cdq
(bad)
sbb
adc
pusha
mul
out
cmp
(bad)
sub
ja
and
and
mov
sbb
aam
dec
sub
xchg
inc
xchg
mov
mov
ds
dec
test
neg
pop
dec
call
cmps
xlat
dec
fwait
xlat
sub
scas
jl
scas
dec
ja
jno
jae
and
sub
adc
and
add
fisttp
in
inc
dec
daa
movs
dec
das
mov
and
retf
cmp
loopne
in
jle
outs
pop
xchg
jmp
fidivr
fisubr
pop
stos
call
(bad)
sub
mov
add
jl
jae
into
stc
leave
test
sub
mov
scas
movs
clc
or
and
cmp
je
push
and
adc
or
sbb
ds
jmp
mov
and
xor
ins
or
(bad)
mov
in
sub
mov
mov
repz
xor
jns
add
aaa
add
xchg
cdq
mov
loop
loop
call
ins
and
mov
mov
xchg
mov
mov
lahf
cld
test
lds
xchg
in
retf
adc
mov
xor
aad
inc
cmp
outs
xchg
sbb
sub
sbb
test
lea
out
cmp
ret
mov
pop
dec
retf
sub
stc
sub
mov
sub
inc
fisubr
retf
in
and
retf
ror
mov
cmp
stos
lods
push
std
sub
mov
stos
adc
scas
push
xchg
fcomi
mov
rcr
xor
jo
mov
aad
in
inc
or
in
fs
jmp
cdq
mov
(bad)
adc
es
inc
imul
lds
dec
push
in
(bad)
cld
ret
jb
call
jle
push
popf
push
hlt
pushf
add
adc
iret
(bad)
and
jg
(bad)
out
(bad)
pop
cmps
jmp
out
jle
mov
xchg
stos
cmp
aad
and
add
fwait
push
xor
cdq
dec
jmp
popa
inc
add
inc
(bad)
jbe
mov
mov
and
lods
xchg
inc
xor
sbb
cld
scas
inc
jne
sbb
add
in
arpl
fnstsw
ss
sar
mov
test
sbb
jne
rcl
sub
pushf
add
(bad)
popa
imul
inc
loopne
jmp
aas
stc
cmp
push
cs
jmp
mov
adc
loopne
mov
repz
loope
bsf
dec
int3
cs
and
sub
dec
fwait
inc
mov
mov
ja
shl
push
daa
stos
sar
xchg
dec
stos
scas
nop
or
outs
sbb
fldcw
shr
fstp
xor
dec
xchg
fsubr
shr
outs
hlt
inc
sbb
mov
jns
ss
pop
sbb
nop
call
cld
push
adc
xchg
jmp
imul
sbb
imul
or
adc
mov
pop
push
cld
or
lods
cmc
pusha
in
retf
adc
pop
fcomip
call
das
xor
(bad)
(bad)
jp
test
jbe
jg
xor
sahf
dec
adc
stc
cmp
adc
sbb
xlat
cli
add
je
pop
cbw
rcr
push
pop
ror
inc
(bad)
mov
enter
mov
jno
mov
add
xchg
out
leave
add
dec
scas
mov
xor
jb
repnz
mov
xlat
jle
xchg
cmp
or
lahf
fcomp
cli
das
popa
or
jl
jns
pop
sub
and
dec
xchg
jbe
arpl
dec
in
jg
ret
mov
in
in
ror
mov
call
dec
fist
int3
movs
sbb
call
xchg
adc
sbb
inc
aad
xlat
and
pop
pop
imul
cmps
sub
mov
or
mov
ret
cmp
shl
mov
ret
push
and
cmp
mov
pop
mov
lods
jp
cmp
cmp
icebp
dec
adc
sbb
rcl
push
or
lahf
out
push
jg
push
cli
push
dec
or
cmp
arpl
pop
xor
inc
sbb
repnz
xchg
mov
push
pop
jle
loop
daa
(bad)
rol
sbb
mov
mov
cmp
mov
out
imul
xchg
add
push
mov
inc
jge
call
sub
xor
jnp
mov
sahf
nop
or
fs
mov
xchg
mov
int3
mov
fcomp
mov
iret
fist
data16
stc
fs
nop
pop
and
cli
dec
idiv
xchg
add
sbb
popf
jl
add
pop
int
add
add
jno
ret
adc
dec
hlt
dec
lods
xchg
stc
inc
fcom
mov
fwait
lahf
nop
sahf
mov
(bad)
lea
leave
xor
aam
test
xchg
xlat
and
outs
add
cmp
shl
rcr
mov
mov
and
dec
les
(bad)
adc
mov
sbb
add
lds
inc
mov
sti
cdq
out
xchg
jno
(bad)
mov
push
and
mov
(bad)
xchg
pop
ins
xor
arpl
jne
test
idiv
fstp
xor
pop
js
cmp
sbb
xchg
(bad)
sub
xor
and
mov
or
pop
imul
inc
jnp
pop
int
pop
cmc
shr
test
popf
mov
or
xor
jge
test
jmp
sub
mov
mov
ins
and
sbb
mov
(bad)
(bad)
xlat
shl
enter
sub
add
add
mul
int
mov
lock
add
add
cmp
pop
loop
movs
push
fnstenv
fcomp
cld
retf
dec
clc
cmp
imul
add
pusha
cmp
inc
inc
mov
mov
dec
adc
ret
mov
mov
out
jge
jmp
popf
ss
ds
movs
sbb
mov
in
mov
into
pushf
outs
mov
and
(bad)
mov
sub
fst
ins
mov
push
mov
jmp
pop
pop
(bad)
repz
and
pop
loopne
lahf
mov
(bad)
(bad)
mov
dec
js
pop
add
sub
rcr
aas
retf
xchg
js
outs
push
mov
into
push
pop
stc
arpl
adc
xchg
pop
add
xor
xor
pop
mov
mov
mov
int3
adc
(bad)
jmp
push
push
xchg
adc
add
aas
and
or
or
sub
cmp
les
xchg
mov
shl
das
and
jmp
in
imul
dec
outs
push
xchg
cs
lds
pop
mov
test
cs
dec
imul
mov
cdq
cli
inc
or
inc
bound
mov
ins
push
dec
dec
jp
call
mov
mov
dec
add
jmp
inc
add
xlat
dec
scas
cdq
add
int3
pop
add
or
cdq
sub
rol
xchg
and
dec
xchg
inc
push
inc
mov
dec
sub
sbb
fdivr
rcl
mov
lock
and
aad
ds
icebp
adc
push
inc
jecxz
or
cli
mov
mov
mov
fild
adc
in
jle
cld
jge
adc
test
scas
push
or
ins
outs
jg
arpl
sbb
je
xchg
cmp
sub
push
fs
jbe
out
ja
adc
sbb
in
adc
sub
jecxz
jecxz
add
jae
push
(bad)
jl
jl
fidivr
dec
arpl
inc
enter
or
push
out
stc
das
or
dec
add
sbb
sar
push
mov
fsubr
inc
iret
inc
xchg
sbb
popa
ins
scas
xor
test
cmp
ds
(bad)
mov
fisttp
sub
mov
cli
add
cdq
adc
mov
xchg
aaa
ins
rcl
loope
jge
mov
push
cmc
mov
pop
inc
in
jmp
dec
cmp
ret
mov
jmp
sub
lds
aad
push
lea
mov
div
pop
jl
jae
mov
sub
das
xchg
sbb
inc
adc
xchg
mov
mov
fdivr
xchg
inc
dec
pop
movs
jecxz
arpl
lock
cmp
ins
sar
test
inc
push
adc
jb
imul
mov
mov
mov
mov
fs
push
repnz
jns
out
pop
rcr
aaa
fisttp
ret
mov
jle
inc
test
xchg
inc
pop
add
mov
and
cmp
mov
add
and
shr
sub
mov
add
hlt
fstp
mov
add
cmp
jecxz
sbb
ds
inc
mov
fnsetpm(287
sub
ja
mov
lods
jmp
mov
sahf
xor
iret
packuswb
xchg
test
jge
and
in
loope
(bad)
add
std
mov
addr16
mov
mov
jge
push
retf
mov
ss
scas
bound
mov
stc
and
or
in
cli
adc
cmps
or
push
cdq
in
jl
jae
ficom
in
in
icebp
xor
pushf
xchg
inc
adc
or
inc
xchg
and
jno
push
ror
test
push
push
ja
mov
retf
push
sbb
pop
jo
xor
shr
jl
and
loopne
mov
ja
xchg
sbb
mov
pop
push
pop
repz
clc
sar
or
pop
mov
jmp
add
aam
(bad)
adc
push
enter
or
inc
nop
mov
cmp
inc
or
dec
cmp
mov
clc
sbb
jecxz
add
dec
scas
gs
and
(bad)
(bad)
(bad)
push
cmp
js
jae
push
les
adc
pop
mov
adc
and
addr16
and
ficomp
push
dec
and
mov
fiadd
push
shl
lock
cmp
les
lahf
mov
mov
ficom
ret
jnp
jl
je
ins
add
xchg
into
mov
or
mov
nop
push
dec
leave
pop
xchg
mov
stos
int
addr16
cdq
cmp
adc
add
sbb
inc
adc
mov
mov
int3
idiv
movs
call
push
aam
stos
mov
movs
and
cmp
in
mov
retf
xor
inc
adc
jne
movs
jb
fidivr
lods
pop
mov
imul
cdq
mov
mov
sub
ret
adc
add
int
mov
fst
ror
mov
scas
mov
(bad)
xchg
clc
sahf
ins
push
adc
iret
jns
int
int
push
mov
and
out
push
adc
fnstsw
ror
ror
das
cmps
adc
(bad)
sar
(bad)
mov
pop
(bad)
(bad)
cmps
lods
adc
dec
xchg
cmp
jp
lea
mov
scas
dec
push
(bad)
je
push
sti
ja
iret
fcmovu
push
dec
pop
bound
(bad)
(bad)
out
lods
push
or
inc
or
lea
not
cwde
mov
cld
movs
cmp
ss
ret
shl
addr16
push
sahf
mov
xchg
jns
and
sub
lods
mov
pushf
sub
xchg
sub
lds
adc
test
xor
cmp
xchg
es
pop
int
jne
nop
hlt
out
add
jae
inc
sub
aam
add
fisttp
icebp
aaa
clc
cld
call
lods
(bad)
xor
fcomp
movs
in
js
inc
mov
pop
sub
ret
jnp
jo
stos
retf
sub
cmc
cld
dec
(bad)
inc
mov
dec
mov
ja
fadd
mov
fmul
je
scas
dec
fild
(bad)
xor
xchg
fs
jbe
das
cdq
xchg
inc
ja
mov
test
mov
icebp
test
cmc
mov
xchg
jle
pop
or
cwde
mov
xchg
cld
stos
arpl
int
sub
test
arpl
(bad)
jnp
js
mul
mov
repnz
add
cmc
push
fdivrp
cmc
jge
ret
add
or
xchg
pop
lods
ja
jae
or
aas
pop
adc
sub
cmp
jbe
jae
xchg
xchg
xlat
inc
push
ins
fcomip
jle
sbb
int3
xchg
icebp
dec
pop
int3
call
jle
(bad)
lahf
xchg
push
mov
je
xor
jle
not
test
int3
cwde
(bad)
daa
(bad)
fld
mov
adc
jb
mov
in
jns
(bad)
cmps
sbb
ins
loop
jmp
das
xor
sahf
mov
mov
stos
bound
xchg
lahf
(bad)
mov
je
retf
in
add
loopne
dec
movs
les
push
or
repz
out
mov
sahf
iret
sbb
les
ins
ja
sub
dec
add
xchg
pop
cmps
jnp
movs
mov
xor
into
mov
xchg
test
mov
inc
sub
cli
enter
jmp
sbb
add
in
or
nop
rcl
clc
fadd
jecxz
ret
xchg
mov
cmps
cld
repnz
sbb
push
fnstsw
loope
xchg
or
ins
jg
xchg
xchg
or
add
ins
bound
addr16
sbb
mov
or
dec
jb
in
or
les
dec
arpl
xchg
jnp
clc
fiadd
retf
test
mov
stos
xor
cmp
(bad)
outs
cmps
sub
push
adc
mov
mov
jge
or
bound
pop
ins
pop
jae
xor
xor
fsubp
(bad)
push
dec
pusha
in
adc
imul
push
pop
add
pop
or
pop
mov
pop
inc
add
mov
mov
mov
in
ret
enter
mov
test
xor
ja
test
pop
in
test
jne
xchg
jno
pop
xor
sbb
xchg
popf
and
xor
add
pusha
popa
sbb
dec
fs
sbb
shr
adc
mov
and
ret
out
ficomp
shr
(bad)
ficomp
(bad)
push
mov
leave
mov
scas
push
dec
ret
inc
sbb
ret
jecxz
jp
icebp
jle
sub
push
popa
fsubrp
fwait
shl
dec
push
dec
in
and
aas
xchg
call
shl
icebp
adc
inc
adc
mov
out
sahf
mov
addr16
pop
inc
gs
sbb
dec
dec
cmps
push
movs
fdivr
push
push
jecxz
shr
adc
mov
in
jo
cmp
(bad)
iret
stos
sbb
inc
mov
int3
es
(bad)
fnop
iret
aas
jge
and
adc
push
xchg
pop
popf
push
or
mov
adc
fs
pop
jmp
mov
mov
or
fwait
dec
push
mov
hlt
push
loop
jecxz
mov
imul
xchg
jno
push
cmp
sbb
fwait
lods
sar
adc
fisubr
shl
out
push
scas
sub
xchg
mov
jbe
inc
je
cli
jmp
push
cmps
loope
mov
push
sbb
das
out
add
ss
std
jge
mov
push
fs
and
push
jne
xor
mov
pop
out
stos
(bad)
cs
mov
pop
mov
push
js
push
mov
push
(bad)
sbb
fstp
sub
pop
add
sbb
(bad)
out
ret
(bad)
sti
imul
xchg
imul
outs
and
out
test
test
adc
adc
adc
lods
sti
pop
mov
add
sub
stos
cli
movs
jb
push
fnsave
add
inc
and
xchg
shl
pop
leave
repz
fwait
cmc
hlt
jne
mov
mov
aas
pop
mov
push
cmp
xchg
push
enter
mov
push
xor
fidivr
in
push
ds
pushf
loope
sub
cli
push
and
mov
pop
push
test
and
mov
jbe
shr
and
retf
cli
leave
pop
mov
icebp
shr
call
std
jae
icebp
mov
cmps
cmp
lahf
push
xchg
sub
jmp
mov
test
imul
fsub
mov
dec
or
jmp
push
adc
popa
imul
adc
cli
ins
mov
dec
or
mov
mov
adc
repz
dec
adc
push
add
repz
(bad)
repz
sbb
dec
add
pop
add
cdq
mov
or
sbb
push
cmc
xchg
jno
sbb
lock
ja
jb
icebp
xor
nop
mov
add
and
(bad)
jmp
pushf
sub
mov
data16
call
leave
xchg
mov
cmp
stc
fdiv
and
xor
jmp
pop
xor
or
fbstp
add
scas
test
mov
push
popf
jecxz
pop
loopne
sub
scas
pop
pop
jne
lods
iret
xor
(bad)
call
rol
mov
scas
fiadd
cmp
cmp
xchg
test
pop
lods
push
sub
cld
sti
xor
repz
lods
cmp
fisttp
xor
enter
mov
inc
shr
jae
mov
and
jb
push
dec
sbb
and
shl
xor
out
leave
and
out
enter
(bad)
daa
idiv
lea
add
sbb
lock
mov
xor
arpl
adc
or
ins
pop
add
popa
mov
es
out
jb
jbe
movs
push
aad
into
fld
out
mov
loope
shl
lea
int
and
popa
jns
shl
adc
pop
dec
rol
sahf
sbb
pusha
in
popf
rcl
push
test
mov
pop
call
jns
mov
mov
fwait
push
adc
ror
sub
mov
xchg
ds
xor
jp
pop
xchg
pop
xchg
jae
mov
dec
popa
pop
mov
nop
mov
push
jo
mov
arpl
iret
push
jmp
xchg
xchg
enter
fldcw
push
and
lds
ja
sbb
xchg
cmp
xor
call
push
adc
in
nop
adc
sub
push
mov
shl
dec
jecxz
adc
data16
mov
sbb
sub
xlat
aas
iret
cwde
cmps
mov
sbb
bound
lds
addr16
mov
mov
xor
mov
sub
and
or
retf
push
add
mov
stc
test
hlt
and
dec
jb
mov
adc
(bad)
adc
or
les
hlt
into
mov
gs
out
cli
repnz
mov
adc
or
mov
mov
cmps
push
sar
shr
fwait
push
mov
mov
jecxz
push
rcl
mov
(bad)
ja
aaa
sub
mov
jno
dec
xor
sar
fucomip
out
into
or
push
jo
dec
movs
into
(bad)
fimul
xchg
mov
rcl
and
leave
inc
push
hlt
fld
dec
ret
and
outs
fprem1
dec
push
mov
cmps
(bad)
daa
and
push
out
cmovnp
aas
ins
xchg
cmc
and
je
or
push
adc
rcl
mov
add
cmp
xchg
inc
stc
push
pop
lods
inc
xchg
mov
out
movs
and
in
fld
sbb
ins
cwde
mov
lods
ret
int3
xchg
(bad)
je
iret
call
push
xor
inc
inc
jne
pusha
cdq
push
jmp
movs
mov
jmp
inc
sbb
push
mov
shr
imul
fdiv
hlt
loop
hlt
add
into
(bad)
cld
fxch
pushf
inc
and
lds
aaa
adc
int3
add
xor
jge
add
push
fmul
lock
jb
dec
pop
mov
or
push
sbb
test
add
mov
scas
jge
inc
sbb
dec
jecxz
mov
jmp
push
pushf
push
arpl
(bad)
lods
pop
pushf
jecxz
jne
out
mov
loope
fdiv
pop
scas
gs
jmp
cdq
jbe
inc
cmp
and
pop
in
iret
cld
and
mov
or
xchg
inc
scas
mov
adc
xor
or
xchg
jo
add
cmp
adc
retf
cmp
inc
leave
jb
mov
pop
cs
xor
xor
push
mov
sbb
adc
pop
loopne
mov
and
mov
inc
xor
cmp
add
xchg
mov
test
jns
pop
and
scas
xchg
or
ins
mov
cmp
jb
xchg
mov
dec
popa
loop
cmp
(bad)
mov
push
mov
dec
mov
cmp
or
mov
inc
sbb
sub
push
inc
adc
sti
push
(bad)
call
fs
cmp
repnz
mov
popa
sbb
push
cmp
ins
add
xchg
jne
gs
sub
pop
sbb
test
add
emms
in
stos
push
jb
pop
sar
pop
dec
imul
pusha
mov
out
call
sbb
push
xchg
push
xchg
cmp
rcl
xlat
js
adc
clc
sub
and
stos
add
pop
mov
mov
fs
imul
js
add
imul
jae
jno
dec
jmp
mov
sbb
ss
sahf
popa
mov
xor
mov
jle
clc
gs
jno
fisubr
sub
movs
mov
mov
and
adc
and
sub
inc
scas
push
jg
(bad)
cs
cmc
(bad)
out
lock
ds
enter
loope
nop
out
je
dec
cli
push
cmp
iret
ror
dec
in
ja
sub
mov
je
push
fst
ret
add
xchg
pop
and
xchg
rol
jnp
scas
mov
frstor
fneni(8087
or
or
ss
cmp
cmp
xchg
mov
inc
or
popa
pop
sbb
js
jp
mov
xchg
push
xor
pop
mov
or
jne
xchg
cdq
push
push
adc
lods
mov
clc
(bad)
fadd
ficomp
sahf
mov
shl
(bad)
add
aam
ins
or
sti
mov
fs
xchg
sbb
cmp
ror
cld
push
(bad)
mov
imul
(bad)
add
cmp
hlt
test
int3
mov
add
xor
mov
icebp
inc
daa
cwde
push
add
hlt
movs
cmp
sbb
add
fsubr
fsubr
fcomp
adc
and
shl
pop
lods
mov
cli
movs
movs
push
arpl
push
sti
inc
jne
outs
jb
clc
fld
hlt
push
mov
test
jnp
adc
adc
push
mov
ja
dec
jecxz
push
or
xor
ret
aas
jo
frstor
jbe
inc
or
dec
add
faddp
imul
mov
icebp
pop
add
fs
mov
sbb
jnp
sub
xchg
push
aad
jae
mov
mov
nop
popf
mov
out
ds
test
fs
pop
sti
mov
mov
mov
inc
int3
movs
(bad)
mov
out
retf
jle
rcl
lea
es
sub
js
adc
icebp
xor
cwde
pop
mov
cli
fsubr
test
ins
sbb
inc
lods
pop
lahf
sbb
fisubr
push
sbb
mov
mov
push
mov
lea
jle
push
sbb
cmp
mov
jbe
fistp
dec
mov
pushw
sub
in
or
or
ret
xor
sub
xor
add
shl
mov
push
nop
inc
int3
or
fisubr
ja
das
fdiv
xor
add
inc
out
mov
inc
mov
push
into
stos
push
xor
cmp
xor
fisttp
push
movs
nop
mov
inc
jg
cmp
xchg
loope
loope
dec
lahf
repnz
jmp
sbb
xchg
pop
sub
hlt
pop
dec
xor
mov
lods
lock
out
jb
add
div
push
mov
dec
jecxz
aaa
pusha
in
inc
cdq
stc
mov
ins
movs
stos
or
popf
loope
ret
sub
les
ret
mov
xlat
and
ficomp
ds
les
or
jle
out
inc
aam
scas
aad
push
mov
or
cmp
frstor
sbb
add
movs
mov
sub
mov
sar
add
call
rdmsr
fs
sub
or
dec
rcl
out
loopne
outs
jl
clc
test
jge
inc
mov
sbb
test
stos
sub
out
inc
fisubr
in
fnstenv
add
test
or
adc
mov
jae
icebp
adc
add
aad
ror
clc
dec
push
std
fdivrp
ja
imul
sbb
xchg
push
stos
je
rcr
mov
ds
or
xor
clc
aad
stos
sbb
fimul
int
cmp
call
clc
pop
(bad)
int3
adc
cdq
out
(bad)
dec
ins
xchg
xlat
lock
inc
cmp
push
push
out
fwait
sub
or
call
sub
mov
xor
push
mov
fimul
mov
(bad)
adc
mov
scas
adc
rcl
mov
cmp
cmps
mov
xchg
loop
ins
and
fcmove
mov
cld
jns
(bad)
out
frstor
movs
dec
movs
(bad)
(bad)
scas
nop
sub
mov
sub
imul
mov
f2xm1
adc
push
pop
bound
inc
inc
cmc
ins
pop
movs
pop
fimul
dec
or
push
fwait
nop
push
(bad)
push
push
pop
adc
rcr
xchg
cmp
jns
cs
enter
sbb
jg
mov
arpl
push
xchg
add
fild
sbb
fld
out
imul
lds
add
inc
ror
sbb
sub
arpl
ds
xchg
push
xor
mov
sub
cmp
loope
xor
(bad)
add
aam
inc
ret
ret
inc
mov
mov
mov
inc
test
out
pop
ror
mov
jnp
sbb
cli
push
lea
into
ins
pop
or
or
das
out
inc
cdq
std
push
and
in
push
mov
pushf
test
stos
jo
add
pop
out
pop
sbb
mov
test
push
aaa
cmps
and
nop
pop
mov
into
sti
bound
test
and
popa
dec
imul
inc
mov
inc
js
rol
sub
or
pop
pop
push
pop
jl
dec
fsub
test
push
add
jg
jle
jg
cli
dec
repz
cmp
sbb
mov
aaa
cld
jmp
out
push
popa
je
cmp
mov
or
test
icebp
aaa
cli
xchg
jle
fwait
mov
dec
(bad)
enter
mov
jecxz
sub
inc
sub
inc
mov
lea
adc
sbb
cld
or
or
out
add
pop
ret
ins
leave
push
shl
mov
xor
jle
mov
adc
lods
cwde
xor
popf
mov
outs
sub
push
sbb
das
fld
retf
fild
jg
mov
inc
arpl
test
xchg
mov
xchg
lea
cld
or
aad
daa
xchg
(bad)
and
cmp
icebp
or
repz
mov
or
ins
add
dec
packssdw
(bad)
xor
xchg
sbb
aad
cmc
mov
pop
mov
aad
scas
and
fistp
movs
push
sar
adc
retf
or
xchg
daa
jmp
out
(bad)
adc
jns
cmps
neg
je
mov
jg
aam
cmc
pop
push
and
pop
pop
sahf
lods
sub
clc
jae
adc
cmp
sub
mov
pushf
dec
addr16
fbld
fwait
adc
shl
stos
cld
pushf
cmp
mov
cmp
xchg
ins
lock
cmp
pop
(bad)
in
and
test
call
jle
test
lahf
cmp
dec
je
and
xchg
sbb
sbb
icebp
cmps
iret
out
jmp
or
movs
nop
cmp
pusha
lods
mov
push
imul
pop
cmp
ficom
adc
ds
test
fstp
adc
movs
jns
xchg
shl
cmps
in
sbb
mov
loopne
cwde
adc
ret
arpl
cmp
mov
xchg
in
imul
pop
out
jle
pop
lahf
xchg
pop
(bad)
dec
add
cmp
inc
adc
ins
sub
int
fwait
sbb
dec
mov
fisttp
ins
xor
lds
mov
iret
test
pop
fdiv
jle
xlat
les
mov
retf
imul
xor
and
stc
cs
add
test
int
jg
retf
and
push
pop
mov
mov
push
or
fiadd
jg
and
lock
push
cmps
adc
or
push
sbb
cs
pushf
outs
icebp
xchg
xor
mov
jg
test
out
cmps
push
ins
sbb
enter
lahf
dec
stos
xlat
out
shl
out
fwait
pushf
out
or
jmp
mov
mov
and
dec
pop
mov
or
xor
sti
cmps
dec
mov
out
push
(bad)
and
rcl
sahf
sbb
push
lods
sub
int3
mov
or
pushf
mov
push
scas
pop
jmp
scas
rcl
scas
jecxz
add
push
jo
xchg
inc
sub
or
cmc
pop
retf
shl
add
fs
push
xchg
cwde
je
loope
push
xchg
mov
gs
(bad)
jmp
lds
push
ret
pop
mov
cmp
inc
sti
mov
arpl
push
lods
loop
fwait
sub
adc
sbb
fidiv
mov
icebp
cmp
mov
aas
movs
push
data16
xchg
les
pop
dec
mov
inc
test
dec
pop
imul
push
pop
sbb
add
dec
pushf
mov
or
hlt
retf
inc
in
pop
jecxz
aaa
push
stos
dec
mov
add
sbb
inc
sti
aad
pop
cs
dec
(bad)
sub
mov
in
and
js
pop
mov
mov
cmp
xchg
and
or
into
(bad)
jmp
jno
dec
out
and
jp
std
pusha
inc
ror
pop
dec
cdq
mov
retf
pushf
sub
jo
xchg
jp
retf
popa
stos
sbb
pop
or
out
fdivr
lods
arpl
rol
xor
frstor
test
in
out
mov
add
es
stos
scas
cmp
pop
enter
inc
ror
push
pop
repz
mov
inc
adc
dec
sub
pop
fadd
jle
dec
stos
jnp
idiv
lds
(bad)
inc
test
or
mov
mov
stos
rcr
stos
call
cmp
push
sbb
call
inc
pop
fld
hlt
xbegin
jg
mov
cmp
das
aaa
and
mov
jae
mov
es
mov
mov
les
jbe
pop
loopne
out
call
sbb
push
in
aam
pushf
push
adc
pop
cli
fidiv
push
pop
(bad)
cmp
adc
hlt
add
mov
lods
sbb
cli
mov
iret
fild
inc
sbb
or
dec
xor
sbb
inc
sbb
jl
jb
nop
out
xchg
xchg
pop
ds
cmp
mov
pop
repz
jb
cmp
stc
int
hlt
bswap
jg
data16
(bad)
fxch
loopne
push
xchg
(bad)
push
test
ins
dec
pop
jnp
loopne
sbb
xor
nop
daa
nop
push
jne
ja
shr
lea
dec
push
sbb
in
movs
push
cmp
repnz
lods
xchg
icebp
jo
data16
add
sahf
add
push
out
test
jl
iret
adc
mov
aaa
rcl
jmp
cld
inc
fcomp
xor
movs
xchg
ret
xor
cmp
outs
ins
pop
out
xchg
push
jo
ret
repnz
pop
pop
mov
push
pop
mov
pop
sub
std
push
mov
dec
xchg
mov
cmps
cmp
cli
adc
cdq
cs
cs
push
inc
jne
cmps
adc
dec
minps
out
pop
xchg
fmul
push
jb
or
push
daa
mov
jle
mov
pop
xlat
in
enter
pop
cmp
jns
(bad)
hlt
fimul
push
cli
out
das
adc
push
push
xchg
pushf
sti
xor
hlt
mov
ja
iret
xor
aas
sbb
loope
mov
mov
inc
clc
pop
sbb
or
jle
mov
pop
mov
add
xor
pop
adc
add
xchg
jmp
inc
mov
cmp
sbb
js
cmp
pusha
gs
xchg
cmp
xchg
mov
cld
sbb
aas
jle
cmc
sahf
jp
mov
imul
ins
std
xor
pop
mov
xor
adc
out
and
dec
add
(bad)
fcmovu
pop
(bad)
cld
lahf
push
je
push
push
ds
push
sar
push
cld
test
sub
out
fbstp
(bad)
or
pusha
in
mov
mov
jno
pop
add
push
xchg
and
pop
ins
sub
mov
sbb
out
or
arpl
vpandn
js
shl
inc
dec
call
repz
or
stos
lods
and
out
cmp
cmp
pop
cmp
xchg
jns
push
push
xor
mov
lea
pop
ret
xchg
repz
stos
scas
push
xor
and
pop
cmp
dec
icebp
loope
jae
jmp
adc
xrelease
cmp
jmp
pop
mov
gs
into
out
adc
xor
cmc
call
push
and
adc
scas
mov
xor
push
xchg
xchg
xchg
cmps
outs
add
push
cld
std
clc
dec
push
cwde
xchg
inc
add
adc
test
test
mov
fisubr
mov
xchg
inc
sub
mov
adc
sbb
cmp
out
(bad)
in
jo
mov
sub
cli
push
xor
and
add
icebp
ds
cmp
ins
icebp
and
dec
xchg
pop
jmp
pop
mov
fnstenv
pop
mov
sbb
add
daa
inc
call
mov
(bad)
mov
xchg
or
out
sbb
out
mov
cmp
loop
in
xchg
jb
aad
inc
cmps
stc
add
in
in
cmp
xlat
add
mov
punpcklwd
and
jmp
pop
sub
adc
inc
mov
(bad)
dec
mov
pop
das
scas
adc
mov
xor
jecxz
jmp
popf
inc
test
test
addr16
adc
mov
ds
inc
inc
xchg
dec
pop
or
or
loop
cld
pushf
push
pop
(bad)
(bad)
mov
pop
push
jg
push
or
add
adc
add
inc
or
push
add
xchg
cmp
repnz
mov
pushf
fcomip
jnp
mov
pop
(bad)
jp
aad
cwde
(bad)
ja
sub
mov
int3
jle
mov
xchg
xchg
jl
popa
mov
adc
aaa
jb
inc
pop
fst
sbb
jmp
inc
mov
fist
icebp
mov
push
push
pop
push
fld
mov
loop
add
inc
add
ret
sbb
mov
add
or
(bad)
fsubr
in
ss
icebp
jg
push
inc
std
sbb
fisub
push
mov
das
loopne
jg
int
imul
test
inc
jno
add
repnz
jno
mov
fnstcw
add
or
xchg
sub
and
int3
arpl
sbb
es
lea
stos
xor
int
xor
jbe
scas
ja
mov
mov
inc
dec
test
retf
or
mov
push
inc
inc
inc
lds
imul
stos
mov
mov
sub
push
rol
cld
xor
push
jne
loop
adc
mov
fldenv
sbb
adc
mov
mov
and
jmp
sbb
push
outs
ret
lahf
add
in
shl
hlt
ins
sub
xchg
fistp
test
rcl
test
loope
gs
sub
and
xlat
mov
jl
int
enter
cs
xchg
sub
adc
adc
ficomp
xor
add
sar
and
leave
jo
outs
push
leave
mov
shr
retf
rcl
je
jmp
mov
push
xor
ret
enter
push
repnz
pop
fild
in
(bad)
push
adc
dec
jmp
out
movs
mov
or
iret
jge
int3
cli
pop
fadd
scas
stos
repz
inc
(bad)
sbb
pop
(bad)
shl
sbb
lea
xlat
pop
test
xchg
fisub
mov
add
rol
cdq
sub
xor
inc
push
ins
xor
lock
cmp
dec
scas
push
push
and
(bad)
stos
cmp
loope
stc
imul
xchg
imul
inc
push
mov
loopne
mov
add
cmp
mov
enter
push
mov
cmp
cmp
iret
imul
fwait
push
xor
or
mov
adc
sub
scas
scas
push
cmp
inc
add
cdq
push
pop
dec
adc
adc
iret
enter
shl
inc
jno
or
add
lods
int
in
mov
sub
div
sahf
jns
adc
add
lock
add
xchg
pop
or
xor
ins
mov
push
adc
(bad)
pop
mov
xor
mov
mov
loope
stos
inc
cs
je
pushf
push
add
(bad)
cmp
aas
lds
outs
outs
sub
inc
sub
fpatan
fs
out
movs
adc
mov
xor
push
sub
add
aad
jg
sbb
jbe
sub
jge
aaa
inc
or
inc
ficomp
xor
xor
cmp
mov
push
mov
mov
mov
stos
and
test
pop
(bad)
rol
clc
(bad)
mov
imul
sub
jg
add
cmp
jmp
fdivr
add
call
fmul
into
pop
fdiv
mov
and
sub
fisubr
cmp
mov
adc
stc
dec
lods
ret
and
jb
jns
cmp
xor
aad
test
cmp
xchg
rol
lds
retw
xchg
sub
lock
retf
dec
jb
mov
sub
cdq
(bad)
lds
into
repz
push
test
inc
or
or
out
in
ss
and
mov
sbb
dec
xchg
xchg
push
add
dec
xchg
cmp
fs
int3
or
aas
sbb
fsub
retf
adc
ss
ds
mov
cmc
sbb
and
jge
rcl
aad
or
jns
jp
cmp
jle
adc
pop
jnp
pop
retf
psubsb
xchg
mov
js
xchg
imul
xor
(bad)
sbb
jmp
loop
cld
mov
inc
mov
push
aam
inc
cwde
and
lock
loope
lods
inc
inc
pop
or
jne
pop
xlat
jg
(bad)
and
xchg
xchg
and
or
(bad)
fnstsw
adc
daa
xchg
add
xlat
ficom
or
pop
cmc
ja
pushf
mov
cmp
mov
or
xor
mov
mov
mov
push
cmp
xor
add
out
in
mov
retf
mov
aas
add
(bad)
mov
xlat
add
push
jae
inc
jno
jle
push
fild
add
and
adc
pop
(bad)
mov
xchg
push
or
mov
lods
push
lahf
pop
loope
(bad)
stos
mov
mov
sbb
xchg
imul
or
push
out
movs
or
dec
test
mov
add
push
sbb
div
mov
ficomp
and
inc
jns
fld
(bad)
pop
jo
add
pop
push
out
shl
nop
js
popf
push
cmp
mov
mov
xchg
pop
dec
enter
cmp
fs
jp
test
and
push
rcr
and
cmp
pop
shl
and
xor
jle
retf
icebp
sub
push
and
mov
push
pop
fs
stc
mov
add
int3
sub
xchg
out
sbb
int3
ins
out
(bad)
in
rol
mov
imul
shr
mov
push
shr
mov
ins
push
cmp
ds
xchg
or
pop
stos
add
lods
jp
jae
int3
cli
add
inc
es
in
lahf
jmp
jmp
in
out
pop
aaa
mov
inc
(bad)
add
cli
xor
lock
mov
ja
add
sbb
in
daa
enter
popa
cmp
das
adc
cmc
sbb
mov
jmp
pop
fwait
mov
inc
jge
in
sub
sub
test
call
popa
getsec
and
rol
imul
pop
push
push
nop
jae
sbb
jbe
icebp
dec
xchg
mov
cli
xchg
jnp
or
stc
fbstp
push
push
es
mov
mov
test
sbb
and
leave
dec
mov
repz
push
out
bound
call
in
jns
mov
xchg
xchg
push
add
(bad)
push
cmp
mov
cmp
push
jmp
enter
cmp
adc
or
enter
les
add
into
dec
cmp
adc
adc
js
and
push
hlt
jns
and
jmp
xchg
leave
movs
dec
nop
and
cli
daa
outs
stos
add
sbb
aas
aas
xor
push
not
shl
addr16
(bad)
jno
fwait
cli
cmps
fldenv
jo
bound
mov
mov
pop
cmp
clc
push
mov
mov
(bad)
xchg
xor
aam
push
xor
leave
dec
inc
sub
jmp
fdivr
push
rol
or
lds
push
arpl
shr
test
ins
mov
or
stos
sbb
fs
mov
sub
xchg
bound
lods
outs
jmp
mov
mov
adc
inc
xor
dec
ror
rcr
cmp
pop
js
clc
fwait
leave
pop
scas
jmp
jp
inc
cmp
out
mov
repz
movs
cmc
aaa
je
jns
ret
xlat
pop
fnstcw
or
(bad)
in
mov
mov
rcl
das
cmp
pop
movs
fild
shr
push
leave
cmp
jmp
test
mov
and
xor
jmp
sbb
push
adc
inc
cmps
jbe
lds
jno
int3
mov
out
mov
xchg
jmp
or
cmp
push
int3
cmp
leave
inc
popa
mov
ret
push
(bad)
outs
mov
(bad)
(bad)
mov
leave
xchg
mov
mov
in
clc
outs
std
in
(bad)
dec
cwde
scas
jnp
add
pop
test
mov
adc
push
cmp
iret
mov
pop
arpl
mov
out
adc
jmp
scas
and
mov
icebp
repnz
dec
push
addr16
gs
popa
push
pop
sbb
mov
xchg
icebp
in
data16
push
sub
mov
inc
aam
nop
jecxz
sbb
mov
dec
xchg
dec
inc
retf
fsub
or
jp
dec
mov
outs
xchg
dec
nop
std
jp
mov
push
mov
arpl
sahf
sbb
xor
out
test
je
arpl
push
push
popf
push
jmp
pushf
call
mov
xor
mov
loope
or
xchg
test
ror
xchg
fstp
stos
sub
rcl
xchg
xor
or
cmps
das
test
dec
fwait
movs
neg
or
mov
mov
xor
fs
fiadd
test
addr16
cmps
lock
add
fist
sub
push
jb
call
sub
jge
mov
jb
inc
repz
xor
dec
cmc
cmc
inc
mov
loope
or
or
xchg
mov
lock
inc
pop
rol
out
fbstp
jge
jl
leave
ffreep
inc
sub
push
or
push
je
fnstenv
bound
rcr
mov
fwait
bound
adc
mov
inc
pop
sbb
rol
cli
jnp
rcr
push
push
cmp
js
mov
div
(bad)
(bad)
xor
push
sti
stos
(bad)
loop
(bad)
push
mov
aaa
ret
push
in
jmp
movs
ins
push
(bad)
retf
sbb
jbe
mov
push
pop
aas
and
into
push
daa
jb
sbb
ins
jecxz
fadd
in
cmp
mov
mov
or
jae
jg
cmp
mov
sub
sar
(bad)
adc
and
mov
retf
xchg
cmp
jmp
test
in
mov
ds
xchg
mov
xchg
cmp
or
xlat
aas
xor
push
push
xchg
mov
cmp
inc
ds
mov
(bad)
movs
clc
pop
xchg
xchg
adc
jno
xor
jo
and
and
loope
sbb
rol
ret
jbe
or
aaa
dec
mov
ja
push
mov
es
add
fisubr
pop
jmp
inc
jle
adc
cli
dec
or
xor
ss
and
dec
js
xchg
push
dec
ror
push
call
or
push
mov
or
jo
js
mov
or
add
fistp
mov
std
mov
fwait
int3
xor
add
mov
out
inc
jno
fs
xchg
nop
mov
mov
mov
xor
jmp
lods
push
jnp
jle
icebp
xor
(bad)
pop
or
pop
fstp
lods
call
mov
inc
adc
xchg
jne
dec
sbb
mov
sbb
popf
test
and
es
adc
mov
fadd
daa
mov
pop
pop
and
adc
pop
pop
call
push
dec
ins
xor
(bad)
ja
out
bound
pop
(bad)
jns
loop
jno
cmp
dec
pushf
bound
adc
sub
loope
jbe
out
(bad)
push
shr
rep
dec
pop
xor
ret
aas
pop
jno
rcl
test
add
sbb
pop
idiv
push
mov
pop
xor
aad
rcl
clc
add
pop
pop
out
lods
cmp
femms
aam
cmp
push
xchg
and
fcmovne
add
(bad)
loop
std
adc
mov
push
stos
loopne
push
push
icebp
sub
iret
call
retf
cmp
xchg
(bad)
test
cmp
dec
or
iret
(bad)
js
ins
xchg
sahf
xor
aaa
adc
jbe
push
sub
loop
xchg
outs
lods
xchg
xchg
xchg
out
xchg
enter
retf
adc
or
xor
test
mov
aas
cmp
(bad)
out
mov
fcomip
adc
pop
lods
rol
and
popf
sbb
int
or
add
push
repnz
scas
mov
adc
test
xchg
inc
push
xchg
jno
push
sbb
xor
aam
test
(bad)
xchg
sub
jle
iret
sub
sbb
bound
jno
jmp
mov
test
sahf
dec
push
rcr
cmp
xchg
xor
mov
sub
and
rol
mov
or
retf
enter
push
or
ja
cmp
psllq
test
push
cs
xchg
pushf
push
hlt
add
sub
push
xor
(bad)
mov
sbb
or
(bad)
ror
inc
xchg
jb
jg
jne
adc
out
cmp
dec
xchg
sbb
movs
cli
mov
(bad)
das
sahf
xor
ds
std
and
sbb
mov
sti
outs
test
les
js
pop
push
jno
mov
dec
je
daa
cmp
js
push
xchg
pop
lock
xor
xlat
movs
movs
add
(bad)
push
outs
mov
or
mov
jmp
push
call
mov
sub
xor
pop
jg
mov
repnz
ret
fidivr
sbb
lods
mov
inc
int
sti
clc
xchg
jo
pusha
mov
and
inc
repz
retf
xchg
dec
xchg
cmp
add
nop
movs
cmc
mov
or
add
mov
movs
cmps
imul
mov
in
xchg
push
add
fnstsw
pop
loope
inc
fwait
not
xor
sbb
cmp
idiv
hlt
retf
mov
js
inc
adc
adc
and
in
mov
jl
or
in
daa
push
shr
xor
lea
imul
cwde
fdivr
fcomip
ret
pop
daa
lods
mov
and
test
cmp
mov
cmc
mov
push
add
fidiv
out
retf
imul
imul
xchg
pushf
int
fdivr
cmp
add
lods
arpl
pop
cmp
and
or
inc
xor
mov
cmp
daa
out
mov
inc
rcr
arpl
sbb
lahf
aaa
leave
mov
add
loopne
imul
and
fld
es
pop
daa
xor
aaa
lds
jl
push
xor
aad
shl
mov
sahf
mov
scas
xchg
shl
push
xlat
leave
mov
retf
js
xor
fwait
dec
ror
inc
xchg
ja
mov
xchg
cmp
sub
aam
and
and
pop
pop
pop
(bad)
push
aas
xor
repz
fcomp
mov
xor
div
in
jae
(bad)
mov
(bad)
lods
int3
sub
jnp
fbstp
mov
out
out
or
push
xor
std
sub
arpl
xor
dec
mov
clc
fadd
adc
shr
xchg
clc
fdivr
stos
inc
ins
lods
or
pop
fwait
je
cmp
cmp
inc
jecxz
jmp
sbb
push
xchg
sub
jmp
rcr
mov
adc
popf
pop
mov
pop
sub
cmp
ds
pop
push
sbb
sub
mov
outs
inc
inc
cdq
xchg
ds
loop
fadd
test
mov
push
cwde
jne
mov
pop
loop
je
hlt
adc
pop
fisub
xchg
sub
popa
pop
mov
movs
adc
test
jl
gs
adc
add
pop
int
aaa
add
jmp
mov
stos
mov
push
mov
(bad)
out
mov
cmp
lea
and
fcom
push
sbb
mov
fistp
xor
leave
cmps
inc
mov
push
add
cli
dec
push
xchg
cmp
inc
sub
fist
xchg
bound
shl
sar
loope
scas
loope
push
sbb
stc
push
addr16
imul
add
sbb
fld
call
shr
jecxz
inc
add
cmp
fisttp
push
pop
inc
sub
call
(bad)
mov
cmp
idiv
adc
mov
xor
xchg
dec
repz
dec
mov
jno
pusha
xchg
dec
cmp
movs
lock
jl
es
mov
stos
pop
inc
test
loopne
in
std
ins
cmp
cli
sub
cmp
push
rol
sbb
ficom
popa
mov
jp
in
pop
ss
lock
rol
loopne
fs
jl
mov
xchg
xchg
jmp
mov
fxrstor
xchg
cli
mov
fs
xchg
push
test
aad
adc
mov
inc
mov
aad
mov
push
sbb
mov
movs
(bad)
out
or
sbb
xchg
lahf
dec
or
ins
data16
clc
leave
and
xchg
mov
retf
sub
fld
dec
mov
pop
fwait
and
lds
shr
(bad)
mov
rcr
pop
lds
jne
mov
mul
mov
xchg
(bad)
adc
mov
adc
xchg
fst
push
mov
das
test
cld
and
adc
and
inc
jle
sahf
fdivr
ins
in
adc
(bad)
in
mov
push
push
dec
lea
adc
and
inc
and
pop
lahf
dec
dec
sub
jecxz
mov
inc
sub
push
mov
in
fbstp
outs
or
jbe
retf
add
aad
(bad)
rol
mov
push
dec
in
push
mov
lock
ds
call
test
lar
mov
or
mov
stc
xlat
cmp
mov
dec
pop
jbe
(bad)
clc
mov
lods
push
or
shr
jne
loopne
mov
sub
sbb
inc
test
dec
rol
mov
or
clc
dec
test
movs
(bad)
jmp
sbb
and
out
ror
jmp
test
xor
std
push
ins
mov
ror
(bad)
sub
loop
popf
movs
pop
icebp
lds
hlt
leave
or
bound
bound
dec
xlat
pop
(bad)
cld
aam
shl
xchg
rcr
adc
in
les
push
jae
cmps
fldcw
mov
je
iret
add
cli
fbstp
sar
shl
hlt
cmps
mov
cmc
popa
dec
fwait
jbe
(bad)
(bad)
sub
xchg
fimul
pop
cmp
pushf
call
jb
cld
mov
add
pop
pop
adc
movs
mov
pop
mov
rcr
icebp
or
lahf
in
mov
fadd
cmps
rcl
add
and
dec
xor
mov
out
(bad)
ret
neg
lods
pushf
sub
ret
adc
inc
call
push
movs
in
shr
xchg
je
loopne
repz
xchg
push
std
jle
repnz
mov
mov
lea
lahf
jno
mov
push
jnp
stos
fcomp
movs
movs
inc
icebp
aas
jae
dec
in
rol
mov
sub
pop
stos
out
sub
cmp
dec
mov
jns
out
inc
xor
(bad)
cmps
fucomp
stos
jae
mov
das
call
mov
mov
jmp
pop
or
mov
and
lahf
ret
in
jb
ficom
cmp
loop
outs
sub
jmp
push
ja
push
(bad)
jmp
and
mov
pop
fnsave
or
cmps
(bad)
cmp
cmp
jge
stc
cld
xchg
nop
out
ins
dec
and
adc
pushw
sub
lea
dec
xor
(bad)
fwait
adc
xor
je
outs
mov
dec
sub
(bad)
leave
ror
std
mov
mov
mov
xchg
ja
cwde
daa
cmp
push
pop
pop
push
push
fsub
jae
loope
jno
push
loopne
aam
cli
xor
(bad)
pop
es
xor
and
test
inc
mov
loopne
int
xchg
popf
stos
sub
or
das
adc
das
cwde
push
aam
stos
in
dec
ret
mov
rol
dec
mov
adc
movs
or
das
dec
mov
repz
imul
shl
fidivr
sbb
sbb
or
add
scas
mov
addr16
js
lock
xor
rcr
mov
fsubrp
mov
push
and
(bad)
repnz
cmp
mov
out
loope
cs
xchg
icebp
out
fbstp
out
sub
adc
or
jl
mov
or
mov
sub
or
es
sbb
push
dec
and
pop
dec
add
mov
das
aam
cld
(bad)
fist
xchg
cmp
fsubr
sbb
push
cmps
sub
jmp
add
xchg
and
sbb
scas
ror
dec
add
add
clc
jecxz
scas
mov
add
dec
add
adc
aad
popf
xchg
rol
imul
adc
sahf
dec
jmp
or
cmp
loope
test
mov
sbb
in
jg
out
scas
call
in
pop
stos
(bad)
sbb
and
inc
(bad)
xlat
lea
call
mov
push
bnd
pushf
push
mov
mov
inc
cld
(bad)
cmp
xchg
js
cmp
jg
fld
or
inc
mov
neg
cmp
out
bound
push
sbb
sbb
in
shr
(bad)
retf
paddw
adc
mov
popf
and
fsub
retf
cmp
or
and
out
pop
mov
mov
dec
jecxz
xchg
xor
in
and
aas
push
je
jbe
stos
pop
xor
das
in
add
(bad)
mov
pop
sbb
pop
or
mov
sbb
aam
and
fnstsw
cld
mov
jnp
fisubr
xchg
mov
rol
ins
(bad)
in
ret
pop
push
cmp
xchg
and
inc
in
dec
aam
xchg
sbb
aad
inc
test
(bad)
rcr
sub
mov
mov
cmps
enter
outs
mov
mov
mov
je
pop
popa
cli
push
adc
xchg
xchg
lahf
jle
sbb
and
iret
ret
fisub
push
pop
adc
jp
mov
pop
shl
aaa
jmp
jle
lahf
fisub
mov
and
cmc
outs
sub
xor
loop
cmc
je
in
icebp
add
sbb
int3
jmp
jmp
popf
fwait
adc
out
xchg
add
jmp
rcr
sar
sub
jo
pushf
jb
sbb
xor
xor
adc
adc
fisttp
(bad)
xor
mov
sbb
sub
sub
inc
bound
(bad)
leave
inc
cmp
mov
ja
add
loope
jbe
pop
mov
sahf
push
cli
ins
mov
inc
and
(bad)
jmp
cmc
shl
jns
stos
dec
test
inc
fiadd
push
mov
hlt
popa
inc
adc
mov
inc
sbb
out
mov
push
jbe
retf
inc
inc
cmp
mov
lea
clc
in
mov
mov
imul
outs
push
and
adc
pusha
in
xor
sub
sti
ins
inc
sti
pop
mov
lock
mov
inc
loop
data16
xor
adc
popf
loop
fsubr
sbb
ja
fst
sub
mov
mov
pop
jne
mov
popa
sbb
xchg
fs
sbb
sub
push
(bad)
jmp
jne
cmp
mov
fisttp
fcmovu
mov
(bad)
ror
vmread
inc
mov
push
adc
xchg
mov
outs
xchg
dec
push
(bad)
out
jmp
adc
mov
and
test
pop
pop
push
add
das
lahf
adc
adc
not
and
and
(bad)
fucomi
in
mov
xchg
pusha
ret
and
mov
push
test
ret
mov
mov
mov
cmp
dec
xchg
dec
ins
jmp
es
shl
ins
dec
sbb
jp
fcomi
inc
fwait
add
mov
repnz
scas
xchg
jo
lock
mov
pop
push
mov
out
xchg
in
mov
dec
dec
inc
xchg
popf
int3
mov
sub
retf
sbb
dec
popa
cmc
xor
cld
ins
mov
fcom
pop
sahf
pop
call
push
movs
je
xchg
or
shl
jl
pop
enter
das
fwait
pop
push
mov
dec
sub
movs
lods
cmp
xor
scas
add
call
adc
cdq
shl
add
loop
movs
retf
mov
mov
pop
mov
push
adc
out
mov
adc
movnti
(bad)
mov
movs
aas
xor
fwait
sub
je
fst
push
mov
sub
xor
xchg
pop
stc
jmp
inc
sbb
shl
rol
cmp
cmps
cmp
ins
cmp
sar
pop
cdq
gs
loop
mov
jo
std
cmps
pop
rcr
(bad)
mov
popf
sub
sbb
jnp
out
mov
push
add
es
sahf
mov
mov
mov
jo
outs
retf
mov
xor
lds
mov
pop
xchg
cmps
sar
jp
pushf
mov
inc
es
out
ds
scas
in
xchg
loop
push
lods
inc
mov
seto
sub
js
shl
dec
fs
lahf
loopne
es
es
pop
jb
std
adc
xor
sar
mov
out
fnsave
xchg
cmp
int3
sbb
arpl
sbb
push
dec
inc
xchg
cli
stc
or
das
dec
loopne
loope
gs
jno
lea
fcmovnu
mov
pmaxub
repz
mul
rcl
call
jmp
push
cdq
mov
popa
dec
pop
xor
daa
sbb
push
imul
sbb
cld
sti
call
call
xor
retf
stos
mov
fldcw
dec
hlt
mov
jmp
in
imul
mov
or
mov
xchg
jne
sbb
(bad)
lods
xchg
rcr
push
out
sbb
pop
push
pop
test
sahf
addr16
daa
movs
int3
mov
pop
xchg
loope
(bad)
(bad)
cmp
mov
int3
(bad)
mov
sub
out
movs
adc
es
mov
iret
and
xlat
inc
xor
or
push
pop
(bad)
mov
je
fcmove
icebp
or
sub
cmps
(bad)
jge
sbb
clc
addr16
pop
ret
ss
lods
xchg
out
aad
ds
imul
push
sub
ins
mov
mov
(bad)
xchg
fidiv
in
jae
aam
pop
jo
int3
xor
jae
test
cli
imul
xlat
xchg
lahf
loope
cld
adc
mov
mov
jae
mov
mov
nop
lahf
pop
(bad)
jno
or
or
in
adc
call
(bad)
call
inc
or
out
mov
(bad)
pop
nop
push
js
dec
imul
ja
sub
ins
sub
mov
and
fmul
dec
mov
dec
popf
stos
pop
pop
mov
je
xor
mov
(bad)
paddusb
stos
mov
ja
jp
mov
adc
repz
fwait
js
(bad)
or
jmp
aam
(bad)
and
icebp
out
ret
lods
cli
adc
jle
pop
jo
jl
push
push
(bad)
iret
fbld
mov
xor
mov
sbb
xor
xchg
push
jle
addr16
dec
mov
jmp
push
bound
dec
pop
xor
add
in
nop
cmp
or
pop
sbb
pop
js
cmps
mov
sub
dec
adc
and
movs
adc
sbb
(bad)
jnp
or
cwde
sbb
(bad)
shl
cld
cmps
bound
shl
lock
cmp
dec
cwde
lock
mov
jmp
xchg
mov
(bad)
fisub
push
sbb
fsubr
nop
add
out
data16
adc
neg
xchg
cmp
push
sub
lock
fmul
movs
xor
and
mov
xor
push
sub
addr16
cmp
test
test
cmps
sbb
lds
mov
int3
aad
adc
mov
jno
(bad)
je
jno
cmp
jg
and
lds
inc
in
cmc
or
ins
or
nop
mov
pop
aas
mov
sbb
inc
sbb
push
jb
cli
std
call
cdq
iret
(bad)
adc
jge
arpl
enter
mov
(bad)
add
cmc
and
push
or
mov
in
jge
in
cmp
lahf
hlt
cmp
adc
aam
shl
in
ins
data16
cmp
jl
rcr
sbb
or
mov
mov
and
cmps
adc
cli
outs
cmc
js
js
mov
pcmpgtd
pusha
mov
nop
outs
mov
std
pop
and
cmp
into
mov
movs
das
sbb
loopne
in
mov
adc
(bad)
cmp
loopne
and
cmp
icebp
and
nop
add
pop
cld
int3
adc
inc
xor
rol
nop
loopne
sti
inc
jne
shrd
jo
cmc
push
xchg
mov
ror
ja
add
mov
and
or
sub
cmp
cmp
enter
cmp
cmp
mov
jle
fwait
push
mov
sbb
push
or
aad
cmp
loopne
aaa
cmp
or
add
cs
dec
pop
(bad)
outs
shr
xchg
psubusb
add
popf
lods
ins
fldcw
inc
mov
pop
out
in
pop
ja
test
or
inc
pop
lea
pop
and
jle
sub
icebp
and
call
jno
hlt
pop
mov
fchs
(bad)
pushf
stc
mov
push
sub
leave
mov
inc
push
mov
jge
xchg
and
push
adc
mov
mov
mov
arpl
daa
clts
in
inc
(bad)
xlat
push
cmp
jmp
retf
or
loopne
dec
enter
fcomp
retf
inc
push
push
xchg
js
dec
nop
mov
pusha
cmp
test
dec
and
dec
sub
in
les
inc
xor
and
push
adc
(bad)
fsubr
mov
ja
cmps
mov
enter
mov
scas
and
lahf
sbb
mov
or
adc
ret
fcomp
movs
jp
popf
push
pop
cmp
pop
lds
or
in
mov
xor
xchg
fldcw
sti
(bad)
aas
sahf
add
adc
jecxz
and
pop
fnstenv
(bad)
mov
sub
inc
push
lods
mov
(bad)
sti
pop
jnp
pop
cmp
jns
xchg
shl
mov
lahf
mov
push
std
data16
ss
adc
sbb
retf
mov
out
jmp
and
pop
(bad)
jmp
xor
push
shl
(bad)
lock
jmp
es
xor
in
sub
pop
and
push
fwait
xor
mov
mov
not
pop
out
fwait
popf
aas
repnz
sti
jnp
mov
loopne
push
imul
call
mov
sahf
ins
mov
push
mov
(bad)
cmp
fimul
call
inc
lods
push
out
into
adc
mov
pop
jmp
xchg
fimul
jmp
cmp
