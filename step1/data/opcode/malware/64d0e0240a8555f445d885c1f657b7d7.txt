inc
cwde
adc
xchg
pcmpgtd
or
data16
push
xchg
jo
xor
sub
push
data16
adc
add
inc
or
data16
or
je
or
data16
add
pushw
add
data16
pcmpgtd
xchg
pcmpgtd
bound
data16
or
not
or
data16
xchg
pcmpgtd
inc
push
mov
pcmpgtd
jne
pop
(bad)
or
addr16
xchg
mov
or
data16
mov
add
test
data16
xor
adc
jne
data16
in
out
push
data16
inc
xchg
pcmpgtd
fisttp
scas
lahf
or
data16
add
push
add
add
add
jmp
inc
add
pop
inc
add
add
add
add
inc
push
add
add
add
push
pop
inc
add
pop
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
js
sub
xchg
aaa
(bad)
loopne
mov
add
add
add
push
popa
jp
outs
fs
add
pop
add
add
sbb
add
add
add
sbb
pop
add
add
add
add
sbb
add
add
js
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
sbb
sbb
inc
add
add
add
adc
call
add
add
add
add
das
add
add
dec
mov
xchg
out
inc
inc
inc
mov
pop
pop
test
add
add
add
jle
add
add
add
mov
add
push
inc
xor
add
or
pop
add
add
add
add
pop
inc
add
adc
add
xor
and
(bad)
dec
add
add
add
add
add
add
add
add
adc
nop
adc
dec
adc
js
add
test
add
mov
add
lea
add
dec
jb
push
imul
push
ins
popa
add
push
popa
jp
outs
fs
add
add
add
inc
add
add
add
pop
inc
add
jo
add
adc
add
add
add
add
add
add
inc
add
add
add
pop
inc
add
(bad)
(bad)
inc
add
add
sbb
or
add
add
add
es
add
add
add
inc
add
add
add
add
add
add
add
add
cwde
push
inc
add
add
add
pop
inc
add
add
add
sbb
sbb
add
adc
add
add
add
inc
add
std
xor
mov
add
add
(bad)
cmp
add
and
inc
add
add
add
std
xor
xor
inc
add
add
add
pop
add
add
inc
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
pop
inc
add
xor
push
sbb
(bad)
(bad)
(bad)
push
inc
add
add
add
push
inc
add
adc
sub
inc
add
adc
rcl
add
push
inc
add
adc
sub
inc
add
adc
call
push
inc
add
adc
sub
inc
add
adc
sub
jmp
add
add
add
add
inc
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
mov
fwait
mov
jnp
or
add
add
add
int3
sbb
inc
sbb
or
add
or
add
add
add
add
add
push
inc
add
(bad)
(bad)
call
add
sbb
add
add
sub
inc
add
inc
add
add
add
(bad)
(bad)
call
add
add
add
inc
add
add
add
sbb
push
add
add
add
add
inc
add
add
inc
jb
arpl
add
push
push
addr16
ins
imul
outs
fs
add
lahf
div
dec
xchg
ins
push
cs
mov
mov
push
xchg
out
inc
inc
inc
mov
pop
pop
test
sbb
clc
jno
dec
mov
aas
sbb
dec
lods
xor
or
stos
add
xchg
push
imul
ins
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
lods
sbb
add
add
push
add
add
add
add
inc
add
inc
add
mov
add
dec
lods
xor
or
stos
add
xchg
dec
gs
popa
ins
popa
jae
jae
push
add
dec
lods
xor
or
stos
add
xchg
inc
outs
jb
add
add
or
dec
add
add
add
add
and
push
add
xor
and
push
add
xor
add
add
jo
inc
add
add
add
lods
xor
or
stos
add
xchg
adc
add
push
add
jae
push
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
inc
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
push
je
dec
outs
jbe
add
add
adc
add
push
arpl
popa
jb
je
xor
fs
ins
add
add
add
arpl
ins
imul
sbb
jl
inc
add
add
jo
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
push
dec
inc
dec
xor
add
add
push
add
add
gs
je
push
imul
jne
push
imul
rcr
add
sbb
add
add
jl
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
js
rcr
add
sbb
add
add
mov
add
or
je
jmp
push
mov
call
jmp
add
add
cmp
add
add
add
add
add
add
add
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
ins
add
je
bound
jne
jb
add
jne
aaa
add
add
add
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
dec
outs
push
popa
jb
add
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
jbe
popa
push
popa
jb
jae
inc
je
add
pop
pop
jbe
popa
dec
outs
push
je
add
pop
pop
jbe
popa
push
bound
outs
add
jbe
popa
push
popa
jb
fs
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
outs
add
add
dec
xor
add
push
xchg
out
inc
inc
inc
mov
pop
pop
test
mov
add
out
xchg
ins
push
cs
mov
add
and
cmp
add
push
add
popa
arpl
add
popa
imul
add
add
inc
add
mov
add
ins
je
add
dec
xchg
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
sub
add
inc
jbe
aas
sub
xor
aas
sub
ss
sub
sub
xor
ss
sub
ss
xor
xor
aas
ss
das
aas
das
aas
xor
sub
das
aas
xor
sub
xor
sub
ss
xor
ss
aaa
aas
xor
xor
xor
aas
xor
sub
xor
sub
xor
xor
xor
xor
sub
aaa
aas
sub
xor
aas
xor
aas
sub
ss
sub
sub
sub
sub
sub
xor
sub
aaa
aas
sub
xor
aas
sub
sub
aaa
aas
sub
ss
das
aas
sub
xor
aas
xor
sub
sub
sub
sub
xor
aas
das
aas
ss
sub
aaa
aas
xor
ss
ss
sub
xor
aas
sub
xor
das
aas
xor
aas
sub
xor
aaa
aas
xor
sub
sub
xor
ss
aaa
aas
sub
xor
xor
aas
sub
sub
aaa
aas
xor
aas
xor
mov
xor
pushf
test
mov
int
stos
pop
push
lods
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
pop
add
shr
aam
mov
retf
jns
sub
push
dec
pop
std
call
out
xor
rol
hlt
push
cdq
stc
xchg
or
xor
jl
enter
or
loope
mov
outs
add
dec
enter
mov
nop
call
xor
mov
nop
xchg
pop
push
lods
jns
inc
inc
cmp
or
or
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
fistp
rcl
scas
mov
retf
xchg
lea
xor
mov
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
in
leave
sub
nop
pop
push
sub
movs
(bad)
retf
rcl
pop
mov
xchg
xchg
lods
movs
pop
pop
jae
push
dec
or
popf
je
cmp
imul
and
xchg
or
arpl
movs
cdq
fadd
in
and
add
test
std
lahf
mov
add
xchg
add
test
jbe
int
stos
pop
push
lods
jns
inc
inc
cmp
or
pop
sub
dec
(bad)
stc
test
pop
(bad)
fxch
mov
pop
cmp
movs
push
sub
mov
xchg
adc
push
ins
mov
pop
addr16
ret
sub
push
mov
call
mov
popf
and
add
scas
out
jo
and
aam
int
push
out
in
movs
fwait
pop
cmp
test
movs
fnstcw
adc
stos
mov
jmp
jg
jl
aaa
push
mov
ret
enter
or
(bad)
mov
int
push
xchg
jle
xchg
mul
xor
push
call
cmp
dec
adc
mov
inc
test
or
stos
in
mov
addr16
add
jle
fwait
fs
xor
sbb
inc
sysret
test
fwait
inc
adc
lea
lds
xor
neg
xchg
(bad)
std
mov
aas
add
add
add
ficom
fist
das
pop
lea
out
mov
pop
lods
push
in
sbb
mov
sbb
neg
rcr
pxor
bound
lods
xor
test
iret
push
add
mov
retf
cmp
stc
dec
mov
mov
jmp
cmp
adc
mov
xchg
iret
mov
add
add
lods
mov
cwde
sbb
sbb
adc
cmp
lea
(bad)
cmp
xor
inc
cmp
xor
jno
fyl2xp1
imul
pushf
sbb
fild
sbb
mov
lods
or
sub
daa
mov
int3
cmp
xor
fnstsw
into
push
or
inc
dec
es
xchg
cdq
push
or
pop
mov
sbb
and
sub
jbe
push
jb
inc
jb
iret
or
or
adc
cmp
add
ds
push
int3
sti
pop
or
test
das
mov
push
push
cmps
inc
xor
cli
mov
in
shr
icebp
rcl
(bad)
div
jg
add
mov
add
lahf
(bad)
sub
mov
push
cdq
jo
mul
xchg
addr16
mov
push
mov
dec
sbb
jmp
outs
dec
ja
imul
jmp
dec
inc
mov
mov
xor
jmp
repz
push
pop
push
(bad)
dec
push
and
mov
cmc
in
sbb
int
rsqrtps
push
xchg
retf
mov
call
out
mov
gs
inc
sub
bound
mov
scas
pop
loop
iret
popf
mov
jp
imul
mov
fstp
pop
sbb
popf
stc
mov
pop
push
mov
es
sbb
in
xor
or
mov
mov
jo
and
xchg
xor
dec
xchg
xor
movs
xchg
(bad)
(bad)
pop
or
shl
lea
dec
in
jne
jp
sti
ins
stos
cmp
sub
inc
jle
hlt
fst
mov
cs
enter
sub
cdq
ins
push
fdiv
and
sub
imul
(bad)
jmp
cmp
lahf
(bad)
sub
gs
icebp
data16
push
loope
arpl
jnp
ror
adc
sbb
adc
in
mov
fdivr
pop
fstp
jne
lock
fisttp
(bad)
mov
ret
or
dec
cmp
add
xor
and
lods
cmp
loop
xchg
pop
mov
fst
(bad)
sti
mov
cmp
dec
dec
push
outs
stc
dec
add
and
daa
xchg
xor
pop
stc
aaa
imul
mov
dec
xlat
lds
test
and
std
pop
(bad)
outs
jp
or
(bad)
fsub
mov
ins
cmc
stos
and
sub
pusha
and
rcr
push
jl
sahf
fdivr
adc
push
call
dec
ficom
loopne
aam
xchg
cs
(bad)
stos
lods
inc
inc
cmp
push
and
lods
loope
cmps
ror
out
push
cmp
xor
test
push
jns
aas
rcl
in
inc
cmp
out
ja
fimul
cwde
movs
pushf
sub
loopne
inc
lahf
(bad)
cs
xchg
push
fsubr
retf
setge
nop
mov
jge
mov
fld
push
in
cli
shl
jp
push
(bad)
push
cld
or
cmps
sbb
sbb
ja
sar
call
mov
add
mov
push
lock
jp
jmp
mov
push
jmp
cmc
popf
add
and
rol
xchg
(bad)
(bad)
sbb
inc
mov
inc
mov
stos
in
mov
adc
loope
push
sbb
or
(bad)
aam
pop
rcl
loop
mov
ret
sbb
pop
inc
push
pop
or
mov
icebp
call
stos
int3
int3
rol
pop
jmp
jnp
shl
mov
pushf
rcr
push
jl
and
pusha
xchg
mov
add
jnp
cmp
loop
clc
in
mov
cmps
sbb
and
mov
mov
cmp
cmp
jbe
cmp
xor
mov
and
inc
cmp
outs
addr16
ret
xor
popf
retf
dec
in
cmp
(bad)
inc
xchg
xchg
xchg
cmps
cmp
or
cli
xchg
pushf
pop
(bad)
cmps
mov
pop
lahf
(bad)
sub
sub
add
add
fstp
cld
dec
stos
or
nop
sbb
cmp
not
and
pop
out
mov
and
imul
retf
(bad)
dec
js
sbb
pushf
es
xchg
test
xor
and
jnp
stos
fist
in
into
add
cmp
adc
add
in
mov
lods
mov
cwde
cs
xchg
xlat
ins
mov
out
pop
adc
push
enter
pop
repnz
add
rcl
outs
jp
stos
cli
jmp
adc
das
icebp
adc
push
xchg
xlat
test
lods
loopne
imul
and
ja
jne
push
out
imul
add
lock
push
loope
xlat
dec
xchg
lds
fs
mov
movs
sub
dec
and
lods
cmp
loop
xchg
lods
test
sbb
inc
add
add
outs
fwait
or
add
mov
cmps
out
cs
fild
mov
clc
cdq
out
(bad)
pop
sar
hlt
xor
jb
push
data16
cmp
xchg
sub
mov
mov
push
scas
cmp
push
ins
and
cmp
fbld
out
sbb
addr16
mov
sahf
mov
cmc
test
inc
cs
and
mov
xor
jmp
pop
into
adc
xlat
push
and
out
retf
cld
dec
and
bound
cmc
(bad)
add
and
cmp
cmp
out
in
mov
fimul
(bad)
outs
jp
aaa
adc
mov
lds
sbb
pop
or
jae
out
lds
xchg
ja
mov
retf
mov
retf
mov
ss
cdq
mov
push
push
adc
outs
(bad)
jl
and
out
dec
sbb
xor
sbb
mov
inc
sbb
enter
inc
inc
cmp
pop
call
sub
lds
push
mov
cmc
dec
mov
xor
ins
or
iret
inc
ret
in
mov
sbb
inc
xchg
gs
(bad)
cs
fisttp
mov
inc
and
clc
pop
jmp
mov
xor
or
jmp
(bad)
dec
adc
das
icebp
xchg
and
push
push
xchg
xchg
xor
cs
or
add
ins
ret
dec
jmp
pop
scas
(bad)
cdq
add
jnp
(bad)
(bad)
imul
into
test
lods
sub
lods
mov
xchg
aad
lea
mov
mov
push
dec
push
ret
mov
mov
adc
inc
jae
push
inc
dec
(bad)
aaa
xchg
sbb
pop
mov
std
mov
aad
xchg
cmp
push
inc
adc
imul
enter
inc
dec
adc
loopne
into
ds
je
(bad)
xor
bound
sub
imul
mov
call
push
icebp
fcmovb
push
sub
xchg
mov
clc
loope
movs
ds
push
test
or
cmc
out
cld
scas
ficom
mov
push
vmwrite
in
dec
mov
adc
in
ret
das
mov
mov
xor
(bad)
or
jmp
sub
(bad)
sahf
xchg
jne
rcl
cmp
cmp
xchg
rcl
add
sub
rol
arpl
imul
mov
lods
cli
and
in
add
adc
jmp
add
pop
xchg
add
mov
lods
and
int
js
fisubr
or
dec
jmp
jle
mov
imul
mov
mov
dec
xor
sbb
in
xchg
cdq
mov
mov
pop
jo
mov
push
cdq
cs
fisttp
xor
xchg
mov
movs
pop
mov
jge
popf
mov
test
loop
xor
pop
enter
push
xchg
cmp
jne
movs
xchg
or
ins
xchg
pop
or
mov
adc
std
xchg
(bad)
jl
and
xlat
pop
pushf
popa
add
jle
nop
cwde
test
xor
or
or
mov
push
xchg
mov
adc
rcr
pop
cmp
pop
lea
cmp
cmps
xchg
stc
sub
mov
lea
in
loopne
fnstcw
loope
fwait
add
mov
bound
mov
(bad)
add
das
es
sbb
jmp
enter
cdq
cmp
xchg
xor
pop
xchg
sub
pop
jnp
loopne
inc
stos
in
cld
hlt
add
sub
sub
mov
pusha
bound
and
test
js
(bad)
std
add
inc
call
ret
stos
sub
dec
mov
jmp
sub
loopne
jno
inc
mov
mov
xor
add
add
rcr
add
ins
xor
cwde
movs
pusha
cmp
out
cmp
call
dec
push
sbb
jo
mov
(bad)
xchg
test
fild
ins
jg
push
push
xchg
xchg
add
pop
cli
cs
sbb
ja
jne
inc
sub
mov
cmp
stc
push
jo
mov
ss
jle
test
xchg
adc
sbb
leave
lods
cld
aad
int3
mov
aam
xor
pop
lods
xor
pusha
fisttp
rsqrtps
mov
in
inc
not
in
shr
xchg
cmps
and
ins
xor
out
xchg
ins
cmp
jmp
and
(bad)
lds
in
mov
test
xchg
shr
mov
jecxz
lea
sbb
(bad)
mov
add
sbb
push
cwde
iret
add
dec
pusha
pop
out
mov
and
into
jo
inc
xor
cmc
(bad)
pop
in
xor
push
mov
jnp
ret
stos
cmc
popf
add
cmc
sub
rol
lds
push
jb
jl
div
push
fistp
leave
dec
sub
adc
add
(bad)
aam
or
push
mov
sar
mov
mov
sub
xchg
jle
mov
mov
jge
fmul
xchg
psrlq
and
lods
adc
je
repnz
aam
movs
es
add
mov
leave
fadd
in
iret
pushf
mov
pop
dec
ficom
inc
mov
cmp
xor
push
mov
xor
cs
cs
jg
repz
xor
xchg
sub
loope
mov
adc
mov
cwde
inc
add
dec
aam
mov
and
fsubr
fbstp
pop
mov
clc
mov
dec
dec
or
xchg
pushf
into
(bad)
xor
mov
pop
sub
call
pop
sar
(bad)
xchg
or
test
fnstenv
call
mov
xchg
add
outs
int
xchg
jb
and
xor
pop
push
jnp
mov
mov
pop
and
jb
dec
xor
jns
inc
inc
sbb
and
ss
sub
aaa
mov
xchg
push
dec
in
mov
push
adc
and
jmp
(bad)
lahf
in
jle
push
fcomp
cmp
cmc
cmc
imul
xor
outs
psubusb
and
rcr
out
adc
out
jo
(bad)
sbb
fprem1
cmp
push
inc
pop
jmp
in
neg
shl
lahf
mov
in
mov
xor
push
inc
mov
inc
or
gs
stos
jb
push
call
cmp
ja
or
out
imul
cmp
adc
jne
xlat
lods
retw
mov
inc
and
sar
ins
mov
rcr
xchg
ret
enter
mov
xor
retf
popf
retf
cmp
cli
int
jne
xchg
mov
lds
arpl
in
icebp
mov
loop
sbb
cdq
movs
mov
fmul
add
cld
arpl
mov
adc
cmc
pop
fdivrp
push
fs
je
jmp
int
stos
pop
aad
out
adc
sub
call
adc
gs
adc
xor
jmp
shl
pop
shr
out
ror
mov
pop
pop
xchg
inc
data16
mov
sbb
test
or
or
adc
imul
fbld
and
mov
or
push
xchg
xchg
cmp
hlt
movs
push
cs
fdiv
int3
aad
cld
bound
daa
dec
sbb
push
pusha
sahf
mov
add
jae
cmp
sbb
add
imul
std
mov
adc
aad
je
ds
and
jmp
test
push
fimul
add
cmp
cli
adc
sub
out
mov
adc
movs
mov
inc
cmps
inc
pop
mov
clc
pop
call
enter
mov
ss
cmp
jecxz
(bad)
pop
std
xchg
pop
jmp
fucomi
in
xor
jecxz
rcr
(bad)
adc
ins
push
ret
retf
dec
dec
sbb
and
(bad)
jbe
repnz
es
xchg
pop
add
(bad)
jns
inc
cs
cmp
fs
loope
daa
(bad)
cmp
stos
rcr
lods
pop
mov
xor
in
cmp
das
outs
add
and
adc
add
loope
inc
cmps
push
fild
stc
mov
lea
int
push
dec
movs
aaa
out
add
mov
arpl
stos
jge
push
xor
adc
mov
xlat
fstp
push
stc
jo
and
cld
and
in
sbb
adc
sbb
gs
pop
mov
stos
out
cmp
test
pop
mov
popf
ss
mov
push
or
or
(bad)
loopne
jns
and
fmul
pop
xor
or
cli
or
inc
std
adc
mov
add
jg
loopne
push
js
enter
mov
sub
inc
and
in
push
js
call
or
adc
xor
aam
pop
das
push
cdq
stc
xchg
int
sbb
movs
mov
mov
mov
xchg
out
not
stos
retf
pusha
pop
retf
jle
pop
and
sbb
mov
movs
out
pop
ret
inc
and
add
repz
jmp
jmp
jb
into
mov
pop
mov
mov
jecxz
daa
adc
cwde
sbb
cwde
cmp
inc
in
pop
cmp
xor
and
int
mov
cmp
in
push
(bad)
mov
repz
test
pushf
gs
inc
ja
pop
push
jae
repz
lea
sbb
enter
popf
mov
inc
and
clc
and
xor
cs
test
push
sub
or
mov
and
outs
mov
jb
cmp
into
sub
xor
lods
add
js
mov
movs
xor
jmp
loop
jnp
enter
mov
jmp
imul
faddp
xor
sbb
jmp
jae
(bad)
pop
(bad)
fwait
es
data16
add
add
push
dec
sub
pop
lods
or
cs
mov
(bad)
out
aaa
iret
sub
dec
frstor
pop
and
test
jg
dec
push
cmp
pop
dec
jns
les
dec
push
and
xchg
sahf
repnz
jno
test
cmp
add
lods
les
pmullw
movs
xchg
rcr
retf
fcomip
push
inc
ror
ret
daa
and
xchg
jle
call
rcl
mov
and
jae
(bad)
pop
(bad)
shl
cdq
jl
jb
push
(bad)
jbe
sub
cld
xor
sbb
sbb
ja
call
fucomi
dec
pusha
add
sub
fldcw
pop
jnp
mov
cmp
clc
loope
es
in
add
mov
(bad)
inc
rcr
jno
(bad)
inc
lock
in
jp
sub
mov
jecxz
out
outs
dec
pop
loop
and
lods
jns
jmp
in
sbb
call
mov
cdq
je
mov
inc
stos
or
mov
push
in
jmp
jg
push
push
xchg
push
xlat
ins
or
or
mov
and
outs
add
test
neg
jbe
mov
inc
sbb
or
in
xor
inc
test
xor
sar
aam
test
xchg
jmp
(bad)
pop
xor
daa
enter
out
mov
push
pop
add
ja
push
int3
movs
into
or
cmp
push
int
push
push
ins
jb
pop
sar
xor
(bad)
ja
add
ins
xchg
clc
dec
(bad)
xchg
cmpxchg
mov
pop
mov
jl
inc
and
in
in
pusha
mul
or
jno
mov
add
xchg
add
pusha
xchg
int
xchg
(bad)
lds
clc
repnz
ret
fisttp
or
movs
pop
push
cmp
pop
aad
outs
cmp
data16
mov
mov
inc
aam
mov
sti
lds
cmp
enter
push
mov
rol
rcr
rol
test
call
mov
mov
sub
outs
mov
push
pushf
gs
and
not
push
cmc
mov
leave
fmul
js
inc
jle
stos
call
jecxz
xchg
add
frstpm(287
nop
fild
mov
ss
pop
add
in
adc
cmc
or
fld
bound
(bad)
out
jnp
test
mov
les
fist
inc
fnstcw
push
and
add
iret
outs
xor
mov
xor
add
sbb
ins
std
out
push
cmp
ror
jge
and
mov
pusha
dec
sbb
ret
or
sub
fstp
or
xor
fwait
in
pop
dec
sbb
inc
mov
jnp
mov
push
cmp
in
cmp
or
int
stos
in
outs
jae
jns
inc
add
ins
or
out
cmp
add
retf
push
xor
lods
rsqrtps
das
add
mov
ret
cld
stos
pop
daa
cmps
xor
xchg
inc
or
dec
push
jb
cld
outs
das
mov
dec
mov
rcl
cmp
xlat
jle
imul
sti
ss
xchg
dec
push
call
pop
ss
fdiv
dec
push
nop
dec
xchg
clc
mov
adc
ins
mov
sub
jo
fisubr
mov
lods
(bad)
es
sbb
cmps
inc
outs
sar
cmp
jmp
loop
pop
sub
std
loop
out
dec
mov
loope
repnz
cmp
call
inc
ins
cdq
cmp
push
cld
call
push
or
cmps
dec
aas
push
sub
pop
jecxz
jmp
(bad)
rcl
jno
test
(bad)
in
cld
adc
xchg
(bad)
std
sbb
stc
mov
pop
cmc
xchg
pop
jmp
sub
div
sub
mov
pop
leave
outs
(bad)
cmp
and
bound
call
and
fwait
out
mov
ret
sbb
ret
adc
mov
in
mov
leave
out
jmp
jo
into
and
iret
mov
dec
cmp
sub
movs
sahf
dec
mov
aaa
xchg
sub
inc
sub
lea
xchg
retf
int
xchg
iret
arpl
jb
call
(bad)
pop
and
(bad)
cmc
popf
xchg
imul
adc
pop
xor
sbb
push
jmp
fdiv
gs
add
dec
xchg
push
into
(bad)
jg
pop
sbb
mov
lods
lock
mov
popf
sbb
xchg
rcl
dec
mov
enter
xchg
icebp
jno
leave
popf
and
push
adc
mov
add
outs
cli
mov
out
pop
outs
xor
scas
and
mov
mov
stos
inc
mov
push
popa
pop
call
and
jb
(bad)
xchg
dec
mov
ret
(bad)
pop
cmp
fild
xchg
or
mov
or
sahf
out
jo
ss
mov
leave
cmps
dec
call
mov
test
sbb
enter
jmp
xor
add
dec
test
bound
test
mov
jno
inc
jge
out
out
stos
sub
xchg
jg
mov
(bad)
lahf
mov
push
cmp
iret
test
mov
pop
call
push
test
loope
xchg
mov
pop
sbb
xchg
das
jnp
adc
xlat
(bad)
push
or
and
loopne
pop
cmp
pop
stc
and
mov
outs
pop
cld
push
add
imul
stc
jg
dec
xchg
xor
es
push
pop
arpl
imul
and
pop
je
out
dec
xor
mov
dec
test
cmps
dec
adc
sub
jge
popf
data16
stos
mov
call
cmp
push
inc
mov
data16
or
xchg
scas
add
xchg
mov
test
pop
pop
sub
push
dec
mov
or
mov
dec
mov
repz
mov
mov
dec
dec
test
mov
dec
out
ins
xlat
add
adc
out
test
leave
lods
jns
int3
add
add
popf
add
loope
cmp
add
inc
shl
push
cmp
push
ficomp
adc
repnz
and
sub
ins
dec
jb
push
int
xor
adc
sahf
xchg
stc
lods
sar
xor
jge
call
jp
imul
fbstp
gs
idiv
cmc
ja
sub
jl
inc
and
int3
(bad)
sbb
xchg
test
jle
stos
call
frstor
jnp
aam
outs
clc
jg
out
mov
adc
xchg
push
pop
arpl
and
sub
jb
fdivr
jne
aam
adc
in
mov
inc
inc
xchg
xchg
retf
adc
movs
mov
int
push
adc
cdq
cdq
push
stc
sbb
cli
popa
daa
adc
cmp
jb
imul
pop
sub
and
jnp
mov
pushf
mov
pop
inc
scas
ins
sbb
loop
sti
push
mov
jmp
addr16
xchg
mov
not
pop
jmp
or
scas
xor
adc
mov
mov
movs
xchg
adc
inc
cmp
retf
jo
rcl
dec
inc
fsubr
loope
cmp
(bad)
jno
sub
in
add
inc
daa
sub
mov
outs
mov
lods
xor
pop
or
test
das
popa
dec
cld
cmp
dec
push
into
sar
fdivrp
push
repnz
jne
cli
popa
into
inc
mov
ja
mov
jnp
jb
loope
xchg
pushf
add
add
sub
imul
aad
movs
out
cld
dec
fcmovnb
cmps
mov
rcl
(bad)
shl
js
mov
or
inc
or
es
mov
jle
fucom
pop
cmp
jne
clc
aaa
outs
and
dec
push
sbb
(bad)
fdivr
out
fwait
xchg
sub
mov
xchg
(bad)
movs
fst
repnz
jge
fs
dec
clc
and
cmp
xor
rcl
cmp
cmp
xor
jmp
cmps
adc
and
xchg
or
dec
xlat
cmp
xor
push
sbb
dec
(bad)
push
push
aaa
aad
and
xor
(bad)
lods
push
fldenv
rsqrtps
out
sub
les
add
sbb
mov
sub
sub
push
fwait
shl
mov
and
ins
inc
and
(bad)
mov
je
in
rcr
push
add
aaa
push
push
dec
jmp
ins
(bad)
pop
push
pop
cwde
xor
or
popa
shl
gs
outs
pusha
mov
outs
sbb
out
test
ret
sbb
jg
call
jmp
xchg
(bad)
jl
mov
pusha
mov
stc
sub
lods
shl
lock
sti
ds
sar
aad
pop
stos
or
mov
add
in
cmp
sub
mov
stos
cmp
in
shl
jne
jp
sti
adc
mov
dec
mov
cdq
cs
(bad)
dec
and
add
pushw
mov
mov
jge
jmp
lea
jp
pop
nop
inc
mov
popa
and
mov
out
jns
inc
scas
ins
sbb
cmp
gs
xchg
movs
adc
sub
into
sub
fnstenv
call
in
es
add
arpl
dec
popa
xchg
mov
push
repz
or
ds
sub
inc
test
cmp
pandn
sbb
daa
adc
mov
push
int3
bound
loope
cs
ret
aaa
push
and
call
(bad)
dec
sbb
or
scas
jne
repz
pop
not
das
and
cdq
stc
ins
mov
push
xlat
in
hlt
movs
fxtract
or
test
cld
push
mov
bound
cwde
mov
(bad)
std
pop
iret
adc
add
lock
arpl
int
pop
stos
or
mov
test
stos
cmc
call
test
mov
mov
loope
test
pop
sar
adc
mov
inc
mov
lods
inc
mov
cmp
add
sub
sahf
push
dec
cdq
out
gs
cmp
or
addr16
cmp
xchg
jge
dec
aad
(bad)
pop
cmp
addr16
pushf
and
pop
es
adc
jo
push
es
inc
lods
push
add
mov
int
jecxz
or
mov
xchg
add
mov
into
push
or
add
mov
push
or
not
mov
(bad)
lea
pop
imul
mov
aaa
or
outs
loope
mov
and
and
push
lea
or
cdq
out
jb
pop
mov
add
push
adc
outs
jp
push
xchg
xor
jns
mov
pop
cmc
xchg
pop
jmp
adc
imul
int
mov
and
inc
mov
in
xchg
cmp
xchg
ins
xor
mov
push
mov
or
lods
add
inc
push
dec
in
bound
not
les
enter
jbe
retf
cmp
sahf
inc
pop
sbb
push
push
rcr
dec
cld
sbb
clc
out
dec
mov
push
mov
cmp
je
in
sbb
mov
jnp
iret
push
cmp
ds
nop
fld
pop
jecxz
adc
test
movs
data16
sub
inc
ss
es
daa
jae
mov
mov
stc
xchg
mov
jmp
adc
jp
mov
imul
addr16
lock
lods
push
dec
gs
jmp
popa
jmp
leave
inc
ror
stos
call
xor
pop
sbb
xchg
inc
pop
cmc
(bad)
aas
or
pop
push
pop
and
jle
add
lock
les
push
push
test
lds
adc
test
cmp
inc
lock
jg
mov
fs
and
in
mov
pop
push
xlat
out
leave
xchg
pop
jo
mov
jae
push
fnsave
xor
cwde
ret
(bad)
adc
and
jnp
addr16
jb
pop
lods
cmp
cmp
add
xchg
enter
test
fadd
sub
pop
or
(bad)
push
mov
xor
xchg
imul
push
and
clc
cwde
mov
fwait
xchg
pop
cs
or
add
jnp
pusha
dec
loope
xor
stos
inc
enter
ficom
pop
repz
dec
movs
sub
aam
xor
xchg
mov
xchg
lea
int
fnstenv
(bad)
jae
push
fidiv
sub
inc
xchg
ret
mov
fwait
jbe
lds
jge
in
jb
add
scas
cmp
sub
add
xchg
retf
inc
push
sub
and
pop
xchg
sbb
into
add
fdiv
push
sub
inc
xor
bound
mov
xchg
xchg
dec
cs
or
add
arpl
cmp
out
inc
iret
mov
sub
adc
stos
add
xchg
outs
dec
mov
retf
sbb
loope
sti
inc
in
sbb
jo
cli
test
repnz
cld
mov
and
adc
jge
dec
adc
sbb
mov
ja
fcomi
sub
retf
mov
mov
and
cmc
jno
cld
lods
dec
xor
inc
xchg
jbe
pop
push
jmp
mov
outs
dec
stos
add
mov
mov
outs
or
aad
or
les
outs
push
stos
xchg
jbe
pop
adc
xchg
sub
adc
int3
pop
push
inc
jmp
mov
dec
popa
xchg
(bad)
retf
imul
cmp
mov
jge
mov
mov
xor
cli
push
hlt
xchg
inc
add
jmp
sub
cmp
or
push
inc
fist
add
cmps
or
sbb
xchg
test
cmps
adc
mov
jns
sub
sbb
jne
icebp
cmp
push
(bad)
fadd
es
(bad)
fsubr
in
loope
aam
pop
jb
cmp
sar
xor
hlt
fnsave
jo
sti
cmp
stos
inc
sahf
xchg
cdq
cld
fs
(bad)
call
xor
or
add
mov
addr16
mov
dec
gs
jmp
fild
scas
out
adc
rcl
dec
sti
or
pop
sbb
adc
push
xchg
jns
stos
aad
inc
pushf
mov
movs
inc
xchg
cmp
add
mov
and
fist
pop
pop
mov
loop
pop
mov
or
sbb
push
ds
or
arpl
imul
and
jo
mov
inc
call
in
stos
or
ret
stos
cmc
fcomi
stos
sbb
(bad)
mov
cmp
dec
push
mov
ja
fcomi
pusha
stos
(bad)
in
in
xor
mov
dec
call
mov
adc
cmp
loope
mov
jmp
sbb
sbb
mov
(bad)
xchg
dec
and
js
dec
in
das
das
pop
push
aas
icebp
call
push
ret
sub
pop
jmp
jmp
jns
pop
xor
fsub
xchg
jne
retf
and
frstor
icebp
mov
out
test
(bad)
or
lods
add
jbe
xchg
mov
fcomi
sub
retf
pusha
fstp
and
lock
and
cmp
add
enter
ret
cmps
pop
je
cwde
cs
adc
dec
loope
ja
fisttp
out
test
or
int3
xchg
dec
es
shl
lock
and
ror
call
gs
call
outs
mov
sub
test
imul
lahf
movs
dec
pusha
pop
adc
test
push
inc
inc
mov
clc
xchg
ss
sbb
xchg
neg
pusha
push
scas
xchg
push
xchg
ss
or
(bad)
push
xchg
mov
mov
sbb
sbb
xchg
dec
xchg
inc
scas
adc
cmp
xlat
imul
ja
jno
mov
(bad)
outs
pop
call
and
cld
fild
(bad)
dec
inc
icebp
call
and
into
and
fsub
inc
or
cmc
mov
stos
adc
xchg
mov
jbe
mov
add
jo
pop
xor
add
dec
cmps
and
dec
rol
repnz
push
and
or
int
nop
sti
pop
sub
repnz
xchg
push
lock
dec
xor
inc
jge
jnp
aas
xor
and
rcl
pop
mov
ins
push
cmps
arpl
fst
mov
xchg
int3
sahf
and
imul
das
outs
ffreep
cmp
dec
bound
push
icebp
xchg
test
fdecstp
loop
xor
sub
pop
xchg
neg
test
pop
call
or
into
lahf
(bad)
iret
cmp
sub
es
inc
int3
add
mov
push
ins
lds
into
test
cmp
call
sahf
and
mov
mov
jle
fwait
fs
xor
imul
mov
scas
sbb
daa
xchg
call
cmps
mov
and
stos
mov
push
dec
lahf
pop
stos
and
pop
sbb
sbb
out
xchg
in
fstp
jns
push
mov
das
fs
pop
ret
inc
and
(bad)
cmp
mov
sbb
aaa
aas
adc
enter
xor
mov
leave
and
mov
call
rol
fcom
sti
lods
fcom
and
adc
fsub
or
inc
mov
test
inc
loopne
inc
bound
loopne
dec
cdq
js
add
sar
adc
out
xor
call
movs
stos
mov
push
ret
jecxz
push
sub
or
add
push
mov
jg
push
add
push
movs
popa
pop
(bad)
in
not
lods
mov
dec
dec
pop
es
and
lds
push
(bad)
rcl
inc
call
std
xchg
adc
repnz
sbb
cmp
fistp
in
mov
fsub
xor
mov
push
nop
adc
and
aaa
nop
and
sbb
cmps
rol
or
push
in
jmp
cmp
pushf
inc
stos
mov
(bad)
outs
inc
xchg
out
(bad)
ds
pop
dec
cdq
jb
repnz
xor
cmp
push
sbb
xor
neg
out
fdivr
adc
jb
mov
dec
jo
(bad)
retf
std
nop
mov
inc
xchg
mov
test
cmc
xchg
push
call
call
add
sbb
mov
adc
jmp
and
push
sub
xchg
add
leave
pop
lods
xor
push
mov
rcr
mov
cwde
(bad)
(bad)
mul
mov
push
xor
jno
call
(bad)
sbb
dec
imul
dec
pop
das
icebp
sbb
ins
jg
or
cmp
out
in
pushf
push
mov
cwde
jbe
in
or
iret
xchg
mov
xchg
inc
cmp
xor
iret
pop
ret
ficom
cmc
mov
out
pop
stos
pop
xor
outs
jne
retf
out
or
or
mov
ror
je
pushf
int3
sahf
xchg
mov
mov
(bad)
sbb
out
sar
xor
sub
dec
sub
cs
xchg
inc
scas
adc
cmp
out
add
jecxz
mov
jno
mov
cmp
xchg
jge
mov
mov
icebp
pushw
ins
jg
outs
arpl
stc
and
pop
mov
sbb
ja
push
arpl
mov
pop
gs
ins
add
jge
ret
cdq
test
mov
inc
mov
ret
xchg
call
pop
loop
repz
push
(bad)
in
dec
sbb
push
mov
cmc
push
jno
into
jle
jp
clc
mov
ret
xlat
dec
popa
pop
add
addr16
ret
imul
lds
pop
xor
xchg
out
call
jo
adc
das
pushf
lods
and
retf
and
or
jb
push
stos
and
sub
pusha
(bad)
sbb
(bad)
dec
ja
or
mov
fdiv
lock
ror
fldcw
mov
xchg
std
xchg
mov
int
fld
ror
movs
jns
stos
inc
mov
sbb
add
(bad)
mov
into
push
mov
cmc
dec
inc
sbb
lock
and
(bad)
mov
pushf
cdq
pop
inc
xchg
push
int3
pop
outs
xor
cwde
movs
cwde
cmp
push
not
fisub
xchg
into
dec
adc
aam
mov
cmp
cmp
xchg
aad
dec
or
out
das
ins
cmc
movs
movs
lahf
call
jge
xchg
xor
add
mov
fsub
out
or
scas
aas
movs
jmp
jnp
dec
lea
std
test
gs
int
sub
lods
xbegin
cmp
(bad)
or
popa
push
dec
xor
movs
retf
out
popa
popf
ret
in
cld
mov
std
jmp
adc
pop
and
outs
xor
loop
fwait
inc
pop
pop
scas
mov
or
ins
push
movs
in
cmp
aaa
(bad)
popa
mov
das
xor
and
push
aam
psubusw
sbb
push
lock
mov
movs
(bad)
xchg
loopne
int
sbb
test
icebp
test
jns
jecxz
dec
sbb
xor
in
mov
ss
leave
mul
and
retf
push
retf
rcr
or
in
das
add
mov
outs
jno
es
rcr
inc
pop
sub
and
enter
mov
addr16
enter
xor
data16
inc
movs
pop
cmp
or
cmp
call
out
pop
rcr
adc
in
push
call
and
push
stc
cmp
ja
(bad)
dec
push
lds
in
imul
xchg
jne
test
xor
pusha
test
dec
sbb
and
jmp
fcomp
(bad)
in
dec
dec
enter
add
mov
push
jp
in
mov
imul
mov
inc
mov
mov
cmp
loop
jns
inc
sub
cmp
pop
dec
test
mov
int
into
pop
xor
adc
xlat
pop
cmp
out
dec
cmps
lock
cdq
adc
popf
push
jmp
fstp
inc
ror
adc
mov
enter
ja
or
test
add
inc
std
fs
test
out
cwde
mov
xor
push
mov
sbb
mov
dec
sub
(bad)
and
int3
sahf
xchg
loop
sbb
mov
or
outs
pop
push
mov
mov
push
push
stc
aam
ja
fimul
fstp
and
cwde
jmp
cdq
add
sahf
dec
rcl
shl
repnz
test
mov
cmp
imul
out
adc
cdq
stc
xchg
cmc
pop
push
in
fist
(bad)
mul
(bad)
mov
inc
leave
stc
mov
jmp
repz
adc
mov
dec
sbb
mov
xchg
sahf
or
(bad)
gs
rcr
jmp
pusha
loopne
mov
pusha
dec
clc
lock
inc
stc
xlat
fisttp
(bad)
mov
and
cs
imul
xor
sbb
int
movs
jo
int3
pop
int
(bad)
outs
test
lahf
pop
fist
cmp
push
ins
cmc
pop
sbb
jnp
sub
mov
stos
cld
sub
sub
outs
mov
mov
ret
xor
fnstsw
xor
js
out
and
dec
rol
push
cmc
popf
add
and
push
cmp
loope
mov
into
mov
(bad)
nop
sbb
add
retf
sub
dec
sub
mov
lods
shl
sub
scas
mov
retf
popf
gs
cmp
lock
push
cwde
ins
(bad)
mov
mov
push
cdq
adc
push
jmp
fstp
and
pop
mov
or
dec
push
out
aas
adc
xor
xor
or
add
inc
mov
add
sti
adc
pop
add
mov
sahf
jmp
out
xor
gs
in
mov
in
inc
not
in
retf
ja
push
and
mov
push
scas
xor
mov
movs
xchg
mov
ss
mov
popf
je
cli
pusha
ret
fild
dec
lock
and
lods
retf
xchg
or
mov
xor
add
dec
sub
mul
inc
pusha
lods
call
xor
and
nop
pop
push
or
push
test
cdq
inc
inc
cmp
jg
repz
and
and
shr
mov
xchg
pop
shl
popa
sbb
cli
mov
jns
in
xchg
mov
and
mov
test
cmps
inc
sub
lea
int
leave
addr16
lea
lds
pop
sbb
pop
add
(bad)
shl
cmc
ins
jg
or
arpl
fistp
add
lods
pop
push
mov
ja
popa
dec
xchg
add
pop
scas
or
jnp
push
inc
pop
dec
sbb
sub
out
push
adc
jmp
repz
jmp
sub
(bad)
(bad)
jno
repnz
dec
push
retf
sub
xor
xchg
test
mov
xchg
enter
cmp
cmps
jmp
add
sbb
jecxz
int
hlt
retf
call
pusha
inc
mov
lahf
(bad)
xor
shr
pop
data16
test
jl
sbb
inc
stos
jmp
mul
or
mov
jmp
retf
jo
addr16
cmps
pop
add
clc
repnz
ret
push
jle
(bad)
fdiv
fstp
mov
mov
mov
cmc
adc
into
mov
pop
lods
retw
stos
mov
mov
pop
rcr
sar
or
mov
xchg
mov
ret
inc
or
dec
inc
mov
push
pop
bound
push
pop
bound
cmp
xor
inc
ss
adc
das
icebp
adc
out
sub
icebp
clc
dec
jb
sbb
cmps
cdq
int
push
neg
(bad)
iret
sub
pop
(bad)
pop
or
fidiv
addr16
inc
xor
outs
inc
add
mov
push
or
mov
adc
aam
xor
adc
in
mov
add
je
loopne
test
jl
(bad)
fstp
jmp
add
xor
and
pop
mov
cmps
into
ficom
lock
arpl
shl
xchg
pushf
push
in
cmp
stos
dec
add
and
shl
jmp
push
bound
daa
or
or
neg
(bad)
iret
xor
dec
pusha
imul
fisttp
lds
mov
jg
js
outs
mov
jp
leave
fnstcw
jmp
rep
and
into
push
mov
cmc
movs
push
in
jle
jnp
xchg
mov
ret
mov
out
in
mov
jle
clc
mov
pop
call
(bad)
dec
inc
inc
xchg
mov
pop
call
in
jns
enter
shl
test
lods
pop
jle
lahf
pop
and
cmps
rol
push
in
mov
(bad)
mul
jecxz
mov
xor
ja
or
fadd
dec
(bad)
push
neg
lahf
fld
and
xor
test
sbb
push
xor
cs
sub
cmp
(bad)
push
(bad)
(bad)
popa
fs
mov
(bad)
jno
into
rcl
lods
in
daa
movs
pop
mov
out
outs
in
or
ins
out
int3
sub
loope
cs
daa
push
scas
mov
retf
xlat
mov
mov
(bad)
mov
popf
je
cli
pusha
ret
fild
dec
and
xchg
and
xchg
adc
aaa
mov
lods
repz
popa
test
sub
outs
mov
push
inc
std
imul
xor
outs
sar
test
push
xchg
loop
xlat
pop
push
(bad)
ror
fsubr
std
add
add
popf
pop
icebp
lods
in
daa
test
inc
mov
and
mov
mov
shl
mov
imul
inc
sub
out
xchg
xchg
xchg
add
mov
outs
jge
call
cmp
cmp
dec
jae
pop
das
pop
sbb
out
push
mov
stos
icebp
inc
ja
or
std
xor
dec
pop
gs
in
dec
sti
pop
and
test
push
daa
aad
xchg
es
stc
xchg
ss
int3
test
(bad)
sub
push
push
jbe
adc
xor
and
cmp
xor
xlat
inc
cmp
outs
addr16
ret
mov
addr16
mov
not
mov
cmc
push
xchg
test
sbb
aad
cmp
xor
pop
sbb
(bad)
stc
mov
mov
pushf
clc
jecxz
mov
pop
jmp
nop
(bad)
jl
aaa
push
pop
in
xchg
enter
sub
and
outs
addr16
scas
xor
in
stos
sbb
ss
mov
push
inc
imul
mov
jnp
xchg
test
in
inc
xchg
ins
jbe
inc
jge
dec
scas
aam
mov
rol
fist
sub
sub
movs
in
xchg
and
les
pop
cmp
push
mov
cmp
repnz
cs
adc
push
mov
jp
stos
imul
ss
pop
dec
xchg
jb
cli
pop
jmp
jno
xchg
cmp
sub
inc
add
sbb
push
jb
stos
mov
int
mov
cli
add
mov
or
fldenv
add
das
dec
pop
loope
sub
inc
jecxz
xlat
lods
mov
fstp
rsqrtps
mov
ss
nop
inc
mov
pop
or
pop
jmp
mov
dec
sbb
stc
scas
scas
cmp
xor
aam
mov
cmp
xor
loopne
dec
mov
data16
or
jno
inc
aam
mov
fld
xchg
movs
adc
sbb
mov
enter
je
out
je
mov
mov
add
les
mov
lea
mov
cmp
inc
push
push
pusha
call
inc
push
dec
and
movs
retf
loopne
mov
pop
add
dec
and
adc
xchg
mov
aas
jne
cs
cwde
into
sar
(bad)
xchg
xchg
xchg
lea
daa
sub
into
popf
jmp
icebp
xor
inc
dec
cmp
lahf
dec
cdq
adc
call
mov
push
loop
ja
std
cs
mov
pop
adc
ficomp
mov
aad
arpl
je
rol
ss
ret
std
cmp
sbb
adc
adc
mov
jl
sti
pushw
cmp
in
inc
sbb
jne
dec
fiadd
xchg
mov
pushf
aad
sbb
add
sub
inc
dec
cmovae
xor
dec
pop
cmps
inc
ds
sbb
pushf
aad
ss
rol
cmp
xchg
(bad)
sbb
lahf
sub
into
ror
jbe
ins
jg
or
push
sub
push
cdq
adc
sbb
shl
push
cpuid
das
in
pusha
ds
retf
jmp
stos
push
cmp
mov
sub
xchg
call
das
clc
dec
and
test
(bad)
popf
sub
iret
es
dec
popa
(bad)
popf
out
outs
in
sbb
repz
inc
add
and
or
imul
and
call
loopne
jo
je
cmp
xchg
or
lahf
pop
fisttp
ror
cdq
push
es
popf
push
pushf
bnd
test
int3
fptan
loop
cwde
fcomp
in
fcom
fdiv
push
dec
xchg
loop
sti
fidiv
addr16
iret
push
add
out
pop
or
pusha
stos
cmc
pop
repz
xor
jbe
cmp
cmp
daa
add
inc
mov
(bad)
movs
out
outs
in
sbb
cmp
xor
out
push
sar
sub
or
sub
retf
push
xor
call
adc
or
mov
lds
cmp
and
xchg
jge
shr
out
pop
das
lea
ins
cmc
popf
in
and
sbb
sbb
ja
push
not
fdivr
adc
ins
gs
add
jecxz
xchg
mov
xor
xor
mov
(bad)
xchg
ss
int3
dec
mov
cmp
pop
retf
loopne
bound
sub
lahf
sbb
scas
jecxz
cmp
dec
cwde
pop
xchg
fcmovnu
push
dec
aam
pop
sbb
ficom
cmp
inc
sub
rcr
mov
ret
sbb
aas
push
cmp
pop
jge
dec
xor
dec
jae
pushw
ins
jg
push
push
xchg
xchg
clc
dec
or
lods
sub
je
mov
or
stos
or
out
xlat
xchg
dec
pop
jecxz
mov
add
inc
mov
icebp
add
pop
push
push
loope
inc
cmp
pusha
call
ror
fmul
add
pop
fstp
xchg
mov
pop
lock
inc
xor
cmp
adc
inc
jmp
jb
test
xchg
dec
mov
ss
cmp
push
and
xor
loopne
shr
call
cmp
adc
sbb
jmp
(bad)
mov
and
stc
pushw
ret
xchg
adc
jnp
test
ret
mov
ss
shl
leave
fstp
pusha
pop
repnz
gs
ss
test
add
loope
js
xchg
shl
pop
rol
mov
jmp
lods
repnz
popa
pop
sub
loop
jno
rol
mov
mov
mov
aaa
mov
imul
cmp
loop
adc
mov
xchg
rol
xchg
std
mov
retf
adc
cmp
xchg
sub
and
data16
movs
movs
fwait
call
or
sbb
rcr
(bad)
adc
outs
push
and
rcr
xchg
xor
gs
cmp
add
lds
test
out
pop
ret
inc
and
lods
inc
xor
pop
sub
push
test
mov
jno
mov
in
daa
dec
or
mov
inc
xchg
lock
xor
movs
mov
jge
loope
xor
pop
and
xor
cmc
push
cmp
jo
inc
xchg
mov
(bad)
int3
shl
test
xchg
ins
sub
ror
mov
hlt
repnz
popf
or
dec
call
sti
jmp
jmp
loop
clc
and
xor
mov
pop
inc
mov
pop
mov
sti
pop
push
and
movs
adc
mov
mov
pop
mov
inc
std
or
inc
ret
add
cmp
cwde
cmp
or
mov
sub
and
mov
(bad)
sub
(bad)
in
xchg
test
push
mov
adc
and
pushw
jnp
lods
push
pushf
cmp
ins
dec
pop
or
pop
adc
cmps
ret
popf
lods
mov
call
jl
imul
xor
rol
stc
xchg
lds
add
add
pop
pop
push
and
bound
arpl
into
sbb
xor
retf
push
adc
sbb
sub
out
mov
ja
adc
push
dec
inc
sub
xor
lods
dec
xchg
or
popf
and
(bad)
outs
xchg
popa
xchg
test
jb
das
icebp
push
cmp
sbb
fild
sbb
int
or
add
aaa
daa
pop
(bad)
fisub
or
ror
adc
sub
mov
pop
push
xor
sub
ret
stos
add
js
mov
ror
retf
adc
cmp
cmp
add
popf
cmp
lods
in
daa
push
jp
out
outs
js
inc
fwait
cmps
push
movs
(bad)
ror
mov
je
cmps
inc
fnstsw
mov
rcr
ror
and
shr
ror
test
outs
dec
cmp
mov
push
icebp
in
dec
bound
jnp
int
mov
hlt
shr
sbb
dec
sbb
pop
stc
aaa
push
inc
rep
dec
pop
gs
jne
lock
push
dec
inc
xor
inc
dec
dec
sbb
mov
cmp
or
or
or
pop
popf
fisub
dec
(bad)
sti
push
fst
lahf
stos
mov
mov
js
test
jns
push
ss
shr
cmp
ins
imul
pop
call
rol
push
fnstcw
xchg
mov
arpl
in
int3
shl
out
mov
sbb
int3
fdiv
loop
cwde
out
sbb
add
clc
popa
lods
leave
daa
dec
in
addr16
or
push
cmp
jnp
repz
arpl
ret
out
and
and
and
cmc
pop
mov
xlat
inc
mov
popa
pushf
int3
sahf
jae
jno
pop
outs
inc
cmc
sub
pop
add
pop
test
push
nop
inc
mov
add
rcr
imul
inc
fnstsw
mov
in
imul
shl
ja
jp
lahf
pop
sub
rol
xchg
test
or
or
dec
sub
or
rcr
repz
inc
mov
jl
ds
or
loopne
push
sbb
retf
shl
push
retf
ja
jo
inc
xor
jmp
outs
inc
cwde
in
jns
je
je
or
and
and
(bad)
cmp
push
popf
sbb
lods
in
xor
aaa
push
adc
mov
pop
jp
ja
sbb
push
cdq
aad
(bad)
pusha
inc
cmps
jmp
mov
mov
push
xor
out
and
pop
xor
lahf
pop
sub
rol
xchg
or
push
xchg
xchg
mov
or
adc
jns
and
jle
pop
adc
enter
neg
or
push
adc
push
nop
ins
out
xor
jg
mov
ror
jmp
sub
push
mov
sub
xor
push
popf
mov
and
push
repnz
pop
jp
ja
sbb
rcl
sub
push
inc
or
and
push
iret
pop
push
inc
mov
int3
xor
outs
cli
aaa
push
dec
cmp
arpl
xchg
cli
data16
pop
jmp
jnp
shr
inc
and
loope
psubusb
iret
cmp
test
add
jecxz
test
mov
out
js
and
pop
dec
mov
push
repz
loope
sub
(bad)
xchg
loop
add
test
inc
push
push
adc
stos
mov
mov
fwait
sar
out
(bad)
test
int3
pop
in
imul
push
imul
(bad)
ss
cli
(bad)
add
pop
call
rol
cmp
xchg
shr
movs
stos
pop
fild
push
ret
cmc
xlat
pop
popf
cmp
dec
movs
fnstcw
mov
sbb
add
test
dec
pusha
push
cwde
mov
mov
adc
dec
inc
sahf
fiadd
cmp
adc
cmc
pop
and
add
add
rcr
inc
fwait
push
adc
cmp
mov
xchg
jns
jb
xor
inc
dec
dec
add
iret
rcl
or
call
(bad)
mov
jo
pop
bound
dec
jmp
and
and
adc
push
jnp
(bad)
arpl
loope
mov
jecxz
mov
sbb
nop
(bad)
mov
dec
pop
xor
cmp
xchg
push
leave
lds
mov
es
adc
push
lods
and
xor
add
ja
rol
movs
into
push
push
cmp
cwde
jmp
in
and
xor
inc
js
lahf
xchg
pop
aam
mov
out
pop
outs
xor
dec
xchg
ret
enter
cmps
inc
ds
add
pop
ins
(bad)
push
mov
or
(bad)
xchg
psrlq
test
push
mov
out
popf
xchg
lahf
jb
sbb
hlt
sbb
stc
jo
sbb
push
mov
ja
fs
xchg
jne
add
inc
out
imul
fwait
popf
ins
push
jb
xor
scas
xchg
lods
lods
xchg
cmc
pop
test
sbb
and
ins
xor
stc
ret
test
pop
rol
shl
dec
in
jg
adc
ja
push
movs
sub
mov
jmp
push
cmp
add
bound
pop
call
rcl
mov
xor
cmp
not
dec
bound
sbb
xor
enter
cmc
dec
and
jmp
nop
jne
inc
push
fidiv
fs
xchg
loop
stc
fidiv
addr16
cmps
push
enter
push
jmp
test
jecxz
aad
mov
mov
aam
push
cmp
loop
xchg
outs
mov
lods
cmps
aas
stos
cmp
mov
cli
cmp
pop
or
lea
xchg
fisttp
bound
jmp
(bad)
call
(bad)
mov
jo
sbb
add
lods
je
stos
arpl
dec
lahf
pop
dec
dec
not
jg
or
sub
cwde
cmc
cwde
test
cwde
jbe
push
fdiv
cmp
pop
daa
gs
mov
mov
ja
inc
mov
push
sbb
movs
jns
retf
nop
repnz
dec
pop
loope
sub
shl
lods
ror
inc
jns
cmp
pop
mov
or
in
shr
out
and
outs
mov
cmp
push
inc
clc
mov
sub
mov
pop
call
jnp
arpl
pop
(bad)
jmp
cmp
jecxz
add
pop
loope
lahf
xchg
rol
repnz
mov
add
ja
push
pop
push
mov
pusha
pop
jb
scas
jne
nop
push
jp
xchg
std
push
xchg
ins
je
jmp
xor
lods
jns
les
in
daa
and
mov
loope
push
cmp
loop
ss
mov
out
iret
fadd
mov
mov
dec
sub
pop
outs
cmp
ja
xchg
ret
inc
push
sub
inc
and
(bad)
pop
js
sbb
mov
cmp
popf
jecxz
sbb
and
dec
cdq
adc
mov
or
outs
mov
dec
xor
jecxz
xor
(bad)
not
bound
pop
mov
xlat
xchg
pop
pop
inc
cli
pop
and
test
ins
rol
popf
mov
int3
xchg
ss
sub
xor
aam
hlt
pop
repz
xor
rol
shl
(bad)
cmp
jb
iret
push
inc
jge
imul
cld
xchg
js
sbb
loopne
imul
cmps
inc
pop
cmp
data16
push
popa
es
mov
inc
bound
scas
jne
out
(bad)
mov
dec
jb
cmps
das
jnp
adc
rcr
(bad)
es
in
and
cld
in
stos
push
ror
push
sbb
pop
jb
mov
or
add
addr16
mov
gs
dec
push
mov
(bad)
cmp
jl
repz
mov
adc
and
push
mov
cmc
jnp
in
popf
mov
lods
in
cmps
popa
nop
cld
dec
adc
add
(bad)
aam
pop
fiadd
lea
cmp
mov
mov
pop
call
jnp
arpl
mov
ins
jg
add
and
mov
scas
mov
sub
movs
adc
dec
bound
call
div
in
dec
sbb
pop
inc
cli
div
mov
add
(bad)
or
(bad)
daa
inc
dec
sbb
ins
imul
out
jl
and
adc
xchg
aad
iret
mov
popa
and
push
mov
dec
in
mov
sub
adc
inc
ret
push
mov
lods
movs
ror
jb
push
inc
xor
mov
gs
jmp
(bad)
bound
out
cmp
xchg
mov
sbb
loope
out
je
xchg
or
sahf
push
dec
xor
imul
push
aaa
push
mov
ret
or
xchg
jne
xor
xor
ret
mov
bound
sub
leave
(bad)
mov
add
bound
and
cld
inc
and
bound
cmc
(bad)
in
into
add
iret
push
(bad)
adc
std
lahf
in
xor
fwait
cmp
mov
xor
pop
call
outs
jge
call
cmp
js
lahf
(bad)
sub
sub
icebp
xchg
push
pop
and
pushf
out
cmp
cmp
es
loopne
lahf
push
mov
popa
add
cmp
pop
in
gs
mov
mov
fld
jle
xor
pop
mov
mov
pop
jns
or
rol
mov
inc
mov
xor
mov
fild
mov
mov
mov
pop
or
test
das
mov
push
inc
sub
cdq
ins
sahf
dec
rcr
sbb
pop
cs
and
imul
into
pop
jmp
(bad)
into
ror
jbe
sti
mov
mov
jnp
lods
xor
fsub
sti
ss
les
enter
dec
jmp
pop
scas
leave
into
pop
rol
or
or
push
or
test
popa
dec
pop
mov
fstp
out
jo
push
jp
sti
popa
stos
cmp
and
mov
push
mov
cmp
cmp
cmp
or
(bad)
xchg
(bad)
xor
jle
sbb
int
jne
jecxz
adc
jge
cmp
xchg
hlt
pusha
pop
adc
data16
gs
xlat
mov
mov
mov
jo
jmp
pop
leave
outs
(bad)
jl
and
in
div
leave
repz
xor
fld
dec
sbb
ss
adc
inc
ret
popa
arpl
and
push
frstor
lods
aad
push
jmp
sbb
dec
adc
inc
stc
and
push
movs
loopne
mov
psrlq
mov
sub
xor
movs
jg
push
mov
inc
jg
popf
hlt
adc
das
mov
and
dec
gs
xchg
push
icebp
sti
xchg
or
push
push
xchg
xchg
push
jns
pop
mov
mov
jo
fwait
mov
mov
add
test
pop
xor
cmc
push
mov
add
lds
lock
mov
clc
add
cmp
or
ror
retf
loop
cmp
xor
cmps
push
ret
mov
stc
cmc
out
mov
out
aam
adc
int
cwde
pop
addr16
push
int
push
cwde
add
rcr
rcl
rcl
lods
bound
out
jmp
mov
mov
fistp
jnp
push
out
mov
sbb
lock
mov
lahf
or
loopne
push
dec
test
mov
gs
mov
jecxz
xchg
cmp
(bad)
addr16
dec
sbb
fdiv
pop
add
pop
or
cmp
jbe
sub
loop
dec
fcmove
mov
pop
push
push
iret
stos
mov
mov
sar
imul
jns
neg
loope
jno
mov
stos
inc
mov
or
out
or
adc
xchg
jge
in
(bad)
sub
retf
adc
retf
stos
pop
je
sar
pop
xor
jbe
inc
stos
cmc
jmp
arpl
cmp
and
mov
sub
inc
xor
ja
mov
xchg
outs
dec
and
mov
lods
xchg
mov
gs
mov
popa
pusha
or
daa
pop
xor
cmc
or
stos
sub
outs
jbe
out
mov
cwde
in
mov
inc
add
pop
shr
call
and
cmp
gs
test
loop
and
sbb
inc
push
cdq
stc
adc
loope
push
not
test
daa
movs
add
adc
cmp
in
ja
sub
fadd
iret
and
dec
xchg
dec
imul
(bad)
(bad)
cmp
dec
sbb
sub
pop
rol
mov
sti
or
pop
test
sar
popa
pushf
int3
sahf
xchg
push
jp
in
mov
add
inc
out
outs
in
cmp
jns
out
mov
pushf
sbb
rcr
into
fnstenv
sub
rcr
rcr
int
xchg
test
je
dec
sbb
xchg
jge
inc
mov
lahf
fistp
jnp
adc
out
test
mov
pop
or
sbb
ja
in
loope
ja
mov
ret
or
xor
pop
je
xor
call
ss
sub
lds
cmp
or
test
retf
push
ja
iret
sbb
add
cmp
std
(bad)
cs
jg
ja
call
mov
nop
xchg
stos
mov
xor
ror
call
es
mov
mov
push
add
add
add
add
cmps
mov
bound
sbb
mov
mov
mov
jo
stos
jmp
add
aaa
fadd
pop
dec
iret
pop
out
mov
fwait
xor
cwde
(bad)
jle
ins
inc
ret
int
stos
shr
push
jle
inc
cs
or
imul
xor
leave
mov
repz
mov
cwde
inc
push
push
clc
push
add
mov
xor
in
add
inc
ret
jmp
ds
or
loopne
mov
jo
mov
test
xchg
aaa
ss
lahf
pop
enter
icebp
mov
neg
push
xchg
cs
movs
adc
sbb
xor
data16
arpl
movs
and
cmp
je
imul
jmp
cdq
pop
stos
outs
dec
popf
in
jns
je
je
or
popa
arpl
and
(bad)
cmp
mov
sbb
into
mov
out
in
xor
ret
aad
movs
add
jns
inc
or
jns
mov
lea
cs
add
(bad)
call
mov
shr
inc
sub
fdiv
inc
xchg
(bad)
inc
pop
jp
(bad)
lods
adc
test
mov
sub
sbb
or
lods
push
mov
cmp
enter
mov
dec
imul
push
cmp
push
nop
ins
cmps
xor
jg
xchg
pop
xor
movs
xchg
outs
mov
pop
jns
or
adc
jle
dec
jb
into
mov
rep
data16
mov
mov
adc
add
iret
xchg
mov
sub
movs
push
inc
sar
sub
mov
aam
cs
sbb
jmp
xchg
aaa
jle
(bad)
mov
arpl
cmp
push
push
ins
pop
or
arpl
mov
cmps
sbb
add
ja
mov
jo
neg
mov
shr
push
jnp
sahf
jle
xchg
movs
adc
inc
push
push
or
test
add
push
and
aas
or
pop
aad
fimul
loope
ins
(bad)
enter
add
in
mov
or
ins
push
iret
pop
xor
stos
aaa
push
inc
push
xor
cmp
rcr
rcl
mov
xchg
das
jp
push
mov
shr
(bad)
pop
das
(bad)
pop
icebp
xchg
pop
jmp
aas
lea
pop
es
and
rol
call
pop
dec
dec
jmp
adc
mov
imul
inc
cli
add
mov
xor
clc
pop
rol
mov
or
mov
and
retf
test
mov
inc
(bad)
pop
xor
les
inc
std
inc
add
cs
mov
mov
jns
movs
cwde
cs
pop
push
stc
stc
pop
ror
mov
mov
mov
repnz
push
(bad)
outs
xchg
popa
cmp
mov
pop
cmp
push
ins
pusha
bound
in
sub
cwde
neg
in
xchg
scas
push
mov
out
xlat
xchg
pop
bound
pop
xor
std
adc
sub
mov
pop
push
xor
sub
ret
stos
add
js
mov
ror
retf
jle
cmp
into
pop
test
aaa
inc
mov
sbb
inc
add
pop
or
outs
mov
push
mov
mov
neg
inc
cmps
inc
add
ins
call
sub
rol
xor
or
cmp
push
das
icebp
in
add
xor
sub
mov
(bad)
int
or
add
imul
retf
dec
cli
pop
mov
inc
jnp
cmp
mov
sbb
ss
and
inc
shr
bound
loopne
(bad)
ror
retf
mov
inc
mov
fmulp
rol
enter
sbb
outs
cli
cmp
les
adc
cmps
inc
sub
cdq
ins
sbb
pop
jge
mov
jo
mov
xchg
test
jl
push
sub
icebp
pushw
ins
jg
push
push
xchg
xchg
js
or
xor
sbb
xor
(bad)
adc
movs
push
dec
test
mov
xchg
repz
sub
fstp
inc
mov
mov
sub
xchg
mov
call
sub
cmc
jne
jmp
push
repnz
retf
push
lock
sar
cld
mov
cmp
outs
push
add
cwde
cs
enter
imul
xchg
(bad)
xor
inc
call
sub
imul
(bad)
jg
add
and
mov
outs
(bad)
pop
fild
stc
jl
or
fstp
cld
dec
mov
mov
retf
test
stc
pusha
pop
gs
sbb
(bad)
and
test
mov
aaa
and
mov
jmp
dec
mov
dec
sub
inc
scas
sbb
mov
je
test
push
adc
adc
inc
dec
in
inc
xchg
adc
adc
sub
ja
push
cmp
sbb
jmp
imul
inc
ds
bound
sahf
dec
rcl
rol
repz
adc
lds
xchg
ds
movs
aam
das
icebp
leave
stos
jnp
fcomp
pushf
adc
daa
jae
pop
xor
pop
jecxz
rcr
lea
fild
add
sbb
shl
shl
push
retf
out
addr16
into
add
shl
out
jmp
lock
ss
dec
jl
add
repz
push
fdiv
jmp
mov
test
cli
cmp
cld
dec
add
inc
out
outs
fwait
int3
ret
jno
sbb
int3
int
pushf
pop
and
shl
inc
ins
rcr
sub
sahf
mov
lock
adc
inc
scas
and
jae
xchg
pop
(bad)
xchg
mov
sbb
push
pushf
xchg
mov
add
sbb
sbb
jmp
daa
punpcklbw
cmps
arpl
dec
test
bound
jmp
int
push
jecxz
ss
jns
and
cmp
movs
aam
push
les
dec
inc
mov
fmulp
push
jp
sti
pusha
loope
inc
mov
scas
or
outs
in
cmp
outs
je
lods
xor
and
cwde
imul
inc
sub
xchg
ins
push
rcr
sar
cmp
adc
jmp
cmp
jg
fistp
jnp
adc
mov
cwde
and
dec
je
sbb
adc
ja
mov
cli
repz
pusha
pop
jb
fbstp
pop
outs
aad
imul
xor
xor
mov
mov
ss
cmp
test
ret
pop
jns
or
loope
and
pop
test
pop
in
mov
adc
or
(bad)
pop
or
lea
shr
pop
push
out
mov
xor
cmc
jg
pop
sbb
int
call
and
fdiv
mov
bound
loop
mov
cmps
pop
and
or
dec
iret
pop
out
mov
and
test
mov
(bad)
push
jg
mov
clc
xchg
mov
lods
push
cmc
pop
lds
fnstsw
mov
mov
movs
retf
out
mov
add
mov
adc
jbe
push
or
imul
xchg
loope
mov
retf
dec
jg
fimul
dec
in
cmp
xchg
repnz
(bad)
mov
arpl
push
setns
sti
dec
sub
ins
pop
pop
or
adc
ja
push
pop
inc
push
pushf
mov
sbb
dec
xchg
bound
and
sbb
lds
dec
sbb
imul
sub
inc
mov
out
pop
repz
mov
inc
outs
sbb
push
jno
jmp
dec
push
sti
sbb
cmp
shr
out
outs
js
inc
fbld
cmps
push
xor
popa
cmp
cwde
mov
push
loope
sub
inc
jecxz
bound
jge
xor
jo
test
(bad)
pop
adc
ficomp
and
add
add
pushw
stc
or
xchg
xor
jl
xor
or
in
cmc
aad
mul
dec
sti
mov
jle
xchg
jne
mov
test
retf
cmp
pop
fist
lods
xchg
stos
mov
pop
repz
push
push
popa
pushf
int3
sahf
xchg
inc
clc
lods
in
xor
retf
push
lds
add
and
mov
xor
cwde
fs
enter
push
push
cmps
dec
xor
push
call
(bad)
push
cmp
icebp
xor
cmp
push
int3
xlat
pop
das
out
dec
ins
cmc
popf
push
mov
sub
or
sbb
lods
(bad)
not
sti
mov
das
dec
xchg
jne
or
jae
mov
xor
jg
inc
adc
mov
push
xchg
lods
jb
cmc
pop
repz
xor
push
sub
jbe
mov
ret
pop
xor
retf
push
pop
pop
mov
and
ss
mov
cwde
imul
xchg
scas
push
xchg
(bad)
lock
aad
ss
xor
adc
mov
test
add
xchg
cmps
fcmovne
xchg
jl
or
movs
fild
mov
jecxz
mov
outs
push
ret
enter
out
daa
outs
inc
xchg
jne
pop
scas
int
jecxz
xchg
sbb
mov
mov
xor
pop
add
xor
or
popa
push
xchg
and
repnz
in
cld
sub
aas
ret
aad
mov
loop
aam
mov
cmp
imul
pop
inc
cmps
rcl
xchg
add
rcl
mov
(bad)
fdiv
lods
cmp
cmp
mov
push
dec
arpl
popf
push
pushf
scas
adc
jg
sbb
adc
ja
add
lahf
dec
in
outs
push
gs
xchg
mov
into
push
mov
cs
js
arpl
test
jle
push
inc
mov
repz
aam
fs
retf
sti
push
cmp
mov
jl
lods
in
retf
and
inc
js
(bad)
and
outs
in
sbb
pop
les
lods
daa
mov
or
cmp
and
xor
sub
jle
outs
retf
lds
xchg
mov
std
and
icebp
adc
popf
push
loopne
cwde
and
movs
(bad)
jb
sbb
mov
nop
dec
cmps
dec
test
pop
jb
xchg
jne
neg
es
add
mov
pop
xor
push
clc
fbld
xor
and
pop
push
push
popa
pushf
int3
sahf
push
cdq
jno
into
ror
xor
retf
push
inc
pop
mov
mov
add
cmp
xor
cwde
fs
enter
push
push
daa
push
xor
push
call
lods
rcr
adc
pusha
aad
inc
pushf
jge
dec
push
pop
push
sub
mov
or
pushf
out
je
in
pop
or
xchg
or
neg
shl
gs
xchg
aas
in
(bad)
retf
mov
addr16
cs
js
bound
push
clc
fist
pop
xchg
test
pop
mov
(bad)
and
in
pop
out
mov
scas
sti
test
cs
std
inc
sbb
retf
sbb
in
mul
jle
cmp
pop
push
shl
in
xchg
(bad)
xor
pop
call
ror
xchg
inc
(bad)
lods
jle
or
xor
outs
xlat
fistp
dec
gs
push
repz
test
js
loop
mov
pop
mov
dec
push
enter
jo
push
gs
mov
mov
dec
xchg
push
sahf
fwait
add
push
push
jb
fadd
push
add
js
or
cs
dec
(bad)
xor
ret
fld
inc
shl
dec
mov
adc
aam
repnz
movs
xor
dec
rcl
jl
stc
pop
inc
arpl
cmp
int3
pop
js
sbb
xor
or
jmp
xchg
pop
das
icebp
lods
nop
fisttp
or
sub
jno
or
mov
stc
pop
aaa
fdiv
call
mov
popa
std
test
test
inc
dec
rol
clc
xchg
cld
les
push
inc
lods
int
cmc
pop
test
sub
rol
inc
push
cmp
jo
push
mov
cmp
and
mov
lea
dec
cmp
cwde
aad
leave
enter
test
and
push
push
call
cs
lds
xchg
shr
fist
and
pushw
ins
aas
or
xor
pop
shl
xchg
psllq
imul
clc
test
iret
inc
pusha
pop
jno
scas
psrlw
and
jnp
ins
adc
jmp
cmp
cs
ret
push
jg
mov
mov
into
push
jno
jmp
lock
sar
sbb
mov
bound
and
mov
loope
mov
cs
ins
push
sar
push
(bad)
(bad)
xchg
xor
scas
mov
dec
sahf
(bad)
fsub
jb
ins
cmc
popf
push
(bad)
ins
sub
sub
ja
(bad)
jl
and
loop
dec
pusha
pop
push
inc
xchg
jne
dec
ds
std
push
nop
ins
dec
(bad)
jmp
cmp
push
clc
pop
rol
mov
pop
repz
push
test
(bad)
dec
mov
cmp
stc
fidiv
fst
jp
xor
mov
call
jno
sbb
loopne
xor
enter
cmps
inc
sub
xchg
ins
push
adc
(bad)
xchg
aas
pusha
mov
lds
xchg
inc
imul
stos
dec
push
retf
xchg
pusha
ins
push
push
xchg
xchg
push
sub
pop
push
mov
je
mov
cmp
sar
push
sbb
stos
jb
mov
cli
jne
int
(bad)
cmp
fld
dec
shl
sbb
jb
lods
clc
leave
loopne
ret
xor
loop
jno
leave
mov
sti
lods
data16
mov
mov
out
jns
movs
or
(bad)
das
push
inc
cmps
into
ficom
push
retf
inc
adc
or
lods
mov
xor
loope
jge
cmp
pop
dec
and
retf
dec
bound
jnp
lods
xor
cmp
pop
sbb
std
addr16
xchg
mov
not
pop
jmp
stc
xchg
ficomp
imul
jmp
enter
push
lds
scas
cli
push
(bad)
push
test
ins
ds
xchg
add
loop
in
pop
cdq
lock
push
jnp
or
sub
cwde
jns
in
xchg
mov
es
sub
stos
push
inc
or
(bad)
(bad)
and
in
imul
push
mov
xchg
jge
mov
pop
sbb
popf
stc
mov
sub
into
enter
cwde
cmp
jmp
sub
sbb
push
(bad)
push
jle
outs
pop
cmp
add
out
clc
jo
xchg
sbb
movs
adc
and
and
xchg
mov
mov
push
mov
push
ins
jl
fs
mov
inc
into
sbb
pusha
movs
and
loop
int
push
mov
cdq
int
inc
adc
or
lods
mov
sub
mov
xchg
and
jge
cmp
pop
dec
and
retf
mov
cmp
xor
jecxz
inc
stos
sbb
std
addr16
xchg
mov
not
pop
jmp
retf
(bad)
sub
mov
and
iret
mul
and
ret
nop
loopne
cmp
int
hlt
mov
or
popa
out
les
sub
sbb
ret
push
cmp
mov
mov
repz
xor
xchg
rcr
aam
cmps
ss
scas
rcr
adc
(bad)
or
jnp
mov
push
das
push
enter
inc
inc
xchg
pop
(bad)
mov
xchg
bound
add
add
call
or
jne
stc
fimul
sub
mov
fstp
mov
dec
sub
fldcw
dec
icebp
int3
dec
(bad)
and
dec
sbb
lock
ss
jns
push
pop
cld
push
push
and
or
hlt
lods
(bad)
jno
mov
pop
lock
sahf
dec
mov
mov
sub
dec
rcl
mov
jbe
sbb
addr16
jb
loope
js
mov
ins
push
rol
(bad)
ins
jge
into
mov
and
mov
cmp
mov
xor
mov
leave
sbb
fs
popf
hlt
arpl
push
es
push
jecxz
nop
add
dec
call
test
retf
jmp
ins
jo
sbb
sub
xchg
hlt
lods
retf
stos
cmc
pop
jns
or
sub
sti
adc
inc
add
lods
in
jp
xor
mov
aaa
cmc
stc
push
mov
add
cwde
imul
push
inc
mov
jge
xor
pop
call
rol
vucomisd
test
xchg
(bad)
ds
push
pop
(bad)
pop
movs
bnd
or
bound
mov
sbb
sbb
stos
and
not
bound
call
retf
ja
addr16
mov
xor
js
das
cvtps2pd
mov
inc
cmc
popf
add
sub
rol
bound
out
push
dec
mov
enter
sub
outs
in
cmp
jns
out
mov
(bad)
movs
aad
xchg
mov
dec
sub
inc
and
jb
sbb
push
addr16
cmp
pop
popa
call
push
(bad)
jb
pop
and
cmps
ror
fmul
or
into
fnstcw
call
jecxz
nop
push
neg
xor
cmp
pop
mov
call
movs
daa
xchg
add
(bad)
dec
jmp
jge
push
push
loope
and
loope
mov
cmp
push
and
push
sub
mov
jno
mov
pop
lock
inc
cmps
ficomp
or
push
out
aas
cmps
push
and
ds
out
push
jo
enter
xor
(bad)
mov
jp
call
outs
jge
cli
fist
lds
call
popa
and
(bad)
outs
push
ins
cmc
push
mov
fstp
pop
pop
es
hlt
xchg
push
idiv
mov
pusha
pop
push
xchg
jne
int
jge
xchg
jmp
hlt
sahf
xor
clc
outs
mov
rcr
cmc
pop
pop
dec
mov
rol
cmps
aaa
xchg
sub
mov
mov
mov
xor
rol
in
mov
repnz
push
outs
xor
adc
add
movs
pop
jle
jmp
mov
dec
jp
call
fld
(bad)
scas
push
mov
aas
push
inc
lahf
pop
and
push
cdq
push
sub
fisubr
jnp
adc
int
or
neg
shl
jb
into
jne
pop
outs
in
shr
test
jg
mov
clc
xchg
jl
mov
mov
mov
fidivr
(bad)
(bad)
jno
fld
data16
cmp
std
add
add
js
loopne
jns
push
mov
xchg
into
imul
inc
cli
cmps
inc
sub
mov
movs
pop
lock
cli
xor
arpl
mov
lds
xchg
imul
fmul
cmps
pushw
sbb
push
push
and
into
stos
pop
and
std
ret
enter
out
xlat
pop
xor
pop
shl
push
mov
add
arpl
mov
fdiv
xor
aam
scas
pop
repz
xchg
sub
dec
mov
jmp
sub
mov
mov
sti
in
xor
adc
repz
aas
arpl
rcr
aam
or
push
scas
xor
mov
pop
call
mov
(bad)
popf
mov
test
loop
sub
pop
fist
das
jnp
adc
out
nop
cmp
pushf
imul
sub
mov
call
lds
(bad)
into
inc
push
push
imul
mov
add
pop
pop
jns
push
test
(bad)
mov
popa
push
sahf
cs
cmp
and
add
addr16
add
jmp
enter
pop
out
outs
in
cmp
jns
or
cwde
imul
inc
pop
mov
cmp
lods
sti
in
jne
enter
sar
add
mov
jge
mov
pop
pop
dec
gs
or
loope
out
je
and
pop
es
loop
and
in
push
ss
or
dec
pop
pop
mov
adc
dec
xchg
add
iret
inc
jnp
ins
shl
xlat
out
mov
ss
xchg
into
out
ret
adc
ror
daa
(bad)
cmp
neg
aaa
sbb
mov
nop
dec
mov
push
push
inc
mov
cmp
outs
les
lods
xor
ins
loopne
mov
push
inc
push
jnp
(bad)
cmc
call
lock
fdiv
or
test
mov
(bad)
pop
cmp
push
ins
pusha
inc
or
aaa
sub
xor
cld
sahf
push
inc
xor
nop
jmp
xchg
dec
dec
pop
jno
gs
cmp
cli
(bad)
rcr
jne
std
test
sbb
jmp
mov
ss
mov
add
inc
inc
imul
push
and
mov
(bad)
push
mov
loop
xor
jecxz
mulps
rcl
mov
jmp
inc
xor
lods
retf
movs
xchg
mov
ret
pop
push
and
lods
jmp
jnp
xchg
ins
push
pop
(bad)
mov
sbb
ret
fisubr
scas
lock
and
rol
out
push
ins
cmc
xor
pop
stc
and
pop
mov
ins
xchg
js
push
inc
ja
mov
fstp
mov
dec
sub
fldcw
push
xchg
ins
frstor
jg
xor
cmp
mov
push
inc
mov
repz
xchg
rol
jbe
fsub
inc
xchg
jmp
push
adc
xor
xor
adc
loop
jns
bound
pop
pand
xor
sbb
inc
sub
mov
pop
call
rol
pusha
push
(bad)
xchg
iret
das
pushf
jge
dec
adc
das
icebp
adc
popf
push
loopne
cwde
and
movs
lods
jmp
nop
dec
and
adc
or
mov
ret
ret
and
pop
lahf
jne
clc
scas
dec
xchg
add
cmp
inc
lock
ss
or
test
pop
mov
sar
jbe
mov
(bad)
cmp
(bad)
mov
daa
sbb
movs
popa
inc
mov
neg
pop
mov
outs
jle
nop
imul
inc
ins
cli
inc
sub
jg
gs
dec
mov
fwait
popf
js
mov
xchg
mov
xchg
test
jne
dec
mov
test
pop
das
mov
mov
sub
sub
or
xchg
aad
and
mov
push
mov
ja
fs
xchg
jne
or
fisub
inc
mov
imul
fdivrp
sub
xor
loopne
and
xor
popf
mov
mov
dec
mov
mov
fs
cli
mov
arpl
push
cdq
aad
enter
mov
adc
clc
lods
jmp
mov
(bad)
xchg
add
or
push
xor
add
pop
or
mov
hlt
movs
push
mov
sbb
mov
nop
pop
or
fstp
jle
jne
rcl
std
sub
inc
xor
outs
outs
jne
pop
mov
clc
adc
inc
push
adc
or
xchg
int
shl
fsub
dec
cmps
nop
lods
jp
into
mov
pop
mov
xor
sbb
add
js
in
aam
sbb
ror
loopne
and
enter
mov
jg
xor
pop
call
je
(bad)
(bad)
cmp
outs
dec
lahf
sub
repz
sti
push
cmp
jae
pop
add
add
sub
jb
and
popf
or
mov
fisub
cli
pop
and
shl
aaa
dec
(bad)
ja
dec
mov
ss
pop
sub
push
int3
in
mov
in
dec
and
mov
jmp
cmp
mov
jne
push
shr
dec
cwde
daa
jle
jl
mov
xchg
mov
xor
movs
(bad)
stos
aaa
push
inc
push
cmps
into
ficom
inc
(bad)
ins
push
adc
into
mov
addr16
adc
jmp
mov
mov
fistp
mov
popf
xchg
imul
jnp
pop
ins
push
adc
in
cld
aas
iret
push
push
jge
mov
xchg
pop
shr
pop
and
test
sbb
push
adc
mov
push
xchg
loop
scas
pop
push
and
add
scas
in
adc
dec
ins
stos
cmp
std
sbb
add
outs
addr16
aam
jg
outs
xor
xor
xchg
imul
or
cmps
inc
xchg
push
and
ins
push
pop
(bad)
lds
inc
pop
js
outs
sahf
sub
mov
mov
repz
data16
test
cmp
jl
mov
in
cwde
neg
sbb
ja
cdq
push
call
mov
pop
out
mov
and
push
nop
ins
(bad)
outs
jmp
int
and
jmp
inc
mov
mov
pop
jns
push
test
(bad)
nop
mov
jmp
add
xor
dec
stos
adc
push
ret
jp
sbb
dec
inc
xchg
aam
dec
jmp
inc
sub
mov
lea
fnstcw
or
adc
inc
dec
jmp
sub
fist
cmp
ds
ins
and
xchg
gs
add
inc
ficom
out
aaa
xchg
mov
das
inc
lahf
jne
pop
scas
cmp
addr16
ds
js
mov
das
xor
jmp
or
and
sub
(bad)
iret
sbb
inc
xchg
in
jge
push
int
xor
xchg
push
sbb
(bad)
ja
les
xor
cwde
mov
(bad)
mov
mov
pop
call
cmp
mov
xchg
fist
popa
and
ror
cdq
jns
jg
or
sbb
daa
and
fisttp
add
fdivr
pop
pop
sub
gs
arpl
mov
and
jo
sbb
jmp
int
inc
mov
adc
loop
rcr
inc
aas
dec
int3
and
fsubp
inc
jge
adc
stos
mov
adc
jns
out
mov
test
fsub
add
or
call
push
sbb
xor
push
(bad)
jb
jmp
cmp
sbb
scas
cmp
push
ins
pusha
jle
push
xchg
xchg
mov
sbb
add
ja
leave
retf
lods
enter
xor
pop
gs
bound
pop
and
(bad)
cmp
xor
or
mov
pop
test
sbb
and
cmp
popa
sbb
lahf
stos
mov
mov
js
jmp
or
(bad)
(bad)
xor
dec
(bad)
mov
xor
ins
call
rol
cmp
mov
xchg
cmp
jge
in
mov
icebp
in
icebp
jnp
stos
push
pushf
jb
ja
or
test
int
or
pop
ror
mov
xchg
pop
inc
inc
cli
pop
xor
std
test
js
cmps
mov
js
and
pop
dec
inc
cs
jg
in
jl
shl
scas
ins
loop
xchg
adc
movs
jbe
enter
add
outs
js
inc
call
xor
subps
xor
mov
sub
cdq
ins
std
add
push
cmp
ror
pop
jne
jno
adc
jge
xor
cmp
push
das
icebp
in
add
adc
sub
mov
icebp
jl
adc
ja
inc
cmc
stc
aaa
push
pop
in
xchg
dec
jl
push
mov
xchg
add
rol
add
pop
push
lods
adc
xchg
fmul
mov
into
push
mov
loop
jb
mov
test
pop
sar
in
inc
xchg
push
fcom
aam
setge
outs
fwait
xchg
mov
adc
shl
call
xor
push
call
rol
popa
push
(bad)
xchg
iret
das
pushf
jge
dec
adc
das
icebp
adc
popf
push
or
movs
es
adc
pop
nop
sbb
mov
cmps
in
dec
pusha
and
pop
lahf
jne
clc
scas
add
es
or
or
mov
inc
int3
fdivr
pop
mov
pop
xchg
mov
jb
cmp
lods
mov
daa
mov
jb
adc
sub
push
xor
jns
loopne
cs
fbld
inc
cmps
rcl
(bad)
and
in
(bad)
call
jo
jl
pop
fdivr
xchg
test
jne
dec
mov
fistp
mov
mov
sub
add
or
in
cld
cmp
push
push
jge
mov
add
xchg
jne
add
std
fsubr
test
js
pop
fwait
add
mov
xor
ret
stos
add
js
add
cwde
mov
jbe
addr16
jns
jb
jne
mov
cmps
xchg
adc
in
mov
dec
adc
jae
jbe
mov
pop
sub
cmps
inc
ds
push
cdq
ins
pop
dec
lods
pop
ins
(bad)
push
mov
sbb
push
cmp
jb
sbb
dec
jmp
cmp
aaa
xchg
cmps
and
and
loop
sbb
test
test
stc
fbld
mov
clc
fidiv
fld
in
in
push
inc
push
ret
ss
sub
inc
cmp
mov
mov
sar
jbe
or
loop
out
xor
mov
inc
cmp
outs
in
mov
mov
pop
xchg
mov
iret
loop
and
push
cmc
inc
push
pop
repnz
out
push
mov
xchg
shl
and
sbb
pop
popf
xchg
imul
jnp
dec
mov
sbb
sub
sti
out
in
pusha
pop
push
jge
retf
push
es
js
mov
mov
push
xchg
sub
and
add
in
bound
push
inc
ds
in
xor
sub
adc
lahf
clc
scas
xor
mov
sub
in
cmp
data16
push
popa
and
jmp
cmp
mov
xchg
sub
add
mov
ror
pop
mov
arpl
and
movs
fstp
(bad)
adc
sub
pop
and
sar
out
dec
xchg
(bad)
stc
adc
es
or
adc
xchg
mov
pop
fld
mov
mov
mov
and
outs
push
retf
push
dec
cmp
into
mov
into
in
xor
ret
aad
mov
std
out
and
mov
xor
out
push
jo
enter
xor
daa
gs
call
and
jo
std
push
loop
xchg
adc
add
xchg
rcl
icebp
data16
gs
push
ins
add
pushf
loop
imul
in
cmp
aaa
push
inc
repz
pop
gs
push
repnz
and
test
(bad)
in
rol
clc
xchg
cld
les
push
inc
lods
(bad)
hlt
cmc
pop
pop
popa
xchg
les
push
rol
(bad)
mov
lock
inc
daa
mov
mov
push
not
in
sbb
push
in
sbb
cwde
les
scas
inc
sub
lea
leave
stos
or
jne
dec
(bad)
jmp
sub
(bad)
cmps
fisttp
loope
(bad)
ins
sub
sti
and
loop
repz
add
jmp
outs
jge
jae
lahf
dec
and
sbb
retf
mov
outs
jnp
xor
outs
into
jle
mov
push
xchg
xor
aam
xchg
pop
repz
push
cmp
shl
test
jno
test
mov
adc
mov
jns
out
mov
pushf
fiadd
(bad)
xor
cs
in
stos
or
call
cmp
cmp
push
das
icebp
sub
fs
popf
or
inc
dec
or
sbb
cmp
and
aad
dec
pusha
pop
inc
inc
xchg
jne
sub
fldcw
scas
outs
jnp
ficomp
js
sbb
pop
clc
xchg
fdiv
xor
aam
not
repz
push
sub
xor
mov
ins
jbe
cld
mov
lods
xor
mov
sbb
add
iret
lea
outs
cmp
push
enter
movs
rcl
mov
mov
jb
mov
adc
imul
inc
pop
das
icebp
data16
pop
jmp
jnp
data16
mov
pushf
cmp
adc
ja
push
ret
aad
cmp
pop
in
xor
stc
nop
fidiv
xchg
(bad)
(bad)
outs
jp
xor
sub
imul
test
sbb
mov
mov
mov
into
add
jb
jne
mov
in
mov
adc
mov
repz
les
pop
loopne
sbb
aaa
dec
and
fstp
xchg
retf
push
lods
push
or
cmc
je
aad
scas
or
sahf
imul
jmp
scas
cmp
pop
sbb
stos
arpl
aas
and
jo
push
or
push
inc
bound
gs
bound
push
or
into
rol
jg
out
pop
ins
inc
sahf
ss
jns
sub
pusha
call
fsubr
cmps
push
cmp
into
add
fwait
iret
push
enter
stos
dec
adc
ss
mov
cwde
les
xchg
sub
sub
jb
sahf
mov
xchg
mov
nop
daa
cdq
test
cmp
mov
xchg
push
daa
icebp
pushw
out
mov
(bad)
sbb
push
or
movs
adc
(bad)
(bad)
push
aaa
fdivr
pop
pop
sub
gs
loope
jmp
xchg
push
(bad)
lds
dec
sbb
sub
xchg
or
sub
cmp
dec
call
adc
sub
adc
lods
xor
popf
and
imul
pop
inc
cmps
rcl
xchg
pop
cmp
add
add
mov
addr16
adc
pushf
inc
mov
jnp
xchg
pop
fbld
shr
cmc
popf
loope
jmp
not
or
mov
add
gs
xchg
dec
imul
xor
cmc
(bad)
pop
mov
mov
pop
xchg
mov
pop
repz
xor
popa
pop
sbb
loop
jno
cmp
xor
pop
dec
mov
mov
(bad)
jns
push
xchg
pop
outs
xor
outs
cmp
or
and
mov
(bad)
lea
bound
xchg
test
mov
cld
xlat
pop
das
out
outs
ins
cmc
popf
push
mov
cmp
or
sbb
dec
clc
push
push
jge
mov
xchg
dec
sbb
retf
mov
outs
jnp
es
mov
push
xchg
lods
pushf
ror
call
jns
mov
jbe
ss
cmp
inc
adc
aad
mov
std
out
movs
jnp
push
mov
xor
emms
enter
lods
mov
ret
push
mov
inc
or
outs
das
push
xchg
add
hlt
dec
and
lock
in
icebp
jnp
neg
pushf
adc
sub
ror
loop
dec
dec
cdq
movs
adc
push
add
mov
leave
dec
repnz
mov
xor
xchg
push
xchg
les
mov
ret
loop
mov
sub
jmp
pop
dec
addr16
rol
sbb
sahf
jmp
rcr
and
mov
xor
adc
stos
mov
pop
mov
imul
sub
gs
add
lods
ins
out
mov
add
mov
mov
mov
pop
pop
dec
gs
out
popf
xchg
imul
jnp
das
xchg
cli
jmp
fcom
push
(bad)
jl
and
pop
out
mov
and
jmp
jnp
inc
pop
mov
out
push
stc
out
xor
sub
imul
(bad)
std
ffreep
mov
icebp
mov
inc
mov
aaa
cmc
stc
jno
mov
jns
jmp
xor
cdq
and
imul
push
scas
in
rcl
cmp
xor
(bad)
push
fcomp
cmp
loopne
push
jno
jmp
(bad)
sbb
xchg
mov
mov
jnp
mov
pop
jmp
loopne
jnp
stc
clc
movs
lods
bnd
and
retf
mov
xor
movs
sbb
jl
jno
shl
push
lahf
sub
aam
xchg
mov
or
cmp
dec
mov
cdq
pop
push
and
jecxz
jp
inc
push
test
mov
ss
aad
sbb
repz
or
push
cwde
cs
fistp
mov
push
enter
sub
fisub
stos
(bad)
jmp
push
jb
enter
and
cdq
push
and
ficom
add
jmp
int
push
neg
or
cmp
pop
xchg
gs
xchg
inc
adc
mov
in
je
mov
cmp
jp
adc
pusha
jmp
les
xchg
push
call
je
pop
dec
clc
mov
mov
mov
sbb
pop
in
adc
xchg
imul
fdivr
fidiv
pop
push
pop
cwde
xor
cli
lea
out
push
adc
imul
enter
data16
push
or
or
ror
pushf
loop
jo
packuswb
sar
ror
cmp
div
xchg
push
lock
jp
inc
shr
jb
and
and
add
xor
and
loop
add
retf
out
popa
mov
add
inc
mov
retf
mov
jnp
add
lods
mov
cwde
cs
dec
cmps
into
add
dec
push
(bad)
mov
cli
popa
pushf
ret
scas
jmp
push
dec
lahf
leave
and
movs
push
jno
sbb
popf
push
shl
inc
cld
movs
mov
lahf
or
ja
adc
fadd
iret
out
dec
pusha
pop
out
mov
jne
fldcw
push
mov
(bad)
(bad)
and
dec
sbb
sub
xor
mov
popa
push
pop
xchg
int
dec
inc
retf
pop
adc
mov
arpl
inc
in
mov
adc
cmp
outs
sbb
lods
xor
(bad)
cs
(bad)
and
inc
mov
jge
sub
(bad)
xchg
xor
sub
mov
(bad)
xor
dec
lahf
pop
push
sub
movs
push
jno
ins
cmc
popf
push
mov
aad
sub
lahf
fnstsw
or
sub
fs
xchg
add
push
aaa
out
push
push
jnp
rsqrtps
ins
shl
sbb
mov
mov
repz
xor
adc
sub
aaa
push
retfw
mov
in
nop
adc
or
sbb
xor
test
ja
loope
fucomip
push
inc
cmps
xor
jge
call
sbb
int
and
pop
sbb
jbe
xchg
mov
cdq
jo
out
out
fist
pop
mov
sbb
mov
sar
jl
add
add
dec
shl
pusha
xlat
dec
sbb
retf
mov
test
mov
enter
push
push
in
inc
inc
cmp
int
clc
mov
or
sahf
jmp
jle
mov
push
aaa
add
aaa
cmc
stc
jno
mov
add
xchg
adc
inc
dec
jmp
retf
push
pop
call
mov
sbb
pusha
retf
xchg
push
xchg
jge
rcl
and
push
or
xor
jo
pop
adc
mul
ret
fadd
fisub
xor
pop
imul
jmp
shl
jns
xor
aam
test
repz
xchg
and
rcr
fsub
iret
adc
xor
into
mov
push
fwait
rcr
push
xchg
movs
outs
xchg
inc
outs
addr16
ret
sbb
loopne
dec
bound
pop
scas
mov
ret
loopne
dec
scas
mov
or
popf
je
mov
aas
test
lahf
pop
test
popa
stc
out
loope
lahf
cwde
push
rol
mov
sub
jno
fsubp
dec
inc
lods
or
and
fistp
in
xchg
dec
mov
test
xor
in
mov
iret
push
add
test
xor
add
add
lock
xor
adc
repnz
lock
mov
adc
fs
cli
xchg
mov
sub
aam
dec
or
idiv
xor
inc
pop
mov
test
ret
mov
mov
push
jg
xchg
xchg
mov
test
mov
icebp
adc
imul
imul
jnp
daa
movs
push
loop
jp
fsubp
adc
xor
retf
mov
out
xlat
dec
sbb
frstor
stc
inc
into
arpl
pop
cmc
into
test
lods
hlt
push
mov
add
and
jmp
adc
push
xor
out
push
sub
in
inc
jle
ins
adc
ud2
xor
add
rcr
imul
inc
mov
les
cdq
ins
sbb
pop
inc
(bad)
sub
fiadd
xchg
stc
stos
ret
sbb
mov
out
lods
jecxz
pop
data16
gs
xchg
push
sbb
push
jmp
out
loope
mov
dec
outs
les
jbe
sbb
xchg
add
jle
(bad)
out
sub
add
xor
dec
mov
adc
iret
mov
and
pop
ins
xor
lock
jecxz
sbb
aas
clc
adc
cmp
sbb
fs
adc
aam
sub
mov
dec
(bad)
mov
or
add
add
pop
xchg
jo
js
in
cmp
add
push
dec
cmp
pop
or
mov
push
xchg
jg
push
and
xchg
mov
rol
addr16
push
arpl
mov
adc
shl
jmp
push
mov
cmc
scas
jae
into
jle
jp
in
mov
adc
sbb
push
and
xor
or
fild
imul
scas
mov
or
xchg
adc
mov
xor
jge
call
cmp
scas
cmp
loop
(bad)
fsub
ret
ins
ins
cmc
mov
or
xchg
test
rcl
push
test
pusha
lods
jbe
jmp
leave
daa
dec
xchg
xor
gs
cmp
ja
retf
rol
cmp
sbb
inc
sub
jmp
mov
or
loope
mov
push
(bad)
sbb
outs
dec
clc
jmp
mov
adc
fsubp
push
int3
sub
loope
sbb
pop
cli
(bad)
push
cmp
xchg
xchg
xchg
cmp
jle
cs
call
cmp
scas
lock
and
rcr
out
push
cmc
mov
or
or
sbb
sbb
add
and
fsub
dec
iret
pop
out
mov
xor
fsubr
xchg
aam
inc
xor
ret
or
retf
pop
stc
xchg
ss
or
mov
pop
in
pushf
(bad)
cmp
cmp
in
xor
ja
mov
adc
jnp
mov
xor
(bad)
(bad)
sbb
xchg
sub
inc
sub
jb
jmp
xor
adc
jmp
cs
sbb
and
adc
pushw
jnp
out
push
pushf
push
mov
xor
inc
and
xchg
xor
daa
dec
nop
repnz
test
cmp
lahf
add
in
aaa
adc
mov
sub
jmp
mov
or
fs
rol
mov
jbe
dec
mov
movs
or
iret
mov
lods
cmps
ja
cmp
mov
sbb
cmps
pop
dec
arpl
push
cmp
dec
mov
sbb
lods
lahf
or
shl
int
and
mov
jg
add
mov
pop
fwait
pop
pop
ins
cmc
out
mov
retf
mov
xor
sbb
mov
nop
push
arpl
mov
cmc
mov
pop
push
xchg
jne
nop
lahf
jge
xchg
std
push
xchg
ins
hlt
pop
jmp
xor
aas
xchg
enter
cmc
pop
pop
leave
int3
sub
xchg
cs
cmp
add
sbb
jle
jnp
jnp
or
add
outs
in
cmp
outs
push
sbb
cwde
pop
adc
leave
loope
call
xor
movs
pop
mov
xor
pop
xchg
cmp
(bad)
dec
aad
(bad)
pop
cmp
mov
cmp
test
jae
jecxz
mov
xchg
sbb
aas
(bad)
jl
and
push
dec
xchg
inc
(bad)
lock
jp
mov
aaa
jg
mov
clc
jecxz
push
adc
mov
pop
repz
mov
ror
retf
sub
cmp
cmp
movs
push
stos
call
sub
push
dec
aam
push
scas
adc
dec
jne
loopne
ficom
dec
(bad)
mov
adc
(bad)
mov
mov
sbb
addr16
mov
cmp
dec
gs
pushw
cwde
retf
xor
dec
mov
hlt
hlt
es
loop
and
cld
ins
in
test
dec
dec
jae
ret
fisubr
add
imul
sahf
inc
push
push
imul
lds
add
jg
in
sbb
test
push
sub
xchg
(bad)
jno
inc
mov
pop
sti
rcr
cmp
sub
dec
out
push
sbb
adc
imul
mov
pop
xchg
lea
xor
jge
fadd
add
mov
call
gs
pop
mov
ins
cmc
xor
push
bound
mov
int3
fisttp
mov
popa
in
and
ret
loop
xchg
jne
jae
mov
addr16
es
js
outs
dec
scas
pop
clc
xchg
and
cmp
mov
dec
mov
mov
popa
pushf
enter
jno
mov
in
dec
call
inc
mov
clc
adc
cmp
outs
xor
outs
cmp
jno
loope
or
and
mov
ror
and
shl
fidiv
dec
lahf
dec
lahf
stos
pop
das
icebp
fadd
jp
popf
push
pushf
or
ins
inc
fstp
imul
fidivr
outs
clc
or
stos
or
out
xlat
mov
xchg
pop
mov
je
call
out
pop
stos
shr
push
jle
inc
cs
or
imul
xor
leave
mov
repz
mov
cwde
inc
adc
nop
adc
ret
aas
cmps
push
xor
and
xchg
mov
dec
sub
call
mov
add
rol
lds
add
and
jb
dec
lahf
pop
push
sub
add
(bad)
mov
pushf
and
pop
es
pushf
mov
jmp
mov
add
add
add
xor
pop
and
adc
rcr
out
jmp
lock
ss
or
test
or
push
arpl
bound
(bad)
jno
inc
jge
push
out
xor
sub
rcl
mov
outs
sbb
xor
cdq
and
imul
xchg
push
inc
cmps
push
cmp
xor
pop
call
rol
dec
sbb
xchg
jge
inc
xchg
pop
(bad)
fistp
pushw
(bad)
repnz
popf
sub
or
loop
mov
add
daa
and
jb
out
jne
jno
leave
dec
xchg
add
sub
mov
bound
mov
jmp
repz
mov
xchg
add
(bad)
out
ins
xor
addr16
adc
aad
enter
add
outs
jp
jbe
ja
push
int3
movs
adc
outs
cmp
cmp
push
cli
(bad)
xchg
enter
jb
pop
rcl
int
cmp
mov
test
mov
sub
(bad)
fsub
dec
ja
cmc
imul
fidiv
xchg
pop
mov
mov
mov
xchg
jns
sbb
pusha
xlat
xchg
pop
daa
cmp
pop
sbb
in
(bad)
loopne
push
sar
out
and
and
icebp
jmp
xchg
sbb
push
dec
dec
mov
xchg
or
into
cld
in
repz
xor
retf
push
fst
mov
cmp
outs
cld
sbb
outs
cmp
int
inc
mov
push
ins
aad
pop
cmps
mov
inc
(bad)
jnp
(bad)
outs
jp
inc
pop
cmp
push
rol
pusha
xchg
jb
lods
push
outs
test
int3
mov
and
aam
(bad)
jl
and
mov
mov
xchg
test
jle
jae
repnz
inc
push
imul
pop
rcl
jle
pop
or
push
pop
sub
adc
xlat
dec
xchg
and
jb
sub
retf
movs
adc
adc
loop
sub
jmp
cmp
xchg
push
popa
adc
dec
out
ins
outs
jge
cwde
inc
(bad)
jnp
(bad)
outs
jp
add
loop
ror
(bad)
loop
xchg
in
or
sub
stc
fisub
mov
daa
mov
cmp
call
mov
retf
psubq
sbb
mov
stos
jae
dec
xchg
jns
inc
outs
cld
movnti
add
popa
in
dec
pop
mov
sbb
mov
(bad)
nop
sbb
aad
ret
cmp
ficom
xchg
push
dec
fcomp
push
sub
loope
mov
(bad)
(bad)
retf
xchg
dec
inc
adc
rol
add
cmp
jbe
and
lahf
sti
jnp
fmul
mov
ins
jg
push
push
xchg
push
xlat
out
hlt
pop
int3
xlat
mov
cmc
pop
dec
sbb
in
xor
inc
xchg
repnz
bnd
out
jne
xchg
fidivr
in
js
(bad)
ffreep
mov
or
(bad)
pop
cli
and
jle
xchg
jmp
movs
popa
push
dec
scas
nop
ins
jle
inc
jge
lock
daa
mov
inc
jo
pusha
inc
mov
mov
popa
cdq
mov
cmp
cmp
stc
pop
cmp
test
pop
dec
lods
pop
ins
(bad)
push
int
jno
call
cmps
das
jp
scas
mov
push
scas
das
sbb
and
or
out
sbb
xor
data16
jne
inc
jne
mov
mov
stos
call
lods
test
jle
adc
cmps
out
sub
mov
xchg
jg
lds
fld
bound
sub
mov
data16
les
adc
pop
or
adc
sbb
push
inc
ret
out
daa
xchg
push
dec
lods
sbb
push
ja
das
jge
div
in
xchg
add
mov
loop
mov
(bad)
(bad)
mov
outs
fdivr
adc
jbe
mov
hlt
movs
sbb
gs
mov
add
push
lods
push
dec
repnz
jle
xchg
fcmove
push
outs
jmp
pop
stc
out
pop
sub
leave
mov
cmp
xor
add
sbb
retf
sbb
or
into
das
and
in
mov
mov
in
mov
ja
push
int3
(bad)
aam
pop
rcl
cs
stc
pop
mov
repz
dec
dec
repnz
out
fdiv
std
das
dec
fild
push
sar
inc
out
out
mov
sti
cmp
xor
push
xchg
pop
loopne
popa
dec
test
mov
retf
sub
jle
add
stos
cmp
mov
mov
mov
cmp
(bad)
(bad)
ins
loopne
and
movs
push
jmp
sub
test
daa
adc
xchg
enter
iret
mov
aam
(bad)
pcmpgtd
pop
outs
xor
xchg
cmp
dec
pop
mov
jb
out
rol
int
cmp
and
das
call
xchg
mov
mov
xlat
sti
or
frstor
fild
or
in
cld
(bad)
out
push
push
mov
ja
sbb
jne
adc
inc
cs
cli
addr16
mov
sbb
mov
sub
mov
or
shl
add
sbb
out
xor
pop
jbe
ret
js
aam
jg
sbb
(bad)
xor
sub
aaa
push
movs
js
mov
adc
retf
js
popf
je
cmp
ret
sbb
push
loop
cmps
test
xor
cwde
push
or
ss
sbb
jno
cmc
adc
sbb
out
fdiv
lds
call
adc
fwait
lds
sbb
ss
jb
dec
shl
call
pop
(bad)
movs
lahf
push
push
cmp
es
xor
xchg
inc
or
sub
nop
adc
ret
ror
inc
xor
mov
xor
sub
inc
std
and
push
cmp
fbld
aas
push
mov
adc
(bad)
mov
cli
sub
rcr
add
stos
out
out
jle
test
ins
lods
jmp
in
arpl
dec
sbb
dec
lods
bound
dec
xchg
jne
or
jecxz
mov
push
add
out
(bad)
add
retf
ret
fisttp
(bad)
fmul
fstp
and
shr
add
test
xchg
sbb
dec
sar
nop
adc
mov
push
dec
fdivr
push
pop
jmp
mov
or
xchg
push
fdivr
cmp
std
mov
pushf
in
cmp
imul
das
das
lods
rcr
jnp
(bad)
arpl
(bad)
test
daa
movs
push
out
jg
mov
add
retf
sbb
ins
test
pop
jg
sbb
or
bound
pop
stos
pop
or
inc
cmp
int
int3
mov
or
sahf
jmp
dec
sbb
jne
enter
push
ret
mov
adc
lahf
hlt
lods
xor
mov
cwde
movs
dec
sub
loopne
inc
sar
push
add
pop
call
adc
fdiv
inc
scas
dec
sbb
pusha
mov
dec
cdq
push
out
mov
cmp
inc
mov
aas
push
mov
ja
jecxz
mov
add
test
push
shr
add
and
sbb
aaa
fsubr
fcomp
and
jmp
mov
popa
sbb
xor
add
popf
inc
std
cli
xchg
cmp
lods
mov
addr16
cmp
(bad)
inc
mov
inc
sub
fisubr
dec
dec
aas
push
pop
repnz
or
adc
jmp
mov
and
cmps
movs
and
stc
xchg
in
push
push
xchg
xchg
aad
or
and
add
ja
(bad)
jl
aaa
push
inc
repz
loope
gs
sbb
add
frstor
std
test
jle
add
sbb
ss
xchg
lods
and
cmc
pop
repz
xor
popa
pushf
jl
adc
js
jb
adc
mov
adc
sub
inc
(bad)
xlat
and
xor
stos
cmp
js
mov
xchg
xchg
(bad)
int
pop
sbb
int
mov
cdq
sbb
cmp
pop
sbb
cs
mov
mov
mov
push
ins
not
fisub
sub
or
icebp
in
cdq
out
inc
and
jmp
mov
fdiv
sbb
pop
inc
or
test
inc
xor
fisttp
test
and
jmp
sbb
in
hlt
pop
repz
or
xchg
sub
outs
xor
in
or
xlat
push
add
add
push
addr16
inc
(bad)
push
xor
test
xchg
loop
imul
jbe
neg
mov
call
mov
adc
mov
add
push
xor
fs
test
ficomp
pushf
gs
mov
hlt
movs
push
jae
loop
inc
sahf
jmp
pop
in
in
push
mov
jl
xor
mov
(bad)
dec
pop
rol
or
mov
inc
cmp
lahf
sub
pop
push
push
outs
adc
sbb
loopne
xor
jp
cli
mov
ret
mov
mov
in
mov
inc
add
cmp
adc
jl
mov
push
push
push
rcl
add
pop
call
rol
push
(bad)
test
cmp
cmp
jo
push
sub
movs
push
jno
ins
cmc
popf
or
in
sub
movs
fdecstp
outs
pop
pop
xor
jmp
dec
sbb
fxch
std
shr
mov
dec
outs
retf
fldcw
out
test
fisub
pop
fld
xchg
mov
push
repz
mov
call
add
in
jge
(bad)
in
xor
stos
sub
nop
adc
pop
out
out
jns
outs
xor
pop
outs
int3
jbe
xchg
mov
ins
loopne
dec
and
leave
jno
mov
test
adc
fsub
adc
ins
cmc
mov
inc
pop
or
pusha
sbb
fisub
mov
fnstenv
jo
push
or
(bad)
test
adc
in
into
jmp
xor
std
adc
mov
xor
into
sbb
mov
mov
out
out
mov
fwait
sar
mov
(bad)
sub
push
bound
xor
es
ds
and
dec
sbb
xchg
add
push
retf
lahf
pop
lods
movs
fs
test
ficomp
pushf
gs
inc
call
in
cdq
push
inc
and
jmp
sar
not
mov
pop
and
in
jmp
retf
shr
xor
dec
xchg
frstor
movs
xchg
pusha
mov
in
hlt
push
scas
cli
mov
sahf
mov
jno
cmp
or
cld
stos
pusha
xchg
outs
in
inc
jmp
jb
call
cmp
dec
enter
sub
daa
xchg
push
test
int
ja
popf
mov
test
loop
xor
pop
ret
popa
and
cli
jno
adc
popf
push
jns
movs
xor
jecxz
xor
add
inc
pop
pop
mov
ficom
(bad)
nop
(bad)
idiv
retf
or
into
jmp
xor
clc
pop
xor
inc
mov
add
xor
push
(bad)
les
mov
sbb
sbb
cwde
mov
dec
cmp
shr
mov
push
int3
pop
in
ja
cdq
aad
pop
inc
iret
stc
pop
in
ds
mov
ror
sub
pop
das
adc
ins
std
bound
mov
pop
movs
cli
jno
adc
popf
mov
dec
xchg
fiadd
mov
aad
pusha
(bad)
out
cmp
fsub
fdivr
or
pusha
xlat
xchg
pop
scas
je
pop
xor
pop
imul
fsubrp
cmc
ja
xchg
lds
push
dec
aad
mov
mov
push
mov
popa
push
mov
cmc
mov
in
mov
(bad)
mov
inc
cmp
outs
in
mov
jp
push
mov
cmp
push
inc
retf
sub
fsubr
sti
mov
imul
(bad)
outs
jno
pop
aad
mov
inc
cmps
das
jnp
push
out
mov
loop
sbb
and
cmps
or
aam
pop
mov
cmp
pop
xchg
jb
xchg
cli
(bad)
ret
push
add
js
out
and
and
dec
mov
push
xor
imul
int3
jbe
rcl
stos
sahf
mov
mov
and
xchg
mov
rcl
jmp
mov
movs
call
jo
test
dec
jmp
imul
dec
jecxz
dec
cdq
push
out
mov
sub
or
xor
fwait
or
std
ja
jl
aaa
push
mov
out
mov
and
mul
jnp
xor
ins
sub
mov
leave
lods
xchg
lods
inc
das
cmc
pop
lds
fnstsw
mov
mov
inc
mov
mov
pop
mov
xor
adc
add
and
push
dec
sub
push
outs
xor
aaa
mov
inc
pop
xor
rcl
pop
call
xchg
(bad)
xchg
(bad)
sub
dec
lahf
retf
fild
shl
cdq
ror
or
add
jl
xchg
movs
pop
or
sbb
add
aaa
ja
xchg
ficomp
jne
lock
imul
fwait
popf
ins
push
jb
xor
mov
sub
pop
test
sbb
mov
imul
dec
stos
cmp
and
push
adc
xchg
sbb
les
outs
loopne
cmp
mov
push
xchg
xchg
add
loopne
mov
mov
(bad)
outs
adc
or
(bad)
fst
shr
ins
aas
or
mov
and
sbb
in
jg
inc
or
fld
sbb
popf
mov
or
imul
fsubp
int
fdivrp
xchg
mov
mov
or
push
lods
cli
mov
jbe
(bad)
outs
cmp
inc
adc
jp
fsub
mov
sub
repnz
sbb
xchg
sub
in
mov
int3
movs
jg
cmp
xor
dec
out
xor
xchg
and
and
mov
cdq
xchg
sub
or
rcl
push
lods
loope
inc
push
pusha
jecxz
nop
call
xchg
sbb
pop
gs
pusha
bound
(bad)
and
jnp
rsqrtps
je
dec
sbb
mov
mov
retf
movs
sar
sahf
jmp
jno
popa
sbb
daa
dec
stos
mov
push
nop
jp
dec
(bad)
ja
inc
lods
in
xor
push
cdq
aad
enter
mov
push
repz
int
pop
sbb
pop
aas
sbb
popf
sbb
cmp
or
lahf
movs
xlat
pop
das
icebp
leave
adc
(bad)
sub
cld
dec
jb
sbb
in
add
fdiv
gs
pusha
bound
and
mov
push
add
stc
xchg
ss
adc
inc
inc
cmp
xchg
(bad)
or
mov
jg
dec
push
mov
pop
xor
iret
stos
mov
mov
clc
sub
xchg
outs
xor
es
shl
das
inc
sub
cdq
ins
sbb
push
jmp
outs
sbb
jmp
cmp
and
cmp
pop
add
pushf
out
je
dec
sbb
mov
outs
push
mov
(bad)
jecxz
pop
inc
idiv
pop
shl
push
(bad)
push
adc
add
push
jo
inc
out
out
mov
jbe
stos
cmc
or
mov
jmp
(bad)
pop
xor
les
inc
std
(bad)
cs
dec
(bad)
ja
lods
mov
cwde
cs
dec
loope
inc
sub
mov
loopne
pop
fdivrp
pop
repnz
xchg
or
mov
push
and
mov
(bad)
adc
sub
cdq
adc
popf
push
push
pushf
movs
fstp
pop
je
fstp
or
shr
mov
ins
call
addr16
mov
inc
cmp
(bad)
xchg
lods
jns
xor
(bad)
pop
push
lea
int3
and
fsubp
inc
jge
xor
pop
retf
test
dec
pop
jl
sbb
sbb
xor
cwde
and
sti
xor
inc
sub
mov
jb
dec
addr16
xor
sub
imul
mov
jp
inc
jge
mov
pop
pop
dec
gs
out
mov
ret
mov
pop
leave
loop
xor
mov
call
inc
fcmovnb
xor
sbb
jne
test
xor
jl
dec
inc
jg
mov
clc
adc
xchg
stos
inc
jp
xor
jns
cmps
and
(bad)
cmc
fsub
cmp
mov
rep
data16
mov
sbb
dec
jle
fwait
fs
xor
xchg
mov
sub
push
inc
sar
sub
(bad)
push
cmp
sbb
adc
push
pop
sbb
xor
and
repnz
bound
int
pop
es
dec
push
inc
and
loope
mov
fwait
mov
rol
dec
mov
jl
jmp
movs
pop
stos
call
push
inc
sub
ss
call
js
mov
popa
pushf
cmp
inc
mov
nop
pop
iret
add
retf
sub
mov
mov
sbb
sub
jbe
ficomp
mov
xchg
push
lods
jmp
cld
or
jb
xchg
xchg
mov
ret
(bad)
dec
adc
das
icebp
data16
pop
jmp
jnp
data16
mov
pushf
cmp
sbb
ret
enter
out
xlat
xchg
fsubr
jo
and
push
mov
jmp
pop
push
fdiv
mov
call
dec
ds
mov
pushf
cmp
clc
mov
sysret
cwde
and
pop
inc
ret
mov
adc
outs
jp
sbb
rcr
jne
cs
enter
cwde
into
icebp
jne
call
mov
cli
lea
adc
addr16
add
mov
push
(bad)
pusha
mov
shr
(bad)
popf
xchg
or
pop
push
popa
popa
push
inc
lods
adc
and
ficomp
retf
jne
hlt
and
test
nop
inc
pushf
inc
add
sbb
pop
push
lods
repnz
stc
iret
(bad)
pop
sub
sbb
jmp
cmp
stos
repz
xor
lea
xlat
inc
cmp
in
mov
mov
jns
jl
rcl
add
loope
add
pop
cmp
push
lahf
pop
bound
mov
mov
stc
inc
stos
and
jge
ds
push
mul
ins
pop
or
pushf
out
je
test
ror
or
(bad)
ror
enter
cmp
pop
fs
xchg
add
jne
leave
fsubr
sub
jg
fdiv
xor
push
stc
xchg
ss
sub
ret
stos
cmc
pop
or
les
ds
popa
push
mov
loop
sahf
in
jns
lock
sbb
push
cmp
mov
test
out
sbb
add
imul
xor
cwde
cs
ror
stos
push
inc
cmps
inc
sub
movs
inc
mov
jae
(bad)
xor
outs
sbb
pop
xchg
jl
dec
xor
and
das
jnp
push
shl
and
clc
mov
fdecstp
jb
in
and
jmp
jge
dec
push
cwde
stos
retf
pusha
pop
retf
jne
add
fldcw
ja
pop
ret
xor
adc
xchg
imul
clc
xchg
pop
push
or
mov
loopne
dec
jecxz
rol
iret
in
jns
cmp
mov
pop
test
jmp
stos
cmp
pop
adc
add
jns
sub
xchg
shl
pushf
cmp
push
inc
retf
sub
mov
movs
pop
call
sub
dec
or
xchg
jge
mov
ror
out
mov
and
sub
rcl
or
sbb
ja
or
fwait
test
pusha
xlat
xchg
dec
sbb
retf
ja
addr16
scas
xor
outs
cli
xchg
xor
clc
repnz
rol
aam
push
test
mov
mov
(bad)
cmps
stos
sar
outs
in
sbb
mov
retf
div
fwait
pop
dec
cmps
inc
(bad)
dec
push
adc
call
cs
lds
out
jle
dec
lahf
mov
pop
xor
push
sub
sub
jecxz
call
nop
call
mov
pusha
xlat
xchg
fsubr
jo
and
xchg
outs
jnp
into
sbb
mov
int
push
jmp
ss
jns
lds
push
or
mov
and
ds
int3
and
add
add
aaa
xor
ss
aam
add
jbe
mov
pop
addr16
adc
retf
loope
call
retf
loope
bound
sub
pusha
and
pop
push
(bad)
jecxz
fist
sbb
cmps
push
into
xchg
jl
or
or
and
push
sbb
test
sar
sbb
neg
mov
popa
std
test
add
jmp
cmp
pop
xchg
int3
shl
cmc
pop
pop
retf
loopne
sub
dec
dec
sahf
add
cwde
leave
jns
into
and
mov
jge
stos
mov
xchg
fdivr
sbb
adc
xor
adc
imul
push
inc
mov
sub
xor
pop
call
cs
xchg
bound
sti
lds
xchg
aaa
sub
pop
fist
das
mov
mov
sahf
sub
sbb
or
xchg
adc
outs
push
add
dec
jmp
repz
enter
test
xchg
inc
test
push
cmp
fdiv
xchg
leave
ret
stos
and
test
xor
xchg
fcmovb
sub
std
iret
cdq
enter
jns
inc
and
push
pusha
fimul
push
mov
adc
dec
fwait
neg
xchg
ret
mov
mov
add
pop
call
lods
sbb
cmp
fist
popa
and
xchg
(bad)
leave
adc
pop
jo
shr
xor
in
into
and
popf
int
lea
fdivr
retf
fbld
(bad)
fwait
xor
addr16
jle
xchg
pop
xchg
test
add
inc
cmp
cmc
popf
add
sub
ret
sbb
cdq
jno
cmp
add
xchg
cdq
mov
push
aad
xchg
xchg
push
dec
cwde
rol
xchg
mov
mov
pop
sar
mov
jle
call
sbb
push
ds
and
cmps
movs
push
adc
call
or
lea
mov
fdiv
xchg
push
fnsave
std
test
outs
es
lock
mov
aas
inc
inc
cli
ror
add
mov
and
push
cmps
aaa
sbb
jne
iret
pop
fwait
andnps
mov
add
add
lods
sahf
mov
dec
xchg
ret
aaa
popf
rol
mov
push
xchg
push
enter
pop
repnz
imul
push
pop
inc
jp
imul
pusha
mov
not
jmp
dec
scas
mov
fild
push
sbb
nop
inc
or
int3
or
xchg
repnz
or
add
mov
cwde
(bad)
jle
sbb
inc
mov
add
add
xlat
out
iret
or
inc
cmp
cmc
popf
les
or
dec
inc
retf
js
cmp
pop
sub
push
mov
mov
call
or
mov
inc
mov
mov
dec
(bad)
into
sub
cwde
outs
clc
xchg
in
je
pop
or
pusha
mov
repz
ret
outs
das
push
xchg
add
and
cdq
mov
fstp
hlt
movs
addr16
sbb
scas
ins
or
scas
movs
jno
ret
cmps
mov
aad
fst
mov
push
add
pop
jmp
inc
inc
xor
jmp
or
es
sar
dec
and
sub
pop
fist
add
and
(bad)
ja
xchg
ret
and
retf
pop
addr16
jmp
adc
mov
xchg
call
inc
rcl
sahf
icebp
xchg
or
in
ss
push
mov
addr16
mov
arpl
cmps
push
mov
je
fistp
(bad)
dec
inc
enter
cmp
dec
retf
loopne
xchg
fidivr
cwde
or
ds
jg
cmc
lods
mov
(bad)
push
in
add
inc
xor
in
or
or
jmp
push
mov
loop
(bad)
in
jge
or
jno
gs
mov
mov
adc
xchg
sbb
xor
push
iret
pushf
sbb
xchg
mov
popf
xchg
mov
xor
pop
add
push
mov
jo
dec
cdq
je
mov
inc
stos
xor
stos
enter
icebp
adc
fstp
retf
arpl
cmc
and
pop
push
call
pop
jb
mov
fistp
ficom
(bad)
cdq
mov
xchg
xor
lods
push
xchg
retf
fistp
pop
jns
push
(bad)
and
cmp
jbe
cmp
fldcw
mov
add
xchg
out
outs
fisttp
mov
dec
xor
ror
sbb
mov
ret
into
lea
cmp
es
sbb
mov
jmp
das
mov
jb
add
pushf
imul
pslld
inc
out
adc
xor
mov
fisttp
imul
pop
icebp
sub
or
(bad)
nop
fild
mov
std
sub
cmp
test
add
xchg
fild
jg
sub
out
mov
jbe
shl
jge
iret
mov
lds
inc
test
mov
outs
mov
outs
mov
add
jmp
mov
inc
mov
add
jl
popf
push
out
push
adc
xchg
sar
mov
lods
adc
jp
inc
bound
ud1
xchg
mov
stos
adc
pop
sub
scas
gs
cwde
add
into
lds
cwde
cmp
into
push
sbb
mov
inc
or
es
mov
loopne
and
and
(bad)
pop
pop
int
test
push
adc
and
add
sub
mov
addr16
xchg
ret
fild
cmps
xor
xchg
lea
push
mov
out
push
out
cmp
xchg
test
loop
frstor
and
dec
jecxz
pushw
sbb
push
push
mov
out
movs
sbb
(bad)
loop
in
dec
arpl
jl
mov
pusha
xlat
bound
rol
imul
push
jg
inc
push
adc
stos
pop
jmp
push
sub
xor
repz
xor
sbb
cmp
push
push
xor
lock
jmp
out
mov
out
in
and
ss
mov
rcl
pop
cmp
fisubr
retf
jno
sub
pop
jno
and
(bad)
bound
adc
pusha
retf
xchg
dec
mov
ret
(bad)
pop
pop
rcr
fild
xchg
out
repz
ins
jg
push
push
xchg
and
mov
ins
pop
mov
jl
aaa
push
inc
in
imul
(bad)
and
jnp
icebp
dec
xor
js
pop
cmps
push
xchg
popf
loopne
xchg
xor
fucomip
sub
jb
jno
je
and
and
inc
cmp
fcom
ret
dec
sbb
lods
inc
loopne
dec
bound
push
scas
mov
(bad)
xchg
lea
cmp
je
jg
xchg
xchg
ud2
adc
dec
lahf
test
das
and
cdq
stc
adc
loope
push
stc
xlat
test
sub
xlat
jmp
fnstsw
jmp
repnz
scas
cmp
addr16
cs
stos
mov
push
or
test
pop
jns
push
test
(bad)
in
inc
popa
push
cmp
(bad)
sti
into
into
add
stos
cmp
adc
sub
jb
mov
shl
in
push
mov
out
mov
pop
call
ror
xchg
mov
jmp
cmp
(bad)
fmul
fwait
mov
dec
sub
add
hlt
pushf
sbb
or
neg
and
push
jno
pusha
pop
out
push
sbb
jbe
jbe
jnp
xor
outs
mov
xor
push
adc
mov
sbb
pop
out
movs
into
not
cmp
pop
mov
nop
pop
iret
add
leave
sub
or
(bad)
mov
add
add
add
cmp
aaa
push
movs
js
ds
push
shl
pop
cmp
ja
or
mov
inc
xor
movs
rcl
icebp
leave
push
out
popf
xchg
lahf
jb
pop
cmc
cmps
mov
daa
inc
or
sub
retf
pop
or
retf
push
xchg
xor
inc
xor
xor
and
dec
call
rol
mov
mul
loopne
into
cld
sub
(bad)
jle
mov
retf
fild
dec
data16
cwde
loope
inc
fucomi
push
inc
fld
cmp
xor
movs
popa
xor
jo
ja
cmp
fst
cmp
dec
xlat
fistp
mov
popf
xchg
imul
jnp
daa
sbb
cmp
cmp
and
daa
in
pusha
pop
jbe
xchg
jne
sub
xchg
outs
jnp
xor
outs
push
sbb
mov
push
xchg
sti
sub
stos
cmc
lods
hlt
dec
sbb
rol
mov
bound
jbe
sbb
jne
test
mov
sbb
sub
jns
mov
mov
cwde
movs
pushf
sub
sub
mov
pop
call
jnp
arpl
mov
ins
inc
lods
outs
adc
xchg
test
fild
xchg
repnz
jle
and
call
hlt
and
not
movs
adc
xchg
(bad)
outs
test
dec
xor
xchg
jne
nop
fidiv
cld
lds
pop
pop
pop
mov
push
xchg
inc
add
sbb
fsub
fsub
add
sbb
cmps
inc
mov
sbb
rcl
and
pop
rcl
loop
mov
(bad)
in
xchg
clc
lods
cmp
jbe
imul
out
cmp
push
xchg
mov
sub
das
enter
ins
jg
or
clc
sub
shrd
cwde
mov
not
fist
mov
lahf
mov
ss
cmp
pusha
por
sbb
and
inc
clc
test
push
iret
jns
cmp
pop
lods
cmp
dec
aad
cdq
retf
xchg
fst
(bad)
sti
mov
cmp
dec
mov
xor
pop
or
test
das
mov
pop
sbb
xor
sahf
jecxz
mov
lock
loop
ror
adc
xchg
test
jp
lock
repz
icebp
data16
out
test
icebp
cld
dec
dec
xchg
sbb
popa
mov
outs
add
fadd
fdivr
jecxz
jmp
jae
cmp
and
mov
mov
ss
add
lock
mov
dec
stos
inc
sbb
jae
cwde
fmul
imul
pop
pop
test
lods
data16
mov
mov
inc
ret
fist
sbb
movs
xchg
sub
jmp
adc
call
pop
test
jl
sub
and
stos
test
push
pop
das
jnp
adc
push
popf
push
pushf
out
cmp
stos
pop
es
loop
xor
in
jge
test
dec
jmp
aas
lahf
leave
es
add
shr
out
sub
push
scas
push
xchg
sbb
pop
sub
mov
and
in
lea
pop
pushf
enter
(bad)
stos
inc
jle
pushf
adc
fimul
outs
cmp
movs
enter
dec
xor
inc
retf
xchg
xchg
shr
pop
cmps
mov
(bad)
mov
jp
imul
and
adc
loope
mov
mov
mov
sub
sbb
popa
inc
add
test
ret
out
mov
ins
push
fldcw
ds
fidivr
mov
mov
push
xchg
inc
inc
cmp
mov
ror
fsubr
loope
pop
jge
jno
je
push
jp
jns
aas
(bad)
xor
outs
in
mov
push
jbe
push
dec
fcomp
loope
pop
sbb
pop
sahf
xor
iret
adc
pop
cwde
xor
gs
mov
mov
outs
stc
mov
lahf
(bad)
xor
rcr
out
cmps
ins
cmc
jmp
lahf
gs
out
hlt
into
fnstsw
loopne
push
xor
jmp
xchg
xor
mov
mov
(bad)
js
add
scas
cmp
addr16
into
push
sub
int
sub
iret
fcomp
xor
push
pop
cmc
popf
add
ret
mov
mov
mov
popf
mov
mov
ds
outs
addr16
inc
mov
into
xor
cwde
movs
sub
push
push
add
movs
pop
mov
popa
dec
fmul
xchg
bswap
add
fdiv
mov
pushw
jp
(bad)
arpl
add
lea
sbb
popa
pushf
add
bound
gs
adc
call
push
sub
int
sub
ret
lods
inc
inc
cmp
jecxz
or
loope
push
xor
retf
loop
add
push
xor
or
pop
xor
iret
xor
pushf
ret
and
jns
adc
xchg
and
imul
into
add
pop
call
sub
cli
imul
idiv
pop
popa
(bad)
(bad)
push
ror
cdq
stc
js
loope
outs
xchg
push
or
add
ror
mov
nop
jne
es
ror
jbe
xchg
jae
inc
xchg
push
adc
push
fldcw
ds
jnp
fsubrp
cmc
jae
xchg
xor
(bad)
repz
mov
pop
jns
push
test
(bad)
cmp
popa
push
cmp
in
sub
mov
push
push
adc
mov
inc
std
fcom
dec
jle
fwait
mov
mov
xchg
mov
(bad)
aaa
xchg
fidiv
and
sar
mov
jl
push
jbe
xchg
and
test
dec
stos
gs
pop
pop
xchg
jb
call
pop
mov
(bad)
ins
push
repz
pusha
and
sbb
sbb
mov
push
loopne
mov
push
inc
stos
into
inc
or
and
or
mov
fldcw
adc
dec
in
mov
iret
pop
xchg
jmp
rol
mov
shrd
mov
dec
cmp
jne
mov
aam
loopne
fnstcw
loope
jg
dec
xlat
dec
popw
shl
call
addr16
mov
lds
or
adc
sub
rcr
and
mov
cmp
or
sbb
xchg
sbb
scas
pop
push
pusha
or
dec
nop
bnd
jp
cmp
call
pusha
inc
sti
sub
add
idiv
inc
call
xor
jne
repz
push
fadd
iret
movs
imul
retf
in
in
popf
loop
cs
std
cmp
cli
mov
(bad)
fsub
movs
out
pushf
sbb
rcl
into
sar
xchg
xchg
loopne
pop
(bad)
lds
movs
pop
sub
stc
mov
mov
and
cmps
pop
dec
mov
out
in
loope
fistp
xor
and
xor
mov
jg
nop
addr16
out
mov
mov
sbb
enter
push
push
push
imul
ror
sub
call
int3
cmp
popa
pushf
and
aad
jno
into
add
in
xor
cli
pushf
out
outs
cmp
pop
int3
cs
mov
pushf
jo
dec
cli
scas
int3
pop
cmp
push
enter
cmp
stc
mov
jmp
cdq
jl
scas
and
cmp
pop
xor
mov
icebp
arpl
jbe
test
movs
fldcw
and
dec
mov
neg
mov
lea
retf
jmp
nop
xchg
jmp
movs
xchg
fistp
mov
repz
xor
pop
lods
cmp
cmp
xor
xlat
inc
cmp
outs
in
shr
xchg
inc
xor
cdq
and
cmp
imul
add
push
int
push
aad
xor
es
cmp
(bad)
mov
add
hlt
stos
fisttp
ja
mov
push
dec
adc
mov
mov
mov
jne
loopne
int
sbb
nop
jne
inc
mov
fisubr
mov
mov
imul
mov
jg
ss
repnz
mov
cmp
dec
shl
xchg
xor
jnp
mov
loop
jp
mov
push
lock
nop
pushf
add
adc
xchg
out
sub
retf
sbb
shl
mov
and
sub
adc
fldcw
jge
mov
pop
pop
inc
lea
or
out
pushf
out
mov
mov
pop
frstor
inc
mov
std
ja
jl
aaa
push
and
xchg
pop
out
mov
and
test
jo
(bad)
jbe
js
es
xchg
imul
in
xor
ret
and
pop
jns
push
test
sar
popa
pushf
int3
sahf
jnp
jno
cmp
iret
push
cmp
mov
outs
cmp
push
and
in
push
mov
and
xchg
lea
inc
int
test
mov
dec
mov
xor
rcr
out
push
ins
cmc
jmp
xlat
icebp
sti
pop
lods
add
xchg
das
inc
and
aam
cmps
ret
ret
cmc
cmp
pop
jae
call
retf
std
push
nop
ins
int
jmp
dec
stos
jb
fmul
stos
and
push
push
jns
adc
add
add
add
in
inc
std
out
xchg
mov
shl
mov
shr
inc
sbb
xchg
jae
pop
mov
push
call
mov
jns
ins
ja
ficomp
mov
stos
gs
cmp
pop
cmc
pushf
out
nop
xchg
lods
xor
jecxz
mov
nop
sbb
hlt
loope
xchg
fdiv
pop
cmps
push
in
rcl
sub
push
xlat
out
xlat
xchg
mov
mov
or
cld
pop
push
out
push
mov
mov
loop
push
in
jns
jp
in
call
push
out
outs
push
jb
jle
xor
outs
xor
xchg
cmp
popf
enter
pop
mov
xchg
mov
loope
mov
test
pusha
mov
push
push
cmp
gs
ins
popa
retf
pop
fist
ficomp
popa
cmp
xchg
in
daa
inc
fcmovnb
call
retf
sbb
sub
ret
out
and
ret
adc
(bad)
(bad)
pop
or
add
cmp
mov
retf
clc
movs
les
jmp
movs
adc
adc
aad
mov
std
out
in
mov
pop
or
cwde
xor
imul
mov
ficom
jge
jmp
inc
daa
cmp
sti
jmp
imul
and
pop
loop
cmp
fdivrp
cmp
xor
scas
sbb
mov
nop
adc
xor
retf
lods
enter
cmp
stos
jno
int3
or
clc
scas
iret
cmp
pop
fld
cli
out
push
imul
repz
inc
inc
mov
add
cs
aam
daa
int3
sbb
popf
shl
and
cli
adc
pop
xchg
lock
mov
push
adc
out
adc
rcl
out
mov
ret
adc
fimul
push
pop
cmp
lods
(bad)
cmp
daa
dec
popa
clc
xchg
or
imul
mul
sbb
xchg
clc
loop
punpckldq
sbb
xchg
mov
sbb
push
rol
inc
imul
ficom
jmp
xlat
push
sub
add
mov
xor
mov
sti
push
adc
push
dec
enter
cmc
cli
mov
jbe
repz
int3
pop
in
dec
(bad)
cli
push
enter
pop
in
aaa
or
push
jp
call
adc
inc
mov
test
xchg
fstp
jne
cmp
pop
xor
pop
loope
ja
or
pop
leave
out
mov
sbb
mov
jg
sub
push
dec
xchg
fisub
add
sbb
xchg
pop
sub
push
cmp
or
inc
lods
jns
int3
add
add
lods
hlt
icebp
ins
cwde
shr
push
add
jbe
pop
sahf
repnz
lea
fist
add
iret
mov
(bad)
lods
mov
cwde
sbb
mov
ss
mov
mov
ja
mov
dec
icebp
dec
sub
lock
ror
cdq
je
(bad)
xor
test
pop
movs
call
add
imul
lahf
and
bound
cmp
dec
mov
leave
pop
rcl
aad
xlat
loope
jno
pop
lea
jns
outs
cwde
enter
jbe
lea
stos
repz
jp
rcl
(bad)
mov
cmp
nop
adc
push
bound
xlat
jbe
xchg
retf
loopne
sub
push
xor
cdq
out
jb
jecxz
jmp
clc
xor
outs
jp
add
push
call
stc
cwde
retf
or
inc
xchg
mul
dec
sbb
add
add
sbb
loope
and
adc
mov
add
xchg
push
adc
cmc
dec
pop
mov
mov
stos
sub
and
sar
test
mov
data16
push
lock
out
xor
aaa
inc
cmp
outs
in
mov
jbe
xchg
mov
scas
xor
imul
push
int
inc
mov
push
pop
vpunpckhbw
adc
mov
in
pop
scas
push
enter
movs
mov
push
cdq
je
(bad)
xor
sub
ror
mov
sbb
adc
ja
jge
test
mov
pop
out
inc
out
cmc
nop
ss
addr16
std
push
push
or
push
call
les
lods
lock
mov
ror
retf
js
cmp
lock
push
adc
and
aad
mov
std
stc
sti
pop
dec
sub
movs
xchg
retf
xchg
and
push
leave
cdq
out
gs
(bad)
mov
sbb
out
cmp
pop
or
aam
sub
div
mov
or
ins
jge
or
mov
repz
aaa
fdiv
adc
push
repnz
mov
cwde
jnp
xor
jg
inc
push
iret
mov
inc
js
inc
inc
mov
mov
jno
adc
or
shrd
cmp
iret
mov
(bad)
jns
jmp
mov
cwde
cs
add
push
cli
xor
call
loop
imul
lock
xchg
test
stos
test
dec
mov
test
daa
adc
jb
mov
scas
sbb
fisub
push
outs
add
test
dec
jmp
repz
adc
mov
mov
in
outs
sbb
adc
dec
cld
and
mov
pop
loopne
sub
inc
(bad)
sbb
mov
icebp
mov
pop
fild
lods
out
in
mov
shl
in
pushf
lahf
shl
lds
std
add
imul
ret
imul
imul
and
sti
into
push
cmp
retf
mov
mov
sbb
imul
or
lea
mov
out
loop
dec
imul
ret
loopne
sahf
(bad)
lds
and
adc
pop
pop
push
pop
aam
cmp
push
mov
pandn
add
pop
scas
out
outs
xchg
mov
repz
and
sbb
aaa
xchg
jmp
add
add
cld
ficomp
mov
push
(bad)
or
jmp
ds
movs
mov
lahf
rcl
mov
pop
vmovaps
stos
in
cld
mov
ret
cdq
bndstx
fimul
fsubr
jo
and
lea
ja
push
adc
or
push
mov
xor
mov
repz
xor
xchg
sub
in
mov
lods
in
xor
enter
add
mov
aam
mov
push
cdq
cs
push
cmp
sahf
enter
sub
sub
rcr
imul
dec
add
lock
dec
lahf
dec
pop
ja
das
(bad)
pop
in
xchg
pop
jmp
cmp
pushf
aaa
mov
mov
(bad)
jmp
addr16
daa
sbb
or
add
mov
push
nop
ins
daa
xor
jg
mov
and
ret
xchg
push
mov
and
push
and
push
dec
and
lods
jmp
ret
data16
mov
sub
adc
and
mov
adc
jl
enter
pop
mov
not
lea
xor
jne
mov
add
outs
inc
jno
leave
and
das
jnp
adc
fild
(bad)
xchg
adc
cmc
and
jmp
sbb
neg
ror
dec
dec
pusha
imul
fisttp
cld
add
stos
jnp
(bad)
(bad)
pop
aam
sbb
outs
sub
aam
cmc
pop
repz
xchg
and
dec
inc
retf
xchg
mov
mov
inc
jmp
push
test
adc
mov
test
outs
cmp
enter
xor
mov
retf
lock
movs
call
cs
xchg
mov
xor
mov
repz
dec
and
test
mov
or
in
mov
mov
push
inc
push
sbb
pop
gs
pusha
bound
xchg
xchg
xchg
rol
jmp
lds
fs
mov
loope
sbb
cmp
jbe
xchg
mov
mov
int
push
in
mov
adc
cmp
outs
cmp
pop
xor
inc
repz
mov
ret
(bad)
jb
sahf
jl
call
out
cmp
xchg
test
push
jle
shr
jae
das
(bad)
pop
std
xchg
pop
jmp
mov
sub
mov
and
popf
int
push
mov
mov
xchg
jne
add
inc
cs
sub
ja
adc
call
pusha
dec
lods
lods
push
cmc
pop
test
sbb
add
add
sahf
rcl
jno
into
add
sbb
out
xchg
inc
mov
cmp
lds
pcmpeqb
adc
cld
fs
pop
scas
call
xor
cmc
call
stc
xor
mov
jbe
or
movs
pop
ja
cmps
mov
loop
mov
gs
xchg
js
cdq
xor
mov
xchg
push
test
mov
test
in
mov
ret
or
jg
cld
xor
mov
xchg
xor
push
dec
cmc
popf
add
cwde
and
shl
push
mov
jecxz
mov
enter
movs
out
outs
sbb
es
outs
mov
cmp
imul
mov
mov
shl
or
jo
fcmovbe
cmp
and
(bad)
stc
sbb
popf
stc
mov
popf
fimul
pop
shl
xchg
add
js
movs
adc
xchg
push
push
aaa
ja
outs
cmps
iret
pop
out
mov
and
test
mov
inc
or
and
repz
or
test
popa
dec
pop
push
sar
push
(bad)
les
inc
inc
xor
out
push
iret
push
enter
adc
mov
inc
add
fimul
or
imul
inc
cmps
inc
sub
clc
lods
inc
or
not
dec
sbb
xchg
jge
dec
mov
fistp
cmp
popf
push
xchg
xor
shl
push
pop
lods
or
mov
ja
leave
retf
lods
enter
xor
pop
int
push
cmp
addr16
push
cmps
int
xchg
pop
push
mov
mov
add
int3
stos
or
jmp
mov
mov
jmp
test
mov
cld
dec
mov
push
jns
test
xor
clc
(bad)
imul
add
mov
dec
mov
out
mov
add
xchg
fmul
repz
stc
or
push
pushf
out
jo
test
sbb
xor
call
(bad)
pop
dec
pusha
xlat
bound
jbe
pop
and
adc
or
adc
mov
xor
stos
pop
adc
loope
in
xor
stos
sahf
jmp
add
pop
cmp
movs
inc
test
mov
aam
bound
outs
mov
cmp
xchg
jmp
adc
and
call
ror
jg
in
(bad)
sbb
rcl
add
(bad)
mov
or
nop
clc
ja
or
add
add
out
xchg
mov
ret
ret
jne
lea
fstp
ror
add
repnz
sbb
and
(bad)
pop
or
and
imul
iret
mov
add
lds
pop
mov
in
and
mov
les
pop
adc
lea
cmp
enter
or
mov
pop
call
inc
fwait
jmp
xchg
test
pusha
retf
and
dec
outs
data16
pushf
ror
xor
push
xchg
xchg
push
cmp
in
adc
in
mov
dec
dec
jno
pusha
xlat
xchg
pop
xchg
cli
pop
push
jo
cld
sbb
jg
fadd
xor
mov
xchg
mov
repz
push
and
mov
xchg
add
cmp
(bad)
inc
fdiv
in
mov
adc
and
loopne
out
and
(bad)
xor
aaa
mov
(bad)
cmps
ds
(bad)
scas
xor
fsubrp
(bad)
mov
arpl
add
out
outs
sahf
sub
mov
mov
sahf
icebp
data16
test
pushf
out
je
or
pushf
shl
mov
inc
jmp
nop
push
push
mov
pusha
pop
gs
xchg
jne
lock
pop
cmp
push
call
jno
jae
ret
stos
sub
jg
mov
jne
call
adc
iret
pop
add
bound
in
inc
jmp
push
outs
push
xor
xchg
retf
lock
push
int
inc
mov
push
pop
(bad)
rol
(bad)
xchg
mov
test
(bad)
fsub
xor
nop/reserved
sbb
shl
sbb
xchg
or
cmp
dec
(bad)
push
jb
mov
push
ja
add
out
mov
xor
mov
jb
fucomip
cmp
in
sti
adc
test
mov
adc
mov
jns
adc
jb
sar
pop
and
stc
pop
rol
mov
loopne
dec
in
inc
mov
enter
push
addr16
and
mov
pusha
dec
cwde
je
das
xchg
adc
add
xchg
in
or
jne
stc
fimul
sub
dec
dec
jae
stc
jecxz
ficomp
in
inc
clc
and
jnp
add
xor
or
inc
imul
in
jns
xor
jge
cmc
frstor
mov
fsub
sbb
mov
shl
cmps
xchg
jns
out
mov
loopne
and
cmp
cmps
inc
sub
gs
pop
mov
add
add
cli
xchg
pushf
nop
jbe
cmp
cs
adc
das
icebp
data16
xor
pushf
and
sbb
mov
jl
and
add
dec
pusha
xlat
dec
sbb
retf
retf
mov
cli
add
mov
xor
clc
pop
rol
mov
or
mov
pop
or
jbe
shl
into
mov
mov
dec
cmp
sub
ret
ror
dec
cwde
movs
pushf
sub
push
inc
mov
cwde
add
rcr
ror
mov
cdq
je
mov
inc
stos
xchg
lahf
(bad)
sub
push
fwait
icebp
data16
imul
fmul
retf
movs
lods
mov
fcom
stc
fidiv
or
pop
xchg
clc
gs
arpl
loope
pop
es
in
(bad)
fmul
out
and
and
aaa
jmp
repz
push
das
add
push
pop
push
mov
loop
xchg
sar
push
lock
call
in
(bad)
js
inc
les
fidiv
out
xchg
push
stc
pop
cmp
(bad)
mov
in
outs
mov
ucomiss
pop
add
ins
std
pop
aaa
test
pusha
inc
mov
xor
and
dec
outs
data16
ror
xor
push
xchg
xchg
jge
or
cli
lods
jecxz
inc
in
and
neg
pop
dec
outs
ja
xor
sbb
(bad)
jmp
es
js
mov
pop
stos
call
push
inc
adc
and
add
push
and
icebp
add
popa
and
fdivr
in
mov
sub
loopne
adc
in
mov
sar
imul
xchg
fwait
loopne
fnstcw
loope
push
clc
imul
add
lods
jmp
push
or
cdq
je
mov
inc
stos
mov
jb
dec
adc
das
icebp
xchg
cmp
cmp
pushf
lahf
cwde
or
cmpxchg
fidiv
push
int
sbb
nop
jne
inc
fsubr
in
jmp
lock
fnsave
aaa
aad
dec
das
rsqrtps
mov
pop
cmc
popf
add
mov
bound
(bad)
jge
jne
or
push
in
mov
dec
cmp
shr
cmp
xor
aas
in
xchg
ret
cmp
fistp
movs
ds
push
int
repnz
pusha
and
out
push
mov
xchg
or
jge
pop
sub
div
fcomip
popf
push
push
and
sbb
mov
fs
(bad)
cmc
ret
enter
ret
push
xchg
jne
mov
in
(bad)
(bad)
cmps
int
fimul
or
jmp
in
stos
and
test
in
jbe
xor
mov
data16
mov
mov
inc
ret
add
sbb
outs
cmp
mov
loope
int
inc
mov
jge
in
call
outs
jge
call
(bad)
outs
jno
push
out
adc
loop
enter
cdq
jo
repnz
fstp
in
movs
int
sbb
js
jecxz
int
mov
push
pop
repz
hlt
pop
xor
jo
inc
jnp
cmp
push
push
mov
movs
xchg
sbb
mov
repz
xor
popa
pushf
fmul
cmp
push
xchg
xlat
mov
aad
inc
retf
cmp
push
int3
shr
dec
and
ret
aaa
push
cmp
popf
mov
dec
loopne
cmp
xor
cmp
je
cmp
cs
fbld
dec
inc
out
icebp
mov
fmul
jmp
movs
lods
retf
popa
popa
mov
xchg
jmp
inc
mov
scas
pusha
aam
dec
push
cmp
jmp
jnp
nop
jmp
leave
fst
jmp
test
sub
jmp
jg
repz
xchg
ins
ds
pop
in
les
xchg
lds
dec
stos
adc
push
ret
jp
sbb
adc
xor
and
mov
fiadd
ficom
pushf
pop
cmp
inc
sbb
(bad)
sub
mov
pop
push
fcomp
repnz
jb
out
test
scas
sbb
add
nop
(bad)
dec
push
enter
xor
pop
call
inc
fidivr
inc
cwde
test
dec
xchg
lds
hlt
jp
retf
jle
rol
aam
sbb
pop
retf
rcl
jbe
jmp
inc
mov
in
xor
xchg
mov
cli
test
jns
or
mov
cs
fistp
xchg
or
lock
aad
ss
sub
aaa
movs
jnp
(bad)
sbb
dec
add
pusha
cs
das
jnp
adc
pop
popf
push
push
cmc
movs
fnstenv
loopne
mov
js
or
ret
mov
xchg
jne
cmp
mov
xchg
add
icebp
inc
xor
out
xor
aam
ss
lock
lods
mov
hlt
leave
xchg
mov
pusha
push
cmp
pop
shl
mov
idiv
pushf
test
ret
push
in
mov
retf
ja
xlat
movs
xchg
retf
pushf
sbb
xchg
int3
mov
scas
mov
retf
add
sbb
lods
dec
(bad)
popf
call
mov
adc
fwait
push
push
sbb
aam
xor
or
cmp
jmp
sub
iretw
fistp
add
sahf
mov
adc
iret
mov
inc
jnp
es
lds
mov
push
call
push
push
pusha
call
mov
cld
xchg
inc
push
sub
adc
adc
and
pop
push
xchg
pop
and
ins
xor
cwde
movs
dec
sub
sub
push
imul
ins
push
sar
shr
int
cmp
pushf
ret
jae
cmp
aas
das
cmp
in
pop
jg
outs
adc
cdq
lods
sbb
loope
lahf
lock
ror
rcr
mov
mov
loope
xor
ja
aam
xchg
add
stos
int3
cmp
ds
rol
pop
rol
mov
pop
repz
xchg
and
dec
inc
retf
aam
cmp
inc
out
cwde
aas
ret
xlat
push
adc
cmc
stc
jge
mov
rdmsr
sbb
icebp
dec
(bad)
mov
out
xchg
mov
jbe
fistp
mov
xchg
xchg
xchg
cmp
into
popf
and
loope
(bad)
outs
jno
pop
mov
(bad)
lods
adc
test
(bad)
lds
sub
jb
and
cld
in
daa
push
push
sti
out
in
pusha
pop
push
push
and
jae
dec
sti
xor
fisttp
loop
or
jmp
or
leave
jns
pop
pop
jns
push
test
(bad)
jo
sahf
jmp
mov
dec
stos
adc
push
ret
jp
sbb
cli
adc
sbb
aam
dec
jmp
inc
sub
mov
sub
fcmovnbe
jl
popf
sbb
jb
(bad)
xchg
bswap
and
lock
outs
push
ins
pop
xor
ja
sub
jno
or
sbb
mov
add
gs
xchg
dec
adc
inc
inc
xor
xchg
mov
push
xchg
xor
aam
inc
pop
repz
shl
pop
sub
fld
ret
mov
retf
js
addr16
mov
add
stc
mov
shr
fucomi
push
inc
cmps
into
ficom
fild
ins
push
arpl
fimul
fld
lds
xchg
jge
pop
and
(bad)
dec
les
mov
and
adc
adc
es
sbb
mov
pop
inc
or
retf
mov
xchg
pop
cmps
sar
push
mov
popa
std
test
test
cmp
dec
push
and
mov
ret
fisttp
pop
xchg
out
fsub
retf
repnz
mov
pop
sub
dec
push
sahf
mov
mov
out
js
cmp
jns
daa
daa
mov
in
aas
pop
adc
push
inc
pop
iret
mov
push
movs
arpl
loop
rol
call
add
jl
push
cmp
cmp
(bad)
sub
push
xchg
icebp
pushw
es
xchg
push
pushf
gs
ins
push
out
or
cmp
jl
and
in
pusha
pop
jp
xchg
jne
(bad)
rcr
pop
aad
test
bound
jmp
and
sbb
and
add
push
and
mov
pop
(bad)
jno
test
icebp
adc
mov
sahf
or
outs
cli
jp
jns
sbb
sub
xor
dec
xchg
imul
jg
cmps
inc
ds
cdq
ins
push
dec
loopne
mov
cli
xchg
pushf
sub
jmp
cmp
in
fistp
div
outs
cmc
popf
push
push
xchg
cs
movs
adc
sbb
xor
data16
cmc
stc
mov
mul
repz
mov
pop
lock
xchg
std
jnp
xchg
xchg
mov
sub
in
mov
cmp
jl
retf
in
sub
push
mov
jne
out
xor
in
jmp
sti
pop
popa
ret
mov
adc
mov
adc
pop
in
mul
fwait
imul
fld
fadd
push
lods
call
xor
bound
adc
xlat
and
fmul
int3
jb
mov
nop
jnp
lods
xor
jecxz
xor
inc
or
dec
pop
pop
mov
xlat
xchg
pop
cwde
jbe
pop
mov
inc
xlat
add
call
pop
cmp
mov
in
adc
and
repz
mov
sub
int3
fsubr
loope
push
(bad)
jno
inc
mov
pop
sti
mov
cmp
sub
dec
out
pop
and
xor
outs
cmp
std
movs
cmp
mov
and
cmp
mov
ss
fdiv
xchg
pop
outs
jp
call
mov
setns
adc
jno
and
movs
fdecstp
popa
and
lahf
in
xchg
cdq
or
cld
fisub
add
fidiv
cwde
test
mov
lock
inc
push
mov
cmp
jnp
dec
mov
or
jmp
repz
jp
push
push
adc
jle
jmp
cdq
mov
or
or
mov
rcr
xchg
cmp
mov
push
and
cmp
(bad)
jl
popf
sbb
push
push
(bad)
xchg
dec
aaa
xor
das
movs
push
ror
cdq
jp
add
out
jl
test
rcl
push
rcr
push
mov
neg
cmp
cmp
pop
xlat
out
dec
add
ins
mov
jmp
pop
add
int
rol
mov
cwde
add
ins
or
jg
or
repnz
mov
mov
add
push
mov
push
mov
nop
sbb
mov
iret
xchg
mov
ret
enter
dec
lods
popf
mov
fistp
fnstenv
push
fsubr
xchg
lsl
sub
das
sbb
and
mov
xlat
test
sbb
sub
push
and
jmp
addr16
jg
aaa
push
inc
repz
fistp
dec
sbb
retf
jmp
pop
outs
rep
xor
mov
push
push
cmc
popf
loopne
hlt
ret
dec
fsubr
sbb
pop
(bad)
jno
mul
inc
cmps
nop
mov
ret
mov
add
add
jns
mov
jns
out
mov
sub
xchg
cmp
loop
int
push
stos
mov
inc
adc
or
scas
mov
mov
cmp
test
sub
and
dec
loope
cdq
repnz
add
jl
ror
mul
(bad)
mov
daa
and
retf
jle
pop
and
test
js
jae
add
jne
leave
lods
adc
add
in
cmps
and
outs
(bad)
repz
loop
fimul
mov
lock
call
cmp
inc
sub
cmps
push
xor
dec
cmp
cwde
mov
push
inc
cld
sub
inc
jecxz
bound
jge
xor
jo
test
(bad)
pop
adc
es
fild
push
stc
or
push
or
jl
xor
push
or
in
push
sub
mul
dec
iret
mov
repnz
retf
add
imul
(bad)
push
push
xlat
cs
ss
adc
or
mov
sar
test
sahf
mov
lock
clc
lods
in
dec
call
inc
mov
adc
cmp
scas
xor
cwde
fs
loope
int
push
pop
shl
call
(bad)
mov
(bad)
std
xor
add
(bad)
adc
pushw
ins
jg
or
movs
sub
inc
inc
or
jl
ja
(bad)
mov
in
xchg
dec
sbb
cli
dec
push
ret
jmp
jo
dec
sbb
sbb
add
repz
push
xor
shr
push
into
mov
adc
xor
mov
mov
ret
(bad)
push
xor
pop
outs
xor
fwait
cmp
jp
mov
push
imul
xchg
(bad)
xor
jg
scas
in
sahf
imul
mov
jnp
push
out
mov
inc
lock
mov
lahf
mov
and
or
jle
scas
call
add
add
xor
pushf
dec
jl
push
or
dec
sbb
ss
lock
mov
popf
hlt
pop
xchg
int
scas
add
popa
loop
add
mov
and
and
push
test
outs
inc
xchg
in
xor
cdq
and
inc
adc
push
push
inc
ret
xor
pop
(bad)
lds
mov
mov
dec
jmp
xchg
dec
add
pusha
imul
iret
push
out
mov
and
and
inc
ja
or
sub
fdiv
jp
push
frstor
std
test
rcl
jl
ret
or
sub
pop
mov
sahf
xor
aad
or
or
pop
mov
ds
lock
push
jmp
test
push
cwde
aas
cmp
stos
push
cmp
adc
lar
cmp
int
retf
dec
(bad)
cwde
mov
int
push
mov
jbe
loopne
push
movs
call
out
cmp
pop
sbb
or
fstp
mov
cli
jmp
mov
hlt
repnz
int
jo
push
nop
push
arpl
and
adc
jle
push
repz
std
push
inc
jnp
es
xor
es
leave
push
mov
frstor
jns
int
add
mov
sti
neg
push
xchg
lock
sahf
mov
mov
sub
ja
fsub
pop
in
mul
xchg
imul
fist
retf
pop
leave
pop
call
outs
jge
popf
je
test
push
cmp
cmp
mov
pop
cmp
mov
cmp
xor
test
sub
dec
push
in
xchg
dec
aas
dec
xchg
jne
(bad)
test
aam
jmp
xor
inc
(bad)
jge
sub
push
bound
fs
and
movs
xchg
not
cmp
cmp
push
xchg
(bad)
mov
aad
in
aam
xor
add
rcr
and
aaa
push
movs
js
ds
dec
push
shl
pop
cmp
ja
or
mov
inc
xor
movs
aam
das
icebp
leave
push
out
popf
xchg
lahf
jb
cli
test
scas
sbb
fsubp
jl
daa
inc
or
sub
retf
pop
or
adc
inc
xor
xor
(bad)
jns
gs
aam
push
and
dec
inc
retf
jnp
cmp
into
mov
(bad)
cmps
adc
inc
std
xor
add
outs
addr16
ret
dec
xor
jge
loopne
mov
out
mov
xor
dec
mov
stos
xchg
js
mov
leave
xor
add
pusha
pop
xchg
clc
push
das
icebp
data16
gs
push
pusha
add
pushf
loop
cmp
lahf
in
cmp
aaa
push
inc
repz
fstp
cmp
push
pop
and
test
retf
cmp
pop
fbld
je
mov
mov
call
pop
movs
sbb
test
jns
into
mov
pop
mov
inc
std
add
pop
ret
add
lods
xor
jns
loopne
cs
fild
inc
cmps
inc
arpl
cmp
inc
loopne
mov
mov
mov
xchg
not
pop
xor
(bad)
pop
movs
push
dec
dec
std
popf
push
pushf
out
je
test
or
xchg
or
neg
shl
gs
xchg
aas
jmp
cdq
aas
test
or
loope
js
loop
mov
pop
xchg
test
pop
mov
(bad)
mov
xor
rol
into
mov
scas
sti
sub
mov
inc
sbb
retf
sbb
in
mul
imul
push
inc
sub
daa
xchg
push
int3
pop
js
sbb
rol
push
adc
imul
jnp
push
out
mov
pop
sbb
lock
mov
lahf
mov
mov
jle
nop
jne
inc
jg
mov
ficomp
mov
gs
xchg
push
icebp
lds
inc
xchg
fdiv
cdq
jge
stos
ret
sub
mov
mov
imul
fsubp
inc
jns
jp
sti
cmp
inc
sub
js
xchg
adc
ret
(bad)
out
int3
movs
push
mov
cwde
(bad)
xchg
ret
pop
push
lds
inc
and
add
jecxz
mov
ja
add
ror
in
outs
jp
stos
test
mov
xchg
inc
fdivr
ins
jg
or
sub
jg
push
jae
jmp
inc
mov
mul
dec
(bad)
mov
mov
nop
push
pop
addr16
std
into
inc
jae
xor
cmc
(bad)
pop
fwait
lea
pop
xchg
sub
arpl
fcmovnb
mov
jmp
sub
pop
(bad)
jno
mov
pop
lock
jns
cmp
mov
mov
repz
adc
pop
outs
inc
call
jae
cmps
inc
xchg
jb
iret
into
mov
addr16
inc
mov
fld
gs
outs
push
ins
cmc
pop
jmp
jnp
and
add
adc
ja
push
mov
outs
push
sub
in
fstp
xchg
stos
jo
dec
sbb
sub
test
and
xor
mov
sti
pop
push
fstp
and
sahf
push
jp
push
mov
out
cmp
cld
stos
imul
outs
in
mov
push
sbb
push
imul
pop
inc
cmps
inc
mov
push
pop
mov
ror
imul
lds
xchg
call
adc
movs
push
jno
movs
cmc
popf
(bad)
fimul
sub
sar
sahf
jecxz
lahf
push
and
not
xchg
lahf
in
dec
pusha
pop
das
data16
jne
pop
scas
and
addr16
fsubrp
xor
mov
push
xchg
mov
pop
in
(bad)
rol
stc
shr
cmp
into
rol
daa
or
inc
mov
not
jns
mov
lods
jns
data16
(bad)
xchg
scas
cmp
loope
pop
scas
inc
sub
neg
jb
ret
into
mov
jo
mov
test
xchg
idiv
pop
dec
mov
and
add
and
leave
or
rcr
mov
mov
popa
les
imul
(bad)
and
push
icebp
lds
ss
inc
mov
push
xchg
lods
push
cmc
pop
lds
fnstsw
mov
and
in
into
add
stos
dec
clc
mov
ja
push
rcl
ret
xor
mov
xor
inc
dec
jo
(bad)
cmc
or
(bad)
ret
gs
push
(bad)
mov
pusha
and
push
push
(bad)
test
lahf
pop
enter
icebp
jb
aad
pop
loope
pusha
cmp
mov
sbb
adc
loop
xor
das
cmps
rol
dec
add
(bad)
mov
repnz
sub
sti
mov
(bad)
jns
jg
jge
(bad)
mul
loope
sbb
bound
(bad)
test
inc
ins
clc
addr16
adc
jmp
repnz
sbb
mov
ja
sar
pop
push
vaddpd
nop
xchg
mov
loopne
dec
int
mov
jo
jl
push
and
xchg
mov
outs
adc
lock
ret
cmc
pop
jmp
jnp
loope
jge
icebp
aaa
stc
fisubr
jns
inc
or
mul
cmp
ror
mov
bound
rcr
xor
into
ins
mov
fsubp
int
adc
jns
mov
mov
pop
or
mov
lahf
scas
inc
dec
sbb
inc
push
stos
xor
jo
aaa
inc
out
in
mov
mov
into
xchg
(bad)
movs
aad
xchg
mov
in
adc
or
push
inc
add
(bad)
in
cs
(bad)
xor
into
movs
fs
(bad)
arpl
repnz
jecxz
call
shr
ret
mov
pop
in
xchg
dec
sub
xchg
jne
jmp
retf
add
add
mov
jnp
es
push
clc
xchg
cmp
inc
adc
ret
and
pop
jns
or
shl
jb
jl
div
jns
stos
mov
mov
sbb
inc
pop
sbb
cdq
and
imul
push
int
push
jmp
movs
inc
mov
jno
into
sub
js
adc
cmp
cwde
jl
stos
and
mov
gs
mov
fdiv
loop
add
ja
mov
push
mov
ret
out
dec
or
and
retf
cwde
test
mov
and
ret
adc
arpl
leave
shl
jmp
sti
repnz
pop
ret
dec
push
inc
daa
retf
dec
out
mov
xchg
dec
sub
movs
rcr
adc
scas
mov
iret
mov
pop
ins
jno
or
call
das
xor
and
dec
(bad)
int3
rol
pop
add
jmp
mov
popa
add
cmp
dec
jmp
pop
scas
rcr
jecxz
test
mov
and
sub
mul
popf
push
les
push
add
and
int3
and
mov
cmc
jno
in
mov
rep
and
jno
out
outs
movs
ret
pop
inc
sbb
push
out
imul
icebp
jno
mov
stos
inc
mov
push
imul
inc
and
pop
adc
out
stos
(bad)
mov
leave
and
mov
push
popf
xchg
imul
jnp
sub
sbb
sbb
fadd
iret
mov
fild
iret
loope
mov
dec
xlat
add
push
xlat
out
test
add
push
pop
jns
or
push
shl
jne
in
xor
(bad)
mov
retf
mov
sub
movs
adc
cmp
cli
push
int
push
in
xor
retf
(bad)
push
mov
imul
call
pusha
inc
mov
jecxz
fsub
rol
jle
bound
push
mov
sbb
test
mov
ja
(bad)
jl
aaa
push
pop
repz
jle
(bad)
retf
movs
std
test
pop
xor
js
mul
fcom
fidivr
pop
repz
xchg
xor
loope
cmp
push
inc
push
lock
cmp
mov
jl
jns
xchg
mov
loopne
movs
jl
jae
push
inc
cmps
into
sub
mov
xchg
inc
sbb
or
scas
mov
mov
cmp
test
mov
add
cmps
fcmovne
xchg
jl
or
movs
fild
mov
jecxz
mov
outs
lea
fstp
pop
or
pusha
jnp
xor
cdq
mov
fild
stc
mov
ret
push
jle
repz
ss
mov
retf
imul
jp
into
mov
lock
pop
xor
retf
push
cmp
mov
jp
add
mov
xor
loope
push
test
(bad)
inc
cmps
out
jb
out
mov
addr16
mov
(bad)
sahf
lea
xchg
push
sbb
ins
cmc
pop
sbb
test
xchg
pushf
cmp
sbb
add
iret
fisubr
dec
pusha
sub
dec
xchg
dec
xchg
std
dec
icebp
int3
dec
inc
dec
sbb
sub
jns
inc
inc
cmp
loop
icebp
pop
push
and
and
hlt
test
mov
inc
(bad)
pop
xor
xor
retf
aad
xchg
std
jns
adc
outs
scas
sbb
adc
jl
push
loope
jno
mov
adc
iret
pop
push
or
lods
mov
mov
cmp
push
mov
cmp
push
das
icebp
in
add
xor
mov
repz
mov
loop
push
push
mov
pusha
pop
adc
xchg
add
adc
aas
mov
lds
repz
xor
inc
pop
adc
adc
and
outs
and
sahf
push
jp
es
iret
sbb
fld
mov
push
xor
mov
leave
adc
xor
imul
es
jecxz
mov
jge
xchg
call
in
jns
enter
sar
in
inc
mov
ret
(bad)
mov
cmps
jmp
pushf
clc
xchg
or
pop
ror
pushf
push
out
jo
push
mov
cmc
push
mov
pusha
mov
stc
sub
in
add
jl
mov
or
in
ins
sub
push
or
mov
mov
pop
push
test
(bad)
mov
mov
sub
xchg
(bad)
ins
repz
movs
add
inc
add
int
outs
fwait
or
out
cmp
not
imul
push
inc
sub
cdq
ins
pop
dec
mov
mov
and
pusha
iret
xchg
lock
retf
and
dec
outs
jmp
lahf
or
jl
icebp
cld
dec
test
sbb
sbb
xchg
cmp
out
lea
mov
sub
lods
pop
push
scas
and
inc
addr16
push
arpl
push
stos
mov
cmp
xchg
lods
mov
popa
out
pop
ja
dec
and
cmp
pop
cmc
pop
ja
mov
shr
(bad)
mov
dec
cmp
add
or
shr
pop
push
imul
push
int
inc
mov
jge
xchg
call
(bad)
popf
(bad)
popf
je
xchg
jle
outs
sub
mov
test
push
movs
cmp
popf
push
pushf
mov
repz
sub
mov
add
or
and
outs
sbb
cmp
lods
mov
jo
adc
shr
stos
or
mov
inc
cmp
sbb
or
mov
ror
retf
shl
jbe
jmp
dec
lock
sti
daa
push
add
pop
sbb
pop
data16
add
xor
or
add
daa
enter
sbb
cmps
xor
in
mov
es
xor
push
mov
xchg
push
aaa
jge
mov
cmps
shl
daa
push
out
mov
dec
sub
sbb
lods
dec
inc
pop
inc
and
popa
ins
nop
jne
push
mov
pusha
pop
gs
mov
leave
and
imul
xchg
clc
add
lods
xchg
stos
mov
vdivsd
test
sar
popa
pushf
int3
sahf
repnz
in
add
and
stos
dec
clc
mov
outs
in
mov
xchg
les
movs
cwde
cmp
push
inc
(bad)
push
rol
call
sbb
sbb
mov
sub
xor
(bad)
out
icebp
in
loope
jg
mov
out
je
sbb
sub
inc
pop
daa
add
enter
fisttp
dec
xchg
ror
sahf
jmp
sub
pop
xor
mov
xor
xchg
pop
repz
mov
sub
repnz
or
test
pop
xor
fld
mov
je
in
test
jl
out
inc
(bad)
ja
into
cmps
in
xor
ja
mov
push
mov
cmps
out
cs
jl
pop
or
xchg
pushf
push
jmp
(bad)
pop
inc
xchg
(bad)
outs
adc
cdq
lods
sbb
loope
lahf
lock
fisttp
rcl
push
mov
mov
dec
test
mov
xlat
xchg
pop
repz
pop
and
jae
in
xchg
xor
dec
inc
mov
cwde
aad
test
sbb
and
push
imul
les
sub
sbb
add
stos
cmp
mov
aaa
cmc
stc
mov
mov
push
cdq
cs
fistp
loope
mov
ins
cli
add
movs
jg
xor
fdiv
jl
das
jp
push
mov
dec
imul
idiv
(bad)
cld
lea
call
lods
sbb
sbb
loop
push
daa
jne
fisub
test
rol
fldcw
mov
push
sub
or
cmp
fdiv
xchg
sbb
and
mov
push
fisttp
jmp
mov
add
loopne
push
sti
sbb
inc
inc
sub
in
clc
adc
cmp
jns
lea
cmp
call
sub
movs
jg
xor
popf
hlt
pop
sahf
cmp
xchg
frstor
iret
sahf
into
dec
(bad)
fdivr
ret
cmc
pop
jmp
jnp
push
or
nop
sbb
cs
push
add
dec
sbb
adc
sbb
jge
pop
mov
daa
xchg
add
lahf
add
shr
sti
cmp
fdiv
xor
aam
pop
call
test
or
push
adc
aas
ret
xlat
dec
xchg
adc
repnz
lahf
cs
fild
mov
iret
(bad)
pop
xchg
lea
xor
or
jmp
xor
repz
fninit
icebp
data16
cli
xchg
push
pushf
jb
stc
jnp
into
fstp
and
jg
push
fadd
iret
cdq
sub
sub
pop
lahf
jne
jnp
(bad)
imul
pop
jp
xchg
and
sahf
xchg
adc
push
or
or
push
xor
fldenv
loop
xor
daa
xor
mov
mov
sub
(bad)
mov
stos
(bad)
imul
mov
add
fnstsw
sub
jo
add
sar
cmp
xor
dec
mov
sub
fs
popf
or
mov
sub
pop
xor
sbb
sbb
add
add
push
jge
mov
mov
xchg
inc
(bad)
hlt
fisub
jp
mov
dec
jg
mov
clc
jecxz
push
xchg
sub
cmp
repz
mov
pusha
push
cmp
pop
xor
addr16
adc
aad
shl
std
test
push
std
mov
cwde
movs
pushf
sub
inc
push
inc
cmps
into
sub
mov
pop
call
jnp
arpl
push
int
cmp
aas
and
jge
mov
lods
int3
push
cdq
repnz
add
jl
ror
mul
(bad)
mov
daa
and
retf
jle
pop
and
test
js
adc
mov
leave
lods
adc
add
in
shl
shl
xor
or
lock
and
sub
jl
adc
lods
xor
cdq
and
imul
pop
inc
cmps
rcl
xchg
jmp
adc
into
mov
addr16
inc
xchg
fisttp
popa
and
(bad)
outs
push
add
ins
cmc
pop
jmp
jnp
and
cmp
aas
push
mov
inc
push
sub
jmp
jnp
movs
push
call
mov
push
xchg
lods
in
fs
pop
test
sub
rol
dec
push
cmp
jo
push
mov
cmp
inc
add
int
outs
fwait
int3
push
sbb
int3
int
cmps
pop
and
shl
inc
sub
cdq
ins
sbb
imul
jmp
js
outs
test
jne
dec
lahf
(bad)
sub
shl
icebp
data16
ret
pushf
lock
out
cdq
in
or
xchg
sbb
xchg
push
aaa
scas
retf
pusha
pop
pop
aaa
sar
pop
mov
sti
inc
jnp
xor
jmp
and
inc
sub
loop
mov
repz
loope
test
dec
and
(bad)
jno
inc
js
mov
in
stos
ret
mov
pop
inc
std
adc
adc
cmp
mov
loopne
fs
enter
dec
push
xchg
xor
push
call
(bad)
cmps
bound
xchg
test
push
xchg
or
fist
or
pushw
ins
mov
and
sbb
sbb
ja
adc
mov
add
gs
xchg
aas
ror
and
xchg
dec
mov
dec
inc
sbb
mov
mov
mov
sub
rol
mov
mov
jne
loop
jno
icebp
adc
data16
mov
mov
xor
adc
call
imul
xor
daa
jmp
jo
pushf
arpl
jmp
cmp
mov
fistp
out
push
ins
loop
retf
pushf
and
pop
es
mov
pop
push
hlt
jg
jmp
leave
loop
mov
add
gs
sbb
pop
and
test
hlt
in
jg
add
cmp
push
xchg
hlt
mov
stos
cmc
add
mov
and
mov
aaa
(bad)
jno
test
pop
lock
sti
sar
inc
mov
mov
mov
repz
inc
aad
xchg
add
imul
dec
fistp
mov
jge
sub
aam
into
ror
xchg
jne
jnp
cmp
xchg
sub
(bad)
rcr
cbw
xchg
ror
or
arpl
pop
or
or
shr
sbb
fisubr
jmp
test
mov
push
push
ss
pop
test
jmp
and
pop
jns
or
js
mov
jmp
sub
sub
add
push
ret
push
test
xlat
jns
out
mov
add
add
ja
sar
pop
mov
stc
pop
inc
mov
jge
imul
(bad)
mov
cmps
bound
cmp
xor
inc
add
pusha
retf
(bad)
dec
out
ss
ror
popf
xchg
outs
jb
cli
jnp
scas
sbb
and
loope
aaa
fdiv
sbb
int3
dec
xlat
add
aaa
jmp
mov
loopne
push
or
mov
mov
add
shl
rol
mov
bound
cs
loop
in
pop
jg
dec
push
jnp
cmp
adc
and
icebp
fimul
cwde
movs
pushf
sub
push
inc
cmps
into
sub
jbe
ins
push
loopne
imul
cmp
mov
xchg
add
mov
jecxz
(bad)
in
xchg
jg
push
(bad)
not
mov
xchg
sbb
test
in
add
lock
aaa
push
mov
call
and
xchg
cmp
mov
fwait
mov
fdiv
push
imul
mov
xor
popf
lahf
iret
mov
jno
cmp
xor
aas
push
jb
mov
retf
ja
std
xor
imul
or
push
scas
in
rcl
cmp
or
call
pop
bound
mov
pop
rol
cmp
push
ret
(bad)
(bad)
into
popa
and
push
jno
shl
mov
xchg
imul
mov
popa
add
dec
sbb
retf
sub
imul
jmp
jae
cmp
leave
(bad)
add
add
xchg
repz
and
or
add
mov
or
mov
mov
outs
addr16
repz
pop
jmp
arpl
ror
imul
add
pop
call
cmps
cmp
add
lds
xchg
xchg
jge
shr
dec
mov
jg
push
push
xchg
xchg
mov
or
sbb
cmp
outs
add
pusha
or
dec
dec
cmp
and
aas
fcom
add
adc
jg
cmps
sbb
ss
jb
xor
call
shr
fsubr
loope
or
(bad)
jno
jmp
in
xor
add
adc
dec
pop
inc
enter
movs
sbb
jecxz
xchg
daa
loope
mov
and
add
cmc
sahf
jl
call
out
outs
in
test
mov
(bad)
pop
movs
repnz
pop
jmp
jnp
or
or
(bad)
aam
nop
push
push
cmp
sbb
mov
ja
addr16
mov
push
stos
js
in
or
add
add
cs
inc
xor
xor
jns
cmps
and
and
sahf
push
jp
push
add
stos
enter
ret
in
paddq
mov
fwait
dec
(bad)
mov
outs
int3
dec
rcl
(bad)
and
repz
(bad)
sub
fimul
aaa
sar
loope
test
pop
inc
jg
lahf
pop
(bad)
or
or
jge
add
mov
aam
pop
lods
out
imul
sar
scas
or
fistp
dec
imul
xor
js
xchg
xor
movs
xchg
xlat
arpl
repz
bound
sub
push
cmp
add
add
addr16
mov
sbb
imul
cld
and
xchg
cli
pop
or
test
das
mov
pop
dec
cmps
inc
pop
mov
popf
pop
bound
jge
pop
add
jp
imul
lahf
movs
and
int3
shl
xchg
pusha
bound
sub
add
push
or
nop
call
test
pop
fcmove
(bad)
sub
mov
std
test
push
xor
ja
dec
mov
mov
sub
in
mov
mov
sar
popa
pushf
int3
sahf
cmc
aam
in
rcr
in
daa
dec
out
mov
pop
add
xlat
outs
outs
repz
int3
ins
push
(bad)
pop
xor
inc
repz
pop
inc
cmps
ss
add
rcr
rcr
xor
jbe
xchg
icebp
imul
daa
imul
fbld
stc
or
loope
call
add
nop
in
ja
cld
loope
(bad)
dec
adc
mov
dec
mov
jmp
or
mov
xchg
add
shl
push
push
test
push
jno
jmp
jp
sti
sbb
cmp
mov
mov
out
outs
cli
cmp
jns
sbb
xor
sbb
fwait
cmp
shl
push
data16
mov
push
add
pop
bound
add
jb
push
cs
dec
enter
addr16
popf
pop
ins
push
and
sub
xor
pop
jnp
rcl
cmp
mov
lods
lock
repnz
add
ins
jb
(bad)
std
dec
lock
iret
(bad)
push
or
cmps
mov
dec
xchg
cmp
cmp
inc
pop
jns
push
test
(bad)
mov
mov
inc
pop
pop
test
data16
mov
mov
push
ret
bound
lods
inc
loopne
fwait
loopne
leave
jl
pop
loope
inc
sub
mov
jb
call
or
adc
cmp
bound
cmp
(bad)
mov
ror
out
fldcw
movs
dec
add
add
add
or
nop
add
sbb
loope
call
or
xchg
xchg
jne
xor
sub
ret
mov
jmp
inc
fld
xchg
lods
jne
cmc
pop
repz
push
test
mov
sti
adc
or
aas
ret
aad
out
inc
std
pushf
adc
daa
lea
or
push
scas
jg
dec
and
xchg
lea
int
or
popf
mov
ret
xchg
jp
imul
fbld
(bad)
adc
repz
pop
cmps
outs
cdq
pushf
dec
and
inc
add
aaa
ja
outs
cmps
pusha
xlat
xchg
dec
sbb
inc
imul
jmp
cmp
pop
jmp
mov
call
pop
jg
scas
sbb
cmp
and
mov
int3
or
iret
js
ins
in
mov
outs
popf
not
and
call
dec
dec
cmps
inc
sar
and
in
mov
repnz
fbstp
(bad)
cmp
lods
pop
and
pop
and
popw
mov
or
arpl
sub
sbb
leave
mul
cdq
mov
shl
ins
pushf
push
scas
enter
pop
out
jecxz
aas
in
mov
pop
and
jnp
add
inc
add
push
adc
test
pop
jg
mov
sbb
xor
sub
sti
or
ror
daa
into
ds
mov
pusha
xchg
adc
inc
aam
arpl
out
push
outs
xor
sar
fisubr
xor
pop
call
rol
cmp
add
outs
inc
jno
and
cdq
lea
jl
scas
xor
mov
and
dec
ret
add
xor
pop
call
shl
push
fs
(bad)
(bad)
lods
sub
inc
or
js
fadd
xchg
push
call
call
mov
add
mov
dec
scas
in
mov
adc
dec
aam
push
scas
adc
pop
in
idiv
sub
pop
fcmovb
stc
pop
rcl
in
stos
pop
call
inc
cmp
bound
jb
(bad)
xchg
(bad)
sbb
add
fs
xchg
lods
jnp
loope
mov
fdecstp
(bad)
hlt
mov
and
pop
dec
sbb
popa
out
mov
adc
int
jge
xchg
std
push
nop
ins
xor
add
mov
jge
cmc
popf
add
(bad)
es
es
stos
mov
sbb
xor
lock
sbb
in
inc
mov
inc
xchg
test
push
dec
aam
push
scas
adc
pop
in
idiv
sub
add
add
imul
mov
in
cdq
ins
pop
dec
mov
mov
mov
mov
(bad)
cmp
dec
lahf
sub
popa
aad
stc
mov
arpl
stc
and
pop
mov
ss
sbb
mov
daa
std
(bad)
fisub
add
xlat
add
jg
ficom
pop
stos
outs
mov
and
or
popa
and
movs
xchg
cmp
fidiv
into
and
iret
xchg
(bad)
lea
lods
inc
(bad)
adc
mov
lods
pushf
int
retf
cmp
sub
(bad)
xchg
sub
rcl
pop
or
popf
mov
test
add
hlt
pusha
retf
(bad)
push
out
data16
arpl
dec
mov
jecxz
cmp
aas
call
mov
dec
pusha
xlat
xchg
pop
pop
xchg
cli
pop
adc
and
jp
inc
xlat
in
mov
lods
mov
mov
jmp
dec
loopne
push
adc
or
imul
in
xor
pop
mov
mov
cwde
pop
stos
stc
js
mov
(bad)
pop
out
and
stc
ret
rol
cmp
push
inc
inc
adc
xchg
jns
push
movs
push
mov
cmp
mov
(bad)
xchg
mov
test
(bad)
fsub
and
ins
cmc
cmp
xlat
sar
pop
xor
dec
and
adc
es
jo
pop
call
je
imul
push
and
(bad)
int
stos
xchg
retf
lods
or
mov
or
ds
retf
mov
pop
xchg
jg
push
lock
mov
inc
std
adc
inc
out
int3
movs
les
ret
pop
xor
pop
jmp
ja
xchg
xchg
lea
xor
retf
fwait
and
(bad)
lods
(bad)
cmp
das
cmp
ror
popf
aam
jmp
mov
push
fs
add
imul
(bad)
mov
cwde
jnp
ficomp
int
xchg
cmps
sbb
mov
or
aam
pop
jg
retf
out
icebp
cmp
xor
push
push
ja
push
ret
mov
adc
add
lods
xor
aam
inc
scas
adc
cmp
iret
std
sub
cmp
fist
mov
inc
mov
mov
dec
gs
loope
push
adc
push
aas
mov
mov
sub
pusha
nop
lods
lahf
nop
jle
pusha
adc
pop
cli
mov
mov
push
push
dec
fidiv
inc
or
ins
and
ret
cli
nop
mov
ret
fisttp
pop
popa
xchg
rol
cmp
mul
mov
sysret
cwde
and
pop
dec
sbb
cmp
push
cvtps2pd
jmp
rcl
movs
jmp
mov
mov
cdq
lea
int
jne
movs
popa
adc
pushf
adc
dec
lahf
sub
pop
movs
bnd
cwde
or
mov
or
lods
add
sbb
std
xchg
call
mov
mov
xchg
or
fiadd
(bad)
mov
mov
out
push
imul
lods
jns
inc
mov
adc
push
out
gs
call
imul
hlt
adc
aaa
daa
ret
adc
cmc
stc
int3
add
(bad)
out
mov
xchg
xor
outs
cmp
fcmove
loope
mov
xchg
mov
cmp
(bad)
mov
adc
mov
repz
ret
outs
das
push
xchg
add
sub
jge
shl
fyl2xp1
imul
pushf
gs
jnp
lods
xor
fwait
sbb
in
xor
mov
fisub
cli
repz
mov
jl
xlat
dec
xchg
shl
mov
test
call
xor
mov
fist
fist
mov
std
dec
adc
cld
shr
xchg
aam
jg
adc
pop
outs
rcr
push
xor
aaa
push
push
int
push
fsubrp
xor
mov
xor
or
dec
cmp
mov
fild
movs
or
xchg
or
xor
fistp
ss
push
ja
or
fmul
int3
sub
das
(bad)
call
retf
ret
outs
out
xor
outs
adc
xor
inc
cmp
xor
aam
adc
rep
and
jmp
sub
add
jno
icebp
add
pop
sub
pop
adc
dec
add
daa
daa
fistp
mov
scas
mov
retf
push
dec
(bad)
fdivrp
push
repnz
xchg
ficom
cwde
mov
cmp
jp
sbb
sub
rcr
out
push
ins
cmc
imul
mov
rcl
push
jecxz
pop
and
add
jmp
jo
mov
ss
jb
sub
rsqrtps
out
sub
les
add
or
loope
mov
call
xor
mov
pop
call
adc
cmp
addr16
cmps
ret
fwait
mov
cdq
mov
xor
sbb
scas
mov
call
(bad)
mov
or
je
cmp
xor
lock
dec
jno
xchg
or
es
sub
sbb
xor
jecxz
mov
xchg
or
call
cmp
pop
mov
dec
jecxz
push
and
xchg
sub
inc
xor
mov
ss
repnz
xor
mov
jmp
jmp
push
mov
and
push
ret
push
aad
inc
mov
rol
neg
push
mov
jecxz
dec
mov
je
xor
addr16
aas
(bad)
mov
aaa
mov
xor
sub
add
fistp
pop
int3
jb
push
or
fidivr
cmc
addr16
pop
pop
xor
jmp
or
dec
pusha
pop
retf
inc
cmp
and
fistp
je
dec
sbb
push
das
nop
imul
hlt
nop
jmp
pop
mov
(bad)
repnz
out
adc
cmp
shr
adc
jns
popa
or
or
and
and
repz
cmp
call
rcl
or
mov
lds
nop
push
scas
jge
inc
sahf
pop
(bad)
push
ret
icebp
ds
mov
push
pushf
call
jae
loop
inc
mov
mov
inc
xor
mov
mov
push
(bad)
fsubr
ss
rcl
fist
xchg
ss
adc
inc
inc
cmp
(bad)
out
or
jmp
jmp
mov
push
sti
rcl
sbb
int3
jmp
and
cdq
retf
pop
in
cwde
test
cmps
inc
sub
lea
xchg
ret
int
xchg
(bad)
mov
mov
adc
in
(bad)
pop
and
out
cmc
out
je
sub
movs
dec
pop
call
push
pusha
(bad)
jbe
call
dec
fdiv
sub
fldcw
into
and
inc
xor
xor
mov
adc
jb
out
dec
call
sub
and
in
test
mov
popf
outs
sub
mov
lods
outs
in
mov
loop
cmps
push
cmps
movs
jns
sbb
imul
push
inc
mov
into
add
pop
call
rol
vunpckhpd
and
pop
(bad)
push
jle
sahf
not
aas
pushf
push
pushf
les
push
inc
mov
lock
icebp
outs
inc
or
es
cmp
sub
add
popa
mov
test
(bad)
inc
fist
push
repz
pop
add
std
adc
xor
in
out
sub
mov
imul
lds
rcl
sbb
addr16
jbe
add
sub
pop
outs
pop
xchg
mov
pop
dec
jb
aas
rcr
(bad)
add
(bad)
and
mov
bound
xor
mov
dec
mov
push
frstor
and
repnz
pop
jns
loope
idiv
test
jge
xchg
mov
js
add
test
mov
test
int3
jae
movs
(bad)
out
test
je
stos
adc
pop
rol
retf
(bad)
jns
inc
sub
push
or
repz
xor
adc
mov
fisttp
xor
inc
std
adc
dec
and
jns
pop
mov
adc
movs
sahf
or
inc
call
retf
dec
cwde
xor
(bad)
popf
mov
dec
in
lods
jle
imul
inc
and
dec
dec
movs
movs
dec
cdq
adc
(bad)
xor
jle
vcvtdq2ps
and
scas
lods
enter
ja
mov
stc
nop
cmp
addr16
std
push
pusha
ins
pop
retf
push
add
movs
aas
fild
and
adc
sub
jl
xchg
daa
sahf
jmp
in
pop
jne
jp
in
mov
lods
inc
xchg
adc
mov
push
dec
inc
xor
mov
cmp
loope
dec
mov
rol
cdq
out
xor
(bad)
mov
arpl
mov
imul
add
pop
push
xor
ror
bound
into
mov
fld
pop
es
xchg
add
test
mov
mov
add
shl
jnp
test
mov
int
out
idiv
inc
call
rol
pop
and
es
jmp
iret
sbb
sti
iret
and
cmp
add
std
adc
mov
xor
in
xor
adc
nop
inc
sub
ds
cdq
ins
sbb
inc
call
rol
mov
and
aaa
xchg
xchg
cmp
(bad)
shr
sbb
pushw
push
aas
setbe
pop
jo
sbb
xor
hlt
in
arpl
inc
and
add
xchg
add
stc
push
and
add
clc
xchg
dec
rol
and
pop
sbb
pushf
sub
dec
and
jl
div
inc
inc
mov
add
jmp
add
movs
xchg
mov
mov
scas
int
nop
push
mov
nop
add
sbb
sub
(bad)
push
shr
pop
push
and
in
jmp
call
mul
sbb
std
and
adc
outs
lea
dec
dec
jno
pusha
rcr
cld
and
jnp
inc
retf
or
scas
out
push
out
push
xchg
add
add
jl
cmp
into
push
mov
jne
(bad)
sbb
sbb
daa
enter
out
mov
push
push
mov
xchg
fimul
or
je
inc
sub
rcl
mov
fwait
bound
xchg
xchg
jns
jge
or
popa
and
repnz
stc
xchg
or
movs
lahf
retf
out
div
mov
sbb
rcr
outs
or
cmps
dec
mov
mov
out
xchg
push
jmp
idiv
pusha
js
out
inc
sbb
das
and
jns
or
or
es
fdivr
dec
and
sub
pop
lods
xor
dec
cmp
fild
push
push
into
jbe
nop
xchg
add
retf
pop
mov
inc
xchg
lea
int
push
(bad)
fdiv
popa
fld
inc
mov
popa
and
mov
and
movs
lahf
adc
fdecstp
bound
pop
ja
hlt
neg
xor
fcomp
mov
pop
out
dec
xor
clc
fcmove
adc
jnp
cmp
mov
mov
cmps
mov
stos
cmc
push
or
gs
retf
bound
cmc
(bad)
fist
push
push
iret
lods
mov
mov
sub
stc
adc
jg
lods
xor
ds
cmp
jle
sub
or
cmp
xor
mov
cmp
outs
jp
push
(bad)
mov
aam
fistp
cmps
jmp
fwait
jl
or
mov
stc
fimul
add
xor
call
xor
test
dec
sbb
mov
lods
jo
cmc
pop
lds
push
shr
ret
xor
xor
or
lock
inc
std
adc
dec
sub
cld
or
movs
je
mov
lahf
mov
or
push
retf
xchg
jge
pop
call
rol
(bad)
xchg
test
call
mov
xor
xchg
gs
repz
(bad)
adc
xchg
pop
out
pusha
dec
fisttp
jne
lods
push
fnstcw
sub
mov
mov
pop
stos
mov
es
mov
xlat
lock
jns
or
(bad)
xlat
movs
pop
popa
push
cmp
jne
sub
xchg
mov
cwde
add
add
out
mov
enter
ret
in
xor
aas
push
aad
enter
sbb
rcl
sbb
int
adc
pop
jns
das
jp
dec
repnz
hlt
pusha
pop
add
data16
mov
loope
mov
pop
cld
jbe
pop
jo
sti
popa
xchg
leave
outs
jmp
dec
dec
in
adc
(bad)
fwait
xor
fld
mov
call
ss
xchg
add
scas
imul
or
neg
aas
xor
jnp
cmp
nop
in
ins
xchg
pop
ss
jmp
cwde
hlt
push
inc
jbe
push
popf
nop
cmp
adc
movs
call
sub
loop
sti
sahf
imul
loope
and
xor
fdivr
ins
das
xchg
call
or
lock
stc
ficomp
xor
inc
or
ror
pop
mov
xchg
sub
addr16
std
pop
cwde
push
dec
jmp
int
mov
call
dec
(bad)
jge
cmc
int
and
mov
add
mov
out
or
mov
dec
aam
pop
gs
pop
mov
popf
shr
setl
mov
mov
mov
daa
push
cmp
(bad)
bound
mov
vphaddwd
mul
sar
popf
les
sbb
pop
mov
jecxz
fcomp
ja
push
push
xor
adc
inc
clc
and
jnp
mov
js
outs
dec
pop
stos
clc
dec
inc
das
cmp
dec
call
ins
ds
push
imul
jo
push
sub
xchg
mov
cwde
loopne
add
out
mov
retf
push
mov
jecxz
in
xor
rcl
ret
enter
sbb
rcl
sbb
int
mov
pop
fld
jp
dec
push
inc
hlt
pusha
outs
in
in
push
ret
pop
(bad)
scas
sub
pop
or
movs
(bad)
pop
js
mov
in
clc
or
sbb
jmp
or
xchg
add
cmp
pop
retf
pop
stos
pop
test
lods
cli
in
popa
cmp
add
or
and
sub
mov
jecxz
jl
sbb
jne
(bad)
push
adc
sub
add
rcl
out
les
adc
mov
fisub
xchg
dec
mov
xor
add
adc
imul
xor
ror
pop
std
xchg
aaa
(bad)
arpl
movs
fdecstp
and
jo
faddp
adc
adc
mov
enter
mov
lahf
call
das
es
add
xchg
add
pop
push
test
cmp
or
add
push
pusha
aaa
push
test
sub
jbe
test
push
xor
jp
cwde
dec
inc
(bad)
mov
adc
pop
imul
int3
lods
xchg
retf
pop
out
push
test
aaa
push
sub
jl
(bad)
jne
jle
xchg
(bad)
rol
add
add
pop
lock
cmp
out
jle
call
mov
vprotq
jmp
jnp
jl
les
and
js
fsubp
popf
or
or
mov
jb
jno
or
cld
fidiv
sbb
scas
loop
pop
jmp
jmp
test
cmp
sub
loope
cmps
mov
daa
sahf
jmp
jo
mov
aaa
retf
ficom
stos
and
add
or
je
lea
imul
xor
lods
arpl
jns
das
aam
cdq
je
dec
or
out
push
imul
and
pop
mov
std
xchg
or
pusha
jae
jl
pcmpeqw
mov
ins
fcomi
push
aas
movs
sbb
mov
add
xchg
jnp
or
xchg
outs
je
scas
pop
push
sub
adc
mov
adc
or
imul
in
loopne
add
sbb
xchg
outs
mov
pop
iret
push
mov
ret
ins
push
stc
adc
ja
adc
(bad)
iret
pop
addr16
adc
xor
mov
push
xchg
stc
scas
popf
sub
int3
in
cmc
lahf
jbe
aas
sbb
jb
fild
fistp
loope
and
cmps
pop
pop
push
test
leave
repnz
sti
xor
loope
mov
in
sbb
retf
xchg
js
cmp
jle
mov
xchg
repnz
test
mov
pop
shl
sub
sub
push
mov
dec
and
pusha
int3
lahf
clc
add
xchg
adc
pushf
mov
retf
sub
push
adc
ror
shl
ja
movs
in
inc
cmp
in
jl
sub
mov
xor
test
mov
(bad)
loop
jecxz
das
push
mov
xchg
and
cdq
jae
imul
mov
mov
sub
ins
mov
xchg
add
test
mov
int
sub
test
push
or
xchg
retf
jmp
xchg
mov
fdiv
dec
mov
js
addr16
mov
int3
sub
rcr
addr16
dec
cdq
add
out
into
xchg
push
or
and
jno
cld
(bad)
cmp
push
fwait
dec
xor
and
das
push
push
popf
stc
xchg
dec
jmp
jg
jl
or
loop
mul
jg
fist
scas
pop
sbb
and
jle
xor
xchg
mov
add
stos
loop
pop
and
sahf
(bad)
pop
cmp
add
sub
in
mov
add
int3
add
out
ret
int
push
test
xchg
add
outs
cdq
xchg
add
aaa
loopne
push
jae
pusha
xchg
popa
push
in
inc
sub
xchg
cmp
push
test
mov
stc
xchg
pusha
fsubp
cld
iret
outs
add
out
and
cmps
nop
xchg
in
or
in
js
test
shl
sbb
test
aaa
jmp
and
ret
sbb
ins
mov
xchg
add
adc
mov
xor
leave
pop
stos
mov
shr
ds
sub
dec
and
lock
lock
repz
push
adc
in
inc
je
adc
sub
movs
sbb
sbb
daa
pop
and
in
adc
mov
ss
adc
repz
outs
add
out
and
cmps
add
cwde
ja
push
(bad)
push
xchg
lock
fnstcw
add
mov
jae
or
mov
sub
ins
mov
mov
jnp
icebp
cmps
inc
nop
nop
xor
push
in
lock
sub
loope
cmps
mov
adc
sbb
xchg
push
xor
push
fst
shr
adc
jae
push
inc
and
and
xor
scas
push
ret
shr
mov
idiv
hlt
out
cmp
outs
icebp
ror
cmps
movs
pop
outs
and
(bad)
sub
in
mov
or
enter
pop
popf
dec
mov
test
imul
outs
mov
push
sub
xchg
push
iret
repnz
add
pop
push
and
mov
mov
sub
repnz
nop
sqrtps
jbe
mov
sbb
or
mov
ficom
fdiv
push
scas
cmp
adc
(bad)
cs
jo
jmp
shl
movs
push
dec
lahf
pop
stos
fs
psubsw
mov
xchg
jecxz
test
in
add
and
test
jne
mov
mov
sbb
in
popf
xor
mov
dec
inc
scas
pop
push
and
or
cmp
mov
or
dec
and
xlat
dec
xchg
cmp
push
adc
and
ss
cld
inc
std
adc
xchg
push
das
xchg
fisub
xchg
retf
pop
out
push
test
aaa
push
and
inc
mov
sbb
dec
pop
mov
mov
push
mov
lds
imul
or
cmps
push
push
popf
stc
xchg
cmp
addr16
not
std
push
add
and
clc
inc
jmp
add
xor
mov
xchg
pop
jnp
idiv
aaa
sbb
sbb
test
jo
mov
(bad)
shl
adc
jno
rcpps
iret
push
inc
inc
enter
(bad)
fst
xchg
adc
cmp
scas
sub
jne
std
xor
fcmovb
mov
xchg
push
cli
(bad)
ds
push
adc
mov
push
push
popf
stc
xchg
cmp
addr16
mul
(bad)
mov
outs
lea
mov
fwait
mov
add
fidiv
cmp
jg
test
dec
push
test
scas
pop
push
mov
mov
or
movs
loope
pop
daa
(bad)
movs
mov
les
scas
xchg
push
xor
xchg
bswap
push
ret
xor
cld
inc
std
adc
xchg
push
das
xchg
jae
cmp
out
hlt
fild
fstp
scas
and
imul
cdq
sub
xor
out
cmp
jle
fild
pop
xchg
mov
push
cdq
stc
loopne
loope
inc
cmp
sar
inc
and
dec
(bad)
xor
mov
mov
mov
and
pop
into
es
jnp
in
xchg
mov
cwde
or
ret
and
xor
xchg
push
sbb
enter
pop
shr
dec
push
xchg
sbb
mov
push
push
inc
sti
fistp
add
jecxz
int3
jne
retf
aad
ret
inc
pop
and
dec
mov
mov
repz
ss
sbb
adc
imul
cmp
pop
shl
cmc
popf
mov
mov
das
popf
shl
xchg
loopne
mov
adc
inc
nop
ds
cmps
call
hlt
in
add
cmp
imul
inc
adc
push
jo
mov
jnp
adc
mov
push
add
jne
add
mov
push
ret
push
inc
popa
out
adc
push
out
dec
mov
pop
xchg
stos
ss
xchg
jo
lods
pop
jo
bound
cmp
push
dec
cwde
je
cmp
loopne
into
mov
mov
mov
hlt
in
xchg
neg
test
jge
adc
mov
pusha
mov
test
imul
cmp
cmps
sahf
mov
add
jns
xor
xchg
add
cmp
loop
pop
and
sahf
mov
pop
push
call
inc
aas
dec
push
cdq
mov
mov
or
mov
xlat
test
mov
dec
xchg
xchg
mov
push
cmp
ds
mov
xlat
xchg
adc
cmp
mov
sub
mov
dec
adc
xchg
je
jp
loopne
out
pusha
mov
dec
mov
loope
pop
push
in
ud2
lahf
and
mov
adc
jmp
push
push
nop
xor
jb
cld
icebp
int
call
pop
sub
aad
mov
and
jp
dec
pushf
xor
push
shld
retf
repnz
sub
rsqrtps
inc
cwde
call
jmp
and
dec
out
int3
cs
paddsw
xchg
stc
arpl
scas
xor
ret
xchg
xchg
stc
test
xor
jb
push
je
cmp
mov
out
sub
mov
pop
(bad)
(bad)
jp
(bad)
stos
add
push
push
lods
push
mov
mov
sub
dec
sbb
fst
fst
call
lahf
aad
mov
mov
int3
sbb
mov
add
sbb
add
xor
push
mov
stc
ins
cld
jns
addr16
fwait
add
push
pop
adc
inc
(bad)
inc
sbb
cs
sbb
mov
int
adc
sahf
cmovne
or
push
cmp
popa
sub
inc
fwait
mov
mov
xor
and
and
daa
daa
sbb
push
mov
xchg
add
jl
retf
ins
mov
pop
add
lods
xchg
pop
jb
mov
adc
sub
dec
and
test
add
cli
or
xor
in
int3
ss
mov
cwde
add
(bad)
mov
push
jbe
test
mov
push
fst
test
stc
sbb
fidiv
and
jnp
jp
cmc
cmp
cmps
mov
call
add
push
mov
(bad)
jmp
pop
mov
jmp
push
mov
and
and
jnp
stos
aaa
sub
jl
xchg
in
or
dec
mov
inc
xchg
daa
jmp
aaa
sbb
jp
mov
and
sub
jmp
sub
gs
dec
movs
outs
rcl
pop
cmp
push
xchg
sub
stos
xor
sahf
scas
mov
cmp
lods
mov
pusha
mov
or
(bad)
sbb
pop
aaa
out
mov
or
pushf
imul
and
movs
xchg
sbb
mov
fidiv
pushf
test
mov
inc
and
sahf
xlat
push
cmp
mov
in
sub
inc
stos
fcmove
fdivr
pop
or
add
add
sbb
iret
push
pop
lods
dec
in
inc
mov
in
ss
mov
push
mov
lea
ds
mov
xchg
xchg
lea
mov
or
push
dec
and
out
dec
mov
jmp
add
sub
xchg
and
lds
enter
lock
(bad)
mov
and
push
test
idiv
jecxz
sahf
ja
es
mov
mov
movs
(bad)
sub
mov
mov
ror
ret
jmp
inc
and
mov
push
in
or
retf
ins
sbb
and
out
cdq
retf
test
aaa
jecxz
ds
adc
ja
xchg
mov
shr
fcmovu
inc
xlat
icebp
dec
xor
xchg
lea
data16
popf
jmp
movs
mov
or
pop
adc
sub
ret
push
jb
and
lahf
sbb
outs
add
fisubr
lods
push
cmp
xor
xor
mov
add
xchg
add
xchg
pop
inc
int
add
mov
int
mul
xor
pop
inc
retf
push
or
daa
bound
or
add
adc
add
cmp
test
ret
mov
or
call
in
add
dec
stc
imul
dec
cmps
inc
pop
mov
es
test
mov
jg
inc
jne
sbb
jmp
lds
scas
ret
sahf
daa
out
add
enter
cdq
mov
std
fidiv
adc
ja
push
sub
pop
xchg
fcomip
retf
(bad)
or
fcomp
mov
setg
imul
int3
sbb
mov
cmps
shr
xchg
jge
sbb
add
leave
test
mov
pushf
cs
and
xchg
repz
add
fidivr
mov
xchg
lea
jg
adc
fwait
shr
fild
adc
push
das
icebp
adc
call
movs
das
pop
push
(bad)
push
test
and
push
sbb
push
gs
push
push
mov
aas
mov
sub
jp
pop
gs
arpl
inc
mov
mov
push
jb
sub
int3
push
inc
dec
xchg
shr
mov
fsub
fmul
inc
stc
pop
xchg
adc
std
xor
fwait
addr16
cs
mov
(bad)
sbb
add
pushf
add
jmp
lds
pop
shl
mov
dec
call
xchg
mov
sub
mov
inc
inc
retf
or
into
in
nop
cdq
push
add
adc
ss
sbb
jbe
(bad)
std
(bad)
jno
jmp
leave
sub
sub
arpl
ror
adc
mov
pop
std
pop
(bad)
daa
sub
inc
mov
call
add
stos
adc
sbb
xor
and
(bad)
jne
inc
mov
fld
ss
pop
mov
stc
pop
push
lahf
jno
push
ins
and
repz
clc
std
fcompp
fbld
xor
mov
lods
xchg
push
aaa
jb
nop
jns
out
sahf
sbb
mov
push
pop
sbb
inc
cmp
in
inc
and
jmp
dec
test
xor
adc
or
adc
lock
loope
sub
mov
(bad)
adc
push
add
js
pop
mov
push
scas
mov
icebp
mov
xor
or
imul
ror
mov
aam
pop
jmp
xchg
jne
or
loopne
pop
ret
test
and
hlt
loop
sti
in
mov
bound
mov
and
mov
mov
pop
sub
shl
test
and
jb
inc
int3
or
push
mov
aam
push
std
or
sbb
mov
add
cmp
ins
adc
daa
ins
popf
and
gs
pop
adc
lahf
adc
shr
inc
xor
add
cmps
push
adc
retf
mov
dec
mov
cmp
sub
sbb
pop
rcl
jnp
xchg
push
pushf
mov
movs
fdecstp
imul
mov
jl
inc
jae
(bad)
fild
mov
xor
(bad)
imul
inc
push
movs
stos
pop
and
mov
mov
retf
push
and
cld
shl
dec
scas
xchg
ins
stos
and
and
mov
ss
outs
dec
sbb
bsr
xor
pop
enter
jmp
pusha
adc
xchg
loopne
es
or
mov
mul
xor
xchg
and
ror
in
adc
popa
xchg
jo
xor
mov
or
add
and
xor
and
jne
loop
inc
in
push
sub
fldcw
pop
mov
push
iret
arpl
movs
ins
cdq
jp
mov
ss
sub
cmc
pop
aas
pop
bound
das
xor
mov
fwait
cmp
sti
pop
(bad)
daa
dec
xor
addr16
fnstcw
lds
in
scas
bt
pop
outs
lock
stc
pop
xchg
ss
ds
(bad)
(bad)
mov
mov
ja
jge
popf
je
aas
xchg
cmp
ins
push
fcom
mov
stos
cli
hlt
push
adc
pop
mov
movs
fldenv
call
or
mov
mov
jo
push
imul
fcomp
sahf
mov
aad
out
imul
push
cmp
push
mov
adc
(bad)
ins
cmp
or
sbb
iret
fsubr
fldcw
sbb
cmp
pushf
icebp
(bad)
xor
xchg
mov
push
push
scas
jmp
xor
push
jl
ins
push
and
cmp
jb
jbe
out
cmp
mov
arpl
mov
sub
pop
shl
movs
in
jle
inc
movs
das
popf
shl
xchg
fwait
xchg
xor
xor
ja
mov
jne
test
add
das
mov
dec
outs
push
pop
xor
mov
adc
repnz
ficomp
cmps
push
push
cmp
sbb
inc
jbe
inc
add
add
lds
in
cmps
or
xor
inc
sbb
sbb
add
(bad)
ss
xchg
not
adc
outs
jp
jae
(bad)
mov
mov
or
loopne
or
loope
out
push
jnp
rcl
mov
xor
jmp
mov
imul
lahf
mov
cs
mov
pop
jmp
outs
xchg
or
pop
loope
mov
jo
rcl
scas
arpl
shl
sbb
je
mov
adc
push
dec
icebp
ins
cld
adc
sbb
mov
outs
inc
dec
inc
jmp
and
mov
daa
add
cs
sbb
jns
popf
add
mov
fild
fimul
fcmovbe
lea
out
pop
loope
call
cmp
and
adc
loop
xchg
jl
cwde
jg
cld
sbb
dec
sbb
xchg
fwait
popf
dec
outs
test
test
push
iret
push
pop
mov
cmps
lock
and
push
cmp
popa
or
test
imul
dec
in
inc
std
call
mov
add
es
sar
xlat
xor
scas
mov
das
in
push
cmp
cmp
je
test
imul
pop
jae
(bad)
mov
sub
adc
push
(bad)
call
hlt
cs
hlt
xor
mov
into
in
xchg
imul
(bad)
lods
leave
or
jo
add
mov
jnp
or
xchg
pop
loopne
scas
stos
jmp
int3
sub
xchg
hlt
or
retf
jmp
mov
xor
iret
push
dec
cmp
inc
std
call
(bad)
fmul
xchg
retf
pop
mov
add
out
xchg
xchg
and
(bad)
cld
pop
add
push
mov
aad
pop
icebp
xchg
dec
loop
and
and
lea
jbe
arpl
test
into
pusha
aam
arpl
push
js
cwde
jae
pusha
xor
xor
(bad)
nop
xchg
inc
mov
stos
pop
pusha
leave
outs
repnz
gs
mov
retf
add
sub
aad
std
(bad)
addr16
sub
fisttp
rcl
jecxz
ret
mov
push
xchg
adc
adc
push
int3
movs
rol
xchg
nop
ret
aaa
dec
and
jl
sar
retf
push
or
pusha
jle
ret
mov
cmp
(bad)
mov
outs
in
in
push
ret
pop
(bad)
scas
sub
push
mov
daa
xor
mov
sar
pop
pop
cdq
mov
sub
adc
mov
push
add
jmp
stos
inc
jmp
(bad)
ins
jbe
cmp
xor
xchg
pusha
adc
lds
sbb
sub
ds
push
push
add
outs
adc
(bad)
or
lods
xor
push
and
jbe
and
ins
sbb
mov
(bad)
fldenv
test
or
stc
and
(bad)
pop
push
jl
and
test
ror
out
aad
sbb
popf
ret
sub
add
xor
fistp
fs
pop
cmc
push
xlat
add
in
cs
bound
sub
pop
arpl
imul
mov
jp
loope
push
cmp
and
out
jb
xor
pop
xor
inc
in
xor
ds
push
adc
pop
and
dec
sbb
cwde
les
ds
scas
mov
cmp
(bad)
lock
(bad)
push
mov
jge
into
and
das
pop
rcl
jecxz
data16
stos
js
or
arpl
ror
iret
and
jo
cmp
sbb
dec
enter
jbe
test
dec
loope
mov
pop
mul
sbb
mov
push
inc
push
xchg
mov
dec
jns
inc
inc
std
mov
arpl
and
loop
fstp
(bad)
fdiv
(bad)
sub
xor
addr16
outs
retf
cs
jbe
adc
jbe
mov
aam
dec
gs
dec
(bad)
adc
xchg
mov
sbb
adc
(bad)
mov
sub
(bad)
jmp
dec
data16
sbb
loope
rcl
jl
cmp
sahf
(bad)
cmps
lock
push
(bad)
imul
js
data16
mov
cli
stc
fisttp
fwait
mov
push
stos
push
jo
sbb
add
pop
ja
rol
inc
push
(bad)
leave
and
or
pop
sub
and
sahf
jmp
dec
adc
and
sbb
mov
sub
shr
xchg
mov
rcr
sbb
sahf
xchg
sub
dec
fnstsw
and
out
lahf
fs
je
mov
dec
xchg
dec
call
fisttp
jmp
xchg
mov
out
sbb
outs
or
and
jl
adc
pusha
add
(bad)
mov
adc
outs
cmps
outs
int3
pop
and
adc
int
adc
in
sub
dec
test
sub
xchg
sub
xchg
xor
faddp
jl
in
cld
push
sbb
sar
jbe
xchg
les
cmp
and
push
xor
fadd
and
lds
push
cmc
or
sbb
popa
dec
push
loop
pop
push
fs
shr
enter
pusha
and
test
jge
sub
cli
pusha
mov
fimul
add
jg
aam
clc
test
fstp
cmp
pop
mov
mov
ror
aaa
add
pop
adc
aam
dec
or
mov
(bad)
int3
sub
jecxz
mov
dec
mov
pop
loop
jae
and
jge
push
es
xchg
xchg
fsubr
jb
cmps
mov
or
clc
cmp
hlt
dec
push
mov
or
dec
mov
cmp
add
bswap
jbe
adc
sahf
loope
call
jg
fstp
mov
add
cmp
sbb
inc
arpl
jmp
xor
fld
xor
xor
inc
jae
repz
or
cli
xchg
dec
mov
xchg
loop
out
inc
xchg
loope
mov
cmp
pop
je
adc
add
ins
movs
add
nop
adc
jbe
cmps
push
inc
jp
and
out
push
push
int3
xchg
(bad)
sti
xchg
sbb
inc
or
hlt
jl
(bad)
data16
xchg
pop
push
shl
inc
push
pop
sub
jo
retf
(bad)
out
jge
xlat
test
scas
outs
push
cwde
pop
jo
add
xchg
out
test
inc
out
call
rcr
xchg
add
xor
push
or
adc
(bad)
outs
inc
jle
or
call
adc
push
sbb
int
test
pop
movs
aas
cmp
adc
mov
xchg
in
(bad)
retf
xchg
mov
stc
push
mov
cmp
rcl
movs
jno
(bad)
jge
sbb
adc
jmp
or
mov
loope
push
pop
fisubr
add
xor
jge
cs
add
fst
data16
add
test
cli
clc
and
mov
aam
push
ja
iret
outs
arpl
es
or
inc
jecxz
out
mov
loop
stc
cmc
cmps
xchg
jmp
arpl
inc
lea
pop
pop
fld
dec
sbb
and
das
stos
sahf
les
push
or
xchg
fisttp
jo
out
and
mov
lods
ins
jne
arpl
mov
cmp
in
sti
addr16
rol
push
fistp
ins
push
mov
movs
dec
mov
movs
adc
fs
not
nop
mov
pusha
dec
xchg
loop
lea
test
in
push
adc
add
shl
sbb
adc
push
pop
add
push
and
bound
sar
mov
jmp
push
iret
fadd
add
outs
jp
pop
(bad)
ja
push
xor
jns
jecxz
cs
dec
jb
call
inc
sub
xchg
out
jle
dec
lods
pop
ins
aam
mov
ins
fmul
push
neg
call
leave
jp
add
or
test
cwde
imul
mov
ss
ja
push
ret
iret
dec
adc
jne
movs
es
fs
repz
inc
sbb
and
dec
adc
mov
dec
ret
adc
fld
pop
int
cmc
(bad)
cmp
adc
xor
ins
in
mov
test
push
inc
loopne
fwait
neg
imul
jmp
cdq
adc
repz
jo
sub
fistp
or
xor
das
and
cmps
sbb
into
add
xchg
outs
pop
stc
push
jp
pop
mov
pop
sbb
jl
sbb
inc
pop
fnstenv
sbb
retf
add
adc
jns
outs
jle
dec
out
pop
stos
in
ds
pop
lock
xor
cmp
xchg
push
pop
shl
loop
jno
inc
mov
fstp
inc
push
inc
jle
out
cdq
hlt
push
js
sbb
mov
xchg
ret
je
sub
push
(bad)
sar
out
fcomi
call
or
arpl
outs
vmread
aas
mov
push
cmp
sbb
ins
cmc
xor
add
jl
fld
fidivr
mov
or
cmp
stos
adc
fs
cmp
fld
jmp
call
mov
cli
xchg
ss
stos
lahf
ret
mov
adc
mov
rcr
mov
sbb
jne
pop
fninit
inc
shl
das
cli
mov
cdq
int3
pop
js
sbb
dec
fldcw
loopne
push
loopne
enter
and
sub
kmovw
ins
ficomp
jb
mov
add
pushf
sub
cmp
sbb
movs
enter
hlt
lahf
push
pushf
sbb
scas
jp
pop
fnstenv
sbb
pop
pop
pop
ins
jbe
dec
fcom
retf
pusha
pop
retf
mov
pop
out
es
mov
bnd
and
(bad)
cld
into
xor
mov
xchg
sub
inc
scas
out
stc
dec
mov
sbb
cmps
cli
mov
dec
mov
sub
adc
sbb
ret
pop
imul
(bad)
pop
push
lock
xor
test
add
(bad)
mov
cmp
xor
cmp
dec
lahf
pop
mov
cdq
inc
arpl
loope
mov
les
xor
pop
xor
lahf
in
xlat
jo
call
movs
sbb
sahf
xor
je
in
and
mov
mov
clc
xchg
dec
outs
stc
adc
jle
or
repnz
cmp
(bad)
daa
sbb
pop
iret
sbb
adc
push
iret
(bad)
xor
outs
cmp
fcomi
ss
and
push
iret
pop
xor
inc
fild
cld
out
shl
fidiv
push
shl
inc
shl
retf
bound
xchg
xchg
lock
mov
dec
add
xchg
pop
fstp
or
xor
scas
xchg
push
mov
inc
stc
stc
and
in
not
out
repz
fld
std
test
fld
push
jo
repz
mov
cmp
add
fst
fs
xchg
pushf
sub
or
into
add
(bad)
loop
out
inc
xor
adc
lahf
mov
sub
outs
outs
daa
cmovl
fwait
pop
shl
mov
dec
pop
mov
add
jecxz
add
pop
pop
or
popf
stc
stos
ret
xchg
and
jmp
push
and
add
xchg
push
fstp
sbb
xor
sbb
(bad)
out
push
mov
icebp
push
aaa
stos
or
out
out
loop
std
std
pop
and
neg
ins
out
es
js
mov
test
lods
sub
movs
(bad)
or
or
mov
cmps
arpl
in
repz
xlat
jno
popa
popf
cld
icebp
lods
in
movs
push
stos
dec
cmp
ins
in
mov
push
std
mov
sbb
pop
cmp
bound
ffree
sub
xor
dec
inc
mov
jnp
pop
xor
cmp
push
and
(bad)
pop
push
jp
push
ins
sub
fdivr
mul
cmp
and
sbb
push
xor
and
loope
sbb
frstor
pusha
stos
adc
inc
loopne
push
xchg
clc
jp
xor
and
pop
sub
mov
mov
xchg
sub
pop
rol
mov
jbe
cmp
mov
adc
mov
cdq
adc
or
das
xchg
ficom
xor
daa
mov
ret
(bad)
fisttp
ret
mov
add
out
popf
call
xchg
repnz
loop
not
std
mov
out
mov
jge
test
sbb
mov
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
aas
and
(bad)
sbb
inc
dec
out
dec
mov
dec
inc
xchg
outs
adc
pop
repnz
out
shr
xchg
shr
push
out
jns
shr
mov
aad
add
loope
hlt
mov
mov
pop
leave
je
cmps
sbb
arpl
jle
aas
inc
in
lahf
mov
pop
cmp
(bad)
jge
xor
and
jae
out
add
mov
mov
aaa
frstor
mov
push
clc
aas
and
(bad)
popf
je
cmp
imul
and
add
loope
call
mul
sbb
mov
outs
add
test
mov
mov
mov
mov
jg
push
jmp
dec
push
cld
sub
mov
je
pop
data16
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
push
test
jecxz
ret
xchg
xchg
outs
pop
xlat
lods
adc
enter
(bad)
call
pop
inc
in
or
mov
sbb
pop
leave
int3
sbb
jbe
push
lea
test
popf
les
jb
jmp
add
mov
mov
mov
jns
jle
inc
xchg
mov
jnp
mov
lods
pop
push
fcmovne
sub
push
xchg
movs
mov
repnz
inc
adc
clc
or
pop
dec
jmp
mov
mov
retf
inc
inc
leave
cmps
push
test
mov
mov
(bad)
mov
xchg
sbb
int
xchg
jl
add
les
lahf
shl
sbb
jno
test
push
in
adc
push
hlt
out
rol
add
sub
vphsubbw
scas
jmp
mov
outs
es
xor
cwde
jne
jg
inc
out
sbb
mov
lods
push
jge
retf
mov
hlt
jecxz
jp
ds
mov
mov
out
fild
mov
ins
pop
or
adc
test
test
or
push
cmp
call
mov
push
xchg
jb
jmp
les
or
xor
outs
call
xor
add
mov
adc
push
adc
sahf
inc
retf
and
(bad)
add
add
mov
or
scas
fnstenv
fbld
loop
jbe
pop
xchg
pop
dec
sbb
out
je
push
je
add
mov
or
dec
and
stc
outs
or
or
sbb
xchg
mov
sar
add
mov
cmp
mov
ret
jmp
inc
dec
out
add
stc
test
xlat
xchg
lahf
dec
adc
outs
mov
mov
sahf
mov
sbb
addr16
popa
iret
lods
shl
pushf
cmp
jnp
popa
cmp
push
out
test
add
in
pop
jnp
xlat
ss
imul
loop
cmp
pop
dec
(bad)
lock
mov
out
mov
add
movs
addr16
stc
imul
or
sbb
jmp
lds
(bad)
add
mov
test
xlat
add
pusha
clc
stos
push
inc
cmc
addr16
loope
mov
out
sub
fs
ficom
jns
sub
pusha
into
xchg
mov
sahf
xchg
sbb
inc
sahf
cmp
cmp
std
jbe
data16
out
out
mov
adc
xchg
mov
xor
(bad)
xchg
stos
push
repz
in
movs
addr16
xor
out
pop
xchg
or
mov
or
outs
cli
pushf
mov
out
adc
repz
(bad)
mov
mov
or
(bad)
lahf
(bad)
cmc
ror
push
repnz
test
scas
jne
loop
out
aas
ret
cmps
fidivr
xor
dec
xor
xor
popf
test
jne
push
shr
scas
cmp
fdiv
in
xor
sbb
shr
jge
movs
icebp
scas
push
push
(bad)
fnsave
mov
cld
jecxz
jp
cmp
popf
pop
mov
test
loope
fcom
ret
ret
hlt
xchg
std
outs
bound
div
ret
xchg
jno
shl
ss
mov
sti
mov
outs
leave
loop
es
sbb
in
fstp
mov
cmp
push
data16
push
and
or
xor
mov
imul
iret
and
test
cld
jge
dec
jmp
xchg
loopne
jp
loopne
lock
sahf
mov
mov
ret
das
xchg
push
cs
repz
sbb
rcl
dec
dec
shr
arpl
arpl
(bad)
fst
mov
outs
pusha
(bad)
mov
not
call
inc
inc
xchg
arpl
jmp
xlat
mov
xchg
cmps
daa
stos
add
pushw
movs
les
adc
arpl
dec
push
sub
clc
fwait
lods
adc
std
sbb
fsubr
pusha
cmps
xor
shl
in
daa
dec
jmp
into
clc
movs
js
mov
(bad)
mov
scas
pop
xchg
mov
aaa
popf
inc
dec
or
pop
jle
outs
push
mov
jmp
aam
mov
jnp
popf
idiv
xchg
adc
push
mov
cwde
xchg
mov
sbb
dec
and
lahf
shl
push
out
jno
mov
adc
std
mov
(bad)
out
cmp
ins
or
push
and
arpl
rcr
dec
jle
lods
mov
add
push
aaa
pusha
cmps
es
(bad)
test
ds
hlt
add
scas
jle
mov
rcl
fisub
in
(bad)
pop
dec
xor
out
sbb
or
fsub
and
cmps
cmp
fist
call
mul
sbb
mov
outs
add
test
ret
jmp
mov
popf
scas
sbb
sbb
jmp
in
xchg
loop
(bad)
or
or
sub
imul
test
mov
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
mov
mov
push
xor
mov
adc
push
push
mov
or
mov
and
or
neg
outs
sbb
stos
retf
jno
or
or
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
add
call
mul
sbb
mov
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
adc
ins
add
inc
in
movs
in
jne
add
aas
push
ins
mov
pop
or
adc
int3
aas
mov
ja
push
sub
rcl
pop
call
rol
enter
sbb
jmp
jnp
add
(bad)
adc
dec
push
lock
jmp
repz
mov
sbb
lods
xchg
jne
add
(bad)
not
jmp
push
es
cwde
test
cwde
xor
(bad)
je
and
arpl
inc
dec
sub
call
jmp
pop
adc
cmp
cmp
pop
mov
push
sub
add
movs
jae
xor
inc
ja
(bad)
adc
(bad)
scas
mov
(bad)
pop
pop
or
hlt
sbb
adc
pop
jecxz
fcom
push
inc
retf
xlat
pushf
out
adc
loope
loop
xchg
xchg
(bad)
inc
fsub
je
cli
xchg
test
or
imul
jb
not
retf
loope
shl
int
iret
jno
mov
and
or
dec
dec
sub
lea
jnp
sbb
push
jp
push
adc
(bad)
sti
ja
data16
test
mov
addr16
out
push
dec
(bad)
fcomp
movs
fwait
scas
and
loopne
shl
xchg
jae
ds
clc
adc
cmp
add
mov
dec
adc
hlt
fwait
(bad)
lods
mov
lods
pushf
fs
sub
fnstsw
out
fld
adc
jno
mov
push
fucomi
sar
mov
sub
jne
popf
ret
sub
lea
xchg
mov
pop
aas
push
retf
adc
(bad)
ja
adc
jl
jge
and
cwde
jne
jl
pop
jecxz
out
test
add
fst
cmp
mov
cli
jecxz
jb
sub
into
add
adc
pop
int3
dec
jne
mov
fdivr
fbld
mov
jmp
xchg
test
fnstenv
inc
ins
ret
mov
hlt
(bad)
hlt
loop
jecxz
xchg
mov
inc
repz
cwde
out
mov
hlt
mov
enter
pop
sub
sub
pushf
imul
sub
add
jmp
bound
jnp
jle
and
je
data16
repz
jbe
mov
add
add
cmps
inc
push
shr
aam
fwait
retf
out
out
push
cs
popa
pop
adc
clc
je
dec
ins
mov
cmp
loopne
push
sar
jle
mov
repz
(bad)
loop
sbb
in
add
pusha
sub
lock
jmp
push
push
inc
cwde
hlt
int
jns
loop
enter
pop
cmp
pop
dec
xor
imul
and
jmp
mov
xor
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
ins
popf
mov
adc
call
loop
mov
sbb
inc
cmp
or
or
stos
pushf
sub
pop
bound
ffree
pop
xor
dec
push
add
lods
inc
retf
adc
addr16
ja
pop
lea
dec
fadd
pop
mov
xchg
xchg
or
mov
inc
sbb
sbb
inc
scas
pusha
mov
dec
clc
(bad)
repnz
arpl
pusha
xlat
test
call
push
stc
scas
xchg
push
jmp
enter
mov
mov
pusha
clc
(bad)
cwde
test
mov
xchg
int
stos
pop
jmp
dec
and
jne
jecxz
sub
dec
and
ins
loope
inc
sbb
popa
es
iret
push
ret
mov
adc
jge
inc
jmp
aad
stos
imul
xchg
ret
aaa
sahf
mov
jmp
pop
repnz
jge
mov
out
cmp
add
mov
mov
dec
inc
enter
sti
xchg
or
into
arpl
leave
mov
ret
aad
mov
sbb
frstor
lock
shr
clc
pop
add
cld
jmp
repz
dec
popf
ret
xor
or
mov
ds
icebp
xchg
jl
add
jge
dec
cmp
daa
lahf
sub
and
sbb
mov
xchg
push
ins
(bad)
aaa
aad
mov
inc
gs
call
sbb
sbb
stos
ficom
(bad)
push
push
ret
test
cdq
stos
mov
stos
inc
xlat
test
movs
fldenv
mov
popa
jge
cwde
push
es
fdivp
(bad)
std
xlat
push
push
jbe
imul
adc
movs
movs
aas
lds
xchg
or
add
gs
mov
fstp
fidiv
adc
pop
and
cmp
fsubr
mov
je
jae
inc
repz
mov
movs
sar
cmps
jp
mov
nop
push
dec
retf
aam
fwait
call
pop
cmp
popa
dec
xor
inc
mov
mov
jecxz
(bad)
or
dec
dec
ret
mov
cdq
stos
test
or
adc
test
mov
jbe
lds
iret
in
leave
out
scas
jbe
xchg
popa
jb
sub
les
hlt
ret
jnp
or
into
sbb
xor
je
(bad)
lods
jmp
dec
pop
sub
les
jae
adc
cmp
fnstsw
stos
arpl
jge
cmp
shl
movs
imul
lods
push
push
cmp
mov
ins
sar
jecxz
jb
sub
(bad)
sbb
cmp
adc
je
(bad)
mov
mov
mov
sti
or
xchg
xchg
jns
xchg
lods
xchg
in
push
ins
add
mov
outs
shl
(bad)
mov
push
jmp
inc
lods
and
icebp
jmp
xchg
test
xchg
lods
ret
or
arpl
push
ins
or
xchg
js
adc
adc
mov
jns
inc
stc
jl
inc
icebp
add
push
mov
lods
pop
push
(bad)
sub
call
movs
pop
push
ds
inc
inc
adc
cmps
je
jg
out
or
and
xchg
in
xchg
push
adc
out
inc
les
xchg
jbe
out
shr
hlt
call
ins
fnstcw
(bad)
repz
mov
xchg
mov
psraw
mov
les
lods
into
or
je
test
test
imul
in
les
and
cmp
jne
jg
xor
mov
(bad)
aad
(bad)
jg
dec
repnz
test
test
cs
mov
sbb
xchg
cwde
psrld
mov
popf
ds
(bad)
cmp
push
(bad)
mov
out
data16
jmp
test
std
aaa
jmp
mov
cmp
mov
(bad)
rol
in
mov
push
mov
adc
cli
mov
enter
cmps
xor
in
stc
stos
(bad)
into
out
(bad)
mov
mov
and
popa
lea
test
repnz
aas
outs
jle
ins
pop
inc
clc
jge
jo
es
sbb
pusha
sub
rcl
setl
in
jbe
mov
repz
enter
xor
jbe
cmp
shl
jb
add
sub
push
push
aad
pop
neg
push
(bad)
cmp
add
add
xor
ficom
int
(bad)
sbb
push
div
(bad)
dec
shl
rol
cmps
retf
xor
push
es
dec
cmc
mov
inc
dec
cmp
int
mov
jg
xor
jge
dec
pushf
xor
fsubr
sub
cmc
add
lahf
dec
das
mov
rcr
int3
mov
scas
cmp
hlt
inc
push
dec
psrlq
adc
pop
sbb
adc
dec
push
fisttp
adc
test
stos
jne
or
pop
fisubr
icebp
(bad)
call
inc
or
ins
adc
ror
repz
pop
lds
rcl
jle
inc
iret
mov
int
mov
jg
xor
and
daa
lahf
jmp
xor
inc
jmp
xchg
dec
or
retf
sar
leave
fxch
arpl
shl
adc
cld
sbb
xor
add
and
movs
imul
xchg
push
sub
out
clc
mov
fidivr
pusha
(bad)
mov
mul
push
test
jno
les
aas
ffree
cli
xchg
jecxz
mov
call
cwde
out
xor
push
es
pop
into
xchg
ret
sbb
loop
jb
clc
dec
push
push
mov
mov
jge
dec
fisub
movs
pop
mov
adc
push
fldcw
fimul
hlt
loope
push
js
mov
ins
or
clc
xor
sub
adc
dec
dec
(bad)
mov
gs
xlat
xlat
fwait
ret
sub
cdq
mov
push
ins
pop
jmp
(bad)
push
cmp
and
sti
addr16
leave
(bad)
jmp
int
les
mov
add
push
pushf
jl
adc
popf
mov
sub
xor
mov
lea
mov
inc
jmp
lods
imul
out
imul
cmp
mov
rcl
out
dec
cmp
cmp
push
jo
aas
cmp
add
and
mov
out
cwde
loope
cmps
pmaddwd
mov
cmps
out
cmps
cmps
inc
xor
stos
adc
and
mov
in
shl
fld
jmp
movs
mov
stc
ins
pop
cli
in
into
dec
(bad)
jmp
test
call
pop
adc
or
cmps
mov
pop
sub
es
jne
outs
inc
adc
pop
add
lahf
daa
lods
mov
jae
jle
push
(bad)
shl
scas
pop
xor
retf
clc
mov
lds
xchg
push
pop
jge
repnz
es
pop
jecxz
frstor
sti
jo
xchg
rcr
lahf
out
add
in
int3
lahf
scas
mov
and
mov
gs
out
movs
inc
cmp
icebp
(bad)
repnz
push
dec
cli
addr16
in
cmps
inc
loope
fsubp
mov
add
popa
and
push
je
mov
loope
dec
dec
sub
adc
ror
add
jl
ja
and
loope
cdq
sub
pop
xchg
scas
cmp
dec
mov
mov
inc
jmp
mov
(bad)
stc
push
push
cmp
pop
push
out
push
scas
add
test
out
stos
aam
call
shl
ins
pop
xchg
dec
loop
mov
xchg
xchg
retf
mov
jae
shl
test
enter
cdq
hlt
dec
dec
cli
add
mul
retf
repnz
mov
add
sub
jge
jle
mov
jns
test
jae
sbb
bndstx
and
xchg
arpl
ja
and
adc
xchg
xchg
pop
ins
fstp
mov
xlat
pop
push
add
leave
or
or
test
(bad)
push
and
mov
out
pushf
loope
aaa
xchg
push
call
sar
lods
in
in
sbb
ja
imul
add
inc
in
add
loope
xor
xchg
mov
sub
bound
jmp
inc
jo
jns
sub
test
retf
call
inc
push
sti
push
gs
daa
jecxz
sub
popa
cmp
and
jo
movs
xchg
(bad)
push
ins
fistp
scas
adc
(bad)
jg
adc
clc
push
cdq
pop
addr16
add
xor
imul
cmps
aaa
retf
jmp
leave
mov
mov
push
jae
xchg
xlat
neg
or
pop
inc
mov
adc
lock
scas
fs
cwde
sub
jns
and
imul
push
jg
pushf
test
js
scas
dec
inc
sbb
imul
sub
je
pop
out
or
sar
cmps
jp
and
jmp
frstor
leave
iret
sar
cmp
sti
push
test
push
mov
in
mov
sub
and
in
adc
movs
clc
fwait
or
out
sub
pushf
ja
push
(bad)
jmp
cmc
fcomp
mov
mov
push
(bad)
(bad)
retf
mov
xchg
mov
cmps
retf
or
or
pusha
int
add
test
clc
leave
and
or
jbe
adc
jnp
pop
mov
lahf
inc
scas
jle
ds
hlt
adc
fwait
pop
sub
fmul
xor
mov
xchg
fmulp
arpl
pop
pop
jge
repz
fwait
pop
jns
sub
lods
pop
sub
or
mov
pop
xor
and
popf
sar
fisubr
jnp
out
outs
mov
(bad)
inc
or
sub
adc
out
nop
stos
ja
xchg
mov
sub
push
inc
and
imul
pop
and
mov
cli
jnp
sbb
outs
es
push
lods
fstp
and
pop
out
mov
retf
pop
adc
push
fnstenv
mov
mov
shl
fwait
push
inc
ds
pop
test
inc
test
push
test
lock
inc
cli
xchg
dec
fild
pop
repz
test
in
sti
or
enter
push
fsubr
(bad)
fcmovnbe
sbb
add
loop
aas
icebp
idiv
mov
mov
movs
enter
ss
push
pop
fwait
imul
dec
jae
call
jns
fstp
jp
sbb
xchg
ja
sub
sub
pop
adc
fcmovne
cmp
mov
or
lock
jb
add
icebp
adc
test
lock
ja
mov
pop
daa
cmps
aaa
retf
in
add
imul
mov
in
sbb
push
dec
dec
loopne
repnz
fidivr
mov
xchg
xor
icebp
call
jmp
dec
mov
or
ss
or
dec
dec
sub
mov
(bad)
jbe
pop
int
push
push
fwait
add
cs
arpl
pusha
adc
and
xchg
xlat
xchg
pop
jno
cli
cmp
sti
int3
clc
push
xchg
xlat
clc
shl
xor
jmp
fwait
sub
(bad)
dec
(bad)
mov
inc
aam
pop
jmp
cmc
arpl
test
call
test
xchg
arpl
sbb
inc
dec
push
fsubr
(bad)
call
gs
in
jnp
jmp
xchg
mov
push
cmp
push
out
mov
pop
cmp
jmp
mov
adc
dec
sub
or
call
sbb
scas
ins
adc
sti
lods
inc
push
cld
xlat
ds
mov
ret
in
retf
push
inc
ss
outs
jge
in
call
(bad)
sub
mov
dec
cmps
test
mov
dec
cmp
lock
xlat
test
add
jae
test
in
(bad)
call
push
push
loopne
or
out
out
or
retf
mov
add
pop
xchg
loope
inc
pop
cmp
mov
jg
sub
push
inc
cmps
and
xchg
(bad)
clc
ja
sub
xor
jmp
mov
ja
frstor
xchg
mov
retf
out
retf
jbe
cmp
addr16
sbb
repz
wbinvd
lods
sbb
mov
pusha
repz
push
rcl
pop
neg
push
(bad)
cmp
test
and
outs
addr16
jnp
arpl
dec
faddp
add
pusha
clc
xchg
push
stos
aam
push
mov
sub
jne
jmp
inc
xor
or
dec
dec
sub
xchg
mov
jae
cld
jae
adc
cmp
mov
sub
adc
sahf
ins
add
scas
call
movs
adc
xchg
shl
jbe
test
sbb
jbe
add
cmps
imul
rcl
inc
push
ret
mov
mov
pop
or
movs
loope
out
xchg
xchg
outs
sbb
cwde
mov
aam
push
pop
call
fldpi
rcr
popf
test
inc
in
cmp
jae
leave
xlat
mov
cdq
int3
or
sub
or
dec
dec
aas
push
icebp
fwait
mov
pop
pop
pop
int
es
sub
out
pop
stos
push
stos
push
ret
lds
mov
jle
mov
test
rcr
cli
mov
movs
adc
loope
movs
inc
push
cmp
shl
push
stos
pop
pop
mov
ficom
and
mov
js
mov
(bad)
retf
stos
xchg
mov
mov
add
mov
mov
loop
push
xor
stc
test
mov
mov
clc
push
addr16
js
js
outs
aad
scas
push
push
add
call
push
adc
push
cmps
cmp
adc
inc
and
adc
mov
repnz
fdiv
std
in
xlat
jb
push
xchg
inc
pop
adc
cli
pop
ror
pop
push
mov
add
inc
inc
cmc
mov
in
nop
std
ins
adc
mov
xlat
test
mov
mov
or
jmp
(bad)
in
rcr
out
add
lock
cwde
icebp
shl
xor
enter
and
js
xchg
repz
push
and
pop
ins
jle
push
xor
add
test
ja
adc
scas
pop
cs
ret
call
mov
out
add
add
int3
cmp
loopne
adc
jb
mov
xor
push
out
loopne
(bad)
push
outs
(bad)
mov
addr16
movs
loope
shl
xlat
lods
xchg
pop
std
add
fcmovne
popa
sbb
(bad)
cmc
rol
out
stos
mov
push
loope
or
fdiv
scas
fs
out
fadd
popf
sub
ins
sbb
jbe
cmp
iret
mov
push
dec
ins
fidivr
mov
push
sbb
mov
mov
jo
popa
push
inc
hlt
adc
push
mov
add
scas
jmp
div
stc
retf
pop
mov
into
sbb
pop
cmp
mov
or
jl
lods
imul
(bad)
or
adc
mov
mov
jno
sub
addr16
lods
inc
cmp
icebp
rcr
popf
test
pop
out
jnp
shr
out
push
iret
leave
loop
adc
inc
ds
out
ss
inc
push
es
call
dec
push
and
jmp
add
lods
jnp
and
xchg
gs
cmp
test
aad
in
addr16
scas
iret
cmp
mov
scas
pop
out
shl
js
sub
rol
dec
je
cmp
cmps
mov
loope
add
test
push
push
retf
stos
test
dec
push
push
imul
ret
mov
cmp
dec
movs
test
daa
div
(bad)
mov
ficomp
xor
fwait
and
mov
sti
stos
lea
sbb
add
jge
dec
mov
cmps
inc
mov
adc
shl
adc
push
mov
sti
shr
call
xchg
push
or
ret
inc
mov
push
xchg
repz
push
xchg
popa
push
xchg
xchg
cmp
mov
arpl
xor
mov
pop
sbb
lods
xchg
jno
xor
lods
imul
jmp
fcomip
pop
mov
arpl
mov
and
jae
xor
cwde
aas
sub
dec
xchg
or
mov
in
fwait
mov
xor
jae
add
jl
jne
and
inc
mov
push
out
and
ret
in
pop
and
into
fistp
data16
(bad)
in
jns
push
popf
push
pop
push
in
repnz
push
data16
push
mov
xor
jg
enter
mov
pop
cmp
mov
or
mov
lods
and
xor
cmps
inc
sub
stc
(bad)
inc
push
popa
arpl
pop
cmp
(bad)
in
mov
xchg
pop
sub
xor
test
cwde
mov
cmp
into
add
add
sti
outs
pop
adc
jnp
jo
and
int3
inc
aam
push
outs
jecxz
xchg
sub
loopne
test
retf
aam
dec
xchg
xchg
lea
xor
jge
popf
je
cmp
imul
and
cli
jle
ror
adc
lahf
xchg
jns
out
xchg
jno
outs
jae
lds
cld
into
cmc
ror
push
repz
neg
mov
xchg
mov
cli
repnz
xor
daa
jnp
gs
out
jae
and
test
jg
jne
jle
jp
xor
loop
sub
jl
dec
sub
adc
jmp
outs
or
retf
aam
mov
out
mov
pushf
xor
jecxz
add
adc
les
push
inc
xchg
(bad)
jle
pushf
jecxz
adc
add
test
ficom
ins
call
int3
vmovups
pusha
mov
inc
push
cli
imul
mov
lods
jns
repnz
or
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
mov
daa
mov
xchg
je
cmp
inc
out
ja
and
addr16
out
push
jb
int3
xor
mov
call
dec
xor
jmp
inc
adc
int3
dec
push
mov
outs
bound
jmp
add
mov
xor
fnsave
clc
int3
cmc
fcomp
mov
es
sbb
mov
sbb
inc
sub
xor
lea
add
outs
dec
cld
je
sbb
and
mov
cwde
daa
cdq
inc
icebp
popa
cmp
xor
fiadd
pushf
pop
jno
shl
enter
adc
repz
pop
adc
cld
sub
adc
fiadd
xlat
push
inc
aam
push
aam
jmp
call
xchg
xor
mov
pusha
clc
push
das
es
les
(bad)
jne
ficom
in
cmp
(bad)
in
cwde
sub
push
jnp
and
push
movs
arpl
mov
sti
mov
arpl
out
arpl
sti
and
and
pop
cmc
adc
mov
or
rol
xlat
mov
cli
jmp
jnp
cs
xor
jmp
jo
and
mov
xor
addr16
fbld
or
adc
mov
(bad)
jge
shl
xor
lods
add
jge
mov
fsub
push
xor
jmp
xlat
xchg
int
ret
popf
std
jns
sub
pop
daa
and
outs
mov
or
fdiv
xor
add
ss
loop
repnz
jp
sub
inc
cmps
pop
mov
lods
enter
fst
cmp
mov
mov
movs
fs
das
test
push
mov
dec
cmp
mov
adc
ins
stos
xlat
imul
loope
ficomp
mov
retf
stos
xchg
jnp
sbb
mov
sbb
icebp
(bad)
inc
push
out
jno
lahf
dec
push
cli
ins
or
idiv
fadd
add
push
and
pusha
shl
nop
jg
add
es
add
jge
pusha
iret
adc
fst
rcr
pop
(bad)
int
inc
jae
xchg
popa
pop
push
xchg
jp
jge
xchg
pop
loop
mov
jecxz
jnp
lds
retf
mov
xchg
cmp
push
add
inc
xchg
adc
and
in
adc
fwait
xlat
mov
xchg
inc
cmp
stos
and
je
in
mov
and
rol
sti
push
(bad)
pusha
xchg
mov
pusha
stc
jo
jmp
in
mov
cmp
ret
pop
push
leave
fnstcw
inc
jle
jnp
(bad)
or
loope
sub
dec
or
sbb
pop
test
push
jl
ds
xchg
dec
pop
adc
adc
xchg
push
int3
movs
lock
jge
mov
icebp
aaa
es
mov
(bad)
cwde
retf
lods
(bad)
(bad)
pop
or
jge
popf
pop
out
pop
adc
or
sbb
mov
ins
cdq
retf
xchg
cmp
arpl
movs
mov
mov
outs
add
push
and
stc
(bad)
(bad)
in
xchg
mov
sbb
cmp
sub
jne
xchg
in
sbb
pop
test
(bad)
fnstsw
cmp
mov
sbb
fsubr
jbe
and
mov
sub
push
xchg
ss
shl
jp
icebp
mov
imul
or
(bad)
lock
gs
cmp
iret
adc
ds
out
ror
pop
and
mov
js
test
mov
xlat
mov
int3
mov
gs
in
inc
bound
cli
sar
mov
adc
in
ror
inc
jmp
sub
bound
jmp
add
or
js
jae
call
pop
sbb
adc
xchg
jbe
jl
outs
out
xchg
hlt
frstor
lods
inc
jae
int3
js
(bad)
mov
lea
adc
xor
add
add
ror
mov
jp
cmp
mov
xor
and
cdq
pop
int3
mov
and
jl
retf
cmps
loope
mov
sbb
aam
cmp
add
mov
jmp
mov
or
push
cmc
hlt
rcl
mov
inc
pop
and
and
cmp
mov
les
imul
femms
push
mov
mov
xchg
arpl
jg
sub
xor
and
addr16
xlat
stos
inc
jno
fisttp
xlat
mov
repz
shl
cmp
lock
xor
or
fs
aam
push
fisttp
push
call
cdq
(bad)
jns
in
mov
or
cmc
call
out
mov
cmps
dec
popf
mov
dec
clc
add
shr
call
fldcw
mov
add
call
dec
bound
push
test
cld
pop
push
pusha
cmps
and
xchg
adc
inc
and
add
setp
loop
jl
mov
(bad)
fstp
mov
mov
movs
arpl
sub
pop
adc
adc
add
cmps
fld
dec
push
enter
popf
idiv
mov
mov
movs
out
movs
lahf
test
mov
cmps
cmp
dec
test
rcr
(bad)
jmp
push
inc
loop
aaa
stc
test
ror
mov
ss
daa
jns
inc
rcl
sahf
movs
movs
add
inc
jne
pusha
xor
mov
stos
cs
(bad)
clc
inc
sub
in
sub
lea
(bad)
(bad)
cmps
inc
push
(bad)
aas
enter
or
out
call
fcom
(bad)
(bad)
mov
adc
add
mov
gs
ret
fwait
loop
cmps
loop
pop
(bad)
mov
ja
push
outs
addr16
push
aaa
outs
mov
out
hlt
cmp
add
in
adc
in
mov
lock
pop
not
enter
sub
or
scas
fwait
js
or
sbb
jg
sub
jbe
jbe
cmp
loope
stos
jnp
and
stos
xor
adc
cs
aad
je
or
push
aam
mov
push
inc
add
sbb
and
es
outs
aas
mov
xor
pop
clc
mov
fs
cmps
test
(bad)
mov
jmp
or
test
in
(bad)
mov
ret
push
repz
stc
jmp
xchg
xchg
mov
lods
fistp
xor
outs
or
or
movs
(bad)
popa
ins
push
jne
jmp
shl
inc
jne
pop
add
and
into
and
jg
sub
cmp
mov
mov
sti
call
xchg
xor
arpl
mov
fsub
stos
inc
test
adc
xchg
push
lea
jl
test
pushf
loope
pop
xchg
adc
out
or
into
push
ins
ins
mov
aad
ror
popf
test
inc
in
sbb
loope
fwait
gs
jmp
push
mov
ss
aaa
jle
jle
loope
inc
dec
cmp
test
jg
add
jge
push
xor
lods
dec
in
inc
pushf
jns
adc
dec
pop
or
or
jno
push
push
idiv
clc
pop
mov
xor
sbb
jl
cwde
jae
cmp
sbb
mov
cmp
dec
dec
(bad)
mov
pop
or
jmp
pop
retf
stos
in
sti
or
stc
test
lock
mov
out
push
shr
cwde
fdivr
mov
in
rcl
push
mov
aaa
pop
es
arpl
xchg
popf
mov
jae
scas
je
sbb
xor
in
push
mov
and
daa
shl
inc
es
repnz
mov
mov
add
mov
(bad)
call
pushf
inc
cs
pop
js
outs
das
lods
push
lock
or
mov
outs
bound
icebp
cdq
(bad)
mov
retf
jp
add
lods
daa
add
fdecstp
retf
out
clc
xchg
loop
or
loopne
in
shr
rcl
ss
pop
jae
and
jp
pop
into
xchg
sahf
scas
nop
es
sbb
outs
es
cmp
into
sub
nop
push
sbb
and
push
mov
retf
std
sub
int3
jns
sub
cld
pop
pushf
dec
jp
or
aas
shl
rol
mov
lock
std
sub
mov
out
jl
shl
sbb
mov
and
mov
lahf
in
loop
cli
ja
mov
jnp
shr
popf
jle
jmp
out
sub
je
lods
rcl
pop
xchg
xchg
mov
fistp
cli
inc
ja
clc
inc
cmp
mov
cdq
xor
push
icebp
data16
add
rol
push
ins
(bad)
sub
mov
clc
loope
pop
pop
and
jecxz
je
dec
gs
push
mov
pusha
in
push
rol
sub
xchg
or
(bad)
div
loop
cmps
scas
jne
int3
lock
movs
inc
sbb
ret
cmc
add
add
sub
ja
mov
jbe
ja
cwde
xlat
shr
adc
loopne
jle
pop
push
cmp
js
(bad)
mov
les
ficomp
bound
into
jnp
jb
xor
fstp
imul
int3
jmp
pop
outs
repz
into
mov
int3
arpl
inc
dec
shufps
xchg
pop
jns
or
fistp
in
mov
pusha
in
dec
ret
cdq
xlat
in
add
adc
adc
aam
and
xchg
in
pop
or
lahf
shr
fld
out
mov
pop
dec
inc
push
loopne
ror
ins
mov
lock
inc
mov
ins
xor
xor
vmwrite
sub
retf
or
adc
std
dec
fstp
loopne
nop
xor
adc
adc
movs
adc
loope
div
sub
xor
jge
popf
je
cmp
(bad)
push
push
fist
mov
push
cld
jo
aad
jns
mov
cmp
xor
sub
test
in
shl
pop
neg
lock
sub
lods
mov
imul
(bad)
aam
mov
cmp
stos
pop
daa
mov
sub
push
mov
pop
dec
ins
outs
neg
out
xor
(bad)
imul
loope
test
(bad)
jle
jge
pop
fisub
mov
aas
sub
into
shl
mov
dec
jno
add
jmp
jp
add
mov
add
inc
jl
mov
gs
aas
int
mov
(bad)
scas
jge
aam
mov
out
sbb
fld
(bad)
out
shl
movs
mov
loop
adc
ja
out
(bad)
mov
test
adc
and
gs
mov
adc
sbb
stc
jnp
adc
pop
cmp
les
cwde
daa
nop
bound
daa
xchg
movs
movs
int
jo
mov
retf
sar
cli
jmp
pop
sbb
cld
add
adc
fwait
or
dec
and
and
(bad)
imul
arpl
adc
xchg
mov
xor
popa
pusha
(bad)
and
repz
(bad)
sbb
jbe
fisub
cmc
push
imul
shr
xchg
sahf
cmp
jno
mov
adc
es
pop
into
xchg
pushf
dec
pop
and
popf
les
jb
fidivr
push
fbld
ja
push
scas
leave
cmp
pusha
dec
js
add
retf
dec
or
ror
iret
(bad)
lods
cmps
adc
(bad)
fs
xor
(bad)
sbb
add
add
or
movs
(bad)
(bad)
dec
push
mov
dec
add
test
pop
adc
jmp
inc
out
je
enter
dec
dec
dec
fimul
adc
lds
in
repz
xchg
or
bound
int3
or
xor
sub
test
icebp
fwait
scas
pop
jae
scas
pop
pop
pop
int
es
sub
in
cmp
push
and
xor
mov
add
jmp
sub
rcr
cmc
aaa
jl
xchg
pop
inc
pop
into
stc
adc
sub
add
rcr
test
adc
sbb
(bad)
add
lods
lds
add
cli
test
cmp
in
(bad)
call
popf
fidivr
ret
fucomp
fbld
cmp
jecxz
inc
popa
adc
js
inc
ror
leave
xchg
adc
jmp
xor
xor
mov
rol
jle
adc
scas
pop
and
in
or
imul
(bad)
imul
out
push
mov
xor
mov
pop
mov
loope
into
sub
(bad)
mov
adc
in
add
pushf
ja
jp
repz
sbb
pusha
mov
imul
pop
int
fstp
(bad)
jle
push
pop
adc
call
ins
jae
fwait
mov
sbb
push
clc
outs
and
cmp
mov
shl
dec
cmc
add
cmp
shl
jecxz
jg
retf
das
aam
call
pop
pop
xor
adc
cld
out
add
sub
add
push
push
leave
mov
pop
sub
mov
xchg
mov
xchg
cmc
lahf
mov
fmul
jae
fisub
shl
retf
jmp
mov
xor
shr
out
inc
loope
lds
cmp
dec
daa
jge
jle
loope
jg
sub
mov
jns
sbb
pusha
xor
xchg
sbb
leave
sub
mov
sub
add
movs
jle
mov
lahf
jbe
int3
xlat
sub
das
div
jecxz
jle
xor
inc
cs
add
aaa
mov
lock
jl
mov
lock
adc
mov
mov
jp
dec
dec
push
imul
sbb
dec
lock
stc
neg
xchg
pop
jmp
xor
jae
sahf
les
jno
xor
inc
mov
pop
pop
and
mov
inc
data16
imul
add
add
fdivr
lahf
and
js
adc
hlt
cmps
inc
aaa
mov
retf
idiv
cli
jmp
aaa
jbe
xchg
adc
mov
mov
pop
stos
dec
shl
inc
aad
pop
neg
push
(bad)
xor
cdq
test
out
mov
jo
sbb
out
jnp
outs
(bad)
hlt
(bad)
ds
ja
mov
dec
retf
mul
sar
xchg
mov
scas
lea
pusha
and
inc
daa
jle
popa
std
mov
inc
pop
and
cmp
loop
pop
push
test
cmp
iret
sub
loop
cmp
mov
mov
adc
ss
div
call
xchg
adc
popf
sub
adc
sbb
push
dec
sar
or
or
sbb
fwait
test
shl
ins
mov
in
sub
sbb
jb
test
push
xchg
ins
push
in
call
out
test
movs
int3
pop
je
and
jp
jg
xchg
mov
pop
aas
and
lea
jae
push
test
ja
test
adc
mov
xchg
mov
cmps
fwait
adc
popf
loopne
mov
cmps
out
push
mov
popa
js
add
vpshad
sbb
mov
out
jmp
ret
sti
nop
loope
bound
not
push
pusha
cmps
sbb
test
and
loop
jecxz
retf
mov
push
push
cmp
dec
(bad)
out
add
in
jns
pop
add
push
push
test
jmp
sahf
mov
ss
aad
dec
push
enter
loope
lods
inc
sbb
inc
(bad)
ja
mov
(bad)
out
aaa
xchg
(bad)
pop
mov
aad
imul
pop
lea
jge
jecxz
out
push
imul
loop
and
dec
adc
mov
test
xor
mov
dec
test
mov
enter
jnp
es
mov
mov
xlat
and
jmp
js
in
jns
icebp
add
call
sub
mov
push
push
ss
push
or
ret
adc
rcl
pop
out
(bad)
ja
xchg
mov
jp
xor
addr16
pop
xor
mov
(bad)
cld
fnstsw
xchg
outs
jge
push
xor
mov
adc
sbb
rcr
mov
xchg
test
js
idiv
xor
or
clc
nop
jg
call
jne
add
add
and
cmp
dec
(bad)
mul
xor
in
jns
test
test
loop
popf
sub
mov
ss
push
dec
push
adc
dec
in
inc
std
adc
ja
push
int3
movs
xchg
retf
pop
addr16
clc
stos
push
jo
cwde
adc
movs
xchg
retf
aam
lock
adc
mov
mov
movs
cmp
shrd
xchg
mov
in
mov
outs
(bad)
les
mov
mov
hlt
test
(bad)
ret
call
or
mov
out
stc
(bad)
sbb
inc
clc
xlat
aas
das
lahf
(bad)
xchg
mov
fst
addr16
mov
sbb
sub
push
push
ins
sub
and
adc
mov
pop
sbb
xor
hlt
xor
push
out
jae
ret
jo
fcomp
mov
fwait
mov
cmps
inc
fwait
mov
and
pop
sbb
rcr
outs
jp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
out
sbb
mov
add
xchg
sti
fmul
cmp
test
sub
sub
jmp
sahf
sbb
jne
(bad)
adc
push
ret
mov
push
nop
adc
xchg
inc
int3
movs
xchg
ret
pop
rcl
push
lods
mov
retf
xchg
(bad)
in
cmp
xor
jge
popf
je
xor
imul
add
mov
mov
push
cdq
stc
ror
(bad)
inc
call
(bad)
loop
jo
fsubp
adc
outs
add
test
daa
dec
and
pusha
mov
repz
xchg
jp
mov
in
or
lea
pop
out
add
add
int
mov
fcom
or
cmp
jb
cmp
or
ret
pop
int3
lods
pop
stc
push
in
mov
pop
and
stos
xchg
fist
jno
lahf
shr
mov
jmp
push
mov
outs
ficom
add
mov
out
pop
pop
ret
je
ret
mov
push
cwde
stc
xchg
push
arpl
addr16
repnz
jo
fsubp
adc
imul
test
mov
mov
add
fidiv
xchg
add
test
mov
leave
pop
stos
pop
outs
leave
lods
jns
inc
inc
cmp
or
or
loopne
sub
dec
and
sub
test
push
(bad)
mov
adc
jae
push
int3
mov
rcl
pop
mov
xchg
xchg
lea
xor
jge
popf
jne
cmp
imul
and
xchg
or
arpl
movs
fptan
out
jno
(bad)
adc
imul
lods
enter
mov
mov
add
fidiv
xchg
add
cmp
loop
pop
stos
pop
outs
leave
lods
jns
inc
inc
cmp
or
or
dec
and
sub
(bad)
push
xchg
iret
aad
cmp
add
push
out
int3
test
xchg
inc
pop
push
scas
cmp
(bad)
jle
out
adc
pop
jb
scas
jge
lea
adc
jmp
inc
movs
pusha
and
cmps
lock
loope
call
(bad)
bound
mov
outs
adc
mov
daa
iret
sbb
js
and
push
adc
cwde
test
mov
int
stos
daa
jmp
cmp
sbb
sub
loope
sub
pop
mov
sbb
jne
(bad)
push
xchg
iret
aad
mov
add
xor
cmp
movs
adc
pop
rcl
sahf
scas
mov
retf
xchg
lods
movs
pop
mov
pop
setge
iret
cmp
imul
and
mov
(bad)
arpl
mov
(bad)
bound
mov
ins
add
test
mov
mov
add
xchg
add
xchg
out
int
stos
punpckhdq
movs
jno
inc
dec
cmp
or
add
jecxz
and
dec
and
sub
pop
pop
adc
push
ret
mov
adc
ja
push
les
rcl
mov
mov
nop
xchg
test
xor
jne
lahf
jl
cmp
arpl
and
scas
fmul
fwait
stc
fwait
or
arpl
cmps
shl
loopne
js
fsubp
adc
ins
add
mov
mov
stos
call
cmp
cwde
test
mov
pop
push
lods
jns
inc
dec
xor
or
add
loope
and
dec
and
sub
pop
pop
adc
pop
retf
mov
adc
jg
push
int3
lods
xchg
leave
pop
rcl
ds
mov
dec
inc
xchg
xchg
or
shl
je
cmp
imul
mov
stc
adc
loop
loop
jl
test
movs
fnstenv
pushf
jo
fisub
mov
or
mov
mov
test
fidiv
cdq
movs
mov
mov
int
stos
push
push
lods
stc
xor
mov
or
loope
lods
push
int3
and
leave
inc
jbe
sub
rcpps
dec
push
ret
popf
enter
xchg
nop
xchg
dec
sub
movs
xchg
retf
pop
addr16
adc
mov
scas
mov
dec
data16
pop
shl
je
sbb
imul
xor
cmps
ror
cdq
stc
xchg
sub
bound
movs
fnstenv
pushf
jo
fisub
mov
or
call
pop
mov
test
fidiv
cwde
movs
mov
mov
int3
pop
stos
pop
imul
jns
dec
inc
cmp
or
sub
dec
and
sub
dec
push
adc
push
ret
mov
sbb
adc
les
pop
mov
rcl
pop
mov
call
repz
mov
test
fild
(bad)
mov
out
push
cdq
stc
xchg
or
arpl
movs
fcomi
loop
xor
outs
or
test
mov
mov
add
xchg
or
test
mul
int3
pop
test
jns
dec
push
cmp
add
or
jmp
and
sub
dec
push
adc
push
ret
mov
sbb
adc
test
push
int3
movs
xchg
ret
pop
rcl
pop
cmps
mov
retf
aad
movs
pop
cmp
xor
jge
xchg
xor
cmp
sub
and
ror
stc
or
arpl
movs
(bad)
mov
movs
adc
das
add
mov
mov
mov
adc
(bad)
add
test
out
push
rol
pop
push
lods
imul
call
cmp
dec
add
sub
cmp
jne
das
push
adc
push
sar
or
inc
mov
sub
movs
ror
jecxz
pop
scas
cwde
dec
mov
shl
dec
mov
push
jge
fnsave
adc
dec
add
pusha
mov
push
cdq
fld
call
mul
movs
xor
das
inc
or
mov
mov
adc
(bad)
add
test
out
push
rol
out
pop
stos
pop
push
lods
imul
call
sub
dec
add
imul
push
shl
nop
adc
xchg
push
enter
pop
fnstenv
push
(bad)
mov
retf
xchg
(bad)
movs
pop
cmp
jge
popf
jo
cmp
imul
add
xchg
add
popa
call
imul
cmp
mov
outs
and
sbb
dec
mov
xchg
add
test
mov
int
scas
pop
(bad)
jmp
inc
ds
or
push
test
ins
daa
pushf
jmp
mov
xor
rsqrtps
iret
push
ret
mov
call
adc
xor
int3
cmps
cdq
jmp
fnstenv
push
scas
mov
enter
lea
adc
jge
popf
je
cmp
outs
add
pusha
mov
push
mov
loope
call
imul
sbb
mov
jg
sbb
mov
mov
add
xchg
imul
mov
cmps
cmps
int
stos
pop
push
mov
cmp
push
call
ins
cs
and
sub
pop
adc
iret
inc
ret
lods
dec
cld
add
adc
aaa
out
int3
in
iret
packuswb
nop
shl
scas
mov
retf
xchg
int
adc
sbb
lahf
popf
fs
sub
(bad)
outs
jp
imul
mov
mov
push
popf
jmp
and
mov
jo
into
loope
mov
sbb
enter
mov
mov
mov
call
add
test
cmps
out
pop
stos
inc
jp
mov
jl
or
or
in
sub
dec
xor
stc
les
sub
pop
push
add
push
ret
lods
dec
in
add
adc
aaa
out
int3
movs
xchg
retf
packuswb
nop
shl
push
scas
mov
retf
xchg
push
daa
push
cmp
(bad)
popf
je
cmp
imul
pusha
jecxz
and
add
ror
cdq
stc
xchg
or
arpl
movs
fldl2e
pusha
sbb
adc
outs
add
test
xor
imul
cwde
test
mov
dec
pop
stos
pop
push
lods
jns
inc
inc
cmp
or
sbb
loopne
adc
dec
and
sub
cmovge
dec
in
inc
std
adc
ja
push
int3
mov
retf
push
xchg
ret
aaa
push
scas
mov
retf
xchg
mov
jo
cs
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
push
jbe
stos
(bad)
sbb
test
push
mov
dec
in
ret
nop
sahf
retf
in
fs
int3
add
retf
push
xchg
ret
neg
xlat
(bad)
push
in
xchg
gs
cmp
xor
outs
or
pop
(bad)
fisubr
inc
mov
cmc
movs
and
out
arpl
in
jge
adc
fstp
sbb
adc
jmp
or
es
jmp
sahf
mov
or
xor
mov
mov
mov
dec
pop
stos
push
out
enter
inc
inc
inc
ror
call
mov
dec
and
ins
lds
lods
(bad)
sbb
lock
push
aad
dec
in
outs
jnp
nop
and
sub
add
add
int3
icebp
pop
retf
push
xchg
ret
inc
cwde
scas
mov
retf
xchg
fbld
push
cmp
jne
cs
or
lock
fisubr
inc
mov
mov
xchg
loope
sbb
xlat
ss
fnstenv
fs
adc
jmp
es
sbb
sahf
mov
and
adc
jnp
add
mov
dec
pop
stos
pop
push
lods
cmp
fmul
call
cld
mov
lds
scas
(bad)
sbb
repnz
push
retf
xor
adc
movq
sub
pop
xchg
ret
lods
xchg
scas
mov
fs
xchg
xchg
cmp
xor
mov
pushf
je
cmp
imul
and
(bad)
inc
push
ror
xor
xchg
xchg
jne
mov
cmp
sti
adc
mov
imul
outs
jnp
in
sar
and
fisttp
outs
and
or
inc
dec
bound
test
add
je
add
and
iret
aas
hlt
jle
sub
shl
jp
mov
scas
mov
mov
(bad)
lock
push
data16
stc
sbb
or
or
and
cmps
mov
outs
or
arpl
lds
mov
or
dec
and
lahf
mov
imul
(bad)
mov
mov
pop
push
and
mov
das
push
out
les
pop
cli
push
push
adc
and
gs
and
add
mov
mov
cmps
jb
(bad)
sub
mov
(bad)
stc
xlat
jle
cmp
ficom
fwait
jl
stos
or
mov
out
mov
loopne
inc
(bad)
movs
imul
jmp
adc
adc
fnstcw
mov
imul
fptan
ret
jmp
jae
cli
addr16
test
mov
test
leave
lods
ds
adc
cmp
push
dec
dec
and
mov
dec
push
add
dec
push
adc
push
xchg
arpl
jno
inc
hlt
push
cmps
push
int3
loope
cmps
jp
mov
stos
pop
jnp
mov
mov
sar
sbb
cld
out
je
cmp
or
pushf
add
mov
pmaxsw
sar
or
and
or
test
mov
sbb
daa
dec
pop
(bad)
out
xlat
cmp
push
mov
dec
out
dec
retf
jmp
out
add
push
fldcw
lods
fimul
es
push
es
or
scas
lods
dec
push
sbb
icebp
mov
sbb
(bad)
ins
aaa
pusha
mov
xchg
ss
adc
xor
mov
ret
pop
ins
fcmovne
cmp
cmps
xchg
mov
xchg
retf
int3
jns
adc
icebp
adc
adc
adc
and
cmps
xchg
imul
cld
outs
pop
lea
rcr
cwde
mul
pop
adc
sti
push
outs
addr16
mov
dec
sbb
pop
jmp
dec
lock
cmp
sar
lds
or
lods
jns
push
and
arpl
push
popf
stos
add
push
fcomp
jp
xor
fcomp
sahf
sub
sbb
push
mov
adc
ror
shl
hlt
in
cmp
xchg
inc
jle
out
adc
add
pop
out
rol
xlat
dec
dec
enter
pushf
loopne
(bad)
xchg
popf
sar
xlat
mov
outs
jge
enter
shr
loope
rcr
imul
div
(bad)
(bad)
push
sub
xchg
mov
leave
lods
xor
sub
pushf
imul
sub
mov
jbe
adc
rsqrtps
mov
mov
daa
mov
xchg
je
jnp
dec
enter
lea
mov
nop
inc
ins
(bad)
(bad)
aas
cli
(bad)
dec
xlat
js
cmp
into
adc
adc
pop
out
lock
inc
push
sar
pushw
test
call
xchg
mov
or
lods
inc
push
outs
shr
fcmovne
rol
pusha
mov
push
push
inc
shl
lahf
int
stos
push
(bad)
loop
jo
mulps
mov
dec
jnp
push
repz
iret
sbb
jne
push
push
mov
cmps
daa
test
adc
jecxz
mov
mov
add
retf
or
scas
mov
shl
repnz
dec
sbb
in
adc
pop
mov
xlat
mov
adc
dec
test
hlt
jecxz
xor
jns
add
jmp
(bad)
call
xchg
xchg
jb
stc
pusha
sbb
test
(bad)
mov
push
(bad)
fist
js
xor
imul
dec
sub
mov
sbb
cld
outs
and
xor
std
adc
adc
mov
cmps
aaa
push
loopne
cmp
psllq
in
jb
pop
repnz
inc
sbb
icebp
xor
pop
sahf
imul
push
aam
dec
cdq
stc
sar
add
mov
repnz
sahf
(bad)
fldenv
xchg
mov
outs
add
cli
mov
fisub
ja
mov
push
test
mov
scas
call
adc
and
or
inc
into
cmp
fwait
stos
adc
pop
xor
popa
ds
xor
(bad)
jle
jnp
dec
xchg
sbb
add
(bad)
in
sub
xchg
dec
data16
stc
shl
xchg
sbb
jmp
xchg
mov
out
jmp
push
(bad)
pushf
out
or
mov
mul
outs
pop
(bad)
arpl
cmps
inc
sub
mov
mov
pusha
mov
jnp
test
stos
js
xchg
fs
leave
lods
or
xor
jns
js
mov
sahf
jmp
cli
jnp
add
jg
adc
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
add
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
jp
inc
jbe
dec
inc
jbe
and
xor
xchg
add
test
mov
int
stos
pop
push
lods
jns
inc
inc
cmp
or
or
loope
sub
dec
and
sub
rsqrtps
iret
push
ret
mov
adc
ja
push
int3
movs
xchg
retf
pop
rcl
push
scas
mov
retf
xchg
lea
xor
jge
popf
je
cmp
imul
and
xchg
or
arpl
movs
fdecstp
loop
jo
fsubp
adc
outs
add
test
mov
mov
addr16
xor
add
out
dec
dec
psubsw
psubsb
psrld
packsswb
push
psllw
psllw
paddsw
punpcklbw
pop
pmullw
psubusb
paddsw
paddw
inc
punpcklbw
punpckhdq
pand
psubb
inc
pxor
psllw
pmaddwd
psubb
jmp
jno
pop
push
ins
and
and
cmp
cmp
inc
fmul
dec
(bad)
shr
outs
fistp
pusha
pop
push
sub
psubusb
movq
psubsb
punpcklbw
sub
packuswb
paddusb
punpckhwd
psubusb
mov
movq
psubsb
punpcklbw
packuswb
or
paddusb
punpckhwd
psubusb
movq
xor
psubsb
punpcklbw
packuswb
paddusb
test
jne
punpckhwd
psubusb
movq
psubsb
jmp
add
add
sub
sub
pop
push
ss
adc
shl
pop
loop
stos
lods
movs
mov
inc
xchg
test
mov
push
fild
fdivrp
jno
punpcklbw
packuswb
paddusb
punpckhwd
pop
psubusb
movq
psubsb
punpcklbw
pop
packuswb
paddusb
punpckhwd
psubusb
add
movq
psubsb
punpcklbw
packuswb
jmp
paddusb
punpckhwd
psubusb
movq
psubsb
punpcklbw
packuswb
paddusb
push
punpckhwd
psubusb
movq
psubsb
pop
punpcklbw
packuswb
paddusb
punpckhwd
call
psubusb
movq
psubsb
punpcklbw
push
packuswb
paddusb
punpckhwd
psubusb
pop
movq
psubsb
punpcklbw
packuswb
paddusb
punpckhwd
psubusb
movq
bswap
psubsb
punpcklbw
packuswb
paddusb
rdtsc
punpckhwd
psubusb
movq
psubsb
fld
punpcklbw
packuswb
paddusb
punpckhwd
fnop
psubusb
movq
psubsb
punpcklbw
loop
packuswb
paddusb
punpckhwd
psubusb
jmp
movq
psubsb
punpcklbw
packuswb
pop
paddusb
punpckhwd
psubusb
movq
adc
psubsb
punpcklbw
packuswb
paddusb
test
jne
punpckhwd
psubusb
movq
psubsb
punpcklbw
packuswb
paddusb
punpckhwd
inc
psubusb
movq
psubsb
punpcklbw
push
packuswb
paddusb
punpckhwd
psubusb
xor
pcmpgtd
pcmpgtd
paddusw
pxor
pop
punpckhbw
movq
packssdw
paddw
cmp
jne
psrlq
pcmpeqb
punpcklwd
psrlw
mov
paddusw
paddsw
punpckhdq
psubb
push
jmp
cs
sub
paddw
packssdw
jmp
lods
(bad)
jmp
push
jnp
int
paddusb
psubusb
packsswb
psubusb
xor
punpckhbw
pcmpeqb
punpcklwd
psrlw
dec
paddusw
paddsw
punpckhdq
psubb
dec
jmp
mov
stos
aam
paddw
packssdw
jmp
add
push
jge
iret
neg
dec
paddusb
psubusb
packsswb
psubusb
dec
punpckhbw
pcmpeqb
punpcklwd
psrlw
xor
paddusw
paddsw
punpckhdq
psubb
call
jmp
cmps
sar
and
fwait
ret
paddw
packssdw
jmp
push
aas
push
xor
fmul
psubusb
packsswb
psubusb
cmp
jne
mov
punpckhbw
pcmpeqb
punpcklwd
psrlw
add
paddusw
paddsw
punpckhdq
psubb
mov
jmp
int3
neg
inc
jo
shr
cmp
std
repz
imul
or
push
aaa
pop
add
paddusb
psubusb
packsswb
psubusb
call
punpckhbw
pcmpeqb
punpcklwd
psrlw
mov
paddusw
paddsw
punpckhdq
psubb
push
jmp
aas
imul
mov
paddw
packssdw
jmp
scas
fadd
sub
mov
fmul
psubusb
packsswb
psubusb
sub
punpckhbw
pcmpeqb
punpcklwd
psrlw
push
paddusw
paddsw
punpckhdq
psubb
push
jmp
xor
scas
fadd
sub
cmps
punpcklbw
paddsb
psubusb
push
psllq
pxor
paddw
pslld
push
paddb
psubusb
pcmpeqw
psrld
push
pmullw
psubusb
psubusb
paddusb
push
por
psubsb
movq
punpckhwd
push
pcmpgtw
psrlq
pmullw
packssdw
push
pslld
psubusb
punpcklbw
pmulhw
mov
punpckhwd
pslld
psubd
psrld
add
paddw
pslld
paddb
psubusb
push
pcmpeqw
psrld
pmullw
psubusb
sub
psubusb
paddusb
por
psubsb
push
movq
punpckhwd
pcmpgtw
psrlq
push
pmullw
packssdw
pslld
psubusb
call
punpcklbw
pmulhw
punpckhwd
pslld
mov
psubd
psrld
paddw
pslld
mov
paddb
psubusb
pcmpeqw
psrld
add
pmullw
psubusb
psubusb
paddusb
mov
por
psubsb
movq
punpckhwd
add
pcmpgtw
psrlq
pmullw
packssdw
call
pslld
psubusb
punpcklbw
pmulhw
push
punpckhwd
pslld
psubd
psrld
push
paddw
pslld
paddb
psubusb
call
pcmpeqw
psrld
pmullw
psubusb
psubusb
paddusb
por
psubsb
movq
punpckhwd
pcmpgtw
psrlq
pmullw
packssdw
pslld
psubusb
punpcklbw
pmulhw
punpckhwd
pslld
psubd
psrld
paddw
pslld
paddb
psubusb
pcmpeqw
psrld
mov
pmullw
psubusb
psubusb
paddusb
add
por
psubsb
movq
punpckhwd
mov
pcmpgtw
psrlq
pmullw
packssdw
add
pslld
psubusb
punpcklbw
pmulhw
call
punpckhwd
pslld
psubd
psrld
jmp
paddw
pslld
paddb
psubusb
pop
pcmpeqw
psrld
pmullw
psubusb
push
psubusb
paddusb
por
psubsb
push
movq
punpckhwd
pcmpgtw
psrlq
push
punpcklbw
punpckldq
pmulhw
jmp
and
(bad)
out
pop
inc
call
paddsb
paddsw
punpckhdq
punpckldq
pop
psrlq
psubsw
pcmpgtb
cmp
jl
pand
paddusb
paddusw
punpckhbw
mov
pcmpeqd
punpckhbw
psubd
psrld
sub
pcmpeqb
punpckhwd
jmp
sahf
leave
repnz
xchg
mov
ror
pand
pcmpgtb
paddb
sub
psrld
pand
psubb
pcmpeqd
call
packssdw
pcmpgtd
pcmpgtb
paddb
xor
psrld
pand
psubb
pcmpeqd
xor
packssdw
pcmpgtd
pcmpgtb
paddb
add
psrld
pand
psubb
pcmpeqd
push
packssdw
pcmpgtd
pcmpgtb
paddb
mov
psrld
pand
psubb
pcmpeqd
push
packssdw
pcmpgtd
pcmpgtb
paddb
push
psrld
pand
psubb
pcmpeqd
push
packssdw
pcmpgtd
pcmpgtb
paddb
call
psrld
pand
psubb
pcmpeqd
jmp
packssdw
pcmpgtd
pcmpgtb
paddb
pop
psrld
pand
psubb
pcmpeqd
add
packssdw
pcmpgtd
pcmpgtb
paddb
push
psrld
pand
psubb
pcmpeqd
pop
packssdw
pcmpgtd
pcmpgtb
paddb
xor
psrld
pand
psubb
pcmpeqd
cmp
jne
packssdw
pcmpgtd
pcmpgtb
paddb
mov
psrld
pand
psubb
pcmpeqd
jmp
packssdw
pcmpgtd
pcmpgtb
paddb
jns
jl
mov
stos
jp
jnp
xchg
out
loopne
mov
mov
cmp
sub
xchg
sar
(bad)
dec
jb
cdq
pand
psubb
pcmpeqd
mov
packssdw
pcmpgtd
pcmpgtb
paddb
mov
psrld
pand
psubb
pcmpeqd
inc
packssdw
pcmpgtd
pcmpgtb
paddb
mov
psrld
pand
psubb
pcmpeqd
mov
packssdw
pcmpgtd
pcmpgtb
paddb
ret
and
and
sti
(bad)
test
(bad)
pop
fwait
xchg
out
pop
fstp
jg
xlat
loop
aam
xor
leave
or
mov
jb
cdq
pand
psubb
pcmpeqd
mov
packssdw
pcmpgtd
pcmpgtb
paddb
push
psrld
por
jmp
cmp
(bad)
mov
psrad
pop
movq
psubb
packsswb
pcmpeqb
mov
paddsb
pmullw
punpcklwd
jmp
test
in
mov
psrad
movq
psubb
packsswb
push
pcmpeqb
paddsb
pmullw
punpcklwd
mov
jmp
xor
sar
and
psrad
movq
psubb
mov
packsswb
pcmpeqb
paddsb
pmullw
punpcklwd
jmp
sar
and
cwde
mov
leave
movq
cmp
jne
psubb
packsswb
pcmpeqb
paddsb
pmullw
punpcklwd
jmp
xchg
mov
jp
psrad
cmp
jne
movq
psubb
packsswb
pcmpeqb
pop
paddsb
pmullw
punpcklwd
jmp
mov
jno
mov
psrad
movq
psubb
packsswb
mov
pcmpeqb
paddsb
pmullw
punpcklwd
mov
jmp
jns
enter
bound
movq
psubb
add
packsswb
pcmpeqb
paddsb
pmullw
mov
punpcklwd
jmp
aaa
pop
test
psrad
movq
mov
psubb
packsswb
pcmpeqb
paddsb
add
pmullw
punpcklwd
jmp
in
adc
fild
psrad
mov
movq
psubb
packsswb
pcmpeqb
add
paddsb
pmullw
punpcklwd
jmp
mov
jb
psrad
movq
psubb
packsswb
test
je
pcmpeqb
paddsb
pmullw
punpcklwd
add
jmp
sahf
(bad)
cmp
lods
psrad
movq
psubb
mov
packsswb
pcmpeqb
paddsb
pmullw
cmp
jne
punpcklwd
jmp
fild
push
jp
(bad)
out
psrad
movq
mov
psubb
packsswb
pcmpeqb
paddsb
cmp
jne
pmullw
punpcklwd
jmp
inc
ins
xchg
mov
psrad
mov
movq
psubb
packsswb
pcmpeqb
xor
paddsb
pmullw
punpcklwd
jmp
cmps
int
sbb
mov
leave
movq
psubb
packsswb
push
pcmpeqb
paddsb
pmullw
punpcklwd
push
psllq
paddusw
punpcklbw
push
paddsb
packsswb
packssdw
pandn
push
jmp
jmp
cmp
cld
cmp
fadd
pcmpeqw
psubb
push
paddw
pcmpeqd
psubb
pslld
push
pand
psrlw
pcmpeqd
push
pcmpgtw
pmaddwd
psubusb
pcmpeqd
call
pmaddwd
punpckhbw
pand
psrld
add
packuswb
pandn
punpckldq
psrlq
ret
cmp
arpl
jae
dec
int3
add
in
pop
or
fldenv
dec
dec
jge
fsubr
adc
nop
mov
add
repz
push
adc
hlt
mov
clc
cmp
fisub
enter
les
dec
ds
pop
xchg
mov
(bad)
sub
lahf
into
inc
in
ret
arpl
pop
pop
push
ins
and
and
cmp
cmp
fmul
dec
(bad)
shr
outs
fistp
add
outs
bound
add
add
sub
sub
call
cmp
fisub
enter
les
dec
ds
pop
xchg
mov
(bad)
sub
cwde
lahf
into
inc
in
ret
arpl
xchg
hlt
push
xchg
ds
adc
sub
sti
add
mov
mov
shl
push
jne
xor
mov
jo
xchg
add
hlt
jbe
mov
xor
shl
inc
jb
cdq
push
jne
nop
ins
imul
ja
test
inc
fs
hlt
push
je
adc
ins
imul
push
dec
xchg
mov
adc
aas
sbb
gs
test
push
ss
adc
shl
pop
loop
stos
movs
mov
dec
inc
xchg
test
mov
push
fild
ficom
jns
jl
mov
data16
jnp
xchg
out
loopne
xor
sar
std
sub
xchg
and
and
sti
(bad)
test
mov
out
fstp
jg
xlat
loop
jmp
pop
leave
or
mov
cmp
arpl
jae
dec
int3
add
inc
in
pop
or
fldenv
dec
dec
jge
fdiv
xor
or
sbb
repz
push
adc
paddsw
psubsw
psllq
push
paddusw
punpcklbw
paddsb
packsswb
xor
packssdw
pandn
jmp
cmp
add
push
js
psubusb
pop
pcmpeqw
psubb
paddw
pcmpeqd
ret
hlt
mov
clc
cmp
fisub
enter
call
xchg
movs
mov
(bad)
mov
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
cmps
dec
mov
or
(bad)
out
fimul
mov
push
xchg
push
cmp
(bad)
mov
pop
mov
sub
cmp
xchg
(bad)
mov
push
xchg
(bad)
adc
push
xchg
jo
push
xchg
(bad)
mov
(bad)
xchg
(bad)
mov
push
xchg
jmp
dec
xchg
(bad)
mov
sub
mov
mov
push
leave
addr16
xchg
(bad)
aaa
(bad)
or
push
xchg
jo
inc
xchg
(bad)
mov
inc
xchg
(bad)
mov
push
pushf
or
xor
ja
(bad)
in
mov
mov
xor
mov
(bad)
cmp
cwde
xchg
(bad)
mov
push
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
(bad)
retf
fimul
mov
push
xchg
push
cmp
xchg
(bad)
mov
push
mov
(bad)
mov
lods
ins
pop
cmp
lahf
mov
push
adc
add
push
mov
mov
push
xchg
push
cmp
(bad)
mov
push
xchg
fild
adc
pop
pop
(bad)
xchg
push
xchg
adc
mov
mov
push
xchg
fild
fwait
mov
pop
pop
mov
rcr
or
pushf
icebp
ja
push
retf
mov
dec
mov
int3
xchg
(bad)
mov
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
pop
mov
push
mov
cmp
ins
into
shr
mov
int
mov
push
xchg
sbb
dec
push
inc
adc
shr
mov
aad
mov
fidiv
dec
xchg
push
xchg
(bad)
aaa
push
sti
data16
xchg
(bad)
in
jl
mov
fcomp
mov
mov
mov
push
xchg
push
sti
add
xchg
push
xchg
(bad)
aaa
push
mov
jnp
(bad)
in
push
mov
fcomp
mov
mov
mov
push
xchg
push
sti
pop
jp
mov
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
or
shl
jne
(bad)
in
xchg
mov
fcomp
mov
mov
jns
push
xchg
push
sti
imul
mov
push
leave
addr16
push
xchg
(bad)
aaa
(bad)
aas
(bad)
mov
mov
leave
outs
push
xchg
(bad)
aaa
(bad)
xchg
mov
mov
leave
add
(bad)
aaa
(bad)
xchg
mov
push
leave
addr16
push
xchg
(bad)
aaa
(bad)
mov
mov
push
leave
sub
(bad)
aaa
(bad)
(bad)
mov
mov
leave
addr16
push
xchg
(bad)
aaa
(bad)
mov
mov
push
xchg
xlat
xor
mov
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
pop
call
das
or
push
xchg
or
push
out
push
movs
xchg
(bad)
mov
push
xchg
out
push
push
jnp
test
xchg
add
pop
mov
(bad)
call
push
mov
jmp
(bad)
mov
mov
retf
fist
mov
mov
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
add
or
ja
pop
pop
jp
push
xchg
add
pop
rol
sti
pop
jnp
mov
push
xchg
(bad)
push
ins
jo
call
out
xchg
push
sti
adc
ja
pop
pop
or
xchg
(bad)
out
jnp
cmps
push
xchg
add
or
ja
pop
pop
loop
push
xchg
add
pop
rol
sti
pop
jnp
movs
push
xchg
add
pop
adc
pop
xchg
(bad)
(bad)
mov
push
xchg
(bad)
(bad)
lods
xchg
(bad)
mov
push
xchg
fdivr
mov
les
dec
xchg
(bad)
mov
push
retf
push
jns
xchg
(bad)
mov
push
out
stc
add
add
pop
adc
push
xchg
(bad)
xor
call
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
cmc
les
jmp
mov
test
out
(bad)
(bad)
jbe
push
xchg
(bad)
mov
push
adc
leave
test
aas
xchg
mov
(bad)
push
xchg
(bad)
mov
cmp
iret
jmp
es
or
arpl
mov
add
sbb
call
mov
xchg
ror
jmp
adc
lods
movs
jo
add
mov
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
ins
jno
lods
stc
mov
push
stc
vprotq
mov
push
(bad)
or
push
pushf
or
scas
ins
jo
xchg
sbb
jmp
mov
(bad)
pop
sbb
stos
fcom
mov
push
ror
add
jns
into
inc
lds
outs
sbb
loopne
sbb
js
push
cmps
adc
push
sti
inc
push
xchg
stos
aas
imul
push
shl
jg
sub
cli
pop
or
fcmovnbe
push
xchg
mov
adc
mov
push
xchg
(bad)
xor
outs
push
add
pop
sbb
call
mov
icebp
push
sbb
out
ficomp
mov
pop
sbb
xchg
fild
icebp
pop
adc
fcmovu
xchg
inc
adc
push
xchg
(bad)
aaa
sbb
data16
xchg
pop
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
push
inc
stos
sbb
mov
push
leave
addr16
lods
ins
jo
sbb
xchg
mov
sbb
xchg
mov
retf
push
outs
cmp
ins
clc
mov
in
aam
stc
(bad)
aam
stc
(bad)
aam
stc
pop
mov
sbb
stos
xchg
cmp
ins
jo
mov
retf
pop
jp
movs
push
xchg
aad
jnp
jo
fcmovbe
mov
out
xchg
(bad)
in
test
lods
sbb
cmps
add
cmps
push
xchg
add
pop
jp
movs
push
xchg
aad
push
fwait
inc
dec
xchg
(bad)
in
fiadd
mov
lods
ins
fist
mov
mov
fwait
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
inc
jbe
pop
add
pop
jp
movs
push
xchg
aad
arpl
inc
add
test
jno
(bad)
out
xchg
push
cmp
xchg
(bad)
mov
adc
ret
lods
xchg
mov
scas
ins
jo
and
add
pop
ins
mov
(bad)
push
mov
or
add
in
fisubr
jge
rol
ins
mov
inc
push
pushf
or
pop
xchg
(bad)
push
add
je
nop
out
mov
lods
and
mov
push
sbb
mov
mov
(bad)
mov
arpl
mov
lods
ins
sbb
push
xchg
(bad)
aaa
(bad)
xor
xor
push
xchg
pop
xor
mov
popa
ins
fsub
push
xchg
dec
(bad)
push
leave
sub
(bad)
mov
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
popf
xor
pop
ins
cli
call
jo
lods
les
cmp
cwde
(bad)
mov
push
fsubp
mov
ja
clc
mov
popa
ins
fsub
(bad)
repz
fcomp
mov
sbb
(bad)
push
sbb
mov
push
cmc
adc
cmc
mov
lahf
xor
ja
add
pop
nop
sar
lods
mov
ja
pop
push
nop
mov
xchg
jmp
cmp
fcomp
lahf
jns
xchg
(bad)
mov
push
xchg
(bad)
mov
push
xchg
add
pop
jp
cmps
push
xchg
aad
jg
jo
lods
in
xor
push
ins
pop
cmp
mov
xchg
push
lock
(bad)
mov
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
pop
mov
ins
aam
stc
mov
test
dec
mov
fcomp
sub
pop
ret
pop
ins
mov
mov
push
xchg
add
inc
adc
xchg
(bad)
xor
push
fldenv
mov
aaa
xchg
mov
test
add
ins
std
mov
push
pushf
or
xchg
(bad)
push
lahf
xchg
(bad)
mov
arpl
(bad)
mov
pop
ins
mov
mov
push
xchg
(bad)
(bad)
mov
iret
mov
nop
iret
adc
cmps
xor
fiadd
cmp
push
jp
stos
push
xchg
aad
xchg
push
inc
cmp
push
jge
xchg
(bad)
mov
push
xchg
(bad)
xor
lods
inc
data16
(bad)
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
nop
jge
mov
aam
sbb
daa
(bad)
mov
jecxz
(bad)
mov
push
xchg
fdiv
lods
les
xor
push
fldenv
mov
nop
xor
and
xchg
(bad)
mov
push
xchg
fdiv
lods
les
aaa
mov
xchg
(bad)
in
fmul
aas
mov
push
xchg
(bad)
mov
lods
mov
lds
into
and
mov
add
push
xchg
(bad)
xor
lods
les
mov
jne
jo
jecxz
(bad)
mov
popa
ins
fsub
push
sbb
mov
push
leave
addr16
stos
ins
jo
(bad)
pop
(bad)
mov
push
xchg
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
test
cdq
add
push
jp
test
aaa
fs
ficom
movsx
add
push
ret
fcmovbe
jecxz
push
xchg
data16
xchg
(bad)
in
aam
inc
lods
jp
stos
push
xchg
aad
fcomp
jecxz
lods
inc
or
push
out
aaa
push
jecxz
mov
fcomp
(bad)
out
cmp
xchg
ins
sbb
push
xchg
(bad)
cmp
push
xchg
sti
jmp
fimul
mov
lods
ins
push
sti
xor
shl
pusha
ins
pop
xor
inc
xchg
(bad)
in
je
inc
lods
stc
pop
sbb
out
mov
cmp
clc
mov
pusha
ins
sbb
push
xchg
(bad)
jns
xchg
xchg
push
sbb
mov
xchg
call
ins
jo
loope
(bad)
mov
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
push
repz
out
mov
retf
in
fadd
xchg
xchg
jo
shr
mov
xor
mov
push
leave
addr16
ins
jo
aam
mov
xchg
outs
mov
pop
ins
mov
inc
push
xchg
(bad)
mov
(bad)
mov
lods
adc
inc
pop
xchg
(bad)
mov
push
xchg
add
push
jp
test
xchg
aad
fbld
inc
add
movsx
add
pop
ins
mov
mov
push
leave
addr16
cmps
ins
jo
aam
mov
mov
leave
jcxz
ins
jo
aam
mov
push
xchg
lahf
mov
push
xchg
(bad)
xor
push
mov
push
cmp
xchg
(bad)
mov
push
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
push
dec
js
sti
jo
push
xchg
push
inc
push
add
sub
xchg
(bad)
mov
push
xchg
mov
push
sbb
and
pop
pop
pop
or
test
out
mov
push
push
cmp
xchg
(bad)
mov
push
pushf
or
push
xchg
pop
pop
pop
aam
push
xchg
mov
push
xchg
dec
mov
ret
mov
push
xchg
nop
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
jle
pop
add
push
xchg
dec
mov
pop
(bad)
mov
push
push
sti
ret
outs
xchg
(bad)
mov
inc
xchg
(bad)
jle
cld
mov
sbb
outs
retf
in
int
jae
fild
(bad)
mov
push
xchg
pop
daa
fdiv
mov
lds
mov
jl
(bad)
mov
ret
xchg
(bad)
mov
push
ins
sbb
push
xchg
(bad)
(bad)
push
xchg
mov
push
xchg
jo
(bad)
xchg
(bad)
mov
push
xchg
data16
lods
ins
jo
push
stc
jo
push
stos
inc
jge
sti
mov
retf
xchg
(bad)
mov
push
xchg
jo
das
xchg
(bad)
mov
push
xchg
(bad)
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
(bad)
push
xchg
mov
lods
and
mov
(bad)
xchg
(bad)
mov
push
xchg
inc
lods
ins
jo
push
xchg
mov
push
xchg
jo
(bad)
xchg
(bad)
mov
push
xchg
popaw
lods
ins
jo
aam
mov
pop
pop
push
inc
lods
ins
or
push
pushf
or
ins
jo
test
dec
retf
(bad)
in
cmp
pop
xchg
add
pop
ins
mov
mov
nop
out
mov
lods
and
mov
rcl
xchg
ins
sbb
push
xchg
(bad)
(bad)
push
xchg
mov
push
xchg
jo
(bad)
xchg
(bad)
mov
push
xchg
ss
shr
retf
test
pop
(bad)
mov
push
xchg
popa
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
push
mov
jge
inc
rcl
mov
push
ins
cmp
push
xchg
pop
adc
mov
mov
(bad)
mov
lods
stc
(bad)
xor
lods
(bad)
mov
icebp
arpl
fcom
mov
stos
xchg
cmp
xchg
(bad)
mov
push
xchg
add
arpl
iret
scas
fcom
(bad)
aaa
push
or
jp
lods
push
xchg
rol
pop
xchg
(bad)
mov
fmul
sbb
sbb
cmp
rcl
fcom
scas
xchg
xchg
sbb
mov
push
(bad)
mov
fsubr
cmp
xchg
mov
push
xchg
push
jns
xchg
(bad)
mov
push
xchg
(bad)
xchg
mov
pop
adc
push
xchg
(bad)
mov
mov
retf
addr16
fwait
retf
push
xchg
dec
out
mov
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
fdiv
cmc
jmp
inc
fsub
cmp
xchg
mov
rcl
push
xchg
jl
mov
retf
push
cmp
xchg
out
pop
or
push
xchg
dec
aaa
push
xchg
mov
pop
fsubr
cli
mov
jae
push
push
xchg
(bad)
mov
shr
retf
ret
mov
xlat
mov
lahf
push
jge
xchg
(bad)
mov
push
ins
pop
push
out
jge
inc
cmp
in
cmp
pmaxsw
repnz
imul
ret
fld
(bad)
mov
mov
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
rcl
aam
ret
jo
pop
xchg
cmp
call
push
xchg
fld
ret
fsubr
fcom
cmp
retf
mov
mov
div
sbb
mov
(bad)
xor
es
push
inc
adc
xchg
mov
(bad)
loope
ins
push
js
xchg
(bad)
mov
cmp
out
push
xchg
iret
call
xchg
sbb
xchg
and
add
push
and
mov
push
(bad)
inc
push
ret
data16
xchg
(bad)
in
ins
or
add
out
push
xchg
(bad)
aam
shl
push
xchg
cmovno
test
push
xchg
(bad)
xor
pop
xchg
(bad)
in
push
arpl
sbb
cmps
xchg
adc
mov
push
xchg
push
inc
rcl
mov
xchg
xchg
fst
push
stc
(bad)
push
dec
or
add
shr
mov
pusha
lea
push
xchg
pop
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fcomp
out
xor
(bad)
mov
lods
ins
jo
add
test
dec
mov
int3
outs
mov
bound
sub
xchg
test
push
cwde
into
cmp
jns
cwde
stc
mov
push
cwde
in
mov
push
cwde
jmp
cwde
(bad)
mov
push
cwde
(bad)
mov
push
xchg
mov
pop
xchg
(bad)
push
adc
(bad)
mov
nop
sbb
xchg
xchg
xchg
push
stc
(bad)
aam
stc
(bad)
(bad)
push
xchg
(bad)
scas
add
adc
mov
inc
xchg
(bad)
out
push
dec
mov
pop
xchg
(bad)
out
push
(bad)
mov
xchg
lds
(bad)
xor
adc
push
xchg
(bad)
loope
pop
add
mov
shr
retf
or
push
js
stc
xchg
xchg
lods
stc
xchg
xchg
scas
stc
xchg
xchg
test
stc
xchg
xchg
lods
push
mov
fbstp
gs
(bad)
mov
push
adc
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcl
push
aas
rcr
repnz
ins
push
js
call
rcl
mov
lods
and
mov
pop
ins
cmp
xchg
pop
ret
sbb
(bad)
out
stos
mov
dec
sbb
mov
push
leave
addr16
mov
adc
push
xchg
(bad)
aam
lds
mov
retf
or
push
out
push
sbb
xchg
xchg
xchg
push
xchg
(bad)
mov
push
xchg
(bad)
in
cmp
in
sar
mov
(bad)
xchg
mov
lods
ins
fiadd
fisttp
retf
cmps
push
mov
mov
xchg
xlat
cmp
adc
jg
cmp
push
xchg
cmp
xchg
(bad)
mov
push
enter
push
mov
sbb
(bad)
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
fcmovb
neg
jp
mov
xchg
aam
dec
sbb
xchg
push
xchg
(bad)
aam
sti
(bad)
mov
jo
jnp
(bad)
mov
lods
push
adc
ja
(bad)
mov
push
xchg
ds
xchg
(bad)
in
mov
pop
imul
mov
(bad)
xor
adc
or
push
sub
mov
addr16
push
mov
push
mov
xchg
(bad)
aaa
push
(bad)
mov
mov
pop
ror
test
cli
inc
sbb
jne
es
pop
xchg
cli
mov
xchg
(bad)
mov
mov
adc
xor
mov
xchg
aam
dec
sbb
mov
(bad)
xor
push
sbb
call
xchg
pusha
es
cmp
xor
push
lea
rcl
cmp
jnp
(bad)
mov
push
xchg
(bad)
aaa
into
stos
mov
push
xchg
add
imul
mov
imul
call
repz
push
xchg
(bad)
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
sar
ficom
push
outs
jmp
sbb
xchg
push
xchg
(bad)
jne
es
cmp
(bad)
mov
dec
adc
ficom
stos
mov
addr16
(bad)
mov
push
xchg
(bad)
push
push
repnz
lods
ins
jo
mov
sbb
sahf
fisubr
jl
repz
mov
push
xchg
(bad)
mov
push
xchg
or
(bad)
stos
xor
movs
dec
add
dec
sbb
push
or
movs
dec
push
popa
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cdq
mov
std
dec
mov
cwde
adc
add
sbb
jp
or
push
out
aaa
test
mov
pushf
clc
jge
iret
stos
mov
es
mov
mov
sub
inc
adc
fwait
mov
sbb
call
sti
mov
adc
(bad)
scas
push
xchg
(bad)
lods
ins
sbb
push
xchg
(bad)
in
iret
stos
mov
fiadd
sti
push
lods
ins
fstp
xor
(bad)
cmp
jmp
loope
mov
lods
sub
pop
mov
jnp
mov
push
xchg
(bad)
xor
sbb
xor
xchg
add
push
ins
outs
xor
push
push
addr16
mov
and
std
lea
pushw
push
xchg
(bad)
fwait
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
inc
cmp
xchg
addr16
ins
jo
ss
int3
and
std
repz
jmp
clc
jmp
xchg
addr16
daa
shr
aaa
(bad)
daa
out
rcr
mul
shl
jmp
add
sti
repnz
sti
sti
and
loopne
push
jnp
bound
cli
int3
and
std
out
cmp
(bad)
push
lock
inc
sbb
out
call
xor
ret
cld
std
(bad)
push
jnp
lods
ins
enter
out
cmp
loopne
cmp
xchg
(bad)
mov
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
mov
jnp
push
out
jbe
inc
sbb
repnz
call
xor
cli
loopne
push
jnp
pop
lods
ins
ror
idiv
sar
std
out
retf
out
ss
mov
(bad)
std
and
out
retf
out
ss
sub
jo
daa
fdivr
fstp
out
push
adc
out
sar
cld
in
fbld
neg
xlat
and
cli
fistp
fsubrp
sar
idiv
push
cmps
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lods
ins
ror
idiv
retf
ds
(bad)
and
out
ficom
out
lods
ins
ror
idiv
std
cmp
sti
fld
out
(bad)
and
out
ficom
fcomp
ins
ror
idiv
std
cmp
sti
fld
out
(bad)
and
out
ficom
ins
pop
lods
ins
enter
loopne
ds
pop
cli
loope
add
lods
mov
out
int3
cmp
jmp
cld
jecxz
xor
(bad)
push
cmp
inc
adc
sti
sti
sub
sti
std
cmp
jmp
loopne
push
push
dec
jo
adc
jmp
lock
jns
inc
pop
imul
retf
xor
jmp
loopne
cmc
cmp
jecxz
cmp
xchg
data16
(bad)
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
cli
pop
xlat
retf
push
sbb
inc
pop
imul
retf
xor
in
retf
jmp
loopne
push
push
dec
jo
add
repnz
and
sti
(bad)
out
(bad)
push
jnp
dec
lods
ins
fdiv
adc
(bad)
shl
cmp
std
shl
cld
jmp
shl
cld
clc
int
sar
int3
and
loope
add
cld
loope
push
jmp
sar
jmp
jmp
(bad)
loopne
mov
lods
fnstsw
fbstp
(bad)
fsub
repnz
(bad)
adc
jo
cmp
sti
retf
xor
into
sar
cld
in
sti
sub
(bad)
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
sbb
lds
addr16
jmp
cmp
retf
(bad)
out
sti
and
jnp
pop
lods
ins
int3
int3
ss
fild
mul
shl
neg
(bad)
and
out
ficom
(bad)
pop
lods
ins
enter
std
shl
shr
fisub
idiv
int
jnp
push
lods
ins
(bad)
daa
ret
std
xlat
cmp
out
sub
jecxz
and
(bad)
push
mov
(bad)
jmp
ins
jo
cmp
sti
xlat
cmp
icebp
cli
fst
in
shl
xchg
fimul
std
and
out
retf
out
les
inc
add
out
ss
shl
xchg
ror
std
aas
cld
cld
fistp
repnz
aas
test
add
int3
int3
ss
fist
cli
std
(bad)
out
int3
sub
imul
push
jp
mov
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
xor
out
das
sar
call
(bad)
out
push
xlat
(bad)
call
(bad)
call
(bad)
push
(bad)
bound
add
call
fistp
div
mov
lods
shr
add
jmp
test
adc
jo
aaa
in
into
cmp
pop
inc
lods
shr
sbb
jmp
ror
inc
and
jmp
xchg
shr
adc
out
int3
cmp
cli
retf
fdivr
lods
shr
aaa
aad
shl
xchg
cmps
test
cmp
jecxz
push
jmp
frstor
out
jmp
lods
ins
enter
loopne
xor
out
retf
out
shl
les
inc
pop
idiv
sar
std
out
retf
std
shl
idiv
int
jnp
data16
ins
enter
out
ss
ss
ins
test
ss
fstp
jecxz
fbld
sti
fdivr
lods
sar
and
cli
into
push
jp
mov
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
stos
inc
xchg
inc
add
sti
sahf
cmp
in
cmp
jecxz
jae
scas
std
and
out
retf
in
aam
lock
xchg
jno
out
aas
jmp
xlat
xor
sti
xlat
cmp
lods
xchg
pop
cdq
loopne
cmp
out
aas
jmp
rcl
jmp
frstor
out
sahf
jno
addr16
jg
lods
pushf
jg
lods
pushf
jg
lods
pushf
jg
mov
inc
lods
xchg
(bad)
mov
lods
ins
(bad)
mov
mov
xchg
(bad)
push
lea
inc
push
xchg
(bad)
mov
lods
xchg
(bad)
mov
lods
ins
(bad)
push
fidivr
inc
pmaddwd
shl
std
out
shl
mov
xor
loop
out
fdivr
jmp
and
jo
ss
out
daa
loope
sahf
sbb
neg
push
jnp
imul
jo
xor
ror
ins
(bad)
in
and
(bad)
push
in
dec
jo
push
xchg
(bad)
mov
lods
jle
mov
lods
ins
xor
push
xchg
movs
mov
xchg
pop
add
or
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
(bad)
push
add
ins
je
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
push
imul
push
imul
sbb
add
pop
ja
adc
pop
pop
js
pop
pusha
jle
sbb
pusha
jns
and
add
fs
and
jle
xor
add
pop
add
jp
inc
imul
bound
imul
lea
sbb
add
jae
add
push
add
imul
add
nop
mov
sub
add
jno
add
jno
add
jne
add
jbe
add
jb
add
jae
add
je
add
jne
add
nop
add
jbe
add
jbe
add
jp
add
cwde
add
jl
add
into
sahf
add
nop
add
ja
add
jp
add
jns
add
jge
add
jge
add
jle
add
jle
add
xchg
dec
jae
(bad)
dec
jnp
add
pop
push
jnp
add
jp
add
xchg
add
xchg
add
xchg
add
cwde
add
add
sbb
cmp
sahf
add
mov
add
mov
add
and
test
add
mov
add
xchg
add
ja
add
stos
add
mov
add
lea
add
(bad)
mov
cmp
mov
ds
mov
ds
mov
inc
sbb
dec
test
push
adc
xchg
inc
xchg
add
cmps
add
movs
add
cmps
add
cmps
add
test
add
mov
add
movs
add
cmps
add
scas
add
scas
add
stos
add
scas
(bad)
push
xchg
scas
add
lods
add
mov
push
xchg
mov
dec
call
inc
call
dec
pushf
xchg
dec
pushf
mov
add
mov
add
mov
pop
fwait
mov
push
mov
push
add
mov
add
scas
add
scas
add
test
popa
fwait
mov
push
mov
mov
add
mov
add
mov
jle
mov
je
mov
add
add
mov
add
rol
mov
les
push
movs
les
push
mov
lds
push
cmps
mov
movs
ret
test
add
enter
retf
lods
int3
add
add
rol
pop
mov
add
rol
pop
mov
add
aam
push
mov
add
rol
test
add
les
lods
leave
add
enter
rol
mov
(bad)
outs
mov
add
int
jnp
retf
mov
add
add
xlat
add
fld
push
fild
jne
xchg
je
aam
jnp
aam
jb
fild
jge
fadd
outs
rcr
je
fiadd
jge
fld
outs
ret
jb
loop
jnp
loope
jl
in
jl
call
add
cmps
mov
add
lods
mov
add
mov
add
(bad)
add
mov
add
mov
add
retf
add
mov
rol
cmp
add
fadd
mov
fiadd
xchg
rcl
popf
(bad)
rol
xchg
enter
into
rol
stos
(bad)
rol
movs
nop
fadd
lods
iret
fld
mov
aam
push
retf
(bad)
retf
test
jmp
add
shr
add
jmp
pushf
(bad)
jmp
popf
fldz
add
xlat
in
add
out
add
fcomip
add
loopne
add
inc
add
push
add
jmp
into
mov
cmp
adc
adc
aas
add
add
add
xor
(bad)
push
fild
or
sbb
push
add
sub
dec
push
pop
pop
pop
pop
pop
push
cmp
push
and
cmp
into
add
add
add
add
ror
push
push
pop
pop
pop
pusha
pop
pusha
pop
pop
pop
mov
sub
mov
add
add
add
ror
mov
add
pop
pop
pop
mov
dec
xchg
add
shr
sub
stos
mov
push
test
dec
dec
sub
xchg
add
ja
jbe
sahf
cmps
scas
mov
jl
pop
push
dec
sub
sbb
(bad)
test
and
mov
add
cmps
push
mov
repz
dec
dec
cmp
cmp
mov
pop
pop
mov
add
add
add
mov
ret
jg
pop
pop
push
pop
pop
pop
pop
pop
jg
enter
push
dec
mov
add
add
add
stos
mov
popf
test
pop
pop
cmps
mov
pop
xchg
add
add
add
xchg
popa
lahf
cmps
test
mov
mov
pop
push
dec
dec
cmp
lods
cmps
jg
jl
mov
add
xchg
stos
ja
enter
fild
cmp
sub
sub
test
ffreep
add
xchg
mov
hlt
sar
pop
pop
pop
pop
pop
pop
pop
jg
lds
mov
add
test
mov
add
push
add
cmp
add
mov
(bad)
stos
lods
mov
jecxz
sahf
sahf
sahf
push
test
pop
pop
pop
cmps
mov
pop
mov
add
add
add
xchg
add
enter
std
loop
jl
pop
pop
mov
push
test
add
add
retf
out
out
ja
fld
push
dec
dec
dec
push
pop
movs
ret
cmp
mov
add
add
add
enter
clc
fist
jl
popa
popa
jg
jg
test
push
sub
xchg
add
(bad)
enter
lock
mov
test
mov
xchg
add
mov
scas
mov
sti
(bad)
lock
pop
pop
pop
push
pop
pusha
mov
pop
jg
add
add
add
mov
idiv
(bad)
(bad)
loop
jl
pop
pop
pop
push
push
push
mov
push
cmp
jl
add
xchg
lahf
enter
repnz
in
stos
ja
mov
stos
test
or
dec
pop
cmp
add
add
(bad)
add
add
add
repz
repnz
in
mov
mov
push
add
push
jl
mov
add
mov
lock
into
ret
lods
lods
scas
scas
nop
test
jg
or
xchg
push
sar
cmp
lahf
mov
jl
dec
imul
add
mov
inc
adc
pop
jg
sbb
loopne
in
mov
push
add
ficom
nop
sbb
mov
mov
add
(bad)
add
add
xlat
jns
ror
add
add
add
push
call
add
add
add
add
add
add
add
add
push
aad
mov
add
add
push
add
sbb
add
add
add
mov
push
add
aad
pop
push
xchg
add
ja
bound
add
add
add
add
add
add
inc
push
dec
xchg
add
add
push
cmp
add
aad
dec
cmp
add
add
add
add
js
mov
add
add
add
add
aam
sub
mov
mov
js
movs
and
add
add
add
rol
add
add
test
add
add
add
add
push
add
rcr
add
iret
inc
push
pop
ja
(bad)
add
add
add
and
dec
jge
add
je
cmp
add
push
fadd
pop
ins
aad
add
add
add
add
into
adc
add
nop
add
push
add
push
cmp
out
add
add
add
jb
add
add
add
xor
xchg
fadd
add
add
jne
add
push
jo
add
add
push
jb
adc
aam
add
imul
add
add
ja
(bad)
add
add
cmp
and
add
add
add
add
push
add
add
pop
jbe
push
inc
and
pop
adc
add
add
add
add
add
add
add
push
fwait
mov
mov
sub
add
add
push
add
in
jle
push
aaa
and
jb
mov
push
add
in
aad
rcr
add
ja
(bad)
add
add
push
add
add
(bad)
clc
add
inc
add
push
add
inc
add
inc
add
inc
add
cld
add
add
add
push
add
add
add
inc
add
add
add
add
add
push
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
ud0
inc
add
clc
pop
(bad)
(bad)
inc
add
clc
aas
(bad)
(bad)
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
into
aas
cld
aas
inc
add
nop
pop
clc
aas
inc
add
clc
pop
lock
inc
add
clc
(bad)
aas
inc
add
cld
pop
loopne
inc
add
cld
add
aas
inc
add
inc
(bad)
jg
add
(bad)
inc
add
add
push
inc
add
inc
add
inc
add
jmp
pop
(bad)
inc
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
imul
add
xchg
add
sbb
add
arpl
add
inc
add
inc
and
add
add
add
outs
popa
arpl
outs
ins
add
add
or
or
inc
push
add
add
or
dec
gs
popa
ins
popa
jae
jae
push
cmp
outs
adc
adc
adc
or
push
add
push
popa
add
imul
add
add
add
push
add
add
add
sbb
add
push
arpl
je
add
add
and
add
add
add
add
add
pop
inc
add
(bad)
(bad)
inc
add
add
push
inc
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
add
add
add
js
inc
add
(bad)
(bad)
inc
add
add
pop
inc
add
(bad)
(bad)
inc
add
add
sbb
nop
sbb
xchg
jae
add
sbb
and
inc
add
sbb
inc
sbb
pushf
jae
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
lea
lea
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
add
push
call
cmp
jne
push
push
call
mov
lea
push
push
mov
call
cmp
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
cmp
fnclex
jge
push
push
push
push
call
lea
call
push
call
push
jmp
lea
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
lea
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
call
mov
mov
cmp
jne
mov
push
push
call
jmp
mov
mov
push
push
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
mov
test
jne
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
lea
mov
mov
call
mov
add
jo
cmp
mov
jne
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
mov
lea
push
push
mov
mov
call
lea
mov
call
test
je
call
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
mov
mov
mov
lea
lea
push
lea
push
push
mov
mov
call
mov
lea
call
push
push
call
cmp
je
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
mov
push
push
push
push
call
mov
lea
neg
sbb
neg
neg
call
lea
call
test
jne
lea
lea
push
push
mov
mov
call
test
je
mov
test
jne
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
push
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
lea
lea
push
push
call
mov
mov
lea
call
mov
push
push
push
push
push
lea
push
push
mov
call
mov
mov
call
lea
lea
mov
mov
call
push
push
call
call
fwait
push
jmp
lea
call
lea
call
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
ret
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
ins
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
adc
add
add
bound
add
add
add
mov
add
call
add
pop
add
fcomp
add
pop
add
add
add
pusha
add
sub
add
pusha
add
dec
pusha
add
pop
pusha
add
jo
add
jp
add
mov
add
add
mov
pusha
add
loop
add
in
pusha
add
or
add
popa
add
sub
add
ds
add
push
popa
add
pusha
popa
add
push
add
and
mov
add
popa
add
aas
add
cmp
add
add
sbb
add
in
popa
add
clc
popa
add
add
add
bound
add
add
sub
add
bound
add
add
push
bound
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
xchg
add
jbe
popa
push
popa
jb
jae
inc
je
push
add
dec
arpl
add
mov
pop
popa
fs
data16
popa
outs
add
js
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
pop
pop
jbe
popa
push
je
push
popa
jb
outs
jbe
add
bound
outs
add
mov
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
mov
pop
popa
fs
data16
gs
xor
sub
bound
gs
jns
je
ins
inc
jb
outs
jb
rol
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
inc
jae
jb
add
push
imul
xor
cmps
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
pop
imul
xor
imul
dec
jae
outs
add
outs
add
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
bound
popa
jb
jae
inc
jno
or
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
push
data16
je
outs
add
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
push
add
dec
jae
jb
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
mov
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
push
data16
gs
add
scas
add
fs
imul
ss
add
bound
push
inc
js
gs
imul
pop
pop
jbe
popa
push
bound
outs
add
pop
inc
dec
ins
outs
add
lea
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
outs
push
je
add
test
popa
dec
gs
add
push
imul
xor
add
push
imul
xor
imul
fs
imul
xor
add
stos
add
fs
imul
push
add
jbe
popa
push
popa
jb
fs
bound
jo
xor
push
add
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
mov
pop
popa
ins
ins
ins
jne
add
add
jbe
popa
dec
outs
push
popa
jb
add
pop
add
dec
je
outs
add
push
add
dec
gs
add
lods
add
jbe
popa
inc
jb
gs
bound
add
bound
jb
gs
je
