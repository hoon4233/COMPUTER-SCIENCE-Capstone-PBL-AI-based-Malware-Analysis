inc
mov
nop
test
jge
jae
jns
jl
cmp
mov
(bad)
jnp
jo
jns
mov
das
ret
clc
xor
and
cld
jae
cmp
jbe
lock
push
jns
jae
repnz
repnz
jnp
or
push
dec
or
sbb
repnz
sar
mov
std
xor
jae
scas
imul
jno
mov
jbe
xchg
lock
retf
sub
xchg
sub
and
adc
ss
push
jle
jle
jbe
leave
sub
and
call
and
repnz
jg
cmp
sar
mov
add
xor
arpl
jb
xchg
jae
jbe
iret
jbe
xchg
cli
xor
ror
jbe
ror
add
cli
push
jns
cmp
jbe
sbb
cli
call
push
and
sbb
rcr
aad
push
xor
rcr
cmp
mov
xchg
and
jbe
xchg
dec
push
xor
mov
adc
test
cli
dec
dec
push
xor
retf
sub
sub
pop
cs
push
pop
pop
add
fwait
pop
xchg
cmc
mov
ret
mov
push
jnp
jne
clc
jb
pop
xor
sar
repnz
jnp
jne
clc
inc
idiv
mov
in
sti
adc
mov
(bad)
jae
jl
mov
jns
jae
jns
js
mov
push
jnp
mov
push
jbe
mov
xchg
jae
jno
mov
jns
lock
popf
mov
jle
jb
jns
cwde
push
cli
ins
mov
push
les
xchg
ss
jbe
pop
mov
xchg
fwait
or
xchg
jae
mov
xchg
jae
es
xchg
leave
mov
inc
mov
push
jno
xchg
jae
jns
fwait
xlat
push
push
xor
lahf
mov
jns
cwde
mov
jns
call
xor
push
arpl
jns
pop
call
jbe
pop
lahf
data16
and
sbb
and
jne
jae
mov
nop
sbb
xchg
sbb
(bad)
jae
pop
push
xor
mov
xor
jl
ret
mov
push
xor
mov
mov
push
xor
mov
mov
xchg
fwait
pop
(bad)
xchg
jae
mov
(bad)
jbe
pop
mov
ficom
and
jno
call
jg
add
adc
dec
inc
scas
lock
mov
push
xor
icebp
xchg
icebp
mov
repnz
mov
out
cmp
xor
pushf
jl
jge
jl
ins
stos
dec
cmps
or
mov
test
xor
inc
xchg
jae
sub
xor
rol
mov
dec
cli
mov
sbb
xor
inc
xchg
jae
sub
mov
sar
mov
adc
ja
loope
dec
cmp
add
shr
jns
jne
mov
jbe
retf
sub
call
fwait
into
xlat
xchg
jae
das
ret
clc
add
cs
mov
mov
lea
lock
jae
push
xor
sar
mov
adc
ja
loope
dec
mov
xchg
jae
xchg
fs
pop
xchg
sar
scas
sti
loop
xchg
jae
xchg
dec
test
test
mov
adc
repz
mov
imul
mov
mov
adc
scas
push
fs
jl
jae
xchg
mov
imul
es
mov
les
and
pop
cs
ror
not
ins
arpl
inc
adc
jae
add
leave
movs
xor
arpl
lock
test
mov
lock
sub
mov
add
push
shr
mov
ror
xor
ja
jns
sub
call
and
and
mov
test
push
jns
test
test
pop
jg
sahf
call
int3
stos
fst
data16
mov
ins
ins
pop
mov
mov
mov
sbb
inc
aas
lods
lods
or
push
jb
lock
jns
ss
nop
imul
xor
arpl
mov
rol
sub
pop
mov
lock
es
and
or
clc
sub
ss
xrelease
clc
stc
(bad)
aaa
pop
xchg
jae
jl
mov
jns
test
jbe
ja
lock
pop
test
fnstcw
mov
cwde
arpl
lods
lods
or
xchg
test
test
pop
retf
sub
call
clc
add
pop
add
das
int3
jae
xchg
mov
jne
rol
imul
adc
xor
imul
ret
test
cmc
mov
ins
test
mov
push
call
jg
leave
xchg
call
jnp
dec
jns
mov
jno
repnz
cli
mov
xchg
sbb
imul
and
jbe
xchg
fwait
dec
(bad)
xchg
jae
adc
sub
iret
cs
sbb
clc
add
mov
sub
mov
cmp
mov
xchg
and
popa
imul
repnz
seto
outs
xchg
jnp
cmp
imul
xchg
jae
daa
iret
cs
sbb
and
cs
push
jle
sbb
mov
sbb
cli
mov
bnd
adc
sti
cmp
and
sub
fnstenvw
sbb
mov
mov
fwait
out
mov
rcr
and
pusha
xor
sbb
xchg
jl
fdivr
cli
mov
push
jp
jbe
mov
cmp
jp
or
cli
xchg
push
ja
adc
xor
pop
jne
dec
pop
arpl
jns
cli
mov
cmp
jbe
arpl
dec
push
jp
jbe
mov
cmp
jp
or
inc
mov
jg
into
popf
bnd
mov
xor
arpl
mov
retf
mov
movs
jae
jns
outs
fnstsw
and
cs
mov
test
sub
jp
adc
xor
iret
mov
xchg
cli
scas
push
dec
cli
mov
test
jae
popa
xor
and
dec
imul
cmp
(bad)
mov
xchg
(bad)
repz
imul
xchg
push
jbe
(bad)
jb
dec
xor
adc
sahf
dec
outs
mov
xchg
jbe
cwde
lock
mov
jge
ja
xchg
cli
scas
dec
dec
cli
mov
rol
std
cmp
and
lock
jns
jnp
jbe
pop
push
mov
not
sbb
jae
mov
push
jbe
(bad)
jae
sub
jae
and
mov
mov
pop
ss
rcr
sti
or
lock
jae
mov
clc
or
or
cs
dec
mov
mov
xor
sbb
mov
mov
loope
push
mov
nop
xor
xchg
pop
dec
mov
jae
jns
cli
xor
sbb
mul
mov
push
fcom
jns
clc
dec
xchg
out
jns
cli
xor
pop
ss
adc
dec
lock
jb
lock
lock
mov
loopne
xlat
mov
pop
inc
mov
pushf
mov
sbb
mov
lods
mov
mov
dec
test
xchg
mov
retf
mov
les
and
sub
jge
out
repnz
ins
test
mov
(bad)
ja
jns
jae
jns
jae
xchg
jnp
idiv
jae
lock
sbb
sbb
jl
fnstsw
clc
xor
mov
mov
xor
inc
xchg
jae
sbb
mov
(bad)
mov
jne
fwait
push
aad
jae
xchg
(bad)
jge
jns
jae
cmp
and
cld
inc
test
xchg
and
jbe
jl
fdivr
sub
and
and
jno
into
jns
jae
xchg
cmp
jbe
ret
pop
clc
loopne
cli
jg
mov
imul
inc
cmp
jbe
adc
repz
jl
mov
fwait
idiv
jle
jae
mov
(bad)
jae
fidivr
jae
xchg
mov
idiv
hlt
adc
sahf
sbb
mov
xchg
clc
js
jns
dec
mov
(bad)
jae
or
xchg
jae
call
(bad)
mov
push
fcom
jns
clc
dec
xchg
cmp
cmp
jp
or
cli
scas
mov
repz
imul
movs
imul
cmp
mov
pop
dec
mov
jae
jns
cli
xor
jb
jbe
sbb
neg
xchg
(bad)
mov
sbb
mov
push
fcom
jns
clc
dec
xchg
or
cmp
jp
jbe
aam
jns
sbb
out
jae
int3
push
mov
xchg
mov
sbb
mov
mov
lea
jns
cwde
dec
push
xchg
jae
cld
sub
mov
lods
mov
add
push
jl
and
jae
pop
pop
into
enter
jbe
adc
xchg
repz
test
mov
div
xchg
jae
js
rol
imul
xchg
mov
sbb
(bad)
js
cli
mov
and
fadd
imul
adc
sar
mov
cld
imul
push
cmp
cli
push
jg
into
adc
mov
and
aaa
jns
adc
mov
cdq
sub
jns
jb
into
adc
mov
pop
mov
jns
sbb
out
jae
repnz
xchg
jbe
mov
repz
mov
cld
sar
cmp
cmc
mov
dec
inc
scas
lock
jl
cld
mov
xchg
sti
jne
mov
mov
js
push
(bad)
repnz
mov
arpl
mov
imul
xchg
test
mov
xchg
jae
cld
cli
mov
xchg
adc
jns
jo
xchg
mov
adc
jae
cld
imul
mov
sbb
mov
cld
dec
mov
movs
imul
cs
popf
mov
cld
pusha
ja
jns
adc
xchg
jae
cld
sub
mov
imul
cs
xor
push
ja
jns
(bad)
mov
shl
(bad)
cld
cmp
mov
inc
mov
shr
js
std
mov
xchg
jae
xchg
pusha
popa
jbe
repnz
loope
lea
fldcw
mov
jae
hlt
adc
mov
or
mov
imul
das
mov
popf
ret
xor
adc
push
lods
xor
adc
mov
imul
xchg
jae
lock
dec
jge
jae
cld
inc
mov
lods
imul
out
inc
jae
jns
ss
in
jb
jns
nop
(bad)
cld
adc
add
jae
cld
addr16
jns
neg
repnz
std
inc
imul
ror
int3
jp
jae
and
jae
mov
repz
imul
hlt
adc
std
cld
dec
mov
xchg
dec
(bad)
cmp
cli
scas
push
dec
cli
mov
jmp
shl
repnz
push
iret
jae
hlt
adc
std
cld
jl
mov
ret
push
(bad)
cmp
jp
jbe
and
xchg
cli
scas
mov
repz
mov
push
lock
imul
xchg
push
leave
or
jbe
adc
sahf
mov
jg
fdivr
mov
xchg
jae
jns
(bad)
fistp
cli
scas
mov
repz
push
mov
xchg
imul
xchg
push
xor
adc
sahf
mov
jmp
(bad)
mov
imul
xchg
imul
xchg
repz
imul
xchg
cmc
xchg
test
xchg
rcl
sti
int3
adc
mov
jae
jb
xchg
jae
fcomp
into
sahf
xchg
and
stos
mov
push
sbb
test
xchg
mov
jmp
ds
xchg
lock
imul
mov
or
mov
jae
cld
add
xchg
jae
cmp
jp
jbe
jle
jns
cli
scas
push
dec
cli
mov
adc
mov
or
xchg
pop
(bad)
cmp
jp
jbe
movs
ja
xchg
lock
imul
jns
sbb
(bad)
int
scas
js
cli
mov
push
not
xchg
je
sbb
mov
cld
xor
mov
push
sti
cld
in
mov
imul
sahf
sub
adc
and
mov
sbb
jae
mov
clc
retf
in
lea
cs
xor
fdiv
jns
(bad)
add
dec
jb
lock
(bad)
repz
cld
mov
pop
dec
mov
jae
jns
cli
xor
ins
jae
jns
into
add
adc
repz
mov
(bad)
jae
int3
pusha
mov
xchg
repnz
mov
pop
sbb
test
xchg
mov
jmp
retf
jbe
xchg
adc
mov
xchg
jae
cli
sub
mov
or
jns
idiv
xchg
xchg
sub
(bad)
imul
sbb
mov
xchg
(bad)
sbb
adc
cmp
in
xrelease
mov
jae
xchg
ror
test
mov
cld
test
xchg
(bad)
repz
mov
jl
sar
lock
adc
jae
hlt
imul
jns
mov
cld
ins
mov
xchg
sti
cld
(bad)
sub
mov
ret
jns
mov
clc
push
cmps
adc
lock
or
loopne
idiv
pop
test
push
repnz
mov
jno
not
xchg
std
cld
or
mov
push
jns
mov
imul
xchg
repnz
mov
jno
adc
xchg
jae
cld
add
xchg
jnp
cld
js
mov
push
dec
cld
js
mov
imul
xchg
push
jno
adc
jmp
pop
neg
repnz
mov
jno
into
cmps
xchg
jbe
cwde
clc
repz
pop
inc
mov
pushf
repnz
xor
sub
add
mul
repnz
mov
jno
imul
repnz
mov
jno
imul
repnz
mov
jno
mov
arpl
mov
ret
push
ins
mov
mov
imul
mov
test
jbe
xor
and
lock
jbe
xchg
lock
fwait
mov
jo
and
(bad)
popf
es
mov
jae
clc
loope
outs
gs
jae
and
(bad)
jbe
pop
mov
xchg
dec
test
lock
test
add
cli
or
(bad)
jae
or
cwde
inc
mov
imul
xchg
jae
repnz
mov
dec
arpl
xchg
clc
or
sbb
stos
inc
cwde
jmp
mov
daa
iret
loop
cmp
pop
aad
xchg
jae
call
sar
sub
and
test
sbb
ss
push
mov
jno
mov
mov
xchg
jae
or
sbb
not
jae
retf
jbe
push
arpl
mov
xchg
sbb
jp
ss
jae
jns
ds
xchg
cli
mov
ins
test
mov
xchg
jae
daa
pop
mov
lock
and
fisttp
sbb
mov
inc
push
mov
jns
push
jb
push
cwde
dec
fsub
shl
lods
ss
nop
inc
mov
movs
(bad)
jnp
or
jbe
pop
mov
stc
test
jbe
ins
cli
mov
push
jb
adc
aaa
jns
push
jp
outs
xlat
jbe
pop
mov
lock
pop
mov
push
retf
ja
xchg
jae
daa
leave
mov
lock
es
and
and
int
and
pop
into
or
jae
mov
xor
add
mov
mov
jno
out
aam
xchg
cli
mov
ja
xchg
pop
xchg
jae
lahf
sbb
jp
or
xchg
mov
pop
ss
nop
dec
(bad)
jge
lock
lods
lods
add
adc
jae
sbb
popf
repnz
xchg
xchg
xchg
clc
xor
jae
lock
xchg
push
repnz
pop
aad
jbe
retf
mov
push
jo
jns
push
jns
and
cs
and
shl
nop
cwde
jae
xchg
repnz
jmp
jbe
mov
xchg
repnz
mov
xchg
out
cmp
jbe
xor
sti
(bad)
lock
inc
xchg
mov
xchg
jae
mov
cli
scas
mov
repz
mov
push
clc
xor
imul
test
cmc
fcom
mov
xchg
jae
call
(bad)
mov
xchg
fwait
or
xchg
jae
cld
dec
mov
std
sbb
jbe
cld
xchg
mov
push
in
jbe
sbb
mov
loope
mov
dec
mov
jns
cli
scas
dec
dec
cli
mov
push
call
inc
mov
test
sbb
(bad)
jae
jns
sub
out
xchg
(bad)
cmp
mov
push
xor
push
pop
outs
xchg
stos
mov
xchg
jae
mov
movs
mov
ins
xchg
jae
lock
inc
scas
lock
clc
xor
push
cli
mov
jns
mul
test
sti
cld
pop
mov
adc
loop
push
(bad)
cmp
jp
or
imul
jns
mul
mov
push
sahf
imul
xor
dec
inc
scas
lock
clc
repz
lea
test
mov
repnz
cli
repz
mov
jg
cmp
(bad)
repz
mov
sbb
stos
xchg
adc
lea
xchg
xor
push
cmc
les
mov
push
pop
sub
xchg
jbe
ror
push
xchg
cli
repz
lea
xchg
jecxz
imul
cmp
clc
jbe
ror
jbe
pop
mov
repnz
cli
repz
lea
in
pop
mov
nop
inc
jbe
jns
mov
xor
jbe
ror
jbe
pop
mov
repnz
cli
repz
adc
mov
sbb
stos
xchg
adc
out
push
(bad)
cmp
cli
scas
js
cli
mov
xor
mov
mov
not
xchg
es
adc
mov
imul
xchg
mov
xor
mov
imul
lds
mov
loopne
std
cld
or
(bad)
cmp
cli
scas
mov
repz
mov
push
clc
xor
xchg
cli
repz
lea
xchg
jecxz
imul
xchg
imul
mov
push
xor
rol
mov
dec
test
xchg
mov
ror
jbe
adc
mov
imul
cld
cmp
mov
imul
or
mov
cmc
push
mov
fcom
xchg
repz
push
clc
repz
repnz
cli
xor
sbb
clc
jbe
adc
mov
push
mov
sbb
out
xchg
adc
lea
xchg
xor
push
test
jl
jbe
jecxz
jg
loopne
std
cld
sub
mov
push
cli
mov
jns
idiv
int3
sub
mov
push
(bad)
cmp
call
test
mov
repz
mov
push
clc
xor
push
jae
cli
push
outs
std
jns
div
test
sbb
sbb
push
test
es
adc
sbb
imul
xchg
test
repnz
cli
xor
sbb
clc
jbe
adc
mov
adc
mov
cmp
mov
imul
or
mov
stc
push
mov
cmp
clc
jbe
ror
jbe
pop
mov
repnz
cli
repz
xchg
(bad)
repz
sbb
call
or
or
mov
push
es
adc
sbb
imul
xchg
jp
sub
push
jns
jae
adc
mov
jl
jmp
push
xchg
jae
call
(bad)
mov
xchg
sbb
adc
mov
or
adc
sti
cld
cmp
mov
xchg
jae
cld
in
(bad)
mov
repnz
cli
xor
xchg
jae
jns
mov
xchg
(bad)
repz
lea
or
fwait
push
sub
cld
loopne
mov
xchg
cli
xor
xchg
jae
hlt
adc
mov
imul
xchg
fimul
push
xchg
mov
imul
xchg
sahf
push
outs
mov
int3
js
mov
xchg
jp
or
imul
pop
xchg
jae
adc
jae
cld
or
mov
imul
xchg
jae
std
shl
jns
jb
call
mov
jle
mov
push
jg
xchg
jbe
adc
jns
clc
retf
xchg
imul
jbe
addr16
xchg
repz
jl
jae
jae
stc
jmp
jbe
adc
jns
sbb
imul
push
xchg
or
imul
xchg
jb
cmps
xor
adc
mov
jge
mov
push
push
dec
xchg
jbe
adc
je
dec
xor
neg
xchg
es
sbb
jp
imul
cld
scas
xchg
xchg
(bad)
repz
mov
jl
lahf
xchg
mov
push
div
push
mov
stos
ja
sbb
mov
test
ja
xchg
jae
(bad)
(bad)
cwde
dec
repnz
mov
pusha
mov
repnz
mov
push
mov
icebp
add
xchg
inc
mov
push
jbe
add
mov
push
std
les
xchg
mov
mov
push
jne
jns
(bad)
repz
mov
sbb
fiadd
inc
xor
push
jle
push
out
jbe
pop
mov
repnz
cld
test
mov
imul
inc
xchg
jae
sbb
dec
test
sti
add
pushf
call
inc
mov
inc
xchg
jae
js
scas
xchg
xchg
(bad)
repz
mov
jl
sahf
xchg
mov
test
pop
push
mov
jae
cld
cmp
mov
imul
cmp
mov
push
push
std
cld
ror
jae
imul
cld
ror
jae
imul
test
std
les
xchg
mov
mov
adc
sti
cld
cmp
mov
(bad)
jae
or
fwait
mov
xchg
jae
mov
scas
jae
repnz
cld
aam
mov
imul
inc
xchg
jae
sbb
test
sti
add
pushf
cli
scas
dec
dec
cli
mov
and
out
xchg
jae
jl
mov
jns
aas
lea
dec
cli
mov
sar
mov
adc
ja
loope
(bad)
cmp
mov
mov
push
in
jns
stos
sbb
ror
std
cld
inc
mov
mov
call
jae
cs
push
jle
add
mov
sbb
mov
jns
test
jge
jae
into
shl
lock
(bad)
(bad)
repz
mov
jl
in
jns
repnz
xchg
out
jae
jbe
xor
mov
adc
push
mov
xor
adc
sahf
jb
jae
xchg
jl
aas
nop
and
shl
cmp
adc
sahf
(bad)
(bad)
jbe
ins
inc
mov
push
jl
aas
nop
mov
jl
vpshlb
repz
mov
sbb
mov
xor
test
cs
inc
hlt
sbb
mov
js
push
(bad)
lock
lock
repnz
ret
test
mov
push
mov
cwde
push
jbe
ss
push
jo
test
repnz
jae
cmp
mov
imul
jbe
mov
out
test
dec
test
(bad)
outs
jbe
fwait
(bad)
repz
mov
(bad)
mov
xchg
mov
push
xor
push
xor
sbb
sub
and
jno
call
jnp
mov
loopne
clc
(bad)
jmp
push
xor
inc
jns
jns
xchg
(bad)
cmp
cli
mov
xchg
jnp
jns
xor
ficom
jbe
xor
cs
xchg
cli
mov
(bad)
fist
xchg
sbb
mov
jae
xchg
cmp
jbe
sbb
mov
pop
push
retf
add
xchg
jae
lahf
sbb
sbb
sbb
cld
mov
xchg
sbb
xchg
mov
test
fwait
stos
in
xchg
jae
xchg
xlat
jns
xor
nop
dec
(bad)
jge
xor
inc
push
lahf
mov
xor
jl
loope
xchg
cli
xchg
sbb
xor
retf
mov
js
and
ins
repnz
xor
cwde
adc
retf
int3
sub
xchg
lock
mov
push
xor
xchg
sbb
nop
sbb
xchg
sbb
xchg
mov
or
fwait
jbe
xchg
jae
cmp
cli
scas
dec
dec
cli
mov
xchg
mov
mov
jns
cli
xor
adc
jns
jae
adc
(bad)
mov
sbb
mov
jns
ss
push
xchg
imul
(bad)
jae
mov
pop
push
cmp
ja
xchg
clc
xor
mov
mov
xor
inc
xchg
jae
sbb
mov
xor
sbb
cmps
repnz
scas
jns
jae
mov
xchg
jae
cs
ss
stc
test
jnp
(bad)
xor
adc
jae
into
shr
xor
loope
sahf
mov
push
arpl
loope
jmp
pop
ss
mov
stc
clc
xor
pop
mov
lock
(bad)
mov
ror
xor
add
pop
mov
shr
std
cmp
jo
test
jmp
jns
mov
jbe
ss
ror
xor
imul
lock
pop
scas
lock
clc
xor
nop
jne
xchg
pop
jg
std
cmp
jl
sub
(bad)
and
stc
bound
addr16
ds
push
or
scas
dec
dec
cli
mov
rol
dec
cmp
jl
xchg
push
mov
xchg
sbb
rcr
std
cmp
jb
sub
xchg
ret
in
xchg
jae
mov
ja
jns
push
xchg
retf
sub
call
jns
dec
adc
jae
jl
mov
jns
mov
sbb
and
inc
xchg
jl
adc
jle
jmp
jns
mov
ins
(bad)
jb
jns
push
data16
(bad)
sahf
push
add
xchg
(bad)
sahf
sub
jae
ror
jbe
arpl
es
mov
lock
call
or
and
mov
xchg
out
cmp
mov
ror
jns
(bad)
jae
or
mov
jno
push
jns
mov
ins
imul
hlt
ror
add
push
mov
sub
or
test
mov
jbe
jbe
pop
mov
xchg
jae
sahf
sbb
sub
mov
js
ja
xchg
and
sub
sub
xchg
jae
sahf
sbb
fwait
shr
xchg
jae
mov
sbb
xchg
ret
in
xchg
jae
js
call
xor
imul
xchg
jae
std
cmp
jns
mov
sbb
and
xchg
mov
jbe
pop
ss
push
shr
jbe
adc
jbe
xchg
clc
xor
add
add
ret
in
xchg
jae
mov
xchg
test
mov
and
xchg
and
jns
push
xchg
loope
test
mov
jnp
fwait
xchg
in
xchg
jae
mov
push
mov
clc
jnp
sub
xchg
sbb
xchg
jae
js
jb
jns
and
jbe
xchg
jae
jns
jb
jnp
jae
das
jl
jecxz
xchg
mov
push
xor
rcl
in
xchg
jae
je
ss
push
rcl
jbe
mov
xor
shl
jns
imul
cmp
pop
xor
xchg
jl
mov
jae
repnz
xor
jae
in
push
lock
js
ss
clc
push
sbb
jns
cli
add
shl
jbe
sbb
jae
cmp
jno
xchg
mov
mov
and
and
jbe
push
mov
stos
xchg
cwde
js
xchg
and
jbe
push
repz
test
add
adc
jae
pop
push
movs
jns
jge
jnp
fwait
xchg
xchg
jae
mov
push
movs
inc
popf
add
jns
sbb
rol
in
xchg
repz
xchg
jae
stc
jmp
outs
ja
xchg
and
jbe
push
jl
ja
jae
lock
jb
lock
sbb
xchg
jae
cld
sub
sahf
or
jae
hlt
shr
in
xchg
(bad)
xor
jl
in
xchg
lock
shl
xchg
lock
mov
sar
inc
popf
jmp
mov
lods
pop
ss
push
rcl
std
sub
pop
mov
pop
es
push
sar
adc
test
imul
(bad)
jae
jb
jae
lock
into
call
jae
repz
lock
sbb
and
jns
ss
xchg
and
imul
xchg
xor
jbe
imul
xchg
sahf
out
jns
jae
jns
xor
and
jbe
push
pop
adc
adc
jbe
imul
xchg
out
loopne
jns
mov
sbb
jb
mov
in
xchg
sbb
jl
in
xchg
mov
imul
sahf
xchg
push
jae
clc
push
outs
or
sub
and
data16
int3
jp
jmp
idiv
imul
(bad)
jae
cmp
fadd
xchg
xchg
sbb
xchg
repz
(bad)
outs
mov
jns
sbb
mov
jae
jae
xor
mov
jbe
adc
mov
jl
mov
jns
aaa
xchg
xchg
sbb
arpl
jbe
xchg
jae
stc
jl
lea
xlat
jae
adc
xor
xchg
xchg
xchg
sbb
jae
js
jae
xchg
or
mov
es
call
loope
shr
jbe
arpl
xchg
int3
mov
sbb
sbb
pop
xchg
jae
dec
fs
xor
jl
in
xchg
sub
mov
js
and
ins
repnz
xor
mov
mov
cli
mov
xchg
ja
cmp
es
ror
jbe
pop
mov
clc
push
cdq
xor
xchg
mov
push
xor
rol
or
jl
cmp
lock
and
cmp
xchg
mov
adc
nop
jns
jae
mov
sbb
mov
bound
jbe
sbb
mov
push
dec
inc
jns
mov
push
xor
xchg
sbb
test
repnz
or
jae
mov
mov
daa
iret
mov
into
pop
xchg
jb
xchg
and
jbe
(bad)
and
std
or
enter
sbb
jbe
adc
jae
jns
loop
jns
sub
fsubr
mov
bnd
cli
sub
add
xchg
mov
push
iret
jecxz
imul
imul
push
out
xchg
mov
push
(bad)
jecxz
imul
xchg
cli
scas
push
dec
cli
mov
xor
cmc
les
mov
add
repz
mov
sub
mov
pusha
(bad)
add
add
repz
mov
and
mov
ins
mov
mov
repz
push
lock
sub
std
in
ins
mov
test
inc
add
retf
sub
std
in
ins
mov
test
dec
add
jae
push
xor
dec
inc
scas
lock
lock
push
neg
jns
jae
mov
push
jbe
sbb
sahf
test
es
adc
sti
cld
ins
mov
test
mov
(bad)
jno
push
pop
jae
hlt
adc
and
popf
mov
std
cmp
jns
out
test
and
jl
cld
jns
jp
jbe
jmp
imul
push
es
jl
std
jns
cli
xrelease
mov
ins
mov
push
fwait
mov
xchg
jae
mov
jbe
movs
mov
fst
ja
cmp
mov
pusha
and
sbb
mov
mov
xchg
clc
xrelease
mov
push
jbe
xchg
ja
cmp
lahf
test
es
cld
jns
lock
repnz
jbe
sub
pop
jns
test
xchg
mov
push
call
push
and
pushw
jae
jo
jl
iret
xchg
jae
hlt
add
and
popf
mov
std
xor
jae
xchg
jbe
adc
and
sbb
mov
sub
cld
jns
retf
push
cmp
jae
call
(bad)
mov
xchg
jae
cli
sub
add
jbe
mov
inc
cli
jbe
adc
jae
mov
xchg
mov
push
xor
adc
bnd
(bad)
cli
scas
dec
dec
cli
mov
xchg
mov
mov
mov
adc
and
pop
mov
neg
xchg
dec
jns
inc
mov
cli
(bad)
repz
mov
ret
lock
jae
mov
nop
mov
jns
inc
jae
xchg
test
xchg
mov
jl
(bad)
jns
inc
mov
jg
test
imul
xchg
jp
or
sbb
pop
scas
lock
inc
mov
jg
lahf
xchg
push
cwde
jp
dec
test
xchg
mov
retf
mov
js
and
pop
push
jle
test
jp
adc
jae
jl
mov
jns
or
test
add
jae
jno
stos
xchg
xchg
mov
jge
and
jns
cwde
adc
adc
xor
imul
jns
movups
test
mov
imul
(bad)
jae
bound
cli
xor
nop
mov
jns
cmp
pop
xchg
jae
cmp
sti
xor
push
ss
js
fidiv
xchg
test
mov
pop
mov
sub
mov
jl
stc
jns
lock
push
xor
cld
aas
jecxz
xor
sbb
sub
add
jbe
adc
jae
mov
sar
sub
js
cmp
mov
xchg
ja
cmp
mov
fwait
jl
imul
cwde
mov
push
xor
ins
inc
mov
push
sub
mov
(bad)
and
leave
mov
arpl
jae
push
xor
jmp
cli
push
ss
data16
jbe
sbb
ja
cmp
jae
push
xor
ins
pop
mov
push
sbb
jl
mov
adc
jae
mov
ror
jbe
xchg
cli
xor
jg
jns
retf
iret
ret
into
inc
mov
jno
mov
shr
jl
aaa
sar
push
xchg
jle
pop
jl
stos
push
xchg
data16
cli
sub
adc
jae
jl
mov
jns
lds
push
fwait
lds
setnp
movs
mov
repnz
sub
push
sub
and
and
jno
and
jno
rcl
sbb
repnz
aam
jbe
xchg
ja
cmp
mov
(bad)
jne
js
jno
loop
jae
lock
jbe
xchg
adc
jbe
xchg
jae
xchg
sti
ins
jbe
fwait
les
add
xchg
jae
mov
xchg
jae
repnz
(bad)
call
jbe
imul
(bad)
jae
mov
(bad)
arpl
mov
and
jns
mov
mov
mov
jae
push
xor
ins
test
mov
clc
lea
lock
pop
mov
push
inc
mov
jg
mov
xor
adc
jae
jns
fwait
add
inc
mov
retf
mov
js
ja
xchg
and
cs
push
jle
mov
test
cld
lea
cli
mov
push
mov
push
mov
push
xor
xor
idiv
pop
into
mov
cmp
test
mov
imul
jge
out
jns
mov
xchg
jbe
xchg
lock
sbb
add
sbb
adc
sbb
jl
lock
mov
push
xor
push
add
(bad)
repz
mov
imul
jns
mov
(bad)
(bad)
jae
js
test
loop
sahf
pop
adc
clc
jnp
inc
jns
cwde
ins
xchg
cli
mov
cli
mov
ror
jns
jae
aas
test
jbe
xchg
jl
cld
lea
jl
dec
fwait
jae
mov
repz
push
mov
push
sub
and
and
jno
push
imul
std
and
mov
add
mov
xor
out
jae
push
xor
jl
mov
mov
and
imul
mov
sbb
jae
xchg
cmp
mov
sbb
aaa
mov
lock
ror
jmp
sbb
imul
imul
xchg
ja
sub
jae
dec
push
xor
hlt
jmp
mov
jns
jbe
jns
adc
xchg
ja
cmp
sbb
mov
jl
mov
push
mov
push
sti
and
xchg
(bad)
mov
ror
and
xchg
mov
lock
sti
and
js
push
jbe
xchg
pop
adc
mov
mov
xchg
mov
push
xor
ror
jmp
stc
xor
jge
jae
gs
jnp
xchg
or
dec
push
call
ins
cli
mov
push
cli
and
push
xchg
je
call
xchg
adc
ins
push
fsubr
mov
sbb
repz
jbe
xor
cmp
xchg
xchg
mov
lea
mov
jae
xchg
xchg
sahf
or
mov
lock
sti
and
mov
test
add
or
repnz
(bad)
fwait
cmp
and
sub
xchg
mov
sbb
mov
push
xor
out
dec
jbe
cdq
lock
inc
inc
xor
loope
inc
mov
xlat
xor
daa
iret
mov
daa
das
ret
clc
add
fwait
xor
jmp
jae
xchg
lock
jns
je
dec
jl
cmc
jns
cli
mov
cli
mov
jmp
jge
cs
jns
lock
pop
jle
loop
sahf
ss
jae
cli
jmp
jne
xor
jns
cli
mov
cli
mov
sub
jbe
xchg
jae
jb
(bad)
xchg
jae
pop
pop
jae
xchg
lock
inc
mov
cwde
retf
sbb
sahf
sbb
sub
mov
call
clc
or
mov
mov
cli
mov
jl
mov
nop
mov
jns
add
mov
mov
xchg
jno
jbe
xor
sub
jns
cli
mov
sbb
jae
ds
cli
icebp
icebp
xchg
jae
lock
lock
mov
push
xor
test
mov
jbe
les
jns
jp
or
call
sbb
cs
add
mov
nop
push
jae
jns
add
mov
jl
add
xchg
push
icebp
jbe
popf
mov
dec
imul
(bad)
jae
mov
les
add
(bad)
das
and
pop
mov
ror
arpl
mov
push
xor
adc
xor
fwait
les
add
(bad)
sub
xchg
test
mov
data16
jae
cmp
and
adc
fwait
sahf
clc
xchg
jae
ds
lock
xchg
cmp
imul
(bad)
jae
into
adc
jbe
xchg
and
lock
jl
mov
xchg
jae
adc
and
les
mov
push
arpl
jg
dec
ins
cli
mov
retf
mov
js
and
mov
inc
sub
push
lock
jle
jl
lea
ret
jl
mov
jns
mov
jle
jae
xchg
ins
mov
lock
sti
and
loope
test
jg
and
int
xor
scas
mov
jns
jbe
xchg
sbb
seto
and
int
mov
outs
jb
inc
imul
(bad)
jae
adc
mov
jo
push
push
xchg
ja
iret
adc
jbe
ret
lea
cmc
mov
jl
idiv
retf
sub
xchg
jae
sahf
sbb
lock
pop
and
int
mov
mov
das
jl
add
add
jbe
sbb
mov
xchg
mov
mov
xchg
repnz
mov
sub
lock
call
sub
sbb
mov
jl
mov
jns
push
or
jae
adc
jbe
xchg
jae
jge
xor
push
ss
cli
mov
xchg
fwait
(bad)
stc
xchg
jae
cmp
jl
jl
mov
jns
fwait
repnz
xchg
jae
mov
(bad)
arpl
cmp
and
jns
inc
idiv
sbb
mov
fwait
repnz
xchg
jae
mov
pushf
mov
jns
cli
mov
sbb
call
nop
mov
jns
mov
lock
mov
jno
xor
sbb
mov
mov
jg
jns
ror
jbe
pop
dec
jae
inc
xor
loopne
adc
ror
jbe
dec
lock
lea
xor
loopne
cmc
pop
pusha
(bad)
xor
xchg
call
xchg
mov
mov
xchg
jae
hlt
rcr
mov
push
xlat
jbe
xchg
(bad)
jb
mov
ss
mov
sub
jbe
out
jbe
sbb
and
pop
lea
jge
xor
and
mov
push
xlat
jbe
xchg
cli
inc
jl
mov
xor
xchg
jae
jge
inc
cmps
cmp
mov
xchg
jae
hlt
xor
aam
and
xchg
(bad)
jb
xchg
mov
mov
jae
jns
jae
retf
jbe
push
cli
mov
cli
mov
jl
idiv
call
iret
mov
call
clc
xor
cli
xor
pop
sub
iret
retf
loopne
xchg
jae
sahf
sbb
mov
push
xor
arpl
jns
adc
aad
push
xor
xchg
jnp
cmp
sar
sbb
aam
sahf
push
adc
cli
push
jg
jl
mov
jns
pushf
pop
pop
xchg
jae
cmp
and
(bad)
jae
jne
xor
xchg
sbb
mov
jbe
sbb
mov
mov
xchg
jae
jl
mov
jns
mov
sbb
stos
bnd
sub
inc
pushf
mov
jns
pop
lahf
xchg
cli
mov
sbb
jnp
cmp
call
clc
sub
jecxz
aas
mov
mov
xchg
cli
test
mov
add
xchg
jae
mov
pop
jbe
pop
push
loop
aad
jbe
mov
jmp
pop
je
aaa
jns
mov
add
xor
xchg
jae
shl
jbe
arpl
mov
xchg
stos
lock
xchg
push
jae
jns
xor
and
call
jae
mov
xchg
jae
xchg
je
xchg
mov
mov
xor
adc
loop
aad
ss
std
jno
jns
jbe
mov
adc
push
jbe
mov
cli
je
lock
aaa
jns
cmp
repz
sbb
jbe
bound
jbe
dec
je
xchg
test
adc
jbe
loopne
xlat
add
xor
xchg
xlat
jmp
xchg
xacquire
out
jbe
test
jns
jbe
out
jae
jg
jae
xchg
test
sbb
jbe
loopne
inc
mov
xchg
repnz
test
out
cmp
jbe
js
aaa
jns
inc
mov
sbb
jbe
loopne
inc
mov
xchg
cli
mov
stc
cdq
out
cmp
mov
xchg
jnp
jle
mov
adc
repz
sbb
jbe
xor
lock
lahf
lahf
push
mov
xchg
jb
jle
mov
mov
jae
lock
pop
mov
in
sbb
jbe
push
jbe
repnz
je
xchg
jae
ret
push
mov
xchg
jno
jle
mov
fst
jb
lock
repz
sbb
jbe
push
jbe
call
jae
jns
jae
mov
sti
mov
push
xor
xchg
xlat
jmp
fcmovnb
jae
stc
cdq
out
cmp
jbe
in
clc
aaa
jns
jbe
out
jae
test
jae
mov
xor
add
aaa
jns
call
pop
xor
push
jno
jl
in
aaa
jns
cmps
jbe
xchg
shr
jl
push
aaa
jns
mov
jns
ror
repnz
ja
xor
aaa
jns
(bad)
jbe
xchg
mov
push
xor
xchg
xlat
jmp
fist
ins
jns
lock
or
jbe
jge
jbe
xchg
inc
mov
dec
jb
jns
jle
not
jae
clc
push
popf
or
cli
xchg
push
jae
leave
xor
jbe
and
(bad)
jae
mov
lahf
or
xchg
jae
stc
xchg
jae
add
xchg
jae
cmp
repz
jbe
cdq
out
cmp
loop
(bad)
jae
dec
xor
jb
fisttp
xor
mov
xor
mov
jbe
arpl
mov
cdq
out
cmp
lahf
and
jge
and
xchg
mov
push
xor
xchg
out
cmp
jbe
sbb
shl
mov
mov
jae
xor
jbe
push
jae
jns
xor
jae
cdq
xchg
sti
xor
test
jl
lock
jae
stc
jmp
mov
jmp
in
jns
jl
cmp
dec
idiv
jae
jb
stos
lock
jbe
test
jno
ins
adc
cmp
jne
xor
aad
je
xlat
repz
cdq
out
cmp
(bad)
mov
xchg
rol
repnz
jns
xchg
pop
std
cmp
cmp
test
cdq
repz
xchg
xchg
or
xchg
ja
mov
jbe
pop
push
sahf
add
jae
xchg
mov
xchg
pop
data16
add
jae
jns
ja
adc
fwait
or
xchg
rcl
jl
push
aaa
jns
test
mov
xchg
(bad)
cmp
cli
mov
mov
or
xchg
jae
popa
sbb
fwait
or
xchg
stc
jbe
nop
data16
mov
aaa
jns
xlat
jmp
xchg
jmp
mov
push
xor
fs
scas
ficom
ss
xchg
cli
mov
daa
iret
mov
daa
das
ret
int3
rcr
or
mov
imul
(bad)
jae
loopne
xor
cli
pcmpeqd
mov
ficom
jbe
jl
or
ror
(bad)
jae
xchg
add
jns
retf
mov
xchg
and
jbe
add
aaa
jns
mov
sahf
sub
jae
ficom
aaa
jns
test
cmp
jbe
xor
aaa
jns
mov
lock
sbb
xchg
mov
retf
(bad)
cmp
call
jae
das
ret
enter
jbe
mov
or
mov
xchg
out
cmp
sti
cmp
and
jns
ss
popa
xchg
jae
lock
test
mov
sbb
fdivp
rol
jbe
xchg
retf
xor
xchg
jae
call
adc
xchg
mov
push
xor
icebp
mov
scas
lock
lock
xchg
jae
jns
ss
js
jae
clc
jg
xor
jge
xor
rcl
xor
push
ss
jnp
jae
lock
test
mov
xchg
jae
cli
icebp
retf
jbe
dec
test
mov
loope
iret
jl
jae
mov
(bad)
xor
xchg
jae
cmp
and
jns
iret
add
test
mov
(bad)
jae
cmp
and
(bad)
jae
jge
jne
or
fwait
loop
xchg
jae
cmp
and
leave
les
ja
push
or
loop
(bad)
jae
jns
push
(bad)
adc
jo
loope
sahf
or
jae
clc
push
add
jns
mov
popf
jl
or
xchg
mov
push
xor
rcr
sti
cmp
and
jns
ss
xchg
cwde
retf
stos
or
div
push
sub
and
and
jno
call
push
push
clc
stc
(bad)
popa
inc
xchg
jae
cmp
cli
xor
(bad)
inc
stos
sbb
fwait
sbb
(bad)
jae
js
mov
sbb
sahf
sub
mov
xchg
(bad)
xor
loope
mov
aaa
jns
adc
ss
lock
xor
push
call
sub
adc
jae
or
sbb
cmp
jbe
leave
mov
lock
call
jnp
and
mov
push
xor
imul
dec
mov
jae
dec
fwait
lds
dec
xchg
dec
mov
jae
push
fwait
lds
dec
xchg
dec
mov
jae
gs
lds
dec
xchg
dec
mov
jae
imul
jae
std
sahf
jno
jns
ss
shl
repz
lods
mov
xchg
sar
mov
ins
stos
dec
mov
adc
jbe
xchg
cli
mov
fwait
lds
lods
mov
cld
sbb
jbe
sbb
jl
ins
or
out
cli
mov
jle
jns
and
loope
inc
and
inc
jl
jbe
loope
jns
ror
jl
mov
add
sbb
ins
idiv
sahf
cmp
jae
lock
and
daa
gs
mov
xchg
nop
pop
cmps
jp
mov
xchg
nop
cli
xor
shl
js
lock
jge
es
jbe
jns
jae
pop
fwait
lds
xchg
mov
stc
test
adc
(bad)
jae
or
xchg
call
add
dec
jge
daa
inc
nop
push
cmp
jnp
dec
jo
loope
inc
test
jb
mov
ja
iret
nop
jne
adc
popa
dec
(bad)
xchg
jae
or
jl
test
add
stos
jne
test
and
lock
jge
mov
lock
data16
xchg
jae
inc
stos
jno
sbb
mov
stc
test
je
enter
jl
test
add
sbb
repz
jg
push
xor
ins
lock
jge
lds
test
pop
jno
jge
jbe
loope
cmc
mov
clc
and
daa
gs
mov
xchg
nop
pop
cmps
js
lock
jge
ss
shl
cmp
pop
fwait
jb
ror
jns
repz
inc
xchg
push
and
ins
cmp
inc
xchg
jb
xor
repz
jg
push
dec
lock
lock
jp
dec
jo
loope
inc
and
inc
test
jae
jns
je
xchg
push
push
xchg
jae
sub
(bad)
and
jb
cli
jle
(bad)
jge
jb
jns
xor
xchg
rol
mov
sbb
and
imul
(bad)
jae
or
cwde
push
imul
or
xor
xchg
jns
xor
jl
jbe
out
xor
sar
xchg
xchg
jae
inc
push
add
jbe
pop
mov
xchg
jl
sub
mov
jnp
dec
arpl
dec
cli
mov
and
and
loop
(bad)
jae
iret
nop
ins
dec
xchg
xchg
jae
or
xchg
jae
pop
pop
push
mov
jge
mov
xor
mov
test
dec
xor
push
ja
icebp
nop
ins
sti
cmp
sbb
jb
push
inc
cli
mov
jb
lock
std
sub
cli
data16
jae
cmp
cmc
mov
cli
test
pop
cmps
lock
jb
js
lock
jge
mov
shr
repnz
mov
imul
shr
inc
lock
jge
mov
test
and
jbe
es
mov
fwait
mov
test
cmc
mov
pop
mov
lock
sub
sahf
inc
loope
jbe
ret
lods
ins
mov
xchg
sahf
shl
jae
inc
xchg
jae
stc
out
mov
ja
mov
jnp
mov
jbe
mov
ja
mov
and
test
xchg
cmp
adc
xchg
cmps
imul
addr16
mov
pop
xor
loope
popf
daa
fwait
(bad)
jnp
mov
add
test
imul
jbe
jg
mov
xor
jl
add
clc
jecxz
dec
mov
call
jae
iret
add
mov
pop
pop
xor
push
xchg
je
add
test
imul
jl
add
clc
jecxz
dec
mov
add
jae
cld
addr16
mov
addr16
mov
test
sbb
adc
mov
jnp
mov
(bad)
jnp
mov
add
jbe
fwait
(bad)
jnp
mov
adc
mov
xchg
repz
call
loope
xchg
jae
dec
ins
mov
xchg
jae
push
xor
add
movs
mov
cmp
jl
jae
jns
test
jg
push
jns
jae
sub
jns
cli
mov
bound
lahf
xchg
cli
ret
pushf
mov
test
inc
or
mov
xchg
sahf
sub
jae
xchg
lock
jge
jbe
xchg
sbb
int3
js
mov
imul
push
jg
cmp
jp
or
dec
mov
cmps
imul
push
cdq
je
jbe
jne
push
xchg
jb
and
mov
shl
mov
jae
or
mov
fwait
cli
scas
jl
arpl
sbb
mov
imul
mov
fwait
sub
clc
adc
jbe
xchg
clc
repz
dec
mov
jns
neg
dec
mov
mov
dec
lods
mov
xchg
call
add
xchg
jnp
arpl
jbe
add
ror
pop
out
xchg
imul
jge
mov
xchg
jo
test
jg
lock
cmps
imul
push
xchg
je
dec
mov
jnp
xchg
je
(bad)
je
adc
retf
lea
mov
jae
or
mov
push
xor
sub
add
cld
popf
mov
or
mov
xchg
dec
jbe
xchg
cli
jecxz
dec
mov
jnp
imul
cmps
imul
pop
out
cmps
imul
adc
test
imul
(bad)
mov
add
test
imul
adc
test
imul
aad
mov
xchg
rep
dec
mov
ror
sub
stos
cmps
imul
adc
repz
mov
clc
repz
adc
test
movs
dec
mov
xchg
add
mov
jbe
add
test
jne
clc
jecxz
dec
mov
adc
out
cmps
imul
(bad)
jae
iret
add
xchg
jnp
(bad)
stos
cmps
imul
sbb
xor
and
test
xchg
clc
bound
aaa
jns
out
xchg
imul
jl
add
leave
dec
mov
sbb
jnp
jbe
dec
ja
xchg
clc
repz
mov
jae
nop
xchg
jae
or
xchg
jl
inc
xchg
jae
nop
(bad)
jb
jns
test
xchg
jb
jns
lock
xchg
aaa
je
sbb
mov
xchg
mov
xchg
cmps
imul
loope
dec
lods
jae
addr16
repz
jns
dec
jb
lods
jae
jae
xor
xchg
repz
jns
jp
xchg
pop
mov
push
xor
and
aad
imul
xor
aad
imul
xchg
jae
or
clc
jb
xchg
jae
jns
fwait
mov
rol
lock
hlt
lock
cdq
xchg
mov
stc
popa
icebp
test
xchg
call
xchg
jl
in
aaa
lods
mov
sub
mov
xchg
repz
inc
xchg
jae
jns
push
pop
stc
test
je
xchg
jae
or
repz
inc
xchg
jae
jns
push
(bad)
stc
test
jb
xchg
jae
or
repz
inc
xchg
jae
jns
pop
jne
jg
jns
adc
test
imul
xor
or
pop
push
and
test
and
ret
lods
dec
mov
xchg
mov
stc
sub
add
pop
(bad)
adc
xchg
jnp
stos
mov
xchg
mov
jnp
ds
adc
cmps
imul
jnp
mov
sub
jb
xchg
add
cmp
idiv
addr16
mov
addr16
mov
test
sbb
adc
imul
pop
mov
lock
es
ss
sbb
jp
ins
adc
jae
jl
mov
jns
les
jno
mov
xchg
jae
xchg
stc
jae
lock
sbb
jl
add
jae
push
xor
and
jle
push
addr16
inc
xchg
add
xchg
jb
popa
fwait
les
jno
mov
cli
mov
bound
aad
jbe
ins
test
mov
sbb
clc
xor
cli
xor
cmc
das
and
xchg
jae
sahf
sbb
mov
push
xor
and
jle
push
mov
add
xchg
fwait
push
adc
jae
cmp
mov
push
xor
and
jle
push
addr16
inc
xchg
arpl
cmp
xor
mov
mov
aad
ja
xchg
jae
jbe
les
jno
mov
cli
mov
bound
aad
jbe
ins
jb
lock
sub
mov
js
and
sar
lock
sub
test
mov
(bad)
jae
inc
nop
mov
jno
xchg
jae
jns
add
(bad)
mov
repnz
jl
shl
xchg
cli
mov
cli
mov
inc
je
jns
jae
imul
add
pop
mov
hlt
ror
jbe
mov
jae
jns
dec
pop
jns
shr
(bad)
jae
hlt
fnstenv
mov
xor
jl
add
xchg
sub
inc
push
shl
xchg
pop
xchg
xchg
jl
jl
shl
retf
mov
cmc
xchg
mov
cmp
jae
jl
mov
jns
mov
rol
(bad)
cmp
lock
jl
add
jl
test
bound
aad
jbe
icebp
mov
push
xor
test
mov
xchg
test
dec
xchg
arpl
cmp
into
ins
xchg
jae
mov
xor
loop
jbe
xchg
pop
jbe
sub
jbe
xchg
test
pop
xchg
add
xchg
jae
mov
addr16
xchg
test
pop
xchg
arpl
cmp
jns
out
mov
xchg
sbb
test
add
xchg
lock
adc
jae
dec
nop
mov
sbb
jge
xor
adc
jae
jns
inc
outs
rcl
sahf
(bad)
jae
xchg
fwait
push
pop
xchg
jae
jl
mov
jns
sub
xchg
cli
js
and
sbb
xchg
mov
mov
xchg
jae
jl
mov
jns
jne
js
jno
scas
push
ficom
mov
sbb
lahf
je
fwait
les
adc
jbe
jl
sbb
pop
sbb
xor
dec
dec
jns
sbb
rcr
mov
adc
jbe
mov
fwait
adc
mov
mov
jbe
sub
add
test
mov
imul
jl
shl
xchg
mov
xchg
test
jns
pushf
ins
dec
xchg
jae
jl
mov
jns
ss
sub
ss
jae
loop
jae
lock
lock
ror
jns
ror
dec
jl
add
jl
test
bound
aad
jbe
xchg
cdq
sbb
imul
jbe
ss
ins
pop
or
(bad)
jae
cli
jmp
and
jbe
ins
test
mov
ror
inc
jl
add
pop
jns
test
mov
fwait
les
lock
pushw
aad
mov
xor
sbb
xchg
sub
jae
into
ror
jb
test
lods
and
jae
jns
jae
repnz
jae
sub
jns
call
push
or
jns
sub
call
and
or
int3
mov
idiv
imul
(bad)
jae
ja
push
jp
shr
es
into
add
pop
mov
rol
jns
xchg
(bad)
cmp
cli
mov
rcr
jbe
xchg
out
cmp
mov
adc
ja
loope
es
shr
xchg
sahf
sbb
jns
mov
sbb
rol
les
cmc
mov
imul
imul
pop
push
outs
jns
add
cld
mov
cmp
dec
ret
cmc
mov
xchg
lock
jnp
mov
call
arpl
cmp
mov
xchg
xor
pop
ds
and
xchg
adc
sar
mov
call
and
(bad)
jb
mov
jl
int3
xchg
mov
sbb
lea
xchg
xor
pop
ds
and
xchg
adc
sar
mov
call
mov
mov
xor
jl
int3
xchg
mov
sbb
lea
ror
add
mov
xchg
loop
(bad)
jae
js
scas
xchg
xchg
and
mov
push
jg
mov
fwait
les
xchg
pop
jae
ins
jno
jno
mov
jbe
adc
jae
into
ror
jns
shr
dec
xchg
jbe
aam
sar
xor
and
and
test
mov
loopne
sbb
sbb
out
imul
xchg
cs
jp
and
out
mov
ins
pop
mov
push
mov
push
xor
jl
push
jns
cli
mov
ins
jb
lock
jp
or
retf
mov
sbb
mov
jl
mov
jns
xor
xchg
clc
jbe
retf
mov
clc
ja
jns
pop
pop
jns
and
cs
outs
push
mov
ja
repz
mov
push
mov
push
xor
dec
inc
scas
lock
adc
mov
arpl
mov
and
lea
(bad)
jae
jae
jae
mov
adc
mov
push
mov
jns
stos
ja
sbb
mov
jno
cmp
push
test
xchg
jae
pop
in
jbe
ja
repz
mov
sub
adc
clc
xor
inc
sahf
push
repz
xchg
sbb
jmp
adc
jbe
sbb
mov
sar
dec
jl
adc
cli
repz
jbe
sbb
mov
les
xchg
jns
aam
es
push
mov
xchg
push
sbb
sbb
mov
les
xchg
repz
xchg
jae
repnz
xor
jae
ja
aas
push
jns
pop
jno
rcl
loope
std
cmp
jl
cmp
mov
ss
jae
xchg
clc
xor
or
fwait
imul
add
fild
imul
inc
xchg
jae
sbb
into
dec
scas
jae
mov
repz
adc
lea
and
repz
mov
sbb
mov
inc
pop
jbe
pop
mov
repnz
bnd
mov
jge
jae
cli
sub
jns
xor
inc
mov
xor
inc
xchg
jae
sbb
jmp
imul
xchg
sti
cld
mov
(bad)
xrelease
mov
jl
sbb
lock
pop
test
xchg
mov
mov
jg
jns
ror
mov
add
mov
fwait
les
xchg
mov
clc
push
out
pop
jns
jl
cld
data16
xchg
ds
sbb
mov
xchg
fwait
dec
adc
mov
jecxz
dec
add
ja
sbb
je
jns
icebp
push
xchg
std
cmp
jl
cmp
mov
mov
jae
lock
jb
lock
call
repz
bnd
jl
cld
bound
imul
jae
jns
mov
xchg
xor
imul
sub
xchg
lea
ror
mov
cmp
mov
xchg
xor
imul
xchg
adc
ror
mov
dec
adc
jbe
mov
sar
shr
mov
test
div
outs
mov
xchg
adc
ror
mov
adc
repz
mov
ja
repz
outs
mov
cld
bound
cld
ins
mov
xchg
mov
jb
shl
adc
pop
and
xchg
jbe
popf
lock
xchg
imul
jle
jae
xchg
mov
mov
mov
(bad)
imul
cmp
mov
jl
ret
xchg
mov
test
jl
fst
test
xor
mov
sub
mov
imul
adc
(bad)
cmp
cwde
push
jbe
mov
out
xchg
(bad)
mov
cdq
mov
jl
mov
xchg
(bad)
lea
xchg
cmps
add
bound
xchg
adc
adc
xor
lods
jae
mov
repz
outs
mov
mov
mov
dec
mov
push
xor
adc
std
cmp
lock
jge
add
jbe
test
je
cld
mov
stc
repz
mov
adc
lea
mov
sbb
mov
jae
cld
imul
imul
sbb
push
jbe
arpl
mov
ror
jbe
adc
sar
mov
aad
xor
adc
(bad)
and
mov
imul
jns
jl
cld
pusha
mov
jns
push
jnp
adc
(bad)
cld
pusha
mov
lea
mov
push
jbe
and
mov
sbb
xchg
cmc
mov
xor
inc
xchg
jae
sbb
jns
jmp
mov
into
sub
retf
mov
adc
scas
push
dec
cli
mov
and
test
add
shl
mov
pop
sbb
mov
adc
repz
sar
mov
xchg
mov
adc
test
dec
pop
jbe
arpl
mov
push
mov
sub
lea
sub
jno
aad
xor
adc
into
daa
mov
mov
imul
jns
jl
cld
pusha
mov
jns
pop
jns
and
add
mov
hlt
imul
adc
ja
loope
(bad)
cld
ins
mov
mov
ins
mov
cld
imul
outs
mov
jns
sbb
or
mov
stos
ror
push
adc
dec
jne
jae
call
(bad)
mov
test
pop
inc
pop
imul
clc
jg
push
jns
cwde
pusha
jbe
ss
add
jns
mov
in
xchg
mov
cmp
jl
cmp
clc
jecxz
imul
mov
xor
adc
scas
mov
mov
sbb
mov
into
ror
jbe
icebp
sbb
mov
les
xchg
div
imul
xchg
mov
sbb
adc
mov
sbb
mov
mov
ror
mov
inc
stc
loop
imul
imul
jbe
ss
add
dec
test
cld
clc
xchg
xchg
(bad)
xrelease
mov
jl
les
sbb
(bad)
into
mov
ja
repz
outs
mov
cmp
dec
mov
repnz
xchg
jb
dec
xor
and
mov
adc
xchg
es
xchg
ror
push
lock
repnz
retf
lea
mov
xlat
dec
jns
cwde
push
jbe
mov
out
xchg
(bad)
mov
cdq
mov
jl
mov
xchg
out
xchg
xor
inc
(bad)
hlt
sbb
xchg
repz
js
push
(bad)
lock
jae
push
xor
call
sub
idiv
xchg
stos
adc
jp
dec
test
sub
std
outs
mov
scas
imul
(bad)
jbe
adc
es
jg
xchg
jbe
mov
ja
xor
push
es
(bad)
ret
pop
mov
mov
push
sbb
mov
jae
cld
imul
imul
xchg
jae
jae
neg
jns
jae
int3
js
mov
push
scas
lea
imul
jl
add
neg
sub
add
pop
into
sahf
xchg
mov
sbb
js
jae
cld
imul
jl
jno
xchg
lock
adc
jae
les
xchg
popa
adc
jb
jns
test
loope
sahf
stos
xchg
jae
cli
push
jg
cmp
jl
cmp
mov
ss
jae
lock
pop
scas
lock
mov
push
xor
sub
jns
adc
jns
jb
cld
dec
mov
xchg
mov
jl
mov
test
arpl
mov
dec
mov
cmp
ja
loope
sti
int3
imul
push
test
add
jns
cld
dec
mov
mov
not
jbe
pop
mov
hlt
sbb
mov
js
push
(bad)
lock
lock
xchg
into
mov
xchg
stos
(bad)
mov
push
xor
inc
xchg
jae
sbb
mov
ins
mov
hlt
sub
push
add
xor
sub
sahf
out
lock
cli
push
arpl
jns
jne
js
jno
dec
retf
bnd
cli
scas
push
dec
cli
mov
push
imul
jns
(bad)
repz
jl
sub
cli
mov
sbb
mov
cld
jl
mov
push
imul
repnz
or
jae
cld
ins
mov
xchg
jbe
fcomp
loop
xchg
jae
cld
imul
jl
jo
xchg
lock
adc
jae
jl
mov
jns
ss
and
jp
jl
cdq
xchg
mov
(bad)
jae
stos
retf
lock
test
sub
stc
outs
mov
xchg
imul
jl
mov
jns
stos
inc
mov
dec
mov
cmp
ja
loope
sbb
(bad)
dec
movs
outs
mov
xchg
ja
ds
jae
lock
lea
outs
mov
push
enter
cmps
push
jbe
loope
sbb
jl
adc
jge
(bad)
cld
xor
jbe
loope
push
xchg
lock
xchg
sbb
adc
jns
fwait
push
es
jae
les
mov
popa
mov
cmp
mov
sbb
lea
aam
dec
js
push
(bad)
adc
lea
imul
jae
lock
lea
outs
mov
mov
sahf
mov
jae
inc
cmps
push
jbe
fwait
test
jl
adc
xchg
lock
jg
test
ins
mov
xchg
repnz
or
jae
cld
cmp
lea
(bad)
jae
sub
mov
test
jl
xlat
pusha
mov
sbb
sub
pop
mov
lock
push
nop
jae
(bad)
leave
jae
sub
and
pop
repz
das
clc
push
jl
jns
mov
push
xor
dec
inc
scas
lock
lock
pop
(bad)
add
mov
xchg
rcl
jns
mov
test
mov
mov
test
mov
cld
or
xor
add
sub
push
test
xchg
out
cmp
jbe
int
jbe
imul
imul
and
xchg
xchg
jae
mov
push
pop
dec
cld
ins
mov
add
mov
gs
ss
and
jp
jl
fwait
xchg
std
cmp
lock
jbe
imul
(bad)
jae
add
jae
jno
ss
lods
jae
push
pop
ss
and
jp
jl
fwait
xchg
std
cmp
lock
jbe
sub
and
test
test
mov
jmp
repnz
jae
or
mov
jbe
cwde
repnz
mov
jbe
adc
mov
fwait
les
jne
fwait
xchg
xchg
imul
imul
pop
ss
add
imul
sbb
jl
sub
repnz
and
mov
fwait
std
idiv
jae
xchg
cld
std
test
sti
repnz
jge
lea
call
nop
(bad)
cld
jo
lea
jg
cld
std
test
sti
repnz
push
mov
push
mov
lahf
movs
mov
test
mov
outs
jb
repz
xchg
(bad)
std
or
xchg
jbe
test
push
mov
test
mov
repnz
xchg
jae
repnz
mov
mov
jns
into
add
sbb
loop
xor
sbb
mov
push
fmul
inc
imul
xchg
jae
adc
jae
cld
push
mov
imul
xchg
test
test
mov
xchg
sbb
cld
push
mov
imul
imul
jns
push
and
jbe
loope
jns
sub
ins
jbe
test
mov
lea
inc
imul
xchg
xsaveopt
test
push
mov
xchg
test
mov
inc
scas
lock
mov
test
test
adc
sahf
or
jae
xchg
(bad)
sti
cld
imul
jl
mov
jns
jb
adc
hlt
adc
sahf
loop
mov
xchg
jbe
int3
cli
scas
mov
rep
imul
xchg
(bad)
sti
cld
push
mov
imul
int3
jae
lock
mov
int3
jae
inc
cmps
push
jbe
loope
sbb
jl
sub
sub
jbe
xor
jl
pushf
xchg
sbb
jl
sub
xchg
sbb
iret
xor
test
mov
mov
push
repnz
fdiv
clc
imul
pop
jae
jns
test
movs
(bad)
inc
lods
or
mov
xchg
repnz
imul
jnp
jne
inc
loope
or
imul
mov
test
and
lock
ja
xor
mov
fimul
xchg
ds
jbe
(bad)
jb
or
hlt
adc
sahf
idiv
outs
(bad)
cld
js
mov
xchg
jae
popa
pop
test
push
lock
jge
test
pop
test
push
(bad)
lock
jnp
test
add
jmp
je
mov
push
vpshlb
xchg
repnz
dec
jl
and
cli
repz
imul
outs
jl
and
dec
inc
pop
xchg
jae
jae
pop
sahf
push
leave
jae
and
std
cmp
jb
mov
mov
pop
es
(bad)
jnp
jl
mov
jns
out
lea
xchg
jae
call
(bad)
mov
push
call
jg
cmp
adc
push
sbb
add
loop
(bad)
jae
clc
jmp
jge
sar
das
jl
sub
lock
sbb
mov
clc
jmp
jge
ja
xor
jl
sub
lock
sbb
xor
inc
xchg
jae
cmp
es
pop
cs
cmps
fwait
sahf
das
xchg
jae
mov
retf
sub
call
jae
das
ret
int
add
push
not
adc
jae
jns
jae
fs
xor
sbb
neg
mov
xchg
leave
movs
xor
arpl
lock
test
mov
lock
sub
mov
outs
sti
jecxz
push
mov
fs
lock
mov
xchg
das
jbe
fwait
lds
xchg
mov
(bad)
mov
xchg
mov
mov
test
push
adc
in
test
repz
test
add
imul
sbb
push
js
adc
xchg
mov
xchg
mov
js
cli
mov
adc
cdq
xor
dec
popf
xor
sbb
lea
das
jbe
(bad)
jae
jns
jno
jns
jae
jns
jae
hlt
adc
sahf
jbe
jae
lock
add
mov
cmp
jbe
fs
lock
sbb
adc
push
js
jae
adc
mov
int
jbe
and
mov
xchg
jae
jl
mov
jns
sbb
cld
imul
and
jbe
sbb
lea
popf
xor
sbb
mov
xchg
jae
stc
jl
jbe
xchg
mov
push
xor
aas
popf
xor
cld
(bad)
cwde
cmp
mov
cld
jae
jns
fwait
push
jns
jae
mov
sbb
xchg
(bad)
jae
sbb
xor
xchg
jae
stc
jl
jbe
xchg
lock
retf
sub
call
and
or
int3
imul
inc
idiv
imul
(bad)
jae
adc
mov
sbb
mov
(bad)
jae
inc
xchg
jl
adc
add
push
jle
shr
jbe
sbb
mov
mov
mov
ja
loope
(bad)
cmp
mov
add
mov
imul
jbe
sbb
ss
xchg
mov
sub
jns
sub
call
clc
add
scas
adc
mov
jae
sahf
sbb
retf
inc
aas
xchg
jae
sahf
sbb
sbb
adc
dec
adc
ja
loope
(bad)
mov
stos
das
add
aaa
inc
js
cwde
jo
pop
mov
jns
sub
pop
mov
lock
es
ret
int3
jp
test
(bad)
aas
jbe
sbb
mov
jns
repz
xchg
sbb
xchg
sbb
xchg
jae
mov
mov
mov
xchg
jb
push
cwde
dec
lock
jb
lock
sbb
sbb
jl
and
sbb
ror
mov
and
jbe
jl
and
inc
mov
jg
inc
ins
cli
mov
retf
sub
xchg
cmc
xchg
test
and
sub
es
cli
mov
cli
mov
xchg
sbb
jns
jae
jp
jae
jp
jae
jns
mov
jno
mov
jns
cli
mov
push
add
push
jp
loopne
std
cmp
lock
jns
mov
xchg
test
mov
(bad)
jae
xchg
(bad)
es
sbb
and
jl
and
cli
xor
sbb
sbb
jmp
clc
xor
xchg
sbb
and
repnz
fmul
jae
xchg
shl
jbe
pop
mov
ins
cli
mov
retf
mov
les
and
sub
out
mov
mov
cli
mov
and
arpl
adc
sbb
(bad)
jae
jns
jae
jns
mov
jno
jbe
jns
cli
mov
push
add
mov
cs
jno
jns
jae
xchg
mov
mov
sbb
cli
mov
pop
mov
stc
test
jbe
ins
cli
mov
xchg
(bad)
and
cwde
and
jbe
xchg
(bad)
xor
mov
fwait
add
xchg
jae
xchg
xor
jbe
adc
jae
js
jae
es
mov
js
and
and
push
jbe
repnz
fwait
xchg
jae
sbb
jae
sbb
jae
sbb
jae
add
inc
jb
jbe
xchg
jae
jns
(bad)
idiv
adc
data16
jne
mov
pop
ss
and
je
ror
mov
ror
cli
push
ins
ja
js
or
stc
lahf
je
dec
inc
scas
lock
repz
xchg
push
cmps
repnz
into
aam
(bad)
cmp
cwde
pop
clc
push
sbb
sar
sar
jb
xchg
adc
mov
ja
adc
jno
mov
adc
mov
push
mov
mov
sar
jle
and
test
xchg
jae
into
rcl
popf
sub
push
jns
test
mov
pop
pop
xor
arpl
xor
and
jo
sar
(bad)
jne
test
fdiv
cwde
jl
cmp
and
mov
cli
scas
mov
xor
jo
jg
dec
test
mov
push
call
and
and
mov
cmp
out
aad
jbe
ror
dec
stos
xchg
xor
sub
adc
ror
jmp
dec
lods
sbb
lahf
(bad)
jae
jbe
jae
mov
dec
mov
inc
sub
xchg
jae
mov
repnz
adc
adc
xor
cmp
jb
cmp
cli
xor
icebp
mov
xor
jg
cld
jp
lds
mov
jne
cmp
ja
jae
cmp
xchg
test
mov
(bad)
xchg
call
fwait
lds
(bad)
scas
aaa
arpl
jae
cmp
jb
mov
icebp
mov
cmp
cli
xor
test
push
sub
xor
push
jae
jns
mov
or
repz
xchg
cli
mov
jbe
cmc
adc
add
mov
add
repz
mov
jns
lds
mov
xchg
lock
idiv
jo
iret
xlat
jb
mov
adc
jbe
loope
idiv
ja
iret
xchg
dec
cmp
xor
loope
idiv
ja
adc
outs
pop
jns
repz
fwait
jl
xor
mov
cmp
jbe
add
mov
xchg
xchg
jmp
retf
sub
sbb
cli
xor
and
cli
xchg
jae
or
repz
imul
pop
mov
jmp
sub
cmp
jbe
sub
jecxz
mov
loopne
out
add
inc
jno
jecxz
jmp
add
ss
aam
out
add
ss
lods
stos
out
add
add
sub
mov
xchg
jecxz
ins
xor
sub
jecxz
mov
loopne
out
add
inc
jno
jecxz
jmp
add
dec
mov
loope
out
add
pop
jmp
repz
add
out
add
sahf
jns
jae
and
out
add
jmp
push
rol
ss
clc
outs
jmp
fdiv
jmp
add
out
xchg
out
add
mov
add
out
pop
jecxz
jmp
add
out
push
jg
jmp
add
out
pop
jecxz
jmp
add
out
jge
xchg
xchg
mov
addr16
jae
cmp
push
mov
jecxz
jmp
xchg
jecxz
jge
jecxz
jmp
add
cmc
adc
int
push
xor
sbb
jecxz
mov
movs
mov
es
sbb
jecxz
mov
out
add
jecxz
jmp
sub
loopne
inc
dec
add
out
xchg
mov
jmp
add
out
sub
mov
xchg
jecxz
adc
int
xor
sbb
jecxz
mov
movs
mov
es
sbb
jecxz
mov
out
add
jecxz
jmp
sub
mov
jecxz
jmp
add
xchg
mov
out
cmc
jecxz
jmp
scas
or
jno
call
jg
lock
mov
dec
pop
scas
lock
test
mov
rol
jbe
xchg
clc
xor
and
mov
cli
mov
ror
js
mov
jmp
mov
xchg
jbe
sbb
or
jns
je
jns
jl
sub
cli
(bad)
push
inc
jmp
jl
add
push
ja
inc
in
arpl
add
repnz
mov
jl
imul
ss
and
inc
jbe
jbe
loope
std
cmp
jb
cmp
mov
sti
lock
pop
scas
lock
sbb
add
jbe
sbb
sub
sahf
and
xchg
jl
cmp
and
cmp
jb
sub
xor
mov
and
adc
clc
xor
and
and
jbe
pop
mov
lock
test
mov
imul
jbe
ss
lods
mov
sti
test
mov
call
and
out
repz
fs
xchg
push
fwait
jmp
jo
sub
mov
(bad)
mov
test
rcr
pop
dec
repnz
(bad)
jae
or
inc
mov
leave
jno
jns
popf
fnsave
jae
cmp
and
sub
mov
push
jl
inc
xchg
jae
jbe
push
cdq
mov
test
pop
bound
xor
sbb
fwait
into
test
jb
xor
and
cdq
mov
test
cli
test
cmp
jbe
cwde
sbb
dec
jo
std
jb
jbe
rcr
jbe
pop
mov
fcomp
mov
iret
jae
lock
jo
test
data16
(bad)
jae
imul
sti
nop
cmp
jbe
ror
nop
cmp
jmp
sub
data16
jp
sbb
lock
(bad)
jae
jl
xchg
xor
lods
mov
dec
fwait
(bad)
sub
imul
xchg
jae
add
jl
xchg
mov
imul
push
daa
jns
cli
xor
xchg
clc
or
push
jl
stos
push
xchg
data16
cli
dec
in
xor
fs
xchg
push
sbb
adc
xchg
xor
sbb
xchg
xor
les
cmc
mov
(bad)
jae
cmp
cwde
popa
clc
push
std
sub
cli
scas
jp
xchg
ins
add
xor
movs
arpl
cmp
ja
icebp
jb
jbe
xchg
call
(bad)
out
xlat
in
jb
jbe
rol
jne
fs
arpl
jb
jbe
test
xchg
sbb
ja
in
jb
jbe
xchg
jmp
cmp
jmp
(bad)
jae
iret
rcr
jb
jbe
cdq
jecxz
cmp
push
jns
test
mov
adc
and
add
nop
cmp
jbe
cwde
dec
test
add
push
sahf
popa
fwait
les
xchg
(bad)
cli
scas
jp
not
(bad)
push
jnp
mov
jae
jns
jno
jns
jae
jns
jae
xchg
jnp
pop
fnstenv
lock
jbe
(bad)
jae
cmp
and
or
fwait
mov
or
fwait
mov
xchg
jae
xchg
mov
jns
fwait
retf
jae
mov
pop
mov
lock
and
dec
jns
and
jae
inc
pushf
retf
xor
xchg
push
xor
ins
jb
lock
clc
xor
mov
ss
xchg
jae
cmp
jns
sar
(bad)
jae
cmp
jae
test
data16
jns
jae
jns
push
cmp
and
es
mov
lock
and
pop
add
push
sbb
mov
inc
pushf
retf
xor
xchg
jl
in
jae
xchg
fwait
mov
xchg
jae
mov
jg
test
std
mov
js
jae
ins
pushf
retf
xor
pop
dec
je
loopne
jns
ror
jbe
pop
data16
(bad)
jae
dec
xchg
fwait
(bad)
xor
pop
mov
pop
data16
(bad)
jae
add
lea
push
mov
xchg
jae
repnz
imul
lea
ror
stc
xchg
fidiv
xchg
jae
mov
pop
push
jle
(bad)
jae
es
mov
lock
es
jl
sbb
mov
inc
pushf
retf
xor
xchg
push
jae
pop
mov
xchg
xor
xchg
jae
ins
pushf
retf
xor
pop
dec
je
loope
jns
ror
xor
pop
mov
cli
mov
sbb
xchg
daa
sub
and
enter
and
test
mov
jl
cmp
lock
pop
push
data16
cmp
jbe
jg
jns
ror
add
les
xchg
jno
repnz
xchg
fwait
xor
jae
into
leave
lea
call
and
xor
enter
cld
and
dec
fidiv
cli
push
jg
aas
repnz
xchg
xor
loope
jns
ror
adc
xor
jbe
fwait
les
xchg
add
mov
into
ror
pop
or
jl
cmp
cmp
daa
iret
mov
and
inc
js
cmp
xchg
jae
inc
pushf
retf
xor
xchg
pop
push
repnz
dec
jl
xor
sbb
xchg
jae
jns
push
jle
push
ds
pop
mov
clc
arpl
xor
sbb
xchg
jae
cli
fdiv
lock
jb
lock
sub
mov
js
and
ja
pop
not
push
ss
inc
dec
jns
clc
imul
jb
lock
sbb
inc
xchg
jae
jns
inc
jle
(bad)
jae
pop
fnstenv
adc
fwait
mov
xchg
jae
test
icebp
xchg
sbb
jns
xchg
(bad)
cmp
cli
mov
push
xchg
cli
scas
jbe
mov
xchg
push
xor
adc
rol
sub
cmps
retf
(bad)
jae
push
shl
clc
push
sub
inc
xchg
fwait
or
xchg
jae
imul
and
cli
push
imul
mov
ss
inc
cmps
retf
(bad)
jae
sahf
shl
lock
repnz
sbb
mov
sbb
jns
retf
imul
cli
ins
mov
and
xchg
jae
ins
pushf
retf
xor
sbb
jb
lock
(bad)
xor
push
push
ja
xchg
jo
jno
xor
cld
in
(bad)
cmp
inc
xor
jbe
cld
aas
cwde
cmp
jbe
cmp
imul
jnp
jg
fwait
idiv
jae
imul
and
cli
push
jg
and
mov
les
mov
call
jae
das
ret
int3
aad
mov
xchg
jmp
cli
push
jbe
hlt
adc
jle
jae
cli
push
jnp
and
ins
jns
ror
xchg
add
lds
xchg
jae
push
mov
mov
test
(bad)
cmp
fwait
lds
xchg
ja
xor
jbe
adc
mov
push
adc
mov
jp
jbe
adc
rol
mov
int3
outs
lea
ins
xchg
jae
into
adc
bnd
lea
cld
outs
lea
xchg
mov
mov
sbb
lea
jne
es
xchg
mov
out
xchg
sti
cmp
jle
jbe
sbb
lea
sbb
(bad)
mov
sub
jns
lock
sbb
lea
sub
pop
bound
jns
push
sub
and
and
jno
call
and
call
push
pop
inc
jns
retf
jmp
xchg
jae
sahf
sbb
mov
mov
lods
pop
add
jb
cld
push
clc
xor
and
cli
push
jg
mov
jae
repz
mov
push
(bad)
repz
mov
jl
ds
mov
jl
lea
adc
mov
cli
push
outs
es
pop
mov
hlt
adc
push
cmp
xor
adc
sahf
fidiv
cli
push
outs
inc
sbb
mov
push
ss
sbb
nop
ja
outs
jb
push
and
or
sahf
pop
shl
adc
sbb
(bad)
jae
jp
jae
jns
(bad)
repz
mov
jl
xor
cli
mov
ins
jb
lock
lock
jp
jbe
push
xor
jns
jae
adc
cs
cmps
fwait
idiv
xchg
jae
adc
mov
mov
(bad)
ss
les
inc
xchg
(bad)
jae
in
lea
xor
mov
cli
mov
adc
sahf
inc
shl
adc
mov
imul
jae
das
jl
xor
sub
and
and
jno
call
int3
xchg
inc
xor
cmp
ss
lods
pop
add
jb
cld
push
clc
xor
and
cli
push
jg
mov
sbb
mov
inc
xor
jae
push
mov
dec
sbb
sbb
mov
sar
mov
outs
mov
cld
push
sbb
xchg
(bad)
jae
cld
push
fwait
mov
xchg
jae
mov
(bad)
jae
adc
mov
jl
xor
jp
or
push
mov
cld
push
cwde
cmp
mov
jl
ds
lock
sbb
mov
cld
ins
mov
aas
xchg
jae
jns
inc
sub
jle
mov
jae
gs
dec
cwde
cmp
sbb
les
dec
xchg
(bad)
jae
or
mov
mov
jbe
adc
jae
daa
pop
mov
lock
call
int3
aad
cmps
pop
inc
pusha
lea
js
test
sar
mov
ins
mov
lock
mov
jne
test
rcr
mov
mov
jbe
pop
mov
hlt
adc
sahf
out
xlat
jae
lock
mov
jb
cmc
xchg
mov
sti
int3
push
fwait
cmp
lea
hlt
adc
sahf
mov
push
pop
adc
push
xor
sbb
cld
imul
sbb
jae
lock
pop
mov
push
cwde
and
adc
sahf
adc
jae
jo
pop
push
adc
dec
xor
sbb
cld
imul
push
aad
jbe
ins
jb
lock
cwde
push
adc
xor
sbb
cld
arpl
jno
inc
sahf
jb
jae
clc
arpl
jns
sub
mov
call
jae
das
ret
int
sar
mov
cmp
(bad)
jb
cld
pusha
lea
jno
mov
sub
xchg
xchg
push
mov
push
mov
jne
test
rcr
add
xor
jns
mov
hlt
adc
sahf
push
(bad)
jae
lock
cli
mov
jbe
cmc
adc
pushf
test
and
in
pusha
lea
cmp
jbe
xchg
sbb
sbb
xchg
jae
cmp
test
push
xor
sbb
mov
dec
cld
arpl
cmp
les
xchg
(bad)
jae
sub
mov
xor
jge
jbe
xchg
retf
mov
lahf
sbb
mov
mov
xchg
fwait
bound
les
ja
(bad)
jae
sub
mov
xor
cld
jae
jns
sbb
jbe
jbe
sbb
jae
jns
and
cmp
mov
jge
mov
mov
sub
jns
xchg
(bad)
cld
js
mov
loopne
cmc
xchg
je
xchg
jbe
ror
add
xchg
cwde
leave
repnz
or
jae
xchg
inc
or
cld
test
cmp
adc
inc
xchg
sbb
(bad)
fwait
push
cmp
sar
xchg
jae
(bad)
or
jbe
retf
sub
call
jae
das
ret
clc
sub
adc
mov
ins
cli
mov
ins
cli
mov
sar
inc
mov
(bad)
repz
mov
pop
ss
les
cmc
mov
xor
adc
sahf
data16
jae
mov
imul
adc
jmp
jl
add
cli
repz
push
mov
push
mov
jne
test
rcr
add
ss
pop
mov
adc
sbb
(bad)
jae
jp
jae
jns
(bad)
repz
mov
jl
aaa
jns
cli
xor
mov
jae
(bad)
jae
adc
jbe
cmps
fwait
(bad)
inc
xchg
jae
pop
mov
mov
repz
push
mov
push
call
jp
jbe
out
xor
(bad)
jae
adc
inc
sahf
or
pop
mov
push
sbb
xchg
jae
jns
ss
jns
cli
mov
xchg
(bad)
xor
xchg
jae
xchg
mov
lock
test
xchg
mov
jmp
sbb
loope
and
stos
jae
lock
jb
lock
cwde
mov
out
sahf
fisubr
sahf
xor
jl
xor
xchg
sbb
cld
test
xchg
xchg
dec
jbe
sbb
neg
mov
xchg
jae
or
fwait
jp
xchg
jae
daa
iret
mov
into
jmp
sub
jns
and
adc
sub
outs
jns
test
xchg
mov
addr16
xchg
dec
add
mov
retf
xchg
jae
fcom
jae
xchg
jns
jbe
sbb
jbe
(bad)
jae
adc
jns
push
jle
mov
jae
js
test
push
repnz
mov
popa
mov
xchg
sti
cmp
jns
push
jp
loope
sti
cld
in
mov
xchg
(bad)
jae
cld
in
mov
cmp
push
cld
in
mov
xchg
(bad)
jae
cld
in
mov
cmp
mov
(bad)
jae
cli
jmp
sbb
jle
jae
adc
jbe
jmp
fwait
mov
jae
jle
test
push
jbe
adc
sti
cld
in
mov
inc
xchg
jae
cld
cmp
jp
fwait
test
sub
jbe
adc
mov
push
lea
inc
xchg
jae
xchg
scas
push
jbe
sbb
call
test
imul
imul
imul
imul
in
lea
cdq
push
mov
sub
xchg
imul
out
test
sbb
xchg
sbb
xchg
(bad)
jae
les
(bad)
cmp
scas
dec
dec
cli
mov
adc
mov
aam
jbe
xchg
and
les
or
add
xchg
mov
jns
div
xchg
fisttp
inc
xchg
jae
mov
xchg
jae
xchg
dec
jo
jns
test
imul
imul
xor
lahf
mov
adc
mov
adc
mov
adc
mov
sub
mov
sbb
dec
add
mov
imul
xchg
std
les
xchg
xchg
dec
inc
lock
out
lock
mov
imul
fwait
cmp
mov
jl
aaa
jns
lock
adc
jae
cld
and
mov
xchg
jae
jns
dec
leave
push
mov
pop
push
jle
jecxz
sahf
sub
mov
xchg
sahf
retf
jbe
dec
pop
scas
lock
clc
xor
add
cs
jbe
cld
test
inc
xchg
jae
jns
sbb
add
mov
or
retf
sub
call
jae
das
ret
clc
add
cs
mov
mov
sub
outs
jns
test
xchg
mov
xor
jbe
arpl
xchg
test
lock
les
cmc
mov
fwait
mul
jns
jae
add
jae
jns
or
div
jns
jae
cld
outs
lea
inc
xchg
jae
adc
jae
xchg
xchg
jne
jns
xor
mov
sahf
push
stos
jae
lock
adc
xor
stc
call
inc
inc
fwait
les
xchg
jae
push
mov
jae
mov
mov
sub
test
or
push
jae
jns
pushf
call
lea
ror
inc
mov
xchg
repz
push
loope
test
jae
pop
sbb
mov
repz
sub
jns
lock
sub
arpl
test
xchg
mov
shl
or
sub
mov
repz
sub
jns
lock
adc
jae
pop
(bad)
(bad)
repz
sub
cld
fwait
cmp
mov
jl
ss
lock
sbb
mov
cld
outs
lea
inc
xchg
jae
sub
xchg
push
outs
es
adc
sahf
inc
mov
cmp
inc
mov
retf
mov
js
and
jno
das
xor
js
cli
mov
xchg
sbb
xchg
fwait
sub
jae
aas
nop
repnz
xchg
jae
adc
es
repnz
jbe
pop
mov
pop
push
xchg
cli
mov
cli
mov
and
dec
jns
cli
mov
sbb
lock
les
(bad)
cmp
sbb
rol
sahf
jmp
add
push
jp
loope
mov
and
mov
push
jnp
add
jb
jne
push
data16
jl
pop
adc
jae
add
jno
pop
imul
das
jl
add
jp
jbe
ds
jbe
(bad)
jae
adc
sahf
fisubr
sahf
pop
lods
jae
lock
test
mov
push
call
jae
das
ret
clc
sub
or
repz
ins
jb
lock
retf
pop
dec
xchg
jae
sahf
sbb
mov
mov
xchg
fwait
cmp
jae
jns
sbb
(bad)
jae
dec
jl
dec
jns
sbb
xchg
ja
jns
div
imul
xchg
jae
mov
sbb
jbe
xchg
jno
jl
xchg
mov
jae
cld
push
mov
mov
imul
mov
jge
div
imul
imul
xchg
sbb
xchg
(bad)
jae
cld
xchg
(bad)
fwait
dec
lock
xchg
jae
addr16
jb
add
jbe
adc
xchg
sahf
sbb
cli
push
jg
std
xchg
jae
xchg
not
(bad)
jb
vmwrite
jbe
adc
xchg
sahf
sbb
cli
push
jg
xchg
jbe
mov
ja
loop
xor
sbb
jbe
imul
pop
mov
mov
imul
imul
shl
jns
cli
jo
jns
sub
ret
aaa
push
jbe
and
or
inc
les
je
idiv
cmc
sbb
jns
ds
pop
nop
jae
nop
jmp
jbe
test
jl
push
nop
jae
push
test
cmp
ss
sbb
jns
adc
xchg
dec
and
std
pop
jno
jns
and
xchg
dec
es
daa
add
shl
and
adc
ja
xchg
or
inc
(bad)
daa
cmp
fwait
test
push
nop
jae
inc
les
and
jp
jae
gs
jae
inc
fdivr
and
jns
jae
imul
jae
nop
imul
test
jl
or
jo
jns
jbe
or
adc
xchg
sahf
xchg
adc
xchg
jbe
clc
sbb
loopne
xor
sbb
jbe
imul
pop
mov
inc
imul
push
(bad)
repz
mov
xchg
xor
das
xchg
jae
cld
push
cli
scas
cli
push
jg
xchg
adc
jns
mov
adc
sahf
xor
jl
dec
jns
sbb
cld
sbb
xchg
call
jns
sbb
(bad)
jae
mov
and
imul
xchg
inc
jge
jne
xchg
repz
sub
jbe
xchg
add
adc
jo
imul
push
(bad)
dec
jns
cli
repz
outs
mov
jns
mov
xchg
outs
mov
xchg
mov
repz
outs
mov
jge
out
jns
mov
test
mov
jl
mov
imul
out
test
vpshlb
jns
xchg
sbb
jl
lea
jg
sti
cld
xchg
(bad)
mov
sub
jae
xchg
dec
mov
lock
inc
mov
push
call
cwde
jae
ins
sbb
jbe
imul
(bad)
fwait
rol
repnz
mov
nop
add
jbe
adc
jp
loopne
sti
cld
xchg
(bad)
mov
sub
jno
xchg
add
mov
ins
jb
lock
call
xchg
(bad)
mov
sub
fwait
movs
sub
mov
(bad)
cli
scas
cli
push
outs
es
sahf
xor
sbb
mov
mov
jbe
pop
mov
clc
arpl
jns
(bad)
repz
mov
jl
dec
jns
sbb
sbb
mov
cmps
fwait
(bad)
dec
xchg
jae
push
scas
popf
xor
jl
dec
jns
sbb
cld
dec
cwde
cmp
jbe
jge
ja
xchg
repz
jge
mov
cld
xchg
(bad)
mov
sub
fwait
mov
cmc
mov
xchg
jae
sahf
sbb
mov
mov
xchg
sbb
(bad)
jae
inc
lods
jae
adc
jbe
cmps
fwait
inc
dec
xchg
jae
fcom
ja
xchg
add
div
imul
push
pushf
mov
jnp
adc
call
jp
jbe
bound
(bad)
jae
adc
inc
sahf
xchg
cmps
jae
nop
hlt
jb
jns
mov
sbb
xor
inc
inc
jbe
(bad)
jae
adc
sahf
xor
imul
cmps
jae
clc
jnp
jle
xchg
call
jns
jbe
cmp
(bad)
jae
adc
sahf
xor
imul
cmps
jae
clc
jnp
and
js
jae
imul
jbe
(bad)
jae
adc
sahf
cli
cmps
jae
shl
jns
xchg
(bad)
cld
jl
mov
xchg
jae
lock
lock
les
push
xchg
(bad)
jae
cld
push
fwait
ret
jae
mov
xchg
jae
sahf
sbb
mov
mov
imul
(bad)
jae
hlt
add
mov
pop
inc
jns
call
jns
jbe
xchg
(bad)
jae
adc
inc
sahf
jb
jae
clc
jnp
dec
jns
cwde
pmuludq
jae
xchg
mov
les
sahf
mov
mov
mov
push
jbe
jg
test
(bad)
push
ins
adc
mov
jbe
cld
push
fwait
cmp
jbe
jg
push
imul
xchg
es
jbe
(bad)
jae
adc
inc
sahf
shl
stos
adc
xchg
cwde
outs
adc
loop
jns
sbb
cld
ja
cmp
jbe
sbb
mov
inc
outs
mov
mov
les
and
sub
cmp
retf
jns
xchg
jae
sahf
sbb
mov
jno
jae
js
sbb
xchg
cli
mov
ins
test
mov
movs
mov
arpl
jb
xchg
push
inc
jbe
sbb
inc
jbe
sbb
mov
sbb
mov
not
(bad)
and
lock
jae
or
cli
mov
cli
mov
push
mul
jns
mov
test
(bad)
mov
xchg
jae
mov
jbe
ds
jbe
sbb
mov
cmps
js
jbe
jl
inc
jns
cli
mov
push
add
jns
sbb
int3
push
lea
jns
cli
repz
mov
jns
(bad)
mov
imul
adc
lods
or
inc
mov
push
jae
jns
test
sbb
mov
imul
mov
fstp
jno
push
inc
jns
cli
mov
cli
mov
dec
xor
loopne
sti
cld
dec
lea
test
add
mov
lea
mov
inc
lea
xchg
jg
loopne
inc
movs
test
xchg
movs
mov
push
mov
imul
xchg
jns
adc
and
or
and
jae
mov
ins
cli
mov
add
mov
jns
mov
sbb
lea
jns
jl
cld
inc
lea
mov
call
fwait
(bad)
dec
xchg
jae
das
ret
clc
or
dec
pop
pop
cmp
dec
fs
mov
dec
repnz
jae
cli
icebp
(bad)
jbe
cmps
fwait
push
dec
xchg
jae
clc
jp
and
lock
jns
test
push
nop
fwait
dec
dec
xchg
jae
mov
push
pop
xchg
jae
mov
fs
xchg
push
sbb
ror
jbe
xchg
mov
jne
push
inc
jns
jp
jbe
in
jbe
xchg
lock
xchg
(bad)
xor
xchg
sbb
jecxz
sahf
cmp
pop
xchg
push
lock
xchg
jae
dec
dec
xor
sbb
mov
cld
jae
jns
(bad)
repz
mov
jb
xor
lock
jg
sar
cld
ins
or
xchg
mov
imul
test
xchg
mov
adc
sti
cld
push
fwait
mov
jns
push
mov
adc
mov
ficomp
xchg
cli
xchg
cli
mov
dec
cwde
(bad)
cli
stos
jae
jbe
inc
sahf
bound
repnz
call
mov
push
ja
sub
xchg
cmc
xchg
cwde
and
cs
push
jle
leave
arpl
push
cmps
mov
mov
push
and
jbe
dec
add
push
xor
icebp
ror
(bad)
mov
imul
das
jl
inc
jns
lock
movs
mov
mov
ror
addr16
dec
jns
test
mov
retf
mov
js
jb
xchg
and
cs
push
jle
lea
add
mov
mov
mov
jo
push
outs
xchg
jae
xchg
xchg
jbe
jns
call
jno
jbe
sbb
mov
xchg
and
jbe
xchg
sbb
pop
inc
jbe
les
inc
(bad)
jae
jns
jae
hlt
adc
xchg
mov
repnz
jns
cli
repz
mov
ins
mov
jge
mov
inc
imul
mov
(bad)
repz
mov
(bad)
jne
loope
xor
loop
sahf
cmps
jae
shr
(bad)
cld
ins
mov
xchg
out
ja
jns
inc
mov
or
test
xchg
jae
xchg
inc
ins
mov
jmp
adc
xchg
sahf
push
jae
cli
push
jnp
mov
aam
jbe
aam
or
(bad)
mov
imul
push
and
adc
xchg
lahf
dec
xchg
jae
lock
inc
mov
push
sbb
sbb
div
imul
pop
mov
jo
jl
fwait
xchg
jae
hlt
add
xchg
sahf
retf
jbe
ins
jne
neg
jbe
pop
(bad)
mov
ins
inc
mov
push
(bad)
repz
mov
cld
cmc
call
mov
xchg
push
jbe
pop
mov
cli
sub
add
pop
call
jae
jns
sbb
xchg
(bad)
jae
dec
jl
pop
jns
repnz
mov
xor
jbe
adc
jae
int3
push
mov
jg
loopne
sti
ins
retf
jns
out
sub
jne
data16
(bad)
jae
in
pusha
mov
sub
int3
push
adc
jecxz
push
sbb
xchg
lock
sbb
jbe
imul
(bad)
jae
hlt
add
xchg
mov
sahf
pop
jns
cwde
inc
lock
jb
lock
(bad)
repz
mov
jns
sbb
add
es
add
xchg
mov
pushf
fimul
jae
mov
jbe
jge
mov
pop
mov
jns
cli
xchg
cli
js
and
cmp
cwde
out
jbe
jae
xor
sbb
jae
adc
sahf
shl
jg
add
jae
mov
xor
(bad)
jb
jnp
add
xchg
cli
mov
icebp
xor
pop
mov
push
jl
cmp
and
lock
adc
mov
js
jbe
test
xor
mov
pop
pusha
sub
jns
cli
mov
sbb
into
jbe
xchg
sbb
jl
pop
jns
cli
mov
cli
mov
ror
inc
dec
cli
mov
ror
sub
jns
cli
mov
icebp
(bad)
jbe
xor
arpl
mov
shr
lock
mov
jmp
lock
jl
pop
jns
cwde
sub
ins
test
mov
xchg
test
test
jbe
call
jae
and
mov
rcr
bound
jae
sbb
cli
xor
adc
jbe
cld
gs
xchg
sbb
xchg
fwait
repnz
xchg
jae
xchg
push
pop
jbe
sbb
ss
xchg
sub
iret
mov
call
jno
pop
adc
jae
cmp
and
imul
adc
out
jns
jae
jns
xor
xchg
and
shr
jbe
arpl
es
mov
lock
call
jnp
jmp
xor
push
ins
cli
mov
push
pop
and
mov
leave
cwde
jae
jns
ss
js
jae
cli
icebp
(bad)
jbe
xchg
(bad)
xor
(bad)
(bad)
xor
(bad)
cli
xchg
push
jg
xchg
loop
jbe
sbb
mov
jns
ss
sub
and
cmp
and
adc
xor
(bad)
cli
xchg
push
arpl
xchg
rcr
jns
aaa
sbb
sbb
retf
mov
jns
lock
adc
jae
cmp
aaa
jbe
xchg
clc
xor
sbb
xlat
(bad)
cmp
cli
mov
sbb
cli
xor
xchg
jae
pop
push
ss
(bad)
xor
les
jbe
xchg
sbb
xchg
sbb
xchg
lock
mov
xor
loope
sti
ficomp
sti
fs
lahf
xor
(bad)
sbb
jb
jbe
popf
mov
jg
ss
shl
xchg
jmp
xchg
mov
push
ficom
adc
jae
or
fwait
push
push
xchg
jae
or
fwait
outs
push
xchg
jae
pop
nop
jae
jge
mov
jo
pushf
inc
xor
sub
pop
mov
lock
and
pop
push
jle
cmp
mov
sbb
jae
sets
mov
test
idiv
(bad)
jb
seto
mov
nop
fwait
retf
jae
ins
(bad)
jae
xchg
cs
jbe
pop
mov
lock
test
mov
sar
sub
xchg
cli
mov
loope
sahf
es
and
imul
sahf
dec
xchg
jae
cli
push
imul
push
call
ud0
(bad)
ja
jge
bound
imul
xchg
jg
or
fwait
jo
xchg
jae
mov
sar
cli
js
and
and
pop
sbb
mov
sbb
mov
(bad)
jae
jg
jno
adc
add
push
jle
ret
jns
mov
jge
mov
inc
imul
xchg
mov
mov
jbe
loope
mov
fwait
push
push
xchg
jae
mov
push
jae
mov
call
cli
xor
push
jae
mov
sar
cli
js
and
pop
push
(bad)
shr
lock
int3
lods
and
push
inc
push
jns
cli
mov
cli
mov
xchg
jae
and
mov
ror
je
(bad)
jae
or
mov
jno
xchg
pop
jns
jp
or
lods
(bad)
xor
and
mov
mov
test
jns
jp
or
jl
pop
jns
inc
mov
or
mov
xor
shr
daa
pop
mov
lock
es
ret
int3
out
pop
or
idiv
pop
dec
sahf
lahf
(bad)
jae
or
xchg
jae
xchg
push
pop
jbe
sbb
pop
mov
push
rcr
cmp
push
inc
dec
push
xor
ds
jae
jns
mov
jns
sbb
xchg
sbb
cmps
lahf
xor
jl
pop
jns
rcr
and
add
mov
imul
(bad)
jae
sbb
(bad)
into
test
mov
xor
push
retf
test
not
pop
aaa
push
jge
inc
xchg
(bad)
jae
sub
and
pop
cs
into
add
sbb
mov
add
cwde
xor
test
jnp
test
cli
mov
sar
cmp
mov
imul
xchg
ret
jns
mov
clc
jp
push
jns
cli
mov
jg
sub
mov
jnp
repnz
leave
jae
lock
lock
jg
xor
test
jbe
and
or
pop
push
stc
test
jbe
(bad)
cli
mov
adc
jne
loope
std
cmp
mov
jns
test
cmp
xor
cmp
and
lock
repnz
pop
ins
lock
jo
jne
mov
imul
jne
mov
mov
sub
call
and
and
mov
mov
dec
and
adc
rol
jbe
sbb
cmp
jl
xor
rcl
or
pushf
and
cmp
jns
cli
xor
fwait
lds
pop
add
push
pop
jl
and
cli
fs
jge
xor
xchg
clc
loope
lock
xchg
jae
mov
jg
jns
jmp
dec
inc
xchg
jmp
cmc
and
jbe
xchg
leave
cmp
push
cdq
jne
shr
cs
push
sub
pop
call
jae
cli
push
adc
jns
ror
fptan
rol
mov
sbb
jno
xchg
es
jbe
(bad)
and
cmp
mov
fsub
mov
imul
lahf
sbb
mov
mov
push
es
jg
test
push
jnp
mov
movs
mov
scas
xchg
jae
cli
sub
add
adc
jae
mov
xchg
mov
ins
jl
pop
jns
cli
rep
imul
jns
(bad)
mov
dec
mov
xchg
sbb
xchg
mov
jge
jae
adc
fwait
push
xchg
jae
cld
ins
mov
jns
test
test
mov
loope
push
jge
jae
xchg
(bad)
push
jbe
adc
jae
cmp
cli
repz
push
lock
js
push
(bad)
lock
sbb
add
mov
jl
push
xchg
mov
cld
push
call
ds
jns
lock
imul
xchg
push
push
mov
pop
cwde
xor
imul
xchg
sahf
jb
jae
cli
push
addr16
jmp
loope
std
cld
ins
mov
xchg
(bad)
jae
xchg
jp
jbe
pop
mov
cli
jmp
jg
jns
mov
mov
mov
nop
je
jbe
adc
jae
cld
xchg
jae
xchg
mov
add
mov
imul
xchg
fsubr
jbe
pop
into
mov
les
xchg
mov
arpl
cmc
mov
sub
leave
cmp
push
cdq
jne
add
mov
hlt
sub
xchg
push
push
js
jbe
sub
xchg
sahf
ss
addr16
pop
mov
xchg
idiv
jae
sti
out
mov
xchg
mov
(bad)
repz
mov
xchg
es
cwde
xor
les
cmc
mov
xchg
jae
lahf
sbb
mov
mov
imul
xchg
test
pop
mov
xchg
(bad)
cld
js
mov
xchg
clc
xor
test
mov
jo
jns
repz
jns
mov
jns
jae
mov
pop
ss
xchg
mov
mov
xchg
jb
jns
test
js
mov
lods
sbb
add
ja
loopne
test
jae
pop
imul
adc
cwde
xor
sbb
xchg
repnz
jbe
pop
mov
clc
jp
and
xchg
(bad)
sti
mov
mov
pop
mov
stc
test
jbe
ins
cli
mov
sbb
mov
cld
xchg
jae
xchg
jl
cld
jle
mov
imul
jns
repnz
fwait
jae
hlt
adc
sahf
ja
mov
cld
mov
cld
xchg
jae
xchg
fwait
add
imul
loope
mov
mov
xchg
es
cwde
xor
les
cmc
mov
fs
mov
and
cs
xchg
jae
cld
pusha
mov
jns
mov
xchg
(bad)
and
cli
push
jg
cld
push
mov
cld
dec
lea
cmp
mov
pop
mov
lock
xchg
push
sbb
xchg
sbb
sbb
xchg
jae
cmp
jle
scas
push
jbe
sbb
mov
xchg
jns
sbb
sub
xchg
mov
popf
imul
jns
sbb
mov
int3
jo
mov
xchg
mov
sub
jbe
sbb
mov
xchg
ds
jbe
pop
neg
jg
test
adc
mov
sbb
jb
jns
int3
stos
jnp
inc
(bad)
mov
jg
inc
ins
lea
iret
ror
jns
test
push
push
jbe
(bad)
jae
lock
jbe
adc
js
jae
xchg
xchg
mov
clc
arpl
sbb
repz
test
add
(bad)
jae
inc
jle
jbe
fstp
jbe
adc
lods
mov
push
cmp
dec
call
xchg
sbb
xchg
repz
call
push
push
test
sbb
jno
jns
and
aam
sbb
mov
fmul
mov
dec
ins
cli
mov
sar
inc
xchg
jl
mov
adc
mov
pop
ja
js
jae
lock
mov
xchg
jae
sahf
sbb
mov
mov
pushf
cli
mov
push
jbe
xchg
add
jns
es
shl
sbb
mov
and
mov
loop
jbe
sbb
mov
xchg
jns
clc
and
inc
test
sti
sub
xchg
jb
lock
mov
mov
jbe
adc
mov
imul
test
mov
or
mov
xchg
clc
and
inc
test
sti
sub
clc
mov
js
daa
je
(bad)
cli
jecxz
imul
lahf
(bad)
jae
fidiv
out
xchg
mov
cli
mov
test
jbe
adc
mov
mov
jbe
mov
fwait
dec
pop
xchg
jae
jge
jae
hlt
adc
mov
jge
jbe
das
call
adc
mov
cmc
mov
xchg
jbe
push
call
mov
popf
mov
xchg
jae
cld
push
(bad)
repz
mov
jns
mov
in
imul
cmc
imul
loope
mov
xchg
sti
cld
and
add
mov
repz
mov
das
jl
push
jns
cli
mov
cli
mov
push
call
jge
jbe
adc
sahf
loop
jae
lock
jb
lock
(bad)
repz
mov
xchg
es
push
push
jbe
jl
add
mov
jns
sbb
adc
mov
jl
push
jns
lock
adc
jae
cld
sub
mov
push
not
jns
jae
mov
imul
arpl
addr16
lock
std
imul
xchg
jbe
ins
pop
mov
push
(bad)
repz
sub
xchg
sti
cld
xor
repz
sub
jae
jns
push
sbb
(bad)
jae
jns
test
xchg
fwait
push
pop
xchg
jae
mov
xchg
jae
int3
cmp
mov
xchg
retf
push
imul
test
(bad)
mov
imul
adc
mov
adc
jns
mov
mov
imul
adc
jae
cld
push
sbb
nop
(bad)
jae
ds
jbe
push
jp
or
sbb
push
mov
jbe
adc
mov
dec
add
popf
test
sbb
jae
jns
fwait
cs
xchg
jae
mov
out
imul
xchg
jae
inc
mov
jbe
nop
jb
jns
test
jl
push
jns
sbb
in
xor
sbb
mov
sahf
sbb
xchg
mov
inc
imul
or
mov
cli
mov
mov
shl
imul
je
(bad)
jmp
sbb
repz
mov
jns
and
jbe
ins
jb
lock
sbb
and
mov
xchg
jae
int3
xor
imul
mov
js
cli
mov
retf
mov
jno
call
addr16
imul
xchg
lock
(bad)
mov
push
jbe
sbb
lea
pop
xchg
jae
mov
imul
xchg
inc
push
jbe
sbb
test
and
mov
jl
push
jns
cli
mov
sbb
mov
mov
jl
sub
jb
jbe
es
arpl
(bad)
jae
dec
inc
mov
jmp
mov
cmp
sti
jo
arpl
jns
sbb
shr
lock
xchg
or
jns
mov
xchg
jnp
mov
mov
sub
jns
cli
mov
cli
mov
loope
jns
ror
sub
jns
mov
imul
les
test
aaa
data16
fwait
xor
and
hlt
shl
jbe
mov
jl
sub
(bad)
xor
and
hlt
ror
push
push
xor
jbe
xchg
sbb
mov
jns
mov
and
ins
jbe
sbb
mov
ret
fs
jae
xchg
call
sbb
mov
lock
ds
jae
into
mov
sub
and
and
int3
adc
mov
mov
push
test
imul
arpl
xchg
xchg
mov
je
mov
cld
push
lahf
cmp
(bad)
mov
push
jae
jns
mov
sbb
mov
xchg
sbb
jae
mov
lea
xchg
jg
sbb
xor
sbb
mov
adc
jae
cld
sub
repz
ret
bound
and
xchg
outs
pop
xchg
jae
mov
lea
xchg
jg
jbe
jae
lock
inc
mov
push
inc
mov
jg
popf
shl
pushf
sub
daa
iret
mov
into
jne
jae
xchg
push
push
and
loope
leave
mov
mov
lock
jb
lock
inc
mov
push
and
jbe
xchg
outs
jbe
sub
outs
jns
test
xchg
mov
gs
js
push
(bad)
lock
sbb
gs
sub
xchg
mov
cld
push
call
jae
cli
push
jnp
or
mov
imul
sbb
cld
xchg
xchg
mov
xchg
jae
mov
ins
cli
mov
xchg
sbb
xchg
sbb
xchg
sbb
xchg
xor
xchg
loop
jbe
sbb
push
jbe
sbb
jbe
imul
(bad)
jae
int3
push
and
int3
xchg
xchg
mov
mov
sub
jns
repnz
lods
les
rcl
inc
pusha
lods
mov
imul
push
call
jae
das
ret
int3
inc
adc
sub
mov
dec
jbe
pop
(bad)
jmp
inc
mov
push
inc
xor
jnp
mov
(bad)
fwait
into
fs
jae
sub
(bad)
and
cli
jecxz
imul
bound
jbe
jl
add
sbb
mov
mov
xchg
fwait
pop
gs
jae
cld
xor
mov
sbb
jae
cld
xor
loop
xchg
jae
jge
jae
hlt
adc
mov
jge
jbe
das
call
adc
ror
mov
mov
adc
jb
xchg
jae
cld
push
(bad)
repz
mov
jns
cli
mov
cli
mov
and
mov
and
push
xchg
cmc
mov
adc
je
xchg
sbb
nop
(bad)
jae
cld
push
fwait
push
xchg
jae
xchg
mov
jbe
sbb
ret
mov
hlt
adc
sahf
mov
xchg
or
imul
(bad)
aaa
sbb
sbb
into
xchg
es
jbe
jbe
pop
mov
lock
pop
mov
push
mov
shr
cmp
adc
jbe
xchg
lock
loope
mov
mov
imul
stos
dec
jbe
arpl
xchg
lea
mov
das
hlt
adc
mov
sub
mov
xchg
sbb
xchg
sbb
xchg
(bad)
repz
mov
(bad)
jae
xchg
jl
icebp
xchg
jae
xchg
fisttp
arpl
(bad)
mov
imul
adc
mov
(bad)
ins
jbe
pop
mov
mov
imul
adc
jae
cld
push
sbb
nop
(bad)
jae
push
mov
lock
jp
or
sbb
and
lock
pop
mov
mov
test
fwait
jb
jns
jae
jns
fwait
dec
bound
jbe
adc
mov
pop
push
sub
js
add
jmp
jl
push
xchg
mov
test
jl
mov
jae
hlt
adc
lea
add
jle
push
jl
int
jae
adc
mov
adc
lea
lea
hlt
adc
mov
add
mov
imul
lock
jb
lock
mov
in
imul
cmp
adc
xor
ret
fs
jae
mov
mov
jae
xchg
out
mov
(bad)
cli
mov
and
mov
xchg
mov
jg
std
cld
or
inc
sub
mov
in
imul
lock
pop
mov
push
and
jbe
ins
jb
lock
mov
in
mov
hlt
adc
mov
mov
lock
pop
mov
push
sbb
and
mov
xchg
jae
and
mov
repnz
mov
pop
mov
jns
cli
xchg
cli
js
and
jno
iret
js
cmp
dec
ins
cli
mov
jae
xor
fisubr
jns
add
jae
repnz
adc
fwait
push
xchg
jae
mov
xor
jl
ins
jns
mov
jne
daa
jo
(bad)
fwait
push
outs
xchg
jae
adc
jae
cmp
and
ret
(bad)
jae
jns
jae
jb
jae
lock
sbb
jns
retf
lds
jae
sahf
sbb
(bad)
xor
xor
jl
popa
jns
clc
xor
mov
cli
xor
iret
mov
daa
sub
and
xchg
cmp
jae
cmp
lock
pop
cmc
adc
mov
stc
mov
jno
mov
mov
sbb
jae
jmp
jbe
xchg
mov
xchg
jae
jns
jae
or
jae
or
fwait
xor
les
(bad)
cmp
cli
mov
cli
mov
jp
jbe
(bad)
jb
xchg
mov
leave
or
jbe
and
xor
jl
add
jg
mov
mov
imul
sahf
mov
xchg
cwde
retf
stc
or
mov
push
sub
and
data16
cli
xchg
sub
and
leave
adc
adc
arpl
dec
jns
cli
test
arpl
sahf
scas
mov
hlt
shl
ror
xchg
mov
popf
mov
ins
(bad)
jae
xchg
imul
jb
xchg
xor
jns
sub
and
jb
sar
cli
js
and
mov
mov
adc
jae
cmp
rcl
scas
call
popf
les
into
fidiv
mov
xor
jo
sahf
lea
adc
xor
xchg
jae
mov
xchg
repnz
jecxz
jbe
pop
mov
jns
cli
xchg
sar
jbe
jl
arpl
and
sub
pusha
sar
cli
xchg
cli
mov
(bad)
cmc
or
and
jae
clc
jp
adc
jnp
jae
lahf
sbb
mov
mov
(bad)
jae
test
out
cmp
jbe
bound
push
jns
fwait
outs
xchg
jae
xchg
ret
jns
call
retf
jae
cld
js
mov
xchg
fwait
into
pusha
xchg
jae
mov
arpl
mov
xchg
fwait
push
jg
jae
stc
pop
xor
adc
sahf
retf
jbe
fild
jbe
arpl
mov
test
cmp
ja
loope
(bad)
mov
adc
mov
adc
adc
fwait
xor
cld
jecxz
cmp
mov
cld
ret
jmp
(bad)
imul
loopne
push
leave
or
jbe
(bad)
fs
cld
call
xchg
retf
(bad)
jae
fistp
hlt
adc
sahf
test
xchg
push
sbb
adc
sahf
and
push
imul
mov
std
xchg
ja
jns
test
mov
jge
jne
xchg
repz
test
mov
test
les
mov
xchg
jae
adc
jae
cld
push
fwait
xor
cwde
cli
mov
sbb
mov
xchg
cdq
inc
jbe
fwait
(bad)
repz
mov
jns
test
xchg
bnd
vpshlb
jnp
sbb
jbe
pop
mov
stc
test
jbe
ins
cli
mov
push
jno
adc
jae
les
mov
imul
fwait
neg
xchg
jae
xchg
jmp
sar
xchg
test
mov
sbb
in
popf
imul
adc
jae
cld
seta
jns
mov
jns
cwde
add
sub
jns
iret
jb
jns
into
mov
adc
xrelease
mov
popf
mov
cld
ins
mov
xchg
(bad)
jae
cld
push
fwait
adc
jae
mov
ins
mov
pop
mov
ret
push
in
sbb
cli
mov
jle
mov
mov
pop
cli
cmps
and
mov
pop
xchg
jae
clc
push
dec
dec
jns
lock
mov
xor
loope
push
jns
jae
hlt
adc
sahf
scas
xchg
sar
(bad)
cld
or
mov
push
sbb
xchg
(bad)
jae
cld
push
fwait
cmps
outs
xchg
jae
clc
jl
jbe
adc
sahf
call
popf
cmp
jae
jns
(bad)
repz
sub
jns
cli
xchg
cli
mov
adc
push
or
hlt
adc
sahf
repnz
icebp
fwait
xor
sbb
mov
or
pop
mov
hlt
adc
sahf
push
xor
jns
xchg
(bad)
cld
or
mov
push
mov
sub
test
enter
sbb
mov
scas
fs
pop
mov
adc
mov
jl
bound
repnz
lea
adc
jae
cld
push
fwait
push
sbb
cmc
mov
adc
ja
xchg
(bad)
repz
mov
push
jbe
xchg
ss
int
repz
(bad)
fnstenv
jns
jbe
mov
mov
mov
xchg
mov
push
xor
and
xchg
retf
(bad)
jae
ds
jbe
adc
sahf
into
xor
push
arpl
(bad)
pop
push
jbe
cld
add
xchg
(bad)
repz
mov
jl
addr16
(bad)
repz
mov
jl
bound
cli
repz
mov
loope
mov
xchg
pop
or
clc
repz
mov
xchg
jbe
fwait
mov
loope
mov
xchg
add
imul
les
dec
xchg
(bad)
jae
cld
push
fwait
dec
outs
xchg
jae
mov
fs
mov
adc
sahf
mov
adc
add
mov
jns
clc
retf
in
pusha
mov
cs
xor
lock
cwde
jns
jae
hlt
adc
mov
pusha
mov
jns
(bad)
repz
sub
jns
dec
test
mov
pop
into
add
jb
xchg
cli
arpl
sbb
mov
xchg
mov
lea
adc
jae
jns
sub
xchg
and
lock
xchg
push
(bad)
repz
mov
(bad)
mov
mov
xchg
cs
mov
push
jp
jbe
outs
mov
ins
mov
jns
mov
push
xchg
jae
daa
iret
mov
call
sbb
sub
lock
push
xor
inc
push
loop
(bad)
jae
jl
mov
jns
pushf
fcom
jae
cmp
and
(bad)
jae
cmps
cmp
jbe
xchg
sbb
inc
popa
jbe
les
sub
sbb
jb
jns
and
pop
enter
stos
inc
jbe
arpl
xchg
mov
jge
jae
hlt
adc
mov
aaa
jns
(bad)
data16
cli
mov
cli
mov
xchg
sbb
jns
jae
jp
jae
jp
jae
cld
pop
lea
push
sbb
mov
(bad)
jae
jns
fwait
xor
jae
cmp
and
cmp
and
rcr
jns
xchg
(bad)
cld
push
lea
cmp
and
cmp
and
das
jl
data16
(bad)
xor
xchg
jae
mov
jae
mov
repz
push
sbb
shl
es
sbb
mov
push
pop
inc
fst
add
retf
sub
xchg
jae
sahf
sbb
mov
mov
and
jbe
mov
imul
cmp
mov
lock
sbb
pop
jl
jbe
mov
jbe
adc
push
popf
imul
push
arpl
sbb
jb
jns
and
pop
adc
mov
sahf
sbb
mov
mov
xchg
sbb
xchg
(bad)
arpl
sbb
ja
jns
gs
cmp
push
fistp
hlt
adc
sahf
fiadd
out
cmp
xor
imul
(bad)
jae
xchg
pusha
sbb
mov
jnp
push
jns
jl
cmp
and
jns
jno
das
sbb
mov
xchg
or
cli
test
jb
push
ret
add
(bad)
cmp
jl
cmp
and
jns
jno
das
sbb
mov
inc
or
lock
inc
mov
push
and
jbe
xchg
out
cmp
xor
imul
(bad)
jae
jge
mov
cld
jns
cmp
push
jnp
jae
xchg
pushf
xchg
mov
push
push
jb
icebp
(bad)
jbe
ins
test
xchg
mov
xchg
mov
test
fistp
hlt
aad
push
stc
pop
xor
adc
sahf
sub
mov
push
imul
popf
mov
pop
ret
xchg
(bad)
jae
je
xor
xchg
jae
stc
jl
xchg
xchg
mov
sbb
neg
mov
(bad)
jae
test
out
cmp
jbe
arpl
adc
sub
and
and
jno
xchg
push
cdq
jae
das
ret
int
or
sub
mov
pop
jbe
mov
mov
mov
xchg
mov
push
xor
jp
imul
mov
lock
xchg
push
sbb
xchg
pop
aaa
jns
push
fs
lock
popf
mov
std
sbb
mov
push
xchg
jae
jns
xor
adc
sahf
(bad)
cwde
jae
adc
mov
jns
mov
jns
sbb
mov
cld
js
mov
xchg
jae
mov
test
mov
xchg
jbe
jbe
sbb
mov
cli
jl
jns
not
imul
imul
sub
jns
sub
std
cld
test
mov
sbb
(bad)
lock
test
outs
jbe
or
jae
jmp
and
mov
and
mov
push
popf
xor
pop
into
push
xchg
imul
imul
jl
mov
xchg
jae
mov
(bad)
cld
mov
mov
xor
les
mov
scas
bound
sbb
mov
pop
jge
jns
jg
lds
and
or
mov
jp
dec
jns
(bad)
repz
jp
mov
sbb
mov
or
mov
cld
jb
cmp
sti
cld
push
(bad)
repz
mov
jl
fwait
xchg
mov
sbb
mov
mov
sbb
mov
push
jge
jns
into
sahf
(bad)
imul
push
xor
bound
jns
inc
mov
jg
cmc
pop
sub
xor
xchg
cli
xchg
cli
mov
push
sub
mov
call
jae
mov
sbb
cld
call
xchg
retf
(bad)
jae
fistp
hlt
adc
sahf
push
test
hlt
adc
push
mov
xor
adc
outs
lock
jb
lock
sub
mov
jno
and
in
jle
sbb
jae
cmp
and
(bad)
jae
xchg
and
jbe
xchg
sbb
inc
jle
jns
fwait
xchg
jb
jae
mov
arpl
sbb
xor
sar
push
ins
cli
mov
xchg
out
cmp
xor
imul
(bad)
jae
pop
xor
adc
fs
mov
inc
mov
xor
xchg
jge
jns
mov
and
jbe
aam
ins
jns
mov
jns
mov
and
jbe
jb
jbe
sbb
mov
(bad)
jae
jns
lods
fidivr
xchg
sbb
xchg
fwait
cs
jae
xchg
bnd
jns
mov
sbb
jae
xchg
fwait
mov
xchg
jae
mov
call
jae
das
ret
enter
or
(bad)
mov
xchg
jae
jl
mov
jns
mov
jbe
xchg
out
cmp
sti
cld
pusha
lea
xchg
data16
jns
stos
ja
sbb
not
xchg
es
adc
sahf
mov
ror
bnd
jae
adc
jl
xchg
sbb
xchg
cli
mov
jle
and
loope
sahf
jb
jae
lock
jb
lock
sbb
adc
sbb
sbb
add
mov
stc
sub
add
push
mov
sbb
mov
rcl
sbb
clc
repz
mov
ror
mov
(bad)
jae
jns
mov
sub
and
jb
jae
or
sbb
xchg
cmp
sbb
lea
js
jae
jns
neg
repnz
and
lahf
jae
dec
bound
inc
jo
pop
jns
ins
sbb
jae
int
dec
pop
sbb
nop
inc
xor
ror
mov
dec
lock
push
xor
inc
push
loop
(bad)
jae
jl
mov
jns
mov
mov
xor
inc
xchg
jae
sbb
and
xchg
pop
aaa
jns
cmps
jnp
xchg
lock
sbb
not
xchg
std
cld
hlt
lea
jbe
mov
ja
loope
sti
add
pop
mov
ja
loope
(bad)
mov
ret
sbb
repnz
sahf
jmp
sti
jbe
mov
ja
loope
sti
add
adc
jns
jl
mov
xor
inc
xchg
jae
sbb
and
shl
cs
xchg
lock
sbb
imul
inc
xchg
jae
sbb
jno
jl
jnp
xchg
cli
mov
sbb
jae
jbe
mov
ja
loope
sti
add
sbb
jns
ss
xchg
cli
mov
sbb
jae
jbe
mov
ja
loope
sti
add
pop
mov
ja
loope
(bad)
mov
ret
sbb
hlt
aad
sahf
xchg
cwde
jae
cli
push
jg
mov
enter
pop
imul
xchg
(bad)
mov
imul
inc
xchg
jae
sbb
jno
sbb
imul
inc
xchg
jae
sbb
and
xchg
lds
jl
jp
xchg
lock
sbb
imul
inc
xchg
jae
sbb
jno
sbb
imul
inc
xchg
jae
sbb
and
inc
shl
jl
jp
xchg
lock
adc
jae
jbe
mov
ja
loope
sti
add
(bad)
jg
jns
mov
fidiv
mov
jns
stos
pop
mov
pop
mov
ja
loope
sti
add
mov
jns
mov
fisub
xor
sbb
imul
inc
xchg
jae
sbb
jno
adc
jae
xchg
outs
js
jns
mov
fisub
mov
jns
mov
pushf
jae
clc
addr16
jns
mov
cmp
in
push
xor
inc
push
loop
(bad)
jae
jl
mov
jns
sub
call
jae
das
ret
int
ss
dec
dec
jl
jno
xchg
fwait
call
and
jl
jno
xchg
sbb
mov
cld
jb
xchg
fwait
bnd
jae
cld
inc
mov
dec
jl
jno
xchg
cli
xchg
push
fwait
bound
jae
int3
inc
mov
jns
sbb
jmp
lahf
sbb
mov
mov
xchg
sbb
adc
inc
xchg
push
fwait
push
jle
jae
xchg
adc
jns
ja
jns
(bad)
rep
imul
push
jae
adc
jae
cld
inc
mov
das
imul
adc
ja
xchg
lock
push
xor
sub
jbe
xchg
test
push
xor
adc
xchg
loop
(bad)
jae
je
mov
jns
add
imul
xchg
leave
movs
xor
arpl
mov
xchg
mov
mov
scas
pop
mov
lock
sti
jmp
push
test
xchg
mov
adc
imul
jl
jl
xchg
jl
les
mov
mov
jle
mov
mov
pop
cli
movs
cli
push
adc
in
pop
mov
push
test
mov
loop
mov
mov
fwait
div
jae
mov
call
dec
push
test
mov
jb
lock
(bad)
repz
push
xchg
les
xchg
sbb
cld
mov
fwait
push
jae
jae
jns
neg
imul
imul
repnz
jae
hlt
adc
xchg
sahf
or
mov
lock
xchg
mov
adc
imul
xchg
cmp
jns
neg
imul
sbb
mul
imul
nop
jae
adc
jns
call
(bad)
jae
xchg
popf
jae
clc
jp
xor
(bad)
jae
jae
jbe
ror
jbe
rcr
ss
ss
lock
xchg
push
sbb
xchg
jae
jns
scas
jno
xchg
cli
xor
pop
push
mov
cmp
lock
lock
mov
mov
pop
push
xchg
jns
push
xchg
jns
mov
inc
xchg
jae
cmp
and
clc
xchg
out
cmp
jae
push
xor
xchg
mov
jmp
sbb
xchg
sbb
xchg
jae
stc
cld
jae
jns
sbb
pop
jae
cdq
jae
jbe
ja
xor
(bad)
jae
bound
xor
cld
jmp
cmp
cmp
jae
mov
(bad)
cld
test
mov
aam
mov
xchg
jae
push
jae
adc
xchg
xor
cld
jae
cmp
dec
cld
push
xchg
cmp
sahf
out
jae
adc
xchg
xor
cld
add
xchg
fwait
out
xchg
jae
and
jbe
add
aaa
jns
bnd
xchg
cli
xchg
cli
mov
fst
cmp
push
push
inc
shl
jl
jne
xchg
mov
cdq
push
xor
xchg
jae
lock
lock
sbb
retf
jbe
fs
aaa
jns
jmp
cmp
sahf
adc
inc
xor
adc
jae
cs
jae
lock
adc
xor
cld
jae
jns
(bad)
repz
cld
test
lahf
(bad)
jae
jnp
jae
xchg
fsubr
push
jo
push
cmp
pushf
(bad)
repz
jl
and
fidiv
hlt
adc
push
jmp
fs
xor
cld
jecxz
cmp
push
jmp
bound
nop
cmp
sahf
fs
mov
push
imul
jl
je
xchg
jl
jl
mov
jns
fwait
mov
into
xchg
fbstp
fwait
adc
add
jns
fwait
jmp
loop
xor
je
xor
cld
aad
cmp
mov
jl
jno
xchg
cli
xchg
cli
mov
adc
sahf
ss
jae
adc
jbe
scas
test
cmp
push
jge
jae
xchg
fwait
loop
xchg
jae
(bad)
cwde
jg
jns
add
cmp
push
push
out
jbe
mov
fwait
add
dec
(bad)
jae
jns
jae
jns
ins
test
push
xor
sahf
les
pop
xchg
jae
dec
and
xor
jl
mov
pop
retf
sub
mov
xor
jns
jae
pop
xor
xor
jns
jae
pop
xor
jns
jecxz
jns
jae
pop
cmp
xor
jns
jae
pop
cmp
jns
jecxz
jns
jae
pop
and
xor
jns
jae
pop
and
jns
jecxz
jns
jae
pop
sub
xor
jns
jae
pop
sub
jns
jecxz
jns
jae
pop
push
jo
jns
jecxz
jns
jae
pop
push
jo
jns
jecxz
jns
jae
pop
pop
jo
jns
jecxz
jns
jae
pop
pop
jo
jns
jecxz
jns
jae
pop
inc
jo
jns
jecxz
jns
jae
pop
inc
jo
jns
jecxz
jns
jae
pop
dec
jo
jns
jecxz
jns
jae
pop
dec
jo
jns
jecxz
jns
jae
pop
jl
xor
jns
jae
pop
js
xor
jns
jae
pop
fs
jns
jecxz
jns
jae
pop
pusha
jo
jns
jecxz
jns
jae
pop
ins
jo
jns
jecxz
jns
jae
pop
nop
ja
jns
jecxz
jns
jae
pop
test
jns
jecxz
jns
jae
pop
xor
add
jbe
xchg
jae
pop
mov
jns
jecxz
jns
jae
lock
and
sbb
push
push
adc
fwait
call
cli
xor
sbb
xor
inc
mov
mov
xchg
jp
or
loope
popf
js
jl
jle
mov
jl
mov
sbb
stos
jb
jns
jb
adc
mov
pop
mov
clc
js
data16
pop
jbe
xchg
jae
jge
dec
jbe
xchg
jae
xchg
mov
mov
sub
sub
hlt
mov
fisttp
bnd
in
scas
pop
aaa
push
jge
jnp
jns
jae
pop
mov
xor
jns
jae
pop
mov
jecxz
jns
jae
pop
mov
jecxz
jns
jae
pop
movs
ja
jns
jecxz
jns
jae
pop
mov
jecxz
jns
jae
pop
lods
ja
jns
jecxz
jns
jae
pop
test
xor
jns
jae
pop
aam
xor
jns
jae
pop
shl
jns
jecxz
jns
jae
pop
fdiv
jns
jecxz
jns
jae
pop
fdiv
jns
jecxz
jns
jae
pop
les
jns
jecxz
jns
jae
pop
shl
add
jbe
xchg
jae
pop
int3
ja
jns
jecxz
jns
jae
pop
enter
add
jbe
xchg
jae
pop
hlt
ja
jns
jecxz
jns
jae
pop
lock
jns
jecxz
jns
jae
pop
cld
ja
jns
jecxz
jns
jae
pop
clc
ja
jns
jecxz
jns
jae
pop
in
xor
jns
jae
pop
loopne
xor
jns
jae
pop
in
ja
jns
jecxz
jns
jae
pop
call
jecxz
jns
jae
pop
adc
xor
jns
jae
pop
adc
jns
jecxz
jns
jae
pop
sbb
xor
jns
jae
pop
sbb
jns
jecxz
jns
jae
pop
add
xor
jns
jae
pop
add
jns
jecxz
jns
jae
pop
or
xor
jns
jae
pop
or
jns
jecxz
jns
jae
pop
xor
xor
jns
jae
pop
xor
jns
jecxz
jns
jae
pop
cmp
xor
jns
jae
pop
cmp
jns
jecxz
jns
jae
pop
and
xor
jns
jae
pop
and
jns
jecxz
jns
jae
pop
sub
xor
jns
jae
pop
sub
jns
jecxz
jns
jae
pop
push
ja
jns
jecxz
jns
jae
pop
push
ja
jns
jecxz
jns
jae
pop
pop
ja
jns
jecxz
jns
jae
pop
pop
ja
jns
jecxz
jns
jae
pop
inc
ja
jns
jecxz
jns
jae
pop
inc
ja
jns
jecxz
jns
jae
pop
dec
ja
jns
jecxz
jns
jae
pop
dec
ja
jns
jecxz
jns
jae
pop
je
xor
jns
jae
pop
jo
xor
jns
jae
pop
jl
xor
jns
jae
pop
js
xor
jns
jae
pop
fs
jns
jecxz
jns
jae
pop
pusha
ja
jns
jecxz
jns
jae
pop
ins
ja
jns
jecxz
jns
jae
pop
push
jecxz
jns
jae
pop
xchg
jbe
jns
jecxz
jns
jae
pop
nop
jbe
jns
jecxz
jns
jae
pop
pushf
jbe
jns
jecxz
jns
jae
pop
cwde
jbe
jns
jecxz
jns
jae
pop
test
jns
jecxz
jns
jae
pop
xor
add
jbe
xchg
jae
pop
mov
jns
jecxz
jns
jae
pop
mov
jns
jecxz
jns
jae
pop
mov
jecxz
jns
jae
pop
mov
jecxz
jns
jae
pop
movs
jbe
jns
jecxz
jns
jae
pop
mov
jecxz
jns
jae
pop
lods
jbe
jns
jecxz
jns
jae
pop
test
xor
jns
jae
pop
aam
xor
jns
jae
pop
shl
jns
jecxz
jns
jae
pop
fdiv
jns
jecxz
jns
jae
pop
fdiv
jns
jecxz
jns
jae
pop
les
jns
jecxz
jns
jae
pop
shl
add
jbe
xchg
jae
pop
int3
jbe
jns
jecxz
jns
jae
pop
enter
add
jbe
xchg
jae
pop
hlt
jbe
jns
jecxz
jns
jae
pop
lock
jns
jecxz
jns
jae
pop
cld
jbe
jns
jecxz
jns
jae
pop
clc
jbe
jns
jecxz
jns
jae
pop
in
xor
jns
jae
pop
loopne
xor
jns
jae
pop
in
jbe
jns
jecxz
jns
jae
pop
call
jecxz
jns
jae
pop
adc
xor
jns
jae
pop
adc
jns
jecxz
jns
jae
pop
sbb
xor
jns
jae
pop
add
jns
jecxz
jns
jae
pop
or
xor
jns
jae
pop
xor
jns
jecxz
jns
jae
pop
cmp
xor
jns
jae
pop
cmp
jns
jecxz
jns
jae
pop
and
xor
jns
jae
pop
and
jns
jecxz
jns
jae
pop
sub
xor
jns
jae
pop
sub
jns
jecxz
jns
jae
pop
push
jbe
jns
jecxz
jns
jae
pop
pop
jbe
jns
jecxz
jns
jae
pop
inc
jbe
jns
jecxz
jns
jae
pop
inc
jbe
jns
jecxz
jns
jae
pop
dec
jbe
jns
jecxz
jns
jae
pop
dec
jbe
jns
jecxz
jns
jae
pop
je
xor
jns
jae
pop
jo
xor
jns
jae
pop
jl
xor
jns
jae
pop
js
xor
jns
jae
pop
fs
jns
jecxz
jns
jae
pop
pusha
jbe
jns
jecxz
jns
jae
pop
ins
jbe
jns
jecxz
jns
jae
pop
push
jecxz
jns
jae
pop
xchg
jne
jns
jecxz
jns
jae
pop
nop
jne
jns
jecxz
jns
jae
pop
pushf
jne
jns
jecxz
jns
jae
pop
cwde
jne
jns
jecxz
jns
jae
pop
test
jns
jecxz
jns
.byte
