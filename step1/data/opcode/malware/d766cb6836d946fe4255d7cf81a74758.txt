mov
mov
push
push
mov
adc
sbb
and
lds
(bad)
mov
mov
sub
loope
add
mov
mov
xor
jge
add
xor
inc
push
call
dec
in
sbb
out
in
add
pop
xor
dec
es
dec
lock
frstor
inc
mov
push
cmps
mov
pop
ret
int3
inc
inc
push
or
adc
add
in
fdivr
or
in
movs
imul
xor
stc
loopne
jo
mov
sbb
stc
dec
call
mov
pop
mov
add
push
push
or
aas
lods
(bad)
mov
push
sbb
push
lods
mov
mov
jmp
or
pusha
and
add
mov
jg
push
lods
inc
lock
or
xor
mov
inc
test
xor
ret
push
dec
or
fild
shr
push
xchg
sub
and
icebp
(bad)
mov
retf
and
neg
sbb
push
pop
pop
ret
jg
sbb
sub
jno
clc
and
not
and
rcr
jmp
add
add
cld
or
mov
scas
pusha
imul
(bad)
jo
jle
or
jmp
fcomp
out
shl
ret
cld
or
pusha
call
add
jmp
push
clc
mov
cdq
fbld
hlt
add
jge
and
adc
sti
(bad)
pop
or
dec
clc
je
and
loopne
add
adc
(bad)
(bad)
fcmovnbe
loop
clc
jmp
jmp
mov
sbb
push
cmp
pop
lahf
push
cdq
mov
adc
push
sub
imul
sbb
lahf
adc
dec
call
(bad)
fisttp
ins
nop
push
push
in
leave
in
jo
jl
or
cmp
push
fwait
call
lahf
in
mov
in
fcomp
push
in
ret
pop
enter
or
in
or
push
fbstp
fbld
aam
xor
add
mov
cdq
mov
fcom
push
in
cmp
sub
fbld
push
int3
pop
dec
int3
adc
enter
(bad)
(bad)
add
(bad)
ffreep
in
ficom
xchg
neg
dec
js
sub
sbb
in
ret
push
jb
pop
or
scas
in
fcom
mov
and
pop
cmps
popf
test
sbb
lahf
push
nop
lock
loopne
jnp
adc
fisub
jg
cmp
(bad)
jge
(bad)
clc
mov
adc
and
mov
inc
push
xor
outs
push
jge
mov
and
loope
mov
cmp
push
sub
in
mov
ds
or
nop
dec
pop
or
push
fcmovb
add
add
fbstp
hlt
xor
pusha
mov
(bad)
scas
sub
and
scas
cwde
push
jg
ins
outs
test
adc
out
add
dec
or
pop
or
jmp
jne
dec
mov
jo
mov
or
xor
arpl
ds
push
hlt
popa
or
adc
ins
or
and
sahf
push
daa
pop
je
pop
cmps
jmp
jl
sbb
or
lahf
mov
add
add
fcom
dec
push
mov
sbb
sar
adc
mov
cwde
or
sub
es
inc
add
xchg
rcr
xor
push
push
adc
push
test
xor
pop
push
loop
mov
mov
mov
mov
dec
sbb
sbb
cmp
jnp
adc
adc
or
add
mov
fdivr
pop
ret
aas
cmp
xchg
or
or
jecxz
jg
add
push
xadd
dec
test
jg
jo
push
or
adc
test
out
mov
xor
push
push
push
or
or
inc
movzx
test
je
mov
cmp
(bad)
popf
mov
dec
lods
push
mov
jmp
pop
arpl
mov
cs
jo
pop
jmp
jb
stos
ret
lock
pop
pop
inc
shl
fdivr
aas
mov
pop
mov
lock
pop
or
add
cld
ins
lock
lock
sub
jmp
inc
cmp
pop
sub
fdivr
mov
or
mov
mov
adc
lahf
adc
mov
push
pop
ja
add
jl
mov
iret
nop
rcl
jbe
or
xor
test
or
sbb
push
sbb
and
jg
or
ins
push
and
je
in
(bad)
lock
jbe
xchg
add
fist
or
adc
retf
pop
pop
inc
icebp
or
or
cdq
shr
dec
aam
xchg
and
adc
adc
push
or
sub
subps
repnz
lea
test
out
adc
pusha
or
pop
xchg
add
jg
sbb
les
mov
(bad)
mov
call
xor
call
in
or
push
add
adc
or
pop
adc
jmp
bound
add
test
ret
sub
std
add
cmp
jae
sbb
or
mov
lods
mov
xor
jae
fisub
jl
loop
cmp
and
vmread
seto
xor
jmp
push
dec
pop
push
fs
xor
push
ret
in
or
stos
add
sbb
gs
dec
mov
adc
jle
loope
rol
or
jg
lea
shl
int
pop
cld
cmp
jb
dec
mov
mov
jbe
sbb
call
xor
push
clc
mov
add
push
ss
mov
sbb
jo
fdivrp
mov
pop
sub
and
cli
inc
test
dec
or
xchg
push
or
push
or
mov
push
das
mov
mov
dec
das
pop
arpl
dec
xor
cs
add
test
inc
sbb
adc
out
mov
adc
aaa
jmp
mov
jnp
loopne
lea
cld
mov
ror
je
add
ss
inc
mov
in
retf
jecxz
popa
jno
xor
xchg
dec
aas
adc
add
push
cli
or
repnz
aas
and
add
adc
jp
aas
or
pop
add
or
mov
pop
jl
(bad)
or
inc
and
push
sub
fistp
lods
adc
add
push
int
mov
inc
mov
std
mov
adc
loopne
mov
xor
adc
inc
in
jne
adc
je
sti
add
je
jge
adc
clc
add
add
in
clc
add
mov
call
sahf
add
lahf
add
xchg
sbb
rcr
mov
add
dec
sbb
adc
sbb
sti
clc
cmp
sbb
mov
pusha
push
inc
sbb
movs
or
int
cmp
or
pop
rol
sbb
je
ficom
(bad)
xchg
or
mov
or
aas
dec
jmp
add
lea
push
mov
add
push
cmp
mov
std
or
adc
or
pop
cmp
pop
dec
sbb
das
mov
sbb
aas
stos
and
movzx
push
adc
sub
mov
jae
loopne
lock
sub
jmp
sbb
add
sbb
adc
or
and
or
pop
shl
shr
ffreep
sbb
sbb
cmp
or
out
mov
stos
mov
rcl
lahf
mov
adc
push
cmp
and
mov
mov
cld
mov
bnd
fsubr
inc
or
cmp
arpl
sbb
sub
inc
sbb
pop
inc
xor
sub
jo
add
pop
push
push
sbb
or
or
sub
mov
sbb
call
dec
add
xor
mov
adc
pop
adc
ret
or
push
jmp
or
sbb
(bad)
jae
call
mov
jb
sbb
cmps
lea
into
pop
or
pop
mov
lahf
les
and
setne
mov
lods
lahf
mov
outs
(bad)
mov
xor
test
lds
in
mov
push
cwde
lahf
out
or
test
aas
jg
or
pop
push
xchg
(bad)
xor
fld
inc
int3
clc
pusha
xor
rol
fldenv
js
call
sub
out
push
sbb
dec
mov
jl
in
add
mov
or
add
add
cs
add
vcmptrue_usss
or
pop
or
enter
call
std
std
call
pop
test
call
fdivr
xchg
add
jmp
pop
cmp
ja
daa
sub
adc
inc
sbb
mov
cmp
and
add
mov
mov
add
dec
mov
ins
mov
pop
push
in
mov
je
cmc
add
mov
out
sub
and
mov
pop
in
sbb
xor
ins
adc
add
sub
xor
lds
xchg
dec
call
and
mov
xor
add
js
mov
aas
lea
fild
jge
test
mov
lods
mov
fbld
lods
sbb
add
mov
fistp
or
and
push
pop
into
inc
mov
shr
rol
xchg
dec
inc
and
push
and
subps
inc
push
inc
add
out
push
sbb
jg
ins
sbb
sub
jno
add
cmp
test
jmp
jb
jne
popa
dec
pop
aas
jl
adc
jnp
add
dec
jb
mov
sbb
inc
outs
push
xor
jmp
jmp
mov
lahf
add
ret
clc
adc
pop
lea
sbb
adc
inc
out
js
out
push
jne
jno
sbb
mov
pop
add
fwait
xchg
jmp
pushf
imul
pushf
adc
cmp
pusha
and
mov
or
lea
xor
inc
je
mov
xchg
push
push
adc
xor
mov
pop
push
cmp
or
rol
pushf
push
sbb
or
pop
push
pop
ds
and
pop
ret
mov
sbb
adc
add
adc
scas
shl
or
pop
ja
test
mov
or
and
xor
movs
cli
jp
or
iret
adc
loopne
sbb
add
pop
mov
xor
jmp
adc
jle
call
fild
or
add
cmp
fsub
lds
push
or
and
sar
mov
inc
mov
add
(bad)
or
pop
dec
add
loopne
aad
jle
dec
or
mov
mov
hlt
and
pusha
jge
mov
cmp
cli
jle
pusha
add
push
mov
or
add
adc
cdq
popf
and
dec
mov
js
add
lahf
rcl
push
jp
sbb
dec
in
jg
(bad)
out
sbb
dec
loopne
icebp
adc
data16
(bad)
sbb
xor
sub
jbe
mov
loop
add
push
push
jl
and
fiadd
cmp
iret
pop
dec
xor
dec
hlt
sbb
cdq
shl
add
add
mov
and
in
call
(bad)
clc
clc
xor
popf
jl
push
and
or
loop
push
or
pop
movs
inc
jg
cdq
jmp
daa
lea
and
add
ja
rcr
dec
repz
mov
test
pop
ds
pop
loop
pop
cmps
and
lea
cmp
jge
pop
or
add
pushf
push
pop
push
stos
mov
mov
cmp
sbb
lods
inc
inc
sub
dec
je
mov
pop
add
jnp
xor
cmp
push
lea
fiadd
mov
push
sub
pop
(bad)
es
lahf
sub
popa
aas
ds
lea
inc
mov
in
sti
xchg
lea
rcl
dec
adc
popf
add
xchg
lods
mov
mov
cmps
adc
ds
lods
sti
pop
mov
inc
daa
sub
xchg
mov
mov
or
sub
mov
pusha
sub
dec
sub
push
sbb
sti
or
mov
test
inc
dec
or
sbb
xor
rol
mov
sub
or
mov
pop
imul
cmp
xor
adc
mov
(bad)
mov
cmp
mov
nop
sub
mov
sub
rol
imul
add
(bad)
jbe
mov
dec
jmp
mov
sub
sbb
sti
add
adc
in
fild
outs
push
stos
(bad)
add
and
fdivrp
fstp
(bad)
push
fldln2
mov
and
mov
mov
out
or
(bad)
add
inc
loopne
ins
loopne
jge
or
aam
add
mov
fdivrp
pop
shr
sbb
xor
pop
jg
mov
xchg
pop
add
aas
out
inc
push
sub
pop
or
jl
cld
fld
jg
adc
daa
popa
mov
je
inc
jl
inc
cmps
neg
sub
adc
ds
add
adc
jl
mov
rcl
lea
aam
dec
aam
or
pop
ret
and
inc
or
sub
hlt
outs
adc
icebp
adc
add
mov
push
imul
or
push
push
lods
ja
sub
push
adc
adc
sbb
or
adc
dec
adc
je
push
xor
test
pushf
adc
test
sbb
dec
or
dec
pop
clc
push
aam
push
inc
clc
pop
(bad)
call
and
sar
and
aas
clc
sbb
lock
add
cmp
add
lds
fsub
popa
sbb
scas
mov
push
mov
sbb
adc
push
fadd
or
or
xor
push
dec
mov
cmp
pop
pop
popa
test
pushf
call
repnz
mov
ss
push
sbb
hlt
addr16
out
repnz
lods
loopne
shl
adc
int3
push
inc
or
lahf
mov
mov
lds
push
xor
pop
fsubr
push
in
dec
jnp
add
xchg
push
xlat
dec
loopne
xor
xor
and
mov
mov
fcomi
seto
xor
fsubr
(bad)
lock
fmul
sub
ret
mov
cmp
je
mov
push
mov
push
sub
adc
call
shl
xor
adc
sub
inc
add
push
mov
sub
add
mov
int3
cmp
nop
shl
int3
push
or
fnsave
aam
or
not
push
dec
hlt
sub
mov
push
dec
sbb
call
inc
sbb
lods
push
adc
inc
shl
and
push
clc
test
out
xor
cmp
or
nop
out
push
je
sbb
fmul
cs
jmp
jmp
ds
in
sbb
mov
popa
mov
sub
call
pop
in
cmp
xchg
lds
push
cmp
push
sbb
dec
dec
leave
add
sbb
cld
and
pop
lods
cmp
scas
les
in
shl
lods
rcl
or
pusha
sub
and
add
fdivr
mov
push
jae
test
jo
shr
push
lods
push
ins
mov
push
test
movs
cmp
or
push
push
add
sar
xor
mov
add
sub
push
mov
in
or
push
fbstp
and
mov
loop
int3
pop
fist
or
inc
enter
popa
cmp
sbb
or
les
xchg
cmp
int3
dec
rcl
add
cmp
push
and
mov
int3
inc
jl
mov
mov
xor
mov
mov
fsub
or
add
cmps
out
gs
fcom
or
adc
lds
jp
jbe
push
outs
add
not
jb
xchg
inc
loopne
push
xor
pusha
jae
push
inc
dec
cmp
mov
add
ins
sub
fisub
mov
inc
mov
jnp
xchg
arpl
push
fmul
js
enter
dec
pop
push
out
retf
push
popa
stos
pop
ret
adc
inc
icebp
sub
mov
sbb
push
sub
dec
push
add
dec
lock
cmp
popa
add
pushf
push
mov
cwde
lods
nop
js
push
pop
pop
push
push
push
mov
mov
lods
inc
mov
or
stos
add
test
aas
pop
mov
das
cmp
jg
inc
or
inc
or
clc
add
test
add
cmp
mov
mov
sbb
mov
icebp
mov
push
push
lahf
out
adc
stc
cmps
add
lock
or
sar
fistp
xor
test
mov
mov
je
mov
push
aad
push
jae
ror
rcl
in
jmp
ffreep
lods
repz
popa
cmp
add
mov
test
aad
or
lahf
loopne
leave
sub
lods
cmp
push
dec
sub
pop
aas
adc
pop
aaa
add
or
pop
fdivp
jo
lds
pop
mov
ret
pop
push
movs
jo
inc
test
add
pop
ds
push
adc
in
cmp
push
repnz
ds
dec
pop
fcomp
and
test
(bad)
cmp
and
cmp
pusha
mov
adc
(bad)
and
sete
or
fild
or
add
add
sti
jae
push
ret
imul
cld
jnp
cmp
scas
or
pop
ds
sub
push
cmp
pop
sub
cmp
pop
or
leave
aas
or
or
mov
dec
adc
ins
inc
rcr
xlat
or
adc
xor
push
lea
jb
sbb
daa
lock
adc
or
sbb
sbb
pop
aad
sbb
mov
push
cmp
and
shr
loopne
push
push
mov
adc
stc
add
loope
and
xor
or
popf
sub
add
and
loop
jno
loope
add
add
(bad)
mov
inc
pop
push
sub
xor
cmps
push
dec
jmp
cmps
inc
lods
icebp
or
enter
mov
jno
jl
add
mov
inc
adc
test
inc
or
sbb
xor
or
xadd
mov
test
adc
or
sbb
and
or
sbb
adc
rcr
aas
push
ins
fsubr
loopne
sub
and
and
fwait
cmp
xor
int3
fild
mov
test
es
data16
add
pop
and
sbb
and
cmp
movsx
push
lods
aaa
sbb
sbb
add
clc
jbe
hlt
mov
adc
sbb
(bad)
and
push
mov
call
mov
mov
mov
sbb
aas
jp
or
scas
sbb
push
pop
jecxz
push
inc
out
xor
or
add
cmc
jo
pop
out
and
aas
(bad)
adc
rcr
cmp
jbe
int
inc
(bad)
or
daa
sub
mov
lahf
fiadd
jne
adc
mov
in
sub
sbb
call
movs
push
adc
mov
cs
in
add
add
and
loopne
loopne
dec
mov
or
js
stos
and
mov
out
test
sub
fwait
or
movs
fisubr
add
movs
test
add
mov
mov
test
ins
popa
pop
adc
iret
and
cli
push
outs
ret
mov
aad
stos
xchg
mov
dec
adc
nop
retf
sahf
sub
les
jle
xor
push
mov
sub
les
add
adc
sub
add
and
iret
mov
push
js
dec
mov
mov
push
je
mov
pop
jo
shr
inc
cmp
lods
stc
pop
push
mov
sub
movs
es
mov
adc
xchg
dec
xchg
add
cld
iret
cld
or
push
test
inc
fsub
imul
dec
jmp
js
es
arpl
loope
sub
dec
or
mov
jl
call
es
inc
and
ss
or
dec
adc
xchg
pusha
and
dec
jmp
in
pop
sub
mov
adc
lock
jae
mov
xchg
inc
adc
jbe
aam
add
ins
sbb
shr
sub
sbb
jae
adc
xor
cs
sub
(bad)
int3
fld
jae
pop
add
cmps
sar
lock
or
xchg
sub
call
imul
mov
lea
push
xchg
movs
mov
xchg
adc
iret
call
and
pop
in
push
loopne
xchg
imul
cmc
loopne
add
jnp
adc
fidiv
ins
cmp
add
lds
push
cmp
add
adc
push
dec
fsubr
and
xchg
sbb
pusha
in
push
adc
or
lahf
mov
loope
jns
cdq
and
clc
add
xchg
or
xor
fst
sbb
push
xlat
popf
push
push
je
cmp
adc
mov
pusha
pop
outs
sbb
or
in
sub
iret
mov
adc
mov
adc
shr
sbb
push
fsubr
and
pop
cwde
inc
inc
pop
or
fnsave
inc
fcomp
mov
pusha
sub
mov
sbb
adc
mov
popf
add
or
cwde
mov
adc
mov
push
cmp
adc
ds
and
or
jg
cmp
test
mov
pop
movs
cmp
shl
fsubr
enter
fidivr
jno
inc
sti
push
pusha
ror
out
pop
pushf
int3
movs
fst
add
nop
adc
add
push
retf
aad
lods
push
push
push
jo
or
xchg
push
push
cwde
xor
mov
clc
mov
jle
mov
dec
sub
mov
stos
ret
dec
or
inc
pusha
add
jg
push
and
inc
mov
cmp
popa
movs
movs
dec
int3
push
ror
sbb
pusha
xchg
xchg
dec
dec
dec
xor
mov
lahf
dec
jl
sbb
pop
dec
inc
(bad)
push
popf
fidivr
jmp
push
in
or
mov
loop
pop
dec
push
add
pop
push
push
dec
dec
fsub
fild
gs
mov
add
iret
dec
sub
jns
cmp
outs
add
mov
retf
fs
cld
cld
adc
sbb
sbb
pop
jb
out
add
mov
xor
or
mov
fcomp
pop
add
xor
jecxz
adc
dec
add
push
nop/reserved
cdq
sbb
push
test
mov
daa
push
and
push
mov
push
outs
add
js
into
or
inc
lea
pop
(bad)
xchg
jp
into
push
inc
fs
mov
cmp
sub
test
test
pop
adc
scas
xor
test
or
cmp
adc
dec
adc
adc
and
and
lea
push
mov
cdq
push
or
rcr
mov
jae
mov
sub
cmp
mov
push
push
jae
sub
mov
jmp
lahf
adc
cmp
je
jns
lock
test
mov
shl
inc
xchg
jmp
push
pop
lods
xor
mov
lea
pop
inc
das
imul
in
sbb
jg
jl
sbb
cmp
(bad)
sbb
inc
loopne
inc
test
loopne
or
shr
pushf
fmul
cmp
popf
jns
mov
loopne
mov
std
arpl
loop
les
mov
ins
mov
lods
call
out
xchg
loop
add
fwait
dec
mov
nop
movsx
inc
sbb
mov
sbb
or
sbb
in
icebp
aad
fmul
ins
fdiv
fadd
rcl
in
jo
mov
(bad)
out
push
frstor
dec
xchg
pusha
and
in
shl
loop
stc
test
mov
inc
push
cmp
js
jne
mov
adc
cmp
jo
arpl
jae
or
or
sbb
sub
nop
or
call
or
add
lock
(bad)
cmp
jmp
js
mov
jnp
push
sub
adc
movs
test
mov
add
adc
out
aas
jecxz
les
inc
pushf
enter
lods
xlat
imul
or
pushf
pop
and
jmp
and
mov
(bad)
push
sub
mov
or
mov
mov
ficom
mov
jmp
xlat
push
pushf
int
mov
test
imul
shl
ror
and
sbb
call
push
movs
mov
sti
stc
pop
out
dec
add
jne
mov
dec
adc
ror
dec
lock
adc
adc
push
or
pop
push
ret
inc
add
add
pop
sbb
js
jge
dec
loop
mov
add
and
inc
adc
mov
inc
and
mov
sub
push
lds
xor
les
lock
cmp
jae
xor
sub
lods
or
xor
into
adc
add
jmp
push
add
xor
mov
(bad)
dec
int3
push
int3
(bad)
xchg
mov
cmp
push
adc
cmp
pop
div
add
loope
adc
sub
test
adc
sbb
xor
pop
scas
dec
stc
mov
sbb
enter
int3
inc
and
adc
ret
out
ss
(bad)
cmp
inc
pop
and
mov
and
sub
jno
inc
sbb
ss
or
cmp
mov
add
or
mov
mov
mov
es
add
add
adc
dec
lods
ja
test
mov
add
(bad)
lahf
jo
pop
mov
pop
or
(bad)
or
or
mov
sub
jne
mov
fistp
adc
loopne
or
mov
push
mov
rcl
inc
jb
jecxz
das
mov
push
push
xor
push
pop
dec
scas
or
mov
push
or
xchg
mov
mov
and
inc
and
jg
call
out
push
cs
scas
dec
hlt
xor
cs
sbb
ins
fisttp
loope
and
jmp
test
xor
mov
dec
popa
inc
or
sub
nop
dec
adc
jne
push
bound
adc
add
rol
stc
add
or
mov
mov
ret
jmp
imul
lock
(bad)
daa
add
leave
mov
or
test
jecxz
pop
dec
cld
neg
sbb
pop
dec
push
add
add
fidiv
add
add
fiadd
inc
add
sub
cdq
and
das
push
add
retf
clc
mov
hlt
adc
sbb
mov
add
add
add
mov
ins
add
mov
sub
cmp
test
std
push
dec
adc
pop
jl
xchg
inc
pop
push
cmp
pop
push
inc
lods
mov
je
fnsave
inc
xlat
sar
inc
or
xor
pop
sub
jl
aam
add
mov
sbb
add
imul
cmp
shr
mov
mov
pusha
lods
popf
pop
int
pop
int3
lds
jmp
push
push
loope
sar
rol
xor
enter
cmp
mov
adc
pusha
dec
jmp
mov
(bad)
push
pop
add
imul
inc
sbb
aam
mov
loopne
loopne
imul
mov
sub
pushf
jecxz
cli
add
push
lods
imul
les
popa
add
or
push
aad
sub
and
sbb
das
mov
xor
ins
adc
add
inc
sub
clc
add
inc
shr
shl
sti
or
xor
mov
clc
lock
xor
hlt
and
mov
mov
mov
aam
rcr
bound
sbb
or
xchg
rcl
lds
sbb
shr
or
lahf
test
movs
dec
mov
cvttps2pi
jae
lds
add
hlt
cdq
shrd
mov
std
mov
scas
addr16
jbe
xor
lock
lock
sub
add
inc
lahf
arpl
shr
jmp
add
test
or
pop
adc
or
fs
lahf
push
add
inc
xchg
mov
cld
iret
cld
cld
jo
nop
das
iret
or
cld
pop
or
push
test
jno
inc
test
add
add
dec
pop
and
and
mov
add
adc
mov
mov
lahf
add
sbb
rcr
or
bound
cld
mov
fadd
add
jno
and
push
fs
clc
add
sbb
ror
sub
sub
mov
fadd
loope
push
outs
aam
or
cmp
rcr
or
clc
push
out
jmp
add
xchg
cmp
(bad)
mov
cmps
jg
shl
inc
sub
mov
jle
add
push
ret
popa
jo
loopne
jle
pushf
xchg
test
adc
leave
stos
nop
call
pop
mov
or
add
pop
adc
retf
or
arpl
cmp
add
test
add
je
push
adc
and
mov
call
xor
stc
(bad)
xor
invd
add
pop
mov
movs
mov
loopne
aam
fs
cmp
pop
inc
xlat
mov
ror
adc
enter
or
add
sub
jmp
xor
lods
or
and
and
inc
or
adc
jns
jbe
or
xor
pop
sbb
xor
les
jo
out
adc
sub
mov
fcomp
and
or
bswap
in
and
adc
in
mov
je
in
imul
sti
shl
mov
hlt
push
push
pop
push
fs
ins
sbb
push
sub
mov
add
sti
cwde
inc
lock
push
hlt
mov
fild
out
loopne
in
jmp
jl
xchg
loopne
in
jmp
fld
inc
push
mov
js
xchg
clc
js
in
dec
in
add
mov
fwait
xchg
xor
and
push
mov
js
mov
nop
mov
add
lea
adc
dec
pop
repz
mov
pop
inc
adc
add
hlt
fimul
inc
sbb
test
popa
(bad)
xor
je
or
jmp
push
cs
nop
and
dec
clc
add
in
inc
lock
rcl
(bad)
push
and
or
hlt
mov
or
hlt
push
clc
dec
clc
sbb
in
cld
cld
lock
push
lock
or
clc
dec
and
xor
clc
push
cld
dec
cld
in
sbb
lods
cmp
inc
and
adc
push
and
xor
inc
sti
sbb
sub
cmp
or
je
sbb
push
lock
xchg
push
hlt
cmp
cmc
sbb
lock
jb
hlt
hlt
xchg
and
cmc
cmp
arpl
dec
or
dec
hlt
push
jb
(bad)
xor
dec
clc
cld
pop
xchg
fs
cmps
or
je
and
inc
dec
lock
jle
inc
push
adc
stc
jle
pop
dec
xor
add
hlt
cmp
clc
cmp
cdq
nop
dec
mov
dec
mov
or
dec
mov
or
nop
dec
mov
or
dec
xchg
test
pop
xchg
xchg
sub
les
mov
inc
js
xchg
nop
syscall
scas
add
or
popa
and
mov
dec
jne
add
add
or
jne
push
jge
push
pop
jo
pop
sub
pop
and
clc
add
adc
push
push
inc
sub
push
pop
sub
push
sub
pop
sub
pusha
test
add
or
add
or
sub
adc
or
lods
pusha
rcr
pop
add
mov
push
ins
inc
daa
movs
and
test
add
and
and
lods
rol
pop
sbb
ret
push
sub
jnp
lods
and
jb
push
mov
mov
mov
xchg
fst
enter
pop
pusha
sbb
stos
xchg
stc
(bad)
sub
stc
jne
stos
xor
adc
jne
cmp
add
jne
jne
ror
std
jne
cmp
add
jne
pusha
ror
push
pop
adc
jne
std
lods
cmp
jne
mov
data16
les
daa
or
mov
and
push
and
xchg
or
or
enter
leave
or
or
fcom
enter
shr
adc
or
stos
in
pusha
pusha
add
sbb
add
jmp
or
popa
or
xor
pusha
add
aas
pop
ror
cmp
lods
push
scas
add
pusha
popa
loopne
push
ins
inc
shl
adc
and
test
adc
and
pop
or
mov
ds
mov
ja
ins
push
mov
ins
and
in
sub
inc
add
or
lock
inc
fistp
adc
xchg
loopne
pop
push
xor
(bad)
push
add
or
jnp
add
lea
(bad)
out
mov
iret
aaa
inc
rol
hlt
nop
jp
clc
push
cs
sti
adc
loopne
sub
or
sti
and
dec
adc
push
mov
ret
cs
cmp
jmp
push
adc
outs
xor
ret
add
pushf
mov
pop
ret
lahf
pusha
pop
repz
add
movs
and
mov
push
test
pop
add
shl
shl
pop
pop
inc
sbb
add
jle
jbe
or
inc
lods
ja
movs
pop
push
adc
aad
lods
jecxz
test
inc
dec
xchg
lods
inc
fnsave
sub
or
sub
mov
xchg
in
xchg
test
fs
xchg
call
stos
jge
add
adc
iret
mov
dec
xor
add
or
sbb
mov
popf
sub
sub
sbb
popa
xor
clc
mov
xor
adc
mov
or
or
lods
(bad)
dec
or
gs
or
push
or
or
jecxz
aas
jle
jle
and
(bad)
je
mov
hlt
xor
xchg
add
push
clc
jbe
rol
add
mov
ret
adc
or
data16
or
dec
cmp
jecxz
test
sbb
xor
dec
jecxz
lea
pop
pusha
and
push
sbb
setno
add
test
test
push
add
jge
add
movzx
push
adc
shl
or
sbb
add
add
push
mov
inc
add
sub
inc
call
rcr
out
add
loope
cli
adc
mov
int3
pop
jle
cmp
js
cdq
idiv
jne
mov
pop
cmp
test
sub
in
jmp
sbb
sbb
cmp
jne
ss
lock
paddb
push
jp
add
adc
xor
lods
and
aam
add
inc
(bad)
cmp
xor
or
dec
mov
ret
les
mov
les
or
push
sbb
mov
repz
test
loope
mov
jnp
ficom
add
pop
inc
or
mov
ins
inc
or
out
mov
daa
popa
lea
fnstenv
clc
xchg
scas
adc
test
jge
pop
cmp
ja
add
movs
aad
dec
sbb
shl
push
scas
xor
push
inc
sbb
aaa
push
add
dec
rcr
xchg
and
popf
out
add
hlt
sub
lock
xchg
xor
pop
pushf
(bad)
scas
sbb
inc
lock
neg
(bad)
jge
jo
push
lock
mov
adc
cwde
xchg
out
jmp
or
adc
mov
add
push
inc
add
js
and
add
sbb
jae
inc
loopne
jns
pop
or
xor
push
addr16
loop
rol
mov
and
push
fs
adc
add
test
fcom
push
lea
jl
call
push
stc
mov
push
dec
outs
adc
sub
aaa
or
push
jo
and
sti
xchg
mov
mov
push
sti
arpl
inc
sbb
sti
imul
arpl
(bad)
sub
push
hlt
inc
inc
inc
jo
push
loop
inc
arpl
xor
hlt
arpl
and
ins
lods
jo
xor
stos
fbld
and
inc
pop
push
push
popa
rcl
dec
jo
or
mov
dec
or
or
lods
ins
cmc
cwde
or
push
(bad)
jo
dec
lock
lock
adc
lods
ins
dec
clc
dec
mov
inc
sbb
jne
inc
dec
hlt
dec
hlt
lods
adc
or
ins
lods
jo
je
xchg
fbld
sbb
or
sti
cmp
pop
dec
arpl
xor
movs
arpl
arpl
enter
arpl
jo
fs
lock
and
dec
shl
movs
clc
arpl
arpl
shr
lock
sub
jb
lods
jo
push
add
and
adc
fisttp
jo
out
xor
mov
and
test
xlat
out
push
add
test
add
adc
sub
sbb
push
hlt
aam
jp
inc
jge
dec
xor
xor
add
lock
add
inc
sub
or
add
sub
loopne
and
or
rcl
clc
aaa
dec
adc
or
pop
or
rol
sub
adc
add
popa
add
mov
cmp
and
nop
xor
fs
stc
lock
jo
dec
dec
jne
push
or
clc
fst
and
jmp
call
adc
cld
xchg
or
jne
pusha
push
dec
jne
push
adc
lods
push
jne
stos
dec
pop
fbld
sub
fbld
sub
fild
popa
dec
push
add
push
sub
stos
aad
in
add
sbb
push
pop
and
sbb
mov
lods
sti
pusha
jne
or
popa
rol
adc
aas
dec
add
shr
jmp
sbb
popa
fist
mov
add
jle
add
or
adc
nop
push
add
mov
pusha
sbb
push
mov
adc
or
push
in
sti
and
pushw
mov
sub
fisubr
push
mov
adc
xchg
out
ret
pop
inc
sbb
aas
sbb
lods
add
inc
push
push
mov
and
mov
rcl
lods
test
aas
test
mov
pop
dec
dec
inc
or
cmp
scas
sar
push
pop
push
or
sbb
nop
fld
pop
adc
push
add
cmps
cmp
sbb
retf
adc
mov
dec
(bad)
and
and
mov
pop
pop
inc
add
and
mov
mov
xor
pusha
pop
data16
push
add
stos
xor
xchg
add
das
jo
sar
sub
test
sahf
xor
add
xor
fbld
sub
adc
push
add
mov
cdq
and
add
sar
std
push
ret
ret
add
in
(bad)
and
mov
test
movs
xor
add
add
loope
div
test
mov
cmp
push
push
js
icebp
mov
pop
aas
inc
dec
push
add
retf
std
adc
(bad)
cmp
jg
pop
add
jmp
loop
popa
sti
pop
dec
inc
add
add
sub
or
xor
xchg
pusha
adc
test
mov
clc
push
mov
shl
and
push
add
cmps
xlat
adc
xor
lods
adc
hlt
adc
mov
lahf
or
mov
call
dec
imul
and
in
mov
pop
pop
movs
fs
pop
stos
int
sbb
test
ret
fcom
xor
or
xor
pop
jne
mov
pop
(bad)
not
add
mov
imul
sbb
(bad)
xor
mov
add
mov
push
cmp
inc
inc
cld
adc
pop
sbb
add
cmps
in
inc
leave
sub
jl
pop
push
xor
cmp
jbe
in
test
jg
xchg
cmp
add
mov
push
xor
mov
leave
sub
shr
xchg
dec
or
pop
add
push
imul
repz
sbb
ins
adc
add
nop
pop
xchg
rcl
jb
adc
call
pop
pusha
add
xor
jne
add
or
or
mov
ret
add
sbb
adc
dec
sti
in
push
jb
sub
stos
mov
mov
add
pop
jb
cmp
xchg
pushf
xchg
lods
lods
sbb
rol
jmp
icebp
and
inc
loopne
dec
jg
mov
ins
add
push
push
cmp
in
lahf
cmp
cdq
fcomip
daa
or
lods
mov
test
inc
test
data16
jmp
fsubr
jb
stc
pusha
jecxz
mov
icebp
push
aam
popa
dec
pop
scas
mov
inc
jg
clc
fist
loopne
dec
test
add
fucomp
scas
in
xor
or
mov
call
sub
push
add
sub
adc
adc
push
jmp
dec
add
or
add
mov
adc
fiadd
or
and
and
add
mov
or
jo
or
rol
jo
aas
dec
cld
xlat
push
add
or
push
or
and
jno
sbb
dec
fist
cwde
cmp
call
sub
not
and
mov
xor
or
add
jmp
pop
mov
add
mov
mov
pop
xor
loope
aad
sbb
sbb
adc
call
cmp
adc
inc
ja
and
jl
pop
in
or
pop
push
inc
retf
(bad)
xchg
adc
adc
loopne
cmp
cmp
outs
(bad)
dec
add
mov
sbb
fmul
mov
push
pop
cmp
test
xchg
cwde
adc
pop
or
add
add
rol
adc
stc
add
jg
int3
xchg
add
aam
or
or
pop
or
aas
pop
or
imul
mov
jns
dec
or
retf
push
adc
dec
cmp
mov
icebp
xor
jmp
sbb
adc
jg
adc
add
cmp
sbb
or
repz
xor
inc
jmp
add
mov
out
dec
cld
xchg
ret
int
jmp
jg
adc
adc
push
in
push
aas
or
adc
ret
adc
mov
inc
pop
nop
jl
test
add
pushf
pusha
popa
sub
lock
stos
mov
jecxz
inc
push
mov
or
jo
lods
jns
sbb
push
ror
sar
cmp
dec
(bad)
(bad)
inc
and
cld
cld
ja
push
clc
into
lea
push
sub
pop
add
or
adc
sbb
fcom
adc
mov
lahf
or
add
xor
pop
jg
cmc
inc
or
aas
rol
pop
inc
loop
or
and
xor
mov
adc
shl
jno
add
test
leave
jp
push
outs
dec
ss
cmp
mov
or
add
sar
sub
sbb
in
mov
enter
cmps
fst
adc
sar
je
inc
or
adc
push
div
leave
dec
xor
into
add
lds
push
mov
out
add
pop
les
add
and
pop
xchg
add
mov
fcom
mov
out
and
or
mov
xor
aas
jl
pop
mov
aam
jge
fdiv
pusha
pop
fimul
add
les
or
mov
(bad)
mov
jno
mov
mov
mov
stc
dec
fdivr
pop
jb
jg
xor
add
sbb
scas
int3
out
repz
into
and
movs
loopne
xor
loope
in
dec
lock
add
loopne
fwait
dec
repz
loope
adc
mov
cmps
imul
shr
mov
pop
sbb
or
lods
inc
rcr
outs
or
dec
mov
movs
jo
outs
lahf
or
movs
mov
fidivr
inc
push
sbb
dec
call
jmp
cmp
or
pop
call
mov
jmp
jmp
retf
imul
adc
jo
aas
fst
xchg
or
push
add
lds
adc
in
cmp
sub
push
inc
in
inc
js
lahf
adc
push
add
dec
add
shl
add
int3
mov
xchg
pop
test
scas
add
inc
and
sar
sbb
ds
push
rcl
mov
lahf
or
mov
nop
fld
xchg
je
movaps
lods
xor
pop
dec
mov
ins
xchg
mov
jmp
mov
mov
ss
mov
or
loop
lea
push
movs
nop
scas
or
xor
cmp
jnp
lock
adc
gs
inc
loope
adc
add
mov
xor
jno
lods
ins
adc
or
jbe
jo
jae
pusha
or
dec
pop
mov
or
and
xchg
pop
push
dec
or
dec
test
push
dec
dec
or
test
(bad)
btc
adc
add
jmp
(bad)
int3
aas
js
mov
push
in
mov
js
or
adc
in
adc
pop
movs
aad
cmp
dec
lods
push
add
add
jmp
push
nop
dec
mov
pop
and
mov
mov
adc
sbb
add
or
push
inc
add
cmps
dec
fild
call
mov
in
dec
add
or
cld
dec
and
(bad)
push
mov
or
mov
add
fld
inc
xor
push
or
cmp
inc
and
lods
nop
push
mov
add
sbb
dec
or
sub
xor
lods
aam
test
push
sbb
mov
inc
fs
jne
xchg
add
ins
add
xor
push
call
jl
inc
(bad)
call
fsub
je
adc
and
mov
std
mov
sbb
push
mov
mov
and
jbe
mov
pop
adc
push
xor
pusha
lds
shr
add
(bad)
mov
ficom
ins
xchg
adc
ffree
les
cs
push
neg
inc
add
imul
loopne
and
xchg
clc
sub
mov
add
jno
addr16
inc
push
rcr
pop
pop
ror
xchg
bound
cmps
or
add
pop
mov
mov
outs
and
and
push
mov
ins
jb
nop
push
shr
xchg
adc
inc
xchg
pusha
aam
in
sbb
inc
ins
mov
(bad)
xor
mov
push
jae
pop
cmp
jb
add
and
adc
cmp
popa
add
pop
sub
or
out
nop
shl
in
or
ss
adc
add
cwde
leave
xor
add
add
fiadd
rol
mov
stc
jo
pop
pop
aaa
or
sub
adc
adc
sub
push
and
rol
in
pop
lahf
arpl
loope
dec
lahf
mov
dec
jg
enter
add
fsubr
cmp
and
inc
loopne
add
and
loope
jmp
pop
and
fld
push
xor
adc
inc
cmp
and
fucomi
pop
(bad)
int3
push
pop
cmp
pop
dec
push
adc
int3
clc
mov
dec
sub
(bad)
mov
add
jo
inc
push
shl
adc
jns
or
in
jecxz
lock
cld
or
and
icebp
fldcw
mov
inc
inc
jl
sbb
jbe
adc
mov
loop
je
or
add
cmp
mov
shr
lock
das
add
out
rol
add
sti
jmp
and
sub
lods
test
fdiv
cmps
add
mov
int3
jg
stos
in
jae
fmul
mov
jnp
adc
add
lods
sbb
and
cld
push
test
add
(bad)
xchg
lock
sbb
pushf
lds
pop
push
shl
cmp
jns
jo
and
jo
or
add
adc
scas
cld
push
cmp
jmp
mov
xor
xchg
mov
lods
mov
fldl2e
sbb
idiv
repz
add
adc
push
sub
pusha
int3
and
lock
je
jecxz
push
pop
loop
ret
push
push
ss
retf
and
rcl
das
popf
mov
fist
in
inc
adc
add
outs
pop
xchg
adc
mov
or
jg
mov
cld
push
cld
push
hlt
or
inc
xchg
xchg
inc
xor
xchg
mov
test
pop
sti
sub
and
pop
(bad)
test
xor
scas
jmp
jmp
push
imul
sbb
enter
push
lock
fstp
fisub
nop
fnstenv
enter
sub
ins
fcomp
mov
cmpps
cld
push
popa
imul
add
xor
es
sbb
outs
or
mov
mov
push
jmp
pop
push
scas
push
pop
add
push
(bad)
cmp
or
sub
mov
pop
xor
fbstp
push
pop
inc
pusha
test
adc
je
push
aad
push
fdivr
add
test
shl
cmp
add
jg
push
xchg
add
jne
adc
int
xor
add
cmp
jl
lods
arpl
mov
fsubr
sub
mov
or
mov
in
push
fist
das
mov
inc
ret
int3
push
pop
adc
js
mov
inc
lods
retf
cdq
mov
(bad)
cmps
and
xchg
rol
mov
xor
out
add
loop
aad
adc
fist
aaa
test
push
enter
jg
xlat
ins
inc
dec
add
test
cs
inc
inc
pop
pop
mov
aas
add
clc
movs
clc
push
(bad)
mov
in
in
sbb
clc
clc
dec
rcr
shr
mov
cmp
xor
pop
pop
jle
pop
jno
mov
cld
cmp
stos
clc
cmp
pop
jb
mov
and
xor
and
fcmovb
adc
jmp
sub
dec
and
and
add
into
pop
test
xchg
rol
and
aas
sbb
nop
push
fsubr
in
hlt
mov
push
add
das
or
daa
add
fcom
or
pop
fmul
rol
xchg
mov
add
fdiv
push
or
push
les
or
mov
add
cmc
sbb
jnp
pop
fdivp
xchg
inc
mov
lods
sub
and
sahf
int
ret
push
loopne
dec
pusha
push
iret
aas
or
lods
jb
or
mov
add
adc
sub
cld
xchg
or
(bad)
aad
push
adc
cmp
mov
xor
add
dec
mov
jg
and
loopne
xor
cwde
mov
ins
mov
aas
daa
subps
xor
add
scas
cmps
push
mov
jmp
shl
sahf
gs
lock
mov
add
fs
int
add
push
jno
dec
push
and
mov
or
push
popf
push
inc
fidivr
movs
adc
call
push
cs
aaa
jne
(bad)
lock
mov
mov
scas
add
movs
in
mov
jae
add
inc
das
cmp
jb
ja
or
pushf
and
jno
arpl
mov
sub
nop
inc
mov
dec
inc
rcl
sbb
xchg
cmp
add
lods
pop
push
lods
mov
sub
push
mov
or
mov
pop
(bad)
mov
mov
pop
clc
shr
jmp
fidivr
adc
or
in
mov
add
mov
sbb
adc
or
test
add
retf
pushf
add
cmc
loop
jecxz
int
int3
pop
or
adc
xor
mov
pop
add
pushf
lahf
pushf
inc
mov
cs
lahf
dec
adc
inc
adc
sti
xchg
add
ror
pop
mov
pusha
adc
adc
adc
enter
mov
or
and
adc
adc
in
mov
dec
sub
aas
xor
outs
sbb
pop
retf
fcom
jmp
xor
jne
loope
lods
aaa
retf
clc
jnp
pop
inc
mov
push
mov
mov
mov
add
sahf
jmp
gs
fistp
or
pop
fnsave
push
aas
lahf
pop
jno
cmp
loope
mov
lahf
mov
sbb
in
add
mov
jmp
stos
fistp
jecxz
pop
shl
popa
(bad)
mov
nop
adc
and
ret
push
clc
retf
push
aam
and
icebp
xor
and
loope
jno
adc
popf
and
popa
adc
(bad)
adc
cmp
sbb
inc
movs
xor
xor
test
dec
fcomp
jno
rcr
lahf
fwait
enter
sub
lods
push
mov
push
mov
loope
add
pop
jo
inc
jo
pop
lock
or
das
int
mov
mov
mov
push
mov
jae
pop
test
mov
jmp
outs
cmp
test
mov
popa
aaa
pop
stos
sub
push
sbb
sbb
add
push
jno
mov
loope
ror
mov
add
cmps
out
popf
fadd
popa
jmp
dec
push
mov
ret
inc
push
adc
and
jecxz
mov
jecxz
pop
mov
mov
xor
jmp
sub
sqrtps
aam
pop
sub
pop
dec
loope
jg
dec
lods
xor
pop
inc
xlat
mov
mov
or
icebp
pop
imul
mov
pop
add
(bad)
ror
mov
lods
jge
test
sbb
cdq
stos
jg
and
mov
(bad)
aas
mov
(bad)
(bad)
cmp
fistp
adc
les
inc
sbb
mov
or
or
xchg
inc
and
stos
in
jmp
in
push
xchg
icebp
jmp
add
or
push
add
lahf
cmp
and
gs
pop
fcom
or
cmc
cmp
mov
or
adc
sbb
fisttp
sbb
shr
sbb
push
and
pop
inc
(bad)
mov
test
pushf
ret
rcr
(bad)
sub
repnz
in
add
xchg
adc
ret
mov
jmp
movzx
xor
add
test
xor
sub
sub
lock
adc
inc
xor
pop
and
jp
pop
pushf
add
ror
mov
je
icebp
std
xchg
iret
or
mov
xor
fidiv
jg
stos
jg
mov
adc
xchg
or
push
ds
mov
jge
adc
adc
xchg
daa
add
xchg
mov
adc
repnz
gs
push
jmp
fcom
add
mov
(bad)
out
or
les
xchg
or
inc
mov
mov
shr
adc
or
inc
shl
mov
jg
jge
sbb
pop
add
sub
cmp
in
imul
loope
push
jl
dec
aas
xor
inc
dec
lods
lods
add
pop
lock
push
lods
dec
or
xor
int3
in
enter
dec
in
mov
pop
or
ins
stos
cdq
xchg
pop
ret
inc
mov
js
rcr
js
add
mov
sar
jg
clc
or
mov
jnp
inc
rol
sbb
ret
add
inc
lods
jg
or
pop
dec
sbb
test
xchg
pop
lods
int
push
push
sub
jno
loope
ror
sub
inc
cmp
fsub
dec
fwait
push
pop
dec
hlt
jnp
movs
inc
or
ret
fs
ror
jo
mov
dec
xor
or
add
enter
ins
sub
or
retf
popa
adc
repnz
adc
aas
jmp
out
dec
push
cwde
adc
fucomip
adc
sbb
neg
add
jl
adc
into
xchg
and
adc
pop
pusha
popa
fdiv
mov
leave
and
xor
inc
cmp
inc
xchg
mov
(bad)
neg
(bad)
sub
mov
out
adc
lds
mov
fcmovb
(bad)
add
inc
mov
nop
and
push
int3
lds
sbb
or
xchg
ret
inc
enter
xchg
add
loop
add
sub
and
aaa
xlat
xchg
sub
jg
neg
ss
adc
or
push
pushf
gs
xchg
ins
jae
jmp
jae
sbb
call
jno
int
pushf
lds
imul
xchg
add
adc
and
mov
xchg
leave
out
ja
jecxz
sub
push
or
xchg
mov
jno
inc
add
dec
ins
in
add
push
cli
add
push
mov
fmul
xchg
adc
loopne
mov
and
jge
dec
or
leave
call
enter
jmp
pop
in
and
mov
jns
and
ret
inc
mov
inc
fld
popa
lds
jne
add
push
test
ret
push
add
ins
jnp
or
sbb
inc
nop
loopne
mov
cmp
xor
(bad)
je
scas
push
adc
sbb
and
fld
movs
sbb
mov
ret
(bad)
sub
dec
adc
mov
sub
enter
adc
loop
mov
cmp
das
inc
lods
sbb
cwde
jns
dec
daa
sub
dec
fdiv
adc
and
push
inc
pop
imul
jne
pop
lahf
fcomp
xchg
or
jl
cmp
pushf
rol
and
jmp
cmp
add
cmp
jg
jno
and
mov
pushf
push
daa
push
and
shl
rcl
bound
popf
ret
xor
cmp
xor
dec
ins
in
rcr
xchg
add
mov
and
mov
adc
es
ret
clc
rcl
push
enter
call
mov
add
add
pop
mov
mov
mov
je
add
lock
sbb
rol
and
pop
call
add
test
inc
loopne
inc
lods
sbb
imul
pop
mov
pop
fs
movzx
(bad)
test
test
or
xchg
push
add
xchg
jp
mov
adc
sbb
in
cmc
xchg
and
and
pop
mov
xchg
xor
sub
popa
aas
test
inc
mov
adc
adc
in
dec
pop
(bad)
xchg
inc
adc
sbb
sub
and
ins
out
xchg
or
inc
fisttp
in
inc
popf
lds
dec
pop
adc
loope
pop
movs
loope
aas
and
and
ds
jmp
mov
add
inc
pop
xor
add
bound
fcom
rcr
fcomip
lahf
inc
jb
or
mov
fistp
dec
add
pop
mov
hlt
inc
jne
shl
mov
and
sahf
xchg
inc
adc
shl
mov
lock
xchg
mov
popa
frstor
inc
pop
push
dec
or
push
jmp
lock
fisttp
or
sub
push
or
jmp
je
psubb
cmp
jmp
ins
mov
sbb
dec
scas
cmp
xor
push
imul
das
cmp
mov
add
mov
adc
aad
aas
outs
test
ins
pop
mov
inc
je
call
loopne
loopne
pop
imul
sbb
cmc
popf
inc
dec
ins
rcl
ret
add
xor
fdivr
fadd
dec
cld
nop
fcmovnu
adc
ret
ret
xchg
inc
dec
inc
jg
inc
movzx
mov
popf
aam
nop
shl
lods
test
rcl
dec
jb
mov
leave
(bad)
push
push
rcr
clc
scas
pusha
ja
sub
cmps
jnp
(bad)
xchg
mov
enter
jmp
cmp
addr16
leave
sub
inc
adc
lods
or
jnp
les
xor
inc
mov
sbb
mov
mov
mov
and
xor
sbb
stos
ret
mov
mov
fmul
mov
aaa
and
add
add
gs
adc
imul
push
aam
push
cmp
clc
xchg
xchg
cmps
cmp
jne
movs
pushf
ins
inc
shl
jmp
xchg
ret
pop
mov
adc
xchg
loopne
add
and
push
mov
push
ret
ror
push
push
rcr
adc
inc
lods
push
shr
or
push
ins
sbb
add
jno
cdq
call
jno
fmul
pusha
and
and
(bad)
add
xor
pop
adc
push
pop
cmc
sbb
int3
lahf
add
lods
rol
push
add
and
sti
mov
fldenv
jecxz
es
inc
and
dec
mov
inc
add
pop
add
xchg
push
dec
mov
xor
imul
xor
push
lahf
add
dec
jmp
ret
or
in
pop
fnstcw
data16
and
inc
cmp
loop
cmp
mov
lahf
cld
(bad)
cwde
lods
sub
es
push
loopne
pop
push
das
rcl
int3
(bad)
mov
xor
leave
(bad)
push
shl
inc
shr
push
xchg
movs
test
push
cmp
add
cld
sti
aas
or
inc
pop
jle
lods
xchg
inc
jmp
in
xor
dec
psllw
sbb
fmul
mov
sbb
shr
push
xor
pop
mov
jnp
and
in
jnp
add
fcmovnb
sti
mov
sub
jmp
(bad)
bndstx
mov
adc
jecxz
mov
jnp
lock
pop
push
je
and
std
or
xor
into
in
add
inc
adc
mov
xchg
pop
sub
lea
movs
hlt
jne
mov
dec
and
nop
mov
lock
icebp
lea
push
add
add
push
rol
push
xor
inc
add
or
mov
push
mov
test
mov
cvtps2pi
add
adc
ja
pop
jno
ins
ins
or
mov
sub
int3
xor
inc
mov
(bad)
scas
data16
cmp
pop
or
movs
aaa
add
or
ja
or
fisttp
adc
jg
in
lahf
movs
jnp
cmp
jl
adc
jge
xor
pop
test
push
and
iret
test
aad
xor
mov
push
push
push
push
ins
lock
sub
mov
sbb
mov
adc
sub
dec
mov
adc
cmp
adc
shr
lea
xlat
push
in
(bad)
adc
inc
sbb
push
adc
sub
fbld
jl
test
pop
push
dec
ins
xchg
loope
cld
sub
imul
jno
mov
dec
enter
test
sbb
sbb
adc
clc
call
cmps
inc
xor
mov
movs
lahf
push
lods
(bad)
nop
dec
es
lds
dec
xor
cmp
loopne
jnp
or
or
fistp
add
push
leave
test
push
lods
test
add
push
daa
or
test
mov
adc
xchg
daa
sbb
stos
nop
or
pop
mov
add
shl
push
inc
loopne
add
jns
add
jg
xchg
xor
ds
sub
xchg
dec
cdq
or
xlat
ins
or
or
mov
mov
movs
add
sub
pusha
es
xor
cmp
out
jne
fmul
sbb
mov
test
jnp
pop
inc
cmp
aad
or
mov
add
mov
or
out
sahf
fchs
fnsave
je
int3
arpl
push
lds
mov
add
cmp
push
xor
fnstenv
inc
retf
fdivrp
xchg
adc
or
add
push
das
mov
adc
pop
xchg
or
data16
shr
rcl
jb
sub
mov
jnp
inc
in
jno
scas
jg
dec
add
mov
in
mov
push
sbb
cmp
outs
cmp
add
mov
in
jne
sub
push
push
cmpxchg
inc
cmp
and
(bad)
adc
bound
sbb
scas
add
add
cmp
xchg
pop
and
and
movs
hlt
mov
pop
xchg
adc
subps
(bad)
shl
inc
and
popa
leave
test
and
sub
test
(bad)
leave
and
sub
mov
adc
add
pop
add
pushf
mov
sub
inc
adc
loop
cmc
adc
push
add
outs
xor
mov
jmp
sbb
adc
mov
test
lea
mov
mov
mov
mov
div
add
xor
mov
rcr
and
jno
cmp
and
enter
stc
adc
in
inc
mov
sbb
add
lods
push
add
mov
or
sahf
fstp
mov
add
ds
sub
push
push
ins
or
add
inc
int3
cmp
xor
in
sub
adc
es
gs
cli
jle
addr16
pop
mov
adc
mov
push
mov
mov
cmp
gs
out
xor
(bad)
cmps
out
push
push
xchg
jecxz
int3
xor
in
das
push
add
imul
jne
sub
int3
sbb
movs
add
cmp
daa
add
push
pop
loopne
mov
xor
push
pop
and
pop
push
cmp
jmp
add
push
and
into
aas
xor
out
jl
shr
dec
and
fild
ins
pop
ins
adc
cmp
xor
sub
mov
dec
adc
ror
xchg
sub
or
fmul
mov
pop
rcl
sbb
out
aas
push
retf
jecxz
je
mov
xchg
out
add
mov
or
sub
retf
pop
cdq
and
inc
jb
(bad)
(bad)
jmp
push
add
push
xor
mov
fstp
int
xor
test
jg
fs
dec
sub
xor
cs
arpl
sbb
pop
cmp
test
adc
int3
aam
or
gs
or
or
jge
add
sub
inc
je
inc
inc
popf
leave
mov
push
aam
ret
inc
push
xchg
aaa
sub
or
add
in
lahf
push
aam
add
fld
arpl
repz
mov
popa
adc
lea
sub
in
js
add
movs
and
or
xor
pusha
test
out
ds
pop
or
cmp
lea
call
sbb
ret
jecxz
sub
lea
xor
aad
inc
ret
daa
xor
fs
lds
dec
sbb
sub
inc
aad
mov
jl
jbe
push
dec
data16
mov
leave
and
stos
jge
call
fist
and
call
and
icebp
sub
jmp
xor
adc
mov
add
adc
loope
mov
in
pop
pop
sub
push
cmp
xchg
and
rcr
xchg
pop
adc
dec
cmps
loope
xchg
and
sbb
add
xchg
xchg
mov
test
(bad)
dec
cmp
adc
int3
aas
add
inc
or
mov
lock
je
mov
in
cmp
sub
sub
push
and
ss
dec
fs
push
scas
imul
cmovg
or
mov
mov
jmp
mov
add
fcomp
shl
jae
punpckldq
mov
jns
mov
dec
mov
push
ret
xchg
push
nop
mov
mov
mov
xor
cdq
push
shl
sub
fadd
add
sub
test
daa
xor
inc
inc
add
je
cmp
dec
mov
inc
pop
bound
call
pop
adc
lock
push
add
add
or
loopne
adc
push
or
add
test
sbb
inc
pop
retf
and
mov
sub
xor
pop
adc
adc
sub
xor
pop
aam
sub
mov
call
and
jecxz
pop
popa
fnstsw
add
popa
xchg
les
es
push
and
into
mov
lahf
mov
int
ds
sbb
add
add
pop
sti
or
push
in
jo
dec
push
ds
cmp
inc
fadd
jo
enter
and
adc
pop
scas
dec
or
dec
call
(bad)
in
sbb
imul
and
jo
rol
or
pop
cdq
test
or
dec
pusha
sbb
or
mov
add
loope
in
sbb
(bad)
adc
or
fisttp
jge
rcl
and
add
enter
enter
movs
scas
push
mov
ds
cli
inc
lea
(bad)
shl
mov
adc
dec
(bad)
test
pop
dec
mov
or
or
add
push
fist
jno
or
and
imul
xor
push
and
or
cli
je
and
clc
push
and
cld
repnz
movs
cmps
pop
or
ins
or
cmp
jae
shr
mov
xor
in
ins
and
fimul
stos
push
std
mov
inc
push
or
lods
push
(bad)
(bad)
mov
lahf
or
push
ins
sub
scas
mov
jl
push
ins
pop
aad
rcr
sbb
ret
hlt
data16
dec
and
push
or
inc
push
loop
jg
inc
inc
mov
or
js
mov
je
(bad)
sar
neg
cmp
push
mov
call
xor
adc
push
sbb
imul
sub
pop
sub
stos
jg
jnp
pop
or
je
mov
push
pop
mov
push
mov
mov
and
and
push
push
push
pop
clc
test
adc
mul
mov
pop
jmp
leave
sub
dec
xchg
neg
xor
cld
sub
pop
sbb
adc
xor
xlat
mov
cmp
fst
xor
aaa
jp
cmp
push
xor
loopne
movzx
ds
aam
adc
sbb
je
push
xchg
push
rcr
cld
clc
sar
jle
mov
sub
popa
push
je
add
sbb
xchg
pop
mov
int
call
add
push
dec
sub
mov
cld
xor
jae
adc
adc
inc
(bad)
(bad)
cmp
adc
popa
aaa
jp
cs
inc
mov
push
std
inc
mov
cmp
push
sbb
add
sub
nop
mov
aas
mov
and
dec
add
mov
add
int3
pop
or
cdq
in
and
jb
pop
enter
mov
add
adc
inc
and
push
and
or
adc
or
pop
mov
sbb
xchg
and
in
jne
cli
ins
pop
or
inc
xchg
and
inc
and
adc
test
inc
mov
sbb
push
add
cmp
dec
aas
or
mov
push
sbb
push
push
add
lock
ror
cmps
ds
lods
sbb
and
adc
xchg
adc
loopne
dec
imul
sbb
iret
test
jle
or
mov
ror
dec
xchg
test
adc
test
dec
add
jne
add
shl
rol
ret
push
int3
cdq
loop
ret
push
push
dec
sti
cmp
or
les
rol
ror
das
pusha
push
arpl
push
pop
scas
jbe
adc
mov
push
fist
sub
and
mov
data16
sub
clc
out
lea
das
out
or
mov
mov
add
sbb
lahf
xchg
pop
jae
in
inc
test
fisub
sub
call
adc
shr
scas
jecxz
pop
add
cli
or
mov
sbb
sbb
mov
or
mov
(bad)
lahf
xchg
dec
jmp
jmp
scas
in
dec
test
inc
and
aad
ins
jmp
cdq
and
ins
arpl
sbb
mov
xchg
jl
sub
xchg
enter
fisub
stos
jbe
movs
es
adc
and
gs
pop
ret
int3
int3
aas
in
add
add
in
sbb
sub
femms
mov
xor
inc
and
sar
adc
enter
aas
and
ror
jmp
inc
cli
push
aaa
or
inc
and
sub
(bad)
push
jmp
pop
cld
or
add
or
sbb
pop
in
push
lock
(bad)
xchg
jo
sub
rcl
cmp
(bad)
rcr
rol
sub
adc
add
or
ror
pop
add
outs
(bad)
rol
or
adc
and
push
mov
aas
and
push
jmp
mov
push
inc
and
mov
test
add
aas
cmp
mov
lods
retf
aaa
xlat
add
jle
cs
dec
ret
movs
call
stos
inc
xchg
pop
push
mov
aaa
and
je
cmc
add
int3
pop
push
pop
daa
mov
pop
outs
xor
mov
inc
shl
pop
test
lods
add
mov
hlt
add
mov
jo
gs
mov
js
mov
and
jnp
inc
das
es
push
nop
and
pop
cmp
jp
add
adc
adc
and
mov
mov
inc
xor
test
ret
add
out
adc
cdq
shr
call
scas
pop
retf
jmp
and
xchg
inc
fs
add
test
sbb
xor
js
mov
push
call
in
xchg
call
pop
call
add
pushf
daa
dec
mov
sbb
lds
pop
jns
or
sbb
add
push
sbb
call
test
add
inc
pusha
fild
test
mov
stos
clc
xor
sti
pop
and
jb
call
ins
stos
xor
and
sbb
adc
ja
push
and
imul
ror
pop
rcl
add
daa
in
push
imul
push
test
inc
sbb
inc
xchg
or
jge
add
fs
lahf
dec
or
test
(bad)
repz
fwait
pop
or
jo
fild
loopne
adc
fsub
fisubr
cmps
and
push
test
mov
adc
stos
adc
push
in
les
sti
arpl
daa
add
(bad)
nop
adc
xchg
lock
adc
pushf
inc
adc
test
adc
and
cmp
mov
sbb
xor
mov
(bad)
cmc
test
rol
adc
loop
adc
pop
xor
ins
shr
call
sub
sbb
sbb
pop
cmp
mov
adc
shr
add
or
mov
push
retf
sbb
ficomp
loopne
dec
inc
push
mov
cdq
cmp
dec
lock
call
sbb
mov
push
addr16
sub
in
add
jl
push
or
and
pop
jmp
push
js
add
adc
or
cmp
daa
jno
sub
cmp
xchg
mov
cmp
loope
add
mov
cmp
add
aas
inc
or
(bad)
mov
jg
push
and
pop
cmp
cmp
loopne
shl
add
test
ret
dec
and
push
sub
ret
xchg
mov
lods
dec
dec
pop
jp
aad
inc
and
movsx
sub
mov
mov
pop
out
and
sar
or
enter
xor
ficom
dec
xor
adc
xor
sbb
dec
dec
add
xor
pop
sahf
in
fimul
call
in
aad
add
dec
mov
mov
mov
xor
call
push
jb
cmp
test
sbb
pop
out
mov
aas
or
enter
in
cmps
pop
mov
push
sub
imul
lods
sub
lahf
movs
lahf
dec
push
cdq
add
out
js
mov
pusha
push
(bad)
idiv
in
dec
add
je
fcomp
add
mov
lods
bound
aas
popa
popa
jecxz
or
or
shl
lahf
ror
adc
nop
fcmovu
movs
je
dec
les
inc
jmp
push
nop
test
sub
movs
xor
mov
cmp
xchg
pop
mov
and
pop
ins
lods
fcomp
in
pusha
push
stos
inc
jge
inc
push
cmp
push
clc
and
xchg
mov
adc
or
sub
dec
xor
fwait
lahf
mov
setl
dec
inc
in
push
addr16
adc
adc
mov
dec
sbb
add
inc
bound
mov
mov
mov
add
aas
sti
mov
pop
xchg
jg
inc
sbb
sbb
mov
stos
es
pop
movs
lahf
or
xor
inc
test
mov
adc
jns
ins
arpl
dec
cmp
push
mov
dec
mov
xor
dec
fild
pop
es
xchg
sub
xchg
jns
or
push
mov
cdq
retf
test
sbb
shl
inc
call
and
ret
pop
sbb
loopne
adc
aas
and
(bad)
and
sbb
sbb
push
pusha
pop
add
xor
sbb
adc
retf
or
(bad)
or
mov
xor
mov
ss
xor
cmp
jae
sbb
lock
jmp
loope
add
push
mov
or
ret
add
jle
pushf
pop
loop
xor
cs
aad
cwde
popa
dec
sbb
or
hlt
add
pop
paddsb
sbb
push
stos
or
pop
arpl
call
and
adc
aas
mov
and
sbb
movs
cwde
add
jg
nop
xor
push
sbb
sbb
push
addr16
or
adc
cmp
xor
loope
pop
xor
push
aas
lds
and
and
movs
push
jns
or
add
cmp
sbb
ja
(bad)
xchg
push
or
lods
add
test
push
ror
ins
ins
stc
add
push
test
aad
mov
push
(bad)
and
and
movs
push
mov
xchg
sub
or
fstp
add
push
dec
sub
add
shl
shr
cmp
and
add
pop
mov
pop
jo
mov
inc
mov
mov
(bad)
aam
xchg
pop
mov
xchg
and
out
fidiv
test
mov
mov
adc
dec
and
fwait
sub
les
jns
adc
push
and
sub
push
add
mov
(bad)
aam
stc
jl
adc
cmp
lahf
aad
push
jmp
inc
xor
js
cwde
mov
jg
mov
adc
lods
xchg
add
jg
inc
or
push
aas
cmp
aas
xchg
adc
add
sub
mov
cmp
add
or
lock
or
cdq
add
sub
jg
push
add
mov
not
sbb
aaa
sar
ret
loope
add
pushf
or
or
adc
adc
or
push
pop
or
jg
sbb
and
int3
cmps
aas
nop
mov
xor
sbb
call
mov
adc
or
nop
push
pushf
or
jl
fisubr
mov
es
cmp
add
rcl
push
push
jecxz
loopne
and
add
push
xchg
sbb
mov
loop
ret
(bad)
jmp
clc
pop
addr16
fbld
or
add
inc
int3
rol
aaa
xor
pop
push
pusha
adc
and
sbb
add
adc
mov
mov
shr
gs
clc
add
lock
into
hlt
jge
xchg
cs
pop
(bad)
adc
push
cwde
mov
add
cwde
dec
dec
xor
hlt
mov
jle
pop
add
not
sub
push
adc
cli
arpl
test
pop
or
or
fcmovbe
shl
fldcw
xor
xor
sub
sbb
add
popf
mov
fadd
pushf
scas
or
pusha
adc
xchg
inc
sahf
or
push
or
xor
cmp
sbb
int
add
or
adc
iret
and
fwait
pop
outs
push
das
fwait
push
adc
les
lea
or
xchg
stc
sbb
jmp
test
idiv
dec
and
adc
inc
stos
push
lahf
inc
fld
aaa
aas
dec
dec
sub
add
pop
inc
sbb
daa
sub
cli
sub
imul
loop
inc
cmp
add
pop
cmp
imul
int3
adc
inc
fistp
inc
push
inc
(bad)
push
or
dec
sub
inc
or
sub
adc
pop
pop
loop
and
push
dec
rol
mov
mov
adc
stos
dec
pop
hlt
jmp
enter
cdq
daa
adc
add
ror
mov
jbe
es
xor
sub
adc
mov
add
push
cmc
adc
or
fsub
add
nop
xor
adc
jmp
inc
clc
cwde
shl
push
lahf
mov
cwde
or
or
jmp
fwait
fs
sti
and
and
cmps
pop
and
leave
inc
xor
or
sbb
pop
retf
sbb
out
scas
ins
inc
shr
out
mov
es
sub
mov
xor
and
add
xor
loope
jg
dec
mov
jmp
clc
push
pop
xchg
pop
sub
jo
cld
xor
xor
mov
sbb
add
ret
push
lock
popa
addr16
inc
cld
cmp
add
sub
shl
scas
adc
pop
xchg
test
popa
lahf
add
push
xchg
mov
scas
xchg
push
sub
pushw
test
sbb
adc
inc
(bad)
jg
push
add
test
inc
imul
je
and
cmp
or
push
dec
fbstp
sbb
and
nop
mov
pop
mov
jp
add
btr
sbb
inc
(bad)
mov
in
add
outs
add
add
sbb
and
call
cmp
push
add
pop
mov
mov
and
dec
cmp
add
jmp
sbb
retf
sahf
or
(bad)
push
push
(bad)
mov
gs
dec
int3
add
mov
pop
pop
and
test
dec
cmp
inc
push
sub
pop
add
and
pop
mov
sub
lods
loopne
cmp
xchg
pop
lods
loopne
mov
sbb
dec
or
xchg
pop
sbb
and
xor
xor
pusha
sub
or
sub
fimul
mov
fbstp
cmc
dec
and
loopne
cmp
rcl
add
fst
or
mov
jno
push
sbb
cld
mov
fild
cmp
push
inc
or
jg
(bad)
xlat
(bad)
and
push
adc
add
sbb
inc
or
fmul
adc
push
jg
xchg
fmul
adc
mov
pop
sub
mov
sbb
add
imul
dec
xor
clc
shl
cmp
jae
push
test
mov
mov
dec
push
inc
aaa
xchg
or
aaa
pop
je
or
sbb
lods
sub
ret
scas
popa
dec
cmp
push
adc
xor
or
push
movzx
sbb
adc
fs
and
sub
sbb
inc
repnz
bound
mov
call
xchg
ss
dec
cld
pop
and
pop
mov
mov
dec
pushf
stos
and
test
lahf
mov
jb
adc
test
jmp
xor
and
add
ds
mov
xor
and
jns
and
rcl
add
fcom
mov
lahf
aas
push
mov
test
popa
xor
enter
inc
sbb
adc
xor
int3
add
mov
test
ins
mov
movs
jecxz
and
mov
dec
push
and
ins
cmp
mov
imul
pop
push
cmp
jg
test
js
mov
sbb
cvtps2pd
das
add
rcr
retf
jb
je
dec
jmp
adc
daa
imul
and
pop
mov
enter
ins
popf
xchg
pop
pop
(bad)
or
xor
js
outs
push
xor
in
pop
sub
mov
and
je
int
push
ror
sbb
fstp
adc
dec
fild
mov
rcl
clc
mov
pusha
jl
cdq
mov
adc
call
add
inc
jle
inc
(bad)
aad
add
push
xor
jae
xlat
call
jae
sub
sahf
test
add
rcl
adc
sbb
hlt
jg
sbb
sub
and
ror
add
add
and
adc
cmp
gs
mov
sbb
xchg
add
dec
mov
arpl
add
(bad)
fisubr
mov
dec
into
test
leave
pop
ds
mov
dec
stos
js
add
sub
xchg
sbb
jo
mov
fild
and
and
shl
popf
mov
ror
mov
int3
ret
pop
cdq
ret
lea
sbb
movs
adc
push
xor
or
inc
push
mov
mov
es
(bad)
add
inc
push
xor
push
adc
movs
add
jnp
mov
mov
inc
mov
inc
adc
sub
xchg
movs
push
ins
sbb
xor
push
lea
and
dec
inc
pushf
leave
cmp
aad
pushf
(bad)
mov
fsubr
rol
movs
aas
inc
popf
dec
pop
cmp
stos
or
mov
push
lea
jmp
mov
and
push
imul
loop
cld
dec
call
dec
jecxz
rcl
int3
inc
push
fsub
cli
and
int3
adc
xor
pop
popf
(bad)
jmp
(bad)
mov
jb
xor
jo
sbb
lds
or
push
mov
data16
pop
push
push
push
loopne
test
dec
bound
aas
mov
enter
push
sub
pop
mov
rcr
sti
push
sti
jmp
test
dec
lods
cmp
mov
inc
test
sbb
popf
(bad)
clc
sub
daa
scas
dec
or
fimul
push
xor
jmp
jne
sub
data16
dec
gs
aam
push
sbb
mov
inc
jmp
retf
add
cmps
dec
xor
test
pop
sbb
push
or
dec
cmps
xchg
mov
adc
and
jmp
cli
mov
ror
push
dec
inc
mov
and
das
aad
and
cwde
or
inc
dec
(bad)
jmp
imul
dec
cmps
mov
mov
dec
pop
aaa
jne
loop
ror
rcr
add
adc
push
pop
or
xor
pusha
adc
mov
int3
cmp
sub
sbb
mov
lock
push
jle
mov
popa
adc
mov
inc
lods
ret
ffreep
adc
mov
push
inc
mov
sbb
mov
dec
xchg
sub
pushf
jno
push
lea
pop
push
jne
jmp
inc
hlt
xchg
icebp
pop
or
fst
int
loope
sbb
pop
pop
adc
adc
pop
fadd
nop
push
test
or
push
push
pop
inc
pop
(bad)
call
mov
daa
test
cld
cmp
icebp
in
add
mov
dec
xor
pop
lea
sbb
and
cmps
rcr
imul
pop
fxch
hlt
xchg
sbb
or
adc
into
add
xor
pop
xchg
dec
sbb
jbe
jmp
jb
dec
xchg
mov
ror
aas
ror
dec
jge
push
fwait
sub
xchg
pop
fsubr
dec
sub
jmp
pop
cmp
and
pop
icebp
push
ja
aas
mov
add
fist
and
or
in
pop
add
jmp
jmp
adc
std
cmp
cmp
aas
push
xor
inc
add
or
add
add
add
or
stos
add
dec
imul
pop
ret
pop
pop
xchg
cmc
add
pop
push
xor
push
(bad)
pop
xor
push
push
sbb
jl
pop
pusha
mov
mov
inc
sub
and
sbb
lahf
or
fwait
test
pop
cmp
cmp
es
jmp
jmp
jae
int3
inc
movs
xlat
fsub
or
cmp
jb
pop
pop
dec
or
or
and
add
add
lods
jae
cmp
es
or
pop
xchg
mov
mov
stos
mov
addr16
add
in
jmp
inc
or
ss
(bad)
out
stc
xor
and
sar
sbb
mov
jbe
leave
(bad)
enter
retf
into
sub
fidivr
fs
jge
mov
(bad)
jmp
pop
call
add
add
int3
ficom
(bad)
xor
push
(bad)
shr
mov
into
das
movd
leave
retf
mov
lea
pop
or
out
mov
push
adc
mov
ror
push
outs
pop
or
jl
(bad)
lock
lods
and
adc
xchg
or
ja
dec
sbb
movs
pop
jnp
mov
imul
push
add
call
push
jl
stos
mov
arpl
movs
jno
arpl
add
scas
lods
push
xor
push
mov
jne
dec
add
cmp
daa
push
sub
jle
rcr
clc
outs
xchg
inc
xchg
fcom
mov
stos
cmp
call
rcl
xchg
popf
push
ja
jle
loop
inc
fcomp
or
pop
lds
add
test
jg
mov
push
pusha
xchg
sbb
adc
jmp
into
jmp
lods
jmp
mov
mov
pushf
out
or
adc
adc
cmp
(bad)
adc
mov
xchg
xchg
sub
and
inc
in
ret
cdq
in
fdiv
aam
cmp
icebp
call
or
xor
bound
jno
dec
xor
pop
mov
xchg
sar
js
les
cmp
movs
dec
clc
stos
test
or
lahf
mov
dec
push
lea
mov
adc
or
dec
popa
jo
outs
pop
lock
mov
icebp
lock
shl
pushf
test
dec
xchg
in
ins
xchg
fucomi
hlt
mov
test
cmp
push
xchg
dec
mov
mov
shl
shl
mov
mov
lods
dec
cmps
adc
cmp
inc
add
fild
push
adc
add
sbb
mov
in
inc
sar
cmp
les
dec
xlat
xor
mov
dec
sub
add
xchg
clc
cmp
jmp
jg
into
cmps
jns
jns
or
dec
test
push
inc
fild
lea
pop
or
mov
mov
adc
outs
jge
fidiv
lods
mov
cmps
adc
mov
sbb
sub
mov
xchg
popa
les
mov
ret
inc
adc
lock
inc
lods
xor
rol
inc
js
movs
fcompp
xor
xlat
mov
js
rol
ret
aas
cwde
push
pop
pushf
dec
or
push
jp
or
pop
pop
lea
aam
ja
data16
pop
push
and
pop
xchg
pop
nop
push
mov
das
sbb
cmp
jg
shl
(bad)
aam
xchg
cmps
loopne
retf
in
adc
movs
add
bound
ret
data16
dec
mov
add
mov
mov
sbb
mov
lods
(bad)
shl
push
add
mov
dec
jo
aad
mov
or
xchg
(bad)
shr
scas
or
push
in
sbb
cwde
xor
inc
call
or
jge
rol
add
sub
jmp
shl
inc
jae
test
lds
test
int
nop
and
int3
jmp
push
lods
adc
jno
xor
dec
arpl
add
jmp
jno
cmps
push
xor
les
js
(bad)
aad
in
je
or
cdq
mov
div
jl
aad
pop
enter
ja
xchg
fadd
imul
fld
outs
sub
sar
mov
mov
mov
xchg
in
or
add
push
fs
gs
pop
les
cmp
xchg
mov
add
movs
(bad)
fcomp
cld
mov
aaa
add
sbb
adc
sbb
dec
inc
or
mov
mov
pushf
push
sbb
pushf
aas
sub
cdq
add
push
lea
mov
mov
int3
cmp
test
(bad)
mov
sti
pushf
jg
(bad)
push
movs
pop
fild
call
cmp
jle
out
add
mov
xchg
push
dec
jl
lock
fdivr
int3
cld
fcmovne
mov
mov
addr16
adc
imul
xchg
push
push
mov
mov
add
sbb
fdivr
cmps
nop
push
dec
push
adc
push
pusha
and
add
pusha
enter
shl
pushf
enter
fld
cld
scas
daa
jo
cmp
sub
or
ins
jb
std
sub
mov
push
and
out
mov
xchg
xor
xchg
add
daa
push
imul
arpl
and
xchg
mov
imul
mov
or
or
mov
ret
add
add
mov
rcl
(bad)
adc
or
ss
rcl
clc
inc
dec
int3
inc
cmps
ja
rcl
sub
(bad)
int3
pop
cmp
add
and
dec
and
adc
(bad)
mov
je
lock
mov
pop
mov
sbb
pusha
inc
std
mov
add
jmp
loopne
fwait
cmp
mov
dec
in
call
mov
push
fdiv
mov
das
in
popf
int3
cs
add
stos
xor
test
and
jg
cmp
aam
cwde
add
mov
xchg
rcl
push
or
push
test
and
fild
or
test
js
movs
or
push
jae
mov
mov
or
cmc
stos
jle
cmp
ja
enter
push
cmp
jo
(bad)
sub
push
add
jno
shl
xor
out
test
jmp
mov
sub
mov
push
adc
mov
push
push
jmp
fisub
popf
add
ja
mov
cld
xchg
sub
mov
add
adc
push
fdiv
(bad)
xor
sti
or
fbld
stos
push
or
shr
lea
mov
mov
push
les
xor
leave
fild
pop
shl
mov
or
push
sub
mov
inc
ret
ins
ins
push
pusha
nop
das
xor
adc
test
lahf
loopne
pop
test
add
pop
inc
mov
cdq
mov
xchg
mov
cld
cdq
pop
mov
push
movs
mov
cwde
mov
xchg
arpl
int3
or
push
push
daa
ds
xlat
inc
nop
mov
mov
mov
add
add
or
sbb
add
and
jno
xchg
pop
sub
sti
mov
mov
mov
and
fisubr
mov
jl
bound
xchg
xor
mov
(bad)
sar
jl
jns
js
js
pop
push
mov
or
adc
imul
ror
sti
mov
cmp
pop
test
pop
push
stos
retf
jbe
mov
inc
std
sbb
inc
std
adc
adc
inc
mov
mov
stos
fbstp
adc
(bad)
into
imul
adc
mov
adc
les
inc
dec
push
cmp
lea
jo
mov
lea
call
push
movs
(bad)
adc
cmp
adc
xor
arpl
cld
mov
cmp
adc
cmp
cs
retf
cmp
fs
sbb
cmp
adc
scas
xchg
pushf
popf
sbb
fiadd
out
aam
pusha
push
sub
outs
sbb
(bad)
mov
mov
add
dec
mov
out
inc
loopne
cdq
push
sbb
icebp
sbb
pop
push
and
adc
lods
sub
icebp
xchg
inc
sub
not
jge
pop
jo
inc
lods
aas
shl
push
mov
mov
pop
popa
cli
lea
jp
fcomp
lea
daa
call
sbb
pop
pusha
xor
jmp
jmp
mov
aam
mov
inc
ins
push
mov
pop
fs
dec
lods
and
xchg
xchg
add
mov
iret
stos
and
push
push
icebp
xor
enter
pop
sub
and
daa
add
jo
lea
and
popa
mov
repnz
pop
pop
retf
pusha
adc
scas
(bad)
imul
push
xor
scas
out
cmp
mov
or
int
push
xchg
daa
push
sub
xor
mov
or
bnd
in
xor
pop
inc
dec
sbb
in
inc
push
sub
cmp
add
ficom
cmp
or
data16
sbb
fsubr
cmp
pushf
adc
je
sub
or
sbb
add
inc
div
gs
add
pop
into
pusha
hlt
ret
rol
sbb
icebp
lea
stos
and
sbb
inc
jae
and
cmps
test
sbb
pop
lods
sub
call
sbb
ret
inc
sbb
xor
mov
sub
sbb
ins
and
mov
xor
pop
jmp
cmps
in
fwait
and
rcr
fbstp
int3
sbb
pop
and
and
cmp
cs
rcr
and
test
scas
sbb
test
sbb
lods
push
pop
jle
lods
shr
ja
addr16
lea
sub
in
cmc
mov
add
ret
sbb
rcr
lds
xor
adc
call
rcr
sbb
jecxz
pop
jl
sub
fldcw
push
adc
sub
mov
fstp
or
adc
in
stos
or
inc
cmp
aaa
lahf
das
jnp
mov
adc
lds
or
pop
mov
out
sub
std
sysenter
cmp
adc
dec
jg
pop
test
daa
pop
adc
outs
or
add
pop
mov
gs
mov
loope
ror
push
lock
mov
cmp
test
fadd
dec
lods
jg
mov
ret
cmp
ja
jecxz
mov
pop
add
add
fwait
loope
retf
add
pop
ss
xor
or
mov
cld
sti
(bad)
xchg
sti
ins
aaa
push
jnp
loopne
cld
cld
xor
or
loopne
xchg
pop
lock
cmp
cld
arpl
enter
push
(bad)
in
(bad)
call
enter
add
or
in
push
cmp
call
pushf
mov
dec
les
test
hlt
test
fistp
inc
add
fbld
fidivr
jmp
js
push
in
push
cmc
sbb
add
test
pop
push
xchg
add
jnp
popa
pushf
adc
or
xadd
or
dec
mov
stc
jle
sbb
in
pop
add
sbb
shr
dec
push
fcomp
jns
cmps
xchg
push
mov
scas
fmul
push
or
aas
loopne
mov
pop
fucomip
mov
aam
or
lods
jg
adc
sar
or
in
test
and
mov
test
cmp
add
jg
mov
and
or
push
pop
js
out
aam
dec
or
jge
mov
jne
sub
add
(bad)
mov
cmp
add
add
int3
inc
imul
add
fmul
pop
cmp
add
push
int3
inc
das
lods
add
lds
lahf
test
lea
adc
fsub
addr16
scas
jge
add
push
or
or
mov
loop
imul
sbb
adc
cmps
jae
pop
fist
or
mov
lsl
xchg
shl
out
sbb
mov
sbb
lds
adc
call
(bad)
pop
ins
mov
push
jae
mov
lock
fwait
cmc
jecxz
inc
clc
push
lock
mov
mov
jge
sbb
(bad)
jmp
push
jmp
loope
loopne
aas
adc
dec
lahf
lock
jnp
mov
mov
shr
adc
jecxz
aas
or
fst
push
mov
fldcw
and
add
rcl
test
jp
xchg
mov
imul
mov
or
inc
in
in
or
clc
dec
and
add
sbb
pop
mov
inc
xchg
ret
int3
mov
mov
in
ja
movs
lahf
shl
sub
push
lock
aaa
icebp
adc
rcl
pop
push
pusha
dec
test
xchg
adc
push
jmp
pop
or
fcom
add
mov
fdiv
add
mov
jo
mov
(bad)
or
xchg
xor
lods
cmc
fadd
inc
or
popf
cmp
and
sahf
popa
adc
mov
fwait
mov
mov
inc
ins
cmp
or
mov
mov
outs
pop
xor
xor
shr
mov
or
loopne
xor
hlt
sbb
lds
add
lock
inc
adc
xor
add
test
je
dec
push
data16
add
lods
dec
ret
dec
add
aam
adc
(bad)
xlat
sub
push
pusha
mov
adc
fcom
fcomp
or
or
je
repz
fwait
add
mov
iret
adc
into
mov
sar
adc
add
mov
lea
aad
or
popa
rcr
jmp
cmp
push
cmp
and
pusha
mov
add
pop
cmp
(bad)
sbb
push
sub
popa
cld
push
rcr
or
and
pop
sub
popa
or
pushf
dec
xchg
mov
dec
mov
rcl
addr16
sub
ins
xor
mov
cmp
sbb
push
inc
loopne
push
dec
and
imul
add
popa
jecxz
das
ret
mov
fisubr
(bad)
push
cmps
(bad)
in
inc
stos
mov
jnp
push
add
mov
(bad)
imul
imul
push
fwait
repz
test
loopne
rol
jmp
push
xor
add
pop
std
inc
jne
sbb
iret
add
sar
sbb
mov
pusha
imul
mov
push
nop
retf
les
add
dec
jmp
out
sub
push
shl
test
push
das
sbb
add
push
sub
pop
jge
inc
xchg
adc
fcmovnb
aam
test
add
mov
inc
int3
shl
inc
lahf
or
lods
add
adc
jg
cwde
cmp
test
fnstsw
nop
and
or
bound
and
jl
mov
and
fld
lock
mov
and
dec
out
inc
fsubrp
mov
mov
mov
inc
pop
pop
fcom
add
cdq
mov
lock
enter
cmp
inc
inc
loop
xor
or
or
cmp
mov
add
push
dec
cld
test
dec
popf
mov
sbb
jg
rol
or
add
push
ret
and
movs
cld
(bad)
lock
and
cmp
jle
pop
imul
cmp
sti
jnp
or
mov
add
jae
stc
jl
jns
pop
pop
sub
jmp
test
jecxz
add
aaa
xlat
(bad)
fcom
ss
fldlg2
pop
add
dec
sbb
add
pop
gs
(bad)
adc
pop
add
sub
pushf
imul
loopne
adc
or
or
iret
inc
inc
stc
add
sbb
xor
iret
add
add
pop
adc
popf
dec
pop
or
add
or
push
pop
add
gs
push
ror
aas
and
add
cmp
sub
pusha
rol
stc
fmul
sub
push
add
xchg
dec
inc
mov
mov
adc
cmp
cmp
or
sar
push
pop
push
xchg
sub
mov
js
mov
jg
add
inc
(bad)
jmp
inc
pop
mov
jo
aad
call
mov
xor
lsl
test
enter
add
jne
dec
inc
push
mov
sbb
dec
ins
mov
push
sbb
add
or
adc
sbb
sete
add
test
lahf
cmp
or
loopne
dec
jno
inc
and
pop
jp
lods
lahf
ja
cmps
adc
lea
xchg
(bad)
aaa
(bad)
sar
and
add
push
mov
cwde
xor
cmc
mov
mov
push
push
xchg
jno
ja
aam
test
ins
in
and
or
adc
sub
push
xor
(bad)
(bad)
ror
bound
ret
and
lods
pop
adc
retf
(bad)
retf
push
jo
inc
add
test
push
xchg
sbb
test
add
add
pop
or
cmp
cmp
popf
(bad)
call
or
add
sub
jo
add
and
inc
or
adc
mov
or
or
inc
and
mov
popf
pop
in
add
icebp
or
add
call
test
dec
ret
sahf
fnstsw
mov
mov
jecxz
mov
leave
xor
sbb
inc
aas
adc
sbb
or
inc
inc
test
xor
std
adc
stos
movs
int3
cmc
mov
sbb
outs
pop
mov
call
cmp
push
mov
(bad)
or
les
push
pusha
push
and
lahf
jecxz
cld
inc
jns
push
jmp
int3
pop
add
add
imul
push
adc
mov
dec
mov
cmps
ja
mov
hlt
pop
sbb
call
xor
jne
add
add
add
and
xor
add
mov
icebp
adc
push
(bad)
adc
call
push
push
add
or
pushf
call
popf
xor
or
mov
xchg
cli
lds
xor
xchg
mov
mov
adc
retf
ins
imul
in
push
or
shl
movs
or
arpl
lock
imul
cli
cmp
jne
arpl
inc
jge
inc
shl
jb
sub
and
pop
daa
adc
adc
sbb
pop
or
loope
imul
or
inc
test
dec
cld
pop
and
mov
jg
inc
add
pop
or
mov
adc
jg
push
push
xor
sbb
into
in
mov
push
aaa
call
add
inc
int
add
push
xchg
sub
pusha
pushf
add
imul
ins
inc
add
shl
mov
push
or
mov
dec
or
add
adc
mov
inc
arpl
inc
hlt
aas
sub
jnp
aaa
ds
jo
pop
push
xor
sub
mov
sub
int3
add
adc
push
pavgw
frstor
ror
jl
out
inc
sub
or
lock
lods
and
fistp
mov
ins
add
ret
call
push
sar
or
dec
ficomp
add
clc
bound
dec
xor
test
add
inc
or
mov
and
and
fnstcw
pop
sub
mov
call
push
sbb
sub
sbb
inc
sub
inc
test
pop
adc
cmp
add
add
mov
adc
sbb
shr
inc
inc
pop
lods
pop
and
xchg
lods
mov
xor
imul
jb
repz
ins
dec
pop
sub
lock
ret
jbe
lock
mov
sbb
test
scas
sbb
xor
jns
inc
rcl
pop
adc
ret
pop
sub
nop
adc
cld
out
adc
aad
push
in
aam
loopne
fist
ins
add
popf
adc
sub
pusha
jecxz
adc
add
add
lods
rol
aas
jle
outs
adc
aas
jg
mov
adc
fwait
test
loopne
pop
mov
xchg
lods
cmps
mov
jle
sub
add
add
pop
pop
fdivr
fadd
push
inc
mov
mov
add
fsub
setae
add
or
jno
fdivr
or
popa
aam
fadd
mov
or
sbb
sbb
and
nop
sub
fld
sbb
in
adc
or
adc
sub
cs
and
adc
int3
mov
jo
pusha
mov
arpl
adc
push
inc
or
and
dec
pop
lods
int
sub
xor
cwde
xchg
mov
adc
and
mov
cmp
inc
stc
fbstp
inc
pop
fild
(bad)
xor
inc
mov
dec
or
repz
test
add
xor
cli
mov
inc
mov
sub
rcl
mov
inc
sti
sbb
pushw
aam
ins
call
push
sbb
sub
xor
inc
pop
xchg
test
jmp
call
sbb
or
add
rcr
in
adc
bound
into
or
or
int
jmp
movs
pop
adc
and
jmp
in
push
sbb
retf
retf
push
loope
nop
mov
and
leave
mov
xchg
mov
inc
mov
xchg
and
add
int3
int3
shl
movs
scas
or
adc
fild
push
cmps
fcom
xor
inc
mov
and
mov
dec
push
add
sbb
inc
(bad)
push
fist
and
mul
leave
rcl
and
cmp
cli
pop
shr
sub
and
xor
jge
xor
or
adc
push
jmp
xor
(bad)
pop
inc
movs
test
or
sbb
adc
cmc
dec
push
pop
std
sbb
inc
popa
mov
xor
jge
mov
xor
loope
jae
sbb
fadd
je
xor
imul
xchg
dec
je
cmp
jle
cdq
add
push
pop
jmp
pop
sbb
fwait
cmp
cmp
mov
mov
lahf
push
or
and
adc
jo
lock
jne
jbe
mov
adc
adc
mov
cwde
(bad)
pop
sub
mov
mov
inc
mov
jecxz
call
aas
mov
or
pop
mov
adc
add
mov
xor
mov
mov
pop
sbb
repnz
push
push
aas
fwait
or
int
push
aas
mov
or
mov
jg
ret
call
jle
nop
test
inc
adc
mov
sub
popa
loopne
inc
imul
in
rcr
pop
add
add
(bad)
sbb
add
add
ficom
mov
and
sbb
stos
hlt
push
push
or
sub
or
xor
pop
sub
mov
rcl
push
loope
add
adc
add
mov
adc
cmp
lea
clc
mov
add
mov
push
push
popf
adc
shl
jl
in
and
jbe
and
(bad)
jle
or
hlt
loopne
or
inc
nop
xchg
mov
mov
push
inc
inc
mov
dec
sub
int
cmc
into
xchg
pop
test
push
or
clc
and
hlt
imul
aaa
movs
stos
test
or
imul
mov
inc
inc
adc
xor
push
push
call
mov
cmp
adc
int3
add
aas
stos
add
or
sbb
mov
sbb
add
push
sub
loopne
cmp
or
loope
pop
lods
pop
pop
movs
aam
inc
mov
sbb
mov
or
or
add
sbb
(bad)
adc
enter
or
jp
mov
mov
add
add
add
pop
cld
jg
inc
sbb
cmc
jns
sub
or
lds
pop
repz
(bad)
mov
adc
pop
nop
push
add
adc
test
sub
add
mov
adc
popa
mov
lds
mov
lahf
js
adc
push
cmp
add
inc
jmp
mov
and
es
jl
(bad)
ins
inc
(bad)
(bad)
jl
ins
lods
and
lea
inc
or
xor
sub
sub
xor
add
xchg
and
enter
js
sbb
adc
pop
cmp
sub
test
mov
jne
jg
test
sub
aam
loopne
and
cdq
xor
or
imul
leave
mov
push
push
adc
arpl
sbb
test
aas
test
sbb
sbb
fcomp
ja
push
mov
mov
add
loop
loopne
sbb
adc
push
xchg
add
mov
push
or
fadd
and
push
lahf
clc
fs
xor
and
in
inc
fcomp
fstp
adc
xlat
add
pusha
push
and
sub
mov
clc
lahf
in
add
sbb
jne
add
mov
or
loope
pop
sub
and
sbb
jns
test
sar
dec
dec
lock
jle
add
xchg
sub
pop
enter
fcomp
pop
sub
inc
hlt
pop
sbb
cmps
mov
retf
mov
adc
add
jg
or
(bad)
push
inc
mov
dec
or
out
sbb
push
clc
imul
inc
ret
jge
add
or
jg
daa
add
inc
int3
pop
mov
jo
and
shl
xor
repnz
js
retf
lds
(bad)
repz
data16
jmp
push
or
pop
adc
mov
mov
sub
nop
test
js
add
leave
or
jo
mov
add
cmp
lock
mov
jmp
das
add
dec
and
adc
and
push
push
pop
cmps
mov
lea
fild
in
dec
xor
icebp
mov
shl
shl
adc
xor
sahf
das
xor
mov
pushf
cwde
movsx
neg
fwait
mov
sbb
or
mov
lods
mov
stc
push
mov
fsubr
leave
pop
xor
pop
adc
sbb
(bad)
hlt
adc
pop
dec
test
push
mov
pop
pushf
ror
lock
push
or
ret
and
or
or
test
repnz
sbb
popa
dec
in
sbb
das
cmp
sub
add
and
push
mov
shl
sub
rol
leave
or
xchg
movzx
mov
les
ficomp
jo
mov
movs
sbb
push
cmc
mov
cmp
cld
adc
sar
fdiv
popa
jmp
pushaw
bnd
push
clc
adc
sub
dec
dec
mov
mov
pop
sub
in
imul
add
pop
or
repnz
pop
pop
or
dec
jmp
jns
push
pop
or
and
mov
ror
lods
aaa
cmps
inc
inc
lahf
movzx
imul
sbb
adc
xchg
jecxz
or
lock
inc
adc
(bad)
mov
pusha
inc
mov
xor
mov
jmp
push
mov
mov
mov
add
cmp
int3
int3
jmp
sub
das
sar
inc
and
xchg
cmp
jp
and
push
or
push
inc
jl
inc
enter
pusha
add
push
cs
adc
sbb
push
sub
add
test
and
aam
retf
shl
pop
mov
retf
fmul
or
adc
jns
cmp
lock
dec
adc
adc
lahf
test
mov
or
ret
cdq
xor
loope
je
lahf
out
add
or
or
scas
mov
jne
mov
jmp
es
mov
xchg
hlt
rcr
adc
inc
hlt
dec
push
in
xchg
xor
out
aas
or
and
retf
sbb
popfw
cs
jne
jle
pop
and
jle
fs
xor
sar
psrld
and
add
movs
test
mov
les
stc
sub
jb
xor
xor
nop
sbb
pop
jg
add
aas
es
or
das
mov
pop
push
out
push
xchg
mov
fsubr
lea
pop
scas
pop
or
popf
mov
jbe
and
add
test
xor
sbb
pop
pop
mov
mov
fild
push
or
sbb
test
push
pop
push
dec
cmp
lahf
ror
enter
and
pop
les
mov
xchg
pop
adc
cmp
je
popf
push
rol
adc
pop
or
push
dec
add
in
sbb
push
test
loopne
pop
adc
es
inc
sbb
lahf
jmp
iret
inc
inc
daa
inc
inc
in
lahf
hlt
inc
inc
or
sbb
mov
shl
sub
ret
outs
sbb
(bad)
or
pop
aam
sub
adc
jne
jg
call
push
adc
or
int3
jmp
aaa
lahf
mov
sbb
stos
mov
gs
pop
cmp
xchg
xor
inc
rol
int3
loop
gs
dec
ret
jecxz
add
popf
shr
jp
call
adc
or
mov
add
int3
jg
adc
or
adc
dec
sub
sbb
push
outs
sar
sub
push
push
fadd
pop
das
mov
daa
sbb
add
fdivr
or
add
popa
(bad)
les
dec
or
or
shl
mov
add
jo
mov
inc
into
and
pop
and
dec
mov
or
jge
push
or
xchg
rcl
mov
inc
aad
ffreep
ins
pop
ret
ffreep
or
(bad)
xor
add
pop
je
ret
jno
inc
test
movs
wrmsr
push
mov
pop
add
std
cmp
js
(bad)
sub
shl
in
xchg
out
sub
(bad)
int
mov
mov
adc
sbb
sahf
sub
ds
mov
add
sub
adc
jne
pushf
xor
movs
or
and
stos
sti
dec
in
les
lods
push
add
rol
inc
ror
or
inc
mov
lock
mov
lds
movs
js
iret
js
mov
pop
mov
add
dec
clc
push
mov
mov
xor
enter
and
aam
jmp
push
dec
and
add
mov
dec
sbb
mov
or
scas
mov
inc
dec
jnp
mov
jnp
lods
call
cmp
mov
jno
scas
add
and
clc
pop
add
mov
ins
loope
jmp
cmp
mov
lahf
adc
sbb
not
and
sub
fidivr
inc
cli
sbb
not
and
push
ret
loopne
dec
out
js
cld
hlt
cld
xchg
push
sbb
or
mov
int
pushf
pop
sub
stos
leave
in
jb
cmp
push
sbb
cmps
or
loopne
(bad)
cld
mov
add
call
sub
sti
popf
add
or
(bad)
add
test
fsub
cmp
test
adc
lock
mov
mov
pop
jp
es
add
mov
fild
add
adc
scas
mov
arpl
loope
adc
xor
mov
xchg
bound
fiadd
lea
xchg
add
push
lods
mov
(bad)
mov
retf
inc
ret
dec
adc
ret
cdq
and
lahf
inc
inc
les
mov
push
stos
fmul
lock
dec
and
and
inc
adc
pop
sbb
sahf
mov
push
adc
xchg
rol
and
clc
mov
and
movs
add
es
div
pop
pop
ins
sbb
mov
xchg
in
jmp
sub
inc
mov
xor
adc
pop
std
sbb
test
mov
shl
(bad)
mov
adc
xor
das
sub
mov
test
or
lods
xor
loopne
addr16
push
aam
push
jmp
push
dec
adc
cwde
add
mov
sbb
add
mov
cmp
adc
call
dec
pop
or
cwde
(bad)
jge
pusha
cli
sbb
test
cmp
mov
loopne
dec
mov
in
jb
pop
adc
lock
pop
test
das
mov
mov
add
add
out
ror
lahf
and
xchg
or
add
push
mov
and
ins
add
lea
(bad)
and
adc
dec
sub
push
fdivr
mov
cmp
push
inc
dec
sub
adc
loope
inc
add
enter
mov
add
push
inc
enter
sbb
add
ret
loope
or
call
cmp
jmp
fwait
pusha
cmp
iret
or
lds
inc
cwde
prefetch
or
jl
adc
imul
fistp
sub
and
nop
data16
int3
add
dec
sar
add
xor
and
sub
or
ins
adc
push
pop
cmps
icebp
(bad)
or
pop
or
rcl
mov
call
xor
mov
mov
adc
daa
dec
mov
push
cmps
jmp
push
pop
lea
pop
sub
fadd
jle
pop
hlt
or
mov
(bad)
movs
jmp
or
xor
call
jo
xor
mov
add
sub
pop
xor
sar
cmp
sub
fbstp
aam
add
sbb
retf
call
cmps
loope
test
(bad)
push
sbb
jmp
ins
lock
pop
push
and
mov
clc
mov
add
jno
pop
push
fistp
test
sbb
loope
(bad)
sbb
(bad)
gs
mov
sub
rol
pop
jo
mov
and
sti
or
cmp
push
fsub
mov
jmp
lock
fisttp
hlt
and
bound
add
test
adc
ins
xor
iret
jb
test
push
push
ss
xchg
xchg
and
fs
fs
add
test
in
or
jl
mov
push
push
pusha
push
or
and
cmp
mov
pop
(bad)
xchg
add
inc
jmp
shr
adc
test
jg
aas
sbb
add
aas
push
inc
pop
sub
sub
enter
xlat
sub
out
pop
fimul
mov
inc
add
icebp
in
ror
fnstsw
and
xchg
mov
leave
rol
repz
xchg
sbb
jl
fwait
aaa
sub
cs
xor
fsub
pop
add
int3
push
push
or
cmp
out
or
adc
push
pop
aam
add
aaa
pop
neg
popa
pop
fsub
bound
ficom
push
pop
rol
scas
mov
scas
add
mov
ss
add
cwde
fs
add
enter
and
mov
or
mov
pop
movs
adc
cmp
push
pop
les
or
adc
sbb
jmp
add
leave
enter
pop
add
xchg
ja
cmp
retf
xchg
push
inc
and
jge
push
dec
pushf
or
test
mov
stos
add
add
in
addr16
std
pop
dec
adc
add
sbb
lea
adc
jl
adc
push
xor
adc
xor
cmp
mov
push
or
push
push
ins
movs
and
push
mov
inc
pop
int3
jnp
sahf
add
arpl
push
(bad)
in
call
xchg
cmp
mov
or
push
scas
pusha
test
fs
mov
shl
pop
push
xlat
xchg
sbb
pop
push
ss
rcl
pop
push
cdq
push
jne
scas
xor
cmp
lods
rcr
daa
mov
push
dec
sbb
aad
jne
jbe
jno
add
dec
fldcw
orps
in
je
xlat
dec
mov
(bad)
jmp
nop
cmp
mov
inc
sbb
or
das
femms
push
sbb
dec
cmp
lds
outs
add
in
xor
xor
jmp
pop
or
sub
jno
rcl
xchg
je
clc
mov
test
mov
pop
add
and
or
aad
jmp
cmp
out
and
and
fucom
movs
fcom
sub
sub
inc
xor
mov
dec
jmp
les
das
in
or
mov
mov
push
sbb
inc
push
fs
test
xchg
cwde
adc
or
mov
pushf
movs
mov
push
xor
mov
xchg
rcr
xchg
pop
mov
rcr
or
(bad)
push
mov
mov
cdq
mov
add
(bad)
push
test
add
fsubr
jnp
or
adc
sbb
add
out
sar
push
mov
add
or
loopne
adc
test
ret
cmp
inc
int3
js
or
push
mov
cs
cmp
inc
adc
push
imul
adc
push
(bad)
mov
repz
or
leave
dec
add
sub
cmp
loopne
stc
or
js
add
xchg
add
inc
outs
dec
in
mov
mov
mov
ret
fimul
adc
pop
dec
rcr
mov
cmp
adc
or
iret
add
inc
mov
gs
sub
pushf
ficomp
dec
sbb
mov
push
inc
aas
push
xor
cmp
pushf
mov
jg
inc
mov
or
movs
test
call
xor
and
shl
loope
xchg
rol
add
sub
inc
sub
dec
add
pop
int
add
add
movs
sbb
push
inc
fistp
mov
gs
xchg
ror
mov
sub
push
sbb
sub
cmp
std
in
rcl
mov
push
xchg
dec
and
add
sub
shl
jg
enter
xchg
jl
(bad)
test
and
(bad)
sub
cmps
sub
in
leave
shl
enter
mov
mov
es
xor
fistp
jo
push
push
pop
and
das
loope
push
mov
das
loop
movs
inc
popa
mov
adc
and
pop
mov
fild
and
inc
and
js
pop
jo
retf
dec
out
retf
cmp
test
int3
jecxz
mov
inc
mov
pop
mov
out
mov
push
push
mov
or
push
or
dec
loopne
mov
aad
retf
cld
lock
mov
lock
movs
xor
inc
mov
mov
jne
inc
cld
pop
(bad)
int
shr
or
adc
cmp
xchg
pop
arpl
or
push
mov
bound
call
dec
dec
sbb
dec
fbld
mov
(bad)
pop
bnd
outs
pushf
push
dec
jno
pop
mov
and
xchg
mov
loope
repz
fcmovbe
out
inc
and
push
sub
add
imul
xchg
dec
inc
movs
ins
test
sub
xchg
push
add
xor
xchg
cmp
fisttp
or
mov
lea
xchg
movs
ret
pop
xchg
mov
inc
out
retf
aam
loope
mov
xor
add
push
jmp
cmp
jecxz
rcr
sub
and
or
pop
mov
pop
ss
add
vsubsd
push
cwde
mov
and
or
xchg
das
pop
or
pop
sub
in
adc
pop
cwde
xchg
mov
dec
scas
mov
inc
mov
inc
jmp
adc
add
add
aas
stos
push
jg
or
loopne
pop
jg
adc
mov
mov
push
test
mov
popf
loope
xchg
add
cmp
push
push
addr16
ror
sbb
out
(bad)
or
or
push
xchg
xchg
ins
imul
push
inc
pop
sub
xor
push
pop
add
mov
sbb
push
fisubr
loop
pusha
repnz
adc
jp
xor
icebp
sbb
clc
and
xor
sbb
dec
cdq
inc
popa
pop
dec
dec
mov
inc
jo
xchg
and
pop
bound
cld
dec
or
not
call
and
add
xor
in
inc
loopne
add
sbb
jl
push
sub
lea
inc
sub
cdq
adc
enter
loopne
jp
(bad)
scas
inc
or
or
cmc
inc
mov
add
and
das
nop
pop
scas
and
test
add
and
cmp
dec
repnz
xchg
xor
push
add
(bad)
and
lea
mov
sub
fwait
add
xchg
inc
sbb
lea
push
add
clc
test
add
mov
stos
jns
mov
jne
push
adc
jno
aaa
inc
fimul
call
add
mov
push
adc
stos
mov
lea
loopne
add
je
push
or
imul
in
or
jb
push
loopne
call
scas
or
jg
shl
leave
push
xchg
push
push
(bad)
pop
in
push
cmp
jae
xchg
mov
repz
mov
adc
test
lea
jmp
mov
xor
call
imul
sbb
push
mov
xor
(bad)
push
add
mov
mov
je
mov
add
rol
xchg
inc
push
nop
sbb
shl
rol
xchg
jo
push
sub
sub
adc
push
and
push
js
jmp
or
sub
adc
popa
add
test
push
mov
(bad)
loopne
xor
adc
add
icebp
loope
imul
sbb
fadd
mov
call
fidivr
push
cmp
add
inc
(bad)
loope
lods
xor
stos
push
mov
mov
mov
mov
push
mov
mov
add
out
adc
add
jmp
or
add
dec
sti
push
shr
shl
inc
adc
lahf
ret
add
sbb
lahf
push
or
or
push
mov
dec
adc
jp
lods
or
mov
inc
adc
aas
pushf
sub
push
sbb
push
movs
daa
dec
sub
ss
stos
movs
or
add
lahf
cmps
inc
mov
dec
fidivr
cld
dec
aas
adc
push
push
aas
xor
and
push
jp
sar
inc
imul
fwait
xor
push
rol
pop
jne
mov
sub
or
cwde
add
ror
adc
test
call
push
nop
inc
cmps
add
arpl
xchg
fwait
nop
repnz
repz
push
popa
or
je
push
inc
sub
or
push
nop
push
pusha
pop
add
mov
clc
add
adc
add
inc
loopne
jmp
imul
mov
mov
add
inc
push
fcmovnbe
imul
movs
push
repz
mov
adc
add
ss
xchg
test
inc
and
jmp
mov
shl
mov
mov
or
mov
into
push
add
outs
(bad)
das
xor
mov
fadd
retf
jae
mov
out
outs
es
loopne
push
lods
push
and
mov
inc
add
and
loope
xchg
push
shl
lods
(bad)
fsubr
jmp
and
cmp
(bad)
pop
or
and
fadd
pop
or
stos
stos
into
nop
jb
cmovne
add
xor
enter
pop
add
ret
jno
test
mov
jmp
jmp
and
inc
fwait
sbb
ja
or
jo
and
imul
lahf
and
loope
push
fsubr
imul
test
push
add
adc
and
cmp
jmp
mov
sub
bound
dec
int3
dec
loop
cs
xor
mov
test
lahf
test
and
fistp
dec
cmps
loopne
add
imul
cmps
or
(bad)
ffreep
jo
pushf
loopne
jns
cmp
shl
dec
xchg
pop
enter
pop
adc
push
jbe
les
pop
fmul
lods
lea
cli
icebp
je
(bad)
aam
fcmovnb
lods
pop
push
xor
add
scas
aam
inc
add
sar
lock
or
push
out
(bad)
(bad)
push
imul
inc
mov
xor
jmp
cmp
adc
mov
mov
add
add
aas
fs
test
pop
lods
pop
in
rol
fadd
icebp
add
add
iret
sbb
int
mov
cld
xlat
add
xchg
lds
test
add
fwait
loopne
mov
hlt
adc
sbb
sub
push
loopne
or
clc
and
inc
mov
(bad)
inc
add
pop
pop
push
or
jne
and
sar
add
inc
jp
jne
push
es
pop
xor
add
call
into
sbb
rcl
and
lods
pop
cmps
and
jg
or
cmps
lods
push
pop
aas
or
lea
push
pop
rcr
jg
adc
(bad)
jmp
xor
sbb
loopne
push
add
sbb
mov
aam
or
push
lock
jnp
cmp
in
mov
test
push
adc
mov
add
jno
push
loope
dec
add
dec
inc
adc
xchg
pusha
sbb
in
cs
call
lea
xchg
call
scas
xchg
test
add
(bad)
rcr
mov
dec
lock
in
adc
outs
dec
lock
sbb
jmp
ss
add
or
pop
dec
sub
cmc
cmp
mov
push
and
dec
mov
jmp
imul
jno
aam
pop
fadd
fsub
ror
mov
adc
test
add
aaa
lock
add
mov
push
cmp
fmul
add
in
fisub
in
in
xor
cs
in
(bad)
lock
push
test
in
mov
call
imul
pop
push
cmp
cmp
mov
aaa
lock
pop
loopne
or
xor
call
out
sbb
rcl
ret
sub
jmp
xchg
lahf
cli
or
mov
pop
add
imul
popa
inc
(bad)
inc
sbb
inc
test
or
(bad)
(bad)
sti
(bad)
or
and
and
mov
stos
push
sbb
xlat
(bad)
or
fwait
ds
cmp
or
jne
cmp
cwde
or
cmp
outs
inc
mov
sbb
jno
dec
inc
mov
adc
add
add
jle
adc
bound
adc
or
push
and
(bad)
fisttp
mul
imul
or
push
push
mov
xchg
(bad)
pop
mov
push
xchg
adc
or
push
ja
aam
inc
sub
mov
sub
dec
xor
fdivr
pop
pop
jne
sbb
sbb
fld
inc
es
add
call
inc
push
or
mov
sbb
xchg
sub
test
add
adc
sub
cmp
imul
and
inc
adc
jbe
retf
inc
ret
in
hlt
pop
and
push
sbb
add
cwde
adc
push
pushf
mov
push
or
push
(bad)
cmp
daa
fwait
sbb
nop
fisttp
push
and
jecxz
adc
jae
and
mov
xor
imul
jg
fcomip
ret
jo
push
xchg
add
mov
inc
mov
jp
push
(bad)
call
push
sbb
adc
xor
push
xor
inc
test
push
push
fsubr
push
adc
in
add
pop
clc
add
xchg
add
pop
loopne
cmp
cmps
mov
popa
inc
and
lock
add
cdq
pop
adc
fcomp
add
jg
pushf
cmp
std
pop
mov
loopne
adc
icebp
ror
loopne
cmp
pop
cmc
sbb
movs
inc
or
stos
mov
bound
mov
xor
shl
mov
inc
arpl
mov
fwait
inc
jnp
sbb
adc
sbb
push
add
test
sub
clc
scas
push
aad
das
inc
mov
push
inc
or
inc
jecxz
dec
scas
push
movs
js
hlt
add
or
ins
or
add
push
sub
adc
inc
in
pop
adc
fs
inc
or
sbb
pop
and
mov
loop
out
test
adc
pusha
addr16
push
push
enter
mov
or
scas
arpl
pop
pop
adc
or
jmp
mov
(bad)
rcl
mov
rcl
mov
dec
or
adc
and
je
lock
sbb
mov
inc
daa
mov
and
and
jne
mov
(bad)
pop
pop
mov
and
mov
add
dec
inc
mov
ins
or
inc
sbb
adc
ja
pop
dec
adc
stos
fwait
cmp
cmc
jmp
pop
dec
inc
ins
add
xchg
call
inc
mov
adc
or
sbb
adc
or
sbb
sub
add
mov
and
dec
sbb
sbb
xor
sbb
xchg
pop
mov
aaa
adc
lahf
rol
sahf
mov
loopne
loopne
mov
mov
movd
adc
push
pop
jmp
stos
inc
lahf
cdq
call
add
inc
mov
push
stos
mov
dec
or
ss
clc
inc
xchg
xor
sub
fisub
loope
cmp
dec
add
mov
push
leave
sbb
adc
push
jmp
loopne
add
aam
dec
pop
cld
sbb
es
pop
sbb
mov
js
dec
sub
sbb
jmp
push
push
mov
mov
fild
pushf
add
jp
and
call
shr
add
lahf
add
lods
sub
rol
(bad)
test
and
cmp
inc
(bad)
inc
(bad)
pushf
mov
pop
inc
and
add
bound
inc
adc
and
adc
hlt
(bad)
mov
dec
and
cmps
test
sub
js
mov
pop
ss
mov
or
fiadd
cdq
dec
mov
fld
(bad)
rsqrtps
icebp
sbb
fs
loopne
push
int3
push
inc
dec
push
cmp
cmp
and
add
in
mov
sbb
test
adc
xchg
adc
sbb
jno
and
loope
sbb
pop
xor
ins
pop
cmp
aam
dec
push
push
inc
mov
aad
loop
lea
int3
mov
add
call
rol
popf
pusha
(bad)
sar
scas
dec
adc
ret
dec
adc
les
jmp
(bad)
in
push
push
jg
or
int3
push
jne
pop
xor
cdq
lock
or
adc
add
lock
inc
or
movs
jl
imul
adc
shl
sub
lea
popa
sbb
dec
jnp
push
or
imul
mov
arpl
inc
mov
cmp
xor
adc
cwde
nop
mov
and
add
pop
and
sbb
mov
pop
lock
mov
adc
cwde
pop
mov
cmp
dec
aad
mov
pop
in
or
call
dec
(bad)
fbstp
dec
mov
push
add
add
aad
lahf
adc
mov
add
sbb
aad
es
xchg
ror
add
add
sbb
rol
sbb
mov
adc
sub
or
push
pop
(bad)
push
pop
pop
(bad)
xor
out
mov
adc
xlat
inc
or
add
inc
push
xlat
mov
or
pop
adc
inc
xchg
jne
int3
lahf
or
push
inc
dec
xor
inc
or
rol
inc
mov
sbb
cmp
mov
push
arpl
retf
mov
and
rol
mov
adc
dec
inc
xor
push
inc
daa
test
add
inc
sbb
out
pusha
sub
add
xchg
invd
jbe
adc
test
push
das
sbb
test
adc
sub
dec
dec
ja
xor
cmps
adc
test
inc
and
rcr
cwde
and
shl
mov
add
loope
pop
retf
add
jb
and
pop
mov
loope
add
mov
add
push
push
and
adc
dec
xor
aaa
cmp
mov
fmul
bound
sub
sub
mov
lods
add
das
sub
sbb
enter
add
in
movs
test
mov
sbb
add
cmp
aas
adc
add
mov
das
xor
adc
or
retf
shl
sbb
mov
add
shl
add
sbb
loopne
loopne
rcl
mov
cmp
push
sti
push
xchg
jp
add
adc
icebp
fst
lds
test
ss
sub
add
inc
xchg
(bad)
mov
out
stos
sub
sar
xchg
cmp
add
clc
test
push
int3
and
sub
fisttp
dec
dec
inc
sbb
mov
mov
sbb
push
dec
leave
pop
inc
xor
enter
leave
enter
add
and
add
repnz
and
inc
dec
xchg
fdivr
pusha
xor
aad
sbb
arpl
sbb
int3
push
inc
pop
xor
push
mov
ins
lahf
and
leave
adc
cld
mov
leave
dec
das
cmp
mov
pop
test
jmp
fs
pop
and
punpckhwd
add
add
arpl
or
adc
jmp
mov
sub
cs
push
push
and
xchg
out
inc
and
add
push
add
jg
adc
arpl
push
or
stc
test
mov
cmp
dec
push
test
or
in
jae
add
sub
popa
out
ret
or
pop
xor
dec
das
stos
fild
fild
xchg
add
and
push
adc
enter
aad
sbb
jmp
mov
sub
inc
cmps
mov
xchg
mov
inc
push
dec
push
sbb
or
or
or
xor
test
sbb
jb
xor
sbb
xor
repnz
add
mov
dec
in
jg
mov
mov
adc
cdq
or
dec
sbb
mov
test
rcr
add
add
mov
push
mov
lea
pusha
sub
int3
mov
xor
xor
xor
nop
pop
cmp
bound
sar
xchg
mov
aas
enter
imul
add
dec
cmp
cli
les
in
push
pop
xchg
jge
sbb
sub
popa
sbb
out
mov
or
dec
in
pop
inc
pop
(bad)
jle
out
in
sbb
and
sub
ins
cmp
jmp
lods
enter
out
in
add
test
jmp
je
shl
aas
adc
mov
dec
sbb
loope
test
int3
pop
inc
mov
dec
inc
push
mov
cmp
xlat
mov
stos
push
adc
adc
mov
dec
mov
test
mov
rol
ds
inc
test
xchg
or
sbb
add
and
cdq
add
sub
sub
push
adc
popa
or
(bad)
mov
pop
mov
cmp
rol
dec
add
add
mov
fwait
sbb
popa
mov
pop
or
inc
pop
xor
pop
ror
add
mov
inc
push
cld
adc
hlt
ja
inc
aaa
aad
add
jns
(bad)
push
jmp
push
push
adc
xlat
cmp
sbb
(bad)
nop
add
dec
jmp
jo
push
and
xchg
fst
(bad)
stc
add
add
in
add
push
cmp
cmp
aaa
mov
ins
in
adc
or
lods
mov
pop
ror
imul
sub
dec
sub
jmp
aam
(bad)
(bad)
cmp
add
in
das
inc
jno
or
add
cmps
push
(bad)
inc
in
mov
jmp
adc
add
xor
inc
test
ror
aas
add
ins
in
mov
nop
pop
je
jmp
test
(bad)
add
enter
in
add
adc
push
and
mov
sbb
pop
jp
jo
jg
dec
outs
je
mov
inc
jg
push
repnz
mov
pop
sub
inc
sbb
push
xchg
cmp
sbb
dec
adc
shl
jg
mov
push
jo
lds
ror
(bad)
add
jg
outs
mov
jg
jecxz
dec
mov
inc
jg
mov
outs
or
das
jg
pop
push
repnz
sbb
pushf
mov
jg
cld
push
add
xchg
push
push
add
dec
dec
inc
jg
aaa
inc
add
jb
add
push
dec
pop
fcomp
jg
adc
adc
js
or
or
in
loopne
or
jno
lods
in
cld
xor
pop
lods
pop
cmp
aas
add
inc
xor
sub
fisttp
arpl
lea
mov
push
or
ja
or
test
aad
add
fild
and
add
push
mov
push
xor
jns
push
add
adc
call
ret
pop
dec
push
xchg
sbb
in
leave
cmps
sbb
sbb
imul
out
mov
jns
pop
add
mov
add
pop
pusha
add
mov
pop
lea
push
and
in
pop
ins
in
ror
pusha
jno
mov
pop
push
pop
add
pushf
fs
pop
xor
adc
ja
mov
add
test
jge
sbb
stos
jge
call
dec
jo
and
(bad)
movhps
jo
mov
jl
mov
adc
or
mov
mov
dec
ficomp
popa
add
adc
sub
add
sbb
adc
adc
mov
dec
arpl
int
aaa
jbe
ins
imul
les
repnz
fmul
loopne
pop
mov
xchg
(bad)
mov
add
inc
(bad)
inc
ins
sbb
pop
add
femms
or
adc
inc
gs
xchg
xor
jae
mov
gs
adc
lds
dec
nop
ficomp
std
push
jmp
test
and
test
fcom
test
lods
pop
dec
push
ret
adc
dec
inc
push
xor
adc
mov
adc
push
mov
inc
pop
mov
push
lods
or
push
mov
sub
push
dec
rol
cmps
cwde
and
jb
and
in
dec
test
mov
inc
mov
and
ins
in
movs
or
mov
lahf
shl
test
in
dec
pop
or
jns
lahf
pop
dec
dec
sbb
inc
dec
test
or
add
lahf
push
daa
pop
dec
add
xchg
pop
cmp
enter
pop
test
jb
inc
pop
cdq
and
add
pop
loopne
xor
push
sub
loope
add
or
gs
adc
pop
(bad)
sub
or
aaa
adc
lahf
xor
jns
dec
push
add
mov
jmp
mov
shr
cmp
push
mov
cmp
add
inc
sysret
or
sbb
nop
cld
dec
clc
icebp
sub
mov
or
push
sbb
cmp
mov
ficomp
cmp
cmp
sbb
popf
cld
fwait
fwait
sub
dec
popf
or
push
ror
test
cmps
hlt
push
mov
push
push
es
test
rol
mov
retf
inc
push
push
pop
clc
and
push
stc
jmp
add
rol
add
add
pushf
pop
xor
pushf
mov
adc
test
pop
int3
mov
fucomip
push
out
push
repnz
push
fbld
mov
push
cmp
iret
pop
call
pop
add
cmc
dec
xchg
fild
jmp
or
add
mov
adc
cmc
sbb
adc
adc
jbe
bound
(bad)
and
outs
cmp
inc
or
add
cmp
pop
pop
or
add
mov
imul
and
fiadd
jecxz
and
lock
das
test
or
add
add
jl
mov
mov
test
test
addr16
and
and
dec
xchg
xor
add
mov
or
movs
and
sub
adc
or
test
add
mov
hlt
add
push
shr
test
aas
push
dec
dec
rol
jae
inc
cli
fdiv
adc
nop
pop
add
inc
or
or
xor
mov
aas
lods
push
inc
or
jl
inc
mov
or
or
aas
xor
inc
push
test
add
adc
js
sbb
pop
ja
test
mov
lea
push
dec
retf
adc
sbb
inc
adc
and
das
sub
repnz
jns
mov
adc
test
inc
ja
pop
or
in
and
dec
and
sub
add
add
and
sbb
movs
aas
mov
aas
scas
test
adc
jl
or
mov
test
int3
pop
add
push
dec
aas
jge
(bad)
movs
add
cld
lahf
add
adc
or
sbb
fsub
sar
xchg
mov
adc
or
or
retf
mov
pop
movs
rol
mov
je
adc
sti
lock
or
ss
sub
adc
pop
jg
jb
pusha
push
lahf
cmp
inc
push
adc
fcomp
mov
pushf
lahf
cld
in
repnz
and
xchg
pushf
dec
cld
xchg
test
repnz
xchg
mov
or
lahf
add
push
mov
inc
push
push
enter
mov
add
dec
push
add
lahf
sub
inc
dec
mov
or
das
push
lahf
dec
cld
ret
add
adc
js
push
pop
ss
arpl
or
daa
dec
and
cs
adc
lea
movs
push
imul
cwde
aam
and
xor
pushf
xor
add
push
in
adc
lahf
fwait
rol
shr
stc
push
lahf
mov
lds
sbb
icebp
test
add
xchg
or
mov
fadd
add
cwde
dec
jne
ret
or
sub
or
inc
sbb
cmps
adc
adc
rcl
sbb
mov
cwde
sub
popf
es
mov
add
clc
push
jo
fs
fistp
(bad)
inc
sti
in
in
rol
popf
sbb
sbb
and
xor
xchg
adc
pop
fiadd
sbb
loope
xor
xchg
pop
cld
xchg
push
cmp
imul
mov
pop
jl
cmps
leave
xor
nop
mov
adc
adc
jne
fwait
jne
inc
sar
mov
and
sub
cmp
ror
jno
or
jmp
adc
add
add
cmp
and
fstp
clc
mov
or
icebp
push
iret
mov
inc
mov
mov
ds
pusha
lock
or
out
jecxz
mov
or
fwait
xchg
mov
and
or
call
mov
lea
cs
loopne
adc
push
or
adc
ja
push
idiv
fs
and
dec
int
pop
xchg
or
fcomp
in
mov
aam
aam
les
ficomp
out
pop
jb
cwde
and
and
mov
enter
adc
les
cmp
(bad)
ror
inc
es
adc
nop
or
shr
mov
xchg
mov
mov
ds
dec
push
mov
push
fwait
mov
stc
in
test
in
lods
sub
mov
movs
mov
movs
mov
loope
xchg
mov
fcmovne
adc
movs
jl
stc
enter
retf
sbb
adc
fcomi
xchg
aas
rcl
xchg
xchg
nop
push
sbb
ret
sbb
test
int
mov
adc
pop
scas
mov
push
je
test
imul
aas
add
dec
mov
sub
shl
sbb
fucomip
push
out
and
adc
jo
mov
lahf
inc
mov
mov
dec
push
push
pop
daa
mov
inc
loopne
lds
cwde
enter
aam
ret
in
test
mov
sub
sub
fincstp
loope
aad
mov
lea
jns
xchg
xchg
ins
(bad)
js
int
das
mov
arpl
mov
pop
stc
mov
pop
adc
mov
adc
orps
popa
punpckhbw
ins
int3
push
and
push
movs
dec
(bad)
sbb
lahf
pop
pop
push
and
retf
and
pop
pop
pop
pop
leave
mov
mov
pop
and
(bad)
push
jns
push
adc
std
or
cmps
dec
pop
fcomp
jle
jb
sbb
mov
inc
sub
sbb
xor
sub
dec
add
mov
adc
add
and
and
fsub
loope
dec
add
rol
pop
cmp
sbb
cwde
xor
adc
les
xor
ins
jl
inc
push
push
ins
push
(bad)
cwde
push
outs
dec
jge
pushf
mov
movs
fcmovb
adc
js
std
push
outs
xor
mov
add
fwait
ja
dec
add
mov
ret
mov
sub
mov
sbb
mov
inc
pop
repnz
xor
inc
inc
cmp
adc
dec
push
or
mov
push
add
popa
sub
inc
nop
push
pop
aaa
add
iret
les
inc
push
or
jnp
mov
inc
push
leave
out
inc
push
fwait
inc
dec
cld
in
cld
in
inc
cmps
in
mov
fstp
loope
pop
sub
sub
sbb
push
in
adc
xor
mov
inc
enter
paddusw
and
mov
pop
(bad)
xchg
ds
fild
adc
lea
scas
ficom
mov
push
mov
sub
nop
xchg
ds
fs
nop
pushf
inc
cld
mov
arpl
pusha
mov
js
and
inc
cmps
dec
dec
cli
cld
test
lods
xor
adc
jae
xor
jl
add
cld
jae
xchg
stos
fwait
jns
cld
and
fmul
or
cld
jns
push
xchg
(bad)
adc
pop
lea
fsubr
cld
jg
add
push
call
lds
mov
jg
cld
and
adc
(bad)
adc
cmp
cli
mov
pusha
cmp
pop
jge
push
or
sbb
cld
cmp
cmp
mov
jbe
jo
mov
pop
mov
xchg
jl
mov
xor
loopne
jno
pop
int3
push
icebp
popa
jno
cld
(bad)
dec
sbb
popa
dec
pop
aas
aam
rcr
jns
xchg
retf
sub
jp
inc
pop
adc
mov
popf
dec
lea
lock
mov
sub
or
fwait
cmp
push
bound
or
shl
mov
or
and
mov
adc
mov
adc
sti
movs
test
or
or
cmp
dec
rep
movs
aaa
pop
ds
cdq
dec
lods
adc
push
pop
xchg
mov
nop
pop
pop
pop
movs
mov
pop
(bad)
adc
pushf
(bad)
fldlg2
repnz
jo
push
mov
cwde
test
mov
xchg
xchg
pop
shl
sbb
pop
out
and
test
mov
or
xor
cs
push
test
jnp
adc
mov
jl
lea
js
stc
idiv
je
je
inc
ds
push
mov
inc
fild
push
dec
adc
push
outs
pusha
pop
jbe
(bad)
sbb
and
sbb
imul
call
or
repnz
test
mov
sbb
lea
xchg
pop
pop
pop
pop
pop
push
xchg
push
lock
rcl
push
lods
clc
jl
pop
cmp
lahf
cmp
adc
ja
dec
dec
and
(bad)
push
mov
cld
cmp
jne
xor
sub
or
iret
fwait
sbb
push
sbb
in
pop
pop
jo
cmp
stos
push
addr16
sub
inc
das
cmp
das
lea
inc
icebp
mov
add
les
movs
je
fs
adc
fwait
leave
aam
js
adc
imul
int3
cmps
push
(bad)
int3
jne
dec
dec
jno
std
push
dec
dec
and
sbb
sahf
fistp
jecxz
pop
lahf
jge
test
and
xor
jecxz
mov
inc
cmp
adc
push
pop
pop
std
movs
xor
jo
adc
xor
call
std
movs
xor
jo
wrmsr
sub
push
add
sub
repnz
sub
sub
jns
iret
das
mov
and
sysret
and
pop
sbb
sar
dec
int
unpckhps
adc
sub
in
pushf
sbb
call
cmp
pop
loope
adc
das
or
mov
mov
sbb
iret
test
test
ja
sub
mov
stos
mov
push
xchg
mov
repnz
lahf
add
test
jg
(bad)
adc
cmp
pop
and
adc
mov
sbb
ds
adc
cmp
adc
cwde
ret
adc
adc
add
dec
fsub
add
repnz
or
add
inc
or
sbb
loopne
jo
jb
loope
fmul
push
push
add
(bad)
popf
and
push
daa
test
cdq
cmp
cmp
sbb
xor
add
cmp
and
rol
adc
cld
fldcw
clc
dec
fst
adc
cs
cmp
jmp
mov
(bad)
in
std
in
dec
pop
xchg
push
and
call
sbb
cmp
leave
sar
inc
mov
push
adc
xor
icebp
fadd
(bad)
fadd
xchg
xor
sub
jo
push
aam
pop
pop
imul
ror
imul
icebp
pop
or
dec
jg
hlt
lea
sbb
add
(bad)
enter
jmp
inc
mov
loopne
pop
sbb
fwait
and
sub
fild
repnz
inc
dec
jmp
inc
and
add
in
xor
dec
mov
add
ins
dec
out
xchg
ret
sbb
lea
pusha
fwait
push
add
daa
pushf
aad
js
rcl
or
imul
or
lock
lock
add
dec
pop
mov
inc
rol
xor
mov
lods
add
cmps
out
pop
push
dec
loopne
loopne
test
fcom
aad
leave
adc
fxam
rcr
fcom
fwait
or
mov
push
out
xor
int3
dec
pusha
loop
or
mov
or
xchg
pop
inc
jg
or
(bad)
adc
int3
mov
shl
shl
mov
lock
add
add
aas
xchg
pop
aaa
sub
mov
add
repz
sbb
lods
std
inc
lods
ret
shl
inc
aas
rol
ror
or
dec
loope
or
xchg
pushf
xor
outs
jmp
test
ds
ss
ins
sbb
jnp
adc
out
inc
fist
push
lea
jle
push
push
jg
mov
mov
and
cmc
lea
in
enter
pop
or
dec
add
fisttp
fcmovnbe
shl
mov
not
sbb
adc
(bad)
std
mov
inc
pop
mov
sbb
ret
cmp
xor
bound
inc
xchg
in
adc
mov
dec
adc
pop
sub
inc
sub
adc
mov
mov
add
adc
jno
cmp
mov
stc
pop
jl
std
mov
inc
leave
cmp
je
xchg
shl
je
jo
lea
add
and
pop
mov
or
push
outs
dec
mov
fs
dec
loopne
adc
push
cmp
test
lods
mov
sbb
sbb
add
retf
sub
push
add
scas
pusha
or
ror
dec
pop
dec
dec
dec
cwde
in
xor
test
inc
xchg
adc
dec
imul
lds
sbb
inc
add
jmp
mov
ret
call
cmp
js
add
test
mov
fcomp
cmp
sbb
das
mov
ins
and
add
pop
enter
or
dec
pop
es
(bad)
rol
aas
outs
pop
dec
jo
je
leave
cmp
add
fmul
mov
mov
hlt
bound
jb
xor
push
cmp
fbld
fcmovb
mov
and
mov
jmp
sbb
mov
rcl
pop
ret
jge
icebp
fdiv
loop
push
pop
xor
or
inc
gs
xor
sbb
ins
xor
add
sub
cmps
jno
push
cmps
sub
push
outs
push
cmp
sbb
and
bound
xor
out
cmp
dec
mov
(bad)
fstp
mov
pop
add
add
out
xor
add
adc
arpl
adc
mov
stos
mov
cmp
and
cmp
mov
js
pusha
rol
nop
pop
movs
cs
or
mov
inc
int
in
or
or
cwde
inc
adc
clc
xor
jnp
add
icebp
aaa
hlt
retf
mov
jo
enter
dec
add
mov
movs
pusha
add
sbb
aad
in
jae
inc
lock
add
mov
pop
push
sbb
inc
adc
lock
jnp
mov
in
rol
xchg
cs
xor
add
jg
mov
mov
sbb
imul
cmp
add
loope
(bad)
les
push
cmp
ficom
and
dec
xchg
mov
cmp
jae
mov
add
outs
sub
ret
jnp
rcr
ror
lock
cmp
and
sub
inc
loop
mov
mov
push
add
mov
mov
hlt
shl
mov
mov
sub
fdiv
test
sub
loopne
not
add
sbb
sub
fmul
(bad)
xor
jle
loopne
xor
xchg
or
sub
int3
inc
push
push
sbb
and
and
fdivr
pop
mov
lahf
push
xor
mov
mov
lock
mov
xchg
cli
rcl
xchg
add
jmp
push
cmps
fisubr
scas
or
sbb
lahf
sub
ror
adc
push
pusha
xor
mov
outs
push
add
dec
xor
dec
inc
test
loope
lock
mov
adc
push
jle
and
xchg
add
cmps
lahf
adc
test
jmp
sbb
pop
movs
inc
and
repz
aad
push
xchg
aad
sahf
sub
inc
and
ins
add
pop
jg
and
xchg
nop
mov
jo
inc
mov
jle
ja
test
test
sub
ins
pop
movs
pxor
fdiv
pop
cs
push
cmp
mov
and
push
adc
icebp
outs
inc
adc
push
fld
push
push
fld
mov
dec
fmul
dec
fadd
xchg
and
popf
jnp
loope
aaa
fcomp
pop
hlt
pop
or
push
jge
fistp
add
fistp
pop
sbb
cdq
ds
push
adc
sbb
test
enter
ins
outs
fdiv
aad
bound
aas
mov
or
add
or
in
push
fcom
or
inc
daa
adc
dec
adc
daa
inc
xlat
push
xchg
ret
pusha
cmp
jmp
jmp
adc
dec
gs
jmp
mov
or
aas
cmp
dec
ins
mov
inc
xchg
fwait
inc
adc
dec
es
movs
xor
and
mov
enter
or
sbb
in
ret
int
inc
sub
and
pop
mov
fcomp
loope
mov
xchg
and
jne
inc
and
sub
push
adc
push
or
adc
cli
dec
cmp
loopne
repnz
add
in
popa
sbb
test
mov
add
xchg
(bad)
mov
repnz
jmp
adc
sbb
(bad)
push
inc
jge
inc
(bad)
sti
shr
xchg
outs
mov
adc
sbb
nop
data16
js
pop
ds
out
test
and
out
jge
jecxz
lods
in
sbb
sub
fs
jo
ret
gs
adc
movs
add
cwde
popf
cmps
inc
scas
jmp
out
test
sahf
cld
out
and
mov
popf
rcl
test
jmp
add
and
lods
js
mov
in
fwait
jmp
jmp
mov
and
jmp
adc
ret
sub
ss
popf
aad
mov
push
mov
hlt
sub
stos
mov
bound
and
outs
in
adc
ret
shl
add
pop
neg
push
sub
adc
push
fsub
adc
dec
imul
and
sbb
loope
dec
int3
cld
jne
iret
or
out
stos
in
xor
icebp
mov
push
fstp
dec
in
push
in
push
mov
adc
pop
pop
dec
les
mov
xor
inc
push
add
mov
push
dec
pop
(bad)
ins
rol
pop
inc
push
mov
push
push
mov
enter
and
fstp
mov
clc
push
pop
or
and
outs
mov
pop
mov
sub
push
bound
ja
sbb
(bad)
rcr
(bad)
mov
std
mov
mov
or
add
pop
xchg
fwait
jg
and
or
mov
and
push
or
sbb
fisttp
sbb
neg
mov
sbb
ret
imul
lods
mov
dec
(bad)
adc
(bad)
std
div
xchg
add
int3
mov
push
pushf
int3
or
jmp
and
inc
push
inc
fsubr
mov
dec
push
and
add
lahf
dec
dec
cmp
fcom
add
and
pop
lods
mov
and
mov
xchg
fdivr
lods
add
call
xchg
dec
and
dec
adc
stos
int3
int
pop
ds
or
or
call
add
xchg
pop
sti
add
sti
add
test
sub
in
enter
dec
adc
dec
daa
lock
push
ror
imul
sahf
adc
shl
xor
pop
jo
scas
mov
repz
xor
jnp
in
loopne
shl
ja
mov
rcr
sbb
dec
pusha
adc
ja
loope
shl
lods
adc
lods
fmul
and
inc
(bad)
dec
test
cmp
hlt
adc
dec
ins
mov
adc
loope
pop
js
in
push
or
pop
push
lea
fs
fist
jl
mov
imul
add
(bad)
arpl
dec
mov
shl
xchg
jnp
ins
inc
xchg
pop
xchg
xlat
sar
jnp
xchg
shl
push
xchg
in
ins
cmp
sbb
and
xor
pusha
aad
shl
cmp
push
cmps
inc
js
popf
call
bound
jo
popa
test
loope
gs
push
fisttp
fs
retf
pop
mov
or
mov
dec
or
cwde
jp
int
mov
in
xor
sbb
adc
or
mov
sbb
vprotq
add
pop
(bad)
push
xor
jne
je
xchg
sub
and
mov
mov
std
adc
adc
or
shl
jo
push
out
jl
lahf
(bad)
movs
mov
and
dec
ss
shl
inc
xchg
inc
push
clc
cmps
and
outs
push
dec
inc
adc
pusha
bound
loopne
sbb
cmc
fldenv
pop
in
xchg
pop
scas
cmc
pushf
push
mov
les
in
shl
or
pusha
mov
(bad)
jae
pop
in
mov
test
push
jl
or
cmp
adc
pop
ret
nop
fwait
shl
and
jne
retf
mov
sti
adc
ror
(bad)
mov
cmps
dec
fistp
bound
cmp
mov
dec
in
std
push
and
ss
pop
push
cli
mov
repnz
cmp
push
and
pop
fwait
xor
xor
test
mov
dec
fwait
or
inc
add
adc
(bad)
(bad)
mov
inc
or
inc
dec
sub
test
cld
push
or
jmp
pop
or
add
call
pop
cwde
jp
enter
xor
add
push
ss
fdivr
setnp
loopne
pop
dec
add
push
loopne
and
std
jecxz
add
jge
xchg
and
dec
daa
add
or
and
xor
(bad)
adc
scas
push
movs
add
loopne
sub
mov
loopne
push
mov
cld
xchg
gs
out
mov
adc
push
fstp
sub
or
jbe
sti
mov
push
je
add
push
fs
xor
add
xor
(bad)
or
mov
jge
dec
jne
aam
or
push
sbb
sbb
cs
add
jne
lods
xchg
xor
jge
shr
sub
popf
mov
cmp
and
ret
sbb
sbb
cli
push
adc
pop
xlat
jmp
inc
imul
popf
or
add
ss
push
xor
fwait
pop
xor
xor
jmp
push
(bad)
adc
cmp
jp
add
adc
xor
push
add
stos
inc
dec
js
xlat
inc
hlt
shr
and
fild
cmp
lea
inc
imul
clc
cmp
mov
push
inc
push
shr
lods
sbb
or
dec
adc
xor
outs
das
in
ss
adc
or
cmp
sbb
call
jae
dec
inc
cs
lock
rcr
jne
sub
mov
jmp
(bad)
jns
rcr
mov
add
cmps
cmp
popa
retf
lock
xchg
cmp
stc
cmp
ja
jge
push
mov
rcl
cmp
enter
and
inc
mov
jae
clc
mov
and
cmp
lock
push
mov
lock
rcr
or
adc
cld
sar
mov
test
pop
add
pop
cld
jne
outs
sahf
push
cmp
cmp
and
push
(bad)
out
ret
or
shl
in
adc
movups
xchg
cmc
loop
cmps
adc
shl
inc
cld
push
dec
cmp
mov
adc
pop
ds
xor
mov
mov
xchg
int
dec
inc
and
dec
lock
fidivr
clc
mov
jmp
xor
xchg
jno
cld
(bad)
je
out
add
mov
jne
sbb
lds
and
or
sub
xor
sub
pop
cmp
mov
xchg
mov
mov
xchg
inc
ins
cmp
push
cdq
inc
or
nop
adc
push
lods
xchg
adc
mov
push
shl
(bad)
jmp
push
pusha
fwait
add
iret
fs
test
lods
lds
push
pop
icebp
add
sub
(bad)
xchg
test
mov
cmp
dec
pop
xchg
das
or
jns
pop
dec
mov
dec
jns
add
mov
xor
mov
popf
rol
jb
mov
test
scas
mov
iret
cmp
or
mov
pop
bnd
jo
mov
sbb
mov
push
push
and
cmp
pop
fwait
push
lods
lea
cmp
mov
addps
and
jg
inc
or
xchg
(bad)
ss
mov
push
inc
push
loope
dec
fist
lock
leave
retf
xchg
test
int3
test
dec
xchg
dec
adc
dec
add
or
sbb
push
jmp
lock
aaa
dec
leave
fld
push
movs
cmc
and
ret
test
bound
(bad)
jne
dec
pop
add
outs
enter
ins
or
addr16
fs
push
repnz
clc
out
(bad)
sub
jb
or
dec
xor
xchg
por
inc
dec
pushf
mov
cmps
mov
pushf
jmp
sbb
sub
lods
ss
clc
and
add
dec
adc
adc
push
outs
adc
push
shl
push
sbb
sub
push
push
into
outs
push
cwde
icebp
das
xor
dec
aas
add
ds
mov
enter
add
int
lahf
pop
pop
or
pusha
add
sub
lock
or
sbb
mov
sub
adc
sbb
xor
pop
rcl
inc
and
and
jmp
or
push
icebp
adc
pop
adc
xor
xor
add
push
push
dec
mov
aas
adc
je
sub
push
fcomp
pop
dec
xchg
lods
mov
add
adc
or
add
fadd
xlat
mov
and
mov
cld
in
loop
rcr
sti
fcomp
mov
dec
cld
cmp
mov
sub
(bad)
adc
dec
dec
aad
cmpxchg8b
sub
pop
mov
and
add
add
std
lahf
and
jl
aas
sub
push
pop
call
shl
cmps
in
jmp
stc
or
mov
mov
or
les
(bad)
push
pop
ja
ins
add
addr16
mov
jle
jmp
mov
add
sar
aaa
jp
cdq
lea
clc
ss
xlat
lea
mov
je
add
test
mov
lea
pop
and
fdiv
loope
call
loope
test
mov
sar
jne
inc
push
inc
cmp
add
and
ret
fiadd
push
ss
adc
and
or
push
icebp
dec
push
pop
lods
lea
push
add
lods
pop
and
sahf
or
pop
test
add
in
ds
sub
(bad)
sar
sub
pop
je
lock
pop
sbb
loop
push
dec
pop
mov
or
js
outs
mov
add
fwait
es
mov
int3
and
(bad)
inc
cli
fidivr
and
cmp
xor
dec
loopne
out
cli
dec
dec
push
es
sub
mov
sbb
inc
sti
add
push
in
int3
inc
in
ficomp
cmc
(bad)
fiadd
fsub
clc
jl
pusha
clc
pop
or
(bad)
fld
ins
add
movs
sti
(bad)
dec
or
and
sub
cs
jg
jbe
shl
loopne
pusha
mov
inc
lods
mov
cmps
cmp
jmp
mov
push
jmp
bound
les
imul
jg
test
fcom
lds
mov
cli
pop
dec
fwait
stos
add
push
push
aam
in
push
mov
and
inc
adc
shr
leave
add
xchg
imul
sbb
xchg
inc
sub
pop
push
aaa
rcl
and
mov
add
fwait
idiv
cmp
imul
add
jle
mov
shr
fwait
outs
arpl
sbb
punpckhbw
jno
(bad)
mov
jnp
jmp
outs
xchg
xor
js
in
inc
add
aad
and
add
cld
push
rcl
fild
adc
jno
loopne
fld
sub
adc
pop
adc
add
add
pop
cmp
rcr
push
dec
push
sbb
test
xor
imul
xchg
sub
ja
dec
loopne
xor
lods
jne
or
imul
rol
in
xlat
in
cld
inc
and
in
add
add
add
add
lock
fadd
fsubr
add
and
inc
fadd
add
fadd
and
in
aam
imul
inc
and
in
add
pop
imul
in
add
enter
imul
add
and
inc
enter
shl
enter
and
in
les
imul
inc
and
in
add
or
add
add
pushf
inc
mov
fdivr
imul
inc
loopne
add
mov
imul
mov
imul
inc
lods
adc
and
lods
push
and
add
add
movs
adc
pop
nop
add
add
imul
inc
pushf
adc
nop
pushf
cmp
push
imul
inc
loopne
add
xchg
pop
imul
nop
sbb
add
and
inc
mov
imul
nop
mov
clc
inc
mov
imul
add
add
sbb
fmul
add
inc
sbb
and
sbb
stos
cmp
ja
add
adc
push
ja
adc
pop
jbe
add
je
sbb
jo
and
xor
add
or
ja
inc
and
rcr
ror
pop
add
xor
addr16
add
and
jo
and
addr16
sub
sbb
rcr
pop
inc
and
mov
das
dec
or
ja
pop
pop
je
cmps
pop
fiadd
rol
or
xor
ja
xor
pusha
pop
and
xor
ja
add
push
sub
pop
add
xchg
sbb
dec
je
cmps
xor
add
fdivr
inc
dec
add
dec
je
cmps
add
dec
push
dec
add
pop
add
rcr
inc
sub
int3
sbb
mov
in
je
cmps
inc
movs
or
ja
pop
cmp
sub
lds
cs
xor
ja
jl
enter
xor
das
ja
in
sbb
xor
inc
xor
add
or
ja
inc
xor
rcr
rcl
xor
xor
inc
addr16
enter
ss
add
push
and
inc
aaa
ja
push
mov
sub
mov
add
cmp
pop
inc
sbb
add
in
push
add
shr
ret
stos
xor
pop
inc
lahf
imul
pop
icebp
loope
pop
cld
imul
and
sbb
aas
mov
dec
add
sbb
loope
mov
dec
mov
and
add
cmp
sbb
nop
add
mov
add
pop
dec
mov
cmp
add
or
mov
sahf
(bad)
cli
shl
add
add
int3
mov
test
popa
xchg
aam
xor
or
push
imul
out
xchg
or
and
inc
xor
push
xlat
(bad)
push
cmp
in
lea
pop
shl
cld
push
or
loope
push
push
js
loope
(bad)
hlt
clc
and
stos
neg
xor
arpl
mov
(bad)
or
enter
jmp
pop
inc
sbb
xor
sbb
sti
xchg
jne
cmp
and
pop
push
(bad)
in
xor
ret
mov
and
(bad)
out
cmp
inc
outs
dec
addr16
xor
sub
adc
jmp
mov
jmp
sub
mov
add
cld
cdq
call
lea
(bad)
xlat
das
inc
cld
mov
sbb
into
pop
mov
jge
out
sti
pop
enter
add
or
or
cld
lods
sti
adc
ins
or
int3
arpl
in
std
xchg
(bad)
int
sub
and
or
adc
cs
xchg
add
retf
add
sar
ds
or
push
enter
mov
or
pop
ins
adc
push
add
mov
and
(bad)
pop
mov
mov
mov
fwait
inc
packuswb
or
inc
lock
and
mov
adc
pop
ror
cmp
xchg
adc
push
push
add
or
jg
pop
lahf
clc
adc
int3
add
mov
or
adc
test
add
jbe
xchg
fisubr
mov
in
fcom
call
mov
loopne
out
xchg
lea
mov
or
sar
loope
jnp
lea
sub
test
dec
icebp
pusha
fidiv
pop
jae
jno
and
inc
cmp
not
retf
cmp
add
bound
test
mov
enter
movs
mov
mov
cmc
pop
pushf
out
and
loope
fs
pop
jne
shr
outs
or
pop
pop
lods
pop
adc
jg
mov
mov
stos
ror
push
inc
lock
repnz
pop
adc
sbb
ins
add
loope
push
test
push
jo
push
mov
push
xchg
dec
xchg
xchg
dec
inc
push
sub
hlt
in
mov
inc
cmp
hlt
inc
xchg
movs
adc
inc
pop
pop
dec
cmp
mov
push
add
dec
xor
xor
sub
sub
xor
adc
dec
sub
lea
adc
mov
adc
sbb
pop
retf
dec
daa
xor
mov
mov
dec
lods
jmp
fnsave
shr
or
dec
daa
cwde
add
cmp
or
lahf
(bad)
sti
enter
or
imul
jo
pop
test
pop
test
std
mov
lea
push
xor
leave
inc
and
or
push
add
mov
add
cwde
scas
lea
xchg
add
xor
and
or
or
pop
sbb
xchg
adc
repnz
pop
xor
add
in
test
enter
and
push
(bad)
mov
fadd
jne
or
sbb
mov
pop
or
xchg
or
(bad)
leave
add
or
pop
inc
sub
dec
and
mov
dec
adc
push
pop
push
adc
bound
test
add
pusha
jnp
sub
repnz
sbb
daa
sub
add
pop
test
push
add
push
xor
xchg
mov
hlt
or
push
push
enter
stc
cmp
dec
jmp
movs
lock
jb
pop
pop
cmp
dec
out
rol
mov
add
inc
scas
or
dec
inc
sub
cli
dec
and
jno
push
lahf
lea
and
cs
sbb
mov
inc
sar
dec
or
add
xor
xlat
aam
xchg
sbb
add
imul
lea
xchg
sub
xlat
fwait
xlat
jecxz
lock
add
or
inc
inc
pop
outs
and
(bad)
adc
js
cdq
(bad)
stos
mov
call
jg
cmp
fdivr
mov
mov
and
jnp
lock
fs
mov
in
adc
cmp
mov
sub
add
push
sub
pop
sub
mov
ret
daa
add
adc
push
pop
and
xchg
add
mov
int
dec
dec
xor
sub
mov
inc
shr
inc
aad
cwde
or
push
loop
add
push
sub
lock
aas
xor
das
mov
lods
or
cmp
lahf
movs
mov
inc
movs
adc
lea
mov
outs
dec
mov
cmp
push
and
or
mov
pushf
inc
or
pop
movs
jecxz
dec
ret
cmp
lea
mov
add
cmps
add
retf
mov
sbb
fadd
cmps
add
xchg
or
add
push
mov
xchg
xchg
add
ins
mov
mov
inc
popf
rol
inc
lods
enter
pop
push
mov
fisub
pop
aaa
dec
rcr
mov
pop
jmp
mov
jl
or
std
xchg
(bad)
sub
xchg
xor
xchg
out
stos
es
xchg
std
(bad)
(bad)
mov
fild
movs
stos
pop
out
add
sub
inc
inc
lahf
dec
inc
mov
lods
inc
xchg
push
inc
loope
sbb
test
push
sub
fldenv
es
jg
pop
mov
jmp
fld
mov
adc
lea
not
rcl
jo
rol
mov
jmp
jecxz
rcl
pop
fadd
cld
add
xor
clc
add
sbb
pusha
test
sbb
gs
cmp
cs
sbb
adc
mov
adc
int
jmp
add
mov
mov
call
dec
push
mov
mov
mov
inc
mov
add
pop
jmp
jnp
addr16
rcl
pushf
cmc
mov
enter
icebp
sub
imul
xchg
pop
int3
mov
add
fst
call
scas
adc
cli
mov
mov
inc
sbb
rol
push
add
pop
cld
loopne
add
fisubr
stos
cdq
and
sbb
addr16
pop
xchg
or
jno
js
jg
inc
clc
pop
stos
add
pop
inc
rcr
test
pop
pop
and
xor
jmp
push
inc
jne
cmp
cmps
mov
jecxz
inc
mov
add
int
hlt
mov
jg
lods
push
fdivr
and
jns
inc
dec
loop
add
xor
and
and
push
sub
add
cs
mov
popa
jl
(bad)
and
aaa
cli
mov
test
and
fs
and
popa
add
fmul
je
ins
and
cwde
lea
add
pop
ds
sbb
add
sbb
sbb
sbb
ret
sub
xlat
add
mov
push
mov
pop
lods
sbb
(bad)
clc
and
fdivr
pop
add
cmp
pop
or
xor
test
xor
retf
pop
xor
clc
push
cmp
adc
ror
ret
push
fild
add
enter
add
jnp
pop
test
add
lods
test
fisub
test
aas
or
loop
ret
jo
inc
push
(bad)
ins
sub
test
xor
jp
ror
mov
add
adc
add
sub
je
pop
aam
mov
ds
lea
xor
sbb
ret
mov
mov
sahf
loopne
inc
add
cmp
cmp
jns
push
rol
das
cwde
ret
leave
movzx
les
or
retf
push
shl
cmp
mov
jl
lock
jmp
fild
lea
sub
ror
movzx
add
clc
push
mov
jl
mov
push
(bad)
adc
popa
add
inc
lea
xor
jg
add
add
mov
add
test
add
gs
pop
adc
inc
sub
dec
add
ins
loopne
inc
pop
add
pop
inc
jno
push
mov
sub
jge
dec
popa
or
adc
inc
jg
pop
xor
xchg
push
xchg
jg
aam
dec
adc
mov
sub
sub
jge
and
pop
fwait
push
add
add
in
(bad)
inc
push
or
mov
sbb
int
(bad)
sbb
retf
cmp
ret
jecxz
sbb
pop
mov
mov
add
add
dec
dec
inc
xchg
in
adc
dec
jno
aam
add
mov
jmp
jno
and
rcr
and
les
mov
add
jne
shr
add
inc
imul
cmp
add
(bad)
enter
add
xchg
adc
aas
je
xlat
and
clc
ss
push
imul
lods
xor
les
les
jae
add
pop
pusha
enter
mov
adc
sub
xchg
jno
inc
aas
test
mov
(bad)
and
pushf
and
inc
or
test
add
push
lock
or
pop
dec
fst
(bad)
ret
or
xor
push
add
add
in
xchg
push
add
inc
and
inc
xchg
in
call
fadd
cmc
rcl
or
inc
adc
loope
and
mov
adc
inc
shl
inc
movs
test
xchg
xor
cmp
add
or
test
adc
inc
repnz
and
std
dec
or
fwait
adc
jge
cmp
xchg
les
sti
daa
mov
fwait
push
imul
rol
or
mov
xchg
not
and
in
and
add
push
jmp
mov
fcom
arpl
test
lods
xor
xor
push
add
and
jno
mov
lds
add
jnp
sub
daa
xor
pop
outs
mov
rol
cmp
and
stos
popf
sti
call
pop
xchg
xor
call
sub
sub
mov
loopne
call
xlat
jmp
jne
mov
je
fild
jmp
add
ins
sub
jg
mov
jecxz
aam
(bad)
push
pop
fsubr
mov
mov
and
add
add
pop
lea
add
xchg
and
and
add
inc
imul
enter
bound
cli
or
add
add
rcr
or
push
ins
cmp
inc
loopne
retf
je
mov
arpl
inc
rcl
sbb
int3
movs
faddp
sbb
rcl
inc
adc
dec
or
mov
fisttp
icebp
int3
int
fisub
cld
sbb
inc
int3
push
arpl
es
pop
and
or
push
cdq
dec
iret
(bad)
les
loopne
ret
cmp
(bad)
fst
ud2
push
jg
inc
sub
jecxz
pop
lahf
in
nop
or
inc
shl
xchg
dec
fbstp
xor
dec
fadd
mov
es
adc
cmp
in
dec
rol
jno
loopne
ror
call
rol
rol
inc
or
lock
call
pop
je
mov
pusha
lahf
rcl
dec
add
inc
sbb
add
or
sub
ret
push
or
mov
mov
retf
cmp
jno
cli
xor
adc
xchg
pop
add
loopne
jecxz
adc
je
push
pusha
sbb
stos
test
inc
lock
ret
(bad)
add
enter
xlat
dec
cmps
ror
mov
sbb
shr
adc
pop
ret
adc
adc
js
cmp
fiadd
retf
enter
test
sbb
pop
leave
adc
cwde
or
mov
and
loopne
or
(bad)
mov
inc
pop
retf
xchg
daa
mov
aaa
pop
dec
sbb
sbb
sub
aam
mov
jecxz
fadd
clc
push
mul
push
sbb
lahf
jno
rol
scas
daa
or
rcr
out
fdivr
cmp
inc
pop
pop
pop
add
mov
or
dec
in
mov
std
lods
push
lahf
inc
rol
mov
mov
push
add
mov
add
or
pop
cwde
cdq
pushf
inc
popa
adc
pusha
cwde
sub
and
sub
syscall
mov
jge
add
pop
mov
cli
mov
or
push
xchg
in
pop
fwait
clc
xchg
mov
stc
cdq
nop
add
sub
push
dec
and
push
mov
inc
test
and
mov
push
dec
test
xor
and
push
mov
ret
or
out
call
hlt
sub
lea
mov
jp
add
scas
pusha
test
test
or
mov
fadd
dec
clc
and
add
cmc
test
(bad)
retf
mov
push
pop
push
sub
dec
test
mov
je
add
nop
aaa
sub
inc
ret
add
les
mov
sub
push
mov
repz
or
pop
push
or
xchg
xor
push
or
sub
(bad)
xchg
popa
(bad)
jne
xor
push
inc
push
push
pop
lods
daa
sub
lea
(bad)
in
add
dec
dec
xchg
dec
mov
lar
inc
pop
jne
jo
test
hlt
or
xchg
pushf
pop
pushf
(bad)
test
add
xor
dec
lahf
pop
in
ret
push
call
jmp
push
add
je
ja
pop
call
int3
out
xchg
xlat
scas
add
xor
mov
dec
mov
push
adc
cdq
sub
sbb
dec
dec
scas
push
dec
sbb
stos
cmps
mov
add
and
pop
or
pop
inc
shr
sub
dec
pop
add
mov
popa
adc
sub
push
xor
mov
fiadd
push
test
pop
inc
aad
sbb
or
xor
mov
dec
dec
aad
xor
add
loopne
adc
pop
sbb
mov
jg
sbb
pushf
dec
cmp
cmp
xor
in
sahf
sbb
js
aas
ss
aaa
or
js
dec
dec
push
leave
adc
add
add
aas
adc
aas
ins
pop
stc
add
add
dec
neg
call
push
test
cwde
ret
mov
push
xor
mov
sbb
fwait
call
add
add
sub
mov
lea
jl
leave
mov
inc
pop
xchg
int3
or
xchg
add
push
xor
shr
sbb
xchg
test
retf
cmp
sar
cmp
inc
or
add
inc
pusha
add
mov
lds
shr
add
rol
ret
in
sub
mov
sbb
test
or
daa
nop
or
call
rcl
push
les
dec
xchg
mov
sbb
jmp
add
xchg
in
dec
pop
lods
or
add
and
sbb
gs
pop
pop
ins
cdq
nop
jl
mov
and
adc
cmp
xor
bound
jno
cmps
xor
adc
adc
adc
and
sbb
cmp
dec
and
jg
add
cmp
and
dec
rcl
popf
adc
int3
or
mov
mov
aaa
and
xor
unpckhps
add
adc
pop
mov
or
lahf
mov
mov
dec
push
outs
test
int3
xor
test
or
addr16
pushf
fisttp
xor
out
add
cmovne
fstp
or
les
or
or
stos
rcl
add
scas
sbb
push
and
push
and
bound
push
data16
leave
xchg
icebp
sub
xchg
mov
or
push
push
lahf
sbb
inc
sub
or
mov
inc
pushf
sub
gs
inc
push
or
and
sub
xchg
or
add
mov
and
mov
aam
xchg
addr16
jg
add
push
pop
scas
push
cmp
dec
add
adc
lods
scas
lods
push
jno
jmp
dec
add
sub
add
sub
ret
mov
sub
add
dec
bound
inc
mov
ror
jg
fisttp
mov
outs
dec
inc
ret
aas
mov
lahf
int3
lahf
gs
mov
loopne
ret
adc
xor
pop
mov
dec
test
ret
fcomip
mov
sbb
lods
es
adc
test
pop
dec
and
sbb
jg
out
add
xor
daa
inc
sbb
inc
rol
shl
ins
mov
or
aas
jae
mov
mov
xor
fbstp
les
imul
cmps
loop
mov
imul
ss
daa
sbb
push
call
push
mov
hlt
xchg
jmp
inc
add
imul
xor
pop
movs
xor
push
add
inc
pushf
push
call
jmp
aas
loopne
test
dec
jb
add
inc
es
mov
pop
mov
xlat
pop
aas
imul
add
dec
sbb
imul
jbe
mov
adc
or
push
add
adc
cmp
push
push
mov
adc
nop
sub
clc
loope
add
mov
fistp
sar
pop
dec
test
sbb
test
ret
xchg
addr16
push
jbe
xchg
and
pop
xor
pushf
push
mov
jmp
pusha
push
and
sub
or
cmp
inc
in
push
or
sub
lods
mov
and
inc
pop
loopne
push
jecxz
popaw
or
push
and
les
push
loopne
mov
cmp
cwde
or
(bad)
and
pop
imul
sbb
add
dec
and
or
sub
cmp
movs
xchg
xor
sbb
aaa
stc
xor
bound
dec
or
rcr
adc
mov
or
lahf
and
mov
mov
mov
fwait
push
mov
add
add
mov
jl
adc
loop
push
pop
push
out
hlt
xchg
int3
popa
lea
add
sbb
dec
adc
mov
push
sbb
push
shl
adc
jecxz
xlat
push
ja
mov
ss
jae
adc
dec
inc
adc
sahf
mov
inc
mov
stos
xor
cli
dec
dec
sbb
pushf
sbb
test
mov
or
mov
xor
sbb
jle
adc
cmp
xor
bound
or
jle
adc
jmp
xchg
add
adc
dec
in
enter
pop
lock
dec
jbe
inc
rol
xor
sub
inc
cmp
pusha
sbb
sub
sub
push
xchg
test
sbb
inc
mov
mov
imul
push
iret
and
add
dec
dec
pop
add
call
mov
sub
pop
test
or
das
(bad)
mov
dec
mov
cmp
lods
inc
nop
add
or
pop
or
jmp
adc
icebp
mov
xchg
and
ins
fcomp
std
je
je
or
xchg
dec
add
call
mov
movs
test
cmps
scas
sbb
xor
xor
mov
pusha
mov
sub
ss
ins
inc
ins
adc
ficom
(bad)
and
aaa
xor
jnp
lock
lahf
adc
lahf
add
sbb
aaa
and
mov
and
or
push
inc
or
(bad)
pop
add
std
clc
pop
clc
inc
push
pop
add
or
cld
push
sub
adc
jns
je
add
jl
loope
fstp
js
jp
xor
movs
inc
jno
arpl
ror
shr
repz
pushf
jne
or
movs
pop
cwde
inc
jmp
xor
ss
or
fwait
cld
test
add
inc
daa
inc
push
or
jo
sub
cmp
pop
lahf
push
push
ret
and
adc
ror
pop
xchg
hlt
and
dec
add
dec
jmp
pop
adc
adc
mov
jmp
aaa
mov
jae
clc
mov
cld
pop
lahf
add
sbb
dec
cmps
mov
mov
xor
aas
sbb
aaa
jnp
push
loopne
je
or
or
xor
loop
adc
cmc
aaa
sbb
dec
inc
adc
pop
scas
pusha
test
mov
add
arpl
and
test
jne
jmp
xchg
mov
or
nop
push
mov
or
xor
mov
push
inc
ret
jecxz
addr16
push
scas
xlat
xchg
int3
jno
shl
imul
push
jae
lods
movs
rcr
jecxz
into
add
rol
cwde
and
adc
xchg
sbb
add
sub
inc
int3
jbe
cmp
and
push
mov
mov
and
lahf
mov
jne
push
dec
lock
mov
add
adc
push
jo
call
xchg
add
dec
xchg
(bad)
sub
cwde
cs
cmps
jmp
mov
mov
in
sub
sub
mov
dec
adc
bound
ins
test
adc
jmp
push
inc
stos
ins
mov
ja
pushf
add
xchg
mov
mov
mov
test
jp
ret
movs
mov
add
int
stos
ret
push
lea
int3
or
sub
push
sub
or
and
aas
inc
adc
mov
and
dec
and
loopne
imul
test
dec
pop
or
mov
scas
push
imul
data16
sub
push
mov
sti
mov
jmp
push
jb
adc
popa
jmp
daa
add
es
xor
inc
lea
jae
push
das
push
and
mov
or
inc
stos
cmp
sub
and
les
xchg
rol
jo
(bad)
call
pop
pop
xchg
or
pusha
(bad)
pushf
dec
jns
xor
push
test
jno
ss
add
push
je
push
hlt
cmp
in
push
sub
jl
inc
inc
and
lock
push
call
push
loopne
or
mov
or
cld
or
and
add
ret
call
jns
push
retf
ret
sbb
leave
push
cmp
mov
add
fsub
cdq
cmp
pop
imul
cmp
push
(bad)
fist
mov
adc
mov
sahf
dec
shr
sbb
pusha
sub
sub
pop
sbb
mov
push
or
dec
sub
dec
add
or
ret
xchg
(bad)
fmul
aam
add
adc
push
movs
push
nop
rcr
ins
mul
xor
add
add
inc
sahf
ins
mov
or
frstor
inc
jg
or
jmp
cwde
pop
dec
jb
lahf
sbb
hlt
mov
add
pop
sub
test
mov
sbb
rcr
inc
mov
cmp
inc
inc
push
or
add
mov
cmp
mov
add
cmp
ret
xor
test
aas
lock
add
adc
fucom
fist
jbe
jo
add
cmp
xor
pushf
add
inc
add
cwde
mov
jno
lods
aas
adc
add
add
nop
shl
jg
xchg
adc
pop
sbb
and
jnp
pop
adc
rol
lsl
int3
mov
jmp
pusha
sub
pop
es
das
shl
dec
jg
or
mov
add
fs
add
mov
test
xor
call
and
push
push
(bad)
out
dec
adc
nop
pop
inc
or
pop
adc
and
mov
inc
push
cld
add
cmp
jecxz
adc
pushf
push
and
mov
and
test
dec
push
and
inc
and
mov
push
mov
jne
lock
pop
or
imul
mov
adc
fcomp
xchg
or
je
mov
adc
adc
fst
adc
sbb
pop
mov
add
iret
cld
pop
lock
fsub
popa
sub
jns
test
adc
push
add
test
cmp
mov
js
in
aas
add
ror
xlat
pop
loope
inc
int
lahf
xor
les
inc
cmp
add
(bad)
inc
movs
push
icebp
ins
push
mov
add
inc
cmc
xchg
es
test
rol
add
lock
sub
mov
popa
xchg
fwait
enter
imul
dec
rcr
or
mov
dec
sbb
dec
shl
mov
push
and
pop
test
and
sbb
adc
add
and
adc
inc
daa
imul
pop
and
and
fbld
das
cmp
js
adc
jae
lds
push
sbb
inc
sbb
jnp
and
jmp
(bad)
mov
adc
lods
nop
fs
xchg
hlt
les
inc
mov
push
(bad)
hlt
icebp
mov
and
pop
lock
push
sub
imul
push
mov
and
add
sbb
push
cwde
cmp
loope
push
mov
inc
aam
xor
sub
loopne
fwait
add
or
and
add
je
cmp
sub
push
pop
aam
mov
inc
lods
and
clc
add
imul
shr
fcomp
push
or
or
add
add
loopne
or
xchg
pop
and
and
and
inc
jl
les
sub
sbb
adc
or
fcmove
popf
nop
xor
(bad)
xchg
js
ret
jmp
inc
les
sub
mov
inc
push
or
adc
aam
mov
push
dec
(bad)
push
push
sub
inc
add
push
or
les
inc
push
fbstp
jl
mov
pop
mov
mov
adc
in
mov
sub
stc
push
or
mov
add
rol
inc
push
aas
cs
or
inc
sbb
adc
push
pop
mov
outs
add
pop
mov
fmul
repz
sbb
mov
loope
shl
add
hlt
adc
aas
add
daa
inc
add
jg
movs
sub
mov
xchg
mov
push
sti
inc
pop
loope
call
dec
inc
mov
call
adc
pop
leave
test
mov
pop
in
push
pusha
loope
push
sbb
jecxz
add
imul
and
retf
or
mov
add
or
in
retf
in
push
push
inc
imul
test
push
dec
add
push
sbb
(bad)
pcmpeqd
dec
dec
lock
inc
cmp
lock
lahf
shr
lahf
push
leave
cwde
and
push
push
add
int3
xchg
sub
adc
jne
push
add
(bad)
and
pop
add
lods
fs
test
add
xor
jecxz
inc
stos
fs
loopne
sar
pop
adc
out
nop
jno
xchg
loope
xor
fisubr
addr16
bound
lock
fcomp
and
ss
or
jo
les
xchg
add
popa
push
add
sub
adc
mov
nop
add
add
jmp
scas
add
jecxz
nop
cmc
lea
push
in
enter
stc
or
dec
mov
push
jmp
scas
retf
sbb
inc
aas
adc
jae
call
pop
mov
ret
inc
or
inc
cmp
sub
fcomp
adc
mov
inc
js
adc
mov
mov
sub
popa
call
and
lea
xchg
fs
lea
mov
mov
pop
lods
pop
adc
mov
push
sub
test
xor
lock
push
jb
add
sbb
add
movs
dec
sbb
ins
pusha
and
or
jae
push
js
popf
pop
or
test
jo
adc
push
dec
add
lds
mov
add
mov
test
cmp
add
or
lods
popa
fadd
xor
test
out
add
jne
mov
fcomi
popf
sbb
jb
add
and
loope
fist
pop
add
mov
dec
and
shr
sub
je
(bad)
cwde
dec
jmp
mov
mov
das
or
or
ins
add
pop
outs
sar
arpl
push
cmp
dec
rcl
test
and
test
sub
push
pop
cmp
mov
sub
or
in
rol
pop
ss
mov
mov
mov
add
and
fimul
int
jle
retf
adc
and
test
rcl
mov
inc
xor
xchg
mov
enter
or
pop
lods
push
(bad)
aad
mov
adc
enter
and
mov
dec
jo
inc
cs
js
push
lods
or
(bad)
xor
test
jo
mov
xchg
or
je
jo
mov
jecxz
mov
add
mov
cmps
not
push
xchg
inc
in
sub
imul
xor
les
js
call
test
aam
adc
mov
and
les
inc
sub
ror
nop
jl
test
scas
sbb
add
xchg
ins
adc
xchg
jl
aam
cwde
shl
add
jmp
pop
or
imul
and
sub
adc
cwde
dec
popa
and
dec
mov
mov
test
pop
add
sbb
movs
dec
mov
outs
cmc
cmp
pusha
push
or
pop
(bad)
mov
jg
sbb
mov
mov
pop
aad
sbb
add
xor
icebp
adc
mov
pusha
mov
sub
jg
(bad)
in
add
bound
ins
cmp
mov
sbb
push
mov
data16
sbb
inc
in
adc
or
ret
mov
cmps
xlat
fisubr
fs
ret
jg
movs
nop
or
sub
mov
or
arpl
(bad)
push
add
fdiv
inc
or
imul
rol
mov
pop
sub
pop
popa
je
inc
fcmovu
jl
std
sub
lahf
inc
and
cmp
pop
adc
lock
sub
std
add
xor
adc
push
aas
add
push
or
mov
add
add
hlt
add
jl
jmp
adc
and
iret
mov
xor
sbb
add
jg
pop
xor
aas
data16
pop
sub
inc
or
and
push
sbb
dec
adc
stos
adc
lds
add
pop
rol
lahf
add
xor
pop
and
or
imul
add
pop
push
mov
inc
daa
push
push
push
(bad)
add
imul
inc
pusha
jmp
jg
rcl
ret
and
push
xor
dec
add
jne
adc
lds
add
in
mov
push
push
enter
sahf
push
ins
ja
adc
cmc
js
sub
mov
or
mov
push
test
mov
enter
xor
popf
shl
sahf
or
dec
mov
push
in
inc
add
inc
or
mov
pop
int3
cld
and
dec
(bad)
fild
xchg
es
add
movs
pop
inc
stos
int
adc
add
inc
sbb
xor
(bad)
cli
jne
push
push
pop
xor
fcmovnu
push
or
test
call
popa
test
mov
dec
push
fs
pop
pop
lahf
add
pop
test
sbb
add
sbb
jg
cmp
loope
in
mov
pusha
dec
test
mov
inc
push
and
xor
mov
or
shl
dec
aas
cmps
xchg
mov
pop
fild
jne
and
fild
inc
inc
inc
and
sub
sbb
repz
add
sub
movs
mov
pop
sbb
pusha
jg
add
jg
cmps
pop
or
mov
nop
std
aas
pusha
add
stc
cmp
or
std
lods
sar
test
into
pop
or
mov
adc
xchg
ins
sbb
add
cmp
cdq
ins
and
pop
pop
fadd
push
adc
sub
fild
xchg
add
sub
add
retf
lea
mov
and
fimul
xor
imul
clc
imul
loope
adc
enter
fsubr
mov
pop
popa
js
push
mov
cwde
xor
call
xor
rol
mov
dec
loopne
push
inc
lea
add
or
mov
sub
adc
push
or
ins
add
ret
sbb
in
mov
fst
push
js
out
sub
push
or
cmp
add
sbb
movs
mov
inc
or
pop
fld
push
lods
xchg
fild
adc
mov
cmp
push
enter
jl
inc
pushf
es
mov
shr
push
cmps
dec
fcom
inc
adc
adc
jmp
loope
loope
aas
sub
add
repz
repnz
ret
xchg
mov
rcl
mov
cmps
shl
dec
movs
add
pusha
loop
or
outs
lahf
and
push
mov
inc
cwde
or
in
mov
bound
aas
cmp
dec
add
in
pop
ret
add
inc
mov
mov
sar
and
mov
pop
xor
shl
or
or
fidivr
ror
in
add
add
ins
je
popa
pop
ds
je
pop
add
lods
cmp
enter
jmp
mov
push
(bad)
sub
add
pop
in
mov
fsub
or
cdq
or
arpl
dec
add
and
enter
pinsrw
sub
xor
add
pop
lods
ror
sahf
sbb
adc
fistp
pop
dec
adc
shl
inc
xchg
mov
push
and
mov
and
mov
ret
pop
fs
and
or
(bad)
push
inc
test
add
les
dec
inc
mov
int3
or
test
loop
aas
push
stos
pop
push
aad
mov
cld
add
jecxz
sub
mov
movs
les
dec
dec
adc
dec
imul
push
jnp
rcl
jo
and
dec
jns
add
sbb
cmp
and
add
mov
int
push
jne
xchg
js
test
and
mov
xor
jo
and
(bad)
xchg
push
mov
or
push
jno
xor
add
clc
cmpps
cdq
push
ret
pop
pop
add
push
mov
ins
ins
jnp
sbb
ror
inc
adc
mov
out
aad
(bad)
(bad)
dec
and
add
adc
das
mov
ins
add
or
add
and
or
inc
adc
test
add
test
add
xor
int3
dec
add
pop
adc
mov
push
xor
adc
sti
and
push
int3
or
pop
mov
call
pop
mov
sahf
or
repz
or
add
xchg
adc
pop
dec
or
push
fmul
mov
test
test
mov
(bad)
(bad)
mov
stos
or
adc
dec
pop
ror
pop
adc
mov
push
push
xchg
push
push
or
(bad)
(bad)
push
int3
sub
jge
mov
lahf
retf
pop
pop
cmp
out
out
xor
mov
dec
push
push
rcl
imul
hlt
add
mov
inc
and
dec
add
cwde
jl
pop
dec
bound
test
lea
(bad)
jl
lods
cs
cmp
pop
fiadd
inc
enter
adc
sbb
xchg
mov
add
and
pop
fcomp
outs
in
mov
js
stos
xchg
and
imul
mov
add
popa
inc
in
add
movs
add
or
inc
sbb
imul
xor
aaa
xchg
cmp
fcom
sbb
std
dec
ins
pop
jmp
lods
je
mov
outs
pusha
fwait
jmp
xor
test
mov
xor
fstp
and
add
test
test
dec
bound
or
lock
dec
call
jb
pop
xchg
dec
imul
pop
xchg
(bad)
pop
push
xchg
or
dec
xchg
(bad)
xchg
int3
dec
daa
lods
sub
leave
inc
xchg
push
repnz
daa
dec
loope
or
daa
pop
push
adc
cwde
dec
mov
cmp
add
inc
imul
mov
jne
push
and
or
mov
jae
jno
clc
add
test
pop
js
jno
sub
scas
gs
std
shl
daa
mov
mov
ja
into
and
arpl
loope
xchg
mov
(bad)
in
add
das
adc
cdq
into
(bad)
ja
and
jbe
icebp
xor
(bad)
add
outs
inc
ret
and
mov
outs
mov
or
imul
aad
popf
or
wbinvd
pop
jne
sub
fs
leave
or
push
lar
stc
adc
cmc
lods
addr16
xchg
pop
adc
xor
scas
jmp
inc
add
cmc
sub
sbb
mov
add
stos
or
or
fcomp
aas
add
and
xlat
mov
fistp
es
out
pop
add
adc
sbb
mov
mov
or
aas
les
in
nop
add
or
mov
push
mov
mov
stos
fcom
push
jecxz
rol
rol
ds
pusha
add
fnstsw
retf
sub
jno
mov
ins
int
and
enter
cld
cmp
mov
enter
mov
fsubr
ret
lock
std
or
lahf
mov
sub
bound
or
adc
dec
inc
pop
pop
push
pop
ins
movs
mov
add
xchg
and
sahf
sbb
(bad)
cdq
push
push
sti
inc
sbb
pop
add
mov
and
push
es
rcr
adc
cmp
or
pop
add
sub
sub
add
adc
mov
shl
pop
(bad)
cwde
fadd
inc
inc
sbb
lahf
mov
jnp
in
inc
lds
or
test
test
arpl
add
sbb
xor
push
aas
sbb
cmp
lahf
shr
movs
ds
jne
xor
lods
jg
push
xchg
push
adc
cmc
push
inc
sbb
add
(bad)
js
fistp
(bad)
dec
and
adc
cmp
push
lahf
xor
or
js
jb
jae
pop
test
jbe
int3
push
add
in
xor
aas
adc
fistp
int
ror
add
lea
inc
int
fist
inc
pop
punpcklbw
pop
ficom
adc
aas
mov
or
mov
cmps
add
dec
sahf
sbb
sub
jmp
and
jle
sbb
mov
inc
adc
add
adc
and
xchg
mov
dec
aaa
add
inc
imul
in
mov
popf
push
or
inc
sbb
cmps
outs
xor
add
push
cmp
cmp
pusha
cmp
add
push
cmp
jg
cld
(bad)
inc
jg
mov
jno
popa
sbb
(bad)
pop
jo
and
std
sub
and
jecxz
(bad)
iret
adc
sbb
sbb
fnstcw
add
adc
xchg
or
aaa
popa
les
ins
dec
push
sub
cwde
xchg
add
or
push
or
pop
and
aam
sub
ins
test
cmc
add
add
icebp
aaa
test
sbb
mov
jl
mov
sub
arpl
cdq
and
jecxz
loop
aam
ror
bound
fisttp
mov
mov
mov
push
mov
mov
or
aaa
pusha
dec
rcl
shl
xchg
add
jae
and
pop
push
cs
sub
adc
inc
dec
adc
call
inc
cmp
nop
call
lahf
jnp
adc
mov
adc
js
mov
or
adc
cs
push
sub
das
sbb
inc
mov
jbe
les
out
sub
cld
cmp
leave
xor
mov
push
push
push
test
lahf
push
mov
mov
adc
cwde
pop
frstor
push
or
cmp
or
push
cwde
ror
or
ret
inc
test
adc
pop
aas
jg
pop
jo
cli
add
lds
sbb
loop
jmp
or
sbb
push
mov
lods
add
push
adc
push
inc
and
(bad)
hlt
mov
jmp
jp
inc
add
mov
scas
mov
or
adc
jno
std
hlt
mov
cmp
inc
out
outs
test
jl
stc
fsubr
adc
dec
adc
jno
inc
lahf
sub
inc
adc
enter
aam
outs
hlt
hlt
or
jg
jge
bound
add
inc
test
cmp
sbb
out
mov
jmp
and
cmp
mov
adc
popf
inc
cld
sub
adc
xor
dec
sub
xor
sub
ja
std
inc
and
sub
push
aaa
push
popa
mov
rcl
cmp
shl
xchg
add
outs
idiv
push
loope
jle
test
fnsave
jae
add
mov
sub
in
and
fimul
adc
add
adc
xchg
dec
xor
mov
adc
and
pop
test
jmp
cmp
add
adc
and
cmp
pusha
adc
dec
dec
inc
lock
or
loop
sysenter
mov
adc
popa
adc
fs
js
sar
inc
adc
sbb
sbb
and
popf
add
hlt
or
inc
adc
movs
ins
cmp
inc
gs
push
cld
push
adc
inc
mov
enter
aaa
sbb
sbb
xor
cmps
jno
xchg
repnz
fs
ja
push
sbb
je
lock
jne
push
cld
push
aas
or
dec
sbb
lahf
inc
and
loop
cld
or
and
or
add
addr16
push
push
ret
mov
jb
add
dec
bound
jle
inc
ret
sub
push
cmps
mov
or
mov
or
jae
jmp
ret
xchg
push
jae
adc
add
jg
test
xor
test
lea
mov
push
sub
das
fadd
add
and
mov
mov
sub
and
lahf
add
fstp
stos
mov
dec
dec
cmp
push
dec
test
loope
adc
or
leave
push
(bad)
ficomp
xchg
xchg
xor
in
lds
jp
jne
and
add
test
test
add
sbb
xor
mov
std
xchg
ss
in
mov
mov
adc
add
or
and
dec
call
push
add
jbe
les
push
loopne
popa
test
es
cmovne
ja
sub
fmul
loope
jl
inc
je
push
stos
lods
xor
cmps
cld
pop
cmp
test
and
add
test
loopne
pusha
sbb
inc
aas
push
dec
ins
lock
adc
bound
adc
aam
test
ret
or
or
aas
cmps
fcomp
jnp
nop
adc
cld
adc
mov
rcr
sbb
xchg
mov
or
dec
neg
jmp
imul
add
ret
ret
pop
xor
inc
popa
or
mov
(bad)
sub
push
push
(bad)
adc
das
cld
stc
xchg
icebp
xchg
div
out
or
add
ror
pop
ret
jp
ja
inc
xor
je
mov
pop
dec
aam
mov
sbb
sbb
fidivr
addr16
(bad)
loope
test
mov
movs
adc
int
jge
call
dec
sbb
xchg
mov
xor
add
dec
sbb
mov
inc
nop
imul
mov
jecxz
jp
shr
lock
add
test
aam
push
mov
outs
push
dec
or
xchg
les
js
push
js
xchg
dec
xor
xor
push
and
shr
mov
add
sbb
or
hlt
pusha
xor
in
inc
inc
rcr
mov
movs
and
mov
mov
dec
push
in
iret
mov
dec
adc
fmul
nop
jmp
ret
test
and
stc
add
rol
adc
push
cmps
mov
mov
rol
and
sbb
and
xchg
ss
iret
xchg
ror
movs
aad
lock
or
or
add
and
imul
adc
or
fisttp
add
xor
(bad)
or
sbb
pop
lea
adc
loopne
mov
in
dec
sbb
shr
cmp
adc
cmp
or
clc
cmp
je
outs
jmp
push
mov
push
and
sub
and
jmp
xchg
popf
gs
loop
cmp
loopne
cwde
add
(bad)
mov
daa
addr16
sbb
loop
mov
cld
and
enter
adc
sbb
rcl
pop
shl
mov
add
add
xor
imul
xor
popaw
fsubr
or
int
or
jmp
popf
push
nop
ror
mov
dec
adc
pop
adc
ja
xacquire
pop
adc
sti
call
mov
test
pop
mov
mov
mov
das
mov
push
add
add
add
and
inc
inc
pop
add
cmp
sub
add
adc
gs
nop
std
cmc
sbb
dec
mov
inc
ss
xor
add
xadd
sbb
cmps
lods
movs
mov
sbb
sti
lods
pinsrw
jl
rcl
les
push
(bad)
iret
lods
rol
inc
fsubr
adc
dec
and
pop
cld
rcr
clc
and
xchg
je
lea
test
mov
repnz
push
jns
mov
in
loopne
adc
ror
xor
scas
dec
add
aas
xchg
add
shl
mov
dec
sub
push
dec
mov
lock
enter
push
adc
cmp
fidiv
pop
cmp
cmp
push
(bad)
sub
jae
dec
mov
mov
or
daa
int3
pop
add
ins
mov
dec
mov
pop
push
sbb
mov
ffree
xchg
test
loopne
int3
pop
add
adc
add
or
add
in
jno
sbb
lds
test
sub
fist
jo
enter
jno
mov
or
lea
pop
xor
add
inc
fsubr
mov
sub
jns
adc
mov
in
jns
and
sbb
test
xor
fcomp
and
inc
and
xor
dec
push
adc
jmp
or
pop
fdiv
or
lahf
mov
or
sbb
(bad)
mov
adc
mov
rol
add
and
dec
lahf
sbb
push
sbb
and
or
pop
add
and
add
and
sbb
ja
inc
xor
inc
mov
push
jb
aas
in
jg
xchg
sbb
mov
es
mov
or
ret
loope
pop
lock
mov
pop
add
ret
test
cmp
ins
mov
fdecstp
cwde
in
xor
mov
mov
jl
mov
push
sbb
adc
js
jg
add
dec
mov
push
retf
jge
cwde
xchg
cmp
or
or
inc
mov
stos
or
clc
rol
cwde
cmp
popa
inc
addr16
sub
mov
or
mov
popa
and
div
pushw
jbe
icebp
push
mov
xchg
jb
mov
rcr
push
pop
mov
add
adc
mov
and
adc
dec
enter
xor
loopne
sbb
call
add
cwde
(bad)
xchg
int3
aas
test
test
shl
pop
adc
gs
mov
adc
(bad)
add
lahf
push
cmps
and
mov
or
mov
push
cmp
or
pop
icebp
or
or
and
rcr
or
sbb
outs
or
adc
xchg
mov
xchg
inc
je
jg
js
mov
mov
dec
test
push
in
mov
jecxz
adc
add
int3
or
mov
jmp
inc
dec
fdiv
adc
add
lsl
mov
ins
sbb
add
sar
add
xchg
mov
adc
sub
adc
pop
ins
add
add
es
mov
jl
add
inc
pop
add
lahf
mov
int3
lahf
add
imul
movs
sub
add
add
adc
lahf
pop
add
and
pop
sub
mov
add
ins
into
mov
xchg
es
push
add
cmp
int3
mov
push
int
popa
ret
mov
or
ss
xor
ss
pop
(bad)
sub
or
xor
fldcw
xor
pusha
or
and
push
ror
jmp
ret
call
lds
inc
add
pop
aas
mov
adc
loop
dec
sbb
pusha
push
push
or
push
or
push
loope
and
test
out
push
dec
sbb
jbe
rcl
push
cld
jl
sbb
out
add
xchg
adc
or
jl
cmp
cmp
sbb
cmp
iret
push
jecxz
cmp
cmp
push
mov
scas
loop
adc
sbb
inc
popa
outs
mov
jmp
ret
popa
es
mov
adc
sti
out
adc
inc
fwait
push
xchg
mov
or
sub
neg
xchg
adc
test
inc
xchg
mov
xchg
mov
jmp
mov
sub
sub
push
push
adc
adc
pop
or
adc
movs
lea
push
ja
push
adc
pop
or
mov
in
pabsb
lock
and
add
add
call
adc
xchg
les
movs
dec
adc
xchg
loopne
push
inc
leave
leave
rcl
lods
xchg
nop
aas
repnz
ja
das
xchg
xchg
pop
or
sar
bound
sub
sub
xor
and
add
add
cwde
stos
and
test
aas
dec
or
pop
add
aas
add
pop
cmp
pop
call
movs
pop
call
add
and
movs
sub
bound
pop
add
test
pop
pop
jg
or
add
xor
pop
adc
sbb
sbb
jg
push
enter
or
cmp
add
jg
sbb
or
add
jg
push
mov
sbb
es
pop
push
pop
lahf
pop
pusha
mov
add
test
fdiv
xor
mov
cmp
inc
jbe
mov
sar
dec
mov
mov
ss
not
fwait
les
xor
xor
jo
dec
repnz
or
movsx
push
ret
js
push
jne
cmp
xor
pop
sub
pop
lahf
xlat
adc
fs
dec
jae
xchg
jl
add
test
pop
nop
clc
or
(bad)
jnp
inc
dec
clc
add
scas
call
(bad)
mov
dec
cmp
xor
pop
dec
add
mov
add
mov
pop
xor
pusha
mov
xchg
mov
sub
push
inc
loop
loop
add
add
jo
shr
and
outs
inc
jmp
or
(bad)
ins
vminpd
mov
pop
mov
rcr
cmp
inc
pop
sbb
fcomp
mov
(bad)
fild
ins
cmp
and
ret
or
test
pusha
inc
ds
mov
jbe
adc
and
or
repz
nop
nop
push
push
cmps
fisttp
mov
push
add
add
pop
in
outs
add
add
add
js
jge
or
cmp
jne
adc
add
(bad)
mov
loopne
dec
cmp
inc
xchg
out
push
or
adc
das
shr
sar
jne
imul
test
pop
jg
pusha
add
retf
pop
jmp
fistp
inc
sbb
cmp
dec
repz
jl
aam
and
test
pop
repz
and
loopne
push
xor
int
cmp
loope
add
or
add
add
fiadd
add
dec
mov
loopne
inc
sbb
mov
mov
cmp
pop
sbb
and
cmp
add
add
adc
loop
pop
loopne
inc
imul
xchg
mov
mov
and
or
dec
xchg
and
pusha
bound
ret
jp
adc
or
clc
adc
sbb
inc
pop
in
mov
xor
and
pop
lds
nop
fsub
icebp
mov
add
dec
mov
push
pushf
pop
pop
sbb
cmp
lock
aad
or
pop
int3
dec
inc
dec
js
adc
push
sub
sub
ret
je
sbb
mov
aaa
jns
in
and
cs
aaa
lods
jmp
add
hlt
lods
mov
jns
cmp
mov
add
mov
loope
les
push
cmp
dec
pop
xor
xor
and
cmp
pop
add
lahf
mov
pop
jl
pop
call
lds
lahf
scas
std
push
push
jnp
fst
xor
adc
pop
adc
or
sub
pop
test
sbb
cmp
ret
inc
imul
cmp
cmp
adc
cmp
hlt
lock
and
adc
xchg
test
cmp
pop
sti
mov
mul
idiv
retf
sub
es
pop
push
adc
sbb
mov
or
adc
mov
inc
les
xor
in
mov
sbb
xor
push
jne
pusha
lods
daa
ret
minss
or
or
mov
mov
push
mov
jb
cmp
ins
jg
fs
les
mov
mov
or
imul
xchg
add
loop
sbb
sub
adc
lods
or
(bad)
cmova
loopne
jne
popa
div
cmp
mov
mov
(bad)
mov
std
adc
adc
or
mov
ins
ror
jne
(bad)
aam
ret
sbb
adc
jo
rcl
mov
or
jg
sbb
adc
or
pusha
inc
int3
jge
or
retf
ret
jnp
add
or
xchg
int3
imul
pop
and
or
les
sub
lods
sub
shr
push
push
ror
jno
dec
in
enter
dec
cmc
dec
sbb
rcl
ret
shl
ret
aas
mov
cmp
jne
add
xchg
leave
ror
inc
pusha
cwde
cmp
test
jge
xor
push
push
rcl
aad
adc
out
mov
mov
push
shl
xchg
data16
sbb
mov
and
push
sbb
pop
shr
scas
add
les
pushf
(bad)
adc
adc
add
push
inc
or
cmp
push
push
idiv
adc
pop
cdq
or
xchg
or
push
push
dec
add
push
(bad)
xor
leave
test
lock
cmp
je
in
pushf
inc
sub
daa
pop
mov
pop
jge
jnp
add
xchg
mov
pop
mov
add
(bad)
pop
add
sbb
add
mov
push
ins
movs
push
push
fmul
pusha
mov
in
inc
inc
jns
daa
int
test
pop
push
std
pop
hlt
xchg
dec
jmp
out
pop
add
popa
sub
sub
popf
rep
pop
mov
jl
mov
xor
cs
or
fnstcw
leave
push
mov
fidiv
out
mov
and
inc
sbb
mov
xor
inc
jl
pop
sbb
loopne
inc
popf
xor
and
dec
inc
lahf
(bad)
add
inc
cmps
cs
inc
add
fmul
jmp
popa
sbb
mov
mov
xchg
sbb
xor
mov
pop
imul
add
ins
mov
cs
inc
and
jecxz
or
pop
mov
and
les
sbb
js
jae
ret
loope
push
sub
cmp
pop
sub
cmp
mov
sub
mov
jo
add
xchg
cmp
retf
call
(bad)
add
jg
dec
pop
hlt
jne
mov
mov
jg
clc
imul
in
jb
and
jmp
das
ror
sbb
ins
xor
push
mov
fwait
cmp
bnd
std
or
in
jmp
xor
pop
xchg
mov
xor
mov
sbb
js
cld
popa
xor
add
inc
or
adc
jecxz
es
daa
sbb
dec
lahf
push
enter
pop
clc
or
inc
scas
aaa
int3
push
movs
add
inc
popf
mov
xor
cmps
inc
movs
push
dec
lock
mov
or
and
arpl
jge
test
fisub
fist
ret
movs
mov
outs
add
adc
xchg
dec
mov
sub
and
pop
pop
sub
out
jmp
add
cmp
(bad)
sti
xchg
mov
arpl
pop
lods
in
adc
sbb
test
ret
cmp
pop
shl
adc
cmp
pop
ret
push
push
xchg
int3
mov
push
mov
add
mov
pop
push
out
popa
test
mov
xor
out
cmps
(bad)
clc
mov
mov
mov
outs
out
lods
or
inc
jmp
mov
jnp
adc
sbb
pop
call
pop
dec
sbb
mov
pop
enter
add
add
jg
push
adc
sub
js
bound
retf
push
sub
pop
pushf
outs
xchg
push
or
int3
pop
dec
mov
jo
clc
mov
adc
pusha
sub
mov
clc
(bad)
out
sbb
arpl
adc
nop
frstor
xchg
adc
(bad)
adc
and
scas
or
or
out
jno
or
add
sbb
cmp
inc
xor
push
les
pop
add
sbb
push
sbb
pop
aas
ror
(bad)
(bad)
mov
inc
aas
jb
add
inc
test
add
cmp
mov
mov
aas
and
sub
pushf
adc
nop
sub
jg
test
loop
cld
mov
add
dec
int3
pushf
xor
mov
add
movs
adc
fistp
push
or
fild
add
add
pushf
cmps
inc
and
arpl
inc
rcl
js
or
and
jl
mov
popa
xchg
adc
cmp
xor
rcr
or
dec
and
or
fwait
pop
sub
pop
push
and
cs
add
fld
add
add
stos
mov
bound
mov
mov
or
mov
stos
sub
xchg
stc
call
fsub
add
pop
(bad)
xor
aas
(bad)
mov
push
lods
push
jbe
adc
pop
sub
pusha
and
and
add
in
lds
and
add
pop
popa
jg
lea
and
push
inc
dec
or
pop
jno
dec
and
imul
inc
or
(bad)
jbe
rol
pushf
inc
or
adc
and
mov
cmps
inc
adc
mov
add
add
add
cli
popf
add
push
mov
cmp
fadd
adc
shl
mov
push
push
mov
outs
inc
retf
test
fwait
adc
pusha
pop
sub
and
adc
or
mov
jmp
int
or
xor
xor
mov
xchg
sbb
mov
jmp
pop
aas
adc
retf
mov
xchg
adc
adc
sub
pusha
test
dec
mov
xchg
add
or
movs
je
mov
inc
sbb
daa
and
push
loope
push
push
pop
ret
or
loopne
test
push
popf
or
inc
iret
push
and
in
sub
outs
sub
test
mov
loopne
and
jge
and
je
or
jge
or
pop
xchg
lock
push
fmul
nop
ret
inc
out
adc
xchg
adc
cld
loope
mov
ret
push
pop
jne
xor
(bad)
leave
or
lsl
dec
dec
fdiv
inc
inc
iret
xchg
adc
pop
call
call
sub
xor
sbb
or
dec
and
add
sbb
mov
into
push
dec
(bad)
mov
sub
pushf
std
and
xchg
out
inc
(bad)
sbb
or
shr
and
cmp
inc
push
shl
ss
bound
lea
js
loopne
mov
xchg
movs
clc
inc
push
jbe
fdiv
gs
and
or
sbb
or
pop
jne
sbb
psraw
psubusw
sub
push
jecxz
nop
fadd
and
adc
pop
add
or
adc
in
dec
leave
imul
and
out
in
in
inc
xchg
sub
aas
je
xor
jnp
or
jmp
movs
add
jne
push
inc
push
nop
and
cmp
adc
aad
push
push
das
sbb
add
ins
call
in
mov
mov
cmps
nop
adc
and
dec
adc
sub
test
scas
add
xchg
pop
ins
arpl
dec
adc
lock
(bad)
inc
rol
lahf
aam
adc
adc
mov
loopne
cmp
add
dec
ficomp
int3
dec
push
dec
and
popa
mov
mov
xlat
addr16
sub
or
adc
lock
imul
mov
or
adc
inc
cmp
inc
test
call
mov
cs
data16
adc
sub
sti
and
nop
sub
dec
or
das
popa
outs
or
(bad)
xchg
lock
push
inc
pop
adc
into
hlt
sub
lock
push
xchg
push
pop
adc
inc
rol
push
or
out
imul
movs
stc
push
pop
sub
sbb
mov
pop
add
mov
mov
cmps
cmps
push
cmps
jne
inc
adc
loop
ficom
or
or
stos
inc
call
lahf
adc
add
mov
add
(bad)
fisttp
add
or
dec
xchg
repz
test
push
lea
mov
adc
popa
add
xor
xchg
adc
fimul
adc
(bad)
xchg
cmp
add
inc
or
jnp
loop
outs
adc
lea
in
int
sub
mov
loope
sbb
and
pop
(bad)
imul
test
lea
sbb
push
test
push
and
inc
std
add
test
sar
icebp
fdivr
movs
ja
jbe
ret
jecxz
ret
push
cmp
lock
jge
sub
dec
sbb
xor
and
inc
push
test
das
sbb
shr
into
cmp
jmp
mov
in
repz
popa
add
mov
(bad)
adc
add
fmul
or
or
ficom
sub
inc
dec
jne
clc
mov
ss
mov
or
js
or
mov
and
lahf
dec
cmp
and
push
sbb
pop
shl
sbb
jge
int3
in
mov
sbb
les
test
add
push
mov
loopne
sub
inc
or
mov
imul
mov
inc
mov
jg
ror
add
push
adc
push
cmps
fdiv
addr16
out
xchg
stmxcsr
mov
or
(bad)
(bad)
inc
dec
les
push
mov
xor
adc
adc
nop
pop
push
sbb
pop
dec
lods
popa
jne
push
mov
clc
xchg
jo
imul
fmul
movs
jnp
pop
jmp
outs
or
dec
fst
repz
push
push
test
cli
mov
jmp
xor
test
sbb
jne
test
cmp
dec
ja
in
movs
lea
jg
and
loope
inc
lock
push
push
jp
push
sbb
bound
sbb
mov
push
or
pusha
sbb
in
or
add
add
fwait
neg
in
vgetmantss
gs
daa
es
loope
outs
mov
ret
sbb
test
lock
and
popa
loopne
jmp
neg
pop
jne
push
daa
jge
sti
and
rol
cmp
pop
dec
push
inc
movs
jg
ins
inc
jmp
cmp
daa
and
retf
add
xchg
popa
stos
in
in
dec
pusha
inc
in
cmps
jns
mov
rcl
fist
fimul
test
push
lock
dec
dec
add
cmp
sub
movsx
or
mul
push
clc
sub
push
sbb
pop
gs
lahf
or
gs
inc
stos
sub
rol
and
jmp
(bad)
cmp
mov
lds
sti
or
or
mov
mov
pop
pop
add
jne
mov
adc
pop
adc
loope
sbb
clc
inc
movzx
retf
popf
bound
or
hlt
ret
xor
aam
fstp
shl
xchg
rcl
jge
add
dec
cmp
je
jb
rol
xlat
and
out
fcomp
adc
jne
xlat
add
add
and
fsubrp
ins
jmp
leave
adc
je
and
dec
push
adc
sub
mov
fs
dec
jg
mov
pop
lock
and
mov
sti
(bad)
cli
fdiv
mov
lock
frstor
or
dec
bound
add
inc
(bad)
and
dec
cmp
adc
adc
mov
movs
je
rcl
pop
das
lock
sar
adc
dec
mov
in
pop
push
push
aas
push
daa
mov
inc
push
dec
test
and
shl
push
inc
sbb
clc
sub
adc
cmps
fistp
fistp
sub
or
mov
add
jmp
jge
add
sub
mov
mov
nop
sbb
sub
test
in
jl
rol
mov
movs
push
sub
int3
push
jo
ins
jg
outs
pop
add
sbb
fcom
nop
mov
aaa
cwde
push
jae
inc
call
push
(bad)
inc
xor
popa
jae
mov
push
or
xchg
(bad)
xor
cli
push
or
movs
int3
pop
mov
mov
dec
loopne
xchg
push
rcl
movs
sbb
pop
lea
jns
pop
cmp
test
cmp
or
xchg
and
xor
fwait
jge
inc
xor
or
adc
fst
push
arpl
repz
push
add
inc
pop
mov
pop
lahf
imul
sbb
js
mov
inc
jne
icebp
cmp
or
add
add
ins
mov
fist
pop
pop
call
xchg
jnp
lahf
push
fmul
lahf
and
add
adc
aam
mov
jmp
jmp
clc
adc
movs
xor
adc
dec
push
lods
pop
(bad)
test
mov
es
ss
or
jg
pushf
xor
mov
jg
mov
ror
and
ja
sbb
dec
or
fs
add
pop
sar
fmul
lahf
pop
inc
push
jmp
xor
lods
jg
add
xor
adc
xchg
add
or
es
add
cmp
sbb
sub
add
sbb
sbb
outs
and
icebp
mov
jnp
cmp
add
mov
jg
mov
xchg
push
aam
jg
outs
push
pop
mov
aam
lock
and
mov
icebp
sete
pop
mov
out
add
(bad)
or
xor
xor
dec
cdq
adc
lods
js
mov
jg
lods
push
test
leave
jmp
js
push
jg
loopne
pop
mov
add
fild
mov
xchg
ins
popf
jne
popa
adc
or
outs
sub
pop
popa
and
js
sub
cmps
or
pop
adc
and
or
mov
pusha
inc
push
or
and
les
add
cmp
(bad)
mov
inc
(bad)
cmp
out
outs
dec
cld
sbb
fst
fwait
and
pop
jne
push
push
icebp
sbb
mov
mov
repnz
je
pop
dec
mov
inc
dec
push
xchg
inc
cmps
mov
shl
add
lahf
jmp
mov
rol
push
add
ins
jmp
mov
fmul
push
clc
or
adc
jnp
(bad)
jb
sbb
nop
idiv
shl
sub
push
sub
add
icebp
dec
cmp
add
pop
push
invd
je
push
mov
and
add
add
mov
sub
push
or
gs
push
add
loope
pushf
rcl
data16
jg
pop
fild
add
and
out
lock
push
push
and
push
and
sbb
sub
cmp
add
addr16
ror
sub
dec
movs
pop
xchg
sub
out
mov
out
inc
cld
push
xor
xchg
jmp
les
lahf
pop
dec
xchg
push
cmps
xor
sub
adc
icebp
in
cmp
jo
sub
sbb
or
clc
mov
outs
jnp
pushf
dec
call
sub
push
xchg
mov
scas
add
clc
jmp
ja
jge
cmp
jmp
xor
arpl
sbb
loopne
ror
pop
push
repz
pop
add
ss
js
pop
cmp
sti
cld
push
ja
leave
rcl
mov
sub
(bad)
cld
and
mov
aaa
push
add
je
mov
mov
mov
or
clc
sbb
jg
push
jne
add
add
add
adc
fwait
inc
or
add
loope
dec
inc
fist
add
cli
or
sub
cmps
or
adc
mov
fscale
sub
fimul
push
sbb
or
mov
inc
xor
dec
xchg
sub
xor
fild
and
and
inc
add
or
jp
outs
pop
add
adc
test
pop
push
test
hlt
ins
jg
test
or
or
push
cmp
ins
jg
repnz
sub
mov
jno
cmp
daa
neg
sbb
test
pop
push
rcr
adc
add
or
jne
fs
dec
add
mov
cmp
inc
adc
push
or
and
sar
(bad)
data16
enter
hlt
movs
and
mov
mov
sbb
pusha
xor
cmc
cld
or
push
xchg
inc
sub
stc
clc
xchg
add
add
xlat
cs
xor
adc
test
cmc
adc
fadd
push
ret
pop
xor
test
inc
or
mov
and
add
fist
aas
sub
xchg
mov
repnz
and
xor
pop
jb
cld
test
add
xlat
jo
mov
or
cli
in
cmp
mov
fisttp
pop
jp
test
or
loope
add
add
mov
cmp
add
pop
iret
dec
imul
data16
data16
push
push
cmp
in
fild
add
jmp
mov
mov
arpl
out
vmread
and
in
pop
add
jl
aam
push
fwait
imul
loope
xor
imul
rcr
push
mov
pop
test
adc
dec
fisubr
fimul
fstp
add
adc
int3
add
sbb
add
test
or
dec
mov
xlat
inc
pusha
mov
xor
psrld
aad
mov
push
push
or
clc
pusha
in
sbb
sub
(bad)
push
xor
xchg
adc
sbb
and
cwde
mov
xchg
mov
mov
adc
or
mov
push
mov
inc
sti
scas
js
dec
cdq
cs
retf
(bad)
xor
cmp
ins
cld
jmp
xor
aad
adc
xchg
mov
(bad)
je
add
cwde
inc
cwde
cdq
ret
(bad)
imul
xchg
and
dec
mov
(bad)
out
fisttp
aam
pop
inc
mov
in
fwait
mov
imul
jp
dec
xor
fstp
xchg
out
test
mov
and
fistp
add
jns
dec
or
inc
fs
sub
in
js
and
push
ins
inc
aaa
and
jmp
sti
lea
and
rol
lahf
les
xor
je
das
pushf
sbb
and
scas
sub
sub
sub
pop
dec
(bad)
cs
fmulp
rcl
sar
adc
mov
outs
mov
jb
mov
pop
lea
outs
fwait
and
movs
icebp
cmp
lods
int3
xchg
cmp
push
xor
cwde
std
dec
adc
push
les
mov
or
mov
leave
sbb
pop
push
in
aad
jg
fsubr
jg
inc
xchg
mov
dec
popf
cmp
dec
mov
inc
pop
mov
sub
jl
push
(bad)
mov
mov
cmps
xor
jg
lods
add
jne
mov
or
loop
aaa
mov
mov
nop
lock
add
sbb
jns
add
and
aas
xchg
xchg
and
sbb
mov
fsubr
call
in
mov
mov
cmp
fadd
not
sub
jne
aas
scas
movs
mov
(bad)
jo
stos
dec
jecxz
rcr
rcl
xchg
nop
mov
stos
mov
sar
ins
jns
ds
add
mov
enter
xchg
add
jecxz
pop
les
add
adc
mov
gs
jmp
int
enter
xchg
fdiv
dec
cmp
repnz
add
add
fsubr
bound
movs
and
dec
das
inc
in
in
das
jecxz
pop
icebp
jno
adc
sub
add
adc
mov
or
idiv
mov
xchg
xchg
xchg
mov
pop
cmp
mov
adc
add
dec
loope
aas
pop
loopne
shr
lea
test
lods
pop
test
xchg
xor
mov
add
aaa
lock
dec
aam
sub
xor
add
sbb
sbb
add
jno
mov
or
push
xor
cmc
inc
inc
mov
inc
sar
lods
ins
bound
xor
or
mov
or
or
and
cmp
add
adc
pusha
jae
into
push
sbb
ror
jno
jbe
addr16
mov
xchg
inc
sub
mov
or
or
mov
add
add
add
pop
test
lahf
lock
adc
xor
ins
sbb
add
shr
pop
shl
popfw
and
daa
pusha
pusha
add
aas
clc
les
sub
jmp
pop
inc
mov
mov
add
push
mov
push
adc
stc
pop
dec
popa
adc
sub
push
sbb
lock
sub
sbb
pop
and
outs
adc
in
movs
in
pop
je
and
push
je
out
pop
jo
les
int3
lahf
sub
imul
sbb
adc
js
inc
cs
in
or
xor
scas
cwde
push
popf
jmp
adc
shl
pop
(bad)
stc
fcomp
mov
adc
jg
sbb
imul
cli
pop
mov
cmps
pusha
push
les
and
add
mov
push
dec
or
inc
mov
call
clc
adc
or
mov
add
test
in
out
pop
and
push
cld
and
inc
loopne
inc
or
push
add
(bad)
inc
and
mov
jno
add
fnstcw
aam
aad
xlat
inc
sub
popf
jb
test
std
push
dec
stos
cs
pushf
mov
sbb
lock
es
mov
push
push
dec
mov
clc
push
mov
shl
xchg
sti
cmp
mov
push
sub
push
pop
jne
dec
jb
push
movs
pop
cmp
jl
jne
sbb
ss
jo
inc
add
das
dec
ret
xchg
jnp
mov
pop
adc
jmp
lahf
pop
je
aad
aas
fdivr
push
push
jmp
dec
sbb
push
cmp
sar
mov
int3
push
inc
cmp
xchg
cmp
(bad)
dec
pop
cwde
sbb
hlt
mov
jnp
je
push
pop
je
dec
repnz
jnp
je
inc
sub
je
sub
pop
pop
je
and
retf
inc
and
pop
xor
push
sub
(bad)
imul
je
popf
sub
aas
je
js
xchg
or
sub
mov
and
je
dec
and
test
dec
gs
mov
lahf
cld
cld
add
mov
sub
mov
dec
sahf
(bad)
outs
or
jb
xor
or
jbe
cs
dec
aas
add
or
pop
xchg
bound
push
jnp
or
rol
loope
or
shr
pop
psubsb
push
fs
push
pop
inc
push
adc
nop
data16
inc
dec
sbb
push
add
ficomp
add
movs
ret
mov
test
rol
dec
(bad)
retf
pop
loopne
dec
pop
inc
and
call
dec
add
and
cmp
or
clc
rol
mov
mov
fdiv
mov
fs
or
call
jmp
sar
out
dec
mov
sbb
push
fadd
mul
dec
add
jecxz
xchg
jnp
jne
pop
and
lock
cmp
jge
push
mov
pop
add
stos
push
cmovge
jnp
(bad)
or
or
sub
or
mov
iret
mov
inc
dec
jo
add
jns
or
in
(bad)
ret
enter
retf
scas
sbb
jnp
xchg
retf
dec
mov
sar
jbe
pop
mov
int3
jbe
jmp
jge
push
(bad)
and
push
rol
add
and
int3
sbb
add
dec
and
xor
xchg
push
mov
adc
sbb
pop
jo
pop
jmp
add
jg
test
dec
int
pop
xchg
ror
jge
js
pop
pop
pushf
or
(bad)
mov
rcl
sbb
or
pop
or
ds
pop
ss
push
mov
sbb
fs
push
mov
cmp
pop
imul
adc
push
pop
and
cmp
mov
scas
push
scas
test
jmp
cmc
ret
and
(bad)
or
xor
pop
stc
push
add
adc
mov
call
jp
mov
jo
js
int3
pop
add
sub
or
not
lahf
popa
imul
xchg
push
xor
mov
test
sub
out
or
push
ins
and
and
aas
sbb
and
pusha
sbb
mov
mov
sub
add
and
sbb
push
push
and
aam
fistp
add
add
loopne
mov
jge
jecxz
mov
push
push
dec
and
imul
cmp
cld
pusha
loop
pop
adc
inc
dec
xlat
aam
mov
les
sub
ret
xlat
add
jg
xchg
adc
xor
cmp
cmp
les
pop
imul
sbb
les
jo
push
push
inc
pop
sbb
push
pop
jle
push
(bad)
sbb
jmp
test
jp
xor
cs
push
or
add
cmp
ss
push
loope
xor
jno
cmp
mov
add
(bad)
xlat
inc
pop
and
push
(bad)
and
or
scas
scas
xchg
lods
or
shl
add
add
xor
add
ret
adc
inc
js
cmp
je
outs
inc
les
inc
seto
stos
jl
(bad)
mov
add
mov
push
sbb
fs
inc
out
push
mov
adc
test
jecxz
or
jbe
lods
adc
std
xchg
inc
mov
pop
pop
lea
inc
jmp
jecxz
or
pop
adc
pop
fimul
and
and
sbb
ret
push
or
jmp
mov
sbb
and
cmps
mov
fsub
mov
adc
pop
ret
or
lahf
xor
or
cmp
sub
jmp
cs
pusha
mov
pushf
pop
add
gs
add
mov
push
and
inc
and
add
push
pop
sbb
imul
add
sar
dec
(bad)
sub
adc
mov
push
adc
push
shl
xchg
mov
cmp
jecxz
icebp
or
shl
cmp
push
push
inc
or
test
bound
push
jne
add
dec
int3
mov
stos
adc
popa
sbb
pop
pusha
push
xchg
xor
ins
loope
jp
xor
test
gs
adc
repz
push
loopne
or
or
test
cmp
(bad)
call
(bad)
mov
lahf
arpl
pop
jl
imul
enter
ficom
mov
sub
push
add
sub
add
add
add
test
adc
aam
or
and
xor
mov
or
data16
in
sbb
(bad)
sub
repnz
lods
xor
add
inc
sub
test
xchg
es
sub
ins
push
lea
jo
xchg
push
cwde
push
fadd
mov
in
call
popf
jae
pop
jno
fs
or
adc
xchg
inc
fistp
xchg
sbb
adc
jl
shl
ret
or
jno
sbb
xor
ror
popf
dec
mov
adc
ret
or
fucomp
cmp
adc
pop
clc
leave
test
loopne
and
aad
leave
pop
inc
addr16
mov
push
in
imul
cmp
jmp
mov
inc
mov
push
cmp
enter
ins
lea
push
dec
or
add
dec
or
adc
test
push
or
push
sub
xor
jne
call
adc
or
and
fwait
popa
arpl
mov
in
lea
jnp
sbb
or
lahf
push
push
js
or
xor
clc
ss
add
sbb
loopne
movs
push
mov
les
lahf
mov
sub
rol
xor
pop
mov
mov
fisttp
pusha
arpl
pop
xor
or
fnstcw
arpl
pop
and
gs
icebp
fcmovnb
adc
test
int3
adc
adc
nop
pop
jb
aas
fistp
sbb
sbb
mov
xchg
in
stos
and
xor
jge
stc
add
adc
fadd
test
(bad)
push
and
lock
popa
mov
sub
xor
mov
jo
push
sub
cmps
sub
adc
(bad)
sar
pop
cmps
xchg
pop
xor
aam
xlat
xchg
xchg
test
sbb
xchg
xchg
ret
and
add
enter
add
jo
std
pusha
add
mov
cmp
test
movs
cmc
jle
out
(bad)
jge
pusha
cdq
mov
mov
enter
shufps
ror
sbb
imul
push
fs
call
push
lea
push
xchg
mov
movs
and
cwde
or
mov
retf
push
sbb
xor
add
xor
fs
ret
(bad)
ret
daa
xchg
dec
xor
call
sbb
cmp
test
mov
loop
sub
add
es
fild
data16
add
xchg
add
add
mov
ror
add
or
push
add
pop
(bad)
xor
push
pop
cmp
add
pop
retf
sub
or
xor
or
or
mov
mov
add
jae
pop
dec
jb
mov
adc
fild
je
add
or
pop
mov
call
sub
push
and
mov
and
add
push
adc
sbb
or
adc
int
or
ss
push
retf
and
jg
xor
and
cmp
daa
xchg
cmp
and
add
lds
mov
inc
push
test
call
ins
sub
xor
sbb
push
mov
and
inc
stos
sbb
js
add
lea
add
in
gs
mov
xlat
test
fcom
je
lods
cmovne
shl
mov
ins
lods
loope
push
test
jo
cwde
mov
push
in
in
or
ja
xchg
push
imul
aaa
adc
or
inc
dec
xchg
or
jp
add
add
inc
mov
mov
je
or
loopne
sbb
pop
ret
add
pop
movs
inc
leave
add
xchg
inc
test
sub
jmp
xor
adc
and
mov
fiadd
add
jno
adc
popa
add
add
and
cmp
pop
ret
push
jmp
mov
lock
mov
test
and
mov
rcr
mov
mov
inc
pop
and
mov
cmp
pop
es
in
sbb
pusha
push
adc
adc
sbb
shr
add
xor
dec
xchg
and
sub
stc
dec
inc
fsubr
xchg
mov
popf
fild
retf
lock
(bad)
lock
sub
jmp
sub
mov
dec
in
add
fistp
add
(bad)
lock
or
xchg
das
inc
add
out
arpl
call
and
cmp
fmul
and
or
dec
(bad)
or
das
in
test
test
add
(bad)
ret
xor
inc
rol
pop
sub
test
fidiv
mov
dec
mov
daa
in
jg
add
ret
mov
inc
repnz
inc
add
pop
and
or
call
pop
mov
inc
sbb
fisttp
(bad)
movs
test
and
sub
push
stos
or
or
mov
mov
sub
adc
push
je
push
pop
add
or
f2xm1
shr
inc
dec
xchg
push
mov
push
push
xor
push
repnz
mov
or
in
mov
cmp
pushf
inc
pop
das
ins
sub
enter
sub
mov
daa
nop
push
mov
sub
test
add
jb
jns
mov
cmp
mov
ror
sbb
pop
pop
push
mov
dec
lahf
(bad)
jmp
sub
fcomp
fcomp
or
mov
xor
arpl
aas
das
cmp
fnstcw
fadd
mov
fsub
adc
and
jbe
push
pop
aas
fdiv
inc
xchg
or
fsub
mov
stos
aas
xlat
sub
xchg
je
xor
int
or
fwait
jmp
push
jl
add
fcom
add
dec
aam
pop
shl
js
dec
adc
ret
dec
fadd
mov
mov
xchg
mov
stos
call
in
loopne
(bad)
add
mov
sub
or
push
not
cld
and
fcomi
(bad)
lahf
add
out
sub
sub
inc
add
sbb
sub
loopne
bound
adc
xor
lods
adc
lahf
daa
sub
push
push
mov
push
xor
cmp
mov
pop
scas
call
xchg
add
mov
sub
add
push
in
add
adc
and
mov
fsubr
xor
and
cmp
mov
loop
add
pop
and
fisttp
pop
mov
push
xor
pop
fistp
fistp
xchg
call
(bad)
or
movs
fild
call
jg
and
jb
cmp
add
enter
or
or
lock
pop
xor
enter
xchg
mov
and
or
retf
rol
mov
sbb
pop
lock
je
add
mov
xor
xor
sub
xchg
outs
adc
mov
add
adc
neg
and
lahf
or
leave
mov
jnp
sub
push
imul
add
lahf
xor
shl
or
sbb
and
adc
push
out
les
push
repz
clc
dec
xchg
dec
(bad)
pop
movzx
xor
inc
ror
js
jg
or
mov
add
or
es
adc
and
push
or
adc
not
mov
or
pop
xor
mov
push
mov
sbb
jne
pop
pop
mov
cs
aaa
jg
adc
xor
inc
inc
adc
cmp
ret
iretw
addr16
jl
pop
dec
push
jmp
fnstenv
adc
jg
cmp
into
and
aaa
jmp
test
add
xchg
or
and
and
jle
fs
and
adc
inc
sbb
add
or
xchg
icebp
inc
imul
mov
fmul
inc
add
jg
lea
xchg
hlt
ret
xor
pop
pop
dec
or
ror
add
cld
inc
sub
jg
dec
xor
add
int3
inc
and
adc
aam
mov
push
rol
movs
inc
dec
arpl
shl
push
inc
mov
adc
and
stos
mov
jmp
adc
add
test
or
add
call
adc
je
and
cmp
loopne
pushf
fild
pop
push
add
pop
cmp
mov
mov
adc
cmp
dec
pop
mov
and
lock
aaa
or
or
dec
jmp
nop
(bad)
adc
inc
pop
and
adc
add
inc
inc
fisttp
jb
enter
jne
les
add
mov
shr
sbb
and
or
loopne
push
jg
test
inc
call
arpl
imul
mov
in
pop
movs
xor
xchg
jae
inc
pusha
lods
sbb
in
or
add
sti
jg
mov
jne
pusha
movs
scas
jl
push
dec
and
mov
es
adc
and
adc
or
movs
mov
pusha
jl
cmp
inc
jl
push
add
dec
add
clc
cmovp
sub
mov
pop
cmp
sub
and
imul
inc
cmp
scas
push
daa
or
fist
fs
cmc
or
xor
aas
mov
add
jle
sbb
xor
and
(bad)
xchg
push
pop
inc
and
or
dec
or
ror
inc
add
sbb
mov
xor
stos
sub
xor
add
and
cmp
jecxz
enter
mov
in
repnz
out
adc
xchg
fisub
pop
lock
push
mov
mov
in
test
mov
push
xchg
push
push
adc
xchg
lock
dec
dec
jno
dec
inc
sti
adc
ffreep
stos
mov
cmp
leave
pop
dec
push
fbstp
add
js
(bad)
clc
add
fsub
mov
and
popa
sbb
and
sar
cmp
mov
mov
xor
xor
push
add
mov
and
or
es
pop
pop
mov
pop
mov
add
call
rol
or
push
jp
arpl
movs
hlt
fsubr
popa
arpl
sbb
xchg
or
jmp
loope
xchg
push
sub
(bad)
push
jecxz
sub
inc
or
mov
cwde
test
adc
sbb
cwde
sbb
cmp
push
or
sbb
aas
dec
jg
lods
cmps
hlt
(bad)
jle
sbb
sbb
jmp
sub
fs
or
adc
mov
sub
int3
adc
inc
int3
xchg
pop
add
cmp
and
adc
rol
(bad)
call
xchg
add
mov
lahf
lahf
movs
sub
aas
add
nop
loopne
sbb
mov
loop
sub
clc
shl
sub
mov
in
in
inc
pusha
test
cmps
out
push
mov
inc
add
pop
lea
dec
or
pop
or
push
pop
or
cmps
lods
and
pop
and
inc
add
mov
ret
(bad)
comiss
rcr
add
mov
lds
push
ret
or
jne
inc
sbb
pop
enter
push
aas
and
or
inc
push
and
push
(bad)
lods
enter
bnd
push
mov
jmp
pop
enter
or
push
pop
dec
xchg
dec
mov
push
or
inc
and
jg
je
sbb
pop
dec
sub
pmulhuw
and
mov
pop
xchg
das
inc
push
imul
or
nop
adc
adc
and
dec
imul
inc
xor
xchg
push
test
push
sbb
xor
ret
jmp
add
mov
pop
add
mov
lea
xor
mov
fild
dec
(bad)
xlat
call
adc
and
sbb
sub
jl
sub
repz
adc
add
ret
or
lods
inc
add
pop
mov
inc
pop
xor
in
call
mov
sub
es
sar
ja
mov
cmp
hlt
push
dec
shl
loope
inc
or
push
inc
enter
loopne
es
(bad)
cmp
lods
lock
adc
dec
jmp
sbb
mov
push
dec
ret
mov
adc
ins
inc
shr
xchg
(bad)
nop
pop
jl
inc
cmp
sub
(bad)
in
mov
sbb
call
stos
clc
jbe
aam
aaa
and
sar
pop
add
xor
mov
shl
rcr
cmp
mov
jl
inc
jno
outs
sub
aas
sub
sbb
sub
sub
pusha
add
enter
sbb
mov
std
enter
mov
push
leave
inc
jo
add
aas
add
xchg
lods
(bad)
mov
(bad)
outs
pop
out
nop
xchg
mov
pop
dec
inc
outs
jno
cmp
je
stc
fisubr
jbe
and
jo
add
test
fdivr
rcl
inc
aaa
inc
fcmovb
pop
cmp
and
stc
movlps
add
sbb
clc
mov
cmp
(bad)
sbb
add
sbb
pusha
and
pusha
(bad)
std
jns
inc
mov
adc
sub
mov
inc
imul
ins
pop
jmp
pop
jns
stos
call
mov
aas
test
jnp
add
mov
stos
pop
sub
arpl
and
mov
jmp
test
pop
pop
mov
xor
lods
push
push
fcomp
mov
ins
jge
ss
or
add
add
int3
test
ret
mov
pop
rol
ins
hlt
jae
and
(bad)
les
push
sub
inc
inc
pusha
mov
popa
cld
xor
add
sbb
and
cmp
test
jns
cmp
clc
add
or
jl
fwait
cwde
xchg
jmp
cmp
int3
js
sar
fnstenv
add
ins
loop
inc
sbb
cmp
mov
addr16
les
ja
jo
mov
mov
outs
xlat
pop
hlt
aam
push
adc
adc
xor
ja
push
inc
xor
lock
sbb
mov
in
mov
sbb
adc
push
mov
or
mov
mov
nop
adc
pop
bound
pop
cmp
inc
les
push
out
xor
mov
outs
xchg
mov
sub
add
adc
push
in
push
pop
jnp
rcl
les
pop
in
ins
mov
cmp
sub
and
imul
rcr
in
fbstp
gs
add
lock
sar
(bad)
sti
ror
adc
mov
add
or
push
loope
and
inc
nop
fisub
mov
add
xchg
cmc
mov
xchg
bound
mov
adc
(bad)
cdq
adc
add
adc
popa
push
enter
push
test
aas
mov
sbb
dec
sbb
cmp
inc
inc
jmp
je
cmp
leave
sbb
aas
add
jg
pop
add
mov
pusha
popf
inc
(bad)
lds
jo
jno
int3
imul
clc
inc
xchg
cmps
outs
ficom
xchg
arpl
sti
cmps
push
adc
push
rol
push
sub
xor
ins
pop
fnstsw
mov
and
in
or
ins
sbb
push
mov
adc
pusha
mov
lahf
lods
add
int3
lahf
sbb
xor
xchg
add
test
aas
mov
mov
jge
enter
cs
cmp
sar
add
push
add
movs
xchg
sbb
dec
lea
lahf
ins
cmp
cmps
xor
jg
push
cmps
mov
adc
xchg
sbb
rcr
test
push
sub
out
add
push
add
dec
in
mov
pusha
lahf
and
jmp
jmp
jmp
nop
lahf
pop
rcl
fcomp
dec
cmp
pop
dec
pop
ret
pop
adc
pop
mov
add
xchg
sbb
inc
inc
dec
add
ss
pushf
mov
mov
add
xchg
adc
jg
loopne
adc
pusha
add
xchg
inc
inc
inc
dec
inc
xor
sbb
dec
add
or
dec
adc
shr
mov
sahf
xchg
popf
sbb
mov
push
xor
xor
enter
xor
dec
inc
xor
pusha
xchg
xor
sub
add
pop
adc
xor
rcr
jns
cs
pusha
pushf
inc
xchg
dec
lods
dec
sub
xchg
pushf
push
sbb
and
inc
jno
lahf
pushf
jl
mov
aas
or
push
aas
popa
add
push
mov
add
fadd
dec
cmp
mov
xchg
int3
imul
or
or
mov
sub
lahf
mov
add
dec
or
push
add
mov
sbb
jnp
xor
push
xor
add
sar
or
lock
mov
and
stc
add
fcomip
adc
jns
enter
pop
(bad)
dec
inc
add
xchg
mov
retf
les
and
mov
pop
mov
mov
sar
adc
fdiv
add
scas
and
mov
adc
out
push
leave
les
loopne
push
inc
adc
gs
cld
xor
call
adc
dec
sti
pop
rcr
xor
xor
popa
sar
jo
sbb
inc
fisttp
cmp
mov
add
fdiv
or
popa
inc
add
xor
fwait
adc
int3
add
mov
cdq
push
hlt
cmps
dec
mov
pop
mov
inc
xchg
daa
(bad)
in
push
adc
xchg
mov
rcl
xor
xor
dec
and
leave
inc
inc
sbb
dec
push
popf
pop
fsub
jo
fild
aas
aam
jmp
fdivr
in
sbb
add
add
nop
pop
xor
mov
adc
mov
adc
fist
add
inc
adc
push
test
mov
mov
push
scas
and
add
cmp
lea
icebp
add
jl
aas
add
dec
sub
xor
sub
rcr
std
movs
push
icebp
push
je
stc
inc
fwait
pop
and
adc
xchg
sbb
loopne
or
adc
sub
inc
push
or
test
cmp
xchg
xchg
call
int
xor
popa
push
adc
adc
fcom
jg
xchg
mov
jmp
pop
shl
popf
pusha
out
push
add
push
popf
and
dec
inc
test
popa
add
jl
mov
pop
sub
and
aam
sub
jns
add
arpl
mov
sbb
cwde
test
or
push
cwde
lea
mov
cmp
aam
xor
dec
mov
mov
adc
add
xchg
push
push
scas
lods
imul
lea
cld
mov
mov
bound
mov
icebp
xchg
xchg
js
add
push
jp
rcl
repnz
xchg
stos
sub
or
sbb
push
add
out
mov
jg
(bad)
dec
or
add
adc
dec
mov
push
push
adc
or
sbb
popf
cmp
cmp
inc
cmp
icebp
cmp
loop
or
add
not
xchg
xlat
add
sti
sub
sub
js
push
fmul
xchg
stos
dec
cwde
enter
jge
or
push
pushf
lods
mov
mov
or
push
fwait
or
xor
jg
cwde
lea
imul
pop
add
push
adc
xor
test
in
fnstenv
outs
retf
jge
add
cwde
scas
or
dec
cli
ror
popa
loopne
pop
repz
call
inc
adc
and
jb
sbb
sbb
xor
sub
inc
popf
and
sbb
adc
xchg
xor
push
push
out
cmps
or
lds
pop
fist
popa
push
test
fst
inc
sbb
jecxz
jno
mov
inc
rol
adc
fcomp
or
adc
fsubr
(bad)
push
es
lea
mov
jne
push
mov
or
or
or
out
and
pop
xchg
fwait
dec
adc
mov
sub
pop
add
sar
inc
and
lock
or
cmp
ret
mov
jg
xor
inc
add
lods
(bad)
popa
inc
ret
jg
adc
push
js
(bad)
movs
retf
aaa
scas
in
xor
aam
stos
mov
cdq
bts
mov
cmp
dec
dec
mov
fbld
mul
jae
inc
jb
daa
xchg
or
push
add
and
lahf
or
dec
mov
or
cs
setle
(bad)
sub
loopne
pop
movzx
push
popf
sbb
popf
mov
jg
mov
call
sbb
lahf
jns
add
jo
retf
mov
sub
adc
dec
cmp
sub
jo
aaa
in
add
adc
push
mov
sbb
jbe
push
sbb
adc
inc
ror
mov
cmps
ss
aaa
dec
or
les
mov
aaa
dec
dec
cmps
lods
aaa
imul
in
dec
ins
cmps
mov
dec
pushf
cmps
adc
lods
cmps
dec
aaa
dec
pop
mov
sub
cld
cmps
or
popf
jbe
addr16
xor
loopne
pop
cmps
xor
(bad)
xlat
dec
in
xor
cmps
nop
aaa
mov
mov
push
sub
pop
mov
dec
mov
loopne
imul
in
in
test
adc
add
mov
add
sub
aas
(bad)
adc
inc
cmp
movs
dec
add
push
mov
adc
add
dec
mov
or
sub
movs
fadd
aas
push
lock
jg
test
js
pop
aaa
mov
add
mov
fcom
icebp
xchg
xor
mov
cmp
add
sub
or
sub
dec
popa
loopne
add
add
xor
dec
push
adc
or
movs
dec
imul
loopne
sub
xchg
pop
pop
scas
or
jb
dec
add
push
or
and
dec
(bad)
push
sub
xchg
or
pushf
jns
icebp
sbb
and
call
mov
sub
sub
movs
xchg
inc
nop
or
add
test
xchg
mov
cmc
ret
jmp
or
inc
or
add
cmp
pop
cmp
ror
push
mov
jle
mov
lea
sbb
dec
jmp
add
jp
pop
add
add
(bad)
mov
jbe
sar
mov
mov
mov
pop
fcom
push
mov
jns
sbb
xchg
movs
add
xor
adc
shl
xor
add
push
add
in
and
xor
sti
fnstenv
imul
pop
ret
add
cs
and
and
xlat
xchg
sbb
test
xchg
xchg
loopne
es
adc
pushf
mov
mov
dec
inc
sbb
loop
(bad)
mov
and
pop
outs
and
adc
shr
jne
sbb
lea
dec
adc
push
inc
sbb
push
inc
push
lods
add
mov
push
push
cld
or
dec
pop
add
std
in
(bad)
loop
mov
push
sbb
add
pop
pop
adc
(bad)
nop
lahf
jmp
call
cmp
fld
fstp
scas
dec
mov
inc
mov
pusha
test
xor
movs
inc
test
cdq
push
push
ror
sbb
cmp
mov
adc
and
dec
cmp
lock
mov
loope
and
sbb
add
pop
or
push
sbb
jns
dec
mov
adc
sub
ret
jns
push
xor
imul
cmp
push
lea
xchg
xchg
sbb
xchg
mov
pop
jl
(bad)
xor
inc
add
or
pop
xchg
push
cs
mov
ror
adc
retf
int3
int3
or
dec
jo
add
aam
and
cmp
test
push
mov
ins
test
ds
ins
fwait
aad
add
sub
inc
inc
push
cwde
jp
outs
adc
xchg
in
pop
xchg
sub
js
cmp
es
push
js
xchg
or
mul
mov
ret
(bad)
inc
inc
lods
jns
sbb
sbb
push
adc
jmp
mov
mov
movs
jmp
mov
mov
sub
pop
or
pop
inc
fisttp
adc
adc
inc
add
shl
sti
add
ins
xor
adc
lea
pop
or
adc
add
jge
cmp
mov
fbstp
pusha
test
add
or
add
stc
popf
aam
cmp
pop
jno
fisttp
aam
push
xor
pop
mov
sbb
retf
scas
dec
pusha
mov
ret
push
aaa
enter
xor
iret
and
and
push
dec
inc
or
dec
add
add
or
dec
lods
sub
mov
or
pop
jno
mov
add
add
movs
loope
cld
push
xchg
ret
push
pop
xchg
(bad)
mov
jnp
arpl
cmp
jl
sbb
daa
push
pop
inc
add
mov
add
daa
xchg
and
jno
or
mov
sbb
jns
loopne
push
xor
or
dec
xor
arpl
add
adc
xor
mov
int
mov
and
xor
cmp
rol
out
pop
imul
test
mov
or
test
js
aas
xchg
loopne
pop
sbb
test
xor
(bad)
(bad)
jmp
dec
lea
loopne
adc
sahf
inc
sub
cld
nop
mov
mov
daa
scas
sti
rol
push
pop
xchg
popf
xchg
call
leave
sti
shl
inc
mov
xchg
fwait
hlt
test
data16
mov
aaa
clc
loope
pop
or
lods
call
mov
pusha
bound
or
inc
or
arpl
mov
sar
sub
sbb
or
leave
inc
add
dec
in
movs
push
sbb
jmp
test
mov
(bad)
mov
(bad)
xchg
cmp
or
loopne
loope
in
out
dec
or
push
xchg
cwde
aaa
adc
and
xchg
jge
jno
sub
inc
dec
test
clc
sub
or
push
mov
mov
xchg
dec
xchg
xor
add
pop
cmp
jb
mov
add
mov
push
(bad)
(bad)
inc
and
fbstp
dec
pop
push
adc
inc
add
or
add
push
fbld
adc
mov
mov
popf
add
or
sub
sub
sub
dec
test
les
mov
shr
loopne
enter
imul
push
cmp
xchg
push
adc
cld
jge
xor
mov
fadd
or
cmp
push
(bad)
enter
fsubr
add
loopne
ins
(bad)
sub
(bad)
outs
pop
fsubr
mov
or
and
ret
fcom
push
cmp
adc
adc
icebp
inc
sbb
and
xchg
xor
xchg
and
pop
add
retf
inc
adc
dec
fadd
test
add
mov
inc
add
dec
fadd
les
add
fild
movs
cdq
add
sub
xchg
push
pop
pop
shl
imul
adc
xor
ret
dec
fsub
mov
dec
pop
out
push
mov
mov
jae
pop
pusha
add
inc
pop
push
mov
nop
das
xchg
xor
jecxz
add
call
sbb
scas
xchg
cmp
add
xor
jl
or
adc
ss
push
and
xchg
les
test
cmps
xor
mov
imul
jbe
(bad)
pusha
push
in
adc
add
aam
xor
push
xchg
mov
mov
jmp
jmp
dec
and
repnz
(bad)
out
into
inc
dec
add
jnp
sbb
pusha
pushf
mov
dec
inc
dec
inc
shl
inc
cmp
dec
dec
or
call
pop
mov
dec
inc
add
add
adc
xor
mov
xor
ret
pop
mov
ss
ror
or
push
mov
inc
dec
mov
xchg
mov
add
or
(bad)
or
stos
xchg
ror
(bad)
mov
fadd
xchg
lods
and
inc
out
dec
xchg
mov
fst
xchg
cmp
dec
inc
add
pop
gs
adc
adc
sar
add
or
sub
xchg
sbb
in
add
and
inc
out
push
test
jg
aaa
jg
data16
cwde
mov
mov
add
pop
mov
cmp
pop
jl
push
add
push
dec
add
mov
je
add
sbb
jp
mov
jecxz
or
or
xchg
jns
imul
outs
je
into
add
enter
adc
jle
push
call
mov
fs
fcom
dec
fucomi
lahf
pushf
imul
push
xor
and
test
adc
test
add
movs
add
dec
mov
cmps
add
or
inc
sbb
bound
add
add
inc
arpl
lea
xchg
les
dec
mov
and
pop
cdq
mov
push
ins
outs
or
jg
add
pushf
push
inc
fdiv
fdiv
fcom
pusha
loop
and
pop
add
lods
test
retf
shl
loope
and
call
retf
mov
adc
xchg
push
stos
or
mov
pop
or
popa
pop
dec
iret
in
test
popa
mov
adc
ror
mov
or
mov
dec
or
std
mov
mov
mov
(bad)
mov
mov
xlat
cs
xchg
or
or
sbb
mov
adc
arpl
and
fist
inc
inc
and
mov
push
mov
(bad)
ja
lahf
std
std
cwde
cmp
dec
add
test
adc
pop
add
lock
mov
xor
mov
add
xchg
xchg
sbb
mov
push
gs
add
xchg
adc
push
rol
repnz
mov
dec
outs
push
shl
adc
add
scas
dec
adc
adc
aad
dec
loopne
push
mov
pushf
cmp
or
mov
add
cwde
and
inc
xor
cmp
add
inc
imul
xor
add
inc
leave
mov
and
pushf
or
pop
mov
int3
stc
jo
rol
xchg
push
mov
out
inc
(bad)
cwde
add
xchg
shl
jnp
movs
mov
and
cmp
push
rcl
xor
jbe
push
or
sub
mov
daa
call
test
sbb
cmp
push
je
jns
shl
or
ja
aas
add
cmp
push
cdq
dec
and
dec
js
xlat
mov
or
sti
or
dec
mov
dec
ret
adc
xchg
lods
call
push
dec
(bad)
ins
rol
and
cld
pop
xor
or
or
cmovg
pusha
shr
test
dec
pop
test
or
push
cmps
xlat
inc
pop
xchg
inc
push
enter
enter
dec
in
test
xor
ret
or
out
dec
sti
pop
or
pop
inc
(bad)
in
rol
pop
mov
ja
jp
in
int3
inc
xchg
xor
imul
push
push
fistp
(bad)
loopne
mov
(bad)
clc
std
in
and
cmp
cmp
xchg
xchg
lock
outs
adc
sbb
or
test
es
add
cmps
add
or
add
mov
sbb
mov
push
adc
inc
dec
shl
add
(bad)
xor
sub
hlt
sub
jecxz
xchg
imul
rol
xor
test
loope
js
gs
icebp
jne
dec
fcom
lea
pushf
hlt
es
push
sahf
push
inc
and
add
inc
mov
es
pop
ret
push
outs
or
ja
sub
sbb
pop
lahf
dec
lock
add
lahf
mov
aas
and
(bad)
mov
jl
inc
movs
lea
ins
push
test
scas
sub
shl
mov
push
cmp
in
sbb
add
add
xchg
add
adc
pop
add
pusha
pop
dec
sub
inc
jbe
jmp
inc
add
ja
push
inc
sar
cwde
ror
and
or
pop
arpl
idiv
add
pop
daa
xchg
add
(bad)
ds
inc
mov
icebp
mov
icebp
inc
icebp
inc
ja
push
and
das
sub
(bad)
push
mov
lea
sub
mov
jae
jb
call
fldenv
call
jmp
loopne
dec
int3
and
sbb
lods
push
ds
add
add
mov
pop
repz
inc
dec
or
xor
xchg
xor
dec
sbb
xchg
xor
adc
les
inc
push
jnp
or
test
cmp
popf
and
popa
stos
sub
pop
sbb
imul
ins
lds
adc
inc
adc
mov
fst
cmp
mov
rol
dec
cmp
pop
add
pop
or
xchg
test
jmp
adc
lods
add
inc
adc
retf
xchg
pop
outs
adc
sub
aaa
push
(bad)
and
inc
sbb
aaa
add
adc
leave
jecxz
mov
mov
(bad)
mov
mov
sar
xor
mov
push
sbb
jae
inc
xchg
retf
in
dec
xor
std
push
cmp
in
mov
xor
cwde
xchg
or
inc
fcomp
adc
pop
xchg
or
js
push
xchg
aaa
and
push
pop
lea
dec
aaa
ja
add
sbb
push
jmp
add
inc
bound
ja
aas
adc
pop
call
push
mov
or
fwait
test
pop
push
push
mov
fld
mov
les
sahf
and
and
xor
xor
sub
push
mov
jo
sbb
jmp
ds
(bad)
hlt
xchg
or
cmps
mov
mov
add
ret
imul
dec
dec
shl
aad
nop
popa
cmp
adc
and
add
int
hlt
cmp
mov
mov
xor
fiadd
ds
jecxz
xor
int3
lock
lods
aaa
mov
xor
imul
push
mov
add
inc
and
sti
ret
jae
xor
(bad)
mov
xchg
jp
mov
mov
sahf
in
es
mov
pop
ins
pop
out
popf
repz
add
push
lods
inc
mov
test
or
repz
aam
cmp
mov
call
jl
cmp
adc
jmp
pushf
xchg
push
and
add
stos
rol
inc
and
adc
adc
jne
das
loopne
cmps
xor
mov
and
vsqrtps
ret
scas
repz
adc
popf
outs
add
imul
push
fcomp
scas
mov
aas
inc
fdiv
cli
rcr
sbb
cmp
jp
mov
outs
adc
and
inc
pop
or
xlat
imul
pop
mov
cmp
adc
test
inc
mov
push
pop
or
repz
(bad)
std
enter
add
push
addr16
rcl
inc
add
mov
mov
mov
inc
add
fcomp
loopne
mov
dec
mov
clc
or
sub
ret
js
fidivr
daa
add
call
ret
adc
xchg
mov
xor
call
shl
and
imul
sub
and
ret
popf
jbe
(bad)
and
mov
stos
mov
ret
inc
and
add
push
sub
dec
or
lds
mov
sbb
nop
pop
push
fdiv
adc
loopne
sbb
inc
mov
fstp
je
xor
jmp
mov
xor
mov
and
test
inc
sub
les
push
aad
rol
nop
xchg
mov
or
or
xchg
adc
mov
or
cdq
cli
cmp
loopne
adc
or
sub
es
or
int
pop
aad
jb
retf
cmp
retf
aas
inc
daa
mov
aas
push
ror
imul
sbb
push
lods
sbb
xor
(bad)
push
push
es
movs
sar
ins
add
test
sub
mov
mov
xor
sbb
dec
or
add
pop
or
mov
cmp
xlat
xchg
hlt
out
pop
inc
inc
sbb
jno
xchg
add
or
and
xchg
add
jno
movs
rcl
aad
xor
mov
sub
push
xchg
sub
pop
pop
out
and
clc
ins
and
add
stos
cmps
pop
mov
ret
add
call
or
xor
sub
test
or
dec
fisttp
add
xor
retf
sbb
sub
dec
jo
mov
sub
push
or
pop
adc
call
xchg
call
xchg
or
xor
rol
jno
mov
ss
dec
or
mov
xchg
sub
push
adc
inc
push
and
and
ffreep
pop
cwde
(bad)
aam
frstor
aam
adc
test
loopne
lahf
or
(bad)
jo
loopne
xchg
inc
movs
pop
push
adc
or
mov
adc
cmp
and
xchg
inc
mov
fist
add
adc
and
(bad)
(bad)
(bad)
pop
inc
in
movs
fild
sub
or
cmp
test
and
adc
and
sub
inc
cdq
inc
loopne
outs
adc
mov
lahf
sbb
pop
adc
push
inc
add
adc
mov
clc
sub
mov
cwde
add
sbb
push
mov
test
xchg
fild
add
add
jbe
sub
dec
xor
inc
movs
daa
es
adc
jo
mov
cmps
inc
adc
or
(bad)
lock
loope
cmp
daa
jno
das
rol
inc
shr
(bad)
or
loope
or
clc
push
xor
popa
xor
push
push
in
lea
mov
mov
adc
inc
cmp
pusha
and
loope
or
xchg
pop
cmp
add
lea
imul
xchg
sub
dec
and
jno
sub
xor
fisttp
mov
ror
cmp
add
aam
cmp
fld
aam
fadd
mov
imul
push
ins
lock
clc
mov
sar
sbb
and
lea
inc
rcr
add
cmp
loop
adc
jg
pusha
fadd
or
push
sbb
or
add
enter
sbb
pop
add
mov
cmp
mov
aas
mov
push
inc
cwde
sub
dec
push
aas
addr16
mov
jno
adc
stos
dec
cli
dec
retf
add
or
adc
inc
or
or
sub
adc
or
bound
ins
pop
jmp
js
dec
mov
xchg
pop
inc
add
inc
or
sahf
cmp
or
xchg
inc
aas
in
and
popa
psllw
mov
sub
and
mov
call
and
xchg
sub
(bad)
iret
push
ret
and
and
cmp
cmps
lods
stc
push
adc
cmps
jmp
scas
add
call
add
jg
or
push
jp
lahf
rcl
cmp
fcmovne
cmp
test
adc
lea
dec
sub
add
jecxz
test
es
mov
(bad)
xor
push
pop
aaa
push
inc
push
mov
loope
inc
sbb
in
jae
pop
add
icebp
add
jp
sbb
push
popa
lahf
jnp
loopne
int3
fistp
daa
imul
loopne
sbb
imul
dec
jne
and
inc
adc
lahf
ror
pusha
mov
jno
repz
aas
syscall
xchg
cmp
out
nop
mov
lods
cwde
sub
sar
push
enter
es
add
add
add
test
jne
test
mov
add
xchg
inc
sub
fadd
add
add
fsubr
shl
cwde
lahf
cmp
xor
lahf
je
cmp
add
repz
(bad)
rol
sbb
and
call
and
iret
test
ret
lea
aam
xor
test
ret
jnp
and
pop
cmps
inc
or
mov
inc
sbb
add
xor
fistp
jg
and
cwde
mov
xchg
push
sub
test
adc
sbb
xor
shr
inc
lahf
push
pop
add
popf
ins
and
push
dec
or
dec
out
adc
or
xchg
(bad)
adc
push
sti
jno
pop
movs
or
stos
jle
lods
ror
jmp
cmpps
mov
inc
and
sub
cmps
pop
rcl
xor
xchg
jl
pop
add
inc
dec
adc
or
sbb
xor
and
inc
adc
cmps
mov
pop
(bad)
mov
push
or
popa
sub
inc
sbb
sbb
data16
shl
or
stc
fst
xchg
pushf
cwde
fbstp
adc
mov
imul
push
adc
sub
enter
mov
push
or
inc
rcr
test
xchg
xchg
add
jo
xor
and
arpl
mov
(bad)
sbb
mov
add
jo
mov
loopne
dec
xor
adc
enter
sbb
loopne
or
in
ret
lds
adc
or
cmp
add
xchg
sbb
pop
dec
repnz
addr16
mov
frstor
or
aam
pusha
call
and
pop
ss
pop
and
sbb
or
sub
test
jnp
and
add
xchg
jge
jg
dec
scas
or
inc
imul
adc
lea
inc
cmp
mov
mov
sub
psrad
ror
or
maskmovq
neg
sbb
mov
dec
add
push
sbb
test
les
test
out
push
mov
xchg
scas
je
sub
out
pop
push
pushf
pop
loopne
add
scas
inc
xchg
stos
movs
cmp
cmp
add
add
adc
or
stc
add
lods
(bad)
and
push
or
int
test
push
popa
je
push
push
stos
popa
or
dec
mov
addr16
enter
lock
daa
or
or
push
test
rol
ror
sub
rcl
pop
adc
in
add
aam
retf
fcom
(bad)
icebp
mov
shr
inc
sub
lahf
jns
push
leave
push
push
pop
sbb
js
jmp
cmp
jae
popa
outs
ret
push
adc
pop
lock
mov
mov
(bad)
push
ror
or
mov
mov
cmps
nop
es
lods
fwait
lods
ss
adc
jmp
mov
loope
jecxz
test
xchg
pop
inc
ins
leave
add
inc
int3
cmp
clc
fiadd
jg
mov
enter
mov
mov
gs
cmps
call
sub
sub
mov
loop
pushf
rcr
push
js
or
clc
loope
add
inc
push
pinsrw
xor
hlt
xchg
xchg
pop
adc
loop
movs
nop
cs
cmps
leave
test
test
in
xchg
sub
test
jno
xor
int
pushf
imul
test
jmp
in
pop
inc
inc
sbb
mov
sub
addr16
test
sub
ror
gs
xchg
sub
imul
mov
and
mov
test
ret
sbb
call
push
js
js
test
je
in
shl
xor
jo
jo
fdivr
pop
jo
cs
fs
mov
arpl
lahf
nop
pusha
adc
add
pusha
add
mov
mov
dec
adc
xor
dec
out
mov
ins
jl
add
add
mov
movs
cmp
add
mov
cmove
aas
sbb
pop
cmp
bound
sar
int3
sub
shl
cmp
inc
sbb
or
jmp
nop
jge
mov
sub
sbb
sub
and
sub
fisttp
jbe
xor
stos
adc
cmp
scas
loopne
jmp
push
mov
adc
xchg
ss
mov
cdq
add
daa
ins
push
xor
loop
popa
and
sub
pop
pop
shl
loopne
(bad)
cmp
rcl
inc
pop
sbb
popf
nop
pop
pop
lea
jo
ret
(bad)
dec
mov
gs
shr
mov
add
sti
inc
jae
movs
fxam
inc
cmp
sbb
jecxz
add
adc
xchg
lds
mov
pop
or
push
fcom
or
(bad)
xor
rcr
add
xchg
and
int3
add
aam
xchg
sbb
ja
test
jmp
pop
cmp
jno
enter
xchg
shl
(bad)
push
add
or
cmps
mov
ret
add
xor
jecxz
or
xor
sbb
adc
push
and
add
ins
mov
xchg
pop
cmc
or
push
and
mov
sbb
add
xchg
pop
add
push
and
add
retf
call
sbb
cmp
inc
cmp
jl
mov
adc
popa
jg
cmp
add
outs
dec
imul
dec
jnp
adc
add
adc
test
sub
dec
(bad)
xchg
inc
aaa
clc
fwait
dec
inc
dec
loop
mov
xchg
rol
rol
das
gs
add
jl
push
jecxz
retf
pop
mov
jmp
(bad)
gs
mov
or
dec
dec
dec
adc
push
nop
enter
shr
nop
mov
or
inc
sar
and
or
add
and
test
and
leave
jecxz
inc
mov
adc
sub
push
movs
stos
cmp
dec
cmps
fstp
fild
add
cmps
or
mov
ds
rol
jno
mov
(bad)
dec
call
test
xchg
or
lahf
push
out
rol
add
xchg
(bad)
popa
mov
push
mov
xor
mov
popa
inc
lock
push
cmp
loope
mov
aaa
xor
xor
ror
loopne
add
adc
cmp
gs
add
cwde
mov
out
pop
cmp
stos
popa
and
adc
fisub
bound
sar
adc
add
xor
mov
sbb
push
and
adc
xchg
adc
pushf
pop
and
xor
jnp
xchg
dec
out
push
pop
rcl
sbb
and
mov
sbb
test
adc
pop
rcr
adc
loope
pop
ja
out
ror
mov
add
dec
push
bound
and
add
push
ror
sar
mov
fadd
push
lock
add
cmp
or
push
out
push
hlt
add
and
dec
and
add
fcmove
jmp
fstp
movs
fstp
dec
push
xchg
in
fsub
ret
mov
cwde
jo
and
pop
nop
adc
jmp
ds
and
add
fnsave
mov
daa
push
adc
adc
nop
mov
repz
inc
sahf
(bad)
inc
shl
dec
in
push
test
inc
aas
sbb
add
push
(bad)
and
and
aas
retf
adc
xchg
push
pop
jbe
outs
inc
or
pop
rcr
shr
sbb
adc
add
mov
jl
int3
inc
mov
jb
popa
movs
and
lods
std
inc
and
movs
popa
sub
or
jns
test
mov
das
shl
jae
mov
nop
arpl
inc
jg
or
adc
push
scas
sbb
pop
xor
mov
add
xor
daa
mov
and
add
cdq
cmp
das
lea
jg
sub
or
inc
push
pop
push
mov
sub
inc
leave
clc
xchg
mov
dec
xchg
mov
cmp
popa
adc
add
test
xor
add
adc
pop
les
enter
and
add
push
or
retf
jmp
mov
ret
leave
add
adc
arpl
dec
and
repz
mov
int3
ror
push
enter
xchg
push
iret
pop
adc
xor
and
outs
jmp
adc
adc
ins
mov
into
and
xor
inc
loopne
add
or
add
call
daa
xchg
push
test
ret
sub
xchg
xchg
aas
mov
test
adc
dec
ja
or
sub
lods
or
rcl
cmp
cmp
aam
inc
dec
test
fisttp
aad
or
inc
inc
sbb
std
dec
cmp
xchg
retf
or
(bad)
lock
retf
lea
push
mov
or
or
in
lea
xor
fisubr
xchg
sbb
and
dec
call
adc
and
arpl
addr16
and
sbb
dec
mov
dec
js
or
fdivr
sub
xchg
pop
add
adc
jo
iret
repnz
add
jnp
stos
xor
or
mov
into
leave
mov
adc
or
cmp
jno
xchg
ins
pop
inc
jb
aas
dec
rcr
ret
cmp
adc
lahf
mov
inc
test
add
add
sbb
push
inc
pushf
xchg
mov
sahf
cli
(bad)
push
fadd
mov
push
aam
jne
or
mov
enter
sbb
call
add
js
sub
and
(bad)
daa
ret
dec
mov
imul
adc
jge
or
xchg
nop
std
push
lock
mov
aaa
nop
and
jnp
scas
imul
sub
dec
inc
ret
lea
add
aam
lea
xchg
pop
or
inc
shl
fld
xor
jp
bound
ja
fcmovnb
mov
fistp
test
add
adc
cdq
dec
sub
sub
inc
mov
jo
xchg
jne
mov
xor
and
inc
ss
dec
shl
jg
loopne
cmps
hlt
test
jg
xchg
mov
popa
lahf
dec
add
in
push
and
dec
inc
mov
adc
mov
xchg
loopne
jmp
shr
inc
cmp
fnstenv
test
daa
pop
rcl
mov
pop
in
push
inc
cmc
in
and
push
lahf
in
add
rol
sbb
ret
dec
mov
mov
ds
mov
push
jns
and
xor
popa
inc
fsub
push
or
hlt
and
sub
(bad)
mov
inc
rol
adc
shl
push
push
jo
mov
add
sbb
push
popf
inc
stos
pop
mov
mov
mov
mov
or
inc
mov
adc
call
mov
push
mulps
mov
call
jo
push
add
add
adc
lds
sbb
popf
inc
(bad)
leave
fimul
dec
pop
cmp
fdiv
dec
pop
inc
or
and
pop
adc
push
enter
nop
add
sub
frndint
int3
xchg
je
daa
or
mov
or
and
mov
push
(bad)
sub
pop
push
mov
mov
loopne
lahf
xchg
push
mov
nop
inc
push
iret
fiadd
push
add
or
jb
or
inc
adc
cmp
repnz
sbb
in
pusha
and
or
or
in
retf
test
fisttp
or
add
je
add
mov
out
fs
psrad
cmp
ror
mov
mov
xchg
pop
sub
push
dec
and
pop
xchg
dec
push
ins
and
and
daa
xor
adc
out
(bad)
sub
stos
hlt
js
mov
ret
mov
mov
inc
jge
mov
add
test
dec
ins
iret
addr16
pop
cmps
pop
gs
adc
aaa
push
test
add
cdq
adc
mov
sub
data16
cmp
lock
mov
add
pop
loopne
pop
(bad)
out
ins
and
add
inc
std
iret
push
rcl
pop
adc
jb
push
mov
out
mov
cmp
sbb
cs
leave
lods
or
or
or
mov
pop
pop
test
retf
mov
jne
or
lock
sbb
dec
in
icebp
rcr
and
ret
inc
and
(bad)
stc
(bad)
add
push
cmp
lock
or
or
imul
lahf
test
cmps
adc
sub
push
nop
xchg
sbb
sub
xchg
lods
mov
rcl
popf
mov
das
ins
inc
test
rcl
add
push
fisubr
add
int3
lea
mov
mov
or
or
xor
lods
add
dec
int3
sar
jne
push
inc
or
les
or
jle
sub
aaa
hlt
add
push
and
fisubr
xchg
(bad)
pop
hlt
movs
jmp
in
movs
out
loopne
mov
push
add
dec
cmp
dec
jg
add
mov
movs
xchg
jb
or
cmp
adc
sbb
mov
cmc
call
lahf
enter
(bad)
mov
jae
rol
sbb
ins
adc
or
adc
loope
mov
rcl
movs
adc
int3
rol
dec
or
push
and
pop
pop
imul
sub
ja
mov
loope
shl
je
dec
adc
shl
outs
mov
iret
rcl
leave
lods
cwde
and
dec
(bad)
jg
xor
inc
or
xor
xor
jmp
test
add
mov
push
mov
sbb
push
xchg
jg
jb
xchg
clc
into
mov
lds
je
jg
das
adc
xchg
lods
xor
cmp
or
push
ins
xor
leave
(bad)
xchg
mov
pop
fidivr
sub
fstp
pusha
add
stos
sbb
inc
push
mov
test
jb
lods
fstp
xor
mov
adc
add
stc
bound
test
sub
sub
mov
test
pop
nop
cwde
leave
and
adc
pop
enter
inc
movs
(bad)
and
jne
inc
and
dec
add
dec
add
ror
mov
xor
pop
sbb
scas
(bad)
out
int3
add
dec
cld
test
xor
inc
xor
jmp
mov
int3
ror
add
aam
push
test
(bad)
hlt
push
enter
test
or
cmp
or
mov
aas
inc
sbb
call
scas
xlat
pushf
pop
sub
in
adc
and
movs
aas
mov
pop
xor
movs
or
sti
sub
jg
or
dec
pop
xchg
and
push
dec
push
pop
pop
adc
mov
xchg
jmp
mov
jno
mov
xchg
je
add
sub
dec
add
lods
call
outs
push
fdiv
jmp
jnp
dec
dec
dec
cmp
and
test
sub
popa
jnp
nop
mov
cld
push
or
jge
iret
rcl
or
jnp
loope
and
jne
push
adc
rcr
cmp
or
jb
xchg
jnp
and
pusha
xchg
push
and
xchg
inc
cs
inc
lods
popa
fcomp
sbb
fwait
push
sub
ret
xor
lock
aad
mov
add
popf
mov
sbb
and
add
and
add
cmp
xchg
adc
xchg
adc
xchg
sbb
inc
jne
xor
aas
ss
ds
push
or
test
sub
daa
add
add
inc
mov
outs
(bad)
mov
mov
cmps
add
das
jnp
fwait
ret
adc
sub
popa
push
ins
loopne
adc
cmp
push
inc
mov
mov
jp
loopne
popf
or
push
jle
call
inc
jae
cs
bound
mov
lods
or
pop
mov
call
hlt
mov
call
add
dec
inc
dec
push
ins
pop
clc
bound
daa
mov
cld
cmp
mov
add
icebp
pop
lods
fnstenv
inc
jae
lods
pop
mov
dec
in
inc
pop
test
in
add
sbb
adc
xchg
xor
add
bound
add
fild
xchg
mov
js
cmp
xor
push
movs
pop
add
push
fwait
enter
jmp
jg
(bad)
push
dec
and
jmp
ins
or
psubusb
imul
xor
jmp
cmp
jge
fucomp
adc
dec
add
mov
mov
test
neg
push
mov
and
inc
jmp
retf
movlps
imul
xor
xchg
dec
call
mov
ret
and
je
xchg
loopne
cmp
or
jo
add
sbb
push
add
sub
loopne
mov
xchg
fild
or
jnp
and
sub
mov
loopne
jp
add
jae
xor
sar
add
pop
outs
imul
mov
sub
test
int
push
jl
adc
scas
add
inc
stos
(bad)
mov
or
cwde
and
ror
pop
sub
mov
jmp
rcl
push
shl
sar
or
sar
and
mov
pusha
dec
xor
in
inc
dec
sub
push
or
cmp
push
ror
shl
mov
es
clc
ds
sbb
push
or
adc
imul
lahf
xor
xchg
and
nop
sub
mov
mov
sbb
test
adc
loopne
add
mov
pop
push
mov
dec
add
retf
mov
sub
or
pop
add
jge
xchg
xor
push
test
sub
in
nop
push
daa
inc
mov
sub
mov
jmp
arpl
sbb
mov
shl
mov
sar
lds
or
mov
lds
jle
push
(bad)
or
adc
pop
cld
jb
les
lahf
lds
or
xchg
ins
nop
je
xor
cdq
sbb
imul
pop
cmp
(bad)
cmp
cmp
dec
add
int3
or
jmp
adc
test
cwde
nop
out
jno
inc
test
cmp
aaa
pop
cs
jmp
(bad)
cli
inc
ror
addr16
hlt
sub
push
je
jmp
or
into
jge
and
sbb
add
jg
jno
dec
xor
jecxz
and
sub
stos
xor
das
or
rol
(bad)
sub
push
in
mov
pop
rol
cmp
fld
add
adc
add
add
or
gs
pmulhuw
test
add
dec
ret
adc
inc
mov
dec
adc
leave
push
lods
loopne
sbb
sub
jmp
gs
pop
push
sub
pusha
arpl
push
push
mov
inc
movs
jmp
ins
popa
sbb
sub
add
add
dec
imul
in
repz
dec
jo
mov
aas
nop
rol
push
dec
in
stc
pop
dec
ss
imul
xor
adc
imul
mov
jg
aas
test
lahf
in
push
push
adc
popf
pop
fist
xor
add
lods
add
mov
adc
adc
int3
mov
cmp
(bad)
mov
mov
mov
and
mov
sub
jl
cmc
js
je
xadd
mov
adc
mov
es
mov
adc
mov
and
ins
dec
int3
xor
and
add
pushf
cld
fidiv
add
add
sub
or
das
test
mov
add
jbe
and
mov
mov
mov
jmp
xchg
jne
mov
sbb
cmp
lods
sets
test
and
sar
je
in
or
or
dec
xchg
fld
xchg
sub
mov
pop
ret
xor
dec
lahf
lock
(bad)
cs
test
or
loop
aas
add
add
xchg
push
ret
cmp
inc
lods
sbb
mov
das
fdivrp
ins
sbb
lock
inc
add
or
fwait
mov
xor
xor
push
mov
push
rol
adc
jl
popf
shl
leave
call
dec
ins
mov
inc
movs
test
movs
xor
fnstcw
les
call
adc
mov
mov
mov
(bad)
mov
cmp
cmp
adc
inc
xlat
fst
dec
pusha
sbb
aam
add
sub
mov
pop
sbb
shr
sbb
xor
adc
add
outs
inc
adc
popa
das
cmp
out
inc
xchg
and
rcr
adc
mov
mov
fadd
fs
cmp
sbb
sub
cwde
sub
push
add
pop
push
repnz
inc
hlt
cmp
das
adc
iret
add
movzx
aas
movs
loope
fdivr
aam
lods
add
mov
and
lods
add
popf
fild
sbb
cmp
pop
push
add
xor
inc
call
aad
xor
mov
(bad)
cwde
fs
icebp
stos
add
fs
or
jns
inc
add
push
sbb
cmp
add
mov
jmp
add
sub
jecxz
inc
push
repz
aam
sub
and
movs
xor
inc
add
or
(bad)
or
pop
aam
std
pop
push
xchg
add
cld
es
ja
sti
jne
mov
out
movs
pop
test
dec
ss
cmpxchg
add
test
sbb
adc
push
add
or
das
add
lock
mov
ss
imul
js
dec
jge
dec
xor
aam
jle
sub
and
push
aas
dec
and
sbb
add
inc
add
(bad)
scas
fadd
add
test
mov
jmp
sbb
aaa
inc
loopne
ds
mov
xlat
pop
xchg
in
xchg
sbb
push
or
cwde
outs
out
fs
and
or
sub
xchg
gs
inc
or
sbb
pop
das
pop
pop
pop
or
ins
inc
outs
add
sub
inc
push
loopne
pop
and
xchg
inc
mul
seto
neg
or
adc
adc
xchg
dec
in
pop
inc
nop
add
push
rcl
xor
ficomp
sbb
(bad)
dec
mov
ins
fild
inc
rcl
(bad)
or
xor
sub
call
mov
pop
jb
dec
xchg
add
inc
sub
jnp
cmc
dec
sub
ins
inc
cmp
stos
nop
and
sar
nop
push
ret
jno
lea
in
out
push
(bad)
es
add
push
nop
sbb
enter
xchg
shl
or
push
mov
aaa
jge
or
sbb
jno
add
push
or
iret
xor
or
mov
or
sub
into
xor
into
hlt
jne
sbb
adc
or
inc
dec
pop
sbb
or
test
dec
adc
call
ret
les
sbb
and
clc
add
test
ret
pop
mov
sub
sbb
fistp
loopne
add
mov
xor
rcl
adc
inc
mov
inc
xor
add
inc
mov
aad
push
xchg
and
xor
leave
mov
fld
inc
arpl
adc
jg
js
daa
inc
and
or
nop
ret
and
(bad)
call
jl
hlt
push
add
shl
shr
test
add
xor
push
push
mov
retf
movs
cmps
test
adc
and
or
sbb
adc
fistp
jbe
mov
les
push
movs
aad
inc
imul
lods
test
aaa
nop
xchg
or
jb
pushf
test
xchg
test
je
sbb
btc
jl
xor
jne
movs
or
or
pop
cld
xchg
sub
or
pop
push
or
mov
and
int
add
retf
div
or
fdivr
push
mov
loop
inc
mov
sbb
shl
sar
pop
imul
cmp
cmc
sbb
cdq
popa
xchg
mov
push
mov
in
clc
daa
(bad)
mov
mov
sbb
mov
mov
pop
jnp
and
mov
xchg
in
and
pop
outs
adc
push
stos
or
push
and
outs
push
add
xor
mov
xor
xchg
cmp
add
int
test
adc
aas
cmp
stos
fwait
or
imul
(bad)
fdivr
ins
aas
dec
inc
clc
xor
sub
sbb
adc
jns
add
mov
fisttp
push
jmp
scas
sub
bts
movs
loope
mov
adc
adc
push
add
add
pop
pop
pop
or
xchg
out
or
cs
in
ins
pop
jo
je
retf
jae
pop
js
jl
xchg
out
pop
sub
das
mov
in
cmp
mov
nop
cmp
xchg
inc
cwde
inc
out
pop
sahf
pushf
dec
mov
cmp
push
test
lods
popa
in
inc
iret
mov
lods
adc
jns
iret
mov
repnz
sahf
retf
jno
jg
cmp
rcl
in
fcomp
mov
retf
jae
adc
xchg
out
pop
in
mov
mov
cmp
clc
(bad)
in
xor
add
rol
jae
cs
or
or
adc
pop
sahf
retf
jmp
push
ds
out
sti
and
add
xchg
out
pop
sub
in
xor
retf
jae
sbb
repnz
inc
aaa
dec
cmp
mov
push
push
retf
jae
cs
pop
pop
pop
out
pop
sahf
pusha
popa
fs
outs
ins
jne
jnp
jns
iret
je
js
jl
pop
sahf
retf
lea
cmp
out
mov
cs
in
xchg
mov
mov
sahf
retf
jae
mov
xchg
out
leave
test
lods
iret
iret
loop
mov
outs
adc
repnz
sahf
mov
in
cmp
repz
test
iret
int3
or
call
or
jns
iret
in
fsub
fsubr
loopne
adc
or
call
cmp
inc
lock
bnd
lahf
adc
pop
adc
push
pop
call
pop
add
xchg
out
or
imul
in
adc
sbb
sbb
lea
xchg
sub
cmp
xor
jns
cmp
pop
sahf
inc
lds
in
cmp
xlat
dec
fst
jae
cs
push
out
out
pop
clc
pop
sahf
retf
cmc
pusha
stc
add
pop
sahf
retf
sti
call
add
xchg
out
sbb
cs
in
jl
xor
sahf
retf
jae
cmp
out
pop
nop
push
xchg
pop
cwde
out
mov
adc
ins
movs
jno
jae
cmp
lds
sbb
iret
in
mov
iret
in
adc
test
in
sbb
adc
mov
jns
aam
fcom
jae
ds
jecxz
loopne
in
pop
sahf
retf
in
icebp
in
iret
pop
sahf
retf
repz
sti
hlt
std
clc
ror
clc
pop
add
adc
add
jns
iret
aaa
and
add
or
pop
sahf
retf
jae
and
xchg
out
sub
cs
in
and
dec
sub
sub
xor
out
pop
xor
cmp
iret
in
cmp
inc
mov
jae
cs
popf
dec
mov
push
test
mov
shl
jns
iret
fs
iret
ins
repnz
sahf
retf
aad
loope
jmp
cmp
out
std
jl
cmp
icebp
add
or
iret
in
mov
nop
adc
jns
cwde
iret
adc
adc
jns
iret
test
lods
push
mov
cs
out
adc
out
mov
(bad)
iret
in
sbb
adc
xchg
int3
cdq
retf
jae
rcr
pop
sahf
fsubr
mov
mov
cs
in
retf
lock
adc
cmp
ret
in
clc
mov
out
mov
add
or
icebp
mov
push
call
in
cmp
or
jae
cs
sbb
and
and
pop
sahf
retf
sub
das
sub
mov
inc
xor
cmp
iret
in
cmp
inc
push
pop
sahf
retf
jae
push
dec
pop
dec
cmp
out
gs
jns
jg
iret
in
pop
sbb
retf
jae
popf
mov
repnz
ins
lods
jo
je
in
cmp
js
jl
retf
jae
cs
(bad)
repnz
sahf
mov
mov
nop
bnd
xchg
not
faddp
out
or
call
adc
adc
out
pop
mov
mov
mov
dec
mov
mov
push
enter
cs
int3
ins
shl
jns
iret
out
adc
mov
lea
iret
out
loopne
adc
lahf
call
mov
push
adc
ret
out
jns
hlt
leave
clc
imul
push
das
iret
cld
iret
add
jle
add
cs
in
or
or
pop
sahf
retf
jae
in
adc
sbb
or
adc
and
and
sub
sub
in
cmp
xor
xor
retf
jae
cmp
cmp
out
pop
sahf
inc
push
inc
push
dec
in
cmp
pop
dec
pop
push
pop
jae
cs
push
imul
retf
and
lahf
mov
movs
ins
lods
jo
cs
in
je
js
ds
jae
retf
sub
iret
out
jns
mov
mov
retf
jae
cs
out
xchg
cmc
cmp
stc
pushf
xchg
or
push
xchg
out
adc
movs
sbb
bnd
lods
and
in
cmp
mov
jae
ror
loope
pop
sahf
enter
sar
xchg
cmps
adc
xchg
adc
imul
out
fcom
sahf
retf
jae
test
mov
(bad)
retf
repz
adc
mov
clc
test
test
stc
inc
push
adc
or
retf
jae
cs
adc
out
pop
sahf
adc
sbb
sbb
ds
std
and
or
adc
mov
and
xor
iret
in
xor
cmp
sahf
retf
jae
push
inc
popa
inc
cmp
out
arpl
dec
outs
cs
in
push
jne
jnp
sahf
retf
jae
jg
and
mov
ins
iret
in
cmp
jo
je
retf
jae
cs
jl
out
pop
sahf
xor
cmp
ror
xchg
out
in
out
jns
iret
in
mov
out
jecxz
test
or
adc
mov
retf
jae
adc
xchg
out
pop
mov
iret
in
cmp
enter
in
sbb
shl
adc
pop
clc
sbb
iret
fsub
iret
adc
cmp
out
mov
(bad)
iret
loope
mov
jg
out
pop
sahf
hlt
fwait
clc
mov
bnd
xchg
mov
add
mov
iret
or
adc
iret
in
adc
sbb
pop
lahf
retf
jae
sti
and
or
sahf
retf
jae
adc
sub
sub
xchg
out
pop
xor
xor
cmp
in
cmp
cmp
inc
pop
retf
jae
cs
popa
dec
ins
out
pop
sahf
dec
jae
ja
in
cmp
sbb
xchg
jae
cs
pusha
xchg
fs
push
mov
mov
mov
je
js
jl
cs
in
and
jmp
sahf
retf
jae
icebp
mov
nop
out
jecxz
cmp
xchg
add
jae
cs
push
adc
repnz
sahf
movs
pop
test
lods
in
cmp
sub
jns
iret
mov
repnz
sahf
retf
push
les
jns
cmp
out
adc
iret
in
fmul
retf
jae
mov
xchg
out
mov
mov
bnd
hlt
leave
clc
int
jl
mov
adc
xchg
out
fisttp
in
out
iret
in
adc
adc
sbb
mov
(bad)
call
push
call
pop
cs
in
and
sub
sub
retf
jae
daa
xor
xor
xchg
out
pop
cmp
cmp
inc
iret
in
cmp
inc
pop
dec
pop
retf
jae
cs
imul
repnz
sahf
push
jne
jge
in
cmp
xchg
fs
jae
cs
push
repnz
sahf
retf
mov
mov
xchg
out
rol
retf
repz
mov
mov
(bad)
out
pop
nop
stc
xchg
pop
ud0
repnz
ficom
or
iret
jg
movs
and
xchg
out
xor
iret
in
mov
xchg
jae
push
les
enter
jns
int3
rcl
jns
adc
jg
inc
adc
cs
fsub
pop
sahf
retf
cmps
call
cmp
out
mov
mov
jae
adc
rol
stc
repnz
sahf
iret
adc
or
mov
sti
adc
adc
xchg
div
add
call
nop
cs
in
and
and
sub
sub
xor
xor
cmp
sbb
repz
inc
jae
cmp
out
jns
jnp
test
iret
in
push
xchg
sahf
retf
jae
xchg
pop
popf
pusha
mov
movs
push
mov
je
retf
jae
cs
jl
loope
pop
sahf
xor
xrelease
lahf
iret
push
adc
pop
sahf
retf
jae
adc
iret
loope
sub
inc
xchg
out
pop
test
lods
pop
mov
in
cmp
mov
mov
lahf
adc
jae
(bad)
stc
cs
(bad)
int3
ret
in
cmp
shl
cmp
adc
cmps
fsubr
loopne
in
call
shr
xlat
lock
cs
out
adc
fwait
adc
cmc
cld
jge
std
cmp
adc
cli
repnz
jns
iret
in
sbb
pop
sahf
retf
jae
sub
sbb
out
xor
and
iret
in
and
sub
sahf
retf
jae
pop
xor
jae
out
pop
cmp
jge
iret
in
cmp
inc
xchg
dec
scas
retf
jae
cs
mov
mov
repnz
sahf
push
mov
mov
int
shl
cs
push
sahf
iret
loope
pop
adc
inc
adc
xchg
out
pop
jl
sub
pop
adc
cmp
inc
nop
dec
xchg
dec
jae
cs
cwde
push
pushf
pop
mov
movs
imul
xor
pop
sahf
retf
jae
xchg
les
repnz
int3
xchg
adc
mov
aam
fcom
fsub
jae
cmp
loopne
adc
in
cmp
jmp
in
in
repz
cs
lock
hlt
(bad)
clc
or
out
jecxz
adc
adc
add
in
cmp
push
adc
or
lahf
add
iret
or
adc
mov
adc
in
cmp
sbb
outs
retf
jae
and
jne
jns
shr
sti
ficom
sub
xor
pop
sahf
retf
lahf
xor
cmp
cmp
inc
mov
in
dec
aad
jecxz
xlat
retf
jae
out
sti
out
jmp
repnz
ficom
or
in
cmp
pop
fs
push
iret
ins
sub
retf
jns
iret
in
js
jl
pop
sahf
retf
jae
inc
test
cmp
out
pop
mov
addr16
out
mov
jge
dec
add
out
jl
movs
(bad)
iret
in
cmp
mov
mov
retf
jae
cs
repnz
sahf
rol
int
icebp
mov
not
pop
push
inc
adc
seta
bnd
fcom
loopne
in
in
cmp
call
jl
lahf
adc
fwait
adc
cmp
iret
loope
jg
cld
scas
adc
mov
call
cs
in
or
ins
adc
adc
sbb
sbb
and
cmp
sub
jns
xor
pop
sahf
cmp
cmp
inc
in
cmp
fld
loope
inc
sub
dec
in
in
cmp
jmp
push
in
pop
idiv
cs
pop
stc
pusha
or
(bad)
jns
iret
in
punpckhbw
ins
daa
pop
sahf
retf
jae
xor
cmp
out
pop
jl
xor
in
test
xchg
out
xchg
lea
mov
jae
xchg
inc
adc
mov
movs
mov
test
lods
retf
repz
aad
sbb
mov
jmp
clc
jl
loope
cli
adc
pop
sbb
sti
call
adc
sbb
repnz
cs
in
loopne
in
call
dec
in
xchg
lock
jns
hlt
jno
push
adc
sub
retf
push
fidivr
dec
test
out
pop
sahf
or
mov
cmps
sbb
sbb
and
retf
shr
adc
retf
jae
shl
xlat
xor
xchg
out
pop
cmp
cmp
inc
bnd
add
inc
cmc
ds
out
std
dec
adc
out
adc
push
xor
sub
in
pop
inc
pusha
dec
in
push
inc
or
push
iret
ins
jns
sub
je
js
jl
retf
jae
cdq
and
pop
mov
jae
cmp
xchg
sbb
cwde
in
cmp
iret
pushf
(bad)
shl
cmp
out
adc
cs
in
mov
sahf
retf
jae
sub
xchg
out
pop
int3
aas
ror
out
jl
das
adc
imul
imul
in
cmp
sub
call
jae
adc
imul
pop
adc
cmp
xchg
das
adc
jae
ret
xor
adc
pop
sahf
out
and
adc
leave
or
mov
aad
xlat
sbb
xchg
adc
jnp
mov
sti
add
adc
icebp
leave
shl
cmp
and
and
cs
cmp
cmp
cs
ja
call
dec
sahf
retf
jae
inc
dec
dec
push
push
xchg
out
pop
push
pop
pop
gs
iret
in
cmp
pusha
jae
jg
mov
ins
stc
cs
xchg
push
popf
adc
iret
in
js
jl
ds
jae
rol
jae
(bad)
clc
pop
xchg
or
adc
out
pop
sahf
pushf
sbb
cmp
sub
jns
iret
mov
mov
mov
dec
mov
xchg
out
clc
adc
repz
add
adc
ds
not
aam
fdiv
pop
sahf
retf
mov
jl
xchg
out
mov
pop
adc
sahf
iret
jecxz
loope
and
hlt
stc
repnz
sbb
out
call
mov
fdiv
adc
fs
cmp
aas
adc
sbb
jns
iret
sbb
and
repnz
sahf
retf
arpl
imul
fdiv
xor
bnd
(bad)
push
jge
cmp
sahf
iret
push
rol
repnz
dec
cdq
dec
lahf
push
iret
in
cmp
push
cmps
pop
mov
jae
cs
mov
(bad)
pop
sahf
xlat
push
cmp
loope
cmc
je
test
lahf
mov
push
(bad)
dec
retf
out
dec
adc
or
test
mov
retf
retf
retf
retf
mov
cwde
cmp
pushf
dec
mov
ins
retf
retf
retf
retf
lods
jno
mov
retf
retf
mov
mov
retf
retf
int3
(bad)
aam
fcomp
clc
and
retf
fsub
loopne
or
sbb
(bad)
dec
mov
cmp
mov
ror
ret
jnp
mov
mov
push
mov
loopne
xchg
mov
mov
mov
or
push
sbb
ret
sbb
sbb
lock
sub
rcl
adc
ror
adc
ret
jno
fidiv
or
mov
cdq
xchg
mov
jp
xchg
xchg
fld
mov
shl
xor
jp
pop
out
je
retf
out
xchg
xchg
dec
aaa
xchg
sbb
test
mov
lea
or
pusha
sti
xor
sub
mov
add
xchg
adc
movs
sub
and
adc
ins
ror
lea
loope
sbb
arpl
dec
add
sub
aas
js
xchg
push
icebp
add
inc
adc
sar
add
inc
cmp
xor
adc
test
mov
mov
ins
cwde
or
push
lods
dec
je
sub
int3
es
cmp
shl
out
adc
or
push
les
and
or
pop
add
adc
adc
fld
dec
sbb
lahf
xor
sbb
cli
and
mov
add
dec
xchg
lods
add
cmc
cmp
inc
jne
jb
bnd
sub
xchg
mov
ret
add
hlt
inc
mov
mov
and
sub
scas
dec
sub
push
push
leave
ret
sbb
popa
or
push
dec
sbb
xchg
inc
hlt
inc
imul
sub
arpl
inc
jp
inc
test
int3
sbb
das
sbb
and
sbb
or
mov
das
mov
rol
fwait
rol
mov
loopne
push
sbb
jne
mov
inc
and
ror
adc
xor
cmp
fs
je
mov
les
addr16
or
add
or
lea
mov
(bad)
test
or
sbb
test
shl
sbb
pop
add
je
fs
xor
test
cmp
sti
xchg
icebp
in
sub
mov
inc
adc
mov
inc
cwde
adc
aad
daa
rcr
pop
pop
xchg
mov
inc
or
test
dec
xchg
cs
sbb
imul
pop
add
je
mov
adc
ret
mov
or
jl
adc
jmp
pop
inc
call
push
test
or
mov
cli
xchg
sbb
sbb
push
mov
dec
or
js
push
add
push
call
push
adc
outs
sbb
cmp
xlat
add
and
enter
adc
inc
xor
or
and
sub
imul
push
mov
movs
(bad)
add
xor
sbb
mov
or
stc
adc
dec
add
retf
pop
dec
ret
jmp
add
ret
xlat
lahf
mov
je
cmp
jbe
mov
mov
or
adc
movs
sbb
aas
jmp
and
mov
cmc
rol
mov
xchg
add
call
and
cdq
push
packsswb
push
and
add
pop
daa
test
jg
sbb
inc
ror
cmps
inc
fbld
mov
sbb
xchg
push
sbb
adc
jg
cmp
pop
test
sbb
cld
pop
or
dec
jg
and
aas
xchg
nop
add
fist
inc
add
dec
adc
xchg
lea
hlt
xchg
nop
push
add
rcr
inc
pusha
sbb
fistp
outs
pop
or
adc
fisttp
cmp
sub
mov
dec
arpl
inc
stos
or
and
or
je
shr
add
dec
adc
inc
or
sbb
fist
pushf
add
add
addr16
sbb
jp
sub
jp
cld
or
mov
repnz
arpl
fistp
xor
add
push
cs
mov
rol
stos
wbinvd
and
adc
or
loope
aas
push
clc
xor
das
cmp
shr
je
add
fadd
daa
inc
and
and
icebp
bound
jne
sub
outs
pop
pop
fild
and
inc
sbb
inc
pop
mov
jg
add
or
jmp
cmp
adc
dec
sub
clc
pop
mov
cld
push
and
push
sbb
adc
sub
and
fucomip
mov
je
and
dec
mov
push
add
push
adc
or
retf
lea
mov
or
dec
or
not
xor
push
and
and
xor
inc
push
mov
jae
add
push
add
aad
mov
adc
int3
mov
or
and
push
(bad)
adc
idiv
(bad)
es
mov
xchg
inc
add
in
adc
nop
dec
cmps
or
aad
pop
add
pop
cmp
sub
imul
aas
mov
jo
add
mov
mov
inc
pop
push
int3
test
xchg
xor
iret
(bad)
cld
sub
xor
push
int3
lods
test
je
sub
outs
inc
out
jmp
jl
sar
mov
clc
push
or
inc
cdq
and
outs
aad
out
(bad)
and
enter
cmp
ins
cmp
xor
and
and
aaa
add
or
or
sbb
add
daa
adc
test
das
and
pop
mov
and
addr16
ret
mov
cmp
(bad)
push
loopne
loopne
pop
in
loop
std
and
int
aam
daa
jns
and
test
pop
and
retf
mov
adc
push
pop
adc
dec
mov
lock
cmp
sub
daa
pop
jl
adc
iret
jecxz
sbb
xor
sbb
mov
imul
xchg
gs
or
loope
mov
cs
hlt
inc
xor
inc
stc
and
stc
inc
dec
mov
push
stc
ds
mov
and
cmp
inc
cmp
dec
cmps
and
(bad)
daa
and
fisttp
jmp
mov
loopne
jae
jb
cwde
or
push
xchg
data16
or
mov
stos
jns
fsub
sbb
pop
inc
shr
mov
cmp
add
xchg
push
push
and
movs
xchg
xchg
adc
nop
dec
mov
aam
mov
rcl
push
daa
rol
mov
push
add
xor
push
or
fcom
leave
or
lock
mov
or
xchg
dec
xor
xor
in
dec
xor
push
xor
adc
adc
leave
and
adc
xor
dec
xor
xor
mov
dec
rcr
xchg
dec
xor
xor
sbb
rcl
xor
and
sbb
xchg
and
xor
push
push
test
adc
adc
sub
or
pusha
sbb
mov
and
or
les
lods
daa
rol
pop
movaps
adc
dec
sti
clc
and
pop
mov
push
add
adc
or
lock
and
fld
jecxz
mov
nop
inc
xchg
cwde
aas
and
push
leave
and
xchg
pop
sub
mov
push
sub
pop
add
fdiv
adc
sub
xlat
sbb
adc
add
xchg
adc
stos
jo
jecxz
sbb
pop
cdq
loope
adc
push
jne
inc
or
inc
jmp
popf
call
or
add
sub
setp
sbb
push
test
les
push
or
les
push
in
mov
xor
loope
and
call
add
test
xchg
lds
enter
or
xor
mov
inc
adc
and
sbb
jg
xor
retf
jg
dec
sub
adc
ins
int3
or
xchg
or
or
aaa
fidiv
and
and
dec
adc
jmp
int3
fbld
push
fisttp
in
jge
or
jmp
or
ja
cmp
mov
push
push
and
add
and
call
or
add
sbb
mov
add
rcr
and
sub
lods
xor
xor
pusha
dec
mov
loopne
cmp
xlat
add
xor
add
adc
adc
mov
daa
sbb
xor
ret
pop
pushf
adc
popf
adc
or
xor
mov
iret
push
aam
pop
cli
fstp
mov
xchg
outs
mov
and
or
sub
retf
sbb
nop
in
lock
inc
push
adc
xchg
or
push
mov
add
or
push
mov
jmp
aam
push
icebp
push
pop
and
clc
fistp
movs
dec
mov
imul
in
or
test
push
outs
or
add
or
ds
inc
or
call
in
or
push
dec
adc
jae
or
je
ret
mov
inc
scas
popa
sbb
bound
das
pop
push
pop
pop
jg
cmp
cld
cwde
push
inc
stos
pop
sti
movs
fadd
sub
inc
or
loopne
and
inc
cmp
or
cmp
or
lahf
jl
add
sub
add
das
dec
jg
xor
cwde
sub
mov
jg
add
xor
adc
in
lds
adc
cwde
sub
and
nop
ds
xchg
dec
push
add
inc
in
sbb
and
cmps
inc
lea
in
jo
add
dec
cmps
add
adc
mov
inc
adc
je
in
mov
mov
in
enter
jns
out
mov
cmp
outs
in
xchg
shrd
shr
push
push
dec
dec
sub
adc
loope
cs
loopne
push
lea
inc
add
adc
jne
inc
pop
push
sub
push
imul
sbb
call
sub
mov
add
mov
(bad)
in
enter
add
jne
pop
inc
dec
mov
push
adc
sub
dec
and
inc
jno
or
dec
nop
hlt
hlt
lock
sbb
lds
pop
loope
(bad)
or
fisttp
xchg
dec
in
call
outs
mov
cwde
inc
dec
adc
or
xor
xchg
push
enter
je
inc
test
dec
push
ret
jecxz
test
pop
leave
jmp
and
cmps
ror
outs
and
ret
inc
pop
and
sub
and
retf
mov
or
fmul
mov
sub
aam
mov
and
cld
lea
add
push
int3
enter
add
dec
loope
dec
sbb
cmp
test
cdq
push
add
repz
push
sbb
std
xchg
xchg
pop
stos
sbb
shl
scas
imul
inc
jl
aaa
dec
lea
les
jno
(bad)
rcr
sti
push
movs
dec
push
ins
ret
les
mov
adc
cmp
inc
cs
dec
mov
mov
dec
sub
pop
sbb
pop
nop
push
daa
shl
pushf
loop
sub
mov
cmps
out
add
mov
arpl
sbb
adc
dec
inc
add
icebp
jmp
sbb
loopne
mov
das
icebp
xchg
xor
movs
(bad)
lahf
mov
cmp
adc
pop
daa
pop
movs
add
pop
movs
mov
add
pushf
pushf
(bad)
xor
or
dec
cs
fsub
rcl
xor
cmps
sub
jno
cwde
jno
and
jg
pop
jno
enter
add
frstor
add
scas
loope
lea
xlat
push
lea
add
dec
aad
daa
mov
inc
and
aaa
cdq
ins
das
mov
mov
fcomi
pop
sub
inc
mov
dec
cs
das
dec
dec
cmp
pop
cs
cmp
dec
add
inc
sub
lea
cs
mov
jl
in
cdq
push
cmp
add
add
jb
in
jo
ins
jb
in
aas
cld
std
dec
push
push
and
pop
inc
ret
push
or
push
dec
cmp
or
nop
inc
call
mov
adc
add
mov
pop
xor
pop
inc
in
pop
xchg
repz
cmp
mov
inc
pop
scas
lods
push
daa
inc
mov
in
add
add
add
cmp
xchg
or
aad
out
sbb
sbb
movs
fwait
sub
jp
jo
dec
xchg
fwait
cmp
iret
loopne
sub
pop
daa
fcomp
or
je
jmp
mov
sub
mov
mov
lds
ret
les
or
pop
mov
sub
adc
sub
repnz
(bad)
dec
fst
sub
jb
pop
inc
inc
cmp
pop
adc
xchg
mov
xor
adc
pop
pop
sbb
imul
dec
inc
out
movzx
sub
mov
data16
cwde
and
test
inc
(bad)
pop
and
jl
aas
xlat
pushf
sub
not
js
shr
push
add
daa
or
mov
push
push
popa
or
xlat
std
dec
sbb
xor
jg
dec
das
adc
or
and
mov
xor
add
push
dec
dec
inc
jecxz
bnd
xchg
mov
push
push
dec
pop
test
clc
loopne
jmp
cmp
mov
nop
push
dec
stc
sbb
or
adc
je
(bad)
sub
dec
push
in
mov
or
retf
and
push
push
pop
push
push
or
or
pop
rol
fst
rol
lea
test
add
push
jo
cmp
in
(bad)
(bad)
push
shl
mov
cld
(bad)
cmps
push
inc
dec
test
sbb
(bad)
push
add
adc
xchg
pushf
std
xchg
xchg
sbb
ss
clc
lea
xor
adc
mov
xchg
sbb
add
mov
jge
test
pop
in
das
mov
out
hlt
das
pop
pop
mov
das
pop
retf
inc
cld
push
mov
push
push
push
mov
and
cmc
inc
pop
ror
jl
enter
sti
retf
in
hlt
sti
sti
sti
push
pop
les
sub
pop
sbb
sar
in
in
call
pop
mov
test
aam
lea
movs
das
adc
in
sbb
xor
mov
push
or
test
dec
jb
pushf
aas
(bad)
jecxz
add
(bad)
loopne
xor
mov
in
push
or
push
pusha
stos
and
mov
inc
inc
retf
(bad)
xor
addr16
in
mov
add
mov
(bad)
loopne
xor
xor
aad
xlat
xchg
adc
enter
xlat
scas
call
mov
das
popa
std
mov
das
bound
push
fwait
enter
imul
loope
adc
in
dec
fs
mov
int3
retf
gs
int3
enter
retf
in
int3
(bad)
(bad)
ror
lea
sbb
loope
nop
and
push
fxch
je
mov
aam
jnp
xchg
xor
lods
popa
movs
sbb
ret
call
dec
adc
pop
xlat
xchg
sar
enter
or
pop
pop
out
js
jmp
sbb
pop
sbb
inc
pop
ds
adc
movs
mov
jo
arpl
mov
sbb
jne
inc
sbb
inc
(bad)
xor
cmc
and
push
xor
push
sbb
push
adc
jmp
cs
test
mov
mov
out
mov
mov
dec
jno
xchg
imul
cmp
xchg
lods
cmp
test
ins
pushf
mov
movs
mov
xchg
jbe
sahf
loope
out
cld
mov
mov
or
sbb
jnp
xchg
adc
mov
xor
push
or
loopne
push
pushf
in
outs
fist
xchg
xchg
nop
and
fwait
lea
rcl
mov
movs
sub
jne
jmp
ins
xor
mov
cmp
dec
movs
dec
xchg
das
jb
nop
cs
dec
cs
mov
jae
push
xchg
lea
test
shl
dec
cmp
mov
stos
mov
push
mov
mov
jne
dec
loopne
hlt
adc
les
div
adc
and
test
lods
scas
jbe
in
dec
jecxz
mov
test
mov
xor
push
and
das
js
xchg
retf
and
jl
mov
dec
push
jl
cs
dec
je
jo
dec
je
in
and
ja
add
adc
cmp
mov
je
jl
xchg
retf
and
ins
push
jge
push
je
cs
dec
fs
jle
out
loopne
mov
inc
loopne
inc
mov
pop
mov
xor
sti
mov
dec
les
outs
push
je
push
adc
push
push
sub
cwde
pop
push
fadd
pop
dec
dec
push
add
movs
xor
sti
push
or
or
jg
outs
sbb
lods
int3
mov
int
fnstcw
push
outs
dec
pop
pop
popa
ins
mov
mov
dec
rol
bound
ds
ins
fist
ds
mov
test
fs
push
loop
and
and
int
xor
std
pop
ss
out
in
mov
ret
push
pop
xchg
push
mov
mov
push
pop
nop
ins
outs
mov
sahf
push
mov
mov
inc
add
daa
pop
add
lock
push
push
sbb
and
mov
aaa
or
into
xchg
xchg
fisttp
sbb
fist
or
or
or
adc
lock
hlt
cli
xor
add
cmc
and
test
add
mov
push
pop
add
je
xchg
stc
nop
into
add
mov
test
xor
sub
jl
jae
std
or
pop
and
lds
sbb
and
xchg
cmc
pushf
inc
ss
sbb
loop
xchg
loopne
fisttp
imul
outs
push
mov
add
rol
and
jnp
push
dec
cmp
ins
dec
add
sbb
jnp
jo
movs
xchg
inc
inc
inc
add
or
xchg
and
ror
mov
popa
fld
repnz
js
add
push
pusha
js
fdivrp
js
mov
int
je
inc
ret
xchg
push
and
push
mov
dec
rcl
mov
jmp
jecxz
in
add
jmp
fsub
add
loopne
inc
inc
imul
adc
lock
(bad)
fmul
sub
imul
adc
jbe
out
adc
test
adc
xor
jo
out
add
add
mov
dec
or
ss
aaa
(bad)
inc
or
ss
out
inc
adc
jecxz
dec
sbb
mov
push
mov
clc
(bad)
fbstp
add
add
inc
loopne
sbb
inc
push
adc
hlt
das
sbb
add
ret
imul
xor
pop
jl
inc
dec
ret
cwde
ret
push
jl
add
repz
sbb
cmp
pop
cmp
loop
clc
push
jle
pop
out
mov
inc
and
sub
call
sahf
mov
push
enter
movs
push
cmp
stos
jo
jno
jae
fisubr
sbb
add
add
mov
pusha
(bad)
pop
add
add
add
ss
in
add
add
sub
nop
lods
inc
sub
aas
lods
jnp
add
cmps
mov
dec
cld
sub
or
sub
sub
cmp
inc
add
cmp
or
jmp
jns
inc
sub
cli
and
mov
xor
pop
inc
inc
or
je
adc
lahf
push
jbe
sub
sub
cmp
xlat
adc
lahf
inc
xchg
and
lahf
sub
(bad)
mov
cmc
loop
add
ins
fdiv
mov
jo
jmp
adc
or
push
xchg
push
xlat
das
add
cmp
push
enter
push
clc
push
jecxz
pop
inc
or
shl
jne
push
jp
cmp
push
rol
add
add
pop
mov
sbb
sub
sbb
nop
xor
jp
add
sub
icebp
xlat
or
and
jnp
loop
push
cdq
jae
mov
retf
add
inc
loop
rcl
xchg
mov
dec
and
add
push
add
and
or
push
lods
sbb
call
adc
shl
dec
xor
mov
arpl
sub
iret
jp
imul
xchg
in
dec
jns
aam
call
fimul
push
pop
xor
das
jge
or
es
xchg
test
daa
test
cmp
imul
inc
jle
inc
sahf
nop
xor
adc
jb
or
sbb
add
call
cwde
ins
adc
adc
mov
in
push
repnz
add
rol
add
add
add
daa
shr
add
inc
add
or
mov
mov
sub
fistp
mov
pushf
and
push
xchg
add
adc
xor
loope
add
sbb
nop
and
fist
dec
in
cmc
inc
ret
add
mov
xchg
add
push
xor
adc
fs
cmp
les
mov
pusha
add
inc
adc
rcr
lahf
mov
pop
jo
daa
xor
push
ret
pop
jnp
ror
pop
mov
mov
pop
add
lock
xchg
xchg
xor
mov
or
mov
pop
lods
sbb
lock
dec
xor
sbb
shr
fnstcw
adc
popa
pop
rcl
mov
or
or
push
cmp
dec
lock
adc
adc
jo
pop
call
es
int3
in
push
add
push
sbb
cs
aaa
lods
mov
xor
sbb
sar
mov
cmp
xor
cmp
and
lea
enter
fild
or
es
jnp
dec
mov
xchg
or
xchg
aam
add
dec
lea
adc
xchg
push
lock
daa
test
and
imul
mov
adc
fmul
mov
xchg
adc
mov
test
lahf
add
add
or
or
imul
mov
mov
mov
ins
gs
mov
iret
sub
sar
(bad)
push
mov
and
sub
dec
mov
es
movs
arpl
aad
jno
adc
sbb
adc
mov
rol
pop
call
arpl
adc
mov
mov
movs
fld
cmp
pusha
outs
adc
add
mov
lock
and
inc
sub
dec
or
pushf
mov
cwde
sub
or
mov
xchg
mov
dec
mov
add
dec
rol
jo
adc
test
push
sub
adc
add
shl
dec
xchg
xor
or
and
jbe
add
sub
in
out
pop
push
pop
mov
rol
pop
mov
rol
je
sbb
add
mov
add
add
push
outs
dec
sbb
jb
sbb
push
push
push
aad
inc
and
mov
adc
cmp
sbb
push
loope
inc
pusha
pop
fstp
fiadd
test
add
or
ror
jno
push
ins
movs
add
sub
sub
xor
add
xor
les
dec
cmp
int
or
push
(bad)
(bad)
cmp
and
ror
aaa
jo
add
aam
pusha
sbb
pop
call
pop
or
shl
push
dec
or
sub
and
pusha
rcr
add
ins
pop
xor
mov
add
cmp
add
dec
mov
fbld
mov
and
push
or
add
mov
sub
xchg
xchg
pop
loop
sar
add
push
or
sub
inc
mov
lock
adc
push
rol
adc
and
mov
dec
add
ror
aam
jo
aam
nop
loope
sbb
push
pop
ja
push
or
cmp
movs
sti
add
pop
add
fcom
xchg
mov
xchg
sub
es
lahf
fmul
push
les
outs
test
imul
inc
push
dec
mov
add
dec
dec
cmps
mov
cmp
push
loope
jno
dec
loopne
aaa
add
dec
pop
div
mov
jnp
jno
sbb
sub
inc
popa
sbb
push
or
sub
sub
inc
add
xor
xchg
mov
inc
dec
or
ss
ss
sub
call
and
(bad)
adc
add
jmp
scas
xchg
or
or
fdiv
mov
jo
fs
mov
fwait
xor
mov
pop
pusha
push
aaa
xor
test
or
ins
mov
sub
sub
in
fwait
adc
dec
clc
dec
or
add
daa
mov
lods
sub
mov
pop
rol
dec
lods
pusha
in
ror
inc
dec
and
sbb
jmp
test
shl
adc
inc
sub
lods
mul
sub
push
dec
mov
sub
gs
(bad)
fld
out
add
mov
or
adc
je
fiadd
mov
fsubr
mov
sahf
out
sbb
jl
lods
push
jnp
repz
call
add
adc
enter
add
push
fcmovb
push
or
push
or
add
stos
add
adc
mov
pusha
and
push
sbb
not
ret
call
pop
xchg
add
adc
or
aam
stos
ins
or
push
push
popf
ins
jmp
sbb
inc
or
jne
shl
push
imul
cmp
and
xchg
and
cmp
push
movs
add
mov
sbb
add
add
mov
outs
mov
ret
xchg
mov
rol
push
loope
add
mov
or
dec
xor
test
add
or
add
add
add
fdiv
and
add
mov
pushw
stos
cdq
or
push
rcl
push
pop
leave
jno
push
inc
test
in
in
inc
mov
in
mov
push
jb
cmp
call
sbb
jecxz
mov
in
int
sbb
pop
mov
mov
pop
mov
jne
push
inc
dec
jg
pop
add
inc
and
push
ja
xor
lea
in
mov
outs
lea
fadd
jmp
shl
das
dec
retf
sbb
mov
or
ss
push
pop
pop
pop
push
nop
sbb
and
inc
imul
je
jo
inc
ja
mov
mov
ret
xchg
mov
mov
or
and
aam
push
cmp
and
rcr
push
mov
push
mov
push
dec
repz
es
xor
xor
je
jne
inc
adc
pop
mov
inc
mov
lods
call
mov
lds
and
pop
or
pop
sbb
aas
(bad)
test
repz
cld
mov
jle
test
add
or
mov
mov
daa
or
add
xor
in
pushf
dec
inc
test
adc
pop
add
inc
aad
cwde
mov
mov
pop
ins
ret
mov
dec
arpl
mov
add
push
and
push
cmp
int3
inc
add
leave
les
inc
mov
stos
push
add
or
sub
es
pop
repz
jmp
(bad)
mov
mov
mov
loopne
cmp
inc
sub
ja
mov
mov
xchg
push
xchg
or
outs
push
push
add
adc
mov
sub
adc
xchg
outs
loopne
and
aaa
loop
xor
cmps
add
sar
sub
call
mov
les
fbstp
in
add
adc
lock
sahf
xor
jno
and
mov
adc
push
xchg
and
and
cmp
mov
push
icebp
add
shl
repz
loopne
(bad)
movs
fst
mov
xchg
adc
inc
push
push
dec
and
in
std
rcr
shl
shl
mov
stos
or
push
add
sbb
xchg
pop
call
(bad)
aam
add
lock
sbb
jno
cmps
add
(bad)
cmps
repnz
lods
inc
popf
fidiv
mov
enter
js
movs
frstor
mov
ss
mov
xor
mov
ret
leave
push
adc
add
ins
push
adc
nop
jo
adc
xchg
sbb
inc
jmp
or
outs
pop
jmp
pop
pop
pop
pop
jmp
pop
es
ud2
xlat
lea
shl
xchg
loope
call
xchg
mov
popa
loope
sbb
mul
in
inc
inc
pushf
cmp
cmp
aam
shr
and
and
cmp
mov
dec
push
xchg
xchg
cmp
cmp
push
add
cmp
(bad)
cmovb
xor
mov
xor
sbb
push
dec
push
mov
sub
jg
adc
cmp
ror
add
bound
mov
jg
pop
popa
jmp
jmp
push
mov
inc
in
add
daa
pop
pop
adc
or
cs
xchg
mov
or
xchg
or
int3
mov
jecxz
rol
or
add
inc
push
jb
out
xchg
jo
loope
inc
jmp
push
loope
inc
fld
loope
lods
hlt
les
xor
jmp
or
repnz
lahf
mov
fistp
mov
clc
and
jecxz
test
jmp
sub
call
jmp
iret
inc
nop
leave
adc
xor
dec
stos
ret
and
dec
nop
ret
or
ss
out
in
push
js
adc
iret
movs
pushf
inc
les
enter
sbb
cmp
rcl
mov
jge
add
inc
or
or
rol
test
lock
loop
sbb
sbb
pop
pop
push
enter
pusha
add
int3
pusha
stos
lock
int3
inc
fstp
pop
xor
sub
or
pop
loopne
jmp
out
rol
sbb
cmp
call
call
and
and
dec
xor
mov
repnz
push
mov
loope
dec
push
cmp
outs
add
pop
enter
or
pusha
sub
test
adc
adc
mov
push
add
adc
lods
push
movs
push
jbe
mov
je
pusha
pop
repz
push
icebp
and
(bad)
push
fwait
adc
rcl
les
mov
adc
pop
scas
cmp
push
sub
push
sub
push
shl
mov
rol
mov
loope
call
push
mov
mov
push
jmp
pop
aas
bsr
cmp
inc
mov
mov
fs
mov
sub
add
call
adc
lods
xchg
sbb
ins
sbb
sub
jae
jmp
push
cmps
mov
dec
pop
mov
pop
call
daa
mov
lock
imul
push
dec
lods
and
cmc
cdq
dec
repnz
sbb
call
in
mov
loope
adc
push
rcr
mov
aas
push
nop
xchg
inc
shr
push
jo
cld
and
xchg
pushf
dec
repnz
pusha
pusha
pusha
clc
xchg
retf
and
clc
int3
int3
int3
dec
push
sahf
adc
int3
mov
ja
scas
pop
pop
pop
daa
inc
pushf
dec
hlt
hlt
xor
retf
sub
inc
push
icebp
push
inc
xchg
lock
cmp
or
push
(bad)
add
loop
sub
dec
dec
(bad)
pop
adc
dec
jmp
pop
xchg
mov
aam
adc
add
xor
in
icebp
adc
add
adc
or
or
and
inc
call
xchg
xchg
jg
adc
lahf
xchg
jns
push
and
loopne
xchg
nop
push
xor
inc
adc
lods
or
lods
mov
mov
jl
inc
sub
jecxz
mov
cs
icebp
mov
or
adc
cmp
jno
bound
jno
sbb
out
mov
xchg
jl
imul
add
test
mov
les
mov
or
adc
inc
add
xchg
int3
pop
sbb
loope
ins
mov
es
adc
mov
adc
dec
mov
lahf
test
pusha
rol
or
or
and
xchg
push
xchg
(bad)
lods
add
cmp
mov
out
out
xchg
sub
lds
adc
dec
adc
mov
mov
cmps
mov
push
add
aas
or
mov
push
sar
xor
or
adc
int3
and
xchg
sub
rcr
loopne
clc
mov
xor
dec
and
ror
dec
loop
es
pusha
xchg
xor
and
pop
pop
push
sub
mov
daa
std
lods
xchg
mov
(bad)
or
jge
lea
ret
mov
sub
inc
in
mov
add
in
dec
dec
les
add
add
mov
mov
add
inc
lea
push
jmp
clc
xchg
dec
or
sub
xor
movs
push
fs
mov
dec
or
or
dec
les
icebp
aaa
pop
and
xchg
add
xchg
aaa
movs
push
dec
xor
and
mov
lods
dec
sbb
and
pop
mov
dec
adc
inc
sar
adc
dec
sbb
jl
adc
mov
icebp
inc
stos
dec
dec
xchg
mov
dec
movs
adc
sbb
sar
dec
jmp
das
out
sbb
dec
jno
and
inc
popf
cwde
adc
loopne
loopne
inc
sbb
xchg
mov
xchg
mov
mov
mov
test
(bad)
xor
adc
scas
movs
daa
xchg
pop
cs
test
enter
jg
xchg
or
add
xchg
push
mov
pushf
pushf
inc
jb
xor
and
mov
mov
xor
inc
(bad)
sbb
std
mov
or
pop
inc
test
outs
imul
pushf
or
xchg
nop
lahf
sbb
pop
adc
in
and
outs
fwait
push
add
push
mov
push
fild
dec
or
fwait
adc
dec
pop
sub
push
pop
mov
mov
jnp
add
adc
aad
jl
jbe
or
or
push
pop
or
movs
and
dec
lods
ret
jno
adc
add
mov
add
sub
pop
int
jmp
or
and
or
(bad)
sbb
mov
add
add
icebp
add
xor
push
fwait
or
and
sbb
pop
(bad)
ins
test
lahf
sub
cld
cmp
pop
inc
nop
out
nop
mov
add
or
test
mov
xchg
xor
mov
adc
jp
mov
in
inc
fs
aam
lods
cmp
mov
mov
mov
inc
add
xchg
pop
add
and
sub
dec
ret
pusha
lods
mov
lahf
inc
stos
loop
pop
and
jbe
int3
out
stos
xchg
and
and
xchg
cmp
add
mov
jmp
sbb
xchg
jo
popa
jl
push
clc
and
dec
and
dec
iret
or
jmp
and
das
push
cld
jno
test
(bad)
push
aam
or
jns
push
and
sbb
test
bswap
repz
cmc
ins
pop
push
push
loop
sahf
out
xor
pop
ins
movs
sub
sbb
mov
add
mov
movs
push
xor
inc
daa
add
add
mov
and
lea
sub
cli
dec
xchg
add
add
seto
sub
inc
xor
adc
aas
(bad)
cmc
mov
jo
lods
enter
push
or
dec
sbb
repz
lock
and
sub
add
adc
call
mov
push
aaa
push
or
mov
or
or
jg
arpl
or
cmp
sub
or
mov
pusha
xchg
pop
mov
imul
dec
les
movs
push
xchg
mov
lea
dec
rcr
js
xor
inc
xor
jg
cmc
mov
mov
mov
fld
sub
jle
add
inc
nop
dec
mov
dec
cmc
ss
add
adc
nop
rcl
nop
push
adc
loope
or
dec
pushf
mov
mov
leave
or
push
sbb
jo
(bad)
dec
mov
sbb
adc
adc
xor
pop
mov
movs
adc
loopne
sub
or
mov
mov
xchg
test
jb
xchg
and
dec
xor
nop
call
dec
sbb
shl
js
ret
je
and
int
dec
push
push
pop
enter
add
pop
push
xchg
into
sbb
adc
scas
ret
mov
xor
test
sbb
and
add
(bad)
jns
les
sahf
test
or
adc
popa
ja
xchg
jo
popa
fld
mov
dec
fld
je
cmp
push
mov
sbb
pop
les
push
mov
(bad)
es
scas
or
scas
mov
dec
mov
and
jecxz
fs
out
cwde
scas
cwde
cwde
cwde
dec
adc
cdq
and
(bad)
nop
das
push
sbb
and
mov
stos
shl
inc
imul
push
xor
pop
or
mov
in
call
sbb
lea
xor
or
fist
and
leave
adc
push
inc
test
inc
lea
sbb
pcmpgtb
dec
add
jne
pop
or
push
ins
add
mov
add
dec
add
add
adc
in
xchg
pop
fdivr
inc
adc
xor
lods
xchg
out
loopne
add
daa
inc
sti
or
dec
jge
dec
lds
jg
mov
add
add
fistp
inc
loope
aas
mov
repnz
int3
(bad)
and
inc
call
dec
pop
jo
jno
add
sub
dec
aas
stos
inc
adc
pop
xchg
jne
jb
mov
dec
mov
push
mov
adc
cmp
adc
pop
push
jnp
or
clc
pusha
add
push
pop
or
retf
jmp
cmc
sar
std
scas
loop
test
add
pop
pop
neg
push
adc
add
data16
or
add
inc
or
nop
or
jg
inc
push
pusha
es
add
adc
jg
jo
add
add
add
mov
xor
ss
xor
add
shl
jb
sbb
push
cmp
push
add
lahf
sbb
add
aas
adc
dec
add
cmp
xor
jae
and
or
cmp
repz
jbe
or
push
and
inc
(bad)
mov
push
jmp
and
xor
cli
or
mov
dec
loopne
xor
sbb
add
mov
fld
cmp
xchg
rol
jl
xchg
jg
ret
pop
cwde
popa
mov
inc
sub
ret
(bad)
cmp
jl
inc
sbb
or
sbb
(bad)
mov
jmp
(bad)
cmp
(bad)
fcomp
sub
fucomip
mov
or
inc
bnd
sub
push
xor
jmp
sub
jmp
mov
loope
pushf
xor
or
icebp
ret
pop
jo
xor
les
ret
dec
lock
or
inc
ror
xor
lahf
inc
sahf
add
add
xor
mov
or
lahf
mov
add
icebp
sbb
fwait
add
daa
or
dec
or
daa
add
or
push
ins
cmps
data16
mov
add
or
or
or
mov
mov
or
push
and
and
mov
leave
xchg
add
icebp
lahf
sbb
rol
add
push
add
xor
dec
jns
xchg
or
and
add
xor
ins
add
add
or
dec
ins
sbb
lea
outs
(bad)
or
xchg
adc
pop
fild
pop
rol
push
mov
ret
mov
mov
jl
(bad)
mov
adc
xchg
push
pusha
xor
in
inc
and
dec
add
or
pop
cmps
in
or
pop
xor
stos
loopne
loope
jl
imul
fnsave
adc
or
in
xor
(bad)
xchg
mov
push
push
pop
jae
(bad)
adc
cs
jae
push
retf
fcom
sub
pop
jge
popa
movs
adc
adc
push
sbb
mov
sbb
ds
push
xchg
dec
adc
inc
push
gs
sub
les
add
dec
jno
and
adc
or
or
and
sar
sti
cld
push
imul
sub
scas
ins
inc
mov
mov
mov
retf
cmp
push
jno
mov
int3
js
aam
gs
add
leave
add
ror
sbb
push
add
pop
cmp
rol
data16
or
and
pop
and
fstp
movs
inc
nop
xchg
sbb
lahf
shr
test
dec
jns
add
add
into
sub
mov
push
lods
mov
sbb
movzx
or
inc
rcl
or
jae
movs
inc
movs
mov
call
and
mov
xchg
jne
movs
fcom
aas
and
sbb
add
jl
cmp
loop
xchg
(bad)
iret
sub
test
cmp
ds
lock
lea
pop
jg
mov
lahf
sbb
mov
sub
and
mov
and
push
jecxz
and
add
sub
adc
inc
int3
lahf
add
call
push
cmp
inc
cwde
adc
push
push
in
sub
push
loopne
add
mov
xor
add
aas
mov
pop
mov
pop
sbb
xchg
add
and
xor
add
pusha
push
aas
ja
mov
inc
jg
aas
enter
not
push
xor
jo
push
xor
push
add
mov
xchg
test
pop
arpl
or
dec
or
inc
pusha
stos
pop
pop
adc
pop
mov
mov
add
loopne
test
xor
add
sbb
or
or
es
adc
cmp
fmul
jo
mov
sub
sbb
data16
push
xor
pop
inc
mov
sbb
push
and
scas
cs
test
fwait
aas
add
enter
pop
les
pop
shr
dec
jge
sub
(bad)
lods
lods
or
xor
test
repz
push
push
pop
add
dec
nop
inc
sbb
mov
imul
es
js
sbb
xchg
add
retf
lock
sbb
jne
pop
fdiv
push
lea
pop
mov
sbb
popf
jae
int3
push
or
or
rcr
adc
addr16
bound
mov
sahf
and
sar
xlat
add
jmp
cmp
sbb
das
xor
aam
and
jnp
add
push
cmp
fisub
sub
in
or
or
bswap
int
cmp
sub
loope
and
xchg
push
jecxz
dec
mov
mov
or
ins
sub
jbe
out
xlat
push
lds
popa
fsubr
mov
(bad)
leave
mov
sub
inc
adc
sbb
add
jb
push
and
inc
push
lea
xchg
lods
and
test
inc
add
or
mov
in
fcom
pop
xchg
xchg
fadd
add
gs
add
inc
iret
mov
push
mov
shld
push
cwde
add
inc
and
push
add
add
and
adc
fadd
retf
jmp
call
dec
int3
rol
loope
arpl
cmp
clc
shr
and
push
retf
dec
xchg
add
jne
rol
(bad)
mov
mov
fmul
rol
xchg
or
sub
jne
cdq
dec
imul
push
or
jne
pop
lahf
sub
enter
xor
or
push
inc
adc
lods
int
push
imul
xor
jp
push
sbb
popa
push
shl
or
pop
and
cmc
and
dec
push
and
mov
and
ror
push
or
pusha
adc
pop
iret
push
push
push
adc
add
aad
nop
add
add
or
adc
mov
inc
add
xlat
mov
inc
add
repz
rcr
std
or
or
mov
mov
or
in
inc
inc
loopne
push
jne
sub
mov
cmp
cmp
adc
lahf
push
cmp
adc
and
cmp
(bad)
fs
test
sbb
jne
jmp
fst
(bad)
xchg
xchg
loope
mov
arpl
cmc
push
lea
pop
pop
sar
(bad)
(bad)
stc
xor
push
lea
test
daa
movs
(bad)
retf
scas
dec
sub
sub
jb
pop
iret
sbb
cmps
pop
mov
fcom
or
add
adc
pop
inc
imul
enter
pop
sbb
(bad)
cmps
jno
jo
lds
xor
inc
xor
or
jnp
imul
push
jbe
mov
aam
adc
test
dec
jge
jmp
lock
adc
mov
lea
retf
sub
sub
push
jo
jo
cmp
add
stc
stc
and
xchg
or
loopne
sbb
and
xchg
dec
addr16
in
push
fcomp
loope
dec
mov
shl
cs
inc
aas
add
sub
ret
mov
adc
or
dec
movs
or
shl
retf
jmp
add
fdiv
jp
adc
cmp
push
mov
pop
adc
(bad)
loope
pop
pop
fldenv
add
shr
xor
loope
xchg
add
movs
or
xor
lods
inc
rol
and
loopne
push
in
jmp
cmp
sub
dec
sar
or
rcl
xchg
adc
mov
jmp
pop
sbb
les
call
adc
sbb
inc
sbb
fisttp
jmp
jno
push
jno
pop
adc
aad
add
ins
popf
enter
dec
cmc
xchg
pop
adc
jne
mov
out
mov
test
test
dec
inc
or
and
fucomp
jl
stos
add
dec
pushf
and
and
dec
mov
retf
and
cli
(bad)
(bad)
jg
mov
adc
fcomp
(bad)
and
pop
lea
push
fs
inc
das
cld
int3
popa
test
fwait
(bad)
retf
push
add
pop
sti
lea
outs
adc
adc
xchg
jo
pop
cld
test
push
mov
or
sti
add
jae
xchg
test
add
adc
cmp
pop
or
or
sbb
mov
pop
fdiv
ins
in
iret
xor
rol
cli
out
sbb
sub
xchg
or
push
inc
cld
jge
xor
addr16
rcl
enter
ret
gs
or
enter
pop
lea
mov
or
ins
sbb
jecxz
push
cli
cli
cmp
icebp
call
and
xlat
rol
das
cmp
dec
pusha
sbb
loop
pusha
pop
icebp
cmps
xor
mov
and
xchg
out
or
fadd
in
xor
pop
cmp
push
dec
icebp
cmps
sub
js
jo
je
inc
dec
inc
icebp
add
repz
jbe
push
test
inc
cmp
adc
dec
push
and
int3
daa
gs
lahf
sub
adc
jb
push
or
xlat
xor
pop
sub
adc
stos
js
and
shl
shl
dec
loopne
lds
sub
adc
xchg
test
test
fxam
and
adc
lea
mov
jno
stos
adc
lea
push
adc
push
mov
lea
repz
sbb
adc
retf
sub
pop
adc
adc
add
pop
pop
dec
cmps
xchg
shr
dec
fs
or
les
push
jne
sbb
pop
sar
popf
cmp
xor
jecxz
rol
je
dec
shl
clc
popf
sbb
pop
mov
test
push
inc
mov
add
push
jmp
and
lea
call
sub
pop
or
in
and
mov
outs
push
ins
jns
push
add
mov
outs
lock
lds
jnp
clc
imul
repnz
sbb
popf
jl
push
sar
fcompp
in
int3
mov
mov
pop
add
xor
les
adc
lock
jno
cmps
inc
xor
jl
popf
adc
fdiv
sbb
retf
sar
add
mov
mov
lea
and
sbb
pop
jmp
lods
adc
push
popf
pop
and
push
mov
push
and
test
dec
imul
mov
mov
imul
lea
xor
test
jb
addr16
test
pop
and
loop
aam
dec
mov
pushf
pop
and
lea
push
mov
and
cmps
add
dec
adc
popf
sub
dec
sbb
(bad)
cwde
mov
xlat
inc
xor
cmp
lea
dec
nop
mov
mov
cmp
enter
xchg
adc
enter
(bad)
add
or
ror
pop
push
sub
cs
test
test
out
daa
mov
mov
dec
jl
pop
cwde
xchg
sub
je
ds
pop
sub
pop
(bad)
sub
daa
in
rcl
call
dec
and
mov
push
and
sub
lahf
test
push
push
and
mov
push
xchg
pop
add
push
xor
push
sub
out
lea
sub
adc
arpl
mov
in
mov
aad
xchg
fs
retf
sub
lea
cmc
jbe
jo
pop
pop
and
or
lea
sub
sub
jmp
inc
pop
inc
mov
stos
inc
jnp
in
shl
jnp
lds
rcl
mov
pop
rcr
dec
lds
das
jo
pop
xor
inc
hlt
addr16
pop
(bad)
pop
inc
jnp
inc
pop
xor
lea
das
jne
inc
xchg
in
cs
inc
hlt
das
mov
hlt
cmp
cmp
lock
hlt
(bad)
dec
add
test
xor
or
mov
dec
xor
xchg
das
ficom
test
mov
mov
call
push
sub
repz
ret
rcl
jno
and
sbb
and
repz
fs
mov
pop
xor
lea
imul
repz
retf
sbb
xor
xchg
mul
xor
retf
xor
jo
and
repz
and
inc
das
push
fisub
mov
push
jl
retf
add
sub
mov
in
sahf
ss
repnz
or
sbb
add
repz
mov
retf
add
add
pop
push
nop
mov
cld
inc
cmp
push
lea
repnz
xor
cmc
adc
arpl
xor
mov
xchg
iret
repz
ret
adc
dec
pushf
xchg
xor
clc
out
cmc
push
std
or
out
adc
mov
inc
sbb
fld
push
pop
movs
lock
pop
shr
fadd
cmp
cmp
or
xor
daa
nop
icebp
sub
enter
ror
mov
sub
adc
test
sbb
clc
in
fcomp
mov
jmp
(bad)
xlat
xor
pusha
das
mov
jmp
push
sbb
shl
mov
and
mov
xchg
pop
pushf
add
mov
std
xchg
mov
movhps
push
imul
ja
mov
inc
(bad)
sub
test
push
adc
and
jge
sar
pcmpgtw
or
push
and
ins
dec
mov
mov
dec
sub
les
push
movs
mov
push
and
push
or
adc
mov
jge
test
cmp
in
sub
jo
pop
cmp
xchg
stos
cwde
push
(bad)
cmps
in
cmc
(bad)
adc
dec
punpcklwd
add
adc
mov
pop
les
add
xchg
xchg
retf
xchg
or
dec
in
mov
or
or
inc
mov
in
push
jnp
add
cmp
cdq
push
rol
mov
mov
push
sub
pop
int
ret
scas
or
ror
dec
and
test
and
dec
adc
popa
in
mov
sub
pop
pop
mov
jl
pusha
jb
ja
(bad)
sub
add
ss
sbb
out
cmp
pop
add
lea
inc
nop
adc
mov
pop
popf
mov
ret
call
lods
xchg
not
or
xchg
retf
test
xchg
test
arpl
inc
imul
add
fisttp
push
or
pop
cmp
rol
addr16
dec
add
or
out
add
jnp
add
push
xor
(bad)
jb
(bad)
aam
pop
lds
cmp
test
xchg
movs
xchg
mov
loope
in
cld
dec
jge
fwait
add
mov
adc
and
retf
sbb
call
les
pop
loopne
pop
mov
jae
lea
dec
ret
cwde
inc
pop
add
repnz
outs
mov
ror
adc
dec
cmps
test
call
sub
sub
and
es
mov
lahf
or
test
gs
aaa
adc
ss
int3
xchg
mov
retf
mov
nop
push
fwait
enter
mov
ss
lods
iret
retf
inc
xor
jns
fwait
test
or
test
aad
movs
adc
sub
sub
push
push
fdivr
movs
jg
fadd
push
add
mov
loope
icebp
cwde
fucom
cmps
test
and
pushf
cmp
mov
lahf
nop
rcr
adc
sti
and
ror
xchg
xor
sub
loope
xor
mov
sti
push
test
hlt
jns
push
add
mov
and
imul
cmc
retf
retf
mov
jmp
lea
jbe
dec
daa
inc
lods
xchg
mov
je
jg
add
sar
je
mov
mov
pop
mov
retf
jo
mov
movs
sub
mov
jae
inc
lahf
inc
mov
lds
sub
rol
or
cs
dec
cdq
cld
jbe
mov
mov
adc
pop
pop
pop
inc
add
pop
std
(bad)
(bad)
mov
or
adc
add
int3
xor
jl
(bad)
sbb
cmps
mov
lahf
xor
xchg
pop
or
cld
scas
adc
imul
or
inc
fsubr
push
(bad)
fidiv
mov
xchg
lock
inc
pop
sub
and
or
pop
push
clc
in
add
shr
in
xchg
inc
mov
lods
adc
adc
es
mov
or
dec
jae
or
pop
and
add
mov
jno
jmp
xchg
or
mov
cmp
add
adc
push
je
pop
mov
hlt
inc
mov
adc
hlt
and
and
fnstenv
inc
cmps
and
dec
ins
rcr
in
add
xor
push
sub
in
pop
sbb
pop
push
add
shr
mov
sbb
stc
mov
mov
imul
dec
add
add
sbb
inc
sbb
shr
add
lahf
jmp
dec
loop
int
jmp
mov
test
mov
sbb
push
xchg
(bad)
rcl
sub
xor
add
jne
stos
fs
push
ror
add
and
push
retf
jp
adc
dec
addr16
mov
pop
mov
arpl
sbb
add
push
inc
mov
in
ror
inc
xchg
jno
call
jmp
clc
xchg
or
fsubr
add
and
jbe
ss
and
aam
add
call
xor
(bad)
xchg
push
push
ss
add
and
pop
pushf
loopne
jno
mov
push
and
add
xor
sub
xchg
mov
lods
lds
sbb
sub
aam
out
push
in
push
mov
pop
movs
enter
sbb
inc
push
sub
and
xor
or
push
push
cli
dec
mov
and
lods
dec
data16
lds
and
test
and
fistp
and
inc
test
pop
ret
iret
pop
sub
cmp
xor
dec
pop
and
test
adc
loop
ins
sbb
aas
aad
inc
push
lock
arpl
cmp
pop
push
add
inc
mov
pusha
jmp
enter
cmp
(bad)
cmp
jae
loope
add
xchg
push
mov
push
and
(bad)
mov
add
adc
pusha
push
or
add
popf
adc
sbb
retf
add
xor
stos
push
inc
add
mov
mov
sbb
jmp
inc
aas
ins
jmp
outs
jns
add
sub
or
and
pop
add
and
test
jne
(bad)
xchg
and
push
inc
mov
rol
push
clts
or
imul
fdiv
push
cmp
add
inc
add
pop
mov
ds
and
outs
push
dec
les
retf
sbb
jmpw
ret
add
add
das
push
cld
jmp
mov
movs
xchg
lahf
inc
mov
jb
mov
dec
mov
xor
lock
adc
pop
push
inc
stc
fdiv
add
nop
pop
pop
sbb
sub
adc
gs
test
pop
mov
ins
sub
movs
sbb
cwde
popf
test
movs
pop
lea
or
shr
test
lds
dec
cmp
inc
sub
mov
or
or
or
ffreep
dec
test
loope
das
enter
or
adc
inc
xlat
adc
and
or
outs
adc
sbb
retf
add
cmp
fmul
ins
mov
add
int3
ret
arpl
dec
rol
mov
scas
xchg
adc
adc
sbb
pop
pop
jo
loopne
lea
imul
icebp
add
ror
int
sub
and
dec
or
rcl
adc
test
sub
sbb
les
inc
adc
aaa
aas
xor
push
push
movs
jmp
dec
jecxz
inc
fwait
inc
jl
adc
jo
sahf
jg
and
mov
adc
and
jmp
jp
xlat
xchg
jg
cmps
mov
mov
sbb
push
shl
adc
xchg
adc
mov
punpckhbw
dec
jecxz
add
add
xor
data16
adc
inc
add
xor
pushf
lds
or
pop
push
adc
jae
mov
xor
xchg
jmp
outs
sub
adc
clc
ja
test
xor
xchg
cmp
dec
adc
push
mov
adc
xchg
inc
inc
call
cdq
push
or
xchg
mov
ss
lea
sbb
lea
push
xor
jno
push
test
inc
pusha
cmp
inc
mov
adc
ins
inc
xor
adc
fs
jno
test
cdq
jmp
lea
or
mov
pop
lea
mov
popa
cmp
inc
inc
cmps
push
sub
rcr
mov
push
adc
adc
leave
rcr
push
(bad)
int
daa
(bad)
adc
and
addr16
jl
imul
lea
add
jae
loopne
adc
sbb
dec
jmp
xor
enter
sbb
xchg
and
ret
push
sbb
int3
sbb
daa
xchg
or
add
lods
rcr
mov
pusha
add
mov
frstor
mov
ins
jmp
pop
nop
imul
mov
cmp
add
inc
dec
lahf
xchg
shl
adc
std
pop
mov
add
scas
xor
push
in
inc
and
cmp
sub
pop
rcl
dec
adc
adc
sub
adc
rcr
ret
pop
pop
pusha
push
inc
xor
jo
jmp
xchg
or
mov
add
sub
or
outs
cmp
pop
add
or
fisub
loopne
pop
movs
add
adc
and
lods
sbb
mov
(bad)
fs
rol
xor
clc
xor
or
jo
cmp
push
call
or
push
push
add
int3
leave
jo
jmp
and
pop
rcl
or
xchg
push
push
inc
xchg
fist
pop
lock
or
pop
in
or
ins
jge
addr16
int3
sbb
ja
sbb
jno
fadd
js
push
or
lea
xor
ins
inc
mov
ficom
inc
or
cmp
fist
js
outs
or
adc
xor
jo
ins
and
push
dec
movs
repnz
sar
cli
cli
test
xor
fs
sub
cs
scas
pusha
push
pusha
pop
test
call
and
sbb
push
push
in
inc
push
cwde
inc
in
push
push
dec
fild
lods
movs
dec
push
int3
scas
dec
push
dec
xchg
add
mov
nop
pop
inc
push
lods
inc
inc
push
sbb
cmp
cmp
outs
and
push
cmp
ret
and
xor
stc
es
scas
xor
sub
rol
push
mov
sub
and
ss
adc
mov
fwait
and
sbb
mov
ins
mov
adc
or
mov
jb
adc
or
outs
sbb
or
or
(bad)
xor
mov
stc
ins
outs
bound
outs
adc
xor
retf
or
hlt
push
ins
pop
test
in
lock
lock
aaa
mov
pop
shr
dec
scas
call
retf
call
in
mov
loopne
fsub
cwde
adc
or
in
xchg
outs
fcom
aam
mov
jbe
cld
scas
rcl
int3
fs
inc
and
int3
push
int3
adc
les
stos
and
les
cld
jl
jb
rol
sbb
les
mov
mov
stos
or
mov
push
mov
lods
cs
lock
xchg
lods
mov
xchg
xchg
movs
mov
cdq
mov
xchg
pushf
in
or
mov
shr
xchg
pop
mov
gs
fist
les
sub
mov
and
xchg
test
add
in
mov
mov
ins
clc
enter
xchg
je
push
ret
inc
cs
jo
ins
and
xchg
ins
mov
push
push
sbb
and
push
pusha
fdiv
xchg
retf
pusha
pop
mov
fild
daa
mov
push
inc
shr
push
jecxz
or
dec
es
mov
xlat
sbb
movs
ins
(bad)
call
xor
sbb
popa
mov
ja
cmps
mov
xor
sbb
mov
sbb
mov
out
sbb
cmp
push
rol
sbb
popa
(bad)
cdq
in
cmp
sbb
cmp
sbb
ror
xor
scas
sbb
lea
xchg
pop
inc
lea
clc
ret
inc
pop
movs
push
cmp
mov
adc
sbb
jmp
cmp
push
push
dec
inc
dec
pop
pop
mov
enter
movs
pop
add
adc
mov
inc
(bad)
ret
pop
ret
and
cmp
sbb
mov
xor
rcl
sub
cmp
inc
mov
add
sub
cmp
(bad)
lods
ins
xchg
mov
popa
sbb
push
das
push
dec
inc
inc
ds
push
mov
fisttp
push
inc
cmp
mov
fmul
test
scas
cmp
retf
enter
test
aaa
mov
outs
push
in
xchg
sbb
in
mov
call
cwde
inc
jecxz
icebp
pop
int3
rcl
rcl
cmp
lds
adc
add
test
cmp
pop
or
and
inc
bound
(bad)
push
mov
ret
dec
scas
mov
jg
test
mov
dec
shl
lahf
inc
pusha
xor
ror
(bad)
sub
sub
loopne
mov
sbb
pusha
inc
jecxz
jmp
jne
and
test
push
sahf
or
mov
loopne
xchg
(bad)
leave
lea
jo
popa
add
xlat
xor
cli
js
sub
and
mov
push
adc
dec
cdq
or
xchg
mov
mov
ror
dec
lods
or
iret
sbb
sub
adc
arpl
pop
int3
push
cmp
sar
xchg
xlat
push
mov
popa
and
shl
push
pop
shl
jo
ss
add
aas
mov
loopne
imul
jne
inc
ins
iret
retf
shr
pop
setno
invd
in
dec
jl
add
jo
ret
ret
sub
and
and
call
push
mov
push
sar
xor
adc
push
or
retf
pop
les
add
add
daa
rcr
daa
mov
or
pop
mov
add
movs
test
clc
in
xor
dec
add
outs
mov
push
cmp
pop
mov
fcomp
shl
test
test
test
xor
xchg
sub
and
mov
test
and
pop
outs
sub
mov
popf
mov
inc
fidiv
jno
mov
es
rol
pop
fnstcw
ins
sub
push
loope
sbb
std
cwde
or
add
and
leave
sbb
fidivr
fmul
movs
jo
adc
cdq
cmp
inc
call
push
jbe
inc
and
popa
das
rcl
popa
adc
xor
movs
sbb
mov
inc
lock
movs
jge
jne
aad
(bad)
aam
sbb
xor
pop
dec
fsubr
mov
or
pop
xchg
mov
test
ret
sub
test
cmp
shl
aas
test
xchg
jg
pop
inc
xchg
pop
mov
sub
sbb
adc
jo
xchg
adc
cmp
clc
ret
cmc
scas
adc
arpl
dec
mov
cmp
cdq
adc
mov
adc
pushf
fadd
int3
std
pop
push
pushf
rcl
jae
push
mov
ins
je
arpl
ret
mov
int3
fistp
adc
lahf
add
or
outs
add
inc
push
das
sbb
mov
in
test
shl
stc
stos
sbb
fild
sub
or
sub
push
cmp
dec
push
fadd
or
or
pushf
(bad)
fs
cmp
adc
push
aas
mov
xor
mov
into
sbb
pop
add
pop
pop
add
pop
sbb
push
add
rcr
jo
pusha
add
lock
mov
push
xor
rcl
inc
ror
mov
fstp
in
xor
sub
mov
mov
sub
push
jb
push
push
into
push
xchg
xchg
ins
rol
mov
out
fbstp
movs
and
fistp
mov
inc
js
fisttp
cmp
pop
and
push
xor
mov
ins
pop
(bad)
int3
pop
inc
mov
fistp
sbb
push
int3
fisttp
(bad)
fld
push
xchg
push
call
(bad)
fild
or
in
cmp
stos
and
movs
add
dec
pop
pop
push
cmp
and
sub
xchg
pushf
fbstp
rol
imul
and
or
sahf
inc
jne
mov
mov
jge
mov
inc
mov
cwde
arpl
inc
jmp
adc
lock
sub
shr
adc
inc
add
dec
jg
or
mov
and
pop
(bad)
test
cmp
mov
inc
bound
hlt
sub
rcr
mov
and
adc
xor
sbb
inc
out
test
xchg
xchg
mov
sub
fcom
cmp
ret
adc
int
cmp
cdq
dec
pop
jmp
sbb
push
imul
and
mov
in
adc
(bad)
cli
push
call
lods
out
add
pusha
sub
inc
lock
in
jmp
lods
sbb
rcl
bound
ja
retf
mov
mov
or
pop
(bad)
adc
adc
or
xlat
or
or
jno
lods
daa
push
pop
popf
sbb
sbb
ja
pop
mov
or
inc
loopne
pusha
add
mov
pop
fcom
(bad)
lea
lods
invd
adc
js
mov
push
adc
pop
mov
push
sub
xor
sbb
cmp
and
lods
push
add
and
push
xor
adc
ins
sub
enter
cwde
push
xor
pop
pop
pusha
pop
rol
ds
push
(bad)
dec
mov
into
dec
push
sbb
or
fwait
pop
push
mov
adc
push
jmp
test
xor
pop
adc
popa
or
and
push
std
and
xchg
and
push
pop
mov
adc
pop
cmp
adc
inc
mov
mov
stc
lods
jae
push
lods
stc
or
pop
adc
mov
push
cmp
stos
dec
push
sub
ss
dec
shl
loope
fild
mov
mov
push
dec
lahf
dec
mov
pusha
inc
cmp
inc
dec
pop
jg
arpl
repnz
js
fsub
or
inc
jg
(bad)
mov
jno
sbb
fild
push
cmp
add
pop
pop
xor
push
jae
and
pop
aas
mov
lds
pop
inc
mov
dec
sbb
aam
xor
add
push
adc
inc
xchg
ret
pop
in
in
or
add
stos
push
push
mov
push
aas
fadd
mov
mov
inc
pushf
xchg
mov
stos
nop
scas
bound
mov
add
and
inc
push
xchg
push
inc
retf
push
add
add
add
enter
inc
cmps
pop
and
inc
(bad)
inc
loopne
fimul
cld
out
mov
sbb
sbb
mov
inc
adc
adc
push
inc
add
pop
leave
inc
xor
inc
mov
dec
push
adc
mov
jg
sub
cld
rol
mov
rol
mov
push
int3
and
xchg
pushf
mov
pop
add
inc
xchg
push
adc
dec
push
inc
or
push
cmc
xor
ret
xchg
inc
lods
pop
ins
push
mov
pushf
inc
and
mov
inc
push
mov
adc
inc
ins
sub
dec
inc
push
xor
ins
retf
add
popf
pop
js
mov
xchg
jg
cmps
pusha
and
push
dec
dec
inc
mov
xchg
inc
leave
inc
inc
fimul
and
sub
cmps
push
jmp
jmp
lahf
push
adc
mov
or
loope
pop
mov
pop
mov
mov
inc
sub
dec
call
pop
clts
cmp
stos
and
or
aad
shl
pushf
inc
or
popa
js
mov
cli
mov
cmp
mov
dec
pop
lahf
and
call
or
push
dec
mov
xor
dec
jg
inc
mov
xchg
jno
and
leave
inc
inc
inc
in
movs
adc
inc
ror
dec
lods
push
dec
das
and
pop
sub
or
das
dec
cld
add
inc
test
jg
add
mov
in
push
pop
pop
push
inc
mov
pop
sub
stc
adc
add
dec
push
dec
mov
cmp
aam
test
or
pop
ss
pushw
jne
inc
lods
ret
(bad)
rcl
mov
stos
cmp
loop
rcl
repz
shr
mov
mov
and
lods
push
inc
add
inc
or
int
ins
inc
bound
lock
push
push
jl
sbb
or
data16
dec
pusha
(bad)
push
imul
mov
dec
arpl
dec
inc
push
pop
add
mov
nop
pop
test
jae
sbb
mov
cmp
pop
mov
(bad)
or
leave
jmp
xchg
xchg
sbb
xor
push
outs
loopne
push
aas
rcr
and
cmp
fild
or
add
xor
lods
lods
inc
(bad)
push
mov
add
mov
lea
inc
aaa
(bad)
pop
loopne
or
test
jo
ins
fild
lods
and
(bad)
cmps
dec
dec
movs
and
push
retf
inc
sti
xchg
cwde
add
add
xchg
add
add
jno
jo
xor
add
les
sub
push
das
xchg
dec
fmul
xor
fdiv
ds
test
test
push
jne
add
in
and
lods
inc
(bad)
test
inc
popa
cmp
mov
pop
test
gs
ins
imul
or
mov
mov
in
push
int
sbb
rol
ins
cmp
stos
adc
mov
dec
test
and
jmp
mov
je
aaa
dec
dec
cmps
ret
or
aas
loopne
or
add
test
adc
sbb
shl
jno
jno
dec
push
dec
push
pop
push
push
cmps
adc
inc
mov
ins
arpl
add
or
imul
mov
push
in
inc
mov
inc
mov
sbb
loopne
cmps
jo
mov
push
ss
xor
movs
cmps
arpl
lods
push
or
movs
mov
xchg
mov
adc
pop
fsubr
push
outs
dec
shr
pop
lea
add
jne
push
into
out
jmp
scas
or
and
mov
dec
or
out
(bad)
jecxz
add
mov
mov
rcr
bound
(bad)
adc
in
push
pop
sub
mov
jne
ret
in
and
xor
push
dec
sub
lahf
jge
xchg
cdq
add
cmps
xchg
in
fdivr
xor
inc
or
add
adc
push
div
lea
pop
xor
aad
pop
mov
and
adc
fadd
jae
enter
xor
call
sub
clc
jmp
mov
sub
push
pop
sub
mov
or
add
mov
mov
mov
pop
cmp
movs
add
push
pop
adc
in
es
cmp
leave
inc
cs
retf
loope
mov
repz
fild
adc
cdq
xor
xchg
aas
add
jae
imul
inc
inc
shr
sub
add
push
mov
cli
dec
adc
cmp
scas
jo
retf
cmps
ins
imul
mov
cmc
pop
sbb
popa
int
pusha
and
or
add
test
in
movs
sub
leave
dec
mov
clc
fidiv
add
dec
arpl
es
sub
int3
push
inc
add
and
cld
pop
(bad)
xchg
mov
and
adc
gs
cmp
pop
mov
(bad)
xor
xor
push
xor
push
outs
cmp
(bad)
mov
xor
in
aad
add
or
cs
add
mov
xchg
jnp
xor
mov
xor
xor
add
adc
mov
pop
jl
loopne
or
pop
sbb
cmp
mov
loop
nop
add
ret
mov
sbb
nop
add
nop
mov
sbb
rol
jl
cmp
ss
icebp
je
push
fs
dec
shl
mul
adc
jmp
sbb
mov
dec
rcl
sbb
push
ret
mov
and
adc
mov
add
sub
(bad)
test
add
(bad)
out
pop
mov
pop
mov
jp
enter
or
stos
dec
jg
xor
mov
mov
xor
mov
jge
cmp
mov
jne
cs
xor
iret
sbb
xor
adc
call
push
nop
in
inc
js
xchg
push
pop
mov
mov
test
mov
mov
mov
jae
xor
rcl
and
push
fdiv
add
cld
cmps
mov
ret
inc
jne
aas
sbb
pop
div
lods
aas
rol
xchg
and
mov
in
pop
in
push
push
daa
movs
dec
rcl
into
arpl
add
mov
xor
rcl
das
mov
or
pusha
sub
cmp
ret
sar
sbb
shr
inc
test
dec
mov
in
xor
mov
dec
int
mov
test
out
push
scas
xchg
lea
or
dec
cmps
inc
inc
fs
dec
rol
imul
xchg
scas
movs
addr16
jo
add
and
cmp
mov
das
sub
adc
pop
or
imul
add
dec
shl
imul
jns
jl
mov
push
movzx
imul
lea
fcos
jbe
add
mov
push
add
loop
or
pop
out
popa
push
call
jne
cmps
ins
xchg
cdq
mov
rcr
sub
ins
mov
clc
add
addr16
and
jmp
mov
jo
push
sbb
test
scas
add
jge
imul
or
xchg
xchg
push
pop
sub
stos
add
sub
sbb
(bad)
adc
(bad)
and
and
(bad)
(bad)
mov
cdq
imul
into
popa
inc
mov
je
ret
mov
mov
loopne
arpl
push
mov
cmp
and
retf
movs
aam
sub
or
clc
aas
adc
psrld
and
dec
or
loope
shr
push
push
jbe
add
and
adc
cmp
jns
(bad)
daa
sub
movs
int3
jmp
adc
shl
pop
xchg
addr16
add
pop
repnz
test
imul
jge
out
add
add
shl
or
js
or
loopne
in
sar
or
ds
cmp
loop
mov
inc
jmp
shl
add
sbb
out
sbb
push
mov
jge
push
jns
cmp
push
adc
add
push
lock
lahf
fadd
inc
pop
adc
cmp
or
lahf
lods
fidivr
out
dec
mov
stos
mov
pop
(bad)
cs
push
lods
mov
jo
ins
jmp
std
adc
sub
in
cmp
mov
add
push
push
mov
cld
imul
aam
sub
lods
jl
repnz
arpl
(bad)
and
movs
pusha
pusha
jae
leave
mov
cdq
cmc
nop
push
dec
push
sbb
cmp
sub
je
adc
adc
add
push
pop
mov
mov
nop
nop
dec
xor
ins
mov
push
lahf
sbb
pop
xchg
ins
xlat
mov
not
call
cmps
mov
cdq
mov
pop
mov
inc
xchg
mov
sbb
sbb
dec
add
adc
and
push
popa
cmp
jae
inc
ret
add
push
add
rcr
mov
fsubr
or
xchg
(bad)
mov
xchg
sub
movs
add
shl
push
xchg
and
(bad)
and
xor
cmp
fistp
fnsave
mov
push
mov
sub
js
test
and
icebp
hlt
mov
popf
shl
push
pop
or
add
ret
adc
or
neg
rcl
neg
or
adc
in
xor
outs
shr
ror
mov
(bad)
and
pop
movs
popa
ror
loop
popa
or
loopne
xor
inc
(bad)
hlt
add
mov
push
aad
push
and
xchg
inc
jo
adc
and
shl
adc
add
rol
and
push
mov
or
daa
loope
push
cmp
pusha
mov
bound
or
shl
std
mov
mov
ror
(bad)
rcl
xchg
sub
push
jmp
pop
sub
push
dec
sub
pop
dec
add
retf
push
jns
lea
add
dec
add
stos
les
ficom
xor
fs
add
je
mov
xor
or
add
add
stos
mov
and
mov
push
add
jecxz
dec
dec
xchg
stos
enter
addr16
mov
sbb
fsubr
mul
dec
xchg
(bad)
enter
sbb
push
iret
dec
outs
icebp
mov
stc
sub
sbb
jo
pop
pushf
loope
pop
ror
jg
imul
cmp
hlt
inc
es
nop
gs
cwde
cmp
shl
push
jno
add
(bad)
cdq
adc
int
mov
lahf
push
pop
fst
sub
mov
mov
cmp
loopne
(bad)
(bad)
fidivr
dec
fild
inc
fisttp
mov
adc
mov
add
(bad)
or
nop
fistp
sbb
push
scas
sar
rcl
add
out
xchg
adc
je
or
xlat
inc
shl
or
je
push
or
les
jp
shl
mov
push
push
or
dec
aas
or
lock
(bad)
mov
xchg
dec
or
xchg
sub
or
das
sub
and
sbb
pop
repnz
dec
dec
clc
dec
test
stos
cmp
jmp
pop
test
jno
mov
fisttp
adc
mov
or
xchg
test
jg
push
inc
or
ds
jmp
mov
stc
cmp
mov
pop
add
in
lea
xchg
mov
jmp
sbb
xchg
leave
pop
xchg
mov
int
and
or
test
int
js
or
mov
enter
cmp
je
or
outs
cmp
outs
aas
pop
cmp
adc
inc
add
xchg
or
movs
movs
shl
jae
jge
(bad)
cs
lods
mov
icebp
xor
push
xchg
loopne
xchg
int3
imul
jmp
jge
les
inc
inc
jmp
cmc
outs
or
and
or
add
test
jle
out
inc
imul
add
fld
add
pop
sub
das
imul
add
push
not
out
add
or
mov
xchg
mov
js
loope
push
je
dec
cmp
push
pop
sub
mov
cdq
xchg
jbe
add
sub
mov
adc
cmps
inc
dec
cmp
int3
aas
push
cmp
sbb
xchg
add
push
xchg
sub
scas
pop
mov
push
adc
test
mov
aaa
(bad)
js
push
push
xchg
loopne
push
out
add
or
push
dec
fadd
lahf
push
xor
jb
add
or
rol
pop
and
fmul
push
jae
push
xchg
lock
add
and
in
cdq
cmps
sahf
dec
add
ret
and
imul
push
sbb
dec
scas
and
fmul
inc
add
or
pop
adc
loopne
or
mov
xchg
adc
sub
cmp
mov
xchg
pop
xor
xchg
cs
rol
sahf
sbb
push
or
xchg
or
xchg
inc
and
adc
and
cmp
add
iret
repz
mov
add
out
fs
add
add
or
std
or
sbb
jecxz
test
jp
add
jmp
mov
es
cmp
daa
xchg
enter
jno
mov
aas
push
mov
xor
aas
rol
jmp
or
mov
xchg
or
xor
pop
mov
inc
ins
and
jmp
pop
jo
jno
inc
sbb
add
add
and
lock
cwde
pusha
psrad
lock
jo
daa
dec
cli
lds
dec
fcom
adc
in
repz
xchg
nop
push
fld
popa
out
pushf
leave
and
es
mov
cmp
cli
loope
push
add
pushf
pop
inc
pop
test
lods
xchg
xor
les
adc
push
or
add
inc
enter
ret
or
movs
dec
sbb
dec
pop
test
sbb
push
xchg
fisubr
dec
test
icebp
xchg
jns
cwde
cmp
scas
add
rcl
mov
dec
add
cmp
adc
pusha
xor
in
cmp
mov
inc
xchg
cwde
inc
fmul
rcr
sub
sbb
popf
rol
ja
or
sub
push
lea
and
(bad)
dec
or
sub
int
xchg
in
mov
mov
or
or
pushf
xor
mov
adc
push
xor
adc
or
pop
shl
pushf
ret
(bad)
jb
or
(bad)
aas
adc
scas
adc
jg
ror
lds
and
or
(bad)
shl
(bad)
enter
cmp
sti
(bad)
rol
rep
jb
jne
mov
loopne
adc
pushf
sbb
inc
jo
xchg
add
cmp
pop
add
mov
and
xchg
or
std
cmp
pop
mov
xor
rol
mov
pop
xchg
lahf
lahf
cdq
mov
mov
mov
inc
add
add
and
cmp
je
jmp
test
adc
and
xor
xor
lock
and
jg
stos
or
mov
mov
int3
jg
sub
inc
adc
aaa
dec
mov
int3
push
test
xchg
fcomp
fsubr
push
fcom
fadd
xor
jnp
ret
aas
jbe
mov
push
xchg
mov
fwait
or
mov
sub
mov
cmc
adc
repnz
xor
or
mov
or
shl
cmp
xor
imul
mov
mov
jmp
popf
inc
mov
add
sbb
add
xchg
push
and
adc
lds
loope
into
add
std
pop
pop
and
sub
fnsave
pop
dec
add
rol
add
adc
or
mov
push
dec
mov
test
or
add
push
pop
adc
and
in
dec
push
lea
aas
add
push
in
pop
ins
add
mov
out
fsub
mov
aad
or
xchg
inc
in
sbb
xchg
loopne
mov
add
mov
and
lahf
add
xchg
add
or
je
cmp
lahf
push
add
and
sbb
add
addr16
push
ret
fst
loop
shl
dec
sub
fwait
pop
call
add
cmp
or
outs
ja
jns
pop
adc
movs
je
push
lahf
dec
sub
scas
mov
ss
add
test
or
sub
mov
jle
sub
sti
inc
mov
mov
es
pop
loop
dec
fdivr
push
test
xchg
ficom
pop
mov
mov
xor
and
test
mov
push
xchg
push
dec
push
and
mov
jo
test
ss
mov
or
or
dec
aam
aas
sbb
jmp
jns
mov
xchg
or
loope
test
(bad)
(bad)
push
or
ret
pop
les
pop
in
inc
aam
(bad)
hlt
sub
fadd
fdiv
cmp
aam
adc
push
jl
leave
lock
inc
fistp
fmul
inc
lea
ret
ins
popf
pop
mov
xor
stc
and
mov
sti
dec
inc
inc
bound
movs
ins
and
gs
jmp
cmp
mov
cs
cwde
push
fdiv
clc
mov
push
fadd
push
das
bound
leave
cmps
pop
and
ror
xchg
push
push
loope
lahf
imul
icebp
mov
lods
invd
out
dec
cmps
ficom
sbb
adc
and
aas
add
xchg
mov
pop
and
or
push
lds
mov
jg
and
clc
cdq
mov
add
movs
jg
pushf
xchg
test
xor
ds
pop
dec
pop
add
ror
(bad)
and
and
push
pop
lahf
sbb
jb
test
test
sbb
int3
test
and
jg
test
or
test
scas
js
test
or
push
jne
pop
sti
in
shl
call
adc
loopne
push
call
lods
pusha
sbb
cmp
pop
mov
leave
add
push
push
adc
dec
sub
cmps
js
sub
mov
repnz
test
mov
xchg
pop
jno
in
mov
mov
and
xchg
pop
adc
or
adc
push
lods
jl
mov
fadd
sbb
mov
or
repnz
pop
mov
cwde
add
adc
adc
sbb
inc
fld
pusha
add
mov
sbb
xchg
xor
fistp
pop
sbb
mov
push
pop
mov
sub
or
pushf
sub
add
test
jg
mov
mov
call
movs
sub
mov
add
jg
push
ffree
xor
inc
adc
mov
xchg
xor
ds
jae
mov
mov
adc
int3
dec
inc
xor
(bad)
add
ins
and
and
mov
pop
mov
push
pop
sbb
rcr
mov
popf
test
add
(bad)
cwde
sbb
movs
mov
xlat
push
add
aas
mov
cs
mov
add
lea
adc
push
xor
aas
sbb
and
js
sub
sbb
push
xor
sbb
mov
mov
and
aas
mov
adc
jb
inc
ret
pop
ret
aaa
adc
pop
cli
mov
cmp
outs
mov
adc
push
sbb
adc
mov
aas
sbb
sbb
xor
push
cmps
or
or
(bad)
in
mov
add
es
inc
jne
xchg
jge
lods
xchg
add
adc
mov
xchg
xchg
mov
jne
xor
add
xor
mov
mov
xor
add
xor
push
and
pop
fadd
cmp
jmp
add
xor
lea
(bad)
icebp
mov
into
adc
add
add
add
cmp
add
sub
push
adc
mov
rcr
mov
mov
dec
inc
sbb
push
inc
or
and
mov
fisttp
cmp
daa
test
inc
lahf
gs
and
pop
and
jo
add
push
data16
inc
imul
movs
(bad)
jmp
test
lahf
enter
lahf
dec
xchg
and
add
adc
push
push
pop
push
mov
dec
sbb
jecxz
addr16
pop
dec
mov
inc
jecxz
push
jmp
and
push
mov
jb
cwde
pusha
lahf
mov
push
call
repnz
sbb
sbb
jns
dec
rcr
sbb
call
add
pop
sub
sbb
sbb
dec
push
sar
and
jmp
(bad)
and
nop
sbb
cmp
sbb
or
mov
adc
sbb
push
jo
jg
in
dec
inc
mov
pop
add
and
push
mov
sbb
pop
xchg
loopne
pop
dec
inc
sub
test
pusha
stos
pop
enter
inc
adc
ret
push
daa
mov
push
push
jecxz
mov
leave
sbb
nop
or
loopne
jae
xlat
sbb
pop
mov
push
int3
mov
dec
aas
(bad)
push
ret
sub
les
adc
pop
aas
mov
jmp
jmp
add
nop
sbb
sub
mov
or
dec
inc
and
les
mov
xchg
loopne
rol
dec
les
add
imul
iret
push
and
xor
and
or
loopne
or
sbb
jne
pop
dec
or
adc
cmp
sub
or
cmp
pop
or
push
les
mov
popf
mov
push
inc
pop
jg
ror
cmps
sbb
pop
mov
cli
or
je
adc
inc
pop
push
loope
imul
and
leave
push
mov
rcl
add
jae
xchg
ret
iret
xor
ret
loope
dec
xchg
loopne
mov
add
mov
and
sbb
pop
adc
add
sbb
push
and
push
add
ins
xchg
dec
add
leave
cmp
jg
adc
out
sar
fild
jb
repz
jmp
dec
xchg
sar
inc
mov
outs
rcr
movs
adc
(bad)
outs
add
push
or
lea
add
ins
sbb
es
inc
sar
pop
or
cmp
ja
popa
add
push
dec
or
gs
pop
mov
lods
or
sbb
repz
sti
add
and
scas
jmp
movs
inc
jo
dec
rol
cs
iret
jno
rol
lods
jno
out
xor
les
lock
in
pop
pop
adc
sbb
bound
test
shl
mov
mov
inc
push
out
test
test
cs
xchg
movs
sub
inc
add
or
sub
adc
mov
sub
call
pop
mov
hlt
out
mov
dec
pop
pushf
iret
test
or
imul
cmp
pop
xchg
mov
mov
lds
jne
sbb
push
xor
sub
adc
ficom
xlat
adc
or
xchg
jns
fsubr
repnz
mov
int3
mov
fnstcw
and
cld
out
lods
cmp
mov
sti
cmp
sbb
and
mov
push
mov
(bad)
enter
mov
in
fisttp
or
enter
adc
adc
call
add
xchg
and
cmc
ret
sub
cmp
js
ror
ss
add
fsub
test
mov
adc
jne
fnstenv
fld
jmp
xor
shr
and
movs
movs
lods
xchg
inc
mov
dec
inc
inc
mov
mov
cmp
out
arpl
add
dec
dec
or
mov
daa
push
inc
push
cmp
test
cmp
cmp
aam
je
(bad)
fs
adc
les
js
cld
push
inc
les
pop
nop
push
sti
add
jmp
aad
fcomp
sti
xchg
lds
shr
das
aad
sub
jmp
jno
daa
xor
pop
add
shl
je
xchg
mov
mov
mov
add
lea
movs
rol
pop
xchg
jne
out
test
pop
dec
dec
lahf
and
dec
adc
mov
push
leave
xor
push
sub
lahf
or
ret
inc
call
inc
dec
dec
fwait
xchg
or
inc
or
(bad)
lock
mov
je
mov
fs
add
in
inc
inc
inc
sbb
retf
mov
sub
and
call
pop
pop
add
sbb
jmp
mov
loopne
jmp
lods
cmp
jmp
or
or
enter
and
(bad)
and
dec
push
add
sbb
mov
imul
or
mov
mov
imul
pop
adc
or
sub
add
sub
sbb
les
dec
sub
pop
mov
add
test
xor
sub
push
mov
pushf
adc
pop
sbb
mov
and
daa
popa
sbb
inc
inc
or
push
loop
test
mov
sbb
push
sbb
cmp
call
loopne
mov
jno
push
in
adc
adc
(bad)
pop
cmp
xchg
imul
fwait
and
mov
xchg
jbe
jmp
das
int3
fs
jl
inc
push
push
int
ret
sub
add
aas
mov
mov
sar
push
stos
push
loop
and
call
inc
sbb
add
das
inc
and
enter
mov
dec
xor
and
push
jg
add
shl
mov
outs
mov
xor
and
imul
movs
jbe
add
and
sbb
add
adc
jbe
int3
push
sbb
enter
arpl
xor
fld
sub
xchg
sbb
sbb
and
xchg
mov
sub
test
test
call
pop
sub
mov
cmp
push
sar
or
mov
xchg
ins
fst
mov
and
pop
pop
mov
and
jmp
std
enter
cmps
xchg
call
jecxz
mov
push
mov
cmp
inc
add
jns
mov
pop
mov
nop
and
aas
mov
push
std
xchg
add
enter
movs
mov
adc
and
(bad)
call
pop
loopne
or
xor
js
pusha
mov
pop
mov
push
pop
or
daa
inc
sub
xlat
mov
jmp
rol
lods
fsubr
pop
push
cwde
or
mov
lock
aaa
or
push
ret
adc
pusha
mov
push
call
movs
lods
pop
xchg
or
pop
inc
and
(bad)
jo
cmps
pop
or
push
xchg
push
rol
pop
or
popa
sbb
add
sub
rcl
xlat
fucomip
push
and
test
push
aam
mov
movs
nop
test
or
push
push
push
sub
aaa
inc
sub
je
aas
daa
cmps
inc
es
aas
xor
push
cmp
fmul
fcomp
adc
or
stos
fisttp
movs
rcl
push
inc
inc
fiadd
movs
or
sbb
xchg
pop
jmp
test
pop
dec
adc
inc
mov
mov
mov
fldpi
cmp
fcomp
pop
mov
mov
jno
dec
inc
(bad)
or
dec
call
and
push
mov
dec
xor
pushf
xchg
enter
lds
call
lods
mov
inc
dec
aaa
pop
adc
inc
inc
and
shl
ss
test
cmp
and
call
jecxz
mov
sub
add
push
fst
dec
sbb
inc
pop
or
pop
mov
lahf
xor
or
push
int3
lods
fisubr
retf
and
or
inc
shr
push
push
int
inc
mov
mov
push
pop
push
test
loopne
leave
lock
jl
push
jno
adc
retf
or
add
and
dec
daa
inc
mov
or
imul
inc
(bad)
fst
(bad)
and
loopne
jo
cmps
sbb
add
adc
int
sbb
les
mov
sbb
les
fimul
sbb
add
cmp
jno
movs
xor
ja
movd
int
dec
les
push
aaa
sahf
cdq
(bad)
aaa
stc
sbb
ret
es
ret
(bad)
js
add
(bad)
rol
es
test
and
mov
lea
enter
or
dec
or
and
int
cmp
ret
sbb
mov
rcr
test
test
cmp
or
les
push
jno
push
repz
inc
and
test
rol
add
and
fwait
push
shr
rcl
dec
sbb
ins
leave
aad
add
loopne
xchg
adc
or
pop
xchg
push
test
adc
rcl
lea
outs
shr
test
pop
lea
leave
test
adc
leave
mov
cmps
lods
shl
xchg
test
movs
add
stos
arpl
sub
pop
jmp
mov
inc
inc
adc
mov
std
repz
imul
jg
dec
or
or
pop
(bad)
xor
popa
and
xchg
loope
xor
int3
aas
loop
xor
or
fist
or
(bad)
xchg
cmp
movs
nop
dec
pop
(bad)
sbb
mov
sbb
adc
adc
fldenv
lods
push
jecxz
xchg
shr
test
pop
loope
xchg
lods
inc
xchg
aad
or
cmp
inc
cmp
adc
adc
cmp
sbb
pusha
neg
gs
pop
(bad)
imul
add
pusha
fisubr
or
cld
in
jp
cwde
pusha
imul
jno
jo
mov
gs
and
retf
add
test
mov
adc
fwait
jmp
add
and
sub
sbb
fimul
jecxz
push
add
shl
aad
lahf
mov
or
jmp
add
fld
or
xor
mov
mov
xor
ja
cmp
dec
pop
cmp
jge
push
and
fldcw
mov
ins
add
inc
add
sub
adc
fstp
push
(bad)
mov
inc
adc
lods
jmp
js
test
push
jge
mov
test
and
push
mov
add
push
daa
pop
rol
mov
mov
inc
xchg
adc
ss
icebp
add
or
pop
mov
xchg
aaa
add
inc
add
sub
nop
test
in
mov
and
and
(bad)
fist
or
push
mov
add
sub
pop
mov
adc
loope
add
sub
sbb
sbb
xchg
aaa
push
sbb
ds
test
jae
sub
adc
ror
mov
adc
arpl
movs
(bad)
mov
sbb
push
xchg
jno
mov
mov
fsubr
pop
sbb
and
loope
rcl
dec
sub
inc
push
clc
or
sub
rol
pop
dec
xor
inc
cmp
loopne
xor
mov
call
outs
xchg
ror
xor
and
add
push
lahf
popf
mov
jae
jge
inc
or
adc
xchg
es
ins
mov
in
lea
dec
cmp
dec
adc
mov
mov
jns
bound
pop
lds
and
lea
dec
inc
inc
call
cs
call
add
pop
add
rol
jb
mov
add
clc
and
inc
push
inc
lock
sbb
cmp
jmp
in
push
adc
jg
call
dec
jne
jp
adc
fbld
mov
cmp
in
cmps
movs
mov
rol
jnp
add
xor
(bad)
jmp
clc
pop
mov
or
adc
inc
pusha
adc
or
sbb
pop
push
jne
add
cmp
adc
mov
pop
fistp
push
aas
mov
push
cmp
test
cmp
and
inc
and
test
inc
dec
addr16
add
or
or
mov
sub
or
and
popf
call
or
jg
test
inc
stc
leave
dec
sub
add
jo
add
cmp
sbb
cmp
cmp
mov
sbb
adc
sbb
mov
add
push
push
sti
lock
mov
sub
test
mov
movs
jne
sar
xor
int3
mov
ins
sbb
rcr
and
adc
vandnps
aas
mov
or
lea
xor
aaa
rcr
imul
inc
mov
bound
ret
xchg
aaa
pusha
(bad)
cwde
adc
xor
call
adc
fild
les
jmp
adc
xchg
jbe
mov
inc
popa
jnp
(bad)
xor
sbb
adc
pusha
add
xor
rcl
add
pop
ds
cmp
loop
push
mov
pushf
add
or
adc
rcl
inc
dec
add
mov
xchg
icebp
outs
std
xchg
ret
jmp
test
(bad)
sub
jmp
dec
add
inc
ins
inc
or
jno
mov
imul
jl
push
ret
imul
gs
xchg
aad
or
xchg
in
int3
xor
cs
movs
dec
(bad)
out
cmps
dec
or
or
or
lock
es
shld
or
or
inc
sbb
mov
ror
dec
in
and
xchg
or
mov
xchg
push
or
cmps
xor
imul
dec
xchg
movs
push
xchg
js
sbb
pop
inc
arpl
or
int3
sub
jl
movs
(bad)
int
pushf
test
adc
adc
mov
add
test
test
jge
mov
movs
or
imul
or
and
jmp
pop
jo
inc
shl
sub
xchg
inc
sub
mov
cdq
xchg
rol
push
mov
jmp
movs
push
repnz
sbb
pusha
out
ficomp
push
or
jmp
push
mov
test
xchg
xchg
enter
xor
adc
xchg
scas
push
or
and
add
push
push
shl
rcl
addr16
jmp
fistp
inc
fs
(bad)
or
or
out
stc
pushf
inc
ins
sub
cmp
sub
xchg
out
push
das
adc
movs
xor
inc
pop
adc
cmps
jle
sti
jo
adc
je
mov
mov
(bad)
and
sbb
push
jl
mov
mov
fld
je
lea
sbb
pop
pusha
jge
rcl
sbb
ss
imul
pushf
mov
mov
ret
add
js
mov
jmp
inc
dec
push
shl
pop
push
icebp
and
add
into
pop
mov
inc
test
add
imul
xchg
es
add
cwde
inc
add
add
mov
or
add
inc
sub
xchg
movs
mov
jo
add
ins
push
imul
dec
out
test
mov
mov
(bad)
lock
xor
fidivr
movs
loop
xor
jae
sub
mov
xor
test
add
xchg
mov
sysret
fidiv
xor
xchg
sti
push
xchg
clc
xor
xchg
or
add
dec
sbb
jb
outs
out
inc
cs
div
push
lock
or
dec
(bad)
xlat
hlt
inc
inc
or
xor
push
sub
gs
adc
xchg
test
mov
jmp
inc
sbb
ds
fild
and
les
mov
not
out
call
dec
movs
mov
inc
hlt
xchg
mov
xor
(bad)
push
fld
lds
sub
repnz
push
icebp
loopne
(bad)
xchg
popf
and
mov
sbb
les
push
inc
sub
jne
mov
hlt
sub
add
icebp
je
inc
dec
inc
cmp
mov
and
test
adc
cmp
sbb
or
mov
jmp
cmc
stos
push
push
nop
scas
adc
sbb
cmp
and
jge
int3
and
test
adc
and
xor
loopne
mov
adc
add
rcr
ss
neg
or
or
sbb
shl
pop
sbb
mov
push
pop
mov
test
push
sub
stos
iret
pop
mov
add
scas
mov
addr16
in
and
add
sbb
jnp
or
pop
dec
or
pop
or
xor
pop
and
xor
pushf
mov
pusha
and
xchg
adc
xlat
jmp
xchg
mov
push
(bad)
int3
xor
mov
add
cld
les
push
inc
dec
test
shr
sub
test
das
iret
stc
in
add
pop
sbb
xor
sub
js
stos
add
or
pop
dec
pop
fsub
lods
fnstsw
jmp
jae
sbb
rol
add
shl
add
scas
inc
mov
xor
(bad)
cmp
inc
int3
xor
or
push
jmp
adc
xor
adc
lds
xchg
cmp
loopne
or
jmp
mov
retf
leave
loopne
pop
ror
dec
aam
xchg
loope
ret
jmp
dec
pop
inc
stos
push
xchg
add
and
lods
add
pop
xor
mov
pop
xor
mov
adc
inc
mov
(bad)
adc
push
sub
dec
inc
inc
outs
cld
repz
(bad)
mov
dec
inc
aam
hlt
inc
adc
add
les
or
or
hlt
in
cmp
cmp
jle
rol
dec
sbb
or
xchg
xor
movs
adc
(bad)
mov
retf
pop
mov
add
mov
fldl2e
push
cmc
or
adc
pop
add
and
test
pusha
pusha
adc
xor
shl
jmp
xor
aaa
xchg
cmp
call
mov
add
aas
mov
aad
ins
push
xchg
std
adc
inc
adc
add
push
and
fiadd
pop
mov
push
sub
adc
scas
dec
xor
sbb
or
mov
imul
mov
or
add
lahf
adc
jmp
leave
add
mov
mov
adc
mov
enter
sbb
mov
ss
std
pop
inc
rol
rol
ret
and
sub
mov
pop
pop
add
adc
add
mov
mov
add
or
daa
adc
and
xchg
ror
add
dec
cmp
(bad)
fistp
push
sub
mov
nop
xor
push
and
push
mov
dec
mov
dec
lahf
inc
hlt
add
popa
add
dec
nop
ja
mov
pop
pop
push
mov
imul
adc
mov
push
jmp
dec
jl
adc
aam
mov
loope
adc
stc
xor
and
rcl
mov
or
add
push
es
mov
lea
push
mov
inc
sbb
imul
sub
add
ret
lods
jo
mul
aaa
mov
cmp
adc
fst
jmp
push
adc
sub
xchg
push
add
cld
sub
out
ds
inc
xchg
inc
sub
loop
inc
and
shr
dec
sbb
loop
test
add
inc
inc
(bad)
cld
mov
test
je
test
and
pop
add
mov
ins
fild
push
js
pop
sub
imul
aaa
xchg
sbb
icebp
push
imul
clc
popf
add
sbb
aaa
inc
loopne
add
add
and
ret
mov
ret
xchg
cmp
mov
ret
inc
sbb
cmc
xor
or
or
jmp
add
or
sbb
mov
or
cmp
test
aad
xchg
sub
popf
cmp
loop
dec
push
xor
inc
mov
fwait
xchg
push
xor
inc
cld
inc
xchg
sub
dec
rcl
push
add
add
std
mov
lds
cmc
adc
jo
xor
add
nop
mov
pop
pop
jne
je
call
fild
ss
add
add
or
dec
js
fnstenv
pop
mov
add
fs
fwait
xor
mov
cli
mov
mov
push
push
enter
loope
or
jl
sbb
mov
mov
jl
mov
outs
add
test
test
sbb
add
and
mov
push
xchg
lea
inc
add
mov
mov
mov
inc
mov
shl
shr
inc
dec
xchg
ins
loope
jmp
adc
sub
inc
push
cli
fiadd
push
retf
sbb
jp
aaa
cmp
sbb
sbb
je
(bad)
je
fmul
or
dec
pop
adc
shl
fcom
xor
push
sbb
pop
repnz
fild
or
add
stos
and
int3
lea
or
add
xor
adc
jl
jl
(bad)
adc
push
call
mov
sahf
inc
or
stc
add
dec
mov
js
xor
xchg
sub
aaa
add
lahf
cld
add
pop
inc
mov
and
enter
pop
xor
add
adc
jnp
lods
push
ret
(bad)
mov
adc
(bad)
push
or
jecxz
push
dec
push
aas
xor
aas
sub
add
mov
cmp
mov
inc
(bad)
aas
push
and
xchg
fistp
push
dec
push
aas
test
sub
mov
inc
push
sar
mov
test
mov
test
jmp
xor
cmps
aas
adc
aas
push
xor
(bad)
call
mov
or
pop
or
xor
add
mov
addr16
push
cli
or
or
jp
push
jecxz
rcl
inc
sub
add
push
push
aas
ror
and
push
fiadd
add
dec
lods
push
aas
loop
xor
inc
push
add
jecxz
mov
cmps
test
mov
or
aas
or
mov
jmp
stos
add
add
mov
pop
add
jo
and
sti
and
adc
pop
sbb
push
nop
xchg
inc
pop
and
pop
lods
or
and
and
pop
xor
pop
imul
inc
pusha
add
add
add
pop
sub
call
(bad)
pop
pop
ins
or
add
cmp
int
xchg
sbb
sbb
popf
mov
outs
sub
cmps
gs
lahf
and
cwde
add
mov
dec
arpl
adc
cld
cmp
test
jge
and
mov
shl
ins
pusha
pop
xchg
ss
and
xor
ret
rcr
(bad)
mov
sbb
call
mov
lahf
push
cdq
inc
out
sub
and
pop
and
push
lahf
pop
and
jae
push
push
dec
lahf
mov
jmp
movs
sbb
and
lahf
and
push
and
lahf
enter
pop
and
adc
inc
add
daa
adc
and
cmp
or
push
outs
inc
inc
lahf
stc
in
inc
and
scas
dec
push
inc
and
les
icebp
test
aas
inc
sub
jp
adc
cmp
cmp
adc
xlat
mov
sar
ficom
or
rol
mov
(bad)
enter
scas
aas
je
in
bound
push
ja
in
or
scas
sub
aad
push
sti
shl
sub
and
test
jae
(bad)
shl
psubsw
jmp
inc
dec
pop
lea
dec
(bad)
jnp
imul
(bad)
aas
inc
in
enter
add
add
scas
and
ror
inc
(bad)
rcl
dec
ins
sar
js
xor
or
loopne
push
sub
add
push
inc
mov
dec
sub
inc
pop
xor
and
adc
cs
adc
and
cmp
pop
sub
pusha
mov
jecxz
lds
lea
push
xor
inc
xor
push
xor
lea
add
imul
(bad)
sub
mov
push
or
push
ret
jne
cmp
push
ss
leave
cmps
push
jecxz
sbb
inc
gs
pop
push
gs
sbb
and
and
cmp
lods
pop
xor
xor
adc
lock
pop
pop
lock
adc
push
xor
pop
inc
ss
inc
or
inc
mov
push
int
pop
mov
cli
or
or
pop
adc
(bad)
pop
xor
and
mov
(bad)
test
or
add
pop
and
cmp
push
rcl
mov
cmp
fist
cmp
or
inc
sub
xor
add
mov
cmp
inc
daa
or
adc
dec
sub
clc
pop
cmp
adc
and
jns
movs
out
aad
dec
lock
cmp
loope
sbb
cs
inc
cmp
inc
adc
jecxz
lock
jmp
sub
sti
jne
jge
or
sub
dec
mov
mov
fist
sbb
xor
xor
jle
cmp
fnstsw
call
jo
mov
iret
shl
and
dec
xor
adc
push
adc
or
(bad)
push
cmp
clc
xchg
or
fs
cwde
div
mov
cmp
jne
sbb
lahf
fnsave
and
xor
inc
hlt
xchg
and
dec
loopne
loopne
add
mov
add
retf
(bad)
lds
dec
jle
adc
adc
ror
add
ret
and
push
pusha
adc
sbb
push
or
cmp
push
adc
sbb
gs
push
imul
add
mov
montmul
cmps
and
jg
add
and
and
or
sub
sub
stc
in
mov
loopne
vsubpd
lahf
xor
jns
or
add
push
xor
rcl
xor
or
adc
shr
or
sub
push
lock
add
pop
nop
xchg
mov
cmpps
mov
jl
fadd
inc
call
xor
adc
or
aad
nop
dec
and
leave
movs
jp
xor
and
jo
add
and
sbb
inc
or
mov
lock
xor
fs
in
xor
repnz
popa
add
adc
int
rol
mov
or
or
nop
add
rol
pop
add
hlt
(bad)
mov
nop
sti
cmp
in
adc
fmul
jmp
paddq
adc
jb
or
pop
mov
add
or
loope
enter
fst
fcomp
jo
push
mov
pushf
push
jo
scas
sub
and
aam
xor
cdq
push
sbb
sbb
iret
cdq
jmp
add
and
adc
in
add
add
xor
add
sub
lock
xchg
arpl
add
xor
shl
scas
mov
jg
ficom
or
cld
in
rcl
or
aas
rol
xchg
or
dec
sbb
in
and
sbb
jae
jmp
ret
pop
add
cwde
inc
fdivr
cs
jge
mov
sub
mov
mov
sbb
fsubr
adc
pop
inc
pop
sub
es
or
in
test
rcr
fsub
popf
fld
inc
out
inc
fbstp
lahf
loopne
dec
and
or
jns
ror
jp
pop
repz
xor
push
and
enter
loopne
stos
cmp
inc
dec
mov
(bad)
or
lock
push
fwait
xor
shr
aam
call
and
aam
rcl
and
add
test
daa
pushf
xor
ret
enter
test
sub
add
rol
test
jae
jb
retf
enter
mov
mov
or
cli
xor
add
inc
lock
adc
cmp
jae
inc
pop
inc
loope
sbb
sub
add
or
clc
(bad)
hlt
(bad)
fwait
push
test
mov
mov
add
jmp
dec
dec
add
data16
sub
xchg
sub
and
cmps
les
fldcw
movs
fdiv
inc
inc
inc
sbb
ins
sar
and
xchg
fcom
popa
cmc
popa
mov
cmp
cmp
jge
jns
cmp
mov
sahf
sti
mov
sbb
loopne
popa
jne
lds
inc
and
sbb
dec
add
inc
loope
add
jecxz
push
or
inc
ror
cmps
or
inc
add
mov
dec
(bad)
adc
hlt
and
mov
call
dec
in
mov
jne
mov
in
cwde
adc
inc
(bad)
std
add
xchg
xor
xor
or
dec
add
pop
sbb
popa
xchg
cmp
push
and
or
aaa
mov
mov
in
or
dec
lock
and
mov
push
icebp
push
movs
jge
in
add
call
pop
jbe
invd
or
fs
cld
nop
test
mov
scas
jmp
je
push
les
mov
cmp
push
and
mov
add
ins
and
cmp
fldcw
adc
mov
aas
mov
inc
aas
inc
fcmovnu
push
aaa
ss
ret
hlt
and
inc
sbb
fild
lea
adc
imul
mov
mov
les
aas
cmp
cmp
add
add
and
xchg
sub
push
jne
hlt
adc
dec
or
add
and
dec
sbb
dec
mov
into
and
push
xor
mov
call
xchg
push
jge
inc
push
leave
mov
adc
jg
fimul
in
push
jmp
scas
inc
and
dec
push
or
and
cld
inc
push
adc
(bad)
add
mov
daa
xchg
push
xchg
rcl
or
push
sub
les
add
mov
jle
push
add
cld
mov
inc
and
xor
shl
dec
mov
shr
mov
out
and
ret
and
jne
pop
cmc
dec
sbb
xor
add
test
adc
xchg
lods
(bad)
hlt
or
pop
and
adc
int3
or
xor
jmp
adc
jmp
or
test
hlt
mov
pop
add
xor
shl
or
add
add
lock
pop
pop
xchg
push
push
add
cmp
dec
js
loopne
jg
xchg
xor
loope
sbb
or
aam
call
add
lock
inc
mov
cmps
gs
into
sub
loope
into
sub
cmp
inc
ds
loopne
stos
or
or
cli
fimul
lods
hlt
dec
clc
mov
sbb
add
dec
(bad)
or
mov
fdivr
arpl
sar
mov
icebp
pop
pusha
or
mov
popa
lock
mov
pop
and
adc
pop
add
mov
cs
add
retf
pop
in
adc
inc
add
lods
add
mov
mov
or
and
mov
pop
cmp
cli
or
rol
dec
jb
popa
add
adc
or
sub
add
push
add
lods
mov
test
test
adc
pusha
test
add
mov
pop
loope
sub
call
xchg
sti
cmp
xchg
pop
add
fisub
add
mov
and
sub
mov
push
mov
ja
hlt
pushf
adc
push
pushf
je
inc
data16
das
(bad)
push
add
add
enter
fst
add
hlt
icebp
and
xchg
xor
cmp
clc
sti
popa
jne
and
inc
arpl
xchg
ss
loope
jbe
adc
out
cmp
mov
cmp
aad
add
and
rcl
sbb
mov
outs
std
inc
in
sub
(bad)
pop
cmp
xchg
sbb
sbb
jnp
sub
add
push
and
lock
aad
aas
add
mov
mov
pop
cmp
ja
push
mov
lock
loope
stc
sbb
or
test
or
lea
jl
add
mov
test
adc
sbb
fsub
shr
addr16
push
dec
out
add
invd
mov
outs
lods
shr
push
mov
mov
adc
stc
pop
mov
cmp
lock
inc
sbb
in
aas
push
sub
push
pushf
dec
jb
jne
dec
add
in
inc
retf
dec
in
adc
push
test
jle
inc
or
mov
push
or
jae
pop
xchg
aas
mov
inc
sbb
pop
adc
adc
inc
add
add
add
inc
adc
add
loopne
fcomp
xchg
dec
push
ror
jo
jne
enter
mov
stos
or
stos
push
popa
fistp
(bad)
xor
aad
add
inc
scas
pop
movs
pop
mov
ror
jle
int
dec
cmp
push
adc
fwait
push
mov
adc
mov
jmp
rcl
mov
sbb
xchg
adc
add
repz
shl
(bad)
adc
xor
cmp
ret
dec
cmp
xor
adc
pop
pop
test
movs
in
popf
int3
rcr
xchg
sub
lds
mov
fsubr
inc
xor
dec
in
sbb
pop
mov
and
popf
js
xor
lods
jl
(bad)
xor
int3
xlat
icebp
and
ret
int3
mov
push
les
cmp
ja
das
sub
pop
or
test
xchg
xor
arpl
mov
adc
dec
loopne
and
push
mov
adc
dec
or
or
loopne
jmp
out
imul
or
inc
jne
stos
sub
jnp
inc
push
ja
out
test
test
pop
xchg
outs
mov
inc
dec
pusha
cs
xchg
test
gs
mov
push
cmp
push
cmp
aad
lods
sbb
and
add
or
adc
pop
cmps
call
fcomip
adc
mov
icebp
push
movs
xchg
add
lods
add
ja
push
les
add
push
push
add
test
das
or
sbb
and
shl
icebp
cmp
dec
lea
shl
stos
inc
movs
cmp
xor
fist
push
inc
cmps
dec
test
cmps
in
xor
cs
hlt
inc
inc
inc
mov
jle
sub
inc
add
out
or
les
or
add
pusha
adc
xor
dec
pop
out
fwait
int
imul
dec
dec
push
fst
jmp
adc
iret
push
push
push
lea
push
adc
aas
add
out
and
xor
cmps
push
adc
rcr
or
or
sub
ret
loopne
addr16
mov
inc
add
push
rcr
rcl
clc
sbb
int
lds
jo
hlt
inc
daa
lds
jne
add
jp
mov
movs
sbb
xor
nop
sbb
add
xchg
retf
or
or
jmp
jle
push
inc
std
fidivr
mov
mov
mov
jns
aam
mov
ss
xor
cmp
or
aas
dec
in
and
movs
mov
add
rol
cmp
adc
xchg
popf
outs
xor
jg
packssdw
popa
push
push
push
movs
aaa
xchg
repnz
or
loopne
and
cmp
add
mov
loope
fild
test
mov
and
jns
xchg
jmp
mov
rcl
cmp
mov
lea
add
and
sbb
aam
aaa
add
js
mov
add
in
test
je
gs
mov
add
mov
jp
aas
or
and
push
movs
lea
mov
sbb
leave
ins
xor
mov
(bad)
mov
push
sub
or
dec
inc
xchg
mov
idiv
add
inc
ds
pop
and
movs
mov
jb
mov
xor
mov
mov
fldenv
sub
xchg
test
hlt
(bad)
mov
or
movs
push
cmc
or
movlps
inc
jg
inc
mov
int
(bad)
ficom
cmp
fs
das
shr
jae
mov
jg
lods
cld
add
mov
mov
xchg
outs
ror
sub
xor
jg
dec
sub
and
cmp
push
push
sbb
les
fisttp
imul
push
cld
jecxz
mov
xchg
fisttp
repnz
dec
inc
add
cdq
and
repz
xor
in
adc
adc
jmp
push
mov
pop
lea
xchg
cmp
xchg
iret
(bad)
jecxz
rcr
test
test
push
test
cmp
ja
jle
dec
adc
adc
sti
ja
pop
push
jnp
mov
add
shl
xor
inc
cmp
and
pop
sbb
rcr
push
sub
and
mov
and
lock
test
inc
xor
sti
shl
mov
jb
xchg
outs
movs
shr
xchg
imul
out
sar
sub
add
fimul
cmp
xchg
xchg
enter
and
jmp
add
sbb
xlat
dec
add
pop
or
ror
or
push
jb
(bad)
adc
shr
pop
add
mov
cmp
xor
jmp
idiv
mov
mov
xchg
jmp
sub
ja
jmp
xchg
push
mov
sbb
xchg
imul
movs
cmp
add
shl
xor
ror
ror
call
rcl
add
xor
xor
imul
rcr
or
push
or
push
aam
fmul
and
pop
movs
xor
pop
loopne
push
call
movs
movs
das
add
mov
dec
mov
and
test
je
cmp
rcl
adc
inc
cld
jae
pop
mov
les
movs
sub
or
sti
dec
sbb
cwde
shl
or
and
rcl
adc
mov
test
dec
add
in
(bad)
and
sub
cld
icebp
mov
sbb
inc
test
jge
jl
pop
and
inc
or
sub
push
add
cmp
pop
loop
cld
mov
(bad)
sbb
inc
mov
adc
push
sub
ret
xor
dec
push
cmps
imul
inc
xchg
test
inc
sar
add
add
adc
sub
jmp
push
push
popa
call
shl
mov
sub
iret
and
sub
cmp
ret
pop
sar
sbb
or
and
fadd
dec
xor
pop
sub
shl
jne
mov
mov
sub
leave
mov
xor
popa
sub
add
adc
int
add
sbb
adc
inc
inc
adc
and
xor
retf
jne
dec
mov
popa
sbb
mov
mov
fldenv
lds
popa
mov
jmp
retf
jns
popa
sbb
inc
test
(bad)
jmp
dec
pusha
in
movs
into
mov
pop
or
inc
(bad)
mov
lea
data16
jo
adc
mov
hlt
fidiv
js
repz
xchg
push
or
push
(bad)
rcr
mov
retf
pop
inc
ret
push
(bad)
pause
cmp
inc
cld
dec
aaa
ror
add
dec
int3
jne
push
outs
out
popf
dec
push
jmp
inc
xchg
ret
push
gs
fwait
inc
add
push
das
sbb
sbb
dec
jae
add
imul
loopne
cmps
repz
adc
push
fld
ror
fnsave
adc
pop
shl
js
clc
push
or
fisttp
les
adc
inc
pop
retf
lock
push
test
inc
add
xchg
cmp
or
inc
ror
fsub
in
mov
xor
jle
cmp
dec
sahf
les
jns
pop
and
jb
(bad)
adc
shl
loopne
fcomp
bound
adc
inc
dec
loopne
adc
frstor
or
shl
pop
add
add
dec
les
ror
cmc
pop
jmp
xchg
add
adc
mov
ins
sbb
adc
adc
adc
rcl
faddp
loopne
inc
fs
bound
adc
sbb
sbb
xchg
test
setp
hlt
mov
ss
cmp
jae
fld
adc
rcr
add
push
sub
cld
xor
loopne
add
cmps
xor
cmps
in
sbb
push
sbb
xchg
inc
sbb
sbb
mov
sbb
xor
jmp
push
mov
dec
test
sbb
or
pop
aaa
and
popf
xlat
dec
adc
xchg
sbb
push
add
or
iret
xor
jae
push
mov
push
mov
bound
fdiv
ins
push
loopne
cdq
push
pop
loop
aam
cwde
add
sbb
and
test
cli
mov
sbb
cmp
sbb
sbb
sbb
push
or
sub
nop
pop
mov
add
or
ret
stos
add
loopne
xlat
mov
xchg
(bad)
(bad)
(bad)
in
pop
mov
add
mov
fisttp
add
dec
jmp
lock
or
cwde
or
add
jl
in
or
xor
loop
int
cmp
ror
mov
add
or
xchg
xor
xor
mov
or
dec
dec
or
push
pusha
adc
mov
xor
add
sbb
lea
sub
and
popa
enter
cmp
cmp
rcl
adc
outs
dec
jne
sub
pop
mov
xor
repz
(bad)
sub
adc
add
dec
add
data16
jmp
rol
sbb
shl
mov
sub
rol
mov
arpl
add
retf
xchg
dec
mov
stc
repnz
mov
in
cmps
jno
adc
adc
push
jg
or
ror
mov
jno
mov
out
inc
or
mov
cmp
jmp
add
xchg
js
push
jbe
xchg
xchg
shl
fiadd
adc
sub
(bad)
dec
sar
adc
adc
mov
pushf
inc
jge
js
dec
push
loopne
mov
jg
pusha
adc
push
add
add
add
add
cmp
nop
push
pop
or
or
cmp
or
nop
add
or
push
dec
sub
xchg
ja
adc
xor
pop
pusha
jb
cmps
sub
add
adc
sub
mov
icebp
clc
div
ja
dec
xor
sbb
rol
xor
or
lahf
xchg
and
inc
hlt
adc
or
pop
add
mov
lahf
or
sub
add
xor
or
xchg
or
xchg
mov
adc
mov
sahf
dec
mov
fmul
addr16
xchg
adc
mov
(bad)
adc
sbb
icebp
inc
adc
inc
push
push
push
push
sti
pop
and
cmp
sbb
test
ret
dec
push
dec
ret
or
inc
sbb
xchg
es
add
push
retf
imul
mov
mov
aam
ds
sar
je
cli
sti
ja
or
push
add
sub
sar
jle
adc
enter
pop
cmp
sbb
and
push
pop
mov
sbb
pop
stos
je
inc
shl
and
nop
or
out
add
test
dec
lahf
ins
neg
xchg
sbb
jl
cld
movd
pop
jne
xor
sbb
lea
xchg
adc
inc
repz
lock
in
inc
inc
push
cmp
push
aad
(bad)
rol
into
jne
scas
(bad)
lods
mov
addr16
mov
mov
je
add
jnp
jge
daa
xchg
ins
hlt
stos
add
dec
pushaw
pavgb
sti
gs
dec
ret
adc
cmovae
xchg
xor
adc
jge
aad
inc
cli
cmp
clc
xchg
mov
or
dec
mov
pusha
adc
fwait
xor
inc
clc
or
mov
sbb
and
fisttp
js
add
jge
scas
pop
add
outs
je
das
add
aaa
rcl
add
jne
test
xor
push
dec
sbb
mov
cmps
addr16
mov
sub
add
rol
push
add
sbb
push
test
mov
arpl
and
add
and
cld
pop
mov
pop
test
dec
stc
aad
loopne
in
add
cmp
xlat
popf
add
mov
ja
sub
cs
jne
pop
sbb
inc
fiadd
xor
(bad)
sub
imul
sub
das
aaa
cmp
loopne
rol
imul
push
inc
stos
jge
ret
add
cmp
into
add
inc
jnp
aad
add
push
xor
add
iret
jecxz
sub
rcl
scas
inc
sbb
add
adc
gs
push
xchg
jg
jne
movs
sub
gs
mov
cwde
and
inc
out
sbb
and
add
popa
cmps
and
data16
je
jae
mov
dec
xchg
test
clc
add
or
dec
sbb
nop
and
ret
and
push
add
add
aad
or
add
inc
push
test
and
or
and
push
adc
dec
dec
cmp
sub
ja
push
js
iret
out
ss
xchg
cld
jp
call
jnp
mov
dec
sbb
lahf
sbb
adc
ret
add
xchg
add
xchg
popa
jl
lea
jno
popa
imul
cli
add
add
fcmovbe
jne
add
movs
jbe
cmp
sub
cmp
mov
ficomp
int3
pop
jbe
add
xor
jecxz
loope
pop
inc
fsub
sbb
bound
popf
jb
ror
add
and
lea
hlt
sbb
mov
dec
hlt
mov
mov
inc
xor
mov
sub
cmp
test
cwde
or
xor
or
pop
fcomp
xchg
dec
add
lahf
and
inc
jmp
mov
mov
cmps
lock
lods
rol
inc
add
sbb
arpl
popf
add
shl
sub
and
outs
jl
inc
cmps
and
mov
nop
sub
push
rcr
mov
and
pop
hlt
(bad)
adc
fs
(bad)
clc
pop
push
adc
xor
cdq
movs
inc
push
call
loopne
xor
sbb
in
jmp
adc
cwde
in
jmp
cmp
hlt
aam
xchg
or
dec
jb
ret
lahf
jne
sbb
and
cmps
or
clc
jno
inc
inc
mov
jno
outs
dec
movs
cmp
pop
nop
jbe
cmp
pop
mov
movs
inc
pop
sbb
xchg
inc
cmp
sbb
mov
and
add
aad
rcl
movs
idiv
jmp
leave
sub
or
(bad)
sub
pop
pop
dec
push
adc
stos
adc
push
ins
or
xchg
shl
and
test
mov
loopne
mov
xchg
pop
dec
add
or
dec
sbb
adc
cmp
push
sbb
push
sbb
inc
pushf
dec
sub
mov
sbb
fucomi
mov
inc
inc
inc
test
dec
sar
popa
jle
ror
cld
ror
push
sti
xchg
add
fidiv
sti
je
cld
loopne
jle
jmp
mov
jno
xchg
mov
(bad)
jmp
inc
inc
xor
mov
push
es
mov
mov
int
cmp
xchg
add
dec
xchg
mov
ins
add
sub
int3
int3
fild
nop
and
or
shl
add
inc
or
(bad)
stos
xchg
mov
cmps
or
jl
adc
stc
jp
or
hlt
cmps
or
and
enter
(bad)
aaa
(bad)
(bad)
jb
inc
out
(bad)
outs
int3
inc
sbb
dec
test
in
out
cmp
cmp
sar
shl
jle
dec
xor
adc
outs
imul
jmp
mov
imul
adc
push
mov
and
sbb
mov
xchg
jg
fxch
add
dec
dec
test
or
add
xchg
in
lock
sub
and
(bad)
rcr
and
and
xchg
mov
cmp
psubb
cmp
or
sub
pushf
jbe
cmps
or
pop
hlt
add
add
and
fmul
jo
in
in
rol
fcom
pushf
add
rcr
rol
loopne
push
xchg
xchg
inc
test
and
push
and
push
hlt
xchg
dec
xor
arpl
cwde
add
loopne
or
push
mov
test
and
shr
push
push
jne
and
dec
sbb
dec
push
pop
xor
xor
dec
adc
jne
push
inc
add
cmp
ret
mov
jle
mov
push
ror
sub
jmp
lock
push
pop
xchg
inc
test
pop
xchg
out
add
fisub
jg
adc
das
sbb
or
pop
and
dec
xor
xchg
sbb
(bad)
push
inc
inc
sub
mov
pop
cmps
add
shl
add
mov
fdiv
inc
sbb
xchg
lock
mov
jne
repnz
inc
cdq
jge
inc
lock
jae
mov
jl
inc
jb
jo
inc
arpl
call
nop
movs
push
adc
adc
ror
fbstp
adc
aaa
add
test
or
pop
xchg
dec
sbb
mov
retf
adc
sbb
or
or
mov
and
sbb
fs
out
lea
pop
pop
mov
add
cmps
or
mov
jl
jno
movaps
adc
mov
mov
push
mov
pop
shr
stos
loope
mov
jle
addr16
pusha
push
ja
scas
pushf
call
les
jmp
xor
or
imul
loopne
pop
lock
rcr
stc
loop
shl
dec
call
popa
call
mov
or
aas
sbb
mov
adc
jmp
cmc
mov
(bad)
xor
les
sti
pop
das
ins
cmp
or
hlt
fdivp
jmp
cmp
imul
inc
scas
pop
or
and
mov
or
xchg
mov
inc
cmp
mov
mov
pop
push
mov
xor
push
push
sar
and
jb
enter
xor
add
pop
mov
cmp
adc
adc
jp
add
push
enter
xor
iret
mov
lock
inc
cwde
test
dec
enter
loop
mov
push
jbe
adc
call
sbb
jmp
jne
mov
pushf
or
and
mov
xchg
sub
xor
movs
xchg
in
sub
movs
push
addr16
or
and
rol
xchg
jmp
and
xchg
xchg
movs
jmp
add
int3
jl
and
jbe
(bad)
mov
add
adc
stos
test
nop
add
jle
aas
and
movs
push
sbb
push
pop
fistp
add
retf
adc
add
adc
and
mov
or
add
sbb
sahf
sub
icebp
xor
sbb
add
inc
inc
movs
outs
mov
(bad)
sub
sbb
pop
mov
or
ret
dec
fs
push
frstor
popf
add
das
sbb
sub
or
xor
mov
cwde
stc
clc
lahf
adc
mov
sub
aaa
sbb
pushf
call
mov
add
pop
jno
ins
das
dec
and
lea
push
int
cmp
stos
rol
pop
mov
or
add
(bad)
xor
stos
xor
cmp
push
adc
inc
popa
jp
imul
addr16
pop
hlt
test
aam
adc
fld
popf
pop
mov
push
mov
ins
mov
addr16
inc
sub
jg
and
retf
and
mov
pop
sbb
jbe
and
jg
stos
lock
sbb
ror
adc
push
mov
mov
sbb
add
cmp
pop
inc
push
dec
call
xchg
(bad)
adc
and
lods
das
sti
das
inc
cwde
add
(bad)
cmps
out
fdiv
push
dec
add
lock
sti
sbb
(bad)
pop
add
push
call
inc
jae
sbb
adc
sbb
adc
(bad)
push
mov
xor
das
sbb
repnz
mov
nop
or
ins
mov
lock
hlt
sbb
sbb
add
dec
cmp
mov
jne
jge
mov
add
pop
sbb
inc
jae
jl
and
mov
push
in
add
add
loop
push
or
sub
clc
cmp
or
or
je
fisttp
in
imul
and
jl
sub
push
xchg
sbb
pop
jge
dec
movs
mov
cdq
push
and
imul
xchg
loopne
mov
add
mov
mov
in
adc
mov
add
pop
inc
lock
pop
inc
test
push
jns
dec
inc
xchg
lock
add
add
ficom
dec
or
in
cld
enter
aam
mov
add
sub
int3
and
and
cmp
or
and
inc
sub
xchg
add
ret
popf
movs
dec
and
ror
in
mov
pop
inc
dec
loope
or
ror
fisub
push
ins
sub
push
test
or
mov
test
xor
shr
sub
repz
popa
addr16
sbb
cmp
pusha
or
loope
jno
push
clc
pop
jg
jo
push
xor
mov
and
fadd
nop
sub
sbb
lods
lods
mov
and
mov
jo
sbb
sub
ret
xchg
mov
iret
popf
adc
xchg
cmp
inc
sbb
cmp
xchg
inc
push
cmp
adc
jmp
js
mov
das
cwde
jg
pop
fsubr
pop
xor
cmp
xchg
movs
add
and
xor
je
sub
or
fisttp
loopne
inc
add
neg
add
ret
fs
pop
aad
mov
mov
psubsb
pop
xor
add
pop
aad
pop
adc
pop
pop
add
arpl
xchg
add
push
inc
cmp
add
push
sbb
test
pusha
push
mov
ins
sbb
clc
add
or
push
mov
or
cmp
push
clc
mov
sbb
sbb
sub
adc
sbb
(bad)
jns
pop
sbb
das
ins
out
pusha
add
add
in
cmps
and
loopne
add
sbb
add
mov
jmp
out
or
pop
or
mov
xchg
in
add
ret
or
test
xlat
call
pop
sbb
or
cmp
pop
or
and
mov
ss
lock
rcl
cmp
add
jno
fs
repz
xor
jb
popa
mov
adc
inc
aam
dec
xor
push
inc
fadd
push
cmp
jae
jae
or
push
push
sub
mov
call
shl
cmp
push
(bad)
outs
aad
or
adc
mov
add
inc
aam
pop
mov
ror
sbb
fcom
popa
fst
jmp
ja
sbb
or
aam
es
rol
shl
or
dec
add
call
sub
or
add
rcl
rcl
add
lock
adc
daa
push
add
nop
add
mov
push
or
adc
xor
inc
es
loopne
xchg
cmc
mov
and
pop
pop
adc
adc
cdq
inc
lock
xor
push
jl
push
pop
cdq
inc
jo
inc
inc
add
cmp
and
lahf
jo
xchg
adc
test
lock
dec
sub
test
add
clc
leave
cmp
mov
cmp
cmp
pop
adc
pusha
cwde
mov
pop
cdq
inc
clc
or
push
push
loop
add
inc
sbb
cld
adc
push
in
add
adc
not
and
clc
mov
shr
cmc
pop
retf
fs
and
add
and
(bad)
ds
push
fwait
add
mov
mov
jmp
jno
xor
and
add
lea
mov
or
aas
adc
mov
dec
push
hlt
lahf
shr
shl
fld1
pop
bound
mov
jmp
pushf
or
pop
movs
and
lds
bound
cmps
sub
add
and
sub
fisub
inc
sub
inc
jo
mov
ja
cli
clc
dec
rcl
(bad)
adc
das
je
icebp
adc
adc
push
add
mov
push
sbb
dec
lea
adc
add
pop
jge
mov
and
(bad)
and
inc
call
imul
sbb
add
or
add
pop
push
xor
clc
xor
jge
clc
or
cld
cld
cld
aam
pop
enter
jg
leave
(bad)
pop
sub
sub
inc
sti
lods
(bad)
jl
add
sub
inc
popa
jno
jno
jl
and
inc
test
xor
mov
arpl
jge
inc
adc
ins
cmp
cmp
mov
dec
push
retf
sbb
or
xor
xor
jne
add
add
(bad)
adc
leavew
or
or
mov
adc
sbb
pop
dec
sbb
and
xor
and
cmps
pusha
shl
sbb
sub
pop
push
inc
or
rcl
dec
inc
cmp
aaa
push
add
popf
jge
or
shl
push
sar
jo
popf
add
dec
pop
add
sbb
rcpps
xor
sbb
dec
jns
mov
add
push
fadd
or
cmc
fdivr
pop
test
xor
fwait
ret
add
sbb
add
xchg
fchs
inc
sbb
xchg
nop
jmp
lea
and
jo
arpl
pop
out
and
cmp
mov
ret
add
jmp
aas
adc
dec
dec
mov
nop
jge
xchg
je
fadd
inc
test
cmp
fist
cmps
xchg
sbb
ror
sub
int3
fwait
pusha
and
ins
add
ins
sar
inc
sbb
ins
mov
dec
dec
inc
dec
jnp
scas
das
inc
pop
dec
add
pushf
xchg
test
sub
out
inc
mov
dec
xchg
sub
add
(bad)
xor
push
and
ficom
test
and
mov
(bad)
jp
cli
stc
stc
or
je
or
jne
cmp
(bad)
jns
scas
test
retf
mov
adc
clc
cs
add
fistp
bswap
fisttp
pop
(bad)
jmp
add
cmc
push
xor
les
jo
pusha
mov
mov
jnp
push
hlt
aaa
mov
enter
aas
push
fidivr
xchg
cmp
fs
or
not
add
pop
adc
xor
mov
push
fadd
stc
pusha
push
shl
sbb
add
lea
test
xor
stos
cdq
cmp
sub
mov
mov
pop
add
les
hlt
jmp
add
lahf
hlt
push
adc
add
sub
push
jb
and
and
imul
jo
mov
dec
and
dec
xor
fdiv
add
add
cmp
push
inc
inc
test
test
add
adc
ss
or
mov
ja
lea
fsub
jno
or
cmp
cld
nop
and
jae
xchg
or
sub
dec
add
xchg
or
dec
sub
jo
jno
rcl
cld
jnp
int
dec
gs
xlat
push
imul
inc
mov
add
or
inc
lea
and
popf
and
loopne
popf
or
sbb
or
rcl
shl
loope
push
call
ror
xor
test
sbb
dec
sbb
dec
sub
mov
pop
xchg
sub
sbb
push
adc
mov
je
xor
adc
adc
dec
and
ror
arpl
sub
int
neg
xchg
sub
mov
cld
mov
mov
cmp
in
sub
add
or
sbb
mov
or
ins
add
dec
mov
pop
mov
xchg
cmp
shr
pusha
mov
outs
sbb
adc
xor
jg
mov
pushf
cmp
sbb
or
pop
jmp
neg
push
inc
pop
fiadd
dec
mov
cmp
jl
mov
or
or
add
sbb
xchg
push
xchg
(bad)
sub
mov
fisub
icebp
or
sbb
mov
inc
js
xchg
mov
(bad)
sbb
adc
(bad)
cmp
clc
inc
dec
xor
inc
pop
adc
mov
jae
movs
xchg
add
sbb
add
add
push
test
aas
clc
scas
daa
dec
fmul
add
or
xor
test
dec
xchg
push
sbb
sbb
mov
add
sar
pop
mov
mul
cmp
lea
jnp
ss
xchg
push
(bad)
call
in
adc
mov
loopne
inc
js
mov
retf
shl
mov
loopne
adc
or
push
or
rcl
ret
movs
int3
add
mov
and
je
or
(bad)
lock
addr16
fisttp
sbb
movs
popa
sub
mov
adc
test
mov
(bad)
stc
pop
add
push
je
or
je
lods
jne
ret
cmp
cmp
test
adc
add
xchg
jnp
jecxz
jecxz
jnp
or
ins
mov
cmp
cmp
mov
imul
xor
cld
mov
cmp
pop
push
mov
movs
pop
sbb
mov
pop
repz
push
push
mov
ret
pop
jno
sbb
in
sub
popf
popa
cdq
cmp
loop
fcmovnbe
pop
push
cmps
mov
jno
jns
cmp
add
and
and
rcl
add
ins
add
lea
inc
xchg
or
sbb
jge
in
arpl
lea
xor
lea
mov
add
add
pop
inc
or
out
mov
add
jmp
cmp
movs
hlt
mov
addr16
sqrtps
push
js
mov
dec
fcom
push
adc
push
ins
loopne
test
mov
and
push
jge
sbb
inc
cmp
push
lea
mov
popa
jecxz
mov
push
cld
and
pop
mov
scas
cmp
test
sbb
and
push
fdivr
xlat
xchg
lods
lahf
sbb
ret
rol
cwde
stc
xor
cli
test
xchg
aas
jmp
mov
sub
rcr
xor
cwde
fld
fcomp
cli
and
mov
pop
ret
repnz
and
cmps
pop
push
mov
mov
adc
mov
jp
push
hlt
push
add
mov
aam
lock
ss
in
dec
xchg
jecxz
dec
outs
(bad)
call
adc
test
lea
push
pusha
push
fwait
pop
aam
pop
mov
std
inc
call
or
add
pop
movs
leave
push
cmp
cmp
ja
mov
in
leave
xchg
dec
stos
test
mov
into
iret
loope
or
push
test
ficom
stc
or
push
pop
xchg
ret
int
das
adc
or
add
cvtps2pi
pop
pop
mov
mov
push
ror
add
jl
popa
xchg
pop
daa
pushf
(bad)
stc
scas
shr
jmp
scas
jne
(bad)
xchg
popa
mov
jne
xchg
mov
add
fsub
rol
fild
ret
push
add
fild
or
shr
add
js
clc
fimul
fwait
inc
cld
xchg
sub
mov
ret
mov
les
iret
xor
pop
dec
adc
rol
mov
adc
rol
add
or
xchg
cmp
fsubr
fiadd
sbb
and
mov
pop
call
xor
or
lock
dec
seto
or
ins
mov
lods
pop
loope
je
push
adc
jmp
rcr
fidiv
add
inc
stos
adc
lahf
rcr
mov
imul
push
lea
mov
sub
sbb
cmp
sub
push
add
sbb
dec
pop
js
loope
ror
add
clc
dec
push
nop
out
jmp
mov
aas
jmp
and
or
adc
sbb
pop
add
add
add
pusha
add
jo
mov
push
add
lods
push
sub
add
(bad)
add
dec
inc
and
or
mov
cmps
cmp
rol
and
std
xor
loopne
jl
in
movs
pushf
pop
mov
and
mov
dec
sub
frstor
pop
dec
xchg
pop
mov
xor
or
pusha
leave
inc
pop
pop
fwait
mov
inc
dec
aas
mov
je
mov
retf
(bad)
mov
mov
add
in
ret
addr16
pop
mov
in
les
xor
push
or
ds
add
sbb
jl
push
inc
or
adc
and
adc
pop
mov
rol
adc
dec
cmp
or
jl
lahf
sub
mov
or
retf
ins
add
sbb
or
xor
outs
sbb
add
mov
shr
dec
push
icebp
sub
cmp
sbb
dec
and
std
pushf
addr16
dec
ins
leave
push
mov
dec
(bad)
(bad)
out
popa
or
add
mov
inc
sub
bound
sti
adc
xor
ret
pop
or
sub
ret
pusha
or
dec
pop
(bad)
or
xchg
adc
popa
push
ins
dec
aas
ins
mov
jns
ins
cmp
js
int3
and
outs
xchg
or
xor
sub
sub
loope
in
adc
lock
(bad)
outs
or
int
dec
sbb
add
in
gs
or
and
pop
ret
add
rol
test
adc
or
ret
dec
pop
add
pusha
out
mov
xor
les
rcl
add
popa
dec
push
pop
cmp
out
iret
mov
out
and
jo
fild
push
pop
rol
aaa
test
jno
js
mov
pop
jb
lods
out
test
ss
pusha
mov
xchg
test
ss
sub
sub
ss
sub
add
enter
out
cmps
es
out
jo
out
dec
mov
push
sub
in
mov
sbb
pushf
jae
loopne
sub
cwde
jae
sbb
adc
xchg
mov
mov
mov
mov
imul
imul
aam
out
call
out
arpl
fsub
mov
cwde
out
and
in
push
jno
ins
xor
pusha
sub
lods
leave
dec
sbb
lods
mov
mov
aam
xchg
adc
outs
dec
add
cmp
dec
out
pusha
xchg
out
and
inc
out
jmp
loopne
pop
and
push
and
adc
gs
test
sbb
fdivr
and
imul
imul
sub
test
sub
or
sbb
adc
add
nop
rcr
test
(bad)
call
add
inc
and
sar
cwde
pop
mov
out
sbb
pop
lock
sub
stos
or
lahf
mov
jg
or
shl
dec
push
retf
xor
inc
cmp
cmp
mov
mov
push
(bad)
jmp
das
add
push
inc
xchg
xchg
jg
cmp
pop
add
inc
sub
adc
push
lock
sub
popa
adc
loope
add
es
int
fwait
mov
les
lock
inc
rol
jne
(bad)
cwde
push
test
lock
sbb
sbb
inc
xchg
add
mov
mov
cld
pusha
cmp
lea
ror
popa
dec
in
mov
dec
sbb
leave
ror
hlt
xlat
dec
sub
sub
or
fwait
mov
add
popa
push
or
inc
or
mov
mov
pop
mov
pop
loope
and
add
and
xchg
push
adc
add
hlt
jae
nop
adc
sar
inc
addr16
push
xor
shl
push
jno
iret
add
pop
xor
ror
add
jmp
push
out
sub
dec
sbb
arpl
and
or
push
xor
jmp
dec
hlt
(bad)
xor
(bad)
push
or
cmps
aaa
dec
or
and
push
and
sub
or
cmp
(bad)
fsubr
push
inc
lock
mov
or
fstp
sti
test
sub
rol
imul
pop
and
sbb
xor
inc
xchg
add
mov
lock
push
sbb
or
rol
or
mov
adc
push
ret
fscale
retf
xchg
jecxz
or
in
mov
mov
sub
mov
or
pop
and
add
addr16
xchg
imul
jge
les
sbb
add
adc
or
pop
lea
mov
in
mov
jo
aad
xchg
adc
aaa
inc
and
sbb
ret
pusha
inc
jns
ins
lea
repnz
shl
and
int3
xlat
mov
add
sub
inc
call
add
and
add
arpl
cwde
cmp
lahf
push
add
(bad)
dec
pushf
add
inc
fwait
add
push
repz
and
add
xchg
pop
inc
or
push
(bad)
push
shl
push
cmp
std
jb
xor
test
add
iret
push
popf
dec
push
je
movs
adc
aam
push
imul
xor
add
test
pop
movs
mov
mov
stos
(bad)
jecxz
dec
add
test
xchg
lods
and
xchg
shl
inc
sub
dec
pop
test
aam
pop
ins
adc
push
cmp
push
fnstcw
sbb
and
in
pop
and
mov
add
rcr
and
mov
xor
mov
mov
lods
inc
popa
mov
xor
cmps
adc
adc
nop
inc
ins
and
adc
or
daa
pop
fs
aas
pop
(bad)
sbb
test
sbb
leave
xor
call
or
std
sbb
inc
sub
inc
sbb
sbb
adc
mov
(bad)
lock
mov
jae
lea
cdq
mov
mov
inc
dec
sub
jecxz
or
jmp
or
nop
cmp
add
and
in
or
ins
or
cmps
mov
shl
lock
int3
adc
add
jo
inc
add
lds
or
mov
or
inc
or
xchg
cmps
inc
ror
aas
add
add
cmps
fwait
or
cmp
(bad)
pop
(bad)
sbb
adc
mov
leave
scas
pop
lea
movs
inc
je
push
arpl
int3
adc
or
push
sub
xchg
es
retf
leave
push
mov
aad
add
or
add
rol
push
jo
cmp
mov
mov
inc
inc
inc
jge
jo
inc
(bad)
cdq
nop
xlat
inc
or
xor
cmp
imul
push
xchg
push
xor
push
inc
pop
rol
adc
cmp
jl
test
or
test
shl
and
mov
vmovdqa
test
mov
add
push
nop
movs
fadd
jecxz
and
popf
movs
mov
retf
cmp
popf
mov
adc
push
icebp
shr
pop
and
or
sbb
add
fsubr
push
xor
aaa
mov
and
retf
cmp
pop
fs
and
(bad)
jecxz
cmc
pushw
lock
sbb
sub
js
or
test
sbb
push
rol
pop
fsub
and
mov
add
add
nop
pushf
dec
adc
push
jge
mov
ret
(bad)
add
lea
fwait
push
sbb
test
test
or
adc
push
pop
je
or
movs
test
inc
sbb
mov
std
nop
in
or
add
adc
aam
ins
jnp
add
mov
sbb
hlt
aam
hlt
mov
xor
mov
inc
jl
or
loopne
cmp
push
sub
mov
jecxz
jmp
push
pop
shr
cdq
sbb
ds
dec
or
jmp
pusha
add
shl
aaa
sub
cmps
inc
arpl
mov
or
push
adc
inc
or
les
jg
add
int
adc
inc
inc
syscall
ja
mov
push
into
push
cmp
or
add
and
xor
push
sbb
cli
xchg
or
or
and
sar
add
inc
(bad)
sbb
lods
cmp
loopne
cs
arpl
xchg
mov
sbb
add
add
push
and
dec
test
or
and
mov
pop
xor
mov
dec
add
and
cmps
sti
push
aam
dec
cmps
ins
cmp
xchg
call
and
ror
test
lar
inc
or
xor
fs
and
xor
mov
add
pusha
or
sub
xor
add
aas
rcr
pop
pusha
add
jl
push
mov
fs
mov
pop
shr
fsubr
pop
jge
and
add
enter
ret
in
cmps
fisub
popf
jb
mov
mov
data16
push
adc
xor
add
inc
xchg
or
mov
cs
outs
inc
or
lods
fadd
xchg
add
xchg
or
stc
or
pop
sub
daa
lock
stc
or
sub
add
or
das
add
or
std
(bad)
dec
das
add
xchg
hlt
xor
adc
(bad)
mov
int
and
scas
pop
push
cmp
or
(bad)
cmp
push
je
jmp
cwde
dec
and
cdq
push
loopne
cwde
int3
pop
xchg
sub
adc
inc
sar
push
inc
and
xchg
adc
sbb
rcl
add
cmp
movs
jp
sbb
in
push
or
in
jns
push
test
inc
add
dec
sbb
imul
mov
mov
mov
ja
or
pop
ja
push
push
xor
sub
loopne
and
sub
pop
lds
int3
xchg
adc
add
jmp
aas
xchg
mov
xor
push
cmps
adc
inc
and
shl
add
cmp
adc
dec
xor
pop
enter
test
mov
push
add
sbb
das
jno
test
out
inc
pushf
imul
add
xor
or
and
nop
add
sub
and
add
popf
mov
dec
or
cwde
pop
sar
add
jns
popf
adc
adc
std
adc
sbb
adc
pop
fstp
arpl
xchg
stos
dec
ret
cdq
xlat
test
stc
and
mov
ror
cdq
dec
add
and
or
or
aam
pop
inc
cmp
aaa
(bad)
xchg
xor
mov
sub
pop
xor
or
add
(bad)
adc
iret
or
sub
add
and
pop
ror
mov
(bad)
push
nop
xchg
test
sbb
mov
pop
or
and
mov
dec
adc
mov
sub
imul
mov
mov
dec
xor
mov
adc
popa
fnstenv
(bad)
ficom
mov
cmp
inc
or
or
jp
xor
or
and
ret
sub
mov
add
adc
test
mov
in
cwde
inc
push
cwde
or
or
adc
mov
movs
jge
or
dec
and
pop
mov
push
fst
sub
cdq
sub
adc
mov
or
enter
xchg
add
inc
add
pop
test
sbb
xchg
shl
stos
in
mov
mov
inc
movs
xor
(bad)
push
aam
cmp
inc
and
(bad)
xor
inc
inc
add
cmp
push
pop
or
call
add
adc
cmp
add
cmp
rcl
push
adc
cmp
ror
or
and
jecxz
inc
jmp
and
or
mov
leave
mov
mov
dec
sbb
sbb
push
sbb
xor
mov
fdivr
mov
add
ins
cmp
sbb
push
enter
movups
mov
lods
es
cmp
sub
imul
leave
sub
mov
mov
ficomp
mov
sbb
mov
xchg
or
dec
fsubr
jg
jl
add
jae
ret
or
sub
and
xchg
fbstp
mov
mov
shr
mov
loop
shl
aaa
fcomp
in
arpl
xchg
iret
in
fsub
aas
sub
and
iret
test
adc
or
push
mov
or
inc
adc
std
xor
scas
daa
call
popa
adc
(bad)
push
das
popa
out
fs
jge
loope
push
and
mov
jne
loopne
mov
inc
mov
pop
ds
or
dec
mov
pop
(bad)
aas
and
and
xor
and
pop
add
mov
xchg
sbb
sbb
or
jne
ret
push
xchg
mov
mov
adc
arpl
add
pop
aas
int3
push
inc
nop
call
or
fild
inc
cmp
data16
or
add
in
call
jle
jae
sbb
adc
add
cwde
jne
or
or
add
push
pushf
enter
rol
sbb
frstor
jae
cwde
aaa
xchg
out
int
adc
rol
pop
cmp
push
movs
add
and
jg
inc
dec
pop
jnp
sbb
ret
push
add
xadd
pop
jge
or
adc
inc
aas
adc
enter
inc
or
adc
cwde
xor
push
push
ret
das
adc
lods
(bad)
jb
aas
jg
or
push
or
ror
xchg
lahf
arpl
test
dec
or
cmp
cmp
pop
leave
loope
push
mov
int
jns
lods
sub
sbb
cmp
in
or
jbe
retf
loop
xchg
xor
rcl
in
xchg
and
pop
outs
inc
ror
(bad)
jecxz
mov
cmp
jl
data16
leave
out
shr
mov
lods
lea
mov
ins
nop
dec
pop
mov
xchg
fsub
bound
jo
pop
mov
jecxz
xchg
inc
popa
and
popa
outs
pop
pop
adc
mov
inc
fiadd
ds
int
aas
ins
and
xor
push
movs
or
call
aas
xchg
or
lea
pop
mov
test
hlt
pandn
adc
and
push
push
adc
lods
fld
inc
adc
jecxz
cmc
mov
mov
or
js
add
push
push
inc
fwait
popa
cmp
jmp
sbb
and
push
mov
and
add
sar
inc
sbb
and
or
add
fdivr
in
dec
xchg
rol
or
sbb
cmp
push
shr
imul
dec
fwait
inc
pop
jmp
mul
inc
lods
ja
rol
push
and
or
(bad)
adc
pushf
test
adc
jno
mov
loope
call
sub
mov
jle
and
or
jns
sbb
lds
jmp
add
sub
fimul
out
push
jae
lea
aaa
inc
lahf
call
int3
and
xor
add
sub
imul
push
ds
push
inc
sar
ret
xor
iret
push
inc
add
sar
inc
jle
cmp
inc
cmp
call
loopne
arpl
jp
pop
dec
pushf
add
xchg
ret
push
sbb
hlt
add
jae
dec
push
cmp
fnstsw
and
and
jmp
or
or
push
dec
inc
or
out
pop
and
fs
mov
or
inc
lahf
add
sub
js
mov
xchg
es
in
dec
xchg
add
in
imul
lods
and
in
push
adc
sub
adc
(bad)
push
and
push
inc
mov
fisub
or
add
adc
push
dec
cmp
jno
int3
jg
int3
dec
and
or
call
mov
dec
pop
sub
pop
cmps
and
and
xor
sbb
jg
iret
pop
cmc
cld
mov
inc
adc
sbb
add
pop
push
mov
add
aad
jne
adc
adc
aam
pop
jmp
pop
cmp
push
repnz
sbb
mulps
rol
inc
jmp
loope
inc
cmp
sbb
cmp
or
lock
ins
test
jg
inc
pusha
mov
add
inc
adc
fcomp
add
pop
in
inc
repz
sub
lods
add
pop
mov
add
nop
mov
pop
test
cs
aam
and
jp
or
retf
sbb
adc
and
jns
sbb
jmp
mov
sub
paddsw
inc
sbb
mov
cmp
pop
sar
call
lahf
jge
xor
loop
cmp
and
add
xor
or
mov
xor
clc
mov
xor
mov
xchg
nop
mov
rol
mov
shl
push
push
and
pusha
mov
xor
or
jo
or
aas
rcl
cmps
clc
lahf
xchg
data16
inc
test
jmp
test
lahf
add
xchg
sub
push
or
pop
push
aas
sbb
lods
mov
pop
shl
shl
out
add
dec
cmp
mov
push
mov
mov
movs
inc
add
sar
mov
jnp
jne
stos
sub
add
mov
icebp
add
adc
jle
jge
mov
fiadd
inc
nop
xor
mov
fmul
scas
cdq
pop
repz
mov
les
test
push
and
cmps
inc
enter
add
icebp
sub
or
add
adc
pop
cs
rcl
or
icebp
adc
pop
repnz
add
das
xchg
push
loop
xchg
add
add
retf
fld
mov
mov
xchg
lea
lea
mov
adc
xchg
inc
nop
xchg
int3
(bad)
push
add
sub
add
aas
xchg
add
lods
push
mov
and
mov
add
movs
mov
in
mov
add
xchg
mov
inc
pop
pop
hlt
mov
pusha
shr
or
pop
xchg
and
inc
test
dec
bound
or
daa
mov
mov
or
adc
into
add
data16
pop
lock
push
adc
adc
add
push
or
sbb
imul
xor
loopne
outs
pop
adc
push
test
test
(bad)
mov
ret
dec
cmp
or
mov
inc
and
mov
add
rol
dec
retf
lea
add
xchg
and
mov
enter
rcl
leave
push
push
mov
jo
iret
lock
xchg
dec
add
mov
xlat
lock
sub
enter
cli
bound
add
fadd
mov
xchg
add
sbb
pop
or
adc
or
pop
adc
cs
cmc
mov
rcr
pop
add
enter
out
push
test
dec
and
aad
cs
add
mov
stos
mov
sar
adc
clc
add
mov
imul
dec
xor
or
dec
sbb
mov
rol
inc
frstor
or
push
or
or
jne
add
popf
movs
push
mov
adc
enter
cmps
xor
ret
pop
or
sub
pop
xchg
ret
(bad)
pop
add
lea
pop
mov
xchg
or
inc
retf
jmp
mov
xchg
pop
dec
adc
pop
(bad)
fistp
leave
mov
ss
fiadd
xor
mov
ins
jl
inc
test
fwait
popa
syscall
and
pop
jno
mov
mov
jmp
mov
push
xor
adc
and
pop
xor
add
lock
dec
adc
sahf
or
imul
push
add
mov
sub
adc
push
xchg
ret
inc
and
ret
jg
pop
clc
icebp
rol
pop
ret
mov
cmp
arpl
rol
cmp
fcomp
imul
mov
pushf
sti
add
jmp
add
fldl2e
shl
fs
sbb
push
mov
enter
sub
add
jmp
fadd
pusha
push
mov
adc
nop
sar
xchg
pop
movs
push
push
push
loop
inc
in
or
or
or
xchg
test
fdivr
test
xor
fsubr
push
xchg
or
dec
sub
ret
and
sub
and
jns
test
jle
cmp
and
push
in
push
sar
test
jae
(bad)
loope
retf
jmp
loopne
add
in
xchg
aaa
xor
xchg
xchg
cli
(bad)
jmp
xchg
js
jne
icebp
or
pop
std
adc
sbb
stos
enter
xor
jge
and
fidivr
test
mov
sar
das
mov
sbb
test
hlt
and
hlt
imul
lock
sbb
pop
pop
cld
sub
arpl
gs
or
aaa
rcr
test
in
loop
js
and
mov
imul
xor
dec
sbb
dec
sub
inc
inc
fsub
pop
and
sub
inc
fucomp
or
lea
mov
fldenv
inc
fisttp
das
mov
dec
mov
adc
jp
jmp
push
(bad)
aas
add
cmp
jmp
jmp
add
or
push
pop
mov
call
cmp
and
mov
mov
cmc
daa
mov
inc
dec
and
xchg
das
push
pmaxsw
jmp
pop
add
cmp
out
ds
mov
fadd
xor
mov
mov
pop
hlt
call
scas
push
lods
in
(bad)
xor
gs
xchg
mov
inc
inc
(bad)
pop
jmp
and
or
xchg
daa
rcl
adc
fiadd
test
xchg
jb
xor
and
rcl
adc
mov
dec
add
adc
arpl
jge
pusha
adc
inc
jmp
mov
add
int
adc
inc
add
test
and
and
ins
outs
dec
or
jne
ins
push
pmaddwd
xor
ffree
sti
test
inc
ins
jns
cmp
cmp
mov
inc
push
nop
dec
shl
adc
(bad)
aam
dec
aaa
add
fwait
mov
xor
push
xor
les
push
add
int3
sbb
jns
xor
(bad)
xchg
adc
(bad)
pushf
int
add
enter
hlt
leave
jne
jmp
imul
mov
int
sar
mov
ret
or
mov
dec
dec
jmp
mov
(bad)
in
pop
add
stc
aaa
push
dec
mov
mov
push
push
inc
movs
dec
sbb
mov
mov
loopne
cmc
cmp
xchg
nop
in
xchg
add
sbb
adc
leave
les
add
sbb
fistp
or
mov
lahf
outs
and
mov
jmp
inc
mov
or
and
or
adc
enter
add
and
iret
stos
pusha
add
lea
and
fcom
test
daa
test
pop
lahf
pusha
ror
jecxz
add
hlt
or
(bad)
loopne
aad
je
js
push
or
pop
xchg
sbb
mov
inc
push
(bad)
loopne
or
and
mov
jb
int
les
dec
test
ja
ror
outs
mov
mov
enter
jnp
js
jnp
shl
or
lock
cmp
jle
js
or
shl
pop
xor
xor
push
mov
mov
sub
fdivr
adc
push
add
loope
mov
inc
push
jns
push
xchg
inc
dec
inc
pop
or
dec
sti
jbe
xor
xchg
nop
xchg
int
mov
or
sub
xchg
not
sub
movs
movs
jo
mov
sbb
je
xchg
sbb
inc
cwde
adc
call
mov
cmc
cmp
or
xchg
test
inc
pop
add
inc
sbb
and
dec
add
rcl
dec
cmp
cwde
imul
cmovo
add
adc
test
loope
test
add
inc
es
std
cs
mov
sbb
mov
imul
or
(bad)
ret
adc
add
cmp
pop
imul
int
inc
mov
or
mov
repnz
hlt
jmp
in
not
and
inc
lock
mov
push
adc
mov
outs
xchg
cmp
add
add
mov
xchg
mov
rol
mov
call
adc
sub
aaa
test
cmp
fld
fbld
or
and
or
les
mov
or
call
aaa
xor
add
mov
retf
test
pop
sbb
ja
cmp
add
mov
mov
adc
sub
rol
loopne
sub
shl
dec
mov
cmp
inc
(bad)
lahf
movs
pop
das
mov
aad
div
add
adc
sbb
ret
mov
cli
ins
jp
dec
xchg
and
imul
adc
test
movzx
test
out
push
add
cli
push
add
inc
fs
idiv
inc
push
xchg
repz
mov
add
and
pop
(bad)
or
mov
sbb
add
push
fimul
mov
add
mov
mov
push
fdivr
sub
mov
push
push
ins
cwde
ret
or
add
inc
mov
loopne
and
cmovge
mov
aad
retf
sbb
mov
jmp
jb
mov
mov
test
outs
fstenv
add
loope
mov
lea
cmps
std
or
int3
mov
int3
ret
xor
cmp
mov
mov
es
hlt
push
int3
pop
mov
fiadd
mov
and
jl
les
iret
inc
jmp
cmp
imul
jb
dec
xchg
jo
test
dec
adc
inc
int3
xor
xchg
je
mov
mov
jmp
pop
or
sub
mov
dec
mov
push
or
add
mov
enter
test
mov
or
mov
mov
movs
ss
dec
ins
movs
ins
inc
and
inc
mov
mov
jne
ret
adc
jbe
cwde
adc
les
outs
js
adc
lea
mov
xchg
fcmovnu
xor
pusha
push
and
sub
or
push
inc
adc
iret
push
lds
rcl
fsubr
mov
retf
mov
push
jmp
call
pop
in
int
inc
inc
test
push
push
or
jmp
sub
shl
add
sub
adc
mov
ds
pop
xchg
movs
sbb
rcl
or
push
cdq
in
jmp
cmp
outs
adc
mov
lahf
lahf
daa
adc
push
int3
mov
leave
sbb
inc
jl
mov
adc
dec
jae
ret
sbb
xchg
pop
shl
and
or
pop
jmp
pop
clc
rcl
nop
or
mov
ror
popa
lock
out
loopne
je
mov
je
add
je
imul
xor
mov
pushf
lds
jae
sub
dec
mov
and
push
mov
lock
cmp
popa
xchg
inc
call
fidiv
adc
push
loope
pop
inc
cld
pop
and
add
and
pop
dec
pushf
cmp
popa
enter
fstp
pop
cmps
push
add
ret
shr
or
and
push
adc
mov
movs
cmp
test
cmp
ror
les
inc
xchg
(bad)
les
adc
jne
xchg
push
mov
repz
jge
icebp
sbb
push
test
sub
sbb
imul
aad
shr
fild
nop
push
inc
push
add
mov
push
dec
cmp
popf
popa
dec
adc
sahf
and
xchg
dec
mov
sahf
add
pop
or
cmp
inc
dec
add
mov
sbb
and
pop
adc
xor
daa
pop
mov
add
sbb
or
aaa
xor
or
std
hlt
cmps
inc
pop
shl
call
add
(bad)
dec
add
push
jmp
adc
mov
dec
jle
or
inc
fwait
mov
sbb
ror
sbb
pop
inc
adc
call
pcmpeqb
adc
ins
push
hlt
addr16
inc
and
xchg
cwde
jo
adc
icebp
push
xchg
xchg
fsub
jmp
rcl
sahf
movs
clc
ss
and
aaa
shr
sub
or
outs
cmp
jmp
js
adc
xchg
push
loopne
and
fisub
push
mov
setl
cmp
cwde
mov
push
sub
sbb
cmp
xor
je
(bad)
sub
jg
push
cwde
sub
cld
call
adc
jno
test
sbb
xchg
jno
pop
xchg
mov
add
in
adc
or
or
pop
dec
add
cmp
(bad)
sub
inc
jmp
lahf
jo
and
dec
jmp
test
(bad)
xchg
shl
stos
pop
icebp
rol
sbb
sub
push
mov
lods
jg
fld
ucomiss
pop
jo
lea
inc
add
add
inc
or
sub
pop
test
popa
in
push
dec
cmp
push
test
ins
dec
inc
xchg
mov
inc
push
adc
jp
adc
jg
jmp
enter
xchg
push
sub
or
or
inc
mov
jl
push
sbb
sub
mov
imul
je
imul
loopne
push
loopne
test
xchg
sub
js
jl
int3
test
mov
sbb
fnstsw
aas
push
data16
mov
test
sbb
retf
js
nop
cmc
clc
jge
xchg
or
xor
xor
sub
(bad)
xchg
cmp
dec
mov
mov
int3
fdiv
or
lods
pop
mov
and
aas
iret
xchg
sbb
add
jno
clc
add
push
loopne
or
inc
mov
sbb
fchs
rcl
mov
pop
ins
rcr
rcl
sar
les
pop
mov
inc
lods
dec
ror
or
cs
jae
adc
icebp
pop
cmp
call
and
cmp
mov
mov
nop
fist
jg
pop
push
lods
lahf
test
test
cwde
adc
push
cdq
js
push
adc
pop
xchg
or
inc
mov
mov
push
dec
ret
je
(bad)
fstp
mov
inc
cmp
and
jg
sub
inc
scas
cmc
pop
and
pop
xchg
jg
pushf
(bad)
rcr
add
lahf
lahf
jl
rol
or
push
add
push
xor
pop
pop
adc
mov
mov
je
scas
add
sub
add
ins
lahf
test
sahf
or
or
hlt
mov
and
adc
dec
cs
cmp
or
test
dec
cld
pop
inc
bound
popf
push
add
lods
jnp
lock
mov
pop
inc
add
push
lahf
inc
and
aad
add
pusha
fsubr
and
mov
test
or
shr
dec
mov
or
add
adc
jmp
sub
cmp
add
int3
mov
adc
dec
shr
frstor
dec
aam
inc
lock
fdivr
fcomp
loopne
sbb
jno
call
cmp
xor
lods
pop
push
es
cmp
dec
pop
jl
rcr
sub
mov
mov
loopne
gs
adc
out
mov
add
mov
fist
cmp
cli
xchg
xor
mov
lea
and
bound
xor
imul
ins
shl
add
movs
or
push
inc
movs
test
or
jmp
js
xchg
xchg
mov
dec
mov
shr
dec
sub
mov
inc
mov
stc
movs
push
mov
stc
push
pushf
add
or
inc
mul
or
retf
sbb
mov
or
mov
inc
pusha
sub
ss
nop
sbb
in
inc
movs
jns
inc
(bad)
and
add
leave
test
inc
lahf
movs
imul
test
scas
push
or
shr
pop
adc
movs
fadd
sub
add
icebp
leavew
inc
hlt
mov
mov
leave
pushf
mov
popa
cld
pop
or
push
and
dec
push
jns
test
add
sbb
mov
out
add
daa
popa
xchg
mov
sub
and
push
or
push
cdq
mov
jo
nop
push
mov
xor
jp
das
jmp
test
sti
adc
scas
aam
jmp
or
jle
fwait
or
shl
jne
xrelease
daa
push
sbb
sbb
lods
ja
xchg
shr
inc
pusha
mov
pusha
add
or
dec
ror
scas
cmc
sub
pop
jae
into
jbe
je
inc
movs
add
add
dec
add
xchg
gs
push
pmuludq
push
mov
cmp
iret
jne
dec
or
mov
or
add
clc
push
adc
push
xlat
or
ins
rol
or
or
mov
lods
sbb
xchg
push
ror
pop
(bad)
outs
jbe
out
popa
xor
in
push
ja
adc
add
and
sbb
inc
clc
jecxz
lods
cs
add
adc
ja
push
test
stc
adc
pop
and
sbb
push
pushf
nop
adc
pop
icebp
mov
push
lods
jecxz
and
sbb
call
or
pop
xor
les
inc
es
neg
call
test
shr
and
and
push
and
mov
push
push
imul
mov
movs
mov
xchg
daa
add
xchg
out
push
push
and
div
or
push
fadd
inc
cdq
mov
rcr
add
mov
ret
push
sbb
pop
dec
xchg
dec
or
fld
sbb
in
pop
mov
dec
data16
cmps
cbw
in
add
adc
and
aad
adc
(bad)
js
add
add
arpl
stos
mov
retf
push
fild
add
push
cmp
lahf
push
add
dec
pop
xchg
jo
mov
mov
sub
test
push
jmp
adc
add
add
push
xchg
loope
lock
mov
inc
xchg
mov
add
dec
adc
popa
jo
cmp
aaa
adc
mov
or
and
lahf
and
push
mov
das
aad
add
adc
or
dec
sbb
and
mov
add
xchg
cmp
ja
sub
mov
sub
icebp
sbb
adc
mov
xor
test
(bad)
adc
or
adc
mov
fnsave
inc
pusha
and
fwait
and
pop
and
test
cs
pop
sub
icebp
les
jbe
daa
loop
sbb
sbb
fisub
add
add
movs
xor
outs
imul
int3
or
dec
je
jl
cld
xor
jb
and
hlt
das
jmp
add
and
jne
push
(bad)
or
test
sbb
add
push
popf
in
mov
adc
or
pop
cmp
imul
ins
and
lahf
sar
xor
adc
cmp
inc
lock
mov
mov
mov
or
gs
sub
mov
mov
dec
lock
dec
cmp
inc
cmp
mov
adc
dec
retf
mov
or
jns
lock
or
rcl
test
add
imul
pop
imul
push
rcr
nop
mov
add
mov
lahf
add
jnp
out
xchg
popa
mov
movs
sub
movs
inc
push
test
sub
dec
aaa
stos
mov
mov
lock
pop
mov
icebp
or
push
inc
inc
or
xchg
mov
inc
and
add
pop
mov
inc
push
or
xchg
jb
mov
sbb
inc
mov
push
cld
inc
sub
mov
push
mov
fild
pop
and
mov
aam
enter
mov
stc
or
xchg
push
and
xor
push
int
call
inc
test
fdiv
cwde
xchg
das
inc
loop
jecxz
mov
and
mov
sbb
cld
fcmovnb
push
inc
mov
popa
add
mov
test
sub
pop
je
iret
iret
cmp
ss
add
cli
call
ror
out
ror
mov
dec
or
xor
add
mov
xchg
sbb
das
shl
add
inc
leave
sub
dec
cmp
pushf
push
ds
imul
pop
dec
and
and
dec
outs
or
and
push
push
dec
out
add
scas
push
aaa
sbb
lock
cmps
and
das
rcl
push
fcomp
lock
jp
dec
cmp
jl
and
pop
sbb
or
repz
dec
ret
call
cld
add
push
mov
or
jnp
add
jmp
sub
lods
or
mov
xor
xchg
ret
fwait
and
push
and
into
lahf
or
jne
or
ret
cmp
fstp
mov
xor
push
call
or
sub
das
inc
and
or
inc
repz
jb
aam
cmp
pop
cdq
jle
pop
adc
fistp
add
add
jnp
rcr
call
int3
or
test
test
sub
mov
dec
adc
pop
push
dec
sub
ins
(bad)
inc
dec
sbb
or
and
cmc
and
sbb
push
int3
add
or
addr16
cwde
stos
clc
mov
ja
xor
loop
test
cmovbe
add
adc
daa
rcl
mov
cs
and
jge
add
retf
xchg
pop
and
mov
cmps
xchg
mov
xor
or
or
sbb
fstp
popf
add
mov
cmp
push
fist
mov
jne
pop
les
xchg
dec
enter
sbb
push
and
inc
add
aas
jl
ror
bound
ins
ins
shl
adc
outs
dec
jbe
cmp
cmp
rcl
outs
xor
sbb
cmp
jo
or
mov
xchg
mov
or
int3
test
jl
add
cdq
fs
adc
adc
cmp
fdiv
or
sar
mov
mov
add
add
out
xchg
call
not
loopne
jo
pop
jge
pop
sbb
lds
adc
or
add
xchg
jl
add
enter
push
lahf
xchg
cs
pop
xchg
jl
pop
das
dec
add
mov
jae
outs
ss
pop
jmp
and
or
add
das
mov
xchg
test
mov
adc
fwait
jnp
sub
cmc
inc
pusha
xor
push
push
or
arpl
mov
jne
jbe
pop
movs
ret
xor
sub
clc
out
clc
ds
call
jl
xor
lods
mov
inc
sub
and
push
or
or
cmp
jb
mov
push
dec
leave
cmp
mov
ret
shl
mov
add
pop
cwde
enter
rol
hlt
dec
fwait
inc
sub
mov
add
and
je
lea
dec
stos
jg
daa
popa
sub
lahf
inc
mov
push
or
mov
fadd
lahf
int3
and
inc
(bad)
mov
or
or
mov
dec
add
inc
pop
lods
cmps
(bad)
or
push
add
mov
add
push
stos
cdq
rcr
movs
pop
add
push
aad
adc
mul
scas
add
outs
idiv
pop
fisub
and
add
and
aas
xor
add
add
adc
xor
push
sub
dec
aam
mov
mov
inc
sbb
add
add
shr
mov
jne
jnp
movs
push
shr
sbb
lea
ret
pusha
outs
xchg
cmp
jnp
js
cmp
scas
shl
lock
test
inc
pop
or
or
scas
sbb
lds
cmp
dec
mov
add
adc
mov
pop
pop
dec
add
aaa
pop
jo
shr
mov
pop
and
lds
fcomp
lods
cmovo
repnz
jnp
icebp
mov
fsub
(bad)
jle
pusha
push
add
nop
add
and
popa
add
idiv
shl
xchg
sbb
xchg
xchg
push
cmps
push
popa
ss
ss
mov
jne
cmp
mov
pushf
outs
mov
and
jecxz
or
add
rol
or
or
int3
mov
imul
or
pop
mov
or
xor
(bad)
sti
pop
inc
lods
inc
ja
or
lahf
movs
push
jp
sbb
dec
xchg
mov
push
sub
adc
add
in
jae
ror
adc
adc
sub
mov
scas
and
popa
jmp
jmp
dec
in
hlt
loop
jmp
push
or
rcr
call
int3
inc
adc
sub
adc
fsubr
pop
je
lods
push
aaa
dec
fidiv
cmps
push
push
das
xor
mov
lahf
xor
arpl
imul
daa
test
sbb
js
xor
shr
outs
cmps
dec
xor
push
cwde
add
pop
dec
push
loope
das
stos
call
pop
mov
inc
add
test
imul
push
add
xchg
movs
jns
(bad)
cmp
mov
mov
sbb
jae
ss
cmp
movs
adc
shl
pop
adc
add
mov
aam
sbb
ins
pushf
retf
xor
cmp
dec
hlt
xchg
and
aad
push
dec
or
or
xor
popa
out
pop
daa
xchg
pop
lds
adc
lahf
cmp
sub
and
dec
nop
jo
mov
and
pop
add
push
fsub
inc
adc
pop
lods
and
add
sbb
(bad)
jmp
les
call
inc
push
adc
add
add
xchg
cmp
pop
xchg
xchg
sbb
push
ret
add
enter
sub
push
adc
xor
out
jo
gs
jge
xor
aas
call
push
and
add
sbb
adc
shl
loopne
aaa
mov
xor
(bad)
sub
sub
xchg
clc
lock
lock
jp
(bad)
dec
jge
or
in
add
dec
push
outs
pusha
push
cld
je
fbstp
sbb
cmp
push
add
pop
ja
pop
inc
inc
es
xor
fsub
pushf
fs
outs
fbstp
adc
pop
push
and
mov
cmp
push
xchg
xchg
retf
push
cld
test
pop
or
adc
xor
mov
or
and
xchg
test
fcmove
mov
push
dec
sbb
cmp
jge
mov
or
pusha
scas
push
jnp
cwde
cmp
add
ret
add
hlt
adc
xchg
add
lock
lahf
xor
push
clc
stc
pop
movs
xor
jge
xor
dec
ja
adc
test
sub
ja
sbb
loopne
mov
or
imul
sub
mov
adc
mov
ret
shr
sbb
mov
push
leave
hlt
adc
pop
add
jmp
and
cmps
jl
stos
xor
outs
add
push
lea
sbb
inc
or
call
(bad)
rol
nop
sahf
cdq
or
push
add
fs
movs
and
and
inc
shl
add
addr16
rol
mov
pop
or
mov
or
cs
adc
test
test
scas
adc
cmp
retf
ret
pop
cwde
xchg
xor
sub
sub
push
cmp
mov
xlat
ins
dec
daa
cmc
push
(bad)
jo
rcr
bound
add
mov
push
retf
les
jnp
add
test
push
sub
or
inc
ja
dec
test
ror
mov
xchg
fiadd
xchg
inc
or
dec
ret
add
cwde
mov
mov
push
adc
dec
in
lods
mov
inc
mov
sbb
push
xchg
arpl
adc
bound
xchg
and
dec
push
fld
pop
inc
(bad)
lds
inc
push
int
jecxz
fstp
pop
push
js
mov
jne
or
adc
and
sub
push
sub
scas
pop
and
in
les
test
lods
jbe
mov
sub
pop
mov
jno
iret
sub
push
adc
mov
xchg
sbb
mov
sbb
retf
xchg
sahf
mov
sbb
add
test
in
ins
jo
sbb
mov
mov
lea
das
pop
jmp
xchg
shl
pop
or
and
pop
mov
cwde
mov
mov
xor
inc
inc
es
(bad)
les
test
add
add
push
sbb
pop
or
or
push
pop
inc
dec
push
mov
les
aam
mov
gs
mov
mov
inc
lahf
mov
(bad)
push
adc
int3
ret
push
and
mov
xor
aas
clc
retf
cmp
test
or
test
lahf
mov
mul
or
out
and
sahf
ins
sub
das
pop
sub
cmp
cmp
(bad)
stos
lock
adc
mov
xchg
inc
inc
jmp
add
sbb
add
add
or
rol
sub
or
xchg
or
inc
xor
mov
or
shl
push
enter
inc
cmp
pop
mov
cmp
xchg
and
lock
mov
inc
shl
leave
pop
ror
dec
arpl
inc
rcl
push
inc
push
adc
xchg
jne
mov
adc
push
js
push
dec
test
inc
dec
xchg
arpl
imul
sbb
and
fucomi
call
fwait
sbb
(bad)
(bad)
mov
push
add
xor
push
mov
and
inc
stc
or
or
inc
test
shl
ds
dec
out
and
sbb
ror
or
cmp
cmp
call
data16
pop
and
dec
jp
cmp
or
push
xchg
mov
clc
xor
outs
and
lods
pop
jl
cmc
test
cld
dec
stos
jmp
cli
xor
mov
leave
lods
xor
push
add
pusha
pop
in
pop
adc
dec
sub
jnp
push
cmp
push
jae
push
sbb
inc
daa
je
xchg
test
ins
pop
dec
add
fmul
lds
add
fnstsw
jge
cmp
imul
mov
dec
gs
test
or
(bad)
sbb
hlt
jae
neg
push
pop
cld
outs
push
aam
mov
sbb
sub
xor
imul
mov
(bad)
push
dec
add
(bad)
je
inc
pop
mov
mov
sub
cmp
and
dec
and
pusha
or
ror
and
jns
dec
jne
xchg
mov
add
inc
lock
sub
repz
jmp
js
lods
pop
aaa
jl
fcmovnb
jmp
div
xor
or
dec
and
add
mov
jmp
inc
add
adc
das
icebp
dec
xchg
push
sbb
dec
ret
arpl
lock
shl
dec
adc
xor
mov
int
jmp
dec
or
jmp
cmp
adc
call
sbb
scas
or
leave
in
dec
adc
lahf
or
xor
mov
jns
xchg
cwde
sub
fstp
sbb
mov
sub
cmp
or
popa
sbb
pop
cmp
or
adc
and
shr
fisttp
bound
adc
test
dec
push
movs
push
mov
adc
sbb
ret
inc
pop
xchg
sub
out
push
xchg
ja
ret
sbb
jb
fadd
out
ret
dec
jmp
mov
lea
loopne
xor
aam
mov
call
xchg
mov
xchg
mov
into
pushf
imul
pop
add
xor
pop
dec
sub
add
call
into
push
or
sbb
mov
pop
js
add
add
xor
jle
add
adc
mov
push
popa
nop
pop
adc
hlt
jecxz
add
push
jmp
push
lea
inc
je
sahf
add
add
and
push
jg
test
mov
mov
fist
and
ins
bnd
dec
fdivr
and
xchg
ror
xchg
add
and
pop
pop
pop
xlat
dec
inc
and
push
cmps
push
cmp
dec
adc
out
enter
add
mov
add
int
push
or
shl
push
mov
mov
or
cdq
fadd
push
cdq
inc
jmp
inc
sub
mov
pop
loop
jnp
fsub
and
inc
loopne
add
movs
adc
or
fs
cmp
test
push
mov
adc
add
add
add
outs
(bad)
cld
mov
hlt
ret
xlat
test
cld
ret
mov
pushf
jo
mov
sub
mov
adc
aas
add
pop
push
je
ror
loopne
pushf
push
cli
dec
and
or
or
in
fdivr
pushf
pop
inc
and
lahf
sub
imul
jl
movs
xor
xor
or
das
into
mov
loopne
mov
cmp
and
test
fild
or
sbb
adc
sbb
adc
push
aaa
imul
mov
sbb
sbb
xor
add
retf
fist
add
or
or
inc
enter
lods
and
loop
mov
mov
adc
fist
neg
jmp
sub
dec
ins
ror
mov
popa
aaa
bound
fmul
inc
mov
in
aaa
adc
fmul
imul
pop
rol
movs
adc
es
stos
and
xchg
jbe
jae
sbb
or
aas
add
jg
or
adc
pop
(bad)
mov
dec
outs
sbb
add
or
and
pop
push
movs
mov
ss
mov
and
or
dec
mov
sub
inc
sub
adc
dec
add
push
or
inc
gs
rol
es
push
push
scas
movs
inc
arpl
push
or
ret
dec
pop
sbb
imul
mov
inc
popa
inc
ja
push
add
pop
xor
add
or
sbb
add
shl
lods
in
or
add
mov
inc
ret
test
aam
aaa
pusha
and
aam
cmp
clc
sub
cmp
jo
faddp
mov
add
inc
stos
sbb
xchg
in
xchg
ret
loopne
add
sbb
sbb
or
int
mov
jo
or
out
xor
xchg
movs
cmc
in
push
sbb
add
mov
test
xchg
fnsave
push
inc
movs
lock
push
xchg
rol
loopne
mov
arpl
idiv
xor
les
push
out
mov
mov
ja
sbb
push
or
popa
sbb
adc
ret
xchg
inc
call
push
xor
add
mov
and
sti
add
int3
mov
xor
add
inc
adc
dec
pop
sub
retf
inc
rol
vpmulhuw
sahf
dec
push
ds
or
push
shl
popf
add
push
jns
dec
push
xchg
inc
adc
add
cwde
cwde
pop
pop
movs
loope
push
shl
jmp
or
and
cmps
cmp
push
inc
adc
repnz
sub
sub
xor
ds
inc
lahf
dec
dec
pop
push
aas
das
pop
xchg
adc
test
xchg
xlat
push
jo
xchg
pop
hlt
inc
scas
add
ins
outs
jp
fs
ins
dec
clc
adc
mov
jg
add
mov
retf
cld
inc
outs
add
lea
(bad)
sbb
enter
sbb
adc
sub
sbb
mov
(bad)
dec
or
push
adc
rol
dec
add
dec
fldcw
fnstenv
stos
mov
sbb
mov
out
cmp
or
or
adc
imul
lea
mov
(bad)
mov
jnp
pop
dec
in
push
or
(bad)
jle
inc
lock
pop
mov
push
stc
sbb
cmp
pop
xor
aaa
xchg
inc
add
and
mov
ins
inc
push
dec
std
cmp
call
int3
adc
and
xlat
push
dec
inc
push
fadd
test
daa
pop
push
rcl
and
push
cmps
fs
xchg
sar
cmp
inc
mov
mov
lds
hlt
push
cmps
test
cli
dec
inc
mov
movs
adc
ret
pop
and
repz
outs
adc
ja
dec
sub
cmp
or
in
pop
es
dec
dec
mov
clc
or
iret
nop
mov
add
dec
call
push
movs
mov
bound
bound
mov
scas
ins
dec
int3
mov
clc
(bad)
dec
int3
dec
add
sub
push
xor
pusha
sbb
int3
adc
fadd
sub
xchg
dec
mov
int3
enter
push
pushf
enter
retf
inc
add
mov
push
jb
sbb
mov
cs
mov
push
int3
mov
daa
jne
mov
adc
out
ffree
jae
push
in
mov
andnps
or
adc
ins
cmp
cli
hlt
mov
and
sbb
xor
in
iret
les
mov
pop
es
aam
fwait
dec
arpl
mov
and
push
cmp
repnz
dec
fcom
outs
mov
push
pop
fcom
or
inc
arpl
sbb
xor
stos
pop
push
xor
(bad)
aas
call
int3
xchg
test
jecxz
jle
add
add
lods
add
lods
fild
xor
mov
fdivr
jmp
dec
xor
xor
or
scas
add
mov
rcr
mov
call
sub
rcl
adc
(bad)
fisttp
nop
fdivr
and
fidivr
je
arpl
(bad)
sub
add
test
and
mov
mov
inc
je
sbb
loopne
pop
cmp
ror
push
or
add
cmp
sbb
cmp
adc
xchg
sbb
or
stos
sbb
and
cmp
add
lock
sbb
pusha
lods
dec
push
inc
or
xor
add
in
scas
xor
repz
lock
and
ins
fistp
ja
pop
dec
pop
call
and
add
xor
xchg
xchg
xchg
xchg
retf
jnp
and
fild
and
push
jo
mov
or
imul
xchg
xor
test
xchg
shr
push
mov
push
adc
mov
imul
inc
sbb
ror
adc
add
adc
add
mov
xchg
pushf
jb
mov
clc
cmc
mov
mul
push
lds
jg
push
xchg
xchg
fadd
sti
mov
std
jl
or
movs
inc
aam
xor
adc
in
dec
push
jae
pop
retf
xor
mov
and
inc
push
icebp
pushf
and
add
aaa
outs
cmp
je
jno
fisttp
sti
add
(bad)
les
add
lahf
xchg
sbb
lahf
nop
and
mov
mov
adc
cmp
pop
xchg
xchg
sub
retf
pop
loope
cld
and
push
dec
or
or
sub
aaa
inc
sub
cmp
loopne
dec
adc
mov
loope
stos
cs
dec
int3
jg
xchg
pusha
test
add
push
dec
pop
add
sbb
xor
pop
xchg
lock
jnp
je
and
sbb
fstp
and
xor
push
push
js
popa
xchg
adc
and
jp
shl
gs
ror
and
adc
push
jg
movs
lea
shl
cmp
inc
movs
or
adc
or
imul
pop
add
rol
xor
push
scas
pop
movlps
adc
inc
call
out
mov
jne
movs
xchg
test
mov
loope
mov
ret
cmps
nop
mov
cdq
inc
stos
jo
vcmppd
and
nop
jmp
in
lock
jl
aam
enter
test
add
pusha
retf
adc
and
push
(bad)
icebp
rol
(bad)
and
or
cmp
or
adc
(bad)
push
pushf
mov
std
jnp
push
nop
push
inc
add
retf
mov
popf
arpl
adc
jno
adc
inc
arpl
cwde
add
sbb
nop
mov
nop
xor
or
arpl
adc
dec
sub
icebp
xor
or
mov
call
nop
test
lea
xor
dec
xor
sbb
aas
or
int3
mov
stos
xchg
ss
test
test
mov
sub
cli
dec
sbb
push
push
shl
dec
icebp
cdq
fs
sub
mov
push
inc
rcr
add
mov
push
jns
pop
fwait
les
and
jmp
(bad)
loope
fcom
jb
xchg
sbb
out
or
aam
or
dec
cmp
icebp
adc
lods
xor
(bad)
in
xchg
or
lods
xchg
wrmsr
ins
jmp
dec
add
adc
idiv
push
mov
pop
mov
sub
and
or
pusha
sub
push
add
mov
lock
push
aas
int
es
or
hlt
les
mov
fidivr
and
inc
xchg
icebp
popa
add
loopne
adc
mov
test
add
adc
test
enter
xor
cmps
sti
sbb
jle
xlat
pusha
dec
inc
inc
popf
cmps
cwde
jecxz
nop
lods
test
add
rcr
push
sub
scas
and
push
xor
das
lock
push
jge
xchg
inc
push
cdq
or
xchg
push
inc
lods
lods
pop
inc
dec
dec
mov
inc
push
push
push
std
push
mov
lahf
mov
xor
xchg
jecxz
xchg
xor
adc
mov
sbb
bswap
call
pop
adc
add
int3
cmc
inc
rol
mov
mov
mov
lods
rcl
sub
addr16
test
(bad)
outs
jecxz
test
sub
inc
(bad)
fild
add
mov
or
test
mov
loope
mov
aas
or
jl
adc
add
in
lahf
xchg
adc
push
pop
lahf
add
adc
or
jnp
retf
xchg
repz
jmp
loopne
inc
sub
or
ins
in
inc
or
ret
imul
pop
cdq
mov
imul
xor
push
je
pop
or
in
stos
add
jl
adc
mov
add
fucomip
jl
test
push
lock
adc
push
push
popf
push
bound
or
mov
or
adc
add
out
fistp
xor
add
pop
arpl
in
repnz
or
or
test
lods
cmp
add
mov
cmps
and
mov
adc
jo
or
or
add
jg
adc
sbb
lahf
or
and
mov
or
(bad)
fimul
and
and
push
repz
xor
xor
jmp
inc
fcom
cmp
rcl
aad
pop
jg
and
add
test
add
in
or
inc
mov
sbb
imul
inc
aas
(bad)
fist
pop
icebp
jmp
push
je
sub
call
jns
inc
mov
or
loope
scas
jg
sbb
imul
mov
add
enter
and
inc
hlt
retf
or
push
push
sti
add
and
aas
and
and
add
nop
and
add
nop
dec
or
jg
and
jo
adc
cwde
xchg
and
popf
add
pcmpeqw
sub
xchg
test
adc
cmp
jge
or
add
add
xchg
pop
or
jns
add
sbb
aam
or
cld
mov
push
mov
ret
mov
add
xor
push
sub
or
add
pop
sub
inc
pop
mov
xor
lods
daa
nop
mov
jp
aam
or
add
loop
dec
fmul
and
pop
fcomp
fistp
mov
ins
pop
jmp
jmp
and
inc
loop
and
sub
fisttp
jl
and
lock
inc
movs
xor
out
nop
xor
xor
or
or
jg
mov
add
or
movs
imul
add
add
(bad)
xchg
(bad)
(bad)
addr16
and
cmp
cdq
das
in
push
hlt
out
and
mov
or
sahf
or
add
pop
mov
mov
in
mov
cmp
ud2
int3
add
lahf
or
ins
pop
inc
test
add
test
inc
jae
mov
popa
cmp
mov
push
cld
es
xor
mov
pop
idiv
sbb
repz
sbb
sub
and
or
aaa
push
jmp
movs
cmp
iret
dec
jno
adc
test
rcr
inc
jmp
test
pusha
aas
sub
jle
add
inc
rol
cld
sbb
addr16
stos
mov
mov
(bad)
mov
push
mov
or
stc
mov
xchg
enter
push
adc
rcl
ret
and
or
add
mov
arpl
adc
and
inc
pop
inc
adc
inc
or
mov
sti
mov
and
xor
push
jae
fistp
add
adc
pop
push
mov
lock
lds
mov
add
lock
stc
movs
push
add
or
cwde
fist
add
inc
imul
(bad)
or
xchg
mov
add
inc
js
(bad)
or
add
push
frstor
sub
adc
push
dec
push
pop
add
movs
ror
push
(bad)
jg
xor
pop
nop
push
loopne
add
imul
cdq
xor
fsub
fsubr
jns
mov
xor
and
fwait
or
jmp
cmp
or
fdivr
leave
or
xchg
and
scas
cmp
dec
in
push
repnz
push
jl
jne
adc
jnp
ret
or
or
lock
add
jae
xor
inc
and
dec
and
leave
sbb
push
fld
fmul
adc
sbb
and
out
fild
dec
push
push
and
push
xor
mov
sti
add
mov
jne
add
adc
aas
xor
(bad)
setne
sbb
dec
ins
or
or
and
clc
fwait
add
nop
in
add
clc
clc
sub
or
xchg
fadd
jg
lahf
xchg
data16
and
cwde
or
lahf
jecxz
sbb
jecxz
sub
sub
pusha
sub
inc
sbb
jmp
xchg
xchg
add
fmul
pop
cdq
mov
lock
pop
push
xchg
mov
sbb
and
and
or
xchg
cmp
pop
jl
dec
xor
jb
xor
ins
and
and
or
fbstp
dec
shl
nop
mov
fwait
and
dec
dec
daa
lods
pop
or
cwde
mov
or
dec
inc
sub
pop
push
jg
fbstp
ffreep
dec
xchg
mov
dec
adc
mov
das
add
fistp
add
lods
mov
pop
inc
fistp
xchg
pop
or
pop
jg
inc
push
or
int3
push
adc
mov
jmp
mov
mov
adc
fiadd
stos
or
sar
addr16
and
push
pushf
adc
xlat
jg
ret
xchg
or
out
hlt
ja
aam
std
cld
cmp
jbe
sub
and
or
sub
mov
inc
push
xchg
add
inc
cld
pop
and
inc
pop
pop
add
aad
xor
push
ret
sub
or
push
fild
xor
adc
fild
dec
sbb
inc
lahf
mov
or
push
sbb
(bad)
jg
pop
add
leave
lock
mov
gs
pop
mov
inc
xchg
sub
pop
pusha
rol
bound
inc
cmp
or
mov
push
aam
push
or
(bad)
jg
dec
add
adc
add
xchg
push
sub
mov
add
bound
inc
push
sub
add
sti
add
fst
call
fs
loopne
xchg
mov
lahf
cmp
inc
sub
call
push
xchg
fild
xor
and
push
pop
cmp
add
outs
lahf
fcomi
ja
push
or
retf
nop
pop
cmp
sysenter
add
lods
add
fild
fs
mov
push
ins
mov
inc
and
stos
jg
lods
call
add
jmp
or
push
pushf
fisttp
nop
or
mov
sbb
or
lahf
rol
mov
push
add
pop
adc
adc
push
(bad)
or
add
mov
xor
aas
mov
add
and
xor
or
mov
aad
and
movs
dec
(bad)
mov
imul
mov
loope
jb
inc
jo
inc
add
mov
jns
in
mov
dec
cld
push
sbb
cdq
xchg
cmp
push
lahf
pop
sub
mov
mov
or
mov
(bad)
fistp
cmp
dec
sub
stos
in
pop
add
popa
pop
mov
fucomip
dec
add
ffreep
mov
mov
or
shr
call
arpl
adc
mov
cwde
xlat
mov
or
lods
mov
shr
add
jmp
add
sbb
scas
add
adc
fsubr
push
jge
sub
mov
push
test
dec
xor
jbe
and
leave
adc
cmp
mov
fucomip
mov
mov
call
or
scas
add
dec
rol
mov
push
add
inc
adc
daa
scas
pop
cmp
aaa
cdq
mov
loope
push
clc
and
dec
(bad)
and
pop
push
jp
and
movups
mov
sti
les
jge
or
les
in
add
nop
add
js
xchg
inc
neg
shl
and
dec
or
add
mov
inc
push
test
fsub
ret
lds
xor
and
mov
mov
or
imul
frstor
dec
ins
adc
cmp
stc
retf
sbb
jg
jo
add
add
and
mov
jne
call
and
ja
inc
or
ins
add
adc
or
sub
inc
xor
push
es
in
sub
call
in
sub
pop
ins
cmp
mov
sahf
dec
fdiv
xor
cmps
xchg
mov
xor
or
out
fadd
cmp
loopne
pop
mov
mov
inc
sub
xor
sbb
push
imul
sbb
push
sbb
rol
adc
push
in
inc
pop
xchg
scas
jns
fdiv
inc
shr
xadd
rcl
adc
mov
nop
and
and
shr
sbb
mov
or
enter
add
imul
mov
aaa
xor
or
add
loopne
fld
jns
loope
shl
sbb
add
or
jb
scas
dec
nop
(bad)
mov
push
out
sahf
int
mov
pop
fdivp
ins
ss
lea
test
push
in
pop
inc
dec
js
sbb
addr16
cmp
adc
jo
xchg
pop
out
(bad)
cmc
and
stos
rol
or
jno
outs
adc
sub
(bad)
pop
(bad)
std
jne
popf
inc
sbb
daa
or
add
cmc
shl
call
inc
xor
call
ret
out
mov
push
icebp
fadd
enter
and
and
mov
add
in
pop
sbb
or
dec
sub
xlat
or
cwde
call
xlat
add
in
mov
adc
inc
out
dec
add
push
lahf
mov
jmp
jmp
or
add
sbb
(bad)
push
cmps
adc
mov
xor
lods
daa
pop
ins
mov
retf
mov
fsub
and
inc
pusha
imul
mov
retf
repnz
add
sub
add
add
inc
dec
or
(bad)
mov
xchg
(bad)
sbb
xor
add
mov
cmp
pop
adc
or
xor
or
ror
jmp
fbld
pop
adc
pop
add
push
jp
(bad)
pop
sbb
dec
icebp
inc
out
mov
(bad)
fwait
jmp
jns
sbb
xor
xor
adc
les
les
ficom
sub
pop
mov
xor
aam
mov
inc
and
fisttp
add
lahf
add
mov
imul
call
mov
pop
call
jb
or
xchg
cld
icebp
and
jg
jmp
and
jmp
add
adc
ss
mov
adc
into
inc
sub
out
int3
sbb
jge
dec
leave
cld
sbb
dec
popa
loopne
les
stos
push
dec
add
sub
sbb
aas
xor
pop
int
mov
not
inc
into
push
pop
fsub
adc
xlat
inc
mov
mov
and
push
test
inc
adc
movs
dec
cmp
push
mov
and
push
aam
mov
mov
xor
js
fist
and
add
loopne
cmp
xchg
add
or
inc
loopne
xchg
or
ins
pusha
mov
adc
js
cmc
mov
(bad)
clc
sub
mov
shl
cmp
mov
add
rcl
dec
pusha
mov
test
pop
sub
push
inc
stos
daa
pop
imul
add
xchg
aam
add
popa
or
sbb
imul
inc
xchg
addr16
dec
adc
ret
jle
push
(bad)
icebp
rol
scas
dec
adc
xor
add
xor
jle
or
push
xor
jmp
pop
dec
retf
inc
mov
and
es
aam
pop
rcr
pop
add
cmp
and
fwait
sub
inc
dec
adc
je
mov
adc
test
sti
es
adc
inc
add
add
sub
cmp
in
std
arpl
cwde
dec
push
adc
add
inc
in
in
clc
sub
pop
cwde
ror
sti
neg
dec
pop
dec
push
(bad)
nop
push
fstp
jno
add
aaa
hlt
inc
cmp
clc
dec
jnp
fs
in
ret
or
mov
dec
int3
adc
mov
rol
lsl
adc
jno
rcl
or
pushf
aas
sbb
mov
mov
gs
dec
xchg
mov
dec
add
daa
adc
in
dec
and
pop
test
cmp
pop
aad
add
inc
ins
xchg
push
or
mov
jnp
sbb
rol
in
and
lds
adc
or
loope
jne
cmp
jo
sub
add
or
cwde
cmp
mov
mov
cld
dec
and
adc
inc
adc
push
movs
movs
jle
mov
pop
sub
inc
enter
adc
sbb
xchg
and
xor
jmp
mov
or
fiadd
into
lds
jle
and
fwait
xadd
call
call
dec
test
(bad)
sub
sbb
add
sar
or
ret
pop
sbb
call
movs
neg
nop
fmul
inc
jmp
lea
sbb
sub
sbb
stos
setno
mov
or
fs
jae
adc
mov
arpl
mov
jl
movs
in
push
mov
ins
inc
das
xchg
pop
mov
dec
pop
pusha
imul
ror
add
jno
or
pop
jno
xor
or
test
mov
mov
scas
test
push
mov
jecxz
fbld
add
sub
ret
frstor
lock
xchg
mov
and
(bad)
in
and
and
dec
je
jne
pop
sub
sti
je
cdq
or
add
(bad)
aad
cmp
mov
add
and
or
ret
push
inc
or
add
and
test
adc
into
fadd
(bad)
sub
mov
or
ins
fst
ja
mov
clc
aad
xor
cs
jnp
or
xor
jp
xor
(bad)
mov
jecxz
loopne
or
xor
dec
or
fild
sub
retw
mov
and
dec
add
aad
mov
mov
or
mov
dec
add
jl
sub
rcr
xchg
in
mov
mov
cmps
xor
rol
dec
je
pop
adc
add
loope
popf
fisttp
cmc
mov
sub
mov
lock
inc
add
and
xlat
fsubr
jp
ficom
ret
push
adc
xor
sbb
lahf
fwait
cmp
cwde
mov
push
call
ret
fxch
fsubr
jge
inc
mov
pop
sbb
push
rcl
or
jp
xor
pop
and
cmp
jno
cmc
xchg
add
mov
mov
sbb
in
and
push
pop
mov
push
ss
test
mov
cmps
daa
inc
inc
inc
sbb
xor
inc
add
sub
lock
pop
mov
mov
dec
es
push
aas
jbe
add
and
pop
aaa
and
inc
jo
xchg
mov
add
rcr
dec
mov
popa
pop
bound
(bad)
jl
push
aaa
or
es
retf
push
push
or
leave
test
dec
nop
jns
add
bound
adc
pop
or
dec
dec
or
dec
test
dec
xor
mov
add
or
inc
sbb
out
adc
add
inc
add
in
pushf
leave
popa
add
add
and
mov
add
inc
xchg
imul
xchg
movs
je
pop
aaa
adc
test
pop
sbb
jmp
push
xchg
xor
retf
js
loopne
jp
mov
div
sbb
pop
and
pop
retf
lea
sbb
push
mov
jbe
add
imul
adc
add
pop
inc
rol
dec
or
pcmpgtw
retf
add
inc
cmp
lahf
fistp
clc
scas
ror
adc
jmp
jmp
add
call
xor
inc
add
pop
push
pop
mov
add
test
dec
cmp
mov
das
neg
adc
gs
cdq
outs
push
push
enter
adc
add
or
mov
popa
cdq
pusha
push
inc
or
jmp
scas
movs
cmp
push
fadd
or
push
sub
mov
es
outs
mov
cld
push
aad
push
popa
and
arpl
retf
repz
xchg
pop
push
ja
(bad)
pavgw
stos
and
inc
rcl
add
test
cmp
xor
fcom
push
sbb
ss
adc
xchg
mov
jmp
and
lods
mov
iret
adc
mov
xor
mov
push
inc
sub
mov
rcl
adc
add
in
call
adc
sbb
adc
clc
lds
lods
push
mov
sar
cmp
sbb
pop
imul
xchg
push
mov
push
and
(bad)
adc
cmp
push
pop
test
add
jg
push
lock
cld
aad
test
jne
mov
popa
or
dec
fld
inc
je
repnz
mov
out
fist
dec
sub
adc
lods
push
jg
aaa
mov
aad
add
xchg
maxps
or
pop
or
push
xor
cld
sub
cmp
enter
enter
sti
or
adc
mov
mov
jge
jnp
sub
shr
or
jmp
popf
jmp
jnp
test
adc
add
sub
pop
lds
or
popa
add
rcl
mov
mov
sub
add
adc
add
add
fadd
cmp
mov
movs
or
sbb
sbb
sbb
loopne
cmp
out
push
pop
mov
in
mov
mov
xor
stos
or
sbb
adc
stos
mov
inc
pop
sub
ret
cmp
stos
push
(bad)
cmp
push
adc
push
add
lods
shr
hlt
inc
inc
pop
or
xor
popa
pop
fwait
lahf
ret
inc
stos
cld
aaa
adc
sbb
inc
es
sub
inc
add
and
mov
pop
cwde
ret
nop
xor
test
imul
loope
cwde
adc
add
dec
adc
adc
cmps
pop
xchg
(bad)
les
xchg
out
cmp
in
clc
dec
inc
cli
sub
push
imul
push
ds
call
pop
rcr
icebp
jne
sbb
jo
and
jno
pop
add
pop
jo
adc
stos
adc
inc
add
mov
pop
rcr
add
add
sbb
ja
sahf
nop
adc
fdivr
popa
push
sbb
mov
ss
test
adc
rol
xchg
xor
pusha
adc
xchg
jo
mov
and
lods
pop
sbb
pop
leave
cmp
dec
into
aam
mov
pushf
and
add
lahf
inc
(bad)
ror
jo
cmp
sbb
or
jno
push
xor
adc
pusha
xor
jo
and
push
add
fiadd
aas
push
push
fs
pushf
(bad)
clc
jge
inc
aam
dec
add
hlt
shr
sub
add
lock
fs
in
stc
pop
ss
or
mov
xor
xor
ins
stos
inc
jmp
mov
add
push
and
push
inc
aas
sbb
mov
push
sub
lock
pusha
dec
mov
addr16
mov
dec
in
shr
enter
or
cmps
popf
push
cmp
fwait
ins
(bad)
dec
push
ins
dec
inc
or
sbb
retf
sar
dec
or
outs
stc
inc
aad
cmp
mov
rol
(bad)
call
dec
js
ror
or
mov
cmp
mov
popa
push
outs
adc
pop
je
xor
sbb
jmp
or
sub
add
mov
mov
push
and
add
jl
cld
cld
lahf
mov
sbb
loope
jle
imul
mov
adc
xchg
mov
aas
xor
mov
fnstenv
or
iret
mov
add
mov
popa
add
int
(bad)
pusha
mov
lahf
cmp
test
sbb
mov
std
cwde
and
lods
jecxz
imul
bound
mov
es
mov
xor
lahf
imul
jne
jae
push
movs
mov
xor
pop
pop
add
jnp
sbb
mov
dec
repnz
jo
mov
les
pop
push
mov
dec
mov
and
mov
jbe
inc
cmp
mov
push
nop
pushf
add
or
cmp
push
stos
mov
int3
int3
lahf
dec
xor
mov
into
push
push
sub
pushf
xor
fistp
pop
popa
adc
gs
or
cmc
inc
xor
sub
fsubr
das
cmps
jno
jmp
imul
mov
(bad)
jp
sbb
or
add
jno
ja
mov
fbstp
leave
sbb
outs
or
jge
sbb
add
pop
test
mov
test
(bad)
mov
cmp
lahf
xchg
lds
add
or
fbstp
xchg
sub
leave
mov
movs
push
pop
fwait
imul
rcr
push
dec
xor
pop
or
pop
jmp
fwait
jmp
or
and
inc
das
xor
cld
stc
adc
test
xor
push
inc
shr
shr
jp
dec
add
jb
addr16
mov
rol
fcom
gs
xchg
fsub
(bad)
gs
mov
leave
pop
adc
or
movs
pop
add
aam
movs
jns
sbb
cmp
cmp
bswap
pusha
mov
sub
sub
adc
or
fwait
mov
imul
pop
pop
rol
add
or
sahf
ret
mov
jmp
shl
mov
aam
fwait
inc
and
or
xor
inc
les
push
fisttp
stos
pop
call
pop
les
xor
out
push
call
cmp
inc
sar
sub
sub
out
jmp
inc
pop
push
xor
pop
mov
out
adc
and
in
adc
mov
std
mov
cld
iret
std
push
inc
pop
push
jg
rol
push
nop
adc
adc
shr
retf
aaa
std
mov
inc
sub
push
push
mov
jo
mov
(bad)
pop
(bad)
cmps
ret
sub
sub
inc
in
jmp
inc
inc
push
cmp
arpl
sbb
and
dec
add
and
sub
mov
in
pop
or
fldz
mov
bound
adc
jmp
in
add
in
lods
push
xchg
ror
aas
dec
or
shl
and
cwde
sti
shl
xchg
dec
xor
loope
mov
add
cmp
and
and
mov
cmp
mul
lock
mov
nop
sbb
das
mov
sbb
scas
and
jo
ret
push
fwait
mov
sub
jle
gs
push
cmp
nop
(bad)
les
adc
aaa
ins
fisttp
pop
pop
movs
dec
nop
jno
test
push
rol
xchg
cdq
or
enter
add
push
push
xor
icebp
cmp
mov
addr16
mov
and
adc
mov
sub
pop
inc
push
mov
adc
mov
ins
retf
(bad)
daa
and
add
lea
mov
(bad)
shl
pop
test
add
sbb
imul
aam
mov
mov
sub
jg
mov
aas
inc
ret
or
ins
add
xor
cmp
jne
enter
and
ja
mov
enter
mov
mov
repz
or
cwde
xchg
add
push
add
and
jne
pusha
push
add
ret
popa
push
adc
or
push
ins
stos
sub
dec
or
add
mov
cmp
leave
pop
movlps
xor
mov
sub
pop
sub
dec
mov
push
and
cld
or
scas
lahf
lea
ret
jae
mov
addr16
lock
pusha
adc
repnz
mov
xor
call
shl
mov
das
xor
xor
fistp
push
retf
mov
dec
adc
mov
call
fild
jmp
dec
pop
bndldx
jno
dec
or
push
cwde
pop
in
xor
inc
mov
jg
movs
out
fcomp
or
sub
mov
and
cmp
ins
aas
test
imul
adc
adc
rol
sbb
xchg
outs
and
inc
push
add
adc
imul
mov
pop
fst
mov
test
xor
(bad)
icebp
sbb
cmp
xor
lock
out
fmul
bound
pop
push
add
sub
inc
mov
pop
jle
add
mov
add
test
push
pop
es
add
mov
and
das
jmp
dec
icebp
retf
xor
cld
xchg
xor
pop
pop
ja
push
ret
call
loope
mov
jne
push
inc
sbb
inc
add
cdq
inc
or
push
imul
inc
jo
push
rcr
inc
cmp
cwde
arpl
add
clc
add
rol
je
cmp
adc
dec
(bad)
adc
gs
and
rcr
pop
or
call
aas
adc
push
ret
push
aas
(bad)
lock
push
push
inc
push
push
add
stos
es
jmp
outs
xor
dec
adc
push
or
pusha
or
jg
clc
add
call
jmp
cmps
nop
or
inc
aas
push
sub
lahf
in
in
sar
dec
movs
fcmovb
xchg
mov
xor
rcr
adc
and
pusha
jl
jno
xchg
hlt
iret
jbe
sbb
jns
push
loop
nop
pop
cmp
sbb
jge
and
or
sar
bound
inc
fwait
jo
adc
std
ret
ins
pop
lahf
add
cmovns
lock
sbb
and
adc
ja
fwait
mov
adc
sbb
fucom
add
rol
enter
jnp
inc
sub
xor
jecxz
cdq
add
push
xor
xor
loopne
xchg
and
inc
or
add
add
test
call
pop
sbb
add
mov
lds
fisttp
loopne
addr16
push
rol
and
mov
add
jo
fld
mov
or
rol
dec
dec
or
xor
out
inc
and
sbb
adc
inc
cmp
imul
xor
sub
xor
mov
sbb
(bad)
inc
or
outs
adc
xchg
xchg
ror
inc
js
or
mov
dec
ja
ret
adc
jle
mov
mov
ret
xor
jge
add
in
or
shl
sub
sbb
clc
add
and
push
ss
or
je
enter
or
jns
leave
clc
jle
adc
sub
mov
and
mov
test
rol
push
pop
fst
mov
pop
jmp
and
xor
movs
push
mov
pop
or
mov
(bad)
loopne
adc
dec
mov
arpl
out
push
in
sbb
cmp
cli
ret
inc
adc
(bad)
xor
por
repnz
jae
push
push
pop
xchg
pop
test
inc
shl
xor
mov
pop
xor
push
xchg
pop
nop
mov
jg
shl
or
inc
icebp
add
imul
or
jo
xchg
adc
jne
icebp
shl
adc
fs
int3
sbb
or
inc
in
and
cmp
aad
mov
test
mov
jge
mov
imul
adc
mov
and
jle
sbb
sbb
pop
out
or
ins
fsubr
cld
addr16
or
xchg
js
inc
in
clc
jmp
test
adc
adc
and
adc
lods
cmp
into
and
push
mov
sbb
addr16
push
fadd
lods
mov
sbb
dec
mov
cld
inc
sub
jg
adc
add
lahf
test
inc
push
xchg
lock
add
mov
sub
cmp
cmps
retf
add
adc
ror
pop
mov
aam
or
cwde
mov
inc
cmp
sbb
lea
xchg
jg
das
mov
fistp
push
sub
jns
jne
adc
sbb
popf
scas
mov
das
popa
add
mov
int3
hlt
paddusb
ret
mov
rol
cli
cmps
adc
bnd
mov
lock
inc
icebp
add
push
or
mov
inc
popa
jecxz
rcl
les
out
pusha
clc
inc
clc
scas
cmp
sbb
mov
lds
mov
add
inc
jno
adc
inc
add
or
lock
ins
dec
add
or
or
adc
sub
xlat
mov
mov
aam
out
pusha
lock
fsubr
clc
cld
jb
and
popa
add
push
add
pop
or
dec
jno
add
pop
pop
mov
cmps
fidiv
loopne
les
inc
sub
js
adc
mov
push
jge
or
sbb
inc
loop
sub
add
(bad)
fmul
jmp
dec
mov
pop
je
dec
jae
es
imul
pop
adc
bound
mov
in
test
shl
cld
pop
adc
and
test
sub
inc
add
retf
(bad)
mov
sub
add
adc
aas
in
mov
aaa
xor
iret
push
mov
jne
push
fnstcw
xchg
and
in
rol
push
xchg
ror
cmp
mov
or
or
or
sbb
add
cmp
cmp
inc
and
lods
cmp
sbb
loopne
arpl
sub
mov
cwde
ja
and
xchg
rol
int3
outs
repnz
jl
mov
adc
cli
rcr
mov
xchg
shr
sub
sub
or
fistp
cmp
push
cmp
nop
inc
inc
dec
dec
or
add
adc
in
lock
in
mov
pusha
aas
punpckldq
pop
pop
dec
lock
retf
and
sub
test
das
jle
xor
hlt
js
add
or
pop
and
xor
pop
dec
cld
or
arpl
push
outs
push
inc
cmp
xchg
call
sbb
pop
push
lds
pushf
jns
stos
xchg
sar
sbb
rcr
pop
aas
push
inc
dec
xchg
iret
add
and
dec
mov
(bad)
cwde
jge
and
or
push
aas
or
mov
add
xor
jmp
and
cs
shl
jle
or
sub
inc
push
imul
movs
push
xchg
call
fwait
loope
adc
nop
sub
jne
dec
popa
ja
cmp
sbb
push
lahf
ret
inc
mov
push
dec
xchg
inc
jne
sbb
cmps
xor
sbb
addr16
or
adc
dec
stos
inc
loopne
pusha
sub
hlt
sub
clc
adc
cs
push
arpl
mov
mov
jnp
adc
lock
test
imul
mov
or
xchg
in
sbb
add
(bad)
(bad)
je
pop
mov
or
jg
dec
adc
je
inc
scas
jne
(bad)
pop
mov
jne
mov
popa
add
pop
xchg
add
pop
ins
sub
push
imul
lock
mov
mov
dec
dec
push
add
add
int3
inc
dec
loope
dec
xor
mov
push
je
xor
mov
ss
pop
hlt
xor
iret
shr
inc
bound
aaa
movs
sbb
add
pop
ret
jge
add
fsubr
mov
sbb
iret
xor
aad
dec
add
div
jp
sub
(bad)
js
stc
or
test
imul
repz
adc
shl
mov
push
xchg
enter
addr16
(bad)
xlat
push
mov
in
call
sbb
push
cld
mov
mov
inc
ins
pop
rcl
jg
jno
in
lahf
mov
or
cld
dec
jo
push
add
pop
pop
or
push
adc
sub
and
add
call
aas
dec
adc
shl
pop
jmp
clc
test
add
xchg
movs
addr16
xlat
xchg
push
and
mov
mov
and
dec
xlat
ret
ins
mov
int3
push
mov
ret
inc
xor
pop
and
dec
je
cmps
or
or
data16
dec
or
sbb
pop
add
inc
adc
loopne
push
mov
mov
loopne
inc
xor
and
movs
test
or
pusha
add
ret
popf
jge
pushf
or
mov
xchg
or
sbb
add
stos
sbb
clc
call
fcom
or
(bad)
jmp
xor
cmp
cmp
je
mov
push
stc
int
jno
ret
jo
es
inc
sub
imul
or
push
push
imul
sbb
and
jmp
sub
or
movs
jg
inc
adc
imul
sbb
aaa
and
mov
push
hlt
mov
mov
add
push
sbb
push
fwait
test
imul
mov
mov
imul
add
dec
push
inc
adc
lock
movs
add
bound
xlat
pushf
jle
js
pop
adc
mov
addr16
pop
xchg
in
nop
sbb
jecxz
sbb
mov
sar
fisttp
fld
mov
test
fs
jp
sbb
add
inc
imul
adc
fcmovu
clc
inc
mov
fldcw
push
cs
mov
pushf
ja
adc
mov
sbb
iret
adc
or
push
loopne
xchg
fdiv
dec
dec
or
pop
aam
add
xor
cmp
test
loopne
adc
adc
xchg
xor
sti
and
enter
jmp
jmp
into
add
sbb
pushf
jmp
(bad)
adc
adc
pop
pop
ror
xchg
mov
or
inc
sub
in
xor
cld
cld
int
jle
scas
loope
adc
sbb
add
add
sbb
add
pop
xchg
sar
jg
add
shl
push
mov
in
mov
fiadd
and
enter
add
fld
(bad)
loopne
and
adc
and
js
and
sbb
inc
dec
add
and
xor
mov
pop
jecxz
int3
loope
arpl
icebp
xor
pshufw
ret
repz
call
sbb
mov
jae
mov
test
add
mov
ret
cmp
cmps
push
aam
ja
outs
movs
ins
add
loopne
loopne
jns
aam
rcr
fisttp
addr16
sub
retf
push
les
mov
loopne
mov
and
and
mov
cmp
mov
enter
add
adc
mov
or
in
mov
loopne
ja
sub
fcmovnbe
jno
rol
mov
loopne
fdiv
sbb
scas
in
sbb
adc
pop
call
popa
and
mov
jbe
push
and
mov
jmp
push
sbb
fs
rcr
add
push
adc
bound
cmp
mov
ret
lock
pop
lods
sub
call
shl
mov
mov
nop
mov
xor
cmp
push
xor
jb
add
adc
int3
in
sahf
jle
ja
mov
push
mov
mov
test
mov
or
int3
adc
fadd
jmp
jne
ret
movs
fsubr
and
cmc
jp
inc
fsubr
jns
inc
cmp
retf
add
cld
xchg
jo
pop
leave
add
mov
inc
xchg
push
jb
js
nop
xchg
pop
mov
pop
mov
imul
mov
push
cmp
test
sub
movs
jmp
cmp
out
mov
and
pop
lods
nop
inc
add
push
cwde
call
pop
mov
dec
add
test
lods
sar
call
xor
push
mov
adc
popf
xchg
test
dec
jle
shr
inc
frstor
push
add
dec
pop
xor
fiadd
add
inc
mov
xor
or
jle
sub
packssdw
add
add
push
rol
jmp
add
and
mov
cmp
int
mov
mov
xchg
mov
test
jg
es
push
ret
dec
sbb
push
cmps
add
pushf
pop
fwait
sbb
sub
mov
stc
push
mov
cmps
fs
arpl
mov
mov
out
pushf
rcl
fild
sub
loope
jo
and
sbb
and
pop
jnp
mov
outs
sub
out
add
xor
lods
iret
daa
call
jecxz
mov
or
sub
add
(bad)
arpl
and
or
aas
push
ror
es
mov
inc
dec
jmp
push
push
int3
lahf
int3
or
jmp
and
and
xor
scas
push
hlt
dec
add
inc
sub
add
add
and
pop
inc
inc
pop
add
push
stc
cmc
(bad)
or
scas
in
cmp
xor
jns
loope
pop
pusha
pop
leave
add
inc
push
ror
or
xchg
hlt
add
or
shl
sbb
dec
xor
xchg
and
jo
shr
out
ret
(bad)
aam
and
aas
lods
outs
lahf
test
add
xor
in
lahf
pop
shr
push
xor
loope
clc
mov
call
add
cwde
pop
shr
mov
inc
aad
xor
imul
pop
add
clc
icebp
sbb
adc
xchg
or
fwait
push
inc
sub
das
mov
pop
test
add
inc
push
mov
test
sub
pop
and
adc
inc
imul
bound
je
out
mov
std
in
repz
push
adc
sbb
sbb
or
pop
push
shl
nop
add
fld
gs
mov
sbb
inc
sub
xor
inc
and
mov
mov
push
or
sbb
hlt
test
test
xor
inc
sbb
adc
nop
adc
mov
out
adc
std
hlt
mov
or
shl
push
aaa
mov
xor
push
or
sbb
pop
loop
je
lods
sbb
or
call
xchg
add
or
or
mov
dec
sahf
add
sbb
pop
mov
dec
iret
mov
mov
mov
cmp
push
lods
mov
ins
jnp
jmp
dec
mov
imul
pop
fisttp
adc
xchg
cmp
lock
(bad)
les
enter
into
pop
ret
nop
cmps
add
xlat
adc
mov
scas
fwait
push
cmp
and
and
aaa
mov
pop
or
inc
mov
add
shr
sbb
addr16
out
xchg
mov
push
into
fsubr
and
pop
daa
xchg
cwde
xor
je
and
mov
aad
test
pop
push
aaa
mov
arpl
jmp
test
or
js
in
mul
jno
push
sar
fild
xchg
and
push
xchg
add
xor
loop
dec
hlt
push
add
or
dec
fisub
jmp
mov
mov
add
jne
fcmovnb
push
xchg
fsubr
push
mov
cmp
je
aaa
adc
push
lahf
or
mov
icebp
and
push
(bad)
iret
inc
test
mov
arpl
sbb
add
inc
jne
push
pop
mov
and
cmp
fmul
cmps
push
(bad)
mov
in
dec
movs
mov
mov
inc
dec
test
xlat
pushf
sar
mov
add
call
dec
addr16
sbb
and
(bad)
xor
rol
movs
lea
popf
or
hlt
adc
or
and
push
sub
add
jne
and
aas
jmp
mov
in
inc
mov
mov
and
jmp
add
sbb
inc
push
retf
push
test
test
adc
mov
push
cmp
or
lock
and
nop
sub
or
fild
and
adc
push
jmp
sub
add
jg
arpl
cwde
js
xchg
xchg
inc
push
out
mov
and
push
call
mov
iret
dec
dec
pop
sub
loope
xchg
adc
pop
cmp
shl
and
leave
xor
std
xchg
leave
or
fidiv
pusha
inc
sbb
popf
jge
add
sub
mov
sbb
ss
ja
fld1
inc
pop
jns
mov
ret
aaa
rcl
pushf
or
std
cmp
or
dec
clc
inc
add
call
loopne
hlt
lahf
mov
add
lods
sub
pop
(bad)
xchg
jno
clc
xchg
loope
mov
push
sbb
jnp
sbb
inc
mov
shl
mov
mov
icebp
add
ds
clc
sub
unpckhps
dec
cmp
shl
shl
add
jg
loope
xor
leave
cmp
test
push
retf
clc
mov
out
adc
mov
adc
and
lahf
adc
inc
xchg
pop
ror
jp
adc
add
sbb
push
in
lahf
jp
(bad)
push
or
jo
adc
jb
scas
adc
pop
in
lods
dec
dec
mov
adc
sbb
pop
sub
add
push
pop
add
adc
and
and
inc
bound
inc
push
cmp
xchg
dec
test
adc
xor
das
mov
clc
jmp
xor
sbb
adc
mov
push
es
mov
or
lea
sub
pushf
sbb
push
xor
loopne
inc
dec
or
addr16
sub
ror
inc
clc
mov
or
nop
icebp
setnp
dec
sbb
push
rol
jmp
retf
push
fsubr
push
or
add
js
(bad)
lahf
jl
dec
popa
mov
xchg
xchg
inc
aas
or
xlat
sahf
sub
(bad)
jno
mov
inc
jg
adc
jne
ins
jecxz
add
push
jno
pusha
pop
dec
call
das
scas
inc
pusha
and
in
cmps
rcl
add
push
shl
vmread
dec
pop
shr
adc
leave
idiv
push
lea
scas
ss
es
pop
mov
js
adc
xchg
push
test
pop
push
or
test
dec
cmp
popa
add
mov
xchg
in
inc
loopne
and
cmp
add
adc
or
push
pop
rol
jle
or
and
pop
push
imul
repz
imul
jmp
jo
dec
sbb
inc
add
fmul
push
fdiv
mov
rcr
lea
pop
pop
jne
or
and
dec
popf
pop
push
sub
add
adc
cld
jae
js
shr
ret
sub
add
jmp
in
and
jno
clc
mov
shl
adc
xchg
les
cmc
jo
pop
sub
pop
hlt
xor
pop
sbb
icebp
enter
cmp
inc
add
leave
jmp
sbb
push
and
mov
inc
mov
adc
movs
add
inc
stos
inc
add
adc
nop
push
or
push
test
jbe
add
lock
retf
fsubr
xor
(bad)
cmovle
xor
fwait
add
imul
cmp
fsubr
es
cwde
sub
ror
or
shl
popa
stos
and
out
jmp
sub
cdq
adc
gs
ret
leave
cld
fcmovnu
mov
xor
ret
jmp
push
cld
jb
and
pop
add
imul
add
lea
jne
lahf
pop
jns
push
dec
jmp
sbb
and
xchg
push
push
movs
or
adc
jge
sbb
lds
push
or
pop
push
jne
jmp
or
lds
mov
test
leave
and
pushf
not
and
push
movs
(bad)
nop
push
dec
enter
mov
push
retf
pop
adc
jo
and
inc
js
enter
loop
mov
dec
pop
mov
cld
mov
xchg
fsub
inc
pop
enter
lea
cmps
mov
push
repz
or
xchg
test
add
push
xchg
pop
pop
fbld
push
hlt
aas
aaa
loope
pop
dec
pushaw
sub
shl
je
or
sbb
dec
call
add
add
rcl
xor
xor
and
mov
add
into
retf
jp
add
stos
or
add
ins
cmc
aam
jmp
int3
lock
call
fld
mov
cmps
and
imul
aas
push
inc
xchg
dec
fucom
and
dec
sbb
jmp
mov
xor
inc
mov
ds
pop
icebp
ffree
sbb
sar
and
sbb
stos
jmp
clc
pusha
xchg
xor
ret
pop
mov
sbb
test
inc
add
inc
cmp
pop
mov
(bad)
push
test
test
pop
gs
mov
cld
cs
out
mov
sub
and
or
cmp
js
fadd
int
pusha
add
add
aas
fild
mov
mov
in
adc
or
test
or
adc
jns
(bad)
add
mov
in
fs
push
inc
add
inc
outs
dec
dec
popa
mov
pop
aas
loopne
test
mov
adc
mov
test
lock
sub
cld
add
push
cmps
mov
or
rol
pop
xor
adc
ins
inc
mov
(bad)
jne
call
and
add
xchg
sbb
out
dec
mov
mov
inc
mov
xor
cmps
adc
xchg
sub
xor
call
dec
adc
(bad)
clc
clc
in
jmp
push
daa
add
idiv
pop
lods
pusha
sbb
ret
sbb
icebp
cmp
jne
cmp
jb
xchg
ja
mov
add
adc
mov
push
or
hlt
mov
popa
add
inc
sub
xor
dec
add
sub
inc
add
mov
sub
add
jg
or
inc
push
pop
aas
add
mov
add
jp
ja
pop
js
out
jmp
pusha
divps
mov
jg
mov
lods
cmp
pop
push
push
mov
adc
(bad)
inc
in
lea
sar
add
nop
add
push
jne
lods
mov
lods
add
imul
cmp
daa
in
or
mov
imul
and
retf
and
xchg
and
push
dec
inc
clc
jns
add
out
rcr
or
adc
neg
and
lgdtd
adc
pop
cmp
xchg
ja
or
outs
or
es
movs
loope
stos
xor
sub
aaa
leave
rcl
dec
xor
sbb
xchg
add
sbb
sahf
pop
nop
adc
mov
test
inc
xchg
cmp
jne
mov
cs
rcl
push
adc
inc
mov
and
inc
lds
popa
paddb
clc
jge
push
jmp
pop
sbb
mov
cmp
adc
xlat
adc
add
ins
call
loop
sub
pop
popf
test
push
jl
mov
xor
call
ins
loop
fist
(bad)
dec
add
pusha
jg
add
ret
rol
fadd
pop
pop
out
inc
add
sti
jae
cmp
sbb
outs
adc
cmps
push
shr
inc
or
or
push
xor
(bad)
mov
aam
mov
fisttp
dec
sbb
add
in
mov
jb
test
sub
or
mov
xor
fst
mov
or
or
inc
jmp
popf
arpl
mov
les
jne
push
loope
fcomp
clc
or
xor
(bad)
xchg
fcmove
push
xor
fiadd
xchg
pusha
mov
mov
push
popf
adc
mov
xor
mov
push
inc
aas
nop
fimul
mov
cmp
mov
adc
out
sahf
ins
and
mov
and
add
add
lea
or
mov
out
cmp
dec
lahf
xor
inc
pusha
and
xor
push
aaa
jne
ror
adc
add
test
xchg
mov
and
mov
inc
loopne
mov
or
inc
sbb
loope
fs
add
push
cdq
add
adc
add
int
cmc
outs
popa
inc
shl
call
repz
fld
inc
cmp
or
add
jge
mov
dec
sub
adc
mov
sub
push
aam
or
sub
or
stc
inc
in
dec
loop
sub
and
sub
mov
sub
jmp
mov
xor
rcl
pop
movs
dec
add
or
mov
or
iret
ret
dec
adc
sub
xchg
mov
sub
pop
cmc
or
cmp
test
mov
inc
pop
adc
enter
leave
lock
shl
push
jbe
xchg
sbb
or
shr
ja
mov
nop
mov
inc
nop
mov
add
adc
push
cdq
test
nop
xor
ss
inc
les
shl
adc
sbb
add
adc
and
mov
or
test
pop
cmc
add
mov
call
ja
cmp
and
popf
inc
xchg
mov
xchg
sbb
adc
jmp
dec
push
sbb
in
aad
adc
pop
push
pop
mov
mov
and
sti
adc
or
jnp
mov
dec
adc
add
xor
sub
lahf
cmp
(bad)
(bad)
call
mov
or
or
mov
add
fldenv
push
loop
out
in
ret
call
ret
pop
lds
cdq
or
scas
adc
and
loopne
test
leave
clc
sbb
push
add
aaa
fwait
jo
sbb
daa
fcmovnb
mov
or
add
and
das
pop
lock
ud0
vaddps
mov
test
push
ins
mov
mov
xor
push
cmp
shr
test
cmp
test
or
inc
xchg
adc
mov
inc
mov
cmps
ss
and
dec
popa
sbb
cmp
mov
leave
pop
adc
push
and
mov
cmp
jecxz
cmp
(bad)
out
xchg
adc
or
pop
push
ja
rep
sahf
mov
mov
rep
ss
test
sahf
out
cmp
pop
or
sahf
out
adc
fidiv
fadd
mov
cmps
sar
xlat
daa
push
xor
or
sbb
xor
mov
retf
sahf
out
jnp
into
push
or
test
mov
out
or
xor
iret
rep
pushf
retf
call
fimul
ror
sti
push
out
sahf
addr16
xchg
rep
sahf
pushf
cli
push
adc
add
add
out
adc
xchg
aas
sti
aam
loop
push
xchg
sub
jg
mov
cmp
mov
lods
shl
jno
test
outs
jne
and
pop
and
or
ror
sub
or
dec
int3
data16
inc
push
adc
add
cld
sbb
dec
inc
pop
sbb
push
or
inc
jmp
or
sub
mul
or
and
dec
movs
aas
mov
loop
add
add
jns
add
or
ret
lea
pop
ror
in
or
xor
dec
add
aaa
mov
pandn
or
inc
mov
mov
mov
add
inc
xchg
aas
mov
or
pushf
adc
sbb
hlt
xor
out
lock
push
lock
or
in
sbb
jne
dec
lock
push
xor
mov
add
loope
sbb
sub
sub
push
sbb
repz
test
nop
lahf
and
inc
mov
bound
or
bound
push
es
leave
push
or
xchg
inc
loopne
inc
adc
aam
rcr
inc
fisttp
fnsave
cmps
es
sbb
jmp
data16
shr
jne
pop
fiadd
cmp
clc
enter
add
ja
cmp
push
pop
mov
aas
push
add
jge
dec
inc
es
popa
and
cmp
sbb
sub
pop
push
and
mov
xor
xchg
adc
adc
(bad)
dec
iret
inc
pushf
and
out
rcl
xor
cmp
dec
adc
pusha
push
push
or
xchg
dec
sbb
adc
in
cmp
adc
xor
rcr
clc
popa
push
push
push
adc
jno
add
sahf
shl
jmp
cmp
push
sbb
xlat
pushf
dec
dec
stos
mov
popa
or
mov
or
imul
and
gs
lahf
and
pusha
cdq
adc
ret
fisttp
push
pop
aas
jno
adc
pop
fstp
xchg
mov
jb
xchg
mov
ins
dec
sbb
and
push
sar
cmp
out
and
xchg
ds
mov
add
popa
pop
push
jle
push
jecxz
aam
mov
mov
add
test
ror
movs
mov
xor
sub
xchg
mov
and
lock
lock
ret
adc
add
loopne
or
sbb
in
loopne
sub
js
or
pop
mov
push
popf
test
sar
ret
(bad)
fadd
push
dec
test
mov
movs
push
mov
mov
dec
loopne
inc
mov
mov
push
push
std
in
jb
and
or
sbb
fsubr
push
inc
sbb
xchg
aas
jne
pop
dec
or
icebp
nop
push
cmp
adc
aam
pusha
dec
dec
cwde
les
pop
adc
pushf
fstp
adc
sbb
rcr
jg
(bad)
and
movs
xlat
add
dec
adc
fbstp
jmp
adc
push
cmp
and
cli
add
pop
or
sbb
add
sbb
xor
adc
inc
mov
jbe
lods
sub
adc
cmps
mov
and
sbb
xchg
mov
es
test
jbe
add
jno
pop
je
dec
loopne
mov
mov
inc
js
call
inc
xor
sub
and
sub
cwde
mov
sbb
push
leave
push
or
sbb
sbb
and
shl
inc
rol
add
sbb
xchg
jbe
movs
jg
and
mov
and
ret
mov
sbb
push
cmc
xlat
out
jnp
inc
push
movs
xchg
rcl
xor
test
fisubr
adc
mov
jbe
sbb
add
sbb
and
add
fisub
mov
pushf
aas
bound
add
rol
mov
inc
inc
and
test
inc
push
adc
and
adc
xor
and
xor
scas
ja
xchg
adc
and
pop
stc
pop
cmp
fbstp
adc
adc
adc
lods
daa
lea
shl
or
push
pop
js
dec
pusha
sub
dec
test
dec
or
adc
fisttp
add
dec
inc
jnp
test
icebp
cmp
loope
and
cdq
addr16
cdq
add
or
dec
xchg
dec
jl
xchg
out
jmp
mov
dec
mov
mov
add
push
test
pop
jo
mov
cmc
add
sub
mov
rol
stc
or
xor
mov
dec
add
pop
inc
in
mov
jnp
add
test
test
mov
jmp
pop
adc
add
push
aam
sahf
imul
ins
and
call
pusha
or
pusha
test
add
mov
sub
or
adc
xor
js
add
loope
inc
cmp
push
sbb
ror
xchg
jmp
adc
ins
add
jg
xchg
mov
push
fldcw
add
pop
inc
sub
jg
push
and
xchg
(bad)
aam
loopne
mov
or
xor
adc
add
sub
jb
mov
aam
jbe
adc
add
movs
lock
add
call
call
test
pop
inc
popf
dec
add
sbb
or
mov
dec
add
je
sbb
or
lea
xor
outs
inc
push
inc
out
hlt
cmc
push
xor
sub
push
xchg
mov
dec
mov
xchg
arpl
iret
loopne
arpl
jge
push
mov
or
cmp
cmps
adc
inc
sbb
jmp
sub
outs
push
inc
xchg
fcmovnu
pop
jae
mov
xor
inc
popa
add
sbb
mov
push
or
nop
adc
popf
ret
jnp
or
cmp
dec
dec
ret
sbb
add
dec
mov
sbb
jne
add
push
rol
sbb
and
or
dec
xor
ficom
out
mov
xor
mov
push
movs
icebp
jmp
jo
xor
add
mov
pop
rol
pop
lock
mov
push
sbb
inc
xchg
setg
or
inc
add
fimul
xor
je
sub
pop
pop
hlt
jne
call
adc
xchg
rcl
arpl
inc
dec
call
push
push
(bad)
dec
sbb
bound
pop
stc
add
xor
push
test
add
mov
push
xor
icebp
idiv
loope
and
and
mov
mov
adc
mov
fstp
inc
fs
cld
test
push
push
sub
inc
cmp
ret
inc
test
outs
cwde
push
sar
movs
(bad)
fild
sub
mov
hlt
inc
add
ret
dec
and
dec
mov
cmp
cld
fistp
cmps
adc
imul
xor
cmc
mov
sub
test
pop
push
aam
or
cmp
push
push
push
inc
jns
sub
adc
sub
lea
and
xchg
add
push
cs
xchg
adc
add
sub
rcl
xor
xor
jno
ins
push
mov
push
cmp
(bad)
sbb
and
mov
cmps
neg
dec
sbb
shl
and
add
out
imul
jne
add
lods
and
out
add
addr16
push
rcl
adc
mov
jmp
jmp
popf
dec
ret
jb
push
or
pop
pop
cmp
sbb
jb
movs
push
(bad)
inc
(bad)
call
jmp
outs
add
test
lea
xchg
xor
(bad)
push
or
ror
nop
outs
xchg
cli
add
addr16
xchg
push
mov
call
adc
ja
rol
mov
mov
mov
dec
jge
rcl
xchg
jmp
rcl
pop
mov
ja
(bad)
and
or
mov
enter
fs
sti
nop
cmp
add
inc
add
cmps
clc
mov
add
add
mov
arpl
sbb
push
sbb
and
test
into
mov
fsubr
test
sbb
rcl
js
push
add
inc
rcr
push
pop
and
gs
jns
mov
cmp
loopne
dec
xchg
arpl
aam
mov
sbb
pop
push
push
and
rcl
push
xchg
je
sbb
neg
movs
push
sbb
sbb
inc
and
push
imul
rol
mov
fcom
adc
adc
mov
jne
test
pusha
loope
and
sub
inc
and
(bad)
or
gs
out
mov
fadd
mov
mov
sbb
mov
mov
xchg
mov
mov
push
dec
inc
mov
or
nop
cli
rcl
cmovne
dec
in
sahf
fisttp
sub
xchg
cmc
je
pop
ret
cmp
pop
mov
push
push
std
(bad)
(bad)
mov
or
or
loopne
ret
(bad)
jo
dec
loope
int3
sub
sub
call
xchg
leave
and
dec
or
push
inc
or
sbb
aad
js
dec
in
enter
movs
dec
punpckhwd
cmp
or
fs
pop
(bad)
fcmovne
jne
add
or
add
cmp
mov
push
sbb
nop
fdivp
push
call
das
jl
sub
pop
movs
daa
cmp
sbb
inc
mov
shr
and
dec
add
test
aas
sub
jmp
mov
add
ins
add
pop
out
and
xor
pusha
cdq
or
dec
inc
and
adc
mov
std
add
jnp
and
xor
pusha
mov
cli
or
data16
inc
stos
cwde
(bad)
fwait
out
add
xor
movs
xor
jae
push
mov
shl
jmp
adc
xor
rol
cmp
sub
and
and
cwde
inc
call
inc
sub
push
mov
and
push
aam
pop
mov
mov
adc
jmp
loopne
add
and
dec
sbb
or
and
inc
xor
add
inc
xor
or
sahf
pushf
and
cmp
(bad)
in
(bad)
pop
or
dec
lock
hlt
sub
ror
aad
add
nop
pop
mov
enter
hlt
(bad)
mov
sbb
fdivr
fsub
in
inc
push
in
fsub
dec
push
sbb
in
push
sbb
int3
rcr
pop
xchg
inc
aam
mov
xor
enter
sbb
aam
xor
rcl
or
mov
daa
dec
sahf
mov
mov
xor
inc
cmps
pop
daa
dec
mov
(bad)
mov
mov
sbb
dec
jp
inc
jg
sub
daa
xor
inc
fldenv
pushf
(bad)
adc
(bad)
xchg
sbb
xor
adc
gs
aaa
pop
inc
fadd
rcl
sub
jae
cmp
add
push
shl
sub
or
cwde
pushf
mov
and
dec
adc
adc
and
mov
lea
xor
mov
out
outs
or
sbb
sbb
add
add
add
movs
pop
add
add
arpl
sbb
sbb
cmp
sub
sbb
push
(bad)
test
push
inc
cmps
push
push
pop
or
pop
dec
or
jb
jmp
jb
sbb
test
and
ins
stos
je
sbb
js
rcr
xor
xor
inc
rcr
and
sar
or
test
sub
(bad)
jns
addr16
mov
inc
pop
cli
ins
sahf
int
cs
jmp
xor
mov
xor
xor
adc
jg
adc
push
lea
je
mov
jo
push
mov
call
push
xor
jae
stos
gs
sbb
fcom
jne
loopne
ret
push
push
sar
jne
je
das
es
pop
mov
mov
mov
fs
push
push
dec
es
push
sbb
movs
aaa
add
jge
add
popa
ins
in
or
adc
xor
jmp
or
push
push
sbb
lahf
stos
xchg
and
pop
mov
sbb
sbb
add
sbb
or
inc
mov
and
mov
add
and
or
sbb
or
lock
nop
shl
stos
and
call
add
push
les
jg
lahf
bound
inc
es
shl
add
sbb
jne
mov
xor
push
or
and
add
inc
cmp
pop
and
retf
and
popa
push
or
xchg
or
add
fadd
push
push
sar
and
mov
jg
mov
sbb
pop
adc
fist
enter
aas
in
xchg
call
adc
pop
dec
push
xchg
xor
xor
and
xchg
xor
sub
pop
xchg
push
sub
and
xchg
hlt
hlt
clc
mov
sub
xchg
aad
pusha
loopne
cmp
mov
add
or
add
adc
das
push
pop
adc
(bad)
pop
push
inc
inc
push
add
popa
xchg
lods
and
js
push
add
sar
and
inc
fimul
cmp
rol
fsubr
sbb
sar
inc
cs
xchg
inc
cs
sbb
cld
xchg
mov
adc
sbb
add
xlat
and
add
push
leave
aad
repz
add
add
retf
inc
loope
(bad)
xchg
adc
adc
bound
mov
pop
lahf
xor
pop
push
mov
xchg
xchg
pop
and
adc
cmp
dec
push
and
sbb
or
sbb
sub
inc
sbb
inc
scas
sub
and
mov
inc
cs
pop
xor
cs
push
sbb
jnp
push
and
mov
scas
xchg
sbb
push
ins
push
mov
jb
sbb
and
fsubr
mov
xor
add
aas
loopne
enter
push
in
and
dec
inc
jae
add
and
pushf
pusha
call
xchg
inc
fistp
xchg
and
or
adc
ins
xchg
add
xor
pop
push
pop
push
xor
jl
sub
or
or
xor
push
pop
mov
into
mov
push
jmp
(bad)
cmp
cld
jne
pop
(bad)
ins
nop
cwde
add
add
sub
inc
inc
pop
add
adc
(bad)
push
dec
sbb
or
jl
stc
push
and
sbb
pop
jne
dec
or
cmp
leave
cmp
mov
mov
popa
shl
and
pop
fadd
push
(bad)
sbb
dec
or
or
fisubr
add
test
repnz
add
loopne
sbb
popf
mov
test
pop
sub
lock
dec
inc
sub
inc
ror
jmp
or
push
xor
mov
test
dec
pusha
or
ror
(bad)
adc
mov
sub
jecxz
pextrw
pop
(bad)
or
stc
lahf
rcl
shl
and
dec
popa
inc
or
push
add
sub
mov
jnp
nop
jp
inc
cmp
or
repz
pop
ins
or
enter
sub
add
mov
inc
xlat
cmp
mov
and
xor
call
outs
and
ret
xor
add
xchg
dec
ret
mov
xchg
std
xchg
xor
es
adc
cmp
imul
mov
dec
repnz
mov
jecxz
scas
add
inc
add
add
add
movs
add
xchg
mov
leave
movaps
pop
dec
inc
adc
jo
adc
push
adc
jl
adc
mov
inc
test
push
das
test
lods
je
es
icebp
retf
test
rcl
adc
in
push
(bad)
dec
popa
pusha
mov
jl
cmp
add
inc
mov
cli
ss
aas
sbb
cdq
int3
push
sti
test
nop
push
neg
or
mov
pushf
movs
scas
xchg
sbb
loopne
inc
jg
xor
ret
dec
nop
sub
add
sub
icebp
jle
int
push
cmp
sti
pop
(bad)
xchg
mov
pushf
dec
and
movs
popa
ins
push
jmp
inc
cld
gs
fadd
jns
sbb
mov
pusha
push
mov
ret
ret
pop
fdivr
movlps
mov
inc
jo
mov
rcr
rcl
xchg
push
in
dec
pop
push
dec
and
fadd
xchg
es
in
jl
popa
fdiv
mov
sar
jmp
pop
adc
hlt
sbb
bound
int3
cmp
cmp
popa
add
les
movs
xor
sub
mov
sar
push
cs
pop
inc
imul
je
clc
add
push
xchg
push
test
add
cwde
inc
mov
fcomp
xor
mov
or
lock
mov
push
imul
inc
add
js
lock
pop
and
mov
nop
test
(bad)
inc
mov
push
hlt
jecxz
call
adc
test
or
gs
adc
jg
jl
popa
add
retf
pop
add
xchg
inc
call
add
inc
dec
sbb
add
xor
or
mov
inc
mov
push
in
pop
sar
lock
or
shl
mov
rcr
push
add
xor
jmp
inc
or
or
std
sub
je
aas
xor
out
mov
test
add
inc
jp
pop
aaa
jmp
aaa
inc
ja
sub
adc
fwait
inc
js
adc
loope
or
and
and
xor
test
pop
adc
xor
ret
loop
leave
xor
pop
call
mov
xchg
cmp
mov
in
les
add
inc
dec
inc
pop
jo
lea
cmp
fisub
push
adc
push
les
push
push
pop
rol
add
adc
pop
xchg
push
clc
xchg
lock
xchg
mov
xor
xchg
and
sti
or
sbb
inc
das
jno
hlt
pop
push
add
popa
je
sar
rcl
and
in
ss
mov
jb
lahf
inc
movs
dec
cmp
add
sub
sub
mov
mov
and
add
add
jmp
and
or
lods
sbb
test
cwde
cli
fisttp
add
sbb
adc
in
dec
add
cdq
fadd
push
ror
dec
in
dec
or
push
cmp
xlat
add
fstp
mov
cwde
sub
mov
jg
(bad)
xor
jne
jbe
xchg
add
and
mov
(bad)
cdq
mov
xchg
or
pop
xor
cmp
cdq
push
es
cmp
cli
and
jmp
inc
sub
sbb
movs
cdq
ins
pushf
pop
cmc
push
test
and
mov
xchg
jl
mov
daa
pop
pop
ja
or
mov
sbb
add
push
sbb
pop
mov
inc
out
mov
mov
adc
pop
xor
je
repz
es
cmp
int
and
cmp
sbb
inc
inc
pop
xor
jmp
and
jnp
aaa
push
pop
mov
loopne
sub
rcl
inc
imul
fwait
cmp
cmps
enter
or
dec
lahf
xor
pop
adc
nop
cmc
lahf
push
mov
mov
mov
loope
adc
add
or
outs
mov
jl
xor
xchg
out
js
arpl
pop
ficom
call
or
pop
mov
add
dec
mov
cs
mov
cli
inc
jmp
mov
rol
or
mov
cwde
sar
add
mov
jmp
and
mov
sub
(bad)
push
shl
dec
push
dec
mov
sbb
cwde
inc
push
inc
or
add
dec
jno
and
xor
cmp
inc
nop
xor
add
rol
or
movs
mov
mov
add
adc
js
mov
and
loope
sub
wbinvd
popa
cli
or
fild
add
jmp
xor
out
xchg
pop
sbb
mov
hlt
or
sub
inc
enter
or
add
jmp
leave
adc
jl
cwde
enter
enter
jle
icebp
test
add
sub
mov
jmp
test
jb
gs
jns
add
or
jp
icebp
cmp
pop
xchg
retf
and
and
pop
or
push
and
jae
dec
hlt
push
fadd
daa
sub
pop
dec
aas
rol
out
dec
sbb
pop
inc
je
jg
pusha
add
mov
and
retf
js
add
and
push
add
sbb
add
int
adc
pop
cdq
cmp
cdq
dec
and
jbe
loopne
cmp
add
add
loope
dec
inc
or
pusha
xchg
fild
dec
add
loope
in
jb
and
and
inc
shr
dec
add
inc
loope
dec
fisttp
push
sbb
loope
add
dec
mov
add
add
add
dec
add
in
add
dec
xor
mov
loope
dec
adc
loope
and
lock
popf
loopne
adc
dec
or
lock
rcr
or
push
je
xor
inc
pusha
pop
lds
stc
push
jmp
inc
adc
push
ret
arpl
dec
pop
(bad)
fcom
imul
sbb
inc
or
or
lock
rcl
sub
pushf
dec
or
xor
rcl
cmp
mov
mov
mov
push
mov
add
inc
push
mov
add
pop
mov
cmc
sub
pop
add
inc
std
adc
mov
or
cmp
shr
dec
or
movs
jne
xchg
push
fs
sbb
mov
inc
mov
push
inc
push
inc
sbb
arpl
sub
or
sbb
dec
ret
rcl
in
cld
jne
dec
inc
scas
cmp
push
nop
pop
daa
sub
mov
in
lods
and
aas
mov
add
push
add
xchg
cwde
push
cwde
bound
cmc
adc
fidivr
jo
adc
mov
nop
or
mov
push
jno
ret
inc
add
adc
adc
xor
sbb
popa
in
fsubr
mov
stos
fwait
or
aas
sti
lahf
xchg
outs
dec
mov
sub
mov
adc
popa
call
push
or
sar
xchg
mov
jg
adc
enter
jns
or
call
pop
ret
aas
fcomp
mov
push
sub
mov
or
or
cld
shl
cmp
mov
jmp
push
xor
jp
addr16
pusha
adc
inc
cmp
xchg
jg
inc
test
add
cmp
xchg
mov
sub
add
fisub
call
les
add
ror
call
jle
push
fiadd
push
pop
pusha
push
sub
fcomp
add
mov
inc
pop
push
jb
dec
push
add
or
xor
jae
pop
add
stc
ins
inc
nop
call
push
jge
test
xlat
pop
sbb
cwde
mov
stos
popf
jecxz
push
daa
xchg
lods
ret
xchg
inc
outs
dec
xor
js
mov
or
xor
arpl
mov
mov
inc
call
fisttp
push
push
ins
dec
dec
inc
inc
or
and
jne
ins
push
add
adc
xchg
popa
sbb
dec
aam
(bad)
fiadd
push
cld
mov
retf
test
sub
inc
test
and
adc
and
xchg
mov
jl
jmp
sub
fbld
add
inc
cli
adc
and
push
mov
arpl
sub
pop
mov
ret
and
adc
mov
or
test
and
mov
xchg
call
push
mov
es
add
mov
mov
or
and
dec
cs
mov
inc
movs
sbb
or
test
retf
aaa
sbb
sbb
ficomp
or
in
js
adc
xor
fist
inc
pop
push
jne
pop
dec
fisttp
push
test
xor
sbb
dec
movs
push
adc
and
xor
fistp
pop
shr
xchg
pop
sbb
ror
std
sbb
sbb
xchg
retf
movs
and
sub
inc
sub
pop
and
push
adc
add
cmp
(bad)
and
cdq
shr
sub
sbb
add
dec
movs
mov
adc
lahf
add
repz
sbb
or
rcl
jmp
mov
sbb
lods
bound
jp
mov
or
push
bound
daa
add
pop
sub
add
push
fs
gs
and
adc
or
inc
jg
or
inc
xor
or
sub
push
jo
dec
inc
loop
mov
xor
adc
clc
inc
je
fild
mov
add
pop
pushf
(bad)
sbb
sbb
adc
pop
ret
jg
scas
js
inc
add
mov
bound
push
inc
cmp
xor
add
bound
adc
mov
in
and
mov
pop
mov
or
js
scas
or
lahf
push
les
inc
add
inc
pop
clc
inc
movs
xor
scas
or
ds
clc
sub
xchg
adc
add
call
adc
retf
mov
je
add
pushf
pop
pop
add
lds
mul
pop
loop
xor
jg
pop
add
es
xchg
fdivr
sub
fsubr
push
pushw
jno
push
inc
mov
stc
fs
scas
fwait
test
dec
xchg
or
scas
push
fsubr
add
movs
es
pcmpgtd
push
xor
outs
adc
and
cmps
xchg
je
mov
clc
pop
rol
ja
inc
xchg
movs
mov
fist
mov
pop
in
mov
jno
nop
or
push
(bad)
and
cmp
push
and
sub
push
nop
pop
xchg
cmp
mov
test
js
pushf
inc
pop
and
inc
xor
cmps
lods
or
sbb
pushf
pusha
cli
or
xor
pop
in
shl
add
aam
or
xchg
inc
loopne
push
jnp
pop
pop
test
dec
xchg
fcomp
loope
xor
adc
or
mov
rcr
or
xchg
ret
and
sub
add
adc
push
jb
and
xor
or
(bad)
or
and
mov
adc
enter
xchg
rcr
int3
loope
lock
push
dec
enter
and
(bad)
or
hlt
cwde
daa
add
in
cmp
mov
xor
mov
adc
fs
rcr
mov
dec
cmp
and
cs
loope
jle
inc
adc
std
add
sbb
pop
jge
sbb
movs
cli
rol
aam
cdq
cmp
push
adc
pop
mov
les
and
add
sub
or
mov
les
pop
ret
fistp
dec
cwde
sub
call
push
or
and
push
mov
add
sub
pop
retf
data16
js
je
xchg
cld
retf
rol
cld
icebp
rol
mov
xor
add
fidivr
pop
adc
add
cmp
cwde
pop
or
dec
enter
xchg
cmp
add
aam
daa
xor
fcmovu
clc
add
nop
inc
push
xor
sbb
clc
(bad)
dec
(bad)
aaa
adc
or
fdiv
jo
sbb
adc
and
pusha
push
hlt
pusha
sbb
add
xchg
adc
pop
ror
mov
lock
stos
or
inc
or
pop
outs
dec
and
test
push
add
imul
test
push
or
imul
mov
(bad)
cmp
mov
es
pop
add
dec
or
mov
popf
rcr
mov
test
pusha
or
rol
push
cmp
paddd
and
cmps
adc
sahf
and
xchg
fldenv
mov
push
rcl
or
adc
adc
dec
sub
popa
jecxz
and
cmp
xchg
add
inc
test
movs
sbb
call
push
scas
aam
or
popf
test
xchg
pop
add
lahf
xor
jb
jb
add
bound
mov
repz
dec
jo
fcomp
mov
inc
inc
aas
and
cmps
nop
test
and
popa
aas
mov
push
xchg
cmp
mov
loope
inc
sub
push
jg
lods
pop
xchg
dec
adc
pop
or
sar
pop
mov
pop
enter
lahf
jbe
jo
cs
inc
adc
test
das
and
mov
jbe
cmp
jo
sbb
push
dec
lahf
mov
es
loop
or
xchg
pop
push
push
imul
lahf
lahf
jmp
(bad)
nop
test
mov
mov
inc
dec
push
dec
inc
fisttp
sub
mov
xor
push
cmp
push
add
pop
lahf
movs
mov
push
cwde
aad
je
pop
pop
push
int3
inc
mov
test
movs
data16
test
icebp
sbb
ret
pop
into
mov
js
int
nop
mov
xor
sahf
or
add
mov
mov
mov
jo
xor
ret
or
add
mov
sub
jg
pop
ins
pusha
outs
mov
add
and
dec
xchg
add
and
repnz
lods
adc
daa
lahf
aaa
icebp
sbb
mov
adc
aas
add
ficom
lahf
and
or
hlt
movs
mov
dec
add
push
aas
or
push
mov
mov
xchg
or
stos
pop
leave
add
aas
add
add
mov
aas
mov
or
push
aas
sbb
mov
add
loopne
stos
lahf
fistp
sbb
ins
or
clc
sbb
or
sub
push
dec
or
call
stos
push
or
pop
rol
inc
jg
inc
add
sbb
push
loopne
sub
dec
xor
fbld
pop
(bad)
aad
push
gs
add
movs
mov
test
fistp
call
jl
sbb
lahf
aas
lock
mov
pop
add
push
ret
int3
sti
add
(bad)
inc
mov
xchg
loope
sub
xor
daa
test
ss
xchg
lahf
add
add
and
push
or
push
mov
and
mov
push
ret
add
fisttp
fild
mov
xor
hlt
mov
aam
les
bound
and
adc
pop
leave
sahf
sbb
int3
ins
add
mov
pusha
inc
adc
or
mov
or
or
cmp
xchg
(bad)
push
stos
sbb
mov
add
sar
mov
js
fisttp
test
jno
fbld
mov
fisttp
adc
mov
mov
aas
sbb
pop
stc
jl
mov
mov
mov
push
jmp
or
(bad)
or
sbb
push
cld
xchg
mov
jmp
push
js
shl
add
add
aam
xor
mov
adc
imul
sbb
adc
movs
mov
addr16
pop
xor
adc
sbb
xchg
xor
lock
pop
sbb
pusha
test
adc
and
adc
mov
xchg
or
test
rcl
loope
xor
and
ror
jmp
inc
mov
dec
das
or
sbb
loopne
add
fucomip
pop
mov
nop
or
mov
jecxz
and
jg
xchg
or
cmc
adc
sbb
hlt
lea
pusha
jo
aas
push
loope
ja
add
mov
es
cmps
leave
shl
push
jecxz
and
mov
lahf
sbb
sbb
rcr
call
sub
sub
aas
and
mov
xchg
cmp
add
sbb
fwait
add
gs
dec
and
fld
pop
pushf
mov
call
xor
pop
iret
clc
or
js
inc
sbb
daa
loopne
pop
add
rol
xor
mov
sbb
xor
cwde
inc
and
aaa
push
jmp
cmp
and
nop
add
pop
ds
xchg
scas
sbb
ret
mov
cmp
imul
adc
ret
dec
pop
add
pop
xor
push
inc
lods
add
push
or
mov
cwde
or
lods
pop
fist
or
push
push
pop
jmp
shr
mov
rcr
push
mov
and
add
inc
and
das
jecxz
mov
xor
inc
(bad)
adc
out
jmp
rcl
add
popf
dec
pop
movs
dec
push
cwde
into
in
sbb
adc
sub
lods
add
aaa
xchg
js
imul
and
test
and
fisttp
dec
sub
jge
movs
push
mov
int3
xor
(bad)
cdq
jg
(bad)
adc
enter
sub
mov
mov
lea
popa
(bad)
and
pop
mov
jmp
push
cmp
jmp
push
sbb
push
push
cs
stc
and
sbb
aas
dec
mov
adc
lahf
pop
sub
xor
cmp
inc
data16
mov
jg
jmp
push
xor
sar
je
sbb
das
mov
mov
push
nop
ret
and
adc
or
adc
data16
test
dec
jo
mov
push
cld
dec
add
leave
js
enter
dec
cmp
mov
and
dec
std
add
sbb
sub
scas
add
jmp
jmp
daa
pusha
movs
xchg
and
sbb
test
or
(bad)
mov
retf
pop
or
push
or
adc
adc
in
xchg
sahf
and
ja
inc
jo
dec
or
mov
loopne
shr
(bad)
sahf
xor
inc
les
or
cdq
push
inc
rcr
sub
add
arpl
movs
add
ds
(bad)
adc
mov
ror
add
dec
add
jne
xor
mov
fisttp
add
adc
adc
jne
xor
movs
or
and
sbb
jmp
sub
ror
push
pop
lea
sub
test
mov
add
adc
jg
jmp
cmp
cmps
in
add
nop
sub
(bad)
lock
push
dec
lods
and
or
loope
jae
xor
sbb
jmp
xchg
and
xor
jg
jl
pop
mov
push
xchg
add
or
daa
pop
ins
pop
enter
sbb
mov
xor
fmul
inc
imul
xor
adc
aad
dec
adc
or
or
jne
aas
mov
mov
pop
in
lds
gs
add
add
in
or
aad
and
mov
aaa
inc
and
pusha
cwd
sbb
dec
add
adc
mov
dec
push
add
fiadd
ja
push
test
test
jmp
test
cdq
cmp
sar
(bad)
xor
(bad)
mov
add
jne
jmp
mov
test
push
add
in
dec
xchg
sti
test
add
(bad)
jae
pop
xchg
xchg
mov
xchg
add
or
jmp
and
or
(bad)
test
lea
add
xchg
and
or
and
jl
dec
lods
adc
pop
push
xchg
jle
mov
push
cmp
mov
adc
sbb
jae
adc
sub
lea
jo
cmp
or
mov
(bad)
retf
(bad)
push
jl
push
jae
xchg
adc
add
test
lahf
mov
and
aas
test
and
movs
fdivr
rol
sub
add
int3
inc
imul
adc
call
pop
movs
cli
scas
and
loope
xchg
jnp
jg
mov
jnp
or
or
push
sub
jmp
jns
nop
movs
es
adc
xor
jae
jmp
mov
ret
call
test
shl
cmps
mov
xor
xchg
test
push
mov
add
inc
adc
push
das
cs
shl
in
and
mov
push
lea
xor
ss
jecxz
ins
lock
pop
stos
shl
fld
aas
inc
jo
dec
mov
add
clc
out
lock
push
clc
addr16
xchg
je
xchg
fldcw
xor
xchg
push
lock
pop
or
sbb
and
mov
jge
xchg
es
adc
data16
inc
inc
add
add
xor
inc
(bad)
adc
loopne
cmps
inc
cld
jmp
xchg
inc
pusha
daa
inc
sub
mov
clc
pop
call
pop
add
push
test
jno
cld
mov
adc
movs
mov
cmp
xchg
push
mov
add
bnd
jecxz
cmp
mov
fist
and
xchg
test
inc
adc
(bad)
in
add
dec
xor
lds
ins
inc
imul
dec
sub
push
mov
add
popa
loop
adc
aam
sub
lahf
adc
mov
out
or
and
mov
lahf
call
test
jge
imul
pusha
sub
sbb
and
ins
fsubr
sub
rol
adc
push
or
xor
sub
sbb
test
push
loop
sub
mov
xchg
sbb
push
jge
adc
loope
jg
cld
aam
movs
sbb
call
xchg
and
xchg
mov
in
pop
ret
pop
cmp
inc
adc
adc
or
ret
jg
pop
sbb
cwde
inc
or
movs
mov
cmp
jno
push
adc
fmul
jmp
mov
sbb
inc
mov
dec
inc
pusha
mov
rol
arpl
out
call
push
sbb
int
jg
pop
ret
cmp
inc
add
loop
adc
sbb
push
or
cwde
cdq
in
je
inc
cmc
push
sub
pop
or
xor
mov
push
mov
pop
or
inc
push
fs
add
mov
sbb
add
shr
movs
xchg
and
jmp
and
pop
sub
test
mov
push
or
mov
inc
sbb
fwait
or
add
jecxz
stos
push
xchg
dec
clc
sbb
and
mov
cwde
cmp
or
cmps
leave
jne
push
sub
loopne
xchg
mov
rcl
push
and
mov
jmp
adc
adc
enter
adc
and
push
imul
cdq
mov
cwde
aas
test
dec
lods
or
sete
sub
add
retf
sahf
stos
push
js
mov
pop
adc
push
push
xchg
cli
or
inc
in
jno
xchg
push
(bad)
(bad)
daa
and
pop
or
push
sbb
mov
adc
inc
sub
repnz
xor
and
pop
pop
inc
inc
and
and
inc
cmp
or
pop
xchg
push
or
push
and
xchg
mov
test
push
add
push
pop
or
and
scas
fistp
mov
pop
enter
jg
push
call
sbb
test
jae
mov
call
call
pop
pushf
xor
jo
or
mov
jo
or
jmp
sbb
pop
sbb
pop
push
adc
outs
sbb
pop
dec
inc
cmp
mov
adc
and
or
jnp
and
mov
sbb
xor
inc
lds
mov
sub
cwde
mov
setl
pop
mov
pop
jg
test
rol
lods
mov
xor
mov
imul
aad
xchg
sbb
imul
nop
pop
cmps
xchg
shl
in
gs
ins
push
aas
lahf
call
xor
enter
pushf
add
push
mov
(bad)
les
jmp
and
cmp
aas
sbb
push
xchg
lahf
dec
and
jo
mov
sbb
mov
movs
bound
add
add
sbb
pop
lahf
mov
add
ror
inc
movs
fistp
add
push
ja
push
inc
mov
push
push
and
addr16
scas
xor
xchg
loope
in
aam
sub
xchg
add
rol
add
sbb
mov
mov
es
cmp
cwde
inc
and
leave
sbb
jae
es
sbb
inc
jle
sbb
sbb
add
push
leave
pop
les
add
sbb
sub
add
lahf
xor
rol
lds
and
adc
add
add
mov
pop
pop
test
and
add
mov
enter
fisub
or
adc
inc
sub
inc
int3
ins
aas
inc
add
add
push
or
mov
cmp
nop
add
stos
outs
push
and
adc
pop
or
or
fst
lods
xchg
pop
cmp
cmp
sub
adc
(bad)
fbld
aaa
mov
push
pop
dec
cld
adc
add
mov
and
popf
mov
add
movs
or
lahf
ret
nop
and
and
test
inc
add
pop
jg
inc
xchg
jno
das
and
jg
inc
jo
lahf
iret
mov
xchg
cmp
pop
push
sub
xor
adc
hlt
rcl
(bad)
adc
aas
call
or
add
test
jb
daa
sbb
cmp
sub
sbb
popa
and
sub
inc
cmp
scas
ret
pushf
add
enter
(bad)
(bad)
cmc
mov
and
loop
sar
fisttp
dec
ret
cmp
push
imul
sbb
inc
enter
pop
movs
cmp
xchg
aam
cmp
xor
das
sub
inc
cmps
or
leave
(bad)
mov
rcr
adc
jno
lea
das
(bad)
push
lahf
scas
dec
rol
cld
sub
push
mov
stos
inc
loope
jmp
pushf
mov
sub
fist
cmp
pop
pop
int3
out
push
sub
or
jbe
pop
push
inc
pop
push
and
outs
pop
ror
adc
inc
sub
mov
add
push
in
loope
imul
xchg
xor
jmp
cmp
or
mov
shl
pop
stos
mov
shl
stos
dec
mov
mov
ja
jmp
call
or
and
sub
push
aaa
pop
sar
pop
xor
dec
push
mov
cmp
push
dec
inc
stos
xor
xchg
adc
add
or
aas
outs
sub
scas
inc
cmp
pop
in
pop
pop
lahf
shl
add
mov
push
sbb
push
add
mov
xlat
fldcw
rcr
aas
test
int3
push
and
or
je
jmp
and
or
fsubr
fist
dec
sub
lock
and
mov
and
pop
or
cmps
add
movs
and
adc
pop
ret
jge
mov
add
and
or
and
ins
add
mov
enter
mov
adc
or
rcr
sbb
inc
sbb
lods
stc
pop
adc
inc
sub
fsubr
jl
add
xor
sbb
ret
jno
push
pop
inc
adc
xchg
push
test
add
lahf
stc
push
push
xchg
or
and
test
das
imul
mov
imul
fdiv
xor
clc
sub
adc
push
push
outs
and
jne
shl
jp
call
mov
test
leave
or
jp
mov
dec
sub
fwait
pop
or
(bad)
cmc
jns
pop
test
or
adc
(bad)
ins
ja
enter
lods
mov
pop
add
xchg
hlt
or
cwde
test
and
add
add
sbb
pop
sub
push
lock
add
imul
adc
dec
mov
xchg
push
adc
lock
mov
cmp
adc
imul
jne
shl
inc
adc
add
popa
mov
(bad)
add
imul
jmp
push
inc
pop
fiadd
xchg
je
add
dec
pop
pop
nop
aam
adc
enter
fsub
test
add
adc
push
fs
and
(bad)
cwde
loopne
add
pop
inc
xor
jg
shr
jl
loopne
les
mov
add
or
mov
mov
pop
in
adc
shl
int
and
xchg
mov
inc
and
iret
or
in
xchg
ret
or
xchg
in
cmp
in
push
out
retf
add
pop
lods
sbb
jne
xor
hlt
dec
std
jmp
xlat
add
rol
add
xchg
push
add
mov
sbb
xor
adc
or
rol
(bad)
and
in
jae
call
and
icebp
xchg
lds
cmp
dec
xor
sbb
or
dec
push
gs
ret
adc
arpl
lds
sbb
dec
mov
jge
adc
sub
cmp
push
test
lahf
adc
ins
jecxz
sar
ret
jmp
ret
add
in
dec
add
add
xor
add
sbb
and
jge
jp
lock
mov
loopne
in
ret
js
jb
inc
dec
xchg
iret
adc
xchg
ja
push
and
add
mov
or
jmp
and
push
(bad)
push
and
xchg
and
and
movs
xlat
inc
jnp
inc
in
in
sbb
cs
nop
dec
sub
adc
adc
inc
inc
cmc
popa
add
mov
(bad)
daa
lahf
xchg
add
push
loopne
or
jmp
add
mov
mov
dec
pusha
and
sbb
add
pusha
pop
ret
or
ret
fdivr
sbb
adc
fadd
lea
(bad)
test
jle
push
mov
sbb
or
add
or
jbe
sub
aas
adc
sbb
fsub
and
and
(bad)
cmps
mov
rol
inc
mov
jno
jmp
xor
scas
lds
fdivr
fmul
pop
push
sbb
push
or
inc
int
mov
imul
fcomp
or
scas
pop
jb
mov
add
sti
aas
mov
jae
dec
push
add
ror
and
jno
add
cmps
push
je
hlt
mov
fwait
adc
ins
and
cmp
push
add
adc
inc
in
ja
fild
and
jo
add
pop
mov
inc
jecxz
ins
cld
aas
or
test
inc
js
or
jae
cmp
and
cs
inc
or
shl
outs
pop
or
jbe
adc
loop
pushf
femms
xchg
in
adc
sbb
retf
dec
sbb
shl
adc
adc
or
test
xor
bound
adc
xor
push
push
inc
mov
cli
adc
xor
pop
aam
pop
jmp
push
popa
add
or
add
jo
nop
pop
cmovs
fdiv
(bad)
pop
push
adc
mov
mov
pop
lock
add
add
mov
mov
rol
inc
rol
ss
es
add
push
sub
inc
pop
lods
into
test
add
sar
jne
mov
cld
adc
call
or
test
dec
stos
cmp
aas
dec
cmps
inc
or
lock
and
sbb
push
or
retf
push
adc
and
or
jle
add
adc
mov
pop
add
sub
sbb
stos
fwait
ins
sub
xchg
sar
lea
xor
mov
mov
xchg
add
fidivr
add
nop
loopne
cmc
sub
loope
or
cmps
rol
adc
sbb
fild
je
dec
sbb
push
and
jbe
xchg
es
add
xor
rcl
jge
add
jno
push
pop
les
dec
sbb
cld
xor
cld
test
sbb
dec
popa
fs
xchg
cdq
call
pushf
pushf
ins
or
sub
adc
add
or
pop
aam
jle
or
sub
push
add
rol
and
dec
inc
push
or
add
mov
adc
inc
dec
push
sbb
cmp
xor
sbb
cmp
and
pop
or
icebp
or
adc
add
inc
lods
adc
test
adc
xor
adc
or
test
ret
xor
xor
mov
adc
dec
pop
loope
add
mov
and
push
std
add
(bad)
pop
sbb
ficom
or
aam
aam
and
or
lahf
ror
ins
and
sti
sub
das
loope
add
push
shr
xor
xchg
mov
add
fmul
mov
sbb
stos
ror
jge
or
(bad)
invd
in
out
add
lea
add
cmp
lock
mov
hlt
push
in
sub
inc
adc
rol
add
pop
sbb
mov
and
dec
adc
sub
jp
dec
in
dec
in
cmps
add
jl
and
add
loopne
add
adc
add
xlat
ins
fdiv
rol
call
fnsave
cmp
mov
ret
push
int3
jmp
add
pop
add
jg
sbb
fs
xchg
and
adc
imul
inc
adc
popa
ret
or
pusha
push
pop
mov
mov
push
sub
ret
mov
shr
fnsave
adc
push
fucomp
lea
es
mov
jno
das
add
adc
test
rcl
pop
jno
movs
cmp
jge
and
push
push
xchg
sbb
mov
in
cwde
pop
popa
loop
mov
push
sbb
add
or
push
jp
adc
xchg
xor
pop
(bad)
fbld
lock
and
arpl
shr
inc
sbb
popa
mov
cmp
jne
outs
pop
sbb
ret
in
inc
or
lds
fadd
iret
mov
push
das
add
or
or
inc
unpcklps
or
shl
dec
pop
inc
sbb
push
xchg
in
and
mov
jecxz
cmp
push
add
add
lods
push
mov
push
aam
or
in
and
push
enter
shl
dec
sar
test
enter
mov
enter
or
ins
mov
adc
mov
adc
rol
loopne
fbld
add
das
jnp
mov
gs
popf
test
add
xchg
sub
jo
or
xor
call
xchg
mov
jo
dec
leave
or
xor
push
adc
sbb
mov
outs
add
mov
loopne
loop
jecxz
jo
daa
jne
jmp
test
cld
(bad)
aad
jge
sbb
je
adc
loopne
std
je
pop
je
and
and
jmp
fs
or
mul
sbb
cld
pop
add
das
test
xchg
sbb
cmp
dec
dec
inc
jecxz
clc
movs
scas
mov
adc
xor
add
loope
cmp
cmps
in
inc
and
ins
add
cmc
jae
clc
or
shl
(bad)
imul
adc
cmp
add
jno
pop
xchg
and
das
jl
sbb
xchg
iret
push
xor
jmp
add
fs
jge
fdivr
lock
adc
fsub
jb
test
rol
(bad)
or
pop
enter
dec
inc
aas
out
ins
mov
inc
aas
inc
ja
mov
inc
aas
inc
movs
sbb
aas
vpcmpgtb
daa
sbb
les
mov
add
or
cwde
sub
mov
adc
adc
dec
sbb
pusha
sub
call
add
mov
out
add
dec
call
fcom
add
mov
test
mov
stos
fidiv
xchg
xor
lock
lahf
rol
aad
inc
adc
push
ss
pop
dec
dec
enter
loopne
add
mov
shr
(bad)
(bad)
fsubr
enter
movs
mov
call
outs
sbb
sbb
daa
adc
push
and
outs
and
es
or
dec
out
fmul
mov
call
pusha
in
jmp
mov
push
pop
or
ret
xor
fdiv
out
ror
xchg
pop
and
cmp
push
or
add
sbb
inc
or
scas
inc
xor
out
gs
add
ja
or
dec
and
and
adc
dec
rol
je
mov
add
xchg
mov
and
adc
or
(bad)
or
jl
lods
push
adc
inc
js
fnsave
inc
lds
dec
dec
jnp
push
pop
cmpxchg
or
in
cmp
xchg
pop
xor
in
aaa
mov
or
sbb
push
cmps
add
in
je
scas
inc
or
mov
inc
imul
pop
mov
push
mov
stos
imul
dec
lahf
add
add
mov
inc
lds
xor
mov
jno
mov
cwde
sbb
jbe
and
jmp
or
pop
push
and
call
sti
add
mov
nop
cmps
je
mov
cmp
xchg
mov
retf
push
add
test
mov
xchg
dec
jnp
adc
test
inc
data16
push
inc
cmp
sbb
ficom
mov
daa
jne
es
fimul
adc
mov
push
test
and
push
or
mov
rol
push
xor
mov
xor
sbb
mov
bound
dec
pop
adc
outs
add
ret
call
pop
and
lods
xor
push
mov
out
mov
aaa
sbb
(bad)
(bad)
adc
add
mov
call
icebp
add
add
inc
ins
dec
xchg
or
mov
lods
mov
popa
adc
mov
jo
movs
movs
std
mov
shl
cmp
or
sub
mov
add
js
(bad)
mov
pop
dec
pop
pop
jmp
push
mov
(bad)
fsubr
xor
sub
imul
jbe
push
adc
cmp
not
or
sbb
sbb
push
fistp
add
rcl
call
mov
push
inc
pop
or
cmps
jne
inc
cmp
jmp
cmp
cmp
pushf
je
pop
pop
loop
dec
dec
mov
xchg
cmp
xchg
cmp
mov
push
lea
ret
loope
and
ja
lock
pop
addr16
mov
cli
mov
jbe
lods
fcom
test
push
retf
test
push
fild
pop
out
movzx
dec
sar
sbb
sti
or
sub
inc
test
sub
imul
and
push
push
ret
mov
pop
cmp
mov
ins
lea
(bad)
dec
or
sub
jnp
push
icebp
adc
dec
and
add
and
fsub
sub
jge
xor
mov
dec
pop
add
stos
xchg
push
addr16
cdq
fs
mov
fs
arpl
call
shl
dec
fwait
lea
add
pop
or
loope
(bad)
xor
xor
mov
inc
pushf
and
sbb
cwde
dec
mov
mov
add
or
mov
xchg
mov
adc
add
cmp
cmp
shl
test
adc
enter
ins
mov
std
pusha
out
fwait
cs
xchg
mov
add
cmp
aam
fcom
and
lea
jo
add
push
js
cwde
mov
arpl
cs
mov
sub
icebp
jl
adc
add
cwde
xor
push
or
movs
xor
cmps
mov
popa
je
sbb
mov
and
out
sub
lea
jno
ret
ja
xchg
add
aam
jne
or
dec
mov
js
dec
fsub
dec
ret
fdivr
or
adc
or
or
or
sub
push
or
xor
int
cmps
mov
or
or
add
fcomp
(bad)
and
pop
xchg
fwait
cmp
dec
jmp
push
nop
add
add
pop
mov
ret
inc
push
or
mov
movs
mov
add
mov
or
pop
jg
in
ret
fisttp
adc
fisttp
inc
leave
enter
or
dec
adc
sub
mov
add
jo
pcmpeqb
clc
or
in
dec
repnz
pop
xor
and
add
ret
rol
and
jbe
les
and
or
xchg
dec
inc
or
cdq
gs
add
or
add
aad
loope
fild
test
inc
lods
sub
jns
cmp
adc
push
in
das
js
mov
repz
inc
inc
dec
popa
mov
mov
sbb
pop
add
push
xchg
les
cld
push
cmc
adc
test
invd
xchg
test
cmp
adc
hlt
push
fcmovnb
je
pop
hlt
jne
js
dec
push
jmp
or
jg
adc
or
mov
(bad)
div
ds
mov
mov
aas
cwde
add
sub
(bad)
mov
sub
ins
cmp
cld
in
cmp
(bad)
ja
inc
or
add
call
jle
iret
cld
mov
xor
outs
mov
or
mov
fstp
sbb
jmp
out
add
add
lods
and
cmp
lea
ret
mov
pop
push
add
pop
inc
and
add
pextrw
add
xchg
add
adc
add
mov
push
fld
and
vpmacsdql
mov
or
push
mov
(bad)
cmp
pusha
pusha
movs
add
add
lds
pop
dec
js
enter
in
pusha
test
fistp
or
pop
mov
lahf
xchg
pop
aad
push
cmp
mov
sbb
cmp
add
sbb
aaa
xor
pop
cmp
aas
or
mov
add
ins
(bad)
clc
mov
out
scas
jnp
stc
stos
pop
jmp
jmp
ret
pop
mov
or
imul
pop
mov
or
fwait
mul
or
pop
lea
and
not
js
push
inc
inc
jne
adc
lock
pusha
imul
sbb
call
push
rol
sbb
cmp
push
push
inc
lods
rcr
push
enter
cmp
pop
fidiv
push
out
push
leave
mov
xchg
fcom
or
or
js
add
xchg
and
clc
mov
pop
leave
add
bound
sbb
hlt
add
clc
add
adc
push
test
add
inc
cld
add
mov
test
add
lock
add
and
clc
adc
sar
or
ret
sbb
ins
add
cmp
das
add
or
adc
or
jb
cmps
inc
leave
rol
clc
xchg
sub
pushf
or
xor
or
mov
mov
or
pop
add
sub
fild
pop
test
jno
in
sub
sahf
inc
inc
adc
jle
xchg
add
in
lahf
adc
lods
pushf
inc
js
loope
mov
clc
fwait
add
mov
push
pop
lock
rol
jp
mov
cmp
daa
dec
push
clc
mov
sbb
les
add
aaa
adc
jmp
jbe
leave
not
push
shr
icebp
cdq
add
in
movs
jo
pop
shl
add
adc
mov
inc
or
sbb
fs
mov
sbb
ins
mov
add
das
call
pop
loope
push
jg
std
xchg
mov
or
push
cmps
mov
mov
pop
mov
mov
scas
(bad)
sbb
adc
popf
and
pusha
adc
movs
cmp
lahf
movs
jo
mov
cmp
or
sub
fbstp
mov
ss
rcl
mov
jp
mov
loopne
inc
fild
rol
clc
dec
or
cmp
pop
neg
les
lahf
prefetch
or
inc
dec
sbb
pop
lahf
add
pop
mov
jg
add
mov
fs
xor
mov
adc
sbb
pop
add
adc
jmp
xchg
push
pop
ret
jo
imul
test
adc
(bad)
lods
shl
adc
clc
pop
data16
jmp
fldcw
inc
fisub
xchg
lahf
and
imul
push
inc
xchg
popa
and
xchg
pop
sbb
push
loop
daa
icebp
pusha
or
jecxz
mov
or
adc
daa
in
or
push
sub
or
loope
or
cmp
sahf
add
lods
psraw
push
aas
rcl
pop
ret
lea
adc
test
fwait
inc
lea
xor
les
push
(bad)
mov
inc
dec
stos
xor
mov
cmp
xchg
mov
push
aad
call
mov
shl
cmp
mov
and
cmp
jne
inc
add
pop
dec
arpl
shl
fadd
lds
xchg
push
or
adc
das
jp
add
dec
mov
je
les
js
fcmovu
hlt
cmp
test
inc
sbb
or
call
pop
loope
cmps
adc
out
jmp
or
jmp
in
test
sub
cmc
push
inc
rcr
pop
or
in
lock
adc
or
f2xm1
dec
enter
inc
daa
imul
call
popa
add
cmps
push
and
or
inc
repz
mov
inc
mov
push
lock
inc
and
adc
push
ret
push
adc
push
test
shl
das
call
ins
shl
dec
ins
and
mov
in
add
iret
mov
jl
sub
sbb
add
add
nop
popf
pop
sub
add
add
jnp
push
fs
add
retf
aad
loopne
fadd
inc
and
or
xchg
lock
pop
je
leave
rcl
ret
rcl
adc
jmp
inc
je
xor
inc
add
ror
mov
or
mov
mov
sbb
fild
push
pop
ins
mov
and
or
stos
push
sub
popa
int
dec
xor
adc
in
daa
dec
add
push
sub
add
dec
adc
cmp
cmp
jne
jg
or
fidivr
push
inc
jge
jge
pop
imul
inc
sbb
or
ins
and
shr
push
jge
fldcw
cli
jne
cld
rcr
imul
lods
pop
mov
or
push
test
fsub
test
xor
xchg
icebp
adc
pop
adc
push
push
or
pushf
mov
daa
pop
adc
mov
push
dec
sti
movs
push
cmc
test
lock
jmp
leave
das
cld
loopne
sbb
add
push
sub
or
test
int
adc
inc
loopne
sub
adc
lods
icebp
out
or
cs
or
shr
sbb
out
xor
add
rol
pop
add
xchg
bound
ins
sub
push
or
adc
or
jno
inc
loopne
imul
dec
sbb
pop
daa
and
mov
ss
pop
sub
mov
int
inc
outs
pop
sub
push
ror
cmp
xchg
and
sbb
mov
xor
dec
xchg
(bad)
fdiv
cld
add
punpckhdq
fwait
push
call
dec
mov
xchg
mov
popa
xchg
popa
pusha
push
mov
dec
or
mov
push
add
xchg
fadd
test
push
sub
and
mov
xor
or
push
adc
push
loope
adc
cmp
xchg
add
push
fadd
pop
add
push
sbb
adc
push
push
daa
movs
call
xchg
cdq
and
or
aas
leave
sub
push
push
cmp
inc
add
xor
in
mov
push
aaa
or
mov
imul
and
or
dec
and
pop
sbb
or
mov
push
js
and
mov
dec
adc
mov
push
jnp
push
cs
cmps
or
cmc
cmp
mov
clc
or
push
add
in
sbb
cdq
lds
popa
lods
loope
popa
or
push
pop
and
xchg
xor
int3
add
loope
mov
pop
and
inc
jecxz
mov
mov
cdq
adc
push
dec
out
scas
cwde
or
adc
or
inc
push
add
xor
add
dec
jne
jbe
gs
std
jle
xor
neg
je
push
pop
add
or
clc
sub
add
cwde
sbb
les
inc
xor
fisubr
mov
pop
bound
jg
nop
mov
dec
test
pop
cmp
cmp
inc
pop
fdivr
inc
push
in
mov
xor
es
les
mov
aad
push
in
into
data16
jmp
cmp
mov
popf
jae
pop
sub
xchg
add
add
icebp
icebp
sub
mov
sbb
shl
jnp
jb
sbb
sbb
add
push
mov
inc
xor
mov
pusha
sub
or
ins
add
cs
test
add
or
and
inc
add
adc
cmp
test
sbb
add
mov
add
ret
adc
mov
enter
and
jl
jne
add
and
hlt
adc
dec
bound
add
xor
inc
pop
ret
mov
sub
iret
movs
pop
pop
imul
je
adc
sbb
dec
rcl
(bad)
pusha
call
add
loope
es
jo
std
loop
push
or
in
loope
add
test
pushf
add
dec
pop
or
ror
jne
and
inc
inc
int
mov
lahf
pop
call
add
int3
xchg
add
jle
cmp
mov
adc
inc
and
adc
dec
je
ror
lods
fsqrt
sbb
pusha
dec
cld
add
adc
xor
nop
xor
dec
push
adc
jne
inc
cld
imul
and
xor
inc
sbb
push
or
xchg
sub
bound
push
mov
jmp
mov
pushf
ins
div
les
arpl
rol
dec
or
shl
and
adc
push
mov
call
add
mov
and
mov
push
int3
jmp
sbb
push
add
scas
icebp
pop
or
xchg
gs
adc
add
and
or
inc
lock
out
in
sub
or
inc
enter
lock
sbb
pop
and
js
in
iret
pop
loopne
scas
or
add
in
add
push
arpl
cdq
push
loopne
outs
xchg
fsubr
or
or
adc
add
xor
add
in
add
add
add
adc
jae
mov
call
jmp
in
push
xor
std
inc
pop
add
inc
mov
pop
mov
cmp
sbb
and
ror
gs
adc
es
xor
ss
inc
and
or
mov
inc
dec
pop
sbb
sbb
js
jmp
in
in
jo
aaa
pop
les
aam
xchg
test
aas
inc
ss
aad
in
or
push
dec
cmp
mov
push
xchg
dec
push
cmovg
ins
pusha
pop
test
add
dec
loop
add
add
cmp
adc
jbe
adc
add
mov
or
and
rol
popa
and
fadd
add
inc
push
cmp
pusha
fs
loope
test
loope
jmp
xchg
mov
sub
inc
ret
jnp
or
sbb
add
add
gs
fucomip
dec
(bad)
les
sbb
mov
daa
xchg
and
movs
dec
xchg
dec
jl
xchg
retf
leave
movs
sbb
es
push
or
adc
lods
fnstenv
fadd
push
gs
or
lea
sbb
aas
and
adc
push
lods
jg
(bad)
xchg
inc
leave
or
adc
or
push
cmp
mov
pushf
and
mov
or
imul
pop
xor
push
pusha
adc
ins
sbb
xor
mov
adc
mov
xchg
stos
adc
lahf
call
or
sbb
inc
xor
dec
and
fsub
inc
sbb
add
or
and
fcom
mov
or
cmp
adc
or
or
fsub
ds
(bad)
xchg
sar
mov
and
xor
inc
inc
adc
fadd
dec
loope
inc
std
add
lods
mov
mov
mov
leave
dec
sbb
pop
sbb
dec
inc
fsubr
add
inc
push
shl
adc
shl
dec
pop
xor
cmp
inc
pop
iret
add
fsubr
ja
or
gs
push
inc
push
stos
push
(bad)
test
push
sub
dec
pusha
mov
daa
imul
mov
adc
push
test
xchg
lock
ja
xor
cmp
add
push
sbb
das
sbb
xor
inc
nop
minps
and
pop
cmc
sub
sub
jge
pop
ja
gs
mov
(bad)
sbb
sti
or
sbb
test
sbb
pop
adc
fsub
xchg
sub
mov
lock
scas
ins
jg
dec
xor
mov
mov
xchg
add
clc
and
mov
adc
adc
rcl
and
fldcw
daa
push
loopne
adc
sbb
xor
paddusb
test
imul
jmp
xchg
call
clc
dec
inc
pop
or
enter
test
call
test
pop
test
and
xor
test
add
adc
sub
sbb
jecxz
push
enter
and
enter
test
or
dec
outs
or
into
dec
pop
dec
cdq
dec
cmp
loope
mov
shr
adc
add
or
xor
dec
cmp
xor
dec
fdivr
aam
clc
ins
push
std
int3
retf
les
int3
mov
aaa
sbb
mov
or
lea
mov
add
add
data16
add
sbb
add
in
jns
push
inc
cli
xchg
(bad)
sub
mov
mov
movs
sub
jge
call
add
mov
mov
ret
loopne
or
mov
dec
cmp
sub
push
test
adc
test
in
nop
int3
mov
xchg
(bad)
in
dec
cld
xlat
inc
and
pop
mov
jecxz
ret
add
dec
cmp
or
or
jmp
xor
and
aas
ins
jle
inc
mov
mov
mov
mov
push
mov
int
jecxz
pop
dec
stc
dec
mov
ret
in
fs
pop
div
call
adc
or
test
or
das
sbb
mov
xor
mov
cmp
xor
call
xchg
mov
push
or
sar
xor
scas
retf
add
cmp
mov
cwde
add
xchg
lods
test
mov
(bad)
(bad)
adc
jmp
inc
in
jecxz
pop
rcr
in
dec
fsubr
push
(bad)
and
hlt
pop
xchg
ss
push
mov
sbb
xor
or
sub
mov
es
imul
push
in
mov
sbb
xchg
loopne
mov
shrd
xor
sub
push
push
sbb
sar
or
test
nop
sbb
push
dec
js
test
aam
add
dec
dec
push
iret
ret
jns
or
xor
dec
add
inc
loop
cmp
fcom
mov
cmp
dec
cs
mov
jbe
leave
and
cmp
push
dec
mov
rcl
jecxz
dec
les
xchg
in
sbb
sub
adc
inc
fs
push
jge
xor
or
pop
popf
pop
sbb
jl
xor
inc
(bad)
fcomp
mov
or
ret
push
pop
cmp
inc
inc
or
add
hlt
or
jo
bound
sub
push
mov
jbe
add
outs
jno
call
loope
mov
loopne
add
push
push
push
call
mov
adc
mov
push
lds
into
lea
shl
mov
xchg
lds
push
xor
mov
int
rcr
or
jge
cdq
cmp
push
in
loope
sbb
push
adc
sub
push
inc
mov
in
add
into
sbb
aas
and
(bad)
fidiv
push
cmc
lahf
adc
sub
add
sub
shr
cmp
movs
and
adc
or
or
leave
pop
imul
or
or
cmp
push
mov
push
shl
xchg
cmp
fdiv
call
test
aas
lock
(bad)
jmp
lods
inc
and
jo
inc
or
jmp
xor
inc
add
or
jg
ins
jg
pop
xchg
xor
and
lea
dec
clc
push
push
call
xor
cwde
leave
push
cld
jp
les
loope
dec
sbb
pop
add
or
dec
hlt
fild
xchg
xchg
fbld
cs
adc
push
mov
jne
push
pop
test
int
jmp
hlt
inc
push
fiadd
jecxz
nop
sub
shl
ret
nop
or
adc
push
call
rcl
inc
adc
pop
and
adc
and
iret
loopne
sub
gs
xchg
push
adc
pusha
loopne
add
in
or
in
push
fcom
cmp
(bad)
cmp
push
push
add
add
mov
xor
and
and
inc
cwde
add
pusha
lahf
sub
or
jno
test
retf
js
jl
pop
jo
and
cmovns
jo
adc
dec
push
or
jmp
nop
add
cmps
ins
ins
es
(bad)
ins
ret
rol
push
mov
jae
sub
and
jl
sub
mov
sqrtps
nop
inc
mov
add
enter
je
adc
int
xor
in
daa
xchg
push
jg
fist
aaa
ret
jp
mov
js
push
stos
or
pop
add
mov
mov
and
mov
xor
dec
movs
mov
mov
and
cmp
popf
add
pop
mov
mov
test
sbb
inc
mov
dec
add
sub
aam
dec
jo
or
mov
inc
pusha
mov
dec
or
sbb
xchg
xchg
(bad)
mov
sbb
pushf
loope
cmp
outs
pop
stc
push
mov
es
inc
sbb
mov
add
ret
or
push
cmp
pop
nop
add
mov
add
mov
loopne
lea
rcl
push
push
xor
and
mov
mov
mov
adc
inc
mov
imul
adc
lods
or
clc
inc
adc
and
and
lock
nop
sbb
nop
jl
adc
or
jecxz
fdiv
or
sub
cmp
mov
dec
iret
ret
sub
and
sbb
nop
jp
push
sbb
ins
push
cmp
ins
xor
das
fsub
loopne
inc
push
jne
dec
mov
ins
in
xchg
dec
add
mov
in
call
inc
adc
xor
loopne
ror
inc
xor
add
or
dec
dec
sub
imul
add
dec
fistp
adc
shl
or
fwait
add
ror
call
cmp
dec
jns
push
mov
adc
mov
cmp
or
sub
test
call
add
fadd
test
nop
pop
jl
jnp
mov
daa
out
add
call
push
cmp
push
fldcw
jmp
add
xchg
pusha
sbb
dec
jmp
inc
and
jmp
push
push
add
pop
scas
cmps
ret
icebp
or
push
(bad)
add
cmp
fcomp
add
add
cwde
jecxz
pop
sbb
inc
jne
mov
fdivr
pop
and
cmps
pop
popa
shr
xchg
ds
lea
cmp
unpcklps
mov
pop
adc
test
jne
lock
(bad)
adc
test
(bad)
imul
dec
sub
test
popa
adc
and
dec
mov
dec
movs
popf
je
dec
enter
cmp
in
inc
pop
mov
and
data16
push
fisttp
pop
add
push
mov
mov
add
add
ret
cmp
lock
scas
adc
stos
or
ja
jb
adc
xchg
mov
jo
jae
fldenv
test
inc
test
test
aaa
sbb
or
test
inc
sbb
pusha
bound
xor
sbb
pop
or
outs
stos
mov
sub
int3
sbb
in
outs
clc
scas
bound
call
scas
or
add
and
js
or
inc
lods
out
xchg
lods
outs
cmp
inc
xchg
clc
sbb
test
dec
std
and
inc
sbb
dec
xchg
jbe
imul
add
sbb
and
rol
or
mov
mov
popa
rol
cs
push
fbstp
pusha
test
movs
xchg
aaa
test
cmp
loop
inc
test
or
scas
in
nop
push
(bad)
addr16
sub
js
cmp
sbb
shl
or
cmp
jae
loope
je
dec
add
or
aas
adc
xor
mov
pop
push
add
sub
sub
cdq
dec
xor
leave
loope
add
inc
popa
leave
mov
pop
mov
les
add
pop
jge
sub
inc
pop
mov
add
test
sub
rcr
push
lock
inc
add
add
ins
xor
adc
pop
jg
cmp
sbb
pop
inc
and
sbb
push
jg
ins
sub
add
push
or
lea
add
jbe
arpl
rol
call
imul
ror
pop
cmp
add
or
clc
pop
pusha
cmp
lods
(bad)
js
loopne
cmp
cmps
jbe
inc
xchg
jl
cmp
xchg
push
loopne
(bad)
dec
adc
push
ret
ret
aas
mov
imul
mov
int
das
and
pusha
or
loopne
out
das
jl
sbb
pop
adc
sub
inc
mov
ds
sbb
or
loope
stc
shl
mov
movs
inc
clc
jmp
and
push
outs
pop
hlt
or
mov
ror
and
or
or
push
cmp
push
cmps
push
ret
aaa
fild
lea
cs
push
mov
xchg
push
dec
or
push
mov
adc
push
sbb
or
adc
dec
xor
add
adc
inc
fmul
rol
xchg
or
add
sub
push
cmps
movs
movs
or
xchg
or
call
leave
std
stos
ins
dec
inc
sub
mov
pop
add
scas
dec
mov
push
mov
lahf
repz
add
pop
inc
inc
mov
dec
mov
stos
sub
lock
addr16
lock
add
add
shr
add
mov
dec
jbe
mov
cmp
and
in
and
cmps
mov
pop
cmp
push
ret
mov
dec
ror
jne
inc
ret
lods
xor
out
movs
cmp
arpl
sub
retf
cmp
adc
jnp
push
scas
cmps
add
pop
add
icebp
or
mov
or
sub
shl
scas
addr16
fmul
or
sub
dec
xor
(bad)
mov
pop
add
mov
jge
pop
or
fcom
or
sbb
mov
inc
js
das
adc
and
add
add
ins
hlt
jne
jb
pop
sti
or
push
rcl
ret
lahf
jg
sbb
lock
xchg
or
dec
fsub
xor
cmps
or
cmp
dec
nop
pop
fsubr
xlat
dec
add
push
mov
pop
xor
arpl
push
mov
add
jmp
out
jl
lods
pusha
mov
cmp
inc
outs
pop
out
mov
nop
jecxz
or
or
lea
or
(bad)
call
jno
xchg
mov
sub
sub
mov
ds
inc
sub
imul
rol
les
pop
std
ret
or
mov
add
mov
jne
mov
cmp
mov
push
pop
rcr
test
xchg
inc
mov
and
mov
xor
mov
addr16
mov
test
xchg
mov
push
(bad)
adc
sub
test
hlt
adc
(bad)
sub
adc
pop
add
loope
and
mov
mov
xchg
jg
or
lahf
push
out
jp
or
cwde
lock
shl
repnz
cmp
es
and
adc
add
add
rcr
jo
sub
dec
jl
push
sub
arpl
dec
add
out
or
jno
sbb
push
xor
mov
sub
mov
rcr
cmp
shl
xor
cmp
inc
loopne
xchg
lea
test
lahf
xchg
stos
fld
add
clc
dec
(bad)
test
pop
and
or
sbb
cmps
mov
lods
arpl
or
inc
adc
xor
dec
fs
sbb
and
pop
sub
xor
mov
jl
add
leave
and
add
cdq
cmp
inc
push
mov
out
add
push
lods
push
jecxz
mov
sub
mov
mov
cs
ss
push
add
dec
pusha
or
das
jmp
(bad)
ins
and
jbe
mov
push
sbb
mov
mov
add
mov
fld
lock
and
std
mov
mov
sbb
add
dec
dec
cdq
rcl
add
inc
and
fidivr
dec
inc
jmp
js
mul
jmp
jmp
mov
add
(bad)
jne
pinsrw
std
add
or
or
push
mov
call
aas
pusha
aad
bound
sbb
scas
dec
or
pop
pop
inc
add
dec
add
cmp
adc
mov
call
dec
xchg
inc
push
lock
mov
iret
call
pop
fucomp
cmp
or
mov
rol
je
inc
push
sbb
xor
popa
and
inc
mov
inc
inc
inc
cdq
rcl
aaa
add
mov
push
jae
xlat
sbb
loop
xor
daa
and
sbb
inc
and
sub
cmp
push
mov
mov
mov
js
das
cli
push
xor
jle
jp
mov
or
hlt
cmp
adc
stos
add
outs
or
test
mov
inc
xchg
xor
adc
dec
sbb
lock
(bad)
loopne
add
push
mov
fadd
or
add
fmul
nop
test
or
arpl
adc
push
cmps
sub
or
or
loopne
push
lods
adc
mov
mov
lods
call
xor
in
cmps
inc
mov
repz
je
jg
cmp
and
or
inc
push
arpl
and
and
aas
test
xchg
hlt
jb
dec
push
imul
jl
push
dec
jge
cs
sub
pop
aas
push
or
add
js
sub
shl
fnsetpm(287
adc
lds
mov
mov
jg
or
je
and
inc
or
int
pop
jmp
push
push
mov
add
add
jne
or
cs
mov
sbb
es
pop
ret
rcl
and
xchg
cmp
push
pop
push
or
mov
add
push
dec
leave
and
mov
dec
inc
cmp
call
mov
or
sti
xchg
sub
mov
xlat
and
psubusb
ror
movs
or
add
adc
rcl
test
test
je
or
hlt
aas
pop
xor
add
adc
into
ja
push
add
loop
sbb
or
lahf
sub
sub
sub
enter
aam
and
in
imul
and
icebp
aaa
aas
cs
imul
sub
xor
pop
or
jle
xor
das
push
push
add
push
pop
(bad)
dec
lock
popa
cmp
pop
sub
or
cmp
inc
or
mov
add
jns
mov
fist
mov
sbb
(bad)
push
or
inc
daa
scas
sbb
xchg
hlt
xlat
add
cld
add
sbb
mov
adc
bound
sbb
sub
xchg
lods
add
sbb
dec
xor
sub
iret
push
jae
jmp
xor
sbb
rcr
pop
fs
(bad)
mov
and
mov
cdq
(bad)
jae
push
xchg
xchg
aas
or
inc
cmp
push
add
add
popa
xlat
and
lds
add
in
in
imul
adc
ffreep
sbb
pop
jmp
sbb
push
fwait
js
ror
stc
pop
or
cmps
retf
fmul
push
add
loopne
xchg
fs
xchg
out
je
outs
rol
enter
xchg
mov
dec
pusha
add
push
inc
and
in
xchg
es
jnp
or
in
iret
jmp
nop
inc
dec
ret
test
add
adc
iret
imul
dec
xchg
xchg
jmp
pop
rol
loope
sbb
jae
inc
js
dec
dec
adc
cmp
call
or
jo
jle
jne
lds
pop
xor
or
or
xor
or
mov
aad
add
mov
add
adc
test
lahf
je
push
sbb
push
inc
xchg
adc
les
fadd
xchg
imul
inc
nop
scas
dec
cmp
jmp
sbb
jl
sub
add
xor
cld
jnp
xchg
push
add
or
rol
xchg
pop
lds
xchg
push
aaa
arpl
xor
push
xlat
lock
xchg
dec
call
mov
or
fs
aam
or
cld
mov
mov
cld
lea
sub
add
jle
iret
mov
xchg
nop
popa
add
mov
sbb
iret
add
mov
inc
xor
mov
cmc
adc
pop
adc
addr16
cld
inc
or
dec
(bad)
mov
movs
xor
and
pop
add
(bad)
dec
mov
addr16
sbb
popa
or
sar
push
inc
adc
xlat
xlat
jecxz
push
imul
mov
or
sbb
imul
fild
push
sti
add
add
sbb
imul
or
aam
je
loopne
outs
outs
(bad)
jecxz
push
cmc
in
ret
and
add
mov
aam
mov
add
mov
pop
and
adc
push
xor
or
(bad)
jbe
rol
or
sbb
ret
daa
add
cmp
std
int
pushf
or
(bad)
lahf
push
pusha
mov
inc
pop
jg
cmp
mov
dec
add
not
jns
push
push
test
stc
mov
inc
dec
iret
sbb
test
xchg
adc
mov
xor
and
and
adc
or
inc
outs
retf
dec
retf
in
(bad)
xchg
mov
pop
jg
push
inc
pop
xchg
call
aas
jmp
loopne
sbb
sub
push
(bad)
fisttp
or
push
fbld
add
sbb
inc
or
cmp
lods
or
or
cmp
adc
mov
add
cdq
dec
aaa
xchg
push
rcr
add
and
inc
imul
pop
xor
add
add
pop
and
or
push
dec
sbb
pop
ficomp
add
sti
mov
and
rcl
or
aaa
add
xchg
push
scas
pop
cmps
pop
add
add
mov
cmp
rcl
fcomip
pop
add
push
enter
fnsave
adc
sub
enter
lock
invlpg
lahf
add
or
and
adc
mov
popf
inc
adc
dec
in
fimul
mov
dec
adc
add
outs
adc
dec
mov
pop
dec
pop
or
add
js
sbb
adc
inc
or
or
jmp
test
lods
xor
imul
pop
adc
cwde
loop
pop
mov
sbb
retf
pop
or
mov
pop
(bad)
or
add
ficom
fucomi
dec
add
push
pop
inc
push
pop
or
add
xor
fisttp
sub
pop
adc
aad
push
outs
sub
pop
pop
push
jmp
xor
je
ds
pop
cmp
imul
inc
scas
push
jmp
lahf
xor
jns
sbb
rcl
xor
xchg
pop
mov
jecxz
(bad)
mov
inc
inc
dec
shl
jns
div
push
lods
cmp
xchg
xor
enter
push
in
div
cmp
xor
add
fsub
push
in
movs
dec
pop
scas
pop
in
inc
in
mov
pop
pop
mov
int3
pop
out
sbb
push
jecxz
in
dec
add
add
pushf
push
clc
pop
rcl
hlt
jnp
(bad)
or
push
pop
rol
ret
adc
xor
mov
mov
or
aam
es
stos
pop
push
mov
jg
mov
pop
shl
loopne
cmp
lock
ror
inc
lahf
sbb
cmp
addr16
pushf
xor
in
or
imul
pop
pop
test
adc
xor
ror
ins
cmp
push
push
sub
adc
scas
add
repz
or
and
cmp
mov
inc
fsub
test
adc
ja
add
push
pop
mov
add
imul
je
jo
popa
gs
loopne
(bad)
js
dec
jl
mov
and
pop
and
test
mov
(bad)
sar
and
(bad)
xchg
test
sub
pushf
push
jmp
xchg
cmp
and
push
inc
icebp
ins
xchg
mov
push
ret
xor
les
sahf
movs
adc
or
fcom
cmp
cmp
fistp
mov
add
(bad)
adc
mov
and
in
cmp
push
jnp
xchg
cs
pop
leave
test
outs
sub
inc
xor
fmul
jno
xor
mov
sbb
lock
add
xlat
inc
cdq
cmp
xchg
sbb
cs
mov
mov
dec
gs
cmps
and
enter
test
dec
fcomp
das
dec
sub
mov
push
les
and
les
test
xor
ins
enter
sub
movs
test
pop
ret
ja
inc
enter
or
xor
lods
mov
pop
adc
push
lock
xor
jmp
pop
rcl
and
shl
outs
jl
cmp
ret
aam
mov
mov
adc
aas
and
enter
cwde
push
hlt
popa
inc
cmp
push
inc
mov
and
mov
mov
xor
mov
imul
arpl
or
mov
adc
pop
leave
inc
push
jmp
pop
call
jo
or
rcr
es
mov
rcl
and
daa
dec
push
ds
sbb
add
ins
test
mov
push
xchg
and
push
sub
dec
jecxz
dec
add
jge
add
inc
movs
xchg
lahf
mov
dec
or
add
mov
pop
enter
or
or
mov
mov
sub
rcl
mov
in
push
jnp
adc
adc
mov
sbb
in
lea
xor
pop
push
or
or
sub
sahf
cld
pop
leave
sub
sbb
sbb
or
and
adc
mov
add
xchg
sub
xor
mov
fstp
xor
or
sub
xchg
dec
add
aam
and
mov
or
fild
pusha
movs
sub
push
or
mov
ret
hlt
push
xchg
sub
cmps
push
sub
inc
cmp
outs
sar
test
js
xor
lds
fsubr
sbb
pop
ja
jecxz
add
(bad)
std
jg
fiadd
and
and
xor
aas
fcomp
(bad)
xor
pop
mov
imul
xor
inc
fs
daa
dec
add
scas
push
adc
add
cmps
and
pop
mov
jg
(bad)
push
xor
arpl
test
add
das
retf
(bad)
xchg
aas
ins
sbb
xor
xchg
add
jmp
cld
cmp
or
add
or
fld
adc
ret
arpl
(bad)
push
sub
jb
pop
cmp
add
(bad)
test
adc
or
movs
(bad)
arpl
hlt
int3
and
lock
das
test
add
add
add
adc
sbb
pop
mov
push
jbe
dec
lods
mov
adc
lods
push
xchg
mov
mov
mov
mov
or
fwait
int3
pop
mov
mov
and
and
mov
ins
adc
dec
mov
and
or
leave
jne
cmp
add
mov
adc
mov
jmp
or
les
inc
dec
sub
xor
cli
adc
cwde
jmp
cld
mov
in
sar
push
je
adc
popf
push
push
inc
movs
jmp
add
push
sub
pop
or
or
sub
in
dec
inc
sub
add
icebp
xor
add
push
rcl
es
and
fnstenv
adc
das
sbb
movs
mov
pop
fmul
pop
add
push
pop
psubb
add
or
stc
adc
inc
push
xor
or
push
inc
mov
pop
pop
or
sbb
mov
push
cmp
pop
cmp
inc
inc
dec
adc
nop
inc
dec
cwde
dec
inc
mov
push
jnp
or
test
or
dec
movs
adc
inc
push
inc
inc
sbb
push
dec
loopne
xor
push
add
jge
mov
pushf
inc
adc
xchg
test
or
mov
or
mov
pusha
pop
dec
pop
lahf
adc
push
rol
push
ins
sub
pop
push
dec
dec
cmps
and
xchg
lods
shl
addr16
fld
rol
mov
or
test
call
popf
aaa
add
cs
ja
mov
push
and
fnstenv
fwait
or
aam
add
pcmpgtw
ins
in
loopne
cvtps2pd
add
rol
add
mov
xlat
jne
cmp
mov
cwde
sub
sbb
sub
sub
pop
mov
add
or
icebp
or
pop
pop
or
sbb
cmps
jne
adc
add
pop
xor
push
jl
and
lahf
dec
enter
imul
cmp
adc
jmp
nop
adc
mov
ficomp
add
(bad)
xchg
adc
scas
jbe
xchg
push
fsubr
pop
add
xor
add
inc
in
dec
sub
add
std
out
pop
rol
xor
xor
iret
popf
sub
test
mov
push
push
jge
sub
dec
push
outs
mov
in
adc
lea
ret
and
dec
js
les
call
sub
sbb
stc
sahf
popa
push
mov
nop
movs
jmp
jecxz
icebp
or
jae
push
push
adc
enter
and
push
jne
add
leave
push
cmp
dec
jl
mov
or
inc
inc
inc
or
retf
adc
push
fsub
jl
sbb
arpl
inc
adc
cmp
sub
(bad)
pop
or
sbb
bound
pop
push
sub
adc
(bad)
bound
mov
adc
mov
add
mov
xchg
cmps
movs
nop
and
sbb
cmp
call
rcl
mov
lods
call
mov
add
pop
cmps
xor
in
xchg
mov
push
push
icebp
imul
mov
les
mov
jb
sti
cld
or
adc
cmp
popa
enter
sub
push
or
inc
pop
hlt
pop
xchg
mov
mov
adc
cli
and
mov
adc
nop
adc
hlt
in
mov
in
mov
sbb
mov
popa
ror
iret
shl
sbb
test
mov
jp
jae
or
pop
inc
adc
xchg
mov
xchg
sub
xor
push
fs
xchg
jo
data16
jmp
add
cmp
mov
pop
adc
xor
cld
cwde
push
lea
mov
outs
adc
jns
adc
je
adc
loopne
inc
in
cmp
adc
xor
ret
adc
push
cmp
pop
add
and
adc
cli
or
jo
and
mov
xor
jne
pop
sub
pop
add
shl
push
or
mov
loopne
pop
inc
jns
lock
push
in
test
xor
out
cmp
sub
add
xor
inc
push
ret
sub
imul
les
je
or
push
pop
jmp
mov
jo
adc
test
std
mov
repnz
sbb
imul
in
and
cmps
imul
gs
loope
ror
jmp
ds
int3
mov
xchg
add
fs
push
movs
(bad)
and
inc
and
inc
and
xchg
pop
jmp
ret
xor
lock
fdivr
shl
add
mov
popa
inc
shr
bswap
clc
rcr
add
fild
and
cmp
add
mov
adc
jne
fnsave
jb
les
enter
gs
loop
ror
cs
repz
pop
adc
or
sahf
and
add
add
add
mov
call
and
add
mov
mov
aas
add
popa
or
ret
adc
and
in
mov
inc
mov
pushf
mov
pop
jno
pusha
mov
sub
fisubr
inc
lahf
lea
push
dec
fistp
pop
sbb
ret
or
out
sub
mov
loop
add
mov
xor
adc
int3
mov
push
rol
push
ror
or
mov
or
mov
xchg
pusha
push
mov
push
jmp
jg
cwde
dec
push
adc
or
or
adc
adc
add
inc
add
lahf
adc
push
pop
fadd
dec
imul
pusha
xchg
dec
pop
inc
fsub
pop
cmp
jne
fisttp
jge
test
and
sbb
xchg
lock
xor
add
pop
dec
jbe
gs
lea
or
push
push
adc
imul
jge
outs
ds
and
cmp
or
and
arpl
loope
sti
jnp
lea
ficom
std
fst
and
sbb
fnsave
add
push
add
xchg
or
cdq
push
xchg
das
or
aaa
sub
jp
test
add
push
fiadd
pop
or
inc
cmp
dec
and
fimul
jle
test
ror
outs
pop
lea
mov
fs
add
fwait
mov
adc
xchg
aam
daa
outs
lea
popa
test
push
inc
add
sub
push
or
add
xchg
test
inc
(bad)
xor
and
jo
mov
lods
stos
mov
lods
pop
xor
sar
push
and
lock
lock
iret
cmp
ja
push
add
ret
add
mov
popa
dec
pop
dec
push
clc
loopne
popa
lds
(bad)
adc
sub
fnstenv
iret
(bad)
jmp
call
lods
or
xlat
ret
sub
push
sub
mov
cmp
rcr
add
call
(bad)
add
stos
add
rol
jmp
les
push
imul
add
ror
jmp
es
jmp
add
xchg
and
fnstenv
add
popa
inc
(bad)
outs
add
retf
inc
pop
adc
(bad)
push
xor
sbb
push
inc
adc
icebp
xchg
rol
push
add
xchg
das
cmp
pop
add
daa
or
lods
lea
pop
clc
fwait
and
inc
jno
push
push
std
cmp
ins
sub
sub
jmp
inc
lock
jl
push
pop
mov
add
sub
add
xor
add
jle
pand
add
xchg
adc
inc
adc
jmp
pop
jb
pop
mov
mov
scas
(bad)
xor
xchg
mov
fstp
cmp
xor
or
dec
sub
or
(bad)
outs
lea
jmp
mov
mov
inc
or
or
adc
aam
enter
jbe
add
mov
adc
sbb
pop
add
ss
pop
add
mov
jecxz
inc
xchg
sbb
sub
inc
push
or
or
pushf
xlat
lds
mov
sub
sbb
je
and
and
sub
mov
dec
add
adc
sub
stc
popa
call
gs
out
push
mov
mov
leave
add
xor
and
push
xlat
sbb
push
cld
or
push
add
inc
adc
sbb
adc
adc
ss
les
mov
mov
inc
ret
aam
adc
pop
aas
add
cdq
ss
mov
or
mov
(bad)
shl
jp
mov
add
(bad)
xchg
cmc
push
adc
or
sub
ss
xchg
mov
ja
adc
and
fwait
xchg
or
int3
adc
push
or
nop
mov
inc
call
nop
xor
lea
xchg
sbb
sbb
adc
pop
(bad)
mov
cmps
mov
xor
or
(bad)
mov
jmp
push
fs
jl
jmp
cmc
xor
pop
mov
(bad)
or
inc
and
jbe
add
test
or
push
or
test
inc
jl
les
add
daa
mov
cmp
add
add
jo
add
mov
add
loopne
or
mov
or
mov
xchg
es
or
jo
adc
or
pop
pop
push
sbb
add
clc
mov
cmps
jecxz
or
adc
test
mov
dec
mov
push
add
rol
mov
mov
push
sub
test
cmp
jo
xor
mov
add
enter
cmp
add
mov
add
and
dec
adc
mov
jo
inc
adc
es
jns
dec
push
mov
dec
pop
push
das
push
or
mov
test
inc
(bad)
jmp
inc
outs
xchg
adc
or
cs
retf
icebp
xchg
les
inc
or
shr
dec
mov
mov
fs
cmp
sbb
pop
jmp
add
inc
in
adc
rcr
inc
xor
pop
shl
mov
daa
mov
imul
and
test
or
xchg
mov
sub
test
ret
and
sbb
enter
enter
xchg
arpl
pop
bound
push
push
jl
aam
ins
aas
adc
stc
clc
pop
(bad)
adc
push
push
sub
push
dec
jecxz
push
xchg
and
mov
mov
test
cmps
mov
movs
shl
pushf
adc
add
xchg
std
sub
jne
les
lock
cmp
fcomp
push
add
int3
push
adc
sub
ror
inc
jl
rcr
ins
fcmovu
nop
or
fs
icebp
and
dec
sub
push
fist
adc
adc
(bad)
fs
jmp
mov
popf
xor
ins
fwait
xchg
imul
sub
xor
sbb
dec
and
xor
cld
add
dec
sbb
and
jl
mov
xor
fwait
jns
push
in
adc
sub
icebp
gs
sti
jbe
push
inc
fwait
adc
push
add
(bad)
int3
lods
sar
jbe
adc
dec
out
cmp
jns
add
popa
sub
lds
inc
popa
rcl
lock
imul
mov
nop
adc
rcr
mov
inc
or
mov
jecxz
retf
imul
les
clts
ret
sbb
add
out
push
pop
push
(bad)
or
movs
mov
mov
cmp
ss
xchg
sti
xor
and
push
inc
mov
cdq
mov
xor
lahf
sar
mov
mov
int
cmp
jbe
xor
lods
jne
adc
ds
js
ins
pop
adc
add
out
or
add
xor
add
adc
xchg
mov
add
push
arpl
cmp
mov
rcr
or
xor
xchg
sbb
push
out
movs
or
call
push
test
pop
push
vpshufd
jecxz
pop
adc
inc
jae
inc
repnz
dec
mov
xor
push
cmps
sub
clc
mov
cmc
sbb
ins
adc
dec
push
xchg
add
mov
pop
dec
sub
mov
pop
and
inc
or
adc
popa
ret
and
pop
push
mov
dec
and
outs
mov
add
cmp
fldcw
adc
xor
ss
sub
cmp
(bad)
mov
add
inc
mov
sbb
cs
into
jmp
adc
xor
lahf
hlt
dec
cmps
std
add
enter
in
add
rol
add
or
xor
nop
and
jecxz
pop
inc
adc
cmps
pop
push
sti
dec
mov
aam
push
aad
div
push
dec
mov
cmp
push
mov
cmp
mov
and
inc
jmp
enter
sub
fldcw
sbb
adc
mov
dec
jno
aas
xor
sub
fidivr
mov
push
adc
cdq
mov
mov
inc
mov
sub
sahf
stos
xchg
mov
mov
or
enter
(bad)
fcom
jmp
or
xchg
or
or
stos
or
xor
jmp
push
or
lods
adc
mov
fidivr
movs
add
mov
cmp
push
rol
dec
aam
jmp
out
pusha
sub
or
jb
push
mov
push
cmps
test
es
lock
test
push
or
or
inc
aad
sbb
daa
push
adc
inc
push
aad
mov
test
xor
loop
add
jmp
jl
push
add
add
mov
or
shl
adc
adc
add
repz
sub
jb
push
aas
repz
xor
jb
mov
aam
xchg
jb
add
adc
sbb
inc
mov
pop
adc
pop
dec
sahf
ins
mov
cmp
pop
mov
inc
push
test
adc
push
cmps
arpl
xchg
push
adc
cld
es
ja
stc
mov
pop
push
adc
test
adc
push
sub
dec
inc
inc
mov
sub
lods
mov
push
les
mov
jno
repz
daa
push
pop
push
push
and
xchg
int3
loopne
dec
mov
jmp
nop
jne
sub
inc
jecxz
xchg
add
fistp
daa
aas
test
popa
sbb
inc
mov
ret
shl
push
pop
mov
mov
mov
mov
jge
mov
mov
jmp
scas
add
inc
pushf
add
sbb
leave
xchg
push
jne
adc
push
mov
ror
add
aad
jo
mov
cmp
sub
ret
pop
jl
add
aad
ret
jno
push
dec
jg
jp
lods
out
cwde
test
pop
lea
inc
loope
nop
mov
loop
iret
xor
or
loopne
jp
pop
jge
push
cmp
or
inc
or
jo
sub
mov
dec
rcl
stos
mov
(bad)
stos
nop
ficomp
fldenv
fbstp
cmp
dec
or
mov
push
push
inc
lea
or
das
test
and
push
cmc
push
add
pusha
pop
loope
jne
les
hlt
xor
aas
sub
sub
out
pop
inc
sbb
pop
jg
pop
sbb
cmps
out
cwde
mov
rol
and
pusha
(bad)
call
sbb
jb
in
int3
inc
sbb
jle
lea
xchg
pop
mov
clc
push
fisubr
mov
sub
adc
shl
jo
or
xchg
(bad)
sbb
icebp
push
ins
sub
jno
jge
addr16
add
stos
and
ret
rcr
inc
and
adc
daa
adc
mov
adc
push
out
retf
add
sbb
pop
dec
fdivr
jmp
lea
mov
daa
jno
xchg
mov
shl
add
movs
or
inc
or
xchg
xchg
xchg
inc
mov
cs
or
inc
xor
test
xchg
add
add
in
and
sub
cs
or
xchg
push
mov
sbb
mov
push
shr
and
sub
cwde
jl
adc
add
or
mov
pop
adc
pop
les
or
sub
inc
cmp
aaa
ret
jo
ficomp
hlt
jne
and
sub
rcr
fwait
cmp
xor
stos
leave
add
adc
rep
sub
dec
in
ret
cmp
dec
or
int
and
ins
pop
dec
adc
sub
mov
stc
lock
inc
xor
mov
dec
xor
sub
cmp
inc
or
adc
bound
xor
push
jecxz
lea
xor
and
push
xchg
xlat
sub
icebp
enter
ret
dec
inc
xchg
int
push
ret
xchg
add
push
mov
bound
pop
(bad)
out
rcr
jbe
shl
mov
ins
add
and
add
adc
sbb
adc
dec
mov
jns
shl
adc
inc
loopne
and
int
sub
cmps
pusha
sub
mov
aas
loopne
in
or
jmp
out
loope
adc
(bad)
pushf
xor
cmc
mov
xchg
xchg
movs
xchg
mov
aam
add
sbb
push
fmulp
clc
mov
xor
pop
xlat
lock
mov
jecxz
adc
lock
push
add
jl
ins
adc
add
xchg
(bad)
sbb
pop
int3
or
fnstcw
js
mov
cmp
xchg
loope
mov
or
(bad)
test
test
pop
mov
dec
mov
aaa
xchg
cmp
add
xchg
or
push
fstp
adc
adc
push
rol
push
mov
mov
mov
gs
mov
ins
lahf
nop
outs
or
inc
push
inc
add
add
or
xchg
cmp
(bad)
jmp
adc
jno
add
push
jae
jmp
xor
addr16
sahf
adc
dec
xor
cmp
sub
in
fldpi
xor
jmp
and
jmp
mov
adc
or
or
mov
pushf
sahf
inc
push
push
arpl
cmp
jb
das
lahf
push
scas
mov
int3
fucomi
stc
add
out
sahf
out
or
and
ds
push
pop
bound
loopne
jns
jge
add
mov
jg
dec
add
or
or
or
adc
add
or
adc
sbb
dec
mov
adc
xchg
das
test
dec
loop
pop
cld
jg
popf
test
pop
mov
or
fldlg2
mov
out
xchg
dec
and
scas
shr
add
inc
add
push
dec
mov
and
inc
cmp
push
adc
adc
sbb
pop
movs
lahf
mov
(bad)
jo
(bad)
test
aam
inc
leave
cld
push
cmp
or
xchg
out
pop
or
int
pop
mov
mov
(bad)
lea
or
lods
inc
add
movs
inc
pop
daa
jp
popa
cmps
cmp
jmp
mov
in
dec
cwde
xchg
push
nop
clc
retf
aam
xchg
icebp
mov
mov
xor
mov
adc
daa
mov
mov
cmp
cli
add
or
pop
out
ins
pop
xchg
aas
push
sbb
jl
int
ret
sub
adc
aam
or
pop
aad
push
lods
pop
movs
les
mov
das
cli
mov
mov
adc
jnp
jl
sbb
push
in
add
push
rcr
or
mov
cmp
iret
aaa
dec
call
dec
mov
imul
or
sub
arpl
mov
inc
and
mov
ret
out
call
packssdw
or
test
aam
mov
mov
jmp
cmps
(bad)
clc
add
xor
rol
ror
loopne
outs
or
in
push
rol
mov
inc
push
add
inc
add
movs
xor
sub
add
jmp
add
inc
int3
pop
push
je
xor
mov
mov
xor
xchg
sub
inc
add
loop
add
ins
add
jae
or
jge
neg
add
push
cld
call
jmp
xor
enter
retf
push
pop
push
test
cmp
cmp
and
adc
das
cmp
dec
or
mov
pop
enter
and
add
mov
test
sbb
(bad)
sbb
jmp
daa
xor
stos
and
aas
push
add
or
(bad)
xor
xor
dec
aad
jg
pop
inc
inc
mov
jno
js
test
rcl
(bad)
jnp
and
outs
mov
inc
adc
inc
cmps
add
push
hlt
test
shl
aam
push
inc
push
shl
cmp
jle
mov
mul
pop
sub
sub
inc
pop
mov
enter
pop
sbb
pusha
jb
jge
shl
push
shr
cmp
leave
leave
mov
xor
leave
arpl
mov
xor
fdiv
mov
push
test
out
dec
pop
jmp
std
dec
and
pop
inc
cmc
retf
clc
xor
mov
loope
xchg
pop
hlt
xchg
test
mov
cmp
cmp
aaa
mov
jmp
sbb
inc
fdivr
out
push
inc
adc
test
imul
pop
in
xchg
or
sub
ja
or
add
test
add
sub
sub
das
or
cmps
jp
test
shl
push
cmps
cmp
cmp
or
jae
pop
loop
inc
mov
mov
push
ins
adc
mov
sub
inc
inc
test
xchg
adc
and
cld
sub
push
mov
pop
rcr
mov
mov
inc
popa
adc
loope
inc
adc
ds
rcr
jbe
adc
fcmovnbe
push
inc
mov
jmp
(bad)
mov
ins
add
jne
(bad)
pop
xchg
dec
pushf
or
adc
outs
jmp
das
adc
fcomp
and
dec
pop
add
sbb
mov
mov
mov
and
ja
or
cmc
or
inc
ja
mov
or
ss
leave
je
inc
jl
mov
jo
pop
push
mov
sbb
or
retf
and
jne
arpl
sar
or
dec
mov
mov
or
push
mov
lock
push
mov
lea
pop
xchg
inc
dec
pop
(bad)
fmul
fadd
fld
adc
and
mov
push
mov
mov
add
jl
sti
jmp
sbb
pop
fsubr
sbb
adc
pop
fmul
outs
addr16
loopne
dec
lods
ins
push
popf
mov
jo
fild
mov
aas
add
add
sub
jl
cmp
test
add
push
add
or
or
shr
imul
add
sub
add
sub
xor
push
cs
rol
add
add
sub
in
sub
cmp
lea
inc
adc
imul
test
pop
sbb
pop
sub
loope
lahf
or
pop
push
xchg
and
aad
ret
jo
test
pop
fadd
lock
add
adc
loope
xchg
push
mov
mov
xchg
add
inc
imul
or
add
cmp
test
jl
loopne
jb
or
sbb
xor
and
mov
and
add
imul
fnstsw
rcl
mov
loope
mov
push
loope
(bad)
push
xchg
and
or
xor
sahf
fimul
or
idiv
jge
adc
ror
test
inc
or
push
(bad)
mov
mov
or
mov
mov
push
and
push
shr
icebp
jg
mov
jl
jl
ins
cmps
fstp
xor
sti
mov
movs
sub
mov
xor
and
mov
inc
adc
loop
mov
mov
sub
loopne
sub
cdq
pushf
push
sbb
xchg
sbb
bswap
cmp
pop
pushf
xchg
cld
adc
push
push
sub
jbe
jmp
push
sub
sub
adc
jge
add
(bad)
daa
mov
pop
dec
push
add
cs
xchg
mov
jo
pop
push
sub
sbb
push
xor
sub
dec
cmp
dec
sbb
aam
sbb
enter
cmc
sbb
push
dec
pop
adc
xchg
call
inc
les
movzx
xchg
retf
leave
jae
cs
adc
dec
imul
adc
loope
nop
test
mov
ins
sub
push
push
clc
cmp
cmp
or
and
bound
mov
xlat
cs
mov
xchg
lods
dec
push
movs
scas
add
out
cmp
scas
adc
pop
push
mov
jbe
push
out
push
lds
data16
jmp
or
mov
adc
or
adc
or
adc
or
and
pop
or
in
dec
or
jg
clc
jo
dec
dec
pop
mov
push
lods
nop
adc
aam
and
and
cmp
data16
test
add
push
pop
pop
adc
xchg
ret
call
or
or
dec
nop
add
cmp
xor
xchg
pop
stos
hlt
sub
cmp
ja
sbb
sub
or
or
mov
and
arpl
test
pop
mov
inc
inc
add
dec
lods
sbb
dec
or
inc
pop
movs
popf
retf
sub
and
push
mov
stos
test
sub
or
mov
jmp
sbb
mov
cwde
push
cmps
sbb
sub
mov
mov
adc
adc
sub
ret
cmp
jge
pop
mov
imul
dec
add
lea
push
add
cmp
fld
sub
cmp
js
push
ror
scas
or
or
add
push
loopne
(bad)
ja
mov
inc
in
nop
outs
mov
int3
sbb
fs
add
push
add
sbb
sub
fs
rol
push
retf
sbb
adc
or
rcr
mov
movs
movs
adc
xor
imul
inc
jmp
rol
sub
mov
xlat
or
test
(bad)
jge
xor
add
xchg
push
retf
pop
ret
xor
add
es
movs
sub
loopne
adc
jecxz
cmp
cmc
sub
inc
cmp
and
cbw
jmp
sbb
enter
pop
mov
sbb
in
call
mov
rol
inc
pop
cmc
add
mov
or
cmp
adc
loopne
jnp
push
or
xor
jb
loope
sub
stos
sub
or
xor
mov
aaa
pop
mov
aad
jmp
into
push
or
or
adc
mov
sbb
dec
mov
xor
iret
mov
sub
stos
xchg
dec
adc
xchg
movs
loopne
push
pusha
xor
push
or
stc
push
sbb
in
push
cmp
dec
push
lds
pop
push
sub
(bad)
dec
add
add
or
ret
add
out
cmp
aaa
rol
call
in
(bad)
pop
ss
push
xchg
pop
pushf
and
inc
and
call
xor
jbe
inc
xor
add
cmp
sti
call
add
pop
test
out
sbb
test
imul
rcr
clc
mov
adc
push
dec
pushf
adc
or
in
adc
nop
sti
or
xchg
lea
mov
adc
add
(bad)
fnstenv
and
mov
test
fwait
leave
or
dec
pushf
sub
ss
dec
xchg
cmp
popa
pop
ins
adc
pusha
jecxz
mov
mov
loope
arpl
mov
add
add
bound
adc
add
or
and
add
cmp
data16
xchg
push
inc
iret
mov
fs
push
fimul
mov
fsub
sbb
lods
jno
das
jmp
fadd
xchg
and
or
les
xor
mov
mov
or
add
cmp
inc
push
add
xchg
add
add
in
jo
ret
sub
adc
pushf
push
inc
push
add
add
and
push
mov
lods
mov
rol
adc
es
mov
or
adc
ja
add
or
or
sbb
push
sub
pop
test
xchg
and
add
push
leave
add
push
push
ss
jg
or
dec
pop
inc
test
adc
or
add
pop
jo
and
add
xchg
jg
or
mov
ins
or
es
xchg
push
dec
adc
imul
jmp
loope
push
cmp
in
mov
mov
sbb
and
rcr
and
or
pop
xchg
ret
ss
adc
xchg
mov
inc
add
xor
jo
sbb
test
or
or
in
js
mov
jnp
or
push
imul
cmp
sbb
mov
test
mov
mov
push
cmp
xchg
cdq
add
sti
add
int3
test
inc
fwait
aaa
enter
lods
sub
adc
jne
loop
xor
mov
xchg
dec
test
scas
inc
or
nop
das
or
dec
sahf
add
push
and
hlt
jmp
rcl
sub
xchg
mov
pop
jnp
xor
js
xchg
jge
movs
pop
add
pop
push
packsswb
mov
repz
test
mov
fadd
jns
mov
jns
add
sbb
aas
lea
out
ins
sahf
shl
push
ds
pop
in
pop
fcomp
add
(bad)
vmsave
xchg
adc
push
rcl
mov
cmp
stc
add
add
test
sub
(bad)
aad
loop
in
mov
xor
cld
jae
xor
inc
icebp
lds
add
pop
xor
xor
adc
adc
add
adc
cwde
and
mov
loopne
bound
mov
cmp
aaa
lods
inc
dec
fadd
sub
adc
mov
loopne
adc
push
stos
sbb
in
cmp
ficom
pop
xor
in
sub
sbb
loopne
cmp
loopne
xor
xchg
adc
sub
hlt
push
cmp
inc
pop
adc
mov
mov
inc
imul
sub
sub
jmp
les
xlat
sbb
bound
addr16
inc
adc
dec
sbb
test
push
inc
dec
pop
fs
push
in
hlt
lea
cmp
dec
xor
imul
cld
adc
ret
pop
push
sub
enter
adc
pop
pop
jmp
fistp
xor
pushf
leave
in
cs
add
adc
inc
or
cdq
mov
outs
das
add
int3
pop
ret
dec
dec
xor
lahf
jecxz
js
cli
sub
mov
dec
jl
push
and
jno
ficom
call
(bad)
fild
push
inc
adc
inc
adc
call
shr
or
and
mov
xchg
(bad)
int3
and
adc
push
or
add
sbb
or
add
xchg
ja
cmps
pusha
push
outs
sbb
or
mov
xchg
xchg
dec
mov
push
or
pop
test
in
in
or
inc
in
mov
and
add
add
je
or
enter
push
inc
cmp
test
pop
(bad)
pop
push
jo
cli
xor
aaa
fs
sbb
shl
push
inc
adc
xchg
mov
xchg
hlt
adc
xor
jle
ret
sbb
lea
mov
and
lahf
push
or
retf
xor
or
adc
inc
or
mov
add
sar
sub
inc
push
mov
mov
pushf
dec
enter
(bad)
add
jno
jmp
xor
adc
adc
adc
fbstp
add
lock
inc
add
leave
cs
ds
or
lahf
xor
cmp
push
mov
add
xlat
(bad)
aas
ins
pusha
add
cmp
jne
add
stos
imul
iret
xchg
or
or
cli
int3
out
and
std
call
or
jne
ret
ret
retf
popa
loopne
shl
and
jne
fiadd
mov
xor
out
add
adc
adc
xchg
add
mov
enter
mov
lock
cmp
jns
jmp
mov
js
or
aaa
aam
sbb
inc
popa
sbb
add
mov
sbb
push
bound
test
cmp
inc
lock
and
int
jo
inc
bound
nop
or
pop
sub
mov
jmp
pop
add
sub
loope
js
and
sbb
push
mov
aaa
sub
and
inc
cmp
push
(bad)
mov
and
mov
in
leave
push
add
aad
pop
push
sub
push
loopne
ror
sub
inc
inc
jns
popa
rol
movs
adc
add
pop
ja
mov
imul
mov
pop
xor
inc
and
lock
jae
and
call
dec
inc
push
adc
mov
rcr
and
xchg
or
pop
pop
in
and
adc
nop
rcl
jno
enter
psubb
js
cmps
cmp
xor
mov
stos
mov
push
shl
in
aad
mul
mov
and
in
or
addr16
fsubr
stc
or
aaa
sbb
xchg
pop
sub
push
sub
mov
cmp
je
and
dec
add
pop
mov
push
and
stos
push
ja
mov
or
lods
rcr
cmps
icebp
scas
mov
xor
pop
fisttp
jmp
sar
mov
jmp
adc
jecxz
or
fist
add
es
dec
xchg
push
lahf
enter
push
mov
icebp
sar
(bad)
xchg
into
cmp
test
(bad)
outs
xor
lea
adc
daa
sar
repz
(bad)
hlt
mov
fsincos
outs
pop
pop
fisubr
(bad)
and
push
pop
pop
add
add
call
xor
setp
(bad)
test
fwait
sbb
lods
aas
ret
pop
aaa
mov
sbb
pop
push
push
(bad)
add
dec
mov
and
mov
add
(bad)
jmp
mov
cmps
cld
frstor
jle
cli
leave
add
and
pop
adc
or
sti
rol
adc
or
dec
test
adc
js
xor
push
(bad)
ds
jge
dec
les
mov
dec
cld
cmp
ror
(bad)
lock
and
popf
or
pop
cmps
and
jns
dec
dec
shl
sub
mov
bound
push
das
pop
scas
and
and
add
aam
add
xchg
sbb
test
or
es
add
xchg
and
in
lods
ins
mov
pop
pop
popf
in
add
sub
in
in
add
js
cmp
arpl
sub
mov
ret
mov
xor
repnz
sar
xor
add
pxor
inc
cmps
hlt
ins
xor
add
pop
pop
cli
ss
jne
pop
jne
dec
loope
xor
pop
xchg
and
ja
jmp
dec
icebp
data16
dec
in
pushf
popa
popa
sub
dec
lea
ds
or
(bad)
call
sub
es
fcomp
push
jl
add
(bad)
lods
(bad)
aam
pop
mov
inc
cmp
fnsave
or
repz
jnp
test
xchg
lahf
rcr
in
mov
add
add
mov
and
movs
arpl
lds
daa
adc
jne
adc
sbb
ja
jno
xor
leave
rcl
mov
sbb
jne
inc
lock
dec
dec
test
es
bswap
adc
sbb
add
push
inc
sub
retf
div
leave
inc
push
mov
je
cmp
pop
ret
hlt
push
ja
ret
lock
sub
mov
adc
cmc
add
pop
fwait
aas
lock
or
push
inc
lock
das
or
dec
push
pop
adc
pushf
call
cwde
(bad)
fidivr
les
mov
loopne
ret
add
adc
repnz
add
fdiv
push
adc
pop
lods
add
push
aas
hlt
dec
or
mov
add
add
dec
pusha
add
add
add
sbb
add
pop
pop
fdiv
inc
mov
adc
pop
add
sbb
xchg
das
aas
ss
stos
fistp
adc
push
push
sub
stos
push
add
xor
add
inc
sub
and
popa
jns
dec
dec
add
stos
sub
and
cmp
inc
cmp
sub
push
xor
ror
push
sti
and
cmps
mov
add
popf
add
or
and
jge
mov
xchg
push
sub
adc
in
arpl
or
xor
and
adc
cs
fcmovu
mov
clc
sbb
rcr
adc
xor
push
loopne
loopne
dec
cmp
jnp
cmp
rol
mov
push
add
adc
sub
ror
fwait
jg
fdiv
add
dec
out
xor
mov
or
inc
pop
jecxz
pop
js
(bad)
repnz
jmp
xor
xchg
mov
mov
mov
test
cld
mov
jmp
inc
shr
sub
sbb
pop
mov
xchg
inc
mov
and
loop
xor
xor
je
rcr
movs
scas
call
pop
ins
shl
push
push
push
xor
test
dec
cld
sbb
mov
pop
nop
mov
xchg
inc
clc
mov
lahf
mov
inc
or
xchg
les
outs
sbb
push
jecxz
inc
mov
xchg
push
mov
inc
into
mov
outs
rol
pop
call
pop
lds
and
push
add
mov
and
pushf
or
fdivr
dec
push
or
xor
loop
rcl
and
add
enter
aaa
or
outs
pavgw
mov
mov
loope
and
mov
or
mov
and
jbe
bound
jle
(bad)
push
and
or
test
into
gs
stos
cmp
dec
pop
push
add
push
and
inc
xor
clc
or
call
jg
xor
les
mov
lock
mov
sub
enter
inc
dec
pop
sub
push
cmp
scas
arpl
sub
inc
and
adc
cmp
and
dec
cmc
sub
inc
xor
push
cmp
xchg
and
cmp
and
loop
jmp
cmp
add
je
jbe
outs
adc
mov
or
add
inc
mov
les
add
add
sbb
sbb
aam
or
call
inc
jne
pop
call
mov
adc
sub
pop
nop
dec
jmp
cmps
and
sub
dec
arpl
ins
sbb
adc
sub
push
test
and
add
not
and
cmp
dec
pusha
or
loopne
rep
add
or
aam
dec
sbb
aam
and
jg
movs
jb
cmp
aas
mov
adc
inc
add
sub
inc
call
jno
push
rcl
sub
retf
adc
mov
inc
mov
imul
leave
int3
jmp
jns
mov
in
sub
nop
sbb
jl
in
adc
jmp
push
cmp
in
jl
in
jg
mov
cmp
jl
pusha
inc
xor
jl
stos
ins
pop
sbb
mov
daa
jecxz
and
xor
mov
adc
xchg
mov
call
mov
or
inc
or
adc
adc
dec
div
adc
adc
adc
pop
push
xchg
add
push
add
mov
sub
inc
int3
jg
and
lahf
or
rcl
jae
mov
or
push
pop
bound
adc
out
popa
add
fstp
fistp
fs
fisttp
fld
fnsave
inc
and
add
pop
sub
and
dec
pop
fisttp
or
lea
dec
scas
inc
and
(bad)
xchg
sbb
pushf
adc
xchg
adc
in
lock
adc
loop
inc
xor
pusha
lock
adc
inc
(bad)
jmp
mov
cmp
fild
fild
add
mov
mov
mov
pusha
and
cmp
mov
and
sub
cmps
sub
or
cs
sbb
add
jo
lea
sbb
adc
call
dec
mov
push
pop
add
(bad)
fst
jbe
aas
fisttp
fistp
movs
push
add
aas
or
pop
sub
or
call
nop
test
xchg
inc
mov
lahf
sub
sub
sbb
xor
xchg
and
push
adc
mov
pop
dec
add
add
xor
add
fs
(bad)
mov
mov
ins
push
iret
ror
lea
inc
adc
add
pop
pop
push
sub
xor
in
pop
mov
adc
push
mov
ret
lahf
sar
arpl
ins
and
lds
icebp
jmp
add
mov
out
fs
(bad)
icebp
jmp
shr
ja
add
inc
aaa
xchg
or
je
push
sbb
sub
gs
adc
pop
call
inc
fistp
lds
jo
push
loope
mov
xor
xor
(bad)
push
xchg
fisub
adc
ins
loop
pushf
lahf
push
xchg
mov
fsub
mov
push
pop
test
dec
lock
jmp
ret
mov
cmp
dec
sbb
and
pop
push
aad
test
push
icebp
mov
adc
les
lods
loopne
dec
push
sub
push
xor
sub
inc
or
pop
int
mov
and
test
pusha
mov
adc
cld
dec
dec
xchg
mov
je
bound
sar
inc
js
add
aam
and
sbb
bound
sbb
mov
sub
add
pop
xchg
rcl
pop
fcom
es
loopne
add
add
adc
lahf
mov
rcr
inc
sub
adc
xchg
jp
sub
push
xchg
daa
and
movs
movs
mov
or
fsubr
inc
movs
loop
pop
add
cmp
mov
xchg
inc
shl
and
addps
and
test
and
push
aad
push
jo
dec
out
leave
mov
mov
jo
or
stos
gs
aad
push
out
mov
pop
aam
add
in
lahf
or
add
cld
mov
mov
cmps
pop
or
pop
sub
cmp
xchg
test
inc
fcomip
adc
shl
neg
sbb
pop
scas
add
test
add
add
clc
and
sbb
loopne
xchg
mov
in
rcl
add
mov
ins
pop
adc
rcr
shr
push
out
cmp
fs
rol
dec
jg
sbb
outs
mov
test
data16
and
mov
sti
jmp
sub
mov
test
or
inc
add
sti
je
push
add
retf
push
lods
jecxz
adc
loopne
or
adc
and
mov
neg
push
inc
and
and
verr
bound
add
xchg
pop
dec
(bad)
test
xor
add
xchg
popa
test
or
lds
push
call
mov
sbb
movs
test
movs
add
(bad)
cdq
and
push
jl
jecxz
mov
xor
mov
sete
inc
cs
fwait
jecxz
push
adc
jge
xor
rcl
cld
add
sub
imul
enter
loope
dec
pusha
and
and
pop
push
lods
test
cmps
aam
xor
xlat
and
test
cmp
and
in
sbb
dec
inc
jb
or
jo
fs
sub
push
cmp
xor
and
imul
mov
dec
add
mov
add
mov
and
xchg
add
cld
and
mov
sub
idiv
and
inc
outs
adc
push
jno
frstor
shr
sbb
ins
lds
or
sbb
xor
cli
ins
xchg
call
call
pop
and
ficom
jne
adc
pop
or
mov
ret
fwait
adc
sbb
xchg
or
sbb
outs
mov
mov
mov
sbb
adc
sub
psubusw
mov
sbb
pop
cwde
inc
dec
es
add
mov
repz
jno
cmps
xor
xchg
mov
add
pop
mov
js
add
push
or
add
loop
adc
sbb
sahf
jo
push
add
xchg
pop
sbb
call
inc
shr
push
ret
jp
pop
in
push
pop
sbb
sbb
mov
adc
lock
ins
mov
inc
sub
jmp
sub
test
inc
pop
sub
sbb
test
inc
clc
ret
jmp
clc
mov
and
loopne
add
jbe
loope
inc
inc
mov
fcmovnb
mov
sub
outs
pop
mov
push
nop
and
bound
push
mov
add
cmps
and
aam
cmp
xchg
dec
or
aam
in
adc
mov
add
inc
pop
push
movs
(bad)
rcl
mov
add
in
push
push
js
fcomp
sti
or
push
or
test
mov
or
dec
xor
or
cmp
adc
xchg
je
ror
push
and
aam
inc
imul
xor
js
xor
loopne
test
fdiv
add
jl
pushf
inc
sbb
mov
push
loopne
dec
xor
sbb
dec
xchg
dec
fcom
mov
dec
sbb
icebp
les
adc
mov
add
adc
lock
push
xchg
(bad)
or
or
inc
pop
test
test
and
mov
dec
xchg
and
dec
loop
mov
add
js
lea
mov
loope
loopne
lds
test
add
call
or
pop
aam
jo
jge
push
inc
sbb
or
pop
sbb
pop
add
xor
xor
das
push
ins
and
in
adc
call
pop
sub
aam
sbb
imul
or
es
push
jo
test
je
stc
add
sbb
pop
or
and
in
and
dec
ret
push
movs
pop
add
arpl
jg
pop
dec
dec
add
ret
push
mov
movs
mov
pop
or
add
add
fs
imul
shl
sbb
xor
add
sbb
inc
pop
enter
ror
cmp
loopne
mov
adc
mov
xor
and
(bad)
add
inc
fstp
pop
dec
and
sbb
in
dec
xor
and
mov
pop
lods
retf
push
pop
dec
xor
and
push
xor
or
mov
and
imul
jnp
xor
and
lock
bound
jmp
sub
adc
ficom
ins
mov
lods
and
daa
push
xchg
fstp
fwait
sbb
xor
in
xchg
loope
aaa
dec
inc
sub
fs
fxch
adc
daa
loope
dec
dec
add
dec
cdq
mov
imul
loopne
pop
das
mov
mov
push
mov
clc
cmp
mov
or
pop
xchg
adc
mov
inc
push
adc
test
aam
xor
cmp
fadd
cli
sahf
lock
aaa
pop
lds
inc
sub
mov
adc
packsswb
or
movs
loopne
add
test
sbb
retfw
or
push
mov
cmp
fstp
mov
inc
or
add
add
dec
out
sbb
sbb
mov
pop
bound
mov
aam
adc
add
add
loopne
rcr
sbb
je
sub
and
dec
popf
test
sub
push
add
push
add
dec
push
movs
cmps
adc
pusha
dec
adc
adc
sbb
push
imul
test
add
fadd
inc
ret
call
mov
add
jp
test
add
jl
(bad)
pushf
mov
add
std
mov
dec
nop
sbb
mov
xor
outs
push
push
xor
add
push
mov
push
xchg
and
xor
movs
push
jg
push
lea
hlt
mov
push
add
jne
clc
and
inc
or
mov
xor
and
pop
pop
inc
jmp
or
jecxz
pusha
dec
xor
adc
pop
das
or
jge
ss
push
sub
in
aaa
mov
es
nop
adc
aam
push
cmp
jge
cli
push
inc
clc
jnp
pop
adc
fwait
sbb
into
fld
or
dec
cld
lea
daa
adc
sbb
mov
xchg
mov
add
test
ret
and
xchg
les
jo
mov
push
cmps
jp
inc
or
pop
sbb
and
mov
ja
ja
mov
add
push
lods
add
out
in
mov
jmp
pop
mov
or
sub
or
adc
and
sbb
lds
and
mov
inc
or
nop
push
and
lock
jmp
push
and
dec
inc
dec
dec
adc
pop
push
stos
jmp
push
xor
or
pop
popa
not
xor
ds
pop
sub
sbb
inc
and
mov
xor
popf
push
retf
cmc
and
sbb
push
adc
push
sub
adc
cld
mov
dec
xchg
mov
xor
pop
test
jle
jne
add
push
cli
xor
push
nop
ret
or
and
test
add
dec
jmp
mov
or
adc
sti
outs
cmp
leave
mov
or
xchg
xchg
test
xor
daa
lods
xchg
test
jne
adc
stos
pushf
js
call
inc
xchg
add
jne
cli
sub
or
add
in
lock
add
inc
pop
pop
inc
mov
jp
dec
add
push
xor
push
xor
or
scas
mov
dec
dec
or
dec
sbb
mov
mov
xor
mov
jns
les
or
jns
push
or
fdivr
xlat
add
or
push
xchg
test
fisub
pop
add
jl
movs
mov
sar
cmp
cmp
daa
pop
or
loopne
hlt
dec
pop
and
test
lea
pop
(bad)
mov
or
xchg
push
mov
dec
add
cdq
nop
jp
push
mov
movs
arpl
(bad)
fsub
sbb
mov
stos
mov
sbb
in
inc
cmp
aaa
add
mov
push
fadd
dec
fcomp
and
mov
mov
dec
je
cmp
cmp
push
sahf
dec
pusha
xlat
pop
xor
or
mov
jnp
mov
fistp
stos
nop
dec
push
pop
sbb
nop
mov
sub
or
aad
dec
push
dec
movs
inc
push
and
fdivr
push
sub
push
sub
outs
fcom
ds
jo
dec
mov
movs
xchg
jne
add
mov
pop
lock
popf
adc
mov
(bad)
add
cmp
nop
push
lahf
pop
pop
push
push
adc
or
mov
les
mov
not
xchg
sub
lahf
jmp
pop
dec
dec
dec
xchg
add
jb
mov
sbb
icebp
arpl
cmp
adc
aas
cmp
lods
sbb
fild
aam
pop
shl
xchg
inc
mov
add
mov
adc
mov
and
(bad)
daa
lock
jl
cmp
(bad)
sbb
mov
and
cmp
xchg
or
jns
or
inc
rcl
push
mov
push
add
sbb
sbb
aad
jno
mov
shl
mov
and
shl
adc
push
sub
call
mov
xchg
push
loope
icebp
and
xor
sub
cmp
sahf
jl
push
and
or
test
adc
jo
dec
call
cli
call
mov
push
jne
or
out
xchg
pop
call
xor
or
and
aas
sar
and
call
es
push
inc
dec
adc
aas
(bad)
imul
add
adc
add
or
inc
test
cwde
jmp
inc
gs
int
cmc
mov
push
add
lahf
jno
cmp
or
mov
movs
mov
out
sub
cwde
push
xchg
inc
test
and
dec
cmp
retf
inc
dec
xor
and
adc
lock
dec
js
fisubr
outs
iret
mov
iret
nop
xor
movs
(bad)
xor
mov
add
imul
fbld
xchg
pop
mov
hlt
and
pop
add
mov
sub
or
imul
shl
lea
int
imul
dec
js
fsubr
mov
pop
(bad)
inc
sbb
inc
dec
ja
ror
adc
xchg
aam
not
js
sbb
xchg
rol
xor
(bad)
adc
mov
push
or
sbb
and
or
ror
je
inc
cmp
retf
rcr
add
inc
mov
(bad)
pop
push
stc
and
push
cld
in
aam
test
mov
xlat
xchg
(bad)
adc
add
sub
rol
mov
jne
add
or
pusha
add
in
mov
mov
pop
push
jmp
ret
iret
push
sbb
(bad)
mov
adc
fs
call
mov
cld
mov
cmp
jo
test
fadd
mov
ret
(bad)
fs
ret
rcl
add
push
fs
pop
xor
jae
or
in
pop
aad
dec
sub
ret
mov
arpl
xor
or
mov
xor
arpl
mov
(bad)
(bad)
add
dec
inc
jmp
push
shl
mov
xchg
pusha
leave
add
fsubr
test
sbb
inc
jbe
pop
dec
push
adc
nop
push
out
idiv
sbb
pop
aas
mov
out
cmp
dec
xchg
fstp
aas
mov
add
cwde
dec
sub
cmp
ins
jmp
mov
push
push
(bad)
inc
sub
imul
je
sbb
adc
jmp
inc
aad
int3
enter
push
sbb
fstp
mov
add
cmp
pop
mov
add
and
fwait
push
cmc
enterw
add
rol
add
sbb
push
xor
adc
sub
push
sub
dec
jg
inc
push
fdivp
sbb
les
sub
push
in
movs
xchg
xor
jne
gs
add
pop
dec
inc
lock
adc
jl
mov
fs
sbb
mov
inc
les
fs
cmp
out
inc
pop
inc
mov
jne
ins
ret
loope
adc
arpl
pop
add
mov
int
adc
or
mov
inc
and
add
adc
add
test
std
adc
push
cmp
jmp
call
fisttp
test
jns
inc
inc
pop
out
add
push
or
cmps
adc
fst
out
mov
movs
xor
ins
pop
sbb
ror
or
adc
inc
push
adc
and
sbb
gs
int3
pop
adc
ror
scas
push
xchg
sbb
push
sbb
ror
fidiv
ror
inc
ret
cwde
or
jo
dec
add
inc
jg
or
call
adc
add
cmp
lahf
shl
dec
popa
ret
xchg
add
and
lds
jo
stos
push
mov
cmp
mov
mov
and
and
adc
into
adc
loop
cmp
les
leave
out
or
pop
inc
add
inc
js
xchg
ret
xchg
lock
ret
int
xchg
nop
rol
mov
cmps
and
mov
and
jne
loopne
mov
or
or
sub
mov
sub
call
adc
cmp
push
sub
mov
movs
popf
sub
push
cwde
ins
mov
cld
gs
fbld
outs
(bad)
sti
dec
cld
or
and
fwait
push
push
imul
(bad)
aad
jmp
pop
and
pop
shl
leave
mov
or
(bad)
fsub
push
mov
add
dec
mov
pusha
inc
sbb
xor
gs
pusha
or
jbe
sub
fistp
or
cmp
push
mov
xchg
adc
add
mov
or
popa
pop
jg
les
jnp
and
or
mov
lahf
and
sahf
ja
and
cmp
and
jecxz
ror
sub
mov
lods
pop
lods
xchg
add
dec
cld
adc
repnz
pop
and
mov
sub
mov
or
cli
test
aas
fist
and
xor
mov
ret
jp
push
(bad)
or
pop
mov
pushf
xchg
mov
jle
add
sub
data16
xchg
add
jne
mov
dec
cli
into
inc
fxch
cmp
icebp
add
or
or
or
mov
mov
mov
adc
pushf
test
leave
add
sbb
or
adc
sbb
add
jb
dec
frstor
xor
adc
loop
push
or
adc
or
mov
xchg
ja
add
cli
or
iret
inc
rcr
and
xchg
xchg
movs
es
mov
inc
inc
and
inc
mov
mov
cs
xor
call
and
and
fadd
ins
ins
test
rcr
add
adc
retf
lock
or
jno
or
retf
imul
loope
inc
sub
lods
test
inc
or
repz
xchg
xor
fwait
clc
xchg
lock
push
jno
or
hlt
jmp
movs
ror
fwait
inc
shl
fisttp
dec
inc
hlt
or
test
ins
or
add
mov
cmp
call
lahf
cmc
jae
aas
adc
into
inc
and
mov
or
add
ffreep
imul
mov
ret
inc
ja
or
add
sbb
and
out
add
pop
pop
sub
sbb
mov
lea
mov
inc
sub
and
test
rol
leave
adc
shl
jge
mov
adc
test
push
push
adc
push
loope
cmp
cmp
inc
cmp
arpl
jne
mov
inc
inc
mov
cmps
add
cld
fbld
push
sub
sub
or
loope
adc
and
cwde
pop
adc
jmp
inc
mov
push
mov
rcl
sub
or
call
xor
cmp
test
dec
push
nop
jp
push
shl
add
or
and
add
push
adc
je
sub
mov
and
adc
inc
jl
mov
adc
adc
or
jne
js
xchg
stc
cmp
test
add
loope
scas
ins
loopne
popa
push
push
or
pop
and
pop
mov
test
fadd
xor
les
push
sbb
outs
or
(bad)
mov
int3
push
fiadd
pop
jge
and
cdq
test
call
xor
sub
add
mov
or
push
mov
dec
cmp
sub
ror
and
and
fwait
add
push
sti
les
les
mov
push
mov
sub
js
or
leave
sbb
push
mov
imul
adc
pop
pop
mov
add
inc
dec
and
inc
push
jns
jg
jp
adc
ins
and
or
cdq
fcom
add
sub
pop
pop
lea
mov
mov
pop
mov
inc
and
pop
cmp
or
mov
pop
adc
rcl
wbinvd
js
je
stos
add
add
pop
adc
push
and
inc
add
daa
test
dec
dec
inc
cmp
test
push
xchg
leave
xor
pop
movs
adc
repz
shl
lea
icebp
mov
fnstsw
push
adc
cli
and
adc
add
xor
call
js
push
add
add
jmp
add
adc
scas
adc
xor
sbb
aas
loopne
add
pop
lahf
or
inc
mov
sbb
xor
shr
ret
adc
call
enter
mov
aas
mov
mov
jg
push
mov
jecxz
or
mov
xor
or
hlt
movs
cmp
and
xchg
lock
or
xor
xchg
icebp
add
mov
inc
push
stos
pop
ret
loopne
cmps
mov
sub
loopne
xor
sbb
and
adc
adc
lahf
mov
mov
sbb
push
push
jbe
(bad)
int
rcl
jo
test
je
xor
sub
jns
xchg
or
adc
and
fadd
mov
push
pop
inc
sbb
mov
cmp
pop
dec
das
add
movs
push
lock
and
ret
pusha
dec
leave
ror
dec
sub
test
shr
pop
int
pushf
mov
sbb
jmp
mov
and
outs
push
jg
dec
adc
sub
adc
in
cmp
mov
pop
fistp
mov
push
push
je
popa
xchg
popa
fldcw
xchg
mov
and
push
push
add
loopne
push
nop
mov
(bad)
rcr
or
jmp
xchg
mov
push
int
sbb
add
sbb
rcr
fsubr
dec
popa
push
dec
add
pop
mov
shl
fwait
pusha
jge
fild
jne
lea
mov
add
sub
data16
mov
stos
dec
setne
and
or
fdiv
test
hlt
inc
xchg
or
lods
popa
loopne
xchg
ficom
(bad)
dec
push
add
sbb
xchg
mov
xchg
movs
push
or
adc
sbb
call
sbb
mov
push
sbb
inc
jo
jg
xor
or
add
add
inc
cmps
xor
cmps
fild
pop
cmp
nop
or
ficom
and
aas
pop
and
mov
push
(bad)
sbb
int
nop
je
or
pusha
stos
cmc
clc
xchg
nop
mov
xchg
int3
and
xor
outs
sub
add
in
out
shr
mov
shl
sub
jl
cmp
mov
xchg
xor
clc
jg
movs
or
and
sbb
fdiv
sbb
mov
(bad)
fnstcw
or
inc
and
ret
js
or
cmp
add
xchg
and
(bad)
test
cdq
jno
es
jmp
adc
cmc
inc
test
je
iret
(bad)
pusha
scas
popf
pushf
mov
add
push
sub
jmp
fdivr
inc
and
and
cmp
pop
dec
xchg
jno
sbb
xor
lods
xchg
inc
or
enter
or
outs
in
daa
pushf
sahf
test
int
sbb
nop
fldcw
mov
ret
and
or
bound
fadd
adc
ret
(bad)
and
test
gs
push
pusha
or
mov
into
inc
mov
jecxz
push
dec
addr16
arpl
adc
add
sub
rcr
sbb
jle
pusha
push
add
pop
inc
hlt
push
test
push
xchg
retf
mov
and
sbb
imul
pusha
aam
add
and
pop
sub
stos
push
jno
scas
mov
push
mov
loopne
movs
movs
lea
imul
sub
enter
xchg
and
cdq
or
lds
sub
pop
pop
aaa
shr
push
cld
mov
jmp
adc
mov
mov
rol
inc
inc
call
add
sub
out
add
dec
inc
pop
inc
scas
add
adc
add
sbb
call
add
sub
pop
adc
pop
dec
add
cdq
or
mov
or
pusha
xlat
sbb
or
or
and
imul
push
mov
lods
les
push
shr
inc
dec
add
and
sbb
push
sub
jnp
xlat
or
fidivr
into
xchg
and
or
mov
xor
pop
mov
mov
das
inc
xor
inc
jne
or
and
imul
cmp
rol
jne
xlat
sbb
and
stc
xor
les
add
(bad)
in
mov
inc
jge
ds
jmp
adc
add
(bad)
loopne
push
call
mov
adc
or
js
mov
jo
push
fiadd
add
inc
xchg
or
add
push
cdq
dec
xchg
or
inc
fiadd
or
aam
or
inc
cmps
xor
stos
pop
rcr
cmp
xchg
in
fcomp
pop
aam
push
gs
lods
daa
test
adc
fst
sub
add
(bad)
rcl
aad
and
pop
mov
aad
rcl
test
rcr
aad
xlat
aam
add
inc
pop
jle
pop
fadd
(bad)
(bad)
sti
stos
loope
or
and
mov
sti
movs
sar
sbb
add
pusha
dec
cmp
fisttp
jl
daa
pop
inc
fsub
imul
jmp
mov
imul
adc
outs
add
je
std
lock
jo
xchg
add
or
retf
pop
cmps
lods
pop
test
(bad)
popa
push
ins
mov
mov
cmp
inc
or
mov
das
dec
aam
push
in
pop
add
push
mov
or
mov
aam
mov
add
add
inc
or
jno
or
inc
in
cld
cmp
mov
sub
shl
mov
xchg
rcr
xor
add
aad
xchg
lock
adc
inc
icebp
xor
mov
mov
and
cld
mov
xor
mov
aas
add
sar
and
adc
mov
int3
fild
xchg
add
add
jge
push
add
ret
hlt
(bad)
test
fcomip
out
mov
inc
sub
and
push
dec
sub
mov
mov
stc
fistp
xchg
and
mov
aas
mov
mov
mov
xchg
aaa
test
dec
aad
mov
unpcklps
pop
mov
or
fstp
or
inc
cld
(bad)
mov
imul
add
outs
pop
or
sbb
push
mov
mov
jl
add
inc
or
mov
aas
test
sub
mov
int
movs
lahf
daa
xchg
cmp
daa
test
sub
inc
add
movs
fs
mov
add
inc
je
jge
sar
mov
rcl
mov
adc
or
mov
fst
or
cmp
mov
int3
fbld
int3
and
gs
mov
inc
nop
inc
sub
pop
or
ins
lea
or
pushf
jmp
pop
loopne
and
add
in
dec
sub
and
nop
mov
push
rcl
stc
movs
lock
and
pusha
inc
adc
adc
mov
mov
imul
and
or
mov
sbb
jmp
push
sbb
inc
or
popa
sbb
dec
test
mov
pop
out
popa
cmp
jae
xchg
add
push
adc
lods
shl
xor
and
adc
mov
jae
jmp
inc
loopne
jp
add
xlat
sub
les
add
sub
ret
jae
inc
mov
shl
add
jg
arpl
dec
dec
xor
add
dec
mov
es
xor
inc
adc
add
dec
jmp
mov
xor
adc
push
imul
adc
inc
xchg
addr16
xor
es
ret
cmp
shr
retf
push
mov
lock
inc
and
mov
and
fdiv
inc
es
stos
lods
and
adc
fsub
xor
sub
dec
pop
cmps
scas
xchg
adc
xchg
(bad)
adc
xchg
std
push
xor
cmp
cmp
shl
or
dec
xchg
add
mov
add
adc
les
pop
cdq
add
sub
inc
call
adc
mov
daa
sub
fcomp
xor
push
ins
mov
test
lods
sbb
push
push
adc
add
pop
sbb
lods
mov
add
aaa
test
rcl
loop
push
adc
imul
outs
inc
or
cld
or
push
pop
icebp
cmp
or
pop
or
adc
rol
sbb
push
enter
inc
or
push
sbb
add
and
inc
add
and
pop
pop
cmps
xor
jne
and
dec
xchg
mov
popa
cmp
call
xchg
xor
dec
and
aam
inc
mov
jl
inc
rcl
mov
jbe
(bad)
fmul
scas
inc
and
adc
sub
test
add
ins
cdq
xor
inc
pusha
mov
pusha
les
dec
shr
or
jg
inc
and
sbb
cmp
test
mov
mov
jg
mov
data16
jg
add
or
out
or
cs
shr
sbb
mov
adc
fs
or
or
mov
fiadd
adc
mov
inc
push
pop
in
or
pop
mov
std
pop
pop
pop
add
add
sbb
add
mov
adc
nop
mov
sbb
rol
inc
add
xor
rol
push
daa
cmp
push
mov
add
push
test
adc
xchg
in
mov
(bad)
out
pop
push
movs
inc
scas
pop
mov
pop
add
fst
hlt
jno
shl
jecxz
or
dec
aad
jg
add
fiadd
dec
add
(bad)
dec
mov
inc
pop
dec
cld
xor
lds
loopne
arpl
sbb
add
push
mov
icebp
add
cmp
fiadd
inc
dec
or
fcom
inc
es
out
or
inc
shl
cld
hlt
and
xor
add
scas
cdq
clc
add
bound
or
cmp
inc
popf
fidivr
mov
jecxz
sub
jne
mov
pop
add
sub
rol
cdq
aam
dec
mov
jae
push
stos
cmp
mov
push
das
jecxz
les
push
shr
mov
push
sub
nop
push
add
mov
add
or
cdq
mov
stos
inc
pop
mov
adc
mov
and
and
jge
adc
add
mov
popa
mov
mov
enter
pop
in
in
add
test
je
aas
or
ja
and
loopne
and
pop
and
xor
jmp
es
out
fadd
sub
sbb
cmp
and
mov
sub
sti
sbb
dec
xlat
fwait
xchg
push
jb
inc
inc
inc
inc
cwde
dec
aaa
and
lock
cmp
cmp
pop
jecxz
xchg
adc
push
(bad)
cmp
inc
lock
add
psubusb
add
call
es
push
sub
adc
mov
ret
(bad)
add
add
loope
mov
xchg
add
and
dec
cmps
add
xchg
and
sbb
jo
mov
adc
add
sbb
dec
sbb
add
pop
int
jmp
adc
inc
jmp
mov
push
sub
add
in
and
pop
mov
and
xor
or
add
pop
repz
cdq
js
pusha
lahf
pop
sbb
lahf
shr
pop
push
int
inc
jmp
loop
mov
int3
sub
inc
test
(bad)
cmp
adc
fld
aad
pushf
cdq
int3
inc
push
jno
rcl
adc
hlt
mov
mov
sti
cld
call
push
add
fistp
push
lahf
inc
rol
scas
adc
enter
arpl
outs
add
pop
sbb
cmp
and
jo
neg
and
or
and
push
add
loop
mov
and
lahf
sub
mov
sub
xchg
(bad)
or
es
xchg
push
or
mov
je
aaa
or
inc
fimul
pop
adc
jg
test
sub
shl
mov
mov
shl
inc
repnz
inc
sti
call
xor
out
sar
sbb
dec
scas
xchg
test
scas
loope
xchg
mov
jae
xchg
mov
les
and
mov
pop
adc
cwde
xor
inc
je
test
jg
push
dec
adc
jns
in
sub
retf
pop
sub
fld
sbb
retf
inc
jo
ins
xor
jnp
or
lock
aam
movs
and
ret
dec
mov
cmp
fimul
xchg
mov
cmp
mov
ins
lahf
adc
rol
es
or
mov
fistp
mov
test
adc
or
or
ins
mov
mov
test
push
jo
pop
(bad)
loopne
push
and
adc
mov
sbb
xor
in
mov
test
dec
test
in
pop
test
repnz
mov
test
push
jmp
xchg
ss
stos
arpl
dec
or
test
inc
or
mov
jecxz
or
movs
mov
or
mov
mov
push
cmc
mov
pop
fdiv
mov
scas
and
sbb
mov
test
shl
xor
xor
push
movs
cmc
mov
dec
pop
fadd
inc
rsqrtps
aam
xor
cld
jne
adc
outs
fisub
pop
mov
sub
cmp
pop
rcl
dec
repz
add
fcomp
cwde
rcr
or
mov
inc
push
and
pop
cmp
adc
ja
mov
jg
ret
aaa
push
add
add
mov
sbb
dec
mov
test
xchg
push
mov
es
popa
inc
add
push
enter
jmp
add
test
or
dec
mov
and
and
call
retf
add
add
add
xchg
dec
dec
add
inc
dec
pop
pop
in
leave
inc
jo
shr
nop
int3
push
pop
fnstenv
pusha
and
dec
xlat
daa
inc
add
jae
mov
push
add
mov
mov
enter
or
pop
add
cmps
das
lea
add
mov
ins
in
cmps
arpl
les
ins
aam
ds
cwde
xchg
xchg
mov
xchg
loopne
mov
cwde
mov
das
push
sub
xor
push
xor
loopne
xor
test
push
fistp
cmp
inc
aam
data16
mov
loope
sub
aas
inc
shl
cmps
sbb
jge
add
lods
dec
stc
add
inc
retf
jecxz
(bad)
sbb
cmp
xor
(bad)
lock
les
push
jecxz
inc
jnp
les
xchg
add
or
or
sub
sbb
inc
sbb
dec
cmp
daa
dec
iret
ins
into
sbb
shl
add
into
adc
loop
push
fnstcw
and
mov
jp
add
arpl
or
xor
pop
mov
mov
inc
aam
add
xchg
and
jno
or
jecxz
in
sub
movs
dec
les
popf
inc
or
pop
inc
pop
adc
dec
cmp
outs
jb
nop
or
dec
or
inc
movs
inc
outs
repnz
pop
les
dec
(bad)
daa
lahf
lods
mov
imul
dec
leave
mov
cmp
pop
enter
xor
cmp
push
inc
cld
pop
cdq
inc
loopne
dec
hlt
and
icebp
movs
hlt
(bad)
sub
or
les
and
jo
hlt
jmp
inc
clc
imul
dec
mov
les
sub
jo
mov
loopne
pop
push
pop
out
test
lods
sub
push
fs
sub
or
nop
mov
jecxz
sub
adc
adc
cmp
pop
mov
push
jmp
sub
test
aaa
add
test
sbb
sbb
imul
shr
dec
outs
or
adc
test
sbb
dec
rcl
cmc
stos
inc
adc
sbb
push
inc
dec
aaa
dec
adc
ret
jg
push
outs
and
mov
cs
mov
dec
dec
enter
add
sti
fild
js
sub
fbld
add
rcr
jb
pop
dec
ret
push
popa
sub
pop
cmps
jne
and
adc
cld
add
and
mov
loopne
into
add
leave
fadd
xor
popa
dec
dec
mov
(bad)
adc
js
mov
mov
xchg
or
imul
dec
pusha
imul
mov
jns
cdq
rcl
or
inc
cdq
ja
xor
add
scas
fs
push
jnp
jge
wbinvd
mov
lods
or
sub
push
mov
or
stos
js
retf
enter
push
aad
jl
mov
enter
xor
and
and
pop
or
dec
adc
shr
and
add
mov
cmps
sub
adc
or
cmc
and
mov
sub
loope
test
test
push
push
aam
xchg
jg
fidiv
and
pop
dec
sbb
int3
adc
mov
cld
jmp
call
sub
pop
das
adc
in
inc
and
push
call
jg
fadd
sub
sbb
inc
leave
and
add
je
mov
mov
aad
jne
xor
or
fistp
fadd
mov
cs
call
sub
sub
push
or
or
xchg
mov
push
or
inc
cdq
or
ds
pop
ja
push
retf
movs
jne
outs
inc
jb
out
ret
sub
mov
movs
add
add
hlt
ret
lock
loopne
test
cmp
sub
xor
mov
add
int
add
out
mov
movs
or
pop
aas
pop
mov
dec
and
adc
or
dec
aas
lods
enter
cmp
pop
add
jmp
js
push
dec
sti
xchg
cmp
aaa
and
push
repz
add
pushf
(bad)
in
xor
mov
pop
bound
lock
adc
inc
xchg
lods
add
jmp
outs
(bad)
icebp
outs
rol
sub
push
jb
mov
mov
test
mov
dec
xlat
icebp
sub
sbb
in
adc
add
shl
int3
mov
or
or
sub
dec
dec
inc
or
xor
and
js
push
sub
or
popa
sub
sub
or
loope
add
mov
jns
jg
or
mov
ins
fld
test
sub
push
mov
fadd
xchg
cmp
inc
inc
mov
mov
ret
(bad)
and
sbb
movs
adc
adc
cmp
xchg
int
mov
add
pop
sbb
pop
sub
fadd
push
test
xchg
ss
jecxz
adc
(bad)
inc
cmps
xor
adc
sbb
dec
cwde
pop
cwde
and
sbb
mov
jecxz
stc
push
and
dec
pop
xchg
call
cmp
add
cmp
lock
mov
dec
inc
push
mov
addr16
xor
add
lock
lods
out
lock
nop
jmp
add
outs
mov
xchg
xor
dec
sub
rcl
aaa
imul
lods
mov
inc
jne
pusha
icebp
icebp
outs
pop
sub
shl
xor
sub
popf
js
pop
add
and
sbb
sbb
pusha
(bad)
push
test
pop
hlt
mov
mov
and
jnp
imul
stos
test
imul
jo
mov
lods
sub
add
mov
pop
jg
adc
movs
sar
and
test
push
outs
ret
adc
cld
push
dec
js
cmps
popa
fadd
mov
(bad)
mov
push
fs
push
movs
jmp
test
ret
add
adc
pop
and
add
ja
adc
fisttp
jle
xchg
add
movs
pop
shl
jle
retf
xor
push
inc
pop
mov
xor
sub
xchg
call
cmp
and
adc
or
inc
sub
pop
add
fldenv
shl
ins
loop
gs
or
mov
je
xchg
fcmovnu
xor
fisub
add
and
push
popa
xchg
or
lock
sbb
dec
es
fs
sub
cdq
fs
xor
cmp
fs
dec
inc
inc
dec
fs
dec
es
push
push
xchg
dec
es
pop
pop
pusha
dec
es
fs
xchg
jo
js
mov
add
nop
popa
sbb
mov
cmp
nop
add
lods
mov
cmp
rol
nop
add
enter
nop
int3
rcl
cmp
loopne
cmp
add
nop
in
lock
cmp
add
clc
cld
add
sbb
sbb
enter
sbb
sbb
sbb
enter
cmp
sbb
sbb
enter
pop
pusha
sbb
sbb
enter
jl
add
enter
data16
and
push
aam
shl
add
mov
test
mov
mov
sub
(bad)
inc
or
mov
or
mov
movs
mov
xchg
push
les
mov
inc
pop
push
pop
aas
test
test
pop
int3
or
cdq
or
mov
push
inc
dec
mov
mov
push
test
inc
xchg
mov
data16
(bad)
or
or
and
arpl
daa
inc
(bad)
mov
pop
(bad)
jg
aaa
or
and
adc
ret
adc
or
mov
movs
mov
pop
iret
push
cmp
mov
jmp
or
add
push
aas
cs
sbb
lahf
pop
mov
loope
inc
ret
pop
dec
or
pop
cmp
ins
dec
sbb
and
mov
xchg
enter
ds
adc
xchg
mov
inc
inc
mov
inc
or
jge
mov
dec
push
adc
sub
in
inc
adc
sbb
push
out
xor
call
(bad)
lea
or
jne
push
inc
ret
aad
inc
ret
cmp
jb
adc
scas
test
xchg
xchg
(bad)
sar
rol
inc
push
pop
movs
inc
xchg
enter
sub
shl
push
aas
sub
cmp
leave
je
cdq
mov
ins
loop
imul
add
and
sahf
add
jno
push
push
inc
loopne
cld
inc
movs
sbb
mov
adc
xor
or
inc
and
pop
and
dec
xchg
bound
jge
fsubr
sbb
xor
add
fmul
mov
add
movs
loopne
jbe
outs
push
outs
and
jg
push
int3
and
in
xor
push
or
adc
movs
(bad)
or
adc
and
sub
out
addr16
sahf
jle
in
cmps
mov
inc
sub
jns
lea
popf
fsub
js
sub
cmp
pop
cmc
or
jge
es
jmp
xor
jecxz
adc
add
hlt
or
dec
pop
push
and
and
popa
je
das
fcomp
mov
mov
cmp
test
jle
pop
ja
dec
ret
inc
or
shl
xor
cmp
and
jge
or
or
xchg
sar
jne
cmp
sub
aas
in
aam
icebp
cmp
pop
push
ins
and
xchg
movs
jae
test
out
ret
or
sbb
add
popa
or
(bad)
and
and
sub
daa
add
mov
or
sub
and
loopne
push
in
sub
clc
mov
cdq
push
inc
(bad)
jg
mov
pushf
jg
rol
inc
aaa
xor
sub
push
fild
mov
mov
and
rcr
sbb
cli
and
sti
mov
or
mov
fs
and
test
dec
call
jb
dec
cmps
pushf
shl
scas
jae
push
sub
popa
lods
aad
mov
and
mov
adc
dec
clc
dec
mov
mov
les
inc
jp
inc
mov
mov
ret
adc
and
cs
mov
ret
jg
push
pop
test
sbb
mov
cmp
or
inc
loopne
and
aad
dec
pop
dec
(bad)
mov
sbb
jbe
sub
jnp
popf
inc
lock
dec
cmp
hlt
lahf
popf
lods
es
jmp
mov
inc
inc
and
(bad)
pop
clc
mov
push
inc
or
movs
into
push
das
adc
das
or
xor
mov
push
jo
psadbw
xor
scas
add
adc
rcr
adc
scas
xchg
jno
push
cmp
pop
mov
arpl
xchg
mov
dec
in
cmp
inc
mov
push
rcr
mov
add
arpl
lds
mov
lock
dec
mov
adc
xchg
fcomp
dec
adc
sbb
pop
sub
retf
cmp
pop
add
loopne
lahf
rcl
mov
push
add
push
or
sub
inc
push
movs
or
stos
sbb
fsub
xchg
rol
adc
mov
add
jp
jecxz
jo
add
das
mov
mov
dec
test
aad
push
(bad)
adc
dec
cmp
xchg
aad
scas
ret
clc
or
sub
enter
inc
inc
push
mov
mov
in
inc
pusha
xchg
test
arpl
sub
int3
retf
loopne
pusha
sti
and
push
add
sub
adc
xchg
xchg
fld
repz
pop
cli
push
mov
xor
and
scas
inc
add
jg
cwde
push
xchg
pop
dec
jne
adc
pop
popa
dec
adc
mov
call
pop
or
ins
out
sbb
adc
ret
add
rcl
(bad)
pusha
(bad)
jae
movzx
jmp
push
or
adc
sbb
cld
sete
pop
sub
jl
mov
xor
and
rcl
mov
cmc
jne
dec
sbb
lock
push
sbb
add
cmp
scas
loope
pop
cmps
imul
mov
xor
aas
and
lea
ror
rcl
nop
lock
adc
push
push
or
and
ins
rol
mov
cmp
cmp
mov
imul
fmul
ins
dec
cmp
pop
sbb
cmp
push
rol
leave
retf
jno
mov
sti
call
adc
pop
sbb
mov
mov
clc
sub
or
sub
out
mov
(bad)
(bad)
ja
inc
push
xor
jno
ja
movs
inc
movs
sbb
and
jns
loope
retf
in
or
pop
call
xor
or
lods
popa
gs
movs
pop
fwait
sub
sub
jb
vextractf128
mov
xor
shl
lahf
inc
shr
repnz
jl
xor
cmps
dec
or
ins
and
lods
mov
sbb
jle
lods
xor
mov
add
mov
cld
xchg
jmp
lds
add
loop
push
mov
arpl
clc
adc
push
sub
add
fild
dec
inc
add
call
xchg
mov
loop
lahf
dec
enter
add
shl
inc
dec
adc
or
inc
xchg
outs
jmp
dec
shl
adc
add
pop
add
mov
retf
add
mov
js
ins
jmp
lea
cmp
pop
adc
mov
xor
xor
fs
jmp
enter
loopne
sbb
xor
adc
and
xchg
adc
jno
xchg
lods
cmc
dec
ror
and
lea
ins
cmp
iret
fisub
mov
xchg
lods
adc
jo
enter
in
xor
push
mov
push
push
pop
add
cmp
fwait
stc
push
sbb
dec
jnp
xchg
rol
pop
(bad)
xor
push
cdq
lods
ret
call
add
pop
or
pop
xor
sbb
call
add
rcr
fdiv
xor
push
push
mov
sbb
mov
pusha
inc
mov
adc
loope
fldenv
xor
test
or
jmp
aas
jecxz
sbb
cmp
inc
or
test
mov
popa
adc
adc
push
test
call
aad
js
fwait
xor
inc
add
xor
or
fidivr
push
adc
jmp
push
ja
ret
scas
mov
(bad)
lock
xor
or
cmp
add
push
push
in
cwde
xor
add
shr
lock
shl
push
daa
mov
leave
xchg
enter
das
or
and
lock
cmp
sbb
fisubr
mov
cmp
inc
and
test
ss
shl
es
adc
inc
mov
adc
mov
or
pop
pop
(bad)
and
cli
(bad)
mov
mov
add
push
inc
or
(bad)
fwait
adc
add
jmp
pop
nop
daa
std
adc
add
jmp
sar
push
cmp
cmp
dec
loop
or
ret
jecxz
sub
pop
and
xadd
in
jb
into
les
mov
xchg
movaps
cmp
lock
mov
(bad)
js
rol
mov
sbb
je
add
inc
repnz
(bad)
push
dec
lock
std
aad
pop
bound
pop
mov
loopne
add
add
add
mov
adc
ret
push
cmp
sub
jmp
inc
cmp
outs
outs
or
add
sub
push
imul
push
jnp
movs
jne
sbb
xchg
in
or
mov
cdq
call
pop
out
add
popa
push
and
add
inc
jno
inc
lock
xchg
xlat
or
sbb
imul
ss
(bad)
(bad)
cmp
jmp
sahf
rcr
rol
sbb
dec
shl
pop
xchg
imul
ret
scas
lahf
adc
shr
add
rol
ror
pop
sbb
leave
add
adc
xor
mov
mov
mov
je
adc
push
cmps
mov
daa
or
pop
pop
fsubr
adc
xor
add
movs
sar
mov
lods
arpl
rcl
jmp
sub
pop
and
stos
and
jg
pop
jne
jle
dec
sub
shr
dec
shr
add
fwait
ins
adc
cmp
dec
and
xchg
pop
or
shr
or
sub
(bad)
cs
in
test
and
test
nop
inc
jne
pop
je
pop
call
add
and
jl
sub
or
cmp
cmps
cmp
xchg
test
shr
push
out
push
push
add
jo
test
pusha
adc
div
adc
imul
push
das
inc
mov
ret
and
jo
or
xchg
push
add
adc
arpl
pop
push
xchg
scas
or
inc
fs
iret
sbb
repz
pusha
add
loopne
and
je
imul
enter
push
jecxz
xchg
sub
ror
mov
imul
inc
or
test
lea
jg
jbe
jmp
or
jge
rcr
push
cs
fidiv
add
sub
test
add
push
aas
mov
in
addr16
dec
adc
ret
and
cmp
lahf
and
popf
adc
ds
jmp
or
rcl
jo
movs
in
cmps
and
cwde
shr
pop
nop
add
jae
in
mov
or
mov
adc
mov
mov
push
cmp
adc
pop
lahf
mov
scas
xchg
lock
enter
retf
in
ins
xor
mov
jno
adc
adc
outs
sub
(bad)
mov
bound
mov
jns
pop
mov
jge
fist
sbb
or
inc
sbb
(bad)
mov
clc
or
jmp
xchg
arpl
mov
cmp
add
sbb
ret
adc
lods
or
or
mov
add
rcr
cwde
ror
call
jo
nop
stos
inc
mov
adc
popa
add
push
stc
adc
mov
mov
sub
and
xchg
repnz
mov
fstp
cmp
ror
pop
jae
pop
(bad)
xor
fwait
inc
or
or
adc
sbb
sub
cld
and
mov
mov
add
add
xchg
scas
and
hlt
jbe
rol
mov
dec
push
xor
movs
enter
fwait
test
sbb
inc
xor
call
add
cmp
pop
mov
mov
jmp
inc
pop
jo
mov
add
push
mov
test
loope
nop
mov
sbb
movs
push
clc
cmp
(bad)
push
push
(bad)
mov
call
dec
stc
mov
jmp
lea
jge
pop
fiadd
jmp
push
sub
mov
dec
xor
or
pusha
add
ret
inc
jg
in
xlat
ja
hlt
dec
je
lock
push
test
lock
xchg
add
jae
mov
mov
call
sub
adc
ss
mov
inc
fisubr
sbb
adc
pusha
jnp
and
jmp
cmp
mov
sub
add
dec
rcl
cld
add
leave
push
adc
mov
ror
add
out
mov
aam
mov
rcl
mov
xor
imul
sbb
mov
adc
leave
out
inc
mov
xor
pop
jecxz
push
clc
sbb
test
xor
ret
mov
add
cld
sub
jae
push
push
gs
xchg
mov
cld
cmp
es
dec
cmp
or
fs
lods
pop
cmp
retf
(bad)
xor
push
sub
xor
ror
push
fiadd
mov
dec
scas
push
xchg
adc
fistp
and
gs
movzx
cmp
in
or
sar
push
pop
loop
imul
add
xor
fadd
mov
stos
sbb
inc
mov
sbb
dec
retf
sub
ret
and
rcr
cmp
adc
pusha
and
dec
into
adc
popa
add
js
call
imul
adc
std
std
xchg
fst
mov
add
cmp
push
sbb
fnstcw
or
pop
cmp
inc
inc
mov
mov
xor
ret
or
add
jp
shl
pop
dec
inc
or
lods
and
cmp
and
add
cmp
cmp
mov
cmp
mov
add
pop
mov
add
or
shr
xor
push
(bad)
and
or
and
jmp
xchg
lods
mov
sub
inc
inc
sbb
enter
push
mov
popa
inc
add
fs
mov
sub
and
sub
pop
jmp
sub
mov
aam
and
push
(bad)
pop
fwait
add
mov
ds
movs
and
or
fstp
push
or
mov
lss
mov
and
pop
xchg
adc
adc
adc
or
sbb
pop
inc
fadd
out
cwde
xor
cmc
pop
and
and
out
lds
inc
test
xchg
jnp
fadd
add
sub
inc
sub
sbb
inc
adc
stos
dec
inc
push
mov
add
adc
sub
hlt
adc
mov
sbb
fsub
push
lea
sbb
sbb
push
inc
sub
in
sbb
leave
adc
add
inc
sub
or
aad
cmp
mov
scas
adc
fcomp
iret
cmp
cmp
adc
cmp
adc
push
add
add
imul
and
pop
sar
sub
dec
cmc
mov
xor
iret
stos
and
add
scas
into
fsubr
sbb
test
in
jb
pop
mov
dec
(bad)
test
push
adc
push
or
sbb
outs
jmp
dec
sub
mov
inc
dec
in
add
pop
js
xor
xor
ret
in
mov
rcl
or
daa
rcr
retf
xor
pop
jge
push
and
add
mov
cwde
add
arpl
sub
inc
and
aaa
pop
fsubr
nop
lea
les
sub
adc
nop
or
pusha
cmp
bound
jle
jmp
arpl
dec
sub
push
es
je
jo
and
cmp
xchg
test
and
pop
sub
cld
imul
and
push
das
mov
adc
lock
sbb
add
test
ins
or
pop
sti
ja
or
and
and
dec
call
adc
out
mov
dec
movs
mov
push
hlt
inc
mov
cmps
mov
cmps
or
jp
enter
loope
jno
mov
and
xchg
sahf
add
and
rol
pop
push
pop
or
mov
xor
outs
cmp
popa
aad
pop
cmp
ret
adc
ret
call
test
push
pusha
and
cli
add
jbe
stos
icebp
outs
mov
dec
mov
add
push
adc
jp
sub
cmp
outs
dec
sub
lock
push
fsub
cli
stos
add
stos
add
xchg
inc
(bad)
clc
jae
xor
adc
rol
ss
cmp
adc
popf
paddsb
xchg
or
and
push
fsub
sbb
mov
jns
xchg
mov
or
mov
dec
push
mov
mov
mov
add
lock
out
sbb
mov
dec
sbb
div
jecxz
or
in
sbb
call
mov
test
ss
ja
or
xor
rol
add
dec
lock
test
loopne
xchg
(bad)
in
jmp
mov
adc
or
and
sub
cmps
bound
shl
lock
xchg
xchg
xchg
lock
lock
mov
ins
xlat
outs
inc
jno
pop
jnp
or
inc
ret
popa
sbb
jg
js
mov
mov
frstor
push
outs
or
je
mov
jo
nop
pop
gs
sbb
xor
call
ret
inc
mov
dec
mov
push
cmp
add
cmps
not
lds
inc
imul
cmp
add
arpl
sbb
xchg
mov
jg
(bad)
sub
xchg
or
add
lds
dec
push
add
lahf
mov
lock
lar
jecxz
les
add
rcl
dec
sub
retf
lods
and
adc
sbb
inc
adc
push
sub
cld
fwait
cld
cmp
mov
ror
cmp
paddsb
cmp
add
(bad)
dec
and
jecxz
es
mov
jne
mov
mov
fstp
cmp
or
lahf
imul
mov
adc
xchg
popa
es
adc
pop
popa
and
add
inc
es
cld
(bad)
cld
cld
xor
and
and
(bad)
shl
lods
dec
cs
cs
repz
sub
push
inc
xchg
pop
cmps
adc
icebp
je
ss
loopne
push
sbb
loope
pop
aas
or
add
cmps
ror
cmp
add
add
or
or
lods
adc
ins
and
aas
cmp
mov
cmp
sbb
xor
loopne
outs
in
(bad)
and
add
pop
shl
mov
inc
lods
fwait
push
xor
popa
and
cmp
(bad)
jg
pop
pop
pop
shl
or
ror
add
imul
dec
mov
outs
rcl
inc
mov
loop
jle
jo
add
sub
inc
loopne
loopne
icebp
inc
lods
xchg
xor
inc
add
sub
loope
rol
or
test
loope
paddsb
add
loopne
mov
xchg
xor
xor
cld
xor
sbb
and
pop
daa
jb
jnp
call
cwde
in
aaa
mov
pop
loopne
loopne
add
xor
out
mov
inc
pop
push
loopne
jle
ds
loopne
loopne
sub
loopne
fcom
adc
mov
ret
in
mov
fld
lods
and
inc
sbb
loopne
add
fdivr
and
xor
xor
xor
and
cmp
sbb
lea
fmul
or
mov
test
fistp
aam
pop
xchg
jge
lods
push
pop
inc
add
and
adc
add
shl
push
mov
mov
add
rcr
xor
sbb
jbe
push
or
pop
lea
sbb
add
ret
xchg
pmullw
retf
mov
ret
js
and
xchg
push
test
dec
es
push
mov
js
sbb
ss
push
add
cmp
or
mov
jo
add
dec
sbb
in
je
xchg
add
inc
pop
dec
and
inc
adc
cdq
or
fwait
shl
mov
adc
inc
(bad)
inc
arpl
mov
rol
(bad)
ins
jl
push
movs
(bad)
aaa
xchg
add
sbb
push
imul
sub
les
jmp
or
push
mov
les
pusha
ror
ja
mov
shr
xchg
sbb
arpl
lock
sub
mov
add
bound
sbb
out
(bad)
test
or
dec
push
jbe
cmps
addr16
adc
ins
jmp
jp
dec
lds
cld
sbb
or
add
and
sub
add
mov
dec
or
or
add
and
push
test
sbb
scas
(bad)
leave
adc
ins
(bad)
imul
add
pop
add
push
jmp
es
and
daa
loopne
sub
test
mov
retf
add
mov
pop
addr16
pop
xor
jbe
sbb
and
and
or
retf
ror
or
pop
mov
or
cmp
imul
pop
fild
xor
sbb
fcomp
pop
pushf
push
adc
outs
arpl
sub
mov
inc
aaa
push
mov
fsubr
add
mov
sbb
pop
sbb
jo
add
and
pop
ja
xor
push
add
cmp
gs
add
adc
or
push
(bad)
mov
mov
outs
inc
pop
leave
rol
mov
inc
and
or
mov
cmp
mov
add
loopne
dec
push
adc
xor
retf
aas
mov
aaa
retf
push
popa
pop
xor
pop
pop
pop
test
add
repnz
nop
add
pop
fst
outs
nop
sub
mov
leave
fadd
mov
xor
inc
ja
aaa
and
ror
lahf
loop
or
push
movs
mov
call
push
mov
or
mov
add
xor
xor
stos
lock
jo
sub
jno
sub
(bad)
jecxz
test
push
movs
sub
loopne
sbb
add
sub
jl
mov
call
mov
rol
dec
ss
(bad)
movs
add
(bad)
mov
mov
adc
sub
push
add
sub
fstp
and
push
push
cdq
pop
inc
sub
mov
cmp
loop
bound
jo
retf
fisub
dec
jmp
movs
cs
add
xchg
into
fistp
fstp
add
add
add
in
mov
imul
movs
movs
mov
mov
sub
mov
stos
xchg
inc
pop
int
mov
push
ret
daa
inc
or
mov
iret
jl
mul
cmp
fwait
adc
pop
sbb
pop
pop
sbb
test
mov
mov
sub
push
mov
popa
push
(bad)
stc
or
push
mov
or
adc
xchg
nop
fwait
nop
out
push
xor
pop
sbb
cwde
dec
xchg
inc
lahf
jge
lock
mov
jo
add
and
das
ins
xor
jge
lods
dec
xchg
hlt
add
or
fbstp
adc
mov
jmp
jl
outs
inc
test
(bad)
add
adc
es
sbb
or
test
jae
xor
test
adc
(bad)
mov
jp
cmc
mov
push
cmc
dec
lods
or
xor
jmp
xor
sub
xor
pop
xlat
repnz
sub
adc
sbb
or
adc
xchg
add
fsubrp
loop
push
jne
mov
sahf
out
mov
dec
or
cwde
adc
xchg
adc
add
imul
jns
sbb
sub
cmp
popf
pop
loopne
cmp
aam
push
dec
shl
ror
xlat
les
fld
push
push
and
and
sub
cmp
adc
sbb
cld
lods
add
sub
xor
add
sbb
sbb
js
popa
dec
push
into
or
shr
jmp
aas
es
xchg
mov
xor
sub
sbb
mov
ret
cmc
ror
ja
movs
popf
mov
or
fdiv
or
push
cwde
fs
mov
dec
cld
sbb
rcr
mov
and
enter
es
fdiv
dec
jne
dec
imul
ret
jl
xchg
mov
sbb
shr
dec
movs
pop
arpl
sbb
jo
mov
arpl
add
shl
dec
enter
xor
test
mov
dec
enter
test
mov
mov
and
mov
and
cwde
bound
or
push
imul
test
push
and
clc
mov
div
xchg
mov
cvtpi2ps
or
fstp
pop
jnp
xor
add
cdq
xchg
lea
mov
mov
jne
stos
es
fnstcw
repz
mov
push
dec
out
mov
loope
mov
pop
cmp
in
add
or
add
push
pop
nop
and
or
adc
sbb
or
push
mov
or
loopne
cld
lea
mov
aam
mov
mov
fbld
add
and
mov
and
dec
mov
or
mov
xchg
sub
inc
cmc
dec
pop
inc
fs
xor
push
or
mov
jmp
inc
pop
loop
jo
pop
xor
cmp
addr16
mov
mov
dec
sbb
sar
test
push
inc
ret
jne
rcr
add
popa
or
mov
mov
bound
push
cmp
and
cs
xor
mov
and
add
sbb
or
ins
(bad)
in
nop
adc
adc
cmc
fstp
fsubr
pop
or
scas
add
test
xlat
sbb
adc
popa
inc
lock
cmp
jmp
adc
add
add
sti
sbb
std
daa
push
enter
xchg
sub
xor
adc
int
loope
shl
cmp
adc
jmp
daa
add
inc
sub
pusha
push
mov
sbb
adc
sbb
jnp
and
wbinvd
pop
mov
jb
jl
shr
sbb
scas
ins
dec
add
adc
xor
push
inc
and
punpcklwd
dec
cmp
lock
into
xor
rcr
(bad)
and
lea
jmp
iret
les
adc
pop
sub
int
and
je
add
push
and
sub
ret
fcom
cmp
mov
rcl
or
int3
add
adc
sbb
scas
test
xchg
sub
aam
cmp
outs
and
cdq
jo
aad
aam
mov
add
shl
add
data16
add
sbb
or
mov
push
or
push
pop
cmps
(bad)
fst
or
rcl
jbe
mov
mov
cmps
xor
xor
sub
or
adc
xchg
iret
mov
mov
pop
ja
add
sub
dec
adc
out
sub
or
mov
test
je
or
mov
lock
push
add
sub
push
add
ror
(bad)
and
and
add
inc
rol
jns
dec
loop
add
xor
push
inc
mov
and
pop
rol
pop
fucom
nop
ror
test
rol
or
xor
pop
ja
jmp
adc
das
popa
sub
add
or
cdq
(bad)
push
sbb
xchg
js
sbb
ror
dec
mov
inc
mov
xchg
and
xor
add
movs
cli
xor
sub
add
and
jmp
leave
ss
dec
popa
cmc
jae
add
xor
lea
adc
xchg
add
ror
xor
cmc
mov
adc
cdq
aad
cmp
aaa
cdq
pop
and
mov
add
or
ror
inc
push
cwde
jg
imul
add
movs
iret
hlt
cmp
xor
(bad)
fimul
je
mov
pop
and
adc
lods
jae
loope
pusha
jl
or
inc
dec
ins
sbb
daa
cmp
outs
dec
sub
loop
or
ins
adc
push
xchg
xchg
adc
fwait
aas
or
mov
mov
dec
loope
push
sub
add
push
inc
mov
jg
add
sbb
ss
mov
add
cmp
mov
bound
jecxz
and
adc
ret
sbb
daa
cdq
and
or
sbb
add
test
(bad)
jnp
add
daa
push
push
inc
ins
movs
fs
cdq
or
sbb
dec
lea
ret
xor
lods
push
test
mov
inc
test
sbb
cmp
xchg
movs
xor
outs
push
and
or
inc
mov
lods
adc
jno
or
or
push
ss
add
or
icebp
dec
or
stos
mov
xor
pop
daa
mov
clc
movs
(bad)
sub
add
ret
mov
fsubr
xor
push
xor
xchg
sbb
cld
dec
inc
sbb
popa
test
inc
pop
mov
add
xchg
adc
inc
add
xor
inc
push
aas
arpl
jmp
mov
sar
test
jo
dec
in
in
and
mov
cdq
in
scas
pop
dec
push
popa
jg
scas
pop
aam
cmp
mov
fidivr
jl
ret
push
xor
test
lea
xchg
cmps
cmp
xor
jp
or
jecxz
add
jl
and
cmp
sbb
test
aaa
loop
dec
rol
add
sub
(bad)
jno
jb
outs
xor
rcr
hlt
push
outs
jmp
inc
inc
loopne
sub
sar
xor
ss
pusha
addr16
sqrtps
cmps
mov
loopne
xchg
xchg
inc
jmp
sub
mov
adc
add
popf
lods
push
jg
mov
shr
push
or
mov
pop
adc
adc
sbb
mov
jno
icebp
pop
clc
inc
push
inc
sahf
jmp
hlt
add
mov
push
(bad)
sub
stos
xlat
dec
clc
add
in
sub
mov
sbb
adc
stos
mov
adc
es
push
add
ret
shr
push
(bad)
fwait
push
loop
sbb
or
jb
pop
sbb
xlat
or
jecxz
pop
mov
test
jle
data16
adc
sub
xchg
add
adc
out
mov
mov
or
and
fdivr
xchg
push
inc
shr
jl
adc
push
and
add
jmp
inc
mov
add
adc
add
sbb
stos
pushf
out
push
fcomp
adc
fild
ja
dec
sub
cdq
mov
mov
cmp
push
ja
or
sub
push
and
add
fist
pop
and
mov
lahf
mov
pop
packsswb
sbb
adc
les
inc
sub
jl
jl
xor
scas
or
popa
scas
retf
adc
sub
add
xchg
aas
adc
mov
sub
add
adc
shl
pusha
or
xor
xor
push
xor
mov
jae
fwait
je
nop
mov
and
push
ins
nop
mov
ret
add
jmp
add
repnz
stos
lahf
call
adc
ja
mov
sbb
iret
sub
sub
push
push
xor
push
fdiv
or
add
and
sub
call
cs
(bad)
add
cmp
mov
stos
movs
inc
sub
and
mov
mov
leave
call
xchg
and
pop
fsubr
cmp
in
call
arpl
or
push
hlt
outs
and
dec
mov
jnp
xor
push
call
and
jp
jns
lock
mov
dec
push
xor
sub
pop
(bad)
jnp
f2xm1
xchg
or
add
dec
cmp
jnp
or
lea
push
xor
arpl
push
and
push
or
mov
add
or
mov
lsl
cmc
inc
adc
mov
push
add
in
inc
movs
mov
and
push
cdq
push
push
xchg
rcl
imul
icebp
or
inc
test
jg
add
sbb
jae
or
mov
sbb
retf
out
jp
shr
inc
dec
in
push
dec
mov
inc
sub
clc
add
inc
cwde
jmp
inc
dec
sub
sub
add
mov
add
je
pop
outs
inc
sub
in
add
add
sub
xor
jecxz
inc
jnp
pop
push
mov
pop
lods
push
jg
fldcw
sbb
or
jmp
cmp
sub
xor
sub
ret
xor
dec
inc
jge
dec
sub
sub
or
cld
lods
xchg
test
leave
scas
inc
push
scas
sub
mov
xlat
lods
jmp
inc
cld
aaa
daa
mov
inc
sub
cmp
call
jmp
jmp
inc
stos
loopne
xchg
dec
shl
sbb
mov
in
and
test
mov
cmps
lods
das
mov
or
or
lds
add
and
cmp
inc
iret
cmp
inc
(bad)
jns
in
imul
pop
adc
inc
pop
xor
jg
pusha
sbb
in
push
dec
cmp
push
jnp
or
stos
mov
add
std
dec
or
inc
xchg
add
add
pop
clc
sbb
clc
jmp
jmp
adc
sub
adc
daa
pop
add
pop
or
push
dec
push
xchg
lar
mov
inc
cmp
push
fisttp
add
out
inc
or
mov
add
add
push
sub
push
pop
(bad)
clc
mov
test
push
ret
adc
pop
add
dec
push
dec
loop
or
scas
mov
and
cmp
es
test
aaa
ins
pop
push
adc
loop
cmp
push
mov
pop
gs
xchg
dec
push
les
sub
(bad)
or
aaa
add
lock
mov
push
and
add
ss
adc
jo
adc
mov
push
sub
sbb
and
sbb
enter
shl
sub
mov
push
stos
nop
aaa
ds
in
mov
ret
ret
add
fst
lahf
aas
add
dec
ret
clc
add
popf
mov
push
add
mov
adc
cld
push
xor
loopne
push
aas
je
xchg
or
push
test
daa
push
pop
cs
cmp
or
and
mov
jmp
and
jge
or
push
jb
push
imul
sbb
add
adc
aas
inc
push
(bad)
les
aaa
cmp
push
add
sysenter
sub
es
add
pop
in
mov
aaa
inc
dec
adc
test
dec
mov
test
adc
sub
or
add
adc
pop
add
xchg
adc
cmc
arpl
jno
push
inc
adc
adc
add
dec
lds
stos
xchg
jg
and
lahf
movs
das
gs
add
cld
or
xor
lods
aaa
pusha
scas
mov
in
add
mov
pop
xchg
pop
push
rcl
in
or
and
sub
mov
pop
or
push
les
sbb
aaa
hlt
stc
dec
adc
and
pop
ss
mov
rol
or
jl
sbb
icebp
cmc
fdivr
add
xor
inc
sbb
ja
push
or
lock
inc
rcr
inc
inc
mov
fldenv
push
dec
sbb
std
add
sub
inc
rol
jle
inc
push
mov
fwait
and
sbb
lock
add
mov
sbb
retf
pop
inc
xchg
cmp
sub
int3
pop
jge
push
loope
sti
dec
int
and
adc
adc
clc
mov
pop
or
cmp
or
bound
or
int
fadd
inc
loop
mov
pop
jne
dec
pop
pop
jge
xor
cmp
cmps
movs
sti
sbb
cs
or
test
stos
fsubr
push
xchg
add
scas
sbb
or
sbb
and
or
aas
xchg
smsw
in
inc
out
(bad)
out
push
or
xchg
push
and
xor
cmp
push
jle
push
(bad)
loope
sub
adc
imul
adc
dec
loop
imul
pushf
pop
and
movs
das
cld
cmp
fstp
push
adc
mov
pop
pop
push
adc
aaa
add
add
mov
pop
inc
loopne
lahf
pop
ret
push
fcmovnb
inc
add
pop
adc
mov
call
cdq
or
add
imul
xor
xor
shl
dec
dec
sbb
pop
pusha
push
mov
cmp
cld
dec
dec
adc
test
mov
xchg
add
dec
adc
or
test
sbb
adc
int3
push
sbb
lea
push
xor
daa
js
lock
(bad)
imul
add
dec
lock
xchg
fcomp
or
push
xchg
cmc
in
or
push
mov
xor
xor
push
mov
or
sub
mov
les
and
add
idiv
push
sub
mov
push
shl
jmp
das
arpl
dec
add
xor
xchg
adc
adc
or
mov
jno
arpl
lds
or
add
xor
cdq
shr
xchg
mov
test
pop
and
add
ins
out
fs
int
cld
jg
add
push
or
dec
add
repnz
scas
aas
push
aaa
test
sub
or
inc
sbb
dec
push
cmp
je
adc
into
push
push
push
jne
data16
dec
jns
cld
add
int3
and
dec
jbe
or
add
xor
sar
push
ss
pop
fwait
and
pusha
or
push
fwait
adc
leave
sub
test
add
or
push
shl
adc
ret
mov
xchg
sub
aad
push
mov
inc
sbb
xor
or
xor
dec
pop
or
loop
inc
adc
cmp
cmps
xchg
hlt
rcl
ffree
push
jno
and
pusha
rol
dec
cmp
add
sbb
add
cmp
inc
fidivr
push
(bad)
fild
add
sbb
inc
adc
shl
and
iret
add
in
xchg
inc
pop
xor
les
sbb
enter
mov
repnz
inc
movs
adc
test
xor
and
inc
fild
repnz
jp
jbe
push
imul
in
je
mov
(bad)
dec
jecxz
stos
mov
adc
ret
push
pop
inc
pop
add
push
mov
cld
test
or
xor
jg
jp
nop
and
adc
push
int
push
push
sbb
add
bound
stos
mov
mov
sub
mov
js
imul
rol
mov
and
or
pop
xor
push
adc
mov
mov
inc
adc
outs
add
xchg
outs
daa
pop
fsubr
cmp
jp
mov
je
lock
and
(bad)
or
adc
sbb
add
push
inc
imul
xchg
push
nop
jno
and
push
imul
jecxz
add
adc
fdivr
push
in
sub
inc
jo
adc
stc
jne
push
adc
add
sub
sbb
movs
dec
sub
and
mov
push
ja
xchg
lock
push
or
sub
jo
call
and
xor
sub
mov
enter
sbb
pop
sti
jo
dec
cmp
or
adc
dec
retf
fst
pusha
inc
mov
sub
inc
jae
call
push
nop
and
call
ror
adc
sbb
mov
enter
inc
sbb
loopne
ffreep
adc
adc
dec
cld
or
movs
dec
or
push
sbb
xor
dec
xor
inc
es
mov
xor
loop
aas
movs
jg
mov
jne
sub
cmp
jo
sbb
test
sbb
or
adc
sub
adc
ins
mov
pushf
or
and
ss
pushf
sub
cmp
inc
add
xor
lock
or
xchg
rcl
xor
std
(bad)
adc
and
dec
inc
outs
mov
pop
add
mov
or
or
and
or
pop
or
pop
imul
mov
mov
lock
mov
test
ror
and
nop
or
dec
adc
dec
or
add
push
mov
cmp
jb
add
das
jne
adc
fmul
inc
or
cmp
adc
add
outs
sub
aam
sub
mov
ror
mov
mov
and
add
fsubr
in
das
jge
retf
imul
rcl
add
and
ror
or
jmp
push
and
scas
pop
mov
aas
add
mov
sbb
sbb
push
ret
adc
sbb
adc
std
and
mov
retf
mov
or
xor
pushf
std
mov
mov
adc
inc
inc
stos
mov
test
sbb
clc
imul
mov
sar
call
loope
push
cwde
sub
mov
(bad)
loope
adc
mov
pop
inc
or
add
aad
cmp
fbstp
push
push
xchg
mov
and
inc
jno
inc
mov
cmovns
ins
adc
and
loopne
xchg
xor
test
imul
lock
adc
lods
jmp
inc
xchg
jmp
scas
dec
test
adc
rol
arpl
fidivr
in
pop
cmp
lods
add
add
push
lock
jle
and
adc
adc
in
pop
push
sub
adc
and
dec
test
or
fld
cmc
mov
mov
in
ja
or
add
in
xor
or
rcr
inc
lods
lds
cmps
jne
imul
test
sub
pop
pushf
fs
ror
test
add
ins
push
int3
and
popa
sbb
adc
sub
add
mov
lods
add
fistp
mov
add
sub
add
jnp
cmc
cwde
xor
cld
xchg
and
fadd
retf
jg
dec
aaa
add
(bad)
hlt
adc
jnp
test
in
add
int3
mov
xchg
sbb
add
or
loopne
or
adc
nop
jb
push
push
or
ret
mov
pop
aam
fnstsw
imul
scas
sub
xor
inc
mov
lock
pop
add
push
shl
pop
call
or
inc
loop
dec
mov
add
jmp
mov
adc
orps
aam
cmp
inc
xor
add
add
inc
(bad)
jmp
add
cmp
aad
push
adc
les
mov
cmc
daa
add
imul
or
mov
push
jo
scas
add
and
nop
test
and
leave
and
adc
cmp
das
cmp
cs
cwde
and
(bad)
add
add
adc
add
add
mov
pop
and
icebp
cld
addr16
(bad)
leave
(bad)
dec
pushf
or
mov
gs
lock
push
adc
push
lds
add
pop
mov
mov
jl
adc
push
lea
imul
add
xor
cwde
or
pop
push
pusha
fld
cmp
cmp
jmp
and
push
nop
pusha
push
ret
cld
leave
or
mov
test
sbb
ins
fcom
xlat
dec
cwde
xchg
clc
loope
sbb
xchg
clc
lahf
dec
clc
and
push
jg
add
cmp
push
push
fcom
xchg
add
jae
mov
and
ja
jecxz
lock
inc
sbb
add
jg
adc
pusha
or
sub
sti
and
adc
adc
in
fxch
add
add
push
mov
mov
pop
cdq
aas
(bad)
mov
enter
sbb
mov
test
and
scas
ror
jg
movs
pusha
mov
and
rcr
or
and
push
cmp
pop
add
rol
rcl
push
nop
lea
and
nop
and
leave
dec
push
add
add
and
inc
dec
and
mov
mov
imul
lods
add
push
pop
ins
sub
xchg
not
mov
and
jno
sub
xor
popa
cs
mov
dec
inc
fadd
daa
je
dec
adc
push
movs
ror
mov
xchg
cmp
pop
sub
pop
jmp
jb
and
leave
lahf
or
xor
daa
das
cmp
push
imul
pop
inc
or
add
fist
and
mov
inc
and
sti
dec
add
rcr
push
xchg
clc
xchg
sti
retf
add
push
push
push
and
inc
add
out
jno
mov
sbb
shl
or
add
add
xor
sub
add
add
in
xor
jo
jns
loope
xor
and
sar
les
imul
xchg
imul
jmp
add
dec
lods
adc
or
outs
mov
pop
cmp
shr
outs
imul
mov
push
xor
mov
sub
inc
test
sti
xor
pop
push
mov
and
push
mov
sbb
push
ror
int3
popa
push
loopne
ficom
add
add
stos
add
add
jge
cld
data16
rol
or
or
inc
cld
movs
sub
pop
xor
adc
in
(bad)
(bad)
jge
push
inc
xor
movs
nop
outs
adc
cli
nop
dec
jnp
mov
inc
adc
mov
ret
xchg
and
cwde
icebp
push
and
inc
lahf
or
mov
sub
dec
lea
jge
inc
push
jmp
pusha
inc
sbb
xchg
push
or
je
aaa
or
jecxz
les
lahf
cmp
es
and
std
xchg
pop
rol
cmp
movs
loope
or
adc
jecxz
dec
and
mov
test
mov
pop
mov
dec
and
sbb
test
inc
sbb
mov
push
add
aad
in
and
jl
adc
add
loope
mov
inc
into
mov
pop
repz
mov
add
daa
adc
dec
push
neg
add
aam
or
or
fcmovnbe
rol
(bad)
jmp
push
add
sub
mov
add
adc
ret
ret
and
adc
jae
adc
cwde
push
sub
push
aam
inc
and
sar
sub
ins
loope
or
ret
mov
or
or
test
xor
xor
sbb
jns
out
inc
sbb
sar
int3
xchg
test
fcmovnu
or
rol
xor
jno
adc
or
inc
dec
icebp
lea
cwde
dec
or
cld
lods
jge
or
mov
add
dec
mov
or
sbb
ins
daa
mov
mov
and
ins
mov
adc
xchg
dec
sbb
pop
add
ja
je
stos
or
add
aaa
push
add
jecxz
add
add
out
loopne
div
int
je
and
ss
enter
push
cmp
aad
lods
ja
daa
add
jb
mov
(bad)
scas
in
daa
add
arpl
add
dec
push
jo
jo
fisttp
mov
aad
pusha
push
or
inc
sbb
pop
aas
add
sub
fiadd
scas
rcr
out
push
mov
inc
push
fiadd
adc
jmp
add
fadd
lds
ins
neg
dec
outs
sbb
pusha
or
jmp
ret
push
fs
add
dec
sbb
fldcw
ss
das
or
fld
daa
jmp
or
pusha
fsub
cmp
mov
and
push
mul
add
adc
repz
push
sub
cmp
push
cmp
repz
outs
js
repz
repz
repz
mov
lock
out
cmp
and
push
sbb
jns
out
sub
inc
dec
push
out
sahf
out
push
out
sahf
nop
call
out
int3
(bad)
loopne
hlt
repz
jmp
es
repz
xor
inc
dec
push
pop
cmp
repz
push
js
repz
xrelease
mov
mov
dec
ror
add
or
(bad)
jg
adc
adc
adc
sbb
dec
sbb
add
pop
lock
dec
and
and
sub
sub
sub
jnp
outs
cvtps2pi
or
xor
dec
add
xor
mov
pop
jnp
xor
pop
cmp
cmp
cmp
dec
mov
ss
ds
adc
inc
or
inc
cmp
outs
scas
dec
inc
inc
adc
inc
lds
dec
and
add
mov
mov
mov
pop
cmp
jno
std
sub
mov
lods
adc
daa
add
data16
push
sbb
cmp
and
inc
in
test
cmps
push
push
or
adc
mov
mov
xchg
push
dec
push
mov
dec
mov
xchg
lea
or
fmul
xor
cmps
cld
adc
or
push
daa
das
sub
or
dec
mov
mov
sbb
adc
adc
sub
inc
push
jb
movs
test
jecxz
test
or
inc
jno
adc
adc
pop
push
ss
jmp
leave
aas
and
ror
fmul
je
adc
test
sbb
jne
pop
push
jp
fld
movs
pop
je
loop
pop
xor
mov
mov
xchg
dec
add
fadd
push
push
or
cmp
int
dec
dec
rol
push
rcr
jne
movs
push
jb
cdq
cmps
lea
inc
or
(bad)
adc
cmp
pop
cmp
dec
cmp
jns
sar
dec
inc
cwde
sub
cmp
loopne
aaa
add
add
iret
add
sahf
push
jmp
xor
out
mov
clc
mov
push
cld
jne
mov
add
ret
adc
mov
pop
add
gs
popa
popf
ins
or
test
iret
hlt
pop
add
cli
or
push
mov
xchg
sub
cmp
test
in
clc
mov
pop
cmp
or
push
int3
stc
pop
retf
mov
and
push
xchg
sub
ss
or
push
lds
xchg
arpl
xchg
enter
inc
or
jno
push
pop
loopne
push
shl
pop
jo
sub
test
cmp
mov
ss
aad
dec
mov
js
sub
jne
mov
xor
das
and
and
popf
or
sub
add
lahf
inc
imul
mov
mov
adc
push
sub
dec
mov
mov
or
mov
jno
mov
pop
or
push
fcmovnbe
lea
pop
pushf
aas
dec
and
and
cmps
add
sub
adc
test
sub
mov
es
and
pop
movs
aam
jp
adc
jne
dec
xor
inc
mov
inc
xor
xchg
push
cli
add
xor
inc
push
and
aas
push
retf
fdiv
push
dec
pop
mov
adc
adc
fs
push
vmovdqa
push
add
sub
jp
shr
xor
push
outs
xchg
mov
push
adc
push
or
inc
add
inc
xor
test
and
inc
and
sbb
in
popa
fcom
dec
or
cmp
rol
or
pop
cmp
push
jg
mov
jmp
adc
push
or
loop
cmp
adc
in
jne
lds
shr
cmp
xchg
push
lods
dec
add
adc
add
mov
jmp
dec
jnp
sub
adc
xor
popf
pop
repnz
mov
adc
push
and
add
add
dec
and
cmp
inc
jecxz
dec
xor
pop
addr16
pop
sub
movs
test
mov
div
sbb
push
aad
jo
add
je
mov
(bad)
push
test
mov
sub
aaa
push
cdq
and
sbb
jno
pop
imul
and
push
jge
or
test
or
adc
pop
in
pop
nop
dec
ins
push
jmp
add
sub
and
jns
ret
or
or
jg
or
jnp
sub
xor
add
mov
jge
add
fadd
movs
push
push
mov
add
arpl
xor
pop
mov
pusha
add
push
pushf
mov
adc
and
je
add
jne
push
add
mov
aaa
leave
shl
adc
popa
loopne
enter
or
mov
mov
je
xor
add
cmp
add
repnz
cmp
je
test
mov
je
sbb
mov
dec
or
mov
mov
clc
add
ss
mov
and
jl
or
push
jne
mov
xchg
jmp
movs
pop
cmp
pop
punpckldq
pop
or
add
add
sbb
in
cmp
adc
or
xor
jmp
cld
jne
mov
xchg
scas
fs
test
mov
push
or
adc
xchg
lods
fwait
adc
jg
int3
shl
xor
add
mov
inc
loope
es
ret
jecxz
cmp
add
shr
das
clc
int3
xchg
lea
sub
pop
xchg
jo
jg
and
fdivr
push
call
data16
pop
and
and
pop
out
fld
add
xchg
mov
(bad)
outs
xchg
jne
add
jmp
cmp
dec
or
mov
test
in
or
pop
and
xchg
mov
sub
adc
xor
push
lahf
(bad)
(bad)
mov
xchg
call
inc
and
jg
mov
ret
retf
cwde
push
les
sub
dec
pusha
sub
stos
inc
mov
rcl
push
rol
(bad)
lock
xchg
mov
inc
add
add
mov
mov
dec
sub
das
cmp
or
sub
mov
arpl
and
jg
and
and
xor
jo
into
mov
inc
and
push
(bad)
sub
js
dec
adc
mov
loopne
add
in
sbb
in
stc
adc
mov
test
adc
xor
shl
inc
inc
push
cld
mov
sub
jb
and
jl
dec
adc
add
mov
and
adc
adc
mov
loope
pop
adc
jmp
sub
test
pop
outs
cmp
scas
xchg
jo
push
or
mov
mov
test
or
sbb
xor
ss
adc
jl
fs
push
imul
or
or
push
test
lods
jecxz
xchg
addr16
or
(bad)
xstore-rng
cmps
inc
xchg
jmp
mov
dec
push
cmps
inc
(bad)
jnp
test
jo
xchg
sub
and
inc
dec
ret
add
or
add
and
test
retf
push
or
push
inc
fdivr
jg
add
mov
pop
movs
test
test
and
cdq
call
popa
dec
mov
pop
mov
ss
inc
fist
pop
rcl
dec
mov
and
xchg
adc
sbb
mov
add
and
inc
fdivr
pop
or
inc
test
fild
push
repnz
sbb
test
inc
call
xchg
jg
scas
add
mov
add
cmp
call
adc
add
adc
push
add
or
or
xchg
dec
fist
test
inc
add
cwde
js
mov
inc
add
add
inc
ins
test
add
out
jne
or
test
add
jb
shl
push
push
add
add
sbb
ja
mov
fcom
push
jae
ins
inc
cmovle
and
fs
popa
and
or
push
lock
jl
aas
in
lds
sub
mov
sbb
sbb
and
dec
pop
mov
lahf
stc
dec
rol
test
sbb
cmps
mov
movs
(bad)
push
add
dec
inc
mov
inc
fcomp
popa
pusha
add
adc
fnstcw
movs
sub
sub
mov
push
adc
jmp
cmps
push
pusha
jne
inc
mov
and
ret
sbb
(bad)
xor
mov
and
and
fisttp
add
push
or
sub
jns
jae
mov
adc
push
xor
sub
mov
push
cwde
add
or
arpl
jg
call
mov
mov
or
mov
sub
cmp
pop
aas
js
ds
sbb
ret
inc
outs
inc
pop
push
fmul
sub
xor
jmp
(bad)
and
mov
mov
out
dec
or
and
imul
xchg
mov
push
jmp
(bad)
xor
pop
add
inc
add
sbb
inc
cmp
adc
inc
push
sbb
mov
out
punpckldq
sbb
push
sub
fimul
retf
mov
inc
or
push
or
xor
inc
adc
icebp
add
es
xor
and
jo
sbb
pop
mov
aad
fbstp
pop
mov
jmp
es
push
(bad)
cld
jmp
inc
mov
xchg
(bad)
pop
inc
or
test
fistp
pop
je
outs
mov
push
mov
mov
(bad)
(bad)
sbb
sub
sbb
xchg
xor
ffreep
inc
inc
or
cld
lahf
and
aam
pop
mov
lock
inc
lock
sbb
jmp
in
pop
dec
sub
dec
in
push
jg
pop
(bad)
and
pop
inc
cmp
dec
cmp
add
xor
xchg
sahf
mov
ja
retf
cmp
test
pop
and
jne
(bad)
mov
je
mov
sbb
fild
xlat
xchg
inc
adc
ficom
jmp
push
jno
and
mov
push
xchg
imul
mov
lds
add
mov
int3
sti
inc
jo
jl
xor
add
inc
pop
sub
add
and
js
sbb
fmul
mov
cmp
pusha
jmp
dec
add
add
pop
sub
inc
ins
jg
(bad)
sar
cmp
popf
xor
inc
ins
dec
and
mov
les
and
adc
adc
adc
pop
fisttp
fild
cmc
cmp
je
jge
xchg
sbb
test
ret
retf
popf
repnz
or
lods
cmp
es
nop
outs
ja
shl
add
pop
mov
mov
retf
adc
dec
dec
mov
sub
hlt
popa
dec
dec
pop
ror
sub
inc
jo
pusha
sbb
gs
cwde
fs
mov
aam
dec
js
push
pop
in
pop
inc
sbb
push
xor
mov
inc
in
sbb
call
lea
and
or
push
cmps
out
shl
dec
into
movs
mov
cmp
int
aam
inc
jmp
jge
leave
leave
push
test
lds
add
cdq
add
dec
mov
inc
and
hlt
sti
sbb
idiv
and
jge
and
(bad)
cmp
adc
movs
lods
faddp
lahf
add
mov
sti
push
push
repnz
xchg
and
sbb
inc
call
inc
cld
mov
loop
pushf
or
or
leave
adc
and
pop
or
mov
aam
mov
adc
or
push
cmps
jmp
ja
aaa
mov
inc
adc
test
stc
pop
add
mov
clc
ins
mov
and
es
and
mov
mov
dec
add
cmp
add
sti
mov
stc
pop
inc
mov
dec
mov
or
das
adc
lahf
mov
lahf
cmp
lahf
inc
test
xchg
mov
loope
sbb
mov
retf
cmps
inc
cmps
fimul
or
lahf
push
or
sete
xchg
xor
add
and
inc
jb
adc
in
inc
or
jg
dec
aas
mov
cld
sbb
and
stos
jmp
cwde
ss
out
xor
or
std
xor
push
popf
shl
outs
and
pop
(bad)
dec
mov
pop
sbb
test
jne
aam
or
xchg
mov
and
add
jl
adc
dec
mov
leave
or
xchg
adc
cmpxchg
mov
adc
mov
xchg
jg
arpl
pop
and
movs
or
cmp
sbb
inc
popa
add
or
push
inc
cdq
jo
sub
out
and
inc
mov
add
or
shl
push
pusha
lahf
shl
pop
test
or
sub
add
in
fs
in
in
int
xor
in
addr16
inc
(bad)
pop
mulps
and
or
lods
push
cmp
or
test
or
xchg
pop
call
or
mov
mov
mov
inc
pop
or
(bad)
leave
ret
mov
dec
stos
add
pop
inc
or
xor
pop
shl
loope
es
inc
push
sbb
das
icebp
mov
aas
push
pusha
adc
add
mov
ss
fistp
add
rol
sbb
or
aas
lea
lock
fwait
inc
dec
dec
or
mov
sbb
or
cs
movs
jbe
retf
ins
and
xchg
cld
xchg
test
xchg
or
xor
retf
or
or
int3
jg
add
mov
and
loope
or
cmp
push
enter
push
adc
add
or
retf
pop
or
mov
nop
idiv
mov
add
add
fst
xor
cld
es
enter
and
add
adc
sub
gs
or
pop
shl
jne
and
pop
inc
jl
ins
push
jbe
sbb
inc
test
imul
or
push
ret
and
fisttp
or
lahf
push
sbb
adc
gs
push
lahf
xor
jne
loopne
or
pop
test
add
pop
xor
add
sbb
dec
ins
xor
inc
or
cmp
lea
inc
test
hlt
or
mov
pop
inc
and
add
mov
add
fiadd
push
shr
adc
xchg
fisttp
mov
scas
cwde
fucomip
mov
pop
test
add
add
sbb
add
jecxz
adc
pusha
mov
das
lods
fst
sbb
test
or
sbb
add
mov
hlt
ror
xor
loop
jns
cmp
inc
pop
and
mov
adc
fbstp
scas
or
jmp
or
sbb
cmp
retf
cmp
and
(bad)
bound
jg
inc
cmp
mov
inc
push
stos
cwde
and
or
push
icebp
shl
cwde
movs
inc
pop
add
pop
retf
pop
pop
pop
xor
or
pop
push
sbb
mov
or
and
sub
mov
fadd
mov
adc
nop
jg
add
mov
cmp
or
lea
hlt
push
sub
pop
or
cmp
adc
mov
test
inc
xchg
jno
cwde
and
add
hlt
stos
sbb
xor
in
sub
lea
push
imul
popf
mov
mov
test
das
and
xchg
add
cmps
aas
call
imul
add
in
adc
cmp
je
and
test
or
dec
or
int3
test
inc
leave
sbb
push
add
pusha
in
or
loopne
inc
mov
sbb
mov
ret
sbb
pop
add
and
adc
dec
add
ror
xchg
adc
dec
stc
add
jmp
ret
aam
int
movs
fist
test
outs
dec
jp
sbb
std
lods
sbb
sbb
loope
je
stos
imul
push
mov
cwde
sub
inc
enter
jge
ror
mov
sar
and
inc
les
call
xor
push
inc
ss
les
adc
push
jns
out
stc
mov
or
adc
mov
add
test
cmp
ret
jmp
outs
in
add
pop
adc
stos
call
or
ins
add
test
pusha
lds
loope
adc
int3
inc
rcl
mov
xor
adc
lock
adc
mov
mov
push
cmp
or
jmp
or
and
and
cli
dec
adc
or
test
test
jle
mov
ret
adc
cmp
hlt
xor
std
loopne
push
and
push
scas
xor
push
das
rol
test
sbb
ror
fld
jecxz
push
adc
lock
shr
adc
xchg
add
test
push
push
pop
cwde
mov
xchg
cmp
rol
loopne
fwait
rol
and
xchg
xor
sbb
popa
mov
sub
or
sub
ret
rcl
ror
add
cmp
add
push
imul
and
test
mov
dec
and
sub
ins
rcr
rol
adc
popf
lods
sbb
add
fwait
sub
shl
or
push
fwait
mov
and
cmp
add
imul
nop
add
dec
push
(bad)
das
pop
add
ins
adc
movs
pop
test
pop
sub
cwde
mov
or
pop
lods
mov
cld
and
jns
shl
adc
xor
and
xlat
arpl
adc
lods
ret
push
and
lods
push
sbb
mov
push
xchg
pop
xor
cdq
(bad)
or
xor
sbb
push
inc
sbb
retf
dec
push
inc
push
pop
or
pop
nop
and
jo
push
mov
sub
or
xor
imul
ror
push
movs
mov
dec
dec
sbb
fisttp
lahf
xor
push
xor
xor
fsubr
cwde
test
cmp
retf
imul
and
mov
(bad)
jne
ss
push
add
pusha
add
jbe
or
in
js
dec
mov
mov
ret
arpl
jmp
lea
pop
addr16
dec
mov
and
fadd
jnp
add
mov
or
imul
xchg
and
push
sub
sub
inc
and
cdq
mov
das
sbb
imul
add
mov
add
ret
mov
or
pop
in
mov
inc
cmp
adc
sbb
mov
lods
fwait
add
inc
retf
adc
sub
(bad)
jmp
loop
lahf
stos
push
pop
stc
mov
mov
push
call
inc
nop
pop
push
push
inc
pop
mov
xor
mov
pop
cmp
stos
inc
add
and
add
imul
addr16
je
push
rol
cmp
inc
(bad)
rol
push
fadd
fisttp
lods
cmp
daa
fwait
inc
push
leave
inc
sub
adc
xor
sti
push
sar
mov
repz
hlt
push
sbb
dec
cmp
ret
nop
rcr
lods
adc
fwait
inc
xlat
cmp
cmp
or
or
mov
pop
push
test
push
inc
or
gs
fs
adc
add
add
adc
push
xchg
sub
pop
xchg
inc
hlt
push
jg
sbb
push
jg
mov
add
scas
push
jmp
mov
jbe
ins
xor
mov
call
cs
ja
mov
add
sti
xchg
cmp
add
je
mov
rcl
mov
inc
loopne
mov
cmovb
jg
and
add
add
in
sbb
sub
push
rol
add
dec
mov
icebp
adc
rcr
push
adc
and
and
cmps
and
and
add
cmp
popa
xchg
icebp
ins
xchg
loope
cmp
cmp
xor
retf
inc
pop
dec
and
lahf
inc
gs
mov
jmp
mov
fisttp
sahf
ins
bound
pop
lods
push
(bad)
push
rol
inc
cwde
sbb
xor
loope
hlt
inc
jmp
or
lea
cmp
cmps
adc
loopne
and
adc
mov
hlt
adc
xor
lahf
jl
div
adc
fwait
int
pop
imul
popa
cmp
fiadd
push
mov
pusha
in
push
add
inc
icebp
dec
shl
xor
lods
add
cs
dec
test
lods
les
push
cmc
shl
jle
mov
lock
cmp
push
mov
xchg
in
sbb
inc
arpl
add
in
sbb
add
or
leave
pop
pop
not
inc
mov
sub
mov
fdiv
adc
add
xor
imul
pop
pop
shl
add
mov
cld
pop
stos
dec
sbb
jmp
jg
xorps
adc
pop
dec
add
inc
push
push
sub
in
push
xchg
mov
arpl
fild
cmp
sub
add
sbb
xchg
mov
and
sbb
xor
xchg
inc
sbb
(bad)
jno
dec
inc
aaa
inc
cdq
imul
cmc
push
inc
or
pusha
or
mov
push
xor
sbb
outs
loopne
mov
pop
(bad)
pop
out
jg
inc
or
dec
icebp
sub
pop
xchg
or
lea
cmps
cmps
cmps
xchg
hlt
or
adc
jmp
sub
adc
hlt
loopne
sbb
push
dec
loop
jne
outs
xchg
mov
cs
sub
cmps
xchg
cld
sbb
sbb
pop
and
clc
cld
sbb
pop
or
pop
in
dec
add
movs
dec
inc
push
or
loope
push
or
xchg
clc
cld
add
ret
pop
pushf
nop
hlt
dec
add
ret
and
xor
inc
pop
cmp
mov
sub
add
enter
inc
sbb
enter
or
and
adc
popa
add
enter
add
jmp
mov
outs
out
xchg
xlat
pushf
inc
sub
or
mov
aam
add
sub
mov
mov
push
add
push
cmp
call
test
pop
jge
or
jbe
add
pop
inc
push
or
mov
jmp
and
mov
call
je
dec
push
inc
call
in
sbb
aas
xor
sub
cmp
add
add
lds
inc
or
pushf
adc
lds
and
dec
cmp
push
pop
popa
jl
sbb
mov
lahf
ror
push
loope
push
pop
pop
aas
test
call
xor
and
and
jnp
jl
pop
mov
or
and
mov
jmp
loopne
or
lock
(bad)
jmp
dec
loopne
mov
inc
fild
dec
aam
fst
adc
or
clc
popa
or
xor
inc
movs
xor
ins
push
cwde
test
outs
adc
pusha
mov
or
mov
sbb
call
or
popa
mov
jns
or
or
jl
pop
aam
mov
push
(bad)
push
test
icebp
push
addr16
clc
in
and
mov
inc
stos
sub
mov
icebp
fnstcw
dec
mov
mov
enter
movs
and
xchg
add
add
call
retf
sub
sbb
adc
pop
js
nop
mov
call
lea
xor
dec
pop
or
add
je
jg
push
repz
add
push
add
mov
dec
mov
adc
adc
xor
inc
leave
lahf
mov
enter
pop
or
and
pop
sbb
adc
sbb
sub
adc
adc
pop
inc
cwde
pop
lahf
dec
mov
xchg
sbb
mov
imul
ins
add
adc
ja
jae
call
or
popa
jge
dec
scas
dec
adc
inc
dec
jae
sbb
iret
test
add
xor
add
inc
sub
and
add
mov
fsub
sub
and
dec
sbb
fdiv
xchg
pop
or
sbb
sahf
push
xchg
inc
movs
into
mov
inc
retf
(bad)
inc
push
fsubr
ins
sbb
push
mov
mov
cmp
inc
and
sbb
loope
loope
xor
pop
int
inc
jnp
push
jmp
rol
or
stos
dec
arpl
(bad)
fdiv
movs
push
add
cmp
imul
stos
inc
sub
outs
push
or
mov
inc
fsubr
cmc
dec
lea
inc
push
and
mov
sub
adc
rcl
in
jmp
adc
xchg
lock
mov
mov
jmp
sbb
cmc
or
add
aaa
nop
push
jmp
inc
test
hlt
stos
in
add
adc
sti
fsub
hlt
push
mov
mov
adc
(bad)
mov
stc
aaa
push
or
loop
add
add
push
jecxz
add
arpl
sub
fwait
bound
jno
(bad)
or
jecxz
xchg
pop
sub
call
lahf
call
gs
and
push
dec
icebp
mov
mov
cmp
ins
inc
adc
push
pop
into
xchg
loope
push
sbb
or
popf
hlt
xchg
mov
or
popf
sub
mov
sub
jmp
jmp
rcr
xor
in
cmp
ret
(bad)
inc
adc
in
and
icebp
dec
jbe
push
loopne
nop
inc
push
leave
dec
sbb
add
cmp
imul
pop
aas
and
adc
cmp
mov
ficom
mov
dec
fsubr
mov
mov
inc
test
inc
aas
push
push
test
aas
outs
jge
mov
aam
outs
mov
movs
jbe
aas
jo
aas
pop
in
test
cmp
cmp
add
jmp
js
aas
push
jmp
js
sub
inc
in
adc
sbb
cmp
dec
add
xor
repnz
dec
pushf
mov
repz
or
mov
jg
das
sbb
jge
loopne
adc
add
movs
xchg
cmp
aas
es
shl
add
xor
jns
add
or
mov
movs
jecxz
in
or
stos
pushf
dec
prefetch
shl
aad
sbb
or
loopne
shl
or
dec
rol
push
xchg
mov
add
hlt
xchg
xor
mov
mov
jo
inc
xchg
or
mov
and
aas
mov
es
hlt
jmp
add
addr16
nop
add
ror
dec
cwde
mov
js
test
cwde
leave
push
loop
or
or
push
(bad)
mov
gs
repz
lock
push
test
leave
test
arpl
loop
add
inc
pop
lock
lea
push
inc
test
mov
adc
push
(bad)
add
or
pushf
jb
pop
in
lea
adc
dec
js
loop
pushf
push
mov
jmp
fistp
jb
mov
call
pop
in
enter
lods
inc
and
xor
clc
inc
and
enter
or
xchg
sbb
clc
add
(bad)
(bad)
pop
test
mov
pop
rol
in
inc
retw
in
push
inc
sub
clc
mov
jmp
pop
mov
add
hlt
sar
add
ret
enter
mov
es
pushf
and
jbe
jne
add
call
rcl
cld
add
mov
inc
add
cmp
cld
jns
mov
and
rcl
clc
cmc
stos
xor
inc
clc
add
lock
popa
cwde
or
cld
add
fcom
clc
sti
clc
std
imul
mov
inc
movs
or
mov
int3
adc
clc
in
push
enter
clc
adc
xchg
sub
clc
test
and
jno
stos
es
jmp
and
xchg
clc
mov
sub
add
leave
dec
pop
dec
jo
jo
adc
inc
dec
jo
mov
cdq
fwait
sbb
nop
inc
cdq
fwait
dec
jo
inc
pop
or
jo
dec
pop
add
cdq
or
dec
jg
mov
xchg
ror
aas
shl
pusha
inc
cmps
mov
call
cli
mov
xchg
lods
jmp
movs
adc
push
sub
mov
add
or
xor
dec
shr
or
xchg
popa
sbb
sbb
adc
dec
mov
lods
adc
jg
sub
and
imul
jno
xchg
inc
jle
sbb
test
sub
lea
daa
add
nop
leave
jmp
pop
add
add
aas
cmp
push
aas
cmp
pushf
mov
fcom
aas
inc
mov
push
mov
aas
mov
pop
add
rcr
and
and
mov
ror
jg
add
jge
adc
rcl
push
test
mov
loopne
or
cmp
add
imul
add
push
inc
aaa
fwait
ja
dec
pusha
xor
jmp
push
or
inc
ins
add
adc
add
xchg
or
or
dec
ror
test
sub
imul
(bad)
mov
aad
push
mov
mov
add
inc
inc
sbb
jecxz
clc
mov
sbb
clc
stos
clc
adc
dec
lahf
dec
or
sbb
adc
mov
pop
lahf
inc
popa
sub
(bad)
popf
and
in
loope
in
adc
fldenv
sub
pop
xchg
test
jmp
mov
push
and
jl
popa
sbb
pushf
aas
or
ins
imul
mov
add
add
arpl
inc
in
inc
adc
push
mov
fs
je
test
cs
call
jecxz
shr
lahf
push
call
or
inc
or
stos
lock
dec
rol
scas
pop
add
hlt
mov
scas
jne
nop
les
xchg
adc
jmp
xor
adc
sbb
or
clc
cmp
ror
adc
cs
adc
ror
sub
mov
(bad)
dec
repz
inc
jecxz
aas
inc
popf
mov
xchg
mov
popf
mov
or
xchg
jmp
jo
xchg
sub
or
sbb
add
jg
lock
popa
and
pusha
adc
out
xlat
mov
stos
hlt
sub
adc
adc
or
sbb
mov
sbb
clc
mov
mov
rcl
sub
sbb
ret
jmp
or
inc
aas
xor
or
sub
sbb
loopne
arpl
dec
loope
dec
in
adc
movs
(bad)
adc
cmp
inc
jmp
add
push
mov
call
fisttp
es
mov
sahf
shl
movs
je
scas
and
xlat
ins
dec
add
retf
dec
pop
pop
pop
pop
clc
push
and
sbb
adc
cmp
dec
mov
inc
sub
mov
add
sbb
mov
dec
sbb
loopne
dec
addr16
inc
cmps
in
xor
(bad)
shr
or
sbb
out
adc
or
inc
sbb
mov
sbb
lahf
push
push
mov
inc
adc
mov
scas
add
adc
mov
adc
mov
sbb
lds
dec
mov
mov
sbb
scas
push
(bad)
mov
movs
das
sbb
jbe
dec
pop
or
add
jg
and
xor
inc
and
test
push
jg
xor
xor
or
add
inc
dec
xor
inc
push
enter
dec
xor
push
jb
dec
xor
test
add
dec
add
leave
popa
les
movzx
stos
int3
sbb
push
cmp
imul
pop
inc
outs
les
cmp
leave
fdivr
mov
shr
or
inc
pop
fidiv
add
rcl
jo
cmps
jl
test
popa
inc
pop
lds
add
add
loopne
add
jg
xor
push
adc
dec
xor
test
ficom
inc
aad
add
lods
add
ss
test
cmovl
sub
movzx
or
(bad)
push
loope
test
data16
data16
sub
and
cmp
test
xor
(bad)
fnstsw
clc
inc
shr
in
jmp
call
jae
scas
add
pushf
jge
and
dec
cli
dec
add
xchg
gs
sbb
adc
popf
dec
movs
sbb
and
lods
in
mov
or
and
test
sbb
sub
mov
inc
dec
test
fist
and
inc
push
stos
mov
mov
(bad)
les
cmps
or
sub
fild
mov
aas
fild
xor
jo
inc
and
je
push
(bad)
mov
leave
inc
jle
mov
(bad)
loopne
inc
lahf
in
leave
push
xor
rcl
fdivr
imul
imul
add
fisttp
dec
test
ror
xor
retf
push
fs
mov
add
inc
cld
sbb
push
cmp
popa
push
in
add
adc
jmp
jmp
sub
sbb
mov
rcl
push
call
(bad)
mov
mov
mov
adc
les
sbb
sbb
or
adc
pop
jmp
pop
call
mov
clc
push
push
adc
adc
dec
fs
inc
call
sbb
pushf
mov
and
call
aad
xchg
call
add
mov
mov
lods
adc
xor
mov
shr
inc
movs
(bad)
sub
jne
push
ins
dec
sbb
lods
(bad)
inc
xor
push
jg
adc
adc
aas
mov
jge
mov
pop
and
aas
sub
mov
cld
lods
enter
retf
and
into
adc
mov
mov
pusha
dec
cmp
xchg
xchg
or
adc
sub
and
pushf
dec
adc
lahf
sbb
inc
lahf
mov
dec
add
inc
sub
lahf
and
adc
test
mov
inc
lahf
inc
jb
cmp
sub
mov
adc
nop
dec
or
add
test
add
push
ret
loop
mov
daa
fstp
ins
rcr
fsubr
mov
dec
xor
pop
xchg
loop
call
lock
xor
fucomp
jmp
imul
cmp
cdq
clc
pop
out
dec
(bad)
push
mov
shr
stos
jmp
loopne
inc
mov
mov
movs
ret
inc
clc
sbb
xchg
add
pushf
test
or
dec
mov
jmp
cmp
dec
and
add
inc
add
pop
xor
in
clc
inc
xchg
lock
lock
add
dec
and
inc
xor
pop
das
adc
arpl
and
retf
push
aas
push
mov
in
sub
lahf
mov
nop
add
lahf
in
inc
xchg
in
xor
lea
test
mov
sbb
jb
mov
clc
inc
cs
push
mov
add
or
sub
push
and
add
(bad)
xchg
add
mov
mov
aas
mov
xchg
push
inc
ffreep
adc
mov
adc
mov
adc
and
or
les
xor
call
dec
xor
pushf
add
sti
lahf
retw
push
or
dec
add
scas
shr
jb
fcomp
fsub
sbb
call
or
or
add
and
ret
in
inc
arpl
inc
mov
or
pop
out
loop
les
jl
fdiv
adc
shl
jne
pop
and
iret
popa
inc
lock
dec
pop
mov
sbb
fcomp
xchg
xchg
push
sub
and
mov
and
jl
fs
les
and
adc
inc
mov
jno
or
sub
or
pop
add
sbb
ret
vshufps
pusha
adc
mov
rol
test
add
cld
and
add
xchg
xor
jmp
pop
adc
mov
inc
cmps
cwde
jg
push
rcl
or
mov
xchg
movs
data16
mov
imul
scas
add
xor
push
adc
xor
cmp
push
sbb
ret
mov
inc
(bad)
fld
add
int
test
data16
and
add
out
or
jmp
mov
adc
mov
sbb
jg
repnz
rcr
sub
xor
test
mov
adc
inc
ret
push
lahf
add
push
dec
pop
xor
mov
push
js
mov
and
xor
aas
and
pop
inc
test
adc
jg
push
add
push
iret
call
add
add
pop
mov
bound
dec
in
data16
push
mov
fcom
mov
and
sub
add
jg
mov
sbb
data16
popa
(bad)
fbld
add
jb
int3
vaddss
stos
dec
sbb
and
aas
add
xor
mov
mov
lea
je
call
in
add
mov
popa
test
sbb
test
mov
jmp
in
test
adc
add
in
push
test
lea
and
nop
push
pop
xchg
adc
mov
adc
pushf
mov
(bad)
call
or
pop
xchg
popa
mov
ins
popa
js
lahf
and
mov
cwde
pusha
mov
rcl
adc
mov
cmp
dec
call
push
xchg
fwait
sar
xchg
mov
and
rcr
(bad)
loopne
jecxz
xchg
and
sti
pop
mov
mov
push
mov
jbe
cmps
nop
enter
mov
rol
loope
add
das
dec
mov
xchg
sbb
push
sbb
shl
push
or
cwde
inc
retf
sbb
fimul
sar
mov
xchg
push
cmp
jnp
je
ins
xchg
and
call
jp
mov
sbb
leave
fs
jb
je
mov
jae
shl
add
xchg
xchg
xor
pop
shl
or
mov
adc
add
xchg
and
push
pop
xchg
inc
sbb
sbb
movs
neg
les
add
movs
out
(bad)
sbb
shl
xor
mov
adc
push
push
dec
mov
dec
ja
inc
sbb
inc
aaa
or
push
dec
sub
sub
mov
je
dec
xor
ss
pop
mov
(bad)
int
xor
push
inc
xor
inc
inc
xor
lods
fwait
jne
cmp
pop
sub
mov
sbb
je
rcr
je
inc
mov
xchg
push
and
push
xchg
add
test
retf
aaa
scas
and
fldcw
(bad)
jb
inc
or
sub
push
and
and
sub
ins
jge
sub
push
jo
das
push
adc
jmp
ds
imul
dec
inc
add
jne
sbb
push
cmp
xor
xor
or
or
shl
and
(bad)
mov
jo
add
inc
inc
dec
xor
mov
pop
loope
jmp
dec
add
sub
xchg
cmp
jmp
mov
adc
dec
enter
xor
xor
mov
sti
call
push
ja
jno
pop
adc
aam
sbb
shl
fld
mov
cld
cmc
rol
and
lock
lock
or
or
add
xchg
add
pusha
hlt
mov
in
pop
dec
loope
inc
or
movs
cmp
ins
or
inc
xor
sub
xor
mov
in
mov
add
adc
add
xor
xchg
dec
es
adc
xchg
xchg
mov
and
loop
dec
dec
lock
das
es
int3
and
xchg
icebp
clc
fisttp
xchg
and
mov
inc
xor
test
and
daa
lods
jecxz
push
and
mov
sub
push
xchg
inc
jge
xor
jle
or
mov
add
sbb
mov
das
dec
xor
mov
mov
cld
daa
repz
xor
lea
jae
imul
or
lea
push
mov
sbb
xchg
scas
xor
mov
jmp
inc
add
popa
or
mov
jae
movs
mov
and
mov
pusha
xchg
sub
add
push
sub
jmp
lock
inc
pop
inc
ins
scas
push
in
adc
pop
xchg
inc
das
imul
inc
and
adc
data16
jl
retf
add
mov
jp
and
sub
add
cmp
mov
cmp
cmp
sub
inc
adc
adc
dec
in
pop
ret
add
fild
nop
add
inc
outs
loope
mov
stc
sub
add
xchg
cmp
loopne
add
add
push
movs
rcl
call
cmp
pusha
rcr
aam
push
add
popa
pusha
cmp
fadd
scas
cmp
dec
(bad)
dec
aam
dec
das
shl
cmp
leave
in
xchg
push
xchg
pop
xor
and
push
mov
fadd
push
ret
fs
jae
or
inc
dec
pop
xor
loopne
or
icebp
loopne
imul
fmul
test
and
je
lahf
in
xor
push
mov
pop
popa
test
inc
pop
ret
mov
or
nop
outs
or
or
mov
clc
mov
jne
popa
ins
or
mov
or
and
in
hlt
mov
popa
ins
nop
mov
cmps
fbstp
test
mov
or
(bad)
xlat
and
push
lock
mov
mov
push
test
xchg
mov
shr
add
scas
pushf
pop
xor
cmp
aaa
adc
in
push
push
imul
sub
and
mov
rcr
pop
mov
or
popa
daa
popa
ins
(bad)
pusha
call
xchg
ror
adc
mov
add
int
rol
or
nop
fiadd
call
add
shl
sbb
out
loope
cmp
add
dec
jl
rol
jne
or
es
fsub
lods
ss
push
adc
dec
dec
cs
mov
in
xchg
fwait
mov
and
bnd
mov
pop
sbb
int3
je
push
ret
imul
enter
fsubr
add
stc
cmc
outs
mov
xchg
adc
rol
aam
or
push
pop
pop
or
adc
test
(bad)
loope
push
ja
cmp
and
or
add
xor
les
push
or
out
or
je
rol
loope
outs
rol
sbb
sbb
sub
fstp
or
mov
pop
jno
loope
pop
je
mov
jne
jne
cmp
inc
inc
fdiv
jne
xor
rcr
outs
or
sbb
push
cmc
sub
pop
xchg
icebp
pop
hlt
xor
jge
jno
adc
mov
aad
push
lods
lea
mov
cmps
mov
pop
lods
loope
xchg
mov
loopne
or
(bad)
xor
loopne
or
adc
fwait
push
hlt
push
add
addr16
clc
arpl
mov
mov
inc
mov
inc
xchg
mov
inc
or
stc
jae
add
mov
retf
jmp
or
sbb
or
sahf
pushf
adc
mov
sbb
dec
jo
push
aad
add
cwde
test
fstp
in
xchg
pop
popa
test
mov
inc
test
push
adc
sbb
test
rol
sbb
lock
or
mov
add
and
dec
les
pop
jae
popa
adc
stos
jge
ror
stos
and
push
xor
mov
push
retf
xchg
test
fisttp
cmp
es
push
call
add
mov
and
ror
pop
sub
add
lock
jecxz
mov
les
mov
inc
jmp
push
(bad)
mov
xchg
fcom
arpl
push
xchg
xchg
add
or
fwait
and
arpl
sub
call
rol
xchg
sub
or
xor
les
pop
and
adc
pop
xchg
and
loope
dec
mov
aas
mov
shl
add
mov
popa
loopne
adc
test
loopne
retf
test
loopne
cmp
lock
test
add
jl
or
jle
adc
mov
lods
rol
cmp
mov
aaa
xor
mov
pop
adc
cmp
movs
mov
(bad)
lahf
or
fwait
sbb
test
add
sbb
mov
imul
push
ss
dec
popa
pop
dec
loop
ret
gs
test
inc
xchg
(bad)
in
sar
dec
pop
push
mov
add
jg
ja
out
dec
aam
aam
push
aas
add
or
aam
or
aaa
xchg
and
and
adc
or
and
not
dec
(bad)
mov
sub
lock
add
icebp
lea
or
call
nop
pop
imul
gs
ja
icebp
test
dec
in
push
or
adc
iret
dec
adc
jl
in
cmp
es
je
push
icebp
lods
inc
adc
pop
lahf
and
ins
sbb
cs
call
rcl
xlat
shr
inc
mov
test
clc
pusha
and
cmc
fisttp
lods
aas
lods
cmp
xchg
movs
or
inc
add
ins
mov
test
js
mov
mov
dec
adc
(bad)
stc
mov
jmp
shl
test
in
iret
push
inc
cmp
pushf
and
mov
or
jo
inc
ja
sbb
sub
cwde
das
lods
fs
sbb
xor
or
arpl
pop
pushf
(bad)
mov
pop
pop
adc
jne
mov
inc
fs
nop
mov
imul
cli
mov
push
test
nop
iret
nop
mov
dec
add
imul
pop
add
jge
sti
jne
and
or
and
loopne
rcr
and
fisttp
or
frstor
push
(bad)
dec
ins
sahf
retf
xor
adc
addr16
fld
nop
or
or
imul
clc
push
sbb
add
jo
idiv
mov
sahf
and
retf
mov
mov
dec
dec
(bad)
shl
ror
or
mov
jmp
mov
or
or
ror
and
in
jno
xor
xchg
mov
dec
div
shl
loop
pop
mov
mov
test
or
jl
daa
cmp
test
or
xchg
sbb
ins
jecxz
daa
mov
or
dec
xchg
push
mov
mov
(bad)
sbb
add
sbb
pop
ja
(bad)
and
push
or
adc
lahf
adc
and
rol
dec
loopne
and
xchg
adc
inc
aas
add
mov
xchg
ret
dec
add
jae
jg
stos
or
cmps
sub
jo
(bad)
ja
mov
adc
push
sub
or
and
dec
mov
sub
sub
push
xor
imul
adc
ins
bound
shl
rol
mov
or
aaa
push
adc
jnp
mov
sbb
add
call
bound
adc
add
sbb
xchg
mov
or
adc
jp
add
inc
jecxz
and
jae
into
add
adc
shr
dec
pop
mov
fwait
jne
adc
jo
jnp
mov
and
inc
jecxz
cmp
rcl
cwde
retf
mov
adc
lea
hlt
aad
loopne
xchg
aas
push
xor
inc
sbb
loopne
push
arpl
push
adc
add
adc
pusha
icebp
adc
sbb
std
inc
add
jbe
retf
and
push
imul
cmp
mov
popa
in
jae
fild
rol
pop
mov
push
or
cmp
js
mov
inc
loop
(bad)
mov
pushf
and
push
and
push
push
(bad)
and
(bad)
pop
sbb
shl
fnsave
mov
ja
and
jae
inc
adc
xor
mov
adc
push
add
int
xchg
js
add
push
mov
jmp
push
push
cmp
movs
in
jmp
xor
jecxz
push
pusha
mov
jbe
movs
add
and
inc
push
push
sbb
comiss
push
sbb
add
xor
bnd
movs
jmp
add
inc
shl
imul
cmp
lods
fs
xor
ret
mov
or
xchg
dec
(bad)
fild
sti
out
clc
or
add
cmp
movs
add
cdq
jp
adc
hlt
in
lods
scas
sub
inc
scas
or
aas
pop
pop
or
add
push
xor
push
and
cmp
jne
retf
ins
mov
or
and
jg
jbe
icebp
add
popf
retf
rol
or
or
inc
adc
jl
movs
sub
or
test
cmp
and
pusha
jbe
gs
push
xor
mov
or
pop
mov
inc
sbb
mov
or
ss
push
mov
mov
shl
or
jge
stos
sbb
pusha
jbe
push
or
and
sbb
add
mov
sbb
and
xor
adc
data16
cmp
call
repz
adc
pop
or
imul
add
mov
and
inc
ret
or
mov
pusha
aas
mov
inc
add
aad
pop
pop
test
stc
add
test
add
shl
or
lea
add
cmp
js
and
and
push
es
adc
inc
mov
fs
cld
arpl
icebp
arpl
jmp
cmp
xor
outs
xor
mov
jge
adc
jne
sbb
sub
je
add
mov
dec
cmp
jb
and
inc
push
add
inc
add
cmp
pusha
sub
icebp
and
and
stc
cmp
pop
or
cmp
mov
arpl
es
mov
dec
add
daa
loope
xchg
retf
call
jne
pop
sbb
or
popa
or
cld
cmp
add
or
sar
imul
add
cdq
in
pushf
adc
cld
add
fcomp
icebp
mov
and
gs
push
mov
push
add
push
xchg
int3
jbe
shl
mov
or
adc
test
adc
lahf
loope
mov
mov
xchg
pop
and
scas
aam
frstor
xchg
sbb
inc
test
sbb
pop
pop
pushf
xor
ins
and
xchg
add
inc
cwde
adc
lds
dec
pusha
push
cmp
xor
es
inc
js
fcmovnu
rol
xor
xchg
and
xor
add
xor
stos
mov
mov
mov
mov
xor
mov
rcr
and
or
xchg
mov
pop
sbb
xor
inc
xor
les
into
and
movs
std
call
loopne
push
sbb
enter
ja
movs
mov
adc
mov
and
(bad)
mov
es
or
dec
add
and
push
fcom
jo
repnz
ins
inc
inc
or
mov
test
js
movs
out
push
push
test
dec
pop
jmp
push
aaa
(bad)
push
or
mov
mov
test
ret
xlat
(bad)
add
pop
push
or
add
test
cmp
aam
mov
adc
test
xchg
aam
or
mov
xor
sbb
jbe
add
and
pusha
imul
ss
pop
clc
js
mov
and
clc
mov
rcr
dec
inc
add
mov
sbb
aam
pushf
mov
push
sahf
xchg
dec
xor
jno
test
inc
movs
mov
xor
mov
mov
not
jno
adc
or
test
pop
push
cld
and
jo
in
aaa
movs
jbe
sbb
test
mov
add
and
lahf
or
aaa
xchg
inc
(bad)
aas
fbld
push
inc
clc
mov
pop
dec
sbb
fst
lock
retf
cld
cmovs
aam
test
ror
mov
repz
test
out
and
mov
shl
pop
xor
dec
mov
xor
dec
or
out
test
mov
or
add
adc
ins
jmp
push
mov
sub
lea
adc
pop
fwait
rol
dec
jo
out
add
adc
outs
pop
push
xor
add
sar
pop
or
add
(bad)
sbb
loopne
bound
jge
push
ja
push
adc
jne
ins
push
jmp
mov
mov
icebp
jp
mov
adc
dec
dec
ror
scas
inc
or
(bad)
push
lea
or
mov
push
clc
dec
les
pop
push
rcr
push
dec
add
or
cmp
xchg
or
push
js
daa
pop
adc
jp
inc
or
test
dec
in
shr
sub
and
daa
xchg
test
push
lock
dec
sbb
cmp
lock
mov
ret
and
lea
popa
dec
cmp
add
mov
sub
js
add
sbb
lods
xchg
push
test
dec
int
and
mov
fadd
or
ss
movs
and
adc
mov
and
inc
xor
(bad)
call
or
jae
sbb
gs
jo
and
sub
or
loop
push
pushf
(bad)
jmp
push
cmp
aaa
test
lahf
xchg
inc
mov
sub
je
mov
daa
ret
test
and
pop
fcmovne
push
dec
sbb
mov
pop
addr16
enter
push
ss
int3
adc
in
int3
rcl
iret
inc
nop
xchg
sbb
inc
loope
push
xchg
pop
push
mov
inc
dec
and
pop
mov
mov
and
pop
add
inc
rcl
pusha
or
and
icebp
xor
popa
sub
stc
or
add
mov
lea
xor
inc
nop
pop
and
std
cmp
fld
xor
add
cdq
adc
adc
fptan
lock
pushf
in
fimul
mov
push
aas
iret
ret
add
adc
cld
loopne
jmp
pusha
mov
mov
mov
sub
dec
xchg
mov
sbb
enter
sbb
ret
push
sbb
aam
prefetcht2
mov
fnstcw
fstp
pop
fstp
fstp
xchg
adc
sbb
jae
jl
fmul
add
push
add
jae
popa
push
jmp
popa
adc
adc
pushf
xchg
or
add
sub
ds
mov
jmp
and
(bad)
sbb
mov
cmp
ins
aad
adc
jp
cld
mov
repz
mov
bnd
pop
mov
fnstcw
jb
jmp
mov
imul
jns
mov
push
push
data16
pop
push
push
out
sahf
out
mov
mov
mov
xchg
stos
xchg
hlt
jmp
xor
dec
cmp
rol
cli
mov
repz
popf
mov
repz
adc
or
jns
and
dec
pop
cli
add
popa
stos
outs
lahf
push
dec
adc
mov
sbb
push
add
mov
mov
mov
pop
std
or
pop
unpcklps
or
jl
stos
sbb
xchg
jg
loope
inc
cwde
call
inc
clc
ror
imul
adc
and
lods
or
push
test
and
leave
jne
sub
int
cmp
nop
lods
inc
aas
pop
add
repnz
mov
imul
movs
pop
jmp
dec
or
pop
inc
add
ret
dec
shl
ss
(bad)
dec
push
sub
(bad)
cs
add
and
dec
sbb
sar
and
jno
add
sahf
stc
std
daa
sar
neg
sbb
sbb
shl
xor
rcr
push
pop
jmp
inc
fistp
push
aas
or
and
rol
lahf
arpl
in
xchg
mov
jp
je
shr
add
push
lock
push
add
sub
sbb
stos
add
test
add
jg
mov
or
adc
jg
nop
and
or
and
push
jg
ror
or
nop
jg
or
aas
or
fadd
adc
push
or
push
shl
cmps
and
cli
push
sub
push
shl
jae
add
fs
push
shr
test
xchg
stos
std
test
inc
or
test
inc
bound
jecxz
pop
jae
inc
mov
fadd
sub
xchg
js
and
int
or
ret
push
or
jle
pop
dec
or
jmp
sub
in
xchg
lds
stos
mov
dec
jmp
and
iret
jmp
add
inc
stos
aaa
xchg
add
push
add
cwde
jns
jge
pop
add
dec
sbb
or
dec
inc
mov
cwde
inc
mov
sub
mov
std
jmp
push
add
adc
mov
in
mov
ror
mov
sbb
push
pop
popf
add
mov
sbb
inc
cs
add
mov
inc
adc
test
in
or
outs
mov
in
push
outs
bound
or
mov
pop
add
add
fldenv
push
pop
mov
or
rol
cmp
dec
mov
and
pop
mov
test
cmp
hlt
mov
rcr
out
out
jo
sahf
add
xchg
pop
or
sbb
retf
sub
inc
add
pop
jne
or
inc
fwait
inc
lds
xchg
cmp
sub
or
add
les
loope
clts
dec
or
fsubr
pop
add
fdivr
dec
(bad)
push
(bad)
cmp
jecxz
jbe
pop
fsubr
add
mov
cmp
adc
dec
and
inc
aas
xchg
add
dec
lods
daa
(bad)
mov
push
(bad)
cmp
imul
sbb
mov
aam
aam
mov
sub
fsubr
push
cld
aam
push
sbb
mov
xchg
adc
mov
mov
add
aas
sbb
push
nop
sti
xlat
adc
loopne
xchg
popf
adc
movs
sbb
fcom
test
js
mov
(bad)
mov
or
ret
adc
sbb
add
add
adc
bound
mov
cld
pop
or
ss
sbb
fcomp
dec
add
sub
or
dec
shr
dec
loope
stc
add
je
pop
and
sub
mov
stos
add
loopne
xchg
add
cmp
inc
add
inc
or
add
xchg
add
clc
xchg
pop
dec
pop
adc
push
mov
sar
sbb
mov
(bad)
clc
sbb
iret
push
inc
popa
cmp
call
sub
cdq
pop
test
adc
pop
inc
call
lahf
mov
adc
ds
xchg
pop
add
in
cmp
add
fs
inc
inc
or
out
pop
ja
int3
inc
or
mov
adc
mov
inc
adc
je
sbb
inc
jmp
jne
inc
sbb
xor
and
fnsave
clc
inc
sub
les
test
sub
and
cmp
xchg
retf
(bad)
push
xor
pop
adc
mov
inc
xlat
add
or
mov
push
or
adc
push
sub
jge
sbb
mov
sbb
jnp
movs
push
ret
outs
xchg
push
push
xchg
cmp
ror
cmp
add
or
inc
jo
xor
retf
lods
and
add
inc
inc
outs
push
pusha
jne
shr
stos
and
push
test
push
dec
(bad)
inc
pop
cmp
in
sbb
(bad)
sbb
lods
cmp
xor
mov
add
inc
xchg
or
mov
dec
gs
fs
arpl
inc
sub
xor
push
adc
push
sub
int
prefetch
fwait
clc
mov
test
out
lds
sub
popf
(bad)
(bad)
ja
add
mov
mov
rcl
pop
cwde
(bad)
imul
out
ins
sbb
or
mov
add
dec
fisttp
je
adc
gs
aam
mov
jmp
das
mov
adc
push
and
cmp
mov
adc
stc
inc
push
or
cmp
adc
adc
imul
xchg
push
dec
dec
jne
inc
and
gs
adc
add
cmp
lock
loope
test
call
adc
cmp
adc
pop
(bad)
jnp
sbb
push
imul
int
mov
mov
mov
or
rcl
jecxz
inc
in
adc
in
mov
xor
(bad)
adc
xor
aas
inc
stos
mov
jg
push
popa
test
dec
mov
mov
aas
cwde
dec
adc
adc
adc
sbb
das
adc
cwde
inc
jecxz
xor
ins
xor
jo
add
adc
fstp
mov
push
pop
jecxz
add
xchg
loope
push
fwait
js
jmp
test
(bad)
lock
fdiv
fdiv
fcom
sub
inc
pop
adc
fsubr
push
sbb
outs
loope
push
add
add
in
adc
inc
fbstp
inc
add
or
mov
adc
cwde
(bad)
or
add
push
inc
mov
xchg
mov
jg
pushf
sub
shl
pop
mov
mov
add
adc
mov
adc
and
loop
lea
jno
mov
mov
fidivr
lds
jae
lock
xor
mov
mov
adc
or
loopne
retf
inc
hlt
popa
or
push
loope
push
mov
inc
std
adc
jo
xchg
clc
push
lods
popa
mov
sub
hlt
sub
test
xor
mov
out
jmp
adc
xor
adc
lahf
xchg
adc
rol
add
mov
and
inc
je
lea
sbb
shr
xor
mov
add
or
sbb
test
in
jmp
xor
push
jmp
add
test
adc
pop
icebp
mov
xor
hlt
ins
and
mov
mov
ja
clc
pop
cwde
add
or
ret
jecxz
push
mov
dec
or
sub
mov
sbb
add
sbb
push
out
or
rcr
inc
and
or
std
clc
adc
sbb
xchg
and
pop
hlt
push
hlt
or
xlat
(bad)
jmp
mov
or
(bad)
dec
xor
dec
jbe
call
lock
sub
mov
cmp
call
test
ror
add
and
pop
nop
add
push
arpl
adc
ret
out
or
(bad)
cmp
data16
lahf
ret
das
inc
sti
rcl
icebp
dec
ret
push
icebp
iret
add
sub
and
cmp
fisttp
inc
adc
inc
adc
inc
inc
mov
push
and
or
cmp
or
sub
out
xor
das
pop
call
xchg
call
add
add
adc
pusha
in
inc
xor
ss
adc
test
int3
pop
add
add
enter
repz
bound
rol
sbb
aam
cmp
xchg
xchg
test
inc
push
in
enter
cmp
lock
loopne
inc
in
adc
enter
lock
fidiv
pop
imul
rcr
mov
in
and
popa
mov
and
inc
push
ret
out
dec
push
dec
out
sub
mov
retf
xor
fmul
cmp
jae
loope
adc
dec
hlt
mov
ret
and
retf
rol
xchg
clc
sub
add
jo
clc
sub
push
sub
enter
add
or
sbb
icebp
cmp
or
add
aaa
pop
inc
mov
rcl
push
cld
dec
mov
aas
or
push
sar
xor
and
and
dec
mov
mov
push
push
les
cmc
inc
lods
and
pop
xor
sub
cmp
mov
stos
pushf
nop
push
mov
or
jnp
imul
adc
cmp
shl
sbb
rol
or
mov
inc
lods
cmp
ret
test
push
in
retf
aaa
or
popf
mov
and
pop
pop
dec
cmp
sub
push
push
push
imul
pop
test
inc
xchg
pushf
sbb
pop
mov
cmp
jg
shl
dec
xor
adc
and
mov
stos
and
jno
dec
lahf
sar
pop
xor
sub
and
das
inc
mov
test
add
lock
xchg
xchg
add
in
dec
push
mov
mov
xor
pop
dec
(bad)
cmp
xor
add
neg
and
scas
push
xchg
pop
sub
pop
or
xchg
mov
fisub
call
inc
sub
ficomp
sbb
add
dec
lahf
sar
fsub
push
inc
lods
inc
push
mov
ftst
call
or
test
xchg
(bad)
sbb
xchg
sub
popa
xchg
sbb
pop
ret
dec
lock
pop
div
fild
push
aam
add
push
iret
inc
or
ret
cmp
jl
cmp
mov
shr
xchg
mov
or
sub
inc
push
adc
xchg
dec
xchg
adc
enter
and
inc
sbb
retf
push
xchg
mov
add
or
adc
(bad)
mov
inc
pusha
mov
pop
sbb
or
mov
outs
rol
pop
xor
jmp
sub
shr
or
mov
leave
add
cmp
and
and
mov
outs
or
and
(bad)
and
adc
add
adc
lock
xchg
xchg
pop
add
loopne
jp
adc
in
data16
shl
or
fsub
and
ret
loope
movs
pop
xor
fyl2x
fmul
and
and
aam
sbb
push
ins
xchg
push
add
xor
mov
xor
sub
mov
psrld
lea
call
and
adc
push
test
inc
pop
loopne
and
mov
jmp
sub
dec
fmul
mov
in
std
xor
and
or
mov
xchg
add
dec
jl
sbb
push
mov
mov
imul
adc
inc
loopne
lods
xchg
sbb
aas
aad
or
inc
or
jae
cmp
addr16
mov
movs
arpl
daa
ins
adc
arpl
ins
daa
xchg
lock
add
jmp
inc
sub
or
sbb
and
les
and
and
and
mov
adc
mov
arpl
cmp
and
sbb
aam
xchg
mov
test
fnstcw
out
xchg
and
jl
push
pop
fprem
adc
cmp
imul
jl
inc
pop
jg
paddsb
sub
call
pop
adc
call
dec
shl
add
sbb
pop
sbb
mov
push
jp
pop
inc
mov
ds
mov
cmps
or
xchg
adc
hlt
cwde
imul
jmp
adc
inc
shl
mov
push
nop
inc
mov
inc
in
ja
dec
jb
cmp
add
jl
or
pop
jg
jb
std
in
cmps
add
fadd
inc
and
nop
lock
cwde
pusha
sbb
xor
sbb
frstor
add
push
imul
xor
and
adc
mov
sbb
cmp
neg
test
bound
xor
jecxz
outs
pop
rol
mov
push
(bad)
sub
and
jp
and
xchg
xor
stc
sar
push
adc
or
pop
fild
lea
test
loop
aas
mov
inc
push
adc
cmp
lea
sub
pop
mov
aam
xor
fidivr
and
popa
add
cmp
push
mul
nop
test
rcr
test
bound
in
mov
popf
arpl
add
outs
push
mov
test
mov
jle
or
in
mov
and
iret
pop
mov
inc
add
ror
jp
lods
das
cmp
popa
add
retf
adc
or
sbb
dec
adc
or
add
inc
shl
outs
add
xor
pop
rol
sub
imul
or
and
imul
sub
ror
call
call
cmp
xchg
(bad)
sub
ret
stos
rol
out
push
sgdtd
xchg
shl
imul
sub
(bad)
dec
mov
add
and
sbb
fmul
das
stos
aas
lock
pop
and
sub
dec
add
jo
mov
(bad)
int3
mov
lea
test
js
jp
adc
lods
sub
jne
push
dec
inc
rcr
hlt
sub
inc
cs
mov
mov
adc
mov
xchg
push
xlat
xor
mov
sub
sbb
arpl
xor
jns
and
inc
sub
mov
and
sub
pop
ret
repz
sbb
ficomp
movs
aaa
or
sbb
rcr
jl
or
pusha
cmp
pop
in
and
dec
mov
cmc
ins
sbb
adc
loopne
popa
jno
jecxz
nop
aam
add
sbb
imul
xchg
in
je
xor
push
push
hlt
jb
scas
mov
jne
imul
movsx
aam
aam
jb
imul
sbb
jne
sub
dec
js
test
adc
sar
adc
scas
retf
rol
push
iret
mov
push
adc
je
jo
xor
mov
add
pusha
mov
ss
enter
xor
je
sub
outs
or
push
xor
adc
ds
jo
xor
pop
dec
pop
nop
jmp
rcr
add
ss
xor
push
cld
xor
pop
xor
xchg
xchg
hlt
mov
and
(bad)
mov
or
sbb
loopne
std
movs
fwait
addr16
add
adc
sub
sbb
add
or
add
(bad)
jl
stos
add
jmp
popf
jmp
push
rcr
cmp
not
sbb
lds
and
xchg
shl
and
mov
lods
xor
push
rcr
mov
or
pusha
enter
outs
add
or
popf
imul
pop
or
aam
inc
lahf
jne
push
and
inc
jo
inc
mov
psubw
add
or
sbb
mov
sbb
dec
dec
push
or
iret
enter
movs
jmp
inc
sub
push
je
mov
inc
xor
loope
in
stos
rol
and
fist
add
add
inc
cmps
movs
in
in
in
dec
pusha
add
int
adc
ins
addr16
inc
and
cmp
gs
pop
xchg
aaa
shl
clc
push
sbb
push
mov
push
mov
xor
or
(bad)
add
js
push
sar
dec
and
(bad)
loope
pop
or
mov
pop
or
outs
ins
movs
ss
or
test
push
mov
adc
sbb
and
cmp
jno
pop
sbb
push
hlt
inc
sbb
push
xchg
ja
lods
mov
and
daa
enter
into
push
add
and
bound
adc
push
lahf
sbb
fld
inc
nop
push
mov
cmp
sub
pop
fstp
rcl
add
popf
cwde
jp
push
adc
or
gs
xchg
mov
pop
aas
int
or
xchg
xor
push
cdq
push
repz
add
and
cmc
add
or
and
movs
in
mov
call
add
mov
and
jge
ins
test
lahf
call
mov
pop
mov
inc
nop
push
pop
adc
mov
mov
adc
push
aas
mov
sbb
jne
mov
mov
mov
add
lahf
jns
test
sub
inc
inc
lahf
sbb
add
cmp
cmc
cs
adc
inc
int3
adc
inc
popf
xchg
xor
or
and
jno
jg
xor
adc
lds
imul
jecxz
lock
pop
xor
cmp
and
dec
add
test
ror
ins
and
inc
mov
inc
add
add
inc
push
push
mov
dec
mov
cdq
fcomp
sbb
cmps
(bad)
dec
shr
mov
sbb
in
pop
int3
movs
pop
enter
loop
(bad)
mov
or
sbb
popa
aad
inc
sbb
adc
jne
js
jmp
inc
sbb
dec
dec
or
shr
add
xor
mov
dec
loopne
mov
fnsave
mov
push
pop
lahf
add
or
aaa
in
sub
scas
mov
cmp
add
or
mov
(bad)
repnz
dec
adc
add
sbb
push
adc
sub
or
or
sub
add
and
retf
imul
inc
sbb
xor
je
pcmpeqb
in
inc
mov
nop
jg
push
aas
xor
test
sbb
pop
add
cmp
xchg
or
jns
test
add
cmp
adc
sub
and
or
mov
jno
and
cmp
ror
and
fisttp
rol
xor
mov
push
push
push
pop
addr16
fstp
mov
test
aas
jmp
or
adc
or
or
inc
enter
push
and
loopne
push
aas
xchg
or
mov
push
scas
ror
cdq
in
enter
cmp
inc
pop
dec
add
les
pop
xor
adc
push
xchg
cmp
sbb
cmps
push
aam
and
mov
sbb
test
dec
call
adc
test
xor
or
(bad)
mov
lds
and
sbb
rcr
inc
sbb
lahf
mov
mov
xor
lods
and
aaa
ss
inc
add
sbb
sbb
dec
ret
fiadd
adc
inc
(bad)
pop
cmp
mov
loopne
icebp
jb
and
jo
sysret
add
inc
test
jns
clc
mov
sar
dec
xchg
cli
dec
nop
in
cmp
shl
and
pusha
aas
enter
sub
sbb
lock
xchg
dec
test
mov
inc
bound
adc
mov
ret
pop
(bad)
or
jmp
sub
push
inc
push
lock
and
dec
pushf
push
xchg
nop
mov
inc
add
push
lea
ss
pop
sbb
nop
or
jne
jb
mov
test
aad
mov
mov
inc
inc
(bad)
lods
adc
rol
sbb
pop
(bad)
lock
add
add
add
popf
mov
jo
lea
push
push
cmp
test
loopne
dec
(bad)
pusha
add
pop
ret
jae
jo
mov
ja
loope
jnp
sub
loopne
or
xchg
push
loop
add
adc
icebp
ror
add
or
push
mov
jb
jnp
shl
jg
dec
push
inc
or
adc
mov
pop
add
bound
push
mov
dec
xchg
retf
sbb
adc
fs
xchg
jmp
and
in
sti
jmp
cmps
add
sub
(bad)
adc
mov
dec
push
dec
mov
jmp
shl
dec
inc
pop
ficom
pop
pop
and
inc
pusha
or
add
sbb
pop
add
mov
pop
pop
adc
adc
jb
pop
int
inc
cmovnp
(bad)
mov
mov
jmp
or
and
mov
cmp
scas
add
push
ja
dec
ins
gs
ins
and
dec
es
cmp
test
cmp
(bad)
pop
loop
cmp
or
add
sbb
js
inc
sbb
cs
shl
mov
and
xor
mov
xor
push
outs
add
add
dec
imul
cs
cmp
sub
jne
mov
or
jne
push
cwde
sbb
or
dec
sbb
movs
mov
loopne
cwde
fst
mov
or
sbb
movs
jns
adc
or
mov
call
hlt
adc
xor
xabort
add
adc
and
or
jge
shl
pop
int3
jl
inc
inc
fdivr
clc
fmul
push
or
imul
xchg
mov
push
add
inc
push
fsub
push
test
mov
test
mov
xchg
push
inc
test
fdiv
jge
or
mov
icebp
inc
add
push
stos
cmp
test
mov
or
add
sti
and
lock
inc
int3
mov
add
xchg
push
lock
jmp
call
sub
adc
stos
mov
pop
scas
xchg
movs
clc
or
push
mov
mov
mov
fsub
and
ret
mov
ret
out
rcr
or
test
lahf
and
and
js
sub
loopne
mov
push
pop
adc
adc
mov
shl
mov
sahf
aad
adc
jmp
test
add
test
movaps
or
sbb
add
inc
inc
mul
jo
jmp
mov
push
enter
xchg
pushf
or
ret
xor
nop
jne
lods
add
test
adc
popa
jle
nop
ins
add
or
sub
xchg
adc
dec
and
call
or
mov
call
ret
fisttp
cdq
or
and
or
loope
jnp
movs
cmp
(bad)
sbb
shl
fisttp
fsub
mov
ret
add
sub
daa
or
pop
cmps
mov
es
adc
rol
or
mov
and
lea
gs
add
sbb
add
or
fucomp
inc
sbb
inc
inc
mov
sbb
add
sahf
int
xchg
dec
pop
jbe
out
mov
ins
and
fld
repz
adc
cmp
addr16
dec
cmp
dec
test
hlt
mov
lahf
mov
lds
dec
add
adc
test
sub
jmp
sub
sbb
push
xor
rcr
sub
inc
ret
inc
(bad)
jnp
mov
mov
xor
pop
add
sbb
movs
rol
or
sbb
xor
inc
dec
repnz
hlt
dec
ret
ror
mov
adc
jmp
jae
xchg
rcr
int
sbb
sub
mov
sbb
mov
lea
dec
xchg
mov
rol
inc
xor
rcr
in
sbb
sbb
aam
pop
(bad)
gs
shl
stos
aad
add
enter
xchg
dec
or
add
cwde
mov
daa
popa
jmp
push
ins
sbb
adc
daa
shl
imul
ror
push
cmp
rcl
or
adc
retf
dec
nop
mov
pop
outs
push
popf
fsub
ret
in
pop
xchg
sub
push
call
je
xor
cdq
inc
imul
push
pop
dec
xor
shr
sub
mov
shl
dec
mov
push
ins
mov
or
mov
ja
and
sbb
clc
leave
sar
xor
mov
mov
(bad)
mov
pop
jne
adc
nop
adc
add
add
sbb
lods
add
in
add
js
add
out
jnp
add
movs
push
xchg
nop
fstp
or
in
rcr
dec
pop
inc
fstp
in
mov
or
aas
cmp
push
add
in
sbb
mov
test
xchg
push
xchg
jmp
fcomp
in
add
out
cmp
push
push
xchg
pusha
jg
sub
mov
leave
add
inc
add
jnp
rol
mov
mov
sbb
sbb
cmp
retf
rol
test
test
fmul
xchg
sbb
call
popa
xchg
lahf
das
mov
(bad)
leave
mov
loopne
aas
jne
or
pop
jle
adc
sbb
add
sub
add
xchg
xlat
sub
jo
push
jg
mov
int
test
cmc
stos
out
jg
(bad)
push
je
push
mov
mov
sub
mov
dec
mov
add
xchg
ror
mov
xchg
lods
mov
xor
daa
fld
fstp
(bad)
push
adc
adc
pop
jo
mov
dec
das
std
test
stc
jle
pop
mov
pop
push
mov
inc
dec
jno
mov
push
sbb
es
and
sbb
jmp
add
cwde
mov
xchg
movs
mov
jmp
cmp
add
lock
or
nop
or
inc
push
and
add
cmps
mov
inc
cwde
push
adc
frstor
push
xor
test
mov
mov
sbb
adc
call
cwde
and
push
rcl
adc
inc
add
dec
out
mov
push
xchg
push
mov
sahf
rcr
in
imul
inc
push
add
in
idiv
push
test
mov
push
jl
test
adc
dec
sahf
pop
jg
mov
cmp
loope
add
test
adc
fdivr
movs
cs
dec
fsubr
pop
and
sub
and
mov
cmc
push
adc
pop
add
cmp
(bad)
adc
icebp
dec
gs
dec
int3
lods
and
(bad)
xor
adc
test
inc
std
test
jae
xor
pop
push
ror
mov
les
dec
icebp
add
sbb
add
arpl
push
pop
pusha
movs
adc
mov
or
fild
jmp
es
(bad)
pop
test
addr16
add
cld
or
retf
cmp
jno
or
test
inc
retf
or
inc
ins
add
jg
sbb
data16
daa
enter
mov
stos
pop
and
sbb
add
enter
sub
push
add
sub
or
mov
push
fsubr
and
movs
sbb
pop
es
fcomp
ins
sub
add
aas
rol
dec
xchg
add
cli
call
jge
add
popa
jmp
xor
nop
add
or
lds
add
inc
sub
add
add
and
inc
or
xor
adc
std
(bad)
fimul
dec
loop
int3
test
push
test
add
pushf
sbb
add
pop
fs
aam
mov
int3
push
add
or
and
repnz
or
sub
and
jg
cwde
add
add
mov
dec
(bad)
push
adc
push
or
lock
mov
or
and
imul
loope
(bad)
jg
mov
sub
add
aad
pop
adc
push
xor
push
imul
cmp
sbb
cmp
jno
add
adc
push
mov
sbb
mov
scas
add
xor
cwde
ror
imul
xchg
(bad)
loope
mov
pop
xlat
add
inc
sbb
add
xchg
lea
cld
hlt
mov
add
push
add
add
mov
mov
add
add
add
xor
outs
das
xor
xor
sbb
ja
(bad)
sub
add
inc
sbb
mov
add
add
jg
pop
test
push
(bad)
jae
das
cdq
push
test
and
dec
xchg
ror
mov
loope
dec
or
mov
mov
add
fwait
and
add
imul
and
and
mov
dec
jg
pop
inc
or
(bad)
loopne
repz
call
bound
cmp
jne
cmp
mov
add
dec
add
frstor
and
sub
xchg
in
dec
fcom
adc
retf
outs
and
adc
aas
push
ins
or
outs
rcr
and
push
cmp
call
dec
ret
jo
adc
in
add
in
or
or
fld
ds
shr
repnz
stos
push
cmc
add
lahf
or
scas
lea
inc
fistp
inc
or
or
cmc
aaa
test
or
xchg
add
idiv
add
gs
outs
in
push
test
ret
inc
cmp
jno
outs
fs
push
xchg
sbb
inc
test
inc
adc
inc
or
cwde
pop
mov
cmp
inc
nop
bound
int3
cs
add
or
dec
inc
xor
mov
add
add
movs
aam
cmovo
and
leave
inc
inc
popa
in
xchg
and
mov
lods
inc
jge
imul
push
push
stos
ins
adc
(bad)
gs
push
cmp
and
add
xor
push
dec
jg
jmp
adc
dec
push
dec
test
or
ds
adc
inc
or
imul
cmp
imul
mov
ret
xchg
adc
ins
jmp
sbb
ret
and
shl
(bad)
pop
xchg
jne
retf
sub
in
ret
int
in
sub
push
xchg
fwait
adc
retf
and
outs
push
fsubr
xor
pop
fbld
or
sub
movs
imul
xchg
gs
dec
mov
pop
mov
rol
inc
loopne
add
cmp
ins
add
xchg
and
or
lods
push
pop
add
loop
pop
xor
nop
or
cmp
push
adc
inc
dec
int
cmp
or
aam
push
xor
fist
xor
add
ror
cmp
add
mov
xor
sub
fild
jl
and
dec
ret
icebp
call
and
scas
add
xor
xor
inc
mov
jne
xor
cmp
push
enter
or
clc
aam
inc
and
add
xor
aas
sbb
or
inc
mov
cmp
push
push
xlat
sahf
sub
rol
adc
jmp
jno
lea
je
or
stos
imul
sbb
sub
mov
mov
fldenv
aam
fisub
sbb
dec
test
je
aad
and
daa
ret
lods
mov
mov
dec
adc
es
and
jg
pop
inc
jmp
jmp
or
test
fisttp
rcr
jne
add
aaa
pop
and
out
pop
mov
pop
push
sub
imul
dec
adc
test
or
push
(bad)
push
fist
add
xor
gs
or
or
sbb
adc
inc
(bad)
jno
or
jg
jle
mov
rcl
add
add
or
or
leave
sbb
sub
add
lock
mov
test
push
jecxz
xchg
lea
add
push
mov
scas
sti
lea
xlat
dec
mov
cmp
scas
in
adc
rcl
mov
or
xor
ror
sbb
adc
mov
loope
in
retf
ins
and
addr16
ret
dec
add
inc
xchg
adc
mov
cmp
aaa
mov
fs
sub
sub
add
mov
xchg
cmps
pop
fnsave
shl
add
call
or
mov
inc
popf
inc
xor
pusha
mov
mov
pop
test
lea
mov
cmp
mov
pusha
push
xor
je
xchg
es
call
mov
pusha
pusha
and
mov
bound
out
inc
or
retf
rol
and
sbb
cmps
jne
rcr
add
loope
jbe
add
adc
cmp
pop
pop
mov
add
fadd
mov
xor
push
xchg
jno
and
push
add
aas
ins
push
shr
cmova
les
sbb
inc
adc
lods
inc
adc
stos
movs
add
xchg
call
lock
and
push
adc
ret
or
add
push
dec
scas
retf
test
add
pop
sbb
jns
mov
cmp
nop
mov
add
jb
leave
imul
aas
or
leave
imul
shl
and
adc
or
loope
mov
cmp
imul
adc
inc
add
imul
sub
movs
push
or
enter
mov
push
test
pushf
pcmpeqb
or
and
xchg
jo
and
je
jb
mov
mov
dec
jns
mov
pminub
or
sub
and
js
and
inc
lahf
repz
call
pop
aas
test
loopne
cld
add
ins
mov
js
inc
inc
call
sub
clc
dec
cmps
pushf
cmp
rcl
dec
push
leave
or
jl
ins
dec
mov
or
jb
(bad)
mov
js
cdq
inc
add
outs
es
inc
or
pop
movs
jo
pop
pop
push
adc
sbb
outs
mov
dec
push
mov
xor
adc
mov
mov
lods
inc
inc
push
ja
or
add
js
and
in
pop
adc
jle
jne
prefetch
or
jno
jbe
maskmovq
test
out
loope
jne
xchg
add
xchg
or
add
mov
movs
add
ins
and
jg
fs
xchg
cmp
adc
dec
sbb
sbb
(bad)
push
dec
or
leave
xchg
add
jnp
mov
and
inc
inc
aaa
(bad)
cld
stos
and
inc
mov
adc
xchg
add
jbe
nop
mov
cld
rcl
fimul
xchg
mov
in
push
adc
mov
(bad)
test
pop
dec
push
sbb
xor
dec
add
add
mov
test
dec
or
or
pop
pop
mov
pop
rcr
xor
and
and
add
add
cmp
adc
lahf
jp
loope
mov
jg
jb
sub
or
scas
test
test
dec
hlt
push
push
imul
cmps
push
jb
mov
mov
lods
inc
call
xor
inc
test
aas
mov
sbb
push
popa
stos
retf
dec
loopne
adc
xchg
and
sub
cld
fistp
sub
jmp
pushf
loope
push
add
inc
out
cli
rol
aam
mov
jo
gs
dec
lods
push
jns
pop
sub
mov
gs
popa
or
xchg
ins
ret
int3
int3
jmp
xor
cmp
aas
jg
bound
je
mov
and
hlt
or
xor
das
bound
mov
or
jnp
jnp
inc
add
dec
dec
or
and
mov
rol
aas
or
cmps
sub
jnp
jnp
push
and
inc
jnp
mov
xchg
add
mov
jp
sbb
adc
pop
jne
fild
je
lahf
popa
push
ror
jae
lock
aaa
and
sub
push
jle
dec
mov
fisttp
rol
xchg
ss
inc
sbb
inc
mov
or
jmp
jecxz
ja
jmp
fbld
mov
sbb
or
push
mov
addr16
mov
cmp
mov
pop
push
xlat
push
scas
fstp
adc
xor
cmp
add
push
jp
mov
and
es
loopne
jo
add
pop
xor
add
add
add
add
jle
imul
shl
lahf
fs
add
or
pop
sbb
jno
sbb
les
mov
(bad)
frstor
adc
outs
push
imul
adc
mov
dec
mov
sub
add
pop
repz
mov
mov
and
dec
fcmovb
adc
mov
push
test
cwde
inc
add
addr16
loope
adc
ds
shl
(bad)
adc
add
dec
loop
jge
clc
adc
add
sub
inc
xor
dec
lock
int
nop
inc
jg
call
in
sub
rol
pusha
retf
pop
and
inc
and
pmaxub
jno
(bad)
jl
loop
xchg
cmp
jbe
popw
cld
dec
xor
add
mov
movsx
dec
clc
movs
inc
loop
outs
repz
les
add
and
or
mov
and
and
push
dec
push
xchg
cmp
jmp
(bad)
inc
sbb
stos
rcl
rol
add
jae
cmp
push
jns
push
cwde
inc
loop
ins
dec
or
inc
and
daa
sub
xchg
and
sub
imul
lods
loop
mov
or
mov
mov
dec
iret
dec
rcr
add
cmps
movs
push
pop
inc
nop
daa
ins
jns
xchg
in
push
jb
daa
ret
and
add
pop
(bad)
ss
jecxz
popa
sub
jl
jno
dec
outs
sbb
movs
xchg
sub
inc
add
xchg
call
clc
mov
or
lods
loope
lock
mov
aas
lods
mov
mov
and
dec
push
mov
arpl
inc
or
add
and
push
inc
ret
push
shr
mov
xchg
loope
adc
xor
pop
mov
sbb
push
mov
xor
leave
jne
fadd
ins
and
dec
daa
sbb
or
arpl
dec
shl
mov
test
and
push
aas
push
sbb
and
repz
lds
adc
push
aas
ret
sub
sub
sar
(bad)
adc
xor
and
mov
pop
(bad)
fsubr
das
call
rcl
mov
add
xchg
sub
add
adc
mov
test
not
add
mov
adc
lahf
xchg
mov
out
add
inc
pop
xor
mov
add
adc
adc
test
adc
pop
cwde
or
aas
add
or
sbb
int
dec
or
test
jno
add
and
xchg
mov
xchg
arpl
push
sub
xchg
push
fiadd
outs
lldt
push
dec
fild
les
or
push
movs
call
pop
cmp
mov
mov
mov
cmp
das
add
or
loope
and
sbb
ret
xchg
movs
loopne
push
or
enter
mov
adc
add
sub
add
(bad)
sub
adc
je
mov
ins
sbb
push
sbb
xchg
mov
nop
mov
dec
cmps
in
add
fidivr
xchg
out
loop
ret
(bad)
out
xchg
xchg
in
jne
(bad)
mov
xor
pop
push
mov
test
iret
punpckhbw
xchg
adc
dec
or
movs
movs
fidiv
scas
cmp
jne
add
add
sub
mov
rol
cmp
mov
iret
adc
popa
(bad)
ss
mov
pop
hlt
clc
add
inc
and
dec
xchg
mov
das
sub
rol
push
lods
cmps
jno
stos
cmp
sub
or
mov
mov
pushf
jg
jecxz
push
fistp
add
add
or
push
inc
add
cmp
and
jg
mov
mov
mov
cmps
jno
add
je
ds
in
adc
or
shr
int3
mov
xchg
in
int
movs
or
stos
xor
lea
add
shl
adc
aas
inc
or
dec
mov
add
or
inc
add
add
pop
lea
jmp
mov
int3
add
inc
daa
or
jmp
mov
call
mov
adc
and
imul
pop
les
and
gs
or
test
pop
add
test
jecxz
push
mov
or
jecxz
and
mov
add
xchg
jecxz
xor
add
dec
arpl
arpl
lea
dec
sar
xchg
dec
sbb
sbb
sub
sbb
mov
add
mov
push
or
movs
icebp
xor
lods
dec
arpl
mov
mul
dec
mov
imul
jo
pop
xor
popf
dec
movs
loope
inc
test
sbb
sbb
xor
stos
pusha
outs
jb
or
int
push
mov
or
push
xchg
mov
xor
test
es
dec
and
inc
fld
push
call
pop
dec
sub
leave
in
test
add
imul
aad
add
and
ret
pop
push
push
sbb
xor
xor
or
xor
pop
mov
(bad)
ins
pop
xor
and
adc
adc
sbb
pop
scas
add
sbb
inc
test
inc
rcl
cmp
mov
sub
adc
jne
mov
gs
ds
icebp
sub
enter
sbb
cmp
popa
lahf
adc
psadbw
add
cmps
xchg
pushf
mov
jl
push
(bad)
arpl
mov
fstp
and
add
adc
call
lahf
inc
xchg
fdivr
rol
push
sbb
push
jmp
pop
or
xchg
aam
cmps
inc
hlt
ins
push
(bad)
out
mov
or
mov
or
xchg
cmp
jae
scas
sbb
and
xor
sub
movs
sub
ror
cmp
les
fist
or
loopne
nop
cmc
scas
sar
movzx
adc
pop
fadd
xor
lock
sbb
test
ins
fwait
pop
dec
mov
jmp
fsubr
dec
xchg
pop
wbinvd
xor
sbb
dec
add
push
push
mov
or
inc
add
add
les
sbb
iretw
in
mov
add
xor
and
nop
adc
or
or
pushf
mov
fiadd
and
or
push
leave
push
mov
adc
fcomip
mov
lock
sub
mov
gs
add
icebp
add
test
jo
mov
ja
mov
dec
ret
test
lea
jo
inc
in
inc
or
call
popa
nop
xchg
mov
xchg
dec
cmp
xor
pop
mov
dec
cmp
aaa
pop
popf
mov
in
aas
not
xor
mov
(bad)
inc
or
or
jecxz
mov
jge
and
inc
add
mov
pop
test
cmp
dec
xchg
adc
push
fistp
ret
int
add
fs
add
lods
xor
mov
jne
int3
arpl
or
mov
sub
mov
and
pop
dec
xor
icebp
data16
jle
ins
add
and
mov
cwde
(bad)
mov
and
outs
or
inc
or
hlt
add
hlt
jmp
call
jmp
inc
adc
jle
shr
out
cmp
add
sub
gs
xchg
icebp
nop
lock
or
adc
jp
das
or
sub
cmp
and
adc
xor
ret
pop
outs
add
pop
sbb
add
mov
pop
or
xchg
dec
shl
pop
jmp
mov
pop
nop
pop
lock
sub
inc
inc
adc
push
adc
xor
lea
and
xchg
add
sbb
loop
dec
push
arpl
and
inc
dec
bound
lahf
jg
dec
push
cmp
sar
fild
sbb
add
loopne
ret
(bad)
sub
xor
sbb
mov
mov
sbb
or
loopne
push
adc
fistp
ret
mov
mov
sbb
scas
imul
add
mov
mov
ins
sbb
mov
stos
add
icebp
dec
icebp
shl
leave
cs
adc
or
inc
and
mov
ret
shl
push
dec
ret
sbb
sub
push
shl
xchg
imul
sbb
or
add
push
push
dec
mov
and
test
or
rcl
add
or
cli
loope
add
inc
dec
inc
or
stc
or
shl
aad
mov
rcr
jl
xor
adc
push
leave
loop
or
xor
or
push
xor
adc
rcl
add
and
ins
call
aam
adc
mov
or
call
add
inc
rol
lea
push
mov
scas
cdq
mov
imul
add
icebp
jo
shl
dec
sbb
daa
pop
jle
mov
mov
pop
mov
ds
and
call
fsub
jae
jl
adc
inc
enter
pop
or
jp
jp
mov
bound
pop
out
and
or
cwde
inc
xor
pop
lea
int
adc
sbb
or
cmp
js
cmp
sub
ins
jbe
jbe
call
nop
pusha
or
imul
lods
pop
xor
push
icebp
ins
xchg
sub
xor
sahf
and
sub
aaa
cld
data16
aad
pop
xor
xor
ret
mov
and
cmp
lahf
xchg
mov
rcl
xor
xor
aas
add
sub
rol
jg
pop
pop
ins
mov
xor
aaa
loopne
ins
xchg
(bad)
cwde
ss
jne
push
and
jmp
imul
pop
stos
adc
les
or
mov
or
and
daa
xchg
out
cli
push
lea
fs
sub
inc
and
xor
data16
inc
cmp
icebp
lahf
ins
or
sbb
jle
shl
sbb
mov
cmp
push
retf
sub
inc
or
test
push
push
push
add
movs
or
push
lock
cmp
add
mov
mov
mov
dec
push
ins
add
cmp
sub
je
pop
push
int3
mov
inc
and
mov
xchg
rcl
jmp
jmp
xor
add
and
mov
mov
jno
xchg
aam
xor
mov
pop
inc
adc
sbb
outs
mov
inc
aas
mov
add
xor
sbb
push
jnp
bound
or
push
rcl
xchg
movs
fimul
pop
xor
inc
outs
xchg
push
gs
fucomi
adc
jno
test
inc
and
in
sbb
or
adc
jmp
mov
popa
sbb
mov
and
push
adc
or
adc
stc
dec
push
or
push
lods
or
xor
adc
test
popf
xchg
arpl
mov
jl
add
cdq
dec
cld
movs
dec
mov
or
std
jmp
lods
add
add
and
cs
std
push
or
inc
dec
shl
cmp
dec
ja
enter
push
add
push
add
pop
push
dec
fnsave
test
add
loope
inc
jnp
movs
mov
push
stos
sbb
sbb
inc
push
add
push
inc
adc
pusha
or
or
test
or
ret
add
inc
and
shr
(bad)
(bad)
inc
test
fadd
test
ins
inc
ins
add
js
xor
inc
pop
int3
int3
lahf
push
mov
jb
adc
or
xcrypt-cbc
cmps
xchg
xor
cmp
push
push
rol
mov
cmp
fbld
mov
arpl
xchg
add
or
push
and
pop
cmp
and
or
dec
push
mov
(bad)
and
dec
arpl
arpl
jb
inc
inc
add
inc
and
mov
les
loope
and
mov
lods
or
or
and
(bad)
push
fist
cmp
jno
mov
sbb
arpl
dec
int
push
sub
js
xchg
mov
or
add
or
fstp
or
push
mov
or
xchg
(bad)
adc
(bad)
jl
adc
mov
add
stos
pushf
jg
int3
dec
call
push
add
xor
adc
push
rol
xor
pop
les
(bad)
dec
(bad)
js
add
or
or
jg
(bad)
out
mov
lea
cwde
or
mov
test
and
mov
or
mov
pop
mov
mov
clc
inc
add
push
adc
push
add
mov
inc
or
sbb
add
and
and
and
add
test
inc
rcr
xor
popa
fbld
stos
pop
and
push
dec
sub
arpl
push
sub
pop
and
arpl
inc
hlt
inc
add
inc
inc
xor
or
mov
rcl
enter
test
add
xchg
es
test
pop
cwde
retf
je
pop
sub
pop
or
nop
js
pop
call
rcl
adc
inc
add
pusha
add
sbb
jmp
cmp
inc
or
addr16
movs
pop
and
outs
add
add
in
push
movs
push
jae
adc
push
add
mov
jl
or
and
push
and
or
mov
cmp
adc
dec
xor
scas
mov
mov
enter
and
push
add
dec
lods
pop
imul
mov
or
loope
dec
fstp
mov
add
mov
pop
inc
dec
push
sbb
pop
xchg
pop
pushf
or
cmp
pop
ds
sti
neg
and
nop
dec
xchg
xchg
jle
in
and
inc
mov
jne
xchg
push
or
xchg
in
test
jmp
cs
add
adc
test
dec
ror
arpl
and
or
mov
pop
add
sub
jecxz
xchg
and
add
stos
sub
adc
ss
add
jo
inc
sar
add
aas
mov
mov
dec
mov
push
arpl
add
mov
enter
add
pop
inc
(bad)
das
loope
loopne
adc
or
rol
movs
mov
or
mov
pop
clc
or
out
fmul
outs
inc
push
or
mov
mov
dec
or
and
xchg
dec
adc
push
jnp
sbb
push
push
sbb
cmp
les
pop
ret
adc
movs
lods
out
and
lods
add
shl
sbb
cmp
dec
dec
cmp
cmps
mov
add
ss
mov
push
rol
xchg
and
pop
ret
jno
idiv
or
jmp
ficom
dec
xor
push
jmp
sbb
loopne
sar
jecxz
nop
add
ins
shr
cmps
add
sbb
das
jecxz
push
adc
ret
xor
arpl
sub
jae
pop
inc
and
sbb
sbb
cli
jae
and
or
jae
add
xor
jae
and
mov
mov
push
loopne
mov
or
or
cmp
loopne
neg
not
dec
adc
div
cmps
ss
lea
jo
adc
or
add
jge
mov
add
jmp
adc
or
push
inc
jb
xor
pop
xchg
adc
pop
lock
xor
adc
or
pop
hlt
and
or
add
dec
pusha
leave
cld
fstp
or
mov
or
mov
loopne
jmp
stos
nop
push
add
test
dec
xor
jecxz
xor
jbe
adc
mul
push
popa
dec
or
or
imul
cmps
cmc
add
imul
pop
inc
test
mov
mov
rol
ss
iret
adc
xchg
mov
mov
add
adc
mov
push
jmp
and
pop
lea
in
mov
or
and
inc
or
push
add
dec
in
add
sub
imul
xchg
std
jne
clc
add
ret
test
pushf
cs
xor
sub
or
add
add
aam
mov
dec
aam
jge
imul
adc
push
adc
jmp
js
sbb
clc
cmp
pop
ror
or
call
pop
mov
stos
data16
xor
push
pop
jle
sbb
mov
mov
pop
sub
and
test
pop
inc
pop
xchg
inc
arpl
push
xor
inc
and
rol
mov
mov
pop
mov
mov
imul
xabort
inc
dec
loopne
jb
pushf
test
add
xchg
jno
mov
iret
ror
(bad)
ins
push
and
fld
cmps
and
aas
popa
fs
sbb
adc
bsr
fs
mov
mov
mov
mov
jmp
or
sbb
sub
lods
mov
in
adc
jl
mov
movs
mov
xor
lods
push
jo
and
sub
push
dec
xor
sbb
pop
push
push
test
lahf
pusha
jo
shl
ror
xor
and
and
test
or
scas
pop
pop
ror
adc
loopne
cmps
mov
push
movs
daa
lock
ja
or
push
push
fdiv
sub
fadd
pop
inc
dec
add
and
adc
inc
out
sbb
or
int3
dec
push
dec
mov
inc
push
or
imul
in
jmp
data16
adc
and
sbb
add
aam
push
movs
add
or
shl
cmp
add
retf
or
dec
cmp
push
ret
dec
xor
sub
ret
mov
and
test
and
dec
std
daa
sbb
inc
mov
sbb
hlt
push
aad
mov
fcmovne
or
push
and
das
push
xor
and
sub
pop
fdiv
adc
add
shl
fwait
inc
add
inc
sar
add
and
rol
sbb
jo
aad
or
pop
les
push
inc
add
xchg
fcmovb
dec
mov
mov
add
popa
xor
dec
push
test
shl
fidiv
push
add
push
mov
xor
add
push
add
xlat
nop
dec
test
cmp
or
ins
or
cdq
add
aam
fs
xor
push
sbb
or
rol
add
loopne
xchg
xchg
jne
fist
dec
mov
lods
add
pop
mov
add
lahf
push
rol
cs
mov
add
mov
xor
mov
in
mov
hlt
outs
mov
mov
jne
push
push
(bad)
inc
sbb
rol
jmp
adc
dec
ret
xchg
jmp
xor
das
pop
add
adc
dec
and
test
imul
ret
inc
mov
mov
jno
dec
add
test
ja
out
test
sub
pusha
stos
(bad)
jmp
(bad)
mov
add
fbld
mov
mov
fsubr
enter
or
xor
(bad)
sub
mov
add
sub
add
xchg
pop
inc
mov
or
cmp
sub
sub
xor
ds
or
lea
or
sub
ret
push
dec
push
jecxz
mov
int
cmps
mov
(bad)
mov
xchg
rol
mov
ret
clc
add
cld
(bad)
mov
popf
rol
sub
xor
cli
sub
and
xchg
push
or
push
mov
adc
cld
cwde
mov
clc
fbstp
dec
add
fnstcw
add
pop
loopne
or
(bad)
enter
adc
xchg
sub
and
(bad)
sbb
nop
add
xor
mov
mov
and
adc
push
jmp
inc
or
sbb
dec
push
fadd
mov
dec
jg
stos
test
rcl
push
mov
pop
sub
ror
add
addr16
inc
or
adc
push
cmps
retf
ins
jmp
or
bound
add
cmp
sub
aam
add
or
test
hlt
rcl
les
dec
cmp
repz
(bad)
(bad)
mov
in
cmp
sub
pop
add
sbb
push
cmp
jg
push
add
and
sub
dec
sub
push
xchg
mov
add
jnp
cwde
jo
lods
push
sub
lea
cs
pushf
imul
enter
and
iret
ja
pop
pusha
test
jge
push
ds
call
add
not
mov
gs
and
pop
or
or
xor
add
inc
stos
fwait
inc
mov
dec
dec
inc
add
dec
sbb
popa
mov
and
jmp
push
pop
sbb
push
cmp
fld1
add
dec
and
inc
add
sbb
push
dec
enter
push
call
ret
in
jg
rol
mov
loope
or
ja
popa
pop
adc
xor
pop
xchg
test
sbb
ret
sbb
movs
add
adc
push
dec
loop
das
and
jg
ja
jb
xchg
push
gs
push
rcr
jg
push
and
dec
lds
shl
inc
mov
xor
pop
rol
rcr
das
or
and
sub
mov
sub
clc
or
xchg
(bad)
and
pop
lock
jb
jecxz
mov
out
sbb
jg
jle
or
jne
cdq
and
ret
xor
fsub
inc
and
(bad)
sbb
inc
sbb
adc
or
test
ins
adc
sbb
add
jmp
rcr
loopne
or
or
cwde
call
and
jmp
mov
or
adc
icebp
or
jmp
sbb
xchg
adc
mov
cmp
sar
in
add
loopne
mov
test
add
jne
dec
retf
mov
dec
push
adc
inc
dec
jle
ficom
jo
ss
jb
test
movs
add
pop
add
dec
movs
and
pop
aaa
dec
shl
pop
sub
inc
bound
inc
pop
out
add
stc
sub
inc
push
addr16
icebp
push
jnp
mov
test
aas
call
and
xchg
lock
dec
push
cmp
sbb
in
mov
dec
adc
cwde
in
fldenv
sub
lock
ror
cmp
jmp
or
inc
dec
xchg
sub
jne
or
loope
sub
pop
and
into
aaa
push
or
and
adc
inc
mov
mov
call
sub
enter
sbb
xor
sub
jecxz
sub
dec
inc
xchg
sub
lock
sbb
adc
aas
in
ret
dec
in
mov
xchg
jle
aas
in
call
xchg
call
sbb
in
inc
inc
mov
pop
mov
pusha
or
inc
inc
xor
stos
xor
xchg
adc
fmul
aad
sbb
add
fcomp
add
pop
jb
or
jbe
add
imul
data16
movs
mov
fst
or
rcl
push
leave
adc
repz
mov
fmul
rcr
inc
fadd
push
push
fsub
rol
inc
rol
sbb
mov
pop
add
xor
inc
xchg
dec
jb
ror
daa
popa
sbb
xor
out
mov
sub
ret
shr
xchg
je
pop
fs
mov
test
rcl
shl
rcl
add
rcl
scas
add
(bad)
sub
cwde
fs
lods
sbb
loopne
repz
jnp
out
or
ins
adc
jmp
sbb
inc
xchg
add
in
mov
sub
dec
xchg
lock
or
aad
hlt
or
cdq
add
adc
ror
push
lea
xchg
les
or
or
jnp
xlat
mov
jl
mov
add
add
lock
sar
mov
test
or
ret
push
push
mov
cmp
mov
inc
pusha
call
dec
add
sbb
cmc
les
pop
jmp
rcr
lock
mov
rcr
xlat
push
cmp
or
dec
stos
push
fistp
mov
movs
adc
cmc
mov
dec
xchg
stos
dec
inc
mov
mov
out
add
adc
sub
ja
mov
xor
pop
(bad)
ror
fldz
(bad)
adc
(bad)
pop
clc
cmp
push
ret
enter
pop
shl
and
loope
push
jo
popf
ror
and
xchg
(bad)
in
mov
dec
or
add
mov
fnsave
and
jge
ret
aam
rol
mov
adc
pop
aas
or
leave
inc
ins
je
add
dec
mov
sub
jmp
mov
xchg
mov
or
push
rol
pop
mov
jns
fst
xchg
jnp
xor
xchg
adc
cmp
mov
push
inc
pop
inc
repnz
inc
lahf
or
dec
and
mov
adc
pop
or
movsx
inc
sbb
mov
inc
pop
sahf
dec
les
mov
push
inc
push
xor
mov
lahf
fadd
sar
in
leave
dec
add
sbb
les
mov
and
sbb
daa
sbb
push
or
mov
mov
in
add
add
fimul
push
xchg
jl
dec
nop
loopne
inc
pop
adc
xchg
push
xlat
add
sub
dec
clc
jns
dec
adc
rcl
mov
mov
inc
shl
mov
dec
jecxz
adc
jg
loopne
test
outs
fwait
shl
or
add
movs
or
or
clc
add
fmul
or
int3
int3
imul
std
dec
pmullw
mov
ror
in
inc
in
pop
inc
xor
retf
stos
nop
push
xchg
ss
clc
add
ins
add
xchg
jns
pop
inc
or
push
inc
int
aas
add
inc
cmp
pop
xchg
adc
ss
jmp
cwde
mov
and
sbb
xchg
(bad)
cdq
(bad)
jl
and
pop
adc
or
aam
push
push
adc
lods
es
ffreep
inc
add
ja
pop
in
xchg
daa
fistp
adc
fwait
sar
jmp
add
jns
adc
xchg
xor
inc
std
ret
jnp
loope
das
inc
pop
add
xor
call
xor
pop
inc
mov
xchg
ret
pop
add
mov
lahf
and
jo
aas
sbb
ror
xchg
mov
add
inc
(bad)
fld
sbb
lods
aad
dec
push
xchg
imul
or
call
jmp
fld
xor
add
add
push
xor
mov
addr16
add
mov
sti
or
mov
inc
xor
mov
jg
sub
(bad)
rol
lea
imul
adc
or
call
in
rcl
jl
jge
je
or
imul
sub
popa
push
lock
movs
mov
in
xchg
sub
cmp
inc
rol
daa
in
(bad)
lock
push
sbb
adc
in
jne
and
ins
add
add
pop
nop
and
add
inc
or
jl
or
sub
add
fadd
or
cld
popa
fcomp
jmp
cmp
lea
inc
cs
out
jecxz
push
pop
lock
jns
stos
add
mov
shl
call
ja
lea
lds
cmp
mov
fadd
cmp
dec
add
sahf
pop
push
ins
fdiv
sub
xchg
push
jo
mov
call
shr
lea
pop
popf
and
xor
mov
add
sbb
shl
or
ret
inc
sub
repz
lods
and
ret
fdivr
pop
inc
(bad)
jbe
mov
inc
pop
xchg
sub
ja
and
pop
rol
ror
loopne
jmp
aas
out
add
call
jo
call
(bad)
mov
repnz
jecxz
repz
test
imul
test
out
mov
adc
rcl
shl
fdiv
hlt
retf
mov
mov
jle
sbb
adc
cmp
xchg
jmp
sbb
adc
imul
rcr
jmp
test
or
push
rol
pusha
and
mov
ins
xor
push
and
ror
stos
pusha
adc
aad
shl
lock
adc
inc
ins
adc
mov
lock
fs
and
scas
cmp
sub
or
mov
dec
inc
sbb
xor
xchg
cmp
inc
in
push
or
or
cmp
xor
sbb
pop
push
xchg
mov
sbb
pop
pop
dec
xor
clc
push
lea
adc
mov
ret
in
sbb
or
xchg
and
ja
jno
push
push
push
fidiv
jne
fst
add
push
adc
int3
es
cmp
fst
add
xor
cmp
jge
test
dec
icebp
lods
cmp
pusha
cmp
pop
fs
jae
pop
jl
add
adc
and
and
and
inc
mov
aam
in
xlat
sub
cmp
mov
or
ins
sbb
push
adc
mov
pop
jl
(bad)
mov
sub
mov
pop
fcom
and
dec
mov
daa
ret
mov
add
(bad)
or
jecxz
lods
xor
and
cld
je
aaa
mov
pop
xor
jbe
pop
mov
jno
retf
mov
loop
inc
xchg
arpl
stos
inc
xchg
icebp
cmp
loop
sbb
bound
xchg
xchg
adc
xchg
xor
xchg
xchg
mov
xchg
or
and
nop
add
sbb
pop
mov
adc
jo
jo
mov
push
retf
push
push
add
cmp
loopne
add
cld
add
popf
xor
xchg
jb
movq
clc
or
scas
add
cld
mov
inc
or
sbb
adc
mov
jo
xor
dec
dec
inc
es
dec
mov
aaa
inc
or
mov
and
mov
fcomip
or
pop
jne
or
sbb
pop
sub
das
mov
clc
jo
add
xor
shl
mov
pop
ret
dec
dec
and
lea
xor
inc
cld
push
sbb
or
jg
dec
xor
inc
mov
fbstp
sar
mov
push
add
dec
pop
ror
dec
rcl
clc
push
push
shr
ins
adc
enter
add
xchg
adc
mov
or
aaa
int
and
inc
jmp
and
adc
push
adc
adc
mov
nop
cmp
adc
mov
push
inc
daa
dec
pop
in
add
das
shr
xchg
push
add
or
push
rcr
dec
clc
cld
aam
popa
dec
aaa
xor
adc
xchg
scas
pop
js
call
arpl
and
sbb
and
sbb
lahf
sbb
and
or
xchg
push
xor
call
or
adc
sbb
mov
or
cmps
out
call
push
sbb
lock
call
mov
sub
lahf
lods
xchg
mov
pop
dec
and
pop
mov
sub
jno
adc
mov
xchg
test
inc
pop
into
adc
(bad)
lds
lds
mov
mov
pop
cwde
pop
sub
sbb
mov
int3
mov
adc
in
sub
mov
xchg
rcl
adc
mov
xchg
inc
push
mov
or
mov
mov
pop
scas
sbb
cmp
and
test
pop
cs
lods
lods
dec
dec
and
mov
test
sub
mov
ins
xchg
adc
and
(bad)
daa
cwde
pop
and
pop
adc
leave
and
add
clc
mov
sbb
mov
add
mov
and
fld
cli
(bad)
jmp
les
nop
mov
shr
enter
imul
dec
(bad)
fimul
pop
pusha
loopne
and
dec
rol
or
mov
or
dec
jge
xchg
cmp
add
dec
sbb
pushf
test
cmp
or
imul
aam
loop
retf
ds
test
mov
das
push
ret
daa
add
js
dec
xchg
dec
(bad)
in
dec
and
add
scas
add
push
lds
or
fisttp
or
movs
loopne
xor
pop
push
shl
sub
call
sub
fisttp
adc
add
ret
mov
or
and
movs
or
add
and
arpl
hlt
outs
pop
arpl
ja
(bad)
mov
mov
fisubr
test
inc
and
push
add
push
inc
cld
aas
inc
push
jno
(bad)
cwde
jg
adc
add
xor
adc
popa
addr16
push
adc
jmp
dec
ins
mov
jg
shl
pop
dec
sub
mov
add
adc
ret
inc
test
adc
add
sbb
aas
ret
es
dec
add
sbb
popf
inc
mov
or
icebp
push
ret
mov
xchg
arpl
push
add
mov
inc
xchg
sub
cdq
add
sub
or
and
adc
lahf
mov
adc
(bad)
cmp
les
mov
or
jg
adc
inc
(bad)
fisttp
jno
shl
aas
push
dec
xor
and
xor
dec
adc
inc
adc
adc
push
mov
fcomip
mov
mov
fadd
lock
add
sbb
or
push
mov
or
and
add
(bad)
call
or
mov
mov
inc
add
or
in
mov
loope
add
adc
sub
pop
inc
clc
adc
cmp
inc
js
lahf
mov
mov
mov
push
jecxz
and
inc
call
push
and
mov
sub
sub
loopne
mov
arpl
inc
pop
mov
xchg
inc
add
call
add
add
jne
mov
or
ins
xchg
and
pop
retf
out
add
cmp
and
xor
adc
lds
xchg
(bad)
in
dec
hlt
mov
adc
(bad)
test
test
cmc
or
push
push
ins
cli
jg
sbb
sbb
and
shr
sub
shl
add
xor
lods
fnstsw
cmps
ss
js
or
and
sbb
push
hlt
in
movs
pop
cdq
push
fnstenv
js
retf
pop
or
retf
jo
adc
push
xor
test
or
loopne
repz
inc
(bad)
(bad)
clc
jl
add
inc
leave
iret
and
mov
ins
or
or
pushf
add
loop
add
xchg
adc
push
or
sbb
mov
add
je
pop
and
fucom
mov
pop
lock
add
jecxz
loope
adc
inc
push
add
add
adc
pop
popa
mov
dec
sub
or
inc
sub
int3
mov
ins
mov
add
or
xchg
mov
mov
shl
jl
add
test
fld
fistp
inc
(bad)
fist
add
dec
fld
xor
inc
movs
loope
or
add
or
sbb
adc
mov
jmp
js
dec
dec
inc
imul
in
sbb
pop
dec
loope
test
movs
jae
sbb
lahf
or
push
inc
adc
inc
sbb
inc
and
push
gs
add
or
sub
imul
sub
test
popf
adc
ss
shl
xor
mov
xlat
ss
imul
loopne
nop
ret
test
je
add
test
bound
sub
push
jns
sahf
xchg
(bad)
sbb
inc
push
repnz
movs
jb
ss
jns
fdivp
sbb
or
sbb
clc
movs
sub
dec
add
lahf
or
nop
push
jg
mov
test
add
or
xchg
mov
xchg
mov
and
test
lahf
mov
lahf
push
xchg
mov
push
adc
mov
jecxz
or
and
arpl
js
add
cdq
scas
ins
push
mov
fmul
ret
lods
inc
sbb
add
mov
add
inc
mov
test
add
pop
popf
loopne
sbb
mov
mov
mov
xor
rol
sub
lea
call
add
movs
(bad)
mov
ficomp
js
and
or
and
inc
test
push
sub
or
shl
loop
mov
mov
enter
addr16
popf
cwde
jns
test
sbb
sbb
dec
pop
adc
xor
ds
add
mov
or
sub
call
and
xchg
ins
xchg
mov
ins
arpl
or
ror
ret
lods
dec
or
jl
or
mov
and
adc
sbb
mov
xor
add
sbb
push
mov
test
test
or
add
adc
jmp
lds
lahf
ror
or
adc
pusha
shl
xlat
jb
mov
daa
or
iret
jns
test
jp
add
xor
push
inc
test
bound
add
loopne
dec
and
dec
add
movnti
mov
push
test
mov
xchg
jp
and
rcr
jo
mov
nop
sbb
(bad)
cmp
cwde
ret
sti
repz
mov
pushf
push
inc
scas
and
js
mov
and
lds
ret
pusha
jg
push
rcl
pop
jmp
pop
ret
retfw
cmp
dec
adc
cld
jl
loop
clc
jmp
sub
xchg
adc
push
cdq
cld
jge
or
cmps
sbb
ret
imul
push
sahf
jle
sub
cmp
shl
mov
pushf
jae
xor
sbb
daa
sbb
add
stos
jae
and
add
fisub
sub
retf
ins
cmp
inc
xor
sbb
sub
sub
cmp
inc
test
add
mov
pop
cmp
adc
js
xchg
add
jno
clc
inc
movs
iret
jl
dec
jecxz
adc
lea
xor
std
in
push
inc
or
push
int
sbb
mov
out
and
or
aaa
bound
and
mov
iret
dec
pop
ja
push
add
js
inc
into
add
fcmovnu
cld
push
ins
cwde
mov
jle
out
call
pop
mov
fisttp
sub
mov
(bad)
push
and
call
add
add
mov
stos
rcr
out
je
and
jle
inc
loopne
leave
sub
add
sub
fcom
sahf
outs
inc
dec
push
pop
lods
cmp
scas
fld
jmp
push
mov
mov
pop
rcr
add
mov
sbb
clc
jns
sub
or
scas
stc
add
xchg
clc
push
adc
and
push
fwait
movs
jg
push
cmp
cmp
cmps
mov
push
cmps
mov
sub
push
(bad)
shr
mov
(bad)
mov
imul
push
imul
sbb
inc
inc
test
mov
add
mov
add
test
test
add
lock
popa
pop
fwait
add
mov
dec
adc
adc
adc
dec
in
and
cmp
cmp
or
repnz
add
cs
pop
pop
inc
and
adc
cmp
lea
and
push
add
ss
xchg
repz
add
mov
add
call
push
call
inc
add
fmul
jecxz
pop
or
inc
inc
sbb
ins
dec
add
(bad)
pop
ret
xor
jnp
dec
xchg
inc
iret
retf
test
fadd
push
inc
cmp
jne
add
adc
or
aas
icebp
and
lahf
ror
test
jmp
push
xchg
or
bound
shl
test
push
dec
jecxz
and
mov
aad
mov
inc
add
dec
gs
or
add
add
test
in
adc
mov
std
clc
jg
xor
and
test
sahf
and
cwde
and
pop
or
call
adc
lahf
mov
movs
xchg
adc
mov
inc
pusha
and
pop
xchg
in
test
adc
sbb
mov
sbb
push
xor
lea
or
inc
push
cdq
push
mov
add
or
pop
adc
sbb
mov
add
lock
je
ficom
xchg
adc
jmp
test
and
aas
sub
fcomp
add
mov
or
adc
aas
test
test
lea
add
pop
mov
push
pop
sbb
dec
popa
fdivr
shr
aas
push
or
mov
mov
aas
xchg
mov
sbb
jne
les
aas
and
inc
femms
add
ss
sub
lea
mov
or
xchg
outs
(bad)
pusha
jmp
into
lea
test
aas
jmp
std
or
inc
test
pop
or
test
fstp
dec
and
pushf
fs
and
adc
lock
adc
mov
sub
sub
fild
sysret
lea
xor
lahf
xor
imul
jno
inc
add
xor
push
addr16
inc
popa
lahf
add
add
jmp
xchg
ins
or
scas
cwde
mov
aam
or
and
loopne
xchg
jg
push
dec
dec
cmps
mov
pop
adc
jecxz
ror
mov
mov
xlat
fs
mov
pop
sub
adc
adc
or
out
or
das
dec
sub
pop
add
repnz
in
and
xchg
ret
push
fist
shl
fld
fistp
in
dec
ins
clc
stc
pop
bnd
pop
dec
or
mov
hlt
add
ins
add
fisttp
pushf
push
jbe
pop
and
adc
outs
xor
pusha
or
or
das
xchg
es
das
or
jle
nop
or
ins
ins
or
aas
leave
mov
je
sub
mov
aad
lock
dec
adc
or
adc
add
mov
ins
sahf
add
and
cwde
fucomi
imul
xchg
pusha
cmp
xor
push
outs
push
jg
cmps
add
jge
cld
sub
or
imul
inc
sub
and
mov
adc
mov
cs
push
adc
sub
setne
jg
mov
je
mov
das
add
mov
pop
shr
push
ins
cli
arpl
loopne
loope
mov
xchg
xor
sbb
jp
xchg
xor
or
test
xor
push
cmc
mov
add
loope
fs
rcl
mov
mov
out
(bad)
cli
cmps
clc
or
je
sub
sahf
jle
neg
or
ins
adc
rcr
loopne
ror
adc
imul
js
outs
outs
ror
je
or
xchg
and
ret
jmp
cld
mov
dec
or
add
xor
mov
lock
cdq
mov
push
aaa
adc
test
cmps
cmp
xchg
sub
arpl
shl
xchg
sar
jae
cs
mov
mov
dec
add
div
retf
imul
aad
hlt
mov
sub
fmul
mov
add
test
rcr
mov
gs
push
aam
pop
mov
or
aam
enter
and
(bad)
and
xchg
sub
fmul
pushf
in
jmp
cmp
push
and
inc
call
inc
xchg
push
jbe
je
and
jge
mov
or
retf
ret
mov
dec
or
pop
ror
(bad)
xor
jae
sahf
xchg
nop
sub
jmp
retf
cli
cs
arpl
adc
imul
retf
sbb
cmp
adc
jo
push
jle
mov
jl
pop
jle
pop
lods
sub
sbb
cmp
adc
jge
pop
add
mov
inc
cld
nop
or
xor
scas
cli
mov
cmp
mov
div
mov
jbe
pop
push
sbb
sub
mov
mov
mov
mov
pop
mov
lock
or
or
ds
adc
add
imul
push
popa
ret
jne
pop
ret
sbb
aad
mov
and
icebp
or
pop
ins
add
pop
icebp
inc
jmp
or
mov
and
add
ret
mov
jno
inc
in
lahf
lea
cmp
lds
sub
dec
pop
or
pop
dec
lahf
ret
fmul
push
ins
pop
mov
push
rcr
retf
cmp
lea
fst
call
pushf
mov
(bad)
push
xchg
push
sub
xchg
xor
cdq
rcr
xor
fwait
jnp
sbb
das
xor
add
push
mov
inc
jbe
in
or
lea
pop
sbb
inc
fild
inc
iret
cwde
dec
push
xchg
sub
dec
push
test
lahf
shr
retf
mov
test
loopne
mov
in
jnp
fpatan
mov
push
in
fadd
in
sbb
icebp
addr16
mov
pop
fld
mov
ins
mov
xchg
sub
xchg
pusha
jmp
xor
mov
fist
(bad)
mov
push
cwde
sub
cmp
adc
iret
dec
cmps
mov
addr16
or
and
xchg
enter
xor
mov
pop
ds
push
sub
clc
(bad)
push
jns
xor
or
aaa
pusha
jl
ret
in
jbe
pushf
ins
mov
test
sbb
or
aaa
add
xchg
ins
adc
movs
test
(bad)
mov
adc
adc
push
(bad)
mov
xor
or
cmps
dec
add
fbld
pop
xchg
ret
push
imul
pop
dec
sub
sar
lods
test
push
sbb
loope
sahf
mov
xchg
jo
xchg
inc
dec
inc
fild
test
fbstp
rcl
ja
push
xchg
pusha
loope
inc
add
adc
push
push
popf
push
adc
nop
int3
cdq
fcomp
jns
(bad)
or
arpl
or
call
push
xchg
cmp
add
inc
push
cli
sbb
test
popf
mov
or
jne
or
xchg
add
xor
xchg
test
mov
mov
retf
sbb
loop
cs
sbb
pop
ror
mov
or
aas
(bad)
jmp
popa
stos
push
xor
ror
hlt
and
mov
cwde
rol
nop
xlat
inc
mov
loopne
js
add
lea
mov
add
push
or
pop
mov
mov
cmp
cld
fadd
sbb
mov
inc
loopne
mov
pop
or
pop
push
mov
sbb
pushf
sbb
sbb
mov
or
test
xor
pop
and
aaa
inc
jno
mov
lea
arpl
jne
xchg
add
adc
cs
jmp
ret
add
inc
xchg
dec
mov
jle
adc
add
jmp
sar
pop
rcr
xor
popa
inc
sub
popa
or
or
sub
cmc
call
pusha
fstp
sub
jmp
cmps
push
or
push
lahf
and
sub
sbb
and
pop
mov
cmps
xchg
dec
add
or
mov
sbb
sub
fisttp
push
mov
jecxz
and
adc
sub
into
or
pop
xor
mov
adc
fist
call
loope
pop
mov
cld
push
and
daa
adc
test
imul
jg
nop
cmp
aam
inc
(bad)
adc
and
cmps
dec
push
dec
xchg
mov
inc
or
rcl
and
adc
mov
and
test
xchg
(bad)
dec
test
add
or
xchg
fcomp
mov
loopne
inc
lahf
lods
pushf
(bad)
or
add
add
cmc
outs
fld
add
mov
stos
pop
pusha
test
and
cli
rol
mov
push
aam
adc
bound
loop
xlat
mov
clc
loopne
outs
and
jge
mov
imul
mov
mov
add
test
ss
mov
push
test
jae
clc
and
add
ins
movs
and
mov
mov
add
test
mov
fdiv
ret
scas
call
je
(bad)
cld
jb
adc
mov
test
mov
ss
fnstsw
dec
sub
ret
adc
std
mov
aas
sub
inc
outs
ret
gs
or
mov
mov
add
push
mov
shr
in
shr
dec
pop
or
test
ror
scas
pusha
sbb
loope
inc
movs
jg
adc
sub
inc
imul
call
jmp
dec
jg
push
mov
rcr
sbb
aas
repnz
add
enter
add
inc
sbb
xor
pop
cmps
dec
inc
pusha
sbb
add
call
or
inc
jb
test
add
inc
vmread
or
icebp
(bad)
aas
jbe
mov
adc
jg
les
dec
pusha
mov
rol
push
mov
sbb
frndint
js
mov
sub
push
jno
movs
ja
and
dec
mov
loop
ret
aad
dec
loope
mul
pop
dec
or
adc
(bad)
mov
xchg
jmp
dec
mov
mov
mov
dec
les
sbb
mov
mov
adc
or
adc
dec
or
sar
add
and
mov
push
and
(bad)
out
and
lds
add
test
and
sbb
mov
cld
aaa
bound
add
and
xor
inc
jb
lea
or
adc
inc
add
aam
ins
sbb
inc
pop
std
or
or
mov
mov
daa
jmp
std
cmp
test
or
cmp
ret
xor
jmp
loope
mov
jno
(bad)
jne
xor
inc
push
ror
jno
gs
pop
push
sbb
xor
lock
inc
and
call
push
(bad)
ins
das
mov
and
add
dec
inc
pop
lods
and
or
or
or
rcr
pop
nop
inc
loop
addr16
les
shr
push
mov
sub
call
daa
inc
mov
pushf
test
addr16
aas
sbb
mov
les
push
bound
call
pushf
sbb
add
les
jne
call
inc
xor
das
inc
cmp
sub
jg
pusha
push
sar
jg
dec
and
xchg
aas
cwde
test
jbe
(bad)
rcl
jecxz
pop
inc
aas
arpl
push
mov
mov
and
mov
pop
xor
jge
jb
iret
cmp
cmp
lods
add
push
cmp
inc
mov
dec
xchg
les
movs
jne
sub
and
inc
lock
clc
mov
(bad)
jmp
jns
add
inc
pop
pop
call
cmps
and
movs
mov
push
adc
je
fld
xchg
push
nop
fs
xor
push
mov
xchg
js
xor
or
mov
fwait
push
sbb
in
and
sbb
or
mov
fcom
imul
and
pop
push
pop
ror
adc
int
aam
stos
jo
push
mov
pusha
cmps
xor
add
mov
adc
es
stc
out
nop
adc
push
sub
popa
js
ss
or
sti
(bad)
mov
les
movs
and
pop
pop
mov
test
or
cmp
or
adc
push
or
in
jge
push
pop
sar
ror
and
hlt
and
cwde
in
xchg
jmp
iret
push
inc
pusha
adc
cmp
pusha
daa
mov
dec
and
ss
adc
adc
add
xlat
ss
xlat
aaa
retf
adc
and
ja
xor
xlat
cmp
mov
and
leave
mov
and
and
jb
sub
int3
or
add
lahf
repz
dec
add
das
and
adc
adc
xchg
int
sub
sub
loopne
sub
mov
pop
xor
push
adc
cmp
aas
rcr
daa
inc
mov
jbe
cmp
(bad)
hlt
sbb
outs
ss
fwait
ror
scas
pop
sub
push
and
imul
cmp
add
fisttp
pop
push
clc
jg
fs
push
pusha
sbb
mov
movd
fidivr
movapd
push
clc
jae
xor
imul
jle
push
push
add
push
ror
test
jno
cmp
jbe
jge
repz
into
jg
mov
(bad)
push
xchg
ret
adc
(bad)
jnp
mov
(bad)
xor
and
jnp
jbe
or
add
adc
je
or
ret
pop
mov
mov
add
push
mov
mul
mov
int
(bad)
pop
(bad)
loopne
ret
rol
sbb
inc
pop
int3
es
loope
jmp
ins
retf
adc
retf
adc
add
cwde
sbb
inc
mov
mov
pop
xor
mov
or
cmp
sbb
cmp
adc
push
mov
movs
aaa
nop
xor
xor
fstp
inc
mov
add
push
jne
mov
rcr
add
ror
retf
or
cld
rep
gs
inc
sbb
jmp
ret
mov
sbb
add
or
jbe
jne
adc
jg
cmp
arpl
sbb
or
xor
adc
sbb
xlat
jmp
lds
or
jno
xchg
movs
inc
cs
out
js
das
add
mov
dec
inc
mov
dec
adc
cmp
sub
mov
ret
pop
ins
and
jne
(bad)
(bad)
mov
sbb
mov
sub
mov
adc
js
add
or
add
or
and
add
fbld
inc
sbb
fsub
ins
add
jmp
sbb
cmp
inc
pop
lahf
inc
dec
sbb
add
clc
leave
adc
dec
mov
mov
sub
dec
inc
or
inc
jb
lock
adc
xor
push
add
jne
pop
movsx
and
xchg
pop
push
sbb
aam
sbb
and
and
gs
dec
jne
xchg
popf
call
(bad)
sub
call
xor
sbb
add
pop
adc
xchg
psubb
das
test
add
dec
int3
jmp
dec
and
shr
rol
adc
in
inc
add
lock
fisttp
out
addr16
add
xor
xor
add
test
inc
stos
mov
dec
mov
loope
ins
sbb
test
ja
movups
(bad)
clc
mov
je
aaa
push
jo
and
fldenv
aam
pop
push
jb
mov
add
xchg
cmps
add
push
add
mov
fs
call
test
push
lods
pop
sbb
leave
push
js
imul
sbb
jmp
push
add
dec
mov
push
or
pushf
add
mov
sbb
push
mov
mov
pop
push
cmp
mov
adc
jle
xchg
jmp
adc
adc
xchg
popa
adc
mov
push
adc
bound
fwait
es
lds
ret
inc
mov
cmp
push
mov
popa
pop
or
xchg
xor
rcl
and
dec
xchg
dec
mov
leave
add
xor
or
repnz
push
or
add
push
push
inc
loope
sbb
and
mov
xor
add
adc
dec
std
cli
mov
mov
sub
push
(bad)
sbb
and
or
adc
and
cmp
std
jge
lahf
jbe
outs
stos
fbstp
xor
xchg
add
xchg
or
scas
es
ror
jbe
cmp
cmova
add
cmp
stc
mov
adc
dec
pop
push
pop
and
rcr
mov
dec
pop
pop
jne
push
rcr
rcl
clc
adc
test
sub
xchg
scas
jb
rep
sbb
rcl
and
xor
nop
mov
sub
push
shr
or
enter
(bad)
xor
mov
paddd
jns
xor
nop
or
push
inc
push
mov
mov
mov
stc
call
mov
(bad)
mov
or
push
inc
movs
imul
sub
inc
xor
mov
cmp
fcom
(bad)
jns
out
sar
in
iret
repz
inc
(bad)
in
call
cmp
repz
hlt
hlt
clc
clc
test
xor
cmp
or
add
(bad)
out
push
or
add
mov
ret
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jle
daa
mov
(bad)
cld
out
ss
inc
jno
ins
neg
shl
inc
xchg
daa
stc
pop
mov
and
xor
xor
movs
push
enter
jl
mov
out
jnp
mov
aaa
das
outs
sub
inc
push
out
push
or
push
nop
dec
dec
shl
mov
mov
pop
bound
mov
inc
push
dec
iret
repz
push
pop
fs
je
sahf
out
(bad)
sbb
push
sbb
adc
sahf
out
adc
adc
test
sahf
out
or
aaa
js
mov
ss
mov
push
or
mov
add
(bad)
loopne
add
movs
bound
or
add
dec
xor
sbb
shr
add
jbe
movs
test
cmp
adc
ja
test
adc
and
sbb
stos
add
jmp
dec
dec
pushf
xchg
mov
cmps
stc
sbb
xor
add
and
xchg
push
sbb
and
or
fisttp
std
push
mov
movs
sbb
fincstp
xor
je
hlt
je
sub
(bad)
dec
idiv
mov
shl
add
or
out
iret
mov
dec
je
arpl
repnz
ret
push
shr
cld
in
or
retf
mov
push
iret
and
add
movs
cmc
scas
add
cld
pop
and
jmp
sbb
xor
jb
or
enter
(bad)
jp
jae
ss
pop
or
cld
push
add
pop
jmp
ins
imul
out
and
push
daa
jo
or
fcom
pop
pushf
jle
or
mov
ret
fild
xchg
lock
xchg
adc
(bad)
dec
sbb
adc
mov
sub
scas
or
sbb
test
xor
and
xchg
mov
call
or
ja
in
sbb
add
or
sub
fwait
ds
dec
jne
push
clc
dec
lea
push
dec
in
(bad)
push
fsubr
sbb
add
add
mov
pusha
ret
fsubr
sbb
add
and
test
add
jl
fisubr
test
shl
cmp
adc
ret
jne
jmp
sbb
pushf
push
cmps
dec
lahf
mov
movs
push
popa
xchg
pop
test
mov
push
add
push
sbb
test
inc
retf
pop
inc
sahf
mov
push
dec
xchg
adc
or
jmp
xor
cmp
mov
dec
mov
test
sbb
jb
mov
sbb
sahf
nop
test
daa
pop
rol
and
mov
test
aas
add
cmp
loop
das
nop
int3
mov
jmp
and
iret
jmp
adc
adc
cdq
mov
jmp
fs
or
imul
cs
xchg
sbb
sbb
enter
adc
adc
or
mov
add
xor
mov
push
xchg
xchg
mov
sbb
or
push
push
mov
int3
jmp
leave
enter
push
mov
push
add
inc
mov
push
rcr
pop
and
mov
mov
mov
pop
leave
adc
(bad)
xchg
mov
pop
cmc
adc
xor
and
repnz
add
addr16
jmp
dec
add
or
enter
aaa
and
dec
cmc
test
dec
lock
hlt
xor
cmp
and
cmp
gs
mov
push
jns
jns
adc
push
inc
jmp
pop
sahf
neg
inc
lock
sbb
out
out
jns
leave
inc
cmc
push
pop
jbe
out
sahf
mov
cmps
adc
push
or
test
xchg
cmp
hlt
lahf
sbb
imul
ret
fild
lock
rol
adc
ss
(bad)
fadd
fistp
ret
lea
rol
les
cmp
call
lock
popa
loopne
mov
pop
ins
dec
jae
retf
pop
in
xor
xchg
add
loopne
sbb
mov
in
gs
dec
push
add
xor
sbb
sub
push
cld
xchg
sbb
outs
push
add
ficomp
nop
xchg
push
lahf
js
sbb
add
fadd
cmovle
push
sbb
push
push
add
mov
ret
int
cld
inc
daa
mov
imul
mov
push
and
sub
neg
movs
xor
jmp
lods
xor
add
inc
inc
out
add
xor
push
rol
add
bound
pop
xor
cmc
push
fmul
cdq
les
adc
and
loope
pop
fsubrp
push
mov
js
inc
enter
inc
adc
mov
clc
push
imul
or
jg
clc
ret
(bad)
arpl
xor
add
cmp
aas
sbb
adc
sub
xchg
inc
or
lahf
aam
inc
or
addr16
sub
push
inc
cmp
cwde
aas
rcl
rcr
mov
and
adc
xor
adc
mov
or
sbb
add
mov
cwde
add
cdq
xchg
sbb
cmp
mov
sbb
jp
mov
mov
pop
fadd
pop
push
dec
xchg
aaa
xchg
jmp
sub
xchg
or
mov
ins
jo
push
or
add
push
movs
jecxz
inc
ret
shl
pop
add
add
add
lods
retf
nop
rcl
xchg
cli
nop
or
inc
mov
outs
or
dec
leave
jle
push
adc
and
mov
or
int3
ror
enter
and
xchg
or
jp
or
push
pop
enter
daa
test
sub
dec
sti
cmps
les
or
or
mov
arpl
push
and
xchg
adc
cdq
(bad)
mov
adc
loope
out
adc
push
and
fst
cmp
mov
pop
cmps
mov
ror
in
sub
icebp
inc
lock
push
add
nop
aaa
sbb
add
dec
nop
bound
test
fidiv
ins
mov
mov
or
mov
push
sub
xor
dec
pop
mov
xor
pop
add
adc
add
add
xor
xchg
leave
push
mov
xor
mov
cdq
xchg
hlt
add
mov
lods
inc
mov
jle
mov
inc
test
inc
push
push
cwde
shl
xor
hlt
push
cld
sbb
aam
or
pop
cmps
pop
add
mov
dec
push
or
imul
dec
rol
inc
and
ins
pushf
addr16
jb
or
xchg
adc
mov
aaa
jecxz
jb
int3
cmps
pop
dec
cwde
cwde
mov
or
xchg
sub
fs
fdivr
mov
push
pop
loop
ss
test
je
and
mov
lods
or
add
xchg
push
jmp
pop
xor
dec
or
or
add
sub
xor
dec
jg
adc
sbb
nop
js
lea
fwait
pusha
mov
pop
cdq
jp
add
inc
in
xor
push
xchg
js
add
dec
xor
jne
and
jnp
test
dec
out
sbb
add
jge
pop
sbb
add
adc
and
lods
push
stc
popf
sub
mov
lds
test
clc
punpcklbw
inc
into
int
adc
lods
jecxz
leave
xchg
or
aas
mov
dec
ja
lds
or
adc
leave
fdiv
and
ltr
adc
scas
out
jecxz
stc
jbe
xlat
(bad)
gs
add
dec
aas
cmp
xchg
stos
adc
jo
inc
xchg
jle
iret
add
call
push
inc
call
dec
retf
push
(bad)
adc
lea
push
inc
mov
out
inc
mov
retf
test
es
call
les
add
or
pop
mov
mov
nop
mov
les
push
or
mov
mov
or
xor
jbe
test
in
loopne
sbb
push
jno
or
shl
add
sub
xchg
and
nop
sbb
add
or
jbe
and
inc
or
add
arpl
cmps
(bad)
icebp
and
leave
fdiv
rcr
mov
xchg
dec
int
xor
mov
fmul
mov
add
add
sub
(bad)
jg
ret
mov
and
xor
jns
pusha
and
mov
and
rcl
sbb
ret
rol
bound
xchg
repz
fadd
daa
jne
cmc
mov
push
and
jp
xchg
sub
cld
or
add
xor
inc
add
xchg
xor
pop
lahf
and
and
and
push
push
cdq
inc
or
sahf
(bad)
and
mov
xor
dec
loopne
es
(bad)
mov
push
push
or
mov
push
jo
adc
xchg
push
jne
pop
es
pop
xchg
cmp
fdivr
cmp
and
retf
and
and
dec
cs
sub
jp
adc
in
lea
cld
sub
leave
mov
outs
add
fmul
pop
lea
sar
loopne
call
cld
movs
ja
add
dec
xchg
dec
jmp
and
cmp
ret
ror
or
ror
and
adc
sub
mov
xchg
cwde
pop
fimul
cwde
and
and
adc
jbe
sub
jne
adc
or
jge
loopne
pop
cs
les
mov
inc
pop
pop
or
out
loopne
popa
add
ficomp
adc
adc
ret
leave
fucomp
les
shr
imul
repnz
and
xchg
xor
jmp
mov
push
add
shl
ret
sub
js
push
popa
jmp
int
add
nop
or
or
add
mov
mov
xor
pusha
mov
and
repz
push
rcr
sub
std
xchg
ror
stos
retf
mov
daa
sbb
ror
lahf
and
xchg
sbb
fstp
sub
adc
daa
add
jno
mov
test
fwait
mov
mov
pop
or
or
mov
sbb
xor
inc
outs
push
dec
aaa
call
fcomp
cwde
(bad)
(bad)
fmul
fcomp
(bad)
sar
sbb
adc
ss
push
test
push
push
push
cmp
mov
pop
mov
sub
sbb
or
pop
js
add
inc
mov
fld
push
sub
nop
ss
push
inc
pop
mov
std
repz
adc
mov
fwait
add
add
in
mov
cdq
inc
mov
mov
adc
sub
ret
nop
lea
cmp
sbb
mov
pop
fcmovbe
das
or
mov
or
cmps
inc
sbb
inc
mov
ss
push
(bad)
cmps
inc
cmp
ret
pop
or
inc
xchg
xor
imul
sub
pop
xor
xchg
xchg
cmc
sub
out
mov
mov
jmp
mov
cmc
push
inc
hlt
push
push
out
add
inc
stc
aas
mov
cmp
or
arpl
xor
push
dec
pop
adc
and
xor
fsub
pop
dec
inc
mov
cmps
mov
xor
mov
pop
pop
ret
cwde
and
mov
cmp
mov
lea
xchg
inc
adc
leave
mov
pop
jne
or
xchg
cwde
dec
call
mov
xchg
mov
mov
add
dec
mov
sub
jno
int3
xchg
push
test
fwait
enter
mov
pop
loope
jmp
stos
lahf
add
cwde
(bad)
arpl
jge
adc
rcl
add
test
mov
in
xchg
js
push
mov
jge
pop
inc
cmp
mov
add
loopne
fld
ins
mov
mov
test
cmp
cwde
rol
push
popa
loopne
xor
call
cdq
call
and
ret
add
sbb
cmps
test
adc
and
sbb
or
fist
push
rcl
or
adc
adc
test
mov
add
call
iret
cmps
push
dec
mov
mov
in
dec
pop
adc
adc
xor
fldenv
xor
or
sbb
and
inc
and
lods
fs
pop
aam
sub
clc
(bad)
mov
mov
adc
and
fstp
retf
shl
xchg
jo
or
gs
xchg
add
sub
imul
xchg
add
push
add
jge
or
cmp
jo
in
mov
jb
push
loope
sbb
or
dec
mov
ins
lods
jg
mov
add
lods
add
sub
jmp
das
and
sub
mov
and
add
xor
test
pop
xor
inc
jp
js
adc
outs
das
jb
adc
and
sbb
add
daa
cli
imul
es
jns
push
mov
or
ror
or
ja
adc
sbb
pop
pop
dec
adc
mov
add
dec
add
or
or
sub
add
js
cmp
ds
add
xchg
mov
mov
adc
cmp
mov
dec
mov
pop
cmp
push
stos
das
outs
adc
inc
and
xor
loopne
cmp
popa
das
jne
add
sub
cs
cmps
dec
test
test
sbb
(bad)
ret
add
sub
jne
fist
add
mov
push
mov
push
jg
mov
sbb
adc
cmp
sbb
syscall
and
and
or
dec
jg
ja
adc
add
xor
(bad)
cmp
nop
outs
test
push
ret
pop
sub
nop
jo
addr16
cmp
movs
push
or
dec
add
pop
xchg
aad
fsub
fs
mov
and
ins
cwde
ja
in
enter
xor
mov
fsub
sbb
adc
mov
test
mov
adc
call
jb
or
add
fwait
push
shl
imul
int3
jmp
inc
jmp
std
or
sub
sbb
popa
add
outs
xor
pop
daa
push
dec
retf
xchg
loopne
rol
retf
inc
retf
xor
ins
js
mov
or
in
call
mov
out
xor
mul
jmp
push
into
xchg
daa
mov
dec
ret
xor
ret
mov
ins
xchg
mov
outs
add
push
adc
popa
pop
jnp
mov
test
pop
jnp
call
ja
mov
mov
pop
inc
pop
retf
lock
sub
or
jmp
mov
xor
es
not
or
cmp
call
push
repz
mov
mov
je
add
js
es
sub
xor
mov
popa
fsub
pop
cwde
adc
jns
cli
or
mov
xchg
(bad)
in
or
cmp
lods
clc
mov
data16
lea
in
pop
fimul
push
mov
and
imul
sbb
xor
cmp
test
(bad)
cmp
adc
enter
popf
adc
fwait
shl
jg
mov
adc
adc
inc
loopne
jbe
js
dec
xor
leave
adc
outs
sbb
cmp
out
dec
push
enter
and
fstp
jl
enter
pop
xchg
add
std
xchg
and
sub
jmp
pop
ds
sub
xor
add
(bad)
sbb
sbb
push
aaa
lahf
push
pop
adc
clc
enter
add
aam
dec
and
cmp
popf
or
adc
cs
nop
xchg
jmp
xor
push
rcr
inc
js
xchg
sub
push
or
loope
jmp
or
aam
ins
pop
dec
fsub
sbb
(bad)
xor
push
adc
repz
ror
repz
pop
sub
shr
enter
inc
pop
movs
push
inc
ror
dec
cmp
mov
and
xchg
adc
mov
mov
(bad)
mov
cmp
popa
and
and
sbb
inc
arpl
dec
out
inc
cmps
mov
adc
pop
cmps
or
jmp
mov
mov
add
nop
(bad)
enter
mov
pop
cvtdq2ps
mov
lods
sub
adc
retf
add
lds
call
fwait
mov
adc
sbb
cmp
and
or
les
mov
adc
ins
and
dec
jnp
clc
gs
sub
mov
test
cmp
xor
push
es
mov
imul
add
push
cmc
mov
or
das
push
(bad)
out
sbb
sbb
add
sahf
push
add
sbb
ret
adc
jl
cmps
jp
or
or
jno
add
jmp
mov
jecxz
out
adc
adc
sti
inc
ror
pusha
sar
and
add
mov
or
dec
cmp
ja
or
ror
loopne
mov
adc
add
push
xor
cmps
mov
sti
int
sbb
push
push
mov
lock
daa
pusha
ror
adc
mov
fcomp
sub
aas
push
add
fisub
jne
dec
push
in
jge
adc
adc
jne
sub
adc
and
xor
or
add
stos
fnstenv
mov
cmc
fstp
mov
dec
push
shl
fld
test
mov
add
jg
cmp
ds
add
and
push
add
add
add
retf
ror
pop
jp
(bad)
jnp
(bad)
jge
jno
movs
dec
test
xchg
sub
adc
jl
or
sub
or
in
jb
ret
ret
daa
ss
pop
or
loopne
dec
adc
in
loopne
daa
fcomp
sub
and
mov
pusha
add
fsubr
aad
cwde
dec
mov
das
fild
inc
cmp
outs
and
push
aas
add
inc
dec
and
mov
add
loopne
add
xchg
call
add
push
ret
or
inc
ins
gs
aas
push
out
dec
adc
xchg
retf
jmp
and
imul
add
adc
outs
xor
xor
mov
push
dec
mov
sub
add
push
mov
daa
inc
out
adc
jne
fsub
lock
xor
xchg
xchg
cmp
gs
sbb
cmp
dec
dec
cmps
popa
adc
pop
loopne
fld
mov
icebp
push
sbb
pop
fcom
add
mov
push
dec
rcl
mov
retf
xlat
pop
or
sbb
mov
mov
or
aas
in
xchg
cmp
mov
dec
add
xor
sbb
add
shr
gs
cmp
mov
add
in
dec
and
add
pop
inc
movs
mov
iret
fcom
in
mov
fsubr
mov
mov
mov
and
shl
inc
mov
movs
enter
int3
je
adc
(bad)
int3
push
aad
jp
(bad)
jo
scas
sbb
or
aad
inc
push
sbb
ror
and
dec
ret
fmul
or
xchg
push
add
and
(bad)
or
xchg
stc
jno
jmp
xor
sti
add
fcom
pusha
imul
add
jmp
in
or
sub
or
adc
dec
add
pop
cmp
push
inc
push
call
les
mov
pop
pop
xlat
sub
cld
neg
aas
fadd
fdivr
xor
or
or
rcr
sub
inc
lods
or
jle
int3
cld
inc
out
and
pmullw
icebp
mov
(bad)
imul
add
sbb
into
rcl
rol
or
rcl
lahf
sub
and
in
repz
sub
aad
sub
push
mov
push
adc
add
and
add
inc
mov
dec
imul
sbb
sbb
cmp
or
dec
jge
add
add
dec
add
data16
(bad)
aad
add
lods
loopne
mov
test
fsubr
pop
mov
(bad)
add
stos
sub
dec
push
in
xor
xor
js
xor
add
dec
fild
mov
xor
je
or
lock
lods
mov
cmp
ins
loopne
sub
dec
inc
scas
or
shr
xor
adc
cs
xor
fcomp
outs
or
xor
ins
pop
or
loopne
cld
jno
inc
(bad)
cmp
in
or
pop
and
ret
aam
sub
xchg
cmp
jmp
loopne
(bad)
je
fidiv
call
sahf
stos
fistp
push
xchg
adc
cmp
pop
mov
mov
fsub
ja
or
xor
and
push
or
popf
push
xor
mov
dec
cld
or
and
add
aas
test
lahf
lsl
or
add
mov
xchg
jnp
sub
adc
pop
mov
sub
mov
jo
jae
mov
xor
or
cmp
dec
dec
aas
repz
jge
xor
add
sbb
sbb
js
jno
push
cmp
sbb
pop
dec
adc
retf
or
pop
inc
add
lock
adc
lock
cmp
hlt
shl
(bad)
jmp
fs
sub
enter
add
inc
in
push
jo
push
js
and
mov
cwde
jne
pusha
jne
cwde
fiadd
adc
sbb
les
mov
xor
retf
(bad)
arpl
loope
mov
adc
in
adc
push
test
jns
retf
daa
jne
shl
fsub
dec
jp
das
clc
jne
fadd
movs
retf
add
and
and
or
push
or
adc
or
mov
sbb
ror
lock
or
inc
push
jp
inc
sub
add
adc
adc
fisub
dec
movs
ret
pushf
rcl
lds
mov
enter
or
xchg
jo
pop
nop
xor
mov
in
dec
mov
inc
ret
fidiv
sub
or
mov
push
adc
or
xor
jne
out
lods
pop
adc
xor
adc
or
imul
or
ret
ja
and
loopne
mov
and
adc
popa
sbb
mov
call
bnd
mov
add
pop
jmp
jno
mov
icebp
pop
xchg
add
sbb
jo
icebp
jge
int
fs
imul
fldcw
and
fcmovb
pop
test
ret
les
shr
imul
push
mov
add
or
jns
mov
lock
mov
add
arpl
sbb
adc
cmp
mov
sbb
mov
or
pop
lods
fmul
and
add
inc
pop
mov
inc
je
push
fdivr
scas
jmp
dec
aas
jp
jmp
lahf
adc
push
xchg
jg
test
imul
dec
add
or
ret
or
and
neg
mov
fadd
les
dec
or
add
cmp
js
mov
mov
popa
in
cmp
push
inc
push
dec
dec
xor
cmp
push
mov
mov
mov
mov
adc
mov
fst
popa
jo
or
loop
inc
or
add
test
or
mov
pusha
push
shl
jne
and
sbb
pop
dec
sbb
enter
ja
(bad)
js
scas
xchg
add
retf
(bad)
and
cdq
adc
sub
xchg
mov
xor
inc
rol
es
call
and
sbb
pop
push
stos
or
inc
and
outs
or
ss
mov
(bad)
cld
push
jge
mov
add
pop
in
fcomp
retf
add
mov
or
nop
mov
add
sub
sub
push
and
repz
push
outs
mov
loopne
(bad)
sub
div
jb
jo
and
loope
dec
not
push
jp
test
or
dec
or
jg
jne
sub
add
cdq
add
xor
jns
adc
hlt
jnp
test
test
sbb
sbb
addr16
jne
shr
test
jmp
jb
leave
cmp
test
jl
arpl
and
gs
mov
retf
adc
imul
mov
pop
rcr
adc
loopne
inc
pop
popa
inc
xchg
mov
mov
lahf
in
pop
pop
push
lock
adc
mov
adc
bound
cld
adc
cmp
dec
sub
mov
dec
or
popa
fcomp
lahf
cmp
or
gs
adc
sub
push
pop
loope
mov
push
pop
mov
dec
test
add
mov
push
cld
and
xchg
mov
retf
xchg
push
das
or
ja
xor
js
icebp
test
sbb
mov
test
sub
adc
movs
mov
add
fs
sti
shr
rcr
mov
mov
cmps
pop
xchg
mov
mov
xchg
lea
inc
sbb
xchg
pop
or
not
lahf
cmp
inc
jl
and
jns
clc
dec
jmp
mov
mov
fld
pop
mov
xchg
sub
pop
push
mov
adc
dec
pop
ret
sub
pop
add
push
stos
je
inc
add
(bad)
and
lock
add
pop
or
pop
js
sub
cmp
mov
xor
cmp
xor
jae
icebp
retf
mov
xchg
ss
outs
sbb
push
xchg
dec
xchg
hlt
add
test
(bad)
mov
nop
fcomp
nop
pop
pop
jg
int3
sbb
jae
rol
jnp
test
pop
mov
jbe
cmp
adc
rol
es
jo
sub
xchg
test
inc
cmp
imul
in
or
in
test
jo
sub
fcom
add
add
lea
rcl
dec
pop
int3
mov
xor
push
rol
or
xor
loopne
test
push
inc
push
adc
push
inc
fsub
shr
inc
adc
xchg
lahf
and
inc
popf
and
xor
aaa
add
rol
cmp
pusha
in
xor
je
add
das
mov
add
sub
lods
movs
rol
inc
inc
dec
sbb
pop
inc
xchg
inc
test
ror
mov
or
mov
inc
adc
sbb
imul
scas
addr16
(bad)
push
mov
inc
add
pop
ins
adc
xchg
test
jle
or
push
cmp
gs
mov
jne
xchg
inc
lods
nop
lods
or
sub
dec
jne
arpl
cld
lods
adc
adc
fs
popa
mov
push
push
sub
out
inc
sbb
in
add
add
mov
ins
arpl
inc
inc
mov
and
out
loope
jb
jo
pop
mov
lock
cld
cmp
add
in
pusha
int
mov
pusha
les
dec
dec
call
xchg
and
aaa
rol
pop
fcom
fwait
stos
lock
add
push
punpckldq
test
gs
mov
lock
mov
or
mov
adc
ins
movs
pop
lods
pop
nop
rcl
rol
mov
sub
or
add
mov
pusha
adc
or
add
xchg
sbb
mov
loope
cmps
arpl
and
pop
inc
sub
cmp
xor
add
xor
in
add
sbb
loopne
rol
xor
adc
add
fidiv
or
mov
cmp
dec
jmp
or
adc
jg
xchg
mov
enter
inc
add
shr
out
xor
loop
fadd
xor
lock
mov
(bad)
lods
or
nop
leave
(bad)
xchg
xor
or
pop
icebp
add
and
xlat
inc
add
call
repz
std
dec
pop
test
fs
cmp
push
enter
mov
cmp
test
sub
adc
fild
dec
ror
out
cmps
and
add
xchg
mov
and
add
add
jne
adc
inc
or
cmps
nop
push
add
sbb
inc
loopne
in
lock
les
jp
std
in
pop
cs
pop
in
in
push
dec
inc
mov
sub
lods
and
imul
fcmovnbe
push
pop
add
mov
mov
adc
adc
and
jmp
in
cmp
adc
stos
(bad)
pop
adc
jne
aam
push
les
xchg
and
aad
jp
test
scas
pusha
cmp
adc
pushf
rol
push
jmp
(bad)
or
push
push
inc
fstp
mov
add
and
jp
dec
sbb
cmp
jmp
jp
cmp
cmp
mov
xchg
xor
bound
and
sub
and
xchg
mov
pop
adc
sahf
mov
(bad)
lea
push
adc
jmp
mov
mov
pop
loope
or
sub
xor
sti
mov
or
add
pop
retf
fstp
xchg
jnp
loopne
inc
js
stos
por
jns
je
or
xchg
xor
add
mov
js
xchg
inc
push
or
inc
ins
mov
push
pop
adc
add
mov
pop
jl
jp
test
xchg
shr
out
pop
xchg
and
test
repz
loope
xchg
mov
pop
retf
or
pop
mov
push
add
mov
sub
sbb
mov
lods
lods
and
mov
xor
push
movs
cmp
xor
aam
adc
fwait
jo
call
and
ret
pop
mov
mov
outs
ins
aas
test
or
jg
fbstp
repnz
scas
sbb
out
jnp
test
mov
popf
push
xchg
bound
or
sub
(bad)
lar
movlps
cmc
std
inc
in
cli
mov
add
lahf
cmp
pop
shr
loopne
adc
pop
and
cdq
scas
stos
adc
out
xchg
pop
scas
push
leave
leave
inc
add
inc
sar
xor
dec
cmp
mov
hlt
pop
pop
ror
push
push
into
xor
add
mov
loopne
das
addr16
clc
xchg
ror
fnstenv
rcr
inc
mov
in
cmovo
or
lahf
mov
int3
dec
sub
pop
lods
test
push
adc
or
movs
cwde
pop
ins
gs
add
adc
xchg
ret
xchg
mov
xor
das
fdivr
or
sub
leave
add
jno
mov
push
xor
xchg
jne
test
loopne
sub
es
cmp
ins
test
retf
xlat
test
sub
je
mov
sbb
jmp
jne
push
jle
jae
ja
ror
pop
xchg
leave
les
xor
mov
add
and
mov
loope
movs
sub
or
sub
jmp
popa
shl
nop
cdq
add
add
inc
test
daa
int
adc
psubb
cli
aad
inc
or
or
mov
add
test
sub
das
add
dec
push
or
jmp
(bad)
add
cmp
and
in
les
mov
xor
jne
scas
add
inc
inc
xor
shl
xchg
ds
cwde
xchg
in
adc
pop
dec
sbb
add
sbb
ficom
jge
add
(bad)
jecxz
inc
rcl
mov
lea
adc
sub
daa
inc
std
dec
and
mov
pop
xor
addr16
addr16
movs
pop
xor
(bad)
nop
jmp
sub
add
or
lahf
loope
lock
jne
sub
dec
add
and
cwde
(bad)
xchg
push
push
add
sbb
jnp
ret
jmp
les
shl
or
inc
inc
loope
fsub
or
push
xor
mov
push
jo
call
sbb
jecxz
fmul
adc
dec
sub
sub
push
xchg
push
aad
inc
inc
mov
mov
les
(bad)
adc
xor
add
xchg
jl
bound
cmp
aas
je
sbb
or
outs
pop
mov
movs
cmp
imul
bound
or
sub
sub
clc
aas
and
clc
cmps
shr
std
xor
ret
popf
mov
jmp
out
push
call
dec
rcr
or
cmp
movzx
popf
xchg
and
pop
cwde
mov
mov
in
and
xchg
mov
test
add
test
inc
or
inc
ret
or
data16
pop
mov
xchg
xchg
nop
add
dec
es
sub
jg
or
pop
fwait
popa
adc
aas
das
in
enter
or
and
in
add
add
and
das
clc
add
mov
inc
subsd
int
xor
fldz
aaa
mov
add
push
and
inc
pop
inc
mov
data16
les
clc
mov
sbb
leave
ret
aaa
adc
add
jecxz
cmp
pop
pop
je
in
das
clc
mov
rcr
sbb
jl
adc
ins
push
mov
jmp
push
(bad)
mov
fsubrp
and
outs
xor
push
xchg
mov
xor
xchg
adc
popf
leave
nop
sbb
into
rcl
cmp
fsubr
mov
adc
ret
mov
or
pop
leave
ret
jg
mov
adc
push
fwait
test
inc
and
and
je
sub
add
in
inc
fistp
scas
popa
adc
mov
js
mov
sbb
sub
fisttp
fbstp
dec
dec
clc
pop
in
pop
push
or
call
jns
in
add
add
int3
and
imul
imul
xchg
jmp
cmps
mov
popa
fs
repnz
or
(bad)
das
or
push
mov
mov
fnstsw
pushf
icebp
ins
shl
cmp
(bad)
in
add
xchg
inc
jnp
sbb
xor
popa
leave
lahf
add
sbb
sti
push
jmp
enter
and
add
push
dec
js
in
shr
pop
push
lock
ins
imul
add
sub
cs
ret
movs
sbb
add
shr
or
push
or
pop
sub
int3
je
movs
and
dec
or
inc
or
nop
imul
add
mov
aaa
jg
out
xchg
jo
in
or
xchg
mov
shr
scas
retf
push
daa
xchg
push
or
or
push
jp
and
ss
cmp
dec
inc
jmp
pusha
sbb
in
and
sub
pop
and
les
ror
lods
rcr
mov
dec
shl
dec
retf
repz
js
inc
ja
pusha
test
push
hlt
jns
push
dec
js
retf
mov
jns
movs
add
cmp
adc
jl
popa
mov
add
jnp
fcomp
sub
pop
cmp
adc
loopne
gs
gs
lods
or
sub
fldenv
or
imul
xor
add
ret
cdq
push
cmp
jnp
daa
shr
test
or
ja
sbb
je
adc
sub
add
push
or
ins
push
xchg
or
mov
mov
movs
loope
dec
sub
shr
in
push
or
xchg
cmp
adc
test
mov
sub
gs
pop
or
clc
test
rcl
push
outs
cmp
jbe
dec
rcl
(bad)
popa
add
(bad)
or
push
adc
dec
push
mov
sub
out
aaa
xor
cmc
aam
mov
and
sbb
bound
test
xor
add
hlt
loop
cwde
adc
mov
mov
sbb
jbe
add
adc
inc
add
and
push
mov
js
adc
xchg
cwde
cmovle
mov
adc
jp
add
sbb
adc
mov
pop
dec
xchg
add
cmp
inc
cld
adc
pop
add
daa
jmp
pusha
adc
cwde
shl
inc
cmp
nop
xchg
push
or
mov
xor
cmp
inc
mov
push
and
mov
ret
lds
cmps
shr
ret
jo
lods
rcl
test
add
push
daa
add
in
das
cld
sub
mov
cmp
sbb
xchg
xchg
sub
call
mov
add
fdiv
add
fwait
jbe
mov
sbb
xchg
and
fldenv
add
push
popa
or
aaa
mov
nop
shl
cmp
test
arpl
mov
adc
xchg
test
sub
hlt
and
rcl
push
loopne
mov
push
sbb
retf
mov
cmp
mov
xor
(bad)
push
in
push
dec
and
fld
mov
push
frstor
icebp
add
adc
(bad)
or
jns
push
pop
fwait
push
mov
xchg
stos
(bad)
cdq
sbb
mov
dec
mov
push
ret
sub
sbb
imul
or
pusha
in
and
clc
mov
mov
cmp
mov
mov
sbb
inc
adc
shl
pop
lods
jmp
or
push
js
mov
mov
pusha
aas
shl
xor
pop
mov
fstp
les
mov
cmp
mov
mov
ret
push
xchg
test
in
mov
and
or
adc
or
xor
push
cmps
and
add
pop
add
sbb
(bad)
xor
xor
sub
pop
shl
jp
imul
sub
mov
xchg
std
mov
mov
sbb
je
(bad)
jo
and
pop
fwait
or
rol
or
dec
es
jg
and
lods
cs
dec
dec
adc
stos
sub
inc
bound
xchg
inc
sub
rol
pop
mov
mov
or
mov
sub
scas
pop
push
pop
add
add
xor
sbb
jno
mov
clc
mov
les
or
inc
push
sub
sti
jge
xchg
adc
dec
js
clc
out
push
dec
xchg
jp
(bad)
add
sbb
or
lea
push
outs
jmp
sub
clc
popa
ins
sbb
sub
and
sub
movs
adc
mov
sub
aam
popa
xor
mov
xchg
fs
das
jns
cmp
jne
jmp
jmp
hlt
add
adc
and
inc
shr
jmp
push
cmp
adc
or
les
dec
mov
ror
jmp
sahf
fild
popa
shl
loope
shr
in
push
jge
xor
daa
and
leave
das
leave
outs
or
dec
loopne
cwde
js
stc
or
jmp
mov
xchg
xchg
arpl
xor
push
sar
cmp
outs
mov
mov
ins
sub
cmp
mov
add
je
push
mov
inc
sbb
aam
jnp
rol
shl
ret
xchg
lock
add
add
xor
in
xchg
js
inc
aaa
dec
add
pop
leave
mov
lahf
jg
mov
inc
lea
inc
test
or
jg
mov
add
sbb
inc
sub
fadd
mov
rcr
push
lahf
pop
mov
loope
scas
jmp
sbb
js
pusha
xlat
sar
jne
shr
jmp
xchg
retf
(bad)
mov
jmp
out
pop
mov
adc
aas
mov
push
je
addr16
adc
cmp
mov
mov
xchg
add
inc
popf
or
cld
push
mov
sub
or
and
fistp
add
loop
retf
ror
xlat
or
jae
add
das
ret
rcr
popf
call
test
aas
lahf
ror
dec
adc
adc
or
pop
sub
popf
mov
mov
sub
mov
or
sbb
xchg
sub
popa
mov
iret
vsubps
adc
lds
adc
test
sub
or
and
jge
fs
mov
inc
sbb
sub
retf
sub
xchg
jno
in
pcmpeqw
iret
sbb
push
or
or
movs
inc
ins
movs
das
inc
mov
imul
and
adc
(bad)
fist
ret
ins
lds
mov
dec
sub
clc
adc
call
pop
sbb
sbb
pop
pop
jnp
test
sub
inc
push
shl
or
mov
pop
pop
dec
(bad)
leave
jg
pusha
adc
cmp
add
mov
pop
outs
push
mov
call
test
rcl
push
cmp
adc
and
call
aaa
or
adc
mov
mov
fstp
sbb
mov
or
enter
lea
enter
(bad)
or
mov
shl
sar
popa
mov
jae
xchg
in
dec
mov
enter
push
(bad)
mov
or
dec
and
loope
sar
and
add
je
popa
aaa
lea
mov
shl
rol
push
or
rol
icebp
inc
popa
mov
add
jmp
cmp
xlat
nop
and
fsub
xor
sub
add
push
pop
ret
mov
bound
push
int
inc
aas
retf
rcr
add
mov
add
aad
mov
cmp
mov
lods
pop
sub
xor
sti
add
and
iret
shr
je
sbb
popf
shl
push
mov
mov
jnp
test
push
adc
and
mov
mov
aam
and
jmp
mov
add
test
sub
or
icebp
xor
mov
ffreep
fs
ins
test
ror
and
jb
fs
mov
sbb
loopne
jmp
sbb
xor
fdivr
popa
mov
add
adc
or
pop
or
xor
rol
sbb
xchg
fwait
int3
and
mov
mov
fwait
add
inc
and
xchg
jno
jne
mov
add
and
inc
add
js
jmp
mov
pushf
sbb
push
rcl
cmp
mov
(bad)
mov
push
or
je
adc
and
mov
xor
sub
lock
xchg
gs
jmp
ret
or
inc
je
retf
mov
dec
push
mov
push
jmp
popf
popa
adc
xchg
das
dec
adc
fidivr
imul
jmp
into
lods
push
cdq
jge
mov
push
lods
in
enter
aam
push
adc
adc
sbb
adc
or
xchg
outs
add
inc
add
push
pop
movsx
pusha
inc
clc
xchg
nop
push
pop
push
loopne
outs
dec
push
add
(bad)
int
add
mov
and
fstp
jl
and
ja
jp
push
jg
push
mov
sub
pusha
inc
mov
les
mov
or
pop
jnp
or
icebp
test
int
adc
dec
push
xlat
mov
sbb
or
and
jnp
dec
or
dec
movs
movs
and
mov
dec
cmps
nop
pop
dec
cmp
push
dec
test
add
or
inc
and
push
sbb
xor
ror
or
mov
add
rol
inc
push
mov
cmp
dec
inc
xor
and
mov
fimul
inc
and
in
adc
add
es
pop
lea
cdq
inc
call
movs
in
adc
cmp
test
outs
or
xchg
jne
dec
shl
sbb
sti
jmp
jmp
mov
mov
dec
outs
add
fstp
inc
sbb
mov
sbb
xor
dec
jmp
ror
andnps
adc
pop
dec
adc
add
pop
or
sbb
sbb
sub
add
movs
repnz
cwde
cwde
xor
push
bound
loope
ret
mov
and
push
leave
xchg
mov
enter
loopne
gs
adc
pushf
shl
sub
dec
or
or
xchg
lock
push
xchg
dec
adc
sbb
xchg
push
or
push
nop
pusha
sbb
or
repnz
call
adc
arpl
or
adc
mov
push
or
sub
xor
icebp
dec
shl
adc
sbb
mov
fcmovnb
dec
cmps
or
inc
xchg
test
movs
test
and
push
mov
or
add
mov
adc
mov
xlat
mov
add
add
push
add
push
xchg
or
cmp
or
dec
les
xchg
xchg
xchg
ret
xor
rcl
mov
adc
push
add
or
dec
or
les
or
or
push
icebp
push
inc
inc
mov
sbb
sbb
adc
scas
rcl
xchg
adc
add
xor
xchg
fiadd
mov
dec
jmp
adc
xor
lahf
mov
shr
and
out
(bad)
or
jmp
adc
dec
repz
mov
imul
inc
lock
stos
adc
mov
push
and
sub
push
retf
enter
inc
je
cmp
shl
add
adc
rcr
bound
imul
pop
shl
jo
xor
or
xor
mov
add
or
or
sbb
mov
js
xlat
loopne
sub
or
inc
es
add
and
in
sbb
push
mov
sbb
fcom
mov
add
push
sub
jl
and
and
mov
adc
nop
mov
adc
rcl
mov
inc
add
call
cmp
add
and
bound
or
push
mov
fs
test
adc
test
mov
jl
sbb
pop
fcom
xchg
cmp
push
test
adc
xchg
and
mov
jecxz
mov
adc
sbb
mov
(bad)
or
add
iret
dec
arpl
test
sbb
push
loopne
add
xchg
jmp
ffreep
add
out
and
sbb
xchg
or
ror
out
fwait
rcr
fadd
repz
xor
xor
mov
into
ret
aaa
faddp
test
addr16
retf
popa
int3
ins
mov
mov
mov
shl
fidivr
fcmovnb
mov
sahf
pop
mov
add
(bad)
cmp
add
add
pop
add
jg
ja
add
or
adc
jbe
mov
push
aas
xor
adc
add
adc
adc
or
or
hlt
dec
mov
movs
mov
adc
or
popf
cmps
add
add
jmp
pop
ret
inc
das
and
stc
push
mov
iret
jno
pop
dec
(bad)
jge
cmp
jae
mov
test
ret
test
jge
dec
jne
push
mov
push
or
jns
sub
pop
pop
popa
and
xor
cmp
(bad)
mov
push
dec
pop
fadd
push
or
int
xchg
inc
jnp
inc
add
movs
mov
jbe
icebp
cld
mov
add
pop
cmps
lods
cmc
adc
enter
mov
push
test
ja
test
inc
popa
lahf
fmul
ror
sti
shl
xor
push
xor
xor
int3
pop
adc
or
pop
aad
ss
adc
enter
cmp
lea
mov
xchg
mov
mov
les
add
out
mov
push
add
dec
pop
ror
je
sub
adc
push
aam
xchg
mov
popf
xor
fs
loop
ret
or
data16
(bad)
out
ficom
loopne
push
fimul
adc
sahf
inc
or
sbb
add
fiadd
inc
loopne
loop
dec
imul
loopne
dec
cmp
push
rcl
inc
sub
inc
inc
xchg
fmul
fstp
pop
mov
push
sbb
cdq
cmp
movs
add
jmp
out
adc
aam
mov
cmps
sub
cmp
(bad)
or
pop
mov
fdiv
es
fsubr
jae
push
sbb
jg
test
dec
fsubr
inc
xchg
xchg
push
xlat
mov
push
shl
add
push
jmp
aam
inc
inc
dec
(bad)
add
dec
enter
add
sub
sub
inc
inc
pushf
lods
xor
cld
and
daa
rcl
bound
xchg
push
push
adc
xchg
dec
xor
push
cmp
cmp
cmps
add
push
cmp
(bad)
sbb
jmp
or
add
dec
add
push
nop
(bad)
mov
inc
cmp
adc
out
lea
pop
fs
test
popa
inc
out
add
dec
inc
push
ficom
shl
or
adc
jmp
mov
int
repnz
dec
push
clc
inc
movs
cmp
rcl
dec
aad
xchg
jl
(bad)
inc
lods
cmp
mov
movs
xlat
mov
test
pop
sahf
dec
pop
push
push
(bad)
das
sbb
dec
and
adc
je
aas
inc
inc
aas
push
lahf
dec
arpl
inc
ror
pop
lock
and
jg
cmp
or
or
sti
mov
pop
outs
out
pop
clc
add
sub
cmp
dec
inc
push
loopne
(bad)
(bad)
inc
push
mov
jg
mov
add
ins
dec
test
sub
sub
(bad)
add
xchg
sub
(bad)
lock
mov
repnz
sub
xchg
xlat
add
(bad)
aad
inc
xchg
or
sbb
movs
mov
aam
mov
lods
out
lahf
adc
scas
sti
rcr
or
lods
in
adc
leave
fiadd
inc
sahf
daa
jne
or
jle
xor
nop
pop
pop
hlt
es
cmp
adc
dec
cmps
xchg
hlt
das
mov
in
mov
mov
or
nop
test
imul
call
call
inc
inc
or
adc
pop
push
cmps
and
inc
push
shl
test
adc
push
arpl
repnz
(bad)
popa
ret
test
or
and
add
outs
les
or
cmp
icebp
pop
iret
pop
cmp
add
inc
idiv
and
inc
mov
fwait
or
(bad)
xchg
add
add
or
adc
pop
push
and
or
or
ins
jae
sahf
out
fwait
mov
aam
pop
sbb
mov
xchg
xor
adc
outs
push
popa
push
popa
xchg
lods
push
xor
bound
jne
mov
jmp
sub
bnd
add
or
shr
hlt
(bad)
push
imul
sbb
xor
and
clc
sub
push
adc
push
adc
adc
loopne
dec
or
jns
push
mov
das
fucomp
push
push
jnp
adc
icebp
or
dec
sbb
nop
call
(bad)
fcomp
pop
and
jae
xchg
pop
hlt
xlat
cmps
mov
add
jl
and
dec
aam
cmp
outs
inc
xchg
jbe
and
and
jg
mov
or
int
mov
mov
push
test
cmp
push
ds
pusha
inc
add
dec
cmp
int3
dec
lahf
pop
pop
fwait
lea
jmp
mov
push
sbb
shl
hlt
add
(bad)
push
dec
xchg
lds
push
sub
add
loop
imul
mov
mov
scas
aas
dec
add
aad
dec
push
and
aas
xchg
add
or
add
in
movs
shl
popf
cs
dec
add
and
push
gs
and
push
ret
sbb
mov
inc
push
mov
push
lds
dec
push
jp
or
cmp
add
fistp
pop
add
add
dec
push
int
mov
jmp
add
lods
stos
cmp
mov
sub
fisub
mov
jge
jno
and
pop
jge
in
mov
add
retf
dec
add
xchg
pop
and
xor
scas
repz
int
add
popf
adc
dec
or
sbb
mov
pusha
ins
or
int
push
shl
sub
add
shr
xor
xchg
(bad)
add
mov
sbb
xchg
xchg
inc
pop
(bad)
xchg
lock
add
mov
mov
cmps
push
jg
int
jno
or
(bad)
and
or
add
cmp
or
add
punpcklwd
add
xchg
lock
repnz
pop
pop
and
lods
dec
dec
jo
or
ins
jl
fcomp
add
dec
bound
lds
jl
rol
push
ror
sbb
or
sbb
inc
and
xchg
or
cli
dec
lock
inc
sub
aaa
imul
sub
inc
sbb
int3
add
adc
in
jg
pop
xchg
test
mov
popa
movs
inc
(bad)
fild
inc
gs
xchg
js
jne
stos
rcpps
fs
aam
cmovl
jecxz
fistp
or
fistp
int3
adc
jg
xor
aas
xchg
inc
sbb
and
(bad)
icebp
les
call
jno
leave
or
adc
sbb
jbe
lds
add
xchg
fdiv
sbb
add
enter
clc
sub
aam
fmul
fadd
and
in
enter
sbb
mov
and
or
cmps
dec
stos
cmps
rcr
ret
jne
pop
or
mov
push
adc
stos
mov
hlt
cmp
pop
push
out
mov
stos
adc
inc
daa
cwde
or
or
dec
adc
and
push
stos
mov
sub
add
call
mov
inc
das
fild
cs
sub
aam
dec
dec
or
sbb
call
ficom
xchg
jns
ror
mov
and
pushf
inc
ss
inc
rcl
and
adc
pop
or
sbb
call
adc
mov
fst
adc
mov
and
jl
(bad)
call
sub
enter
scas
or
add
das
cmc
cmp
imul
mov
jae
ret
jmp
mov
in
pop
inc
popf
stos
loopne
loopne
test
or
mov
ficomp
add
or
xor
pop
adc
pop
enter
pusha
adc
add
inc
lea
or
cs
jne
push
or
pop
sbb
lahf
inc
mov
loop
xchg
sub
in
ins
lahf
add
stos
in
jmp
sub
add
aam
fiadd
sbb
cmc
pop
ret
or
inc
inc
sub
xor
dec
out
in
shl
shl
sar
dec
jne
jge
stc
or
enter
ud2
mov
call
mov
rcl
into
adc
mov
test
or
mov
sbb
or
add
lods
pop
ss
out
push
xchg
sahf
popa
test
rcl
and
test
arpl
or
mov
test
jb
ja
xchg
pushf
dec
or
movs
push
pusha
mov
dec
mov
das
xor
or
add
cdq
xor
dec
dec
adc
in
shr
cmp
push
add
ins
jbe
jmp
daa
call
mov
fld
ret
out
mov
or
ret
inc
jg
adc
mov
pusha
or
mov
dec
sub
gs
or
retf
push
mov
xor
call
sbb
jg
xchg
sub
push
cmp
fmul
pop
fadd
inc
repnz
test
(bad)
fcom
sub
push
fisub
mov
mov
inc
(bad)
sub
mov
loop
xlat
pop
in
inc
sbb
add
dec
icebp
pop
sub
cdq
jg
inc
movs
cdq
cli
movsx
jnp
test
xor
cmova
adc
aaa
add
aad
fiadd
sbb
push
jno
cmp
add
sbb
jecxz
ror
mov
and
mov
cs
xor
(bad)
js
add
sub
xor
push
dec
jp
xchg
or
daa
add
sub
shr
rol
add
pop
sub
retf
dec
pop
dec
push
dec
into
push
push
or
jns
shl
mov
inc
sub
test
sbb
gs
cmp
les
inc
js
inc
pop
retf
add
pop
xor
into
imul
addr16
or
in
retf
sbb
adc
inc
lods
xchg
dec
sbb
arpl
outs
push
aas
aad
or
int3
sub
add
cmp
sub
loope
mov
jge
jb
push
push
sub
lds
pop
or
add
retf
sbb
addr16
and
add
mov
adc
mov
js
enter
jae
mov
daa
xchg
ror
(bad)
sub
sub
jnp
(bad)
jg
pop
repz
and
adc
add
add
pop
push
cmp
(bad)
fsub
push
adc
dec
push
and
bound
test
jno
pop
inc
mov
fadd
cdq
inc
jmp
push
leave
in
inc
or
dec
or
adc
add
cmp
push
add
add
cwde
or
xchg
add
or
jns
mov
int3
pop
lahf
mov
lahf
inc
xchg
out
test
dec
or
adc
add
ror
add
call
add
adc
or
pop
sbb
and
cmp
inc
dec
adc
and
adc
or
test
loopne
cwde
xchg
call
jp
push
imul
call
cwde
pusha
jns
imul
(bad)
les
movs
mov
(bad)
int
hlt
out
sub
xchg
or
fisub
enter
aaa
dec
or
or
(bad)
ins
movs
sub
and
xor
mov
or
aad
and
daa
add
dec
sbb
fnsave
sub
loopne
add
sar
je
outs
dec
adc
jmp
jno
repnz
mov
fwait
pminsw
pusha
fisttp
inc
outs
retf
gs
sar
and
add
call
cmp
retf
scas
add
mov
jnp
pop
pop
pop
add
add
push
dec
push
lahf
mov
lock
mov
and
or
push
xchg
add
stos
mov
add
push
rol
or
inc
xchg
lahf
mov
adc
jecxz
cli
movzx
push
icebp
and
sub
or
push
mov
aas
add
cmp
cli
or
mov
or
aas
dec
cmp
xor
fs
push
mov
xor
xor
fistp
mov
adc
iret
test
or
leave
je
ja
fcom
ret
popa
mov
sbb
adc
daa
shl
retf
add
sbb
add
aaa
js
popa
cld
test
xor
inc
jne
and
dec
ror
ret
ins
jne
pop
pop
pop
in
outs
add
mov
ret
je
retf
jecxz
dec
push
adc
cmp
xor
aam
xchg
pop
xor
les
fwait
outs
xor
cld
cmp
retf
aam
fdivr
xchg
add
cs
push
or
fstp
xor
cmc
pop
repz
xor
xor
dec
sbb
mov
add
mov
cmp
pop
movsx
and
arpl
xor
cmp
add
adc
fiadd
push
mov
cmc
dec
adc
cdq
nop
and
push
add
jg
mov
mov
xchg
dec
cmps
xor
xor
pop
cmp
push
sub
call
push
imul
(bad)
neg
popa
addr16
ins
fcom
or
push
add
and
mov
add
jmp
nop
mov
sbb
add
xor
lahf
or
imul
cmp
inc
sub
ins
adc
inc
adc
rol
cmc
lods
aas
xor
lahf
je
lock
cmp
into
add
xchg
lods
push
lahf
in
dec
and
movs
add
and
xlat
adc
nop
add
in
adc
cmp
lock
clc
sub
add
push
push
popa
mov
and
and
mov
add
push
pop
into
and
xor
add
or
mov
icebp
cld
jns
inc
pop
add
lods
sub
inc
jb
cld
add
adc
adc
sti
ss
test
inc
xchg
adc
jle
inc
ds
test
sub
retf
mov
movs
dec
mov
daa
adc
setb
add
xor
add
dec
add
and
aaa
fs
and
jmp
pop
jnp
dec
test
or
cmps
add
inc
adc
push
and
or
and
add
jo
rol
push
push
push
xor
div
adc
push
cwde
jne
sbb
or
dec
cmp
mov
mov
sbb
icebp
dec
pop
xor
fnstenv
test
and
pop
push
rol
pop
cli
sub
push
(bad)
cmp
sahf
xor
adc
and
xor
adc
cwde
cmp
lock
sbb
ror
cmp
adc
dec
out
mov
dec
mov
ret
adc
jecxz
adc
inc
mov
cmp
dec
add
and
and
jo
pop
and
mov
and
jno
push
iret
xchg
and
add
ret
push
inc
mov
les
inc
hlt
xlat
add
pop
xor
pop
shl
imul
daa
movs
push
and
mov
and
inc
imul
push
shl
add
inc
rol
leave
outs
push
ret
cmp
push
push
sbb
js
pop
inc
movs
in
inc
int3
dec
lahf
fsub
add
pushf
cmc
in
nop
nop
push
mov
jge
retf
or
rcl
shl
push
mov
add
xchg
das
adc
scas
xchg
xor
adc
jo
pop
stos
inc
dec
adc
adc
inc
or
jno
mov
sub
dec
bound
or
iret
or
push
or
mov
cmp
push
mov
or
aas
test
mov
jb
lock
jbe
push
inc
xchg
lahf
in
or
cs
in
aam
rcl
sub
mov
inc
cmp
or
pop
sub
jo
int
and
leave
daa
inc
jl
pop
punpckhwd
enter
and
test
rcr
or
sub
push
and
dec
adc
or
push
and
data16
test
rep
add
ja
xchg
cwde
js
sahf
std
mov
inc
int3
sbb
hlt
mov
xchg
les
add
and
push
push
push
mov
or
pusha
sbb
xor
clc
cwde
leave
pop
dec
pop
jb
ja
dec
mov
or
push
jns
inc
or
push
enter
dec
sbb
in
cdq
jmp
sub
ret
fisub
aaa
mov
push
and
xchg
outs
inc
popa
adc
sub
inc
add
hlt
sub
nop
lock
movs
and
jmp
adc
or
sub
invlpg
add
dec
mov
ss
jg
rcr
inc
popf
sub
nop
sub
in
enter
int3
and
lds
shr
pushf
add
pop
mov
cmp
aaa
cld
movsx
test
pop
add
mov
icebp
or
xchg
sahf
rol
adc
mov
push
xor
adc
xor
adc
addr16
les
pop
addr16
test
clc
adc
sar
data16
push
aas
xchg
adc
pop
or
push
inc
and
dec
mov
jg
add
cmp
adc
sub
fisttp
popa
adc
cmp
mov
cmp
adc
les
mov
jg
sub
add
xchg
enter
add
jg
cmp
inc
les
cmp
cmps
adc
adc
or
icebp
or
or
lock
cmps
inc
iret
ret
sub
ficomp
or
sbb
dec
fldln2
sub
mov
xchg
rcr
sub
adc
push
sub
nop
and
mov
jbe
add
jne
arpl
push
out
xor
lods
sbb
and
push
lahf
add
in
lock
mov
inc
jl
pop
jle
adc
jl
xor
cmp
xor
add
repnz
in
sub
mov
push
inc
stos
add
fwait
or
outs
adc
cs
outs
adc
dec
dec
adc
and
fistp
adc
or
mov
stos
loope
pop
sbb
or
shl
xchg
adc
xor
inc
pop
shl
and
inc
add
and
and
push
mov
mov
and
and
sub
adc
ss
push
shl
fsub
mov
or
adc
adc
add
and
and
je
fist
leave
scas
push
inc
cmp
leave
std
push
add
add
add
push
inc
adc
and
push
pop
push
retf
sbb
cwde
xor
sub
add
or
sbb
addr16
jl
sub
mov
(bad)
xchg
adc
cld
wbinvd
stos
jmp
push
adc
fisttp
fcom
aas
pop
mov
xor
mov
mov
xor
adc
xchg
sub
lock
xlat
pop
xor
or
adc
and
and
pop
dec
dec
cmp
or
push
push
lods
xor
inc
and
pop
add
stos
xchg
cli
(bad)
shl
fstp
xchg
js
or
test
ud2
or
pop
in
push
push
adc
rcl
xchg
out
mov
fist
sar
or
call
jb
cmp
pop
sub
pop
mov
and
jl
or
push
sbb
scas
and
mov
loopne
and
ret
jecxz
and
jmp
adc
add
sub
scas
imul
adc
adc
jg
mov
or
inc
in
arpl
add
rol
mov
mov
xchg
cmp
xchg
add
ret
fwait
mov
fs
aam
pop
xor
pop
or
add
and
adc
pxor
pop
add
and
(bad)
mov
pop
jo
sub
imul
rol
push
mov
adc
mov
and
in
das
cmp
ins
mov
adc
xchg
ret
fisttp
int
cwde
les
or
mov
dec
icebp
paddsw
push
pop
xor
dec
loope
pop
femms
stc
clc
jb
sub
dec
iret
sub
sbb
mov
pop
inc
and
rol
inc
out
xor
adc
mov
je
cmp
neg
and
iret
mov
std
dec
jns
outs
popa
stos
std
icebp
dec
std
cmp
sub
or
lock
fisttp
test
xor
ret
je
xor
or
push
inc
adc
arpl
(bad)
call
lock
inc
inc
(bad)
(bad)
jmp
or
mov
ja
add
mov
dec
ror
and
or
lea
cmp
mov
add
mov
ins
add
adc
cmp
sbb
sub
in
sbb
mov
shr
adc
bound
in
ss
rol
jne
daa
loope
cmp
sbb
shl
and
mov
jp
out
scas
mov
repnz
mov
mov
into
sub
mov
mov
adc
or
jae
shrd
sar
ds
pop
and
sar
ret
adc
mov
fld
xor
add
das
or
mul
in
mov
or
and
add
inc
and
pop
ret
int3
aas
or
test
pop
jmp
xor
or
(bad)
adc
mov
push
mov
xor
dec
sbb
test
hlt
in
mov
pop
add
sbb
jns
push
jns
out
(bad)
or
jmp
std
jmp
cld
xchg
(bad)
or
adc
data16
mov
jle
mov
jmp
in
sub
sbb
loope
xor
div
adc
mov
ret
jo
cwde
rcl
in
adc
sbb
mov
pop
sar
sbb
in
aas
adc
pop
fdivr
xchg
push
or
sbb
jmp
add
adc
adc
push
movs
aam
fstp
sub
inc
pop
add
inc
push
mov
or
popa
out
and
sbb
mov
sar
mov
shr
add
shl
aad
inc
mov
add
push
or
mov
arpl
cmc
sar
add
dec
xor
ins
and
pop
int3
aas
int3
and
xchg
rcl
sar
jb
pop
add
fdivr
dec
enter
enter
sbb
arpl
ficomp
mov
xchg
and
add
dec
pop
loopne
test
(bad)
and
cdq
dec
test
jae
add
push
les
jmp
cmc
xor
inc
and
xor
sub
sub
jecxz
xlat
inc
cld
jnp
add
and
adc
(bad)
jne
shl
push
imul
pop
xor
ret
in
lahf
ret
xchg
mov
or
xchg
cmp
adc
mov
mov
mov
ror
jne
or
push
pop
in
push
dec
ja
loope
sar
js
xchg
fadd
iret
gs
bound
push
pop
data16
xor
jl
dec
call
js
adc
pusha
push
stos
inc
inc
dec
sub
xlat
pop
cmps
lock
rcr
push
mov
mov
mov
dec
or
mov
jl
je
fsubr
inc
jmp
shr
stos
ins
lock
in
unpckhps
adc
rcr
aam
aam
adc
and
sub
inc
pusha
push
add
pop
mov
nop
femms
and
push
and
lahf
pop
mov
pusha
sbb
pop
pop
ret
adc
adc
fistp
sub
mov
test
push
shr
enter
or
or
or
add
idiv
inc
mov
adc
sti
pop
inc
dec
add
sub
(bad)
imul
test
sbb
les
in
or
push
sar
in
mov
adc
and
push
aas
test
(bad)
push
nop
jg
mov
sbb
xor
jg
inc
add
cmps
rcl
imul
mov
add
and
daa
and
jno
mov
fmul
push
leave
mov
push
push
fmul
imul
sbb
sbb
das
nop
inc
sahf
cmp
icebp
sbb
sbb
add
xor
icebp
fadd
fs
neg
mov
retf
mov
mov
mov
adc
mov
xor
pop
enter
sahf
fcom
mov
or
xor
pop
aaa
icebp
jb
xor
call
ret
icebp
aam
cmc
retf
jmp
push
add
mov
xchg
adc
js
xchg
inc
pop
and
adc
shl
outs
movzx
arpl
push
out
movs
ds
test
adc
shl
or
rcl
push
lds
xchg
adc
push
fld
mov
inc
and
add
mov
lds
test
jmp
sub
xor
ret
mov
dec
pop
inc
bound
adc
pop
pop
sbb
or
dec
inc
jmp
push
xor
rol
add
ins
add
or
(bad)
fwait
mov
adc
daa
pop
mov
call
and
jg
and
test
ins
add
imul
xor
cmp
or
mov
test
sar
daa
popa
in
ret
outs
or
sar
std
les
xchg
loopne
fist
xor
or
pop
out
aam
cld
cmp
int
pop
mov
sbb
and
inc
or
ret
cwde
fisttp
aad
push
sub
mov
shl
mov
jns
adc
and
sub
in
push
adc
aad
jmp
nop
mov
ret
push
enter
push
adc
sub
jmp
test
fwait
xchg
mov
cmp
or
loope
pop
inc
and
loopne
ja
mov
movs
adc
adc
add
mov
imul
dec
inc
jecxz
ret
aam
jg
mov
mov
not
cwde
imul
pusha
mov
add
and
mov
xlat
adc
mov
add
adc
push
hlt
adc
or
or
push
push
addr16
(bad)
jmp
pop
jns
or
pushf
sub
jecxz
or
pushf
mov
xchg
int
pop
add
adc
movs
add
add
aad
retf
sub
cmp
arpl
sub
(bad)
dec
adc
pop
mov
gs
push
in
mov
loopne
stos
adc
in
xchg
(bad)
faddp
or
ficomp
(bad)
pop
add
cwde
std
cli
inc
add
add
jne
cwde
test
sub
pusha
call
es
or
dec
nop
pop
mov
or
add
mov
aam
aam
jecxz
adc
call
mov
stos
push
or
js
loopne
rcr
daa
dec
popf
dec
cmp
xchg
or
xchg
xor
jbe
or
(bad)
or
jo
push
fisttp
mov
mov
adc
mov
or
mov
adc
bound
loopne
pusha
add
and
fistp
adc
push
adc
or
(bad)
lock
sar
add
or
je
inc
mov
jge
or
inc
dec
adc
adc
fs
xchg
xor
jo
ret
xor
setae
inc
inc
push
or
int
add
inc
cdq
in
inc
add
cmp
je
push
mov
xor
push
adc
dec
sub
in
add
adc
dec
xor
jge
jg
mov
mov
adc
sbb
inc
and
dec
adc
cmp
int
test
adc
xlat
adc
sub
push
or
add
pop
inc
mov
pushf
mov
dec
mov
add
sub
or
add
dec
inc
mov
cmp
ret
(bad)
add
sub
mov
add
fwait
adc
add
push
jae
clc
push
and
in
jno
rcr
in
add
lock
push
push
push
leave
clc
cmp
shl
clc
push
mov
inc
mov
iret
sub
out
ret
xchg
(bad)
outs
pop
cmps
sbb
add
jb
out
mov
sub
ret
or
enter
pop
lahf
ror
push
sbb
mov
jp
sub
mov
movs
fdiv
aam
mov
add
and
cli
mov
dec
add
aas
mov
or
or
shr
test
int3
xor
and
jmp
pop
push
sbb
add
mov
(bad)
les
xor
and
jmp
pop
aaa
adc
fxch
push
mov
and
mov
and
(bad)
mov
(bad)
dec
mov
cmps
aad
jmp
in
fincstp
ins
pop
cmps
adc
mov
cwde
jmp
pop
push
inc
mov
or
ret
push
mov
sub
in
xchg
shr
out
xor
xchg
out
out
out
sub
in
test
and
and
xlat
inc
xor
adc
mov
lock
mov
aam
aaa
cld
mov
sub
mov
mov
mov
mov
jmp
ins
gs
test
jl
xchg
and
test
mov
loope
scas
inc
ret
or
sbb
mov
popf
mov
add
pop
in
adc
mov
mov
add
iret
adc
cmps
push
test
js
ret
mov
jmp
and
(bad)
inc
mov
mov
rcr
or
loopne
ror
loop
or
sbb
xchg
ret
aas
dec
cmps
inc
pop
jmp
hlt
push
push
push
ss
and
or
cmp
sbb
ins
fs
je
mov
in
cdq
fs
sbb
sbb
cs
outs
xchg
les
jg
icebp
stc
(bad)
xor
shr
inc
mov
xor
call
(bad)
jmp
ds
std
jbe
call
movs
out
shl
cmp
or
cmp
ret
dec
cld
push
jbe
dec
add
dec
mov
or
push
inc
push
fiadd
pop
pop
pop
sub
inc
and
das
and
cmp
add
sbb
cmp
adc
or
mov
or
pop
and
or
mov
lahf
fld
(bad)
fdiv
inc
mov
test
add
mov
xor
mov
ss
adc
rol
in
(bad)
push
push
cmp
cmp
pop
mov
fistp
retf
inc
bound
xchg
je
or
dec
mov
inc
and
inc
adc
add
pop
sub
push
ins
bound
mov
lock
pop
inc
inc
jmp
adc
mov
xor
xchg
lods
pop
mov
or
sbb
ja
mov
ja
jg
shl
mov
pop
cld
jbe
mov
xchg
mov
cli
popa
or
pop
jbe
sub
outs
mov
fs
push
jns
and
aas
test
push
rol
xor
adc
outs
(bad)
adc
add
add
icebp
ret
sar
lea
sbb
push
imul
mov
jb
inc
cmp
fstp
mul
xor
sub
push
push
hlt
push
imul
add
xlat
lea
jg
push
rol
sub
sar
lea
(bad)
cmc
(bad)
push
push
fld
cli
rdpmc
pop
push
stos
fisttp
inc
jge
adc
cmp
loope
sub
cs
pop
or
fsubr
shl
pop
rcr
ret
lock
xchg
or
sub
lods
loopne
shl
or
fndisi(8087
xor
xor
or
clc
inc
adc
cld
test
ret
paddusb
cmp
mov
mov
jg
and
mov
or
inc
sub
adc
pop
jbe
xor
or
xor
pop
cwde
mov
add
dec
dec
dec
mov
mov
movs
mov
inc
shl
add
xlat
mov
rcr
jmp
outs
in
je
xor
or
(bad)
and
pusha
push
sbb
sbb
fisttp
mov
mov
loope
dec
ficom
or
xchg
jo
pop
jmp
push
scas
sub
add
or
call
das
ds
xor
cdq
mov
or
jl
stos
fcom
pop
dec
iret
mov
jnp
sub
cmp
lea
push
std
stos
xor
cdq
xor
je
clc
or
or
dec
jg
push
int3
mov
cmp
popf
adc
lods
xor
and
or
mov
inc
test
jmp
bound
pop
add
cld
pop
mov
sub
mov
cmc
and
xchg
mov
imul
cmc
sbb
fst
in
and
fild
push
add
retf
push
or
and
ss
cmps
enter
or
lahf
mov
add
add
loope
rol
push
or
push
out
rol
add
or
fisttp
or
or
loope
popf
mov
inc
fnstsw
(bad)
jne
arpl
mov
dec
add
jae
mov
fidiv
push
rcl
push
dec
mov
gs
jecxz
popf
add
cmps
call
pop
mov
punpckhdq
and
push
xor
sub
push
add
(bad)
mov
add
pop
call
sub
and
std
add
mov
fdivr
aaa
pusha
cmp
sar
cmps
and
mov
movs
popa
or
les
fcomp
icebp
cmps
mov
lea
cdq
retf
jae
jo
sub
aaa
inc
pop
sub
cmp
or
cmp
adc
add
or
push
jmpw
jne
aaa
cmp
mov
mov
shl
xor
cdq
add
imul
and
cmps
outs
dec
jecxz
dec
sbb
jle
xchg
xchg
push
icebp
fcom
dec
add
xchg
mov
and
movs
or
and
and
push
adc
add
cmp
jmp
add
and
sbb
(bad)
fld
push
or
cmp
bound
shr
adc
stc
pop
inc
dec
int3
adc
inc
bound
sub
loopne
loopne
aad
outs
fbld
or
sub
sbb
inc
test
pop
add
loope
jmp
fucom
(bad)
inc
or
cmp
iret
xchg
cmp
mov
rcl
shr
int
add
or
push
xchg
or
fmul
dec
jg
push
(bad)
sbb
or
add
xchg
jmp
out
or
mov
mov
dec
imul
or
jmp
inc
inc
out
or
push
push
(bad)
jns
idiv
adc
mov
or
adc
xchg
(bad)
fild
or
loopne
sub
push
push
int3
or
sub
loopne
aaa
push
mov
enter
data16
pop
fsubr
outs
add
test
or
or
add
adc
xchg
lea
mov
jge
popa
je
or
(bad)
push
or
or
adc
jp
jmp
push
std
jno
mov
inc
push
push
aam
fcmovnb
add
imul
inc
dec
imul
in
(bad)
aad
push
aam
or
les
or
dec
sbb
cmp
mov
jo
pop
mov
cmp
pop
push
ja
and
or
add
in
loopne
dec
adc
lahf
inc
sbb
jp
or
add
loopne
loopne
jmp
sti
je
sub
popf
xor
xchg
adc
ficomp
mov
dec
cld
and
add
(bad)
mov
outs
loopne
ja
and
push
and
cmp
js
paddusb
sbb
test
ret
aaa
or
mov
stc
outs
fs
or
movs
jmp
mov
and
pop
mov
or
pop
adc
jmp
sub
sbb
(bad)
xor
inc
xchg
or
or
ds
or
repz
cmp
push
jge
and
std
mov
add
mov
pop
add
jg
popa
je
sub
lock
test
mov
add
xchg
adc
inc
inc
mov
fst
add
lahf
add
(bad)
int3
cmp
or
(bad)
sbb
call
fnstsw
push
movs
sbb
jmp
fs
or
pop
xchg
inc
or
loope
or
js
pop
cmp
mov
add
cwde
popa
popf
mov
push
popa
sbb
mov
pusha
dec
es
sbb
gs
adc
(bad)
mov
pop
(bad)
mov
lock
xchg
or
mov
mov
inc
sti
add
adc
loopne
sub
lahf
int3
pop
pop
fdiv
and
aas
inc
stos
inc
loopne
ja
adc
jne
or
mov
fisubr
or
adc
jne
sbb
inc
push
push
push
cwde
retf
jnp
cmp
pushf
or
fisubr
jmp
cmp
(bad)
mov
add
cmp
int3
test
cmp
mov
mov
inc
loopne
adc
sbb
add
je
repz
dec
cdq
clc
mov
or
mov
(bad)
xor
push
push
add
lds
xor
mov
xor
dec
or
add
aad
out
fsub
mov
mov
xchg
inc
inc
fld
sbb
jg
adc
cwde
pop
fwait
push
ret
stos
add
inc
aad
stos
push
or
add
cdq
inc
stos
mov
les
fist
add
or
sti
outs
sti
xchg
push
and
je
xchg
mov
sar
gs
adc
push
fbstp
scas
jge
scas
aad
fnstsw
pop
std
ins
mov
dec
ret
push
add
inc
pushf
jnp
loopne
dec
xor
mov
call
xchg
adc
sbb
add
popf
aam
or
push
mov
inc
xor
jmp
inc
ror
inc
xlat
fdivr
inc
sub
fisttp
inc
jecxz
jno
fist
shr
add
inc
xor
fstp
gs
add
mov
ins
call
or
call
rcr
movs
pop
add
shl
sar
int3
call
sahf
bnd
test
push
dec
inc
rol
mov
or
jmp
loopne
sub
wrmsr
dec
cmp
addr16
call
lods
add
dec
je
mov
dec
mov
and
lea
nop
mov
xchg
push
pop
js
js
mov
add
sub
inc
ret
and
pop
scas
loopne
je
dec
sub
dec
aam
mov
jmp
or
and
loopne
dec
outs
aad
add
mov
out
or
(bad)
(bad)
cmp
fist
aaa
xor
(bad)
fbstp
inc
or
jne
inc
and
std
sbb
add
sbb
rcl
fisttp
and
aas
cwde
pop
mov
lods
push
stos
int
adc
xor
inc
fisttp
ret
adc
iret
inc
xor
add
test
cwde
add
daa
push
push
pop
cmp
mov
jo
cmp
dec
or
(bad)
fxch
cmp
loopne
(bad)
pop
ja
fist
scas
shr
cmp
jl
cmp
dec
pop
or
xchg
jle
test
sub
and
std
loope
or
push
test
xchg
or
call
xchg
xchg
jo
test
jmp
fmul
inc
in
mov
in
mov
mov
adc
ret
inc
out
enter
or
lea
test
leave
int3
scas
(bad)
cdq
add
or
or
add
sbb
dec
adc
out
xchg
mov
xchg
sub
adc
daa
sub
retf
scas
jg
xor
ret
pop
sub
or
push
push
sahf
mov
cwde
pop
inc
jmp
mov
mov
pop
pop
push
lock
push
mov
jo
outs
xor
inc
xor
pop
adc
shr
dec
les
fsubr
jg
pop
add
sub
sbb
cdq
xlat
(bad)
dec
imul
pop
xlat
jge
nop
pop
xchg
pusha
fcomp
les
rcr
add
outs
jecxz
pop
pop
lods
js
fmul
adc
(bad)
shl
sbb
popf
cmp
jb
shl
xchg
inc
shr
or
fimul
jb
xor
pop
ins
fmul
ss
ret
mul
cmp
push
shr
add
jmp
out
push
and
sbb
nop
jecxz
aas
push
loope
push
mov
enter
adc
fist
jl
and
jne
adc
sahf
sbb
adc
sbb
addr16
outs
daa
bound
mov
or
out
adc
jnp
sahf
test
pop
inc
js
cmps
xchg
addr16
and
cmp
cmp
mov
sar
outs
lods
mov
lock
mov
in
sbb
xor
mov
mov
enter
test
fbstp
mov
dec
adc
rcl
or
cmps
test
aas
and
in
movs
(bad)
jle
or
jecxz
push
mov
jecxz
out
int
les
cmc
pop
out
pcmpeqb
ja
sub
jo
mov
xor
pop
ja
add
or
or
or
add
add
and
sub
ss
rcl
xchg
ret
pop
jmp
pop
mov
mov
and
push
ja
int3
inc
mov
cmps
xor
mov
les
aas
or
out
test
mov
or
shl
xchg
mov
pop
adc
jb
xlat
jno
mov
(bad)
shr
jns
iret
fcmove
loopne
pop
jb
das
loope
ja
(bad)
ror
addr16
retf
call
jnp
mov
xchg
test
imul
pop
dec
fcmovb
xchg
jg
push
mov
dec
add
adc
ret
adc
sti
fs
adc
mov
adc
scas
fild
cs
pop
ds
rcl
sar
and
int3
and
(bad)
sbb
mov
add
mov
enter
dec
(bad)
mov
xor
and
push
test
inc
add
or
jmp
mov
jp
pop
or
shr
sbb
push
mov
jmp
and
mov
das
lods
sub
push
adc
cmp
pop
dec
add
inc
xor
jge
jmp
(bad)
sub
(bad)
sub
icebp
jmp
add
and
icebp
mov
mov
pop
pop
push
popf
or
pop
xchg
adc
jg
mov
pop
in
add
ins
call
ror
bound
mov
loopne
and
push
pop
mov
jnp
push
add
jnp
mov
adc
mov
out
rcr
sub
and
lods
(bad)
fsubr
out
das
sub
les
(bad)
lods
loopne
pop
sub
(bad)
fiadd
daa
(bad)
(bad)
mov
lea
adc
cmp
mov
rcl
fild
mov
sbb
enter
inc
mov
test
mov
mov
add
push
in
add
or
cmp
test
adc
add
pop
dec
inc
xor
mov
sahf
and
sub
adc
cmp
mov
and
loopne
pop
pop
adc
pop
mov
mulps
xlat
push
pop
(bad)
adc
cmp
(bad)
mov
lods
xchg
jg
pushf
jg
cwde
inc
xor
push
push
or
adc
lea
stos
push
gs
pop
gs
loop
pop
push
mov
pop
sbb
push
ret
(bad)
aam
mov
outs
dec
mov
cdq
inc
sbb
mov
mov
add
adc
aaa
add
jns
ret
mov
add
sbb
(bad)
sub
push
jg
mov
and
ret
adc
fsubr
outs
sub
out
(bad)
sub
mov
jg
ss
jg
sub
or
sub
push
mov
fbld
xor
or
dec
push
mov
adc
xchg
inc
xchg
xchg
retf
ss
add
xchg
loopne
cmp
xchg
sub
xlat
cld
push
outs
adc
sbb
add
push
and
cmp
pop
add
jl
cmps
hlt
lea
pop
mov
mov
clc
cmps
cdq
mov
inc
std
sbb
sub
inc
push
add
sbb
sub
js
(bad)
cmc
shl
(bad)
and
or
mov
jecxz
push
adc
sub
pop
ret
adc
ror
mov
js
xor
adc
leave
js
frndint
sub
fcom
and
mov
test
popf
data16
addr16
fcmovnb
pop
add
mov
imul
mov
inc
ins
adc
adc
cs
fadd
jo
scas
and
dec
fadd
add
mov
cld
add
bound
je
push
pop
xchg
xor
pop
jb
mov
jg
out
pushf
xor
and
test
and
adc
cs
pop
push
or
sbb
mov
adc
ja
mov
or
and
movs
mov
jb
inc
ret
or
sub
sub
jbe
mov
lods
cmp
jb
mov
push
xchg
or
movs
or
jb
aas
inc
loopne
or
(bad)
jg
call
arpl
xlat
es
mov
je
cmps
or
enter
or
xor
push
add
aad
or
inc
xlat
movs
fs
xchg
mov
int
cmp
das
xchg
dec
or
je
inc
inc
mov
es
jo
xor
sbb
mov
out
dec
rol
or
xor
sbb
inc
mov
pop
rcl
adc
or
or
aaa
sti
or
shl
dec
ror
cmp
cmp
les
sub
sbb
daa
ja
add
xor
pop
std
push
xor
sub
jmp
jge
shl
sti
jno
aaa
add
sub
and
cmp
jg
xchg
dec
jbe
aam
add
cmp
in
jl
cmp
out
movs
xchg
(bad)
jge
or
push
sti
xchg
dec
sbb
daa
pop
xchg
inc
ins
fld
jb
dec
sbb
or
je
aad
mov
mov
push
ds
mov
retf
cmp
test
clc
in
test
sar
sub
dec
and
add
push
push
arpl
sub
daa
stc
ror
mov
movs
push
sbb
or
xchg
ja
and
ins
std
mov
add
aaa
mov
leave
mov
rcl
leave
rol
pusha
mov
ins
mov
xor
mov
push
and
adc
add
sub
sar
pop
and
js
inc
icebp
pop
adc
push
add
shl
add
adc
sbb
and
and
cmps
and
test
push
and
and
adc
lldt
fist
dec
add
cdq
sub
test
adc
daa
dec
mov
in
lods
mov
xor
xor
into
fs
packsswb
jmp
or
gs
jnp
or
ja
pop
arpl
or
adc
push
add
add
xchg
add
test
cmps
lock
je
or
jecxz
mov
mov
or
mul
and
add
mov
sar
sub
les
xor
int
sbb
inc
or
cmp
push
sbb
xor
sbb
and
int
inc
cmps
add
aas
xchg
sub
push
cmp
ds
inc
ja
pop
movs
push
adc
xor
xor
not
fst
push
frstor
sbb
call
arpl
movs
add
add
rol
sub
inc
xlat
test
mov
jo
jb
push
push
pop
aad
dec
jg
(bad)
les
or
push
or
jmp
sbb
pop
pusha
push
add
aas
adc
push
pop
sub
cli
push
lock
or
xor
inc
inc
xor
das
fs
push
adc
retf
imul
add
in
or
ja
add
and
or
sbb
dec
mov
mov
or
out
gs
movs
or
mov
inc
cmp
imul
lock
sub
or
popf
test
leave
cmp
lods
or
adc
mov
adc
fwait
mov
push
mov
fnsave
or
mov
js
addr16
add
pop
pop
loop
push
call
add
add
or
push
mov
pop
inc
lods
and
lahf
mov
mov
pop
jnp
add
imul
ds
dec
(bad)
dec
mov
jo
adc
inc
adc
cmp
jno
xchg
lea
jae
fsub
push
ins
std
imul
or
push
cmp
push
loope
push
sbb
gs
add
fiadd
and
or
xchg
pop
add
inc
mov
inc
gs
mov
in
fistp
enter
xor
pusha
enter
aas
push
inc
push
or
jl
jb
js
jae
pushf
add
cmp
push
jmp
sbb
add
mov
mov
pop
pop
loopne
gs
dec
daa
cmp
and
js
loopne
add
aas
mov
js
mov
fs
mov
fs
mov
push
es
cmp
js
popa
xchg
addr16
sub
lods
aaa
mov
lahf
lahf
push
add
(bad)
inc
mov
jno
nop
mov
inc
cmp
inc
adc
cmovs
sbb
xor
push
xchg
lea
loop
dec
jl
dec
add
dec
or
aaa
or
inc
loopne
cwde
inc
jne
jl
pop
sbb
adc
dec
add
outs
adc
adc
xchg
icebp
push
mov
popf
and
add
test
in
mov
sbb
and
gs
out
ja
xlat
jecxz
adc
sbb
int
jno
(bad)
rol
adc
dec
pop
(bad)
nop
mov
jecxz
add
xor
push
mov
and
ret
sub
add
call
push
cdq
dec
and
and
test
scas
mov
xchg
pusha
adc
inc
inc
or
cmp
jmp
sub
test
nop
or
mov
(bad)
xchg
mov
cmp
push
mov
lods
pop
pop
inc
add
test
push
mov
pop
mov
dec
jnp
mov
rol
jecxz
adc
mov
xchg
push
sbb
call
push
cmps
test
adc
ins
and
ss
cmp
ja
lods
pop
sbb
adc
adc
jge
jl
adc
gs
outs
out
and
sbb
dec
push
arpl
int3
add
cmp
ins
xor
or
rcl
add
loope
or
jmp
test
mov
add
push
stos
adc
adc
cmp
hlt
aaa
add
aaa
dec
lods
daa
and
call
ror
loopne
jg
add
push
add
je
gs
sub
pusha
out
cs
add
into
xchg
dec
mov
loopne
jns
popa
gs
movs
pushf
inc
mov
sub
cmp
add
xor
out
leave
loopne
loop
ret
add
mov
inc
xchg
add
imul
xchg
push
and
or
and
pop
push
lock
mov
nop
sahf
push
aad
jne
push
and
rol
adc
xor
and
mov
call
or
jmp
xor
call
push
sahf
add
mov
mov
movzx
or
mov
push
dec
ins
sbb
retf
jmp
jno
xchg
and
or
dec
add
or
ss
pusha
or
pop
add
clc
(bad)
cld
mov
mov
xor
xchg
fnstsw
pusha
sbb
inc
add
cmp
xchg
or
movs
or
inc
adc
xor
and
cmp
cmp
rol
rcl
or
pop
adc
sbb
pusha
movs
jmp
add
and
push
inc
mov
enter
and
in
and
(bad)
loope
nop
mov
inc
aaa
call
jno
cmp
cmps
icebp
adc
pop
leave
add
sub
sub
mov
adc
mov
xchg
push
fldpi
bt
mov
cmp
inc
movsx
fwait
xor
add
push
mov
sbb
push
stc
les
aad
mov
or
pshufw
jl
inc
or
sbb
xchg
sti
ror
or
add
or
sbb
fisttp
lods
test
and
jg
inc
or
add
ret
cmp
inc
fild
add
loope
add
mov
mov
inc
repz
dec
nop
mov
add
lods
fwait
mov
cdq
sub
test
dec
jecxz
jmp
xor
fs
push
push
or
das
jmp
mov
pop
and
fs
ja
ficomp
jo
dec
push
xchg
add
sbb
inc
ins
xor
les
pop
in
push
sub
or
inc
sub
push
test
mov
js
dec
daa
emms
sar
sub
test
jmp
xor
ret
mov
test
sub
adc
mov
jb
adc
mov
jp
mov
push
pop
add
fmul
les
jmp
repz
lock
in
adc
xchg
imul
and
ins
stc
daa
add
jl
sti
jbe
stos
mov
push
int
cli
add
xor
inc
test
stc
xor
rol
lods
add
cmp
into
mov
push
or
dec
add
and
inc
add
enter
adc
push
inc
mov
ss
dec
pusha
std
bound
aaa
emms
pop
mov
sbb
test
and
sbb
cmp
aam
lea
inc
push
shl
jg
mov
jmp
cmp
(bad)
cld
pop
adc
aas
or
sub
adc
inc
add
cli
pop
lock
and
inc
inc
ins
cmp
sbb
xchg
add
cmp
jne
ret
add
dec
sbb
adc
shl
pusha
or
jl
adc
or
push
arpl
pop
out
add
and
xchg
mov
inc
or
sub
or
adc
jnp
dec
pop
shl
gs
adc
cmps
and
push
das
jmp
or
mov
inc
or
mov
cld
jns
cmp
mov
in
dec
adc
in
and
mov
movs
jno
ror
popa
cld
inc
test
add
loopne
and
xchg
and
jg
inc
loopne
jmp
adc
inc
cmovno
or
xchg
test
lods
icebp
dec
sub
aaa
daa
call
fdivr
adc
sub
sub
and
sbb
add
dec
inc
cwde
or
jae
fisttp
mov
and
sbb
in
or
adc
sbb
cmp
mov
push
in
sub
sbb
lods
pop
add
outs
sbb
scas
and
or
retf
ss
shr
mov
jge
lock
test
(bad)
pop
ror
and
inc
or
push
inc
cmps
sbb
or
or
je
pop
pop
jl
aaa
or
add
pop
sub
nop
xchg
dec
inc
sub
jl
pop
add
push
stc
dec
cmp
jae
test
mov
push
add
neg
adc
pop
and
mov
popf
adc
popf
inc
cmc
ror
mov
jmp
or
pushf
add
lock
dec
sar
or
dec
sub
cmp
lods
sbb
rol
mov
outs
or
cmp
jmp
inc
xchg
(bad)
retf
mov
test
push
sar
aas
neg
mov
pusha
jae
push
adc
jnp
js
ss
inc
push
nop
inc
add
pop
push
test
mov
mov
or
stos
add
add
add
add
push
add
push
or
pop
and
adc
adc
jae
mov
jo
jg
and
xchg
adc
jmp
add
and
dec
and
clc
mov
jecxz
les
inc
pop
add
ins
psubw
pop
shr
sub
push
call
mov
data16
xor
or
dec
push
mov
inc
add
push
hlt
aad
and
push
les
or
sub
cmp
shr
data16
pop
adc
clc
mov
cmp
jmp
pop
mul
pusha
test
lods
push
mov
shr
jbe
les
or
lods
and
or
lods
ins
jne
xor
sahf
shl
je
nop
add
ret
addr16
sbb
mov
or
jp
loopne
mov
add
xor
inc
fwait
mov
adc
hlt
push
movs
cmp
xchg
mov
cmp
enter
dec
mov
add
adc
add
leave
add
cmp
cmp
mov
fcom
mov
sbb
js
mov
adc
pop
lea
test
call
mov
adc
dec
mov
popa
jo
int
cmp
sbb
loope
adc
xchg
inc
rol
lea
add
inc
es
adc
mov
int3
stos
push
sti
or
mov
push
das
adc
sub
shl
es
dec
popa
xchg
dec
sar
test
push
retf
fild
dec
sbb
push
mov
add
sub
cld
sub
push
push
sub
sub
int3
or
or
(bad)
add
ror
cmc
or
adc
int3
add
mov
enter
nop
(bad)
cli
inc
add
and
mov
jo
sbb
ror
ror
les
or
imul
sbb
mov
cmp
inc
movs
rcl
mov
sbb
stos
test
aas
ja
js
jno
clc
(bad)
in
and
pushf
adc
push
or
add
loopne
jo
pop
xchg
mov
mov
nop
call
xor
add
or
mov
sbb
pop
mov
stos
or
nop
std
je
loope
or
aam
dec
popf
mov
loopne
ins
adc
mov
lahf
or
add
or
or
and
imul
daa
lahf
rol
adc
es
arpl
inc
rcr
cmp
adc
and
sub
push
xchg
mov
xor
(bad)
je
arpl
cmp
xchg
fiadd
push
xchg
int
sbb
mov
or
popa
popa
inc
push
pop
mov
fnstsw
fld
gs
add
mov
mov
fimul
xor
add
mov
or
sbb
inc
scas
xchg
inc
push
and
lock
xchg
mov
and
inc
sub
adc
mov
mov
and
mov
xchg
and
lahf
mov
retf
mov
cmp
jg
popf
add
ret
jo
cmc
daa
xchg
xlat
arpl
jl
lds
vmovsd
inc
jne
add
mov
sbb
xchg
jp
and
je
sbb
and
cmp
iret
add
dec
lds
sbb
nop
inc
mov
frstor
das
mov
xchg
popa
and
push
clc
push
lds
dec
mov
mov
jne
xor
cs
or
inc
dec
ret
out
push
cmp
add
sbb
adc
scas
pop
cmp
retf
push
dec
xchg
js
cld
aas
xchg
aas
cdq
dec
sbb
das
addr16
setbe
les
xor
addr16
add
adc
shl
jno
shr
adc
js
popa
cmps
cmp
rcl
sub
xor
(bad)
and
dec
sub
push
ret
hlt
jbe
dec
jns
loopne
or
mov
call
xchg
nop
nop
enter
ret
cmp
in
jae
(bad)
mov
cld
jg
or
jle
or
scas
and
loopne
jne
loopne
in
inc
adc
adc
mov
in
jg
add
lods
xor
pop
fmul
dec
ror
rcl
inc
(bad)
jle
inc
add
fsub
int3
sub
jo
mov
cmp
mov
ret
and
test
out
call
push
jge
call
cld
push
mul
mov
or
pop
mov
movzx
in
jp
dec
(bad)
mov
inc
push
sbb
inc
or
popf
and
fwait
jb
inc
inc
dec
nop
retf
push
int3
int
mov
sub
ror
mov
test
nop
xor
jg
and
jne
and
and
jecxz
inc
in
retf
clc
push
sbb
mov
add
sbb
adc
sub
les
mov
mov
cmps
inc
or
jns
jne
dec
shr
or
fdivr
imul
imul
add
or
xchg
inc
pop
test
mov
mov
aad
pop
dec
std
add
cmp
shl
cmp
dec
inc
loopne
sub
dec
push
popa
sub
jg
imul
cmc
add
adc
hlt
push
cmp
pop
adc
rcl
or
mov
push
push
(bad)
sbb
or
inc
inc
fsub
jo
jg
and
ret
cmp
push
adc
add
sub
neg
inc
mov
add
dec
sbb
loopne
or
cmps
rcl
jae
pop
inc
add
(bad)
jnp
lock
add
sub
or
pop
fisttp
inc
or
or
jge
or
mov
mov
dec
adc
mov
adc
add
call
dec
ins
push
xor
test
mov
and
or
int
inc
(bad)
loop
inc
or
add
or
ror
arpl
adc
pop
and
inc
pop
pusha
mov
stos
nop
and
or
aas
sbb
nop
sub
hlt
jnp
mov
xor
adc
es
call
add
mov
adc
adc
rol
or
xchg
pop
pop
mov
or
jmp
fmul
in
fmul
or
sbb
cmp
test
js
imul
adc
xor
mov
not
xor
or
jl
mov
test
or
add
push
inc
mov
ret
cmp
push
jne
mov
pop
std
sbb
push
add
out
js
and
mov
jns
dec
jmp
fnstcw
and
mov
ret
adc
xchg
and
mov
cmps
dec
or
mov
aaa
xchg
and
les
xchg
and
lahf
mov
sub
jne
ds
or
lock
dec
sbb
add
push
and
mov
xlat
xchg
push
or
call
mov
sub
fsub
adc
xchg
lods
or
aam
push
push
or
lahf
int
xor
sbb
sar
push
sbb
das
nop
sar
and
push
mov
xchg
cmp
dec
xchg
shrd
retf
or
sbb
cmp
clc
adc
shl
(bad)
pop
cmp
stos
aaa
repnz
inc
dec
pusha
dec
sub
in
aaa
add
ret
mov
adc
add
jns
adc
js
sub
adc
xor
iret
and
movs
mov
shl
sub
sbb
les
inc
es
shl
data16
and
jo
das
or
inc
or
pop
loopne
add
push
lock
mov
mul
rol
jmp
mov
adc
xor
dec
mov
pop
add
int
push
adc
xchg
(bad)
rol
in
jo
or
enter
int3
pop
test
(bad)
push
das
outs
sub
add
call
ret
gs
cli
cmps
dec
mov
repnz
sub
je
call
cmp
loopne
jmp
and
in
sub
cmp
xor
es
jp
sbb
xor
ret
add
adc
push
movs
adc
inc
xchg
adc
dec
adc
dec
pop
mov
adc
inc
inc
xchg
mov
mov
add
xor
test
adc
pop
and
and
sbb
cmp
mov
and
(bad)
rol
xor
inc
add
loopne
or
loope
sub
(bad)
and
movs
sbb
add
push
adc
ss
int
add
dec
sub
adc
jne
or
movs
sahf
and
adc
rol
sbb
loopne
add
ins
xchg
or
adc
pop
add
or
jo
sub
dec
int
gs
sbb
add
pop
mov
das
enter
dec
ja
adc
or
and
mov
mov
push
push
jmp
inc
fbstp
les
in
dec
and
imul
add
sbb
dec
sbb
pop
dec
and
and
pop
add
xor
inc
jmp
lahf
pusha
in
push
inc
mov
loope
xchg
add
out
mov
sub
push
add
mov
mov
xchg
jmp
inc
mov
nop
retf
mov
loope
fld
ins
call
inc
nop
or
mov
sbb
adc
pop
sbb
push
gs
test
(bad)
aas
rol
ror
add
nop
cmp
and
test
inc
or
mov
or
movups
xor
dec
xor
dec
dec
mov
xor
adc
or
mov
adc
jne
lods
and
loopne
and
cld
loop
jge
rcr
popa
or
les
popf
push
pop
inc
out
mov
pop
xor
hlt
test
mov
cmc
inc
push
lods
icebp
add
lods
xor
sub
sub
sbb
repz
cmps
lock
sbb
stc
sub
sbb
inc
cli
jno
repnz
and
xchg
add
and
setns
test
(bad)
mov
inc
bound
pop
inc
add
or
add
addr16
sub
adc
xchg
xor
add
dec
fistp
add
and
pop
popa
imul
cdq
or
mov
inc
cld
and
inc
inc
test
add
push
and
enter
imul
test
mov
push
shr
dec
adc
idiv
or
loop
rol
push
int3
add
loope
jge
pop
sbb
sbb
add
jne
cwde
sub
adc
adc
das
or
sub
sbb
and
xor
repz
adc
or
neg
lds
pusha
mov
mov
movs
jns
cmp
and
sar
dec
mov
pushf
and
cld
cs
and
loopne
and
hlt
popf
xor
or
or
sub
stos
mov
xor
bound
pop
adc
inc
mov
or
popa
cs
cmp
stc
and
or
stc
imul
add
in
pop
arpl
clc
push
test
adc
pop
push
jne
or
push
cmps
(bad)
sub
in
sbb
lea
add
push
push
nop
sbb
or
add
pushf
push
sbb
push
add
fadd
mov
out
push
xor
or
lea
arpl
mov
loope
mov
pop
sbb
xor
inc
or
push
mov
xor
ins
test
movs
and
add
dec
int3
or
mov
push
cmps
pop
cmp
dec
sub
push
or
cmp
jle
cmp
mov
enter
push
sub
xchg
pop
repnz
rol
or
inc
loop
lea
mov
cmp
aaa
adc
push
jmp
das
ss
inc
sub
push
int3
and
xor
adc
pop
bound
mov
add
and
shl
test
pop
loopne
dec
mov
loopne
sahf
inc
les
xor
fsubr
add
add
aas
inc
inc
add
sbb
cwde
scas
adc
sub
addr16
push
add
inc
mov
inc
bound
cmps
aam
jg
jg
add
mov
dec
(bad)
or
clc
dec
je
stos
lods
push
or
adc
mov
test
cmc
ror
xor
data16
pop
ins
mov
ins
jmp
imul
aas
or
inc
xor
inc
sub
popf
jbe
in
mov
or
inc
pusha
add
dec
or
gs
sbb
shl
add
sti
add
push
or
or
sub
or
adc
or
inc
mov
sub
lods
add
add
mov
rol
adc
cld
jmp
shl
mov
xor
or
sbb
jno
test
imul
add
test
dec
inc
lods
or
add
xchg
clc
pop
ins
rcr
in
mov
or
loope
jge
push
xor
popa
jnp
inc
sbb
mov
fdiv
adc
scas
mov
popa
loop
xor
xchg
pop
push
mov
cmps
pop
mov
add
jle
jmp
movzx
jmp
pusha
cmp
or
add
xor
ins
jae
das
mov
dec
shl
ror
rol
add
dec
or
sbb
repnz
adc
fs
gs
sub
pop
(bad)
push
lea
mov
add
mov
stos
inc
pop
push
or
mov
jmp
push
inc
or
fs
ja
movs
jl
in
push
cdq
cwde
cmp
pop
xor
mov
mov
push
xor
adc
rcl
jne
arpl
inc
cwde
arpl
pop
inc
mov
(bad)
or
and
add
add
add
shr
outs
aad
add
clc
sub
je
lea
ins
int
in
jl
xchg
or
in
inc
out
add
push
pop
inc
ret
add
add
add
ins
dec
mov
or
inc
pusha
sbb
inc
or
and
outs
ret
cmp
aam
add
lods
sbb
inc
cdq
test
adc
popf
jmp
in
jmp
ins
push
xchg
fistp
sbb
add
sub
out
add
sbb
mov
add
add
je
or
out
adc
adc
adc
dec
jo
mov
mov
cmp
ins
dec
and
add
in
adc
xor
mov
in
add
pop
jo
pop
iret
or
xchg
stos
adc
or
pop
push
or
pop
inc
pushf
nop
scas
inc
ret
dec
pop
pop
add
push
test
gs
les
retf
pushw
cmps
mov
xor
dec
add
add
dec
xchg
cmps
aad
or
shl
hlt
sub
lea
or
dec
addr16
xor
dec
pop
loop
cmp
stc
adc
arpl
fist
ss
leave
fcomp
(bad)
stos
lea
mov
or
inc
out
aam
inc
add
addr16
push
add
xchg
mov
mov
xor
and
push
loope
sti
leave
shl
push
adc
or
or
sbb
sub
jnp
leave
adc
xchg
fwait
out
sub
(bad)
call
add
inc
into
jmp
sub
and
inc
dec
xchg
sub
mov
adc
push
jmp
push
adc
adc
add
xor
ja
dec
add
nop
mov
jno
push
jl
test
inc
and
aas
fild
ins
inc
dec
adc
shl
sbb
or
sub
repnz
sub
in
stos
xchg
inc
inc
xor
in
in
sub
inc
repz
xchg
adc
add
dec
adc
sbb
cmp
push
push
sub
or
or
lods
fdivr
fcom
add
sbb
cmp
xchg
fadd
push
pop
inc
xchg
push
aam
add
sub
pop
punpcklbw
add
aam
and
test
shl
push
ror
pushf
not
int3
jns
call
adc
cld
inc
add
add
repz
adc
neg
inc
xor
in
push
paddq
push
nop
and
arpl
pop
bound
mov
jmp
lock
sbb
cmc
nop
or
or
xor
pop
fcomp
in
mov
pop
and
add
mov
mov
jno
mov
test
repnz
mov
in
cmp
xor
adc
add
pop
sbb
dec
aam
add
inc
dec
nop
mov
pop
xor
and
push
inc
sub
cwde
div
xchg
and
iret
in
fiadd
xchg
push
outs
movs
mov
xchg
retf
and
ror
sub
dec
scas
jb
pop
aam
push
cmp
and
lds
push
add
movs
mov
lea
lods
mov
adc
inc
cs
xor
cmova
adc
push
inc
inc
stos
or
arpl
sub
aam
adc
add
sub
xor
add
inc
cmp
jns
adc
adc
xor
loope
out
aad
adc
stos
addr16
retf
shl
shl
(bad)
fs
aam
add
jno
adc
shl
add
or
and
adc
jbe
dec
adc
mov
inc
push
add
imul
mov
push
(bad)
shr
and
ins
add
or
fistp
jge
adc
ror
jns
(bad)
add
mov
adc
shl
add
jmp
push
xchg
adc
and
dec
test
sub
add
pop
mov
push
arpl
pop
mov
inc
stos
imul
push
fistp
mov
push
or
add
or
xor
add
movs
les
mov
or
movs
dec
outs
xchg
test
cmp
sub
xor
and
imul
ret
or
mov
ins
mov
arpl
xor
cli
add
mov
xor
mov
add
jne
add
retf
outs
test
or
gs
cwde
ror
push
push
mov
rol
les
test
pop
fcom
add
inc
jo
out
xor
(bad)
out
pop
add
shr
xchg
mov
inc
in
int
push
inc
dec
test
loope
mov
sub
mov
adc
addr16
sbb
or
and
sbb
jmp
jmp
mov
ins
cwde
jecxz
das
mov
add
popa
add
daa
adc
push
or
adc
cmp
inc
(bad)
int
rcl
lock
add
dec
mov
add
jnp
test
or
adc
in
pop
or
and
lds
or
adc
and
jp
sub
or
mov
sar
sbb
int3
adc
fsubr
mov
push
pop
add
add
mov
push
and
add
add
sbb
add
dec
sbb
push
add
rol
adc
add
ret
ret
ins
popa
mov
(bad)
jne
imul
dec
rol
add
xor
xor
push
and
or
retf
add
and
mov
shl
sar
rol
pop
add
int
pop
sbb
arpl
shr
mov
and
rol
sbb
out
test
mov
sahf
add
pusha
jecxz
ins
sbb
add
sbb
pop
enter
int3
jmp
movs
xor
inc
add
jmp
adc
imul
lods
push
enter
cmp
ins
sub
add
push
test
dec
test
xchg
inc
mov
fmulp
ins
add
sub
pop
add
pop
ret
inc
and
xchg
pop
sbb
movs
fs
pop
jb
dec
or
and
aas
push
inc
dec
popa
aam
mov
or
and
or
xor
xchg
mov
adc
push
sub
fwait
ret
and
adc
push
xchg
push
and
and
imul
or
pop
sub
ins
add
adc
popa
and
loop
int
and
popa
test
add
je
movs
add
xor
mov
jecxz
cmp
push
adc
and
sbb
lahf
dec
sbb
and
mov
and
fcomp
stos
aad
sbb
hlt
dec
cwde
sbb
inc
sub
test
mov
push
or
add
mov
adc
adc
add
dec
pop
push
pop
sbb
xchg
sbb
and
xor
popa
add
pop
sbb
je
imul
je
add
test
sub
ret
rol
add
or
adc
(bad)
cmp
mov
cmp
in
fcom
pop
inc
cmp
jl
push
or
xor
and
sbb
jmp
mov
cmc
in
dec
xlat
sbb
and
fmul
fcom
sub
fcomp
or
cmp
out
mov
cmp
in
sbb
mov
mov
lods
push
xor
inc
push
bound
push
movs
gs
mov
and
cwde
imul
out
sbb
inc
xor
ins
or
lea
adc
push
fmul
dec
dec
add
dec
mov
hlt
inc
cmp
adc
pop
mov
test
xchg
xchg
push
in
(bad)
adc
add
xor
test
sbb
add
mov
add
push
pop
inc
ds
ins
cs
cmps
add
add
pop
rcr
lahf
adc
xor
inc
jo
adc
adc
push
or
mov
cld
inc
adc
or
jmp
xor
push
leave
repz
mov
mov
push
pop
pop
pop
add
sbb
push
dec
xor
daa
pop
es
xor
push
jno
imul
lock
loopne
arpl
and
cmp
push
or
cmps
cmp
fidiv
hlt
enter
and
fiadd
fcom
movs
clc
fmul
push
or
jnp
cmp
and
xchg
cdq
add
xchg
mov
adc
test
mov
xor
mov
push
mov
in
nop
and
dec
push
test
jle
jmp
aas
add
and
pop
mov
retf
sub
sbb
adc
fst
mov
retf
and
or
or
pop
adc
mov
dec
jp
fldz
push
xchg
lea
adc
or
xlat
cdq
and
add
js
es
xor
cmp
xor
div
jne
jp
push
js
push
inc
xchg
movs
or
movlps
ror
rol
push
adc
repz
repz
inc
jb
jae
add
dec
adc
adc
fldcw
add
xor
call
ja
ret
push
mov
add
pop
or
mov
or
pop
pop
dec
loopne
dec
jmp
lea
pop
and
sbb
and
(bad)
fimul
push
pop
mov
xchg
add
and
pop
in
stos
shr
call
push
loopne
test
and
adc
ror
enter
rcl
pop
popa
bound
inc
adc
xor
call
sub
aam
sbb
sub
mov
stc
ret
push
dec
add
hlt
stc
sbb
repz
lahf
pop
and
inc
sbb
rol
mov
or
(bad)
std
cld
mov
aas
pusha
add
adc
push
inc
xor
in
shl
mov
pusha
es
cmps
(bad)
int
int
pushf
push
sbb
in
or
sbb
adc
pop
(bad)
xor
mov
mov
movs
pop
jb
and
push
mov
cwde
dec
and
mov
pusha
xchg
cmp
add
int
mov
loopne
xor
addr16
add
and
mov
iret
lods
aad
sbb
pop
and
or
inc
inc
aad
and
out
mov
jge
adc
mov
mov
nop
aam
push
cmp
adc
adc
popf
stc
and
cwde
dec
popf
add
lahf
xor
aas
push
rol
sbb
and
jne
or
ja
movs
cs
push
or
and
pop
and
xor
stos
cs
sbb
ins
xor
inc
jb
icebp
loopne
dec
dec
sub
ins
das
inc
bound
inc
jns
fcom
dec
clc
jg
jl
inc
push
(bad)
inc
stos
and
data16
dec
addr16
and
es
xchg
jbe
and
mov
mov
loope
call
mov
or
push
pop
xchg
or
mov
outs
adc
js
push
sub
fimul
add
sub
movs
in
sar
and
xchg
push
mov
xchg
cmps
push
loope
push
enter
jg
and
pusha
sub
cmp
mov
lock
es
cmps
mov
loopne
or
mov
lahf
push
pop
push
and
ins
pop
dec
or
mov
das
mov
rcr
mov
aas
inc
jg
and
ins
lods
dec
or
inc
test
add
and
imul
push
or
fwait
jne
sbb
test
xor
adc
fnstenv
aaa
xor
pop
adc
dec
xlat
popa
jecxz
sti
add
nop
cmp
cmps
in
mov
lods
xchg
test
icebp
ror
mov
or
xchg
sbb
cld
or
add
jae
nop
mov
xchg
scas
push
iret
lock
mov
imul
and
adc
in
cmp
test
cdq
popa
hlt
jmp
push
sub
cmp
icebp
dec
dec
push
add
mov
movs
adc
sub
adc
popf
push
mov
aas
dec
add
xchg
or
push
sub
(bad)
sub
clc
int3
icebp
inc
xchg
(bad)
push
test
xor
pop
ret
xor
add
dec
out
mov
sbb
adc
out
cmp
cmp
movups
shr
shl
in
xor
pop
xchg
xchg
int3
(bad)
xor
mov
shl
sbb
fwait
popa
or
sbb
sub
or
jg
pusha
lock
inc
add
dec
adc
pop
ds
cwde
add
fiadd
or
adc
clc
sbb
ds
mov
add
shr
pop
sbb
mov
sbb
lock
jmpw
lahf
xlat
xchg
xchg
and
sub
jne
adc
xor
outs
mov
jl
add
pusha
xchg
mov
mov
jmp
shl
xor
cmovp
in
xor
nop
test
mov
scas
or
daa
add
aam
add
inc
xchg
mov
fs
push
mov
inc
xor
shl
fs
mov
clc
mov
cmp
cs
std
test
xor
xchg
push
mov
shr
jno
xchg
sub
adc
pop
(bad)
xchg
sub
pop
sub
mov
pop
jnp
xchg
sub
sar
dec
add
jmp
imul
add
xchg
pop
add
je
mov
push
or
mov
dec
pushf
adc
mov
cmp
cwde
imul
fist
test
je
popa
xor
nop
test
inc
push
xor
sbb
inc
inc
loopne
xchg
jbe
scas
add
add
dec
arpl
iret
add
mov
and
inc
cmp
xchg
ss
cmps
inc
ret
sub
ret
push
push
mov
ret
pop
and
pop
aas
sbb
out
or
mov
add
sub
je
mov
fs
adc
retf
add
sub
sub
add
(bad)
jp
jmp
fld
ja
adc
adc
sub
or
push
cmps
cmp
xchg
xchg
cmp
xor
sbb
sbb
stc
add
mov
adc
jno
inc
pop
ror
sar
push
mov
mov
push
or
add
dec
sbb
sbb
dec
test
xchg
push
in
clc
ins
mov
and
mov
lock
int
add
jg
push
jo
imul
rol
nop
mov
jo
lock
jl
int
pop
xor
or
jns
rcl
fcmovbe
test
mov
mov
mov
xor
ins
adc
jne
sbb
loopne
dec
push
repnz
pop
in
dec
adc
adc
nop
xchg
call
inc
xor
lock
aam
add
add
in
push
sub
test
in
lahf
add
push
push
and
outs
sub
mov
pop
add
fistp
adc
and
jmp
popa
mov
push
and
iret
push
out
or
je
or
(bad)
and
or
sub
push
call
fs
and
call
and
pusha
sbb
mov
cli
and
inc
rol
outs
or
sbb
mov
xor
add
or
sub
cmp
inc
shl
or
dec
es
add
inc
xor
shr
fisub
dec
pop
iret
add
repz
jle
or
inc
cmp
xor
jne
repz
dec
dec
(bad)
jmp
adc
adc
test
add
inc
mov
in
sub
mov
pop
sub
gs
inc
or
clc
pusha
fsub
call
ret
xlat
sbb
inc
adc
imul
jns
jmp
sbb
inc
mov
adc
xchg
cmp
dec
adc
add
ja
jg
dec
(bad)
inc
sbb
xor
inc
imul
rcr
and
push
je
rcl
add
popa
sar
adc
(bad)
add
pop
aas
add
je
adc
add
or
push
test
into
push
lods
and
aas
sub
clc
sub
and
retf
or
sbb
mov
push
dec
and
and
adc
cld
gs
add
jo
push
inc
mov
lahf
sub
test
js
iret
dec
test
rol
test
push
add
add
outs
es
sub
add
add
test
outs
iret
lahf
pavgw
pushf
popa
sbb
or
jecxz
pop
cli
add
mov
add
jnp
dec
ins
stc
test
pop
les
test
push
inc
mov
test
test
in
mov
and
and
mov
mov
sbb
cmp
mov
pushf
or
push
mov
and
xchg
icebp
mov
imul
pop
sub
(bad)
lods
add
xchg
sar
adc
mov
add
lods
adc
mov
xchg
push
inc
pushf
pushf
jns
ds
cmp
fwait
push
sbb
xchg
pusha
loope
push
fld
mov
ret
shl
pop
mov
sbb
inc
push
xchg
sbb
pop
xchg
sbb
fwait
js
test
clc
xchg
push
je
push
neg
mov
mov
pop
mov
sahf
sbb
clc
xor
inc
nop
aad
das
xchg
imul
rcl
test
mov
add
adc
cmp
jg
dec
hlt
and
test
xchg
xchg
xchg
mov
sbb
sub
inc
cmp
ja
adc
call
cmc
inc
test
or
js
dec
xor
or
add
add
jmp
aam
or
lea
ret
sbb
(bad)
idiv
xchg
lock
xchg
adc
mov
lods
xchg
in
leave
xchg
push
mov
and
and
dec
mov
popa
xor
lock
dec
je
ror
or
cwde
mov
lods
add
fisub
je
adc
xchg
rcl
jge
adc
fisttp
ds
sub
test
jp
or
aaa
pop
push
cmp
shl
adc
cmp
pushf
xor
push
and
cmp
mov
add
mov
shl
cmp
mov
dec
and
inc
lds
adc
pusha
inc
aad
push
mov
aam
mov
cmp
push
call
adc
or
mov
jb
pop
aas
pop
dec
cmps
fs
sub
dec
add
cmp
or
sub
sbb
adc
and
frstor
and
inc
jecxz
add
mov
lods
xor
jo
inc
sub
sub
and
pop
or
clc
add
ins
cmp
imul
test
test
and
or
push
sbb
fadd
sub
ins
ins
pop
add
pusha
out
in
push
mov
les
clc
nop
or
inc
cld
sub
sbb
or
mov
adc
add
jg
add
xchg
sbb
inc
imul
into
mov
loope
or
dec
sub
popa
pop
mov
jo
push
cmp
bound
xor
pop
inc
push
inc
or
arpl
sbb
aaa
call
ja
push
or
add
rol
or
push
inc
stc
es
or
add
cmp
test
and
sub
or
adc
sub
leave
sub
and
ret
and
inc
ja
or
loopne
mov
mov
xor
js
or
pop
inc
adc
and
pop
xor
test
push
or
mov
imul
push
repz
mov
popa
daa
clc
out
jne
sbb
mov
and
xor
test
ficomp
push
and
je
aam
ret
or
push
sub
(bad)
adc
push
stos
movs
test
xchg
ror
call
out
clc
mov
add
xor
add
mov
sub
stos
and
test
les
sub
push
pop
rcl
lds
cmp
hlt
mov
jo
iret
push
add
inc
adc
pop
call
inc
dec
and
pop
inc
dec
sub
clc
and
in
or
or
das
cld
add
xor
imul
or
mov
out
jge
mov
das
pop
xchg
shr
push
cmp
and
jmp
sub
loope
jmp
ins
push
out
loope
jae
xor
ror
mov
jmp
lahf
cmovno
ret
rcl
push
push
mov
jb
int
inc
jp
mov
push
pand
sbb
push
ret
or
and
mov
call
inc
add
sbb
jnp
sbb
pop
pop
add
ins
xchg
loopne
cmc
in
add
aas
push
ror
dec
and
or
sar
cmp
mov
mov
loope
pop
in
fcmovnb
jae
sub
xchg
or
nop
dec
es
inc
cdq
fs
es
inc
inc
pop
fs
or
cmp
cmp
shr
sbb
mov
pop
and
cmps
push
pop
gs
inc
sbb
pop
cmp
loopne
dec
in
test
dec
or
aaa
shr
jns
call
ret
sbb
movs
test
pop
sub
in
icebp
fnsave
sub
and
inc
pop
jg
test
add
or
test
imul
fisttp
push
push
aas
retf
pushf
jg
addr16
sti
not
popa
jbe
lods
imul
sbb
push
je
lods
adc
sub
shl
pop
mov
ret
push
in
popa
and
adc
test
ins
push
jg
cmps
jo
mov
js
push
jp
ficom
dec
sbb
call
adc
adc
cmp
jae
dec
cmp
and
pop
inc
fidiv
jae
mov
je
mov
imul
xor
lds
push
sbb
add
inc
scas
or
adc
hlt
adc
xor
sub
test
(bad)
sbb
jo
mov
aad
jl
(bad)
sub
pop
or
add
retf
jmp
mov
and
adc
push
inc
inc
in
cmp
test
fdivr
mov
mov
mov
add
add
das
push
mov
sbb
dec
sbb
or
test
hlt
fdivr
xor
and
mov
pusha
data16
sbb
xor
push
mov
add
mov
test
mov
xchg
shr
sbb
add
jnp
xlat
mov
and
or
fist
imul
mov
push
ja
adc
add
add
aas
inc
loope
dec
pop
mov
inc
sbb
sar
(bad)
mov
add
call
fwait
sub
pop
es
mov
nop
sub
test
pop
pop
pop
leave
fisttp
push
bound
les
dec
lea
lahf
iret
mov
add
sub
clc
int
ror
and
inc
je
(bad)
mov
fld
pop
or
inc
jl
push
add
xchg
aas
iret
fcomp
add
fsubr
push
pop
shl
adc
lods
add
call
clc
mov
fdivp
mov
shl
je
cld
jle
int3
(bad)
je
mov
ror
mov
or
fmul
mov
or
mov
mov
lock
sub
jo
mov
outs
je
lea
je
imul
scas
test
mov
mov
ret
loope
enter
test
arpl
push
sbb
adc
xor
mov
add
mov
js
adc
add
lea
add
mov
sbb
popa
int
jge
pushf
push
sbb
and
inc
adc
jbe
adc
and
dec
sbb
sub
add
lock
call
mov
sub
fist
dec
push
cdq
aaa
imul
dec
lds
leave
add
inc
movs
xor
jmp
add
rol
mov
jmp
xor
js
sub
cdq
mov
or
push
test
pop
xchg
mov
movs
mov
xchg
adc
fs
mov
loopne
test
mov
push
sub
inc
test
push
xchg
lea
sbb
and
dec
push
sbb
xchg
adc
inc
or
add
das
and
cmp
sub
mov
push
sbb
inc
and
add
adc
or
jg
jne
mov
out
adc
push
or
jo
popa
add
ffreep
and
xor
addr16
js
jnp
shr
adc
push
pushf
sbb
call
sbb
shl
ins
or
mov
jmp
cwde
and
inc
les
cli
cli
or
xor
xchg
std
daa
sar
xchg
lahf
fmul
and
cmp
and
push
add
adc
cmps
mov
loope
inc
or
cli
leave
ror
mov
ja
jmp
xor
pusha
jmp
add
hlt
sub
and
add
fs
pop
inc
mov
mov
dec
adc
pop
xor
test
and
movs
pop
add
xchg
movs
add
sub
test
push
xor
out
ror
js
add
sub
pusha
xchg
or
jo
inc
dec
shl
and
inc
test
jne
or
dec
fld
mov
outs
add
xor
sub
add
sbb
shr
or
sbb
push
or
add
stc
cwde
jmp
pop
(bad)
mov
fcmovnbe
and
(bad)
ficom
add
push
add
test
or
add
ja
add
mov
test
mov
jmp
aam
mov
iret
icebp
mov
dec
add
add
add
jo
push
clc
xchg
add
call
pop
enter
(bad)
cwde
inc
add
mov
dec
sti
add
mov
xor
push
cmp
mov
mov
push
adc
fimul
in
jns
push
fadd
js
setb
dec
lahf
test
fdiv
(bad)
retf
and
cmp
scas
cmp
pop
xor
and
pop
pop
gs
cmp
cdq
cmp
push
cmp
sub
jns
rol
sti
adc
or
pop
pop
ins
mov
add
popa
outs
js
arpl
sub
dec
jl
sar
adc
mov
mov
adc
jecxz
lock
or
adc
inc
idiv
push
and
add
sub
adc
and
sbb
pop
lds
movs
call
add
add
push
inc
je
or
je
adc
fstp
mov
out
ss
push
enter
popf
xchg
lock
pop
je
sbb
jmp
push
les
pop
cmp
or
inc
cmp
push
or
and
and
xchg
mov
push
and
or
xchg
icebp
cmc
ins
jne
inc
sub
mov
adc
test
cmps
lock
lods
and
push
or
and
adc
mov
aaa
jg
pop
sbb
paddw
jmp
push
jo
shr
or
xchg
outs
jg
xchg
test
jp
add
add
loopne
add
xor
push
in
aas
adc
or
dec
sub
lock
sub
bound
or
sub
mov
and
sub
cdq
adc
aam
sub
mov
shr
clc
sbb
pop
push
adc
ja
add
out
movs
das
sub
out
clc
mov
add
jns
and
js
int3
sub
jbe
add
and
and
sub
jb
dec
ret
sti
lods
pop
cmp
and
ret
adc
je
sbb
and
pop
(bad)
adc
jle
push
nop
and
pop
pop
pop
mov
inc
ins
in
and
or
or
xor
push
fld
ret
push
mov
lods
inc
dec
ret
adc
or
or
or
hlt
xor
lock
mov
dec
test
int3
mov
add
jo
push
adc
dec
sub
clc
aad
enter
clc
push
sbb
stos
xchg
jmp
adc
add
push
sub
mov
push
(bad)
cmpxchg
je
sub
push
daa
test
cmp
pop
pop
or
mov
or
adc
push
(bad)
in
rcl
inc
int3
cmps
adc
arpl
imul
jg
add
adc
dec
push
aaa
or
aad
or
adc
and
or
pusha
adc
cmps
cwde
(bad)
or
cwde
aaa
pop
or
push
add
cwde
pop
and
inc
and
inc
nop
inc
das
shl
movs
and
sub
or
push
cmp
add
jbe
add
pop
and
daa
aam
movzx
xchg
jg
mov
xchg
xchg
inc
or
add
xchg
and
ja
adc
mov
push
pusha
sbb
movs
cmp
pop
and
mov
xchg
clc
mov
inc
adc
add
dec
and
xchg
rol
inc
adc
pop
dec
adc
dec
aam
jl
std
in
sar
xor
sbb
fs
sbb
pop
add
or
scas
pop
mov
mov
ins
dec
pushf
bound
or
inc
mov
or
add
rol
lock
xor
enter
xchg
mov
movs
(bad)
pusha
mov
(bad)
call
sbb
jnp
es
jge
pop
xchg
cmp
vmovhlps
sub
inc
sub
mov
or
loopne
sub
shr
jmp
dec
push
cmp
push
es
inc
in
mov
xchg
shl
add
or
adc
nop
in
retf
shl
sub
dec
cmps
and
mov
mov
hlt
nop
add
sub
push
mov
enter
ins
aas
test
shl
fwait
adc
adc
cmp
and
add
sub
ss
adc
(bad)
adc
xor
sbb
pop
or
fistp
xor
xor
cmp
sub
mul
push
pop
fs
xchg
je
inc
outs
je
inc
jne
ror
nop
push
repz
test
ins
fwait
inc
jns
xchg
inc
sub
and
popa
mov
adc
aaa
jnp
push
or
mov
jb
inc
push
out
sbb
dec
dec
(bad)
(bad)
adc
and
sub
dec
xchg
mov
inc
cwde
push
xchg
sbb
dec
and
xchg
xchg
pop
fsubr
sbb
or
mov
mov
inc
push
pop
add
and
adc
mov
mov
push
push
mov
sbb
inc
lea
ins
inc
sar
aaa
or
dec
mov
pop
ror
jno
rol
test
and
jmp
or
inc
cmp
aad
sbb
push
mov
jecxz
pop
ror
mov
fsubr
pop
sub
xor
mov
push
pop
sbb
pop
push
and
cmp
xchg
daa
dec
ret
mov
mov
cmp
add
sbb
sbb
pop
mov
xchg
inc
les
or
icebp
out
inc
leave
sbb
cdq
loopne
sub
mov
pop
mov
bound
jnp
repz
adc
pop
rol
lods
mov
shl
sbb
dec
inc
(bad)
dec
mov
adc
xchg
test
add
or
es
add
cmp
nop
mov
fldcw
xlat
adc
leave
cmp
dec
ins
adc
stos
cmp
mov
call
movs
sti
je
sbb
push
loopne
popa
cmc
sbb
xchg
fiadd
jl
jl
push
pop
les
sbb
nop
push
xor
push
pop
cmp
sbb
and
retf
jmp
mov
push
sub
push
mov
or
fld
adc
or
xchg
or
jecxz
and
loope
ficom
cmp
rcr
jne
sub
popa
(bad)
call
and
ja
pusha
jle
or
into
aas
shl
jle
push
dec
adc
inc
pop
add
add
pmullw
add
xchg
mov
inc
push
mov
sbb
mov
sti
lock
pop
sbb
xor
ror
lea
or
inc
cmp
pop
lock
push
ja
mov
push
push
jo
or
sub
mov
pop
pusha
mov
adc
das
inc
push
ins
pop
loopne
add
sub
mov
push
and
sar
or
shl
sbb
xor
add
lahf
sub
aas
pop
daa
leave
adc
fcmovnb
pop
add
sbb
es
in
or
mov
dec
loopne
sub
push
or
sub
pusha
dec
and
dec
test
sbb
cmp
and
repz
dec
std
imul
je
add
push
or
sbb
pop
lea
mov
mov
sbb
add
mov
xor
cmp
repz
rol
popf
mov
add
outs
pop
xchg
inc
je
add
adc
xchg
in
fcompp
mov
sub
adc
outs
lea
pop
jg
sbb
(bad)
mov
cmp
ds
es
mov
sbb
adc
enter
mov
jl
xchg
sbb
mov
cmps
test
(bad)
sbb
ins
or
imul
leave
mov
ss
clc
add
mov
push
xchg
and
or
and
movs
xchg
inc
inc
pop
push
mov
fs
xlat
out
cmp
add
loopne
jg
mov
adc
or
xor
add
mov
inc
jmp
inc
jecxz
sbb
es
or
xor
inc
push
xlat
sub
ja
hlt
sar
xchg
inc
test
fild
xor
sar
sbb
or
and
jo
sub
push
dec
add
dec
jbe
xchg
ret
call
push
int
xchg
icebp
sub
adc
aaa
jno
cmp
mov
and
jecxz
test
or
push
nop
add
add
cmp
push
adc
stos
dec
loop
and
push
mov
retf
and
out
and
retf
inc
mov
jge
mov
xchg
test
inc
addr16
out
cmp
sbb
fldpi
xor
test
mov
xchg
add
cmovge
fld
push
xchg
or
loope
retf
or
jl
or
add
sbb
mov
push
cdq
push
mov
test
jecxz
xchg
loopne
add
lods
or
xchg
cmp
sub
add
fist
add
push
pop
mov
out
ins
sahf
out
pop
popf
add
in
iret
repz
(bad)
repz
add
sbb
lar
add
adc
ja
add
add
rol
dec
mov
and
data16
xlat
add
push
adc
pop
pop
or
lds
stos
push
sub
cmp
push
fdivr
or
inc
outs
push
pop
or
dec
sti
fild
push
push
add
add
add
add
add
or
push
add
inc
xchg
cwde
sbb
icebp
pop
push
pop
pop
or
popa
mov
sub
or
add
lods
jecxz
mov
cmc
pop
adc
adc
sbb
pop
mov
or
adc
adc
adc
aas
nop
or
lods
lock
and
lock
(bad)
iret
aas
lock
inc
inc
mov
xchg
mov
movs
jns
nop
mov
aas
or
cld
inc
cmp
call
mov
dec
enter
and
call
movs
adc
jns
mov
pushw
pop
push
push
fstp
cmc
test
sub
imul
test
sub
loopne
imul
inc
addr16
das
cmp
xor
mov
movs
adc
rcr
xor
xor
and
leave
sbb
cmp
and
and
inc
sahf
pop
and
push
and
retf
fs
jbe
ret
sbb
sbb
adc
dec
pop
sbb
and
je
and
jns
sub
ja
ja
xlat
adc
sbb
pop
xchg
aam
adc
inc
pushf
sbb
mov
pop
push
repnz
pop
(bad)
pop
in
mov
and
jle
aad
test
sahf
pop
cmps
pop
adc
and
sub
shr
sub
or
test
je
push
dec
cmps
push
loop
mov
mov
dec
pop
pop
or
rcl
sub
pop
jno
imul
or
leave
add
rcl
mov
jecxz
pop
repnz
retf
jmp
mov
stos
rol
xchg
out
ret
fwait
or
adc
push
aas
adc
js
adc
and
movs
xor
sbb
mov
xor
pop
jl
pop
adc
cmp
mov
push
les
call
mov
das
adc
jecxz
lock
or
cmp
popa
mov
mov
inc
in
mov
lahf
call
push
call
cmc
or
test
push
imul
mov
jmp
daa
test
sub
sub
ja
and
xchg
push
xor
int3
sbb
jp
mov
adc
inc
repz
and
sub
mov
cmp
jmp
jnp
mov
idiv
scas
sbb
outs
mov
push
sbb
(bad)
pop
jo
mov
sbb
push
aam
xchg
push
push
adc
jnp
sbb
scas
adc
mov
push
adc
leave
adc
bound
inc
xor
and
ret
(bad)
push
xor
mov
(bad)
jno
jne
test
and
push
ins
and
sub
(bad)
mov
add
aas
pop
jmp
imul
sub
fist
es
and
nop
invd
iret
jnp
and
push
mov
test
shr
pusha
nop
push
fild
retf
inc
mov
out
ficomp
dec
inc
cmp
sub
or
fist
cmp
fcomp
call
iret
jl
pushf
(bad)
daa
dec
adc
daa
mov
mov
push
xor
inc
pop
push
daa
adc
xor
out
cmp
shr
pop
fbstp
sbb
cmp
push
mov
mov
mov
cmp
aam
in
dec
add
fidivr
or
push
sbb
cmp
sbb
fistp
sar
call
faddp
add
sbb
jle
sub
add
ds
add
add
adc
fmul
sbb
mov
ins
lock
fld1
fmul
stos
sbb
sahf
mov
add
adc
inc
in
clc
or
dec
pop
es
adc
or
scas
inc
pushf
adc
int3
cmp
aam
in
sub
test
imul
pop
or
std
inc
and
clc
gs
xchg
fadd
stos
cmc
and
xchg
imul
push
leave
test
xor
icebp
push
or
popf
sub
aas
xchg
add
or
mov
pop
mov
mov
add
jns
cmps
mov
jae
add
daa
adc
mov
or
push
rol
add
jne
in
cmps
ds
cmp
call
iret
int3
es
add
es
sbb
aam
fstp
mov
out
xor
inc
je
test
sub
ror
push
lock
inc
xor
daa
jmp
and
sub
jnp
or
push
sbb
add
push
xor
inc
pop
xor
add
add
sbb
push
scas
fisttp
rol
sub
daa
pusha
ins
stc
inc
or
jmp
jmp
hlt
sub
mov
imul
jl
push
adc
mov
push
std
mov
push
xor
iret
push
(bad)
mov
test
and
inc
sbb
ss
aad
sbb
add
add
je
mov
pop
or
xor
sub
bound
or
sti
sbb
je
iret
mov
(bad)
push
sbb
rol
mov
mov
pop
adc
imul
sbb
mov
shr
adc
nop
add
shr
or
add
popa
sub
test
icebp
and
add
pop
add
mov
sub
mov
aas
mov
or
mov
movs
test
mov
dec
arpl
xchg
int3
xor
push
outs
and
sub
dec
or
in
cmps
fmul
fmul
adc
xor
jmp
push
mov
or
aam
dec
adc
push
or
cmp
xchg
and
pop
pop
enter
and
and
ins
or
sbb
dec
and
ins
cmp
or
adc
ror
mov
(bad)
rol
adc
sub
inc
sub
arpl
push
add
mov
das
jnp
adc
cmp
or
add
xchg
mov
mov
sub
sti
sub
sbb
mov
sbb
or
test
aaa
xchg
ror
popa
mov
mov
ficom
xor
and
mov
push
mov
dec
(bad)
fs
xor
sbb
shl
retf
or
or
and
shr
xchg
dec
and
or
cmp
push
clc
xchg
pop
mov
inc
and
and
or
jle
add
inc
push
add
mov
ficom
adc
inc
pop
and
mov
mov
pusha
adc
sub
les
int3
add
and
div
pop
imul
xor
fadd
inc
inc
jno
cmp
inc
xor
or
es
es
sbb
ret
adc
adc
dec
or
or
add
ins
push
sbb
sbb
test
movs
pop
rcl
movups
push
xchg
mov
lods
inc
daa
jmp
mov
inc
mov
jmp
mov
cmp
or
test
pop
add
cmp
std
push
in
call
std
sbb
mov
dec
pushf
and
add
fdivr
cld
fisubr
and
fnstsw
cmp
push
inc
dec
arpl
adc
pushf
adc
loope
add
fild
pop
shl
fs
ret
mov
add
nop
call
jo
cmp
add
(bad)
sub
jne
sub
or
dec
sbb
and
add
and
sub
xor
push
sbb
mov
sbb
add
(bad)
jo
add
adc
xchg
ret
retf
and
bound
or
cmp
mov
adc
je
pop
pop
sbb
popa
lods
jmp
das
arpl
and
pop
mov
pop
push
popa
loope
dec
inc
dec
add
mov
adc
ja
(bad)
ins
ins
jo
leave
cmp
aam
rol
movlps
js
sbb
sub
cmps
push
inc
push
fld
sbb
ret
mov
jo
xchg
and
sub
lfs
push
test
add
xchg
outs
ja
icebp
scas
dec
inc
jno
xchg
retf
ss
and
dec
fmul
and
adc
xor
dec
add
push
xor
jmp
leave
mov
dec
dec
fadd
inc
mov
xchg
lock
adc
jle
inc
sbb
imul
ror
sti
movs
(bad)
out
add
jmp
and
rcl
pop
popf
add
and
loopne
(bad)
outs
inc
mov
loopne
push
adc
inc
inc
mov
aam
sub
sbb
xor
adc
xor
mov
mov
das
ret
mov
jne
jnp
test
add
loope
outs
mov
test
pop
pop
int
add
popa
add
daa
jmp
fwait
xchg
inc
dec
outs
ins
mov
(bad)
cmp
(bad)
xlat
inc
mov
cmp
push
movs
cmp
jo
and
ins
ja
(bad)
jmp
xchg
lods
sbb
shr
ja
nop
or
dec
cmps
sbb
in
enter
sbb
psubsb
dec
sub
push
mov
and
daa
test
iret
loopne
mov
mov
or
dec
nop
dec
push
bound
or
add
clc
add
push
lahf
mov
pop
aas
dec
fs
fistp
xchg
add
adc
outs
sbb
dec
into
add
dec
jg
ss
or
pop
mov
adc
mov
inc
sub
in
mul
or
popf
dec
call
or
push
lahf
stc
test
adc
add
mov
sbb
pop
call
cmp
mov
aam
lds
or
mov
call
jo
and
dec
add
add
out
xchg
inc
push
fld
fsub
push
and
movs
nop
mov
sub
test
xor
pop
bound
dec
bound
adc
sbb
aad
mov
test
inc
sbb
push
xchg
mov
fcomp
test
pop
cmp
or
cmps
dec
and
pop
jmp
loopne
shr
and
mov
mov
jge
cli
rol
sub
xchg
and
xchg
test
and
inc
sub
add
mov
inc
or
stos
jp
mov
jg
inc
jnp
sub
push
addr16
sbb
xor
or
stos
daa
lea
aaa
xchg
inc
inc
js
shl
dec
sbb
add
add
mov
(bad)
or
add
or
sbb
jns
lahf
add
push
popf
adc
es
cmp
fdivr
int3
jmp
jo
imul
push
ins
add
dec
movs
(bad)
mov
call
mov
push
cdq
iret
sub
pop
sbb
push
lea
daa
loopne
mov
les
sbb
dec
jno
or
pop
mov
jno
pop
jo
mov
mov
out
in
pop
enter
in
sub
jmp
ret
fld
jl
(bad)
in
popa
adc
jmp
cmp
jns
adc
adc
aas
into
lea
inc
rcl
into
(bad)
add
or
mov
xor
outs
or
daa
mov
and
aas
arpl
or
cmp
sub
lods
mov
sub
add
je
inc
hlt
aam
add
add
add
and
inc
popa
add
dec
or
cmp
adc
inc
jne
cmp
test
sti
fcmovnb
out
int3
fwait
jmp
push
data16
add
lea
out
mov
scas
inc
jnp
shl
retf
shr
and
mov
pop
push
mov
call
je
xchg
adc
mov
or
pop
sbb
pop
ja
shl
or
aad
add
xchg
and
and
sbb
lahf
pusha
pop
sahf
out
add
push
fstp
fnstsw
sbb
loope
(bad)
sub
jbe
push
out
cmp
repz
jmp
nop
retf
in
push
in
push
out
out
push
push
add
jns
repnz
stos
stos
out
mov
scas
mov
cmc
cmp
idiv
stc
cli
rol
jnp
mov
rol
shr
outs
sub
rol
ror
jp
cmp
sub
test
ret
or
jno
and
jbe
fs
das
mov
adc
and
xchg
add
std
inc
cmp
mov
mov
mov
dec
dec
dec
sub
mov
inc
movs
dec
mov
sub
sub
add
add
xchg
add
pop
mov
mov
pop
xchg
ret
push
sbb
adc
jl
fdivr
or
pop
mov
mov
enter
out
sub
and
ja
add
mov
inc
mov
xchg
and
xchg
mov
cmp
enter
iret
jne
leave
xor
and
xchg
das
or
sbb
cmp
sbb
xchg
and
xchg
cmp
pop
adc
and
mov
mov
test
mov
call
ret
push
inc
xor
add
push
push
sbb
push
add
sub
xor
mov
push
fdivr
pusha
lods
sbb
call
and
je
push
dec
sbb
ss
add
push
and
dec
add
shl
mov
sbb
cmp
adc
and
daa
or
jo
enter
loope
nop
push
sbb
and
sub
mov
dec
in
jmp
sbb
cdq
dec
in
xchg
jmp
adc
lock
push
xchg
adc
iret
out
xchg
inc
lea
fld
jno
jns
out
inc
or
inc
jmp
inc
xor
in
xor
add
dec
cmp
add
in
out
add
or
mov
aaa
lidtd
dec
sbb
sidtd
fwait
out
inc
aas
inc
sub
inc
sahf
addr16
stc
dec
inc
mov
ins
dec
cmp
jo
jp
pop
adc
mov
push
xchg
push
sahf
lods
jl
loopne
out
and
xchg
or
pop
lock
loope
jg
sbb
dec
or
mov
mov
adc
(bad)
mov
std
adc
ins
jle
in
push
icebp
xor
mov
xor
mov
dec
ret
arpl
mov
mov
adc
out
cli
xor
add
push
push
sbb
cs
fmul
jnp
xchg
les
push
dec
jb
mov
sbb
lock
ss
ss
and
movs
jns
pop
aas
mov
or
fadd
adc
cwde
mov
fist
and
and
call
std
push
mov
and
push
add
and
cmps
ror
cmp
xor
pop
inc
je
pop
or
adc
adc
jp
xchg
test
inc
jae
rol
adc
sbb
imul
test
sbb
pop
clc
add
jb
lea
or
or
or
add
xor
std
or
jl
xor
push
push
xor
nop
add
fs
inc
mov
(bad)
push
inc
cmps
lea
mov
mov
and
xchg
std
sbb
enter
mov
leave
std
cmp
add
lea
std
xchg
xchg
or
or
jns
std
push
mov
pop
call
ret
call
mov
xor
cdq
ret
mov
add
ret
jnp
mov
addr16
rol
add
inc
or
mov
nop
jnp
or
lea
cmp
sbb
xor
lods
add
mov
ss
bound
dec
fisub
xchg
pop
sbb
inc
in
inc
adc
adc
stc
and
test
or
jmp
lahf
popa
sbb
push
xchg
es
inc
push
xchg
sbb
in
sbb
das
xchg
or
movzx
or
addr16
push
adc
test
push
push
fsub
xchg
ins
dec
imul
push
adc
fnstsw
mov
mov
lods
pop
test
jmp
ret
shl
jmp
adc
pop
lock
sbb
or
jmp
enter
sub
cdq
inc
add
les
adc
icebp
loopne
mov
adc
or
cs
sub
shl
lds
fwait
dec
clc
movs
inc
or
sbb
lods
pop
dec
or
movs
lods
shl
sbb
nop
popf
and
lock
jge
(bad)
sub
aam
ret
cmps
sbb
ins
jne
shl
or
test
add
push
push
leave
loope
jo
pop
ss
mov
mov
add
leave
(bad)
stc
nop
pop
fldenv
out
xor
xor
or
dec
add
pop
push
pop
adc
sbb
test
jbe
adc
xchg
jns
fiadd
inc
movs
(bad)
adc
push
nop
jmp
inc
jp
or
or
mov
mov
mov
mov
mov
and
sbb
hlt
aad
xchg
test
outs
pusha
sbb
nop
add
test
mov
imul
push
imul
pop
test
jg
dec
mov
mov
fild
dec
dec
mov
mov
adc
lds
cmovl
dec
nop
xchg
or
dec
inc
dec
inc
call
pop
dec
or
das
xor
jl
add
std
jl
test
jl
add
enter
sub
in
or
nop
(bad)
and
lock
lock
adc
ds
cld
add
or
jmp
jge
shl
push
mov
js
inc
add
dec
jp
or
mov
jno
aaa
cmp
push
adc
inc
rcl
and
adc
leave
cmp
xor
pop
or
imul
mov
(bad)
dec
popf
lea
mov
leave
cmp
(bad)
mov
js
pop
jbe
mov
adc
movs
popf
movs
inc
mov
xchg
fmul
mov
mov
xchg
pop
adc
push
daa
sbb
dec
xor
sbb
das
addr16
push
test
test
cdq
dec
and
mov
pop
mov
nop
push
jge
add
lods
inc
dec
stos
xor
mov
adc
dec
pop
rol
mov
adc
adc
movs
inc
cmp
or
mov
xor
add
sbb
jne
push
loopne
inc
mov
push
and
nop
pop
pop
mov
mov
sbb
in
nop
push
mov
inc
rcl
adc
sbb
add
sbb
das
inc
jmp
adc
adc
adc
ror
sub
stos
cmp
imul
std
push
rol
cmp
ins
add
xor
add
mov
mov
and
pop
pop
popf
mov
and
add
sub
and
test
imul
push
std
add
cmp
push
std
dec
or
add
call
icebp
dec
std
in
xchg
mov
and
sbb
dec
std
shr
push
adc
inc
jp
mov
mov
sbb
stos
sbb
movs
lods
push
mov
push
push
dec
std
dec
std
stc
retf
cmp
std
push
sbb
aas
or
pop
std
pop
jo
and
and
enter
sub
jo
ja
sub
adc
xor
and
nop
std
xchg
mov
nop
xchg
js
std
xor
xor
dec
inc
or
add
les
shld
xchg
iret
fisttp
xchg
fist
jne
mov
xchg
aaa
test
sub
push
adc
xor
mov
or
xor
sbb
in
sahf
pop
loope
cdq
addr16
adc
jge
fistp
adc
cmp
and
sub
dec
jmp
inc
pop
mov
out
push
sbb
test
hlt
inc
daa
jl
adc
rol
cmps
aas
push
push
dec
sahf
inc
dec
mov
or
lea
sub
ss
not
push
push
nop
ret
push
cmp
xchg
aam
femms
adc
sbb
jnp
cld
push
sub
xor
popf
out
push
inc
push
hlt
adc
adc
addr16
lahf
outs
dec
push
push
mov
mov
push
mul
mov
bound
dec
push
push
int
out
mov
gs
mov
pop
inc
sub
and
jo
pusha
push
getsec
xor
mov
jmp
ret
sbb
inc
pop
pop
imul
ins
mov
and
add
jge
lods
jae
call
sub
pop
or
pop
and
mov
mov
adc
sahf
int3
sub
mov
or
popa
int3
inc
adc
jecxz
clc
add
test
and
rep
sar
fild
inc
or
xor
xchg
add
sub
popa
inc
inc
fst
cmp
jge
dec
xchg
dec
jg
pop
jg
ins
shr
pxor
jmp
jle
inc
pop
popa
nop
sbb
jg
adc
push
jmp
push
test
xchg
pusha
jo
mov
mov
adc
xchg
aas
cmp
movs
jbe
push
pop
inc
loope
adc
push
sbb
fisttp
adc
adc
lahf
or
adc
sbb
mov
push
sub
sbb
shl
sub
sbb
popa
xchg
add
push
and
and
dec
rol
loopne
cmp
arpl
daa
in
aaa
adc
or
or
dec
inc
mov
test
mov
ss
jg
aaa
xor
inc
and
jl
lock
loopne
and
mov
pop
and
mov
mov
in
pop
pop
and
fs
adc
mov
inc
adc
add
dec
adc
and
sub
adc
and
cmp
(bad)
push
push
push
mov
jg
adc
test
repz
pop
jno
pop
rcr
enter
or
xchg
or
loopne
in
test
and
push
mov
cmc
movs
mov
nop
in
inc
cwde
mov
pop
push
cmp
call
sbb
xor
or
sbb
dec
ins
pop
pop
inc
add
js
fsubr
or
xor
jle
inc
cs
fsubr
loopne
iret
cwde
and
or
jecxz
push
daa
dec
xchg
xchg
les
repnz
or
mov
loope
popf
jb
outs
or
loopne
icebp
test
push
shr
dec
imul
add
test
xchg
push
push
add
je
push
movs
and
xchg
and
sub
retf
movs
xchg
mov
rcr
add
mov
mov
ins
loopne
movs
lahf
add
scas
es
xchg
gs
push
push
clc
ret
fisttp
xchg
jmp
pop
inc
pop
mov
cdq
mov
mov
jle
mov
repnz
fidivr
mov
adc
pop
mov
add
fcomip
out
pop
mov
sbb
sub
or
push
add
or
add
push
ins
pusha
xor
sub
and
cmp
sub
xlat
or
and
pop
movs
and
add
xor
and
mov
adc
arpl
mov
inc
(bad)
jne
pop
or
int
leave
sti
mov
jge
arpl
es
sbb
ja
xchg
and
je
pop
cs
dec
repnz
jne
arpl
jge
pop
mov
imul
sbb
bound
mov
hlt
mov
bound
mov
push
dec
xor
sbb
xor
adc
add
or
js
(bad)
ror
adc
dec
xor
dec
add
js
(bad)
retf
mov
ins
dec
int
or
loop
loopne
and
add
jnp
add
ret
cdq
js
cwde
std
and
xchg
dec
dec
stc
add
inc
loope
mov
ret
es
mov
lock
dec
add
dec
dec
cmps
ins
gs
mov
cmp
pushf
sbb
aam
test
mov
pop
stos
or
add
sar
test
loope
ins
or
(bad)
ss
jae
sbb
add
test
mov
adc
shl
dec
jmp
std
sub
or
lods
adc
(bad)
unpcklps
xor
test
sbb
pusha
adc
sbb
push
dec
or
(bad)
aad
jbe
cld
neg
rcr
jl
xor
push
aam
push
mov
xchg
or
pop
wbinvd
call
inc
dec
mov
shr
test
mov
add
fld
lds
pop
xchg
or
adc
(bad)
mov
call
add
push
mov
and
stos
fmul
sti
add
dec
pop
or
sbb
js
inc
aam
xor
fild
xor
in
ja
jne
cmovno
sbb
or
push
push
call
sbb
add
pop
xchg
add
repz
movs
stos
add
add
lahf
sahf
test
movs
add
and
cwde
jmp
mov
daa
mov
cmp
and
jnp
and
(bad)
xlat
adc
sub
mov
jmp
sbb
jo
xchg
adc
fwait
imul
xor
or
or
sub
adc
icebp
ror
sbb
jmp
adc
ins
leave
in
imul
and
fcmovnu
pop
adc
xchg
or
push
cli
mov
and
and
xchg
xcrypt-cfb
cmps
addr16
pop
pop
ss
xchg
or
inc
aaa
or
mov
and
jg
cld
inc
ja
mov
push
xchg
pop
xor
add
dec
mov
dec
mov
adc
xor
fs
test
jne
cmps
add
mov
and
movs
or
inc
pop
dec
jmp
push
jb
fwait
bound
hlt
gs
fwait
jo
pop
push
outs
ret
addr16
push
or
push
jg
xchg
(bad)
cmp
push
lahf
fsubr
pop
cdq
inc
mov
loopne
outs
mov
pop
lods
push
retf
xchg
xlat
cwde
xchg
dec
pusha
cmp
lock
imul
sbb
aaa
lods
mov
mov
mov
rep
inc
push
jmp
pop
inc
jb
hlt
ror
adc
add
stos
mov
add
push
in
fwait
dec
nop
sbb
popa
(bad)
jp
nop
mov
dec
and
rcl
test
jo
jg
and
paddusb
push
cmp
sbb
pop
xchg
sbb
pushf
or
and
push
test
push
dec
ret
aam
ret
sub
sub
cmp
aas
mov
ror
xlat
push
imul
mov
xor
sub
sub
xor
mov
pushf
jg
call
adc
pop
in
add
sub
(bad)
lock
mov
jge
inc
rep
xor
inc
call
iret
jne
neg
and
jp
xchg
push
xchg
shl
ss
pop
(bad)
mov
inc
push
mov
ret
cmps
test
cmp
sbb
lock
pop
add
jnp
jne
cmp
aas
mov
add
and
jg
add
iret
idiv
movq
push
dec
adc
push
and
repz
movs
xor
dec
push
pop
and
data16
jl
inc
or
jbe
jle
xor
clc
out
in
outs
ja
jo
mov
mov
stc
mov
xchg
aas
and
mov
addr16
test
xor
or
lea
mov
add
mov
sub
sbb
adc
adc
mov
jne
mov
jns
inc
push
pushf
ins
or
pop
add
mov
hlt
or
dec
cmove
sub
adc
inc
sar
add
and
adc
push
aas
add
add
mul
sub
dec
inc
xlat
inc
int
adc
xor
or
jle
test
int3
jmp
and
fadd
cli
add
adc
je
sbb
stc
push
inc
or
jg
jo
add
jg
mov
sbb
int3
ret
inc
dec
sub
xor
cmp
bound
and
ja
aaa
dec
movs
mov
les
push
or
pop
mov
dec
or
fcom
inc
sbb
cmp
adc
adc
cmps
sub
and
xchg
mov
lock
fs
lahf
nop
ss
aaa
pusha
mov
dec
adc
push
pop
push
rol
or
and
ins
jnp
adc
cmp
xor
retf
rcr
push
mov
loope
and
jle
lock
call
(bad)
aad
inc
push
cmp
fucomip
push
mov
and
sahf
(bad)
clc
mov
lea
js
pop
nop
push
fmul
loop
arpl
xchg
push
push
mov
dec
xchg
rol
daa
or
fdiv
sbb
or
dec
fild
jg
call
mov
push
push
aaa
or
mov
outs
adc
pop
outs
or
jbe
or
shr
test
xor
imul
adc
sbb
pusha
cmp
inc
sbb
sub
and
xchg
pop
add
xchg
sub
add
add
cmp
adc
test
rcl
xchg
xor
or
add
adc
dec
inc
push
fld
shr
and
mov
sub
test
cwde
mov
adc
add
pop
adc
dec
sbb
sbb
mov
mov
mov
test
xchg
jne
mov
xor
xor
test
fmul
std
test
adc
add
mov
sub
sbb
mov
out
adc
inc
adc
dec
clc
ss
daa
sar
imul
icebp
adc
dec
xor
inc
(bad)
das
add
mov
ins
dec
sbb
dec
push
scas
jno
add
adc
fcomp
or
jbe
adc
jmp
shl
cli
dec
bound
push
dec
or
int3
push
mov
mov
mov
and
call
mov
pop
xor
add
dec
imul
sub
out
mov
lock
ins
test
xor
add
lock
lea
adc
push
adc
adc
inc
xlat
push
inc
scas
int
mov
mov
and
in
push
rol
sub
mov
mov
mov
jg
and
mov
inc
xchg
mov
cmps
xor
xor
adc
or
mov
cmp
cmp
pop
sbb
mov
les
psubusb
fcmovnb
cld
xor
sbb
jmp
sub
ins
jp
sti
fs
add
add
inc
icebp
push
rol
sbb
leave
(bad)
sbb
cdq
xchg
popa
adc
shl
jp
icebp
jns
push
rol
add
cwde
mov
cmp
inc
int
adc
dec
adc
add
dec
or
lods
cmps
and
dec
add
adc
push
movs
mov
push
adc
xor
xor
cmp
inc
inc
fdivr
adc
aam
add
out
(bad)
dec
and
and
ror
ins
sub
or
cmp
adc
cmp
jns
ret
cmp
xor
and
in
inc
push
add
lahf
or
adc
xor
push
cmps
fld
(bad)
hlt
call
inc
mov
push
xchg
ins
sbb
push
mov
or
push
cmp
dec
cmps
xchg
in
sub
aaa
mov
test
(bad)
rcl
inc
or
mov
in
push
xchg
cs
and
mov
mov
movs
sub
je
or
loope
add
pop
gs
sub
adc
outs
shr
(bad)
les
in
dec
jecxz
xor
jl
jmp
xor
and
or
mov
or
jnp
add
enter
add
fld
aam
sub
or
shl
mov
movs
add
or
mov
adc
nop
inc
addr16
pop
xchg
dec
add
icebp
or
mov
(bad)
xchg
dec
add
push
add
sbb
(bad)
mov
inc
cmp
movs
ins
jno
dec
sti
xchg
add
nop
dec
ins
cld
xchg
jmp
stos
call
jmp
lahf
push
cld
and
inc
dec
pop
sub
and
or
test
repz
cmovo
scas
or
cmp
mov
mov
jg
rcl
inc
clc
sub
leave
adc
imul
dec
push
es
push
and
xchg
ret
sti
adc
dec
mov
or
mov
inc
fwait
mov
xchg
or
push
and
mov
add
aad
add
dec
add
push
pop
ret
pop
add
or
and
sbb
sbb
jmp
pusha
inc
or
dec
add
retf
and
pushf
adc
jle
stos
and
aad
add
mov
push
sub
mov
mov
push
xor
xor
int3
jne
mov
add
pop
outs
push
push
push
push
outs
or
xor
cmp
push
fist
mov
pop
test
sbb
cmp
je
xchg
sub
in
xor
cli
adc
bnd
lea
and
cmps
or
cmp
cmp
push
in
inc
add
mov
add
sbb
lock
ins
jle
adc
add
push
lock
stos
je
or
enter
inc
shr
push
adc
(bad)
sar
(bad)
fiadd
dec
dec
and
push
push
jno
pop
fst
(bad)
push
mov
or
cs
mov
or
xor
xor
mov
rcr
sbb
sahf
and
icebp
mov
push
inc
cmp
or
cmp
out
clc
inc
mov
das
push
mov
push
pop
retf
sub
rcl
je
adc
inc
or
lahf
rol
pop
mov
and
push
xchg
bswap
fs
xor
jne
dec
sub
lea
inc
push
and
(bad)
mov
inc
mov
or
mov
aaa
sub
sub
shl
dec
sbb
imul
pop
jnp
movs
adc
sub
add
call
test
or
dec
add
sub
dec
jne
or
mov
adc
ss
(bad)
or
add
cmps
movs
push
dec
fwait
adc
jb
icebp
add
adc
and
xor
adc
push
or
xchg
dec
inc
fild
dec
push
pop
shl
and
and
hlt
pop
mov
js
or
sub
adc
in
adc
dec
adc
sbb
ror
jnp
add
pop
cmp
jg
inc
mov
je
pop
shl
movs
ror
shl
mov
add
xor
and
lock
imul
mov
jae
push
push
xor
retf
sub
inc
gs
test
retf
xchg
adc
mov
xor
cmp
add
cmp
call
dec
add
sbb
mov
ftst
jmp
adc
adc
mov
fild
mov
xchg
mov
mov
sbb
and
sub
cmps
test
xchg
cld
icebp
mov
das
xchg
sbb
mov
jl
add
mov
ss
call
push
loope
and
lds
aaa
inc
mov
pop
and
xchg
adc
pop
add
dec
pop
add
add
add
add
push
aaa
sahf
or
ret
sbb
int3
xor
adc
fcom
inc
lds
adc
push
fadd
test
xchg
or
pop
push
inc
or
aam
push
push
and
ret
cmp
and
jne
sub
and
test
pop
pop
mov
mov
rcl
inc
sar
mov
popa
adc
cmp
pop
adc
push
cmc
dec
push
or
lods
adc
inc
dec
sbb
add
cmps
sub
mov
loopne
ror
xor
dec
or
push
les
out
arpl
jmp
daa
rol
mov
(bad)
pmaxsw
xor
cdq
add
sub
sbb
jmp
jbe
push
mov
xor
pop
or
loopne
mov
popa
rol
xchg
leave
inc
xor
add
sub
sub
sub
rol
jmp
inc
cwde
push
pusha
aas
dec
pop
push
mov
jp
add
ins
mov
xchg
xor
and
mov
test
clc
xchg
movs
fisubr
imul
rol
pop
(bad)
push
push
xchg
and
ins
cmp
mov
mov
in
xchg
adc
(bad)
pop
add
push
fwait
xor
add
add
or
pop
adc
pushf
pusha
imul
push
and
xchg
mov
cmp
pusha
dec
pop
test
or
or
add
push
jp
adc
fistp
pop
imul
add
cdq
mov
xchg
inc
xchg
mov
mov
sbb
mov
out
test
adc
loopne
test
fbld
add
mov
test
xlat
xchg
push
mov
lock
inc
or
jo
and
je
and
sbb
adc
inc
sub
popa
mov
imul
xchg
lea
sbb
and
and
loop
in
rcl
ss
xchg
(bad)
sub
lds
mov
sub
sbb
inc
sbb
adc
sar
xchg
mov
jmp
push
mov
clc
jg
cs
lock
fcom
jle
mov
not
add
add
push
cs
or
inc
add
js
push
outs
adc
daa
lods
or
nop
fsub
xor
adc
xor
sub
dec
adc
mov
xchg
and
fistp
lds
xchg
pop
add
inc
push
retf
xor
lds
jno
inc
cdq
pop
and
push
es
lock
dec
int3
xchg
sar
stos
in
mov
dec
add
add
inc
das
test
cmp
pop
adc
jmp
adc
inc
in
sar
pusha
mov
inc
lahf
jbe
es
adc
rol
or
dec
cwde
add
mov
(bad)
sahf
imul
add
xchg
mov
or
aas
cld
adc
jmp
dec
add
xchg
sbb
inc
repnz
jmp
ret
rcl
mov
shr
and
retf
add
shr
hlt
hlt
ret
inc
mov
hlt
jmp
hlt
mov
fcmovnb
add
cmp
mov
call
mov
inc
jge
dec
mov
rcr
stc
or
mov
jp
and
nop
sub
fbstp
ror
sete
pop
enter
sbb
cmp
add
enter
add
aaa
dec
enter
gs
dec
daa
and
jmp
lods
pushf
mov
adc
enter
mov
enter
xor
mov
stc
mov
lock
jmp
enter
mov
cs
rcl
fmul
sub
hlt
test
mov
iret
adc
loope
pusha
mov
or
and
cld
lea
push
shl
and
push
xchg
and
dec
(bad)
js
out
adc
jnp
inc
adc
test
or
cmp
inc
sbb
add
sbb
adc
and
lock
add
mov
out
inc
sub
and
jo
sub
push
or
xchg
dec
jp
test
pop
pop
add
add
ins
mov
sub
push
ret
retf
ja
inc
and
mov
adc
popf
inc
(bad)
jmp
sub
xchg
es
lahf
hlt
sbb
adc
jo
cmp
sub
inc
adc
jecxz
addr16
retf
stos
cmp
and
xor
mov
int3
gs
aam
xchg
popa
adc
mov
mov
mov
push
icebp
hlt
jae
frstor
bound
xor
and
or
pop
in
(bad)
loopne
adc
xchg
popa
add
rol
cmps
pop
add
or
cwde
and
push
cmp
fcomp
loop
jne
aad
pop
fild
icebp
mov
arpl
adc
or
cmovo
cmp
mov
cmp
dec
inc
nop
ror
mov
gs
and
shl
dec
push
inc
pop
jo
lea
fdiv
cmp
int
sbb
dec
dec
nop
inc
sbb
xor
jne
or
jmp
psubusb
imul
fst
clc
sbb
and
pop
fisubr
fist
and
ja
or
int3
lds
test
jge
ins
sub
ret
inc
popa
enter
fnstcw
sbb
int3
mov
mov
jo
popa
int3
mov
movs
daa
popa
fadd
push
int3
mov
pushf
add
mov
popa
xchg
paddusb
and
in
rol
push
js
les
adc
xchg
fcomp
jge
add
push
pmulhuw
stos
shl
popa
add
pop
scas
scas
push
lock
adc
movs
cdq
inc
add
adc
and
dec
inc
fsubr
cld
inc
pusha
dec
daa
imul
add
cmp
shr
mov
das
jo
jo
or
daa
in
rcl
add
aad
arpl
sbb
sbb
in
adc
xor
popa
pop
xor
fstp
sub
push
clc
push
xchg
ins
es
js
mov
les
enter
adc
pop
inc
add
push
dec
push
adc
int3
adc
and
ds
inc
xor
jne
pop
imul
push
lahf
add
pop
cmp
ins
jne
stos
or
push
popa
test
in
lds
inc
push
stos
sub
test
adc
push
jmp
test
mov
inc
cmps
ss
inc
adc
into
mov
hlt
jbe
xor
xchg
movs
aaa
push
jg
add
xchg
nop
gs
adc
add
cmp
into
sub
and
jp
xchg
sbb
adc
lods
jne
(bad)
push
arpl
add
jg
leave
ss
fnstsw
mov
or
xchg
psubsb
jl
xlat
xchg
jge
inc
inc
push
fsubr
test
in
wrmsr
pop
icebp
aas
jge
adc
sbb
retf
adc
mov
inc
std
nop
or
add
push
hlt
fs
add
mov
mov
hlt
or
inc
in
pop
inc
ret
adc
ja
sub
pop
and
inc
loope
xor
or
add
sub
repz
lock
add
shr
xor
in
paddusb
dec
sub
sub
sbb
inc
in
cmps
jno
mov
rol
mov
xor
add
cmp
popf
aas
and
inc
nop
or
mov
mov
icebp
and
jns
mov
js
loopne
inc
add
push
mov
pusha
and
adc
and
add
mov
add
rol
addr16
movs
mov
cmp
mov
xchg
inc
in
fdivr
mov
inc
xchg
ins
xor
fcomp
or
dec
mov
int
pusha
add
rol
cmp
and
lods
fimul
fnsave
and
out
(bad)
add
cmps
mov
push
jle
mov
push
aaa
xchg
mov
rol
clc
xchg
enter
jecxz
clc
pop
push
das
jo
sub
js
jmp
cmp
adc
nop
xchg
clc
mov
add
pop
pushf
add
outs
and
add
and
add
mov
jbe
lds
xchg
dec
ins
rcr
cmc
push
adc
sbb
aaa
push
nop
adc
add
fmul
outs
mov
xor
scas
cld
pop
push
fcmove
xor
call
bound
inc
push
xor
shr
fld
mov
add
test
or
ret
fcmovnu
(bad)
push
jbe
inc
or
pop
push
xlat
fprem
push
je
test
xor
push
jnp
arpl
das
xor
add
push
sbb
adc
inc
cli
movs
ror
cdq
add
inc
(bad)
jmp
pop
mov
fist
daa
sbb
gs
dec
mov
addr16
mov
push
mov
repz
cld
addr16
jo
push
pop
add
mov
mov
and
add
int
sub
sbb
enter
sub
jns
ss
mov
add
sub
es
lock
or
cmp
pop
or
mov
jg
ret
aam
call
rol
mov
inc
test
rcl
sbb
aam
adc
aam
pop
push
xchg
les
sub
imul
mov
push
push
cld
rol
inc
fild
pusha
icebp
adc
test
inc
cmps
jno
or
(bad)
sbb
sub
(bad)
and
jmp
xchg
or
mov
push
xor
adc
aas
push
pop
mov
std
mov
neg
aad
sub
or
test
adc
cmps
add
sub
mov
and
cwde
les
loope
jg
inc
ret
cmp
inc
mov
mov
add
push
push
test
leave
inc
and
mov
or
call
dec
lea
add
movs
mov
shr
mov
pop
retf
mov
cmp
mov
adc
ds
sub
pusha
fimul
ret
mov
outs
cwde
xor
out
dec
retf
cmps
loopne
mov
add
scas
sub
xchg
test
test
or
outs
out
les
lea
mov
mov
jne
aam
psubw
add
les
push
jno
clc
xchg
leave
aam
lods
ins
loop
sub
dec
cli
dec
fdivr
pop
pop
xor
mov
fstp
dec
imul
add
xchg
inc
rcr
(bad)
mov
inc
into
mov
xor
sbb
rcl
rcl
loopne
dec
pop
xor
mov
inc
lock
test
sub
or
or
fprem
(bad)
pop
xchg
in
inc
add
mov
fld
sbb
aam
out
xor
clc
(bad)
adc
lea
inc
mov
(bad)
out
aam
fidiv
loopne
cmc
mov
inc
mov
lds
inc
and
cmp
cwde
mov
(bad)
fsubr
repz
jmp
sti
lods
movs
inc
dec
cmp
dec
rcr
jge
jne
inc
sbb
mov
lock
push
outs
mov
jl
test
int3
retf
jp
cld
xor
pop
push
repz
dec
adc
and
mov
cmp
shl
xchg
cmp
gs
inc
and
shr
add
pop
xchg
cmp
shl
mov
adc
inc
sbb
jecxz
(bad)
jmp
add
sub
outs
mov
inc
shl
push
movs
cs
add
sub
mov
mov
add
sar
cmp
fbstp
jo
mov
xchg
and
add
in
or
adc
xchg
stos
lds
loopne
add
fidiv
movs
mov
jge
add
ins
add
push
imul
push
out
and
inc
out
jne
push
or
xchg
or
xor
mov
or
dec
xor
pop
sub
jbe
cmp
jecxz
loop
dec
test
not
mov
popa
mov
test
pusha
pusha
cmp
mov
addr16
in
sub
pop
push
adc
mov
ror
mov
or
sub
jge
inc
out
sbb
jne
outs
ret
addr16
das
pop
cmp
je
nop
sbb
inc
push
aaa
cmp
xor
or
add
ret
inc
adc
push
mov
mov
xor
stos
jae
loop
sub
je
jg
je
fmul
or
xchg
push
neg
lods
push
or
xlat
add
xor
das
cmp
adc
push
xchg
push
daa
mov
shl
imul
sti
cs
mov
or
jns
sub
(bad)
sti
scas
je
cmp
sbb
popa
dec
dec
sbb
popa
and
add
jns
cld
scas
je
cwde
or
sbb
mov
imul
test
inc
push
adc
inc
ret
or
mov
xor
scas
imul
mov
add
dec
lahf
shr
adc
pop
dec
mov
and
xor
mov
enter
cld
cmp
hlt
inc
fstp
mov
int
pop
sbb
cmp
and
popa
js
shl
or
ror
or
or
xchg
stos
and
das
mov
jecxz
pop
cmp
or
jo
rcl
in
add
pushf
sub
mov
aam
aas
xchg
jg
clc
and
add
mov
or
add
jg
jb
xor
fsubr
push
enter
mov
test
or
mov
push
fstp
add
fisttp
jmp
sbb
rcl
mov
lock
pop
in
aas
jb
push
aam
or
sbb
sbb
xchg
add
jmp
ins
fwait
or
cmp
jecxz
mov
in
outs
out
dec
clc
xchg
imul
jno
pop
nop
push
scas
movs
add
sub
cmp
arpl
outs
pop
outs
or
jne
push
xlat
push
push
push
jne
fldenv
jecxz
cmp
xchg
sub
jb
mov
enter
cmp
sub
adc
jmp
and
jmp
add
xor
xchg
or
pop
cmps
or
add
push
mov
and
dec
nop
call
shl
or
clc
sub
dec
jmp
dec
xchg
cmp
xchg
ss
or
invlpg
mov
xchg
ror
add
lods
mov
inc
adc
rcr
popa
inc
ret
inc
jb
lods
mov
push
or
mov
shr
xchg
inc
lea
add
add
sti
mov
adc
mov
adc
xor
je
mov
adc
test
mov
cdq
push
out
or
inc
out
mov
mov
es
test
and
add
add
add
(bad)
adc
repz
cmp
loopne
cmp
add
sbb
push
sub
es
xchg
sbb
jmp
shl
adc
mov
mov
fwait
dec
add
rol
iret
mov
cmp
add
clc
adc
clc
or
fisubr
add
rol
push
xor
xor
movs
adc
or
test
fwait
pusha
mov
int3
push
(bad)
cmps
test
jmp
xchg
test
xchg
es
mov
push
add
push
mov
mov
add
add
xor
push
and
or
adc
add
or
dec
pop
mov
xchg
or
out
bound
mov
ja
std
adc
push
add
or
test
add
test
push
ins
jne
inc
add
popf
sbb
dec
gs
pop
mov
in
mov
adc
jecxz
popa
cli
rcl
icebp
pop
in
add
inc
lods
sub
shl
cmp
and
sbb
inc
test
ror
mov
sti
scas
fstp
inc
or
push
inc
daa
cmp
jns
pop
lods
int3
clc
jae
or
or
sahf
inc
jne
fwait
enter
add
push
push
jp
mov
pop
xlat
aas
inc
mov
enter
out
mov
xor
xor
mov
adc
js
mov
push
inc
loope
rcl
add
push
add
dec
jp
mov
hlt
les
cmp
jbe
or
and
mov
xor
sub
fs
stos
sbb
adc
pop
jmp
dec
sub
adc
sbb
or
adc
imul
inc
ins
and
jmp
sub
xor
pop
mov
add
sub
push
jnp
or
add
inc
(bad)
pop
movs
lea
sub
or
(bad)
fs
adc
(bad)
jmp
stos
mov
clc
lock
je
sub
fs
cli
pop
dec
inc
jo
fs
test
mov
inc
add
test
xor
pop
push
mov
sub
mov
push
pop
xor
test
in
ror
mov
jb
sub
add
push
push
fucomp
enter
int
cmp
add
mov
mov
movs
jne
sbb
dec
inc
pop
inc
fisttp
sbb
loopne
add
sbb
rcr
data16
xor
mov
rol
test
lahf
push
sbb
jmp
movs
xor
add
loope
clc
dec
xchg
in
shr
addr16
dec
or
cmps
mov
cmc
push
rol
sbb
and
sub
ins
imul
mov
xchg
inc
xor
ret
xor
fisub
imul
sahf
clc
repnz
push
xlat
arpl
add
mov
cmp
mov
lods
mov
pminsw
or
adc
lods
or
or
das
sbb
fwait
inc
dec
and
adc
sbb
test
int3
or
jns
adc
and
push
sbb
push
inc
leave
or
and
or
add
and
ja
ret
loopne
and
dec
fst
ins
push
cmp
jae
mov
add
ret
xchg
mov
pop
push
jae
xor
push
popf
loopne
shl
(bad)
loopne
loopne
call
add
inc
push
dec
cmp
push
movs
or
mov
aam
and
push
jne
mov
sbb
add
jmp
lea
pushf
ret
test
pop
add
push
mov
and
adc
loopne
mov
dec
xor
mov
gs
xchg
mov
or
addr16
pop
mov
adc
xor
mul
mov
rcr
push
test
or
mov
xchg
mov
rcr
inc
push
aas
shl
and
push
aas
ret
push
xlat
sbb
js
test
or
adc
add
mov
inc
or
inc
push
dec
push
fnstcw
ret
xchg
dec
push
mov
nop
mov
inc
pop
adc
sub
xor
cmp
fcom
movs
xchg
ror
aaa
ret
pop
out
mov
lods
sub
add
pop
popa
lods
pop
test
adc
and
and
std
out
sub
rol
push
bnd
les
ret
mov
adc
es
es
sub
es
xor
xor
inc
inc
adc
or
mov
inc
aaa
sub
inc
popa
je
or
ja
pop
jmp
sar
movs
sub
retf
es
sar
dec
pop
inc
sub
or
cld
push
inc
cmc
mov
push
cdq
es
cmp
add
xor
push
ret
rol
retf
and
mov
jge
test
scas
popa
loopne
gs
ret
or
inc
add
pop
push
sub
popf
aam
xchg
cmp
retf
mov
push
add
mov
je
daa
dec
push
cmp
lock
sub
fisub
xchg
sbb
cld
pop
js
shr
inc
xchg
rol
jg
aad
xor
mov
mov
adc
outs
test
cmp
adc
in
or
and
adc
in
and
ins
lock
popf
leave
and
stos
movs
loope
inc
sbb
adc
xchg
xor
lock
jge
inc
or
mov
sbb
mov
add
xchg
daa
pop
ja
shl
pusha
inc
jge
movs
cmp
das
leave
mov
add
es
popa
sbb
scas
jecxz
clc
mov
jg
add
loopne
dec
mov
push
stc
sbb
fiadd
inc
popa
es
ja
sbb
xor
fld
add
mov
aad
cmp
inc
aam
cmp
inc
(bad)
pand
es
rcl
pminsw
adc
add
push
jae
dec
or
adc
adc
add
ja
add
jne
inc
push
nop
out
mov
or
xchg
add
sub
cld
push
push
mov
je
inc
test
push
lods
leave
shr
xchg
pop
fld
sub
(bad)
(bad)
dec
pop
inc
xor
add
inc
jne
sbb
pusha
in
rcl
adc
std
enter
push
adc
std
add
add
push
push
or
imul
dec
mov
add
repz
cwde
dec
loop
xor
mov
jg
xchg
add
mov
sti
sub
jo
inc
jns
or
jg
lds
iret
mov
test
jle
repz
ja
shl
es
enter
add
adc
add
push
cmp
rcr
or
pop
or
or
rcr
mov
and
cmp
and
inc
sar
in
xor
movs
jge
lahf
add
add
(bad)
jnp
test
inc
mov
ds
jle
xchg
sub
adc
sbb
adc
add
or
mov
xchg
add
repz
xor
mov
in
add
cwde
retf
jg
rcr
js
or
push
shl
adc
or
ret
stos
loopne
sub
or
cmps
sub
call
xor
and
icebp
daa
lock
jo
shl
sbb
int3
and
loopne
add
or
add
xchg
inc
lea
imul
jge
xchg
add
mov
adc
cmp
inc
test
xchg
aaa
int
or
loopne
in
push
push
pop
rcr
daa
popa
add
aaa
jl
adc
xor
inc
pop
xor
mov
jns
sar
jl
pop
ins
jne
jg
sub
dec
inc
or
jb
in
inc
pusha
push
ja
or
sub
or
mov
xor
pop
cmp
ror
or
adc
rcl
(bad)
mov
jns
inc
push
shl
adc
enter
cld
mov
cmps
jecxz
lods
scas
iret
rol
imul
ret
inc
mov
icebp
adc
imul
add
mov
(bad)
sub
add
pusha
test
or
lea
sbb
nop
push
cmp
rol
mov
imul
movs
or
sub
hlt
aaa
sbb
adc
aaa
adc
test
add
les
(bad)
mov
inc
outs
sbb
sub
mov
outs
add
pop
add
loopne
clc
jecxz
clc
inc
icebp
add
mov
xlat
cmp
leave
rol
adc
test
mov
loopne
add
xor
clc
sub
xchg
jle
ret
lods
mov
sub
dec
adc
inc
sbb
dec
inc
dec
inc
pop
adc
push
(bad)
loopne
add
and
popa
or
sbb
inc
mov
dec
push
rol
jmp
mov
mov
adc
cmp
push
jge
popf
pop
mov
xchg
push
jge
or
mov
pop
jecxz
or
(bad)
popa
fadd
sub
and
jmp
ss
add
pop
jno
push
sub
test
ret
sub
push
pop
sbb
mov
mov
jne
jno
adc
(bad)
mov
or
dec
cdq
inc
lods
add
shr
add
push
xchg
jge
push
pop
inc
test
mov
or
(bad)
pop
cmp
test
jns
sub
pushf
add
outs
les
jno
jecxz
mov
xor
adc
sbb
and
inc
add
fldcw
stos
add
add
imul
push
(bad)
push
cld
push
(bad)
cmp
test
add
cmp
mov
xchg
stos
xor
enter
xor
jnp
cmp
lea
adc
add
mov
xchg
and
iret
push
add
mov
pop
add
stos
inc
sbb
and
in
cmp
aas
sbb
add
add
pop
pusha
xchg
aam
mov
push
cmp
inc
or
push
(bad)
jl
sub
pop
mov
add
adc
push
or
pop
lock
add
aaa
adc
dec
sbb
mov
ins
movs
add
pusha
retf
aaa
in
lock
adc
sahf
push
add
(bad)
loope
push
xor
cdq
cmp
xchg
pop
add
cmp
pop
and
add
jns
call
adc
and
ss
dec
mov
cmp
inc
xor
jb
daa
ds
add
lds
add
(bad)
xchg
xchg
out
push
dec
sbb
retf
add
fstp
xor
add
fs
add
fmul
push
add
xchg
aas
stos
and
jecxz
out
push
jno
pop
and
sbb
adc
push
in
daa
add
(bad)
adc
jge
(bad)
icebp
shl
add
je
or
aaa
jle
and
ja
popa
adc
sbb
outs
mov
dec
jmp
jns
push
imul
(bad)
push
dec
jg
adc
xor
jne
adc
add
frstor
push
mov
jns
dec
popa
mov
inc
cld
add
imul
cmc
addr16
imul
mov
cdq
add
lock
inc
or
mov
adc
push
adc
fcom
mov
xor
jno
xor
rcl
mov
pop
mov
aaa
sub
clc
test
inc
test
ins
(bad)
sub
adc
ja
es
and
shl
add
cwde
sub
xor
fist
test
sub
jg
adc
adc
outs
xor
pop
mov
gs
sbb
inc
sti
sub
pop
add
ret
xor
fs
call
add
call
mov
sub
jmp
pop
jmp
and
cs
and
mov
xor
xchg
and
jne
cld
sub
or
pop
ret
adc
add
pop
ins
pop
xchg
popa
lahf
(bad)
fsubr
and
sbb
adc
add
test
xor
and
popf
(bad)
jne
mov
lods
and
and
and
or
mov
and
sub
int
out
jl
mov
jmp
add
fbstp
and
inc
add
pop
mov
nop
push
inc
ja
cmp
pcmpeqw
adc
fiadd
add
loopne
in
mov
add
cmovle
xor
imul
js
bound
and
jmp
push
ret
pushf
(bad)
or
rol
icebp
enter
jmp
clc
add
test
inc
inc
nop
sahf
xchg
mov
push
rol
jmp
movs
adc
add
and
mov
test
(bad)
or
or
adc
stc
push
clc
mov
xor
and
mov
outs
sub
cmp
mov
sbb
fisttp
jg
jnp
or
loop
jnp
mov
adc
jo
(bad)
arpl
adc
stos
pusha
jg
retf
push
jmp
ins
movs
test
fcmovnbe
je
fadd
call
push
sbb
adc
or
push
(bad)
mov
fwait
xchg
sub
and
fld
mov
sbb
mov
jne
leave
test
not
vmovshdup
dec
jmp
mov
mov
dec
and
mov
mov
leave
sahf
fist
sub
push
cmp
or
ret
rcr
dec
inc
lahf
inc
pusha
adc
mov
dec
cmp
fs
enter
(bad)
lods
and
inc
inc
rol
push
inc
jne
cwde
add
mov
pop
adc
and
add
or
mov
clc
test
mov
clc
mov
adc
inc
or
popa
and
fs
fnstcw
loop
adc
xor
popf
clc
sub
loop
mov
data16
mov
mov
or
sub
sti
fisttp
jo
cli
adc
push
arpl
mov
sbb
sub
xor
retf
aaa
sti
out
shl
mov
iret
push
or
and
leave
mov
xchg
icebp
aaa
adc
aaa
inc
inc
sbb
sub
dec
add
mov
mov
arpl
jbe
add
je
and
or
retf
dec
ins
cmp
retf
shl
push
sbb
and
push
xchg
xchg
dec
and
popa
push
xchg
or
clc
test
das
or
inc
les
xchg
cmps
int3
mov
xchg
add
fcmovne
aad
add
add
mov
mov
adc
pop
mov
cmp
sbb
adc
xor
ins
push
push
mov
gs
(bad)
xor
add
xchg
shl
or
loopne
xor
test
(bad)
or
mov
loope
icebp
cmp
or
into
es
sbb
push
das
push
push
adc
adc
(bad)
blcs
shr
dec
or
and
xor
xchg
and
nop
test
stos
sti
dec
rol
mov
nop
cdq
fidiv
add
pop
movs
mov
mov
or
in
mov
inc
cwde
inc
aad
(bad)
mov
push
mov
and
add
cmp
daa
js
stos
pop
and
cmp
mov
push
and
stos
(bad)
cmps
or
or
inc
test
jmp
sub
pop
lea
add
or
ins
daa
sar
dec
mov
outs
mul
icebp
rcl
sub
movzx
mov
mov
and
mov
xchg
retf
cwde
cmp
push
mov
xchg
xchg
inc
out
push
xchg
ds
fld
cdq
sar
ss
jno
sbb
or
stc
imul
and
jnp
sub
adc
mov
add
sub
mov
xchg
adc
jle
daa
data16
lea
mov
jae
mov
add
and
popa
aaa
xor
jecxz
push
pop
xchg
sub
and
aaa
or
mov
add
(bad)
(bad)
mov
cmp
ds
jmp
in
out
jg
test
rcl
push
xor
das
cwde
rcl
push
sbb
in
xchg
dec
lock
int
shr
retf
add
mov
xchg
inc
jmp
xchg
lock
inc
adc
inc
cmp
add
inc
xlat
or
sbb
fucomip
lea
lea
lea
xchg
sub
xchg
icebp
sbb
test
push
fimul
mov
out
jge
outs
cmp
pop
leave
push
pushf
adc
add
test
dec
fucom
in
sti
rol
dec
xor
adc
out
arpl
std
mov
adc
or
sub
adc
sbb
jnp
jp
(bad)
xchg
inc
ret
(bad)
and
cmp
jmp
aam
lods
test
add
rcr
mov
and
sbb
je
mov
loopne
mov
lea
rol
rcr
push
sahf
sti
pusha
in
fsub
jmp
out
loope
in
sub
sar
sbb
push
ficom
das
mov
sub
adc
mov
mov
push
cmp
pop
adc
lea
mov
jg
mov
add
adc
dec
or
jo
outs
mov
shl
push
sub
retf
cli
lea
arpl
add
jae
adc
fucomi
mov
mov
lea
jg
sar
xor
rcl
fsub
pop
add
jmp
arpl
push
and
test
imul
sbb
mov
dec
jl
add
test
sbb
push
(bad)
rol
lea
fld
aad
mov
jmp
sub
(bad)
ffree
je
lea
pusha
loopne
inc
loope
jmp
mov
sbb
adc
xor
inc
in
push
and
dec
add
inc
jb
loope
cs
lock
and
(bad)
shl
add
cmc
aam
inc
mov
push
mov
adc
inc
and
jmp
adc
cld
jno
retf
inc
mov
(bad)
push
adc
and
jmp
xchg
xor
movs
add
xor
and
xor
ret
pop
add
or
push
test
jne
push
(bad)
push
mov
adc
lds
pop
das
or
xchg
call
aad
int
movs
mov
call
addr16
adc
adc
push
scas
ret
sbb
cmc
jns
es
shr
sub
push
movs
sbb
add
and
jne
ror
xchg
mov
or
add
mov
ror
cmps
sbb
call
lods
call
hlt
jl
dec
test
add
aam
rcr
jmp
or
adc
cld
mov
repnz
sbb
dec
mov
dec
or
push
adc
das
pusha
inc
or
xor
bound
sbb
fimul
fsubr
lea
mov
push
push
sub
das
les
mov
mov
cmps
jae
ror
or
add
add
jmp
data16
test
cmps
inc
outs
test
cmp
add
or
pop
xchg
mov
cmp
jbe
adc
xchg
and
dec
or
ror
xchg
pop
es
add
or
pop
push
dec
aas
push
adc
cwde
push
inc
repnz
lock
adc
cmps
inc
xchg
push
add
stc
adc
mov
pop
inc
or
or
in
lea
icebp
sbb
leave
add
mov
cmp
dec
xor
mov
add
push
sub
and
or
inc
aad
xor
and
pop
push
push
addr16
add
ret
test
test
inc
cmps
test
movs
sbb
inc
rol
inc
ja
mov
outs
inc
hlt
call
dec
pop
(bad)
leave
mov
mov
aaa
add
mov
cdq
mov
test
sub
add
call
and
fs
ins
mov
nop
adc
aaa
adc
pop
sub
loope
or
leave
test
inc
pop
xor
sbb
punpcklbw
call
inc
movs
jne
mov
and
sub
add
pop
push
sahf
add
je
xor
in
sub
cmp
sub
call
pop
add
das
cmp
cmc
pop
push
dec
in
and
adc
test
or
test
xor
dec
lock
add
jnp
into
fcom
push
rcr
adc
in
pop
sub
rol
rcr
add
lahf
xor
pop
sub
cmp
and
mov
rol
fist
fwait
xor
loopne
sub
adc
rol
jp
pop
adc
adc
jmp
dec
adc
xor
out
pop
adc
imul
sbb
or
push
push
mov
sub
cld
or
cmps
jmp
dec
or
dec
mov
cmc
adc
xchg
pop
arpl
lock
movs
and
outs
or
rol
stos
(bad)
mov
add
stc
inc
mov
xor
je
ret
cdq
add
add
push
or
mov
and
std
xchg
les
cmp
(bad)
sub
or
xor
pop
mov
pop
adc
dec
mov
adc
les
out
or
jae
pop
add
adc
sbb
xor
jmp
stos
push
ret
(bad)
lods
cmp
dec
pop
imul
jmp
mov
sbb
dec
xchg
dec
xchg
push
xor
and
and
xchg
pop
dec
test
push
and
pop
ret
aad
inc
or
adc
lds
sub
int
fisttp
xor
int3
rcr
loopne
ss
push
mov
pop
sar
dec
jg
xchg
push
inc
xor
push
sbb
int
outs
or
sbb
add
inc
jecxz
js
mov
stc
pop
add
or
inc
mov
cmps
or
xor
and
shl
dec
cld
push
jbe
pop
dec
out
aam
cdq
xor
jmp
and
lock
xchg
cwde
mov
jo
ficomp
and
scas
aam
dec
fadd
fadd
ret
lods
fsubr
xor
cmp
call
or
imul
cmp
jns
rol
(bad)
lock
push
dec
sbb
test
dec
dec
and
sbb
dec
add
movs
les
call
jg
bound
xchg
movs
in
or
es
loopne
push
adc
fmul
and
and
pavgb
adc
and
cs
push
test
lahf
cmp
sub
mov
add
outs
addr16
dec
clc
fmul
adc
lea
xor
popf
dec
or
or
inc
pusha
xor
jo
adc
hlt
jae
inc
fwait
arpl
fiadd
rcr
xchg
inc
push
aad
or
mov
fwait
nop
xor
adc
cmp
movs
daa
push
cmp
inc
add
and
aaa
adc
jle
sahf
ins
in
pusha
sub
push
shl
add
shl
inc
pusha
mov
mov
popa
in
fld
sbb
xor
popa
loope
pop
std
ret
or
mov
add
sbb
and
lock
adc
or
add
cmp
and
push
dec
push
sbb
push
dec
push
fwait
xchg
sub
mov
and
adc
ror
cmps
mov
push
xchg
add
and
sbb
xchg
or
or
jnp
adc
fadd
jnp
xchg
ins
sbb
or
jg
adc
ret
add
jmp
inc
enter
ret
push
jecxz
out
clc
adc
retf
mov
ins
sbb
or
or
loope
arpl
adc
test
adc
pop
pop
or
xor
jae
es
aam
jo
fisub
loope
mov
and
lods
jae
icebp
xor
sti
pop
and
cmp
shl
ret
scas
xchg
fadd
call
cmp
mov
adc
mov
or
push
push
add
scas
sub
sti
daa
add
rcr
adc
fwait
ret
(bad)
int
sbb
xchg
ds
cmp
das
daa
xchg
icebp
test
dec
inc
jmp
mov
rol
dec
jmp
jecxz
test
pusha
inc
pop
jmp
shr
hlt
call
nop
adc
dec
sbb
sar
mov
sbb
pop
sar
nop
add
fs
jle
mov
jecxz
mov
adc
pop
xlat
xchg
adc
inc
adc
pop
add
inc
mov
or
cmp
add
inc
xchg
sbb
xor
or
and
fwait
or
add
int
jg
sbb
mov
push
xlat
enter
xchg
and
xchg
push
mov
mov
push
push
fsubr
clc
mov
inc
add
adc
adc
movs
int
pop
test
shr
adc
clc
and
movs
leave
adc
cwde
jg
(bad)
xchg
cmp
mov
test
mov
imul
xchg
lea
sbb
mov
test
nop
or
lahf
fild
inc
dec
jne
xchg
mov
ss
or
test
adc
nop
lea
retf
inc
sub
mov
(bad)
fst
inc
ret
out
mov
ror
clc
neg
aaa
or
and
add
cmc
leave
cmps
xor
adc
xor
sbb
cmp
sbb
mov
sbb
add
mov
pop
adc
lds
lods
or
(bad)
adc
add
dec
cli
and
xchg
or
mov
sbb
or
in
push
dec
adc
clc
ds
lahf
and
in
push
mov
xor
dec
sub
dec
fadd
cmp
or
sub
adc
push
aad
mov
sbb
das
daa
and
sub
test
xor
inc
movs
cmp
arpl
mov
add
inc
or
les
fisttp
push
std
xchg
inc
inc
xchg
test
sub
add
push
add
cmp
adc
mov
push
push
or
xor
sub
inc
or
xor
add
nop
(bad)
jbe
ins
and
cmp
adc
add
xchg
in
jns
mov
push
imul
jge
sub
push
shl
clc
mov
pusha
or
jle
pop
mov
push
aam
adc
push
mov
cmp
or
push
dec
or
and
dec
xchg
push
data16
adc
push
push
or
add
push
cld
sbb
push
or
ret
jl
xchg
add
(bad)
xchg
jbe
or
mov
fadd
lahf
push
scas
mov
mov
pop
or
mov
cmps
inc
sbb
popa
mov
in
push
stos
sub
or
js
adc
xchg
add
sub
popw
inc
call
rcr
ja
fisubr
out
and
hlt
inc
sbb
adc
add
scas
(bad)
cli
aaa
jge
mov
test
std
mov
mov
enter
or
dec
add
adc
es
rol
jmp
or
clc
mov
jg
and
sbb
jmp
les
and
cmp
inc
jl
adc
push
shr
mov
jg
pop
dec
imul
ret
pop
gs
or
das
or
pop
dec
jmp
lock
pushf
nop
cmp
nop
ss
inc
(bad)
jne
and
sbb
add
test
lahf
ins
pop
mov
pusha
or
sbb
fnstcw
push
mov
jle
xchg
and
or
addr16
jp
stos
mov
inc
test
hlt
ret
xor
bound
adc
scas
ret
mov
dec
sub
add
push
mov
mov
push
fmul
loop
sub
call
int3
or
or
jmp
mov
inc
and
mov
lock
jle
adc
es
or
push
mov
jmp
sub
or
sar
ret
jmp
ins
inc
psubd
adc
in
or
inc
bound
dec
or
mov
sub
ins
data16
mov
cmps
fdiv
iret
xchg
xor
fcomp
es
fld
cmp
push
(bad)
jne
or
test
mov
mov
jle
loope
push
jbe
pop
mov
push
loop
icebp
mov
adc
fisubr
ror
fcmovb
add
and
fnstcw
jmp
loope
jb
int
fsub
lock
rcl
add
push
push
cmp
add
add
les
and
cmc
or
movs
adc
adc
fwait
xchg
add
aam
or
aad
mov
adc
fist
pop
and
outs
sbb
and
mov
enter
add
mov
jge
pop
and
dec
xchg
stos
jmp
jmp
sub
adc
push
repnz
or
add
push
sar
and
cmp
cs
dec
inc
dec
leave
push
mov
cmp
pop
mov
mov
inc
push
mov
ror
lea
movs
and
stos
cmp
pop
pop
cwde
mov
or
movups
jmp
mov
shl
pop
sub
dec
or
mov
imul
and
push
and
or
and
push
test
mov
jg
scas
sub
pop
push
dec
inc
and
or
mov
arpl
push
daa
gs
rcl
adc
sbb
movs
pop
test
sub
inc
movs
fcom
adc
add
pop
inc
add
sub
cli
sub
jmp
jne
xor
lahf
cwde
cwde
mov
pop
xor
xchg
jb
xor
xor
cwde
icebp
xchg
cmps
test
add
xor
add
or
js
mov
or
in
push
jecxz
xor
or
repnz
adc
mov
and
loop
push
xchg
or
push
and
pop
loope
dec
push
push
cmp
mov
gs
enter
xor
stos
cmc
and
ins
ror
jmp
or
sar
jmp
inc
dec
fcmovnbe
and
sbb
adc
push
sub
mov
adc
nop
data16
fcom
dec
adc
adc
cmp
push
push
icebp
movs
push
adc
push
sub
cmp
dec
mov
lahf
test
inc
push
iret
imul
push
out
cmp
xchg
push
pop
adc
and
adc
xor
dec
pop
sbb
jmp
ret
sub
cmp
push
adc
call
dec
les
push
add
xchg
scas
jnp
outs
cmp
sub
jns
pop
cmp
lock
bound
pop
xor
pop
or
imul
sub
or
jo
mov
setns
and
pop
out
push
lock
jo
mov
leave
inc
xor
(bad)
or
cdq
or
dec
push
fs
or
or
or
push
pop
shl
push
pop
push
push
(bad)
xchg
dec
fwait
xchg
push
ficomp
cmp
sub
mov
(bad)
cvtpi2ps
pop
and
mov
inc
adc
or
mov
fchs
pop
sub
addr16
pusha
mov
jne
pop
dec
into
xchg
jbe
jmp
jnp
sbb
outs
sbb
cmp
jmp
sbb
dec
adc
add
xchg
push
movs
mov
outs
adc
dec
iret
stos
and
sbb
add
ins
pop
js
popa
sub
mov
fadd
dec
enter
push
fs
loopne
popa
xchg
dec
adc
inc
add
stos
pop
ja
mov
xchg
hlt
xlat
into
adc
and
jecxz
and
test
fadd
jne
add
mov
inc
test
bound
(bad)
dec
or
pusha
push
push
push
mov
scas
adc
loope
xchg
dec
outs
mov
hlt
or
idiv
dec
or
add
ret
cwde
fst
mov
sbb
loop
add
lock
pop
pop
aam
(bad)
jne
pop
xor
mov
call
(bad)
cmp
jne
mov
push
mov
push
dec
js
and
stos
xor
ins
mov
add
xor
mov
pop
pop
pop
daa
push
add
pop
xchg
add
and
retf
or
push
jge
mov
add
dec
xor
mov
adc
add
adc
push
or
push
jmp
push
lahf
adc
enter
test
je
pop
aas
lahf
adc
sub
pushf
lahf
cmp
xchg
cmp
mov
lahf
jns
jns
adc
dec
inc
mov
lahf
push
lea
mov
lahf
pusha
lahf
mov
inc
fldcw
lahf
adc
dec
push
lahf
retf
dec
jmp
lahf
or
xchg
test
adc
sub
lahf
fcomp
shr
aas
or
cwde
pop
jg
sbb
pop
mov
jo
sub
popa
aad
pop
xor
mov
pop
mov
push
call
test
jno
mov
adc
test
sete
sub
das
cmp
xor
jns
mov
pop
or
jne
(bad)
jmp
lock
jns
rcr
xchg
stc
lahf
jmp
or
sub
mov
inc
inc
pop
in
div
inc
cs
add
add
sbb
push
pop
adc
adc
fisub
cmp
repnz
sbb
hlt
cmps
add
xor
fsub
lods
dec
inc
or
fadd
sbb
or
in
hlt
or
xchg
xchg
sub
pop
imul
jle
push
add
dec
loop
inc
adc
and
xchg
xor
sbb
mov
cmp
push
int
je
out
jl
rol
movs
and
lock
push
mov
dec
xor
adc
adc
sub
ins
or
cmp
and
inc
fist
add
dec
or
sbb
and
push
or
inc
mov
inc
ror
dec
push
cmp
mov
lahf
push
add
das
ror
add
mov
adc
add
rcr
add
push
cmp
out
aad
adc
adc
dec
push
push
and
pushf
or
clc
xor
test
ror
cli
and
xchg
fadd
or
dec
or
push
push
xor
push
rol
pusha
jmp
loopne
rol
call
adc
sub
sbb
nop
jl
pop
or
adc
jb
add
adc
add
rol
enter
cmp
dec
sub
pop
xlat
shl
cwde
pop
fisttp
shr
iret
cmp
inc
and
adc
jae
pusha
and
cmp
xor
shr
push
cmps
xor
add
mov
cmp
std
push
or
dec
inc
and
mov
xchg
add
push
dec
enter
add
je
or
pushf
add
add
std
lods
fist
loopne
jl
and
add
lock
invd
fist
cwde
cmps
sub
add
add
adc
xchg
fwait
adc
pop
push
sbb
lahf
jle
test
outs
jb
xor
sub
mov
rol
xor
add
fild
cmp
test
loopne
lods
or
cld
push
je
dec
pop
xchg
pop
mov
push
lods
test
add
add
xchg
xor
pop
push
xchg
les
and
xor
jecxz
push
pop
mov
shr
push
xor
cmp
loope
sbb
test
adc
les
mov
sub
lahf
dec
cld
inc
leave
sub
hlt
xor
adc
je
pop
sbb
adc
stc
sbb
and
ffree
xchg
icebp
sub
and
inc
mov
xor
inc
rcr
xor
xor
sbb
and
mov
and
int
rcr
sub
sub
rcr
sub
rcr
int
cs
sbb
int
sbb
cmp
inc
int
rcr
inc
inc
inc
push
xchg
pop
and
push
push
dec
xchg
out
imul
push
push
dec
pop
and
xchg
dec
pop
dec
imul
fs
push
xchg
out
push
and
jo
out
imul
imul
mov
cwde
rol
ds
in
mov
dec
cs
leave
inc
mov
inc
jb
nop
inc
xchg
nop
pop
push
xchg
inc
cwde
sub
sub
in
inc
cld
movs
and
push
sbb
dec
jae
mov
add
enter
test
es
lods
dec
mov
jo
mov
not
das
out
add
call
dec
int3
and
push
or
fimul
gs
mov
arpl
rol
sub
nop
or
sub
xor
leave
nop
or
cmp
or
nop
inc
inc
leave
nop
or
dec
dec
push
or
nop
or
pop
pop
nop
or
nop
pusha
fs
nop
or
push
nop
or
js
push
push
or
mov
stos
retf
dec
popa
add
xor
or
mov
dec
scas
in
xchg
cwde
scas
in
scas
pushf
mov
dec
test
sahf
add
call
dec
add
lock
test
scas
adc
or
shl
mov
jp
jo
add
(bad)
mov
jmp
xor
pop
mov
mov
(bad)
dec
call
mov
dec
xchg
cmp
movs
push
jne
add
xor
ins
push
sar
sbb
fidivr
in
fisttp
stos
ins
lock
sbb
jge
loopne
pop
pop
popf
es
push
inc
push
adc
or
in
fnsave
push
mov
push
ret
call
out
ss
in
mov
push
inc
js
push
rcr
cmp
dec
out
mov
and
dec
imul
push
and
push
sub
mov
add
sbb
and
inc
lock
add
ins
cdq
xor
add
push
jo
das
sbb
add
cdq
es
inc
sbb
ret
fs
mov
mov
jo
adc
xor
pop
dec
retf
sbb
mov
pop
inc
pop
sbb
mov
xlat
push
fcmovb
cwde
or
mov
or
stos
mov
lock
test
in
pop
xor
pop
pop
sbb
mov
lahf
xchg
out
mov
xor
enter
jg
aaa
mov
adc
mov
xchg
rol
mov
int
push
add
dec
add
(bad)
loop
and
cmps
cmps
jmp
mov
pop
jecxz
fs
inc
popa
adc
add
add
xchg
fadd
add
push
(bad)
loope
movs
add
lahf
in
mov
enter
xchg
sbb
loop
xchg
push
jp
mov
and
push
add
idiv
sub
jecxz
cmps
pop
sub
mov
cmps
pop
mov
add
fsub
xchg
shl
push
scas
es
popa
or
push
cmp
sub
xchg
out
imul
and
xchg
push
sbb
fsub
inc
out
imul
sub
adc
dec
repz
inc
sub
sub
nop
xor
sub
nop
xor
sub
sub
push
cs
test
dec
jae
push
je
adc
ret
cmp
mov
rcr
(bad)
cmp
xchg
lea
add
jecxz
cmovg
sbb
rep
pop
popa
pop
adc
jg
adc
mov
add
and
inc
and
test
lock
in
mov
xor
mov
enter
les
add
cmp
mov
push
int3
dec
mov
push
dec
popa
retf
adc
or
adc
enter
js
push
push
push
adc
inc
mov
jl
jb
nop
sbb
sbb
nop
retf
test
test
add
push
call
mov
adc
(bad)
adc
mov
jmp
add
pop
cmp
push
imul
pop
inc
xor
cs
mov
xchg
popa
adc
sub
dec
sahf
fadd
add
mov
test
jns
mov
inc
adc
dec
lods
inc
sbb
sub
not
lds
js
xchg
je
inc
fadd
xchg
movs
das
ret
or
nop
mov
fsub
movs
adc
sbb
or
mov
push
adc
inc
push
stos
cmp
cmp
inc
imul
xchg
test
nop
xchg
sub
xchg
add
mov
es
jle
gs
icebp
lea
call
add
adc
rcr
mov
jg
mov
inc
test
pusha
xchg
inc
sub
and
in
pusha
test
xchg
sar
push
rcl
cmps
xchg
and
bound
and
sbb
dec
shl
xchg
aas
loopne
add
and
outs
add
xor
outs
mov
inc
adc
pop
nop
dec
adc
ins
inc
adc
adc
test
cdq
loopne
or
cmps
xchg
add
add
movs
sbb
adc
pop
ret
jnp
and
shr
ins
sbb
test
leave
pop
mov
add
mov
inc
or
pop
inc
shl
movs
ja
pop
and
in
add
push
sbb
pop
mov
add
xor
lods
mov
arpl
fsub
je
xor
ins
or
add
loopne
or
fld
fbstp
rol
and
clc
jns
dec
xor
inc
xor
adc
jno
xchg
(bad)
lods
and
cli
and
push
test
fimul
push
cmp
mov
retf
push
jb
std
add
mov
and
or
and
enter
clc
imul
ins
popa
push
push
in
inc
and
sbb
dec
xchg
mov
imul
sbb
jecxz
or
sbb
push
push
mov
mov
lahf
jmp
dec
dec
inc
inc
sbb
xor
hlt
inc
or
mov
rol
mov
adc
xchg
and
dec
mov
or
mov
adc
ja
xchg
test
mov
ficom
mov
mov
or
mov
or
mov
xor
add
jmp
jae
pop
add
lock
bnd
cmp
or
cmp
inc
inc
inc
mov
xor
xor
and
dec
inc
pop
pop
adc
inc
lahf
mov
das
mov
rcr
and
cmp
sub
add
and
ret
dec
cmp
lds
popa
adc
shl
outs
call
bound
mov
cld
add
(bad)
rol
ret
and
cwde
push
mov
(bad)
rol
mov
test
mov
pop
std
or
clc
jmp
add
or
lock
xchg
sahf
and
dec
add
dec
or
inc
xchg
cmp
fsub
jbe
cmps
dec
adc
and
xor
adc
test
xchg
cmp
push
sbb
jmp
or
je
lea
pop
mov
sbb
push
dec
jmp
rcr
xchg
inc
rcl
dec
jne
sbb
sub
pushf
or
loope
pop
push
cmps
add
addr16
cmp
dec
hlt
sbb
int3
retf
add
cmp
pop
push
or
pop
adc
(bad)
mov
mov
aam
pop
inc
add
mov
add
xchg
enter
in
dec
pop
retf
lea
jbe
andnps
push
leave
jne
and
adc
or
add
idiv
ja
inc
sbb
xchg
sbb
sbb
and
mov
ret
jbe
je
or
cmc
adc
mov
nop
sbb
cs
add
adc
jge
cwde
pop
inc
or
andnps
or
push
inc
dec
add
xor
jecxz
(bad)
retf
sbb
inc
jo
or
mov
call
mov
in
retw
xlat
sbb
sub
test
mov
cs
sbb
sub
push
jecxz
add
cmp
add
or
jmp
cmp
aaa
imul
nop
(bad)
cmovnp
mov
inc
jle
ins
and
jb
mov
inc
xchg
dec
enter
pop
sbb
retf
in
test
xchg
mov
cmc
jmp
pop
ret
sub
ss
xor
jae
(bad)
or
(bad)
push
or
mov
sub
add
push
sbb
mov
inc
ret
retf
gs
shr
clc
mov
add
jg
add
add
mov
mov
sub
xor
sub
push
lods
add
adc
aaa
pop
pusha
mov
or
inc
clc
xor
aad
mov
gs
and
inc
add
je
je
push
xor
xor
sub
(bad)
leave
add
or
shl
pop
dec
add
adc
inc
cwde
jl
dec
mov
adc
pop
adc
js
test
jae
jne
add
sbb
(bad)
mov
push
and
add
dec
xor
inc
cmps
lahf
xchg
fwait
xchg
push
call
jne
mov
out
cmp
and
or
pop
mov
ret
or
fidivr
pop
or
mov
adc
or
or
add
adc
ret
cmp
push
sbb
xchg
sbb
jae
add
jne
mov
dec
push
and
mov
and
or
ret
or
mov
fisub
mov
add
std
test
sti
outs
sbb
rol
pop
jmp
and
add
pop
push
inc
pusha
xchg
lock
add
and
imul
(bad)
lds
pop
popa
dec
push
or
sbb
ret
fs
je
dec
adc
push
clc
pop
add
xor
cmp
add
aaa
pop
loope
ret
shl
add
dec
xor
mov
pop
xchg
inc
pop
adc
jg
push
jns
jge
daa
mov
jmp
cmp
adc
or
inc
and
daa
sar
xor
aas
xchg
cld
jmp
jg
push
push
dec
call
lock
lock
sahf
lds
lds
and
data16
cs
mov
in
or
push
sub
out
jne
add
sub
add
push
dec
push
inc
and
test
mov
inc
mov
xor
fxch
xchg
test
add
add
rol
outs
inc
pop
xchg
fisttp
sbb
je
sbb
cmp
dec
adc
adc
sub
popa
pop
fs
adc
add
mov
mov
and
dec
ss
adc
add
nop
retf
lock
inc
ret
dec
and
add
(bad)
pop
rol
or
inc
sub
in
fiadd
lods
sub
or
das
nop
shl
jecxz
pop
xor
popa
sub
and
lahf
fwait
sub
cmp
es
dec
sub
popf
inc
adc
adc
and
mov
jno
in
fs
or
ins
test
or
and
push
sbb
ins
xor
sbb
push
popf
es
in
(bad)
push
adc
add
imul
push
das
pop
nop
fdivr
push
sub
xor
xor
in
or
cmp
mov
push
sub
add
adc
mov
rol
dec
sbb
inc
dec
pop
test
lsl
mov
test
push
fiadd
jns
inc
stos
and
xor
js
arpl
ds
outs
adc
lods
sbb
fs
add
add
aaa
ja
inc
add
adc
test
jmp
mov
lock
add
cdq
ss
add
rcr
movs
outs
or
adc
inc
sub
rcl
push
cmp
mov
inc
rcr
pop
add
push
sub
dec
stos
outs
or
xchg
arpl
push
pop
inc
cmp
add
xor
pop
or
adc
dec
mov
inc
dec
xchg
enter
loopne
add
push
push
xor
xor
or
push
shr
sbb
jo
jmp
adc
mov
loopne
xor
push
jb
das
add
imul
and
pop
dec
sbb
pusha
sub
add
xor
pop
add
add
inc
mov
imul
lock
int3
push
lahf
sub
add
gs
and
rol
or
jne
sub
loope
dec
shr
int3
add
ins
sbb
push
daa
mov
aaa
jnp
inc
and
scas
movs
inc
adc
call
lahf
xor
inc
mov
data16
xor
mov
mov
cmp
test
jp
xor
dec
mov
sbb
sbb
icebp
inc
in
mov
adc
adc
mov
cdq
mov
and
gs
inc
mov
jp
add
cmp
and
retf
adc
and
jns
mov
xor
dec
mov
lahf
add
es
icebp
fimul
fs
jmp
idiv
adc
or
pop
sbb
push
mov
sub
xchg
pop
xchg
and
inc
pop
adc
lahf
sbb
adc
ret
mov
je
rcl
mov
add
es
lahf
mov
push
sub
add
add
sub
adc
and
or
or
inc
rol
inc
cmp
out
push
test
dec
adc
mov
jl
xchg
(bad)
adc
push
outs
add
mov
movs
and
push
or
jbe
mov
xor
push
loope
movs
add
sub
mov
jbe
sbb
dec
add
mov
inc
add
or
in
imul
mov
aam
mov
push
inc
cmp
pop
lods
mov
sbb
pop
test
ret
cdq
aas
add
mov
cwde
mov
mov
and
xor
add
test
inc
enter
adc
and
leave
pop
lea
mov
inc
push
popa
ds
shr
arpl
pop
es
sub
leave
push
or
add
aad
call
mov
popa
jns
push
and
popa
dec
les
xor
stos
adc
mov
and
dec
adc
inc
and
adc
or
movs
popa
inc
cmc
adc
popa
jno
or
mov
inc
ins
dec
adc
or
or
popa
mov
scas
xchg
adc
xchg
popa
mov
and
add
or
add
sbb
sub
and
push
inc
adc
stos
xlat
popa
jb
xor
out
adc
jae
mov
fistp
ins
in
adc
bound
pop
sub
popa
pop
movs
rcr
mov
push
inc
sub
inc
popa
inc
adc
mov
inc
popa
les
mov
fdivr
mov
dec
push
push
(bad)
push
jmp
pop
fidivr
iret
sub
loop
push
push
push
sub
jno
dec
es
movs
push
adc
jmp
or
jb
inc
aas
cmp
pop
pushf
xchg
cmps
adc
test
mov
pop
cld
add
xor
sbb
fsubr
dec
(bad)
pop
cld
cld
clc
cmps
clc
sbb
clc
pop
outs
adc
push
hlt
cld
sub
push
pop
hlt
cld
test
movs
push
push
xchg
mov
sysret
test
inc
adc
leave
dec
pop
add
lsl
push
push
ss
mov
shl
mov
adc
cld
push
push
pop
sbb
imul
and
mov
in
std
push
push
and
inc
gs
ins
jmp
xor
std
pushf
dec
pop
inc
in
std
aas
cmp
inc
ret
test
xlat
adc
sub
call
sbb
cld
jge
aam
cld
jle
inc
fdiv
cs
push
mov
test
adc
mov
inc
ds
mov
pop
aam
sub
iret
or
mov
mov
jge
sub
inc
mov
push
adc
push
lock
rcr
jge
push
and
pusha
frstor
push
aas
and
mov
arpl
test
jge
imul
or
lods
jge
inc
xor
mov
mov
inc
std
es
(bad)
adc
mov
mov
mov
jge
sbb
push
and
adc
cmps
nop
retf
adc
fadd
xor
cs
mov
js
add
inc
movs
mov
jge
mov
mov
jge
mov
adc
mov
mov
inc
adc
popf
or
add
jge
ins
ins
or
and
gs
cmp
lods
mov
and
xchg
je
je
adc
mov
push
aam
aam
jecxz
cmp
xchg
inc
cmp
and
xor
sub
or
or
adc
cmp
jge
test
jge
adc
and
jge
push
mov
movs
dec
jb
test
inc
inc
jge
test
inc
adc
mov
cmp
inc
adc
xchg
jge
dec
(bad)
and
daa
dec
dec
inc
add
icebp
pop
and
cmp
mov
jge
adc
sbb
mov
jge
and
adc
xchg
push
mov
inc
sbb
in
leave
push
inc
inc
push
push
mov
xor
jge
push
push
sbb
enter
das
cmp
add
cmp
pushf
pop
jb
and
xor
push
ds
or
test
jge
and
sub
test
jno
fwait
aam
sbb
fist
mov
or
sub
push
jbe
adc
or
adc
enter
aaa
cmp
sbb
int3
mov
mov
(bad)
pop
inc
cmp
xchg
mov
cmp
push
test
add
rcr
sbb
add
aaa
add
repz
es
push
xor
ins
sahf
addr16
push
xchg
imul
rol
fcom
repz
mov
add
iret
adc
data16
shr
es
out
mov
int
jnp
outs
pop
push
ins
or
jno
push
mov
outs
jnp
es
and
or
outs
addr16
ins
push
and
ins
imul
popa
push
sbb
aaa
je
or
pop
push
aaa
jg
adc
add
and
add
jo
add
mov
icebp
mov
jo
inc
cld
inc
pop
mov
and
mov
cwde
mov
dec
adc
adc
adc
add
jp
mov
jg
dec
or
jg
pop
movs
pop
mov
and
or
jge
sbb
pop
hlt
dec
cld
ret
jmp
mov
jge
pop
jo
and
jmp
mov
push
mov
jno
lock
xchg
dec
adc
and
js
jne
stos
push
push
or
shr
mov
or
push
pop
and
or
ror
push
or
pop
mov
outs
xor
dec
pop
inc
movs
dec
cld
outs
or
sub
dec
jg
(bad)
adc
xchg
add
or
neg
inc
sbb
push
push
leave
rol
add
mov
adc
push
push
xor
pop
inc
xchg
and
sub
cmp
inc
fimul
sub
mov
cld
jl
hlt
adc
inc
psubq
mov
or
add
add
shl
adc
dec
or
sbb
je
or
dec
mov
sub
dec
push
sbb
aaa
mov
outs
ss
xlat
dec
push
add
imul
or
push
push
push
pop
pop
nop
ret
rol
stos
sbb
jg
push
aas
(bad)
adc
test
daa
mov
pop
jo
mov
adc
(bad)
jecxz
push
fidiv
fcomp
or
rcr
fld
daa
mov
adc
pop
inc
or
xchg
shl
fsub
adc
add
add
add
mov
scas
and
pop
and
mov
add
jp
inc
jnp
cmps
lea
scas
pop
xor
sbb
mov
test
imul
movs
add
lahf
push
adc
mov
inc
lahf
push
push
xchg
test
idiv
push
pop
jo
sti
jne
pop
ret
mov
push
dec
fld
nop
push
sub
mov
repz
pushf
push
jno
repz
fucomip
mov
cwde
xor
mov
ds
xchg
push
add
mov
xor
icebp
add
lds
push
adc
lahf
icebp
sub
test
mov
fstp
or
push
fs
and
(bad)
aaa
loopne
nop
mov
sbb
sbb
and
pop
sbb
push
push
pop
dec
movs
add
fdivp
push
aas
and
inc
mov
lock
and
and
dec
hlt
daa
adc
loope
jecxz
push
lock
xor
je
les
cwde
addr16
and
stos
shl
or
rol
jns
das
dec
(bad)
add
and
adc
pop
inc
push
push
loopne
ja
sbb
push
adc
sbb
daa
inc
xchg
jb
adc
or
fcmovb
pop
fucom
push
inc
rol
sbb
lock
jo
mov
add
aam
push
or
and
or
xchg
push
and
aaa
int3
xor
cmp
enter
sahf
add
les
sti
adc
les
mov
popa
stos
sub
popa
pop
jg
adc
lods
pop
mov
sub
adc
cmp
adc
dec
loopne
xchg
aad
push
test
sbb
dec
jo
aad
stos
retf
push
or
sub
addr16
in
test
cmp
lock
mov
test
or
mov
in
leave
rol
or
inc
xor
mov
xchg
rol
add
mov
and
ds
sar
cld
icebp
lea
popa
pop
bound
cdq
(bad)
xor
xchg
or
cmp
lahf
xchg
xor
jge
cdq
mov
mov
fadd
push
call
mov
fwait
les
jl
or
daa
cmp
or
iret
mov
xor
inc
sub
js
sub
inc
xor
retf
jp
es
or
aaa
fcom
push
push
pop
push
mov
sti
or
leave
push
scas
rcl
movs
lock
jno
add
add
pop
mov
add
fild
and
push
mov
mov
dec
pop
sbb
xlat
pusha
adc
push
pushf
pop
mov
mov
and
push
popf
pushf
pop
sub
je
push
aam
mov
bound
push
ror
jecxz
push
and
mov
pushf
sub
call
pop
inc
adc
sub
dec
adc
imul
jo
jp
jnp
inc
sbb
or
sbb
sub
mov
and
lahf
inc
loopne
popa
mov
shr
and
cld
inc
pusha
and
jl
lods
mov
pop
ins
cmp
or
inc
rcl
repz
add
xor
sahf
or
fcom
ret
and
pop
sub
leave
sbb
fst
sub
xchg
cmps
fild
mov
nop
in
enter
inc
and
xor
test
inc
rcl
cmp
bound
inc
dec
or
and
dec
or
pop
or
xchg
hlt
(bad)
push
xchg
jl
rcl
test
mul
and
sbb
inc
adc
addr16
and
shl
sub
pop
iret
inc
and
mov
movs
adc
push
pop
call
cld
mov
mov
retf
dec
out
idiv
xchg
or
sub
rol
xchg
lea
sub
ins
mov
sub
xor
rol
mov
neg
or
cmp
and
movs
or
ret
scas
out
or
mov
loop
and
cmp
sbb
xchg
test
fwait
add
dec
or
ror
and
fild
pop
mov
rol
and
loopne
std
and
enter
(bad)
xchg
or
lods
outs
add
ss
lods
mov
ret
sti
mov
cvtps2pi
stos
dec
loop
or
lods
or
and
or
adc
dec
add
leave
and
aam
and
iret
sub
inc
sbb
shl
ficom
je
mov
mov
dec
adc
inc
jle
or
ret
retf
xor
cld
jecxz
pop
xchg
adc
or
jg
fiadd
or
and
fmul
out
dec
arpl
sub
xor
jecxz
and
fldenv
adc
or
popf
adc
cmps
pusha
pop
rcr
mov
add
pop
adc
(bad)
push
xchg
pop
add
repnz
fild
ss
pop
adc
in
push
inc
mov
loope
cli
lahf
dec
sbb
add
pop
push
jmp
pop
inc
mov
xchg
in
imul
add
pop
adc
mov
jmp
(bad)
push
jmp
fstp
or
or
sbb
shr
or
(bad)
inc
inc
popf
pop
adc
add
or
sar
pop
add
cmp
bswap
sub
sti
mov
shr
lahf
out
cdq
add
or
mov
in
add
jp
test
repz
adc
es
jno
push
inc
das
or
cdq
nop
sub
adc
imul
sbb
pop
add
push
or
xor
xchg
fsubr
je
or
js
push
sbb
mov
(bad)
jno
das
and
loopne
imul
out
mov
lods
ins
push
push
lea
lock
and
or
adc
and
inc
fwait
xor
sbb
and
or
jmp
dec
or
iret
sub
pusha
aas
dec
add
and
jb
sti
jne
adc
pop
push
in
inc
push
adc
or
in
aad
stos
fistp
sahf
inc
jmp
push
test
mov
mov
add
js
mov
inc
add
ins
and
fsubr
std
pop
(bad)
mov
cmp
fcomp
sbb
pop
push
cdq
popa
inc
sbb
ror
mov
sub
mov
clc
pop
mov
and
mov
sbb
pop
enter
(bad)
cmp
push
jmp
add
mov
sbb
inc
ds
sbb
add
clc
lock
or
push
add
movs
pop
iret
inc
aaa
add
jbe
in
aad
inc
stos
add
xlat
loopne
or
mov
or
lahf
mov
sub
into
push
pop
jne
push
clc
inc
call
(bad)
or
xchg
fldz
xor
ror
or
dec
push
xor
out
pop
xor
add
adc
cdq
nop
push
leave
inc
or
cli
cmp
(bad)
cmp
xor
push
xchg
jno
jmp
jne
or
(bad)
aad
xor
xor
das
inc
pop
inc
jae
popa
call
and
cmc
xor
call
dec
sbb
movs
inc
cmp
mov
add
and
adc
jmp
cmp
adc
sahf
adc
xor
add
mov
retf
ror
dec
imul
lods
lds
and
cmps
aam
jno
or
dec
sbb
lahf
add
js
cdq
inc
jle
jle
jmp
loopne
xor
and
dec
push
pop
or
inc
call
jp
mov
ret
or
aas
aaa
and
jmp
test
loopne
gs
test
cmp
jne
dec
ret
dec
movs
dec
test
or
pop
cmp
add
mov
add
iret
(bad)
lahf
test
mov
ret
das
rcl
retf
(bad)
xchg
jge
pop
mov
jl
jg
and
sub
xor
rol
and
sub
cwde
shr
sub
clc
mov
xor
mov
pop
inc
imul
adc
rcr
dec
test
(bad)
or
adc
inc
out
mov
out
add
cmp
scas
rol
loope
cmp
xlat
call
lea
cmps
add
cmp
pop
xchg
pop
jmp
xchg
push
or
loope
sbb
cmc
add
pop
or
loope
xor
cmp
jmp
pop
out
jo
add
push
dec
rcl
mov
pop
push
push
xlat
sbb
push
mov
inc
and
fs
pop
inc
sub
mov
xor
cld
movsx
cmp
cmp
loop
mov
aas
fldenv
dec
adc
inc
and
or
fldcw
jne
push
imul
adc
sub
hlt
fwait
sub
mov
out
imul
sbb
xchg
dec
and
outs
retf
fdiv
push
fldpi
pop
or
lock
mov
test
dec
add
or
jae
jo
test
je
cmp
addr16
add
es
push
or
xchg
add
sbb
(bad)
aaa
inc
dec
outs
pop
in
pop
scas
xchg
inc
pop
add
push
mov
mov
xlat
movs
or
add
xor
pop
lock
scas
cs
mov
adc
or
retf
pop
ret
fist
les
pop
mov
add
sub
add
fdiv
mov
scas
push
cmp
(bad)
xchg
rol
add
push
or
and
sub
cmp
sub
pop
add
and
loopne
clc
ins
clc
mov
dec
lock
dec
sbb
mov
jecxz
jge
fild
sbb
test
push
gs
and
ret
xchg
push
inc
sbb
mov
push
jmp
outs
into
inc
dec
out
dec
adc
mov
fs
repz
jmp
inc
bound
mov
ret
js
or
stos
adc
adc
js
fcomp
sub
(bad)
call
frstor
push
mov
xchg
add
jmp
and
mov
mov
mov
sbb
(bad)
ror
add
xchg
aam
leave
xchg
sbb
ror
adc
xor
adc
loop
inc
sub
mov
inc
jo
rcr
mov
mov
lea
xor
cwde
ret
push
adc
inc
test
dec
adc
add
test
mov
gs
in
add
push
lea
or
jb
fbstp
mov
movs
rcl
jne
or
aam
xchg
adc
push
or
jecxz
mov
loopne
ret
adc
adc
and
mov
es
xor
mov
jmp
fs
sbb
push
movs
add
push
push
sbb
add
or
(bad)
xchg
add
xchg
mov
jmp
mov
mov
lds
or
and
cmp
mov
sub
outs
sbb
(bad)
jnp
jecxz
or
je
add
call
in
adc
mov
jg
shr
xor
add
int3
mov
xor
ins
pop
pop
push
js
jmp
fxch
fdivr
inc
mov
test
data16
pushf
(bad)
pop
push
lock
pushf
or
cmp
cmp
add
push
push
or
je
and
jmp
mov
lock
loopne
add
lds
mov
jb
das
pop
ficomp
test
test
jg
adc
mov
sbb
and
fisttp
add
mov
(bad)
sbb
fs
adc
jmp
out
mov
test
fwait
gs
lods
das
out
stc
dec
in
dec
xchg
add
adc
sar
iret
shl
or
pop
mov
mov
addr16
arpl
push
adc
(bad)
fist
add
push
test
add
jnp
inc
jge
aas
inc
pop
in
add
push
ja
jb
lahf
gs
int
ins
js
test
xchg
xchg
(bad)
cmps
es
jnp
je
cmp
mov
sbb
sub
add
data16
xchg
sub
adc
mov
mov
xchg
or
mov
xchg
push
(bad)
mov
adc
dec
sbb
nop
jnp
pop
xor
ss
sbb
adc
mov
push
pusha
inc
pop
mov
add
stc
scas
jne
rcl
(bad)
mov
add
sub
ins
inc
inc
dec
push
icebp
rol
add
inc
sbb
lock
lds
iret
ja
mov
xor
hlt
dec
arpl
add
mov
cli
mov
fsub
scas
xchg
inc
pusha
inc
fld
mul
mov
bound
inc
sbb
sub
cs
mov
fcmovnb
jno
or
cmp
jne
movs
pop
inc
ror
add
es
retf
sbb
xchg
push
dec
jmp
test
sub
test
cmc
call
nop
bound
sbb
pop
or
loop
mov
pop
push
adc
test
adc
dec
jae
jmp
mov
pop
and
dec
jmp
cmp
inc
sbb
sbb
mov
and
mov
add
inc
loope
push
lahf
mov
mov
es
cmps
sbb
and
fadd
sbb
xor
inc
adc
sbb
or
inc
ror
dec
sbb
sub
inc
out
test
jns
add
mov
or
mov
aad
dec
enter
addr16
or
mov
dec
or
add
stc
adc
or
mov
in
mov
pop
je
popa
fild
jb
das
ret
add
das
sub
test
push
cs
sbb
dec
mov
mov
hlt
xor
aam
inc
cld
test
daa
loop
and
jle
pop
test
sub
jmp
or
push
aam
adc
push
nop
xor
movs
dec
sbb
pusha
xlat
inc
enter
or
xchg
in
nop
(bad)
cmp
sub
pop
push
or
sar
inc
inc
adc
sub
sub
xor
sub
pop
add
mov
icebp
sub
inc
or
loope
and
dec
lea
je
push
imul
add
adc
xchg
push
jne
(bad)
pop
jmp
test
cmp
push
pop
and
push
nop
jbe
pusha
and
hlt
pusha
add
pop
and
(bad)
out
or
je
ja
cwde
and
sbb
push
and
adc
pop
lods
adc
push
xor
or
inc
cmc
push
push
adc
push
add
imul
push
dec
loopne
push
mov
mov
jae
daa
inc
sub
call
adc
je
cmp
daa
inc
xor
cmps
stos
inc
jecxz
adc
cmp
dec
or
dec
pop
jecxz
dec
jmp
dec
inc
or
sub
loopne
mov
sbb
lds
xchg
shr
test
rol
xchg
xlat
sub
cmp
and
nop
scas
cmp
mov
adc
outs
or
and
gs
add
inc
or
cmp
ret
push
sub
sbb
mov
xchg
mov
jne
push
mov
push
add
adc
test
movs
pushf
jle
lods
push
sub
lock
(bad)
push
xor
pop
movs
mov
rcl
scas
mov
and
adc
adc
or
jecxz
daa
rol
add
call
pop
and
push
and
shl
mov
mov
jg
enter
test
dec
mov
sub
add
leave
retf
cmp
adc
gs
cwde
and
mov
jne
sbb
lea
sub
imul
mov
movs
push
xchg
rcl
push
or
inc
cwde
or
sub
iret
rep
ficomp
pop
adc
cmp
add
mov
pop
add
sbb
and
jb
push
movs
dec
pop
movs
rcl
inc
test
lock
xchg
adc
loopne
pop
adc
leave
mov
popa
mov
adc
int3
add
mov
inc
fcomp
adc
push
aas
outs
aam
and
dec
in
ficomp
loopne
pop
add
fs
rol
xchg
sbb
dec
es
push
mov
inc
fcmove
inc
in
add
xlat
in
sub
adc
and
loop
(bad)
and
dec
jl
aam
retw
pop
lods
mov
js
sbb
inc
out
and
mov
les
shl
inc
push
clc
les
inc
adc
aas
sti
adc
xchg
dec
xor
or
and
scas
mov
pop
jne
loop
mov
mov
lods
or
adc
mov
ss
das
jnp
or
xchg
cmp
jl
sub
dec
push
pop
test
xor
popa
jge
and
cld
add
outs
mov
mov
jmp
arpl
xor
mov
mov
mov
mov
nop
xor
ret
inc
xor
leave
sub
xor
lds
mov
dec
xor
rcr
test
xor
or
lock
adc
or
sti
adc
leave
lahf
cmp
mov
shl
dec
jae
inc
or
iret
loop
popa
mov
bound
adc
sub
adc
sbb
aas
sbb
clc
adc
jmp
arpl
mov
fstp
mov
pusha
inc
js
mov
xor
inc
clc
out
mov
xor
loope
mov
add
mov
mov
je
or
jno
sub
int
shr
int3
inc
xor
mov
ins
or
pop
jmp
sbb
xchg
sub
xchg
les
push
mov
jl
stos
ins
pop
add
or
xchg
mov
add
add
js
fmul
xchg
shl
pop
adc
pop
and
add
jo
fadd
and
pusha
inc
add
aas
in
add
add
in
sbb
jo
inc
mov
pop
jae
add
push
test
dec
pop
adc
les
adc
mov
push
cmps
sbb
push
imul
or
or
loopne
rcl
mov
mov
jno
or
or
call
and
cdq
clc
dec
iret
nop
mov
xor
popf
stc
or
mov
pop
or
xor
mov
mov
and
and
push
popa
cdq
loope
pop
mov
add
jne
ror
imul
xor
pop
jmp
pop
or
cmp
jne
adc
arpl
sub
jbe
sbb
mov
mov
outs
mov
sub
outs
(bad)
or
scas
daa
mov
dec
push
cmps
xchg
sub
ja
pushf
rcl
cmp
jbe
mov
fiadd
ds
jne
xchg
clc
rol
jne
cmps
movs
add
jmp
add
cwde
push
cmp
sub
push
cld
lahf
sbb
cmps
and
adc
jmp
push
mov
xchg
add
call
into
jo
pop
lock
cmp
and
or
push
lock
xchg
mov
jmp
mov
mov
xor
adc
add
ret
pop
imul
nop
sub
test
cmp
push
xchg
in
jo
fistp
fld
adc
clc
pop
je
pop
adc
cdq
in
or
retf
add
or
aaa
les
jmp
dec
aas
xor
loop
test
mov
loopne
mov
pop
or
and
push
sbb
inc
push
cmc
add
add
(bad)
xchg
adc
imul
add
(bad)
push
inc
add
inc
dec
fnstcw
stc
adc
pop
add
xor
clc
sbb
aad
imul
outs
jg
mov
push
imul
xchg
inc
popa
hlt
jge
out
sub
or
test
push
hlt
dec
imul
pop
xor
loopne
loope
fsub
sti
push
xchg
hlt
push
lahf
lods
and
test
push
sbb
push
or
jle
add
adc
push
or
and
ror
fld
dec
adc
add
in
jmp
pop
pop
add
mov
jmp
test
and
shr
loopne
cwde
test
dec
jmp
dec
push
fdiv
hlt
or
pop
inc
jne
imul
ret
cmp
enter
lock
xchg
and
and
mov
and
inc
sub
inc
push
push
(bad)
es
cdq
clc
je
mov
sub
add
loopne
mov
pop
test
dec
jge
sub
in
loop
push
add
or
adc
inc
jg
daa
mov
xchg
mov
jno
and
(bad)
adc
add
xchg
lods
addr16
and
and
adc
add
pop
sub
hlt
jmp
inc
ret
ins
jge
mov
add
mov
adc
lea
scas
mov
and
push
push
loopne
mov
pop
lahf
pop
hlt
not
ins
dec
mov
ror
das
xor
and
sbb
add
push
or
adc
pop
push
fild
add
jo
lock
lock
and
sub
mov
xor
xchg
or
adc
movaps
push
retf
dec
scas
test
mov
push
sub
inc
lahf
lahf
and
imul
xor
and
lods
leave
push
add
add
gs
xchg
jmp
jg
add
mov
cmove
ds
fwait
jb
push
push
fistp
sub
sub
or
add
jg
punpckhbw
adc
in
mov
call
mov
and
loope
mov
(bad)
sbb
and
add
fisttp
mov
dec
pop
sbb
pop
or
pusha
(bad)
push
movs
pop
leave
call
pop
sub
fadd
cmc
jl
xchg
jge
test
jne
xchg
mov
or
add
jmp
pop
fistp
and
mov
inc
cld
clc
mov
es
dec
jmp
mov
adc
es
add
or
repz
aaa
nop
test
add
fild
mov
add
mov
add
stos
sub
xor
popf
in
ret
sub
inc
mov
xchg
movs
inc
(bad)
rcl
mov
lods
out
dec
add
sbb
jmp
and
add
mov
cmp
adc
dec
jmp
or
jne
and
test
push
xor
push
mov
rdmsr
push
or
adc
xchg
int
cmp
jecxz
xor
dec
add
mov
stc
inc
and
mov
aas
adc
sub
cmp
push
mov
or
pop
inc
bound
xor
or
or
add
add
add
push
xor
or
loope
pop
push
mov
cmp
int3
inc
(bad)
rol
test
jne
pop
pop
mov
lea
cld
mov
(bad)
dec
mov
mov
xlat
and
xchg
push
hlt
adc
adc
ret
sub
(bad)
ficom
ss
out
enter
retf
aas
xor
in
sub
xor
(bad)
fadd
jbe
adc
inc
in
sbb
(bad)
es
xor
jnp
jmp
sbb
inc
add
push
adc
mov
pusha
push
das
adc
adc
jbe
ins
movs
sahf
movs
movs
(bad)
je
mov
pop
jle
inc
or
mov
jns
(bad)
or
jl
push
xor
retf
mov
stc
jne
xchg
inc
mov
call
jbe
cmp
mov
add
push
mov
pop
test
fldcw
fadd
mov
xor
xchg
repnz
nop
into
push
int
jl
mov
mov
or
xor
mov
lods
outs
dec
lods
inc
jmp
pop
adc
lods
dec
sbb
jae
jo
imul
push
or
movs
test
shl
jmp
or
ret
stc
arpl
es
inc
jge
adc
add
sbb
mov
inc
movs
xor
jnp
sbb
push
scas
enter
xchg
das
loopne
or
sub
and
stc
adc
lock
(bad)
in
cmps
mov
scas
and
dec
pop
or
add
mov
neg
jge
dec
loopne
mov
add
outs
push
jl
fwait
xor
gs
test
dec
pop
(bad)
lea
into
xor
pop
add
jl
cs
sbb
xor
popf
inc
xchg
add
lock
sti
and
mov
xchg
and
bound
dec
add
and
adc
inc
or
and
sub
(bad)
aas
and
mov
popa
sub
enter
push
dec
or
jecxz
das
xor
and
mov
or
pop
inc
mov
jge
mov
mov
pop
or
mov
int
push
xor
popa
fwait
sub
popf
dec
test
inc
test
pusha
sti
fadd
dec
dec
test
pop
push
int3
push
aaa
or
aaa
pop
push
add
enter
adc
test
cmp
push
nop
test
and
cmps
inc
pop
push
and
clc
jb
and
inc
mov
lods
add
pop
jmp
lahf
inc
mov
sbb
jp
push
mov
mov
jbe
lods
fstp
add
shr
jmp
mov
jb
dec
adc
fild
loopne
jmp
jne
mov
into
in
sbb
adc
cmp
xchg
inc
movs
sub
clc
arpl
dec
jecxz
test
and
adc
push
outs
inc
mov
inc
pop
mov
or
inc
cmps
and
add
and
cmp
loopne
dec
enter
leave
loop
pusha
and
push
add
push
mov
pop
push
adc
pop
fdivr
dec
test
lds
sbb
cmp
es
jg
jmp
dec
ins
jmp
cdq
and
pinsrw
lods
add
es
jae
xchg
lock
adc
rcl
push
aad
das
je
and
aaa
retf
adc
call
add
cwde
xchg
inc
inc
aas
pop
add
add
and
ins
pop
cmps
sbb
push
(bad)
cld
daa
pop
or
push
inc
test
dec
adc
nop
es
xlat
push
pop
xlat
clc
add
mov
and
adc
loope
xor
sbb
arpl
xlat
add
cs
and
rcr
push
add
ret
enter
jg
add
mov
ror
add
mov
mov
mov
jg
ror
inc
push
and
aam
in
mov
jns
enter
add
retf
add
jg
pop
xchg
push
fdivr
fcomp
cdq
jge
sbb
retf
retf
xchg
mov
int3
fld
cmp
and
in
retf
dec
pop
add
cmp
jns
mov
int3
mov
int3
mov
adc
inc
push
add
jg
cmp
add
daa
and
and
push
test
fdiv
movs
or
ret
mov
adc
jg
cmp
clc
or
adc
rcl
xchg
js
shl
inc
mov
mov
jo
lods
es
xor
push
adc
pop
xlat
or
outs
xor
cmc
cmp
or
push
and
and
iret
enter
adc
and
mov
xchg
jno
mov
leave
add
addr16
xor
das
and
and
mov
cmp
xchg
mov
push
pop
inc
retf
js
adc
xchg
adc
mov
(bad)
pop
mov
add
cmps
and
test
pop
xchg
inc
(bad)
or
test
sub
inc
sbb
mov
fcom
sub
inc
sbb
jg
ja
test
test
pop
jg
add
lea
adc
jg
test
xchg
xchg
cmp
push
and
mov
aad
outs
jg
inc
inc
mov
cwde
push
xchg
test
xchg
sub
icebp
sbb
xor
jg
inc
mov
mov
jecxz
inc
sti
fdiv
jg
inc
repnz
mov
xor
or
jmp
inc
adc
jno
sbb
and
mov
inc
jle
mov
mov
mov
jg
mov
adc
add
pop
xchg
add
inc
sub
shl
or
jg
rcl
test
xchg
aam
mov
shl
enter
mov
movs
fistp
test
clc
fild
or
mov
xor
adc
adc
xor
xchg
push
sbb
adc
cld
pop
add
push
clc
pusha
and
xchg
push
addr16
mov
jns
(bad)
jg
jb
adc
pop
rol
pop
and
enter
pop
rol
add
add
pushf
sub
xchg
or
push
inc
ins
jmp
xor
push
mov
push
pop
xchg
push
or
mov
fist
mov
push
lock
ret
push
sub
leave
sbb
push
lock
push
pushf
or
or
xchg
fcomp
add
(bad)
lea
aam
aam
add
sbb
add
cmp
imul
mov
xchg
aaa
or
or
or
adc
dec
(bad)
and
loopne
mov
push
sbb
into
jns
add
adc
test
jns
lods
lock
jb
ins
test
sub
dec
push
fst
dec
in
int
jns
retf
in
push
repnz
mov
lock
add
mov
push
cmp
shl
push
lds
jp
xchg
and
leave
sbb
cmp
adc
push
(bad)
push
(bad)
sub
and
sub
in
or
adc
xchg
mov
mov
xor
inc
dec
jo
pop
aam
push
adc
aas
and
jno
call
mov
ds
xchg
sub
cdq
mov
enter
bound
rcl
or
add
sub
or
push
clc
add
and
rol
xchg
cmp
hlt
add
cli
or
push
pusha
js
loop
xor
loopne
(bad)
fs
mov
add
imul
or
mov
pusha
popa
pop
and
movs
jge
push
mov
call
sub
daa
or
add
push
and
cmp
adc
or
inc
inc
(bad)
cmp
mov
inc
push
xor
sbb
cli
icebp
imul
push
push
mov
mov
fdivr
mov
add
push
push
sbb
push
ds
sbb
mov
cld
inc
sub
dec
and
(bad)
jne
test
je
and
(bad)
and
dec
pop
add
xchg
and
add
sub
add
ret
repz
not
dec
mov
dec
mov
push
movs
mov
dec
push
push
mov
ror
es
loopne
out
cmp
or
push
inc
push
mov
cli
gs
outs
fmul
mov
loop
scas
mov
popf
inc
popa
xchg
loopne
sbb
movs
sub
in
sti
in
dec
fidiv
out
pusha
sbb
inc
mov
dec
cmps
das
push
mov
xor
push
push
push
push
call
sbb
and
sub
int
loopne
test
test
add
mov
fcom
loop
or
cld
loopne
xchg
xor
jmp
ror
shl
call
push
cmp
xor
push
cmp
push
(bad)
call
jno
add
adc
shl
sub
repnz
adc
cld
sti
je
cmp
xor
mov
cmp
mov
out
outs
push
sbb
leave
push
lea
mov
inc
and
enter
xor
enter
aaa
ja
jb
rep
push
mov
inc
(bad)
pop
ror
xchg
pop
push
pop
jmp
div
nop
test
rol
push
push
push
pop
adc
sub
and
pop
mov
add
inc
rol
sub
push
push
pop
(bad)
loop
inc
jecxz
adc
fs
and
xchg
jp
aas
mov
icebp
inc
pop
test
lea
push
or
sbb
or
fild
adc
lea
push
fdiv
imul
adc
inc
jl
shl
push
ret
jecxz
add
push
in
retf
push
js
mov
ins
aas
xchg
movs
fdivr
pop
lea
shr
sahf
gs
sbb
pop
rcl
push
daa
sub
mov
and
imul
fcmovnbe
les
pop
pop
xchg
daa
inc
dec
cld
xor
(bad)
and
loop
adc
mov
sub
stc
data16
push
je
ds
pusha
loop
(bad)
pop
mov
aas
adc
clc
and
imul
inc
inc
jmp
cmp
and
adc
pop
add
(bad)
inc
lods
push
inc
dec
in
add
push
lahf
movs
xchg
jne
lods
and
int3
mov
mov
f2xm1
je
xchg
adc
cmp
data16
push
adc
leave
shr
inc
xor
cld
xchg
add
and
std
sub
add
or
and
mov
sub
or
add
inc
jg
mov
xchg
inc
fs
(bad)
mov
or
loope
arpl
and
add
rcpps
pushf
sbb
add
add
adc
sub
sub
add
clc
and
mov
movs
add
lods
leave
push
xor
scas
pop
or
adc
and
retf
add
cmp
pop
rcr
mov
xor
mov
pop
shl
je
loopne
xor
cmp
test
das
and
or
add
adc
dec
add
mov
jg
shl
sbb
aaa
or
retf
xor
lods
or
nop
adc
sahf
sub
movnti
les
adc
xor
in
and
in
add
ja
and
out
test
xor
adc
add
ds
add
jmp
rol
jo
ret
stc
push
movzx
retf
fistp
js
and
movzx
pop
xor
adc
sub
pop
xchg
add
in
add
adc
retf
leave
sbb
jmp
inc
or
jae
nop
xor
ret
adc
push
cmp
mov
sub
dec
stmxcsr
pusha
sub
adc
jl
and
add
add
add
loop
sbb
sub
sub
jne
or
call
aam
cmp
loope
and
cld
or
les
sbb
add
mov
add
shl
mov
or
in
arpl
adc
and
loop
mov
jno
es
cwde
xchg
inc
jno
pusha
adc
or
and
lahf
addr16
je
scas
mov
adc
jmp
dec
adc
add
inc
push
add
pushf
mov
lods
cwde
add
lock
imul
loopne
xchg
inc
add
xor
mov
cli
in
add
jne
and
leave
add
(bad)
or
nop
(bad)
lahf
add
add
enter
lahf
add
and
xor
pusha
sbb
jmp
add
jbe
lahf
mov
mov
pop
and
inc
inc
lahf
add
and
cmp
dec
push
ror
jmp
dec
or
movs
mov
pop
ja
fs
fsub
fcmovb
and
pusha
sub
push
aam
and
pop
in
test
dec
push
es
mov
cs
cs
mov
and
shl
xchg
or
dec
xlat
adc
add
add
and
cmp
shr
popa
push
add
xchg
shr
loop
lods
mov
pcmpeqw
mov
dec
call
sub
sbb
adc
clc
inc
mov
mov
outs
dec
aas
rol
aas
enter
xchg
cmc
shl
das
sub
adc
dec
out
or
add
cdq
iret
jmp
pop
mov
gs
xor
mov
push
cmp
and
lods
dec
ret
mov
(bad)
cmp
clc
mov
jnp
jle
push
adc
jae
cmc
aaa
adc
adc
and
dec
cld
jge
and
jecxz
inc
mov
push
mov
inc
cld
xchg
and
nop
or
sub
in
mov
mov
enter
in
lods
stos
xor
sub
add
xchg
cli
mul
mov
outs
inc
add
rol
in
add
dec
push
mov
pop
cwde
mov
add
inc
xchg
hlt
fiadd
and
adc
add
daa
sbb
ret
and
out
std
das
test
add
inc
jmp
shl
or
jg
push
xchg
test
inc
imul
push
rol
and
add
and
hlt
adc
mov
or
pop
and
jne
mov
sbb
pop
inc
mov
mov
ror
pop
pop
jne
cwde
add
pushf
pop
or
xchg
add
lahf
cmp
and
push
pop
les
popa
jecxz
das
pop
dec
pop
test
lea
and
add
xor
scas
push
jmp
jmp
aas
sub
iret
cli
pop
and
sbb
push
cmp
xchg
mov
movs
and
rol
or
imul
xor
jge
and
loopne
pop
and
mov
sbb
add
in
in
test
sub
jg
clc
dec
xor
adc
cmp
add
dec
cmps
(bad)
fs
xlat
inc
or
movs
mov
dec
shl
test
(bad)
cli
or
add
cmp
jmp
or
push
or
les
xchg
rol
add
or
dec
test
loop
cmp
retf
inc
ins
add
jmp
add
ret
dec
shl
xchg
lods
repz
fcmovnb
into
push
and
popa
adc
xchg
jb
test
or
clc
dec
sti
mov
push
cmps
push
dec
ret
cmps
adc
(bad)
mul
addr16
addr16
xor
adc
scas
jge
add
iret
dec
mov
ret
cdq
sub
xor
bound
xor
adc
xchg
hlt
xchg
push
mov
xor
mov
xchg
xor
lds
bswap
(bad)
retf
inc
inc
sub
push
adc
or
cmp
pop
push
push
je
mov
leave
je
cmp
pop
mov
jb
inc
mov
mov
out
es
mov
je
or
push
sbb
and
dec
push
cmp
ja
add
cmp
adc
(bad)
cmp
and
rcl
adc
or
push
adc
pop
aaa
add
mov
mov
test
inc
mov
mov
test
dec
sub
push
push
pop
or
or
dec
add
je
add
sbb
mov
adc
or
xor
sbb
ret
ins
cld
shl
push
push
or
loope
call
xor
mov
push
adc
ja
ss
test
jb
mov
nop
mov
(bad)
sub
cmp
jb
inc
ds
jb
xchg
lock
outs
push
je
inc
add
sub
inc
jns
mov
enter
sbb
add
sub
int3
xor
idiv
(bad)
push
cmp
push
push
push
add
into
test
rcl
sbb
or
fwait
lock
lods
xor
xchg
jne
dec
adc
xor
movs
xor
add
fld
sbb
mov
sbb
rol
add
mov
mov
clc
xchg
shl
or
cld
jae
inc
add
jbe
dec
or
mov
lods
sub
lahf
xchg
mov
mov
int
cli
popa
call
sub
sbb
mov
pop
inc
sar
xchg
cmp
sbb
jle
pushf
in
cmp
ja
neg
clc
xchg
add
cmp
dec
cld
lahf
jne
add
sub
movs
div
mov
sub
clc
xor
cmove
lea
shl
cmp
scas
loopne
jp
orps
ins
mov
popf
and
push
add
mov
sub
ds
sbb
movs
aas
jp
enter
cmp
jb
sub
(bad)
lock
mov
jle
mov
mov
push
jo
scas
and
(bad)
mov
fwait
das
push
nop
xchg
adc
push
add
scas
push
inc
adc
cmp
sub
mov
jg
pop
adc
sbb
lahf
mov
popa
cwde
aas
cld
add
push
(bad)
and
add
mov
mov
js
jbe
sti
in
inc
sbb
jne
pop
jns
(bad)
add
inc
pop
dec
adc
mov
and
stc
sahf
out
bound
mov
push
push
inc
xor
pop
add
sub
mov
test
xchg
shl
push
inc
dec
pushf
fwait
adc
pop
clc
mov
xchg
cmps
mov
neg
sbb
xchg
add
and
pop
fcmovbe
dec
mov
and
xor
fadd
sbb
clc
sbb
jb
cmp
mov
xor
sub
add
int3
int3
sub
push
imul
cli
fld
xchg
lea
pop
cmp
fcmovbe
or
xor
pop
dec
mov
or
scas
mov
mov
inc
mov
popf
dec
jle
push
sbb
jns
dec
leave
xor
add
pop
xor
daa
pop
ja
mov
or
or
or
push
das
mov
pop
dec
ret
aas
pop
cmp
mov
loop
pop
aas
push
or
add
and
sbb
pop
xor
in
pusha
test
xchg
or
push
push
sbb
push
inc
or
in
mov
push
(bad)
sub
cs
xchg
test
or
bound
sub
outs
inc
adc
pop
push
and
add
int3
test
mov
xchg
rcl
or
int
pop
mov
push
adc
pop
shr
mov
or
jns
gs
sti
stos
add
push
inc
mov
loopne
add
pop
imul
adc
popa
leave
lea
jg
xchg
movs
(bad)
in
jecxz
cmp
mov
cmp
popa
loopne
ret
pop
sub
scas
ins
jno
(bad)
adc
mul
add
xchg
sbb
xchg
rcr
dec
mov
ret
cwde
fmul
adc
aam
and
cmp
xchg
xor
and
enter
and
jne
in
or
ret
mov
test
sahf
aaa
push
aam
out
bound
xchg
loope
leave
ret
ds
dec
mov
iret
inc
jbe
ror
push
or
addr16
or
xlat
adc
inc
sbb
mov
jno
cmc
popa
xlat
and
adc
mov
sbb
and
or
xor
pop
cwde
mov
mov
xchg
(bad)
add
jg
pop
aas
jae
push
dec
adc
stos
sub
imul
mov
mov
add
add
mov
clc
hlt
neg
and
or
jl
sub
fist
sub
jmp
(bad)
mov
ja
sbb
add
pop
adc
nop
sbb
mov
mov
jmp
xor
lock
push
ins
xchg
xchg
pop
ret
or
add
add
test
call
sub
jge
loopne
xor
fild
xchg
xchg
jge
adc
jmp
movs
adc
scas
sbb
in
sbb
(bad)
cld
cmp
xchg
into
cmp
(bad)
or
fldl2t
adc
pop
adc
sbb
pop
adc
add
rcl
dec
push
aaa
pop
mov
retf
das
sbb
and
inc
push
cmp
adc
in
fld
scas
cmc
add
xor
nop
movs
pop
neg
add
or
fist
add
sbb
mov
push
inc
inc
push
icebp
jecxz
mov
add
retf
add
test
xchg
xchg
hlt
cmp
push
add
sub
jo
xor
(bad)
in
push
nop
popa
mov
mov
add
jmp
(bad)
push
adc
mov
ror
movs
adc
rol
adc
aad
(bad)
pusha
mov
inc
dec
cmp
sbb
dec
or
pop
cs
enter
lock
mov
loope
or
hlt
lods
pop
cmp
dec
xchg
adc
movsx
and
push
pop
fild
aam
ret
lea
sbb
xlat
daa
mov
bound
nop
adc
les
cmp
inc
adc
in
push
or
dec
add
add
pmuludq
dec
sbb
(bad)
push
or
es
imul
popa
sti
add
or
out
aaa
fs
or
int3
lds
pusha
test
inc
fdivr
or
les
aas
pop
adc
xor
imul
int3
inc
mov
xchg
test
jge
adc
fs
movs
push
or
shl
add
movs
inc
pop
cmps
or
cmps
pusha
jmp
or
pop
mov
fisub
or
push
inc
or
mov
loopne
adc
jmp
mov
arpl
adc
xchg
movs
mov
push
xor
(bad)
add
pop
sbb
mov
add
or
pop
lea
push
mov
xchg
or
daa
push
ret
in
push
xchg
pop
inc
pop
and
ins
ins
outs
cmps
jle
lock
popa
clc
jo
gs
add
add
and
fldcw
sbb
push
pop
xor
dec
lahf
ss
and
daa
pop
sbb
inc
mov
push
xor
jge
cmp
mov
int3
mov
pop
sbb
dec
push
aaa
inc
xor
or
shl
sub
add
inc
stos
add
fs
jmp
adc
inc
gs
adc
dec
xchg
hlt
push
jmp
add
bound
jecxz
in
add
mov
add
jno
or
cs
and
pop
sub
xchg
or
stos
loope
pusha
ins
adc
add
unpckhps
xchg
(bad)
dec
shr
push
add
push
pusha
sub
push
mov
pop
enter
add
ins
pop
xchg
xor
js
mov
inc
add
loopne
fld
stos
std
or
jg
outs
mov
sub
pushf
pop
add
inc
add
cmps
sub
push
inc
sub
inc
mov
mov
sti
shl
inc
jp
jnp
add
adc
loopne
ret
adc
sbb
cmp
dec
or
sub
jne
push
and
mov
movs
lock
push
push
add
clc
ror
cmc
cmp
scas
adc
ret
int3
pop
pop
or
lock
adc
shr
int3
fistp
or
pop
retf
adc
or
xchg
add
rcr
loop
call
add
loopne
dec
cmps
sub
push
mov
xor
mov
inc
cmps
enter
dec
inc
inc
shl
jmp
mov
outs
push
fwait
nop
or
push
rol
rol
inc
stos
mov
mov
test
dec
lahf
sbb
add
div
or
sbb
jnp
inc
ins
push
neg
add
lea
cmp
add
sbb
pop
sub
and
add
es
inc
mov
inc
add
jmp
daa
pop
pop
movs
xchg
jnp
es
arpl
xchg
mov
and
imul
jnp
xchg
push
jmp
cdq
sub
rcr
scas
loopne
add
inc
mov
scas
and
mov
add
pop
add
(bad)
shr
popf
clc
enter
das
or
dec
aas
ret
mov
add
inc
add
mov
inc
xchg
add
clc
push
push
mov
mul
mov
pusha
je
sbb
adc
mov
dec
add
push
sub
bound
xor
push
add
(bad)
pusha
mov
add
xor
ds
adc
or
dec
jmp
js
or
add
mov
sub
jmp
add
sar
or
mov
fs
cmp
out
ins
mov
add
dec
loopne
push
dec
inc
js
jg
add
cmp
(bad)
jl
jmp
sub
(bad)
(bad)
std
ffreep
cmp
test
clc
push
dec
cmp
jne
cmp
or
jne
sbb
loope
clc
je
push
push
fsub
mov
sub
inc
or
xor
aaa
jbe
dec
and
add
movs
adc
adc
adc
enter
push
mov
or
in
xchg
add
or
push
cmp
or
aas
adc
add
loopne
cmp
jle
dec
fmul
imul
dec
aas
call
xchg
in
(bad)
ficom
lock
test
in
sbb
ret
push
les
jmp
and
or
int3
jns
add
inc
sbb
add
or
mov
sub
fs
lahf
mov
xchg
xor
sub
sub
xchg
push
xchg
sbb
or
enter
dec
aam
call
fadd
int3
(bad)
int3
cs
xor
scas
dec
mov
scas
and
pop
repz
pop
pop
or
inc
push
and
aam
outs
cmp
mov
ss
inc
push
sar
or
enter
scas
pop
les
in
jg
mov
nop
fnstenv
pop
sbb
loopne
mov
pop
cmp
gs
pop
sbb
xchg
or
clc
fucomip
adc
mov
(bad)
or
adc
pusha
mov
pop
mov
inc
push
mov
inc
rol
mov
adc
or
shr
arpl
or
lahf
cmp
stos
mov
sub
in
dec
loopne
(bad)
sub
mov
mov
inc
mov
shl
or
mov
mov
push
mov
iret
call
add
pop
nop
aas
xchg
add
and
inc
jge
inc
mov
dec
pop
les
mov
test
jmp
add
cdq
xchg
xchg
ret
fadd
mov
mov
mov
(bad)
lock
add
add
pop
add
mov
cmps
jmp
xor
jg
or
dec
in
shl
add
mov
and
mov
mov
push
xor
or
and
adc
push
das
push
loopne
daa
fistp
pop
in
or
fistp
mov
sar
mov
and
mov
mov
lds
jg
cmp
dec
push
dec
push
(bad)
cmp
in
cwde
mov
(bad)
lds
sbb
sub
cmp
aad
loopne
in
pop
adc
cmp
es
jg
outs
dec
in
pmulhuw
les
outs
fmul
xchg
sbb
ret
push
add
pusha
dec
(bad)
call
pop
loop
stc
cmp
inc
mov
pop
cmp
inc
inc
jmp
test
pusha
cdq
xchg
les
out
test
je
rcr
and
retf
add
add
cmp
mov
pop
xor
fdiv
mov
rcr
pop
call
push
xor
inc
lds
cmp
daa
push
cmp
mov
rol
xlat
or
scas
int3
jg
mov
or
xor
xchg
and
iret
ror
push
loopne
clc
outs
inc
mov
inc
aas
mov
jl
pop
or
ins
push
or
lahf
ror
push
leave
mov
sub
adc
xor
and
mov
scas
and
adc
imul
dec
and
scas
mov
inc
mov
or
mov
outs
inc
cpuid
mov
loopne
dec
cmp
add
add
cmp
mov
jmp
pop
xor
push
mov
lds
test
adc
add
lds
inc
js
js
mov
lock
adc
lock
mov
sbb
(bad)
xor
aas
femms
fs
adc
in
sub
fs
inc
pop
rol
pushf
sbb
sbb
jo
xchg
(bad)
call
in
int3
mov
rcr
dec
mov
in
into
pop
inc
mov
mov
xor
mov
dec
aas
clc
cmps
inc
and
test
aaa
btc
ret
sbb
hlt
dec
js
dec
cwde
push
xchg
outs
mov
ja
xor
add
fcom
movs
fistp
add
or
std
popf
mov
adc
adc
mov
shl
sub
pop
dec
int3
xor
xor
cwde
ja
add
cmp
rol
leave
popa
add
(bad)
in
lea
(bad)
fdivr
xlat
adc
cld
pop
mov
cld
(bad)
(bad)
inc
jae
imul
into
mov
sbb
dec
sub
shr
dec
cmps
or
pushf
ret
scas
mul
or
in
sar
sub
cmp
hlt
adc
xchg
rol
push
push
fdiv
add
shl
inc
test
and
dec
push
adc
ss
test
jo
sbb
dec
adc
mov
jnp
sub
jbe
mov
sti
sbb
inc
push
in
mov
cwde
and
inc
xor
sbb
adc
xor
mov
mov
jns
mov
jg
cld
cld
(bad)
nop
dec
push
clc
hlt
mov
fdivr
enter
add
add
retf
cmp
cmp
retf
add
sub
retf
push
add
or
test
pop
sbb
pop
or
movs
das
pusha
rcr
dec
mov
sbb
test
mov
xor
cmove
jb
les
je
sbb
cmp
add
mov
jg
shrd
(bad)
out
movs
xchg
in
pusha
rol
data16
mov
sbb
add
pop
invd
sbb
xchg
dec
mov
(bad)
out
bswap
in
push
mov
cmp
cmp
mov
into
and
push
push
bound
sysret
push
or
(bad)
(bad)
rcl
mov
pop
fsubr
sub
pop
mov
shl
loopne
adc
dec
test
and
iret
add
fdivr
(bad)
push
mov
(bad)
iret
enter
push
fistp
in
stos
in
sub
mov
icebp
mov
inc
dec
and
scas
xchg
fisttp
imul
jns
mov
or
shl
movs
in
ja
dec
pusha
sbb
jne
xor
inc
fisub
ret
xor
popa
ret
lock
pop
(bad)
out
test
pop
and
call
add
mov
std
sub
ror
ffreep
cmp
inc
pusha
sbb
and
in
add
jl
clc
or
int3
mov
push
and
and
rcl
add
xchg
dec
push
or
xchg
lea
xchg
cmp
sbb
or
(bad)
jo
jne
lock
sbb
aas
or
add
cvttps2pi
jo
add
xchg
lock
mov
mov
add
push
push
fcomp
pop
ror
aas
mov
leave
mov
iret
adc
lock
shl
add
xor
sar
jg
jo
ss
aam
aas
in
adc
aas
jg
push
scas
sub
lods
aam
jg
xor
adc
int
mov
lods
mov
xchg
lea
xchg
dec
cmp
sbb
test
adc
(bad)
jo
lds
dec
(bad)
xlat
mov
jg
dec
dec
popf
adc
xor
mov
imul
nop
adc
mov
jecxz
(bad)
jnp
sar
add
scas
cmp
inc
out
pushf
lods
xlat
js
sbb
mov
aam
(bad)
fadd
sub
adc
iret
and
jo
mov
scas
shl
fnstenv
inc
jo
or
lods
lahf
pushf
add
fisub
in
lahf
or
sbb
fstp
dec
inc
mov
mov
add
ret
xor
scas
dec
pop
and
ror
ficom
aam
mov
loope
mov
mov
dec
hlt
lahf
mov
mov
or
inc
sbb
js
add
loopne
pop
xor
sar
xor
aam
mov
nop
imul
push
dec
and
mov
pop
or
fiadd
or
(bad)
test
pop
mov
rol
push
jbe
(bad)
lock
xor
popf
mov
and
pushf
mov
loopne
jg
add
(bad)
pop
or
inc
adc
jns
leave
add
xor
mov
jecxz
mov
push
mov
sete
push
pop
mov
inc
in
xor
in
or
enter
movs
jg
add
fbstp
push
inc
sbb
add
adc
jl
or
sub
dec
dec
imul
add
inc
add
(bad)
mov
or
je
inc
adc
popa
fwait
adc
cwde
arpl
add
add
lea
shr
pop
add
add
lods
mov
loope
and
in
fild
int3
pop
mov
shr
ret
pop
fcomp
add
adc
add
and
or
pop
jl
add
xor
add
add
aam
imul
adc
pop
lea
pop
xor
cmp
cld
test
pusha
dec
pop
or
pop
aad
movs
mov
in
sbb
inc
add
or
arpl
jo
add
sbb
xchg
out
pop
jle
push
adc
les
or
add
sbb
jb
mov
adc
push
arpl
pop
pop
mov
(bad)
xchg
lods
test
in
bound
std
mov
mov
pop
mov
leave
in
cwde
pop
xchg
nop
mov
leave
mov
sar
and
mov
cmp
push
lea
mov
sbb
mov
push
xor
test
xor
mov
in
mov
movaps
or
in
pop
mov
rol
adc
nop
dec
loopne
popf
pop
or
stos
sub
sbb
inc
mov
push
pop
mov
lods
sbb
lea
ss
and
sub
es
nop
mov
test
jo
pop
(bad)
mov
int
ficom
inc
jo
enter
dec
ins
les
inc
lds
ins
mov
or
dec
jo
aas
jmp
mov
psubusb
test
pushf
inc
rcr
or
int
test
adc
lea
dec
cmp
push
inc
jmp
jg
pop
mov
movq
sbb
dec
scas
lea
push
stos
mov
sbb
imul
sub
add
adc
push
xor
ins
mov
sub
cmp
stos
mov
test
sub
xor
ret
inc
mov
mov
out
icebp
aas
add
pop
sbb
dec
mov
add
add
xor
dec
out
loopne
xchg
xchg
(bad)
shl
add
jg
mov
adc
out
ins
fbstp
jo
add
adc
in
ror
enter
inc
and
sbb
sbb
pushf
xor
dec
jb
xor
cdq
fidiv
adc
dec
es
push
dec
sbb
sbb
or
mov
lea
jns
adc
xchg
lea
xchg
dec
xor
adc
push
sub
mov
cmp
out
mov
or
dec
and
add
pop
icebp
and
add
sets
mov
adc
fisttp
outs
movs
lds
out
push
add
(bad)
mov
aad
mov
popf
int3
aaa
ret
lahf
mov
fstp
sub
adc
call
jg
add
sbb
add
repnz
push
repnz
pop
movs
push
mov
mov
push
cmp
cmp
ds
dec
addr16
cdq
test
lock
in
or
in
sub
fcmovne
cld
call
fdivr
cmp
sbb
cmp
xor
mov
push
loopne
fs
pop
push
jge
bound
lea
push
adc
dec
dec
xor
hlt
adc
adc
(bad)
ja
dec
add
daa
inc
pop
jo
dec
iret
enter
add
enter
mov
test
test
int3
shl
and
lea
push
or
add
mov
cdq
(bad)
in
adc
add
and
mov
inc
cdq
gs
mov
jno
and
mov
adc
ja
pop
lock
mov
jl
or
mov
and
pop
jo
dec
cmc
dec
test
or
ins
dec
mov
test
aas
adc
pop
rol
mov
in
jmp
push
lahf
mov
and
cmps
push
cmp
mov
js
add
or
jne
dec
xchg
or
cwde
push
inc
lods
jmp
cmp
adc
loop
mov
(bad)
popf
div
cmp
aam
xor
adc
xchg
loopne
mov
push
add
mov
adc
mov
call
nop
call
adc
out
loopne
bound
add
test
fild
pop
cmps
stos
outs
fdivr
mov
pop
sbb
int3
jo
add
mov
pop
les
rol
cmp
pop
call
pop
mov
or
push
test
jmp
push
add
pop
fsub
adc
ror
dec
pusha
je
mov
mov
(bad)
jmp
mov
sbb
mov
xchg
add
cmc
cli
or
pop
jno
aas
lock
movs
sbb
xchg
aas
adc
shl
fbstp
or
and
and
dec
xor
jo
cli
sub
or
and
movhps
xchg
leave
in
sti
sbb
mov
jl
cld
dec
les
mov
loopne
push
ret
jg
pop
adc
mov
inc
pop
test
adc
repz
sbb
aas
inc
and
clc
pop
xor
add
lock
mov
clc
sbb
outs
dec
out
cs
adc
divps
add
dec
xor
or
std
movs
pop
shr
shr
dec
scas
mov
hlt
inc
pop
fdiv
mov
lahf
xchg
add
fistp
in
shl
mov
es
movs
int3
adc
je
fwait
xchg
xor
xor
push
adc
add
sti
(bad)
test
jp
sub
iret
cmp
paddd
aas
ror
pop
mov
pushf
seto
push
and
mov
loope
sbb
jo
clc
mov
lea
iret
cwde
jl
scas
adc
sbb
jmp
cmp
or
loop
pop
mov
ret
cmp
pushf
ins
pop
jb
mov
addr16
inc
inc
std
jmp
pop
test
mov
setns
cs
pop
add
mov
cmp
jo
push
pusha
sbb
psubw
push
es
add
adc
jmp
sub
or
js
pop
pop
add
pop
lods
test
data16
ss
push
pusha
adc
push
inc
mov
imul
out
lock
mov
jg
in
jne
rcr
scas
xlat
push
add
fcmovne
mov
loope
mov
add
daa
outs
fild
xor
add
add
stos
outs
pop
dec
mov
das
pusha
adc
and
pop
adc
add
or
jmp
sbb
stos
add
jg
xor
rcr
aam
mov
push
pop
add
and
add
jecxz
xchg
adc
xor
bound
lahf
add
mov
mov
sub
rcr
es
lock
pop
test
sbb
or
fistp
outs
add
xor
mov
jbe
loopne
fs
lods
add
pop
and
add
pop
in
adc
sbb
dec
add
call
and
pop
sbb
mov
xor
or
loopne
pop
int3
in
dec
rcl
adc
setl
jl
dec
jl
mov
movs
pop
mov
or
pop
das
add
aas
out
jl
push
inc
fist
push
sbb
adc
add
push
call
or
push
ret
mov
test
andnps
adc
shl
mov
adc
push
rcr
mov
cmp
pop
lea
popa
(bad)
in
inc
lahf
dec
fmul
fsubr
jne
(bad)
jmp
in
xchg
dec
popf
pop
sbb
jg
sub
inc
fistp
dec
pop
call
fstp
out
dec
loopne
fmul
mov
or
pusha
rol
ds
fbld
jg
mov
rcr
loopne
dec
dec
int3
aas
dec
enter
mov
mov
out
unpckhps
test
and
jmp
mov
pop
mov
pop
int3
pop
or
mov
aas
adc
outs
push
nop
(bad)
in
enter
add
cwde
ret
lock
or
or
mov
neg
das
xor
push
or
fcomip
imul
mov
(bad)
and
jmp
cwde
push
xchg
jge
push
jo
dec
ror
inc
or
adc
ret
aas
dec
mov
xchg
or
xor
dec
or
loopne
add
xor
push
cmps
or
fisttp
in
dec
imul
int3
or
push
shr
shl
and
lahf
iret
psrlq
fwait
cwde
mov
add
pop
mov
pop
dec
pop
dec
ins
lods
or
ins
sub
push
bound
popa
in
(bad)
adc
push
jg
push
and
dec
push
sub
std
push
push
fmul
scas
call
jge
sbb
xor
ret
push
out
adc
fbld
rol
pop
mov
inc
push
sub
push
jg
push
imul
mov
xor
lahf
pushf
sub
jg
jp
mov
shld
icebp
mov
aam
or
loop
pop
add
popf
cmc
add
add
pop
adc
dec
aam
mov
das
loopne
fimul
mov
je
enter
pop
iret
xor
call
dec
vmread
cmp
push
adc
and
test
pop
das
loopne
xadd
aam
pop
adc
and
sbb
loopne
xchg
push
xchg
pop
lods
adc
mov
(bad)
sbb
mov
jnp
mov
aas
lods
or
mov
ror
cmp
adc
pop
pop
mov
idiv
test
scas
popw
add
outs
adc
inc
loopne
mov
les
jmp
pop
inc
loopne
mov
aas
adc
inc
scas
dec
xor
mov
fstp
cmp
stos
(bad)
mov
movs
(bad)
test
bound
add
jno
fcomp
cmp
out
xchg
scas
movs
or
lods
or
mov
sbb
push
das
adc
or
xor
adc
aam
add
jg
inc
(bad)
aad
pop
dec
les
sar
push
add
jo
add
or
scas
and
pop
ret
pusha
les
inc
jg
mov
(bad)
das
pop
xchg
cmp
push
pandn
cmc
clc
in
inc
mov
jmp
pop
jg
xchg
inc
pop
push
lock
pop
inc
mov
dec
in
xchg
pop
lds
sub
lahf
or
sub
pop
pusha
and
mov
pop
lods
fldenv
aaa
jmp
pushf
sbb
sub
mov
das
nop
push
sbb
adc
push
push
lahf
fild
adc
lahf
fistp
pop
pop
aas
fcomp
jo
mov
(bad)
sbb
mov
pop
pop
sbb
shr
loopne
in
pop
push
loop
pop
pop
sbb
pop
or
outs
lahf
jbe
add
pop
sbb
imul
iret
cmp
sbb
mov
rcr
jo
mov
jo
mov
sbb
pop
or
sub
sbb
shl
(bad)
outs
sbb
aas
sub
dec
sbb
aas
add
adc
xchg
rcl
sbb
jo
mov
pop
clc
(bad)
mov
aam
add
add
push
mov
pop
sbb
add
add
int3
pop
sub
cmp
sub
pop
xor
movs
cwde
lahf
scas
push
adc
aas
push
rcr
inc
dec
cs
jo
mov
pop
ror
movs
xor
xor
scas
int3
ret
(bad)
push
scas
or
(bad)
(bad)
fcomp
ror
les
icebp
add
or
test
pop
xlat
enter
xor
add
push
add
scas
pop
rcl
push
shl
lahf
add
mov
cmc
add
dec
fdivr
sub
add
shr
dec
mov
sub
lds
and
out
fsub
mov
out
psubsb
mov
gs
jl
retf
inc
or
jl
inc
ror
test
test
pop
fdiv
fwait
or
not
or
pop
cmps
lea
jbe
or
out
lea
ss
fcomip
ret
(bad)
aam
pusha
adc
in
or
ins
and
sbb
lea
inc
mov
mov
call
mov
scas
in
(bad)
das
xor
and
mov
or
movs
mov
js
ins
pop
aam
jp
push
mov
push
aad
adc
add
cmp
fwait
mul
adc
dec
xchg
inc
adc
iret
mov
adc
sbb
gs
push
jne
jg
add
in
dec
add
in
aaa
mov
mov
loop
lea
ins
daa
adc
inc
push
ins
mov
mov
add
inc
dec
add
cmp
cmc
and
jmp
fwait
push
mov
push
loopne
jne
and
xchg
iret
pop
and
arpl
push
mov
adc
add
test
jmp
adc
pop
push
nop
sbb
sbb
sbb
sbb
xor
or
pop
scas
test
es
jo
xchg
jg
mov
pop
and
jl
(bad)
pop
adc
daa
dec
pop
cmp
adc
push
push
or
and
xor
add
loopne
rcr
in
dec
dec
xor
mov
pusha
mov
arpl
lds
or
pop
gs
mov
add
mov
ins
in
inc
push
imul
call
jle
call
mov
or
add
push
inc
jo
data16
jecxz
(bad)
pusha
call
lea
cmp
movs
loopne
lea
xchg
dec
xor
adc
ret
sbb
in
add
and
les
push
and
sub
loope
sub
aas
cmp
dec
iret
lahf
ins
or
hlt
sub
in
dec
sbb
shr
mov
lods
das
add
xchg
nop
mov
and
xchg
popf
sbb
pop
pop
movs
pop
push
movs
lahf
sub
in
js
and
xchg
or
(bad)
push
dec
cmp
or
dec
xor
and
(bad)
(bad)
and
adc
adc
add
rol
sbb
xchg
cmp
sub
jmp
aas
rcl
and
aam
adc
and
out
push
add
in
fucomip
ins
inc
gs
out
fisubr
xor
imul
loopne
rcr
pop
pop
dec
add
aam
outs
in
jg
into
mov
adc
pop
das
call
add
adc
lea
inc
add
daa
outs
xor
inc
(bad)
sub
sub
cmp
xchg
(bad)
sub
cmp
cmp
inc
jg
and
and
cmp
lea
cmps
adc
lock
aam
xor
bound
cmp
sbb
mov
call
jecxz
dec
jmp
xlat
push
mov
les
mov
call
adc
aas
pop
inc
aam
pop
les
fistp
adc
lds
sbb
adc
in
push
xor
outs
out
outs
popf
dec
test
xor
or
xchg
iret
pop
rcl
scas
push
dec
jmp
adc
and
dec
jno
test
xor
jmp
lahf
mov
inc
ror
push
or
cmp
movs
arpl
xor
mov
inc
cmp
pop
jmp
adc
leave
nop
jmp
add
and
mov
or
sbb
rol
les
mov
cld
mov
xor
xor
fcomp
shl
xor
cli
inc
adc
add
dec
test
xchg
cmp
sub
nop
sbb
out
inc
sub
or
mov
inc
jmp
aaa
jg
test
mov
mov
adc
pop
push
push
pop
cmp
call
push
pop
jg
mov
cmps
call
mov
or
fsub
inc
fdivr
xchg
loopne
mov
and
jno
pusha
mov
aas
and
sbb
enter
mov
mov
push
sbb
inc
out
mov
or
and
add
mov
push
jge
iret
cmp
cld
pop
sub
test
pushf
cmp
lahf
add
pop
cmp
cwde
add
mov
fmul
adc
call
lahf
xor
pusha
and
cmp
fistp
jmp
imul
retf
stos
push
iret
mov
pop
(bad)
pop
cmp
add
xor
test
xor
loopne
mov
cmp
cdq
in
cmp
add
cmp
push
add
arpl
in
loopne
push
mov
pop
int3
vphaddbw
adc
test
add
scas
mov
(bad)
ds
mov
rcl
or
test
mov
lahf
inc
jmp
and
add
push
sbb
fnstsw
adc
lahf
xchg
ror
loope
mov
add
add
js
(bad)
sub
retf
popa
lea
sbb
sub
or
stos
sbb
jo
mov
fild
in
pand
sub
fmul
adc
xchg
aam
outs
jo
push
adc
aam
sahf
pusha
xor
adc
inc
ret
imul
lock
xchg
je
fdivr
mov
fdivr
loopne
push
fild
or
outs
loopne
push
sbb
or
imul
or
mov
je
adc
pushf
gs
movs
ret
or
(bad)
retf
call
add
mov
inc
outs
dec
movs
inc
jne
sbb
int3
dec
xchg
xor
test
push
push
xor
cmps
enter
(bad)
in
dec
and
pop
arpl
dec
sbb
cmp
inc
mov
inc
push
or
inc
or
jnp
lods
xor
sbb
dec
shr
jecxz
xchg
movs
mov
adc
push
ret
add
xor
mov
mov
lea
mov
or
xor
test
sub
dec
cdq
lea
or
push
xor
and
(bad)
mov
scas
pop
and
fwait
ss
lea
ins
adc
adc
xor
sub
dec
add
or
or
in
cld
std
clc
std
call
lock
add
jmp
sub
push
xchg
dec
call
ss
in
xchg
imul
fsubr
add
push
call
mov
popa
adc
hlt
lock
popa
add
add
mov
fwait
(bad)
ins
mov
adc
push
mov
mov
xchg
imul
fwait
mov
lods
adc
fidiv
sbb
inc
xchg
inc
pushf
not
mov
dec
mov
adc
push
lea
aad
js
rcl
std
xor
mov
arpl
ins
sbb
sbb
(bad)
cmp
pop
add
inc
pusha
mov
or
dec
jo
loopne
xchg
imul
mov
add
cmp
pusha
mov
cmp
add
add
mov
loopne
subps
sub
popa
inc
sub
daa
cdq
fdiv
adc
and
add
shl
mov
aas
xor
call
gs
or
ins
vrcp14ss
loop
mov
(bad)
(bad)
or
push
add
cmp
popa
cmp
rcr
dec
nop
inc
or
adc
and
fcom
dec
addr16
mov
addr16
scas
or
ins
pop
test
mov
or
cmp
mov
sub
loopne
mov
pop
inc
add
(bad)
mov
sbb
lods
ret
pop
add
inc
adc
adc
add
mov
and
jae
inc
loope
dec
pop
aas
inc
mov
cmp
adc
call
lahf
add
lahf
adc
pop
adc
les
inc
dec
mov
add
mov
dec
lods
mov
cdq
jg
pop
adc
push
add
xchg
jne
sub
dec
aam
add
jo
scas
outs
dec
push
push
ret
das
lea
adc
jae
lds
inc
mov
and
cmp
adc
add
imul
mov
nop
pop
push
or
cmp
lods
pop
lahf
and
(bad)
add
push
mov
push
cmp
jg
push
pushf
or
and
test
mov
and
aas
xchg
cmp
sub
push
push
pop
jg
(bad)
pusha
scas
mov
mov
sub
and
jg
inc
and
inc
pop
or
mov
int3
scas
enter
push
pushf
xchg
xchg
pop
aad
push
jbe
or
lahf
dec
test
inc
stos
sar
dec
adc
mov
psubusb
pusha
lahf
pop
xor
mov
push
and
mov
pop
mov
jg
seto
rcl
jg
test
test
outs
add
mov
add
xor
mov
jo
or
std
imul
fs
adc
inc
push
jo
or
dec
fmul
pop
pop
fisttp
aam
jo
mov
adc
mov
jecxz
and
xchg
imul
adc
fs
jmp
int
inc
xchg
mov
sbb
mov
push
clc
std
push
loop
and
popa
add
in
std
and
or
or
push
pop
clc
test
and
sahf
int
rcl
inc
shr
outs
loope
jne
mov
(bad)
sbb
ret
cwde
retf
scas
cld
sbb
cmp
push
pop
sti
mov
int
icebp
inc
cmp
cli
lods
inc
mov
push
sub
popa
inc
mov
sbb
movs
xchg
cli
cli
jo
imul
stc
or
mov
mov
sub
aam
cmp
inc
sar
mov
adc
clc
icebp
clc
xchg
dec
dec
xor
adc
enter
test
sub
neg
add
movs
sbb
adc
add
stc
cmc
idiv
ins
sbb
push
fdiv
cdq
fs
sub
cmc
hlt
hlt
fs
dec
es
hlt
hlt
popa
dec
es
repz
or
(bad)
es
fs
xor
js
imul
mov
xchg
mov
add
rcl
lahf
sbb
iret
lods
cmp
popf
add
dec
js
dec
(bad)
dec
test
sub
jo
imul
fld
rcr
cmps
fisttp
and
(bad)
jnp
push
adc
sub
lods
lea
xchg
sub
adc
or
leave
mov
mov
mov
pushf
cwde
cmp
imul
add
std
std
sbb
lea
enter
push
pop
inc
adc
mov
mov
pop
pop
cmp
mov
shr
jg
adc
jb
pop
shl
pop
pop
xor
xor
or
pop
push
sbb
cld
xchg
push
pop
adc
inc
(bad)
add
or
je
pop
push
pop
add
(bad)
ret
lods
xor
out
das
push
inc
lods
inc
(bad)
sbb
popa
retf
mov
int
mov
push
sbb
aas
ins
ins
push
pushf
inc
sub
adc
xor
es
jbe
inc
inc
test
cwde
fiadd
cmp
cmp
jecxz
sub
xchg
int3
fstp
sbb
je
push
mov
call
outs
adc
inc
pusha
pop
xor
pop
iret
sbb
and
add
sub
pop
jl
adc
pop
push
imul
inc
push
cmp
mov
jecxz
jecxz
inc
loope
call
adc
outs
jecxz
rol
inc
dec
es
and
inc
pusha
xchg
(bad)
std
aaa
fs
dec
mov
sub
and
std
imul
fs
cld
cld
cld
cdq
fs
dec
cld
cld
cld
fs
dec
es
cld
sti
xchg
dec
es
sti
sti
sti
dec
es
fs
sti
sti
fnstsw
ret
dec
rcr
cli
push
and
and
pop
add
or
mov
mov
je
mov
pop
push
(bad)
push
sbb
mov
or
and
call
(bad)
pop
adc
xor
cld
add
lock
push
sbb
or
mov
cwde
and
not
wbinvd
sub
sub
add
xor
xchg
ret
sets
push
or
adc
pop
jnp
or
inc
mov
xchg
test
les
cmp
push
daa
cmp
or
jno
push
jo
and
std
or
and
xor
or
icebp
sbb
push
adc
add
gs
or
add
add
push
les
aad
jbe
rcl
movs
add
lahf
add
cwde
add
data16
or
and
dec
push
pop
and
push
aas
sub
and
jmp
push
xchg
adc
jmp
addr16
mov
add
test
or
movs
mov
adc
addr16
or
loop
lods
and
(bad)
add
sub
sub
dec
mov
pusha
and
jo
cwde
push
or
in
lock
push
test
sbb
dec
xchg
iret
or
call
inc
cs
cs
mov
add
sar
inc
nop
call
ret
int3
out
xchg
push
xor
or
fs
mov
add
fs
mov
and
jle
out
pop
test
test
pusha
sbb
aas
mov
sub
mov
jbe
jmp
aas
int3
pop
test
inc
sbb
aam
adc
adc
imul
int3
dec
xchg
xor
sbb
ret
push
xor
jae
push
lock
mov
sbb
(bad)
push
sub
add
add
pop
in
inc
ret
ins
sub
xchg
stos
popf
push
rcl
adc
mov
and
aas
cwde
nop
jg
leave
aad
call
dec
adc
sub
jo
push
add
sbb
pop
pop
xsha256
ins
jge
jno
or
cmp
daa
jb
jg
dec
shl
dec
xor
(bad)
pusha
mov
out
jb
or
shr
lahf
dec
sbb
jae
aas
stos
push
dec
xor
js
adc
lods
sti
dec
cmp
sub
stc
dec
cmps
dec
sbb
inc
sbb
(bad)
hlt
iret
aam
inc
xor
int3
jmp
inc
js
test
pop
jae
je
and
aas
(bad)
je
sbb
mov
das
jg
pop
mov
inc
sbb
push
sbb
pop
test
je
fbld
mov
cmp
pop
push
mov
mov
inc
jo
mov
fbstp
push
aas
pop
ss
enter
popa
sbb
ret
or
fild
add
fs
cmp
cld
jg
push
jno
dec
in
(bad)
ja
fbstp
mov
aas
add
das
popa
jnp
xor
fmul
adc
shl
adc
sbb
js
pop
mov
lahf
pusha
les
cmp
mov
xchg
push
popa
js
aas
sbb
je
loope
mov
je
vmwrite
nop
cmps
xchg
mov
add
in
imul
jo
movs
sub
push
out
add
mov
sub
jmp
pop
jp
jg
jnp
add
int3
dec
jp
pop
pusha
cmp
xchg
lahf
inc
or
jmp
clc
mov
ds
mov
mov
shr
push
xchg
(bad)
data16
or
dec
call
fbstp
dec
push
test
sub
mov
inc
mov
pop
push
or
js
sub
or
(bad)
(bad)
jecxz
or
movs
pop
jnp
mov
loopne
lea
sbb
push
inc
test
das
enter
xor
add
inc
jmp
and
or
push
iret
out
jge
adc
sub
and
je
inc
adc
es
hlt
out
push
dec
daa
or
jl
push
sbb
sbb
push
sbb
jecxz
add
les
xchg
adc
(bad)
xchg
add
pop
aam
jl
dec
mov
jg
test
cmp
jge
(bad)
jne
jne
dec
aam
inc
aam
movs
jo
dec
aam
adc
fcmovb
aad
adc
dec
sbb
adc
lock
pop
mov
les
lds
pop
mov
mov
jle
lahf
add
push
add
jle
cmp
add
pop
pop
push
inc
mov
xchg
mov
adc
and
add
jmp
mov
add
lock
or
ins
test
fstp
pop
int3
mov
ror
mov
or
push
js
mov
jo
je
sar
jmp
aam
inc
xchg
dec
push
in
rol
mov
adc
add
loopne
fadd
jg
jbe
inc
add
jg
rol
adc
adc
fsubr
ret
adc
fsubr
push
lds
icebp
pushf
jnp
jo
adc
xor
retf
and
test
sub
sbb
inc
cmp
or
xchg
sbb
add
pushf
(bad)
pushf
das
loop
jo
pushf
(bad)
push
pop
pop
mov
in
inc
dec
xor
(bad)
in
adc
out
mov
adc
or
or
adc
and
scas
push
add
push
aam
push
xchg
push
inc
jecxz
pop
std
movs
lds
cmp
xchg
mov
in
xchg
push
or
add
mov
push
add
inc
inc
lds
sub
inc
int3
push
pop
or
loope
pop
imul
dec
adc
movs
aas
xlat
jl
rol
pop
mov
or
and
cdq
rol
loopne
(bad)
fcomi
dec
xor
or
adc
add
mov
add
inc
and
adc
nop
jns
sbb
or
mov
mov
push
test
stos
cmps
mov
test
or
mov
xchg
add
test
scas
cdq
push
dec
ror
cmc
add
add
lea
inc
rcl
lea
or
or
push
rol
loopne
sahf
add
sub
nop
pusha
mov
or
frstor
adc
movs
mov
inc
add
inc
inc
popf
and
xchg
jg
xor
aam
push
bound
jl
inc
lods
and
call
lahf
pop
or
and
ret
sub
pop
jg
mov
dec
or
pop
outs
(bad)
call
lea
adc
test
sub
ret
das
mov
aam
jg
push
test
fcomp
es
test
popf
pop
inc
sub
lahf
bound
fdivr
xor
or
call
inc
sbb
in
sbb
xor
int3
(bad)
sub
pusha
xchg
xchg
loope
(bad)
sub
adc
mov
(bad)
mov
(bad)
cmp
in
or
sahf
pusha
adc
or
jmp
loopne
pushf
popa
mov
inc
and
adc
fisttp
enter
mov
lea
jg
push
sahf
mov
jle
jmp
inc
leave
jno
xchg
adc
lea
mov
ret
inc
test
mov
and
out
call
mov
loope
mov
loopne
xor
lock
cmp
jmp
and
push
outs
mov
or
add
mov
inc
add
mov
pop
xchg
cwde
loopne
mov
jbe
popa
xor
add
xor
mov
aas
ror
pusha
xchg
ret
jecxz
sbb
and
inc
mov
or
pop
and
add
inc
ror
hlt
rol
mov
inc
pop
(bad)
mov
mov
xor
xchg
test
mov
or
inc
inc
ror
adc
mov
cmps
nop
popa
jmp
pop
adc
mov
nop
pop
mov
push
sbb
dec
popf
xchg
inc
push
les
cmp
jae
mov
test
add
xchg
aas
(bad)
les
ror
add
mov
xchg
pop
inc
sti
push
mov
add
add
mov
aas
pop
xchg
dec
xor
les
repz
inc
sbb
cmp
mov
cmps
mov
adc
push
add
js
dec
push
loope
sbb
lods
dec
in
sbb
cmp
push
(bad)
in
pop
jg
lahf
jno
inc
jge
inc
or
push
daa
and
or
inc
cmp
push
mov
adc
les
mov
cmps
push
xchg
adc
adc
pop
cmp
add
add
mov
ret
xchg
push
add
dec
test
sbb
xchg
mov
pop
sbb
or
jo
cmps
gs
pop
fisttp
push
sub
mov
adc
sub
push
sar
pusha
inc
and
mov
lahf
in
xor
aaa
icebp
and
sub
ror
or
ret
mov
or
mov
or
arpl
loopne
test
scas
cmp
or
addr16
fistp
mov
and
mov
lods
or
or
mov
fstp
sub
ins
mov
adc
inc
sbb
xor
xor
(bad)
cmps
imul
and
mov
add
lahf
sbb
and
call
sbb
add
mov
fwait
sbb
sub
or
jg
pushf
and
fwait
push
sbb
cwde
jg
jg
into
aad
test
jmp
inc
or
dec
or
jo
mov
push
(bad)
jnp
enter
sbb
xchg
pop
jo
jecxz
fistp
inc
mov
fwait
add
pushf
and
xor
mov
movs
and
adc
in
inc
pop
ror
call
xchg
pop
fdivr
mov
popf
popf
in
aas
sahf
ins
mov
sahf
aam
xor
add
adc
stos
jecxz
ror
cmp
or
pop
aam
sub
je
or
cdq
or
cmp
sbb
inc
sub
jb
mov
lods
mov
icebp
adc
xchg
dec
enter
and
sbb
xlat
push
mov
(bad)
mov
imul
jg
test
paddsb
shl
mov
or
add
jg
pop
jo
mov
push
jmp
push
cmp
pusha
mov
lea
add
jg
xor
pop
sub
fs
inc
in
fmul
fs
dec
es
es
mov
sbb
das
les
sub
mov
es
test
dec
mov
cmp
aas
les
ret
pusha
icebp
and
mov
push
mov
adc
sar
mov
cmp
and
mov
mov
inc
pop
fild
xor
js
mov
aaa
jg
adc
or
jmp
adc
movs
sar
movs
mov
mov
or
push
sbb
outs
pop
enter
and
pop
sbb
icebp
es
enter
and
mov
test
ret
jge
test
and
pop
sahf
pop
in
pop
or
movs
in
push
push
adc
int3
imul
daa
(bad)
cmps
and
add
pop
dec
pop
xor
ret
movs
or
jns
add
sub
movs
pop
mov
sbb
sbb
pop
or
adc
cmp
and
loop
push
and
aaa
test
push
adc
aas
daa
or
in
add
sbb
in
rcl
jo
aas
or
dec
dec
jo
add
in
jno
cmp
nop
fbstp
inc
or
mov
mov
movups
add
(bad)
fidiv
or
dec
mov
pop
dec
outs
mov
les
ret
(bad)
sbb
pushf
jg
lahf
adc
cmc
adc
lods
lods
jg
add
xor
fild
mov
and
add
pusha
or
stos
(bad)
es
int3
int3
test
dec
xor
and
lahf
ss
rcl
push
int3
lahf
test
xchg
mov
nop
clc
pop
inc
xor
outs
les
aad
jl
test
or
(bad)
enter
es
shr
mov
cdq
jno
mov
sbb
leave
shr
pop
push
and
jnp
lods
or
pop
pushf
cmp
jne
jns
pop
inc
arpl
fidiv
(bad)
mov
push
push
sbb
aam
mov
iret
lods
mov
lahf
ror
pusha
sbb
dec
aad
xor
call
dec
mov
out
lea
adc
inc
retf
mul
add
mov
test
sub
test
sar
and
xor
outs
jl
xor
mov
pop
in
pop
cmp
sub
outs
lock
xchg
(bad)
fdivr
test
jb
scas
sub
daa
sub
scas
pusha
adc
jbe
pop
in
in
sbb
push
pop
scas
pushf
pop
hlt
fwait
nop
inc
data16
jne
or
lahf
push
adc
aam
loopne
xor
and
or
inc
arpl
aas
dec
aad
cmp
inc
add
or
lods
push
jecxz
add
lahf
in
pop
in
add
xchg
hlt
jne
lahf
fadd
cmp
mov
adc
mov
fild
ror
sti
mov
add
xlat
scas
xchg
fdiv
mov
and
xchg
or
or
in
mov
dec
call
xor
mov
sbb
leave
mov
or
pop
cmp
mov
pop
or
add
mov
inc
pop
in
xchg
sbb
mov
in
nop
and
scas
mov
daa
cmp
nop
ror
mov
mov
or
push
mov
enter
fwait
mov
fwait
mov
xor
(bad)
aad
mov
push
or
call
jg
add
sub
call
mov
add
vmovaps
inc
mov
cmp
leave
je
adc
add
inc
inc
sub
in
mov
xor
mov
and
sbb
and
mov
inc
or
dec
or
call
jo
xchg
nop
inc
mov
and
xor
shl
xor
dec
cs
cmp
repnz
shr
(bad)
aas
mov
jo
add
loope
pop
mov
xchg
aas
call
sbb
or
add
xchg
dec
push
mov
sbb
add
gs
pop
sbb
scas
adc
or
lahf
xchg
or
pop
movs
mov
les
cld
(bad)
lahf
ss
inc
mov
sbb
or
mov
or
sbb
shl
mov
lock
adc
mov
call
dec
jo
pop
mov
mov
or
inc
iret
mov
push
or
sbb
inc
pusha
and
sub
mov
inc
rol
loop
xchg
icebp
and
ins
and
sti
mov
in
ror
leave
mov
aaa
jg
fsub
dec
xchg
xchg
mov
or
arpl
mov
xor
pop
push
sar
pop
adc
mov
and
movs
es
pushf
aas
pop
add
mov
enter
xor
ins
mov
iret
dec
adc
jg
aad
or
call
rcl
fadd
or
mov
inc
pop
add
xchg
mov
or
add
mov
cmp
add
push
mov
xlat
cmp
add
push
(bad)
mov
loopne
inc
pop
aam
test
leave
ror
push
push
mov
push
xchg
test
inc
push
adc
sub
(bad)
push
dec
ror
pop
xchg
xchg
sub
add
sbb
add
jne
arpl
lahf
adc
push
xor
rol
inc
or
jno
adc
add
and
and
and
inc
add
pop
jle
cmp
ret
or
mov
neg
jl
sbb
lea
xor
mov
(bad)
retf
int
or
cs
mov
push
or
jl
ret
and
add
pop
dec
aas
mov
ret
lahf
push
loope
adc
inc
jp
xor
inc
adc
cwde
mov
jo
dec
sbb
inc
adc
mov
mov
cmp
les
aas
or
pop
adc
mov
shl
pop
lds
pop
enter
loopne
outs
(bad)
(bad)
imul
ret
aam
test
or
add
mov
jg
add
dec
jge
lahf
mov
add
pop
or
adc
and
or
mov
push
gs
lahf
adc
cmc
add
(bad)
jo
xchg
and
dec
ror
sub
mov
fs
das
pop
mov
add
retf
or
imul
addr16
mov
pop
push
das
aas
cmp
mov
rcr
xor
imul
dec
push
push
jne
cmp
scas
push
cli
int3
cmps
xchg
div
inc
dec
mov
pop
xchg
test
sub
adc
mov
cmp
test
and
pop
mov
push
aas
and
push
adc
(bad)
int3
aas
pusha
out
adc
sbb
adc
sbb
out
xor
cmp
nop
add
sbb
enter
add
pushf
aas
mov
add
sbb
outs
adc
add
push
cmp
aas
rol
mov
cmp
push
aas
pop
in
xor
jg
add
pop
inc
push
fsub
adc
aas
pop
cwde
mov
xchg
and
sub
leave
mov
inc
(bad)
xor
mov
adc
cmp
add
jno
lea
mov
inc
les
dec
in
sbb
jo
add
inc
in
loope
and
dec
or
sbb
push
add
mov
std
push
(bad)
lahf
xor
mov
dec
cmp
test
shl
inc
mov
or
adc
push
cmp
fsubr
ins
pop
inc
and
or
xchg
mov
aas
mov
shr
in
sub
add
mov
and
dec
fild
add
rcl
push
jecxz
ror
loopne
nop
lock
and
inc
xchg
pop
pushf
pop
jb
add
adc
mov
enter
enter
test
lods
jb
add
mov
add
add
mov
push
jno
mov
xchg
mov
leave
test
les
lahf
enter
enter
rcl
add
and
pop
jb
cmp
aam
clc
pop
ret
aas
inc
add
add
push
mov
mov
lock
adc
add
jb
add
enter
sbb
sbb
enter
and
jb
add
enter
sub
jb
add
xor
jg
lock
inc
dec
dec
outs
adc
daa
or
push
addr16
xchg
or
and
mov
pop
and
adc
test
shl
inc
mov
cmc
sub
push
pushf
mov
cmp
inc
inc
inc
xchg
movs
pushf
dec
adc
in
fisubr
pop
add
hlt
popa
sbb
cmps
or
mov
popa
lock
and
aas
xor
je
js
dec
and
movs
rcl
sub
and
mov
jo
nop
sbb
mov
xchg
and
ret
pop
xor
and
ror
jle
or
or
into
adc
xor
or
adc
aas
loope
adc
xchg
js
pop
add
jo
add
hlt
or
adc
lock
adc
aas
push
cld
adc
cwde
adc
sub
push
pop
ds
cmp
mov
mov
movs
mov
aas
mov
stos
aas
test
cwde
inc
sub
adc
or
rol
push
cdq
bound
dec
pop
aas
cld
pop
push
dec
in
inc
add
adc
inc
sub
add
retf
ins
mov
das
adc
jge
mov
ds
dec
lds
xchg
das
sar
and
or
inc
sub
enter
or
pop
inc
ret
retf
mov
dec
out
in
mov
sub
push
sub
dec
fbld
adc
mov
mov
inc
cmp
ja
js
mov
pop
sub
stos
sti
lods
jnp
rcl
jg
add
sbb
inc
adc
xchg
imul
and
adc
sar
(bad)
rcl
outs
dec
and
pop
push
push
jo
pop
or
loopne
push
dec
test
or
or
pop
leave
adc
sbb
nop
imul
hlt
inc
mov
pop
adc
push
pop
inc
sar
pop
sar
mov
push
jns
sbb
cmp
push
jne
aas
lock
push
adc
mov
cmc
push
dec
sbb
and
hlt
or
mov
push
dec
cld
add
aas
dec
and
ss
or
sub
test
adc
sbb
gs
sbb
pusha
cdq
and
or
adc
sub
sub
mov
jg
xor
inc
inc
sub
xor
cmp
adc
cdq
pusha
cmp
test
inc
test
movs
xor
dec
and
les
mov
push
jo
jge
mov
dec
mov
(bad)
cmp
aad
mov
hlt
jo
movs
jg
fild
dec
je
shl
pushf
arpl
jnp
sub
pop
ds
push
es
nop
mov
jae
repnz
mov
js
xor
or
dec
jp
add
fiadd
xlat
outs
mov
ret
dec
dec
test
inc
and
or
or
jge
add
add
add
pop
pusha
in
xor
pop
pop
add
ins
lds
(bad)
jl
enter
fimul
in
add
mov
pusha
and
sbb
les
fiadd
pop
inc
inc
(bad)
mov
push
aas
inc
pop
pop
pop
pop
cs
pop
pusha
js
test
mov
cmc
pop
push
(bad)
pop
dec
mov
inc
and
dec
bound
push
pop
jb
mov
pop
pushf
pop
jb
pop
mov
jb
lods
mov
and
jb
mov
pop
rol
and
jb
int3
shr
jbe
cmp
fild
aas
adc
adc
enter
sbb
and
enter
sub
cmp
test
lahf
push
pushf
fist
cs
adc
adc
mov
mov
or
das
lea
in
aas
js
xchg
pop
and
bound
jbe
loopne
les
(bad)
sar
test
fdivr
inc
and
dec
adc
mov
sub
mov
mov
mov
xchg
aas
xor
imul
xor
imul
mov
add
jg
sar
test
aas
lds
aad
or
dec
mov
and
push
lea
aas
loop
or
notrack
mov
or
mov
xor
inc
mov
adc
push
call
lds
fdivp
sbb
xor
popa
shr
stos
ss
mov
add
push
push
adc
add
add
xor
mov
adc
pusha
push
nop
push
jnp
iret
mov
or
xor
out
popf
in
mov
lock
push
adc
cmps
repz
add
ss
fiadd
add
iret
repz
push
pop
ss
fistp
or
jns
jnp
pop
or
or
repz
jnp
or
or
or
repz
or
or
or
cmp
repz
or
sahf
out
pop
ds
mov
push
rcr
adc
rol
sub
pop
mov
xor
push
(bad)
cmp
repz
jo
nop
mov
lock
out
sti
adc
push
jo
sahf
neg
cld
and
inc
pusha
fistp
jns
mov
ss
xor
inc
adc
ss
iret
repz
data16
std
std
std
(bad)
repz
imul
fdivrp
push
(bad)
inc
push
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
ds
jmp
out
pop
sbb
add
push
inc
pusha
jns
jns
and
jns
out
add
add
icebp
lock
add
add
add
add
faddp
jae
add
push
add
add
out
cmp
add
data16
push
cmp
repz
jo
mov
outs
iret
jnp
iret
pop
pop
xchg
pop
ss
pop
iret
jnp
jns
or
or
or
loopne
xor
data16
pop
push
xor
and
pop
dec
adc
imul
es
shl
dec
pcmpgtb
repz
add
pop
sar
out
and
add
add
outs
imul
neg
add
ins
push
jbe
inc
push
jb
arpl
gs
pop
mov
jbe
inc
pop
dec
push
out
inc
jmp
popa
stos
je
outs
outs
jns
adc
sub
test
jge
out
fs
inc
or
and
add
add
(bad)
inc
push
dec
ss
fsubrp
mov
es
sbb
inc
and
push
add
cmp
xlat
out
and
cmp
pop
es
or
sub
jb
mov
loop
sub
add
add
dec
dec
xlat
push
out
jnp
arpl
push
data16
ds
es
cmp
and
je
fs
sbb
jnp
std
cmp
add
outs
push
into
pop
outs
jp
aas
sub
jnp
js
je
imul
mov
mov
in
pop
mov
inc
jo
je
jp
fnstsw
xor
pop
cmp
outs
outs
fs
(bad)
jg
cmps
inc
cmp
outs
addr16
ins
and
ins
gs
sub
ss
jg
sub
arpl
jae
data16
push
imul
jne
in
mov
xor
pop
loopne
ins
data16
arpl
div
ja
gs
gs
cs
imul
ja
and
or
js
push
and
xlat
pushw
pop
push
and
add
cld
out
mov
outs
jb
push
and
jae
imul
sbb
aad
out
push
jle
cmp
lock
jne
mov
popa
dec
dec
mov
(bad)
push
ins
shr
and
pop
push
xor
mov
or
jmp
aas
pop
mov
gs
cmp
jne
imul
(bad)
cmp
popa
idiv
movs
sbb
arpl
adc
imul
push
or
sub
xchg
mov
jnp
add
sub
add
pop
jae
xchg
bound
add
dec
sti
jo
rcl
sub
sub
jbe
and
and
mov
fild
fs
push
movd
stos
stos
jg
bound
ins
add
loope
mov
inc
jbe
imul
das
addr16
ins
jae
pop
or
adc
sbb
cmp
mov
call
adc
pop
sbb
ss
jg
js
lea
add
dec
data16
jb
push
push
sti
jmp
cmp
pop
je
add
pop
sahf
and
je
sub
push
mov
push
mov
fcmovb
ja
out
xor
sub
popa
div
bound
xlat
inc
pop
ins
add
shr
jns
je
sub
sub
nop
sub
push
ret
and
cmovae
and
push
outs
bound
inc
cmp
sbb
punpcklwd
push
push
pop
jmp
sbb
cmp
aaa
sub
and
sub
popa
inc
sbb
or
or
ins
mov
jo
outs
add
loope
cwde
or
je
(bad)
adc
add
push
mov
push
dec
sub
icebp
int
ins
retf
and
bound
dec
push
sbb
dec
ret
dec
ja
dec
add
push
mov
pop
inc
adc
add
dec
dec
inc
cmp
add
nop
add
jb
cmps
lahf
(bad)
push
add
xor
mov
fistp
daa
jae
xlat
add
ds
jae
gs
adc
stos
fist
ret
adc
fsub
stos
sub
cmps
inc
shr
and
(bad)
inc
add
jae
add
adc
mov
mov
fisttp
inc
dec
sahf
mov
dec
or
sub
pop
pop
pop
ror
xchg
arpl
imul
lahf
lds
adc
pusha
push
push
adc
pop
xchg
pop
aam
xlat
ffreep
jne
xchg
sbb
push
and
fs
push
add
xor
aaa
inc
js
gs
(bad)
jae
sub
and
mov
pop
shl
je
jo
adc
adc
mov
jns
push
mov
das
retf
rcr
push
cmp
rcr
ins
xor
jo
div
sti
or
sub
adc
pop
inc
fs
add
mov
aas
inc
xlat
add
out
or
and
loopne
add
imul
jo
jb
jge
fild
jae
popa
arpl
jne
arpl
imul
outs
ja
push
jo
push
shl
jge
arpl
scas
jge
add
imul
ins
inc
popa
psubq
push
outs
jne
inc
inc
mov
or
add
mov
dec
in
add
mov
cwde
cmp
cdq
in
add
pop
lods
fwait
jne
add
js
xlat
das
jo
adc
lods
fwait
neg
push
pop
das
add
adc
out
pop
add
call
push
push
or
push
xor
mov
xor
bound
iret
repz
sub
arpl
jl
jnp
iret
repz
imul
sahf
shr
push
mov
push
(bad)
xlat
push
stos
jns
xlat
scas
addr16
push
or
out
sahf
out
pop
inc
lock
sahf
out
sahf
aam
scas
pushf
movs
jb
sahf
out
shl
sahf
out
aas
test
sahf
movs
in
jno
xor
repz
js
aaa
mov
(bad)
xchg
add
sbb
int3
scas
loop
jmp
outs
jp
(bad)
mov
push
or
lods
hlt
push
sbb
push
jns
out
cmp
mov
jecxz
mov
rcl
in
xchg
push
mov
push
cmp
repz
mov
repz
pop
iret
shr
stos
sti
fisub
add
xor
test
mov
xlat
jg
push
cmp
iret
repz
test
mov
repz
xchg
popf
cmp
pop
hlt
cmp
mov
adc
push
ror
or
xchg
inc
xor
xchg
cmp
fwait
sbb
pop
push
les
hlt
cmp
outs
pusha
push
jmp
pop
add
mov
mov
dec
push
mov
out
pop
or
loopne
or
xor
push
jmp
shr
push
xchg
xchg
in
out
iret
repz
aaa
ins
(bad)
aad
scas
out
iret
add
mov
jmp
scas
or
fidiv
add
out
sahf
out
(bad)
call
jns
pop
dec
mov
mov
push
mov
mov
push
mul
repz
mov
cmp
repz
loope
cwde
adc
mov
iret
repz
mov
or
pop
add
fild
mov
out
mov
and
mov
sahf
ret
sub
loopne
mov
sub
add
adc
push
aaa
fadd
push
xor
movs
sbb
jno
fnsave
pop
jl
cmp
fwait
pop
jo
dec
xor
popa
xor
inc
jne
sbb
jmp
ja
jmp
and
pop
ja
je
pop
xchg
popa
inc
shl
jno
ret
ror
mov
aad
jns
shl
jo
adc
shl
jb
or
mov
imul
sbb
mov
mov
ins
add
jmp
or
mov
add
nop
cdq
stos
or
pop
fwait
rol
add
adc
push
stc
retf
out
call
call
mov
cmp
cmp
adc
rcr
out
cwde
add
pop
xchg
and
icebp
lock
out
xchg
xor
add
xor
xchg
loop
xchg
sbb
ffreep
adc
add
inc
test
cmps
mov
rol
outs
adc
imul
shr
cld
mov
pop
loopne
test
xor
out
leave
shl
or
jmp
loope
pop
out
mov
shl
adc
outs
inc
push
pusha
add
push
ja
fstp
adc
sub
jno
popa
xchg
push
pusha
push
dec
sbb
scas
jns
push
enter
adc
jmp
int
cdq
mov
sub
cmps
ret
mov
sub
xor
push
jmp
add
push
and
call
(bad)
arpl
clc
jl
test
ja
cdq
idiv
(bad)
push
repnz
ficomp
ins
loope
outs
outs
mov
vandpd
xor
add
(bad)
(bad)
(bad)
jmp
test
out
(bad)
sbb
stos
stos
out
jbe
call
sbb
leave
leave
inc
cli
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
pop
(bad)
(bad)
(bad)
jmp
scas
jmp
movs
mul
jb
xchg
fwait
rol
jne
mov
loope
std
sbb
(bad)
(bad)
(bad)
call
es
ss
jle
aas
inc
cmc
div
add
xor
pop
push
movs
movs
hlt
sar
(bad)
(bad)
jmp
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
mov
(bad)
jmp
and
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
call
and
adc
sbb
(bad)
(bad)
inc
loop
int
jmp
dec
daa
daa
imul
jne
adc
or
sbb
(bad)
(bad)
(bad)
sub
je
sbb
cs
sbb
mov
pop
out
pop
mov
push
div
cmp
(bad)
(bad)
dec
(bad)
(bad)
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
mov
pop
sbb
shr
sub
and
pusha
jecxz
cld
pop
jns
mov
mov
(bad)
(bad)
(bad)
call
aam
push
(bad)
retf
retf
inc
addr16
cmp
dec
dec
ficomp
pop
pop
call
(bad)
dec
dec
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
push
adc
test
stc
stc
dec
add
(bad)
(bad)
inc
(bad)
jg
and
lahf
lahf
mov
mov
mov
inc
(bad)
(bad)
(bad)
inc
add
xchg
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
scas
fcmovu
inc
rol
jne
and
arpl
adc
xor
jmp
repz
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
mov
mov
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
(bad)
(bad)
push
sbb
sub
jae
xchg
shl
sbb
dec
shl
and
push
sub
jle
(bad)
(bad)
(bad)
cmp
mov
(bad)
out
out
sub
mov
cmp
(bad)
jns
pop
pop
loop
(bad)
(bad)
call
or
sbb
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
fisttp
push
or
(bad)
(bad)
dec
and
mov
ret
mov
lods
lods
out
les
cmps
cmp
xchg
movs
clc
jg
call
in
aaa
bnd
mov
out
mov
enter
aaa
pop
fisubr
mov
jg
push
push
aad
fs
dec
dec
ror
test
(bad)
jmp
lods
push
push
cli
repz
hlt
pop
iret
jmp
hlt
jp
cmp
scas
jmp
adc
or
outs
mov
mov
and
jb
sbb
and
cmps
cmps
(bad)
(bad)
(bad)
push
jae
mov
xchg
mov
retf
call
fnstsw
je
ds
pop
and
mov
(bad)
fmul
mov
nop
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadd
add
(bad)
(bad)
(bad)
inc
sbb
push
adc
popa
popa
mov
scas
push
push
stc
imul
shl
pop
hlt
pop
cmp
mov
jmp
clc
adc
cwde
cwde
mov
(bad)
jmp
ins
shr
mov
pop
mov
cmps
sub
call
and
jmp
into
dec
stos
push
push
call
sub
(bad)
jp
mov
(bad)
(bad)
dec
or
or
fcmovbe
out
xor
push
(bad)
(bad)
inc
sub
sub
adc
mov
test
push
cld
ins
mov
push
cmp
add
sahf
out
mov
push
add
jge
(bad)
out
sahf
out
sahf
inc
popf
inc
xchg
jns
or
addr16
out
sahf
out
mov
out
sahf
ret
push
inc
jns
out
add
hlt
xor
jns
out
xchg
jae
aas
sahf
out
sahf
or
gs
sub
lgs
ss
out
sahf
out
es
sahf
sbb
jns
out
out
sti
test
jns
out
jnp
jno
xchg
adc
cmc
push
cmp
pusha
pop
enter
cmp
repz
dec
(bad)
call
dec
imul
push
iret
repz
vandnps
cmp
xor
iret
repz
inc
mov
repz
lods
mov
cmp
repz
arpl
sbb
repz
rep
dec
adc
das
iret
repz
loope
int3
cmp
cmp
repz
inc
lods
out
repz
repz
mov
repz
data16
or
cmp
repz
cmp
loop
repz
repz
push
dec
push
iret
repz
fisttp
ins
in
outs
cmp
repz
cmps
test
aaa
repz
repz
inc
pop
mov
jb
sar
repz
mov
pop
and
scas
mov
sbb
iret
repz
mov
and
(bad)
cmp
repz
and
repz
repz
xchg
iret
inc
les
iret
repz
mov
cmp
repz
pop
daa
mov
iret
adc
cmp
repz
mov
xchg
and
cmp
repz
(bad)
js
(bad)
iret
repz
clc
adc
xor
cmp
repz
ret
mov
adc
cmp
repz
cld
(bad)
cmp
repz
jl
jnp
imul
repz
xor
addr16
cmp
repz
xlat
stos
jbe
iret
repz
or
cli
pop
inc
cmp
repz
lods
aam
scas
repz
repz
movs
jb
mov
repz
std
xchg
es
idiv
repz
xor
in
repz
repz
xor
iret
(bad)
and
sbb
cmp
pop
adc
repz
mov
or
repz
sub
outs
pop
cmp
repz
push
cmp
mov
cmp
repz
das
test
mov
into
sar
add
out
sahf
out
mov
push
sahf
out
sahf
mov
iret
jns
out
shr
stos
sti
inc
out
sahf
out
xor
jns
add
cmp
test
sahf
out
push
mov
jns
out
cmp
mov
sahf
fisub
adc
repz
out
int
adc
pop
out
sahf
out
inc
pop
les
jle
fs
sbb
sahf
out
pusha
or
out
nop
mov
sahf
out
sahf
mov
fstp
out
loopne
cmp
dec
out
sahf
out
and
ret
out
sahf
lods
bound
sahf
out
out
aaa
ins
(bad)
out
sahf
out
dec
test
jns
hlt
jmp
out
mov
out
sahf
out
mov
call
sahf
je
dec
mov
out
jo
mov
dec
out
sahf
out
test
xor
push
mov
jns
out
loope
cwde
adc
jns
out
mov
sahf
xchg
into
push
sub
jns
out
mov
jns
out
inc
push
jns
sub
push
jns
out
arpl
repnz
sahf
out
outs
lds
add
sub
xlat
stos
jbe
sahf
out
retf
jge
out
sahf
out
inc
lock
aam
out
sahf
mov
sar
jns
std
xchg
es
sahf
out
test
jns
in
jno
xor
add
and
sbb
jns
out
add
out
sahf
and
daa
mov
jns
out
or
jns
out
pop
mov
jns
(bad)
mov
jecxz
test
out
push
sar
add
cmp
repz
mov
push
repz
repz
iret
repz
iret
shr
stos
sti
inc
cmp
repz
xor
iret
repz
cmp
iret
repz
test
mov
iret
repz
cmp
mov
repz
adc
repz
repz
ror
or
in
pop
cmp
repz
inc
pop
les
jle
fs
sbb
repz
jae
or
cmp
nop
mov
repz
repz
iret
repz
fneni(8087
xor
or
iret
repz
and
ret
cmp
rep
bound
cmp
jns
enter
cmp
repz
dec
test
iret
repz
jmp
iret
or
cmp
repz
mov
call
repz
dec
mov
iret
mov
mov
dec
cmp
repz
test
xor
push
mov
repz
sahf
loope
cwde
adc
iret
repz
mov
repz
into
push
sub
repz
fisttp
iret
repz
inc
push
iret
repz
(bad)
(bad)
dec
push
push
hlt
cmps
push
jle
gs
sbb
movs
ret
cmp
pop
xchg
cmp
inc
icebp
lods
(bad)
(bad)
(bad)
(bad)
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
dec
and
lds
retf
xlat
es
(bad)
call
mov
dec
and
jmp
ret
(bad)
jmp
cld
or
imul
mov
pop
out
(bad)
(bad)
call
ins
jp
xchg
push
pop
fcmovbe
mov
and
dec
loopne
sub
ret
ins
jmp
cdq
pop
imul
jno
mov
mov
fisubr
arpl
dec
sbb
sbb
adc
jg
mov
ja
(bad)
(bad)
(bad)
(bad)
mov
and
pop
pop
sbb
clc
mov
jae
and
(bad)
(bad)
push
add
jecxz
(bad)
push
push
stos
sub
mov
add
aaa
or
(bad)
(bad)
(bad)
jmp
mov
push
in
push
sbb
sub
pop
repnz
imul
int
(bad)
(bad)
inc
add
bound
les
push
popf
mov
mov
xor
and
pusha
out
stos
pop
jno
push
mov
and
(bad)
call
xchg
fld
cmp
dec
out
inc
xchg
push
lea
add
aam
pusha
push
adc
call
cwde
sti
and
mov
inc
int3
fstp
call
mov
jns
out
(bad)
aas
cmc
(bad)
(bad)
inc
psubsw
test
add
add
push
or
jo
ins
pop
jb
std
push
mov
(bad)
cmp
scas
aad
ss
fldenv
cmps
and
ss
addr16
push
(bad)
(bad)
(bad)
jmp
(bad)
out
xchg
rcr
fwait
xchg
sahf
add
dec
popa
fsub
mov
sbb
sbb
loop
mov
mov
cmp
loopne
adc
pop
sbb
mov
lods
sub
push
test
(bad)
push
sbb
out
cdq
fnstsw
test
cmc
mov
pop
sti
(bad)
jmp
inc
adc
jbe
and
fdiv
(bad)
(bad)
jg
icebp
arpl
xor
retf
test
adc
adc
test
jge
mov
xor
(bad)
(bad)
(bad)
inc
sub
dec
fdiv
push
in
ja
jecxz
sub
mov
cli
(bad)
(bad)
(bad)
inc
and
lock
sbb
sub
and
nop
out
xchg
(bad)
fnstcw
rol
mov
mov
call
cmc
or
fidiv
mov
in
js
or
(bad)
(bad)
(bad)
call
(bad)
test
call
add
cmc
lahf
pop
cmp
aad
test
iret
and
cdq
cmp
sbb
call
cmp
or
sbb
in
call
call
jmp
jle
(bad)
(bad)
(bad)
(bad)
mov
call
(bad)
ss
jmp
(bad)
xor
xor
das
adc
cld
movs
xchg
xor
aaa
cld
cmp
(bad)
dec
cmps
loopne
shl
icebp
add
dec
inc
in
(bad)
jg
push
push
pop
xchg
imul
jbe
(bad)
lea
(bad)
(bad)
(bad)
push
push
in
add
sahf
shl
sbb
sub
mov
popf
pop
jmp
push
jae
or
mov
sbb
push
jmp
(bad)
inc
adc
mov
or
pop
clc
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
repnz
(bad)
(bad)
push
sbb
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
mov
inc
cmp
sub
mov
ret
jb
loop
or
cmp
mov
or
add
or
cmps
(bad)
push
pushf
fs
rcl
xor
sar
repz
add
xchg
retf
icebp
cmp
repz
xchg
push
not
and
iret
repz
dec
addr16
loope
adc
repz
(bad)
out
jmp
cmp
repz
repz
push
imul
pop
cmp
repz
mov
and
iret
repz
loopne
sbb
iret
repz
pop
sbb
iret
repz
sub
add
movs
repnz
pop
iret
repz
sub
cmp
repz
mov
iret
repz
stos
push
push
iret
repz
stc
cmp
cmp
repz
jmp
int3
repz
repz
mov
fcmovnbe
jmp
xor
iret
repz
dec
sti
push
iret
repz
push
daa
fs
cmp
repz
psrld
repz
iret
repz
inc
sbb
cmp
repz
dec
mov
iret
repz
iret
repz
push
and
repz
clc
adc
repz
repz
shr
repz
cli
and
sbb
out
cmp
repz
sar
iret
repz
repz
movs
in
iret
repz
fwait
(bad)
call
repz
jl
mov
repz
repz
outs
jnp
hlt
iret
repz
add
cmp
repz
into
aam
scas
repz
repz
shl
iret
repz
mov
dec
test
cmp
dec
push
(bad)
repz
repz
repz
jae
pop
push
xor
cmp
repz
jp
mov
repz
repz
iret
repz
jns
jmp
cmp
ds
jb
cmp
repz
inc
jno
iret
repz
pushf
nop
popa
jo
inc
cmp
repz
movs
pop
imul
iret
repz
pop
add
ins
iret
repz
jbe
xlat
retf
inc
mov
pop
sbb
shl
iret
repz
stc
pop
pushf
iret
repz
jp
and
enter
cmp
jns
jno
repz
rep
lods
cmp
iret
repz
xor
scas
mov
cmp
std
ins
clc
shl
cmp
repz
repz
jnp
xchg
repz
mov
loop
repz
repz
iret
repz
loope
in
out
lahf
adc
repz
push
add
iret
repz
aam
sti
jmp
inc
sahf
inc
mov
lods
into
repz
nop
xchg
repz
add
jo
(bad)
cmp
repz
cmp
cmps
push
repz
repz
xchg
iret
repz
lds
dec
sbb
cmp
pop
or
iret
repz
iret
repz
es
cmp
(bad)
cmp
repz
icebp
fadd
repz
cmp
das
xor
push
mov
dec
mov
sub
cmp
pause
dec
shl
iret
sbb
cmp
repz
inc
adc
repz
adc
iret
cdq
jge
mov
repz
call
repz
iret
repz
mov
xchg
mov
iret
repz
fcomp
iret
repz
mov
add
repz
mov
pop
push
jmp
inc
sbb
iret
repz
popa
or
cmp
repz
daa
leave
in
fbstp
iret
repz
aaa
int
outs
repz
repz
les
iret
repz
ret
and
cmp
repz
rol
push
hlt
inc
pop
daa
iret
repz
stos
popf
cli
jecxz
jbe
iret
repz
add
sub
bound
repz
das
dec
inc
ror
cmp
push
mov
iret
repz
ret
mov
loope
and
fistp
cmp
repz
push
imul
dec
inc
fidivr
repz
jae
pop
push
jmp
cmp
repz
aaa
sub
repz
iret
jns
imul
add
cmp
repz
test
rep
and
ds
repz
push
les
push
cwde
mov
inc
fld1
mov
jmp
test
push
ret
(bad)
cld
or
push
ins
xor
shl
shl
or
dec
shl
pop
sbb
dec
shl
sar
shl
push
scas
dec
shl
inc
pop
xor
shl
retf
mov
xlat
shl
test
dec
shl
or
xor
test
xor
shl
dec
shl
fidivr
xor
shl
push
push
not
xor
rcl
dec
shl
call
xor
outs
in
and
xor
shr
dec
shl
(bad)
xor
je
loopne
icebp
shl
jbe
dec
shl
rol
shl
shl
call
jmp
mov
jp
dec
shl
push
sbb
shl
retf
shl
sub
xor
shl
or
fs
add
aad
shl
icebp
rol
sub
rol
mov
das
popf
je
mov
rcl
(bad)
outs
scas
sbb
(bad)
cs
rol
jbe
scas
ror
mov
pop
sub
or
inc
sub
test
inc
add
jbe
rol
lods
outs
cs
shrd
push
pop
lea
es
(bad)
cmps
or
into
pop
mov
dec
or
jle
push
bsr
test
xchg
das
sbb
xchg
pop
dec
mov
aam
and
scas
inc
xor
dec
daa
mov
rol
lods
scas
outs
sahf
dec
or
or
out
or
cs
mov
dec
pop
(bad)
es
inc
shrd
fimul
mov
dec
or
shr
jg
das
or
push
mov
xchg
push
push
mov
push
or
pop
ror
mov
daa
mov
daa
lods
mov
mov
push
mov
out
push
fidiv
inc
daa
push
dec
rol
sub
dec
lea
xchg
cmps
sub
outs
popf
mov
push
push
jle
jne
dec
sub
pop
outs
rcl
or
das
or
dec
sub
mov
cmc
ror
jbe
hlt
aam
and
rcl
(bad)
out
not
push
(bad)
jbe
sbb
(bad)
imul
push
cs
dec
daa
scas
out
inc
aam
das
mov
sub
daa
or
ss
sbb
outs
pop
jne
dec
dec
push
cs
dec
inc
sbb
inc
mov
das
(bad)
cmc
aam
cmps
neg
push
(bad)
xor
scas
pop
aam
das
cmp
dec
sbb
addr16
pop
mov
inc
mov
aam
arpl
push
push
aam
das
sbb
sub
das
sub
(bad)
pop
sbb
xchg
data16
rcl
push
push
push
rcr
mov
inc
sub
das
or
cmps
jbe
cmc
aam
sahf
jbe
mov
pop
inc
(bad)
pop
(bad)
push
arpl
cmp
es
cmp
mov
je
inc
movzx
mov
ds
inc
or
pop
cmp
jbe
(bad)
hlt
mov
fidiv
push
rol
sbb
and
prefetch
lods
mov
dec
out
cs
inc
add
sahf
rol
cmp
sub
das
sub
dec
jbe
hlt
rol
fdivp
xor
out
rol
or
bsr
pop
das
lea
dec
mov
scas
sub
pop
mov
scas
outs
xor
inc
or
das
sub
inc
sub
and
(bad)
es
outs
outs
hlt
rcl
fimul
mov
jg
inc
and
inc
mov
dec
sub
jle
or
fiadd
jbe
not
dec
inc
popf
outs
mov
inc
inc
popf
mov
mov
ror
ficom
(bad)
sub
pop
out
xor
xchg
aam
dec
sub
inc
lods
xor
outs
push
das
lods
je
jle
push
pop
or
ds
aam
dec
cmps
fidivr
dec
inc
mov
das
sub
sub
push
push
or
out
div
push
(bad)
aam
dec
sub
dec
cmp
sub
scas
out
mov
(bad)
mov
dec
scas
inc
aam
dec
lods
inc
(bad)
cs
dec
popf
xor
(bad)
ds
sub
push
cs
mov
cmc
rcr
jle
cs
push
dec
sbb
das
mov
inc
lods
je
push
(bad)
pop
scas
mov
push
jle
aam
inc
push
es
aam
das
cmp
daa
popf
cmc
pop
mov
dec
lea
push
mov
scas
fidiv
not
pop
inc
lods
inc
dec
mov
mov
dec
popf
jne
xchg
push
push
cmp
out
mov
cs
aam
dec
sbb
arpl
addr16
(bad)
lea
pop
pop
pop
inc
nop
aad
inc
push
inc
call
(bad)
hlt
es
ds
cmp
mov
(bad)
hlt
ror
ds
xor
sbb
(bad)
outs
scas
rol
sub
nop
jbe
scas
add
jbe
sub
es
pop
inc
rol
lea
inc
dec
sub
pop
or
jbe
sbb
push
es
dec
add
(bad)
cmps
rcl
lods
out
pop
dec
or
prefetch
or
xchg
lea
push
xchg
into
hlt
rol
mov
pop
dec
mov
inc
mov
dec
and
cvtps2pi
shr
mov
push
push
dec
div
out
rcl
sbb
sub
inc
cmp
fimul
mov
xchg
lea
cmc
rcl
ds
mov
xchg
push
push
dec
sub
daa
popf
xor
fiadd
ror
outs
mov
dec
sub
push
mov
out
push
ficom
cmp
and
push
sub
dec
xchg
cmps
jbe
rcl
mov
outs
ror
sbb
inc
mov
das
sub
cmps
ficomp
jle
mov
push
and
das
mov
dec
lods
xor
push
ss
cmp
xchg
push
sub
jbe
cmc
aam
dec
(bad)
(bad)
not
dec
inc
cmp
inc
lods
je
out
inc
inc
popf
hlt
rcl
mov
ror
inc
(bad)
jne
push
inc
cs
aam
das
sub
daa
popf
mov
xchg
je
mov
jle
cmp
inc
out
rcr
cmps
ds
dec
das
mov
arpl
inc
sbb
push
es
xchg
out
(bad)
push
dec
pop
mov
push
addr16
inc
push
inc
cmp
inc
popf
cmc
shr
mov
dec
test
rcl
mov
pop
(bad)
push
inc
sbb
das
sub
das
popf
cmc
aam
mov
aam
push
jle
cmc
rcl
cmps
jbe
pop
dec
lea
popf
jne
pop
imul
inc
repz
add
add
sbb
repz
and
ss
dec
inc
cmp
repz
push
ins
gs
cmp
repz
cdq
or
mov
cmp
repz
ret
cld
cmc
out
repz
repz
xor
and
repz
pop
push
or
iret
repz
push
cmp
repz
stos
mov
cmp
pop
cmp
repz
clc
(bad)
into
aad
cmp
repz
imul
sbb
scas
outs
test
push
dec
push
cmp
movs
not
pop
call
imul
fisubr
xchg
pop
sbb
fimul
mov
cs
xchg
movs
mov
test
mov
test
mov
xchg
imul
pop
imul
out
push
jmp
mov
pop
out
movs
inc
sbb
push
xchg
cmps
xchg
test
jmp
movs
xchg
dec
push
push
pop
test
ds
xchg
cmps
fidivr
xchg
sbb
test
mov
jp
movs
movs
push
cs
movs
xchg
mov
inc
jp
out
mul
push
(bad)
jbe
jp
test
jmp
movs
xchg
push
cs
out
movs
xchg
pop
cmp
mov
dec
scas
inc
inc
xchg
push
(bad)
cs
test
jmp
push
movs
mov
push
mov
mov
inc
(bad)
jp
test
jmp
push
jmp
xchg
dec
(bad)
pop
scas
test
sahf
sbb
jle
mov
jmp
jmp
movs
mov
inc
test
push
lods
xchg
mov
push
scas
ficom
push
test
jmp
dec
mov
cmp
test
pop
mov
mov
push
lods
cmps
pop
jp
out
mov
cs
jle
pop
imul
lods
xchg
jbe
jbe
lods
mov
test
mov
pop
inc
int3
imul
dec
push
shl
enter
jmp
cld
(bad)
xor
xor
(bad)
(bad)
jmp
cmp
cmp
inc
inc
inc
ja
aaa
arpl
bound
xor
gs
outs
push
cmp
xor
data16
xor
xor
add
jmp
cmp
fs
ss
data16
xor
xor
xor
(bad)
(bad)
in
aaa
arpl
cmp
sbb
cmp
mov
xor
xor
popa
jb
call
inc
sbb
add
pop
pop
mov
add
adc
or
add
pop
xchg
mov
jb
scas
mov
rcr
popf
jne
mov
pop
ror
add
outs
outs
ja
and
xor
jmp
inc
imul
jne
inc
ins
ins
sub
bound
xchg
dec
outs
add
outs
push
gs
mov
rol
sti
gs
aas
cmps
or
js
outs
lock
inc
ins
addr16
ins
imul
(bad)
mov
jb
jnp
(bad)
cmp
lods
pop
(bad)
jne
sbb
rol
lahf
inc
pop
aas
popa
push
add
add
adc
xchg
dec
and
and
je
aas
cmp
nop
pop
and
shl
and
mov
pop
dec
imul
sub
lahf
sub
out
mov
jae
add
sub
mov
fbld
ja
(bad)
into
mov
push
(bad)
ficom
mov
add
pusha
es
inc
enter
sub
rol
xor
adc
fwait
neg
ror
and
adc
or
dec
pop
add
(bad)
test
(bad)
int3
add
aam
repz
sub
and
ja
mov
repz
add
out
add
addr16
add
cmps
mov
cmp
je
gs
jne
xchg
gs
mov
rol
lock
mov
mov
aad
adc
add
addr16
add
lahf
bound
stos
popa
adc
pop
sub
or
adc
and
sbb
pop
push
sub
xchg
mov
arpl
je
ror
push
cwde
ins
add
sub
gs
aam
es
mov
cmps
add
push
push
cmp
call
lods
xchg
outs
std
loopne
(bad)
cli
mov
ret
mov
(bad)
scas
ins
fs
push
inc
clc
call
jp
dec
xchg
stos
outs
and
add
dec
(bad)
ss
xor
push
aas
fadd
add
aas
and
shl
outs
xor
or
daa
and
bound
jae
imul
and
sbb
test
mov
rcl
out
sbb
mov
cmp
and
mov
mov
movs
jne
xchg
stos
rol
push
xchg
push
adc
rol
es
inc
add
iret
je
jne
push
or
xor
push
lock
and
xchg
stos
scas
and
bound
adc
pop
shr
gs
imul
movs
das
sbb
dec
test
pop
ss
and
ds
pop
data16
cmp
pop
aaa
fcom
dec
outs
dec
ss
repz
push
push
lock
and
push
cmp
cmovbe
addr16
sub
or
push
aaa
arpl
push
and
data16
pusha
mov
call
shl
addr16
ret
loope
dec
and
test
jmp
(bad)
dec
xlat
sbb
or
or
test
mov
pop
dec
js
outs
daa
ud0
enter
jae
dec
dec
dec
dec
out
es
dec
dec
push
push
push
push
push
repnz
pop
pop
popa
cmp
jg
bound
addr16
imul
jo
jb
cmps
jbe
pop
cmp
loopne
jns
out
sub
push
outs
inc
mov
je
dec
outs
inc
popa
shl
inc
jb
push
adc
jle
imul
fisub
push
ds
outs
jne
cs
outs
(bad)
pop
dec
adc
jbe
arpl
(bad)
int
outs
div
ins
sbb
jae
xchg
test
arpl
out
(bad)
adc
and
push
and
jns
addr16
fisub
retf
loope
push
mov
dec
xor
sbb
outs
fucomp
or
jae
popa
dec
pop
push
loopne
mov
and
gs
je
pop
fs
ds
mov
mov
pushf
call
lock
into
sbb
jmp
repnz
ret
inc
jae
fisttp
pop
mov
cmp
cli
or
popa
sti
addr16
mov
jae
es
push
add
leave
add
clc
push
mov
add
jbe
cli
inc
push
imul
test
or
fld
push
ins
xor
jo
inc
xchg
ja
mov
cwde
nop
pop
push
pusha
push
pusha
es
push
add
pop
xchg
pop
loopne
pop
mov
ds
loop
loop
in
outs
sub
out
in
mov
jno
jno
lock
cmp
mov
pop
std
xor
pop
rol
inc
push
mov
inc
inc
push
push
dec
fimul
dec
push
out
mov
pusha
push
pop
dec
outs
dec
nop
push
outs
dec
mov
out
jns
dec
dec
outs
dec
ds
rol
dec
and
dec
xchg
dec
push
and
adc
jo
fmul
out
push
mul
pop
imul
rcl
out
mov
and
out
loopne
adc
push
or
dec
pop
push
add
sub
xchg
out
loopne
dec
xchg
pop
pop
imul
jle
push
outs
cs
neg
jo
pop
dec
dec
into
pusha
push
xor
push
pop
xchg
mov
pop
mov
push
addr16
add
js
push
out
and
push
je
or
or
ss
push
sub
inc
dec
pop
jo
push
aas
push
fidivr
add
cmps
mov
adc
loopne
imul
pop
or
movd
jnp
adc
data16
inc
rcr
mov
outs
push
js
mov
push
sahf
push
into
add
and
add
xor
mov
sbb
and
and
cmps
sbb
ucomiss
cmp
clc
and
push
push
push
hlt
outs
daa
ins
popa
imul
mov
fs
jo
stos
aad
pop
dec
jns
outs
push
jo
stos
frstor
jo
cmp
cdq
inc
jo
mov
jo
sbb
xchg
inc
fisub
pop
pop
loop
sahf
cmp
mov
inc
add
jl
arpl
scas
js
nop
nop
xchg
(bad)
pop
push
add
pop
mov
mov
(bad)
bound
push
jg
mov
dec
jle
pcmpeqw
ins
daa
or
je
ret
push
xor
call
retf
inc
push
loope
add
push
sub
movs
lock
push
jb
pop
fisubr
pop
dec
mov
pop
ja
scas
shr
push
add
dec
xor
push
jp
add
ss
or
dec
or
xchg
jae
outs
and
and
push
add
das
add
mov
bound
push
das
mov
mov
push
fild
shr
add
scas
mov
lds
push
(bad)
sbb
dec
pop
pop
addr16
ds
lock
out
inc
mov
pop
dec
dec
inc
inc
and
push
and
push
dec
inc
test
adc
ins
outs
popa
fs
cmp
mov
jbe
inc
fisubr
lods
fcomi
xor
outs
not
pop
cmp
cmp
add
(bad)
ficomp
add
push
fist
push
sahf
js
fdiv
fisub
shl
loope
or
jo
sub
mov
addr16
jge
outs
xor
sbb
loopne
add
rol
or
fnstcw
not
xor
inc
push
inc
and
inc
adc
ds
into
cmps
fisttp
push
inc
jbe
inc
rol
inc
push
mov
sahf
or
dec
mov
sub
dec
ss
fisubr
test
push
push
and
sbb
cmp
imul
sub
sub
imul
inc
fucomp
pusha
add
dec
adc
add
rcr
out
jns
aaa
inc
adc
push
pop
ds
fcompp
mov
inc
push
lock
sbb
call
sbb
sar
scas
fiadd
mov
dec
or
xchg
push
push
ins
and
xchg
out
or
inc
pop
inc
inc
push
push
dec
dec
dec
pop
adc
push
push
inc
pop
dec
inc
mov
dec
inc
iret
aaa
inc
inc
adc
pop
push
adc
push
dec
inc
and
adc
or
dec
outs
push
jb
pop
jecxz
xchg
mov
loope
dec
outs
cs
das
jp
daa
and
push
popa
ins
and
clc
sbb
out
lea
pop
and
jo
popa
loope
mov
cmc
jae
add
ins
and
jmp
outs
and
in
scas
fwait
cwde
es
push
ficom
jbe
sti
mov
mov
push
jl
xor
xchg
and
or
ins
cdq
and
jae
mov
xchg
add
cs
pop
hlt
mov
inc
or
mov
sbb
mov
inc
dec
dec
push
xor
imul
arpl
xchg
fwait
scas
dec
add
add
dec
dec
mov
dec
add
dec
and
push
dec
sbb
pop
bound
outs
inc
push
and
jb
outs
mov
cmps
and
(bad)
jp
lods
mov
call
pop
inc
cmp
push
adc
jb
add
pop
add
je
imul
push
cmp
shr
inc
je
mov
add
(bad)
(bad)
dec
fisub
daa
or
dec
imul
mov
bound
cmp
push
fidivr
inc
es
cmp
jle
pop
add
outs
dec
sbb
sub
sub
adc
adc
jae
pop
cs
adc
or
and
imul
xchg
adc
jb
sbb
test
scas
xchg
ret
imul
sub
inc
push
adc
inc
dec
mov
imul
test
pop
sub
aas
dec
or
xchg
ret
push
jno
pop
stos
add
(bad)
xchg
pop
push
pushf
ret
push
add
test
push
xchg
das
fwait
jbe
cmp
and
adc
push
test
push
mov
mov
adc
mov
inc
mov
mov
cmp
shl
inc
mov
ja
sub
pusha
sti
push
push
or
test
xlat
adc
push
ror
or
popa
call
cli
pop
rcl
rol
dec
dec
fidiv
or
mov
fbstp
in
inc
jo
add
fbld
into
out
inc
dec
loopne
sbb
inc
loop
jo
and
ins
cmp
cmp
cmps
sbb
nop/reserved
rcl
aas
aaa
dec
dec
xchg
and
dec
or
and
pushf
retf
leave
pop
sbb
aad
mov
jmp
test
adc
push
aam
(bad)
icebp
mov
shr
adc
in
dec
aaa
out
repnz
retf
add
in
andps
dec
or
push
adc
out
and
lds
lea
xchg
inc
xchg
outs
fs
add
adc
sbb
rol
add
cmovg
sti
out
mov
pop
mov
jo
clc
call
add
outs
lahf
jmp
iret
pop
push
ins
ins
cs
nop
das
ins
mov
pop
jbe
xchg
mov
psubsw
loopne
add
inc
or
inc
test
cmp
xor
inc
idiv
pusha
xor
push
jo
(bad)
dec
sar
popa
stc
push
mov
xor
adc
and
add
mov
push
fwait
push
jbe
imul
and
mov
les
add
push
lea
add
and
icebp
gs
rol
xor
das
rcl
sub
nop
add
sbb
or
jmp
mov
pop
adc
or
retf
test
fist
add
das
mov
rol
pushf
aam
outs
aas
or
(bad)
pop
stos
icebp
das
xor
mov
loope
(bad)
rcl
cmp
popa
bound
je
jmp
fsubr
pop
cmp
jbe
cwde
retf
ret
push
rcl
jb
jo
aaa
push
sbb
cmpps
inc
inc
cwde
sbb
imul
cmps
(bad)
pshufw
xor
add
imul
pop
add
add
(bad)
daa
out
imul
ret
(bad)
adc
push
mov
loop
aaa
jg
popa
cld
cwde
push
mov
out
test
repnz
or
imul
jb
ins
inc
outs
js
test
xor
inc
push
outs
pop
and
jae
inc
jae
pop
cmp
scas
push
inc
or
mov
or
fcos
xor
inc
add
popa
inc
punpcklbw
popa
add
add
inc
loope
sbb
cld
pusha
dec
xchg
add
jae
push
popa
sub
ins
ins
popa
bnd
and
pop
gs
popa
rcl
je
dec
fidivr
sub
gs
fs
sub
fsubr
xchg
xchg
movq
pop
ret
fnsave
inc
fsubr
gs
inc
js
je
pop
sub
xchg
push
out
adc
xor
shl
rol
jmp
cmp
cs
inc
mov
cmps
adc
icebp
push
jle
arpl
add
fisttp
inc
(bad)
lahf
addr16
int
add
outs
call
sbb
js
pop
(bad)
jo
outs
inc
outs
jae
gs
or
xchg
push
loopne
sti
xchg
je
outs
xlat
add
inc
and
aad
sub
mov
sub
mov
jg
xor
les
ins
xchg
int3
stc
cwde
push
je
cmps
push
push
mov
gs
pop
cmp
test
(bad)
ja
outs
addr16
adc
push
adc
ret
fistp
and
repz
fwait
lahf
cmc
daa
fmul
aaa
(bad)
push
push
mov
jns
jb
adc
gs
and
push
(bad)
lahf
push
pop
je
push
(bad)
jns
inc
pop
test
and
jae
add
jo
mov
xchg
sbb
jge
mov
ja
adc
loopne
les
repz
repz
push
mov
push
add
dec
in
xchg
inc
or
push
jo
das
add
stos
xor
inc
dec
add
je
inc
sub
push
xchg
xor
mov
add
imul
pusha
shl
cwde
ds
xor
jb
pop
push
or
dec
mov
and
push
pop
daa
cmp
jg
and
(bad)
popa
jo
ret
dec
mov
jg
bound
xchg
xchg
jg
add
sbb
or
and
pop
pop
add
inc
icebp
arpl
push
adc
mov
inc
bound
repnz
add
sub
cmp
je
cmp
adc
pop
in
mov
mov
aad
or
mov
pop
add
rol
ret
dec
mul
aaa
xor
and
daa
addr16
xor
pop
aas
dec
cs
dec
jno
or
cmp
and
bound
pop
push
add
add
mov
push
jmp
and
sbb
aaa
in
dec
inc
inc
pop
mov
addr16
sbb
push
mov
(bad)
or
or
inc
retf
inc
(bad)
dec
inc
mov
xchg
pop
push
or
sahf
pop
pop
xchg
addr16
push
pusha
dec
mov
mov
inc
outs
inc
inc
jbe
or
loop
(bad)
sub
inc
ret
imul
and
inc
mov
jmp
push
aas
mov
fild
dec
aas
xor
or
jae
shl
add
arpl
fist
dec
test
dec
and
push
jp
adc
pop
rol
pusha
ret
add
bound
add
add
inc
add
add
ret
push
frstor
repz
test
add
add
sub
fistp
scas
dec
outs
jbe
mov
push
jg
dec
sbb
xor
popa
xor
mov
ins
inc
in
stos
imul
addr16
sbb
inc
outs
sbb
or
mov
mov
inc
js
enter
adc
daa
mov
leave
jae
imul
ins
ins
imul
aaa
jl
jp
je
jo
sub
pop
dec
pop
inc
sbb
test
dec
dec
pop
inc
mov
or
sbb
push
push
scas
dec
or
mov
push
mov
push
mov
push
jecxz
sub
rcl
sub
ins
repz
add
lahf
jecxz
adc
cwde
and
adc
mov
push
add
push
sbb
or
push
iret
addr16
adc
and
test
xor
inc
and
adc
add
and
add
das
mov
dec
pop
add
inc
inc
xor
fwait
scas
adc
outs
push
pop
test
mov
push
pop
pop
fs
jo
das
imul
je
daa
jge
add
add
xchg
and
jle
jecxz
and
and
xchg
xchg
out
aaa
sbb
ror
ss
jbe
jb
fwait
jle
cmps
arpl
adc
out
jmp
mov
jg
daa
sbb
cmp
mov
sub
push
dec
mov
mov
push
aaa
imul
or
inc
inc
sbb
scas
frstor
inc
cmp
rcl
ss
aaa
dec
das
jne
xchg
les
movs
mov
push
les
aas
dec
data16
pop
adc
dec
mov
dec
and
push
pop
mov
sub
inc
fwait
and
retf
or
sub
ins
out
push
add
retf
ss
aaa
lock
sbb
add
push
lods
push
inc
jbe
daa
dec
jb
xor
mov
les
popa
cmp
adc
imul
add
lea
mov
inc
test
(bad)
and
sub
sbb
add
jo
movs
dec
ror
outs
jb
or
push
mov
scas
popa
and
mov
shl
sbb
iret
cmp
arpl
(bad)
cmp
retf
add
scas
pop
mov
push
inc
jge
pop
push
inc
das
and
inc
push
daa
mov
outs
inc
jecxz
mov
sbb
(bad)
push
pop
inc
or
add
sbb
(bad)
push
and
ds
outs
and
or
ins
ficom
lock
sahf
pushf
mov
inc
ja
push
jnp
out
mov
jno
adc
adc
sub
or
add
mov
inc
dec
jae
add
mov
psrlq
aaa
xchg
or
dec
sub
sub
mov
es
push
gs
arpl
shl
and
je
jb
out
data16
mov
jl
cs
push
imul
out
arpl
ins
movhps
test
inc
(bad)
inc
jnp
addr16
cs
scas
or
sbb
dec
pop
sti
sub
pop
sub
aas
pop
pop
jl
sub
cmp
mov
add
cmp
push
lock
repz
cmc
mov
sbb
add
pusha
add
mov
out
f2xm1
push
fcomp
push
inc
cli
cli
(bad)
inc
push
dec
push
push
inc
or
dec
dec
dec
sti
imul
pop
push
dec
inc
push
push
dec
mov
div
and
dec
dec
inc
ss
pusha
arpl
fwait
or
inc
inc
dec
dec
dec
push
dec
dec
dec
push
outs
and
daa
inc
dec
inc
push
dec
inc
sub
push
inc
dec
add
test
mov
mov
dec
dec
adc
sub
daa
ja
ret
inc
dec
inc
push
int3
ror
in
inc
dec
pop
das
ja
jb
test
xchg
test
mov
loop
in
sub
and
add
(bad)
aam
push
inc
test
loop
fisub
dec
dec
ds
push
pop
cs
dec
dec
(bad)
or
and
push
ins
inc
inc
dec
inc
pop
sbb
outs
pop
inc
inc
push
dec
dec
push
inc
das
inc
dec
xor
inc
xor
adc
or
mov
in
stos
dec
rol
jnp
fisubr
push
inc
inc
comiss
(bad)
lods
push
aas
test
cmovno
sub
dec
jns
inc
jecxz
push
scas
pusha
xor
jo
add
inc
loope
retf
icebp
dec
dec
pop
movs
push
jne
mov
pop
push
or
rcr
inc
push
inc
dec
mov
add
pusha
sbb
dec
add
popa
js
popa
push
xchg
js
inc
dec
add
je
ins
ret
inc
push
jg
sahf
in
and
xor
add
jg
and
imul
pop
add
call
and
or
pop
mov
ja
outs
and
nop
cmps
sub
or
jns
mov
outs
jns
jg
pop
or
cmp
outs
sub
push
(bad)
out
sbb
add
aaa
jae
fist
jmp
add
je
imul
js
pop
(bad)
std
outs
add
xor
gs
fisub
dec
stos
adc
lea
xlat
ret
ja
jnp
ins
ja
jl
fisubr
jecxz
pop
dec
scas
inc
ins
ins
sbb
sub
(bad)
dec
pop
arpl
imul
jo
or
out
dec
dec
cmp
pop
fs
outs
inc
and
loop
sub
pusha
mov
and
gs
pop
push
ret
es
cmps
mov
inc
inc
(bad)
and
add
add
fadd
loopne
mov
arpl
add
gs
jo
push
pop
mov
aaa
xor
add
and
and
xchg
dec
call
rol
pop
dec
push
jb
and
cmps
cmc
stos
and
add
adc
jecxz
xlat
and
inc
jb
shl
retf
dec
lahf
cmp
fs
push
loopne
daa
or
pop
sbb
inc
js
add
(bad)
pop
fmul
mov
sbb
rol
mov
cmps
or
sbb
data16
xchg
inc
test
push
daa
xor
dec
(bad)
outs
ds
push
pop
enter
inc
daa
or
push
mov
inc
sub
push
xor
bound
xor
ror
fld
cmps
jo
cs
mov
adc
push
sbb
repz
xchg
or
xchg
add
or
add
mov
fcomp
push
xor
inc
mov
psllq
pop
xchg
xchg
push
imul
daa
inc
pop
adc
xlat
xor
cwde
and
xor
fld
dec
lahf
add
mov
xlat
pop
shl
inc
pop
push
push
jns
add
push
inc
inc
js
ins
push
and
push
jo
jl
pusha
push
jae
js
mov
addr16
adc
xor
ins
dec
adc
bound
pop
and
xchg
pop
dec
and
add
iret
mov
iret
jnp
mov
add
dec
inc
test
add
scas
add
add
movs
sbb
mov
jg
sbb
or
push
iret
mov
dec
sub
or
add
mov
out
jle
xor
mov
add
stos
push
push
mov
adc
int
shl
outs
popa
adc
push
punpckldq
mov
xor
repnz
cmp
xchg
pop
dec
pop
je
or
cmp
and
and
xor
or
lods
adc
popf
mov
into
lds
ret
inc
pop
adc
fwait
adc
adc
mov
aas
sub
or
add
sbb
cli
xor
jb
cmps
cmp
ins
clc
and
iret
(bad)
add
int3
push
cmp
loopne
pusha
in
fstp
push
les
sahf
int
in
je
subps
adc
into
pop
jne
bswap
scas
clc
fwait
mov
mov
xor
inc
inc
xor
(bad)
dec
cmp
cmp
inc
xor
xor
(bad)
sbb
xor
xor
xor
push
sti
fwait
mov
xor
inc
inc
aaa
adc
xor
xor
cmp
outs
cmp
ss
inc
inc
lods
add
xor
ins
pop
fild
inc
inc
ss
mov
push
inc
cmp
xor
inc
ss
xor
xor
outs
out
test
bound
aaa
cli
inc
inc
xor
ss
inc
xchg
xor
cmp
inc
inc
inc
xor
push
xor
test
fnstsw
cmp
pop
xor
sbb
xor
aaa
mov
push
ficomp
retf
push
pusha
mov
xor
in
call
es
xor
and
xor
pop
cwde
adc
inc
add
aaa
adc
popa
lock
inc
xor
push
sub
sar
mov
jbe
aam
mov
in
or
dec
fadd
xor
inc
cmp
pop
shl
cwde
enter
adc
mov
push
mov
sti
inc
cmp
sbb
aaa
sbb
adc
push
xchg
xor
jo
xor
sbb
into
scas
ss
and
repnz
mov
into
xor
sbb
or
mov
cmp
ret
mov
mov
or
inc
mov
js
xchg
in
dec
xor
pushf
sbb
sahf
or
jno
pop
cmps
cmp
xor
or
mov
sbb
nop
retf
inc
pusha
dec
pusha
nop
xchg
mov
adc
inc
mov
sbb
push
xchg
inc
xor
loop
pop
cs
inc
or
xor
int3
or
sbb
xor
mov
inc
and
jmp
or
lock
and
inc
mov
data16
xor
mov
mov
xor
adc
inc
or
clc
add
ins
bound
pop
and
inc
jp
test
jbe
clc
dec
test
ror
ds
rol
push
xor
cwde
enter
cmp
and
cmp
pop
shl
dec
inc
call
push
xor
add
push
inc
loopne
pop
sub
dec
add
dec
or
push
shl
push
loop
outs
push
jbe
adc
loopne
adc
adc
xchg
(bad)
xor
xor
enter
adc
fidivr
dec
cmp
pusha
inc
xor
push
push
cwde
shr
clc
xor
lods
or
xstore-rng
cmps
(bad)
je
inc
sub
fiadd
out
inc
mov
mov
fbstp
sub
or
cli
test
mov
in
sub
call
sbb
xor
sbb
test
inc
xchg
xor
cwde
bound
xor
adc
push
dec
ins
xor
jbe
xor
xchg
shl
push
test
adc
es
adc
cmp
sub
fmul
cmp
add
add
xor
push
les
adc
test
push
rcl
push
mov
rcr
mul
cmp
sub
dec
xor
loopne
call
push
cwde
mov
inc
dec
clc
cmps
ins
sbb
cmp
adc
inc
push
mov
sbb
ss
push
inc
scas
loopne
push
ds
cwde
mov
bound
sbb
push
mov
call
inc
cs
adc
fcom
xor
sub
in
loopne
push
jo
data16
cld
xor
add
call
mov
xor
ror
sub
inc
mov
repnz
push
pusha
cwde
enter
push
mov
clc
adc
clc
push
pusha
xor
in
and
neg
inc
dec
rol
mov
cwde
ret
bound
call
mov
mov
push
xchg
dec
and
adc
pusha
sub
and
(bad)
adc
mov
push
or
scas
xor
adc
daa
mov
add
mov
xor
sbb
call
push
push
pusha
dec
add
sahf
xor
cmp
ja
xor
aam
or
sbb
out
mov
push
push
or
xor
adc
loopne
xchg
mov
mov
shr
iret
xchg
sbb
cmp
jb
aam
xchg
in
lods
cmp
fiadd
inc
pop
aam
adc
cmp
xor
rol
inc
inc
add
out
push
push
dec
mov
es
ss
pop
pop
dec
and
call
pop
sub
push
push
sub
shl
popa
es
adc
and
pop
mov
or
cmp
inc
loopne
ret
add
pop
jo
or
inc
push
bound
add
jp
mov
xchg
ret
pop
scas
xor
and
and
sub
in
jo
xor
push
mov
int3
add
scas
or
push
aaa
ja
sahf
sbb
mov
and
fcomp
cdq
cdq
loope
ins
arpl
xchg
pop
dec
test
inc
xor
scas
shl
out
inc
cmp
jl
sub
mov
xor
test
push
scas
add
mov
addr16
sbb
push
xor
popa
add
and
dec
push
xor
ror
sbb
sub
js
js
or
aam
sub
add
rcl
add
add
shl
(bad)
cdq
dec
lock
repnz
daa
fldcw
or
inc
out
loop
mov
xchg
and
adc
cmp
pusha
mov
inc
inc
jne
mov
in
inc
mov
jnp
or
mov
push
in
retf
sub
or
add
push
ret
push
sbb
into
daa
jno
mov
cmp
shl
jb
cmp
stos
or
test
cmp
xchg
xor
or
inc
jo
outs
adc
ret
add
jl
test
fidiv
rol
out
and
les
daa
mov
test
or
xchg
sub
and
and
je
or
dec
xlat
or
push
shl
push
and
add
xor
rol
loopne
rol
pushw
xor
xor
jle
sub
jl
sbb
daa
clc
mov
and
inc
xor
xchg
xor
or
or
add
es
push
shl
ror
cmps
fidivr
test
loope
adc
or
sbb
in
sahf
inc
mov
inc
inc
adc
int3
aaa
mov
cwde
mov
add
aaa
inc
sbb
rcl
mov
or
test
xor
ror
lods
xor
ror
add
movs
push
test
data16
jmp
fsubr
js
xchg
inc
je
stos
sti
mov
scas
xor
lods
and
inc
daa
push
xor
sub
adc
xor
ss
jmp
xor
mov
movs
sbb
mov
add
jmp
test
sbb
aaa
or
or
adc
out
add
pop
xchg
xor
fild
pop
xchg
iret
adc
push
push
dec
cs
and
or
push
nop
dec
xor
call
inc
cmp
push
and
and
push
rol
outs
js
lods
mov
push
(bad)
pop
aaa
imul
xor
lods
adc
xchg
adc
es
jle
xor
cmp
das
inc
add
icebp
jle
or
mov
fcomp
pop
push
pop
in
xor
xor
cmp
ds
sub
inc
dec
xchg
dec
in
loopne
pop
and
bound
mov
je
adc
inc
xchg
dec
add
xchg
test
pop
push
dec
mov
add
outs
inc
push
movs
adc
mov
loop
inc
xchg
les
daa
ror
(bad)
and
or
mov
fdiv
dec
fwait
xchg
loopne
fdiv
inc
push
movs
adc
cmps
inc
jbe
fs
jbe
mov
jo
nop
test
jbe
fisubr
xchg
and
shl
cdq
fld
cs
aaa
pop
idiv
sub
pop
jmp
add
jl
sbb
cli
add
cmps
mov
mov
popa
xor
mov
scas
push
push
xchg
jl
js
xor
rcl
pop
or
or
sbb
cmp
popa
push
inc
mov
enter
push
xor
sbb
js
test
or
loopne
mov
xor
and
jo
sub
rcl
cmp
mov
push
sbb
inc
mov
(bad)
add
cld
xor
mov
push
loop
mov
inc
ss
xor
mov
cwde
inc
popa
xchg
and
int3
ins
jno
inc
mov
les
aam
add
cmp
pusha
pop
icebp
jb
out
mov
jbe
inc
jne
mov
and
pop
and
fiadd
or
xor
and
jmp
add
es
and
bound
adc
mov
sbb
dec
sbb
clc
or
mov
test
mov
ss
cwde
or
mov
shr
(bad)
xor
or
jbe
inc
movs
paddsb
(bad)
xor
arpl
inc
inc
lods
lock
sub
sahf
cmp
popa
cs
nop
out
rol
push
dec
inc
and
push
adc
pop
pushf
jp
xor
and
push
or
or
mov
ss
sbb
cmp
cli
fidiv
sbb
or
mov
data16
xor
nop
add
call
xor
call
data16
inc
inc
mov
jo
loopne
rol
add
js
add
xchg
fadd
outs
pop
inc
lahf
adc
mov
mov
push
inc
add
inc
and
pop
xor
sbb
cdq
fsubr
ds
adc
pop
push
js
dec
push
test
jp
lea
add
movs
int
inc
mov
push
fs
xchg
sbb
add
inc
add
sbb
bound
out
cmps
xchg
aam
add
pop
jo
pop
push
sbb
dec
and
xchg
or
lods
push
inc
cmp
jbe
(bad)
mov
test
push
mov
and
dec
mov
and
hlt
jmp
xchg
xchg
mov
xor
xor
xor
xor
mov
(bad)
adc
cmps
dec
and
jp
js
fcom
inc
push
mov
mov
adc
or
adc
call
xchg
pusha
push
popa
xor
out
inc
dec
push
popf
xor
popf
sbb
adc
enter
adc
inc
test
rol
mov
nop
jmp
and
pop
jbe
ja
in
push
imul
outs
(bad)
add
or
arpl
push
inc
or
inc
out
outs
outs
mov
push
dec
and
imul
inc
push
gs
rcr
shl
cmp
or
push
call
gs
gs
inc
popa
ins
jg
add
pop
lds
inc
inc
gs
enter
inc
push
xor
fdivr
sub
(bad)
repnz
adc
into
push
(bad)
je
xor
inc
and
cmp
popa
jp
ins
ins
mov
push
and
imul
and
sbb
sub
repnz
aaa
push
sub
popa
loop
js
push
push
inc
push
pop
push
inc
push
dec
xor
push
dec
pop
push
fimul
inc
dec
add
add
retf
jae
mov
pop
ret
stc
daa
xchg
sbb
not
inc
push
inc
dec
pop
data16
pop
jb
repnz
xor
xchg
push
push
das
mov
mov
sub
jo
outs
pusha
lods
loope
dec
data16
movs
add
dec
outs
jecxz
nop
ret
sub
cs
mov
sar
(bad)
dec
push
cmc
pop
sbb
out
sub
jp
les
pushf
mov
ss
shl
pop
sub
add
sahf
sar
inc
retf
jns
outs
dec
xor
and
(bad)
dec
inc
sub
aas
outs
push
jmp
pop
adc
pop
pop
sbb
rcl
outs
gs
popw
scas
nop
sub
xor
xor
in
sbb
dec
cli
inc
out
dec
popa
or
aaa
push
pop
or
scas
pop
jne
inc
mov
or
inc
mov
push
cmp
mov
sub
mov
add
or
rcl
imul
sti
nop
ds
ja
loope
cmps
sub
aas
push
dec
aaa
push
outs
jbe
sub
mov
adc
push
out
lea
loopne
(bad)
push
push
test
(bad)
mov
(bad)
fs
add
sbb
cmps
inc
test
jl
inc
pop
or
gs
xor
push
add
daa
int3
jmp
sub
adc
add
outs
pop
dec
mov
sbb
aaa
ins
adc
popa
add
push
test
or
dec
lahf
retf
rol
mov
arpl
pop
fadd
push
pop
or
rol
add
or
dec
fsub
and
push
ins
mov
aas
js
lods
sbb
or
dec
outs
outs
sub
clc
mov
inc
gs
jne
je
jb
mov
jmp
ja
icebp
sub
xchg
cmps
adc
aam
popa
arpl
mov
retf
jae
popa
cmp
dec
call
xchg
ins
test
cmp
ror
call
daa
xor
ins
fidivr
data16
add
sbb
push
mov
(bad)
rep
aas
arpl
push
dec
add
sub
into
push
dec
lock
pop
repz
and
pop
and
sbb
jo
shl
ja
mov
xchg
fistp
cmc
inc
lock
adc
inc
or
adc
pop
aaa
jmp
or
push
xrstors
fsub
pop
jo
(bad)
outs
out
sub
mov
cmp
sar
add
or
and
jg
jmp
loopne
aas
xor
dec
adc
hlt
and
jne
jb
mov
out
gs
mov
and
outs
pop
dec
outs
imul
bound
and
or
lock
jo
je
ins
stos
mov
sbb
or
adc
sbb
fisubr
jecxz
sbb
push
pop
sub
popa
addr16
inc
add
or
shr
pop
addr16
mov
jo
je
or
and
xchg
test
adc
rol
addr16
inc
ret
mov
imul
add
inc
jne
stos
add
or
in
ss
add
add
push
stos
inc
push
jecxz
dec
jp
and
or
outs
ret
mov
mov
jmp
lahf
inc
dec
pop
push
mov
bound
sti
mov
mov
loopne
and
bound
addr16
xor
rol
out
pop
ret
sar
adc
cmp
mov
arpl
xor
and
adc
sub
ret
pop
and
sub
inc
push
xchg
hlt
gs
outs
jb
push
push
fist
inc
repz
ret
mov
inc
test
loopne
xchg
cmp
add
dec
or
sub
ins
mov
or
imul
test
xlat
push
mov
mov
or
adc
test
jbe
in
nop
push
in
and
lock
mov
out
or
jnp
in
push
jecxz
loop
loopne
(bad)
scas
jo
mov
dec
dec
mov
daa
inc
sub
js
outs
or
xchg
jbe
and
and
adc
lahf
push
dec
push
or
ja
mov
je
add
adc
xor
mov
jg
loop
xlat
inc
inc
xor
lods
adc
mov
inc
push
add
mov
pop
sub
jbe
push
mov
adc
add
jmp
syscall
xlat
and
jb
(bad)
cmp
(bad)
(bad)
push
inc
ins
jae
js
addr16
sub
jbe
inc
sub
cmp
cmp
and
dec
imul
adc
push
bound
and
(bad)
fdivrp
(bad)
call
push
xor
ins
ss
push
imul
je
imul
push
mov
cs
sub
add
outs
icebp
push
mov
sub
outs
bound
out
daa
or
jmp
bound
daa
das
pop
pop
dec
hlt
div
das
sub
sbb
enter
popa
add
jno
mov
pop
and
aas
push
cmp
jmp
(bad)
aaa
add
xchg
aas
jae
popa
mov
das
scas
and
and
ins
(bad)
add
push
outs
cmp
adc
push
and
sti
inc
or
mov
mul
add
(bad)
cmp
ja
outs
push
das
fld
outs
in
test
ja
dec
test
pop
add
jmp
cmps
gs
outs
(bad)
jns
cwde
call
or
cwde
pop
imul
inc
xchg
test
adc
push
test
js
cmp
xor
xor
xchg
fstp
loopne
das
jp
cmp
jb
dec
cmp
adc
xor
aas
sbb
push
jnp
add
jns
popa
and
rcr
xchg
cmp
test
cmp
or
sub
les
fisttp
sub
sub
pop
aaa
(bad)
test
cmp
jnp
lock
xlat
cmp
mov
push
stos
loopne
das
sahf
inc
cmp
mov
pop
scas
add
repz
rcr
retf
mov
sub
imul
repz
mov
arpl
fld
add
xlat
or
pop
and
es
add
push
cmc
fiadd
(bad)
cmp
adc
inc
jmp
add
jecxz
arpl
and
push
jg
neg
dec
and
add
add
mov
inc
push
xor
mov
(bad)
and
test
push
xchg
imul
mov
pop
ja
cs
xor
sbb
and
data16
das
xor
sub
add
outs
sbb
lock
sar
movd
mov
add
retf
repz
or
mov
dec
outs
stos
or
xchg
xor
dec
cmps
inc
ins
jo
jae
bound
mov
pop
inc
ins
jo
popa
jbe
push
mov
adc
jne
aaa
inc
jo
ins
das
imul
and
aaa
mov
mov
jae
xchg
add
(bad)
push
add
inc
rol
adc
scas
mov
push
push
push
pusha
jbe
rol
and
push
popa
dec
test
arpl
jl
sar
and
mov
push
or
mov
aas
jl
adc
and
jne
add
imul
push
or
push
add
pop
mov
retf
inc
ror
jae
arpl
cmp
fimul
gs
push
xor
cmc
mov
outs
jne
gs
arpl
fwait
mov
bound
test
jp
push
lock
js
sub
inc
push
or
adc
lock
push
dec
inc
ret
stos
mov
jg
pop
push
jo
add
das
into
jo
std
sbb
jl
add
sub
mov
jge
pop
mov
out
jb
or
pop
push
adc
and
pop
scas
add
and
enter
inc
mov
xchg
js
pop
push
add
jns
popa
jne
push
xchg
inc
or
cmp
inc
popa
les
pop
sbb
call
xchg
dec
adc
call
add
sub
fst
jns
outs
sbb
mov
push
adc
cmp
xlat
popa
or
mov
pop
jne
pop
imul
sub
add
mov
inc
add
inc
sbb
jno
xchg
(bad)
push
popa
arpl
dec
packsswb
pop
mov
and
add
outs
mov
jbe
test
dec
adc
add
sbb
shl
lahf
sub
push
pop
and
adc
push
sbb
fwait
loope
aam
aaa
jae
and
imul
mov
test
mov
and
jae
movs
mov
popa
inc
dec
xor
ds
daa
sub
xor
outs
outs
fild
loope
dec
dec
outs
jp
mov
and
and
aas
push
clc
outs
pop
cmp
push
dec
push
ss
and
push
and
mul
imul
push
dec
dec
push
dec
dec
sub
or
sbb
inc
and
inc
push
mov
das
xor
and
data16
cmps
popa
test
test
sbb
pop
add
add
mov
mov
inc
int
push
pop
ud2
test
imul
add
(bad)
(bad)
loop
outs
aaa
and
test
cmp
jno
loope
daa
adc
adc
push
iret
scas
call
jmp
cmp
add
(bad)
add
cmps
scas
adc
add
js
dec
arpl
sbb
pop
sti
fs
xor
jecxz
mov
sbb
lahf
ret
clc
hlt
xor
jne
sub
data16
ins
mov
adc
xchg
cmp
mov
add
imul
shr
dec
add
test
xor
iret
dec
mov
sub
xchg
cmp
mov
test
aad
push
push
dec
and
ins
jne
lods
push
inc
and
lock
jnp
push
push
add
call
movs
push
dec
add
gs
add
frstor
inc
inc
add
mov
mov
ret
or
int
add
mov
outs
add
or
and
adc
lahf
inc
adc
dec
cmps
pop
add
ror
xor
xor
xor
inc
push
push
inc
jae
jb
xchg
mul
scas
dec
lahf
pop
aaa
(bad)
jbe
push
dec
add
jle
loop
addr16
push
add
fcom
ret
stos
pop
mov
inc
push
adc
test
cmp
mov
add
jmp
dec
pop
mov
(bad)
xchg
xchg
xchg
or
je
jne
pusha
arpl
shl
jg
jb
cmp
jo
outs
xlat
imul
push
add
lods
sub
add
push
mov
cmp
jnp
adc
dec
sbb
jae
es
and
jp
and
imul
pop
jae
or
or
xchg
cld
push
jb
pop
imul
fiadd
jb
adc
imul
call
sub
pushw
jb
and
mov
jb
outs
je
and
dec
retf
xor
push
sti
pop
mov
jne
ret
adc
imul
inc
clc
xchg
add
sbb
imul
sub
push
sub
and
add
dec
mov
push
or
xor
or
and
es
fild
sub
push
das
push
sub
inc
scas
jne
or
push
mov
add
xchg
add
icebp
dec
sub
daa
jb
add
or
fcomp
push
add
pop
add
or
mov
and
out
lock
pop
shr
and
shr
push
or
pop
cmps
or
mov
(bad)
add
outs
push
aaa
inc
dec
inc
add
arpl
sbb
or
clc
jne
imul
push
loope
xor
xchg
mov
adc
inc
das
dec
mov
fld
test
fidiv
add
jb
mov
rol
mov
fmul
mov
push
inc
mov
not
ins
(bad)
or
adc
pop
dec
test
call
lods
or
pop
jae
mov
inc
push
mul
jnp
inc
aaa
and
arpl
adc
fwait
or
mov
add
push
scas
inc
inc
scas
sub
sub
ror
lahf
mov
or
sub
idiv
iret
sub
mov
fild
iret
pop
or
push
sub
dec
inc
inc
stos
lahf
and
inc
jmp
sub
je
in
scas
fisttp
popa
add
js
push
iret
inc
push
ror
aad
int
adc
lds
mov
mov
ds
mov
adc
lahf
test
pop
imul
or
jns
or
dec
or
or
sbb
les
push
mov
mov
cmp
pop
outs
(bad)
inc
outs
pop
pop
push
add
ja
dec
das
inc
add
inc
and
retf
push
push
gs
jbe
mov
push
shl
cli
sub
js
addr16
gs
sbb
or
gs
push
mov
ret
mov
pop
or
sub
jecxz
jno
ror
jns
or
inc
ret
jg
call
pop
push
jg
jnp
mov
jnp
adc
add
call
mov
gs
fs
daa
test
push
adc
dec
popa
or
inc
sbb
sbb
and
inc
(bad)
sub
movs
retf
jnp
inc
sub
dec
and
mov
jl
cmp
imul
inc
xor
inc
sbb
and
jb
gs
jge
or
dec
cmp
xchg
jp
cmp
je
test
ss
(bad)
call
mov
cs
fwait
push
aaa
sbb
pop
fild
cmps
pop
fild
shr
push
inc
pop
pop
dec
inc
lods
jge
mov
inc
adc
or
dec
push
pop
push
dec
inc
pop
inc
dec
inc
push
repz
jns
jle
ss
mov
pop
add
nop
add
add
popa
sbb
pusha
daa
inc
add
mov
cmp
pop
les
inc
add
iret
pusha
inc
add
fild
pop
adc
dec
bound
pushf
adc
sbb
mov
push
mov
dec
or
mov
inc
stos
jb
inc
jg
and
adc
or
lea
fs
and
lock
xor
arpl
adc
arpl
ins
cwde
add
push
fcom
push
inc
push
pop
aam
bound
mov
in
gs
sub
jns
inc
and
adc
js
dec
out
ficom
mov
pusha
push
push
inc
xor
adc
sahf
and
aaa
fild
retf
rcl
pcmpeqb
call
repz
repz
nop
aad
(bad)
mov
outs
jp
jo
push
xchg
loopne
dec
pop
jo
jb
addr16
fnstsw
inc
cmp
push
outs
retf
rol
sub
shr
cmp
sti
rcl
adc
or
pop
push
jo
repz
cvtps2pi
or
pusha
shrd
mov
in
add
jg
das
pop
jnp
fsubr
sbb
nop
xchg
cmp
aaa
sub
aas
push
jbe
fstp
push
adc
push
pop
mov
leave
in
or
mov
lock
push
movups
mov
in
push
jecxz
sub
je
xor
enter
(bad)
or
aas
test
ins
mov
mov
test
inc
aas
call
adc
pop
nop
cwde
pextrw
jnp
push
das
jl
cmp
fdivr
mov
in
jbe
das
ins
cvttps2pi
mov
dec
outs
jl
add
cmp
adc
mov
in
jbe
rdmsr
jg
dec
das
outs
mov
in
bound
and
movs
pop
add
xor
dec
inc
aas
in
pop
das
pop
paddsw
in
sbb
xchg
inc
jp
fucomi
sbb
aas
aam
adc
push
fist
ins
mov
aas
mov
aas
mov
mov
outs
mov
aas
hlt
inc
sub
add
pop
jo
(bad)
jbe
ss
dec
mov
data16
aas
lods
pop
mov
xchg
inc
aas
in
dec
das
mov
outs
mov
nop
pushf
jmp
jle
pop
fsubr
ds
fdivr
sbb
outs
in
mov
mov
mov
jmp
push
aas
adc
aad
inc
in
jbe
fnstsw
jmp
and
outs
daa
mov
mov
inc
aas
loop
jbe
test
pop
nop
xchg
test
mov
(bad)
jns
cmp
sar
xchg
jbe
imul
mov
mov
dec
aas
bnd
jb
push
unpckhps
outs
add
pop
aad
ss
xor
ret
mov
outs
(bad)
aas
stos
pop
mov
outs
cmovne
jmp
in
sbb
(bad)
in
jbe
fnstsw
(bad)
ins
cvtps2pi
in
ss
mov
dec
aas
adc
dec
adc
(bad)
aad
push
xor
fld
and
cmps
jmp
cmovae
out
outs
mov
call
sbb
xchg
dec
(bad)
aas
(bad)
jmp
fsubr
imul
aas
mov
aas
mov
cmovnp
idiv
push
paddsw
jne
push
aaa
jg
outs
pop
aad
jmp
daa
aas
scas
(bad)
mov
mov
out
aad
jbe
call
pop
aas
sahf
call
outs
pop
jg
aas
aas
fdivrp
add
in
jbe
comiss
mov
in
ss
cmovg
inc
call
mov
loope
shl
xchg
dec
and
icebp
leave
inc
xor
test
jmp
xor
mov
and
xor
and
aad
inc
xor
cmc
int
and
leave
lods
in
popf
leave
inc
xor
and
xor
and
leave
xchg
shl
repz
and
leave
inc
stos
jmp
xor
and
(bad)
xor
and
leave
inc
xchg
xlat
push
xor
leave
inc
xor
scas
out
xor
jne
leave
inc
mov
xor
pandn
sbb
pop
adc
xchg
jne
jge
push
add
jg
lods
sub
pop
rcl
pop
jo
sbb
pop
and
add
fstp
add
jg
and
sbb
pop
sub
popa
jg
fs
add
xor
push
sbb
xor
adc
fist
pop
(bad)
ins
mov
pop
dec
int
dec
add
or
cmps
add
add
inc
ins
cmps
fsub
les
add
cmc
xor
ss
pop
pop
and
jb
fsubr
and
add
or
fsubr
or
cmovg
mov
das
and
push
xor
or
loopne
xor
push
ret
add
add
in
pop
mov
add
pop
add
in
add
inc
cmps
ud0
sbb
push
pushf
bound
add
jno
add
add
add
sbb
cmp
add
fild
adc
inc
nop
loop
inc
out
iret
push
or
mov
sub
mov
addr16
or
xchg
(bad)
(bad)
(bad)
fisttp
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
mov
push
movs
mov
aad
mov
rcl
mov
sub
(bad)
call
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
(bad)
(bad)
(bad)
inc
test
adc
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
(bad)
(bad)
push
or
outs
cmp
imul
addr16
add
aam
dec
std
test
jmp
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
call
adc
lods
xor
cmp
ficom
(bad)
(bad)
(bad)
call
enter
mov
and
mov
cdq
xchg
mov
mov
or
(bad)
(bad)
(bad)
(bad)
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
rcr
mov
mov
movs
in
lahf
xor
mov
js
stc
(bad)
jmp
(bad)
test
xchg
sbb
push
sub
(bad)
(bad)
(bad)
jmp
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
sar
(bad)
push
or
(bad)
fnstenv
adc
mov
mov
bound
ficom
(bad)
jl
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
(bad)
(bad)
in
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
inc
cld
(bad)
inc
in
add
pop
dec
or
cmp
add
daa
(bad)
jmp
and
and
test
or
mov
popa
(bad)
(bad)
(bad)
dec
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
shl
mov
call
mov
cmp
jmp
fild
push
call
mov
or
test
fs
ds
or
test
push
or
push
in
dec
xchg
daa
(bad)
(bad)
(bad)
fbstp
sahf
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
(bad)
push
ins
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
(bad)
(bad)
(bad)
mov
mov
call
xchg
shl
push
repnz
addr16
cmps
fstp
add
dec
ss
fisubr
mov
(bad)
(bad)
(bad)
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
cmp
(bad)
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
(bad)
(bad)
mov
sub
mov
cmps
call
ret
shl
sbb
ret
es
(bad)
(bad)
jmp
pushf
mov
ins
add
ss
jmp
addr16
jb
push
les
dec
mov
loop
sub
or
mov
xchg
or
out
fdivr
fisttp
aam
(bad)
(bad)
call
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
movs
test
retf
(bad)
(bad)
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
ror
dec
ret
cmp
cmps
not
pusha
ror
imul
push
scas
(bad)
(bad)
(bad)
(bad)
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
dec
xchg
mov
cmps
mov
sar
sub
push
mov
jp
mov
(bad)
(bad)
(bad)
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
push
fs
add
xchg
sub
ins
sub
push
dec
push
in
and
das
movs
xchg
push
add
inc
ins
loopne
push
imul
jae
ins
bound
jg
inc
sbb
in
mov
pop
jae
sbb
fs
test
fmul
lahf
push
sahf
mov
fld
add
std
pusha
mov
push
mov
add
and
inc
into
sti
bound
push
pusha
lds
nop
test
movs
and
ja
je
pop
fisttp
(bad)
iret
push
ret
pop
push
rcl
inc
jg
js
mov
gs
mov
sub
das
test
and
fs
pop
push
shl
ja
aad
or
int
jne
sub
sub
and
inc
push
push
ds
jbe
fsubr
add
movs
ins
mov
xlat
pop
pop
inc
adc
pop
bound
jns
mov
xor
adc
(bad)
and
sbb
pop
mov
icebp
fsubr
mov
pop
jns
pop
rol
gs
mov
pop
(bad)
ret
not
xor
popa
(bad)
arpl
jne
jae
ja
cwde
dec
push
push
pop
or
sti
aaa
mov
inc
sbb
push
enter
pop
pop
sbb
popa
call
jo
sbb
and
jg
enter
aaa
imul
pop
xchg
add
xchg
imul
arpl
mov
inc
pop
pop
fs
sbb
ins
ins
inc
jbe
jne
cmp
inc
push
inc
or
xchg
jae
xor
add
add
cmp
add
cmp
xchg
add
cmp
add
mov
add
mov
add
add
jbe
add
sub
jbe
xor
inc
pop
or
add
out
dec
rol
sbb
and
cld
es
xlat
xor
add
lea
push
aaa
and
push
or
dec
add
pop
push
add
(bad)
shl
xor
pop
push
push
push
xlat
dec
or
dec
sub
push
add
shr
sub
cmp
adc
cmp
addr16
ror
inc
jo
jns
mov
mov
jo
sbb
add
dec
das
dec
inc
cmp
push
cmp
jecxz
sbb
push
add
ins
mov
fist
push
xor
adc
mov
push
das
xor
adc
xlat
xchg
loop
cmp
rcr
daa
add
mov
pop
inc
add
add
fcom
push
pop
arpl
imul
ds
add
out
add
mov
inc
mov
inc
xchg
add
scas
shl
sbb
mov
les
out
or
add
aas
inc
dec
ins
gs
adc
sbb
iret
int3
retf
mov
add
cmp
add
jb
enter
jb
shr
and
jl
and
push
add
repnz
xchg
mov
popf
or
das
(bad)
sbb
sbb
pop
out
add
xchg
add
fst
cmp
pop
push
in
xor
fist
inc
pop
xor
mov
or
sub
jae
push
lahf
or
sti
sti
or
add
cmp
cmp
cmp
addps
das
ins
add
add
nop
add
rcl
cmp
in
adc
js
xchg
and
movs
rcl
sar
icebp
mov
and
push
cmc
je
cwde
repnz
push
push
bsf
pop
fadd
mov
cmp
mov
test
in
mov
ja
sub
push
push
lahf
mov
add
mov
lock
ret
xchg
and
vmread
rol
shl
(bad)
pop
les
add
mov
cld
adc
and
push
ins
or
in
add
pop
cmps
or
xor
xchg
and
pusha
add
shrd
add
pop
add
and
push
test
xadd
in
popf
adc
pop
and
inc
mov
jb
ins
mov
fsubr
xchg
das
inc
hlt
stos
sbb
cmp
cmp
repnz
mov
adc
enter
das
addr16
adc
inc
loopne
fs
enter
loope
out
out
mov
lods
inc
jmp
loop
pop
(bad)
lods
mov
into
pop
loopne
shrd
out
sbb
cmp
enter
jmp
pop
mov
add
pop
scas
and
in
xchg
and
or
xchg
or
add
paddb
xchg
and
add
adc
in
add
mov
or
push
push
cmp
in
mov
or
push
cmps
inc
mov
push
adc
push
out
dec
test
int3
add
mov
add
in
xchg
adc
add
aas
pop
mov
add
mov
or
add
mov
xchg
mov
or
mov
or
sbb
or
mov
fmul
comiss
and
cmovl
add
mov
(bad)
cld
test
add
xor
add
xchg
and
dec
push
mov
enter
in
out
in
or
sbb
cmovl
adc
test
dec
cli
or
loope
mov
int3
lods
mov
add
pop
(bad)
jb
push
xchg
mov
clc
push
das
(bad)
pushf
jge
sub
subps
test
add
addr16
rol
pmuludq
mov
in
dec
cld
jo
xchg
or
and
jo
sbb
cmp
add
in
xchg
pop
test
dec
cmp
ja
push
bsf
add
pop
pop
push
pop
into
mov
and
add
mov
sbb
js
mov
push
pop
shl
pushf
mov
xchg
inc
pusha
das
or
in
(bad)
call
sub
mov
mov
in
movs
sbb
hlt
mov
pop
jbe
repnz
rol
lds
daa
das
sbb
xadd
sbb
js
int3
push
movs
push
test
fisttp
sbb
jp
jae
popf
mov
xchg
aaa
xchg
sub
inc
es
pop
cmp
bound
push
aas
push
(bad)
inc
sub
jg
push
dec
add
das
inc
dec
sti
outs
fstp
push
retf
mov
adc
jmp
pop
pop
add
(bad)
sti
jnp
fcmovnbe
jge
imul
xchg
mov
adc
xor
(bad)
mov
add
cmp
inc
mov
sbb
fimul
mov
mov
sbb
inc
pop
mov
sar
push
push
lahf
or
inc
or
sbb
or
call
dec
add
(bad)
adc
cmp
dec
add
daa
mov
add
adc
fiadd
push
inc
xchg
pop
xor
inc
add
sbb
jg
inc
add
and
mov
out
rol
pop
inc
out
loopne
jle
push
mov
dec
ja
xor
push
jmp
sub
jbe
push
push
outs
inc
aaa
data16
sbb
push
aaa
sbb
loop
or
dec
inc
jae
cmp
test
push
inc
inc
nop
in
push
outs
jecxz
daa
aad
imul
mov
mov
inc
dec
mov
xlat
sbb
push
rol
cmp
pop
pop
hlt
xor
pop
add
iret
inc
and
out
xor
push
add
loope
mov
aas
or
out
aaa
push
add
retf
inc
daa
xlat
add
mov
cmc
pusha
test
inc
sub
add
pop
pop
sbb
cmp
inc
add
pop
push
push
add
inc
lahf
push
inc
fstp
adc
ss
pop
inc
pop
mov
dec
aaa
pop
dec
retf
or
add
stos
push
push
sti
lds
push
push
add
jmp
in
lds
dec
dec
repz
lahf
pop
adc
jbe
cmp
sbb
out
das
pop
(bad)
cmp
mul
xchg
and
push
ja
push
jecxz
loope
mov
push
fisttp
pusha
mov
sub
aaa
mov
inc
cmps
inc
jnp
test
pop
inc
pop
dec
inc
fild
push
das
xor
sbb
inc
addr16
lea
dec
jo
push
inc
out
arpl
mov
mov
aas
dec
fild
adc
or
add
(bad)
imul
pop
and
scas
dec
mov
push
(bad)
fld
pop
push
aas
retf
push
push
push
add
mov
dec
out
push
push
dec
mov
cmp
(bad)
aas
xchg
popf
jnp
or
out
or
pop
mov
mov
add
iret
dec
inc
mov
push
inc
das
adc
mov
pop
and
cmp
arpl
fwait
inc
pop
dec
jnp
cmp
jg
inc
(bad)
repnz
in
pop
inc
or
add
and
adc
addr16
pusha
adc
lahf
xchg
retf
ja
ret
xchg
dec
mov
pop
rcr
inc
add
add
push
add
daa
je
iret
push
inc
sub
shr
and
push
imul
fbld
lea
inc
dec
xor
cmp
aas
push
out
pop
mov
daa
push
xchg
push
push
pop
push
(bad)
push
push
sbb
xchg
outs
inc
pop
mov
mov
adc
xchg
in
stos
jo
jmp
add
dec
dec
inc
adc
jg
ja
mov
and
popa
mov
aaa
cmps
inc
mov
push
movs
sbb
popa
mov
pusha
dec
repz
add
add
xchg
sub
sub
test
dec
fisttp
add
pop
adc
adc
out
inc
add
dec
xor
inc
sbb
call
ja
pop
sub
lea
push
iret
or
mov
mov
fdiv
mov
push
pop
rol
inc
jb
dec
add
mov
sbb
push
adc
pop
aas
dec
(bad)
adc
out
dec
test
or
sbb
mov
or
fdiv
inc
dec
mov
dec
ja
or
push
out
dec
xchg
sahf
cmps
popa
push
aas
sti
dec
jg
pop
cmp
iret
push
push
movs
sbb
daa
dec
inc
mov
adc
sti
sti
jno
xor
dec
mov
pop
ja
lea
pop
dec
sbb
add
inc
pop
lds
ja
arpl
pop
lahf
inc
and
dec
xchg
pusha
mov
test
push
outs
imul
ja
add
in
inc
stos
mov
jnp
adc
push
jecxz
lahf
scas
inc
sbb
dec
sbb
rol
adc
dec
adc
inc
mov
(bad)
pop
dec
sbb
lahf
inc
xchg
cmp
inc
dec
or
mov
test
push
add
cmp
mov
add
aas
cmc
mov
pop
stos
pop
aaa
adc
add
mov
rol
test
inc
stos
movs
lea
(bad)
mov
or
push
pop
push
xor
lods
out
mov
mov
das
dec
add
xor
iret
xchg
or
mov
pop
aad
popa
push
daa
fwait
push
xchg
pop
mov
add
mov
push
iret
lea
mov
sti
mov
ret
add
xchg
iret
test
cwde
bound
push
arpl
pusha
push
pusha
jecxz
inc
jmp
jo
fdiv
add
dec
mov
aas
push
add
inc
clc
lods
add
pop
dec
sub
sub
push
inc
pop
outs
sub
push
clc
movs
retf
push
out
mov
pop
sbb
bound
xor
scas
out
mov
shr
adc
push
cmps
sbb
jmp
adc
adc
inc
xor
push
add
inc
push
out
sbb
clc
not
dec
push
test
inc
jg
ret
inc
mov
dec
add
mov
or
outs
repz
imul
(bad)
(bad)
(bad)
shr
pop
mov
add
dec
(bad)
test
add
movs
jg
xchg
fadd
xor
inc
jae
pop
(bad)
ds
pop
pop
inc
cmp
inc
dec
shl
push
mov
cmp
and
out
pop
push
fiadd
fs
xchg
jnp
inc
addr16
ja
sub
loop
inc
in
pop
pop
fwait
inc
inc
stos
loopne
mov
inc
lahf
inc
or
dec
xchg
dec
sti
pusha
mov
push
xchg
pop
mov
fwait
xchg
add
dec
mov
inc
mov
(bad)
(bad)
add
push
and
xor
or
dec
mov
ret
ret
mov
pop
lods
jae
dec
dec
push
dec
inc
pop
mov
pop
adc
inc
inc
retf
(bad)
scas
(bad)
push
pop
push
jmp
push
pusha
pop
inc
das
push
dec
mov
(bad)
out
sbb
movs
loopne
jg
sbb
rcl
adc
inc
in
push
push
out
loop
push
sub
pop
dec
add
adc
and
sub
push
pop
or
mov
cmp
add
pusha
add
inc
add
sub
add
cmps
daa
mov
dec
mov
add
adc
mov
cmp
pop
aas
sbb
ficomp
or
sub
cmps
outs
popa
sub
aaa
inc
dec
lods
shr
push
push
addr16
dec
mov
push
test
mov
add
inc
outs
ins
push
or
sbb
mov
dec
daa
das
push
in
lds
or
ins
les
dec
xor
and
push
xchg
dec
bound
dec
movs
fdivr
xchg
and
mov
add
sbb
add
ror
(bad)
push
fisttp
out
pop
sbb
test
inc
outs
(bad)
fisttp
ins
inc
mov
rcl
xchg
push
inc
push
or
mov
add
sbb
add
jmp
inc
pusha
mov
addr16
add
and
aaa
pop
push
arpl
push
test
(bad)
daa
mov
sub
nop
fdivr
mov
dec
dec
cwde
pop
and
dec
adc
or
push
jnp
xchg
pusha
mov
imul
sub
cmps
push
adc
das
cmps
loop
add
repz
add
xor
inc
inc
das
mov
add
aaa
je
add
js
rol
sub
push
mov
add
mov
and
xlat
lahf
inc
sbb
stos
dec
addr16
inc
xchg
xchg
das
sbb
mov
cmps
pop
dec
push
jmp
xchg
inc
and
inc
xchg
add
jne
pop
jmp
dec
dec
push
pop
test
pop
stos
inc
outs
xchg
fsub
push
push
push
js
mov
push
jnp
inc
jno
xchg
dec
dec
inc
ret
mov
dec
mov
dec
cmovg
push
ja
pusha
inc
lock
push
push
ja
outs
push
or
das
inc
dec
pop
adc
bound
add
(bad)
aas
inc
add
dec
pop
mov
pop
ror
push
dec
and
test
sti
dec
adc
add
push
mov
ret
(bad)
mov
jl
or
cmps
push
add
add
mov
inc
push
or
inc
nop
fmul
adc
mov
adc
add
push
sbb
and
pop
aam
dec
stos
inc
mov
jmp
push
inc
adc
repz
mov
inc
inc
push
add
adc
pop
das
mov
adc
es
das
les
add
mov
mov
or
add
push
shl
fistp
jnp
das
cwde
shl
das
call
(bad)
addr16
repz
xor
aas
das
xchg
xor
fistp
jnp
aas
das
int3
add
comiss
or
es
outs
idiv
das
(bad)
push
mov
mov
das
std
mov
es
das
enter
scas
das
enter
ja
in
es
das
cwde
push
add
loopne
es
mov
leave
and
add
push
and
iret
(bad)
in
popf
das
test
push
(bad)
out
push
sbb
mov
add
retf
mov
out
not
pop
retf
add
test
es
clc
mov
inc
es
das
retf
sbb
das
sbb
mov
pop
add
stos
adc
pop
les
add
leave
push
(bad)
scas
dec
cmp
cdq
add
sub
or
or
and
test
push
sub
adc
rcr
inc
xchg
or
rol
jb
scas
xchg
pusha
test
ret
add
push
sub
push
dec
sbb
ins
lds
dec
fstp
ffreep
cmp
or
or
fild
add
xchg
fiadd
cwde
dec
ja
adc
or
add
ss
es
fild
aad
xlat
jnp
xor
sbb
(bad)
call
aam
(bad)
push
add
pop
dec
xchg
inc
(bad)
push
xor
or
ss
dec
out
or
mov
(bad)
outs
inc
lea
mov
out
test
inc
or
(bad)
outs
aas
mov
xor
ja
out
or
and
cmp
rcl
push
inc
cwde
xor
fist
sbb
push
mov
test
pusha
inc
cmps
cmp
and
and
jo
arpl
lahf
jo
xchg
out
dec
add
mov
jmp
pop
xchg
outs
pop
test
(bad)
mov
inc
(bad)
movs
ss
inc
cmovbe
ins
and
or
xor
aaa
ss
test
outs
call
sbb
and
or
and
or
mov
adc
and
cmp
fwait
jp
pop
mov
rol
dec
add
cmp
cmp
pop
jbe
lds
aaa
inc
mov
jae
imul
jae
push
(bad)
gs
imul
(bad)
mov
(bad)
or
test
arpl
ret
xchg
adc
cmp
sbb
arpl
push
or
add
mov
jae
aaa
dec
bound
add
add
(bad)
or
mov
adc
pop
pop
add
mov
or
fist
adc
mov
ins
push
mov
mov
sbb
movs
xor
rol
bound
add
js
pop
and
xor
hlt
mov
mov
push
imul
test
adc
ror
xor
aaa
je
lods
and
xlat
in
mov
adc
nop
sub
xchg
pop
add
ret
adc
push
dec
in
(bad)
movs
add
cmp
nop
daa
enter
mov
jmp
loopne
xor
jae
cs
pop
dec
inc
ins
inc
mov
gs
ins
sub
lds
cs
ins
push
adc
inc
add
iret
adc
(bad)
ror
sub
lods
or
shr
push
pop
ds
and
(bad)
or
inc
and
cmovb
fist
stos
out
and
xor
stos
(bad)
rol
out
and
inc
into
jo
shl
jle
add
jb
outs
mov
je
(bad)
push
scas
sbb
adc
loop
mov
push
out
mov
or
xchg
sbb
dec
pop
clc
scas
mov
movs
adc
lods
fnstcw
aas
mov
loope
das
dec
out
aaa
cmp
mov
xchg
scas
mov
das
rol
daa
pop
sar
and
or
mov
imul
cmps
or
sbb
dec
(bad)
push
dec
in
aaa
push
bound
inc
xchg
xchg
not
mov
movs
xchg
add
mov
pop
lea
push
(bad)
popa
xchg
add
inc
je
inc
push
imul
ins
dec
jae
xor
push
sub
dec
(bad)
push
cmp
push
aas
outs
jp
cmp
jb
jg
add
adc
adc
sub
mov
pop
lds
not
push
pop
push
das
push
push
int
fimul
gs
fild
loope
fld
jbe
gs
inc
inc
daa
add
je
or
sub
adc
arpl
in
pusha
daa
add
mov
cmp
add
sbb
fs
dec
popa
adc
adc
and
das
xchg
ja
or
inc
jnp
test
outs
inc
das
shl
xchg
push
das
push
jnp
aaa
mov
popa
(bad)
pop
pop
pop
mov
cli
arpl
or
xchg
xchg
(bad)
dec
sbb
(bad)
sub
adc
cmp
adc
push
xchg
sbb
out
adc
adc
or
xchg
cwde
icebp
add
mov
add
dec
iret
cs
test
and
mov
popa
jb
jb
push
pop
jo
popa
adc
pop
fidiv
xchg
push
dec
push
dec
dec
and
and
cmp
push
jne
sub
je
jle
stc
or
push
mov
je
push
ins
cmp
mov
les
mov
fwait
das
ja
ins
fstp
push
push
push
ins
jae
inc
jne
daa
test
pop
outs
dec
jne
push
jb
cmp
jae
cs
inc
loop
imul
mov
xor
retf
cs
cmp
inc
push
push
cmp
ins
arpl
stc
pop
pop
scas
gs
mov
ja
push
push
jns
xchg
fs
mov
jo
dec
mov
test
je
push
jbe
hlt
jae
pop
dec
outs
fs
sbb
out
cmp
mov
ins
xlat
das
jae
in
ret
jmp
lahf
int3
pop
in
or
inc
js
bound
jle
mov
and
outs
inc
ins
fs
into
ret
mov
pusha
and
int3
movs
sbb
inc
mov
inc
cmp
adc
fs
inc
adc
push
push
or
scas
sub
aas
mov
xlat
mov
pop
or
mov
mov
or
movhps
sbb
fdivr
lahf
and
inc
rcl
das
xchg
or
jb
inc
and
xor
lock
lds
pshufw
add
or
bound
pop
repnz
jbe
loopne
adc
ja
das
pop
adc
out
sbb
dec
and
nop
das
pop
sub
mov
cmp
sbb
mov
jmp
das
inc
pusha
adc
adc
or
in
add
iret
or
rcl
xor
and
or
jl
add
(bad)
cs
cs
test
cmp
add
mov
in
retf
test
xor
adc
mov
(bad)
pop
sbb
adc
pop
cs
and
or
pusha
aas
sub
lsl
iret
test
add
shl
mov
das
mov
add
outs
cmp
sbb
add
call
test
push
and
aad
or
aaa
mov
add
add
das
sbb
add
out
out
push
shl
test
add
add
xor
es
das
inc
cmps
sub
inc
inc
fist
dec
or
std
daa
movs
fwait
mov
sub
or
leave
or
iret
nop
psubusb
inc
adc
das
inc
shl
rol
iret
(bad)
movs
pop
bound
jp
mov
or
adc
sbb
pop
loop
sbb
ja
adc
icebp
gs
push
xlat
inc
dec
mov
test
inc
sbb
bound
enter
arpl
mov
arpl
or
enter
mov
pop
xor
and
push
xchg
jp
add
jnp
lods
jo
outs
gs
lds
mov
xchg
gs
xor
adc
and
pop
pop
add
sti
add
daa
ret
daa
(bad)
add
fild
xchg
push
xchg
scas
adc
sti
xor
popa
mov
and
cmp
nop
fdiv
or
adc
and
mov
sbb
jo
jmp
cmp
mov
(bad)
and
or
outs
push
jo
js
sbb
inc
push
dec
outs
fs
sub
add
int3
add
add
or
inc
pop
adc
rol
add
popa
push
push
sti
test
test
jns
call
or
dec
gs
mov
push
(bad)
hlt
mov
mov
pusha
ror
add
pop
xchg
inc
jb
add
jb
jae
push
in
aam
ror
push
ret
jmp
pop
icebp
and
rol
daa
ss
push
outs
push
mov
sbb
or
and
pop
and
(bad)
repnz
int
adc
pop
cmps
les
push
mov
ss
add
or
push
jbe
loopne
pop
dec
sub
je
push
add
outs
mov
loopne
push
ins
xabort
icebp
add
mov
ins
es
imul
adc
or
sub
adc
aaa
push
add
popa
enter
sub
cmps
cs
add
jmp
outs
push
push
cmp
jmp
jl
push
sti
push
ins
add
push
jmp
inc
sbb
enter
ds
or
inc
jge
out
outs
cwde
cmp
fdivr
inc
or
or
lock
dec
scas
daa
mov
es
imul
sbb
(bad)
test
mov
adc
adc
mov
das
inc
mov
inc
dec
or
aas
pop
xchg
inc
fld
(bad)
push
xchg
(bad)
xor
lea
addr16
(bad)
inc
neg
ins
daa
adc
mov
sbb
fadd
fcomp
out
mov
inc
outs
mov
mov
jle
scas
or
jmp
push
push
sbb
and
ror
lahf
xchg
cmp
mov
push
jle
sahf
jo
sbb
std
sub
inc
dec
dec
inc
and
jp
daa
fstp
add
ins
cmp
pop
push
imul
push
(bad)
inc
std
push
je
dec
pop
mov
pop
add
and
es
outs
xchg
pop
pop
push
jo
jle
pop
cmp
ret
popf
lds
sbb
cmp
mov
les
pop
jne
add
sub
outs
adc
lods
js
dec
xchg
bound
pop
test
movs
in
pusha
ret
jo
pop
addr16
fwait
mov
dec
scas
imul
jns
dec
movs
jbe
push
jb
das
or
iret
jge
gs
jge
dec
inc
ins
daa
jmp
xor
ret
cmp
mov
jb
sahf
dec
sbb
aaa
xchg
and
pop
lahf
jg
jnp
mov
inc
push
outs
ins
inc
sub
push
mul
aam
rcl
inc
cmps
dec
pop
push
js
xor
jg
or
fs
and
outs
les
dec
adc
outs
adc
adc
push
imul
cmp
pop
cmp
push
jno
mov
enter
in
outs
push
stos
mov
ins
in
sbb
sub
fwait
or
jo
dec
pop
push
push
dec
push
xadd
mov
and
outs
(bad)
jmp
sub
popa
mov
sub
add
mov
stos
add
cmp
push
mov
mov
or
mov
or
mov
ja
lock
or
outs
je
and
pop
imul
nop
sbb
or
adc
add
pusha
daa
gs
jg
inc
loopne
inc
jmp
or
mov
ja
inc
push
pop
push
bound
or
dec
inc
gs
mov
and
sbb
mov
pusha
adc
das
add
and
xor
(bad)
inc
in
or
cmp
hlt
xchg
mov
cmp
cwde
inc
and
test
xor
mov
jae
xor
out
test
lock
fdiv
jbe
daa
or
mov
lea
pop
jl
xchg
ja
jl
adc
popf
iret
inc
mov
add
cmp
imul
add
inc
push
mov
inc
dec
iret
dec
imul
add
adc
imul
sbb
mov
inc
lahf
sbb
addr16
mov
add
daa
push
lock
mov
call
and
and
enter
pop
jo
push
sbb
push
mov
rcl
ins
popa
jns
add
pusha
popf
cwde
jae
push
adc
cmp
adc
std
mov
movs
sbb
daa
js
pop
adc
dec
sub
xacquire
jb
ins
jge
mov
sti
inc
add
or
pop
outs
test
std
cmp
cmps
iret
shr
inc
or
adc
outs
mov
xchg
push
mov
and
ins
out
xchg
xor
xor
xor
js
dec
cmp
(bad)
cmp
cmp
cmp
cmp
jbe
inc
cmp
jle
cs
pop
aas
inc
inc
in
cmp
inc
jle
lock
push
inc
jmp
fidivr
inc
jbe
push
inc
outs
inc
inc
and
adc
push
out
daa
leave
shl
push
sub
adc
ins
sub
adc
data16
dec
dec
cdq
lock
and
addr16
add
pop
outs
lahf
pop
inc
data16
in
xchg
dec
popf
and
fs
pop
test
ss
mov
cdq
leave
sar
mov
jns
aaa
shr
ins
scas
jae
cmp
cmp
push
pop
les
cmpxchg
int3
xlat
jmp
adc
das
jl
pop
jo
repz
jle
cmp
and
mov
or
mov
inc
jnp
push
inc
loop
popa
or
xchg
fs
shr
sar
or
dec
add
push
inc
sub
imul
xor
loope
cmp
add
jne
data16
ja
arpl
jae
sub
nop
xlat
and
push
popa
popa
not
xchg
push
sub
jnp
jae
es
je
cmp
cdq
and
out
movs
mov
mov
dec
pushf
sub
sbb
cs
out
add
sub
inc
push
adc
dec
pop
cmp
push
iret
cmovae
add
daa
pop
jne
add
(bad)
add
adc
cmp
jo
jmp
or
sbb
fcom
or
dec
xor
dec
dec
sub
mov
xor
mov
and
cmp
ret
sub
ja
adc
mov
and
push
xor
mov
aaa
(bad)
mov
push
jg
xor
inc
out
xor
js
mov
into
push
cs
outs
and
pop
add
clc
jo
das
pop
and
enter
enter
xor
pop
and
push
aas
or
mov
pop
in
out
bound
cs
icebp
mov
add
push
push
cmp
pusha
adc
das
cmp
add
pop
add
add
pop
nop
and
sti
repnz
das
das
or
pop
pusha
adc
cmp
and
adc
add
and
das
sub
add
cmp
pop
jo
pushf
loopne
mov
(bad)
(bad)
loopne
sub
add
fadd
das
call
ins
cs
pop
sub
add
push
add
ret
pop
pop
dec
ins
jo
add
jo
rep
mov
loopne
and
sbb
bound
imul
in
sbb
int
imul
push
add
popf
push
outs
fst
outs
ja
cmps
loope
xor
pusha
lods
int3
add
test
daa
inc
sub
(bad)
cmps
xchg
inc
sub
add
mov
outs
pop
cmp
ficomp
inc
xchg
xor
rcr
xchg
ins
pop
xor
inc
sub
mov
outs
pop
cli
mov
adc
mov
jmp
fs
add
dec
inc
adc
mov
pop
jae
push
sub
dec
or
jmp
daa
dec
add
call
and
mov
sbb
add
(bad)
jmp
lock
popa
cmp
or
xchg
jno
dec
sub
inc
fs
xchg
or
inc
dec
or
clc
push
add
call
sub
inc
cmp
(bad)
sbb
and
outs
cmp
sbb
daa
adc
push
inc
mov
bound
test
lock
pop
adc
icebp
lods
or
arpl
stos
das
jmp
arpl
call
jbe
push
add
mov
inc
or
cs
lock
and
ret
jb
scas
mov
add
mov
inc
ss
jb
out
fnsave
imul
outs
ins
push
push
push
ins
mov
xchg
jo
js
ins
outs
outs
xchg
pop
stos
(bad)
jnp
or
outs
pop
outs
xchg
jo
into
mov
jno
jno
jno
jb
pop
je
or
daa
pop
add
xor
ja
das
pop
iret
push
mov
add
sbb
and
aaa
or
(bad)
pop
add
push
in
and
pop
add
add
push
xchg
mov
outs
movs
pop
jg
js
call
jge
mov
xor
adc
add
jo
mov
ins
push
ins
xor
push
ss
cmps
es
add
add
inc
test
mov
mov
into
imul
mov
xchg
nop
rcl
pop
sub
sub
fsub
xchg
mov
sub
cdq
pusha
xor
(bad)
lds
(bad)
adc
stos
test
add
test
jbe
mov
xchg
icebp
popa
jmp
push
aaa
outs
sub
xor
sub
push
and
lahf
pop
popa
es
xchg
or
aas
pop
popa
add
sbb
jnp
aas
dec
or
fs
or
or
lods
mov
push
retf
stos
dec
mov
jae
and
or
inc
inc
and
or
fild
sysenter
ds
mov
ja
cmovg
adc
cs
pxor
jb
push
adc
or
jo
mov
lock
inc
mov
adc
cmp
and
jg
push
popf
sbb
test
cs
maxps
iret
dec
sahf
out
pop
inc
lock
pusha
test
cmps
cmp
das
popa
xor
fstp
das
arpl
test
sbb
push
mov
iret
cmp
mov
adc
mov
dec
or
mov
push
inc
jb
and
cmps
rcr
js
adc
mov
dec
je
mov
test
into
rcl
push
js
addr16
fld
(bad)
(bad)
lea
bound
sbb
dec
popa
outs
inc
mov
sub
inc
lock
adc
sbb
xchg
xchg
sti
sub
jge
pop
dec
sub
inc
das
xchg
mov
jae
inc
bound
or
enter
jns
test
gs
ret
or
gs
or
cs
cs
je
pop
sub
mov
add
jae
and
or
dec
adc
adc
ja
jne
addr16
sub
or
cmovb
sbb
cwde
or
jne
jg
adc
mov
inc
dec
dec
dec
push
push
in
xor
ja
ja
sbb
push
and
push
cmp
(bad)
sbb
and
gs
call
adc
fwait
dec
ins
jns
or
jb
or
push
aas
or
push
jno
sbb
cmp
outs
mov
je
lea
sub
push
into
inc
and
lods
dec
sub
dec
inc
jecxz
xchg
haddps
nop
push
pop
cld
loope
call
push
xchg
pop
mov
imul
cli
lock
std
nop
mov
fs
addr16
mov
clc
or
js
cmp
aaa
daa
aaa
aam
sbb
ror
jl
push
(bad)
test
rcl
xchg
(bad)
ja
(bad)
call
scas
adc
call
cmp
adc
std
popa
jmp
adc
mov
cmp
into
push
ss
in
lahf
sbb
and
and
push
js
bound
or
add
setno
adc
jnp
add
mov
push
ficom
lock
push
mov
out
xlat
push
xor
add
ja
fs
pop
xchg
push
sbb
mov
jle
mov
jnp
(bad)
push
jo
adc
add
push
push
data16
pop
ds
es
push
pop
mov
out
mov
inc
pop
push
popa
pop
push
bound
xor
pop
dec
pusha
outs
pop
pop
mov
(bad)
pop
or
mov
bound
bound
bound
lock
imul
push
push
pushf
push
mov
push
fldenv
cmps
push
fs
(bad)
rcl
pushw
imul
mov
nop
das
outs
push
les
pop
scas
push
retf
(bad)
retf
inc
mov
shl
xchg
retf
xchg
int
out
loopne
jle
cs
iretw
push
rcl
mov
popa
fiadd
or
adc
aam
(bad)
lds
test
mov
or
mov
mov
add
dec
outs
push
add
add
dec
(bad)
ja
pop
add
sub
loope
pop
shl
adc
or
hlt
fisubr
or
cwde
dec
outs
mov
shl
call
push
inc
add
imul
dec
outs
data16
inc
push
outs
outs
(bad)
and
sub
xor
sub
rol
ja
data16
fild
sub
aas
push
add
fwait
lock
(bad)
xchg
jo
js
xor
imul
ds
pop
iret
rol
movs
push
mov
mov
addr16
mov
sbb
lods
in
ja
movs
hlt
adc
add
push
cli
nop
adc
das
mov
mov
cmp
push
ja
push
jae
bound
mov
ins
bound
mov
cmp
add
add
dec
add
mov
shr
pop
fisttp
aad
adc
aad
push
or
pop
adc
or
push
mov
hlt
pusha
loopne
(bad)
mov
sbb
add
outs
dec
sbb
mov
xchg
es
cmps
vpunpcklwd
lock
push
add
or
pop
add
pmullw
sub
daa
out
and
dec
dec
push
adc
outs
xchg
sub
lods
mov
enter
shl
add
loope
mov
ret
cmp
rdpmc
imul
das
or
scas
ds
mov
gs
idiv
xor
jne
loope
bound
loopne
out
loopne
outs
stos
in
and
loopne
int
stos
ins
mov
stos
int
stc
or
dec
inc
dec
mov
dec
dec
dec
pop
add
inc
dec
add
pop
adc
cdq
cmps
dec
dec
inc
inc
and
test
jecxz
cmps
inc
inc
dec
dec
inc
xor
push
das
sbb
push
push
push
inc
outs
or
mov
push
dec
push
xor
pop
inc
inc
test
(bad)
xchg
sbb
pop
aaa
sub
popf
data16
jae
adc
add
pop
iret
push
add
imul
inc
test
add
add
pop
mov
or
fisttp
add
xor
ja
add
daa
inc
add
xchg
add
push
sbb
lahf
and
add
add
movs
sub
xchg
add
adc
mov
adc
inc
rcr
and
inc
pusha
xchg
mov
inc
jns
repz
sub
mov
pop
imul
outs
mov
or
inc
hlt
adc
mov
adc
and
adc
xor
fs
mov
jne
cvtdq2ps
rol
sub
lods
and
nop
pop
inc
bound
xchg
jecxz
pop
adc
and
push
pop
or
ja
bound
lahf
outs
jbe
ret
rol
ins
pop
adc
push
lds
ret
fcomp
(bad)
arpl
or
push
inc
sbb
aas
adc
push
pop
add
sbb
pop
xor
cs
push
pusha
pop
stos
daa
loopne
inc
mov
iret
stos
rcl
add
xchg
sub
cmp
movs
pusha
mov
int
sbb
push
adc
add
add
dec
sbb
sub
and
inc
and
enter
sbb
add
ins
fmul
shr
pop
movups
das
mov
or
and
loopne
add
jno
stc
add
xor
add
mov
or
nop
int
xor
mov
jle
or
dec
dec
push
xchg
cmp
xor
and
mov
fsubr
outs
add
rcr
mov
xchg
popa
and
rcl
out
mov
das
or
nop
fild
or
arpl
or
or
and
outs
jns
or
test
je
arpl
(bad)
cmp
and
ret
push
ins
ins
xchg
ror
sbb
mov
push
fisttp
push
inc
fist
and
pushf
cwde
mov
and
jb
sub
and
pop
mov
sub
rol
mov
out
push
or
jae
or
pop
jmpw
lahf
jg
(bad)
stos
or
repz
movs
shl
fbld
mulps
push
addr16
das
push
sub
imul
xor
aaa
push
outs
addr16
loopne
test
adc
jmp
and
popa
aad
sbb
test
and
dec
jae
in
mov
popa
outs
cs
mov
pop
or
inc
arpl
or
je
arpl
rcl
jmp
xor
mov
push
sbb
mov
inc
inc
pop
mov
es
jle
fstp
inc
mov
ror
aas
ss
xchg
ins
popa
je
push
scas
add
jp
(bad)
and
inc
add
ins
in
jmp
and
test
js
shl
pop
fldcw
ds
mov
sbb
cwde
mov
pop
or
(bad)
jbe
gs
inc
sbb
mov
lods
push
add
adc
retf
aas
loope
je
bound
jbe
imul
inc
mov
shr
xchg
mov
cmp
jecxz
or
or
adc
adc
inc
mov
adc
sbb
mov
loopne
mov
pop
mul
aam
std
sbb
or
add
add
mov
in
cmovs
mov
add
and
or
jbe
js
data16
sbb
das
and
add
xlat
arpl
sub
jne
push
nop
or
or
or
sar
fwait
addr16
adc
sbb
sbb
mov
adc
loopne
addr16
shl
and
and
pop
pusha
daa
xlat
jle
xlat
push
cmps
xchg
lea
sub
fsub
mov
sub
pop
sub
inc
add
add
push
and
fs
daa
jle
sub
push
adc
inc
inc
lahf
outs
sub
mov
jp
or
shl
pop
sub
adc
movs
jg
and
jns
arpl
and
inc
retf
and
bound
shr
add
fs
push
ret
ins
ins
out
mov
ror
inc
cmp
ss
push
or
inc
(bad)
ret
das
(bad)
push
(bad)
pop
mov
pop
enter
push
inc
or
sub
adc
dec
popf
or
and
mov
xchg
in
adc
pop
and
xchg
jg
scas
push
dec
fcomp
or
fs
xor
dec
inc
add
push
push
pop
xor
or
and
pop
xchg
add
push
inc
test
iret
mov
fs
lahf
mov
aas
sbb
ja
mov
sub
das
(bad)
add
sub
ss
outs
jae
out
ins
shl
push
xchg
or
xchg
xchg
nop
dec
sbb
mov
cmp
jge
sub
cmovb
cmp
sahf
lock
or
jne
push
inc
fs
daa
dec
inc
inc
lock
inc
inc
js
adc
or
lods
or
mov
adc
or
push
xor
ds
sub
add
cmp
push
out
mov
scas
nop
imul
or
arpl
and
and
fcmovb
outs
cld
aaa
in
mov
(bad)
jno
push
sub
sub
ins
adc
inc
push
push
or
sub
xchg
inc
inc
pop
push
push
or
xchg
xor
pop
dec
add
es
ficomp
or
push
ss
push
dec
inc
push
dec
or
ss
push
push
dec
push
mov
ds
int
mov
push
cmp
push
mov
mov
ret
push
scas
add
xchg
push
fistp
je
shl
bound
adc
push
iret
loopne
clc
inc
sbb
scas
rol
ins
jo
pushf
sbb
cmps
data16
or
mov
and
push
aad
push
adc
cmps
sub
mov
xlat
sub
adc
xchg
mov
pop
mov
pcmpgtb
cmp
cs
(bad)
leave
cli
xlat
(bad)
cs
jb
jae
pop
jmp
push
xchg
push
gs
pop
pop
or
pop
(bad)
pop
shr
xor
push
add
cs
outs
or
inc
mov
daa
fsub
cs
sub
cmp
cmp
mov
adc
dec
inc
inc
inc
adc
inc
call
and
pop
dec
adc
sbb
hlt
idiv
inc
push
push
push
dec
and
dec
inc
popa
arpl
mov
pop
daa
push
imul
pop
cmc
cmp
imul
daa
push
jo
mov
imul
ss
sub
or
push
gs
adc
mov
in
imul
push
ficomp
jmp
ins
in
dec
je
arpl
and
pop
push
gs
pop
mov
sbb
dec
jb
fnstsw
inc
jae
adc
ja
push
sbb
(bad)
xchg
push
adc
(bad)
lock
cs
jae
add
retf
imul
mov
fcmovu
scas
inc
jns
daa
fst
mov
fsub
pop
dec
push
dec
inc
push
and
pop
cmp
and
mov
dec
pop
or
jae
xchg
dec
push
mov
ss
jns
xchg
jg
in
inc
lea
adc
pop
rcr
dec
inc
xchg
ins
test
push
adc
adc
fwait
push
shl
xor
inc
jae
inc
mov
sub
jb
popa
jns
xchg
stc
scas
sahf
call
push
xchg
nop
pop
les
loopne
(bad)
jb
inc
push
jecxz
adc
cmps
inc
and
ins
pop
jae
test
loope
add
jno
or
pop
add
rol
aas
mul
mov
mov
add
push
mov
movs
add
adc
jecxz
mov
push
aam
out
xchg
imul
or
sub
ja
push
lods
data16
sbb
shl
jbe
sbb
xor
and
ret
or
mov
(bad)
adc
xchg
pop
(bad)
pop
loopne
sub
inc
push
push
pop
sbb
jae
cmps
test
mov
add
addr16
aam
and
fbld
adc
cdq
imul
call
mov
rol
sbb
push
fild
ja
aam
dec
jae
or
test
and
mov
sbb
add
ja
mov
dec
ret
jmp
add
pop
add
dec
lock
mov
test
add
daa
aaa
adc
or
lock
jo
push
mov
sbb
and
mov
sbb
das
cmp
jo
test
aaa
cmps
dec
or
imul
dec
ret
add
xor
adc
cmp
repz
test
mov
mov
push
nop
adc
in
adc
aaa
xor
inc
push
push
or
test
aas
fsubr
fs
sbb
or
pop
movs
bound
stos
test
jmp
jl
jmp
mov
adc
daa
es
push
sar
cmp
ret
push
and
ja
add
nop
mov
xchg
outs
jae
mov
pop
test
push
adc
inc
out
aam
aaa
jb
and
in
xor
bound
xchg
cs
pop
adc
and
jae
mov
or
outs
imul
sbb
xor
jo
and
test
dec
add
add
dec
and
je
adc
test
je
inc
and
add
cmps
push
popa
ret
out
cmp
test
fadd
xchg
or
loopne
repnz
je
test
dec
movs
fiadd
and
and
xor
sbb
mov
sub
jno
inc
cs
xlat
icebp
out
sub
xor
or
sbb
jle
ds
jle
push
mov
push
jecxz
push
es
pop
inc
popf
repnz
jmp
jne
jle
cs
scas
in
and
es
rol
jg
adc
push
mov
mov
arpl
mov
cmp
mov
jmp
add
push
xchg
xchg
xchg
jle
adc
dec
hlt
push
out
and
sbb
adc
mov
pop
repz
test
add
add
add
xor
call
stc
cmp
adc
mov
out
and
push
stc
mov
gs
cmps
xlat
das
(bad)
jp
(bad)
or
push
sti
mov
std
inc
pop
or
pusha
push
adc
stos
pusha
or
cld
nop
outs
push
push
dec
pop
push
inc
xor
mov
or
and
nop
sub
add
mov
and
ss
(bad)
push
mov
mov
mov
jl
outs
sub
sub
pop
and
inc
dec
repnz
push
outs
loopne
xor
outs
outs
lock
mov
sbb
push
pop
xchg
push
(bad)
jmp
mov
lahf
jg
pusha
out
ins
pop
stos
loope
into
xor
jl
cmps
pop
or
mov
ja
or
push
inc
mov
aas
and
or
xchg
pop
out
or
dec
or
lock
adc
mov
neg
shr
es
nop
push
sbb
ficom
push
adc
sbb
pop
outs
pop
pop
adc
or
sbb
cmovo
les
jns
dec
lods
sbb
xor
aaa
jo
scas
jne
pop
cwde
add
addr16
and
arpl
or
or
sub
mov
xor
pop
arpl
push
add
pop
push
movs
neg
mov
push
rol
ja
stos
outs
or
cmps
scas
popf
jno
push
pusha
and
add
push
cmp
cli
xchg
je
push
imul
pop
add
leave
inc
push
inc
cmp
scas
and
add
and
gs
mov
and
ja
icebp
xchg
loopne
pop
inc
imul
jecxz
out
inc
outs
imul
push
pusha
mov
cs
shl
mov
pop
ror
or
push
push
pop
push
inc
aam
jl
iret
repz
push
mov
pop
cmp
repz
inc
sub
adc
jns
loopne
adc
fdiv
jle
test
dec
xchg
sbb
pop
xlat
sub
inc
repz
jae
frstor
add
pop
pop
inc
add
push
(bad)
gs
sbb
and
rcr
(bad)
inc
add
imul
inc
iret
dec
popa
daa
or
punpckhwd
jp
arpl
mov
push
push
pop
or
inc
inc
addr16
xor
xchg
cs
add
dec
add
icebp
leave
add
add
ss
aas
dec
daa
imul
push
push
inc
pop
or
aam
pop
inc
jae
fisttp
call
add
enter
xchg
bound
cmp
add
loop
pop
pop
dec
scas
pop
inc
adc
or
xchg
or
or
mov
add
popa
xor
pop
pop
out
ror
js
jge
push
add
jne
js
push
mov
(bad)
nop
retf
mov
or
outs
test
mov
cmp
cmp
(bad)
and
pop
or
inc
push
sub
outs
clc
xor
fisttp
add
adc
dec
sahf
xor
mov
inc
dec
sbb
das
fstp
dec
and
dec
mov
add
cmovg
lahf
inc
aad
movs
xchg
aad
mov
cmp
fs
popa
pop
add
mov
in
gs
mov
outs
mov
ins
jns
popa
fs
xchg
inc
pop
aas
push
dec
push
inc
repnz
jns
sub
adc
add
pop
sub
shl
cmps
sub
cmp
mov
and
xor
jae
inc
mov
popa
test
(bad)
xor
cmps
dec
xor
push
add
sbb
sub
inc
sub
popf
fstp
pusha
movs
push
jno
imul
push
or
pop
rol
sub
outs
pop
outs
add
inc
mov
nop
retf
js
ins
jmp
jg
test
bound
lods
imul
xchg
add
jo
scas
push
push
mov
push
jns
pop
mov
mov
jae
jns
pusha
add
bound
out
pushf
cwde
or
jae
mov
loop
lds
or
scas
and
imul
pop
fwait
jg
adc
pusha
adc
pop
out
outs
xor
cmps
jne
icebp
sub
inc
mov
or
jg
mov
mov
fs
sub
mov
push
jp
mov
inc
pop
out
add
xchg
iret
and
sub
in
mov
push
in
js
xchg
push
inc
push
iret
into
pop
jo
test
and
cdq
cwde
addr16
add
leave
push
mov
outs
jne
or
or
loopne
shl
scas
ins
sahf
jmp
jbe
fwait
(bad)
lods
xlat
or
or
push
mov
sub
or
sbb
adc
adc
fcmovnu
pop
pushf
jbe
sub
pop
inc
push
pusha
mov
je
inc
xor
or
sbb
ffreep
pushf
pop
inc
jb
fisttp
jo
and
and
ror
adc
aaa
xchg
xchg
arpl
inc
movs
cmps
and
add
and
adc
out
jnp
and
mov
sbb
jl
ja
mov
jp
jp
out
test
mov
out
or
push
add
and
push
adc
popf
shr
pop
sbb
test
jmp
mov
cli
adc
jo
xchg
outs
popa
pop
in
jnp
push
jbe
xchg
xchg
jp
pop
adc
test
and
push
fiadd
enterw
mov
push
mov
mov
mov
mov
aam
ins
ins
inc
mov
nop
mov
inc
xchg
data16
or
pusha
mov
adc
adc
dec
xor
push
fwait
out
pushf
xchg
xchg
add
fwait
rol
loope
cmps
jmp
sub
jno
jo
push
add
je
dec
test
jne
pusha
jbe
test
aaa
fwait
mov
pop
nop
das
iret
popf
nop
mul
clc
dec
bound
call
lods
mov
gs
cmp
inc
mov
cdq
mov
add
out
(bad)
mov
mov
fdivr
mov
pushf
cmp
int
icebp
xchg
inc
les
inc
inc
inc
add
mov
and
dec
je
sbb
cmp
push
ds
sar
fisttp
sbb
add
or
xor
ficomp
or
or
imul
popa
inc
fldcw
add
or
jl
and
inc
add
mov
lea
inc
inc
addr16
inc
fsub
scas
repz
inc
add
xchg
dec
inc
ja
jb
pop
test
inc
push
dec
fcomp
cmp
out
inc
inc
pop
inc
inc
push
inc
iret
or
and
inc
push
mov
pop
mov
cmps
xor
in
popa
jmp
push
daa
pop
dec
push
and
push
inc
xchg
push
dec
inc
pop
dec
push
dec
push
ins
jae
fidiv
push
jo
push
push
daa
mov
aaa
lods
int3
inc
dec
dec
mov
or
daa
pop
add
jge
push
inc
mov
pop
push
pop
dec
or
retf
adc
daa
call
push
pop
dec
stos
enter
inc
add
mov
pusha
aaa
es
inc
push
inc
ja
adc
push
cmp
inc
lock
outs
dec
inc
dec
push
iret
(bad)
das
dec
and
inc
not
rcr
push
push
xchg
cmps
pop
pop
ret
(bad)
aas
sub
dec
inc
dec
push
jne
or
cmp
mov
fadd
iret
push
outs
sub
cdq
(bad)
add
inc
cli
inc
dec
xor
(bad)
dec
sbb
ins
adc
das
inc
inc
iret
xchg
lods
xchg
aas
inc
fcom
add
or
lea
inc
pop
loop
xchg
or
push
push
lahf
pop
push
cmp
int
pop
inc
inc
dec
das
push
dec
mov
sbb
push
outs
sbb
or
dec
xor
daa
pop
mov
mov
push
push
test
(bad)
and
pop
dec
inc
push
aas
daa
dec
pusha
icebp
inc
xchg
and
inc
dec
lea
cdq
inc
inc
push
js
shl
inc
daa
test
out
sub
and
sbb
mov
dec
(bad)
adc
inc
aaa
push
ins
xor
inc
outs
dec
pop
int3
int3
push
xor
push
mov
ficom
and
push
je
mov
inc
pop
out
mov
push
pop
(bad)
psrlw
push
inc
push
push
lahf
ins
xchg
ss
or
inc
inc
rcl
push
mov
pop
pop
scas
push
jns
arpl
push
cmps
lock
pop
mov
test
dec
inc
pop
sub
dec
pop
pop
lock
xor
pop
xlat
jo
ret
fsubr
dec
outs
outs
rol
push
add
iret
push
inc
test
call
fmul
daa
push
push
pop
scas
xlat
sub
dec
cs
push
dec
aad
cs
dec
mov
add
inc
push
scas
jo
pop
push
sub
stos
push
movs
inc
dec
dec
aas
add
push
pop
aaa
stos
iret
xor
mov
es
dec
add
das
jne
inc
movs
or
push
pop
push
lods
add
mov
dec
dec
adc
push
dec
inc
push
push
outs
push
jbe
xor
xor
fidiv
std
shl
xchg
xchg
imul
inc
inc
xchg
ins
mov
pop
daa
push
push
inc
lds
in
mov
push
outs
push
push
inc
scas
in
dec
dec
test
in
stos
test
jne
cmp
paddsw
dec
xchg
ds
pop
repz
aaa
fadd
ret
pop
inc
loopne
push
dec
rcl
cmc
aas
cmc
sub
push
mov
or
and
pop
adc
push
mov
mov
push
pop
pop
stos
add
fs
adc
xor
outs
add
xchg
in
outs
sbb
sbb
add
das
or
jne
fldcw
push
iret
and
jle
inc
dec
inc
test
sbb
pop
dec
inc
mov
or
inc
popf
add
mov
lods
fist
inc
test
imul
icebp
push
adc
daa
inc
mov
popf
inc
push
out
mov
jae
inc
or
stc
daa
lea
adc
pop
add
(bad)
and
add
inc
add
daa
and
or
das
dec
pop
inc
push
pop
xchg
cmp
call
inc
inc
dec
push
pop
dec
push
inc
adc
dec
push
pop
xor
mov
adc
outs
pop
pop
inc
scas
(bad)
push
aaa
xchg
into
inc
dec
das
add
das
mov
fisttp
aaa
fucomip
test
inc
push
dec
daa
push
imul
pop
cmps
or
dec
cmp
das
inc
inc
dec
aaa
inc
jecxz
ret
in
inc
mov
mov
stos
jo
outs
wbinvd
rol
aas
add
add
enter
punpcklbw
pop
add
jb
inc
pop
cmp
sub
sbb
xchg
das
inc
mov
add
jb
enter
adc
adc
lods
adc
repnz
sbb
add
mov
xor
and
leave
in
das
push
call
les
jb
mov
pushf
sbb
sbb
inc
mov
and
jb
enter
and
add
and
jl
in
sub
sub
sub
lods
sub
inc
mov
jl
jo
fs
push
cmp
enter
inc
xor
cmp
add
hlt
test
xchg
xchg
and
xchg
mov
jb
movs
mov
ins
movs
xchg
and
pop
cmps
dec
cmps
xor
stc
repnz
add
add
push
clc
add
inc
mov
add
add
add
xchg
push
mov
adc
sbb
nop
adc
in
xchg
and
push
inc
pop
(bad)
sbb
jb
pop
and
adc
add
add
enter
hlt
add
add
add
add
push
enter
jl
ins
or
cmp
dec
adc
and
and
and
and
and
and
fsub
shl
shr
sub
xor
js
xchg
mov
add
jo
pcmpgtb
pop
add
cmp
push
add
sbb
xchg
and
add
push
lock
or
jb
enter
or
and
sbb
adc
dec
loopne
jb
enter
loop
jecxz
in
mov
push
cld
in
out
out
call
les
add
cmp
jb
inc
jl
dec
ins
bound
pop
arpl
inc
mov
xor
data16
(bad)
push
xchg
outs
adc
in
jnp
retf
and
push
shl
mov
in
mov
das
mov
das
xor
in
in
in
out
jo
scas
dec
sbb
push
sbb
inc
adc
out
in
in
in
xor
dec
sub
das
sbb
(bad)
jle
sbb
fimul
mov
fbld
jg
adc
adc
and
and
xor
add
cmp
fisubr
or
mov
push
pop
or
fsub
dec
retf
fsubr
mov
shl
mov
inc
dec
add
xchg
push
inc
add
sub
pop
pop
mov
push
dec
xor
cwde
fdiv
inc
push
fldl2e
(bad)
push
(bad)
pop
inc
jo
shl
and
add
xor
and
daa
fnstenv
test
mov
imul
add
push
sbb
add
xor
push
adc
(bad)
(bad)
lahf
mov
pop
sar
fld
ins
sbb
cmp
test
sub
popa
adc
das
dec
adc
inc
(bad)
aaa
adc
xor
mov
mov
and
or
sub
push
sub
inc
add
cmp
jne
clc
sub
add
call
(bad)
out
add
mov
adc
add
pop
push
mov
or
(bad)
in
push
push
out
out
jmp
jnp
mov
jmp
lock
push
inc
in
in
adc
xchg
mov
mov
ins
and
frstor
stos
imul
mov
mov
or
sbb
dec
mov
popa
inc
push
mov
jns
cmp
les
sub
in
or
inc
arpl
add
fidiv
xlat
or
test
or
cdq
sub
loop
popf
sbb
or
sub
add
push
push
es
(bad)
dec
daa
fiadd
stos
and
aaa
imul
push
movs
test
mov
add
iret
dec
push
mov
daa
jmp
mov
sbb
and
(bad)
jnp
cmps
adc
add
mov
pusha
or
movs
das
xor
les
add
jmp
xchg
push
xor
mov
sub
jbe
gs
xor
mov
cmps
aaa
mov
pop
xchg
gs
mov
or
xchg
and
pop
pusha
movs
or
push
nop
push
mov
out
jmp
out
inc
jg
adc
(bad)
int3
add
or
mov
jae
jb
jo
mov
call
test
sar
add
inc
ins
loope
pop
data16
pop
sub
call
hlt
adc
fdiv
push
sahf
xor
mov
nop
scas
pop
mov
push
or
push
neg
inc
push
push
push
sbb
dec
pop
adc
and
mov
and
push
sub
inc
rol
sub
inc
fcom
inc
movs
inc
imul
mov
mov
lock
push
sbb
sbb
int3
xchg
ds
sbb
popa
cmp
or
or
aam
or
cs
pxor
jl
xor
das
xor
inc
test
outs
xor
je
je
inc
jno
mov
scas
je
js
cmp
cwde
movs
add
and
sbb
inc
inc
sbb
xchg
bswap
add
enter
pop
ins
and
cmc
push
gs
jbe
and
lods
loope
imul
ds
cmp
jle
add
cs
inc
ja
dec
and
pop
or
loop
iret
ins
je
in
mov
sub
scas
cmp
iret
cmp
cmp
inc
pop
push
and
jae
das
or
ror
inc
cmp
or
sub
fstp
cmp
jne
sub
addr16
inc
inc
addr16
and
jne
or
xchg
add
xor
dec
mov
mov
js
adc
outs
push
mov
rcl
pop
inc
pop
imul
and
ret
jmp
pop
ret
bound
rcl
jge
sub
jecxz
rol
xchg
fild
and
pusha
int3
lahf
sti
xor
or
pop
mov
arpl
pusha
mov
sbb
popa
and
push
or
xchg
addr16
outs
sub
retf
inc
sti
push
sub
xor
adc
ss
addr16
(bad)
aam
push
inc
jnp
push
movs
mov
pop
ja
(bad)
jbe
xor
push
push
outs
mov
push
sub
aaa
enter
aas
dec
outs
and
adc
adc
pop
test
aas
cmp
loope
arpl
inc
xchg
bound
aas
pop
add
add
imul
aas
push
adc
scas
dec
cmp
and
pop
xchg
mov
in
or
rep
ins
fs
int3
clc
sub
push
dec
in
jnp
push
cmps
adc
outs
dec
outs
neg
repz
mov
pusha
aaa
movs
mov
das
rol
and
mov
inc
shr
dec
js
outs
sahf
ja
jge
outs
dec
push
call
mov
lods
adc
dec
fs
or
int3
les
(bad)
sub
add
je
(bad)
test
cmp
outs
adc
enter
or
push
ins
fsubr
outs
add
fsub
aaa
add
les
add
add
sbb
push
fsub
test
xor
movlps
cmp
test
push
shl
sub
or
pusha
add
or
outs
sub
jno
sub
ret
ss
scas
or
push
cmp
mov
out
inc
push
rol
push
test
mov
adc
jb
xchg
jae
pop
pop
add
pop
inc
lsl
mov
prefetch
pop
mov
dec
push
pop
xor
pop
out
pop
inc
shl
mov
jo
data16
loopne
pusha
popa
push
adc
imul
cmp
jae
push
push
ins
jns
sub
sub
push
test
push
outs
sar
fdivr
dec
outs
imul
aaa
mov
out
mov
cmp
inc
ins
and
or
fiadd
dec
test
pop
add
je
test
or
nop
dec
enter
push
(bad)
sbb
or
xor
sub
enter
ds
jo
and
arpl
mov
add
inc
outs
popa
mov
sub
dec
adc
jo
les
pop
fld
xor
ret
gs
add
inc
mov
push
inc
dec
addps
mov
out
inc
loop
adc
adc
call
inc
test
pop
or
ds
sub
cmp
aaa
push
cmps
ins
sbb
mov
and
jmp
and
lds
mov
mov
lds
outs
rol
stos
sahf
lock
or
push
add
ret
sti
pusha
int
shl
inc
inc
and
push
outs
jp
xchg
mov
push
inc
jne
mov
inc
popa
jo
xchg
add
jbe
mov
push
jp
push
fs
dec
mov
dec
push
sbb
or
pop
iret
inc
test
dec
lods
loopne
jmp
movs
adc
mov
xlat
jg
adc
jo
loope
sbb
cmps
xor
outs
adc
je
jb
jae
push
loopne
add
jp
and
pop
adc
push
popf
das
or
mov
dec
(bad)
mov
dec
scas
adc
or
push
nop
pop
outs
jns
push
xor
lds
xchg
adc
das
jo
cmovs
add
out
cs
call
adc
imul
repz
push
rol
cwde
adc
icebp
sub
inc
mov
mov
ins
push
jae
ins
pop
jg
add
sub
sar
je
push
pusha
ret
fbld
sti
and
sbb
imul
daa
xchg
push
adc
neg
sbb
sar
nop
xchg
test
mov
lock
jmp
xchg
push
xchg
ss
jl
jge
mul
fisttp
loopne
mov
inc
pop
mov
xchg
es
xor
push
add
mov
mov
cmp
add
dec
or
mov
test
mov
mov
sbb
into
inc
rcr
jo
fist
sub
sub
fwait
test
cmp
jo
add
inc
js
adc
push
sub
sub
adc
xchg
sub
push
pushf
xor
ja
pop
nop
dec
mov
ja
xor
mov
xor
mov
add
or
fcomi
fnsave
sub
popa
xchg
ja
mov
mov
popa
jb
ja
popa
add
das
push
mov
arpl
add
fadd
lock
mov
jne
popa
cmp
adc
mov
iret
pusha
add
test
call
or
or
bound
sbb
add
pop
lahf
xor
dec
inc
sub
sbb
pop
push
adc
adc
adc
pop
adc
add
or
enter
or
push
add
jb
dec
stc
adc
add
(bad)
mov
mov
mov
dec
mov
and
dec
or
push
inc
inc
out
jmp
lahf
mov
int
lods
dec
ds
repnz
jmp
sar
pop
in
push
fild
mov
sbb
test
xor
pop
sar
xor
adc
and
rcl
mov
mov
sub
daa
test
mov
aas
inc
ret
push
mov
bound
(bad)
ret
test
sahf
mov
(bad)
pop
add
das
in
sar
cmps
stos
fcmovne
adc
add
mov
fdivrp
inc
jo
pop
loopne
sbb
aaa
push
inc
std
lock
nop
push
and
jg
jle
sub
pop
xor
(bad)
adc
loopne
mov
mov
or
jnp
lds
xor
int3
push
and
pop
outs
sar
jle
enter
sub
xor
mov
push
dec
ins
inc
lods
cs
adc
push
iret
(bad)
bound
and
add
add
add
add
in
adc
inc
jge
test
in
cs
popf
icebp
das
in
xchg
jno
xchg
or
in
bound
pop
sahf
lahf
mov
arpl
xchg
aas
cwde
pop
pop
enter
fwait
cdq
mov
out
test
pop
or
and
pop
enter
enter
jns
fs
enter
adc
pop
push
enter
mov
pop
jp
xchg
test
test
test
imul
int3
jl
dec
sbb
inc
rcl
mov
pop
movs
pop
cmps
and
jb
test
jo
pop
jb
stos
addr16
pop
je
mov
nop
or
mov
mov
or
mov
scas
mov
mov
or
nop
or
mov
mov
or
sbb
test
lahf
and
jb
pop
adc
lahf
nop
pop
jb
add
add
(bad)
ins
xchg
jmp
or
mov
repz
mov
add
cmps
ds
gs
push
es
pop
rcl
push
inc
ds
dec
add
imul
pusha
lods
xor
iret
ss
xor
repz
loopne
ja
scas
dec
pop
inc
inc
mov
inc
es
pop
dec
retf
add
push
adc
call
push
in
inc
rol
ret
daa
in
add
daa
push
xlat
scas
sbb
pop
push
movs
mov
adc
ins
pop
xchg
ret
pop
int3
pop
ins
pusha
pusha
aas
push
je
ins
xchg
push
add
pusha
mov
arpl
dec
mov
jb
push
enter
mov
test
and
rcr
inc
cs
ret
push
pop
jmp
or
out
pop
test
dec
cmp
add
add
adc
sbb
pop
imul
gs
cmps
xor
pop
aaa
iret
or
popa
int3
adc
(bad)
push
add
cmps
je
scas
jb
pop
les
js
push
jmp
cmp
push
mov
sbb
cmp
mov
jo
aam
add
inc
in
cmps
es
xchg
or
sub
cmps
add
pop
mov
bound
push
add
outs
or
add
add
out
stos
aam
in
in
push
and
inc
or
out
bound
dec
out
and
jge
out
push
push
call
push
pop
xchg
aas
cmp
or
sub
inc
sti
adc
mov
mov
jg
adc
jecxz
adc
mov
(bad)
jg
icebp
rcl
xchg
fdivr
push
or
cmp
rcl
cmp
jns
mov
pop
shl
or
dec
jmp
add
or
mov
and
fmul
add
arpl
add
pop
mov
adc
or
call
ficom
and
inc
jg
call
add
and
push
shr
call
ins
test
push
lahf
sub
adc
jb
push
cmp
outs
aas
mov
inc
rcr
mov
sub
mov
jo
add
jecxz
iret
fnsave
test
sti
and
adc
and
xchg
pop
mov
stos
push
jecxz
mov
push
pop
and
or
add
(bad)
xor
add
lods
loope
add
ins
daa
pop
and
inc
aas
dec
sahf
and
fadd
imul
outs
shl
sub
jae
add
inc
xchg
loop
outs
xchg
adc
adc
arpl
cli
arpl
xchg
cmps
push
add
dec
or
shl
je
or
data16
adc
(bad)
mov
ret
ins
stos
pop
pop
jb
add
aaa
test
sbb
adc
inc
mov
(bad)
pop
dec
push
xor
dec
sbb
mov
add
xchg
adc
inc
ffree
add
xchg
mov
add
sbb
jns
inc
test
sbb
cmp
and
xchg
xchg
cmc
dec
test
pop
inc
arpl
add
inc
push
sbb
into
jp
pop
mov
jbe
stos
cmp
and
pop
js
outs
sub
xchg
add
mov
gs
xchg
inc
add
inc
popa
jmp
fistp
add
add
movs
aaa
pop
nop
inc
add
sub
push
fild
dec
ss
dec
add
ss
popa
adc
shl
icebp
sbb
sbb
or
fsub
pop
adc
or
or
outs
xchg
enter
cmps
or
add
jns
es
dec
stos
and
jo
arpl
(bad)
or
pop
and
or
data16
push
mov
cmps
jecxz
add
inc
mov
les
fld
push
xor
mov
mov
or
rep
sub
xor
push
jp
add
push
mov
mov
mov
adc
pop
inc
or
inc
sub
scas
or
xor
or
xor
cmp
outs
out
jne
or
pop
or
xor
ret
cmps
inc
sub
dec
retf
call
add
inc
inc
stos
or
and
nop
or
sahf
ror
and
add
and
aam
push
push
push
movs
sbb
inc
neg
pop
cmps
push
xor
mov
sub
push
push
inc
xor
rol
add
push
sbb
jbe
ja
shld
sub
pop
pop
ja
jnp
add
push
shl
and
fild
add
add
or
ror
mov
jae
test
push
(bad)
cs
test
loop
jmp
or
or
sbb
inc
rcl
das
jae
pop
cmps
pusha
lds
sub
ins
les
inc
add
adc
push
imul
test
inc
push
(bad)
mov
add
add
je
adc
aad
sub
and
add
ret
xchg
cmp
aad
pop
add
aas
rdpmc
add
xor
call
pop
sub
or
xchg
adc
pop
mov
iret
iret
or
or
mov
inc
pop
je
ins
dec
or
test
add
inc
mov
pop
xchg
sub
call
das
rol
fbstp
test
sbb
or
mov
sbb
dec
adc
mov
add
push
or
inc
test
scas
mov
js
add
or
push
mov
movs
mov
mov
out
or
adc
bound
jmp
inc
add
(bad)
out
push
xor
cmp
mov
cmovb
mov
pop
add
pop
push
add
test
or
xchg
xor
xor
add
jae
xchg
mov
stos
mov
outs
add
mov
je
aam
or
push
or
iret
les
cmp
mov
shl
mov
shl
push
test
imul
ror
add
daa
stos
scas
xchg
popa
adc
inc
dec
adc
imul
outs
retf
adc
(bad)
dec
daa
push
cmp
rol
test
or
sbb
(bad)
add
add
btc
inc
add
aas
add
sbb
into
das
pusha
test
and
xor
ss
push
int3
inc
inc
jno
add
ins
xor
pop
(bad)
outs
add
push
push
or
aam
xchg
jnp
outs
inc
dec
and
pop
dec
push
pop
and
(bad)
fs
inc
sub
inc
test
fs
or
and
add
jbe
popa
fs
sbb
add
xchg
enter
pusha
inc
cmp
jnp
adc
aas
std
jne
gs
push
inc
and
ret
or
mov
popf
das
and
mov
push
cs
fwait
jmp
or
add
xchg
pop
out
adc
xchg
pop
popa
ret
lahf
push
adc
addr16
sti
add
pop
mov
dec
adc
adc
or
xor
add
mov
ret
mov
push
adc
xor
pop
arpl
push
add
test
cmps
imul
or
lahf
iret
pusha
mov
sub
push
add
adc
push
jo
sub
xor
inc
jmp
cmp
repnz
push
loopne
cdq
(bad)
push
ret
jecxz
sub
xchg
pop
sbb
cmp
mov
bound
dec
xchg
xor
inc
arpl
popa
jo
retf
inc
inc
loop
daa
push
das
sbb
xor
push
shr
inc
lock
popa
je
rcl
mov
sbb
cmps
fidiv
ror
in
sub
in
sti
(bad)
neg
pop
jb
pop
sub
sub
dec
push
into
adc
xchg
cs
inc
mov
add
sbb
inc
add
xor
stos
add
pop
out
add
ds
add
or
(bad)
sub
add
mov
mov
fwait
mov
addr16
fs
cmps
lods
stos
push
push
add
inc
test
call
jmp
add
mov
add
mov
outs
pop
xor
sbb
ins
add
push
sub
push
fwait
and
cmp
in
inc
add
cwde
or
mov
jb
cmp
outs
cmp
int
mov
push
cs
fwait
ja
call
stc
dec
inc
push
or
imul
sub
(bad)
adc
inc
inc
dec
bound
push
mov
jge
sbb
add
ja
push
and
inc
fucomip
aaa
mov
mov
xor
mov
pop
and
jb
gs
loopne
push
pusha
(bad)
stos
xchg
xor
mov
add
add
adc
movs
loopne
fxch
imul
inc
or
adc
mov
cdq
add
outs
jo
inc
mov
adc
stc
fist
pop
mov
pop
jne
daa
fldcw
or
rcpps
sub
inc
dec
inc
adc
arpl
bound
sub
(bad)
ror
xor
pusha
push
pop
shr
add
test
inc
or
fimul
dec
xlat
inc
inc
add
and
pop
or
mov
inc
and
addr16
retf
out
js
or
inc
sub
test
ret
pop
inc
add
aaa
add
mov
and
js
shr
mov
add
jle
sub
jo
mov
xor
ja
sub
and
inc
cmp
gs
inc
outs
mov
retf
cmc
sub
mov
inc
daa
pop
sub
dec
outs
nop
mov
rcr
and
mov
dec
xchg
xor
fild
inc
test
jmp
pop
(bad)
les
jmp
int3
push
sub
daa
adc
and
sub
and
mov
arpl
xor
dec
add
xor
pop
xor
les
mov
add
in
imul
add
xchg
xor
jmp
sub
inc
cs
bound
cmp
jae
sub
fwait
pop
(bad)
mov
test
daa
xor
inc
sub
or
pop
dec
inc
pushf
rcr
imul
(bad)
mov
add
lock
fwait
inc
pop
lar
inc
and
or
stos
lahf
mov
sub
fadd
pop
outs
sbb
adc
add
aad
push
push
sub
fisubr
cmp
in
push
aaa
into
bound
add
push
retf
mov
adc
push
aaa
lock
push
add
add
sub
or
sbb
in
push
sub
popa
or
iret
(bad)
(bad)
and
add
add
or
inc
xchg
sbb
imul
arpl
outs
add
inc
pop
pop
nop
(bad)
imul
mov
or
push
lods
mov
xor
and
add
popa
mov
xchg
add
call
rcl
ret
ret
sub
fild
push
pop
mov
dec
inc
repz
ja
test
add
mov
aam
fist
(bad)
pop
push
dec
rcr
mov
sbb
retf
imul
rol
push
fild
out
ror
jp
push
cs
mov
pop
xor
dec
(bad)
jae
adc
xor
mov
ins
cwde
shl
jo
sub
pop
add
add
dec
push
addr16
les
mov
repz
ret
bound
(bad)
fcomp
cmps
scas
or
inc
lahf
jecxz
or
add
mov
icebp
pop
outs
sub
or
ds
cmp
dec
into
xlat
dec
sti
cmps
dec
adc
scas
ins
or
sbb
add
add
mov
call
mov
add
aas
cld
add
and
dec
dec
cmp
cmp
scas
and
add
dec
and
test
scas
jns
cmps
dec
das
push
das
adc
xor
adc
ins
bound
fsubr
pop
dec
dec
adc
add
sub
addr16
in
std
add
dec
jne
xchg
inc
outs
jecxz
daa
inc
jo
test
enter
bound
popa
jb
jae
fnstsw
popa
outs
adc
xchg
into
mov
outs
jns
jg
mov
inc
div
popa
xchg
outs
sbb
cmps
daa
push
or
adc
and
punpcklwd
pop
inc
or
out
inc
aas
pop
mov
add
and
pop
add
pop
sub
jecxz
and
or
and
mov
jo
mov
repz
adc
daa
push
sub
xor
push
xlat
test
sub
call
add
adc
mov
sub
and
push
inc
pop
mov
xchg
inc
jo
sbb
sub
add
add
out
fild
or
addr16
gs
mov
out
add
xchg
nop
jnp
sbb
xor
lahf
cmp
sub
pop
outs
adc
and
or
inc
dec
imul
cs
or
out
mov
mov
push
push
imul
ins
adc
sub
jns
outs
pop
cmp
and
xor
les
mov
inc
outs
out
xor
xor
adc
pop
shl
rcr
inc
lds
xor
outs
mov
outs
xor
and
adc
xchg
bound
jb
jecxz
rol
or
test
(bad)
mov
ror
mov
dec
ret
xchg
push
das
jb
or
and
push
push
fmul
mov
adc
xchg
inc
jp
xor
fild
adc
xchg
jnp
es
pop
idiv
test
bound
imul
xor
pop
ins
xchg
or
shl
jo
inc
or
test
retf
push
inc
dec
(bad)
xlat
iret
dec
mov
and
dec
ins
call
add
sub
mov
aas
jae
pop
sub
pop
(bad)
loopne
(bad)
and
jne
outs
mov
sub
pop
daa
daa
jmp
and
adc
mov
inc
mov
sti
out
outs
add
or
pop
inc
add
les
mov
add
and
in
add
gs
pop
arpl
sub
sbb
mov
inc
sub
jae
ins
bound
sub
popa
imul
jle
inc
add
dec
bound
xor
ret
inc
xchg
pop
jbe
mov
push
adc
ret
mov
int3
or
mov
pusha
fwait
xor
lahf
fbstp
pop
popa
mov
or
or
dec
and
pop
add
sub
popa
inc
sbb
aas
es
sbb
push
daa
loopne
or
(bad)
fwait
and
ins
dec
pop
ja
sbb
pop
out
inc
and
rcr
sbb
je
add
xor
js
ins
punpcklbw
nop
and
xlat
adc
xlat
rcl
cmp
gs
jecxz
dec
push
lock
outs
cmp
js
ins
inc
or
retf
jmp
mov
xlat
daa
xor
aas
bound
int
add
arpl
imul
or
retf
push
inc
jae
xor
inc
mov
adc
pop
mov
pop
pop
xor
nop
or
push
inc
pop
mov
daa
outs
sub
outs
jae
push
xor
xlat
or
shr
sub
sbb
push
sbb
fs
xchg
pop
bswap
fist
cmp
pop
call
clc
aad
bound
iret
jb
imul
test
and
add
jbe
fwait
sub
push
pop
aas
fwait
in
jmp
or
aas
mov
and
cmp
lahf
and
add
inc
call
shr
fucomp
and
add
inc
jae
and
push
aam
push
out
xor
inc
(bad)
sbb
adc
sub
pop
xchg
dec
arpl
sub
sub
aaa
sub
and
jnp
ret
inc
bound
xor
and
or
push
(bad)
dec
dec
and
adc
or
jmp
and
rol
movs
and
push
rcr
sbb
add
push
jo
loop
adc
test
cmc
and
outs
and
test
fiadd
loope
xor
dec
pop
imul
xor
jo
jo
test
test
lds
adc
or
pop
enter
sbb
add
fs
test
ins
jae
cmp
jae
(bad)
and
fwait
and
inc
mov
pop
call
dec
mov
xchg
inc
push
sub
je
pop
xlat
mov
iret
sub
bound
jo
mov
jno
xchg
jae
(bad)
mov
aas
push
test
or
mov
add
adc
and
arpl
mov
(bad)
inc
(bad)
push
or
fist
mov
aas
inc
add
and
pop
pop
push
sub
cmp
jno
ret
lds
test
jae
mov
cmps
xchg
nop
cmp
jmp
dec
lahf
pop
xchg
adc
iret
xor
call
(bad)
iret
xchg
dec
fs
adc
pop
bound
xor
cwde
or
mov
inc
int3
retf
idiv
btr
movs
and
jg
or
push
ja
ja
add
sub
bound
ds
lods
les
iret
repz
jae
movs
mov
mov
push
test
jg
aad
cmp
xor
mov
ja
repz
inc
mov
iret
shr
js
mov
or
arpl
lods
mov
adc
and
push
ror
mov
cwde
jp
add
aad
push
add
out
add
xchg
add
dec
imul
es
das
or
aam
nop
pop
push
loop
cmps
inc
jae
add
push
add
outs
dec
aaa
push
or
ja
mov
fdivr
clc
push
outs
add
push
or
inc
cmp
xchg
adc
adc
dec
mov
or
sub
rcl
inc
mov
aas
xor
mov
or
and
outs
dec
sbb
pop
outs
dec
sub
mov
es
lea
add
dec
mov
push
sub
lods
mov
mov
or
outs
out
dec
push
add
mov
push
sub
ins
add
jg
inc
adc
test
test
push
jb
push
dec
or
inc
or
push
xor
and
movs
das
data16
xor
add
add
pop
and
xchg
dec
les
add
sbb
sub
and
shr
or
cmp
ds
push
adc
pop
js
cmp
enter
stos
adc
mov
out
adc
xor
not
or
pop
inc
add
sub
popa
and
or
cmovg
arpl
add
xor
xlat
push
aas
(bad)
xor
inc
les
cmp
pop
and
jbe
outs
mov
sub
add
cmp
aas
adc
das
xor
xor
test
dec
push
in
add
adc
pop
pop
or
push
fistp
push
loopne
dec
arpl
mov
addr16
and
push
mov
sti
inc
loopne
or
xchg
sub
outs
xor
ret
pop
and
inc
inc
ja
add
mov
add
test
ja
adc
aas
ja
pusha
(bad)
push
push
outs
pop
cmp
adc
push
inc
popf
test
pop
pop
cmovle
dec
inc
daa
xchg
or
adc
push
pop
pop
inc
add
mov
and
add
inc
adc
aaa
mov
pop
fsubr
adc
pop
fmul
pop
adc
jge
add
xor
repnz
ins
dec
in
clc
pop
das
lock
fwait
in
fsub
jbe
xlat
fsub
xor
push
sbb
nop
pop
mov
mov
sbb
sub
cmp
mov
inc
stos
pop
pop
pop
pop
dec
imul
jle
adc
bound
add
rol
jo
imul
and
(bad)
pop
les
mov
mov
test
or
retf
lods
dec
wrmsr
aaa
stos
pusha
jo
mov
push
and
cmp
pusha
ret
arpl
add
inc
mov
cmps
fcom
sahf
repz
add
arpl
adc
add
scas
lods
mov
addr16
cmp
sbb
jg
rep
xor
sahf
sub
pusha
push
add
fwait
aas
test
jecxz
xchg
ror
jae
rol
sub
adc
push
xchg
clc
push
cmp
adc
fisttp
jne
sub
shl
dec
sub
inc
add
daa
retf
dec
aam
inc
das
add
(bad)
mov
mov
ds
xchg
push
shr
(bad)
es
das
sub
inc
mov
sub
addr16
dec
sub
imul
(bad)
sub
or
fisttp
outs
arpl
(bad)
lahf
inc
fs
adc
add
and
adc
pop
fisttp
xor
sub
or
jno
add
add
push
cmps
add
jmp
add
xchg
add
add
add
fwait
push
sub
mov
or
add
push
cmps
test
pop
sub
sti
sub
ret
mov
mov
sbb
add
xchg
and
lea
sti
xchg
and
imul
sbb
add
add
inc
lahf
cmp
xor
inc
pop
and
xor
and
out
mov
add
imul
fwait
pop
cs
(bad)
mov
xor
sub
dec
lea
ss
and
dec
inc
(bad)
ins
mov
and
xchg
adc
sbb
push
mov
add
dec
mov
shr
jl
adc
xchg
xor
pop
mov
inc
pop
ds
sbb
mov
pop
and
mov
inc
jmp
in
dec
and
lock
jns
(bad)
mov
xchg
loopne
add
push
and
or
stos
outs
jl
mov
xchg
mov
nop
jl
sbb
dec
add
fcmovb
push
jb
inc
add
add
add
pop
sbb
add
xchg
test
push
add
add
ror
mov
add
add
add
jmp
adc
sbb
push
push
aaa
add
pop
push
add
add
jmp
rol
add
(bad)
inc
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
(bad)
(bad)
(bad)
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
(bad)
inc
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
(bad)
(bad)
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
and
stos
loope
push
adc
stos
sbb
inc
mov
jecxz
push
add
mov
cli
mov
ja
arpl
or
in
stos
jmp
adc
js
ins
mov
out
daa
adc
fwait
inc
sbb
mov
xor
dec
add
xor
shl
dec
int3
add
cmps
pop
rcl
mov
jnp
pop
shr
rcl
dec
ins
adc
ret
pusha
adc
xchg
out
(bad)
loopne
mul
or
cmps
pop
xchg
xor
xor
jg
scas
push
mov
fs
add
aas
mov
out
add
int
jmp
push
fmul
mov
adc
add
add
or
push
inc
nop
stos
movs
ins
xor
xchg
adc
(bad)
(bad)
jns
mov
add
add
cmp
(bad)
pop
add
dec
cs
sbb
out
jbe
add
add
arpl
movs
add
jg
and
ds
push
jo
mov
movs
mov
mov
lea
in
imul
and
addr16
pop
outs
arpl
aam
test
outs
sub
inc
pop
push
adc
jp
and
scas
cmps
shl
or
or
pop
mov
mov
inc
push
lea
je
add
in
jl
inc
pop
dec
adc
cmp
outs
jns
int3
aam
jnp
or
pop
push
sbb
push
push
sbb
ds
dec
inc
and
push
ror
cmp
adc
inc
mov
test
popf
inc
mov
ss
aas
mov
out
and
or
lahf
test
inc
cmp
imul
or
or
add
jne
arpl
inc
ja
jns
sbb
cli
adc
adc
adc
ret
cmp
jl
imul
sbb
push
add
xchg
mov
ss
ins
pop
and
push
imul
das
inc
mov
jns
outs
inc
mov
bound
adc
jo
imul
push
mov
or
scas
xor
mov
ds
and
mov
adc
popa
leave
jns
push
das
daa
movs
jnp
movs
ss
lds
imul
and
dec
leave
xor
je
or
je
push
fidivr
ins
jb
cs
jg
outs
data16
popa
outs
and
add
daa
sub
push
movaps
arpl
or
dec
sub
sbb
sbb
adc
outs
xor
xchg
and
cs
xor
stos
inc
cdq
mov
dec
ret
inc
mov
xchg
das
mov
xor
xchg
push
or
jmp
adc
push
cs
cmp
add
aaa
xor
xchg
push
fisub
aas
xor
jne
mov
and
mov
dec
aaa
(bad)
rcl
inc
shl
outs
outs
outs
lds
sbb
movs
outs
lock
jb
jo
jbe
adc
and
or
mov
xchg
das
das
push
or
fisttp
and
(bad)
mov
icebp
mov
cmp
outs
ins
gs
mov
repz
cmp
adc
test
inc
aaa
ins
in
add
push
aam
ins
movs
sbb
mov
pop
das
mov
mov
imul
inc
sub
jp
jp
in
push
push
cmp
shl
sbb
gs
movs
push
nop
fwait
or
mov
add
adc
dec
jecxz
and
xchg
pop
daa
loope
pop
pop
jg
popa
ins
and
cs
ror
inc
mov
push
or
scas
adc
mov
scas
add
push
je
ror
jle
imul
mov
cmp
adc
inc
pop
inc
push
rcl
dec
aas
aas
or
out
aaa
xchg
jo
and
xor
rcr
aas
adc
pop
and
pop
mov
pop
icebp
(bad)
xchg
mov
mov
add
scas
cmp
pop
outs
xor
mov
out
and
sub
pop
bound
pop
push
or
loope
cmp
stc
add
pop
rcl
push
pop
push
dec
cmp
mov
sti
inc
add
or
add
push
add
call
pop
xor
outs
sub
dec
inc
push
adc
mov
pop
inc
and
mov
inc
push
add
inc
ret
(bad)
les
add
sub
jmp
clts
(bad)
adc
stos
fwait
inc
gs
test
and
pop
mov
lock
inc
cmp
mov
push
addr16
xchg
xchg
pop
push
mul
pop
mov
pop
sub
sbb
xor
xchg
xchg
pop
popa
retf
sbb
pop
mov
push
dec
or
dec
xchg
cmps
or
xlat
lock
add
inc
and
imul
loop
add
inc
arpl
push
or
retf
pop
pusha
ja
sbb
sub
xor
lahf
(bad)
sub
scas
imul
ror
push
test
(bad)
jo
dec
ins
dec
jnp
inc
js
push
fist
xchg
jmp
and
mov
movs
sub
sbb
or
push
add
cwde
cmps
and
or
pop
fwait
inc
loop
mov
scas
xor
mov
push
or
sub
sub
mov
arpl
mov
pcmpgtw
adc
ins
add
xor
gs
dec
pop
ffreep
and
cmp
imul
je
or
xchg
jle
push
inc
sub
dec
jae
jmp
cmps
gs
dec
aam
dec
inc
or
sbb
xor
add
movq
jbe
pop
clc
test
xor
mov
jnp
(bad)
jmp
pop
fild
aaa
nop
sub
mov
stos
sbb
fisubr
push
add
xor
adc
add
add
or
cmp
and
test
pop
xor
sub
inc
jbe
and
rdtsc
lahf
xor
lea
pop
(bad)
sbb
pop
ret
cmp
or
mov
pusha
jo
addr16
dec
jg
jmp
pop
jnp
xchg
add
dec
ror
(bad)
ds
sar
retf
jno
icebp
pusha
inc
mov
dec
sbb
outs
movs
add
or
xchg
or
sub
mov
fbld
addr16
cmps
or
js
xor
pop
popa
in
sar
imul
addr16
xchg
inc
and
fsubr
sbb
pop
and
add
add
push
mov
add
xor
cmp
pop
or
aaa
fcom
mov
and
sub
add
fisttp
mov
inc
add
sub
test
inc
adc
or
pusha
rol
fbstp
dec
jae
cmps
xor
sub
inc
sub
(bad)
xchg
ss
rol
add
fild
jmp
mov
add
adc
add
loopne
les
pop
jae
je
dec
ins
pop
pop
add
sbb
add
and
xchg
icebp
imul
add
inc
dec
dec
add
sub
pusha
arpl
cmp
sbb
test
add
mov
retf
pop
addr16
push
mov
or
and
scas
jg
adc
popa
mov
dec
mov
or
mov
or
xlat
mov
pop
inc
add
and
arpl
sbb
push
and
add
mov
mov
cmp
jns
add
(bad)
daa
popa
lods
ror
mov
inc
push
pop
ja
inc
sub
fld
outs
aad
adc
push
add
add
add
movs
out
or
and
mov
aaa
sub
or
jae
dec
sub
cdq
inc
aas
add
or
dec
in
imul
and
jl
adc
stos
adc
stos
add
iret
inc
mov
mov
cmp
mov
push
lea
das
aas
icebp
jbe
inc
(bad)
arpl
push
push
inc
sub
retf
test
(bad)
das
push
dec
dec
mov
sbb
adc
xchg
dec
int3
mov
or
inc
inc
loopne
add
inc
inc
inc
inc
dec
pop
inc
inc
inc
inc
push
inc
test
xchg
cmp
and
and
pop
add
and
dec
adc
pop
add
pop
dec
mov
test
inc
xchg
cmps
mov
cmps
punpckldq
sub
sbb
test
adc
popf
xchg
inc
xor
jae
pop
arpl
fsubr
jg
push
sub
pop
(bad)
gs
je
jp
jmp
mov
stos
pop
adc
ret
push
sub
es
sub
or
lahf
lahf
call
jp
gs
push
pop
add
push
iret
jno
add
ror
inc
pop
xchg
(bad)
xchg
inc
cmp
mov
pop
mov
mov
push
lahf
(bad)
adc
das
out
or
loopne
ins
push
add
pop
inc
daa
les
push
inc
(bad)
sbb
ds
mov
mov
lods
xor
push
mov
sub
and
jg
push
enter
and
xor
mov
imul
dec
push
sti
imul
out
add
retf
cmps
xchg
xor
pop
add
add
iret
pop
add
sbb
pop
mov
adc
hlt
pop
add
mov
mov
xchg
mul
xor
push
mov
nop
enter
sahf
mov
xchg
ret
in
ret
mov
cmp
ja
imul
adc
lahf
sub
inc
or
ja
fs
arpl
or
mov
inc
pop
mov
sbb
inc
sbb
loopne
adc
fnstcw
adc
inc
clc
cmp
mov
adc
pusha
xchg
push
inc
fistp
iret
jg
rcl
mov
mov
or
movs
pop
mov
dec
mov
mov
pop
dec
pop
cdq
inc
add
cmps
loopne
mov
cmp
add
outs
add
stos
scas
dec
scas
pushf
fiadd
cld
cs
shl
xor
push
inc
gs
mov
sub
or
mov
sub
cli
and
stos
add
push
sbb
outs
(bad)
loop
movs
mov
rol
popa
pop
xor
popa
add
and
inc
push
loope
ins
outs
jbe
inc
jo
xchg
pop
mov
call
cmps
aas
push
and
push
inc
jmp
jbe
fs
aaa
aad
mov
jge
fwait
cmp
ins
push
ins
daa
add
and
bound
fsub
add
das
arpl
ret
setns
mov
jne
pop
(bad)
popa
push
adc
push
jae
imul
bound
mov
sub
imul
daa
mov
adc
pop
mov
sub
and
add
stos
nop
mov
popa
imul
inc
popa
pop
or
imul
inc
push
gs
sbb
fisubr
gs
outs
pop
cs
fild
popa
jae
sub
sub
popa
stos
xor
and
ins
cld
test
daa
push
mov
dec
arpl
loopne
push
test
add
jb
pop
add
jg
je
and
sub
push
xchg
daa
mov
test
push
pop
arpl
imul
pop
and
outs
je
add
sbb
test
push
jo
test
outs
sbb
div
fcom
and
jae
daa
mov
dec
adc
dec
or
je
jge
lahf
dec
idiv
cmp
ret
and
cmp
ins
das
(bad)
jb
cmp
mov
inc
dec
je
addr16
or
fiadd
jae
imul
ss
shl
mov
cmp
(bad)
loop
loope
daa
nop
mov
and
movhps
movs
pop
dec
das
imul
mov
aaa
mov
das
outs
jp
push
imul
je
jns
sub
sub
ja
or
mov
xor
or
xchg
add
add
pusha
pop
cmp
test
lods
gs
ins
daa
mov
pop
jl
popa
lock
es
jo
push
imul
mov
clts
call
jmp
sub
iret
outs
std
inc
lods
in
daa
and
aaa
in
push
rol
dec
mov
sub
push
dec
dec
inc
pushf
push
inc
sets
dec
lods
repnz
push
xchg
dec
mov
push
js
lods
imul
cmp
push
cvttps2pi
sbb
dec
lock
popf
mov
ror
call
pushf
push
pop
in
push
add
je
dec
inc
push
(bad)
pop
cmovl
(bad)
cmp
scas
sub
fnstsw
push
jg
inc
inc
push
xor
loopne
inc
xor
sar
mov
push
rcr
dec
push
seto
sti
scas
mov
push
inc
push
dec
inc
push
pop
xor
test
push
lahf
sbb
cmovge
xor
push
inc
fadd
push
imul
xor
cmps
repnz
dec
or
movs
test
dec
call
and
ror
str
mov
push
xor
or
xor
scas
xor
jnp
ret
sbb
loopne
xor
paddq
js
fdivr
xor
inc
inc
lahf
xor
outs
out
xor
ss
xor
ss
jl
(bad)
xor
cmp
xor
pcmpeqb
subps
dec
push
pop
push
ficom
pop
inc
inc
cmp
xor
loopne
mov
pop
sbb
push
push
dec
pop
fistp
shr
clc
psubsb
(bad)
or
or
adc
xchg
dec
adc
sub
loopne
or
or
stos
push
popa
ror
add
das
push
mov
sbb
ja
pushf
push
or
mov
bound
sub
cmps
add
push
sub
sbb
inc
call
jno
pop
or
pop
mov
or
push
sar
push
ins
or
adc
dec
aam
dec
pop
hlt
inc
inc
push
xchg
fcmovbe
mov
lock
or
add
pop
popa
or
es
(bad)
pusha
adc
add
pop
xor
push
xor
or
div
(bad)
sub
mov
dec
fld
ds
cs
sub
pop
jecxz
test
arpl
mul
lods
or
and
push
xchg
mov
pop
xlat
xor
fcom
movs
sbb
inc
out
or
or
add
rol
(bad)
fstp
or
pop
test
add
add
imul
adc
loopne
nop
xor
xor
xchg
push
hlt
push
push
push
push
or
xor
cmp
jo
ja
inc
inc
or
call
xor
push
sub
sub
add
outs
inc
adc
iret
ret
and
add
and
adc
and
add
aaa
pop
inc
mov
mov
(bad)
mov
out
mov
or
movs
cmp
call
inc
daa
daa
pop
jae
fs
sbb
fisttp
pusha
cmc
sbb
lea
jecxz
aam
shl
cmp
mov
sbb
jns
inc
mov
fwait
pop
xor
rcl
push
in
ins
push
push
lahf
sbb
pusha
pusha
cmp
fs
pushw
pop
sbb
gs
and
xchg
fs
outs
lahf
adc
jne
dec
jnp
xchg
pop
pop
pop
inc
push
pusha
mov
aas
cmp
loopne
pusha
ins
call
add
out
adc
adc
rcr
adc
jbe
pop
or
xchg
inc
push
push
lods
mov
cwde
fdiv
inc
dec
push
jne
je
mov
cmp
xchg
or
dec
gs
mov
aad
xchg
push
in
outs
pandn
inc
adc
or
xchg
popa
jb
pusha
rcr
sub
push
sub
sub
jmp
addr16
mov
outs
xchg
shl
bound
lods
popw
pop
push
push
fadd
cmp
ds
jnp
not
das
push
sub
add
and
add
push
add
ins
out
sub
mov
imul
cmp
pop
iret
mov
and
push
and
lods
jo
mov
pop
adc
push
jb
and
imul
xor
add
xor
lods
push
les
sbb
inc
enter
scas
aam
xor
jo
cmps
adc
jl
mov
jns
(bad)
ins
mov
js
out
sahf
out
push
dec
cmp
fst
push
sahf
sub
push
inc
jl
jnp
out
pusha
dec
sub
ss
or
jnp
add
push
or
add
jns
ja
inc
cld
push
clc
hlt
call
(bad)
jl
push
loopne
fcom
push
fcomp
cmp
cs
aam
add
inc
les
cmp
push
rol
int3
enter
(bad)
mov
rol
mov
ret
inc
xchg
cmp
repz
mov
iret
repz
nop
mov
iret
jo
pop
inc
cmp
out
cmp
inc
in
movs
test
jns
inc
and
inc
fdiv
cmp
repz
iret
repz
ins
fs
dec
sub
sahf
out
ss
in
xchg
push
jns
(bad)
inc
xchg
inc
mov
cmps
dec
pusha
xchg
adc
mov
retf
sbb
dec
adc
xor
mov
mov
pop
jg
test
out
adc
(bad)
outs
add
jbe
ret
adc
das
sbb
inc
jecxz
out
jo
cmps
nop
adc
aas
and
inc
cmp
sti
addr16
dec
ins
adc
sbb
jo
or
das
mov
cmps
jno
and
cmc
mov
daa
jns
push
xor
add
scas
dec
js
pusha
cmp
call
outs
scas
retf
mov
or
(bad)
sbb
jno
jb
das
push
or
dec
in
test
jae
outs
push
pop
xchg
push
dec
xlat
or
inc
loopne
loopne
jmp
dec
ins
cdq
rol
add
add
es
pop
add
adc
dec
mov
mov
sub
sub
ja
ds
dec
mov
add
push
inc
inc
sub
adc
outs
xlat
stos
sub
sub
and
das
mov
pop
cmp
or
add
or
xor
(bad)
fld
xchg
sub
dec
add
xchg
xchg
popa
jg
arpl
jo
jae
or
mov
dec
outs
daa
pusha
pop
pop
lods
push
sub
xor
sbb
popa
mov
mov
mov
inc
aaa
jae
push
or
or
push
daa
jg
sub
mov
data16
ret
xchg
test
pop
je
test
sub
inc
xor
bound
iret
and
adc
sub
adc
or
invd
mov
mov
data16
jae
(bad)
cs
and
sbb
adc
fcmovnb
dec
lea
icebp
retf
push
arpl
add
push
mov
pop
and
inc
dec
out
add
mov
xor
and
push
or
sbb
add
(bad)
fwait
xchg
inc
sub
inc
das
lahf
inc
in
loopne
inc
push
xlat
lahf
adc
pop
rcl
ret
add
lods
adc
lahf
mov
inc
js
cmps
inc
lods
adc
jmp
jg
inc
mov
mov
movs
dec
xor
add
adc
and
pop
mov
xchg
fsubr
dec
and
(bad)
pop
das
leave
xchg
adc
ror
adc
ret
jb
inc
inc
psubusw
cmps
and
sub
inc
cs
inc
and
push
mov
pushf
mov
pop
les
fld
and
adc
cmp
or
movs
or
inc
add
div
xchg
ret
arpl
and
jno
pop
iret
xchg
push
and
std
sbb
jmp
outs
ret
sub
jns
fisttp
imul
jns
fstp
xchg
xor
mov
dec
dec
jl
add
lods
pusha
cmc
pop
jne
dec
mov
js
pusha
mov
sbb
test
push
sbb
or
js
cmp
gs
adc
and
ins
xchg
shr
inc
sbb
lods
jns
popa
dec
dec
inc
mov
sub
or
pop
xchg
push
mov
push
jo
jno
je
jl
cs
push
inc
add
lock
pop
inc
push
push
(bad)
push
pop
dec
inc
in
popa
jbe
inc
push
jbe
arpl
popf
mov
ins
pop
pop
aam
push
pop
popa
ja
mov
popa
jb
mov
jge
outs
gs
lahf
lea
imul
jns
mov
nop
retf
mov
mov
add
push
sahf
push
pusha
push
inc
mov
inc
lods
push
push
fadd
jb
jbe
pop
add
lahf
mov
push
daa
rcr
sbb
cs
inc
aam
or
pop
jne
push
je
retf
and
imul
inc
mov
cmp
imul
jae
sbb
ror
bound
xor
jg
push
outs
popa
ins
rcl
(bad)
movs
jmp
les
aas
push
fcmovb
cmp
and
inc
pop
inc
sub
scas
jg
rcl
mov
dec
dec
xor
bound
mov
adc
sbb
cs
mov
(bad)
(bad)
adc
mov
retf
push
ins
es
pop
inc
push
movs
push
mov
sbb
bound
imul
and
lsl
mov
pop
and
jo
xchg
or
or
and
adc
aas
or
cmp
add
iret
mov
jecxz
out
push
pop
bound
cdq
jb
clc
xchg
out
lahf
add
mov
jae
and
dec
mov
dec
bound
or
test
das
pop
aad
test
fcmovnbe
dec
mov
outs
xchg
xchg
mov
mov
xor
xlat
cs
and
je
ins
bound
jbe
push
push
and
dec
push
xchg
ret
xor
outs
push
out
adc
push
mov
int
xchg
les
mov
push
daa
scas
or
xchg
push
adc
sar
mov
push
cmp
push
mov
mov
fdiv
retf
and
aas
test
inc
pop
inc
adc
cmp
add
rcr
mov
add
ret
mov
movs
or
dec
pushf
jmp
or
iret
repz
inc
pop
call
push
movs
sub
pop
push
(bad)
mov
sub
mov
sub
(bad)
call
sub
arpl
scas
or
or
adc
es
addr16
xchg
inc
add
pusha
mov
aas
push
mov
adc
loope
lahf
gs
mov
sub
sub
imul
xor
pavgb
add
mov
jg
push
ret
or
xor
or
jecxz
jae
pop
sub
sub
sub
mov
or
scas
aaa
imul
test
xchg
sar
rcl
lods
nop
adc
popa
dec
(bad)
sahf
xor
imul
cmps
mov
or
mov
and
mov
not
sti
xor
xchg
add
jl
pop
loope
jns
sti
call
in
xor
into
pop
push
lea
lods
inc
cld
call
mov
je
mov
ds
(bad)
(bad)
aas
add
jae
jno
hlt
dec
call
push
mov
xor
leave
xchg
xor
pop
(bad)
xor
test
(bad)
dec
pop
pop
add
xor
mov
mov
jbe
pop
fsin
inc
lahf
mov
add
mov
xor
aas
adc
nop
inc
cmp
or
cwde
dec
addr16
out
push
lods
jno
sub
mov
test
xor
dec
pop
sahf
mov
cmp
stos
dec
jo
std
push
xchg
scas
ins
aaa
cs
mov
pop
(bad)
repnz
push
sahf
aad
lea
mov
mov
cmps
aad
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
cmp
inc
(bad)
retf
dec
fild
adc
and
add
inc
jg
push
mov
shr
dec
ficom
gs
add
ret
xchg
push
sbb
inc
ss
(bad)
push
ins
call
add
sbb
clc
or
popf
out
movs
rcl
add
add
out
xor
push
inc
push
inc
ret
sahf
pusha
cwde
dec
add
cmp
ss
add
scas
ja
mov
add
das
scas
push
shl
mov
addr16
(bad)
cmp
cmp
daa
xor
bound
cmp
lock
push
push
enter
xchg
mov
mov
pop
in
nop
aaa
mov
out
int3
arpl
aaa
or
pop
mov
call
mov
xlat
nop
xlat
dec
enter
xor
add
xchg
xchg
push
pop
push
jnp
jo
fs
cmp
jg
push
sbb
add
pop
jnp
mov
pop
arpl
pop
or
or
xchg
lods
add
les
sub
cmp
outs
fs
mov
bound
fs
cmp
add
mov
add
scas
jecxz
(bad)
inc
(bad)
aaa
fs
or
mov
add
movs
outs
and
jge
rol
inc
fild
sbb
cmp
clc
cmps
inc
arpl
or
mov
lahf
mul
and
cmps
cmp
mov
pusha
ja
jo
adc
iret
jl
inc
ja
and
in
push
pop
leave
jae
add
loopne
pusha
xchg
imul
lock
cld
inc
or
and
ret
outs
shrd
out
push
out
fs
jo
xor
inc
out
iret
mov
and
mov
shl
mov
jmp
es
addr16
adc
scas
loope
daa
push
add
test
addr16
out
pop
pusha
adc
pusha
cmps
je
pop
daa
mov
pop
mov
fsubrp
add
xchg
out
das
into
enter
push
cwde
mov
add
mov
jg
das
mov
int3
add
add
dec
push
imul
push
xchg
mov
aam
or
push
ja
ret
add
add
add
push
mov
add
imul
xlat
inc
adc
push
inc
ss
xor
cmp
movs
xlat
imul
jnp
imul
dec
and
or
js
push
cmp
ja
mov
sbb
je
add
movs
das
out
adc
outs
push
in
jns
mov
push
push
xor
mov
pop
and
jbe
add
adc
add
out
jl
or
inc
jno
out
movs
js
rcr
mov
ja
rcl
adc
addr16
push
fisubr
xchg
mov
addr16
js
ins
ss
imul
adc
add
pop
pusha
addr16
sbb
add
pusha
ss
pusha
daa
xchg
mov
and
ror
ss
(bad)
(bad)
ins
or
and
push
add
mov
add
adc
ins
inc
(bad)
push
cmps
push
add
mov
add
loopne
mov
mov
push
add
daa
mov
ror
cwde
lahf
fdivr
inc
add
test
pop
add
jecxz
inc
xchg
clc
outs
ins
dec
adc
mov
ins
pop
mov
mov
inc
cwde
pop
ins
or
test
enter
in
mov
jbe
pusha
push
jg
cmps
pop
adc
outs
jbe
sbb
outs
sahf
outs
daa
or
sbb
or
bound
push
adc
cmp
push
mov
mov
rol
xchg
pop
xor
test
ja
js
cld
daa
outs
or
adc
aaa
in
dec
mov
addr16
(bad)
shl
jns
mov
push
push
ins
mov
pop
mov
pushf
mov
or
outs
movs
mov
add
outs
mov
mov
bound
fcom
in
push
clc
pop
adc
outs
pop
movq
mov
jo
pop
or
sub
jo
push
adc
aam
mov
or
xchg
xlat
scas
or
fmul
pushf
out
pop
sub
aaa
or
mov
iret
and
or
daa
or
inc
xchg
ds
jno
dec
add
jno
push
push
sub
jbe
xchg
jno
add
adc
jno
cmps
pmaxub
push
and
jno
pop
les
shl
in
or
pop
iret
mov
repz
in
ret
xchg
jb
xchg
jb
push
sbb
and
xchg
outs
movs
add
xor
push
scas
jb
lahf
pop
jnp
sbb
enter
nop
jbe
pop
jnp
pushf
dec
adc
(bad)
daa
movs
mov
or
out
nop
rcr
jae
push
adc
or
faddp
faddp
xchg
cmp
xchg
push
push
pop
inc
dec
and
xchg
cmp
in
ret
(bad)
out
pusha
mov
pop
enter
mov
fcom
test
pop
enter
je
xchg
and
ds
je
je
xchg
test
out
inc
dec
je
int3
es
cs
imul
push
mov
out
inc
lock
cs
imul
bound
div
xchg
jne
push
and
test
or
mov
push
xchg
fs
jo
mov
push
push
lea
jne
push
mov
or
mov
jbe
addr16
fimul
xchg
or
icebp
mov
inc
push
push
jo
push
fdivr
xchg
dec
js
ss
dec
cmp
mov
or
mov
loopne
rol
push
scas
js
lds
jbe
cmps
push
ja
xlat
sahf
ja
mov
and
xor
and
or
in
add
cmp
dec
push
mov
cmp
ss
mov
xchg
or
ja
push
mov
outs
mov
ja
cmps
fucomip
loope
aam
dec
ja
js
push
xor
add
test
in
ss
jbe
cmp
out
dec
addr16
mov
dec
add
das
cmps
js
fcomp
cmp
(bad)
js
push
pushf
aas
xlat
sub
lds
test
ins
mov
inc
fadd
clc
daa
dec
mov
add
lock
rol
jns
(bad)
fidivr
push
inc
aas
(bad)
jns
mov
es
add
es
adc
jns
push
aam
or
adc
push
loopne
xchg
mov
setbe
xchg
jp
push
xchg
pusha
popa
iret
and
xchg
outs
inc
xor
pop
iret
jne
imul
push
ins
aam
setg
daa
stos
ja
daa
adc
lods
aaa
jp
xchg
movs
loopne
push
int3
call
add
adc
cmp
call
dec
adc
push
push
push
mov
iret
xor
imul
das
data16
xchg
nop
push
pushf
xchg
mov
and
fisubr
aaa
ja
dec
loopne
pusha
mov
fwait
jnp
jl
push
dec
adc
xor
addr16
adc
cmp
adc
(bad)
jl
push
push
cmps
mov
pop
xchg
push
inc
jl
cmps
mov
mov
xor
test
pop
enter
test
mov
cmps
sahf
jl
cmps
(bad)
inc
cs
pop
fcomp
dec
aam
push
jge
jge
dec
lahf
and
nop
pop
jl
jge
imul
mul
jge
lahf
mov
pushf
lahf
or
jp
or
fadd
hlt
push
rol
(bad)
pop
mov
jge
add
add
push
ja
jle
ins
in
popf
test
jle
push
push
aas
mov
cs
pop
jle
mul
add
add
xchg
lds
imul
outs
jle
fbstp
rol
mov
test
jne
jnp
adc
lock
jg
or
or
rol
outs
jg
jg
adc
jg
neg
pop
adc
test
lock
mov
and
and
das
shl
or
push
adc
mov
mov
fld
xor
inc
xchg
xchg
add
fmul
out
ss
mov
ret
dec
div
pop
out
dec
lods
add
adc
test
jnp
xor
inc
adc
sbb
ss
imul
pop
cmp
or
or
add
in
paddb
adc
int3
mov
sub
push
pop
pop
push
loopne
adc
(bad)
adc
popf
sub
jb
and
xchg
push
sub
xor
sub
jo
sub
dec
and
bound
pop
fild
push
cmp
adc
test
inc
aas
xchg
out
daa
add
push
sbb
pop
mov
dec
xchg
(bad)
dec
js
push
in
(bad)
sub
cmp
dec
cmp
adc
sub
mov
jl
mov
mov
cmps
sar
or
lock
and
in
xchg
adc
cmp
test
test
cmp
nop
pop
enter
add
and
ins
lahf
jl
mov
and
lds
inc
lahf
bound
pop
enter
jnp
not
sbb
sub
dec
out
inc
dec
and
in
out
bound
lds
lods
mov
scas
mov
enter
fadd
test
xchg
in
adc
popf
xchg
push
adc
adc
and
clc
test
inc
xchg
adc
mov
push
push
pusha
xchg
test
mov
shl
nop
xchg
mov
iret
lods
enter
ss
or
iret
or
(bad)
clc
push
adc
push
xchg
xchg
mov
mov
inc
daa
push
dec
les
(bad)
icebp
outs
jmp
ja
dec
test
push
cmp
xchg
pusha
in
adc
jbe
cmp
in
and
xor
inc
and
into
mov
cmp
jnp
mov
mov
push
push
cwde
fsub
or
xor
int3
add
test
mov
rol
jg
adc
adc
adc
xor
ja
pop
push
jnp
pop
fimul
dec
sbb
mov
fs
aaa
adc
mov
pop
pop
sub
mov
sahf
mov
aaa
in
add
dec
cmpxchg
xchg
mov
lahf
mov
push
and
cmp
mov
dec
and
jbe
in
pop
scas
cmp
push
adc
loopne
mov
sahf
mov
and
jne
jnp
pop
mov
lahf
call
jnp
mov
xor
ss
adc
pop
mov
scas
mov
adc
pusha
cmps
divps
dec
pop
add
jbe
rol
mov
mov
shl
aam
call
movhps
inc
scas
paddq
add
aam
sbb
adc
mov
paddusw
cwde
mov
daa
sbb
sbb
push
mov
inc
mov
mov
ja
dec
call
inc
lea
pop
mov
add
dec
out
mov
lahf
lds
ins
jbe
jg
(bad)
sub
cmp
je
call
mov
ss
add
inc
or
mov
mov
pop
mov
adc
push
cmps
repz
add
mov
sub
repnz
sbb
pop
rol
xlat
mov
mov
fadd
scas
sbb
add
add
popf
cmp
fadd
push
sbb
int3
(bad)
fadd
inc
jo
pop
fimul
add
enter
ins
add
dec
inc
lock
sbb
ins
push
and
lock
fcomp
mov
rol
mov
pop
enter
xor
nop
mov
pusha
mov
outs
(bad)
rcl
out
(bad)
fisubr
call
rol
mov
lahf
ja
daa
dec
and
xchg
dec
add
push
nop
aam
in
nop
pop
jnp
hlt
lahf
pop
add
dec
in
rol
xchg
and
xchg
xor
inc
test
lahf
je
and
(bad)
mov
je
test
xchg
and
enter
je
(bad)
lock
out
xchg
les
push
sbb
xor
xchg
loopne
sbb
xchg
les
imul
xchg
xchg
and
sub
call
xchg
adc
es
xchg
sbb
ins
push
js
inc
xchg
(bad)
lock
xor
test
push
dec
add
xchg
mov
fdivr
xchg
test
pop
es
lahf
jb
cmp
sbb
xor
pop
or
fld
mov
rcl
iret
sub
pop
daa
mov
add
movs
push
mov
out
bound
nop
mov
es
in
shl
push
xchg
add
shl
and
adc
call
cmps
call
xchg
(bad)
adc
sbb
mov
or
nop
push
call
adc
or
add
ja
dec
loopne
mul
xchg
not
in
pop
iret
jo
loopne
mov
mov
mov
xchg
or
and
call
aaa
adc
mov
mov
iret
mov
sub
push
xchg
add
adc
loopne
hlt
adc
loope
push
jg
xchg
and
mov
push
add
in
pop
in
add
pushf
scas
and
in
pop
lods
push
les
pop
pushf
xor
inc
sti
es
sahf
xchg
adc
or
xchg
sbb
js
xchg
push
push
pusha
nop
cmp
iret
xchg
inc
lahf
js
jns
jnp
nop
lahf
mov
and
add
pushf
add
adc
clc
cmps
mov
xor
inc
test
out
mov
aas
ficomp
cmp
cmp
repz
push
jo
mov
push
pop
pop
xchg
pop
and
fst
dec
aaa
(bad)
js
ret
pushf
push
test
pop
and
pushf
and
or
outs
sahf
ja
pop
cld
fistp
enter
fisttp
ss
add
inc
mov
cdq
pusha
lahf
sbb
and
add
cdq
pop
mov
and
pop
fisubr
pop
xchg
outs
dec
shl
jmp
cmp
rol
loopne
or
sub
mov
rcr
jno
mov
daa
adc
call
xor
jmp
(bad)
(bad)
fbld
call
cs
imul
push
mov
out
inc
js
mov
inc
cs
imul
sar
sbb
and
push
jb
mov
out
bound
push
fwait
push
xchg
fs
jo
mov
push
out
lds
and
mov
les
sar
pop
mov
add
mov
cmp
je
dec
xchg
pop
push
push
xchg
je
in
popf
cwde
(bad)
es
(bad)
pushf
test
mov
ja
adc
clc
es
test
popf
add
pop
sbb
dec
add
inc
and
inc
inc
push
dec
xchg
and
cmp
jbe
xor
out
inc
call
clc
aaa
rcr
aas
push
add
adc
mov
call
call
adc
sahf
adc
sahf
and
fistp
aaa
scas
fiadd
pop
call
xchg
mov
das
jbe
or
in
mov
rol
test
cmps
(bad)
mov
outs
stos
inc
out
pop
inc
lahf
and
not
and
outs
push
les
adc
sbb
imul
in
lahf
inc
fs
lahf
cmp
push
mov
and
in
lahf
nop
mov
loopne
daa
bound
and
lahf
loopne
jbe
test
mov
scas
and
and
jbe
fadd
fmul
jmp
cwde
mov
mov
mov
and
mov
push
test
mov
push
xor
mov
mov
data16
test
mov
pop
inc
jo
nop
mov
cmp
pusha
pop
sbb
mov
ror
rol
fmul
pop
in
add
and
mov
inc
js
mov
adc
shl
push
jmp
push
mov
xor
enter
or
test
fadd
fnstsw
add
aad
inc
cs
mov
pop
mov
sub
xchg
js
jl
hlt
ss
add
inc
pop
mov
out
fsubr
lods
pushf
(bad)
cmp
jmp
ret
sbb
mov
test
fprem
je
mov
sbb
and
cli
jle
es
movs
dec
jp
or
movs
inc
push
push
es
das
movs
pop
int
xchg
pop
dec
daa
mov
(bad)
push
movs
mov
out
es
cwde
sub
mov
daa
xor
call
imul
ins
int
or
mul
popa
and
out
add
movs
test
inc
out
or
(bad)
jb
mov
mov
test
shl
xor
push
push
jo
mov
add
sbb
jbe
iret
repz
jo
fcom
sbb
jns
nop
stc
sub
push
push
iret
sar
call
stos
repz
and
push
js
out
call
shl
and
or
inc
xor
jns
js
in
hlt
push
jno
mov
rep
call
outs
lock
das
es
push
mov
out
dec
int3
lock
xchg
or
js
jmp
xor
out
movs
enter
js
out
ds
stos
ror
push
push
mov
fwait
int
stc
push
sub
jo
adc
out
push
ds
fimul
xor
mov
dec
repz
push
xor
sahf
out
outs
push
pop
shr
xor
idiv
inc
js
das
xor
out
lock
out
ss
aaa
aaa
inc
push
loopne
iret
sbb
cwde
loopne
cmp
push
push
cmp
ror
test
out
ds
nop
fsub
cmp
push
mov
xrelease
sar
sti
cmp
sbb
es
mov
aas
out
jns
cmps
test
inc
inc
fisub
stc
push
inc
ds
adc
jl
out
cmp
mov
clc
cmp
shl
mov
jns
aaa
push
push
js
fmul
inc
cs
xor
dec
push
dec
ja
cmp
inc
push
mov
push
lahf
out
ret
std
dec
xchg
dec
pop
push
fwait
into
adc
out
xor
js
push
pop
push
push
cmps
stc
cmp
sub
in
push
stc
out
repz
ds
shl
inc
and
push
lahf
cmps
ja
sub
push
(bad)
jns
out
pop
pop
sbb
pop
push
cmp
push
lahf
ja
push
leave
push
pop
push
push
mov
imul
pop
jb
cmp
ja
fdivr
pop
push
push
add
jae
call
jl
repz
pusha
mov
jns
loopne
popa
xchg
push
mov
loope
outs
mov
mov
mov
cmps
sbb
cwde
jge
ja
pop
mov
fist
iret
cmp
push
lock
push
mov
ds
push
jo
ss
aaa
clc
mov
fiadd
mov
imul
sahf
ja
push
pusha
mov
dec
repz
mov
lahf
cmps
stc
or
call
call
jo
jae
xor
out
div
jno
rol
jb
push
mov
jl
jns
jmp
je
push
xor
push
lock
loope
jbe
push
mov
out
outs
xchg
mov
nop
sar
clc
add
push
jns
fcomp
jp
push
pusha
and
loopne
sahf
push
mov
cmp
mov
ja
ja
push
shr
push
aam
cmp
and
sub
ret
mov
push
aaa
test
push
inc
test
push
mov
cmp
jbe
push
fisub
(bad)
push
popf
mov
loopne
into
sti
adc
xor
push
push
lea
push
out
mov
push
xor
iret
repz
push
mov
fsubp
mov
xchg
push
push
push
out
clc
xor
out
jge
jge
xchg
test
lea
scas
iret
repz
mov
sbb
lahf
cmp
dec
ins
mov
lahf
aaa
clc
sub
mov
stc
push
mov
movs
inc
push
xor
cmp
(bad)
push
add
out
mov
test
push
sbb
mov
stos
scas
push
mov
stos
lods
add
lods
es
push
fistp
mov
pop
push
and
push
mov
mov
mov
mov
ja
ret
cmp
push
push
fnstcw
mov
fsubp
jns
mov
or
fidivr
push
jmp
sar
or
mov
iret
and
repz
loopne
cs
iret
sbb
inc
pusha
and
loopne
rol
mov
repz
mov
or
outs
push
lahf
out
push
pusha
sub
out
repz
icebp
push
les
add
inc
push
mov
rcl
(bad)
cdq
and
mov
push
rcl
push
in
leave
out
xchg
cs
push
nop
ror
cmp
sub
bound
jns
int
push
js
clc
xor
fsubrp
repz
inc
push
stc
cmp
xchg
icebp
fidivr
jge
rcl
push
rol
rcr
lock
fwait
sar
push
dec
rol
pop
jl
test
scas
aad
push
xchg
(bad)
outs
push
or
xlat
dec
push
mov
dec
push
sub
out
pop
lahf
out
mov
cmp
xchg
test
jns
iret
fistp
(bad)
iret
repz
shl
dec
fadd
test
or
ds
mov
call
sbb
repz
fcom
into
push
jno
ret
out
mov
push
js
ds
repz
clc
dec
loope
loope
cmps
stc
mov
xor
cwde
daa
ret
retf
lock
xchg
out
lock
nop
ret
in
push
mov
hlt
and
out
jbe
out
idiv
sub
outs
push
mov
iret
repz
lahf
loopne
out
push
inc
pusha
xchg
repz
cmp
or
into
push
stos
iret
mov
jmp
fwait
rcr
jmp
push
push
jns
loopne
in
xchg
push
xchg
jns
loopne
fcomp
in
out
xchg
hlt
adc
ss
pop
mov
out
ds
mov
push
mov
out
pop
mov
out
sub
xchg
shl
cmp
out
sahf
add
push
fwait
shl
sti
mov
push
ror
hlt
pushw
sub
iret
repz
cmc
push
ret
repz
cmp
sbb
pushw
mov
enter
push
mov
sbb
mov
push
js
sahf
idiv
cmp
dec
stc
cmps
push
mov
out
fidivr
cli
out
xchg
mov
int
sti
push
js
fmul
sahf
out
call
out
fidivr
std
out
push
xchg
mov
aaa
clc
mov
push
loope
dec
push
pushf
out
sahf
inc
push
outs
test
add
nop
jns
int
sub
push
mov
xor
out
lock
add
out
call
cwde
iret
repz
fmul
add
popf
enter
imul
fild
sahf
out
xor
stos
or
dec
iret
mov
fucom
jns
bound
mov
inc
pop
cli
popf
out
js
add
or
add
call
xchg
mov
test
sub
movs
cmp
add
fcmovu
pusha
add
(bad)
(bad)
psubusb
test
imul
push
neg
cmp
or
add
add
push
pop
je
and
xchg
fsub
sbb
mov
inc
ret
fst
lahf
mov
mov
addr16
nop
jno
jo
dec
mov
iret
rcl
mov
daa
mov
push
or
lds
and
lods
jb
pop
jns
dec
out
and
add
add
adc
fnstenv
pop
call
arpl
or
cmps
sbb
aas
mov
daa
mov
cmp
jg
nop
ja
(bad)
pop
mov
outs
mov
cmps
loope
and
mov
pushf
pop
or
movs
or
test
loopne
cmp
es
push
mov
fs
rcr
outs
cwde
push
ja
(bad)
push
fld
sub
mov
or
outs
pop
mov
lahf
pop
push
mov
nop
add
xchg
mov
cwde
add
mov
(bad)
fcmovnu
mov
mov
popa
pop
xchg
pop
add
test
mov
pop
cdq
ret
aas
mov
in
add
movs
inc
loopne
add
call
xchg
mov
jmp
pop
dec
das
adc
ja
inc
jno
loope
pop
push
dec
ja
inc
fimul
cwde
iret
pshufw
mov
les
mov
mov
test
pusha
rcr
in
jbe
dec
mov
adc
xchg
or
test
cli
(bad)
mov
adc
inc
mov
pop
ret
or
mov
sbb
adc
and
shl
stos
test
and
lods
dec
dec
adc
daa
mov
ret
or
pop
in
ss
mov
mov
daa
xor
fmul
pop
push
xchg
adc
pop
mov
add
push
mov
inc
js
test
mov
xor
add
add
mov
cmp
or
pop
or
mov
mov
sbb
adc
push
and
sub
xor
xor
and
cmp
or
outs
or
add
mov
inc
cs
sub
adc
mov
lahf
push
pop
pop
mov
mov
cmp
add
mov
addr16
int
add
push
adc
mov
and
mov
pusha
scas
(bad)
add
push
adc
stos
aaa
mov
jnp
aaa
mov
jnp
and
(bad)
shl
popa
imul
sub
mov
adc
out
pop
out
fistp
inc
add
sbb
in
mov
pop
xchg
daa
aam
mov
mov
fadd
or
das
loopne
adc
js
js
out
inc
pop
add
imul
(bad)
cmp
or
mov
jnp
movs
imul
dec
mov
add
inc
lea
add
push
push
inc
lds
sbb
or
out
mov
or
ror
nop
mov
adc
push
test
mov
cmps
pop
mov
daa
sub
cmps
adc
pusha
outs
inc
push
or
push
push
setge
pusha
punpckhbw
rcr
jbe
xlat
push
mov
(bad)
loopne
ror
pushf
ja
psubb
rcr
pop
xor
ror
pushf
ror
pop
lahf
sbb
adc
push
mov
stos
das
ret
jnp
add
icebp
sbb
stos
iret
rol
inc
shl
daa
(bad)
xchg
fsubr
daa
cld
scas
and
jmp
pop
das
ret
push
pop
jl
cmp
loope
aas
sbb
sbb
push
mov
sbb
daa
push
dec
(bad)
popf
call
ret
popf
bound
rcl
pusha
sbb
and
dec
push
call
rcl
cs
dec
dec
sbb
fs
fisubr
ret
loopne
jb
pop
sub
sbb
sbb
shr
or
clc
lock
mov
adc
mov
cmp
(bad)
dec
fisubr
aas
les
loopne
dec
sbb
fmul
lods
faddp
aaa
dec
cmp
out
sbb
cld
sbb
hlt
add
sub
inc
push
fld
aad
lds
fs
inc
shr
je
(bad)
cmps
cmp
lock
sbb
fistp
sub
movs
push
add
(bad)
popf
adc
(bad)
and
loopne
mov
repz
(bad)
out
sbb
sahf
pushf
fsubr
sbb
sbb
ja
jb
push
(bad)
xchg
xchg
jb
sbb
daa
fcmovbe
or
mov
daa
daa
rcr
pavgb
call
add
add
jno
xor
push
add
and
mov
imul
lds
daa
or
call
loopne
dec
neg
shr
pop
stos
dec
sbb
lods
or
jg
cs
ss
shr
jbe
pop
jae
adc
das
jo
pop
imul
fwait
xchg
cmp
mov
push
test
neg
enter
cmp
pop
or
pop
lds
or
push
sub
push
pop
xchg
cmps
xor
inc
ja
js
add
pop
push
dec
dec
push
push
pop
xor
adc
push
popa
dec
push
xchg
enter
(bad)
ins
jae
in
or
aas
mov
jnp
(bad)
movsx
retf
jge
mov
psadbw
repnz
mov
sbb
sbb
pop
dec
push
jns
(bad)
xorps
das
and
pop
punpckhdq
and
sbb
and
fcmovne
xchg
daa
mov
das
ins
mov
mov
scas
nop
sub
fcomp
repnz
fninit
pmaxsw
stc
xor
add
xor
pop
and
fnstenv
aaa
push
cmp
cmp
and
retf
(bad)
cs
dec
retf
sbb
and
dec
add
mov
pop
mov
inc
or
lahf
inc
mov
push
push
pushf
popf
mov
mov
cwde
pop
or
aas
scas
(bad)
scas
test
nop
jge
push
out
pop
sbb
jg
xlat
das
push
fninit
shl
int3
inc
(bad)
mov
jns
shr
psubusb
test
pusha
sbb
pop
(bad)
and
add
push
out
pop
(bad)
es
push
dec
mov
shr
(bad)
aas
int
daa
sar
movd
and
and
add
xor
cmp
mov
sbb
das
lahf
or
dec
int
and
ret
lahf
int
lock
clc
btr
add
scas
and
mov
sub
adc
aaa
and
into
inc
lahf
push
inc
mov
and
inc
mov
cwde
das
mov
iret
mov
(bad)
outs
fsub
push
(bad)
in
xchg
(bad)
mov
ret
sbb
and
pop
and
pop
push
iret
dec
addr16
sbb
loopne
mov
(bad)
dec
mov
sub
mov
pushf
mov
in
in
jo
mov
push
das
mov
mov
ror
and
les
popf
push
ja
and
and
and
mov
and
test
xor
imul
pop
shr
or
xor
and
fst
stos
add
jb
add
(bad)
xor
xor
scas
xlat
dec
je
rcl
jo
lock
xchg
pop
and
rcr
mov
mov
or
lahf
dec
jo
pop
aaa
es
es
es
enter
jmp
or
in
daa
sub
pusha
daa
push
xor
daa
js
shr
add
ror
fs
enter
mov
daa
enter
ja
cmp
jg
mov
adc
daa
mov
mov
loopne
mov
pop
(bad)
or
add
cs
idiv
lock
mov
xchg
int3
jg
shl
es
cmp
daa
aam
pop
popa
in
mov
sub
sub
jbe
xor
xor
sub
out
iret
mov
into
hlt
jg
aam
cmps
push
adc
lods
daa
iret
dec
sbb
or
push
inc
push
pusha
aaa
push
out
fldenv
inc
dec
pop
sub
sub
or
test
add
call
sub
je
cmp
or
aas
enter
popa
das
mov
ror
(bad)
movs
(bad)
aad
daa
mov
movs
enter
pop
add
iretw
into
aaa
sub
out
sub
add
leave
test
(bad)
and
ins
daa
push
dec
inc
jo
out
sub
sub
mov
sub
js
fsub
test
in
lods
out
mov
daa
daa
mov
das
(bad)
out
mov
mov
rol
paddusb
out
or
repnz
mov
paddw
sub
or
outs
mov
adc
push
push
fcomp
mov
xlat
pushf
daa
ror
adc
sub
sub
push
push
nop
fldenv
daa
outs
sub
push
in
adc
lea
add
pop
fcom
movaps
jecxz
and
hlt
pop
xlat
in
dec
or
jg
jb
shr
addr16
mov
daa
fnstsw
fcom
fcomp
daa
mov
leave
add
lock
cmps
mov
fidivr
in
and
pop
daa
and
mov
cmp
xor
sub
sub
dec
dec
scas
in
out
loopne
mov
pusha
mov
daa
cwde
out
jo
jo
dec
dec
or
aam
fiadd
fimul
adc
test
mov
leave
ror
sar
loop
fisttp
add
enter
add
sub
mov
jb
adc
xchg
sub
adc
shl
jmp
fmul
add
sub
setno
out
(bad)
add
fbld
(bad)
push
call
in
(bad)
in
enter
adc
jo
leave
test
daa
cmp
jb
pop
pusha
fdiv
push
and
cmp
jecxz
fmul
lahf
or
fcmovnu
rcl
sbb
(bad)
fcmovu
dec
scas
cld
fisttp
fstp
inc
dec
add
fst
cmps
in
fnstsw
das
sbb
add
cs
fnsave
sbb
add
pop
xor
outs
(bad)
out
enter
xchg
cs
add
push
add
les
pop
cs
pop
sbb
test
test
jo
fmul
mov
mov
test
pop
push
add
jnp
cmp
fsub
fbld
daa
call
out
out
rol
out
add
adc
out
loopne
add
das
or
movups
sbb
xchg
pushf
or
aas
and
fistp
daa
mov
in
sbb
das
jo
push
das
pop
xchg
or
jb
pusha
das
push
xchg
xchg
cdq
mov
sub
loopne
(bad)
and
fmul
sub
daa
push
and
adc
inc
mov
xor
xor
xor
mov
jb
cmp
inc
xor
push
inc
and
add
add
(bad)
mov
pop
loope
daa
hlt
aas
adc
daa
pop
or
aas
nop
cwde
add
lock
and
loope
daa
jl
leave
inc
xor
lock
xor
xor
ret
test
loopne
xchg
push
loop
loop
daa
sbb
cmp
aas
xor
pop
dec
cmps
and
call
pop
xor
sub
in
and
loop
loop
daa
movs
(bad)
ret
leave
add
mov
in
test
mov
dec
adc
icebp
aas
xchg
mov
jecxz
jecxz
and
jl
push
dec
adc
fbstp
sub
adc
xor
xor
xor
lahf
jecxz
and
adc
jo
js
xchg
add
mov
shr
mov
icebp
xchg
pop
jnp
jbe
xor
wbinvd
pop
xor
xor
add
js
sbb
cmp
push
outs
in
adc
test
jmp
cmps
popf
pushf
fmul
mov
mov
cmp
xor
cwde
dec
cwde
pushf
push
aaa
xor
add
test
adc
add
loope
push
xlat
in
mov
nop
in
push
push
mov
mov
sub
push
das
or
inc
out
iret
push
leave
mov
xor
arpl
mov
out
addr16
mov
mov
in
xchg
pushf
dec
ss
adc
xchg
dec
cs
cmp
dec
cs
dec
push
xchg
xchg
rol
inc
lea
xchg
out
les
les
nop
pop
push
test
push
sub
add
es
sbb
test
aaa
mov
mov
aaa
shr
aaa
pusha
mov
sub
jo
js
adc
mov
nop
cwde
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
ror
fsub
xchg
xchg
xchg
loopne
idiv
add
sbb
jb
sbb
das
and
and
push
pop
cmp
das
push
inc
movs
mov
mov
fstp
push
xchg
std
out
dec
add
mov
add
sbb
xlat
adc
(bad)
jmp
aaa
sub
mov
daa
mov
cwde
ret
mov
mov
add
adc
pushf
xchg
cmp
cmp
or
or
jnp
push
fsubr
std
(bad)
cmp
pcmpeqd
in
sbb
es
adc
adc
adc
inc
adc
jns
repnz
js
sbb
inc
mov
sbb
sbb
test
outs
(bad)
mov
ror
inc
mov
frstor
and
in
xchg
das
cmp
sub
pop
sub
and
mov
ret
push
aaa
fistp
or
jmp
aas
push
in
or
xor
xchg
push
jnp
xchg
xor
cmps
cmp
js
jle
mov
xchg
pop
call
or
test
mov
aas
push
add
push
daa
test
ja
lock
(bad)
enter
xchg
adc
push
jne
and
test
sub
(bad)
call
or
ds
cmp
add
or
sbb
xor
sahf
pushf
pushf
pushf
inc
dec
pop
adc
adc
sub
enter
setp
movs
sbb
in
sbb
sbb
sbb
sbb
out
rcr
das
add
test
ds
add
pop
enter
out
out
adc
sar
cmp
inc
fimul
cmp
(bad)
add
outs
push
test
test
out
cmp
pop
jnp
mov
add
pop
fcom
mov
sbb
out
add
cmp
(bad)
(bad)
out
sub
pop
add
dec
dec
cmp
rol
out
nop
daa
fsubr
xor
out
fsub
mov
sub
pop
cmp
dec
movs
cmp
cmp
pushf
mov
pop
cmpxchg
mov
daa
daa
inc
mov
or
or
add
xchg
and
psubusb
jecxz
jmp
mov
mov
psadbw
add
or
pop
push
enter
mov
sub
fld
inc
sbb
pop
pcmpgtb
push
xchg
out
and
mov
pushf
shufps
and
and
push
push
outs
aas
daa
aas
mov
outs
icebp
ud1
bound
mov
cs
pushf
sub
mov
fucomip
xor
enter
or
icebp
enter
sbb
inc
lahf
repnz
adc
cmp
sbb
lahf
inc
arpl
or
inc
mov
fucomi
inc
mov
mov
das
pop
paddq
xchg
xchg
xchg
push
add
fisttp
in
ins
in
or
das
inc
add
or
lea
jb
adc
adc
aaa
cmp
mov
das
adc
aaa
jno
cmp
dec
pop
pop
xchg
or
repz
mov
mov
ja
ror
mov
pushf
loopne
inc
fistp
fcmovnbe
inc
jecxz
inc
ins
in
fldpi
or
test
add
or
inc
push
je
inc
dec
inc
inc
cmps
repz
xor
mov
je
daa
mov
repnz
and
xchg
mov
hlt
pextrw
shl
push
add
mov
inc
cmovb
xchg
addr16
aas
inc
clc
cmovae
add
push
push
sbb
sbb
xchg
ja
iret
jo
inc
push
cvtdq2ps
inc
data16
jno
cmp
dec
cmc
jo
leave
in
pushf
ret
test
mov
ss
mov
pop
fsubr
pushf
loopne
inc
sub
adc
inc
sbb
inc
jno
mov
push
or
inc
jo
div
cld
xchg
pop
dec
cs
jo
add
dec
pop
in
inc
add
sti
aas
jmp
mov
fs
div
adc
inc
sub
dec
inc
jmp
loopne
or
ins
daa
cmp
push
inc
and
cmp
icebp
rol
add
fsubr
push
iret
neg
and
inc
in
jbe
xchg
inc
jg
mov
and
sbb
setge
inc
dec
inc
out
shl
xchg
and
adc
inc
pop
pop
mov
mov
call
add
inc
mov
mov
add
je
clc
sbb
or
add
dec
xchg
clc
pop
(bad)
clc
movs
daa
sbb
inc
jo
pop
inc
adc
in
mov
das
inc
or
fisttp
inc
push
adc
clc
int3
push
pop
mov
stc
adc
(bad)
push
ja
and
xor
push
mov
inc
inc
xor
add
and
stc
pushf
daa
fs
sbb
mov
popf
pushf
pop
xadd
shr
cwde
test
xchg
iret
stc
aam
dec
push
push
cmp
cli
add
inc
push
lahf
stc
push
dec
nop
xchg
xchg
fistp
ja
cwde
push
test
jb
enter
push
rol
or
lea
or
dec
ror
jecxz
cmps
je
sbb
xlat
adc
jno
jno
out
sar
add
in
sti
or
shr
inc
sahf
loope
jno
dec
(bad)
dec
push
xlat
dec
pop
add
or
mov
mov
and
outs
dec
pop
fisttp
leave
adc
daa
pop
sbb
sub
dec
mov
daa
daa
dec
dec
dec
sar
jbe
sub
adc
fdivr
and
mov
add
dec
call
sbb
dec
sub
cmp
dec
xor
outs
inc
cmps
and
dec
dec
jo
js
jbe
(bad)
jo
mov
mov
in
xor
cld
movs
(bad)
lock
inc
inc
dec
add
cld
(bad)
cmps
sub
add
sub
std
adc
fsubr
and
pop
daa
and
dec
xor
dec
pop
(bad)
dec
dec
fsubr
enter
dec
dec
push
aas
dec
jg
dec
adc
in
mov
push
enter
push
pop
dec
call
cmp
xchg
adc
sbb
sub
dec
push
addr16
inc
cmp
nop
add
in
ficomp
sub
imul
and
dec
aas
call
movs
fistp
and
or
pop
dec
sbb
pop
mov
test
jmp
jo
in
jbe
addr16
sbb
seto
outs
mov
fwait
pop
rcr
in
pop
div
jmp
dec
xchg
mov
call
addr16
mov
ds
pop
add
mov
push
cmp
in
add
jmp
add
dec
sub
mov
mov
add
fsub
inc
dec
adc
sbb
mov
pusha
add
mov
inc
loop
cmp
pop
pop
add
mov
and
inc
dec
push
xor
mov
add
outs
inc
in
mov
push
push
adc
xchg
cwde
adc
mov
(bad)
xchg
add
inc
nop
ja
cmp
ja
xor
inc
mov
pusha
inc
aaa
pop
inc
js
add
push
push
inc
cmps
(bad)
js
push
push
call
jno
jnp
sqrtps
push
pop
ins
dec
push
ja
dec
mov
dec
add
(bad)
push
mov
dec
mov
sub
dec
sbb
pop
push
push
xchg
and
push
pusha
test
test
hlt
scas
add
daa
scas
push
jo
adc
mov
outs
lock
mov
js
push
das
add
push
push
leave
and
mov
add
xchg
add
imul
mov
pop
inc
ins
iret
push
add
int
dec
dec
fcom
into
add
not
test
push
xchg
mov
int
push
(bad)
push
push
mov
pop
dec
cmps
add
push
pusha
dec
addr16
mov
push
inc
out
rcr
cmp
pop
push
inc
out
sub
aad
push
push
xor
es
lahf
push
push
and
adc
rol
pop
mov
jo
test
sysret
(bad)
cmp
orps
push
or
push
adc
push
sbb
push
mov
sahf
adc
push
sub
movzx
icebp
or
imul
test
add
popa
jb
jb
js
sbb
push
add
js
mov
ins
dec
or
pop
adc
dec
or
sbb
rcr
mov
psubusb
loopne
dec
and
psubsb
aaa
lea
rcl
sub
lods
push
mov
add
(bad)
ficom
mov
(bad)
adc
push
pop
or
daa
clc
mov
adc
push
push
push
push
adc
outs
inc
push
push
pop
pop
add
cmp
pop
or
pshufw
mov
mov
inc
adc
ja
fild
jmp
or
jo
dec
mov
lahf
pop
iret
pop
sbb
push
inc
pop
mov
popa
and
das
pop
mov
jbe
bound
pop
dec
pop
xor
das
mov
add
lahf
push
mul
jbe
mov
mov
pop
add
cmps
pop
aas
into
mov
ja
sbb
enter
and
pop
xor
outs
mov
out
pop
cmp
cmovo
dec
mov
enter
push
pop
pop
or
pusha
or
leave
inc
shl
mov
leave
leave
cwde
mov
xchg
push
dec
daa
xchg
outs
or
and
loopne
or
daa
call
rcl
cmps
pop
enter
pop
pop
pop
pop
pop
leave
leave
in
enter
pop
pusha
push
jo
fisttp
out
mov
mov
imul
mov
jmp
add
les
add
push
or
or
ror
pushf
mov
pop
and
dec
push
addps
mov
cmps
push
lock
mov
sbb
ins
lahf
or
cdq
inc
pop
pop
lock
pop
mov
mov
addr16
add
or
add
push
pop
fisttp
icebp
or
cmp
pop
fisttp
loopne
push
xor
sub
mov
add
push
and
pop
dec
dec
pop
xor
in
adc
neg
(bad)
addps
pop
mov
setl
cpuid
adc
jo
aaa
packuswb
push
mov
or
out
mov
loopne
pop
pop
das
pop
dec
pop
push
ss
adc
pop
pop
push
punpcklbw
push
div
vmread
or
or
pushf
pushf
or
xor
adc
lahf
fsub
adc
or
add
data16
adc
pop
pop
add
aas
pop
pop
out
mov
ja
jo
dec
inc
jo
jnp
mov
ins
xor
addr16
rol
outs
shl
inc
add
push
jae
cwde
loop
shl
pop
mov
push
add
pop
fdivr
rol
(bad)
pop
add
adc
pusha
pop
push
leave
mov
push
jl
inc
shr
pusha
push
in
jge
ja
add
ret
pusha
test
mov
pusha
mov
jge
lds
movlps
inc
add
enter
sub
popa
and
inc
add
loopne
mov
je
stos
loope
imul
int3
aaa
leave
leave
inc
jb
sbb
popa
sbb
ret
popa
mul
aad
rol
mov
dec
jg
pop
daa
ins
or
pop
adc
bound
xor
pop
cmps
and
pop
aas
bound
or
das
push
jbe
bound
test
dec
cmps
es
adc
hlt
or
jge
add
jbe
or
xor
mov
stos
sbb
arpl
arpl
adc
or
and
dec
fst
maxps
or
push
xor
or
or
mov
xchg
arpl
(bad)
mov
out
arpl
(bad)
fild
jecxz
mov
addr16
and
xor
mov
lahf
push
ror
outs
daa
stos
lods
pop
cmps
fs
iret
push
jo
jnp
sub
add
cmps
adc
mov
mov
pop
xchg
mov
shl
fadd
pavgb
enter
call
clc
or
or
in
in
or
add
inc
pop
sbb
inc
mov
gs
gs
gs
fucomi
add
gs
xor
jb
nop
gs
pop
cwde
aas
cwde
pop
cwde
adc
pop
push
adc
mov
dec
test
das
data16
sub
push
dec
jecxz
in
or
cmps
jg
adc
je
daa
sbb
push
or
pop
pushf
daa
rcl
js
loope
daa
data16
add
outs
and
loopne
call
imul
add
sbb
addr16
sbb
outs
(bad)
push
call
or
cmps
adc
xor
inc
iret
dec
pop
cmp
dec
addr16
push
jb
mov
mov
add
xchg
aam
sbb
in
jb
sbb
jmp
push
sar
jbe
fsub
pop
jmp
inc
pop
push
or
addr16
push
sti
push
add
sysexit
xchg
jno
dec
sbb
mov
inc
test
xchg
inc
mov
js
sub
mov
push
jno
rcr
push
sbb
popf
pop
mov
addr16
out
lock
sbb
push
out
mov
mov
mov
sbb
and
add
in
push
jno
inc
mov
dec
lds
xor
jno
fst
mov
cmp
sbb
and
xchg
mov
push
xor
daa
(bad)
push
inc
daa
push
scas
dec
jb
outs
xchg
pop
mov
sub
dec
adc
hlt
daa
push
leave
inc
cmp
add
mov
adc
jbe
cmp
dec
daa
pop
scas
dec
mov
scas
xchg
push
xchg
movs
daa
mov
xchg
pushf
push
and
pushf
pop
cld
daa
and
add
or
sbb
imul
add
dec
inc
les
aas
pop
imul
pop
xor
and
dec
inc
out
ins
pop
ins
ins
xor
inc
or
and
mov
pushf
pop
pusha
push
xor
(bad)
ins
aas
ins
popf
stos
or
gs
iret
and
adc
ja
mov
daa
daa
pop
add
loopne
repz
pop
adc
cs
inc
and
mov
xor
fmul
ins
inc
pop
daa
ins
outs
mov
(bad)
packuswb
xchg
jle
int
lgs
aam
paddusb
in
or
cld
movd
add
push
jo
enter
push
outs
pop
fbld
fmul
adc
test
sub
jno
(bad)
pop
and
dec
adc
hlt
add
add
scas
pop
outs
sub
inc
push
ins
daa
xor
pusha
cmp
div
iret
push
dec
dec
int
jg
daa
outs
repz
out
outs
or
outs
adc
pmulhuw
enter
or
cmp
jbe
cmp
or
or
sbb
repnz
jbe
adc
adc
adc
xchg
push
cpuid
pop
in
ins
in
stos
sbb
sbb
mov
pop
loope
paddsb
neg
pshufw
out
pop
or
pop
jo
popf
loopne
inc
jo
fbstp
xlat
inc
sbb
jecxz
jl
and
xchg
xchg
fisttp
mov
mov
sbb
jo
iret
jl
je
mov
add
mov
push
daa
sbb
add
mul
push
jo
(bad)
jno
daa
jbe
outs
jno
out
and
pop
out
test
pop
int3
daa
add
(bad)
iret
jno
pop
xchg
jno
jno
inc
das
jno
and
dec
out
push
cvtdq2ps
popw
enter
jno
jns
jno
in
ins
in
or
aas
mov
das
pfcmpeq
leave
leave
lods
push
or
adc
pusha
in
fnstenv
retf
push
(bad)
push
inc
mov
jb
scas
jl
add
es
test
outs
daa
cmp
es
fcom
enter
jb
jb
rcr
dec
jb
jb
adc
pushf
cs
lods
test
mov
pop
xchg
adc
scas
push
pop
(bad)
loopne
sub
or
ror
verw
es
das
mov
mov
jb
enter
cmp
xchg
push
jb
jb
call
jbe
aas
call
sti
push
lock
clc
or
test
or
mov
add
sub
neg
test
mov
mov
mov
dec
scas
cmp
pop
jo
mov
jae
pop
js
lock
aas
pusha
add
lea
adc
sub
fmul
inc
sub
adc
or
pushf
pop
nop
cwde
das
mov
jmp
scas
push
jae
pop
fmulp
jo
mov
aam
fisttp
adc
inc
into
pminsw
cmc
das
je
sbb
jnp
fbstp
movhps
and
aaa
cmp
mov
xchg
outs
add
psadbw
aaa
sub
daa
sbb
adc
push
xor
je
in
(bad)
add
ins
in
mov
mov
or
adc
or
int
fmul
mov
test
dec
je
mov
jno
stos
xchg
sub
daa
xchg
sub
add
pop
sub
jecxz
mov
jne
call
call
popf
fmul
call
dec
rol
outs
out
out
sub
or
sub
(bad)
push
daa
add
popa
dec
ins
xchg
dec
jne
jne
pop
pop
sar
add
cmp
mov
xchg
jbe
das
inc
jbe
or
push
push
sub
cmps
fdivr
inc
fdiv
(bad)
xchg
jbe
mov
sub
jbe
xor
cmps
cmps
jbe
jbe
or
xor
jbe
pop
mov
pushf
push
shl
xchg
add
or
mov
add
cmp
aaa
sahf
sbb
outs
pop
(bad)
addr16
jmp
add
jb
in
jmp
test
add
or
adc
pop
add
or
or
dec
scas
into
sahf
mov
ja
push
(bad)
bndldx
add
addr16
and
ja
ja
pop
jo
adc
push
enter
mov
pop
loopne
call
lock
cdq
sbb
inc
ja
addr16
mov
cmp
inc
idiv
pop
fmul
jbe
idiv
lahf
js
(bad)
mov
(bad)
mov
jmp
pop
js
cs
mov
jns
jns
sub
das
adc
adc
mov
movs
xchg
sbb
jns
jns
xchg
cdq
sbb
cmp
xchg
jns
cwde
pop
jns
jns
or
mov
or
xlat
lahf
cwde
movq
adc
pushf
cwde
es
adc
sub
pop
or
(bad)
xor
inc
push
pop
daa
jmp
in
or
jp
rol
inc
(bad)
cmp
in
jp
rcpps
pop
or
in
outs
add
jp
jo
cmp
xchg
jg
inc
inc
call
or
sbb
loopne
js
inc
test
out
jp
jp
jmp
scas
add
and
xor
adc
lock
xor
test
jmp
out
data16
div
call
les
jg
cmp
jnp
jnp
adc
jnp
jnp
jnp
jg
les
xor
xor
cmps
mov
add
test
add
xor
(bad)
jnp
jne
dec
pop
jnp
sar
std
add
ins
add
pop
mov
dec
mov
(bad)
out
xor
aam
outs
pop
or
lock
jl
push
add
test
inc
jl
jl
pop
mov
pop
icebp
mov
aas
add
jmp
inc
loopne
das
xor
movs
rol
mov
(bad)
jl
add
jl
das
push
idiv
js
add
add
push
aas
jl
pusha
inc
in
jl
or
cwde
or
xchg
add
popf
or
xor
leave
add
daa
sbb
ror
leave
leave
fsub
iret
jl
adc
push
or
jge
jo
xor
or
sbb
ss
dec
outs
aas
or
or
jbe
push
rdtsc
(bad)
adc
es
scas
sar
rol
adc
popa
adc
xor
sbb
add
rcr
(bad)
jge
jge
mov
or
add
add
call
cmps
mov
mov
retf
xchg
mov
pmullw
mov
test
das
repz
sbb
mov
adc
ss
in
cmp
movups
sbb
adc
sbb
jb
and
comiss
sbb
xchg
mov
and
push
pop
push
pop
cvtdq2ps
xchg
ret
enter
out
ret
ud2
(bad)
jo
out
sbb
cmp
pop
cmps
scas
push
mov
js
test
stos
es
jle
mov
popf
jle
cmpxchg
inc
sahf
enter
or
mov
or
movups
and
adc
leave
enter
adc
adc
inc
xor
adc
jb
in
jg
sbb
imul
adc
les
push
(bad)
aaa
nop
or
inc
jg
fsub
mov
add
jg
cmp
arpl
aas
retf
ja
in
jmp
je
(bad)
add
mov
sbb
cmp
add
cmp
sbb
inc
jg
xchg
sbb
jg
pop
add
mov
adc
or
pop
push
jbe
push
ret
int
addr16
cmp
mov
push
and
and
add
push
add
xchg
add
mov
cmp
test
dec
mov
pushf
and
nop
out
cwde
fild
sub
mov
mov
or
pop
jmp
lea
test
pop
shl
addr16
sbb
cmp
cmp
arpl
rol
jbe
adc
xor
or
sub
or
mov
xor
cmp
push
bnd
xor
cmp
pop
shr
popf
cmp
xchg
add
dec
cmp
(bad)
fmul
outs
sub
push
scas
ror
aaa
dec
enter
or
fs
lock
jno
add
cmp
mov
cmp
in
adc
sbb
add
mov
cmp
out
test
psubusb
loopne
jmp
xlat
into
outs
das
test
xor
lods
cmps
mov
pusha
push
fcom
cmp
xchg
pop
and
pop
jno
aaa
dec
test
test
jb
xchg
mov
mov
scas
bound
lock
sar
push
adc
out
inc
ds
adc
aaa
lods
lea
notrack
test
xor
xchg
cmp
xor
xor
daa
xchg
xchg
xchg
imul
add
rol
xchg
fild
out
jo
cmp
fnstcw
jo
(bad)
(bad)
pop
cmps
aas
mov
sub
mov
xchg
dec
fst
and
xchg
shl
or
or
int3
push
jb
mov
daa
inc
or
fist
pushf
cwde
call
loopne
(bad)
adc
cmp
popf
das
xchg
push
mulps
mov
xchg
(bad)
or
or
cmp
add
inc
mov
clc
daa
shr
mov
mov
mov
fsubr
adc
scas
xchg
xor
xchg
jg
jne
jmp
inc
call
daa
sub
cmp
add
dec
adc
cmps
test
mov
(bad)
or
pop
adc
push
outs
loopne
jo
mov
and
cmp
inc
add
cmp
addr16
mov
dec
mov
psubusb
adc
cmovb
mov
inc
xchg
mov
or
mov
mov
cmp
mov
mov
mov
(bad)
jb
enter
pop
xchg
mov
inc
mov
xchg
or
or
mov
adc
adc
adc
adc
adc
xchg
and
adc
pop
sbb
jb
or
adc
sbb
daa
sbb
sbb
sbb
in
dec
pop
push
and
and
adc
sbb
and
add
jb
pop
pop
ins
pop
sbb
cs
cmps
dec
test
psubsw
xchg
pop
cmp
push
mov
aaa
loop
test
mov
(bad)
bswap
aas
sahf
fmul
(bad)
outs
mov
psubsw
or
sub
inc
cld
dec
mov
mov
adc
sbb
daa
mov
xchg
and
mov
dec
loop
mov
mov
arpl
imul
and
pushf
outs
mov
xchg
enter
mov
jg
mov
mov
mov
test
and
add
mov
jb
add
and
sub
inc
cmp
inc
sub
in
ins
in
sub
jg
cs
das
lea
jb
xor
sub
xor
mov
and
pusha
ucomiss
cmp
fnstsw
call
cmp
cmp
cmp
mov
adc
pop
inc
sub
inc
pop
xor
sbb
push
dec
orps
pop
ins
dec
(bad)
dec
out
ss
adc
into
stos
and
dec
mov
fwait
mov
les
iret
pop
ficom
repnz
in
das
sti
push
jle
sbb
adc
pop
daa
pop
xor
enter
pop
dec
add
cmp
pop
pop
imul
and
mov
mov
mov
aas
mov
shr
imul
push
imul
clc
das
in
ins
imul
pop
outs
(bad)
push
outs
nop
and
paddsw
jb
das
jb
jae
aas
push
(bad)
jb
leave
pop
data16
js
jns
cmp
xchg
xchg
jnp
popf
jl
jge
fst
mov
jg
mov
in
leave
adc
cmp
xor
scas
nop
seto
call
dec
ja
jns
popf
nop
pusha
ja
pop
jbe
or
dec
sbb
enter
ret
dec
pusha
addr16
dec
rol
xchg
sbb
sub
or
or
mov
rcl
scas
outs
daa
sbb
setno
or
mov
pop
daa
dec
ins
or
fsubr
dec
mov
jl
fld
out
scas
cmp
xlat
xchg
rcr
pop
cwde
or
xchg
adc
inc
seta
mov
add
adc
clc
xchg
loope
dec
and
inc
add
unpcklps
xchg
scas
xor
es
out
xchg
fcomp
mov
xchg
push
call
sahf
pushf
pushf
imul
mov
enter
xchg
or
jb
mov
mov
add
call
xchg
iret
adc
bound
adc
xchg
loop
call
dec
aam
dec
(bad)
jo
dec
mov
adc
mov
inc
dec
dec
aaa
adc
sub
mul
movs
pop
xor
cdq
stos
aas
lods
pop
call
or
xchg
and
xchg
fisttp
xchg
cmp
inc
dec
jb
enter
or
push
xor
test
sub
xchg
push
push
loopne
jo
xchg
mov
ret
pop
xchg
cmp
cvtps2pi
pop
daa
dec
clc
cmps
dec
ror
push
adc
mov
test
iret
adc
daa
daa
aaa
inc
loopne
lock
jb
clc
sete
or
inc
mov
sbb
and
sub
xor
daa
daa
daa
and
inc
push
pop
pop
shl
jg
ret
and
je
(bad)
adc
xchg
push
vmovlps
mov
fninit
adc
dec
clc
daa
bound
fld
mov
jbe
aas
xchg
ror
mov
mov
push
call
pop
xchg
lock
mov
xchg
cmp
add
dec
pop
mov
pop
test
aas
mov
xor
jnp
or
xor
sbb
dec
mov
in
(bad)
jno
pop
dec
pushf
pop
jo
rcr
inc
xchg
pop
outs
mov
xchg
mov
xchg
nop
setnp
dec
dec
dec
cmps
mov
or
in
enter
or
loope
jnp
cmp
push
test
adc
pusha
jb
jb
or
pusha
add
pop
push
scas
xchg
adc
and
sbb
and
mov
add
call
push
xor
call
daa
xchg
pop
xchg
fist
xchg
xchg
mov
mov
(bad)
enter
outs
xchg
mov
xor
outs
push
jmp
(bad)
or
scas
cmp
daa
cwde
push
cmp
addr16
leave
sbb
jg
cmp
(bad)
push
dec
shl
push
dec
or
iret
push
jb
mov
shr
xchg
fadd
(bad)
sub
ror
das
ja
inc
dec
mov
out
adc
mov
cwde
adc
into
neg
cwde
dec
daa
pop
in
xor
mov
jo
daa
daa
daa
daa
or
outs
pop
mov
mov
test
out
hlt
xlat
loopne
popf
pushf
pushf
call
addr16
scas
xlat
cdq
push
cdq
adc
inc
loopne
or
cdq
jg
sub
xchg
mov
xchg
xchg
xchg
or
cdq
cdq
cdq
or
int
inc
fsubr
push
cmp
lods
lahf
push
hlt
daa
mov
cs
fsubr
mov
fcomp
loopne
inc
jb
enter
adc
sub
sub
push
xchg
push
xchg
push
js
aad
mov
mov
sbb
push
inc
cld
lahf
cwde
pop
jo
fwait
add
mov
mov
pop
call
daa
daa
addr16
das
pop
pand
add
ror
and
or
or
daa
enter
and
pushf
add
shr
fwait
push
cmps
fwait
dec
fwait
in
add
call
vmread
mov
and
or
or
in
daa
fwait
test
mov
sbb
pmullw
loopne
add
neg
pushf
div
jnp
outs
pushf
or
pop
(bad)
sbb
jb
sbb
sbb
repnz
push
(bad)
popa
sbb
push
loopne
push
mov
push
cwde
xlat
push
loopne
test
xor
lahf
lock
jbe
imul
loopne
mov
add
mov
arpl
sbb
pop
pusha
sbb
shr
call
cwde
mov
popf
pop
popf
inc
out
push
cs
popf
out
popf
push
lds
outs
mov
divps
mov
popf
xchg
lahf
inc
dec
jno
popf
sahf
das
test
mov
popf
retf
popf
loopne
fucomi
fldlg2
jmp
psadbw
sahf
add
(bad)
pop
loop
jnp
pop
lahf
sahf
and
cvtps2pi
cmp
addr16
pushf
lahf
sahf
inc
sahf
dec
sbb
pop
sbb
mov
sbb
pop
jp
jne
inc
add
fwait
pop
cmps
and
mov
jnp
mov
and
daa
imul
cmp
sub
das
(bad)
aas
lahf
jbe
add
lahf
pop
pop
div
jb
sub
sysexit
das
inc
das
dec
xor
ins
in
ins
push
pop
popa
xor
ins
xor
das
mov
fucomi
xor
lea
cwde
cmp
mov
sbb
pop
scas
cmp
mov
bound
pushf
inc
pop
and
cli
aas
pop
pop
pop
les
movzx
lds
and
mov
lds
inc
push
adc
imul
push
call
arpl
sub
xor
in
adc
cmp
mov
repnz
or
or
or
outs
das
jbe
adc
jnp
xchg
das
mov
mov
jnp
push
bswap
pop
(bad)
in
mov
out
sbb
sbb
mov
and
or
pop
xor
cmp
jbe
add
and
inc
and
push
and
pop
adc
pop
and
jns
pop
jae
jle
mov
xchg
sub
sub
sub
or
std
out
iret
pop
cmp
test
cmps
aaa
mov
adc
outs
(bad)
pop
pusha
addr16
xchg
jmp
out
mov
lock
das
clts
add
add
fist
lock
jo
js
mov
adc
pop
daa
je
sub
push
pop
rcr
rol
js
enter
mov
aas
inc
push
(bad)
clc
push
or
outs
pop
in
dec
mov
pop
sub
hlt
mul
xchg
fwait
iret
mov
or
mov
out
xor
adc
divps
inc
lods
in
pop
mov
jmp
pshufw
jnp
popf
mov
cdq
push
shld
in
ins
imul
lds
(bad)
or
cmp
or
or
xchg
mov
cmps
movs
pop
movaps
xor
aas
mov
xchg
mov
cmovp
imul
mov
add
dec
adc
movs
mov
dec
jo
adc
shl
movs
fidiv
jmp
xlat
movs
neg
add
in
movs
adc
mov
movs
push
movs
xlat
fist
xchg
pusha
fisttp
pop
scas
sbb
jb
cmp
mov
dec
dec
mov
jb
in
sub
movs
iret
or
fimul
in
inc
mov
sti
or
pmulhuw
xchg
and
daa
adc
adc
adc
push
adc
and
pop
je
jg
sbb
jb
mov
xchg
sbb
and
mov
rcr
and
jb
enter
and
and
and
inc
mov
and
and
xchg
xchg
xchg
es
xchg
xchg
and
and
xchg
xchg
xchg
xchg
push
sbb
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
xchg
xchg
xchg
xchg
push
or
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
dec
sub
les
inc
push
dec
xlat
cmp
and
add
pop
(bad)
fsub
mov
and
call
mov
enter
cmps
mov
mov
(bad)
in
pop
fcom
pop
es
add
out
test
cmp
adc
test
fucomi
or
daa
test
inc
test
dec
imul
pop
mov
mov
lods
arpl
xor
adc
sub
xor
out
test
pusha
test
sbb
jge
fs
jbe
add
movs
daa
ins
out
fs
push
scas
test
test
xchg
popf
pop
shl
dec
in
inc
jo
ja
mov
sub
(bad)
dec
pop
js
dec
mov
push
sub
mov
push
sbb
adc
stos
mov
sbb
and
pusha
cmp
stos
cwde
ja
rol
inc
inc
cmp
push
and
sub
inc
bound
cmp
das
xchg
adc
jg
cmp
data16
mov
loop
cmps
or
inc
test
(bad)
stos
jo
add
sbb
cmp
jo
icebp
pop
addr16
scas
pop
cs
mov
jmp
popf
stos
or
scas
movs
jmp
sub
es
addr16
mov
rol
mov
dec
je
pushf
push
(bad)
inc
cmc
and
mov
lods
fild
cmps
adc
mov
add
outs
cmps
push
adc
fcom
(bad)
push
lds
xor
cdq
mov
lods
and
ror
dec
iret
lods
imul
jb
lods
pop
punpcklwd
or
dec
add
lods
mov
adc
imul
lods
sti
ja
iret
imul
pushf
scas
inc
scas
dec
push
out
sub
add
push
scas
leave
mov
push
daa
pusha
scas
pop
ds
and
mov
dec
popa
sub
daa
push
sub
into
dec
imul
imul
test
cmp
shl
push
(bad)
loopne
imul
in
and
jo
adc
dec
(bad)
scas
das
imul
mov
in
ficomp
scas
mov
add
ins
cmp
scas
mov
mov
test
pushf
push
ins
pushf
dec
mov
dec
ins
lods
daa
mov
daa
mov
daa
ins
adc
xchg
pushf
push
dec
jb
(bad)
pop
daa
ins
scas
xchg
mov
movs
mov
in
mov
scas
cld
jb
popf
popf
outs
or
outs
sbb
xchg
add
in
outs
push
fs
je
dec
scas
xchg
mov
lods
xchg
pushf
push
scas
xchg
mov
outs
daa
cmp
outs
adc
and
mov
test
push
leave
mov
scas
mov
(bad)
mov
dec
jo
jo
daa
sub
sub
leave
mov
je
test
and
fsubr
movs
lahf
scas
jno
mov
xchg
pushf
mov
jno
push
das
in
ror
leave
inc
mov
xchg
scas
mov
daa
in
shr
js
xlat
mov
xlat
fsub
add
mov
inc
test
jb
aas
mov
in
push
loope
pop
mov
pop
jb
out
or
ror
xlat
jb
mov
cmp
mov
test
xor
add
push
ret
add
mov
cmp
outs
cmps
das
jae
daa
cmp
in
jo
daa
nop
dec
dec
jb
fbld
stos
iret
or
data16
mov
inc
cmps
xchg
xchg
out
mov
btr
adc
mov
xchg
daa
sub
xor
dec
lea
adc
mov
je
inc
or
xlat
dec
rcl
xchg
addr16
shl
das
xchg
mov
in
lods
je
daa
call
dec
rol
mov
daa
adc
mov
mov
shl
push
iret
mov
push
psubsw
jne
dec
adc
push
or
inc
mov
mov
mov
daa
daa
mov
(bad)
dec
cmp
mov
jb
cmp
cmps
jb
xchg
pushf
jbe
rcr
mov
mov
lock
inc
rol
add
push
fdiv
push
jbe
iret
jbe
daa
push
int3
cmp
out
mov
mov
iret
mov
mov
iret
into
sahf
pop
cmp
(bad)
or
ds
inc
das
push
(bad)
add
popf
xchg
pop
fcomp
ja
daa
mov
out
push
es
cmp
sub
or
cwde
pop
cmp
dec
xor
ja
leave
test
imul
mov
daa
xchg
push
lock
(bad)
sbb
clc
mov
mov
add
or
mov
js
xlat
mov
cmps
in
(bad)
aaa
fnstsw
or
paddb
mov
mov
or
xchg
shl
cmp
mov
das
xchg
mov
mov
pop
jnp
bound
mov
mov
jp
aaa
fild
add
mov
mov
cmp
pop
sar
xor
enter
mov
mov
test
shl
dec
test
adc
add
setne
cmps
bound
xchg
jns
ret
cwde
dec
adc
push
call
push
call
test
xor
dec
push
or
enter
jp
das
lock
clc
fmul
in
add
das
and
xchg
mov
push
mov
inc
or
push
sbb
jp
js
or
jp
aas
or
pushf
mov
ret
aas
and
in
in
fst
cmp
xor
and
push
adc
sub
jnp
xchg
xchg
xchg
xchg
adc
jae
xchg
sbb
pop
sbb
sub
mov
enter
mov
pinsrw
cmp
jb
fimul
inc
mov
adc
xchg
and
adc
ins
in
pop
inc
aas
cmp
(bad)
adc
arpl
daa
jl
pop
cmp
enter
mov
mov
add
xor
jg
cmp
sar
mov
dec
adc
mov
mov
mov
aas
mov
mov
sub
jge
(bad)
pushf
push
fimul
adc
mov
outs
pop
jge
ja
push
movs
push
sub
dec
shl
dec
loopne
sub
xchg
dec
dec
mov
cs
dec
xor
cs
lods
mov
sub
cdq
das
mov
sub
fnstcw
mov
(bad)
jg
fldln2
inc
imul
mov
fist
mov
push
ins
mov
btr
jg
(bad)
push
cmps
or
push
lahf
mov
mov
cwde
mov
mov
xchg
leave
leave
fabs
jmp
adc
push
rcr
enter
rol
shr
pop
add
and
rol
pop
xor
cmp
sbb
pop
xlat
inc
shl
or
ror
or
ror
mov
sbb
mov
cmp
test
jmp
outs
sar
ret
jb
jb
adc
and
jb
sub
cmp
jb
jb
push
pop
pusha
jb
jb
push
dec
jo
mov
mov
inc
adc
add
test
and
enter
ret
ret
ffreep
cmp
ret
inc
ret
sub
rdtsc
push
cmp
inc
pop
push
or
pop
pop
sub
push
pop
cwde
pop
adc
daa
and
mov
retw
ret
cmps
ret
ret
mov
int3
adc
xchg
dec
ret
fwait
mov
xor
montmul
cmps
add
fistp
outs
mov
(bad)
pop
icebp
paddb
les
bswap
xchg
xchg
and
add
mov
xor
cmovns
ins
and
push
jne
aaa
xchg
inc
lds
pop
leave
cmp
pop
test
jo
loope
test
inc
aas
(bad)
ror
(bad)
ror
add
xchg
pinsrw
std
das
lds
fwait
cwde
or
lds
pop
iret
adc
fst
xchg
cmp
or
seta
or
loopne
adc
ror
mov
push
cvtdq2ps
and
cmps
lds
ins
jbe
or
call
into
sahf
cmps
lds
mov
add
lahf
rol
add
xchg
xchg
xchg
daa
mov
fs
rol
push
xlat
test
lds
mov
jg
into
jo
(bad)
sbb
es
xor
test
sahf
cdq
iret
(bad)
cmp
cmovno
jg
imul
mov
ins
mov
enter
xor
xchg
sbb
adc
add
dec
(bad)
js
or
pop
aad
cmps
xchg
or
pop
out
sbb
in
xor
(bad)
mov
mov
(bad)
mov
test
rol
psubusb
jbe
(bad)
mov
pop
enter
ficom
adc
sbb
jle
or
or
or
and
cmovs
push
adc
in
adc
push
inc
mov
mov
cmps
lds
jmp
cwde
popf
or
leave
iret
leave
or
dec
out
outs
adc
dec
ins
leave
mov
jnp
jp
test
mov
daa
mov
or
pusha
dec
cmp
mov
pop
(bad)
leave
js
ins
andps
pop
mov
add
test
cmp
test
mov
add
sbb
pop
add
inc
scas
nop
push
ss
mov
sar
adc
push
sbb
xor
push
leave
sub
mov
dec
and
js
cmp
enter
movs
mov
add
ror
fistp
push
cmps
into
test
icebp
pop
mov
leave
call
mov
sbb
pusha
dec
inc
cs
cmp
push
add
inc
or
jnp
mov
add
in
mov
push
mov
retf
adc
adc
lea
outs
retf
daa
adc
iret
lea
cmp
aaa
(bad)
shr
dec
pop
lea
leave
leave
add
outs
mov
dec
loopne
int3
mov
int3
pop
mov
or
mov
mov
mov
idiv
fdiv
push
mov
fs
jo
jo
inc
xchg
pop
adc
jb
les
jbe
outs
das
int3
fcom
lock
test
xchg
(bad)
and
add
in
xor
mov
(bad)
pop
(bad)
mov
sub
int
int
add
jle
lea
jb
add
add
mov
mov
jg
pop
in
xor
inc
outs
sbb
jbe
in
add
js
xchg
fisubr
out
into
xlat
nop
test
push
xchg
fsubr
mov
dec
leave
inc
inc
jo
mov
mov
xchg
adc
shr
and
iret
dec
xchg
dec
pop
fs
push
loopne
rcr
in
jp
fs
in
test
addr16
sub
(bad)
je
sub
xchg
cwde
int
mov
out
or
push
xchg
js
(bad)
iret
pop
add
push
dec
into
pcmpgtd
mov
jmp
add
xchg
jl
les
mov
mov
inc
cmp
xchg
mov
fcomp
cmps
pop
cwde
xchg
call
call
fs
jl
aam
enter
mov
daa
iret
shl
shl
call
xor
lahf
xchg
adc
in
repnz
and
pusha
pop
lock
or
cwde
pop
shl
je
adc
xor
imul
pop
xchg
les
ficom
or
dec
shl
addr16
xor
xchg
mov
retw
jo
adc
inc
or
dec
pop
rol
xchg
mov
pushf
daa
or
and
mov
clc
mov
and
test
push
xchg
inc
push
xor
in
pop
nop
xchg
adc
rcl
push
jbe
add
ja
jbe
cmp
pop
or
aas
jnp
pop
mov
adc
mov
jecxz
aad
shl
nop
dec
out
xor
dec
adc
aam
push
(bad)
dec
dec
shl
cwde
or
cmp
scas
push
xchg
cwde
cmp
push
xchg
cwde
pop
push
dec
pushf
or
jg
les
aas
(bad)
push
addr16
mov
aas
cwde
aam
in
jb
or
sub
sub
add
pop
pop
cdq
pop
add
mov
cdq
push
scas
loopne
add
mov
aam
outs
daa
adc
cmp
push
inc
fdiv
push
js
call
call
call
ins
pushf
rol
das
aam
jo
jno
(bad)
dec
call
aad
aad
add
or
mov
call
and
fwait
or
pusha
push
dec
fwait
inc
out
outs
fimul
popa
fwait
cmps
aad
scas
inc
into
sahf
or
aad
add
les
int3
inc
cmp
dec
dec
fwait
shl
and
push
mov
sbb
sbb
or
jle
call
les
inc
or
ret
pop
inc
adc
fstp
aaa
mov
pushf
enter
stos
stos
inc
neg
fs
popf
je
or
and
add
ret
ror
int3
xlat
sahf
adc
shr
lahf
popf
adc
lods
test
sahf
cmp
sbb
pop
sahf
mov
mov
ret
xchg
or
dec
retf
add
leave
nop
mov
sub
clc
mov
stos
xor
(bad)
fadd
push
xchg
dec
cs
push
xor
fsubr
pusha
(bad)
xchg
xchg
aas
or
cmp
aas
xchg
xor
xchg
popa
pop
or
in
in
test
in
jecxz
pop
test
seto
push
(bad)
pop
(bad)
mov
add
mov
pop
adc
add
add
hlt
mov
daa
in
dec
sub
fadd
ins
inc
(bad)
cs
les
sub
adc
and
pop
sbb
daa
inc
movlps
(bad)
fldln2
test
es
(bad)
lsl
jb
jge
das
in
jbe
fst
mov
in
in
retf
jb
in
jmp
fiadd
or
inc
dec
jo
das
ficom
ja
daa
or
cmp
xor
adc
pop
nop
xchg
lds
or
sysret
mov
scas
daa
mov
fdivr
add
jmp
and
fisttp
mov
in
inc
(bad)
push
test
aam
leave
pusha
mov
mov
cmp
int
daa
mov
and
fld
cwde
sub
mov
das
movs
addr16
addr16
sbb
or
jl
movs
inc
add
in
movs
push
daa
or
fimul
fisubr
in
add
out
or
cmp
jo
out
fdiv
addr16
imul
dec
and
pop
fcomp
adc
jg
ins
mov
hlt
or
add
push
jl
outs
pop
add
ror
rcl
int3
mov
in
enter
adc
or
or
mov
cmps
pusha
and
push
jmp
mov
daa
cmps
pushf
jg
sub
pop
rcr
or
pop
fucom
cmps
cmps
sbb
add
je
inc
ja
xor
fs
jmp
test
xchg
and
inc
and
test
leave
inc
jb
fiadd
leave
inc
jb
loopne
sub
or
and
test
sbb
xchg
sbb
test
add
adc
mov
test
(bad)
out
in
xchg
(bad)
pusha
xchg
fcom
cwde
mov
xor
or
push
iret
stos
dec
stos
cmp
adc
loopne
push
xor
cmp
scas
(bad)
inc
into
dec
into
pavgb
adc
inc
loopne
call
push
fild
mov
push
mov
pop
and
lock
loopne
and
xchg
pop
stos
(bad)
fisttp
xor
pop
add
loop
bts
or
imul
mov
stos
mov
bts
ret
xor
stos
in
push
lea
and
or
or
xadd
lods
cmp
sub
add
js
cdq
clc
cmps
lods
sub
daa
mov
loop
(bad)
addr16
cmp
imul
dec
adc
and
sbb
xlat
mov
ins
pop
jl
mov
dec
dec
xchg
scas
les
or
aam
in
jecxz
pop
adc
and
sbb
pop
mov
push
jecxz
in
push
aam
jecxz
pop
jecxz
pop
es
fistp
test
fisubr
cmps
scas
movs
xlat
lock
xor
frstor
xchg
in
dec
scas
(bad)
jb
inc
in
in
inc
ja
mov
jo
ror
xchg
scas
push
addr16
in
test
mov
ja
(bad)
fcmove
loopne
fisttp
inc
cmp
in
scas
hlt
push
add
sub
mov
cmps
das
mov
ja
mov
mov
mov
push
mov
cmps
jnp
adc
mov
xchg
(bad)
pop
xchg
cmp
lock
jg
or
xchg
sbb
out
sub
adc
xor
or
imul
out
(bad)
mov
addr16
or
sbb
pop
inc
(bad)
mov
mov
push
scas
out
dec
cmp
add
xor
fisttp
push
pop
je
mov
arpl
push
loop
push
mov
xor
and
loopne
lock
out
adc
inc
out
push
shl
adc
pusha
iret
or
add
call
pcmpeqd
mov
addr16
jo
loop
pop
mov
inc
call
dec
mov
pop
mov
jb
and
jbe
inc
pop
(bad)
call
and
(bad)
psubsw
addr16
(bad)
jbe
test
(bad)
mov
xchg
add
fisubr
cwde
jmp
shl
jmp
das
ja
mov
(bad)
mul
and
mov
push
sbb
sub
outs
mov
xchg
xchg
in
xchg
fild
jge
(bad)
loopne
out
cmps
add
jmp
mov
push
mov
xor
cs
mov
mov
and
pushf
in
add
xor
xchg
xchg
mov
sub
in
mov
push
and
jg
ror
pop
shl
fcom
and
lahf
add
sbb
mov
mov
dec
inc
aam
(bad)
lea
and
mov
cmp
mov
sub
dec
nop
(bad)
and
in
mov
rol
pop
and
mov
jbe
arpl
pop
out
adc
sbb
je
xor
mov
in
adc
dec
and
out
push
prefetchw
push
xchg
pop
out
xlat
mov
push
mov
fbstp
mov
cs
mov
fsub
fmul
mov
scas
mov
inc
inc
iret
out
push
mov
out
out
nop
push
xchg
add
and
ins
(bad)
and
dec
(bad)
mov
lds
mov
test
or
dec
push
lods
nop
and
and
mov
pop
mov
mov
in
rcl
sbb
lock
push
sbb
mov
mov
cmp
or
je
jo
inc
jo
(bad)
mov
sbb
inc
daa
icebp
and
sub
mov
int3
or
shl
cs
aas
mov
enter
movs
push
mov
in
push
icebp
mov
mov
lahf
mov
dec
popa
xchg
mov
lahf
loopne
fstp
jno
call
aam
mov
scas
mov
not
push
pop
(bad)
repnz
sbb
repnz
or
pop
stos
aaa
push
pushf
(bad)
jbe
nop
iret
push
rcl
mov
push
enter
rcl
loope
sbb
(bad)
sbb
push
outs
pop
jnp
xor
push
add
xchg
pop
jb
xor
jb
pop
jb
lock
cs
ror
pushf
dec
hlt
add
aam
pop
hlt
xchg
leave
inc
cmp
mov
mov
mov
ret
jb
pop
rcr
cmp
jo
sbb
inc
or
daa
fild
mov
loopne
inc
cmp
lods
ffreep
pushf
jno
daa
mov
pop
mov
cwde
pop
add
cmp
add
cmc
cmc
mov
mov
jecxz
out
les
test
xchg
mul
pop
or
xor
pop
xchg
push
mov
daa
lds
fisubr
jo
rcr
in
or
fcom
pop
call
add
test
mov
sub
imul
in
inc
test
and
leave
inc
jb
pusha
push
pop
or
add
mov
mov
xor
iret
cmp
clc
cwde
pop
cwde
ja
sar
psllq
pop
xchg
push
mov
hlt
or
xchg
fisttp
cld
dec
pop
je
push
or
test
or
push
lock
aam
push
add
inc
jnp
enter
cmps
sub
sub
aaa
(bad)
mov
inc
jecxz
mov
add
dec
sub
in
sub
jp
pop
dec
std
push
test
add
aas
test
bound
sbb
fild
mov
out
dec
mov
in
push
nop
in
xchg
inc
aas
xchg
pop
pushf
push
mov
mov
xchg
movs
popf
(bad)
lods
xor
inc
jb
jg
and
mov
test
mov
inc
sar
daa
fcmovu
mov
aas
sbb
call
mov
adc
push
mov
inc
daa
push
pop
pmaddwd
clc
out
add
inc
pop
add
scas
fisttp
or
dec
pop
(bad)
mov
stos
mov
push
or
inc
pop
mov
loopne
rdpmc
or
(bad)
mov
sub
adc
cmp
adc
ds
pop
mov
in
adc
mov
pop
jbe
push
in
mov
dec
adc
sbb
jg
mov
sub
or
fbld
dec
pcmpgtw
pop
mov
aas
loop
dec
das
mov
or
(bad)
punpckhwd
pop
mov
(bad)
in
push
jp
add
mov
xlat
sub
or
mov
jg
push
mov
jmp
sar
xchg
cmp
inc
aas
xchg
cmps
push
lods
adc
mov
mov
dec
xchg
arpl
outs
jg
cdq
push
test
push
cmps
mov
jmp
into
pcmpeqd
jno
movs
pop
aas
sbb
ror
cmp
fs
fistp
pop
adc
push
gs
psubsw
shr
(bad)
in
mov
cmc
lahf
ss
out
add
repnz
pandn
ror
mov
jbe
pusha
mov
stc
pushf
jg
mov
adc
(bad)
jns
pop
clc
adc
pop
stc
inc
rcl
adc
push
repz
mov
adc
add
dec
xchg
jbe
loope
adc
jmp
push
stos
lods
inc
mov
jg
pop
aas
ds
mov
ins
out
adc
lds
inc
adc
mov
aad
aas
loop
mov
inc
cmp
jns
cmc
rcl
xor
out
pop
adc
adc
pop
xchg
dec
adc
adc
jg
nop
movs
adc
cmp
fiadd
xchg
pop
push
inc
mov
push
loop
enter
fnsave
mov
int3
xor
aas
adc
and
sub
push
repnz
out
adc
sbb
cmp
dec
adc
ja
int3
dec
cmps
push
add
sbb
(bad)
adc
add
push
and
xchg
push
and
push
dec
inc
adc
adc
add
and
ret
add
inc
ins
aaa
inc
mov
add
push
aas
mov
and
xchg
pop
outs
pop
jb
sbb
push
mov
sbb
inc
inc
add
fadd
sbb
loope
arpl
cmp
aas
gs
ja
sbb
inc
push
jns
inc
or
into
or
ds
xchg
cmp
and
rol
jmp
dec
push
xor
or
ja
bound
mov
stc
das
mov
and
in
lahf
xor
mov
inc
push
and
lock
je
and
pop
adc
sbb
imul
imul
mov
cs
pop
fiadd
jae
jae
ret
xor
adc
push
popa
ja
ins
add
lahf
test
and
xchg
enter
cmps
add
xlat
cs
pop
jo
cmp
mov
leave
stc
iret
cmp
mov
add
shl
aas
xchg
dec
add
xor
xchg
(bad)
fcomp
inc
aaa
push
xor
fist
cmp
rcl
pop
iret
push
sub
imul
adc
(bad)
aad
or
pop
aaa
push
sti
xchg
sbb
mov
lock
push
outs
das
mov
js
ins
adc
xor
inc
nop
fwait
xchg
or
lods
mov
add
push
inc
xchg
cmc
call
inc
sub
int3
mov
mov
inc
stos
xor
pop
daa
addr16
fild
out
ins
popa
outs
mov
xor
stos
cmps
addr16
mov
inc
inc
loopne
xor
push
add
dec
or
and
mov
mov
test
push
imul
(bad)
movs
mov
and
mov
scas
mov
fs
jnp
xor
imul
dec
js
aam
sub
add
imul
ja
stos
add
push
nop
test
aas
add
push
and
add
or
jbe
inc
dec
mov
inc
sub
add
dec
jecxz
mov
pop
fldcw
into
loopne
dec
pushf
out
push
or
fbstp
fild
add
ret
dec
mov
jb
js
adc
xchg
pop
mov
jle
push
outs
outs
mov
(bad)
adc
gs
pop
ficom
sub
sbb
inc
jg
inc
mov
jne
gs
sub
clc
pop
inc
mov
pop
scas
sub
sub
aas
mov
out
xlat
ins
cdq
iret
repz
mov
jl
fs
cmp
repz
cmp
add
sahf
out
xor
call
jns
out
cwde
sub
aam
sahf
inc
sub
out
fiadd
xor
push
in
loopne
je
jns
les
jb
imul
imul
addr16
pushf
pop
mov
mov
add
fdivr
or
jg
push
pop
push
pushf
lahf
xor
sbb
outs
mul
mov
cmp
push
sub
xchg
aas
push
jno
sbb
mov
not
movs
mov
cwde
dec
sub
pop
cmp
aam
xchg
mov
xor
adc
dec
scas
and
xchg
icebp
test
push
jl
gs
daa
xor
shl
pop
fld
(bad)
add
or
inc
add
mov
call
push
js
fdivr
repz
int3
sbb
inc
pop
js
mov
pop
dec
je
cmp
jae
push
sub
(bad)
shl
rcl
dec
popf
aaa
punpckhbw
pop
ins
add
test
xchg
call
dec
mov
aas
pop
or
iret
dec
pop
mov
andps
push
movs
shl
test
sub
aaa
aas
daa
aad
push
sub
xlat
cmp
add
xchg
and
cwde
fnstenv
(bad)
pusha
dec
(bad)
ins
add
xor
in
add
enter
fild
xor
pop
fsubr
or
icebp
push
inc
add
lahf
mov
shr
and
mov
inc
inc
dec
xchg
mov
push
dec
pop
jmp
mov
inc
fild
and
fcomp
dec
mov
mov
daa
aas
adc
mov
dec
dec
ss
adc
sbb
out
adc
mov
or
inc
xor
push
test
out
inc
ja
and
adc
dec
dec
push
xchg
pop
inc
inc
pop
pop
dec
jp
les
pop
(bad)
jmp
gs
add
sbb
push
jbe
je
jb
sahf
out
jno
outs
outs
ins
out
sahf
out
imul
pop
dec
sbb
cld
xor
iret
repz
xchg
mov
aam
out
sahf
addr16
or
sub
pop
jge
jns
adc
or
out
sbb
jg
daa
add
sub
push
sbb
push
inc
in
inc
imul
addr16
dec
ret
mov
std
jp
pop
out
push
sbb
ins
jnp
mov
imul
dec
xchg
dec
sub
adc
jmp
scas
xor
aaa
(bad)
jp
fisttp
sbb
popa
sub
push
push
stos
push
sbb
inc
call
dec
xchg
or
mov
add
jne
sub
and
inc
popf
add
pop
or
ja
imul
shl
adc
push
pusha
inc
mov
pop
lods
inc
jge
xor
inc
or
std
imul
inc
push
inc
or
(bad)
push
xchg
jle
loope
pop
inc
lea
inc
loopne
cmp
dec
inc
js
inc
inc
popf
or
daa
adc
jl
lods
adc
pop
inc
ins
(bad)
fdiv
sub
fwait
pusha
dec
add
or
mov
jmp
inc
or
pop
outs
imul
push
xor
push
inc
ret
add
add
mov
mov
pop
iret
push
add
inc
pop
jae
mov
add
xchg
push
dec
int3
adc
xchg
push
stos
aad
sbb
lods
in
jecxz
out
(bad)
test
sbb
inc
xchg
jns
mov
mov
pop
punpckhwd
sub
aas
push
imul
jmp
arpl
cmp
dec
call
popa
ins
aas
inc
add
lock
cmp
dec
mov
popa
jg
out
inc
adc
lds
inc
inc
dec
shr
or
arpl
push
inc
inc
or
add
inc
fsub
imul
out
call
push
dec
aam
adc
xchg
add
cmp
stos
push
dec
inc
inc
aas
lahf
pop
push
inc
push
inc
push
call
and
fstp
sbb
jo
push
xor
sbb
add
add
fadd
xor
int
cs
cmp
push
or
mov
xchg
mov
out
xor
sar
sbb
jp
mov
call
inc
cmp
arpl
jmp
cmps
mov
ret
aaa
or
push
pop
pop
fistp
or
or
popa
add
mov
add
push
sbb
dec
popf
pop
add
les
sub
iret
cmp
mov
gs
fcom
pop
test
sbb
push
jo
push
ret
std
popf
and
pop
jae
push
inc
and
(bad)
xor
push
pusha
retf
sti
push
pop
sub
xchg
sub
ror
inc
inc
push
sub
aam
adc
nop
test
pop
push
jp
inc
inc
loopne
or
sbb
push
fisub
dec
sbb
or
pop
jb
and
out
ins
pop
pusha
pop
outs
js
or
nop
mov
pop
outs
aam
jne
dec
xchg
adc
outs
sub
pusha
mov
outs
xor
xchg
(bad)
jle
dec
and
lahf
scas
pusha
leave
pop
add
mov
imul
add
inc
jg
cmp
adc
mov
inc
movq
fimul
(bad)
(bad)
jmp
and
shl
jae
lea
jmp
fist
xor
inc
adc
(bad)
dec
sub
push
inc
adc
adc
xchg
dec
fwait
xor
add
test
cmps
push
or
call
cmp
pop
lea
xchg
aas
adc
push
cwde
mov
inc
jb
lea
mov
sub
sbb
push
rol
sbb
xor
pop
mov
cmps
push
dec
or
loope
inc
inc
mov
or
fisttp
scas
adc
mov
cmps
and
sub
je
dec
addr16
dec
sahf
adc
or
adc
pop
or
and
test
and
mov
cmp
lods
sub
jo
adc
push
inc
daa
xor
xchg
sbb
iret
pop
or
test
pop
dec
xchg
nop
mov
mov
adc
arpl
dec
pop
pop
jnp
sbb
les
imul
outs
loope
daa
add
les
lds
sbb
xchg
fiadd
inc
sbb
pushf
rcr
pop
push
inc
mov
and
or
popa
aam
das
popa
push
sub
das
cmp
aas
imul
outs
aaa
jg
rcr
aam
fsub
call
lock
out
or
sbb
cmp
pop
ret
sar
or
hlt
xor
push
xor
daa
sbb
push
cs
or
cmps
xor
jl
sbb
arpl
jb
dec
mov
leave
pop
inc
outs
imul
sub
inc
push
or
test
and
inc
mov
push
push
or
push
push
inc
inc
add
ss
push
mov
or
sbb
adc
add
ins
fnsave
pcmpeqw
jae
mov
aas
ss
add
outs
sbb
jg
arpl
ret
rol
fld
loopne
ins
nop
jg
std
in
(bad)
mov
mov
iret
repz
push
dec
dec
inc
cmp
cmp
repz
and
outs
iret
repz
mov
lock
call
in
(bad)
aam
cmp
repz
mov
repz
movs
push
pushf
xchg
mov
cmp
fs
push
inc
lock
or
xor
add
daa
shl
jo
movhps
pminsw
add
aad
aas
jbe
mov
or
aaa
call
push
add
adc
jb
mov
and
jbe
inc
push
addr16
das
push
movntq
out
outs
mov
mov
ins
push
and
cs
jo
jb
push
pop
sbb
jb
outs
iret
mov
sahf
pop
mov
mov
fbld
aas
xlat
jecxz
mov
or
aad
fbld
sbb
fild
add
add
(bad)
fdivrp
jg
rol
add
jno
mov
add
add
inc
mov
cmp
pop
inc
adc
fwait
js
data16
rcr
fdivrp
loopne
loop
js
sub
push
pop
ret
pop
adc
sub
or
sbb
(bad)
or
adc
push
cld
adc
adc
xchg
and
sbb
sbb
repnz
sbb
xchg
pop
xchg
and
xor
or
and
and
xor
js
jns
jp
lods
mov
and
adc
aam
das
aas
or
andnps
lock
in
arpl
adc
adc
pop
push
dec
dec
adc
(bad)
add
mov
nop
push
cmps
adc
daa
sbb
add
rcl
stos
cmp
adc
xchg
add
pusha
loopne
add
enter
and
cmps
fbstp
and
mov
cld
inc
jle
jbe
loop
test
shl
pand
pop
inc
setge
mov
in
sbb
in
call
mov
adc
push
ficomp
push
fisub
lods
dec
in
push
xor
fcomp
loopne
jo
sub
lahf
inc
add
mov
sbb
or
or
push
pop
mov
sbb
xor
cmp
sbb
add
ins
xlat
aas
pop
in
add
xchg
mov
mov
xor
jo
lock
icebp
(bad)
push
push
pop
push
inc
and
and
jg
or
mov
mov
mov
mov
cmp
cs
pop
iret
xchg
mov
push
aam
adc
xor
dec
ins
add
js
out
dec
ja
xchg
mov
repnz
not
call
fist
out
jg
adc
xchg
es
sub
sbb
sbb
retf
xchg
and
pop
dec
inc
adc
cmp
jb
and
aas
sub
(bad)
movsx
sub
(bad)
push
sbb
adc
and
or
or
(bad)
mov
mov
adc
cld
sbb
adc
(bad)
jb
retf
xchg
sbb
dec
cld
pop
hlt
and
sbb
lock
and
and
or
aam
psubb
out
jg
or
mov
xchg
xor
mov
jmp
add
ja
add
enter
mov
and
cmp
inc
pop
enter
ds
or
or
ret
lgdtd
inc
ds
adc
ret
call
sbb
leave
sbb
sub
ret
inc
and
sahf
mov
sub
inc
rcr
and
call
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmp
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
div
jl
mov
popf
sti
out
push
add
(bad)
inc
out
jecxz
repnz
test
(bad)
(bad)
push
movs
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
sbb
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
(bad)
(bad)
(bad)
(bad)
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
addr16
(bad)
(bad)
jmp
mov
sub
fwait
xchg
and
and
jg
int
int
add
aas
jno
or
mov
pop
fs
dec
lea
outs
adc
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
pop
mov
imul
cmp
(bad)
(bad)
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
(bad)
(bad)
(bad)
call
inc
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
(bad)
jmp
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
aas
(bad)
(bad)
(bad)
jmp
jmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
xor
lods
into
mov
cmp
std
xlat
cmp
(bad)
(bad)
(bad)
dec
call
cmp
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
(bad)
(bad)
(bad)
call
mov
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
(bad)
(bad)
push
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
loope
in
dec
(bad)
std
or
pop
ficomp
frstor
lods
xor
or
push
push
pop
inc
sub
push
push
adc
push
dec
and
add
aad
add
add
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
add
add
mov
jnp
(bad)
je
(bad)
(bad)
(bad)
push
imul
nop
pop
add
pushf
mov
xchg
inc
das
inc
and
sub
ret
fdivrp
(bad)
(bad)
call
movs
jp
jmp
ins
(bad)
call
ss
scas
cmp
sub
jmp
add
mov
aam
pop
fnstcw
cld
fldcw
icebp
xchg
idiv
jge
sub
(bad)
(bad)
(bad)
inc
pop
jae
sahf
scas
out
xchg
xor
push
sar
(bad)
(bad)
(bad)
call
push
mov
scas
retf
or
les
or
mov
adc
into
mov
aad
(bad)
(bad)
dec
xchg
push
mov
inc
or
cmps
adc
out
js
retf
push
js
pop
pop
xchg
fbld
(bad)
(bad)
(bad)
and
jb
(bad)
mov
or
cmp
vpaddsw
(bad)
(bad)
jmp
mov
bound
neg
stos
jle
fisttp
shr
adc
inc
inc
lods
scas
(bad)
(bad)
(bad)
jmp
mov
cwde
and
add
inc
outs
xchg
mov
cmp
inc
(bad)
in
xor
rol
idiv
push
xchg
mov
pop
push
(bad)
(bad)
inc
dec
pop
xchg
repz
jo
mov
and
lds
or
(bad)
call
fisttp
inc
mov
sbb
adc
(bad)
stc
xchg
shl
popa
cmps
jecxz
shl
mov
movs
leave
jmp
pusha
ror
out
fbld
jns
push
mov
lods
xchg
stos
dec
retf
(bad)
dec
or
push
ins
lods
int3
push
dec
inc
sbb
test
clc
or
das
fild
aas
out
mov
and
and
out
outs
inc
nop
jge
ins
jl
inc
cli
(bad)
push
(bad)
loope
mul
sub
pop
inc
jnp
cli
es
(bad)
fisttp
call
out
pop
mov
cmc
push
pop
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
ficomp
jns
jecxz
xchg
scas
and
test
sub
outs
lea
(bad)
(bad)
(bad)
call
das
pop
add
sbb
mov
sub
ror
enter
(bad)
(bad)
call
dec
pop
add
dec
cmc
test
xchg
aas
and
jae
xor
jl
lods
cwde
jne
iret
mov
jg
(bad)
call
cmps
jb
xchg
xchg
loop
loopne
int3
adc
sbb
ss
mov
pusha
push
xchg
mov
pop
mov
ja
and
xor
or
sub
repnz
or
fcmovb
(bad)
(bad)
(bad)
call
pop
mov
adc
fstp
out
xor
cs
std
sbb
std
(bad)
out
call
outs
xlat
push
cli
xor
cmp
cmovg
fucomi
mov
jle
xchg
call
imul
lock
(bad)
(bad)
jnp
xlat
out
fbld
fnstsw
inc
xchg
inc
movs
(bad)
jb
ins
adc
mov
adc
(bad)
push
pop
iret
jae
sub
jmp
inc
jns
dec
cmc
arpl
mov
jecxz
imul
add
(bad)
(bad)
dec
push
push
in
add
clc
add
movs
pop
push
loope
ins
ja
das
retf
scas
jno
lods
inc
xor
cwde
ror
dec
mov
loop
les
fmul
add
cmc
or
xchg
jl
getsec
fidivr
lods
xor
(bad)
(bad)
(bad)
(bad)
cli
and
mov
and
pushf
mov
sub
mov
fnsave
(bad)
(bad)
(bad)
inc
int
mov
dec
inc
inc
sbb
test
leave
lods
jmp
repnz
(bad)
(bad)
inc
in
xor
cwde
sahf
xchg
mov
add
xchg
mov
in
rcl
movs
cld
icebp
je
call
jmp
and
movs
ror
das
mov
scas
cmc
shl
jbe
xor
mov
push
aas
not
movs
sub
cmp
sub
lds
dec
sub
jg
neg
out
cmp
lods
xchg
push
sbb
addr16
(bad)
(bad)
(bad)
call
jge
or
push
test
xlat
add
fnstcw
pop
jno
out
lods
xlat
cli
movs
push
or
sbb
dec
add
or
sar
fimul
adc
ret
test
sbb
sar
push
cld
inc
and
bound
jge
aaa
clc
mov
lds
xor
adc
(bad)
(bad)
jmp
lock
push
scas
neg
loop
into
pop
and
stc
das
push
xchg
jmp
jnp
mov
inc
int
lahf
cmp
dec
jp
or
mov
aaa
pop
icebp
pushf
test
enter
fcmovu
cmp
call
mov
inc
dec
mov
icebp
cld
mov
daa
test
out
add
jmp
pushf
mov
enter
mov
add
push
(bad)
jae
push
lods
test
aam
sar
call
fiadd
popf
cmps
movs
jg
dec
bound
xchg
inc
vandps
mov
outs
int3
imul
xor
ds
jb
in
adc
(bad)
(bad)
(bad)
mov
mov
icebp
mov
jbe
or
in
aad
mov
ds
add
(bad)
jmp
loope
cmp
cmp
inc
mov
xor
in
jl
(bad)
fisttp
sbb
adc
add
fucom
push
mov
xor
or
ins
mov
imul
xchg
or
mov
xchg
out
(bad)
xchg
out
mov
movs
(bad)
call
cld
rol
call
(bad)
data16
arpl
lods
push
shl
stos
pop
cs
iret
adc
(bad)
call
push
test
dec
cli
xor
sti
inc
fcomp
ja
cmp
push
arpl
rcr
call
loopne
mov
in
scas
mov
jmp
pushf
mov
fstp
mov
ret
sub
dec
ja
cwde
mov
cmp
(bad)
stos
push
and
and
sar
enter
mov
pop
shl
push
inc
jecxz
xlat
das
movs
enter
xchg
inc
daa
(bad)
push
outs
jnp
push
(bad)
(bad)
jg
add
ror
dec
test
(bad)
push
xchg
inc
jecxz
or
dec
lahf
das
imul
add
cli
test
pop
(bad)
jmp
out
or
in
xor
push
mov
xor
(bad)
jae
call
(bad)
aam
mov
out
nop
sbb
xchg
cmps
dec
or
push
(bad)
(bad)
(bad)
call
scas
movs
pop
out
sub
fisubr
in
(bad)
aam
out
call
mov
lahf
jecxz
ud0
(bad)
call
jne
ss
bound
pushf
(bad)
out
lea
shl
xor
push
mov
(bad)
call
sahf
jecxz
adc
or
jbe
inc
xchg
pop
idiv
int
jmp
ds
push
push
sub
cdq
mov
imul
mov
test
(bad)
fild
jne
(bad)
(bad)
(bad)
in
lock
and
retf
cs
dec
inc
and
cmp
(bad)
jmp
stos
outs
cmps
and
cmp
push
add
pushf
lock
hlt
ficomp
ja
inc
sub
(bad)
(bad)
mov
hlt
dec
xchg
ret
test
xor
or
pushf
add
xor
xor
(bad)
(bad)
(bad)
in
xchg
sub
and
outs
(bad)
sti
add
out
clc
cmps
mov
or
push
aad
cwde
push
clc
(bad)
(bad)
(bad)
(bad)
call
push
sub
jl
mov
fsub
call
xchg
push
push
dec
sbb
and
test
xchg
aas
(bad)
(bad)
mov
fadd
imul
jge
scas
inc
call
push
jmp
adc
push
xor
pop
add
jmp
mov
(bad)
push
xor
(bad)
call
mov
sbb
in
mov
(bad)
jbe
jnp
lahf
cs
shl
cmp
jmp
xchg
scas
adc
jmp
stos
sbb
inc
dec
dec
dec
ss
jmp
push
push
sbb
mov
sbb
or
pop
shl
add
hlt
lahf
(bad)
(bad)
cmp
(bad)
xchg
jne
adc
xchg
fistp
arpl
push
cmps
ret
call
(bad)
mov
cwde
loope
mov
adc
jecxz
mov
or
sbb
call
in
imul
jne
mov
jecxz
lods
test
test
(bad)
(bad)
call
push
inc
jp
dec
cmc
(bad)
mov
mov
cld
outs
cmps
loope
outs
dec
test
cli
ret
dec
nop
(bad)
sbb
aas
add
cdq
mov
leave
clc
shl
popf
movs
out
(bad)
(bad)
jg
fwait
in
data16
lods
pushf
jge
test
jle
das
adc
inc
fwait
pop
mov
push
lods
add
jecxz
push
mov
(bad)
call
fisttp
cmp
xlat
jbe
bnd
div
push
nop
adc
loopne
retf
mov
push
std
inc
add
mov
dec
or
add
adc
(bad)
jg
(bad)
mov
lods
dec
cmc
mov
cmc
cmp
inc
inc
mov
(bad)
(bad)
jmp
into
imul
leave
add
pop
cli
int3
mov
leave
popa
or
(bad)
(bad)
(bad)
dec
into
jns
push
ds
add
ja
mov
inc
je
jle
aas
call
(bad)
(bad)
(bad)
inc
pop
test
sub
push
push
test
out
sub
test
arpl
cli
xchg
call
(bad)
(bad)
jmp
mov
sub
and
ret
push
(bad)
jns
adc
popf
idiv
(bad)
(bad)
dec
inc
pop
push
mov
inc
jp
push
mov
mov
cs
cvtps2pi
(bad)
(bad)
(bad)
mov
jl
jg
ja
adc
(bad)
mov
div
popa
dec
iret
(bad)
cmp
push
xchg
cld
call
push
loopne
push
pop
pop
pop
fst
movs
imul
into
jbe
loope
dec
test
idiv
or
xchg
and
sub
or
retf
sub
(bad)
(bad)
inc
push
add
or
aam
sbb
fsubrp
adc
xor
lock
scas
clc
add
or
mov
dec
push
mov
(bad)
(bad)
(bad)
jg
in
push
push
cld
fisubr
push
ins
xlat
ret
int3
mov
call
sbb
(bad)
(bad)
jmp
mov
arpl
mov
add
movs
(bad)
add
vmovntps
or
(bad)
lods
je
(bad)
(bad)
(bad)
jmp
mov
in
adc
cwde
adc
fdivr
jb
jl
jle
pop
inc
stos
push
xlat
mov
popf
(bad)
dec
or
js
inc
ror
(bad)
(bad)
(bad)
jg
(bad)
pop
ins
jg
pop
pop
adc
scas
push
mov
mov
xor
cli
ins
mov
call
aam
push
fisub
fimul
scas
add
cmc
ficom
push
pop
outs
retf
sub
pop
push
xor
movs
sbb
(bad)
(bad)
(bad)
jp
aas
scas
shl
into
out
ja
icebp
and
lds
add
mov
aas
sar
(bad)
(bad)
jmp
fs
out
movs
cmps
stos
lea
mov
mov
adc
in
test
lds
(bad)
(bad)
(bad)
(bad)
in
pop
mov
movs
loop
movs
mov
inc
pop
ins
add
daa
into
cmp
lahf
(bad)
push
out
lock
(bad)
(bad)
inc
ins
push
mov
jns
fist
adc
or
das
push
shr
test
mov
jmp
daa
mov
nop
out
(bad)
mov
int3
cwde
sbb
dec
mov
int
outs
(bad)
call
test
in
pop
ins
es
int3
xchg
xor
add
jb
ins
data16
push
daa
cmp
xchg
int3
cmp
jge
push
loop
mov
std
sbb
jo
out
fstp
inc
mov
jle
jae
(bad)
(bad)
mov
jp
popa
daa
imul
ds
stos
jnp
(bad)
jmp
push
add
jo
(bad)
(bad)
(bad)
fisubr
jno
or
stc
mov
clc
in
lods
mov
imul
(bad)
(bad)
mov
mov
clc
jnp
xchg
and
(bad)
(bad)
call
addr16
ds
jno
sbb
add
push
loopne
cmp
mov
adc
or
push
pop
sbb
in
sub
fimul
popa
cmc
mov
jmp
push
and
sub
sub
jb
mov
call
dec
mov
(bad)
out
pop
lods
jbe
cmp
pop
dec
into
jl
xor
test
jmp
and
(bad)
sti
idiv
(bad)
(bad)
call
pop
aad
into
add
test
sti
stc
sub
stc
cwde
loop
in
das
mov
lods
out
out
(bad)
(bad)
jmp
lds
adc
mov
add
dec
loop
ja
fstp
cs
sbb
cmp
cmp
push
sbb
inc
sti
pop
test
inc
fwait
retf
ret
test
add
shl
push
fwait
retf
fistp
and
jnp
(bad)
(bad)
dec
loopne
test
sbb
dec
dec
out
push
dec
push
dec
sub
(bad)
and
enter
jmp
clc
fld
out
lds
shl
je
popf
dec
push
es
or
shl
lea
fild
in
mov
push
rcl
and
(bad)
(bad)
(bad)
push
push
fadd
add
or
mov
push
das
mov
(bad)
mov
pop
fwait
loop
(bad)
(bad)
(bad)
(bad)
mov
add
add
sbb
jmp
pop
adc
jecxz
pop
jmp
adc
cmp
iret
cmps
addr16
lahf
je
cmp
cmps
and
loopne
retf
(bad)
jg
clc
loopne
(bad)
xor
mov
push
jnp
leave
aaa
sub
leave
sbb
dec
adc
out
popf
cmp
sbb
(bad)
inc
sbb
mov
cld
retf
aad
gs
dec
cmps
fidiv
sti
loope
xor
jge
shl
stos
fldcw
xor
mov
or
(bad)
scas
dec
(bad)
retf
aad
jno
push
outs
push
push
popa
sbb
pop
mov
(bad)
(bad)
(bad)
jmp
jae
sti
shl
sar
ret
jge
xchg
pop
inc
sub
cmp
inc
(bad)
(bad)
(bad)
jmp
in
push
mov
cmp
jmp
cmps
gs
fild
jg
retf
repz
dec
popa
push
aam
adc
cwde
lds
dec
enter
lds
scas
repnz
fwait
ss
adc
or
(bad)
lds
mov
adc
sar
pop
jbe
(bad)
call
mov
clc
daa
ret
sbb
and
sahf
mov
mov
test
push
jmp
ja
push
mov
rcr
lods
dec
test
add
adc
mov
ret
outs
and
(bad)
loope
test
sub
mov
ins
pop
enter
mov
inc
cdq
or
xchg
mov
sbb
jg
(bad)
(bad)
(bad)
std
dec
mov
(bad)
jmp
inc
sbb
es
cwde
fcomp
in
pushf
pop
movs
call
or
js
sti
push
mov
add
(bad)
jp
sahf
or
(bad)
je
cli
xchg
sub
xchg
ja
aam
and
in
sub
ins
xor
(bad)
(bad)
push
mov
and
inc
aam
pop
mov
mov
xchg
cmps
sub
jle
pop
ret
sub
and
repnz
out
(bad)
(bad)
(bad)
push
pop
inc
jmp
pop
cmp
ins
hlt
ret
jb
(bad)
pop
mov
nop
dec
inc
xchg
sbb
retf
and
xor
lods
sbb
push
(bad)
push
(bad)
jo
popf
test
adc
mov
add
mov
movs
push
ss
and
call
xchg
sbb
daa
ffreep
test
sub
(bad)
(bad)
cmp
mov
ds
loop
cmps
outs
cwde
sbb
inc
jp
mov
(bad)
dec
xchg
fcom
stc
pop
jp
ja
mov
aam
loopne
mov
pop
or
mov
cmc
call
shl
mov
push
sbb
sub
ret
mov
(bad)
dec
cmp
sbb
mov
iret
nop
or
pop
jbe
push
cmp
inc
jmp
dec
test
mov
inc
mov
dec
mov
adc
fwait
xchg
ret
add
(bad)
(bad)
mov
cmp
xchg
xor
rcr
sbb
fidivr
cmps
aad
scas
(bad)
(bad)
(bad)
mov
out
dec
fwait
mov
bound
pushw
push
or
std
xor
inc
ror
push
add
das
(bad)
(bad)
(bad)
mov
sbb
adc
movs
mov
jecxz
inc
les
lea
inc
pop
dec
add
mov
ror
leave
xchg
(bad)
fcomip
jmp
mov
pushf
jae
mov
ja
inc
mov
mov
test
aaa
cld
test
hlt
mov
sub
das
aad
push
mov
imul
rcr
adc
pop
jbe
fidiv
cld
mov
mov
dec
pusha
addr16
mov
xchg
mov
pop
cld
pop
mov
inc
out
pop
jo
lock
or
lldt
rcl
(bad)
push
jnp
sbb
and
mov
mov
ins
popf
and
(bad)
inc
leave
jnp
jno
outs
(bad)
mov
inc
call
and
call
test
jns
call
push
aad
(bad)
(bad)
jg
call
cli
mov
aaa
pop
sub
call
popa
mov
ret
(bad)
(bad)
(bad)
cmp
jnp
das
or
idiv
adc
sbb
xor
mov
es
rol
(bad)
push
cmp
dec
mov
or
and
neg
add
xchg
outs
(bad)
call
rcl
push
sub
(bad)
rcl
inc
mov
jns
aaa
sbb
(bad)
(bad)
(bad)
jmp
imul
out
loopne
das
sbb
cmp
jl
call
mov
aam
(bad)
(bad)
(bad)
push
jle
shl
add
xor
fsub
daa
inc
mov
jno
sbb
fldcw
(bad)
(bad)
call
push
fwait
or
mov
push
sbb
mov
and
jne
jle
add
add
fld
retf
mov
sub
sahf
(bad)
(bad)
(bad)
jg
aaa
psllw
push
jns
mov
iret
scas
sub
out
inc
test
mov
ins
xor
inc
fild
add
lods
scas
lods
fiadd
icebp
loop
sbb
lea
mov
out
add
fld
sbb
shr
scas
fsubr
sbb
(bad)
sbb
add
lock
(bad)
(bad)
call
xchg
pop
jo
cmp
jecxz
adc
fild
enter
pushf
xor
test
(bad)
(bad)
(bad)
jmp
inc
add
ss
push
aas
in
pop
mov
loopne
mul
adc
fwait
(bad)
(bad)
(bad)
inc
pop
popa
jl
fs
rcl
jmp
jecxz
pop
cdq
adc
mov
inc
cmp
(bad)
dec
pop
mov
gs
sahf
xchg
mov
test
fwait
jmp
ret
jmp
leave
mov
(bad)
(bad)
(bad)
(bad)
mov
adc
cmps
lds
push
push
dec
dec
cmp
inc
out
ret
add
and
adc
js
dec
xchg
(bad)
jmp
xchg
dec
xchg
inc
retf
jl
(bad)
push
pop
popa
pop
sub
jbe
push
adc
dec
xor
add
and
push
jmp
and
ret
jno
(bad)
call
xchg
movs
mov
mov
sub
test
dec
mov
fwait
mov
call
adc
cmp
xchg
mov
xchg
in
(bad)
mov
test
dec
pushf
xchg
mov
jmp
call
test
pop
inc
movs
lods
xchg
rol
sar
(bad)
(bad)
call
inc
adc
dec
jg
cmp
dec
cmp
fistp
outs
inc
add
inc
pop
sub
loop
ins
or
(bad)
adc
fsubr
push
inc
rcl
inc
imul
test
lods
cld
push
add
in
add
or
test
(bad)
mov
jns
out
in
pop
adc
and
jl
jge
sbb
xor
adc
or
(bad)
(bad)
push
hlt
xchg
mov
repz
fstp
push
inc
or
jle
xchg
pusha
test
inc
sub
clc
(bad)
(bad)
jmp
or
jp
jge
pop
iret
fstp
lahf
js
icebp
push
int
std
jmp
(bad)
(bad)
jmp
mov
int3
inc
mov
cmp
sbb
inc
stos
dec
outs
movs
(bad)
jmp
inc
mov
je
sub
loope
outs
cmp
test
and
or
adc
add
push
test
push
dec
mov
ror
and
imul
push
std
mov
test
movs
fistp
loop
fwait
mov
jecxz
mov
call
push
fnclex
mov
cmp
enter
mov
push
pop
(bad)
(bad)
(bad)
(bad)
jl
jo
mov
cmp
sti
movs
(bad)
sub
enter
movs
call
fisttp
dec
jae
jno
das
mov
sub
repnz
mov
loop
sti
lods
sbb
lahf
jmp
(bad)
(bad)
cmp
sar
push
retf
mov
mov
mov
cld
push
ret
jae
dec
gs
mov
mov
stc
sbb
movs
(bad)
mov
inc
fbld
fs
jnp
ret
inc
adc
movs
push
std
in
add
(bad)
jmp
push
jl
fiadd
sub
inc
pop
jge
mov
adc
lock
inc
out
jecxz
sbb
(bad)
(bad)
(bad)
cmp
fstp
push
mov
jne
movs
add
jae
rcl
sti
cmp
(bad)
(bad)
(bad)
jmp
jg
test
dec
imul
mov
dec
fisubr
retf
or
(bad)
(bad)
(bad)
push
mov
imul
cs
mov
aas
lods
xchg
dec
mov
(bad)
call
xchg
lods
sbb
arpl
push
loopne
fld
inc
pusha
(bad)
inc
(bad)
(bad)
(bad)
jmp
jb
cdq
fwait
icebp
add
in
mov
mov
jno
(bad)
cs
mov
pop
(bad)
fisub
mov
sahf
pop
and
jp
adc
mov
call
pop
and
(bad)
(bad)
inc
inc
add
dec
sbb
jnp
jnp
mov
mov
(bad)
icebp
(bad)
(bad)
(bad)
push
jns
sbb
push
xor
jp
or
cmps
or
adc
push
(bad)
(bad)
(bad)
jmp
jne
jae
(bad)
mov
push
mov
add
pusha
repnz
xchg
in
call
cwde
and
xchg
pushf
push
xchg
mov
fld
mov
xchg
imul
jmp
lods
adc
xlat
and
(bad)
(bad)
(bad)
dec
nop
pop
fdivr
scas
sbb
jne
push
pop
dec
test
pop
imul
xchg
clc
(bad)
cmp
loope
iret
ins
cmc
icebp
(bad)
(bad)
call
inc
mov
ja
fild
(bad)
push
leave
fisub
stos
push
adc
dec
loop
mov
xor
push
stos
jle
sub
call
jmp
jmp
adc
stc
dec
jmp
test
mov
sub
ret
xor
or
jg
(bad)
jge
imul
jbe
mov
(bad)
(bad)
call
cmp
test
fimul
sti
pop
mov
int
dec
fld
in
jp
mov
sub
jb
jge
and
adc
js
adc
ins
cld
push
aas
push
aam
sar
inc
mov
ret
cmp
js
jns
pop
stc
jnp
mov
rcl
add
jmp
push
sar
(bad)
(bad)
call
fdivr
mov
sbb
push
idiv
mov
push
aad
shl
xchg
test
sbb
(bad)
(bad)
(bad)
dec
fsubr
call
bound
dec
mov
out
ins
xor
fstp
(bad)
(bad)
dec
mov
sahf
dec
dec
inc
cmp
ret
sub
cli
push
in
int3
xchg
pop
into
out
adc
pusha
pop
jns
inc
call
das
scas
hlt
lods
jns
mov
call
jl
push
push
mov
ins
jmp
adc
hlt
(bad)
dec
mov
cmp
mov
push
jno
push
gs
(bad)
call
pop
adc
inc
jae
ret
fwait
rcl
mov
cmp
enter
cmps
pusha
xor
les
out
clc
jle
jecxz
add
lods
in
ins
arpl
mov
mov
push
(bad)
(bad)
jmp
dec
xor
and
or
sub
clc
fcomp
or
jg
(bad)
jmp
hlt
jns
sti
add
loope
mov
js
stc
ror
push
and
inc
sbb
jmp
mov
add
stos
(bad)
shl
imul
sahf
scas
call
loopne
js
or
stos
jb
mov
push
jmp
jge
xchg
out
jb
ss
aad
ja
or
jg
test
std
(bad)
pop
mov
fdivrp
and
xchg
int
mov
enter
cmps
call
sub
inc
xchg
xchg
ins
mov
adc
mov
sub
pop
xchg
pop
pop
push
fs
(bad)
(bad)
(bad)
push
in
mov
das
mov
mov
push
inc
fnsave
dec
call
mov
loope
cli
(bad)
(bad)
jmp
jg
int
repnz
nop
sub
popf
hlt
rcl
cmp
or
mov
cmc
cli
gs
fbld
ror
jmp
out
aaa
and
(bad)
(bad)
jmp
mov
jbe
jnp
mov
sub
mov
call
cdq
(bad)
(bad)
(bad)
call
mov
out
pop
jae
fabs
arpl
(bad)
jbe
rol
imul
test
std
popa
ins
cmp
inc
add
pusha
mov
xchg
dec
(bad)
in
push
fld
lahf
call
jns
(bad)
mov
mov
lods
push
fldcw
jecxz
adc
(bad)
(bad)
inc
retf
add
or
sub
xor
sbb
jmp
(bad)
js
xor
fstp
xlat
retf
pushf
or
mov
dec
frstor
jb
leave
(bad)
(bad)
(bad)
push
out
and
jne
xchg
xchg
push
adc
mov
cmp
add
cmp
idiv
(bad)
dec
push
xchg
cli
lock
jp
(bad)
rol
inc
(bad)
cmc
inc
mov
lds
mov
and
lahf
jns
pop
pop
sbb
sub
je
cmp
movs
xchg
add
dec
xlat
int3
inc
rcl
test
stc
addr16
dec
push
or
call
aam
icebp
pusha
mov
call
(bad)
(bad)
push
sub
push
adc
push
push
neg
loop
shl
jmp
mov
jle
rcr
fnstsw
add
add
and
lods
mov
(bad)
dec
outs
push
fistp
or
fadd
(bad)
(bad)
push
adc
stc
(bad)
out
scas
mov
or
(bad)
or
(bad)
(bad)
in
xor
ins
stc
repz
daa
das
data16
sar
xor
pop
jae
les
push
inc
mov
jmp
push
sub
stos
(bad)
(bad)
(bad)
mov
(bad)
dec
mov
js
cmp
sbb
pop
push
adc
jmp
aaa
fdiv
(bad)
cmp
xor
and
pusha
data16
jne
(bad)
les
jmp
pop
in
jmp
mov
retf
xchg
add
iret
clc
jb
push
cmps
mov
dec
sub
inc
mov
mov
push
mov
iret
jl
add
pushf
lds
sbb
jo
dec
dec
push
mov
(bad)
jg
cmp
mov
mov
or
jbe
loope
add
(bad)
(bad)
call
lods
sar
pop
xchg
push
mov
fsubr
adc
cwde
pusha
adc
ds
mov
jbe
sar
add
mov
add
mov
lds
daa
xor
in
cmp
inc
dec
(bad)
(bad)
(bad)
inc
rcl
cmp
mov
div
lahf
mov
fimul
aaa
mov
dec
mov
and
mov
loopne
pop
xchg
mov
cmp
inc
sti
mov
xlat
mov
inc
loop
add
(bad)
mov
adc
repz
icebp
jmp
fs
(bad)
(bad)
call
in
push
xor
push
rcl
out
xor
repnz
stos
pop
add
sbb
mov
(bad)
call
jle
xor
aam
loope
das
je
es
sbb
aaa
repnz
pushf
dec
sub
jmp
je
es
std
xor
pop
inc
test
out
fiadd
cmp
fild
mov
push
dec
sar
ja
add
mov
sbb
jg
ins
jmp
mov
mov
bound
in
bound
cwde
retf
movhps
lock
call
(bad)
fcomi
jge
mov
cmps
sub
pusha
dec
repz
out
stos
nop
mov
call
pop
or
(bad)
(bad)
(bad)
jmp
(bad)
fimul
repz
pop
(bad)
sub
loopne
test
mov
jl
je
aad
jmp
(bad)
(bad)
(bad)
ficomp
int
test
pop
and
and
cmps
mov
cld
adc
mov
cmp
test
and
and
push
(bad)
(bad)
(bad)
(bad)
inc
stos
cmp
daa
sbb
out
sbb
cmp
xlat
popa
inc
jbe
not
pusha
mov
(bad)
(bad)
push
in
push
mov
jno
pop
ins
pop
sub
retf
cmp
mov
mov
or
(bad)
dec
(bad)
inc
xchg
(bad)
js
cmps
leave
outs
ins
(bad)
retf
add
xchg
adc
push
dec
adc
inc
jp
jmp
std
sbb
das
mov
test
ret
jo
retf
imul
inc
rol
(bad)
(bad)
(bad)
call
add
add
mov
leave
mov
mov
nop
lea
call
ror
lock
fs
and
inc
push
jo
adc
cmp
out
push
jmp
or
imul
popa
loope
jo
loopne
dec
dec
int
xor
push
(bad)
(bad)
(bad)
jg
inc
getsec
push
push
mov
dec
jae
mov
stos
xchg
imul
mov
pop
jg
add
jno
mov
jo
gs
(bad)
(bad)
dec
push
ficom
cmp
adc
stos
ss
nop
jl
aas
mov
pop
sbb
daa
jb
add
bound
push
cmp
(bad)
popf
dec
rol
and
(bad)
xor
loope
not
imul
inc
call
sub
jne
jg
mov
out
and
(bad)
call
sbb
cmp
cs
shl
retf
in
mov
push
jns
sar
call
cmps
ficomp
adc
stos
les
test
test
cmc
jmp
rcl
add
ja
(bad)
daa
push
lods
push
ins
lds
or
stc
dec
sub
rep
stos
pop
or
mov
(bad)
dec
pop
addr16
movs
shl
jl
lods
shl
jmp
test
jmp
(bad)
(bad)
jle
push
imul
push
mov
cmp
pop
daa
inc
jns
out
into
mov
mov
(bad)
(bad)
mov
pop
inc
out
cli
xlat
push
ffree
popf
cmp
hlt
fldcw
js
gs
cwde
(bad)
(bad)
jmp
cmp
sbb
int
and
iret
cmp
loope
lods
push
mov
xchg
movs
mov
(bad)
mov
dec
es
mov
jo
in
fadd
pop
fist
ret
loopne
jmp
movs
cmc
addr16
cmp
pop
std
cmp
or
pop
fisttp
adc
inc
cmp
(bad)
(bad)
(bad)
inc
cmp
cmp
sbb
push
mov
mov
and
out
adc
xchg
aaa
cmp
(bad)
(bad)
(bad)
push
xchg
inc
in
mov
adc
outs
imul
stos
pop
push
mov
xlat
mov
(bad)
(bad)
(bad)
jmp
loop
cmp
lea
mov
shld
xlat
pop
adc
mov
fsub
mov
xchg
xchg
(bad)
sbb
pop
jg
mov
or
(bad)
mov
sub
sub
and
mov
fmul
mov
(bad)
push
adc
in
(bad)
jg
ret
xchg
pop
push
push
add
int3
sbb
ret
pop
stos
aas
push
push
(bad)
imul
add
cwde
pop
sbb
outs
fwait
sub
test
push
xchg
dec
sar
(bad)
(bad)
jg
scas
daa
into
inc
(bad)
adc
test
repz
sti
jns
inc
inc
xor
test
inc
call
(bad)
cmp
aam
retf
add
sahf
or
mov
cmp
add
icebp
adc
in
inc
clc
(bad)
(bad)
call
shl
cmps
mov
xor
adc
fsub
inc
fs
(bad)
jmp
ins
(bad)
retf
cmp
in
xchg
xchg
daa
(bad)
pushf
xchg
(bad)
push
mov
(bad)
(bad)
push
xor
jmp
aad
out
push
lods
pop
in
sub
imul
(bad)
(bad)
(bad)
call
jg
dec
into
xor
out
mov
jle
mov
sbb
jp
cmp
mov
(bad)
(bad)
(bad)
in
pop
fmulp
stc
mov
inc
pop
ins
dec
pop
push
adc
lods
and
je
mov
pop
in
sbb
or
lea
push
mov
imul
aad
add
shl
push
and
or
(bad)
int3
cmp
cmps
(bad)
call
loope
or
xor
ja
push
push
mov
and
jg
dec
xchg
sbb
pop
scas
add
xchg
jbe
mov
jno
movs
adc
test
inc
xchg
call
popf
push
cmp
push
mov
push
pusha
inc
lods
xchg
call
(bad)
(bad)
mov
push
out
jo
(bad)
bound
pop
gs
jle
xchg
shr
sub
inc
fsub
gs
fs
xchg
xor
cmps
popa
dec
(bad)
(bad)
dec
test
scas
neg
add
outs
mov
or
pushf
bound
(bad)
(bad)
(bad)
call
sub
jne
add
iret
retf
xor
inc
test
fisub
(bad)
(bad)
(bad)
(bad)
jns
ror
cmps
ss
mov
mov
xor
push
jmp
sbb
dec
ss
je
xchg
stos
sbb
push
cmp
int
sbb
cld
mov
adc
add
(bad)
(bad)
(bad)
call
fsubr
(bad)
sbb
dec
add
cli
retf
xor
hlt
xchg
enter
(bad)
xor
(bad)
(bad)
call
repz
xchg
fadd
sbb
clc
js
mov
ret
es
jmp
mov
ins
fwait
inc
mov
mov
pop
adc
inc
outs
mov
mov
sbb
sub
(bad)
(bad)
(bad)
(bad)
jle
mov
enter
lds
xchg
ins
adc
mov
mov
push
xchg
jb
gs
(bad)
(bad)
dec
dec
pop
jmp
pop
adc
ss
sbb
sbb
mov
retf
aad
retf
dec
fcom
dec
sbb
lods
dec
inc
mov
ds
(bad)
(bad)
dec
xchg
sub
xor
add
clc
adc
mov
jae
adc
push
sar
(bad)
jmp
xor
adc
mov
xchg
pop
adc
(bad)
ins
out
ins
jl
(bad)
(bad)
(bad)
call
movs
int
iret
mov
les
ret
push
adc
addr16
aam
jge
jmp
jecxz
inc
adc
(bad)
(bad)
(bad)
jmp
sbb
xor
push
(bad)
cli
movs
leave
sub
inc
and
mov
ret
loope
push
test
xor
hlt
call
xchg
cmps
stos
fwait
out
cmp
repnz
cli
(bad)
mov
pop
pop
or
shr
sbb
cmp
daa
outs
cwde
push
fidivr
test
aam
xchg
dec
scas
jbe
sar
sar
adc
mov
inc
jge
loope
hlt
jl
(bad)
(bad)
call
cmp
lds
push
pop
fst
add
stos
sub
leave
(bad)
dec
iret
sahf
xchg
cmp
adc
mov
add
in
mov
jnp
not
jp
(bad)
outs
fist
scas
nop
inc
jl
pop
adc
push
dec
cmp
retf
cmps
jo
and
fcomp
jp
xchg
fcomi
(bad)
(bad)
jmp
pmulhuw
int3
out
cs
mov
mov
hlt
mov
cmp
dec
push
jb
or
push
movs
mov
fsubr
dec
push
out
jg
(bad)
call
mov
pop
and
retf
jns
mov
fsub
jnp
pop
add
in
(bad)
(bad)
(bad)
(bad)
cld
cdq
push
cmp
dec
cmp
cmp
arpl
ja
cmps
cmc
push
les
or
dec
ja
dec
ja
aaa
std
jnp
out
jle
(bad)
repnz
push
push
or
push
mov
sub
xor
outs
retf
das
in
call
(bad)
(bad)
(bad)
push
lock
lahf
ss
lods
ret
outs
in
push
not
in
retf
inc
cmc
in
or
push
cmps
outs
retf
movs
test
inc
dec
jmp
jge
inc
push
mov
das
shr
sbb
mov
mov
leave
add
jmp
arpl
jns
data16
(bad)
mov
ret
and
fcomi
dec
clc
ins
jo
(bad)
(bad)
(bad)
call
sbb
mov
std
idiv
mov
pusha
adc
inc
xchg
pop
mov
std
mov
or
jmp
icebp
xor
int3
cld
imul
scas
std
mov
cwde
aad
retf
lea
mov
push
or
push
mov
(bad)
(bad)
call
rcr
movs
adc
dec
dec
sbb
in
dec
outs
(bad)
xchg
mov
jo
cs
jmp
ret
add
arpl
arpl
jb
sbb
sub
(bad)
(bad)
mov
shr
dec
aaa
lds
rcr
cmps
lea
push
enter
mov
(bad)
(bad)
inc
or
jecxz
jmp
push
ins
gs
mov
cli
xchg
jge
mov
jg
and
in
mov
aam
int
(bad)
in
lds
(bad)
(bad)
call
stos
add
pusha
out
mov
gs
xor
xor
mov
add
(bad)
(bad)
(bad)
call
fbstp
cld
sub
ss
aaa
les
push
push
mov
xor
inc
push
sbb
std
xchg
adc
rcr
outs
mov
addr16
mov
mov
leave
xchg
(bad)
lods
or
shl
in
xchg
cld
dec
cmp
out
xchg
test
aas
call
das
cmp
push
mov
mov
fbld
cdq
hlt
add
mov
(bad)
movs
mov
test
add
inc
xor
hlt
(bad)
(bad)
(bad)
(bad)
cmp
push
int3
mov
in
rcl
jl
mov
cmp
lds
fucomi
push
cmp
mov
add
(bad)
dec
loop
adc
push
xor
xor
and
cmovs
pushf
mov
sbb
cli
(bad)
(bad)
call
or
imul
or
into
and
call
ins
adc
ret
xchg
inc
mov
mov
add
(bad)
jmp
sbb
mul
std
lea
repnz
test
(bad)
xor
ret
in
leave
lock
(bad)
(bad)
(bad)
in
xor
rol
inc
fmulp
adc
jge
test
sahf
lock
loopne
pop
hlt
xor
(bad)
jmp
clc
jno
loope
xchg
leave
aaa
cmp
jge
loop
rol
add
adc
mov
(bad)
(bad)
dec
sbb
xchg
lahf
dec
rcl
adc
lock
bound
dec
test
add
(bad)
(bad)
(bad)
call
push
cmp
es
push
cmp
or
sub
mov
pop
sub
fstp
inc
push
test
sbb
cli
pop
jp
stos
movs
sub
and
adc
dec
(bad)
jmp
(bad)
xchg
icebp
fmul
cld
pop
nop
mov
mov
cmp
sahf
sahf
pop
sbb
dec
shr
lock
(bad)
push
jmp
(bad)
in
pop
call
stos
daa
mov
pop
pop
xchg
(bad)
(bad)
call
add
mov
xor
loope
or
xchg
push
jb
pushf
pop
ja
ds
outs
imul
clc
jnp
enter
mov
and
sub
push
std
cmp
ins
mov
ins
fnstsw
sbb
(bad)
(bad)
cmp
and
add
push
jb
sbb
cmp
inc
sub
and
mov
mov
cmps
ins
retf
fstp
call
mov
nop
imul
ret
add
aas
ret
or
aas
or
(bad)
push
adc
lahf
jno
mov
dec
cmp
adc
pop
mov
push
das
pop
lea
add
dec
icebp
or
outs
sub
lock
outs
retf
cmp
add
outs
pop
sbb
out
inc
sub
(bad)
push
xor
mov
fimul
daa
lock
movs
and
cli
jmp
jno
jmp
push
pop
cmp
cmc
outs
xchg
(bad)
xchg
adc
push
jp
jne
dec
leave
pop
mov
dec
xor
mov
sbb
jo
movs
stos
cwde
mov
push
pop
fist
out
fdiv
(bad)
(bad)
jmp
inc
mov
or
dec
in
lar
sar
into
pop
mov
(bad)
mov
div
jmp
adc
(bad)
push
out
mov
test
pop
outs
(bad)
dec
leave
sbb
stos
dec
hlt
or
(bad)
(bad)
(bad)
jmp
push
sbb
stos
sub
pop
adc
push
pop
(bad)
ds
push
pop
xor
rcr
sub
mov
(bad)
adc
repnz
(bad)
bnd
inc
sub
adc
pop
or
pop
cmp
mov
(bad)
(bad)
jmp
test
std
fild
neg
into
mov
lock
jle
sbb
rcl
pop
addr16
mov
cwde
rcr
dec
mov
in
or
pusha
test
or
mov
test
or
sbb
mov
mov
jp
ret
std
fimul
xchg
bound
js
(bad)
xor
mov
call
dec
jg
adc
jmp
in
fst
loopne
(bad)
mov
add
es
sbb
and
and
in
out
(bad)
(bad)
call
adc
or
fwait
fs
es
sub
dec
sub
cli
or
fcmovne
sub
or
(bad)
sub
in
or
and
scas
xor
(bad)
(bad)
inc
ss
icebp
fstp
push
mov
stos
repnz
stos
cmp
jmp
mov
or
movs
mov
clc
jle
adc
aad
adc
jle
mov
pop
pusha
push
jle
and
inc
inc
fisubr
out
mov
adc
data16
jecxz
icebp
(bad)
jmp
aaa
call
scas
fdivr
int
adc
jle
in
test
int
inc
mov
pop
inc
mov
pusha
stos
jne
std
imul
cmp
int3
and
(bad)
(bad)
(bad)
jmp
stos
ror
cmp
fidivr
daa
dec
jecxz
cmp
push
aaa
hlt
inc
sub
loope
inc
sahf
push
xchg
jg
(bad)
jmp
sbb
mov
or
test
mov
cmp
gs
push
mov
(bad)
(bad)
inc
(bad)
loope
retf
xchg
sub
mov
je
out
sbb
add
lahf
or
inc
outs
idiv
scas
cli
outs
push
mov
stos
test
test
movs
into
dec
dec
shl
cmps
xor
ins
call
ret
adc
call
push
push
jmp
mov
sub
mov
out
mov
nop
(bad)
(bad)
(bad)
in
fcomp
ins
fs
retf
fldln2
mov
enter
fistp
dec
and
(bad)
(bad)
push
movs
loop
add
cli
dec
jge
mov
inc
outs
mov
sbb
cmp
inc
add
jb
fucomp
jmp
je
cmps
sbb
push
sbb
cmps
dec
cld
(bad)
call
dec
out
mov
sub
lock
retf
cmps
push
mov
sub
jg
(bad)
jmp
and
mov
xchg
inc
in
jnp
lock
jns
call
and
out
repnz
xchg
xor
pop
or
jbe
mov
fld
bound
dec
scas
lahf
cmp
fimul
pop
jg
mov
shl
aad
push
loop
xchg
jns
mov
loop
adc
test
sub
add
(bad)
(bad)
(bad)
jmp
test
(bad)
cmp
jmp
xchg
lods
sub
adc
xchg
xor
fwait
push
not
and
repz
les
mov
movs
xlat
jb
scas
pop
call
xchg
and
fwait
lahf
ja
fdiv
(bad)
(bad)
(bad)
call
xchg
jne
mov
cmps
je
jmp
push
out
shr
dec
aaa
add
mov
(bad)
push
imul
daa
cld
mov
mov
out
hlt
(bad)
pop
push
or
xchg
xor
(bad)
push
(bad)
jmp
iret
retw
xor
(bad)
adc
shl
pop
fs
mov
(bad)
stc
out
aas
call
mov
mov
push
xadd
test
sub
push
push
imul
mov
(bad)
call
add
in
rol
dec
cld
sbb
or
cmc
sbb
test
jo
pop
(bad)
(bad)
(bad)
push
cld
jbe
daa
push
adc
mov
pushf
mov
xchg
and
cld
(bad)
(bad)
(bad)
call
adc
xchg
loope
icebp
into
jb
or
mov
jge
jbe
jmp
inc
jae
adc
add
adc
push
shr
out
cld
loop
mov
std
retf
cli
add
shl
(bad)
out
mov
and
bound
in
js
(bad)
(bad)
(bad)
inc
test
inc
aaa
mov
jno
cmps
sub
out
bound
mov
aam
jp
mov
xor
(bad)
(bad)
jmp
lods
cli
xchg
xlat
pushf
mov
stc
pusha
sbb
jae
pop
push
popa
movs
gs
out
(bad)
jmp
mov
mov
(bad)
(bad)
dec
adc
adc
popf
popf
loopne
sahf
pop
dec
push
pop
adc
es
xor
inc
fwait
or
jmp
lods
addr16
addr16
(bad)
(bad)
(bad)
mov
ficomp
(bad)
ins
sbb
mov
je
xchg
push
gs
dec
sbb
(bad)
(bad)
push
push
push
pop
pop
stos
mov
inc
sti
cli
or
jnp
cmps
and
mov
not
sbb
inc
mov
jp
test
movs
loopne
aaa
mov
cs
xor
xor
outs
xchg
mov
mov
arpl
fld
mov
cmp
enter
push
fld
in
(bad)
(bad)
(bad)
call
pushf
(bad)
cmc
(bad)
dec
mov
gs
enter
not
(bad)
(bad)
mov
adc
cdq
jmp
pop
in
add
loop
inc
sbb
or
lea
(bad)
(bad)
(bad)
cmp
adc
xchg
jle
js
lods
pop
push
test
jle
int3
xchg
es
mov
mov
popf
rcl
jbe
stos
jg
push
fs
cmp
pop
mov
outs
sub
and
jbe
cmp
xor
pop
loopne
lock
fiadd
dec
pop
fisttp
mov
(bad)
(bad)
(bad)
jmp
inc
inc
fst
in
call
mov
mov
dec
nop
test
jno
iret
xor
add
add
(bad)
jg
mov
leave
xchg
mov
adc
dec
add
add
jno
(bad)
(bad)
(bad)
(bad)
fisubr
aas
or
and
loope
test
jns
shl
or
dec
jecxz
mov
jmp
sub
xchg
popa
pushf
cmp
mov
dec
jg
fnstcw
sbb
or
pop
fcom
sub
fild
or
and
dec
mov
(bad)
cld
data16
dec
pop
mov
arpl
xor
(bad)
(bad)
call
mov
xchg
daa
ja
lock
adc
push
jns
into
sbb
sub
jno
call
inc
(bad)
mov
fstp
les
test
daa
sbb
and
(bad)
(bad)
inc
pop
ss
in
mov
mov
mov
push
inc
mov
jb
mov
lods
rcr
movs
aad
add
inc
adc
sub
cdq
mov
clc
jg
mov
or
push
jl
stc
not
ds
(bad)
jg
into
js
adc
call
enter
add
in
jmp
popa
aas
(bad)
(bad)
(bad)
call
fld
cmc
dec
cld
mov
push
bound
repnz
rcr
ret
(bad)
cli
(bad)
jp
pop
ds
imul
mov
sub
or
fcomp
sub
mul
and
(bad)
(bad)
(bad)
jmp
push
iret
sbb
cmp
xchg
xor
les
mov
pop
(bad)
(bad)
(bad)
inc
adc
sub
fisttp
fdivr
add
sub
(bad)
add
sub
(bad)
jmp
dec
shr
xchg
ret
(bad)
add
dec
push
ja
imul
loop
xchg
push
repnz
pushw
mov
inc
sar
(bad)
(bad)
call
or
fwait
stos
cdq
xlat
push
inc
out
add
shl
(bad)
inc
(bad)
jmp
icebp
(bad)
jmp
pop
mov
and
fcmovnbe
pop
das
(bad)
(bad)
mov
rcr
dec
mov
inc
xchg
push
iret
cmp
add
repnz
clc
ret
(bad)
push
mov
jb
cmps
(bad)
(bad)
jg
stc
in
sahf
xchg
cs
xchg
rcr
push
call
shl
(bad)
(bad)
jmp
fcom
ss
and
test
repnz
rcl
mov
rcr
(bad)
in
enter
cmp
je
push
retf
push
xor
pop
pushf
cmp
fucomp
in
(bad)
(bad)
jge
jmp
les
pop
cmp
fimul
clc
dec
shr
pop
pushf
jge
jbe
xor
iret
dec
or
dec
test
movs
inc
retf
clc
cli
cdq
pop
push
xor
mov
(bad)
(bad)
jmp
int
nop
inc
xchg
jb
jp
shr
call
sub
push
leave
pop
loopne
(bad)
push
popf
aaa
mov
out
call
mov
arpl
les
push
std
pop
add
mov
in
cmp
pop
rcl
jp
inc
sub
lds
(bad)
test
pusha
mov
clc
jp
mov
idiv
lock
(bad)
out
sti
std
shl
dec
or
or
xor
mov
adc
mul
push
ds
adc
jle
add
pop
and
(bad)
(bad)
(bad)
call
inc
sub
retf
cmp
repnz
jbe
hlt
call
dec
pop
mov
loope
imul
(bad)
(bad)
dec
sub
out
sub
dec
cmp
aas
repnz
in
movs
push
and
outs
cmp
(bad)
(bad)
(bad)
clc
pop
jae
lahf
xchg
adc
ds
mov
dec
sub
dec
movs
jmp
(bad)
(bad)
jmp
imul
lock
jmp
lahf
and
stos
fidivr
push
push
(bad)
add
data16
jmp
movs
cmp
lea
inc
add
mov
(bad)
(bad)
(bad)
mov
loop
sub
lahf
shr
mov
fsubr
ds
out
xor
or
icebp
sbb
inc
pop
lds
jmp
out
cdq
mov
xchg
push
out
sar
fdivr
or
mov
mov
cmp
in
outs
(bad)
(bad)
(bad)
out
or
int3
dec
and
fwait
lods
mov
fst
lahf
jmp
out
cmps
dec
shl
xchg
sub
lock
mov
add
gs
fdiv
and
(bad)
sbb
jg
sar
or
adc
add
pop
xchg
ins
out
in
cld
loope
nop
ds
sar
(bad)
(bad)
push
mov
out
cmp
mov
xor
add
test
mov
mov
mov
add
pop
jmp
mov
mov
outs
fadd
retf
stos
cmp
xchg
int3
push
(bad)
(bad)
(bad)
dec
add
retf
lea
cmp
jmp
pop
test
push
(bad)
jno
mov
int3
push
dec
loopne
mov
jg
or
jle
fst
cmp
ret
pop
cdq
mov
xor
cmps
stc
movs
sbb
(bad)
mov
add
jnp
mov
xor
push
stos
add
pop
jne
fist
and
push
mov
mov
dec
test
loop
push
lods
mov
ficom
fld
out
imul
test
call
jo
push
enter
test
mov
call
xor
pop
aaa
mov
bnd
stos
and
mov
cmp
cmps
adc
es
(bad)
(bad)
jmp
sahf
xchg
cwde
pop
pop
daa
push
ficomp
jecxz
and
mov
mov
out
jmp
(bad)
mov
lahf
push
les
ja
popf
(bad)
in
retf
je
inc
inc
mov
mov
jmp
test
(bad)
mov
jp
and
cld
cmp
test
mov
(bad)
(bad)
call
push
mov
jge
sbb
fidivr
jns
lock
test
cmp
(bad)
(bad)
inc
out
and
push
sbb
jmp
pop
test
or
xlat
push
pusha
out
ss
inc
stc
jno
cmp
cmp
cwde
arpl
pop
or
das
jg
adc
dec
test
js
push
fisttp
jns
(bad)
(bad)
mov
or
jns
sahf
mov
xor
adc
test
mov
(bad)
push
stos
movs
inc
pop
js
mov
and
and
jmp
(bad)
push
test
jns
mov
out
aam
das
mov
push
retf
push
pop
jno
rcl
loop
add
jecxz
or
(bad)
(bad)
jg
xor
push
loopne
scas
jmp
jnp
adc
inc
fldcw
(bad)
(bad)
(bad)
mov
ds
sub
dec
and
xchg
jmp
data16
es
movs
outs
test
xor
pop
out
retf
push
pushf
pop
jge
call
ficom
and
inc
call
movs
rcr
cmc
(bad)
dec
pop
lock
test
mov
daa
gs
sub
mov
cmps
(bad)
(bad)
(bad)
dec
or
xchg
or
outs
inc
ins
cld
inc
sbb
add
pop
sub
mov
mov
(bad)
(bad)
dec
lods
test
jo
push
test
cmps
scas
(bad)
push
jae
ret
pop
adc
(bad)
jmp
call
pop
repnz
pop
push
push
mov
dec
int3
or
hlt
jecxz
mov
cld
jmp
lahf
pop
cmp
mov
and
jmp
add
lods
mov
dec
adc
retf
hlt
test
mov
mov
inc
mov
adc
add
shl
push
cmps
outs
cdq
add
jne
(bad)
(bad)
call
test
push
pusha
imul
je
xchg
add
call
mov
test
push
xlat
mov
add
xchg
xchg
call
iret
or
push
loope
mov
sbb
aam
and
jbe
xchg
(bad)
jg
add
icebp
(bad)
cdq
daa
jns
cmp
(bad)
std
inc
out
adc
fs
ret
sub
cmp
pop
mov
(bad)
(bad)
jmp
sbb
lods
inc
call
mov
(bad)
push
dec
jle
xor
xchg
addr16
sbb
adc
(bad)
es
(bad)
(bad)
(bad)
dec
popa
sub
push
push
sbb
ja
movs
mov
sahf
pop
xlat
or
jg
mov
(bad)
(bad)
call
and
bound
jp
ins
mov
jae
movs
call
or
ja
(bad)
(bad)
(bad)
dec
adc
jmp
repnz
xchg
dec
test
stc
push
cmp
test
call
shr
(bad)
std
push
or
add
icebp
mov
mov
sbb
(bad)
(bad)
call
je
push
inc
add
retf
mov
das
call
ret
inc
sub
call
nop
lock
mov
or
cmp
lea
push
jecxz
sbb
xor
(bad)
(bad)
inc
sti
dec
ret
fs
stc
and
push
mov
hlt
pop
mov
cmps
add
adc
popa
adc
xor
dec
dec
movs
push
pop
icebp
mov
xor
nop
sar
das
mov
ja
cmc
jmp
nop
into
or
(bad)
popa
push
pop
xor
call
out
rol
es
xchg
mov
inc
push
push
dec
cld
in
xchg
in
(bad)
(bad)
push
and
or
xor
pop
bound
rcr
outs
clc
arpl
dec
xor
(bad)
jg
xor
idiv
push
test
or
add
in
jnp
in
jbe
ret
cmps
cmp
jo
mov
in
ror
fistp
and
pop
and
loope
aas
stos
jmp
cmp
movs
rcr
cmovo
or
scas
mov
sub
dec
out
add
sahf
ficomp
outs
cld
fs
je
or
xor
or
stos
lods
and
(bad)
(bad)
jmp
aas
push
popa
xor
icebp
pop
gs
xor
sub
lahf
push
sub
popf
stc
ffree
inc
xor
test
dec
xchg
ins
mov
retf
test
scas
(bad)
(bad)
(bad)
inc
fmulp
push
(bad)
pop
jae
cmp
sti
mov
jbe
xchg
push
pop
(bad)
(bad)
(bad)
inc
add
and
icebp
ffree
xchg
pushf
jne
inc
inc
add
(bad)
jmp
push
xchg
mov
add
stos
mov
or
sub
mov
stos
icebp
push
dec
hlt
(bad)
(bad)
(bad)
(bad)
fcomp
out
jmp
cli
add
imul
inc
leave
jg
dec
mov
ds
(bad)
(bad)
push
test
sbb
aad
ror
clc
js
cmp
call
sti
push
out
pop
je
push
lds
cld
(bad)
(bad)
call
sbb
xor
pushf
cmp
sub
clc
mov
cmp
add
(bad)
call
jne
jns
adc
mov
cmp
cli
sub
in
inc
stc
push
aaa
inc
movs
or
xor
(bad)
inc
mov
jmp
inc
inc
jns
ror
gs
(bad)
jmp
or
in
pop
cmp
adc
pop
inc
imul
loop
or
(bad)
(bad)
call
int3
dec
ret
iret
xor
pop
sar
cs
je
add
outs
mov
mov
xchg
adc
(bad)
(bad)
dec
or
push
jg
stos
cmp
aad
stc
ja
jbe
cmc
cmp
or
scas
dec
(bad)
(bad)
(bad)
jmp
inc
push
lahf
aam
jg
sbb
mov
xlat
and
mov
xor
push
scas
mov
push
jnp
mov
(bad)
fcomip
and
jnp
idiv
mov
es
and
adc
xor
(bad)
(bad)
(bad)
jmp
adc
adc
or
xchg
cdq
icebp
sar
jmp
stos
mov
(bad)
(bad)
(bad)
jmp
loope
(bad)
adc
and
jae
inc
dec
in
in
and
xor
aam
pop
inc
pop
add
lods
js
jnp
pop
jne
call
mov
inc
jmp
dec
(bad)
jns
scas
cli
call
sar
(bad)
(bad)
(bad)
jp
(bad)
mov
cmc
neg
and
sar
cs
cmp
and
dec
loopne
mov
mov
(bad)
(bad)
jg
mov
in
(bad)
movzx
jmp
in
gs
retf
je
push
mov
das
inc
sbb
pusha
out
adc
jmp
adc
test
fisubr
popa
loope
fist
loope
sti
adc
ins
sbb
jmp
push
icebp
arpl
(bad)
(bad)
(bad)
call
jb
cmp
xchg
call
mov
out
stc
pop
repz
mov
(bad)
cmp
mov
jmp
inc
and
stos
stos
inc
dec
mov
jge
jge
push
loopne
clc
(bad)
call
cmp
cli
push
jb
xchg
in
xchg
inc
lea
in
inc
movs
or
std
mov
bnd
inc
sbb
pop
mul
sbb
cmp
retf
mov
outs
mov
or
inc
push
out
and
repnz
mov
xchg
inc
out
pop
or
call
dec
lods
sub
setge
in
movs
mov
push
in
dec
neg
out
rol
lds
mov
(bad)
(bad)
clc
xchg
or
stos
fld
gs
or
push
adc
call
jb
test
ins
sbb
pop
jmp
icebp
dec
pop
push
mov
mov
dec
xor
test
(bad)
(bad)
jmp
cmp
push
mov
add
test
(bad)
(bad)
cs
and
neg
(bad)
(bad)
push
dec
fsubp
add
out
and
addr16
sbb
int
test
xlat
pop
dec
in
or
pop
cmc
(bad)
jg
inc
push
fimul
and
ss
mov
cmc
pop
adc
(bad)
(bad)
push
outs
je
ss
and
loop
dec
dec
imul
iret
mov
mov
cmp
(bad)
(bad)
mov
movs
neg
das
aam
int
or
jb
push
mov
dec
xchg
mov
or
int
push
sbb
fs
fwait
test
(bad)
(bad)
(bad)
sti
xor
push
pushf
mov
bound
mov
ret
push
mov
popf
mov
test
call
dec
dec
or
ss
clc
mov
fistp
sub
jns
test
dec
ret
in
sti
adc
pop
inc
retf
lock
test
aas
inc
cmp
(bad)
(bad)
jmp
xor
mov
mov
jmp
int
leave
out
ins
xchg
in
pop
inc
je
dec
stc
jo
(bad)
(bad)
call
push
rol
xchg
in
gs
fcomp
rcl
loope
inc
fisub
xor
nop
push
in
rol
add
xor
(bad)
(bad)
jg
mov
in
pop
loope
lods
and
into
jl
bound
xchg
inc
and
dec
jmp
(bad)
jmp
mov
mov
xor
mov
push
imul
push
or
add
lock
jmp
mov
out
sub
fucomip
add
es
call
add
sub
mov
sbb
cli
jl
mov
jle
(bad)
(bad)
cmp
xor
mov
pop
pushf
sub
shr
loopne
in
sub
cmp
and
sub
fnstcw
mov
daa
loopne
mov
push
loope
int3
clc
(bad)
(bad)
call
sub
jae
jg
cmps
xor
inc
retf
(bad)
sahf
push
or
mov
mov
(bad)
(bad)
jmp
clc
ja
ins
sub
sub
hlt
sbb
(bad)
(bad)
(bad)
aas
dec
sub
and
into
mov
cmp
out
sub
std
mov
mov
(bad)
(bad)
(bad)
inc
mov
and
sbb
xor
ficomp
mov
cwde
ja
cmp
adc
dec
mov
adc
push
rcl
dec
popf
in
scas
xlat
ss
jmp
pinsrw
icebp
(bad)
(bad)
inc
pop
out
push
xor
das
inc
mov
shl
cld
gs
(bad)
mov
(bad)
mov
mov
or
push
cwde
sub
(bad)
jmp
repnz
(bad)
sar
xchg
mov
add
push
or
mov
inc
movs
dec
or
or
lea
mov
adc
adc
cmps
adc
xchg
push
movs
xor
add
add
dec
arpl
nop
test
(bad)
push
dec
xor
push
or
(bad)
(bad)
(bad)
dec
test
jns
and
pop
dec
mov
inc
call
and
retf
(bad)
(bad)
(bad)
jbe
pusha
stos
mov
psraw
rol
int
jge
pop
push
and
inc
mov
sbb
call
dec
fwait
test
cmp
out
cli
(bad)
fist
shl
jbe
enter
js
xchg
mov
into
cmps
popf
cs
(bad)
(bad)
mov
rcl
xchg
leave
xlat
or
retf
daa
jmp
loop
ret
test
jne
xchg
dec
jno
jbe
icebp
(bad)
(bad)
inc
lea
loop
mov
arpl
push
cmc
fbstp
sar
(bad)
call
or
stos
add
icebp
ret
pop
les
enter
mov
adc
jl
mov
(bad)
(bad)
(bad)
(bad)
inc
push
dec
fxch
movs
sahf
and
mul
daa
and
inc
stos
fld
cmp
(bad)
inc
mov
shl
shl
pop
(bad)
(bad)
jmp
fdiv
sub
icebp
cli
mov
(bad)
mov
xchg
das
cmps
sub
pop
mov
enter
jmp
push
icebp
pushf
add
fst
mov
xlat
(bad)
(bad)
dec
pop
fadd
(bad)
(bad)
jmp
adc
jmp
mov
iret
call
xchg
and
mov
(bad)
(bad)
jmp
in
pop
scas
add
mov
pusha
dec
push
inc
fist
jp
inc
ds
addr16
mov
test
fwait
outs
xchg
lahf
fnstsw
retf
repz
(bad)
cmp
(bad)
(bad)
call
adc
outs
dec
mov
call
in
cmp
aaa
(bad)
fisub
xor
jo
jmp
mov
fs
bnd
push
or
mov
(bad)
(bad)
push
cmp
dec
retf
pop
mov
jmp
xchg
pop
push
inc
in
push
aad
push
pop
(bad)
(bad)
inc
mov
jo
dec
lea
jmp
push
sub
into
push
add
(bad)
(bad)
jmp
not
xchg
inc
push
pop
(bad)
xchg
sbb
pop
inc
fs
std
fimul
and
(bad)
(bad)
(bad)
call
mov
in
pop
int3
dec
repz
mov
lahf
sbb
sti
cmp
popa
cld
(bad)
out
dec
movd
mov
add
xchg
mov
add
sub
cli
pop
adc
dec
or
in
sbb
and
mov
mov
push
jb
push
cld
aad
mov
cs
ds
push
inc
inc
pop
nop
jmp
mov
scas
sahf
mov
or
and
mov
jmp
mov
js
sub
(bad)
(bad)
push
stos
xor
adc
push
test
mov
inc
xor
jmp
repnz
cmps
outs
ret
(bad)
(bad)
jmp
rcr
mov
add
icebp
in
outs
sub
das
aas
cmc
and
(bad)
(bad)
(bad)
jg
push
inc
scas
sub
sub
dec
call
jae
add
(bad)
call
mov
pop
cmp
ret
add
jns
or
lods
(bad)
(bad)
(bad)
call
push
outs
pop
add
js
fisubr
jo
push
cs
leave
(bad)
(bad)
(bad)
push
sbb
lods
jl
stos
retf
xchg
xlat
popf
rol
test
(bad)
sahf
les
stc
ficomp
(bad)
inc
fnstenv
inc
sub
rcl
out
sub
in
mov
inc
sub
daa
or
ret
fstp
mov
or
jnp
jecxz
call
mov
inc
and
call
stos
(bad)
(bad)
jg
xchg
fbld
popf
aad
mov
imul
dec
mov
ss
(bad)
(bad)
push
inc
cwde
inc
retf
jecxz
bound
inc
bound
xor
aam
adc
xchg
or
dec
movs
es
loop
ror
(bad)
(bad)
jmp
lahf
dec
hlt
mov
ja
dec
addr16
pop
push
inc
adc
in
sbb
sub
(bad)
rol
inc
aad
loope
or
(bad)
jg
mov
mov
mov
xor
add
out
call
xchg
into
jg
(bad)
inc
cmp
movs
pop
sub
arpl
fnstcw
or
movs
sar
(bad)
(bad)
(bad)
cmp
xchg
mov
repz
push
ficomp
mov
inc
mov
(bad)
(bad)
(bad)
out
in
mov
adc
into
adc
mov
icebp
pop
push
(bad)
(bad)
dec
jecxz
xor
sbb
cdq
pop
mov
and
adc
call
sub
sub
and
call
dec
shl
fild
mov
lea
and
(bad)
(bad)
(bad)
jmp
fdiv
dec
pop
scas
mov
les
xchg
mov
cmp
or
push
sbb
mov
popf
cld
sbb
inc
(bad)
dec
aaa
xor
int
dec
push
daa
xlat
jo
pusha
ins
pminsw
mov
pop
mov
dec
(bad)
jmp
test
call
inc
mov
cli
jl
xchg
outs
fsubr
(bad)
(bad)
fistp
inc
lods
ins
mov
gs
inc
aad
mov
lods
(bad)
(bad)
mov
cwde
or
pushf
icebp
repnz
(bad)
and
imul
adc
aam
mov
mov
loopne
sbb
(bad)
(bad)
inc
jle
xchg
leave
push
retf
push
les
mov
bound
in
rcl
ins
and
push
(bad)
(bad)
mov
dec
mov
ror
adc
mov
arpl
mov
shl
sub
push
push
push
call
push
jge
xor
test
or
dec
(bad)
aad
es
push
jg
jae
pop
(bad)
(bad)
(bad)
call
adc
fptan
gs
pop
sub
cmp
jbe
shl
rcr
inc
jno
repnz
std
call
xlat
lods
mov
fisubr
movs
icebp
(bad)
(bad)
(bad)
out
pushf
xchg
hlt
xchg
lea
in
pusha
push
pop
inc
call
mov
idiv
aam
mov
(bad)
(bad)
(bad)
call
jle
out
xchg
sar
not
pop
cmps
shl
test
jb
push
mov
test
(bad)
(bad)
(bad)
dec
bound
pop
dec
hlt
(bad)
mov
mov
jbe
add
repz
jb
iret
add
repnz
retf
jle
or
call
(bad)
call
xlat
jae
test
adc
aaa
cmps
movs
mov
pop
arpl
pop
cmp
shr
mov
jmp
or
dec
lds
pop
lahf
pop
push
push
and
mov
xchg
into
mov
or
lock
lock
jno
add
inc
(bad)
inc
mov
mov
mov
dec
in
xor
call
jmp
aam
push
sub
fmul
sub
cmps
retf
and
jb
scas
xor
(bad)
(bad)
(bad)
(bad)
mov
add
outs
call
pop
enter
scas
shl
iret
cs
daa
por
call
loopne
(bad)
lods
mov
sbb
or
test
and
pop
inc
test
(bad)
jmp
pop
pop
push
daa
std
idiv
pop
push
outs
sbb
movs
fcom
sub
mov
jg
(bad)
(bad)
(bad)
(bad)
std
gs
sbb
aaa
ins
jnp
hlt
psrlw
push
test
mul
jb
pop
sahf
push
push
bswap
xchg
cmc
mov
int
icebp
shr
pop
xchg
loope
mov
(bad)
(bad)
push
mov
test
sbb
jge
in
xor
or
ins
jo
jmp
imul
dec
int3
cmovle
scas
je
mov
mov
fstp
mov
adc
mov
cli
(bad)
scas
(bad)
jmp
dec
jle
or
mov
test
sahf
(bad)
popa
inc
rol
movs
(bad)
ins
dec
(bad)
(bad)
jmp
sbb
push
icebp
lock
xchg
inc
ins
test
mov
pop
jnp
aas
das
jmp
ret
cwde
(bad)
(bad)
(bad)
push
js
loope
imul
and
jbe
jl
shr
test
jl
clc
call
loop
(bad)
dec
mov
or
into
imul
mov
stc
cmp
(bad)
dec
imul
and
iret
ret
cmp
or
call
sub
mov
mov
mov
jo
push
(bad)
(bad)
(bad)
call
(bad)
xlat
daa
ins
popf
shr
fs
xchg
sub
clc
xchg
push
fwait
mov
out
dec
mov
jmp
mov
ss
pusha
cld
jecxz
mov
inc
xor
das
jae
(bad)
(bad)
dec
test
sbb
mov
sub
stos
ficomp
stos
mov
stos
mov
gs
(bad)
sub
ss
inc
jns
xchg
mov
sbb
xchg
(bad)
dec
jl
(bad)
adc
and
mov
iret
jno
add
das
call
dec
fnstsw
ret
and
jb
pushf
push
cmp
stos
xchg
test
cli
(bad)
(bad)
(bad)
call
mov
ins
push
movhps
push
and
mov
cmps
push
outs
cmp
pop
mov
popf
cmps
sbb
push
mov
(bad)
jmp
jge
mov
xor
nop
xchg
pushf
and
loop
adc
lods
ss
inc
test
sbb
(bad)
(bad)
(bad)
call
dec
cs
in
mov
fdivr
(bad)
ret
in
pop
popf
push
sbb
je
lods
movs
mov
(bad)
push
fisub
ret
jmp
fwait
loopne
cmp
enter
hlt
(bad)
call
aam
out
jp
neg
cmp
sub
mov
(bad)
(bad)
jmp
test
mov
mov
cwde
js
stos
mov
stos
cld
sbb
dec
(bad)
xor
xor
test
(bad)
(bad)
inc
(bad)
fldenv
mov
push
popa
push
fwait
inc
or
cld
enter
fdiv
or
(bad)
call
movs
je
test
xchg
mov
in
shl
sbb
scas
test
mov
sub
jmp
push
mov
push
cmps
(bad)
(bad)
(bad)
jg
jo
scas
and
rcr
icebp
scas
js
push
adc
shl
(bad)
(bad)
(bad)
jmp
inc
xchg
daa
out
mov
mov
add
int3
cmps
dec
and
push
fisubr
retf
out
(bad)
(bad)
inc
arpl
ret
daa
ds
xor
xlat
repz
scas
add
int3
sub
daa
out
adc
lea
sub
(bad)
(bad)
call
jl
mov
adc
ss
imul
inc
aad
mov
pop
jp
(bad)
(bad)
(bad)
mov
shl
je
xor
sar
arpl
pop
(bad)
(bad)
lods
fs
clc
iret
pushf
mov
(bad)
jg
(bad)
cmp
(bad)
sbb
push
push
mov
push
lods
es
popf
xor
sbb
inc
cmps
dec
fcmovnbe
sbb
adc
rol
jmp
add
push
or
scas
popa
fld
lods
push
data16
xor
lods
out
imul
dec
push
jmp
inc
shl
mov
gs
push
dec
(bad)
pop
sar
push
nop
cs
push
jg
out
rcl
icebp
(bad)
repz
rcr
and
inc
jecxz
cmps
ja
jle
outs
sub
(bad)
(bad)
(bad)
dec
push
cmp
mov
(bad)
push
int3
sbb
pop
dec
ins
or
xchg
jno
ror
adc
(bad)
cmp
inc
pop
pushw
sub
mov
xchg
cmp
loopne
icebp
add
push
pop
fcom
es
push
jecxz
jne
xor
(bad)
call
(bad)
daa
mov
push
pop
adc
fld
cmc
add
ret
pop
or
fcom
clc
(bad)
(bad)
mov
pusha
leave
and
push
push
in
jg
icebp
iret
pushw
jmp
jbe
out
jns
test
(bad)
jmp
enter
dec
and
test
ret
xor
dec
mov
cmps
int3
pop
es
inc
xchg
jg
inc
outs
(bad)
fcos
jnp
dec
add
hlt
push
cmp
jg
mov
sbb
dec
data16
hlt
push
in
mov
push
sbb
ja
je
push
popf
enter
jbe
scas
movs
and
add
mov
sub
mov
mov
inc
jne
mov
lock
or
in
cwde
sbb
(bad)
xor
adc
out
das
lods
ss
ror
(bad)
call
loopne
xchg
mov
push
into
jo
mov
or
ja
(bad)
(bad)
(bad)
out
mov
into
xchg
daa
call
dec
add
retf
xchg
shl
xor
sub
(bad)
(bad)
(bad)
call
push
sub
shr
or
push
sbb
repz
cmp
(bad)
(bad)
(bad)
call
scas
mov
das
add
shl
fcom
rcr
xor
sar
(bad)
(bad)
push
jb
iret
test
pop
and
xchg
and
xchg
jmp
add
mov
(bad)
(bad)
(bad)
call
xchg
jbe
xchg
or
les
mov
dec
sub
push
xor
cli
(bad)
(bad)
dec
mov
sub
(bad)
cs
imul
sbb
pop
(bad)
(bad)
jmp
lahf
sub
leave
jmp
cmp
jnp
jp
dec
dec
lock
pop
fist
(bad)
jmp
sar
sbb
jp
or
mov
inc
out
adc
outs
cli
(bad)
inc
daa
pop
cmp
(bad)
fs
xlat
and
or
bound
imul
std
jecxz
popf
(bad)
popa
and
in
mov
push
es
cmp
enter
mov
leave
ror
js
loope
jo
mov
lds
cli
pop
js
fisttp
leave
les
jle
dec
pop
push
jnp
ds
mov
pop
pmaddwd
popa
or
out
retf
movs
(bad)
xor
test
stc
dec
popf
jae
(bad)
(bad)
dec
adc
jmp
not
inc
adc
mov
icebp
(bad)
call
jl
adc
(bad)
mov
scas
dec
pop
hlt
lods
inc
ror
sub
nop
(bad)
(bad)
(bad)
(bad)
push
and
mov
je
jnp
pop
mov
and
loopne
das
jge
ret
lds
lods
mov
add
stc
das
inc
(bad)
aad
ja
mov
(bad)
xor
mov
xor
adc
pop
(bad)
(bad)
(bad)
jg
push
sbb
jp
fcomp
stos
sti
jae
int3
push
ds
push
dec
push
pop
inc
ins
and
int3
pop
mov
mul
cmp
pop
(bad)
cmp
cmc
pop
loop
mov
stc
out
cmp
std
jnp
inc
jmp
fmul
dec
lahf
(bad)
xlat
pop
mov
in
sub
inc
jnp
xor
pop
cmp
pop
lea
js
sub
push
push
or
mov
sub
dec
sbb
or
or
push
add
repz
(bad)
(bad)
dec
sub
mov
fcmove
lock
enter
xchg
xor
gs
scas
lods
adc
(bad)
(bad)
jmp
outs
pop
sub
stos
les
das
ret
dec
xor
leave
push
push
sti
sub
(bad)
(bad)
(bad)
mov
fsubr
jmp
pop
sti
pop
ret
jae
(bad)
int3
sub
xor
out
mov
call
rcr
sub
aas
or
fnstcw
jb
nop
int3
aam
call
push
cmp
or
xchg
jmp
cwde
sbb
ss
dec
xor
xchg
pcmpeqd
sub
sti
pop
aam
(bad)
(bad)
fistp
loop
dec
dec
dec
icebp
jno
aam
sti
div
fstp
sub
movs
sbb
and
mov
fmul
cwde
sahf
ss
sbb
push
cmp
add
jmp
cld
(bad)
(bad)
inc
clc
mov
mov
pop
cmp
loope
xchg
sti
ds
jle
fs
mov
sub
ret
std
das
pop
add
dec
xor
or
enter
addr16
or
fimul
add
xor
inc
popa
(bad)
(bad)
(bad)
(bad)
fisttp
mov
je
inc
fsub
es
push
mov
mov
sti
fdivr
push
out
repz
(bad)
(bad)
dec
pop
sub
jae
rol
ds
out
aad
out
xchg
jge
std
jno
jae
ja
(bad)
call
or
outs
neg
cmp
push
push
or
(bad)
(bad)
call
or
and
jne
out
ins
push
dec
ds
leave
mov
cmp
(bad)
jmp
cld
cld
test
adc
dec
lods
cmc
mov
or
cs
pop
add
ds
pop
lods
push
test
call
hlt
pop
icebp
fnsave
push
js
inc
jb
fild
add
jo
pop
das
call
jmp
das
mov
push
inc
xchg
rcr
mov
loope
mov
xchg
aam
jae
fmulp
(bad)
dec
(bad)
jle
push
aam
cmp
inc
sahf
sbb
sub
mov
test
mov
xchg
cmp
sar
xor
shl
(bad)
push
cld
ss
jne
enter
pop
data16
push
sbb
sub
test
inc
mov
cwde
xchg
mov
and
pushf
and
retf
pop
mov
in
dec
ror
and
dec
(bad)
ret
(bad)
push
jno
out
jge
jl
adc
pusha
rcr
jbe
jle
push
pop
js
add
cwde
mov
push
aaa
adc
(bad)
imul
das
fcomp
imul
push
jg
in
jg
jle
(bad)
inc
add
stos
push
out
and
xor
dec
add
call
aad
les
inc
movs
fisttp
test
inc
hlt
push
mov
mov
mov
fist
bnd
pop
xchg
cdq
ss
jmp
mov
in
xor
ror
stos
pop
adc
test
nop
adc
pop
(bad)
(bad)
push
stos
mov
icebp
cmp
and
jnp
xchg
(bad)
xbegin
xchg
outs
mov
(bad)
(bad)
jmp
push
cli
call
add
sahf
loope
mov
repz
ds
jg
(bad)
cmp
das
xchg
sbb
aam
retf
sbb
sbb
and
jmp
xor
loopne
ret
jne
and
xor
xlat
or
call
inc
dec
pop
mov
dec
adc
mov
jl
dec
(bad)
jmp
clc
inc
shl
sub
mov
jmp
jnp
ret
les
lock
mov
xchg
push
jp
mov
(bad)
fimul
fsubr
jns
(bad)
dec
sahf
call
push
jo
rol
cmp
cmps
outs
pop
sub
dec
and
(bad)
(bad)
inc
imul
adc
push
loop
sbb
fsub
sub
test
and
mov
jl
push
movs
sbb
popa
pop
(bad)
(bad)
jg
dec
ins
inc
xchg
push
scas
dec
mov
repz
jae
pop
(bad)
sbb
cli
fdivr
mov
pop
adc
mov
movs
and
bound
push
(bad)
(bad)
inc
xlat
int3
xor
xor
sahf
mov
push
out
mov
jns
dec
sbb
jmp
(bad)
(bad)
call
(bad)
out
inc
and
cmp
pop
xchg
ja
add
or
and
hlt
(bad)
jmp
pushf
xor
or
push
xor
jo
lahf
mov
and
data16
(bad)
(bad)
(bad)
in
ins
or
fld
mov
hlt
jl
mov
sub
mov
push
imul
shl
sub
stos
es
xor
loope
loopne
push
cli
dec
popf
(bad)
(bad)
(bad)
push
jmp
fs
pop
pusha
xchg
sbb
imul
inc
mov
pusha
in
cdq
xchg
js
xchg
xchg
leave
or
scas
clc
(bad)
(bad)
outs
lods
cmp
lods
and
fmul
and
rol
or
push
das
fldenv
dec
sahf
pop
nop
push
test
outs
clc
xlat
cmps
jb
pusha
int3
push
(bad)
call
mov
or
shr
(bad)
jnp
in
adc
inc
loop
pop
(bad)
(bad)
(bad)
dec
inc
dec
xor
enter
cs
and
nop
mov
cmp
scas
sub
(bad)
(bad)
inc
ret
in
fisub
add
in
mov
jl
fdiv
and
(bad)
call
dec
pop
scas
mov
inc
(bad)
sub
movs
aad
dec
mov
lock
mov
add
jns
mov
adc
or
push
mov
push
std
cld
jg
inc
call
adc
stos
loopne
or
movs
dec
imul
push
cs
das
enter
jo
sub
sub
gs
pop
cmp
cdq
mov
sub
inc
js
xor
cmp
adc
clc
je
in
out
daa
nop
pop
(bad)
jmp
in
ret
mov
inc
retf
sbb
jmp
(bad)
mov
xor
push
dec
shr
sbb
jmp
(bad)
outs
mov
leave
hlt
mov
int3
jg
loopne
push
jge
leave
(bad)
mov
mov
xor
xor
outs
(bad)
jg
loope
test
fcom
push
add
jbe
sahf
pop
push
out
clc
(bad)
call
mov
push
addr16
xchg
test
shrd
adc
mov
(bad)
call
xchg
imul
(bad)
sub
xchg
dec
sbb
dec
(bad)
push
out
outs
cli
cmp
repz
call
lock
scas
sbb
mov
cmp
pop
test
dec
sbb
(bad)
(bad)
(bad)
call
xchg
jp
xchg
out
pop
adc
(bad)
ins
adc
dec
nop
mov
cmp
(bad)
test
inc
xchg
pop
out
retf
push
lods
test
inc
mov
xor
call
lods
xchg
fs
jl
cmp
loope
sub
loop
aas
je
pop
xor
xor
jmp
cmps
retf
xchg
loopne
push
sbb
push
push
cmc
push
sbb
out
mov
add
mov
mov
inc
clc
into
inc
dec
idiv
xchg
sub
jl
sti
jmp
add
xchg
imul
ret
movs
and
(bad)
(bad)
(bad)
(bad)
jns
inc
gs
repz
and
sbb
jecxz
add
sub
sar
fwait
fs
lock
pop
or
add
push
jp
ins
push
push
jl
fwait
stos
fld
sub
dec
mov
(bad)
(bad)
cmp
retf
sub
push
mov
push
fmulp
cwde
fwait
xchg
out
mov
cmp
(bad)
(bad)
(bad)
dec
mov
cmp
mov
call
push
rcl
fdivp
stos
sbb
pop
outs
(bad)
(bad)
(bad)
(bad)
jns
pop
inc
stos
test
xor
sbb
dec
jne
xchg
add
sub
push
idiv
or
add
hlt
fisub
xchg
add
xlat
(bad)
out
xchg
fwait
(bad)
(bad)
cmp
pop
and
mov
pusha
dec
mov
(bad)
shl
mov
bound
inc
push
std
call
inc
inc
inc
push
repz
mov
and
(bad)
dec
jl
or
pop
pushf
fs
add
bound
(bad)
call
inc
(bad)
ret
mov
sti
adc
addr16
pop
sbb
ja
(bad)
es
lahf
xchg
(bad)
fcom
lea
mov
mov
add
xchg
stos
pop
sub
mov
std
adc
dec
sbb
in
push
sbb
sbb
and
pop
hlt
(bad)
jg
fadd
idiv
pop
cmp
push
mov
sub
cmp
repnz
(bad)
(bad)
dec
cwde
mov
fcom
rcl
mov
loopne
pop
lock
cld
ret
(bad)
(bad)
(bad)
cmp
les
cmp
xor
cmp
aaa
call
pop
es
or
push
movs
fwait
gs
xchg
jle
or
mov
add
(bad)
(bad)
push
aam
fisttp
inc
mov
or
inc
icebp
mov
xor
add
mov
dec
out
pusha
test
call
pushf
sti
cmp
cmp
retf
xchg
cmp
popa
nop
sub
(bad)
(bad)
(bad)
jmp
or
retf
inc
out
mov
jbe
rol
adc
inc
dec
(bad)
call
stc
outs
cmps
cmp
mov
mov
or
push
scas
sar
(bad)
(bad)
inc
cs
sbb
arpl
push
sbb
or
inc
jb
arpl
mov
mov
(bad)
(bad)
(bad)
(bad)
jmp
shl
test
inc
pcmpeqd
in
cmp
xor
retf
int3
sbb
(bad)
(bad)
(bad)
(bad)
cmp
je
outs
or
(bad)
pop
mov
mov
mov
mov
(bad)
je
(bad)
(bad)
call
jmp
das
push
inc
inc
mov
lods
sbb
adc
jle
mov
mov
movs
(bad)
(bad)
(bad)
dec
mov
xor
gs
imul
mov
cdq
mov
xor
(bad)
(bad)
(bad)
push
cmp
inc
out
(bad)
push
sub
je
pop
imul
sbb
(bad)
(bad)
(bad)
inc
retf
clc
jo
inc
xlat
aam
stc
pop
jo
mov
jmp
retf
mov
dec
push
jmp
scas
enter
dec
in
adc
retf
shl
enter
js
(bad)
(bad)
jmp
data16
data16
stos
cmps
leave
jle
cmp
int
xchg
aaa
rcl
test
jae
(bad)
(bad)
(bad)
mov
xchg
inc
pop
and
aas
add
scas
pop
sub
cmp
aas
f2xm1
imul
call
call
inc
icebp
aas
add
and
fcomip
bnd
out
mov
xchg
(bad)
call
mov
sti
lock
(bad)
push
mov
(bad)
retf
leave
and
xchg
(bad)
(bad)
(bad)
call
lea
cli
adc
test
add
pop
push
jno
adc
adc
dec
scas
dec
(bad)
dec
ficomp
sar
repnz
pop
sbb
adc
mov
(bad)
(bad)
jp
(bad)
loopne
mov
sbb
clc
mov
pop
test
mov
xchg
pop
in
ins
(bad)
(bad)
jmp
pop
test
and
push
mov
mov
push
into
xchg
stos
jae
(bad)
(bad)
(bad)
(bad)
dec
xor
jae
lea
pusha
sbb
(bad)
pshufw
sahf
or
out
les
(bad)
(bad)
call
mov
push
and
lea
or
lds
out
out
cdq
(bad)
(bad)
jg
repz
je
in
cdq
das
adc
mov
jbe
ror
pop
jmp
xchg
loopne
in
lahf
lods
jb
pop
cmp
or
leave
jmp
ss
daa
or
jg
call
mov
mov
add
xchg
(bad)
out
mov
dec
ror
(bad)
push
in
lods
jae
mov
into
mov
jecxz
cld
imul
(bad)
(bad)
jmp
sbb
das
(bad)
aas
into
(bad)
jo
pusha
and
xor
inc
inc
cmc
(bad)
(bad)
(bad)
push
(bad)
out
hlt
mov
push
dec
xor
jnp
ss
hlt
and
inc
je
mov
xor
loopne
scas
mov
imul
dec
retf
sub
(bad)
(bad)
call
es
mov
sar
mov
mov
mov
mov
mov
(bad)
(bad)
call
xlat
loopne
test
inc
fld
test
aam
jp
mov
(bad)
(bad)
(bad)
inc
inc
mov
imul
gs
mov
xchg
jmp
push
stos
mov
fdiv
jle
add
call
stos
inc
pop
pop
or
push
bound
(bad)
cs
(bad)
(bad)
jg
mov
sar
cs
ins
adc
sub
neg
xor
dec
ret
sbb
fs
(bad)
(bad)
(bad)
aas
inc
pop
pop
mov
int
pushf
(bad)
ret
xor
cli
(bad)
jmp
or
nop
sbb
ja
or
inc
es
xor
sahf
push
aam
dec
jmp
add
jp
inc
add
cwde
or
jecxz
(bad)
(bad)
jmp
sub
fdiv
xchg
ds
es
mov
or
adc
pop
(bad)
(bad)
(bad)
push
jge
jl
imul
jo
add
sbb
imul
fwait
imul
(bad)
(bad)
(bad)
dec
into
aaa
adc
mov
std
stos
cli
sbb
and
jmp
fdivr
cmp
mov
jmp
inc
sbb
mov
cmp
sub
sub
inc
imul
jmp
sub
dec
imul
mov
das
jp
loop
(bad)
(bad)
in
ja
inc
std
popf
daa
stc
add
sahf
inc
js
sar
jo
dec
stos
pop
(bad)
(bad)
(bad)
mov
repnz
jmp
fmul
arpl
mov
sub
mov
gs
dec
call
push
push
sar
sar
enter
dec
bound
xor
(bad)
(bad)
dec
das
call
dec
pop
jl
mov
rol
std
jno
out
shr
mov
dec
inc
(bad)
(bad)
mov
mov
pop
jle
movs
add
xlat
jmp
(bad)
fistp
mov
(bad)
out
and
mov
lds
cli
xor
dec
leave
add
xor
(bad)
stos
cmp
push
cs
popa
scas
(bad)
stc
fnsave
mov
scas
(bad)
(bad)
(bad)
cli
or
jp
and
(bad)
imul
xchg
(bad)
aad
dec
(bad)
jg
in
inc
mov
xchg
(bad)
(bad)
jmp
mov
cwde
mov
imul
and
add
aas
xchg
adc
and
dec
iret
(bad)
std
sub
xchg
adc
cli
stos
(bad)
(bad)
(bad)
inc
jp
jle
cmps
in
mov
cmp
mov
pop
xchg
xor
in
jmp
out
add
cs
fs
stos
clc
(bad)
int
lods
pop
shr
mov
xor
ret
clc
or
call
pop
mov
or
(bad)
dec
ins
(bad)
sub
inc
sub
out
push
pusha
inc
fist
repnz
xchg
les
(bad)
push
add
movs
xor
in
cmps
sbb
jb
xor
xchg
cs
(bad)
shl
cmp
(bad)
push
cmp
shl
mov
and
shr
leave
dec
aad
cmp
pop
dec
cld
adc
(bad)
call
mov
sub
cmc
dec
jge
test
fs
inc
aaa
cmp
shl
call
fcomp
xchg
jnp
dec
add
jo
pop
movs
jne
jge
adc
loop
jne
mov
sti
or
outs
xchg
push
push
icebp
cmp
imul
push
not
mov
jmp
push
(bad)
(bad)
(bad)
dec
adc
test
popa
push
jp
push
mov
dec
inc
and
call
pop
rcl
aad
pop
or
or
lods
lea
fwait
(bad)
(bad)
mov
dec
mov
mov
js
pop
cmp
cmps
retf
fidiv
(bad)
jmp
scas
cwde
adc
fdivr
inc
data16
rcr
xchg
call
icebp
out
test
outs
loopne
mov
push
mov
(bad)
jmp
loope
mov
ja
sbb
xchg
or
(bad)
fnstenv
(bad)
(bad)
jmp
pop
xchg
mov
leave
and
cdq
mov
xor
int
xchg
pop
test
cld
(bad)
ss
dec
hlt
es
rdtsc
std
pop
xchg
shl
push
add
rol
(bad)
fcomip
push
and
mov
(bad)
dec
icebp
sti
inc
dec
jbe
mov
pop
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
aam
sbb
(bad)
mov
sub
outs
jbe
xlat
jns
in
(bad)
(bad)
(bad)
push
xor
sub
jp
jge
xor
rol
aam
add
sub
mov
(bad)
(bad)
(bad)
jmp
mov
ret
mov
test
adc
lods
cmp
pop
ror
out
retf
jg
(bad)
(bad)
(bad)
jmp
outs
jns
(bad)
xor
popa
push
sub
cdq
xor
fild
cmps
push
scas
bound
add
(bad)
(bad)
dec
sub
xchg
test
jb
jbe
(bad)
fcom
(bad)
popf
retf
in
adc
sub
(bad)
(bad)
call
cmp
dec
xchg
dec
inc
retf
sub
fcmovnbe
and
adc
pop
add
loope
pusha
cmp
inc
mov
and
(bad)
das
shl
enter
scas
push
or
icebp
jle
call
cwde
stos
inc
aaa
jge
cmp
(bad)
call
dec
mov
out
out
add
and
or
pop
scas
xchg
mov
(bad)
(bad)
(bad)
(bad)
pop
lock
adc
shl
xchg
cmp
out
push
jb
cmps
outs
cmps
jb
pop
add
(bad)
(bad)
call
push
clc
mov
lods
xor
(bad)
cld
je
dec
push
out
or
push
je
jne
(bad)
(bad)
(bad)
(bad)
jnp
jae
xchg
gs
dec
ins
push
xchg
fcmovu
daa
jbe
stc
cmp
sbb
and
(bad)
(bad)
call
dec
cmp
mov
dec
cdq
retf
and
mov
jge
nop
call
inc
(bad)
dec
mov
jb
lock
sar
jb
aas
xchg
(bad)
(bad)
(bad)
(bad)
fbld
pop
dec
popa
pusha
xor
pop
jle
sub
mov
popa
inc
push
outs
stos
inc
call
loopne
pop
mov
cmps
das
cmp
ficom
in
js
enter
push
sbb
or
ins
data16
cs
jmp
pusha
rol
lods
jo
pop
int3
in
jmp
ss
(bad)
(bad)
push
adc
mov
push
jno
pusha
jl
cmp
mov
xchg
inc
in
stos
bound
jmp
movs
dec
daa
inc
add
cmps
mov
pop
mov
adc
adc
xchg
cmps
push
ins
data16
(bad)
dec
shl
sbb
push
sub
sub
(bad)
(bad)
in
into
ficom
mov
jmp
rcr
out
mov
and
mov
add
lods
imul
das
cmc
sahf
mov
and
jmp
pop
loop
jp
movs
(bad)
dec
daa
dec
inc
xchg
imul
ds
shl
leave
mov
add
push
repnz
test
or
inc
int3
fs
scas
in
test
pushf
je
enter
(bad)
cld
(bad)
sti
in
push
cmp
jae
iret
dec
xchg
push
and
retf
mov
dec
dec
ret
xor
push
loopne
(bad)
(bad)
(bad)
std
sete
xchg
fs
loope
mov
sbb
sub
ins
loope
dec
add
lock
imul
xor
push
mov
mov
dec
add
pop
mov
icebp
(bad)
push
jg
xor
call
cmps
fisub
mov
loopne
(bad)
mov
std
out
mov
dec
xchg
ror
sub
(bad)
(bad)
call
mov
push
imul
fisttp
icebp
mov
mov
gs
(bad)
cli
das
adc
mov
mov
test
shl
or
adc
pop
lds
add
notrack
rol
and
(bad)
int3
psrld
add
(bad)
jl
out
or
push
xor
mov
out
pop
or
mov
(bad)
jne
and
xor
cmp
adc
dec
and
adc
aaa
xchg
or
or
jb
and
inc
stc
jg
dec
mov
sbb
xlat
jmp
jo
mov
jb
push
or
outs
in
xlat
je
cwde
das
outs
(bad)
in
jmp
loope
fisub
mov
xchg
dec
sbb
ret
pop
std
(bad)
call
mov
leave
sbb
fdivr
pop
jb
dec
cmps
shl
add
xchg
jmp
stos
in
iret
mov
or
jp
push
pop
clc
das
cmps
add
push
movs
or
jg
pop
inc
cld
push
xlat
int3
ja
inc
lock
sub
(bad)
(bad)
(bad)
call
sub
dec
jmp
cwde
outs
mov
and
xlat
fistp
adc
(bad)
(bad)
call
jge
shl
mul
and
in
pushf
push
nop
mov
invd
(bad)
(bad)
jmp
cmp
push
mov
test
inc
dec
inc
in
adc
inc
and
loopne
mov
hlt
xor
int
xchg
mov
pop
jno
jmp
push
xchg
ins
add
and
mov
adc
out
enter
es
out
shl
call
adc
sahf
fadd
xor
(bad)
(bad)
(bad)
(bad)
mov
ror
add
mov
mov
mov
mov
adc
(bad)
(bad)
in
or
ins
fwait
cld
sti
and
inc
fstp
(bad)
dec
test
mov
fld
dec
repnz
enter
es
adc
jno
or
movs
pop
jmp
lock
pushf
aaa
pushf
push
jmp
fadd
call
jge
jbe
push
rol
test
and
mov
test
pop
std
push
cmp
loopne
add
mov
hlt
sbb
or
or
xchg
(bad)
(bad)
(bad)
push
iret
sub
movs
xlat
jnp
pop
cmp
or
sbb
xor
fwait
inc
dec
pop
in
(bad)
call
sbb
xor
stos
mov
das
out
inc
out
fidivr
cmp
fdivrp
jmp
shr
dec
cmp
xor
cmc
cmp
pop
push
cmp
jg
int
pop
cmps
or
inc
movs
xchg
(bad)
ss
adc
(bad)
(bad)
jg
imul
shl
dec
and
inc
sahf
jmp
push
shl
enter
ins
movs
and
mov
(bad)
(bad)
(bad)
jmp
fs
adc
out
xor
pop
xchg
push
mov
jnp
cmp
pop
shl
sbb
sbb
sub
xchg
(bad)
fcom
or
sub
fild
gs
pusha
rcr
pop
repz
pop
jno
ss
cld
(bad)
inc
pop
mov
xor
cs
ja
retf
dec
jae
mov
cmp
xor
ret
push
mov
xchg
or
(bad)
(bad)
(bad)
(bad)
push
or
bound
cmps
pop
std
fnstsw
jmp
jno
push
mov
xchg
icebp
pop
mov
ja
fcmovu
add
in
jmp
addr16
mov
sbb
inc
(bad)
fdiv
xchg
aam
ud0
jmp
(bad)
xchg
cmp
and
or
int
stc
aaa
add
daa
ret
xchg
pop
call
(bad)
(bad)
call
(bad)
cmc
sub
adc
jmp
mov
cld
adc
stos
pop
test
xchg
inc
lods
jmp
test
jl
cmp
fild
ss
push
in
lods
mov
(bad)
(bad)
(bad)
jmp
sub
fcom
lea
dec
movs
xor
cmp
fadd
jp
hlt
(bad)
jmp
std
mov
hlt
xchg
or
icebp
fwait
xor
xchg
(bad)
(bad)
(bad)
jg
mov
mov
scas
mov
leave
xchg
outs
dec
and
cmp
xor
mov
into
xchg
xor
mov
jp
jno
loopne
adc
pusha
mov
inc
mov
lahf
sub
call
retf
(bad)
cmp
and
call
or
jmp
dec
jp
sbb
test
jb
idiv
or
dec
add
es
xchg
lahf
pop
out
mov
xchg
cld
popa
cld
jmp
cmp
into
cld
cld
(bad)
adc
jmp
push
fimul
cdq
adc
scas
cwde
inc
mov
retf
add
sti
(bad)
(bad)
jmp
fld
fwait
iret
mov
cmp
sub
pop
xor
or
sbb
(bad)
jg
out
and
mov
xchg
jae
sub
mov
test
push
(bad)
push
sar
jbe
sub
ret
aas
imul
shr
xor
ja
inc
add
in
mov
aad
mov
mov
fs
add
(bad)
jmp
lods
iret
lea
cwde
(bad)
jge
shl
ins
pop
dec
add
ret
call
sub
push
retf
shl
pop
iret
std
test
call
imul
dec
rol
inc
fstp
xlat
xchg
cmp
(bad)
call
mov
or
(bad)
mov
into
jmp
bound
ja
xchg
(bad)
xlat
(bad)
cld
push
(bad)
(bad)
(bad)
(bad)
(bad)
jg
or
cmps
pop
lock
pusha
pop
pop
cwde
shl
sub
lods
gs
scas
adc
jmp
and
push
mov
dec
push
mov
push
mov
ud0
(bad)
(bad)
mov
add
jmp
and
sahf
xchg
mov
jmp
call
sub
(bad)
(bad)
(bad)
call
adc
and
adc
pop
jge
pop
arpl
push
dec
xchg
dec
out
repz
push
gs
dec
adc
cmp
div
pop
sbb
dec
and
mov
xchg
mov
imul
mov
(bad)
(bad)
jg
js
dec
jbe
fcom
repnz
hlt
mov
dec
(bad)
mov
lds
push
sbb
pop
iret
add
xor
fs
inc
cmp
cmp
sbb
cwde
pop
cli
(bad)
(bad)
(bad)
std
cmps
fldenv
mov
xor
mov
mov
pop
push
aad
(bad)
(bad)
jmp
imul
mov
cmp
pusha
cmc
(bad)
popa
xchg
mov
inc
cdq
in
push
cli
(bad)
push
popa
retf
mov
xchg
mov
sub
sbb
xor
(bad)
mov
enter
fxch
sbb
aad
mov
sbb
mov
(bad)
jmp
es
pop
jae
mov
add
js
daa
jns
hlt
outs
or
(bad)
jmp
pop
push
test
cmp
test
mov
cmp
dec
pop
out
jmp
inc
dec
pop
add
xchg
cmp
fidiv
xor
sahf
sbb
(bad)
jmp
pop
aas
(bad)
xchg
dec
fcom
xchg
jbe
out
(bad)
(bad)
fisttp
fiadd
hlt
sbb
test
lods
call
shl
jg
ret
push
(bad)
(bad)
(bad)
call
or
cmp
dec
xchg
daa
stos
cmps
jnp
rcr
sar
jo
cmp
pop
retf
adc
(bad)
(bad)
call
cmps
inc
xor
add
cs
and
sbb
adc
cmp
cmp
jg
popf
mov
std
jb
js
mov
jns
dec
not
xlat
mov
je
mov
(bad)
(bad)
call
enter
mov
repnz
sti
or
xchg
loope
or
(bad)
(bad)
(bad)
call
call
sub
pop
jb
dec
xchg
mov
outs
leave
lods
xchg
in
cmp
(bad)
jmp
xchg
ror
dec
ror
loopne
(bad)
and
dec
xor
sub
jp
clc
sub
mov
fnsave
jb
(bad)
(bad)
(bad)
jmp
xchg
je
push
out
(bad)
cmp
jbe
xchg
sbb
fild
sbb
sub
xchg
pshufw
add
xchg
out
(bad)
(bad)
dec
xor
sahf
mov
pop
dec
push
loope
nop
fs
mov
add
gs
push
sub
(bad)
mov
jg
push
add
stos
mov
mov
mov
(bad)
aaa
sahf
or
push
(bad)
jmp
clc
jg
dec
jae
add
mov
(bad)
or
fwait
bound
xor
mov
mov
dec
xchg
iret
xor
popf
fwait
sub
(bad)
imul
enter
jo
sbb
adc
push
mov
add
adc
fnstenv
cmc
std
popf
inc
stos
xor
xchg
in
sub
push
aam
pop
retf
(bad)
repnz
mov
in
mov
(bad)
inc
ret
xlat
cmp
jp
in
mov
push
adc
ret
(bad)
inc
and
cmp
adc
mov
mov
(bad)
(bad)
(bad)
(bad)
dec
fmul
and
cdq
xchg
add
xor
lds
sub
(bad)
(bad)
(bad)
call
jae
cmc
sub
fidivr
jmp
adc
push
loop
stc
sbb
lock
movs
xor
xor
jecxz
cmp
js
sbb
nop
jb
add
jo
(bad)
mov
mov
inc
fwait
shl
and
pusha
mov
inc
loop
in
in
repnz
jne
cmp
dec
cmp
ret
js
imul
into
gs
push
repnz
inc
fbld
mov
inc
ins
pop
mov
test
push
mov
(bad)
(bad)
(bad)
(bad)
fdivr
loopne
adc
mov
sahf
test
push
jbe
and
nop
arpl
iret
scas
pop
add
retf
push
pop
(bad)
movs
mov
inc
or
loopne
arpl
xchg
faddp
outs
ret
cmp
(bad)
(bad)
jmp
out
mov
loopne
in
fldenv
out
xlat
push
ins
adc
int3
clc
adc
mov
adc
(bad)
(bad)
dec
data16
mov
mov
inc
std
int
shl
cs
call
push
dec
(bad)
adc
fisub
xchg
stc
dec
mov
cmp
mov
mov
(bad)
push
pusha
leave
and
into
(bad)
movs
mov
sbb
lds
jb
shl
cdq
pop
or
inc
or
popf
dec
mov
outs
and
lods
pop
std
call
fadd
mov
sbb
repnz
mov
jle
out
(bad)
(bad)
(bad)
jns
mov
mov
mov
test
fistp
pop
pushf
push
int
(bad)
jmp
(bad)
dec
push
mov
xchg
jns
xchg
or
xor
iret
in
mov
push
mov
out
fcomip
jmp
mov
dec
xor
push
or
scas
jb
out
push
nop
push
mov
inc
(bad)
(bad)
(bad)
jmp
bt
stc
ja
sbb
in
out
sbb
mov
outs
jge
xchg
not
popa
sub
mov
pushf
fadd
cmc
mov
(bad)
mov
pop
sbb
xlat
hlt
(bad)
out
mov
mov
ret
mov
imul
sbb
lods
xchg
call
das
fs
sub
mov
and
into
mov
popa
pop
mov
(bad)
adc
jmp
sub
aad
lock
mov
dec
sti
dec
adc
add
adc
dec
(bad)
(bad)
(bad)
inc
(bad)
or
xchg
inc
inc
mov
inc
aas
push
xchg
adc
aaa
loopne
mov
and
or
movs
test
jmp
mov
xchg
mov
sbb
xchg
or
sti
inc
sub
inc
es
lods
(bad)
(bad)
(bad)
inc
mov
dec
fdiv
popa
hlt
jmp
int
retf
cwde
mov
ja
xor
dec
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
mov
out
cli
(bad)
es
nop
pop
retf
das
cmp
outs
cs
(bad)
(bad)
(bad)
(bad)
sti
iret
mov
mov
dec
mov
adc
scas
mov
xor
(bad)
aam
adc
xchg
(bad)
fcomip
inc
mov
dec
lods
sti
mov
les
xlat
adc
addr16
(bad)
(bad)
call
mov
adc
jl
add
(bad)
ja
ds
hlt
cmps
cmp
dec
daa
inc
lock
jg
lock
jbe
(bad)
shr
jp
int3
(bad)
(bad)
jmp
xor
xor
mov
jmp
clc
(bad)
dec
(bad)
repnz
xchg
ja
int
push
(bad)
pop
test
out
add
(bad)
inc
sahf
ror
dec
and
arpl
pop
ret
int3
fwait
jae
in
fsubr
dec
mov
pop
(bad)
(bad)
(bad)
dec
lods
pop
into
(bad)
out
dec
cli
stos
xchg
rol
in
push
ret
(bad)
(bad)
call
dec
(bad)
mov
(bad)
(bad)
(bad)
jmp
jg
mov
data16
xchg
std
ins
imul
cmp
xor
(bad)
(bad)
inc
lar
mov
pop
or
(bad)
aas
(bad)
aas
adc
and
pop
(bad)
(bad)
call
pop
push
xchg
jbe
jecxz
int
mov
rol
or
and
push
add
(bad)
inc
cld
inc
jmp
inc
and
add
ja
call
into
push
or
mov
dec
xchg
call
mov
(bad)
inc
dec
xchg
arpl
dec
xchg
jg
and
stos
retf
jmp
inc
jle
sub
(bad)
sbb
les
mov
mul
ss
push
jecxz
fs
xor
dec
push
call
(bad)
mov
push
mov
xor
inc
xchg
dec
nop
(bad)
call
in
jg
mov
cmp
mov
dec
std
or
sub
mov
or
leave
lea
lock
xchg
add
outs
test
sar
inc
mov
sbb
ss
sub
shl
test
jae
jne
(bad)
(bad)
call
adc
dec
ins
push
mov
xchg
push
push
xor
out
sbb
test
mov
xchg
push
mov
arpl
push
shl
and
(bad)
dec
fsub
jbe
outs
sub
jnp
xor
shl
mov
popa
inc
add
test
sbb
xlat
(bad)
fidivr
popf
aad
push
adc
sub
es
jbe
dec
xor
pop
ja
jnp
sbb
jmp
xor
add
mov
ret
cli
loope
mov
es
fnstsw
push
jmp
xor
xchg
mov
mov
js
or
push
xor
bound
loopne
adc
scas
cmp
addr16
rcr
call
or
sub
sbb
lods
aas
or
test
dec
mov
fwait
aas
bound
(bad)
test
or
mov
retf
push
(bad)
call
movs
add
call
pop
(bad)
mov
inc
out
mov
(bad)
popa
test
(bad)
(bad)
jmp
(bad)
out
push
ret
in
mov
rcl
pop
adc
push
sub
mov
jg
push
lock
(bad)
call
mov
dec
mov
repnz
mov
jb
aaa
jg
mov
call
and
pushf
sbb
and
test
lahf
pop
int3
dec
jmp
ret
(bad)
(bad)
(bad)
jmp
mov
add
pusha
mov
sbb
inc
pop
frstor
mov
icebp
pop
(bad)
(bad)
(bad)
push
(bad)
mov
fisubr
or
ret
out
sbb
aam
fwait
retf
cld
jmp
jbe
(bad)
(bad)
(bad)
push
xchg
fldenv
out
mov
cmp
cmp
(bad)
sar
stos
movs
fdiv
clc
jmp
ins
ins
jp
(bad)
loopne
adc
pop
sub
js
or
jge
popf
cmps
mov
stos
loopne
push
cmp
fcomip
call
mov
xchg
mov
inc
aad
out
(bad)
(bad)
jns
mov
aam
inc
add
aaa
pop
ins
mov
inc
and
(bad)
jle
push
add
ret
jmp
adc
push
arpl
jmp
jp
(bad)
(bad)
jmp
fwait
cld
(bad)
sbb
push
inc
xchg
dec
aaa
pop
jo
in
mov
jl
xchg
neg
fimul
and
cmps
sahf
fisub
arpl
cdq
aam
push
sbb
pop
mov
es
in
jno
aam
mov
mov
call
cwde
xor
fnstsw
jle
lods
les
stos
(bad)
pop
xor
sbb
(bad)
(bad)
push
in
dec
sub
pop
inc
loopne
(bad)
outs
sbb
lock
jecxz
adc
aaa
cdq
add
lea
lods
or
call
stos
mov
ja
mov
dec
(bad)
and
xchg
(bad)
(bad)
(bad)
jmp
aam
hlt
adc
pushf
sar
dec
dec
or
xchg
aaa
sbb
jl
arpl
sub
(bad)
(bad)
(bad)
(bad)
jmp
adc
rol
add
mov
push
das
sti
daa
sub
push
(bad)
(bad)
(bad)
call
mov
mov
out
lods
xlat
pop
mov
ja
mov
inc
sub
add
push
(bad)
(bad)
call
sbb
cld
xlat
pusha
or
jecxz
add
cld
push
cmc
lods
cmp
outs
mov
dec
je
mov
pop
ins
ds
lock
inc
and
lock
(bad)
call
pusha
push
std
in
sbb
jle
cmp
(bad)
(bad)
push
inc
xchg
sbb
and
cmp
cmp
fist
sbb
fmul
movs
fcomi
mov
call
test
pusha
mov
cmp
into
mov
adc
scas
sbb
(bad)
(bad)
inc
push
mov
dec
sar
movs
fcom
call
dec
inc
(bad)
enter
mov
xchg
imul
sbb
in
mov
pop
inc
add
push
jg
mov
xchg
(bad)
and
sahf
out
lds
lock
(bad)
(bad)
push
jecxz
int
shl
jae
mov
push
cmp
sub
out
fcomip
(bad)
call
inc
inc
push
cmp
xchg
loope
push
sar
xchg
cmp
shr
fdiv
sbb
test
shl
dec
jb
stos
add
cmp
cmc
daa
xchg
cmc
mov
pop
(bad)
(bad)
(bad)
jmp
mov
xchg
mov
and
push
sbb
shl
fld
push
xlat
or
addr16
(bad)
out
fadd
and
xlat
mov
push
cmpps
lea
fisttp
das
add
out
dec
ss
sbb
repz
loope
mov
(bad)
dec
lods
dec
add
adc
movs
mov
or
mov
(bad)
dec
ins
gs
sti
shl
jmp
mov
jbe
retf
dec
or
(bad)
call
cmp
shl
adc
fucom
sub
and
out
mov
jg
adc
pop
add
(bad)
call
inc
mov
mov
mov
fstp
mov
int
leave
mov
mov
sub
cwde
adc
sub
lds
ret
and
inc
int
inc
pop
fnstcw
(bad)
fcomip
stos
xor
rcl
nop
jbe
outs
test
lahf
sub
xchg
jmp
fs
mov
mov
xor
(bad)
inc
retf
or
sub
mov
xchg
pop
fdivr
fsubr
or
jae
and
(bad)
das
shl
jo
cmps
fdiv
and
add
scas
mov
mov
(bad)
(bad)
aas
(bad)
loope
jmp
push
jp
mov
jae
repnz
lahf
push
jg
dec
enter
(bad)
loopne
adc
jg
loopne
sbb
cmp
mov
jmp
in
(bad)
(bad)
(bad)
(bad)
js
loopne
mov
push
xchg
add
das
xchg
mov
add
push
stos
in
mov
(bad)
(bad)
(bad)
call
xchg
int3
fisttp
and
jae
push
in
cld
jnp
fld
dec
(bad)
xchg
xor
mov
or
jmp
mov
push
mov
out
mov
jl
in
xchg
fdivrp
(bad)
(bad)
jmp
out
ja
in
add
pop
out
push
and
iret
sub
lahf
ins
sub
sub
(bad)
(bad)
(bad)
call
and
add
jg
fnsave
lahf
push
sbb
xor
shr
(bad)
(bad)
jmp
push
hlt
mov
adc
sbb
xor
icebp
jle
int
enter
inc
adc
(bad)
inc
push
pop
xor
xlat
cmps
ds
dec
mov
sbb
call
or
imul
cli
mov
sub
loop
jnp
outs
test
xchg
retf
xor
cdq
or
(bad)
(bad)
(bad)
(bad)
mov
inc
and
cmc
dec
mov
cli
hlt
arpl
imul
inc
and
cld
jmp
mov
pop
push
jle
stc
addr16
(bad)
jmp
(bad)
es
adc
jbe
pusha
dec
and
dec
sub
lock
push
lock
(bad)
call
dec
cmps
xchg
scas
in
xor
hlt
jnp
dec
cld
xor
jne
jg
inc
push
xchg
call
add
mov
daa
leave
sar
(bad)
(bad)
call
push
push
mov
sub
fdivr
lods
and
xchg
jne
push
(bad)
(bad)
(bad)
inc
inc
xchg
adc
ja
into
sbb
jg
sub
or
test
mov
push
cld
fsubrp
cmps
outs
adc
xor
shr
ins
pop
movs
in
popa
pop
pop
ins
(bad)
push
cwde
sub
mov
(bad)
push
outs
(bad)
fcmove
xchg
cs
or
mov
dec
sahf
inc
sbb
sbb
retf
je
xchg
or
(bad)
(bad)
call
bound
sub
mov
and
ffreep
stos
stc
mov
cmp
jl
shr
mov
pop
pop
inc
sti
xchg
and
jp
push
inc
sti
add
(bad)
jg
stos
ds
dec
inc
es
jmp
ret
dec
fadd
in
call
push
xlat
mov
mov
(bad)
(bad)
inc
lds
mov
fstp
in
cmp
mov
cmp
hlt
jecxz
leave
fmulp
(bad)
(bad)
(bad)
(bad)
cmp
jne
adc
adc
out
aas
aas
imul
addr16
fnstsw
dec
pop
inc
test
inc
daa
ja
sar
call
jb
aam
dec
xchg
test
jmp
(bad)
push
dec
dec
lds
jmp
ror
push
lods
leave
icebp
cmp
dec
xchg
jl
cmps
mov
push
cld
(bad)
out
add
int3
into
add
push
adc
sahf
and
retf
(bad)
jg
inc
(bad)
stos
ss
popf
es
sahf
or
sbb
loop
(bad)
(bad)
(bad)
(bad)
ds
mov
and
cmp
lahf
retf
out
push
pusha
js
jg
les
leave
jmp
and
dec
xchg
xchg
(bad)
mov
xor
mov
lea
pop
inc
fistp
pushf
inc
push
sbb
(bad)
inc
daa
and
sbb
je
int
adc
cmp
push
xchg
mov
inc
xchg
movs
add
xor
cmp
shr
xor
add
sub
sbb
and
and
inc
sub
xor
dec
lock
mov
ret
jo
mov
mov
pop
add
(bad)
(bad)
(bad)
call
in
ffree
es
push
add
dec
or
mov
jmp
xor
popf
std
dec
add
cld
(bad)
cmp
cmp
aam
adc
inc
dec
aaa
call
enter
(bad)
(bad)
inc
out
cmp
or
rol
jle
repz
repnz
add
pusha
shl
jbe
bound
icebp
sti
rol
cs
cmp
(bad)
(bad)
(bad)
xchg
dec
fild
jmp
pusha
cmps
sbb
stc
fiadd
int
mov
(bad)
jmp
mov
aas
lock
out
push
lahf
cmps
xlat
fsub
and
mov
jno
cmps
rcr
stos
xor
cli
(bad)
(bad)
call
out
mov
mov
mov
lock
test
out
add
iret
out
(bad)
call
push
(bad)
jmp
and
(bad)
out
dec
sahf
lea
retf
mov
add
pop
jo
xchg
xchg
cmp
adc
sar
lea
xor
cmc
cmps
jno
pop
adc
sbb
and
mov
std
jmp
mov
or
mov
(bad)
(bad)
jmp
scas
cli
(bad)
add
(bad)
jae
or
xchg
push
push
adc
pop
or
cmps
jmp
out
lock
out
mov
scas
das
jae
mov
or
(bad)
(bad)
dec
fdiv
fcomp
pop
aaa
jno
jmp
or
fbstp
ret
sar
call
stos
imul
adc
mov
jb
cmp
test
inc
xor
bts
loopne
jp
or
lds
(bad)
sbb
call
ins
test
inc
push
mov
and
(bad)
(bad)
inc
es
cmp
cmp
fcom
pop
adc
mov
jnp
xchg
push
fild
sub
ret
clc
sub
jne
(bad)
inc
lds
(bad)
(bad)
std
pop
cmps
sub
call
push
ret
popa
fwait
pop
js
add
and
pushf
(bad)
(bad)
(bad)
jmp
test
les
and
pop
fst
sbb
rcl
sbb
idiv
test
data16
jae
push
std
sti
jmp
jmp
dec
mov
sub
xchg
inc
or
push
add
mov
ret
sub
cmp
mov
or
fst
adc
(bad)
dec
jo
popf
or
and
xchg
push
fnstcw
jmp
adc
jle
(bad)
(bad)
mov
fdivr
popa
or
mov
sub
dec
adc
in
scas
push
sub
fs
pop
mov
jmp
jnp
(bad)
jmp
cmp
add
(bad)
test
xor
stos
(bad)
cmp
pop
test
cmp
xchg
or
push
in
mov
mov
loope
cmps
jmp
jmp
xchg
pop
cld
rcr
and
into
iret
jmp
(bad)
(bad)
(bad)
call
add
xor
loopne
pop
fisttp
mov
cmp
fs
jg
bound
(bad)
(bad)
inc
ds
scas
retf
mov
cmps
fdivrp
scas
jmp
js
and
fcomp
outs
mov
inc
mov
xor
(bad)
(bad)
(bad)
stc
adc
xchg
in
dec
call
mov
xor
ins
jmp
in
sub
in
es
std
inc
fwait
iret
dec
(bad)
(bad)
(bad)
call
or
scas
sub
scas
(bad)
shl
mov
es
pop
ja
lock
gs
outs
(bad)
(bad)
(bad)
push
out
inc
jl
daa
mov
je
push
cli
scas
jbe
outs
pop
jle
fisub
cmc
sub
outs
fld
dec
scas
repz
mov
loop
xchg
movs
inc
mov
fisttp
out
repz
cmp
outs
xchg
rcl
jmp
call
cmp
std
xlat
je
add
xchg
sub
adc
and
mov
(bad)
mov
(bad)
jmp
push
push
outs
sub
mov
dec
dec
out
daa
mov
cli
fbld
sub
pop
clc
pop
call
cmp
(bad)
(bad)
call
ret
ins
adc
nop
xchg
mov
imul
mov
xchg
popa
inc
mov
jo
dec
jg
sbb
jnp
cmp
outs
(bad)
fdivr
mov
and
inc
clc
(bad)
push
cmps
dec
call
je
inc
call
hlt
pusha
cmp
(bad)
fisttp
sahf
xor
sar
mov
int
loopne
(bad)
jmp
(bad)
cmp
(bad)
movs
mov
movs
out
or
outs
xchg
cld
pop
test
clc
pop
pop
(bad)
in
ficomp
jno
movs
ss
int
(bad)
inc
mov
loopne
adc
mov
cmp
and
adc
out
xor
rcr
ds
cwde
(bad)
dec
or
retf
int
mov
cwde
mov
add
(bad)
mov
test
mov
inc
gs
jno
int
jb
xor
and
(bad)
push
adc
or
fnstenv
out
pop
xor
loope
(bad)
in
jg
and
call
jg
jp
sub
inc
mov
cmp
loope
outs
pop
lods
sub
(bad)
jmp
jo
mov
leave
loope
dec
call
push
dec
test
lock
mov
xlat
adc
cmps
movs
lods
cmp
int
push
(bad)
(bad)
mov
sub
aad
mov
mov
leave
test
in
mul
ss
leave
dec
aaa
sbb
push
loop
adc
(bad)
(bad)
out
fcom
daa
mov
ja
jecxz
jns
mov
clc
cdq
inc
pop
(bad)
das
cmps
add
int3
ret
cs
aaa
lds
mov
sub
fmulp
push
lock
fdiv
enter
(bad)
(bad)
jmp
inc
rol
xchg
aaa
or
jb
inc
mov
sbb
(bad)
cdq
mov
(bad)
(bad)
ficom
lahf
cwde
dec
mov
jnp
ret
in
movs
imul
push
xor
sbb
lahf
(bad)
call
dec
je
mov
mov
pusha
jns
push
sub
fldcw
test
cmps
lock
mov
xor
(bad)
(bad)
jmp
je
leave
mov
push
rcl
imul
ret
dec
icebp
cmp
mov
(bad)
jmp
xor
in
xchg
cmp
push
add
jno
pop
stos
adc
jecxz
sub
ins
ds
out
and
dec
fsubr
sub
cmp
dec
push
fs
in
(bad)
(bad)
(bad)
dec
pop
pop
dec
mov
ss
aad
xchg
dec
ins
test
ja
xchg
jle
add
call
push
jg
sbb
ds
(bad)
(bad)
jmp
cmps
sub
idiv
and
pop
lods
or
loopne
pop
pop
sub
jmp
xor
(bad)
dec
scas
pop
movs
outs
push
dec
cmp
retf
inc
mov
inc
cld
mov
xor
inc
and
jg
gs
cmp
fmul
mov
push
mov
stos
(bad)
in
repnz
fisubr
add
call
mov
pop
cs
xchg
js
icebp
fidivr
and
adc
dec
addr16
retf
xchg
inc
ror
aam
scas
nop
es
mov
(bad)
fcom
std
mov
sub
shl
arpl
xchg
scas
add
in
(bad)
push
cmp
(bad)
(bad)
push
cli
loopne
or
jo
scas
(bad)
pop
push
gs
call
and
and
(bad)
(bad)
(bad)
std
adc
inc
push
xor
sbb
mov
xchg
jae
fnstenv
out
call
(bad)
ud0
(bad)
jmp
dec
push
jecxz
inc
mov
mov
int
rcr
test
mov
mov
inc
das
mov
and
pop
cmp
dec
iret
mov
mov
push
int3
xor
addr16
pusha
push
pop
hlt
xor
mov
push
(bad)
mov
in
cwde
push
pop
aas
rol
mov
cdq
stos
xor
push
(bad)
je
(bad)
(bad)
(bad)
jge
and
add
mov
cmps
fistp
mov
pop
js
stos
sub
(bad)
(bad)
push
stos
cmps
test
mov
jns
fisttp
test
cli
jb
cwde
mov
add
(bad)
(bad)
dec
fdivrp
leave
xor
(bad)
fcmovnu
fld
inc
cli
or
es
fcom
(bad)
mov
popf
sbb
push
pop
push
data16
movs
(bad)
(bad)
push
repnz
mov
in
iret
mov
sahf
xor
and
scas
test
mov
mov
push
cmp
in
push
in
scas
loope
cmp
(bad)
(bad)
jmp
dec
mov
push
push
stc
push
(bad)
jle
jl
sbb
std
and
jp
(bad)
(bad)
call
test
pop
hlt
add
test
inc
jp
stos
mov
(bad)
fstp
cmp
or
jg
(bad)
(bad)
(bad)
jmp
repz
loop
test
fdivr
push
inc
and
jmp
(bad)
(bad)
jmp
out
cwde
mov
scas
in
inc
jo
(bad)
cmp
push
mov
adc
cli
rcr
or
(bad)
call
(bad)
cmps
mov
cmp
pop
push
inc
sbb
mov
scas
xchg
stos
dec
xor
(bad)
(bad)
inc
stc
daa
xchg
jmp
pop
test
cs
inc
pop
rol
movs
fbld
push
push
(bad)
std
push
mov
aad
popf
xchg
out
mov
loopne
mov
dec
imul
(bad)
dec
sahf
ins
pop
fiadd
dec
popa
mov
test
neg
popa
xchg
icebp
mov
and
(bad)
call
mov
lods
ins
or
jmp
out
or
ds
inc
mov
mov
push
xor
xchg
adc
sahf
fdivp
loop
jns
jo
shl
(bad)
push
add
or
add
call
jl
jmp
add
arpl
ja
into
mov
(bad)
jmp
(bad)
mov
jae
inc
dec
adc
out
xor
in
mov
enter
(bad)
(bad)
jmp
not
addr16
clc
mov
sub
aaa
loop
or
scas
pop
ins
mov
outs
push
shl
je
dec
ret
popf
sbb
or
sub
(bad)
call
inc
xor
fcom
push
mov
ror
add
add
(bad)
call
adc
lahf
inc
sbb
add
cld
pop
ins
fcmovb
(bad)
or
call
cmp
push
xchg
inc
or
push
add
inc
jo
push
mov
push
and
(bad)
(bad)
(bad)
dec
and
cmp
cmp
cld
xchg
dec
inc
jle
fwait
or
movs
mov
mov
ret
push
das
sbb
dec
dec
cmp
jno
or
mov
xlat
in
jmp
jmp
loopne
mov
sub
or
(bad)
call
xor
fwait
loop
fistp
test
sub
scas
mov
(bad)
mov
(bad)
xchg
jns
addr16
push
ins
and
js
add
xchg
push
add
(bad)
inc
enter
sahf
adc
lock
int
out
fs
pop
mov
cmps
sahf
push
jle
jmp
(bad)
out
and
push
dec
jle
shl
xchg
mov
(bad)
call
push
stos
cs
push
dec
sub
sbb
add
jle
(bad)
(bad)
push
mov
or
enter
test
imul
hlt
xchg
adc
sub
jmp
xchg
jbe
xchg
xchg
add
mov
push
cdq
cmp
cs
popa
xor
ins
cmps
push
jnp
pop
outs
cmp
xchg
pop
pop
mov
add
(bad)
(bad)
call
ja
aas
mov
int
test
add
leave
clc
stc
xchg
fistp
gs
or
dec
push
shl
icebp
pop
fimul
xchg
mov
pop
mov
and
repnz
sbb
dec
dec
in
jecxz
mov
mov
fist
push
or
mov
inc
ret
pop
jno
ins
ds
add
sbb
stc
mov
inc
xchg
arpl
bound
jle
mov
iret
in
jb
fnstcw
or
cmps
jge
push
mov
xor
call
sub
pop
cmps
adc
aas
xlat
fld
test
icebp
stc
movs
mov
std
sub
clc
push
or
in
mov
mov
repnz
out
push
das
dec
push
pop
fsub
loopne
inc
aam
ss
(bad)
(bad)
inc
movs
add
mov
popa
and
rcl
adc
cld
mov
sahf
mov
int3
pop
push
(bad)
(bad)
(bad)
push
pop
cmc
mov
addr16
push
int3
or
xchg
mov
jno
push
ins
xchg
dec
fistp
pop
icebp
jg
xchg
or
icebp
xor
cmp
pop
arpl
cmps
jno
xor
(bad)
jge
jmp
cmp
pushf
xchg
dec
ret
es
xor
xchg
inc
push
inc
stc
loope
in
jnp
enter
(bad)
(bad)
jmp
lock
into
stc
call
out
mov
clc
cli
xchg
xor
(bad)
loopne
in
ds
adc
cmp
cmc
xor
mov
cmc
(bad)
(bad)
(bad)
mov
adc
pop
cmp
cwde
sub
fdivr
cmps
sbb
mov
js
jg
in
shr
out
mov
jg
xchg
inc
push
stos
scas
not
lods
cld
(bad)
push
sbb
add
xor
mov
leave
adc
or
pop
jge
cld
repnz
(bad)
fbld
test
leave
out
cdq
stos
clc
sbb
sbb
(bad)
(bad)
jl
cli
jg
fistp
dec
add
jmp
out
cmps
push
call
shr
dec
cmc
(bad)
(bad)
(bad)
cmp
fstp
ret
or
jg
pop
push
adc
and
adc
(bad)
(bad)
(bad)
(bad)
ins
cmp
add
mov
(bad)
movs
and
scas
cmp
(bad)
(bad)
(bad)
(bad)
call
scas
movs
jmp
mov
dec
dec
cld
and
cmc
mov
pusha
cmp
sbb
arpl
(bad)
(bad)
(bad)
(bad)
fmul
mov
push
fnstcw
dec
pop
or
or
mov
mov
sbb
js
mov
gs
cwde
mov
addr16
(bad)
(bad)
inc
jmp
jne
mov
jae
adc
in
adc
jmp
arpl
cmp
jmp
or
(bad)
pop
push
jbe
mov
cmp
sahf
adc
fcmovnu
adc
(bad)
call
cmp
lahf
and
cmp
add
jmp
jecxz
aam
std
(bad)
mov
mov
sub
addr16
cmc
pop
jp
aad
(bad)
aas
lahf
xor
dec
push
inc
cmp
leave
mov
arpl
push
fldcw
(bad)
(bad)
jmp
mov
out
xor
jl
fnsave
ret
pcmpgtb
xlat
sub
popa
or
in
mov
push
imul
push
popf
fcom
jmp
sar
ds
xor
and
push
xchg
icebp
int3
push
sub
movs
mov
(bad)
(bad)
mov
in
lods
repnz
pop
or
mov
dec
in
movs
iret
or
push
cmp
(bad)
(bad)
(bad)
jmp
imul
fdiv
outs
arpl
push
cdq
or
int
out
imul
add
mov
push
sub
(bad)
inc
inc
and
scas
daa
cmps
test
repnz
xchg
mov
movs
sub
aas
jbe
inc
sub
dec
movs
add
sbb
std
repz
jp
mov
add
xor
fcomp
lds
jg
aam
(bad)
(bad)
(bad)
(bad)
jmp
sub
(bad)
mov
add
lahf
or
add
mov
inc
mov
(bad)
push
retf
xchg
ins
fcmovu
movaps
sbb
push
mov
aaa
and
out
add
inc
xor
mov
inc
push
(bad)
(bad)
jg
idiv
sub
mov
aad
mov
cmp
push
mov
(bad)
(bad)
(bad)
mov
aaa
lods
add
shl
pop
mov
in
in
sbb
add
mov
sub
(bad)
push
jae
pop
shl
dec
mov
mov
pop
push
es
xchg
xchg
push
je
xchg
adc
sti
dec
loopne
(bad)
dec
cmp
fldenv
jb
and
jge
adc
sub
dec
add
mov
push
repnz
fcom
sar
inc
mov
fsub
sti
xor
(bad)
call
clc
aas
(bad)
fisub
into
mov
cmp
sbb
imul
sar
mov
mov
mov
(bad)
cld
imul
fld
es
pop
adc
mov
inc
icebp
xlat
sub
(bad)
(bad)
(bad)
(bad)
mov
dec
add
aad
dec
aam
push
ret
push
cdq
cdq
std
add
adc
dec
cmp
movs
dec
push
sti
jecxz
dec
les
xchg
jne
fbstp
(bad)
push
pop
fwait
icebp
or
jae
repz
loope
mov
mov
mov
adc
mov
adc
push
in
add
push
cmp
in
push
mov
mov
(bad)
or
ins
ret
ds
and
jmp
fdiv
pop
lahf
mov
pop
pop
or
fs
shr
sahf
push
outs
call
push
dec
in
int
int3
iret
hlt
mov
xchg
call
mov
dec
out
and
push
and
gs
idiv
cmp
dec
dec
or
(bad)
(bad)
(bad)
dec
and
push
dec
iret
push
sbb
retf
xor
popa
idiv
sbb
inc
and
sbb
mov
(bad)
dec
pop
(bad)
or
push
jmp
sub
mov
sub
(bad)
(bad)
jg
in
jmp
loope
mov
pusha
cmc
aas
iret
mov
sar
or
push
sub
xchg
out
or
mov
fwait
jo
call
push
in
dec
adc
lea
cmovb
push
sbb
(bad)
(bad)
(bad)
fmul
mov
push
in
addr16
and
inc
lea
ret
fdiv
cmp
pop
inc
push
and
aaa
leave
out
xchg
sar
(bad)
(bad)
(bad)
ja
retf
inc
dec
rcl
leave
pop
std
aam
jb
mov
push
mov
mov
(bad)
(bad)
(bad)
push
lea
mov
ja
cmp
mov
getsec
mov
pop
add
ret
mov
adc
dec
lahf
into
mov
sbb
sub
scas
lods
mov
popa
push
pushf
sub
pop
bound
(bad)
jmp
pop
mov
jbe
popa
popa
mov
dec
je
xchg
ss
test
adc
jg
sub
daa
sub
jmp
cld
rcr
pop
push
sbb
ja
lahf
cmp
xchg
and
sbb
xchg
in
leave
mov
idiv
call
in
mov
sbb
push
jno
sti
je
into
inc
call
fsub
pop
and
push
fidiv
mov
jge
(bad)
(bad)
(bad)
mov
retf
hlt
mov
xchg
sub
and
mov
das
jb
mov
sub
inc
push
cmp
in
cmp
loop
call
or
sbb
mov
inc
cli
(bad)
dec
out
lods
push
xlat
mov
xchg
push
pop
mov
inc
jnp
cmp
sbb
lea
mov
(bad)
call
movs
jg
cmp
or
jle
push
jno
mov
daa
mov
(bad)
jmp
or
mov
xchg
dec
out
test
add
(bad)
mov
and
jmp
div
adc
inc
sbb
not
fcomp
arpl
xlat
pop
mov
lods
xchg
scas
xor
push
hlt
mov
pop
dec
and
jmp
mov
mov
das
mov
mov
outs
(bad)
sar
ja
dec
(bad)
iret
jge
push
push
sbb
rcr
(bad)
(bad)
jg
push
pop
aad
mov
dec
pop
pop
dec
dec
push
aas
mov
rcr
push
les
pop
push
or
sub
(bad)
and
mov
mov
mov
data16
mov
cmps
data16
lock
(bad)
call
add
or
add
je
fstp
pop
jmp
mov
mov
dec
mov
mov
jmp
les
in
clc
call
sbb
cld
jmp
mov
repnz
lods
mov
aaa
or
push
aad
(bad)
jmp
pop
es
shl
cmc
sbb
inc
leave
jnp
cmps
xchg
xor
dec
sbb
xchg
inc
out
ret
mov
mov
mov
(bad)
(bad)
push
mov
add
pop
outs
mov
fld
hlt
pop
pusha
aaa
pop
in
xor
(bad)
(bad)
(bad)
mov
scas
out
add
imul
xlat
hlt
jae
stos
dec
in
xchg
xchg
or
call
rol
mov
rol
arpl
jo
and
add
call
cmp
(bad)
(bad)
push
inc
mov
(bad)
cli
ror
not
mov
loopne
push
jbe
js
cld
daa
pop
dec
jmp
xor
outs
xor
mov
cmp
mov
sar
mov
or
cmc
loopne
push
mov
xchg
repnz
retf
in
mov
push
retf
aad
js
popa
ins
and
call
cwde
cmps
(bad)
sbb
outs
or
and
int
or
sar
loope
shl
test
push
and
or
adc
aad
(bad)
jg
stos
cmp
sar
mov
ins
cmp
scas
jecxz
repnz
repz
jg
pop
into
rcr
popa
aaa
mov
push
je
add
ins
gs
enter
(bad)
(bad)
(bad)
call
out
cmp
jp
daa
stos
enter
xchg
cmp
sbb
ret
or
imul
(bad)
dec
out
sub
in
mov
scas
clc
cmp
enter
push
sub
(bad)
(bad)
push
jae
(bad)
dec
and
repnz
fcmovu
imul
pop
(bad)
(bad)
(bad)
call
imul
xlat
or
xor
loopne
call
jbe
cmp
aam
cli
sub
pop
hlt
fistp
jle
mov
cmps
cmp
in
mov
and
call
ret
fs
(bad)
jo
dec
(bad)
(bad)
(bad)
call
cld
les
push
enter
pop
pop
ds
loopne
lods
call
leave
scas
inc
data16
push
(bad)
jg
(bad)
xor
std
les
fwait
adc
inc
pop
xlat
rcr
mov
cmp
mov
cdq
mov
(bad)
jg
call
pop
retf
inc
(bad)
jge
aas
xchg
cmp
mov
sbb
fs
mov
(bad)
jmp
in
push
xchg
or
cli
pop
mov
call
push
mov
push
dec
ja
xchg
(bad)
(bad)
(bad)
(bad)
fdiv
sti
arpl
test
(bad)
or
dec
push
movs
imul
(bad)
jmp
cli
adc
(bad)
push
jmp
dec
cmps
jecxz
mov
xchg
shld
jo
test
(bad)
call
jb
test
add
pop
ds
mov
xor
inc
(bad)
and
test
dec
pop
int3
retf
lods
mov
push
pop
aaa
xor
paddd
dec
push
mov
xchg
jmp
jmp
jo
sbb
push
pop
les
push
rep
jae
das
pop
pop
int
sub
(bad)
jmp
lods
retf
test
and
ss
push
stos
xor
mov
mov
dec
(bad)
(bad)
(bad)
cmp
(bad)
jg
in
mov
dec
adc
stc
mov
stc
popf
fcom
or
adc
and
pusha
lahf
aaa
fild
sub
push
xlat
sub
sub
jp
inc
cmps
(bad)
and
inc
push
or
stc
xchg
fs
fnsave
push
(bad)
(bad)
jmp
adc
mov
sti
aas
loope
cmp
fwait
jb
(bad)
jno
es
mov
sub
dec
dec
loop
aaa
jmpw
aaa
fsubr
clc
pop
cmp
in
outs
xor
(bad)
fbld
mov
or
jbe
mov
or
(bad)
cmp
add
mov
in
int
xchg
scas
dec
adc
push
add
sbb
(bad)
(bad)
(bad)
(bad)
aas
pop
push
xchg
inc
xchg
gs
shr
jg
lods
inc
jp
push
into
call
inc
jne
cmp
rcr
pop
xchg
test
fldcw
retf
and
clc
fisubr
xchg
fnstcw
aam
inc
or
xor
fidivr
jg
adc
(bad)
fiadd
sub
dec
pop
rcl
(bad)
call
mov
jp
jmp
jle
xchg
or
pop
(bad)
(bad)
(bad)
push
js
das
sbb
sbb
mov
movs
or
je
fild
cmps
mov
(bad)
(bad)
(bad)
call
shl
fisttp
xor
aam
cld
aad
int
or
mov
retf
retf
jecxz
dec
std
inc
inc
cmp
xor
rol
or
(bad)
(bad)
inc
pop
movs
daa
jns
cmp
sar
lods
call
(bad)
(bad)
call
lock
sbb
faddp
push
les
push
not
jns
paddw
mov
jg
movs
inc
jns
mov
xchg
aam
push
xchg
std
cmp
push
(bad)
xchg
(bad)
add
call
mov
push
shl
lock
fild
(bad)
aad
xor
fsubrp
jp
push
stos
(bad)
(bad)
push
jns
pop
cmp
add
fsincos
retf
bswap
aam
pop
mov
ins
repnz
(bad)
(bad)
jmp
mov
outs
setp
ins
bound
idiv
or
inc
jns
pop
pop
nop
pop
fstp
call
xchg
mov
jmp
push
mov
repz
cmp
adc
gs
sub
and
jo
sahf
popa
add
jg
(bad)
(bad)
inc
std
call
ss
xor
push
cmp
sub
cmp
lock
movs
test
xchg
or
repz
cmps
xchg
jmp
arpl
pop
imul
adc
dec
inc
dec
cmp
loop
ret
(bad)
(bad)
inc
(bad)
fcomp
cmp
call
hlt
mov
sub
xchg
inc
loop
mov
call
test
mov
cwde
test
test
das
push
push
jp
lea
and
sub
mov
fs
mov
(bad)
(bad)
(bad)
call
adc
lock
jmp
push
pop
sub
inc
add
mov
push
cmp
push
jle
ret
cmp
push
dec
pop
cwde
js
pop
mov
cwde
inc
mov
xchg
ret
push
mov
shl
shr
inc
mov
xchg
in
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fld
shl
lock
scas
fldl2e
in
stc
fidivr
addr16
jg
pop
js
and
xor
cmc
(bad)
call
outs
adc
arpl
jbe
fsubr
push
or
(bad)
(bad)
push
loopne
mov
cmc
std
gs
imul
jmp
ins
push
loope
mov
mov
xchg
push
fld
xor
push
push
jmp
jg
sub
out
aam
jg
mov
ins
rcr
(bad)
(bad)
(bad)
mov
jge
in
cmp
out
pusha
aaa
shr
xchg
test
cmp
imul
sub
pop
enter
mov
inc
cld
ror
nop
xchg
outs
dec
pushaw
in
pop
adc
int3
out
mov
test
(bad)
jmp
pop
sti
mov
pop
pop
jmp
nop
test
call
add
add
or
pop
call
xor
(bad)
(bad)
(bad)
jmp
dec
scas
shl
sub
xchg
imul
fisubr
gs
(bad)
(bad)
inc
push
div
mov
fnsave
test
pusha
lods
push
inc
cwde
les
adc
(bad)
inc
ins
dec
fstp
mov
lock
ss
add
mov
test
call
pop
fs
inc
xor
(bad)
sub
retf
test
(bad)
call
int3
ins
xor
ret
mov
cmp
fisub
rcl
les
(bad)
(bad)
(bad)
call
cs
mov
sub
xor
sbb
in
fucomi
clc
mov
stos
inc
inc
push
cmc
retf
cmps
fnstcw
cmc
or
or
sub
cmp
sbb
sub
test
jnp
mov
shl
jae
sub
dec
sar
push
imul
sub
pop
cmp
popa
add
dec
data16
shr
test
shl
lock
retf
jae
mov
mov
ror
rcl
pusha
pop
and
cmp
(bad)
jbe
shr
js
jge
out
int
mov
or
test
movs
inc
bound
pop
pop
or
xchg
mov
and
jmp
rol
stos
ror
inc
jg
dec
pop
aaa
pop
add
ja
enter
(bad)
dec
push
jl
(bad)
xor
add
(bad)
push
loopne
mov
sub
in
sti
daa
(bad)
(bad)
inc
xchg
ds
mov
xchg
xchg
jnp
lea
idiv
out
rcl
(bad)
(bad)
mov
aas
mov
out
sub
test
inc
adc
push
xor
je
hlt
pop
add
(bad)
movs
pop
and
fimul
out
(bad)
jmp
mov
adc
clc
gs
cwde
in
sbb
(bad)
inc
imul
cmps
push
or
jecxz
ins
imul
adc
psrlw
jnp
in
sub
xor
jmp
mov
pop
mov
add
pop
push
call
(bad)
(bad)
(bad)
inc
dec
push
mov
(bad)
mov
jae
popa
loope
add
xor
mov
cmp
cmps
add
(bad)
jmp
mov
fsub
repz
retf
inc
adc
jns
rcl
(bad)
(bad)
mov
out
scas
sti
push
push
sbb
ds
fs
pusha
dec
jmp
aaa
and
xchg
mov
std
aaa
(bad)
fidivr
pop
inc
add
mov
cmp
jnp
(bad)
(bad)
mov
imul
and
pop
cmp
sub
lods
cmp
fmul
ds
loop
sub
inc
mov
add
outs
sbb
inc
and
jb
fwait
jae
iret
xor
inc
inc
adc
out
push
ins
(bad)
mov
xchg
pop
inc
adc
add
es
sub
xor
(bad)
(bad)
(bad)
call
mov
out
mov
test
movs
test
popf
jnp
sbb
out
mov
push
popf
xor
(bad)
(bad)
inc
jecxz
cwde
hlt
jmp
mov
bndldx
xor
fdivr
mov
pusha
dec
jns
and
ins
mov
fidivr
sbb
call
(bad)
(bad)
(bad)
call
aas
xor
mov
fmul
or
push
mov
and
xlat
push
dec
ret
(bad)
(bad)
(bad)
call
mov
mov
lahf
das
fdiv
(bad)
mov
retf
jne
mov
cmp
popa
inc
lock
mov
jp
and
inc
mov
outs
xchg
cmps
cmp
and
push
sbb
jg
cmp
jg
cld
stos
or
mov
(bad)
(bad)
jmp
test
mov
fbstp
cmc
dec
ror
add
push
cmps
inc
mov
int
dec
sbb
aaa
add
fwait
or
inc
xchg
pop
dec
xor
mov
cli
loop
pop
(bad)
pop
xchg
call
fmul
cmp
(bad)
shl
fdiv
lock
mov
push
(bad)
in
sub
(bad)
(bad)
inc
fisttp
loope
shl
add
mov
(bad)
dec
add
retf
rcl
pop
pop
lods
test
popa
pop
repnz
out
enter
scas
cmp
(bad)
(bad)
jmp
test
xchg
test
mov
mov
and
(bad)
(bad)
clc
pop
inc
fimul
test
mov
ins
add
cli
mov
pop
lea
dec
jl
dec
dec
and
(bad)
fadd
dec
and
(bad)
(bad)
mov
arpl
lds
ret
push
aam
xchg
lahf
xor
or
inc
call
inc
repnz
jle
bound
inc
jbe
pop
out
jae
jge
ds
or
aaa
(bad)
and
push
(bad)
jg
jmp
scas
das
jns
cli
fadd
ss
mov
imul
lods
mov
add
push
jmp
jmp
jl
dec
pop
xlat
les
mov
add
(bad)
push
sbb
and
aas
loop
pop
jmp
(bad)
(bad)
dec
mov
adc
fs
and
and
adc
sub
sbb
cli
sbb
sbb
sub
in
mov
adc
and
nop
rcr
add
or
shr
aas
out
sbb
imul
add
mov
stos
fs
jno
movs
and
call
enter
xor
test
cld
(bad)
(bad)
jmp
push
stc
xor
mov
xchg
ret
add
sbb
sub
in
ins
or
add
(bad)
(bad)
(bad)
fdivp
pop
not
xor
and
mov
pop
pop
jmp
or
mov
imul
int3
dec
(bad)
jmp
(bad)
in
out
mov
xlat
jl
adc
call
add
cmp
sbb
push
push
jae
pop
xor
mov
jmp
test
push
pop
and
leave
retf
push
cs
add
repnz
popf
ss
sti
(bad)
repz
mov
mov
push
cmp
xlat
push
es
test
mov
std
and
in
xchg
stos
(bad)
(bad)
(bad)
call
data16
mov
test
sub
call
and
scas
fscale
mov
cld
icebp
lock
push
mov
and
dec
and
cs
dec
cli
xchg
add
and
pop
push
push
(bad)
(bad)
(bad)
(bad)
jmp
test
jno
cmp
jno
aam
int3
jo
(bad)
in
les
and
add
jno
cld
(bad)
(bad)
(bad)
jmp
jbe
fs
pop
in
repnz
cmp
mov
or
das
repnz
jns
fstp
cdq
cmps
iret
jge
scas
mov
jmp
out
and
jp
or
mov
(bad)
(bad)
jmp
pushf
or
mov
sub
or
lahf
lea
ffreep
loope
fdivr
(bad)
fcomip
push
neg
sbb
dec
cmps
jp
sbb
mov
cs
retf
xchg
mov
pop
cli
jno
(bad)
(bad)
push
pop
mov
dec
inc
jp
xor
mov
cmps
or
cmp
test
dec
push
hlt
sbb
es
movs
xchg
movs
int3
push
pop
ror
mov
or
adc
push
fwait
rol
or
fwait
push
push
and
cld
jmp
loopne
adc
call
(bad)
jmp
shl
and
out
fpatan
aaa
pop
popf
or
mov
xor
or
inc
push
xchg
add
xor
in
and
(bad)
(bad)
(bad)
call
lock
(bad)
mov
aam
fnstenv
shl
retf
lgs
lock
(bad)
jg
push
pop
lods
fistp
fwait
outs
add
or
dec
jl
dec
inc
adc
or
(bad)
jmp
test
xor
sbb
add
jecxz
jle
push
popa
(bad)
(bad)
(bad)
push
push
loop
mov
mov
ficom
in
xchg
pop
outs
cmp
not
dec
fcomi
mov
scas
(bad)
stos
sub
jge
cld
mov
jge
ins
inc
mov
push
dec
out
sbb
sbb
(bad)
fstp
outs
outs
add
jns
xor
add
jae
or
pop
loopne
scas
test
dec
pop
add
frstor
cli
es
jge
retf
(bad)
(bad)
ficomp
(bad)
xor
push
movs
mov
lds
fiadd
test
retf
jmp
or
(bad)
(bad)
mov
mov
sub
lds
(bad)
xor
and
(bad)
(bad)
dec
ss
fild
and
inc
js
push
mov
add
(bad)
push
jl
and
xor
pop
jmp
sub
(bad)
sub
fcomp
int3
mov
inc
aad
fs
push
jne
mov
push
mov
(bad)
(bad)
call
retf
dec
aam
clc
inc
cmp
adc
popa
je
jbe
movs
mov
xor
lods
loop
(bad)
call
pop
pop
(bad)
lahf
xchg
test
outs
pop
mov
jg
sub
sub
fisttp
int3
outs
iret
pop
dec
scas
(bad)
(bad)
(bad)
call
ins
mov
int3
mov
push
sub
cwde
inc
enter
jmp
aas
lods
cdq
ret
inc
dec
adc
call
pop
loop
mov
not
mov
fisttp
pop
mov
dec
pop
mov
inc
nop
call
rcl
jmp
jmp
jle
mov
mov
mov
push
ror
dec
bnd
mov
call
mov
and
jecxz
dec
and
ret
add
dec
dec
and
adc
push
or
repnz
push
std
or
sar
dec
mov
call
loopne
mov
cmp
cmps
dec
sub
dec
stos
xchg
and
clc
(bad)
jmp
cmp
call
pop
inc
sbb
xor
mov
jmp
(bad)
(bad)
call
fstp
pop
dec
add
loopne
and
push
xchg
cmp
inc
mov
das
pop
sbb
dec
(bad)
jmp
scas
leave
das
dec
popf
fwait
je
dec
sbb
dec
push
push
fnsave
mov
mov
repnz
push
sub
xor
inc
cmp
(bad)
jmp
shl
shl
push
xor
sbb
jb
imul
dec
out
movs
out
dec
(bad)
les
test
jnp
adc
imul
dec
rcl
into
mov
push
inc
pop
test
sar
(bad)
(bad)
scas
cmp
js
pop
mov
(bad)
dec
add
(bad)
(bad)
call
call
imul
stc
sbb
xor
add
push
jg
add
dec
(bad)
xlat
fwait
(bad)
xor
jmp
mov
push
test
push
(bad)
call
stc
inc
add
pop
sbb
jae
test
mov
aad
clc
(bad)
(bad)
inc
cmp
mov
lahf
mov
mov
mov
mov
mov
dec
mov
cmova
push
adc
cld
(bad)
sti
ins
push
xchg
or
loope
jns
pop
jmp
xchg
sbb
mov
push
push
icebp
mov
dec
mov
pop
push
dec
mov
push
loopne
push
mov
pushf
mov
(bad)
(bad)
inc
xchg
test
push
ror
neg
fidivr
jns
pop
retf
push
(bad)
(bad)
(bad)
call
xor
imul
or
jno
clc
ds
xchg
inc
ins
call
cld
dec
sbb
mov
mov
imul
das
xor
(bad)
(bad)
cmp
test
add
xor
ins
jne
(bad)
pusha
xchg
ja
dec
or
adc
loop
aas
in
jecxz
add
dec
cmp
inc
hlt
pop
add
cmc
int
jbe
cdq
cdq
ins
jb
push
mov
(bad)
(bad)
dec
sub
inc
push
mov
sub
jmp
mov
push
jl
push
push
inc
shl
jmp
adc
cmp
push
(bad)
(bad)
push
mov
aad
popa
xchg
es
adc
aaa
addr16
or
retf
rcr
int
ret
(bad)
(bad)
(bad)
(bad)
inc
lods
jnp
mov
stc
imul
push
stos
dec
enter
call
ja
push
and
xchg
sub
pop
mov
xlat
imul
fs
inc
(bad)
(bad)
(bad)
dec
adc
adc
pop
in
sbb
shl
inc
ficomp
xor
clc
xor
out
out
xchg
inc
outs
(bad)
call
hlt
mov
dec
mov
add
adc
jb
inc
xor
(bad)
(bad)
(bad)
call
mov
mov
lds
cmps
scas
mov
push
ins
dec
into
or
sub
shr
test
mov
fld
(bad)
jg
loop
std
int
sub
push
xor
mov
jmp
or
pusha
(bad)
(bad)
(bad)
call
or
lods
aas
nop
cs
dec
ja
arpl
int3
dec
cdq
mov
jmp
(bad)
dec
push
in
popf
sahf
ja
fisub
pop
inc
mov
inc
call
fnstenv
in
mov
ja
jmp
int3
xor
not
test
je
xchg
mov
sar
(bad)
out
clc
jmp
jo
fsub
out
cld
xor
mov
dec
repz
and
aaa
std
inc
pop
or
(bad)
xor
xor
stos
and
sbb
test
(bad)
(bad)
(bad)
inc
xlat
sahf
sbb
jl
dec
cmp
ins
jge
fcmovnu
adc
fadd
ds
adc
pushf
adc
add
jmp
mov
gs
(bad)
(bad)
jmp
xor
cmp
sub
pushf
mov
xchg
in
add
jae
cmps
(bad)
call
push
and
aad
xlat
push
jo
stc
cmps
in
pop
inc
bound
aaa
int
pop
(bad)
(bad)
(bad)
push
jmp
dec
outs
mov
mov
mov
(bad)
or
nop
aad
(bad)
call
outs
sbb
out
mov
out
scas
sub
push
popa
mov
inc
xor
loopne
(bad)
(bad)
stc
mov
xor
pop
aam
sub
not
iret
adc
std
xchg
ds
(bad)
call
cmp
jg
pop
dec
inc
mov
add
and
fisubr
push
mov
push
push
mov
jmp
call
js
jbe
(bad)
(bad)
(bad)
(bad)
dec
fwait
cs
call
retf
sbb
cwde
push
mov
fidivr
and
or
jp
retf
js
cld
(bad)
pop
push
rol
(bad)
dec
jle
add
(bad)
call
xchg
(bad)
stos
out
clc
sub
test
and
pop
pop
sub
dec
jle
(bad)
(bad)
dec
nop
dec
out
cmp
test
(bad)
or
dec
and
loope
xlat
push
or
(bad)
in
inc
out
enter
cmc
push
fcomp
and
mov
pusha
pop
(bad)
dec
iret
loopne
jecxz
mov
stos
dec
or
or
push
lods
out
pop
xor
mov
jge
popf
inc
call
cdq
pusha
retf
test
xchg
or
clc
or
sub
jmp
jmp
xor
mov
ret
out
cmp
or
jne
or
xor
shr
(bad)
(bad)
(bad)
call
mov
fstp
stos
add
mov
jge
push
adc
enter
or
pop
mov
retf
or
(bad)
(bad)
jnp
mov
ins
xchg
stos
outs
xor
or
(bad)
(bad)
call
jg
fld
dec
rol
and
int
cwde
or
test
(bad)
dec
mov
nop
adc
jg
jae
push
xlat
mov
add
in
add
(bad)
inc
cld
adc
and
pop
or
inc
stos
xlat
out
or
les
(bad)
(bad)
(bad)
cli
loopne
cmp
cwde
nop
cld
js
push
mov
cmp
arpl
push
and
sbb
call
cli
xchg
and
cs
and
mov
mov
cld
ror
add
(bad)
mov
pop
jo
cmp
(bad)
(bad)
(bad)
dec
add
in
pop
aad
not
test
mov
fstp
xchg
ins
rol
(bad)
(bad)
(bad)
fist
stos
outs
xor
mov
mul
fisttp
mov
cmp
call
push
mov
xchg
push
pop
dec
icebp
mov
mov
out
and
(bad)
dec
int
jae
mov
cs
inc
fs
xchg
lods
mov
lods
cwde
jle
test
lahf
push
ja
sub
xor
stc
cld
(bad)
(bad)
inc
sti
mov
xor
or
mov
jb
lds
sub
(bad)
push
mov
jmp
mov
nop
inc
cmp
and
jb
aaa
xor
add
bound
cmp
(bad)
push
mov
shl
pop
out
fld
push
cwde
jl
das
clc
call
dec
sbb
popf
std
rcl
fstp
out
add
movs
lock
retf
mov
xchg
push
dec
(bad)
retf
outs
(bad)
(bad)
mov
jno
xor
pop
mov
sub
mov
push
cmc
(bad)
inc
scas
es
xor
aad
dec
and
out
stos
hlt
(bad)
jmp
inc
xchg
lahf
inc
xchg
cwde
fadd
(bad)
int3
sbb
sub
cld
(bad)
(bad)
fbstp
arpl
dec
ins
dec
xor
cmc
jl
sti
in
(bad)
js
loope
xchg
ret
std
jns
add
pop
jp
xor
adc
cmp
aas
call
lock
sub
(bad)
push
in
xor
xor
inc
stos
jge
add
add
xchg
fld
test
stc
(bad)
mov
jo
xlat
sbb
or
or
push
in
ds
test
test
in
(bad)
(bad)
(bad)
call
xor
mov
cld
dec
push
ret
mov
sahf
dec
hlt
pop
adc
test
outs
or
popa
leave
call
test
jp
icebp
lock
dec
das
cmps
ins
std
sub
sbb
xor
(bad)
(bad)
call
pop
mov
push
arpl
mov
sahf
jbe
push
lahf
xchg
ret
add
push
(bad)
pop
dec
(bad)
(bad)
(bad)
(bad)
cld
push
mov
jnp
mov
aaa
and
pop
xor
sahf
or
sub
outs
dec
(bad)
xor
sub
(bad)
(bad)
inc
std
js
sbb
repnz
int
dec
int3
mov
das
rol
xor
jnp
pop
fwait
sub
or
jo
mov
mov
jmp
(bad)
(bad)
jmp
pop
adc
xchg
mov
ins
(bad)
push
aad
jge
cmps
rol
sahf
aad
(bad)
pop
adc
dec
push
sbb
or
sub
xor
push
daa
es
sbb
add
loopne
vdivpd
mov
bound
jg
inc
lahf
cmc
xchg
hlt
jp
popa
dec
jb
add
sbb
mov
(bad)
(bad)
(bad)
(bad)
jns
(bad)
repz
jl
rcl
lahf
pop
mov
inc
xchg
push
push
add
pop
xchg
inc
rcl
sar
movs
jmp
mov
repnz
addr16
inc
mov
retf
(bad)
(bad)
push
jb
mov
push
pop
hlt
sbb
cwde
js
sub
stos
inc
xchg
cmp
fdivr
pop
std
jmp
pop
outs
mov
xlat
dec
fld
sub
cmp
xor
cdq
jg
cmp
inc
xor
lahf
(bad)
jmp
xlat
enter
xchg
rol
lods
sbb
mov
(bad)
sti
repz
cdq
inc
pop
push
in
cmc
push
movs
cwde
sbb
push
cmp
xor
push
fidivr
(bad)
or
icebp
shr
ret
and
jae
shl
and
int
dec
call
and
mov
jns
(bad)
(bad)
jmp
mov
sub
lea
outs
aaa
jg
pop
push
(bad)
je
push
xor
(bad)
(bad)
call
push
and
mov
mov
(bad)
sahf
sub
ss
dec
loopne
out
sub
mov
lock
ror
std
stos
push
cmps
cmp
cmp
cld
inc
push
pause
(bad)
addr16
push
push
dec
(bad)
(bad)
(bad)
call
outs
xor
loop
popf
sbb
adc
dec
xchg
mov
pop
(bad)
(bad)
(bad)
jmp
mov
mov
xchg
cwde
icebp
clc
sbb
mov
(bad)
(bad)
(bad)
(bad)
push
dec
mov
adc
pusha
sub
xor
fild
inc
dec
mov
push
jnp
sar
(bad)
(bad)
jmp
adc
loopne
dec
outs
lods
fs
stos
lods
ins
jns
jo
leave
retf
cld
jg
mov
cmp
stos
loope
ror
call
clc
nop
jmp
stos
popf
mov
xor
cmp
nop
out
push
add
lock
es
(bad)
(bad)
(bad)
(bad)
cmp
push
pop
xor
aas
adc
fs
mov
shl
xchg
inc
xor
mov
jmp
rcr
jbe
mov
dec
pushf
pop
mov
mov
jg
pop
js
jbe
stos
shl
cdq
mov
fcmovb
xchg
xchg
shl
(bad)
(bad)
(bad)
out
adc
mov
(bad)
(bad)
jmp
and
(bad)
(bad)
test
imul
mov
sahf
out
aas
jae
test
inc
xchg
xchg
data16
(bad)
(bad)
mov
or
in
lock
scas
push
xor
movs
movs
js
fisttp
or
bound
(bad)
fild
add
pop
xchg
mov
lods
call
(bad)
fisub
mov
and
inc
aad
clc
adc
ja
movs
jmp
inc
cld
pop
test
imul
jns
stos
(bad)
(bad)
inc
dec
xor
mov
mov
cmp
scas
test
(bad)
call
sbb
stos
mov
jo
xchg
mov
repnz
jp
inc
xor
ins
nop
add
inc
repz
hlt
stos
xchg
repnz
mov
nop
mov
(bad)
movs
inc
aas
push
cmp
fidivr
loop
pop
popa
dec
add
test
(bad)
push
lea
loopne
fistp
lods
nop
jge
(bad)
(bad)
mov
or
outs
fdiv
test
outs
test
(bad)
(bad)
inc
call
test
jbe
fsub
xchg
gs
push
int
jbe
int
(bad)
(bad)
(bad)
call
cmp
rol
punpckhbw
push
or
inc
add
pop
jae
mov
popa
(bad)
(bad)
(bad)
cmp
sbb
mov
cmps
dec
loopne
ja
pop
fisubr
and
mov
xchg
(bad)
arpl
push
and
jbe
(bad)
fs
inc
das
mov
fld
jmp
or
mov
xlat
pop
ror
sub
sbb
(bad)
(bad)
(bad)
mov
iret
leave
dec
dec
ins
movs
mov
sbb
sbb
or
(bad)
(bad)
jg
jb
sbb
inc
repz
idiv
out
mov
add
adc
inc
clc
cmp
cwde
mov
(bad)
(bad)
(bad)
jmp
ins
loop
adc
iret
or
inc
js
shr
mov
cmp
fdivr
(bad)
(bad)
(bad)
inc
and
cmp
mov
mov
loop
sub
fdivr
hlt
push
retf
cli
(bad)
(bad)
fisttp
adc
mov
rcr
sub
pop
rol
in
jbe
cmp
lods
add
sub
out
clc
jmp
inc
and
addr16
xor
popa
(bad)
cli
and
hlt
in
je
cld
jmp
push
js
imul
jle
divps
rcl
xchg
aaa
cld
pop
and
outs
sbb
ss
lock
inc
call
std
push
pop
dec
xchg
out
les
mov
xchg
(bad)
sub
cmp
mov
cmp
(bad)
(bad)
push
mov
jbe
add
xchg
mov
adc
daa
shl
(bad)
(bad)
inc
les
out
mov
fidiv
pop
mov
xchg
lock
cmc
inc
jb
xchg
dec
or
(bad)
jg
call
outs
xchg
arpl
fcom
cmps
fldcw
nop/reserved
push
loop
fdivp
jne
xchg
cwde
sbb
(bad)
(bad)
call
out
mov
jg
shl
ret
mov
mov
inc
clc
cli
lods
dec
int3
cmps
xchg
adc
jmp
retf
scas
xchg
jp
in
add
(bad)
out
push
cli
cmp
sub
adc
push
rcl
sbb
push
sbb
loopne
(bad)
(bad)
(bad)
ds
mov
mov
aas
(bad)
cli
push
imul
jecxz
call
call
(bad)
dec
mov
test
ins
xor
jns
jne
inc
dec
(bad)
mov
adc
jp
shr
inc
cmc
jmp
(bad)
inc
add
cmp
out
inc
pop
je
mov
lahf
test
sbb
mov
cdq
sbb
sub
jle
cmp
repz
dec
out
sub
(bad)
(bad)
(bad)
call
jge
cmp
xor
cmps
jnp
dec
fwait
mov
dec
test
fnstenv
addr16
or
(bad)
(bad)
(bad)
mov
jae
adc
or
fmul
adc
add
hlt
xlat
or
sti
jo
clc
sbb
pop
adc
lahf
iret
mov
stos
data16
stos
sti
adc
adc
nop
add
and
dec
jnp
lea
ins
jecxz
mov
push
loopne
jae
push
cmp
stos
(bad)
(bad)
(bad)
jmp
retf
lds
and
or
cwde
mov
(bad)
ret
(bad)
jmp
lods
pop
int
mov
dec
push
cdq
jae
data16
aas
repnz
xchg
ds
(bad)
(bad)
call
or
stos
add
ret
cmc
movs
inc
pop
pop
fldcw
or
into
pop
inc
adc
nop
retf
ins
and
loope
(bad)
inc
jmp
mov
call
retw
and
mov
fadd
call
push
sar
or
push
sbb
div
retf
(bad)
(bad)
(bad)
call
cmps
(bad)
xchg
mov
jnp
xor
push
push
repz
cmps
pop
sbb
add
fisttp
mov
(bad)
(bad)
icebp
iret
xor
dec
sar
dec
inc
dec
clc
or
pop
cmp
jo
div
icebp
and
(bad)
call
cli
(bad)
inc
lods
xor
retf
jge
call
int
cmps
inc
cmp
es
fucomi
test
pop
jg
fs
scas
and
mov
dec
mov
or
(bad)
in
loope
packsswb
push
push
add
push
pop
pop
outs
loop
fist
ret
mov
test
ret
aas
mov
ja
mov
push
(bad)
data16
fsub
push
dec
jle
int
and
dec
mov
add
dec
nop
or
sbb
lahf
mov
int3
popf
mov
add
jle
pop
inc
rcr
popa
ss
jp
out
outs
xchg
rol
xchg
(bad)
out
mov
data16
dec
cmp
adc
es
xor
(bad)
jge
(bad)
scas
clc
dec
adc
pop
dec
dec
(bad)
idiv
jmp
adc
movs
or
sub
mov
ins
daa
pop
hlt
dec
movs
sub
(bad)
(bad)
(bad)
call
rol
jg
cmp
jo
fs
dec
out
mov
(bad)
(bad)
call
sub
or
imul
xlat
cmp
xor
inc
xor
and
push
dec
ror
or
sub
(bad)
(bad)
(bad)
jle
into
or
inc
fbld
out
sahf
xor
repz
cmp
mov
mov
push
ja
xor
sbb
adc
leave
push
arpl
scas
cli
(bad)
fild
sbb
lds
pop
in
pop
test
xchg
(bad)
(bad)
(bad)
cmps
(bad)
loopne
int
shl
push
and
xchg
fwait
aaa
js
jl
mov
dec
adc
cmp
and
inc
aad
xchg
cs
into
aam
jle
mov
xor
mov
aam
out
int3
sub
(bad)
(bad)
push
out
dec
cli
xchg
(bad)
inc
fstp
je
jmp
inc
inc
out
(bad)
inc
adc
(bad)
int
xor
sub
jecxz
adc
mov
(bad)
(bad)
mov
adc
test
push
stos
mov
(bad)
rol
(bad)
(bad)
(bad)
call
jb
mov
int
rol
popa
push
test
jmp
push
lea
lea
std
mov
mov
jns
sub
inc
mov
push
(bad)
cli
sub
(bad)
imul
lea
rcr
jg
(bad)
dec
lahf
xchg
dec
mov
scas
retf
pop
cmc
dec
icebp
dec
xor
and
mov
pop
ss
(bad)
(bad)
jmp
jae
mov
retf
enter
ja
inc
(bad)
nop
fisubr
sti
(bad)
jmp
adc
sub
je
test
mov
adc
pusha
add
pop
ret
mov
(bad)
(bad)
jg
icebp
cld
xchg
(bad)
pop
sbb
ret
repnz
jmp
or
xor
sub
lods
aas
xchg
xchg
(bad)
(bad)
(bad)
call
cwde
inc
push
dec
push
imul
mov
sbb
mov
jno
addr16
lahf
fucomip
fiadd
nop
shl
iret
push
(bad)
(bad)
mov
cmp
addr16
js
jl
or
add
leave
mov
adc
sub
(bad)
push
sub
lods
in
inc
mov
je
jo
das
sub
sub
pop
or
inc
pop
or
inc
pop
inc
mov
mov
(bad)
jg
popf
ds
ret
mov
mov
int3
outs
out
ret
rcl
add
in
inc
std
call
fwait
xor
jmp
(bad)
(bad)
(bad)
fiadd
jmp
pop
mov
inc
mov
or
ja
(bad)
(bad)
call
loop
sub
sub
inc
repz
(bad)
jge
pop
push
rcr
fwait
aas
dec
fild
(bad)
cmp
sbb
pusha
fstp
jmp
(bad)
call
ins
jae
add
test
xchg
in
push
mov
es
jno
jne
inc
xor
(bad)
call
xchg
cli
pop
adc
movs
jns
push
test
and
pop
popf
add
in
(bad)
mov
ja
push
pop
mov
popf
xlat
mov
mov
imul
xchg
add
je
xor
adc
lods
aad
xchg
dec
inc
xor
dec
ss
(bad)
dec
cmp
pop
adc
ins
xor
cmps
mov
(bad)
(bad)
(bad)
cli
int
mov
cmp
add
icebp
stc
ds
inc
rcl
sub
ins
out
(bad)
fsubp
arpl
loopne
cmp
(bad)
(bad)
(bad)
std
out
add
outs
daa
popf
ins
out
jne
bndstx
stos
push
sar
xchg
daa
fisub
test
(bad)
(bad)
jmp
and
lahf
nop
call
adc
iret
cli
fiadd
cmc
imul
push
mov
std
xchg
or
pop
hlt
xlat
mov
aad
ja
leave
hlt
push
fild
jns
and
dec
or
kmovw
(bad)
mov
cmp
and
cmp
push
inc
sub
xchg
push
add
mov
sbb
push
push
xor
pusha
jbe
mov
dec
js
shl
out
hlt
dec
jb
movs
sub
retf
sub
mov
sbb
jmp
cmps
dec
cld
xchg
lock
dec
(bad)
(bad)
(bad)
mov
jnp
fmul
aad
lock
mov
das
clc
mov
cmps
in
sub
pop
jmp
jg
clc
jg
jle
xchg
jmp
ret
pop
fnsave
pop
mov
jge
inc
mov
jmp
sbb
test
(bad)
(bad)
push
fwait
(bad)
lea
mov
fcomi
or
xor
aas
test
ja
jp
(bad)
(bad)
call
mov
mov
push
ins
inc
inc
mov
pop
lock
in
xor
add
push
pop
mov
adc
push
jo
xchg
cmc
sbb
(bad)
(bad)
jmp
push
(bad)
sub
xor
inc
sahf
sbb
pop
sub
and
je
ja
push
sub
stos
jmp
fsubr
pop
ja
(bad)
mov
fiadd
ins
stos
(bad)
jmp
(bad)
(bad)
(bad)
clc
jae
fmul
enter
sub
mov
xchg
(bad)
call
jbe
cmp
pop
fcmovbe
addr16
test
(bad)
lods
push
stc
outs
mov
fcos
call
mov
js
es
mov
or
sub
mov
pop
cmp
(bad)
(bad)
cmp
xor
xchg
add
loopne
cmp
stos
or
shl
pop
ins
xchg
sub
jmp
or
xchg
lds
aas
sub
pop
jg
adc
es
clc
mov
out
add
(bad)
dec
lods
mul
jmp
lea
ds
loope
add
cli
aam
xor
pop
cs
(bad)
call
xor
jge
inc
jp
and
in
adc
push
(bad)
ror
dec
lock
enter
mov
les
cmp
mov
ja
add
cmp
inc
imul
test
fstp
test
imul
mov
and
sti
scas
scas
clc
mov
add
(bad)
pop
fnstcw
(bad)
outs
lea
and
pop
shl
or
inc
idiv
aaa
cmp
out
aas
or
mov
dec
cdq
xor
(bad)
(bad)
(bad)
push
dec
mov
mov
mov
test
pop
and
test
sub
(bad)
fwait
(bad)
jmp
movs
out
(bad)
jb
xor
hlt
(bad)
dec
sub
jmp
add
repnz
ins
sub
cld
mov
out
fidiv
fild
or
xor
dec
add
and
add
mov
je
adc
adc
mov
(bad)
jg
(bad)
data16
push
popa
and
into
jne
fst
cmp
test
(bad)
(bad)
(bad)
jmp
push
pop
cwde
cli
cs
pop
pop
nop
sbb
and
adc
xlat
fnstsw
inc
sub
test
(bad)
(bad)
call
retf
mov
cmp
sahf
mov
data16
das
test
pop
fs
cmps
(bad)
(bad)
jmp
pop
stc
dec
dec
dec
rcl
xchg
cmp
or
sbb
(bad)
(bad)
(bad)
dec
or
int
cdq
jae
cli
pop
in
fstp
imul
inc
jmp
(bad)
rcr
add
(bad)
(bad)
(bad)
jmp
ja
in
stc
and
inc
mov
dec
push
(bad)
xchg
sahf
cmp
mov
mov
stos
call
and
jecxz
push
movs
dec
jns
hlt
shl
mov
lock
lods
outs
inc
fs
ins
mov
cmp
jo
dec
sub
(bad)
inc
mov
out
cdq
in
lea
pushf
call
jecxz
jg
ins
imul
daa
addr16
ret
inc
retf
leave
dec
jb
int3
mov
jnp
fwait
mov
jbe
sub
adc
xchg
pop
push
into
mov
paddsb
iret
shl
or
push
ret
jle
mov
inc
aaa
mov
mov
xor
(bad)
jmp
in
xchg
xchg
pop
aad
inc
sbb
pop
and
shl
bound
(bad)
jmp
call
fild
jae
in
loop
dec
out
dec
sbb
(bad)
inc
fnstenv
add
shl
shl
lea
xor
or
fisubr
jmp
cmp
xlat
enter
inc
hlt
or
dec
(bad)
dec
out
pop
ror
inc
pop
push
dec
mov
dec
test
test
adc
push
outs
fcomip
call
and
xchg
push
mov
mov
dec
inc
mov
cld
fwait
(bad)
inc
sbb
adc
js
sub
repz
int
scas
push
or
push
(bad)
mov
fnsave
adc
test
(bad)
(bad)
call
inc
out
int
jb
add
push
cmp
adc
nop
clc
(bad)
mov
add
push
ret
cwde
cs
fadd
fld
and
sub
mov
(bad)
mov
imul
inc
sar
lods
js
out
mov
outs
mov
xlat
nop
cmp
(bad)
ss
rcl
call
test
inc
mov
mov
add
movs
(bad)
(bad)
(bad)
dec
pop
lahf
ret
xchg
aad
xlat
fwait
dec
aam
mov
ret
mov
mov
in
aaa
aaa
inc
clc
jmp
or
sbb
or
fwait
dec
mov
repz
inc
(bad)
mov
xor
cmp
(bad)
push
ds
(bad)
pop
lods
cmp
cmc
(bad)
(bad)
(bad)
cmp
mov
pop
dec
sti
and
add
(bad)
(bad)
mov
inc
div
xchg
call
movs
or
(bad)
(bad)
call
dec
call
fcmovnb
pop
je
daa
and
jmp
aad
addr16
fistp
pop
jnp
cmp
cs
(bad)
(bad)
(bad)
(bad)
mov
xchg
mov
mov
sahf
jmp
jp
(bad)
mov
call
idiv
cdq
(bad)
les
out
retf
call
movs
xor
mov
mov
add
(bad)
fistp
jmp
retf
pop
xor
fld
(bad)
cmp
cmp
mov
jae
repnz
push
(bad)
(bad)
(bad)
call
pop
mov
sbb
inc
cmp
iret
cmp
jmp
add
ds
iret
and
push
cld
jmp
cwde
push
push
retf
fdivr
xor
mov
mov
(bad)
(bad)
(bad)
out
push
adc
shl
mov
mov
div
jp
loopne
ins
dec
pushf
lock
jmp
push
push
les
lea
cmps
out
(bad)
(bad)
(bad)
jg
fcomp
pop
stos
xchg
test
inc
out
jp
mov
cmps
es
xchg
fstp
(bad)
(bad)
(bad)
(bad)
fdiv
in
ins
rcr
iret
jae
push
dec
xor
fcom
push
sbb
push
stos
sbb
ret
(bad)
(bad)
(bad)
(bad)
jge
div
xor
push
mov
faddp
and
xchg
and
xlat
ins
pop
ds
out
(bad)
(bad)
(bad)
call
xlat
sub
dec
call
adc
fwait
(bad)
not
pusha
mov
mov
(bad)
movs
add
mov
or
xchg
mov
ds
add
call
push
je
sub
cmp
mov
je
fwait
jecxz
ror
call
(bad)
std
inc
pop
jo
mov
adc
jp
inc
xchg
add
mov
mov
or
push
mov
and
cld
in
(bad)
dec
(bad)
aaa
pop
(bad)
fucom
je
jmp
pop
or
mov
test
jmp
nop
or
sbb
mov
scas
outs
push
es
inc
mov
sbb
mov
xor
xchg
bound
sar
mov
enter
popa
out
sbb
and
movs
add
fcomp
xchg
inc
mov
(bad)
push
bound
jg
adc
and
xchg
(bad)
ror
mov
scas
cmc
mov
sbb
mov
aas
pop
movs
(bad)
(bad)
(bad)
dec
retf
inc
(bad)
fdivr
add
add
push
pop
fsubr
jmp
or
in
and
in
clc
push
enter
call
clc
aam
add
jmp
loop
lahf
fmul
dec
mov
or
(bad)
push
(bad)
push
push
jo
xor
jg
arpl
cmp
xchg
fisttp
push
idiv
inc
(bad)
les
aaa
ret
pusha
mov
cmp
jp
ror
mov
cmp
dec
adc
hlt
movs
sbb
and
inc
retf
fs
fdivr
call
mov
dec
ret
syscall
leave
cmps
ins
test
cmp
xchg
repnz
enter
outs
adc
std
jp
push
sub
mov
(bad)
(bad)
jmp
fcmovnbe
daa
imul
loopne
cli
mov
ins
lea
push
jmp
xor
mov
(bad)
(bad)
(bad)
call
adc
inc
adc
jb
ins
xor
inc
jp
xlat
lods
push
mov
(bad)
(bad)
(bad)
call
aad
xor
pop
(bad)
stos
mov
test
sbb
jl
or
jl
cmp
(bad)
(bad)
call
nop
clc
in
movs
in
iret
(bad)
outs
cmc
and
leave
sbb
cmps
push
int
call
(bad)
(bad)
push
sub
xchg
xchg
fild
mov
fwait
xchg
leave
xchg
dec
xor
push
and
dec
cwde
test
jecxz
(bad)
(bad)
push
dec
push
popa
dec
xor
(bad)
clc
or
fsubr
pop
in
loopne
mov
cmp
mov
(bad)
std
into
push
push
ror
mov
push
xchg
mov
jg
sub
test
scas
into
ret
mov
or
cmp
dec
push
mov
inc
inc
cli
pop
push
aaa
daa
rol
jno
sbb
(bad)
(bad)
(bad)
(bad)
aas
(bad)
dec
ficom
dec
int3
jbe
pop
push
xlat
aad
iret
inc
lock
and
or
mov
(bad)
(bad)
(bad)
jl
dec
aam
pop
les
sar
std
jnp
ret
std
adc
test
sahf
fisubr
call
mov
and
push
les
loop
(bad)
(bad)
(bad)
mov
jne
popa
cmp
add
jbe
mov
jbe
xchg
fisttp
push
jno
bound
(bad)
(bad)
jmp
movs
push
cmp
cwde
addr16
and
push
pop
inc
es
or
and
mov
pop
xchg
es
jmp
popf
stos
clc
js
inc
xor
or
adc
enter
lods
pushf
ret
(bad)
call
mov
mov
imul
xor
jb
les
aas
data16
cwde
add
(bad)
dec
clc
mov
mov
xchg
xor
mov
out
mov
(bad)
jg
add
out
fisubr
int
jbe
mov
mov
(bad)
inc
pop
lods
fwait
cmp
movs
shl
and
mov
loop
rcr
sar
(bad)
call
sub
loop
push
test
and
pop
aaa
fadd
add
xor
(bad)
or
lds
imul
call
pop
lahf
test
mov
sbb
xlat
aaa
mov
cmps
cwde
mov
or
and
pop
mov
push
icebp
(bad)
cmp
idiv
mov
xor
lar
push
jmp
xor
ds
nop
adc
inc
pop
loope
out
adc
and
test
inc
add
mov
movs
nop
ret
inc
push
jp
adc
pusha
and
xor
xchg
and
(bad)
inc
adc
dec
cmc
push
lock
enter
(bad)
(bad)
lahf
stos
mov
sub
loopne
jmp
in
push
sub
retf
inc
cld
adc
cmps
dec
pusha
pop
fcomip
inc
(bad)
(bad)
inc
mov
or
(bad)
psubsw
jp
mov
mov
add
inc
adc
push
mov
idiv
mov
jbe
sbb
pushf
xor
aas
mov
and
sbb
enter
(bad)
jmp
push
jp
or
dec
das
fadd
out
ret
push
dec
outs
xor
pop
sub
cmp
(bad)
dec
arpl
out
sbb
inc
or
jg
mov
and
and
cmp
popa
xchg
xor
(bad)
mov
mul
xor
dec
push
jns
data16
xor
cs
sub
push
sbb
push
cmp
ret
add
call
dec
jge
push
jne
sub
pop
ret
push
push
lock
(bad)
or
add
jns
dec
mov
stc
popf
and
(bad)
push
scas
cmps
iret
mov
sbb
pop
sub
mov
sub
aaa
ret
sbb
xor
inc
pop
mov
cmp
mov
jmp
ds
mov
repz
sbb
into
jb
cmp
vunpcklps
(bad)
push
aad
(bad)
(bad)
dec
push
pop
mov
dec
push
out
dec
scas
mov
shr
mov
lods
stos
imul
adc
mov
ret
cwde
loope
inc
pop
addr16
sub
rcr
mov
add
into
inc
test
enter
push
sub
movs
cs
dec
mov
jmp
je
adc
(bad)
(bad)
push
std
xchg
pop
xchg
xchg
ror
add
mov
jge
scas
les
lea
sbb
(bad)
(bad)
jg
push
test
pop
sar
inc
adc
or
data16
pop
pop
push
(bad)
(bad)
dec
test
es
mov
push
xor
outs
pop
xchg
pop
sub
xchg
mov
sbb
cmp
mov
(bad)
(bad)
or
jg
inc
xor
mov
dec
and
mul
(bad)
(bad)
(bad)
fist
sub
cs
iret
sub
mov
push
jo
pop
test
idiv
retf
add
(bad)
shl
push
inc
add
(bad)
(bad)
(bad)
cmp
adc
je
(bad)
bnd
loope
add
aam
nop
ins
or
fisub
adc
jmp
mov
cmp
and
cmp
ret
div
pop
sub
(bad)
call
imul
fadd
ret
(bad)
dec
daa
lock
sbb
daa
daa
pop
jle
mov
mov
jmp
(bad)
jg
out
mov
test
mov
movs
pop
add
out
and
xor
inc
retf
jle
sti
clc
mov
(bad)
(bad)
jmp
popa
dec
cmps
mov
pop
into
loope
jbe
repz
inc
sbb
or
mov
(bad)
inc
cmp
fstp
cmps
repnz
jmp
in
ins
jnp
scas
jmp
(bad)
mov
(bad)
(bad)
call
mov
out
idiv
pop
repnz
jb
jle
not
push
xor
inc
(bad)
(bad)
(bad)
inc
cmp
mov
sbb
push
adc
hlt
pop
xor
dec
out
xchg
call
mov
pop
sar
push
mov
out
jmp
jle
lahf
pop
dec
inc
cmp
(bad)
dec
ret
stos
sbb
xor
je
aaa
jg
mul
mov
(bad)
jl
or
fld
ss
lods
dec
leave
test
ret
ret
dec
jl
in
into
into
(bad)
(bad)
(bad)
jmp
stos
(bad)
cmp
and
add
mov
dec
aam
or
jae
or
je
pop
sbb
scas
jecxz
adc
(bad)
(bad)
(bad)
mov
mov
xchg
xchg
retf
xor
inc
jb
ja
(bad)
cmp
(bad)
(bad)
call
aad
xchg
dec
pop
sbb
stc
scas
retf
pop
cs
sub
cli
fmul
mov
(bad)
(bad)
cmp
xchg
xchg
call
data16
jge
xor
test
cmp
jbe
(bad)
(bad)
mov
out
repnz
inc
jl
push
iret
dec
push
(bad)
fst
rol
sbb
clc
(bad)
call
push
jmp
repz
add
cmp
or
mov
mov
add
popf
call
mov
mov
ja
adc
dec
adc
call
mov
and
test
(bad)
inc
and
adc
call
fs
cli
cmps
mov
sub
inc
ret
(bad)
(bad)
call
call
mov
xchg
cmp
pop
push
add
cld
(bad)
push
(bad)
aad
add
pop
rol
jecxz
add
add
push
mov
cmp
inc
popf
cmp
jns
mov
sub
mov
(bad)
call
dec
sub
fidivr
icebp
push
aaa
xchg
les
sbb
stos
inc
(bad)
fcomip
inc
cli
fcmovb
retf
ins
in
je
popa
fimul
and
sbb
xchg
(bad)
sar
(bad)
(bad)
(bad)
aas
sahf
xor
mov
ja
jnp
hlt
(bad)
mov
ins
pop
scas
pop
dec
push
ficomp
(bad)
(bad)
(bad)
jmp
jbe
push
xchg
mov
fidiv
icebp
cmps
inc
imul
cmp
add
std
jmp
dec
mov
mov
adc
out
dec
in
ror
mov
lods
scas
(bad)
(bad)
(bad)
call
or
and
xor
xor
lea
pop
imul
movs
inc
arpl
(bad)
(bad)
(bad)
(bad)
cmp
int3
loopne
fist
sbb
push
inc
inc
stos
dec
inc
rol
mov
mov
ins
(bad)
(bad)
(bad)
(bad)
mov
push
pop
ror
leave
mov
js
mov
add
fs
inc
adc
sbb
(bad)
call
xchg
and
pop
pop
or
dec
sbb
(bad)
(bad)
cmp
and
outs
sbb
lds
dec
or
mov
pop
and
and
xchg
or
push
xchg
xchg
inc
(bad)
fcomip
out
pushf
outs
inc
scas
mov
outs
adc
or
in
into
sub
(bad)
(bad)
(bad)
(bad)
call
adc
in
push
repz
ret
sub
fdivr
fdivr
je
(bad)
(bad)
jmp
loope
leave
and
mov
addr16
xchg
pop
daa
(bad)
xchg
aam
movs
and
sar
jmp
pop
call
sub
(bad)
xchg
or
(bad)
jmp
adc
leave
mov
mov
mov
or
cs
cmc
outs
imul
aas
xor
(bad)
(bad)
inc
rcl
xchg
jne
jno
pop
daa
lea
sti
inc
call
(bad)
call
fsubp
shr
pop
rol
pop
mov
pop
sbb
mov
xor
xchg
mov
fld
cmc
jg
dec
jecxz
and
movs
outs
in
shr
and
pop
push
xor
jne
leave
(bad)
mov
test
adc
sub
in
and
inc
add
hlt
call
cwde
mov
test
(bad)
push
js
pusha
mov
or
loopne
inc
push
pop
(bad)
in
nop
xor
jmp
popf
push
mov
add
nop
sub
add
(bad)
mov
push
adc
lds
clc
jmp
int3
rol
jl
or
scas
(bad)
pop
cmps
sbb
push
(bad)
(bad)
(bad)
inc
mov
xor
dec
push
cmp
or
sub
imul
(bad)
inc
pop
push
pop
adc
sbb
fimul
mov
fdivr
fldenv
pushf
or
jb
aam
pop
cmc
mov
gs
pop
ficom
cld
jg
popf
or
(bad)
repnz
(bad)
(bad)
jmp
in
pop
pop
adc
adc
and
cmp
aam
push
dec
dec
imul
cld
ficomp
gs
mov
add
mov
and
inc
push
test
fadd
test
(bad)
(bad)
mov
je
js
mul
ja
cmp
xor
jg
sbb
add
(bad)
(bad)
fdivr
adc
jmp
loop
es
add
add
stos
and
stos
mul
bound
ds
jmp
add
ror
fidiv
iret
and
mov
call
call
nop
and
dec
ins
pusha
dec
loop
push
xchg
iret
fs
sbb
loop
aaa
cld
call
test
cmp
mov
movs
add
shl
jp
test
(bad)
mov
sbb
arpl
sub
adc
int
lods
retf
inc
iret
loop
lahf
jle
mov
sbb
dec
iret
rcr
add
adc
data16
fs
outs
cmc
cs
jle
js
lods
std
inc
jns
shl
xchg
fbld
(bad)
jmp
mov
mov
into
and
lods
mov
inc
loopne
sbb
jnp
mov
cmp
pop
dec
mov
int3
and
and
(bad)
(bad)
(bad)
jg
inc
mov
loopne
adc
dec
dec
hlt
fidivr
cld
loopne
mov
inc
xor
test
sub
inc
dec
(bad)
(bad)
(bad)
(bad)
cmp
call
sbb
cmc
xor
jge
ret
std
sbb
jle
mov
cmp
call
fldcw
into
(bad)
enter
mov
out
xchg
pop
dec
pusha
call
fisub
popf
sub
push
movs
dec
sbb
dec
(bad)
mov
add
inc
imul
sar
call
push
or
xchg
shl
xchg
out
cli
outs
push
xor
inc
test
mov
(bad)
xchg
pop
int3
out
(bad)
test
cmovle
xor
rol
mov
dec
aas
(bad)
(bad)
(bad)
jmp
mov
dec
xchg
scas
dec
jmp
and
bound
(bad)
loope
inc
adc
ss
(bad)
(bad)
(bad)
jmp
push
sbb
cmps
add
xchg
enter
retf
xlat
leave
jg
mov
hlt
cmp
xor
(bad)
(bad)
jmp
sbb
mov
cs
or
inc
and
(bad)
push
leave
ficomp
stc
xchg
dec
and
in
push
ss
(bad)
lock
out
aam
retf
(bad)
mov
jle
mov
jmp
push
mov
daa
aaa
pop
mov
inc
sub
inc
sbb
jo
call
(bad)
(bad)
fcomip
pop
dec
cmp
es
ror
xor
idiv
retf
ror
mov
(bad)
(bad)
push
cli
xchg
push
or
daa
pop
inc
aam
call
rol
cmp
mov
inc
lahf
into
mov
mov
pop
out
pop
(bad)
pop
cmp
mov
(bad)
(bad)
(bad)
dec
inc
push
sub
jg
push
stc
mov
lods
and
(bad)
out
dec
rcl
mov
mov
(bad)
mov
ret
xor
fst
cli
pop
inc
(bad)
(bad)
(bad)
push
mov
mov
aaa
call
add
push
jle
xchg
push
jmp
inc
add
mov
loopne
(bad)
(bad)
inc
inc
cmp
jg
rol
icebp
cmp
(bad)
int
or
dec
popa
shr
mov
movs
(bad)
(bad)
(bad)
push
mov
inc
stos
movs
(bad)
adc
inc
mov
into
shl
cs
or
ret
loopne
fdivrp
(bad)
(bad)
inc
test
sub
cwde
mov
bound
mov
adc
ss
stc
sbb
and
dec
sub
cmp
(bad)
(bad)
jg
int3
adc
arpl
stos
inc
mov
das
inc
aas
out
inc
xchg
mov
pop
call
(bad)
(bad)
push
mul
dec
pop
jns
pushf
xchg
fs
pusha
sbb
adc
(bad)
mov
fisubr
not
lock
stos
les
(bad)
push
or
stos
das
ficom
lahf
pop
adc
pop
outs
push
mov
movmskps
dec
iret
and
(bad)
push
cmc
enter
mov
ror
hlt
bound
shl
inc
fisttp
ret
push
jl
(bad)
(bad)
jmp
les
aad
cmps
xchg
or
adc
(bad)
mov
(bad)
mov
mov
(bad)
mov
sub
popf
in
dec
dec
dec
pop
sub
daa
cwde
test
and
clc
repz
cwde
int3
fld
(bad)
in
jle
outs
and
jae
inc
dec
jnp
cmp
arpl
mov
loop
mov
scas
retf
adc
inc
xchg
mov
ja
and
sbb
cs
add
push
push
adc
pop
mov
into
mov
sbb
nop
sahf
mov
add
pop
add
aad
(bad)
dec
cmp
inc
out
push
sbb
jg
adc
ret
mov
jg
add
(bad)
out
cli
imul
fs
or
in
sub
(bad)
dec
sub
xor
dec
push
push
adc
faddp
outs
inc
icebp
js
dec
inc
push
xor
push
sbb
lods
addr16
icebp
sbb
pop
(bad)
(bad)
(bad)
push
sbb
dec
pop
out
xchg
mov
std
cmps
movs
mov
xor
cmps
fnstsw
jmp
mov
mov
xor
pop
mov
or
dec
push
inc
test
outs
(bad)
(bad)
cmp
outs
repnz
fisttp
sub
lea
lods
fwait
retf
mov
adc
(bad)
cmp
jmp
mov
std
sub
or
and
jo
pop
sbb
fld
mov
jmp
sar
ja
cmp
pushf
add
sub
jne
sbb
(bad)
(bad)
(bad)
call
into
not
or
in
fcomip
adc
cmp
jne
or
cmps
int3
ins
nop
mov
inc
and
adc
clc
clc
pop
inc
or
movs
jle
shl
es
mov
cmp
add
mov
adc
jo
xor
ds
pop
(bad)
(bad)
call
leave
mov
xor
aad
aas
and
mov
lods
and
push
dec
adc
stc
(bad)
(bad)
call
sbb
ja
fcomp
(bad)
adc
jne
xchg
fidivr
add
fsubr
aas
scas
loope
(bad)
(bad)
mov
inc
cmp
in
sbb
mov
popa
jb
arpl
mov
(bad)
jmp
mov
dec
cmp
or
fsub
or
lahf
inc
cld
mov
jge
mov
ret
pop
enter
int
cmp
cmp
xchg
(bad)
aam
nop
mov
(bad)
(bad)
mov
adc
(bad)
into
push
cmp
(bad)
adc
cwde
jg
mov
or
pop
lds
adc
jmp
push
(bad)
call
shl
sub
and
mov
popf
sub
pop
jmp
lods
add
les
push
stc
sbb
and
shl
sub
adc
add
push
ss
sar
shl
cmc
push
sub
and
(bad)
(bad)
(bad)
inc
jae
test
test
xor
adc
stc
xchg
or
fidivr
mov
(bad)
jg
call
sar
ds
pushf
cmp
adc
mov
out
(bad)
(bad)
(bad)
push
cmp
mov
or
rcl
adc
xchg
in
stos
call
push
push
mov
test
sar
push
(bad)
mov
cli
(bad)
jmp
jmp
cmp
pop
imul
(bad)
jmp
(bad)
pop
pop
or
in
or
loope
mov
push
xor
fcomi
jbe
jne
(bad)
(bad)
call
arpl
cmp
repnz
inc
sbb
and
and
jmp
addr16
neg
or
dec
icebp
jnp
(bad)
(bad)
(bad)
call
into
(bad)
fsubr
loopne
test
push
mul
pop
add
das
mov
aam
inc
fadd
ss
mov
xchg
aaa
je
jo
stos
mov
inc
aam
mul
cld
(bad)
(bad)
dec
lea
sbb
sub
retf
adc
(bad)
repz
jo
jp
push
mov
stos
out
or
dec
(bad)
(bad)
(bad)
(bad)
push
inc
sbb
ffreep
and
cdq
pop
inc
sahf
pop
das
ss
mov
jmp
imul
(bad)
jmp
dec
xchg
pop
iret
rcl
mov
jg
pop
adc
addr16
add
push
jo
sub
div
jne
call
xor
mov
or
adc
mov
and
icebp
pop
retf
dec
adc
and
jmp
jle
mov
push
pop
in
outs
push
push
or
ja
scas
(bad)
(bad)
mov
int3
mov
inc
test
(bad)
bound
adc
mov
stc
aam
rol
(bad)
(bad)
(bad)
fidivr
mov
stos
mov
cmps
scas
sbb
loop
imul
push
mov
pop
pusha
mov
push
mov
out
jle
aas
call
call
je
imul
call
jecxz
out
retf
adc
xchg
lahf
popa
in
dec
or
add
(bad)
(bad)
(bad)
call
data16
inc
mov
jae
jmp
mov
scas
or
stos
bound
pop
jo
xlat
ds
sub
mov
(bad)
out
jge
into
cdq
test
xor
cmps
mov
loop
add
add
dec
xchg
mov
cs
lods
nop
pop
test
jb
(bad)
jmp
and
jmp
popa
pop
dec
push
bound
add
(bad)
jmp
outs
xchg
std
sub
xchg
jmp
lods
push
cwde
in
jl
mov
dec
les
inc
clc
call
mov
mov
aas
push
pop
push
(bad)
(bad)
dec
je
outs
xchg
stos
xchg
ins
je
div
fwait
sub
cwde
pop
push
adc
std
mov
test
mov
jmp
inc
dec
lds
das
jnp
xchg
push
out
daa
ins
sbb
in
loopne
pusha
pop
inc
pop
cmp
in
fadd
inc
into
sbb
push
(bad)
(bad)
(bad)
jg
and
mov
cli
(bad)
xor
mov
imul
xchg
popf
inc
iret
mov
(bad)
(bad)
(bad)
in
jp
(bad)
mov
movs
call
fldcw
and
ins
fnstcw
ins
push
(bad)
(bad)
(bad)
jmp
xchg
data16
rcr
jne
push
je
mov
mov
scas
or
(bad)
jmp
dec
or
cli
js
xor
in
mov
push
add
mov
ja
xor
inc
mov
call
dec
mov
jge
inc
adc
inc
pop
outs
(bad)
sar
inc
mov
ror
test
(bad)
pop
mov
inc
cmps
bound
dec
(bad)
(bad)
(bad)
call
jb
mov
pusha
lahf
mov
jnp
pushf
xor
pop
jmp
div
push
or
(bad)
(bad)
(bad)
(bad)
jp
mov
push
fdivr
vmwrite
das
pop
push
ss
shl
test
lods
out
(bad)
(bad)
(bad)
inc
daa
push
pushf
sbb
outs
fcomp
cmc
fld
push
push
adc
sbb
sbb
mov
jno
dec
shl
cdq
xchg
and
dec
push
dec
pop
jbe
(bad)
(bad)
(bad)
jmp
pop
mov
mov
test
lods
iret
outs
jg
xor
jne
sbb
and
(bad)
inc
push
adc
lock
mov
dec
jp
cmps
dec
int3
stc
ret
rol
ret
ins
call
js
cmp
or
mov
jmp
add
scas
and
cmc
mov
add
nop
pop
sub
bound
add
push
xor
mov
repz
loopne
adc
jmp
or
das
push
push
push
sbb
and
sbb
pop
add
lea
inc
push
push
push
(bad)
mov
imul
push
add
add
int
add
lock
mov
dec
cmp
shl
dec
sar
ret
les
push
pop
ret
add
aaa
and
add
rcr
or
push
retf
push
enter
test
mov
and
or
pop
sbb
jmp
xchg
rol
test
dec
nop
jl
rol
jg
jne
cmp
js
and
out
cmp
push
add
and
add
pop
and
(bad)
aas
jmp
adc
cs
cmps
add
add
or
pop
out
sbb
(bad)
(bad)
mov
mov
loopne
lock
fisubr
cmp
and
inc
xchg
dec
cld
push
xor
(bad)
jl
cmp
xor
clc
jg
xor
push
mov
clts
loopne
or
lea
sbb
push
xchg
add
add
daa
sbb
sbb
aaa
inc
push
and
ret
fld
pop
add
mov
pop
daa
cmp
cmp
aaa
inc
push
addr16
into
dec
in
sti
dec
clc
pop
pop
(bad)
jg
lods
add
jl
add
addr16
adc
mov
xchg
add
or
pop
pop
daa
inc
sbb
inc
inc
addr16
sbb
sbb
paddusb
or
add
pop
pop
adc
std
daa
cld
cmova
addr16
cmc
and
ja
pop
out
jnp
inc
add
and
frstor
pop
inc
xchg
daa
adc
add
push
xor
inc
clc
clc
mov
(bad)
popa
fucomi
in
inc
cmp
and
inc
push
pop
mov
clc
addr16
jg
or
adc
push
js
inc
lock
neg
das
stos
inc
adc
and
inc
es
sbb
add
push
or
and
cld
lods
and
sbb
ret
pop
neg
xchg
mov
and
(bad)
jns
out
push
cld
clc
lock
sub
cmp
adc
push
sub
push
add
icebp
fisub
push
and
and
or
loopne
movs
and
and
addr16
shl
inc
imul
jecxz
ja
push
rcl
es
push
push
xor
sbb
jo
sbb
or
addr16
cld
jecxz
ja
pop
adc
jo
jae
fbld
inc
pop
sbb
arpl
adc
addr16
sbb
mov
add
ret
and
adc
out
adc
ret
mov
iret
add
add
repz
cmps
inc
adc
and
adc
lock
adc
dec
jle
jo
sbb
push
pusha
dec
add
add
iret
call
pop
nop
jg
fimul
add
jle
push
lahf
xchg
test
jnp
(bad)
and
add
mov
mov
(bad)
out
adc
add
inc
add
mov
out
jae
adc
adc
or
pop
daa
aaa
inc
cmps
push
cmp
xor
iret
repz
cmps
push
push
or
(bad)
data16
push
jg
aas
clc
push
jo
lock
pavgb
pop
jae
cmp
pop
pop
daa
aaa
inc
push
addr16
shl
iret
repz
imul
call
mov
xchg
adc
push
push
and
dec
mov
addr16
lock
test
imul
add
add
cmp
sbb
or
inc
inc
and
pop
add
inc
push
dec
lods
push
addr16
sahf
ins
jbe
int
push
jg
into
ds
cmp
into
popf
fnstcw
sbb
pop
daa
aaa
inc
push
jmp
push
sub
add
mov
jbe
pop
pop
add
mov
div
addr16
sub
inc
ja
aam
and
xchg
push
mov
push
into
(bad)
es
pop
pop
daa
mov
fs
sub
cmps
and
push
pop
and
or
ins
(bad)
retf
xor
add
add
or
add
imul
add
ud0
ins
xchg
inc
pop
xorps
movs
xchg
sub
outs
fmul
push
and
mov
mov
pop
(bad)
mov
ja
jno
or
xchg
daa
dec
xor
retf
lock
es
mov
nop
mov
mov
add
cmp
mov
js
jmp
pusha
data16
es
push
out
add
cmp
pop
js
lock
xchg
stos
push
and
pop
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
adc
test
push
cmp
add
dec
or
adc
jp
mov
and
or
xchg
sub
mov
add
ins
add
mov
or
push
add
jnp
cmp
xor
add
or
or
dec
xor
jle
dec
push
stos
xor
inc
push
sub
(bad)
cmp
xor
inc
add
inc
inc
ss
mov
cmp
add
call
or
sbb
add
aas
fsub
sbb
cmp
push
pop
jp
aas
push
jae
add
or
jmp
test
dec
inc
pop
call
iret
push
lock
add
std
ins
pop
sbb
add
xor
sub
por
adc
xchg
mov
mov
add
add
iret
and
mov
lds
popa
add
push
cld
pop
add
or
daa
inc
pop
ins
or
add
arpl
cmp
sbb
syscall
mov
add
push
out
mov
inc
sub
cmp
push
push
jp
pop
lds
pop
es
outs
mov
inc
pminsw
dec
xor
adc
sub
dec
jae
loopne
dec
xchg
pop
add
dec
sub
es
mov
xorps
ret
add
adc
nop
jg
push
jge
xchg
test
data16
push
push
mov
sbb
push
adc
add
je
push
add
packsswb
dec
and
xchg
pop
sbb
imul
sub
shl
dec
add
es
mov
sbb
aaa
or
or
and
inc
inc
add
(bad)
aaa
arpl
outs
sub
add
sub
scas
add
add
mov
fs
mov
cmp
popa
add
add
add
and
mov
cwde
add
and
push
add
outs
add
or
or
sbb
jp
add
outs
sbb
dec
and
jecxz
adc
or
or
push
sub
adc
fcom
adc
jbe
add
sub
das
xor
aam
movnti
inc
ins
arpl
arpl
adc
jbe
lahf
jae
and
cmp
imul
idiv
pusha
ret
xor
jns
push
test
mov
mov
pop
mov
push
mov
gs
mov
xlat
jp
add
and
push
dec
rcr
imul
call
push
imul
ror
add
and
sbb
shl
sbb
adc
sub
or
pop
fs
arpl
inc
and
pop
aas
imul
inc
or
adc
in
add
or
retf
popa
fwait
xchg
inc
or
sbb
push
(bad)
xchg
dec
lods
aas
inc
mov
push
mov
add
xor
jnp
sbb
xor
sbb
frstor
adc
add
sub
or
dec
imul
movs
dec
nop
pop
aaa
mov
or
imul
aaa
fwait
mov
aaa
and
mov
ins
add
pop
jecxz
fdivr
sub
stos
or
xchg
ret
retf
mov
push
nop
sbb
hlt
inc
xchg
dec
imul
sbb
xchg
pop
or
out
inc
or
and
jb
add
outs
and
loopne
pop
jns
retf
push
sbb
add
and
xor
scas
movs
aas
nop
test
inc
dec
imul
jp
dec
gs
or
and
add
aam
loop
mov
mov
js
push
ficom
iret
xchg
mov
aaa
ja
cmp
popa
ja
pusha
mov
mov
adc
adc
sub
push
xor
dec
push
xor
add
and
sbb
cwde
pop
addr16
aad
or
adc
pusha
mov
mov
push
test
add
imul
or
and
or
test
dec
dec
inc
imul
xchg
sub
ds
jmp
stos
jns
sub
pop
xor
mov
and
push
fdiv
repz
jae
pop
ret
sub
mov
mov
inc
xchg
imul
add
and
inc
xchg
jle
cmps
shl
push
pop
data16
inc
repz
fst
(bad)
lea
shr
outs
dec
jnp
add
mov
jecxz
cmp
xor
inc
push
ins
mov
sbb
adc
cmp
pop
and
loopne
test
scas
sub
xor
(bad)
xor
xor
(bad)
push
pop
ja
push
pop
aaa
cmp
or
inc
add
jae
pop
arpl
inc
gs
pop
aas
add
or
cs
add
ja
xor
inc
aaa
outs
xor
adc
pop
je
sbb
clc
jne
or
inc
and
arpl
daa
and
cmp
push
rol
mov
adc
xchg
add
sbb
inc
dec
(bad)
mov
sar
push
mov
cmp
xchg
sbb
not
push
push
mov
pop
xor
adc
adc
adc
(bad)
sbb
ucomiss
pop
jae
pusha
lods
push
test
push
lea
imul
push
mov
jb
mov
cmp
add
imul
xor
imul
or
mov
mov
jge
push
fcom
and
cmps
pusha
jg
popa
lds
or
or
mov
xlat
push
adc
jbe
add
jmp
jecxz
add
not
rol
dec
cmp
add
outs
and
and
mov
iret
adc
or
ss
out
sbb
add
push
sbb
outs
add
add
pop
iret
inc
or
or
loope
push
mov
sbb
adc
out
and
retf
adc
ret
pop
imul
push
push
pop
fist
gs
push
adc
and
adc
mov
lods
fcom
xchg
push
rol
(bad)
jmp
adc
push
mov
mul
and
or
xchg
mov
pop
pop
dec
add
scas
add
xchg
mul
pop
aam
test
sbb
js
add
mov
ror
movups
inc
pop
dec
xchg
and
outs
mov
inc
fistp
rcl
add
sbb
add
or
daa
jb
push
xor
pop
push
push
jb
push
or
jb
add
jb
push
jb
or
aaa
jo
push
movups
std
adc
mov
mov
pop
dec
ror
adc
and
sub
mov
mov
fiadd
adc
dec
add
jo
out
xchg
push
jno
push
add
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
inc
inc
push
add
and
movs
movs
bound
cmps
add
mov
mov
rcr
adc
push
outs
dec
jb
(bad)
pop
pop
test
add
dec
and
sbb
push
sbb
loopne
es
psubusw
adc
(bad)
mov
push
je
push
outs
ja
adc
popf
adc
test
ret
xchg
shl
pusha
(bad)
ds
sbb
inc
cmp
rcr
jo
adc
mov
ss
xchg
dec
pushf
movs
aam
icebp
sbb
fiadd
xchg
push
xor
mov
xor
popf
mov
(bad)
pop
mov
mov
fild
dec
sbb
sbb
add
push
push
lock
inc
add
sbb
fisttp
jo
inc
mov
or
pop
add
retf
inc
sbb
adc
xchg
sub
add
mov
add
xchg
aaa
jae
push
mov
das
pop
rol
jb
ficom
add
sbb
and
jmp
or
enter
adc
lods
mov
fisttp
adc
pop
and
(bad)
push
das
inc
inc
sbb
mov
les
and
inc
xchg
mov
or
cmp
or
gs
test
inc
push
sbb
sbb
inc
test
cmps
gs
xchg
mov
push
inc
daa
stos
jge
push
push
in
jmp
and
mov
dec
add
pop
test
ja
add
popf
inc
push
inc
add
xor
sbb
add
sub
fsubr
imul
xor
dec
and
inc
cmp
add
add
sbb
jge
inc
jae
imul
je
push
outs
mov
cmp
add
lahf
inc
addr16
js
push
adc
stos
sbb
adc
movs
aad
sub
fst
xor
adc
(bad)
jecxz
and
cld
push
push
popa
imul
in
mov
sub
or
cmp
add
pusha
adc
adc
and
jg
(bad)
mov
lock
add
shr
sbb
pop
push
aam
popa
jb
xchg
pop
pop
add
movs
and
je
and
sbb
and
jnp
pusha
add
mov
adc
xchg
inc
add
in
mov
nop
adc
sbb
mov
adc
dec
lahf
ss
xor
fst
arpl
test
(bad)
push
sbb
mov
push
adc
jb
add
js
sub
add
rcl
sub
data16
add
arpl
push
aaa
stos
(bad)
arpl
mov
gs
mov
mov
test
pop
imul
or
shr
movs
test
call
cmp
loopne
pop
dec
outs
loopne
sbb
or
inc
stc
or
or
mov
sbb
push
mov
pop
and
addr16
inc
fs
xchg
pusha
int3
push
in
and
xlat
pop
pop
and
xor
inc
mov
push
cmps
adc
mov
mov
adc
cdq
inc
mov
pop
fsub
shl
add
mov
in
jae
inc
sub
add
popf
mov
mov
fxch
repz
sbb
push
push
mov
icebp
push
(bad)
adc
pusha
ins
push
pop
pop
sbb
xlat
xchg
add
test
leave
add
popa
cmp
or
cmps
xor
pop
sbb
inc
test
xor
leave
sar
rol
test
jae
addr16
add
inc
fstp
or
or
outs
push
jmp
lds
icebp
lods
jo
mov
test
add
ja
or
fcom
jcxz
in
or
cmp
pop
inc
mov
mov
or
ins
jp
pusha
jo
cwde
dec
popw
arpl
test
cmp
outs
das
pop
imul
test
test
inc
adc
push
add
pusha
jo
xor
inc
inc
add
fist
popa
inc
fwait
rol
lahf
xor
retf
gs
add
popf
movs
add
or
bound
mov
dec
(bad)
cld
push
jne
test
test
adc
push
gs
fwait
rcl
arpl
xchg
repz
and
ins
add
push
test
les
push
mov
push
or
fs
inc
sub
jo
nop
mov
sbb
ret
loopne
mov
add
rol
and
push
add
push
mov
cmp
and
xor
mov
outs
inc
inc
and
sti
ins
imul
cmp
mov
nop
sbb
adc
outs
aaa
dec
adc
cmp
jne
sbb
shl
add
adc
in
jo
aaa
call
add
bound
repz
daa
dec
xor
pushf
sub
out
jno
adc
adc
and
movs
and
out
mov
rol
or
dec
aas
sbb
sub
in
cmp
jecxz
inc
inc
ins
push
pop
mov
sbb
lea
ja
inc
ins
outs
jae
imul
and
popa
test
inc
mov
rol
push
hlt
xchg
int3
jl
dec
mov
icebp
sub
ja
outs
arpl
adc
out
rcl
outs
adc
lock
jmp
inc
xchg
jge
outs
cld
dec
outs
imul
ficomp
js
das
dec
cli
das
mov
sbb
sub
jbe
ins
or
xor
and
jnp
dec
xor
push
movs
pushf
js
je
or
push
inc
jae
out
push
inc
pop
arpl
sbb
popf
rol
xor
adc
add
loope
ds
jbe
pusha
nop
and
cmc
inc
inc
jnp
sub
dec
jb
stc
mov
data16
push
addr16
mov
mov
add
(bad)
xchg
jecxz
jnp
and
adc
push
ins
xchg
push
addr16
dec
or
shl
and
aas
sbb
sbb
dec
add
inc
cld
pop
popa
pop
mov
adc
dec
outs
dec
jae
jbe
shl
add
stos
xchg
test
outs
dec
cmp
in
jb
addr16
(bad)
jmp
jae
ins
loopne
daa
dec
push
dec
inc
xor
test
cmps
sbb
outs
sub
or
jbe
pop
fcom
push
jp
call
jae
pop
bound
adc
adc
pop
arpl
mov
ror
dec
xchg
add
dec
sbb
cwde
shl
inc
fldcw
mov
mov
in
jns
add
push
sub
and
xchg
add
mov
mov
in
and
loopne
fstp
xor
ficom
ins
clc
xor
add
movs
add
adc
or
mov
and
mov
add
data16
gs
mov
loopne
and
enter
stc
ss
jne
xchg
add
cmp
outs
jae
test
test
aad
sbb
push
dec
jge
pop
adc
outs
sbb
mov
sbb
and
movs
jnp
and
mov
mov
popa
push
idiv
mov
rol
setno
pop
es
inc
jb
cmp
jbe
fsubr
push
arpl
pop
xor
cmp
mov
pop
push
imul
fsubp
or
dec
adc
data16
pop
jmp
cmp
inc
fldcw
fs
dec
inc
pop
gs
xchg
lods
jo
and
cmp
push
fidiv
adc
shl
mov
fstp
sbb
xor
adc
sub
fwait
add
fwait
daa
sub
mov
daa
inc
in
and
ret
or
mov
xor
leave
add
sub
xor
mov
xor
or
ret
(bad)
jnp
push
push
adc
or
adc
arpl
or
cmc
inc
dec
push
fs
bswap
popa
adc
xor
popa
dec
push
into
test
nop
dec
cmp
movs
int3
(bad)
xor
sub
adc
sub
mov
inc
inc
test
xlat
lock
enter
outs
jae
aas
gs
sbb
sub
sub
mov
xor
jp
adc
cmp
push
cmp
inc
fs
or
(bad)
and
popa
adc
(bad)
int3
mov
repz
adc
dec
add
gs
frstor
lods
leave
pusha
stc
jle
and
and
push
adc
bound
push
and
aas
adc
sbb
adc
jno
lds
popa
inc
inc
sbb
jno
lahf
neg
sub
jo
fwait
mov
icebp
add
ins
arpl
outs
in
mov
imul
fs
add
dec
dec
wbinvd
pop
add
xor
dec
lea
dec
adc
hlt
dec
inc
iret
jmp
aaa
sbb
fisttp
mov
outs
add
dec
lds
xchg
inc
mov
mov
inc
sbb
sub
xor
pop
jge
jo
data16
or
inc
cmp
ins
pushf
mov
xor
xor
in
(bad)
in
xlat
cmc
aaa
pop
adc
mov
push
jo
gs
dec
gs
add
ja
jmp
push
push
rcr
test
pop
pop
imul
loope
gs
and
(bad)
mov
mov
fistp
and
in
leave
movs
adc
mov
xchg
(bad)
ds
idiv
fcom
push
xchg
push
dec
xchg
adc
jae
loope
rcl
push
pop
push
adc
xchg
aas
sub
call
and
rcl
lds
jo
daa
sub
mov
shl
mov
ret
ret
dec
pop
rcr
cmp
sar
sti
mov
ins
pop
mov
outs
pop
loopne
xchg
sub
mov
rcl
mov
pop
pusha
fsub
sub
addr16
outs
adc
add
mov
lar
push
mov
or
add
outs
sub
test
cmp
es
sbb
cmps
and
cmps
cmp
add
(bad)
addr16
jb
fisttp
dec
sbb
mov
in
adc
cmp
jmp
add
repz
test
pop
pop
mov
jecxz
scas
jae
arpl
lds
adc
lahf
push
mov
sub
adc
arpl
mov
mov
push
push
fild
xchg
js
movs
or
cmc
jae
int3
and
push
push
fwait
inc
daa
cmp
pusha
jo
and
dec
test
jg
sbb
daa
adc
and
xor
cmps
mov
xchg
dec
popf
push
pop
pop
jns
add
das
dec
daa
in
pop
nop
mov
mov
xchg
test
sub
mov
sub
fcmovnbe
popa
sar
aaa
cmp
xlat
adc
icebp
mov
cmp
or
jmp
les
mov
push
adc
dec
push
dec
jo
ret
(bad)
adc
jae
add
mov
retf
cmps
(bad)
add
mov
push
push
loopne
mov
mov
pop
mov
sti
dec
imul
adc
inc
add
(bad)
(bad)
fidivr
add
punpcklwd
mov
or
pop
or
dec
adc
fcmovnu
fild
sub
sub
push
cmp
sbb
imul
retf
std
out
ss
or
add
addr16
cdq
jbe
inc
sub
sbb
inc
add
xor
pop
or
or
jae
jp
adc
adc
adc
mov
xor
loope
nop
or
(bad)
fist
add
add
and
movhps
lock
dec
jle
lidtd
push
or
or
xor
inc
adc
in
adc
push
and
push
out
dec
rol
mov
ret
movups
inc
adc
sbb
mov
adc
inc
shl
jle
or
ficomp
xchg
xor
cs
push
and
(bad)
call
adc
sbb
jno
adc
lock
ss
imul
into
ret
pop
lock
nop
fcom
pop
sbb
lock
pop
sbb
jb
(bad)
ja
mov
dec
lock
aaa
(bad)
sbb
cmp
loopne
out
call
cwde
push
pusha
jb
or
adc
and
adc
adc
les
cmp
call
(bad)
js
adc
inc
adc
bound
sbb
or
sbb
(bad)
push
adc
push
and
push
sbb
add
in
fiadd
push
pop
ins
adc
inc
pop
pop
pop
push
ret
ja
lock
add
clc
add
popa
add
pop
addps
adc
and
jp
clc
pop
lock
or
dec
push
inc
sbb
mov
inc
or
mov
lock
and
(bad)
and
push
test
add
dec
lock
pmulhuw
in
inc
jns
xor
lock
add
add
lods
mov
jp
retf
outs
ret
inc
adc
add
sbb
rcl
das
or
mov
mov
or
pop
or
adc
xor
shl
ds
add
lods
sti
cli
lock
add
movs
push
dec
cmp
jle
pop
pop
ja
lock
add
xor
sbb
add
lock
mov
shl
mov
dec
mov
dec
add
push
or
pusha
and
mov
lock
add
or
or
(bad)
add
add
and
inc
or
add
or
adc
test
adc
add
outs
add
scas
loope
and
arpl
push
push
sbb
xor
movsx
xchg
cmp
xchg
je
jge
or
xor
inc
jo
mov
int
push
mov
cmp
adc
clc
pop
loopne
jno
pop
adc
sbb
and
dec
dec
paddsw
sbb
jmp
mov
mov
ror
cmc
(bad)
sub
or
cmp
out
mov
and
mov
aad
cmp
and
ret
outs
ror
mov
rol
or
adc
xor
lock
add
dec
pop
idiv
lock
nop
mov
or
ins
sub
sbb
push
push
add
arpl
arpl
dec
add
neg
lock
pop
pushf
adc
inc
sbb
test
and
mov
push
fcomip
(bad)
call
jle
or
cmp
sbb
nop
test
push
and
sub
outs
clc
xchg
and
jo
add
or
cwde
mov
je
adc
add
pop
ins
test
and
add
(bad)
sbb
adc
and
xor
sbb
xchg
or
dec
cmp
sub
and
push
daa
push
add
add
je
adc
cmps
xchg
sub
adc
jae
sub
sbb
dec
jo
fnstenv
xor
adc
movs
mov
sti
outs
or
mov
inc
or
or
clc
in
out
pop
daa
pop
aas
sbb
pop
sub
dec
outs
push
aaa
adc
outs
cmp
sbb
inc
adc
or
add
cli
aad
cmps
or
or
or
adc
aam
push
cmps
in
jbe
test
cmp
and
popa
mov
jmp
cld
subps
jle
adc
inc
xor
loope
dec
clc
cmp
push
repnz
in
add
dec
mov
xlat
jmp
or
sti
mov
outs
xchg
and
add
xchg
add
push
add
or
add
push
push
mov
push
lock
or
ins
add
dec
lock
(bad)
add
adc
lock
or
in
sbb
add
mov
or
mov
sti
test
mov
sub
daa
outs
push
or
fdiv
fcomi
push
xor
jae
adc
pop
add
(bad)
mov
push
xor
xor
adc
and
sub
loop
pusha
and
adc
push
xchg
mov
xchg
or
sbb
push
adc
push
and
push
je
sti
sbb
or
adc
mov
scas
lds
sub
into
das
scas
(bad)
dec
push
push
sbb
nop
inc
sub
adc
fistp
aas
sbb
ss
xor
cs
loopne
or
aas
mov
sbb
je
and
sbb
je
shl
adc
sbb
push
and
add
sqrtps
push
xchg
call
cmp
lock
add
aam
pop
cmp
stos
lods
fistp
data16
and
add
jnp
jo
retf
pop
mov
or
add
mov
or
pop
cmp
add
test
push
cmps
add
push
or
ret
mov
jmp
xor
cmp
jl
pop
jnp
sti
neg
jno
inc
xor
add
adc
retf
jno
mov
sbb
aas
adc
inc
pop
cs
ds
dec
mov
inc
ficomp
xor
cmp
ds
std
adc
sbb
inc
dec
sub
add
xchg
ins
in
jo
add
ins
lock
cmp
bound
mov
lods
movs
ror
mov
adc
add
and
cs
fs
xor
sbb
lds
adc
ffreep
add
repnz
lock
add
xor
cmp
sub
cmp
mov
shl
jno
and
push
rol
pusha
or
xor
dec
icebp
mov
sar
add
jle
mov
and
or
xchg
push
or
push
or
adc
es
sahf
popa
add
xlat
(bad)
pop
lock
nop
add
sub
and
mov
push
adc
adc
or
mov
call
and
xchg
cmp
push
push
clc
scas
std
xchg
add
jl
and
int3
or
cmps
jne
das
nop
(bad)
data16
pop
add
and
out
sbb
push
jae
call
rcl
mov
xor
call
cdq
inc
add
mov
lock
adc
adc
xor
push
or
adc
fild
or
cmp
and
mov
jbe
inc
les
push
or
or
or
pop
add
dec
mov
or
in
inc
pop
lock
add
push
sub
in
inc
and
add
loope
xchg
lock
add
sbb
push
loopne
push
jae
jnp
cmp
push
or
cld
mov
and
sub
sub
push
jae
dec
cmp
and
int3
dec
cmps
cmp
or
pop
popf
lock
adc
jmp
or
sbb
add
(bad)
pop
loopne
jnp
sub
and
xor
das
add
and
mov
add
inc
imul
xor
jg
popa
mov
inc
cs
push
ficomp
aas
rcr
pop
pop
pop
call
mov
add
pop
mov
adc
add
mov
lock
adc
and
pop
call
inc
adc
pop
aam
and
aaa
mov
les
mov
and
fucomp
jmp
push
daa
mov
jle
inc
adc
pop
adc
unpckhps
mov
cmps
adc
jl
sbb
push
js
sub
imul
inc
inc
packuswb
retf
sub
push
push
sbb
sahf
or
fwait
(bad)
push
or
in
xor
adc
mov
jbe
inc
cli
inc
jne
and
jb
lock
push
push
jae
jl
cwde
or
jnp
adc
and
jmp
lar
lods
mov
dec
cmp
sub
xchg
add
fistp
les
jg
sub
mov
mov
pop
and
js
scas
pop
sub
xor
or
lock
push
dec
mov
sbb
sub
add
dec
pop
jnp
sbb
out
jo
daa
push
(bad)
pusha
jns
sbb
loope
sbb
push
sub
inc
int
cmp
and
call
enter
push
sub
test
fstp
jne
adc
inc
mov
pop
nop
adc
imul
(bad)
fwait
jp
mov
pusha
pop
pop
or
or
adc
nop
int
cmp
mov
fmul
mov
lock
add
jmp
bound
add
and
push
mov
mov
pop
lds
mov
pop
movs
add
shl
add
add
or
stos
mov
imul
mov
les
add
or
adc
xchg
pop
push
inc
or
push
pop
or
ds
push
call
shl
push
adc
sub
arpl
lock
jnp
jo
inc
aam
add
inc
iret
mov
push
in
adc
add
add
pusha
test
or
popf
adc
mov
jg
jo
ror
cld
js
lock
adc
lock
or
pop
push
sub
inc
lock
mov
dec
lahf
add
in
and
loope
push
pop
jg
and
add
sbb
push
adc
lock
cmp
add
rcr
jo
cmp
sahf
lock
je
mov
in
dec
adc
push
mov
(bad)
out
push
sub
adc
ror
jecxz
dec
xchg
or
cmp
dec
inc
xchg
pop
ret
std
mov
or
cmp
je
push
jo
push
test
push
jb
mov
or
and
push
push
sub
xor
idiv
or
and
adc
push
add
dec
adc
sysret
sbb
adc
add
sub
or
mov
es
mov
push
adc
hlt
sub
push
pop
loopne
jecxz
lock
in
inc
xchg
adc
cmp
xor
jp
jg
sbb
add
mov
sbb
and
xchg
imul
pop
jo
push
int3
push
sbb
arpl
xor
xchg
adc
(bad)
cvttps2pi
cmp
ror
inc
sbb
pop
pop
ret
jmp
call
dec
pop
push
mov
push
or
pop
pop
mov
(bad)
xchg
or
lock
or
xchg
mov
or
addr16
clc
add
add
pop
(bad)
xor
xor
push
pop
add
xor
push
inc
inc
adc
xor
mov
mov
mov
test
push
mov
adc
push
inc
and
sbb
jae
outs
add
add
mov
mov
sub
jne
outs
adc
call
xor
or
mov
jns
adc
lsl
dec
and
mov
outs
jne
shl
mov
test
or
add
adc
push
lahf
jg
mov
movs
and
push
dec
cmp
pusha
jo
sub
ret
test
xchg
aaa
popf
jp
out
push
popa
push
rcl
cmps
sub
and
mov
cli
mov
xchg
out
mov
adc
out
sar
push
xor
mov
in
fcmovnb
add
push
xchg
or
sub
prefetcht0
out
mov
outs
and
out
mov
pop
adc
sbb
scas
add
mov
je
sbb
or
cmp
sti
push
or
and
push
pop
add
cmovns
add
in
jle
inc
cs
mov
sub
cmp
jp
shl
leave
ds
lock
out
or
or
cs
xor
jle
dec
adc
sahf
rol
and
mov
call
pop
mov
add
or
push
push
push
pop
fs
cvtps2pi
std
ror
add
or
adc
push
stos
adc
jmp
cmc
daa
int3
cmp
xor
sbb
push
add
adc
add
and
hlt
(bad)
rol
push
mov
inc
call
xlat
inc
sub
push
pop
xor
fwait
adc
sbb
jle
push
mov
inc
sub
fild
mov
test
(bad)
lock
push
dec
sbb
icebp
ss
jnp
push
pop
sbb
or
add
sbb
adc
mov
mov
pop
push
push
pop
push
and
add
adc
das
sub
adc
dec
or
test
imul
stos
inc
or
xor
adc
add
mov
(bad)
or
pop
adc
add
push
lock
adc
and
sub
fdivp
push
ficomp
cld
add
lock
add
sub
(bad)
mov
sbb
jns
sbb
iret
sub
add
js
enter
ret
xchg
packsswb
(bad)
call
scas
inc
push
bound
push
push
sub
mov
push
jne
xor
clc
pop
dec
push
inc
jo
lock
loopne
out
jo
cvtpi2ps
dec
(bad)
push
dec
rol
sbb
pop
pop
or
cmp
push
xor
push
adc
sub
jp
and
inc
test
fild
pop
dec
lods
lock
mov
add
xor
and
nop
pop
sti
sbb
push
push
dec
mov
lock
and
sub
mov
or
push
adc
xor
adc
sbb
mov
xchg
in
ins
push
cwde
loop
mov
add
adc
inc
out
push
pop
add
pop
add
push
pop
fsubr
push
adc
loope
and
loop
(bad)
(bad)
jne
adc
sbb
push
js
arpl
ins
ret
mov
ja
adc
aaa
lock
add
inc
test
adc
into
pop
pop
loope
cmp
jbe
cmp
xor
sub
mov
test
sub
out
sub
dec
pop
(bad)
push
fsubr
push
cmp
dec
add
push
or
mov
mov
and
sbb
add
or
or
sti
push
rcl
xchg
add
sub
xchg
sti
inc
cmp
sub
sub
lahf
mov
pushf
and
(bad)
and
add
cmp
or
add
fadd
adc
adc
bound
mov
sahf
ja
shr
jbe
loopne
cmp
add
clc
in
add
or
lock
or
test
ficom
xor
aam
adc
push
(bad)
arpl
mov
or
push
sbb
mov
cmc
push
adc
popa
add
fsub
add
pop
jno
push
int3
cs
mov
pop
add
jmp
add
bound
push
push
bsr
cmp
sub
sub
pop
mov
mov
inc
sbb
lods
enter
pop
add
jbe
or
sub
mov
jg
cmp
imul
sbb
cmp
and
jmp
sbb
jo
or
add
or
adc
or
push
cmp
and
in
sub
xor
adc
das
cmps
and
or
mov
fisttp
mov
adc
xor
das
or
imul
or
sub
cmp
or
add
pop
inc
and
cmp
data16
adc
cmps
and
or
(bad)
sar
and
sbb
mov
clc
in
jmp
dec
inc
or
(bad)
fcmovnbe
inc
inc
and
sbb
test
add
adc
aad
or
sbb
sbb
mov
es
adc
sub
popa
inc
mov
into
mov
shl
out
and
cmp
les
ins
bound
add
jno
cwde
loop
(bad)
pop
imul
inc
push
lock
daa
dec
(bad)
std
pop
cli
repz
adc
aaa
jb
xchg
xor
stos
inc
xor
cmp
pop
div
xor
(bad)
call
adc
or
dec
adc
sahf
or
add
loop
adc
sub
cmp
stos
mov
push
push
adc
jmp
push
pop
popf
and
add
dec
dec
adc
push
icebp
mov
outs
sub
or
sbb
cmp
add
aas
xor
pop
movs
movhlps
jns
stos
faddp
pop
in
sbb
(bad)
cmps
lahf
pop
adc
push
bound
sub
pop
pop
sbb
enter
pusha
add
inc
or
fbld
dec
outs
xchg
and
sub
adc
lea
pop
ret
sub
sub
inc
xchg
jp
dec
jge
jecxz
lock
mov
add
lock
pop
pusha
stos
or
xchg
std
cld
xchg
aam
test
lds
pop
mov
jge
outs
fild
sub
add
aaa
jbe
not
lock
out
in
les
pop
ins
add
ss
lock
cdq
pop
xchg
adc
add
add
add
call
jp
adc
add
or
aad
mov
(bad)
fistp
add
add
mul
cmp
sbb
scas
mov
inc
popf
test
lock
aas
lea
js
je
sbb
movs
lahf
or
dec
mov
iret
aaa
lock
jl
add
mov
cs
or
and
add
adc
mov
adc
add
xor
(bad)
jg
mov
pop
and
sbb
cld
pusha
and
nop
add
sbb
popa
cli
test
adc
and
fimul
mov
push
inc
adc
sub
pusha
fisttp
sahf
dec
aas
and
add
outs
sub
jbe
in
sbb
xor
or
and
sub
pop
neg
add
sub
inc
sbb
push
outs
push
dec
add
pop
sbb
outs
ins
and
push
(bad)
call
sub
sbb
or
mov
(bad)
(bad)
xor
das
mov
mov
pop
xor
cli
adc
in
ins
add
adc
sbb
or
pop
push
and
inc
and
or
rol
dec
adc
outs
(bad)
dec
jo
jbe
or
or
inc
adc
sub
sub
fild
or
sbb
cmp
push
adc
pop
xor
call
out
sub
test
and
jl
add
xor
jmp
push
mov
rcl
jmp
or
arpl
fwait
ds
or
push
hlt
stos
push
or
pop
add
push
and
dec
sub
call
and
xchg
sbb
push
sbb
cli
ins
xchg
add
and
pop
ds
(bad)
fbld
out
pop
sbb
sub
das
sub
daa
dec
inc
sub
loope
jmp
adc
daa
lock
add
jno
adc
daa
sub
or
cmp
sub
add
push
mov
std
mov
lock
add
imul
jl
pop
fidivr
sub
jp
jnp
pushf
push
ds
lock
push
adc
sub
sbb
(bad)
loopne
jg
push
adc
cmp
or
test
std
fiadd
stos
push
daa
mov
jmp
jmp
xor
add
sbb
adc
adc
or
stos
push
adc
cmp
xor
push
push
pop
adc
adc
inc
and
sbb
dec
pop
push
es
lods
(bad)
call
dec
xor
xor
jae
dec
sahf
pop
xor
adc
push
mov
outs
mov
push
es
cmp
sbb
jnp
imul
movaps
data16
call
out
push
add
lock
add
pop
fucomp
push
gs
pop
cwde
add
add
sbb
and
idiv
sbb
adc
adc
pop
push
adc
cmp
xchg
ins
daa
sbb
outs
jp
outs
inc
inc
mov
push
sub
mov
iret
inc
data16
jp
jae
ja
push
call
push
jae
mov
adc
ds
and
cmps
push
mov
or
mov
fsubr
dec
push
sbb
sbb
adc
je
out
and
xchg
adc
ja
inc
and
nop
push
and
adc
fiadd
add
cmp
sub
sub
or
jg
mov
add
push
(bad)
jnp
into
mov
push
sub
xchg
jb
pusha
fcomp
xor
sub
cmp
and
xor
loopne
rol
push
or
(bad)
inc
add
das
sub
and
sub
pop
add
add
xchg
sub
mov
mov
in
jmp
test
push
in
xor
jno
xor
outs
das
clc
dec
or
and
add
sub
dec
js
aaa
xor
pop
cmp
mov
sbb
and
(bad)
push
and
push
or
xor
sub
push
cmp
or
xchg
inc
xor
add
and
dec
test
push
and
sbb
mov
(bad)
out
or
or
or
mov
(bad)
jg
pop
push
xor
push
push
sub
add
ret
cmp
adc
pop
pop
xor
adc
mov
ss
pop
mov
adc
adc
sub
mov
add
pushf
push
xor
mov
xor
push
inc
mov
add
ins
jle
adc
and
adc
and
sbb
push
(bad)
mov
and
xchg
sub
and
dec
aaa
xor
pop
inc
loopne
loop
dec
and
dec
and
sub
aas
dec
les
nop
mov
adc
stos
adc
sbb
and
fbstp
pop
xor
xor
adc
adc
or
shr
bound
or
mov
addr16
or
adc
add
and
inc
sbb
dec
cmp
inc
sub
jg
sar
fwait
sbb
and
fistp
push
es
cmp
cld
(bad)
loopne
adc
pop
inc
addr16
sub
and
std
jnp
inc
and
or
scas
popf
mov
and
adc
adc
call
or
adc
and
dec
nop
sub
push
and
cmp
pop
ins
call
cwde
daa
sbb
inc
fild
cmp
inc
(bad)
sub
or
(bad)
(bad)
bound
leave
add
push
and
sbb
sub
std
outs
pop
movs
and
or
add
pop
and
and
push
adc
pop
or
retf
sub
imul
mov
xor
add
push
push
push
jp
adc
jb
lock
(bad)
ja
sbb
cmp
sbb
adc
sbb
mov
call
lahf
ret
add
fcomp
inc
push
add
and
cmp
add
mov
push
or
call
adc
pusha
rcl
gs
ins
adc
sbb
dec
nop
add
ja
dec
and
and
lock
sbb
push
sub
sbb
(bad)
out
dec
push
cdq
out
push
loope
test
inc
push
xchg
or
lock
ja
push
push
int3
jp
xor
inc
jp
fs
lahf
mov
lock
test
jl
sar
jecxz
sbb
mov
pop
sub
mov
pusha
xchg
pop
jo
adc
jo
in
pop
in
aam
xor
pop
or
push
push
push
sub
lods
dec
inc
cmp
xor
dec
inc
add
popa
adc
pop
loopne
jg
push
push
je
pop
push
cmp
es
pop
mov
sbb
cmovne
ret
dec
call
jno
inc
cmp
sub
and
xor
loopne
inc
pop
push
add
or
gs
push
shl
pop
cmps
mov
pop
or
mov
mov
pushf
or
or
or
lock
cs
sti
in
or
ins
(bad)
jg
or
or
sub
vmread
rol
sbb
inc
(bad)
or
or
or
or
loop
imul
add
xor
or
push
push
sub
inc
add
dec
push
sbb
push
scas
out
adc
push
aaa
sub
pop
out
imul
cs
jmp
xor
and
pop
cmp
ins
fist
add
and
shl
retf
adc
std
push
dec
and
and
add
fisub
xor
pop
sub
mov
xor
popf
imul
add
or
cmp
jae
bound
xchg
lock
sar
lock
sbb
nop
inc
add
fild
sub
mov
daa
dec
fdivr
(bad)
(bad)
fisttp
pop
pop
sbb
pop
sub
pop
xor
cmp
cs
clc
adc
push
xor
push
pop
sub
or
add
jg
in
inc
pop
xor
and
and
sub
sub
push
sub
loope
adc
add
int3
sub
sbb
push
retf
nop
cmp
sub
(bad)
imul
and
or
sub
mov
push
jl
inc
pop
jl
std
sbb
pop
sbb
xchg
adc
dec
cmp
push
mov
sub
enter
pop
ud0
adc
cmp
cmp
scas
adc
inc
or
pop
sub
adc
stos
(bad)
mov
adc
and
adc
(bad)
adc
mov
pop
or
fcomip
xchg
cli
or
lahf
dec
cmp
sbb
xchg
lock
push
loope
pop
sbb
add
jmp
adc
inc
(bad)
(bad)
(bad)
call
sbb
pop
or
cmp
ds
fmul
sub
add
mov
xor
loope
mov
imul
inc
clc
pop
shl
cmp
fdivrp
call
data16
push
ds
cdq
pop
aas
mov
and
adc
add
ds
inc
call
xor
add
xchg
mov
add
xor
push
xor
and
xor
push
adc
div
add
add
fiadd
je
das
jo
cvtps2pd
pop
add
addr16
in
div
jb
xor
in
adc
sbb
push
ret
ret
adc
inc
movs
push
push
xor
sub
mov
and
das
daa
dec
inc
pop
xor
clc
daa
xor
data16
sbb
inc
xor
shr
pop
push
mov
and
push
mov
jge
cmp
or
scas
neg
add
mov
sbb
xor
sbb
dec
in
and
jbe
je
cmp
jge
das
jbe
add
mov
push
das
xor
xor
dec
add
adc
sbb
lock
ds
aas
adc
(bad)
test
or
add
cmp
sbb
das
sub
xor
arpl
xor
push
xor
sbb
fs
lfs
das
xor
push
add
sub
sub
test
cmp
and
push
fcmove
or
lock
adc
fdiv
add
mov
sub
jnp
inc
sti
aaa
stos
cld
add
and
and
lahf
and
sbb
mov
jmp
mov
dec
xor
lock
hlt
or
xchg
or
cs
xor
adc
or
sbb
nop
cmp
lock
push
or
adc
inc
mov
push
or
dec
or
or
or
add
push
xchg
add
mov
outs
or
and
clc
pop
nop
pop
xor
sub
mov
ds
adc
out
aaa
adc
xchg
fs
or
pop
or
add
pushf
jg
mov
bound
pop
push
das
lds
or
xchg
mov
pop
lock
add
or
lock
(bad)
fcomp
xor
sub
inc
cmp
push
clc
inc
jae
pop
leave
or
or
psubsw
mov
inc
inc
push
inc
adc
cmp
xor
pop
div
ret
add
lods
push
fs
arpl
pop
and
stos
popa
push
mov
add
cld
test
mov
or
pop
adc
sti
add
adc
sar
or
add
jns
jp
pop
cld
mov
and
test
sub
jmp
popa
sbb
or
or
or
or
or
pushf
pop
xor
mov
aam
add
je
fstp
dec
add
add
jnp
and
pusha
add
or
jo
pusha
ins
or
or
push
idiv
clc
and
inc
xor
call
xor
or
adc
add
test
push
btr
adc
adc
push
jo
and
pop
nop
loope
pop
and
ficom
xor
add
mov
and
dec
pop
hlt
icebp
outs
push
es
ss
sub
inc
xor
cmp
cld
aaa
aam
adc
add
cmp
call
inc
dec
das
and
and
fs
or
sbb
fisubr
inc
inc
add
or
mov
and
dec
movs
(bad)
cmps
push
add
out
mov
adc
rcr
aam
mov
adc
xchg
add
cmps
push
inc
and
sbb
dec
jno
ror
pop
and
ins
cmp
pop
fcomip
pop
jl
gs
loop
adc
push
jecxz
adc
sbb
add
je
push
(bad)
dec
mov
adc
pop
out
sbb
jno
cmp
adc
adc
pop
pop
dec
xor
fisttp
pop
xor
pop
sbb
adc
pop
sub
movq
cvtpi2ps
cmp
sbb
push
push
cmp
sbb
mov
xor
cmp
dec
cld
mov
dec
sbb
push
push
lock
ds
xor
les
and
cmp
jne
cmp
xor
pop
(bad)
push
test
push
inc
daa
push
cmp
xor
ss
sub
in
xor
sbb
push
aas
or
mov
jnp
push
xor
cmp
inc
push
dec
cmp
cmp
adc
add
push
daa
mov
int3
sbb
push
test
fcmovu
cmp
sbb
adc
mov
fimul
and
push
push
push
adc
fs
and
adc
sbb
inc
ss
das
or
push
add
and
aaa
fdiv
sub
mov
and
or
mov
push
cld
sbb
push
inc
adc
les
(bad)
fbstp
inc
mov
push
sub
and
adc
lods
push
xor
(bad)
mov
push
add
pop
test
push
sbb
sbb
inc
es
inc
push
(bad)
loop
call
or
pop
adc
add
and
and
inc
pop
addr16
jmp
sbb
lock
add
sbb
adc
and
adc
adc
inc
add
add
jmp
shl
adc
jge
sbb
xlat
or
or
adc
lea
ss
pop
lock
inc
das
dec
adc
and
xor
xor
push
mov
pop
fdiv
add
inc
or
add
pop
shr
mov
ss
pushf
pop
rcl
sbb
aaa
jecxz
fistp
mov
push
cmp
inc
inc
movntps
(bad)
push
pop
inc
sub
es
and
daa
xor
rcl
cmp
inc
mov
ss
cld
sbb
ins
sbb
cs
sbb
in
hlt
dec
mov
dec
les
call
mov
add
sti
aaa
dec
inc
dec
pop
sub
adc
adc
sub
(bad)
in
pop
xchg
and
and
and
shl
sub
push
push
aam
xor
loope
pusha
jp
pop
out
pop
imul
idiv
lahf
or
movaps
mov
ja
pop
inc
push
adc
push
pop
call
push
and
sbb
xor
sbb
(bad)
sub
pop
ret
add
call
xchg
ins
data16
lods
jns
(bad)
push
jbe
xchg
push
dec
mov
es
pop
inc
mov
adc
sub
sbb
dec
jg
div
dec
dec
push
rcr
xor
add
sbb
adc
pop
fdiv
rcr
inc
fimul
test
mov
or
xor
push
es
or
call
call
and
xor
cmp
and
cmp
push
adc
xor
aas
sbb
add
xor
std
push
jnp
mov
sbb
and
sbb
into
clc
dec
add
or
das
sbb
add
xchg
scas
mov
sub
push
dec
bound
pop
or
sbb
dec
into
inc
and
cwde
and
mov
add
xor
in
out
das
inc
sub
and
or
es
pop
mov
or
and
es
sub
mov
add
sar
outs
push
sub
sbb
xor
sbb
sub
or
adc
sbb
(bad)
jg
add
sub
pusha
push
adc
sbb
sub
cs
adc
sub
add
or
sbb
pusha
push
jmp
add
outs
cli
dec
push
add
push
or
sub
mov
jb
test
jno
mov
jnp
call
mov
adc
cmp
add
adc
test
adc
adc
adc
cmp
jns
test
jmp
push
or
sti
or
sbb
stos
push
adc
(bad)
push
mov
push
mov
call
or
sub
adc
xchg
add
and
shl
gs
(bad)
loopne
sbb
or
or
adc
and
dec
adc
xchg
es
xor
adc
sbb
adc
test
ror
push
cmp
adc
cli
push
mov
add
aas
adc
sub
bound
xor
push
add
daa
or
push
jno
jo
aaa
aaa
jb
or
sub
dec
cmp
push
dec
mov
sub
call
sahf
cld
xor
or
adc
xor
pop
fimul
adc
lock
and
xor
pop
mov
or
das
xchg
arpl
lods
mov
adc
push
ss
jo
pop
mov
ret
imul
or
pop
sbb
movsx
or
cmp
add
sbb
push
xchg
add
jnp
push
add
pop
add
dec
sbb
inc
sub
and
or
adc
dec
std
sbb
sbb
pop
dec
xchg
dec
or
push
xchg
cmc
ds
and
mov
adc
dec
or
mov
lods
sub
push
dec
jp
aaa
inc
out
rol
and
test
inc
sbb
inc
sbb
int
inc
mov
push
(bad)
mov
pop
dec
fs
inc
push
mov
ffreep
outs
jmp
test
push
dec
cmp
cmp
push
loop
and
add
daa
mov
sahf
mov
cwde
push
push
mov
jb
(bad)
fimul
pop
or
inc
push
stos
add
cs
push
cmp
popf
inc
mov
jg
adc
outs
or
inc
lods
sbb
(bad)
cmp
cmp
push
add
or
push
adc
push
or
push
xlat
scas
xor
nop
out
adc
pop
sbb
aas
jbe
sbb
jmp
fld
inc
push
cmp
sub
inc
adc
ja
fcomip
pop
cmp
inc
inc
push
xor
sub
xor
mov
xor
aas
pop
daa
outs
sbb
or
mov
push
xchg
pop
inc
fstp
dec
(bad)
in
push
push
adc
lea
push
jle
sub
inc
cmp
xor
sub
xchg
xor
shr
shl
jp
dec
inc
sbb
pop
add
adc
es
cmp
(bad)
lahf
or
aaa
cmp
sub
lock
add
push
sub
mov
or
sub
adc
jo
pop
cmp
mov
popa
add
out
xchg
test
add
sbb
sub
cmp
lods
inc
cmp
aas
and
(bad)
mov
sbb
adc
push
mov
jmp
scas
inc
push
push
or
dec
adc
and
adc
or
pop
out
inc
repnz
pop
ror
es
push
movups
dec
mov
xchg
hlt
je
dec
dec
dec
jo
cld
call
dec
adc
adc
sbb
and
dec
adc
mov
cmp
out
cmp
jge
shl
or
in
sub
or
mov
adc
ins
popa
mov
ins
pop
and
mov
and
sbb
jae
jne
sbb
and
bound
or
(bad)
lock
inc
adc
ds
push
inc
xor
push
lock
sub
adc
sbb
xlat
in
fbstp
es
dec
pop
sbb
sub
cmp
popa
cmp
cmps
pop
daa
adc
or
push
nop
sub
outs
retf
cmp
dec
mov
rcr
adc
dec
sbb
cli
loopne
js
retf
xor
mov
aaa
pop
xor
pop
test
push
adc
outs
and
call
loopne
and
fcom
sbb
dec
(bad)
outs
mov
jl
jmp
sbb
adc
push
jge
and
push
rcl
push
adc
data16
add
(bad)
push
sub
sbb
mov
inc
and
push
adc
adc
or
daa
mov
jl
cld
fmul
or
sub
push
in
mov
fidivr
or
dec
adc
mov
push
add
movhps
and
pop
sub
sbb
xor
dec
or
jo
adc
sti
dec
adc
xor
push
sub
cmp
xchg
rcr
add
jmp
add
ja
add
push
adc
sbb
movlps
pop
or
neg
ins
ins
push
inc
push
sub
or
or
add
push
pop
das
cmp
jbe
les
bound
cmp
add
jmp
sub
jb
or
sbb
mov
dec
loope
mov
add
jo
out
mov
es
cli
cmps
fnsave
dec
push
add
or
mov
and
or
add
(bad)
aas
fmul
pop
push
sbb
test
or
inc
jae
es
(bad)
das
(bad)
call
retf
es
arpl
xchg
inc
lock
add
pop
add
bound
push
pop
cmp
sbb
push
cld
fisttp
fcomp
sbb
and
pop
jbe
sub
ror
adc
adc
pop
nop
arpl
xor
cmp
cmp
sbb
cmp
ss
sbb
xor
shl
ss
jne
pop
and
hlt
loope
or
add
dec
push
inc
dec
jns
push
push
ss
mov
enter
fidivr
js
and
int3
sub
(bad)
mov
sbb
push
mov
sub
or
mov
ror
push
or
mov
xor
sub
dec
cmps
inc
adc
push
mov
jl
and
mov
call
scas
das
or
or
dec
mov
loopne
mov
push
xchg
or
fstp
inc
fild
lods
add
lea
adc
adc
xor
xor
in
and
aas
sub
pusha
and
push
jne
or
or
xor
cmp
or
fbstp
(bad)
or
inc
or
sub
adc
or
sub
rcl
sbb
or
pop
jae
push
sub
or
jbe
mov
aad
adc
loopne
lods
add
xchg
inc
sbb
cmp
jnp
push
sub
pop
push
dec
push
or
sbb
sub
adc
repnz
xor
(bad)
lock
xchg
loope
jp
pushf
lock
std
or
movs
add
dec
sub
loope
xor
push
or
xor
xor
jge
adc
out
or
pusha
or
ja
adc
or
jp
es
nop
jp
add
or
mov
or
dec
or
out
iret
imul
mov
mov
add
cmp
add
mov
dec
es
mov
push
cmp
inc
adc
or
push
mov
add
sbb
add
adc
push
sub
add
test
fbstp
les
or
ds
sub
and
or
mov
shl
(bad)
pop
fdiv
and
or
ins
push
or
fbld
push
and
push
push
add
or
mov
fbstp
or
sbb
jno
sub
pusha
fs
iret
enter
and
and
(bad)
mov
or
push
sub
jo
or
fild
inc
or
push
push
ror
adc
adc
seto
call
and
add
adc
cmp
pop
add
in
mov
and
nop
es
push
fcom
fmul
push
inc
jae
or
push
or
idiv
and
add
sub
das
es
das
cmp
and
fnstsw
jmp
imul
push
or
pop
inc
or
xchg
es
stos
and
sbb
in
pop
cmp
sub
dec
sbb
pop
xchg
and
pop
dec
adc
xor
fiadd
mov
vminss
or
lock
push
fsubr
cmps
scas
imul
lods
dec
pop
lods
mov
jg
popf
jno
add
mov
mov
mov
cmps
shl
pop
inc
idiv
push
xor
daa
and
outs
pop
jp
dec
repz
pop
jmp
or
mov
and
or
mov
or
or
or
lea
gs
sub
sbb
aaa
movs
addr16
lea
(bad)
sub
lock
jnp
or
xchg
sahf
pop
pop
cmp
and
or
or
pop
test
mov
push
ins
cli
pop
xchg
cmp
jg
sub
daa
inc
add
ret
mov
sub
mov
add
mov
sbb
dec
imul
aas
xor
jge
dec
jecxz
or
pop
hlt
jmp
leave
jl
push
adc
sbb
adc
lock
cdq
cmp
sub
mov
adc
add
imul
sti
loop
or
push
xor
pop
inc
inc
xlat
pop
or
and
lock
add
or
mov
mov
pop
push
ror
add
fwait
out
add
outs
xlat
add
shr
push
(bad)
adc
ror
add
mov
push
popa
sbb
adc
bound
sub
xor
dec
mov
mov
bound
das
jno
scas
or
push
lods
or
push
ds
leave
cmp
inc
xor
jp
lods
xlat
out
ja
mov
cmp
push
enter
or
adc
mov
and
jle
dec
adc
es
jmp
mov
xchg
sub
push
popf
sbb
sub
jo
pop
xchg
sub
sbb
ss
mov
stos
jno
or
es
idiv
push
bound
xchg
sbb
push
dec
push
and
fld
xlat
and
or
out
mov
pop
mov
or
jns
pop
jno
mov
loopne
lea
fisubr
mov
mov
xchg
or
mov
adc
push
cmp
adc
push
add
push
mov
adc
or
xchg
sbb
push
pop
xor
pop
fdiv
jp
pop
adc
ja
inc
fiadd
and
or
or
int
mov
shl
adc
cmp
mov
cmp
mov
or
push
add
add
loopne
push
or
xor
xor
and
jb
add
inc
or
or
dec
sub
lods
pusha
sbb
pop
adc
or
fcmovnu
sbb
retf
adc
inc
push
inc
push
outs
xchg
xor
lock
test
push
dec
movs
xchg
push
inc
adc
or
sub
sub
or
sbb
ss
dec
repz
or
sbb
pusha
jo
aaa
sbb
jno
push
js
jb
sbb
ret
cli
add
or
add
pop
push
mov
das
jge
sti
mov
xor
lock
add
push
jb
inc
add
push
jmp
add
lock
sbb
sub
push
jmp
add
push
inc
xchg
(bad)
cli
push
or
mov
jl
push
sub
mov
das
movs
push
sub
add
push
movs
popf
ins
mov
mov
pop
sbb
add
cmps
pop
mov
add
inc
jae
add
and
in
pop
mov
pop
retf
inc
scas
or
jno
pushf
xchg
sbb
jbe
je
xchg
or
lds
or
and
jmp
outs
sub
push
add
sub
les
imul
cmp
jle
retf
pop
jb
or
sub
sbb
add
xchg
pop
push
sub
or
inc
or
ins
test
adc
push
adc
cs
jle
inc
pop
ret
inc
cld
test
rol
push
and
cs
mov
push
adc
adc
or
and
push
sbb
rol
js
call
push
adc
adc
adc
sbb
fwait
cmp
pop
sub
and
cmp
jo
scas
sbb
cmp
mov
add
sbb
adc
push
and
sub
mov
xchg
clc
adc
loope
xchg
idiv
push
inc
pop
or
jmp
jmp
jo
pop
sbb
inc
xchg
push
sbb
lock
pop
inc
push
xor
or
adc
xor
pop
push
sub
sub
sbb
adc
add
in
mov
push
cli
or
add
sub
pop
aaa
(bad)
or
add
sub
adc
pop
mov
inc
push
daa
pop
adc
mov
or
jns
call
jg
inc
adc
dec
push
pusha
outs
or
add
adc
and
ja
or
cmp
or
jns
add
jp
ficomp
jg
stos
imul
das
mov
fstp
(bad)
xor
lock
dec
adc
popf
cwde
test
dec
or
sbb
inc
(bad)
cmp
inc
fnsave
mov
add
out
or
in
pop
jne
and
fdiv
cmc
add
pop
add
fdiv
push
addr16
sbb
ret
sub
ds
pop
pop
push
dec
add
data16
sbb
or
sbb
mov
push
pop
rep
pop
pop
push
sbb
adc
adc
movs
or
or
pop
jno
stos
outs
push
ja
retf
cmps
and
jbe
lock
(bad)
pop
adc
xor
or
or
push
sub
or
das
xor
or
ins
push
ins
aaa
outs
or
outs
ficom
pop
pop
sub
sti
lds
sbb
adc
inc
add
repz
push
popf
add
sbb
push
fisub
push
test
cmp
jmp
pop
shl
outs
fild
cmp
and
cmp
push
jge
add
or
push
pop
mov
and
cmc
add
sbb
sub
rol
push
xor
or
movlps
ja
std
scas
(bad)
dec
dec
mov
pop
inc
pop
add
sub
mov
mov
add
sbb
jle
adc
scas
jbe
mov
or
nop
adc
xchg
dec
bound
pop
mov
aam
adc
fisttp
and
or
dec
push
mov
(bad)
adc
outs
add
or
and
pop
sbb
(bad)
mov
daa
mov
ret
mov
scas
rol
xor
in
cmp
aaa
or
arpl
call
call
sub
mov
out
out
cmp
or
pop
scas
mov
sub
xchg
and
loopne
jl
xor
cs
(bad)
cmp
jmp
push
shl
pop
sub
mov
int3
or
cmp
mov
sub
add
test
jecxz
inc
xor
pusha
inc
aad
inc
dec
lahf
popf
mov
sub
mov
in
sbb
pop
movs
push
pop
adc
adc
xchg
pop
sub
dec
push
add
out
push
push
ret
jmp
out
or
add
dec
or
sub
cmp
xor
adc
push
xor
gs
jge
dec
inc
inc
shr
xor
inc
adc
std
add
fmul
(bad)
dec
push
adc
push
cmp
sbb
(bad)
push
movups
or
sbb
xchg
sub
adc
jl
and
mov
mov
xor
inc
inc
test
and
or
and
xchg
dec
mov
push
cmp
and
std
pop
lds
or
sbb
sbb
adc
jl
pop
(bad)
mov
xchg
jg
dec
cmp
ror
mov
and
enter
pop
imul
test
or
jne
xchg
ins
jno
mov
push
pop
push
out
or
xlat
iret
pop
shl
add
add
daa
pop
repz
shl
movs
inc
add
add
stos
push
mov
aaa
pop
adc
movhps
int3
icebp
or
or
dec
push
lds
cmp
out
nop
push
pop
push
sub
mov
pop
add
dec
pop
sbb
movs
sbb
or
push
in
or
or
jb
sbb
rsqrtps
xor
push
dec
push
push
cs
mov
pop
icebp
(bad)
out
add
xor
xor
sub
sub
lock
cmp
push
nop
aaa
jbe
lock
cmp
call
mov
(bad)
(bad)
and
ror
jbe
or
jae
push
add
ins
fwait
adc
xor
movs
sbb
dec
scas
push
sbb
sub
jecxz
repz
cmp
push
or
inc
jmp
or
inc
mov
push
and
dec
or
inc
and
xor
test
idiv
pushf
cmp
pop
lock
xlat
ret
adc
mov
add
mov
inc
sbb
or
or
jns
and
sub
inc
or
loope
mov
mov
pop
xchg
sub
pop
and
or
and
in
aaa
mov
push
sbb
and
add
add
mov
add
sub
das
and
xor
dec
cmp
lds
shl
pop
in
mov
and
or
or
mov
jecxz
mov
or
pop
push
lmsw
push
and
add
test
div
sahf
test
sbb
and
sub
or
pop
push
retf
stos
xchg
push
jge
sub
mov
cli
pop
sbb
cmp
sbb
inc
adc
inc
pop
sbb
inc
inc
cli
push
loope
mov
and
or
xor
inc
mov
add
data16
or
or
add
and
mov
dec
fiadd
dec
xor
pusha
sub
jbe
pop
and
sbb
sbb
and
pop
popa
mov
(bad)
mov
or
inc
enter
pop
ret
inc
aas
test
pop
push
rol
inc
inc
test
inc
or
pop
pop
cs
(bad)
das
add
sub
sbb
push
push
or
push
xchg
js
mov
or
sub
jp
or
or
or
push
sbb
jg
push
adc
push
pop
pop
adc
dec
sub
cmp
mov
out
pusha
cmp
or
ins
and
mov
jno
ror
cmp
xor
add
call
cmp
jnp
inc
loope
arpl
sub
ret
arpl
aas
inc
(bad)
dec
xor
arpl
inc
sub
dec
adc
dec
dec
inc
aas
sbb
outs
(bad)
jmp
and
das
cmp
es
and
inc
daa
xor
inc
pop
shr
jnp
mov
push
sub
xor
dec
cmp
xor
imul
and
outs
es
arpl
cmp
push
dec
add
fbstp
pop
daa
lods
sub
dec
jns
das
adc
call
jb
sub
and
mov
add
das
add
mov
or
dec
lods
push
push
push
pusha
pop
ins
pop
push
pop
xor
push
dec
or
gs
pusha
inc
dec
cmp
loopne
xor
xor
pushf
ds
jbe
cmp
pop
pop
sub
inc
cmp
jae
(bad)
in
mov
aas
data16
push
and
xor
ss
dec
and
cmp
aaa
or
jbe
nop
adc
outs
pop
sub
pop
lock
lock
pop
sub
cmp
inc
xor
add
dec
mov
inc
fld
xor
jnp
dec
xor
inc
das
pop
sub
add
pop
jno
pop
sub
inc
dec
in
(bad)
(bad)
mov
aam
aas
sub
daa
push
add
dec
rcr
and
inc
data16
mov
mov
pop
cs
mov
sub
cmp
mov
mov
xor
pop
js
xor
ins
pop
lock
in
inc
nop
dec
pusha
pusha
jb
pushf
pop
inc
dec
call
add
ins
adc
and
push
mov
add
jb
xor
cmp
push
ins
mov
cmp
dec
cmp
and
cmp
xor
sbb
idiv
xor
imul
mov
imul
xor
and
and
push
sbb
xor
mov
inc
push
imul
das
inc
nop
add
cmc
mov
bound
(bad)
adc
push
das
jle
dec
inc
add
sbb
es
sbb
and
mov
dec
and
push
push
pop
(bad)
outs
xchg
pop
adc
xor
xor
test
sub
sbb
mov
and
cmp
xor
pop
sbb
lds
cmp
and
cmp
or
xor
and
xor
dec
push
call
cmp
aaa
imul
mov
cmp
jbe
cmp
sub
sub
or
sbb
xor
sub
xor
fisttp
fisubr
daa
sbb
inc
push
aaa
push
adc
jbe
push
adc
mov
cwde
inc
push
push
sub
pop
inc
and
pushf
jmp
push
and
(bad)
xchg
daa
sar
cmp
pop
rol
sub
sbb
cmp
sub
mov
jno
and
sub
push
sub
add
push
push
mov
and
sbb
mov
mov
sbb
adc
(bad)
mov
fcom
imul
imul
add
adc
xor
daa
daa
pushf
mov
ins
add
push
and
and
sbb
pop
xor
ins
xor
mov
jl
movhps
add
fld
aam
sbb
push
mov
sbb
adc
adc
test
adc
sti
or
jae
in
mov
add
or
(bad)
or
mov
dec
add
mov
or
fsubr
xor
adc
lea
pushf
js
inc
jl
sub
or
lock
push
or
aam
mov
add
pop
pop
fadd
adc
or
es
mov
test
add
push
adc
lock
cmp
imul
or
in
add
fs
in
test
mov
push
int3
sbb
inc
push
add
fiadd
sub
dec
add
pop
or
xor
dec
das
mov
prefetch
cdq
je
inc
xor
popa
adc
xor
lock
adc
ins
cmp
fnsave
inc
adc
mov
lock
xchg
add
push
lock
(bad)
sbb
int
aam
in
lock
lock
test
mov
adc
add
pushf
es
mov
and
nop
or
add
adc
jns
and
fwait
inc
push
jae
add
adc
jmp
xor
mov
test
xor
add
int
add
or
mov
add
shl
adc
div
mov
add
sbb
pushf
add
pusha
mov
xor
mov
loopne
je
jne
pusha
ret
sbb
push
xchg
cmp
pusha
ret
and
popf
mov
call
pop
sbb
ss
(bad)
out
push
mov
movs
jl
mov
add
jo
test
mov
mov
adc
inc
in
add
mov
addr16
(bad)
push
sar
jo
cmp
adc
into
mov
nop
add
lock
or
inc
sub
leave
mov
adc
sbb
outs
or
sbb
std
les
adc
xor
push
jl
mov
add
mov
adc
gs
aam
jo
or
mov
mov
cmp
adc
ror
adc
or
jle
pop
xchg
adc
lock
xor
xor
adc
dec
leave
add
cld
je
jmp
inc
push
lods
adc
sub
cmps
stos
jmp
pop
or
mov
movs
or
or
add
add
add
sbb
sbb
push
js
or
outs
adc
adc
jbe
add
dec
mov
mov
mov
lods
pop
xor
add
and
mov
outs
cmp
xor
dec
pushf
nop
jnp
das
push
clc
lock
add
add
not
adc
lock
push
and
mov
out
push
mov
add
loopne
add
xor
mov
fsincos
push
or
adc
and
mov
pop
inc
das
add
add
mov
ss
and
sub
mov
fld
sub
add
in
adc
cmc
daa
xor
push
adc
cmp
aas
sbb
lock
(bad)
das
cmp
add
push
or
sbb
mov
adc
sub
and
adc
mov
daa
push
sti
imul
or
adc
push
adc
add
inc
adc
sbb
xor
sbb
jbe
add
add
inc
xchg
jnp
add
sahf
add
sbb
sub
adc
xor
sbb
lods
cwde
pop
repz
cmps
xchg
mov
inc
adc
adc
sbb
mov
and
jmp
jae
test
inc
xchg
lods
mov
shl
inc
aaa
xor
push
pop
movlps
and
lea
sub
sub
fcomi
pop
cs
lea
cld
and
or
and
or
mov
adc
sub
xor
(bad)
adc
adc
xor
das
and
or
or
pop
iret
fstp
mov
sbb
outs
call
aad
jo
jge
pop
adc
and
sbb
das
sub
inc
jo
sbb
mov
pusha
mov
or
push
pop
dec
retf
dec
adc
and
lods
mov
jae
ins
pop
adc
or
sbb
int
mov
ffreep
mov
or
or
add
pop
add
dec
rol
and
dec
dec
adc
add
loopne
fadd
mov
or
sbb
ret
inc
pop
adc
xchg
sub
test
adc
or
adc
inc
sub
mov
adc
xlat
push
popa
jg
daa
or
sub
mov
and
mov
sbb
mov
xchg
mov
adc
sbb
xor
add
add
jbe
aaa
sbb
inc
sbb
mov
outs
mov
cmp
and
movs
jmp
mov
popf
pop
dec
sbb
jne
sbb
ins
fcom
mov
loope
cdq
jmp
out
sub
test
or
lds
inc
mov
ins
pop
in
or
sbb
inc
xor
mov
ds
or
and
mov
push
lea
jae
adc
dec
xor
or
adc
adc
loope
or
(bad)
sub
mov
cld
sbb
and
or
lods
pushf
xchg
ret
and
mov
jnp
jae
and
adc
imul
xor
sbb
xor
imul
pop
mov
rol
add
and
or
retf
mov
dec
inc
mov
popf
dec
nop
or
sbb
stos
cdq
fbld
push
pop
jnp
mov
sbb
adc
add
pop
and
(bad)
int
and
sbb
pop
sbb
pop
xor
xchg
sbb
or
and
test
or
sysexit
or
mov
test
(bad)
sub
aas
push
test
mov
popa
add
stos
or
adc
or
mov
jo
test
or
and
loop
ja
push
dec
inc
mov
push
stos
daa
or
or
cmps
loopne
xchg
sbb
and
add
in
pusha
or
dec
icebp
rol
adc
push
loopne
inc
or
aaa
adc
and
shl
inc
adc
pop
and
push
sub
loope
gs
jns
mov
add
or
adc
mul
or
adc
xchg
adc
cmps
jne
jno
lods
mov
fnstenv
jne
xor
imul
or
popa
shl
pop
pop
or
sub
ins
adc
or
mov
push
lds
add
sub
mov
mov
popa
adc
or
cmc
or
jl
js
pop
sbb
adc
sbb
ret
cdq
or
sub
or
or
ror
adc
hlt
cmps
stos
adc
dec
sbb
or
xchg
mov
add
cmp
sbb
das
or
or
rcl
scas
sbb
mov
sub
xor
jno
ins
sbb
out
daa
mov
add
sbb
pusha
les
mov
ds
pop
xor
cmc
adc
popf
xchg
or
or
and
dec
mov
dec
or
mov
pop
push
sbb
adc
xchg
jp
mov
jecxz
in
adc
adc
or
or
in
jns
pop
fsub
push
hlt
and
nop
pop
arpl
shl
xor
ret
sbb
loopne
aaa
xor
push
adc
imul
mov
sbb
mov
adc
mov
jae
jecxz
jbe
out
xor
add
sub
xchg
js
inc
mov
sub
inc
sub
fst
sbb
ficomp
xor
or
mov
sbb
xor
mov
and
xchg
or
sbb
das
adc
sbb
xor
das
shl
ins
and
or
xor
test
and
or
add
ja
push
pop
and
xor
mov
or
inc
xor
and
adc
inc
or
popa
dec
pop
test
or
jns
inc
and
test
push
out
or
fcomp
sbb
add
and
or
jno
xor
sub
xor
jnp
or
or
fsubr
adc
loop
and
sbb
or
and
xor
daa
or
ss
add
mov
and
adc
add
bound
inc
sbb
or
adc
add
mov
jnp
cmps
dec
fdivr
pop
sbb
xlat
sbb
dec
jmp
cmp
push
jb
sub
sbb
dec
sub
sbb
fcomp
sbb
cmp
inc
dec
sub
and
dec
or
xor
and
jp
popa
popf
inc
or
pop
sub
adc
imul
lods
or
or
scas
neg
sub
xor
sbb
shl
cmp
pusha
lock
sub
movs
jbe
add
pop
inc
adc
xor
sub
or
sub
cdq
adc
or
push
sbb
inc
sbb
int3
fst
dec
add
cmp
sti
add
dec
adc
dec
sub
sub
or
adc
ror
test
data16
sub
dec
and
out
or
xor
shr
fdiv
scas
jbe
cmp
dec
stos
add
and
xchg
sbb
test
and
adc
push
loope
push
xchg
mov
test
add
in
xor
add
(bad)
add
inc
rol
push
sub
or
fwait
xchg
and
add
or
add
mov
add
add
pop
sbb
outs
xor
sbb
or
adc
inc
pop
add
inc
dec
pop
mov
scas
push
daa
sbb
inc
adc
mov
(bad)
imul
add
mov
sub
xchg
inc
sbb
pop
adc
fwait
enter
inc
gs
mov
fcomp
pop
pop
cs
pop
push
adc
sbb
push
or
movs
inc
or
js
sbb
jb
mov
fild
loopne
sbb
inc
mov
adc
mov
sbb
pusha
inc
sti
mov
pop
dec
rcr
add
xlat
out
xchg
pop
adc
lahf
jb
add
sbb
and
(bad)
add
push
into
sbb
es
jo
fcmovne
sbb
into
fisttp
and
xchg
and
inc
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
pop
add
mov
add
add
