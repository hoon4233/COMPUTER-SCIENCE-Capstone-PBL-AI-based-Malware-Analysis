sbb
add
sub
sar
mov
adc
jge
sub
popa
xor
and
retf
jecxz
sub
sbb
inc
cmp
or
or
adc
cwde
cs
das
je
mov
dec
inc
es
push
popa
mov
out
enter
cmc
pop
adc
xchg
jbe
jno
or
jl
sub
pushf
jne
sub
sub
add
mov
outs
or
int
std
ins
lods
sbb
data16
leave
cmp
mov
push
icebp
mov
pop
push
or
jmp
cwde
and
push
add
sub
jl
push
nop
cli
mov
pop
int
call
jmp
pop
pop
(bad)
call
rol
stos
icebp
jae
call
dec
sti
mov
test
cld
cmps
mov
ss
sar
test
fmul
jbe
ins
adc
xchg
push
js
cld
inc
outs
out
dec
and
sbb
push
leave
sub
fwait
xchg
je
pop
mov
stos
daa
rcl
jg
int
jp
mov
and
xchg
or
loop
mov
jle
jmp
push
dec
mov
jecxz
mov
xor
dec
ins
mov
bound
and
xchg
sub
adc
sbb
or
shr
jmp
popf
leave
(bad)
data16
xor
outs
ror
test
and
jno
cmp
adc
jb
loop
xchg
out
push
jns
addr16
push
xchg
jo
aas
leave
in
jl
xchg
out
cmp
sub
jge
push
dec
es
and
jmp
sub
push
fucomp
test
cmc
sha256rnds2
movs
sahf
(bad)
pushf
jo
dec
call
push
es
sub
fwait
jl
cdq
(bad)
push
and
or
outs
neg
dec
lea
sub
aaa
push
call
data16
jmp
enter
mov
xchg
xchg
mov
or
sub
jg
xor
in
sbb
idiv
fucomi
inc
dec
ss
add
daa
nop
aas
(bad)
pop
xchg
adc
ror
xor
add
fwait
xchg
add
call
mov
jno
pop
les
(bad)
call
outs
sbb
pop
jns
xchg
pop
bound
and
sbb
jnp
inc
mov
jo
xchg
sub
inc
lea
or
add
jecxz
(bad)
and
sti
mov
pop
aas
dec
fsubr
retf
jb
sub
bound
push
jns
sbb
adc
adc
mov
push
js
stos
aaa
ficomp
loope
(bad)
sti
pop
push
cmp
sbb
cmc
loopne
int
add
jmp
stos
lods
adc
fist
inc
xchg
or
mov
rcl
jmp
xchg
cli
jbe
stc
push
jg
inc
mov
xor
bound
ret
loope
sub
cld
aad
test
sbb
inc
scas
int
inc
fdivr
mov
jno
pushf
sbb
(bad)
mov
mov
ja
jbe
loopne
sbb
mov
pop
inc
xchg
xchg
and
mov
jmp
int
and
retf
or
pop
or
jp
mov
stos
push
cmc
xchg
and
dec
mov
inc
xchg
aam
pop
int
outs
cmp
loopne
call
(bad)
imul
and
sti
std
pop
or
dec
dec
mov
scas
xchg
js
iret
xchg
imul
jmp
es
cld
test
and
jge
(bad)
push
psubsw
call
inc
ror
jp
mov
in
push
push
cmc
jbe
dec
sbb
jecxz
pop
in
adc
push
dec
jp
js
or
aam
fimul
dec
(bad)
xor
and
outs
adc
mov
cmp
imul
stc
lods
into
jmp
ds
rcr
test
rol
xor
popf
icebp
fstp
mov
js
shr
inc
mov
test
xchg
sub
adc
xchg
mov
cmp
imul
fcmovnbe
fadd
loope
pop
mov
in
and
push
sub
and
leave
arpl
clc
imul
fwait
xor
or
call
imul
or
aas
and
dec
in
repz
push
rcl
jnp
std
imul
jecxz
stos
sbb
les
xchg
and
cmp
pusha
xor
in
(bad)
sub
test
push
mov
jp
xlat
mov
push
jmp
test
aas
dec
nop
jo
sbb
push
mov
loope
fs
test
out
cli
mov
mov
dec
xor
or
inc
scas
into
push
pop
cmp
mov
mov
js
and
and
ficom
scas
hlt
int
shr
movs
(bad)
mov
(bad)
mov
inc
xor
xchg
fisttp
(bad)
lock
mov
cmc
int3
sti
aad
jge
pop
pop
cmps
ds
retf
mov
ss
nop
cmp
push
arpl
bound
mov
fmul
in
leave
shr
mov
aas
or
cmp
cmps
ins
inc
fsub
lea
dec
adc
and
mov
xchg
xor
iret
mov
sub
imul
popf
sbb
neg
mov
and
jne
push
lods
and
(bad)
mov
mov
stc
repz
call
out
ficom
(bad)
out
cs
es
adc
adc
xchg
sbb
fidiv
mov
pop
cdq
xlat
xchg
outs
in
push
jl
rcr
test
test
sar
fcomp
aas
xchg
mov
ss
sbb
or
imul
test
in
add
bound
out
mov
daa
push
mov
mov
and
(bad)
sbb
xlat
enter
mov
fldl2t
in
cmp
push
jmp
sbb
ja
sbb
inc
fdiv
push
daa
dec
imul
call
dec
daa
in
clc
lock
fwait
pop
adc
hlt
mov
xor
shl
outs
mov
and
std
fucomi
or
sub
ror
fld
mov
arpl
into
jle
sbb
xor
leave
and
push
gs
mov
pop
lods
jge
and
les
fcom
cli
push
nop
xor
sub
jge
js
xlat
cmps
cmp
call
cmp
test
lods
data16
shl
dec
dec
out
pushf
push
adc
es
cmps
push
stos
call
dec
fsub
add
inc
cli
and
shl
jge
dec
pop
push
scas
push
cli
inc
and
pop
pusha
or
sbb
nop
inc
ja
fs
aas
push
pop
pop
adc
loop
inc
dec
push
das
retf
pop
push
(bad)
aam
or
ja
push
ret
or
mov
hlt
push
adc
sqrtps
jno
add
fscale
bound
fadd
xor
sub
into
push
int3
jb
adc
enter
fidiv
jno
sti
stc
add
push
mov
push
add
lds
out
outs
inc
jae
in
fist
and
test
cmps
mov
or
xchg
xchg
movs
cmp
in
pop
and
mov
sub
shl
clc
mov
inc
or
cmp
pop
ins
xor
adc
adc
inc
mov
cmps
in
pop
add
dec
jbe
jecxz
aas
fwait
js
jp
mov
fimul
movs
mov
xor
mov
(bad)
lods
cmp
in
add
fiadd
mov
cld
mov
cmp
adc
mov
push
xchg
outs
pop
xchg
mov
out
fild
in
sbb
(bad)
or
jge
xchg
rcr
mov
sbb
jbe
stc
dec
(bad)
pop
jnp
xor
js
adc
xchg
or
jge
in
inc
mov
xchg
sbb
ficomp
lods
pop
loopne
push
dec
push
xor
and
push
mov
sbb
or
rcr
mov
dec
dec
sbb
xor
sub
adc
fnsetpm(287
cmp
jmp
dec
mov
xchg
push
adc
repz
jbe
bnd
imul
lock
rol
mov
rol
hlt
xchg
sub
unpckhps
and
mov
xor
enter
test
popf
ins
lock
mov
mov
xlat
rcr
and
daa
dec
cmps
cmps
add
cmp
xchg
push
mov
push
inc
icebp
push
pop
cmp
inc
stc
fisub
add
sub
push
xchg
sbb
aaa
inc
add
push
mov
or
daa
movs
jp
imul
fsub
jmp
pop
in
mov
cmp
or
cld
jo
or
add
mov
(bad)
ins
jb
inc
fistp
push
push
ror
xor
push
and
jp
dec
mov
out
cmp
push
dec
cmp
sbb
out
push
aam
std
lea
not
std
jns
cdq
adc
into
sub
daa
cmp
sti
(bad)
pminsw
jg
test
jmp
fidiv
inc
dec
mov
add
dec
sbb
xor
ss
push
pop
cmp
out
cdq
pop
dec
call
or
and
jno
leave
imul
fist
int3
rol
outs
aas
retf
xor
imul
xor
leave
int
inc
shr
out
jmp
and
jg
mov
cmp
std
mov
ins
inc
cdq
or
inc
sti
shl
(bad)
jp
cmp
ins
pop
rdmsr
aas
int3
lods
cmp
aam
out
bound
movzx
lea
(bad)
jle
mov
aaa
pop
mov
loopne
in
into
mov
pop
jp
cmp
and
jb
daa
sbb
fdivr
xchg
(bad)
sti
mov
jne
push
fadd
and
push
mov
ficomp
popa
or
xchg
stos
mov
inc
push
sar
push
inc
cmp
lds
dec
cs
call
xor
add
sub
ja
popa
xchg
push
stos
mov
daa
dec
fwait
adc
call
popf
mov
push
lahf
inc
daa
inc
xor
aam
rol
mov
cmp
call
push
cld
fucomi
stos
mov
or
xlat
inc
pop
and
adc
icebp
or
aas
mov
adc
xchg
mov
ja
jne
mov
sbb
sbb
shl
dec
cmps
push
loope
daa
inc
sub
loope
into
add
stc
scas
idiv
popa
in
outs
sbb
lods
and
(bad)
cmp
or
sbb
nop
jb
jle
dec
sub
xlat
sbb
fild
fidivr
mov
pop
mov
sub
adc
jmp
test
xor
cmc
scas
hlt
int3
mov
dec
or
inc
xchg
mov
es
mov
cmp
pop
mov
call
sahf
mov
leave
ss
popf
mov
pop
(bad)
cmp
pop
mov
adc
leave
and
call
ins
adc
adc
push
stos
scas
mov
call
sub
and
dec
clc
dec
xor
lods
in
adc
jmp
es
jo
cmp
push
sub
inc
jo
mov
push
test
lods
cdq
ffree
repnz
shl
loopne
jg
fild
cmps
icebp
nop
xor
out
or
mov
sti
and
jns
inc
retf
sbb
sbb
dec
movs
stos
xor
xchg
adc
xchg
xlat
xchg
in
mov
daa
imul
setno
xor
les
push
sub
jns
fldenv
push
sub
inc
loopne
mov
mov
iret
pop
push
push
popa
sbb
jmp
in
push
push
sub
sub
xor
sbb
ins
retf
fstp
xchg
daa
clc
fs
shl
xchg
cmps
mov
jmp
dec
jle
jns
fidivr
adc
repnz
adc
jl
push
adc
sbb
jnp
add
daa
(bad)
mov
fadd
fistp
add
xor
sub
xor
(bad)
sub
dec
pop
push
imul
push
dec
xor
imul
cmps
or
lock
popf
sbb
dec
stos
push
retf
pop
or
imul
mov
jb
js
xor
lock
xchg
jmp
es
add
jl
sub
add
leave
mov
rol
test
or
sbb
pop
gs
cmp
or
movs
pop
push
mov
fisttp
call
in
loop
push
out
aam
pop
mov
(bad)
aad
mov
add
xor
mov
mov
mov
push
sub
push
es
imul
loopne
mov
loope
jle
push
xlat
xor
or
scas
add
stos
into
nop/reserved
lea
pop
and
adc
inc
ficomp
sbb
adc
xchg
or
movs
es
(bad)
mov
xchg
pushf
sub
out
sbb
pop
pop
inc
push
and
add
dec
cmp
add
jo
stos
adc
xor
stos
retf
xor
fistp
scas
daa
mov
jnp
sub
xor
push
iret
sar
popf
jo
lds
add
repnz
and
jne
xlat
pop
(bad)
adc
xchg
add
lahf
sahf
sub
stc
in
push
inc
lock
inc
clc
push
cwde
sar
mov
or
shl
popf
push
cmps
int
or
sub
adc
es
push
rcr
(bad)
xor
jecxz
mov
add
sar
xor
rcl
xchg
loopne
xor
xor
std
lahf
in
sbb
add
or
aas
sub
into
das
lea
sub
lgs
(bad)
fldcw
fidivr
sar
cwde
(bad)
and
xchg
(bad)
mov
shl
out
mov
aas
pop
in
cs
je
cmp
dec
jno
fimul
or
inc
mov
test
dec
inc
mov
mov
out
arpl
xchg
shl
repz
pushf
mov
icebp
inc
jmp
pop
mov
int
popf
xchg
xchg
ret
pusha
or
push
push
in
pop
dec
jge
jb
pushf
std
inc
push
or
ins
fiadd
mov
xchg
leave
outs
loopne
pop
retf
dec
xor
jmp
es
pop
xchg
xchg
add
into
jg
pushf
fbstp
add
repz
add
imul
pop
dec
retf
stos
inc
mov
push
iret
xchg
enter
(bad)
sar
fnclex
ja
pusha
jmp
push
mov
sub
(bad)
and
out
in
lods
ins
mov
stos
pop
jl
mov
xor
mov
leave
js
aaa
inc
fld
cld
xchg
into
popa
xlat
xor
aas
test
mov
and
les
add
adc
into
icebp
cwde
sub
push
cmps
fldenv
cmp
mov
aad
lahf
mov
or
out
lds
add
repnz
mov
idiv
leave
pop
sub
mov
lahf
add
xchg
pusha
add
repz
stc
inc
and
cmp
xrelease
in
add
cmp
stos
mov
mov
cmp
jns
(bad)
pop
cmp
mov
test
sub
dec
pop
dec
xor
mov
sbb
dec
pop
and
xor
and
out
jo
xor
sub
lahf
pop
or
xor
aam
and
les
jecxz
and
push
mov
xchg
call
inc
(bad)
xor
test
sub
xor
sbb
jl
sbb
mov
test
jo
retf
mov
cmp
popa
or
xchg
xchg
jbe
lds
or
xchg
pusha
movs
xchg
mov
inc
xchg
mov
inc
scas
out
mov
mov
aas
aaa
mov
ins
adc
loopne
retf
push
cwde
in
neg
out
inc
mov
and
or
hlt
lods
and
mov
sub
mov
xchg
fdiv
pop
sub
jl
xchg
data16
mov
outs
test
adc
pop
stc
dec
xchg
push
or
dec
cld
int
aas
jne
pop
js
aad
in
mov
inc
cmp
mov
aad
pop
les
mov
outs
fnstsw
inc
push
fwait
xor
mov
cmp
or
mov
test
popa
or
das
jo
into
ja
and
sbb
mov
fistp
cmc
sub
shr
pop
popa
test
mov
and
jno
pop
ret
jmp
and
in
pop
fmul
sbb
adc
push
cld
arpl
inc
xchg
dec
popw
jp
(bad)
pop
push
adc
in
jle
sbb
mov
xchg
sub
test
push
cmp
ins
pop
xchg
inc
push
xchg
cmps
mov
and
(bad)
fisttp
repz
mov
ss
test
cld
push
inc
xor
mov
out
loop
mov
outs
pop
cmp
xchg
adc
sbb
cdq
xor
mov
icebp
add
mov
les
call
test
ja
xchg
pop
mov
aas
dec
jmp
nop
pop
jb
les
cmp
scas
pop
(bad)
xchg
xchg
mov
mov
cdq
out
sbb
adc
mov
inc
aas
push
sbb
push
mov
sbb
inc
sbb
lahf
stos
push
ja
add
jle
(bad)
push
in
fnsave
shl
hlt
jns
cmp
adc
repz
ret
dec
and
std
push
push
aad
fnstsw
adc
mov
inc
xchg
add
jmpw
push
inc
ins
pop
pop
xor
ror
mov
sbb
in
xchg
sub
push
jbe
push
sbb
in
push
js
retf
xor
cwde
lahf
jns
out
hlt
jnp
fst
(bad)
push
test
add
pop
jmp
adc
popf
mov
lock
and
movs
bound
sbb
idiv
test
ds
ucomiss
xrelease
xchg
mov
xchg
or
arpl
and
stos
cmp
xlat
iret
loope
pop
frstor
sub
add
(bad)
call
inc
pop
adc
lock
data16
mov
leave
pusha
leave
add
add
lods
or
call
inc
cmp
and
mov
cmp
sbb
xchg
xor
jmp
sahf
das
shl
repnz
mov
xor
inc
xor
adc
hlt
pop
xchg
jb
mov
jnp
mov
jp
pop
inc
pop
cmp
xor
ror
xor
sub
gs
mov
sub
mov
daa
fs
imul
mov
neg
pusha
lods
sahf
addr16
(bad)
lock
call
mov
call
out
and
fwait
adc
sbb
xchg
or
inc
cmp
cwde
or
jnp
and
ins
dec
in
or
pop
mov
fst
shl
out
cli
jae
fnstenv
loopne
ret
out
jne
clc
scas
mov
ins
out
push
add
add
and
mov
retf
push
mov
sbb
enter
dec
movs
or
mov
loope
pop
loopne
ret
mov
test
in
adc
test
cmp
mov
mov
dec
or
loopne
inc
jo
push
loop
leave
xchg
leave
test
in
mov
std
pop
hlt
loopne
gs
fstp
pushf
jge
shl
jecxz
adc
fs
call
push
retf
mov
push
xor
sub
cmps
push
popa
add
push
fcom
inc
sbb
repnz
jge
jno
mov
mov
push
iret
sbb
sbb
inc
jl
jno
jne
js
cmc
or
fistp
imul
push
sub
ret
mov
xchg
inc
sub
(bad)
dec
iret
add
cmp
push
stos
retf
je
dec
push
setae
inc
or
je
int
les
inc
leave
xor
cld
les
nop
ficom
cmp
loopne
call
mul
jle
add
mov
bound
adc
mov
push
retf
inc
pop
sbb
dec
cdq
cmp
js
dec
daa
(bad)
mov
adc
inc
mul
repz
mov
in
inc
imul
jne
call
push
(bad)
retf
das
or
adc
mov
out
mov
or
adc
add
aaa
pop
lods
int
(bad)
adc
xor
(bad)
pop
out
fisub
xor
in
push
sahf
aas
hlt
out
test
std
xor
push
daa
dec
int3
arpl
xchg
fimul
xchg
mov
outs
out
or
in
inc
or
or
xor
pop
xchg
sbb
inc
sub
(bad)
jg
or
push
add
sbb
push
or
sti
and
jge
and
aam
inc
xchg
jecxz
ret
nop
rcr
or
retf
mov
sub
ret
scas
test
cs
int
inc
test
sar
xor
in
adc
adc
jp
out
imul
sti
xor
je
jns
outs
sbb
ins
mov
sbb
loope
pushf
bound
enter
sbb
dec
push
jecxz
xchg
popf
lods
in
cmc
cli
sbb
fbld
fstp
adc
sub
scas
sti
push
enter
jae
popf
inc
(bad)
jg
int3
sub
sbb
and
sub
(bad)
std
lods
or
push
lahf
adc
out
pop
jnp
adc
push
les
aam
lods
idiv
or
pop
fsub
sbb
mul
cli
in
mov
pop
arpl
bound
xchg
mov
icebp
pop
outs
repz
push
movs
inc
adc
gs
and
and
xor
lods
das
dec
push
arpl
xor
(bad)
jmp
js
xchg
aas
mov
in
and
push
pusha
jne
cmps
push
cld
test
sub
ds
inc
xchg
int
shr
cmp
lock
xchg
ins
sbb
out
inc
xlat
ins
inc
movs
fdivr
pop
pop
fdivr
mov
and
mov
cmp
xor
lods
pop
push
ins
inc
dec
mov
(bad)
fstp
mov
mov
jge
mov
call
add
jno
ret
aaa
xchg
mov
movs
cmp
sub
xchg
popa
iret
mov
out
inc
jmp
mov
in
cmps
mov
ins
jge
ret
cmps
ja
pusha
test
mov
sbb
mov
mov
lahf
dec
je
loopne
test
xor
aaa
sub
or
pop
push
stos
mov
je
arpl
icebp
inc
push
ds
push
test
add
xlat
jne
lds
imul
lods
add
mov
test
les
scas
ds
xchg
fstp
add
fadd
pop
fild
(bad)
in
fbld
push
pushf
mov
mov
not
push
enterw
pop
add
mov
and
dec
jo
pop
jg
mov
arpl
and
shr
in
int
or
and
cmp
repz
mov
loope
push
shl
or
sub
xchg
push
inc
scas
jb
in
jnp
and
cwde
test
enter
(bad)
jecxz
sbb
xchg
mov
jmp
rcr
out
dec
cmpxchg
lock
cld
jl
dec
enter
add
shl
stos
xor
or
fs
or
add
sub
jecxz
xor
cld
stos
inc
sub
test
popf
je
data16
or
ja
adc
and
pop
mov
add
ins
popf
cmp
test
les
jb
mov
xor
iret
xchg
pop
sahf
fwait
hlt
push
inc
je
sbb
in
sub
xchg
dec
ficomp
(bad)
out
sahf
and
add
add
push
jge
and
pop
sbb
mov
sbb
lods
dec
jecxz
add
stos
and
mov
and
loopne
xor
aam
xor
loope
sti
mov
cmp
mov
into
popf
cmp
fs
mov
loopne
pusha
jns
ret
dec
push
adc
jb
icebp
inc
or
dec
xchg
call
inc
nop
mov
xor
ja
mov
dec
push
les
and
adc
cmps
mov
and
jecxz
data16
pop
fnsave
mul
and
adc
(bad)
enter
push
scas
in
arpl
rcr
lock
inc
dec
xlat
cdq
lods
ja
dec
loope
pop
(bad)
adc
xchg
add
and
dec
push
sti
mov
movs
inc
das
mov
rcr
test
push
cli
jb
push
jno
jmp
mov
mov
icebp
cmp
sub
sub
dec
inc
jl
sub
in
mov
push
xor
retf
loopne
lock
mov
pop
push
cmps
push
mov
push
retf
jae
sub
sub
mov
jns
inc
sub
shr
mov
popa
mov
push
sbb
(bad)
sti
icebp
sub
imul
leave
pop
inc
mov
xchg
loopne
into
ins
bswap
xor
pop
mov
jae
and
xor
repz
lock
call
adc
dec
pop
dec
scas
xor
icebp
pop
out
jg
mov
(bad)
mov
sahf
mov
dec
clc
xchg
adc
retf
test
gs
add
rcl
xor
mov
test
mov
dec
dec
js
(bad)
or
lahf
xor
iret
add
add
int
push
or
push
cld
and
push
mov
xchg
pop
sti
and
out
jb
stos
ins
pop
sti
fmul
arpl
movs
ja
out
inc
sar
jnp
push
aas
push
push
xchg
fiadd
(bad)
data16
popa
dec
cmp
iret
pop
fcomip
ss
jmp
mov
add
iret
mov
push
sub
jns
cs
shl
das
fisttp
in
and
retf
ret
into
cmp
retf
out
imul
jecxz
jmp
mov
mov
sbb
mov
push
inc
fdivr
fdiv
inc
mov
mov
cmps
jle
push
imul
xor
mov
sub
fstp
jge
retf
inc
push
or
cmps
aad
add
retf
psrld
xchg
fsubr
idiv
push
sub
lods
cmps
add
mov
push
xchg
sbb
pop
add
jo
rcr
inc
cmp
push
retf
mov
imul
sbb
cld
pop
xor
jle
fwait
or
repnz
int
mov
jo
cmps
je
into
and
pushf
sbb
adc
mov
fwait
cmps
jecxz
add
push
jne
imul
out
call
stos
pusha
bound
jle
lods
cmps
fnstenv
cwde
pop
mov
stos
adc
pop
(bad)
in
jb
in
push
addr16
mov
popa
mov
sub
jmp
cmp
inc
pop
out
cmc
mov
loop
xor
gs
and
pextrw
xor
mov
addr16
sub
jae
jl
push
retf
gs
mov
or
inc
in
push
xchg
cwde
xchg
jle
stc
pop
push
fwait
ins
leave
jno
loope
xor
scas
cmp
pop
pop
lods
icebp
and
or
adc
mov
cmp
bound
iret
pop
in
call
or
dec
outs
add
mov
jnp
out
pop
jp
cld
jo
retf
pusha
shr
dec
in
lahf
or
(bad)
repz
jmp
movs
xor
and
adc
push
cmp
sbb
lea
mov
fs
out
cli
loop
sbb
or
(bad)
(bad)
shl
sbb
leave
ja
or
scas
imul
pop
and
sub
int
retf
fimul
or
inc
pop
sub
inc
fnstenv
jp
int
shl
in
nop
sub
adc
sub
nop
sbb
xchg
sbb
pop
xchg
sub
lods
call
int
jno
or
scas
or
outs
xchg
sbb
push
cmp
pop
mov
out
pop
mov
(bad)
jmp
ror
inc
(bad)
data16
leave
pop
dec
hlt
cld
js
sub
or
lods
pop
adc
adc
push
hlt
pop
mov
sahf
pushf
scas
cld
cmp
stos
or
out
shl
or
inc
ss
shl
imul
test
sub
out
and
adc
mov
(bad)
aad
pop
mov
push
or
(bad)
push
inc
inc
je
js
stc
jle
cmp
xchg
stos
xor
jae
sbb
lds
sbb
ins
fisub
xchg
push
in
adc
adc
mov
xor
xor
or
stos
shr
out
adc
sub
push
sub
aas
jo
jp
jecxz
xor
mov
test
cmp
jb
add
jp
inc
adc
xor
sahf
mov
pop
int3
cmp
or
ds
and
or
mov
or
xlat
lods
lods
jb
jo
mov
lds
add
mov
cmps
push
jmp
(bad)
aas
std
mov
jne
retf
shl
lds
sbb
scas
xor
outs
rcl
iret
(bad)
mov
cmp
cwde
push
sbb
adc
stos
push
xchg
aaa
inc
and
xor
and
fcomp
adc
clc
fstp
jne
mov
pop
js
xchg
popf
jmp
pop
fimul
dec
or
adc
(bad)
push
and
pop
add
jno
cmp
stc
fistp
jne
push
adc
outs
or
push
add
not
cmp
rcl
lods
repnz
add
dec
call
jle
out
gs
mov
loope
ins
loope
mov
jae
push
and
fisttp
sub
je
or
lods
std
mov
pop
popf
jno
aaa
fwait
outs
imul
loopne
or
mov
mov
test
into
pop
mov
test
test
mov
loop
sti
scas
imul
jmp
xchg
jns
loope
rcr
xchg
mov
nop
xchg
xor
test
cmp
nop/reserved
lahf
mov
jns
sti
loopne
cmps
inc
and
xchg
retf
repz
push
adc
into
rcl
cmp
jno
dec
sbb
mov
inc
or
daa
adc
mov
adc
ss
mov
mov
pop
adc
mov
mov
or
sub
sbb
xchg
outs
(bad)
call
mov
(bad)
mov
in
clc
fistp
je
popa
ds
into
and
(bad)
ret
and
inc
das
into
ss
dec
or
or
adc
mul
cld
mov
cmps
data16
xor
sbb
jns
pop
shl
mov
cld
in
or
ret
cwde
cmp
mov
jmp
lahf
mov
xchg
movs
and
clc
repz
and
addr16
stos
fst
ds
add
add
adc
add
call
loopne
cli
fistp
ds
jnp
or
(bad)
and
ror
rcr
sbb
(bad)
in
repnz
sub
xchg
lahf
sbb
xor
outs
jnp
cmp
pop
loope
mov
push
lahf
(bad)
lods
test
xlat
mov
call
xchg
inc
cmp
fsub
(bad)
int
mov
xchg
and
out
xor
dec
iret
mov
inc
int3
mov
icebp
inc
pop
lods
cmc
push
cmp
adc
shr
sar
cwde
js
xor
jecxz
clc
adc
(bad)
out
xchg
sub
lods
sub
aas
cmc
fsubr
mov
scas
jp
inc
push
int
fiadd
test
mov
imul
ror
cmp
ss
pop
dec
push
or
clc
dec
outs
cld
imul
test
and
dec
mov
cmp
add
pop
mov
scas
stmxcsr
(bad)
pop
add
pushf
mov
iret
or
ss
push
hlt
or
mov
sub
or
sub
loop
les
adc
js
and
test
xchg
cs
hlt
pusha
rol
popa
sub
lock
mov
je
xchg
out
add
dec
imul
add
dec
cs
out
mov
jnp
into
and
lahf
fdiv
xchg
cmp
shr
push
(bad)
imul
mov
xchg
cmp
repnz
fldenv
sbb
mov
les
sbb
stos
out
mov
mov
add
mov
ss
fmul
pop
mov
push
pop
test
push
stc
and
jae
jne
test
mov
stc
pop
xor
mov
mov
cld
int3
dec
inc
outs
sub
imul
pop
sbb
xchg
int
and
and
lea
lds
ins
ins
jne
ins
mov
hlt
mov
mov
inc
push
test
xchg
add
retf
lds
dec
clc
int3
into
mov
outs
xlat
xchg
jno
or
(bad)
cmp
jmp
push
mov
sub
dec
push
push
add
or
xchg
scas
mov
ins
mov
nop
xor
pusha
nop
dec
xor
ret
outs
leave
rol
xchg
pop
mov
mov
imul
es
mov
dec
sub
mov
call
mov
push
pop
inc
mov
jmp
pop
xor
neg
stc
fs
int3
jmp
pushf
add
inc
xchg
cmps
clc
adc
mov
push
fisub
inc
int
ret
cmp
ss
pop
stos
xor
sahf
jg
sbb
retf
add
test
xor
(bad)
lock
mov
(bad)
stos
or
jnp
push
fmul
pop
xchg
scas
fistp
adc
ret
add
popa
inc
push
rcr
imul
lahf
mov
js
jnp
xchg
out
push
jbe
out
mov
pop
push
xchg
ret
lahf
je
loope
dec
and
mov
mov
sti
les
sub
xchg
sti
jb
mov
and
sbb
out
je
fcomp
mov
sbb
sub
adc
pop
sub
daa
cmp
jo
movs
gs
pop
sub
adc
dec
dec
cmps
fild
sbb
aam
and
ja
rcl
in
xchg
stos
lock
xor
mov
pusha
push
push
mov
aaa
pop
je
inc
aam
cli
aas
ret
sub
inc
jmp
lods
adc
dec
cs
ret
xchg
lods
test
lods
out
mov
pop
sbb
jle
gs
mov
adc
popf
add
sub
sahf
xor
cmp
fmulp
cli
rcr
jl
div
xor
mov
shl
push
mov
mov
int3
fild
or
fild
gs
int3
xor
les
js
adc
push
in
aas
add
sahf
mov
cmp
stos
mov
mov
bound
ja
out
and
lock
mov
add
jmp
enter
jmp
enter
xchg
mov
clc
xchg
fisttp
daa
sahf
push
dec
movs
lahf
cmp
dec
xor
sub
pop
test
xchg
cmps
les
scas
(bad)
jge
nop
adc
sub
icebp
in
not
mov
sub
das
push
adc
fild
addr16
dec
pop
cmp
dec
repz
mov
mov
popa
jl
loop
ficomp
inc
inc
int3
arpl
iret
pop
clc
pusha
js
ja
mov
in
push
stos
mov
(bad)
nop
lods
outs
mov
ins
fdivr
sbb
add
pop
jecxz
adc
inc
sbb
js
ja
cmp
mov
(bad)
xor
ss
ins
sub
mov
je
aaa
lea
push
mov
push
rcr
xchg
push
loopne
jbe
arpl
lods
popa
cmp
push
xchg
loope
adc
pop
inc
outs
xor
jg
out
push
int
jno
xor
aam
mov
xor
jge
jle
pop
mov
inc
pop
mul
ja
out
mov
int
inc
test
pushf
xor
jnp
aad
jmp
jp
cmp
add
cli
xor
fcom
mov
icebp
or
imul
leave
test
out
enter
test
add
dec
mov
jmp
add
jno
jns
ds
inc
jb
lock
inc
sti
scas
inc
je
add
jge
jmp
xor
test
inc
xchg
leave
mov
sub
test
mov
ficomp
pop
fimul
jl
pop
mov
and
hlt
jl
es
imul
add
inc
fnstsw
add
fistp
mov
xor
pop
push
or
sub
cmp
jae
fwait
loop
xchg
fmul
cmp
pop
cmp
adc
mov
jb
xchg
retf
mov
cwde
mov
popa
aad
adc
xor
push
das
push
test
cmps
outs
aas
jp
fisttp
xor
mov
fist
cs
int
sub
(bad)
mov
arpl
dec
fdiv
xor
sub
jmp
pop
test
cs
cmps
mov
sahf
fist
leave
in
push
xchg
scas
sub
in
jnp
mov
xchg
mov
repz
inc
jbe
mov
mov
xor
enter
mov
lods
fs
call
mov
add
pushf
or
xor
cld
ret
jmp
lods
mov
push
fnsave
scas
mov
jbe
add
fdiv
jnp
call
fwait
test
mov
and
dec
add
pop
or
mov
std
adc
add
push
loope
xchg
jle
mov
jbe
out
ret
fsub
in
and
mov
pop
cdq
aaa
mov
sub
jle
dec
adc
scas
out
mov
fnstcw
inc
mov
popa
out
or
mov
mov
inc
rcr
dec
lods
ds
repz
xchg
add
inc
stos
mov
in
retf
frstor
pop
mov
addr16
push
lds
push
movs
and
je
push
push
and
movs
cld
cdq
mov
cld
inc
mov
inc
xchg
sbb
pop
or
push
mov
das
dec
and
enter
test
sbb
cdq
leave
pop
outs
scas
cmp
mov
mov
or
mov
ja
jne
jle
push
idiv
and
sar
mov
cmps
outs
inc
jecxz
inc
je
ins
mov
(bad)
mov
mov
lahf
mov
mov
repz
pop
les
fwait
out
jp
mov
xchg
pusha
hlt
aaa
imul
call
je
mov
stos
jp
add
icebp
cmp
push
neg
pusha
or
pop
icebp
in
scas
jae
int3
popf
mov
retf
mov
mov
in
loope
into
mov
push
or
or
cmp
fcmovnb
stos
popa
lods
rcr
aas
mov
(bad)
clc
les
mov
(bad)
xlat
cmp
or
lods
pop
adc
fs
arpl
(bad)
push
jecxz
mov
cmp
jg
out
xor
pop
push
add
add
sub
je
adc
dec
in
push
es
dec
call
(bad)
jns
ret
retf
cld
dec
clc
pop
cmp
lods
inc
dec
inc
rcl
aaa
lds
(bad)
ins
popa
cmp
and
jp
and
xor
cmp
inc
push
and
jo
jb
fisttp
mov
mov
xchg
jmp
imul
mov
cli
pop
add
push
fadd
sub
adc
xor
int3
aas
jbe
ins
mov
mov
jo
jg
cld
cmp
jnp
sti
shl
pushf
pop
movs
das
movs
call
imul
push
xor
pop
test
add
sahf
sub
cmp
jnp
add
adc
cmp
jo
imul
mov
mov
leave
shl
outs
mov
mov
jp
sbb
pusha
jmp
pop
sbb
dec
push
push
out
in
out
out
sahf
push
mov
xchg
jns
fimul
pop
fistp
cmp
adc
outs
mov
in
add
fadd
and
jne
ret
inc
sbb
icebp
mov
mov
scas
mov
daa
mov
ss
movs
fdiv
repnz
ret
pop
mov
rcl
arpl
and
(bad)
scas
jle
arpl
xchg
lahf
pop
fnsave
inc
adc
scas
dec
das
cwde
add
test
mov
lods
ins
aas
and
(bad)
push
shr
dec
not
dec
ret
fsubr
in
das
je
sbb
ret
cmp
(bad)
jo
xchg
adc
ss
es
js
xor
jp
jb
in
cwde
mov
jae
or
adc
jecxz
(bad)
fisubr
mov
pop
lea
pusha
mov
jnp
jo
inc
jne
or
ins
scas
scas
into
daa
fldcw
mov
(bad)
cwde
mov
lock
jecxz
or
xlat
adc
dec
in
cmc
fs
scas
jmp
hlt
dec
jge
mov
das
call
cdq
sti
das
and
dec
and
ds
out
ds
es
jo
lahf
sub
mov
icebp
retf
pop
inc
fsub
stos
cs
sub
stc
fldcw
inc
int3
adc
hlt
das
lea
push
shl
fs
jb
xor
cmp
(bad)
loope
daa
js
aad
ins
stos
jp
xchg
adc
fnstcw
mov
jnp
in
(bad)
adc
pop
inc
pop
test
jmp
popf
push
push
mov
sbb
aam
test
stos
xchg
jp
retf
icebp
push
hlt
add
int
stos
je
push
sbb
sar
sub
mov
dec
mov
sbb
adc
not
ins
sub
mov
jne
sbb
sub
or
(bad)
shr
sahf
adc
push
nop
sahf
lods
test
scas
bound
xchg
fwait
adc
call
fcmovnb
ret
jmp
fdiv
test
and
aam
sbb
mov
scas
(bad)
cmp
test
out
pushf
sub
inc
pop
mov
dec
je
retf
push
add
sub
lea
lods
mov
rcr
test
push
dec
loopne
cmp
(bad)
xchg
mov
cmp
repnz
mov
or
enter
mov
and
xchg
inc
pop
sub
nop
xchg
dec
pusha
sahf
in
sti
aad
jge
sbb
js
add
repnz
xor
cld
mov
clc
ds
mov
int3
pop
out
(bad)
xchg
add
adc
cs
push
sub
or
xor
jb
loop
inc
es
enter
sbb
jmp
ins
inc
mov
out
inc
pusha
push
in
xchg
out
mov
outs
sbb
or
outs
push
ja
xor
jmp
iret
dec
lahf
ror
call
outs
test
je
push
mov
call
adc
sar
ins
add
sub
jmp
fdivr
cmc
inc
xor
inc
xor
or
lock
scas
sahf
or
fwait
mov
inc
stos
jnp
test
loopne
push
movs
pop
xchg
lock
(bad)
mov
enter
jb
or
jno
icebp
mov
mov
fwait
xor
movs
dec
or
mov
ds
adc
stc
mov
sub
int3
xchg
leave
out
int
jle
xchg
xchg
mov
ja
mov
inc
mov
shl
cli
sub
stc
mov
or
sbb
loopne
fst
and
sti
jmp
mov
pop
daa
adc
fs
mov
sub
add
stc
xchg
cmp
inc
adc
xor
scas
and
loopne
popf
movs
sar
test
repz
mov
in
js
mov
or
(bad)
jns
dec
sti
or
stc
cmps
and
ret
movs
das
lods
(bad)
cmp
fcomp
sbb
mov
xor
ficom
(bad)
cmps
pop
push
push
cmc
cmc
nop
out
fdiv
xor
mov
rol
lds
ins
sub
je
clc
test
imul
mov
daa
or
call
std
inc
cld
rcr
xchg
loope
mov
dec
sbb
cmps
mov
or
xlat
daa
das
pop
cs
pop
nop
jl
fdiv
bound
outs
jle
jns
mov
gs
jge
outs
ins
sbb
sbb
mov
adc
in
and
dec
pop
mov
push
pop
inc
mov
repnz
jbe
or
inc
mov
jge
or
cmp
sbb
pop
inc
dec
mov
sub
push
xchg
mov
mov
ja
clc
cmp
cmc
add
stc
sbb
loope
gs
cmps
pop
push
sbb
clc
mov
cmps
lahf
loope
cmp
test
mov
test
mov
cmps
xchg
mov
add
icebp
rol
sbb
pop
(bad)
(bad)
jg
int
mov
loop
and
lds
bound
push
test
and
mov
fnsave
div
outs
sbb
or
mov
jnp
pop
mov
sub
ds
xchg
aad
out
mov
and
das
dec
jmp
add
fs
leave
call
je
cmp
adc
push
cwde
js
mov
fld
push
outs
lea
nop
je
fmul
push
leave
lock
xor
or
and
iret
push
add
pop
mov
gs
jne
into
jg
pop
jmp
sar
pop
xchg
jnp
clc
jge
(bad)
fwait
mov
adc
jo
fs
loop
psrad
sub
push
sub
shl
ret
jg
pop
and
and
ins
repz
ins
out
into
pop
mov
jp
js
scas
xchg
xchg
shr
loopne
and
adc
pop
retf
mov
pop
push
daa
adc
sub
xchg
(bad)
stc
(bad)
sub
push
pushf
int
addr16
imul
cmp
(bad)
ins
and
rcl
cdq
js
out
mov
hlt
das
push
movs
xlat
xlat
dec
fucomip
adc
pop
retf
push
pop
loope
movs
mov
pop
push
fisttp
mov
and
into
mov
xor
dec
xchg
arpl
and
xor
cmp
aas
sub
fisub
sahf
sub
add
dec
cmp
mov
int3
sbb
lds
pop
cmp
sub
and
retf
jg
mov
rcr
mov
adc
clc
jne
jae
mov
push
inc
aam
addr16
cmps
mov
ss
and
mov
fiadd
cmp
mov
or
movs
pop
nop
or
and
lahf
adc
ja
mov
or
hlt
push
retf
mov
mov
into
pop
test
mov
ds
pop
pop
shl
mov
repz
add
repnz
jo
lahf
mov
push
out
rol
inc
sbb
cwde
sbb
xor
inc
scas
adc
cmp
or
lods
mov
mov
mov
neg
or
pop
sub
in
fwait
sti
fstp
jp
add
xchg
mov
jle
es
push
push
repz
clc
cmp
inc
cwde
mov
lods
call
mov
jg
mov
out
push
add
mov
retf
jne
fidivr
(bad)
out
cs
aam
in
leave
shr
add
dec
fwait
sbb
mov
mov
add
xchg
inc
mov
loopne
loope
nop
xchg
add
(bad)
leave
sub
xlat
push
shr
mov
inc
mov
jle
pop
rcr
xchg
jmp
xchg
xor
je
cs
cmp
mov
out
movs
(bad)
dec
nop
jecxz
imul
imul
mov
push
shl
or
arpl
mov
xor
(bad)
cmps
sub
dec
mov
cwd
inc
push
dec
int
popa
fisubr
dec
mov
sub
pop
inc
cmp
xor
inc
xor
in
in
neg
pop
mov
bnd
sub
ror
or
dec
mov
dec
xchg
(bad)
sti
mov
movs
cli
mov
cmp
or
ror
repnz
adc
sub
sub
sub
imul
mov
call
aas
rcr
jg
sub
bound
inc
gs
rol
jae
int3
mov
std
inc
adc
fisubr
dec
push
and
fmul
sub
out
dec
sbb
movs
fmul
jbe
out
dec
jg
mov
retf
xor
shld
and
(bad)
cld
rcl
pop
int
push
ror
sbb
or
inc
mov
add
clc
xor
jo
lods
in
das
sahf
xor
push
push
icebp
in
push
jns
leave
jae
xchg
cmp
or
push
add
rcr
sahf
aas
jnp
sbb
jb
cmp
int
add
mov
push
jl
dec
movs
je
jle
sbb
cmps
fiadd
dec
pop
xchg
jo
retf
adc
mov
fimul
hlt
push
ss
jl
jb
call
sub
jg
push
call
mov
jb
sub
dec
jp
push
push
clc
pop
cmp
es
xor
xchg
inc
adc
rcr
add
xor
rcl
outs
mov
jge
fnsave
sbb
repz
(bad)
cmp
xchg
retf
dec
xlat
clc
mov
add
dec
pusha
rcl
int
mov
cmp
sbb
cli
and
jecxz
(bad)
popf
dec
retf
inc
es
into
xor
xlat
int
test
adc
enter
loope
in
sbb
ret
sbb
jbe
rcl
jbe
adc
shl
les
jno
sbb
jmp
inc
cmp
popf
push
div
xchg
and
cmp
mov
daa
pop
mov
push
popf
xor
inc
ins
ret
jmp
and
in
push
push
add
inc
or
movs
sub
fdivr
mov
cld
jo
lods
inc
jb
popf
adc
xchg
jns
inc
sbb
cld
mov
loopne
mov
xor
adc
ss
(bad)
xor
sysenter
adc
ds
sub
outs
fcomip
(bad)
jp
dec
out
push
add
aas
inc
sub
cdq
icebp
clc
call
nop
pop
rcr
add
inc
xchg
fnsave
test
pop
aam
inc
push
xchg
gs
xchg
mov
loop
add
add
and
pop
xchg
mov
sbb
mov
mul
xchg
and
call
hlt
mov
sbb
jecxz
bound
fs
sub
pop
mov
jecxz
mov
ret
outs
in
fwait
jnp
std
(bad)
xchg
rsm
cmps
movs
sub
int3
pop
xor
xchg
outs
push
mov
inc
aas
hlt
int3
ss
ret
cmc
and
mov
add
mov
cs
inc
lgs
jae
pop
sub
cmp
outs
jbe
cli
cvtdq2ps
push
and
(bad)
lahf
cli
outs
in
push
aam
in
scas
add
or
pop
add
daa
lahf
dec
test
dec
clc
push
xchg
inc
pop
cmp
cmp
std
mov
jo
(bad)
pop
sub
push
jbe
xor
imul
imul
out
dec
lahf
add
sub
pop
mov
stos
aad
neg
mov
movs
fcmovnu
and
jo
jmp
daa
fisubr
in
jge
loope
dec
push
push
xchg
pop
inc
push
test
out
mov
dec
call
(bad)
push
shl
fsub
jmp
xchg
xchg
mov
nop
(bad)
push
mov
xchg
adc
loope
inc
push
hlt
cli
in
ja
jno
and
xlat
and
adc
maxps
clc
push
fcmovu
pop
mov
ret
xor
xchg
sub
fs
rcl
out
movs
or
xchg
das
scas
or
fs
dec
add
aaa
sar
call
mov
dec
aam
or
jns
pop
(bad)
fidivr
adc
dec
push
jo
mov
xchg
or
pop
or
test
rol
push
xchg
cmp
(bad)
fcom
movs
(bad)
dec
aad
les
xor
xor
and
mov
ins
cmc
ret
in
sbb
sti
loope
retf
js
mov
retf
dec
jle
mov
sub
test
shl
push
mov
mov
test
sbb
adc
sbb
pop
gs
mov
shl
fdivp
idiv
pop
sbb
xchg
icebp
xor
cmp
fucomi
adc
in
mov
(bad)
psraw
push
popf
xchg
jb
fiadd
pop
cmp
int3
sbb
xchg
outs
xor
jecxz
loope
add
push
in
ret
(bad)
push
imul
dec
fisub
dec
jmp
out
or
aad
add
jge
ins
mov
repz
hlt
arpl
dec
(bad)
dec
jns
pop
jge
pop
iret
push
out
dec
inc
adc
sub
mov
adc
jns
sbb
mov
cmp
jl
daa
adc
or
nop
mov
lock
cmps
out
inc
pop
xchg
xchg
push
stos
push
cmp
xchg
jo
dec
cmps
jbe
jbe
xor
div
into
xchg
out
data16
and
or
push
repz
pop
cdq
xchg
movs
add
int
mov
jp
jbe
or
add
mov
int
test
cmp
dec
pop
iret
sbb
imul
lahf
cs
std
sub
(bad)
shl
mov
jno
push
icebp
and
popa
call
fmul
gs
test
stos
(bad)
(bad)
xchg
cwde
rcl
cmp
scas
movs
outs
mov
jnp
in
push
movs
sar
repz
(bad)
test
repz
jmp
push
ss
repnz
mov
mov
xor
mov
jnp
leave
cmc
inc
je
cmp
das
arpl
and
adc
add
mov
repnz
mov
jne
mov
test
jbe
enter
shr
cmp
pop
nop
les
fdiv
leave
lods
pop
es
jecxz
jecxz
mov
cmps
cmp
retf
mov
inc
es
data16
out
in
mov
push
cs
or
not
movs
loopne
inc
sub
stos
pop
rol
mov
adc
ds
push
pushf
xor
mov
clc
or
xchg
inc
or
mov
push
nop
dec
std
jne
push
inc
ja
mov
dec
and
push
xchg
(bad)
mov
popa
xchg
sub
sti
stos
mov
popf
xor
xor
arpl
fmul
das
cs
lods
rcr
pop
fdiv
cs
inc
dec
mov
sbb
daa
add
std
inc
xchg
pop
fmul
mov
inc
and
mov
call
pop
loop
or
push
ss
adc
sti
or
lods
inc
(bad)
and
push
xor
ins
xchg
mulps
add
fs
mov
adc
mov
sti
int3
(bad)
xor
and
xor
(bad)
ror
mov
fwait
cmp
xlat
sti
sahf
sub
fisub
loope
lea
inc
dec
call
sub
pop
out
hlt
mov
mov
add
aad
cli
scas
mov
mov
jecxz
xor
push
and
popf
push
push
push
into
addr16
pop
(bad)
gs
push
mov
dec
mov
rcl
inc
or
add
mov
test
rol
pop
adc
pushf
or
pop
retf
(bad)
(bad)
outs
stc
mov
adc
cmp
outs
xchg
mov
mov
jp
cli
xlat
sub
jbe
hlt
or
(bad)
cmp
pop
xor
pop
jmp
cdq
mov
xchg
mov
scas
cmp
xchg
mov
sahf
jns
and
xchg
cmc
xchg
xor
mov
ret
inc
cld
lods
ror
mov
lds
lods
push
and
push
loope
xchg
retf
jl
cmp
mov
scas
(bad)
pop
pop
push
lds
cli
sub
jbe
outs
inc
outs
cmps
addr16
mov
mov
aaa
aad
or
and
ss
ror
add
xor
xor
mov
dec
loopne
sti
scas
call
xchg
jecxz
ins
loope
std
fiadd
lock
sbb
test
mov
cmp
pop
retf
add
js
in
xchg
ds
loopne
test
mov
(bad)
sub
xchg
pop
scas
mov
scas
scas
pop
mov
call
mov
sti
mov
shr
lock
pop
mov
mov
fwait
stos
xlat
mov
jle
int
dec
mov
cld
shl
retf
and
sub
mov
add
out
test
enter
stos
mov
outs
mov
into
add
sbb
adc
sub
loope
repnz
retf
leave
dec
push
adc
mov
neg
add
jl
xor
iret
cmp
iret
loope
out
int3
scas
pop
pop
inc
and
or
fsub
cmp
es
nop
hlt
popa
or
loope
lea
sbb
cld
ja
int3
push
or
ds
inc
mov
adc
adc
lods
add
push
add
lods
or
div
js
xor
rcr
pop
int3
loopne
dec
xchg
lods
aad
es
jns
popa
xchg
popa
cwde
data16
nop
retf
ins
fwait
pop
int
sbb
or
adc
ret
mov
dec
aad
int3
lea
pop
fnsave
test
js
shl
lahf
dec
or
stos
daa
loope
pop
push
ret
inc
(bad)
sbb
js
mov
push
dec
inc
xchg
call
push
mov
jo
nop
sbb
rol
icebp
cmps
push
adc
movs
push
scas
rcr
iret
cli
std
(bad)
fwait
ret
sahf
scas
imul
lock
idiv
jno
mov
sub
repnz
stos
fsub
add
pop
fwait
mov
dec
push
dec
adc
dec
call
loopne
mov
cmp
mov
ins
dec
lea
or
inc
pusha
ins
je
ins
pop
repnz
ins
ja
lea
aam
mov
stos
sar
cs
sbb
cmp
ja
sahf
icebp
(bad)
push
pop
sbb
dec
xchg
pop
cmp
ret
mov
xor
shl
loope
jae
push
dec
cmps
inc
lods
lea
scas
cmp
clc
sti
dec
mov
retf
mov
std
dec
mov
jle
(bad)
fild
pop
adc
dec
sub
je
and
mov
fild
pop
enter
dec
adc
js
push
xor
in
(bad)
shl
test
add
xor
mov
(bad)
stc
sub
or
and
mov
into
fs
cmc
leave
jbe
sub
in
dec
ins
sub
cs
arpl
xlat
adc
jmp
cmps
daa
xor
in
push
test
inc
leave
push
xor
sahf
clc
aad
adc
pop
xor
(bad)
retf
jl
dec
(bad)
hlt
in
addr16
arpl
pusha
shl
les
rcl
sub
and
stos
inc
push
arpl
(bad)
in
push
xchg
popf
pop
adc
aaa
push
push
jg
xor
sub
xchg
nop
repz
lea
mov
add
lock
lods
ffreep
and
mov
clc
add
xchg
int
call
mov
xchg
pop
ja
push
stos
in
sbb
mov
or
aam
in
(bad)
js
outs
arpl
pop
ret
mov
bound
pop
jge
or
retf
int
or
fisttp
mov
mov
int
pop
jns
xchg
and
cmp
cmc
add
(bad)
rol
retf
mulps
sub
setp
and
(bad)
pop
and
add
push
push
(bad)
shl
adc
in
pusha
mov
retf
dec
xchg
mov
sbb
mov
cmp
stos
xlat
dec
pop
movs
sub
mov
and
aad
dec
cwde
in
stos
mov
jae
stc
cdq
and
test
pusha
dec
xor
push
sub
loopne
mov
dec
arpl
mov
sbb
aam
sub
imul
dec
addr16
in
shr
outs
jns
push
mov
adc
push
dec
push
aam
mov
adc
dec
or
or
imul
retf
les
pop
sti
clc
jb
pop
sub
adc
jne
pop
mov
push
popa
xor
stos
add
pop
ret
mov
or
mov
mov
adc
pop
call
scas
dec
nop
sti
cmp
rcl
jmp
call
push
cmc
jl
sbb
jmp
xor
jmp
dec
call
push
les
in
js
test
and
mov
out
jmp
or
test
out
lds
sbb
cmc
add
mov
xchg
or
or
imul
test
jmp
lahf
ds
mov
dec
mov
adc
hlt
mov
pop
or
out
stos
call
adc
fld
xor
je
mov
sbb
and
push
scas
pop
sub
mov
add
out
xchg
adc
cmps
repz
cli
xor
lods
add
and
push
dec
pop
aas
ins
push
pushf
int3
or
mov
bound
ds
mov
rol
rcl
(bad)
push
and
cmp
push
mov
mov
aaa
in
and
mov
inc
hlt
repnz
stc
loope
bound
jo
fiadd
stos
arpl
outs
ret
pop
icebp
rol
cdq
push
cmp
inc
loop
ja
in
jmp
sub
popa
sub
sub
scas
inc
iret
and
div
mov
(bad)
mov
push
adc
and
mov
movs
inc
aad
in
ins
sub
mov
and
inc
pop
out
jo
lahf
sahf
je
push
lahf
aas
jae
fdiv
iret
pop
mov
xor
lods
push
gs
movs
push
dec
fdivr
movs
adc
xor
push
push
pop
(bad)
retf
sub
jp
add
lahf
mov
mov
pop
(bad)
dec
inc
sbb
adc
js
(bad)
cmp
jo
in
pop
outs
fst
test
cmp
mov
cmp
sbb
(bad)
cli
mov
(bad)
fstp
mov
ja
movs
and
jecxz
jp
mov
ret
cmp
mov
push
loope
outs
adc
push
push
cmp
fist
fdiv
xchg
or
xor
outs
or
sub
mov
movs
push
adc
jne
neg
inc
pushf
jecxz
xor
sub
mov
test
dec
mul
sbb
cmp
(bad)
or
mov
call
(bad)
jle
or
jl
adc
inc
sar
adc
(bad)
(bad)
mov
movs
sbb
sbb
lock
movs
pusha
jecxz
cmps
dec
pop
pop
inc
fist
lock
and
aam
push
test
and
mov
xor
js
pop
jnp
adc
sub
std
outs
mov
sbb
inc
mov
ror
push
adc
fld
cli
(bad)
(bad)
and
sub
push
mov
cwde
inc
(bad)
test
ret
dec
push
adc
cmc
pop
loopne
mov
fsubr
das
mov
sar
pop
cmp
(bad)
into
rcr
xchg
push
jb
pushf
repnz
mov
call
mov
dec
fadd
(bad)
cs
retf
mov
popa
aas
sbb
js
mov
inc
mov
inc
mov
jbe
pop
pushf
in
mov
mov
iret
jnp
pop
xor
cli
stos
jne
add
clc
shl
cmc
popf
or
cmp
cmp
or
les
mov
or
push
bound
mov
(bad)
sar
aad
push
pop
add
fwait
adc
std
sbb
in
xchg
sbb
push
adc
in
or
push
aam
test
inc
mov
jmp
xchg
fsubr
pushf
adc
sub
mov
cmps
adc
jns
jmp
ret
retf
mov
aas
sbb
cmc
imul
dec
inc
cmps
lods
cmp
or
or
cwde
pop
jb
dec
(bad)
shr
xor
cmp
movs
sti
adc
pop
outs
lds
es
jno
dec
xchg
push
jns
retf
sbb
dec
mov
jecxz
jg
xchg
popf
cmp
repnz
mov
loop
inc
jecxz
loop
mov
cdq
mov
nop
inc
popa
inc
xor
mov
test
mov
leave
push
or
adc
and
popf
ss
mov
xchg
xor
mov
add
or
push
(bad)
mov
dec
adc
mov
xchg
mov
mov
pushf
inc
in
xor
es
fild
xor
push
fwait
out
js
mov
dec
stos
stc
loop
test
mov
sahf
fild
ins
or
addr16
cs
cmp
les
dec
(bad)
cli
ss
cli
jno
lock
mov
xchg
dec
jno
push
je
pop
cmps
cld
jmp
cmp
push
ins
inc
push
scas
clc
xchg
sub
mov
xchg
sub
fidiv
fisubr
cmp
pop
out
inc
not
sti
fs
mov
inc
sbb
cli
and
jmp
mov
dec
js
mov
scas
shl
aaa
inc
movs
call
and
sahf
movs
sub
int
and
movs
(bad)
fmul
adc
cld
dec
lods
lds
andnps
xor
fs
mov
clc
loope
push
mov
cmp
movs
add
test
jbe
hlt
xor
std
xchg
dec
retf
mov
cli
lds
add
ins
adc
sub
mov
or
aas
sahf
inc
mov
mov
imul
loop
add
mov
push
cmps
push
mov
pop
push
xchg
inc
pop
or
aam
scas
xor
ret
xor
aaa
jb
test
inc
add
sar
scas
ret
je
xchg
pusha
jmp
add
xor
mov
mov
mov
sub
je
mov
mov
and
addr16
sub
xchg
mov
out
sti
loope
popa
or
sbb
rcl
sub
outs
xchg
jb
es
into
call
pop
add
adc
push
mov
mov
or
(bad)
mov
retf
mov
adc
leave
mov
movs
retf
stc
add
pop
aad
mov
sub
rcl
xor
mov
clc
sub
pushf
adc
xor
push
outs
and
fdiv
lods
mov
test
push
test
inc
adc
push
fcomp
int
sub
not
fsub
push
mov
push
call
stc
push
mov
sub
and
daa
aaa
adc
dec
jns
xor
cmps
shl
mov
ins
jp
xor
mov
lahf
ret
jo
jge
data16
mov
cmp
add
retf
call
aam
icebp
aam
pop
lods
jp
retf
add
pop
xor
les
adc
dec
sub
push
jmp
adc
int
xchg
inc
mov
xor
xchg
shr
(bad)
mov
scas
or
mov
sbb
shl
add
ins
mov
scas
or
dec
mov
mov
daa
push
inc
xchg
test
adc
cmp
pop
(bad)
cdq
(bad)
inc
xchg
lods
cwde
stc
xchg
leave
cs
sbb
push
sar
retf
aas
xchg
add
and
mov
sahf
sbb
movs
mov
mov
xor
aam
aas
mov
in
fldenv
hlt
icebp
and
sub
cwde
pcmpgtb
div
push
in
mov
js
add
add
sub
cmps
mov
cmp
mov
mov
or
ds
mov
pop
push
mov
aaa
push
mov
(bad)
stos
push
and
pop
cs
add
ins
mov
rcr
jb
rcr
sbb
pop
shl
sti
jmp
es
cmps
add
xlat
dec
mov
(bad)
mov
push
sub
ret
add
jmp
fstp
das
adc
icebp
daa
adc
dec
sbb
jg
mov
into
aaa
retf
loope
mov
cmp
pop
test
jae
sbb
and
mov
dec
fld
pop
out
xchg
iret
(bad)
aam
mov
fisub
arpl
pop
dec
test
xor
xor
ins
jbe
pop
ror
or
retf
add
jmp
push
call
dec
int
push
pushf
dec
xor
popa
aam
dec
add
arpl
jp
adc
mov
cmp
pop
push
adc
pop
call
shl
mov
dec
lds
call
pushf
movs
or
cmp
jg
and
mov
mov
sbb
pusha
jo
and
xor
push
jnp
fs
jmp
adc
push
popa
push
cmp
outs
push
jg
fdiv
sbb
ss
pop
xchg
jno
loopne
dec
dec
je
sub
or
inc
dec
mov
push
pushf
popf
jmp
lods
push
add
js
xor
cwde
add
push
sub
sbb
sbb
adc
mov
int3
xchg
in
inc
push
mov
call
sub
(bad)
imul
enter
(bad)
outs
cli
adc
repz
and
enter
ja
sub
or
inc
ficomp
ss
xor
push
sbb
mov
and
inc
jmp
ins
mov
cmp
dec
dec
or
mov
cmps
loop
adc
xchg
sub
jae
push
imul
out
lods
les
inc
add
into
add
sbb
icebp
jmp
fst
movs
jge
jmp
retf
sub
enter
imul
(bad)
and
sbb
cmps
pusha
aaa
pop
push
and
ss
(bad)
xchg
jae
jmp
xchg
cmps
pop
push
xchg
pmaddwd
inc
mov
sub
jmp
push
xchg
xchg
mov
aas
arpl
hlt
jmp
push
mov
push
daa
cmp
mov
dec
cmp
popa
sbb
hlt
(bad)
fst
cwde
dec
cmp
cmp
sahf
mov
test
arpl
mov
mov
aaa
lods
inc
pop
and
neg
lea
(bad)
adc
ja
mov
pop
xchg
jl
imul
push
lods
mov
hlt
or
dec
push
retf
add
add
(bad)
push
in
or
js
hlt
xor
cmp
xchg
inc
int
sbb
sbb
(bad)
call
fidiv
dec
sbb
or
test
(bad)
inc
(bad)
inc
cmp
shl
mov
jne
add
call
inc
sbb
fiadd
out
xlat
jb
shl
outs
mov
jb
popa
push
and
adc
aam
xchg
aaa
sub
leave
test
adc
or
xor
inc
xor
inc
scas
mov
fnstenv
or
sar
aaa
mov
mov
dec
sub
je
arpl
jp
jg
mov
das
ret
sub
push
aam
sbb
mov
out
loop
and
xor
jmp
das
mov
sub
(bad)
arpl
cmps
cmp
pop
and
xor
sahf
int
test
lock
pusha
xchg
pop
in
in
dec
lock
inc
sbb
xor
cmp
xor
retf
mov
ror
mov
or
sub
jo
cmp
pop
pop
mov
std
add
les
or
sub
int
dec
sbb
xor
jg
sub
ror
cwde
not
out
jge
sub
sbb
in
pop
call
sahf
ds
lahf
out
add
stos
(bad)
sbb
jle
dec
les
pop
leave
cld
xor
mov
(bad)
repz
ja
loop
fbstp
adc
rcl
sbb
push
int3
push
mov
jge
inc
jp
and
jnp
jo
and
xchg
xor
cmc
fdivr
cli
imul
sbb
or
lds
xor
in
mov
mov
inc
pop
rcl
daa
sbb
sub
test
xchg
mov
adc
aas
add
mov
sbb
lea
pop
cmp
idiv
mov
or
add
jge
in
(bad)
loopne
inc
lods
fdiv
xchg
lods
ja
outs
jno
and
add
sub
gs
dec
out
aaa
dec
addr16
cmps
jmp
fwait
jae
jl
stos
mov
fdiv
es
inc
enter
mov
ja
or
and
imul
shr
xlat
push
xchg
int
jp
fdivr
call
stc
jle
outs
xchg
rcr
je
dec
inc
inc
sub
xor
out
pusha
outs
jo
xchg
test
cld
xor
test
jnp
lds
cwde
mov
stos
pop
push
in
push
lea
or
pop
cmp
loope
imul
sub
(bad)
push
ja
adc
push
or
add
cdq
jp
pop
aaa
xor
xlat
pop
call
mov
inc
inc
mov
and
scas
mov
xchg
es
test
pop
int3
jge
cmp
cmp
repnz
shr
xchg
shl
mov
ficom
movs
pop
xchg
mov
jmp
xchg
leave
call
sbb
xchg
xlat
scas
sbb
jmp
in
cwde
(bad)
nop
pop
repnz
jae
fldcw
fild
outs
enter
cs
mov
and
mov
mov
in
ja
sbb
inc
mov
mov
aas
dec
jle
mov
and
imul
lods
ret
pushf
out
mov
rol
fsubr
push
fs
inc
inc
add
fistp
enter
imul
dec
fadd
pop
and
mov
add
div
daa
and
jle
sbb
jo
ins
cs
(bad)
rol
jns
xor
lods
scas
es
popa
cmp
test
push
xlat
ror
mov
ds
and
fisttp
jg
sbb
jg
jns
shr
bound
lahf
loopne
mov
mov
mov
sub
jl
out
push
shl
pop
add
loop
mov
inc
adc
sar
sub
adc
mov
xchg
icebp
or
mov
pop
jbe
jmp
jmp
outs
add
mov
lahf
cmp
into
mov
push
inc
xor
lods
sub
and
cmps
fisub
test
cwde
cmps
lahf
fucomi
pop
xor
xchg
mov
out
cmp
outs
jns
test
sbb
cmp
clc
inc
pop
adc
shl
ror
pop
leave
in
pusha
mov
es
loop
lds
inc
sbb
dec
test
xchg
aad
mov
shl
movs
cmps
jns
and
test
popa
sbb
call
and
add
imul
or
repnz
imul
jge
cwde
shl
jg
xchg
not
ret
test
(bad)
dec
jnp
mov
pop
jle
adc
or
pop
sub
adc
mov
dec
or
lods
mov
scas
inc
mov
and
outs
pushf
popa
cmp
and
sub
fst
jmp
xor
rol
mov
or
jns
mov
sub
cmp
or
mov
lahf
dec
mov
sbb
push
sahf
test
int
jl
sar
retf
das
and
push
nop
cmps
test
dec
cli
test
sar
addr16
adc
dec
push
rcr
add
mov
pop
mov
cmc
mov
shl
mov
pop
push
mov
pusha
add
xchg
and
jae
xor
sbb
and
fsubr
sbb
or
(bad)
(bad)
push
mov
aas
xchg
lock
adc
cmp
mov
call
(bad)
or
add
(bad)
cli
add
mov
push
dec
test
les
les
in
sub
pop
xor
lods
xor
cmp
add
pop
push
sub
jno
popf
fidiv
push
std
loop
out
adc
inc
sbb
cmp
pop
sub
sbb
ins
iret
repnz
popa
push
retf
adc
push
gs
mov
mov
call
and
mov
addr16
pop
das
jecxz
outs
pop
mov
xchg
push
or
es
arpl
mov
inc
repz
adc
and
xor
add
rcr
int3
mov
jnp
inc
xor
(bad)
out
add
cmp
mov
and
mov
cld
lock
je
mov
xlat
icebp
jmp
dec
dec
mov
xlat
into
xor
dec
(bad)
leave
jbe
sub
hlt
pop
aad
or
mov
xchg
mov
add
fst
adc
dec
pop
add
and
dec
fbstp
fbld
inc
mov
or
lahf
call
retf
or
ins
rol
lods
cdq
pop
push
shl
pop
fidiv
mov
mov
fcmovb
ret
retf
xor
fimul
dec
inc
push
jecxz
daa
jmp
xor
sahf
xor
jne
cwde
xchg
popf
xchg
fcomp
mov
(bad)
xlat
add
(bad)
shr
out
and
int
sbb
fiadd
lea
cmp
out
cs
aas
daa
fdiv
cmps
fcomp
cld
je
(bad)
in
cmp
inc
xchg
jb
jge
sbb
xchg
and
lock
adc
xlat
mul
mov
push
xchg
iret
ret
pop
xchg
movs
mov
jno
test
push
or
push
mov
rcl
leave
(bad)
push
dec
retf
call
and
push
imul
das
shr
test
fdivrp
mov
inc
and
mov
(bad)
lods
clc
pop
mov
test
in
push
mov
sub
inc
jae
dec
cmps
cmp
or
adc
lods
and
arpl
shr
in
in
mov
or
pop
mov
in
test
in
mov
out
cld
or
loope
inc
and
xchg
jmp
jge
call
and
clc
mov
sar
fwait
ja
in
in
daa
mov
stos
movs
sbb
add
pop
rol
pop
(bad)
fs
(bad)
out
ss
cmp
pushf
sbb
fisttp
jne
test
mov
add
mov
loop
add
pop
sbb
out
mov
xchg
imul
mov
jle
mov
pop
cmp
cmps
dec
rcr
data16
pop
aad
sbb
xchg
pop
cvtdq2ps
or
ins
jae
or
mov
xor
loop
push
ds
xchg
stc
xchg
dec
ins
cmp
xor
nop
pop
cmp
sub
(bad)
push
add
mov
inc
jbe
push
mov
or
cmp
out
sub
mov
jge
sbb
push
mov
out
ds
xor
and
mov
data16
sahf
call
test
or
sbb
jmp
mov
repz
mov
into
jg
and
mov
dec
mov
mov
cmp
outs
popf
stc
aam
xor
push
outs
cdq
push
inc
stos
and
scas
inc
jp
jno
es
push
pop
push
mov
ficomp
or
inc
(bad)
mov
aaa
or
jbe
out
(bad)
adc
dec
je
xlat
arpl
jno
inc
pusha
mov
lahf
iret
cmc
jmp
sti
arpl
cmp
std
aaa
ja
das
lahf
sbb
cmp
adc
cmp
dec
sub
fdivr
push
cdq
jne
pop
xor
push
or
lock
jb
xchg
mov
jno
and
pushf
xchg
out
dec
pop
mov
jne
mov
retf
fbld
inc
push
jmp
(bad)
mov
push
enter
xchg
cmp
sub
cmc
push
add
jecxz
int3
sub
test
outs
mov
gs
xchg
mov
data16
xchg
dec
push
sbb
sbb
sub
fcomp
rol
xchg
xor
and
pop
push
jne
pop
pop
inc
iret
cmp
lahf
fadd
pop
jo
ret
aaa
jp
fcom
mov
retf
add
or
loop
push
out
or
inc
xlat
in
(bad)
scas
test
mov
movs
mov
sbb
cmp
inc
mov
xchg
xchg
fisttp
mov
ins
gs
push
repz
inc
dec
jmp
into
add
jecxz
jg
mul
cmps
dec
push
sbb
enter
pop
mov
xchg
lods
jl
mov
sbb
mov
fild
sti
in
or
out
xor
in
hlt
(bad)
out
mov
(bad)
adc
leave
lock
mov
ins
xchg
pop
xchg
mov
fidivr
push
push
inc
mov
mov
inc
out
scas
dec
mov
fisub
addr16
add
adc
popf
dec
sbb
add
mov
cli
and
or
lods
xor
pop
mov
adc
jle
repnz
mov
mov
shr
pop
nop
xchg
mov
push
mov
pusha
repz
pop
adc
mov
imul
je
mov
push
ret
faddp
cmp
pop
sti
mov
cmp
sti
aam
pop
ret
mov
test
cmps
movs
push
xor
dec
and
cwde
mov
or
push
sub
outs
lods
ds
jmp
enter
nop
dec
push
jmp
or
jl
jb
mov
mov
cld
mov
push
cmp
(bad)
inc
xchg
sbb
int
adc
imul
sub
cmp
ror
xchg
and
sub
pop
test
retf
and
jns
inc
push
shr
xchg
push
daa
hlt
fsubp
shl
push
icebp
xor
stos
cmp
and
lds
mov
dec
xor
pop
bound
xor
sub
cli
dec
int3
push
mov
daa
stc
pop
cmp
cld
adc
push
repnz
stc
xor
xchg
out
jmp
and
push
in
xor
xchg
cmp
fmul
lds
and
mov
sbb
retf
sbb
mov
out
mov
jbe
repz
scas
repnz
scas
lock
addr16
aas
cmps
push
push
sti
retf
out
call
jae
pushf
scas
(bad)
inc
sbb
test
lods
jb
clc
fisttp
add
es
call
fcmovbe
adc
and
sub
push
cmp
cmps
push
cmp
inc
xor
fcmove
cmp
nop
pop
(bad)
xchg
jb
fsub
fiadd
das
pop
dec
mov
mov
inc
data16
std
inc
stos
ds
xchg
mov
sub
adc
and
int
sub
inc
push
iret
call
ja
imul
scas
enter
mov
enter
mov
mov
sbb
lods
(bad)
cmps
push
or
ins
sbb
sub
lahf
and
add
ffree
cld
test
scas
loopne
dec
shr
aaa
cmp
push
lods
outs
sbb
dec
jns
(bad)
mov
xchg
mov
xchg
(bad)
push
test
fwait
push
test
push
xor
push
xchg
pop
inc
mov
adc
shr
icebp
test
inc
xchg
add
inc
sbb
dec
movs
xchg
(bad)
mov
adc
cmp
out
pop
test
push
cmp
xor
fdivrp
pop
ror
mov
ja
mov
adc
xlat
inc
arpl
(bad)
stos
jne
push
fld
add
xchg
fdivr
add
add
jmp
jnp
add
not
sahf
mov
sub
stos
in
sbb
jmp
push
push
dec
out
(bad)
xor
mov
(bad)
jmp
neg
inc
(bad)
cld
mov
rol
xchg
push
fnstcw
in
jmp
sbb
lds
scas
out
sbb
pop
push
cmc
mov
mov
lods
or
aad
mov
mov
xor
stc
shl
ss
jp
popa
pop
fyl2xp1
sub
in
std
cdq
push
jmp
arpl
sti
rcl
and
data16
pop
(bad)
mov
mov
xchg
dec
dec
pop
mov
mov
pop
into
xchg
test
daa
sbb
and
repz
jb
ins
(bad)
push
and
fdivr
retf
inc
mov
ror
aaa
mov
stos
mov
push
(bad)
lock
pop
ds
sbb
add
sbb
sub
jl
hlt
aaa
sahf
popf
test
retf
in
mov
mov
xchg
das
pop
ins
dec
dec
adc
lods
or
or
jmp
xor
push
mov
lea
sbb
push
div
pop
out
inc
adc
dec
jp
inc
mov
into
sub
gs
cmp
stos
xor
sbb
inc
jo
dec
push
adc
daa
stc
aad
sub
(bad)
push
movs
cmp
les
hlt
hlt
jb
mov
fisubr
stos
mov
mov
shl
or
into
push
das
loop
xchg
xchg
(bad)
repz
adc
mov
cmps
iret
loop
mov
sbb
mov
fnop
xchg
inc
bound
out
cmp
adc
aaa
fdiv
push
shr
lds
inc
mov
xchg
and
sbb
mov
add
dec
mov
in
inc
or
js
mov
or
or
int
cwde
pop
cmc
(bad)
dec
in
push
cmps
pop
push
push
push
xchg
pop
call
leave
dec
imul
mov
cmovns
ror
sub
and
xor
into
pop
(bad)
call
mov
in
mov
pop
lock
bound
add
dec
icebp
jo
in
dec
out
repz
jge
mov
lock
pop
mov
ja
or
xchg
add
into
push
xchg
jg
add
adc
(bad)
fchs
adc
pop
test
fimul
lahf
xor
sbb
sti
mov
sahf
mov
int3
cmp
add
aad
push
mov
ret
rol
sub
stc
shr
or
imul
jb
jns
cdq
jae
push
jo
lea
mov
jno
retf
mov
jge
sub
cs
inc
mov
jge
mov
popf
pushf
iret
outs
es
dec
xchg
dec
inc
ins
aaa
shl
rcr
mov
enter
jmp
fwait
push
sub
and
or
push
daa
outs
pop
fwait
in
and
pushf
int3
fdecstp
sub
and
stos
push
sti
dec
(bad)
add
inc
mul
sbb
inc
xchg
mov
loop
ins
sbb
and
fbld
cmp
mov
mov
cmps
sbb
fild
or
in
sbb
adc
cs
in
inc
sub
lea
data16
mov
mov
or
mov
mov
cli
cmp
sar
lock
stc
mov
inc
test
mov
lock
lds
cmc
test
lods
pushf
xchg
(bad)
fbstp
xlat
ds
inc
into
fsubr
adc
sub
xchg
sbb
fwait
cs
pop
pop
jge
xchg
stos
sahf
aaa
(bad)
mov
dec
xor
into
jge
mov
and
in
add
or
push
(bad)
fmul
fidivr
cmp
inc
sub
enter
inc
cdq
add
adc
test
xor
out
popa
pushf
sahf
mov
adc
jae
xor
loop
jae
push
add
(bad)
push
mov
(bad)
rcr
push
out
cmps
inc
fld
jle
je
jne
out
mov
movs
sbb
int
mov
test
mov
out
sub
sub
fistp
mov
xchg
xlat
and
mov
sub
test
sbb
or
mov
arpl
dec
in
(bad)
cmp
jne
test
mov
cdq
lods
dec
mov
push
sub
mov
shl
sbb
enter
or
test
imul
rol
enter
add
bound
mov
fwait
xchg
(bad)
mov
push
xor
in
jno
lea
adc
cmp
pop
xchg
repz
lock
dec
push
jle
sub
mov
xor
or
popf
or
aad
(bad)
loopne
cmp
cmp
leave
mov
sar
jmp
jmp
mov
jns
dec
arpl
adc
jne
and
push
jbe
pop
ds
popf
fisttp
mov
cld
inc
cmp
mov
data16
sahf
pushf
stos
(bad)
and
out
fwait
cmc
jge
jnp
mov
fwait
int3
mov
ja
xor
fild
cmp
aam
test
(bad)
xchg
scas
add
mov
pop
push
dec
sahf
(bad)
xor
movs
(bad)
test
push
mov
add
out
std
leave
sub
sbb
adc
jecxz
push
inc
dec
lahf
mov
stc
inc
stc
jmp
and
pop
int3
mov
adc
and
pop
jne
addr16
cwde
inc
(bad)
aad
xor
jmp
movs
outs
push
add
pop
cwde
das
xchg
pusha
pop
and
enter
lea
ja
add
cmps
stos
jnp
sub
xchg
jg
out
out
jmp
push
sar
test
pop
cdq
jne
pop
pop
cmps
mov
jmp
mov
test
and
dec
shr
es
jo
nop
jo
mov
mov
jmp
xchg
aad
adc
adc
xor
out
mov
xor
ds
xor
out
push
adc
adc
sub
imul
cmp
outs
mov
(bad)
xchg
iret
sar
sub
in
mov
lahf
aam
stc
mov
add
fdiv
dec
inc
add
pushf
pop
stc
stos
mov
add
pusha
in
sbb
fs
movs
adc
cdq
xchg
jmp
sbb
sbb
and
sbb
rcr
loope
or
data16
aas
ror
mov
pop
retf
xor
mov
inc
neg
xor
mov
xlat
mov
jno
test
mov
int
pop
and
fwait
mov
in
jmp
fsub
or
stc
mov
ins
cdq
sbb
das
xor
xchg
cmp
xor
pop
add
push
popa
cmp
pusha
sbb
xchg
xlat
cmp
fisttp
or
ret
mov
mov
icebp
retf
iret
lods
or
sbb
or
jb
fmul
push
sbb
fs
cmp
pop
stc
push
inc
push
add
fdivr
pop
jmp
mov
and
fwait
retf
(bad)
xlat
addr16
out
iret
out
and
add
inc
sub
rcl
jl
retf
aam
sbb
add
idiv
jp
xlat
xchg
dec
mov
repnz
test
jmp
jmp
and
pop
cmp
fld
std
inc
(bad)
mov
cmp
jns
cdq
jg
es
ror
das
call
mov
cld
out
or
mov
(bad)
mov
mov
push
popf
dec
pop
push
aaa
or
sub
inc
mov
dec
pop
popa
pop
sar
popa
call
adc
or
fldenv
icebp
xchg
dec
fcmovbe
aaa
pop
shl
push
lods
bound
aad
push
xor
stc
shl
gs
xchg
sub
stos
(bad)
fdivr
mov
stos
int
jle
mul
cmp
aas
imul
or
fsub
mov
mul
jnp
js
fidiv
inc
(bad)
in
adc
cld
mov
jmp
inc
out
stos
call
lods
movs
push
loopne
sar
jae
mov
and
ins
push
jmp
popf
add
mov
lods
in
popf
mov
xor
mov
or
sub
ret
mov
dec
in
les
test
mov
and
inc
xchg
dec
adc
popa
push
loope
push
popa
lods
mov
int3
push
test
sbb
cmc
aam
aaa
cmp
arpl
mov
jae
push
nop
and
cmp
cmp
sbb
cld
xchg
sbb
test
jb
push
sub
shr
lahf
adc
or
cs
iret
adc
mov
enter
xchg
or
out
sub
pop
cli
pop
loopne
rcl
jne
cmp
and
clc
mov
les
xchg
outs
aad
int3
inc
call
cdq
pop
pushf
jp
pushf
(bad)
call
repnz
adc
jne
retf
and
dec
jne
push
ss
popf
push
xchg
retf
pop
shl
cs
les
std
dec
and
sub
jmp
sbb
sub
mov
inc
sub
into
jle
imul
in
lock
cmps
sahf
xor
mov
fsubr
sub
fdivp
pop
mov
xor
sbb
stc
outs
fucomip
(bad)
xor
mov
and
adc
and
shr
adc
jle
loope
sahf
sti
es
aas
jmp
dec
cdq
xlat
xor
outs
inc
inc
mov
add
adc
cmc
sub
xchg
test
int
and
push
lahf
enter
adc
cmp
push
scas
mov
mov
inc
ins
push
gs
mov
addr16
mov
xchg
arpl
inc
fcomp
arpl
into
cmps
movs
mov
stos
repz
addr16
shr
arpl
pushf
sub
push
iret
lods
cmp
test
lods
adc
cmp
push
dec
xor
loopne
pop
or
jmp
cmp
idiv
inc
pop
sub
das
fnstenv
or
cwde
cmp
jns
pop
push
jns
lock
inc
adc
movs
out
mov
cld
rcr
retf
fldcw
dec
xchg
icebp
xchg
int3
loopne
imul
jp
lock
push
daa
ret
scas
pop
(bad)
pusha
jns
stc
jne
jno
jmp
mov
push
ss
movs
(bad)
fst
xlat
jb
out
push
mov
xchg
mov
push
push
outs
mov
push
mov
push
cmp
sahf
out
sub
push
dec
xchg
dec
ret
pop
stos
xchg
cmp
adc
pushf
adc
push
inc
scas
out
and
ins
dec
xchg
out
je
(bad)
pop
ret
shl
fnstsw
mov
adc
lods
cld
push
and
rcr
sub
add
mov
jno
out
int3
sub
mov
xor
retf
or
into
adc
xor
sbb
fisub
inc
sbb
push
inc
jnp
arpl
and
mov
pop
push
sub
mov
mov
dec
lds
dec
sar
pop
scas
sbb
cwde
sti
mov
jns
sub
mov
mov
mov
inc
imul
loope
ja
sahf
jo
and
loopne
mov
imul
aam
push
or
je
push
mov
jne
cmp
loope
xchg
lods
add
outs
push
jno
jp
xchg
mov
xchg
add
lea
mov
mov
add
adc
popf
dec
mov
ins
in
daa
xor
jb
into
adc
mov
sbb
fcomp
gs
push
out
ins
xor
data16
fild
push
int
inc
sub
cmp
js
into
enter
mov
mov
mov
mov
repnz
and
(bad)
movs
aam
mov
int
adc
jns
mov
cmp
test
adc
stc
jle
fdiv
cwde
or
lea
cmps
mov
jmp
pop
loopne
stos
sbb
popf
sbb
addr16
imul
mov
out
lods
and
or
hlt
xor
enter
nop
stos
aad
push
inc
shl
iret
or
or
push
fs
inc
imul
push
shl
sti
xor
sub
out
(bad)
lahf
and
gs
dec
xor
cmps
inc
cmp
pop
push
dec
pop
push
dec
push
xor
outs
xor
retf
(bad)
push
pop
fadd
inc
mov
push
lock
shl
mov
mov
xchg
or
push
out
popa
jmp
imul
je
test
scas
xor
mov
xor
sub
retf
xchg
dec
ret
mov
lods
xchg
dec
push
(bad)
addr16
mov
test
mov
xchg
enter
scas
pop
in
ins
add
jmp
aas
stc
mov
mov
jecxz
arpl
inc
pop
pop
xor
(bad)
out
xor
cmps
shl
adc
dec
scas
or
add
sar
mov
mov
aas
pusha
mov
push
push
add
pusha
repz
(bad)
ja
inc
pop
dec
rcr
nop
or
call
cwde
ret
sbb
dec
pop
mov
ins
seta
icebp
jne
xchg
loop
cmp
inc
xor
adc
cmp
ret
mov
(bad)
iret
mov
sbb
jmp
outs
dec
loop
cmp
lea
popa
shl
xchg
data16
inc
(bad)
mov
or
lea
lock
(bad)
lods
loopne
inc
jg
adc
sub
pop
xchg
push
stos
ja
and
ret
push
push
or
sbb
cmps
sub
sub
ins
mov
sub
push
lods
dec
add
ja
pusha
adc
rcl
(bad)
and
(bad)
call
push
arpl
iret
mov
int
dec
je
fnstsw
cli
inc
mov
sahf
fld
bound
(bad)
fist
jno
and
test
add
mov
jecxz
xor
mov
xor
cdq
xor
test
mov
sbb
(bad)
shl
ffreep
gs
mov
jne
call
and
fsubrp
outs
adc
xor
out
(bad)
jae
in
into
sub
xor
xor
sub
nop
dec
outs
jle
int
pop
jno
mov
xor
scas
out
sahf
(bad)
mov
cld
jno
pop
mov
xor
adc
xchg
pop
jo
mov
hlt
push
pushf
pop
or
cmps
pop
js
fsub
aad
xchg
push
xchg
jg
out
push
inc
xchg
ficom
sar
test
out
inc
jge
arpl
push
push
lods
push
sbb
mov
push
out
fldenv
jno
leave
pop
stos
jle
repnz
bound
jo
cld
retf
pushf
pop
adc
cwde
ds
lds
mov
sahf
mov
mov
daa
fbld
mov
fsubr
dec
mov
add
mov
lods
iret
outs
pop
data16
cmc
daa
pop
pop
(bad)
(bad)
mov
in
shr
mov
sbb
push
xchg
or
xor
add
and
and
imul
mov
cld
xor
test
ins
dec
ret
mov
xor
mov
sahf
push
pop
jmp
mov
sbb
mov
pusha
adc
or
outs
inc
mov
sbb
aad
adc
jmp
gs
push
adc
int
sub
dec
stos
aam
mov
pop
std
sti
loop
adc
(bad)
in
cdq
mov
inc
inc
push
dec
lods
xor
add
mov
mov
add
jp
sub
and
rcr
idiv
mov
movs
sub
mov
iret
aad
inc
loop
(bad)
mov
and
(bad)
sub
adc
leave
rcr
sub
mov
and
(bad)
iret
cmp
jnp
push
cmp
gs
inc
adc
jno
aaa
stos
xor
push
jg
cmp
push
adc
fmul
xchg
xor
jl
and
nop
daa
xor
xchg
xlat
test
rol
mov
ja
cmp
pop
mov
mov
jmp
stc
jns
jno
mov
cmp
dec
mov
jae
jg
pop
add
dec
cmp
inc
add
jecxz
loopne
adc
add
rcl
xor
pushf
sbb
(bad)
push
(bad)
jge
mov
je
(bad)
fcomp
test
add
in
adc
pusha
mov
cmc
int3
gs
xchg
shl
jnp
jecxz
call
or
mov
arpl
dec
cmp
or
sbb
and
and
fld
add
pop
xchg
in
stos
sub
xor
fmul
fs
shr
xor
(bad)
outs
sub
aas
ror
and
call
xchg
add
sbb
sub
xlat
shl
cmc
or
jb
ins
and
mov
pushw
nop
test
das
shl
push
aas
ret
aaa
int3
repnz
test
push
cmc
imul
mov
jbe
xchg
push
mov
(bad)
je
mov
xchg
loop
aad
pop
xchg
mov
inc
mov
jmp
xor
sbb
in
outs
pop
adc
jne
test
dec
jne
mov
jmp
call
lods
das
je
jbe
or
xchg
xchg
add
les
push
mov
out
mov
and
add
iret
mov
out
fxrstor
jl
adc
dec
call
icebp
test
xor
inc
adc
sbb
cmp
adc
nop
fild
jg
rcr
sahf
aam
xchg
push
(bad)
cmps
sar
sbb
jno
mov
xchg
ret
jmp
mov
mov
imul
xor
fcmovb
test
mov
push
fucom
aam
or
jmp
repnz
jle
adc
and
dec
loop
in
jmp
scas
mov
fidivr
retf
movs
fmulp
dec
jl
cwde
repnz
push
cld
jecxz
pop
rcr
aaa
out
inc
push
adc
fdivp
push
(bad)
xchg
jnp
push
xor
js
push
loope
lods
jmp
cwde
pop
cwde
sti
ins
fild
cld
(bad)
iret
int3
movs
xor
(bad)
stos
nop
cmp
ins
aam
and
inc
mov
cdq
xchg
jae
popf
stos
adc
in
add
enter
mov
mov
sbb
test
dec
adc
jge
(bad)
dec
push
jecxz
aad
push
and
out
je
push
mov
push
cli
add
lock
adc
mov
lods
jge
jg
fs
std
(bad)
leave
and
imul
or
bound
xor
ds
cwde
inc
sahf
push
xor
pusha
cmp
adc
pop
jp
call
lahf
leave
mov
mov
xchg
pop
mov
push
pop
(bad)
pop
push
je
(bad)
hlt
mov
leave
cmp
mov
arpl
aad
repnz
sub
imul
and
test
(bad)
hlt
ja
mov
dec
mov
sbb
or
loope
xlat
cld
not
stos
outs
int3
fbld
ror
iret
imul
out
shl
dec
loope
pop
pop
stos
bound
scas
cmp
pusha
mov
in
call
fwait
fs
dec
fwait
(bad)
(bad)
jne
shl
call
dec
cdq
ss
cmp
add
pusha
jb
dec
data16
shl
sbb
ins
stos
pusha
enter
mov
stos
fs
cmp
push
(bad)
push
jns
leave
or
inc
fnstenv
push
imul
ror
push
mov
xor
movs
jl
inc
(bad)
daa
dec
mov
or
cmp
push
pop
das
inc
lock
wbinvd
lahf
sub
in
les
pop
jo
ffree
sbb
mov
sub
lods
jne
inc
xchg
in
xchg
arpl
ret
loopne
call
mov
xchg
out
and
lock
stos
mov
cld
popf
push
int3
fmulp
sub
out
test
jbe
jno
or
leave
cmp
out
repnz
push
fild
dec
stos
mov
std
add
retf
add
outs
and
dec
imul
pop
and
sbb
adc
jmp
fimul
jmp
test
js
push
(bad)
sbb
adc
sub
push
popf
jmp
jp
push
mov
and
xchg
(bad)
push
dec
and
mov
(bad)
push
cmp
inc
aas
(bad)
mov
pop
and
ins
jb
ror
jg
cld
ffreep
idiv
out
loopne
mov
cmp
std
outs
retf
mov
stos
(bad)
out
out
or
push
cmp
adc
xchg
popf
rcl
call
mov
dec
xchg
movntq
inc
push
test
xor
and
hlt
ss
scas
and
inc
jg
gs
mov
fnstcw
xor
sbb
fwait
out
in
cli
popf
pop
sbb
test
aad
inc
jb
rcl
adc
mov
mov
add
or
and
or
mov
mov
pop
cmp
call
mov
pop
(bad)
dec
test
ins
jmp
(bad)
cmp
add
dec
dec
aad
push
or
neg
outs
inc
mov
clc
jecxz
dec
icebp
int3
jns
jle
xor
ds
repnz
push
stos
adc
arpl
push
fld
cwde
cmp
sbb
pusha
adc
mov
jg
jle
out
imul
fisubr
and
jp
jnp
mov
repz
sub
lock
imul
push
mov
sub
jl
out
fbstp
xchg
mov
in
mov
sahf
cwde
in
jb
sub
pop
lock
daa
rcl
push
daa
push
dec
(bad)
retf
dec
neg
push
mov
jmp
jne
std
imul
stos
sbb
scas
sub
sbb
dec
push
fs
js
jbe
call
mov
pop
(bad)
lock
jo
dec
sar
or
dec
inc
test
sar
lods
setg
(bad)
mov
cmp
rcr
sbb
xchg
sub
sub
cmps
int
test
dec
sbb
jg
cwde
cmp
pop
ret
and
or
mov
mov
cdq
add
repz
push
pop
lock
jle
(bad)
adc
stc
sbb
movs
clc
jbe
mov
mov
jno
cmps
retf
pop
inc
pop
outs
pop
sbb
push
in
jge
jnp
daa
or
mov
loope
xchg
pop
push
dec
sbb
jge
int
popf
aas
jge
ja
lods
xor
lods
pop
pop
pop
aam
mov
lea
dec
push
dec
inc
outs
or
pusha
jge
les
jmp
sbb
aad
dec
leave
(bad)
clc
mov
out
aam
pop
pop
mov
out
xchg
inc
cmp
sub
test
stos
dec
lods
or
cdq
cwde
mov
leave
push
imul
mov
cld
or
mov
sub
sbb
mov
adc
enter
mul
pop
xchg
cmp
add
xor
sub
std
enter
test
ja
enter
jno
je
icebp
js
xor
push
stos
and
retf
xor
movs
jp
jle
sti
dec
repnz
xor
into
(bad)
aaa
dec
xor
adc
xchg
fucomi
jmp
ret
add
fisub
mov
ja
sbb
xor
out
bound
stos
outs
jmp
sub
mov
sub
jo
ret
(bad)
sbb
xchg
lods
loope
sub
mov
mov
dec
cmp
xor
adc
adc
pop
jmp
fild
push
xor
cdq
fwait
adc
or
inc
hlt
add
xor
pop
cmp
hlt
mov
mov
jge
ret
adc
cdq
inc
pop
test
pop
scas
adc
jg
(bad)
loop
xchg
stos
push
lahf
mov
and
fdivp
shr
data16
in
dec
lahf
and
lods
fwait
push
mov
out
xor
jbe
push
pop
cmp
jae
arpl
mov
rcl
jmp
or
(bad)
popf
arpl
aas
adc
pop
aam
jge
dec
lds
into
adc
mov
popa
push
scas
pop
outs
mov
dec
mov
fcmovnbe
into
cmp
dec
mov
pop
pop
mov
push
adc
inc
sbb
pusha
inc
aad
fcmove
cli
and
mov
push
retf
or
retf
jns
mov
sahf
xchg
test
stos
in
mov
mov
and
fbld
pushf
ret
dec
sar
stos
in
rol
pop
lds
cmovne
xchg
jno
adc
push
sbb
aam
mov
neg
call
sub
(bad)
push
jecxz
in
out
jp
xchg
xor
add
int3
pop
fld
mov
push
repnz
cmp
je
imul
jmp
ficomp
sbb
xor
lea
addr16
or
xchg
adc
inc
pop
(bad)
jb
call
or
push
cld
mul
xor
mov
add
in
add
pop
sub
inc
xor
in
cli
inc
fwait
aad
pop
mov
pop
push
cmp
push
jmp
ins
dec
inc
int3
addr16
sub
sub
out
in
xchg
ins
and
xor
mov
(bad)
push
push
jns
(bad)
cmp
test
add
popa
lods
push
(bad)
mov
repz
gs
sub
xchg
push
xor
sub
loope
sar
jmp
movs
jle
aas
ret
pop
jnp
xchg
ret
call
cmp
lds
mov
add
sbb
movs
iret
pop
adc
mov
mov
je
aad
adc
(bad)
call
fcom
test
push
cdq
ins
mov
loope
cli
xor
mov
sbb
mov
and
je
push
data16
push
rol
mov
push
cli
jl
ret
fcmovnbe
jb
inc
pop
mov
enter
jne
iret
(bad)
mov
nop
inc
pushf
nop
jmp
add
jmp
hlt
in
dec
push
lds
jle
rol
sti
repz
es
fisttp
jl
mov
call
mov
lahf
loope
jne
arpl
popf
(bad)
pop
test
jmp
or
jecxz
adc
jmp
xchg
aad
enter
fistp
call
pusha
aad
movs
push
fisub
xor
ss
jnp
cmp
ins
fst
xor
mov
fnstenv
imul
mov
sti
push
jo
push
cmc
or
fwait
addr16
repnz
push
dec
dec
xchg
outs
mov
aaa
ins
std
fisubr
mov
cli
jl
pop
ins
jbe
inc
ret
mov
pop
mov
test
mov
adc
mov
loopne
sub
aas
push
inc
sub
mov
sti
push
jle
gs
iret
mov
scas
jnp
sub
popa
jns
jge
out
repnz
xchg
scas
inc
jb
and
xor
out
shr
daa
(bad)
push
inc
pop
(bad)
imul
xor
test
mov
in
inc
xor
mov
dec
xlat
pop
jp
rol
push
ficomp
jp
lods
lds
(bad)
adc
fxch
imul
mov
inc
(bad)
cmp
pushf
imul
or
in
xor
sub
inc
cmp
mov
movs
arpl
mov
sub
cld
adc
sbb
mov
mov
(bad)
aam
shr
xchg
push
push
repnz
mov
or
in
jl
push
push
call
jbe
or
mov
test
push
add
mov
push
repnz
pushf
adc
add
jno
sti
add
rcl
and
or
test
mov
adc
in
je
and
jl
pop
sub
shr
gs
mov
and
jne
addr16
fcmove
cmp
push
rcl
add
js
cmp
or
push
ds
mov
mov
jecxz
adc
shl
dec
mov
in
shr
out
(bad)
call
cmp
xor
lock
jae
stos
mov
mov
je
hlt
ins
mov
pop
inc
add
cmp
mov
xchg
push
xchg
push
mov
sub
mov
mov
aaa
pop
mov
les
add
out
dec
movs
(bad)
add
call
neg
jecxz
mov
jl
(bad)
or
sub
sbb
xchg
adc
scas
out
mov
dec
and
imul
ror
(bad)
out
inc
sub
or
jo
ss
out
inc
pusha
dec
into
push
add
xor
xchg
adc
cld
jmp
retf
fs
cmp
(bad)
xor
clc
retf
pushf
into
jecxz
outs
shr
add
mov
in
int3
sub
pop
lahf
rol
mov
dec
jae
lods
fs
outs
es
call
stos
add
jmp
push
in
push
or
and
ins
scas
push
inc
mov
cli
pop
in
pop
leave
aas
mov
loope
test
mov
or
push
test
call
ss
mov
xor
cs
aas
xchg
fld
jns
xor
loopne
ss
adc
sahf
jo
iret
lea
scas
or
and
pop
sbb
movs
push
add
or
jmp
add
mov
(bad)
lods
daa
inc
pop
dec
pop
add
fild
or
xchg
jge
push
pop
out
fiadd
xchg
inc
cmp
add
rcl
push
add
clc
mov
gs
mov
mov
stos
gs
repz
pop
cmp
adc
out
out
and
xor
push
outs
cld
lock
jmp
inc
popf
repz
lods
xchg
aas
outs
push
mov
stos
repnz
sbb
test
or
or
inc
pop
push
xchg
sahf
retf
rcr
dec
pusha
sub
cs
shl
fadd
inc
fmul
xor
xchg
or
enter
mov
pop
repnz
mov
push
sti
in
inc
sbb
adc
popa
mov
scas
repz
retf
test
mov
jg
jnp
int3
push
sub
ret
pop
shl
ja
or
aad
mov
push
add
fcomp
fnstcw
adc
cmp
dec
test
sar
xor
cmp
aaa
xchg
xor
mov
inc
mov
leave
icebp
inc
or
sbb
sbb
iret
fcomp
fiadd
inc
(bad)
je
mov
outs
xchg
mov
int3
nop
ds
mov
jbe
or
call
sti
cs
int3
mov
jo
jmp
cmovno
mov
iret
and
or
rcl
mov
int3
sbb
dec
sbb
lods
adc
das
cmp
mov
mov
cmp
(bad)
jg
daa
test
retf
fst
fsubr
neg
mov
je
dec
dec
dec
loop
rcl
movaps
xor
mov
push
in
sub
movs
(bad)
bound
sub
mov
loop
xor
and
push
js
mov
pop
and
test
pop
adc
mov
sub
sti
sbb
lods
mov
mov
push
dec
gs
or
inc
test
int3
dec
test
adc
dec
sbb
sbb
jb
call
jp
xor
bound
aas
push
fisubr
sub
call
loopne
movs
fistp
mov
pushf
cmps
lods
cmc
cvttps2pi
xor
lahf
(bad)
imul
call
fbstp
outs
xchg
mov
sub
imul
aad
outs
aas
pop
into
and
test
or
adc
pop
fldenv
movs
lea
cmp
mov
js
adc
imul
push
mov
dec
in
and
pop
mov
pop
loope
mov
adc
rcr
movs
jecxz
ror
dec
mov
sbb
adc
daa
pusha
adc
outs
enter
xor
mov
stc
fst
sbb
or
adc
cmp
push
outs
jl
arpl
inc
enter
xchg
aaa
pop
sbb
inc
mov
jae
push
inc
fsub
mov
sbb
les
push
sbb
push
cmp
push
int3
inc
nop
xchg
sbb
call
xchg
scas
aas
lds
pop
int
add
std
fsub
inc
repnz
mov
mov
inc
add
stmxcsr
stos
ret
sti
(bad)
mov
into
fadd
nop
mov
dec
cmp
cli
int
mov
outs
add
jo
push
jge
mov
mov
ret
loope
fs
lds
fst
aas
icebp
pop
or
mov
and
add
mov
and
call
jns
call
jbe
xchg
aad
test
jl
cmp
dec
lds
sub
jb
inc
std
xor
or
ja
mov
out
sbb
and
fsubr
pop
mov
ja
call
cmps
(bad)
fld
pop
fcmovu
and
pop
sub
sti
push
aad
aaa
popa
sub
(bad)
in
int3
dec
js
xor
xor
xor
inc
jl
dec
iret
test
fadd
push
das
inc
cmp
retf
adc
jecxz
scas
pop
imul
fsubr
pop
push
jl
xchg
lea
ds
jmp
xchg
jae
jae
out
xchg
push
outs
ins
daa
xchg
or
hlt
aaa
mov
das
call
inc
pop
dec
clc
test
cmp
pop
dec
imul
ror
mov
fcomi
pop
(bad)
sbb
pop
pop
into
clc
jg
adc
jecxz
mov
(bad)
fdivr
or
fdivr
dec
ins
ins
inc
xor
call
jl
ror
lods
inc
and
mov
sti
xchg
xor
sbb
and
dec
mov
push
adc
cmp
pop
mov
jge
fs
pushf
mov
ins
pop
jbe
das
sub
cmp
or
cmps
ret
add
pcmpeqb
xchg
cmc
sub
inc
popa
in
icebp
mov
test
adc
xchg
pushf
jl
addr16
fwait
loope
xchg
push
cmps
fdivr
or
inc
stc
sbb
daa
inc
push
add
add
and
mov
enter
out
lods
inc
xchg
stc
sub
jg
popf
pop
xor
push
xor
int3
sbb
out
fsubr
fstp
into
push
or
add
arpl
outs
sbb
repz
mov
and
ficom
inc
add
repnz
add
ficom
mov
movs
sti
or
sbb
adc
pop
cdq
test
aam
pop
bound
add
cmp
enter
mov
lea
xchg
push
jbe
outs
cmp
jp
add
test
test
test
mov
ins
sub
je
stc
pop
(bad)
mov
loop
push
inc
fadd
or
test
mov
xor
movs
popf
(bad)
xlat
mov
xchg
fnstenv
(bad)
imul
push
aaa
push
lods
mov
jmp
stos
cmp
jo
cwde
bound
jmp
inc
mov
pushf
leave
add
movs
and
in
mov
push
sub
cmp
or
sbb
add
rcr
stc
jmp
(bad)
scas
push
add
mov
pop
pop
sahf
fwait
ret
(bad)
cli
outs
(bad)
and
ins
shr
xchg
push
aas
jae
rcl
call
bound
jno
sub
jmp
jge
adc
dec
cmp
xchg
jns
and
inc
daa
cwde
push
fstp
jmp
scas
add
in
mov
(bad)
push
sub
jg
bound
(bad)
pop
(bad)
sbb
mov
inc
in
jb
and
push
jae
sahf
jnp
adc
idiv
adc
jae
call
cmp
jge
cmp
mov
cmp
jl
retf
inc
ins
pop
xchg
or
fst
icebp
leave
and
fistp
adc
test
jns
cmps
jb
inc
fcmovu
pop
mov
sbb
adc
jg
push
fild
cmp
(bad)
push
xor
repz
into
add
cmp
inc
les
jb
xchg
jl
movs
scas
mov
xchg
lods
mov
test
out
add
xor
mov
loop
aas
js
fwait
adc
retf
mov
or
xor
test
mov
jno
pushf
sbb
lock
das
pop
(bad)
(bad)
mov
je
mov
jl
xchg
(bad)
imul
scas
sub
retf
popa
stos
shl
arpl
(bad)
push
fisubr
xlat
dec
dec
jo
cmp
push
pop
push
test
jae
fstp
xchg
ror
add
hlt
sbb
mov
jle
push
cmp
(bad)
fistp
pop
inc
outs
iret
push
cmps
fild
push
mov
in
cmp
pop
push
xor
dec
sbb
and
leave
jmp
xchg
fiadd
mov
xchg
cmps
sub
jno
xchg
sbb
add
and
movs
lock
or
retf
push
daa
jge
aas
dec
arpl
lahf
xor
mov
add
mov
and
mov
fimul
pop
inc
push
popf
xchg
or
xchg
xchg
pop
adc
mov
aaa
stos
sub
mov
mov
pushf
adc
or
arpl
rcl
pusha
push
int
jmp
jecxz
dec
fucomi
mov
popa
stos
add
int
int
int
push
xor
jecxz
inc
fs
jmp
imul
push
and
pop
mov
sbb
push
stos
add
pop
fcom
xor
lods
xor
mov
shl
loope
jmp
mov
aas
ins
mov
xchg
push
jb
mov
sbb
mov
or
dec
sahf
clc
sahf
daa
test
ja
mov
mov
repnz
(bad)
sahf
jae
dec
pop
jmp
outs
imul
adc
hlt
les
pop
jge
aad
jno
jne
dec
xchg
pop
js
pop
icebp
cdq
xor
bound
fcomp
dec
aas
push
cmp
daa
pop
xchg
je
and
daa
xchg
or
push
mov
lock
leave
add
ja
and
push
js
mov
pop
xchg
mov
pop
out
pop
aam
pop
push
dec
cmps
xor
call
xlat
inc
and
fwait
xchg
repnz
mov
mov
pop
jp
xor
add
mul
dec
sbb
xchg
ror
jle
mov
fsub
std
push
cmp
out
fstp
jge
mov
sub
mov
mov
xchg
and
push
inc
inc
or
and
sbb
pop
mov
iret
push
mov
sbb
inc
cld
inc
es
add
push
mov
jecxz
int
mov
lds
popf
jno
out
cmp
outs
sbb
adc
in
xor
push
call
stos
nop
retf
lahf
cmp
cmp
mov
cmp
cmp
dec
mov
push
mov
mov
(bad)
and
cs
test
inc
cmp
retf
out
pandn
or
shl
xor
sahf
jb
pop
cdq
pop
add
jg
push
jp
xchg
pop
fsub
jecxz
frstor
push
mov
gs
sub
xor
aas
(bad)
(bad)
(bad)
xchg
fisttp
call
ror
mov
dec
arpl
addr16
out
pushf
jb
adc
test
fnstcw
lods
xchg
popa
sbb
in
cwde
xor
push
fdivr
in
inc
mov
sbb
enter
sbb
mov
inc
fimul
mov
cmps
jg
mov
xor
xchg
pop
xchg
(bad)
cs
fisttp
and
into
cmp
lds
pop
ror
jo
lea
cld
fxch
enter
cmp
popa
adc
bound
sbb
repnz
out
test
mov
std
add
outs
outs
inc
pop
iret
ins
mov
xchg
cmc
(bad)
in
loopne
adc
mov
mov
jmp
mov
xchg
mov
cwde
mov
es
scas
adc
and
sub
dec
pusha
movs
jl
inc
out
retf
push
push
jecxz
mov
jecxz
push
jae
and
arpl
xor
data16
jo
ins
cmp
sub
ss
inc
movs
jmp
jo
adc
dec
ins
add
mov
xchg
pop
sbb
cld
lods
pop
sub
loopne
rcr
into
arpl
in
or
test
int
xor
mov
mov
xor
cmp
shl
js
add
push
fisttp
jnp
stc
add
pop
mov
and
mov
push
mov
inc
inc
outs
cdq
pop
cli
icebp
push
les
stos
or
inc
dec
shr
repnz
or
fsub
inc
out
inc
std
push
call
mov
mov
adc
mov
xor
or
xlat
mov
jns
sti
push
sti
mov
cli
sub
cwde
mov
rol
jecxz
inc
jae
out
rcl
mov
shl
sbb
les
cmp
xchg
cld
mov
enter
sub
(bad)
div
push
cwde
idiv
sub
fadd
push
mov
int
ins
je
int3
jns
dec
push
pusha
cmova
mov
jp
sbb
(bad)
jg
pop
adc
(bad)
movs
mov
test
imul
cs
rol
shl
jl
imul
inc
cmp
or
xchg
fwait
inc
stos
cld
hlt
pop
sub
mov
sahf
jnp
std
retf
popf
xor
jne
mov
pop
cmp
leave
jno
pop
mov
xchg
or
shr
jl
in
jno
pop
dec
jmp
addr16
das
jmp
loop
mov
adc
mov
adc
jle
aam
or
fdivp
pop
xor
aam
cmps
stos
sub
sbb
arpl
fst
cmp
add
mov
dec
inc
pop
test
es
pop
js
mov
inc
(bad)
outs
(bad)
jnp
stc
pop
(bad)
out
jl
fld
cs
inc
sub
loope
arpl
sub
fmul
in
in
lea
mov
jne
adc
cwde
dec
jecxz
inc
ins
(bad)
cli
mov
push
and
sahf
clc
jb
mov
aad
(bad)
lods
or
hlt
imul
mov
inc
cld
mov
mov
lea
mov
jnp
mov
sti
mov
lods
xlat
cmp
nop
enter
push
push
mov
add
test
in
mov
push
dec
enter
mov
inc
aaa
in
fwait
sub
push
movs
cs
std
clc
lds
cli
xchg
dec
test
or
cmp
push
ss
jl
call
xlat
or
mov
dec
xchg
cdq
sub
mov
or
push
ds
loopne
test
and
xor
cmps
bound
lea
push
mov
popf
adc
retf
in
sub
(bad)
nop
fucom
inc
cwde
nop
(bad)
ret
in
and
cdq
ins
mov
inc
mov
outs
pop
and
in
push
xchg
(bad)
xor
xor
mov
pcmpeqw
out
out
sahf
mov
shr
repnz
bnd
cmp
mov
fadd
lock
mov
in
(bad)
cmp
jl
cmp
mov
sub
push
cmovo
push
sti
jnp
loopne
xor
inc
cmp
pop
mov
stos
mov
fwait
mov
cmp
(bad)
mov
(bad)
and
mov
xchg
mov
inc
xchg
sbb
jns
cmp
call
xlat
fst
rcr
dec
rol
and
ins
icebp
sub
mov
outs
jbe
push
je
mov
popf
or
data16
mov
xchg
cdq
cs
into
fisttp
call
or
in
jg
inc
jae
sub
ss
sub
dec
lea
and
push
or
cmp
and
push
mov
call
push
vmovaps
add
fidivr
xchg
fldcw
xchg
jg
icebp
sbb
push
std
add
push
pop
and
dec
iret
aam
cmp
xchg
cmc
adc
jo
jmp
push
shr
inc
xor
rcl
jmp
fs
push
enter
sub
jmp
mov
lods
mov
clc
jmp
pop
or
icebp
fsub
xor
inc
sbb
mov
push
mov
inc
cmp
ins
test
fidivr
pop
loop
xor
daa
mov
pop
lds
pop
stc
mov
cdq
cmp
int3
push
pop
adc
adc
dec
outs
push
bound
test
fsub
hlt
aas
fwait
js
(bad)
sub
jae
movs
xchg
int3
div
push
cli
sbb
sub
iret
jmp
pop
lea
sbb
push
sbb
sti
and
pop
test
mov
shl
mov
ret
pop
push
mov
cld
data16
int
push
inc
sti
out
call
cs
retf
jle
movs
push
dec
fistp
call
std
pop
ins
jl
or
les
jne
and
or
xchg
and
cmp
mov
lock
nop
imul
and
ret
xor
push
sbb
or
mov
into
retf
fnstcw
pop
cmps
sbb
mov
mov
adc
repnz
mov
mov
movs
adc
test
rol
ret
in
ds
int
stos
jl
mov
test
jnp
lds
sub
push
xchg
inc
jge
scas
push
jl
nop
add
xchg
dec
push
add
pusha
and
in
call
push
sbb
je
xchg
adc
pop
(bad)
fsub
mov
mov
jecxz
loop
and
cmps
ret
mov
scas
cld
add
pushf
jecxz
inc
(bad)
mov
xlat
xchg
fs
sbb
xchg
dec
fmul
xchg
inc
fld
(bad)
pop
push
retf
rcr
pop
adc
cmps
fnstenv
call
push
mov
imul
sahf
jnp
lock
jne
pop
push
daa
adc
mov
adc
lea
cmp
adc
cmp
popf
mov
sahf
jmp
cmp
out
(bad)
xchg
mov
push
test
ficom
sbb
aas
movs
inc
scas
inc
movs
cmp
add
mov
test
push
pushf
retf
mov
imul
(bad)
rol
dec
mov
push
inc
out
stc
jnp
ss
add
jnp
clc
(bad)
into
std
jb
je
mov
cli
arpl
test
cmp
jmp
int3
out
mov
mov
or
div
inc
push
jmp
push
out
xchg
leave
loope
rcr
cmp
popa
lds
cmp
shl
lds
jo
mov
fst
cwde
mov
data16
imul
inc
push
sub
pushf
and
(bad)
mov
sub
mov
xchg
and
arpl
push
scas
scas
xor
mov
pop
icebp
push
ss
ins
(bad)
arpl
(bad)
(bad)
clc
cmp
fist
ins
pop
mov
rol
or
xor
out
sbb
test
mov
fld
fsubr
jp
in
dec
int3
pop
or
aaa
xor
xor
int3
inc
xlat
jge
sar
pop
sahf
(bad)
jmp
lods
dec
test
mov
mov
mov
lods
sbb
pusha
jge
pop
retf
(bad)
enter
ret
dec
sub
push
aaa
iret
aaa
(bad)
sbb
push
fbstp
imul
popa
mov
repz
and
adc
retf
ins
mov
mov
rcl
ss
xchg
(bad)
out
push
jnp
cmc
mov
test
ja
mov
fstp
jo
dec
lock
ror
in
outs
lods
mov
jmp
jp
jl
shr
xchg
push
jmp
xor
pop
push
add
add
cmp
or
test
mov
mov
inc
sti
ror
inc
dec
add
or
ficomp
rcl
adc
in
push
push
inc
sbb
popf
jg
sub
(bad)
loop
push
sub
faddp
adc
adc
in
pop
sar
mov
adc
div
and
(bad)
cmp
xchg
or
imul
leave
cmp
mov
add
adc
sub
stc
push
call
inc
mov
mov
shl
mov
add
mov
pop
pusha
arpl
imul
loope
mov
jge
rcr
dec
(bad)
scas
lods
ja
mov
mov
daa
sub
mov
fcomp
dec
sbb
push
adc
(bad)
cld
jmp
pop
fdiv
arpl
fwait
sub
repnz
cmp
jmp
pop
inc
mov
popa
dec
(bad)
out
xor
les
push
scas
xor
inc
inc
mov
inc
out
iret
mov
xchg
lds
add
test
daa
xchg
call
jne
aad
or
call
or
dec
(bad)
(bad)
pop
and
xchg
mov
xor
xchg
push
mov
jae
(bad)
out
jae
sbb
jbe
jae
dec
sbb
sbb
fld
sub
mov
lds
cmp
mov
cmp
pop
xor
push
fcomp
(bad)
xor
add
jns
lock
stc
(bad)
and
repnz
(bad)
cmp
xor
je
pushf
or
fild
loope
cli
lea
mov
or
add
data16
jge
add
outs
mov
or
push
shl
scas
cmp
gs
inc
into
int3
outs
(bad)
retf
pop
cld
ss
xlat
and
mov
mov
stc
xor
pop
retf
fs
call
mov
shl
mov
add
(bad)
adc
imul
das
mov
daa
das
sbb
jl
rcr
sbb
cmps
mov
mov
ins
mov
adc
push
cmp
fidiv
add
xlat
push
push
cmc
sub
add
fidivr
imul
js
mov
cmp
mov
sti
xchg
cmc
fistp
jecxz
aad
cmp
gs
neg
shl
jb
xchg
xchg
cmp
pop
dec
mov
inc
and
div
adc
(bad)
jae
mov
pusha
fistp
icebp
adc
xchg
jns
add
jg
cmc
push
jecxz
icebp
push
sbb
in
xor
jle
or
or
mov
jmp
das
sub
fst
add
xor
cmp
jg
push
(bad)
mov
mov
in
std
mov
aaa
inc
cli
mov
ja
cs
push
or
and
out
jecxz
push
mov
mov
jle
jb
fwait
xor
and
xor
add
mov
lock
fimul
sub
aas
ud1
cmps
dec
test
xor
cmps
and
jge
xor
sbb
out
dec
inc
xchg
in
mov
aaa
push
add
sbb
aaa
dec
inc
add
lds
add
fwait
enter
xor
and
sbb
inc
fnstsw
cwde
inc
movs
out
retf
mov
mov
lock
inc
arpl
(bad)
xor
and
dec
aas
out
(bad)
test
mov
push
loop
add
mov
jmp
fmul
jo
iret
rcr
int
dec
mov
bound
btr
pop
movs
int3
push
push
xor
lahf
cmp
mov
push
out
imul
dec
sbb
xchg
cwde
adc
repnz
push
xor
je
cmp
jnp
lea
jns
or
inc
shr
add
pop
xor
and
imul
sbb
test
pop
and
test
in
pop
stos
push
mov
jl
jmp
add
sbb
push
cdq
and
rol
mov
cmp
sti
add
test
sahf
or
fstp
pop
cwde
in
pop
movs
test
inc
xchg
out
and
lea
mov
push
inc
movs
mov
and
and
test
sub
mov
push
lods
fwait
jae
xchg
push
xchg
shl
jne
test
ins
mov
fdiv
jo
retf
retf
mov
shl
jmp
sbb
jno
out
fs
push
lods
shl
retf
shl
cmp
jo
jae
ins
xor
aad
je
movs
jmp
inc
nop
mov
in
mov
jbe
pop
nop
call
dec
push
xchg
pop
ror
mov
jne
imul
hlt
sbb
clc
ins
aas
into
sub
pop
stc
cmps
xchg
push
bound
int
cwde
xchg
pop
jecxz
sbb
jnp
fst
push
mov
sub
or
jge
xor
xchg
sti
push
jmp
push
outs
fcomp
mov
inc
xor
mov
xor
and
sub
xchg
(bad)
jg
inc
mov
xchg
lods
fsub
dec
jge
add
fiadd
mov
inc
test
iret
sub
cmp
push
and
add
inc
cmp
jb
jnp
cmps
repz
and
shl
xchg
adc
mov
sahf
pop
mov
xchg
(bad)
lock
ds
lock
xchg
and
rol
pop
add
add
add
mov
loop
mov
sub
ret
xor
push
pop
mov
inc
mov
shr
fs
mov
repnz
ror
fs
aas
test
xor
jl
push
xor
aas
mov
xchg
jge
je
pop
inc
push
dec
pop
fnstenv
or
addr16
jnp
push
sub
fmul
test
sub
xchg
pop
add
jb
imul
inc
es
mov
ins
outs
and
js
dec
pop
(bad)
sbb
dec
push
dec
aaa
cmc
(bad)
mov
jmp
fwait
ret
das
push
dec
sub
mov
ficom
cmc
cli
cld
inc
pop
jb
lahf
clc
pusha
pop
mov
mov
(bad)
mov
fimul
popa
loop
push
mov
add
jbe
pop
push
jns
sar
pop
adc
xchg
push
vrcpss
(bad)
dec
inc
neg
mov
test
xor
icebp
dec
mov
popa
sti
ror
(bad)
(bad)
cmp
fucomip
je
adc
push
xchg
gs
or
pop
jp
aam
bound
pushf
inc
popa
pushf
pop
fstp
and
ss
fnstenv
in
movs
mov
pop
je
adc
sbb
cmp
mov
or
std
add
fst
ror
int3
sbb
dec
lea
push
stc
ds
out
mov
js
shr
js
enter
adc
pop
and
pop
(bad)
in
in
sub
pop
fwait
push
dec
xchg
imul
dec
dec
jb
jmp
cmps
xchg
push
sbb
stos
jnp
jecxz
inc
jbe
outs
pusha
and
sub
pushf
adc
pop
xchg
fiadd
sbb
test
inc
cmc
mov
push
(bad)
fldenv
mov
mov
push
xor
sbb
jae
xchg
pushf
pop
xor
push
lods
xchg
scas
call
inc
xchg
xchg
sub
lock
stc
cmp
fsub
arpl
out
inc
cvtps2pi
push
jl
bound
call
mov
dec
in
lock
xor
ja
sub
in
stos
pop
mov
add
(bad)
aam
cs
and
cli
adc
jmp
add
push
stc
mov
popa
push
pushf
xor
mov
pop
push
jp
ficomp
rcr
sbb
ret
inc
ret
fsub
mov
je
addr16
dec
daa
adc
movlps
stos
jmp
pop
inc
iret
inc
loopne
mov
pop
xchg
sbb
hlt
lods
movs
ds
lods
xchg
clc
add
cmp
xchg
out
outs
arpl
pop
xchg
xchg
mov
xchg
ins
imul
sub
ins
into
sub
mov
mov
jo
sub
(bad)
pop
cmp
das
std
inc
outs
cmp
sub
aam
pop
xchg
mov
dec
(bad)
inc
retf
enter
rcl
jmp
repnz
pop
ret
imul
inc
pop
gs
mov
cli
pop
loop
add
xchg
fldcw
jno
cs
retf
scas
sub
jmp
retf
push
fidivr
inc
jne
and
scas
js
cmp
pop
cmp
jno
add
cmp
jbe
lds
fmul
xchg
xchg
loopne
adc
adc
mov
jb
mov
push
std
arpl
mov
adc
out
mov
in
jae
dec
retf
jno
sbb
inc
sub
movs
pop
cld
adc
sub
xchg
and
(bad)
pop
inc
inc
loop
ds
loope
jecxz
test
adc
add
xor
cmp
cmp
sbb
leave
push
cmp
mov
mov
pop
xchg
xor
push
mov
mov
test
adc
and
(bad)
shr
icebp
(bad)
and
mov
mov
mov
push
push
mov
xchg
sub
fisubr
lfs
fs
fdivr
ds
sbb
cmc
jle
fidivr
jmp
sub
sbb
dec
aam
jge
imul
sbb
lahf
mov
(bad)
mov
or
push
xchg
and
clc
das
and
jge
iret
rol
ror
pop
rcr
fsubrp
cs
mov
mov
loop
or
int3
(bad)
mov
and
dec
mov
mov
jb
xlat
mov
fwait
push
mov
scas
and
mov
pop
leave
adc
je
mov
pop
add
test
les
std
dec
dec
xchg
call
mov
sbb
mov
push
push
sub
rol
fsub
sar
rcr
mov
ins
xchg
cmps
lds
xchg
lea
(bad)
aad
loopne
add
lea
fwait
sbb
retf
lods
cmp
sub
cs
je
imul
inc
cmc
int
icebp
pop
xor
das
fcomip
scas
jmp
xchg
sbb
pushf
jmp
popf
xor
add
sbb
out
(bad)
inc
xchg
popf
test
mov
sub
jmp
cmp
test
shl
loopne
add
cmp
int
xchg
inc
out
(bad)
jmp
cmps
out
stos
or
int
inc
inc
and
rcl
hlt
xchg
pop
out
jp
dec
cli
sub
and
push
adc
lock
add
mov
or
xor
pusha
pushf
jmp
mov
mov
add
push
test
mov
std
adc
pop
mov
fst
mov
loop
enter
loop
jnp
or
inc
retf
ss
sbb
pop
sbb
cmp
xor
jp
cmp
push
cdq
pop
(bad)
mov
enter
sub
arpl
cmp
mov
adc
shr
pop
add
cmp
addr16
sub
push
daa
call
pushf
jne
and
sub
xor
fbld
aas
and
dec
popf
fcmovu
mov
mov
mov
pop
sbb
xchg
push
inc
cmp
int3
xchg
call
add
jecxz
das
mov
movs
push
daa
or
jl
jne
dec
loop
jne
loope
aaa
xor
push
or
jmp
pushf
mov
mov
xchg
pop
lods
shl
mov
mov
gs
nop
rol
stos
rcr
xchg
xchg
outs
xor
pop
push
cmps
sub
lods
or
neg
inc
and
add
rcr
je
or
inc
repz
fcomp
push
dec
out
xchg
aam
xchg
cmps
mov
outs
dec
dec
adc
mov
aad
daa
mov
jb
jg
es
out
push
(bad)
js
lods
(bad)
mov
mov
push
sbb
fwait
retf
dec
mov
pop
retf
or
movs
ror
in
scas
fistp
sub
test
ja
fisttp
dec
mov
mov
lods
or
in
sahf
test
cmp
mov
ret
cmp
clc
test
add
xchg
lea
add
imul
mov
imul
pop
jg
pop
xchg
adc
push
dec
scas
call
ja
movs
loopne
pop
movs
or
test
xchg
mov
ins
mov
mov
cmc
xor
xchg
or
jg
ins
fadd
mov
add
push
movs
loopne
mov
jmp
outs
ret
mov
cs
es
icebp
fisub
stos
scas
test
ja
push
adc
mov
fst
(bad)
(bad)
pop
(bad)
test
pop
call
mov
enter
adc
cmp
push
mov
sbb
dec
sbb
xor
popf
push
sub
mov
lods
jmp
in
xchg
sub
jmp
sahf
xor
test
add
data16
xchg
or
and
in
shl
jl
mov
into
jbe
hlt
push
dec
mov
mov
leave
xchg
sar
mov
or
sahf
xchg
fucomi
icebp
cmp
dec
ficomp
adc
ror
iret
adc
adc
push
and
inc
ja
inc
aas
ins
xchg
push
fild
inc
pop
mov
out
or
(bad)
push
inc
stos
cmp
js
mov
(bad)
repnz
jns
push
xor
pop
pop
push
adc
mov
adc
jmp
call
mul
je
movs
out
test
out
mov
mov
popf
pop
mov
pop
into
jmp
addr16
aaa
arpl
sbb
dec
hlt
xchg
cmps
xor
int3
xchg
movs
sbb
inc
cmp
xchg
pop
adc
dec
ins
gs
shl
xlat
arpl
dec
cwde
xchg
mov
ret
shl
aad
xchg
push
movs
lea
jmp
mov
inc
je
sahf
cmp
pop
xchg
mov
fstp
pusha
or
and
sub
movs
pop
xchg
(bad)
jae
mov
ja
fwait
sbb
xor
dec
int3
pop
inc
sub
(bad)
jae
and
mov
inc
sub
aam
pop
xchg
and
push
sub
jg
mov
call
xchg
cmp
data16
and
mov
das
psrlw
push
repnz
or
push
push
lods
xchg
xor
pop
mov
imul
pop
retf
cmp
cmc
fdivr
popa
fisub
sti
xor
xor
add
std
scas
scas
jnp
lahf
push
mov
and
push
adc
sbb
cmps
mov
pop
xchg
(bad)
fadd
sbb
cmps
pop
daa
mov
adc
xchg
(bad)
stc
pop
cwde
loop
(bad)
jno
adc
rcl
imul
movs
jmp
jmp
dec
js
sub
inc
div
shl
adc
push
xchg
lea
inc
or
cmp
xor
jmp
es
push
lds
cmps
mov
out
jge
shl
jg
dec
adc
adc
out
sbb
std
cli
cmp
jmp
xchg
mov
out
cld
ss
inc
sub
mov
repnz
lea
call
pop
mov
ret
rcr
jno
xchg
pop
repnz
mov
out
dec
out
call
ret
(bad)
shl
or
or
aad
shl
jmp
lahf
leave
cmovle
dec
or
shl
cmp
repnz
adc
repz
sub
ret
fdiv
ss
jg
mov
inc
sub
shl
pusha
mov
(bad)
sahf
mov
or
icebp
push
and
aam
retf
test
pop
test
xchg
pop
movs
pop
jg
fs
loop
mov
xor
sbb
push
jns
aaa
pop
xchg
ficomp
iret
jne
js
in
into
(bad)
sbb
xchg
outs
test
xchg
mov
out
dec
ins
out
jecxz
(bad)
and
gs
push
inc
or
dec
xchg
in
retf
push
push
add
in
(bad)
in
ins
xor
pop
hlt
in
popa
arpl
mov
mov
cmp
inc
cs
(bad)
jnp
mov
iret
jle
hlt
gs
add
push
mov
dec
jno
test
(bad)
mov
lds
mov
adc
sbb
es
add
fisttp
pop
inc
ds
gs
mov
mov
and
cs
cmp
into
loopne
mov
pop
jo
push
retf
xor
adc
and
xor
imul
adc
push
push
aaa
push
xor
and
out
push
adc
jl
mov
or
jle
into
push
mov
movs
hlt
(bad)
sub
push
out
das
leave
stos
popa
aas
ds
lds
jp
inc
test
enter
daa
(bad)
repz
push
mov
lahf
std
adc
push
xchg
push
xlat
arpl
push
gs
or
fsub
and
dec
leave
dec
fwait
mov
adc
(bad)
mov
push
xor
xchg
adc
cmp
cs
sbb
pop
dec
mov
xchg
add
adc
xlat
retf
das
inc
jnp
sbb
add
jmp
and
jno
push
call
imul
popa
nop
xchg
pop
mov
es
rcr
in
std
mov
jmp
sti
shr
mov
mov
jo
out
xchg
add
es
add
xchg
cwde
xor
mov
adc
mov
push
(bad)
xor
cmp
(bad)
rcr
cmp
icebp
push
add
test
in
scas
push
jno
push
add
(bad)
fld
lods
bound
into
xchg
pop
xchg
xor
loope
or
in
inc
scas
adc
push
scas
pushf
inc
call
imul
inc
mov
mov
ror
push
push
jge
hlt
call
cmps
sar
fld
leave
lea
ror
mov
inc
test
cmp
mov
inc
push
dec
push
or
or
dec
in
sub
pusha
sar
mov
inc
adc
cmps
ror
jne
mov
je
cmps
ja
shl
push
aad
aad
hlt
cdq
test
fnstsw
dec
das
repz
jno
push
pop
inc
and
xor
xchg
out
retf
sbb
add
inc
xchg
add
loopne
xchg
mov
iret
xlat
es
cmp
shl
test
mov
rcr
gs
cs
or
daa
inc
int3
arpl
leave
out
and
pop
(bad)
pop
out
or
call
mov
sti
xchg
push
je
push
sti
outs
test
int3
shl
adc
popf
mov
cmp
xor
or
xchg
pusha
test
mov
gs
add
push
sysret
and
iret
in
dec
add
add
pop
jnp
cmp
popa
aas
fist
and
lock
in
out
fwait
data16
mov
or
push
sar
jle
gs
rcr
aas
mov
pop
mov
mov
mov
xor
aad
stos
gs
or
jns
jno
cmp
pop
fist
ret
add
push
sub
mov
cmc
ret
mov
out
xor
clc
add
out
mov
stos
cmp
call
jno
add
or
pop
mov
and
mov
mov
cmp
inc
mov
dec
je
push
adc
push
push
dec
icebp
sub
in
xchg
ret
add
mov
inc
xor
mov
fsubr
inc
mov
xor
aaa
adc
ja
adc
mov
cld
or
mov
jae
or
stos
mov
push
ret
pusha
das
pop
arpl
hlt
xor
jmp
or
and
cli
or
adc
lahf
cmp
xor
add
pop
push
add
repnz
add
clc
sub
mov
es
mov
pop
rol
xchg
sti
test
pop
jg
retf
loope
mov
jns
push
mov
or
push
in
fild
aaa
nop
out
call
aas
xchg
ret
into
dec
repnz
xor
outs
in
mov
pop
bound
test
xor
imul
(bad)
imul
or
adc
inc
jp
int3
sub
jb
xchg
pop
call
dec
call
push
xor
das
fstp
push
gs
adc
mov
jnp
cdq
into
outs
push
cli
xchg
retf
retf
iret
jbe
sub
xchg
push
add
fbld
mov
and
mov
das
cmp
test
and
cmp
mov
jle
cmp
xor
add
mov
push
sub
arpl
inc
aaa
pop
cmp
xchg
push
mov
push
ret
jl
outs
daa
add
out
add
xchg
retf
iret
sbb
xor
test
push
call
pop
and
aad
(bad)
in
out
and
mov
fs
push
cmp
dec
in
ror
cmps
(bad)
jp
icebp
or
cmps
(bad)
or
dec
aad
movs
sbb
cs
cmp
mov
mov
std
in
push
sub
mov
rcl
inc
jns
enter
test
xor
mov
adc
scas
and
in
arpl
mov
mov
(bad)
cmps
or
dec
in
add
fmul
sti
fistp
test
test
xchg
dec
rol
mov
jae
lea
mov
inc
mov
movs
jb
mov
and
adc
jp
mov
adc
clc
gs
lods
clc
dec
cmp
sub
sbb
mov
sub
jae
jge
and
out
xchg
mov
sbb
dec
sbb
sub
adc
add
sub
pop
popf
in
(bad)
xor
mov
or
movs
xor
sbb
mov
call
push
imul
ins
inc
out
test
add
sbb
stos
lods
daa
and
mov
adc
clc
xlat
cli
fldenv
lds
mov
sti
imul
push
test
and
cmps
jns
or
jne
jecxz
push
aas
fdivr
test
sub
aaa
imul
xor
mov
aam
add
jns
cld
fist
cmp
mov
xor
outs
mov
jnp
xchg
(bad)
adc
push
stos
repz
sbb
movs
data16
sahf
jmp
(bad)
inc
cmp
add
cli
fnstcw
jge
cmps
dec
or
das
pop
push
aad
jne
sahf
or
jb
clc
je
jmp
push
xchg
cld
push
jle
idiv
test
out
out
cmp
and
inc
push
adc
mov
dec
push
or
xchg
mov
adc
xor
cli
push
loope
adc
nop
or
pop
scas
mov
out
sar
cmp
jae
mov
in
push
addr16
cmc
add
and
dec
icebp
push
inc
aaa
shr
sub
pop
adc
and
jle
jmp
push
xor
ds
push
and
jb
adc
arpl
nop
mov
pop
and
clc
mov
test
sub
test
jo
jmp
stos
or
mov
cmp
jae
sar
or
mov
ss
sti
xor
pop
les
xchg
mov
setnp
fwait
imul
fmul
gs
scas
pop
sub
mov
cmp
pop
stos
mov
ret
pop
push
push
mov
add
fistp
pushf
or
inc
outs
icebp
loopne
sbb
xchg
pop
addr16
ins
dec
fnstenv
out
pushf
lds
hlt
pop
(bad)
std
repnz
movaps
fild
xchg
pop
adc
in
lahf
pusha
add
(bad)
out
js
sahf
pop
inc
(bad)
int3
jg
mov
repz
mov
outs
xchg
dec
(bad)
lods
lds
fidivr
xor
aam
cmp
lds
leave
and
sub
imul
push
cmp
cmovg
cmps
iret
xor
push
pop
(bad)
adc
jne
stc
and
mov
mov
test
kaddb
mov
aaa
xor
movs
sub
cmp
xor
retf
in
adc
xchg
shr
cld
pop
dec
mov
push
push
mov
retf
dec
movs
mov
gs
je
ror
mov
jnp
adc
ja
mov
jle
out
or
jle
pop
add
outs
enter
or
push
hlt
test
icebp
xor
scas
in
(bad)
dec
add
adc
cld
pop
mov
push
push
xchg
(bad)
movs
out
out
mov
mov
rcr
loopne
lods
and
rcl
mov
push
sub
mov
mov
sahf
mov
or
rol
jge
and
mov
adc
cmps
enter
jl
lods
mov
popf
add
fild
push
imul
test
(bad)
jno
or
bound
dec
fisttp
mov
ins
mov
or
push
fcomi
push
fcom
leave
pop
inc
and
mov
jb
das
ds
dec
scas
imul
mov
xchg
test
inc
add
cwde
lods
push
jge
mov
xor
adc
int3
sbb
jb
push
adc
jecxz
lock
push
arpl
push
(bad)
xor
pop
ins
mov
loopne
jns
xor
or
bound
popf
out
mov
push
jg
std
fnsave
imul
scas
les
xchg
retf
(bad)
das
mov
scas
inc
push
xor
pop
cmc
cmps
test
ret
sbb
ja
pop
std
jb
push
cwde
push
xchg
scas
inc
in
clc
cdq
and
jecxz
fwait
les
pop
outs
ins
mov
mov
cmc
out
xor
out
das
out
cli
push
push
loop
add
cmc
sub
test
mov
push
mov
sbb
and
enter
inc
add
sbb
or
add
scas
adc
sar
push
cmc
mov
or
mov
lods
lock
cmps
push
xchg
pop
aaa
adc
or
rcl
xor
push
mov
nop
fs
push
(bad)
cmp
test
xor
in
and
dec
dec
ret
xor
int
jne
inc
jg
ss
and
xchg
fnstcw
sbb
fistp
fadd
call
lea
shr
in
div
lds
mov
or
sbb
xchg
jae
repz
xchg
jmp
test
test
inc
pop
mov
jno
out
outs
push
outs
retf
scas
sub
pop
into
pop
fcom
mov
scas
out
out
arpl
aad
xor
loope
call
jmp
jae
xchg
cli
sbb
jl
fld
jnp
out
int3
dec
and
sahf
fwait
loop
into
test
pop
xlat
out
fnstsw
and
xor
inc
mov
shl
lods
xor
jne
cmps
out
enter
or
movs
int3
and
out
mov
fiadd
ja
imul
xchg
sub
sub
add
pop
enter
aaa
(bad)
frstor
adc
sahf
xchg
(bad)
and
rcl
(bad)
outs
mov
adc
icebp
inc
retf
add
call
pop
and
push
ins
dec
in
dec
mov
ror
push
mov
cmp
sbb
icebp
rcl
outs
stos
std
(bad)
push
aaa
pop
movs
mov
fbstp
mov
(bad)
(bad)
cmp
push
or
ret
(bad)
xchg
cdq
jo
push
cld
sbb
sti
mov
pushf
loop
stos
jecxz
jno
mov
imul
jl
lahf
xor
jl
retf
push
pusha
pusha
test
in
and
pop
jmp
mov
in
loopne
sbb
push
(bad)
ss
ss
and
push
push
mov
movs
add
xor
push
sub
rcr
adc
xor
gs
xor
(bad)
mov
mov
(bad)
iret
inc
test
lahf
jnp
fwait
fwait
test
pop
call
outs
mov
mov
or
je
sub
cli
call
pop
data16
mov
ins
pop
into
adc
inc
xchg
mov
inc
fisubr
outs
jl
ds
dec
mov
daa
pop
out
sahf
or
outs
inc
shl
fs
inc
daa
iret
push
movs
xchg
xor
adc
mov
inc
dec
adc
sbb
push
es
inc
loope
pusha
mov
test
mov
arpl
sar
pop
ds
pop
stc
mov
pop
mul
push
test
rcr
push
pop
jmp
ins
xchg
pop
call
inc
or
jns
rcl
fwait
cmp
sbb
xor
push
jmp
(bad)
cmc
mov
hlt
loopne
int3
ret
(bad)
cwde
dec
and
sbb
xor
mov
push
pusha
lds
adc
xor
mov
icebp
sbb
sbb
sbb
and
aas
push
shr
(bad)
cwde
cmp
popf
aad
jecxz
or
inc
pop
push
test
out
cs
pop
mov
daa
or
push
out
cmps
in
dec
pop
jnp
dec
ret
fdivr
bound
cmp
bound
pop
out
xchg
stos
mov
jb
stc
unpckhps
outs
add
cmp
mov
mov
les
mov
mov
pop
push
fisubr
pushf
cmp
bound
add
outs
push
mov
mov
mov
leave
add
loop
xchg
mov
push
les
fidivr
sbb
mov
adc
inc
int3
int
int
ins
arpl
repnz
cmp
js
fwait
gs
das
gs
jnp
mov
push
fidivr
mov
(bad)
icebp
mov
push
sub
or
in
inc
ror
test
scas
push
and
or
bound
pop
sbb
or
sub
icebp
sbb
push
(bad)
and
jle
gs
ret
xchg
cmp
mov
cmp
cmp
fiadd
add
xor
scas
idiv
repz
push
fstp
movs
stc
add
cmp
(bad)
sahf
xchg
imul
xor
xchg
int
jno
fsubr
stos
xchg
imul
sub
retf
adc
pop
jecxz
jmp
cli
stos
and
std
adc
or
stc
int3
imul
xlat
pop
mov
ret
shl
leave
pop
mov
xchg
cli
push
fcomp
inc
mov
sub
jle
dec
in
mov
lods
inc
loope
jl
dec
fcmove
call
cmp
push
fs
mov
stos
or
enter
fidiv
dec
cmp
and
idiv
xchg
retf
sub
or
mov
inc
(bad)
mov
test
inc
jne
jnp
pop
(bad)
rol
outs
popa
stos
add
mov
lahf
mov
inc
mov
push
adc
pop
xor
add
cmp
xor
out
call
loopne
dec
and
push
jne
mov
rcr
leave
inc
pop
adc
sub
inc
(bad)
(bad)
das
xchg
call
and
test
popa
or
cmp
pop
fwait
cmp
add
adc
fmulp
fmul
add
cmp
mov
dec
fidiv
fimul
cli
adc
adc
(bad)
mov
test
cmc
gs
outs
push
cmp
xor
in
gs
aas
pusha
jmp
ins
push
ss
fst
push
jb
and
aaa
mov
adc
in
cld
mov
shr
mov
ret
in
scas
cmp
pop
mov
fist
stos
dec
push
mov
xchg
add
sbb
rcl
push
iret
aad
mov
pop
jmp
mov
in
ins
aaa
sbb
(bad)
sub
fsubr
or
fsubr
repz
mov
inc
enter
add
inc
mov
dec
pushf
inc
jg
popa
xchg
daa
adc
xchg
data16
push
push
inc
jbe
(bad)
add
mov
mov
jl
ss
fnstcw
xchg
popa
mov
xor
cmp
mov
adc
imul
jecxz
jbe
ins
inc
jo
jl
xor
test
call
and
dec
sub
test
mov
stc
clc
sar
bnd
add
je
xor
addr16
adc
push
and
push
push
inc
fiadd
pushf
(bad)
ja
cmp
rep
pushaw
ret
adc
(bad)
cld
fild
test
xchg
mov
pop
xor
pusha
leave
xchg
pop
mov
jmp
int
stc
xchg
sub
hlt
lds
cmc
cmp
mov
in
inc
mov
and
orps
mov
fsub
push
push
hlt
ins
gs
dec
mov
movs
dec
xchg
adc
hlt
inc
mov
loope
daa
adc
xchg
fdiv
loopne
ss
call
test
pop
cmp
sub
xchg
scas
scas
lahf
xchg
xor
add
add
call
xor
popf
outs
add
push
mov
xchg
xchg
jmp
cld
sti
mov
cmp
aam
add
das
sub
sbb
out
imul
mov
ror
dec
push
mov
jo
aas
mov
and
cmp
and
mov
xchg
xchg
mov
ror
xchg
mov
call
test
dec
aad
into
jge
jns
mov
jg
mov
cmp
adc
rcl
in
sbb
and
sar
test
xor
iret
dec
popf
out
aaa
das
test
xchg
inc
test
add
scas
lods
lods
inc
stc
push
dec
or
setle
ds
repnz
push
add
mov
nop
std
dec
add
das
sub
test
sub
sub
jl
mov
fdivr
lea
dec
es
push
imul
fsubr
fimul
(bad)
dec
xchg
xor
dec
cmp
adc
mov
push
cli
mov
daa
es
lods
cmps
cs
cwde
pushf
mov
fld
in
and
loopne
cmp
and
outs
push
jmp
pop
xor
pop
movs
lods
pop
inc
pop
scas
in
rcl
push
gs
ins
or
fs
(bad)
jmp
or
xor
ins
push
pop
in
xchg
and
cmc
hlt
or
sbb
imul
clc
push
test
pop
je
movs
popa
in
daa
inc
and
xor
nop
ror
loopne
hlt
hlt
add
adc
jmp
ss
scas
push
cdq
out
pop
mov
mov
push
pushf
jg
xchg
popa
xchg
mov
das
dec
jae
and
clc
int
ret
add
add
clc
outs
sbb
mov
sbb
jle
outs
sbb
scas
clc
sub
fs
nop
fld
bound
mov
push
jne
inc
mov
stos
cmp
(bad)
stc
cmps
les
add
ss
cmps
mov
xor
