(bad)
xchg
cmp
add
ja
jae
xchg
push
jae
or
je
push
jae
push
jae
jb
jae
push
push
jae
mov
push
jae
add
add
push
jae
ror
mov
push
jae
add
lods
(bad)
dec
ror
xchg
push
jae
inc
push
jae
add
push
sahf
dec
jae
add
jae
push
jae
xchg
push
jae
outs
push
jae
popa
push
jae
cdq
dec
jae
xchg
push
jae
les
out
pop
push
jae
enter
sbb
in
inc
jae
or
push
ror
cdq
dec
jae
sbb
rcl
dec
jae
sbb
and
push
jae
dec
push
jae
add
jae
add
adc
jae
les
shl
dec
push
jae
xchg
push
jae
out
jae
mov
push
jae
add
mov
jae
adc
das
(bad)
inc
push
jae
add
jmp
xor
push
jae
ja
jae
lds
imul
jae
imul
jne
jae
xchg
push
jae
push
jae
in
push
jae
xchg
push
jae
dec
push
jae
lds
cli
xchg
push
jae
fist
xor
jae
popf
dec
jae
add
add
add
add
add
add
add
add
add
mov
xchg
inc
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
add
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
add
add
add
add
add
xchg
inc
add
add
add
add
add
inc
add
call
inc
fwait
inc
add
add
add
add
add
popf
inc
add
add
add
sahf
inc
add
add
add
inc
add
mov
or
mov
add
add
lods
inc
inc
push
add
add
add
pop
mov
add
inc
add
add
add
add
jne
inc
add
mov
add
add
add
add
aas
push
add
add
add
inc
mov
inc
add
add
push
mov
or
das
mov
add
ss
or
fdivr
add
inc
add
add
add
les
add
add
cmc
les
add
add
nop
mov
and
inc
add
add
enter
add
add
inc
add
add
dec
fiadd
or
or
sbb
add
fild
add
or
mul
inc
add
in
inc
add
add
add
inc
add
add
add
add
dec
in
inc
add
add
add
add
loop
inc
add
add
add
add
add
add
jle
inc
add
add
add
add
jnp
inc
test
jg
inc
add
add
add
add
sub
add
add
add
add
mov
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
inc
js
pop
pop
fild
xor
aas
or
add
add
add
add
add
xor
fs
ins
popa
outs
outs
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
pop
inc
add
and
add
add
dec
push
inc
add
add
add
add
push
add
add
stos
sbb
mov
(bad)
xchg
pop
fdiv
pop
add
add
add
add
add
rcl
dec
add
add
xor
add
or
or
add
add
add
add
xor
inc
add
lock
add
(bad)
dec
add
add
add
add
add
add
add
add
add
inc
add
adc
add
jge
add
test
add
test
add
jno
jae
add
ins
imul
popa
outs
outs
add
add
add
add
add
add
pop
mov
inc
add
add
or
inc
add
adc
add
inc
add
inc
add
add
add
add
add
add
add
add
mov
(bad)
(bad)
(bad)
inc
add
add
pop
inc
add
inc
add
add
add
sbb
in
inc
add
add
add
add
add
add
sbb
add
add
in
sbb
add
add
call
add
add
sbb
pop
add
add
adc
adc
inc
add
sub
add
add
add
add
add
add
add
adc
add
jl
inc
add
(bad)
(bad)
inc
add
add
add
add
cmp
add
(bad)
(bad)
mov
sbb
fistp
inc
add
sbb
stc
sbb
adc
inc
add
sbb
mov
inc
add
sbb
scas
sbb
leave
sbb
jecxz
inc
add
sbb
add
inc
add
sbb
add
sbb
push
sbb
and
inc
add
sbb
push
sbb
popa
sbb
outs
sbb
jnp
inc
add
inc
add
sbb
std
sbb
pop
sbb
add
sbb
add
add
add
sbb
ins
sbb
mov
adc
inc
add
sbb
add
add
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
add
add
add
add
add
add
(bad)
inc
add
add
and
add
add
fadd
add
add
loopne
inc
add
add
add
add
les
add
add
add
sbb
add
add
les
add
add
add
add
add
ins
aaa
sbb
lock
add
inc
add
adc
xor
add
adc
inc
add
add
add
inc
add
sbb
and
inc
add
add
add
sbb
cmp
add
pushf
and
add
add
les
sbb
lods
and
add
add
inc
add
add
add
adc
inc
add
add
add
add
sbb
mov
add
add
pop
add
add
shl
add
(bad)
(bad)
inc
add
add
add
add
cmp
add
and
(bad)
(bad)
(bad)
(bad)
cmp
inc
add
add
add
sbb
add
add
adc
inc
add
sbb
add
add
adc
inc
add
inc
add
adc
inc
add
inc
add
adc
inc
add
inc
add
add
add
mov
add
add
add
add
add
inc
add
add
(bad)
(bad)
inc
add
add
and
pushf
(bad)
xor
test
icebp
and
jnp
or
add
add
add
cwde
pop
inc
add
and
or
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
and
test
inc
add
add
add
and
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
and
mov
inc
add
add
add
inc
add
inc
add
adc
add
add
adc
inc
add
(bad)
(bad)
call
inc
inc
add
add
add
and
add
add
mov
add
add
add
add
inc
add
add
add
add
fsub
inc
add
and
or
inc
add
add
sbb
inc
add
inc
add
and
add
add
cmp
inc
add
add
add
inc
add
adc
add
add
or
add
push
add
xor
add
add
pusha
and
push
and
test
inc
add
add
nop
and
add
add
add
add
add
add
add
lods
and
add
add
mov
jb
jo
outs
cmp
bound
jae
ins
jns
add
add
data16
imul
popa
outs
outs
add
jmp
sbb
adc
dec
fwait
mov
jb
push
or
mov
cmp
or
jne
mov
repz
xor
sbb
mov
and
add
dec
lods
xor
or
stos
add
xchg
inc
fs
cld
cli
mov
or
sub
jno
inc
cmp
outs
addr16
ins
and
ins
gs
dec
inc
inc
dec
dec
dec
sub
cmp
inc
ss
inc
fs
imul
je
jb
push
inc
ss
dec
inc
add
push
inc
add
sub
inc
add
add
add
add
add
add
add
and
jo
inc
add
add
add
add
cmp
lods
xor
or
stos
add
xchg
inc
outs
addr16
outs
fs
add
bound
data16
xor
xor
or
stos
add
xchg
inc
outs
jb
add
add
inc
outs
jb
pop
dec
outs
popa
add
add
dec
add
add
add
outs
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
inc
jns
xor
add
sub
push
add
xor
ror
adc
outs
icebp
dec
xchg
jbe
aam
out
or
cli
mov
or
sub
jno
das
dec
mov
dec
sbb
and
sti
cld
cli
mov
or
sub
jno
inc
ins
popa
jae
add
add
dec
push
jmp
add
inc
cmp
dec
inc
dec
push
push
pop
jae
jae
gs
xor
pop
ins
jae
bound
xor
fs
ins
pop
xor
add
push
push
dec
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
call
imul
add
add
add
popa
push
jae
jae
add
add
push
jb
gs
jo
gs
jne
ins
imul
popa
ins
ins
gs
imul
push
outs
je
jae
add
inc
ins
popa
jae
pop
dec
outs
imul
add
add
arpl
outs
outs
outs
add
popa
jb
outs
je
imul
add
je
jo
gs
fs
add
imul
add
add
jo
outs
jae
add
popa
fs
ja
jae
add
add
gs
add
jb
bound
je
add
add
je
ins
gs
jne
fs
add
add
add
push
add
add
add
add
cmp
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
js
add
jl
add
test
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
sbb
add
add
xchg
add
add
add
add
add
add
push
add
outs
add
add
add
add
add
push
add
add
add
add
add
outs
add
add
add
add
add
add
bound
add
add
add
add
ins
add
add
add
add
add
push
add
add
add
add
add
data16
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
add
add
ins
add
add
add
add
add
je
add
add
add
add
add
je
add
add
add
add
outs
add
add
add
add
add
ins
add
add
add
add
add
add
ins
add
jbe
je
add
add
add
add
jp
js
add
add
add
add
add
imul
add
arpl
add
add
xor
jno
js
js
ja
jp
add
add
add
add
jo
popa
add
push
add
add
add
add
jns
jae
popa
add
add
add
add
add
jae
je
add
add
cmp
jb
jne
jno
jp
push
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
add
jns
bound
xor
add
add
add
jno
jno
xor
aaa
add
add
add
jbe
popa
add
add
add
add
add
add
data16
add
add
add
add
arpl
add
outs
add
add
add
add
add
jp
jns
jb
ja
xor
add
add
add
jbe
jne
xor
add
add
add
ja
xor
aaa
add
add
add
jbe
ja
xor
aaa
add
add
add
add
xor
aaa
add
add
add
jno
outs
add
add
add
add
add
popa
add
xor
add
add
add
bound
imul
add
add
add
push
imul
add
add
add
add
add
xor
aaa
add
add
add
je
jp
jb
xor
aaa
add
add
add
popa
add
add
add
add
add
add
ja
popa
add
outs
add
add
add
add
add
push
add
add
add
add
add
outs
add
xor
add
add
add
add
add
add
xchg
add
add
popa
add
add
add
add
add
imul
add
arpl
aaa
add
add
add
js
jbe
data16
jbe
aaa
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
jp
aaa
add
add
add
add
ins
add
aaa
add
add
add
add
je
add
add
add
add
add
add
je
aaa
add
add
add
add
outs
add
outs
add
add
add
add
arpl
data16
data16
add
add
xor
imul
cmp
xor
cmp
aaa
add
jp
js
add
cmp
xor
cmp
xor
js
imul
add
arpl
cmp
xor
cmp
xor
add
ja
jp
cmp
xor
cmp
cmp
imul
add
push
push
cmp
xor
xor
xor
ja
jns
jae
popa
add
add
add
add
add
jae
je
cmp
xor
aaa
add
jb
jne
jno
jp
push
add
add
add
jns
bound
js
cmp
xor
cmp
cmp
jno
jno
jns
jne
jbe
cmp
xor
aaa
add
jp
bound
add
cmp
xor
xor
xor
add
arpl
cmp
xor
aaa
add
add
outs
add
jp
cmp
xor
cmp
cmp
jns
jb
ja
cmp
xor
aaa
add
add
jbe
jne
jns
jne
add
add
rol
add
push
add
add
add
add
jae
xor
xor
add
jno
outs
add
add
add
popa
add
xor
xor
add
bound
imul
xor
add
push
imul
add
add
add
xor
xor
add
je
jp
jb
xor
xor
add
popa
add
add
add
add
ja
popa
add
outs
add
add
add
push
add
add
add
outs
add
xor
xor
add
add
bound
xor
xor
add
ins
add
add
add
lock
add
je
js
jbe
data16
add
add
add
jbe
jo
add
xor
cmp
cmp
xor
je
data16
add
add
add
add
add
add
jp
xor
cmp
aaa
add
add
ins
add
xor
cmp
cmp
xor
jns
je
add
add
add
add
add
je
xor
cmp
add
add
outs
add
xor
cmp
cmp
xor
outs
add
ins
add
data16
add
add
add
add
ins
add
jbe
je
xor
cmp
cmp
xor
add
add
xor
cmp
add
add
imul
add
arpl
xor
cmp
xor
xor
jno
js
js
ja
jp
xor
cmp
add
add
jo
popa
add
push
xor
cmp
cmp
cmp
ja
jns
jae
popa
add
add
add
je
jb
xor
xor
add
add
push
add
add
js
add
add
add
jns
jne
jbe
xor
xor
add
bound
add
xor
xor
add
jbe
jae
arpl
xor
xor
add
add
outs
add
jp
xor
xor
cmp
cmp
jns
jb
ja
xor
xor
cmp
aaa
add
jbe
jne
xor
xor
add
jne
arpl
ja
xor
xor
add
jbe
ja
xor
xor
add
add
xor
xor
add
jno
outs
add
add
add
add
ins
add
imul
cmp
xor
push
jb
push
imul
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
ja
cmp
cmp
xor
aaa
add
bound
outs
add
add
add
add
add
push
add
add
add
add
add
outs
add
cmp
cmp
xor
cmp
jne
add
bound
cmp
cmp
xor
xor
popa
add
add
add
add
cmp
imul
add
cmp
aaa
add
add
add
add
data16
add
add
add
add
jo
add
cmp
cmp
xor
xor
je
data16
add
add
add
add
add
add
jp
cmp
aaa
add
cmp
imul
cmp
aaa
add
add
add
je
add
add
add
add
add
add
je
cmp
cmp
xor
aaa
add
outs
add
cmp
cmp
xor
cmp
outs
add
ins
add
data16
add
add
add
add
ins
add
jbe
je
cmp
cmp
xor
aaa
add
jp
js
add
cmp
cmp
xor
cmp
js
imul
add
arpl
cmp
cmp
xor
xor
jno
js
js
ja
jp
cmp
cmp
xor
xor
imul
add
push
push
cmp
cmp
xor
cmp
ja
jns
jae
popa
add
add
add
add
add
jae
je
cmp
cmp
xor
xor
jb
jne
jno
jp
push
add
add
add
js
cmp
aaa
add
cmp
jno
jno
jns
jne
jbe
cmp
aaa
add
add
add
bound
add
cmp
cmp
xor
xor
data16
jae
arpl
cmp
cmp
xor
aaa
add
outs
add
jp
cmp
cmp
xor
xor
jns
jb
ja
cmp
cmp
xor
xor
arpl
jbe
jne
cmp
cmp
xor
add
jne
arpl
ja
cmp
cmp
xor
aaa
add
jbe
ja
cmp
cmp
xor
xor
add
jae
cmp
aaa
add
cmp
push
add
add
add
add
jo
popa
add
cmp
aaa
add
add
add
ins
add
add
add
add
add
push
imul
add
add
add
jne
add
bound
add
les
add
jp
jb
add
xor
xor
add
add
add
ja
xor
xor
aaa
add
add
bound
outs
add
add
cmp
xor
jae
push
add
add
add
add
outs
add
xor
xor
cmp
xor
jne
add
bound
xor
xor
aaa
add
add
ins
add
add
xor
xor
imul
add
xor
xor
xor
xor
je
js
jbe
data16
add
xor
cmp
jbe
jo
add
xor
xor
aaa
add
add
add
add
add
cmp
xor
outs
add
add
xor
xor
cmp
xor
imul
push
add
add
add
imul
cmp
cmp
xor
xor
je
add
data16
add
add
add
add
ins
add
add
cmp
cmp
xor
cmp
data16
imul
cmp
cmp
xor
xor
add
add
cmp
cmp
xor
add
imul
add
arpl
cmp
cmp
xor
xor
jno
js
js
ja
jp
cmp
cmp
xor
cmp
imul
add
push
push
cmp
cmp
xor
aaa
add
jns
jae
popa
add
add
add
jae
je
jb
xor
xor
aaa
add
add
jp
push
add
add
cmp
xor
bound
js
add
add
add
add
jns
jne
jbe
xor
xor
aaa
add
jp
bound
add
xor
xor
aaa
add
data16
jae
arpl
add
add
add
add
add
jp
jo
xor
add
add
add
bound
add
loopne
add
imul
jp
jp
add
add
add
add
ja
arpl
add
add
add
add
jns
jne
arpl
ja
add
add
add
add
jbe
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
cmp
ins
add
imul
cmp
cmp
xor
jb
push
imul
add
add
add
add
add
add
add
add
add
je
jp
jb
add
add
add
add
popa
add
add
add
add
add
outs
add
popa
add
outs
add
add
add
add
jae
push
add
add
add
push
add
add
add
add
add
jne
arpl
ja
xor
add
add
jbe
ja
xor
add
add
add
xor
add
add
jno
outs
add
add
add
popa
add
xor
add
add
bound
imul
add
add
add
push
imul
add
add
add
jne
add
xor
add
add
je
jp
jb
xor
add
add
popa
add
add
add
add
ja
popa
add
outs
add
add
add
push
add
add
add
push
add
add
add
add
bound
xor
add
add
add
add
add
sbb
add
add
add
add
add
jbe
jb
add
add
add
add
add
add
add
dec
add
add
add
bound
xor
add
add
add
ins
add
add
add
add
add
push
add
add
add
add
add
data16
add
add
add
add
jo
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
jp
xor
aaa
add
add
add
xor
add
add
add
je
add
add
add
add
add
add
je
xor
aaa
add
add
add
data16
add
add
add
add
ins
add
add
xor
add
add
add
ins
add
jbe
je
xor
aaa
add
add
add
add
xor
add
add
add
imul
add
arpl
xor
aaa
add
add
jno
js
js
ja
jp
xor
aaa
add
add
add
jo
popa
add
push
xor
aaa
add
add
add
jns
jae
popa
add
add
add
add
add
jae
je
xor
aaa
add
add
jb
jne
jno
jp
push
add
add
add
jns
bound
add
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
inc
jb
dec
outs
arpl
add
add
add
jno
jno
jns
jne
jbe
add
add
add
add
bound
add
add
add
add
add
jbe
jae
arpl
add
add
add
add
add
add
add
add
jb
ja
add
add
add
add
jbe
jne
add
add
add
add
jne
arpl
ja
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
jno
outs
add
add
add
add
add
popa
add
add
add
add
add
bound
imul
xor
cmp
xor
jb
push
imul
add
add
add
add
add
add
add
add
add
je
jp
jb
add
add
add
add
popa
add
add
add
add
add
add
ja
popa
add
outs
add
add
add
add
add
push
add
add
add
add
add
outs
add
add
add
add
add
add
bound
add
add
add
popa
add
add
add
add
add
add
push
add
add
add
add
add
data16
add
add
add
add
jo
add
add
add
pop
pop
jbe
popa
push
bound
outs
add
add
je
data16
add
add
xor
ins
add
add
aaa
add
add
add
add
ins
add
aaa
add
add
cmp
jns
je
add
add
add
add
add
add
je
aaa
add
add
add
add
outs
add
aaa
add
add
add
add
ins
add
add
aaa
add
add
add
add
ins
add
jbe
je
aaa
add
add
cmp
outs
add
js
add
aaa
add
add
add
add
imul
add
arpl
aaa
add
add
add
add
js
js
ja
jp
aaa
add
add
add
add
jo
popa
add
push
aaa
add
add
add
add
jns
jae
popa
add
add
add
add
je
aaa
add
add
add
add
jne
jno
jp
push
add
add
add
jns
bound
js
aaa
add
add
add
add
jno
jns
jne
jbe
aaa
add
add
add
add
bound
add
aaa
add
add
add
add
jbe
jae
arpl
aaa
add
add
add
add
outs
add
jp
aaa
add
add
add
add
jb
ja
arpl
jbe
add
add
pop
pop
jbe
popa
dec
xor
jb
add
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jns
jne
arpl
ja
xor
add
add
jbe
ja
xor
add
add
add
xor
add
add
jno
outs
add
add
add
popa
add
xor
add
add
bound
imul
add
add
add
push
imul
add
add
add
add
add
xor
add
add
jb
xor
add
add
popa
add
add
add
add
ja
popa
add
outs
add
add
add
xor
add
add
add
outs
add
xor
add
add
add
bound
xor
add
add
ins
add
add
add
add
add
push
add
add
add
jbe
data16
add
add
jo
add
xor
add
add
add
add
add
add
imul
xor
aaa
add
add
jns
je
add
add
add
add
add
add
je
xor
xor
aaa
add
add
outs
add
xor
xor
cmp
aaa
add
ins
add
add
xor
xor
aaa
add
add
ins
add
jbe
je
xor
xor
aaa
add
add
jp
js
add
xor
xor
add
add
imul
add
arpl
xor
xor
aaa
add
add
js
js
ja
jp
xor
xor
aaa
add
add
jo
popa
add
push
xor
xor
add
add
jns
jae
popa
add
add
add
add
add
add
add
add
add
add
add
add
jp
imul
xor
cmp
cmp
push
add
xor
xor
xor
add
add
je
xor
xor
xor
xor
add
data16
xor
xor
xor
outs
add
ins
add
data16
xor
xor
add
ins
add
jbe
je
xor
xor
cmp
aaa
add
jp
js
add
xor
xor
xor
xor
js
imul
add
arpl
xor
xor
xor
xor
jno
js
js
ja
jp
xor
xor
xor
add
jo
popa
add
push
xor
xor
xor
xor
ja
jns
jae
popa
add
xor
xor
xor
data16
je
xor
xor
xor
add
jne
jno
jp
push
add
add
add
bound
js
xor
xor
xor
xor
jno
jno
jns
jne
jbe
xor
xor
xor
xor
jp
bound
add
xor
xor
xor
xor
data16
jae
arpl
xor
xor
xor
aaa
add
outs
add
jp
xor
xor
xor
xor
jns
jb
ja
arpl
jbe
add
sub
add
arpl
je
js
jbe
data16
add
add
add
add
jo
add
xor
cmp
xor
xor
je
data16
add
add
add
add
add
je
jb
xor
xor
add
add
jp
push
add
add
xor
add
add
jno
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
add
add
add
add
popa
add
add
add
add
add
data16
add
add
add
add
add
add
add
jns
jb
add
add
add
jbe
jne
jns
jne
add
xor
add
add
ja
add
xor
add
jae
add
add
add
jno
outs
add
add
add
add
popa
add
add
add
add
bound
imul
xor
xor
add
imul
add
aaa
add
add
add
add
xor
add
add
add
aaa
add
add
popa
add
add
add
add
add
ja
popa
add
outs
add
add
add
add
push
add
add
add
outs
add
add
add
and
add
jne
add
bound
xor
add
xor
popa
add
add
add
add
add
add
add
add
sbb
add
add
xchg
add
add
xor
add
add
add
add
add
and
add
pop
pop
jbe
popa
push
dec
xor
jb
pop
pop
jbe
popa
dec
outs
push
popa
jb
and
add
push
add
jp
xor
add
add
add
ins
add
outs
add
add
add
add
add
ja
popa
add
imul
add
add
add
add
js
jae
js
xor
aaa
add
add
add
jno
imul
xor
add
add
add
data16
xor
add
add
add
push
jns
jns
xor
add
add
outs
add
je
jbe
xor
add
add
add
jns
add
xor
add
add
add
push
add
popa
add
add
add
add
add
outs
add
ins
add
add
add
add
add
jo
jbe
outs
add
xor
add
add
add
data16
jp
je
xor
add
add
add
add
xor
add
add
add
bound
arpl
xor
aaa
add
add
add
add
ins
add
add
add
add
imul
xor
add
add
add
jne
add
jb
xor
add
add
add
add
add
xor
add
add
add
jne
jb
xor
aaa
add
add
add
ins
add
jae
jns
xor
add
add
add
jbe
js
push
xor
add
add
jp
ins
add
imul
cmp
aaa
add
popa
add
xor
add
add
jbe
add
add
xor
add
add
add
jbe
data16
add
add
add
add
ins
add
je
ins
add
add
add
add
add
ja
imul
add
add
add
add
add
jne
jae
jb
xor
add
add
ins
add
add
xor
aaa
add
add
add
jo
jne
bound
ins
add
add
add
add
add
jno
add
add
add
add
add
jp
arpl
imul
add
add
add
add
xor
add
add
add
add
jo
xor
add
add
add
jo
xor
aaa
add
add
add
arpl
jns
jno
xor
add
add
add
jb
ja
jbe
xor
aaa
add
add
add
add
imul
add
add
add
add
je
imul
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
ins
add
add
add
add
add
push
ja
popa
add
xor
aaa
add
add
add
jns
js
jae
js
xor
add
add
add
jno
imul
xor
aaa
add
add
add
xor
add
add
add
push
jns
jns
xor
add
add
outs
add
je
jbe
xor
add
add
add
jns
add
xor
aaa
add
add
add
push
add
popa
add
add
add
add
add
outs
add
ins
add
add
add
add
add
jo
jbe
outs
add
xor
add
add
add
data16
jp
je
xor
add
add
add
add
xor
add
add
add
add
bound
arpl
xor
add
add
add
add
ins
add
add
add
add
add
xor
add
add
add
jne
add
jb
xor
add
add
add
add
add
xor
add
add
add
jne
jb
xor
aaa
add
add
add
ins
add
jae
jns
xor
add
add
add
jbe
js
push
xor
add
add
add
ins
add
imul
cmp
xor
imul
add
xor
add
add
add
add
add
xor
aaa
add
add
add
jbe
data16
add
add
add
add
ins
add
je
ins
add
add
add
add
add
ja
imul
add
add
add
add
add
jne
jae
jb
xor
add
add
add
add
add
add
add
add
jb
jo
jne
bound
ins
add
add
add
add
add
jno
add
add
add
add
add
jp
arpl
imul
add
add
je
jne
jae
xor
add
add
add
add
jo
xor
aaa
add
add
add
je
jbe
jo
xor
add
add
add
arpl
jns
jno
xor
aaa
add
add
add
jb
ja
jbe
xor
add
add
add
add
imul
add
add
add
add
je
imul
add
add
add
ja
jne
jno
add
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
push
ja
popa
add
xor
aaa
add
add
add
jae
js
xor
add
add
add
jno
imul
xor
add
add
add
data16
xor
add
add
add
push
jns
jns
xor
add
add
add
ins
add
add
add
add
add
add
jns
add
xor
add
add
add
push
add
popa
add
add
add
add
add
imul
add
add
add
add
add
jo
jbe
outs
add
xor
aaa
add
add
add
jp
je
xor
aaa
add
add
add
add
xor
add
add
add
add
add
enter
jb
popa
add
outs
add
add
add
add
add
push
jo
xor
xor
xor
xor
add
js
jb
xor
xor
cmp
xor
push
add
jne
xor
xor
cmp
xor
jno
jne
jb
xor
xor
aaa
add
add
ins
add
jae
jns
xor
xor
cmp
cmp
bound
jbe
js
push
xor
xor
cmp
xor
jp
ins
add
imul
xor
cmp
imul
add
xor
xor
cmp
xor
jbe
add
add
xor
xor
xor
cmp
add
data16
add
xor
xor
add
je
ins
add
add
add
add
add
ja
imul
add
add
add
add
jne
jae
jb
xor
xor
cmp
xor
ins
add
add
data16
add
add
add
add
add
add
add
jb
gs
xor
add
add
or
gs
jb
outs
jb
outs
fs
add
add
inc
add
inc
add
add
xchg
and
add
add
add
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
and
add
adc
add
push
jb
je
push
jb
arpl
jae
gs
outs
jb
add
pop
inc
inc
add
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
sbb
add
and
add
add
add
sub
add
or
add
sbb
add
and
add
and
add
xor
add
sub
add
inc
add
add
add
xor
add
xor
add
cmp
add
push
add
add
add
add
pop
add
add
add
add
inc
add
add
add
pusha
add
add
add
add
pop
add
add
add
add
je
add
test
add
add
add
add
add
add
add
add
add
lock
sbb
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
(bad)
inc
add
add
mov
add
add
add
add
add
add
add
add
add
add
jo
add
add
stos
sqrtps
add
xchg
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
sbb
add
add
xchg
add
add
add
add
add
add
sbb
add
add
xchg
add
add
adc
add
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
xor
add
add
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
push
popa
jb
fs
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
gs
add
jbe
popa
push
popa
jb
jae
dec
je
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
inc
jb
inc
outs
outs
jae
jb
arpl
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
popa
jb
popa
je
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
xor
jb
push
popa
jb
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
popa
jb
jne
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
jne
inc
imul
bound
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
push
gs
add
add
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
push
je
inc
outs
jo
add
add
xor
add
push
jo
imul
xor
xor
je
outs
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
js
bound
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
je
add
add
push
add
add
add
aaa
add
add
popa
add
add
add
add
sbb
add
jo
xor
cmp
aaa
add
add
push
xor
cmp
aaa
add
add
push
jno
add
add
sbb
add
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
add
xor
jno
outs
add
add
add
add
ja
xor
add
add
add
repnz
add
jae
xor
xor
xor
xor
je
js
xor
xor
aaa
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
xor
xor
cmp
cmp
xor
xor
aaa
add
add
add
add
popa
add
xor
xor
cmp
xor
xor
xor
cmp
xor
push
xor
xor
aaa
add
add
xor
xor
aaa
add
add
xor
xor
cmp
xor
imul
add
add
add
add
add
add
add
add
jo
xor
xor
add
add
xor
xor
cmp
xor
outs
add
add
add
add
add
xor
xor
add
add
xor
xor
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
jp
xor
add
add
xor
add
add
jbe
xor
add
add
jae
jo
xor
add
add
add
add
jb
ins
add
add
add
outs
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jb
imul
dec
add
add
jp
xor
xor
xor
xor
add
xor
xor
cmp
xor
jae
jno
xor
xor
cmp
add
xor
xor
cmp
add
arpl
xor
xor
cmp
xor
imul
xor
xor
xor
popa
add
add
add
outs
add
add
push
add
add
cmp
imul
xor
add
je
add
add
cmp
ja
add
add
cmp
add
add
add
ja
add
add
add
xor
push
js
add
add
add
jns
data16
add
add
add
add
jb
outs
add
add
add
add
add
add
add
add
popa
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
xor
xor
add
xor
xor
aaa
add
add
jbe
jb
xor
xor
add
add
add
arpl
bound
xor
xor
add
add
add
add
jo
aaa
add
add
add
add
bound
aaa
add
add
add
add
add
add
add
add
jp
jne
aaa
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
cmp
jno
outs
add
add
add
push
add
add
add
add
add
add
jb
jae
xor
add
add
add
add
push
add
add
add
jno
bound
add
add
add
add
add
imul
add
add
add
add
bound
jbe
xor
xor
add
add
jns
xor
xor
xor
add
xor
xor
add
jo
xor
xor
add
add
xor
xor
add
add
xor
xor
xor
xor
outs
add
jns
xor
xor
xor
xor
add
pop
add
add
ins
add
xor
aaa
add
xor
xor
add
add
xor
cmp
xor
jns
imul
aaa
add
add
jp
ins
add
xor
add
add
jbe
xor
xor
aaa
add
add
xor
xor
xor
cmp
outs
add
xor
xor
xor
aaa
add
add
add
add
ins
add
add
add
add
add
outs
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
xor
xor
add
xor
xor
xor
add
data16
xor
xor
xor
xor
jae
jno
xor
xor
xor
add
xor
cmp
aaa
add
add
arpl
xor
xor
xor
xor
imul
xor
xor
xor
add
xor
xor
xor
xor
add
xor
xor
xor
imul
xor
add
add
add
add
add
add
xor
xor
xor
xor
ja
add
add
add
xor
push
js
xor
xor
xor
cmp
jns
data16
xor
xor
xor
add
add
jb
xor
add
add
add
add
popa
add
xor
add
add
add
add
add
add
add
add
add
add
jae
xor
add
add
xor
add
add
xor
add
add
jbe
jb
xor
add
add
add
add
arpl
bound
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
add
add
add
jns
xor
xor
cmp
xor
bound
add
add
add
add
add
xor
xor
cmp
add
push
xor
xor
cmp
add
push
xor
xor
xor
aaa
add
ja
xor
xor
cmp
cmp
jne
xor
xor
aaa
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
aaa
add
xor
xor
cmp
cmp
push
add
add
add
add
add
add
add
jae
xor
xor
xor
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
jno
xor
xor
cmp
xor
xor
xor
cmp
xor
add
add
add
add
xor
xor
aaa
add
add
add
add
xor
xor
aaa
add
add
xor
xor
aaa
add
add
xor
xor
aaa
add
add
jns
xor
xor
xor
cmp
ins
add
add
add
add
add
add
xor
xor
aaa
add
add
xor
xor
aaa
add
add
xor
xor
add
add
add
xor
xor
cmp
add
add
add
add
add
imul
jne
popa
add
add
add
arpl
add
add
sbb
add
dec
add
push
add
inc
add
add
add
add
add
add
add
add
add
ins
add
xor
xor
cmp
xor
xor
add
add
xor
cmp
xor
jns
imul
xor
xor
jns
jp
ins
add
xor
aaa
add
add
jbe
xor
xor
add
add
jae
jo
xor
xor
cmp
xor
outs
add
xor
xor
aaa
add
add
add
add
add
add
outs
add
xor
xor
xor
aaa
add
xor
aaa
add
add
xor
aaa
add
add
add
add
add
xor
xor
xor
add
xor
xor
add
jb
xor
xor
aaa
add
add
imul
add
add
jp
xor
xor
xor
add
add
add
add
add
add
jno
ins
add
add
add
add
add
arpl
add
add
add
add
popa
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
jo
imul
cmp
xor
je
outs
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
outs
add
add
add
add
add
je
bound
add
add
add
add
popa
add
add
add
adc
add
jne
jae
add
xor
xor
add
add
add
add
add
add
popa
add
add
imul
outs
add
push
add
outs
add
push
add
add
add
add
push
add
push
add
push
add
dec
add
pop
add
dec
add
pop
add
add
pop
add
push
add
pop
add
dec
add
push
add
push
add
push
add
push
add
dec
add
dec
add
push
add
push
add
add
add
add
push
add
dec
add
inc
add
inc
add
inc
add
push
add
dec
add
push
add
inc
add
dec
add
push
add
dec
add
dec
add
dec
add
dec
add
add
add
dec
add
push
add
add
pop
add
pop
add
push
add
dec
add
dec
add
push
add
pop
add
dec
add
dec
add
add
dec
add
push
add
push
add
push
add
push
add
dec
add
inc
add
inc
add
push
add
pop
add
inc
add
pop
add
dec
add
dec
add
inc
add
inc
add
push
add
add
inc
add
add
inc
add
push
add
push
add
push
add
push
add
push
add
inc
add
add
dec
add
dec
add
push
add
inc
add
dec
add
push
add
inc
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
dec
add
pop
add
dec
add
pop
add
add
pop
add
push
add
pop
add
dec
add
push
add
push
add
push
add
push
add
dec
add
dec
add
push
add
push
add
add
add
add
push
add
dec
add
inc
add
inc
add
inc
add
push
add
dec
add
push
add
inc
add
dec
add
push
add
dec
add
dec
add
add
cmp
add
jns
popa
add
outs
add
add
bound
js
jne
jne
je
js
ins
add
ja
jno
jo
jne
ja
jno
jb
arpl
bound
jns
jb
jns
jae
js
ja
outs
add
arpl
ins
add
imul
add
jbe
jb
push
add
outs
add
jp
add
ins
add
imul
add
jne
outs
add
je
jns
push
jb
imul
bound
jns
data16
imul
add
outs
add
je
bound
js
popa
add
imul
add
add
ins
add
jae
jp
jbe
add
push
add
arpl
arpl
bound
add
jo
jns
jns
bound
add
jp
jne
push
ins
add
jno
add
add
je
add
outs
add
add
jp
add
jno
outs
add
push
add
popa
add
jae
data16
add
push
add
jno
bound
add
imul
add
push
bound
jbe
imul
imul
add
push
add
add
cmp
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jo
add
add
dec
xor
add
stos
sbb
mov
(bad)
xchg
pop
fdiv
pop
jmp
sbb
adc
dec
fwait
mov
jb
push
or
xor
or
stos
add
xchg
cld
xor
add
add
add
pop
add
jne
jo
cmp
or
jae
jae
add
add
inc
add
(bad)
(bad)
(bad)
push
and
add
fdiv
add
inc
xor
add
or
inc
outs
addr16
outs
fs
add
xor
add
add
xor
add
aaa
xor
add
add
add
add
add
add
add
add
stos
add
add
add
add
pop
hlt
stos
cli
push
cs
push
(bad)
mov
imul
adc
sbb
or
fild
jns
or
std
outs
lahf
mov
fisub
xlat
es
clc
clc
stos
into
and
push
int
lods
jo
sub
push
test
out
adc
dec
pusha
ficomp
in
icebp
int3
adc
mov
cld
or
dec
jnp
dec
inc
mov
pusha
(bad)
and
and
data16
xchg
pusha
or
stc
ins
ins
pop
jmp
ret
loope
xor
push
les
add
dec
or
pop
ja
cmc
(bad)
xchg
xor
dec
jp
push
xchg
adc
aas
stc
icebp
ret
inc
push
mov
dec
or
push
loope
cmps
adc
rol
jb
and
mov
enter
pop
outs
push
sbb
mov
dec
ret
xchg
lea
xor
movs
dec
enter
dec
ds
ins
inc
add
enter
imul
cmp
frstor
mov
sub
pop
lea
stos
dec
xchg
lods
rcl
scas
sub
mov
or
(bad)
cwde
cmp
fimul
pusha
(bad)
repz
adc
add
dec
xor
mov
add
mov
loop
add
jo
int3
sub
ja
lahf
cmp
xor
dec
stos
enter
cmps
pop
xchg
fistp
and
daa
nop
lods
pop
sbb
xrelease
stos
fbld
xor
call
out
cli
lds
jo
retf
jmp
test
stos
mov
sahf
mov
lock
mov
xor
cwde
(bad)
sub
jae
inc
data16
fst
xor
outs
ret
shr
jecxz
cli
arpl
sub
aas
out
icebp
and
ja
mov
xchg
inc
mov
xor
sub
rol
mov
jmp
(bad)
mov
fcom
jmp
pop
cwde
cmp
mov
mov
mov
inc
adc
gs
pop
xchg
mov
dec
retf
aas
pushf
jnp
loopne
mov
and
out
shr
sub
mov
stos
sub
cmp
cli
scas
add
push
push
movs
stos
sub
pop
cmp
push
xchg
data16
outs
and
into
jl
stos
es
mov
xchg
xor
mov
popa
scas
xchg
or
in
nop
jbe
jnp
xor
test
imul
jbe
std
loop
mov
mov
push
je
clc
push
mov
or
xor
lods
es
cmp
push
push
and
aad
adc
dec
pop
aam
xchg
js
add
popf
call
mov
out
or
jp
ds
and
lahf
imul
std
or
lods
hlt
lahf
fstp
dec
xor
xchg
xor
cmp
sub
hlt
jle
(bad)
xchg
dec
mov
call
fldcw
sub
fild
push
fmul
bound
sub
pop
lock
(bad)
fst
jp
loopne
or
mov
pop
lods
out
inc
mov
call
dec
gs
add
dec
jge
pop
inc
popa
sub
and
xor
and
es
xlat
iret
xchg
sbb
inc
je
(bad)
leave
add
int3
or
out
fld
xchg
jmp
fdiv
daa
js
mov
push
mov
call
stos
stc
mov
stos
mov
outs
repnz
ja
(bad)
int3
jle
push
adc
bound
imul
je
cwde
test
test
dec
jne
mov
stos
adc
jnp
leave
daa
dec
std
nop
add
jo
dec
out
xchg
adc
mov
test
add
fwait
pop
cmp
sti
sub
repnz
fbld
pop
add
(bad)
in
retf
iret
mov
fwait
mov
mov
cmps
stos
pop
pop
aaa
gs
lock
jmp
jno
test
jle
mov
mov
adc
inc
xchg
xchg
int
aam
fild
xchg
pop
inc
and
or
cmps
ja
push
jge
inc
pop
jg
stos
sbb
xchg
sub
mov
cmp
push
fiadd
push
jae
out
rol
js
dec
jmp
jnp
std
inc
pop
jnp
adc
sub
xor
xor
es
inc
cmp
mov
jge
div
jle
sbb
popf
std
mov
repz
add
inc
jo
pop
rep
inc
aaa
push
mov
sub
fisttp
nop
push
cmps
or
add
xchg
cmp
lock
sbb
movs
mov
mov
sbb
and
scas
inc
jecxz
inc
pop
xlat
call
sti
out
lods
jmp
cmc
sub
push
test
add
fwait
push
out
fcom
sub
stos
(bad)
pop
not
jb
popf
xlat
sub
sti
pop
mov
xchg
icebp
shr
jmp
sbb
mov
div
adc
mov
xor
fiadd
sbb
int
mov
fs
push
jmp
jmp
push
cmp
dec
cmp
cld
inc
xchg
(bad)
and
mov
shr
mov
cwde
cld
hlt
or
push
gs
call
test
test
push
adc
jnp
mov
xor
sub
or
push
adc
loopne
ret
mov
dec
ins
ret
test
push
add
lods
mov
mov
callw
dec
push
add
pop
jp
mov
mov
sub
popa
jo
add
inc
in
add
inc
jp
dec
movs
and
bound
icebp
cmp
shl
push
cs
dec
cs
lock
loopne
cwde
imul
sbb
xor
repnz
add
and
int3
adc
pop
call
(bad)
in
mov
jg
call
xor
lea
push
scas
sti
pop
ins
data16
cmp
test
jmp
aaa
or
movs
loope
loopne
int3
mov
repnz
aas
pushf
fbld
jne
es
push
cs
dec
dec
out
sub
rcr
scas
aad
sub
(bad)
jb
ins
dec
sub
inc
mov
scas
inc
cwde
jo
rcl
retf
xor
pop
dec
add
lock
dec
and
xor
and
stos
jae
push
in
je
mov
push
in
mov
cmp
ja
dec
mov
iret
sbb
mov
inc
push
and
das
out
jle
jp
ret
xchg
loopne
(bad)
xchg
popa
cmps
dec
fldcw
(bad)
out
mov
repz
leave
push
rol
xchg
popa
(bad)
pop
enter
inc
sahf
and
push
fmulp
pop
test
hlt
mov
lock
rcl
add
xchg
movs
mov
scas
mov
inc
call
dec
add
ror
rol
cmp
and
add
(bad)
mov
cwde
sbb
sahf
push
arpl
leave
sbb
cwde
clc
and
push
xchg
adc
js
or
jmp
in
jmp
arpl
loope
sub
dec
div
pusha
icebp
js
pop
push
mov
outs
and
retf
arpl
inc
cmps
idiv
fucom
jnp
lea
test
add
bound
inc
jne
scas
xor
lods
xor
sub
mov
pusha
pop
ficomp
inc
pop
mul
mov
mov
jmp
mov
xchg
int3
dec
out
(bad)
xor
xor
or
cli
xchg
or
ret
pop
idiv
out
test
push
dec
ds
xor
imul
mov
dec
inc
pop
sbb
inc
dec
xchg
jl
ret
stc
ins
or
inc
xchg
fbld
bound
adc
pop
mov
repz
xor
sbb
mov
les
movs
mov
cmps
and
xchg
cmp
aas
in
sub
and
inc
pushf
dec
enter
mov
mov
jmp
push
sbb
cmp
aas
lea
ja
sub
mov
fisub
les
pop
shl
fsubr
sub
call
inc
push
mov
mov
add
mov
jo
mov
pop
pshufw
jae
push
out
mov
add
cmp
dec
(bad)
jle
pop
stos
test
jge
jnp
aas
fnstsw
cmp
sbb
push
das
xchg
ret
mov
outs
(bad)
scas
nop
mov
pop
and
sbb
jb
mov
into
mov
dec
lods
jge
pop
cli
je
adc
or
sbb
jae
imul
or
pop
fs
icebp
sub
inc
mov
jmp
loope
jnp
stos
xchg
icebp
sub
xor
push
outs
addr16
fwait
cmp
inc
mov
cmp
or
sbb
inc
lods
mov
or
lods
lock
jo
cmp
xchg
ds
clc
jo
jns
shl
pop
push
push
or
cmp
rcl
ins
sti
hlt
das
pop
aas
loop
sbb
std
nop
int3
mov
xor
clc
lea
jmp
cdq
loope
les
das
and
fild
push
fwait
pop
xchg
add
stc
std
sbb
fbld
scas
xchg
mov
pop
push
jmp
(bad)
out
xchg
dec
aad
es
out
test
ds
sbb
js
add
and
nop
icebp
clc
xor
jns
sbb
popa
pop
call
dec
adc
(bad)
jp
push
movs
fadd
or
push
scas
mov
xchg
pop
clc
inc
dec
xchg
ins
pop
cmp
dec
sub
scas
inc
mov
xor
movs
mov
pusha
mov
leave
ret
or
jo
cmp
dec
fld
xchg
fld
xor
je
ins
xchg
pop
into
pop
xor
inc
mov
xor
push
pop
mov
icebp
adc
fmul
ins
ror
adc
or
dec
movs
loope
push
scas
mov
sub
sti
leave
adc
stc
(bad)
in
stos
pop
xor
sahf
jo
or
test
push
(bad)
cld
jmp
cld
stc
push
mov
(bad)
ret
movs
sbb
dec
stc
xchg
inc
xchg
dec
xchg
inc
in
pop
cmp
ds
mov
test
jnp
or
lods
out
pop
sub
inc
fisubr
repz
sbb
mov
jg
xchg
iret
xlat
xlat
push
movs
inc
push
sub
inc
enter
add
push
mov
ds
cmc
stos
push
mov
(bad)
cmc
scas
stos
inc
sub
ja
mov
jbe
loope
cld
out
xor
jno
jne
ja
icebp
mov
cmp
push
xor
pop
test
jmp
or
aas
sbb
jmp
and
iret
and
adc
xchg
fcom
scas
in
mov
fstp
mov
cwde
(bad)
push
mov
add
nop
hlt
adc
pop
dec
cld
(bad)
jbe
retf
jo
mov
add
dec
inc
in
lods
adc
fisttp
outs
(bad)
jae
cmovne
or
icebp
out
ins
loop
xchg
jae
push
fisubr
push
cmps
push
sar
(bad)
repnz
sub
nop
arpl
jbe
ret
or
add
out
jo
dec
jbe
bound
cmp
xor
xor
cmps
mov
cdq
jae
mov
push
jmp
sbb
jmp
mov
sbb
pop
stos
aam
xor
adc
int3
pop
sub
lahf
retf
sub
aad
jl
mov
mov
xchg
jge
outs
outs
xor
or
mov
jg
outs
clc
push
(bad)
sbb
jle
mov
push
dec
add
push
add
and
jl
dec
lea
mov
xor
or
(bad)
bound
lods
inc
push
cli
cdq
xor
add
inc
leave
sar
fwait
xor
xor
mov
das
adc
push
sbb
and
retf
add
out
push
xor
adc
jo
shl
mov
mov
push
adc
and
lea
loopne
pop
push
loop
cwde
aam
cmps
imul
xchg
add
mov
pop
and
pop
xor
or
jp
or
(bad)
jle
adc
xor
stos
aad
ss
aaa
mul
mov
pop
sti
je
mov
shr
ss
scas
xchg
test
and
imul
xchg
mov
push
adc
lea
inc
inc
and
or
mov
shl
ret
in
dec
aas
ins
cs
fisub
adc
stc
test
jmp
js
mov
xchg
ins
adc
imul
and
or
arpl
adc
mov
outs
xchg
and
mov
ror
dec
inc
cmp
push
sub
mov
out
mov
add
push
or
sub
jne
call
arpl
aad
jne
movs
das
mov
sub
stc
cmp
cmp
or
push
add
(bad)
outs
xchg
dec
rcr
lods
js
retf
lods
mov
jbe
xchg
or
mov
les
and
int3
pop
popa
sbb
sbb
aam
dec
add
sti
cmp
pop
xor
dec
(bad)
xchg
dec
shl
in
inc
enter
mov
test
fxch
and
jb
mov
bound
mov
add
pushf
aas
add
xchg
sub
jmp
iret
retf
shl
push
sub
cmps
iret
repz
dec
or
dec
xlat
add
xchg
mov
lds
jno
pop
dec
cdq
aas
pop
pushf
mov
cmp
rcr
jecxz
sbb
lods
cmp
mov
inc
pop
or
aam
lods
imul
fs
dec
jmp
push
outs
add
push
fnstsw
pop
les
movs
daa
scas
mov
popa
jns
cmp
mov
mov
adc
call
push
inc
push
adc
mov
cwde
xchg
(bad)
test
mov
jmp
into
jmp
add
cmp
or
pop
les
stos
push
jo
pop
fst
in
stos
(bad)
cmp
test
ins
pop
neg
inc
hlt
lods
ins
(bad)
movs
push
popa
cmp
sub
mov
mov
add
pop
xlat
jmp
(bad)
xchg
fist
dec
mov
push
aad
(bad)
mov
fist
jl
cmp
mov
push
xor
push
mov
rcr
cmps
push
adc
scas
es
aas
addr16
cmp
inc
ins
pop
add
test
xchg
sub
xor
inc
fwait
in
shl
mov
test
into
jne
dec
and
xor
fbstp
lods
adc
and
sub
jl
stos
add
adc
ret
sbb
mov
mov
push
adc
xchg
mov
pop
or
sbb
push
shl
add
in
gs
xor
ror
cdq
dec
inc
add
(bad)
xchg
adc
jp
icebp
mov
fst
stos
dec
mov
mov
cmc
lods
in
jbe
(bad)
gs
cmp
xadd
out
cmps
jge
int
and
iret
mov
mov
mov
loop
jne
outs
xchg
xlat
ds
pusha
cmp
mov
stc
fisubr
adc
jge
dec
leave
iret
lds
sbb
dec
popf
into
sbb
sub
add
xchg
xchg
ss
dec
push
repz
add
add
mov
lahf
(bad)
ja
sub
ret
lods
pop
sahf
popf
gs
mov
cmp
xchg
in
mov
nop
enter
call
mov
ja
(bad)
adc
jge
or
pop
and
iret
test
mov
ins
ja
jno
js
push
inc
xor
and
or
mov
popa
fldcw
int3
push
dec
das
xor
call
lock
(bad)
aas
jmp
inc
call
mov
(bad)
cmp
(bad)
cmp
sub
ins
sub
shl
cld
int
popf
and
sbb
xchg
bnd
mov
lock
add
pop
dec
mov
cwde
cwde
ret
imul
pushf
cmp
push
xchg
mov
or
outs
(bad)
imul
fwait
inc
push
jmp
repnz
sbb
movs
mov
pop
jnp
movs
movs
jb
xchg
inc
fisub
lock
mov
push
jo
dec
pushf
scas
adc
jecxz
cmp
mov
pop
mov
sub
inc
mov
mov
inc
imul
cmp
push
xor
add
pop
sub
popf
or
out
xor
popa
push
sbb
xchg
push
fadd
mov
ficomp
pop
rcl
xchg
adc
adc
xor
addr16
adc
mov
sbb
jp
retf
loope
push
inc
sbb
lock
mov
pop
outs
jl
imul
repz
aam
inc
mov
lahf
aad
mov
jno
push
(bad)
aaa
pop
sar
mov
mov
stos
rol
cmp
movs
sub
mov
cs
iret
inc
xchg
or
ret
in
add
push
and
pop
mov
or
xlat
stos
jl
xlat
jmp
sub
cwde
and
imul
ret
dec
retf
sub
xor
mov
sub
adc
or
adc
daa
mov
cmp
push
ret
ret
jae
xor
scas
and
push
push
pop
inc
inc
daa
scas
mov
pop
add
fwait
stos
stos
mov
fbstp
and
push
xchg
outs
jae
fcom
xor
mov
not
mov
mov
inc
cdq
mov
ss
js
rcl
rol
ja
push
mov
in
inc
push
lds
cmp
cld
and
leave
or
cmp
jo
sar
xlat
iret
test
xchg
pusha
cld
and
adc
inc
fnstenv
cdq
cs
push
jle
jb
mov
hlt
dec
add
push
call
pinsrw
mov
push
fwait
pop
hlt
add
push
push
sbb
scas
mov
add
arpl
lea
sub
dec
jbe
fcom
sub
dec
ror
cmp
daa
(bad)
in
retf
lea
push
mov
jmp
imul
imul
cmp
(bad)
cli
cdq
jne
mov
mov
cmp
mov
ins
lods
and
xor
mov
jg
mov
cmp
jb
cmps
fist
xchg
aas
(bad)
neg
and
pop
xor
xor
(bad)
fs
cdq
stc
or
add
jle
push
(bad)
sti
dec
inc
xchg
inc
sti
scas
sahf
pusha
sub
movs
sbb
pop
ds
into
popa
call
retf
mov
ret
sti
add
xchg
movs
in
jecxz
repnz
jne
mov
push
in
div
push
jnp
hlt
out
push
ja
sbb
xor
or
mov
inc
xor
or
out
pop
jmp
adc
cmps
cmp
cli
mov
retf
movs
lds
pop
dec
lods
xlat
mov
mov
xchg
mov
mov
shr
mov
push
int
rcl
call
dec
out
jae
mov
out
fs
add
cmp
mov
pop
pushf
(bad)
mov
xchg
mov
fsqrt
push
loope
loop
lock
scas
dec
mov
jno
push
gs
and
sti
xchg
and
and
adc
scas
inc
inc
inc
cdq
sub
mov
mov
test
mov
mov
adc
out
push
mov
jo
dec
test
sar
mov
mov
jecxz
(bad)
fs
xor
jo
stos
jmp
pop
mov
stos
leave
dec
pop
jmp
or
add
cmps
es
xor
cli
fidivr
call
or
das
mov
adc
and
pop
inc
scas
ss
sbb
cdq
or
xchg
fwait
cmp
cmp
inc
xchg
adc
out
fisubr
inc
xor
add
inc
sti
and
idiv
and
and
mov
or
cmc
sbb
xor
stos
cmps
ja
inc
adc
mov
adc
idiv
outs
mov
sti
jmp
add
mov
inc
aaa
aad
jg
adc
ror
popf
pop
outs
jg
push
adc
adc
lods
inc
mov
movs
arpl
fistp
adc
pop
sub
sub
push
aaa
jge
pop
xchg
into
push
cld
sub
or
or
add
cld
nop
iret
or
icebp
cmp
push
sub
loope
fcomp
mov
xchg
adc
ds
outs
or
mov
lahf
arpl
adc
pusha
paddsb
sub
fadd
std
sub
cmp
ret
(bad)
clc
std
mov
sbb
mov
mov
sti
mov
sub
mov
cmp
mov
push
adc
push
scas
inc
dec
mov
cld
call
sbb
lock
aam
(bad)
adc
cmp
xor
addr16
mov
stos
add
pop
push
mov
mov
fisubr
iret
scas
xchg
daa
mov
push
cmc
test
jb
(bad)
xor
sbb
dec
mov
cdq
scas
xchg
mov
sub
aaa
add
out
sub
pop
xor
and
xor
in
push
mov
pop
push
pop
push
bound
add
mov
ret
sbb
aam
in
add
mov
mov
imul
bndstx
lods
mov
ror
out
mov
add
cmps
rcl
jne
mov
in
and
pop
add
and
pop
clc
and
mov
push
cmp
xor
sbb
outs
in
push
ins
mov
jmp
test
pop
mov
cli
sahf
push
pusha
aam
(bad)
or
pop
dec
ror
sub
aaa
mov
cmp
fnstcw
sub
pop
imul
lods
pop
mov
pop
popa
mov
stos
iret
jo
xchg
jne
push
(bad)
fs
call
pop
ja
xor
into
pop
xchg
jl
rcr
jmp
adc
cwde
cmp
jb
jmp
ds
adc
xchg
jbe
add
gs
gs
in
xor
enter
cmps
inc
aad
lds
(bad)
mov
and
mov
stos
daa
cmp
jb
(bad)
cdq
nop
aad
jbe
xor
cdq
popa
and
inc
adc
or
call
ins
push
loope
mov
addr16
nop
cli
ds
mul
out
(bad)
pop
push
sahf
adc
or
jp
(bad)
xchg
push
in
test
stos
fld
add
inc
sahf
js
call
outs
push
add
pop
aam
mov
stos
mov
adc
scas
mov
jl
fdivr
add
icebp
xchg
or
or
gs
mov
mov
addr16
icebp
add
aad
mov
ins
outs
test
out
xor
push
shl
sbb
add
sub
iret
mov
callw
mov
pushf
clc
push
sbb
xchg
inc
mov
(bad)
fadd
sub
adc
cmp
inc
dec
dec
repnz
mov
push
scas
and
loop
out
mov
add
pause
mov
xor
xor
add
imul
dec
fldcw
adc
inc
xchg
fst
loop
add
es
sti
outs
lods
test
cmp
push
dec
je
inc
outs
cmps
call
sti
jmp
add
or
mov
xor
(bad)
div
mov
mov
push
clc
jle
pand
add
das
loopne
mov
shl
(bad)
enter
jle
fnstenv
cdq
jp
mov
cmp
sbb
jae
fisubr
movs
inc
adc
xor
push
mov
mov
cwde
xchg
and
mov
jmp
pop
adc
xchg
sbb
push
mov
and
cdq
mov
rol
ret
cmc
pop
lds
dec
sub
mov
or
nop
inc
mov
pop
mov
aam
push
jae
dec
aas
adc
sub
in
test
cmp
mov
dec
sbb
ss
pop
(bad)
out
cmp
js
inc
stc
sub
leave
stos
xchg
(bad)
pop
push
sbb
push
dec
inc
outs
inc
mov
dec
hlt
mov
ds
xchg
ret
movs
xchg
cdq
shl
call
outs
(bad)
mov
push
push
push
xchg
ret
mov
xchg
sar
mov
jb
mov
xor
in
mov
push
(bad)
push
mov
add
sub
pop
xchg
bnd
test
out
call
shr
cmp
out
jo
xchg
div
mov
mov
cdq
xchg
fmul
in
outs
adc
(bad)
sbb
popf
imul
sbb
mov
xor
int
adc
movs
or
jle
jl
mov
cmps
adc
or
adc
popf
dec
xor
fistp
push
mov
fldl2e
test
pop
(bad)
and
and
mov
jbe
js
sbb
stos
jne
sub
sbb
and
and
out
sub
clc
push
cmp
jmp
fcomp
pop
or
lea
popf
out
add
cdq
retf
outs
out
mov
cli
gs
add
jp
jae
dec
xchg
xor
scas
and
and
call
aad
sbb
mov
or
bswap
xor
xchg
jbe
adc
mov
iret
sbb
(bad)
jl
in
aam
mov
mov
nop
es
xor
push
xchg
push
push
push
mov
sbb
pop
imul
inc
mov
jle
call
inc
aam
hlt
fsubr
sbb
add
and
movs
stos
dec
or
inc
and
lock
jecxz
or
lods
test
ret
sbb
in
ficomp
ficom
push
scas
and
push
jnp
mov
sar
les
shl
pusha
dec
add
cmps
xlat
cmps
popf
mov
pop
jg
xor
jae
into
cmp
ss
inc
rol
cmps
into
push
cmp
aaa
out
add
jp
cmp
jp
bound
mov
and
sti
fcmove
and
in
xor
ret
cmps
pop
in
outs
and
in
rcl
push
mov
push
jmp
add
jle
lea
adc
fcom
add
fwait
sub
stc
add
loopne
sbb
in
cmc
sahf
call
push
jne
jmp
xlat
stc
adc
lahf
sub
push
mov
jb
std
test
aaa
je
nop
sub
iret
pop
hlt
test
dec
pop
mov
xchg
cs
sbb
mov
push
xor
cld
pop
in
icebp
mov
mov
imul
sbb
jno
out
xor
les
inc
int3
jl
clc
add
leave
lea
add
jmp
lock
mov
inc
call
jae
mov
push
pusha
add
loope
adc
mov
imul
jmp
jb
inc
mov
mov
xchg
pop
push
dec
mov
sbb
mov
ret
add
xor
rdpmc
mov
inc
(bad)
jp
add
and
adc
mov
or
push
(bad)
xor
pop
pop
loopne
mov
xlat
jno
sub
xchg
or
dec
pop
(bad)
jg
ins
mov
cdq
loopne
popa
xor
cli
add
in
movs
pop
movs
mov
repz
gs
jle
aaa
pushf
shr
out
js
(bad)
leave
js
add
push
mul
cmc
gs
push
pop
leave
lahf
inc
add
in
mov
mov
in
adc
mov
jb
dec
push
mov
sbb
stc
push
sbb
sbb
push
mov
jb
mov
in
jecxz
fisubr
mov
int
cmps
aad
or
xchg
fnstcw
sbb
jge
in
lds
ror
enter
pop
push
add
mov
cdq
cmps
cwde
repnz
std
dec
lock
add
sahf
jg
imul
jge
movs
xor
dec
leave
sbb
out
mov
aam
adc
push
and
jp
dec
mov
pop
(bad)
popa
pop
std
sub
jns
xchg
pop
and
push
ins
jno
leave
test
addr16
jae
ja
inc
sub
(bad)
clc
je
retf
inc
sbb
jp
inc
pop
test
fld
cmc
jbe
inc
jo
mov
cld
push
out
dec
lock
add
fild
xchg
test
xlat
or
std
cmp
jbe
jbe
outs
jae
out
movs
lock
push
scas
inc
cmp
mov
ret
rol
(bad)
ins
pop
inc
(bad)
and
push
jl
aam
jno
loope
push
push
xchg
lahf
test
bound
sbb
mov
imul
(bad)
or
retf
jnp
mov
out
jb
retf
inc
pusha
inc
jbe
inc
enter
or
je
add
mov
fild
js
cwde
pop
mov
jle
(bad)
cld
fwait
adc
fidiv
and
enter
fidiv
pop
lahf
and
sti
push
push
(bad)
mov
dec
jl
(bad)
fstp
dec
ss
imul
cmp
mov
ror
in
out
jge
mov
add
and
imul
test
jmp
push
push
out
vpcmpgtw
lods
sub
xchg
mov
mov
lock
cmp
mov
repz
and
lods
mov
and
sub
jp
lock
mov
repz
in
arpl
outs
cmp
shr
push
shl
dec
or
add
xlat
mov
in
or
dec
jo
mov
sub
mov
rcr
call
dec
in
out
jbe
jns
xchg
xchg
loope
adc
lods
sahf
lock
mov
inc
push
adc
test
mov
xor
add
mov
xlat
xchg
xor
push
inc
outs
inc
push
das
or
jl
xor
xchg
xchg
sbb
cdq
xchg
mov
jle
stc
imul
hlt
lock
(bad)
retf
ror
or
int3
js
rcr
jns
push
aam
arpl
push
in
ins
jns
repz
dec
mov
fwait
mov
inc
inc
jg
pop
cmp
into
in
lock
lods
(bad)
sbb
dec
pop
cmc
sub
movs
movs
dec
ret
mov
xchg
(bad)
mov
mov
pop
outs
sbb
cmps
cdq
sub
outs
sbb
dec
add
mov
mov
das
and
xor
fiadd
mov
mov
xor
dec
repz
rcl
mov
aad
pop
pop
fdivr
iret
mov
mov
mov
daa
ja
cmp
pop
fstp
daa
shl
call
adc
or
mov
fiadd
jmp
inc
push
jge
lods
and
lods
sub
scas
sbb
mov
into
cmp
fiadd
xchg
cld
xor
aam
repz
sti
aam
lea
loopne
cli
inc
rol
jno
ret
mov
aas
and
push
call
mov
dec
rcr
call
cmps
jp
mov
push
push
(bad)
aad
mov
mov
or
xor
push
sbb
cmp
jg
fmulp
aas
sbb
adc
mov
lock
or
fmul
fiadd
xchg
pop
mov
sbb
in
mov
add
cmp
ins
mov
mov
rcl
xchg
(bad)
sti
dec
ja
mov
aad
xor
mov
lods
sbb
sub
retf
(bad)
imul
call
inc
adc
pop
mov
xchg
imul
xchg
sbb
or
cmp
add
fs
mul
cmps
out
mov
sub
jg
leave
jl
jg
mov
jno
jnp
and
cli
push
popf
dec
ins
ss
dec
in
fsin
push
lods
pop
jo
mov
das
shl
mov
xchg
mov
scas
ins
(bad)
je
inc
in
adc
jnp
cmp
pushf
or
jmp
pop
(bad)
(bad)
jecxz
mov
dec
cmp
mov
cmp
fwait
addr16
xor
dec
sub
call
pop
out
or
mov
int3
pop
push
imul
shr
xor
ins
das
inc
mov
lahf
adc
mov
data16
add
or
int
add
and
daa
jns
shl
retf
lds
cmp
add
push
enter
xor
mov
in
daa
and
jnp
mov
jnp
stc
cmc
adc
sub
dec
out
repnz
fadd
cmps
push
cwde
and
outs
icebp
sar
test
mov
or
xor
fisub
ror
hlt
in
mov
pop
jo
mov
shl
cdq
sar
pop
pop
push
cmp
dec
fisub
jbe
int
in
push
mov
push
sbb
sbb
push
pusha
and
mov
push
ds
adc
ret
in
push
std
out
mov
mov
iret
(bad)
pop
icebp
xchg
nop
dec
(bad)
imul
sub
icebp
jno
xor
cdq
xor
outs
inc
mov
pop
add
mov
add
xor
jl
jae
mov
cmp
pop
xlat
xor
sbb
movs
addr16
jbe
jne
or
mov
loope
stos
cmp
mov
adc
dec
push
mov
mov
xchg
in
lea
lods
push
loopne
js
movs
aam
sti
lods
add
ins
jbe
pop
imul
adc
(bad)
(bad)
aaa
and
sub
adc
pop
add
jg
and
adc
adc
xor
push
mov
cmp
xor
repnz
push
sti
test
or
sub
outs
push
mov
sbb
leave
jmp
xor
arpl
mov
sbb
fist
lods
xchg
pop
mov
pop
jae
sub
popf
cmc
fbstp
jae
mov
xlat
xor
iret
fst
or
inc
not
mov
push
in
fcom
ret
add
sbb
cmp
xchg
sbb
cmp
mov
cld
es
ror
sbb
(bad)
dec
jb
add
or
jnp
sub
addr16
cmp
jnp
inc
dec
jg
fsub
xchg
dec
xchg
jmp
cmp
imul
fadd
sbb
push
cmp
lods
add
push
adc
repz
xor
mov
sub
loopne
loopne
cmps
gs
cmp
mov
jb
mov
push
mov
jo
adc
xor
pop
xor
cld
mov
loope
lock
(bad)
sahf
(bad)
arpl
data16
push
(bad)
cmp
call
sahf
cwde
mov
xlat
and
jnp
ja
fsubp
into
pop
jmp
shl
xor
dec
mov
cld
clc
cmp
xchg
jbe
sar
call
inc
inc
sar
imul
xchg
xor
lods
test
dec
pop
dec
aas
mov
fwait
inc
mov
ret
cmp
mov
es
test
hlt
iret
aad
inc
pop
addr16
and
inc
(bad)
jb
cmps
cs
sbb
xchg
xor
xchg
pop
or
icebp
or
cmps
in
out
mov
popa
lods
out
pushf
and
shr
sbb
jb
mov
xchg
dec
popf
pop
sbb
test
fild
adc
pop
inc
push
or
cmp
ss
sub
in
xor
cmp
xchg
test
out
dec
xchg
adc
or
jecxz
cmps
(bad)
mov
sub
sbb
fisubr
xor
shl
jmp
xor
rcl
and
sbb
push
xor
jns
mov
xchg
mov
dec
je
loop
into
std
dec
mov
push
es
cmp
mov
xchg
aad
shr
xchg
(bad)
sti
lock
jae
sub
sti
jp
in
ror
loopne
inc
or
outs
add
and
mov
dec
mov
jo
mov
ins
aaa
in
loopne
add
push
in
xchg
addr16
sub
add
js
sub
popa
mov
int3
adc
dec
mov
mov
cli
and
ss
and
pop
test
loopne
xchg
fcmovne
mov
xchg
test
fistp
jo
cmp
mov
clc
fstp
movs
ror
sbb
push
mov
sti
dec
and
in
addr16
sub
pop
mov
idiv
pop
fdivr
mov
shl
fsub
hlt
aaa
jne
out
xchg
or
test
dec
test
jmp
enter
xchg
sbb
add
jl
outs
fdiv
dec
adc
push
in
ficom
sbb
mov
es
sub
les
dec
pushf
test
das
cmovp
cmps
scas
xlat
loope
xchg
movs
test
mov
ins
(bad)
xchg
adc
sub
les
xor
fs
hlt
clc
inc
mov
xchg
cmp
pop
or
mov
aaa
cmp
mov
inc
xor
mov
jl
in
xchg
sub
fiadd
(bad)
pop
xchg
cmp
jl
add
dec
mov
cld
loope
mov
int3
inc
xor
nop
mov
fld
clc
int3
test
cmp
ins
sub
cli
loopne
scas
adc
or
pop
xchg
aad
das
sbb
mov
inc
outs
mov
data16
sub
jge
clc
inc
adc
jns
xor
jb
test
mov
lods
mov
cld
out
sbb
push
sbb
inc
fmul
cmp
sbb
mov
(bad)
shl
xlat
xchg
jmp
mov
into
and
loop
outs
stos
mov
mov
cmps
mov
xor
fcmovne
inc
mov
sar
pop
jae
leave
add
push
adc
rol
loope
aaa
mov
xor
movups
sub
sub
sahf
(bad)
in
pop
rcr
(bad)
adc
(bad)
shl
pop
pop
push
xchg
cmp
dec
and
aas
xchg
adc
outs
inc
(bad)
mov
lods
inc
xlat
shl
repnz
test
xchg
ret
hlt
retf
mov
adc
sub
sub
add
retf
ss
mov
lock
push
(bad)
adc
and
test
mov
hlt
and
das
out
jb
test
or
push
cdq
int
xchg
nop
stc
mov
fwait
inc
adc
fstenv
idiv
jne
push
imul
and
icebp
cmp
cdq
jno
dec
(bad)
cmp
cmps
xchg
dec
fidiv
mov
or
xchg
sbb
rcl
cwde
je
pop
sub
imul
mov
dec
mov
jmp
jge
mov
adc
in
cmps
int3
or
inc
add
jae
pop
sub
inc
test
jecxz
lahf
out
xchg
push
je
mov
or
or
push
(bad)
or
push
xchg
mov
and
fisttp
fsubr
and
sub
div
xchg
xchg
sbb
mov
cli
stos
pop
adc
jp
mov
cli
mov
dec
xchg
xor
into
jg
pop
out
cmps
fwait
jmp
xchg
dec
mov
adc
test
and
push
xchg
rol
cmp
leave
lea
push
xchg
shl
and
sub
pop
pop
aam
aaa
sbb
jns
or
repnz
push
xlat
repnz
out
and
pop
stos
gs
fsubr
fld
sub
popa
retf
cmp
mov
push
outs
inc
xchg
aas
pop
xor
call
jp
test
or
sbb
in
fmul
(bad)
lods
scas
mov
xor
daa
or
sub
pushf
pusha
mov
xchg
cmp
add
imul
out
ss
ins
popa
pop
pop
das
hlt
dec
push
test
icebp
mov
gs
(bad)
aad
mov
popa
in
xchg
and
mov
sbb
rol
f2xm1
and
ins
pop
or
mov
shl
sub
xchg
fimul
int
adc
mov
cs
aad
mov
imul
jmp
sub
mov
sub
repz
call
retf
cmps
(bad)
(bad)
(bad)
add
mov
or
mov
pop
loope
test
mov
fldcw
pop
out
push
jnp
rcr
fst
pop
mov
mov
push
rcr
pcmpgtw
out
ins
rol
ficomp
mov
fwait
pop
(bad)
cmp
ins
call
leave
call
add
cmps
jmp
pop
jle
sub
mov
retf
jge
fist
std
cmp
xchg
popf
cmp
jo
movs
inc
cwde
pop
or
dec
adc
fistp
inc
addr16
int
xlat
jae
imul
sub
(bad)
mov
mov
add
ins
mov
in
inc
fmul
sbb
mov
add
jno
push
sti
sub
mov
mov
xor
sub
pop
jb
mov
gs
shl
mov
xchg
jae
retf
mov
nop
popa
pop
fild
stos
shl
ss
inc
test
cdq
test
add
inc
cwde
movs
test
sar
jp
out
outs
mov
or
cmp
shr
std
retf
mov
dec
imul
xchg
addr16
mov
test
xchg
lds
shl
add
fcomp
mov
es
test
stos
repnz
inc
or
rol
nop
inc
out
cmp
push
cli
cmp
or
ins
rsm
dec
les
aam
dec
imul
and
or
cmc
push
in
push
add
fucomip
mov
xor
lods
dec
arpl
hlt
inc
rcr
test
mov
xchg
jmp
and
or
neg
fdiv
inc
sti
dec
lock
pop
imul
inc
test
lea
xchg
jmp
push
jle
in
in
ins
fsub
xchg
cli
cmp
pop
clc
xchg
aam
jb
xlat
daa
loope
push
pop
adc
xchg
jecxz
cli
mov
inc
(bad)
xor
test
xlat
cld
gs
ret
fsubr
out
jno
and
aad
retf
int
loopne
movs
dec
pushf
dec
mov
int
adc
sub
das
pop
movs
adc
add
jno
enter
dec
das
into
hlt
bt
cmps
das
cmp
ss
call
xchg
aad
(bad)
or
retf
shr
movs
xor
pop
jbe
xor
int
inc
int
push
add
mov
add
jmp
xor
aam
jns
and
int
xchg
xlat
adc
push
pop
shl
clc
mov
test
inc
jns
mov
jecxz
jp
push
test
rcl
or
scas
push
ficom
adc
jmp
sti
dec
mov
push
pusha
mov
lahf
(bad)
mov
cmps
sub
xchg
mov
ins
jo
adc
xor
sub
es
out
enter
out
sbb
adc
shl
jmp
mov
or
sbb
push
lods
call
push
les
and
cmp
or
push
xlat
ins
test
xchg
inc
jmp
pop
xchg
or
xor
imul
retf
inc
shl
jae
sub
(bad)
aam
push
jge
inc
inc
fcomp
ret
xchg
nop
in
(bad)
xor
mov
jne
sub
call
test
in
mov
sub
fidivr
sysret
jmp
inc
ins
fnstsw
lods
push
push
fldenv
dec
push
aam
fist
xchg
sub
pop
fs
and
pop
push
popa
daa
mov
test
inc
fucomip
lea
sub
ins
stos
jge
push
and
sub
test
or
add
cmp
js
cwde
call
jl
test
clc
retf
repz
ss
fisubr
push
push
es
repnz
add
inc
and
(bad)
pop
retf
cmp
dec
or
jbe
mov
mov
add
aas
pop
bound
js
lea
xchg
push
mov
in
fsubp
mov
jns
cs
xchg
mov
dec
cmp
call
xchg
mov
push
js
repz
call
iret
sbb
dec
jno
sbb
xchg
xchg
push
sbb
repz
fsubrp
pop
sar
sub
in
jns
push
adc
xchg
not
mov
icebp
xchg
enter
cli
ret
cmp
clc
push
adc
out
aaa
mov
(bad)
jmp
outs
(bad)
das
outs
dec
and
call
in
jl
dec
icebp
js
retf
mov
pop
mov
mov
stos
cmp
cwde
addr16
icebp
pop
xor
push
rcl
popa
sub
cld
sub
xor
lea
add
sahf
cli
inc
pop
movs
fmul
cwde
xchg
js
bound
xor
outs
pop
movs
out
das
cmp
fisubr
out
push
lds
sub
int3
cmps
inc
pushf
pusha
xor
out
scas
aam
ret
call
pop
popf
aaa
ja
add
add
sar
and
dec
cmc
cmp
enter
nop
pushf
std
mov
paddw
xchg
loopne
(bad)
xor
ds
dec
mov
jp
dec
popf
test
ret
mov
sub
jbe
cmp
jae
and
test
dec
ds
inc
sub
inc
loopne
xor
xchg
sahf
sbb
pop
jne
pop
fdivr
sbb
clc
dec
dec
adc
jno
pop
cmp
scas
or
ins
lods
and
cwde
cmp
stos
push
aas
dec
pop
or
ficomp
ds
mov
fcomp
fs
dec
and
xchg
lods
daa
loop
jnp
(bad)
mov
out
push
push
mov
mov
sub
sub
stos
nop
add
pop
test
ret
sar
ror
cwde
cmps
jns
push
(bad)
cdq
push
add
xchg
pushf
xchg
scas
add
mov
mov
lods
adc
pop
leave
and
rcr
movs
icebp
add
js
mov
mov
jge
cld
xor
adc
(bad)
cmp
pop
int
shr
out
mov
xchg
cld
xchg
movs
adc
div
lods
bound
test
cmp
xchg
test
popa
clc
dec
adc
push
adc
mov
xchg
retf
dec
sub
iret
call
shl
sbb
nop
movs
ret
std
mov
jne
and
pushf
xor
hlt
sub
cmc
mov
add
cmp
or
or
cmc
xor
je
jp
pop
retf
xchg
push
push
xor
mov
fs
je
int3
dec
out
pop
xchg
xchg
or
mov
sub
add
mov
popf
in
adc
ret
mov
jns
mov
fldcw
jo
in
fiadd
fidivr
pushf
in
shr
inc
dec
imul
adc
add
aas
jns
push
add
cmp
ret
xchg
fcom
cwde
and
(bad)
test
rcr
mov
cmp
aad
out
test
lahf
test
and
jl
inc
es
retf
dec
rol
sbb
imul
dec
jne
jne
jne
icebp
sub
jno
rcl
js
pop
imul
mov
or
fadd
(bad)
mov
sahf
sar
call
fild
ins
sbb
inc
outs
call
jb
cmp
ret
popf
arpl
les
outs
adc
in
dec
push
rol
add
stos
jl
aaa
adc
push
jne
retf
rcr
(bad)
and
pop
mov
out
push
inc
lea
push
test
enter
inc
dec
std
out
les
fadd
add
cmp
repz
push
stc
sbb
adc
call
jmp
jmp
ss
mov
fdiv
fldcw
test
pop
push
jmp
das
mov
minps
stc
fcmovbe
pop
push
ret
sub
adc
mov
inc
pop
das
sahf
sub
sub
xor
movs
mov
add
adc
das
cmp
loop
sahf
mov
xchg
lea
dec
movs
out
pop
jnp
xchg
push
and
push
add
mov
das
aad
xor
jmp
pop
inc
adc
out
(bad)
gs
push
push
jmp
pop
sub
inc
in
test
mov
add
test
xchg
push
push
fs
cmp
retf
sub
push
pop
sub
mov
gs
hlt
dec
mov
lods
mov
into
enter
call
movs
and
leave
and
cmp
repz
out
mov
(bad)
dec
sbb
jo
push
inc
or
mov
mov
push
and
retf
xchg
sub
xchg
push
jmp
dec
shr
pop
xor
loopne
mov
lods
sbb
pusha
jne
fiadd
add
shl
and
or
cmp
lods
popf
xchg
xor
mov
or
inc
enter
sbb
jns
test
icebp
mov
inc
mov
in
mov
rcl
inc
push
div
call
lahf
pushfw
pop
bound
and
iret
xchg
add
and
aaa
jb
test
dec
mov
adc
stos
mov
cld
lock
mov
aam
dec
cmp
dec
das
int3
arpl
mov
and
call
dec
sub
dec
dec
jge
dec
adc
jne
inc
xchg
mov
pop
pusha
stos
jnp
dec
and
mov
cmc
ss
in
xor
sbb
dec
cmp
jns
inc
sbb
arpl
sub
fdiv
inc
cmp
out
ins
mov
jp
pop
(bad)
or
add
xchg
adc
out
fstp
mov
aas
or
jbe
xchg
gs
inc
push
mov
cmp
mov
cmp
loopne
push
inc
sub
add
jl
add
adc
sub
imul
adc
and
and
into
push
sbb
add
xor
aaa
dec
push
pusha
clc
push
out
pusha
cmc
push
aaa
add
jo
sbb
aad
sbb
in
push
scas
pop
push
mov
adc
call
(bad)
xchg
add
jbe
(bad)
fidiv
into
jmp
inc
and
ins
hlt
mov
jle
xchg
ds
shl
fisubr
mov
icebp
jb
jecxz
imul
in
dec
aaa
test
adc
(bad)
shl
fsub
push
push
mov
mov
imul
gs
ss
aam
cmc
pop
std
mov
push
pop
add
in
popf
pop
jmp
psadbw
sub
inc
lods
movs
mov
(bad)
sar
pop
push
inc
(bad)
shl
pusha
dec
imul
dec
mov
sti
retf
(bad)
shl
clc
jno
inc
mov
cmp
cwde
mov
mov
mov
xchg
mov
inc
inc
js
sub
mov
adc
push
fldlg2
shr
push
mov
fmul
mov
shl
lods
stos
aaa
popf
movs
lods
fisttp
fs
sbb
dec
or
add
xchg
ficomp
aaa
dec
mov
into
push
xor
sbb
icebp
mov
pop
loope
or
sbb
add
fs
int3
dec
add
stc
or
pop
push
inc
push
cmp
adc
add
test
adc
imul
inc
adc
jle
clc
lock
mov
fcom
mov
(bad)
mov
dec
(bad)
push
add
mov
mov
inc
mov
lock
sub
inc
add
adc
push
lods
inc
es
add
jge
pop
sub
push
inc
mov
mov
sub
mov
and
xor
popa
scas
sbb
sub
mov
je
mov
jmp
movs
adc
sar
adc
xchg
mov
push
aaa
(bad)
dec
leave
cmps
into
fisttp
into
jle
push
push
mov
push
aad
and
dec
cdq
sub
and
test
mov
add
cmp
out
outs
sbb
ins
xor
loope
sbb
cmp
clc
jb
stc
jecxz
cwde
mov
(bad)
or
test
pop
clc
adc
mov
jmp
add
jns
and
retf
pop
hlt
push
or
inc
mov
pop
jo
xchg
leave
sti
ret
rcl
mov
add
call
jo
mov
(bad)
jbe
push
and
sub
xor
or
repz
push
popa
xchg
xor
sub
shl
sub
and
mov
sub
dec
or
gs
add
adc
dec
jmp
pusha
pop
xor
stos
(bad)
push
mov
(bad)
adc
and
fistp
stos
mov
jbe
shl
lods
and
dec
outs
inc
pop
and
loop
pusha
inc
pop
add
xchg
mov
add
cmc
shl
mov
push
js
jb
xor
mov
mov
ins
jne
aam
push
std
cdq
test
mov
or
punpcklbw
adc
loop
jae
and
push
inc
out
xor
retf
lods
retf
mov
adc
nop
jns
jle
xchg
sbb
inc
(bad)
div
mov
or
jle
mov
cmp
clc
mov
push
xchg
inc
add
addr16
add
sti
addr16
cli
mov
cmp
inc
scas
add
or
clc
mov
lea
pop
fisub
jnp
xor
xchg
movs
mov
fwait
repnz
ror
std
or
push
jmp
mov
and
lahf
dec
add
sbb
pop
pop
shr
push
shl
add
fidivr
outs
inc
into
clc
pop
lea
xchg
sub
dec
iret
sar
xor
sub
ror
es
inc
stos
out
bnd
out
popf
mov
mov
add
icebp
add
scas
aad
(bad)
pop
fdiv
cs
inc
push
enter
fistp
push
add
and
fnsave
cmp
sbb
pop
inc
rcr
gs
and
(bad)
mov
cmp
fs
(bad)
xchg
sbb
and
mov
jbe
sbb
popf
or
sub
ds
lods
mov
test
jle
aaa
and
arpl
xor
add
outs
ret
stc
pop
or
sub
lds
mul
popf
xchg
pop
das
xchg
int3
jmp
pushf
mov
int
fs
xchg
arpl
xor
adc
js
xchg
fcmovnbe
mov
sub
aam
push
cwde
cmp
enter
out
ins
xor
and
je
pushf
adc
out
mov
ror
push
fstp
leave
(bad)
rcl
in
xacquire
popf
(bad)
cld
retf
gs
cmp
add
add
cmp
test
dec
mov
sub
xor
clc
(bad)
not
sahf
pop
cli
scas
sahf
pop
mov
cs
inc
fcmovne
cmp
pop
or
mov
sub
rcl
pop
shr
mov
mov
dec
mov
popf
out
mov
pop
xchg
pop
dec
mov
jnp
push
lds
or
or
push
jl
enter
test
fs
cwde
xlat
mov
and
push
cmp
shl
mov
js
xchg
sbb
dec
loopne
dec
or
adc
xor
add
jne
add
jo
ss
jae
imul
data16
(bad)
(bad)
fist
sub
es
repnz
xor
fild
loope
mov
popa
sub
scas
outs
mov
jne
jns
dec
xchg
push
inc
cmp
outs
movs
cmp
xchg
push
or
or
es
pop
jg
xchg
sbb
mov
sti
add
mov
jne
in
xchg
sbb
ret
push
mov
sub
add
sub
add
and
int3
cmps
lods
repnz
pop
out
jbe
mov
adc
aad
or
push
mov
jb
fild
xor
pop
inc
mov
div
gs
mov
test
fisubr
(bad)
fadd
das
retf
inc
add
mov
test
push
push
dec
repz
out
lods
loop
mov
jae
stos
xchg
pop
cmps
in
push
mov
ins
fcmovne
push
(bad)
jg
popa
adc
dec
imul
shl
repnz
push
xchg
add
add
ret
mov
dec
sbb
mov
aam
pop
xchg
pmulhuw
jne
pop
cmp
mov
adc
inc
and
jns
(bad)
cmc
cmc
sub
int
neg
(bad)
loope
xchg
push
jbe
pop
outs
call
stc
sahf
les
mov
enter
xlat
add
fs
test
shl
in
mov
jmp
imul
xchg
rcl
push
xlat
dec
mov
dec
test
sahf
xchg
aad
stos
out
mov
dec
movs
repnz
mov
ror
cmp
xor
push
xor
jmp
fnsave
mov
cmc
clc
inc
jno
fldcw
dec
pushf
cli
xchg
pop
and
fidiv
jns
in
out
es
jge
cmp
and
pop
cmps
in
mov
inc
mov
fs
(bad)
jle
fdivrp
push
mov
fcmovu
stc
(bad)
push
test
inc
jmp
xor
add
mov
aad
mov
jb
fimul
xlat
pop
shl
dec
pop
inc
ret
test
sbb
or
nop
sub
adc
xchg
(bad)
and
ret
xchg
sub
and
add
sbb
mov
mov
push
(bad)
call
mov
pop
pop
cdq
push
mov
outs
jbe
jecxz
add
iret
mov
js
jbe
cmp
call
cmp
lock
loope
std
pop
mov
repnz
inc
sbb
sar
pop
sub
leave
in
scas
sahf
ins
es
inc
loope
adc
icebp
mov
sub
movs
adc
lds
xlat
mov
loope
jnp
cmp
lahf
and
movs
xor
xchg
aam
clc
xchg
and
xchg
fmul
mov
sahf
ret
mov
imul
pop
add
lock
inc
addr16
cmp
fidivr
ror
icebp
rol
sbb
dec
xor
mov
push
test
pop
stos
shl
mov
fmul
xor
ds
xor
push
xchg
inc
mov
jmp
jo
inc
in
sbb
mov
enter
pop
xchg
add
or
ins
xor
ror
mov
push
loop
repz
jmp
repz
repnz
jle
mov
sub
inc
fucom
daa
test
stos
pop
loope
xchg
sbb
(bad)
push
ret
ss
and
call
retf
and
mov
push
push
sub
adc
ds
and
fisubr
inc
repnz
pop
ds
fmul
cs
dec
cmp
pop
sbb
mov
nop
pop
add
leave
lahf
sub
inc
jecxz
push
cmp
sti
inc
loop
js
pusha
lods
add
ins
mov
scas
in
test
daa
sub
or
mov
(bad)
enter
into
je
sbb
and
cmps
ins
pop
retf
retf
test
clc
popf
addr16
outs
push
imul
xchg
ds
sub
test
mov
retf
(bad)
int3
imul
fcomp
or
movs
cmp
push
in
push
fbld
lds
std
es
repnz
push
ja
jecxz
into
shl
out
add
xchg
imul
data16
push
adc
daa
mov
cwde
cmp
lock
out
sub
dec
inc
cmp
cmp
push
mov
dec
and
movs
add
pop
fdivr
adc
(bad)
push
pop
scas
mov
pushf
mov
std
popa
fimul
mov
push
push
xor
xchg
add
pop
out
imul
jmp
xchg
aas
retf
mov
mov
pop
pop
dec
xchg
mov
fisubr
mov
sbb
mov
jp
loopne
aad
mov
mov
push
mov
pushf
stc
pop
jne
or
scas
push
nop
add
aam
mov
lds
add
std
mov
loope
cmp
aad
jmp
jo
call
cmps
ret
sbb
hlt
fs
mov
cld
stos
cld
setl
mov
xchg
sbb
lds
stos
ja
iret
dec
cmp
cmc
rcl
push
cmp
dec
cmp
mov
pop
stc
les
pop
shl
pop
ins
adc
popf
and
aas
dec
jle
xchg
cmp
aaa
shl
or
push
pop
stos
(bad)
xlat
add
mov
sbb
je
loope
fbstp
dec
in
inc
cdq
bswap
sub
xchg
sti
loope
jg
adc
(bad)
cmp
fdivr
mov
or
jae
mov
call
in
scas
pop
jp
inc
mov
mov
mov
jns
sub
retf
xchg
out
inc
in
sbb
int
arpl
sbb
into
nop
pushf
inc
xchg
xchg
enter
into
push
hlt
mov
mov
jne
shr
loopne
xor
and
imul
sbb
call
sti
or
les
ds
bound
push
iret
int3
sahf
sbb
adc
scas
push
aaa
loopne
sti
(bad)
mov
add
fld
dec
cs
call
mov
cmp
lods
(bad)
clc
mov
inc
cwde
pushf
div
cmp
int
or
jmp
fbld
ret
idiv
daa
test
icebp
pavgw
and
je
mov
xchg
pop
in
mov
retf
xchg
cld
loope
jne
sbb
leave
xchg
(bad)
or
cmp
lock
jbe
stos
fiadd
retf
enter
js
inc
mov
jno
dec
scas
mov
je
mov
and
repz
adc
sub
ins
dec
lea
sti
xchg
cmp
cmp
scas
add
or
pop
inc
lods
ror
ror
adc
push
jecxz
sbb
in
rol
sti
or
pop
jmp
jb
add
push
cli
clc
dec
sti
cwde
ficomp
sbb
xchg
jae
iret
ja
shr
cmp
test
test
inc
mov
mov
dec
jbe
sbb
stc
cmp
pop
pop
mov
xor
ret
ds
out
adc
mov
cwde
test
fldenv
test
scas
mov
lea
nop
and
popa
ins
and
mov
fpatan
pop
cmp
in
jnp
xor
mov
cmp
inc
mov
cmp
sbb
push
ret
pop
ins
retf
(bad)
(bad)
std
and
cmp
lock
add
adc
and
add
test
push
cmp
push
test
shl
(bad)
dec
xor
repz
mov
xlat
xor
cmp
test
push
push
int
cmp
mov
ins
movs
or
cli
inc
jl
loopne
xchg
test
ret
fwait
mov
mov
ror
inc
and
cld
ror
jb
stos
hlt
dec
adc
xor
pop
adc
imul
iret
push
adc
popa
jb
nop
xor
or
sbb
fld
or
je
dec
mov
push
popa
jns
push
jb
pop
mov
pop
push
test
outs
aaa
sbb
test
fwait
mov
aad
cdq
add
pop
jno
cmp
push
cmp
jnp
pop
push
or
jne
stos
pop
or
cmove
mov
ficom
bound
ins
pop
xor
or
adc
xchg
mov
(bad)
mov
jo
mov
lock
outs
pop
call
icebp
sub
das
mov
sar
in
das
rcr
pop
scas
push
xchg
sbb
cmp
xchg
cwde
test
adc
xor
gs
arpl
add
aas
dec
ins
xor
xor
in
(bad)
jne
lods
mov
mov
sbb
ffree
pop
movs
test
sbb
add
xor
scas
or
adc
dec
bound
mov
fisub
push
fistp
gs
fcomi
mov
gs
sub
or
jg
imul
or
pop
pop
sbb
pop
int3
aaa
je
fadd
pusha
rcr
dec
js
ror
inc
fisub
(bad)
jecxz
mov
mov
jp
sti
bound
add
inc
inc
(bad)
push
lock
pop
mov
pop
fsubr
ror
daa
cmp
fld
adc
cwde
shl
loop
and
lods
rcr
cmp
mov
pop
loopne
outs
aam
repz
cmp
cli
push
int
jne
clc
cdq
jns
and
and
mov
(bad)
inc
in
or
cmp
rol
cs
mov
cmp
es
push
icebp
test
inc
jecxz
pop
test
ret
popf
std
les
(bad)
xor
xor
or
mov
in
sbb
addr16
nop
mov
repnz
jmp
mov
dec
jo
mov
mov
jg
pop
fsubr
mov
adc
inc
cld
outs
das
push
lods
aam
mov
ins
mov
fs
dec
sbb
dec
xor
xchg
mov
mov
add
fmul
(bad)
mov
xlat
or
pop
sbb
inc
jge
inc
data16
cmp
sub
in
dec
mov
inc
dec
jo
mov
dec
jl
push
stos
mov
mov
xchg
fistp
jns
and
push
test
push
mov
fld
stc
xchg
dec
adc
sbb
add
movs
jp
sbb
add
mov
adc
and
push
aas
mov
jmp
pop
push
mov
cdq
dec
adc
mov
ds
imul
adc
xlat
mov
dec
jbe
xor
pop
sbb
inc
mov
pushf
add
stos
mov
pop
sbb
aaa
and
add
or
mov
fdiv
clc
outs
movs
jnp
lock
and
mov
das
cmp
or
push
inc
inc
mov
movs
aad
jg
fiadd
sub
dec
les
mov
mov
mov
sbb
sub
inc
test
inc
leave
xchg
or
mov
add
mov
(bad)
enter
das
repnz
add
xchg
retf
jp
fwait
mov
sub
sub
pop
scas
aam
and
and
stos
inc
fisttp
mov
sti
sti
xor
in
popa
xchg
cmp
loopne
add
cld
movs
jmp
add
int
push
aaa
test
push
ret
cmps
push
mov
loope
adc
sbb
push
call
push
cli
jg
ins
xor
(bad)
dec
add
push
sti
hlt
clc
fstp
mov
push
cwde
outs
sub
int3
aaa
sbb
arpl
lods
xchg
lds
outs
inc
mov
loop
pop
cmps
jns
jmp
xor
pop
loope
mov
movs
lock
daa
mov
jns
retf
mov
inc
push
stos
cmc
fidiv
js
pop
dec
mov
mov
into
cmp
jmp
aad
movaps
xor
fadd
or
popa
loop
mov
push
add
inc
jne
inc
mov
mov
jmp
jle
popf
push
repnz
and
adc
js
push
test
hlt
ja
mov
mov
fld
int3
inc
mov
sub
xchg
clc
retf
inc
call
dec
test
scas
aas
loop
mov
int
cmp
lahf
fwait
inc
scas
jnp
mov
dec
mov
xor
cmp
int
add
cwde
cmps
sbb
stc
push
inc
xor
jo
mov
test
xchg
outs
dec
popf
je
push
add
xor
sbb
dec
or
mov
sbb
mov
scas
shl
mov
movs
(bad)
push
inc
shr
sahf
jmp
xor
lea
jae
pop
fisubr
imul
ds
dec
stos
cmc
ret
xor
mov
xchg
mov
xchg
xchg
jecxz
add
add
iret
pop
mov
jo
shl
sub
out
imul
dec
icebp
out
stos
push
and
outs
jmp
adc
jnp
add
ss
fcmovnu
or
xor
mov
jmp
mov
nop
push
fldcw
mov
cwde
sbb
cmp
sbb
dec
cld
sahf
movs
popa
inc
pop
mov
pushf
retf
sub
or
cld
in
les
cmp
nop
addr16
dec
or
test
dec
fdiv
arpl
xchg
inc
cli
pop
cmp
jno
cwde
movs
sub
inc
and
outs
add
lods
fild
push
ret
inc
loopne
ja
xlat
lock
imul
nop
out
ret
and
stos
sbb
cmps
cli
loop
add
mov
mov
jmp
and
and
cmps
sub
pop
outs
loopne
in
stos
dec
or
adc
jmp
pushf
movq
call
sub
sbb
shl
jmp
pop
sahf
xchg
call
sbb
movs
lock
dec
mov
jg
sub
pop
adc
loope
inc
cmp
mov
in
xchg
lea
test
or
xlat
scas
or
xlat
and
fisub
push
or
mov
mov
push
cmps
and
jb
xchg
fwait
jmp
cmc
(bad)
cmp
add
popf
scas
jg
std
mul
(bad)
add
aad
fld
jb
cmc
popf
cmps
inc
dec
test
mov
test
ins
pusha
enter
dec
add
clc
in
out
xor
stos
repnz
sbb
stos
xchg
jp
adc
or
add
cmc
jbe
popf
mov
int3
clc
and
imul
(bad)
enter
sti
cs
sbb
mov
adc
sti
add
inc
push
jo
stc
rcr
retf
xor
adc
inc
jnp
add
jge
cwde
sbb
mov
pusha
hlt
test
push
call
mov
and
mov
mov
iret
mov
cmp
in
and
and
jno
je
test
add
mov
test
in
or
push
adc
fld
cmp
fdivr
imul
in
cmp
mov
mov
jp
jmp
lds
xchg
fwait
int
aaa
jbe
xchg
pop
push
movs
and
and
cmp
fstp
loopne
xor
pop
std
ror
js
clc
rcr
or
push
in
adc
sub
adc
sbb
shl
or
sahf
mov
mov
fsubr
mov
nop
push
jnp
mov
sbb
push
pop
mov
fild
int
enter
jno
leave
jne
out
sub
xchg
push
in
sub
and
lock
xchg
test
movhps
cmp
in
push
sbb
cmps
idiv
jo
and
push
out
or
je
mov
add
in
push
inc
cmp
mov
(bad)
push
enter
and
mov
mov
jmp
aaa
or
fiadd
ins
pop
fist
nop
loop
cmp
jne
das
jb
lahf
cmp
retf
pop
adc
in
outs
xor
in
fld
mov
dec
sbb
sub
cmps
nop
(bad)
dec
icebp
xchg
push
jb
pop
aas
jo
pop
adc
sbb
and
xor
pop
inc
repnz
cdq
push
movs
scas
adc
push
jmp
repz
test
fldcw
sbb
cdq
ficomp
jge
jbe
les
adc
mov
fisttp
push
sahf
mov
outs
push
pop
xchg
ds
test
jns
sub
sti
mov
in
inc
jmp
dec
ja
rcl
stos
stos
mov
arpl
pop
jae
movs
fucomip
push
inc
mov
inc
out
(bad)
sbb
mov
imul
outs
mov
mov
iret
jno
loopne
js
add
arpl
push
xchg
xor
movs
test
fdivr
or
xchg
jmp
leave
fmul
dec
mov
cmp
xchg
in
aas
lock
sti
pop
jl
mov
addr16
je
fild
mov
adc
ret
xlat
adc
sbb
mov
(bad)
movs
inc
in
lock
in
and
loop
or
pop
fmul
std
out
or
in
int
data16
lea
inc
fstp
sub
mov
rcl
retf
add
xor
cmps
xchg
repz
arpl
(bad)
shl
pop
xchg
out
push
or
repz
jmp
stc
call
sub
fdivr
inc
scas
mov
xchg
lods
aaa
or
loope
cmp
cs
test
adc
mov
and
push
add
push
aaa
cmp
jecxz
mov
jb
fwait
push
jnp
jmp
adc
hlt
sahf
dec
into
or
mov
and
cmps
iret
push
sbb
into
int
aad
xlat
(bad)
mov
xchg
clc
sbb
loopne
and
mov
aam
xchg
add
lods
jbe
xchg
push
ins
lock
enter
mov
call
movs
stos
(bad)
push
pop
mov
aaa
repz
shl
jle
jae
ins
nop
xor
xchg
call
or
mov
push
cmp
sub
mov
dec
inc
fstp
push
stos
lock
call
imul
xor
mov
push
cs
lods
dec
call
arpl
pop
add
adc
mov
xchg
mov
push
xor
in
push
imul
sbb
retf
jo
push
call
adc
les
nop
jmp
cmps
mov
vpxor
mov
push
jge
repnz
in
test
mov
test
data16
and
jmp
jnp
jae
arpl
arpl
imul
mov
push
(bad)
ror
or
int
mov
sahf
sub
test
movs
sub
data16
test
cs
cmps
shr
adc
jecxz
push
out
scas
mov
sahf
add
push
movs
jl
cmp
and
shl
push
adc
mov
out
sub
movs
sub
pusha
fisubr
leave
int3
adc
fbstp
sub
pop
dec
add
jge
pop
repz
adc
lahf
mov
pop
(bad)
outs
xor
sbb
arpl
mov
in
mov
mov
dec
xor
jns
cmp
sub
pop
jae
bound
outs
mov
cs
lahf
test
fbld
jno
add
aam
loop
bound
sub
inc
sub
sbb
cmc
test
in
fdiv
les
sub
call
sub
jmp
daa
jl
fidiv
movs
fsubr
not
push
adc
jb
aad
xchg
pop
xor
loop
sub
aas
scas
sub
mov
aaa
daa
nop
mov
adc
cmp
pushf
cmp
mov
(bad)
push
hlt
loopne
ret
mov
add
mov
stc
call
ficom
xchg
loopne
sbb
fimul
sbb
adc
loop
popf
bound
mov
mov
das
pop
cmps
pop
and
sbb
ret
push
hlt
mov
sar
cli
in
mov
nop
test
mov
cmp
or
out
mov
or
xor
sbb
pop
fiadd
pop
inc
test
cmp
ins
mov
into
xchg
clc
push
movs
pushf
sar
sahf
sbb
cmp
aas
xchg
pop
and
addr16
xchg
inc
in
or
adc
in
inc
sub
push
lods
fisub
ss
pushf
in
scas
lds
hlt
js
out
loope
push
push
(bad)
mov
adc
je
inc
cmp
(bad)
mov
fwait
xchg
ds
(bad)
stc
rcr
jl
mov
adc
mov
fwait
pop
iret
enter
or
(bad)
cmc
pop
ds
adc
mov
pop
dec
sub
aas
in
ret
fsubr
jge
pop
lahf
push
xchg
arpl
sbb
or
xchg
repz
mov
adc
ins
aam
dec
mov
mov
mov
add
pusha
repz
dec
clc
mov
adc
inc
push
cmps
mov
outs
xlat
or
out
inc
mov
cmp
mov
add
ds
loopne
xchg
push
(bad)
jmp
sub
leave
mov
retf
mov
movs
into
xor
sub
jp
and
pop
xchg
xchg
ror
pop
mov
jge
mov
mov
mov
adc
xor
sub
ror
push
loop
fisttp
adc
xchg
jl
mov
jp
xchg
daa
les
xor
mov
imul
(bad)
ficom
je
pushf
and
shr
adc
cmp
(bad)
gs
cmovne
call
pop
outs
int3
cdq
mov
mov
pushf
mov
cmps
jns
ja
movs
stos
dec
pop
add
(bad)
iret
push
hlt
sbb
(bad)
jb
xchg
pop
sub
mov
add
and
mov
dec
pop
sub
and
or
test
fs
jl
adc
dec
adc
test
arpl
fdiv
xchg
into
stc
xchg
les
dec
lea
push
dec
xlat
jge
mov
inc
outs
shr
pop
sub
gs
in
ja
retf
aam
mov
inc
mov
scas
not
cmc
aaa
push
mov
mov
je
mov
add
adc
aas
pop
mov
xlat
inc
mov
stos
and
and
js
push
(bad)
sbb
xchg
xchg
xor
cmp
mov
dec
inc
outs
fdiv
in
xchg
stos
xchg
xchg
adc
arpl
lock
daa
enter
test
xchg
hlt
out
je
push
and
or
retf
or
mov
nop
pop
cmp
xchg
daa
retf
fsubr
cwde
adc
dec
fcomp
shl
jle
dec
daa
add
arpl
dec
in
push
das
mov
in
test
xchg
retf
and
pushf
in
add
adc
mov
in
inc
aad
xchg
repz
pop
xlat
nop
sahf
in
scas
call
sbb
call
imul
sbb
ror
loope
lock
jg
mov
pop
je
inc
mov
mov
inc
xor
mov
repz
imul
push
out
(bad)
sub
and
inc
jp
shl
iret
add
test
sbb
adc
retf
pop
inc
inc
(bad)
repz
retf
cmps
xor
xchg
into
fnstcw
adc
push
and
int3
or
jge
jne
xchg
nop
cmp
mov
push
jno
repnz
or
xor
bound
push
fadd
inc
sub
in
xchg
push
retf
ins
rcl
add
jno
inc
clc
cmps
in
aaa
and
add
js
pop
test
sbb
ins
addr16
daa
mov
or
shr
leave
inc
fist
aad
ja
out
cmps
lods
ret
xchg
jp
cmps
jmp
jb
arpl
lods
jl
add
inc
jmp
jns
push
dec
aad
push
xor
xchg
mov
add
cmp
jb
fst
mov
dec
xchg
out
popf
js
retf
inc
mov
rcl
cmps
mov
aam
adc
cmp
in
ret
movs
ja
cmp
xchg
lea
cs
test
cwde
icebp
gs
mov
dec
sbb
add
(bad)
sub
jl
(bad)
fdecstp
push
fstp
stos
jge
push
lock
nop
sub
mov
and
addr16
movs
test
and
mov
xchg
inc
jne
icebp
shl
loope
shl
or
push
ror
aaa
add
in
ret
sub
push
shl
(bad)
xor
mov
mov
ja
jne
dec
mov
test
aad
cmovbe
stc
test
sbb
lods
jle
sub
pusha
aas
lahf
adc
xor
ins
pop
stc
movs
hlt
jnp
jl
ins
dec
jp
sub
ret
ret
xor
jae
mov
aam
outs
retf
sar
jp
mov
addr16
(bad)
rcr
mov
xchg
cmp
mov
cwde
mov
cmp
test
and
and
ss
les
ins
push
and
fwait
pop
dec
repnz
pop
fidiv
mov
inc
cwde
test
push
movs
dec
cmp
xchg
dec
call
es
cmp
pop
xor
pop
inc
ja
push
test
jnp
mov
fs
lahf
push
pop
inc
xor
or
shl
fwait
mov
and
into
cmps
adc
outs
dec
loop
ja
sub
and
xor
sahf
into
call
cli
jb
fs
sbb
push
mov
dec
hlt
js
test
and
sahf
scas
ja
stc
loop
mov
clc
jno
scas
pop
sbb
sub
sbb
cmp
sub
mov
jg
retf
add
dec
push
dec
ins
gs
jmp
push
mov
xchg
sahf
in
in
lahf
cmp
daa
or
sbb
adc
test
(bad)
cmp
cmp
or
jae
sub
stc
ins
cmps
lods
adc
out
or
icebp
mov
and
in
pushf
ds
js
fmul
mov
mov
fcom
and
or
jb
sub
xchg
loope
pop
pushf
leave
xchg
xor
movs
stos
vpsrlq
cmps
cdq
nop
ins
es
ffreep
ret
sub
adc
push
inc
stc
push
sbb
and
clc
test
jns
add
push
cmps
adc
adc
ins
mov
pop
test
jmp
idiv
add
out
arpl
mov
add
loopne
mov
mov
pop
adc
in
dec
popa
out
pop
dec
sub
movs
stos
aaa
or
mov
and
test
out
push
sti
out
(bad)
inc
or
sub
icebp
std
push
shr
fimul
out
in
repnz
add
ins
sbb
aam
pop
cwde
lods
mov
xor
add
test
xlat
int3
loopne
das
inc
or
sub
gs
stc
push
fsub
retf
jb
leave
je
mov
dec
(bad)
cmp
nop
add
aam
mov
in
adc
push
mov
jp
out
stos
stc
or
dec
jns
sbb
push
mov
shl
cmp
out
cmp
loop
xor
dec
jb
push
sbb
push
mov
mov
cwde
push
mov
and
push
(bad)
cmp
pop
out
jl
stc
enter
mov
jo
test
aam
jb
scas
xchg
sbb
adc
daa
imul
icebp
push
push
jbe
mov
std
mov
daa
sbb
outs
cmp
inc
loopne
outs
addr16
lahf
jno
mov
inc
add
scas
popa
mov
aam
dec
inc
sbb
pop
repnz
cmp
shl
das
mov
mov
mov
sbb
sub
jne
movs
sub
test
or
rol
retf
add
xor
iret
mov
pop
push
cmc
push
test
push
sub
in
iret
pop
(bad)
fidivr
push
xor
in
iret
iret
and
pop
pushf
(bad)
fabs
cwde
shl
push
sbb
adc
sub
push
fnstcw
adc
or
inc
shr
add
jmp
push
xlat
jne
pop
xor
jbe
mov
test
dec
inc
bound
(bad)
add
jle
stos
push
xor
fldenv
fs
(bad)
cwde
in
cs
jg
or
sahf
xchg
addr16
sub
mov
loop
mov
sub
pop
in
(bad)
fisub
mov
addr16
pop
not
mov
mov
fadd
ins
enter
loop
sbb
or
add
xchg
sub
pop
idiv
push
xchg
out
dec
xlat
int3
push
xchg
aas
mov
fistp
jno
sub
or
mov
mov
fwait
in
fsubr
jne
push
das
js
cmp
mov
inc
add
or
mov
push
sub
xor
add
mov
cmp
mov
es
js
mov
test
or
dec
lods
xchg
mov
and
mov
adc
lahf
adc
lahf
or
(bad)
hlt
adc
xchg
mov
jnp
shl
or
scas
lods
mov
cmps
clc
jl
loopne
and
jmp
sar
cmp
outs
mov
pop
push
in
sbb
or
in
mov
xor
jg
je
test
les
js
and
int3
sbb
sar
ret
mov
aad
or
leave
mov
nop
push
in
sbb
aad
sub
sub
js
dec
xchg
cwde
imul
mov
fs
sbb
in
mov
fs
retf
mov
cmps
retf
enter
outs
inc
pop
int3
adc
mov
mov
mov
(bad)
xor
jl
mov
xor
pop
cmp
dec
les
cli
lahf
cmps
adc
adc
loopne
or
cmp
lds
aad
sub
and
enter
jne
or
push
xor
mov
mov
dec
test
ror
cmp
sbb
fwait
dec
in
or
sbb
movs
or
mov
jno
and
in
into
ins
jns
fcmovnu
inc
clc
mov
push
retf
sbb
inc
cmovge
fs
jmp
add
and
push
std
cld
stos
xor
stc
dec
not
aad
mov
cmps
pop
and
inc
iret
mov
dec
inc
cmp
sub
push
rol
les
mov
aad
pop
jbe
sub
sub
sub
lods
pop
xchg
loope
mov
or
adc
mov
cmps
jmp
rol
mov
and
push
cs
and
ficom
mov
adc
jns
popf
in
push
cmp
test
push
inc
(bad)
int
sub
cmp
idiv
mov
mov
fcmovbe
sub
jmp
xchg
xchg
lahf
push
mov
retf
sub
in
dec
cmp
pop
push
pusha
jl
sub
bound
mov
stos
push
cmp
push
xor
dec
mov
imul
dec
popa
scas
mov
push
pop
cmp
cld
ds
add
inc
jl
lock
and
jl
ficomp
pop
cmps
daa
xchg
(bad)
lds
add
lods
mov
enter
xor
sbb
or
jae
mov
pop
arpl
inc
mov
hlt
dec
mul
(bad)
test
jnp
std
mov
mov
data16
out
ja
je
sbb
inc
cli
xlat
pusha
xor
stc
popf
scas
inc
jle
mov
xor
jo
addr16
xchg
in
dec
or
push
fcomp
cmc
add
aam
nop
pushf
mov
enter
test
jmp
popa
mov
and
test
test
jg
in
dec
add
cmps
jp
(bad)
ins
mov
jmp
jo
push
jmp
or
test
and
cld
pop
inc
mov
push
stos
mov
cdq
icebp
push
(bad)
int
cmp
sbb
adc
sbb
dec
pop
jmp
mov
adc
xchg
or
mov
mov
(bad)
int
adc
sub
mov
retf
fnstenv
pop
jp
xchg
aas
or
daa
inc
fiadd
xchg
int
xor
cmp
scas
pop
sub
jnp
cmp
and
loopne
mov
dec
jns
cmp
popf
ins
cmp
rol
xor
push
mov
jmp
sbb
call
popa
jb
pusha
xchg
enter
cmp
pusha
sub
sub
add
pushf
pushf
call
inc
add
sbb
push
push
dec
rcr
mov
rcr
neg
mov
in
xor
adc
imul
sub
or
add
xlat
inc
test
jae
or
imul
jns
(bad)
mov
add
nop
dec
pop
(bad)
aam
dec
scas
add
lock
icebp
pop
aaa
push
push
or
ret
push
push
adc
mov
mov
jge
add
adc
mov
arpl
call
push
jne
shl
aas
pop
xchg
push
pop
jbe
mov
movs
push
in
and
js
sub
push
and
pop
fs
clc
enter
rcl
fisubr
or
xchg
xor
dec
cs
dec
lea
cwde
jge
(bad)
jae
inc
pop
not
popa
popf
dec
hlt
lea
fst
mov
push
(bad)
push
push
movs
and
loope
lahf
mov
call
xor
inc
inc
mov
mov
pop
test
push
mov
das
retf
sbb
cmp
xlat
mov
push
imul
and
inc
pop
and
or
aam
cmp
mov
fcom
aam
lds
test
movs
fimul
push
loope
int
pop
jae
push
lock
jae
cli
dec
mov
daa
mov
daa
sbb
es
ret
jmp
mul
cwde
rcl
dec
pushf
xor
xor
and
aad
xchg
les
daa
in
enter
mov
scas
out
std
rcr
lds
les
repnz
dec
sbb
ins
sub
adc
jg
mov
lea
je
scas
add
addr16
sub
jns
mov
cmps
aad
jl
mov
lods
in
not
xor
ret
outs
push
sbb
jmp
icebp
sysexit
or
pmullw
dec
retf
jae
add
es
cdq
loop
pop
pop
sub
call
sbb
fwait
push
mov
fucom
aad
push
arpl
scas
retf
je
push
hlt
scas
(bad)
push
xor
das
(bad)
popf
dec
xlat
sub
adc
out
cmp
mov
pop
loopne
pop
cmp
stos
xchg
pop
cli
push
cs
push
cdq
dec
call
sub
gs
ins
cld
lods
sti
sub
sbb
inc
jae
inc
or
push
data16
fidiv
ficomp
out
shr
lds
mov
fisubr
out
adc
or
int3
push
xchg
cmpxchg
cmp
sub
mov
mov
enter
(bad)
xchg
push
sub
mov
or
int3
push
or
sbb
mov
cmp
aad
mov
js
movs
xchg
jnp
mov
dec
adc
outs
test
sbb
xor
fdivr
jo
stos
mov
dec
int3
retf
and
ja
dec
mov
mov
scas
cmps
jmp
inc
sbb
pop
dec
scas
sbb
cdq
jo
pop
lds
push
(bad)
mov
jmp
clc
pop
fxch
dec
repnz
inc
dec
bound
js
ins
movs
les
lods
jl
add
mov
push
lds
mov
mov
rcl
js
pop
retf
pop
cdq
sub
xchg
or
mov
mov
or
jnp
sbb
sar
xchg
cwde
push
pop
fsub
sub
outs
inc
cdq
jb
cmp
push
jle
inc
cmc
add
cs
pusha
sbb
outs
jp
out
jns
add
lea
jl
or
call
ins
call
stc
push
push
jns
add
cld
pop
inc
fnsave
shl
dec
adc
mov
pxor
int3
popf
je
jecxz
inc
cdq
inc
cld
nop
sub
xor
pushf
lds
and
out
stos
cmp
cwde
pop
jb
add
cmp
xchg
xor
sub
xor
inc
mov
and
pop
sub
outs
xchg
push
in
call
in
test
jb
sbb
ins
sub
cbw
and
jp
stc
push
cmp
dec
xchg
xchg
(bad)
pop
xor
loope
fmul
cdq
or
and
data16
add
cmp
xchg
cmps
popa
mov
sahf
sub
mov
or
outs
xor
adc
push
mov
mov
inc
jmp
movs
mov
retf
cmps
popf
adc
test
aam
arpl
es
aad
xor
inc
xor
jb
xchg
sti
dec
pop
nop
inc
out
call
clc
ficomp
jge
(bad)
mov
ror
sahf
mov
mov
lods
xchg
jns
sahf
push
sti
in
rol
in
cmp
push
ficom
inc
lahf
mov
int
xlat
dec
pop
(bad)
nop
movs
mov
push
out
inc
rcr
mov
push
lods
jb
bound
inc
jl
xacquire
outs
sub
xchg
loopne
fwait
and
outs
loop
pusha
ror
in
rol
les
das
mov
mov
stc
cmp
(bad)
and
stc
mov
mov
jbe
loope
ss
je
retf
jp
ins
sub
mov
sar
mov
and
xchg
xlat
jle
sbb
push
xchg
(bad)
repz
fmul
aas
jecxz
mov
push
sub
add
call
jmp
jp
(bad)
daa
scas
gs
hlt
fimul
xchg
sub
mov
enter
into
dec
jmp
push
pusha
xor
xlat
sub
mov
dec
mov
cmp
stos
dec
mov
sti
movs
gs
out
or
and
repz
loope
sbb
pop
mov
lds
es
cmp
mov
mov
addr16
push
mov
inc
or
xor
and
(bad)
pop
sbb
jmp
repz
push
and
mov
adc
adc
adc
div
iret
mov
lahf
nop
in
inc
clc
mov
and
mov
jmp
int
dec
jae
ja
aas
mov
add
js
sbb
dec
sti
std
mul
cmps
xchg
(bad)
aaa
scas
xor
fild
iret
mov
xor
or
inc
or
jle
adc
mov
push
rol
fsubrp
and
(bad)
(bad)
stc
sub
sahf
push
scas
add
and
lods
inc
inc
hlt
aam
aam
mov
mov
mov
icebp
fwait
sbb
js
sub
pop
ret
inc
push
(bad)
test
clc
fisub
pop
aam
rcl
pop
dec
jge
imul
jb
cmp
outs
add
addr16
push
inc
sti
sub
add
push
add
mov
xchg
jno
jmp
icebp
ret
mov
jne
push
imul
push
or
sub
add
xchg
xor
sbb
std
adc
mov
cmp
test
mov
dec
pop
cmp
imul
xchg
inc
cs
mov
in
test
sbb
xchg
jb
rcr
repz
push
pop
and
push
add
mov
adc
(bad)
sbb
xchg
inc
aas
xchg
and
jge
movs
ret
add
sub
mov
stos
add
cmps
sub
aad
cli
clc
sub
pop
std
movs
pop
hlt
jl
ss
pop
push
ds
pop
mov
mov
popf
popf
sub
clc
lahf
cmps
mov
add
xchg
xchg
mov
xor
jne
sub
hlt
cmp
and
in
ds
or
test
rol
add
mov
addr16
lahf
test
push
rol
mov
ja
ret
js
mov
or
test
pop
cli
mov
mov
and
jb
xchg
lods
lahf
push
xor
lgs
xchg
out
ins
dec
mov
pop
mov
xchg
sub
jge
mov
push
popf
jg
je
cmc
test
movs
shl
leave
movs
aas
xor
das
mov
cmp
mov
in
xchg
inc
xor
and
mov
(bad)
jne
cmp
add
push
cmps
xchg
push
mov
fwait
jp
mov
add
mov
pop
add
mov
cmp
fadd
xchg
jmp
dec
imul
test
imul
cdq
mov
adc
and
xlat
(bad)
pop
leave
arpl
iret
ds
lahf
adc
lahf
xor
pop
jb
lock
push
xchg
or
cmps
adc
adc
lods
or
adc
std
adc
xchg
sahf
les
rol
std
shl
shr
push
jmp
pop
stos
je
aad
clc
push
add
jmp
test
cmp
pusha
jmp
cmp
jp
sub
mov
lea
nop
sub
cs
jbe
loopne
dec
rol
adc
cmp
xchg
jno
daa
das
inc
jge
fs
ds
push
dec
iret
mov
add
add
push
fcmovnbe
icebp
pop
jo
leave
dec
xchg
lock
sahf
pop
add
and
or
lods
mov
mov
inc
xchg
test
stos
mov
add
cdq
stos
(bad)
mov
jge
leave
and
push
or
push
(bad)
lods
jno
push
cmc
jnp
(bad)
cmp
leave
xchg
outs
push
xchg
je
xchg
lods
inc
ja
adc
cmp
mov
jg
stos
mov
(bad)
and
mov
scas
dec
sbb
data16
or
jbe
sub
jg
cmc
mov
inc
mov
jae
rcr
iret
or
or
mov
add
loopne
cmp
push
mov
rcl
bound
sub
mov
outs
lods
enter
inc
adc
push
xchg
mov
push
pop
test
int
xor
sbb
addr16
cmp
or
mov
sbb
pop
sbb
add
jmp
rcr
ror
sub
inc
xor
daa
inc
dec
fst
mov
cmp
js
pop
fld
xchg
mov
mov
sub
imul
(bad)
cmc
and
and
jo
sub
mov
sub
mov
shl
mov
mov
iret
xor
xlat
push
add
cmp
mov
js
mov
jp
not
imul
mov
adc
scas
pop
add
lods
mov
xchg
mov
sahf
ror
xor
lods
mov
jne
pushf
xchg
imul
dec
push
dec
sub
adc
(bad)
das
fcom
mov
adc
fcmovnb
jae
or
xchg
push
add
add
jbe
imul
daa
sbb
adc
and
xchg
sbb
push
jmp
or
or
sbb
mov
dec
iret
mov
adc
test
xor
in
int3
dec
arpl
pop
ds
ret
outs
movs
ins
mov
cmp
(bad)
imul
jo
loope
enter
mov
jge
mov
or
xchg
call
sar
fbstp
cmp
push
jo
sbb
pop
push
loopne
inc
xchg
push
shl
dec
push
or
movs
sbb
sbb
jns
add
fmul
sbb
adc
mov
pushf
ror
fisub
mov
stos
dec
push
(bad)
sbb
push
mov
mov
shl
fdiv
or
(bad)
xor
enter
lods
push
out
sar
xchg
loop
rcr
cmps
sbb
push
shl
add
out
pop
mov
dec
inc
stos
sahf
adc
repnz
cld
jmp
test
out
mov
mov
rcl
mov
pop
fst
scas
jmp
cmc
jbe
cmps
imul
add
inc
sbb
adc
and
xchg
fbstp
jle
das
fiadd
inc
pop
or
xor
and
ins
xchg
inc
pop
inc
leave
jmp
jno
idiv
xchg
sub
dec
iret
cs
pop
outs
jbe
sub
jno
mov
clc
(bad)
mov
in
out
fsub
test
test
jb
(bad)
pushf
xchg
or
cmp
popa
in
sar
or
test
xor
add
(bad)
adc
inc
test
cld
dec
push
(bad)
cwde
adc
(bad)
je
push
je
jecxz
add
in
fs
xchg
inc
lahf
or
mov
mov
and
sub
lods
sub
mov
call
loope
dec
in
adc
lea
sub
push
popa
std
les
mov
sbb
stc
mov
adc
cld
inc
das
movs
pop
mov
in
xchg
jae
xor
out
sub
push
popa
pop
bound
arpl
sbb
push
jns
test
pop
sti
inc
jg
ss
pop
leave
inc
bound
test
ret
mov
pushf
pushf
cdq
sub
loop
mov
push
or
xchg
rol
xlat
popf
lods
lea
dec
or
sbb
xlat
cmp
cmc
adc
test
shr
lods
or
mov
movs
popa
and
push
std
ret
inc
leave
adc
xchg
add
xor
mov
jecxz
and
jmp
fisttp
shr
stos
dec
dec
popa
sbb
std
jmp
(bad)
in
(bad)
(bad)
sbb
lock
bound
aaa
mov
repz
and
jns
pop
mov
je
loope
add
xchg
cli
jecxz
test
push
dec
lods
mov
sbb
addr16
or
push
ret
fwait
call
sbb
aad
retf
ins
adc
mov
outs
add
or
mov
mov
xchg
(bad)
mov
cmps
mov
jb
jmp
and
test
call
outs
jmp
scas
cmps
cdq
push
fsqrt
cld
div
mov
mov
repz
mov
or
neg
fnsave
sub
fldcw
lock
pushf
or
jbe
enter
sbb
or
or
and
pop
push
mov
xchg
xchg
sub
dec
cmp
div
inc
and
inc
inc
add
xchg
and
push
xchg
icebp
push
jmp
aaa
push
ins
aad
addr16
add
dec
inc
scas
shl
adc
les
mov
dec
scas
pop
inc
push
sub
jo
stos
mov
aam
icebp
jbe
xor
int
sar
mov
jle
inc
and
mov
pop
pushf
dec
sub
vdivpd
pop
jns
pop
add
xor
add
addr16
inc
arpl
sbb
outs
les
inc
mov
and
cld
sbb
lods
(bad)
fs
call
and
pop
inc
pop
inc
mov
(bad)
repnz
not
cli
imul
or
or
cld
je
nop
mov
jg
mul
inc
jo
movlps
or
scas
sub
das
add
mov
mov
loop
push
xchg
int
gs
rcr
js
xchg
scas
inc
cmps
mov
sub
jl
out
outs
iret
loopne
cmp
adc
(bad)
cmp
test
daa
push
push
(bad)
sub
loope
cmp
loope
and
adc
sub
mov
test
ret
xchg
xor
sbb
sbb
leave
dec
push
jp
jnp
sub
cwde
jo
xchg
pop
les
pop
xlat
cmp
and
ret
leave
cmc
repz
inc
or
jl
cmp
lds
movs
je
xchg
cmp
xor
or
in
dec
test
or
inc
mov
out
xor
fistp
xchg
mov
jl
push
dec
std
dec
pop
je
popf
xchg
and
mov
or
ror
xor
not
cs
dec
ins
xlat
pop
sub
mov
adc
dec
sub
push
or
es
jecxz
pusha
call
xchg
pop
and
push
mov
das
mov
test
mov
fsubr
push
mov
add
les
or
mov
jmp
idiv
loopne
push
addr16
sar
sbb
jbe
pop
sbb
out
cdq
jecxz
fisubr
iret
sahf
icebp
mov
bound
mov
bound
dec
outs
into
sub
dec
inc
stos
iret
pop
adc
jo
fsub
inc
adc
iret
push
jg
add
mov
sub
and
jl
sub
pop
sbb
nop
xor
jb
cmp
xor
xchg
push
pop
fisubr
(bad)
repnz
dec
jnp
jg
sub
jbe
adc
and
fimul
mov
fisttp
ins
xchg
push
push
stos
hlt
ins
and
xor
dec
ins
pushf
arpl
mov
in
es
cmp
xchg
jp
scas
mov
(bad)
xchg
add
movs
std
mov
std
adc
or
sub
jbe
dec
repnz
dec
test
popf
and
pop
gs
mov
mov
imul
pop
fmul
enter
jge
pusha
inc
and
daa
mov
pop
sbb
mov
mov
pop
setbe
push
cmps
arpl
adc
out
add
in
(bad)
in
(bad)
jnp
sbb
and
fldenv
sbb
out
ins
mov
add
es
dec
cmp
aaa
dec
push
inc
adc
fldenv
pushf
push
mov
icebp
cmp
or
ins
push
push
push
mov
icebp
or
(bad)
mov
jne
and
push
xchg
cld
jbe
pop
sub
jnp
sub
push
retf
retf
push
add
test
out
repz
int
pop
and
mov
or
adc
clc
add
inc
imul
outs
or
out
adc
and
and
pop
leave
push
and
jbe
inc
fcomi
sub
xchg
sbb
mov
add
jnp
repz
nop
aaa
es
retf
sub
cmps
ret
push
and
pop
repz
loope
les
stos
mov
cli
sub
cwde
jb
push
cdq
dec
sbb
or
cmp
lods
mov
sub
cli
fdivr
in
dec
cwde
sub
xchg
or
div
jo
mov
add
out
call
and
xchg
imul
jo
mov
(bad)
sbb
or
and
iret
cmp
or
ja
test
test
inc
test
scas
pusha
xchg
pop
popa
in
xchg
or
frstor
(bad)
sub
rcl
jno
cmc
push
cdq
stos
or
mov
retf
sbb
add
mov
movs
dec
in
xchg
xchg
call
jge
retf
push
mov
xchg
push
push
push
xor
adc
and
mov
sub
adc
out
dec
imul
les
cdq
fbstp
pop
cmp
sar
das
push
push
xlat
jle
mov
out
push
out
pop
push
and
in
pop
xor
in
pop
mov
out
jbe
dec
dec
and
push
imul
daa
shr
loopne
push
push
iret
mov
shr
fsubrp
xor
and
cs
in
cmp
xchg
dec
dec
jecxz
inc
popf
xlat
and
sahf
cmps
and
outs
shrd
sahf
mov
jmp
cmp
adc
scas
es
je
xor
jmp
inc
lds
test
dec
(bad)
jns
xchg
dec
push
jno
or
cli
jp
and
pop
nop
rol
inc
jecxz
sbb
ret
mov
xchg
adc
and
cmp
push
test
pop
sub
loopne
cwde
imul
or
lea
mov
outs
inc
call
hlt
sbb
and
push
sbb
retf
mov
(bad)
sti
daa
inc
retf
ins
add
mov
cdq
sub
nop
repz
retf
fldenv
mov
mov
sbb
dec
mov
push
out
inc
jmp
push
cmp
xor
mov
cmc
lods
jnp
mov
test
bound
(bad)
pop
inc
jmp
fld
xor
mov
adc
in
je
push
aas
jmp
jg
loope
lds
cwde
adc
scas
sbb
add
and
lods
retf
lods
fwait
(bad)
cmp
test
xchg
or
cmp
js
(bad)
outs
push
pop
lahf
xor
sub
out
stos
pop
dec
(bad)
xchg
or
(bad)
sbb
adc
div
out
pop
ja
out
pop
push
pop
jg
addr16
cmp
loop
mov
mov
inc
sbb
push
push
lods
aaa
popf
movs
cmp
gs
pushf
dec
add
mov
mov
nop
xchg
mov
push
mov
jae
out
call
mov
out
lock
xchg
ror
pop
and
pop
cmp
je
jl
cmps
cmps
mov
gs
leave
lock
retf
push
cmps
fxch
jl
aad
clc
jp
push
ret
mov
or
pop
(bad)
jle
and
popa
fucomi
aam
dec
mov
cwde
stos
(bad)
scas
pusha
push
not
and
call
stos
pop
pushf
cmps
idiv
xchg
fst
sbb
push
mov
ins
cld
cmp
repnz
jl
sbb
push
mov
cmp
pusha
imul
dec
add
enter
cmp
pushf
jns
pushf
xchg
retf
push
xor
std
jno
idiv
mov
or
movs
jecxz
ror
inc
pop
mov
mov
adc
and
mov
jae
test
fadd
push
xchg
out
sub
pop
xchg
push
fdiv
xor
mov
jmp
lock
push
xchg
adc
xchg
loope
nop
add
test
jecxz
outs
ficom
mov
in
aad
retf
retf
bound
inc
repnz
adc
rol
retf
dec
data16
cli
test
mov
mov
aam
shl
test
sbb
or
pop
sbb
aas
fwait
inc
rol
or
mov
(bad)
mov
aas
xchg
test
xchg
popa
push
clc
hlt
pop
xchg
aaa
mov
mov
push
test
jmp
mov
push
inc
pop
movs
mov
outs
or
shr
push
cld
call
mov
ret
(bad)
data16
fist
dec
jmp
inc
or
sbb
pause
sbb
mov
call
lock
mov
jmp
jmp
xchg
mov
inc
ds
push
sbb
push
aad
test
xor
dec
xchg
jge
fcomp
xchg
and
mov
idiv
ss
in
sbb
pop
pushf
pop
jmp
jns
push
mov
outs
sub
mov
jecxz
lds
(bad)
sbb
addr16
adc
popf
fcmovbe
xchg
push
pop
in
outs
leave
mov
fisttp
add
sar
(bad)
call
loopne
mov
imul
std
rol
and
mov
mov
add
imul
cmp
cdq
retf
out
call
je
inc
mov
mov
pop
jnp
pushf
and
jae
ds
fnsave
dec
retf
sub
lods
es
pop
add
pusha
mov
push
into
retw
lea
lock
cmps
push
or
xlat
das
add
or
xor
iret
pusha
in
jg
add
fsub
mov
dec
xor
imul
cmp
xor
pop
aad
pop
sub
rcl
sbb
jo
arpl
int
inc
mov
adc
fst
shr
hlt
and
and
or
mov
mov
bound
dec
dec
pushf
vmread
or
or
cwde
(bad)
jmp
inc
popf
mov
mov
and
lods
cdq
mov
adc
sti
in
shl
fld
mov
inc
mov
out
pop
cmc
(bad)
outs
cdq
repnz
inc
mov
xor
jbe
push
sbb
sti
fcmovb
or
aaa
pop
mov
(bad)
jmp
mov
add
and
outs
rcr
mov
mov
lock
or
lods
jge
xor
mov
inc
stos
mov
inc
mov
dec
lds
hlt
xchg
or
enter
ret
pop
xor
pushf
loopne
xor
ret
loope
dec
jp
xchg
add
hlt
js
push
popf
inc
mov
jne
popa
popf
and
sbb
fisubr
mov
jmp
nop
imul
mov
shr
lahf
jb
sbb
in
rcl
sub
ror
(bad)
bnd
adc
pushf
mov
stos
mov
ins
sub
push
loop
cmp
mov
movs
inc
mov
cmp
rol
pop
or
retf
in
sbb
xchg
or
and
jns
xchg
test
pop
(bad)
daa
sub
das
sub
or
bound
mov
jnp
(bad)
jl
in
stos
sbb
je
cmp
ret
push
push
gs
mov
retf
fsub
adc
mov
neg
js
and
mov
mov
retf
cmovne
(bad)
das
scas
xor
nop
imul
out
leave
xor
mov
xor
cli
fwait
rcr
push
inc
out
(bad)
sar
fsub
call
jns
pushf
aad
movhlps
xor
jno
cwde
scas
inc
js
mov
repnz
adc
fbld
pop
or
mov
mov
adc
je
lods
jge
push
pop
jmp
fld
sub
push
sbb
push
pop
sti
xchg
jmp
pusha
imul
dec
push
retf
mov
mov
shl
lds
sbb
sahf
dec
mov
cmps
in
mov
push
mov
lea
inc
cs
sub
lods
cmps
pop
fwait
push
inc
aad
jo
rol
mov
mov
loop
cmp
mov
nop
push
jb
cli
out
loope
or
ret
and
and
(bad)
jb
inc
xor
shl
fidiv
add
sbb
mov
cmps
inc
repz
or
pusha
lods
cli
loope
adc
rcr
jle
sub
lahf
clc
or
into
addr16
or
and
sbb
push
cmp
inc
push
adc
ror
push
jge
aas
test
jge
bound
mov
scas
pop
loopne
std
mov
addr16
sub
pop
dec
cwde
pop
xor
div
nop
and
xor
repz
xor
xchg
test
repz
pop
xchg
dec
push
out
push
scas
js
retf
call
div
xor
sub
add
xchg
dec
dec
out
jmp
xchg
mov
inc
push
add
ss
add
cmp
imul
dec
inc
mov
in
push
lahf
fdiv
add
push
dec
xchg
mov
jge
cmp
(bad)
cdq
xor
movs
daa
psubusb
cmp
mov
sbb
int3
dec
out
or
or
(bad)
adc
or
(bad)
xchg
push
enter
mov
add
mov
mov
xchg
cmp
(bad)
and
mov
mov
js
jbe
push
movs
cmps
xchg
mov
scas
xchg
xor
sahf
xlat
movs
cwde
psraw
mov
lock
(bad)
fwait
push
lock
movs
loope
sub
jno
fistp
ins
push
pop
add
js
and
in
mov
aaa
addr16
mov
mov
cmp
sbb
fisttp
xchg
cli
in
cli
sbb
add
mov
mov
push
push
pushf
jae
and
add
inc
fsub
mov
scas
mov
add
stos
cmp
adc
cdq
pop
daa
inc
fxch
and
test
xlat
(bad)
inc
retf
pop
retf
das
push
inc
repnz
jecxz
in
stc
push
das
sbb
mov
fidivr
add
retf
sbb
xchg
inc
(bad)
rcl
xor
das
sbb
xchg
int3
jnp
dec
pop
xchg
push
stos
(bad)
sub
xchg
das
test
jns
mov
nop
add
aam
mov
jae
mov
pop
in
jmp
cmp
xor
pushf
mov
fist
cmp
mov
jns
shr
sub
xchg
bound
jg
mov
inc
xchg
jge
or
addr16
jle
or
lea
adc
cmovle
sub
push
das
into
popf
sbb
mov
inc
in
adc
inc
xor
mov
mov
cdq
mov
dec
js
mov
(bad)
clc
dec
call
rcr
repnz
icebp
ror
and
lock
or
je
adc
call
loope
jmp
fwait
in
and
popf
pusha
hlt
pusha
shr
clc
inc
and
es
mov
push
aaa
pop
or
aam
sbb
dec
fsub
or
movs
outs
pop
mov
jb
push
sub
xor
add
jmp
fs
jg
ficomp
and
retf
inc
xchg
jnp
pop
sub
jg
xor
stos
outs
dec
pop
cmp
jae
repnz
idiv
xor
in
gs
pop
mov
das
sbb
sub
mov
aas
push
rcl
vpunpcklbw
clc
ss
aad
sub
push
mov
scas
lahf
jne
ins
fnsave
xchg
adc
lock
sub
retf
addr16
inc
and
fisubr
mov
fcomp
mov
cmp
repnz
dec
inc
das
jl
gs
or
sbb
fdiv
push
adc
xor
cmp
xchg
fidiv
cmp
push
fld
push
fisubr
pusha
lds
movs
inc
out
clc
stos
adc
sbb
sub
jge
popf
scas
or
mov
sub
or
xor
(bad)
repnz
cdq
je
dec
xor
mov
push
cld
push
and
test
sub
xchg
cdq
loop
cmp
in
in
stc
in
pop
sti
jmp
shl
jne
jp
fisub
mov
sbb
ins
rcl
dec
arpl
jbe
cld
mov
fcom
or
mov
push
jbe
sbb
scas
sub
cmps
ins
add
(bad)
jmp
mov
and
mov
pop
mov
std
das
pop
jmp
ss
stos
dec
movs
fst
push
cmc
imul
fcomp
mov
mov
dec
std
xor
jo
xlat
stc
jle
cmp
ds
xchg
aam
xor
sub
loop
sub
pop
aad
neg
sub
imul
loopne
and
and
lods
pop
ja
out
retf
mov
pusha
pop
int
ret
ss
mov
jle
inc
xor
sbb
or
xor
arpl
sub
imul
inc
jmp
ds
lahf
iret
imul
cs
cwde
sbb
jns
mov
test
hlt
or
and
inc
adc
jmp
sub
in
mov
mov
rcl
dec
gs
dec
or
mov
dec
ss
mov
fwait
pop
aam
daa
cdq
or
xor
add
mov
fdivr
daa
mov
mov
les
pop
cmp
adc
mov
adc
fsubr
mov
jno
mov
in
cmp
mov
pop
js
mov
jg
icebp
in
xchg
movs
pusha
push
push
js
cmp
jp
cli
out
mov
mov
fcmovnb
mov
mov
cmp
(bad)
aad
jb
pop
mov
xchg
lods
pop
add
int
jp
gs
add
pop
aaa
xchg
movs
or
jno
mov
jbe
inc
adc
dec
inc
bound
dec
mov
dec
pop
pop
xchg
(bad)
cmc
pop
sub
(bad)
and
aaa
jmp
out
scas
into
(bad)
sub
jp
pop
fbstp
int
clc
mov
xor
(bad)
icebp
xlat
out
nop
mov
movs
mov
add
and
cld
ret
xor
in
push
lea
clc
xor
add
xchg
jb
dec
jo
pop
stc
pop
pop
(bad)
jmp
inc
jge
iret
pop
sbb
inc
jo
popf
arpl
retf
dec
pop
in
push
fistp
neg
sar
dec
in
int3
scas
ficomp
(bad)
call
pushf
pop
sahf
push
es
push
dec
std
xchg
loopne
sub
mov
aas
or
(bad)
mov
xchg
iret
inc
sbb
xchg
sti
aas
mov
pop
test
(bad)
retf
push
dec
pusha
out
lahf
dec
cmps
ror
lods
inc
mov
inc
inc
adc
bound
or
fld
shr
fldcw
inc
xchg
mov
or
lock
mov
mov
fnsave
jnp
mov
icebp
mov
jmp
pop
mov
mov
(bad)
pop
mov
sub
loope
mov
je
je
cmp
mov
rcl
cmp
call
adc
dec
out
fisubr
add
loopne
loopne
stc
out
lahf
and
into
fisubr
in
xchg
mov
stos
cdq
movs
imul
pop
inc
cld
add
addr16
dec
inc
into
or
cwde
dec
and
jnp
out
xor
mov
and
add
sub
push
clc
pop
hlt
shl
cmp
in
mov
push
lea
pop
jg
or
and
mov
dec
add
enter
nop
pop
mov
sti
and
mov
mov
jne
sbb
int
dec
adc
pop
or
mov
inc
jg
mov
int3
ret
jle
add
fadd
sub
mov
stos
sub
pop
mov
cmp
(bad)
push
enter
retf
out
fwait
xor
call
sbb
cmps
test
pop
mov
xchg
loopne
mov
or
push
lea
dec
(bad)
mov
std
popf
xchg
leave
js
scas
lods
int
adc
dec
shl
push
cdq
das
clc
ja
cmp
es
xchg
jb
pop
(bad)
jo
push
shl
push
es
dec
pop
int3
pop
mov
xchg
sub
mov
movs
sbb
or
cmp
shr
icebp
mov
into
push
xchg
mov
inc
call
dec
cmp
add
push
rcr
pusha
xchg
sbb
push
mov
sbb
sbb
jno
inc
push
cld
and
mov
mov
sbb
add
and
pop
inc
in
int
xchg
jg
std
icebp
jl
out
fadd
pop
clc
inc
pop
mov
test
(bad)
rol
fcmovnb
pop
addr16
or
fld
imul
test
add
mov
xor
or
or
mov
push
add
cmp
mov
cmps
cmp
or
pop
sahf
inc
out
movs
and
inc
cmp
jecxz
jo
push
dec
xchg
(bad)
cmp
lock
mov
dec
mov
out
test
xor
pop
cmp
adc
cs
icebp
mov
mov
xor
or
sbb
movs
mov
push
jb
inc
fcom
ret
push
sub
inc
scas
out
outs
cmp
daa
cdq
inc
data16
lds
(bad)
or
xchg
cmps
add
jle
addr16
sbb
pop
dec
sub
xor
adc
call
cdq
mov
or
xchg
adc
jne
movs
sahf
mov
fidivr
pop
lds
and
imul
test
test
fst
dec
popa
cmp
cmp
es
cmp
pop
xchg
mov
or
dec
arpl
push
xor
mov
pop
int3
dec
jecxz
pop
cld
mov
pop
and
inc
dec
sbb
stos
stos
leave
ret
scas
or
pop
and
scas
aam
stos
lods
cmp
mov
ret
xor
frstor
add
mov
lods
jg
cmps
inc
or
arpl
ins
mov
test
add
mov
pop
ja
es
in
xchg
xchg
jno
mov
cmps
jae
xchg
in
mov
es
xchg
not
jno
jmp
sbb
pop
cmp
dec
jne
fdiv
sahf
push
push
leave
into
aad
mov
icebp
lahf
pusha
pop
in
bound
(bad)
fs
cmps
popf
outs
(bad)
fcmovnb
dec
or
dec
(bad)
xlat
shl
mov
pop
fwait
xor
inc
out
mov
push
or
not
cmc
cmp
mov
jle
mov
xchg
inc
out
mov
sub
xor
mov
inc
das
xor
mov
outs
push
and
xchg
sub
fst
mov
xchg
rcr
mov
dec
push
pop
mov
retf
dec
loopne
fmul
mov
jl
outs
pop
push
in
push
push
pop
jmp
bound
(bad)
dec
dec
lahf
mov
adc
adc
lods
mov
mov
mov
scas
je
cmps
sbb
sbb
push
jne
and
adc
movs
imul
xchg
icebp
ins
ins
scas
fs
jbe
loop
(bad)
(bad)
mov
pusha
out
xchg
push
or
int
fwait
mov
dec
ins
mov
inc
xlat
je
adc
movs
jg
mov
pop
pusha
mov
clc
push
dec
popa
jp
ins
push
cdq
adc
cmp
js
bound
mov
das
repz
fcomp
pop
imul
push
fadd
repz
mov
fild
popf
test
or
nop
ss
mov
ds
push
sub
mov
je
retf
fld
cmp
push
xor
fwait
fwait
mov
jg
pop
outs
repnz
mov
jae
add
je
lock
jg
xor
rol
in
cmc
adc
(bad)
mov
and
loope
dec
xchg
retf
mov
jg
push
pop
xor
call
aaa
jno
sub
stos
xchg
not
sub
dec
mov
outs
bound
mov
test
dec
xor
sub
mov
sub
pop
lods
add
rcl
ja
xchg
pop
or
pop
xchg
push
sub
sahf
das
sahf
sbb
sbb
in
jmp
leave
dec
sbb
loopne
mov
add
push
ss
push
xchg
adc
in
cs
stc
stos
push
jle
push
and
adc
and
into
inc
mov
mov
addr16
fs
movs
push
xlat
adc
cwde
dec
in
xor
mov
fcomp
imul
(bad)
add
push
cmc
jg
imul
jns
push
inc
push
mov
pop
loop
jecxz
mov
in
outs
mov
jl
jge
das
les
mov
ror
aas
sbb
clc
xchg
mov
shl
cwde
cmps
adc
(bad)
sti
enter
add
and
movs
jge
or
test
(bad)
scas
push
mov
cmp
sahf
pop
enter
dec
pop
xor
sbb
xchg
pop
cmp
and
jnp
aam
rol
mov
xchg
ins
scas
mov
mov
mov
sahf
pop
mov
nop
jge
div
les
iret
inc
arpl
pop
fadd
cmp
daa
lods
jne
jmp
xchg
movs
aaa
call
aad
int
(bad)
jo
sub
popa
rol
outs
aas
(bad)
pop
push
cmp
mov
adc
dec
gs
popa
(bad)
(bad)
mov
ins
push
adc
xchg
adc
dec
test
sbb
xor
fld
pop
mov
xchg
retf
leave
cmps
push
int3
cmp
or
lea
add
sbb
in
mov
inc
sub
dec
dec
adc
call
shl
add
xlat
iret
(bad)
cmp
adc
js
and
in
in
test
sub
dec
xchg
outs
sbb
mov
xor
and
inc
arpl
jmp
and
mov
movs
cmps
out
das
mov
mov
jl
cmc
icebp
inc
jbe
adc
xchg
stc
xor
ret
sbb
popa
mov
push
jbe
repz
inc
in
dec
xchg
mov
mov
out
sub
mov
dec
imul
shr
sahf
cmovp
mov
addr16
jbe
sub
jp
out
call
dec
inc
push
pushf
clc
dec
jne
mov
dec
cld
fcomp
sbb
cmp
cmp
cmp
movs
pop
out
mov
jmp
mov
jle
xor
sub
mov
add
in
and
cli
mov
or
push
fcmovnu
inc
inc
shl
outs
add
sti
lock
adc
push
xor
jo
out
(bad)
(bad)
jnp
stos
cmps
sub
xchg
cdq
mov
jg
lahf
jae
mov
pop
pusha
inc
mov
call
add
mov
mov
xor
jne
adc
retf
lahf
xchg
or
mov
or
lods
push
jp
loope
(bad)
mov
outs
or
or
adc
mov
lock
inc
push
mov
mov
(bad)
in
inc
daa
and
and
arpl
jmp
scas
pop
pop
mov
xchg
lea
retf
jne
scas
adc
cwde
daa
jo
jge
mov
ficom
loope
retf
ds
not
push
and
into
add
mov
daa
lock
push
pop
icebp
repnz
push
cmps
mov
push
je
or
lock
jno
leave
nop
mov
aam
shl
popa
icebp
idiv
repz
lods
pop
mov
inc
xor
fdivr
test
mov
dec
test
addr16
movs
xlat
cs
and
inc
jae
ret
ins
fidiv
enter
pop
aas
push
lods
pop
pop
icebp
jns
jecxz
mov
arpl
cmp
pop
into
imul
lds
cld
int3
mov
pop
loopne
(bad)
sahf
add
mov
imul
lods
(bad)
jmp
pop
sub
repz
cld
push
(bad)
aas
sub
or
jo
or
and
mov
(bad)
xchg
inc
mov
inc
inc
imul
sub
pop
pop
aad
cmp
aas
mov
mov
inc
loope
loope
sbb
test
and
sub
adc
jmp
or
and
inc
xchg
hlt
cmp
out
adc
call
mov
jg
sbb
inc
clc
cs
sbb
xlat
call
cdq
adc
ret
fstp
inc
out
sti
jne
repnz
cmc
dec
push
push
(bad)
ds
ret
pop
cmp
add
dec
mov
sub
cmc
xor
add
mov
mov
xchg
fcom
iret
mov
daa
(bad)
fdiv
rcl
ss
fisttp
cli
mov
dec
sub
push
hlt
sahf
or
aaa
pushf
add
xchg
sub
pop
jmp
outs
ins
in
adc
retf
rcl
ss
mov
daa
adc
pop
cli
dec
mov
ret
add
stos
dec
out
cmp
cmp
mov
jns
push
mov
cld
cli
shl
inc
loop
mov
cs
add
and
mov
pop
adc
mov
cmps
mov
mov
loope
or
fistp
sbb
aam
inc
mov
xchg
fsubr
push
xchg
jo
add
mov
dec
add
mov
cld
(bad)
jle
xchg
into
xor
add
mov
das
nop
push
inc
pop
dec
mov
in
sub
jecxz
lods
call
dec
sar
in
hlt
xchg
std
push
test
pushf
iret
in
add
mov
(bad)
or
and
aas
jle
adc
dec
push
inc
add
add
cmps
and
retf
arpl
mov
sbb
enter
addr16
xchg
aad
sub
sub
jg
ins
or
test
push
rcr
jge
seta
mov
add
repnz
and
fdiv
dec
inc
dec
aad
sub
je
lahf
cmps
cdq
aad
cli
fidivr
xchg
and
add
jae
cmp
nop
sbb
dec
cmp
aas
mov
push
lahf
sbb
dec
mov
mov
push
shr
sbb
std
lock
push
nop
cmp
stos
dec
add
fs
mov
mov
dec
ror
outs
mov
ror
fild
and
sub
lahf
call
iret
fdivr
dec
jbe
dec
xor
mov
jp
ret
and
dec
and
and
jne
xor
shl
dec
mov
or
mov
and
(bad)
mov
push
sbb
push
add
cmps
xchg
cdq
lods
loope
jne
push
mov
inc
inc
xchg
xor
dec
mov
pop
outs
jb
sar
shl
lods
or
mov
adc
adc
popf
ds
push
imul
das
adc
mov
cmp
mov
push
mov
push
dec
test
xor
pop
bound
jns
shl
ror
ins
retf
jns
es
les
sbb
cmps
mov
mov
or
mov
test
aam
jns
movs
jb
cmp
ffreep
out
popa
push
mov
jae
arpl
jno
out
xor
fwait
pop
cmps
cmp
cdq
hlt
push
cmp
adc
(bad)
out
scas
or
add
and
cmp
out
dec
jp
loope
adc
push
xor
inc
dec
add
mov
mov
mov
lea
xor
data16
shr
adc
jno
dec
mov
fidiv
int
dec
aam
fiadd
int3
xchg
xor
adc
or
mov
pop
sbb
add
scas
xchg
push
xor
dec
(bad)
inc
xchg
sub
xor
inc
add
int
sbb
xor
nop
(bad)
ficomp
repz
sub
test
mov
jns
push
imul
push
(bad)
mov
pop
rcr
mov
sbb
test
loop
shr
sbb
add
push
dec
loope
push
pop
dec
xchg
clc
or
inc
je
addr16
push
sub
fistp
shl
xchg
dec
sar
enter
or
pop
and
ins
mov
icebp
sbb
fwait
je
push
and
call
add
leave
mov
push
arpl
div
sbb
and
leave
scas
iret
aaa
xchg
clc
push
int
jg
lods
loope
icebp
(bad)
sbb
and
lods
inc
test
sbb
sti
inc
dec
lods
pushf
mov
mov
ret
call
and
xchg
and
hlt
ds
fiadd
movs
nop
xor
outs
es
fs
(bad)
out
sahf
adc
aam
add
pop
adc
adc
ret
test
shl
cdq
sub
pop
xchg
dec
adc
mov
repz
pop
scas
cmp
mov
pushf
pop
test
cmp
loop
xchg
or
stos
pop
mov
cmc
aaa
int
aas
je
or
push
mov
mov
aaa
inc
adc
cmp
rcl
xor
shl
push
outs
adc
mov
mov
sti
mov
xor
mov
mov
adc
or
sbb
cld
xchg
dec
bound
or
icebp
cmp
sbb
dec
ja
dec
and
jae
sbb
mov
xlat
sbb
pop
cmp
mov
leave
mov
mov
fs
add
mov
add
dec
cmp
add
add
pusha
mov
mov
push
pusha
loop
movs
cli
ins
daa
mov
dec
inc
stos
jecxz
imul
aad
jg
push
mov
mov
or
daa
cwde
xchg
movs
xchg
fcmove
les
pop
sti
sub
enter
mov
and
sub
fwait
leave
pushf
xor
mov
jo
sbb
imul
push
jbe
jp
dec
in
push
jns
sti
mov
adc
test
repnz
rcr
mov
cs
(bad)
jnp
pop
mov
mov
clc
test
mov
mov
das
in
in
jl
adc
and
add
sub
dec
clc
in
jl
sub
mov
mov
jp
add
jge
clc
mov
fcomp
push
sub
push
push
in
mov
sar
and
xchg
out
dec
add
into
mov
inc
fs
jb
mov
push
hlt
fiadd
repz
(bad)
(bad)
clc
jmp
retf
cmp
jae
data16
ss
fs
jae
cmp
and
xor
das
(bad)
out
loop
aad
shl
test
frstor
out
push
shl
clc
call
retf
mov
jnp
sub
mov
pop
add
or
jmp
cwde
mov
pusha
jg
xchg
clc
or
add
hlt
pop
dec
aas
jo
xor
push
rcr
add
and
push
ins
sub
mov
add
adc
sub
mov
cmp
mov
retf
faddp
pop
fs
pop
daa
(bad)
ror
iret
fstp
jmp
push
bound
int
mov
jbe
jge
cmp
pusha
sbb
cld
cmps
mov
addr16
xor
add
xchg
mov
adc
dec
js
or
test
cdq
mov
xchg
jns
xchg
(bad)
lods
adc
mov
ret
add
dec
neg
or
dec
xchg
das
stc
and
or
mov
jmp
cmp
test
pop
cmp
xchg
cdq
mov
and
push
and
adc
mov
push
pusha
and
enter
cld
(bad)
aad
xchg
adc
dec
dec
stos
push
or
retf
sbb
fimul
test
push
inc
jns
(bad)
into
or
lock
adc
jecxz
rcl
neg
lods
sub
mov
int
sti
mov
stos
mov
inc
arpl
inc
cmp
mov
dec
retf
mov
int
pop
cli
int3
jb
mov
mov
ins
das
inc
cmp
xchg
mov
mov
ror
cmp
dec
popa
pop
arpl
mov
jmp
cmp
sub
imul
mov
loopne
push
icebp
add
jle
inc
and
cld
ror
xchg
and
pmaddwd
hlt
iret
inc
jge
retf
inc
mov
jne
mov
dec
(bad)
push
jmp
je
dec
add
add
pop
mov
sub
jp
bound
push
mov
ins
jne
cmpps
popf
lods
lods
inc
or
inc
mov
fstp
ins
mov
pop
cwde
and
mov
into
xchg
push
mov
pop
(bad)
dec
sbb
dec
and
dec
into
inc
push
mov
fcom
push
push
popf
inc
mov
pusha
mov
push
push
jecxz
sahf
out
movs
fcomip
std
into
pop
stos
icebp
xor
sbb
dec
movs
push
cwde
cmp
dec
cmp
cdq
and
popf
in
test
xor
sub
(bad)
into
fdivr
mov
fild
adc
(bad)
es
add
cli
xor
cmp
lock
mov
jno
pop
pop
xchg
and
mov
add
inc
push
xchg
adc
repz
jg
and
push
data16
jo
sub
mov
jl
test
jmp
xchg
test
(bad)
fbld
enter
jle
dec
enter
cdq
inc
sbb
sbb
pop
(bad)
push
adc
cdq
jb
stc
pusha
sbb
mov
lea
test
mov
sbb
sub
lock
std
jnp
pop
cmp
add
jo
into
out
add
mov
mov
popa
pop
call
dec
xchg
sar
outs
mov
xor
sbb
loopne
push
cmp
lahf
pop
test
ds
leave
iret
loop
addr16
push
mov
lahf
test
ss
cmp
xchg
cmp
icebp
mov
dec
sub
popa
pop
add
outs
ins
dec
inc
addr16
pop
das
dec
int3
push
sbb
outs
cmp
push
clc
pop
in
push
call
sahf
dec
sbb
repz
out
es
xchg
aas
jg
stos
and
add
or
sub
sub
mov
xor
xor
jge
retf
pop
dec
out
or
in
jle
ds
inc
jmp
pop
je
xchg
shl
and
test
cmc
push
test
jb
push
stos
mov
push
adc
cmc
les
ds
repz
inc
push
jmp
and
lock
test
jmp
mov
or
push
jns
push
sub
test
sub
cdq
push
xlat
ins
pop
cmovno
rcl
and
dec
(bad)
repz
sahf
hlt
fxch
je
pushf
jno
sub
ins
mov
push
les
or
pop
pop
ins
arpl
idiv
pop
dec
jmp
popf
cmp
push
aam
out
pop
inc
bound
dec
mov
dec
and
jbe
es
jg
ret
push
sbb
ins
ror
std
mov
fwait
ins
mov
push
je
stc
dec
jecxz
mov
push
mov
aas
js
dec
fsubr
push
nop
cmps
inc
mov
sub
out
jl
add
mov
aam
idiv
mov
mov
sub
lea
mov
mov
div
loope
je
ret
sub
ins
or
jns
inc
or
sub
pop
push
leave
shl
mov
inc
fsubr
adc
in
cmp
(bad)
loopne
es
push
pop
or
cmp
inc
jmp
dec
lea
sahf
aaa
pop
outs
push
dec
push
mov
add
aam
ret
lock
pop
jno
loopne
add
ret
js
or
cld
fdiv
jbe
pmulhw
and
push
inc
test
dec
imul
cmp
inc
mov
test
aad
ss
fisub
sbb
outs
xchg
jmp
fild
out
daa
cmp
adc
xchg
inc
mov
je
mov
jb
mov
outs
ins
(bad)
jbe
pop
cld
lahf
lods
(bad)
xor
pop
mov
push
cs
xlat
cmp
or
lea
int
gs
xor
xor
sub
test
adc
rcl
push
push
pop
iret
inc
jne
std
inc
pusha
in
(bad)
and
into
lods
test
push
push
repz
imul
repnz
mov
clc
xor
out
outs
(bad)
mov
enter
pop
mov
mov
dec
xor
iret
cs
in
into
or
pop
jp
mov
mov
adc
jle
xchg
call
sub
or
in
hlt
(bad)
ins
mov
(bad)
or
std
xchg
(bad)
xchg
adc
dec
lods
or
mov
jg
out
repz
gs
cmps
mov
mov
push
mov
call
and
int
retf
sbb
jge
loopne
mov
add
jmp
mov
push
mov
stos
jb
mov
lahf
jmp
inc
in
pop
pop
and
rcl
fild
or
icebp
sbb
inc
mov
mov
and
(bad)
mov
push
mov
jg
xor
push
popa
adc
mul
test
push
push
and
repnz
fsubr
sub
inc
ins
arpl
ds
mov
data16
out
hlt
js
push
in
mov
popa
out
push
cmp
popf
sbb
mov
mov
add
jns
xchg
aad
add
xchg
adc
jns
jns
cmp
sub
xor
mov
mov
aaa
push
addr16
cmp
dec
sbb
mov
mov
xor
mov
rcl
mov
jae
mov
xor
push
jae
push
xchg
popf
shl
loope
(bad)
mov
shr
stc
loopne
adc
ins
mov
or
mov
in
loopne
stc
lds
jne
out
retf
xor
sub
dec
adc
cmps
shr
and
push
scas
out
vmaxsd
int
cmps
bnd
jb
in
retf
lods
cmp
mov
jns
sti
add
leave
pop
mov
mov
ret
test
out
push
mov
retf
shl
ins
pop
jns
inc
cs
movs
cld
retf
pop
movs
push
cmc
sbb
nop
pop
push
dec
sub
jg
inc
in
mov
add
cmps
push
imul
push
pop
jns
retf
dec
aam
fs
pusha
cmp
dec
cmp
dec
push
icebp
push
scas
mov
ret
test
xchg
cmp
sub
ficom
sub
adc
imul
jo
mov
leave
and
lea
ficomp
pop
jmp
(bad)
in
xchg
and
cmp
add
into
pop
repz
xlat
cs
mov
add
imul
mov
retf
stc
mov
ffree
fadd
push
mov
outs
sbb
jge
lods
aad
leave
adc
aas
lods
xor
mov
fisttp
pop
mov
ins
movs
adc
fimul
mov
sub
mov
add
mov
das
adc
mov
jno
xor
outs
pop
cmps
xor
jl
xchg
sar
dec
aas
(bad)
imul
cmp
cmp
cmps
int
cmp
test
movs
mov
imul
nop
loopne
out
cs
bound
aad
dec
pop
xchg
out
out
test
and
imul
int
inc
arpl
or
fiadd
xor
fcomp
jge
jge
pop
test
xor
add
mov
xchg
call
mov
inc
clc
sub
sub
sbb
sbb
mov
add
imul
mul
jmp
jno
sbb
nop
sub
jp
mov
cdq
xor
je
popa
icebp
sub
rol
xor
mov
dec
xchg
sbb
add
mov
xchg
jo
stos
fucomp
xchg
mov
sbb
dec
adc
xor
mov
sbb
retf
in
mov
cmp
jmp
loope
sub
or
inc
or
test
cmc
stos
mov
and
test
jb
ins
out
ins
xor
fistp
cmps
adc
cli
icebp
mov
mov
push
inc
xor
test
dec
xchg
and
out
cs
dec
pushw
dec
xchg
and
popf
cli
inc
repnz
add
mov
imul
mov
lods
movs
sbb
mov
cmp
jbe
sub
push
fcom
in
adc
sti
stos
sub
jmp
ret
mov
test
mov
mov
and
scas
dec
push
mov
inc
enter
adc
shr
loop
cmp
pusha
pop
jo
idiv
push
jge
mov
pop
out
lea
out
aad
pop
aas
inc
push
adc
and
cmovo
hlt
sub
mov
lods
sbb
jmp
data16
jo
pop
dec
loope
movs
inc
or
stc
and
sub
mov
jno
cmp
jb
leave
xchg
mov
sbb
mov
mov
jne
outs
pop
or
jle
rol
inc
icebp
ret
fistp
add
fsubrp
int3
pop
fmul
ds
mov
shr
es
retf
scas
jmp
shr
clc
sahf
arpl
and
shl
(bad)
call
movs
pushf
addr16
outs
pop
push
xchg
add
mov
jg
dec
xchg
mov
push
xchg
xchg
inc
fst
or
mov
pop
rcl
bound
aad
cdq
inc
cdq
jmp
in
loop
pop
mov
or
ror
xchg
mov
jecxz
hlt
cmp
jnp
jae
mov
repnz
popa
cld
sar
call
out
call
mov
mov
jle
daa
div
jmp
mov
push
or
pusha
rcr
fisub
imul
add
mov
or
xchg
jbe
pop
mov
cmp
mov
cs
ja
or
xchg
lea
or
pop
cmp
jle
or
dec
out
mov
stc
outs
pop
fisub
jno
xchg
adc
rcl
jmp
jle
shr
pusha
xchg
arpl
enter
xchg
xchg
sbb
mov
sub
aad
cld
out
enter
es
leave
mov
inc
sbb
cdq
out
adc
or
loope
aad
mov
jmp
xchg
(bad)
push
ret
or
or
jo
cdq
jg
mov
stos
pop
pop
movs
test
xchg
jb
ss
push
sbb
retf
and
adc
inc
pandn
imul
repnz
neg
(bad)
fxch
cmps
add
out
push
pop
xchg
test
sbb
int
push
jno
fwait
clc
dec
xlat
call
cmc
or
shl
push
aad
scas
push
es
loope
or
minps
in
loope
and
add
mov
mov
sub
xchg
pusha
push
in
(bad)
fsub
call
mov
lahf
xchg
pop
inc
lods
push
and
sbb
adc
mov
bound
sahf
movs
jl
push
fwait
call
jmp
std
add
imul
lea
adc
inc
mov
mov
jge
cmc
arpl
pop
in
dec
cmp
jecxz
cli
mov
repz
outs
ins
mov
xchg
xchg
xchg
mov
repz
cmps
sbb
cwde
inc
push
jb
mov
les
ins
outs
rcr
stos
(bad)
aad
mov
aad
les
xor
dec
loopne
cmps
push
es
xchg
pop
sub
adc
dec
or
repnz
push
ret
sbb
fistp
and
ds
xchg
xlat
jmp
inc
xor
retf
outs
push
add
scas
addr16
mov
jmp
ror
bound
dec
mov
cmp
cmp
scas
dec
stos
xchg
xor
bnd
push
pushf
push
add
inc
mov
mov
jne
outs
in
pop
xor
pop
outs
sbb
ret
sbb
mov
lds
xrelease
sub
sub
push
leave
js
mov
pop
stos
imul
or
pop
ins
bound
jno
(bad)
cdq
repz
jg
int
sub
sbb
or
push
(bad)
in
pop
aas
(bad)
pop
or
dec
mov
fs
idiv
jmp
js
sbb
push
inc
pop
adc
add
popf
das
addr16
jmp
push
out
test
jne
push
jb
cmp
mov
mov
(bad)
icebp
push
sbb
(bad)
xchg
loope
test
les
jl
xlat
stos
addr16
mov
jb
push
adc
and
mov
es
mov
xchg
and
outs
outs
adc
adc
mov
ss
xchg
jnp
mov
pop
into
push
cdq
and
lods
sub
pop
dec
aaa
jle
sbb
gs
shr
lods
pop
pop
cdq
and
in
sahf
addr16
push
enter
add
arpl
dec
xor
cmp
call
aas
cmps
push
shl
pop
cmp
test
cwde
not
jp
test
xor
or
out
les
mov
jae
pop
mov
jno
lods
rcl
mov
lods
and
in
cmc
jb
cmp
fsubp
enter
and
xor
(bad)
jmp
(bad)
sbb
(bad)
xchg
lock
(bad)
xor
pop
cs
dec
mov
dec
xchg
and
je
push
cmp
js
xchg
add
jmp
adc
push
jb
popf
test
sbb
push
ja
retf
push
call
sbb
xchg
inc
inc
out
loop
stos
fsubr
test
popf
lea
shr
or
out
ret
pop
cmp
push
and
js
(bad)
fsub
pop
arpl
gs
jl
mov
nop
ret
jmp
inc
jae
mov
call
mov
sbb
iret
addr16
or
addr16
stos
jae
test
ss
pop
dec
(bad)
xchg
and
hlt
icebp
ja
outs
pop
xlat
inc
xchg
retf
fimul
inc
hlt
int
nop
popa
xchg
arpl
aad
dec
loope
cs
push
ss
fwait
mov
inc
hlt
sub
jb
mov
aaa
sub
push
inc
mov
fbld
mov
in
cmp
push
cmp
movs
fsubr
pop
(bad)
cmp
data16
add
push
cmp
and
or
hlt
loopne
out
out
clc
mov
rcl
sbb
inc
shr
lds
aam
nop
repnz
push
xchg
(bad)
stc
icebp
clc
jno
jno
pop
fsubr
mov
and
push
or
dec
movs
mov
jmp
mov
dec
xchg
or
push
mov
sar
push
outs
das
mov
pop
shl
adc
inc
mov
sbb
and
ins
cmp
ja
sahf
call
stos
sbb
pop
adc
sub
pop
sub
sbb
js
push
test
jmp
xchg
fcom
lds
gs
or
sub
lods
jno
mov
retfw
gs
or
adc
lea
jp
call
loope
or
iret
retf
int
aam
push
arpl
out
jns
lods
ficom
stc
idiv
(bad)
xchg
and
and
hlt
outs
inc
sub
xor
adc
retf
xor
fdivrp
add
add
into
dec
mov
es
shr
jg
fwait
gs
unpcklps
icebp
test
inc
add
mov
std
pop
hlt
dec
and
mov
out
pop
int3
mov
popa
sub
imul
dec
mov
pop
mov
push
or
inc
cmp
scas
adc
add
bound
pusha
into
lock
or
ds
adc
out
(bad)
push
push
push
mov
(bad)
xchg
jp
mov
loopne
cmp
or
stc
(bad)
jb
jbe
push
jg
jne
sub
and
push
cmp
repz
pop
std
push
jne
ret
mov
js
add
mov
or
mov
in
sar
xor
push
jge
pop
not
das
ins
xlat
or
or
push
add
mov
mov
div
mov
push
xchg
clc
div
jmp
rcl
into
jno
mov
fwait
sar
sbb
clc
sub
je
ins
mov
mov
retf
pop
pusha
xchg
pop
aad
inc
sub
je
jo
inc
shr
pop
or
push
stos
test
cli
mov
lods
inc
dec
add
(bad)
cli
inc
scas
(bad)
fidivr
add
or
or
movs
add
pop
fcmovbe
mov
mov
add
sub
push
repnz
fcomp
jnp
mov
xor
les
cmp
add
shr
xchg
cmp
xchg
and
lods
add
mov
pop
mov
pop
sub
push
mov
pop
test
stos
cdq
sub
jno
scas
dec
lds
lock
xchg
add
imul
div
lahf
or
lods
sbb
jnp
retf
adc
xchg
fistp
xor
jl
mov
inc
scas
inc
cmp
jne
sub
jp
repnz
pushf
js
outs
dec
out
sbb
sub
ds
pop
inc
xchg
or
xor
push
mov
sub
popa
mov
and
inc
jmp
dec
scas
dec
test
popa
cmps
xchg
pop
sub
test
mov
push
sbb
lds
dec
sbb
lods
mov
xor
shl
xor
dec
adc
sub
std
pusha
scas
test
adc
(bad)
sahf
scas
(bad)
icebp
ins
push
or
pop
add
ror
pop
das
ficomp
pop
adc
dec
push
adc
and
lds
xor
mov
iret
mul
mov
add
dec
or
xlat
or
cdq
or
lahf
jmp
push
lea
js
add
loop
mov
loope
mov
lods
das
leave
arpl
mov
ss
jle
enter
fmul
pop
popf
xchg
add
ret
loopne
ficom
fsub
stos
fist
sub
loop
cmp
adc
sub
fstp
add
mov
loope
sub
xchg
and
xor
and
aas
lock
stos
sub
jns
into
mov
push
ja
mov
pop
mov
cmp
push
call
sub
lea
and
xor
jmp
shl
add
mov
mov
fadd
inc
nop
movs
cs
outs
fisttp
ret
inc
das
shl
mov
mov
mov
mov
push
ds
repnz
mul
adc
jno
fst
adc
adc
sub
hlt
xor
aaa
loopne
in
out
adc
mov
push
jg
movs
add
and
or
ja
test
xchg
js
(bad)
and
mov
inc
outs
adc
mov
adc
lods
pop
mov
jo
xchg
std
push
retf
mov
xchg
mov
movs
fbld
push
adc
out
aam
ins
mov
mov
add
sbb
int3
out
out
mov
or
fdivrp
sahf
inc
inc
movs
sbb
push
icebp
les
aad
mov
into
inc
fcomp
cmp
cmp
call
jl
lock
or
ret
push
movs
gs
mov
pop
(bad)
adc
push
and
push
adc
test
test
pop
(bad)
retf
inc
into
pop
test
mov
cli
ins
push
mov
inc
jl
test
loop
or
adc
jns
fidivr
sub
xchg
push
ret
int3
rol
aad
clc
outs
mov
adc
sbb
icebp
call
or
sbb
addr16
cwde
sub
pop
and
das
adc
or
mov
mov
xlat
push
push
icebp
pop
fdivr
mov
add
add
pushf
mov
jmp
leave
add
test
inc
bound
fcmovnbe
test
fimul
lahf
xor
rcr
data16
ror
test
push
out
inc
fistp
rol
mov
mov
pop
push
stc
inc
pop
sbb
clc
jge
data16
xchg
sbb
push
push
jnp
shl
loope
repz
cmp
jmp
cwde
push
loopne
sub
pop
fild
pop
pusha
and
in
add
fist
out
arpl
jmp
or
adc
ins
jo
cli
arpl
std
addr16
jmp
mov
or
jmp
push
out
repz
iret
imul
pop
jae
pop
mov
and
pop
inc
shr
dec
ret
sbb
pop
adc
loope
lods
add
push
or
outs
mov
repz
pop
xor
pusha
test
push
retf
addr16
test
xchg
out
sahf
xchg
fcomp
xor
sub
cmps
cwde
test
mov
sahf
outs
int3
push
push
cmp
xchg
inc
or
ret
ds
xchg
ds
adc
or
jno
xor
icebp
movs
outs
dec
adc
test
push
jmp
pop
mov
sar
xor
mov
dec
pop
popa
rcr
enter
xchg
outs
ja
xor
add
push
es
mov
mov
cmp
xor
call
mov
inc
pop
push
pusha
push
push
test
push
dec
adc
shr
js
clc
out
pop
aas
cdq
inc
jo
cmp
rcr
lds
aad
shr
adc
loope
xor
sub
jle
ss
ds
cmp
mov
jno
js
int
pop
xlat
adc
into
mov
xchg
popa
adc
push
mov
push
mov
repnz
fild
shl
test
lds
or
shl
sti
or
test
sub
cmp
or
mov
rcl
xchg
adc
add
mov
les
arpl
pop
scas
cmp
repnz
iret
push
push
push
out
add
add
cmp
(bad)
jno
mov
and
and
pop
or
int
adc
lds
add
push
shl
ins
xchg
repz
lds
jae
adc
scas
mov
xchg
lds
imul
pop
add
adc
aam
aas
mov
or
pop
mov
xchg
dec
cmps
pop
push
pop
dec
ins
adc
in
(bad)
repz
mov
pop
sub
lods
lods
or
call
push
xor
cmp
sbb
jnp
cmp
outs
icebp
std
ss
or
fsqrt
(bad)
sub
stc
dec
fldcw
or
ficom
xchg
mov
in
imul
lock
add
and
inc
stc
jbe
mov
stc
fwait
ins
pop
scas
pusha
cmp
das
out
mov
push
sbb
loop
mov
pop
adc
repz
mov
in
pop
fcomp
div
and
(bad)
xor
div
and
inc
sbb
ds
cmp
int3
retf
push
rcl
fimul
jp
add
shl
inc
inc
xor
dec
dec
push
sti
fst
shl
cdq
arpl
shr
inc
mov
and
pop
adc
and
pop
sbb
mov
stc
jge
and
mov
fmul
jb
or
in
adc
xchg
sahf
std
sbb
jo
adc
enter
adc
xor
mov
mov
inc
pop
je
out
ja
mov
sub
gs
jg
jnp
and
and
push
xchg
clc
enter
jno
es
(bad)
movd
out
mov
jo
aaa
inc
(bad)
adc
cmc
daa
jmp
mov
div
xor
(bad)
addr16
xor
dec
push
sub
and
adc
adc
mov
push
sbb
xchg
ret
addr16
jne
ror
sbb
xchg
push
sbb
lods
dec
pushf
mov
lahf
inc
mul
sub
(bad)
lea
test
jb
xchg
cld
inc
cmp
pop
jp
iret
mov
or
pop
ds
out
cmc
stos
repnz
les
add
test
push
les
and
cmp
add
and
ins
and
inc
push
jmp
loop
cmps
inc
jnp
fisubr
ds
jecxz
and
mov
fcmovu
add
push
cli
inc
add
test
test
jbe
jg
je
out
(bad)
clc
ret
jmp
dec
inc
inc
addr16
into
pop
call
sar
pop
call
std
hlt
or
adc
lock
jae
and
dec
jns
fisubr
jo
add
mov
jmp
ins
jno
xchg
outs
push
js
mov
add
adc
jge
retf
add
neg
fwait
or
iret
inc
test
jge
pushf
shl
out
inc
jb
jmp
add
bound
add
cmp
in
stos
cmp
mov
fwait
addr16
sub
push
dec
push
adc
test
and
add
mov
scas
ficomp
loop
mov
dec
jmp
in
pop
sar
mov
shl
je
ins
dec
dec
pop
fisttp
(bad)
mov
sub
std
inc
(bad)
mov
mov
push
dec
sub
clc
lahf
push
je
retf
pop
lock
push
test
jb
mov
loop
ret
push
xor
mov
dec
adc
mov
int
stos
gs
idiv
sub
std
call
push
add
inc
aas
push
leave
sbb
xor
retf
sti
daa
cld
jp
jnp
lea
sar
cmp
inc
std
cwde
loopne
xor
push
js
sbb
add
mov
mov
jae
xor
sbb
add
(bad)
xor
jmp
test
mov
icebp
inc
jbe
arpl
dec
daa
push
pop
cmps
push
stc
mov
push
xor
les
cmp
call
xchg
ins
mov
pop
pusha
inc
add
stos
or
out
jne
mov
test
push
jns
imul
sbb
pushf
xchg
call
mov
and
inc
cmp
mov
hlt
and
enter
icebp
cs
sub
imul
jmp
outs
dec
push
jno
in
adc
adc
xchg
sti
xchg
call
shl
pop
xor
dec
fist
add
stos
push
mov
fld
push
jns
sub
out
cld
aam
lahf
sbb
push
into
lahf
ror
inc
popa
imul
sbb
test
push
jne
cmc
mov
sbb
in
mov
sbb
retf
loop
xor
mov
pop
mov
popa
movs
sub
das
adc
cmps
inc
test
in
shl
fsubr
mov
test
out
dec
in
es
(bad)
cld
imul
inc
je
or
cld
pop
lahf
inc
jge
out
mov
std
clc
inc
test
mov
jns
push
aaa
outs
xor
imul
cli
dec
sbb
or
mov
(bad)
leave
mov
xchg
or
jmp
mov
mov
mul
add
in
fmul
iret
ret
fwait
jmp
call
ret
mov
loop
fiadd
mov
fiadd
lock
sbb
repz
mov
loope
xchg
cmp
dec
xor
shl
push
dec
xchg
iret
mov
retf
fmul
fs
outs
not
mov
outs
aaa
adc
ins
arpl
pop
ret
les
dec
push
push
xchg
stc
das
mov
pop
dec
xchg
pop
aad
and
push
cmp
adc
adc
pop
test
fs
fild
inc
push
shl
xchg
cmp
addr16
mov
mov
push
xor
in
dec
and
mov
adc
pop
xchg
ret
mov
jae
mov
lods
pop
into
sti
les
xchg
js
ucomiss
fld
cdq
sub
mov
retf
and
sub
mov
data16
fs
(bad)
movs
aam
mov
cmp
cmps
ret
push
xlat
jmp
ret
ror
and
call
gs
fucomip
cmp
into
push
xchg
mov
or
out
ror
mov
ror
jno
xlat
ror
pop
mov
enter
add
push
scas
pop
(bad)
retf
into
mov
mov
bound
mov
shr
sbb
pop
mov
push
add
dec
mov
cs
inc
adc
dec
xor
(bad)
mov
sub
repz
ret
into
lea
cdq
jnp
mov
sub
inc
xchg
and
dec
lods
faddp
test
in
scas
retf
add
in
jg
ins
sti
add
inc
mov
out
mov
stos
or
xor
lods
sbb
or
jo
call
pop
outs
int
xor
adc
sbb
sti
sub
lahf
push
xchg
add
mov
xchg
daa
inc
add
inc
add
das
sbb
(bad)
fsubr
push
xor
sub
xchg
daa
or
daa
call
xor
pop
outs
mov
lea
mov
arpl
jecxz
cmp
cdq
arpl
xlat
mov
dec
push
push
ret
pop
mov
jge
sub
loopne
or
(bad)
or
cld
ja
scas
test
or
in
aaa
add
xchg
es
sub
retf
mov
loope
mov
mov
or
xchg
cs
push
xchg
jg
push
add
xchg
fs
jl
nop
lods
mov
out
cmp
out
mov
sbb
test
cdq
push
stc
aad
stc
xchg
fucomip
push
hlt
adc
or
sub
cld
sahf
sbb
call
dec
popf
pop
pop
pop
mov
int
popf
mov
jo
mov
dec
mov
outs
scas
stos
mov
das
daa
test
xlat
bound
add
sub
xchg
pop
dec
sti
hlt
sub
jne
cwde
bound
or
push
addr16
(bad)
pop
pop
or
push
(bad)
inc
call
scas
xchg
movs
and
call
std
lods
mov
cs
mov
inc
adc
sub
push
and
dec
dec
mov
jns
cs
adc
jb
lahf
jg
push
push
xlat
jns
inc
sub
rcl
and
je
push
mov
pop
mov
(bad)
cli
mov
adc
data16
rcl
cld
icebp
jl
add
pop
(bad)
aaa
cmc
cs
pop
cmp
push
stos
fcom
mov
lahf
mov
jb
mov
mov
lahf
iret
retf
push
xchg
dec
mov
cmps
mov
js
pop
pop
rol
sub
pop
sub
aas
dec
add
or
sbb
xor
pop
jns
mov
sub
dec
xchg
push
scas
cmp
or
cmc
dec
movs
or
xchg
(bad)
jbe
xchg
push
in
mov
add
mov
and
or
shl
jp
bound
inc
sub
and
fdivr
jp
movs
inc
lods
mov
or
lods
or
das
xor
and
lock
mov
adc
sbb
fstp
xor
jbe
and
pusha
cld
pusha
cwde
push
int3
inc
shr
inc
push
jge
sbb
or
inc
lods
inc
into
(bad)
mov
add
push
sbb
xor
gs
(bad)
outs
push
stos
and
test
add
xlat
jae
and
mov
test
mov
xchg
or
mul
fdiv
pop
mov
cmp
and
mov
cli
test
in
(bad)
jae
xchg
inc
fadd
pop
inc
aam
pop
int3
fsub
push
imul
(bad)
pusha
pusha
stc
hlt
test
xchg
shr
mov
push
xor
jne
and
sahf
xchg
les
dec
xchg
dec
pop
popf
test
or
and
mov
pop
and
or
lock
movs
cmp
add
(bad)
jmp
shld
cdq
adc
int
arpl
cmps
mov
push
or
fwait
mov
addr16
pop
ds
sar
or
push
fisttp
push
(bad)
adc
pop
out
xchg
movs
ror
inc
fisttp
add
add
push
pop
sub
inc
hlt
mov
cmp
add
sbb
jle
shl
and
mov
cmp
xchg
popa
pop
push
lea
xchg
add
(bad)
scas
pop
dec
call
mul
outs
inc
lahf
push
lahf
jnp
ret
sbb
in
add
int3
mov
mov
daa
scas
pop
mov
cmp
ins
loop
mov
stos
cmp
mov
aad
xor
mov
pop
les
neg
rcl
adc
bound
or
mov
fwait
sub
xchg
mov
add
adc
mov
jl
push
and
add
cmp
mov
cmp
xchg
stos
and
jo
(bad)
in
cmp
sti
adc
or
imul
iret
fisubr
pop
sbb
push
cld
push
aaa
jbe
pusha
adc
jbe
pushf
lods
ret
cmc
das
or
cwde
daa
add
inc
lods
div
add
(bad)
leave
mov
push
xchg
mov
int3
sahf
outs
dec
push
ss
inc
daa
enter
fcom
pop
xchg
movs
add
(bad)
push
and
sub
mov
pop
jae
lods
pop
dec
mov
sbb
mov
ins
ins
jmp
scas
mov
xchg
xor
stos
push
mov
(bad)
cli
push
mov
mov
outs
aas
cs
scas
add
xchg
sub
jns
pop
ror
cs
adc
stos
setae
adc
sbb
cmp
shr
int
inc
push
test
dec
call
aad
inc
gs
mov
test
retf
jns
push
pop
(bad)
stos
mov
sub
cs
mov
shl
jle
push
movs
cs
jp
jg
pop
lods
clc
mov
cmp
pushf
mov
cmps
ror
and
ins
sbb
imul
mov
push
push
fld
sbb
and
cmp
jp
fiadd
dec
push
sub
in
fwait
mov
repz
movs
add
adc
out
das
test
(bad)
pop
enter
loopne
into
cmp
pop
out
ins
(bad)
out
jns
daa
cmp
push
loope
pop
pop
mov
inc
in
out
ja
sub
shl
ins
xchg
push
cmps
sbb
pop
ins
xor
jle
push
push
cmp
sbb
mov
enter
cmps
sub
mov
shl
ss
jmp
or
xchg
push
fs
push
mov
pop
imul
rol
in
add
inc
fsubr
ret
xor
dec
stos
add
adc
xor
and
addr16
rcl
ja
jg
jne
js
mov
popa
call
imul
mov
imul
ror
xor
xchg
stc
stos
and
cdq
jno
and
adc
mov
scas
cwde
xor
in
ins
mov
mov
aam
imul
xor
xchg
mov
data16
add
mov
jbe
pop
pop
pop
xchg
xchg
(bad)
not
fwait
xlat
into
push
adc
cmp
xor
(bad)
mov
and
add
movs
xor
mov
fistp
sbb
fcmovbe
fnstenv
retf
jno
pop
lods
dec
mov
int3
gs
loop
lahf
jmp
daa
je
dec
cvttps2pi
es
cmps
xchg
cld
pop
cmps
in
xchg
(bad)
jne
add
inc
mov
(bad)
ds
jge
out
in
mov
loopne
pop
xchg
dec
xchg
mov
sbb
fstp
inc
rol
clc
lods
in
fwait
xlat
repnz
jns
dec
push
(bad)
cmc
pop
xchg
jb
or
xor
and
out
adc
xchg
(bad)
and
push
sti
ret
cmp
push
inc
mov
mov
ror
sbb
mov
clc
sub
mov
clc
mov
stos
fwait
and
or
jmp
mov
mov
mov
in
and
sub
mov
clc
inc
(bad)
mov
loopne
xor
push
sbb
cwde
push
(bad)
jmp
mov
lahf
enter
pop
out
outs
adc
push
(bad)
cmp
ja
stos
push
or
pand
add
loop
mov
rcr
mov
jb
mov
adc
add
pop
(bad)
bound
lahf
dec
fdiv
call
cmps
cdq
mov
cmp
lods
xor
test
or
xor
inc
jbe
retf
inc
sub
cli
dec
jns
add
adc
mov
add
cld
sahf
mov
sub
fs
scas
fsubr
xchg
add
mov
cmp
dec
mov
or
inc
add
xchg
int3
idiv
retf
or
out
out
dec
add
cmp
push
add
pop
iret
(bad)
sti
push
sbb
pop
ds
mov
imul
mov
in
add
fwait
sbb
push
inc
adc
in
sbb
push
daa
ret
adc
pushf
pop
or
mov
(bad)
and
cld
push
mov
ins
in
outs
cmp
cmp
shr
xchg
mov
cli
mov
jle
scas
in
cmp
jno
(bad)
je
iret
mov
dec
dec
mov
movs
test
mov
mov
add
cmps
sbb
jmp
sahf
mov
and
push
xor
sub
adc
movs
js
cmps
xchg
and
adc
and
popf
cs
(bad)
jle
jge
push
test
leave
push
jp
xchg
out
and
cmp
pop
data16
and
mov
repz
cmps
cmc
xlat
jmp
loope
ret
movs
ja
jnp
aad
xchg
lahf
pop
and
inc
mov
push
add
xchg
xor
xor
dec
xchg
push
jp
cmps
hlt
in
ss
loop
stos
xor
movs
cmp
daa
dec
mov
fcom
jg
mov
rcl
mov
xlat
jno
fstp
repnz
push
jo
push
mov
mov
pavgb
cmp
fstp
sbb
lea
jb
lds
or
sub
rcl
aaa
xchg
dec
mov
sbb
test
int3
ret
push
retf
js
std
add
daa
loopne
pop
push
xchg
stc
cmp
xor
lea
xlat
sbb
pop
movaps
scas
test
and
inc
or
loop
jg
mov
mov
push
scas
lods
push
out
fs
xchg
cmp
in
sbb
iret
xchg
sbb
bound
(bad)
xor
push
add
test
sbb
inc
ret
cmp
mov
push
mov
mov
pushf
das
sub
cmc
mov
or
ret
adc
inc
cdq
pop
or
sti
jecxz
mov
push
inc
out
rol
ror
fidiv
stos
bound
push
(bad)
in
push
push
inc
sbb
dec
sbb
cmp
mov
sbb
(bad)
cmp
pop
sti
(bad)
cdq
imul
xor
iret
out
push
jl
(bad)
in
imul
sub
adc
pop
mov
sub
ss
xchg
movs
jae
mov
fldenv
cmp
sbb
mov
mov
inc
mov
lea
mov
ror
mov
xchg
cmp
jg
pop
xchg
sub
test
ins
pusha
das
sbb
pop
jae
nop
(bad)
push
into
mov
test
les
or
repz
and
push
fstp
outs
call
push
pop
and
push
inc
jle
clc
adc
push
test
popa
push
xchg
push
mov
mov
clc
out
adc
and
pop
hlt
test
int
adc
and
sub
sbb
dec
cmp
in
sub
(bad)
jo
and
pop
sbb
mov
xor
mov
push
les
mov
xor
div
pop
fisttp
in
fxch
push
jle
push
in
inc
loopne
push
jle
adc
mov
jns
mov
adc
sub
mov
pusha
sub
push
cmp
jbe
xlat
clc
dec
add
cmp
(bad)
mov
push
jle
cmp
jns
stc
add
cmc
xor
aaa
xor
xor
mov
and
mov
movs
fld
pop
scas
sub
mov
mov
js
rcr
loope
xor
inc
fdivr
mov
fwait
pop
jo
sbb
push
das
scas
mov
out
and
lock
ja
hlt
mov
add
dec
mov
inc
int
xlat
repnz
add
push
xor
or
test
xchg
cwde
je
inc
xchg
movs
or
push
and
adc
call
gs
fnstsw
xchg
add
cli
mov
fcom
cwde
(bad)
daa
scas
rcr
adc
(bad)
sub
loop
mov
test
mov
cmps
neg
adc
(bad)
mov
inc
sbb
add
adc
test
jbe
adc
mov
xchg
or
pushf
gs
dec
adc
out
imul
jge
sub
sbb
mov
push
cwde
stos
mov
(bad)
inc
inc
shr
jmp
jle
into
fld
mov
out
and
mov
add
repz
push
mov
(bad)
xlat
jmp
int
pop
and
inc
lahf
fisttp
imul
cmps
(bad)
push
(bad)
ins
inc
sahf
rcr
xor
leave
push
(bad)
pushw
sbb
ins
cmp
jno
mov
and
pop
and
inc
in
(bad)
and
xchg
pop
dec
inc
xchg
pop
mov
or
das
iret
test
push
dec
cmp
cmp
dec
jmp
jge
ja
aaa
pop
ss
imul
xor
sub
(bad)
mov
cmp
mov
lea
dec
dec
lods
sbb
xor
jns
xchg
xchg
add
jg
scas
ds
jb
dec
(bad)
shl
push
xchg
mov
mov
and
cmp
xor
adc
inc
das
mov
adc
add
dec
dec
mov
fimul
ret
lods
fld
fidiv
mov
inc
inc
or
inc
mov
dec
and
scas
(bad)
sub
mov
enter
mov
pop
cs
sahf
mov
xor
sbb
xchg
adc
xchg
push
jg
aad
popf
enter
cld
pop
out
adc
cli
mov
into
aam
add
mov
push
fld
jle
aam
dec
pushf
pushf
dec
pop
xor
lods
mov
pop
sub
out
leave
dec
add
pop
sub
or
dec
mov
xor
xor
mov
rcl
(bad)
es
imul
pop
test
fstp
adc
fidivr
pop
cdq
sti
lds
push
add
push
bound
or
jmp
add
pop
mov
sub
xchg
into
add
imul
sub
xchg
cmc
aaa
popa
fist
mov
add
xor
or
test
pop
imul
dec
in
imul
mov
nop
xchg
mov
test
inc
stc
mov
aaa
sbb
stc
js
fsub
mov
ja
aas
mov
jbe
das
mov
or
int
ins
mov
push
dec
repnz
dec
aam
fisubr
(bad)
iret
bt
and
clc
call
xchg
(bad)
je
push
jg
popa
mov
dec
push
dec
int
clc
and
popa
pushf
sbb
sbb
add
test
(bad)
fidiv
inc
daa
jbe
sub
push
pop
mov
cmp
pop
xor
(bad)
rcr
jnp
(bad)
(bad)
fsub
sahf
adc
jp
jns
fidiv
add
retf
mov
inc
xor
popa
dec
ret
daa
fxch
pop
dec
add
mov
imul
clc
daa
pop
fs
mov
aam
gs
clc
adc
dec
ss
popf
rcr
xchg
add
test
movs
mov
hlt
push
inc
jbe
jmp
mov
jae
shl
add
mov
and
dec
aam
hlt
adc
xchg
xlat
test
popa
out
dec
ss
not
rcl
jmp
movs
jmp
push
xchg
push
sub
sbb
cmps
lods
pop
leave
sahf
jns
cmp
or
push
addr16
lods
mov
(bad)
mov
pop
pushf
cmp
pop
jo
pop
dec
add
push
inc
imul
pop
jne
in
cmp
(bad)
in
mov
fwait
loop
pop
dec
out
cmp
lds
cmp
jge
enter
cdq
inc
pop
xchg
inc
retf
sbb
test
aaa
push
clc
jae
xor
jns
cmp
aad
add
retf
xor
lods
mov
pop
push
dec
es
mov
test
mov
lods
or
dec
retf
sub
push
or
lahf
sub
ret
add
stc
or
fwait
push
xchg
add
sbb
and
xchg
ficomp
in
mov
cs
push
(bad)
cmp
test
sub
mov
pop
pushf
in
push
(bad)
lahf
loopne
shl
sbb
mov
js
add
inc
cmp
enter
mov
icebp
sub
sahf
mov
call
xor
stos
pop
sti
sbb
add
cmp
ja
mov
and
inc
mov
pusha
out
sbb
xchg
(bad)
mov
not
xchg
and
movs
jne
mov
push
add
cmp
fidivr
pop
stos
inc
mov
dec
(bad)
sbb
sbb
out
mov
out
mov
cmp
ficom
cmc
jne
pop
fadd
add
(bad)
in
fidivr
fsubr
ret
fs
scas
xchg
lds
cli
fild
inc
cmp
ja
cwde
adc
enter
or
xchg
jle
xchg
and
inc
or
imul
push
enter
lods
or
jle
jb
ret
push
smsw
jecxz
lahf
xchg
mov
mov
stc
xor
imul
popf
jbe
inc
jg
fdiv
das
sub
dec
pop
push
fstp
rcr
xchg
mov
mov
mov
ins
scas
mov
sub
test
hlt
mov
inc
sbb
dec
inc
push
scas
or
es
mov
test
xchg
test
lods
xchg
lock
mov
mov
or
mov
and
popa
shl
adc
push
scas
lods
xchg
or
and
fild
mov
cwde
call
(bad)
fld
in
sbb
mov
xor
or
out
shr
sahf
stos
xchg
mov
sar
add
nop
or
rcl
inc
popf
and
cmc
(bad)
popf
out
int
xchg
lds
dec
pop
nop
xor
cmc
(bad)
cli
sahf
dec
fisub
push
and
ret
lods
mov
mov
bound
mov
gs
inc
dec
sbb
icebp
pusha
adc
nop
inc
add
push
test
(bad)
jbe
inc
les
mov
test
push
add
jb
cmps
jle
adc
ja
loopne
and
idiv
add
stos
mov
out
mov
rol
pop
das
mov
jb
(bad)
dec
call
mov
sub
or
mov
mov
mov
adc
mov
dec
adc
popa
cld
push
push
clc
jmp
imul
add
jb
sbb
in
fild
inc
xchg
dec
sar
push
push
sub
mov
xchg
jle
test
ins
mul
and
push
xor
test
mov
cwde
xchg
xor
push
cmps
lock
jl
das
mov
dec
mov
sar
cmp
push
test
nop
retf
add
mov
push
iret
out
jg
lock
aas
lock
clc
xchg
mov
cmps
xor
fiadd
sar
ss
call
inc
retf
xor
fnstenv
addr16
iret
ss
and
add
or
jecxz
push
xchg
mov
mov
aam
and
sbb
mov
cmps
loope
xlat
mov
scas
sub
jg
cmp
popa
inc
jb
xchg
push
sbb
ret
mov
mov
push
fwait
add
sub
dec
sbb
and
(bad)
mov
cli
addr16
xor
jns
sbb
cmc
add
mov
jo
cmc
sub
mov
in
mov
call
ins
pop
fptan
mov
lock
lods
scas
xor
xchg
aaa
push
jb
mov
lods
xchg
int3
int
outs
mov
(bad)
cmp
fnstenv
aad
jg
in
mov
cmp
fdiv
mov
xor
in
xor
ja
pop
dec
mov
daa
js
mov
loopne
cmps
movs
cld
sub
out
aad
cmovge
push
pop
int3
fdivr
add
out
mov
cli
dec
jbe
mov
int3
inc
lahf
or
fisttp
shr
imul
loopne
pop
pop
retf
js
in
movs
int3
fdivr
jmp
popf
jmp
popf
mov
jno
add
dec
aad
icebp
jmp
jp
popa
jge
jno
aas
lods
loop
xchg
and
adc
mov
inc
xchg
rcr
out
xlat
push
push
push
icebp
mov
or
mov
shl
and
xchg
stos
test
xchg
mov
stc
xor
in
out
movzx
mov
jecxz
sbb
inc
jg
or
and
pop
out
push
jns
stc
mov
xor
xchg
lahf
rol
mov
clc
shl
setg
fistp
cmp
nop
js
xchg
loope
add
pop
int
out
pop
test
mov
ja
(bad)
loop
ror
pop
add
xchg
xchg
adc
lds
mov
stc
out
out
(bad)
push
je
gs
pusha
cli
pushf
(bad)
mov
and
xchg
mov
sahf
cmp
stos
sub
push
mov
push
pop
popa
mov
daa
xor
sub
stos
jnp
cli
pop
mov
sar
movs
pop
(bad)
loope
dec
ret
in
xchg
sub
jp
dec
xchg
push
xchg
stos
outs
dec
pop
jl
cli
cmps
pop
xchg
inc
mov
xchg
jne
cld
xor
int3
clc
rcr
xchg
stos
jns
adc
sub
sub
add
bound
jbe
(bad)
inc
sub
in
push
retf
fs
xor
movs
int
xchg
pop
xchg
(bad)
sbb
jmp
imul
and
in
je
sub
lods
retf
sbb
inc
push
stos
adc
xor
mov
jns
popa
loop
lods
xchg
or
popf
stos
je
out
add
imul
inc
stos
mov
jb
pushf
aaa
mov
daa
loopne
outs
or
scas
cmp
loopne
dec
das
pop
jmp
jle
mov
mov
lods
push
in
mov
push
aad
mov
scas
cmp
mov
shl
cmps
jns
jnp
loop
add
add
in
sub
mov
and
jmp
cmp
(bad)
test
xchg
xor
sahf
lods
fnstsw
and
push
lea
imul
push
shl
xchg
pop
dec
ja
cmp
popa
mul
fst
jmp
or
fidivr
arpl
pop
inc
sbb
pop
jp
addr16
sbb
mov
and
xchg
push
jmp
sbb
or
cmps
retf
(bad)
xor
jne
inc
mov
inc
scas
cmp
into
adc
clc
adc
addr16
push
imul
sar
mov
std
mov
bnd
in
in
or
leave
mov
mov
jo
jb
and
dec
je
scas
(bad)
jp
ret
xor
int3
inc
and
jl
and
sub
inc
cmp
stos
fistp
jmp
shl
inc
into
aam
add
adc
jl
cmps
sub
mov
nop
xchg
xchg
mov
mov
push
xor
aas
cmp
dec
and
jle
mov
fsubr
xor
mov
retf
cmps
jb
es
jmp
adc
push
std
push
shl
test
addr16
enter
and
jmp
and
test
jecxz
and
xor
imul
movs
jb
cmp
retf
jp
retf
lahf
out
and
push
jge
adc
dec
cdq
mov
inc
jmp
in
and
cmp
adc
pop
movzx
or
je
enter
add
es
xchg
out
xor
mov
lds
(bad)
out
xchg
adc
adc
dec
inc
or
(bad)
add
loop
les
pop
sub
xor
inc
mov
push
jae
push
jp
pand
sub
sub
xor
jae
dec
jne
jnp
jl
push
inc
pusha
mov
mov
and
scas
mov
jnp
xlat
fild
adc
(bad)
hlt
aad
jo
jle
jecxz
add
int3
and
hlt
pushf
mov
loopne
jecxz
(bad)
(bad)
pop
into
loop
inc
int3
das
ss
(bad)
stc
ins
sbb
test
jmp
jbe
cs
out
push
std
pop
xor
ja
sub
(bad)
xchg
iret
push
int3
(bad)
sbb
repnz
sahf
push
dec
and
inc
jns
bound
loopne
rcr
aam
dec
enter
rol
and
jmp
popf
fidiv
push
out
cmp
jl
mov
scas
fidivr
cmps
fsub
pusha
sub
js
mov
popf
add
cli
inc
js
adc
out
stos
fisub
xchg
or
pop
push
push
in
and
outs
xor
(bad)
(bad)
aam
jae
add
(bad)
jl
pop
add
jp
sbb
or
cmps
aad
scas
in
vpaddq
ins
sub
pushf
pusha
lods
and
mov
cmps
xor
popf
int
(bad)
push
fst
ret
dec
repz
mov
push
add
inc
inc
popf
inc
jmp
jge
js
das
inc
fdivr
(bad)
mov
inc
sub
mov
pop
inc
sub
inc
jg
cmps
adc
adc
arpl
sub
jmp
stos
int3
add
pop
mov
cmp
mov
jbe
lods
mov
out
rcl
imul
hlt
lods
adc
stc
stos
outs
pop
xor
cmp
xor
test
ins
mov
adc
xor
inc
imul
popa
mov
adc
mov
fdivr
sbb
daa
add
and
push
(bad)
xor
jnp
in
pop
retf
loope
push
push
or
cmp
dec
inc
pop
inc
pop
xor
cmp
push
xor
sub
gs
jg
inc
mov
dec
(bad)
repz
pusha
scas
ret
jnp
mov
lds
fs
cmps
rcr
sbb
into
sar
and
pop
nop
sub
cli
bnd
popf
ja
push
or
hlt
and
pop
cld
js
bound
xchg
scas
hlt
loope
sbb
call
lds
pop
gs
or
jne
call
adc
test
mov
sub
outs
or
jl
ret
adc
scas
shl
sub
jnp
pop
dec
aas
jmp
call
xchg
iret
jae
jno
addr16
pop
jl
push
add
div
pop
inc
ja
jmp
xchg
sbb
cmp
and
mov
fist
jo
jmp
pop
js
dec
js
imul
mov
jecxz
mov
cmp
in
and
dec
fadd
pop
retf
sbb
rol
loope
push
push
cs
vmovups
cld
xor
dec
add
repz
enter
push
adc
push
adc
adc
adc
inc
jp
lahf
icebp
push
push
test
sub
cwde
jae
push
scas
pushf
mov
sbb
jge
retf
sbb
adc
div
cmp
fucomi
or
in
lds
pop
mov
jp
addr16
add
inc
pop
xchg
push
pop
jle
and
pusha
test
adc
mov
cmp
sti
sbb
mov
inc
sbb
rcl
pop
sub
mov
jp
xchg
push
cmps
add
int
jle
arpl
fdiv
jb
in
ss
jo
shr
inc
jle
mov
mov
inc
push
sbb
ret
mov
movs
sub
xor
test
rol
xlat
sbb
xchg
lods
push
pop
aad
out
xchg
(bad)
inc
sar
cmp
inc
shr
add
dec
sub
fnstcw
cdq
iret
mov
cmp
push
adc
or
sbb
push
mov
fnsave
xchg
sbb
int3
int3
cs
mov
lea
sub
xor
pop
mov
rcr
jno
out
and
push
inc
jbe
(bad)
hlt
lods
fsubr
pushf
fisttp
call
add
xchg
icebp
push
repnz
es
mov
cmc
dec
add
in
in
out
mov
iret
pop
pop
cmps
inc
(bad)
fucomi
mov
mov
mov
popf
sbb
stos
cmp
push
imul
jecxz
das
es
sub
sub
adc
jb
add
inc
sbb
popa
js
pop
and
or
sub
inc
lea
fmul
pusha
pop
int
pop
imul
fild
fstp
mov
ret
push
daa
push
add
cld
mov
adc
and
in
cli
dec
repz
sub
lahf
or
jecxz
sub
mov
pop
aad
adc
adc
inc
pop
aad
push
add
sub
sbb
pop
repnz
cmp
mov
cmp
addr16
loop
(bad)
cli
mov
icebp
shr
and
and
mov
xor
fwait
mov
cmc
pop
sub
xchg
lahf
inc
dec
xor
pushf
mov
push
sub
jno
std
(bad)
inc
inc
inc
xor
pop
push
pop
adc
cmp
imul
adc
sub
dec
push
xchg
inc
push
adc
shl
inc
xchg
jle
xlat
fsin
xchg
stos
inc
push
fdiv
mov
in
add
add
adc
not
mov
aam
adc
stos
int3
jne
xchg
gs
and
and
mov
pop
xor
dec
in
push
mov
in
dec
stos
adc
popa
loop
cli
inc
bound
mov
add
mov
fs
xor
(bad)
cdq
std
jmp
push
adc
add
out
push
mov
mov
push
sub
in
add
int3
pop
ins
bound
fisttp
cmp
push
jno
pusha
mov
or
mov
sub
xchg
mov
shr
popf
repnz
dec
ds
or
fimul
or
sub
ret
mov
push
clc
dec
ins
sbb
add
xchg
jecxz
outs
mov
pusha
sub
cdq
call
sti
xor
dec
out
sbb
pop
mov
repnz
sahf
xor
push
jne
in
mov
and
cld
or
sbb
mov
jmp
inc
dec
or
inc
and
xchg
or
and
shr
(bad)
in
xchg
fcom
xor
add
fcomip
xchg
test
jp
inc
pop
mov
xor
shr
mov
sbb
aaa
cmp
mov
std
addr16
sahf
inc
sub
popf
xchg
cmp
mov
mov
and
ficom
mov
out
sub
xchg
or
sahf
rol
inc
mov
repz
mov
xchg
xchg
(bad)
icebp
xor
xor
mov
adc
iret
xor
dec
adc
loop
cmp
das
xor
imul
xchg
dec
and
(bad)
lods
push
lock
sub
cmp
push
movs
scas
mov
jne
jbe
or
icebp
popa
sahf
jecxz
ja
add
jmp
popa
mov
aam
icebp
outs
in
adc
pop
aam
dec
loope
mov
xlat
adc
inc
jo
sbb
cmp
sub
cmp
(bad)
popa
popa
dec
jbe
mov
sbb
mov
jmp
and
mov
mov
jmp
sbb
test
jp
scas
stos
stos
mov
out
pop
(bad)
jne
pop
in
add
pop
inc
addr16
fcomp
push
push
or
adc
mov
jp
aas
mov
xor
xchg
movs
rcl
pop
jl
xor
ds
int
rcr
push
aad
int3
jae
movs
cs
mov
mov
xor
ins
fild
jmp
(bad)
or
inc
jmp
(bad)
inc
sub
pop
push
loopne
xor
retf
addr16
repz
or
mov
sti
pushf
cmp
scas
jns
iret
dec
inc
mov
cld
xchg
dec
jp
aad
rcl
dec
inc
cmp
or
push
sub
call
aaa
sbb
push
int
inc
cmp
js
out
adc
mov
xchg
add
test
dec
rcl
hlt
mov
adc
cmps
jge
dec
or
pop
pop
sub
adc
xchg
pop
mov
mov
and
add
pop
popa
add
out
add
sbb
mov
bswap
popa
icebp
fdiv
mov
push
sub
adc
call
and
sbb
das
mov
or
xor
jle
xor
pop
mov
mov
(bad)
lods
inc
enter
inc
jp
lahf
stos
sub
mov
sub
call
cli
fcmovu
idiv
cmp
dec
sub
ffreep
inc
(bad)
mov
ds
pop
aad
in
xor
mov
ins
mov
stc
in
rcr
dec
(bad)
aas
jg
enter
mov
mov
add
jl
xchg
loopne
xchg
in
(bad)
sbb
pusha
dec
mov
sub
jo
addr16
xchg
jbe
call
cmps
jmp
pop
retf
mov
imul
es
mov
shl
clc
adc
push
mov
push
rol
dec
jecxz
xor
adc
mov
or
out
sub
pop
movntq
out
jne
fwait
aam
inc
jecxz
enter
lods
mov
cmp
loop
das
into
int
call
into
btc
push
clc
lods
out
add
cmps
scas
pop
jae
jmp
jo
dec
mov
mov
call
jecxz
retf
mov
xchg
sbb
sub
mov
pusha
xchg
rcr
outs
dec
sbb
ins
test
out
repz
dec
in
aam
ins
enter
xchg
call
xor
dec
lods
hlt
xchg
sbb
inc
in
push
nop
call
xor
ja
aaa
dec
imul
(bad)
cld
or
and
dec
aad
xchg
sub
fmul
cld
lahf
ins
mov
hlt
movs
sub
fs
arpl
pop
aaa
xchg
push
in
or
call
jp
shr
mov
pushf
mov
sar
mov
cmp
pop
ret
aaa
ret
pop
xchg
add
push
add
dec
or
mov
ss
and
jbe
test
(bad)
les
xchg
jo
cmps
mov
or
pop
dec
fidivr
(bad)
sub
pop
pop
xchg
mov
nop
sub
push
out
not
rcr
jmp
adc
mov
jmp
mov
xor
xor
xchg
mov
stos
retf
cmp
fist
sub
scas
cmp
mov
jecxz
ins
lea
cmp
sub
inc
sub
dec
and
movs
or
popa
dec
cmps
add
daa
or
xchg
add
ret
or
addr16
add
fld
sub
ja
lock
push
mov
add
add
cli
mov
sti
call
xchg
test
jno
xabort
mov
jae
out
mov
jp
mov
les
jmp
mov
jo
mov
dec
(bad)
ds
xchg
into
cdq
dec
xchg
in
cs
test
es
cmp
mov
xchg
in
gs
mov
inc
xor
outs
mov
cmp
(bad)
aam
cmc
ret
fisttp
ja
mov
sahf
jp
sub
jne
out
sub
mov
not
jl
enter
jmp
or
pop
or
and
mov
sti
pop
mov
sar
fwait
pop
push
xchg
fdivr
test
add
ficom
inc
lahf
cmc
mov
ror
xor
or
pop
push
jne
or
mov
test
in
and
sbb
mov
mov
das
xchg
sub
adc
scas
push
dec
cdq
adc
push
stc
xchg
xchg
popf
and
sahf
pop
mov
mov
cmp
imul
xchg
out
xchg
out
dec
outs
add
cmps
inc
push
test
xlat
xchg
aad
jge
pop
pop
or
ds
mov
xchg
ins
test
retf
repz
scas
mov
inc
xlat
mov
ds
jns
out
cmps
call
push
test
leave
rol
cmp
shl
push
mov
mov
mov
xchg
dec
loop
(bad)
fidivr
jge
cmc
out
jo
pop
(bad)
repnz
mov
pop
sub
sti
or
stos
xchg
loopne
loop
pop
std
pop
sub
xor
push
jnp
ret
push
data16
rcl
nop
or
out
js
inc
fnstenv
adc
mov
xor
(bad)
push
and
(bad)
fbstp
out
out
pop
jae
jecxz
xchg
push
push
push
mov
hlt
test
push
jae
cwde
(bad)
ss
dec
or
test
and
push
fs
jmp
xor
xchg
(bad)
cmps
sbb
cli
hlt
push
cmp
scas
or
sbb
sub
dec
stc
rcl
clc
inc
test
mov
shl
sub
scas
iret
cmp
mov
ja
fbstp
loopne
mov
mov
test
sub
bound
arpl
dec
mov
xchg
lea
mov
sbb
retf
cs
out
dec
pop
cmp
sbb
mov
(bad)
sbb
mov
cmp
daa
hlt
lock
xor
sub
mov
mov
pusha
push
gs
dec
mov
hlt
jb
push
push
scas
fwait
dec
addr16
jnp
dec
out
ja
leave
push
mov
cwde
cli
and
pop
or
dec
lds
in
cmps
(bad)
or
mov
iret
in
mov
and
jbe
jmp
nop
pushf
add
sbb
push
adc
ja
lea
cmp
stos
das
ret
pushf
or
arpl
mov
mov
call
add
mov
(bad)
xchg
stc
aad
pop
js
push
rcr
lock
mov
retf
pop
inc
inc
pop
stos
mov
inc
xor
mov
leave
js
inc
into
pusha
fcomp
sti
mov
jb
and
mov
jmp
call
sbb
mov
sbb
iret
mov
mov
xlat
mov
aad
movs
add
inc
test
cmps
iret
cdq
and
(bad)
(bad)
mov
imul
jns
adc
ret
stos
xor
mov
dec
push
(bad)
cmp
addr16
leave
imul
mov
cdq
push
ficomp
retf
test
repnz
call
pop
xchg
lods
jge
pop
xor
daa
cmps
add
fwait
dec
mov
mov
adc
enter
add
(bad)
or
mov
cmc
pop
and
loope
jae
sub
retf
arpl
sub
test
adc
xchg
mul
cli
xor
or
adc
fwait
jle
inc
rcr
xor
xor
jp
ja
xor
daa
push
sahf
adc
xor
scas
mov
dec
xchg
lahf
add
adc
(bad)
mov
and
sub
or
add
push
pop
mov
mov
retf
mov
cdq
test
pop
sbb
cli
xchg
ret
hlt
mov
xchg
jecxz
mov
(bad)
out
sbb
clc
pop
imul
inc
cmp
sbb
pop
stos
pop
(bad)
and
mov
cs
sub
fnstcw
pop
into
mov
pop
(bad)
dec
adc
sub
fs
push
rcr
in
fcmovnb
add
sub
inc
jns
sbb
sub
mov
lock
nop
pushf
dec
pusha
jbe
mov
cmp
jl
inc
jnp
jns
sub
sti
std
nop
sti
test
pop
dec
repnz
cdq
inc
push
lahf
call
mov
inc
in
adc
mov
sti
cmp
clc
div
jne
or
fistp
and
mov
or
or
or
inc
rcr
fsub
ins
gs
test
sub
mov
and
shl
stos
push
sbb
cwde
jns
push
xchg
loop
ror
daa
fdivr
imul
ins
sbb
jo
mov
arpl
cwde
and
imul
pop
or
shr
pop
aaa
mov
jmp
imul
xor
jnp
mov
out
(bad)
xchg
sahf
sbb
push
dec
xchg
adc
fnstenv
scas
test
xchg
test
sahf
adc
pop
inc
ins
imul
mov
neg
sub
xchg
dec
xchg
in
cmp
dec
and
pop
mov
icebp
inc
and
std
jo
mov
cli
ficomp
cs
gs
int3
imul
and
sub
jbe
(bad)
outs
outs
mov
iret
inc
jmp
xchg
mov
xlat
jbe
inc
hlt
jmp
lods
jmp
mov
mov
xchg
adc
inc
mov
pop
daa
adc
sahf
xor
push
jmp
xchg
adc
push
mov
inc
scas
outs
cdq
push
pop
adc
das
add
push
jno
test
outs
inc
jg
inc
mov
xor
cdq
xchg
cmp
idiv
imul
mov
inc
loop
imul
ja
adc
fcom
cmp
fcomp
add
add
dec
cmp
mov
mov
ss
je
and
sub
pop
cmp
lds
and
fnstcw
jb
adc
retf
dec
int
in
mov
int
loopne
or
mov
cmp
inc
sbb
and
xchg
loopne
mov
push
(bad)
xor
gs
xchg
test
ja
cmps
fnstenv
inc
das
enter
xor
addr16
push
sar
leave
dec
and
jmp
xchg
in
fabs
sbb
sbb
dec
shl
inc
loop
pop
xchg
dec
pop
mov
lahf
(bad)
mov
pop
shr
fld
adc
sbb
mov
in
ins
out
add
xor
jns
into
jo
in
lods
lods
dec
jo
je
jg
(bad)
ja
cmp
jmp
push
repnz
cmp
cmps
test
and
jmp
mov
pop
(bad)
mov
push
sbb
push
daa
sub
aad
or
hlt
(bad)
jmp
jnp
dec
mov
or
ds
xchg
mov
arpl
fnstenv
rol
mov
psllw
add
cdq
sar
mov
inc
adc
ins
mov
mov
inc
or
pop
mov
ins
cli
addr16
lds
jae
cmp
in
push
movs
in
mul
xchg
shl
xor
fimul
add
and
mov
mov
push
ins
(bad)
mov
in
fld
adc
or
sti
arpl
jp
js
sbb
push
add
lock
cmp
adc
out
push
dec
mov
sbb
add
pop
sub
ret
sti
jbe
sub
push
sub
sbb
test
inc
out
dec
mov
sbb
sbb
ret
movs
js
(bad)
pop
and
out
jl
mov
loop
sub
jnp
fdiv
mov
pop
push
shl
fiadd
or
xchg
cmp
push
or
adc
test
addr16
cmps
int
push
das
aam
xor
cwde
call
dec
mov
mov
push
das
push
cwde
test
push
and
loop
in
test
mov
popf
cmp
addr16
enter
stc
shr
mov
and
aas
lods
(bad)
pop
outs
ds
add
sub
xchg
sub
xchg
push
sbb
xchg
push
sub
mov
in
pop
sbb
mov
shr
jae
lods
push
cmp
cs
xchg
dec
mov
sbb
pop
daa
adc
movs
(bad)
and
imul
adc
cwde
out
fisttp
ror
(bad)
out
mov
into
jno
jmp
xchg
cmp
popf
mov
xor
ins
fild
mov
pop
fsub
test
lea
sbb
xchg
leave
ins
cmps
adc
into
or
mov
pusha
jnp
adc
(bad)
fwait
movs
dec
or
movs
sub
push
iret
and
outs
inc
jo
xchg
out
stos
inc
leave
jl
jecxz
scas
mov
(bad)
xor
lahf
jb
jmp
sub
and
and
adc
cmp
outs
jge
movs
inc
sub
in
mov
xchg
adc
push
push
fnstsw
enter
jg
and
fcmovu
dec
out
loope
inc
push
stc
adc
mov
lock
inc
in
js
retf
adc
cmp
in
dec
repz
mov
mov
stc
scas
pop
(bad)
jge
fist
out
dec
cmps
xor
aam
mov
xchg
adc
sbb
fs
xor
xchg
(bad)
xlat
mov
out
add
inc
and
adc
outs
and
mov
(bad)
adc
jmp
or
xor
(bad)
out
jne
dec
push
push
adc
arpl
mov
mov
sbb
les
mov
mov
push
cmps
fdiv
test
mov
fild
mov
movs
scas
fneni(8087
inc
in
inc
je
sbb
mov
sar
es
dec
jne
or
hlt
pop
jmp
dec
cmps
test
test
adc
pop
and
dec
jmp
jl
imul
fwait
or
stos
pop
fmul
dec
cmp
xor
mov
or
mov
lods
neg
mov
ss
mov
mov
push
push
shl
sbb
test
das
xchg
sti
add
push
mov
dec
loope
repz
das
aas
sbb
daa
xchg
add
mov
pop
sti
jbe
mov
inc
imul
xor
hlt
scas
je
jne
fsub
or
scas
sbb
or
repz
inc
pushf
jmp
cmps
lods
mov
icebp
push
xor
cld
cmp
jb
icebp
arpl
(bad)
es
in
ins
leave
fcmovnu
(bad)
jge
or
scas
arpl
jmp
gs
test
adc
nop
dec
or
test
jmp
cmp
cmc
adc
push
mov
mov
fidivr
add
inc
imul
aad
sbb
ret
mov
jp
or
cmp
jne
fs
pop
mov
clc
dec
sub
sub
imul
mov
inc
push
or
cmp
mov
jns
shl
clc
in
(bad)
out
push
icebp
ret
call
cmp
nop
adc
push
fist
jmp
in
inc
fcom
shl
fwait
je
adc
int3
imul
sbb
out
xchg
or
imul
xchg
les
cmp
mov
add
stos
and
pop
imul
fwait
test
push
xor
cdq
push
adc
adc
mov
xchg
pop
jl
cmp
cld
cmp
sbb
or
aas
lea
sub
cs
and
mov
lea
jbe
stos
push
test
dec
xor
xor
xchg
add
(bad)
cmps
(bad)
dec
pushf
mov
push
sbb
sub
bound
pop
popf
daa
inc
add
cmp
xor
lahf
or
ds
xor
enter
sbb
mov
jecxz
add
pop
adc
int
imul
in
out
pushf
or
push
inc
scas
hlt
adc
outs
mov
mov
rcl
leave
pop
out
cli
jge
inc
out
dec
and
jmp
outs
inc
push
jp
iret
loopne
aaa
cmp
outs
fwait
dec
fidiv
pusha
push
mov
xlat
imul
pop
xchg
fsubrp
scas
les
bound
ss
fwait
bound
inc
dec
cdq
outs
push
pop
fcmovnbe
sbb
sub
and
in
xchg
push
cmc
push
push
retf
cmp
repnz
cwde
dec
out
sbb
ss
mov
or
movs
aam
adc
ret
adc
pop
loop
mov
std
jg
mov
ins
pop
sti
rcl
sub
jnp
adc
fimul
inc
push
mov
fcmove
add
aas
adc
stos
popa
add
ss
inc
inc
dec
xchg
test
in
ficom
pop
add
in
xor
sub
or
inc
ins
mov
or
sub
fisub
jp
push
mov
lds
into
gs
push
ins
fld
add
bound
jecxz
mov
cmp
repz
rol
xchg
shl
cmps
push
sub
lea
shl
ror
(bad)
pop
fild
push
arpl
dec
push
xor
jp
dec
xor
or
pop
cmp
push
cmps
sub
ror
cmp
xchg
xor
out
jl
gs
push
jno
mov
mov
mov
addr16
and
fsubr
stos
repnz
fimul
jecxz
inc
mov
mov
xchg
sbb
stos
inc
jle
popa
sbb
pushf
or
inc
inc
fld
aaa
lea
mov
scas
fcmovnbe
and
add
mov
mov
add
cmps
adc
rcl
sbb
fs
and
jmp
and
int
push
jl
out
loopne
push
(bad)
add
and
into
daa
shr
push
adc
cmc
lea
push
imul
push
out
mov
jae
js
lahf
arpl
inc
dec
(bad)
(bad)
xchg
adc
out
and
or
enter
test
outs
mov
xlat
(bad)
fwait
and
xor
adc
push
and
into
sub
popa
sbb
scas
jb
jp
jg
cmc
jmp
leave
pop
mov
cvttps2pi
stc
and
mov
scas
aas
jge
pop
or
cld
xchg
in
or
push
push
cmc
or
(bad)
mov
mov
std
xor
adc
out
pop
mov
dec
loopne
repz
imul
fild
aas
movs
jl
push
inc
add
sti
pop
jl
jmp
jnp
inc
mov
fdivr
test
push
sub
mov
mov
sub
jle
loop
mov
inc
ror
call
cmp
push
test
jmp
or
dec
das
or
pop
jmp
sysenter
loop
stos
xor
mov
sub
test
xor
inc
push
cmp
mov
pushf
cmp
mov
out
ss
jo
mov
into
jmp
mov
clc
xor
jl
mov
add
lods
das
movs
push
jnp
push
add
cmp
pop
cdq
pusha
imul
and
sub
push
jbe
icebp
neg
mov
into
mov
in
add
jl
in
adc
xchg
mov
fcomp
mov
lods
push
shl
xlat
bound
in
std
popf
neg
movs
imul
pop
jns
and
mov
cmp
outs
push
mov
cmps
sbb
movs
in
fwait
and
div
mov
mov
mov
push
out
mov
push
stos
pop
fdivp
clc
mov
dec
ja
mov
mov
push
shl
mov
aas
add
je
add
cmp
fsubr
and
xchg
repz
int
test
pop
imul
sbb
lods
loopne
repnz
dec
out
sub
ret
add
enter
jnp
cmp
lods
sub
push
pop
lods
(bad)
outs
cli
or
cld
psubd
cwde
retf
dec
repnz
cmc
and
adc
mov
add
mov
push
fisttp
int3
dec
out
add
mov
mov
in
sub
mov
sub
ja
cmp
jle
adc
fmul
cmp
in
xor
push
and
out
outs
cmp
ret
jno
mov
call
les
stos
ror
add
xchg
in
ret
retf
pushf
adc
dec
pop
inc
lods
jp
inc
rcl
jge
xor
test
cmp
and
xor
jne
inc
icebp
xor
repz
es
aam
(bad)
pop
icebp
hlt
leave
lahf
int
mov
rcl
cmp
mov
rcr
inc
add
mov
mov
sbb
xchg
in
dec
mov
mov
mov
bound
cmp
cld
adc
stos
adc
adc
pushf
(bad)
cmp
int3
scas
sub
xor
push
push
imul
jnp
fcom
jmp
and
test
mov
sub
inc
push
fidivr
in
mov
jne
push
imul
lds
adc
push
aad
cmp
pop
lahf
aas
retf
jge
add
xor
dec
out
cwde
sub
out
lock
ins
imul
xchg
xchg
adc
push
cmc
mov
push
aas
lods
mov
rcl
inc
popf
lods
in
jne
retf
xor
les
mov
repnz
cmp
add
fs
inc
xchg
mov
outs
mov
cmp
xor
sti
xor
cmps
fld
out
in
hlt
sub
sti
ffreep
push
cdq
xchg
lock
mov
(bad)
jmp
repnz
jae
xchg
xor
cwde
xchg
dec
pop
aad
inc
mov
xlat
retf
dec
sbb
imul
pop
jno
icebp
lds
sub
pushf
push
cmp
jmp
jnp
dec
ja
rcr
scas
lea
inc
sub
in
and
add
(bad)
adc
ja
fadd
fninit
repnz
pushf
mov
inc
rcl
(bad)
clc
ja
pop
and
and
jmp
pop
and
inc
scas
hlt
lods
xor
cmps
test
dec
pop
cdq
imul
test
cmps
jae
popa
xchg
mov
push
sbb
pop
mov
nop
push
cmp
jmp
add
clc
je
addr16
mov
jecxz
rcl
lea
cli
enter
cwde
xchg
mov
jecxz
js
aaa
push
inc
mov
cli
sti
inc
int
jo
add
pushf
pop
sahf
cmp
push
mov
and
xor
fisubr
ja
pop
or
das
pushf
popa
sbb
xor
cmp
adc
dec
mov
sbb
call
cmp
fsubr
imul
arpl
sub
xor
mov
jb
cmps
fistp
sti
gs
(bad)
cmp
rol
sub
repz
mov
call
dec
int
push
push
rol
out
leave
and
adc
dec
and
mov
add
push
daa
lds
dec
call
or
ja
popf
(bad)
adc
dec
mov
jg
in
ficom
cmp
push
adc
lea
pop
fdivr
and
hlt
gs
arpl
jb
jmp
test
jmp
lock
mov
cmp
mov
(bad)
xor
repz
loopne
mov
xchg
dec
pop
mov
sub
dec
pshufw
cmp
or
ds
lods
(bad)
leave
sbb
dec
std
jp
sti
and
mov
jbe
cmps
adc
push
rcl
clc
and
and
pop
clc
push
mov
lds
inc
dec
imul
mov
out
dec
mov
btc
add
gs
mov
dec
or
outs
js
sti
push
out
(bad)
jbe
push
sbb
xchg
(bad)
(bad)
lea
push
lds
enter
jmp
jmp
sbb
(bad)
pop
shl
mov
daa
inc
push
xchg
retf
jbe
ret
cmp
mov
mov
scas
xor
xlat
jb
test
mov
inc
push
bound
div
xchg
test
dec
fs
mov
cmp
cmps
sbb
and
cmp
mov
jmp
and
adc
cli
test
test
push
in
or
mov
dec
xor
sub
scas
pop
inc
or
div
aas
mov
or
fadd
and
mov
ins
jle
popf
or
mov
into
jl
mov
jle
xor
mov
js
xor
aam
cmp
jl
imul
inc
retf
adc
pop
add
int
sbb
or
push
mov
push
jge
push
jae
jb
mov
cwde
rcl
mov
(bad)
int3
inc
in
ja
movs
push
mov
js
call
movs
cmp
sub
push
cmps
mov
mov
lock
jmp
or
add
push
sub
scas
dec
fld
js
xchg
cmps
sbb
retf
dec
mov
aad
mov
dec
ins
inc
jp
mov
adc
mov
ins
or
cld
mov
cmp
(bad)
dec
push
adc
mov
gs
jbe
ret
lods
add
cmp
xlat
scas
mov
call
inc
outs
aad
xor
mov
out
aad
cmp
les
repnz
lock
cmp
cmp
je
int
jge
call
adc
leave
mov
daa
or
adc
std
mov
lock
ret
sbb
pop
cwde
fmul
push
adc
sbb
mov
cs
dec
lahf
es
push
pop
fidiv
outs
xlat
dec
nop
jmp
pop
movs
(bad)
pop
or
scas
jp
lods
jno
jle
enter
xchg
add
jnp
inc
add
nop
cmp
mov
ret
mov
jb
and
aam
xchg
xor
outs
jb
arpl
int
jg
loop
or
scas
add
xor
push
inc
imul
cmps
stc
data16
xchg
sbb
neg
jge
mov
jmp
xchg
int
mov
sub
push
xlat
out
movs
dec
fisub
mov
into
pop
test
lods
xor
xchg
mov
adc
int
das
cs
pop
retf
cli
sbb
icebp
mov
mov
retf
dec
push
mov
retf
data16
ja
ja
(bad)
pop
(bad)
jbe
or
in
and
cmp
xchg
stc
stc
out
adc
movs
(bad)
fsub
push
fimul
in
call
sub
retf
push
lea
mov
mov
sbb
pop
xor
call
cdq
xchg
mov
mov
or
pop
mul
push
sub
jle
(bad)
sub
adc
(bad)
gs
or
pop
sbb
inc
call
lahf
xor
inc
imul
stc
pushw
mov
add
sti
cmc
ror
mov
shl
sbb
lods
call
adc
ins
mov
mov
add
mov
sub
mov
into
out
bound
sub
clc
mov
movs
shl
movs
dec
adc
pop
add
mov
push
mov
adc
jecxz
jmp
dec
aas
sbb
add
sbb
mov
dec
mov
in
pop
jb
jns
xchg
cld
pop
or
iret
mov
adc
adc
dec
fnstcw
arpl
cmp
inc
sbb
sub
sar
(bad)
mov
stos
or
cdq
retf
aad
(bad)
lock
or
pusha
je
and
xchg
cmp
and
cmc
jne
mov
jl
into
fldenv
in
mov
jmp
push
inc
test
mov
loope
push
adc
imul
xlat
push
push
repnz
pop
dec
rcr
dec
dec
in
imul
(bad)
lods
pop
pushf
ficomp
scas
cmp
sbb
ja
inc
dec
imul
push
pop
inc
mov
mov
repz
stos
js
xor
sbb
cmc
jle
push
ror
or
out
cmp
outs
cmps
in
mov
cmp
les
ss
mov
sub
and
or
or
cs
ds
mov
or
jbe
mov
sub
popa
add
xchg
push
push
je
shl
mov
add
and
cld
outs
sub
loopne
out
out
and
pop
loop
sbb
scas
xlat
cmp
fsubrp
int
cwde
cs
(bad)
imul
or
shr
cs
movs
int
test
repz
lock
push
pop
and
push
cmp
adc
mov
jno
rol
cmc
cld
mov
or
iret
addr16
push
(bad)
mov
jo
leave
outs
cwde
ja
mov
pop
int
loop
sbb
retf
dec
(bad)
mov
sbb
jge
stos
mov
in
popf
retf
mov
call
ss
xor
inc
push
gs
xor
and
mul
ds
lods
js
(bad)
dec
mov
push
mov
enter
jne
shl
repnz
push
ins
das
aad
dec
icebp
xchg
inc
popa
neg
int3
sbb
gs
(bad)
fsub
xchg
dec
mov
push
cwde
repnz
or
push
outs
push
into
mov
movs
pop
loop
(bad)
jnp
mov
xlat
mov
add
rol
shr
inc
rcl
fdivr
daa
sti
sub
std
cmp
mov
xor
pop
lds
pushf
shl
adc
pushf
ins
inc
dec
arpl
pop
call
inc
dec
rcr
push
mov
cmp
and
pop
sub
sti
sub
cmp
sub
pop
adc
pop
or
ja
std
sbb
loopne
frstor
pop
pushf
lock
xor
mov
js
outs
imul
leave
sti
pop
out
aad
xchg
pop
mov
and
jbe
leave
push
cmps
xor
inc
call
mov
iret
repnz
and
shl
nop
retf
xor
or
jge
pop
mov
fwait
adc
test
xor
out
xchg
xchg
ret
add
cld
pushf
xchg
data16
or
cs
sub
push
add
mov
fiadd
xor
dec
cmp
(bad)
jns
loope
mov
dec
jmp
jecxz
sbb
adc
sti
jnp
repz
jo
add
in
mov
mov
pop
cmp
out
hlt
(bad)
rcr
daa
scas
ja
into
lock
or
mov
inc
mov
shl
push
xchg
jp
inc
cmp
sti
sbb
cli
loop
in
pusha
xchg
or
rcr
cs
pop
sbb
add
cmp
jne
jbe
xor
jecxz
in
pop
clc
and
nop
and
test
aam
push
push
cmp
dec
rcl
pop
pop
mov
push
rol
es
sub
xor
cwde
adc
sbb
out
out
add
ficomp
mov
stc
xchg
sahf
xor
mov
nop
repz
lock
stc
push
out
mov
je
ja
xor
push
enter
fcomp
mov
jecxz
mov
add
(bad)
cmps
mov
(bad)
push
jb
pop
imul
pop
ror
jo
sbb
pushf
or
push
mov
iret
mov
or
jo
jmp
xchg
test
mov
mov
and
cs
dec
popf
test
enter
sbb
rol
inc
addr16
mov
repz
pop
movs
and
ss
mov
jnp
xchg
je
xor
adc
inc
xchg
out
inc
pop
jo
jmp
sbb
mov
out
into
xchg
stos
adc
call
adc
test
push
cwde
mov
loope
stos
call
cld
or
jp
call
ja
loope
scas
stos
and
adc
inc
sahf
bound
push
mov
jp
mov
sub
not
out
add
xchg
stos
and
pop
and
mov
or
sbb
add
test
jmp
add
idiv
daa
icebp
(bad)
push
adc
push
and
push
xchg
sbb
xchg
mov
retf
test
idiv
pop
js
inc
mov
xchg
and
out
pop
mov
addr16
stos
fwait
cmp
sub
pop
sub
daa
xchg
adc
jmp
inc
stos
cmp
(bad)
or
ins
lahf
aaa
je
xor
sub
in
stos
scas
inc
mov
popa
out
icebp
out
pop
cmps
scas
mov
outs
lock
sub
test
mov
xor
xchg
lds
push
stos
add
mov
xchg
mov
sbb
ins
cmc
(bad)
mov
push
or
mov
push
addr16
retf
sbb
jecxz
dec
fadd
movs
fidiv
jnp
pop
xchg
push
pop
movs
mov
scas
shl
or
or
push
cs
xlat
sbb
bound
idiv
pop
inc
xor
mov
pop
cld
(bad)
test
stos
xchg
(bad)
sbb
and
(bad)
scas
adc
mov
or
xor
pop
sub
fucomi
or
lods
pop
cld
addr16
and
pushf
clc
xlat
shl
nop
and
sbb
test
dec
jle
stos
shl
add
rcr
and
call
cdq
jmp
data16
sbb
test
jne
fdiv
xchg
sar
xlat
fwait
not
nop
cmp
adc
push
push
test
lods
fst
pop
fsubr
shr
pop
iret
and
int3
and
push
xor
add
sub
or
(bad)
enter
xchg
movs
add
jl
sbb
adc
jge
dec
ja
std
in
add
mov
add
out
sbb
adc
or
xchg
jo
loop
jo
adc
dec
add
push
enter
dec
xchg
push
test
push
pop
movs
cmps
cmc
push
pop
add
in
or
movs
arpl
or
inc
adc
jbe
popf
dec
cs
cmps
mov
pop
sub
stos
cmps
push
mov
inc
mov
jae
sbb
out
xchg
mov
dec
mov
(bad)
cmp
push
xor
jmp
inc
dec
aam
arpl
faddp
dec
jle
dec
adc
pop
cmp
xchg
and
mov
jecxz
lods
clc
push
(bad)
adc
jmp
jp
movs
cmps
aad
sbb
fild
std
bound
pop
dec
sbb
in
cld
cmp
je
(bad)
rol
movs
pop
rcr
mov
(bad)
xor
sub
mul
loop
adc
xor
inc
push
ret
mov
or
in
aam
outs
pop
cs
outs
andps
pop
clc
gs
and
push
pop
ret
(bad)
js
sbb
cdq
push
mov
mov
mov
(bad)
xlat
(bad)
iret
call
xchg
jmp
(bad)
mov
arpl
aam
out
es
cs
in
retf
or
mul
cmp
addr16
dec
icebp
loopne
fwait
sbb
dec
inc
mov
push
and
call
cmps
int3
aam
(bad)
push
xchg
adc
imul
loopne
stc
jmp
lods
dec
mov
lods
out
shl
cmp
push
inc
inc
out
out
mov
sbb
ins
xchg
sbb
fnsave
mov
lods
sbb
rcr
sub
add
cmp
dec
out
and
and
mov
in
mov
in
adc
inc
out
xchg
add
loope
push
(bad)
dec
or
mov
stos
and
sub
ret
test
cmp
push
mov
jo
push
ins
add
pop
fmulp
fimul
add
(bad)
push
test
mov
dec
xlat
fld
sti
cmp
outs
pop
in
jg
fnstenv
xchg
mov
mov
push
push
pushf
pop
push
mov
test
jp
mov
jg
loop
movs
sub
popf
mov
cmp
test
jnp
fstp
xchg
mov
aaa
cli
or
repz
sub
jl
sub
inc
pop
dec
sbb
lods
aad
(bad)
jle
adc
dec
push
pop
retf
aas
shl
enter
push
outs
push
int3
push
call
test
jmp
jl
mov
xor
lods
je
cmp
jno
in
and
and
arpl
mov
repz
cmp
mov
test
mov
maxps
push
hlt
cli
arpl
cmp
xor
test
stc
dec
std
pop
std
mov
lods
mov
mov
cdq
jne
pop
jne
xor
xchg
arpl
(bad)
xchg
std
(bad)
adc
jmp
xor
dec
push
stos
sub
loop
(bad)
mov
popa
sbb
call
cmp
mov
(bad)
xor
inc
sbb
xor
jo
mov
outs
jns
xor
(bad)
jg
or
clc
stos
jg
pusha
xor
jmp
in
xchg
aam
js
cmp
mov
sub
(bad)
cmp
je
xor
test
out
dec
aad
scas
dec
fsub
add
imul
mov
call
mov
inc
pop
cmp
dec
daa
ja
hlt
jb
retf
xor
pushf
push
push
and
hlt
adc
test
inc
cmp
inc
fbstp
jne
add
hlt
inc
and
inc
popf
ror
int3
retf
cmp
pop
jnp
inc
sub
bound
cmp
aad
scas
(bad)
xlat
jo
mov
lea
jb
call
sar
jnp
jmp
cmp
loope
cld
shl
jnp
hlt
(bad)
sbb
clc
mov
dec
push
in
cmp
loope
xor
jmp
stos
hlt
or
mov
das
jo
mov
xchg
(bad)
add
sub
ret
out
repnz
test
dec
mov
cdq
pop
push
retf
pop
and
mov
sbb
or
xchg
(bad)
push
and
out
movs
(bad)
sar
xlat
mov
retf
mov
fstp
mov
test
xor
fbstp
sub
ret
stos
xor
shl
mov
ds
xchg
xchg
push
lds
neg
sbb
sbb
out
dec
xchg
or
mov
enter
dec
sub
jno
movs
test
daa
imul
inc
hlt
cwde
lahf
mov
pop
xor
mov
add
add
ficom
repz
sbb
ret
inc
push
leave
sbb
hlt
sub
cmp
fs
fs
loopne
ja
xlat
fist
call
mov
push
and
pop
retf
add
xchg
jo
mov
mov
lea
push
xchg
dec
fdiv
push
sub
(bad)
cmc
ds
xchg
in
nop
mov
cmps
sub
jo
call
cmps
jge
retf
sbb
(bad)
ret
cdq
mov
mov
cmp
call
push
add
rcl
ficomp
popa
cmps
inc
fst
mov
and
(bad)
cmps
mov
add
popf
xor
les
and
jmp
leave
sbb
mov
inc
test
imul
push
sbb
xor
jno
ins
mov
cs
and
mov
or
push
or
mov
imul
add
fdivr
lods
mov
fucomip
xor
test
dec
nop
repnz
out
xchg
push
cli
jecxz
sbb
inc
dec
cmp
ds
push
fucomip
mov
mov
cmp
dec
mov
adc
cmps
sub
(bad)
stos
cdq
loope
mov
jnp
call
movs
bound
mov
mov
jmp
hlt
push
mov
dec
inc
sti
sti
push
pop
jecxz
(bad)
(bad)
push
jmp
out
test
stc
dec
adc
dec
aas
xor
xchg
and
stc
jno
ins
jmp
inc
push
sub
int
cmp
loop
push
leave
jae
inc
dec
jb
adc
mov
xchg
lds
out
cmp
data16
es
jmp
cmc
add
cmp
mov
inc
push
je
xchg
xchg
push
cmp
nop
shr
inc
int3
mov
in
or
mov
shr
aas
pop
int
sbb
mov
adc
data16
and
or
hlt
mov
js
mov
in
jmp
inc
arpl
in
aaa
jg
shr
loope
push
mov
sub
rcl
mov
push
clc
(bad)
aas
and
movs
xlat
in
sbb
pop
cli
sbb
imul
dec
ret
int3
push
jecxz
jno
inc
lea
push
fcom
icebp
pop
dec
cmps
call
ja
xchg
cmp
jmp
fwait
test
xlat
out
cmc
pop
and
jge
sbb
in
inc
jb
inc
(bad)
pop
(bad)
mov
pop
xchg
sbb
push
shl
ins
cmp
mov
sbb
adc
push
das
dec
or
cmps
popa
scas
ja
js
in
ins
dec
adc
pop
xor
lods
and
hlt
inc
jnp
add
adc
or
dec
sar
out
and
fld
mov
ins
popa
xchg
imul
mov
iret
mov
jmp
stc
push
xor
call
xor
cmps
retf
in
add
mov
jno
arpl
push
inc
push
sar
test
cmp
addr16
imul
sbb
mov
xor
and
sbb
jl
cs
cmp
xor
stos
in
inc
movs
(bad)
mov
jge
jns
popa
mov
adc
mov
jecxz
fidivr
loopne
push
fadd
stos
cmp
mov
ds
push
repz
int3
lds
lock
jne
les
neg
mov
mov
xor
push
xlat
stos
iret
arpl
mov
xlat
mov
retf
xchg
test
or
pop
adc
loope
cdq
push
outs
mov
(bad)
xchg
retf
cmp
arpl
push
inc
jge
sub
test
sar
or
push
inc
push
enter
add
sahf
cs
(bad)
mov
scas
es
adc
shl
mov
outs
xchg
adc
call
cmps
mov
test
or
into
fcom
add
pop
sub
add
jmp
in
cmps
fwait
push
and
xlat
inc
repz
xor
mov
sub
ins
repz
icebp
mov
mov
mov
add
ret
xlat
jnp
jno
jns
mov
fsqrt
in
std
loopne
push
and
retf
sahf
add
pusha
pop
movs
leave
nop
sbb
push
mov
mov
push
and
sti
jl
scas
nop
pop
cmp
fstp
add
out
push
mov
and
shl
pop
lds
dec
mov
cli
stos
adc
pop
mov
neg
shl
neg
cmp
scas
mov
and
cmc
add
sbb
cmp
lahf
movs
arpl
adc
jne
retf
add
sti
sbb
adc
jmp
jl
lahf
es
iret
mov
fbld
aaa
loop
std
enter
cmps
lea
or
pop
sub
loope
lea
dec
xor
mov
mov
sbb
test
lods
jns
inc
mov
gs
mov
mov
ins
fadd
(bad)
rcr
test
pop
push
pop
mov
xor
jae
push
jb
fnstsw
jo
pusha
pop
push
js
xlat
into
dec
sar
(bad)
leave
mov
xchg
push
sub
ds
pop
cmp
cmc
in
xchg
test
repz
sbb
push
test
imul
dec
or
mov
fcmovnbe
pop
jle
ss
cmp
xchg
pop
jno
cmps
out
cmp
add
jl
ins
repz
lods
add
xor
cwde
es
mov
popf
mov
call
pop
mov
fcmovbe
adc
outs
fs
neg
cmc
and
cmp
(bad)
sbb
mov
scas
mov
fadd
mov
fldcw
sbb
mov
dec
es
stc
pop
fidiv
mov
fist
scas
push
push
xchg
xchg
daa
sub
sbb
cmp
pusha
mov
xor
sub
add
mov
fnstcw
ds
repz
dec
fcom
sbb
outs
sbb
lods
in
fbstp
jmp
xchg
fisub
mov
cmp
div
icebp
sbb
mov
lods
cmp
push
cmp
sbb
sbb
or
imul
mov
ins
inc
test
fldcw
mov
sub
data16
in
mov
xchg
imul
mov
inc
jno
jmp
cld
xor
(bad)
shl
mov
repz
in
jge
jmp
and
pushf
std
(bad)
sahf
xchg
fst
jecxz
or
inc
xor
in
(bad)
mov
aaa
cli
jp
cmps
sti
xor
cmc
xor
dec
popf
xchg
fcomp
nop
ror
mov
ins
aad
test
daa
inc
imul
pop
inc
in
fistp
or
shl
mov
push
mov
cld
or
je
xchg
sub
je
inc
xchg
cmp
sub
xor
ffreep
pop
mov
rcr
sar
add
mov
ins
adc
shl
adc
dec
sahf
mov
(bad)
dec
jg
test
xor
mov
lea
enter
ret
xchg
push
icebp
iret
cli
push
ss
sub
sub
arpl
ret
stc
cwde
imul
fcmovb
push
cmp
test
xor
adc
add
xchg
call
or
aaa
fmul
xchg
push
fiadd
xor
div
inc
xor
cli
test
mov
xchg
xlat
pop
xor
mov
pop
sbb
js
(bad)
pop
jl
inc
cld
fidiv
(bad)
mov
(bad)
movs
pop
mov
or
xor
push
inc
xchg
cwde
pop
test
(bad)
sub
cmp
fwait
aaa
not
cmp
jo
xchg
repz
movs
add
push
(bad)
stos
or
scas
int
jmp
in
pop
adc
push
mov
in
dec
aas
sti
sub
shr
mov
(bad)
movs
imul
dec
in
rol
jae
jl
mov
cdq
scas
push
nop
adc
movs
cmp
mov
mov
dec
bound
rcr
stos
dec
dec
out
stos
aam
push
pop
stos
jbe
(bad)
xchg
sbb
xchg
sbb
xchg
adc
add
rcl
pusha
outs
std
xlat
sub
lahf
das
dec
pcmpeqb
pop
mov
jmp
dec
sti
loope
int3
mov
xchg
ret
cmp
sar
inc
ins
daa
xor
sbb
enterw
pop
xor
ret
rcl
dec
clc
mov
xchg
xchg
add
ds
es
add
push
mov
inc
mov
lahf
mov
les
jmp
mov
pop
ficom
push
xchg
jnp
outs
jo
jg
ret
mov
aam
out
push
ret
ja
jb
mov
fs
(bad)
and
das
inc
inc
ror
add
ja
outs
adc
push
sar
lock
outs
sbb
xor
and
mov
and
pop
scas
mov
pop
fwait
stc
xor
test
dec
test
aaa
jge
mov
imul
enter
rcl
mov
imul
add
mov
push
mov
inc
xchg
sub
add
xchg
es
cmp
sub
or
and
cwde
scas
mov
nop
pushf
sub
loopne
sbb
sbb
xor
scas
cmc
dec
jbe
or
or
mov
dec
xchg
into
iret
es
inc
out
jmp
push
jg
mov
push
iret
and
mov
jg
sub
neg
stos
pop
iret
adc
mov
pop
xor
pop
push
shl
pushw
mov
ins
adc
cmp
aam
pop
daa
or
int
lods
sub
dec
mov
sti
movs
in
pop
jl
and
mov
cdq
in
push
enter
or
xor
test
mov
and
sbb
(bad)
push
imul
jno
call
out
hlt
and
lds
das
sahf
jb
popa
xor
ss
mov
data16
rcl
std
dec
sub
call
cwde
mov
outs
push
push
sbb
dec
xor
loope
in
pop
mov
rol
scas
jne
pop
push
mov
js
loope
adc
jno
leave
cmc
movs
sbb
mov
into
outs
mov
mov
add
push
test
sbb
les
and
sub
test
lea
std
jle
adc
popa
inc
lea
fiadd
xchg
shl
stos
push
xchg
test
pop
ret
dec
xor
or
test
adc
push
xor
jae
add
mov
sub
call
mov
and
out
or
mov
sbb
sub
cmp
xor
mov
out
imul
sub
popf
out
pushf
fiadd
cld
add
push
adc
and
das
jl
ror
fcmovbe
popf
jne
or
shr
mov
ds
ret
aad
call
fdivr
mov
mov
(bad)
dec
xor
sub
cmp
repnz
cmps
sbb
xchg
outs
lahf
adc
not
mov
adc
ins
sub
adc
inc
and
repnz
mov
xor
sti
push
in
sub
loope
xor
test
ins
sbb
sti
cmps
jg
xchg
imul
mov
sbb
int
add
xchg
push
sar
stc
or
lods
test
inc
cs
mov
cld
sub
rdrand
psrlw
pop
imul
push
(bad)
mov
stos
shr
adc
push
cmp
xor
mov
mov
shl
pop
and
cld
jns
imul
dec
cdq
sub
addr16
add
pop
dec
push
iret
(bad)
cmp
dec
pop
xchg
mov
mov
sub
(bad)
xchg
stos
test
inc
(bad)
fcomp
scas
xchg
adc
sbb
jl
mov
sbb
dec
add
fisubr
movs
inc
xchg
mov
mov
pop
scas
rol
and
xchg
mov
js
lods
loope
ds
shl
js
in
jg
fsubr
jl
(bad)
push
pop
(bad)
mov
mov
sub
scas
push
xchg
xchg
xchg
(bad)
xor
sbb
fistp
or
movs
mov
hlt
stos
jns
pop
mov
or
fisttp
into
out
stos
test
sbb
popf
cmp
pop
movs
mov
fs
push
lahf
push
ret
push
dec
outs
sbb
outs
mov
xchg
aaa
outs
aad
jo
dec
cs
aam
jp
sub
test
sbb
ss
xchg
aas
adc
mov
ss
cmps
mul
or
pop
cmp
xor
lock
mov
out
lods
and
scas
jo
sbb
push
fsub
fwait
test
(bad)
dec
jno
dec
sub
prefetchwt1
or
in
xchg
xchg
aaa
popf
stos
cmp
cmps
test
sahf
mov
int3
std
cmp
xchg
mov
dec
sub
inc
push
arpl
jle
sbb
xchg
inc
push
stos
div
add
ds
jno
jbe
and
add
jmp
sub
inc
or
mov
xor
jae
and
sbb
call
aam
jbe
mov
out
jne
movs
hlt
mov
mov
mov
das
das
sub
mov
out
test
fnsave
mov
stos
loop
fidivr
outs
push
mov
push
cmps
je
popa
pop
push
not
pop
inc
mov
mov
xor
jecxz
xchg
ins
jno
dec
hlt
and
loope
int
inc
in
fwait
mov
loop
pop
sti
cmp
adc
sbb
xor
shr
add
sbb
nop
mov
and
add
out
jp
mov
ins
mov
movs
ret
cmp
pop
scas
out
arpl
or
mov
pop
mov
bound
push
sbb
and
pop
sub
jnp
(bad)
jns
enter
cdq
aas
jae
add
mov
rcr
mov
lahf
fdivr
outs
or
sti
add
jge
inc
test
repz
cmp
dec
mov
ret
jmp
cwde
xchg
mov
scas
nop
push
ret
popf
cmps
cmc
pop
(bad)
js
test
inc
jne
adc
mov
lea
inc
add
call
in
jnp
mov
test
dec
stos
mov
push
sub
jl
mov
leave
loope
neg
out
cmp
test
sbb
push
fsub
fcomp
sbb
loopne
out
addr16
sbb
adc
fisub
or
into
nop
xor
inc
inc
and
scas
or
dec
push
mov
sbb
movs
(bad)
adc
lea
arpl
xchg
loope
out
addr16
mov
add
inc
pop
repz
jns
lods
dec
sub
cmp
and
cmps
aad
shr
add
mov
in
out
push
cmp
adc
retf
cdq
dec
in
stc
cmp
cmp
out
cli
jge
aam
fsub
clc
sbb
stos
leave
jnp
dec
ins
mov
call
and
(bad)
mov
ret
mul
arpl
xor
ror
push
sub
enter
inc
ja
cmp
in
fcmove
jnp
arpl
cmp
inc
hlt
fstp
retf
div
test
leave
adc
push
push
inc
xchg
sar
pop
adc
xor
pusha
ins
fst
pop
mov
pop
data16
sub
add
movs
les
cli
imul
test
xchg
test
jecxz
retf
push
push
enter
push
fldenv
inc
cmps
aad
jns
dec
ss
push
xor
dec
or
(bad)
popa
sbb
aas
sbb
es
and
loopne
mov
or
call
cmc
add
push
add
mov
imul
and
lahf
xor
xchg
sbb
movs
stos
fld
dec
xchg
jno
sub
sbb
sbb
jo
sub
mov
sbb
adc
out
or
sahf
in
dec
ficomp
push
jns
xchg
sub
xchg
lds
ror
or
mov
or
sbb
or
lea
iret
pusha
sub
das
das
(bad)
and
movs
sti
jmp
pop
xchg
dec
mov
loopne
xchg
jmp
rcr
and
cmp
adc
lock
mov
jp
stos
stos
mov
sub
daa
inc
sti
fcom
in
mov
ret
jmp
stc
cmp
xchg
sub
out
iret
scas
xchg
repnz
enter
cld
popf
xor
adc
call
jae
mov
ret
repnz
xchg
and
xchg
xor
adc
leave
cmp
mov
dec
icebp
arpl
mov
std
test
hlt
cwde
mov
in
js
shl
xor
lock
xchg
stos
cmps
inc
call
mov
inc
push
mov
pop
sub
or
and
and
test
mov
cli
cmc
jg
loopne
adc
or
mov
inc
loopne
adc
and
adc
aas
mul
cld
cmps
out
add
pushf
ret
movs
cvtps2pi
dec
(bad)
out
jo
lods
push
pop
xor
test
js
fidiv
out
stos
push
dec
dec
cmps
xchg
(bad)
dec
enter
mov
imul
lock
aas
or
fidiv
pop
sti
dec
test
aad
addr16
fucom
repz
pop
jge
icebp
ret
in
xor
retf
fcom
repz
ret
mov
(bad)
out
sub
sub
jle
test
pop
test
sbb
fcom
push
das
lods
int3
neg
out
mov
add
aam
add
adc
nop
jb
xor
call
stc
jb
lea
out
jnp
add
jmp
or
dec
fist
pop
jbe
pop
and
mov
stos
stos
shl
add
xchg
cmp
add
retf
cmp
or
retf
jns
int
repz
cld
mov
popf
(bad)
pusha
fwait
aam
xor
ins
sub
sub
data16
clc
mov
mov
les
sub
mov
mov
jl
inc
xor
sub
inc
call
loop
imul
mov
or
fucomip
outs
dec
shr
add
(bad)
sub
pop
pop
cmp
mov
test
cmp
jns
push
stos
movs
aaa
movs
cwde
imul
cli
stos
sub
aad
test
retf
jne
mov
cmp
(bad)
xchg
cmps
or
inc
repnz
mov
repnz
jp
je
adc
pop
mov
mov
sub
call
je
rcl
cmp
sbb
aam
inc
lods
push
mov
dec
pop
jns
push
sti
sti
sub
jbe
xchg
mov
shr
sub
lods
push
cmp
push
retf
pop
fs
icebp
(bad)
pop
mov
jae
xor
repnz
movs
jmp
xchg
rol
or
out
cmp
add
jp
push
aam
inc
fstp
popf
test
(bad)
mov
fsub
mov
repz
mov
xor
and
and
mov
test
cwde
jmp
or
out
cmp
fwait
cmp
xchg
mov
dec
adc
mov
add
xchg
(bad)
call
mov
inc
push
dec
dec
ins
loop
push
in
jae
mov
(bad)
jmp
pop
cmp
out
sub
push
jge
fprem
jmp
lods
xor
xchg
push
adc
mov
jns
mov
fmul
mov
inc
out
loop
test
test
test
xor
jno
mov
test
add
dec
lods
out
loop
mov
inc
inc
inc
loope
aaa
push
push
push
sub
repz
dec
xchg
rcr
retf
inc
pop
repz
push
pop
retf
and
je
add
shr
sub
sahf
movs
jo
xchg
xchg
xchg
mov
sub
pop
in
ins
sbb
mov
(bad)
iret
js
in
(bad)
cmp
mov
inc
aam
cmps
push
pop
push
dec
cs
or
das
cmp
movs
push
psadbw
mov
mov
test
sub
fucomip
clc
cmp
sub
xor
inc
js
jns
or
lods
pushf
js
and
lods
outs
addr16
mov
test
frstor
iret
dec
or
and
adc
dec
mov
push
stos
aad
jo
scas
xchg
ds
pop
xor
mov
sub
fist
gs
mov
jle
out
mov
addr16
adc
and
cmp
xor
ins
outs
shl
xchg
loope
(bad)
and
outs
and
inc
dec
mov
mov
push
mov
add
add
movs
cmp
out
cmp
or
sbb
xor
inc
in
xor
push
jo
mov
mov
cmp
jle
dec
fucom
(bad)
movs
stos
mov
mov
mov
push
cmp
cmp
cmps
sti
or
xor
fld
mov
adc
frstor
and
stos
retf
push
lahf
loope
xor
cmp
sub
lds
mov
(bad)
inc
mov
cdq
ins
xchg
xchg
adc
scas
into
adc
pop
or
repnz
pop
xor
jns
dec
and
and
cmp
xchg
pop
pop
mov
push
out
outs
sub
hlt
scas
adc
and
pop
movs
xchg
daa
lods
(bad)
int3
outs
test
rcl
sbb
popa
retf
xor
hlt
fdivr
in
mov
imul
jnp
mov
jb
les
sbb
xlat
cdq
xor
push
jl
loop
xchg
dec
pop
and
leave
cmps
pop
fbstp
add
out
xchg
xor
call
ficom
cli
adc
in
pop
(bad)
jmp
mov
inc
mov
je
ja
hlt
jbe
push
scas
std
pushf
(bad)
xor
cmp
lods
mov
fisttp
pop
ja
sbb
dec
jmp
mov
dec
pop
enter
inc
mov
aas
rcl
pop
imul
int
mov
cmp
adc
fiadd
fcmovnbe
or
movs
aaa
call
call
jp
jl
cmp
mov
daa
xchg
dec
arpl
ret
pop
inc
lds
push
mov
aas
jg
push
dec
xchg
mov
xor
outs
sbb
mov
push
rcr
xor
jb
push
inc
push
cld
cmc
cld
es
jae
ins
test
(bad)
add
cmp
cmps
ja
fistp
pop
xor
and
(bad)
fidivr
dec
xlat
jbe
jl
pop
lock
test
lea
jb
mov
jns
mov
shr
fmul
ret
add
mov
pop
mov
imul
sub
out
sub
call
ret
cmp
mov
sbb
fiadd
ins
add
push
jmp
jmp
fwait
pop
mov
fld
outs
mov
rol
pusha
fnsave
mov
dec
call
xor
sub
stos
or
pop
enter
xor
movs
loop
cli
fwait
sbb
mov
shl
sub
(bad)
sub
icebp
out
cmp
pop
ds
sub
sbb
fsubp
in
sub
enter
sbb
cmp
mov
or
and
mov
in
adc
xchg
mov
add
popf
sub
retf
popa
(bad)
loop
ins
mov
xchg
fiadd
stc
and
dec
mov
cmps
sub
movs
or
lods
adc
cld
call
fwait
mul
repnz
(bad)
aad
sub
push
lock
retf
push
fmul
in
sub
xor
jno
push
std
mov
neg
adc
jbe
sar
add
int3
in
lods
and
cmp
mov
jbe
(bad)
repnz
je
jle
sub
xor
ficomp
jge
clc
imul
fcomp
sbb
fs
dec
inc
mov
loopne
ficom
(bad)
jmp
mov
in
rol
cmps
fcomp
mov
cmp
enter
mov
sahf
out
jo
scas
jge
(bad)
loopne
cld
jnp
lods
pop
sbb
mov
pop
dec
outs
loopne
cwde
adc
cmc
jle
cmps
xor
ins
lods
inc
shr
arpl
cmp
cmp
xor
stc
scas
xchg
in
(bad)
push
in
repz
imul
sbb
sub
mov
mov
cli
in
mov
sahf
jb
out
fisttp
imul
push
mov
jmp
out
sub
call
in
test
in
cmp
popa
push
xor
mov
inc
aaa
(bad)
mov
and
pop
pop
ja
sbb
pop
pop
pushf
push
and
jae
mov
mov
dec
mov
xchg
mov
lods
sub
dec
xchg
(bad)
call
pop
call
sbb
retf
push
retf
mov
(bad)
and
or
sub
push
mov
adc
cmp
pushf
inc
mov
je
repz
dec
jbe
arpl
lahf
scas
inc
adc
mov
dec
rol
mov
pop
pop
jge
bnd
fwait
rcr
inc
mov
push
push
inc
xchg
xchg
or
jnp
xor
mov
cmp
jno
lahf
sub
dec
jae
or
scas
mov
cmp
mov
pop
mov
leave
sub
add
ss
dec
push
dec
call
inc
(bad)
sub
jb
(bad)
adc
mov
mov
sub
fimul
fwait
adc
imul
cmp
les
push
dec
dec
lods
or
in
lods
(bad)
mov
jns
(bad)
mov
cs
cld
add
mov
arpl
cmp
sbb
cmc
ror
mov
or
outs
mov
and
and
mov
loopne
jmp
pop
(bad)
xchg
push
scas
popf
or
call
test
pop
call
mov
inc
and
xchg
xchg
mov
push
mov
dec
adc
lods
pusha
scas
push
jo
mov
mov
mov
outs
pusha
(bad)
and
and
add
and
mov
inc
mov
fiadd
xchg
popf
or
mov
or
and
pushf
out
mov
icebp
call
dec
stc
adc
add
pop
inc
mov
ret
pop
aam
shl
cmp
cmp
(bad)
pop
mov
mov
xchg
push
fwait
stos
mov
data16
mov
test
data16
xchg
mov
out
mov
jge
mov
xchg
cmp
sub
push
mov
cmp
jp
rol
inc
cs
or
mov
clc
inc
call
push
jp
lods
cmp
fsubr
rol
(bad)
int3
scas
xchg
enter
bound
icebp
xchg
push
lods
rcr
rcl
cmp
shl
int
pop
mov
cmp
mov
(bad)
test
sbb
xchg
in
nop
in
lods
lahf
mov
sbb
movs
pop
cmc
movs
xlat
out
push
jg
dec
imul
pop
fisubr
cdq
jnp
mov
in
mov
cmp
icebp
ds
call
dec
xchg
mov
sbb
push
test
cli
cmp
fisttp
popa
xor
adc
call
xlat
test
lods
xlat
pop
pop
arpl
fnsave
sbb
jecxz
ja
xchg
push
xchg
adc
sbb
jmp
push
inc
push
pop
mov
inc
inc
xor
out
dec
aam
adc
(bad)
jp
jne
mov
pop
xchg
popa
sahf
addr16
in
or
pop
retf
icebp
jmp
jb
jmp
in
jb
jbe
jecxz
xlat
adc
fsub
dec
and
adc
bound
xor
arpl
data16
inc
pop
jecxz
lods
enter
idiv
out
(bad)
mov
jg
adc
scas
data16
mov
cmps
or
dec
dec
mov
inc
mov
dec
pop
inc
jge
xor
add
lds
jo
mov
fndisi(8087
mov
aas
xchg
adc
in
sbb
sbb
dec
push
mov
sub
push
mov
push
fsub
jmp
fs
ins
xchg
inc
xchg
or
lahf
cmc
int3
call
mov
xor
jecxz
stos
ret
sbb
jecxz
cmp
in
sbb
shl
js
lods
cmp
inc
enter
int3
loope
mov
pushf
pop
push
ss
dec
fucomi
cmp
or
les
mov
(bad)
dec
test
xor
lock
jp
xor
pushf
rcl
cmc
neg
pop
aas
pop
jl
xchg
push
scas
adc
loope
test
les
push
sahf
mov
jb
jns
sbb
js
push
ins
mov
sub
test
fldlg2
bound
and
jns
sub
jb
sbb
cmp
leave
push
(bad)
xchg
xor
imul
outs
test
(bad)
mov
push
adc
mov
xor
icebp
int
in
arpl
inc
dec
sub
jne
mov
xor
pop
sub
push
scas
dec
add
fs
mov
pop
mov
inc
aas
retf
in
jge
xchg
xlat
xor
out
pop
pop
mov
sar
cld
bound
sbb
dec
mov
mov
dec
jle
nop
ins
pop
fstp
arpl
outs
or
pop
inc
mov
lods
inc
sub
lods
xchg
xchg
test
mov
adc
mov
(bad)
lods
xlat
jb
outs
mov
scas
sbb
jl
loop
push
repz
xchg
retf
cmp
xor
mov
popf
es
dec
xor
sbb
xor
pop
mov
test
int
cmp
pop
jnp
fwait
sbb
jl
xchg
cdq
jmp
inc
inc
cmp
imul
push
jp
je
int
imul
dec
lahf
cmp
pushf
in
sub
lock
dec
jne
xchg
or
add
mov
inc
fst
vmptrld
mov
stos
cdq
lods
js
xchg
movs
fcmove
ins
push
pop
movs
mov
or
repnz
shrd
sar
add
in
inc
mov
jne
(bad)
sti
xor
jno
pop
jmp
fsub
cmp
lahf
(bad)
bound
mov
jbe
hlt
adc
fwait
mov
fs
clc
inc
fidivr
in
jno
call
outs
imul
mov
cmp
add
pop
pop
cld
pop
push
xor
(bad)
sbb
lds
jg
xor
add
arpl
out
(bad)
sub
xchg
mov
mov
scas
sahf
(bad)
jns
(bad)
push
add
mov
and
sbb
xchg
in
ss
in
call
retf
loope
repnz
test
int3
sub
stos
inc
test
sbb
sahf
addr16
jne
dec
das
cmp
sub
test
or
sti
push
sub
mov
xor
mov
pop
adc
stos
xor
and
rcr
(bad)
icebp
mov
push
daa
add
stc
out
dec
jno
gs
fdiv
dec
mov
xchg
rol
daa
test
imul
cli
fisttp
mov
nop
out
cmc
ret
scas
aas
lock
lods
inc
ins
add
icebp
mov
push
jno
and
jne
pop
inc
mov
cli
in
add
jmp
mov
test
inc
mov
dec
cmc
nop
jp
and
xchg
or
push
into
push
cmp
jno
fs
sahf
lods
loope
cs
xchg
lock
mov
and
data16
out
out
(bad)
cmp
mov
or
mov
mov
cmp
aas
push
inc
fadd
mov
fld
push
mov
movs
xchg
mov
addr16
mov
int
mov
ins
das
and
dec
mov
and
(bad)
sbb
lahf
(bad)
aad
lea
xchg
fs
(bad)
xchg
rol
(bad)
fst
xchg
pop
sti
outs
inc
cmc
dec
mov
push
add
retf
ror
test
mov
(bad)
fist
(bad)
fucomi
push
mov
mov
pushf
lods
cdq
retf
dec
xchg
stc
leave
enter
ss
sub
ins
ret
lahf
and
or
gs
aam
test
in
adc
cmp
(bad)
push
pushf
inc
(bad)
adc
movs
mov
mov
call
push
call
jg
loope
sbb
scas
sub
or
mov
gs
pop
not
fnstenv
xchg
loopne
out
aam
xchg
jle
sub
mov
aaa
in
mov
adc
cmps
rol
dec
jbe
push
stos
pop
call
xor
je
ja
icebp
or
movaps
rcl
xchg
aam
xchg
pop
or
out
push
aad
(bad)
stc
and
jb
dec
ja
push
push
mov
cmp
adc
mov
loope
hlt
mov
xor
xor
mov
(bad)
xchg
mov
(bad)
outs
xor
aam
push
stc
dec
or
mov
jl
ret
or
xchg
mov
test
mov
adc
lock
jbe
add
mov
scas
sub
adc
je
xor
mov
cmp
out
dec
push
outs
mov
or
add
push
push
cmp
sub
adc
dec
imul
in
(bad)
mul
push
out
pop
adc
test
fwait
adc
xchg
xor
mov
add
mov
mov
inc
mov
icebp
adc
adc
fwait
mul
in
jae
adc
dec
mov
fwait
jle
in
shl
mov
xlat
fs
mov
mov
xchg
lds
call
jns
(bad)
dec
call
cli
mov
outs
mov
lods
out
inc
pop
in
xor
cmps
push
add
xchg
dec
mov
ret
pop
js
xchg
pushf
dec
hlt
inc
cmp
sar
jnp
pop
ja
jbe
clc
leave
cdq
push
pop
and
add
fistp
sahf
push
or
push
(bad)
repz
lods
mov
jae
jno
mov
std
cmp
xor
mov
xchg
cmp
inc
cwde
or
stc
aad
mov
mov
ins
fldcw
xor
(bad)
(bad)
mov
sub
push
psubsb
aas
sbb
dec
enter
mov
pushf
jmp
mov
test
out
call
stc
pop
pop
xor
pop
mov
loopne
and
jecxz
mov
clc
and
aad
aad
pop
test
loopne
push
dec
(bad)
fld
gs
push
jp
or
jns
xchg
scas
jnp
ja
lods
jg
adc
ja
push
jbe
mov
jb
or
fcomp
lods
push
cmps
movs
jp
add
pop
and
or
mov
mov
jbe
and
pop
in
sub
cmp
js
test
loope
adc
popf
dec
jecxz
sbb
sbb
push
jnp
or
jmp
rcr
sbb
push
adc
jle
or
xchg
shl
add
test
add
jno
ss
sub
jmp
repz
(bad)
int
(bad)
or
in
aas
and
(bad)
mov
les
les
out
mov
pop
mov
jp
jg
xchg
dec
xchg
test
hlt
ins
ins
ficomp
out
xchg
outs
adc
pushf
push
out
adc
mov
ins
(bad)
jecxz
cdq
adc
pop
test
mov
jae
cli
(bad)
mov
pusha
or
gs
outs
jae
jns
icebp
xor
arpl
fild
cmp
push
jle
or
cs
aam
call
clc
(bad)
jbe
ja
and
hlt
sub
push
cmp
aas
mov
sahf
cmp
cmp
cmp
cmp
cs
cmp
gs
mov
mov
cmp
test
pop
dec
cmc
xchg
ret
adc
inc
fistp
jo
push
out
ficom
js
idiv
sbb
in
adc
mov
pop
mov
adc
inc
popf
movs
mov
ror
push
pop
inc
inc
adc
inc
cmps
aaa
(bad)
pusha
aam
jg
fwait
(bad)
cli
sti
mov
mov
cmp
add
rol
mov
sahf
jl
xchg
cmp
rol
mov
mov
adc
xchg
push
mov
gs
call
xchg
mov
jns
sbb
aad
out
repz
loope
outs
les
push
pop
sbb
or
sub
sar
push
jecxz
adc
inc
xor
addr16
pop
sub
cmp
daa
xchg
cmp
mov
imul
bound
enter
popa
xchg
jb
in
add
sub
mov
jmp
mov
div
retf
mov
ja
adc
and
jno
pop
and
mov
imul
jbe
or
bound
cmp
or
sbb
test
je
dec
mov
and
outs
in
gs
add
sub
(bad)
in
ja
xchg
cmp
pushf
enter
(bad)
xlat
bound
mov
pop
jmp
idiv
pop
fisttp
mov
pop
add
and
out
and
cmp
mov
jge
push
dec
sub
fcomp
add
test
(bad)
mov
loopne
loopne
addr16
out
cmc
mov
test
mov
jnp
push
ins
fisubr
xor
sub
mov
movs
je
pushf
inc
pop
dec
iret
push
xor
sti
and
or
ror
sub
sbb
adc
cli
aam
dec
loop
out
sti
call
mov
sti
(bad)
ja
outs
not
inc
imul
mov
loopne
pushf
ret
pop
cmp
icebp
sti
call
test
and
inc
xchg
clc
mov
lods
cmps
daa
or
hlt
mov
lea
sahf
push
adc
call
jle
add
mov
mov
fdiv
dec
push
sbb
cmp
bound
popa
cmp
pop
ret
into
pop
pushf
adc
xchg
cdq
mov
mov
test
jae
jb
push
and
arpl
mov
and
and
mov
jecxz
and
jns
fld
iret
movs
cli
xchg
and
and
in
dec
xchg
nop
dec
repz
push
mov
(bad)
ret
inc
or
out
mov
adc
arpl
test
mov
(bad)
inc
dec
out
cmp
stc
dec
xor
push
push
cli
sub
fidiv
ret
addr16
mov
jp
out
mov
jns
cmp
pusha
rcl
pop
xchg
fsub
xchg
push
push
int3
loop
test
fdiv
cmp
dec
cmp
mov
pop
pop
xlat
xor
dec
xchg
mov
pop
int3
aad
out
icebp
xchg
jp
adc
out
xchg
or
add
jmp
push
es
ficomp
sub
add
jnp
out
lock
fstp
pop
xor
gs
cli
push
push
push
jns
ret
popf
mov
test
mov
or
ins
in
sbb
xchg
sub
pop
jmp
aad
sbb
lock
jmp
lahf
add
mov
fldcw
mov
pop
outs
in
xchg
sub
inc
pop
cwde
dec
or
xchg
stos
test
xchg
cmc
pushf
add
push
movs
pusha
push
stos
jle
call
jo
pusha
push
cdq
sbb
stos
cmp
(bad)
(bad)
xor
(bad)
stc
inc
jmp
and
add
mov
and
cmp
add
leave
in
add
test
sbb
popa
sub
push
add
mov
shr
int3
mov
mov
addr16
pop
and
fidivr
jg
fist
in
jl
lods
add
jge
xchg
hlt
adc
inc
xor
xchg
pop
pop
adc
cmps
jno
jp
les
sbb
adc
mov
jbe
dec
int
cli
pop
out
add
test
sub
pop
repnz
push
pop
not
mov
lods
xchg
add
std
sub
jmp
stos
pop
mov
inc
push
and
sub
lods
movs
cmp
sub
stos
jl
pop
jecxz
shl
mov
and
xchg
pop
cmp
loop
push
xchg
mov
push
test
pop
pop
fsubr
cmp
std
adc
and
pop
popa
aad
dec
jae
adc
out
mov
(bad)
jbe
sub
or
cmp
inc
in
test
movs
pusha
retf
jnp
sub
push
mov
sbb
test
aaa
mov
mov
mov
add
and
push
out
nop
out
fsub
in
cmp
je
jl
or
adc
pop
jno
sbb
mov
ret
popf
cld
lock
clc
xor
sbb
mov
stos
jae
aad
hlt
clc
fnclex
or
push
es
popf
push
sti
scas
addr16
mov
in
lods
push
or
aaa
mov
mov
jo
inc
(bad)
pop
adc
dec
aam
icebp
out
dec
sub
loopne
mov
loope
fprem
rcl
jle
cmp
lods
add
add
(bad)
push
nop
stc
call
sbb
popa
mov
fistp
sub
sub
in
mov
aas
aad
data16
icebp
pop
dec
mov
cmp
jo
rcl
cmp
clc
es
inc
sub
js
loop
xchg
mov
jle
in
push
ins
add
ja
pop
(bad)
xor
push
sub
popf
jae
or
scas
adc
xchg
ins
ret
cdq
in
aaa
into
int3
movs
and
or
push
jge
sahf
cmp
cs
push
inc
sbb
test
popf
out
push
sub
movs
aaa
stos
mov
jb
int3
daa
fnsave
mov
(bad)
jmp
jl
sbb
in
ss
fidiv
mov
ret
pop
lods
cmps
scas
cmp
ins
dec
das
and
jne
adc
xor
lds
jecxz
dec
aam
xor
cdq
int
shl
jne
pusha
das
(bad)
cwde
xchg
retf
sub
jne
dec
xor
pop
icebp
stos
js
stos
sub
(bad)
push
or
call
aaa
inc
jnp
aaa
mov
idiv
pop
lds
mov
or
mov
adc
or
xchg
xor
sub
sbb
div
in
jae
fadd
out
and
arpl
push
jecxz
aas
in
xchg
add
sbb
into
pop
and
sub
mov
adc
inc
stos
pop
imul
(bad)
int
sar
jp
push
std
sub
jge
add
push
push
inc
pop
lahf
mov
mov
retf
(bad)
mov
jmp
icebp
push
jb
in
lea
sub
lea
cmc
sub
sbb
popa
mov
add
pop
fwait
or
mov
cmp
mov
xchg
sub
imul
out
aas
sbb
mov
dec
sar
jmp
add
shl
pushf
imul
push
adc
push
jns
pop
jo
call
jmp
lods
dec
inc
test
xlat
repnz
lock
xor
jp
jl
add
and
jo
sar
scas
inc
in
sbb
dec
ficomp
sub
add
repz
stos
popw
repnz
inc
fwait
or
imul
(bad)
js
repz
repnz
add
aaa
scas
stos
inc
and
or
mov
imul
dec
stos
or
retf
rcl
js
mov
hlt
test
iret
out
dec
mov
lods
push
in
pop
shr
mov
popa
mov
pop
cld
clc
xor
test
jne
sbb
retf
push
mov
fwait
ret
jne
sub
cld
inc
cmps
lods
mov
pusha
enter
test
shr
test
ret
ds
popa
mov
aam
movs
mov
mov
jo
sti
fmul
push
push
cmps
pusha
jp
push
sub
xor
stos
xchg
popf
dec
sub
(bad)
out
cmp
fsub
(bad)
ret
lahf
add
es
dec
retfw
xchg
cmp
scas
add
fstp
sbb
adc
fcomp
adc
jns
lock
pop
mov
adc
inc
xlat
in
mov
add
pop
dec
jnp
xor
ins
in
cmp
mov
into
jae
cwde
in
retf
jmp
push
or
sub
lods
in
mov
cs
dec
retf
push
push
pop
ins
fiadd
adc
dec
js
xchg
mov
mov
mov
retf
test
cwde
mov
cli
push
adc
dec
leave
or
inc
std
and
movs
cmp
std
(bad)
fstp
loop
test
les
gs
mov
xor
sbb
sar
mov
jecxz
test
test
in
loop
nop
sub
push
sbb
inc
or
xor
pushf
and
dec
xor
mov
xchg
mov
cmc
pop
cmps
push
xor
lea
in
add
inc
push
inc
pop
or
(bad)
mov
ss
in
xor
xchg
push
xor
push
data16
aad
mov
jns
mov
xchg
ss
stc
xchg
mov
or
push
sub
cmps
stos
repnz
mul
iret
in
push
push
outs
sbb
sub
fcomp
ret
mov
sub
in
bound
push
imul
mov
sbb
cmps
mov
and
adc
sub
fimul
je
mov
lods
ins
ret
pop
push
test
cmps
sub
(bad)
mov
imul
inc
cmps
fsubr
das
add
into
inc
inc
inc
adc
mov
inc
pop
jg
cwde
mov
cmc
movd
jge
mov
lock
cdq
rcl
inc
out
sub
and
popa
mov
ds
mov
add
mov
push
sti
push
out
das
les
mov
inc
cmp
aad
movs
(bad)
dec
sbb
dec
ret
mov
cmc
call
movs
fstp
fnstcw
cwde
push
jmp
mov
hlt
add
out
push
and
hlt
(bad)
(bad)
iret
js
xor
inc
addr16
dec
mov
aaa
mov
hlt
add
jns
iret
jo
mov
jo
sahf
mov
repz
mul
(bad)
or
popa
dec
pushf
mov
mov
loope
xor
cs
iret
push
mov
enter
xchg
sub
xchg
leave
sub
out
pop
gs
test
enter
(bad)
mov
mov
mov
mov
mov
dec
lock
cs
and
mov
fisttp
repnz
scas
cs
jo
push
cmps
xor
adc
retf
icebp
out
sub
xlat
cmp
test
push
mov
xor
mov
or
or
int
pop
call
adc
ret
icebp
jno
inc
mov
mov
js
push
cmps
jne
iret
sub
mov
pop
ja
pop
inc
(bad)
and
sbb
pop
test
cmc
dec
jo
and
jnp
test
inc
test
pop
xchg
loop
sbb
sti
or
lods
jl
xor
dec
fs
xchg
and
(bad)
icebp
repz
mov
or
not
out
xchg
cmp
cmc
mov
dec
pop
not
inc
cmp
xchg
addr16
repz
fstp
xor
or
jecxz
xor
xor
push
sar
push
jmp
and
fwait
mov
inc
icebp
movs
aas
add
sbb
icebp
xor
cmp
cdq
or
sub
xor
pop
mov
sub
mov
mov
xor
out
in
imul
mov
imul
push
dec
dec
mov
inc
push
ja
out
shr
retf
sub
leave
nop
mov
in
jg
cmp
pop
mov
xlat
and
sbb
push
pop
ins
aad
imul
or
xchg
in
cli
add
cmp
imul
sti
adc
mov
int
inc
aaa
bsf
loop
pop
and
fmul
cmp
retf
inc
jmp
scas
xor
in
push
fs
idiv
mov
pop
or
mov
mov
mov
or
out
lds
mov
jae
clc
mov
inc
inc
mov
in
xchg
loopne
pop
xlat
adc
cli
jns
and
iret
sbb
outs
push
xor
ins
mov
and
or
xchg
outs
(bad)
loop
push
cmc
adc
int
fwait
jbe
cld
pop
mov
xchg
stos
sub
mov
xor
gs
fimul
mov
cmp
adc
pop
ss
mov
or
out
xor
and
(bad)
sbb
xor
cdq
mov
add
into
daa
test
mov
cmp
mov
jne
fisub
loopne
(bad)
fisubr
wbinvd
sbb
loop
sbb
call
push
adc
pop
or
lea
mov
rcr
addr16
lds
push
loop
stc
rol
adc
(bad)
js
add
and
mov
sbb
fcomp
inc
out
imul
outs
adc
inc
push
pop
lock
pushf
outs
pop
icebp
mov
mov
and
mov
dec
or
mov
sbb
add
sub
cmps
cmp
pmaddwd
popf
nop
pop
xchg
jb
sar
lods
mov
imul
and
mov
sub
inc
loope
mov
repz
sub
push
push
sahf
xchg
push
and
cmp
lock
in
in
addr16
push
cmp
mov
shl
cwde
imul
stc
xor
mov
repz
test
push
xor
xchg
sbb
(bad)
pop
popf
call
jb
aas
mov
dec
and
aaa
adc
call
in
jns
fwait
cmps
or
cmp
mov
nop
ins
rcl
ret
xchg
(bad)
arpl
mov
daa
xor
out
sub
xor
adc
mov
adc
cmp
loop
lea
add
or
les
arpl
mov
sbb
into
xchg
xor
add
sub
shl
test
lock
inc
fwait
jnp
jbe
retf
pusha
aad
sbb
sahf
inc
(bad)
pop
cs
rol
xchg
fnsave
jmp
and
push
aad
inc
pop
xor
mov
fst
popa
out
and
jns
mov
ins
and
fwait
in
pop
inc
jg
add
loopne
dec
mov
add
mov
fstp
pop
push
aaa
mov
sub
mov
jnp
push
lock
sub
(bad)
cdq
push
xchg
xchg
lods
xlat
sub
out
add
push
or
call
xlat
ficom
mov
jl
aad
pop
or
pusha
mov
ja
jl
xor
lea
jbe
xlat
call
dec
(bad)
fidiv
mov
sahf
loop
xchg
inc
sbb
mov
xchg
test
cmp
call
and
(bad)
mov
jb
int3
sub
xchg
pushf
(bad)
in
mov
adc
mov
mov
hlt
dec
cmp
mov
mov
pop
clc
rcr
test
xor
test
mov
je
arpl
popf
cmps
inc
(bad)
inc
iret
es
pop
jp
pop
fwait
call
push
jb
jecxz
adc
mov
push
adc
arpl
loop
inc
inc
lock
add
adc
sub
fisttp
lea
cmps
aaa
sbb
ret
mov
jl
mov
add
xor
sub
sahf
sub
cmp
fnstsw
btc
sbb
cmp
nop
push
mov
and
stc
imul
pop
out
and
shr
fninit
pusha
inc
xor
or
icebp
dec
xor
stos
cmp
pusha
xchg
and
adc
push
pop
addr16
iret
dec
mov
jmp
cmp
add
scas
sbb
sub
retf
shl
pop
enter
inc
cs
jo
push
shr
leave
test
mov
xchg
ja
mov
push
popa
add
shr
stc
xchg
jo
ins
jle
mul
cdq
pusha
pop
(bad)
push
ficomp
ror
mov
fmul
and
loop
in
rol
dec
adc
imul
mov
add
cmp
stos
xor
(bad)
int
mov
enter
sbb
lds
add
adc
mov
sub
mov
lods
sub
mov
daa
mov
out
pushf
int
lds
adc
push
cdq
mov
(bad)
xor
dec
out
pop
or
sub
jae
pusha
add
js
div
mov
outs
je
inc
dec
pop
jmp
(bad)
dec
loopne
popf
sub
xor
and
add
and
jae
stos
movs
sar
ja
test
out
jno
mov
int
add
out
leave
fsubr
lock
jnp
mov
mov
cs
aad
dec
xchg
dec
mov
ds
sbb
int
inc
or
js
movs
adc
lahf
sub
retf
cld
sub
popf
push
sti
jns
xchg
sbb
pop
pusha
into
or
push
cmps
repz
push
mov
push
ret
or
jae
adc
cmp
xor
out
icebp
fcmove
shr
scas
leave
cmp
mov
lea
(bad)
sub
pop
repnz
leave
mov
jo
mov
(bad)
loopne
pop
adc
or
push
fsub
push
sbb
jae
retf
lahf
ds
leave
push
adc
rol
fcom
inc
pop
inc
mov
sbb
mov
add
ficom
pop
push
cmp
xchg
jmp
adc
out
movs
dec
inc
push
add
jne
dec
xchg
jo
sub
retf
bound
sbb
repz
pop
sti
es
adc
inc
inc
loopne
adc
or
idiv
retf
mov
push
shl
push
xchg
and
repz
es
mov
movs
pop
push
pop
sar
xchg
test
xchg
and
fidiv
int
lds
rcl
cmp
xor
jne
outs
sti
dec
mov
jne
add
mov
sbb
inc
test
push
in
and
ins
push
loop
in
or
clc
lea
sub
loope
cmp
mov
pop
sub
aam
jb
icebp
(bad)
add
sti
xchg
ds
push
xchg
scas
pop
scas
int3
(bad)
sub
or
xchg
mov
sub
jmp
popf
xchg
addr16
cmp
mov
xor
(bad)
fstp
pop
cmp
mov
mov
ds
(bad)
and
gs
and
dec
adc
pop
shl
jmp
clc
and
jcxz
mov
cmps
cmp
ret
sbb
movs
outs
test
or
cmps
mov
mov
mul
xchg
rcl
mov
cmps
mov
cwde
aaa
fnstcw
les
adc
fcomp
mov
out
cmp
cwde
and
mov
inc
mov
pop
xor
out
sbb
test
mov
je
push
out
xor
xchg
sub
jp
outs
jne
(bad)
jecxz
std
leave
sbb
jne
mov
lahf
(bad)
dec
inc
inc
xor
and
cmp
aas
and
mov
add
inc
aam
fucomp
inc
cli
pop
aad
sbb
iret
(bad)
lds
pop
adc
and
adc
cmp
pop
sbb
ins
imul
cmp
sbb
es
adc
and
loop
cs
push
push
mov
push
mov
cmc
ins
ss
lock
adc
and
mov
inc
xchg
xor
push
inc
pop
xchg
cmc
enter
(bad)
adc
test
cmp
ficom
or
jge
pmulhw
push
inc
adc
rcr
push
xchg
sub
adc
fcmovnb
outs
add
sbb
or
loopne
jns
(bad)
sahf
out
sub
in
cmc
inc
and
inc
test
xor
cmp
loop
lock
loope
fs
sbb
ins
retf
mov
in
xor
sbb
sub
int3
inc
mov
mov
or
or
pop
sbb
mov
pushf
jb
pop
out
shr
pop
sub
or
pop
mov
and
test
sbb
aad
into
pop
dec
cld
out
adc
call
jp
retf
adc
mov
fstp
push
mov
mov
aas
cs
(bad)
mov
inc
xor
repz
rcl
sahf
or
jmp
mov
loopne
repnz
push
jle
add
pop
and
aaa
mov
inc
sub
test
sti
add
int3
icebp
add
cwde
inc
ds
jmp
sti
xchg
sub
xchg
and
call
cwde
or
pop
jno
cdq
outs
(bad)
repnz
in
pop
pop
add
int3
sbb
push
shl
cmps
xor
imul
xor
jp
mov
cwde
popa
jmp
and
add
sub
rcl
in
js
in
cld
out
loop
cld
(bad)
add
push
dec
push
out
mov
cli
dec
in
hlt
lods
retf
test
or
call
xor
mov
jns
std
pusha
jp
popa
dec
test
les
mov
out
push
cmp
rol
ret
dec
jl
xor
xor
sbb
or
les
push
jne
in
push
into
loope
test
xor
mov
cmps
or
out
or
push
sbb
inc
(bad)
not
(bad)
bound
fwait
adc
cmps
fwait
sbb
mov
ins
add
pop
and
cmps
hlt
push
jne
sub
and
or
add
and
xchg
cmp
sbb
mov
mov
fwait
hlt
jb
fs
cmp
in
jecxz
mov
outs
inc
es
jmp
dec
mov
clc
mov
pop
add
js
fwait
mov
inc
aas
popa
sbb
call
mov
shl
(bad)
pop
push
mov
in
lods
cmp
mov
neg
test
cmp
jle
adc
clc
adc
jae
and
out
imul
mov
jo
sbb
adc
cld
hlt
lock
int
lahf
xchg
div
pushf
push
lods
loope
pop
mov
dec
(bad)
xor
sub
mul
cmps
popa
inc
jl
cmc
int
gs
jle
nop
push
leave
mov
call
shl
shl
jbe
jmp
mov
daa
addr16
add
shl
mov
out
retf
pusha
rol
test
sub
jbe
loopne
mov
xchg
mov
push
pop
ss
add
es
or
fcom
sub
(bad)
ins
addr16
lahf
push
rcl
call
jle
jb
or
test
jno
pop
lds
aas
lods
ins
scas
mov
test
(bad)
sbb
pop
jmp
repz
push
cmp
(bad)
adc
inc
inc
xor
add
pop
(bad)
mov
pusha
lods
pop
cdq
pop
and
stc
push
arpl
dec
ret
cld
lock
neg
mov
add
sub
jbe
add
mov
in
mov
fsub
test
scas
jle
xchg
push
push
mov
call
sbb
test
inc
loope
mov
aad
inc
(bad)
mov
or
shl
(bad)
sub
jb
rcr
loope
adc
out
scas
mov
add
(bad)
shl
daa
popaw
xchg
xlat
fwait
inc
in
jb
jle
sub
fmul
mov
sbb
test
and
inc
pusha
jb
or
aad
fiadd
int
or
scas
movsx
sbb
out
push
sbb
push
test
pushf
test
jae
fincstp
xchg
int
dec
out
sar
push
pop
call
push
dec
out
or
into
sbb
jg
scas
arpl
mov
ss
jmp
test
xchg
enter
fs
cmp
icebp
out
retf
nop
test
xchg
test
stc
iret
add
xchg
push
(bad)
ja
call
out
bound
daa
jne
lods
imul
sahf
cwde
push
outs
dec
cld
jne
shl
ret
fmul
je
mov
cmp
and
call
or
sub
int3
adc
add
push
out
or
xor
mov
arpl
sbb
pusha
test
imul
mov
inc
ds
fwait
leave
jb
sub
mov
fbstp
movs
mov
sbb
in
shl
add
dec
inc
adc
push
lds
ror
repz
es
idiv
mov
mov
inc
or
(bad)
jmp
mov
pop
icebp
xchg
xchg
push
int
aad
xor
ror
mov
out
sbb
test
jns
lea
jmp
xchg
cmp
mov
ss
or
addr16
fisttp
aad
sub
in
movs
or
mov
or
sbb
cmc
mov
cs
sbb
mov
or
cld
xchg
imul
dec
rol
das
inc
and
je
inc
cmp
pop
xor
inc
mov
mov
movs
mov
and
mov
xchg
xor
add
into
pop
sbb
retf
jae
out
inc
(bad)
(bad)
(bad)
mov
and
or
adc
movntq
cmc
sub
(bad)
mov
(bad)
aaa
jp
arpl
ins
into
pusha
pop
aas
adc
mov
jae
ins
mov
outs
xor
xor
pop
xor
pop
and
pop
add
cmc
jns
and
add
fist
pop
jbe
hlt
and
movs
jne
add
jne
mov
es
push
rcl
adc
mov
pop
adc
call
jb
es
fcmove
mov
mov
cs
(bad)
mov
cwde
mov
inc
sub
sbb
jge
add
dec
pop
call
cmp
or
ja
add
fist
push
push
sub
and
xor
jl
pop
dec
idiv
jmp
data16
sbb
push
pop
sbb
cmp
jl
out
mov
jge
xor
sahf
push
mov
sub
pusha
adc
out
jno
adc
data16
lahf
sti
or
call
xchg
ror
iret
push
sti
in
ficomp
pop
test
(bad)
jmp
and
hlt
test
scas
mov
pusha
inc
pop
mov
push
(bad)
dec
into
jmp
daa
outs
pop
xor
mov
scas
ds
lock
mov
cmp
repnz
fild
lods
and
test
ja
xchg
jnp
or
stos
jae
in
and
dec
in
add
arpl
test
enter
ror
mov
js
(bad)
mov
arpl
sbb
inc
mov
mov
imul
push
or
call
jo
cmps
or
out
xchg
jmp
cmp
aad
push
imul
std
adc
(bad)
sub
arpl
jp
pop
mov
cmp
sets
sbb
add
sti
add
scas
push
(bad)
cmc
mov
add
bound
lods
jae
shl
sar
(bad)
out
cmp
sbb
icebp
push
(bad)
int
adc
scas
jns
push
aaa
mov
aad
ins
mov
or
cli
sub
(bad)
daa
xchg
inc
out
ds
popf
shr
enter
pop
cmps
and
sbb
ja
int
jecxz
and
xchg
aaa
sub
imul
inc
or
mov
push
rol
(bad)
mov
and
sbb
jmp
ret
mov
inc
lds
pusha
xor
dec
enter
xchg
xchg
push
mov
inc
fstp
inc
test
imul
mov
(bad)
pusha
call
pop
cli
hlt
mov
ret
xchg
mov
sbb
sub
sub
popf
fs
add
fucomi
rcl
push
test
shl
test
pop
ss
adc
inc
sar
adc
adc
ins
xchg
jae
pop
or
es
loop
dec
push
inc
push
ja
mov
jmp
sti
dec
loopne
call
jbe
movs
sbb
xor
out
ds
pop
in
xchg
push
inc
ss
mov
dec
lea
inc
ins
ror
mov
mov
pop
jae
out
jg
and
stos
stos
inc
mov
ins
scas
iret
or
jle
fldcw
mov
fs
jae
sbb
xchg
call
and
push
mov
or
xlat
push
in
xlat
adc
sahf
inc
aad
or
jg
add
mov
mov
cmp
es
call
cmp
inc
mov
mov
cmp
fiadd
jo
ftst
outs
ret
ins
ins
ret
inc
(bad)
scas
(bad)
ins
aam
gs
js
out
jae
sbb
adc
es
cmp
sbb
retf
ss
and
push
sub
fsubr
mov
mov
pop
jge
mov
adc
loop
xor
xor
(bad)
xchg
out
sub
fst
or
data16
mov
or
and
fdivr
jb
popa
sub
scas
sub
sub
adc
add
push
ror
mov
ret
aaa
vpackuswb
movs
jbe
xor
in
push
test
mov
jnp
bound
mov
xor
dec
in
test
int3
inc
push
cmps
cmp
mov
mov
pop
sub
outs
js
sub
push
cmp
test
pusha
mov
adc
pop
or
cmps
je
jmp
jmp
ret
adc
or
xor
push
adc
loop
ss
or
pop
enter
lds
adc
ds
ficomp
ret
adc
mov
popa
addr16
xor
test
jmp
sbb
sti
dec
cmp
push
imul
stos
mov
jmp
imul
outs
xlat
push
adc
jbe
add
push
jl
addr16
bound
push
(bad)
jg
or
xchg
mov
retf
sbb
push
stos
and
in
xchg
cmovae
aam
les
jbe
jl
lea
jmp
or
fbstp
mov
xchg
add
mov
push
stos
call
inc
xchg
test
fs
movs
ret
cld
sbb
and
adc
xor
add
push
jle
add
aam
sub
pop
dec
out
inc
cmc
and
add
in
adc
pop
push
xchg
inc
jmp
rol
stos
sbb
xlat
or
xor
mov
cld
pop
cmp
fcmovnb
add
mov
push
push
inc
mov
sbb
into
xchg
test
dec
xchg
or
push
jmp
xor
test
adc
or
cwde
fstp
xchg
arpl
cli
es
lahf
pop
loope
jmp
mov
jbe
neg
and
cld
sub
cmp
sar
xor
call
mov
sbb
out
lods
mov
pop
xchg
inc
scas
adc
stc
mov
adc
add
xchg
out
mov
ss
adc
movs
push
cmp
pop
pop
and
jecxz
pop
cmc
jl
mov
test
data16
cs
jg
inc
mov
inc
mov
inc
pusha
pop
bound
xor
xchg
int3
mov
std
pop
jmp
es
add
mov
sbb
popf
push
pop
rcl
fisub
cmp
sbb
push
pop
mov
adc
push
or
mov
and
js
push
mov
lea
cmps
sub
arpl
cld
mov
shr
push
out
dec
sub
add
cmps
and
ds
adc
lahf
std
neg
mov
jle
in
loope
arpl
nop
cs
popa
dec
shl
pop
scas
mov
fbld
shl
and
sbb
aam
and
cwde
daa
ins
int
jmp
int3
rcl
mov
push
iret
xor
stos
es
add
adc
fs
xor
ret
lods
mov
imul
sub
xchg
and
jns
lds
fisub
fsub
xchg
add
pusha
xor
inc
mov
mov
(bad)
fild
scas
aas
adc
pop
xor
dec
and
mov
ret
not
cwde
and
and
mov
sbb
mov
rcl
or
adc
daa
test
sub
cdq
mov
push
clc
daa
push
les
push
cmp
stos
or
imul
lods
aam
jnp
fld
adc
cmp
imul
je
pop
push
in
ret
das
inc
add
movs
pushf
loopne
dec
xlat
es
(bad)
pop
push
cmp
pop
xlat
das
out
and
push
in
ins
sti
out
int
mov
mov
sbb
and
test
aas
cmp
mov
push
jne
push
in
cmp
add
fimul
sahf
xlat
inc
in
xor
jnp
out
pushf
inc
mov
ficomp
das
cmp
adc
push
(bad)
call
jg
push
push
lahf
out
xor
ins
aad
iret
inc
xchg
sub
test
inc
ins
lock
mov
in
loope
jbe
xor
cmp
lock
push
(bad)
(bad)
adc
xlat
push
or
jbe
fistp
ins
pop
dec
not
xchg
inc
mov
mov
mov
loope
out
pop
fisub
rcl
cmp
jo
scas
jnp
icebp
dec
pop
test
xlat
cmp
mov
(bad)
mov
movs
fsubr
loope
hlt
stos
push
xor
ins
push
mov
les
adc
xor
mov
xor
ror
retf
je
fcmovnb
push
sbb
fsubr
xchg
xchg
xchg
ror
out
sar
jle
cmps
adc
mov
pop
test
xor
or
cmp
ffree
or
sub
and
xchg
ja
das
xlat
into
push
xchg
jnp
add
fninit
arpl
shl
and
repz
dec
(bad)
in
cmc
adc
nop
(bad)
ret
repnz
xchg
scas
leave
sub
mov
mov
jecxz
outs
fstp
mov
pop
mov
pop
test
fisubr
xchg
jne
push
cmp
das
lock
inc
dec
and
mov
stos
enter
mov
shl
inc
jecxz
cmp
(bad)
jno
xor
xchg
pop
or
jno
dec
(bad)
dec
xchg
inc
cmp
inc
push
mov
test
or
stos
bound
arpl
dec
pop
jle
gs
fistp
cmp
adc
jge
mov
mov
jecxz
gs
mov
add
pop
push
pop
iret
xchg
adc
je
repz
add
mov
daa
ins
and
sub
and
ds
adc
or
(bad)
std
inc
sar
cmp
loope
push
mov
dec
xchg
push
adc
sbb
xlat
imul
mov
fisttp
cmps
pop
rol
scas
inc
push
add
sbb
pop
sub
fwait
adc
inc
xlat
in
cwde
jle
in
retf
loopne
adc
in
cdq
pop
push
sbb
mov
dec
mov
cmps
mov
addr16
imul
clc
popa
mov
adc
push
sbb
rol
pop
cld
push
(bad)
cs
jp
mov
hlt
push
or
push
popf
lods
adc
test
daa
mov
xor
lock
push
mov
fcmovnbe
xor
jbe
pop
test
retf
mov
shl
repnz
mov
jg
aad
arpl
ds
les
push
jle
add
or
aad
retf
xchg
cmps
xchg
sub
leave
pop
xor
lahf
lods
pusha
pop
pop
push
mov
out
add
xchg
fsub
or
sbb
xchg
bound
idiv
scas
push
cli
movs
cwde
inc
ins
push
sahf
push
scas
into
call
xchg
aam
pop
xor
push
repnz
aas
out
xchg
adc
add
push
aas
mov
cli
fadd
in
inc
sahf
cmps
iret
mov
jns
dec
je
dec
out
sbb
xor
cmp
loope
jne
fwait
outs
jg
cmp
mov
cmp
ret
dec
xchg
fs
cli
shl
cwde
jo
jne
mov
pop
loop
mov
in
jmp
inc
sub
dec
push
je
or
mov
scas
xor
cmp
mov
or
lea
pop
fist
pushf
stc
int
jns
movs
mov
fsubr
push
adc
and
loop
push
sbb
adc
shld
(bad)
or
mov
mov
pop
push
mov
and
mov
std
lods
aas
rol
dec
in
cdq
mul
or
inc
shl
sbb
dec
sar
push
sbb
ss
shr
adc
sub
mov
inc
lods
(bad)
jns
aas
or
xor
fcom
paddb
pop
mov
outs
xor
out
fs
adc
cli
retf
cmp
std
call
inc
inc
mov
popa
and
pop
nop
out
sbb
jno
push
fsubr
(bad)
xchg
cli
mov
in
jge
dec
cli
repz
push
push
or
cmps
sub
mov
jb
ret
jmp
inc
mov
loope
xor
mov
add
not
hlt
outs
push
call
lahf
cmp
mov
or
jl
jae
lea
stos
dec
sbb
cmp
xlat
ret
lds
or
lods
adc
dec
and
icebp
fbstp
aaa
cmps
fwait
pop
out
aas
ss
jbe
sbb
fld
dec
neg
imul
int3
push
jp
fld
loop
je
call
xor
int
push
rcl
outs
add
ins
sub
xor
dec
clc
or
sbb
xor
pushf
call
push
dec
push
jnp
mov
lods
dec
fdiv
idiv
dec
jo
fidivr
lock
clc
cmp
int3
inc
mov
jle
stos
mov
mov
cmp
fiadd
call
ins
cmp
out
pusha
inc
push
lock
pop
pop
inc
mov
dec
xor
in
jo
jno
mov
cmp
aas
adc
push
xchg
add
pop
in
mov
mov
outs
loope
aam
mov
fnstenv
xchg
mov
scas
test
sub
fidivr
xor
jns
int
dec
call
adc
push
fwait
scas
and
aaa
sbb
cwde
inc
mov
xor
mov
adc
call
pop
mov
sub
cmps
arpl
ja
cmp
push
out
xchg
mov
out
push
cmps
pop
inc
(bad)
push
imul
(bad)
call
test
cmp
cli
mov
mul
mov
imul
(bad)
addr16
jecxz
fcom
dec
jae
out
lods
or
add
popa
pop
xchg
jae
cmp
add
mov
shr
jp
lock
cwde
push
out
xchg
sub
test
xchg
out
inc
dec
movs
or
mov
adc
in
pop
arpl
push
jo
lods
repz
push
sub
xchg
sbb
rcl
je
mov
pop
mov
mov
lock
push
imul
fstp
(bad)
pop
ret
add
jae
das
test
rcl
inc
sbb
and
test
int
adc
push
loope
sbb
div
inc
cli
push
inc
mov
cli
loope
les
mov
jbe
adc
and
call
lock
mov
adc
popf
mov
xchg
sbb
cmp
fs
push
ret
es
cld
addr16
aad
adc
xor
push
imul
cmp
idiv
popf
jle
push
add
(bad)
cmp
or
dec
repz
mov
cwde
pop
(bad)
cmp
add
dec
sub
movs
fsubr
imul
or
sbb
xor
ins
adc
movs
in
in
jmp
inc
loope
and
sbb
lods
adc
dec
jp
adc
fisttp
or
mov
push
inc
test
ret
inc
or
sbb
fdivr
jb
stc
and
scas
sbb
jae
jbe
rcl
sbb
lock
shl
sub
cmp
les
jge
jmp
out
lahf
ja
adc
xor
dec
scas
dec
mov
sbb
stos
fsub
sub
dec
jo
and
pushf
jb
mov
mov
cmps
clc
mov
xor
adc
dec
ds
sub
mov
mov
fnstcw
leave
in
dec
jg
xor
loop
jnp
loope
cs
inc
sbb
paddsb
(bad)
cmp
dec
fistp
fs
repz
add
aas
xor
jno
jne
scas
retf
pop
xchg
and
xor
add
lahf
mov
movs
sbb
dec
push
(bad)
sbb
jle
push
stos
call
inc
mov
xor
inc
pushf
xor
mov
std
sbb
jno
cmp
std
lds
fnstsw
mov
stc
sub
(bad)
daa
push
xchg
push
push
in
int
or
in
pop
scas
inc
cmp
rol
mov
xchg
dec
retf
xchg
lock
xchg
mov
cli
stos
xor
cmp
mov
popa
xor
mov
add
lock
mov
xor
dec
icebp
mov
jp
(bad)
pop
dec
push
push
movs
in
dec
pop
and
imul
and
jle
sub
imul
jno
sub
ficom
in
icebp
(bad)
dec
xor
dec
gs
pop
push
repz
and
(bad)
ds
pusha
mov
mov
mov
adc
aad
lea
sbb
sub
jbe
inc
cld
jnp
mov
js
jge
repnz
and
leave
mov
outs
add
es
xor
int3
push
mov
xchg
out
sub
ja
and
or
int
repz
(bad)
sar
std
aaa
pop
sub
and
sbb
loopne
cdq
add
in
or
das
cwde
or
js
shr
lea
xchg
popa
pop
mov
xor
cmp
shl
add
ins
mov
cmp
in
mov
pop
cmps
dec
jbe
retf
in
push
adc
out
dec
inc
xchg
test
ror
xchg
push
dec
cmps
add
jbe
in
(bad)
xchg
sbb
scas
repnz
in
xchg
lock
dec
loopne
push
add
ret
inc
sbb
fisub
fwait
test
mov
adc
in
add
cs
cmp
mov
gs
movs
aas
rcl
movs
iret
jns
mov
xchg
jnp
int3
xchg
fidiv
cmp
and
dec
push
push
adc
mov
je
sub
mov
cs
jae
std
add
fild
inc
push
lds
mov
jge
xor
(bad)
lahf
xchg
mov
sbb
dec
sbb
pop
push
push
int3
inc
js
xor
inc
mov
push
mov
fist
jmp
sbb
push
sbb
mov
push
je
pop
mov
add
arpl
mov
scas
clc
sti
fdivr
mov
popa
shr
sbb
add
ss
mov
das
call
or
jmp
es
aam
xor
mov
rcl
xor
div
stos
and
dec
mov
adc
outs
cmps
outs
pop
shl
cmp
idiv
sub
int3
sbb
loope
and
std
mov
jb
xor
jno
fimul
sbb
popf
or
jle
aas
dec
cli
mov
xchg
call
push
inc
push
jmp
ret
pop
in
sub
fisttp
sub
xchg
addr16
sub
test
fdivr
xor
mov
gs
jns
fs
dec
jecxz
in
mov
sub
xor
mov
cmp
dec
aaa
pop
sbb
ins
push
pop
clc
shl
cmp
(bad)
cmp
push
inc
das
cmp
in
pop
push
adc
inc
sar
add
dec
and
js
pop
sub
sub
dec
shl
fmul
push
sub
rcr
mov
bound
mov
ret
sbb
adc
retf
cdq
lahf
xchg
ds
cld
movs
mov
hlt
mov
sub
push
xchg
test
adc
in
lods
jno
out
popa
aad
lods
cmp
mov
mov
fld
push
inc
imul
lds
lahf
in
sub
addr16
in
clc
ins
ins
xor
aaa
dec
scas
stos
and
push
xchg
cdq
or
push
cmp
jns
pop
addr16
sub
or
mov
sti
pop
(bad)
out
jb
lock
pop
fild
mov
sub
pop
lds
mov
xor
mov
iret
push
or
cmp
jb
sbb
aad
stos
jle
jb
pop
adc
push
in
rep
arpl
sahf
xor
inc
push
aad
or
mov
mov
push
mov
out
sub
(bad)
call
stos
jnp
add
not
xchg
rol
mov
ins
(bad)
xor
dec
sbb
sahf
mov
stc
push
xchg
dec
jo
fistp
fisttp
(bad)
call
call
mov
or
out
das
inc
dec
adc
fld
mov
outs
(bad)
iret
inc
push
iret
inc
(bad)
sti
mov
mov
cmp
fwait
mov
xor
pop
xchg
sbb
pop
aam
fiadd
dec
inc
push
pop
mov
cmps
test
sbb
lock
jns
int
mov
mov
ss
loop
inc
hlt
sub
loopne
cdq
in
sub
dec
dec
shl
loope
xor
cmc
and
rcr
mov
mov
enter
lahf
cwde
aad
icebp
inc
fstp
popf
add
sbb
sub
or
pop
out
sub
je
sbb
les
movs
jo
jge
scas
push
jmp
sub
lahf
push
mov
pop
xchg
jge
mov
cld
adc
imul
movs
aaa
add
mov
leave
loope
jp
mov
cld
ins
mov
ret
xor
(bad)
mov
aaa
inc
daa
jb
pop
sbb
pop
in
cmps
push
mov
les
sbb
pcmpeqd
ins
jbe
in
pop
leave
add
aam
jb
jecxz
test
push
xor
mov
adc
nop
jg
mov
mov
sub
xor
xchg
mov
lea
sbb
shl
mov
das
cwde
jnp
adc
repnz
cmc
jbe
mov
inc
jl
add
out
inc
jne
out
sbb
cmp
cwde
scas
sub
xlat
cwde
push
jecxz
outs
cs
mov
movs
pusha
and
cmp
inc
push
ds
xchg
push
les
pop
call
push
inc
cmps
les
cwde
movs
in
int3
fidivr
lds
push
jb
shr
popa
iret
popa
jb
jb
fwait
xchg
push
sub
push
loopne
cmp
out
lock
sub
mov
jb
push
cmps
and
in
push
jb
jmp
nop
call
pop
jnp
sub
jns
xchg
retf
ret
repnz
xchg
lods
cmp
mov
fwait
add
mov
leave
mov
mov
pop
cmps
(bad)
cli
rol
adc
sub
push
jns
int3
sub
and
mov
arpl
ror
add
mov
lods
pop
xchg
call
es
or
inc
inc
in
lds
pop
fldenv
out
in
ficom
dec
test
xchg
fs
adc
out
xchg
scas
jl
fild
das
xor
gs
nop
inc
les
fsub
and
dec
jns
inc
adc
pop
dec
arpl
rcl
pushf
nop
repz
push
lea
push
nop
mov
in
push
add
out
and
dec
or
cmp
jecxz
inc
cmps
mov
push
ficomp
xchg
mov
jns
int
or
fld
icebp
mov
jmp
xchg
push
ret
jbe
cmp
mov
test
cmp
mov
lahf
cmps
cmps
fld
loop
call
nop
dec
(bad)
div
jb
add
jbe
fimul
sbb
inc
cdq
sbb
push
adc
into
repz
out
mov
inc
and
jge
jge
popa
(bad)
retf
sbb
ss
dec
pop
push
loope
jbe
test
mov
loop
mov
out
mov
mov
sbb
call
icebp
leave
mov
ins
adc
inc
push
lea
inc
scas
icebp
mov
lods
sub
frstor
fisub
in
cmp
rcl
arpl
and
rol
xchg
sub
xchg
into
das
mov
lods
lods
pop
jl
mov
inc
pop
fisub
push
jl
pop
clc
sbb
mov
stos
or
int3
and
xchg
push
pop
popf
into
and
mov
dec
and
(bad)
icebp
addr16
retf
inc
fs
pop
sbb
fild
daa
scas
and
ds
jmp
cmp
sub
xor
int3
dec
retf
push
in
out
jmp
inc
adc
out
cwde
out
dec
adc
(bad)
out
rol
sbb
cmp
cmp
imul
adc
cmp
jle
inc
retf
xchg
or
adc
and
shl
cbw
adc
sbb
xchg
imul
sub
test
pop
adc
dec
inc
jbe
or
jns
ror
psubw
add
cmp
jb
cdq
adc
ror
fs
mov
xlat
pop
lea
dec
stc
outs
jmp
cmps
ror
mov
ins
imul
push
imul
and
mul
lods
xchg
sub
jge
inc
mov
aad
adc
mov
movs
test
push
or
dec
js
dec
mov
popa
je
inc
(bad)
js
cs
aad
js
mov
push
dec
fadd
lods
mov
xor
xchg
ret
sbb
sbb
or
(bad)
mov
icebp
fcmovu
aas
lock
fwait
push
jae
lock
cmp
std
inc
les
mul
or
adc
(bad)
push
jbe
fnstsw
add
in
into
push
outs
cli
inc
xchg
or
adc
cvtdq2ps
fisub
enter
push
lods
adc
pop
sub
out
repnz
adc
cli
arpl
or
mov
les
adc
popa
xor
(bad)
movs
mov
and
jnp
mov
cmp
mov
xlat
inc
hlt
(bad)
mov
daa
xor
jl
and
inc
cmp
mov
les
mov
sbb
stos
or
inc
add
and
jle
add
or
test
mov
imul
out
fbstp
push
dec
add
add
loop
push
das
inc
mov
cdq
or
fistp
gs
loope
pop
fcomp
mov
add
bound
es
xor
mov
push
comiss
xchg
test
xor
cmc
push
mov
(bad)
ror
xor
dec
or
sub
xor
sub
sbb
(bad)
and
fsin
nop
test
fwait
and
pop
jmp
and
stos
loopne
shr
outs
cmp
mov
or
mov
loope
js
call
cwde
mov
aad
xlat
sub
test
and
sbb
mov
imul
cmp
jmp
jnp
fistp
jbe
aam
call
sub
xlat
mov
push
xor
add
int3
(bad)
pop
push
ss
jp
xchg
adc
inc
stc
mov
mov
std
mov
scas
sub
sbb
icebp
inc
std
(bad)
ss
fmul
lds
xor
add
xchg
call
xor
mov
mov
fmul
mov
sub
fidivr
sub
xor
sar
pop
out
shl
inc
retf
xor
inc
clc
pop
pop
inc
jle
sbb
fld
cld
in
test
cld
imul
xchg
inc
rol
inc
push
test
mov
add
or
pop
stos
fist
xchg
aaa
out
pop
call
mov
cmp
lock
and
stos
std
mov
pop
mov
out
fstp
xor
enter
sub
test
lds
ja
into
aam
rol
enter
dec
pop
xchg
(bad)
dec
jp
leave
out
(bad)
xchg
leave
cmp
jae
mov
test
fwait
sbb
mov
and
adc
mov
movs
pushf
outs
aas
pop
std
in
cwde
rol
dec
jle
movs
call
inc
ins
mov
jb
sbb
pop
mov
not
sub
outs
out
push
jp
ret
sbb
es
imul
lea
mov
js
mov
or
xchg
jmp
mov
rcr
inc
dec
shr
ret
out
cmps
and
push
pop
sub
pushf
or
or
adc
ins
push
nop
sar
int3
jbe
inc
dec
adc
sbb
or
sar
xor
shl
call
jbe
ret
inc
push
ss
dec
mov
ds
imul
xor
sub
push
mov
shr
sbb
arpl
mov
outs
inc
fdivp
cmp
xchg
sbb
int
or
fdiv
in
stc
jne
push
sub
sub
out
rcr
xor
ret
sti
daa
lods
mov
push
mov
jnp
shl
pop
mov
adc
mov
dec
cwde
add
arpl
pop
fistp
jb
aaa
cmps
jecxz
dec
fsubr
cs
push
and
fnstsw
push
dec
sbb
ds
lahf
lahf
and
aas
push
and
lea
jmp
lock
sub
aas
or
cmp
mov
mov
pop
sahf
and
ficom
mov
(bad)
xlat
arpl
repnz
in
into
sub
pop
ret
mov
sti
aaa
add
icebp
push
int
push
inc
add
mov
inc
imul
push
sub
clc
stos
fcomp
aaa
mov
sbb
xchg
scas
xchg
jne
test
in
mov
lods
pop
test
cmps
jns
jae
mov
xchg
push
add
leave
add
(bad)
cld
mov
ret
repz
sbb
std
sbb
leave
sti
push
push
mov
sub
fcom
pop
enter
icebp
xor
int
idiv
cmp
jp
push
rcl
jmp
and
mov
ss
pop
mov
add
dec
repz
stc
and
rcl
dec
fs
xchg
dec
lods
adc
pusha
push
jle
ret
and
(bad)
or
or
xchg
jb
pop
jmp
and
xor
call
mov
mov
aas
inc
inc
mov
lods
dec
sub
jae
adc
retf
mov
inc
pop
adc
xchg
pushw
pop
pop
(bad)
(bad)
hlt
xchg
add
adc
fdivr
imul
cmp
cmc
in
into
aaa
daa
fmul
scas
pop
leave
(bad)
xchg
xlat
les
or
mov
hlt
mov
sbb
repnz
stc
push
shr
mov
jmp
test
cdq
jo
imul
repz
mov
or
pop
shl
pop
xchg
mov
neg
stc
pusha
gs
movs
ret
rcr
pop
push
dec
(bad)
dec
pusha
ret
xchg
push
sub
push
or
inc
dec
retf
popa
outs
xor
mov
add
xor
call
jns
leave
out
jmp
add
mov
dec
sbb
jnp
push
mov
dec
xchg
rcr
cmp
inc
add
or
xor
rol
push
push
add
paddq
xor
mov
jg
gs
adc
fild
xchg
js
pop
imul
ret
mov
popf
jne
mov
cmps
shl
xor
nop
dec
(bad)
test
sub
push
push
mov
fcom
ret
xchg
or
aas
jnp
or
dec
push
(bad)
aas
add
int
cmc
push
aas
or
jbe
cmp
fs
repz
div
in
xchg
xchg
push
fisttp
dec
xor
and
mov
and
sar
mov
call
stc
xchg
jecxz
scas
mov
int3
ror
push
out
in
lock
dec
sbb
data16
sahf
sar
cli
push
inc
pop
mov
stos
add
and
bound
stc
pop
daa
ret
hlt
cli
cdq
sub
shl
xor
or
mov
out
data16
xlat
fwait
sub
dec
and
call
pop
ds
inc
add
stc
cmc
jg
fs
adc
mov
rol
fwait
jno
in
mov
mov
(bad)
cdq
(bad)
hlt
cmp
mov
mov
adc
mov
lods
pop
test
(bad)
xchg
pop
add
jnp
mov
xchg
jb
cli
lahf
movs
stos
inc
push
cmc
mov
int
ret
adc
xchg
ins
push
mov
pop
scas
sbb
push
fsubp
cmp
ja
cli
and
jb
iret
push
lods
(bad)
mov
mov
aas
inc
movs
or
lods
or
fwait
ret
loopne
(bad)
add
lods
pop
in
and
test
es
mov
shr
rcr
repnz
je
leave
call
and
popa
stos
jb
jb
lea
pop
sbb
gs
sub
(bad)
and
sub
jmp
fldenv
push
ja
pop
mov
push
push
popa
xchg
cmp
(bad)
cwde
das
lea
ret
pusha
cmp
sbb
mov
inc
ins
xor
mov
mov
aas
and
dec
repnz
sub
mov
dec
out
mov
mov
(bad)
pushf
inc
mov
push
lods
xchg
test
cmps
das
push
push
inc
cmc
sub
xchg
retf
int3
sub
sbb
adc
ins
lods
xchg
frstor
dec
add
adc
sar
enter
push
jle
unpcklps
imul
dec
xor
in
xlat
fild
fidivr
cwde
jb
add
and
push
(bad)
cmp
and
retf
and
sub
test
cmc
dec
xor
xchg
ins
les
cmp
mov
mul
jmp
push
cdq
enter
sbb
inc
mov
mul
(bad)
and
cmp
pop
dec
adc
and
imul
mov
enter
popa
and
int3
inc
dec
fwait
mov
jge
jno
jb
rol
sub
iret
sub
cmps
push
sub
adc
movs
cmp
and
jg
push
sub
cwde
sbb
mov
mov
and
daa
mov
aam
adc
ins
sahf
pop
test
clc
or
lea
pop
js
sub
xor
pop
sub
das
ret
je
mov
push
shr
and
cli
sbb
outs
mov
sub
ss
push
mov
shl
scas
jmp
adc
test
fptan
xchg
jae
mov
cli
jo
sub
scas
stos
or
outs
popf
daa
jmp
(bad)
mov
jns
mov
pop
and
(bad)
mov
imul
clc
aam
sub
pop
inc
sub
sbb
shr
mov
adc
pop
out
idiv
mov
dec
cmp
jo
xchg
cmp
retf
and
mov
dec
mov
dec
cmp
repz
push
mov
xchg
mov
hlt
mov
mov
sub
sbb
cs
push
or
sub
out
test
cli
repnz
cld
inc
jp
ret
xchg
or
sbb
mul
fcomip
mov
cdq
xchg
sbb
data16
sub
push
jmp
push
scas
(bad)
push
add
jbe
fwait
adc
xor
adc
push
push
clc
rol
cwde
pusha
mov
(bad)
sar
scas
mov
int
test
scas
(bad)
aam
dec
inc
jb
rcr
popf
cmp
jle
push
in
pop
out
mov
(bad)
mov
pop
pop
sbb
test
push
out
sbb
fsub
in
dec
outs
adc
out
scas
cmp
cmp
ds
sub
xor
call
mov
adc
jmp
sbb
inc
xchg
sahf
push
sbb
mov
cmp
movs
push
lods
popf
inc
add
dec
adc
jg
shl
pop
mov
in
mov
lahf
cmp
ret
push
stos
rcl
and
sub
and
cmps
cld
mov
movs
mov
mov
retf
adc
dec
call
push
xlat
xor
ficomp
nop
ins
and
xchg
mov
lods
push
xchg
ret
out
inc
jnp
stos
or
int
push
dec
(bad)
adc
retf
or
mov
mov
movs
mov
mov
add
xchg
add
mov
fmul
jmp
xchg
sbb
(bad)
cmp
jno
mov
pop
inc
dec
adc
lods
loop
jno
cmp
sbb
mov
adc
mov
lds
push
lahf
arpl
xlat
jmp
add
in
mov
sub
fdivp
xor
aad
into
cmp
and
test
dec
fcomp
push
lods
enter
push
cmps
ins
xlat
dec
out
and
dec
sbb
mov
in
sub
(bad)
cmovg
xchg
or
sub
lahf
xor
lods
cmc
mov
mov
ds
lods
jae
xor
(bad)
sub
std
ja
mov
cmp
fcmovnb
fstp
loope
jb
mov
jecxz
xchg
pop
shr
jl
sbb
dec
mov
movs
mov
scas
or
inc
call
clc
mov
cmps
(bad)
push
inc
xchg
mov
sub
mov
fwait
cmps
test
iret
and
loope
pop
pop
shl
mov
std
push
xchg
xchg
mov
adc
push
sub
mov
jmp
mov
mov
mov
ins
and
xchg
loope
or
inc
and
pop
pop
cwde
pop
add
lahf
dec
fs
and
addr16
adc
scas
dec
jns
mov
sbb
neg
push
rol
inc
add
sbb
lds
popa
inc
fild
mov
jmp
sahf
jae
mov
aad
ja
jmp
cmp
pop
jns
push
dec
dec
adc
mov
mov
js
xchg
mov
daa
mov
sbb
add
(bad)
jecxz
mov
ret
repz
js
mov
xchg
dec
in
and
dec
xor
cdq
sbb
in
int
xor
(bad)
push
inc
and
mov
ins
imul
inc
jle
mov
inc
hlt
adc
add
mov
jb
enter
mov
pop
mov
pop
pop
pop
dec
rcr
mov
xchg
fst
cs
dec
aas
arpl
mov
arpl
sub
add
rol
push
(bad)
mov
stc
in
call
lds
adc
in
addr16
cmp
push
inc
sub
and
jne
cli
int3
iret
loopne
jno
push
inc
(bad)
or
stos
pop
in
inc
push
lahf
cmp
sbb
ins
jo
aas
inc
cmc
adc
in
jmp
aas
xchg
out
cli
cld
xchg
add
aad
or
push
add
nop
mov
or
pushf
lock
outs
(bad)
cmp
paddq
pop
test
leave
mov
repz
push
stos
cmps
push
mov
xchg
lds
lods
and
sub
cmps
sbb
jbe
imul
xchg
stc
cmp
imul
hlt
mov
test
or
arpl
in
add
or
call
sbb
fild
push
or
pop
dec
fcmove
push
bound
or
jne
scas
call
sbb
mov
(bad)
fs
sbb
js
sub
stos
sub
push
stos
stos
or
mov
das
xchg
mov
scas
fst
retf
nop
xchg
add
and
test
in
or
xchg
inc
add
sub
stos
dec
and
push
xchg
cmp
rcl
mov
adc
jae
addr16
fadd
xchg
retf
mov
test
xchg
outs
mov
sub
stos
push
push
push
js
enter
mov
outs
not
in
arpl
mov
and
inc
scas
movd
xchg
pushf
jno
jmp
xor
adc
push
mov
cmp
pop
sti
mov
movs
(bad)
push
or
shl
movs
int
mov
xor
in
pop
clc
push
add
mov
jmp
dec
mov
stos
push
lea
mov
or
dec
pop
mov
adc
or
iret
mov
and
je
std
retf
retf
mov
add
in
mov
stos
pushf
call
and
inc
rcl
adc
dec
cmp
add
mov
fsubr
std
mov
dec
nop
push
inc
inc
push
(bad)
fdiv
in
ds
ret
inc
cmp
aas
mov
call
pop
cmp
xor
fidivr
ja
cmp
loopne
aaa
fcom
out
add
dec
or
mov
sar
jmp
sub
adc
rcr
push
pushf
gs
mov
movs
cmc
xchg
and
dec
mov
cs
lods
sub
enter
mov
int3
mov
jb
and
scas
xchg
inc
ins
ds
dec
inc
fs
mov
iret
out
stos
push
hlt
mov
out
jge
xor
lahf
mov
push
cmp
cmc
jle
push
sbb
cmps
call
es
and
sub
push
xchg
mov
pushf
inc
cmp
sub
ret
sbb
repnz
xchg
mov
push
xlat
mov
icebp
fisub
add
(bad)
jae
pusha
ret
cmp
(bad)
ret
jecxz
out
push
xchg
sub
jge
out
es
push
cmp
push
pop
cmp
push
movs
mov
dec
int3
jmp
pslld
fild
(bad)
lock
cs
cmp
cwde
int
out
shl
aam
sahf
cmps
pop
test
cmp
pop
out
test
rol
sbb
sbb
(bad)
or
mov
adc
mov
xchg
pop
pop
cmps
cmp
mov
std
dec
in
out
mov
cmps
add
and
push
in
sbb
jne
aad
push
mov
pushf
dec
in
out
push
int3
dec
mov
and
ud0
lods
fs
fild
scas
mov
addr16
sub
sbb
in
movs
pop
and
xor
daa
and
stc
mov
call
js
jae
sub
xchg
xchg
cmc
mov
or
pushf
cli
mov
or
dec
jns
xchg
pop
sbb
out
or
xchg
(bad)
(bad)
push
mov
jns
mul
jae
xchg
dec
push
bnd
out
push
rol
std
pop
xor
pop
lea
dec
mov
cli
(bad)
cmps
adc
jmp
xor
rcr
jge
xchg
lock
in
ins
das
push
aad
xchg
lahf
jecxz
mov
xchg
jl
and
loope
sbb
inc
mov
iret
ficomp
sbb
aad
mov
sub
sti
push
in
fnstcw
mov
jl
mov
inc
les
dec
lods
cld
xchg
sbb
test
sahf
xor
jbe
movs
stc
iret
sub
addr16
movs
sub
cs
xchg
fdiv
pushf
inc
lahf
jnp
scas
cmc
add
dec
mov
daa
icebp
idiv
xchg
mov
lds
pop
pop
lea
es
adc
cmp
and
cwde
fcmovnu
jo
jl
or
lods
cdq
sub
imul
jno
(bad)
icebp
push
xchg
test
mov
popf
shr
xchg
add
sbb
push
pop
or
jl
mov
xlat
pop
xchg
popa
push
xchg
les
jle
mov
jne
sub
retf
xor
aaa
pusha
pop
imul
add
sbb
jmp
shl
push
enter
ins
sbb
inc
pop
pop
outs
adc
pop
push
mov
out
nop
std
fsubr
inc
clc
movs
cmps
pop
pop
and
bsr
jg
dec
jl
mov
out
ss
cwde
and
aad
enter
dec
or
jecxz
jmp
adc
lock
sbb
xchg
int3
push
jne
in
test
pop
inc
enter
ds
mov
nop
bound
jl
sar
mov
(bad)
mov
ret
iret
push
push
imul
mov
adc
cmp
mov
sbb
mov
sub
fs
fcmovne
mov
mov
sahf
fwait
leave
loop
and
hlt
mov
aam
xchg
std
push
adc
sbb
aas
sbb
dec
pop
sub
fmulp
pop
jns
jns
movd
lods
mov
in
mov
and
lods
popa
std
ins
jmp
(bad)
(bad)
scas
loope
stos
adc
lock
mov
out
call
inc
leave
push
mov
lea
inc
retf
fwait
not
push
lahf
dec
sub
jmp
pop
fbld
lods
mov
rol
lock
jp
sbb
scas
fst
jo
or
shl
jmp
sub
dec
jo
fidiv
pop
adc
jle
std
jno
xchg
and
jge
mov
add
jmp
stc
std
cdq
shl
(bad)
popa
mov
stos
cs
add
arpl
add
jge
or
imul
xor
int3
mov
jae
mov
and
mov
and
xchg
or
and
outs
loop
or
push
push
push
rcr
dec
or
les
cmp
fisubr
sub
xchg
popf
and
push
dec
adc
test
mov
mov
mov
fnstenv
fwait
test
pop
ds
test
sar
movs
je
sti
inc
mov
out
dec
aam
push
test
test
mov
cmp
xor
push
sub
xor
jg
jecxz
inc
lods
cmp
hlt
cmps
retf
scas
jns
call
push
std
pop
mov
dec
das
and
inc
neg
add
or
mov
mov
aaa
cmp
sti
pushf
(bad)
lods
mov
sbb
(bad)
pusha
(bad)
imul
(bad)
adc
pop
loope
call
cld
xor
in
cwde
repnz
jmp
add
ror
cmp
lds
push
add
hlt
outs
imul
push
inc
jp
push
imul
cmp
bound
icebp
retf
mov
add
out
cwde
mov
mov
repz
(bad)
aas
out
pop
dec
push
cwde
arpl
test
aaa
out
xchg
dec
push
leave
or
sub
out
nop
aam
xchg
jns
inc
inc
cmp
and
mov
dec
mov
das
call
push
or
mov
mov
rcr
jp
lods
into
fwait
loopne
retf
jnp
dec
test
add
les
jne
mov
xchg
(bad)
(bad)
aam
aad
push
sbb
add
lahf
ins
cld
jnp
mov
cmc
pushf
push
iret
adc
mov
enter
loope
mov
js
pusha
mov
outs
lds
lds
out
jl
pop
(bad)
lods
cwde
sti
lods
sub
popf
adc
push
loopne
daa
jge
push
leave
imul
das
rcl
sbb
ficomp
pop
inc
push
inc
in
imul
out
adc
adc
nop
cmps
push
rcl
xor
movs
shl
push
movs
inc
cdq
scas
inc
scas
mov
fsub
and
pop
jbe
aad
mov
push
push
xor
mul
adc
sbb
(bad)
dec
imul
pop
pusha
mov
fisttp
push
enter
cmp
push
lahf
shl
jns
test
xor
les
(bad)
or
pop
ret
int3
sbb
mov
pusha
push
test
out
xor
sub
sub
cmps
jl
push
add
test
or
xchg
cmps
loopne
pop
fisttp
sub
jb
xor
sti
push
jno
leave
dec
xor
and
mov
fs
je
sar
pushf
cwde
and
dec
jmp
cmps
jnp
cli
jno
push
xor
adc
ja
inc
lock
mov
fdiv
stos
mov
mov
sub
dec
cmp
add
push
and
hlt
jo
sub
jl
pop
lock
jp
sub
jns
push
dec
sbb
test
cmp
enter
push
jle
emms
add
sub
mov
imul
mov
mov
mov
inc
imul
dec
xor
mov
test
cs
push
scas
sbb
mov
(bad)
jmp
or
lds
cmp
les
push
dec
cmp
jmp
test
arpl
pop
retf
call
push
mov
in
adc
mov
(bad)
pop
mov
scas
push
and
dec
dec
push
or
cli
push
test
sub
inc
xor
pop
(bad)
fadd
ja
add
(bad)
bound
sahf
dec
mul
ret
pop
push
mov
iret
cmp
dec
movs
aad
popf
out
sbb
sub
and
or
cmp
ret
outs
xor
out
sahf
sbb
shr
fidivr
xor
cmps
(bad)
in
fmul
sub
add
adc
add
(bad)
div
lods
jg
lahf
sbb
stc
push
sub
lock
mov
pushf
jae
cmp
lock
jecxz
jo
mov
outs
into
dec
pusha
aam
mov
xchg
(bad)
test
mov
mov
dec
test
push
in
push
imul
jnp
popa
loop
jp
mov
cmps
(bad)
aaa
fwait
push
push
sbb
mov
xor
stos
mov
cmc
in
ja
in
xlat
or
stos
inc
es
inc
adc
push
ret
inc
mov
add
int
mov
inc
xchg
das
js
jmp
push
cdq
sub
mov
xor
xor
mov
fisubr
inc
dec
push
xchg
push
adc
jmp
and
add
fcmovnu
mov
(bad)
and
scas
mov
xor
icebp
jmp
ins
mov
int
repnz
add
adc
imul
mov
mov
sbb
dec
and
in
inc
out
push
call
xor
fisubr
add
or
gs
jp
inc
adc
in
cwde
leave
je
mov
bound
je
rcr
ins
retf
cmovae
movs
jge
mov
movs
std
lods
or
in
les
pushf
or
adc
lods
ret
call
inc
leave
(bad)
jns
jbe
pop
push
repz
jmp
in
dec
fs
sbb
or
sub
inc
jg
mov
movs
sbb
mov
jg
mov
imul
test
cdq
jns
pop
es
add
pushf
cmp
pop
mov
ja
nop
jecxz
and
les
enter
mov
ret
sar
out
(bad)
cmc
(bad)
nop
test
xchg
add
push
sbb
int3
rcl
xchg
add
fptan
add
mov
mov
cwde
ja
fs
leave
jge
pop
sub
sbb
xchg
pop
adc
xchg
rol
pop
adc
enter
mov
pop
push
rol
add
enter
jge
stos
into
test
mov
ret
adc
shl
xchg
(bad)
into
aaa
xchg
pop
dec
adc
or
and
sti
jmp
movs
mov
loopne
mov
and
(bad)
sbb
or
lea
and
popf
inc
aaa
bound
push
mov
in
mov
mov
jnp
mov
pop
dec
mov
lds
outs
inc
ins
xlat
adc
sbb
cli
repz
(bad)
and
mov
retf
push
into
(bad)
push
fimul
std
mov
arpl
pop
retf
sbb
pop
out
or
dec
in
retf
mov
adc
fnstcw
mov
sti
push
out
push
in
in
inc
and
mov
in
pusha
add
sbb
shr
jb
stc
inc
adc
jp
leave
aam
xchg
and
sub
stos
dec
ret
adc
pop
nop
rol
call
pop
aaa
inc
add
stos
loope
stos
push
int3
xchg
mov
inc
pop
mov
add
xor
inc
xchg
call
mov
mov
imul
xor
push
and
(bad)
mov
js
dec
push
retf
xchg
cmc
jg
push
shr
loope
fadd
adc
mov
adc
push
xchg
dec
or
arpl
adc
jbe
or
test
data16
call
add
clc
lahf
jbe
push
push
in
add
jl
and
mov
dec
pop
sub
lahf
pop
ret
aam
xchg
mov
cmp
mov
add
movs
mov
iret
add
push
xor
push
xchg
int3
sbb
aaa
gs
adc
inc
aas
mov
push
retf
add
push
or
int3
cmps
imul
cld
mov
popf
jle
call
mov
mov
cmp
ins
cmps
mov
pusha
pop
leave
lock
inc
mov
(bad)
adc
les
imul
fild
mov
fwait
rcr
mov
mov
lock
jne
mov
fxch
mov
xchg
test
out
cwde
mov
push
jne
out
sahf
das
push
sub
in
das
inc
xchg
pop
mov
leave
fisub
xchg
cmc
jns
push
sti
inc
ins
push
jo
push
out
loope
iret
leave
dec
icebp
es
cmps
mov
jge
pop
fld
sti
frstor
inc
fisub
pop
or
jmp
popa
inc
push
std
mov
shl
hlt
test
jp
or
ds
movs
fidiv
imul
and
movs
pusha
mov
xor
ret
push
push
in
push
fisub
lock
or
movs
sub
ss
loopne
dec
adc
mov
pop
lahf
xchg
in
mov
mov
and
pop
shl
(bad)
pop
push
aam
fiadd
dec
lds
in
scas
push
xor
mov
dec
sbb
das
sbb
rcr
mov
adc
frstor
xchg
out
sbb
test
cmc
mov
adc
fiadd
mov
dec
repz
or
iret
xchg
xor
pcmpeqb
dec
push
pop
jmp
call
cdq
fnstsw
adc
ins
jne
cs
fidivr
mov
cmp
push
mov
out
(bad)
mov
mov
push
xchg
pop
xor
addr16
fs
and
jmp
push
inc
xchg
lahf
in
add
ret
pop
or
into
out
scas
and
or
lahf
add
stos
in
mov
stc
jmp
(bad)
fwait
shr
fwait
loop
cwde
dec
fdiv
push
pop
frstor
add
xchg
push
(bad)
mov
cmp
jp
fisub
mov
mov
xchg
sbb
out
out
cmp
push
xchg
shl
pop
retf
fadd
jns
dec
loop
adc
add
fs
adc
mov
mov
stos
adc
push
ret
enter
stos
cmp
inc
xchg
retf
mov
mov
mov
cmp
xchg
out
ss
jb
outs
out
lahf
addr16
(bad)
push
(bad)
fisubr
xchg
movs
or
cmp
adc
rep
sahf
xlat
(bad)
or
pop
sub
inc
mov
add
add
loopne
adc
lds
inc
mov
xor
retf
mov
jecxz
sub
or
mov
push
mov
popf
pop
int
mov
rol
lods
pop
retf
pop
in
jne
out
jg
push
daa
dec
cmp
dec
scas
fdiv
dec
lods
add
adc
xchg
int3
mov
(bad)
fcmovnb
add
fld
mov
cs
bound
hlt
stos
adc
das
push
dec
popf
in
pop
xor
inc
sub
adc
xchg
push
aad
jno
ins
sub
int
pop
int
inc
xor
fstp
cmc
sub
and
pusha
ror
mov
ret
bound
out
into
mov
sbb
stos
push
js
das
addr16
or
mov
cwde
fistp
mov
add
jne
and
lock
adc
xor
xchg
dec
jl
or
adc
pop
mov
add
mov
mov
push
int3
cli
outs
xchg
inc
cmp
(bad)
cmp
out
and
pushf
cld
jg
sbb
cmps
or
hlt
sahf
js
nop
push
push
adc
jnp
inc
bound
sbb
push
push
mov
sub
push
mov
sbb
in
push
dec
add
les
push
pop
pop
aas
mov
mov
in
shl
iret
sub
leave
aad
inc
mov
jmp
or
mov
inc
cmps
jb
into
mov
je
mov
mov
test
pusha
cmps
jnp
sub
jno
mov
ins
lods
data16
out
sub
sbb
add
mov
imul
and
cmp
ss
push
cs
daa
shl
add
cs
xchg
cmps
mov
xlat
dec
es
inc
not
jecxz
cs
cld
aam
ficom
add
sbb
jae
add
test
out
lods
mov
lods
addr16
adc
(bad)
xlat
out
jge
xor
mov
adc
bound
mov
bound
sub
xor
fstp
cdq
add
aaa
sub
lock
je
xor
dec
scas
in
push
adc
mul
push
add
xchg
cmp
cmp
mov
jle
mov
and
jecxz
ret
sahf
and
sar
jb
sete
neg
sbb
les
shr
inc
loop
mov
sbb
outs
cmp
xor
iret
cli
fsubr
add
jecxz
cmps
add
movs
mov
sbb
pop
jecxz
idiv
push
scas
pop
ss
imul
ins
or
or
or
stc
lds
mov
(bad)
jecxz
cdq
ret
in
xchg
ret
loop
mov
cmp
and
out
mov
dec
popf
inc
add
dec
push
iret
pop
dec
cli
popa
rcl
arpl
stc
mov
mov
pop
inc
and
xchg
bound
push
mov
cmps
mov
mov
pop
mov
mov
cwde
or
push
push
or
adc
stos
mov
retf
mov
(bad)
push
sub
jnp
push
pop
pop
data16
cmp
test
mul
cld
sub
jnp
push
push
retf
jge
xchg
iret
or
inc
add
pop
jnp
scas
ins
(bad)
scas
hlt
mov
rcr
test
fidiv
out
mov
mov
not
or
lahf
ins
jnp
xor
int
addr16
push
in
pop
ins
jnp
movs
push
(bad)
in
outs
and
mov
and
int
adc
lods
dec
pop
ror
sbb
rcl
mov
mov
mov
pop
push
dec
xchg
repnz
int
add
shr
jmp
cmp
mov
mov
xchg
jne
loopne
aam
std
dec
dec
push
retf
out
or
rol
or
xchg
mov
inc
(bad)
cmc
shl
sub
jge
shl
xchg
pop
sub
ins
pusha
and
leave
dec
outs
scas
mov
lea
xor
cmps
cwde
inc
inc
lahf
pusha
lods
sbb
pop
in
lock
mov
mov
push
jmp
mov
in
out
add
sbb
jg
xor
out
and
add
or
aad
mov
hlt
call
cmps
xor
loope
or
adc
int
mov
lock
repnz
int3
xchg
lock
arpl
in
jns
movs
aad
fcmovnbe
(bad)
in
loopne
xor
into
cmc
mov
push
inc
imul
xchg
sbb
outs
shr
mov
jle
jecxz
stos
fldenv
push
xchg
clc
push
add
test
sub
stos
jp
sbb
mov
adc
outs
xor
mov
or
xor
ss
pop
jmp
adc
in
arpl
ds
retf
jo
xchg
outs
lock
push
sub
data16
xchg
outs
xor
mov
(bad)
ffreep
fwait
call
sub
cmp
xchg
add
std
inc
xor
fld
stos
xchg
jo
xchg
mov
push
aas
adc
int
stos
mov
cld
jne
pusha
stos
fcmovnu
push
jle
scas
cmp
lea
push
lahf
movs
push
pop
ss
pop
xchg
inc
cli
xor
push
mov
or
sub
call
lods
cmp
iret
jns
jmp
daa
dec
out
pop
jno
leave
pop
inc
mov
icebp
sbb
inc
in
rcl
add
inc
dec
jbe
loop
out
pop
mov
(bad)
rcl
add
rcl
mov
xor
iret
cmp
loope
les
and
vshufps
imul
pop
xchg
std
inc
cmps
adc
cwde
out
inc
(bad)
jg
lock
inc
push
lock
outs
adc
mov
pop
jbe
inc
rcl
mov
sbb
into
lea
(bad)
and
jnp
mov
stc
inc
xor
sahf
jnp
adc
pop
cmps
dec
mov
and
and
mov
icebp
sub
push
inc
pop
loopne
cmp
push
xor
test
adc
shl
mov
ret
(bad)
sti
mov
mov
push
scas
loop
jecxz
sub
cs
add
outs
fwait
out
pop
mov
ins
fmul
or
movs
mov
sub
sbb
inc
xchg
push
(bad)
jp
mov
or
pop
leave
jns
rcl
dec
cli
fidiv
imul
xor
imul
xor
mov
les
pop
sub
loopne
fdivp
push
test
fisttp
pop
out
fnsave
push
fldenv
out
in
xor
in
aam
repz
xchg
jmp
xchg
push
xchg
repz
test
push
mov
adc
(bad)
xor
jl
push
lock
dec
mov
mov
int
adc
popa
xchg
out
mov
addr16
test
scas
movs
push
sbb
rcr
cmp
fldenv
ins
dec
(bad)
(bad)
clc
mov
inc
xor
or
int3
mov
cmp
cdq
and
mov
mov
push
cmps
push
lds
add
pop
fwait
in
dec
jns
inc
xchg
push
or
xchg
aam
adc
pop
sahf
shl
inc
push
test
add
fwait
addr16
xchg
aad
(bad)
(bad)
idiv
cmp
push
(bad)
cmp
jg
xchg
mov
sub
bound
stos
xchg
push
pushf
popa
sub
or
das
jo
out
call
push
mov
cmp
std
push
cld
aad
sub
data16
and
mov
mov
jle
adc
pop
aas
jno
and
js
xchg
mov
gs
minps
hlt
test
cmp
dec
pop
fcomp
pop
xor
add
addr16
test
add
stos
mov
cmp
es
xchg
stc
lods
sbb
jmp
inc
pop
push
ret
imul
jno
add
ins
sbb
shl
sbb
add
int
push
jmp
mov
ret
cwde
stc
mov
scas
pop
cmp
clc
cmp
sub
test
inc
cmps
in
adc
pop
mov
inc
leave
fldenv
and
mov
pop
jmp
lods
mov
or
loope
jl
xor
pop
sub
xchg
bound
sub
std
xchg
xor
retf
mov
test
add
jle
adc
xchg
push
cmp
inc
leave
xchg
repnz
mov
jp
shr
mov
cmp
ss
pop
push
dec
mov
inc
imul
data16
mov
sti
xlat
call
pop
aaa
cmc
jge
shr
jl
jns
loope
in
mov
lahf
inc
xor
lods
aas
loope
pop
aad
test
(bad)
jno
xor
cmc
loope
out
iret
lds
icebp
xor
stos
dec
and
adc
hlt
fsubr
adc
cmp
test
adc
scas
call
inc
(bad)
mov
test
outs
stc
rcr
pop
jmp
dec
pop
dec
add
xchg
les
add
leave
fmul
xor
add
nop
in
pop
inc
cmp
mov
mov
inc
add
mov
push
sbb
inc
out
or
push
aad
pop
jle
pop
mov
mov
jo
cdq
xor
lods
mov
jo
rol
jmp
rcl
sub
shl
cmp
dec
cmp
or
adc
cmps
and
call
pop
dec
mov
pop
mov
xchg
jl
cmp
sub
(bad)
push
sub
mov
inc
mov
cmp
mov
adc
scas
and
xlat
cmp
mov
xlat
sbb
(bad)
jmp
mov
xlat
mov
pushf
mov
xlat
pop
fwait
dec
xor
xchg
cmp
icebp
push
outs
jmp
xchg
add
(bad)
push
aam
pop
dec
mov
loopne
inc
add
pop
jae
jae
push
repnz
iret
jmp
jo
out
sub
enter
(bad)
adc
xor
pop
fdivr
or
std
jo
rcl
sti
sub
bnd
push
or
sbb
adc
mov
sub
ror
fnstcw
aam
sbb
movs
(bad)
call
cdq
test
test
js
dec
inc
dec
or
cmp
mov
daa
add
mov
cwde
push
sar
cwde
fisub
arpl
inc
loop
int
je
adc
adc
in
and
xchg
cmp
in
jmp
xor
push
push
clc
es
in
outs
mov
loopne
xchg
inc
inc
or
mov
adc
shr
repnz
mov
jmp
xchg
mov
jbe
imul
cmp
xchg
cmp
xor
sti
push
mov
test
leave
add
xchg
stos
hlt
(bad)
lds
mov
inc
mov
daa
sub
pop
sub
sti
inc
push
iret
in
xchg
and
cmps
mov
jmp
(bad)
sbb
out
push
mov
ret
test
inc
dec
in
lods
mov
imul
xrelease
sbb
retf
pop
sbb
fstp
icebp
xchg
push
pop
xchg
sub
arpl
xchg
pop
leave
cwde
xchg
retf
ret
inc
cmps
mov
sub
(bad)
cwde
xor
mov
pusha
retf
fnstenv
pop
or
outs
jmp
cmp
pop
fcom
xchg
mov
into
fcmovnbe
mov
(bad)
sub
or
ds
mov
and
dec
dec
repz
outs
out
mov
std
scas
or
clc
jmp
fldenv
xchg
jecxz
jb
cmp
inc
comiss
adc
mov
cld
xchg
xchg
xchg
inc
jbe
cmp
push
mov
je
xor
fwait
das
rcl
pop
movs
movs
sbb
sbb
mov
mov
push
xor
scas
movs
stos
(bad)
out
in
enter
cli
stos
push
gs
mov
dec
fimul
daa
rol
add
call
cmp
mov
xchg
lds
outs
lods
retf
mov
popf
(bad)
fst
mov
cdq
retf
xchg
jae
add
fistp
or
inc
xchg
push
fdiv
add
xchg
in
fxch
and
adc
mov
sbb
dec
xor
(bad)
loopne
cmp
lock
adc
mov
pop
repnz
inc
shr
inc
imul
cld
call
bound
sbb
icebp
mov
add
mov
mov
fs
and
je
xor
fwait
loope
push
mov
or
(bad)
cmp
inc
mov
sub
ja
leave
push
cmp
sbb
imul
mov
adc
add
and
mov
cmp
and
cmp
mov
push
arpl
adc
xor
inc
cmp
cmp
add
pop
popa
mov
outs
cmc
xor
xchg
(bad)
iret
cmp
mov
pusha
nop
and
push
sbb
leave
test
adc
lahf
ins
mov
pop
or
stos
xchg
push
ds
sbb
cmp
(bad)
xor
mov
jl
cmc
mov
mov
push
cmc
mov
push
push
fsub
pop
movs
sbb
mov
or
popf
push
fidiv
push
push
mov
push
test
loop
js
icebp
sar
and
das
pop
out
pop
repnz
popf
cmps
jb
xor
outs
out
jmp
cmp
std
jne
and
push
cmp
jp
loopne
push
or
bound
jecxz
mov
loop
loope
add
jo
movs
sbb
xchg
jmp
sbb
mul
xchg
in
adc
add
js
imul
lock
jae
ds
xchg
loopne
or
stos
add
xchg
sub
xor
mov
add
add
pop
in
loop
daa
mov
push
(bad)
fmul
out
into
dec
jne
adc
xchg
adc
aad
jg
inc
push
jne
aad
stos
cs
ror
or
hlt
adc
mov
adc
dec
inc
lods
aaa
in
cmp
adc
in
ret
enter
les
outs
mov
ror
jae
xor
cmp
ss
xchg
(bad)
retf
imul
outs
fs
out
mov
mov
cs
and
jae
jge
push
push
sbb
arpl
add
xchg
cmp
pop
(bad)
repz
jp
data16
add
xlat
(bad)
pop
jnp
sub
push
add
(bad)
push
test
leave
dec
xlat
mov
xor
mov
icebp
add
mov
les
jae
cmps
inc
cmp
sbb
(bad)
(bad)
mov
cld
and
dec
inc
dec
push
pop
fild
call
cmc
jmp
bound
enter
xchg
mov
jo
sbb
sub
mov
xor
sahf
pop
mov
inc
cmps
cmps
xchg
xor
sub
es
pop
sahf
and
and
inc
inc
xor
pop
mov
in
ss
(bad)
cmp
movs
lods
(bad)
xlat
aas
adc
pop
cli
fidiv
and
movs
add
sub
aaa
cmps
arpl
loope
lods
add
(bad)
es
imul
(bad)
jmp
clc
addr16
dec
out
inc
push
inc
and
mov
cmp
fs
push
jne
test
loope
cld
push
aad
xor
je
scas
push
in
push
lods
addr16
xor
in
nop
out
fist
push
sti
sbb
xchg
dec
iret
sahf
cmps
or
mov
jns
lods
inc
ins
add
loopne
jmp
ins
add
push
clc
sub
int
sbb
iret
cmp
push
ds
jns
pop
xchg
arpl
sbb
ins
fdivr
pop
mov
das
icebp
jnp
shl
push
mov
in
xor
pop
add
push
dec
inc
imul
add
pop
or
cmps
xchg
outs
data16
or
xor
add
dec
pop
jne
shr
lods
push
scas
loop
mov
cmp
dec
(bad)
mov
pop
(bad)
out
jge
xchg
outs
sub
aas
dec
bnd
xchg
aad
mov
inc
cmp
cwde
outs
jo
fnstsw
and
jl
retf
mov
pop
stc
aaa
cdq
je
cmp
mov
in
adc
jmp
ss
mov
into
scas
cmp
lea
aam
or
push
sub
cmp
pop
push
push
adc
xchg
dec
mov
mul
inc
mov
mov
mov
xchg
mov
ds
enter
iret
push
mov
xor
mov
bound
jl
call
ins
ret
ja
(bad)
and
into
fisttp
pop
jns
das
loop
push
add
sub
or
rcl
rol
adc
rcr
call
neg
jno
sar
into
xchg
lods
dec
cmovb
xchg
xor
mov
or
pop
repnz
outs
jbe
mov
inc
push
test
xchg
jb
cdq
xor
test
clc
stos
push
(bad)
fwait
xor
fistp
jbe
inc
pop
add
lahf
jecxz
stos
or
ds
pop
jecxz
mov
pop
(bad)
push
jae
js
in
push
adc
movs
fisttp
cmp
push
xor
imul
mov
mov
(bad)
scas
mov
cmp
cmp
les
sar
mov
dec
mov
cld
push
mov
dec
cli
and
out
mov
stos
adc
mov
push
xor
mov
push
(bad)
dec
push
gs
cmp
add
pop
cmp
or
cmp
in
pusha
pop
xor
ds
das
dec
jno
lock
int3
cdq
sub
stc
stc
popf
cwde
sbb
sub
add
dec
push
int3
inc
xchg
jge
sub
jl
dec
or
(bad)
xchg
inc
fmul
mov
mov
mov
mov
jle
xchg
jb
jecxz
jmp
cmp
dec
xchg
push
loope
cwde
fadd
inc
dec
mov
call
push
cmp
ret
cmp
adc
push
mov
push
loop
ds
cmp
fild
pop
jle
jae
ds
and
(bad)
sbb
nop
or
push
dec
lea
pusha
aam
xor
(bad)
jno
mov
inc
inc
inc
add
add
inc
out
adc
int
iret
ja
xchg
cwde
ja
daa
pushf
cmp
or
add
(bad)
das
inc
mov
call
enter
popf
retf
push
(bad)
aad
sbb
adc
(bad)
sbb
cmps
loop
sbb
dec
out
aam
fist
pop
nop
bound
cmp
shl
add
out
bound
rol
push
lods
ror
xchg
sub
jmp
in
out
movs
mov
outs
mov
and
fnstsw
enter
xor
mov
retf
(bad)
sbb
dec
mov
clc
ins
outs
mov
push
sbb
or
fcmove
push
mov
xlat
ins
mov
hlt
push
jne
rcl
push
mov
sub
hlt
and
pop
int
sub
push
xor
lock
jle
test
pop
xchg
ins
lock
xor
xor
dec
push
mov
dec
pushf
inc
inc
jnp
mov
movs
pop
jp
(bad)
mov
aad
lods
adc
out
push
mov
cmp
fnstcw
push
in
ins
mov
and
xchg
pop
shr
pop
lds
imul
test
jp
popa
outs
out
pop
mov
cmp
mov
sub
mov
mov
lods
jmp
(bad)
cmc
stos
(bad)
fwait
xlat
cmp
mov
arpl
push
or
imul
mov
xor
call
ret
inc
mov
mov
xchg
shl
cmp
adc
dec
jg
push
jl
fadd
mov
ds
pop
xchg
mov
imul
or
cmp
inc
jmp
mov
cmp
cmps
add
jae
sub
sar
fdivp
popf
mov
xchg
mov
pop
in
cdq
jb
jmp
aad
pop
mov
fldcw
push
gs
pop
mov
sub
pop
ret
pop
push
pop
jns
or
clc
loopne
xchg
xchg
fs
sbb
(bad)
sti
movs
mov
call
mov
cld
ins
test
push
cld
(bad)
iret
inc
mov
sahf
iret
add
popf
pusha
adc
xlat
jp
jne
pop
(bad)
pushf
rcl
add
push
(bad)
add
cmp
or
and
sub
lods
inc
mov
es
and
lock
jmp
mov
cmp
lods
je
and
stos
or
mov
iret
add
cmp
ins
add
dec
in
test
int
inc
cmp
cmp
rol
adc
or
fst
adc
mov
pusha
out
fwait
retf
cmps
ficom
stos
pop
not
icebp
mov
ins
and
mov
shr
add
ret
sahf
xor
jle
jb
aaa
jnp
sub
out
imul
mov
pop
mov
push
ret
or
fstp
lahf
or
mov
xchg
daa
call
mov
add
mov
jmp
dec
aas
cmc
mul
lahf
adc
dec
dec
add
mov
addr16
gs
mov
xor
and
pop
adc
jno
(bad)
jl
sub
sub
inc
stos
xor
sub
cli
push
into
sbb
arpl
push
lea
mov
cmp
test
pop
cmp
add
sub
sbb
clc
xchg
(bad)
shl
mov
mov
sbb
jae
imul
sbb
push
(bad)
adc
clc
loope
and
pusha
xor
das
std
mov
sub
(bad)
cmp
mov
(bad)
add
dec
inc
movs
push
ins
rcl
xchg
retf
mov
dec
add
sub
xor
mov
outs
adc
fmulp
jl
loopne
test
xchg
cli
xchg
or
cmp
pop
sar
sbb
or
push
(bad)
or
or
ret
retf
sbb
dec
jbe
neg
imul
and
movs
leave
pop
mov
xor
push
add
sbb
xor
outs
mov
in
xchg
adc
mov
sar
ds
sbb
mov
test
adc
leave
jnp
jmp
dec
dec
iret
pop
jnp
pop
push
cmc
push
pop
js
add
scas
rol
scas
push
mov
or
ror
inc
or
test
sub
sbb
or
inc
xchg
imul
xor
xchg
popf
or
hlt
mov
ror
sar
mov
(bad)
and
out
test
fstp
jl
xlat
lods
jge
cmp
dec
mov
daa
adc
in
push
out
dec
fbstp
call
inc
lods
or
or
test
inc
sub
call
sub
push
add
loop
and
xor
ret
(bad)
jno
and
gs
ins
outs
xor
out
test
fild
test
jno
mov
pop
test
push
into
xchg
js
stos
mov
xchg
sub
mov
push
push
iret
call
enter
ja
ins
dec
pop
adc
test
mov
jge
push
(bad)
cdq
mov
test
iret
mov
dec
push
mov
jno
rcl
mov
jne
in
shl
and
(bad)
inc
clc
mov
cli
adc
ja
xor
or
sti
sub
lea
jbe
cmp
jne
nop
aam
cmc
loope
popa
movs
xor
xchg
in
mov
mov
mov
cmps
adc
mov
mov
push
ja
nop
jbe
sub
xlat
adc
pusha
xchg
fistp
add
inc
mov
mov
add
xchg
mov
pop
adc
rol
xor
sub
push
test
push
push
pop
neg
pop
fisubr
jecxz
call
jp
fwait
and
(bad)
bound
jmp
test
arpl
and
adc
(bad)
repnz
dec
jle
fadd
sbb
imul
cmp
or
hlt
in
xchg
cmp
push
sub
push
mov
call
add
inc
leave
in
mov
add
sti
push
popa
lahf
lods
bound
(bad)
aam
jae
fisub
retf
ficomp
pop
lock
jecxz
jno
sbb
je
inc
xor
imul
outs
cs
adc
ds
sbb
pop
js
clc
adc
jmp
xor
scas
ret
push
shl
mov
dec
and
out
fwait
or
cmp
mov
or
add
push
pop
inc
retf
sbb
and
bound
pop
xlat
fs
retf
movs
fs
iret
dec
pop
mov
int3
or
mov
xchg
jp
outs
pop
(bad)
in
shr
lahf
pop
add
xchg
sub
sub
mov
pop
call
pop
(bad)
push
cli
mov
cmps
rol
mov
dec
addr16
xor
jb
push
push
sbb
mov
adc
retf
xchg
into
sbb
(bad)
jp
or
mov
bound
xor
sti
daa
adc
das
push
mov
adc
jb
into
add
es
fistp
push
push
mov
adc
push
mov
inc
pop
clc
mov
pop
push
add
inc
mov
add
cdq
xchg
push
pop
fist
movs
mov
dec
xchg
jbe
das
cmp
push
js
jns
lea
sub
test
jne
scas
mov
dec
xchg
shl
dec
and
jg
popa
mov
xor
add
push
lahf
outs
or
outs
mov
adc
xchg
jae
xor
and
pop
push
dec
dec
rol
or
or
test
ins
cmp
inc
cs
scas
aad
repnz
xchg
or
sub
retf
out
jl
inc
xchg
rcl
call
ret
cmp
fst
add
mov
mov
mov
(bad)
div
lea
jae
add
cmc
stos
leave
test
sbb
push
cmps
cmp
xchg
push
call
sub
movs
mov
cmc
stos
xor
push
ror
sub
rol
jmp
lahf
add
out
sar
mov
leave
dec
mov
(bad)
fcomp
(bad)
(bad)
out
push
lea
scas
movs
movs
dec
cmp
cmp
repnz
cs
jbe
(bad)
out
fs
in
cli
cwde
push
mov
out
pop
mov
push
sub
sub
xchg
imul
popw
imul
xor
pop
ins
add
shl
retf
mov
in
sub
mov
cmps
into
push
jl
bound
enter
outs
(bad)
call
je
shl
(bad)
adc
mov
repnz
inc
push
mov
test
cmp
sub
leave
xor
adc
int
sub
xchg
jne
das
adc
xlat
mov
jmp
add
test
xchg
pop
repz
push
enter
enter
fist
ret
mov
jmp
daa
scas
fisub
sub
dec
jge
(bad)
retf
mov
(bad)
jmp
push
xor
adc
(bad)
mov
scas
inc
cmps
ficom
(bad)
hlt
xchg
and
add
cmp
shl
adc
aaa
scas
(bad)
sub
pop
in
(bad)
call
cdq
sbb
lea
mov
(bad)
fld
sub
daa
xor
out
xor
or
dec
pop
mov
mov
add
cmc
movs
jnp
push
mov
cmps
sbb
and
or
ror
stc
dec
in
(bad)
push
ror
mov
sbb
arpl
dec
and
xor
sub
sub
xchg
sti
ss
out
call
xchg
mov
mov
or
std
cmps
mov
mov
aad
mov
scas
xor
sbb
movs
mov
out
sbb
(bad)
fild
ret
hlt
aas
scas
cmps
mov
lods
sti
adc
cmc
and
adc
in
inc
jmp
clc
addr16
mov
fisub
retf
inc
xchg
or
fild
out
ins
gs
pop
sub
xchg
pop
idiv
cdq
xor
dec
jge
add
(bad)
cli
outs
in
cld
or
xchg
push
or
inc
cmp
fisttp
push
fisttp
popa
cmps
stc
movs
adc
test
lahf
test
jbe
inc
int
cmp
add
adc
xchg
lock
jge
ds
icebp
mov
lahf
das
fwait
cmp
pop
cmps
or
mov
xchg
inc
mov
cdq
mov
lahf
jns
mov
mov
mov
(bad)
mov
push
retf
jmp
(bad)
adc
test
retf
push
mov
or
jae
inc
(bad)
and
adc
sub
sub
mov
nop
lea
mov
adc
sub
outs
xchg
jnp
ror
retf
xchg
and
pop
fmul
inc
mov
sbb
inc
mov
push
pop
call
mov
test
retf
pop
inc
push
mov
adc
aad
mov
pop
cld
mov
push
jmp
cmp
jno
mov
mov
pop
je
cmp
add
xor
cmp
(bad)
jns
pop
enter
std
jb
add
outs
fnstsw
lods
test
mov
push
jmp
sbb
repz
fcom
jle
enter
mov
sbb
push
addr16
lods
cmp
push
sub
add
mov
cmp
jg
sbb
push
ins
sbb
dec
xor
dec
or
ss
xchg
push
mov
idiv
mov
pusha
add
mov
and
pop
loopne
sub
out
das
out
push
das
pop
mov
dec
push
sbb
out
inc
dec
rol
sub
mov
push
cli
aas
cmps
in
out
dec
shl
jmp
dec
out
sub
jg
mov
je
ret
and
clc
push
aad
dec
xchg
jo
jmp
add
or
pop
in
rcr
int3
push
dec
aas
test
outs
push
int
in
cmps
push
adc
out
xchg
gs
pop
xchg
sub
(bad)
mov
pop
mov
inc
sub
pop
leave
iret
loop
push
lods
xchg
and
pop
rcl
push
xchg
sub
xchg
stos
push
push
jbe
pop
sub
mov
or
pop
dec
mov
in
mov
sbb
mov
jae
pop
sbb
mov
add
xor
adc
ins
clc
mov
fcmove
mov
fwait
xchg
jge
mov
jp
jbe
imul
push
retf
(bad)
inc
mov
in
jp
cmp
retf
loopne
fnstenv
pop
add
add
and
(bad)
dec
retf
(bad)
cmp
and
fnstsw
sti
rol
dec
sahf
cmps
mov
or
add
into
pop
in
mov
or
popa
rcl
xor
push
clc
test
add
loopne
or
stos
(bad)
jno
cwde
fstp
mov
pop
inc
mov
xor
jmp
xchg
scas
je
call
mov
mov
and
inc
std
inc
loopne
clc
jnp
ss
inc
cmp
inc
popf
mov
pop
out
inc
lods
clc
xor
sub
add
dec
push
push
test
movzx
pop
add
jno
aaa
mov
mov
jp
mov
rcl
fwait
jb
fnstsw
loop
loop
outs
fld
sti
in
adc
leave
mov
and
cld
jecxz
push
adc
jecxz
sbb
adc
inc
stc
pop
pop
lock
cli
pop
aaa
inc
cmp
jae
sysret
and
lods
sub
sbb
fnsave
daa
jl
xor
arpl
aaa
shr
sbb
addr16
imul
shl
jmp
les
fdivr
loop
cmp
fs
xchg
shr
sub
add
sar
add
inc
mov
pop
dec
lds
dec
add
mov
aam
xchg
push
xor
pusha
sbb
sbb
call
fsub
inc
adc
xor
aam
adc
(bad)
inc
or
mov
lods
leave
mov
loop
jno
leave
and
mov
aas
or
mov
not
xchg
ds
and
movs
fdivrp
fwait
in
mov
and
mov
jns
sar
cmp
add
gs
ja
inc
sbb
mov
loope
adc
cmp
clc
sub
inc
stos
pop
xchg
sub
and
push
and
ins
ins
outs
fwait
jns
jnp
cmc
mov
movs
sbb
push
mov
arpl
sub
inc
popf
sub
jmp
and
push
mov
test
mov
jns
daa
mov
mov
xchg
loopne
xor
push
cmp
inc
pop
(bad)
fild
adc
inc
scas
adc
xchg
loope
mov
lea
and
or
inc
cmp
sbb
or
js
and
clc
movs
(bad)
cld
enter
ins
cmps
rcl
xchg
jno
popa
stc
inc
hlt
ret
ret
ret
and
inc
data16
xchg
fs
inc
scas
jns
adc
xlat
xchg
out
jne
sub
push
xchg
push
xlat
sbb
dec
mov
mov
and
ret
pop
mov
cmp
ret
sbb
movs
cdq
inc
jne
xchg
xor
outs
retf
jg
mov
imul
push
add
repz
cmp
retf
lods
mov
lock
sub
jle
xchg
push
jae
fnstcw
repz
push
pop
cmp
adc
sub
jno
in
data16
push
inc
inc
xor
mov
mov
or
xchg
retf
test
and
out
lock
adc
xchg
add
inc
clc
sbb
jp
(bad)
add
ds
mov
pop
pop
or
ja
lds
iret
sub
fcomp
and
mov
mov
adc
mov
inc
pop
(bad)
jmp
movs
div
and
add
cmp
loopne
mov
cld
and
inc
sub
jg
stos
jmp
add
cwde
pop
arpl
dec
in
mov
inc
frstor
scas
mov
sbb
xchg
retf
jle
xchg
jecxz
xor
int3
add
sbb
daa
outs
shl
push
outs
jecxz
fstp
push
mov
(bad)
pop
jae
and
xor
push
lahf
inc
xchg
cmps
out
loope
cmps
ret
inc
pop
inc
sub
and
fsub
leave
lods
cs
call
ins
stos
test
les
rcl
sub
cmp
cmp
adc
(bad)
sbb
sbb
dec
lea
out
and
ret
xchg
aas
nop
xchg
sar
inc
push
xchg
retf
pop
pop
js
fstp
cmc
mov
out
push
and
je
ins
and
pop
fs
in
rep
test
cmp
sub
in
rol
pop
jbe
jae
lahf
sbb
cmp
mov
hlt
and
sbb
adc
rcr
xchg
test
xchg
ss
push
fidiv
imul
jns
test
test
push
sub
xchg
repnz
cdq
and
stos
int
dec
not
pop
pop
sbb
scas
out
aam
rcl
mov
fidiv
push
stc
cwde
push
addr16
std
js
fistp
or
js
aam
inc
repnz
inc
fmulp
xchg
cmp
nop
ret
popf
dec
inc
out
mov
aad
bound
cld
test
popa
push
mov
jecxz
shr
dec
mov
ja
and
std
push
repnz
xor
xchg
shl
cmp
in
call
(bad)
iret
dec
jns
sbb
jmp
ret
mov
test
pop
pop
(bad)
(bad)
mov
dec
add
adc
push
inc
test
xlat
mov
push
push
call
jge
jge
add
inc
jns
xor
jae
and
mov
dec
jbe
mov
stos
movs
imul
fnstsw
sbb
xchg
out
jle
jo
pop
int3
nop
sbb
out
and
add
out
push
add
jno
push
cmp
mov
inc
mov
jg
addr16
test
aaa
daa
ins
sub
inc
xchg
xor
and
dec
out
xlat
mov
sub
or
dec
and
dec
cmps
mov
outs
loope
add
cmps
xchg
add
xchg
xchg
cmp
inc
dec
sbb
std
or
dec
fistp
in
jae
lds
inc
xchg
fdivp
rol
mov
inc
ret
pop
sbb
sub
iret
xchg
fld
xor
in
(bad)
jle
imul
fistp
mov
dec
inc
xor
xchg
adc
and
in
mov
add
clc
mov
nop
leave
fs
gs
pusha
ins
(bad)
jo
adc
push
cli
stos
cmp
mov
push
mov
lahf
inc
das
out
or
(bad)
xor
stos
fwait
enter
std
fmul
or
or
xor
pop
iret
inc
cmp
ss
mov
pop
add
sub
pop
dec
test
in
jmp
jg
ret
sti
ror
jo
out
(bad)
cwde
(bad)
mov
aas
jbe
jbe
bound
call
xchg
nop
call
pop
jb
rcl
ins
and
jle
daa
lods
mov
mov
mov
xchg
es
or
pop
push
push
and
cmp
sti
mov
das
push
cmc
adc
fcomp
dec
aad
adc
test
push
push
mov
(bad)
mov
stc
lods
push
loop
jp
cmps
adc
vmread
inc
imul
das
mov
jl
jl
dec
ins
xor
sbb
scas
push
hlt
cmp
cmp
push
js
sub
xor
in
xor
aas
sub
mov
xor
pop
pop
repz
imul
cli
xchg
adc
xor
fild
dec
mov
mov
xor
fnstsw
add
mov
out
test
retf
shr
ror
mov
mov
es
adc
mov
mov
add
sub
push
mov
ss
cmp
mov
push
out
mov
cmp
dec
inc
int
dec
inc
cdq
push
mov
xor
icebp
cmp
int
mov
loopne
push
mov
sub
mov
or
mov
gs
xor
dec
ss
fs
pop
mov
jmp
adc
in
rcl
xchg
cmp
mov
lea
fist
inc
cmp
push
hlt
mov
xchg
leave
test
fnstenv
or
(bad)
jmp
or
dec
xor
lea
jmp
in
adc
mov
push
push
jg
into
cmps
stos
cmp
dec
or
lock
mov
ret
int
cmps
call
xchg
scas
sub
mov
jmp
sbb
dec
ror
or
cmc
mov
mov
in
stos
(bad)
ret
inc
fimul
mov
push
addr16
fidivr
xchg
cmp
pushf
pop
cdq
add
xor
sbb
jg
xchg
jmp
dec
inc
dec
rol
addr16
xor
push
or
mov
test
adc
jno
sbb
pop
adc
push
test
mov
add
cmc
cmp
out
xchg
and
out
stc
sti
or
jg
jo
fwait
xor
jmp
icebp
jnp
xor
adc
cmp
lods
sbb
cmp
lods
xchg
lahf
xchg
call
dec
imul
test
xchg
int
in
shl
fimul
push
sar
ins
adc
cld
rcr
ss
push
lock
call
std
jne
aaa
jg
(bad)
fisubr
outs
shl
sbb
stc
jae
ds
sbb
popa
pusha
std
lea
lods
call
jns
arpl
add
ins
imul
sbb
dec
jp
pop
jno
retf
lahf
popa
fstp
and
test
sbb
outs
inc
(bad)
inc
add
iret
cmp
loopne
iret
jecxz
sub
mov
sbb
jecxz
cdq
call
xor
cdq
jo
mov
ret
push
and
mov
push
mov
sbb
js
lods
ds
jnp
jne
imul
pop
jle
cmp
push
clc
data16
bound
pop
(bad)
pop
jo
sbb
xchg
sbb
idiv
cmps
rcl
(bad)
call
adc
push
jg
or
pop
rcr
ror
xor
adc
(bad)
retf
mov
push
pop
cmp
pusha
xor
out
pop
or
and
jecxz
loope
pop
jbe
loop
popf
std
outs
enter
lods
fs
xchg
push
xor
pop
loopne
xchg
jo
cmp
mov
mov
adc
cmp
xchg
mov
call
icebp
sbb
ret
imul
lods
dec
cwde
imul
push
jp
mov
rcr
sub
idiv
fstp
jecxz
mov
mov
mov
add
mov
outs
and
adc
popa
bound
test
es
in
xor
and
sti
jge
and
imul
cld
icebp
mov
cmp
mov
or
shr
mov
push
sub
mov
and
sub
mov
jmp
mov
lahf
mov
jo
sbb
(bad)
cmp
pop
lods
popa
jmp
inc
jo
outs
pushf
jle
fdivr
test
pop
jle
fwait
shl
inc
loope
fst
dec
in
pushf
je
mov
shl
pop
cwde
enter
xchg
xchg
bound
es
imul
jp
or
es
(bad)
je
sbb
cmps
cmp
bound
(bad)
in
int
adc
iret
call
stos
test
xor
dec
cld
out
ret
add
movs
and
outs
or
sti
div
add
retf
out
push
scas
jmp
sub
fdiv
out
mov
xor
push
adc
cmps
stos
and
mov
cmps
scas
jle
in
mov
sub
dec
jg
pop
or
jmp
sub
dec
je
jmp
popa
outs
pop
mov
dec
mov
leave
sbb
hlt
lock
mov
ret
nop
mov
inc
into
std
out
dec
call
xchg
in
sbb
or
les
pop
and
or
jae
push
add
xor
nop
or
outs
add
fdivrp
inc
bound
pop
mov
xor
cmp
hlt
mov
mov
mov
fst
mov
pop
push
ror
aaa
ins
add
jg
adc
mov
adc
or
gs
out
push
int
mov
pop
jns
and
(bad)
loopne
cmc
cmp
ja
jns
pmullw
inc
ds
xchg
sub
mov
jmp
ins
adc
cmp
pop
ror
mov
stos
adc
mov
(bad)
mov
push
mov
shr
or
ss
ss
retf
rol
ret
jecxz
outs
fstp
cmc
pop
xchg
iret
inc
and
cmp
cmps
fsub
and
mov
or
xor
iret
add
iret
loope
bound
ret
cmps
or
movs
ss
rcr
jne
mov
sbb
inc
pusha
int3
outs
je
jo
cs
cdq
push
scas
popf
lea
mov
loop
add
movs
and
add
jae
dec
dec
ins
pushf
pop
leave
ret
or
xchg
push
inc
mov
(bad)
lods
dec
stos
ror
mov
sti
sub
xor
push
dec
fs
fwait
sbb
out
mov
or
aaa
out
and
push
adc
sti
add
mov
test
sub
jbe
dec
xchg
cmps
jl
mov
push
es
movs
gs
push
div
mov
jecxz
add
mov
jmp
xor
cmc
popa
(bad)
mov
repz
push
ffree
cmp
mov
mov
dec
and
jmp
ins
scas
mov
fcmovne
pop
into
imul
cmp
popf
clc
js
cli
dec
cmp
fdivr
stos
in
push
(bad)
mov
xchg
fistp
add
mov
rol
retf
mov
mov
imul
add
mov
pop
mov
lods
jg
js
nop
jne
fwait
clc
icebp
mov
cmp
daa
(bad)
out
cmp
sbb
outs
lock
dec
xor
jmp
sbb
shl
pop
fldcw
clc
cli
xor
mov
iret
pop
retf
in
pop
adc
cdq
in
jno
in
sub
or
int3
inc
fcom
xor
leave
fwait
sub
mov
xchg
dec
cmp
mov
xchg
dec
xchg
mov
sbb
xchg
jmp
pop
sbb
jmp
sahf
nop
jmp
xchg
mov
in
pop
xchg
cmps
and
sub
js
(bad)
out
out
popa
call
out
ss
xor
sar
arpl
xchg
stc
add
inc
mov
lods
add
sub
sbb
mov
mov
fcomp
shr
cmp
sub
adc
fwait
mov
ficomp
arpl
add
jb
aam
mov
xchg
adc
movs
jg
push
or
aaa
add
mov
aas
cmp
sbb
add
inc
test
xchg
jne
adc
xchg
jnp
add
outs
rol
and
inc
movs
jbe
fistp
mov
lods
sub
push
push
sahf
jno
mov
push
sub
jp
cmp
popf
ja
sahf
dec
icebp
inc
in
xchg
dec
or
sbb
inc
sub
lahf
ins
mov
mov
fisub
in
dec
bound
(bad)
lods
rcl
jmp
cmps
sbb
fisttp
aaa
pop
mov
cs
test
jne
push
(bad)
retf
jae
mov
mov
fild
mov
aam
cmp
sti
test
lahf
xor
shl
mov
mov
inc
add
xchg
daa
scas
data16
pop
cwde
(bad)
fsubr
cmps
pop
adc
data16
lock
xchg
les
int
movs
pop
add
xor
out
mov
mov
mov
lahf
add
enter
in
jno
(bad)
stc
inc
add
loope
into
stos
adc
pop
cmp
not
dec
mov
ret
int3
stos
jno
into
(bad)
mov
(bad)
jle
lea
or
pop
push
mov
sahf
mov
inc
mov
shl
ins
dec
std
outs
jmp
jge
das
adc
sub
test
sbb
sbb
dec
shr
jne
pop
ins
mov
(bad)
daa
push
sar
loopne
pop
mov
std
(bad)
(bad)
mov
sbb
ret
ror
mov
sub
dec
xchg
arpl
mov
pop
xchg
sbb
dec
or
loopne
dec
dec
int
mov
fcomp
repz
add
mov
jbe
sub
call
(bad)
xor
sub
push
loopne
movs
jb
xchg
xor
jecxz
pop
dec
ficomp
mov
test
fmul
sbb
dec
inc
jmp
hlt
cmp
jmp
(bad)
int3
push
xor
mov
dec
adc
mov
pop
data16
push
ins
cmpxchg
xlat
jo
fdivr
lods
jne
mov
push
ret
push
cmps
adc
fwait
adc
aaa
sbb
xor
and
fcom
mov
(bad)
movs
jae
iret
loope
and
mov
jecxz
imul
ret
pop
pop
test
xchg
push
adc
aad
cmp
add
pushf
dec
mul
js
inc
call
hlt
cmp
mul
pushf
shl
mov
push
fnsave
lahf
pop
sahf
cld
jge
dec
pop
test
mov
sti
(bad)
mov
dec
les
jnp
or
sub
neg
push
mov
popa
mov
fld
daa
fiadd
movs
sar
cmp
aam
cmp
mov
rol
adc
shl
movs
fadd
movs
mov
inc
mov
mov
adc
xchg
ds
mov
mov
adc
dec
lea
es
shl
fnstcw
push
adc
xchg
mov
xchg
enter
jbe
bound
mov
and
add
test
div
or
int3
scas
cmp
scas
fnstsw
movs
test
jl
pop
lods
cmp
pushf
in
jmp
push
sub
arpl
aam
sbb
mov
rcl
push
rol
inc
adc
mov
inc
std
int3
push
jno
push
add
adc
add
iret
xchg
add
test
ss
xchg
or
loopne
sbb
in
mov
xchg
inc
inc
daa
ret
cmp
inc
addr16
cli
mov
pop
inc
movs
pop
int
and
sub
ret
nop
test
dec
ja
or
imul
jns
mov
cmp
jmp
daa
adc
xchg
adc
add
loope
(bad)
sub
shr
scas
adc
mov
rcr
inc
int
and
push
mov
adc
in
out
mov
cld
mov
lds
mov
idiv
sub
inc
mov
sub
in
test
push
jno
mov
das
mov
jg
inc
fmul
push
mov
xchg
bound
jmp
sub
jbe
cmp
lea
stos
push
sub
dec
mov
dec
hlt
ret
(bad)
cmp
xor
inc
push
or
lods
or
mov
jno
push
int3
dec
into
jno
sub
stc
stc
mov
add
(bad)
dec
je
push
and
sbb
or
movq
ins
xchg
dec
daa
imul
cmp
mov
inc
mov
xor
repnz
into
xchg
jae
cmp
rol
sbb
daa
fist
mov
retf
adc
jecxz
dec
in
test
mov
mov
mov
add
pop
cmc
xor
add
sbb
push
cs
xchg
out
xchg
adc
xchg
cmp
jbe
inc
into
(bad)
das
ficom
idiv
das
pop
cmp
fs
jge
lea
jns
and
mov
mov
mov
ja
(bad)
or
aad
and
mov
xor
(bad)
sub
pop
mov
jns
hlt
les
mov
xor
(bad)
sbb
push
inc
pop
cld
(bad)
mov
mov
cwde
(bad)
xchg
jmp
mov
inc
jmp
js
sbb
test
sbb
dec
pop
pop
mov
(bad)
dec
iret
mov
shl
in
sub
(bad)
iret
pop
outs
popw
ror
and
in
or
sub
addr16
jge
loope
add
jmp
or
mov
imul
ret
cmp
push
cmp
fbld
pop
push
hlt
sub
or
mov
rcr
cmp
cmp
add
adc
call
sbb
lea
mov
mov
(bad)
fcomp
and
push
inc
mov
mov
mov
out
jb
jnp
xor
xor
mov
adc
mov
xor
inc
arpl
in
xor
dec
sub
push
push
push
push
dec
fidivr
test
es
xchg
xchg
dec
pop
sti
jecxz
cmp
jne
mov
or
push
xchg
sahf
jbe
call
jne
adc
cmps
fisub
mov
jo
jecxz
lods
mov
ins
mov
test
adc
bnd
ins
mov
int3
xor
pusha
dec
call
cli
je
push
mov
mov
mov
jl
dec
dec
jecxz
shr
xor
int
mov
pop
or
inc
rol
inc
scas
test
or
retf
push
in
movs
mov
aas
cmp
cmps
pop
mov
push
pop
inc
sub
shl
(bad)
(bad)
dec
pop
xlat
bound
mov
xchg
(bad)
fmulp
dec
push
and
ss
(bad)
dec
imul
pusha
daa
push
sahf
in
push
mov
add
lahf
inc
into
mov
jl
push
test
pop
les
lods
jle
scas
(bad)
sar
sub
pop
push
dec
sbb
xor
mov
sub
adc
push
or
push
pop
and
push
std
xor
xchg
(bad)
mov
popa
je
dec
pop
xor
push
dec
cmp
push
xor
mov
enter
xlat
or
adc
jno
or
adc
push
add
cmps
fisubr
jle
xchg
scas
mov
call
push
imul
inc
mov
aas
jo
push
pop
in
dec
mov
pop
data16
jmp
jb
cmp
icebp
push
mov
(bad)
mov
add
push
imul
stc
sub
movs
fld
push
push
nop
xchg
sub
mov
add
push
cmps
push
mov
adc
sub
jno
loopne
push
or
call
ins
std
ret
push
inc
inc
lahf
push
or
sub
push
(bad)
pop
push
xor
or
xor
movs
hlt
aaa
xchg
jno
ins
inc
ja
lods
hlt
push
cmp
dec
pushf
push
jp
mov
jo
pop
jo
xor
sub
push
cli
xchg
xor
cmp
je
inc
cmp
or
mov
mov
and
jp
xor
jns
mov
mov
(bad)
shr
xchg
loop
call
test
loopne
iret
jae
sbb
fld
xor
dec
mul
shl
inc
in
fcom
loop
mov
pop
call
cdq
in
ror
dec
adc
add
das
push
xchg
(bad)
mov
pop
imul
in
sbb
or
and
cli
cmp
mov
push
out
dec
xor
xchg
aas
fnstcw
add
shl
inc
gs
loopne
mov
pop
iret
add
fst
dec
icebp
or
jecxz
fs
nop
cmp
fwait
iret
sub
mov
or
stos
inc
jg
les
lea
sbb
(bad)
js
cli
fnstcw
cmp
(bad)
ffree
add
into
dec
(bad)
push
sbb
leave
add
xlat
mov
push
push
retf
in
sbb
imul
movs
movs
(bad)
inc
leave
fistp
push
jbe
push
xchg
and
mov
in
lods
ja
mov
or
lds
in
(bad)
and
inc
in
push
fsubr
mov
(bad)
iret
push
cmp
(bad)
pop
movs
xchg
ss
mov
push
mov
cmp
add
jbe
mul
mov
ret
cdq
and
mov
popf
jg
into
call
xor
out
push
mov
jo
mov
xchg
test
pushf
das
sub
jecxz
enter
push
pusha
jl
dec
outs
xchg
je
popa
imul
push
xor
imul
lds
ret
inc
mov
pop
lea
adc
jmp
neg
cli
mov
in
stos
add
or
mov
shl
mov
movs
in
sub
jge
shl
or
les
repnz
pop
cmp
fisub
sub
push
push
push
xchg
out
scas
sbb
or
scas
pusha
cmps
push
adc
ds
inc
aaa
and
rol
inc
jne
int3
sub
mov
inc
es
sti
sbb
cmp
pop
pushf
clc
push
retf
out
ins
adc
fcom
push
loope
mov
ror
dec
and
pushf
mov
int
jl
adc
xchg
mov
cmp
mov
jbe
dec
add
mov
cld
or
sub
adc
sbb
jo
xchg
mov
push
in
sub
ret
xor
icebp
scas
and
pop
push
aaa
sbb
pop
xor
jge
jno
cli
fld
nop
std
xor
out
xlat
adc
and
std
je
jb
and
lods
rcl
es
test
lds
loop
push
xchg
test
test
outs
push
cmp
pop
or
and
repz
sti
mov
lods
xor
mov
movs
cwde
(bad)
jg
imul
pusha
std
sbb
pop
mov
in
in
ins
out
jnp
or
not
hlt
in
ret
xchg
jmp
lods
or
js
clc
lea
jmp
cmp
xchg
sbb
sub
ins
jp
ins
cmp
enter
aad
movs
test
rol
inc
ror
jmp
inc
aad
fst
fs
pushf
mov
jmp
push
dec
inc
jmp
arpl
or
lods
sub
lods
and
adc
sbb
imul
ds
pushf
dec
fcomip
jb
pop
add
jp
jl
and
imul
popa
mov
jle
ret
movs
ficom
and
fdiv
xchg
scas
mov
dec
ins
sahf
xlat
jne
sbb
mov
mov
out
(bad)
inc
mov
inc
ins
bound
sbb
shl
inc
int3
je
inc
sbb
retf
push
adc
mov
add
mov
mov
out
outs
sbb
ja
push
les
mov
fsubr
cmp
loop
cmps
push
daa
push
lahf
aam
cmp
mov
aas
hlt
jle
dec
aaa
(bad)
lock
(bad)
add
xor
aam
jmp
xchg
ins
dec
add
xor
dec
dec
es
mov
ds
icebp
sub
mov
jb
jns
add
pop
mov
ins
sub
pushf
test
cs
in
adc
jmp
cmp
mov
cmps
mov
jg
in
xor
loop
xor
call
xchg
cmps
arpl
scas
cwde
repnz
ret
fsub
sbb
in
push
and
push
ret
sbb
ja
sahf
out
adc
xor
xor
shl
pushf
fnclex
pusha
sbb
dec
sub
stos
leave
cmp
test
dec
rcr
int
xchg
je
movs
fild
ds
(bad)
nop
jae
(bad)
lods
shr
in
sbb
loopne
ja
mov
or
fdiv
aad
dec
or
enter
fimul
add
icebp
jp
fnsave
stc
aaa
pop
lea
cli
pusha
push
xor
xchg
dec
rcr
in
cld
nop
fwait
dec
inc
ror
shr
sbb
call
es
repz
popf
dec
cdq
enter
arpl
lahf
or
inc
retf
(bad)
pop
outs
jecxz
idiv
cmc
inc
loop
xchg
out
dec
jb
sub
push
mov
cld
mov
pop
cdq
push
scas
inc
push
and
mov
sbb
sub
add
push
mov
dec
scas
jmp
(bad)
repnz
and
mov
(bad)
ds
jbe
sub
int3
lea
pop
sti
ins
dec
mov
jge
daa
in
aas
cmp
call
xchg
pop
rol
xlat
shl
sbb
js
add
arpl
or
jnp
jne
sbb
push
pop
add
sbb
xchg
fcomp
lods
push
(bad)
add
dec
ins
scas
lahf
ret
inc
xchg
aad
inc
pop
test
jbe
das
xor
repz
mov
dec
cmps
loop
aam
dec
or
push
movs
sub
test
mov
repz
es
mov
fs
push
(bad)
xchg
sbb
dec
or
xor
out
dec
sar
and
cmp
sub
push
xor
jmp
jnp
ins
mov
pop
xchg
jbe
pop
js
div
xor
in
pop
cmp
add
nop
xlat
aaa
jne
(bad)
mov
mov
or
pop
xor
adc
mov
ficom
xor
push
test
push
shr
and
cmps
aam
pop
stos
or
rcl
aad
pop
push
mov
retf
xchg
cmp
clc
jne
and
mov
mov
das
mov
inc
daa
adc
pop
push
push
loope
div
(bad)
dec
cmp
movs
mov
jmp
es
cmps
iret
fwait
or
call
jmp
(bad)
cmp
sub
lea
jl
xlat
test
pop
push
fs
(bad)
std
jp
std
mov
mov
or
push
pop
imul
ss
dec
xor
or
mov
mul
in
pop
cmp
xor
sbb
out
rol
xchg
add
addr16
push
add
fwait
shl
mov
sub
or
bound
cmp
xor
movs
ja
and
mov
mov
stos
pusha
retf
fisttp
mov
sahf
js
and
mov
cmps
lea
out
fwait
(bad)
or
dec
movs
lea
xor
cdq
cmp
push
jle
pop
push
js
cmp
ss
aas
cmp
test
fisub
cmp
xchg
popf
(bad)
fdiv
psllq
rcl
repz
jle
in
test
pop
arpl
pop
add
jo
or
(bad)
sbb
sbb
or
jmp
sahf
das
jp
lahf
pop
ds
stos
adc
inc
adc
test
and
jg
jo
push
jbe
imul
sub
out
popf
sahf
push
bound
jg
ins
pop
dec
into
xlat
inc
inc
or
adc
mov
and
cmp
arpl
mov
stos
ret
je
test
shl
and
dec
scas
mov
mov
and
mov
cmp
imul
xor
and
jmp
add
cmp
jecxz
cli
mov
ins
sbb
inc
sub
xchg
les
mov
pop
cmp
sbb
xor
push
add
jge
mov
repz
mov
inc
hlt
in
std
xchg
push
mov
pop
jae
gs
pop
movs
dec
cmp
mov
mov
rol
mov
and
iret
out
addr16
fst
dec
loop
stc
(bad)
sub
rol
shl
dec
sub
dec
mov
sbb
(bad)
int3
cmp
dec
(bad)
inc
in
xor
push
stos
ds
fdiv
cmps
int3
call
bound
out
mov
gs
pop
enter
or
cmp
icebp
(bad)
mov
xchg
js
xchg
sub
add
adc
jo
cmp
xchg
lahf
sub
adc
mov
add
(bad)
or
lea
(bad)
cld
pop
adc
mov
pop
push
out
out
jne
lahf
jnp
sbb
mov
xchg
and
cmp
(bad)
fidivr
sub
retf
cmc
inc
fwait
retf
or
add
sti
adc
sahf
outs
sbb
int3
push
dec
addr16
sahf
xchg
xchg
pop
addr16
sahf
push
mov
retf
repz
stc
xchg
pop
dec
(bad)
ret
and
push
xchg
jns
and
xchg
imul
js
mov
or
push
das
mov
jb
fs
in
int
push
push
into
jmp
xchg
cmps
stos
sbb
je
mov
lods
mov
aad
xor
movs
lock
mov
cmp
bound
outs
aad
mov
stos
xor
pop
lods
push
out
cmps
xchg
aaa
pop
sbb
mov
daa
int3
(bad)
xor
pop
in
rol
jle
inc
xor
push
dec
(bad)
je
sbb
fmul
pop
lds
lahf
punpcklbw
cs
in
mov
mov
dec
icebp
adc
pop
inc
idiv
xor
jbe
jle
test
and
test
sbb
js
mov
jae
scas
ds
xor
add
cld
and
stos
gs
leave
retf
clc
pop
inc
push
and
lea
jp
test
mov
push
inc
inc
or
arpl
cmc
cwde
mov
lods
iret
shr
push
sub
in
ds
adc
adc
into
imul
es
stos
loop
div
cmp
dec
dec
pop
xchg
jno
and
push
or
or
add
test
pop
scas
xchg
xchg
push
aad
jecxz
arpl
cmp
add
test
mov
test
out
mov
jno
cmp
popf
nop
jmp
xchg
jbe
jno
inc
mov
(bad)
aad
stos
and
sbb
ss
mov
popa
mov
sbb
lods
rcr
lds
shl
call
gs
adc
add
popa
jne
jle
es
jno
dec
ret
sar
scas
add
shr
mov
aaa
mov
adc
push
push
push
into
push
dec
in
test
aas
jp
outs
dec
mov
xchg
std
fs
(bad)
and
pop
sti
inc
imul
mov
sub
mov
pushf
push
ror
cmc
jle
xor
inc
cmovle
cmp
lea
sub
push
mov
cmp
or
dec
jl
adc
mov
add
sar
cli
(bad)
(bad)
push
jmp
push
add
pop
jno
test
ficom
(bad)
mov
dec
ins
sbb
stos
fxch
test
mov
pop
xchg
sbb
pop
mov
mov
int
xchg
enter
push
test
jmp
dec
push
outs
jnp
outs
in
rcl
jge
cmp
mov
das
mov
imul
inc
cmc
aas
adc
retf
inc
mov
cmps
rcl
test
popa
push
adc
and
popa
mov
inc
mov
call
or
mov
mov
(bad)
(bad)
sbb
adc
out
jmp
xchg
addr16
mov
pusha
dec
inc
je
xor
mov
cli
pop
pusha
aam
push
jecxz
mov
std
loop
xchg
outs
lods
sbb
cmp
add
in
popa
rcl
cmps
xor
jmp
push
daa
imul
lea
inc
pushf
in
fld
sub
mov
sub
nop
and
xor
into
pop
dec
(bad)
daa
repnz
push
lds
das
fist
inc
xchg
popa
xchg
push
mov
ss
adc
add
rcr
mov
es
(bad)
movs
das
sti
cdq
(bad)
xchg
sub
mov
adc
repz
je
sbb
enter
cmp
jge
aam
lahf
pop
aas
jge
and
into
dec
in
bound
jle
dec
iret
pop
and
or
nop
xchg
stos
int
test
push
sbb
shl
leave
dec
dec
mov
rol
xor
test
popa
(bad)
sub
icebp
mov
xchg
mov
or
xchg
ror
and
outs
xchg
and
fstp
push
mov
add
icebp
push
sub
sbb
xor
imul
xchg
mov
push
ja
sbb
pusha
das
retf
test
adc
test
add
dec
dec
push
(bad)
or
enter
xchg
xchg
in
sbb
shl
inc
out
push
push
xor
sti
out
dec
iret
mov
or
xlat
adc
movs
dec
clc
lods
cmps
ficomp
xchg
jne
push
add
pop
mov
mov
dec
xchg
xchg
cmps
add
out
sti
push
dec
loope
sti
scas
mov
lods
not
aaa
dec
and
jns
xor
mov
add
mov
js
or
xchg
movs
xlat
std
mov
xor
pushf
fisub
push
push
sbb
push
jb
sbb
jl
ja
ficomp
dec
pop
pcmpgtd
retf
ffreep
scas
je
mov
push
cmp
xlat
xor
retf
dec
mov
js
pop
inc
cmp
test
out
xor
xor
pop
pop
int
in
hlt
sar
nop
scas
xor
(bad)
es
leave
sbb
test
inc
mov
push
xor
jo
add
outs
sbb
dec
sbb
outs
retf
mov
xor
out
push
jo
idiv
mov
gs
sub
pop
jmp
add
mov
push
push
inc
lahf
fnsave
pop
aaa
inc
mov
(bad)
cld
mov
int3
jo
pop
ja
outs
arpl
push
je
push
mov
sbb
pop
popa
out
and
push
(bad)
aaa
fwait
inc
fldcw
in
add
add
mov
sub
and
mov
pushf
xchg
dec
ror
xor
ins
test
mov
fdiv
cld
fnstsw
aaa
(bad)
adc
push
inc
add
pop
aas
ds
mov
mov
rol
pop
imul
clc
mov
ds
push
iret
fmulp
int3
mov
xchg
sar
xchg
pop
js
add
in
mov
js
push
lods
scas
and
push
in
aad
rol
push
pusha
jno
dec
ds
xor
jbe
aad
sbb
iret
in
clc
or
and
call
jge
ret
stos
jnp
fdiv
or
push
call
add
aad
inc
or
push
ins
lods
add
pop
sub
test
sub
sub
retf
sub
dec
mov
jmp
call
fidivr
mov
out
dec
sbb
push
dec
leave
sub
ja
adc
mov
int3
div
fiadd
add
mov
retf
and
push
jbe
rcl
jo
adc
ror
jno
pop
mov
pop
jg
cmc
adc
rcr
xchg
dec
arpl
pop
add
and
ja
inc
mov
cmc
mov
out
ds
mov
in
cmp
push
clc
(bad)
clc
in
sub
fldcw
push
loope
jmp
test
mov
cmp
repnz
int3
fprem
mov
adc
sbb
adc
fadd
adc
pop
lahf
(bad)
sbb
rcl
(bad)
or
push
dec
js
dec
cli
xchg
sub
pop
test
jb
and
lock
push
in
or
xor
enter
rcl
push
xor
mov
mov
add
inc
jp
xlat
cmp
push
int3
imul
inc
push
pop
aaa
xchg
(bad)
jge
add
xchg
jnp
nop
push
mov
pushf
cmc
inc
and
cmp
pop
js
nop
div
mov
jp
aas
dec
dec
jp
pop
jle
outs
cmp
mov
jge
int
sar
add
jb
pop
push
lea
inc
lock
push
xor
ds
cmps
sbb
arpl
mov
ja
inc
mov
jbe
retf
imul
hlt
jnp
retf
add
in
aaa
das
push
push
rol
xchg
stc
std
or
jmp
dec
adc
fwait
inc
xchg
add
mov
mov
test
loop
sub
sub
fisttp
fcomp
cmc
sar
mov
loope
imul
mov
repnz
imul
movs
lock
xlat
ds
mov
movs
stos
imul
jle
jmp
inc
out
mul
aaa
cmp
dec
popf
gs
mov
xchg
loopne
inc
inc
repnz
or
pop
jecxz
stos
add
gs
pusha
nop
data16
cmp
sub
jae
xlat
or
jle
pop
xchg
jl
ficom
(bad)
fnstenv
leave
jo
jp
and
pop
sub
jmp
jl
pop
xchg
idiv
(bad)
sub
(bad)
leave
sbb
cli
jb
call
outs
dec
inc
in
sub
loop
and
into
jno
scas
push
(bad)
je
ror
mov
inc
xchg
les
add
xchg
sbb
mov
stos
adc
neg
loope
(bad)
adc
ja
xchg
out
out
inc
mov
inc
lock
pop
clc
pop
out
int3
mov
xchg
and
iret
xchg
enter
sub
loopne
(bad)
pop
cmc
jl
xchg
fsub
fdiv
xchg
cmp
or
xchg
jne
les
call
mov
bound
or
add
mov
mov
dec
mov
out
pushf
inc
sub
loop
sbb
(bad)
cmp
jo
stos
cmp
xchg
xchg
xor
xchg
push
jns
push
adc
jb
mov
clc
mov
das
adc
mov
push
mov
lds
sti
fidivr
pushf
in
repz
int
mov
jo
xchg
outs
jg
adc
pop
cmps
arpl
mov
out
repnz
ss
mov
repnz
shr
popf
pusha
mov
dec
mov
dec
(bad)
loopne
cld
or
imul
mov
jecxz
dec
daa
mov
dec
imul
fistp
call
leave
scas
neg
pop
jge
xchg
mov
movs
xchg
out
jmp
push
xor
std
call
mov
fiadd
mov
sub
dec
add
pop
ss
retf
dec
xchg
jb
loope
jmp
push
and
mov
fstp
sbb
mov
clc
sbb
dec
in
stos
call
jmp
mov
outs
mov
shr
jl
fild
mov
xchg
std
shl
out
outs
mov
dec
cmp
nop
shl
xchg
fiadd
in
mov
(bad)
mov
push
jg
xchg
push
(bad)
aas
jo
pop
int3
push
cwde
push
in
stc
xor
or
inc
repnz
and
cmp
adc
pop
and
cmp
test
scas
in
mov
jmp
loopne
nop
(bad)
jo
out
inc
jmp
xchg
mov
and
push
(bad)
xor
cmp
in
aad
pop
xor
dec
push
loopne
sub
(bad)
push
dec
mov
push
xchg
push
mov
pop
push
add
imul
sbb
dec
mov
es
mov
or
in
popf
push
cs
adc
mov
ret
and
mov
inc
in
test
xor
out
sub
scas
in
xor
pop
sar
mov
xchg
es
mov
jp
fstp
jb
inc
in
sbb
ficomp
cli
add
lock
daa
dec
pushf
rcr
in
sub
push
jl
and
test
mov
not
dec
add
jecxz
loope
aam
scas
add
jae
shr
jmp
xchg
les
loope
push
ins
enter
hlt
in
fsub
dec
jg
push
js
and
hlt
in
je
shr
sub
jmp
inc
add
or
das
xlat
pop
sub
sub
ins
mov
sahf
fistp
jecxz
pop
inc
xchg
cs
mov
mov
rsm
pop
sbb
fist
popf
push
jo
daa
and
loope
or
jp
jbe
and
dec
mov
dec
in
imul
inc
cli
shl
scas
sbb
popf
mov
nop
ficomp
nop
les
pop
and
push
cmp
(bad)
fsubp
cdq
bound
inc
out
or
cmc
sbb
xchg
sti
cmps
sub
cdq
fbstp
sub
dec
jne
out
push
push
push
xor
mov
sbb
cmc
movs
push
dec
idiv
mov
lds
movs
push
(bad)
and
retf
shr
sahf
sbb
inc
sub
clc
xchg
loope
clc
fild
fcom
sub
daa
adc
or
sbb
(bad)
fsubp
call
jp
sar
mov
adc
ds
mov
mov
sub
in
adc
stos
and
call
stos
shl
mov
inc
cmp
aam
push
sub
into
inc
mov
movs
and
fld
cmp
inc
aaa
xchg
out
pop
mov
or
into
iret
mov
sbb
aas
bound
nop
mov
mov
xor
jno
ror
push
ret
call
and
xor
push
add
jecxz
push
inc
stos
popf
sti
test
in
dec
pusha
or
imul
mov
je
xor
sub
push
push
mov
dec
inc
inc
popa
int3
lock
outs
outs
inc
jns
mov
in
sbb
lds
or
mov
ja
add
test
adc
inc
pop
xor
test
lea
cs
ret
mov
sbb
test
rcl
in
lock
add
cmc
mov
inc
sub
sub
xchg
pusha
add
xchg
mov
and
push
dec
sub
neg
or
xchg
mov
ja
cdq
cmp
adc
push
int
call
cs
pop
adc
xrelease
mov
sbb
sar
mov
and
xchg
fcomp
enter
dec
and
popf
lods
mov
pop
xor
popa
push
(bad)
lock
(bad)
stos
jg
add
pop
adc
(bad)
jae
jge
adc
lahf
test
(bad)
jmp
das
xchg
pop
cld
push
mov
sahf
test
shl
inc
repz
and
jae
pop
retf
ret
jno
mov
scas
cli
cmp
out
add
cmps
mov
cmps
add
xchg
out
les
repz
in
ins
push
cmp
pop
push
aam
adc
and
or
call
in
cmp
and
repnz
repnz
push
out
in
icebp
rol
add
wbinvd
mov
test
ins
or
adc
fadd
push
inc
je
in
adc
mov
ins
cmps
add
shl
lahf
pop
aad
mov
daa
jne
ret
add
aad
retf
sub
dec
mov
test
(bad)
sahf
aam
cmps
lods
jecxz
sti
dec
(bad)
jecxz
icebp
mov
imul
xchg
cmc
sub
mov
sub
jmp
and
loope
push
ins
neg
push
mov
cs
call
cmp
jbe
jle
aam
popa
out
push
loop
or
ja
and
inc
sub
mov
loope
push
and
mov
pop
jmp
std
loopne
bound
xor
and
pop
add
movs
jbe
and
data16
cmp
fst
sub
jecxz
cmc
mov
xchg
sub
mov
popf
xchg
loopne
sbb
adc
fcom
sbb
mov
push
repnz
fild
daa
xor
add
jecxz
imul
(bad)
lahf
lea
imul
popf
test
xor
add
retf
push
add
mov
cwde
cmps
push
or
aam
mov
push
out
pop
bound
pop
(bad)
mov
lods
xchg
imul
loop
idiv
cmp
and
popa
push
jbe
sar
std
xchg
leave
outs
in
xchg
pop
pop
adc
adc
clc
xchg
ds
out
int3
test
xchg
movs
mov
or
push
call
mov
loope
pop
int3
and
add
mov
push
sub
pop
clc
jl
lock
aad
add
lds
hlt
dec
fs
jno
xor
add
std
jge
dec
(bad)
std
jo
(bad)
jbe
jno
dec
cmp
scas
sub
mov
out
xor
sub
or
sub
xor
add
sbb
push
mov
sbb
arpl
mov
mul
sbb
dec
mov
data16
retf
pop
call
dec
pop
jmp
iret
dec
bnd
cmp
cdq
outs
push
sahf
push
lock
xchg
or
mov
fs
xchg
mov
cs
mov
out
inc
lods
jmp
dec
sbb
(bad)
cld
(bad)
add
popf
cwde
sbb
mov
call
and
adc
xchg
nop
mov
pushf
add
xchg
sbb
cmp
dec
dec
dec
cld
mov
ins
out
aas
mov
stc
repnz
mov
mov
ja
xor
addr16
pop
and
push
aad
mov
ret
test
inc
or
movs
jbe
jns
fldl2t
mov
test
jb
cmp
fdivr
(bad)
gs
xor
mov
rdmsr
retf
loop
dec
mov
mov
inc
test
pop
ret
sbb
inc
enter
arpl
dec
fldcw
mov
test
cmp
and
call
lds
fstp
in
add
mov
mov
push
(bad)
cmc
mov
call
lahf
push
adc
std
xor
push
or
xchg
or
push
inc
out
enter
mov
jmp
lods
lock
mov
aam
cmps
xchg
lea
push
scas
gs
neg
xor
add
push
pop
out
inc
and
sub
jle
add
and
(bad)
jmp
cmp
mov
daa
(bad)
cmp
lods
sahf
(bad)
jo
pop
mov
cmps
in
mov
pop
adc
fisubr
xchg
cld
pop
(bad)
cdq
movs
dec
jl
js
adc
jmp
test
es
mul
push
xor
cmc
enter
sti
fcomp
lds
fs
jno
cmp
xchg
shl
jbe
or
mov
idiv
jle
test
(bad)
enter
jp
adc
out
xchg
sub
jae
add
bound
push
inc
sub
(bad)
into
retf
jmp
cmps
and
sub
int
outs
push
adc
clc
ror
in
iret
mov
jb
cmp
jae
mov
sahf
inc
arpl
push
push
icebp
xor
inc
lahf
mov
mov
adc
xchg
push
inc
popf
mov
mov
dec
push
repz
fs
dec
jecxz
mov
std
in
pop
push
or
xor
xor
lahf
mov
bsf
int
pop
int3
outs
or
inc
bound
jne
das
xor
sbb
cli
cmp
sub
mov
jp
xchg
mov
invd
jo
xor
mov
fdivp
add
pop
(bad)
(bad)
adc
les
jmp
pop
lds
pusha
movs
or
call
jmp
rcl
leave
loopne
in
mov
add
push
sar
popa
test
jns
into
popa
push
ss
inc
ja
in
sahf
clc
dec
mov
inc
outs
or
lea
mov
jle
mov
mov
push
mov
add
jne
daa
inc
(bad)
push
shl
pop
sahf
xchg
sub
ret
cld
push
or
add
ja
sbb
and
xor
mov
dec
mov
lods
test
ss
in
inc
fild
lods
inc
sar
rcl
ja
and
mov
mov
sub
fwait
out
or
gs
mov
sbb
pop
adc
pop
push
mov
ror
jmp
aaa
or
adc
mov
inc
cmc
jecxz
shl
push
mov
dec
je
mov
inc
adc
(bad)
out
div
ret
push
inc
dec
fiadd
out
arpl
pop
dec
cld
scas
cld
in
adc
jno
lea
pop
out
jmp
push
mov
cmps
pop
sbb
ror
(bad)
je
cmp
(bad)
jae
xchg
cmps
push
adc
(bad)
call
push
(bad)
(bad)
jmp
out
rcl
fs
ss
jo
push
loopne
sub
push
dec
cmc
mov
outs
xchg
cmps
retf
and
and
push
mov
fadd
mov
retf
scas
mov
pop
(bad)
in
iret
pusha
xchg
inc
push
call
(bad)
add
imul
mov
sub
mov
jl
adc
or
call
and
and
(bad)
mov
retf
cmp
test
mov
or
or
mov
test
xor
lods
or
pop
sbb
mov
jmp
popa
ins
xchg
in
(bad)
push
push
inc
test
in
(bad)
mov
arpl
xor
mov
or
pushf
leave
js
mov
pop
retf
xor
jb
outs
shl
dec
add
cs
repnz
sbb
cmp
mov
push
mov
hlt
mov
or
mov
je
or
shr
imul
call
inc
iret
into
push
inc
les
or
cmp
mov
out
mov
call
push
push
and
push
inc
iret
(bad)
out
ret
sub
pop
xchg
in
jno
in
adc
sub
repz
bound
pop
movs
sub
mov
repnz
and
jo
repz
cmps
mov
push
call
sahf
cdq
fcmovnu
xor
ins
mul
mov
sbb
inc
es
mov
addr16
fild
sub
inc
mov
test
ins
jmp
sbb
adc
sub
jno
mov
push
push
cmps
shr
imul
xchg
mov
dec
and
daa
movs
xor
popa
mov
xor
and
imul
outs
inc
push
mov
lods
dec
setle
xchg
jge
dec
push
push
(bad)
or
xor
outs
sub
iret
clc
or
pusha
and
push
or
shl
lods
adc
pop
and
shl
(bad)
out
pop
lahf
cdq
aaa
les
rcl
test
stos
pushf
sbb
push
test
jp
loop
pop
std
xchg
lahf
sti
xor
inc
test
xchg
push
jb
(bad)
inc
xchg
jb
test
pop
cmps
(bad)
aas
retf
pusha
fstp
push
dec
jne
xor
in
push
dec
loopne
mov
lahf
sub
sub
cwde
mov
es
sbb
push
dec
xchg
mov
psrlq
xchg
lahf
mov
repnz
or
sub
mov
in
mov
pop
ret
push
or
out
mov
stc
cmps
xcrypt-cfb
cmps
jecxz
mov
shr
xchg
jge
out
push
jge
mov
push
and
mov
push
inc
fdiv
loopne
aas
xchg
mov
or
idiv
fild
dec
mov
movs
adc
stc
rcr
into
xor
and
aam
push
xchg
jle
or
dec
sti
outs
mov
fdivr
xchg
sbb
dec
mov
retf
or
iret
add
and
neg
loope
fwait
scas
add
in
mov
pop
ja
dec
sub
aam
pop
les
mov
add
lods
or
push
mov
xchg
add
cmp
lahf
dec
mov
shl
(bad)
cmp
test
push
data16
xchg
jmp
test
cmc
jb
dec
sahf
xchg
imul
(bad)
retf
mov
cmp
loop
call
fldcw
xor
cmp
sub
fs
test
into
stos
mov
inc
pop
loopne
and
cmp
(bad)
cld
xor
add
ja
popa
and
mov
or
mov
outs
cld
in
inc
dec
gs
jg
xor
xor
inc
imul
ins
jb
sti
add
fistp
jnp
dec
ss
inc
mov
(bad)
cmp
pop
inc
sbb
dec
or
push
add
pop
push
mov
or
test
mov
cmps
push
movs
mov
pop
outs
or
into
sbb
(bad)
jnp
adc
sahf
and
lock
popf
and
sahf
mov
lods
in
jmp
outs
lea
mov
sbb
call
push
jno
adc
cwde
push
xor
aam
loope
and
dec
call
mov
xchg
push
pop
cmp
or
xchg
xchg
xor
stos
and
pop
inc
xlat
lds
push
xor
xchg
push
xlat
pop
xchg
cld
lahf
sbb
xchg
and
out
cmps
fucomip
test
jle
sub
ror
lds
push
enter
lahf
cmps
jmp
shr
dec
into
lea
sub
imul
jecxz
sbb
xlat
movs
jl
js
mov
cli
and
enter
stos
aad
fdiv
sbb
imul
pop
push
aaa
jmp
xor
ficomp
enter
pop
or
imul
push
daa
adc
fwait
sub
into
fnstenv
cmc
inc
mov
cmp
pop
clc
inc
mov
mov
sub
js
cdq
mov
adc
arpl
mov
lods
icebp
cld
fisubr
xchg
jg
outs
fisubr
mov
adc
adc
out
aas
fwait
test
add
jmp
rcl
cmp
ja
enter
inc
fdiv
sub
xchg
pop
data16
mov
test
adc
push
cmp
btr
cmp
dec
ret
pop
ss
stos
mov
inc
call
sbb
adc
xor
inc
je
and
inc
call
xlat
sub
or
xchg
and
in
or
fidiv
(bad)
push
out
outs
imul
and
xor
ja
popa
sbb
mov
sub
ins
fistp
outs
mov
icebp
daa
or
xchg
rcr
aaa
mov
fwait
add
outs
ffree
jmp
xchg
pop
mov
scas
and
shr
mov
pop
loop
jae
push
xchg
shl
mov
push
sub
push
iret
push
fstp
cmp
cmp
mov
repnz
push
stos
or
pop
jmp
jb
test
es
clc
das
and
push
jecxz
dec
add
dec
cli
adc
icebp
dec
loop
je
movs
pop
dec
jns
mov
jae
or
in
test
add
fmul
xchg
cmp
mov
cmps
ret
inc
sub
or
fdiv
xchg
cmc
cmps
xchg
out
xchg
push
sbb
cli
fldcw
jnp
enter
adc
push
jmp
lea
dec
fwait
push
clc
jno
pusha
or
lea
(bad)
xchg
push
or
(bad)
mov
test
iret
mov
mov
cmps
retf
ins
sub
lock
pmulhuw
inc
jo
stc
dec
cmps
push
aaa
xor
dec
leave
dec
sbb
mov
cmp
ds
adc
mov
sbb
xchg
loop
jnp
inc
or
add
test
ret
pop
mov
mov
daa
jae
jge
pop
sub
push
lds
dec
mov
in
into
rcl
sahf
jmp
cmp
jno
jmp
inc
mov
cwde
out
std
inc
cmc
ss
test
test
mov
idiv
mov
ss
rcl
xor
jg
inc
in
and
cmp
adc
push
int
call
(bad)
aas
retf
mov
xchg
jae
push
sbb
cmp
and
push
and
mul
fiadd
pop
stc
jo
fdiv
cmp
add
add
sub
outs
lods
pop
inc
inc
not
and
mov
push
mov
jg
sti
sub
loope
dec
daa
repz
push
mov
mov
push
push
mov
mov
retf
xchg
push
outs
inc
es
sti
sub
pop
push
bound
cld
jno
(bad)
dec
sahf
cwde
push
pop
mov
call
fwait
(bad)
adc
push
nop
dec
js
inc
mov
nop
mov
fimul
pop
cmp
jne
ficom
retf
sti
mov
fcmovbe
icebp
dec
mov
add
jns
dec
les
hlt
loope
fnsave
push
and
repnz
jmp
push
movs
test
lock
mov
aam
pop
hlt
cmp
das
jg
pushf
imul
mov
pop
(bad)
out
xchg
stos
cmp
cdq
sbb
jp
cmp
mov
sbb
inc
clc
or
rcr
in
jmp
jp
add
aam
into
fdiv
lods
jl
in
std
mov
xlat
jmp
pop
out
fstp
xchg
add
sbb
sar
push
(bad)
xchg
mov
mov
jb
call
add
sub
cwde
jbe
pushf
icebp
xor
pop
rcr
inc
sti
push
(bad)
adc
sub
stos
xchg
fcom
repnz
or
mov
pusha
adc
mov
dec
std
or
int
int
dec
dec
jmp
sahf
cmp
fsub
sahf
jge
ret
rcl
adc
stos
pop
jo
movs
jno
adc
enter
push
retf
adc
sbb
aaa
mov
xor
jmp
lea
cli
cmc
mov
adc
loop
cmp
xor
xor
mov
lds
stos
fisubr
cmp
lds
push
icebp
out
xor
jle
(bad)
test
sub
jl
push
or
mov
cmc
sub
xchg
(bad)
sub
mov
popa
lea
aad
into
adc
das
jne
in
cmps
push
or
mov
push
outs
fdiv
dec
add
mov
bound
cli
ror
adc
dec
mov
(bad)
xchg
jge
xor
pop
pop
or
cmp
mov
xor
pusha
inc
jecxz
popa
xor
out
add
test
jle
xchg
sbb
mov
sar
loope
jg
sahf
js
fdiv
jmp
mov
and
cmp
scas
dec
int
cmp
out
daa
jne
jno
mov
dec
daa
jnp
sub
cmps
jb
mov
nop
jo
pop
cmp
mov
jmp
jl
cmp
sbb
retf
pop
mov
iret
xchg
push
pusha
add
ins
xchg
push
test
ins
pop
jp
mov
add
dec
inc
add
rep
dec
cmp
in
cmp
inc
mov
xchg
pushf
push
adc
mov
ret
in
sbb
das
xchg
fcomp
push
aaa
cdq
sub
in
retf
jge
frstor
sbb
sub
sbb
test
aaa
or
push
cmps
or
cmp
aad
popf
sbb
fs
jmp
(bad)
jmp
stos
xchg
shl
mov
lahf
jmp
les
jae
int3
dec
loop
shr
push
dec
push
add
mov
adc
test
xchg
jecxz
push
jb
push
dec
call
jbe
push
fucomp
ret
add
jnp
(bad)
jbe
lods
fnstenv
stos
jb
cdq
jle
and
cwde
das
push
pop
test
jle
in
bound
(bad)
retf
push
mov
jmp
mov
outs
cli
sbb
and
mov
cmp
and
jge
lds
test
fcomp
or
fisub
in
inc
call
cmps
mov
dec
mov
sub
mov
out
jecxz
les
out
das
dec
ffreep
fstp
(bad)
xor
add
icebp
sub
and
(bad)
imul
aas
aad
add
sbb
ror
mov
sti
mov
aam
bnd
xlat
jle
adc
loop
jne
das
inc
xor
out
xchg
xlat
test
loope
fisttp
lea
dec
push
mov
dec
xchg
mov
mov
mov
outs
fadd
call
leave
sbb
inc
adc
ins
push
or
pop
call
(bad)
stc
int3
xchg
sub
jge
retf
and
leave
xchg
pop
jae
ror
dec
push
sbb
enter
rol
adc
popa
xor
loopne
cmp
xor
xor
ret
sbb
xchg
push
movs
aam
pop
stc
cld
test
push
pusha
and
std
and
fincstp
jl
aas
in
pop
jae
sub
ins
pop
push
lock
jg
sahf
and
scas
imul
rcl
push
addr16
dec
in
push
sti
stos
call
data16
mov
scas
inc
add
xchg
sub
pop
test
in
inc
lock
jmp
popa
jns
imul
pushf
push
sub
js
cmp
pop
mov
pop
cli
fimul
arpl
cmp
sbb
jge
cmp
xor
mov
(bad)
fimul
data16
and
add
push
cli
and
call
lahf
out
jno
nop
(bad)
jg
dec
jmp
(bad)
dec
ins
fdivr
jecxz
cdq
push
jo
jge
je
inc
sbb
mov
cwde
xchg
enter
add
pop
out
and
cmp
std
xchg
test
aam
or
add
mov
jl
bnd
gs
movs
mov
es
push
pop
sbb
xchg
(bad)
bound
dec
retf
icebp
and
cmp
ret
inc
(bad)
xchg
mov
das
and
out
fild
jbe
test
gs
jge
scas
(bad)
sbb
and
adc
rcl
ss
dec
hlt
shr
je
mov
dec
adc
push
or
xchg
inc
pop
cmp
retf
dec
xchg
xchg
lds
xor
movs
out
jne
xor
outs
into
pop
pop
stos
test
sub
(bad)
mov
and
mov
push
xchg
mov
push
cld
shr
push
mov
fsub
jmp
dec
cmp
mov
fcomp
mov
out
dec
pop
sar
pushf
fmul
dec
repnz
call
into
in
jge
aam
push
sub
or
mov
xor
mov
imul
fild
loopne
dec
xor
out
mov
pop
inc
jge
jg
dec
lds
fcmovnbe
ret
adc
dec
mov
jae
adc
push
fld
outs
aam
sub
cmp
scas
addr16
pop
pop
xchg
mov
(bad)
call
pop
test
cli
and
clc
mov
fadd
push
mov
jmp
cmp
mov
adc
lea
(bad)
push
push
call
mov
repnz
fadd
test
(bad)
or
int3
dec
out
pop
sub
jb
push
push
(bad)
sub
inc
dec
arpl
xchg
dec
cmp
mov
xor
jbe
test
ret
pop
xor
cmps
fdiv
or
lea
fwait
imul
rcr
and
cmps
outs
les
call
push
xor
xchg
popa
dec
or
pop
cld
inc
mov
jle
jmp
or
out
mov
or
mov
xor
cwde
ja
mov
sbb
and
mov
loop
cli
jb
jl
push
mov
scas
dec
xchg
ja
popa
push
pop
mov
into
xchg
aam
lods
adc
dec
xchg
or
fwait
jge
xor
xchg
jns
scas
jge
xchg
repz
test
outs
inc
xchg
fstp
ds
mov
addr16
xor
in
adc
mov
jmp
sbb
jmp
inc
ins
mov
lock
and
pusha
(bad)
mov
jp
mov
pop
into
mov
push
retf
mov
sahf
sbb
sbb
mov
sbb
mov
and
inc
push
push
mov
out
adc
jno
or
jecxz
xor
ror
loope
cmp
mov
fsub
inc
and
(bad)
nop
adc
push
mov
in
jmp
or
in
jno
and
call
or
mov
sahf
fstp
pop
push
inc
popf
push
rol
wrmsr
cwde
xor
cmp
adc
push
inc
std
xchg
sti
js
sahf
mov
xor
ror
xchg
inc
sbb
iret
sbb
xchg
sahf
in
int3
ror
pop
ds
mov
aas
adc
enter
sub
stos
in
xchg
cmp
imul
or
xor
cmp
xchg
xor
inc
jp
test
mov
jnp
jo
nop
pushf
xor
adc
push
jecxz
inc
xlat
lds
add
cmp
fs
adc
jb
int3
sbb
pop
mov
mov
sub
adc
into
push
inc
sar
shl
xor
adc
mov
test
das
xor
mov
dec
loopne
xchg
movs
lods
sub
dec
(bad)
jnp
test
push
and
loopne
fdivr
(bad)
test
inc
mov
cmp
iret
xchg
and
mov
mov
sbb
mov
ja
xchg
cmp
push
pusha
xchg
push
out
mov
xor
outs
mov
in
sub
js
fwait
xor
inc
push
pop
pop
sub
stc
push
pop
mov
(bad)
sub
xor
lock
adc
sbb
and
js
inc
das
iret
jl
jnp
or
xlat
pusha
in
outs
rcl
movs
js
add
fisttp
adc
mov
cmp
ins
and
ret
scas
iret
test
xchg
inc
sbb
xchg
push
hlt
adc
retf
jb
adc
dec
test
imul
xlat
jmp
fcomp
jbe
sahf
push
xchg
rol
push
mov
pop
mov
add
pop
ins
jl
popf
push
pop
mov
mov
sub
push
xchg
jae
cmp
xchg
adc
lds
xor
retf
xchg
movs
cmp
in
(bad)
xlat
movs
jp
or
pop
js
cmp
push
cmp
or
cmp
sub
out
pop
rcr
mov
jl
out
mov
adc
lods
mov
pop
call
add
(bad)
and
sahf
cmps
and
xchg
cmp
fwait
lea
pop
cmp
mov
jno
cmp
mov
stos
mov
out
mov
dec
jg
cmp
or
sti
cdq
ss
bound
aaa
sub
mov
mov
jnp
adc
cdq
sub
xchg
aas
or
repnz
mov
jmp
shr
ins
inc
mov
je
push
ds
fiadd
movs
mov
sbb
mov
add
mov
pop
add
xor
imul
mov
dec
cmc
es
sar
pop
arpl
out
std
stos
or
sub
sahf
sbb
cmps
out
cmp
ret
push
daa
aam
mov
xchg
xchg
mov
inc
int3
pop
add
sbb
mov
or
test
ret
xchg
mov
mov
loopne
cmps
std
mov
xchg
daa
inc
push
fist
cmp
out
add
cmp
dec
movs
dec
xchg
jle
fstp
test
push
xor
data16
aaa
not
cmps
add
pop
sub
mov
and
nop
adc
xchg
push
loope
inc
ins
mov
inc
push
sbb
(bad)
sahf
sti
inc
leave
aam
mov
adc
ins
je
or
fist
cdq
inc
gs
addr16
jp
jbe
xor
shl
xlat
inc
pushf
sbb
cld
fwait
dec
mov
add
mov
cmp
mov
mov
imul
mov
and
stos
and
jbe
cmps
pop
xchg
inc
clc
and
cmp
test
pextrw
cmps
xchg
mov
pushf
and
inc
sahf
shl
and
xchg
ja
retf
xor
inc
push
pop
mov
mov
fsub
inc
sahf
push
jg
jle
adc
ins
cld
inc
xor
fcom
pop
pop
cs
add
outs
pop
xor
rcr
imul
ret
shl
or
jne
(bad)
push
pop
bound
mov
sbb
ficom
repnz
dec
push
cmp
cmps
sub
call
mov
std
cmp
aam
std
lds
xchg
rol
inc
mov
mov
clc
loope
sbb
xchg
mov
xchg
shl
or
scas
jns
loop
aam
jmp
pop
pop
rol
push
mov
repz
mov
lods
mov
adc
xchg
movs
cdq
pushf
pop
cli
ins
cmp
les
xchg
repnz
dec
push
das
cmp
add
scas
fst
xchg
and
sub
add
outs
jbe
sar
bound
fwait
xor
add
mov
push
test
lea
dec
adc
das
setb
bound
out
leave
inc
into
sub
jle
cld
daa
call
dec
or
xchg
ins
call
bound
inc
mov
popa
aas
fwait
sbb
(bad)
div
dec
dec
scas
hlt
add
test
inc
push
inc
repz
in
and
jmp
pop
jp
cld
cli
mov
shl
add
cmp
cmp
adc
xor
add
sbb
sar
popf
aas
sti
faddp
pop
je
push
jbe
retf
cmp
popf
ror
out
mov
jl
dec
in
sub
sbb
mov
cdq
jmp
sbb
cmp
xlat
push
movs
in
in
pop
push
mov
aas
cmp
out
push
adc
add
fwait
scas
repz
xor
int3
shr
xchg
add
pop
push
jne
jns
jmp
lock
lea
fcomp
mov
push
sbb
jmp
shl
pusha
fnsave
(bad)
movs
push
in
test
ins
pop
movs
jmp
or
(bad)
push
sbb
and
and
ror
(bad)
loope
adc
int
lea
movzx
pop
jmp
ss
ins
aad
adc
(bad)
xchg
aam
add
inc
pop
sar
adc
jb
mov
es
mov
mov
lods
bound
lds
loope
rcr
fwait
(bad)
sub
outs
cmp
ficomp
xor
mov
repz
sub
mov
xchg
loopne
mov
xor
xchg
and
idiv
leave
push
int3
movs
es
outs
test
pop
jbe
mov
pop
dec
sub
mov
cmp
pop
div
inc
cli
mov
jg
ins
retf
cmc
cwde
les
cmp
ins
gs
jp
pop
loopne
lahf
out
xor
ja
mov
push
stos
or
cmps
cwde
mov
adc
ja
pushf
cmc
mov
je
ret
dec
stc
xor
xchg
imul
or
or
inc
jae
adc
popf
xchg
ins
jae
leave
lahf
fwait
imul
cmp
sbb
int3
mov
mov
gs
(bad)
stos
dec
aam
adc
adc
cmc
jg
jp
daa
(bad)
(bad)
imul
(bad)
bound
push
ins
and
mov
fwait
into
mov
retf
(bad)
sti
iret
pmullw
add
outs
scas
push
pop
and
push
mov
cmp
xor
sbb
es
js
ins
ss
sbb
mov
retf
outs
adc
retf
(bad)
jnp
xor
mov
and
shl
push
dec
mov
push
fadd
ficom
fisub
mov
sub
icebp
cs
fcmovnu
push
xchg
sahf
push
mov
mov
nop
mov
mov
pushf
add
inc
out
fs
mov
fwait
inc
cmp
(bad)
bound
mov
dec
jo
xor
dec
inc
pop
out
mov
adc
inc
rol
cmp
and
mov
fimul
repnz
retf
lea
call
push
xor
mov
retf
push
(bad)
jmp
sub
jmp
adc
fcomi
icebp
out
cwde
sub
cld
test
add
data16
sbb
xchg
mov
xchg
mov
fwait
lods
jae
mov
rcr
out
jmp
sahf
mov
scas
fdivr
outs
lods
imul
ss
mov
ss
dec
push
or
jne
dec
imul
dec
(bad)
fsubr
dec
xchg
enter
mov
mov
je
adc
sub
jg
fisubr
(bad)
pop
push
call
dec
(bad)
scas
push
rcl
push
retf
ficomp
in
push
(bad)
cs
enter
push
xor
xchg
jmp
retf
mov
cmc
sub
mov
mov
sti
jmp
leave
xchg
pop
mov
sbb
pushf
(bad)
dec
and
mov
add
inc
mov
sbb
out
stc
cmp
and
inc
inc
aam
pop
mov
xchg
ins
mov
mov
mov
dec
mov
aaa
dec
mov
mov
mov
vandnps
ror
js
dec
cmp
and
aam
inc
push
arpl
mov
jns
adc
jno
int3
pop
bound
mov
repz
loopne
sahf
nop
mov
lahf
xchg
mov
hlt
inc
pop
popf
push
and
mov
lock
sbb
or
sbb
lahf
pushf
aad
fistp
leave
xchg
loopne
add
repz
and
push
and
xor
mov
xchg
imul
test
mov
lods
xor
xor
fwait
imul
mov
(bad)
lds
movzx
movs
mov
sub
and
pop
hlt
(bad)
mov
xor
mov
pop
and
lea
ja
ja
gs
xchg
lods
inc
dec
ficomp
rcr
fsub
cmps
adc
inc
retf
cmp
mov
test
pop
jno
popa
pop
aam
arpl
mov
fdiv
jge
outs
ror
stos
nop
push
sbb
mov
call
scas
adc
std
sub
scas
sti
mov
add
aam
cmp
je
les
outs
mov
mov
pop
and
not
xchg
(bad)
cli
(bad)
call
mov
dec
pop
dec
in
loop
cmps
out
add
fs
ins
daa
or
ret
ja
fcom
sbb
popa
icebp
mov
int3
shr
sub
aam
push
pop
push
fld
or
iret
push
js
imul
xchg
out
mov
cmp
push
push
inc
into
add
nop
xlat
test
push
adc
jns
xchg
mov
mov
inc
dec
gs
inc
popf
les
aad
add
es
fnstsw
sub
fcomip
cmc
inc
icebp
push
mov
scas
loop
aad
loop
je
imul
fnstenv
jb
iret
es
push
and
mov
fisub
sbb
sub
(bad)
or
out
xlat
sti
push
test
mov
nop
mov
nop
jo
adc
arpl
xor
rcr
pop
and
dec
jl
xor
out
mov
sbb
sub
pop
cmps
xchg
fist
xchg
(bad)
mov
mov
dec
cmps
cmps
pop
sub
ret
nop
lahf
pop
mov
xchg
mov
lds
(bad)
lds
into
out
and
nop
repnz
or
repnz
test
pop
pusha
rcr
jne
add
mov
loop
pop
xlat
sbb
and
adc
in
cmp
test
push
test
adc
int
pop
loop
sbb
dec
loop
arpl
cwde
mov
xchg
aas
or
shl
push
inc
mov
inc
rcl
jno
daa
retf
rcl
repz
lock
loope
mov
jmp
and
push
lock
icebp
sbb
retf
repz
fwait
leave
iret
lahf
pusha
in
scas
int3
mov
pop
and
pusha
push
push
jge
jo
pushw
mov
adc
loopne
test
popa
fcomp
scas
out
call
shl
xchg
sbb
in
outs
adc
inc
xchg
(bad)
xchg
mov
sbb
pop
inc
int3
shl
retf
sar
and
jle
adc
fs
data16
mov
in
pop
mov
pop
pop
sbb
cmps
(bad)
cdq
fsubr
add
jmp
jo
lock
outs
mov
inc
fwait
adc
dec
mov
push
pushf
icebp
cmps
adc
or
mov
or
test
mov
call
ret
js
pushf
mov
pop
sbb
retf
pushf
xchg
call
std
sub
dec
sub
fist
sti
sub
outs
pop
mov
mov
push
jmp
add
aad
jecxz
lds
add
data16
shl
lahf
cmp
jge
pop
sar
mov
push
stos
ret
out
(bad)
aam
jno
shr
xchg
fs
jmp
jae
bound
addr16
movs
sub
shr
mov
dec
hlt
push
aas
jno
sbb
ins
ja
popa
inc
or
adc
pop
aaa
movs
adc
retf
aam
not
sub
fstp
popa
out
xchg
pop
es
xlat
push
gs
iret
xchg
cvtps2pi
iret
adc
add
dec
int3
cmp
adc
mov
push
seta
mov
ret
mov
ret
jne
xor
xlat
mov
movs
int3
mul
inc
not
movs
fisttp
test
pop
jb
add
in
ss
sub
xchg
cmps
das
push
les
add
jecxz
sub
cmp
jmp
xor
pop
sbb
std
pushf
ret
xor
mov
push
lock
jge
inc
inc
mov
dec
sahf
push
loopne
jecxz
mov
ss
gs
sbb
div
jnp
aaa
cli
dec
loopne
or
inc
shl
lods
rol
cmps
es
or
mov
shl
push
and
in
shl
int
dec
adc
xchg
dec
popa
push
mov
repz
test
sub
mov
sbb
mov
add
pushf
in
sub
pusha
pop
cmp
and
aas
into
leave
sbb
int
popa
pop
adc
mov
pop
movs
pop
dec
movs
test
and
fcom
aaa
retf
imul
cmp
cmc
enter
sub
mov
mov
into
mov
ss
cmps
or
fsubr
pushf
call
dec
cwde
mov
push
adc
dec
in
add
xor
push
add
jno
sub
scas
fidiv
and
xchg
or
pop
scas
inc
cmps
push
push
mov
mov
adc
xchg
xchg
outs
shl
jns
and
popf
pop
cmp
cmp
aas
aaa
mov
mov
fs
inc
xchg
scas
retf
dec
ins
aaa
sar
das
loope
mov
dec
xor
gs
daa
add
and
cmp
(bad)
stc
add
es
and
or
daa
pop
jnp
pop
push
jbe
jmp
setg
xor
xchg
add
inc
push
imul
lds
daa
dec
mov
dec
retf
sbb
jmp
popf
cwde
push
fadd
retf
xor
xchg
cmp
mov
ins
loop
xor
xlat
push
sti
mov
jae
or
retf
test
in
pop
cmps
inc
popf
or
sbb
xor
jl
add
cld
inc
pop
sbb
mov
(bad)
cmp
cmp
xor
ja
xchg
mov
movs
jg
imul
out
sbb
add
mov
adc
add
adc
sbb
push
jb
mov
pop
clc
(bad)
or
mov
xchg
and
mov
ja
(bad)
jne
pop
mov
(bad)
xchg
ja
push
or
ss
jecxz
ret
movs
scas
add
xchg
pop
fadd
pop
aad
xchg
push
shl
lahf
ror
and
ins
or
mov
xchg
xchg
xor
mov
repz
pop
pop
lods
pop
jp
dec
add
outs
or
inc
imul
outs
ficomp
nop
in
(bad)
sar
pop
xor
mov
pop
sub
cmp
mov
jecxz
std
adc
lods
mov
xlat
adc
lds
dec
push
mov
cmp
daa
fst
cmp
pop
add
mov
pusha
sete
xchg
shl
(bad)
mov
ja
jno
leave
cli
test
ja
jmp
xor
cld
stos
mov
test
and
cdq
das
ja
cwde
loopne
mov
sub
ror
inc
inc
push
imul
xor
gs
and
mov
pop
fcom
xchg
iret
lahf
out
loope
or
inc
repz
cmps
iret
dec
and
push
mov
pop
ins
adc
sub
mov
jp
les
lahf
cmp
cmp
xchg
(bad)
cs
enter
jnp
mov
int
cmp
add
and
ins
mov
push
dec
mov
mov
push
push
jo
mov
jecxz
sbb
in
xor
test
and
xchg
loop
movs
(bad)
retf
in
or
inc
push
or
movs
stos
cmps
sub
movs
mov
sbb
repnz
mov
and
movs
nop
inc
cmp
inc
pop
mov
mov
mov
mov
std
dec
or
pop
jmp
mov
mov
xor
or
mov
icebp
inc
dec
ret
ins
jmp
or
int
mov
bnd
xchg
clc
aas
mov
jecxz
add
dec
inc
or
popa
nop
add
adc
mov
ret
push
pop
mov
lds
loope
lods
clc
js
sbb
pop
jge
or
mov
mov
adc
adc
add
cmp
jne
out
adc
test
cmc
(bad)
cmps
pop
pushf
and
cmps
out
vandps
xchg
sbb
push
mov
or
and
push
out
jno
cld
jp
test
out
cmps
adc
mov
inc
add
jno
ja
mov
cdq
mov
push
out
ja
mov
movs
dec
rcl
mov
cmp
(bad)
icebp
cmps
inc
(bad)
jmp
pop
icebp
les
repnz
cmp
jb
cld
sbb
icebp
out
dec
aam
in
pusha
ret
push
inc
or
mov
adc
stc
mov
mov
loop
inc
cld
mov
sub
pusha
pop
mov
push
test
mov
mov
popf
stc
adc
mov
adc
sbb
push
mov
adc
pop
icebp
xor
int3
sbb
out
pop
jmp
push
(bad)
dec
loop
lods
inc
cld
daa
jne
ds
call
out
jge
mov
pop
gs
daa
xchg
jecxz
add
shr
dec
fistp
sub
idiv
cdq
(bad)
xor
mov
in
cmps
clc
rcl
ss
into
into
mov
dec
dec
or
jp
cmp
fxch
push
gs
sbb
jl
in
cdq
nop
fwait
inc
ins
or
movs
in
rcl
nop
lods
and
fisubr
mov
sbb
fcom
cmps
mov
mov
xor
pop
add
xlat
push
push
sub
ins
js
rol
push
dec
in
mov
xchg
xchg
rep
dec
pop
jp
jle
add
jge
mul
lahf
xor
sbb
cmp
cdq
mov
xchg
push
dec
popa
mov
push
jmp
nop
push
sbb
mov
or
xchg
adc
pop
(bad)
fild
stos
xchg
xor
clc
jge
xchg
loope
pop
stos
xchg
jno
or
test
sti
dec
enter
sub
jo
loop
and
mov
sbb
dec
(bad)
mov
call
mov
jb
fldenv
dec
fdiv
xor
aam
jo
lds
push
or
ftst
and
mov
(bad)
push
cs
stos
sbb
and
inc
or
xchg
sub
sub
dec
pushf
adc
clc
addr16
adc
mov
movs
pop
jnp
add
retf
pushf
sub
les
aas
call
movs
jno
cmp
cmp
xor
rcr
sbb
or
mov
(bad)
fdiv
je
ret
test
add
add
dec
movs
pop
mov
xor
and
lods
adc
push
leave
mov
es
xchg
cmp
test
sub
mov
test
mov
fwait
call
loopne
jg
icebp
retf
in
pop
add
das
push
test
sub
jmp
repnz
cmp
jmp
and
push
std
mov
adc
sbb
xchg
ins
std
xchg
ds
aaa
mov
das
push
movntps
inc
jns
adc
sub
data16
rcl
and
inc
out
adc
das
xchg
cmp
push
scas
lea
xor
or
adc
outs
shl
or
push
mov
ins
loopne
out
and
add
and
xchg
into
xlat
jl
pop
retf
xor
jp
jl
bound
add
xchg
cmps
shl
arpl
in
arpl
mov
(bad)
push
imul
xchg
rcr
js
std
dec
out
inc
dec
jno
repnz
psubd
inc
sub
in
mov
repz
ins
cmp
in
xchg
nop
dec
pop
and
or
xchg
xor
movs
ins
sub
(bad)
into
lock
scas
in
shl
adc
push
(bad)
sahf
(bad)
neg
aam
inc
xlat
ja
adc
test
imul
fldcw
and
sub
int
ror
dec
mov
mov
leave
aad
mov
sub
stos
mov
xchg
cmc
and
call
inc
inc
bound
ins
je
add
mov
dec
js
ret
sbb
je
jb
das
mov
ja
mov
mov
jmp
out
pop
ss
movs
(bad)
es
addr16
outs
test
mov
mov
bound
inc
out
shr
pop
push
adc
cld
je
movs
xor
les
fadd
(bad)
mov
(bad)
out
mov
push
sbb
jp
hlt
jbe
mov
(bad)
jnp
jns
cld
rcr
lea
push
jle
test
call
jbe
dec
inc
call
(bad)
mov
jbe
lea
(bad)
int3
pop
xor
push
push
xchg
cwde
les
add
(bad)
out
cwde
popf
xchg
ja
mov
push
adc
out
ret
pop
mov
jg
sbb
jb
jb
ss
push
sbb
jo
pop
shl
outs
and
push
adc
pop
add
mov
sahf
sar
clc
add
mov
fldcw
outs
push
dec
push
jo
rol
test
sbb
lock
dec
mov
mov
shl
ret
inc
sbb
(bad)
push
imul
pusha
xchg
mov
and
cmovs
lock
mov
sub
ss
or
inc
sahf
test
push
push
dec
(bad)
clc
and
retf
push
bound
sbb
xchg
pushf
(bad)
lea
xchg
jae
das
ins
(bad)
fld
das
adc
xchg
lds
ret
test
std
or
out
cmp
adc
jbe
push
pushf
fnstsw
int3
aaa
movs
jnp
push
inc
push
mov
mov
rol
cld
scas
cmp
lahf
movs
mov
shl
dec
cmp
mov
mov
mov
mov
mov
retf
add
mov
aaa
push
adc
cmp
rol
add
js
sub
xor
lock
or
pushf
ins
add
mov
mov
mov
mov
adc
and
movs
jl
(bad)
sti
xchg
add
dec
mov
add
jmp
in
xchg
fadd
cmp
cld
addr16
es
sub
or
adc
xchg
cs
(bad)
jns
xor
mov
xlat
pop
scas
xchg
push
call
(bad)
pop
retf
pop
sub
inc
out
sahf
sbb
repnz
dec
jo
cmc
fs
in
rol
jle
mov
inc
outs
rol
dec
jge
jmp
xchg
and
jecxz
and
cs
jno
dec
xor
arpl
mov
out
scas
and
int3
inc
sbb
fcomp
cli
fist
push
dec
cmp
lods
pop
xchg
sub
repnz
mov
or
adc
and
retf
xor
(bad)
test
enter
addr16
xor
mov
mov
(bad)
cmc
cmp
xchg
aam
mov
adc
cmp
out
bound
xor
mov
dec
inc
inc
loop
or
hlt
pop
mov
mov
in
xor
fwait
push
mov
dec
jo
stc
movs
cs
enter
mov
pop
mov
(bad)
fild
aas
ins
pop
test
and
sar
cld
cmp
mov
js
outs
lods
mov
and
xor
inc
ja
imul
xchg
lahf
mov
iret
or
inc
les
int3
cmps
push
and
jg
test
(bad)
sbb
cmp
xchg
(bad)
or
pop
neg
add
daa
(bad)
or
inc
dec
int
ins
jmp
sub
or
mov
aas
mov
fiadd
jnp
push
add
inc
popa
int3
push
jns
arpl
test
dec
mov
sbb
sub
cmp
lods
stc
and
push
pop
adc
mov
fsubr
dec
sar
jno
out
cmc
dec
cmps
or
lods
or
jg
rcl
paddw
add
mov
sbb
les
outs
aaa
inc
or
ret
xchg
les
mov
jns
mov
pop
add
test
mov
jmp
mov
xor
retf
clc
pop
sbb
mov
jl
ret
jp
mov
jmp
out
mov
jg
add
in
and
cld
mov
sbb
int3
cld
mov
mov
or
jle
(bad)
shl
mov
jae
pop
fimul
mov
inc
mov
hlt
push
cmps
dec
fisubr
xchg
stc
pop
ds
pop
add
add
sub
repnz
adc
dec
ret
stc
bound
call
leave
mov
(bad)
mov
sub
neg
imul
ds
mov
movs
push
mov
out
fadd
mov
jbe
fnstenv
adc
adc
icebp
and
or
ror
jg
cmp
inc
fidiv
sub
(bad)
adc
int3
imul
into
jp
imul
jb
test
jl
sub
sbb
out
imul
ret
js
mov
fidivr
in
js
pop
in
jmp
inc
rol
retf
xchg
movs
add
int3
jbe
gs
jns
pop
fdiv
add
adc
sub
sbb
das
pusha
daa
dec
push
cmps
dec
aad
adc
jno
leave
retf
xchg
sbb
mov
inc
xchg
mov
ret
mov
or
mov
in
xchg
and
push
lods
not
adc
scas
mov
fisubr
jnp
pop
pop
inc
push
xchg
pop
mov
push
pop
xor
add
inc
movs
jecxz
mov
xor
int
shl
jge
clc
xor
pop
dec
cld
fwait
or
mov
sbb
lods
stc
adc
imul
cmp
pop
into
xchg
xchg
mov
imul
loopne
cmps
(bad)
movs
cmp
xchg
xor
ficomp
jbe
push
mov
out
cmp
cli
fdivr
or
adc
inc
fdiv
push
pop
jo
mov
inc
and
mov
mov
pop
mov
jmp
cdq
fwait
inc
das
and
adc
in
test
jp
cmp
cmp
push
inc
sbb
jo
aas
stos
cmp
cs
bound
mov
cmp
add
scas
inc
jnp
push
inc
pop
enter
push
adc
es
push
dec
mov
or
std
stc
shr
pop
xor
ret
xchg
or
mul
adc
sub
cdq
adc
jmp
loop
xor
push
call
ds
pop
mov
pop
test
and
movs
and
xchg
fcomp
sbb
mov
inc
nop
cmp
(bad)
repnz
ins
mov
xor
enter
into
push
cmp
mov
fidiv
call
push
ret
in
push
jmp
sub
jge
sbb
xchg
xor
pop
add
scas
clc
loop
sub
jo
sbb
xchg
cmp
cld
icebp
mov
or
call
inc
mov
std
fidivr
lds
aad
mov
out
push
sbb
scas
adc
inc
adc
aas
(bad)
scas
and
in
icebp
add
mov
pusha
mov
xor
pop
adc
jno
xchg
scas
mov
outs
dec
outs
stos
cld
inc
jb
push
adc
pusha
pusha
pop
inc
push
xchg
xchg
imul
xor
adc
jmp
mov
popa
pop
push
jb
nop
cmp
clc
jmp
sub
add
xor
enter
fdivr
call
xchg
mov
or
loopne
mov
retf
add
inc
mov
int
xchg
cmp
cmp
add
and
sti
stos
stos
xlat
cmp
ins
sti
ins
xor
push
push
mov
shl
jle
rol
scas
lock
ret
cdq
push
pop
arpl
ret
mov
ja
mov
mov
int
aam
inc
jne
loopne
or
(bad)
jnp
iret
lea
jge
lock
cmp
mov
lods
sub
push
or
mov
sahf
test
aas
scas
sbb
imul
add
rcl
mov
shl
and
mov
sbb
popa
and
mov
ss
xchg
cwde
loope
mov
cmp
aad
sub
(bad)
xchg
jno
jo
jle
jg
push
pop
cwde
adc
xchg
test
add
test
mov
pop
dec
inc
outs
ss
inc
lods
fld
arpl
addr16
gs
and
or
fwait
int
mov
or
ffreep
lahf
sub
out
fs
(bad)
pop
test
sub
or
sub
xor
push
(bad)
in
outs
push
cwde
repz
mov
lds
jp
iret
adc
(bad)
(bad)
mov
sbb
into
cmp
xor
jmp
or
xor
adc
adc
mov
aas
stos
das
mov
adc
daa
cld
sub
nop
rol
mov
in
fcom
ja
js
mov
mov
sbb
xchg
inc
repnz
fisttp
into
addr16
or
sbb
nop
inc
out
stos
xchg
fwait
push
mov
test
fs
xchg
or
lods
call
(bad)
cmps
xor
es
clc
sub
xlat
xchg
xor
adc
das
add
mov
jge
add
mov
add
xor
mov
inc
xchg
add
(bad)
cwde
fwait
xchg
gs
or
jl
cmp
lods
jmp
push
push
data16
fild
xor
in
ficom
imul
jnp
movs
jo
stc
adc
add
xchg
xchg
sub
sub
cwde
inc
movs
fistp
mov
mov
scas
lock
xor
test
sub
cmp
mov
cmp
or
sbb
mov
inc
je
and
icebp
xor
sbb
jecxz
mov
dec
hlt
stos
add
jno
adc
xlat
pop
and
aaa
nop
enter
add
das
test
sbb
arpl
xchg
adc
mov
adc
retf
les
xchg
ret
addr16
repz
or
mov
adc
push
stos
popa
push
push
pushf
jmp
icebp
xchg
ins
imul
ja
stc
sub
dec
push
jno
repnz
lods
push
shl
xchg
shl
mov
push
mov
adc
je
ret
es
pushf
add
gs
mov
pop
cmp
add
inc
add
adc
add
add
inc
add
add
add
add
pop
add
addr16
xor
add
addr16
xor
aaa
add
add
add
inc
sub
add
add
add
imul
inc
popa
arpl
imul
lods
add
adc
add
add
add
add
add
pop
mov
pop
pop
add
add
pop
pop
ins
pop
pop
pop
test
inc
add
inc
add
add
add
inc
add
add
add
pop
call
pop
pusha
pop
cwde
pop
mov
pop
add
add
sub
inc
add
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
pop
js
inc
add
inc
add
add
add
add
(bad)
inc
add
add
add
add
pusha
pusha
mov
push
or
add
inc
add
add
add
add
pusha
cmp
add
push
movaps
or
xor
add
add
add
add
pusha
sub
add
push
clts
add
add
add
inc
add
add
add
add
pusha
and
add
push
or
add
sub
(bad)
inc
add
add
add
add
mov
push
adc
das
or
sub
add
add
add
mov
push
or
add
inc
add
add
add
add
pusha
sbb
add
push
add
add
add
(bad)
inc
add
add
add
mov
push
comiss
or
dec
add
inc
add
add
add
add
pusha
xor
add
push
or
add
sbb
add
add
add
add
pusha
sbb
add
push
sub
add
add
(bad)
inc
add
add
add
add
pusha
push
add
add
wrmsr
add
add
(bad)
inc
add
add
add
add
mov
push
or
add
add
push
(bad)
inc
add
add
add
add
pusha
sbb
add
push
add
add
add
add
add
add
add
pusha
pushf
mov
push
xor
sub
add
add
add
(bad)
inc
add
add
add
add
pusha
dec
mov
push
add
add
add
add
(bad)
inc
add
add
add
add
pusha
pop
mov
push
adc
add
add
or
push
add
inc
add
add
add
add
pusha
nop
mov
push
add
adc
add
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
and
(bad)
inc
add
mov
add
add
mov
push
adc
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
sub
add
inc
add
mov
ror
inc
add
mov
hlt
mov
add
inc
add
inc
add
pop
inc
sbb
add
(bad)
(bad)
inc
add
add
inc
add
add
add
mov
sbb
inc
add
add
add
add
add
ins
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
add
mov
inc
add
mov
sbb
add
sbb
add
add
add
lock
push
mov
add
add
ror
inc
add
inc
add
add
add
mov
add
add
hlt
mov
add
add
test
add
or
add
mov
int3
mov
add
add
test
inc
add
add
add
mov
adc
inc
add
add
add
mov
add
add
test
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
add
and
lods
and
inc
add
inc
add
add
and
mov
inc
add
and
jl
inc
add
ins
imul
add
add
fs
arpl
jo
imul
add
je
jb
popa
ins
imul
inc
popa
ins
imul
imul
imul
gs
imul
add
outs
jb
imul
inc
jo
popa
jb
jae
jae
add
fs
jns
add
jb
outs
imul
data16
imul
add
je
je
jb
popa
ins
outs
gs
add
gs
outs
popa
je
add
add
inc
addr16
gs
xor
add
popa
jae
popa
jns
add
imul
je
add
add
jb
outs
outs
imul
jae
imul
add
je
ins
jae
inc
popa
outs
imul
inc
gs
imul
je
add
add
push
imul
xor
jbe
ins
jb
ins
outs
add
inc
fs
xor
add
add
ins
outs
gs
add
add
arpl
data16
je
jbe
add
add
jb
jae
add
jmp
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
mov
or
push
call
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
lea
call
push
call
mov
mov
mov
mov
mov
lea
call
push
call
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
shl
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
imul
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
shl
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
imul
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
imul
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
imul
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
shl
mov
mov
mov
mov
mov
lea
call
push
call
push
pop
imul
mov
mov
mov
mov
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
cmp
jle
mov
mov
add
jo
mov
mov
jmp
mov
mov
sub
jo
mov
mov
cmp
jl
mov
push
push
push
push
lea
push
push
push
call
add
mov
mov
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
call
test
jne
mov
lea
push
mov
push
mov
push
mov
mov
push
call
mov
mov
jmp
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
lea
push
push
push
mov
mov
push
call
mov
mov
mov
and
or
mov
mov
jmp
mov
add
jo
mov
mov
cmp
jl
mov
lea
push
mov
mov
sub
mov
mov
push
mov
mov
push
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
lea
push
push
call
add
mov
jmp
mov
lea
push
mov
push
mov
mov
push
call
mov
mov
mov
mov
add
jo
imul
jo
mov
add
jo
mov
mov
mov
sub
jo
sub
jo
mov
mov
lea
push
push
mov
mov
push
call
mov
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
mov
mov
push
call
mov
lea
push
mov
mov
push
call
mov
mov
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
push
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
pop
call
push
push
push
call
mov
mov
mov
mov
xor
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
lea
push
call
call
mov
fwait
push
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
mov
and
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
mov
lea
call
jmp
mov
add
jo
mov
mov
cmp
jg
mov
lea
push
lea
push
lea
push
lea
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
lea
call
lea
mov
mov
lea
push
call
movsx
test
je
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
sub
jo
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
mov
lea
push
lea
push
lea
push
call
mov
lea
call
lea
call
mov
add
jo
mov
jmp
push
jmp
mov
and
test
je
lea
call
lea
call
lea
push
lea
push
push
call
add
ret
lea
call
lea
call
ret
mov
mov
push
call
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
mov
sub
jo
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
push
push
lea
push
call
lea
push
push
mov
mov
push
call
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
mov
and
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
lea
push
call
mov
add
mov
mov
lea
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
lea
push
call
mov
lea
call
movsx
test
je
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
lea
push
lea
push
call
mov
cmp
jne
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
mov
lea
push
push
call
lea
call
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
mov
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
push
push
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
pop
call
push
push
mov
push
call
mov
mov
mov
mov
xor
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
and
mov
mov
and
call
push
lea
push
lea
push
lea
push
call
push
call
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
mov
mov
movsx
and
cdq
mov
idiv
mov
call
push
lea
push
lea
push
lea
push
call
push
call
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
call
push
jmp
lea
call
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
movzx
and
movsx
test
je
movzx
imul
jo
movzx
or
or
call
mov
jmp
movzx
imul
jo
movzx
or
mov
mov
mov
mov
xor
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
and
mov
mov
and
mov
mov
mov
push
call
lea
push
mov
push
mov
mov
push
call
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
lea
push
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
lea
call
mov
mov
add
call
lea
call
lea
call
mov
push
mov
mov
push
call
lea
push
mov
mov
push
call
mov
mov
mov
mov
push
jmp
lea
call
lea
call
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
lea
call
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
mov
and
lea
call
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
add
jo
mov
lea
push
lea
push
lea
push
lea
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
push
pop
call
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
call
mov
fild
fstp
fld
cmp
jne
fdiv
jmp
push
push
call
fnstsw
test
jne
call
mov
mov
mov
lea
push
lea
push
push
call
add
jmp
fwait
push
jmp
lea
push
lea
push
push
call
add
ret
lea
call
ret
xor
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
lea
call
push
push
call
mov
lea
call
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
lea
call
lea
push
mov
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
fild
fstp
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
fld
fsub
fnstsw
test
jne
call
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
lea
push
mov
add
jo
mov
imul
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
and
mov
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
lea
push
mov
add
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
lea
push
mov
mov
push
call
lea
push
mov
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
movzx
mov
mov
add
jo
mov
movzx
cmp
je
or
and
jmp
jmp
movsx
test
jne
lea
push
mov
add
jo
mov
imul
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
movsx
mov
lea
push
mov
add
jo
mov
imul
jo
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
add
jo
mov
jmp
jmp
fwait
push
jmp
lea
push
lea
push
push
call
add
ret
lea
call
lea
push
push
call
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
xor
lea
call
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
mov
mov
mov
lea
push
mov
push
lea
push
lea
push
call
lea
lea
call
push
jmp
mov
and
test
je
lea
call
lea
call
ret
ret
mov
mov
push
call
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
mov
sub
jo
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
push
push
lea
push
call
lea
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
sub
jo
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
push
call
push
push
push
push
lea
push
push
push
call
add
and
push
lea
push
call
lea
push
push
mov
push
mov
xor
sub
mov
mov
add
push
push
call
call
lea
push
call
push
push
call
sub
jo
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
sub
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
add
jo
mov
sub
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
add
jo
mov
sub
mov
mov
mov
mov
mov
lea
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
neg
sbb
inc
neg
mov
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movsx
test
je
mov
cmp
jne
mov
add
jo
mov
mov
jmp
mov
sub
jo
mov
mov
jmp
push
mov
mov
mov
sub
jo
push
push
push
push
push
push
call
add
mov
mov
mov
sub
jo
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
mov
add
jo
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
jmp
push
jmp
lea
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
mov
lea
push
push
call
lea
push
push
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
or
mov
mov
mov
and
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
mov
mov
lea
push
call
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
add
jo
mov
mov
mov
and
cdq
mov
idiv
mov
call
push
push
pop
call
lea
mov
movs
movs
movs
movs
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
lea
push
call
lea
push
lea
push
mov
mov
push
call
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
call
lea
push
mov
add
push
mov
mov
push
call
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
add
jo
mov
mov
lea
push
mov
add
push
mov
mov
push
call
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
mov
push
mov
mov
push
call
mov
mov
lea
push
mov
add
push
mov
mov
push
call
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
fild
fstp
fld
call
mov
lea
push
mov
add
push
mov
mov
push
call
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
fwait
push
jmp
lea
call
ret
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
mov
and
lea
push
lea
push
call
mov
lea
call
push
jmp
mov
and
test
je
lea
call
lea
call
ret
lea
call
ret
mov
mov
push
call
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
push
push
push
call
mov
mov
mov
mov
xor
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
mov
lea
call
lea
lea
call
push
push
lea
push
call
push
push
lea
push
call
push
push
lea
push
call
mov
mov
lea
call
mov
mov
lea
call
mov
push
lea
push
call
lea
push
mov
xor
sub
mov
mov
add
push
mov
mov
push
call
lea
push
call
mov
mov
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
add
jo
mov
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
mov
mov
mov
lea
push
lea
push
mov
mov
push
call
lea
push
push
mov
mov
push
call
lea
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
and
mov
and
mov
mov
mov
and
mov
and
mov
and
mov
mov
mov
mov
and
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
mov
mov
push
call
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
mov
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
lea
push
call
lea
push
mov
xor
sub
mov
mov
add
push
mov
mov
push
call
lea
push
call
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
sub
jo
mov
mov
and
jmp
mov
add
jo
mov
mov
cmp
jg
mov
add
jo
mov
imul
jo
add
jo
mov
lea
push
push
mov
add
jo
push
mov
mov
push
call
lea
push
push
mov
add
jo
push
mov
mov
push
call
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
add
jo
mov
mov
mov
add
jo
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
mov
add
jo
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
push
mov
add
jo
push
mov
mov
push
call
mov
add
jo
push
pop
imul
mov
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
add
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
lea
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
mov
lea
push
push
call
lea
call
lea
mov
lea
push
push
call
lea
mov
lea
push
push
call
lea
call
lea
call
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
or
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
movsx
imul
jo
movsx
and
or
mov
mov
mov
mov
xor
leave
ret
call
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
lea
call
mov
and
mov
lea
call
lea
push
lea
push
mov
mov
push
call
lea
push
call
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
jmp
lea
call
ret
lea
call
ret
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
pop
call
lea
push
push
push
push
call
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
mov
mov
mov
mov
xor
leave
ret
push
mov
sub
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
mov
add
jo
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
push
push
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
pop
call
push
push
lea
push
call
mov
push
push
mov
push
call
push
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
mov
mov
mov
xor
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
mov
mov
push
call
lea
push
lea
push
mov
mov
push
call
lea
push
mov
add
push
mov
mov
push
call
lea
push
mov
add
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
cmp
jne
lea
push
lea
push
mov
mov
push
call
lea
push
mov
add
push
mov
mov
push
call
lea
push
mov
add
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
and
mov
mov
mov
lea
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
lea
push
call
lea
push
mov
xor
sub
mov
mov
add
push
mov
mov
push
call
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
push
push
call
add
jo
mov
mov
mov
mov
mov
lea
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
push
push
call
add
jo
mov
mov
push
lea
push
call
lea
push
mov
xor
sub
mov
mov
add
push
mov
mov
push
call
lea
push
call
lea
push
lea
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
and
mov
lea
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
mov
push
mov
push
mov
mov
push
call
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jmp
lea
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
ret
mov
mov
push
call
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
pop
call
push
push
lea
push
call
mov
push
push
push
call
mov
and
lea
push
push
push
push
push
call
call
mov
mov
mov
leave
ret
push
mov
push
pop
call
push
push
push
call
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
lea
lea
call
lea
push
call
mov
push
lea
call
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
mov
call
push
push
push
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
push
pop
call
lea
mov
movs
movs
movs
movs
call
mov
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
lea
push
call
mov
mov
call
lea
call
push
jmp
lea
call
ret
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
mov
mov
lea
call
lea
push
call
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
mov
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
call
mov
mov
imul
jo
mov
lea
push
call
mov
and
lea
push
push
push
mov
sub
jo
push
push
call
call
mov
mov
call
push
jmp
mov
and
test
je
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
lea
mov
movs
movs
movs
movs
mov
mov
mov
pop
pop
pop
leave
ret
call
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
call
push
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
fld
fstp
fld1
fstp
fldz
fstp
jmp
fld
fadd
fstp
fnstsw
test
jne
fld
fcomp
fnstsw
sahf
ja
mov
mov
lea
lea
call
jmp
fwait
push
lea
call
ret
mov
mov
pop
pop
pop
leave
ret
jmp
call
push
mov
push
pop
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
push
pop
shl
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
shl
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
shl
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
shl
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
shl
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
mov
call
push
pop
imul
mov
mov
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
lea
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
leave
ret
push
mov
push
push
push
mov
push
mov
push
pop
call
push
push
push
mov
mov
push
call
mov
call
mov
mov
movsx
test
jne
call
call
lea
push
call
lea
call
call
mov
mov
call
cmp
jne
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
push
pop
call
lea
mov
movs
movs
movs
movs
push
push
mov
mov
push
call
fnclex
mov
cmp
jge
push
push
push
push
call
mov
jmp
and
call
push
jmp
lea
call
ret
ret
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
lock
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
clc
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
or
add
push
or
add
add
add
add
push
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
and
add
push
or
add
fwait
add
sub
add
or
add
mov
add
retf
add
or
add
js
add
add
add
sbb
add
es
add
cmp
add
xor
add
push
push
add
pushw
add
je
add
or
add
push
add
mov
add
int3
push
add
fimul
add
lock
add
add
add
push
lsl
and
add
xor
add
inc
lsl
push
lsl
pop
lsl
push
lsl
mov
add
pushf
lsl
scas
lsl
cmp
add
cmp
add
in
add
add
xor
add
add
add
push
adc
add
adc
add
add
cmp
add
dec
adc
add
add
bound
add
ins
adc
add
add
test
add
xchg
adc
add
adc
add
adc
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
jne
inc
imul
pop
jbe
popa
push
popa
jb
jne
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
popa
jb
popa
jb
dec
outs
data16
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
outs
push
popa
jb
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
push
popa
jb
outs
jb
outs
imul
bound
outs
inc
jb
outs
jb
add
add
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
jbe
popa
push
popa
jb
jae
dec
je
add
pop
inc
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
inc
jb
inc
outs
outs
jae
jb
arpl
add
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
xor
add
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
jbe
popa
push
gs
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
jbe
popa
push
xor
jb
push
popa
jb
add
pop
popa
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
push
bound
outs
add
add
jbe
popa
push
popa
jb
popa
je
add
pop
pop
jbe
popa
dec
xor
jb
add
add
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
popa
jb
fs
add
jbe
popa
inc
jb
dec
outs
arpl
add
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
popa
jb
outs
jo
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
pop
jbe
popa
push
dec
xor
jb
add
pop
pop
jbe
popa
inc
jb
push
outs
ins
outs
arpl
add
add
jbe
popa
push
popa
jb
outs
jb
gs
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
