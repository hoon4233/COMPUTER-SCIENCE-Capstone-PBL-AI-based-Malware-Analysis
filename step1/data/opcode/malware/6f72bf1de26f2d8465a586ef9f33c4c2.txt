add
sub
jl
ins
scas
jno
outs
pop
xor
sbb
push
mov
sbb
pop
xor
imul
pop
in
pop
and
cmp
imul
sbb
xor
xor
imul
in
js
outs
dec
jl
add
ins
inc
nop
gs
push
dec
push
mov
test
pop
inc
int3
xchg
or
adc
pop
xor
imul
imul
rcl
dec
aas
pcmpgtw
xor
jae
dec
jo
xchg
sub
xor
xor
outs
inc
loopne
ins
fcom
mov
dec
aas
pcmpgtw
popa
sti
mov
push
stc
cwde
jb
sahf
sbb
in
in
sbb
jne
loop
and
test
mov
inc
pop
loop
cmp
rcr
in
inc
cwde
adc
and
and
loop
xchg
sub
mov
sbb
ins
lock
imul
lock
imul
xor
imul
xor
imul
or
inc
ss
iret
dec
out
ins
inc
loop
cmp
test
ror
cmp
mov
ins
aad
or
or
fcom
push
mov
xchg
loop
cmp
cmp
push
mov
xchg
cmp
in
imul
jo
xor
dec
or
hlt
pop
add
push
jns
jb
bound
sbb
push
fadd
fcomp
cwde
lods
push
cmp
sbb
pop
sbb
pop
cmp
imul
sbb
hlt
adc
inc
sbb
pop
xor
imul
add
repz
in
xor
jmp
pop
imul
xor
imul
div
mov
inc
cwde
jb
imul
xchg
aaa
test
cmps
rol
pop
xor
imul
mov
pop
test
dec
jo
cmp
imul
dec
aas
ud1
or
daa
dec
ds
dec
pop
xor
inc
jl
fild
xor
xor
fld
pop
pop
aas
test
cwde
jb
add
add
in
jl
pop
imul
lock
imul
stc
xchg
and
pusha
repz
in
xor
mov
pop
xor
stos
pop
gs
mov
fcom
cmp
addr16
sbb
mov
cmp
push
xchg
mov
call
(bad)
cwde
or
xor
pand
imul
xor
ins
int3
lock
imul
jecxz
mov
mov
imul
push
popa
loopne
push
jne
loopne
mov
xchg
sbb
loop
sbb
jne
loop
and
sub
inc
push
loop
enter
call
pop
loopne
mov
xchg
sbb
loop
lahf
inc
stos
xchg
sbb
mov
pop
jmp
mov
mov
xchg
cmps
xor
sbb
mov
xor
ss
imul
or
xor
imul
inc
pop
loop
and
in
movs
iret
in
out
jnp
pop
shl
xchg
stos
imul
in
cmps
xor
nop
sub
mov
pop
jmp
mov
neg
imul
rcl
shl
cs
out
addr16
out
cmps
iret
xchg
in
mov
mov
xchg
cmps
iret
in
int3
mov
mov
xchg
cmps
iret
xchg
in
movs
iret
in
shr
xor
pop
iret
in
aad
sbb
iret
lock
popf
out
cmps
iret
jnp
pop
xor
stc
fdivr
aad
cmp
dec
loop
cmp
sub
pop
jnp
pusha
mov
xchg
inc
and
lock
mov
test
pop
mov
push
or
xchg
test
fcmovu
xchg
pop
icebp
loop
jno
xchg
mov
call
mov
out
push
adc
int3
xchg
sub
mov
adc
push
imul
or
cmp
aas
btc
lahf
jne
imul
sbb
push
out
sbb
add
cmp
fistp
nop
adc
mov
and
and
cdq
(bad)
icebp
test
aaa
ficom
mov
stos
fcomi
jp
dec
pop
pop
push
xchg
sbb
repnz
cmp
iret
push
std
cwde
jb
loop
cmp
ins
inc
xor
sahf
cmp
mov
inc
mov
or
aas
btc
shr
scas
sbb
push
call
iret
push
std
cwde
jb
loopne
fild
loop
cmp
pop
or
and
aas
movs
jge
or
sbb
mov
pop
push
xchg
lahf
pop
sbb
push
out
sbb
add
ss
imul
or
arpl
rol
(bad)
xor
cmp
xor
in
int3
lock
imul
fsub
xchg
cmps
iret
xchg
sub
mov
jae
stos
jb
aas
mov
out
cmps
pusha
nop
xor
jae
aas
mov
out
cmps
mov
dec
mov
xchg
xchg
scas
xlat
xchg
sub
mov
shr
push
addr16
xor
(bad)
stos
outs
aam
call
inc
adc
shl
jno
xor
jae
inc
xor
cmp
iret
outs
popa
xor
jno
mov
mov
pop
mov
fsubr
test
inc
xor
arpl
rol
(bad)
xchg
dec
mov
(bad)
or
pop
xor
imul
pop
imul
cmp
ins
shr
in
push
mov
fsub
pop
iret
sub
popa
mov
mov
pop
outs
inc
xor
mov
dec
or
loop
cmp
mov
mov
imul
neg
imul
pop
dec
fwait
sbb
repz
repnz
loopne
mov
fcomp
cmp
data16
lock
sub
cmp
sbb
data16
stos
jb
add
in
ror
call
push
jmp
cmc
cwde
mov
outs
push
rol
cwde
test
stos
jb
loop
iret
sub
jl
xor
imul
xor
sahf
mov
imul
test
cwde
mov
outs
ins
imul
dec
pop
xor
mov
jne
loopne
data16
cmps
iret
in
imul
fdivr
aad
pop
pop
xor
add
dec
rcl
ret
int
pop
xor
push
sbb
xor
imul
lock
imul
repz
push
cwde
lock
imul
pop
imul
cmp
imul
fadd
cmps
iret
sbb
mov
xchg
cmps
iret
dec
xchg
sub
xor
add
sub
sbb
xchg
in
mov
fsubr
xchg
cmps
iret
cwde
lods
push
or
outs
fist
sbb
shr
sub
lods
pusha
nop
sub
mov
and
movs
mov
popf
pop
aas
lahf
xchg
sbb
and
aad
imul
call
add
dec
(bad)
pop
xor
sbb
loopne
push
fsubr
xor
loop
enter
mov
outs
mov
fmul
loopne
mov
imul
adc
daa
xor
loop
iret
dec
dec
shl
loopne
xbegin
xchg
cmps
mov
sbb
pop
fld
stos
jb
loop
ror
iret
andps
sbb
jne
pusha
cwde
inc
sub
add
loopne
in
xchg
cmps
mov
in
cmps
pusha
mov
cmp
or
dec
xor
imul
inc
adc
sbb
iret
in
sub
xchg
mov
call
fld
push
xchg
fld
push
jne
loop
les
sub
aas
cdq
push
cmps
iret
in
jge
fld
pop
xor
in
mov
in
shl
inc
aaa
add
fdivr
aad
cmp
dec
(bad)
cmp
arpl
fld
dec
xor
xchg
xchg
scas
xlat
xchg
sub
mov
sbb
pop
pop
sbb
pop
pop
sbb
jo
sbb
fcom
xor
jno
xor
dec
and
jne
loopne
mov
xchg
sbb
loop
fwait
pop
sbb
or
inc
pop
aas
mov
mov
pop
mov
add
sbb
pop
mov
sbb
ins
ret
push
fcomp
popa
call
fwait
gs
mov
mov
imul
rcr
aas
jnp
cwde
sub
sahf
xchg
cmps
into
in
xor
jmp
rcr
in
lods
iret
in
aad
fist
xchg
int3
in
add
(bad)
mov
ret
inc
cmp
les
repz
hlt
xor
loopne
cld
in
cmps
pusha
xchg
in
pushf
iret
in
or
jle
cmps
iret
cwde
lods
push
mov
add
lock
pop
xor
loopne
inc
imul
in
cmps
mov
in
cmps
pusha
mov
cmp
or
adc
outs
enter
mov
mov
xchg
cmps
iret
xchg
stos
aad
(bad)
xchg
cmps
iret
dec
add
ret
shl
dec
loop
iret
andps
sbb
jne
pusha
cwde
aas
sahf
(bad)
pop
xor
loopne
xbegin
xchg
cmps
mov
fsub
(bad)
in
cmps
pusha
mov
cmp
or
and
adc
push
sbb
add
into
in
cmp
in
fcomi
adc
lahf
ja
aam
iret
in
shl
mov
call
pop
mov
in
stc
lock
pop
pusha
nop
push
cmps
addr16
int3
adc
pop
xor
in
in
cmps
xor
fmul
sbb
jb
imul
pop
imul
iret
dec
sbb
pop
loopne
push
xchg
aam
iret
in
shr
sbb
fstp
in
pop
xor
push
xchg
sub
mov
in
xor
ins
lds
cwde
lods
push
aas
lods
in
repnz
in
sahf
xor
fld
jno
imul
into
in
pop
mov
fs
xor
add
lods
in
repnz
in
aad
push
mov
xor
nop
sahf
cmps
iret
cwde
lods
push
or
outs
jne
mov
xchg
cmps
iret
dec
add
mov
out
cmps
mov
popa
mov
xchg
mov
call
sahf
ret
cmps
into
in
fst
ins
nop
lock
imul
or
imul
not
ret
cmps
into
in
cmps
mov
xchg
cmps
iret
adc
fstp
daa
ins
nop
lock
imul
in
(bad)
in
cmps
pusha
jae
cli
jb
sbb
adc
fwait
dec
outs
imul
in
mov
push
imul
sbb
add
loopne
mov
in
shl
dec
loop
iret
dec
xor
cwde
aas
sahf
popf
pop
xor
call
pop
mov
in
shl
dec
loop
iret
dec
dec
shl
pusha
cwde
aas
sahf
lods
pop
xor
jmp
mov
sahf
mov
into
in
fwait
mov
mov
fisttp
sbb
icebp
sbb
mov
popf
dec
xor
setg
or
lahf
mov
xchg
cmps
iret
sbb
xor
xchg
or
in
shl
dec
loop
iret
dec
jne
(bad)
in
mov
in
or
fwait
sbb
nop
in
enter
or
sbb
xor
data16
pop
imul
in
shl
dec
loop
iret
mov
sbb
xor
sahf
mov
into
in
fwait
mov
xchg
pop
aas
sahf
call
in
cmps
pusha
nop
in
mov
in
or
xchg
sub
cmp
data16
inc
xor
shl
xchg
stos
mov
xchg
in
mov
in
or
in
ror
in
pusha
mov
xor
movs
xor
jmp
sbb
(bad)
pop
xor
xchg
or
in
ror
in
jl
pop
xchg
push
lock
or
sbb
call
mov
stos
fist
sbb
cmps
pop
stos
neg
xor
xchg
or
in
rcr
lods
push
mov
test
ret
pop
pop
sbb
shr
in
mov
mov
xchg
cmps
iret
xchg
stos
cmps
test
xchg
cmps
iret
xchg
in
movs
iret
in
or
fwait
sbb
xchg
in
movs
iret
in
or
call
lods
dec
mov
fmul
lahf
mov
xchg
cmps
iret
sbb
mov
xchg
cmps
iret
xchg
in
ror
in
aad
(bad)
xchg
cmps
iret
dec
in
mov
xchg
cmps
mov
jns
xlat
mov
call
in
mov
xchg
mov
xor
imul
in
cmps
addr16
push
cmps
addr16
loopne
int3
xchg
mov
rcl
xchg
shl
cwde
adc
xor
adc
xchg
xchg
sbb
loopne
mov
in
xor
jmp
std
cmps
into
in
ror
in
xor
imul
adc
push
xor
imul
repz
in
ror
xchg
or
in
ror
in
xor
pop
xchg
push
lock
(bad)
xor
imul
iret
sbb
xor
repz
lock
xor
call
jge
fst
xchg
cmps
xor
loopne
add
loopne
mov
in
fstp
xchg
cmps
mov
in
aad
jnp
cmps
iret
cwde
test
cld
rcr
imul
fmul
loopne
mov
imul
xchg
addr16
dec
sbb
cwde
aas
sahf
and
sbb
std
inc
in
cmps
xor
stos
aad
outs
xchg
cmps
iret
dec
add
ret
shl
dec
loop
iret
andps
sbb
jne
pusha
cwde
aas
sahf
nop
pop
xor
jmp
adc
mov
sbb
mov
xchg
cmps
iret
dec
add
scas
popf
cmps
into
in
fld
cmps
pusha
nop
push
cmps
addr16
sbb
rcl
xchg
shl
cwde
adc
xor
loopne
sbb
mov
cmp
mov
imul
in
pop
aas
lahf
hlt
pop
xor
in
jge
xchg
cmps
pusha
in
add
in
mov
in
xchg
cmps
mov
popa
shl
pop
loopne
js
xchg
cmps
mov
sub
xor
jmp
cmps
xor
lahf
mov
xchg
cmps
iret
sbb
xor
fdivr
iret
in
aad
out
cmps
iret
dec
add
pop
imul
iret
dec
or
jl
imul
in
nop
iret
pop
jmp
mov
into
in
in
js
xchg
cmps
mov
in
shl
xchg
in
pop
int
xchg
cmps
pusha
repz
push
sbb
pushf
cmp
stos
mov
imul
iret
sbb
dec
xor
loop
inc
in
cmps
pusha
nop
pop
cmps
adc
cmps
mov
in
fst
cdq
pop
cmps
iret
in
(bad)
pop
cmps
adc
stos
xchg
sub
pop
mov
in
rol
in
push
iret
sahf
test
aam
xchg
cmps
or
data16
out
cmps
mov
cdq
cmps
into
in
sub
iret
in
pop
mov
fsub
fstp
in
cmps
pusha
nop
pop
cmps
adc
in
in
cmps
xor
shl
dec
loop
iret
dec
popa
fpatan
jl
pop
xor
xchg
pop
inc
pop
loop
in
xchg
cmps
pusha
nop
pop
cmps
adc
fucomp
in
cmps
pusha
nop
pop
cmps
adc
fucomp
in
cmps
pusha
nop
pop
cmps
adc
fwait
inc
imul
in
rol
in
push
fldcw
iret
inc
aaa
add
fdivr
aad
xchg
xor
fld
pop
pop
cmp
xor
imul
xor
imul
addr16
or
neg
inc
addr16
cmp
pop
(bad)
fild
xor
scas
sbb
xor
imul
repz
pushf
xor
mov
iret
in
and
xlat
xchg
sub
mov
(bad)
jmp
outs
cmps
mov
fsubr
iret
in
cmps
(bad)
imul
nop
or
neg
dec
and
loopne
(bad)
cld
loopne
call
data16
lods
fsubr
iret
in
cmps
outs
inc
xor
mov
sbb
xor
cmp
aad
cmp
movs
jnp
ret
mov
int3
xchg
scas
cmps
inc
adc
mov
mov
xor
test
pop
xor
test
xor
jae
js
sbb
pop
pop
sbb
shl
xchg
xchg
scas
xlat
xchg
sub
mov
mov
mov
push
movs
and
add
mov
mov
test
sub
(bad)
(bad)
jb
push
sbb
lock
aad
stos
neg
xor
push
pop
xor
shl
cwde
scas
pop
data16
(bad)
jno
xchg
sub
xor
jmp
xchg
scas
loopne
sbb
outs
inc
xor
gs
mov
pusha
dec
aas
btc
out
inc
out
jo
outs
outs
pop
xor
(bad)
shl
loopne
iret
push
std
cwde
jb
jmp
adc
shl
retf
aam
imul
xchg
scas
push
jmp
pop
imul
retf
jge
loop
cmp
js
neg
push
xchg
call
pop
mov
nop
cmp
neg
pop
xor
outs
shl
scas
pop
xor
scas
(bad)
sub
inc
aaa
add
fdivr
aad
lods
pop
xor
add
dec
ror
push
gs
xor
ins
int3
lock
imul
xor
imul
xor
ins
int3
lock
imul
xor
xchg
pop
mov
in
ins
aad
sub
pop
imul
in
mov
mov
xchg
cmps
iret
xchg
stos
shl
loopne
ins
out
cmps
mov
lods
cmps
into
in
loopne
dec
imul
out
cmps
mov
pop
imul
into
in
cwde
aas
lahf
loope
xor
add
test
xchg
cmps
iret
rep
(bad)
xor
loopne
loopne
xchg
cmps
cmp
sbb
iret
scas
mov
into
in
dec
scas
sbb
call
sub
pop
mov
in
fst
xchg
cmps
pop
sbb
pop
pop
sbb
sbb
loopne
xchg
cmps
mov
(bad)
adc
or
xchg
mov
test
mov
fcomp
(bad)
outs
pop
xor
stos
shl
loop
mov
sbb
pusha
mov
out
cmps
mov
in
xor
jno
cmps
inc
out
xchg
int
out
cmps
mov
outs
jne
test
xchg
cmps
iret
repz
(bad)
xor
loop
in
xchg
cmps
(bad)
outs
pop
xor
imul
call
rcl
shl
jmp
mov
or
mov
in
in
in
cmps
pusha
jno
cmps
test
xchg
cmps
iret
in
cld
into
in
shl
xchg
(bad)
in
cmps
mov
lods
cmps
into
in
das
xor
test
nop
iret
in
shl
xchg
sub
mov
shr
cwde
cmp
xchg
cmps
iret
in
nop
iret
in
cmps
movs
xlat
xchg
cmps
iret
xchg
sub
mov
xchg
sub
mov
fisubr
xor
jmp
xlat
xchg
cmps
iret
in
lods
iret
mov
sbb
xor
call
pop
mov
xchg
sub
mov
inc
dec
xor
jmp
mov
(bad)
into
in
or
in
in
in
cmps
pusha
jno
cmps
inc
out
xchg
int
out
cmps
mov
sbb
in
in
pop
mov
fsub
fst
xchg
in
lock
in
or
xchg
in
lods
in
cmps
iret
mov
cmps
into
in
sbb
iret
in
fisttp
jg
pop
cmp
sbb
cmps
into
in
pop
mov
in
mov
mov
xchg
cmps
iret
xchg
stos
shl
jmp
xlat
xchg
cmps
iret
in
(bad)
into
in
cmps
movs
xlat
xchg
cmps
iret
xchg
sub
mov
xchg
and
sbb
cmps
xor
nop
sub
mov
xchg
mov
rcl
xchg
shl
nop
sub
mov
cmp
aam
in
aad
mov
add
sahf
shl
(bad)
xchg
cmps
iret
dec
add
outs
popf
cmps
movs
xchg
xchg
cmps
iret
xchg
sub
mov
test
shr
in
mov
mov
xchg
cmps
iret
xchg
stos
shl
nop
imul
xor
loopne
mov
shl
xchg
in
ror
in
aad
mov
in
test
xchg
cmps
pusha
jno
cmps
test
cld
ror
in
shl
xchg
(bad)
in
cmps
mov
test
pop
xor
push
pop
cmp
sbb
cmps
into
in
pop
mov
sbb
push
mov
in
cmps
iret
scas
shl
cld
in
cmps
mov
in
cmps
mov
jns
xor
mov
mov
xchg
cmps
iret
xchg
stos
shl
loop
mov
inc
or
cwde
test
fnsave
in
dec
out
cmps
pusha
xchg
in
test
in
or
xchg
sub
int3
in
shl
loop
les
loopne
xor
loopne
mov
inc
shl
xchg
in
fmul
in
xor
xchg
in
sub
in
or
in
aad
(bad)
xchg
cmps
iret
dec
add
outs
popf
cmps
movs
fwait
xchg
cmps
iret
xchg
sub
mov
xchg
sub
mov
cwde
jge
sbb
cwde
je
imul
iret
jno
aad
jg
cmps
iret
dec
in
fsub
xchg
cmps
pusha
xchg
in
test
in
or
scas
icebp
cmps
into
in
fstp
xchg
in
test
in
or
xchg
sub
int3
in
shl
xchg
pop
movs
fld
pop
pop
sbb
xor
aad
adc
sbb
imul
xchg
cmps
mov
sbb
xor
xchg
or
mov
imul
sahf
shl
test
mov
in
cwde
xor
imul
lods
push
imul
sbb
mov
xchg
cmps
iret
dec
add
inc
loope
cmps
mov
in
cwde
xor
imul
pop
in
pop
xor
xchg
or
xchg
sub
iret
in
pop
pop
in
pop
xor
xchg
or
xchg
in
test
xchg
cmps
fdiv
cmps
iret
cwde
lods
cmp
scas
test
lods
sbb
lock
pusha
fisttp
sbb
xor
xor
jmp
into
in
mov
icebp
xchg
cmps
mov
gs
in
pop
aas
lahf
sub
xor
add
clc
cwde
sbb
xchg
aam
int3
in
psubusb
and
in
pop
xor
ror
fwait
push
pop
xor
dec
xor
imul
mov
imul
push
pop
xor
pop
xor
imul
xor
in
(bad)
in
cmps
pusha
in
test
in
cmps
test
xchg
cmps
iret
repz
iret
in
pop
pop
les
lock
in
or
mov
cmps
iret
cwde
lods
js
in
pop
xor
xor
jae
test
cwde
in
cmps
pusha
repz
iret
in
pushf
cmp
xchg
cmps
xor
sbb
test
pop
imul
iret
dec
sub
hlt
pop
scas
fdiv
sbb
xor
loopne
iret
sahf
mov
fnsave
xchg
cmps
xor
imul
in
mov
nop
in
sbb
in
fmul
imul
movs
pop
xchg
cmps
iret
adc
std
pop
(bad)
in
cmps
add
jmp
adc
cwde
mov
in
fnsave
cmps
mov
in
mov
and
sbb
in
sub
sbb
mov
xchg
cmps
iret
dec
in
cwde
in
cmps
pusha
jae
test
cmp
stos
lds
sbb
pushf
and
push
movs
into
in
cdq
mov
xchg
sbb
loop
in
or
xchg
cmps
mov
popaw
mov
sbb
iret
sahf
mov
mov
and
pop
sbb
test
pop
imul
iret
dec
adc
hlt
pop
push
cmps
iret
sbb
cs
xor
jmp
into
in
mov
repz
cmps
mov
gs
mov
shl
pop
xchg
cmps
iret
sbb
movs
into
in
in
out
xchg
cmps
iret
sbb
mov
in
fdiv
aaa
xchg
fnsave
cmps
mov
in
mov
and
sbb
in
sub
xchg
in
lods
iret
in
or
in
xor
jmp
enter
mov
jns
repz
push
pop
xor
sub
rcl
pop
inc
loop
in
jo
xchg
cmps
mov
popaw
shr
sub
mov
in
mov
lea
iret
push
std
cwde
jb
adc
xchg
shr
sbb
push
mov
pop
jmp
mov
test
xchg
cmps
iret
repz
iret
xor
loopne
xbegin
xchg
cmps
mov
in
fwait
mov
in
push
imul
or
xor
imul
movs
clc
ja
dec
loopne
xor
loopne
iret
push
std
cwde
jb
call
pop
aas
lods
das
pop
pusha
xchg
cdq
fcomi
adc
aad
out
cmps
iret
dec
and
xor
push
xor
in
pop
int3
out
cmps
xor
xchg
or
cwde
sbb
xchg
in
cmps
int
xchg
or
adc
pop
xor
ins
int3
lock
imul
lods
das
pop
mov
xchg
in
movs
int3
in
or
mov
pop
xor
scas
push
xchg
sahf
mov
xchg
movs
iret
in
aad
out
cmps
iret
dec
in
into
out
cmps
pusha
jae
test
into
out
cmps
pusha
repz
xor
jmp
in
(bad)
in
fmul
imul
test
xchg
cmps
iret
jge
sbb
adc
sbb
and
nop
fs
mov
shl
loope
and
sbb
into
adc
int
out
cmps
or
pop
mov
sbb
mov
xchg
cmps
iret
sbb
pop
imul
fist
loopne
add
loopne
iret
push
std
cwde
jb
ss
stc
fldenv
gs
mov
fmul
cmp
addr16
xor
mov
and
outs
call
xor
mov
sahf
mov
div
push
xor
add
fcomp
loopne
sbb
test
cmps
sbb
neg
imul
addr16
into
xor
loopne
int3
cwde
dec
mov
mov
xchg
cwde
jb
imul
(bad)
std
loopne
les
jle
jo
add
xor
cmps
gs
mov
mov
add
adc
sbb
xchg
ins
pusha
mov
es
cwde
jb
pop
mov
cs
cmps
sbb
shr
shl
loopne
xchg
jecxz
sbb
inc
aaa
add
fdivr
aad
test
dec
shl
psrlw
shl
mov
pop
xbegin
stos
cmps
xor
jno
xor
jno
xor
jno
xor
sbb
iret
outs
popa
mov
mov
mov
sub
cmps
inc
jmp
icebp
movs
sbb
jne
loop
and
imul
lea
mov
sbb
add
loopne
pop
sbb
sbb
enter
shl
into
xor
xchg
pop
movs
fld
pop
mov
pop
adc
sbb
cmp
xor
imul
mov
xchg
sbb
loop
call
std
cwde
jb
loopne
xbegin
sub
mov
sbb
xor
sub
xor
imul
fwait
push
pop
cmp
sti
scas
pop
ss
stos
mov
lods
sub
pusha
jno
shl
push
push
fcomp
(bad)
cmps
iret
cwde
lods
dec
cmp
sbb
mov
fsub
sbb
cmp
sti
scas
pop
ss
jmp
ret
inc
cmp
sub
xor
popa
jne
sbb
iret
push
std
cwde
jb
loopne
sbb
loopne
aas
lods
sub
pusha
in
push
mov
out
test
repz
xor
jmp
sbb
mov
out
pop
ss
xchg
sbb
call
jecxz
sbb
cmp
sub
add
or
gs
xchg
aad
or
shl
loope
or
and
shr
sub
lods
aas
lods
sub
or
push
mov
xchg
cmps
iret
in
int3
lock
imul
pusha
in
movs
mov
dec
xchg
sub
xor
aas
mov
mov
mov
and
xchg
sub
xor
ss
imul
or
movs
cmp
sub
lahf
cwde
jbe
pop
iret
push
std
cwde
jb
loopne
add
loopne
mov
and
push
xor
cmps
inc
pop
xchg
sub
xor
add
inc
lsl
sbb
movs
fsub
xor
sbb
fmul
pop
xor
sahf
mov
test
fmul
ds
adc
daa
mov
pop
popf
shl
in
int3
lock
imul
not
push
pop
aas
sbb
pop
iret
outs
cmps
inc
adc
cmps
inc
setbe
pusha
jno
cmps
inc
or
iret
xor
rol
xlat
xchg
sub
mov
repz
xor
loop
enter
xchg
outs
imul
xchg
scas
pop
stc
fdivr
aad
test
xor
imul
ins
ret
inc
loopne
cmp
pop
(bad)
cld
loopne
fcom
imul
jecxz
lahf
pop
or
sbb
mov
imul
pop
imul
mov
xchg
cmps
mov
gs
in
pop
aas
lahf
les
sbb
mov
mov
repz
int
sbb
sbb
or
adc
fdiv
sbb
jne
inc
sbb
xor
sbb
pop
push
aas
mov
mov
mov
sbb
xlat
xchg
sub
mov
pop
cdq
or
jg
xor
jmp
adc
pop
scas
sbb
pop
sbb
mov
(bad)
fucomp
sbb
out
push
fistp
imul
pop
sbb
pop
xor
imul
xor
pop
xor
add
sbb
xor
or
xor
nop
sub
sbb
mov
push
loop
fdiv
sub
or
outs
dec
shl
inc
sbb
xor
data16
sbb
mov
sti
push
inc
xor
imul
nop
sub
sbb
gs
imul
sbb
sbb
outs
sbb
inc
iret
add
repz
int3
xor
loopne
mov
mov
inc
pop
add
repz
int3
xor
loopne
mov
fsub
sub
fdivr
std
pop
xor
imul
xor
push
pop
inc
lock
pop
fstp
scas
sbb
pop
sbb
mov
mov
mov
sbb
sbb
fistp
imul
pusha
dec
xor
mov
push
test
xor
imul
xor
test
pop
xor
scas
xor
sbb
mov
in
push
fsubr
pop
xor
sub
inc
iret
xor
dec
ret
imul
xlat
xchg
in
loopne
in
shl
cwde
sub
es
cmps
add
jno
cmps
inc
iret
loop
fdiv
sub
pusha
nop
sub
mov
dec
loop
shl
cmp
bound
sub
pusha
jae
pop
xor
fisttp
std
test
fcom
std
pop
xor
jb
xor
mov
mov
xchg
cmps
iret
xchg
scas
xor
repz
xor
loopne
lock
or
xchg
sub
xor
xchg
sub
xor
add
sbb
test
sbb
fcom
sub
jno
xor
jae
pop
xor
xchg
sub
xor
loopne
add
loopne
pop
sbb
pop
pop
jmp
mov
dec
adc
inc
or
pop
fdiv
sti
pop
xor
imul
and
ds
push
push
push
mov
ins
and
sbb
pop
pop
pop
cwde
sbb
jae
test
rcr
xor
imul
iret
call
je
sub
adc
test
xor
jmp
cmps
iret
push
std
cwde
jb
add
pop
imul
pop
add
pop
xor
xchg
fld
(bad)
sub
jae
test
rcr
sub
sub
sbb
mov
lock
jo
stos
or
(bad)
repnz
retf
push
pop
xor
sahf
mov
div
xor
add
loopne
pop
int
sbb
jno
xor
cs
in
jb
or
fdivr
aad
test
shl
psrlw
(bad)
mov
jle
ror
sub
pop
icebp
pop
imul
pusha
xchg
sub
pusha
repz
retf
xor
jmp
sbb
xor
(bad)
xor
sbb
xchg
fcmovnu
inc
loope
(bad)
(bad)
xor
imul
(bad)
sbb
push
mov
adc
sbb
xor
loope
iret
call
xor
jno
xor
xchg
sub
pusha
nop
sub
iret
imul
xchg
imul
sbb
outs
inc
xor
mov
push
xor
(bad)
xor
cmp
addr16
adc
mov
sbb
lock
xor
call
pop
pop
sbb
add
in
(bad)
addps
cwde
aam
into
in
sbb
loop
int3
in
cmps
iret
sahf
xchg
cmps
iret
in
in
sbb
movs
into
in
sbb
loop
int3
in
cmps
iret
sahf
xchg
cmps
iret
in
in
movs
sbb
pop
icebp
pop
imul
repz
int3
lods
int3
in
pop
mov
popf
movs
iret
in
sub
nop
cld
lods
int3
in
cmps
mov
xchg
cmps
iret
xchg
aad
enter
mov
popf
movs
iret
in
sub
nop
cld
lods
int3
in
cmps
mov
xchg
cmps
iret
xchg
(bad)
enter
mov
xchg
movs
iret
in
shr
in
mov
mov
xchg
cmps
iret
xchg
stos
fisttp
pop
sbb
mov
(bad)
out
cmps
mov
in
fisttp
pop
sbb
mov
(bad)
out
cmps
mov
in
cmps
xor
xchg
mov
call
repz
cmps
iret
sbb
cmps
push
sbb
mov
add
fsub
xchg
cmps
pusha
xchg
in
lods
int3
in
or
in
aad
out
cmps
iret
dec
add
fs
xor
xchg
or
mov
xor
pusha
cwde
aas
lahf
(bad)
pop
xor
in
enter
bound
mov
adc
shl
imul
xor
in
(bad)
xchg
cmps
pusha
dec
sub
jmp
cmps
iret
cwde
xchg
cmps
inc
or
mov
xchg
imul
sbb
fnstcw
ins
pop
icebp
pop
imul
iret
sbb
repz
shl
sbb
add
loopne
add
and
sbb
mov
xchg
cmps
iret
fucomp
pop
(bad)
xchg
cmps
xor
ins
pop
icebp
pop
imul
(bad)
xchg
cmps
pusha
dec
xor
repz
xor
shl
xchg
in
mov
repz
pop
mov
in
psubusb
pop
xor
test
pop
xor
xchg
or
arpl
xor
pusha
cwde
aas
lahf
enter
add
in
pop
xor
xchg
or
sbb
xor
loopne
shl
cmps
mov
xchg
sub
mov
pop
imul
out
cmps
mov
iret
imul
in
pop
inc
add
pop
addr16
fwait
bound
sub
sbb
xor
nop
in
test
in
sahf
mov
and
mov
repz
cmps
test
xchg
cmps
iret
xchg
in
mov
in
or
jnp
xor
jmp
xchg
loopne
xor
imul
out
xchg
cmps
iret
dec
aas
mov
xchg
imul
push
ins
cdq
jb
shr
imul
repz
add
lock
and
sahf
cmp
sbb
ffree
out
cmps
pusha
dec
add
outs
js
fsubr
pop
xor
stos
imul
lock
cmps
iret
sub
scas
rcl
xchg
shl
inc
aaa
add
fdivr
aad
test
loop
cmp
mov
arpl
iret
push
ins
cdq
jb
jmp
bound
or
pop
pop
adc
add
imul
and
xor
jae
test
sbb
shl
sbb
and
sbb
xlat
xchg
sub
mov
outs
xchg
pop
xor
sub
add
xor
mov
jne
loopne
iret
push
ins
cdq
jb
scas
sbb
(bad)
imul
in
scas
sbb
leave
sbb
icebp
xor
imul
mov
dec
in
retf
pop
mov
pop
jecxz
inc
xchg
sub
mov
in
pop
pop
adc
sbb
xor
stos
shl
sbb
mov
pop
imul
fdivr
aad
(bad)
add
dec
jl
enter
mul
ins
pop
icebp
pop
imul
outs
popa
mov
in
cmps
mov
popa
imul
pop
test
xor
scas
pop
ins
fdivr
aad
cmp
addr16
sbb
pop
cmp
sub
imul
xor
rol
cwde
test
fbstp
sbb
sbb
icebp
pop
imul
pop
test
xor
scas
xor
dec
and
hlt
adc
lahf
pop
cmp
add
sub
mov
nop
imul
aas
lods
aaa
sbb
lods
aas
sbb
rcl
pusha
mov
lods
mov
xchg
push
xchg
push
xchg
test
cmp
mov
mov
outs
arpl
lahf
sub
push
ins
cdq
jb
data16
outs
ins
data16
ins
out
loop
mov
enter
addr16
inc
mov
or
rol
(bad)
sti
push
jns
fincstp
aad
pop
xor
ins
pop
icebp
pop
imul
iret
inc
add
sbb
pop
fadd
out
fdiv
sbb
neg
imul
push
inc
xor
out
jbe
cmp
mov
popf
imul
popf
loope
xor
xchg
pop
xor
sub
fdivr
xor
add
jmp
fdiv
sbb
iret
lods
jmp
mov
outs
dec
cmps
xor
xchg
xchg
scas
xlat
xchg
sub
mov
repz
pushf
cmp
scas
imul
push
ins
cdq
jb
call
pop
pop
sbb
mov
out
cmps
mov
popa
imul
fdivr
aad
test
sbb
dec
loop
cmp
scas
shl
imul
in
ror
in
mov
mov
xchg
cmps
iret
xchg
scas
cmps
xor
cwde
int3
movs
into
in
pop
mov
pop
and
int3
in
cmps
jo
jg
lods
out
cmps
iret
in
movs
into
in
shl
loopne
lods
sbb
lods
into
in
pop
xor
imul
iret
sbb
ffree
in
cmps
pusha
jno
xor
xchg
in
movs
into
in
or
cmp
xor
call
mov
xchg
cmps
iret
dec
xchg
cs
(bad)
xor
pusha
cwde
inc
add
pop
pop
sbb
ffree
in
cmps
pusha
in
pop
fdivr
out
pop
xor
imul
enter
neg
das
pusha
xor
imul
sbb
xchg
adc
pop
xor
mov
mov
xchg
cmps
iret
xchg
scas
pop
outs
inc
mov
loopne
or
fmul
out
pop
xor
btc
lahf
jne
cli
inc
ret
push
call
pop
xor
sbb
xor
mov
in
shl
xchg
cmp
mov
xor
mov
in
cmps
mov
popa
shl
xchg
cmp
neg
pop
mov
mov
arpl
shl
(bad)
loopne
mov
pop
mov
dec
(bad)
ins
and
nop
sub
mov
dec
xchg
xor
jae
push
xor
in
in
hlt
xchg
cmps
pusha
in
pop
fmul
pop
xor
test
pop
xor
gs
jb
rcr
sbb
xchg
in
pop
icebp
pop
imul
(bad)
jle
shl
loopne
enter
into
in
or
es
cmps
iret
xchg
stos
shl
cmp
mov
call
arpl
dec
cmps
iret
in
pushf
and
jmp
inc
mov
jmp
sub
jno
or
pop
xchg
cmps
iret
cwde
lods
push
add
add
pop
test
xor
pop
call
push
pop
inc
pop
push
pop
inc
pop
add
repz
iret
in
pushf
cmp
test
pop
mov
sub
out
dec
pop
test
xor
adc
mov
xchg
inc
sbb
fdivr
loopne
mov
pop
push
cmp
sbb
sbb
sbb
out
inc
pop
xor
scas
sbb
xor
jp
fsubr
cmps
iret
inc
loop
int3
xchg
stos
shl
cmps
jne
loop
les
sub
dec
(bad)
scas
sbb
pop
imul
xor
cmp
mov
dec
sbb
hlt
adc
call
test
xor
fisttp
sbb
add
sbb
sbb
xor
popa
dec
rol
(bad)
mov
movs
adc
fisttp
pop
pop
xor
ins
pop
icebp
pop
imul
iret
sub
imul
neg
popa
cmps
inc
pop
add
cmp
pop
push
fcom
xor
popa
cmps
inc
pop
sbb
enter
neg
imul
sbb
fdivr
pop
xor
ins
pop
icebp
pop
imul
lock
and
(bad)
cld
loopne
int3
xchg
scas
pop
outs
shr
or
ror
xlat
mov
rcr
shl
dec
cmp
jb
loopne
add
loopne
push
fsubr
fdiv
sbb
xor
pop
dec
dec
and
mov
imul
xchg
imul
xchg
scas
cmps
xor
jno
ror
push
in
pop
xor
cmp
mov
imul
pop
adc
xor
and
in
fcomi
or
jo
stos
pop
xor
loopne
add
loopne
pop
push
xchg
das
cmp
stos
fidiv
sbb
inc
sub
pop
mov
frstor
ja
cmp
repz
jmp
sbb
shl
sub
mov
jno
pop
iret
push
ins
cdq
jb
out
ja
cmp
addr16
iret
in
pushf
and
sub
and
imul
jecxz
int3
xor
imul
fcomp
gs
in
mov
mov
fisubr
pop
aas
lods
out
into
xor
imul
xor
cmp
xor
psubusb
lods
dec
add
adc
sahf
mov
test
fdivr
aad
test
ds
ins
fild
mov
(bad)
sub
imul
cmp
push
retf
in
shl
xchg
aas
sbb
push
ins
cdq
jb
call
pop
repz
mov
cmp
jmp
push
xor
scas
sbb
data16
iret
in
fdiv
push
sbb
xor
xor
jmp
pop
iret
ins
ins
mov
call
iret
in
shl
cwde
xchg
pop
inc
es
pop
xor
sub
jecxz
mov
in
xchg
cmps
imul
pop
pop
iret
lods
jmp
mov
out
xchg
cmps
mov
cmps
inc
pop
and
(bad)
cld
loopne
les
sbb
data16
iret
in
push
lock
je
inc
pop
xchg
cs
xor
hlt
pop
xchg
cs
scas
fdiv
sbb
mov
repz
movs
iret
in
imul
mov
pop
xor
stc
fldcw
gs
mov
fadd
cmp
movs
cmp
adc
loopne
sbb
loopne
iret
push
ins
cdq
jb
jmp
jno
xor
jno
mov
call
xor
sbb
enter
div
mov
fwait
imul
push
lds
mov
imul
cmc
add
pop
test
iret
cs
loopne
sbb
xor
pop
imul
neg
popa
cdq
jb
imul
in
mov
jne
loopne
add
sub
iret
push
ins
cdq
jb
loopne
(bad)
cld
loopne
aam
scas
sahf
xor
sbb
mov
push
fsubr
xor
add
sub
pop
fcmovne
pop
xor
jmp
sbb
cmps
aas
lods
sub
or
addr16
or
sbb
in
jb
imul
mov
or
xor
ficomp
xor
imul
jo
cmp
xor
sbb
xor
loopne
mov
push
or
sbb
cmps
iret
outs
fldenv
xor
sbb
xor
imul
jo
out
jne
add
mov
pop
imul
mov
jge
add
sub
jno
aad
push
imul
pop
sbb
pop
fsubr
stos
ror
sub
loope
sbb
sub
xchg
cmps
outs
inc
xor
mov
dec
shl
psrlw
(bad)
je
call
imul
xchg
scas
cmps
xor
call
mov
mov
sbb
(bad)
pop
imul
sbb
xor
sub
jl
pop
xor
ins
cdq
jb
call
pop
mov
sbb
pop
pop
pop
sub
xor
xor
repz
(bad)
sbb
sahf
mov
fdivr
mov
call
jb
loopne
sbb
loopne
pop
sbb
add
sbb
ftst
ins
pop
icebp
pop
imul
jne
loopne
aas
lods
ins
push
icebp
pop
imul
mov
dec
aas
shr
ror
pop
pop
dec
sar
sbb
int3
lock
imul
inc
pop
imul
sbb
jge
xchg
sub
cwde
dec
cld
scas
pop
imul
sbb
xor
pop
imul
sbb
shl
fsubr
pop
imul
jecxz
xchg
sbb
sbb
adc
pop
xor
data16
sbb
or
adc
and
sbb
adc
dec
cdq
jb
jmp
pop
jo
add
sbb
pop
add
jmp
cwde
js
mov
sub
xor
int
jno
adc
sbb
cmp
pop
lahf
pop
or
pusha
xor
imul
xchg
arpl
sbb
sbb
pop
imul
rcl
bnd
xor
xchg
pop
xchg
test
pop
fstp
ins
int3
lock
imul
add
sbb
sbb
rol
int3
mov
sbb
sbb
mov
sub
scas
xor
pop
sbb
inc
xor
imul
icebp
fwait
fs
mov
or
int3
mov
sbb
cwde
(bad)
imul
mov
fdivr
adc
pop
mov
imul
fscale
xchg
cmps
iret
in
ins
int3
mov
sbb
cwde
(bad)
imul
mov
fdivr
sbb
pop
xor
imul
in
ins
int3
mov
sbb
cwde
fnstcw
mov
fdivr
sbb
pop
xor
imul
sbb
cmps
xor
in
cld
scas
pop
imul
xor
imul
xor
push
pop
mov
add
shl
loopne
mov
std
xlat
jno
sub
xchg
arpl
sbb
cwde
test
(bad)
jno
or
sub
push
mov
xor
imul
xor
int
jno
sub
sbb
xor
cwde
ins
cld
scas
pop
imul
call
xor
sbb
imul
sbb
push
movs
xchg
sub
call
rcr
xchg
stos
leave
sbb
adc
pop
cmp
add
in
fst
fisubr
pop
or
cs
imul
dec
stos
sbb
fwait
fs
mov
es
pop
movs
fld
pop
fld
enter
imul
lock
cmps
xor
mov
sahf
mov
icebp
fwait
fs
mov
push
pop
cwde
fld
pop
xor
imul
mov
lahf
lods
pop
xor
loopne
jbe
imul
mov
fisub
xor
ds
sbb
hlt
mov
outs
shl
data16
jne
push
cwde
xor
imul
fwait
adc
jo
outs
cmps
xor
call
xchg
gs
imul
pop
imul
cwde
push
xor
jmp
or
push
jmp
lock
dec
in
ins
sub
mov
shr
mov
xchg
imul
aas
lods
ins
sub
pop
imul
(bad)
fwait
adc
xor
in
imul
mov
cwde
dec
xor
jmp
lock
rcr
fsub
pop
mov
jecxz
sbb
in
mov
pop
imul
or
and
mov
cwde
dec
mov
pop
imul
nop
jl
dec
pop
imul
and
and
xor
imul
jno
mov
pop
cwde
jo
outs
sar
sub
xchg
repz
loopne
popa
dec
ds
cmp
rol
fld
pop
pop
sub
xor
loopne
pop
mov
and
mov
dec
sbb
loopne
pop
imul
xor
add
fmul
pop
xor
add
fcomp
pop
xor
loopne
(bad)
cld
loopne
int3
xchg
scas
xor
(bad)
pop
repz
and
sbb
loopne
pop
imul
mov
sbb
arpl
jecxz
push
test
ret
sahf
mov
repz
int3
lock
imul
mov
push
aad
jb
scas
sbb
xor
sub
mov
sbb
sbb
neg
sbb
sbb
je
imul
xchg
stos
fist
imul
xor
cwde
or
xor
stos
fist
imul
in
sbb
xor
imul
xor
std
cwde
jb
scas
sbb
xor
sub
mov
sbb
xor
mov
rcl
in
mov
imul
repz
xor
outs
pop
mov
push
jmp
in
sbb
rcl
in
lods
dec
add
pop
int
pop
sbb
pop
pop
pop
add
outs
lea
mov
outs
int
jne
cmp
xor
repz
xchg
pop
movs
fld
pop
pop
sbb
xor
jno
xor
in
mov
xor
imul
xor
xchg
sub
pusha
in
call
iret
push
jmp
sbb
in
imul
clc
loopne
mov
stos
pop
outs
inc
mov
fcmovnu
aas
scas
sbb
adc
imul
jmp
adc
mov
popf
pop
add
loopne
fcom
add
sbb
sbb
fmul
sub
jne
cmp
iret
in
push
iret
push
leave
(bad)
jno
loop
(bad)
lock
jne
loopne
aam
sub
(bad)
jle
shl
loopne
int3
shr
out
adc
mov
fcom
pop
iret
outs
popa
xor
in
enter
(bad)
and
inc
xor
gs
mov
fcom
cmp
addr16
sbb
mov
(bad)
sub
gs
sbb
inc
das
data16
je
push
pop
inc
xor
je
imul
imul
sub
gs
sbb
inc
or
je
ins
gs
sbb
aas
lahf
arpl
sbb
sbb
xor
sqrtps
xchg
push
xchg
ins
stos
clc
pop
imul
adc
iret
xor
imul
and
push
call
loopne
mov
imul
jg
repnz
adc
retf
pop
aas
lods
jge
or
sbb
mov
adc
pop
ss
lods
sub
pop
(bad)
xor
nop
nop
jb
cmp
aas
lods
cmp
pop
leave
jge
and
or
fcomp
pop
xor
xchg
shl
in
and
push
jno
sbb
mov
ins
shl
loop
and
xchg
fcmovnu
pop
loop
les
imul
in
cwde
and
push
pop
push
shr
pop
xor
fdiv
push
cmps
iret
push
std
cwde
jb
jmp
or
jecxz
fmul
xchg
fcmovnu
sbb
fs
sbb
mov
fwait
push
pop
xor
pop
ror
cwde
sbb
sbb
pop
xor
ror
cwde
sbb
or
jns
and
pop
jmp
sbb
mov
push
pop
inc
jle
mov
xor
ror
cwde
sbb
dec
loopne
mov
push
or
imul
pop
data16
xor
push
mov
sbb
aaa
sbb
sbb
mov
xchg
shl
in
and
push
jno
sbb
sbb
mov
jecxz
mov
nop
cmp
mov
sbb
or
push
adc
push
loopne
mov
imul
sbb
xchg
fcmovnu
sbb
fs
mov
adc
pop
ss
push
sub
es
pop
xor
sbb
pop
xor
mov
ins
imul
or
cwde
sbb
pop
xor
imul
xor
data16
inc
xor
mov
or
xchg
pop
movs
fld
pop
mov
sub
data16
pop
mov
sbb
in
pop
xor
sbb
nop
sub
sbb
and
pop
xor
jmp
pop
imul
sbb
fs
sub
or
inc
lahf
cmps
iret
inc
xchg
pop
movs
fld
pop
aas
lods
ins
inc
or
outs
dec
fstp
imul
sbb
sbb
mov
out
pop
inc
pop
imul
cmp
pop
das
xchg
ins
inc
mov
sbb
sbb
jmp
pop
loopne
sub
mov
dec
popf
shl
sbb
pop
imul
mov
xchg
rol
sbb
pop
jmp
sbb
fst
cmp
mov
fld
pop
mov
xchg
jno
xchg
cmp
fcmovnu
pop
loopne
enter
mov
sbb
data16
or
iret
das
jl
clc
pop
imul
outs
inc
mov
loopne
imul
dec
aas
psubusb
nop
cmps
iret
fucomp
mov
fdiv
imul
sahf
mov
mov
xchg
movs
fld
pop
mov
mov
and
ffree
hlt
xchg
cmps
mov
ins
test
pop
imul
les
push
xchg
jmp
sbb
sbb
fild
out
movs
call
cld
lock
in
xor
adc
push
cmp
dec
add
movs
mov
cmps
iret
xchg
ins
int
popf
sub
lods
cld
stos
(bad)
xchg
xor
add
mov
mov
out
in
cmps
add
mov
jno
adc
iret
xchg
ins
dec
shl
mov
call
sahf
call
fwait
push
pop
pop
shr
pop
xor
adc
mov
xchg
movs
call
mov
daa
jl
dec
pop
imul
sbb
movs
call
mov
(bad)
mov
movs
iret
mov
iret
in
int3
lock
imul
iret
sbb
cmps
sbb
fsubr
nop
cmps
iret
xchg
in
sub
xchg
cmps
xor
nop
cld
mov
in
shl
fiadd
shr
push
imul
hlt
xchg
cmps
add
cmp
jns
xor
stc
inc
sbb
neg
imul
cmps
xchg
mov
in
fpatan
sbb
xor
hlt
lods
(bad)
xchg
cs
in
fsubr
in
or
dec
sbb
xor
ins
int3
lock
imul
iret
sbb
xor
in
pop
iret
scas
test
call
or
cmps
iret
cwde
lods
push
mov
outs
or
xchg
fwait
mov
iret
sbb
lds
pop
pop
cmps
mov
fimul
rol
jmp
hlt
xchg
cmps
inc
adc
fxch
sbb
xor
fxch
in
pop
xor
shr
push
imul
lds
fwait
xor
imul
sbb
out
iret
outs
xchg
mov
loope
cmps
imul
imul
iret
ss
cmps
xor
push
fstp
hlt
xchg
cmps
aas
popf
xor
iret
in
pop
movs
fld
pop
iret
scas
mov
iret
in
jns
sbb
jo
imul
in
cdq
rcr
loop
and
xchg
cld
lods
(bad)
xchg
fist
sbb
int
hlt
xchg
cmps
icebp
stc
imul
fiadd
pop
jge
loop
and
xchg
cmps
mov
in
mov
fstp
test
xor
and
xor
jmp
lods
(bad)
xchg
(bad)
sbb
xor
cmps
xor
fwait
aam
out
in
pop
inc
inc
add
mov
sahf
leave
xchg
in
call
imul
iret
cwde
stos
and
sbb
(bad)
sahf
leave
xchg
in
int
lds
pop
xor
xchg
shl
nop
cld
int3
out
in
pop
xor
xchg
shl
nop
in
mov
in
shl
jno
aad
mov
xchg
in
in
les
pop
xor
xchg
popa
mov
mov
iret
outs
sub
mov
mov
iret
xchg
in
in
out
in
pop
mov
mov
iret
fwait
aam
out
in
pop
inc
fadd
pop
xor
cld
in
out
in
cdq
ficom
cmp
movs
mov
adc
pop
xor
xchg
int
les
pop
movs
fld
pop
aas
lods
cld
stos
(bad)
xchg
cdq
rcr
loop
in
les
xchg
in
push
and
adc
int
hlt
xchg
cmps
icebp
stc
imul
push
cdq
and
(bad)
hlt
xchg
cmps
pop
sbb
xor
imul
mov
iret
adc
pop
xor
in
bound
sbb
mov
xchg
or
outs
data16
push
pop
xor
jb
xor
loop
(bad)
hlt
xchg
cmps
mov
sbb
(bad)
in
xor
loopne
aam
xchg
cmps
neg
imul
iret
push
loop
aam
xchg
cmps
mov
sbb
mov
fwait
push
pop
inc
add
push
or
sbb
mov
fwait
push
pop
inc
adc
test
rep
fmul
sbb
cmps
xor
adc
int
lds
rol
jmp
cmps
xor
pop
or
outs
jg
xor
push
mov
xchg
sub
mov
mov
sahf
mov
nop
in
lods
(bad)
xchg
pop
enter
daa
xchg
jns
or
sbb
iret
in
push
xchg
test
xor
xchg
cmps
neg
fmul
push
sub
xor
imul
es
xor
imul
xor
fmul
ins
pop
xor
imul
lods
in
sti
out
in
push
lock
fmul
push
ffree
hlt
xchg
cmps
pusha
in
test
in
cmps
test
mov
iret
repz
mov
cmp
aam
out
in
pop
inc
pop
jmp
nop
cld
lods
(bad)
xchg
cdq
rcr
loopne
icebp
repnz
nop
in
dec
fadd
xchg
cmps
mov
out
xchg
(bad)
xchg
pop
xor
imul
lock
imul
iret
in
push
xchg
add
pop
shr
pop
xor
ja
in
pop
outs
inc
mov
or
loop
cmp
sbb
fimul
call
pop
iret
push
std
cwde
jb
out
jne
add
and
pop
fdiv
add
xor
sub
pop
fstp
adc
jns
jno
imul
cmp
dec
mov
ins
dec
inc
pop
imul
adc
cwde
and
dec
pop
and
sub
xchg
xchg
scas
xlat
xchg
sub
mov
dec
loopne
popa
dec
shl
psrlw
(bad)
fisubr
jo
or
imul
xchg
scas
cmps
xor
adc
sbb
iret
das
ins
dec
inc
pop
imul
xor
adc
sbb
mov
ins
dec
inc
pop
imul
adc
cwde
and
ins
pop
and
sub
sbb
fist
out
jne
add
and
sub
xchg
xchg
pop
enter
stc
fdivr
aad
test
sub
push
xchg
sub
(bad)
push
xchg
xchg
scas
xlat
xchg
sub
mov
fld
pop
mov
ins
xchg
jb
imul
sbb
mov
jne
psubq
sahf
sub
push
test
ror
sbb
pop
xor
add
or
sbb
repz
sub
sbb
pushf
cmp
sub
pusha
jno
xor
jae
or
pop
sbb
sti
sub
and
xor
mov
jne
loopne
pop
sbb
add
sbb
shl
ins
int3
lock
imul
sbb
xchg
repz
loopne
mov
jno
movs
sbb
pop
call
pop
iret
push
std
cwde
jb
pop
cmps
fstp
jge
xor
sahf
mov
or
jns
jno
imul
xor
cmps
xor
xchg
cdq
scas
(bad)
xchg
sub
mov
sbb
xlat
xchg
sub
iret
das
ins
dec
inc
pop
imul
xor
mov
jne
xchg
ins
xor
rep
xor
sbb
dec
xor
imul
inc
pop
imul
fst
dec
xor
imul
inc
pop
imul
cdq
sbb
aaa
sbb
xor
cs
cmp
dec
push
imul
sbb
fist
sbb
scas
in
imul
mov
push
pop
xor
pop
inc
mov
mov
jne
pop
iret
push
std
cwde
jb
ss
stc
fdivr
aad
test
ds
jg
adc
fsubr
scas
sbb
imul
sbb
pop
pop
sbb
pop
fmul
add
mov
loopne
add
loopne
push
fsubr
xor
out
xor
dec
cmp
ficomp
scas
or
imul
pusha
in
pop
cli
pop
imul
xor
pop
pop
cli
pop
imul
lock
je
xor
sbb
mov
sbb
xlat
xchg
sub
mov
in
mov
sbb
neg
test
lahf
jne
jns
xor
call
pop
iret
push
std
cwde
jb
in
fmul
sbb
xor
sub
add
xor
sbb
cmps
xor
cmp
sub
pop
fstp
or
jns
jno
imul
xor
(bad)
jg
pop
xor
sbb
into
cwde
xchg
cmp
leave
xchg
pop
movs
fld
pop
push
cwde
adc
push
outs
js
fdivr
pop
xor
sub
mov
lods
sub
pop
fstp
add
jns
jno
ror
xlat
xchg
sub
mov
in
out
loopne
mov
dec
sub
sub
push
std
cwde
jb
in
ror
pop
aas
lods
sub
pop
fstp
xor
jns
jno
cmp
jmp
pop
fcom
add
add
xchg
cmps
mov
test
xor
ss
imul
or
inc
dec
aas
btc
out
aaa
push
add
xor
xchg
pop
movs
fld
pop
pop
adc
sub
pusha
repz
xor
jmp
sbb
shl
(bad)
xor
ins
int3
lock
imul
iret
pop
jmp
mov
(bad)
arpl
xor
loopne
sbb
loopne
pop
sbb
cli
ret
aad
cmp
cmps
mov
gs
es
cmps
xor
sbb
mov
xchg
cmps
iret
repnz
pop
xor
jmp
sbb
fwait
rcr
jne
cmp
mov
gs
call
adc
push
mov
xchg
mov
sbb
mov
pop
stc
shl
pop
setg
imul
in
or
sbb
adc
mov
pop
xchg
push
xchg
fcmovne
inc
adc
or
sbb
pop
pop
ficomp
mov
hlt
pop
loopne
push
xchg
cmp
fisttp
lahf
jne
imul
in
or
sbb
adc
mov
pop
xchg
push
xchg
fcmovne
inc
adc
mov
pop
mov
add
hlt
pop
loopne
push
xchg
cmp
aas
lods
sub
mov
outs
ja
pop
(bad)
jge
xchg
pop
movs
fld
pop
pop
sbb
test
pop
imul
iret
cwde
lods
push
mov
and
in
cmps
iret
sbb
xor
adc
nop
iret
repnz
xor
call
pop
aas
lods
sub
neg
outs
pop
aas
lods
sub
or
outs
sub
pop
icebp
aad
sub
fcomp
pop
pop
xor
sbb
xlat
xchg
sub
mov
sbb
sbb
and
shl
xor
jmp
(bad)
xor
scas
cmps
xor
dec
add
xchg
xchg
pop
enter
jmp
fs
in
cmps
fisttp
loopne
sbb
loopne
iret
push
std
cwde
jb
loop
cmp
imul
stc
fdivr
aad
add
jne
sbb
dec
rol
sbb
call
mov
stos
cmps
xor
xchg
mov
call
sahf
fwait
cmps
int
imul
sahf
cmc
mov
mov
in
ins
cmp
sub
adc
xor
int3
neg
imul
in
pop
xor
loopne
xor
loopne
mov
test
jne
jmp
in
cmps
xor
imul
in
mov
mov
xchg
mov
mov
xchg
cmps
iret
dec
add
push
pop
jmp
push
xor
ins
int3
lock
imul
xor
xor
xor
cmps
xor
in
iret
in
cmps
pusha
nop
sub
iret
sub
shl
rep
xor
loopne
call
cmps
xchg
cmps
into
in
sub
aas
lods
sub
scas
mov
xor
sti
xor
sbb
sbb
loopne
mov
xchg
cmps
into
in
push
mov
push
or
xchg
gs
imul
sbb
aaa
es
jg
sbb
xchg
or
cwde
xchg
cmps
iret
inc
add
push
add
in
int3
lock
imul
xor
data16
xchg
cmps
mov
jns
inc
inc
in
cdq
loopne
cmps
mov
xchg
sbb
loop
(bad)
in
cmps
mov
pop
xor
mov
mov
xchg
mov
retf
loope
shl
in
mov
mov
xchg
mov
iret
in
cmps
pusha
repz
pushf
cmp
in
mov
mov
xchg
cmps
into
in
mov
pop
imul
out
pop
aas
lahf
enter
in
ret
in
cmps
mov
xchg
sbb
loop
(bad)
in
cmps
mov
fcom
cmps
mov
in
aad
in
cmps
iret
dec
and
hlt
pop
loop
enter
neg
xchg
pop
push
fsubr
xor
add
sub
mov
in
cmps
mov
out
shl
(bad)
jne
out
jne
out
movs
jmp
mov
les
sbb
xchg
inc
(bad)
in
cmps
js
loopne
ret
cmps
fldl2e
push
xor
ins
int3
lock
imul
div
push
push
mov
in
xor
loopne
mov
mov
ficom
in
cmps
mov
pop
gs
cmp
cmps
iret
inc
add
call
mov
call
in
cmps
fsubr
push
pop
xor
popa
push
xchg
pusha
cwde
aas
xchg
rcr
sbb
lahf
jne
imul
in
int3
xor
xchg
std
pop
test
in
cmps
aas
lods
sub
or
adc
push
xor
setg
imul
in
int3
xor
xchg
std
pop
iret
in
cmps
push
in
cmps
aas
lods
sub
aas
lods
cld
scas
iret
in
popa
loopne
mov
neg
pop
xor
dec
push
xchg
push
xchg
loopne
xor
jecxz
xor
xchg
in
push
iret
in
cmps
push
in
cmps
aas
lods
sub
or
adc
scas
iret
in
pop
mov
xchg
cmps
iret
xchg
in
mov
call
(bad)
xchg
mov
neg
imul
in
fdiv
sbb
pop
pop
mov
in
cmps
iret
in
or
cmp
cmps
iret
cwde
lods
push
or
outs
pusha
fisttp
sbb
pop
xor
ins
int3
lock
imul
mov
xchg
cmps
iret
dec
add
rcr
mov
xchg
cmps
iret
dec
cmp
iret
sbb
mov
imul
in
cmps
pusha
jae
test
sbb
(bad)
in
cmps
pusha
repz
in
iret
in
pushf
cmp
xchg
cmps
xor
sbb
push
nop
in
scas
iret
in
ds
adc
sbb
(bad)
in
cmps
mov
(bad)
cmps
iret
in
shl
(bad)
jne
out
jne
out
movs
in
xchg
cmps
iret
sbb
mov
loopne
mov
cmps
into
in
(bad)
in
cmps
push
xchg
in
scas
iret
in
mov
out
cmps
mov
push
pop
xor
mov
mov
xchg
mov
mov
xchg
cmps
iret
sbb
cmps
xor
fucomp
stos
iret
in
pop
mov
pop
push
ffree
in
cmps
cmp
pop
pop
neg
push
cmps
iret
xchg
in
test
sahf
call
jmp
pop
mov
in
mov
scas
xchg
cmps
mov
gs
jge
and
xor
sahf
mov
retf
fwait
aas
lods
sub
or
adc
stos
xor
imul
in
or
cdq
sbb
xchg
in
cmps
iret
in
or
mov
cmps
iret
cwde
lods
push
mov
out
xchg
cmps
iret
call
xchg
push
cmps
iret
sbb
cmp
in
ds
in
out
mov
xchg
cmps
iret
fucomp
pop
iret
in
cmps
xor
sbb
iret
in
cmps
mov
xchg
sbb
loop
lahf
mov
push
cmps
mov
in
(bad)
lods
aam
iret
out
aad
es
jae
pop
mov
gs
xor
ffree
in
cmps
aas
lods
cld
lods
iret
in
push
xchg
jno
xchg
sub
ffree
in
cmps
aas
lods
in
lods
iret
in
arpl
outs
push
xchg
scas
fdiv
pop
jmp
cmps
xor
sahf
mov
retf
(bad)
xchg
cmps
iret
fwait
aam
retf
loopne
pop
aas
lahf
shl
pop
mov
sbb
xchg
in
cmps
iret
in
or
lods
fisub
mov
out
xchg
cmps
iret
call
xchg
push
cmps
iret
sbb
aas
adc
ffree
in
cmps
neg
xchg
pop
mov
in
nop
iret
pop
jmp
mov
into
in
pop
movs
fld
pop
mov
in
or
in
aad
mov
mov
pop
sbb
xor
test
sbb
(bad)
in
cmps
pusha
repz
jmp
in
pushf
sub
xchg
loopne
pop
imul
loopne
cmps
mov
in
cmps
iret
sbb
add
sbb
adc
imul
xor
(bad)
ins
cmps
iret
in
ds
pop
xchg
push
xchg
shl
pop
push
mov
pop
pop
mov
cmps
iret
in
or
int3
(bad)
mov
in
add
loopne
aas
lods
sub
or
outs
or
xor
stos
jb
out
jne
in
xor
dec
cmp
hlt
pop
loopne
mov
imul
cmps
popf
cmps
into
in
add
loopne
mov
fadd
cmps
aas
lods
cld
lods
iret
in
shl
sbb
cmps
into
in
int3
xor
jge
sbb
into
nop
cld
mov
or
adc
rol
pop
imul
iret
dec
sbb
push
xchg
adc
mov
cmp
in
mov
mov
xchg
mov
xchg
gs
in
pop
inc
js
cmps
jne
add
das
fwait
sbb
adc
sbb
iret
in
cmps
pusha
rep
jmp
scas
fcomi
sbb
ror
call
adc
sbb
(bad)
in
cmps
mov
(bad)
cmps
iret
in
shl
(bad)
jne
out
jne
loop
enter
jb
mov
cmps
iret
in
(bad)
in
fmul
imul
xor
jno
aad
in
cmps
iret
dec
in
clc
in
cmps
pusha
repz
xor
jmp
xchg
in
fmul
loope
shl
xchg
stos
sahf
mov
xchg
movs
iret
sbb
pop
pop
mov
in
cmps
iret
in
or
inc
fsub
or
outs
ja
xor
stos
jb
in
iret
in
cmps
pusha
repz
iret
in
pushf
cmp
in
pop
clc
in
cmps
xor
xor
sahf
xchg
cmps
into
in
mov
stos
xchg
cmps
mov
gs
in
pop
inc
adc
cmps
xor
imul
in
(bad)
in
cmps
pusha
xchg
in
test
out
or
in
cmps
inc
adc
fcomi
pavgb
fsub
xchg
cmps
mov
xchg
sub
cwde
xchg
cmps
inc
jp
in
in
cmps
iret
outs
jle
mov
sahf
xchg
cmps
into
in
cmps
inc
adc
fcomi
pop
call
pop
mov
and
xor
in
iret
in
cmps
pusha
in
push
fmul
outs
pop
xor
popa
push
xchg
or
cwde
cdq
cmps
iret
inc
add
push
or
xchg
mov
call
(bad)
cwde
aam
iret
out
pop
aas
sahf
in
pop
xor
add
sahf
mov
int3
in
aad
in
cmps
iret
dec
or
hlt
pop
loopne
enter
mov
sahf
jmp
fwait
mov
in
nop
iret
pop
jmp
mov
into
in
in
enter
mov
pop
bound
add
sahf
mov
retf
in
cmps
test
xchg
movs
iret
repz
sbb
pushf
cmp
in
retf
loopne
(bad)
in
fmul
imul
enter
mov
fsub
aad
loopne
cmps
mov
xchg
sbb
loop
in
iret
in
cmps
xor
push
nop
iret
out
addps
sbb
xchg
aam
retf
loopne
psubusb
dec
iret
push
std
cwde
jb
add
sbb
pop
fsubr
aaa
pop
xor
ins
shr
xor
fucomp
in
cmps
xor
out
mov
xchg
movs
iret
dec
and
idiv
in
in
cmps
mov
in
fucomp
in
cmps
pop
or
fucomp
in
cmps
pusha
nop
sub
iret
imul
inc
imul
in
in
in
cmps
xor
xor
xchg
cmps
into
in
cmps
inc
adc
fcomi
pop
call
pop
iret
push
std
cwde
jb
loop
cmp
sbb
adc
pop
add
enter
xchg
mov
rcl
xchg
shl
xchg
stos
fisttp
sbb
iret
push
std
cwde
jb
loopne
add
loopne
mov
in
nop
iret
pop
jmp
mov
(bad)
(bad)
xchg
mov
cmp
push
pop
fcomp
xor
xchg
fisttp
in
inc
fsub
xor
pop
jg
sbb
pop
jg
push
push
sbb
hlt
pop
xor
sahf
int
retf
xor
in
push
pop
test
cmp
sbb
mov
inc
imul
in
push
mov
pushf
cmps
iret
in
int3
lock
imul
repz
in
retf
loopne
(bad)
in
fmul
imul
retf
in
ror
xchg
outs
fcomp
xor
fmul
loope
fisttp
in
fnstsw
out
xchg
cmps
fsubr
xor
es
jg
sbb
iret
out
xchg
cmps
pop
jg
and
hlt
pop
cmp
call
add
scas
xchg
cmps
into
in
(bad)
in
cmps
pusha
nop
sub
iret
imul
inc
imul
in
pop
movs
fld
pop
mov
xchg
push
mov
popf
cmps
iret
repz
add
sbb
sbb
mov
popf
cmps
iret
jno
mov
jns
pop
imul
mov
loopne
sbb
fadd
xor
xor
jnp
call
xor
xchg
mov
call
jmp
movs
iret
sbb
std
(bad)
in
cmps
xor
xchg
pop
mov
cmp
xor
setg
sbb
jne
push
sbb
push
pop
jmp
sub
ret
add
sbb
cmps
xor
ins
int3
lock
imul
xor
xor
xor
cmps
xor
in
into
in
cmps
pusha
nop
sub
iret
imul
inc
imul
inc
imul
in
cmps
cmp
sbb
cmps
int3
in
jp
xchg
cmps
inc
pop
loop
cmp
sbb
add
mov
or
add
sbb
pop
mov
xchg
pop
inc
adc
sbb
inc
xor
sbb
cmp
xor
pop
popa
fstp
xchg
xor
repz
add
sbb
mov
rcl
xchg
shl
cwde
adc
iret
outs
cmp
into
pop
dec
pop
xor
fxch
push
dec
pop
xor
fxch
pop
dec
pop
xor
sbb
in
shl
out
jo
cmp
imul
loop
cmp
xchg
shl
xchg
pop
movs
fld
pop
pop
sbb
fld
std
inc
pop
xor
(bad)
in
cmps
cmp
data16
mov
imul
lahf
push
cmps
iret
out
shl
arpl
adc
mov
retf
in
fwait
add
adc
push
movs
iret
out
shl
cs
xchg
push
lahf
dec
std
pop
cmps
fild
out
mov
xchg
movs
iret
xchg
xchg
pop
repnz
in
gs
xchg
cmps
mov
out
pop
or
and
adc
(bad)
in
cmps
xor
shl
setg
sbb
ret
sahf
imul
lahf
ins
cmps
iret
out
pop
iret
push
std
cwde
jb
jmp
outs
je
xor
test
sbb
(bad)
in
cmps
pusha
repz
iret
in
pushf
cmp
xchg
cmps
xor
sbb
fldcw
pop
xor
xor
sahf
xchg
cmps
int
cmp
mov
sbb
rcl
xchg
shl
jno
xor
sub
sahf
xchg
cmps
int
cmp
mov
jno
mov
xchg
movs
iret
call
fs
cmps
xor
sbb
aas
lods
aam
iret
out
mov
adc
(bad)
in
cmps
mov
lahf
jl
iret
out
shl
cs
xchg
push
int3
and
(bad)
in
cmps
xor
ds
in
lock
xchg
fld
fs
pop
xor
stos
cmps
inc
out
(bad)
in
cmps
pusha
xchg
in
movs
iret
in
or
push
sbb
mov
in
mov
inc
imul
sbb
pop
pop
jo
sbb
xchg
in
movs
iret
in
or
add
iret
cwde
lods
inc
or
outs
xor
call
(bad)
xchg
movs
iret
xchg
stos
xor
in
movs
mov
in
shl
xchg
push
xor
xchg
fcmovne
in
dec
fsub
xor
es
jg
sbb
pop
jg
popf
outs
sbb
(bad)
ficomp
cmp
sub
pop
sbb
xor
jae
test
sbb
(bad)
in
cmps
pusha
repz
repnz
in
pushf
cmp
scas
fpatan
xchg
and
cmps
iret
sbb
and
sbb
fmul
daa
pop
and
daa
push
es
push
and
into
lock
mov
xchg
cmps
into
in
push
dec
sbb
movs
dec
repnz
fadd
sbb
add
loopne
mov
in
or
inc
aaa
pop
xor
xchg
xor
jae
test
sbb
(bad)
in
cmps
pusha
repz
icebp
iret
in
lahf
mov
ret
outs
xor
add
push
in
cmps
iret
out
or
xchg
shl
sahf
test
iret
in
pop
inc
add
(bad)
in
cmps
mov
sbb
(bad)
in
cmps
fild
loop
enter
mov
not
fcmovnu
sbb
(bad)
in
cmps
iret
push
std
cwde
jb
or
sahf
mov
int3
in
fwait
mov
jecxz
movs
iret
jno
cmps
inc
out
(bad)
in
cmps
pusha
nop
sub
iret
sub
shl
cwde
xchg
cmps
inc
or
imul
adc
cmp
je
pop
xor
xchg
mov
jmp
movs
iret
repz
add
sbb
or
iret
push
std
cwde
jb
add
in
loopne
and
pop
xbegin
xchg
cmps
mov
shr
push
addr16
sbb
mov
pop
jns
pop
jg
add
fdivr
xor
xchg
pop
movs
fld
pop
push
call
pop
mov
and
add
loopne
push
call
pop
adc
cmp
hlt
adc
test
mov
push
pop
pusha
dec
loop
cmp
pop
mov
dec
imul
sbb
push
imul
mov
sbb
arpl
out
popa
or
or
sbb
pop
movs
fld
pop
call
mov
sbb
test
std
loopne
fsub
xchg
cmps
mov
sbb
jecxz
or
xchg
test
fcmovu
xchg
pop
icebp
loop
jno
xchg
mov
lahf
jno
xchg
shl
xchg
cdq
pop
rcl
mov
repz
sbb
dec
in
mov
jns
mov
loope
cdq
leave
add
xchg
mov
cwde
stos
cmp
in
fdiv
push
push
inc
shr
cmps
xor
adc
sbb
call
in
pop
iret
in
imul
outs
cmps
iret
in
rol
sbb
cmps
into
in
or
fistp
xor
mov
sbb
(bad)
out
cmps
pusha
repz
sbb
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
jo
in
mov
fcom
pop
xor
xchg
cmps
inc
adc
cdq
jmp
pop
xor
scas
xor
xchg
in
test
in
or
jne
xor
xchg
jb
xchg
in
(bad)
out
cmps
fmul
lods
int
xchg
mov
dec
imul
sbb
xor
cmc
sub
sahf
xchg
cmps
iret
in
mov
inc
imul
sbb
(bad)
out
cmps
pusha
jae
mov
sbb
(bad)
in
cmps
pusha
jae
pop
xor
imul
jb
add
ficomp
aad
in
cmps
iret
dec
add
sbb
mov
sbb
mov
fnstsw
xor
pop
pop
jle
sbb
jae
pop
xor
imul
imul
or
cmp
aas
btc
out
jb
outs
mov
push
push
sbb
pop
mov
fsubr
cmp
enter
int3
dec
add
and
push
xor
xor
jno
cmps
inc
pop
xchg
sub
xor
loopne
xor
loopne
mov
pop
jmp
mov
inc
jecxz
xor
jno
cmps
inc
or
add
sbb
mov
les
xchg
sub
xor
ss
imul
or
arpl
rol
(bad)
test
inc
loopne
push
loopne
int3
xchg
scas
loopne
pop
imul
xchg
scas
xor
sbb
data16
mov
dec
imul
pop
jmp
mov
mov
push
add
sbb
sbb
sbb
ss
jmp
inc
mov
or
ds
or
mov
sub
sbb
mov
pop
sbb
fdiv
sbb
xor
imul
xor
xchg
sub
xor
loopne
mov
xchg
sub
or
scas
xor
jno
xor
dec
or
pusha
in
dec
iret
outs
gs
fcomp
ds
xor
mov
lock
adc
sahf
mov
test
mov
jns
dec
(bad)
sbb
push
and
enter
div
xor
sbb
pop
pop
sbb
pop
xor
jmp
cdq
sbb
neg
jmp
pop
fist
sbb
mov
xlat
xchg
sub
mov
inc
add
repz
mov
jns
pop
pop
sbb
jne
loopne
(bad)
cld
loopne
les
adc
xor
shl
loopne
shl
aad
jecxz
sbb
arpl
sbb
data16
xor
call
pop
data16
or
int3
lock
ror
sbb
add
fdivr
aad
cmp
dec
(bad)
inc
sub
shl
mov
sahf
mov
div
xor
pop
add
sbb
pop
xor
test
pop
sbb
neg
pop
cwde
fisttp
pop
sbb
pop
repz
push
xor
loopne
add
loopne
mov
cwde
mov
pop
xor
shl
jno
aad
out
or
outs
gs
fcomp
aad
out
xor
jae
stos
jb
aas
mov
dec
imul
sbb
mov
imul
inc
aaa
add
fdivr
aad
test
dec
ds
inc
push
add
fcom
jne
push
pop
mov
sbb
data16
aad
sub
pop
xor
call
sbb
and
push
fsubr
sub
loop
cmp
sbb
xchg
sub
(bad)
loopne
xor
loopne
aas
lods
sub
aas
lods
sub
inc
xor
fmul
imul
xchg
mov
call
in
fmul
imul
mov
call
xchg
push
xchg
test
jne
jmp
pop
mov
sbb
fsubr
xor
into
sbb
mov
sbb
or
sbb
add
aas
lods
cmp
aas
mov
pop
jne
rcl
adc
imul
fcom
out
jge
sahf
mov
jne
loop
cmp
ficomp
ss
cmp
aas
lods
cmp
retf
out
gs
div
sbb
mov
pop
popa
shl
out
bound
inc
mov
pop
(bad)
shr
in
mov
jne
loopne
mov
xchg
mov
rcl
ss
imul
or
jo
aas
btc
lahf
jne
and
enter
xor
sub
xor
push
mov
xor
imul
mov
into
in
jg
sub
adc
pop
xor
int
dec
aad
ins
outs
std
sub
sbb
pop
xor
int
pop
jecxz
cmp
sbb
arpl
jle
mov
xchg
pop
mov
shl
sbb
mov
jecxz
sbb
mov
in
push
sbb
call
mov
xchg
pop
fist
jmp
and
mov
xchg
adc
imul
mov
in
push
sbb
into
frstorw
pop
xchg
pop
mov
push
pop
xor
or
mov
jecxz
out
jae
push
cwde
xor
imul
xor
jmp
in
push
xchg
shl
cwde
mov
loope
sub
cwde
xchg
pop
inc
adc
mov
jne
push
jge
sbb
jae
lahf
sbb
fistp
mov
outs
fcmovne
push
sbb
mov
xchg
pop
aas
lods
sub
fld
xor
jmp
pop
mov
xchg
pop
aas
lods
push
(bad)
sbb
inc
adc
pop
mov
xchg
pop
mov
xchg
inc
sbb
in
push
push
mov
xchg
cmps
iret
(bad)
xor
or
(bad)
outs
outs
fdiv
push
lods
xor
(bad)
loopne
imul
shl
loopne
enter
or
outs
ins
fdiv
push
pop
outs
inc
mov
enter
pop
and
enter
sbb
mov
pop
and
enter
enter
jbe
mov
enter
enter
enter
enter
enter
enter
enter
enter
and
stc
enter
pop
lock
imul
xor
inc
enter
enter
inc
mov
adc
enter
cwde
xor
stc
enter
enter
mov
mov
enter
enter
mov
jmp
mov
sbb
xor
enter
pop
scas
imul
sub
stc
shr
mov
enter
pop
mov
adc
enter
enter
fcomi
pop
stc
enter
enter
and
mov
enter
push
mov
sbb
enter
enter
cmp
jl
jmp
out
pop
and
mov
pop
imul
pop
imul
inc
fwait
push
mov
enter
pop
and
enter
enter
enter
enter
enter
or
retf
scas
sbb
mov
and
mov
mov
mov
enter
nop
mov
in
stc
enter
enter
enter
enter
pop
and
enter
enter
mov
shr
stc
enter
pop
lock
imul
mov
mov
enter
sbb
mov
and
mov
mov
mov
enter
nop
mov
in
stc
enter
enter
enter
enter
push
adc
inc
enter
enter
mov
shr
stc
enter
enter
enter
test
gs
mov
fadd
cmp
addr16
sub
push
xchg
sub
mov
push
cmp
stos
scas
rcl
pop
scas
push
fsubr
xor
cmp
adc
pusha
repz
movs
iret
in
shl
xchg
cmp
mov
pop
test
repz
adc
xor
sahf
jne
imul
fsub
(bad)
pop
xor
imul
xor
cdq
mov
loop
call
jecxz
ss
sbb
and
nop
sub
xor
sub
or
jge
inc
xchg
mov
adc
pop
ss
sbb
mov
pop
data16
and
adc
and
stos
xor
jae
pop
xor
in
(bad)
dec
xor
mov
dec
in
(bad)
adc
or
fcomp
cmp
jno
aad
in
cmp
jne
push
or
sbb
pushf
adc
mov
rcl
jmp
adc
sbb
aas
cdq
js
iret
in
push
imul
or
add
jle
xchg
cdq
imul
dec
imul
dec
loopne
(bad)
icebp
push
cdq
leave
add
xchg
mov
xchg
cmp
mov
sbb
xor
jmp
outs
fs
sbb
mov
adc
mov
iret
outs
popa
mov
jecxz
cmps
mov
popa
shl
adc
pop
xor
and
mov
pop
imul
sbb
(bad)
jg
adc
mov
push
pop
xor
(bad)
shl
loopne
addr16
and
iret
das
push
xor
pop
imul
(bad)
pop
imul
xor
xor
xchg
mov
xor
sbb
pusha
repz
xor
jmp
sbb
sbb
test
pop
xor
loop
mov
or
sbb
(bad)
pop
imul
and
inc
ret
(bad)
pop
imul
mov
nop
jl
(bad)
pop
imul
sbb
jne
ins
stc
movs
std
sub
push
icebp
mov
enter
mov
pop
mov
mov
imul
in
call
pusha
(bad)
mov
sbb
shl
add
iret
xchg
stos
push
xchg
test
and
mov
sbb
xchg
cdq
imul
jae
mov
xor
jmp
mov
dec
imul
std
sub
pop
popf
mov
call
call
push
stc
mov
mov
popf
pop
xchg
xchg
(bad)
sbb
sbb
pop
imul
(bad)
(bad)
sbb
xchg
sub
fild
loopne
xor
shl
sub
shr
shl
loopne
mov
cdq
pop
xchg
(bad)
(bad)
sbb
sbb
pop
imul
les
mov
sub
lods
cmp
loope
loop
movs
mov
fs
sar
shl
adc
xchg
sub
mov
es
mov
gs
mov
cld
(bad)
pop
imul
xor
xchg
pop
jmp
repz
call
pop
imul
iret
cwde
lods
push
mov
fld
pop
pop
sbb
pop
pop
sbb
pop
pop
sbb
jo
sbb
fdivr
pop
xor
hlt
push
xor
add
pop
or
iret
outs
lea
iret
outs
lea
mov
je
xor
cmp
add
sub
outs
inc
mov
or
mov
js
call
pop
mov
popa
loopne
sbb
je
xchg
pop
enter
jne
retf
pop
imul
pop
pop
sub
mov
fsub
sbb
pop
retf
fistp
xor
and
add
sbb
or
nop
and
inc
mov
or
jmp
jecxz
lahf
mov
popa
loopne
sbb
mov
imul
pop
imul
xor
xor
in
jns
xor
out
jne
add
mov
sbb
xor
sbb
cmps
pop
fisttp
xor
loop
cmp
imul
lods
sub
pop
fisttp
xor
loop
cmp
jns
xor
push
xchg
xor
cmp
xor
imul
push
in
cmps
aas
lods
sub
mov
pop
and
in
push
mov
mov
push
imul
sbb
jge
mov
mov
or
or
cmp
loopne
add
loopne
mov
popa
loopne
sbb
xor
setg
imul
in
cwde
adc
imul
sbb
xor
sbb
aas
lods
sub
fild
(bad)
jne
out
jne
jmp
in
mov
jne
loopne
mov
xchg
xchg
repz
loopne
popa
dec
cmp
addr16
adc
mov
xor
scas
(bad)
xchg
sub
mov
dec
sbb
hlt
adc
and
push
fsubr
xor
or
sub
mov
outs
ja
adc
jne
scas
pop
aaa
inc
(bad)
jne
ds
push
imul
fcom
push
xor
out
jne
and
or
xor
or
pop
imul
xor
setg
imul
in
fs
inc
sbb
aas
lods
sub
neg
outs
ja
in
cmps
addr16
adc
sbb
ins
in
fwait
dec
(bad)
loopne
add
loopne
aas
lods
sub
js
push
pop
pop
outs
pusha
push
xchg
adc
pop
outs
pop
outs
inc
xor
movs
mov
lahf
sbb
pop
mov
popa
loopne
sbb
adc
xor
pop
sbb
adc
cmp
sahf
shl
xor
sbb
fcomp
xchg
pop
enter
ins
fdivr
aad
test
dec
ds
adc
je
xor
scas
sbb
xor
imul
xor
scas
xor
imul
mov
and
xor
xor
jno
mov
pop
imul
cwde
or
xor
sahf
mov
idiv
sbb
call
repz
xor
loopne
push
xchg
cmp
pop
or
sbb
loopne
sub
xor
pop
xor
imul
sbb
dec
pop
imul
pop
cdq
or
movs
and
inc
mov
fsub
sbb
ror
loopne
sub
cld
sub
xor
dec
pop
xor
in
xor
and
repz
xchg
cmps
inc
inc
add
mov
sbb
ins
xor
scas
aad
repz
xor
js
sbb
xor
dec
add
mov
jno
mov
push
imul
sbb
adc
pop
imul
xor
imul
fadd
xor
aas
mov
pop
imul
pop
cdq
or
or
pop
xor
sahf
mov
div
cmp
imul
or
cmp
imul
ins
ja
mov
pop
sbb
sbb
sbb
pusha
xchg
in
cmps
into
in
or
sbb
pop
xor
pop
mov
iret
sbb
cmps
mov
ins
cmps
into
in
je
pop
data16
jne
scas
fdiv
xor
in
iret
in
cmps
pusha
repz
xor
data16
inc
in
sahf
dec
aad
pop
pop
push
xchg
xor
xchg
or
fdivr
cmps
iret
xchg
scas
ds
in
pop
pop
push
xchg
xor
xchg
or
mov
cmps
iret
xchg
scas
ds
in
scas
pusha
punpckhwd
lods
in
movs
into
in
sahf
mov
xchg
cmps
iret
in
push
xchg
scas
fdiv
sbb
mov
mov
in
cmps
inc
pop
or
iret
adc
int
in
cmps
mov
repz
sbb
fwait
mov
in
mov
mov
in
out
movs
loope
cmps
iret
xchg
sub
popf
jp
imul
mov
in
out
(bad)
jecxz
cmps
iret
adc
in
leave
in
cmps
aas
lods
lahf
cdq
(bad)
adc
aas
lods
scas
pop
outs
inc
mov
(bad)
pop
push
jg
call
lods
ja
pop
(bad)
cld
loopne
enter
mov
fwait
push
ja
and
pop
mov
in
shl
sub
fcom
xchg
cmps
iret
cwde
lods
push
mov
sub
xor
mov
mov
xchg
cmps
iret
xchg
scas
aad
out
cmps
iret
dec
xor
push
xchg
cmps
iret
in
mov
jno
aad
out
cmps
iret
dec
loop
cmp
mov
sub
into
in
or
xchg
xor
xchg
or
dec
and
cwde
lods
inc
mov
fsub
(bad)
in
cmps
pusha
rep
sbb
mov
cwde
xchg
pop
inc
or
stos
loope
mov
movs
into
in
or
cmp
pop
xor
xor
sbb
pop
pop
sbb
pop
xor
jmp
cmps
iret
dec
or
enter
into
in
jb
and
pop
xor
add
jae
mov
sbb
add
mov
imul
fadd
mov
repz
add
sub
xchg
mov
push
imul
sbb
movs
into
in
or
and
pop
xor
or
in
ror
xchg
outs
fdiv
pop
xor
adc
outs
inc
mov
(bad)
pop
imul
ds
inc
mov
mov
mov
fwait
push
ja
sub
pop
mov
in
shl
sub
fdivr
lods
push
mov
cmp
sbb
(bad)
in
cmps
pusha
repz
fdiv
sbb
(bad)
in
cmps
pusha
nop
sub
mov
jne
fsubr
cmps
iret
in
push
mov
in
xor
sub
sahf
xchg
cmps
iret
in
mov
push
imul
dec
jb
xor
aad
out
cmps
iret
dec
cmp
lock
sub
mov
xchg
cmps
iret
dec
add
pop
imul
iret
dec
adc
xor
loopne
mov
in
mov
pop
imul
jecxz
cmps
iret
dec
loop
cmp
pop
mov
pop
imul
pop
imul
or
sub
outs
popa
cmps
push
repz
sbb
sbb
mov
and
pop
outs
inc
mov
(bad)
pop
push
out
pop
pop
sub
jecxz
mov
iret
in
lahf
pop
sbb
(bad)
in
cmps
pusha
nop
sub
mov
jne
fdivr
xchg
imul
pop
in
int3
in
cmps
pusha
jae
mov
sbb
(bad)
in
cmps
pusha
repz
adc
sbb
pushf
sub
in
movs
into
in
or
mov
pop
xor
xchg
shl
cwde
(bad)
pop
mov
push
mov
retf
mov
in
mov
pop
imul
in
sub
into
in
or
fsubr
sub
jae
mov
sbb
xor
dec
add
pop
imul
fdivr
pop
xor
scas
mov
xchg
in
movs
into
in
or
jo
pop
xor
test
mov
sbb
xor
dec
add
pop
imul
fdiv
pop
xor
scas
mov
jae
mov
sbb
xor
dec
add
pop
imul
fcom
sub
call
outs
shr
mov
sbb
arpl
out
inc
sub
mov
(bad)
mov
sahf
popf
cmps
iret
in
shl
jmp
in
rol
in
(bad)
shl
xchg
scas
cmps
inc
pop
in
(bad)
in
cmps
pusha
jae
mov
sbb
ffree
in
cmps
pusha
rep
pop
xor
jmp
in
or
ins
sub
xchg
scas
shl
cwde
mov
loope
sub
fcmove
mov
mov
in
mov
pop
imul
sbb
xor
xor
jae
pop
xor
ffree
in
cmps
pusha
repz
xor
loopne
int3
cwde
xchg
cmps
inc
sub
dec
ficomp
mov
pop
imul
cmc
sub
dec
popa
cmps
add
push
sbb
sbb
loopne
or
(bad)
std
loopne
fsub
xchg
cmps
mov
pop
imul
xor
sub
dec
popa
cmps
add
arpl
xor
add
sbb
xor
mov
xor
loopne
pop
sbb
pop
mov
imul
inc
pop
or
xor
sahf
mov
iret
in
sahf
cmp
sbb
sub
xor
cmp
jae
imul
or
pop
mov
mov
scas
fstp
mov
pop
imul
imul
pop
mov
repz
xor
cmp
iret
outs
xchg
mov
pop
imul
sbb
push
imul
or
and
imul
adc
aas
fst
ror
xor
shl
nop
sub
mov
inc
sub
mov
xchg
cmps
iret
dec
loop
cmp
cmp
mov
gs
pusha
jg
xor
xchg
or
add
pop
xor
in
pop
ret
in
cmps
xor
push
xor
xchg
in
lods
into
in
or
dec
and
enter
mov
xchg
cmps
iret
xchg
scas
cmps
inc
pop
in
(bad)
in
cmps
pusha
jae
mov
sbb
ffree
in
cmps
pusha
repz
sbb
sub
imul
pop
sbb
pop
pop
sbb
pop
xor
jmp
cmps
iret
dec
xor
iret
outs
inc
xor
cmc
sub
mov
imul
xor
pop
mov
and
jbe
xor
mov
mov
xchg
cmps
iret
xchg
scas
mov
sbb
pop
sbb
sbb
sbb
pop
pusha
jae
mov
sbb
pop
xor
scas
xor
fwait
imul
sbb
div
aad
out
xor
fwait
imul
cwde
sub
xchg
xchg
scas
xlat
xchg
in
mov
in
shl
cwde
adc
xor
xor
in
movs
data16
pop
fdiv
push
pop
xor
scas
mov
in
pop
fdivr
lahf
mov
sbb
xor
dec
add
add
imul
loopne
(bad)
cld
loopne
fsub
xchg
cmps
mov
pop
imul
pop
imul
dec
loopne
mov
xlat
data16
cmp
addr16
push
pop
rcl
sub
imul
repz
lea
cmps
iret
xchg
pop
loopne
pop
imul
ret
mov
imul
repz
xor
add
jae
mov
sbb
and
mov
imul
out
cmps
pusha
nop
sub
mov
jne
fdivr
pushf
cmps
iret
cwde
lods
push
mov
push
pop
xor
jmp
sahf
adc
shl
sub
sahf
adc
xchg
pop
imul
in
push
mov
in
xor
sub
sahf
adc
mov
imul
mov
pop
xor
jbe
in
sub
sbb
pop
xor
or
test
xor
ins
mov
daa
imul
in
cmps
xor
xchg
or
in
mov
and
lds
cmp
data16
jecxz
push
mov
imul
in
or
in
mov
and
push
js
sbb
fstp
in
cmps
pusha
adc
fisttp
adc
fisttp
adc
fld
adc
in
in
cmps
icebp
cld
imul
adc
test
xchg
cmps
iret
nop
aam
into
in
fcmovnbe
or
mov
jns
movs
fchs
int
out
cmps
pop
cmps
sbb
div
xor
cmps
fldenv
nop
pop
imul
sub
call
fdivr
pop
xor
or
in
ror
xchg
das
xor
jae
xor
in
lock
cmps
pusha
in
hlt
into
in
mov
imul
sbb
mov
mov
xor
in
and
cmps
pusha
xchg
in
pushf
into
in
or
push
push
pop
xor
xchg
or
lods
in
loop
in
or
lods
in
loopne
in
or
lods
in
out
into
in
or
lods
aam
into
in
cdq
xlat
sbb
in
arpl
in
shl
xchg
cmps
mov
in
mov
iret
or
repnz
cld
sub
in
xor
sub
lahf
sbb
pop
imul
iret
dec
add
mov
sahf
fldenv
push
and
pop
pop
sbb
aad
stos
xchg
cmps
iret
dec
loop
cmp
push
pop
fmul
pop
xor
pop
cmps
iret
in
in
pushf
in
cmps
fsubr
mov
call
adc
bound
sbb
scas
fstp
mov
and
pop
pop
sbb
xor
imul
pop
mov
repz
xor
ss
imul
or
and
imul
adc
add
repnz
push
sbb
xlat
xchg
in
lods
into
in
shl
mov
sahf
mov
iret
in
lahf
pop
sbb
(bad)
in
cmps
pusha
xchg
cdq
fcomi
pop
cmp
mov
fmul
xor
imul
sahf
in
xor
jmp
fnsave
sahf
xchg
cmps
iret
in
mov
and
push
aaa
sub
pop
mov
imul
(bad)
fsubr
xor
xchg
mov
adc
sbb
sub
sbb
mov
fsub
jne
scas
fdiv
sbb
pop
mov
dec
in
retf
cmps
pusha
repz
test
cmp
sti
pop
xor
call
pop
push
in
cmps
aas
lods
sub
cmp
push
in
add
xor
sbb
or
ja
pusha
push
xor
nop
rcr
mov
xchg
cmps
iret
dec
cmp
hlt
pop
rol
xlat
xchg
in
mov
in
shl
lock
dec
sbb
sub
pop
imul
iret
dec
sub
pop
call
pop
fstp
cmp
mov
xchg
cmps
iret
dec
add
fstp
aad
loope
cmps
iret
dec
or
or
mov
mov
in
mov
and
mov
xchg
sub
jno
rol
cwde
test
mov
fsub
cwde
cmps
iret
cwde
lods
push
mov
fcomp
jo
imul
aaa
add
fdivr
aad
test
rol
(bad)
add
mov
ror
sbb
xor
jno
mov
and
mov
int3
outs
pop
xor
xor
xchg
sub
pusha
repz
xor
jmp
sbb
enter
not
push
cmp
or
jge
add
lock
cmp
mov
xchg
sub
pusha
in
pop
fmul
xchg
cmps
inc
and
sbb
iret
outs
jns
fcom
xchg
cmps
iret
cwde
lods
push
mov
gs
inc
pop
xchg
sub
leave
in
fcomi
adc
lahf
into
imul
cmp
sub
(bad)
in
fcomi
adc
sbb
repz
xor
add
jae
mov
sbb
pop
xor
pop
pop
fdivr
push
pop
xor
sub
mov
shr
mov
push
imul
adc
and
add
not
xchg
pop
enter
push
sub
loopne
(bad)
mov
pop
imul
dec
imul
pop
iret
sub
xor
jae
pop
xor
in
xor
xchg
cmps
pusha
in
mov
and
mov
jecxz
lahf
cmp
sbb
sub
shl
add
lahf
pop
pop
int3
in
pop
mov
in
call
xchg
cmps
mov
sahf
cdq
mov
pop
pop
in
xor
xchg
cmps
pusha
xchg
in
movs
retf
in
or
in
pop
xor
xor
sub
sahf
imul
fbstp
iret
in
pop
inc
add
test
xor
xchg
or
add
cmps
iret
cwde
lods
push
neg
xchg
pop
mov
(bad)
and
sbb
pop
pop
ins
test
xor
xchg
or
loopne
cmps
iret
cwde
lods
push
or
outs
ja
xor
mov
sbb
fnsave
out
cmps
pusha
repz
iret
in
pushf
cmp
in
pop
xor
xchg
cmps
xor
xchg
gs
sub
aas
lahf
pop
pop
xor
push
add
adc
or
sbb
adc
cmp
je
data16
sbb
aas
xchg
out
xor
push
adc
mov
ins
pop
xor
push
pop
xor
push
or
dec
sub
mov
ins
pop
xor
je
and
pop
xor
cmp
sbb
arpl
sbb
xor
or
sbb
pusha
push
cmp
inc
push
jne
dec
sub
bound
daa
and
cmp
dec
data16
aaa
ins
pop
xor
cmp
arpl
fdiv
imul
es
fdivr
sbb
dec
or
dec
cmp
pop
xor
xchg
pop
xor
push
or
cmp
pop
xor
xchg
sbb
pop
pop
outs
test
xor
xchg
or
hlt
out
cmps
iret
cwde
lods
push
or
outs
add
mov
sbb
int
out
cmps
(bad)
mov
pushf
cmp
xchg
cmps
xor
sbb
mov
in
aad
sbb
sub
in
shl
call
pop
mov
in
shr
cwde
test
xor
jmp
sbb
xor
dec
add
fstp
cmps
add
outs
xor
and
sbb
and
sub
in
push
pop
xor
or
xchg
xor
pop
mov
imul
fadd
fmul
imul
fwait
aam
int3
in
jne
inc
jmp
cmps
pop
outs
cmp
mov
xchg
cmps
iret
dec
sub
mov
xchg
cmps
iret
call
mov
xchg
cmps
iret
pop
imul
repz
cmps
iret
xchg
stos
fcomi
pop
jecxz
and
xchg
std
pop
xor
xchg
cmps
iret
sahf
and
or
sbb
iret
in
sub
xor
stos
retf
in
fcomi
pop
or
imul
repz
iret
in
pushf
cmp
xchg
imul
sbb
mov
gs
inc
push
in
xor
xchg
cmps
mov
ins
or
cmp
mov
gs
mov
stc
pop
xor
jmp
dec
mov
in
cwde
xor
repz
mov
cmp
xchg
pop
enter
pop
sbb
mov
in
cwde
xor
cmp
mov
popa
push
lock
sub
call
jae
mov
sbb
(bad)
loope
cmps
pusha
repz
arpl
sbb
pushf
cmp
sahf
push
adc
imul
iret
dec
xor
xor
int
loope
cmps
(bad)
in
mov
das
imul
jae
mov
sbb
xor
dec
add
pop
imul
xor
imul
iret
sbb
movs
iret
in
cwde
xor
jmp
popa
loopne
xor
loopne
fsub
xchg
cmps
mov
sbb
and
sub
and
xor
or
xchg
xor
pop
mov
das
imul
fwait
aam
int3
in
pop
inc
add
xchg
cmps
mov
ins
or
jmp
iret
in
pushf
cmp
imul
xor
lahf
outs
xor
add
jae
mov
sbb
pop
xor
or
sbb
mov
pop
push
test
xor
mov
pop
pusha
jae
mov
sbb
pop
xor
imul
xor
(bad)
outs
xor
add
jae
mov
sbb
pop
xor
imul
xor
jecxz
xor
add
jae
mov
sbb
pop
xor
sahf
mov
iret
in
lahf
fsin
imul
pop
cmp
adc
sahf
xchg
mov
test
imul
pop
imul
loope
cmps
mov
loope
cmps
pusha
repz
outs
xor
add
xchg
cld
movs
retf
or
sub
mov
sbb
pop
xor
sbb
repz
xor
add
jae
mov
sbb
pop
xor
imul
lock
cmp
fcom
xchg
mov
and
sbb
movs
iret
in
sub
jb
adc
fstp
cmps
add
scas
push
sbb
sbb
repz
sbb
pop
pusha
jae
mov
sbb
pop
xor
imul
push
sbb
xor
pop
fstp
cmps
add
jecxz
xor
loopne
add
loopne
fldenv
xchg
cmps
iret
inc
aaa
add
fdivr
aad
cmp
dec
(bad)
fidivr
adc
aas
jg
pop
(bad)
cld
loopne
int3
xchg
scas
cmps
inc
adc
pop
pop
sbb
shl
xchg
xchg
scas
xlat
xchg
sub
mov
pop
pop
cwde
fild
add
repz
ins
xor
loopne
data16
ins
xor
loopne
fistp
loopne
outs
inc
xor
mov
or
sbb
push
movs
push
inc
mov
call
pop
mov
sub
fucom
in
cmps
xor
loopne
(bad)
cld
loopne
nop
out
cmps
mov
pop
imul
repz
ins
xor
loopne
hlt
in
cmps
pop
lds
movs
add
imul
push
sbb
push
sub
scas
lods
cmps
iret
in
mov
mov
xchg
cmps
iret
jae
mov
sbb
cmps
fcom
pop
pop
xor
xchg
push
jmp
outs
imul
sbb
scas
mov
imul
enter
in
cmps
neg
inc
pop
xor
add
fcomp
cmps
inc
adc
ror
sub
sbb
rcr
iret
in
cmps
test
xchg
cmps
iret
in
xchg
into
in
push
lock
jo
bound
xchg
or
scas
mov
int
in
cmps
cmp
sbb
mov
push
in
mov
in
aad
out
cmps
iret
dec
xchg
in
shl
xchg
cmps
aas
lods
in
mov
in
or
div
sub
pop
mov
jno
enter
div
clc
cmps
test
xchg
cmps
iret
rep
imul
loopne
add
loopne
iret
scas
lods
cmps
iret
in
lods
add
imul
in
push
imul
or
mov
imul
dec
adc
sbb
jg
shr
shl
sub
pop
xor
pop
mov
sub
xchg
sbb
bndstx
into
sbb
mov
ins
ins
mov
sub
cmp
sbb
pop
xor
imul
xor
pop
fld
imul
xchg
scas
xor
xchg
sub
pusha
jno
xor
jno
cmps
inc
pop
cmp
xor
imul
pop
jno
aad
out
xor
jno
xor
in
dec
fcomp
pop
xor
scas
fisttp
imul
sub
sbb
jo
imul
iret
dec
pusha
add
and
xchg
mov
nop
cs
mov
in
in
enter
fmul
pop
pop
xor
in
lods
dec
in
shl
xchg
in
movs
(bad)
in
or
in
mov
das
imul
xchg
in
movs
(bad)
in
or
sub
icebp
pop
sbb
rcr
shl
sub
pop
inc
adc
outs
fadd
inc
pop
xor
(bad)
(bad)
clc
jb
xor
and
shr
mov
dec
loop
cmp
pop
xchg
cmp
scas
push
fmul
xor
mov
xor
and
pop
cs
sub
mov
fsubr
sub
add
adc
or
data16
xchg
cmp
mov
add
imul
int3
inc
aaa
add
fdivr
aad
test
imul
cmp
mov
mov
imul
in
imul
in
mov
xor
imul
xor
mov
mov
sbb
(bad)
loopne
cmps
pusha
jno
push
pop
jl
sbb
jno
xor
repz
mov
sub
mov
fadd
pop
pop
sbb
xor
xchg
or
sub
imul
iret
cwde
xchg
cmps
inc
pop
pusha
cwde
inc
daa
xchg
outs
fcom
inc
pop
xor
aad
out
cmps
iret
dec
add
add
fmul
xor
sahf
mov
iret
in
lahf
repz
xor
repnz
xor
loop
int3
loopne
cmps
neg
xchg
pop
mov
sahf
xchg
mov
pop
mov
pop
int3
in
or
or
xor
sbb
pop
sbb
pop
xor
mov
sub
mov
loopne
cmps
imul
pop
pop
xor
or
pop
mov
imul
xchg
xchg
imul
jae
mov
sbb
fnsave
out
cmps
pusha
repz
cmp
test
pop
xor
xchg
or
test
pop
xor
movs
pop
xor
jmp
xchg
xchg
imul
out
cmps
iret
dec
add
fcomp
aad
sbb
pop
pusha
repz
imul
jmp
in
pop
inc
xor
sub
pop
imul
inc
imul
pop
iret
sub
imul
xor
leave
pop
xor
call
pop
iret
scas
xchg
mov
retf
add
fistp
mov
sbb
int
loopne
cmps
fist
in
(bad)
imul
pop
mov
in
in
(bad)
loopne
cmps
iret
scas
xchg
mov
fcomp
aad
sbb
xor
sbb
hlt
or
fnsave
out
cmps
pusha
repz
push
pusha
xchg
cld
pop
int3
in
or
sub
imul
mov
xchg
cmps
iret
dec
or
retf
in
or
cld
pop
int3
in
or
ins
popa
mov
sub
mov
nop
xor
sbb
xchg
pop
outs
inc
mov
rcl
cwde
test
dec
ds
pop
mov
pop
xor
mov
jne
loopne
add
loopne
pop
shr
xor
xor
popf
sub
mov
pop
xor
aas
pop
xor
mov
jne
loopne
pop
sbb
sub
repz
or
xor
scas
push
xchg
or
sbb
pop
xor
xchg
neg
pop
xor
aad
idiv
or
test
pop
xor
test
in
sbb
imul
jne
loopne
add
and
sbb
xor
sbb
enter
neg
sub
and
imul
pop
mov
not
sub
pusha
dec
cmp
neg
jge
xor
sahf
cmp
mov
ins
dec
mov
imul
cwde
adc
cmp
fisttp
arpl
sbb
imul
mov
sbb
push
out
sbb
and
sahf
mov
not
imul
(bad)
jle
shl
in
xor
dec
add
pop
imul
mov
imul
sbb
mov
clc
xchg
scas
mov
in
cmps
outs
inc
xor
mov
movs
cmp
mov
xor
pop
mov
sbb
int3
jo
add
sbb
or
push
inc
pop
xor
sahf
mov
test
fsubr
push
addr16
sbb
(bad)
call
imul
neg
imul
mov
imul
jno
aad
stos
cmp
jne
cmp
rcr
jbe
sbb
mov
pop
sbb
sbb
mov
popa
or
inc
inc
pop
xor
aad
stos
cmp
jne
cmp
rcr
jbe
sbb
sbb
sbb
sbb
add
imul
adc
imul
sbb
jne
loopne
enter
mov
in
mov
jne
loopne
mov
out
scas
sbb
xor
sbb
jne
cmp
jne
cmp
xor
xor
jno
xor
jno
fisttp
sbb
mov
sbb
mov
sbb
xor
repz
jne
sbb
inc
sbb
das
pop
mov
pop
adc
sbb
je
sbb
je
sbb
mov
ins
imul
aaa
imul
aaa
imul
pop
pop
cwde
fist
call
pop
add
sub
outs
inc
mov
or
loop
cmp
mov
iret
ins
popa
mov
xor
iret
ins
gs
xor
iret
ins
jns
in
imul
sbb
pop
iret
ins
ins
mov
imul
xor
pop
lsl
repz
sbb
pushf
cmp
xchg
scas
xlat
xchg
sub
mov
fdivr
aad
(bad)
jp
in
ror
sbb
dec
fadd
xor
or
outs
jge
inc
or
push
fsubr
imul
inc
stos
or
jmp
and
jecxz
mov
pop
pop
in
and
xchg
sub
iret
outs
popa
mov
sbb
mov
jno
ins
fdivr
aad
test
fidiv
popf
pop
loopne
sbb
loopne
mov
mov
xor
in
enter
int3
dec
add
sbb
imul
inc
pop
xchg
sub
xor
pusha
cwde
inc
pop
pop
cwde
(bad)
xchg
sub
iret
outs
jne
xor
sbb
iret
outs
xchg
mov
xor
sbb
mov
xor
or
adc
shl
loopne
iret
outs
xchg
mov
xor
sub
stc
fdivr
aad
test
loop
and
sub
push
xchg
sub
(bad)
scas
push
test
call
enter
neg
outs
pop
mov
pop
cdq
shl
xchg
sub
pusha
jae
pop
xor
add
outs
cmps
inc
adc
push
lock
ins
imul
add
push
pop
sbb
pop
iret
outs
jns
inc
out
mov
outs
cmps
inc
out
cmc
sbb
lock
inc
out
stc
sbb
in
mov
jne
loopne
aas
lods
sub
outs
inc
mov
or
ds
ds
pop
mov
pop
daa
xor
jmp
outs
inc
mov
xor
pusha
rep
je
sbb
sbb
enter
fdivr
sub
pop
xchg
sub
fist
lahf
sbb
pop
sbb
lahf
xor
imul
xor
mov
sbb
sti
fdivr
sub
loop
mov
inc
pop
pop
cwde
fild
xchg
ins
fdivr
sub
js
pop
xor
jns
xor
mov
jne
loopne
mov
shr
sub
repnz
pop
xor
loop
adc
in
add
sub
dec
popa
fwait
gs
mov
dec
loop
cmp
loopne
sbb
loopne
mov
fwait
push
arpl
xor
push
mov
xchg
mov
repnz
xchg
sub
xor
jmp
sbb
enter
mov
sbb
mul
xchg
fcomi
sbb
arpl
outs
(bad)
dec
pop
imul
outs
jb
enter
xor
sbb
mov
sbb
scas
aam
imul
das
loopne
xor
or
enter
xchg
scas
fld
in
pop
xor
xchg
sub
xchg
mov
jne
cmp
pop
sbb
jne
push
test
jmp
sahf
add
ss
imul
mov
dec
aas
btc
lahf
jne
mov
or
dec
cmp
imul
arpl
pop
jb
sbb
sbb
mov
call
mov
dec
jecxz
mov
pop
pop
sbb
fisttp
jmp
adc
pop
add
pop
push
or
sub
call
push
fsubr
xor
adc
lods
adc
aas
lods
push
arpl
sbb
(bad)
loop
mov
jecxz
inc
xor
imul
(bad)
stc
test
xor
jmp
dec
add
imul
xor
sub
aas
lods
sub
or
sub
inc
xor
mov
imul
sbb
push
movs
pop
es
jmp
sahf
mov
popf
cmps
into
in
fist
sbb
test
std
loopne
shl
xchg
cmps
mov
in
cmps
pusha
in
push
fmul
mov
push
mov
sbb
cwde
fxch
push
xor
xchg
pop
inc
push
cmp
add
sbb
jno
shl
mov
sahf
std
int3
in
cmps
mov
in
in
in
cmps
pop
cmps
mov
int
pop
shl
xchg
aad
xor
imul
xor
mov
in
aam
sbb
(bad)
xchg
in
mov
out
shl
in
push
pop
pop
push
jg
sbb
sahf
jmp
shl
xchg
test
clc
in
fmul
imul
iret
out
pop
retf
dec
dec
in
fcomi
adc
jg
pop
imul
hlt
adc
jl
fild
mov
sbb
cmps
fcom
inc
pop
xor
sbb
in
dec
mov
in
xor
xrelease
sbb
pushf
and
adc
xor
lahf
mov
xchg
movs
iret
sbb
xor
mov
sbb
mov
bound
neg
imul
iret
sbb
cmps
int
push
clc
in
cmps
or
sbb
mov
and
in
in
cmps
xor
data16
or
loopne
mov
imul
(bad)
or
sbb
jg
lods
push
(bad)
stc
test
xor
xchg
shl
cwde
scas
cmp
aam
xor
xchg
addps
test
xor
xchg
psubusb
xor
mov
in
in
cmps
mov
imul
in
in
(bad)
in
cmps
iret
outs
jno
mov
imul
pusha
jae
mov
sbb
mov
xor
mov
jno
call
imul
in
cmps
mov
in
cmps
mov
imul
in
(bad)
in
cmps
or
data16
in
cmps
mov
in
arpl
sbb
jne
loopne
int3
in
cmps
mov
pop
jae
sbb
fmul
sbb
(bad)
sbb
mov
daa
jp
sbb
sbb
xor
push
(bad)
in
cmps
aas
cwde
imul
in
cmps
mov
in
sbb
inc
popa
jmp
sub
arpl
inc
jne
sub
jb
in
shl
cmps
pusha
repz
xor
jmp
sbb
mov
cwde
mov
pop
xor
shl
jge
in
in
cmps
mov
in
push
xchg
in
xor
dec
or
xor
xchg
or
adc
lods
pop
mov
in
dec
mov
in
mov
loopne
cmps
imul
xchg
cmps
iret
in
inc
iret
scas
cdq
cmps
into
in
(bad)
in
cmps
pusha
jae
mov
sbb
mov
xor
mov
jno
rcr
shl
in
test
in
mov
imul
in
fnsave
sbb
movs
iret
in
or
les
push
mov
in
cwde
aas
sahf
mov
iret
in
mov
pop
imul
xor
jmp
xchg
scas
xor
jno
xor
jno
xor
jae
pop
xor
sub
xor
loopne
aam
xchg
cmps
iret
scas
xchg
cmps
into
in
lods
adc
xchg
aam
iret
in
punpcklbw
fsub
test
xchg
movs
iret
repz
jge
sbb
test
jmp
sahf
iret
scas
lea
adc
imul
xor
loopne
xor
loopne
arpl
ret
jl
sbb
fstp
in
cmps
fistp
imul
dec
loopne
mov
popa
pop
xor
ds
sbb
mov
fsubr
pop
mov
sahf
xchg
cmps
iret
in
lahf
aas
lods
sub
pusha
jae
mov
sbb
(bad)
in
cmps
pusha
repz
jg
sbb
pop
pop
xchg
sbb
xchg
in
cmps
into
in
or
imul
in
pushf
sub
sahf
aam
sbb
jne
push
pop
inc
test
sbb
jae
mov
sbb
pop
xor
jmp
cmps
pop
pop
cwde
sbb
jae
mov
sbb
mov
pop
imul
fmul
lods
js
in
nop
xor
sbb
xchg
repz
loopne
mov
cmc
pop
xor
cmp
movs
scas
outs
xchg
inc
loopne
sbb
loopne
mov
cmc
movs
iret
in
ror
sub
push
mov
push
mov
int
xchg
shl
loop
xor
xchg
in
aam
in
loopne
pop
imul
out
cmps
mov
pop
popa
shl
cwde
scas
pop
data16
jl
sbb
or
xor
out
cmps
mov
sahf
adc
repz
jl
sbb
fld
cmps
iret
scas
leave
movs
iret
in
cmp
gs
aad
out
cmps
mov
dec
imul
cld
ror
xchg
push
fcomp
xor
xchg
cmps
test
pop
jl
sbb
fstp
cmps
iret
scas
icebp
movs
iret
in
jge
sbb
gs
aad
out
cmps
mov
xchg
add
or
sbb
or
sbb
shl
call
fdivr
sub
mov
in
int3
int
xchg
ror
sub
xor
xchg
in
cld
int
xchg
or
adc
xor
inc
jp
sbb
mov
cmp
push
in
int
xchg
or
sbb
jae
mov
sbb
pop
xor
jmp
cmps
mov
dec
push
lock
jp
fmul
mov
sbb
mov
fadd
xor
imul
in
aad
scas
xchg
cmps
iret
dec
adc
iret
in
enter
cmps
test
(bad)
int
xchg
cmps
test
fdivr
int
xchg
push
mov
in
mov
loop
cmps
mov
dec
shl
adc
jno
sbb
enter
imul
test
pop
pop
mov
in
movs
into
in
or
or
xchg
pop
enter
mov
xchg
cmps
iret
dec
in
int3
in
cmps
pusha
repz
xor
cmp
iret
call
je
imul
iret
dec
adc
pop
call
pop
neg
sub
fst
in
cmps
xor
imul
in
pop
xor
imul
iret
sbb
mov
in
pop
xor
scas
aad
mov
adc
sahf
int
iret
in
aad
mov
add
sbb
js
sbb
pop
pop
sbb
(bad)
in
cmps
pusha
jno
mov
cmp
cmp
data16
sbb
iret
scas
shl
sbb
pop
or
(bad)
cld
loopne
push
out
cmps
mov
out
cmps
pop
fild
mov
sbb
(bad)
in
cmps
pusha
repz
jl
sbb
pushf
and
in
xor
in
pop
(bad)
imul
in
xor
pop
fcomp
xor
jb
fcomp
imul
fwait
in
xor
in
pop
mov
in
pop
inc
shl
inc
jp
pop
dec
sbb
push
in
push
dec
xor
jmp
outs
arpl
xor
imul
jae
pop
xor
in
int3
in
cmps
pusha
dec
or
jb
in
int3
in
cmps
pusha
repz
iret
in
pushf
cmp
xchg
cmps
xor
sbb
mov
cmc
movs
iret
in
ror
sbb
fist
sbb
mov
fist
jmp
call
mov
xchg
cmps
iret
dec
sub
xor
scas
xor
in
cld
int
xchg
mov
cmp
iret
scas
int
iret
in
add
sbb
mov
xchg
cmps
iret
lock
ror
sbb
add
fldcw
gs
mov
fadd
cmp
addr16
xor
vpshlw
xchg
xchg
scas
xlat
xchg
sub
mov
fcom
js
sbb
call
gs
cmp
mov
out
sub
xor
loopne
push
xchg
cmp
mov
pop
test
test
shl
jge
or
into
adc
or
xchg
pop
loopne
fimul
sbb
pop
fcomp
imul
adc
cwde
mov
call
xor
sub
pusha
xchg
cdq
sbb
idiv
sbb
pushf
cmp
sbb
mov
dec
sub
mul
sbb
aas
lods
sub
mov
dec
add
jne
in
ss
out
gs
sbb
sbb
mov
push
imul
xchg
sub
or
xchg
aad
or
fdivr
pop
xor
imul
xor
xor
repz
xor
loopne
mov
fadd
cmps
rep
inc
xor
in
enter
lock
imul
sbb
mov
mov
inc
mov
loopne
add
pop
fsubr
btc
out
xor
or
fsubr
mov
sti
xchg
cmps
jo
imul
sahf
sar
mov
in
aad
fisttp
xor
enter
mov
lahf
sti
pop
xor
loopne
sbb
loopne
arpl
fcomp
cmp
mov
popa
push
lock
jo
test
mov
fdivr
pop
xor
test
lahf
aas
jns
pop
neg
sub
sbb
scas
mov
imul
in
aad
fisttp
mov
add
cmp
sbb
pushf
shl
xchg
mov
cmp
mov
popa
push
lock
jo
test
mov
fcom
imul
pop
adc
cwde
fistp
imul
dec
loopne
mov
dec
pop
xor
scas
inc
xor
cmp
addr16
sbb
(bad)
sar
popf
push
xchg
xchg
pop
enter
enter
pop
pop
push
inc
xor
shr
sbb
xlat
xchg
in
mov
not
sub
or
imul
loope
adc
pop
imul
xor
cmps
inc
or
pushf
fistp
xor
repz
sahf
imul
mov
jge
enter
div
xor
jno
xor
jno
xor
sbb
repz
inc
xor
loopne
mov
push
xor
xor
xchg
cmps
pusha
repz
inc
xor
add
scas
xchg
xchg
in
or
in
or
adc
xor
gs
imul
xor
or
sahf
mov
iret
in
ffree
les
push
imul
or
mov
imul
jo
add
sbb
std
lods
out
cmps
xor
scas
imul
fcom
mov
push
imul
sbb
movs
(bad)
xchg
cmps
iret
xchg
xchg
jno
xchg
scas
mov
add
pusha
repz
sbb
loopne
sub
(bad)
cld
loopne
mov
xchg
cmps
mov
pop
imul
iret
in
mov
pop
or
pop
mov
in
mov
add
pop
pop
pop
push
in
int
xchg
or
sbb
jae
mov
sbb
pop
xor
jmp
cmps
mov
dec
push
lock
cwde
xor
imul
mov
in
aad
scas
xchg
cmps
iret
dec
sub
enter
mul
fdivr
int
xchg
or
in
mov
in
cmps
mov
gs
lock
fdiv
sbb
xchg
repnz
sahf
xchg
cmps
iret
in
mov
add
pop
mov
dec
cmp
sbb
fld
in
movs
into
in
or
dec
jbe
xor
shr
test
xchg
cmps
mov
arpl
pop
sbb
fisttp
repz
sbb
pushf
sub
xchg
jno
xchg
scas
lahf
mov
xchg
cmps
iret
pop
imul
in
pop
xor
imul
iret
sbb
mov
in
pop
xor
sahf
mov
iret
in
lahf
mov
in
mov
jmp
cmps
imul
shl
xor
xor
jno
xor
jno
aad
out
cmps
iret
dec
add
in
pop
xor
test
pop
xor
fdiv
int
xchg
mov
add
mov
fcom
cmps
pop
fild
mov
sbb
(bad)
in
cmps
pusha
repz
sbb
pushf
and
in
fcmovne
in
pop
(bad)
imul
in
xor
pop
fdiv
jne
xor
jb
fcomp
imul
fwait
in
fcmovne
in
pop
mov
in
pop
inc
shl
aas
lahf
pop
xor
add
sbb
or
imul
xchg
in
enter
or
cmps
inc
xor
call
pop
pop
sbb
sub
pop
imul
iret
dec
and
iret
sbb
mov
imul
in
or
jmp
cmp
test
pop
xor
cmps
test
in
aam
in
or
hlt
jo
xor
xchg
or
scas
std
movs
iret
in
es
shl
xchg
xchg
pop
enter
test
and
sbb
mov
pop
imul
jb
aas
mov
push
imul
outs
inc
xor
repz
in
pop
xor
xchg
fcmovnu
and
shl
sbb
movs
iret
in
jmp
hlt
pop
add
cmc
movs
iret
in
mov
dec
aas
cmps
test
call
cmp
xchg
jno
xchg
scas
push
fsubr
xchg
pop
enter
mov
xchg
cmps
iret
sbb
xor
xchg
or
fdiv
xor
scas
xor
in
cld
int
xchg
mov
add
mov
fcom
cmps
fdivr
(bad)
int
xchg
pop
outs
inc
mov
rcl
cwde
test
shr
(bad)
in
lahf
jge
enter
imul
mov
jne
loopne
arpl
and
sbb
sbb
fsub
pop
xor
imul
sub
mov
sub
pop
xor
jns
sbb
inc
pop
in
sbb
mov
or
pop
mov
fdivr
mov
or
xchg
or
aas
xor
mov
add
adc
xor
and
cmp
pop
(bad)
cld
loopne
rcl
push
fdiv
and
mov
pop
pop
xor
mov
jne
loopne
outs
inc
xor
popa
dec
cmp
movs
mov
scas
dec
or
mov
sbb
sub
cwde
xchg
pop
dec
imul
cmps
inc
adc
ror
in
mov
jne
loopne
(bad)
pop
fmul
sbb
xor
jnp
iret
in
mov
or
pop
or
imul
fsubr
pop
xor
mov
sbb
mov
or
pop
mov
xor
dec
xor
add
in
mov
xor
(bad)
jb
cmp
hlt
adc
cmps
inc
or
push
fadd
xor
gs
imul
enter
outs
inc
mov
rcl
dec
cmp
addr16
sbb
(bad)
jae
cmp
call
ret
call
fmul
jno
xor
cmp
arpl
add
in
fcomi
adc
inc
push
add
repz
inc
xor
add
hlt
jl
xor
imul
xor
cmp
aad
test
movs
dec
sbb
pop
js
pop
mov
data16
int
pop
xor
ja
jne
cmp
mov
xor
mov
jne
loopne
mov
dec
jo
xor
xor
jno
aad
(bad)
cmp
cmp
sbb
jo
outs
fincstp
mov
pop
xor
and
cmp
aad
add
sbb
or
xlat
or
mov
rol
sbb
fimul
imul
xor
imul
(bad)
std
loopne
nop
out
xchg
cmps
mov
fld
pop
cmp
dec
int3
lock
imul
pop
sbb
js
imul
sbb
mov
sbb
pop
mov
in
mov
sbb
mov
imul
neg
pop
add
sub
sbb
adc
loop
xor
xchg
or
test
pop
xor
sahf
mov
iret
in
sahf
mov
in
nop
iret
pop
jmp
mov
xor
in
xchg
cmps
push
jno
xor
jae
mov
sbb
enter
aad
jmp
cmps
iret
dec
add
scas
pop
imul
enter
pop
stos
neg
xor
add
sbb
ret
fcomp
xor
test
sbb
enter
fcom
imul
xchg
in
movs
enter
fadd
cmps
iret
cwde
lods
inc
mov
in
cwde
aas
lahf
imul
xor
sbb
xchg
cmps
iret
sbb
xchg
imul
in
push
mov
imul
jmp
iret
in
mov
jg
cmps
mov
gs
jge
in
out
xchg
cmps
mov
outs
xor
out
mov
popf
cmps
iret
es
cmps
xor
data16
imul
in
sahf
mov
xchg
movs
iret
in
aad
mov
sbb
cwde
mov
pop
xor
shl
cwde
scas
pop
addr16
xor
cmps
xchg
movs
iret
in
mov
jge
cmps
mov
jns
enter
pop
sbb
push
in
ret
xchg
push
xchg
in
xor
dec
in
stos
call
dec
xor
call
pop
mov
in
aad
sbb
and
imul
aas
sahf
xor
sbb
in
out
cmps
or
push
xor
imul
std
pop
imul
in
xor
sahf
xchg
movs
iret
in
mov
add
mov
fisttp
sbb
pop
xor
cmp
icebp
in
sbb
xor
lahf
ja
aam
enter
mov
imul
scas
or
imul
xor
sbb
pop
sbb
xor
xchg
or
int3
jp
xor
sahf
mov
iret
in
sahf
mov
in
xor
sahf
xchg
cmps
iret
in
mov
or
pop
pop
call
enter
fdivr
jle
xor
add
sbb
mov
xchg
cmps
iret
dec
or
not
xchg
or
sbb
into
in
or
nop
jle
xor
mov
sbb
(bad)
jecxz
cmps
pusha
repz
xchg
in
movs
into
in
or
xor
mov
sahf
mov
iret
in
sahf
mov
in
cwde
xor
in
int3
jecxz
cmps
pusha
jae
mov
sbb
(bad)
jecxz
cmps
pusha
repz
dec
xor
jmp
out
cmps
iret
dec
xor
not
push
pop
mov
in
mov
jns
cmps
mov
gs
lock
xor
sbb
mov
xchg
cmps
iret
cwde
test
dec
xor
xor
mov
xchg
cmps
iret
cwde
xchg
push
aas
popf
and
xor
jmp
retf
lock
imul
enter
shr
sbb
enter
fsubr
dec
mov
mov
test
pop
imul
iret
dec
adc
mov
xchg
cmps
iret
dec
xor
sbb
mov
popf
cmps
iret
fwait
aad
int3
in
cmps
pop
outs
jns
mov
popf
cmps
iret
fucomp
pop
int3
in
cmps
xor
cmps
mov
cwde
aam
(bad)
in
pop
inc
retf
enter
mov
in
xor
repz
sahf
xchg
cmps
iret
in
mov
or
jns
rcr
shl
xchg
in
movs
enter
fcomp
jp
xor
xchg
aad
out
cmps
iret
dec
sub
lea
adc
sbb
nop
jnp
xor
xchg
(bad)
sbb
xor
xchg
or
scas
popf
mov
and
imul
iret
dec
sub
iret
dec
loop
(bad)
mov
repz
dec
xor
in
enter
pusha
jno
cmps
test
xchg
cmps
iret
jae
hlt
jo
add
sbb
or
jl
pop
xor
scas
aad
out
cmps
iret
dec
cmp
iret
repz
cmp
stos
push
lock
inc
int3
in
cmps
test
xchg
cmps
iret
repz
call
pop
outs
inc
xor
mov
in
xor
or
imul
xor
mov
pop
iret
push
std
cwde
jb
call
pop
mov
sbb
pop
pop
(bad)
xor
xor
repz
mov
or
outs
shr
mov
xor
aas
jg
mov
sahf
mov
iret
in
lahf
xor
loopne
pop
pop
push
xchg
into
in
or
lea
and
imul
div
xor
sbb
pop
pop
sbb
pop
mov
in
mov
or
mov
dec
add
sbb
mov
or
mov
pop
xchg
or
and
mov
sahf
mov
iret
in
lahf
mov
pop
cdq
or
nop
pop
xor
sbb
jne
cmp
mov
inc
pop
xor
mov
mov
xchg
cmps
iret
xchg
scas
xor
xchg
sub
pusha
xchg
sub
pusha
repz
iret
in
pushf
cmp
scas
jae
mov
js
push
imul
in
cmps
mov
sbb
sbb
jae
mov
sbb
inc
rcr
xor
imul
iret
xchg
xchg
jno
xchg
scas
xor
mov
sbb
jb
add
sbb
mov
call
pop
outs
shr
mov
xor
cmp
movs
retf
jno
mov
(bad)
cld
loopne
(bad)
in
cmps
mov
sbb
jo
cmp
sbb
sahf
mov
inc
pop
xor
add
pop
imul
pop
mov
in
mov
fdivr
int3
lock
imul
sbb
pop
repz
ss
in
sbb
dec
sbb
xchg
or
imul
in
cmps
pusha
repz
adc
push
test
pop
imul
arpl
push
xchg
or
imul
in
cmps
pusha
repz
pushf
and
xchg
imul
fsub
xor
imul
sbb
pop
pop
pop
in
int3
dec
add
pop
imul
pop
sbb
mov
popa
mov
and
test
movs
xor
in
test
in
shl
jno
cmps
inc
out
hlt
fcomp
xor
fwait
loop
xor
xchg
or
dec
xchg
mov
aas
aas
xor
repz
push
sbb
xor
xchg
fcomi
or
mov
fsub
xchg
cmps
mov
fld
pop
cmp
dec
int3
lock
imul
push
sbb
outs
inc
mov
loopne
or
fcomp
fs
xor
out
imul
mov
mov
xor
jmp
retf
lock
imul
das
sbb
mov
xchg
xor
scas
xor
jae
sub
sbb
fcomi
adc
aas
lahf
loopne
xor
call
pop
pop
sbb
movs
(bad)
in
or
movs
gs
xor
aad
out
cmps
iret
dec
sub
sbb
test
jmp
sahf
mov
in
mov
push
imul
fucom
fisttp
mov
sbb
(bad)
in
xchg
cmps
pusha
repz
push
xor
loopne
adc
xchg
cmps
aas
lods
aam
(bad)
in
(bad)
lods
aam
(bad)
in
(bad)
lods
aam
(bad)
in
btc
loopne
mov
mov
pop
repnz
jno
dec
xchg
ins
mov
sub
mov
sbb
adc
gs
fld
pop
addr16
gs
fld
pop
addr16
mov
sbb
in
cmc
xchg
cmps
mov
in
bsr
ds
or
mov
sahf
dec
mov
in
sahf
pop
sti
fistp
xor
mov
sbb
(bad)
in
cmps
pusha
repz
dec
xor
in
int3
in
cmps
pusha
repz
push
mov
in
psubusb
xor
iret
call
mov
xchg
int3
in
cmps
pusha
repz
out
iret
in
pop
pop
sbb
pop
fcomp
xor
sub
sahf
xchg
scas
iret
in
aad
out
cmps
iret
dec
xor
hlt
jae
fstp
in
xchg
cmps
mov
mov
(bad)
in
cmps
pusha
repz
xor
jmp
outs
js
xor
call
lock
adc
rcr
rcr
shl
sub
or
cmp
imul
pop
loopne
(bad)
cld
loopne
(bad)
out
cmps
mov
pop
imul
pop
mov
in
movs
into
in
or
jl
pop
xor
xchg
or
ficomp
xor
in
stos
iret
in
pushf
sub
scas
pop
stc
fldcw
gs
mov
movs
adc
jp
scas
push
pop
imul
sbb
pop
pop
lock
xor
xor
repz
mov
adc
outs
shr
mov
cs
xchg
shl
cwde
ins
int3
lock
imul
sbb
pop
pop
cmp
sbb
jae
pop
and
add
jmp
sbb
rep
push
xor
call
pop
pop
pop
ficomp
xor
das
sub
add
add
repz
push
xor
in
int3
dec
add
sbb
xchg
imul
xor
loopne
xor
loopne
pop
pop
inc
pop
xor
pop
test
pop
imul
mov
sbb
arpl
jecxz
jle
es
fsubr
mov
xor
mov
std
cwde
jb
popa
mov
in
int3
lock
imul
mov
in
xor
repz
push
xor
loopne
xor
loopne
pop
sbb
fst
cmps
pusha
xchg
in
lods
into
in
or
fsub
xor
xchg
push
mov
push
xor
cmps
inc
jecxz
lds
sbb
xor
shl
cwde
sbb
sbb
fcom
gs
xor
stos
xor
xchg
in
mov
in
or
in
(bad)
in
cmps
pusha
in
mov
xor
xchg
jb
add
push
xor
loopne
add
loopne
fnstenv
call
out
xchg
cmps
iret
xchg
sub
pop
sbb
push
xor
add
sbb
call
xchg
mov
adc
iret
outs
xchg
xor
jg
xor
loopne
mov
in
mov
sbb
pop
sbb
fstp
in
cmps
pusha
nop
sub
mov
ins
or
sbb
fcomp
pop
xor
lahf
mov
adc
pop
pop
adc
xor
out
sub
test
xchg
ins
outs
jbe
sub
mov
ins
popa
imul
(bad)
adc
pop
iret
push
std
cwde
jb
loopne
mov
xchg
sbb
loop
call
imul
sbb
hlt
pop
loopne
xbegin
xchg
cmps
mov
in
fwait
mov
pop
jmp
mov
mov
pop
jmp
mov
xor
xor
mov
cwde
lods
push
mov
pop
jmp
mov
mov
in
aaa
xor
in
mov
xchg
sbb
loop
call
cdq
jmp
sbb
fcomi
pop
in
mov
xchg
sbb
loop
and
sbb
shl
jge
dec
cwde
fld
pop
mov
pop
jmp
mov
mov
out
xor
sbb
pushf
fld
pop
mov
pop
jmp
mov
mov
pop
jmp
mov
xor
xor
lock
xor
sahf
mov
iret
in
(bad)
cmps
mov
rcl
pop
inc
loop
and
sbb
push
mov
xchg
sbb
loop
call
imul
cmp
imul
mov
xchg
sbb
loop
and
sbb
push
mov
xchg
sbb
loop
call
mov
and
imul
frstor
imul
pop
jmp
mov
repz
sbb
pushf
xor
int
jb
loopne
sbb
loopne
mov
pop
jmp
mov
addr16
xor
jmp
sbb
push
mov
xchg
sbb
loop
and
sbb
fwait
add
imul
sbb
pushf
xor
fstp
shl
cmps
fcom
popa
pop
xor
imul
xor
adc
pop
iret
push
std
cwde
jb
ss
imul
or
fcomp
imul
push
ss
mov
fld
mov
sbb
pop
mov
or
xor
and
fld
pop
pop
sbb
pop
xor
mov
adc
mov
in
cwde
inc
das
sbb
mov
xchg
cmps
iret
xchg
scas
mov
sbb
pop
iret
scas
mov
sub
xor
pop
pop
xor
loopne
(bad)
std
loopne
or
xchg
cmps
mov
sbb
shr
outs
pop
xor
scas
mov
sbb
pop
pusha
repz
push
xor
add
imul
iret
dec
xchg
ins
aam
sub
or
xor
xor
test
mov
mov
dec
xchg
cmps
mov
jns
lock
sbb
sbb
xor
adc
nop
xor
imul
retf
in
sti
movs
fld
pop
iret
push
std
cwde
jb
loopne
(bad)
std
loopne
adc
xchg
cmps
mov
sbb
jecxz
or
ficomp
cdq
leave
add
xchg
mov
xchg
xchg
shr
xchg
cdq
scas
(bad)
xchg
in
inc
retf
in
shl
fucomp
addr16
in
pop
fld
sbb
iret
in
mov
jns
icebp
in
sbb
xor
cmp
in
fdiv
sbb
fisttp
out
cmps
or
pop
sahf
neg
imul
xor
sahf
mov
xchg
cmps
iret
sub
cmps
add
scas
aad
xor
cmps
iret
dec
add
(bad)
cld
sub
sahf
inc
mov
push
adc
pop
sbb
fstp
loopne
cmps
pusha
xchg
in
mov
in
or
nop
outs
pop
xor
xchg
or
imul
scas
(bad)
xchg
in
inc
retf
in
shl
xchg
in
ja
in
or
cmc
lds
pop
sbb
fstp
loopne
cmps
pusha
repz
xor
loopne
(bad)
std
loopne
and
xchg
cmps
mov
shr
jae
jmp
imul
fdiv
pusha
pop
xor
imul
xor
adc
xor
add
jo
loopne
in
xchg
cdq
jno
xchg
scas
xor
imul
sbb
jne
jmp
sbb
pop
xor
scas
lahf
jne
push
xor
jmp
sbb
sahf
or
imul
shr
xor
imul
(bad)
jno
cmps
add
jno
xor
jno
xor
jae
pop
xor
jmp
pop
pop
sti
mov
xor
mov
fadd
popa
pop
xor
add
lock
imul
jl
imul
sahf
push
movs
iret
in
sahf
mov
in
xor
sbb
fmul
imul
hlt
mov
inc
pop
imul
mov
pop
imul
fadd
mov
sbb
mov
inc
mov
xor
aad
sbb
rol
xor
mov
xchg
mov
sbb
pop
or
clc
jb
add
xor
cdq
pop
rcl
pop
fsubr
cdq
shl
retf
pop
imul
xor
lds
xchg
inc
imul
xchg
scas
ds
sbb
pop
xor
imul
iret
dec
add
retf
pop
pop
sbb
mov
and
adc
test
aad
ret
xchg
cmps
iret
dec
adc
daa
pop
xor
xchg
or
in
xor
mov
mov
adc
pop
mov
sbb
jae
mov
(bad)
pop
imul
fadd
mov
iret
cwde
lods
jo
or
fucomp
in
cmps
pusha
jae
aad
sbb
push
xchg
rcr
mov
hlt
lock
imul
iret
call
scas
push
sbb
jb
add
fcomp
aad
ret
xchg
cmps
iret
dec
cmp
shl
shl
xchg
in
or
xchg
or
push
ins
pop
xor
xor
jno
xor
repz
scas
iret
in
sub
cmp
pop
pop
pop
inc
pop
xor
pop
test
pop
imul
xor
add
sbb
lock
pop
pop
sbb
in
test
pop
imul
mov
sbb
pop
pop
sbb
cmps
add
repz
iret
in
sahf
mov
fstp
in
xchg
fcomi
cmp
push
imul
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
rcr
stc
enter
pop
iret
lds
sbb
enter
pop
iret
fstp
sbb
enter
pop
iret
fstp
sbb
enter
pop
iret
rcr
sbb
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
enter
pop
iret
lods
pop
jae
stc
enter
pop
iret
mov
enter
pop
iret
movs
pop
jae
stc
enter
pop
iret
ds
enter
pop
iret
ds
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
sbb
sbb
iret
test
sbb
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
gs
mov
addr16
xor
loopne
mov
dec
sub
enter
fcomp
imul
out
cwde
inc
xor
lahf
ja
push
sub
lock
aas
movs
outs
push
lock
ins
fcmovne
cmp
fistp
cs
mov
cwde
inc
push
jmp
repz
pop
xor
add
jno
or
jbe
cmps
iret
inc
mov
pop
and
imul
pop
dec
xor
imul
pop
dec
cmps
rcr
imul
fcmovnbe
cmps
iret
in
(bad)
jmp
and
cmps
nop
adc
into
mov
loop
adc
stos
push
xor
imul
sbb
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
sub
stc
enter
pop
iret
ds
enter
pop
iret
and
stc
enter
pop
iret
ds
enter
pop
iret
cmp
stc
enter
pop
iret
ds
enter
pop
iret
xor
stc
enter
pop
iret
ds
enter
pop
iret
or
stc
enter
pop
iret
ds
enter
pop
iret
add
stc
enter
pop
iret
ds
enter
pop
iret
sbb
stc
enter
pop
iret
ds
enter
pop
iret
adc
stc
enter
pop
iret
ds
enter
pop
iret
ds
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
rcr
enter
pop
iret
lds
stc
enter
pop
iret
fstp
stc
enter
pop
iret
fstp
stc
enter
pop
iret
rcr
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
enter
pop
iret
lods
pop
jae
stc
enter
pop
iret
mov
enter
pop
iret
movs
pop
jae
stc
enter
pop
iret
ds
enter
pop
iret
ds
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
mov
stc
enter
pop
iret
lea
stc
enter
pop
iret
sbb
imul
sbb
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
imul
sbb
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
sub
sbb
enter
pop
iret
ds
enter
pop
iret
and
sbb
enter
pop
iret
ds
enter
pop
iret
cmp
sbb
enter
pop
iret
ds
enter
pop
iret
xor
sbb
enter
pop
iret
ds
enter
pop
iret
or
sbb
enter
pop
iret
ds
enter
pop
iret
add
sbb
enter
pop
iret
ds
enter
pop
iret
sbb
sbb
enter
pop
iret
ds
enter
pop
iret
adc
sbb
enter
pop
iret
ds
enter
pop
iret
ds
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
rcr
stc
enter
pop
iret
lds
sbb
enter
pop
iret
fstp
sbb
enter
pop
iret
fstp
sbb
enter
pop
iret
rcr
sbb
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
enter
pop
iret
movs
pop
jae
stc
enter
pop
iret
ds
enter
pop
iret
ds
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
mov
sbb
enter
pop
iret
lea
sbb
enter
pop
iret
sbb
sbb
iret
test
sbb
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
imul
sbb
iret
ds
pop
jae
stc
enter
pop
iret
ds
pop
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
iret
ds
jae
stc
enter
pop
