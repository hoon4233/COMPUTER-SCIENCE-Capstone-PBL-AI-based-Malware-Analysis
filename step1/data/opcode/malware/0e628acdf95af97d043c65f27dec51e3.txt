pop
mov
push
pushf
xor
mov
lods
ins
sbb
aaa
ins
mov
mul
dec
(bad)
ja
sbb
push
enter
nop
pop
(bad)
push
loopne
repz
push
cmps
mov
sbb
jo
fadd
sub
pop
lock
xchg
lods
pop
adc
pop
in
stos
pop
cwde
sbb
imul
sub
mov
das
sbb
pop
js
out
cmp
ret
xchg
push
sbb
sub
jmp
xchg
sbb
in
dec
clc
rcl
push
cmps
sbb
mov
adc
sub
js
out
arpl
add
clc
retf
sbb
int
and
fimul
mov
imul
jge
inc
fsubrp
stos
aam
pop
fcom
xor
inc
jge
push
loopne
jle
adc
shr
mov
leave
push
stos
and
int
gs
ds
mov
xchg
(bad)
sti
out
test
das
push
inc
sbb
xor
mov
and
ins
ins
sbb
in
pop
(bad)
fwait
jnp
adc
fdiv
pop
dec
xor
aam
fbld
int
aam
bound
in
ins
sbb
mov
stos
repnz
daa
(bad)
ins
nop
and
dec
mov
sbb
fsubr
dec
add
mov
push
pop
je
(bad)
xor
rol
cmp
in
fmul
xchg
pushf
movs
(bad)
fwait
xchg
cli
push
jmp
test
fcmovne
outs
push
popa
daa
xor
es
js
(bad)
(bad)
xor
(bad)
add
rol
retf
sti
push
xchg
ficomp
mov
movs
ds
mov
pop
fimul
and
sahf
pop
xor
enter
call
mov
retf
ja
imul
inc
fidiv
shr
xor
adc
push
imul
sbb
push
fs
(bad)
int
inc
outs
mov
(bad)
mov
mov
mov
mov
shr
xchg
sub
and
(bad)
icebp
dec
test
push
popa
mov
fstp
frstor
lahf
test
mov
push
xchg
idiv
addr16
push
ins
repnz
pop
push
adc
adc
push
adc
inc
in
mov
cli
add
test
mov
xlat
addr16
fcmovnu
je
jnp
ret
ds
dec
dec
sbb
mov
lods
xor
cmp
aam
nop
clc
jp
enter
mov
loop
mov
in
enter
jle
inc
movs
and
and
mov
fwait
cmp
aad
out
popf
out
xchg
mov
and
inc
pop
lods
pop
sub
xchg
jno
push
ins
inc
adc
push
xor
xchg
ins
dec
cwde
jecxz
dec
(bad)
push
and
out
xor
mov
push
pushf
pop
sbb
fwait
outs
sahf
cmp
sbb
inc
pop
into
(bad)
cmp
scas
cmp
dec
sbb
sub
ins
push
xor
js
(bad)
stos
in
outs
pop
dec
fistp
test
mov
(bad)
cmp
sti
push
xchg
movs
test
push
fwait
in
stc
pop
das
inc
sahf
xchg
mov
xor
push
arpl
dec
call
mov
fcomip
(bad)
adc
das
out
(bad)
arpl
adc
mov
mov
inc
(bad)
nop
in
sub
popf
mov
inc
je
call
mov
je
shr
mov
lods
push
fisub
fistp
(bad)
xchg
jle
lahf
out
inc
fisub
scas
cli
cmp
ficom
adc
mov
pop
dec
fidivr
mov
jmp
inc
jnp
or
bnd
cmp
frstor
fisubr
push
loop
stos
mov
cmps
fcomi
lds
cmc
cwde
test
cmps
out
rol
push
mov
and
rcl
and
ret
jmp
ins
retf
lock
adc
loopne
lods
ret
jmp
mov
dec
imul
fst
repz
imul
pop
fstp
mov
xchg
out
jbe
push
sbb
add
xor
mov
fcomp
or
mov
enter
or
adc
lahf
inc
mov
jmp
in
push
repnz
sub
xchg
test
push
add
mov
adc
adc
add
add
add
rcl
sti
push
push
in
inc
(bad)
daa
lds
xor
mov
jg
jne
cdq
push
sbb
mov
pop
fild
scas
dec
outs
cmp
dec
jmp
or
cmc
daa
xchg
mov
sub
iret
jp
enter
scas
push
sar
sub
mov
cld
inc
jno
neg
sbb
pop
mov
frstor
mov
jno
xchg
jl
add
and
dec
pusha
lods
in
add
in
dec
loope
mov
iret
push
mov
fist
push
call
popf
xchg
and
das
xchg
inc
xlat
xchg
sti
push
sar
(bad)
aad
mov
lods
es
or
sbb
mov
(bad)
jae
jne
aam
pop
cmps
jmp
jg
sbb
out
repz
mov
pop
imul
sub
mov
push
mov
xor
out
push
repz
ss
jl
pop
xchg
push
enter
mov
(bad)
leave
push
pop
mov
pop
lock
xchg
and
cs
push
jecxz
call
xchg
sahf
push
push
frstor
repnz
mov
cmp
mov
dec
sub
fild
xchg
iret
push
gs
adc
call
imul
jmp
shr
adc
test
and
inc
shr
lods
imul
adc
lea
mov
jmp
leave
movs
mov
mov
out
js
(bad)
ins
test
mov
setnp
leave
ds
js
pop
adc
int3
sbb
mov
(bad)
cwde
icebp
out
and
cwde
mov
push
pop
adc
addr16
or
push
or
jns
jecxz
mov
xchg
and
push
test
pop
inc
dec
mov
ret
push
push
frstor
inc
lahf
or
pop
fstp
pop
je
sbb
cwde
xor
mov
imul
cmp
mov
leave
xchg
jmp
push
sbb
push
sub
ins
mov
xor
das
sbb
adc
fwait
xor
xchg
(bad)
pop
lock
(bad)
pusha
(bad)
and
pop
(bad)
and
xchg
test
cmps
push
mov
jmp
ins
xor
sub
push
jns
sbb
imul
jmp
hlt
xchg
dec
out
adc
(bad)
and
(bad)
popa
push
adc
xor
fstp
stos
adc
ins
lds
jbe
rcr
test
in
mov
(bad)
ins
pop
add
fild
adc
arpl
sbb
loopne
dec
and
cli
sbb
lods
pop
test
adc
shl
outs
das
xor
rcr
cmp
fmulp
mov
pushf
outs
sbb
in
jg
js
bound
inc
in
(bad)
sti
xchg
sbb
aas
fdivr
sbb
rcr
or
aas
lods
push
cmp
jmp
or
xchg
and
inc
push
ror
hlt
jbe
pop
mov
pop
or
loop
fidivr
rcr
pop
xor
mov
inc
jb
retf
sub
(bad)
data16
xor
mov
jecxz
test
out
adc
jbe
jno
imul
out
xchg
gs
fist
xchg
jl
das
adc
out
ins
out
into
dec
push
fstp
mov
mov
lods
pop
push
sbb
jp
mov
dec
pop
xor
push
nop
popf
xchg
xchg
repz
jne
int3
outs
ds
and
mov
cmps
push
fist
mov
sub
jnp
sub
pop
xchg
ror
jno
mov
mov
stos
rcl
push
mov
jbe
inc
into
fisubr
xor
push
outs
push
push
or
ins
daa
call
(bad)
shr
sub
mov
out
pandn
inc
dec
movs
dec
mov
in
stos
ror
retf
push
push
pop
xchg
in
pop
xor
fmul
test
adc
adc
inc
pop
in
push
sbb
push
test
cmps
xor
dec
pop
mov
add
mov
iret
inc
xor
or
xchg
add
ror
inc
sbb
cmp
movs
dec
add
mov
push
push
retf
inc
fs
in
xchg
push
pop
mov
rol
cdq
test
xor
pop
ret
add
mov
mov
lds
lods
sbb
bnd
retf
xchg
ficom
cwde
adc
nop
rcl
cmp
dec
mov
(bad)
cld
mulps
inc
jnp
imul
add
cwde
mov
push
in
mov
ret
cmp
adc
loopne
int3
jae
pop
cmp
sub
or
xor
xchg
and
in
sub
hlt
mov
or
call
mov
add
dec
push
daa
adc
scas
jmp
stos
out
imul
add
mov
pop
enter
dec
lgs
ret
aam
outs
add
pop
fdivr
fidivr
lea
arpl
arpl
pop
sahf
push
add
fs
dec
outs
popa
xchg
test
mov
jecxz
aad
int3
iret
cli
pop
setns
repnz
and
xchg
mov
inc
les
ss
ror
xchg
inc
push
pop
loope
aam
cmps
and
and
push
sub
lea
add
mov
and
ror
push
jg
and
sbb
push
repz
push
sbb
cmp
ror
arpl
dec
std
xchg
enter
xchg
add
cmp
mov
daa
std
(bad)
fisubr
out
fldenv
rep
xchg
mov
aam
and
push
cmp
bound
mov
adc
cmp
ret
mov
push
inc
jl
cmp
fimul
loope
jne
repnz
pop
jle
fmul
pusha
and
das
ins
gs
enter
dec
lahf
stos
mov
or
add
sub
xor
lock
loopne
push
mov
pop
cmc
popf
mov
nop
imul
pop
add
xchg
jmp
or
retf
mov
jmp
rol
mov
pop
xchg
test
sub
int
push
pop
stos
dec
push
js
out
out
inc
push
push
jle
fdivr
and
jge
sbb
scas
adc
or
sbb
pop
xchg
cmp
pop
test
outs
sub
push
push
cmp
mov
xor
dec
jp
sbb
xchg
mov
mov
popa
jmp
ins
push
enter
arpl
fadd
psllw
dec
sub
fsub
inc
add
inc
(bad)
ds
adc
adc
jbe
out
stc
mov
mov
pop
mov
pop
call
jo
imul
sub
fdiv
adc
xor
push
dec
hlt
ins
and
ins
loope
and
push
add
jecxz
xor
jbe
addr16
sub
push
call
fwait
loop
cmp
cmp
sub
push
fwait
rol
jnp
sub
pop
mov
add
sbb
aas
rcl
popf
scas
push
jnp
jl
dec
inc
push
xchg
test
xchg
ficomp
ficomp
jle
inc
pop
mov
pop
shl
icebp
lahf
loop
jmp
repz
daa
adc
call
push
repz
call
or
mov
xchg
out
das
push
stos
push
das
sub
and
mov
sbb
jp
push
push
mov
xor
addr16
adc
xor
sub
arpl
int
inc
or
in
sbb
in
rcl
jp
fcmovnb
mov
fadd
jae
pushf
xchg
repz
clc
xchg
jno
movs
fild
inc
repnz
dec
mov
sbb
mov
es
cmp
cmp
retf
xchg
jg
fistp
fldenv
aam
js
cwde
aad
push
cld
sub
cmps
sbb
aas
mov
xchg
sbb
rcr
cmp
js
dec
(bad)
fwait
push
push
fwait
sub
ficomp
mov
fistp
adc
repz
dec
clc
sar
adc
xchg
jle
adc
and
in
cmp
lahf
pop
jmp
and
call
mov
fwait
push
(bad)
ficom
xor
movs
cmp
repz
mov
test
or
call
dec
cmp
cmp
mov
dec
add
adc
xchg
adc
mov
outs
add
ret
retf
push
sahf
dec
lods
mov
out
adc
daa
dec
mov
sbb
and
ficom
jge
dec
mov
mov
hlt
popf
in
sbb
shl
ins
mov
inc
xor
(bad)
sub
and
fwait
aam
out
adc
in
test
pop
clc
rcl
jnp
cdq
push
push
mov
pop
cld
xor
add
outs
xchg
je
inc
pop
(bad)
imul
aaa
pushf
inc
movs
fld
jge
xor
jmp
xor
push
pushf
das
cld
push
pop
in
cld
sbb
adc
cmps
sbb
fnsave
jbe
inc
adc
cdq
repnz
fild
out
jbe
out
push
jmp
outs
adc
sub
call
shl
pop
push
iret
xor
ror
arpl
cld
push
mov
retf
fimul
ins
dec
add
repnz
cdq
test
jge
(bad)
sahf
idiv
stos
out
pop
jge
cpuid
outs
mov
hlt
dec
push
movs
data16
fst
cld
xor
dec
fs
adc
adc
mov
push
jle
repz
ins
test
stos
xchg
fst
test
out
ins
mov
ret
mov
adc
sbb
ins
repnz
xchg
icebp
push
inc
out
out
sbb
ja
ror
outs
jbe
or
jmp
mov
in
sahf
mov
cwde
inc
(bad)
mov
xor
(bad)
mov
test
xor
xchg
adc
sbb
mov
jne
sub
lahf
cmp
inc
mov
mov
outs
cwde
dec
popf
sbb
pop
cmp
outs
jle
xchg
mov
hlt
ja
jne
jg
dec
sbb
enter
mov
or
jecxz
sub
je
mov
outs
pop
clc
(bad)
jno
sub
xchg
ins
pop
xor
mov
xchg
inc
or
xor
ja
pop
push
push
hlt
adc
data16
sub
jnp
jae
sbb
fdivr
aaa
jle
pop
fisubr
add
fwait
outs
out
or
lods
je
mul
iret
imul
sub
push
mov
imul
jbe
fsubr
sar
xor
push
stos
sub
pop
ror
fdiv
and
cmp
cli
add
sbb
arpl
or
dec
dec
mov
pop
jno
cmp
cmc
test
sbb
sbb
and
xchg
dec
xlat
sbb
in
dec
ss
int
fiadd
jb
mov
cmps
push
add
mov
mov
cs
les
out
out
sahf
scas
and
mov
pop
cmps
into
push
xchg
jmp
dec
xchg
pop
push
pop
fcom
movs
dec
mov
mov
lahf
xor
mov
sahf
stc
pop
gs
mov
outs
or
bound
daa
dec
xchg
daa
in
inc
pop
jae
adc
call
xchg
shl
sub
adc
xrelease
imul
or
mov
adc
lea
(bad)
arpl
jmp
push
cmc
mov
enter
leave
ins
in
or
adc
jp
outs
ror
daa
sub
dec
or
data16
or
test
ins
pop
xchg
sar
mov
add
int3
cs
(bad)
push
hlt
and
and
dec
jg
xchg
jle
icebp
xchg
in
pop
int
in
mov
sub
sbb
push
aad
outs
push
jmp
adc
pop
pop
pusha
jns
and
imul
and
pop
xchg
mov
movs
mov
arpl
xchg
push
adc
xchg
ror
jp
cli
jmp
arpl
leave
sbb
nop
adc
lods
popa
adc
pop
arpl
rcl
xchg
stos
jl
ins
pop
pop
jl
sbb
push
retf
xchg
nop
adc
adc
mov
sbb
jecxz
int3
fdiv
sbb
in
cdq
sbb
inc
xor
dec
xchg
add
test
sbb
retf
in
mov
xchg
push
mov
sbb
(bad)
sub
xlat
aad
jle
in
test
and
jnp
data16
repnz
and
xlat
in
inc
cld
pusha
fld
out
jmp
sbb
push
push
cmp
das
mov
add
aam
dec
add
fdivr
cwde
or
mov
add
mov
cmps
das
jge
and
dec
cmp
xchg
pop
fist
jmp
cli
lds
icebp
out
mov
inc
push
push
lahf
cld
cdq
fcomip
push
pop
cmp
dec
(bad)
dec
adc
xchg
pop
push
loopne
xchg
outs
dec
test
imul
cmp
sbb
fiadd
jns
scas
mov
sbb
fstp
xor
jmp
scas
sbb
dec
lods
adc
fcom
pop
xchg
dec
in
in
(bad)
ins
fwait
add
pop
pop
and
cdq
inc
(bad)
cmp
ss
js
sbb
pop
jbe
jl
or
sbb
cmps
mov
xor
addr16
sub
add
fisubr
sbb
xchg
adc
out
in
push
and
jo
xchg
push
inc
sbb
mov
mov
aaa
fnstenv
xchg
xchg
push
nop
add
or
sbb
imul
je
pusha
lea
inc
add
clc
pop
dec
adc
pop
hlt
ret
cld
jbe
push
lods
cmp
arpl
stc
test
pop
test
xor
jmp
popa
imul
cdq
xlat
sar
dec
retf
aaa
leave
retf
call
sub
sub
sub
adc
mov
lds
(bad)
stos
and
xchg
add
mov
jnp
ret
loopne
add
sub
clc
aad
mov
rcr
xlat
lods
ins
mov
ror
cwde
pushf
rcr
jae
loop
adc
and
ja
push
push
mov
pop
or
outs
out
in
in
pop
sub
fld
add
in
aas
cmp
sub
into
jmp
imul
sbb
xor
push
mov
jecxz
(bad)
pop
xchg
cmps
sahf
loope
es
addr16
mov
jecxz
mov
imul
fldcw
jmp
das
popf
cmps
mov
daa
lea
and
sbb
loop
arpl
daa
inc
addr16
sbb
sbb
xlat
push
push
outs
lds
int3
mov
cld
gs
pop
mov
test
pop
push
mov
movs
mov
jp
fimul
jmp
adc
pop
cli
adc
xchg
in
cmp
or
pop
xchg
(bad)
inc
adc
inc
inc
lahf
jmp
mov
cli
outs
and
out
sbb
inc
pop
pushf
jns
jne
adc
dec
dec
mov
xor
jb
cmp
sti
mov
aam
dec
or
cmp
jge
sbb
jmp
pop
mov
pop
jmp
in
sbb
mov
or
xchg
fisubr
mov
ret
jns
pop
dec
push
pusha
cmp
lods
sbb
fwait
sbb
ror
push
fnstsw
(bad)
cmc
out
jl
xor
pusha
ret
fwait
sub
imul
xchg
pop
int3
fs
cmp
cmps
cmp
push
xchg
cdq
mov
xor
scas
jg
sbb
mov
cld
push
std
in
pop
sub
enterw
cmp
ss
lock
mov
jg
in
jl
xlat
sbb
test
dec
and
xor
fldcw
xor
ret
push
das
mov
outs
add
push
jmp
iret
jnp
cmp
xor
ins
cmp
retf
jne
shr
jl
fdiv
sub
mov
lods
sbb
arpl
cdq
push
xchg
jb
(bad)
sbb
or
fsubrp
mov
dec
scas
mov
push
cmps
push
fdiv
pop
jmp
add
stos
icebp
push
mov
mov
lods
int
sbb
leave
inc
lods
repnz
repz
adc
mov
push
mov
fild
stc
aam
sahf
gs
jae
sbb
mov
sti
ja
mov
in
add
clc
int
cdq
mov
sub
aam
jle
cmp
idiv
pushf
push
xor
fadd
fwait
test
cld
mov
(bad)
hlt
out
(bad)
sti
sub
jbe
(bad)
and
call
inc
push
pop
pop
mov
adc
fisub
repz
(bad)
std
aad
test
ret
dec
jecxz
sahf
test
mov
aas
pop
std
sub
into
int
enter
push
cwde
dec
aas
stos
lea
imul
xor
xchg
pusha
xchg
xchg
movhps
jecxz
mov
fldenv
jae
test
aam
mov
and
push
inc
sub
pop
sahf
add
cmc
jae
sub
adc
int
cmp
test
pop
popa
mov
sub
ret
rol
call
or
cmp
retf
xchg
int
or
imul
adc
jns
call
sbb
enter
outs
sub
dec
out
leave
(bad)
jmp
in
push
mov
mov
out
add
lea
rcr
sbb
push
add
cs
adc
adc
fist
push
pop
stos
test
ss
loope
mov
mov
fld
xlat
adc
add
fistp
pop
ror
mov
leave
xor
inc
jmp
(bad)
cli
xchg
sub
sub
call
cmp
jle
pop
sar
pop
cld
lock
sbb
pop
jl
xor
or
mov
sub
dec
sbb
xor
imul
aam
add
jmp
push
pop
ins
cmp
aad
inc
mov
arpl
inc
fcmovb
cmc
das
popa
jns
in
sahf
ret
jecxz
fdiv
or
push
shr
mov
push
xchg
xchg
(bad)
scas
mov
fstp
xchg
sub
test
inc
popa
daa
cs
ror
sub
push
sbb
mov
dec
dec
add
test
addr16
mov
daa
(bad)
int
inc
jge
xchg
cmp
mov
mov
pop
mov
stc
retf
cmp
imul
test
sbb
stos
jb
add
xor
sub
out
stos
mov
sub
inc
sbb
lds
dec
clc
jae
and
push
jo
jmp
jns
and
sti
push
dec
mov
pop
fmul
push
loopne
cmp
mov
je
add
pop
(bad)
push
dec
iret
pop
fisubr
movs
or
inc
mov
stos
mov
jecxz
jo
dec
push
push
mov
fs
cmp
adc
xchg
stos
push
fidivr
mov
imul
mov
jns
in
dec
and
xchg
les
cmp
mov
inc
(bad)
popa
push
inc
push
jg
dec
pusha
ds
sub
shl
sub
nop
hlt
sub
shl
fistp
fstp
or
enter
mov
and
dec
mov
pushf
in
pop
retf
xchg
dec
les
sbb
dec
push
pop
imul
out
fmul
out
cld
and
arpl
jl
js
mov
mov
mov
es
fwait
out
mov
or
sbb
push
inc
div
js
pop
sahf
(bad)
fimul
fiadd
xor
adc
pop
shl
push
mov
push
xchg
shl
pushf
scas
jns
xor
xchg
inc
scas
push
(bad)
adc
mov
ficomp
enter
mov
jb
push
dec
cmp
push
xchg
sbb
(bad)
(bad)
(bad)
jecxz
test
add
ret
call
enter
adc
pushf
pop
xchg
xor
cwde
sbb
adc
clc
and
pop
sbb
ret
dec
out
pop
push
jb
push
mov
sub
jae
jmp
out
aaa
js
lock
sub
and
stc
jp
inc
ds
mov
in
jmp
pop
test
les
add
xchg
pop
outs
(bad)
sub
dec
mov
pushf
je
mov
imul
inc
pop
pop
mov
movs
in
jmp
mov
pop
sub
aam
aam
mov
xchg
add
sbb
ins
add
mov
icebp
jecxz
nop
and
fs
fcomp
pop
(bad)
lahf
popf
out
pop
sub
scas
mov
je
repnz
outs
leave
cmc
add
ret
in
push
cmp
std
lahf
ficomp
lods
ins
mov
outs
leave
dec
mov
dec
int
push
cmp
sbb
xor
(bad)
cld
out
jecxz
inc
arpl
in
es
and
std
sub
push
movs
enter
aaa
push
xor
mov
add
pop
outs
ins
andps
adc
xor
js
inc
adc
mov
verw
xchg
push
pop
fild
into
daa
addr16
in
cmp
xor
outs
(bad)
in
loope
push
push
fisttp
sbb
sbb
dec
sbb
or
in
push
pusha
pop
enter
(bad)
ficom
and
or
push
shl
or
xor
call
sbb
addr16
das
mov
dec
fwait
fs
popa
imul
scas
xchg
ret
sub
xor
inc
xchg
rcr
scas
xor
jle
xchg
pop
sub
pop
sub
(bad)
dec
leave
sub
ins
mov
sahf
fild
push
iret
test
shl
adc
jno
cmp
fisttp
sub
pop
dec
push
enter
push
adc
xor
sub
jl
xchg
cli
rep
retf
dec
in
xor
sahf
shr
xor
xor
in
adc
ins
mul
shl
pop
mov
dec
sub
dec
lock
adc
add
xchg
push
cs
adc
xchg
mov
push
add
mov
xchg
push
in
addr16
gs
jb
mov
iret
lods
mov
dec
cld
mov
scas
push
fs
mov
outs
loopne
pop
inc
adc
sub
pusha
fucomip
xchg
dec
adc
xchg
std
pop
popf
sub
shr
dec
dec
call
or
mov
xchg
icebp
cwde
aad
add
mov
repz
retf
sbb
pusha
jnp
(bad)
xchg
popf
ret
add
sbb
sbb
cmp
push
shl
es
call
pop
xor
mov
cmp
mov
adc
mov
sbb
jno
or
sub
inc
jp
ret
mov
and
xlat
xor
jae
retf
xor
push
add
push
jno
into
jne
hlt
(bad)
out
imul
mov
xor
pop
mov
movs
mov
fistp
xlat
imul
jp
cld
sbb
mov
jmp
dec
bound
cmp
xchg
jmp
pop
lock
xor
sbb
leave
xor
xchg
fistp
sub
mov
xlat
add
std
in
int
bound
outs
bound
fisttp
test
inc
jp
push
add
cmp
lds
mov
pusha
cwde
int
rol
push
adc
mov
test
das
in
es
sbb
pop
dec
xor
mov
mov
mov
mov
push
scas
or
fadd
push
cmp
arpl
mov
or
sbb
shr
clc
pop
jne
mov
adc
push
push
clc
push
xor
mov
lods
sub
inc
clc
cmp
jno
ret
test
and
xchg
ror
stos
pushf
repnz
mov
out
mov
push
mov
cmps
pop
pop
push
jecxz
push
push
xor
ror
sub
lahf
fcomp
pop
sahf
outs
push
mov
add
push
sbb
jmp
rcr
sbb
inc
inc
arpl
shr
ds
out
pop
(bad)
add
fsubrp
enter
push
mov
xchg
scas
xor
ret
shr
fs
aam
sbb
pop
mov
lahf
cdq
mov
or
sbb
sbb
push
mov
js
(bad)
fdivr
enter
sar
inc
les
xor
mov
daa
jl
xchg
jmp
loop
jp
stos
sub
mov
dec
mov
ins
lods
xchg
pop
xor
adc
outs
bound
test
(bad)
(bad)
pop
push
loope
mov
pop
arpl
pushf
clc
jne
mov
cmp
jg
jnp
jbe
cmp
(bad)
jge
dec
fucomi
mov
les
sub
xchg
fistp
rcr
pop
jecxz
xor
mov
cmps
adc
adc
outs
ins
fild
fild
cs
fs
add
jmp
fistp
or
inc
cmp
mov
gs
(bad)
(bad)
cmp
inc
ja
xlat
popa
lock
dec
in
mov
test
aaa
sub
mov
popf
retf
(bad)
fisttp
imul
pop
ja
jmp
or
cld
mov
and
popa
repz
sub
or
fiadd
out
pop
adc
sbb
push
ja
cmps
shr
fst
xchg
iret
xlat
stc
dec
push
imul
sub
ja
mov
inc
xchg
jecxz
repz
add
cld
fadd
ret
jae
push
out
test
or
lods
nop
outs
outs
cmp
push
adc
sbb
jne
fst
repnz
ror
loope
push
popa
xchg
and
stos
jnp
and
nop
cli
stc
movs
nop
adc
movs
nop
push
int3
xchg
ja
mov
xchg
adc
dec
push
adc
mov
pop
call
rcl
xchg
mov
mov
mov
xchg
scas
or
sbb
pushf
test
or
lods
sub
iret
xchg
fwait
stos
inc
iret
enter
cdq
push
mov
stos
sahf
push
js
js
addr16
outs
sub
repz
shr
data16
fwait
xchg
or
jp
dec
xchg
mov
test
dec
retf
or
mov
adc
movs
jl
retf
lods
(bad)
aam
dec
adc
cmc
sbb
scas
push
mov
popf
aaa
add
adc
aaa
xor
and
pop
shl
aam
test
fs
retf
movs
pop
cmps
icebp
inc
int3
push
push
dec
sahf
mov
int
inc
inc
jmp
fld
shl
push
inc
loop
add
pop
aas
xchg
fs
fcom
(bad)
push
loope
sub
dec
icebp
sbb
pop
push
lds
xor
mov
fs
pusha
pusha
push
push
jp
mov
call
inc
fwait
lahf
sub
mov
cmc
cld
mov
sub
out
and
cwde
retf
mov
imul
sbb
push
in
sbb
ret
mov
rcr
mov
pop
push
scas
push
inc
mov
push
pushf
clc
jmp
xchg
iret
adc
pop
push
sbb
inc
xchg
ror
sti
mov
outs
sbb
rcl
sub
and
adc
pop
in
pusha
pop
popf
jecxz
fiadd
inc
sub
xchg
pop
xchg
adc
(bad)
ja
in
aad
jb
push
inc
in
movs
fbld
mov
jne
aad
(bad)
mov
pop
and
inc
xchg
push
into
inc
clc
and
(bad)
xchg
sub
test
clc
and
adc
push
jmp
jle
fsub
jns
outs
in
mov
aad
push
mov
xlat
cmp
push
ins
stc
pop
xchg
nop
add
(bad)
lds
lods
sti
sbb
nop
test
xor
mov
push
add
fs
data16
xchg
ret
ins
sbb
and
inc
ret
hlt
cmp
leave
cdq
fwait
cdq
fist
adc
add
inc
in
inc
int
std
enter
pop
inc
or
ins
dec
mov
mov
dec
dec
js
sbb
xor
pop
jmp
mov
jae
fild
enter
xchg
cdq
sub
aam
outs
movs
popa
jge
adc
or
mov
sti
retf
adc
test
enter
(bad)
dec
push
in
pop
sbb
in
sub
cwde
inc
inc
pop
jp
jne
mov
loop
jge
and
test
ins
dec
pop
ins
pushf
xor
dec
mov
xchg
sub
and
adc
js
imul
shl
jl
(bad)
xchg
js
jne
or
dec
cli
push
dec
popa
popa
in
jo
mov
(bad)
mov
ja
push
push
or
retf
iret
fwait
dec
cmps
sub
fs
mov
outs
lea
pop
or
int3
adc
xor
cwde
inc
stos
or
(bad)
arpl
fldcw
out
jge
pop
loope
sbb
xor
mov
popf
imul
push
sbb
repz
test
add
jecxz
mov
cs
ret
addr16
jmp
mov
outs
js
xor
adc
outs
test
aam
div
jl
aaa
dec
pop
idiv
in
in
fsubr
outs
push
push
add
xor
fisttp
int3
bound
dec
iret
out
pop
or
mov
or
jp
adc
cmc
sub
mov
pop
cmc
repz
push
neg
mov
sbb
ss
dec
fwait
cmp
or
xor
fcom
add
repz
stc
data16
ja
jecxz
jnp
pop
adc
jb
xor
fadd
sti
cwde
xor
repnz
mov
js
int
and
mov
and
and
push
retf
inc
push
div
pop
icebp
dec
lahf
sub
dec
(bad)
fdiv
shr
pop
shr
xor
test
ror
jl
inc
scas
push
aad
push
inc
sub
ret
aad
sbb
popa
fcom
sbb
aad
inc
mov
push
dec
aas
xchg
xor
jo
jle
cmp
cdq
mov
xlat
pop
mov
shl
ins
pop
in
stc
sub
xor
jp
loopne
dec
je
cmp
dec
add
sti
pop
and
sbb
xor
sub
cmp
mov
in
aas
sbb
mov
jecxz
imul
push
inc
sbb
in
xor
lods
mov
outs
loopne
xchg
call
enter
scas
out
jbe
popf
push
les
xchg
in
mov
and
ret
in
out
jns
cmp
out
xor
xor
pop
repnz
pop
out
hlt
adc
daa
mov
dec
mul
retf
xor
push
xchg
sub
add
sbb
rcr
mov
in
push
push
xchg
cmp
mov
shr
push
and
les
add
cmp
lock
mov
xchg
out
lahf
add
sub
cmps
cmp
push
xor
imul
scas
sbb
mov
(bad)
push
lock
shl
fstp
movs
repz
fs
loope
xchg
sahf
out
sub
dec
sub
mov
(bad)
std
adc
clc
jns
push
dec
sbb
pop
dec
imul
sub
cmp
push
mov
xchg
jecxz
xchg
ror
jge
push
fld
ss
xor
fdiv
pop
stos
das
ins
mov
jmp
dec
retf
das
sbb
mov
sti
bound
jno
cmp
imul
std
sub
mov
stos
pop
push
popa
mov
xor
adc
arpl
out
icebp
pop
inc
mov
mov
push
mov
lock
dec
(bad)
aam
xchg
movs
mov
stos
in
adc
xchg
cmp
sub
sub
test
stos
in
inc
into
es
or
out
std
popa
test
sbb
add
inc
lock
pop
cmp
jecxz
sbb
cwde
retf
dec
jb
inc
std
jmp
and
jmp
dec
rcr
es
mov
jl
jno
int3
std
add
hlt
xor
pop
cld
je
pop
add
ins
(bad)
pushf
pop
jnp
sub
outs
les
push
pop
repnz
fsubr
push
jp
bound
dec
jle
fcmovu
rol
cmps
inc
push
ins
mov
push
cmps
in
dec
jecxz
in
push
or
pop
add
scas
(bad)
ins
jecxz
repnz
push
popa
sub
push
jne
aaa
and
loopne
jne
data16
mov
push
retf
shr
fsub
lods
inc
adc
or
(bad)
mov
sbb
sahf
mov
lods
mov
aam
and
mov
sar
dec
popf
ss
push
and
pushf
loop
xchg
push
in
pop
(bad)
iret
add
fstp
sti
or
enter
sub
popf
sbb
fwait
imul
adc
psubq
ret
aaa
es
ins
mov
push
fadd
xchg
in
mov
cs
(bad)
neg
mov
arpl
mov
dec
inc
jmp
jbe
jb
movs
pop
sub
mov
mov
pop
(bad)
in
aas
shl
cmp
sub
scas
imul
aad
dec
mov
fstp
in
pop
ret
aad
sub
clc
movs
dec
mov
pop
mov
adc
(bad)
scas
push
cmp
hlt
(bad)
ins
inc
inc
int
pushf
call
icebp
xlat
sub
hlt
inc
ficomp
in
ror
lods
xchg
ret
cs
popa
leave
fld
mov
das
xchg
add
popf
daa
fistp
ins
push
repz
inc
rcr
data16
je
push
adc
adc
xchg
cmc
repz
push
jmp
xor
cmp
add
scas
or
cmp
mov
push
jmp
inc
ficom
push
arpl
fld
mov
sbb
and
mov
(bad)
cmp
jg
jo
xor
pop
xchg
or
sahf
hlt
aaa
repz
test
clc
mov
repnz
xchg
hlt
fadd
inc
sub
pop
call
push
xor
imul
mov
fsubr
gs
dec
or
hlt
mov
stc
cmp
xor
test
ret
cdq
loope
pop
push
mov
pop
cmps
jno
pop
inc
jb
jmp
push
sti
fist
bound
cmc
dec
mov
jne
xor
sbb
push
jge
shr
xchg
mov
aas
inc
imul
les
jge
push
dec
int
daa
adc
(bad)
cmp
inc
loop
addr16
jbe
jbe
cwde
hlt
ret
retf
jle
call
cmp
ficom
cmps
lea
daa
fisubr
jmp
iret
bound
sar
push
sbb
xchg
and
xor
ret
adc
mov
xor
in
mov
add
add
cld
lods
fs
mov
data16
in
dec
popa
hlt
xchg
dec
pusha
or
(bad)
(bad)
pop
push
push
mov
call
inc
dec
mov
push
jbe
push
adc
mov
dec
(bad)
mov
xchg
mov
adc
pusha
ins
arpl
cmc
push
jp
popf
cld
sub
xchg
mov
into
add
mov
imul
xor
mov
add
ja
jl
jnp
fistp
sub
push
xchg
push
xchg
fidivr
aaa
ins
push
cmp
ss
inc
dec
sub
pusha
fwait
leave
cmp
pop
inc
adc
(bad)
dec
push
inc
xor
lock
sub
or
sti
push
rcl
out
and
mov
and
clc
data16
jnp
adc
cmp
pop
iret
pop
sar
sar
pop
xchg
js
clc
push
shr
retf
mov
inc
adc
pop
jle
loop
mov
push
jle
sub
pushf
adc
gs
jmp
jge
pop
test
popa
pushf
test
sub
adc
pop
test
pop
cmp
inc
cdq
repnz
pusha
cmp
stc
aad
gs
push
adc
xlat
jmp
repnz
or
lods
cmp
and
xchg
mov
pop
mov
push
(bad)
imul
mov
sub
pushf
icebp
sbb
popf
jb
mov
jmp
push
push
lock
ror
adc
stos
movs
aam
retf
imul
push
mov
xchg
rcr
sbb
scas
push
add
sub
ins
stc
sbb
dec
mov
retf
sbb
les
retf
adc
je
xor
movs
push
sbb
mov
push
nop
js
pop
xor
xor
fldcw
adc
add
(bad)
arpl
aas
xchg
push
out
sub
fcomi
inc
push
repnz
mov
ror
adc
cld
mov
pushf
cmp
popf
jge
adc
pushf
in
jmp
stos
and
dec
jne
or
scas
(bad)
cmps
mov
mov
aad
push
mov
dec
inc
sub
dec
out
push
inc
jnp
sbb
jecxz
sbb
sbb
in
hlt
ds
dec
pushf
mov
or
jmp
enter
pop
sbb
(bad)
or
sbb
jne
cmp
es
retf
xor
outs
cli
sub
sbb
xchg
mov
test
out
loop
and
cmc
ja
fsubr
nop
imul
fistp
and
cmp
fst
(bad)
and
imul
add
jmp
mov
and
sub
sti
fcom
cmp
push
push
dec
xor
cli
push
sbb
and
out
popf
sbb
pushf
xchg
mov
adc
adc
das
(bad)
scas
sub
(bad)
xchg
imul
or
cmp
add
push
mov
mov
and
and
adc
pop
inc
fsub
cmp
pop
sbb
enter
adc
pop
ret
xor
push
imul
sub
aas
int3
outs
cdq
or
xchg
ins
sbb
mov
inc
mov
or
fwait
jge
fiadd
jp
mov
mov
fldenv
(bad)
and
xchg
je
jp
repnz
test
inc
mov
push
aad
sub
pop
xchg
mov
inc
cmc
cmp
je
outs
cmp
mov
jg
pushf
outs
add
movs
loopne
push
pop
iret
cld
push
and
and
outs
aad
lods
rcr
fcmovbe
mov
jne
fwait
arpl
pop
pusha
cs
mov
in
pop
mov
inc
xor
imul
or
lods
icebp
push
adc
adc
pop
xor
js
push
outs
lahf
aam
pop
inc
sbb
ret
adc
(bad)
sub
pop
jge
leave
inc
sbb
pushf
and
ret
imul
scas
dec
les
or
jmp
mov
stos
push
or
add
iret
or
movs
lods
cmp
sub
sbb
js
pop
shl
outs
add
pushf
sbb
xchg
mov
inc
je
das
dec
inc
bound
cld
push
push
leave
in
xchg
les
add
cmps
test
pop
add
stos
jne
dec
mov
mov
sub
sub
or
(bad)
cld
sub
addr16
lods
fiadd
push
and
mov
dec
cmc
retf
xor
cmp
mov
aas
sub
cmp
xchg
add
pop
mov
adc
shr
shr
rcl
mov
std
mov
sti
add
and
test
ins
sub
fimul
fidivr
mov
cld
(bad)
pop
and
adc
ins
jle
dec
cld
loope
dec
xchg
in
(bad)
(bad)
in
jmp
out
jg
stos
ficomp
add
xchg
xchg
call
imul
fstp
and
jmp
imul
and
mov
fsub
add
rcl
mov
xlat
dec
popw
adc
rol
push
sbb
gs
xchg
lods
lock
(bad)
jmp
arpl
(bad)
xor
sub
(bad)
arpl
jmp
or
out
add
or
in
jo
cmc
sub
mov
push
push
movs
ins
fidiv
call
add
rcr
sbb
cmps
jge
aaa
adc
push
sbb
rcl
fist
and
cli
adc
(bad)
adc
retf
stos
stc
inc
fcmovu
fwait
xchg
mov
add
cld
pop
mov
pop
xchg
dec
or
cmp
stos
push
adc
test
rcr
sub
inc
inc
and
jmp
shr
imul
into
push
movs
sbb
mov
pop
adc
fcomp
adc
test
push
mov
cmp
pop
mov
int
mov
(bad)
loop
shr
sbb
and
dec
jmp
out
outs
xor
mov
aam
(bad)
lods
sbb
(bad)
retf
loope
cmp
leave
fiadd
sbb
(bad)
mov
fimul
mov
iret
pop
sub
xchg
repnz
jne
or
adc
xor
sbb
mov
inc
mov
xchg
mov
push
jae
fwait
sbb
shl
imul
sbb
push
cld
add
xor
je
adc
mov
xchg
outs
jmp
jbe
push
sahf
(bad)
push
or
push
mov
xor
cmps
into
dec
or
mov
mov
imul
loopne
pop
mov
push
stos
sub
push
jb
xor
lods
add
ret
mov
dec
dec
xchg
int
dec
sub
test
mov
sub
add
xor
iret
sub
sub
pop
xchg
fcomip
xor
pop
inc
or
rcl
cdq
cdq
add
ja
sbb
stos
(bad)
mov
or
shl
push
(bad)
xchg
and
div
add
mov
adc
xchg
inc
in
daa
cmp
sub
push
lea
sbb
call
xchg
out
aaa
das
jnp
aas
push
xchg
hlt
cmp
out
sub
test
(bad)
dec
(bad)
or
xor
xchg
jecxz
push
test
cmp
jl
(bad)
(bad)
push
retf
test
cmp
sbb
and
sbb
les
xchg
jno
aas
mov
aam
lock
adc
sbb
int
cld
sbb
mov
sbb
cli
push
push
int
mov
or
ret
dec
ss
enter
mov
in
mov
jnp
ja
sbb
add
ins
pop
pop
out
cmc
icebp
sub
pop
into
sbb
outs
push
sub
mov
mov
stos
xchg
outs
mov
inc
in
xor
ins
out
test
mov
and
pop
push
jge
not
xor
in
mov
xchg
stc
sbb
enter
xor
jno
outs
int
and
scas
mov
adc
aaa
pop
test
sbb
mov
pop
inc
xor
stos
pusha
lds
ss
repnz
add
leave
push
into
enter
mov
das
les
xchg
or
xchg
mov
das
fdiv
jo
jg
in
mov
(bad)
cmp
(bad)
mov
sub
inc
add
mov
mov
jle
shl
inc
fistp
ins
pusha
mov
in
inc
jge
add
push
cmp
imul
push
mov
out
jno
mov
cmp
fadd
ret
xor
xlat
gs
out
push
test
ss
aaa
sbb
mov
popf
out
ins
fistp
mov
inc
sbb
ins
jb
sbb
mov
add
shl
ja
mov
cmp
and
adc
outs
ret
add
pop
mov
and
mov
and
idiv
push
ret
test
mov
jle
mov
cwde
ins
sub
push
xchg
xchg
aas
inc
(bad)
sbb
xor
xor
jns
(bad)
jns
sub
push
call
push
push
call
movs
mov
(bad)
arpl
inc
(bad)
sbb
jp
push
xor
mov
jl
mov
jo
fs
(bad)
pop
cmp
sub
ret
sub
mov
push
mov
fwait
adc
push
(bad)
sahf
ret
int3
arpl
mov
pop
retf
sbb
push
fucomp
pop
jbe
lds
jmp
cmp
fimul
movs
rcl
(bad)
sbb
sbb
sbb
fstp
xor
shr
cmp
rcr
bound
fisttp
cmp
xchg
sub
push
test
shl
icebp
(bad)
cld
inc
pop
(bad)
lds
imul
outs
es
out
fidivr
call
dec
mov
jle
adc
mov
pop
dec
inc
iret
into
inc
stos
inc
pop
inc
lock
rcr
jge
leave
sbb
pop
leave
setb
pop
mov
es
add
jae
(bad)
ret
and
push
and
sti
cdq
mov
mov
in
mov
nop
pop
jne
cli
cmp
mov
or
cld
pop
fs
xchg
push
mov
test
pop
(bad)
xchg
push
adc
sbb
mov
popf
xchg
fild
nop
pop
repnz
lods
mov
sub
and
ins
pop
push
cmps
int3
repnz
mov
inc
fistp
iret
adc
inc
lds
frstor
dec
jno
push
push
sbb
repz
aaa
jmp
in
jmp
jge
mov
gs
into
add
xor
and
push
jmp
ins
outs
cmps
rcr
jecxz
sbb
shr
inc
out
dec
push
xchg
inc
pop
popf
into
and
adc
sbb
pop
mov
jge
ficomp
adc
stos
dec
sub
cmp
jmp
push
sbb
into
mov
mov
xor
mov
addr16
sub
mov
push
cmp
mov
and
xor
sub
add
jo
in
scas
sub
repnz
xor
inc
or
sub
mov
sti
xor
aas
jmp
aaa
and
(bad)
push
aam
mov
rcl
mov
aam
fistp
sbb
adc
jbe
cmp
fistp
xor
xor
in
repnz
aad
rol
or
mov
mov
and
mov
push
pushf
jmp
jmp
mov
into
in
loopne
in
and
pop
adc
cdq
shr
mov
in
adc
lods
xlat
add
aam
aad
dec
imul
je
push
mov
inc
fsub
push
rcr
and
out
lods
push
cmps
mov
enter
dec
pop
fnsave
je
dec
sti
test
das
adc
adc
cmp
inc
push
xor
or
xor
inc
cmp
jp
imul
inc
push
rep
sub
mov
sar
push
adc
jbe
mov
sub
ins
jnp
in
sbb
mov
pop
adc
out
mov
sub
push
icebp
pop
xor
mov
mov
mov
xchg
jmp
call
xchg
lds
add
cmc
nop
jp
dec
repz
neg
lods
add
adc
cmp
dec
aaa
cmp
push
imul
fisubr
xor
adc
xchg
das
rcl
cmp
int
shl
ds
inc
jge
outs
push
adc
sahf
pop
out
or
push
cld
xor
out
or
jns
dec
outs
mov
jp
les
mov
add
pop
pop
retf
enter
cld
fmul
outs
pop
neg
mov
dec
in
aaa
imul
mov
cmp
dec
pop
ss
mov
pop
fadd
outs
jl
jl
loopne
pop
mov
cmp
adc
push
mov
mov
push
push
int3
jle
ret
mov
pop
xchg
(bad)
ds
sahf
jbe
sub
sbb
mov
xchg
iret
jb
sbb
or
mov
ror
mov
arpl
(bad)
cmp
pop
(bad)
and
adc
pop
pop
sahf
stos
(bad)
mov
hlt
mov
fptan
mov
add
sbb
fidiv
mov
prefetch
or
xchg
sbb
mov
stc
scas
ret
sbb
fcompp
rcl
xor
or
sub
jl
daa
sub
xchg
push
jb
repz
shl
enter
push
loop
mov
lahf
dec
in
sar
push
cs
mov
push
pop
das
bound
(bad)
jmp
fwait
inc
ins
jbe
adc
pop
add
out
iret
cwde
xchg
add
add
popf
pop
jmp
(bad)
inc
data16
loop
xchg
xchg
fiadd
je
pushf
(bad)
jnp
popf
push
(bad)
stos
loopne
mov
nop
lds
jmp
add
pop
xor
repnz
xchg
xchg
es
sub
push
mov
jl
ja
rcr
push
test
pop
mov
xor
fstp
jbe
cs
jo
cld
out
out
sbb
int
(bad)
int3
test
adc
sub
push
enter
push
sub
dec
mov
cs
sbb
retf
jg
add
test
push
xchg
(bad)
leave
into
inc
mov
ucomiss
adc
aam
push
cwde
and
mov
mov
adc
jp
sbb
data16
pop
fst
lods
sar
movs
jns
popa
imul
sbb
(bad)
iret
jmp
cdq
dec
repz
arpl
leave
shl
xchg
mov
push
ficomp
lahf
mov
movs
mov
test
mov
cmps
hlt
push
icebp
jno
lahf
xchg
and
push
and
pushf
mov
ror
inc
mov
mov
test
mul
repnz
imul
fidiv
cwde
push
push
fidivr
dec
pop
pushf
dec
adc
es
xchg
es
mov
retf
push
xor
aas
int3
sbb
xchg
cld
std
xor
push
test
retf
sar
popa
fld
add
push
cwde
xor
jle
rcl
pop
xor
js
pusha
(bad)
inc
cmovb
out
lods
out
pop
push
ins
sub
pop
(bad)
jne
(bad)
call
fdivr
xchg
inc
lea
push
xchg
adc
inc
mov
and
sbb
xor
nop
(bad)
mov
lods
div
cs
sar
sbb
xchg
rcl
xchg
ret
jmp
in
inc
loop
cmp
(bad)
test
pusha
and
push
arpl
(bad)
jnp
or
pop
dec
adc
fimul
mov
imul
xor
xchg
retf
mov
ins
and
ror
adc
retf
shl
loopne
mov
repz
cmp
adc
mov
in
test
xlat
xor
mov
xchg
pusha
lea
js
pop
push
lds
scas
dec
add
mov
pop
les
stos
sahf
sub
fs
mov
jb
or
int3
sbb
push
mov
adc
repnz
ret
cli
jl
outs
xchg
sbb
push
ins
push
mov
push
call
iret
mov
and
lock
pop
mov
xor
or
push
lahf
inc
cmp
rcr
mov
repnz
mov
dec
pusha
cmp
popa
lods
or
xchg
sbb
dec
mov
dec
dec
sub
aas
dec
std
push
in
xchg
or
sbb
and
je
es
je
cmp
and
test
std
mov
dec
jmp
loope
xor
fwait
inc
clc
sub
and
and
mov
dec
test
out
ds
std
in
jecxz
xchg
loop
sbb
push
in
push
fdivr
mov
xor
sbb
test
std
lahf
loop
adc
mov
pop
adc
fwait
and
or
add
add
mov
dec
mov
into
ds
int3
jecxz
xchg
ret
xor
fcomp
mov
adc
jl
test
std
jmp
mov
lods
sti
mov
pop
jne
add
ja
add
imul
loop
test
xchg
pop
pop
lahf
repz
sbb
dec
test
daa
lock
mov
movs
jns
aas
loopne
pop
jl
sbb
lods
ds
fild
mov
xchg
sahf
ss
loope
adc
(bad)
pop
mov
(bad)
(bad)
enter
loopne
push
adc
std
rcr
mov
xor
pushf
add
adc
fadd
add
sbb
jne
repnz
pusha
imul
scas
(bad)
rcl
pop
fistp
xor
fdiv
xchg
sahf
(bad)
(bad)
sbb
jns
cmp
into
int
repnz
xchg
fcmovbe
pusha
dec
arpl
lahf
adc
mov
std
shl
fisttp
sahf
jecxz
pop
bound
shr
rcl
or
dec
test
out
mov
int3
fmul
jo
sub
inc
out
add
adc
fwait
cmp
push
inc
mov
retf
addr16
stos
push
scas
sbb
and
imul
sub
fld
imul
addr16
rcl
(bad)
movs
imul
jmp
dec
clc
iret
jmp
cmp
dec
outs
jmp
xor
das
xchg
(bad)
pushf
mov
fs
js
xor
int3
clc
sub
jo
sti
iret
mov
outs
sub
ins
lahf
xchg
std
aam
shr
aaa
xchg
(bad)
cdq
or
jbe
rcr
xchg
scas
repnz
enter
push
scas
fs
mov
push
aam
mov
xchg
aas
out
jp
and
repnz
adc
ja
pusha
or
lahf
stos
push
scas
dec
popf
xor
sub
pop
pushf
imul
and
retf
sub
push
push
les
ror
inc
jns
mov
lods
xor
jo
mov
xchg
rol
ins
pushf
add
and
scas
push
pop
push
int
dec
fadd
enter
stos
sbb
jae
aaa
sub
dec
fucomi
cs
into
in
fwait
mov
and
ror
test
repz
push
inc
push
fidivr
std
xor
shl
dec
daa
adc
dec
push
pminub
sub
daa
enter
loopne
sbb
mov
retf
ins
mov
ins
repz
sub
adc
pop
xchg
jae
or
inc
sub
push
mov
dec
sahf
imul
mov
pop
pop
ja
mov
cs
mov
leave
dec
lods
xor
shl
inc
pop
pushf
and
shr
call
ss
fisttp
xchg
out
cmp
scas
movs
dec
dec
add
rcr
rcl
into
fisub
push
scas
stos
cmp
shr
test
xor
rcr
mov
adc
outs
ret
push
mov
popf
xor
mov
xchg
std
movs
retf
rol
cmp
push
jmp
popf
pop
push
mov
adc
rcr
sbb
(bad)
xor
jne
les
adc
rcl
out
mov
mov
jmp
cmp
repnz
repnz
pop
stos
int3
not
mov
push
jg
push
scas
aaa
loopne
(bad)
sub
dec
mov
sbb
and
movs
mov
push
mov
popf
xor
rcl
ucomiss
inc
pop
aas
jae
int
call
cs
sbb
mov
or
sub
js
add
popf
sbb
jg
pop
int
jecxz
sbb
and
cld
cmp
retf
int3
and
jecxz
and
jno
hlt
movs
push
adc
sub
xlat
cld
xchg
loopne
and
ins
sub
sub
xor
in
stos
pop
addr16
jno
daa
iret
mov
fadd
fmul
test
rol
jge
call
inc
mov
scas
int
inc
jnp
iret
adc
data16
inc
aad
inc
outs
stc
lahf
dec
lock
and
daa
jmp
imul
aam
cli
(bad)
cmps
pop
icebp
jno
arpl
pushf
retf
inc
shl
or
mov
out
jne
push
ficom
in
jb
or
aaa
mov
out
jmp
xor
test
dec
or
nop
inc
imul
dec
aas
pop
mov
test
pop
mov
or
(bad)
pop
sub
add
lea
mov
pop
mov
in
push
push
ins
ja
xchg
xchg
pop
arpl
mov
inc
mov
dec
shr
fcomp
shl
sbb
inc
jno
imul
inc
cdq
dec
push
(bad)
jle
push
xor
or
ror
adc
xor
xchg
in
xchg
pop
pop
mov
hlt
in
dec
fistp
lahf
aam
(bad)
xlat
and
sbb
mov
icebp
pop
sbb
cdq
fmul
pushf
jb
inc
mov
or
or
sbb
(bad)
movhps
stos
es
sub
cmp
dec
mov
in
pop
xor
inc
mov
xchg
dec
mov
mov
cs
rol
jnp
not
xor
es
cmp
stc
sub
ret
imul
push
xchg
sbb
jns
ds
(bad)
icebp
ret
dec
pop
xchg
jbe
stos
fwait
hlt
shl
iret
mov
pop
sbb
mov
jl
loop
jl
or
mov
mov
push
ret
or
jnp
push
and
lods
pushf
jle
enter
sub
outs
inc
push
pop
pop
and
jmp
add
fsub
movs
arpl
mov
(bad)
jae
cld
inc
and
outs
int3
inc
imul
enter
inc
test
ja
enter
jbe
sbb
xchg
shl
(bad)
sbb
adc
dec
(bad)
push
ret
addr16
jmp
dec
pusha
mov
aas
std
stos
mov
inc
ins
test
(bad)
pop
and
sbb
cmp
sbb
adc
xchg
repz
or
ss
test
pop
(bad)
test
jb
or
jecxz
sar
xchg
into
mov
lods
and
inc
xchg
sub
in
push
adc
cmps
mov
xor
fld
mul
mov
mov
push
xor
sub
adc
sbb
xchg
scas
push
xchg
mov
jmp
mov
ja
jne
je
dec
ds
pop
jle
mov
in
push
xchg
jb
ror
les
rcl
push
and
cld
cli
lea
xor
sahf
cmp
ret
pop
mov
cmc
es
push
fstp
jae
scas
mov
(bad)
mov
repz
or
(bad)
outs
push
pop
dec
fwait
ss
sbb
lock
out
adc
sbb
mov
cmc
das
adc
pop
les
and
imul
cmp
and
(bad)
psllq
xlat
adc
sbb
mov
jo
sti
nop/reserved
scas
cld
out
leave
inc
pop
push
movs
scas
cmps
aas
test
push
pusha
pop
cld
lahf
fisttp
mov
ret
fistp
imul
stos
sub
repz
fild
jnp
cmp
sbb
out
mov
mov
pop
mov
cmp
jo
and
sahf
(bad)
fisub
mov
call
div
mov
and
fsub
ja
adc
shl
add
movs
add
(bad)
pop
ja
push
arpl
push
add
jl
adc
and
fadd
sub
sub
dec
ret
aad
aaa
aas
sbb
jmp
in
gs
lods
mov
int3
adc
int3
adc
mov
lds
xchg
shrd
jmp
or
xchg
les
(bad)
jmp
xor
push
mov
xlat
(bad)
sub
adc
pop
dec
ret
sbb
cmp
jg
sahf
rcl
pop
test
into
retf
cld
out
mov
dec
mov
xor
cmp
pop
dec
fs
mov
jb
cmp
mov
push
dec
xchg
loope
call
aam
je
pop
sti
jg
(bad)
and
cmp
es
push
outs
cmp
xchg
mov
fmul
mov
(bad)
sub
enter
lods
outs
sbb
into
rcr
add
add
test
xlat
ret
and
sar
inc
mov
fdivr
dec
outs
mov
adc
cmps
ins
jo
stos
xchg
adc
adc
adc
pusha
ja
ss
push
cmp
xor
(bad)
(bad)
das
sbb
adc
xchg
stos
mov
sahf
popf
clc
icebp
sub
adc
mov
(bad)
or
popa
dec
push
jl
fld
adc
pop
test
jmp
adc
call
outs
push
sbb
pushf
aad
push
xor
mov
adc
dec
fbstp
xchg
outs
punpckldq
and
inc
cmp
pushf
cmp
cs
mov
xor
push
push
cmc
in
inc
in
jne
adc
xchg
push
stos
mov
add
adc
out
nop
imul
jbe
xor
stos
sub
call
cld
cwde
mov
leave
cmps
repz
xor
pop
jl
cmp
dec
cld
cmp
fst
fmul
imul
cmp
jno
adc
sbb
xor
mov
push
int3
jne
push
fidiv
jnp
jg
aas
jmp
mov
sar
les
jp
popa
dec
jmp
outs
pop
bound
inc
sub
sbb
out
mov
stos
loopne
xchg
jl
fwait
push
mov
not
adc
push
jb
shr
out
lock
and
mov
bound
cmp
cmp
imul
pop
addr16
cmps
test
inc
loop
test
jmp
je
xchg
dec
push
adc
pop
sar
lods
dec
ins
xchg
or
inc
pop
int3
lahf
sub
fistp
sbb
stos
push
shl
pop
jp
jnp
inc
or
cwde
dec
sub
and
mov
cmp
mov
in
jns
sbb
imul
shl
xchg
iret
push
push
add
imul
out
pushf
xlat
lods
ret
push
and
aam
jno
adc
sbb
mov
sbb
mov
std
mov
cwde
dec
retf
lahf
jae
jmp
mov
and
imul
mov
and
aam
repz
test
std
sbb
pop
jle
ja
pop
inc
cld
call
mov
mov
inc
dec
(bad)
mov
pop
cmp
xor
sar
test
imul
xchg
pop
inc
pop
inc
nop
je
mov
mov
mov
and
outs
dec
push
stc
mov
cwde
retf
adc
popf
pop
add
jo
arpl
jb
add
enter
hlt
mov
clc
dec
test
retf
dec
(bad)
dec
imul
dec
test
dec
mov
imul
adc
cmp
dec
or
cld
add
sbb
movs
shl
pop
cdq
sbb
sbb
sbb
pop
sbb
test
test
clc
mov
xchg
in
(bad)
repnz
mov
mov
adc
shr
mov
mov
adc
cwde
pop
popf
js
inc
test
jnp
outs
lods
call
mov
cmp
test
lock
ret
ret
cmp
outs
lea
nop
cmc
pop
shr
push
jg
push
push
mov
mov
out
or
cmp
pop
xor
push
dec
outs
pushf
mov
adc
pop
mov
pop
add
jmp
(bad)
fisubr
loopne
pop
push
pop
lea
out
std
cmp
mov
dec
mov
ja
add
lahf
push
inc
mov
cmp
cmp
sbb
jl
aaa
cwde
jecxz
or
ficomp
jbe
jp
mov
adc
push
xchg
shl
jmp
jg
les
jecxz
mov
mov
out
lods
mov
push
or
sahf
push
xchg
push
lods
pop
cmp
ds
int3
adc
xchg
and
ror
ja
call
jmp
mov
cmp
sub
pop
imul
inc
jp
(bad)
mov
leave
adc
pushf
sar
es
xor
or
add
jle
mov
fadd
and
sbb
inc
neg
mov
test
mov
sar
and
or
or
push
inc
dec
sub
mov
mov
cwde
iret
(bad)
(bad)
jle
xor
dec
cdq
xor
cmp
or
or
jns
jmp
adc
cmp
test
cld
mov
mov
xchg
movs
iret
push
fcom
inc
cmps
fwait
rol
push
rol
call
ins
push
imul
xor
fstp
or
test
push
movs
jp
xor
call
cwde
pop
pop
stos
mov
aam
cmp
xor
sub
int3
and
rcl
pop
lea
inc
fadd
and
push
mov
sub
push
mov
cdq
cld
sbb
push
jo
push
movs
dec
in
outs
call
jl
inc
les
push
and
jbe
xor
inc
mov
cld
jmp
movs
repnz
inc
jge
and
inc
stos
inc
fldz
xor
pop
dec
push
ja
push
xchg
jecxz
retf
mov
push
and
lods
adc
aam
idiv
push
aad
mov
and
imul
xchg
and
scas
stos
ficomp
scas
pop
jo
xchg
mov
and
retf
hlt
shl
xchg
cmc
push
mov
fcomp
adc
mov
or
enter
and
dec
cmp
xchg
aad
xchg
(bad)
push
jno
xor
sti
frstor
mov
pop
test
jle
sub
(bad)
bound
inc
test
inc
sbb
je
inc
fbstp
(bad)
xchg
enter
or
cmc
xchg
arpl
std
pop
int3
aaa
sub
pop
push
and
sbb
add
sbb
add
shl
inc
gs
dec
mov
ret
in
mov
mov
mul
mov
xchg
and
mov
dec
data16
fcomp
pop
ror
push
xchg
rcr
pop
jae
or
addr16
push
mov
adc
gs
jne
js
(bad)
adc
push
loope
jo
push
je
leave
jae
inc
rol
aas
mov
pop
pop
pop
ja
push
pusha
xor
adc
ds
std
add
push
push
pusha
(bad)
addr16
mov
fsubr
rcr
jg
out
pushf
cmp
fsub
or
fcmovne
addr16
out
mov
fstp
ds
cdq
(bad)
push
iret
mov
rcr
cmp
outs
xchg
js
push
push
push
cmp
int3
and
mov
add
xchg
fs
cmp
jge
call
add
scas
adc
fbstp
icebp
jmp
and
xchg
mov
jno
(bad)
xchg
stos
push
jecxz
std
popa
shl
push
arpl
and
jnp
hlt
sub
sub
lods
test
jae
or
in
hlt
xchg
push
jmp
loop
fwait
push
arpl
xor
pop
and
gs
add
arpl
jb
jmp
test
inc
push
pop
das
gs
cmc
mov
mov
mov
sub
iret
addr16
mov
sbb
dec
je
pushf
daa
adc
int3
iret
addr16
adc
jg
rcr
jl
xor
jb
in
sub
ins
or
iret
mov
es
scas
mul
inc
ins
test
loop
push
ins
dec
cmps
push
push
ret
fimul
mov
ret
pushf
dec
scas
data16
iret
xlat
inc
push
xchg
jecxz
pop
fisttp
fyl2xp1
sbb
lahf
lea
ret
sahf
inc
aam
pop
xchg
xchg
push
xchg
std
xor
repz
inc
sbb
lea
add
ins
sub
adc
mov
mov
int3
enter
aas
cli
fiadd
(bad)
adc
dec
cmp
shr
cmps
aad
test
xchg
mov
adc
ficom
pop
dec
mov
add
mov
xchg
out
aas
xor
cli
dec
dec
dec
daa
and
sbb
test
test
dec
mov
test
fnstsw
jb
enter
pop
(bad)
xor
adc
mov
mov
add
cmp
aaa
pop
out
ss
pusha
inc
repz
add
mov
retf
fisttp
mov
jge
popa
cld
xchg
outs
xor
fcomp
or
or
cdq
in
xor
stos
jecxz
cmp
inc
xchg
push
mov
mov
arpl
mov
loope
out
push
cdq
pushf
pop
adc
stos
fsubrp
mov
add
sbb
shr
jo
loop
push
sti
ficom
in
in
mov
punpcklwd
pop
mov
add
pop
mov
ret
xchg
aad
mov
adc
jmp
jmp
sbb
cld
out
xor
dec
mul
dec
loop
jmp
cmp
in
jmp
xor
rcl
int
pop
push
jecxz
mov
jp
or
dec
sbb
sbb
lds
mov
xor
shl
dec
je
pop
out
xchg
add
xor
xor
jae
popa
xchg
das
fcmovne
sbb
int
into
ret
retf
pop
pop
sar
jne
gs
push
jmp
pop
std
sub
mov
or
sbb
ins
stos
push
nop
loopne
adc
jp
cmps
jae
mov
rcr
outs
xchg
int3
mov
not
ret
and
add
xchg
mov
mov
push
add
jge
ss
rol
and
xor
jne
fs
repnz
js
dec
cli
mov
(bad)
call
jmp
nop
cli
and
aas
xor
pop
sub
fiadd
popa
fsubr
scas
xchg
xchg
movs
cld
sti
enter
and
sub
adc
hlt
jmp
cld
adc
stos
les
mov
jo
scas
push
movs
mov
cld
loope
call
cld
jae
xchg
outs
js
xchg
add
xchg
fwait
addr16
scas
data16
das
nop
cli
sub
dec
sub
sbb
push
ins
and
(bad)
dec
ja
call
std
stos
xor
sbb
ret
cmp
jb
add
out
jmp
mov
pop
cmp
jecxz
adc
xor
xor
stc
dec
push
fnstcw
push
fild
push
push
sbb
mov
jecxz
scas
xchg
xchg
mov
cmp
jne
mov
dec
pop
push
dec
repz
cmp
cdq
xor
dec
mov
nop
sub
pop
leave
in
retf
sub
icebp
mov
call
call
add
mov
lea
xchg
pop
pop
or
fisubr
adc
outs
out
pop
(bad)
add
pop
imul
push
outs
fmul
push
push
cmp
mov
adc
scas
push
pusha
push
adc
adc
fild
clc
into
xor
jno
push
ss
rcl
fldcw
in
popf
(bad)
mov
dec
mov
std
inc
ret
jle
adc
jmp
mov
add
cld
cmp
hlt
out
cmp
and
fdiv
xchg
out
inc
jmp
sar
cmps
cmps
ss
push
(bad)
pushf
stc
or
shl
add
test
push
push
ds
push
mov
repz
in
and
mul
scas
dec
and
lahf
xchg
scas
push
pop
iret
test
(bad)
cld
rcl
hlt
sbb
sbb
scas
xor
sub
ds
into
sbb
xlat
cs
loope
dec
sbb
loope
and
sbb
pop
rcl
retf
pop
push
fist
mov
push
sbb
aas
pop
ret
loopne
mov
pop
popw
mov
add
ins
popf
add
retf
stc
cmp
movs
imul
ins
outs
xor
call
outs
in
pushf
rcr
mov
popf
push
pushf
imul
in
cmp
movs
fst
mov
xchg
retf
xchg
shl
sbb
imul
fistp
mov
fxch
xchg
cwde
ins
pop
out
sbb
inc
push
shl
bound
xchg
hlt
push
mov
pop
cli
jae
add
cmp
xlat
into
jge
xchg
pop
inc
or
in
cmp
jmp
pop
pop
enter
inc
sbb
push
cmp
test
(bad)
ins
mov
(bad)
push
pop
daa
xchg
mov
(bad)
ins
xor
jle
and
sbb
int
ins
cmp
cdq
push
adc
dec
aaa
movs
cmp
repz
push
pop
push
push
test
shl
mov
cmp
rol
call
lods
jp
in
in
mov
nop
in
cmc
jmp
(bad)
inc
cmps
stos
mov
push
pop
sbb
pop
pop
scas
add
imul
jns
out
pop
scas
mov
sbb
ins
fistp
cmps
mov
aam
aam
sub
arpl
(bad)
out
inc
sbb
add
pop
pop
in
or
mov
aaa
cmps
pop
imul
mov
push
push
adc
rcl
(bad)
mov
mov
ins
inc
cli
mov
lock
test
adc
fsubr
xor
push
add
repz
sub
out
test
push
rcr
sub
add
sub
mov
mov
mov
iret
mov
cdq
sar
leave
pop
out
rcl
(bad)
in
xor
es
lods
and
mov
push
pop
pop
mov
xchg
dec
cwde
cmps
or
or
sbb
mov
xor
scas
inc
lods
pop
mov
cmovle
mov
int
xor
lahf
mov
movs
mov
scas
adc
stos
cdq
jecxz
mov
cli
cmp
add
push
mov
adc
jge
not
shr
jmp
xchg
or
mov
jmp
(bad)
hlt
in
jae
mov
(bad)
cmp
mov
jo
pop
imul
retf
dec
shr
jmp
pop
dec
das
mov
out
sbb
sbb
add
cmp
or
gs
mov
outs
sahf
repz
sbb
dec
inc
call
or
and
inc
fdivr
jnp
cmp
mul
ret
push
xchg
jg
pop
nop
scas
ins
in
mov
enter
xchg
test
or
dec
mov
popf
call
push
loop
call
repz
mov
jb
push
pop
jle
adc
scas
sar
test
xor
or
pop
hlt
loopne
mov
aas
sub
fldcw
adc
fs
stos
fs
paddusb
loopne
jmp
inc
(bad)
adc
cmp
mov
pop
call
je
imul
outs
inc
or
mov
and
hlt
or
adc
pusha
mov
pop
cmc
jb
gs
push
(bad)
int3
or
mov
sbb
pop
mov
daa
nop
fimul
aam
sub
and
xchg
mov
rcr
scas
call
(bad)
mov
dec
je
mov
inc
imul
outs
mov
mov
sbb
jne
pop
sbb
push
sub
lock
adc
push
push
cmps
aam
(bad)
std
push
pop
test
jno
push
lds
jp
cli
outs
(bad)
mov
cmp
pop
ficom
sub
xchg
add
stos
inc
pushf
adc
and
push
add
adc
pop
fsub
fstp
push
cmp
loop
cmps
pushf
mov
ins
pop
xor
adc
js
push
cmps
mov
dec
pop
dec
lds
jl
mov
sub
repz
imul
(bad)
cld
clc
dec
mov
test
xor
sqrtps
sbb
stos
imul
jno
push
bnd
mov
cs
pop
stc
retf
bnd
xchg
push
mov
add
fdivrp
cmp
ja
adc
jae
dec
stos
xchg
cwde
jp
pop
mov
push
jno
jbe
pushf
push
sbb
sub
repnz
jo
aad
iret
jbe
sub
or
imul
cmp
push
int3
je
outs
push
pusha
jne
hlt
test
pop
xor
je
push
mov
jnp
sub
xor
adc
pop
dec
dec
inc
leave
test
imul
xchg
dec
lahf
sub
jae
mov
dec
rol
and
xor
sbb
retf
mov
pop
xchg
mov
xchg
fs
(bad)
adc
loope
mov
lea
cs
imul
into
mov
imul
out
xor
adc
fmul
imul
adc
pop
sbb
pop
icebp
lods
imul
push
jp
push
arpl
adc
ins
lds
pop
pop
jl
pop
pop
je
sbb
xlat
sbb
movs
jmp
inc
inc
dec
fwait
xor
daa
ins
dec
stos
out
mov
xor
push
retf
pop
gs
pop
cmp
enter
mov
dec
dec
lahf
adc
mov
mov
shr
sbb
ins
jmp
je
repnz
jb
js
popf
pushf
dec
leave
xchg
mul
mov
push
push
stc
mov
je
xchg
ret
shr
hlt
retf
or
mov
cs
aaa
pop
mov
and
sub
add
xor
mov
push
or
inc
jae
adc
mov
inc
retf
leave
arpl
into
shr
inc
sub
inc
sub
cmp
ret
sar
and
cdq
cmp
xor
mov
cmp
fs
jno
fmul
sar
push
call
mov
addr16
fmul
movs
sbb
jmp
ror
ret
shr
call
cmp
loope
mov
fwait
out
jmp
fcmovne
shl
aad
cwde
popf
add
call
dec
or
shr
pop
xchg
cdq
push
in
inc
cmp
aad
push
ficomp
xor
je
lahf
in
hlt
push
xchg
hlt
xchg
iret
out
retf
sahf
sahf
std
cwde
ret
aas
and
push
mov
das
and
loope
mov
push
mov
xor
ret
cmp
inc
mov
pop
adc
dec
out
iret
clc
repnz
lods
xchg
sti
mov
pop
mov
iret
lods
xchg
dec
ror
dec
ficomp
test
or
cld
sbb
stos
fcomp
jl
popf
std
ins
sub
pop
sub
pop
in
push
hlt
dec
test
loope
cs
sub
cmps
mov
xor
fstp
push
(bad)
in
push
or
xchg
push
add
frstor
sti
ret
mov
(bad)
mov
ins
cli
icebp
mov
xchg
mov
and
mov
dec
add
cld
xor
push
xor
fst
cmp
sar
push
test
movs
xor
pop
rcr
lahf
push
dec
rcl
cmps
and
cmp
mov
mov
push
xchg
pop
in
mov
mov
dec
aad
and
in
inc
(bad)
imul
inc
rep
adc
pop
dec
out
xchg
leave
test
pop
fistp
ins
adc
and
vorps
adc
jmp
cmp
pop
fs
ficomp
and
push
ins
add
dec
daa
xor
adc
imul
scas
loope
add
mov
aad
in
or
cmps
jge
in
push
aam
dec
inc
sub
data16
mov
xchg
xchg
sbb
or
mov
dec
imul
xchg
fwait
cmp
dec
(bad)
loopne
sub
mov
push
sbb
or
lods
sbb
aas
retf
xchg
test
shl
sbb
xchg
imul
inc
test
std
jmp
stos
mov
mov
inc
xor
cli
push
push
sub
popa
repnz
aaa
mov
loope
add
sub
adc
js
mov
fs
repz
pop
push
jg
mov
dec
sub
ins
cld
(bad)
stos
rcr
jge
xor
addr16
pop
mov
and
cmp
lods
cmp
adc
mov
push
adc
inc
test
daa
mov
sbb
mov
jp
sub
in
retf
cld
mov
(bad)
dec
sbb
cwde
leave
mov
adc
in
mov
jle
push
outs
push
mov
mov
push
xor
dec
enter
and
sbb
mov
int
pop
mov
xor
push
dec
mov
imul
mov
test
sti
jg
mov
jl
add
daa
psubb
xor
daa
leave
fsub
jmp
xchg
pop
pop
test
xchg
adc
push
es
push
(bad)
sbb
xor
pop
jae
neg
stos
inc
movs
test
and
pop
fst
adc
pop
and
arpl
and
xchg
cmp
jmp
mov
pop
mov
mov
pop
pop
pop
fmul
stos
sub
or
(bad)
and
jecxz
adc
aam
mov
jmp
cmp
jg
test
xchg
push
cwde
test
jmp
cmp
lahf
add
mov
(bad)
jmp
add
ret
pop
xchg
push
dec
push
jb
shl
jns
jge
dec
ret
mov
mov
ins
mov
repz
jne
sub
xor
mov
jae
or
enter
cmp
rol
sub
aad
mov
mov
inc
sbb
inc
lds
sub
cdq
arpl
stos
push
jl
popa
inc
xor
(bad)
pop
mov
inc
jmp
add
xchg
rcl
mov
stos
imul
mov
cmp
or
sbb
xchg
jns
fcomp
sbb
test
xchg
and
mov
jo
jae
ins
es
iret
gs
adc
jne
adc
mov
(bad)
das
push
cmp
sub
data16
enter
movs
scas
retf
jmp
add
and
out
lahf
jo
ds
mov
pop
fcomp
aaa
mov
in
mov
ins
pop
mov
push
mov
lahf
pop
out
or
ret
pop
xchg
adc
aam
jp
dec
(bad)
imul
xor
shl
dec
xlat
inc
sbb
not
xchg
ins
pop
mov
mov
popa
iret
in
inc
cmps
mov
test
(bad)
aam
mov
test
in
xor
xchg
movs
jno
in
mov
dec
cmp
retf
xchg
push
sahf
sub
pop
xor
push
pop
fadd
cmp
outs
push
sub
repz
addr16
and
jge
jae
and
pop
stos
or
aam
jl
xor
out
sbb
fisttp
sub
cmps
(bad)
imul
cmps
imul
lods
adc
retf
pop
lods
test
pop
sbb
int3
jne
adc
pop
call
push
pusha
adc
sbb
jmp
xlat
dec
fwait
sbb
fdiv
xchg
cmps
sahf
not
int3
pop
xchg
fcom
sti
std
and
call
into
mov
xchg
ins
adc
push
xchg
pop
lock
add
jp
pop
xlat
enter
movs
rcl
lods
aam
push
es
fadd
pop
adc
nop
sbb
fcom
pusha
fisttp
aam
cdq
repnz
mov
push
lea
xor
std
icebp
mov
aaa
mov
mov
cmp
ja
mov
inc
sub
dec
addr16
mov
(bad)
sbb
jle
gs
pushf
sub
adc
xor
jnp
mov
xchg
aas
sub
push
mov
in
sub
cmp
sbb
fld
adc
mov
rol
aam
xchg
aad
repz
push
fwait
out
out
push
aad
inc
or
push
sbb
imul
icebp
aaa
jg
fdivr
push
or
lahf
aaa
in
lahf
xor
fild
adc
retf
leave
movs
inc
or
out
mov
mov
mov
lds
push
shl
mov
sub
mov
xor
(bad)
fwait
mov
push
popf
jae
into
ins
ins
call
into
rol
and
pop
scas
adc
shl
loop
imul
jnp
push
mov
shr
push
inc
inc
movs
mov
adc
jnp
lods
push
(bad)
jg
enter
outs
fimul
xchg
dec
lahf
push
or
(bad)
jmp
xchg
pop
pop
cmp
lahf
fs
out
ficom
push
mov
and
sar
ret
dec
out
leave
aas
cmp
lock
and
and
retf
lock
adc
pop
shr
repnz
call
cmp
sbb
scas
push
aas
jl
out
mov
or
fdiv
cmp
out
sub
mov
cmp
loope
jns
and
mov
cli
in
inc
fdiv
cmp
in
mov
bound
sbb
cld
add
and
inc
inc
mov
push
sbb
retf
pop
mov
loopne
pop
lahf
sbb
push
(bad)
aad
(bad)
jb
leave
ss
xor
inc
stc
or
pushf
sar
jmp
dec
pop
pop
imul
int3
call
arpl
adc
pusha
cli
jb
add
mov
push
js
call
retf
scas
inc
inc
aaa
sub
xchg
and
das
out
ret
mov
inc
adc
jg
pop
jnp
mov
add
popa
cdq
pushf
xchg
mov
pop
mov
add
mov
ins
xchg
mov
jl
push
sbb
cmp
jecxz
xchg
pushf
aaa
mov
or
or
mov
out
sub
push
xchg
xchg
scas
dec
sbb
enter
cld
inc
inc
push
mov
fwait
test
sbb
pop
ins
popf
xchg
es
dec
(bad)
pop
bound
fdiv
pop
cdq
into
adc
cs
jl
adc
ret
cmp
jle
and
arpl
pop
inc
into
ror
(bad)
mov
push
jecxz
xchg
leave
jle
xchg
mov
inc
cmc
mov
aaa
xor
bound
ins
xchg
scas
dec
dec
fs
push
popf
jmp
push
data16
xor
int3
pop
iret
sti
aas
fwait
dec
dec
outs
lods
push
fwait
pop
push
sbb
icebp
out
cmp
(bad)
retf
gs
fldenv
and
inc
push
sbb
mov
pushf
mov
lea
fstp
stc
inc
rcl
(bad)
push
xor
sbb
pop
or
mov
test
push
dec
sub
nop
clc
test
cmps
mov
xor
pop
cld
pop
mov
push
lods
push
cmp
test
cmp
sub
repnz
xchg
xlat
imul
push
pusha
jp
mul
std
mov
sbb
dec
mov
addr16
je
lods
pop
retf
mov
lahf
test
xor
adc
dec
int
stc
frstor
lods
mov
cmp
push
(bad)
mov
in
mov
out
cmp
xor
xor
add
ret
pusha
out
adc
shr
(bad)
pop
data16
dec
or
prefetch
inc
pop
pushf
cs
icebp
mov
pusha
xor
xchg
pop
pop
int3
aad
cwde
fisttp
xor
add
cld
stc
push
call
stos
sub
and
ret
repz
inc
test
pop
pop
mov
pusha
cdq
and
pop
outs
shr
xchg
movs
sar
add
dec
mov
or
inc
adc
scas
lock
and
xor
inc
(bad)
inc
pop
not
dec
cmp
dec
inc
push
and
bound
(bad)
ja
mov
mov
xchg
imul
out
inc
in
xchg
rcr
xchg
addr16
(bad)
aas
ror
out
rol
std
or
pop
push
dec
lods
les
jle
pop
fbstp
mov
sub
arpl
std
test
xchg
mov
pop
pop
rcr
push
and
xlat
sar
add
push
mov
and
or
idiv
enter
js
sbb
and
fwait
jecxz
push
xor
lahf
jmp
jp
mov
fcmovu
push
pop
rcl
clc
std
jae
xor
xchg
fwait
clc
push
sbb
neg
test
mov
sub
mov
es
lahf
inc
xchg
mov
movs
jae
lock
mov
mov
sbb
test
or
icebp
cmp
shr
push
test
icebp
mov
fcomp
int
mov
mov
cmc
icebp
in
pop
xchg
icebp
aad
jge
pushf
into
cmp
or
fucomip
test
jae
push
pop
sbb
repnz
push
xor
neg
lods
cwde
pop
imul
shl
in
pop
mov
(bad)
push
sar
pop
xchg
mov
inc
int3
enter
outs
addr16
pop
out
shr
inc
test
into
dec
cmps
jb
shl
jbe
and
mov
pop
cdq
nop
pop
lods
jg
xchg
or
pop
pop
adc
aaa
and
imul
mov
lods
bound
and
sbb
mov
push
push
dec
pop
cmp
shl
retf
jnp
hlt
dec
pop
les
mov
mov
fst
(bad)
push
lahf
jl
test
jno
xchg
pop
das
(bad)
jo
div
ret
mov
mov
pushf
mov
int3
fidiv
mov
js
fbstp
mov
or
mov
and
(bad)
int
xor
movs
mov
push
mov
in
fdiv
ds
shr
nop
cmp
popa
test
inc
jmp
sub
mov
popa
mov
and
xor
in
jmp
arpl
push
cmp
retf
mov
xchg
xlat
mov
xor
imul
jg
cmp
push
jl
into
xchg
mov
sub
cmps
lock
or
inc
test
movs
(bad)
sahf
inc
data16
dec
mov
sub
mov
scas
sbb
jb
out
sti
cwde
in
aaa
test
fld
mov
aaa
stos
mov
std
pop
sub
cld
pop
sub
das
in
pop
mov
in
sbb
mov
ret
enter
sub
sahf
cmp
pop
pushf
retf
fimul
int3
jp
sub
cmp
pusha
pop
lds
call
aad
inc
fwait
pop
push
adc
xchg
ds
xchg
in
stos
xor
xor
aas
(bad)
cmp
and
dec
dec
jno
inc
ja
mov
(bad)
mov
push
jb
into
and
inc
(bad)
js
mov
outs
xor
mov
xchg
mov
clc
mov
xchg
xchg
pop
mov
mov
repz
jae
scas
addr16
jl
pop
add
pop
dec
cmp
xlat
lods
ds
add
das
jns
ins
fs
repz
pusha
test
pusha
in
xor
(bad)
xlat
ins
shr
pushf
lahf
xchg
jecxz
ins
add
add
or
call
dec
popf
fucomi
clc
fistp
mov
push
popf
div
jle
mov
push
cld
sub
push
ss
or
ror
sub
inc
in
mov
add
mov
pop
sbb
push
call
xor
pop
sub
and
jns
cs
push
out
in
mov
sete
arpl
je
and
mov
sahf
push
push
adc
cmp
(bad)
test
ins
xor
mov
pop
and
enter
and
cdq
adc
inc
cld
scas
push
xchg
call
scas
movs
xchg
test
xchg
pop
xchg
nop
ins
cmp
push
test
test
int
dec
pop
sbb
fcmovnbe
xchg
fwait
jns
xchg
aam
push
mov
dec
adc
ins
inc
dec
daa
add
dec
outs
pop
test
nop
in
adc
(bad)
out
into
inc
bound
imul
pop
or
jnp
push
fcomp
sbb
sub
(bad)
out
lds
out
sub
and
std
or
or
or
jbe
dec
jne
xor
mov
pushf
xor
add
pop
shl
mov
stc
jne
adc
aam
mul
xlat
fstp
mov
pop
data16
frstor
mov
jne
adc
jns
dec
imul
sbb
cmc
fisttp
mov
fucomi
bound
es
dec
jle
pop
push
dec
(bad)
push
jmp
call
dec
test
and
pop
add
cmc
mov
jecxz
mov
jmp
inc
std
cdq
push
sbb
leave
jl
scas
ss
cmp
aas
in
fwait
xchg
test
ds
call
lods
jp
jecxz
and
pop
fmul
inc
jg
jo
gs
sub
fcomip
jmp
out
pop
mov
jmp
pop
pop
into
mov
pop
lods
test
ficomp
pop
outs
call
pop
movs
(bad)
cld
jle
xchg
and
cwde
mov
sahf
push
ds
inc
fmul
push
mov
pop
jno
sub
fdiv
jns
mov
jecxz
xor
mov
fdiv
test
pop
test
jmp
lahf
and
retf
sbb
in
enter
push
in
push
xchg
ficom
fs
and
jb
jmp
sbb
push
push
jp
xor
es
push
mov
push
(bad)
and
dec
scas
mov
in
mov
shr
dec
xor
pop
jmp
in
jle
xchg
retf
call
scas
in
mov
nop
cli
mov
imul
dec
adc
pop
hlt
pop
out
test
iret
hlt
adc
(bad)
and
jns
add
push
mov
xor
cmp
mov
loopne
adc
sbb
xor
repnz
sbb
call
test
arpl
pop
retf
daa
add
pusha
gs
xor
lock
xchg
test
sub
fldenv
xor
or
data16
popf
mov
mov
adc
lahf
mov
fisttp
inc
aad
sahf
adc
pusha
adc
push
jmp
sub
sub
cmp
mov
jmpw
cld
das
in
call
lahf
out
push
out
imul
(bad)
out
leave
inc
dec
loope
pop
jp
call
enter
leave
fstp
fwait
add
repz
xchg
ins
xor
xchg
adc
cs
and
sbb
(bad)
cdq
dec
mov
pusha
int
sub
fdiv
xlat
lahf
inc
sbb
pop
adc
movs
cdq
stos
mov
jne
clc
cdq
cmp
into
push
outs
nop
inc
mov
cmp
mov
sahf
mov
aam
in
aas
(bad)
stos
inc
(bad)
call
ja
xchg
sbb
jg
push
xchg
sub
cmp
into
popf
enter
js
xchg
out
out
xchg
jns
inc
push
push
or
inc
push
call
pop
dec
jl
js
or
jb
pop
pop
fcomp
out
jmp
fld
xchg
test
xor
loopne
lods
femms
repz
test
fwait
retf
jmp
cmp
sub
mov
add
test
push
mov
inc
cmc
and
jp
imul
xchg
push
call
sbb
inc
inc
vphaddubd
fs
or
mov
mov
pop
push
cmp
push
jb
pop
lahf
push
ds
add
mov
mov
bound
jg
inc
jp
push
push
add
iret
inc
cmps
sbb
sbb
hlt
mov
(bad)
push
jp
out
xchg
enter
imul
cmp
stos
test
mov
xlat
repnz
pusha
retf
out
push
sub
xchg
rol
mov
lods
push
lods
cmp
xlat
dec
popf
mov
mov
scas
pushf
sbb
imul
sbb
or
push
pop
in
cmps
jecxz
mov
mov
xchg
pushf
(bad)
add
jno
or
cs
retf
mov
repz
imul
adc
mov
jecxz
in
jp
scas
ins
retf
push
sbb
push
test
hlt
xchg
or
xchg
jo
jnp
cdq
shl
sbb
or
push
mov
iret
fiadd
(bad)
xchg
mov
out
ret
adc
dec
mov
fbld
cs
pop
in
jge
mov
mov
pop
xlat
mov
add
pop
jb
arpl
ficomp
and
jns
cmp
adc
imul
cmp
dec
test
dec
sbb
cld
xchg
jg
xchg
mov
cmp
in
and
aam
aad
icebp
fs
(bad)
lea
fs
clc
mov
jge
sub
jle
adc
aad
cmp
(bad)
pusha
and
fisttp
sahf
arpl
and
dec
fiadd
sbb
rol
stos
sbb
push
dec
sbb
xchg
push
into
jl
fild
push
push
xchg
pusha
mov
and
mov
out
cmp
sbb
out
imul
and
sbb
jno
or
cmp
add
and
inc
ror
fcom
sbb
jb
mov
pop
stos
xor
js
pop
rol
sbb
push
sub
fwait
sub
repnz
push
dec
mov
jno
mov
test
les
scas
cli
push
hlt
movlps
xor
or
dec
pop
lods
pusha
dec
scas
adc
push
mov
mov
addr16
mov
mov
dec
add
ss
aam
xchg
jbe
stos
push
sbb
jge
ins
sti
inc
mov
jns
xor
repz
push
ds
les
mov
inc
imul
adc
mov
pushf
mov
push
dec
sti
inc
stc
xchg
rcr
jb
sub
cli
movs
ja
fwait
or
xchg
adc
inc
es
iret
add
pop
mov
retf
pushf
aad
xchg
jp
cmp
mov
out
jbe
xchg
pop
int3
or
add
jb
push
shr
mov
jl
rcl
add
cdq
xor
or
cs
pop
in
mov
add
jmp
cmps
outs
addr16
adc
mov
ins
inc
jmp
cmc
lods
mov
div
sub
in
aas
stos
add
jecxz
or
cs
arpl
pop
add
cmps
or
lock
jns
mov
jb
push
adc
sub
in
int
outs
mov
mov
sub
add
(bad)
or
xlat
mov
aad
mov
xor
ss
xor
movs
jo
ins
mov
dec
mov
or
add
in
imul
test
inc
inc
push
and
or
ds
adc
icebp
outs
loopne
cmc
xchg
lods
jmp
(bad)
sbb
in
mov
sub
(bad)
(bad)
mov
and
pop
push
loope
push
jmp
and
mov
pop
data16
push
shl
jge
dec
es
test
fcomi
xor
add
out
jo
jnp
jo
and
addr16
adc
pop
cmps
mul
cld
mov
out
mov
sub
(bad)
pop
rol
adc
stos
and
outs
pop
aad
leave
jp
lea
aas
mov
cmp
call
mov
aas
jnp
out
and
cmc
sub
lss
sbb
loopne
hlt
dec
pop
sbb
mov
mov
in
or
mov
push
inc
or
push
push
ins
xor
js
js
sub
mov
scas
mov
out
jmp
jno
imul
pop
out
aam
cld
sbb
sbb
jmp
cmp
sbb
cmc
mov
and
cmps
in
sub
sub
dec
stc
outs
sub
mov
push
fdivr
jmp
sbb
dec
mov
jo
mov
scas
loop
and
cmc
jae
sbb
inc
mov
dec
sub
aam
test
shl
xor
(bad)
imul
jbe
popa
rcl
enter
ins
inc
pusha
add
pop
sbb
sub
lods
adc
nop
mov
pusha
sub
adc
imul
outs
test
pushf
jge
pop
fstp
pop
xchg
sbb
jmp
sti
or
inc
mov
cmps
push
sub
test
sbb
cmps
popf
call
pop
rol
xor
icebp
test
retf
mov
popf
nop
imul
(bad)
in
sub
pop
mov
push
pushf
mov
mov
bound
ret
add
gs
(bad)
push
pop
les
retf
jl
sbb
ins
rol
lds
shr
push
int
ffreep
fdiv
loop
add
call
movs
pusha
std
xchg
int3
and
out
aas
and
push
ja
or
cdq
(bad)
dec
nop
(bad)
imul
xchg
(bad)
lods
dec
mov
adc
xor
inc
xchg
sub
xor
scas
ja
jmp
xor
arpl
adc
add
ja
xchg
and
dec
pop
cmp
push
mov
rcr
mov
daa
aam
sbb
and
inc
inc
test
iret
outs
cli
fdivr
or
xchg
cdq
outs
dec
adc
dec
cmp
jecxz
(bad)
fistp
mov
stos
fldenv
push
loop
imul
xchg
ins
out
ja
test
int
and
in
mov
jl
xchg
ds
adc
fs
and
jge
xchg
pop
outs
xchg
enter
sub
fs
(bad)
pushf
mov
in
retf
jb
and
jg
xchg
xchg
add
adc
fist
lds
inc
jmp
sub
cmp
mov
pop
test
pop
pop
arpl
or
or
sti
mov
adc
fs
cmp
jge
lods
jle
and
rol
cmp
add
mov
mov
jle
clc
les
int3
jp
lods
sar
dec
arpl
mov
sub
fstp
(bad)
adc
mov
adc
and
sbb
mov
mov
pop
neg
mov
dec
push
or
sbb
dec
add
pop
push
fidivr
(bad)
dec
xor
or
sbb
fcmovnbe
inc
retf
ins
mov
retf
add
jmp
sti
cdq
pop
aad
outs
adc
(bad)
leave
loopne
int3
sub
sbb
test
push
cld
sbb
sahf
dec
mov
adc
out
(bad)
xor
pop
call
(bad)
in
imul
ja
fild
ins
sub
add
mov
sub
and
mul
std
std
push
nop
pop
mov
add
adc
fwait
imul
popa
adc
test
movs
add
cmc
jge
sbb
gs
call
xchg
test
fisub
xchg
(bad)
das
pop
adc
xchg
std
xchg
jge
fisttp
enter
pop
ins
jns
jp
loopne
ss
rcr
sub
out
push
aam
and
mov
add
cli
jecxz
pusha
std
ins
(bad)
add
pop
add
out
fidiv
test
fbld
jo
add
loop
(bad)
mov
push
push
inc
(bad)
imul
push
mov
scas
push
adc
add
and
sub
neg
shr
std
push
imul
rcl
xor
push
hlt
mov
retf
in
sub
mov
adc
inc
xchg
sahf
dec
test
push
shr
mov
loop
in
retf
sti
push
push
test
in
mov
sbb
call
iret
int3
ins
add
cmp
push
in
push
jge
xor
out
push
test
hlt
and
bound
add
data16
pop
nop
test
mov
rol
jae
mov
fwait
xchg
fadd
xor
xchg
(bad)
push
pop
fwait
(bad)
out
or
repz
popf
add
lock
inc
mov
pop
(bad)
cld
inc
xor
push
push
nop
push
inc
mov
loopne
jns
xchg
dec
mov
ins
sbb
ja
push
sbb
call
shl
jae
neg
inc
push
and
test
int3
nop
jge
lahf
cld
(bad)
sub
(bad)
xchg
jmp
push
and
test
dec
sbb
orps
stos
movs
xchg
pop
xchg
ins
pushf
test
pushf
sbb
retf
rcl
jno
mov
push
inc
push
test
cwde
pop
adc
or
std
sbb
push
int3
mov
test
call
fwait
jb
stc
mov
es
bound
push
repnz
std
pop
pushf
mov
loop
(bad)
cmp
inc
cwde
xchg
nop
je
mov
pop
fisttp
dec
fidiv
add
dec
pop
add
pop
addr16
dec
mov
xchg
adc
dec
adc
push
dec
cmps
call
clc
pop
sbb
scas
sub
aas
lea
pop
dec
dec
arpl
movs
ret
cmc
lahf
mov
cmp
jg
xchg
mov
push
jmp
jecxz
outs
in
jb
sbb
mov
ja
int3
pop
rol
add
arpl
outs
in
inc
int
shr
xor
in
call
outs
enter
in
stc
popf
cmp
pop
and
mov
in
xchg
rcr
ret
shl
scas
mov
in
inc
pop
sbb
(bad)
cmp
js
mov
cmp
das
popa
daa
jle
adc
or
sub
shr
jae
mov
lock
and
xchg
hlt
xlat
xchg
gs
jle
push
mov
out
frstor
ds
shr
cmp
push
es
pop
mov
mov
jl
push
push
loop
xor
and
pop
call
mov
sub
mov
shl
push
adc
push
pushf
pop
pop
imul
repz
jae
jmp
enter
sub
add
scas
sbb
push
push
mov
xchg
sub
jecxz
ficom
inc
ror
jb
mov
out
std
mov
xor
push
xor
clc
aam
fstp
aam
push
push
and
fiadd
daa
and
and
test
mov
inc
push
dec
mov
push
enter
dec
xchg
cmp
add
out
lods
(bad)
xor
push
popf
popf
cmp
sbb
or
adc
gs
xor
fxch
adc
sub
push
lds
out
out
shr
movs
or
or
mov
aam
lahf
xchg
sub
inc
dec
add
pushf
xchg
mov
sub
retf
test
shr
mov
out
xchg
jno
jo
push
ret
jmp
pushf
call
sbb
pop
push
push
nop
in
pop
adc
sti
out
ja
lahf
cld
and
cmps
push
pop
add
je
pushf
push
fyl2x
and
mov
push
adc
inc
jbe
jo
jmp
call
jo
or
shl
xor
jns
mov
loop
mov
pop
cdq
cld
les
inc
cmc
jnp
fdivr
jmp
xor
jne
inc
das
xor
jb
mov
lahf
cdq
lds
repz
mov
call
sbb
add
outs
pushf
adc
aas
and
jge
cmp
les
mov
push
push
dec
adc
hlt
mov
jle
lahf
mov
sub
push
jmp
std
jge
cld
jl
into
test
adc
pop
into
enter
or
add
in
fs
shl
jecxz
xchg
cmps
sahf
xor
in
jmp
mov
jecxz
test
mov
sbb
mov
push
lahf
(bad)
mov
pusha
cmps
and
ins
mov
pop
xor
sbb
daa
inc
scas
retf
or
rol
cwde
cmp
test
or
jmp
ja
aas
push
icebp
lahf
or
or
(bad)
ins
arpl
mov
or
fs
push
out
ins
in
xchg
push
xor
stos
gs
gs
jecxz
push
ffreep
arpl
lea
xchg
pop
cmp
(bad)
into
fstp
mov
jbe
sub
mov
cmp
push
jns
outs
mov
mov
aad
dec
lods
loop
imul
shr
jg
fstp
cld
test
addr16
not
sbb
dec
fs
xor
pop
fdivr
bound
inc
xor
dec
sub
or
ins
mov
loop
inc
out
mov
pop
jmp
jp
ins
les
arpl
adc
ret
cmp
arpl
mov
cmp
cmp
ins
call
(bad)
stos
cmp
sbb
jmp
sub
sbb
jnp
pop
mov
out
jg
pop
(bad)
adc
inc
or
gs
aas
xor
pop
fild
pop
retf
popf
sub
xor
mov
mov
cmp
push
ds
idiv
lahf
call
fs
mov
add
sub
retf
test
dec
jmp
in
xlat
scas
cmp
sbb
xor
arpl
adc
dec
jg
(bad)
out
add
push
imul
arpl
cmc
add
bound
les
(bad)
out
or
ins
lods
ret
pop
inc
and
ret
sets
ss
mov
push
mov
sar
ret
adc
push
ret
dec
(bad)
stos
jmp
daa
inc
aam
fs
pop
mov
in
sub
push
daa
scas
fcomp
sbb
clc
bound
scas
mov
fmulp
pop
pushf
call
xchg
sbb
push
mov
dec
cmp
push
push
jae
mov
ror
dec
arpl
jne
popf
int3
pop
sbb
xchg
iret
ja
in
movs
test
pop
jmp
dec
sub
push
rcl
popa
dec
or
mov
fsubr
or
repz
mov
in
jbe
mov
mov
lods
mov
repnz
lahf
pusha
pop
sbb
sbb
mov
fadd
pop
or
mov
mov
push
out
test
rcl
out
pop
pop
jl
adc
in
xchg
sbb
mov
mov
addr16
movs
dec
and
or
retf
test
into
mov
pop
test
sub
jnp
xchg
mov
sub
nop
fpatan
inc
mov
sbb
ret
xchg
jns
sbb
push
push
loopne
push
loop
pushf
push
add
loope
cmp
pop
jae
sub
aad
in
shl
and
fs
ffreep
inc
and
fwait
sub
push
pushf
jae
mov
cmp
push
outs
lods
xor
in
sub
retf
xchg
into
shl
retf
jo
scas
fs
sbb
rcl
addr16
shl
xchg
xchg
dec
cmps
jecxz
outs
nop
jmp
sbb
pop
out
inc
outs
sub
clc
nop
mov
frstor
ret
add
in
dec
iret
dec
ror
gs
rcr
mov
ins
sbb
mov
add
or
ins
mov
sbb
mov
jle
push
cmp
jle
fimul
jle
xor
imul
push
dec
or
std
bound
outs
jmp
in
call
retf
out
xor
fadd
scas
pop
jae
mov
test
mov
pop
mov
and
adc
inc
ret
cdq
pop
into
(bad)
clc
push
dec
dec
call
ss
inc
and
test
push
pop
inc
mov
dec
into
(bad)
fld
cmps
std
sbb
sub
pop
imul
pop
pushf
jl
adc
lahf
jbe
xor
sti
shl
inc
push
test
inc
fsub
mov
pop
sbb
mov
jmp
sub
dec
jle
in
outs
iret
shl
mov
sub
xchg
shl
add
mov
lock
mov
fbstp
inc
popf
imul
sub
jae
jge
pop
fsubr
ja
sub
jge
sub
retf
in
xchg
enter
mov
test
out
lahf
daa
aas
xchg
aas
xor
push
fild
sti
mov
sbb
fisub
push
test
fsub
mov
pop
sbb
cs
sub
es
sbb
clc
rcr
xchg
cmps
fwait
pop
jp
ins
mov
icebp
dec
iret
loopne
xchg
bound
shr
pop
cmp
sti
punpcklbw
mov
arpl
xlat
mov
fistp
fldcw
pop
inc
jbe
sub
sub
imul
push
jl
jle
in
pushf
pop
aas
js
push
aaa
add
mov
pop
ret
push
in
fs
leave
jns
les
sub
xor
mov
sbb
js
push
fisttp
mov
lods
jge
push
stos
jl
ins
cwde
cmps
test
pop
test
ins
test
xor
fxsave
and
xchg
fild
hlt
and
xchg
stos
xor
movs
xchg
and
sbb
cmp
and
loopne
test
scas
int
push
add
in
fisttp
into
hlt
les
pop
jo
cmp
into
outs
jmp
sub
(bad)
fs
lock
pop
xlat
mov
ret
(bad)
sbb
pop
xchg
xor
hlt
mov
std
rol
inc
test
ret
outs
movs
rcr
jg
push
test
ret
adc
push
push
cmp
sub
pop
retf
pop
dec
scas
imul
into
sbb
sub
and
ins
loopne
int3
das
mov
ja
cmp
popf
shr
cmp
int
add
ror
bound
pop
cmp
push
and
test
jmp
cmp
dec
sub
push
pop
xor
loop
test
pop
xchg
js
pop
scas
and
ja
dec
aas
push
mov
rcl
cmps
fwait
sub
jle
xchg
iret
in
or
pop
gs
fsubr
pushf
xchg
iret
adc
call
cmp
(bad)
iret
and
push
sbb
clc
mov
ins
retf
add
and
mov
pop
push
ins
enter
cli
sub
daa
xor
xchg
xor
jo
aas
and
dec
xchg
daa
ret
xchg
ret
pop
clc
mov
std
imul
sbb
lock
(bad)
sub
adc
int3
xor
aas
pop
add
dec
sti
sub
dec
call
mov
aaa
cmp
jge
dec
add
addr16
call
data16
popa
stos
fs
(bad)
fidiv
pop
add
pushf
push
mov
pop
sub
lea
mov
inc
mov
(bad)
stc
cmp
ss
movs
jle
mov
(bad)
and
fistp
mov
fild
rol
pop
into
xor
sbb
mov
cwde
retf
adc
scas
fcom
push
(bad)
fcomp
arpl
inc
xchg
in
pop
std
cwde
rol
jnp
hlt
retf
sub
cmp
into
jge
sub
push
push
lods
inc
sub
(bad)
clc
cld
das
push
dec
pushf
fwait
xchg
fs
sahf
(bad)
and
ins
sub
cmc
pop
in
inc
sti
retf
call
loop
push
retf
mov
push
fisttp
mov
jnp
and
sti
shr
xchg
loopne
gs
(bad)
xchg
cmp
popf
mov
loop
pop
sahf
pop
mov
imul
and
cmc
cs
sbb
jle
sbb
add
fadd
lock
mov
and
pop
mov
movs
jno
mov
fwait
pusha
fistp
push
push
xchg
(bad)
sbb
mov
push
(bad)
mov
xor
(bad)
push
add
ror
test
inc
jle
out
aam
movs
out
in
mov
push
pop
repnz
push
or
jae
add
das
or
scas
sub
cmp
movs
jmp
movs
cld
aaa
cmps
pop
call
pop
arpl
movs
ret
sub
(bad)
sbb
pop
add
cwde
cli
mov
pop
sahf
push
jl
xchg
shr
(bad)
aam
sbb
fild
nop
jl
(bad)
push
ret
out
pop
loope
jmp
sbb
and
ins
in
ds
pop
push
movs
push
sbb
cdq
cmp
xor
mov
outs
shl
add
data16
mov
mov
(bad)
ds
test
xchg
pusha
jg
fcomp
lahf
stc
sbb
cld
mov
dec
push
mov
pushf
pop
sub
mov
ss
push
jb
das
popa
lock
add
jb
aas
test
imul
test
popa
pusha
add
mov
xchg
lods
popf
addr16
adc
retf
cdq
es
lea
aad
dec
test
add
test
dec
(bad)
lea
push
xchg
jmp
out
data16
push
retf
in
daa
imul
loop
jmp
in
mov
push
fnstsw
dec
movs
mov
and
scas
addr16
repnz
out
and
xchg
ins
in
aaa
sub
(bad)
cmp
pop
pop
xchg
pop
mov
mov
cmp
push
inc
sbb
sbb
xchg
xchg
sbb
fist
leave
imul
xchg
lods
push
into
mov
sbb
and
push
jns
stos
pusha
into
ins
ins
sbb
cmc
push
or
dec
enter
mov
test
pop
cmc
scas
mov
mov
into
push
sbb
cli
gs
cmp
xchg
lock
cmp
pushf
push
fstp
dec
into
pop
mov
ins
and
shl
fsubr
fcmovbe
test
pusha
clc
fdivr
or
scas
fadd
sar
fsubr
sahf
jle
sahf
dec
fidiv
mov
or
inc
jmp
jecxz
mov
sahf
repz
outs
and
leave
mov
push
stc
push
jae
cmps
lods
dec
jmp
dec
xor
test
test
ins
ins
push
sbb
icebp
add
cld
push
mov
lea
mov
movs
(bad)
lahf
cmp
lods
jnp
pop
inc
arpl
inc
retf
das
xchg
neg
dec
les
out
push
adc
fild
adc
outs
out
xor
jge
jo
or
xchg
inc
ds
cmp
cld
call
sub
jbe
mov
pop
lahf
ins
dec
mov
mov
jmp
inc
scas
out
xor
push
jo
fsubr
adc
mov
jmp
test
call
(bad)
pavgb
pop
popf
pop
neg
sbb
lock
dec
inc
xchg
and
push
push
loopne
mov
pop
das
cmp
loopne
jne
push
(bad)
mov
jge
jg
dec
mov
inc
adc
test
pop
adc
lea
enter
ss
mov
cmp
std
into
dec
sub
loope
jae
popa
mov
dec
inc
fwait
add
and
inc
aad
xchg
movs
xchg
dec
rcr
lahf
push
je
test
jno
movs
pushf
inc
mov
sbb
cdq
mov
inc
or
enter
xor
js
ins
rol
xchg
adc
and
push
pusha
mov
mov
js
inc
rcl
repz
jnp
cld
push
lods
fstp
ins
xchg
xor
xchg
mov
dec
lea
int3
cmps
adc
out
mov
test
lods
pusha
pop
stc
xor
fdivr
sahf
loope
dec
mov
cmp
(bad)
or
movs
sbb
cmp
jne
aad
ins
dec
jp
std
dec
inc
jg
int3
lock
iret
lock
push
retf
and
imul
in
shl
lock
add
or
cmp
jne
clc
and
mov
dec
pop
push
jge
leave
retf
aam
ficom
mov
dec
in
xor
mov
pop
lds
call
gs
push
mov
stos
pop
into
shl
out
xchg
dec
mov
repnz
jb
xor
bound
outs
xor
adc
mov
in
sbb
push
xchg
xchg
rol
fcom
fs
xor
jge
stc
sti
mov
and
jle
cmc
popa
inc
(bad)
sub
inc
(bad)
les
push
imul
repz
jl
inc
add
mov
in
jnp
ins
mul
jecxz
in
sbb
in
nop
pop
(bad)
arpl
int
jbe
add
mov
lock
fmul
int
mov
dec
sub
jg
aam
jnp
adc
dec
adc
xchg
jne
bound
mov
inc
into
dec
dec
cdq
(bad)
ds
xchg
fild
bound
mov
test
out
(bad)
xchg
retf
out
lods
sub
jecxz
pop
push
and
ds
mov
pusha
ja
call
loop
ins
ins
fld
sub
jno
data16
sbb
sbb
sub
cdq
aaa
ins
jo
xor
jmp
xlat
scas
inc
shl
loop
je
inc
mov
das
dec
hlt
jnp
cmp
dec
dec
pop
xchg
mov
pop
ss
retf
retf
adc
(bad)
fcmovne
call
out
aaa
dec
xchg
and
loop
call
jnp
xchg
retf
hlt
sub
sbb
push
cmp
outs
mov
adc
jns
push
fdivp
mov
mov
into
scas
out
ins
je
rol
push
int3
push
inc
push
in
shr
fstp
shl
pop
sub
jno
pop
inc
xlat
(bad)
enter
sbb
xchg
lea
sbb
adc
pop
mov
addr16
adc
mov
fisubr
and
mov
mov
test
sbb
xor
shr
data16
mov
add
retf
out
test
mov
jl
cmp
(bad)
test
in
or
pop
pop
in
sbb
push
sub
push
inc
bound
(bad)
or
ins
and
or
pop
cld
and
mov
and
xchg
loop
sahf
fidivr
sub
mov
cmps
mov
addr16
xchg
mov
inc
sbb
fwait
jl
in
fsub
pop
in
in
jmp
inc
pop
lods
(bad)
out
leave
pushf
jb
aaa
cmps
imul
and
push
adc
js
out
pop
xchg
aad
mov
mov
pop
mov
mov
and
stos
cmp
sub
push
push
and
xlat
imul
mov
mov
imul
push
cmp
(bad)
sar
add
fsubr
lods
lods
pop
in
cwde
leave
jecxz
gs
jno
fstp
rcr
outs
pop
and
xchg
and
pop
js
jp
fsub
(bad)
rol
in
push
fimul
mov
in
mov
mov
lods
clc
pushf
movs
outs
adc
test
push
cmc
fldenv
pop
sbb
jbe
ror
test
out
das
das
push
test
xchg
xor
adc
jne
fdivrp
mov
push
test
aaa
scas
add
xor
sbb
pop
out
test
add
ins
pop
bound
ja
(bad)
(bad)
add
cmp
xor
out
ins
push
jno
adc
xor
sub
pop
into
aas
retf
jl
repnz
fst
(bad)
or
dec
div
pusha
pusha
mov
arpl
jns
jl
outs
mov
mov
cld
int3
adc
jnp
pop
test
sbb
mov
adc
cs
iret
xchg
(bad)
icebp
test
jmp
pushf
sbb
fcom
jbe
fdivr
(bad)
movs
in
xchg
add
dec
lods
in
dec
in
sbb
fsub
ss
adc
je
jmp
push
fwait
loop
in
pusha
inc
fisubr
jg
fsubp
xchg
and
lods
jge
xor
int
mov
pop
xchg
jle
sbb
and
call
pop
sbb
push
mov
add
inc
and
js
sbb
es
(bad)
and
mov
jl
loope
popf
pop
mov
mov
push
sbb
out
aas
xchg
aam
in
sbb
add
xchg
(bad)
jle
pushf
cld
rol
lahf
imul
jecxz
pusha
ins
repnz
cld
js
mov
sub
mov
dec
pop
mov
mov
cmp
jne
cld
icebp
icebp
push
pop
les
mov
shr
sti
popf
repz
cld
mov
jns
jle
test
jmp
sbb
xchg
mov
fdiv
fwait
and
mov
outs
mov
dec
shl
xor
adc
mov
push
sbb
mov
ds
jl
cmp
lods
inc
pop
loop
in
test
mov
loopne
ins
movs
ficomp
add
add
shl
cmp
icebp
push
movs
mov
sbb
aam
fisttp
arpl
cld
fadd
adc
sahf
out
mov
sub
repnz
les
popa
out
(bad)
hlt
jle
add
imul
cdq
into
mov
dec
sub
in
bound
jns
call
mov
cmp
gs
inc
aam
and
inc
in
outs
(bad)
jns
push
xchg
xor
imul
(bad)
sbb
retf
in
cld
fcmovne
arpl
push
jns
sbb
jnp
je
iret
push
ins
cmps
mov
adc
(bad)
and
jmp
imul
mov
mov
loope
repz
sbb
mov
paddsw
test
in
pop
dec
lock
cmps
sub
(bad)
imul
push
sub
jge
jmp
push
adc
jne
pop
cmc
bound
cli
das
in
ror
arpl
jbe
mov
stos
ins
pusha
push
dec
aad
ss
sub
mov
pop
cli
mov
pop
adc
int3
ror
mov
stc
std
pushf
fcomp
cmc
sub
call
arpl
lock
sub
jl
loopne
gs
mov
pop
popw
lock
jb
retf
outs
jnp
cmp
daa
fdivr
push
or
dec
jp
js
int3
retf
cs
dec
out
xchg
sbb
cmp
aaa
xchg
push
lods
push
mov
jmp
cmps
jnp
test
mov
sub
pop
cwde
jns
outs
aam
jl
add
inc
lods
ds
push
pop
sub
xor
pop
pop
rcr
int
aam
out
in
push
outs
repnz
fs
push
ins
lods
inc
imul
jmp
imul
mov
jecxz
mov
in
and
rol
pop
test
mov
loop
mov
pop
inc
or
mov
outs
push
mov
arpl
sar
fwait
je
fimul
call
stos
fadd
add
sbb
retf
popf
fimul
push
lea
cmc
int3
mov
arpl
(bad)
mov
sub
mov
ja
or
xchg
(bad)
lds
sub
repz
adc
pop
sbb
sbb
fdivr
fwait
pusha
cmp
add
mov
jp
pop
mov
aas
xchg
stos
jecxz
and
push
and
and
rol
xchg
jne
repnz
jg
cld
test
adc
mov
push
out
aaa
mov
mov
pusha
inc
xchg
mov
bound
or
cmp
xchg
mov
and
push
gs
push
or
in
repnz
fisubr
cmp
inc
retf
(bad)
xchg
push
xor
push
mov
add
mov
pop
test
cmp
mov
sub
mov
sbb
sbb
add
xchg
jl
and
cli
xor
retf
mov
jno
pop
popf
xor
cs
loop
adc
sbb
pop
cmp
add
add
sbb
sub
das
sbb
sbb
pop
adc
imul
(bad)
mov
mov
cld
jge
pop
mov
xchg
sub
cmp
jl
xchg
ror
mov
mov
mov
jl
nop
lahf
nop
cli
jmp
xchg
repz
sbb
mov
pusha
movs
fnsave
imul
in
imul
imul
js
js
cmp
lods
cmp
add
jmp
ins
test
jmp
popf
xor
ss
dec
fstp
and
es
mov
sbb
mov
push
(bad)
outs
mov
adc
jne
dec
mov
push
mov
mov
cdq
iret
mov
pop
jg
push
or
pop
xlat
xchg
sbb
and
out
push
xchg
cmp
push
scas
cmp
dec
push
retf
cdq
push
out
mov
pushf
stos
jmp
outs
jae
fwait
imul
cmp
mov
ins
shl
cmc
fnstenv
cmp
push
aas
mov
cmp
in
idiv
dec
imul
or
movs
or
test
or
repz
sub
sub
push
in
(bad)
inc
add
push
inc
xor
xor
xchg
xchg
push
iret
jecxz
jmp
jno
dec
out
mov
sub
push
je
mov
add
cmps
mov
pop
dec
ss
js
es
js
cmp
xchg
bound
in
dec
push
lahf
xchg
mov
push
int3
in
pop
push
hlt
movs
pop
mov
cmps
test
and
adc
adc
popf
adc
jns
cmp
push
pop
push
(bad)
push
mov
fsub
outs
es
aad
pop
(bad)
jp
outs
mov
push
mov
arpl
fwait
inc
sbb
nop
sub
idiv
push
(bad)
sbb
dec
mov
pop
mov
xchg
int
cmp
js
aaa
mov
test
outs
pop
in
fs
hlt
addr16
jb
shl
clc
sti
std
lds
popf
fs
inc
ins
cmp
sbb
xchg
xor
and
pop
lods
cmp
push
sub
js
xor
pop
ins
cmovl
data16
aaa
sti
popf
adc
mov
xor
gs
sbb
repz
pop
push
pop
test
pusha
xchg
adc
pop
pop
and
xchg
and
cwde
(bad)
push
push
stc
je
xor
pop
cmp
mov
sar
jg
lahf
adc
mov
jb
dec
mov
jge
int
lods
push
or
test
or
mov
lods
mov
xchg
(bad)
mov
call
xlat
cmps
pop
out
(bad)
sub
mov
inc
scas
daa
in
ins
pop
mov
arpl
xor
adc
adc
into
std
repz
(bad)
shl
ficomp
test
imul
movs
sub
das
std
mov
mov
jg
push
inc
inc
int3
cwde
push
push
jmp
(bad)
lock
cwde
je
adc
adc
adc
test
mov
(bad)
mov
mov
shl
add
pop
and
out
aam
cwde
jmp
das
sub
cs
les
jb
and
pop
mov
push
xchg
cwde
test
fimul
imul
sbb
jne
(bad)
repnz
xchg
fistp
lock
(bad)
xor
cmp
cmp
pop
push
add
ins
push
adc
cmp
mov
sub
mov
lods
ins
scas
pop
es
into
dec
cmps
pop
imul
cwde
fs
shr
xchg
popa
arpl
add
cmp
push
jmp
push
add
add
(bad)
fdivr
es
cs
out
sub
sbb
cmp
inc
cmp
fs
shl
xor
xchg
scas
loopne
aam
push
retf
push
(bad)
call
test
in
adc
pop
pusha
data16
sbb
call
sti
jg
rcl
mov
xchg
hlt
cmps
cmps
adc
xchg
jl
in
or
ins
mov
dec
jbe
arpl
sti
(bad)
jne
push
sub
jge
gs
xor
pop
lock
push
sbb
lods
push
leave
sub
sub
or
mov
sti
sti
lods
xchg
iret
out
mov
(bad)
scas
call
jl
call
adc
mov
mov
loop
sbb
mov
xchg
pop
pop
nop
mov
push
call
or
test
fcomp
mov
sbb
and
rcr
ins
adc
bound
adc
movs
jne
ins
shr
add
movs
out
and
adc
stc
outs
adc
mov
cli
lahf
jge
leave
pop
xchg
test
test
cmp
fwait
pusha
(bad)
fsubr
xor
retf
les
scas
mov
iret
xor
std
fs
in
mov
sbb
pop
xlat
imul
sub
adc
out
and
pushf
bound
dec
push
js
cmp
outs
add
ja
adc
outs
jl
and
lahf
sbb
jmp
neg
xchg
lea
push
push
cmps
lahf
pop
jmp
and
icebp
mov
cld
push
pop
pop
xor
(bad)
push
inc
es
push
(bad)
jle
pop
aam
mov
sub
pusha
cmp
xor
and
cmps
imul
imul
retf
dec
cli
std
outs
pop
jns
aad
xchg
fwait
mov
jno
call
adc
sbb
(bad)
mov
add
iret
mov
rep
popf
sub
mov
cdq
xlat
movs
jns
or
add
idiv
mov
shr
rcr
pop
ins
fpatan
mov
xchg
jns
xchg
aam
rcl
add
lods
in
outs
stos
mov
data16
xor
clc
leave
adc
pop
mov
pop
movs
inc
pusha
pop
cdq
adc
in
sub
sbb
inc
cdq
sar
ins
movs
mov
je
fdivr
dec
xor
mov
jge
inc
cmps
outs
stos
sub
imul
and
cmc
sub
jl
add
jmp
jmp
ja
ret
xor
pushf
cmps
or
pusha
arpl
fisttp
xor
ror
dec
test
push
push
(bad)
and
mov
ds
fs
sub
jg
mov
rcl
push
scas
xchg
adc
jo
pop
in
out
xchg
scas
mov
push
rol
mov
retf
test
fadd
xchg
xchg
les
iret
mov
push
pushf
loop
std
aad
and
jl
or
push
lea
sbb
in
pop
cwde
fnstsw
aaa
push
lods
add
push
and
adc
cmp
int3
and
xchg
ja
add
push
add
push
ss
and
daa
retf
std
addr16
aaa
cmp
pusha
mov
out
xchg
or
push
in
adc
dec
xchg
cmps
jmp
stos
popf
nop
sub
or
lea
add
call
mov
test
xor
sbb
imul
sub
fsubr
adc
jbe
cld
xchg
inc
xor
(bad)
mov
mov
mov
push
jno
jae
rcl
inc
test
mov
push
xor
mov
(bad)
xchg
stos
fstp
shl
or
mov
test
inc
xor
repnz
adc
jmp
jge
pop
cs
mov
push
aam
sub
js
xor
pop
ins
ss
adc
lea
arpl
sub
push
push
pop
adc
sub
cmp
inc
dec
sbb
and
fsub
inc
bound
(bad)
mov
in
cld
cwde
cs
retf
mov
in
fadd
mov
jecxz
shl
mov
sbb
cmp
cs
fdivr
push
jle
mov
xchg
fwait
lods
add
das
adc
(bad)
push
inc
mov
pop
nop
lea
outs
stos
shr
xor
pop
repz
ret
call
popf
sar
mov
sbb
ja
sbb
(bad)
and
or
pushf
and
lock
arpl
icebp
iret
add
sbb
xchg
inc
mov
iret
adc
mov
(bad)
in
out
fsub
(bad)
repz
pop
and
and
shl
data16
out
pop
das
push
loope
lods
xor
adc
mov
imul
js
std
iret
cs
rcl
xor
sub
and
jno
mov
aam
repz
sub
pop
sbb
push
imul
lahf
dec
and
add
jns
cmp
push
mov
adc
inc
(bad)
je
mov
dec
std
mov
sbb
(bad)
pushf
cld
sub
ds
push
jns
out
cdq
mov
js
inc
ds
lods
pop
or
repnz
stc
mov
adc
inc
cmp
pop
push
xor
lods
adc
push
bound
and
pusha
xchg
mov
fcmovbe
test
push
push
jle
into
iret
hlt
cwde
fdiv
fnstsw
adc
repz
inc
xchg
sar
adc
lock
dec
dec
loope
inc
or
and
mov
cs
rcl
bound
mov
inc
fadd
xchg
or
int
and
es
outs
test
(bad)
aas
sbb
imul
inc
pop
and
mov
out
rcr
mov
dec
cmp
push
jne
in
or
test
retf
and
sub
pusha
pop
mov
in
out
sub
adc
dec
mov
sbb
mov
sbb
mov
pop
adc
aad
adc
push
pop
arpl
push
jns
jle
and
(bad)
(bad)
cmps
pusha
shl
test
out
into
dec
stos
lea
push
mov
out
aam
xchg
ret
push
scas
adc
pop
not
repz
retf
push
xchg
popf
icebp
hlt
pop
sbb
sub
dec
cmp
mov
sub
push
cmps
or
pop
bnd
cmp
dec
adc
sbb
hlt
xchg
or
push
mov
retf
cmps
int3
fwait
rcr
xchg
jo
repz
popa
and
and
push
sti
aaa
imul
into
sbb
add
xlat
jmp
in
call
fcom
xchg
sbb
mov
jg
sub
push
adc
push
je
mov
sub
push
inc
cmp
jge
sub
std
push
sar
dec
cld
lods
inc
pop
retf
sub
mov
pop
or
xchg
or
in
in
stos
outs
out
dec
or
mov
push
mov
popf
sbb
push
add
sub
xlat
not
cmps
icebp
push
jp
fdivp
jbe
aad
enter
fdivr
popa
(bad)
pushf
jne
sub
ficomp
jae
addr16
bound
sbb
inc
into
(bad)
rol
call
mov
jecxz
cmp
call
ins
sar
pop
sbb
mov
xchg
sbb
xchg
mov
rcr
sub
push
sub
xor
call
mov
call
dec
(bad)
push
cld
shl
xor
mov
mov
std
sbb
and
cmp
arpl
xor
add
jb
pushf
fcom
bound
and
cmp
aad
int3
mov
sub
jle
lea
pop
in
pop
push
adc
movs
adc
mov
out
lock
or
jne
jl
mov
int3
mov
int
bound
(bad)
lods
sub
cld
push
arpl
lock
jl
pushf
sahf
xchg
xor
push
ins
and
xlat
adc
adc
sub
popf
popf
imul
dec
jbe
das
out
mov
xor
push
cld
xchg
adc
test
test
ror
ffree
lods
hlt
cwde
repz
iret
sub
pop
lods
lods
sbb
mov
ja
xor
in
pop
or
rcr
(bad)
repnz
call
sub
xor
call
adc
adc
lds
and
mov
cmp
lock
push
mov
retf
sub
pop
aad
js
mov
stos
push
xor
pop
add
xchg
pushf
mov
xchg
xchg
in
mov
inc
and
hlt
xchg
jne
fidivr
push
cmp
mov
pusha
push
sbb
xor
dec
jmp
test
cmp
mov
in
xor
push
arpl
test
mov
bound
lods
dec
mov
mov
mov
je
(bad)
xchg
loop
out
push
mov
call
rcr
sub
push
arpl
sub
mov
pushf
push
or
sbb
je
push
loopne
mov
les
dec
xor
push
mov
jl
out
and
clc
sub
scas
jl
mov
fild
push
push
int
xor
retf
push
inc
dec
jge
mov
cmp
test
cmp
faddp
cwde
dec
mov
ret
cwde
xchg
adc
lahf
clc
dec
xor
popf
in
aad
cmp
push
aad
or
mov
aaa
outs
xchg
pop
push
outs
mov
inc
or
push
aaa
(bad)
xchg
aam
mov
in
aaa
retf
xchg
ror
mov
rcl
xchg
into
push
ins
sub
lock
and
push
sub
jns
fxch
mov
les
outs
dec
rcr
fild
bnd
rol
sbb
pop
fimul
xchg
pop
cdq
in
xlat
push
int3
cmc
pop
and
adc
(bad)
std
aaa
xor
push
adc
cmp
inc
jne
xchg
cmp
icebp
mov
inc
mov
idiv
dec
cdq
fs
mov
data16
dec
in
sub
adc
icebp
cmp
in
inc
mov
std
sti
jmp
mov
and
out
xchg
mov
mov
xor
addr16
push
in
int3
mov
mov
pop
dec
int3
or
mov
xor
mov
mov
or
pop
jl
fsub
ins
xlat
(bad)
push
cmp
loop
mov
call
test
sbb
stos
cli
pop
adc
dec
repz
or
outs
mov
mov
xchg
push
fistp
xor
or
dec
sahf
cmps
jecxz
push
ror
or
arpl
lods
data16
and
push
xor
mov
lea
jmp
sub
movs
sbb
xchg
adc
fld
adc
cld
push
popa
adc
es
js
push
rcr
repz
push
mov
inc
hlt
pop
inc
inc
inc
adc
mov
jl
into
icebp
push
enter
aaa
sub
jbe
push
test
je
les
jns
cmps
push
dec
pop
mov
jp
xchg
aaa
shl
lahf
das
pop
sbb
xor
sbb
pop
shr
iret
test
cld
and
ret
push
and
(bad)
stc
mov
rcr
xor
jo
inc
mov
icebp
jno
les
jnp
aas
and
mov
pop
(bad)
std
scas
sub
lock
dec
iret
xlat
mov
pop
repnz
ins
add
and
outs
cmpxchg
mov
daa
xchg
inc
das
iret
adc
xor
scas
test
mov
outs
mov
sub
mov
adc
adc
movs
data16
lock
into
rcr
test
mov
dec
bound
fwait
rcl
mov
and
and
sbb
rcr
mov
mov
sub
lods
push
in
icebp
or
mov
enter
jns
jo
retf
mov
xchg
movs
lods
(bad)
pop
imul
aad
xor
push
push
jg
pushf
adc
xchg
adc
ret
js
je
jp
lock
in
mov
mov
stos
pop
test
hlt
test
xchg
pop
ds
sbb
sti
cmp
jne
ins
dec
and
xor
xor
loope
je
aad
push
test
out
ficom
lods
mov
sub
fsubp
sti
dec
sahf
(bad)
adc
mov
inc
sar
xchg
adc
lds
(bad)
(bad)
push
fwait
mov
push
rcl
push
(bad)
xchg
fistp
jle
ins
mov
call
cmp
adc
shl
xchg
aaa
cmp
ss
test
push
add
inc
or
iret
leave
inc
and
push
in
mov
sub
dec
cdq
pop
arpl
sub
mov
sub
loope
mov
retf
loop
xchg
and
ret
sbb
retf
mov
xor
(bad)
int
es
les
hlt
pop
sub
pop
lods
adc
pushf
pop
ret
pop
lods
xor
adc
mov
pop
gs
aad
pminsw
retf
fdiv
mov
and
inc
pop
int
cmps
sub
xor
xor
cld
arpl
mov
jbe
cmp
cmp
push
stos
push
and
sub
mov
cdq
adc
push
pop
add
xchg
inc
pop
pop
std
adc
arpl
adc
jg
test
jecxz
out
lods
arpl
mov
addr16
cmp
imul
inc
lahf
dec
mov
imul
mov
pop
scas
sbb
jl
int
xor
popa
adc
retf
mov
sbb
xlat
mov
pop
and
out
fld
add
clc
fidiv
std
xor
popf
sub
mov
adc
fild
mov
mov
test
pop
cmp
pop
fild
jl
push
cmp
pop
jecxz
pop
inc
xchg
adc
repz
repnz
sub
push
push
outs
mov
ins
pop
cld
mov
mov
mov
adc
bound
leave
fucomp
fadd
xchg
xchg
iret
push
lods
add
ret
inc
add
in
and
pop
cmp
(bad)
movs
popf
aad
nop
movs
sbb
push
rol
jb
nop
ret
fdivr
mov
xor
xchg
inc
rcl
sbb
pop
addr16
mov
cld
js
push
gs
ret
loope
sub
hlt
adc
stos
and
cli
pop
lds
repnz
mov
lahf
and
shl
xchg
and
add
adc
icebp
in
dec
sub
or
pop
rcl
xlat
daa
pop
inc
jmp
sub
mul
cmps
in
repnz
mov
loope
sbb
dec
jmp
in
push
test
adc
adc
pop
push
in
lds
fimul
hlt
movs
mov
iret
aas
xchg
cwde
aam
test
mov
mov
push
movs
mov
and
mov
nop
aad
movs
ins
cmp
mov
(bad)
sbb
sub
sbb
adc
pop
xor
mov
(bad)
sub
fadd
ret
pushf
sbb
leave
mov
retf
fidiv
lods
fidivr
lods
cmp
lea
lods
pop
mov
push
in
or
outs
pop
int
push
lods
(bad)
push
jb
sub
daa
and
shl
cwde
pop
push
cwde
inc
dec
(bad)
push
adc
arpl
push
adc
xor
adc
cmp
jmp
lea
pop
aaa
mov
(bad)
(bad)
fisttp
and
or
addr16
ret
cmp
mov
stos
push
mov
lods
push
stos
movs
pop
popf
push
adc
sbb
mov
adc
imul
fwait
and
mov
sub
mov
push
mov
cbw
in
and
adc
push
stc
cwde
or
test
scas
aam
(bad)
xor
push
jnp
cmp
dec
fdivr
push
push
gs
mov
aam
mov
not
(bad)
es
dec
aad
cmp
pop
in
imul
lds
push
add
adc
adc
sbb
jmp
dec
push
push
fld
mov
or
sbb
lods
xchg
jno
test
sub
sub
lahf
push
dec
or
pop
hlt
pop
dec
mov
mov
lea
mov
mov
push
jp
sub
cmp
(bad)
and
sub
mov
inc
sahf
movs
dec
aam
and
sbb
push
cmp
cmps
(bad)
shl
dec
nop
and
iret
ins
das
in
cwde
pop
dec
ror
fadd
cmps
xchg
push
jmp
das
xor
adc
mov
lock
mov
push
mov
mov
lods
mov
inc
jne
int3
cmp
fidiv
loop
sti
sbb
mov
inc
pop
pop
xor
sar
mov
adc
pop
lahf
xchg
scas
lock
int3
cld
add
loopne
push
jl
(bad)
xchg
loop
leave
shl
mov
(bad)
popa
inc
cmp
(bad)
add
sub
jge
cmps
or
call
mov
iret
mov
xor
nop
sar
int3
xchg
repnz
pop
cmp
pop
clc
imul
pop
out
pop
and
or
sub
pop
push
jae
push
in
xor
push
fst
jecxz
lds
fwait
sahf
xchg
cwde
push
int3
xchg
push
pop
pop
lds
mov
adc
aas
push
or
dec
addr16
(bad)
in
out
stos
scas
dec
mov
sbb
ds
sbb
(bad)
dec
cld
cdq
mov
push
retf
cmc
out
mov
jb
mov
cld
(bad)
jmp
stos
movhlps
aas
push
adc
xor
mov
lahf
push
mov
(bad)
fadd
adc
cmp
lods
sar
mov
sub
push
add
or
js
sub
or
sbb
or
es
sub
adc
mov
xchg
retf
xchg
mov
ror
ds
xlat
sbb
jecxz
(bad)
jae
push
xor
enter
or
xchg
lods
lea
pusha
jnp
sbb
mov
and
pushf
popf
fbstp
dec
out
jmp
mov
frstor
fist
stos
adc
cld
aad
cdq
sbb
mov
sub
cmp
xchg
les
retf
add
dec
adc
jle
adc
jge
inc
sahf
push
js
int
ret
(bad)
cwde
fcom
fcmovnbe
inc
daa
push
ja
sbb
test
cmp
xor
pop
pusha
or
jge
sub
mov
test
push
xor
pop
jnp
mov
sti
mov
bswap
and
cmp
iret
jp
sub
and
fwait
lods
sahf
sti
adc
xchg
mov
sub
pop
xor
cmps
or
mov
add
adc
sub
ins
mov
inc
jo
mov
pop
test
sbb
iret
jle
jl
adc
imul
adc
ins
(bad)
or
cld
fcmovne
push
pop
std
movs
or
cmp
nop
int
sub
shr
xor
mov
dec
sahf
je
or
cmps
imul
inc
xchg
aas
jg
xchg
in
pusha
sbb
(bad)
jb
sbb
out
cli
mul
outs
add
out
jmp
pop
mov
addr16
scas
push
jecxz
and
mov
je
jmp
loop
dec
movs
mov
scas
push
cdq
out
in
arpl
push
sahf
xchg
repnz
enter
sbb
push
add
outs
lea
push
dec
icebp
outs
sub
mov
dec
cmp
jno
es
popa
lea
mov
xor
cmp
fisubr
adc
dec
pop
add
pop
push
sbb
push
popf
(bad)
xor
cmp
repz
add
jmp
sar
push
jae
and
mov
mov
cwde
xor
ss
inc
nop
fistp
mul
call
push
mov
psubusb
pop
cmp
push
jae
pushf
clc
into
or
imul
pop
repnz
retf
retf
out
push
lds
in
add
push
mov
sbb
jno
loop
cs
inc
inc
mov
adc
cwde
aas
jae
out
inc
outs
popf
cmp
pop
lock
rcl
adc
push
gs
popf
pop
nop
pop
dec
sahf
mov
xchg
imul
data16
push
pop
sub
cmp
push
and
cwde
sub
adc
out
outs
cli
stos
ins
pop
inc
(bad)
mov
sub
jae
xchg
adc
call
xchg
(bad)
call
inc
icebp
arpl
repz
aad
movs
fwait
pop
(bad)
sub
popa
mov
mov
mov
mov
rcl
push
pop
cs
out
mov
sbb
mov
jmp
or
and
pushf
imul
xor
sub
mov
push
or
aad
jmp
mov
jp
les
cmc
das
fmulp
nop
in
pop
test
fist
jb
aam
fmul
and
xadd
test
not
or
or
jno
mov
jb
dec
mov
sub
pop
fmul
inc
mov
(bad)
clc
sub
adc
fnstsw
imul
sbb
fstp
pop
inc
(bad)
xor
in
mov
sbb
and
call
push
jbe
sub
int3
ret
idiv
inc
mov
jge
stos
test
lods
fidivr
xchg
or
and
fimul
push
fcom
inc
cmp
loopne
sub
mov
das
push
fild
adc
aad
repnz
add
and
ds
aas
idiv
mov
adc
gs
out
cmp
mov
ja
leave
push
ret
inc
add
aaa
xchg
mov
sub
nop
mov
(bad)
xchg
mov
inc
jecxz
inc
int3
jno
in
add
pop
sti
(bad)
out
int3
sahf
sub
fidiv
jo
sub
add
pop
push
pusha
or
in
loopne
sbb
adc
fmul
xchg
jo
sub
sahf
jbe
imul
pop
call
not
mov
int3
push
jb
inc
in
fwait
sahf
out
push
xor
sbb
fbld
arpl
icebp
fwait
add
mov
push
ret
das
fcmovb
outs
movs
fwait
out
aas
sbb
pop
mov
cmp
adc
call
loope
lahf
lods
jb
xchg
call
retf
dec
pop
or
jbe
jmp
xchg
inc
xchg
pop
jp
(bad)
pop
int
fwait
es
fucomp
enter
jl
sbb
mov
int3
push
cwde
sahf
mov
adc
not
xchg
aaa
or
mov
sub
jp
mov
outs
lods
(bad)
jge
outs
push
lahf
push
adc
xchg
fwait
mov
add
sar
jp
mov
mov
test
arpl
sub
adc
pushf
xor
mov
sbb
fidiv
push
sbb
data16
pop
pusha
xlat
cmc
fbld
jmp
aam
adc
mov
add
dec
sbb
aad
in
mov
cmp
pop
(bad)
test
shr
xchg
scas
dec
sbb
cmp
sbb
inc
mov
pop
and
test
std
ret
loop
adc
dec
fwait
lods
fistp
pop
push
jle
xchg
push
fwait
in
push
int
dec
push
addr16
xchg
ror
ds
std
mov
enter
sub
retf
inc
ins
add
fdiv
push
pop
add
and
sbb
inc
mov
jbe
sahf
xchg
sahf
adc
sbb
mul
outs
add
mov
loopne
and
mov
(bad)
jp
ins
and
es
sbb
icebp
mov
mov
mov
and
cmp
fdivr
dec
sbb
sbb
adc
xor
push
cmp
repz
push
sbb
int
loop
pop
gs
sbb
mov
movs
or
call
ja
(bad)
push
push
mov
push
inc
leave
pop
push
pop
nop
xchg
xlat
test
dec
aad
imul
cld
adc
in
fst
push
mov
and
dec
jmp
ins
popf
mov
retf
lods
pop
mov
aad
sbb
jmp
inc
mov
xchg
pop
call
ins
(bad)
cld
js
int
imul
inc
shl
cmp
push
pop
lods
sub
addr16
mov
dec
neg
scas
out
(bad)
push
pop
ficom
mov
hlt
adc
pushf
aad
and
xor
adc
dec
jmp
and
xor
push
and
lods
aam
mul
mov
call
imul
ror
repz
je
pusha
sbb
xor
in
xor
cld
jmp
cs
loopne
mov
or
mov
push
mov
ret
scas
sbb
push
lock
int
push
leave
repnz
enter
mov
or
sub
leave
pop
stos
sti
sub
stos
xor
pop
mov
div
push
lock
inc
pop
mov
sub
ins
sub
xor
in
cli
cmp
add
(bad)
fs
ss
or
or
sbb
xor
ins
xchg
push
enter
mov
pop
mov
mov
push
adc
aad
or
inc
jne
in
inc
push
jmp
fwait
(bad)
fadd
adc
mov
es
retf
push
pusha
pop
xlat
cmp
ins
les
(bad)
cmp
push
(bad)
imul
(bad)
xchg
sbb
mov
fistp
dec
out
leave
xchg
dec
cmp
xor
push
push
ret
fsqrt
push
dec
mov
retf
aad
inc
leave
xor
mov
cmp
in
dec
add
lock
dec
ins
jns
retf
push
push
popa
mov
jge
(bad)
jle
lahf
in
test
cdq
movs
xchg
je
lods
lahf
(bad)
cmps
push
aam
icebp
mov
adc
dec
dec
mov
fwait
inc
adc
push
mov
push
adc
push
aad
jmp
sbb
xchg
dec
xchg
mov
dec
jmp
adc
inc
fldcw
jge
(bad)
jg
(bad)
cld
daa
pop
lds
adc
push
stc
adc
not
aad
retf
call
pop
sbb
add
pop
pop
push
inc
call
fmul
inc
aad
xchg
loope
xchg
xchg
pushf
in
pop
or
bound
fidivr
nop
cmp
pmullw
movs
repnz
stos
mov
outs
adc
mov
inc
repnz
iret
sub
outs
retf
xchg
mov
(bad)
jg
xchg
pop
(bad)
rol
pusha
aaa
lods
push
repnz
fidiv
pop
rcr
out
xor
(bad)
not
loope
retf
xor
add
adc
mov
test
ds
loop
call
xor
jbe
loopne
cs
dec
inc
or
mov
dec
jecxz
xchg
pop
inc
sbb
aas
in
or
jmp
push
adc
mov
bound
push
repnz
dec
out
xor
and
cmp
dec
stos
push
cdq
xor
push
push
cmps
xchg
int
sbb
mov
adc
mov
and
out
pop
ins
div
cli
test
addr16
pop
push
jns
push
fist
jmp
jns
test
or
icebp
cmp
mov
je
imul
repz
arpl
xor
fisub
aas
scas
dec
call
repnz
push
shl
xor
data16
jae
lock
lods
test
loop
push
pop
mov
pop
mov
and
std
shl
out
outs
jb
xchg
iret
ds
mov
div
je
out
cmc
imul
sub
outs
push
pop
and
fdiv
loopne
mov
push
fld
scas
dec
mov
aam
imul
(bad)
mov
sub
and
loopne
popa
shr
add
lea
sbb
cs
mov
and
inc
adc
xchg
es
mov
clc
mov
fadd
popf
in
fldenv
push
mov
jmp
(bad)
cdq
mov
dec
outs
shl
pop
test
call
adc
fstp
loop
das
xor
xor
loop
sub
jmp
or
gs
mov
pushf
push
out
sub
push
xchg
push
push
mov
test
or
imul
or
and
pop
inc
xchg
pop
adc
add
xchg
ficom
and
(bad)
out
or
(bad)
call
adc
push
test
lahf
push
push
fwait
dec
jno
push
mov
jnp
test
dec
xor
inc
into
into
sub
in
lahf
mov
fucomi
xlat
pop
mov
fs
loope
and
rcr
xor
sub
lods
jp
cmp
cs
mov
or
dec
xor
sti
sbb
sub
test
xor
or
jns
and
inc
xor
test
bnd
sbb
in
cmp
mov
mov
fisub
push
popa
ret
ins
rcl
aaa
mov
mov
cmc
addr16
dec
and
jl
sub
adc
push
test
scas
or
repz
xor
iret
out
data16
not
mov
pop
inc
mov
(bad)
xchg
sub
jle
sbb
(bad)
ins
cld
cmc
and
int3
mov
or
fild
sub
inc
xchg
pop
(bad)
sbb
jp
xor
sub
loope
fdivr
adc
leave
adc
popa
sbb
sub
mov
mov
js
xchg
dec
dec
ja
sbb
call
jmp
jle
scas
xor
outs
cmps
int
sub
dec
sahf
into
push
mov
ins
data16
cmp
rcr
fcomp
and
inc
dec
imul
ins
mov
sub
enter
mov
or
pop
pop
jmp
rol
test
clc
icebp
push
inc
sbb
in
and
sbb
push
repnz
jp
in
fisub
dec
rcl
sbb
push
aaa
mov
sahf
in
mov
push
sar
arpl
sub
push
repz
call
test
xor
adc
push
mov
cmp
push
fistp
retf
sbb
icebp
sub
jno
loopne
mov
adc
dec
sub
mov
xchg
dec
ret
mov
imul
ins
stos
sbb
(bad)
clc
xchg
pop
or
dec
mov
pop
sahf
sub
and
xchg
mov
call
sahf
sub
push
add
arpl
sahf
imul
sub
sub
pop
sub
icebp
test
xchg
fnsave
popa
int
push
push
out
or
push
xchg
in
xlat
in
mov
out
test
sahf
mov
stc
lock
cwde
movs
pop
call
xor
gs
xlat
sahf
mov
or
popa
es
leave
push
pop
(bad)
lock
xchg
or
add
add
rcr
sbb
mov
lahf
xlat
cmp
lods
sti
in
push
mov
push
cld
fild
mov
xor
imul
jns
call
out
xchg
mov
xor
push
(bad)
fadd
jle
pop
pop
sbb
fiadd
ins
add
fisubr
sub
(bad)
sti
call
clc
retf
xchg
(bad)
xor
test
sbb
fxch
outs
gs
push
loop
mov
ins
fst
mov
xor
lds
jbe
adc
pop
sub
push
and
retf
ins
loope
fisubr
mov
fcom
sbb
inc
loope
push
adc
lods
in
cmp
daa
cmp
mov
pop
or
sbb
xchg
frstor
retf
cli
sahf
push
xchg
int3
mov
and
repnz
icebp
ficom
adc
fwait
in
scas
sahf
dec
sub
jno
popa
mov
sar
jmp
inc
leave
push
(bad)
pop
fcomp
sub
jp
and
arpl
jnp
inc
inc
test
rcl
jns
into
std
jge
iret
call
aam
inc
mov
jno
adc
adc
add
int3
sub
sub
je
sbb
or
sbb
push
lods
nop
lahf
sub
cs
adc
and
pop
xchg
adc
mov
pop
imul
jp
mov
(bad)
cmc
iret
in
retf
loopne
jbe
dec
into
shr
rol
jnp
(bad)
loopne
push
stos
push
pop
rol
sbb
mov
cdq
in
pushf
ja
jnp
dec
pushf
push
stos
repnz
mov
mov
inc
add
retf
mov
(bad)
pop
cmp
sbb
jl
ss
mov
pusha
setbe
lds
push
sbb
popf
ret
dec
or
outs
sahf
inc
jno
mov
xchg
test
sti
add
lahf
or
sbb
add
loopne
mov
cld
jmp
(bad)
fdivp
in
pushf
jae
mov
pop
xchg
inc
sub
pop
sub
add
dec
ja
int3
push
sbb
outs
sbb
push
neg
dec
aam
movhps
clc
xchg
pop
xchg
jae
xor
mov
retf
jg
xor
dec
scas
ror
jp
mov
xlat
and
mov
enter
xchg
cli
push
(bad)
sub
sub
xlat
push
int
pop
pop
xor
test
(bad)
scas
loop
push
fwait
push
sahf
cmp
xchg
xlat
mov
shr
mov
mov
outs
push
test
sbb
sar
das
shl
xchg
pop
lahf
sub
(bad)
push
jo
fsubr
mov
imul
lea
loop
sbb
das
cmp
(bad)
lods
std
pop
mov
mov
cmps
arpl
popf
fbstp
dec
xchg
das
push
sti
jmp
or
mov
adc
mov
call
jmp
adc
out
xchg
rcl
mov
jo
mov
mov
(bad)
loop
inc
(bad)
jne
in
mov
mov
push
xor
xchg
cmp
(bad)
in
inc
sub
in
mov
mov
loopne
add
nop
sti
daa
adc
push
xchg
int3
sbb
ins
push
adc
mov
call
pop
inc
jbe
scas
movs
aaa
daa
inc
mov
sbb
stos
push
daa
int3
aam
jnp
pushf
(bad)
aam
pop
mov
pop
and
fild
and
call
add
cmp
gs
dec
stos
fbstp
mov
std
cmp
xchg
lahf
test
jl
mov
jl
sbb
(bad)
jb
outs
dec
out
hlt
ins
sti
out
push
test
ret
cmp
lods
lock
fcomp
lods
movs
hlt
nop
push
out
aas
shr
inc
xchg
scas
pop
pushf
(bad)
and
hlt
pusha
sti
call
mov
test
cmp
add
sbb
loopne
mov
fcmovnbe
mov
call
mov
retf
adc
sub
xor
mov
clc
add
arpl
sub
(bad)
jb
cmc
es
int
adc
adc
repnz
cmp
cmps
xchg
dec
lds
cmps
aaa
std
mov
test
and
pop
push
jecxz
ja
push
xor
mov
cmps
fsubr
sbb
clc
aam
mov
fcmovnbe
loopne
push
xor
pushf
movs
sub
or
mov
pop
cmp
mov
into
cld
jecxz
push
fisubr
add
call
push
push
fs
sti
jecxz
sbb
call
lods
cld
fdivr
imul
popf
dec
(bad)
cmp
popa
fdiv
mov
(bad)
mov
mov
(bad)
add
pop
into
test
push
fwait
das
pop
daa
xchg
or
ror
mov
jnp
ficomp
pop
pop
cmp
pop
loopne
retf
push
lahf
push
mov
fwait
jmp
shl
sbb
pop
out
mov
jle
das
push
retf
sub
test
out
loopne
retf
sbb
pop
or
fcomp
push
ss
mov
inc
pusha
and
leave
das
add
lods
aaa
test
pop
scas
pop
shl
(bad)
sbb
or
dec
imul
or
push
xchg
mov
retf
aas
call
lods
cld
(bad)
mov
xchg
sub
fwait
adc
dec
xor
mov
ins
call
cmp
repz
jb
sub
retf
jge
cdq
push
mov
lahf
push
ret
pop
imul
fs
mov
xchg
out
and
in
imul
test
ret
mov
aaa
sar
mov
push
jo
or
jns
je
repnz
out
jb
mov
ins
loope
test
repnz
pop
movs
mov
je
test
fs
icebp
pop
in
sti
push
jecxz
mov
arpl
ret
adc
fstp
shl
or
cmp
ins
retf
daa
pop
sbb
(bad)
hlt
ins
inc
ret
cmp
(bad)
jmp
imul
mov
rcl
sbb
ficom
lods
stos
push
aam
loope
out
xor
xchg
das
arpl
dec
stos
scas
pop
mov
pop
cmps
add
jo
adc
add
aas
sbb
push
in
pusha
push
lods
fsubr
fstp
mov
jae
mov
sbb
js
push
je
ret
xor
pop
imul
(bad)
lahf
out
loop
gs
retf
pop
repnz
xchg
push
jle
mov
adc
outs
outs
push
jmp
pop
out
imul
dec
mov
dec
pop
push
les
iret
imul
cli
bound
imul
ja
xor
mov
jo
xor
mov
scas
call
popa
fcom
pop
fmul
dec
or
movs
adc
sub
mov
iret
xchg
push
out
jno
and
add
fs
ins
ins
jg
push
or
cld
cmps
out
test
outs
xchg
in
sbb
jbe
call
jp
addr16
imul
jecxz
cdq
pop
test
pushf
(bad)
mov
fsub
loop
repz
inc
out
ret
pusha
iret
into
shr
cmp
cmp
pxor
sbb
lods
sub
repz
fsub
dec
cwde
fadd
(bad)
cmp
mov
jmp
sub
mov
and
push
sub
pop
fwait
scas
(bad)
adc
imul
pop
pop
xchg
add
lea
int3
(bad)
test
or
or
sbb
pop
data16
(bad)
aaa
pusha
nop
dec
outs
add
sbb
repnz
jbe
dec
pop
aam
sub
adc
enter
rcr
xchg
or
iret
fwait
shr
stos
cmps
dec
lock
ret
sahf
xchg
pop
popf
aas
push
push
call
sbb
inc
shr
retf
(bad)
outs
jbe
(bad)
jl
ret
add
std
add
retf
push
pop
scas
fidivr
sbb
enter
pop
daa
cmps
retf
ins
daa
shr
pusha
lock
sub
inc
das
mov
push
mov
sub
xchg
mov
mov
outs
sbb
nop
fild
cwde
pop
mov
cmp
push
inc
fnstsw
mov
(bad)
cwde
sbb
pop
lock
movs
adc
les
das
sbb
push
xor
pop
mov
pop
mov
fistp
dec
in
pop
and
mov
push
mov
iret
push
sub
sti
inc
jmp
mov
icebp
xor
dec
pusha
xor
rcr
fmul
bswap
cmp
push
les
mov
and
and
add
ret
pop
cdq
sub
xchg
xor
(bad)
and
fstp
ror
ret
and
movs
cmp
pushf
pop
jnp
sbb
rcl
enter
mov
lods
pop
int
and
lea
xchg
pop
mov
lahf
mov
cmp
sar
outs
retf
mov
enter
into
adc
fwait
out
outs
mov
ins
mov
dec
pop
ins
jmp
movs
add
cld
test
cmp
rol
mov
test
aaa
pop
xor
push
cli
imul
call
(bad)
movs
xchg
fist
and
sbb
lods
pop
repz
push
test
mov
push
mov
pop
fcmovbe
es
fnsave
xor
mov
or
fdiv
and
mov
sub
call
mov
dec
test
in
sahf
push
sti
aaa
cdq
jp
sbb
adc
mov
push
rcl
push
je
imul
cmp
and
jp
and
js
and
jle
sar
xchg
cmc
sub
pushf
and
mov
cmp
mov
xlat
arpl
push
xor
lods
mov
mov
imul
mov
mov
or
push
scas
ds
sbb
aas
xchg
addr16
push
pop
jl
jae
stc
pop
pop
sbb
das
sar
repz
iret
pop
or
dec
mov
repnz
sahf
not
popf
sbb
cmp
jnp
ror
(bad)
fistp
hlt
jle
push
or
lds
cmp
arpl
das
fwait
hlt
outs
out
push
hlt
xchg
shr
fidiv
sar
sub
adc
mov
mov
jl
fcom
adc
jbe
and
shl
push
sbb
mov
arpl
mov
fld1
pop
mov
push
or
pop
pusha
std
iret
adc
enter
hlt
scas
jmp
adc
movs
mov
push
out
or
mov
and
sub
icebp
cmc
adc
jmp
jle
sbb
shr
hlt
arpl
inc
mov
jle
mov
sbb
ror
pop
(bad)
inc
jg
lds
movs
mov
rcl
(bad)
cmp
pop
lea
es
push
test
imul
clc
xchg
lods
add
je
(bad)
addr16
retf
aas
dec
xor
pop
lea
(bad)
ss
retf
js
add
push
movs
push
sbb
adc
lods
cs
xchg
inc
inc
out
dec
fxch
push
ror
outs
stos
scas
mov
out
dec
dec
stc
fnstcw
add
xchg
sub
ror
test
adc
fisttp
lahf
jecxz
cdq
mov
push
xchg
fld
fs
lods
test
xchg
dec
popa
pop
daa
mov
pop
pop
xchg
not
jg
ss
or
or
(bad)
mov
mov
inc
and
add
shl
je
cs
scas
cmp
ror
cmp
loopne
dec
rcr
test
shl
inc
dec
mov
fcmove
cmc
push
lahf
mov
mov
jge
mov
sahf
sbb
push
sahf
and
jmp
jmp
aam
mov
shl
lahf
repnz
hlt
xor
jmp
xchg
mov
or
sar
fs
jle
xor
jno
mov
mov
inc
dec
outs
scas
or
es
and
jo
movs
sbb
int
shl
scas
test
fld
xchg
call
hlt
ret
jmp
fiadd
ud1
push
retf
cmc
jecxz
push
cmps
outs
cdq
inc
sbb
cwde
xchg
cli
xor
or
aam
leave
mov
sbb
or
lods
pop
push
xchg
loopne
fimul
test
scas
mov
imul
ds
shr
enter
or
mov
sbb
cmp
lods
push
adc
aas
hlt
push
out
outs
lahf
pop
and
jl
sar
(bad)
out
mov
imul
lahf
dec
xchg
xchg
mov
fwait
push
dec
sahf
push
jge
pop
cmp
cmp
and
retf
std
jle
sub
adc
iret
dec
or
fdivrp
adc
dec
sub
ret
(bad)
jo
inc
mov
xor
mov
mov
mov
sub
inc
dec
in
repnz
mov
mov
or
lahf
outs
loope
les
mov
sbb
pop
or
or
aam
fucomp
and
and
jbe
push
sbb
mov
test
mov
inc
xchg
ret
add
lea
fwait
sbb
or
mov
sub
es
iret
mov
fcom
sub
in
call
(bad)
fistp
xchg
mov
retf
jae
lahf
stos
jo
jns
jp
imul
dec
mov
mov
pop
jg
call
and
xchg
stos
push
mov
retf
cmp
push
call
pop
and
ja
sbb
dec
inc
mov
daa
fnstcw
add
mov
inc
jg
and
bound
or
(bad)
mov
pop
repz
and
imul
pop
xor
test
cld
cmps
pop
inc
push
leave
push
aaa
jnp
mov
retf
in
jle
xchg
retf
movs
dec
jl
lods
pop
push
es
in
or
dec
(bad)
push
cmp
xchg
or
sub
rol
(bad)
popf
call
in
sbb
mov
sub
mov
jge
inc
and
pusha
xchg
inc
mov
jns
cmps
jne
stos
sub
test
outs
cmps
cwde
xor
mov
mov
popf
xlat
(bad)
jge
adc
mov
int3
fwait
sub
fisttp
mov
enter
outs
fld
mov
inc
mov
scas
bound
arpl
fdiv
mov
ds
push
pop
pop
es
or
xchg
mov
mov
and
and
in
int3
iret
fs
test
sbb
jae
pop
fidivr
cmp
popf
push
add
sub
pop
cmp
ins
lahf
gs
jmp
repnz
xor
je
jle
lds
(bad)
cmps
push
ins
retf
pop
sbb
push
add
(bad)
outs
ins
mov
push
(bad)
lahf
push
mov
push
in
call
out
xor
add
xor
(bad)
rol
(bad)
fdivrp
sbb
jbe
fwait
into
sub
in
mov
std
in
shl
les
mov
ficom
adc
fst
jmp
jge
not
and
out
test
mov
pop
adc
retf
stc
out
and
and
mov
adc
popa
cld
jae
aas
mov
std
pop
aas
push
inc
imul
jecxz
inc
adc
addr16
and
mov
dec
mov
mov
in
add
out
in
outs
sbb
or
inc
scas
dec
aam
iret
mov
ins
inc
xchg
dec
mov
inc
int
int
call
sub
aaa
jecxz
inc
mov
ss
and
lea
dec
push
mov
jae
es
int
rol
xchg
fst
sbb
hlt
nop
arpl
mov
and
cmp
pop
jp
ret
sti
out
das
inc
adc
adc
mov
cld
out
push
sbb
and
fmul
mov
cmp
addr16
aaa
pushf
(bad)
push
test
ds
das
in
(bad)
pushf
je
pop
in
mov
and
sub
shl
dec
sub
clc
pop
outs
sub
jge
je
imul
out
jecxz
lods
repz
jmp
mov
xchg
jo
mov
xchg
jb
mov
inc
pusha
std
sbb
push
add
hlt
and
and
pusha
or
mov
fcmovnbe
dec
lea
loopne
mov
sar
mov
adc
ret
mov
adc
scas
mov
mov
xchg
mov
mov
mov
es
or
pop
and
inc
ret
es
cli
outs
daa
or
adc
xchg
popa
pushf
dec
jle
pushf
out
sub
es
cmp
push
or
loop
sub
test
mov
fdiv
cli
icebp
cs
xor
rcr
cmp
stos
aas
and
(bad)
in
push
aam
mov
(bad)
shl
and
mov
mov
push
in
pop
push
test
test
and
push
rcl
push
out
xchg
cld
sbb
mov
aas
call
retf
adc
jp
mov
ret
mov
xlat
xchg
or
lea
jg
jo
or
adc
aad
imul
retf
inc
ja
sahf
sti
movs
stc
push
xor
fst
cmp
mov
cdq
scas
aam
mov
inc
fwait
jmp
into
call
int
or
loopne
ins
xchg
scas
inc
fnstenv
int3
sbb
mov
xchg
or
xchg
add
data16
mov
lods
or
push
in
inc
mov
ins
adc
out
add
mov
sub
push
aam
sbb
bound
pop
nop
arpl
out
(bad)
cmp
addr16
retf
(bad)
imul
cmp
sub
cwde
jecxz
pop
sbb
fldcw
pop
mov
(bad)
xchg
mov
lahf
adc
test
outs
inc
clc
jbe
adc
je
and
lahf
in
scas
pop
aaa
push
push
mov
add
push
add
cmp
jp
pop
popa
ins
dec
mov
mov
js
das
mov
mov
ds
xchg
in
inc
lahf
jge
inc
into
push
inc
mov
sbb
inc
(bad)
bound
call
push
sbb
dec
sub
mov
test
ffree
outs
adc
enter
loope
pop
mov
push
out
dec
pop
scas
adc
jge
mov
dec
xor
and
into
mov
push
rol
pop
lea
pop
call
xchg
push
pop
jno
adc
enter
jbe
pop
jp
push
in
fst
les
clc
push
fst
jmp
cs
pop
xlat
push
jne
lods
mov
popf
nop
sbb
xchg
dec
jmp
sbb
scas
jne
add
arpl
pop
xchg
in
ret
iret
rcr
and
and
rcr
out
mov
outs
stos
add
cld
dec
hlt
aad
or
dec
dec
or
adc
imul
sbb
mov
aam
neg
in
in
mov
aad
mov
pop
js
sahf
out
lahf
int
leave
and
and
leave
mov
outs
cmp
fisttp
sbb
push
and
sbb
mov
outs
fwait
jp
cmp
cmc
sub
add
jns
jns
dec
mov
ret
push
js
cwde
sub
arpl
cmp
jnp
mov
pop
or
shr
mov
mov
stos
lods
or
shl
retf
cmc
sub
xchg
retf
(bad)
jp
test
pop
lahf
icebp
mov
mov
movs
int3
mov
daa
xor
mov
test
lahf
popf
cld
arpl
sbb
push
jge
repz
fsub
jle
enter
push
repz
jmp
imul
test
pop
or
and
mov
xchg
mov
cli
sbb
outs
sbb
mov
mov
sub
mov
xlat
scas
pop
(bad)
mov
clc
pusha
(bad)
cld
adc
adc
jno
xor
sbb
fild
aad
das
xchg
adc
xchg
xchg
sub
stos
fisubr
pop
sub
mov
sbb
idiv
hlt
inc
fadd
fwait
aad
mov
mov
fnsave
xchg
or
stos
aam
adc
or
ret
not
pop
inc
and
ins
dec
das
(bad)
jns
stos
pushf
imul
(bad)
and
ss
out
gs
cwde
pop
mov
adc
xchg
stos
mov
push
test
pop
cmp
fnsave
jl
ss
dec
retf
pop
push
into
das
in
fwait
stos
rcr
cld
xchg
pop
push
push
push
leave
lods
fidivr
or
idiv
je
outs
mov
mov
pushf
inc
or
call
xor
push
rol
sbb
(bad)
div
es
pop
test
dec
push
add
setg
clc
shl
jmp
pop
inc
add
aam
xlat
sti
leave
movs
push
daa
sub
push
add
and
inc
dec
test
fmul
lods
in
outs
test
xchg
shl
push
cmp
mov
icebp
xchg
popa
aad
or
jae
fistp
dec
add
mov
add
pop
and
popf
dec
mov
scas
shr
sbb
add
stos
pushf
pop
(bad)
pop
inc
bound
push
clc
mov
in
xchg
mov
jp
outs
xor
jb
jo
cmc
jg
aam
lahf
mov
and
mul
jne
arpl
sbb
inc
adc
ins
or
fnstenv
retf
lds
(bad)
lods
fcomp
test
in
mov
test
fsubr
add
mov
xlat
xor
cs
js
packuswb
je
xchg
lahf
mov
das
jmp
inc
cld
sbb
cmp
xchg
sbb
jbe
mov
xor
out
test
jno
push
dec
ret
es
or
pusha
call
sub
adc
add
inc
xchg
jle
je
pop
inc
jbe
or
mov
and
inc
jl
outs
jne
stos
xor
les
shl
sub
jne
cdq
enter
pop
out
lds
pop
inc
cmp
rol
push
mov
lods
fstp
movs
(bad)
jmp
mov
or
iret
mov
adc
inc
(bad)
inc
add
inc
pop
jmp
in
addr16
sbb
cmp
push
inc
cli
pop
push
int3
pusha
dec
retf
fld
shl
lea
repz
repnz
push
out
pushf
call
or
dec
lods
enter
add
xor
jg
sub
adc
and
mov
pop
mov
pop
adc
(bad)
sub
inc
cli
push
pop
popf
pop
sub
dec
mov
mul
pop
ins
cwde
push
sbb
jbe
imul
loop
bound
jns
retf
cmp
pop
dec
xchg
sub
aad
push
xchg
adc
add
fwait
rcr
adc
jl
add
sbb
xchg
rcr
jb
sbb
fiadd
cld
jmp
push
(bad)
fisub
dec
and
cmp
je
adc
pushf
sbb
sti
xchg
icebp
ss
fdivrp
(bad)
xchg
lds
fs
xor
aam
mov
sub
call
sbb
pop
jecxz
and
add
in
fnstcw
scas
movs
scas
mov
mov
(bad)
pop
in
inc
out
jae
mov
sbb
or
mov
cdq
mov
jbe
push
imul
dec
std
mov
mov
xor
mov
dec
xor
or
mov
push
adc
pop
imul
sti
stos
pop
rol
mov
or
push
lahf
dec
ret
sti
(bad)
iret
and
call
push
ins
out
stos
outs
inc
daa
hlt
(bad)
ins
ja
jg
cmp
jp
lds
mov
aas
call
push
movs
repnz
out
xor
fcmovbe
test
push
dec
test
and
push
lods
push
jae
sub
lea
shr
jae
mov
std
mov
stos
gs
mov
out
imul
rcl
call
cmps
jne
pop
add
test
clc
mov
ror
bnd
outs
icebp
adc
adc
leave
fbld
outs
or
mov
fwait
call
sbb
cmp
push
pop
mov
in
iret
int3
ret
sbb
cld
sub
ja
push
cli
add
mov
xchg
mul
mov
push
je
sahf
fwait
add
or
loop
retf
pop
push
adc
jge
int
sbb
retf
mov
mov
cld
pop
xchg
aam
mov
dec
cmp
rcr
jne
test
pop
mov
xchg
cmp
ins
leave
fiadd
jmp
loopne
retf
add
es
out
popa
in
mov
hlt
(bad)
jmp
mov
sbb
in
push
and
push
outs
ret
cdq
or
mov
(bad)
imul
outs
push
mov
scas
mov
fstp
out
gs
push
nop
aaa
scas
pushf
das
dec
mov
clc
jo
out
ret
and
or
lods
loop
ins
(bad)
push
shr
push
push
aas
jmp
js
mov
shl
add
jns
(bad)
out
ret
rcl
push
(bad)
jae
repnz
(bad)
push
mov
and
push
fcomp
inc
adc
mov
int
arpl
stc
pop
out
ds
jb
bound
pop
adc
cmps
jp
lahf
das
cmp
adc
or
loop
ins
adc
jno
jo
dec
jmp
mov
in
ret
sbb
pop
(bad)
arpl
cmp
sbb
rep
mov
cmp
mov
add
fimul
sub
ja
sar
scas
inc
and
je
xor
int3
aad
jge
retf
cmc
mov
sbb
shl
(bad)
jo
sbb
xor
add
adc
dec
pop
jmp
dec
jns
in
(bad)
fisttp
push
add
push
jae
jmp
scas
xchg
pop
fimul
jmp
jp
sbb
fnstcw
repz
xchg
stos
test
xor
xor
jle
sbb
inc
fimul
add
mov
cwde
cld
pop
fucomp
ja
fdivr
push
sub
(bad)
inc
cwde
pop
out
jbe
sub
clc
cld
imul
jle
(bad)
push
sub
add
sbb
push
lods
mov
jnp
xor
sub
sub
fsub
inc
cmp
sahf
js
jns
test
das
inc
add
dec
pxor
lahf
ds
sub
pop
fmul
push
movs
inc
scas
das
lods
leave
xchg
push
push
and
stos
mov
and
ja
xchg
ds
pop
dec
jl
loope
add
adc
dec
adc
lock
and
push
cmp
and
sub
push
(bad)
int
push
ins
jge
cmp
or
fisub
xchg
push
pop
add
es
sbb
in
in
jbe
bswap
jbe
inc
pusha
add
dec
push
pop
mov
loopne
mov
nop
jge
dec
xchg
adc
imul
xchg
mov
mov
ja
pop
mov
in
fldcw
ds
out
xor
dec
popa
mov
or
xchg
outs
inc
test
scas
ja
ja
pop
popa
out
ds
arpl
adc
cld
mov
mov
xchg
dec
imul
mov
addr16
and
sbb
push
push
pop
(bad)
push
aas
cld
pop
sbb
push
sbb
push
fcomp
adc
loop
mov
mov
or
dec
xchg
jno
xchg
mov
mov
push
es
xchg
call
sbb
add
push
jb
das
cmp
inc
pusha
das
mov
adc
shl
xor
xor
jg
add
add
icebp
and
mov
cmp
scas
push
daa
dec
in
add
jle
aas
xacquire
xor
test
pop
pop
out
jne
aas
loop
fmul
sub
sub
iret
test
adc
jmp
push
(bad)
or
xchg
fcom
lods
cld
cmp
mov
xchg
test
jmp
cmp
jno
mov
(bad)
(bad)
enter
outs
push
xor
xchg
(bad)
call
imul
inc
test
cmps
repz
or
and
sti
imul
(bad)
std
into
jg
adc
mov
aam
pop
inc
mov
sub
dec
jl
sbb
mov
cld
mov
mov
fbld
rol
(bad)
jecxz
jg
ins
cmp
imul
hlt
or
inc
mov
in
fsub
cld
mov
add
inc
mov
sub
stc
cmp
jb
stc
aam
gs
cmps
jmp
lea
test
xor
loopne
mov
pop
xchg
mov
(bad)
retf
xchg
sbb
rcr
sub
mov
xchg
and
mov
in
mov
cwde
jecxz
cmp
dec
cdq
gs
mov
mov
dec
cmc
mov
cwde
fisttp
jns
das
cs
jmp
in
sub
clc
ja
jnp
sub
scas
leave
ffree
in
xchg
ret
js
xor
mov
pop
and
ja
in
ds
pop
mov
loope
cli
inc
or
enter
dec
(bad)
cmp
lock
ror
mov
and
cmp
add
outs
and
popf
xchg
xchg
jno
aam
cs
jb
lock
xchg
sti
in
stos
outs
mov
fdivr
xchg
hlt
and
pop
jecxz
shr
dec
jg
jl
pop
dec
aaa
aas
adc
dec
sub
repnz
xchg
xchg
mov
rcr
mov
loopne
cmps
add
and
jp
lods
pop
sub
and
jae
test
or
xchg
push
xchg
int
nop
imul
int
lock
jbe
push
push
cmp
push
add
adc
in
xor
mov
add
push
dec
shl
inc
jg
dec
adc
bound
shl
lea
cmp
push
mov
imul
xchg
gs
sub
mov
in
movs
lods
cmp
jp
push
dec
pop
pop
inc
mov
mov
pop
shr
xor
sub
sbb
adc
xor
sti
sub
ins
pop
shl
mov
or
inc
push
ins
push
adc
les
sub
inc
pop
mov
arpl
push
in
ds
mov
xchg
xlat
and
pop
fld
mov
sbb
out
jae
dec
mov
not
jge
jecxz
jbe
call
int3
adc
out
mov
nop
adc
aad
les
mov
or
fnstcw
ficomp
cmc
jge
xchg
push
and
mov
into
imul
test
sub
in
cld
in
push
call
jns
mov
(bad)
in
pop
rcl
pushf
mov
(bad)
xor
(bad)
xor
dec
mov
push
dec
mov
sbb
shr
mov
xchg
movs
pop
jmp
and
js
and
outs
aaa
push
inc
jl
xor
mov
imul
in
sar
das
(bad)
retf
call
addr16
int3
sub
in
test
shr
call
push
bound
(bad)
pop
pop
push
test
cmc
sub
call
pop
pop
mov
mov
test
in
sbb
es
(bad)
mov
xor
dec
sub
jle
ret
das
sbb
(bad)
dec
in
ficom
loop
push
push
xchg
xchg
mov
add
cmp
dec
cmc
call
loop
cmp
sbb
imul
inc
es
in
pop
ins
mov
sub
jbe
repnz
aam
mov
jp
call
sbb
bound
mov
adc
int
cs
icebp
adc
gs
xchg
and
aas
adc
sahf
dec
jl
lods
retf
loopne
push
stos
cwde
xchg
xchg
mov
xchg
cmp
arpl
scas
or
sub
jp
mov
push
lahf
jg
ror
aad
xchg
sbb
adc
add
jl
pop
adc
inc
aaa
adc
jg
test
adc
aad
out
mov
xchg
push
xor
sub
xor
jbe
mov
ss
sub
mov
jmp
call
aam
inc
xor
or
imul
pusha
jo
fs
jl
mov
inc
lea
lahf
mov
cmps
sar
stc
jb
dec
leave
jecxz
cmp
rcl
(bad)
or
xadd
addr16
pop
and
push
xchg
(bad)
cmp
cmp
push
mov
ins
cdq
dec
retf
imul
push
push
int3
cmc
jns
cmp
repz
mov
cmps
xor
std
jno
push
fmul
pop
mov
call
loop
push
outs
sub
sahf
sbb
pop
xchg
or
je
push
scas
scas
in
stc
dec
(bad)
movups
mov
je
imul
fcmovnb
push
jmp
lds
push
in
sbb
fadd
sbb
jmp
jp
add
scas
inc
imul
ds
ss
push
retf
mov
fdiv
fs
or
outs
stos
pcmpeqb
dec
jne
cmp
dec
shr
add
iret
(bad)
movs
sub
pop
popf
ins
int3
pop
ret
scas
pop
aad
je
in
loope
xchg
es
mov
in
adc
(bad)
pop
paddw
cmp
or
sub
sub
in
cmc
in
adc
push
xchg
out
adc
arpl
mov
aam
dec
add
in
(bad)
mov
(bad)
(bad)
lahf
adc
dec
cld
pusha
cs
cmc
ror
cmp
mov
aas
not
test
iret
inc
pop
fwait
in
imul
mov
lea
mov
and
and
int
clc
es
lods
fstp
mov
sbb
xchg
test
ror
sbb
jne
jno
dec
and
jb
arpl
ret
push
lds
xlat
ins
sbb
cmp
out
aam
mov
push
inc
mov
(bad)
lods
(bad)
sub
cli
and
cmp
scas
in
int3
push
in
jg
ins
xor
fcomp
stos
sahf
mov
push
cmp
sub
jno
test
and
fcmovu
mov
xchg
push
xchg
popfw
pop
and
lods
aam
adc
push
push
div
jnp
ret
aaa
dec
outs
jecxz
xchg
in
xor
neg
adc
push
aas
adc
daa
xor
pushf
dec
bound
mov
mov
data16
pop
or
es
jo
arpl
mov
scas
inc
out
cmp
jp
outs
xchg
(bad)
mov
sbb
mov
inc
cs
mov
enter
pushf
scas
hlt
frstor
rol
and
inc
out
push
sbb
inc
cmps
out
cmp
inc
sbb
mov
push
adc
ret
cmp
push
enter
je
push
retf
fstp
xlat
xchg
xchg
aas
fst
cwde
cdq
scas
lea
out
fcomp
pop
imul
mov
adc
nop
cmc
retf
add
ins
ja
cld
adc
loopne
xchg
jge
adc
and
push
ror
fadd
iret
fs
aam
xchg
xor
jne
pop
push
loope
sub
or
push
mov
mov
mov
mov
jbe
pop
xor
push
sub
jmp
call
in
xchg
ss
push
push
loopne
mov
mov
movs
jg
mov
push
push
adc
test
mov
mov
jmp
sub
xchg
lds
in
push
(bad)
mov
lods
fidivr
mov
lahf
std
push
fcom
out
cmp
(bad)
mov
nop
(bad)
lods
push
int
scas
mov
sbb
add
jno
or
cmp
jo
lea
repnz
pop
scas
dec
das
push
fisttp
in
mov
sub
mov
cmp
ins
sti
dec
int3
push
in
sti
sbb
pusha
add
adc
adc
push
jno
pop
shr
xor
dec
lahf
mov
dec
xchg
cs
push
xlat
es
jg
pop
xchg
lods
xchg
daa
jae
push
fisttp
hlt
sbb
jae
aad
dec
mov
xor
nop
movs
(bad)
jno
test
fcomp
test
mov
mov
(bad)
mov
sbb
mov
repz
out
jle
pop
pop
(bad)
jmp
xchg
sbb
nop
mov
fidivr
add
(bad)
mov
and
sbb
sbb
adc
cwde
enter
syscall
push
cmp
(bad)
pop
cmps
fcom
mov
(bad)
mov
loopne
imul
add
xchg
bound
push
fwait
or
jmp
inc
dec
jb
in
fcmovnb
sti
push
xchg
xchg
fdivr
cmp
mov
mov
adc
outs
lock
shl
sbb
ror
sub
call
pop
add
mov
lea
add
jl
mov
shl
push
inc
ins
dec
sbb
mov
pop
gs
pop
ja
xor
stos
mov
fldenv
fiadd
xchg
xchg
or
inc
int3
push
shr
jmp
inc
push
mov
mov
mov
enter
mov
in
into
scas
push
fwait
jo
adc
jge
dec
xor
stos
push
mov
fwait
sbb
xor
ins
bnd
fistp
push
in
pushf
mov
or
inc
cmp
mov
movs
cs
xchg
shr
mov
hlt
pop
dec
and
jmp
dec
ja
xor
xchg
nop
jmp
jne
jmp
aas
mov
push
xor
test
loop
push
bound
and
std
mov
lods
jle
inc
xchg
cmps
test
mov
ins
dec
pop
outs
and
and
add
dec
mov
cli
inc
js
cdq
lods
gs
pop
jl
enter
push
mov
mov
dec
icebp
imul
ja
es
inc
jmp
sub
loope
and
sahf
cld
cmps
dec
ins
ror
inc
shl
bound
stc
sbb
jbe
jp
inc
add
and
pop
mov
daa
arpl
lods
push
or
mov
xor
sub
inc
push
mov
and
push
nop
cs
stc
addr16
inc
in
jge
xchg
xchg
(bad)
nop
and
test
pop
cwde
dec
cwde
ds
popf
sbb
sub
pusha
fild
jmp
xchg
into
daa
lods
addr16
fsub
xchg
add
mov
pop
imul
pop
data16
or
stos
out
adc
xchg
inc
jnp
adc
and
xchg
jae
mov
aam
pop
pop
sub
fimul
xor
mov
and
repnz
lahf
js
int
cwde
xor
popf
sbb
sbb
fistp
fisubr
(bad)
fsubr
jo
inc
out
ins
hlt
jae
push
call
pop
bound
sub
push
dec
ja
adc
bound
popa
mov
pop
jo
dec
cs
dec
dec
inc
lds
pop
jno
cmp
pop
xchg
mov
mul
jno
std
cmp
dec
fs
jmp
xchg
push
lods
call
jmp
int
ja
test
pop
(bad)
bound
inc
mov
xor
push
imul
cld
lock
cdq
shr
in
retf
mov
popf
retf
xor
lahf
lock
pop
and
(bad)
push
xchg
and
jge
pop
jns
sub
xchg
sbb
popf
cmps
push
cs
xchg
test
sar
js
fmul
pushf
dec
sbb
pop
xor
xchg
mov
cdq
fwait
leave
mov
or
push
pop
xchg
mov
out
xchg
xchg
dec
adc
popf
(bad)
mov
movs
loop
xchg
inc
repz
jge
mov
xchg
jge
xchg
xchg
pop
sti
into
mov
sbb
cwde
cmp
fnstenv
jmp
xchg
popa
(bad)
fld
add
sbb
adc
bound
jbe
or
cmp
xchg
das
test
out
mov
jno
pop
shl
scas
mov
pop
enter
lea
setbe
dec
sbb
xchg
inc
jno
lahf
cmp
xchg
mov
lea
(bad)
retf
ds
movs
daa
sub
(bad)
lds
dec
out
push
ret
cmp
mov
gs
call
into
lock
movs
cmps
xchg
adc
loop
and
and
jl
sub
pushf
dec
add
test
aam
int3
icebp
push
ficom
lock
loopne
ss
shl
hlt
out
jg
dec
mov
out
outs
outs
jle
mov
mov
xor
push
lods
outs
and
inc
sti
jmp
(bad)
stos
leave
in
(bad)
mov
pop
jbe
aam
dec
inc
aaa
pop
cs
aaa
inc
daa
sub
inc
pop
jne
mov
fcomip
out
scas
mov
xchg
gs
pop
popf
out
mov
pop
xor
lods
sub
popa
dec
lods
mov
jmp
inc
jl
cmps
out
push
dec
(bad)
imul
or
add
sub
and
push
arpl
jne
sbb
in
mov
push
inc
xchg
fwait
shr
push
ja
add
sbb
adc
out
movs
sub
std
jmp
paddq
fdiv
loop
in
push
fwait
stos
jge
fild
adc
lods
sbb
adc
mov
adc
mov
adc
repnz
pusha
or
cwde
les
push
mov
xor
mov
mov
aad
call
cmps
push
ins
sub
sahf
push
stos
pop
add
inc
lods
pause
cmps
sub
jo
aam
ins
inc
push
xlat
(bad)
lods
fstp
std
imul
(bad)
mov
pusha
push
cld
jmp
and
rcl
add
jl
xchg
adc
and
cmp
mov
sub
mov
(bad)
mov
mov
pop
test
test
or
loop
mov
lods
hlt
fisttp
cmp
jo
mov
scas
popa
retf
push
mov
call
nop
dec
ror
(bad)
mov
add
mov
rcr
mov
jae
add
lahf
(bad)
int3
cs
push
xor
adc
jmp
stc
pop
mov
mov
push
lods
mov
jns
jmp
jb
jo
pop
lods
in
clc
cmp
pop
or
mov
shl
push
mov
xor
inc
pusha
mov
sbb
push
xor
leave
sar
in
cmc
jge
movs
xor
pop
les
fsub
in
pop
push
push
sub
mov
lods
cmp
add
call
test
pusha
inc
stos
cld
push
add
pop
neg
sub
cli
push
data16
push
sbb
ja
dec
xchg
add
mov
out
adc
push
inc
arpl
sbb
shr
or
cmc
bound
dec
out
and
mov
or
pop
aad
dec
stos
push
inc
inc
aad
mov
add
jne
test
inc
jb
and
push
cmps
ja
mov
or
fdiv
xor
je
cmps
movs
jno
xchg
adc
ficomp
cmp
xlat
rol
add
sub
dec
(bad)
jne
fmul
out
stc
push
cmps
ins
mov
repz
fcom
repnz
pop
in
sbb
push
pop
or
cli
mov
das
jmp
mov
xchg
cmp
mov
adc
aad
inc
cmp
sbb
lea
out
call
sbb
adc
fs
movs
inc
mov
mov
mov
cmp
outs
retf
icebp
rcr
xchg
fwait
xchg
int3
jo
retf
cli
cdq
pop
imul
pop
rcr
das
in
adc
enter
pop
sbb
push
lock
push
push
jno
sub
cmp
rcr
sbb
popa
jns
mov
fstp
lods
ret
pop
jl
out
xchg
xchg
adc
inc
nop
jae
stos
outs
out
mov
and
cs
adc
iret
cld
inc
aad
popf
bound
mov
xor
jp
adc
fbld
add
ret
pop
arpl
push
jecxz
rol
mov
mov
xchg
push
push
push
mov
ficomp
jl
(bad)
adc
inc
push
mov
adc
cli
js
nop
adc
retf
adc
inc
xor
test
(bad)
inc
sub
jbe
cli
es
and
shr
fld
pop
mov
jns
dec
retf
jmp
or
pushf
popf
pop
ds
or
cmp
movs
cdq
lods
out
gs
mov
and
arpl
add
out
pop
jecxz
retf
into
xchg
xchg
cmp
push
push
cmps
and
pop
pop
inc
test
dec
push
out
int3
out
cmp
xchg
into
jb
jge
pop
dec
fidivr
aad
cli
hlt
outs
cmc
sbb
bound
cs
daa
push
or
or
lahf
xchg
sub
sub
fwait
scas
das
retf
into
hlt
add
and
int
fiadd
cvtpi2ps
mov
ins
adc
pop
fiadd
jg
pushf
jmp
pcmpgtb
jle
fild
xor
scas
push
jmp
(bad)
test
bound
out
or
outs
dec
pusha
(bad)
lock
sbb
jbe
cs
add
sbb
cmp
cmp
pop
xchg
lds
adc
loopne
mov
stos
cs
or
test
rol
mov
add
dec
sbb
neg
call
and
out
cs
repz
adc
adc
(bad)
push
and
or
xchg
fsubr
mov
xchg
dec
outs
and
mov
adc
inc
lods
movs
nop
and
jmp
rol
mov
out
pushf
inc
xchg
into
mov
sahf
icebp
jge
dec
jg
jmp
pop
dec
nop
aad
mov
inc
loop
pop
jae
add
jg
mov
add
outs
aad
out
xlat
cld
inc
mov
xchg
movs
dec
jnp
seta
aam
cs
ret
shl
mov
ins
pop
js
test
rcl
loopne
xchg
cmp
imul
pop
mov
dec
lds
mov
jne
fcom
push
(bad)
mov
outs
out
adc
xor
fs
mov
js
or
cmp
xchg
das
aad
arpl
push
push
fidiv
inc
outs
je
mov
call
test
scas
pop
addr16
and
out
inc
and
call
jo
(bad)
push
push
xor
mov
imul
push
xor
imul
xchg
das
push
and
push
sbb
sbb
test
mov
scas
or
dec
loopne
mov
hlt
fist
mov
(bad)
je
loop
(bad)
aad
jecxz
pop
xchg
into
pop
cdq
cmp
stos
fcmove
call
lds
aad
xchg
mov
xchg
test
jecxz
sbb
dec
adc
nop
mov
mov
push
xor
ds
mov
imul
push
sbb
jmp
jo
in
mov
clc
sbb
jl
or
pop
mov
gs
ret
clc
mov
jecxz
inc
push
(bad)
dec
mov
lods
lds
xchg
neg
mov
retf
ret
adc
sbb
pop
dec
and
or
idiv
test
or
mov
xor
jns
cli
scas
rcr
inc
pop
(bad)
(bad)
pop
xor
inc
xor
rol
int
(bad)
mov
sbb
cmp
fsub
inc
pop
mov
mov
nop
push
ins
dec
enter
sub
repnz
cmp
cld
xor
adc
pop
cmc
add
xor
dec
or
sbb
xchg
push
(bad)
dec
out
pop
repz
jmp
xor
jmp
mov
sub
retf
mov
xchg
sub
mov
and
pop
in
lahf
xchg
mov
xor
jbe
in
mov
loope
out
or
add
sbb
adc
out
add
fs
repz
mov
jecxz
adc
ror
sti
pop
lahf
cmp
push
(bad)
int3
mov
dec
pop
sti
imul
bound
sti
aaa
and
xchg
fsubrp
ins
jns
test
lds
pop
jle
and
jecxz
jbe
xlat
mov
das
mov
mov
mov
add
sub
jecxz
dec
repnz
repnz
mov
mov
inc
ss
mov
fs
pop
not
(bad)
sti
cmp
not
sbb
gs
mov
push
add
rcl
inc
mov
test
push
sti
dec
dec
mov
jo
test
ins
or
sbb
and
mov
cmp
fbld
inc
cld
push
ret
shr
cmps
jl
and
sbb
mov
lock
add
adc
fwait
jns
nop
inc
push
stos
sub
xlat
mov
pushf
test
mov
sub
stc
jmp
push
into
pop
pop
call
inc
fnstsw
lahf
dec
lea
cmc
and
push
je
call
cmp
xchg
mov
dec
fadd
or
aad
xor
push
mov
cwde
retf
adc
js
stc
cmp
push
adc
fld
jo
pop
(bad)
dec
mov
xor
pop
cmp
ins
div
xchg
cmps
test
ins
retf
mov
jns
(bad)
cmp
sub
lea
gs
test
mov
sub
push
xor
arpl
aam
cld
and
popf
ins
retf
cdq
mov
mov
int3
push
or
dec
mov
lock
cmp
inc
push
add
aas
fmul
imul
scas
mov
fcmovu
ja
cmp
sbb
imul
or
jp
movs
push
jmp
cmp
sbb
xchg
xor
xchg
in
popf
xchg
(bad)
adc
stos
dec
arpl
push
aam
adc
imul
dec
cdq
in
push
das
cli
sbb
push
cwde
or
test
ror
mov
inc
fwait
pop
enter
imul
pop
inc
pop
mov
jmp
loop
loopne
xlat
addr16
into
mov
pusha
jmp
jmp
adc
repnz
pop
sti
out
retf
mov
jl
ret
popf
cld
repnz
pushf
mov
push
ja
pop
icebp
fist
pop
mov
idiv
repnz
sbb
xchg
in
pop
xor
ror
add
lahf
js
mov
rcr
cmp
pop
loope
dec
cmp
inc
outs
pop
mov
mov
cld
call
dec
push
ins
pop
cmp
fcmovu
shl
or
imul
sbb
movs
mov
scas
fild
jmp
and
pop
push
cmp
adc
cld
push
out
data16
inc
out
push
xchg
jb
ret
ret
xchg
sar
outs
push
xchg
repz
sti
fist
loopne
or
add
push
dec
pop
fcom
pushf
ret
aas
and
cdq
fcomip
ds
and
mov
and
arpl
jg
aas
in
addr16
int3
inc
adc
inc
xor
pop
ins
jl
pushf
mov
or
lods
or
popa
cmps
pop
sbb
cmp
adc
imul
lods
call
fsubr
push
ficomp
fldlg2
or
cmp
aad
rol
out
scas
pop
popf
dec
inc
les
aam
and
imul
iret
inc
lock
sub
and
pop
xchg
je
jmp
sbb
jns
inc
jnp
cs
scas
ficom
xchg
(bad)
mov
cmp
imul
mov
xchg
mov
lods
retf
add
pop
xchg
dec
add
ins
icebp
pop
sub
sbb
push
mov
es
push
movs
or
push
sbb
jmp
shl
push
push
jno
push
pop
mov
mov
(bad)
cmc
jno
iret
mov
arpl
les
or
test
pop
push
pop
lock
test
and
pop
jbe
and
mov
push
xchg
or
shr
loope
pop
push
jbe
fcom
gs
inc
xchg
mov
mov
xor
add
popa
rcl
stos
aaa
xor
sbb
mov
jae
mul
jl
addr16
cld
mov
mov
push
push
bound
(bad)
add
jbe
dec
cmc
jmp
jnp
into
lahf
mov
sbb
inc
mov
push
ret
cwde
mov
test
mov
sub
enter
adc
ins
imul
mov
mov
out
xor
ja
shl
push
jo
sahf
inc
daa
sahf
push
rol
mov
scas
sbb
push
(bad)
(bad)
repnz
hlt
push
and
inc
je
sbb
in
jae
and
in
rcl
imul
mov
dec
mov
cmp
fcomp
test
in
(bad)
and
das
xlat
mov
retf
scas
jno
push
aad
pop
(bad)
mov
iret
stos
inc
js
add
imul
xchg
push
mov
mov
cmps
mov
mov
add
and
movs
add
stos
clc
dec
mov
push
jno
inc
adc
push
jbe
mov
sti
push
push
icebp
xor
pop
std
adc
lods
adc
out
in
xor
xchg
dec
jp
(bad)
adc
sub
mov
pushf
aad
and
xor
in
fcomp
je
jno
iret
test
jecxz
pop
inc
pop
pop
sub
mov
pcmpgtb
fbld
in
cmp
movs
mov
pop
jbe
adc
rcl
dec
sbb
into
pop
call
enter
cmp
xlat
pop
in
aaa
fstp
cwde
std
xchg
and
inc
cld
dec
js
cmps
(bad)
jl
push
xlat
(bad)
nop
or
outs
inc
daa
push
add
ja
cmp
mov
mov
jle
mov
mov
add
pop
(bad)
pop
into
outs
cmp
fld
je
jg
push
loopne
ret
nop
sbb
std
cmp
jbe
jl
daa
(bad)
sub
push
adc
imul
dec
push
dec
jg
fwait
test
fld
bound
loop
dec
add
dec
repnz
or
jge
int3
push
idiv
xchg
scas
jne
fist
push
popf
sub
aas
and
cmp
out
add
mov
mov
outs
vphaddudq
cs
jecxz
cmp
push
xchg
adc
pop
imul
sub
fld
jmp
out
push
mov
xchg
das
daa
jmp
into
div
lock
dec
aam
mov
movs
mov
cld
mov
stos
xor
sbb
cld
xor
mov
movs
sub
mov
aam
cmps
js
or
iret
pushf
data16
imul
mov
sbb
xchg
cmp
iret
lea
mov
out
ror
cmp
xor
mov
mov
pop
push
mov
push
xchg
(bad)
repz
es
jge
mov
push
push
nop
(bad)
call
pop
ins
xor
push
jecxz
(bad)
ins
jecxz
test
sub
cmps
dec
pop
push
(bad)
fucomip
sub
mov
pop
pushf
in
xor
cmp
scas
clc
test
push
repnz
retf
ins
mov
loope
shl
inc
imul
push
jae
mov
pop
pop
add
rol
(bad)
enter
aaa
push
cmps
or
ret
or
adc
push
leave
mov
cli
fmulp
mov
push
je
mov
mov
sub
in
jmp
ja
iret
pop
jp
(bad)
mov
mov
in
and
retf
fcomp
push
sahf
mov
(bad)
mov
repnz
add
test
out
xor
inc
cmp
mov
rol
mov
pop
ror
mov
loop
push
push
jle
cmp
stos
mov
in
pop
out
xor
cmps
mov
mov
call
and
sbb
push
retf
hlt
retf
rol
mov
add
movs
sub
jmp
sbb
into
imul
dec
add
xlat
cmp
adc
fistp
adc
loope
out
movq
mov
mov
mov
pushw
push
jb
xor
movs
pop
inc
(bad)
cdq
sub
pop
rol
sti
sub
rcr
jmp
int3
cmp
je
sbb
int3
in
cs
mov
stos
sbb
pop
ins
outs
add
dec
and
xlat
inc
fs
push
test
test
(bad)
pop
mov
push
jp
outs
and
and
popf
sub
xor
xor
sub
or
add
test
mov
popf
mov
hlt
cs
test
repz
lock
sbb
dec
fs
sbb
or
jmp
dec
test
(bad)
mov
das
outs
cmovs
push
pop
or
(bad)
mul
int3
xchg
cmp
sub
inc
aad
repnz
fucom
test
call
lods
jns
sahf
fidiv
xchg
and
xchg
iret
in
mov
cmp
icebp
cmp
mov
sub
push
or
sub
dec
push
add
push
push
(bad)
jne
dec
aam
add
stos
xor
ss
loope
or
adc
jns
pop
dec
(bad)
les
add
int
mov
pop
xchg
ins
icebp
pop
repnz
popf
pop
cld
(bad)
fiadd
cmps
in
adc
cld
pop
pop
sub
mov
cmp
push
je
ficomp
inc
and
fist
retf
push
xor
loop
adc
jbe
movs
adc
ins
jne
or
icebp
and
sub
ret
mov
ss
jae
mov
push
retf
aas
iret
arpl
repnz
mov
repnz
sub
add
mov
ret
inc
ss
and
fidiv
mov
cmps
mov
add
movs
adc
(bad)
push
test
enter
daa
cdq
push
cmp
rol
jne
jmp
retf
mov
out
add
sub
jle
movs
adc
inc
sar
push
enter
jns
add
movs
inc
add
push
test
and
push
sub
rcr
leave
mov
push
xor
mov
movs
sbb
in
sub
mov
inc
int
in
imul
cs
fsub
cmp
bnd
je
aaa
scas
or
popf
aas
or
es
or
pop
rcr
outs
cmp
mov
adc
in
(bad)
loop
movs
dec
inc
xor
push
mov
std
(bad)
popa
lods
loopne
scas
or
imul
pusha
push
test
pop
push
xchg
inc
inc
jns
push
leave
adc
loop
test
mov
or
dec
mov
iret
jo
popf
push
jl
cmp
pop
and
mov
shr
adc
pop
jne
(bad)
int
je
add
mov
arpl
call
cld
clc
in
pop
dec
in
outs
push
gs
xchg
sbb
xchg
jecxz
mov
push
cs
es
ins
lds
sar
stos
pop
and
sub
adc
cmp
and
fs
lahf
adc
push
daa
popf
xor
pop
push
mov
test
cmp
sahf
sub
jnp
es
pop
daa
xchg
mov
xchg
cmp
pop
mov
mov
out
pop
and
xlat
std
cmp
retf
sbb
pop
ss
or
cmps
test
dec
lods
loopne
mov
mov
cmp
inc
outs
mov
cmc
mov
out
mov
mov
fcom
test
iret
mov
mov
xchg
inc
mov
mov
mov
sub
push
retf
inc
mov
adc
cwde
add
cld
jnp
stos
(bad)
pop
pushf
xchg
add
dec
in
fiadd
mov
inc
jg
movs
imul
outs
cmps
loope
in
add
and
xlat
xchg
pop
adc
adc
dec
leave
les
test
lods
mov
and
out
add
adc
int3
mov
ins
ss
nop
pushf
jmp
adc
pop
xchg
bound
stos
arpl
jle
in
fild
ss
scas
push
and
data16
mov
xor
xor
fcomp
xchg
push
(bad)
popf
ja
cmps
retf
nop
das
mov
int
movs
add
and
repnz
pop
jle
pushf
loopne
sub
lods
inc
xor
mov
lahf
inc
test
call
sbb
sahf
aad
addr16
adc
xchg
cmp
out
bound
(bad)
dec
inc
inc
fwait
retf
arpl
sub
jne
pop
shr
js
mov
nop
js
jge
sbb
mov
xchg
or
xchg
in
shl
arpl
mov
pop
rcr
pop
xor
push
ins
cld
imul
xor
adc
cmps
jno
(bad)
mov
add
push
xchg
sub
fnstenv
mov
inc
jp
xor
sbb
sbb
pop
shr
nop
in
push
push
pusha
sti
das
fs
mov
ds
cmp
cmp
sbb
test
rol
dec
xchg
test
rcl
sub
and
pop
test
retf
jg
dec
clc
(bad)
cmp
mov
push
dec
lods
and
dec
mov
out
daa
mov
loopne
add
dec
sub
mov
cmp
in
(bad)
cdq
inc
pop
inc
jecxz
adc
mov
mov
inc
inc
outs
(bad)
fwait
outs
dec
xor
mov
push
pushf
adc
cmp
das
xchg
lea
adc
cwde
xlat
cmp
sbb
fdivr
sar
fistp
mov
out
lods
test
movs
jge
out
jl
test
or
push
scas
mov
add
xchg
push
sbb
push
daa
arpl
xchg
scas
out
jno
ror
jnp
cld
(bad)
inc
jae
inc
rcpps
cld
retf
dec
xchg
jo
adc
jmp
js
jp
stc
ss
mov
in
outs
jae
dec
mov
arpl
sti
push
movs
sbb
or
and
jp
pop
(bad)
cmp
sbb
(bad)
pop
cmps
cdq
mov
(bad)
pop
mov
pop
scas
mov
add
and
popa
data16
xchg
and
and
mov
inc
aad
add
ss
adc
fidivr
adc
jbe
adc
call
mov
or
xor
jecxz
pop
pop
or
arpl
or
loopne
or
daa
lock
arpl
aas
sti
mov
adc
inc
xor
adc
ror
movs
jp
push
xchg
js
fisubr
push
repnz
call
jno
add
push
cmp
cmp
shl
cld
pushf
(bad)
(bad)
popf
test
jmp
cmovle
cmp
jmp
enter
repnz
inc
loopne
cmp
popf
neg
mov
push
pushf
repz
mov
inc
cmp
xchg
dec
jg
or
sub
mov
hlt
xlat
pop
sub
pushf
sbb
aad
scas
pop
pop
jl
adc
mov
inc
xor
sub
sahf
mov
xchg
aas
adc
cdq
jmp
mov
mov
cmp
push
rcl
xor
repz
mov
test
aas
jbe
ins
fadd
push
inc
imul
call
adc
push
pop
cmc
stos
mov
sar
jle
(bad)
repz
test
sbb
add
fdiv
inc
xor
mov
fistp
jg
test
sbb
dec
pop
mov
add
neg
mul
(bad)
lea
retf
mov
scas
es
adc
add
fucom
mov
pusha
pop
mov
cmp
pusha
cwde
xor
dec
xor
es
cmp
pop
dec
add
fdiv
mov
imul
ja
sub
add
add
dec
test
fs
stos
jl
jmp
push
in
sub
adc
mov
pushf
sub
jle
ins
cld
sbb
je
xor
mov
jle
fs
sbb
sub
jne
rcl
sub
loopne
jmp
adc
imul
xchg
dec
loope
fs
mov
popf
pop
fdivr
arpl
outs
sti
jns
or
lahf
call
jne
mov
iret
int3
dec
sbb
inc
pop
push
and
movs
cs
sub
sbb
addr16
jl
inc
jne
int
out
lock
inc
add
xor
cmp
ins
xchg
pusha
(bad)
pop
in
imul
sahf
in
rcl
sub
fist
mov
push
dec
jne
ret
push
ins
add
sub
lahf
scas
or
test
out
aas
add
add
and
mov
into
dec
pop
out
lods
or
sub
mov
into
push
push
aad
ins
shl
icebp
push
into
mov
aam
cmp
push
dec
pushf
fwait
cld
pop
jp
adc
das
rcr
mov
dec
xor
sub
add
mov
mov
inc
inc
fild
inc
ja
ret
cld
adc
xor
inc
data16
je
adc
cld
sub
inc
xor
daa
mov
push
mov
fwait
mov
mov
fistp
fmul
mov
cli
fdivr
inc
mov
(bad)
ss
retf
sbb
xchg
fsub
pop
ds
xchg
pop
repz
in
into
not
jecxz
dec
sub
jl
ss
cmp
jmp
inc
test
mov
dec
fcmovnu
mov
mov
cmc
outs
mov
js
ret
loope
dec
sub
cwde
call
mov
sub
dec
mov
push
ss
hlt
mov
sbb
xchg
add
jge
mov
push
add
repz
add
mov
arpl
and
mov
cmp
and
mov
mov
hlt
mov
xor
mov
and
mov
add
mov
xchg
and
push
mov
dec
test
jp
mov
outs
daa
ds
mov
add
add
jmp
sar
or
ins
push
imul
ins
and
and
out
out
xchg
inc
mov
adc
pushf
popa
push
xchg
jmp
sub
push
xor
arpl
jmp
cli
inc
push
or
add
aaa
push
cmp
test
jmp
xchg
adc
fwait
pop
jae
dec
test
sti
jae
cmps
repnz
popf
jae
call
mov
sub
cmp
ja
xchg
repz
mov
jmp
xchg
xchg
(bad)
rol
mov
pop
mov
lock
mov
jbe
push
xchg
push
retf
loopne
push
mov
dec
mov
push
fistp
cdq
or
dec
ins
sbb
mov
mov
xchg
imul
(bad)
adc
test
pop
addr16
pop
push
jae
jb
xor
inc
sbb
dec
pop
and
sbb
sub
and
(bad)
fistp
xor
inc
dec
and
dec
out
jp
gs
xchg
adc
aas
or
mov
cli
test
sub
push
iret
in
pop
ins
jle
xchg
jbe
adc
ins
int
adc
in
jle
call
stos
jne
mov
pop
mov
iret
jmp
mov
sar
(bad)
sbb
ss
lahf
mov
jp
add
cmc
cld
sbb
hlt
sub
loope
das
cli
dec
pop
xlat
or
in
or
mov
sbb
das
adc
imul
out
jg
and
cmp
jb
sar
rol
test
inc
stos
jbe
adc
pop
shl
and
mov
mov
test
cmp
mov
inc
add
test
sub
into
push
je
inc
push
cmp
cli
ficom
jg
sub
sbb
sbb
iret
or
cmc
sbb
mov
imul
aaa
ja
nop
sete
sbb
movs
pop
inc
push
pop
xchg
icebp
jbe
jp
push
imul
mov
adc
movs
jge
(bad)
mov
ins
add
pop
mov
mov
dec
int3
mov
cmp
sub
pop
jecxz
mov
addr16
mov
lods
(bad)
mov
mov
retf
xchg
test
retf
cli
mov
cdq
shl
cvtps2pi
mov
lea
in
cwde
(bad)
push
and
cmp
sub
or
xor
mov
ffreep
int3
dec
mov
or
ffreep
mov
mov
xchg
sub
dec
jbe
ss
mov
int3
cdq
ficom
stc
sub
in
jns
daa
mov
or
push
and
out
aas
xchg
xor
sub
or
pushf
movs
pop
push
xlat
sbb
test
sbb
inc
arpl
inc
cld
mov
xchg
mov
enter
xchg
mov
or
xchg
sbb
mov
mov
xchg
add
inc
cmps
fs
scas
fdivr
jge
jb
cld
mov
and
sub
or
or
sub
ja
(bad)
jne
xor
(bad)
int
iret
adc
fidivr
mov
js
sysexit
xor
inc
call
jecxz
in
and
mov
sub
jno
fimul
or
mov
nop
adc
jmp
mov
addr16
xchg
daa
aad
mov
mov
pop
mov
cmc
std
fwait
or
or
cli
inc
dec
movs
mov
sar
(bad)
mov
cli
loop
popf
pop
lods
xchg
pop
fldenv
faddp
neg
xchg
lahf
pop
leave
inc
add
sbb
xchg
pop
mov
mov
cmp
and
and
push
clc
jo
mov
rcr
pop
pop
pop
pop
sahf
rcr
ins
jne
retf
mov
stos
pop
aam
sub
mov
push
adc
(bad)
jmp
add
aam
sub
dec
dec
pop
cld
clc
repz
pop
adc
in
mov
adc
lea
icebp
mov
mov
push
daa
inc
movs
add
jp
sub
in
popf
and
mov
push
mov
inc
ja
gs
mov
lods
sbb
fs
or
scas
jae
dec
dec
(bad)
aam
dec
(bad)
out
je
shl
cmp
ret
push
add
mov
fnstenv
push
sbb
jnp
cs
or
cmp
sub
jl
mov
pop
(bad)
fcom
cmp
mov
add
test
jecxz
add
sub
jns
sub
jge
and
add
mov
fiadd
nop
dec
cmp
dec
(bad)
ja
movs
mov
push
mov
popf
pop
mov
mov
aad
pop
inc
cwde
aad
in
push
push
mov
ror
ds
push
iret
jle
adc
(bad)
in
call
push
or
sbb
jl
xchg
daa
sub
(bad)
cmp
jmp
fwait
sbb
ins
imul
in
mov
adc
js
dec
out
jl
cmp
js
adc
push
or
jbe
and
(bad)
pop
cmp
push
(bad)
mov
sti
inc
push
sbb
cmp
push
in
push
or
jmp
add
mov
mov
and
fiadd
inc
inc
enter
idiv
dec
ins
mov
inc
mov
(bad)
mov
add
push
sub
mov
mov
sbb
xchg
fisub
jl
out
dec
and
adc
addr16
dec
pop
or
jl
add
das
in
xchg
sub
sbb
outs
fild
ins
popf
and
sub
ror
push
cmp
or
jmp
jne
lock
out
jle
shl
test
and
sbb
daa
clc
inc
iret
xor
adc
repnz
test
cmps
rcl
xchg
iret
aad
adc
adc
fwait
shl
addr16
mov
addr16
mov
idiv
xlat
ret
repnz
icebp
movs
xchg
fcom
dec
jle
xor
ins
hlt
cmp
outs
push
xchg
jl
sbb
imul
sbb
fwait
xchg
and
add
add
jmp
idiv
xor
movs
aaa
and
add
xor
sbb
pushf
outs
xchg
dec
jae
sub
inc
inc
add
and
adc
mov
add
mov
repz
arpl
jg
and
push
in
adc
ret
div
stos
fidivr
cmp
xchg
hlt
mov
inc
call
outs
mov
and
cwde
sub
jge
inc
les
sub
in
push
div
pusha
mov
lods
xor
cld
mov
fwait
jnp
xor
out
cld
jo
int3
scas
scas
xor
retf
adc
adc
sub
adc
sub
ins
icebp
stc
icebp
mov
mov
shr
clc
loopne
sbb
jb
adc
cmps
movs
aam
sahf
pop
out
repnz
dec
sti
(bad)
push
dec
jecxz
into
mov
in
jae
test
mov
sbb
(bad)
repz
cld
push
aam
sbb
nop
stos
idiv
jmp
outs
xor
cdq
scas
pop
add
cmc
sbb
sub
mov
jo
bound
popf
popa
(bad)
fldenv
popa
sub
pushf
addr16
fdivr
pop
mov
inc
ja
jg
shl
in
mov
movs
sbb
js
jge
sbb
in
les
mov
adc
push
aam
pop
lds
cs
cs
push
aaa
or
cli
retf
fstp
enter
retf
fcomp
and
mov
arpl
ins
(bad)
push
dec
daa
or
jns
mov
mov
std
outs
nop
cld
and
cmps
mov
cli
std
int
mov
int
out
add
(bad)
in
xor
aam
lods
jmp
mov
xchg
mov
test
loop
push
stos
inc
add
jbe
outs
imul
pop
icebp
js
jmp
retf
xor
(bad)
fadd
add
and
iret
mov
push
xchg
ins
lea
dec
mov
sbb
mov
mov
rol
pop
push
add
jg
or
int3
loope
and
imul
(bad)
pop
cmp
sub
pusha
sub
sub
in
mov
jp
or
leave
xchg
push
push
adc
call
xor
(bad)
xchg
adc
mov
lods
dec
cdq
imul
je
popa
push
cmp
and
sbb
jnp
in
cmps
mov
or
lods
lock
aad
dec
cwde
push
inc
dec
repz
cwde
out
inc
ror
dec
mov
and
inc
push
scas
dec
fnstenv
ss
dec
(bad)
imul
outs
shl
jmp
cmp
out
clc
cmp
das
cld
jo
into
cmc
es
mov
fcom
or
cmp
es
je
add
mov
lods
push
add
imul
ror
sub
mov
mov
mov
add
sub
imul
aad
addr16
in
xor
push
dec
in
sar
sub
shld
sub
sub
fist
pushf
ds
inc
or
ret
ror
dec
sti
push
add
mov
inc
inc
lods
and
cmp
mov
enter
pop
enter
cs
mov
mov
inc
cmp
xchg
out
clc
sub
sub
out
xor
lods
stos
xor
or
mov
nop
dec
cmp
push
in
mov
xchg
push
jecxz
cld
cmp
xchg
into
add
push
repz
sti
cmp
push
lahf
or
mov
sbb
cmp
stos
sbb
call
jge
sub
fwait
cdq
sub
in
ret
inc
out
push
pop
push
test
mov
push
pop
aaa
pop
(bad)
movs
(bad)
movs
int3
adc
dec
outs
mov
not
inc
addr16
cmp
and
mov
push
popf
sub
sub
leave
jmp
adc
movs
adc
loopne
inc
jp
lea
and
cmp
loopne
out
pushf
ja
(bad)
ss
mov
jnp
jge
shl
adc
xchg
mov
out
lahf
push
xor
scas
mov
pop
push
inc
push
push
loope
add
fcmovu
cmp
cmps
gs
rol
into
and
xlat
call
mov
dec
sbb
dec
jnp
sub
cmp
mov
pop
or
or
scas
mov
imul
repz
xchg
jnp
fidiv
adc
mov
jb
add
ss
cmp
mov
in
mov
pop
mov
cmps
mov
in
cdq
(bad)
imul
shl
sub
hlt
ins
fimul
inc
sahf
test
add
mov
lea
cmc
mov
outs
xor
inc
inc
add
mov
cwde
cmp
inc
daa
loop
sub
push
mov
ins
(bad)
mov
test
push
mov
pop
pop
mov
or
mov
stc
adc
pop
shl
int3
jae
adc
push
adc
loop
into
mov
xor
js
lock
add
sbb
imul
push
adc
out
jl
push
sbb
les
fimul
inc
mov
sar
mov
rol
test
mov
cs
mov
ret
mov
jbe
jle
xchg
ret
addr16
pop
inc
sub
sahf
mov
and
(bad)
adc
cmp
call
cmc
rcl
mov
dec
in
mov
sub
add
cmp
into
fmul
cli
jl
stos
xlat
in
cdq
inc
leave
sbb
lea
fmul
sbb
mov
jmp
push
adc
out
jb
push
fnstcw
retf
inc
ret
push
shl
std
test
xchg
je
xor
cmc
jns
xor
sub
or
mov
shl
xor
push
shl
out
mov
je
mov
or
sbb
xchg
mov
cmp
sar
stc
movs
mov
(bad)
xchg
fs
inc
sub
xlat
mov
dec
jae
sbb
pusha
ror
jb
nop
adc
dec
lahf
fild
xor
jbe
jns
fwait
call
mov
(bad)
sub
(bad)
push
cli
mov
out
in
cmp
jo
adc
xor
mov
in
mul
jp
inc
jl
pop
(bad)
cdq
movs
mov
xchg
mov
and
xor
out
mov
xor
xor
add
cmp
(bad)
retf
push
jmp
mov
push
pop
fsubr
inc
pop
jb
lods
aam
push
clc
sub
int
cmp
jne
and
dec
sbb
jno
pop
iret
or
mov
clc
fist
loope
jne
pop
pop
int3
push
push
dec
daa
aas
stc
xchg
(bad)
sub
push
gs
cmp
scas
fs
or
rcl
push
xor
dec
in
aam
jle
jno
not
pop
scas
push
jge
je
push
add
cwde
adc
out
jl
mov
mov
stos
shr
add
cs
sbb
adc
mov
cld
dec
push
in
cmc
sbb
stc
fstp
aas
mov
sub
scas
pmulhw
adc
dec
out
mov
in
mov
xchg
out
aas
je
pop
dec
jle
push
sbb
cmp
adc
cwde
cmp
adc
repz
pop
push
rol
dec
dec
mov
jbe
fcomp
ds
in
jecxz
shufps
jnp
fisttp
in
sub
leave
sbb
push
data16
std
or
adc
stc
mov
sbb
in
cmp
mov
adc
mov
(bad)
push
push
cmp
pop
repnz
cwde
sub
pushf
scas
or
mov
rol
jnp
add
sub
xchg
bound
dec
jg
sbb
cmp
xor
jnp
push
xor
dec
lea
dec
mov
adc
shl
fcomp
mov
dec
hlt
(bad)
pop
fld
je
sub
fdivr
sar
pop
mov
xlat
loopne
(bad)
lss
sub
pop
push
rcr
addr16
pop
popa
xor
ret
(bad)
arpl
(bad)
jno
test
adc
pusha
mov
les
inc
inc
pushf
popa
sbb
stos
stos
aam
cmp
sbb
lods
test
pop
push
jb
pop
ins
cwde
cmp
mov
mov
inc
sbb
cmp
lods
pop
sbb
fwait
inc
mov
dec
cs
(bad)
mov
jbe
outs
push
cmp
xchg
jns
call
mov
cld
mov
pop
xor
dec
add
fmul
cmp
jecxz
imul
add
out
sbb
push
in
mov
jge
dec
mov
push
cmp
sbb
pop
xchg
adc
pop
push
inc
stos
xor
sbb
sbb
lds
mov
pop
xor
xchg
xor
ss
(bad)
lods
test
or
int3
mov
xor
and
popa
rcr
lahf
cdq
ret
imul
cmp
fwait
xchg
cmp
mov
neg
add
movs
and
inc
outs
bound
push
pop
sbb
or
sub
cmps
stos
test
or
bswap
dec
jnp
sub
jne
adc
outs
pusha
mov
add
cmp
push
inc
ds
xor
cwde
retf
enter
clc
adc
mov
out
pushf
stc
add
pop
in
arpl
cmp
mov
retf
jno
out
(bad)
lds
jns
not
or
fld
test
or
push
lahf
shl
xor
push
sub
bound
pop
dec
sub
mov
inc
inc
sub
pop
stos
jns
push
cs
aam
add
shl
jbe
out
daa
pop
pushf
pop
sub
mov
retf
xchg
push
pop
(bad)
loope
push
daa
mul
xchg
sar
jmp
inc
iret
(bad)
and
call
push
add
xchg
push
out
xchg
cmp
imul
adc
test
dec
jg
sbb
add
jbe
push
sbb
xor
aaa
sub
imul
xlat
mov
dec
mov
sbb
test
mov
lods
into
sub
cli
xor
movs
out
out
mov
push
mov
jp
pusha
inc
ins
pop
xor
pop
in
mov
push
inc
sub
xchg
push
dec
arpl
push
sbb
in
xchg
xchg
mov
xchg
punpckldq
in
mov
std
fstp
int3
sti
js
xor
and
outs
inc
mov
aam
xchg
aam
mov
or
sbb
loopne
fdiv
jno
mov
in
mul
and
cmc
mov
mov
xor
push
shr
xchg
and
std
cmp
or
sub
add
xor
xchg
scas
jbe
retf
dec
mov
retf
popf
mov
mov
push
mov
mov
movs
mov
cmp
jecxz
cwde
pop
aad
fwait
and
jg
xor
and
(bad)
fst
jns
push
pusha
pop
pusha
les
xchg
in
xchg
xchg
cs
ja
jecxz
jmp
cmp
pushf
repnz
fcmovnu
out
xchg
fadd
add
xor
mov
lods
mov
in
ficom
lods
adc
add
sbb
cmp
xchg
mov
cdq
cmps
outs
add
cmp
jae
(bad)
outs
xor
fcomp
cmp
push
pop
lea
clc
cmp
les
push
mov
mov
jl
push
and
das
mov
in
fsubr
pop
ds
xchg
sub
sub
xchg
fwait
sub
out
scas
aas
neg
push
ret
mov
push
loop
or
ds
adc
shr
jns
test
adc
dec
sub
mov
fs
iret
daa
mov
mov
movs
pop
daa
xchg
cmp
jp
pop
daa
rcr
jo
inc
in
daa
xchg
pop
std
add
es
out
in
pop
in
retf
rcl
lahf
sub
inc
push
movntps
dec
inc
adc
push
xchg
in
les
push
enter
sahf
dec
test
dec
hlt
pop
or
psrlw
loopne
adc
fist
test
mov
mov
lea
fs
lea
xchg
or
(bad)
mov
mov
aas
adc
popf
jne
cld
adc
loop
js
pushf
sub
cmp
inc
es
popf
int
pop
xor
cmp
icebp
sub
or
pushf
arpl
dec
or
jmp
mov
mov
xchg
mov
or
(bad)
mov
xor
xchg
and
rcr
sbb
movs
sahf
adc
xchg
lock
dec
sub
stos
jl
xchg
(bad)
cwde
ror
sub
rol
sub
mov
adc
adc
mov
and
sub
xor
ins
adc
addr16
lock
xlat
push
mov
xchg
movs
dec
rcr
xchg
(bad)
cmp
xchg
les
xor
sub
aad
(bad)
mov
hlt
test
repz
out
cld
jmp
rol
idiv
jb
adc
cdq
xchg
push
jmp
arpl
out
jbe
jg
fwait
xor
dec
scas
jo
aaa
shl
lds
and
out
jge
cmps
pop
cli
gs
mov
cmp
jp
cmp
or
sub
iret
addr16
fmul
xor
lods
ret
cwde
sub
sub
push
mov
jmp
mov
jmp
ror
push
dec
popf
inc
fmul
add
es
pop
and
call
mov
xchg
and
xor
shl
pop
int3
enter
dec
jbe
and
aam
test
scas
and
sar
and
ins
cwde
arpl
jle
adc
inc
in
sahf
not
pushf
mov
pop
adc
or
jae
and
pushf
mov
in
dec
mov
dec
cmps
xchg
dec
xchg
cmc
mov
mov
jne
out
jb
mov
jge
inc
jne
ss
mov
dec
cmp
into
sub
shr
out
ins
inc
bound
addr16
in
adc
xor
(bad)
mov
pop
adc
sub
xchg
fidivr
data16
push
xchg
adc
cmp
inc
xor
fwait
mov
inc
sbb
sub
bound
pop
jnp
pop
cs
fdivr
sub
sub
imul
mov
push
inc
xor
adc
mov
adc
or
cmp
js
or
aas
out
loope
jge
pop
push
ret
jnp
cmp
jb
dec
mov
dec
fsubrp
sbb
jnp
jg
into
push
popa
mov
sub
pop
out
imul
inc
int
and
sbb
(bad)
cmps
aam
imul
iret
jo
adc
pop
xchg
outs
(bad)
cdq
jne
add
(bad)
push
jae
scas
sub
push
mov
mov
mov
not
cli
dec
(bad)
sub
retf
xor
rcl
fidiv
add
dec
(bad)
bound
pop
adc
je
test
out
in
cwde
xor
inc
add
xor
pop
xchg
or
jnp
adc
add
mov
enter
add
pop
jmp
jl
add
cmp
sbb
inc
mov
inc
out
js
mov
cmp
mov
inc
sub
mov
mov
mov
pop
xor
xor
dec
(bad)
in
hlt
je
and
ins
fwait
shl
pop
call
sbb
ret
jmp
test
and
push
mov
scas
dec
sti
rep
cld
punpcklwd
cwde
mov
and
pop
jns
(bad)
outs
dec
cmp
dec
jmp
or
sbb
cmps
bound
inc
std
jnp
jo
hlt
mov
jmp
sbb
sbb
(bad)
inc
aas
mov
mul
idiv
jmp
mov
and
cmp
cmp
jecxz
jle
jle
mov
call
outs
xor
adc
push
imul
mov
movs
test
repz
jmp
pop
into
(bad)
das
ret
xor
inc
ds
xchg
ins
mov
dec
fwait
push
test
xchg
adc
mov
outs
fs
sub
jnp
das
adc
push
or
pop
inc
cdq
fistp
adc
and
into
mov
xchg
mul
fucomi
repz
push
es
ss
clc
(bad)
xchg
les
into
das
jnp
out
mov
cmps
cmp
pop
push
pop
inc
or
fcom
xchg
jge
mov
fadd
push
ins
jg
out
xor
mov
jb
aad
das
pop
xchg
aaa
sar
add
fnstcw
pop
mov
xchg
jo
cli
cmps
hlt
pop
mov
call
rcr
movs
jae
movs
(bad)
mov
xor
or
ins
add
mov
(bad)
jmp
xchg
scas
lea
inc
and
jb
adc
jmp
xchg
fcom
out
pop
fld
add
mov
das
mov
dec
push
stos
cmp
mov
fidivr
cmp
iret
mov
test
inc
pop
stos
or
push
sub
jo
in
test
not
jno
shr
xchg
xchg
aam
inc
pop
jne
sub
imul
dec
cmp
push
dec
xchg
or
push
mov
ja
fisttp
mov
call
test
inc
xor
jp
stos
lds
and
or
cmp
mov
mov
fst
out
jmp
addr16
dec
adc
sbb
sbb
in
lods
dec
jae
xor
mov
and
cmp
xchg
je
fcmovne
mov
mov
movs
lods
es
imul
inc
jae
pop
mov
out
sbb
aaa
xor
fist
std
scas
icebp
(bad)
jmp
xchg
adc
lods
mov
sbb
mov
pop
or
pop
or
fild
aas
jle
push
in
xchg
aad
out
in
jl
pop
(bad)
sbb
cmp
adc
cld
dec
aam
lock
daa
dec
or
cld
dec
inc
sub
or
loopne
movs
inc
rcr
ja
fild
sbb
jbe
inc
inc
or
neg
dec
rcr
cmps
arpl
add
mov
in
hlt
jge
pop
pop
mov
test
stos
xchg
mov
mov
adc
pop
(bad)
xlat
xchg
mov
cmps
neg
(bad)
sub
cmp
loopne
xchg
ss
pushf
ins
loope
out
dec
loope
and
mov
sub
shl
arpl
ror
jp
scas
or
cld
int
jno
mov
and
jmp
div
push
pop
mov
test
pop
in
add
les
cmp
retf
xchg
inc
data16
scas
push
movs
mov
sub
dec
adc
call
adc
in
aad
lahf
sub
jno
pop
out
mov
sub
pop
in
or
mov
scas
cmp
xchg
cmps
int3
push
or
push
in
je
cmps
sti
jp
enter
sub
std
imul
lock
xchg
fst
xor
adc
mov
jmp
push
xor
fs
and
dec
call
mov
mov
mov
pminsw
sti
pop
add
cli
xchg
dec
push
imul
push
cmps
dec
and
pop
hlt
and
cmp
sbb
push
and
add
mov
sbb
es
lock
sub
jno
and
xchg
pop
rcl
inc
int3
push
arpl
mov
mov
lea
jbe
es
mov
mov
in
mov
adc
xchg
jg
js
push
jmp
sbb
inc
das
cmp
mov
movs
inc
cs
int
pop
ins
mov
addr16
popf
retf
mov
bnd
lods
es
cmps
mov
bound
cmp
cmp
sub
sub
retf
push
aas
adc
lods
cmp
jb
mov
jmp
pop
cmp
push
mov
xchg
loop
data16
sbb
add
mov
out
mov
or
mov
or
stos
xor
or
sbb
scas
sub
ins
sti
mov
repnz
jmp
cmp
iret
xchg
inc
fnsave
jo
pop
mov
cmp
test
jne
lods
xchg
clc
pop
inc
int
test
shr
push
mov
sahf
movs
fsubr
sub
mov
jecxz
inc
sti
or
add
daa
maxps
or
lea
push
dec
cmp
add
push
jg
mov
inc
fwait
stc
(bad)
sub
cmp
int3
cmps
jno
inc
push
fnstenv
loopne
daa
loop
push
retf
adc
movs
pusha
popa
popf
dec
jle
aam
test
inc
movs
and
dec
pop
popa
lock
ss
lock
(bad)
or
jbe
aaa
adc
sbb
std
or
pop
test
loopne
add
add
and
movs
(bad)
(bad)
mov
pop
inc
cmp
mov
dec
cmp
xchg
das
dec
fadd
call
add
loop
sub
pop
adc
jbe
cs
sub
sub
mov
mov
add
add
sbb
cmp
nop
out
or
iret
aas
mov
pop
out
xchg
xor
add
cmps
jle
pushf
sti
out
cld
sub
(bad)
imul
popa
push
repnz
ret
push
shr
cmps
mov
mov
in
inc
mov
jns
jne
adc
mul
jmp
dec
sub
jbe
jl
sbb
xor
jle
cdq
popf
sti
add
add
int3
push
fcomip
movs
jmp
inc
lahf
xor
shl
int3
inc
or
and
jecxz
xor
xor
lds
cmp
push
cmps
stos
aaa
retf
cmp
mov
cwde
retf
outs
lea
push
stos
outs
gs
sti
pop
mov
xor
push
push
out
sub
xchg
inc
cmc
hlt
add
adc
pop
out
sbb
or
adc
cmp
ror
xor
cmps
mov
jbe
ret
test
adc
in
inc
push
ins
(bad)
adc
and
push
scas
pop
(bad)
xor
mov
or
outs
jecxz
jle
pop
call
xor
mov
or
enter
mov
retf
sub
aas
loope
cmp
fs
(bad)
mov
daa
pop
fidiv
push
and
or
xchg
out
rep
xchg
arpl
xchg
retf
mov
cmps
fnstsw
out
pop
ds
(bad)
std
mov
pop
inc
cmp
xchg
push
nop
adc
and
sub
sbb
dec
scas
rcl
jb
push
js
add
ror
leave
add
dec
sub
outs
mov
into
nop
jmp
adc
mov
dec
jl
std
movs
sbb
or
imul
jecxz
xchg
cmp
ss
ins
mov
iret
push
or
push
sub
(bad)
fcomp
adc
or
xor
ret
stos
sbb
pop
xchg
out
sub
jecxz
push
inc
cld
mov
cmp
push
repz
and
jg
mov
fwait
aad
inc
aaa
jbe
dec
loopne
pop
stos
xor
mov
pushf
in
div
call
mov
loop
mov
sbb
ret
inc
dec
stc
lock
pop
push
push
mov
push
and
adc
inc
inc
fs
sbb
in
test
dec
push
aam
push
xchg
jg
mov
cmp
mov
adc
adc
cmp
mov
inc
jnp
push
or
push
mov
push
inc
push
push
(bad)
sbb
or
das
aad
jmp
(bad)
mov
fist
outs
inc
(bad)
lods
push
addr16
pop
lods
clc
add
push
scas
adc
inc
mov
push
repnz
idiv
mov
ds
and
and
hlt
adc
or
adc
ret
cmp
jbe
out
xchg
lea
sahf
(bad)
std
aam
aas
add
add
push
sbb
push
jl
nop
std
sti
jg
sbb
jl
call
push
xlat
inc
pushf
fs
inc
ja
shl
push
xchg
fild
pop
idiv
std
int
jns
leave
jl
xchg
jb
dec
popa
mov
and
xchg
sar
leave
call
mov
pop
loop
rcl
xor
inc
gs
(bad)
push
mov
inc
dec
ja
popf
sti
cmp
xchg
sub
aas
out
mov
mov
mov
jmp
ja
dec
int3
imul
and
jbe
push
sub
adc
sub
mov
jmp
mov
loopne
rol
add
adc
xor
jge
mov
les
ins
std
jns
pop
mov
mov
jmp
retf
js
cmp
sub
dec
movs
mov
test
cdq
mov
push
sbb
and
aas
jno
das
aaa
sub
pop
sub
fiadd
icebp
mov
jmp
pop
inc
in
sahf
or
test
adc
repz
out
pop
retf
pushf
pushf
adc
mov
ja
bound
cmps
rcr
jb
inc
test
or
inc
sti
mov
push
jmp
and
or
push
lahf
mov
test
pusha
dec
push
adc
xor
iret
mov
in
fimul
lea
dec
ja
cmp
lea
or
xchg
mul
xlat
lock
ins
out
mov
push
dec
fstp
data16
arpl
push
fidivr
push
adc
and
mov
fild
retf
xchg
fadd
shl
fild
inc
das
mov
jae
push
std
nop
sub
add
(bad)
cmc
ficomp
jne
sub
push
or
jns
test
add
(bad)
sub
cmp
aad
and
test
mov
cld
mov
xor
pop
and
xor
repnz
shr
inc
outs
sub
imul
sub
sbb
xchg
xchg
jge
lock
push
bound
sub
pushf
sbb
ss
mov
adc
inc
in
rcr
aam
sbb
add
mov
ror
dec
xor
stos
sbb
adc
lds
retf
mov
out
mov
test
jle
inc
fprem
mov
inc
lea
xchg
xchg
stos
pop
adc
test
pop
xor
or
cmp
or
fnstsw
pop
xchg
push
push
push
das
dec
pushf
pushf
std
sbb
scas
rcr
xor
retf
aas
mov
sti
(bad)
dec
xchg
jle
sbb
popf
int3
mov
or
sbb
lds
add
mov
mov
test
inc
push
xchg
sub
hlt
arpl
pop
pop
rep
sub
xchg
loop
jns
dec
aas
scas
test
pusha
popf
inc
ret
jp
js
cmp
and
mov
pop
jo
test
into
sar
stos
cld
adc
cmp
xchg
xchg
call
cdq
or
ins
call
push
inc
adc
retf
repnz
cmp
clc
scas
add
sbb
lea
enter
inc
xchg
pop
mov
push
push
stc
and
(bad)
adc
dec
sub
rcl
mov
retf
mov
lds
les
lea
xor
push
ds
push
cs
push
sub
fadd
pop
int3
arpl
out
mov
fwait
lods
clc
popf
int
dec
lahf
scas
xchg
xchg
sbb
push
ds
ret
adc
jmp
mov
add
and
shr
dec
adc
mov
pop
cdq
jle
xchg
sti
fwait
(bad)
clc
std
int
dec
jmp
xchg
xchg
jp
cmp
je
xor
jbe
xor
jo
ss
sbb
(bad)
mov
adc
sbb
mov
pushf
(bad)
xchg
mov
xor
xor
ins
ret
pop
aaa
sbb
adc
data16
push
imul
pusha
sar
mov
jno
mov
sub
mov
dec
pop
push
nop
sahf
xchg
mov
jne
mov
jg
dec
sar
rcr
ror
into
xchg
les
test
sbb
frndint
xchg
mov
mov
rcr
xor
push
loopne
sti
pop
lods
adc
push
enter
jmp
xor
mov
mov
mov
jo
push
stos
push
aad
fbstp
popw
cs
and
jae
adc
out
movs
adc
jnp
gs
mov
add
jb
jae
mov
(bad)
mov
or
inc
xchg
adc
rcl
arpl
cmp
sbb
inc
jmp
push
int3
sub
jo
pop
sbb
xchg
push
pop
adc
(bad)
push
jl
sbb
push
inc
mov
mov
popf
imul
dec
or
mov
sub
lds
sti
imul
je
ins
sbb
(bad)
cmp
(bad)
cmp
outs
lds
dec
adc
jle
pop
xlat
je
and
test
aad
or
pop
and
fcmovne
iret
pop
pusha
jge
pop
clc
cmp
ins
push
mov
(bad)
xchg
sub
pop
retf
arpl
sub
fs
ins
cwde
es
xor
rcl
imul
pop
xchg
or
cmp
loop
dec
mov
je
in
in
pop
sbb
mov
cli
and
sahf
xor
mov
das
(bad)
les
mov
fsubr
sbb
mov
or
cmp
push
jbe
leave
retf
call
lea
bound
pop
dec
out
loop
or
aas
dec
data16
das
lods
adc
retf
pop
cmp
jmp
jge
pop
in
into
cwde
lods
pop
or
sbb
or
or
adc
fs
fisttp
jnp
mov
or
sahf
xchg
leave
addr16
ror
or
lea
and
out
push
mov
sbb
push
mov
fwait
mov
xor
ins
outs
mov
cli
xchg
popa
pop
dec
mov
test
pop
ja
mov
adc
add
(bad)
push
xor
cdq
shr
(bad)
int
js
ret
cli
les
push
(bad)
cmp
or
into
retf
and
ror
ficomp
jecxz
and
mov
push
ret
repnz
rcl
cmp
pop
pop
aam
and
mov
dec
mov
cmps
push
jl
pop
push
in
arpl
mov
fld
fstp
dec
jo
ja
xchg
sub
inc
xor
popf
xchg
out
ret
pop
xor
cmp
mov
push
mov
or
dec
push
xchg
outs
mov
outs
fcmovnu
pushf
mov
inc
adc
add
xchg
mov
push
arpl
call
mov
pop
mov
cmps
out
arpl
add
rcr
dec
push
sbb
pop
pop
pop
jmp
pop
test
dec
or
dec
pop
or
and
xchg
sbb
and
jg
jo
add
fild
push
call
xchg
add
fdivr
sub
and
sub
cmp
jns
sahf
jo
adc
movs
ret
adc
popf
or
mov
sbb
sbb
mov
cdq
shl
push
add
sbb
push
cmc
jne
fs
xor
cmp
(bad)
jne
adc
lods
mov
clc
outs
add
aas
sub
mov
mov
ret
push
pop
ins
push
lods
cmp
sbb
je
add
mov
dec
and
xchg
push
fidiv
loopne
addr16
pop
das
jmp
adc
inc
add
std
(bad)
push
inc
stc
cld
push
lods
cmp
mov
(bad)
sbb
inc
aam
sub
imul
call
push
out
ja
ja
arpl
cmps
ins
push
dec
mov
adc
push
mov
sbb
hlt
mov
nop
pop
cmp
xor
sub
and
in
ret
daa
jnp
scas
scas
sysexit
test
jb
cmp
mov
loopne
cmps
sbb
imul
mov
push
retf
jmp
fs
shl
bound
data16
xlat
stos
dec
jecxz
outs
jb
sub
lahf
addr16
dec
sub
pop
outs
mov
jmp
sbb
imul
and
inc
repnz
push
dec
xchg
aaa
adc
push
xchg
call
mov
sub
pop
mov
dec
inc
sub
pop
mov
icebp
mov
dec
neg
adc
mov
(bad)
rol
cld
or
and
xchg
lock
and
repz
outs
daa
repnz
mov
iret
(bad)
out
cmp
mov
mov
and
sub
push
sub
and
(bad)
jnp
or
push
cmp
fsubr
cmps
xor
cld
jg
ins
ins
and
or
add
sbb
inc
push
mov
int
dec
mov
jp
(bad)
aas
adc
sbb
dec
(bad)
repz
adc
xchg
jecxz
mov
push
sbb
push
sbb
int
shl
arpl
ror
fist
adc
mov
out
sahf
jp
sub
fmul
xchg
push
cmp
sbb
imul
cli
sti
inc
inc
adc
inc
and
sub
push
popa
(bad)
jnp
adc
adc
fsubr
adc
ja
ja
dec
cld
pop
shl
cmp
mov
in
aaa
ror
loop
sub
out
pop
int3
dec
mov
dec
cdq
or
cs
mov
in
pop
cmp
repz
jae
xor
push
sbb
out
addr16
jp
fwait
test
cmp
aam
(bad)
push
pop
loop
call
sbb
push
dec
push
or
cmps
inc
pop
(bad)
jp
xlat
cmp
test
mov
mov
push
mov
jl
imul
pop
mov
cwde
pop
jo
addr16
iret
pushf
cmp
xchg
shrd
mov
mov
push
sar
cmp
sub
push
rcr
fdiv
fstp
sub
sbb
out
outs
ret
push
outs
mov
repz
addr16
sbb
(bad)
push
inc
fucomip
sahf
mov
push
mov
add
sub
inc
in
sub
stos
mov
call
jb
dec
xchg
push
jmp
cli
popf
add
into
xor
xchg
enter
imul
es
jmp
pop
out
pop
add
xor
pop
mov
dec
cmc
popa
lock
fwait
pop
add
outs
or
jb
js
call
lods
inc
and
xchg
sahf
nop
fimul
leave
sub
jnp
push
and
cmp
sbb
inc
add
cdq
mov
mov
dec
mul
aad
mov
adc
pop
jb
pop
inc
sbb
cld
push
cmps
ja
push
xchg
xchg
scas
and
sbb
xor
add
icebp
mov
ss
add
int3
data16
outs
in
stos
or
push
into
fs
push
out
cli
pop
pushf
jne
loopne
jecxz
mov
in
mov
mov
dec
clc
movs
cld
dec
jmp
add
ss
adc
mov
lock
fild
(bad)
jnp
adc
xor
adc
ja
fidiv
imul
loope
and
push
pop
xchg
jl
mov
rol
scas
fst
xor
repnz
jge
jmp
cmps
dec
sbb
hlt
inc
xor
push
add
call
mov
mov
(bad)
mov
xor
mov
xor
jmp
push
adc
pop
(bad)
jmp
mov
lahf
movs
ret
call
push
mov
xchg
in
xor
lahf
lea
addr16
fcmove
dec
repz
sbb
out
push
lock
icebp
dec
dec
daa
in
fimul
in
and
loopne
dec
inc
adc
(bad)
mov
add
in
fstp
push
fwait
push
inc
mov
push
and
pop
jnp
(bad)
adc
popa
lahf
sbb
repnz
and
(bad)
loope
and
js
aad
xchg
call
pop
imul
nop
out
jl
sbb
rol
mov
(bad)
mov
fist
sub
clc
xchg
shl
js
lea
lock
in
icebp
sbb
mov
jg
jnp
dec
mov
loopne
cmps
cli
adc
mov
jg
pop
lods
cmp
jbe
push
mov
jns
xor
daa
cli
adc
loopne
je
fs
std
je
add
mov
cmp
adc
je
gs
mov
ret
mov
sbb
repnz
mov
cmps
dec
cdq
and
cld
test
xchg
mov
nop
inc
ins
jg
xor
dec
aam
ret
mov
sbb
(bad)
xchg
cmps
ins
stos
sub
or
ss
cmp
adc
jno
jg
mov
into
aas
and
xor
xor
shl
pusha
push
sub
shl
bound
stos
xor
outs
dec
and
adc
pop
jne
leave
cmps
(bad)
sar
lods
and
iret
pop
cmp
xchg
imul
dec
cmp
call
adc
sbb
mov
jmp
movs
mov
xchg
cmp
es
aam
(bad)
mov
pushf
std
mov
imul
inc
xchg
xor
cmp
mov
arpl
xlat
mov
(bad)
int
sbb
xor
sbb
add
loope
xchg
jbe
jns
jecxz
arpl
push
in
inc
into
popa
dec
xor
imul
mov
(bad)
jmp
pop
into
jg
(bad)
sti
in
pop
jmp
jae
daa
out
test
sbb
adc
pop
fdiv
imul
or
mov
sub
xchg
jno
ins
dec
mov
ss
div
daa
stos
fs
xor
pop
ins
arpl
sub
cmps
inc
xchg
push
cli
test
mov
and
(bad)
jmp
imul
mov
call
fwait
retf
mov
pop
mov
into
scas
push
sahf
(bad)
ret
hlt
inc
fsub
pop
mov
sbb
jg
outs
push
fwait
push
mov
retf
pop
xchg
sbb
push
in
sar
(bad)
cmps
pop
lahf
popf
xchg
dec
sahf
push
stos
jns
jge
xor
imul
enter
jmp
dec
sub
jge
dec
mov
mov
sbb
and
dec
fidivr
push
push
push
cmps
cmp
dec
call
xchg
sub
pop
sbb
sbb
ret
or
inc
adc
mov
aaa
jb
aaa
ficomp
dec
mov
xchg
das
fs
mov
mov
push
jnp
retf
dec
call
jbe
out
(bad)
clc
jnp
(bad)
shr
sbb
sub
jb
bound
stc
sub
repz
sbb
sub
mov
ror
test
sbb
add
pop
push
not
add
mov
rcr
mov
xchg
and
or
sbb
fsubrp
ret
(bad)
fld
test
pop
pop
mov
xchg
lods
jecxz
in
(bad)
aad
nop
cld
sbb
stos
mov
leave
inc
hlt
and
pop
icebp
pop
inc
pop
cs
rcr
dec
push
jb
shl
rcl
addr16
sbb
add
rol
jge
dec
push
fs
adc
sbb
fcom
popf
mov
call
sub
mov
stos
mov
sbb
dec
jge
test
arpl
imul
xchg
js
sub
test
pushf
fnstsw
rcl
retf
add
push
cmc
inc
movs
iret
xor
(bad)
and
push
outs
xor
xchg
sub
adc
dec
repz
cdq
xchg
iret
clc
inc
test
ins
inc
mov
inc
jne
movs
lahf
mov
loopne
addr16
cmp
push
dec
retf
fst
lea
xchg
fmulp
jae
xchg
adc
jp
jl
add
mov
push
mov
push
out
test
nop
stos
push
jp
pop
lock
jmp
scas
push
jns
xor
icebp
and
push
(bad)
(bad)
je
or
cmp
fild
repnz
ja
sub
jno
sub
xchg
or
mov
cmps
dec
mov
jmp
mov
rep
retf
jne
test
inc
loop
push
pop
(bad)
sub
mov
push
adc
inc
shr
lahf
mov
pop
mov
jmp
add
mov
jns
int
add
shl
leave
call
data16
fidivr
daa
jp
fs
xor
xchg
(bad)
das
outs
or
sbb
cdq
cld
jb
pop
cmp
test
xchg
sbb
mov
sti
movs
(bad)
and
add
jge
movs
popf
push
popa
nop
out
arpl
and
mov
jl
and
fcom
push
pop
lods
aam
in
into
test
jmp
xor
(bad)
jb
fidivr
cmps
int3
mov
out
sub
adc
rol
mov
xchg
(bad)
imul
sbb
adc
movs
clc
pop
shl
cmp
inc
mov
xchg
add
sti
les
push
xor
mov
bound
add
int3
cdq
push
std
push
into
lock
clc
jecxz
xchg
and
arpl
mov
js
mov
mov
nop
mov
adc
jns
mov
cmp
dec
out
in
js
ret
and
fsubr
or
imul
add
addr16
push
mov
xchg
adc
inc
hlt
lock
or
stos
dec
lea
xor
popfw
mov
pop
idiv
sub
arpl
stos
cld
mov
inc
ins
xchg
sbb
adc
loope
lahf
mov
(bad)
in
pop
loopne
push
inc
and
shl
mov
xchg
into
mov
push
and
mov
or
fidivr
loope
pop
lods
fisub
lods
stos
mov
and
xchg
cli
out
iret
xchg
ret
xor
push
mov
fst
loope
xchg
cmc
sub
lods
dec
and
ror
outs
inc
jle
adc
pop
pop
(bad)
inc
rcl
pop
out
pop
imul
loop
jge
xchg
scas
outs
fldenv
jg
movs
jno
add
push
sar
daa
inc
push
fnstcw
bound
not
inc
test
adc
mov
mov
test
xchg
mov
fcom
sbb
(bad)
mov
xor
push
pop
retf
and
mov
sahf
lods
movs
popa
pop
dec
or
cld
(bad)
jg
mov
and
into
mov
out
out
(bad)
push
sub
push
movs
nop
in
mov
inc
xchg
cmp
test
lods
jbe
cs
leave
scas
rcr
sub
push
scas
(bad)
sar
or
mov
test
xchg
xchg
inc
xchg
mov
jl
push
push
add
mov
add
ins
jp
pop
mov
ret
mov
stos
popf
cld
retf
lahf
jo
dec
sbb
cmp
ret
inc
push
sbb
les
xor
cmp
les
cmc
xchg
mov
cmp
xor
xlat
mov
icebp
pop
sub
mov
out
xchg
pop
xlat
or
sub
ins
adc
pop
shr
sbb
aaa
arpl
sub
(bad)
xlat
cs
jb
push
lahf
pop
or
out
mov
mov
jmp
push
out
xor
inc
stc
stos
fdiv
rcr
test
xchg
call
mov
cs
jmp
inc
mov
pop
push
pop
test
jbe
adc
cwde
aad
jmp
popf
ret
(bad)
mov
sub
mov
ror
ins
mov
fcmovnb
and
test
mov
sbb
neg
fmulp
push
retf
cld
mov
mov
push
retf
aad
in
xchg
cmp
add
inc
ss
add
call
popf
es
add
or
inc
out
cmp
mov
fwait
jne
loop
xchg
push
cmp
sbb
icebp
retf
(bad)
xor
xor
data16
shl
or
sub
cmc
add
call
jmp
gs
(bad)
pop
pushf
adc
mov
xchg
and
xchg
sbb
jle
xchg
jbe
pop
add
outs
rcl
fistp
cmp
xchg
imul
mov
(bad)
lock
cdq
aad
inc
or
sbb
retf
mov
mov
imul
add
inc
add
or
adc
mov
shl
ins
push
sub
stc
cli
dec
dec
stos
(bad)
adc
(bad)
(bad)
loope
in
xchg
ficomp
mov
fcom
int3
xchg
or
or
in
aaa
cli
adc
(bad)
sub
xor
jb
(bad)
jp
pop
ins
inc
iret
mov
jge
sub
and
std
xchg
fstp
sti
add
cmp
mov
outs
mov
inc
xchg
or
shl
jp
and
(bad)
push
iret
int
add
pop
adc
mov
loope
std
cmps
or
add
(bad)
stos
push
arpl
xchg
sahf
dec
jmp
(bad)
push
xor
lods
aas
test
jns
mov
enter
arpl
clc
pop
cs
and
dec
stc
mov
orps
sbb
pop
sbb
adc
in
mov
mov
je
sbb
sahf
dec
mov
mov
jmp
(bad)
xchg
cwde
aas
jge
cmp
mov
xchg
mov
dec
mov
jmp
fadd
adc
cs
ja
push
add
fstp
push
movs
aad
cmp
jp
push
mov
gs
inc
addr16
jae
add
test
loop
push
aaa
and
xor
scas
jle
out
shr
imul
imul
(bad)
jbe
adc
clc
fmul
fmul
inc
push
ror
inc
xchg
fwait
std
cmc
sbb
mov
je
out
stos
arpl
add
sub
jmp
sti
pop
fsubrp
stc
dec
cmp
pop
or
push
(bad)
xchg
dec
ins
std
rcpps
pop
add
xchg
enter
mov
fimul
cmp
or
mov
inc
aad
lock
(bad)
or
fisubr
inc
or
jno
ja
dec
cld
ss
repnz
xor
imul
pusha
icebp
inc
and
pmaxub
ja
xor
sbb
or
test
sahf
enter
ins
fdiv
(bad)
ins
mov
and
dec
cld
cmp
jno
add
stos
mov
cmp
pop
or
jp
bound
mov
fsub
jbe
add
test
mov
push
in
fisub
sbb
push
adc
retf
and
pusha
add
and
ins
inc
sbb
mov
jmp
pushf
pop
or
mov
dec
ret
ins
inc
pop
lods
sbb
cwde
js
je
jecxz
jb
push
aas
sar
mov
mov
push
sub
jnp
or
sub
scas
inc
and
popf
js
fdivr
in
mov
bound
rcl
dec
jg
pop
add
ret
sub
imul
dec
out
test
xor
jmp
stc
call
jne
sub
pop
mov
pushf
popa
arpl
into
dec
outs
test
cmps
rcl
fadd
mov
in
sbb
pop
ds
and
mov
push
mul
mov
jns
xchg
scas
popf
mov
xchg
rcl
jno
mov
inc
mov
push
jnp
gs
mov
sahf
jle
loop
aas
fild
cwde
sahf
mov
aam
push
shl
mov
mov
pop
test
jge
loop
push
jmp
cld
adc
(bad)
call
jl
aad
push
mov
addr16
mov
inc
xchg
push
test
or
loope
adc
mov
mov
aaa
push
and
xor
push
scas
cs
mov
xchg
sbb
add
xchg
popa
cmps
xchg
push
add
test
pop
sbb
lock
int
adc
outs
add
enter
jae
repnz
sub
push
or
push
arpl
pop
pop
pop
lods
add
add
xchg
sbb
icebp
enter
stos
xchg
cld
in
adc
mov
test
mov
jmp
and
jbe
jmp
ret
stc
inc
mov
mov
sub
add
repz
and
cmove
push
add
loopne
xor
xchg
fld
jmp
sub
cmp
out
xchg
mov
cmp
cmc
pop
sub
call
adc
dec
retf
xor
(bad)
je
jno
adc
push
push
adc
std
jno
dec
daa
or
scas
fs
cmc
ins
clc
retf
data16
leave
sub
sub
jg
aad
dec
add
inc
push
mov
mov
and
sbb
pop
jp
jne
and
dec
enter
sbb
mov
repz
xlat
lea
bound
adc
lods
scas
scas
sub
sbb
mov
int3
imul
and
jg
push
das
gs
fidivr
cmp
out
sbb
sbb
mov
sub
add
dec
mov
out
mov
mov
test
mov
imul
mov
imul
mov
cmps
ins
mov
mov
xchg
adc
rcl
(bad)
push
fbstp
and
(bad)
aaa
and
mov
in
mov
call
stos
mov
in
push
pop
xchg
and
daa
or
iret
dec
(bad)
mov
jp
xchg
lods
scas
xchg
inc
rcl
push
jg
dec
cmp
dec
xor
fcomp
xchg
add
movs
lods
pop
xchg
xchg
cmp
mov
cli
jbe
mov
pop
dec
stos
popf
sbb
dec
ret
in
scas
sub
jb
lds
jne
mov
jmp
mov
test
xchg
call
pop
rcr
hlt
fcom
xor
(bad)
dec
inc
jmp
rcl
push
xor
(bad)
dec
mov
jo
pop
movs
repnz
pop
pop
push
push
push
ins
mov
jne
push
fadd
ror
push
rcl
imul
test
data16
and
sbb
out
arpl
jge
pop
enter
call
imul
xor
mov
ja
mov
outs
jb
fdivrp
(bad)
push
jg
sbb
shl
jns
mov
sbb
stc
pop
ins
cmp
je
adc
push
adc
imul
push
arpl
xor
inc
jns
inc
dec
aad
aaa
sub
dec
in
sbb
and
out
jg
jge
ins
test
(bad)
(bad)
lock
outs
(bad)
jmp
and
sub
dec
pop
dec
add
mov
leave
dec
out
scas
jnp
test
repz
sub
mov
(bad)
jmp
jle
sub
repz
div
jecxz
cld
arpl
push
xor
or
pop
lods
pop
or
ss
mov
lods
pop
arpl
pushf
shl
mov
gs
movs
leave
push
test
jbe
jl
pop
into
adc
inc
jecxz
aaa
jg
xlat
in
cmps
or
jae
jp
neg
mov
jle
(bad)
push
retf
sub
outs
pop
mov
pusha
(bad)
movs
add
setno
bound
int
fistp
jo
sbb
mov
push
pop
loopne
add
sub
pop
fcom
dec
xor
popf
pop
(bad)
cwde
cmp
xor
mov
in
xor
pop
lods
retf
jl
test
xlat
cwde
mov
push
push
xor
sub
mov
sub
out
xchg
hlt
dec
mov
neg
push
push
rol
das
retf
pop
or
cmps
cmp
inc
retf
push
int3
fcom
adc
ins
fisub
movs
seto
adc
adc
retf
pop
pop
out
retf
mov
int3
mov
aad
fistp
mov
stos
lea
inc
sub
jecxz
sub
jne
cmps
sbb
dec
xor
je
pusha
or
jns
fsub
in
pop
popf
bnd
scas
dec
mov
js
and
mov
fwait
jecxz
stc
pop
shl
shl
ss
jge
dec
retf
adc
push
in
push
ss
popf
jg
adc
in
ins
retf
fdiv
add
xor
loop
xor
xchg
mov
into
push
popa
into
pop
mov
mov
sar
int3
(bad)
mov
into
inc
out
xor
(bad)
sbb
fist
test
fadd
scas
ins
aaa
sbb
sbb
sub
xchg
add
push
or
sub
sub
stos
xchg
int3
mov
repnz
push
xchg
nop
imul
xor
xor
outs
pop
dec
xor
mov
add
scas
call
add
fild
ins
xor
aas
adc
in
out
add
pop
pop
clc
pushf
adc
cmp
jmp
mov
mov
imul
iret
(bad)
pop
ret
cmp
sbb
cmp
push
fmul
jmp
adc
cmp
rol
fdivr
std
fild
cmp
inc
xor
mov
sub
pop
or
retf
nop
jmp
pop
int3
fnsave
push
fs
push
push
push
enter
xchg
fcomp
cld
push
movs
push
shr
add
aam
loope
leave
mov
or
adc
adc
shl
aad
je
scas
hlt
push
dec
sub
jl
mov
retf
add
fmul
push
mov
nop
cmc
cmps
lfs
sub
xor
scas
jge
ror
push
or
pop
mov
pop
into
jno
mov
pushf
dec
sbb
mov
or
retf
push
lds
pusha
clc
mov
call
pop
jle
jb
and
call
mov
jge
shr
sub
repnz
mov
push
add
fisub
dec
push
js
jg
outs
arpl
dec
add
aaa
js
pop
aas
retf
das
push
push
sbb
pushf
imul
ins
jl
stos
sbb
stos
fucomi
push
mov
dec
pushf
out
std
mov
adc
out
test
jg
push
movs
leave
add
test
push
push
mov
or
and
sub
jno
cmp
pop
and
push
jg
shl
or
in
popf
mov
push
aam
lods
xchg
fwait
loop
mov
dec
mov
outs
rep
jg
sub
push
mov
repnz
in
mov
outs
mov
mov
lods
or
outs
xchg
jle
in
retf
clc
int
add
hlt
clc
loop
jb
adc
hlt
push
cld
daa
dec
ja
dec
leave
test
dec
(bad)
adc
into
popa
pop
jecxz
stos
fnsave
rol
arpl
nop
dec
arpl
lds
xchg
mov
in
(bad)
in
sahf
loope
and
popa
xchg
xchg
inc
xchg
(bad)
stos
push
mov
xchg
(bad)
test
xchg
mov
pop
inc
nop
pushf
imul
aam
add
outs
repz
fistp
jle
sti
lods
call
sbb
jg
sahf
popf
das
push
inc
mov
rcr
mov
xor
(bad)
sub
lods
aam
ret
outs
(bad)
repnz
fisttp
mov
cmp
adc
mov
mov
lock
or
push
xchg
cmps
jg
fidiv
(bad)
loopne
(bad)
int3
std
lea
adc
mov
dec
dec
mov
fwait
arpl
or
pop
sub
or
sub
out
lods
xchg
imul
js
cmp
dec
add
rol
out
leave
sub
ins
lock
neg
inc
ficomp
jbe
sbb
inc
push
add
dec
les
mov
sub
xchg
push
jbe
cmp
adc
(bad)
int
mov
push
call
pop
push
test
je
fs
sbb
mov
out
bound
dec
inc
adc
imul
adc
int3
sub
jmp
sbb
addr16
std
mov
sub
fistp
hlt
xor
pop
or
popf
fld
add
mov
add
ror
into
sbb
cmps
jno
lods
cmp
mov
cmps
mov
and
out
sub
(bad)
dec
push
retf
movs
push
pop
iret
ja
cmp
sub
lds
add
cmp
test
out
lods
inc
loop
sub
adc
repnz
pusha
pop
and
ja
and
aaa
jle
jg
cs
mov
adc
push
ret
mov
idiv
or
fwait
nop
pop
icebp
loope
sbb
(bad)
pop
call
imul
cli
and
and
sbb
fs
jo
pop
cli
leave
ficom
enter
(bad)
aad
fcomp
xor
daa
nop
add
adc
jg
xor
ins
aam
or
sub
sub
jo
inc
inc
cmp
xlat
ins
bound
scas
and
sbb
push
inc
xor
push
pop
inc
sbb
dec
in
fistp
aad
adc
hlt
nop
pop
inc
outs
dec
jbe
daa
and
fst
addr16
idiv
ss
int
out
not
mov
int
xchg
jb
mul
mov
sub
dec
cmp
aad
into
fisub
jg
mov
dec
stos
scas
arpl
data16
popa
mov
pop
call
int3
rcl
pop
mov
xor
test
adc
mov
dec
sub
mov
loop
adc
stos
das
retf
sbb
xchg
pop
mov
arpl
call
adc
iret
push
push
cwde
scas
and
push
mov
xor
jmp
arpl
fnsave
inc
and
outs
jecxz
stos
imul
sbb
in
and
ja
and
xor
bound
popf
dec
cmp
push
pop
adc
inc
arpl
ror
adc
stos
mov
jmp
cdq
nop
cdq
dec
movsx
ffree
imul
jmp
in
adc
and
or
int
fimul
adc
push
jmp
movs
and
sbb
mov
mov
jb
fstp
cmps
adc
jmp
adc
lahf
sbb
add
outs
xor
clc
enter
cmp
and
and
sti
xor
push
xor
mov
jnp
cmp
pop
rcr
rcl
sbb
pop
icebp
jg
dec
icebp
cwde
icebp
jmp
out
pop
adc
lods
int3
ror
test
fwait
out
je
jo
bound
aad
push
arpl
dec
outs
nop
adc
enter
push
dec
popa
mov
sbb
bound
fadd
pop
push
sub
jge
call
mov
xlat
push
popa
lahf
ret
push
loopne
loopne
mov
popa
lods
mov
mov
inc
out
imul
rol
stos
scas
add
and
rcr
imul
cwde
js
outs
in
jnp
test
jmp
enter
test
mov
mov
lahf
(bad)
lea
in
popf
cmp
xchg
inc
pop
and
out
jl
daa
xchg
leave
push
jnp
or
outs
mov
movs
xchg
dec
push
mov
pop
sub
inc
ja
(bad)
mov
sbb
fnstcw
mov
rcr
aas
cdq
adc
mov
and
pop
test
mov
sti
push
call
ret
call
mov
stc
sbb
iret
(bad)
jmp
pop
fsub
inc
or
inc
sub
(bad)
lock
aaa
push
mov
out
retf
adc
stc
stos
fwait
cmc
dec
sub
or
or
shl
jne
pushf
sub
shr
jle
push
fistp
repnz
cmp
scas
outs
mov
and
shl
or
xchg
inc
push
add
push
sub
xor
ret
lea
and
and
xlat
adc
jp
mov
es
arpl
jp
mov
ins
gs
pop
imul
mov
jl
cmps
mov
sub
(bad)
and
sbb
or
dec
rol
test
add
add
push
(bad)
cmp
cli
call
and
call
into
or
mov
cwde
mov
popf
adc
add
in
cmp
cmps
xor
xor
add
js
jl
push
shl
repz
ror
arpl
pop
shl
push
stos
and
cld
pop
sbb
idiv
mov
popf
sub
fcomp
ds
push
xor
dec
daa
ja
or
cmps
add
xor
movs
dec
dec
test
out
and
cmps
jl
shr
(bad)
push
adc
inc
cmp
xchg
dec
sbb
sub
cs
pop
mov
cmc
mov
sbb
stos
jno
cmp
bound
mov
cmp
jg
or
adc
rol
inc
pop
cld
or
mov
adc
mov
and
xor
push
jb
cmc
cmp
ja
ins
loope
push
stos
dec
and
pop
sbb
mov
and
pop
imul
xlat
mov
sub
push
add
in
lock
int3
mov
ret
cmp
cmp
sbb
jno
lods
adc
jmp
div
sti
daa
in
mov
popf
aaa
retf
je
xor
xor
jnp
cdq
fadd
inc
jecxz
fsubr
loopne
mov
adc
mov
ins
fpatan
sbb
sub
push
out
pop
stos
push
xchg
leave
push
pop
leave
shr
leave
mov
pop
dec
mov
cdq
adc
push
push
pop
lock
imul
aam
fidiv
imul
jne
xor
cmps
movups
jge
repnz
in
or
and
sub
setno
pusha
jbe
scas
inc
test
imul
not
out
or
imul
dec
sbb
mov
aam
(bad)
cmp
out
mov
mov
push
repz
scas
outs
jmp
ficomp
in
dec
jae
add
xor
xor
xchg
ja
pop
fsubr
sub
inc
cdq
or
add
sahf
fs
inc
cmp
push
xlat
test
and
test
aam
and
fwait
xchg
push
adc
push
xchg
push
aaa
push
(bad)
mov
push
mov
adc
scas
cld
adc
jmp
dec
cs
mov
clc
inc
ret
lock
add
daa
cmp
adc
mov
xchg
xchg
retf
je
lods
sub
and
pop
xor
xor
(bad)
or
loopne
movs
stos
sbb
ds
xchg
or
jo
imul
and
test
movs
mov
push
retf
mov
lahf
or
dec
setp
test
dec
cs
movs
add
ja
popf
add
inc
mov
ds
sub
test
mov
dec
or
cmp
sub
imul
xor
loope
push
arpl
(bad)
retf
aam
dec
or
push
push
xor
and
jl
xchg
and
add
dec
push
jle
cmps
adc
mov
xchg
test
mov
jmp
nop
dec
jo
or
(bad)
es
sub
pop
cmp
icebp
jp
inc
sub
lods
cmp
fsubr
mov
test
pop
sar
pop
arpl
test
je
inc
and
test
push
popf
xchg
out
push
jb
out
jbe
push
sbb
retf
enter
push
nop
and
or
loop
loope
mov
adc
sbb
push
gs
imul
cmp
lods
mov
pop
cwde
test
mov
imul
idiv
in
aas
mov
test
jle
dec
sub
pop
in
xchg
push
popf
repnz
xchg
fisubr
inc
retf
xchg
dec
out
not
enter
pushf
loope
fadd
inc
xor
test
sbb
mov
fwait
sar
popf
outs
data16
cld
scas
arpl
lock
enter
jne
xchg
dec
mov
or
mov
adc
test
cmp
ds
mov
loop
popa
test
xor
mov
push
mov
imul
fist
push
leave
sub
xor
mov
cmp
sub
inc
ja
xchg
push
xchg
fsubr
psllq
out
out
xchg
aad
mov
icebp
cwde
sbb
popf
xchg
or
dec
daa
(bad)
push
dec
or
mov
mov
mov
or
cmp
out
cmps
bound
imul
adc
inc
inc
xchg
xlat
jb
cmps
jp
test
retf
sbb
push
in
adc
or
inc
xchg
jp
pop
scas
mov
loopne
shr
ja
sub
je
mov
or
test
call
jb
pushf
sub
push
ds
xchg
sub
cld
mov
bound
xchg
and
adc
sbb
xor
data16
jae
loopne
push
or
nop
es
xor
xor
inc
mov
xchg
jb
and
sbb
dec
jae
loopne
sub
push
and
mov
mov
cli
pop
std
aam
push
out
mov
lea
xchg
loop
mov
movs
push
inc
ins
repnz
test
and
pop
jne
mov
cmp
stos
jmp
or
movs
adc
test
mov
neg
in
sar
mov
data16
add
mov
scas
add
mov
xchg
push
loop
mov
mov
std
mov
stos
fbld
dec
enter
fs
(bad)
xchg
jb
add
sbb
jmp
sub
mov
aas
inc
gs
repnz
push
or
(bad)
fnstsw
fldenv
nop
inc
sub
xor
jns
jno
aam
repnz
clc
sub
sti
xor
into
or
aad
mov
dec
loopne
mov
(bad)
imul
push
adc
in
aad
jno
sahf
add
sbb
jae
nop
nop
out
out
cmp
je
das
mov
or
(bad)
in
call
xlat
jns
jmp
fs
into
push
fist
dec
jecxz
cld
push
adc
jg
out
outs
ins
push
adc
jp
xchg
push
sbb
xchg
sub
jmp
mov
fldcw
adc
int3
cli
xchg
inc
fimul
push
in
push
mov
cmp
std
xlat
and
pushf
mov
add
cld
cmp
pop
loope
in
sbb
shl
loopne
shr
imul
lahf
push
lahf
sbb
jl
pushf
sub
xchg
ins
pushf
outs
xchg
lock
sub
push
and
out
mov
cmp
retf
rcl
retf
imul
sar
cmp
pop
sbb
shl
add
mov
in
mov
adc
inc
and
nop
ss
cmp
sbb
pop
dec
jle
clc
xchg
rcl
cdq
jno
xor
mov
fwait
and
mov
cwde
pushf
jmp
mov
pop
psraw
inc
lea
dec
add
cmc
xor
cmovs
fmul
fdiv
push
ret
leave
into
outs
loop
mov
sub
cdq
stos
inc
sbb
dec
fist
js
cmps
cmps
ins
call
cmps
push
cmc
sahf
inc
retf
inc
cmp
mov
mov
cld
jp
xchg
addr16
in
cld
shr
in
adc
xchg
and
sub
retf
mov
fstp
cdq
test
mov
dec
mov
nop
test
das
sbb
cld
jno
push
xchg
call
sar
inc
mov
jo
pop
mov
lea
cmc
in
cmc
jmp
out
imul
push
mov
fbld
loope
mov
shl
mov
addr16
inc
scas
in
stos
adc
or
pop
add
sub
dec
jecxz
jae
xor
pop
cs
ds
sub
sub
xor
in
inc
mov
test
or
repz
and
fadd
fisubr
and
mov
mov
xchg
jmp
mov
fwait
xor
ins
sub
push
add
inc
ret
nop
call
inc
jae
push
test
nop
int3
mov
xchg
pop
js
sub
hlt
rcl
mov
mov
push
test
repnz
out
pop
sar
mov
sbb
mov
inc
fcom
rol
mov
ret
and
(bad)
repnz
shl
lods
inc
ret
mov
jbe
mov
dec
imul
retf
mov
pop
psrlq
ins
mov
cdq
popf
jmp
and
mov
push
inc
xchg
test
mov
fiadd
push
pop
mov
mov
cmc
inc
add
xor
push
adc
daa
mov
sbb
mov
js
sar
xor
imul
jecxz
rol
adc
or
sub
out
cmp
stos
cmp
sub
nop
pop
cmp
out
pop
out
arpl
fist
and
mov
mov
cmp
push
lahf
inc
mov
pop
and
cmp
push
jns
mov
dec
jg
pushf
mov
push
icebp
adc
sub
sub
lods
push
fstp
addr16
push
ins
and
mov
popf
fimul
dec
call
adc
imul
jbe
addr16
test
xor
push
pop
movs
and
cld
adc
arpl
ja
and
adc
add
ror
xchg
or
retf
mov
jns
jbe
cmp
repz
arpl
(bad)
pop
pop
sub
mul
rcl
xor
icebp
adc
in
cwde
fadd
out
cmp
mov
jne
dec
loope
jecxz
call
adc
fwait
sar
sbb
mov
xchg
cli
mov
sbb
in
mov
outs
and
mov
div
push
cmc
pop
xchg
pop
xor
jge
pushf
push
cmps
jno
out
sbb
or
cdq
dec
xchg
inc
cmps
dec
jns
(bad)
repnz
pop
dec
jmp
pop
pushf
mov
cdq
fmul
sbb
out
pop
inc
in
mov
shl
dec
adc
inc
sbb
je
nop
inc
jmp
mov
cmp
lahf
addr16
inc
adc
lea
adc
iret
pop
mov
in
scas
aad
xchg
jge
push
mov
xchg
adc
jmp
dec
jno
inc
pop
mov
movs
cmp
ret
push
dec
retf
outs
push
aas
leave
push
imul
loop
jg
es
xchg
push
call
ret
mov
pop
repz
ins
add
rcl
fisubr
inc
inc
pop
inc
pop
scas
das
jo
out
sub
xor
data16
pusha
int3
push
adc
sub
jmp
xor
cmp
shl
jns
jp
sub
pop
loop
sub
dec
out
in
adc
push
rcl
sub
fimul
div
pop
push
sbb
(bad)
ret
jns
sub
cs
mov
push
adc
adc
aas
cmp
shr
jo
adc
iret
mov
mov
mov
hlt
stos
aam
ins
out
or
dec
fistp
adc
mov
in
sub
sbb
sti
pop
test
cdq
add
jae
out
arpl
push
pop
push
xchg
cmp
jmp
int3
jne
push
push
lods
xchg
shr
dec
and
out
sbb
ins
add
cmovp
std
xchg
movs
lock
cmps
psubsb
cmps
cld
mov
aad
ret
xchg
sahf
je
push
test
in
sti
sbb
lods
pop
dec
stc
push
dec
xor
pop
pop
dec
push
sub
test
jns
adc
xlat
pusha
sahf
and
lock
or
mul
pop
jp
ss
and
hlt
sbb
jmp
pop
retf
popf
xlat
mov
cld
stos
pop
dec
inc
sub
or
fadd
outs
mov
sar
mov
sbb
mov
ins
jl
mov
xor
cs
inc
cli
cmp
test
inc
out
cld
rcl
iret
mov
dec
sbb
xor
mov
and
xchg
mov
arpl
push
int3
xchg
xor
jae
into
movs
scas
xchg
in
cmp
mov
fcmovbe
or
lock
and
xor
xchg
stc
push
pop
loopne
lods
fidivr
pop
and
cli
mov
or
fs
cmps
adc
out
mov
xchg
fucomp
iret
push
cmps
ins
(bad)
daa
popf
cmp
cmp
jg
hlt
mov
aas
leave
fsub
cld
and
push
ins
fnstsw
mov
imul
call
dec
jecxz
jne
cmp
cwde
stc
pop
out
inc
cmp
or
sub
ins
sbb
and
push
jnp
ja
dec
jmp
je
and
sbb
push
fs
add
(bad)
mov
scas
mov
daa
xor
cld
add
and
xor
xchg
fs
pop
stos
xor
sub
out
mov
xchg
inc
adc
mov
sub
pop
cwde
fs
retf
add
std
popa
(bad)
mov
cmp
jno
popf
jl
(bad)
xchg
inc
test
retf
xor
js
outs
outs
and
aas
adc
mov
dec
jmp
outs
popf
(bad)
cmp
mov
stc
ror
mov
fs
aad
in
(bad)
adc
(bad)
icebp
imul
(bad)
xchg
fisttp
push
ins
cmp
inc
test
xlat
lods
and
test
dec
test
icebp
and
pop
(bad)
mov
cmc
cmp
cmp
scas
lods
jno
inc
jl
fdiv
dec
ss
sbb
arpl
out
pusha
ret
scas
or
loopne
cmps
adc
and
ins
xchg
stos
stc
xchg
sub
push
fs
fbstp
mov
or
mov
les
retf
or
sti
xchg
sbb
stos
jmp
pushf
outs
aad
repnz
dec
dec
mov
test
or
xor
inc
sbb
jmp
dec
adc
retf
mov
or
idiv
jecxz
and
mov
arpl
push
jge
mov
lock
imul
and
imul
xchg
jg
mov
mov
(bad)
in
add
imul
add
hlt
push
add
hlt
xor
xchg
fcom
popa
loop
fnstcw
cli
sbb
mov
retf
push
add
popf
call
fistp
push
pop
jmp
test
sbb
inc
cmp
jne
mov
xor
mov
sbb
or
cmps
arpl
shr
addr16
fst
xchg
sbb
jmp
mov
cmp
fwait
test
push
mov
add
ret
cli
movs
pushf
or
xchg
pop
out
xor
add
pop
in
or
shr
call
fsub
rcl
in
adc
cmp
xor
mov
shl
call
sbb
enter
call
or
and
cmps
jo
mov
std
mov
(bad)
ret
loopne
sbb
cmp
ins
cmp
mov
jno
or
sub
fcomp
out
add
shl
mov
scas
jmp
jle
sub
sub
mov
xor
xchg
push
xchg
xchg
shr
loope
(bad)
arpl
sub
shr
pop
dec
cmp
das
int3
push
(bad)
fbstp
inc
stos
add
data16
mov
out
push
mov
jns
test
mov
sbb
jle
pop
dec
retf
sub
fnstcw
cmp
mov
(bad)
cmp
and
add
jno
test
adc
mov
out
lock
push
pop
mov
mov
or
sbb
mov
je
push
cld
adc
loopne
mov
lahf
sub
xor
xchg
xchg
and
cmp
dec
pushf
cmp
fidiv
mov
sbb
mov
movs
(bad)
stos
adc
test
jae
(bad)
sub
sub
outs
xchg
dec
and
push
dec
nop
add
pop
cmps
(bad)
repnz
aas
xchg
adc
adc
gs
mov
cld
jnp
sbb
mov
call
fcomp
fisub
adc
mov
cdq
cli
push
xchg
push
cmc
xchg
push
call
xchg
add
call
adc
and
aas
push
addr16
xchg
mov
cmps
and
pop
fisub
sbb
in
mov
cli
sub
inc
xchg
inc
xor
ficomp
sbb
add
adc
fdivr
or
lods
adc
out
mov
pushf
cmps
jecxz
imul
arpl
jo
retf
sub
xchg
out
not
jb
push
mov
enter
adc
in
adc
je
jp
cs
push
sti
out
xor
cld
ret
mov
push
bound
mov
or
mov
(bad)
inc
cmps
sub
xchg
xor
jp
and
push
mov
mov
adc
pop
push
jl
push
push
sub
add
jle
cmp
dec
mov
mov
fld
inc
loopne
add
or
jecxz
pop
jne
sbb
fdiv
fldlg2
shl
mov
(bad)
sahf
retf
inc
push
rol
pop
imul
repz
xchg
or
mov
mov
call
popf
std
and
stos
jg
jmp
xor
cmps
xor
adc
movs
jns
or
ja
jns
dec
mov
sbb
inc
sub
sub
test
push
test
cmp
das
movs
dec
ss
inc
test
lock
ds
aam
jo
fwait
adc
inc
mov
or
push
pop
scas
dec
fist
retf
mov
cmps
mov
xchg
aad
jnp
sub
push
jp
pop
test
pushf
stc
enter
sbb
nop
cld
loope
test
retf
shl
arpl
popa
jo
pop
(bad)
out
mov
out
sbb
lods
jo
push
in
sub
test
and
xchg
fadd
jns
mov
leave
jne
push
and
fwait
popf
push
ins
mov
xor
mov
push
(bad)
in
dec
pop
adc
add
loopne
sub
imul
push
pop
jmp
dec
pop
sub
mov
iret
in
inc
cwde
xor
mov
inc
push
rcr
outs
xor
lahf
clc
xchg
cmp
shl
ins
or
stos
push
push
xor
mul
jnp
and
fcom
inc
sbb
cmp
and
outs
push
outs
sbb
pop
cli
icebp
sbb
jmp
dec
jmp
call
out
xchg
add
sbb
sub
js
adc
out
and
retf
sbb
dec
jb
lods
leave
stos
sbb
adc
mov
or
or
jb
jge
fild
add
clc
pop
inc
push
jl
jb
sar
jmp
jge
xchg
jle
out
adc
fbld
les
sub
jge
dec
push
pop
test
pop
int
push
inc
sub
cs
mov
jmp
imul
adc
shr
dec
mov
cwde
pop
jecxz
cli
iret
mov
cs
es
imul
mov
push
outs
popf
popf
lods
mov
loope
daa
aad
shl
aad
aad
xchg
(bad)
pop
jb
mov
xor
loop
inc
and
mov
jns
pop
dec
mov
fld
out
int3
jecxz
scas
or
pop
or
fwait
add
xor
fldcw
imul
ror
fcom
pop
pusha
(bad)
and
cdq
lahf
or
push
add
mov
ror
xchg
das
sub
push
mov
(bad)
int
std
push
and
fistp
enter
or
mov
mov
sbb
pop
mov
in
lock
fsub
inc
fidivr
fcom
adc
pop
xor
(bad)
lods
sbb
aad
dec
fnstcw
pop
pop
aam
fs
sbb
cs
pop
pusha
push
pop
mov
arpl
xor
dec
inc
aad
(bad)
mov
fdivr
xor
mov
imul
ret
aad
mov
aam
paddusb
adc
(bad)
push
mov
inc
int
je
sbb
dec
mov
pushf
jae
xchg
jb
push
call
pop
mov
nop
xchg
mov
xchg
popa
pop
mov
push
cwde
dec
cmc
aas
shr
and
test
and
jo
repnz
shr
rcr
mov
adc
cmp
clc
adc
xchg
xchg
loopne
cli
dec
mov
sti
das
add
push
or
jmp
lods
xchg
inc
int3
jbe
cld
adc
ins
jbe
mov
add
push
aas
sar
daa
jb
sahf
lods
xchg
cmp
lock
imul
cmps
cmps
dec
inc
and
adc
loop
and
fwait
out
fmul
adc
int
or
mov
mov
jg
sbb
lahf
ret
jmp
shr
cmps
mov
sub
or
jmp
cwde
pushf
pop
mov
es
or
loopne
ret
jmp
xchg
retf
or
fs
ret
sti
jne
icebp
cmp
and
outs
leave
outs
cmps
adc
mov
repz
mov
jmp
mov
iret
xchg
sub
pop
popf
cs
pop
cmp
and
mov
adc
sbb
jl
pop
add
xor
xchg
xchg
dec
push
test
bound
pop
stc
ficomp
push
fsub
popf
jo
out
or
sub
ds
mov
mov
icebp
jae
cmp
mov
pop
sbb
shl
int3
shl
add
ror
popa
dec
sahf
jle
cmp
movs
mov
lea
lods
cld
lods
adc
mov
fisttp
fsubr
mov
loopne
outs
dec
sbb
sti
pop
std
stc
jecxz
or
jnp
adc
pop
call
aam
popf
push
fild
mov
movs
sbb
inc
outs
push
xchg
jmp
or
test
retf
ret
jecxz
test
ret
lods
ret
push
ins
or
mov
arpl
inc
call
adc
sbb
mov
retf
add
stos
sar
jmp
test
fs
sbb
cmp
pop
xlat
arpl
pop
test
test
test
sub
dec
scas
(bad)
inc
lock
les
adc
in
hlt
cmp
loop
mov
jmp
adc
in
fstp
pop
cmc
fcom
data16
cli
mov
jmp
jbe
jns
out
sub
jmp
icebp
in
inc
mov
jo
cmps
push
sbb
pop
arpl
loope
popa
and
pop
or
add
cld
scas
fisttp
pop
adc
scas
xchg
pop
mov
cmc
rol
in
xor
mov
pushfw
sbb
inc
or
cs
xchg
movs
mov
(bad)
shl
mov
(bad)
cmps
sbb
std
or
jb
rcr
sub
cmp
fild
adc
rol
int
mov
push
and
ins
mov
jo
scas
jo
xchg
movs
pop
push
push
(bad)
call
xor
dec
dec
add
xchg
mov
or
dec
pop
inc
iret
or
pop
fsubr
mov
adc
(bad)
cld
pop
lods
mov
add
jl
leave
les
(bad)
lods
mov
add
inc
aas
push
scas
xor
xor
xor
scas
fisubr
std
nop
push
adc
add
xchg
push
push
(bad)
shr
sub
jp
inc
xor
mov
xor
adc
push
clc
inc
das
mov
or
ja
je
mov
mov
add
lea
outs
dec
adc
nop
jecxz
imul
dec
test
movs
jmp
mov
cmp
in
and
push
nop
sub
fbld
ss
and
jbe
dec
popf
popa
ds
sti
and
sbb
imul
and
sub
pushf
cmc
push
fisubr
pushf
add
aas
aas
stc
js
repz
adc
inc
or
(bad)
cmp
in
xchg
call
mov
enter
ret
mov
xchg
stos
cmp
je
xchg
fisub
test
addr16
dec
jmp
sar
inc
fdiv
(bad)
jb
adc
(bad)
sub
adc
inc
shl
mov
push
mov
fistp
sub
mov
sahf
daa
shr
mov
mov
add
retf
stos
and
xchg
cmp
ret
neg
iret
shl
sub
out
cmp
jnp
in
dec
imul
in
pop
fcmovnu
retf
xor
jbe
rcl
iret
js
pop
int
cmp
xor
push
loopne
jp
jne
imul
add
cli
sub
jne
dec
push
sub
dec
jae
arpl
pusha
movs
cli
jp
adc
scas
in
lods
sub
inc
ins
pop
jb
pushf
mov
clc
fs
out
nop
dec
ret
inc
push
js
lds
ds
xor
enter
sbb
stos
ret
aas
dec
rcl
shr
add
cmp
lahf
fcmovbe
mov
(bad)
retf
stos
aad
int3
daa
aaa
jo
into
adc
shr
push
xchg
popa
loop
addr16
lahf
nop
call
sbb
fs
mov
pop
ss
(bad)
rol
aad
or
std
mov
aam
arpl
pop
fwait
pop
cmp
cmc
pop
je
xor
dec
cs
in
push
xchg
jo
and
push
pop
lahf
retf
das
retf
mov
pushf
enter
adc
pop
mov
xor
ja
push
mov
push
cmp
pop
pop
rcl
je
retf
mov
es
mov
jae
ins
mov
shr
push
xchg
js
test
jl
or
cmp
push
sbb
ins
mov
(bad)
jp
jo
je
int
adc
pusha
dec
sahf
push
pusha
and
pushf
arpl
(bad)
das
sub
xor
js
sbb
push
outs
arpl
adc
add
stos
mov
pop
cmp
addr16
fistp
lods
mov
enter
push
rcl
mov
mov
test
jb
adc
fdivr
push
in
mov
sti
and
or
fstp
std
or
in
ficom
leave
pop
das
add
xchg
inc
adc
ds
xchg
fwait
in
out
sysexit
xlat
ror
cs
dec
int3
mov
inc
push
loop
out
bound
mov
pop
into
push
push
aam
dec
mov
in
in
push
push
add
dec
std
jnp
stc
push
mov
inc
popf
mov
mov
int
data16
fcom
dec
inc
popa
sub
movs
add
int
std
lods
mov
add
push
pop
inc
pop
pushf
mov
jecxz
pop
dec
loop
push
iret
in
or
sub
mov
mov
stc
movd
cld
jno
fs
push
out
dec
mov
push
fld
repnz
xchg
fisttp
cdq
mov
gs
push
movs
mov
xor
int
pop
aad
adc
push
lods
or
call
cld
das
pop
mov
loop
or
jb
cli
push
aam
lahf
lea
dec
push
and
in
inc
inc
in
mov
xchg
cmp
dec
popa
ss
jmp
pop
in
stos
dec
push
xor
cvtps2pd
(bad)
cmps
jmp
xor
test
mov
dec
xor
ins
add
daa
or
pop
iret
aaa
mov
adc
ror
in
je
aam
cmp
leave
lea
push
adc
dec
dec
jl
mov
xchg
int3
test
test
or
mov
pushf
shl
nop
(bad)
arpl
xchg
(bad)
jg
test
pop
push
add
cdq
mov
retf
enter
fsubr
cmp
cld
(bad)
xchg
scas
push
scas
fld
sub
push
clc
dec
xchg
pop
adc
ins
xchg
and
rol
mov
ja
jle
loopne
xchg
fist
fwait
scas
js
mov
cmp
in
cmp
(bad)
(bad)
pusha
scas
in
test
dec
fnstcw
in
mov
xor
cwde
xor
inc
aam
jecxz
aas
inc
sti
in
lgs
pop
jecxz
fidiv
fst
in
dec
sbb
pop
ins
add
outs
fstp
or
mov
lock
mov
fistp
movs
rcr
cwde
cld
hlt
mov
std
mov
and
lea
add
mov
imul
mov
cmp
jge
lahf
test
and
inc
js
mov
sbb
stc
jb
neg
test
jae
pushf
sbb
cmps
data16
or
cmp
adc
xor
test
stos
jnp
fs
scas
les
or
fs
ret
dec
movs
jl
mov
mov
sub
je
in
inc
sbb
ja
ins
sar
sbb
icebp
repz
enter
sbb
dec
imul
outs
nop
das
cwde
mov
mov
jnp
call
dec
sbb
dec
pop
or
sbb
jbe
add
nop
mov
xchg
push
push
movs
mov
es
pop
popa
jge
out
adc
mov
dec
aad
call
repnz
xlat
in
jl
sub
cs
pop
adc
jb
fidivr
mov
mov
mov
nop
dec
adc
push
in
adc
xor
pop
xor
test
mov
or
stos
scas
(bad)
xor
jae
js
rcr
aam
popfw
pop
arpl
jne
ror
dec
dec
jp
hlt
push
inc
fistp
jl
and
jo
and
sbb
stos
xor
sar
mov
mov
imul
xor
dec
ins
fisttp
push
push
pop
sub
sbb
es
jl
mov
mov
fcomp
in
xchg
gs
sub
and
repz
test
retf
stc
maxps
jl
sahf
ja
xchg
and
aam
cwde
bound
loop
cs
arpl
adc
and
aaa
shr
lock
iret
outs
push
scas
ins
inc
and
mov
jmp
outs
int
xchg
je
test
int
push
(bad)
sub
fistp
mov
call
les
leave
dec
repnz
or
pop
lds
ror
(bad)
fmul
loop
movs
push
popa
test
cld
pop
aam
in
or
and
xor
mov
push
xor
pop
jnp
stos
cmps
lods
or
mov
nop
xchg
addr16
inc
adc
int3
int3
imul
jnp
mov
xchg
lock
popf
shr
sti
hlt
out
cwde
pop
dec
ja
jo
fldenv
lahf
repz
pop
out
iret
into
test
push
mov
push
push
aad
and
mov
xchg
mov
sbb
mov
push
xor
push
mov
not
out
add
push
xchg
mov
jno
mov
lahf
aad
push
int3
jne
mov
aam
inc
test
arpl
push
add
movs
sbb
icebp
adc
das
out
sub
inc
mov
xchg
adc
dec
jmp
repz
sub
push
in
sub
arpl
loop
push
mov
and
das
dec
adc
mov
push
jo
inc
test
push
or
in
push
mov
mov
repz
mov
sahf
sbb
cdq
or
adc
sti
je
not
push
scas
xchg
jnp
lds
push
inc
ds
inc
pop
mov
xchg
ins
pop
and
cdq
sbb
ds
dec
js
int
inc
int
ds
pop
gs
pop
neg
lahf
ins
or
das
push
lods
push
mov
mov
adc
mov
cmp
dec
push
call
and
mov
aam
popf
add
mov
rcr
and
pop
ins
pop
xchg
jne
popa
les
mov
push
or
adc
bound
mov
movs
cmc
(bad)
sar
jne
mov
dec
sub
movs
ss
(bad)
inc
sbb
jp
push
xchg
mov
in
leave
outs
xlat
adc
push
rcr
in
push
int
xchg
stos
sub
sbb
mov
repz
jge
push
sub
pop
int
mov
iret
imul
iret
pushf
sub
test
aam
rol
jl
push
ss
inc
sti
dec
lods
(bad)
movs
jnp
xor
jnp
pop
into
inc
sahf
mov
fwait
add
mov
fwait
movs
add
mov
push
mov
push
and
dec
jecxz
mov
push
fmulp
in
outs
enter
pop
pop
adc
mov
arpl
pop
test
and
jmp
daa
push
cmps
(bad)
mov
mov
add
out
mov
scas
mov
dec
cdq
test
in
mov
adc
sbb
push
repnz
int
mov
cwde
mov
add
fidivr
adc
clc
dec
inc
movs
xor
mov
adc
imul
xor
inc
jae
add
rsqrtps
pusha
movs
les
ds
pop
push
(bad)
add
enter
imul
aaa
jae
sbb
push
xchg
jo
mov
push
sub
outs
adc
and
cld
mov
sub
retf
js
dec
fidiv
add
rcr
rol
push
fsub
sub
test
je
inc
add
int
mov
mov
rol
pop
and
das
in
rcl
test
xchg
into
cli
jmp
or
mov
bound
mov
retf
adc
int
sar
cmp
xchg
repz
dec
fbstp
cmp
dec
dec
sub
mov
call
mov
(bad)
ins
bnd
popa
inc
cwde
repz
mov
in
mov
inc
int3
out
adc
xchg
sub
(bad)
int
xchg
sbb
mov
sahf
mov
movntq
mov
outs
xchg
xor
jne
ret
fist
mov
adc
sbb
(bad)
and
cmp
or
inc
push
paddq
mov
ins
jno
cdq
outs
jp
mov
dec
call
sbb
jg
mov
retf
mov
mov
sbb
(bad)
mov
rcr
jo
dec
cli
(bad)
cmp
test
stc
das
cmp
in
retf
lods
ins
dec
out
fiadd
cs
loop
int3
pop
ret
jle
sub
jnp
dec
push
std
aaa
mov
and
mov
test
jg
sub
jne
ret
pop
ds
hlt
mov
ficom
xchg
retf
jbe
lahf
and
jl
pop
mov
mov
jg
xchg
clc
adc
jne
inc
(bad)
cwde
sub
fsubr
dec
cld
das
pop
out
sub
sub
ror
push
out
fisttp
dec
add
xor
and
pop
push
push
xchg
inc
sbb
mov
movs
pop
inc
sub
aad
pop
stos
mov
pop
ins
ja
pop
lds
pop
xor
(bad)
data16
mov
loopne
mov
xchg
xor
ins
bnd
add
sbb
loop
movs
call
and
cmp
pop
addr16
loope
cli
jg
iret
mov
push
movs
pop
into
repz
mov
mov
mov
push
scas
or
mov
icebp
xchg
loopne
out
add
(bad)
int
(bad)
pushf
das
ret
(bad)
jg
add
xor
push
pop
in
lds
and
shr
test
jmp
rcl
jbe
or
dec
jbe
out
sti
scas
push
test
and
(bad)
jge
stos
mov
sti
mov
dec
mov
rcr
bnd
int
call
scas
sub
jp
adc
fwait
test
mov
cli
loop
xchg
xchg
ins
mov
push
loop
cld
popf
mov
push
movs
add
cmp
push
lds
cwde
in
fist
jnp
in
out
popf
lahf
repnz
loop
xcrypt-cbc
cmps
push
xor
jnp
jnp
popa
fwait
mov
pop
cmp
and
push
dec
into
hlt
cwde
inc
repz
push
xor
sub
cs
sahf
mov
push
nop
adc
movs
cmps
inc
sub
inc
cld
enter
jmp
in
pop
mov
icebp
add
ret
sub
xchg
call
dec
adc
scas
clc
in
addr16
pop
je
jo
ss
sbb
adc
push
mov
loop
add
cld
and
inc
stc
and
push
(bad)
inc
push
clc
(bad)
pop
sub
push
lock
test
pop
aad
movs
sbb
iret
ja
ins
in
xchg
jae
mov
inc
mov
and
dec
mov
adc
lods
inc
sbb
sub
loopne
retf
sbb
int
(bad)
rcr
mov
cmp
jl
out
pop
(bad)
stc
lock
xchg
cmp
push
dec
push
and
ins
inc
movs
bswap
fild
mov
lds
cmp
int
push
mov
mov
mov
nop
sti
div
pusha
mov
sbb
mov
int
push
and
in
out
mov
mov
rol
iret
add
mov
sbb
xchg
outs
ret
loopne
pop
inc
xlat
cmp
mov
sub
push
cdq
(bad)
adc
int3
add
popf
icebp
nop
cli
cmp
xchg
lahf
mov
dec
cmp
ins
sbb
sbb
push
xor
mov
bound
add
push
aas
pop
push
or
mov
jmp
pop
jne
ins
fisub
repnz
sub
pop
popa
aaa
aaa
ds
push
and
jno
retf
mov
shr
adc
(bad)
(bad)
out
adc
test
jb
xor
dec
mov
sbb
mov
xchg
dec
mov
iret
pushf
ret
(bad)
arpl
cwde
dec
push
call
in
idiv
and
push
xchg
and
test
push
jecxz
xchg
sbb
sbb
xor
xor
push
or
jmp
das
and
push
pushf
sbb
and
mov
inc
cld
and
stos
mov
or
cld
add
xchg
dec
cmp
je
jae
sbb
mov
fbld
adc
mov
lock
sub
aas
(bad)
mov
mov
fistp
test
arpl
pop
cmp
cwde
mov
shl
leave
mov
enter
mov
retf
pushf
and
push
mov
xchg
repnz
mov
retf
jae
in
cmp
xchg
jl
dec
xchg
fisub
sub
into
and
call
inc
adc
test
mov
mov
push
aam
fcmovb
xchg
sub
sbb
mov
push
neg
cmp
ss
inc
mul
pop
ss
js
mov
iret
mov
push
scas
lahf
ficom
addr16
js
ror
sbb
dec
out
loope
cmps
jge
sahf
sub
dec
mov
dec
scas
out
cmc
retf
sub
jmp
mov
cmc
sbb
imul
into
dec
mov
neg
jecxz
retf
iret
mov
sar
shl
mov
cmp
jo
fsin
push
adc
adc
jo
push
(bad)
push
sbb
mov
adc
jmp
jbe
jnp
cmps
ds
fwait
not
js
outs
pop
das
inc
mov
mov
dec
dec
xchg
lea
push
or
lea
(bad)
cmp
mov
mov
push
push
xor
popf
lea
push
pop
call
ss
add
ins
sub
rcl
inc
ss
ret
mov
push
call
add
mov
das
fisttp
inc
sub
adc
sbb
loop
outs
jecxz
or
stos
sub
retf
gs
rcl
sub
scas
add
dec
retf
xlat
push
jmp
jg
mov
mov
sub
and
int3
jno
jno
fmul
clc
push
fdiv
mov
jb
dec
fisttp
xor
mov
push
fsub
xchg
cmps
sub
bound
jecxz
iret
push
and
or
pop
cmps
clc
xchg
es
gs
or
dec
push
bound
cmps
retf
retf
lods
fstp
and
dec
stos
pop
cmp
loopne
mov
loope
push
pusha
(bad)
fcmovnbe
mov
dec
mov
and
adc
jb
jmp
les
cmp
test
repnz
imul
cld
cmp
push
jnp
icebp
in
pop
xchg
sbb
in
imul
aaa
mov
jl
adc
jge
push
cmp
(bad)
mov
scas
mov
adc
mov
outs
call
sbb
cs
push
sar
sbb
call
xor
pop
icebp
aaa
test
inc
push
es
sub
cmp
pop
cmps
inc
fs
and
push
or
aaa
shl
or
(bad)
jne
push
pop
jne
sbb
and
adc
movs
jmp
out
mov
sub
scas
movs
mov
das
xchg
xchg
bound
jmp
outs
sahf
daa
dec
jl
sub
popf
pusha
outs
ja
sbb
(bad)
icebp
cmp
push
(bad)
dec
and
aam
or
test
rcr
clc
xor
mov
rcl
ja
and
sbb
jnp
inc
cmovo
cmp
stos
inc
imul
outs
in
jmp
adc
jl
push
push
aaa
jno
push
mov
enter
xor
fs
cli
jns
arpl
inc
mov
bound
sar
cmp
push
(bad)
mov
pop
(bad)
ins
das
in
and
dec
std
clc
aas
cmc
lds
or
fwait
leave
cwde
(bad)
rcl
jo
int3
xlat
out
retf
push
xchg
es
sbb
jl
dec
pop
xchg
mov
(bad)
outs
sti
sbb
xor
pop
lock
js
jmp
mov
mov
jnp
lahf
mov
and
cmp
inc
adc
xor
or
and
scas
out
adc
sub
repnz
push
xchg
inc
movs
mov
ja
ret
enter
and
imul
aam
pop
pop
xor
shr
lock
sbb
inc
cmp
in
sub
pop
mov
scas
cmps
adc
push
add
aam
xchg
push
clc
xor
aad
jnp
sbb
add
add
mov
xchg
cmps
nop
pushf
jae
lahf
xlat
xor
js
int3
mov
ss
(bad)
in
in
pushf
jmp
jae
and
xchg
xchg
pop
mov
addr16
stos
adc
sub
xor
fist
push
daa
push
mov
xor
xchg
cmp
jmp
jl
ret
sbb
push
and
mov
pushf
push
push
fist
xor
dec
sti
fsubr
js
mov
mov
mov
xchg
pop
pop
xor
mov
int3
adc
clc
pop
or
add
retf
movs
fwait
repnz
scas
(bad)
sahf
sub
repz
sbb
in
out
jge
addr16
sbb
neg
test
iret
sub
shr
jbe
jmp
mov
int3
mov
cdq
outs
fwait
lea
pushf
ret
idiv
fisub
add
cmp
imul
iret
cmps
ja
outs
dec
mov
inc
sub
jae
adc
test
mov
push
imul
sahf
mov
pop
xchg
xor
mov
in
cmp
(bad)
fst
enter
xchg
xor
rol
mov
push
rol
fdiv
sbb
xchg
mov
imul
rol
in
sar
cld
jecxz
imul
bound
mov
push
int
into
out
pop
retf
add
push
push
mov
pop
pop
cdq
inc
pusha
(bad)
adc
add
and
in
test
jb
shl
push
fwait
sbb
ja
fmul
bound
sbb
pop
mov
test
mov
cld
or
adc
pop
arpl
inc
inc
not
inc
sbb
inc
dec
dec
addr16
ror
mov
(bad)
in
mov
ins
push
movzx
xchg
jecxz
call
dec
stc
jno
bound
inc
cmp
pop
ja
fs
ins
pushf
sbb
ins
dec
cmc
es
jmp
stos
mov
pop
cmps
push
nop
push
xchg
daa
call
lds
xchg
xchg
lock
push
or
mov
pop
inc
add
test
or
mov
std
mov
enter
push
and
xor
adc
adc
test
ret
aas
xchg
inc
adc
iret
hlt
out
sbb
push
mov
jmp
fs
test
dec
retf
and
sub
push
enter
retf
lahf
mov
add
add
add
enter
addr16
repnz
bound
adc
pop
aaa
add
pop
mov
push
repz
add
or
push
rcr
imul
stos
imul
and
push
xchg
xchg
cmp
ret
adc
sbb
sti
jne
nop
mov
outs
out
shl
stc
je
inc
call
inc
sti
or
dec
arpl
sti
adc
jbe
push
or
pop
adc
inc
pop
push
xchg
addr16
scas
pop
icebp
out
pcmpeqd
repz
xor
cwde
shl
arpl
shr
pmuludq
cmp
mov
aaa
xchg
pop
cmp
test
xlat
aam
sbb
icebp
fist
lods
je
jnp
xchg
pop
xor
bound
fistp
mov
pop
mov
pop
icebp
pop
fcmovnb
pop
or
mov
xchg
mov
pop
sub
sub
jno
mov
or
(bad)
mov
aaa
mov
sub
sti
pop
enter
sbb
inc
ja
neg
sub
rcr
dec
jne
jge
adc
ja
adc
push
outs
pop
in
into
jge
jne
fild
cmp
jl
mov
jg
jg
and
mov
push
out
mov
push
retf
cmc
mov
imul
xchg
sbb
jo
cmp
add
mov
sub
cmp
xor
lahf
dec
(bad)
das
inc
mov
or
jmp
addr16
xchg
cmp
je
cs
int3
mov
fld
mov
inc
xor
lock
jl
stc
add
push
std
sbb
pop
lock
or
idiv
jecxz
movs
ror
push
nop
push
cli
jge
ins
aas
call
xor
cs
js
dec
addr16
jp
popf
pop
jmp
clc
out
test
and
in
pop
into
inc
cwde
jge
push
push
pop
lahf
mov
adc
out
adc
add
xor
cmps
fwait
out
imul
movs
mov
loope
ins
mov
(bad)
stos
cmp
jle
fwait
mov
inc
sub
cmp
(bad)
cmp
mov
or
out
gs
inc
push
or
adc
das
lea
pop
adc
cdq
mov
cmps
pusha
adc
jle
sbb
push
fiadd
xchg
xchg
and
dec
jl
pop
sub
inc
sbb
retf
lds
loopne
adc
inc
mov
pop
dec
outs
adc
jne
and
das
stos
mov
aad
movs
loop
retf
cmp
push
bound
(bad)
bound
sbb
clc
aaa
pop
xor
fld
xor
and
data16
cmp
jae
inc
int3
xor
lods
mov
or
stos
(bad)
jge
cs
pop
jne
dec
sub
sar
cmps
ins
cmps
push
mov
pop
iret
sub
pop
sahf
dec
shr
push
dec
add
movs
inc
push
scas
sti
push
in
inc
sahf
bnd
mov
dec
mov
jge
pop
or
je
pop
push
dec
jo
daa
xchg
fbld
pop
ret
int3
cmp
loop
pop
dec
sbb
cwde
retf
add
sub
out
mov
mov
add
inc
repnz
dec
mov
out
xchg
inc
cmc
(bad)
sub
jl
add
aas
mov
mov
popa
mov
sbb
adc
rcr
rcr
cmp
retf
test
sub
mov
imul
mov
call
xchg
push
jmp
mov
movs
mov
mov
mov
mov
mov
daa
mov
mov
retf
cmp
mov
xchg
outs
(bad)
loope
inc
bswap
cli
fimul
adc
cld
mov
or
std
and
outs
jmp
sti
xchg
test
xchg
and
mov
pop
push
mov
les
shr
cmp
int3
mov
sar
lds
stc
retf
mov
arpl
pop
xor
rol
scas
out
push
jmp
ret
cmp
mov
sub
mov
jmp
push
cwde
addr16
push
add
das
mov
cmp
repnz
jl
repnz
test
out
jl
add
push
mov
scas
sbb
test
adc
cwde
jmp
(bad)
push
ds
push
jge
stc
inc
xor
mov
push
jb
les
mov
or
int
push
(bad)
ins
ds
push
iret
js
ja
popf
pop
mov
adc
mov
ret
lods
aaa
xor
clc
xor
xchg
rol
test
push
xor
loop
repz
xor
dec
scas
adc
in
mov
leave
cmp
ins
rcr
fdivr
rol
out
sbb
and
mov
int3
push
pop
lock
clc
sbb
movs
mov
cmp
in
pop
mov
call
push
xor
retf
fisttp
sbb
push
ins
jbe
ins
in
xor
sub
out
dec
enter
pop
or
(bad)
mov
ins
jnp
arpl
mov
call
out
mov
and
jmp
inc
outs
pushf
pop
pusha
loope
(bad)
loopne
pushf
mov
cli
push
rcl
fwait
inc
pop
lahf
cwde
mov
cmp
aad
into
popa
dec
dec
outs
sub
push
cmp
arpl
sar
fwait
cli
enter
test
jns
fdiv
mov
imul
push
in
xor
cmps
fimul
sbb
cmp
sbb
pop
aam
sbb
icebp
and
mov
jbe
pusha
aam
add
int3
mov
pop
out
enter
icebp
pop
(bad)
mov
call
jnp
fs
retf
mov
call
push
pop
cld
sbb
leave
rcl
test
pop
data16
adc
jmp
addr16
adc
xchg
outs
dec
cmp
movs
ret
push
jb
(bad)
adc
inc
inc
push
adc
bound
(bad)
jge
leave
and
fwait
inc
adc
enter
ins
sub
pop
retf
jl
sbb
pop
ja
(bad)
mov
test
cwde
pop
hlt
push
into
imul
dec
mov
retf
cmp
sub
out
test
div
mov
mov
dec
cmp
or
adc
push
pushf
pushf
pop
aaa
cs
dec
add
add
mov
setb
outs
pusha
mov
jg
push
push
test
fst
mov
jno
mov
mov
jb
js
sub
ins
mov
stc
jno
scas
inc
arpl
cmp
sbb
xchg
rcl
lahf
inc
adc
int
or
out
jl
ret
jmp
imul
mov
add
xchg
pushf
retf
popf
daa
sub
xchg
pop
ret
xchg
leave
pop
jl
lahf
mov
div
jmp
shl
loop
xchg
pusha
lods
daa
xor
push
dec
dec
(bad)
jmp
ror
xor
xchg
daa
cwde
mov
xchg
(bad)
fs
fmul
aaa
jbe
sbb
in
jns
loope
inc
mov
dec
push
mov
pop
lahf
push
cmps
push
fisub
inc
sbb
dec
sbb
mov
(bad)
aas
push
popf
cmp
sbb
nop
xchg
push
xchg
outs
xchg
repz
pop
cmp
mov
and
icebp
popa
test
push
sbb
hlt
popf
pop
jbe
fwait
ins
cmp
xchg
lods
arpl
cmp
jo
xor
daa
jne
pop
pcmpgtd
dec
clc
les
pop
dec
sub
and
xchg
cs
xor
(bad)
adc
arpl
pusha
cdq
sbb
enter
xchg
repnz
dec
add
mov
fwait
push
pop
imul
lea
jmp
sbb
enter
(bad)
das
ret
jb
mov
enter
inc
jne
fs
push
(bad)
adc
dec
gs
add
inc
mov
(bad)
mov
out
mov
xchg
pop
scas
cmp
adc
inc
xchg
imul
fidiv
pop
jno
pusha
jecxz
in
jmp
fwait
nop
cmp
mov
sahf
rcr
or
and
pop
xchg
outs
mov
iret
push
imul
iret
mov
repnz
jbe
cmp
inc
arpl
les
imul
xchg
xchg
or
cli
mov
(bad)
jb
mov
xchg
inc
jmp
dec
jge
lahf
jl
outs
call
je
sbb
call
sbb
fsubr
xor
movs
fimul
mov
pushf
or
fmul
mov
jmp
mov
imul
xchg
xchg
lahf
lds
xor
cdq
retf
mov
loop
loope
mov
fwait
jmp
push
lahf
push
jecxz
int3
sahf
aaa
addr16
pop
cmps
dec
bound
aam
popf
inc
sbb
shr
aam
inc
clc
sti
aaa
xor
adc
pop
pop
ret
mov
sti
cmc
jns
mov
aad
sbb
sahf
add
pop
rol
into
adc
sub
push
das
pop
test
push
outs
test
test
stos
jae
ja
clc
cdq
movs
mov
jecxz
sub
xchg
aam
and
xchg
xlat
jecxz
ja
mov
imul
loopne
xor
movs
pop
shr
or
fcmovu
inc
xchg
fimul
adc
mov
pop
ss
pop
push
imul
add
mov
sar
add
mov
bound
mov
bound
aam
iret
jnp
cmps
sahf
mov
mov
xchg
cmp
jg
jge
loopne
and
int3
lahf
mov
jnp
je
aad
push
jmp
and
jg
adc
or
pusha
imul
and
adc
daa
hlt
jg
inc
clc
pop
mov
xchg
xor
mov
je
cmp
jb
test
(bad)
jae
push
lods
push
jae
(bad)
aas
xor
out
retf
jl
add
add
retf
mov
aaa
xchg
(bad)
cmp
ret
(bad)
jmp
test
test
push
inc
cmp
pusha
scas
paddusw
xchg
adc
xchg
push
fcmovnu
sahf
call
imul
pop
arpl
pop
in
cmps
cli
pop
aad
call
inc
mov
jae
jbe
xchg
jb
pop
add
sub
das
pushf
jbe
test
pop
pushf
cmp
jecxz
or
mov
add
daa
(bad)
repz
xchg
sbb
cwde
cmp
or
dec
mov
jl
out
inc
mov
sahf
dec
pushf
cmp
retf
cli
pop
mov
sbb
out
lods
inc
imul
adc
dec
rcr
call
movs
dec
fstp
push
xchg
fild
pop
(bad)
xor
cdq
test
movs
ret
sub
push
jnp
adc
push
call
xchg
ret
pop
inc
jle
adc
jb
add
push
cmp
nop
mov
retf
fwait
jmp
push
xchg
int
jmp
fwait
loopne
sbb
ds
dec
pushf
ss
inc
jp
or
sub
xlat
push
jb
sbb
ins
fs
retf
jp
or
sub
xlat
test
xor
sub
mov
add
mov
arpl
jbe
xchg
push
fsub
and
jl
xchg
fwait
xchg
or
out
xor
mov
push
in
addr16
and
pop
jb
xchg
sahf
pushf
cmps
lea
xchg
movs
mov
mov
movs
sub
shl
inc
cmp
cmp
bound
dec
fild
jne
pop
sbb
sahf
xchg
mov
and
jle
js
retf
inc
push
and
test
lea
or
int3
xor
fistp
sti
hlt
arpl
push
and
test
xchg
pop
scas
fcomi
pop
sbb
and
imul
imul
add
and
push
addr16
sti
scas
mov
push
pop
lods
in
icebp
fcmovnb
lock
push
sbb
sbb
push
cmp
addr16
sti
mov
pushf
enter
pop
inc
jl
inc
popf
fucomi
pop
sub
jne
pop
jl
popf
retf
adc
stos
pop
imul
jecxz
and
or
popf
bound
and
pop
call
pop
pop
push
pop
cwde
sub
jecxz
push
imul
sbb
mov
pop
push
xchg
pushf
inc
pop
xchg
cmp
addr16
sti
arpl
cmp
bound
shr
jmp
pop
stos
add
adc
retf
xor
jecxz
es
sbb
push
loop
pop
push
retf
dec
pop
and
cmp
xor
ins
inc
mov
lods
es
call
jnp
fimul
mov
adc
or
mov
ror
mov
mov
mov
inc
xor
jle
sub
add
std
xchg
and
adc
mov
inc
ret
das
cmp
pushf
inc
popf
jbe
movs
fmul
out
pusha
xchg
cmc
dec
out
into
mov
mov
arpl
outs
shr
xchg
ds
dec
xor
loopne
sahf
mov
fnstcw
sbb
xchg
aas
xchg
(bad)
fild
(bad)
(bad)
test
and
push
fwait
mov
push
(bad)
push
out
pop
mov
or
icebp
bound
xlat
lods
inc
push
loope
pop
addr16
test
cld
in
xor
and
lods
adc
and
sub
mov
cmp
data16
adc
sbb
mov
inc
clc
push
enter
inc
inc
mov
push
scas
or
lahf
xchg
scas
sub
mov
adc
vmwrite
retf
push
retf
xchg
into
mov
inc
mov
stos
xor
sub
adc
ffreep
test
enter
add
pop
ret
xor
jle
or
cmps
mov
adc
or
push
pop
sahf
xor
mov
jno
jb
ret
lods
mov
mov
jmp
and
mov
inc
sahf
mov
and
fwait
lahf
sub
enter
mov
pop
enter
cmps
push
imul
push
dec
std
cwde
push
mov
in
cld
xor
sahf
js
inc
mov
neg
pop
(bad)
in
mov
popf
out
scas
ins
or
cld
aas
mov
push
imul
out
inc
jge
out
sbb
loop
xchg
cmps
retf
ins
les
sbb
in
call
aas
xchg
inc
xchg
repz
dec
ror
shl
jge
shl
std
pop
sub
popa
pop
inc
xor
dec
sbb
setae
push
(bad)
or
dec
mov
stos
xchg
add
push
mov
outs
inc
fcomp
add
pop
sbb
pushf
aaa
push
sti
aam
leave
add
packuswb
fcmovnbe
outs
or
call
dec
mov
arpl
aas
jno
jne
das
retf
jp
jp
pop
mov
or
mov
inc
xchg
sbb
inc
movs
adc
out
cs
in
mov
pushf
js
and
jge
scas
loop
rcr
lods
sub
iret
int
jnp
movs
in
jmp
and
fcom
sub
mov
xchg
mov
and
popf
mov
dec
xor
aad
js
mov
retf
out
lods
rol
call
shl
sub
jmp
call
sti
mov
outs
sysret
addr16
add
pop
inc
pop
sub
fimul
xchg
xchg
mov
push
(bad)
or
cmp
cmp
pop
xchg
mov
inc
in
ins
cmps
mov
mov
into
jmp
call
jb
popf
mov
adc
loop
rdtsc
cli
pop
outs
sbb
cmp
mov
iret
loopne
mov
pop
mov
std
stc
add
or
aaa
js
nop
out
pop
lods
lods
push
loope
addr16
jo
popf
pusha
push
mov
test
xor
in
inc
call
shl
jecxz
gs
jmp
add
push
or
popf
jmp
popf
ret
ds
ffreep
mov
sbb
dec
(bad)
adc
std
ins
dec
xor
scas
xchg
dec
and
lahf
push
adc
ins
push
lods
mov
jmp
test
mov
ror
hlt
or
push
pop
aad
push
lahf
mov
dec
mul
xchg
dec
pushf
push
cmc
and
xor
jecxz
mov
cli
pop
push
push
loop
fdiv
ins
pop
xchg
call
jl
mov
or
repnz
mov
push
add
dec
sub
ins
imul
cmps
push
out
imul
jne
push
jl
or
(bad)
and
adc
into
mov
push
pop
jg
xor
mov
scas
je
mov
pop
or
sub
cdq
adc
test
loop
movs
mov
push
xchg
call
inc
sub
cld
test
dec
das
sub
add
inc
in
adc
sub
aas
jno
xor
push
test
mov
das
repz
aad
nop
loop
test
sub
xchg
pop
mov
pop
mov
and
cmp
loop
pop
push
jb
(bad)
cmps
or
sahf
mov
mov
out
xchg
mov
push
in
or
gs
mov
jno
lods
in
sahf
inc
ins
add
repnz
add
lahf
not
leave
adc
imul
xchg
pop
fsubr
pop
mov
dec
xor
push
sub
fisub
iret
pop
jl
xchg
jl
jl
movs
jb
nop
jnp
pop
dec
add
push
ret
xor
sub
jae
inc
sub
int3
imul
arpl
popf
sub
out
cmp
sbb
add
sub
jns
inc
in
xchg
sub
std
shr
bound
ror
arpl
mov
pop
clc
int
sbb
or
cmp
cmp
push
imul
or
sbb
ret
repz
mov
call
push
mov
adc
ret
push
sub
data16
push
mov
cmp
mov
inc
adc
lahf
or
and
das
(bad)
pop
gs
test
push
jmp
fidivr
sub
mov
and
push
inc
cwde
cs
nop
and
dec
rol
push
(bad)
enter
mov
test
sub
sbb
push
fwait
adc
div
jb
adc
cmp
jp
cdq
inc
int
push
inc
loop
mov
xor
add
cmp
stos
aas
shl
fidivr
cli
inc
xchg
idiv
fistp
xchg
in
pop
ja
pushf
pusha
jbe
inc
leave
mov
int3
push
outs
inc
pop
lds
xor
jmp
out
dec
je
lahf
push
outs
jo
loope
dec
ins
in
add
jge
cmp
and
(bad)
js
mov
dec
mov
add
and
fild
and
jmp
fucomi
pop
jmp
mov
mov
inc
rcl
add
test
movs
inc
cld
sub
loop
jge
xlat
ret
scas
aaa
sub
imul
pushf
inc
outs
inc
push
cmp
call
out
and
push
dec
repz
imul
rcr
pop
sbb
pop
push
sbb
ins
jl
cs
sub
fsub
test
repz
push
or
daa
out
inc
xor
adc
mov
inc
add
cmp
iret
add
in
inc
jbe
es
mov
clc
movs
jmp
popf
cld
jns
mov
fsubr
mov
outs
and
mov
fistp
fs
nop
and
jmp
lahf
ins
outs
sti
pminsw
cs
and
lods
pop
lock
sub
cmc
mov
dec
add
aas
pop
add
pushf
adc
out
adc
adc
(bad)
and
inc
pop
xchg
hlt
out
fs
bound
adc
cmc
arpl
pop
jle
in
mov
lock
xchg
jbe
add
outs
cmp
mov
sbb
das
ins
cli
fwait
repnz
xchg
bnd
rol
mov
sbb
cmp
add
pop
aaa
cmp
out
movs
cmps
ds
pop
mov
ret
xchg
push
pop
sar
stos
and
scas
xchg
jecxz
je
aaa
sbb
ret
xchg
je
pop
jp
fnstsw
(bad)
jge
cmp
pop
or
iret
add
cdq
push
xchg
and
mov
fist
inc
mov
adc
mov
xchg
cmp
pop
mov
aaa
shl
mov
xor
ret
xchg
adc
test
push
int3
sbb
out
fisub
lahf
cli
test
loopne
ins
popa
jnp
pop
and
sbb
imul
mov
jbe
sbb
mov
push
stos
lea
mov
arpl
out
sub
mov
ins
cs
adc
dec
popf
dec
cmps
xchg
imul
pop
cdq
xlat
xchg
pop
sahf
push
inc
(bad)
rcl
loopne
rcl
js
movs
xor
or
adc
push
gs
and
cli
frstor
and
rcl
gs
mov
mov
popa
fidiv
out
stc
pop
rcr
xchg
les
addr16
call
pop
push
in
stos
xor
push
not
lods
mov
dec
push
xor
jp
mov
(bad)
adc
sbb
retf
sar
sub
and
or
outs
mov
add
xchg
daa
sub
pop
pop
xor
pop
pop
jno
sbb
adc
imul
test
fsubr
push
xor
jmp
mov
and
popa
jnp
mov
fild
or
pop
mov
nop
or
mov
dec
mov
hlt
jle
cs
jnp
in
into
ficom
mov
jge
sar
xchg
jns
test
addr16
or
lods
and
mov
push
fwait
scas
in
cmps
xchg
add
inc
pop
sub
jmp
pusha
inc
retf
mov
call
push
(bad)
fsubr
ficomp
test
loopne
pop
adc
ins
lds
push
or
dec
lahf
dec
jle
repz
pop
xchg
ins
(bad)
adc
pop
pop
bound
adc
cmp
mov
push
pop
imul
and
push
or
jno
xchg
add
xor
fsubr
or
adc
setp
pop
cld
cmp
lahf
dec
cmp
pop
(bad)
pop
bound
and
loop
add
xchg
xchg
hlt
ja
addr16
mov
xlat
stos
push
push
add
test
xor
push
sbb
pop
xor
rol
mov
sub
repz
mov
inc
xor
add
loopne
pop
pop
and
lods
sbb
lea
scas
jo
mov
lods
add
dec
cwde
sbb
or
sahf
data16
sub
mov
mov
ficom
xlat
leave
cmp
xchg
pop
fwait
aad
add
int
push
mov
in
jmp
ret
mov
fwait
jo
mov
in
dec
outs
jecxz
or
into
xor
sub
lock
das
test
inc
hlt
sub
mov
ins
sub
fdiv
pop
add
call
outs
pop
xchg
and
in
adc
push
sub
adc
movs
and
and
xor
outs
out
xor
or
repnz
cmp
jle
femms
mov
add
cmp
dec
adc
fisttp
mov
(bad)
pop
int3
mov
xor
xchg
outs
cmp
mov
push
in
(bad)
dec
mov
pop
and
aam
mov
cmp
nop
test
cwde
call
jl
aam
fbstp
xchg
sbb
mov
cmp
and
or
mov
ins
imul
mov
sub
fcom
sbb
mov
pushf
jle
js
cli
fbld
std
pushf
dec
mov
mov
pop
imul
ins
sub
ss
xchg
pop
arpl
leave
enter
sub
retf
in
xor
out
push
cs
pop
xlat
inc
daa
xchg
scas
retf
popa
adc
xchg
(bad)
ins
xor
push
clc
jnp
mov
jg
inc
loopne
cwde
sbb
popf
shl
nop
(bad)
lds
xchg
xor
push
jne
data16
(bad)
xchg
or
sub
cmp
jg
clc
aas
test
out
or
xchg
outs
push
js
test
pop
push
fistp
pop
jno
add
ror
xchg
push
daa
std
push
or
jmp
and
sbb
and
pushf
aas
cmps
movs
ss
iret
jo
cmp
jl
inc
cwde
adc
and
jmp
mov
test
call
push
ins
fimul
mov
sti
or
mov
mov
rcr
push
push
ja
pushf
(bad)
aas
mov
adc
cmps
xor
ret
int3
(bad)
imul
inc
ins
fs
stos
mov
pop
lahf
cmp
(bad)
fdivr
fs
xchg
sbb
jno
push
and
call
call
push
rcr
aaa
and
push
ret
jmp
in
pop
jmp
adc
out
fst
les
lahf
jo
push
fcmovne
mov
sbb
shl
movs
imul
clc
(bad)
popf
mov
xacquire
fld
repnz
sub
fnstsw
data16
movs
pop
push
retf
sub
lods
xchg
xchg
pop
outs
push
test
lock
push
and
call
mov
push
aam
imul
push
icebp
sub
addr16
inc
mov
mov
data16
sub
scas
and
mov
dec
xchg
daa
out
xchg
pushf
cmp
push
(bad)
jecxz
dec
sbb
std
fisttp
popf
ds
hlt
test
add
mov
jae
(bad)
xchg
shl
aad
js
and
jo
into
nop
sbb
scas
out
fistp
push
jnp
xor
jae
fwait
aaa
retf
jg
push
lods
sbb
cmp
inc
mov
sbb
push
mov
test
or
xchg
lods
jae
xchg
aad
addr16
fcom
les
xchg
sahf
lods
adc
popf
mov
mov
int
shl
cmps
push
call
add
mov
inc
add
xor
jmp
jle
sar
cmc
lods
jecxz
movs
rcr
push
aas
repnz
loope
call
int3
add
and
or
ror
loope
mov
sar
xchg
int
shl
dec
call
push
xchg
xchg
pop
fwait
mov
sub
cwde
shl
stc
out
dec
lds
pushf
pop
jle
mov
clc
push
imul
call
jmp
inc
js
test
jl
jbe
das
fist
stos
enter
out
daa
out
rcr
repnz
and
bnd
add
loopne
sub
inc
ja
sbb
jg
sbb
shr
mov
dec
and
sbb
jge
xchg
cmp
pop
sub
adc
dec
or
cmp
nop
xchg
pop
pop
clc
test
cmp
ja
adc
mov
es
sbb
pusha
inc
fcomp
call
and
push
daa
push
stos
bound
push
ins
call
mov
mov
mov
jle
and
addr16
mov
shl
xchg
sahf
dec
adc
lods
ja
pop
mov
jle
cmp
loope
mov
xchg
xor
sti
adc
dec
cli
arpl
add
pop
ds
js
aam
call
jo
shr
rcr
(bad)
mov
repnz
test
mov
pushf
add
dec
pop
int3
pushf
sub
addr16
arpl
cs
outs
pop
xchg
cmp
dec
shr
shl
cmp
enter
pop
movs
add
push
ins
outs
das
int3
adc
rol
adc
jmp
pop
hlt
pop
out
push
cdq
lods
jge
mov
shl
adc
and
stos
sbb
and
mov
pop
ds
fisttp
popa
ss
cmp
add
stc
mov
cmp
sti
xor
adc
push
fidivr
add
sbb
loopne
loope
ror
arpl
sti
add
jne
mov
test
call
sbb
popa
adc
stos
retf
imul
retf
push
sub
mov
jp
test
loop
xchg
mov
mov
enter
mov
fstp
imul
mov
retf
mov
inc
sbb
ret
repz
aaa
sbb
sub
or
push
aad
movs
(bad)
popf
mov
sbb
popf
cmps
and
pop
jbe
mul
cld
pop
and
into
test
js
sub
rol
mov
(bad)
loop
mov
pop
xlat
icebp
and
xor
inc
xor
test
fistp
and
xchg
add
add
sub
cs
sbb
das
sbb
out
inc
scas
into
outs
xor
call
loopne
adc
xchg
inc
push
lock
fbld
repz
movs
mul
scas
jmp
xor
mov
push
mul
fistp
xchg
(bad)
jg
test
xor
push
dec
pop
dec
jmp
fcom
enter
inc
xor
retf
push
mov
mov
mov
pop
or
cdq
test
enter
aaa
cmp
mov
xchg
or
fsub
adc
je
inc
sar
cmp
mov
sub
shl
sbb
push
inc
jbe
mov
mov
sbb
xor
out
dec
fisub
jne
lahf
push
ret
ja
sub
adc
gs
jbe
nop
xor
adc
pop
cs
jo
adc
xor
pop
mov
push
sbb
mov
jmp
aas
fsubp
inc
sub
fidivr
inc
in
dec
pop
fmul
stos
das
sar
and
pop
inc
jmp
fld
sub
nop
icebp
mov
sar
and
inc
sti
pop
and
out
stos
ret
mov
xchg
jmp
jge
inc
pop
cli
pushf
out
pop
imul
sub
ret
sbb
dec
mov
cmp
inc
fs
out
push
outs
ja
sbb
sub
adc
mov
mov
cwde
mov
xlat
fadd
int
inc
aaa
repz
aaa
movs
test
pop
mov
lods
bound
(bad)
pop
xor
adc
mov
sbb
lods
xlat
xlat
(bad)
mov
in
int3
lods
aas
sahf
pop
and
pop
dec
sahf
call
das
dec
inc
clc
pop
xchg
aam
outs
adc
call
test
cmp
rol
mov
ss
pop
mov
jg
cmp
mov
shl
pop
push
add
sahf
push
sbb
test
popf
push
repnz
daa
jns
pop
xor
pop
pop
add
adc
sub
leave
sbb
xchg
push
or
loop
sub
adc
adc
scas
jle
xor
iret
cvtpi2ps
movs
std
sbb
add
cli
add
mov
push
adc
ins
mov
sbb
sbb
mov
xchg
push
pop
addr16
mov
stos
inc
aad
jle
int3
cld
xor
adc
test
popf
js
std
lea
lods
pop
ja
cmc
adc
xchg
push
or
xor
jbe
mov
mov
(bad)
lock
(bad)
sbb
sbb
xchg
xchg
int3
add
scas
rcr
xor
pop
std
sub
jecxz
inc
(bad)
push
frstor
loope
dec
in
pop
int
xlat
add
inc
inc
je
jb
je
ins
sub
jmp
sbb
push
mov
loop
fisttp
mov
popf
(bad)
cld
outs
xor
push
add
icebp
fmul
retf
cmp
outs
sbb
adc
scas
add
std
scas
fild
ins
xor
xchg
cmp
pop
in
pop
pop
(bad)
outs
repnz
and
jne
pop
mov
lds
add
shr
ja
mov
mov
pop
mov
pop
retf
jae
dec
mov
call
adc
push
jmp
push
xchg
add
loope
aad
popf
test
(bad)
imul
pop
ffreep
push
loopne
(bad)
xchg
not
pop
pop
call
xor
jmp
jo
xor
mov
out
push
and
mov
js
jge
or
sbb
xchg
call
lods
or
dec
imul
ret
pop
sub
ds
pusha
xchg
es
sbb
cmp
in
ins
(bad)
mov
imul
std
push
jecxz
adc
adc
test
or
dec
dec
or
dec
loope
and
xchg
and
je
es
inc
es
dec
cmp
xchg
xchg
mov
sub
ds
push
loop
daa
popf
rcl
add
adc
jmp
cmp
pop
cmp
repz
adc
sti
stos
sbb
jecxz
popf
inc
ins
js
(bad)
(bad)
hlt
xchg
fnclex
cld
cld
ret
scas
in
aam
sub
in
sub
mov
mov
pop
sahf
sti
mov
jp
mov
xchg
dec
jge
pop
push
arpl
test
imul
pop
scas
jl
jg
pop
and
popf
xor
cmp
sbb
pop
or
fmul
jnp
les
imul
jg
pusha
cld
pop
sbb
fwait
jecxz
sub
cmp
sbb
xchg
cmp
pop
add
jmp
into
inc
add
retf
jp
sbb
aaa
das
cwde
ins
lahf
pop
aam
pop
push
fisttp
pop
jo
dec
fcmovne
(bad)
int3
repz
out
aad
ja
push
push
lds
jmp
mov
and
mov
addr16
xchg
xchg
mov
lock
mov
idiv
mov
aam
fwait
dec
mov
(bad)
adc
mov
cmp
imul
cmp
adc
pop
or
lea
cmp
leave
outs
dec
or
mov
retf
lahf
shl
mov
bound
bound
pusha
sbb
movs
sub
xchg
mov
cmp
and
xchg
sub
inc
sub
sbb
mov
cli
int3
in
xor
xchg
inc
mov
sub
and
into
sbb
jge
jmp
cmp
push
xchg
addr16
dec
cld
ss
sub
jnp
es
push
call
pop
imul
fucom
cmps
mov
add
cld
pop
add
gs
loop
push
sahf
pop
ins
cmps
cs
sub
movs
adc
push
mov
cmp
(bad)
pop
dec
pop
std
nop
adc
es
rcr
addr16
js
inc
mov
inc
dec
jge
lock
or
imul
adc
hlt
clc
pop
sahf
xlat
mov
aam
cmps
mov
dec
dec
adc
mov
mov
adc
test
jnp
mov
pop
shl
inc
cmp
push
jl
xlat
adc
movs
repz
aam
xchg
and
loope
rcr
inc
mov
xor
jmp
add
fstp
loopne
clc
sti
(bad)
fsubp
fs
adc
fsin
sub
ds
xchg
lds
cmps
out
xchg
(bad)
mov
jl
push
adc
cwde
arpl
pop
fisttp
shl
div
cmp
sbb
adc
sub
xor
scas
(bad)
ror
cmp
pop
mov
mov
popa
sbb
fild
cmp
fcmovnb
movs
pop
ja
mov
addr16
loopne
and
fsubr
inc
pop
xor
xor
mov
mov
es
das
sub
int3
xchg
adc
sub
sahf
call
pop
ret
int3
out
jo
les
push
fxch
loopne
rcl
pop
mov
out
ret
loope
push
cmp
push
and
loopne
int3
sbb
int
iret
bound
add
pop
dec
lods
add
cwde
imul
loop
call
pop
cmp
mov
adc
jecxz
dec
lahf
dec
pop
xor
retf
adc
xor
loope
push
push
aam
pop
les
je
sub
or
call
push
xchg
pop
dec
mov
dec
in
pop
aad
or
lods
mov
push
popf
cld
jle
retf
cmp
into
popf
adc
mov
push
xchg
cmp
fs
or
push
sub
rcl
dec
push
jno
mov
repz
fisttp
cld
and
in
inc
mov
ror
arpl
addr16
cmp
or
jp
xchg
cmp
mov
mov
fisub
jmp
cmp
jnp
cmp
inc
jg
push
dec
inc
ds
xchg
xchg
ror
adc
cmc
clc
or
nop
xchg
shl
cmp
aas
xor
cwde
push
pop
rcl
bound
(bad)
fadd
sbb
sbb
(bad)
adc
imul
repz
popf
pop
fcmovnu
(bad)
std
arpl
in
push
ds
ror
sbb
push
das
arpl
movs
retf
scas
ins
xchg
xor
inc
stos
pop
push
in
dec
jle
pop
mov
lods
call
xor
cwde
sar
loopne
sbb
and
mov
addr16
loope
into
mov
pop
xor
clc
mov
inc
mov
push
call
xchg
pop
pop
call
cdq
enter
loopne
stos
je
adc
fcomp
arpl
arpl
sbb
fdiv
vpackssdw
pop
push
std
mov
xchg
add
sbb
bound
xchg
shr
adc
push
test
pop
add
xchg
jl
sub
inc
jb
ss
xcrypt-ecb
cmps
mov
and
stos
fst
mov
add
mov
sub
jae
ins
imul
popa
inc
scas
data16
mov
xchg
(bad)
fnstcw
mov
out
mov
fwait
jns
std
idiv
cmp
test
mov
push
lds
lock
into
mov
sbb
jge
and
lea
out
sbb
fdecstp
repz
mov
mov
mov
(bad)
mov
inc
(bad)
inc
loope
or
cmp
xor
fwait
pop
pop
mov
es
out
sar
pop
mov
gs
jle
jecxz
jbe
jmp
or
mov
mov
push
retf
add
dec
pop
retf
jl
adc
mov
push
mov
mov
enter
or
sub
mov
test
pavgw
jmp
aas
push
call
mov
jmp
cmp
imul
cmp
test
cmp
add
pop
fwait
repz
ror
dec
pop
(bad)
lds
and
mov
imul
xor
gs
cwde
loope
fdivr
in
fadd
fs
scas
inc
inc
aas
cmc
aaa
mov
adc
sub
scas
push
dec
or
jo
packssdw
adc
jb
popf
push
pop
dec
cmp
push
test
aam
lock
jns
dec
and
shl
mov
movs
sahf
pop
in
add
push
call
cmc
cmp
pop
fst
mov
cmps
pop
(bad)
adc
nop
push
mov
scas
push
dec
jp
adc
hlt
aas
imul
inc
mov
sub
pop
add
icebp
jae
bswap
outs
cmp
mov
enter
xchg
les
lahf
mov
test
push
push
popa
fcmovu
dec
jle
xor
fisubr
fadd
ja
mov
and
push
out
lods
mov
(bad)
ss
adc
leave
fidivr
inc
int
mov
inc
pop
cli
iret
stos
cmp
shl
and
sti
adc
mov
imul
xchg
rcr
lods
pop
cmps
cmps
jecxz
scas
nop
dec
push
jno
pop
pop
aam
std
inc
adc
out
pop
adc
fisttp
fbld
repz
xor
sti
into
push
and
or
gs
xchg
pop
pop
clc
inc
mov
and
mov
pop
pop
sar
enter
push
outs
mov
and
adc
ds
(bad)
shl
mov
adc
jge
fdivr
or
(bad)
arpl
pop
loop
je
inc
mov
hlt
cmps
mov
repz
(bad)
push
shl
sbb
test
test
dec
sub
cmps
jbe
pop
ja
jne
push
cld
xchg
xlat
(bad)
dec
fwait
jb
pushf
shl
or
add
movs
sbb
imul
clc
in
cmp
push
mov
sbb
addr16
xchg
cwde
ffree
and
mov
adc
pop
jecxz
xor
push
cmp
xchg
cs
iret
jnp
dec
jb
in
je
pop
int3
adc
sub
or
mov
les
push
mov
call
outs
jmp
mov
jb
jmp
leave
adc
dec
(bad)
jb
jno
ja
mov
out
mov
xor
inc
jb
adc
das
inc
add
shr
pop
pop
call
dec
out
(bad)
add
jbe
daa
outs
(bad)
rcl
in
daa
cdq
repz
xor
std
dec
out
xor
mov
cmps
and
xor
and
(bad)
sbb
out
mov
sub
out
xor
lods
cmp
stos
test
and
push
shl
inc
add
add
aam
mov
outs
jl
movs
push
sbb
stos
cmp
out
push
dec
dec
cdq
pop
leave
ins
ret
add
arpl
inc
scas
push
dec
pop
dec
jno
stc
scas
aaa
retf
mov
pop
sub
xor
dec
pushf
push
sbb
repz
pop
pop
loope
dec
xor
cmp
arpl
jb
mov
mov
xchg
icebp
mov
mov
pop
xchg
(bad)
and
mov
xchg
mov
mov
mov
out
arpl
scas
dec
pop
les
(bad)
dec
adc
daa
and
jle
sbb
jmp
dec
add
pusha
fwait
pushf
pop
sub
cli
out
mov
sub
call
mov
push
cmp
ret
aad
fucom
or
std
xchg
cwde
adc
rcr
inc
jecxz
lea
xlat
mov
and
fbstp
mov
cmps
fsubr
aas
out
mov
mov
fisub
aam
push
shl
or
pop
lods
push
push
push
scas
icebp
xor
add
mov
arpl
lea
push
in
inc
inc
jmp
(bad)
scas
sbb
mov
call
pop
cmp
sub
fwait
call
jp
std
test
fild
sbb
mov
stc
(bad)
push
adc
pop
xchg
leave
mov
push
in
(bad)
out
lds
ins
lds
and
cmps
and
add
int
pop
div
imul
adc
(bad)
push
fs
add
or
xchg
sbb
cld
dec
xlat
mov
(bad)
rep
jecxz
std
loopne
inc
pop
and
fwait
and
xor
outs
mov
cmp
sbb
and
stc
addr16
jae
(bad)
pop
xchg
(bad)
adc
dec
es
xchg
lahf
cld
jmp
push
xchg
push
daa
in
das
je
mov
xor
call
dec
retf
pop
aad
sub
sbb
xchg
scas
cmps
add
xor
scas
adc
(bad)
out
fdiv
sub
add
push
out
pop
jmp
lods
mov
xchg
(bad)
xchg
xchg
cmp
or
enter
addr16
adc
mov
stos
dec
(bad)
mov
popa
retf
sub
aad
dec
sbb
scas
inc
or
std
cmp
aas
enter
pop
jae
and
das
retf
es
popf
arpl
test
iret
cmc
aad
xchg
sbb
enter
push
pop
jb
xor
sbb
mov
xchg
xor
add
dec
xchg
ins
dec
pop
add
pushf
push
movs
sbb
icebp
cwde
retf
scas
dec
inc
into
mov
mov
cli
xchg
mov
imul
pop
mov
push
inc
inc
mov
jmp
pop
ret
sbb
(bad)
and
ds
adc
call
push
ret
mov
sub
imul
mov
ins
mov
push
test
fstp
dec
fcmovu
sub
daa
jbe
mov
fstp
aam
pop
jns
mov
push
xor
and
jl
push
loopne
movs
mov
pop
sbb
mov
aam
xchg
mov
aad
push
stos
mov
xchg
jg
or
pusha
adc
cdq
outs
xor
pop
sub
ins
loopne
fcomp
scas
jge
and
push
xor
pop
cmp
or
cmp
ret
push
add
pushf
gs
or
sti
mov
mov
jne
pushf
call
push
xchg
je
nop
cmp
push
pop
rcl
pop
jb
cdq
pop
cmp
gs
imul
fs
dec
cld
adc
popa
or
adc
jns
repz
xor
fdiv
mov
es
lea
jl
in
cmp
mul
cwde
xchg
and
(bad)
repnz
cmc
fsub
sub
scas
sub
mov
lahf
mov
jp
inc
mov
sbb
fs
(bad)
rol
cmp
scas
xor
cmps
in
popf
sbb
mov
mov
call
test
inc
out
into
int3
push
aad
js
inc
add
xchg
pop
fadd
jl
test
jl
dec
mov
adc
repz
inc
pushf
aam
push
push
sub
repz
push
push
pop
in
(bad)
xlat
adc
mov
imul
mov
mov
cwde
xchg
jmp
call
mov
or
leave
(bad)
mov
icebp
xchg
jmp
aas
aas
and
imul
in
call
adc
adc
dec
mov
pop
sbb
loope
mov
out
aad
iret
or
push
out
mov
outs
cmp
jp
pop
push
jnp
int3
inc
test
aas
scas
push
sub
sub
mov
and
push
(bad)
sub
imul
jae
mov
bound
jae
aas
call
push
xor
dec
adc
sub
nop
jne
shr
fcmovne
mov
(bad)
sub
cli
ja
cmps
stos
xchg
mov
mov
retf
cmp
es
jmp
xchg
pop
(bad)
mov
outs
jmp
clc
ror
push
sub
outs
xchg
add
nop
aas
xor
hlt
cmp
call
pop
hlt
and
fs
les
inc
(bad)
fs
pop
cmps
in
movs
sub
sti
ja
xchg
pop
cmp
gs
dec
adc
adc
bound
xor
jns
out
outs
movsx
js
push
fwait
lods
or
sub
sub
adc
bound
dec
cmps
je
fdiv
and
adc
out
fs
pop
je
and
inc
pushf
cmp
in
retf
cmp
mov
stc
(bad)
adc
icebp
sub
dec
cs
dec
jle
pusha
push
pushf
jmp
fmulp
lods
inc
test
push
in
lea
jbe
adc
loop
adc
sahf
inc
mov
jg
int3
fs
or
or
sbb
inc
xchg
iret
dec
ins
imul
sub
test
ror
pop
cmp
mov
sti
mov
mov
int3
inc
addr16
daa
loop
adc
rcr
cmps
not
cmp
add
pop
pusha
xchg
fld
adc
out
pusha
xchg
int
int
fsubr
out
out
(bad)
dec
pop
int
add
and
fucomp
jge
arpl
test
out
dec
cmp
inc
add
aam
xchg
xchg
jne
push
cmp
pop
mov
(bad)
adc
mov
xchg
test
ins
cmp
adc
dec
ret
ror
not
xchg
in
mov
or
xchg
xchg
popf
lock
push
fcomp
mov
push
xchg
adc
pushf
sti
arpl
loope
out
repnz
mov
loopne
scas
daa
cmp
sbb
stos
pop
mov
or
push
pusha
stos
sbb
(bad)
mov
sbb
fist
xchg
aaa
enter
mov
jb
mov
hlt
enter
jbe
inc
fld
inc
and
pop
sub
sub
(bad)
out
(bad)
ins
push
cmc
xor
pop
(bad)
mov
js
dec
sar
jae
add
push
movs
mov
call
mov
pop
jle
xchg
pop
mov
push
pusha
ret
jbe
cmp
xchg
sub
arpl
std
sub
ret
data16
stc
sbb
push
jl
(bad)
(bad)
mov
lahf
fpatan
dec
xor
and
add
imul
mov
(bad)
cld
cs
mov
adc
leave
ins
out
ret
pop
imul
movs
adc
mov
mov
inc
test
add
movs
gs
out
daa
test
xor
add
(bad)
sub
lea
(bad)
scas
cli
movs
mov
sti
add
lahf
sub
jmp
and
xor
pop
iret
rcl
mov
stc
aam
test
retf
push
rcl
(bad)
enter
(bad)
aad
sahf
std
and
cdq
dec
shl
fmul
int
push
jl
push
shr
pop
ins
ret
push
call
cmp
dec
pop
push
scas
mov
bound
mov
push
les
push
es
imul
fldcw
mov
xchg
jmp
and
adc
loop
adc
push
fwait
sbb
fwait
(bad)
cs
movs
ret
push
push
mov
stc
mov
sbb
and
call
clc
sbb
and
jno
cmps
add
aad
xchg
test
dec
add
xor
push
xchg
jae
xor
inc
mov
imul
and
inc
inc
lahf
jbe
scas
ja
popa
lods
rcl
aas
imul
test
xchg
loop
ins
push
gs
lahf
dec
div
arpl
add
xchg
add
inc
sahf
pop
cs
mov
dec
(bad)
cmp
(bad)
xchg
lahf
add
(bad)
(bad)
mov
sub
pop
mov
push
or
pop
fs
adc
std
xchg
ss
daa
push
ins
adc
push
inc
jns
call
sti
(bad)
mov
or
call
cmp
mov
push
mov
xor
sbb
push
mov
xchg
jge
inc
jmp
imul
mov
push
loop
lahf
ins
loop
(bad)
push
scas
pop
cs
ret
jle
pop
retf
jae
(bad)
sahf
fild
cmp
mov
sub
mov
or
adc
push
pop
movs
cmp
(bad)
or
sbb
dec
ret
stos
dec
cmps
dec
mov
mov
mov
movs
xchg
mov
fdivr
data16
pavgb
repnz
ret
cmp
pop
ja
mov
jg
cmp
sbb
into
inc
mov
push
data16
or
cld
and
mov
movs
pop
ins
or
imul
es
mov
pop
pop
jb
sahf
and
adc
rcr
and
fnstsw
adc
repz
fcmovnu
out
mov
out
fild
push
lods
sub
das
inc
push
add
jmp
or
enter
int3
into
jb
scas
cmp
adc
sbb
add
add
push
pop
outs
inc
inc
int3
lahf
push
dec
shr
mov
xchg
pop
repz
and
adc
add
pushf
cli
mov
js
scas
arpl
ins
mov
cmp
je
ss
fsub
xor
(bad)
imul
arpl
cmp
push
ins
retf
ret
push
pop
adc
inc
jmp
loop
push
sbb
adc
sub
cld
sbb
mov
jmp
dec
sbb
sbb
jnp
xor
add
ret
push
and
pusha
add
xor
cwde
cs
loop
xchg
inc
daa
test
xor
shr
mov
mov
sbb
scas
movs
pop
ret
das
or
int3
scas
pop
inc
mov
jmp
aas
adc
sbb
or
add
retf
cli
iret
sub
adc
push
into
push
push
retf
push
call
sub
cmps
jns
(bad)
stos
jmp
cmp
aam
dec
adc
sbb
push
pop
test
or
mov
mov
std
sub
cmp
icebp
jo
jb
add
and
or
sub
push
push
cmc
xor
jns
cld
mov
sbb
call
test
(bad)
xor
mov
stc
sbb
cmp
xchg
cmc
push
inc
pop
enter
in
cmps
sbb
sbb
std
test
mov
pandn
sub
rol
ins
mov
pop
xor
loop
fstp
(bad)
push
pusha
ja
inc
jnp
push
lods
sbb
inc
mov
xchg
pop
pop
(bad)
dec
pop
pop
cmp
dec
mov
ret
nop
in
add
ds
cmp
push
and
clc
xchg
cld
mov
dec
ds
push
and
out
rcr
mov
sti
pop
or
in
push
push
xchg
pop
ror
mov
shl
retf
mov
jmp
xchg
cmp
add
les
jbe
gs
repnz
push
call
mov
inc
pop
adc
test
push
mov
ins
repz
clc
sbb
mov
in
retf
sub
fnstenv
sbb
mov
pop
enter
out
lods
adc
sbb
jmp
cmp
mov
(bad)
out
pop
lods
jmp
add
icebp
fwait
or
sub
pop
cmp
push
out
out
lods
adc
adc
inc
cmps
in
aad
push
cmp
jg
fdivr
mov
in
(bad)
je
xchg
stc
pop
dec
and
push
cmp
dec
and
jle
enter
mov
sbb
cmps
mov
inc
pop
scas
sti
bound
les
cmps
fist
pop
pushf
inc
mov
mov
add
ds
dec
mov
out
loop
add
out
mov
inc
das
rcl
push
jo
pushf
mov
aaa
stos
imul
aaa
retf
xchg
fmul
push
fistp
cli
add
dec
inc
sbb
inc
pushf
adc
push
sub
xor
(bad)
xchg
inc
or
(bad)
or
fdiv
dec
loopne
cmp
sbb
repnz
push
mov
loop
jl
(bad)
movs
cli
lock
cmp
outs
fmul
xchg
imul
ss
pop
shr
sahf
iret
mov
jmp
enter
ror
pop
jmp
pop
push
pop
jge
cld
pop
push
addr16
(bad)
adc
call
push
add
mov
js
lahf
mov
int
sbb
test
(bad)
jmp
jmp
ds
pop
jecxz
in
sbb
dec
adc
mov
ficomp
or
test
lea
out
int3
cmp
popf
add
lock
sar
fidivr
cld
dec
mov
mov
xchg
jns
icebp
push
pop
jg
int3
dec
sub
and
das
dec
and
xor
in
adc
adc
sbb
xchg
push
sub
(bad)
mov
dec
sbb
fisttp
xchg
mov
int
aas
aaa
push
outs
outs
shl
jl
jnp
sub
add
(bad)
int
fsubr
xchg
push
in
lods
js
xchg
jecxz
sub
xchg
bound
jecxz
jl
adc
(bad)
or
aas
mov
mov
jge
fwait
push
(bad)
push
push
cmp
and
pop
ret
add
ud1
pop
(bad)
aad
fidiv
mov
jmp
dec
push
push
sub
in
mov
loopne
popa
mov
dec
in
inc
mov
push
(bad)
sahf
cld
push
mov
lds
add
shl
movs
push
jmp
jmp
push
es
mov
mov
or
test
sti
lahf
inc
and
xchg
frstor
push
jmp
mov
je
or
dec
xor
ficom
lds
pop
adc
xchg
adc
repz
sub
push
or
or
push
div
lock
or
stos
bound
dec
neg
test
mov
add
or
dec
mov
mov
cld
dec
mov
mov
mov
out
aam
jge
pop
movs
call
dec
sub
fstp
mov
cmp
hlt
adc
jmp
scas
lods
dec
adc
jns
dec
mov
popf
jmp
int3
adc
ja
addr16
xor
cdq
or
jno
pop
in
mov
shr
cdq
pushf
cmp
ja
and
push
xor
cdq
dec
xor
mov
nop
ret
test
sbb
and
popf
mov
inc
sub
pop
jle
xchg
pushf
xor
sub
xchg
xchg
daa
inc
mov
push
or
clc
xor
in
and
xchg
fild
rol
rcr
jl
push
push
pop
add
iret
sbb
push
and
mov
adc
test
mov
adc
cwde
jecxz
in
retf
pushf
ds
popf
sub
rcr
retf
sub
cmp
fcomp
aam
mov
jecxz
sti
sti
scas
xor
ins
into
add
jae
sbb
aam
jg
adc
cli
in
xchg
sub
scas
sub
mov
retf
daa
mov
clc
xchg
sbb
cs
out
lahf
in
push
push
sbb
add
push
ret
xchg
test
scas
sub
xchg
mov
add
pop
pop
xor
lea
jns
jp
pop
jg
retf
inc
mov
in
in
mov
jo
dec
sub
cmc
clc
xor
cmp
add
mov
pop
(bad)
fwait
in
retf
jns
ret
mov
out
aaa
outs
movs
push
pop
stos
push
daa
xchg
rol
jae
and
or
and
and
test
in
ror
or
adc
mov
sub
jnp
ds
arpl
sub
push
dec
cmp
pop
cmp
mov
aam
pop
sbb
mov
clc
adc
sub
sbb
jecxz
ins
fdiv
xlat
les
sub
sbb
jmp
cmc
mul
xor
popf
pop
popa
cmps
(bad)
push
clc
inc
inc
add
stos
fs
adc
sahf
cmp
mov
enter
xor
sbb
ins
mov
adc
xor
dec
imul
dec
es
mov
pop
cdq
mov
mov
add
cmp
xchg
adc
push
xchg
ds
cmp
mov
mov
push
sbb
mov
cli
imul
push
jl
xor
fadd
push
retf
(bad)
out
cmp
xor
cmp
ret
std
pop
nop
daa
ss
xor
mov
clc
mov
fs
or
jmp
mov
int3
imul
adc
push
cmp
pop
sahf
mov
retf
dec
push
fadd
fs
mov
stos
push
ds
ins
cmp
inc
inc
dec
retf
fadd
sub
xchg
push
iret
mov
lock
mov
rcl
adc
leave
shl
cmp
outs
push
jg
gs
sub
cmp
stos
lock
shl
js
loopne
cld
cmp
rcr
adc
cmp
mov
add
adc
mov
mov
cmp
xor
hlt
push
mov
fadd
dec
jge
gs
inc
xor
add
sti
(bad)
push
sbb
or
inc
mov
cmp
mov
fst
mov
pop
adc
cs
sbb
lods
cmp
sub
out
adc
mov
lods
mov
adc
or
jmp
and
or
push
push
and
iret
leave
xor
in
xor
mov
sub
bound
dec
jnp
adc
inc
push
mov
push
in
cmp
ror
int
stos
call
cs
in
outs
test
sub
ja
fdivrp
jecxz
and
jmp
out
retf
jnp
out
sbb
sub
pop
ins
jg
out
or
test
std
inc
sti
imul
enter
pop
nop
inc
es
xlat
test
push
sbb
pushf
lahf
sbb
xchg
out
int
ds
aam
(bad)
mov
mov
pop
sahf
(bad)
pop
adc
rol
xchg
inc
nop
dec
xchg
mov
dec
fcom
and
xor
ror
jecxz
pushf
aas
sbb
xor
les
jbe
jns
cmp
xchg
mov
cmp
sbb
sbb
mov
xchg
lds
das
ja
stos
ror
mov
clc
sti
stos
jno
add
sbb
jge
jbe
cmp
pusha
cwde
inc
jb
popf
dec
xchg
jmp
add
mov
outs
push
bswap
mov
inc
mov
sbb
xchg
mov
imul
pop
sub
xor
xchg
mov
sub
int3
iret
js
inc
pop
mov
mov
cmps
xchg
adc
stos
in
imul
pop
xchg
jb
imul
dec
xchg
jg
pop
add
sub
jae
push
mov
dec
cmp
mov
iret
mov
addr16
daa
lods
jecxz
mov
push
mov
test
mov
adc
push
inc
outs
xchg
inc
daa
push
cli
int3
sbb
jp
xor
jb
mov
xchg
cs
and
sub
repz
jl
ret
cwde
push
sahf
cli
xchg
mov
lods
jp
mov
and
out
push
in
push
ret
fidiv
lahf
pop
fsubr
retf
mov
xor
outs
ror
sbb
call
xchg
push
pop
sahf
mov
pop
int
call
sbb
pop
xor
cli
outs
jb
shr
enter
vfrczss
lds
or
jnp
sbb
inc
and
pop
call
mov
dec
aaa
popf
and
retf
pushf
ffree
cmp
or
pop
add
test
je
stos
cmp
xor
sti
jnp
push
jno
sub
icebp
call
sub
pop
std
mov
arpl
dec
pop
push
add
lahf
sbb
addr16
fld
in
dec
jno
jb
add
xchg
push
pushf
paddsb
lahf
push
scas
fstp
pushf
mov
mov
cmps
pusha
cmp
mov
bnd
xchg
lea
or
jmp
cld
push
xchg
dec
sub
pop
sbb
sub
fs
mov
cmc
mov
add
dec
sbb
add
ds
dec
cld
sbb
push
mov
sub
bound
int
in
clc
mov
mov
aaa
push
lds
add
loopne
xor
fst
cmovle
outs
sahf
sbb
test
dec
inc
dec
das
inc
pop
addr16
sub
dec
inc
test
add
adc
in
fs
xor
test
jge
mov
xchg
stos
das
sub
aaa
imul
adc
push
add
xor
jmp
dec
daa
out
mov
arpl
dec
cmps
aad
(bad)
nop
fbstp
aaa
out
mov
repnz
clc
dec
push
sbb
out
rol
and
xor
scas
rcpps
(bad)
stc
in
sbb
dec
pop
jmp
push
jp
out
mov
cli
jbe
dec
mov
add
pop
xchg
repz
inc
push
stc
push
mov
pop
adc
sbb
jge
inc
xchg
cmp
test
cwde
pusha
jp
setb
(bad)
dec
pop
push
jbe
add
mov
mov
dec
add
rcr
daa
imul
or
sub
jl
sbb
not
jge
idiv
dec
and
imul
out
das
fcom
call
jno
shl
sahf
icebp
dec
dec
sub
mov
stos
iret
mov
and
js
test
xchg
cmp
dec
daa
inc
(bad)
adc
into
aam
dec
add
dec
jo
js
cld
(bad)
sti
retf
hlt
(bad)
mov
xor
push
pop
fwait
mov
dec
mov
push
(bad)
mov
(bad)
pop
imul
mov
xchg
push
arpl
lock
ins
sti
scas
sti
dec
clc
fimul
fsubr
in
mov
int3
pop
push
pop
mov
and
fst
jae
sbb
mov
arpl
rol
or
cdq
pop
mov
into
outs
je
fimul
mov
sar
out
mov
fisttp
inc
js
btr
jg
jns
mov
pop
push
in
sub
call
dec
std
out
out
mov
clc
fcom
xchg
call
mov
and
or
sub
xlat
data16
adc
test
xchg
test
push
dec
test
cs
cmp
jmp
mov
xlat
push
mov
jge
clc
frstor
dec
inc
fwait
push
ds
scas
sub
cmps
into
fild
jb
adc
test
push
fs
and
movs
push
push
cwde
hlt
stos
lods
mov
ss
mov
in
xchg
in
sub
mov
imul
sahf
cwde
out
std
adc
(bad)
es
repz
sahf
mov
push
sub
dec
or
xor
jg
cmp
neg
aam
sbb
rcr
push
lahf
pop
arpl
pushf
ret
sbb
pop
rol
jp
lods
jae
iret
dec
call
std
cmp
daa
pop
les
mov
vmread
pop
repz
add
mov
mov
push
add
ds
xor
je
pop
dec
push
adc
scas
pop
xchg
ret
daa
xchg
sbb
pusha
lock
retf
lods
into
xchg
addr16
push
or
adc
xchg
and
repz
aam
bnd
add
das
fwait
or
gs
jnp
pop
invd
inc
movs
push
push
clc
fwait
sub
push
mov
popf
jmp
sbb
pop
inc
sub
out
mov
fistp
push
dec
in
jmp
cdq
pop
ins
jne
xchg
jnp
push
(bad)
jmp
pop
inc
xchg
mov
sbb
out
sti
and
je
cmp
mov
int3
adc
sub
shl
int3
imul
outs
cli
mov
push
mov
inc
mov
into
push
leave
mov
test
xor
sbb
cmp
cmp
xor
aam
jmp
fdivrp
lahf
adc
rcr
sub
dec
push
sbb
or
rol
fild
push
les
push
retf
fnstsw
ficomp
mov
daa
jp
cmps
jne
int3
xor
add
outs
mov
push
xor
inc
xchg
rcl
jo
mov
movs
jb
std
sbb
(bad)
lahf
pop
ret
hlt
imul
shr
arpl
sub
fs
xor
adc
push
std
jns
sub
pop
xchg
fist
adc
jnp
sub
sbb
loop
lock
outs
or
inc
and
push
sub
or
mov
and
pop
retf
push
add
mov
ret
in
stos
push
fistp
cmp
rcl
lock
jmp
aam
(bad)
push
jp
pop
push
push
adc
xchg
inc
(bad)
sbb
outs
inc
xor
mov
or
xchg
das
cmp
push
and
int3
xchg
arpl
loopne
lods
or
enter
imul
out
loopne
xor
popa
dec
jnp
jbe
repnz
push
adc
rcr
add
sbb
pop
nop
ins
stos
cmp
dec
jb
nop
push
loop
push
shl
jl
sub
or
mov
adc
imul
shr
nop
shr
retf
sbb
sar
imul
sbb
loopne
add
pop
inc
push
addr16
sbb
mov
gs
(bad)
out
lods
imul
xchg
and
jo
mov
adc
aam
sub
cmp
std
ret
sahf
push
repz
ret
and
arpl
mov
pop
stc
icebp
pop
outs
ins
icebp
out
add
push
jo
pop
and
jb
xlat
add
mov
inc
push
iret
jmp
pop
and
(bad)
mov
call
(bad)
into
sbb
jle
or
daa
sbb
pop
dec
mov
call
jnp
hlt
dec
adc
pop
loop
loopne
jle
adc
ja
in
fcmove
dec
inc
and
imul
arpl
push
bound
add
mov
aas
push
inc
mov
inc
scas
sahf
add
(bad)
popf
(bad)
dec
lahf
mov
es
adc
push
repnz
cmps
and
mov
fimul
int
lock
mov
repz
in
retf
pop
sbb
pop
(bad)
fwait
pop
stos
push
cli
mov
stos
adc
fcmovu
sbb
inc
sub
in
hlt
rcr
cmp
sbb
push
xor
aam
add
adc
mov
jp
add
inc
mov
jge
outs
daa
mov
aam
pop
mov
imul
adc
sti
popf
in
pop
clc
mov
(bad)
sbb
mov
hlt
pop
aam
push
add
in
aam
aad
sub
fst
push
(bad)
(bad)
inc
mov
inc
cmc
add
je
into
mov
std
sub
mov
push
arpl
scas
fmul
fsubr
cdq
dec
bound
sbb
sub
out
dec
xchg
call
sbb
shr
out
lds
and
adc
inc
stos
push
nop
push
sub
sahf
ficom
nop
cmp
cmp
jne
mov
adc
xchg
dec
xchg
in
pop
into
dec
sar
les
push
outs
in
cmp
aas
sub
push
pop
inc
sbb
mov
and
cmps
push
call
setl
sub
push
fmul
test
sub
cmps
xchg
pop
sar
push
xchg
push
mul
cmps
jb
mov
push
adc
push
xchg
imul
fcomp
shl
sbb
sahf
dec
or
imul
test
(bad)
out
mov
push
sahf
leave
jb
pop
sbb
mov
mov
repz
xchg
xor
mov
cli
mov
jg
pop
jmp
scas
call
xor
retf
mov
mov
loope
mov
daa
add
pop
mov
(bad)
hlt
lea
icebp
jno
out
mov
and
dec
inc
call
add
inc
into
push
sbb
cmp
jns
in
mov
rcr
cmp
mov
mov
fnstenv
sbb
mov
call
(bad)
jmp
dec
not
out
fwait
pop
jns
mov
xchg
jno
loope
std
aaa
(bad)
aas
(bad)
aad
outs
mov
mov
out
call
sub
jg
icebp
icebp
xchg
imul
inc
mul
lock
dec
retf
bound
mov
jle
xor
in
sub
fnstenv
mov
call
mov
pop
xor
jecxz
mov
mov
xor
ret
or
(bad)
in
ss
call
ja
mov
push
pusha
rol
(bad)
out
push
jl
xchg
inc
adc
sbb
mov
(bad)
push
in
fld
es
jo
sbb
dec
mov
xchg
popa
(bad)
and
add
jp
lea
int
jae
in
xor
xchg
ret
sbb
add
bndldx
bound
cwde
and
jnp
sub
and
jle
js
xor
in
call
inc
xchg
fiadd
or
or
arpl
(bad)
icebp
das
jp
sbb
stc
jg
xor
adc
leave
fsub
adc
out
mov
sub
and
jnp
dec
xor
int
fstp
dec
xchg
cmp
in
fadd
stos
dec
push
sub
cmp
inc
dec
retf
add
mov
mov
movs
cmp
pop
in
rcr
scas
dec
repnz
or
stos
adc
test
inc
arpl
outs
into
bound
lods
pop
imul
sbb
push
in
xchg
imul
or
cwde
mov
mov
adc
mov
mov
jb
imul
data16
or
jmp
sub
mov
outs
sbb
ds
fcom
push
movs
pop
and
shl
xchg
push
js
cmp
ds
fs
cmps
fwait
hlt
dec
lods
pop
jp
gs
das
jb
data16
imul
and
xor
repz
jge
bound
jecxz
fdivr
imul
adc
lahf
imul
mov
leave
fsubrp
dec
jb
or
jmp
movs
push
in
mov
adc
push
sahf
jg
sbb
sbb
hlt
jne
lods
das
dec
pop
lods
push
push
and
ficomp
mov
imul
ds
stos
mov
in
ins
push
xor
sub
dec
fs
mov
pushf
in
jmp
ins
cwde
sub
lock
pop
inc
movs
mov
cwde
adc
mov
int
jns
scas
nop
dec
stos
cmps
sar
mov
sub
sub
ret
ds
mov
or
aad
rcr
inc
sub
retf
or
leave
cmc
arpl
push
in
call
xor
sti
cmps
fwait
push
jbe
test
cmc
jg
mov
xchg
pop
sub
clc
mov
mov
aam
add
push
repz
sbb
mov
pop
inc
or
sub
test
push
popf
repz
xchg
in
mov
dec
pop
fisubr
push
movs
inc
adc
pushf
les
(bad)
pop
mov
push
enter
clc
stc
stos
mov
sub
repnz
sub
lock
inc
sub
cmp
pushf
std
cmp
outs
repnz
xchg
je
mov
jns
(bad)
or
pop
jns
mov
xor
mov
mov
pop
aam
sahf
pop
sbb
jge
cmps
iret
sbb
test
xchg
nop
xor
(bad)
mov
push
push
dec
xor
ja
pop
fld
mov
in
mov
pop
ja
push
push
clc
outs
xor
sbb
mov
(bad)
jns
sub
popa
cmp
ins
mov
sub
pop
ins
loope
aaa
loop
test
out
pop
out
adc
test
mov
stc
ret
add
push
jp
mov
jne
adc
ins
and
cdq
xchg
pop
and
mov
cld
(bad)
call
push
imul
sub
xchg
popf
dec
inc
pop
ret
cmp
fmul
sub
jnp
mov
out
adc
daa
iret
(bad)
and
fisttp
cli
and
call
leave
cmp
pand
xor
(bad)
(bad)
nop
mov
inc
dec
loope
push
inc
fisub
dec
sbb
(bad)
xchg
in
xor
arpl
mov
and
dec
loopne
push
cmps
adc
cmp
adc
jns
repnz
rcl
xchg
cs
push
nop
or
pop
mov
aaa
fsubr
(bad)
retf
out
rcr
jmp
cdq
mov
das
and
ins
and
rcl
call
add
mov
std
repz
pop
hlt
sub
or
mov
push
imul
movs
lods
jns
mov
mov
pop
icebp
mov
xchg
cmps
dec
adc
add
xor
dec
rol
bound
dec
pop
call
aaa
loopne
mov
mov
xchg
fcomip
cmp
jge
add
bound
or
mov
adc
(bad)
jno
fisub
jecxz
xchg
call
addr16
jle
push
repnz
xchg
in
pop
xchg
mov
into
sbb
dec
pushf
ds
mov
or
bndldx
xchg
cmp
or
repz
in
test
xor
jmp
xchg
cmp
mov
mov
ror
sbb
aaa
(bad)
adc
fwait
xor
mov
(bad)
fisttp
xor
fdivr
daa
outs
jl
push
ds
or
ins
loop
scas
lds
sub
aad
rcr
xchg
ds
xor
and
fldenv
mov
xor
xchg
mov
mov
inc
xor
bound
and
mov
inc
and
pushf
mov
icebp
jp
sub
sbb
mov
scas
in
(bad)
ins
dec
jmp
pop
jb
imul
mov
xchg
fild
(bad)
pushf
xchg
cmp
add
daa
push
es
dec
mov
sub
popf
jle
pop
jge
call
(bad)
mov
xor
sbb
lods
pop
and
jne
cld
inc
sub
imul
and
aad
popf
sbb
ss
scas
lahf
lea
xor
lahf
shr
pop
push
or
jp
dec
shl
cmp
out
cmp
push
daa
cli
dec
pop
das
les
xchg
fist
sbb
xor
mov
mov
loopne
pop
sub
xor
sub
lods
xchg
fst
mov
lock
cdq
loope
cld
je
fisub
mov
pop
bound
enter
rcr
(bad)
scas
jnp
lods
into
aas
test
shl
sub
mov
push
imul
push
enter
jb
cmp
nop
and
cmp
and
push
movs
xchg
aas
dec
out
ins
inc
popf
pop
xor
ror
jne
push
sub
mov
hlt
lahf
pop
or
jle
je
sahf
jge
scas
jnp
les
lods
mov
stc
repz
push
inc
dec
pop
or
sub
cwde
fidiv
pop
mov
in
nop
push
mov
sbb
rcr
cmps
mov
xlat
pushf
sahf
or
push
pop
arpl
movs
dec
fistp
add
xor
sahf
fs
in
sub
sub
mov
inc
daa
clc
push
fwait
imul
sti
jecxz
(bad)
pop
data16
jp
inc
mov
sub
sbb
cmp
scas
out
rcr
into
jmp
fucomip
sbb
lods
push
clc
lahf
push
stos
aad
cs
sbb
in
aad
stc
jae
pusha
bound
test
sub
iret
test
fcmovu
(bad)
mov
inc
add
std
dec
adc
ret
loop
adc
movs
cdq
pop
pop
ins
lahf
dec
shl
sar
inc
cmps
aam
inc
mov
idiv
iret
inc
repz
leave
cli
scas
pop
inc
cmp
and
mov
out
js
or
pop
xor
clc
xchg
sub
jge
iret
inc
inc
pop
inc
and
adc
jne
popa
and
daa
mov
push
mov
fwait
xchg
cmp
jb
cmp
xor
mov
fdivr
jp
outs
pop
mov
ins
jb
pushf
retf
bound
pop
lea
xchg
sbb
jo
clc
daa
add
push
repnz
adc
mov
lea
ficom
dec
sub
out
outs
mov
int
sahf
push
mov
lea
cmp
arpl
das
dec
mov
ins
inc
retf
xor
xchg
push
jge
nop
ins
add
stos
sub
test
(bad)
jg
pop
add
cmps
std
or
mov
push
lods
ins
ret
pushf
push
cmp
and
sbb
int3
out
call
fsubr
and
fist
pusha
popf
pusha
pop
repz
push
xchg
xchg
sti
and
xchg
cmp
sub
mov
adc
ret
sti
jge
pop
std
xchg
loop
and
into
(bad)
adc
test
imul
sti
cmp
jge
scas
cmp
fdiv
aaa
mov
xchg
aaa
pop
nop
popf
adc
and
retf
es
sub
adc
int
adc
call
pop
call
mov
push
or
or
or
pop
mov
pop
push
pop
ror
test
mov
call
adc
test
shl
repz
adc
jle
push
sbb
mov
pop
mov
fisub
or
hlt
arpl
in
pop
shr
sub
mov
cmc
lea
dec
inc
mov
mov
ins
mov
rcr
pop
aad
addr16
push
fild
shl
gs
inc
std
mov
push
adc
nop
xor
shl
jmp
jmp
fsub
sub
mov
add
jae
in
fwait
push
xchg
std
xlat
sub
adc
ja
das
sbb
sbb
js
jecxz
jecxz
pop
ret
xchg
push
imul
xchg
enter
jbe
mov
xchg
fisttp
rcl
stc
inc
mov
add
les
movs
(bad)
pusha
lods
and
bound
sub
pop
mov
mov
test
dec
ds
test
mov
sbb
and
lahf
sbb
retf
xchg
test
xchg
jno
clc
cli
lea
jne
xchg
cmp
call
xor
or
pop
dec
popa
mov
call
ja
xchg
xchg
ficomp
lahf
mov
out
xchg
das
(bad)
adc
mov
(bad)
dec
xor
mov
fwait
add
sbb
test
mov
ins
sbb
cdq
pop
xchg
xor
test
cmp
jge
shl
retf
mov
mov
dec
jno
cmp
pop
or
dec
sub
call
pop
add
loope
outs
retf
and
mov
repnz
dec
ficom
cmp
lea
xor
push
adc
push
mov
cmp
inc
adc
mov
mov
push
cmp
out
adc
in
ja
xchg
mov
push
neg
test
iret
jo
imul
inc
shl
std
ret
adc
test
mov
push
or
shl
icebp
in
imul
push
mov
sbb
fild
push
ins
out
rcl
imul
fidiv
mov
imul
pop
push
retf
pop
mov
fstp
call
fdiv
pop
out
push
pop
aas
iret
cmp
pop
into
lods
cmp
push
in
sbb
adc
pop
pop
jl
pop
ror
lahf
data16
neg
dec
jnp
cmp
in
sbb
xchg
sub
ret
xchg
push
add
or
add
ret
or
lock
xchg
test
cmp
aam
jmp
ja
cli
mov
lahf
mov
ret
shr
iret
test
pop
gs
sub
xchg
mov
mov
cmps
pop
lahf
jmp
or
mov
loopne
mov
movhps
dec
adc
inc
sub
sbb
stos
xor
repz
stos
ins
fidivr
fst
and
ret
iret
adc
call
ds
scas
jae
and
pop
pusha
pop
dec
mov
xlat
fcom
adc
and
and
push
rol
adc
pop
js
out
mov
xchg
lahf
enter
popf
ss
cmp
sub
aas
cmp
cmp
call
scas
xor
jge
(bad)
sbb
ud2
call
rol
pop
cdq
not
inc
jecxz
shl
sbb
mov
inc
jmp
mov
gs
imul
jg
xor
fnsave
pop
es
add
aas
adc
mov
cmc
fcmovnbe
adc
retf
frstor
cdq
test
lea
jmp
clc
pop
out
lea
or
or
xor
mov
ins
jb
xlat
inc
popa
sbb
stc
xchg
loop
imul
sqrtps
sti
pop
fwait
ss
aam
sbb
and
sbb
mov
mov
bound
pop
int3
sahf
push
sbb
xor
sbb
das
add
mov
bound
clc
sub
pushf
cmp
imul
aad
jp
sbb
cmp
sbb
mov
jmp
into
aam
int3
lea
adc
imul
mov
sar
cmp
sub
ret
sar
fcomp
xchg
xor
jl
loope
cmp
jae
rcr
pop
sbb
lea
movs
dec
push
test
adc
jb
jl
outs
pushf
jg
cmp
sub
shl
sbb
(bad)
cvtpi2ps
mov
sti
jp
pop
repnz
push
cmc
das
imul
ds
xchg
loop
stos
es
in
call
adc
jmp
or
cs
cwd
test
lock
shl
or
das
pop
push
out
cmp
cmp
xchg
add
inc
aam
int3
push
mov
push
daa
das
test
push
inc
mov
data16
push
or
adc
jno
dec
mov
in
shl
ret
sbb
stc
and
repnz
inc
pop
mov
lods
jae
adc
and
icebp
mov
cwde
xor
or
out
jo
(bad)
mov
pop
rcl
jp
mov
ins
mov
jecxz
popf
sub
jne
adc
mov
ds
aaa
pop
adc
xchg
sub
ins
pop
js
adc
into
in
push
outs
repz
retf
ins
cmp
aaa
dec
sbb
test
fistp
xor
(bad)
(bad)
jb
xchg
jecxz
lea
call
push
cmp
jae
lock
xor
pop
sahf
or
xor
inc
daa
out
xchg
xchg
popf
push
(bad)
das
scas
in
lds
ja
jnp
outs
ret
mov
push
xchg
(bad)
ins
pusha
shl
xchg
push
and
cmp
or
pop
xlat
adc
pop
jmp
pop
xchg
pop
outs
xchg
scas
cwde
mov
out
sahf
(bad)
movs
stos
mov
pop
nop
and
cwde
adc
xchg
jmp
jle
lea
dec
and
dec
xchg
adc
cmp
pop
push
cmp
mov
(bad)
cli
or
rcl
adc
in
pop
imul
dec
add
push
sbb
inc
inc
adc
xor
mov
popa
add
mov
cmps
hlt
jno
sbb
stos
ja
sub
cwde
cmp
dec
ror
mov
pushf
shr
sahf
push
popf
lods
add
adc
gs
push
mov
addr16
jbe
pushf
aas
scas
(bad)
adc
aam
pop
inc
dec
xchg
ret
sti
retf
hlt
xchg
sar
mov
(bad)
pop
xchg
ins
mov
push
lods
or
xor
inc
mov
fistp
aad
cmp
sub
mov
xchg
adc
inc
sbb
je
scas
imul
retf
cmp
sub
aaa
xlat
sahf
imul
adc
je
fsub
mov
aam
inc
jne
mov
popa
imul
mov
xor
gs
imul
push
dec
pop
(bad)
push
sub
mov
sub
cmp
jecxz
(bad)
rcr
push
loopne
and
mov
cmp
push
cmc
mov
fldcw
dec
mov
movs
mov
sbb
fild
push
push
test
mov
arpl
icebp
sbb
outs
dec
sbb
sub
cwde
mov
ja
sbb
retf
into
lgs
cmp
sti
nop
push
mov
mov
icebp
je
int
retf
cmps
pop
int
fmul
push
fistp
add
ja
pop
fidivr
adc
(bad)
or
outs
dec
fldcw
add
cmp
push
pop
cs
lds
pop
retf
adc
xlat
inc
adc
scas
jb
imul
mov
fistp
pop
add
sub
retf
lds
ret
pop
sbb
fst
xchg
pop
mov
mov
bound
add
shr
jbe
sbb
cwde
leave
inc
lahf
retf
dec
scas
enter
mov
mov
dec
out
xor
test
add
retf
dec
mov
and
ins
dec
call
mov
adc
adc
sar
sbb
mov
push
mov
out
cmps
shl
cmp
mov
push
aad
hlt
xchg
nop
push
cwde
push
(bad)
out
bnd
imul
je
pop
mov
aam
jmp
clc
push
int
aam
mov
mov
bound
inc
call
lods
out
pop
mov
aam
inc
retf
inc
lahf
and
fst
mov
inc
out
and
add
mov
in
mov
mov
adc
sahf
push
shl
mov
push
mov
xchg
aaa
(bad)
fcomp
test
out
cmp
dec
fistp
out
jb
fimul
pop
nop
test
aaa
(bad)
popf
int
cmp
jb
je
cmp
loope
pushf
mov
test
shr
sbb
shr
or
in
jae
dec
push
(bad)
dec
ret
jmp
or
adc
gs
inc
inc
outs
dec
mov
je
mov
cs
hlt
push
rol
repz
ins
scas
mov
(bad)
out
mov
and
data16
or
add
add
adc
div
cmp
fwait
out
(bad)
retf
pop
xchg
mov
fxch
sti
or
out
data16
enter
mov
xchg
fisttp
call
sub
and
cs
stc
sub
pop
mov
xchg
push
adc
add
scas
in
fidiv
stos
cs
lods
inc
stc
ss
loopne
mov
das
pushf
cld
fistp
jp
jl
adc
push
or
out
cmp
aas
(bad)
stos
nop
ds
and
add
jmp
aam
enter
iret
sbb
popa
pop
pushf
jne
cld
mov
repz
stos
mov
das
ret
jl
call
test
xor
ss
xor
into
(bad)
adc
adc
call
movs
sahf
push
pop
pop
rcr
mov
cs
jb
shr
bound
mov
(bad)
outs
sbb
xchg
shr
or
test
fiadd
jle
jb
cs
lock
add
mov
add
test
int3
xchg
jo
or
add
mov
icebp
pop
push
dec
add
sub
mov
(bad)
call
push
(bad)
out
adc
mov
arpl
add
enter
add
adc
(bad)
call
outs
mov
pop
mov
or
ror
inc
in
arpl
jl
or
push
adc
out
data16
lods
mov
clc
sub
jns
jl
popa
fdivr
cmps
pop
shl
xor
xchg
scas
push
retf
and
cld
pushf
pop
inc
xor
dec
inc
and
ja
pop
mov
sbb
jmp
jbe
and
jl
dec
pop
dec
mov
cwde
sub
cwde
into
pop
fs
xchg
inc
call
adc
bsr
retf
(bad)
mov
xor
neg
rcr
test
xor
xchg
inc
inc
fistp
test
imul
push
test
jmp
std
mov
mov
mov
icebp
dec
loope
cmps
dec
mov
scas
dec
in
xor
dec
aam
and
jae
fst
imul
sbb
cmp
inc
neg
ds
jl
je
and
cmp
les
sbb
int3
mov
loopne
push
addr16
dec
ret
sbb
cmp
mov
mov
cmc
pop
cdq
(bad)
adc
aas
dec
xor
xor
movs
sti
popf
pop
mov
jo
and
push
in
lahf
xchg
mov
data16
sbb
aam
sbb
(bad)
jp
les
or
mov
fld
dec
inc
sbb
inc
push
es
inc
push
test
push
stos
fucompp
in
push
retf
call
sahf
scas
addr16
mov
mov
sbb
mov
pop
pop
push
sub
push
bound
push
outs
(bad)
es
fiadd
loopne
jmp
loop
xchg
js
lds
push
sub
rcl
mov
mov
outs
jmp
mov
xchg
mov
sub
mov
ins
fs
pop
outs
fs
lahf
mov
loopne
out
adc
pop
hlt
pop
mov
ins
cmps
xor
int3
nop
mov
jp
xchg
mov
addr16
out
pushf
mov
add
push
cli
aas
adc
sbb
dec
aas
stos
mov
ja
in
(bad)
jbe
out
fwait
cmp
fstp
push
jbe
push
mov
adc
arpl
jge
jmp
sbb
push
shl
int
pop
jo
jle
pop
mov
adc
push
bound
sbb
test
in
into
pop
fwait
int
inc
int3
sahf
fadd
arpl
sti
imul
shl
(bad)
shl
outs
jle
shl
mov
inc
clc
sti
inc
cmp
lahf
xor
lds
sub
fdiv
pop
add
pushf
sahf
ja
mov
dec
lods
pop
mov
jo
imul
stos
or
in
cmp
pop
sub
rcr
sbb
aas
fwait
int3
and
mov
out
fstp
retf
(bad)
retf
adc
adc
shr
fs
pushf
ficom
mul
sub
lds
mov
or
shl
imul
mov
push
add
repz
cdq
push
sahf
fistp
ror
xor
pop
fistp
xor
mov
lahf
iret
scas
pop
sub
adc
or
clc
into
je
stos
dec
adc
jl
je
and
cli
dec
out
xor
dec
push
fcmovu
jnp
shl
inc
push
stos
inc
fstp
outs
aaa
inc
mov
dec
jmp
xor
mov
or
(bad)
into
pop
fcomp
sbb
jmp
pop
bound
rcr
popf
rol
pop
inc
in
sahf
ss
add
js
inc
jl
pop
mov
outs
imul
retf
push
xchg
mov
adc
and
jno
(bad)
dec
daa
aam
addr16
jg
push
mov
jne
sti
xor
push
repz
ret
arpl
inc
inc
arpl
fwait
out
arpl
dec
(bad)
je
dec
arpl
inc
faddp
(bad)
(bad)
arpl
pop
js
adc
push
jmp
cmp
pop
pop
adc
or
hlt
rcl
or
dec
xchg
xor
sahf
nop
pop
and
js
mov
mov
sub
mov
shl
mov
mov
js
pop
sub
pop
sbb
xor
push
xor
shr
int3
retf
mov
in
fisub
out
fwait
shr
mov
(bad)
xchg
std
and
in
push
movs
hlt
out
or
mov
xchg
fwait
jo
fwait
mov
jo
sbb
push
jp
fucomi
call
dec
sub
sbb
add
xor
repz
jae
sbb
int
mov
or
push
ret
push
aad
or
mov
loop
jnp
in
sbb
ja
je
xor
dec
fs
lahf
outs
js
leave
mov
and
ins
gs
int3
and
push
aad
jmp
xchg
mov
in
mov
cwde
inc
push
push
ins
into
fwait
jns
cwde
stos
out
jl
(bad)
mov
xor
mov
in
mov
rcr
jnp
lahf
aas
pusha
ja
jnp
jne
cld
sbb
ins
add
repnz
xor
cdq
je
mov
push
adc
scas
cmc
aad
cdq
into
inc
mov
das
add
sahf
sahf
xchg
in
cdq
(bad)
loop
jl
add
sti
imul
sbb
xor
test
cs
pop
pop
mov
sbb
rcr
sbb
xor
cwde
pop
arpl
add
cli
in
(bad)
fbld
mov
adc
mov
and
push
jno
adc
jne
call
sub
push
ss
xchg
or
gs
mov
mov
pop
xchg
mov
push
and
and
imul
js
cmp
ret
add
push
pop
cmps
jno
(bad)
js
cdq
push
arpl
xchg
push
and
pop
adc
ja
add
xchg
outs
inc
xor
dec
jl
cmp
and
int
xlat
popa
mov
inc
dec
out
push
push
arpl
pop
lock
sub
dec
jnp
xchg
(bad)
or
(bad)
inc
mov
pushf
mov
push
push
dec
in
and
pop
xchg
cdq
rep
out
mov
je
jnp
push
fnstcw
retf
mov
mov
hlt
les
dec
pop
xchg
xchg
repnz
retf
jne
jle
jecxz
sub
retf
cwde
mov
test
and
inc
int
jae
jb
mov
dec
push
aaa
push
movs
pusha
and
mov
aad
loop
imul
mov
ja
xor
push
fisub
or
mov
xor
or
pushf
mov
retf
stc
mov
jbe
outs
pop
sub
adc
idiv
fbld
push
jge
(bad)
clc
pop
inc
call
mov
sbb
cmp
dec
cmp
lahf
shr
jnp
ret
call
sti
cdq
ficom
inc
rcl
out
sahf
inc
mov
(bad)
int
push
js
cmovs
and
pop
mov
fild
arpl
push
lods
push
mov
call
stos
cmp
and
leave
jno
cmps
imul
(bad)
push
in
(bad)
sbb
push
pop
in
dec
or
xchg
mov
int3
mov
lods
push
cld
sbb
arpl
mov
jmp
dec
jne
jmp
adc
test
push
in
adc
xor
test
pop
ins
sbb
shr
push
or
sbb
xchg
push
fsub
vpunpcklqdq
call
sahf
mov
cmp
outs
lock
dec
adc
sub
pop
pop
xchg
shl
call
nop
sahf
jae
test
int
inc
popf
push
(bad)
adc
or
mov
add
aad
ja
lds
mov
mov
popf
cdq
sbb
dec
mov
sbb
adc
in
movs
(bad)
pusha
dec
inc
xor
jae
fdiv
fnstsw
pop
and
pop
mov
mov
bound
and
pop
mov
retf
pop
sbb
xor
add
push
call
pop
mov
lahf
cmc
outs
mov
or
int3
test
mov
cs
xchg
mov
mov
cmp
inc
dec
cdq
sahf
idiv
cmp
fimul
lods
xchg
retf
xor
jle
retf
inc
mov
ror
jmp
mov
mov
mov
jns
sar
xchg
out
mov
lock
pusha
mov
cmp
push
dec
inc
jo
sub
out
aam
sub
mov
arpl
pop
mov
inc
pop
cmps
sbb
in
xchg
lds
imul
dec
dec
je
or
sub
cmp
xchg
inc
sbb
xor
push
push
inc
xchg
sub
sar
fist
(bad)
popa
sbb
mov
cmps
cli
retf
and
sbb
jb
(bad)
cld
es
inc
into
pop
mov
xor
mov
dec
mov
cwde
sbb
out
pop
cmp
dec
mov
daa
sbb
and
or
cmp
cmps
pushf
neg
add
cdq
dec
cmp
(bad)
fsubp
dec
rcr
jp
xchg
push
push
pusha
aas
lods
sub
jne
scas
add
out
fwait
add
xchg
imul
cmc
in
div
es
ss
les
cmp
fcmovnb
xor
mov
pop
retf
jg
inc
loop
mov
pop
outs
hlt
fldcw
pop
(bad)
jl
pop
dec
jge
call
pop
nop
mov
lods
loope
imul
movs
mov
sub
push
mov
iret
sub
fcmovnb
sbb
or
addr16
add
int
cmp
lea
test
fisttp
mov
or
xor
test
cwde
inc
mov
push
lahf
mul
mov
mov
lods
mov
inc
mov
xor
scas
cmp
fwait
push
call
xchg
mov
pop
std
arpl
fisttp
icebp
call
sar
fist
mov
retf
add
mov
in
ss
push
arpl
arpl
retf
fnstenv
imul
cmp
pop
jge
hlt
adc
jmp
cmp
iret
lods
xor
pop
(bad)
fbstp
jo
pop
fisttp
fist
popa
loope
cdq
scas
inc
dec
loop
fisttp
je
fsin
hlt
mov
pop
repnz
inc
lahf
dec
fs
int3
shl
test
pop
pop
ror
or
pop
sub
sbb
mov
pop
and
lea
idiv
sub
mov
add
inc
enter
sbb
jmp
add
cdq
jae
inc
fwait
add
js
movs
jmp
pop
push
cmp
inc
push
mov
xor
iret
push
lds
mov
addr16
inc
dec
mov
shl
call
dec
sti
jne
xor
pop
in
mov
data16
nop
push
fwait
imul
dec
das
out
mov
mov
hlt
test
(bad)
inc
addr16
cmp
clc
test
cmp
add
mov
adc
adc
cmc
push
(bad)
cmc
fcomp
fwait
daa
adc
xor
pop
retf
cmps
test
jl
nop
call
inc
(bad)
cwde
movs
int3
adc
shl
inc
(bad)
push
mov
jmp
mov
aaa
pop
push
popa
adc
inc
xchg
mov
mov
jns
push
mov
(bad)
push
cmp
lea
pop
sub
xchg
movs
pop
adc
shl
rcl
mov
mov
pop
fnstenv
push
shr
(bad)
adc
stos
push
or
xchg
das
mov
dec
jl
test
push
or
in
cmp
in
adc
icebp
test
add
inc
(bad)
inc
push
mov
push
hlt
and
push
mov
dec
in
into
pop
add
jmp
push
(bad)
mov
pop
shl
pop
sar
lods
(bad)
sar
dec
add
mov
mov
das
imul
push
rcl
int
clc
cmp
sub
js
inc
fadd
sar
push
ficomp
fidiv
icebp
sbb
out
loop
cmp
int
stc
clc
mov
xlat
neg
jle
fdivr
test
mov
cmp
sbb
inc
das
jnp
push
ffree
outs
xchg
xchg
stos
and
inc
jnp
inc
jbe
fisttp
mov
jle
add
and
daa
outs
imul
dec
sbb
xor
ins
retf
dec
or
dec
imul
add
std
cmp
js
scas
xor
pop
and
fwait
hlt
dec
shl
xchg
fdivp
(bad)
loop
sar
ins
inc
jg
dec
adc
imul
mov
int3
mov
push
inc
xchg
cdq
icebp
sbb
(bad)
out
not
jmp
lock
retf
add
pop
xor
(bad)
xchg
fmul
push
loop
mov
lea
push
loop
and
lds
and
inc
sbb
ins
mov
stos
sub
cmp
adc
jmp
mov
(bad)
clc
js
adc
sahf
aas
ds
jge
cmp
subps
xor
enter
out
stc
jge
add
outs
dec
inc
cmp
jb
pushf
cwde
push
push
movs
pop
pop
jb
xor
xor
pop
xor
lods
pop
clc
lods
sahf
mov
adc
adc
arpl
and
int3
mov
sbb
jo
add
fistp
je
mov
nop
push
pop
jmp
dec
push
inc
repz
(bad)
push
jle
in
test
xchg
imul
ret
test
dec
ficomp
cdq
jae
loope
xchg
rcl
les
out
xor
push
cmp
arpl
and
jg
mov
adc
inc
arpl
sti
ins
mov
sub
or
inc
bound
scas
pop
sbb
adc
lods
js
scas
rcr
(bad)
mov
jp
dec
dec
push
out
add
push
xchg
and
sub
inc
and
xor
rol
mov
sti
sbb
and
or
and
dec
jmp
inc
mul
and
sahf
push
nop
push
jl
push
in
hlt
adc
(bad)
adc
ja
jnp
mov
scas
je
popa
mov
adc
xchg
xor
cld
imul
(bad)
push
pop
pop
inc
ret
sbb
mov
adc
push
xchg
and
in
push
and
repz
clc
rol
jmp
hlt
sar
xor
ins
push
cld
adc
jb
pop
addr16
nop
and
or
(bad)
xchg
mov
std
retf
inc
jge
lahf
or
and
xor
mov
hlt
and
push
aas
cdq
repz
jb
sahf
xchg
addr16
xchg
cmps
fwait
dec
adc
mov
and
mov
ret
adc
aad
xchg
repnz
retf
shl
pop
mov
and
in
pop
adc
jmp
adc
cmp
mov
inc
pop
movs
dec
in
push
hlt
push
jmp
pop
cmp
js
arpl
retf
push
fdivp
mov
pop
pop
lahf
idiv
adc
cmps
sahf
pop
add
push
loop
and
mov
mov
cdq
in
jmp
ins
pop
dec
push
xchg
mov
add
pushf
ins
ins
jecxz
ret
mov
xchg
retf
ret
in
scas
and
mov
jge
jns
dec
cmp
mov
sub
cmp
aas
push
adc
sub
out
fistp
xor
sar
dec
pusha
cli
xchg
inc
nop
jp
mov
jno
xor
xchg
jecxz
xchg
adc
movs
es
adc
aaa
pop
mov
std
push
xor
add
test
lock
cmc
or
jmp
adc
fmul
mov
dec
call
mov
mov
mov
push
mov
xchg
(bad)
or
aam
jmp
mov
loopne
(bad)
popf
(bad)
movs
nop
add
sub
xor
cs
shl
fimul
fbstp
or
(bad)
mov
gs
div
in
mov
pop
adc
sbb
loope
sub
test
retf
sub
scas
cmp
adc
js
push
mov
push
adc
bound
cmp
mov
cmp
pop
push
ja
data16
les
and
cmps
xchg
icebp
mov
mov
test
das
out
jl
aam
es
test
push
out
add
mov
sbb
cld
jb
mov
mov
test
outs
add
test
int3
cmp
xchg
adc
inc
sub
xchg
movs
adc
xor
pop
mov
cmps
movs
aad
jmp
aad
ret
adc
sbb
add
and
pushf
popf
push
fsubr
(bad)
cwde
ret
aam
add
xor
mov
fxch
cmps
fcmovnb
shr
push
daa
xchg
jbe
push
shl
and
lods
xor
sub
mov
test
fwait
xchg
mov
fstp
js
inc
sub
jbe
loope
pop
pcmpgtw
jge
gs
fcmovbe
sub
sti
frstor
jg
sub
sbb
adc
test
and
mov
jl
mov
rcl
mov
xor
or
call
fild
jmp
call
push
stos
inc
ret
cmp
ss
ds
add
ja
inc
mov
sbb
push
push
jne
mov
mov
movs
je
inc
xor
mov
jg
dec
lahf
xchg
(bad)
push
mov
cmp
repz
nop
jp
retf
xchg
shr
add
dec
(bad)
mov
gs
push
push
and
adc
arpl
aad
sbb
adc
int3
mov
fst
xchg
scas
js
add
fiadd
scas
push
out
retf
iret
popf
cld
mov
inc
shr
fistp
in
mov
ret
adc
xchg
add
scas
mov
fdiv
add
sub
popa
jmp
jge
cmp
ret
inc
repz
xchg
shr
(bad)
cmpps
adc
mov
sbb
dec
sub
push
dec
cwde
aas
xlat
and
mov
dec
arpl
addr16
inc
sub
sub
or
outs
ror
cli
out
inc
sti
fnstcw
mov
or
imul
bound
clc
cli
loop
ret
icebp
mov
add
push
pop
jno
xor
cmp
add
inc
jb
or
dec
in
xchg
adc
std
wrmsr
hlt
dec
add
mov
pop
jbe
push
pop
dec
jb
pushf
jae
lods
cdq
mov
adc
jl
das
rcl
sub
inc
xor
sar
adc
lea
xchg
pop
hlt
dec
sbb
lock
jbe
inc
aam
pop
xchg
jmp
jo
inc
cld
sbb
xchg
mov
out
push
call
aam
cmp
inc
jo
bound
fisttp
addr16
pop
jl
loopne
xor
cmps
dec
aaa
popf
mov
add
add
int
mov
adc
fistp
pushf
or
test
lea
outs
outs
stos
es
or
adc
mov
adc
push
add
inc
cli
and
sub
clc
pop
xchg
jmp
pop
xor
stos
mov
xor
and
cld
pop
out
mov
inc
sub
xor
icebp
scas
icebp
cmps
dec
mov
out
dec
mov
jmp
or
sub
cmp
test
movs
adc
hlt
popf
adc
sub
das
clc
xchg
hlt
inc
jo
call
xchg
iret
js
push
and
cmp
iret
sbb
les
adc
mov
xchg
icebp
fistp
add
mov
sub
lods
aad
cmp
jbe
sahf
xor
sbb
cld
pushf
out
or
and
inc
cmp
jge
fld
je
jbe
lahf
jmp
adc
and
add
je
sti
adc
loop
int
jo
mov
cld
inc
mov
jns
fcom
push
cmp
fld
lahf
cmp
cdq
adc
mov
jbe
mov
jg
daa
mov
ss
std
push
call
aad
cmps
mov
fdivr
div
icebp
push
sub
(bad)
arpl
leave
fld
loop
mov
sbb
lock
adc
and
sub
ror
xor
out
daa
rol
popf
loopne
mov
inc
popf
ror
out
aad
mov
or
clc
jmp
sbb
sub
cmp
push
mov
add
adc
mov
retf
sbb
xchg
xor
xor
dec
add
iret
iret
sub
outs
xchg
in
add
push
scas
ja
and
pop
inc
mov
stos
movs
cmp
push
popf
aad
outs
mov
pop
sahf
lods
in
sub
pop
mov
shl
ins
mov
xchg
std
pop
out
stc
cmp
ins
(bad)
xchg
(bad)
stc
jb
aad
mov
outs
cmp
and
mov
pop
jecxz
mov
inc
mov
lods
mov
call
inc
pusha
cli
adc
xchg
jns
sub
add
push
jle
fcomp
sbb
(bad)
pushf
or
mov
xor
mov
pusha
xchg
push
cld
sbb
pop
(bad)
repz
fcomip
out
pop
xor
xor
push
mov
in
arpl
not
in
icebp
xchg
in
retf
xor
iret
outs
inc
(bad)
popa
scas
stc
adc
adc
push
enter
dec
pop
push
fs
jmp
push
cmp
cdq
aaa
(bad)
push
mov
dec
dec
jmp
dec
mov
fisubr
(bad)
dec
xor
mov
test
rcl
mov
sub
jg
jmp
add
push
adc
xchg
sub
pop
pushf
jmp
sub
popa
adc
dec
fwait
das
xchg
cdq
dec
loope
push
outs
ret
add
pop
lods
jle
sbb
dec
cmps
xchg
dec
and
mov
xchg
adc
push
lods
aad
out
inc
and
fild
and
or
push
add
or
outs
sar
or
in
les
std
push
mov
push
adc
pop
aad
push
pusha
retf
fdivr
daa
mov
cmp
xchg
jo
outs
and
pop
mov
cmc
jne
retf
dec
jns
mov
mov
test
je
ss
sbb
jge
fdivr
sub
outs
icebp
xor
xor
xor
push
dec
jge
aaa
cld
std
addr16
or
sbb
push
pop
fmul
xchg
mov
jle
xchg
(bad)
cwde
test
retf
sub
loop
and
lahf
push
(bad)
(bad)
jb
neg
retf
mov
mov
rcl
jne
inc
stos
lahf
popf
pop
push
jl
sub
dec
jge
pop
push
sar
dec
lahf
adc
pop
out
iret
jl
pop
ret
xor
aad
rol
add
lods
cs
mov
loop
and
jmp
cmp
pop
push
pop
movs
bound
in
mov
jae
rol
push
xor
push
push
xor
cmp
int3
xor
jmp
mov
retf
pop
adc
jp
push
xor
scas
push
jp
adc
iret
push
mov
cmps
jmp
cli
mov
xchg
addr16
repnz
xchg
add
mov
dec
xchg
daa
retf
outs
xchg
sub
inc
mov
movs
add
pop
hlt
xchg
(bad)
fiadd
jne
data16
jecxz
cld
data16
(bad)
lds
fwait
push
mov
mov
sbb
add
xchg
loop
arpl
call
xchg
sub
xor
pop
aad
imul
add
mov
(bad)
jmp
xor
clc
sub
dec
mov
movs
sbb
jmp
mov
leave
lahf
inc
loopne
dec
push
fisttp
out
inc
clc
outs
out
sbb
in
ja
out
iret
push
je
das
es
iret
mov
cmp
mov
loop
imul
and
push
loop
call
sar
jne
pop
fs
leave
pop
mov
out
mov
cmp
scas
ret
or
es
adc
xchg
addr16
pop
cmp
iret
sbb
pop
jo
sbb
rol
test
shr
outs
sbb
xchg
mov
int
push
popa
aas
mov
xchg
out
push
and
test
inc
mov
cmps
jmp
cs
dec
das
(bad)
loop
jo
jo
into
mov
jg
jmp
test
lahf
xchg
int3
jle
mov
mov
sbb
das
mov
icebp
outs
jne
rcr
inc
cmc
ins
mov
inc
xchg
mov
cmp
jge
jne
imul
jae
stos
and
xor
sahf
mov
nop
pop
lds
cmps
fst
inc
mov
retf
mov
push
popa
push
adc
nop
pop
pusha
in
(bad)
push
rcr
clc
(bad)
std
shl
shl
iret
cli
cmps
and
fs
pop
push
test
repnz
fdivr
mov
dec
clc
dec
inc
repz
xchg
push
pop
or
inc
mov
sbb
xchg
cmp
les
cmc
dec
inc
jns
sahf
outs
ret
sbb
mov
mov
lahf
bound
(bad)
sub
lock
aas
lds
out
cmp
inc
popf
add
push
scas
ds
mov
ja
jmp
lahf
mov
jae
in
xchg
adc
sub
xor
in
nop
pop
rcl
fdivr
mov
push
sbb
mov
adc
push
mov
gs
hlt
std
push
jno
adc
add
in
push
mov
int3
adc
sti
out
xchg
dec
stc
and
fild
fmul
rol
cwde
mov
mov
sbb
add
add
fcom
test
or
and
adc
sub
mov
xor
bound
enter
or
ja
imul
sbb
xor
mov
xchg
push
mov
test
lea
mov
retf
push
rcl
sbb
sbb
add
js
push
add
inc
test
lods
test
mov
xor
je
cmps
retf
mov
fld
test
shl
call
and
add
cmovg
pop
enter
and
mov
rcr
pop
jae
xchg
add
or
in
fs
adc
and
test
fcmovu
dec
outs
loopne
pop
xchg
dec
(bad)
cmp
call
adc
shl
xchg
clc
bound
jns
jmp
xor
lahf
jno
inc
cwde
sbb
inc
mov
in
sahf
test
int
cs
sbb
dec
jmp
pop
mov
int3
iret
mov
mov
fist
push
sub
(bad)
fdivr
retf
inc
clc
or
arpl
pop
pop
mov
call
fimul
fs
nop
out
hlt
mov
mov
je
mov
mov
rcl
pop
dec
test
stos
mov
out
data16
call
jns
rcr
jecxz
repnz
mov
test
rcr
mov
and
inc
jmp
fmul
add
aam
mov
bound
cmp
sbb
out
lods
stos
or
inc
mov
pop
mov
push
add
je
pop
into
jl
adc
psrlq
rcl
aas
fistp
sub
add
pushf
setns
mov
sti
loop
aaa
cld
push
mov
mov
movs
icebp
iret
pusha
cmp
fdiv
mov
mov
inc
or
mov
mov
jl
push
inc
sbb
mov
js
repz
pop
adc
aad
pop
mov
xchg
pop
push
jne
push
adc
pop
cmp
iret
mov
cmps
jb
aad
mov
lods
add
dec
shl
cmp
ror
(bad)
jmp
outs
in
or
pop
jae
test
mov
out
cmc
push
push
pop
pop
lds
out
cdq
ds
jbe
out
loope
cmp
pop
add
push
jl
jge
sbb
dec
push
or
mov
push
pop
mov
out
push
or
fld
sbb
fcom
jl
cs
adc
jge
ffreep
inc
cmp
mov
cmp
xor
pop
dec
adc
cmp
xor
sub
mov
imul
nop
jb
dec
cld
add
push
ins
daa
mov
inc
inc
xchg
arpl
fild
call
adc
cmp
lock
(bad)
add
lea
shr
dec
into
push
push
xor
pop
sbb
and
or
hlt
enter
popf
adc
retf
fisubr
rcl
in
loopne
or
test
js
int
sub
mov
sbb
movs
in
ret
movs
add
and
jmp
pusha
loop
dec
sub
jle
ins
jbe
iret
dec
inc
mov
xchg
pop
xor
in
ins
popa
mov
aam
popa
call
std
arpl
pop
jnp
adc
jno
cmp
jle
lds
dec
push
pop
mov
lods
jns
cmc
add
aas
enter
adc
rcl
test
push
enter
add
shr
pop
loop
aam
jmp
sub
adc
cmp
(bad)
out
push
ds
fidivr
add
inc
xor
sub
int3
push
mov
inc
xor
push
rcl
push
ja
out
fistp
stos
mov
sbb
call
int3
xor
nop
mov
adc
inc
push
pop
pop
adc
adc
inc
dec
jne
adc
test
je
and
push
call
clc
pop
nop
jle
mov
jg
test
jge
cmp
(bad)
cli
pop
(bad)
mov
cmp
fldenv
push
sar
stos
test
adc
out
inc
cli
jmp
add
mov
xor
ja
inc
loopne
daa
xor
ret
add
inc
jp
out
jmp
imul
dec
rol
addr16
test
sub
inc
dec
outs
in
adc
xor
sbb
mov
cld
sub
dec
rol
call
mov
jg
cmps
and
lods
cmp
std
adc
adc
or
addr16
les
pop
mov
aaa
xchg
or
int3
xchg
cmp
fbstp
shl
cmp
aaa
dec
jnp
add
pop
andps
add
sar
add
mov
jmp
add
(bad)
sbb
jnp
or
xor
pop
clc
pop
xchg
out
pop
aaa
out
sti
push
xchg
movs
mov
retf
mov
sbb
mov
nop
mov
and
sbb
fist
call
les
sbb
std
push
xchg
out
sbb
aam
and
(bad)
xor
(bad)
aas
rcl
daa
or
xor
call
dec
dec
mov
adc
call
div
out
shl
and
mov
sbb
or
into
imul
fs
out
fdivr
jecxz
cwde
push
sbb
sti
pop
out
sti
icebp
jnp
sub
mov
(bad)
int3
lea
test
sub
adc
imul
mov
imul
jnp
jecxz
add
xchg
sub
xor
mov
jo
fnclex
ja
or
outs
dec
sti
das
aam
icebp
inc
js
push
pop
out
in
add
jle
arpl
ficom
xchg
(bad)
(bad)
sub
cmp
xchg
sbb
retf
pop
xchg
adc
or
dec
scas
sub
shl
fs
push
mov
cld
cmp
push
push
inc
lock
xchg
arpl
imul
cmp
pop
xchg
hlt
movs
mov
mov
adc
pop
jmp
jge
lods
cld
sbb
mov
int3
(bad)
mov
sbb
frstor
jecxz
adc
jl
int3
cli
push
xor
mov
mov
cwde
push
pop
sbb
cs
dec
push
push
call
xor
or
push
and
enter
or
icebp
fstp
inc
call
jg
jbe
repnz
aad
adc
and
mov
retfw
fwait
hlt
adc
push
scas
into
repnz
cmc
imul
dec
stos
sahf
mov
xchg
mov
mov
(bad)
aad
ror
bnd
lahf
and
mov
out
mov
das
xchg
adc
and
loop
cmp
ret
xchg
popa
push
xchg
jmp
push
mov
jns
popf
and
adc
or
jno
fisttp
and
ret
mov
jo
imul
add
xchg
mov
push
ret
sahf
xchg
xor
jne
stos
in
shl
ss
add
and
inc
xchg
adc
imul
outs
in
pop
loopne
fwait
pop
cmp
cwde
imul
fistp
(bad)
xchg
pop
stos
(bad)
es
shl
pop
rcr
cmp
jo
stc
sti
push
xor
(bad)
jo
fcom
xchg
out
neg
cmp
xor
push
sbb
rol
mov
mov
xchg
add
mov
in
cld
or
outs
data16
or
xchg
mov
out
inc
cmp
adc
enter
rcl
and
aam
pop
jno
mov
out
test
mov
outs
inc
cli
pop
arpl
sub
inc
inc
or
sub
mov
xor
dec
dec
shl
xor
test
sub
xchg
adc
arpl
dec
repz
(bad)
mov
dec
cwde
xchg
sbb
add
and
inc
sbb
sahf
mov
out
scas
push
sbb
dec
retf
mov
mov
loope
xchg
push
xchg
jmp
test
jge
movs
mov
sbb
push
imul
out
push
sub
add
sub
(bad)
rcl
pop
and
adc
lea
pop
cs
and
jns
imul
xchg
cmp
xchg
test
dec
mov
shl
scas
mov
mov
fild
dec
fiadd
jp
out
xor
repnz
pop
mov
dec
mov
orps
test
xor
sub
aam
inc
mov
mov
aas
push
dec
cmp
sbb
into
cmp
ins
mov
mov
add
xor
(bad)
mov
std
into
adc
cmc
retf
dec
cld
je
xor
icebp
ss
mov
mov
mov
cmp
jno
jmp
xor
sahf
pop
jl
lahf
sbb
lea
mov
adc
(bad)
lods
hlt
sti
xor
push
and
add
repz
xor
retf
dec
loopne
(bad)
mov
rcr
push
xchg
sbb
cmp
ret
ins
inc
or
in
imul
ret
mov
lods
inc
mov
in
fnsave
ins
(bad)
stc
mov
pop
mov
cdq
xchg
sub
retf
sub
cdq
or
push
xlat
push
mov
out
pop
in
fucom
sbb
sar
push
xor
test
xor
mov
mov
and
icebp
cmp
pop
mov
cmovb
adc
int3
xor
push
pop
popa
adc
iret
js
lods
into
xchg
cmc
out
sub
or
test
xor
dec
mov
fisttp
mov
pop
xchg
cmp
call
fsubrp
sbb
xchg
jmp
inc
dec
dec
rcl
mov
pusha
mov
out
retf
sub
jae
jb
imul
mov
pop
jp
sub
(bad)
loope
sub
jb
or
lods
mov
sbb
cmp
movs
lods
push
call
lds
call
or
cmp
enter
xchg
dec
inc
jne
or
xor
cmp
imul
or
ret
cmp
iret
test
lahf
cli
mov
mov
xchg
add
and
inc
xor
jne
adc
xor
push
pop
jg
test
js
jge
xor
pop
cmp
jge
leave
popf
push
test
fistp
sbb
imul
push
push
test
out
sub
fwait
jo
inc
je
or
dec
cmp
push
lds
mov
xor
rcr
adc
fwait
push
cmps
jl
xor
jns
dec
shr
cmc
mov
mov
mov
mov
xchg
scas
adc
add
jmp
test
lods
jl
mul
or
add
sbb
inc
ins
popf
sahf
shl
jmp
push
int3
mov
sbb
xor
xor
pop
jo
mov
xor
in
xchg
(bad)
sub
js
or
shl
popf
sbb
es
ret
push
das
int
jb
enter
and
scas
aam
out
mov
das
repnz
dec
xor
inc
aad
mov
movs
dec
and
adc
pop
push
jmp
int3
or
push
pop
sti
or
and
dec
mov
jo
jge
ss
push
fisubr
pop
aad
add
adc
fcmovne
popa
mov
int3
stos
inc
retf
fwait
pushf
std
jmp
push
push
push
pop
push
cmp
inc
push
jge
movs
leave
fdiv
mov
jmp
mov
retf
retf
imul
cmp
and
sub
push
call
popa
stos
call
sbb
int
fmul
aad
bound
stos
in
mov
mov
arpl
imul
mov
mov
mov
dec
inc
push
jmp
mov
or
jle
xchg
push
inc
jb
mov
cli
xor
fisub
cdq
adc
outs
sbb
jecxz
push
and
(bad)
mov
clc
mov
retf
aam
sti
push
ins
mov
test
cld
or
sub
out
or
imul
neg
mov
pushf
cmp
movs
dec
xchg
push
cs
mov
jnp
cmp
jb
adc
js
xchg
sbb
rcr
jbe
clc
es
ret
pop
xchg
jmp
mov
pop
xchg
push
dec
je
sbb
inc
int
xchg
(bad)
push
sub
clc
jbe
lahf
sub
stc
inc
test
ja
mov
ds
call
xchg
stc
push
adc
xchg
mov
sub
(bad)
outs
cwde
mov
cld
mov
mov
aaa
sub
les
inc
jmp
addr16
popf
fmul
adc
std
test
les
fistp
jecxz
push
adc
scas
adc
dec
jge
xchg
jbe
ds
sub
cmp
fs
(bad)
xor
outs
loop
or
fldenv
push
or
push
(bad)
xchg
cwde
mov
push
jne
jbe
stos
or
mov
mov
mov
sbb
inc
add
xchg
inc
and
lea
add
imul
ins
and
xor
fs
xor
cli
sub
ins
mov
sub
sbb
ds
fs
pushf
dec
stos
ret
pop
int3
loope
mov
jmp
mov
ins
jb
sbb
stos
(bad)
popf
sbb
pop
push
shl
mov
test
call
ror
dec
dec
sar
daa
sbb
stos
fsub
cs
repnz
fs
push
nop
lods
inc
into
cmps
mov
push
mov
call
jmp
(bad)
fstp
jae
loope
pop
lock
ss
sub
icebp
pop
fcmovnbe
dec
clc
bnd
mov
push
call
jl
mov
and
xchg
dec
cmps
jns
addr16
inc
xor
pop
rol
repnz
dec
inc
ret
pop
mov
mov
mov
addr16
jne
into
or
xor
adc
sbb
in
scas
int
stos
cmp
push
or
xchg
inc
sub
pop
adc
mov
js
and
icebp
mov
outs
inc
push
pop
retf
lea
mov
adc
pop
repnz
and
ror
fs
dec
dec
lods
mov
dec
test
sti
sub
jge
add
je
mov
mov
js
mov
arpl
dec
mov
aad
pushf
aas
adc
fistp
pop
arpl
mov
shl
dec
and
outs
dec
push
or
cld
jbe
stos
cmps
ja
pop
outs
cli
movs
xchg
cmps
in
outs
mov
std
cmp
(bad)
mov
jle
pop
retf
xchg
int3
mov
les
sub
xor
icebp
push
sub
out
push
sar
(bad)
push
fmul
in
or
in
div
xchg
cld
xchg
(bad)
ins
les
jmp
push
cwde
lock
outs
shl
aad
aaa
icebp
das
jne
lods
ss
jns
outs
pop
aas
xchg
mov
or
shl
cmp
out
daa
inc
aam
(bad)
leave
loop
sbb
int3
pushaw
push
jl
in
xchg
pusha
icebp
popf
in
call
mov
sub
xchg
jle
sub
sub
dec
fisttp
das
out
mov
test
(bad)
sub
inc
lds
aad
cmp
push
and
fst
cmovl
push
pusha
scas
xor
or
adc
or
(bad)
repnz
cmp
xor
mov
sub
cmp
dec
scas
call
mov
jns
sahf
icebp
jg
cmp
add
cmps
mov
cmp
pop
popf
test
add
xor
cmps
pop
pop
cdq
adc
or
xchg
and
into
mov
daa
xchg
outs
sbb
xor
enter
xchg
shl
fimul
std
pop
push
pop
nop
js
sub
mov
jle
sbb
das
push
retf
in
sbb
sub
aad
ror
mov
and
push
jg
xchg
movs
or
fcmovnbe
push
arpl
add
pop
leave
pop
or
popf
ds
jmp
inc
xor
mov
mov
inc
call
(bad)
jmp
mov
pushf
pop
not
sub
les
imul
and
sar
(bad)
mov
cdq
jmp
loope
(bad)
scas
pusha
(bad)
rcl
outs
(bad)
arpl
sbb
cmp
(bad)
jno
out
adc
mov
or
arpl
mov
pop
jnp
push
arpl
fisubr
into
add
fcom
icebp
es
cmp
cmp
xchg
xchg
aas
inc
pop
rol
xor
shr
vpavgb
(bad)
into
gs
mov
aad
dec
xchg
jb
and
push
mov
push
mov
dec
jge
cmp
pop
fdiv
xchg
sti
cmp
hlt
mov
inc
pop
or
add
push
mov
adc
cmp
bts
mov
add
add
jns
mov
adc
loopne
bound
mov
xor
mov
sub
push
popf
push
xor
gs
(bad)
push
nop
xchg
ficomp
int3
adc
in
sbb
sub
sub
out
(bad)
clc
je
cmp
jbe
test
fcom
mov
inc
inc
mov
adc
nop
dec
or
fdiv
in
inc
dec
scas
leave
sub
ja
rcl
loopne
dec
mov
sbb
stos
pop
dec
mov
cmp
ficom
add
in
jae
pop
pop
push
sar
into
ss
inc
ret
jge
add
pushf
imul
adc
mov
ror
fs
add
lock
cmp
push
iret
or
mov
xchg
sub
ror
jne
shl
(bad)
retf
sbb
jno
or
mov
add
push
cmp
fisttp
loope
arpl
scas
outs
or
ss
xchg
movs
or
mov
dec
sbb
stos
popa
call
inc
clc
adc
add
mov
mov
adc
ins
je
pop
popa
push
push
test
push
and
out
rol
jbe
stos
pop
dec
lahf
push
into
dec
aas
cwde
popf
icebp
cmp
fiadd
int
nop
jmp
mov
mov
aaa
ret
js
loop
mov
(bad)
(bad)
fild
mov
in
int3
push
push
mov
data16
jl
int3
ins
cld
mov
fstp
cdq
adc
shl
outs
pop
cdq
xchg
sbb
sub
fist
jmp
inc
(bad)
sti
sub
stc
or
adc
(bad)
mov
out
fadd
arpl
pop
pop
jne
retf
add
xchg
push
ins
xchg
inc
push
cmp
pop
jnp
adc
mov
xchg
cmp
clc
mov
xchg
pop
test
jp
adc
inc
(bad)
neg
adc
arpl
je
xchg
(bad)
fdivr
or
sti
pop
adc
movs
and
push
jne
pop
cdq
pushf
mov
lock
push
and
aad
sar
loop
mov
inc
adc
outs
or
jbe
jle
ret
mov
mov
pop
fdiv
adc
sub
(bad)
pusha
and
and
loope
xchg
bound
and
es
push
pop
out
push
push
retf
jmp
mov
sbb
fsub
push
in
push
rcl
out
adc
fcomi
push
mov
push
popf
inc
test
lock
and
push
mov
xor
fistp
aam
add
rcr
mov
out
outs
stc
push
xchg
cwde
retf
adc
pop
fwait
cmp
jge
scas
sar
push
imul
pop
(bad)
hlt
jnp
int3
jae
out
pusha
dec
test
arpl
inc
adc
mov
mov
mov
xchg
iret
jae
loopne
adc
mov
sub
mov
imul
cmp
imul
jmp
aad
cld
push
fidiv
fwait
gs
add
xor
adc
adc
pop
fwait
mov
mov
sahf
pop
xor
push
adc
inc
sar
jne
movs
push
(bad)
inc
or
pop
and
and
jecxz
pop
dec
shl
sbb
repnz
and
mov
or
stos
jge
aad
pop
pop
in
or
mov
and
scas
cs
cli
aam
ins
lds
aad
push
into
pop
dec
jmp
inc
cmps
int
dec
inc
dec
xchg
mov
in
xchg
mov
cvtps2pd
retf
push
mov
idiv
iret
mov
mov
mov
lods
lods
rcl
data16
sar
mov
jmp
mov
add
push
leave
sbb
fisttp
xchg
aam
sahf
pop
xchg
ins
and
out
mov
aad
lods
ret
fwait
jle
repz
cmps
jp
(bad)
fcom
cmp
test
retf
ror
jl
xchg
iret
idiv
ret
cld
pop
sub
lods
sub
pop
arpl
sbb
push
mov
call
or
jo
dec
sbb
cdq
fild
(bad)
jns
jne
bound
jae
imul
sub
bound
push
mov
repz
push
rcr
inc
in
xor
ins
bound
push
xor
jge
mov
imul
cmp
loope
inc
xor
add
rcr
pop
int
into
fldcw
in
jl
jecxz
retf
pop
nop
loopne
push
jp
xchg
dec
mov
jnp
(bad)
in
int
call
cld
int
xor
pop
mov
dec
imul
xor
push
fmul
mov
shr
mov
sub
(bad)
popf
mov
out
loopne
pop
cmc
mov
and
addr16
aad
into
mov
clc
pop
nop
and
lahf
push
mov
mov
mov
mov
cmp
xchg
sbb
lahf
xchg
inc
jae
sub
mov
iret
mov
std
cmps
push
pop
dec
push
dec
js
dec
cmp
lods
cs
cmp
ins
add
push
mov
out
sub
cmp
lods
ds
loopne
adc
jmp
in
dec
mov
mov
stos
retf
lahf
sub
push
pop
dec
dec
cmps
xchg
scas
sbb
pop
sub
xor
push
in
and
repnz
fadd
push
sbb
dec
jmp
cmp
adc
loop
jge
mov
mov
out
les
outs
mov
in
bound
sbb
icebp
aaa
mov
cmp
scas
(bad)
xchg
aaa
dec
pop
dec
adc
add
xor
jno
not
dec
je
mov
jecxz
pop
aas
push
push
mov
int
mov
rcr
sti
aad
cmova
xchg
cmp
icebp
fstp
add
pop
outs
cli
rcl
add
ret
scas
aas
xchg
inc
ja
in
and
fwait
and
cmp
outs
outs
fwait
cs
jle
adc
cdq
cmp
push
cmp
(bad)
inc
sub
and
push
mov
inc
jae
jmp
add
test
fs
sbb
pop
sahf
mov
pop
xchg
clc
adc
shl
cmp
out
das
fdivr
pop
inc
bound
push
(bad)
sbb
les
xlat
mov
mov
test
(bad)
mov
mov
fiadd
ret
xchg
pop
dec
adc
pusha
pop
mov
push
call
fadd
imul
xchg
mov
jle
and
dec
repz
cld
push
call
add
fcomp
daa
in
and
pop
push
adc
jnp
dec
outs
mov
jmp
gs
(bad)
pop
in
inc
test
arpl
(bad)
neg
sub
xor
enter
int3
add
cmp
call
add
clc
and
pop
mov
pushf
adc
in
sbb
xchg
retf
and
jne
sub
in
bound
jp
pop
lea
cwde
adc
retf
aam
(bad)
frstor
call
adc
adc
mov
push
jl
push
jge
sbb
inc
push
cmp
xor
fnstsw
adc
in
fs
ret
xchg
iret
cdq
cmp
in
and
shl
arpl
dec
sub
ss
xchg
pop
push
hlt
cmp
test
sbb
sbb
retf
sub
hlt
pop
xchg
pushf
jmp
mov
setp
(bad)
jns
sub
fmul
push
movs
in
sub
and
mov
lods
mov
out
pop
out
mov
dec
imul
add
jb
test
and
out
jle
cmps
mov
or
and
mov
inc
jne
adc
or
push
pop
aam
jne
cmp
fistp
(bad)
sub
test
pop
cli
retf
push
hlt
ja
fs
add
inc
test
movs
retf
call
inc
inc
inc
mov
sbb
stos
push
cmc
cmps
jg
shl
mov
call
xchg
das
(bad)
sbb
fidiv
push
and
add
pop
pop
or
mov
jl
dec
or
pop
cmp
or
jp
movs
ja
xchg
add
arpl
dec
pop
(bad)
mov
test
sbb
jle
or
xchg
push
and
jge
inc
fldl2e
xor
dec
mov
mov
nop
jg
clc
push
lea
push
pop
pop
test
test
adc
inc
ins
mov
call
test
xchg
scas
xchg
mov
cli
(bad)
in
cld
fimul
cld
sub
jp
xchg
imul
mov
std
push
add
push
mov
nop
xchg
(bad)
icebp
jns
jnp
les
stos
mov
faddp
fcom
enter
xor
sub
xchg
icebp
popa
inc
push
repnz
pop
jl
mov
repnz
xor
jae
jecxz
jl
xchg
loope
inc
push
xchg
sbb
rcr
mov
pop
mov
sub
popa
sbb
xor
pop
push
lahf
mov
jne
pop
ficomp
cld
jg
sub
add
cmp
mov
sbb
add
jo
ins
xor
add
(bad)
ja
sbb
(bad)
int
stos
mov
je
ins
xchg
pop
xchg
dec
lock
mov
cld
rol
or
mov
mov
xchg
and
xor
cmp
or
mov
rol
and
mov
addr16
jle
push
out
sub
adc
int
sub
xchg
push
int3
or
or
pop
aam
add
dec
jmp
les
iret
cmp
imul
int
cwde
std
das
mov
add
retf
or
ins
enter
mov
repnz
dec
out
leave
call
and
sub
fbld
add
push
popf
mov
or
aas
add
mov
xchg
pusha
mov
pop
shl
dec
or
dec
mov
std
inc
jp
push
jae
aad
push
shr
sti
push
pusha
movs
inc
adc
inc
dec
call
and
call
inc
or
iret
(bad)
dec
aam
jp
jl
sbb
mov
pop
push
fwait
xchg
mov
xor
cld
stc
xor
xchg
push
mov
clc
sub
adc
lea
adc
add
or
mov
mov
std
or
scas
xchg
aam
cmps
test
dec
retf
retf
jl
sbb
xor
scas
in
aas
lea
outs
jmp
cmc
mov
out
fld
call
int3
sub
sub
dec
aas
fcom
pop
lea
push
dec
or
outs
pop
call
mov
cmp
mov
fcom
bound
jno
dec
in
imul
sub
scas
cmp
xchg
sub
stos
int
xchg
lahf
adc
dec
aam
mov
xchg
jb
xchg
sub
aaa
ss
or
dec
cmp
mov
ret
adc
mov
retf
xor
sbb
sti
int
push
adc
pushf
div
(bad)
mov
xlat
iret
xchg
(bad)
jle
(bad)
pop
xchg
jecxz
pop
mov
test
jecxz
aaa
rcr
adc
push
loopne
aaa
inc
inc
out
pushf
enter
shl
popf
xor
cmp
push
mov
cmps
inc
push
dec
mov
add
popa
pop
lods
inc
pop
dec
fwait
loop
and
xor
inc
adc
xchg
mov
mov
in
imul
lea
sub
arpl
leave
mov
push
xlat
clc
pusha
ss
out
push
sub
shr
inc
jmp
inc
not
ret
dec
or
les
in
fwait
movs
test
xchg
mov
mov
mov
and
jbe
jo
fnsave
rcl
jmp
push
or
inc
sub
scas
xor
(bad)
movs
and
pop
pop
gs
add
adc
test
pop
mov
and
jo
in
pop
bnd
(bad)
cmp
cmp
ins
xchg
dec
xor
sar
lods
inc
jmp
repz
arpl
sbb
stc
lods
ins
rcl
cmp
(bad)
fdivr
or
jmp
jmp
ret
jbe
retf
in
sub
into
sbb
in
fs
cmp
pop
dec
rcr
xor
cmp
pushf
inc
cmp
fist
adc
outs
adc
fsub
sbb
mov
das
call
pop
retf
push
push
push
mov
adc
mov
repz
xchg
inc
ret
rcr
cmp
rcr
add
cmp
inc
hlt
mov
imul
ins
ins
sbb
and
push
mov
(bad)
push
or
or
sahf
das
imul
aam
test
dec
ins
lods
rol
add
xlat
or
leave
rcl
mov
jl
xchg
stos
fild
jge
add
fs
fwait
arpl
or
fs
into
jge
push
and
call
(bad)
fisubr
add
popf
pop
scas
lods
dec
mov
scas
jmp
inc
mov
jl
in
or
mov
adc
ret
pop
cmps
fnstsw
daa
and
aad
outs
(bad)
loop
jb
popf
jmp
ror
and
imul
and
mov
mov
fs
pop
call
out
call
(bad)
outs
mov
pop
sub
mov
pop
pop
or
mov
outs
test
arpl
adc
cld
pop
jb
xchg
push
pusha
mov
loopne
lods
call
pusha
cdq
jl
pop
cli
mov
rol
pop
jecxz
outs
(bad)
hlt
xor
fidivr
xor
add
aam
aaa
clc
fnstsw
or
mov
xchg
das
lea
in
xor
sub
mov
cmc
ret
js
lods
movq
clc
sub
xor
lahf
add
lea
test
(bad)
out
inc
dec
stc
xor
xor
mov
lahf
dec
push
mov
add
aam
shl
test
jecxz
bound
jnp
out
pop
pop
jmp
ss
lock
adc
sub
aaa
xor
sub
inc
fs
ficomp
in
push
or
and
jmp
mov
xor
pop
xchg
push
adc
psraw
push
pushf
in
in
bnd
sbb
xor
loopne
ins
sbb
push
mov
adc
sub
lahf
in
cmp
gs
ds
in
out
nop
out
sub
jg
fadd
movs
test
dec
das
popf
pushf
jae
dec
xchg
daa
nop
les
add
xchg
setge
jmp
inc
popa
outs
and
dec
cmp
adc
xchg
in
and
jo
jns
mov
xchg
pop
jmp
sbb
inc
push
imul
enter
cmp
jb
mov
cmp
hlt
jmp
call
adc
mov
test
xchg
jmp
sbb
ds
xor
and
jb
cmc
sbb
je
test
clc
fmul
xchg
push
xlat
(bad)
xor
mov
inc
jle
ss
adc
dec
pop
push
mov
dec
mov
xor
fst
mov
jbe
push
inc
xchg
ficom
fild
jle
icebp
rcr
stos
jbe
pop
inc
outs
mov
and
mov
xlat
data16
xor
fnop
dec
sbb
push
cmp
test
cmp
cmp
and
xor
ret
xlat
enter
retf
stos
bound
jecxz
out
imul
pop
xchg
pop
push
push
sub
ds
pop
xor
xor
pop
sbb
mov
cmps
jb
xchg
(bad)
cmp
and
lahf
xor
push
repnz
in
data16
scas
into
mov
sub
xor
pop
and
lock
out
imul
xor
push
pop
mov
loopne
outs
inc
pop
dec
pop
(bad)
repz
iret
push
xchg
retf
adc
repnz
repz
jg
in
or
and
addr16
std
ror
fimul
(bad)
outs
idiv
xchg
jecxz
iret
mov
sar
xor
cmp
call
adc
push
shr
icebp
jl
and
mov
cmp
cld
pop
cld
dec
idiv
mov
sahf
push
out
cld
xchg
cli
mov
mov
popf
pop
ins
pop
imul
add
test
inc
sub
pop
aaa
repz
mov
mov
cmp
mov
cmp
push
mov
shl
pop
push
aam
dec
push
cdq
inc
gs
dec
pop
sbb
push
(bad)
pop
in
cld
dec
fs
inc
push
nop
push
retf
pushfw
repz
sbb
cdq
ins
popf
addr16
adc
lods
out
push
adc
dec
cmp
repnz
iret
mov
pop
jbe
cmp
pop
or
std
outs
add
cmp
push
adc
ret
or
push
addr16
mov
ins
mov
jmp
es
sub
inc
repnz
xor
add
fld
retf
inc
push
inc
imul
mov
or
xchg
pushf
das
call
cmpxchg
dec
(bad)
jns
cmp
jbe
push
mov
test
pop
mov
icebp
xchg
movs
call
xor
dec
sub
mov
rep
sbb
inc
(bad)
mov
or
mov
cs
pushf
adc
mov
icebp
test
inc
pop
pusha
mov
mov
movs
pop
cli
dec
cld
and
cmp
stos
push
add
out
push
retf
sbb
sub
jmp
outs
xchg
sbb
pop
cld
cmp
fs
shl
add
fidivr
mov
sub
(bad)
add
aam
lds
mov
pop
fcmovne
retf
stc
xor
mov
scas
lock
fstp
sbb
aam
lods
push
cld
les
and
mov
inc
mov
add
jmp
sbb
cli
outs
cwde
ss
fsubr
pop
aad
and
sub
push
mov
idiv
and
retf
cmp
lods
mov
outs
mov
and
jge
pop
pop
icebp
lods
imul
(bad)
push
aad
mov
and
bound
scas
clc
fsub
and
shl
mov
fsub
fsubr
mov
cmc
mov
mov
daa
push
cmc
push
retf
div
cli
mov
cmp
call
mov
and
sbb
pop
dec
popa
test
lods
add
test
pop
pop
lahf
jo
data16
inc
pop
jo
shl
jmp
cwde
imul
sbb
test
jae
mov
mov
jmp
inc
outs
into
or
cld
adc
addr16
es
ins
sbb
mov
jmp
pusha
jmp
push
pusha
rcl
fwait
or
sub
and
movs
std
es
push
mov
fs
push
enter
inc
inc
xchg
or
mov
sbb
cmc
retf
dec
jnp
lahf
adc
cmp
xchg
xchg
imul
mov
fcom
inc
cmovbe
call
mov
lds
in
push
mov
adc
ss
lods
inc
push
dec
das
hlt
in
pop
fwait
dec
into
mov
mov
ja
pusha
pop
push
sbb
jbe
xchg
lahf
cdq
pop
div
ret
sub
lahf
repz
je
bound
sub
inc
mov
jp
mov
push
lods
xor
fs
fwait
xchg
fidiv
cwde
push
mov
jnp
xchg
pop
pop
and
pop
aad
fcomp
aam
adc
inc
repz
ficom
fwait
loop
cld
icebp
xchg
pop
pushf
mov
inc
fnstsw
pop
cmps
es
int3
int3
jp
js
dec
call
push
call
mov
mov
sub
scas
pop
mov
jmp
(bad)
adc
iret
xchg
shr
dec
int3
mov
xor
aaa
(bad)
push
push
push
outs
push
mov
test
mov
sar
mov
test
movs
fnstsw
jmp
lea
sbb
cmps
push
jp
lods
or
cs
xor
mov
mov
push
cs
pop
push
add
dec
hlt
inc
stos
icebp
cdq
inc
out
(bad)
nop
(bad)
icebp
and
add
jg
out
mov
xlat
aas
adc
mov
pushf
xchg
dec
pop
add
sbb
loope
repz
jae
inc
xor
lahf
loope
jae
push
mov
std
cmc
rcr
in
(bad)
lods
call
pop
ss
data16
rol
sub
rcr
jl
cmp
aam
std
and
ja
sub
jo
cmps
pop
dec
popa
push
xor
shl
or
outs
sbb
outs
cmps
xlat
js
cdq
inc
pop
push
jb
adc
push
popf
sbb
sbb
ins
push
sbb
xchg
jecxz
lods
mov
cmp
cwde
inc
arpl
dec
cmp
test
mov
icebp
aas
push
sti
jge
pop
imul
pop
in
shl
retf
lahf
pushw
dec
pop
adc
nop
sub
test
and
or
push
aad
add
imul
jl
shl
mov
ret
xchg
xor
mov
mov
pop
add
sub
pop
push
mov
cli
or
push
mov
and
xor
adc
push
mov
or
test
stos
inc
scas
pop
push
ins
scas
jle
int
aaa
retf
je
das
push
push
jbe
mov
xor
les
enter
push
jnp
out
out
dec
je
dec
mov
mov
pusha
retf
icebp
jp
imul
test
mov
repz
pop
fisttp
sub
sub
xor
and
push
aas
retf
dec
jmp
cmp
sub
xor
mov
cmp
jne
push
sti
cmps
dec
(bad)
into
psignb
sbb
push
jl
add
mov
xchg
loopne
sub
sbb
mov
daa
dec
loop
xchg
ss
push
cld
cdq
adc
call
loopne
data16
in
push
(bad)
out
cld
imul
js
push
mov
vpshlq
add
mov
aam
movs
nop
mov
pushf
mov
dec
sbb
in
outs
aam
cmp
or
inc
add
jp
ins
cmp
push
mov
add
xor
std
ret
pop
ja
inc
jge
out
dec
cs
addr16
mov
mov
das
mov
pop
dec
ror
fcmovne
ins
add
scas
(bad)
xor
sti
fmul
dec
test
pop
xchg
cs
(bad)
jecxz
les
cdq
inc
sbb
add
xchg
push
adc
pop
push
jmp
cmp
sub
or
push
cmp
(bad)
cld
repnz
dec
push
sar
nop
pop
mov
push
repnz
pop
pop
ins
adc
push
cmc
ja
cmps
pop
popf
mov
in
inc
pop
sub
pop
push
cmp
jb
or
dec
data16
xor
add
mov
dec
xchg
movs
dec
xor
jne
int
jp
lods
stos
xor
repz
in
and
test
dec
test
jmp
rol
sub
mov
and
sub
imul
adc
mov
out
xor
mov
fisub
and
add
(bad)
fcom
mov
push
bound
adc
adc
rol
push
push
shl
jne
push
inc
hlt
sti
lock
out
int3
leave
adc
imul
sbb
outs
pop
cwde
push
push
dec
jecxz
cmps
aaa
loop
or
out
xlat
jp
or
rcr
xchg
ret
out
rol
xchg
repz
repnz
lahf
je
xchg
adc
int
fnstsw
mov
jg
inc
pushf
dec
push
scas
cld
mov
neg
in
xlat
inc
iret
xlat
sub
mov
lds
int3
retf
data16
addr16
fiadd
outs
cwde
mov
push
adc
sbb
dec
int
push
push
mov
ja
xchg
out
dec
int3
in
fist
mov
je
and
sub
xor
mov
leave
xor
mov
leave
jmp
sbb
ins
fstp
pop
dec
xchg
aam
jp
xchg
jbe
out
adc
mov
adc
push
adc
mov
adc
enter
or
pop
mov
popa
cld
push
push
inc
loope
cdq
in
push
cld
cli
jecxz
inc
sub
cld
repnz
jno
cmp
pop
pop
inc
(bad)
sbb
daa
cs
nop
sti
jnp
mov
sbb
out
sbb
mov
mov
xchg
(bad)
xchg
push
icebp
addr16
fild
cmp
test
pop
lock
cmp
push
xchg
cdq
pop
std
xor
out
push
aad
test
push
sub
pop
loop
pop
out
jmp
mov
idiv
sahf
imul
inc
fmul
mov
sbb
in
dec
adc
mov
xchg
not
retf
push
lds
test
push
(bad)
(bad)
aas
lods
dec
out
inc
and
mov
lods
mov
push
shl
enter
ror
xor
ins
pop
popf
ds
aas
out
ja
cmp
mov
cwde
cmp
imul
outs
out
cld
inc
xlat
fisttp
xchg
std
or
mov
(bad)
out
sbb
pop
addr16
xchg
sahf
push
enter
(bad)
lock
jae
xchg
xor
cli
loopne
ds
dec
aad
mov
movaps
lahf
imul
fist
lahf
cmp
mov
in
jl
mov
rep
repnz
repz
mov
cmc
fadd
pop
sbb
mov
xchg
mul
jp
scas
jo
cmps
int
mov
leave
div
inc
in
out
dec
inc
sub
adc
sub
inc
add
out
aad
inc
(bad)
xchg
shl
adc
mov
out
outs
int3
pushf
ins
jae
push
sub
and
or
enter
xor
data16
adc
fist
imul
jle
sbb
outs
jbe
cmp
adc
pop
dec
push
push
xor
(bad)
mov
outs
jb
xchg
call
shl
cdq
int
mov
inc
jb
cmp
and
sbb
adc
mov
mov
cmp
cwde
adc
adc
div
(bad)
push
xchg
push
das
mov
cld
hlt
pop
cld
int3
popf
(bad)
inc
and
push
dec
fcmovnu
pop
pop
jmp
ror
aaa
inc
out
xchg
(bad)
mul
xchg
ins
xchg
adc
test
scas
or
call
inc
not
outs
fsub
jmp
sbb
push
dec
stos
adc
dec
xchg
popa
and
push
pop
aaa
test
cmp
jno
xchg
pop
sub
xchg
repz
sub
imul
lahf
jns
adc
pop
xor
test
and
and
movs
cli
dec
test
outs
mov
jbe
scas
mov
xchg
ret
aas
cld
sbb
push
or
xchg
es
xor
adc
pop
movs
das
add
mov
push
iret
lea
jno
arpl
push
sbb
add
push
mov
xchg
sbb
mov
imul
sbb
fisubr
cwde
(bad)
ds
jb
lahf
in
mov
add
arpl
add
and
cmp
dec
scas
inc
mov
scas
and
mov
ins
inc
aaa
pop
push
rol
or
push
ds
dec
(bad)
and
fwait
stos
jnp
cs
add
cli
clc
cli
sub
repz
(bad)
icebp
cmp
mov
stc
(bad)
xchg
push
adc
dec
xor
or
adc
ds
jns
mov
mov
nop
in
outs
imul
loop
addr16
fisttp
pop
push
and
(bad)
mov
cmc
mov
xchg
jge
pop
retf
mov
xlat
mov
push
stos
fwait
mov
out
js
push
dec
cmps
sub
lods
call
jecxz
cmp
rcr
sbb
out
loopne
test
mov
addr16
or
mov
and
pop
sbb
mov
cmp
or
pop
xchg
sub
jp
neg
adc
sub
out
nop
retf
movs
fsub
ja
xchg
aaa
mov
inc
xor
push
out
icebp
inc
daa
test
mov
sub
jae
cs
sahf
dec
dec
xchg
push
fs
fistp
fwait
sub
retf
or
xchg
adc
and
dec
data16
jno
sub
popf
in
test
sub
xor
mov
xchg
(bad)
or
xor
pop
dec
fsubr
sbb
sti
xchg
popa
and
mov
sahf
cwde
(bad)
in
mov
imul
jbe
jmp
cmp
dec
sbb
loopne
loop
jecxz
xor
or
ds
(bad)
cdq
cdq
push
xchg
mov
add
push
retf
fwait
(bad)
scas
andps
loop
mov
ss
push
mov
nop
push
cmp
sbb
ficomp
mov
dec
ds
jnp
cld
adc
lods
push
push
sbb
dec
movs
out
cmp
xchg
and
sbb
retf
inc
inc
(bad)
fs
ja
push
aam
sub
stos
or
cld
(bad)
mov
adc
and
mov
cmp
(bad)
data16
mov
inc
add
or
shl
cdq
jno
or
or
pushf
adc
sbb
movs
dec
gs
addr16
cmp
inc
inc
inc
push
(bad)
(bad)
inc
jle
cdq
and
xchg
mov
sbb
push
int3
fdiv
jae
dec
retf
and
or
les
int
scas
inc
out
cmc
cmp
cmc
int
add
into
in
aaa
fistp
push
repz
cwde
jg
push
and
mov
add
sub
fisttp
lods
mov
outs
fmul
dec
and
push
test
sbb
push
and
or
ret
mov
lea
movs
inc
scas
das
stc
add
adc
clc
dec
int
pop
cli
(bad)
adc
sar
bound
out
adc
mov
mov
ins
ds
inc
jmp
sub
sub
jbe
xchg
pop
call
hlt
jo
out
fsub
dec
cmp
into
add
in
xor
(bad)
clc
cli
and
ret
cmp
jl
xchg
repnz
sbb
outs
dec
add
jne
pop
mov
into
inc
push
inc
adc
jbe
mov
ds
push
mov
bound
mov
jecxz
out
pusha
jae
and
repz
cmc
lahf
movs
or
mov
adc
sbb
fst
inc
push
pusha
add
mov
fsubr
push
pushf
mov
popa
outs
aas
pop
adc
(bad)
cmp
jb
mov
retf
mov
test
mov
or
rcl
jmp
retf
xchg
pushf
popa
xchg
and
pop
pop
xchg
adc
aaa
push
cmp
add
xchg
or
xchg
scas
loop
js
pop
and
fcmovne
cli
adc
loop
adc
xchg
cmps
ds
ds
xor
daa
dec
pop
movs
cld
daa
sti
and
inc
outs
repnz
(bad)
adc
(bad)
repnz
sub
and
call
nop
imul
sub
mov
lods
in
add
dec
nop
ja
adc
gs
iret
adc
pop
call
ret
and
mov
hlt
or
loopne
add
pop
lds
push
jmp
push
add
test
(bad)
lea
prefetch
mov
sub
jns
push
ja
add
and
pop
in
loop
(bad)
jmp
sub
push
mov
xchg
sub
test
xchg
js
or
push
mov
into
int
sbb
int
xchg
rcr
push
add
outs
cmp
dec
mov
or
data16
cld
rcr
push
mov
jno
sub
test
push
pusha
adc
aaa
sub
jbe
mov
and
dec
ins
shr
mov
cdq
ss
les
call
lahf
and
loope
mov
adc
xor
lahf
fs
dec
or
repnz
xchg
and
sub
jl
pop
(bad)
in
loope
mov
jbe
dec
push
icebp
movs
mov
fcomip
fst
leave
xor
jo
neg
shr
adc
xor
sub
imul
aaa
add
out
sub
add
mov
pop
int3
xchg
shl
sbb
cs
sub
retf
repnz
jo
inc
xor
add
push
jns
adc
jnp
push
dec
cli
xchg
jle
arpl
retf
ins
jo
clc
jle
out
sbb
jg
push
mul
sbb
lea
and
jge
and
fild
ficom
inc
std
pop
cmp
das
into
sbb
mov
mov
cld
adc
and
fcom
lea
push
test
scas
xlat
or
jle
sbb
pushf
stos
(bad)
sub
adc
push
jae
fisub
(bad)
retf
and
sti
xor
jle
dec
dec
outs
inc
popa
ins
imul
jns
int
mov
mov
cmps
mov
fldenv
aad
xor
lahf
inc
loop
neg
sbb
ja
dec
das
test
mov
or
pop
cmc
cmp
mov
loop
fisttp
mov
(bad)
sbb
popa
repz
xchg
and
neg
cmp
fcomp
mov
or
sbb
ds
sar
pop
add
adc
sbb
cmp
mov
mov
in
sbb
hlt
or
jnp
push
pop
add
loop
retf
fdiv
fwait
push
inc
pop
pop
outs
dec
int
mov
loop
mov
fwait
sbb
xor
std
pop
cmp
xor
jp
dec
mov
stc
or
add
js
fisttp
pop
inc
(bad)
mov
sti
pop
cdq
mov
sbb
pop
in
adc
std
mov
pop
addr16
stos
retf
xchg
sbb
cmp
xchg
cmp
ret
cmps
cmps
jmp
sbb
dec
test
ror
mov
inc
fwait
sbb
xchg
adc
iret
and
jae
inc
out
pop
test
arpl
lods
mov
cmps
mov
mov
inc
mov
xor
call
cmp
mov
adc
sbb
jge
cmp
or
fdivr
pop
jmp
(bad)
fisubr
ret
cwde
sti
les
ss
dec
retf
out
adc
push
cmps
pop
ins
je
and
aam
jle
push
mov
aad
dec
(bad)
cmp
push
xlat
mov
je
jae
int3
test
pushf
cld
jle
jmp
xchg
dec
xchg
pop
mov
int3
shl
mov
stc
add
mov
je
push
enter
daa
and
cmp
test
add
movs
mov
dec
cld
je
movs
dec
mov
add
inc
js
jns
dec
jge
jnp
inc
sub
pop
pushf
jmp
sub
xchg
dec
inc
mov
push
out
ret
push
ins
xchg
mov
inc
rcr
push
outs
mov
cdq
jmp
les
shl
in
jmp
sub
pop
dec
inc
jmp
cmp
retf
mov
xchg
push
jbe
aad
push
xor
(bad)
int3
sbb
add
inc
inc
bound
sahf
mov
pop
mov
push
fwait
fwait
mov
jg
dec
sub
loopne
aam
sar
push
xor
ins
enter
test
xor
push
imul
push
push
push
sbb
not
jp
cmp
xchg
in
scas
push
mov
(bad)
sub
fadd
retf
dec
dec
ds
fcom
mov
movs
leave
fidiv
in
int3
xchg
mov
jge
jb
pop
push
mov
adc
bound
repnz
xchg
sahf
add
test
mov
fmul
std
jg
mov
loop
imul
and
cli
adc
dec
mov
cmp
sub
jmp
push
retf
mov
adc
mov
cmps
test
(bad)
retf
clc
(bad)
pop
enter
jnp
iret
push
inc
lods
push
xlat
aas
into
or
jmp
jbe
jge
jae
adc
fidivr
push
les
adc
(bad)
and
mov
xchg
out
mov
sar
aaa
sbb
or
or
add
out
dec
pop
cmp
(bad)
mov
loop
xchg
fdivp
jb
adc
addr16
fisubr
retf
xor
test
push
mov
jp
sti
(bad)
loopne
or
stos
dec
sar
shl
push
fcmovnbe
pop
lods
outs
mov
fiadd
aaa
mov
sbb
jp
pop
cmps
out
mov
into
imul
clc
pushf
jnp
outs
imul
and
fiadd
sar
stos
xchg
xchg
bound
add
and
or
jge
mov
push
call
inc
mov
popa
pop
mov
retf
dec
adc
mov
dec
gs
add
retf
cld
scas
sub
inc
sub
js
push
mov
jmp
mov
or
xchg
outs
adc
aas
mov
and
sub
mov
pop
fbstp
push
stos
add
cmp
xchg
in
in
test
pop
mov
mov
(bad)
push
mov
pusha
mov
jl
arpl
js
jo
adc
out
stc
enter
clc
ins
cmp
cmps
mov
dec
and
push
mov
mov
push
mov
add
xchg
mov
(bad)
movs
inc
inc
dec
xor
enter
int3
outs
mov
xchg
inc
mov
cdq
add
jae
imul
jnp
or
inc
iret
loope
in
xchg
repnz
(bad)
in
scas
pop
jae
push
dec
aaa
jmp
jmp
jne
add
retf
dec
xor
mov
in
dec
arpl
and
push
(bad)
arpl
xlat
mov
cdq
pop
ror
out
xchg
retf
js
or
ins
call
lahf
repz
xchg
ss
or
imul
cwde
jp
push
or
ins
and
ins
xor
adc
or
push
int
pop
xchg
repz
cmp
pop
test
adc
push
out
shl
sub
call
mov
in
test
popa
mov
sbb
jbe
inc
jge
pop
mov
ret
mov
in
scas
adc
loopne
js
dec
(bad)
xlat
push
jg
jb
mov
outs
adc
inc
(bad)
(bad)
lock
mov
cmc
ss
js
push
cmp
and
jl
fnsave
adc
add
adc
cld
xchg
pop
js
jmp
loop
dec
sbb
inc
jbe
adc
shl
jns
adc
jmp
cld
jmp
inc
push
in
les
push
movs
ret
pop
inc
shl
sub
push
mov
xchg
icebp
out
cmp
imul
jl
pop
cmps
dec
push
ins
into
stos
lock
cmp
pushf
fcmovb
adc
mov
and
pop
aas
xor
shr
inc
mov
das
xor
jne
mov
mov
pop
mov
sar
sub
pop
mov
mov
mov
push
jae
mov
imul
jmp
std
xor
push
add
imul
fadd
imul
bound
push
jl
mov
and
hlt
ret
int3
pop
sahf
jmp
pop
and
loopne
call
in
pop
pusha
scas
arpl
or
xchg
mov
push
repnz
sbb
dec
cmp
cmp
mov
aaa
iret
inc
nop
lods
mov
stos
xor
dec
jmp
add
sub
jns
lock
sub
sub
and
out
(bad)
jmp
enter
push
outs
push
push
shl
mov
sbb
sbb
lods
cmp
loopne
xor
mov
sub
push
sar
call
das
inc
xchg
xlat
loop
xchg
mov
inc
mov
fcmovne
jno
mov
mov
add
(bad)
and
push
rcl
fdivr
ins
dec
or
mov
push
xor
(bad)
cs
mov
fsub
adc
sub
sub
fistp
sub
xor
loopne
outs
mov
jo
cs
jbe
stos
xchg
pop
ja
movs
jp
into
add
fisttp
dec
mov
sub
cmps
(bad)
dec
cmp
xchg
jns
cld
and
(bad)
or
arpl
sub
mov
ins
int
xchg
jo
outs
sub
cs
push
ins
rcr
dec
es
adc
lahf
jno
cmp
inc
imul
jbe
push
fs
stos
jmp
cld
xchg
daa
add
mov
rcr
js
mov
mov
adc
and
jp
sahf
push
add
push
xor
xchg
mov
mov
dec
push
in
push
mov
in
lods
cmps
sbb
cs
call
cmps
push
aam
cwde
and
add
int3
(bad)
call
popf
ja
sub
test
lods
jmp
push
jb
movs
hlt
test
push
push
pop
ins
popf
in
jne
aam
fisub
das
fild
or
lea
(bad)
jbe
pop
pop
mov
mov
inc
inc
cmp
pop
inc
and
cs
out
sub
mov
mov
enter
and
out
sbb
retf
mov
push
pop
dec
mov
or
(bad)
mov
cmp
or
adc
scas
stos
fistp
cwde
sub
xor
sbb
and
not
leave
pop
sub
cmp
xlat
jnp
sbb
(bad)
pop
pop
add
mov
push
mov
into
xor
int
cmp
adc
loopne
mov
arpl
mov
sub
pushf
push
mov
cwde
xchg
mov
cwde
fmul
or
push
fwait
mov
imul
imul
pop
imul
iret
jno
and
dec
into
jecxz
adc
popf
shl
lods
xor
jg
push
or
jae
xor
shr
nop
adc
jae
mov
xchg
loope
enter
in
sbb
mov
movs
cwde
mov
push
lds
outs
(bad)
jno
test
cmp
mov
or
ret
out
gs
enter
int3
sub
les
sbb
out
sub
mov
xlat
jg
push
out
jnp
push
push
xchg
push
sub
pusha
aam
(bad)
ds
jbe
das
pushf
into
mov
retf
les
sub
popf
mov
cwde
jns
enter
push
rcr
jg
mov
sbb
enter
imul
inc
je
movs
xchg
push
sbb
sti
mov
ret
fwait
dec
out
adc
test
xor
daa
ins
inc
dec
ret
aas
jp
inc
inc
jnp
mov
mov
mov
mov
sbb
daa
mov
mov
fidiv
les
repz
inc
pop
imul
faddp
dec
mov
fbld
call
cmps
mov
jo
clc
in
pop
xchg
adc
cmps
xor
mov
addr16
sbb
(bad)
in
add
fcom
into
mov
rcl
and
je
sahf
jbe
sbb
add
cmp
xchg
xor
scas
ins
into
(bad)
adc
sbb
sbb
jae
mov
call
addr16
pop
mov
jno
mov
inc
lods
jg
jl
push
cld
pop
push
pop
mov
mov
imul
bound
cdq
ret
pop
adc
push
stc
int
ins
lea
cmps
jbe
sahf
loopne
inc
jns
push
lock
rcl
ds
scas
fld
in
clc
lods
inc
cwde
mov
cmp
jmpw
mov
xchg
jb
pop
(bad)
push
push
movs
adc
pop
shl
push
std
sbb
imul
xchg
popf
cmp
retf
jmp
xchg
retf
retf
ret
gs
mov
add
add
clc
scas
enter
cmp
push
mov
pop
inc
inc
fsubr
xchg
xor
popf
fcmovnu
adc
data16
jle
push
xchg
mov
jl
inc
into
mov
imul
fcom
add
lods
adc
mov
lock
jne
mov
push
out
sub
mov
push
mov
je
popa
inc
inc
(bad)
jecxz
xchg
pop
mov
mov
js
rcl
sbb
adc
imul
push
lea
cdq
xchg
and
arpl
sbb
pusha
xchg
adc
xor
sbb
inc
mov
adc
(bad)
scas
popf
pushf
pop
pop
pushf
or
xor
sub
sbb
cmp
xchg
(bad)
jmp
add
cs
cmp
push
test
scas
push
xlat
push
sub
repnz
jo
push
out
ffree
cmp
or
imul
dec
cmc
mov
xchg
test
jg
mov
loopne
(bad)
fist
lahf
fstp
ins
and
rcr
lods
sbb
push
push
mov
mov
jns
fs
ins
into
cmp
and
jl
xor
inc
adc
std
mov
outs
test
cs
sub
nop
lea
arpl
or
or
pop
std
push
pusha
cmp
icebp
xor
sub
pushf
add
jle
sbb
pop
mov
xor
cmp
pushf
mov
pop
retf
gs
aaa
add
mov
inc
xor
ret
stos
rol
sahf
ds
mov
mov
pop
enter
ins
fwait
push
cmp
mov
loop
call
cs
imul
retf
cmp
sbb
pop
shr
int3
mov
xchg
data16
fisub
daa
cli
jl
cmp
jg
(bad)
mov
sar
push
int3
test
ins
mov
mov
leave
xchg
cmps
jge
pop
jae
jmp
pop
cdq
pop
imul
lods
cmp
out
mov
call
add
sbb
push
iret
popf
lahf
(bad)
in
mov
or
fst
jecxz
dec
inc
add
rcl
sbb
fs
or
data16
popa
xchg
loopne
or
arpl
mov
xchg
pop
pushf
std
popa
hlt
(bad)
fistp
sahf
std
popa
and
cwde
push
xor
mov
sub
and
fist
ret
repz
addr16
mov
mov
sbb
(bad)
pop
inc
add
pop
sbb
xchg
adc
adc
ins
ins
or
out
xchg
int
mov
nop
pushf
pop
xchg
jbe
push
test
push
sbb
cdq
jp
ins
test
std
imul
shl
popf
cdq
pop
les
xor
lods
and
xchg
sub
ins
sar
clc
or
es
bound
sub
cmp
xchg
adc
dec
lea
retf
cmp
cmp
jmp
xchg
jp
movd
xor
cmp
sub
push
push
mov
push
sbb
add
push
push
mov
pop
jp
xchg
fdiv
push
jb
xor
lahf
nop
iret
sbb
(bad)
cmp
jno
ret
pop
enter
xchg
fmul
adc
mov
adc
mov
ds
int
cli
mov
adc
jne
fnstsw
sub
lds
fcomp
aam
pop
movs
cwde
push
xchg
jp
or
in
aas
add
xchg
iret
addr16
inc
jo
jle
mov
xchg
and
push
mov
imul
rol
sub
sbb
data16
cmp
ins
cwde
movs
add
xchg
mov
mov
jne
jmp
call
add
scas
loopne
ins
dec
sbb
and
mov
mov
mov
dec
mov
mov
push
mov
pop
cmp
leave
outs
scas
jle
lahf
mov
out
sysexit
or
call
xchg
mov
lods
adc
movs
jge
jmp
adc
push
sbb
adc
mov
push
mov
mov
cmp
fisub
cmp
mov
xchg
movs
ja
mov
ins
mov
pop
mov
rol
sar
xchg
int
fisubr
je
sub
push
and
aaa
inc
push
jb
xor
nop
mov
pusha
adc
mov
xchg
add
fcom
les
rep
test
loop
push
(bad)
adc
xchg
in
retf
push
je
pop
and
push
xchg
repnz
adc
outs
add
mov
xchg
ins
push
push
adc
sub
or
xlat
push
cmp
ins
xor
call
ins
aam
int
lahf
cdq
stos
push
int3
das
loop
cmps
sbb
je
js
pop
call
scas
pop
cmp
stos
mov
sub
pop
sub
jb
jbe
aad
sti
retfw
and
cmp
fisub
adc
outs
fdiv
hlt
pop
cli
in
xor
xchg
mov
fcomp
enter
jge
fdivr
sub
cmp
add
mov
adc
mov
test
das
bnd
bound
ins
not
pop
dec
stos
jmp
mov
jae
pop
jmp
xor
pop
dec
(bad)
jmp
or
ret
push
ret
push
mov
enter
jmp
jne
pop
arpl
jns
sub
push
or
xchg
repnz
shl
dec
rcl
xlat
or
mov
cld
retf
in
push
jb
adc
cdq
inc
retf
int3
fdiv
mov
inc
retf
stc
and
cli
xchg
sub
js
call
dec
call
mov
fcmove
inc
pop
jae
ja
cmps
ret
test
and
mov
fst
push
bound
int
lahf
sbb
inc
sub
push
mov
pop
lods
cs
inc
jne
stos
sbb
fs
push
xchg
(bad)
shl
adc
mov
lods
sti
shl
push
int3
inc
cmp
or
push
or
push
test
aam
mov
clc
es
add
stos
add
cli
les
imul
scas
xchg
lock
xchg
xchg
ja
enter
xchg
xor
loopne
adc
mov
ds
(bad)
dec
pop
repnz
in
adc
cwde
and
add
ja
push
jp
sub
enter
arpl
xchg
dec
xchg
jp
pop
test
in
xchg
add
mov
loope
sar
call
sbb
fistp
dec
inc
stos
out
out
clc
mov
fld
repnz
(bad)
addr16
dec
jle
cmp
movs
ret
outs
cmp
(bad)
jge
dec
call
das
aam
repnz
popa
push
cdq
mov
xor
rol
inc
xor
(bad)
adc
sub
mov
adc
dec
xor
fwait
sub
les
sub
push
fsub
cmp
shl
retf
stos
gs
enter
cmp
aaa
xlat
int3
fwait
ret
jge
adc
repnz
in
sbb
cli
jecxz
outs
clc
or
mov
daa
xchg
pop
mov
and
pop
push
push
pop
push
stos
shl
push
scas
invd
mov
sti
mov
popa
push
sbb
dec
jmp
dec
add
(bad)
retf
mov
lahf
bound
push
test
ror
sbb
sub
xor
movs
mov
gs
and
pop
pop
bound
xchg
or
retf
jnp
mov
dec
fcomp
pop
sbb
jne
pop
(bad)
out
jle
adc
pop
fiadd
cld
mov
and
scas
xor
jne
outs
pop
mov
out
add
loopne
stos
dec
sbb
xchg
mov
je
jp
ins
add
jecxz
adc
inc
dec
mov
icebp
pop
out
js
mov
xchg
and
test
xchg
rcl
push
dec
push
mov
cld
in
sar
popf
pop
sbb
cmp
(bad)
push
test
fbstp
jmp
jp
inc
pop
nop
pop
mov
xchg
out
mov
jnp
outs
mov
or
push
sbb
inc
cmp
call
mov
ins
dec
xlat
pushf
push
or
or
cwde
xor
cs
jl
mov
jl
mov
xchg
inc
hlt
jbe
and
mov
jge
or
xchg
sar
fisttp
idiv
stos
jno
cmp
dec
jbe
call
xor
jge
push
mov
pop
lods
dec
or
adc
mov
push
enter
div
xor
cmps
ss
xchg
mov
mov
lea
cld
(bad)
fcomp
aad
mov
ret
jnp
adc
jnp
std
or
pop
sub
out
or
inc
mov
jo
mov
aaa
aad
cdq
ret
mov
mov
in
adc
mov
(bad)
xor
enter
icebp
jno
inc
cmp
sahf
clc
or
sub
lahf
js
add
mov
pop
out
xchg
dec
hlt
fwait
mov
cmp
mov
mov
and
retf
outs
push
mov
push
push
mov
and
adc
jmp
pop
das
imul
xchg
mov
in
mov
ss
mov
pop
pop
pop
mov
pop
adc
mov
fs
xchg
mov
out
xchg
mov
sahf
ds
jmp
inc
in
repnz
xor
sbb
and
(bad)
mov
sub
fimul
lahf
jl
push
adc
sub
xchg
rcr
out
cmps
dec
fwait
adc
mov
movs
bound
test
pop
sbb
xor
cmp
pop
mov
test
out
movs
fimul
cli
fwait
pop
pop
rol
xchg
imul
cs
js
hlt
dec
clc
icebp
pop
das
ins
push
jnp
or
arpl
sbb
stos
(bad)
imul
les
push
inc
test
jp
xchg
pop
fadd
mov
cmp
nop
shl
add
mov
pop
cmp
xchg
push
test
mov
mov
mov
push
shl
test
not
sub
inc
push
aas
fucomip
and
fisttp
and
not
xchg
sbb
call
jle
ins
mov
mov
shr
xchg
or
leave
cwde
daa
iret
test
ins
fisubr
in
cmp
(bad)
mov
mov
shr
xchg
and
pop
retf
fcmove
stc
xchg
les
je
sub
cmp
inc
xor
mov
inc
push
fisub
push
xchg
xor
xchg
inc
js
addr16
out
fstp
fild
cld
and
rol
pop
pop
jmp
pop
es
xchg
pop
and
rcl
and
in
sub
(bad)
arpl
lods
movs
mov
dec
ror
sub
cmp
rcl
data16
add
fiadd
mov
jge
mov
fbld
xchg
test
pop
mov
pop
lahf
or
or
ret
mov
jg
hlt
mov
loopne
call
xchg
xor
inc
sbb
mov
mov
retf
adc
cmp
(bad)
in
inc
adc
ins
int3
add
cli
out
ds
dec
ds
test
aad
sub
sar
ret
sbb
adc
xor
lock
mov
push
cdq
pop
retf
adc
fisttp
(bad)
out
out
push
sub
aad
mov
pop
iret
scas
nop
pop
(bad)
cmp
or
sbb
and
cmp
push
mov
and
clc
in
cmp
test
or
int3
jl
sub
cmp
inc
(bad)
daa
cmp
mov
cmp
inc
inc
(bad)
jb
xchg
sbb
enter
cmp
(bad)
adc
js
jno
cmp
inc
not
(bad)
fmul
hlt
cmp
bound
pop
add
lods
les
div
adc
pusha
sbb
loope
xor
retf
push
aam
or
push
or
pusha
lods
dec
call
or
enter
test
add
dec
or
ret
mov
jge
cmp
sub
push
mov
out
pusha
inc
imul
mov
stos
pushf
shl
mov
sbb
cmp
xor
and
sbb
or
out
(bad)
adc
dec
scas
call
pop
add
stos
xlat
test
and
test
sbb
retf
call
push
push
push
pop
push
sub
inc
mov
mov
callw
aam
sbb
xlat
sbb
je
test
sub
mov
dec
adc
ja
pop
inc
stos
xchg
push
mov
cdq
sub
mov
pop
add
sbb
or
not
or
jae
ret
inc
sbb
outs
jl
mov
push
and
scas
out
xchg
pop
inc
cdq
outs
sub
or
icebp
add
jns
dec
mov
sub
push
jne
xchg
mov
shl
pop
out
js
repz
dec
(bad)
xchg
pop
pushf
mov
pusha
pusha
mov
les
retf
retf
in
xchg
pop
lahf
mov
test
arpl
or
add
cdq
popa
shr
push
rcl
into
jl
jl
mov
int
xchg
das
cdq
shl
pop
jl
ret
mov
imul
(bad)
xor
out
adc
mov
push
cmp
fwait
mov
rcl
test
xor
(bad)
xchg
aad
sub
stc
nop
sub
aaa
inc
cwde
arpl
ins
sar
cmp
lahf
fdivr
jne
cmp
lods
ret
sbb
sti
push
ds
fcomp
xchg
mov
push
xor
fwait
sub
cmp
int
mov
add
outs
push
gs
add
and
rcl
push
pusha
inc
inc
and
loop
and
fs
sbb
sbb
dec
dec
stos
pop
inc
nop
mov
mov
jl
push
adc
(bad)
pop
adc
inc
pop
adc
xchg
push
retf
out
inc
sbb
add
add
(bad)
cld
sbb
sar
ins
cli
clc
pop
cld
es
or
and
aad
fs
add
add
jne
jae
mov
inc
les
outs
lock
adc
dec
dec
fsubr
call
xchg
fldenv
outs
shl
xchg
repnz
jo
das
push
js
retf
fnstsw
fld
sub
rol
cmp
je
fmul
push
xlat
popa
rol
and
fiadd
adc
repnz
bound
unpcklps
add
and
int
in
sar
bound
pop
jno
test
mov
fsub
ret
sbb
das
(bad)
dec
adc
pop
fnclex
call
arpl
ins
mov
stos
sbb
pop
repz
or
hlt
int
mov
or
jo
cmp
pop
sti
fsubp
jmp
mov
imul
push
and
mov
dec
sar
adc
pop
fidiv
shr
(bad)
sbb
fsub
sbb
scas
test
das
fdiv
adc
inc
or
rol
stos
dec
mov
leave
adc
cmp
mov
or
dec
dec
outs
or
xchg
fadd
push
push
cmp
sbb
(bad)
retf
daa
sub
leave
dec
cli
sbb
dec
dec
bound
push
push
sub
push
jp
jmp
fwait
mov
adc
sbb
mov
jb
or
gs
enter
sbb
fwait
mov
(bad)
fcomp
mov
mov
push
jmp
retf
scas
dec
and
retf
sub
inc
iret
dec
das
pop
push
imul
mov
pop
fucomp
mov
scas
push
retf
into
jmp
rol
mov
cmp
addr16
icebp
or
cld
mov
pop
push
xlat
push
and
imul
pop
rcl
fnop
stos
xor
clc
scas
jl
xor
push
fcmovu
xchg
adc
pop
xchg
add
add
lahf
ret
adc
sar
popf
adc
jbe
clc
mov
nop
in
xlat
mov
aaa
add
push
mov
data16
dec
or
dec
das
movaps
inc
push
jb
out
add
dec
retf
xor
gs
data16
arpl
jbe
inc
mov
ficomp
out
mov
jnp
leave
out
div
cli
cmp
adc
dec
movs
rcl
cmc
cmp
iret
jecxz
push
fsub
push
jecxz
add
out
es
bound
or
js
xor
sbb
aam
mov
pushf
(bad)
pushf
shl
mov
lods
ficomp
lods
xor
iret
push
or
nop
jg
cmp
pop
pop
dec
mov
movs
mov
xor
and
sbb
jge
adc
push
cmp
outs
(bad)
mov
jecxz
push
sbb
loop
and
dec
rol
test
in
xchg
jns
sub
inc
pop
cld
push
into
jbe
imul
(bad)
cmp
push
ffreep
mov
push
ror
out
hlt
mov
enter
mov
rol
mov
mov
cmc
int3
or
dec
clc
xchg
jp
out
xchg
inc
adc
sar
add
cmp
or
sbb
sbb
push
addr16
or
pop
not
arpl
pop
xor
push
push
rcr
ins
stos
enter
mov
inc
ret
jns
ja
xor
push
stos
xor
push
mov
call
pop
shr
inc
imul
push
bound
jnp
mov
lods
stos
jns
das
pop
cld
arpl
test
je
popa
and
fdivr
sbb
les
ret
in
cmps
sti
retf
xor
xchg
adc
adc
push
mov
fstp
daa
jnp
in
fmul
fisub
mov
push
aad
lods
js
ret
es
mov
cli
fwait
in
cld
and
mov
ror
and
es
imul
push
or
dec
cmc
dec
pop
push
mov
popa
xchg
mov
ins
push
hlt
in
pop
ss
or
not
popa
xchg
les
stos
or
sbb
das
sbb
mov
dec
sub
adc
mov
fidiv
fdivr
jmp
jl
push
sbb
and
xchg
jp
jne
xor
aad
iret
xor
jle
movs
mov
dec
std
add
call
loope
lock
aas
sub
inc
rcl
sahf
push
iret
push
jmp
fs
js
clc
in
and
cmp
fsub
cmovge
stos
out
jmp
call
ja
shl
dec
jmp
aas
mov
xor
aas
loope
clc
sbb
push
cli
aad
pop
xchg
repnz
sbb
pop
repnz
call
pusha
mov
adc
pusha
imul
(bad)
je
scas
inc
push
push
mov
dec
xor
mov
stos
lea
aad
dec
mov
sbb
ins
pop
pop
pop
loop
test
pop
jecxz
cli
jge
jle
jmp
rcr
push
ret
lea
inc
call
pop
or
inc
push
cs
mov
or
pop
call
mov
mov
dec
outs
lods
aam
mov
sbb
das
test
inc
mov
sub
inc
xor
sbb
ss
mov
dec
pushf
imul
inc
and
fsubr
rcl
in
cmpxchg
jge
cdq
and
dec
test
into
pop
add
in
ficomp
pop
ror
ja
out
mov
pusha
dec
mov
sub
pop
push
sahf
pop
jns
std
sbb
inc
adc
int
mov
fisttp
dec
fidiv
mov
test
jmp
iret
adc
arpl
ins
and
cmp
add
sub
xchg
push
add
std
out
xchg
pop
(bad)
out
out
xor
je
movs
and
repz
out
hlt
add
retf
or
sbb
stos
test
adc
popa
push
mov
cdq
mov
cld
or
dec
xchg
dec
mov
in
rcl
cmp
outs
and
cld
loop
jae
xor
pop
cmps
nop
sub
cmp
jbe
repnz
push
test
lods
cmps
out
pop
sar
retf
xor
outs
jge
mov
sbb
pushf
cmps
aas
clc
jno
adc
mov
xchg
sub
jo
push
mov
popa
xchg
inc
push
lods
repz
jmp
mov
(bad)
mov
das
fwait
adc
ror
xchg
je
pop
or
jns
retf
movs
leave
test
aad
arpl
push
dec
out
xchg
leave
xlat
or
mov
popa
xchg
xlat
outs
pop
rcr
icebp
rcl
add
push
mov
inc
xchg
inc
addr16
mov
mov
cli
pop
ficomp
int
ret
sub
mov
ins
lahf
adc
fld
pop
call
enter
sub
clc
ss
(bad)
fcom
jns
mov
ins
pop
and
arpl
mov
shl
(bad)
mov
sbb
xchg
xchg
push
sbb
out
jno
imul
(bad)
adc
jmp
setno
ret
inc
sub
jo
stos
cmp
imul
add
icebp
(bad)
js
or
mov
adc
(bad)
cwde
ds
test
imul
test
sub
push
mov
mov
push
int3
inc
and
adc
jecxz
in
jnp
xchg
sti
inc
lods
stos
lds
(bad)
dec
arpl
es
mov
pop
out
imul
jle
mov
mov
push
adc
jl
rcr
stos
jmp
fst
pop
int
inc
mov
loope
fmul
imul
iret
rcl
cwde
popf
push
xchg
gs
add
iret
adc
cdq
xchg
xchg
push
inc
mov
cmp
out
sub
xchg
jg
aad
and
call
jne
pushf
push
outs
into
inc
jle
and
xor
or
aas
pop
cmp
cs
enter
pushf
xor
fisttp
dec
mov
pop
jmp
cmps
pop
imul
xchg
mov
int
dec
sti
test
jo
sbb
out
test
adc
sub
inc
or
ror
xchg
fild
sbb
fild
cmp
sahf
push
mov
fisub
cwde
sub
daa
imul
cmp
(bad)
or
movs
arpl
into
mov
fisttp
rcr
push
jb
fs
add
arpl
mov
dec
xchg
lds
lock
nop
das
int3
push
enter
retf
outs
cwde
js
in
bound
mov
out
push
push
test
jns
hlt
adc
mov
sahf
adc
dec
sub
jg
retf
in
add
fisub
cmp
jb
pusha
shl
pop
push
hlt
push
xor
sub
stos
adc
ins
jne
in
imul
cmp
sub
movs
test
dec
test
iret
xchg
cwde
in
pusha
outs
sub
popf
mov
sbb
pop
outs
dec
loopne
retf
sbb
mov
xchg
push
xchg
imul
cwde
xchg
dec
and
ret
sub
arpl
xor
into
mov
jnp
jne
add
mov
pop
inc
ret
mov
mov
scas
pop
fmul
push
mov
mov
xchg
mov
mov
jmp
dec
push
sbb
push
pop
jmp
lea
jl
shl
push
pop
fstp
arpl
sbb
jp
push
rol
mov
sahf
loop
mov
es
shr
sub
js
popf
jbe
mov
mov
xchg
cwde
pop
shr
shr
ins
test
in
pop
neg
sbb
xchg
shl
repz
inc
xchg
inc
cmp
xor
cmp
add
(bad)
loope
(bad)
dec
lea
test
jbe
call
loop
sub
sub
push
sbb
sbb
dec
dec
push
mov
fisubr
sbb
int
jbe
dec
retf
dec
mov
jmp
mov
mov
and
push
mov
data16
clc
rcr
loope
pop
ins
test
inc
dec
cmp
pop
shl
push
fwait
and
loopne
dec
repnz
js
inc
mov
adc
and
cmp
mov
mov
adc
aam
outs
inc
inc
adc
mov
jle
jmp
aad
pop
lods
imul
add
loopne
(bad)
in
int3
add
imul
in
(bad)
mov
adc
in
xor
jmp
aad
dec
adc
add
test
adc
inc
sbb
sbb
xor
xor
sbb
mov
(bad)
movs
aaa
or
push
mov
dec
pop
loop
or
jl
xchg
stc
aas
scas
or
fld
mov
push
cld
ss
popf
fld
mov
dec
mov
lods
mov
das
js
pop
in
lock
xchg
repnz
outs
mov
push
arpl
adc
fst
or
or
cs
cmps
out
(bad)
lods
je
ins
jmp
pop
dec
sbb
push
scas
call
mov
sar
fidivr
or
sbb
mov
ins
in
cmp
or
lods
adc
aam
fbld
bound
sar
clc
dec
mov
mov
push
cdq
xor
shr
pop
mov
les
(bad)
mov
push
sahf
adc
bound
dec
inc
test
int
popa
dec
(bad)
push
push
push
mov
pop
sub
pop
mov
sar
xchg
inc
call
lea
dec
lahf
and
jbe
xor
dec
ins
mov
or
cmp
loopne
inc
cmp
das
lahf
add
push
jne
dec
aad
push
ins
pop
jle
out
das
jmp
mov
push
loop
and
jnp
xlat
and
stc
pop
adc
lea
jbe
imul
cmc
cmp
jl
pusha
sbb
ds
das
add
and
(bad)
in
out
aas
pop
loop
cmp
xor
adc
ret
sbb
daa
sahf
or
jge
jecxz
dec
xor
jle
jne
xchg
sbb
pop
xchg
iret
xor
adc
or
stc
das
cmc
xchg
out
mov
mov
fnsave
cli
mov
movs
jbe
adc
ret
cdq
rep
out
adc
inc
pop
fst
or
and
pop
mov
dec
inc
and
test
mov
mov
(bad)
wrmsr
pop
in
repz
call
mov
sbb
or
mov
sbb
mov
ins
jmp
shl
stos
xchg
hlt
dec
hlt
lock
dec
xchg
sub
fs
lahf
pop
push
or
push
and
arpl
xchg
mov
cmp
sti
bound
mov
leave
add
lahf
and
cli
cmp
and
in
call
mov
in
sbb
xlat
jnp
adc
scas
or
outs
mov
aaa
cli
out
fisttp
push
test
mov
repnz
int3
test
push
mov
dec
and
mov
adc
ins
stc
xor
lea
ds
movs
ss
mov
sbb
xchg
inc
cmp
enter
inc
hlt
lock
mov
scas
cmp
sbb
pop
inc
lods
mov
scas
add
ror
adc
shr
mov
iret
shl
js
cmp
cmp
jo
push
sbb
sbb
mov
(bad)
(bad)
jge
lods
pop
dec
das
push
push
add
clc
(bad)
into
inc
sti
add
xchg
test
fsub
out
push
sub
ret
pop
mov
add
fs
(bad)
gs
jns
in
lods
push
jle
xchg
enter
cmps
push
fwait
dec
xor
scas
adc
mov
jp
pusha
dec
cmp
add
sbb
sbb
adc
sub
movs
movs
mov
icebp
sub
sub
add
xchg
f2xm1
mov
(bad)
aas
fnstenv
test
sbb
stc
and
sub
xor
sti
and
xchg
(bad)
rol
lods
out
(bad)
stos
cmp
das
sbb
sbb
push
mov
mov
xlat
test
mov
enter
push
jbe
int3
push
inc
jp
(bad)
cmp
xor
cdq
sub
mov
xchg
and
pop
xchg
outs
jecxz
cmp
pop
outs
bound
cmp
out
out
or
jge
mov
dec
jge
inc
(bad)
enter
lock
mov
jae
(bad)
shl
mov
mov
test
adc
ret
cmp
lock
jbe
xchg
push
inc
popf
aam
cmp
jo
mov
dec
jle
mov
pop
lods
int3
push
xor
mov
loope
pop
and
imul
repnz
gs
retf
rol
xchg
cmp
add
retf
fsub
repz
mov
(bad)
pop
aad
and
dec
stos
inc
out
xor
adc
sbb
xchg
adc
std
mov
mov
inc
jne
mov
mov
sub
enter
xchg
neg
adc
inc
nop
loope
mov
aam
pop
ret
mov
mov
xchg
xlat
or
adc
aad
pop
aaa
setge
out
add
test
je
in
push
pop
mov
pop
js
and
fld
(bad)
jne
imul
into
aas
xchg
retf
pop
push
dec
inc
or
repz
jns
sub
cmp
jmp
das
xor
mov
mov
cli
xchg
dec
jno
push
cmp
pop
sbb
fiadd
scas
mov
data16
push
les
ret
adc
xchg
into
xchg
lock
adc
gs
or
cmp
and
jb
(bad)
cmp
loop
pop
test
shl
xchg
push
lock
fnstsw
cld
movs
call
jg
mov
idiv
mov
imul
nop
inc
mov
popa
sbb
jg
mov
mov
sti
iret
rcl
xchg
adc
jns
sbb
jmp
inc
lods
push
in
sub
popa
pop
add
(bad)
clc
pop
inc
jbe
loopne
cmp
pop
arpl
mov
iret
adc
call
addr16
adc
icebp
popf
daa
in
xlat
sub
call
arpl
fild
sbb
dec
cmp
inc
inc
fstp
xor
sub
cmp
ins
and
scas
dec
jle
xor
fs
sub
mov
neg
pop
lock
cmp
inc
mov
adc
iret
es
pop
mov
repz
adc
sahf
mov
jbe
pop
sub
fadd
repnz
xchg
in
dec
repz
jns
adc
cmc
dec
sub
inc
repnz
jns
test
mov
push
retf
mov
cld
sub
cmp
loopne
mov
cld
adc
add
fmulp
shl
aam
imul
ins
retf
test
es
in
cmps
lods
(bad)
js
adc
test
test
fstp
xor
pop
popa
loop
es
add
or
dec
lods
aam
fcmovb
mov
sub
dec
stc
add
stc
movs
add
sub
ins
or
pop
outs
fstp
mov
mov
add
es
jmp
mov
or
and
adc
popa
push
enter
mov
(bad)
cs
and
lods
pop
js
push
stc
cmp
cdq
pop
push
jb
inc
in
jno
cmps
leave
cwde
cld
sahf
shl
(bad)
and
mov
lahf
adc
sub
mov
and
rcr
sti
int
test
ins
aaa
sub
cmp
dec
ins
mov
mov
je
xchg
enter
mov
daa
adc
(bad)
mov
ss
lea
jl
fwait
movs
xchg
and
xor
mov
fs
xor
and
dec
jo
je
dec
(bad)
out
sub
mov
loope
cvtdq2ps
push
add
xchg
lods
mov
cdq
mov
enter
adc
sbb
ja
mov
outs
fcmovnb
retf
das
cs
push
sbb
cli
fwait
lahf
xchg
pop
ror
push
(bad)
loope
fst
and
les
mov
fwait
movs
push
out
dec
mov
mov
push
sbb
mov
sub
aaa
sub
bound
fs
retf
adc
xchg
mov
push
leave
xor
push
lea
mov
push
dec
dec
(bad)
jmp
cwde
sub
sbb
popf
mov
or
xor
in
cmc
sbb
adc
xchg
cwde
add
jne
sub
cmp
cmp
jecxz
outs
stc
jne
shl
or
mov
or
les
jmp
clc
lock
iret
cmps
mov
sti
jne
sub
or
sbb
out
jno
jb
sbb
mov
push
je
pop
(bad)
and
xchg
mov
(bad)
jno
push
jmp
ja
mov
test
xor
in
and
nop
retf
movs
push
pop
add
push
pop
and
inc
cli
or
adc
ficomp
add
popf
push
addr16
pusha
push
sbb
jmp
shr
push
mov
test
pop
(bad)
loopne
cmp
(bad)
mov
test
cmps
or
mov
adc
(bad)
(bad)
stos
ret
jne
ja
sub
adc
jae
pop
in
mov
jge
and
jo
cmp
mov
ds
mov
cmps
and
pop
arpl
mov
test
stos
push
sbb
lock
loopne
ror
mov
dec
pop
adc
xor
dec
(bad)
xlat
inc
repz
pop
shl
pop
aaa
arpl
push
stos
mov
jg
icebp
adc
mov
dec
in
jbe
cld
inc
daa
pushf
movs
adc
ins
popa
push
pop
xchg
mov
push
dec
xor
xchg
adc
sub
iret
mov
imul
mov
(bad)
sub
pop
inc
mov
push
cdq
push
dec
xor
xchg
jno
test
test
sbb
mov
pop
xchg
cmp
cdq
mov
repz
ins
push
addr16
pop
jmp
idiv
loop
jb
or
cmp
sbb
xor
hlt
jb
pushf
test
ret
shr
cmc
int3
sub
jmp
sub
test
or
stos
les
jnp
sub
sub
cmc
push
inc
cs
mov
scas
scas
and
cwde
iret
mov
add
xchg
int
test
sahf
mov
retf
das
cmp
pushf
inc
cld
test
and
iret
adc
inc
xchg
test
int
retf
and
cmp
fsubp
test
test
dec
adc
add
inc
aad
cld
inc
call
mov
test
sub
jb
lods
xchg
cmps
adc
fmul
or
cli
sub
jmp
xor
mov
xor
xor
test
fwait
cmp
std
stos
add
iret
leave
test
enter
pop
jmp
dec
xchg
mov
push
mov
scas
or
add
push
dec
adc
lock
gs
jb
xchg
sar
pushf
mov
or
or
hlt
imul
xchg
stc
in
push
xor
aad
clc
pop
xor
shl
stc
(bad)
mov
inc
je
cmps
xor
sub
mov
pop
push
(bad)
ds
xlat
aam
or
and
shl
sbb
mov
out
dec
xchg
mov
loopne
add
mov
fs
mov
ins
mov
ror
sub
daa
in
add
sub
push
jns
pop
fwait
push
jnp
push
pushf
pop
lock
loop
pop
inc
jmp
cmp
sub
aam
fyl2x
ins
xchg
fisub
scas
jp
scas
or
mov
push
scas
sbb
adc
sub
push
enter
xor
mov
jge
sbb
out
arpl
gs
es
xchg
enter
call
pop
gs
test
xor
loopne
lahf
inc
(bad)
mov
inc
in
test
cmp
pop
mov
dec
fnstcw
mov
in
jmp
push
pop
sub
sbb
and
ret
test
pop
mov
inc
cmps
js
dec
iret
lock
sub
lahf
xchg
out
lods
in
(bad)
fiadd
es
adc
sub
retf
js
cmps
or
cld
xor
test
mov
jl
mov
push
in
cmp
clc
inc
jl
mov
push
repz
retf
mov
mov
js
add
sbb
and
inc
std
add
test
in
movs
call
fistp
cmp
xchg
pop
cmp
cs
outs
or
sub
mov
or
pop
stos
out
mov
cmp
adc
mov
out
neg
test
sub
shl
fcom
mov
fld
stc
push
cwde
inc
dec
popf
push
inc
packssdw
xor
pop
push
xchg
clc
stc
ficom
push
cmps
xor
sub
aaa
retf
pop
add
sub
dec
push
cli
adc
cdq
ror
movs
stos
aaa
pop
add
cmp
xor
mov
xor
adc
das
and
fstp
fimul
ret
idiv
hlt
sbb
dec
jne
inc
fwait
js
jno
xchg
iret
enter
outs
jmp
mov
cdq
clc
(bad)
pop
imul
xchg
hlt
jnp
adc
xlat
cmp
int3
push
pop
sub
xor
nop
or
test
sub
pop
dec
aam
pop
out
test
jo
sub
inc
adc
out
jecxz
push
sub
mov
xchg
sbb
jbe
(bad)
xchg
fwait
and
adc
or
sub
mov
(bad)
or
aas
ror
repz
cmps
pop
lods
and
pop
arpl
scas
cwde
xor
fldcw
bound
xlat
add
test
enter
ins
sbb
lahf
sbb
jge
sub
cld
ja
mov
cwde
bound
pcmpgtw
imul
jnp
dec
fs
scas
stos
iret
adc
jle
ins
mov
xor
call
mov
push
test
mov
(bad)
push
in
inc
pushf
add
push
mov
sub
xchg
adc
adc
clc
stc
mov
cmps
in
mov
or
inc
adc
punpckhdq
sbb
jmp
pop
into
out
xor
cmp
add
xchg
add
sub
bound
xchg
test
lock
(bad)
jg
movs
inc
mov
neg
test
mov
push
inc
fcmovnu
jnp
loopne
scas
mov
(bad)
sar
sub
push
xor
out
aaa
sbb
mov
neg
dec
add
push
stc
js
mov
fisttp
jmp
ins
pop
(bad)
into
dec
mov
adc
mov
imul
loopne
xchg
scas
fstp
xchg
enter
cmps
sbb
mov
dec
(bad)
cmps
and
jns
retf
test
ret
or
int3
adc
and
push
clc
ja
add
xor
pop
adc
jb
add
int3
pop
adc
stc
add
dec
stc
mov
ror
push
call
js
jmp
mov
in
iret
push
dec
jl
(bad)
xor
pop
push
retf
xlat
or
ins
addr16
adc
inc
jne
xchg
pop
fdecstp
repnz
(bad)
cmc
mov
je
jl
in
cld
cmps
loop
adc
inc
fs
mov
stos
push
pop
pop
aad
adc
push
rcr
push
add
or
inc
or
test
ficom
test
and
jl
psubusb
cmp
ds
(bad)
adc
das
pusha
xchg
repz
fs
stc
aad
pusha
xchg
stos
mov
shl
push
sub
push
lods
sbb
jge
mov
mov
aam
aas
fild
adc
adc
pop
out
pop
cmp
sbb
sub
sub
mov
(bad)
mov
jl
jns
inc
dec
popa
mov
dec
add
outs
add
rol
sub
popf
jnp
sbb
push
nop
cwde
int3
loop
cli
adc
imul
add
adc
in
mov
or
call
clc
sar
xor
ret
pop
mov
jbe
xor
dec
daa
retf
jo
mov
adc
loope
nop
dec
adc
movs
mov
mov
sub
xor
dec
stos
call
fild
push
sub
fdivr
jbe
push
xchg
int3
pop
loopne
inc
inc
test
in
xlat
sub
mov
call
pop
shl
ins
sar
pop
lods
cld
sbb
push
bound
xchg
jo
add
push
pop
or
test
mov
cmp
movs
push
push
cmp
xchg
sub
lahf
mov
push
jmp
push
fnstsw
call
imul
je
mov
out
nop
fldenv
sbb
ret
popf
mov
pop
or
mov
xlat
add
call
pop
adc
push
shl
test
sahf
jecxz
add
dec
dec
pop
mov
mov
fild
pop
sub
popf
sub
mov
inc
js
inc
sbb
add
fs
push
mov
mov
int3
fld
cmc
jle
(bad)
arpl
js
popf
je
mov
mov
sub
aad
mov
(bad)
pop
ss
aas
(bad)
or
into
add
stos
cwde
js
fdivr
arpl
adc
outs
adc
push
sbb
mov
arpl
jl
sbb
nop
ja
mov
push
xor
xor
rcl
or
fstp
fdiv
jo
dec
addr16
pop
pop
push
push
mov
scas
out
dec
push
mov
rol
popf
jmp
cs
out
push
mov
cwde
push
sbb
sub
xlat
cmps
push
cmp
dec
std
(bad)
mov
push
repnz
fisubr
xor
mov
push
sbb
inc
inc
popa
outs
cmp
cmp
xchg
mov
dec
push
jle
(bad)
cmp
leave
push
not
lods
add
and
in
cs
mov
imul
mov
jbe
cmp
test
jecxz
pushf
nop
jne
fwait
sbb
pop
xor
inc
mov
jae
sub
das
xor
iret
test
mov
mov
inc
retf
jl
xchg
sti
lahf
xor
inc
inc
std
loopne
jl
jg
mov
lods
pop
aas
adc
dec
shl
sub
les
and
sub
nop
lahf
push
push
or
ins
mov
xor
loopne
cmp
push
xchg
cli
pop
pop
(bad)
lock
scas
cmp
daa
adc
ins
jmp
mov
imul
push
movs
cs
lea
ret
dec
imul
sub
sbb
sbb
ret
cmps
dec
pop
adc
sbb
inc
push
jnp
mov
xchg
push
mov
adc
in
xor
jae
ror
or
(bad)
adc
daa
mov
xchg
xor
mov
rcr
nop
jp
arpl
mov
pusha
mov
jp
ror
mov
inc
mov
mov
or
ins
stos
pop
imul
out
mov
shr
push
lods
icebp
pop
(bad)
mov
lods
pop
push
xor
aaa
test
cs
sbb
enter
cdq
mov
sub
mov
sub
jle
xchg
cmp
mov
neg
push
inc
ret
rcl
lods
pop
lods
fist
test
sbb
pop
ror
jecxz
push
xchg
(bad)
or
icebp
pop
adc
cmps
loope
mov
push
mov
pop
pushf
sbb
sti
jp
xor
push
push
push
xor
je
les
xchg
sahf
in
popf
jae
stos
cmp
jge
leave
cli
or
es
adc
add
mov
or
dec
sbb
cli
mov
lock
add
repz
rol
out
and
jnp
mov
fsub
ficom
stos
sub
js
stc
std
dec
jno
sahf
add
je
or
add
leave
push
cmp
les
bound
repz
pop
popf
pop
mov
rol
mov
fldcw
adc
pop
je
ins
sar
aad
xchg
(bad)
scas
out
les
or
dec
mov
shl
ror
(bad)
lock
add
xor
ret
cdq
rcl
(bad)
imul
sbb
push
xor
adc
(bad)
xor
xor
inc
pop
lods
xchg
mov
scas
pop
mov
or
lods
das
jle
clc
popf
or
push
call
add
jl
or
xor
pop
ins
jge
inc
push
mov
or
mov
into
sbb
adc
sti
mov
lea
xchg
scas
cmp
repz
pushf
add
iret
ins
not
sub
sub
pop
mov
inc
push
push
push
fmul
push
dec
fisttp
or
int
and
jecxz
and
mov
xchg
outs
shr
iret
out
mov
xor
mov
dec
or
ja
popf
sar
cmp
pop
bound
mov
mov
inc
ja
jge
into
es
pop
inc
stc
rcl
push
test
fs
inc
cmp
cmp
out
mov
dec
icebp
mov
dec
jae
arpl
add
jae
je
mov
mov
jae
and
sti
aam
jbe
rcl
sbb
movs
jb
jns
push
(bad)
arpl
inc
adc
or
ins
(bad)
lods
or
ds
bound
les
popf
cmp
add
or
test
retf
sub
fs
inc
fst
push
(bad)
pushf
cmps
dec
sub
mov
rol
mov
cli
loope
stos
pop
repnz
push
(bad)
jge
mov
ja
cmp
dec
add
dec
dec
repz
jmp
xchg
dec
jmp
shl
scas
aad
in
sub
scas
scas
jbe
lock
adc
rcr
in
adc
xor
aas
das
push
mov
pop
icebp
adc
or
outs
aaa
push
adc
cmp
xchg
pop
and
jge
fstp
mov
bnd
test
fsubr
pop
push
fldenv
jb
sub
lahf
jmp
out
lock
sbb
mov
cmc
push
js
loopne
xlat
pop
(bad)
pop
jl
xor
adc
(bad)
stos
mov
push
fisubr
mov
popa
xor
pop
jae
ja
lahf
xchg
cmps
adc
cwde
pop
pop
sbb
scas
pop
add
leave
adc
(bad)
fild
push
loop
cmp
dec
fadd
and
popa
stos
cmp
fistp
je
pop
bound
jp
inc
repz
mov
pop
pop
xor
dec
jl
inc
aas
xchg
add
xor
in
mov
xor
out
int3
in
mov
int3
out
gs
dec
aam
cmp
in
test
popf
dec
xlat
and
into
and
setl
push
xchg
push
mov
sbb
hlt
xor
clc
imul
(bad)
call
loopne
pop
mov
pop
cmc
retf
mov
jbe
iret
push
xor
test
out
(bad)
jo
cmp
inc
fdiv
adc
cmp
neg
test
push
ja
cmp
fst
cs
pop
push
or
mov
xchg
push
shl
xor
std
cmp
pop
mov
dec
repz
add
xor
push
inc
dec
out
pop
mov
fisubr
pop
rcr
adc
mov
aas
mov
and
xchg
mov
dec
jle
jp
push
cld
pop
pop
pop
call
ja
fs
mov
pop
mov
fidiv
iret
ss
jne
ror
mov
cli
(bad)
sub
push
fwait
outs
xor
xchg
out
dec
test
in
test
push
lea
fstp
sbb
mov
pop
(bad)
cmp
lea
adc
jno
mov
push
mov
push
mov
fs
push
aas
mov
sti
ins
dec
mov
cmp
js
ss
push
mov
in
fmul
mov
(bad)
push
pop
outs
sbb
xchg
outs
cmps
xor
ja
lock
pop
cwde
mov
ins
cdq
sub
dec
call
jg
dec
clc
add
stc
fcom
aas
push
arpl
inc
cmps
inc
ins
xor
xor
inc
mov
sbb
pusha
push
jecxz
pusha
add
cmp
btr
lahf
push
push
push
std
lahf
jg
les
push
into
inc
inc
inc
std
je
out
sub
cdq
(bad)
arpl
add
xchg
popaw
and
repnz
pop
xchg
pop
enter
or
jmp
fnstcw
retf
iret
jns
xchg
mov
inc
add
bound
cmp
clc
ret
sub
pop
test
or
jl
xchg
ret
cmp
jmp
cwde
in
lods
arpl
add
jmp
test
cmp
repz
out
adc
jp
dec
jecxz
call
adc
mov
push
dec
and
adc
fisub
cdq
xchg
push
cmp
fucomp
pop
in
outs
pop
pop
xor
pop
jnp
mov
pop
push
or
xor
jecxz
push
out
shl
lds
cwde
aam
xchg
mov
push
jmp
push
aaa
sbb
sti
and
retf
(bad)
hlt
pop
(bad)
jo
sbb
push
push
sbb
inc
ret
xchg
dec
(bad)
icebp
cmp
outs
shl
stc
pop
imul
add
rol
imul
mov
sbb
mov
adc
sbb
push
adc
jbe
xor
adc
mov
iret
jle
pop
cmp
xor
test
push
int
daa
mov
jge
inc
lahf
or
fcmovne
dec
xchg
fwait
(bad)
imul
imul
sti
and
jmp
imul
xor
dec
sbb
ror
adc
sar
int
cli
bound
or
jmp
fmul
jle
iret
test
pop
cmps
mov
or
fimul
clc
test
or
mov
shl
out
cmps
dec
shl
mov
shl
xchg
movs
jbe
jl
xchg
sahf
push
jl
ja
jae
addr16
mov
outs
enter
mov
sub
xlat
jp
(bad)
mov
(bad)
into
jno
pop
mov
sar
movs
pushf
mov
cmp
fistp
dec
call
pop
cmp
jge
retf
lea
push
sbb
add
imul
xchg
jle
sbb
stos
sbb
ja
push
pop
and
scas
lahf
bound
jb
pop
arpl
jge
pop
mov
scas
repz
outs
movs
pop
pop
imul
sahf
jecxz
out
dec
push
adc
push
push
loope
test
iret
sub
push
push
scas
mov
sbb
push
jge
and
pop
aam
fs
call
iret
pop
aad
cld
or
inc
pushf
cmps
bound
ins
maskmovq
and
ins
dec
cmps
or
fnsave
rcl
inc
test
push
dec
adc
rcr
stos
popa
dec
jbe
clc
push
stos
aas
mov
jl
and
cwde
repnz
into
add
or
adc
or
jo
ins
leave
inc
bound
inc
int
xlat
inc
pushf
dec
fistp
add
cmp
adc
xchg
jl
adc
jnp
mov
into
aas
call
or
retf
test
ret
rcr
fcomi
retf
add
mov
pop
xor
or
pop
mov
in
ffree
test
bswap
mov
cmp
cmp
movq
jp
push
or
push
xlat
stos
xchg
shl
xchg
test
lahf
add
jecxz
dec
repz
movs
rol
jb
sub
pusha
out
push
arpl
jo
adc
adc
ja
pop
(bad)
and
dec
retf
and
pop
jmp
sub
aad
sbb
into
es
imul
fs
adc
and
aaa
push
mov
jl
icebp
dec
movs
arpl
jno
fst
pop
lea
pop
out
push
ror
jbe
outs
popa
cmp
xchg
shl
sbb
out
cmp
pop
fucomp
retf
pop
mov
std
sub
dec
mov
mov
xchg
fidivr
xchg
dec
lea
ins
pop
shl
mov
mov
ja
cmp
out
pop
dec
cmps
pop
lahf
movs
mov
call
pushf
mov
jmp
add
pop
sbb
icebp
mov
push
pop
push
test
dec
adc
fbstp
push
sar
fadd
sahf
imul
jbe
inc
adc
jbe
fbstp
mov
and
pop
pop
mov
lods
js
sub
les
mov
(bad)
aam
sub
cmp
bound
rol
fmul
mov
stos
cld
and
mov
sbb
call
mov
fmul
fdiv
push
inc
mov
cli
push
mov
popa
jmp
jno
(bad)
mov
add
mov
mov
push
adc
push
enter
dec
push
lahf
push
sbb
dec
ins
xchg
and
cli
ins
dec
loopne
xor
adc
dec
cmp
add
mov
(bad)
fdiv
outs
outs
mov
enter
cmp
std
fld
out
(bad)
pop
movs
or
push
cmc
rcl
inc
cmps
pushf
bound
cmp
mov
pop
(bad)
mov
cld
out
adc
xchg
stc
push
xor
push
add
cmp
in
cs
jo
sar
ss
aas
call
push
pop
xchg
pop
xchg
mov
mov
test
into
stos
out
sbb
push
loop
adc
retf
dec
sbb
jno
cmp
adc
arpl
adc
(bad)
adc
leave
push
fild
mov
adc
out
push
nop
addr16
push
dec
stos
sbb
iret
and
push
mov
call
xchg
xchg
add
test
aaa
int3
das
pop
xor
enter
and
out
xor
movs
hlt
movs
dec
xchg
cmp
mov
inc
leave
fwait
cmc
push
adc
ret
(bad)
add
shl
adc
lds
push
inc
daa
repnz
test
pop
sub
fist
and
imul
sbb
mov
in
mov
mov
sbb
or
xor
push
fnstcw
push
addr16
inc
xor
dec
inc
xor
dec
sbb
and
dec
mov
lock
mov
repnz
xchg
out
mov
dec
clc
xor
dec
in
mov
dec
loopne
cmps
dec
loop
movs
dec
in
xor
dec
call
xor
or
xchg
dec
shl
xchg
dec
shl
xchg
dec
or
dec
dec
fnsave
fwait
dec
js
mov
fcom
imul
pop
in
sub
not
ins
outs
push
pop
push
sbb
jmp
sbb
arpl
fadd
cmps
loopne
(bad)
in
sar
mov
push
imul
and
imul
and
adc
sbb
ds
pop
sub
test
je
test
repnz
push
ins
and
mov
mov
scas
lea
inc
les
push
daa
sbb
es
fcomp
jge
cmc
push
sub
outs
loopne
arpl
shl
cmp
(bad)
adc
sbb
jo
mov
ins
ja
adc
mov
sub
dec
push
imul
pusha
cmp
adc
pushf
dec
add
out
xlat
(bad)
or
xchg
stc
pop
lods
call
mov
sbb
cwde
add
pop
adc
in
clc
xor
aaa
xchg
jecxz
adc
jp
cmp
pop
shl
and
nop
mov
push
mov
xor
or
adc
lods
movs
jo
mov
sbb
mov
shl
(bad)
outs
sbb
ds
sbb
mov
add
imul
cmp
adc
(bad)
cmp
lahf
(bad)
out
adc
or
fnsave
pop
push
iret
(bad)
ins
gs
(bad)
jb
jl
into
scas
lods
inc
int
shr
clc
xchg
pop
sub
pop
shl
cmp
fst
ins
sahf
imul
xchg
sbb
fst
iret
popf
adc
jmp
adc
fadd
call
mov
nop
push
gs
shl
sub
scas
movs
idiv
xor
jp
jnp
xchg
mov
iret
mov
mov
scas
lea
add
jp
hlt
xor
push
xor
int
inc
adc
or
shr
nop
ret
mov
cdq
scas
int3
xchg
fsubr
repnz
stos
pushf
cli
push
jns
jle
push
cmp
jbe
pop
adc
jle
jl
jbe
stos
sahf
jnp
add
xchg
daa
stos
loop
jne
pusha
mov
pcmpgtw
das
retf
jo
cs
push
push
scas
repz
lahf
fcom
(bad)
adc
cs
adc
fdivr
rcr
leave
ficomp
(bad)
fptan
inc
sbb
sbb
adc
dec
dec
ds
jecxz
call
jmp
sbb
call
adc
push
mov
xchg
sub
add
xchg
and
les
(bad)
(bad)
sbb
(bad)
test
push
xchg
sub
mov
sbb
fnstcw
sbb
movs
ins
in
mov
pop
add
adc
mov
push
xchg
imul
xchg
dec
push
punpcklwd
int
pop
mov
pop
in
pusha
mov
jge
and
rcr
popa
imul
mov
icebp
xchg
and
xor
shr
rcl
xlat
in
xchg
mov
fdivr
inc
pop
pop
cmp
fnstenv
lahf
inc
(bad)
popf
jp
and
mov
rcr
push
in
mov
mov
es
ja
xchg
xchg
imul
imul
repnz
mov
mov
stos
in
adc
or
sar
daa
es
int3
push
and
out
jb
in
retf
jecxz
retf
arpl
push
fsub
retf
cmp
pop
hlt
mov
dec
ins
inc
xchg
(bad)
bound
cmp
stc
sbb
xchg
(bad)
loopne
in
inc
add
jecxz
push
push
rcl
out
scas
int3
cmp
pop
pop
mov
xor
into
mov
nop
dec
cmp
jg
in
cmp
jmp
cmp
out
push
jmp
dec
test
in
bound
in
jnp
pop
std
fwait
dec
dec
add
push
(bad)
mov
xor
add
sbb
jnp
imul
dec
or
in
adc
push
xor
or
(bad)
jmp
push
inc
fadd
imul
jae
push
and
scas
sub
shr
ret
fist
add
add
lods
retf
test
inc
xor
fst
rol
or
dec
jle
imul
imul
and
mul
sub
in
cmps
dec
div
repz
mov
xchg
fidivr
or
sub
shl
fild
sub
or
iret
lahf
xchg
push
(bad)
fisttp
sub
pop
repnz
sbb
cmp
adc
xchg
mov
or
or
pop
lahf
leave
sti
pop
or
icebp
es
(bad)
xchg
aas
xchg
(bad)
loop
daa
sub
push
sub
ja
push
mov
pop
xchg
mov
inc
(bad)
arpl
adc
pop
push
ins
iret
xchg
xchg
sub
cdq
sbb
clc
ja
ror
ror
pushf
js
retf
sahf
aad
sub
pop
jp
arpl
dec
(bad)
cdq
je
test
push
add
or
ins
in
cs
pusha
(bad)
pop
or
adc
cmps
cmp
lock
jbe
call
out
mov
mov
iret
push
mov
mov
jle
fstp
iret
xchg
aas
nop
(bad)
fsubr
xchg
mov
(bad)
pop
fwait
sti
daa
ja
stc
cmp
out
jl
adc
dec
push
fstp
sbb
ins
icebp
ror
push
pushf
aaa
clc
cdq
inc
and
loope
ret
dec
cmp
jae
xchg
jg
test
push
cwde
add
pushf
les
jne
sbb
mov
sub
das
sbb
stos
mov
mov
sbb
jnp
adc
fmul
rcr
jmp
push
xor
mov
push
sbb
inc
ror
(bad)
rcl
ror
es
fs
push
test
aam
mov
repz
pop
lahf
sbb
fld
xor
pop
imul
gs
mov
adc
jnp
jae
pop
je
adc
push
cwde
mov
scas
mov
xchg
out
in
jb
retf
or
addr16
push
pop
mov
imul
std
jnp
sub
std
xchg
dec
xor
les
adc
sub
pushf
into
push
lods
push
mul
fsubr
dec
jge
mov
(bad)
ins
(bad)
cmp
sbb
pop
mov
jmp
xchg
or
xchg
jg
in
adc
mov
or
pop
popa
cld
mov
(bad)
add
fld
loop
sub
outs
mov
jp
nop
sub
idiv
repz
dec
mov
aam
xchg
(bad)
adc
(bad)
ja
ror
ds
arpl
call
and
mov
ins
lds
test
test
fs
jl
push
fs
jns
(bad)
icebp
and
fs
sbb
dec
sbb
adc
push
xchg
repz
(bad)
jmp
movs
(bad)
dec
das
imul
in
mul
cs
ins
adc
cdq
ss
cdq
inc
pop
cld
xor
cmp
out
inc
aas
enter
cmp
cmp
adc
(bad)
jae
test
aam
jl
dec
leave
mov
adc
outs
in
mov
hlt
pop
ror
mov
pop
call
sub
add
jle
sbb
add
fistp
mov
sbb
pusha
(bad)
scas
cmps
fucomp
inc
jmp
sahf
lea
es
jge
mov
pop
mov
pop
aam
(bad)
js
push
mov
and
jg
or
jnp
outs
movs
enter
push
pop
push
or
mov
add
sbb
push
pushf
jle
cmps
cs
add
xchg
stos
pop
mov
aad
xchg
imul
add
test
sti
xor
mov
imul
fs
adc
xchg
mov
outs
inc
ret
jno
movs
mov
scas
inc
mov
xor
xchg
push
gs
movs
adc
push
xchg
mov
pusha
pop
rcr
push
imul
fnstcw
sahf
pop
sbb
xor
jnp
lock
fsubr
test
sub
call
fsub
sbb
lods
fld
or
jmp
scas
and
call
je
xor
xchg
retf
sub
mov
or
imul
movs
outs
mov
adc
es
addr16
mov
jmp
mov
pop
or
dec
daa
dec
imul
or
loop
popa
sub
test
or
pop
lahf
int
mov
stc
movs
and
inc
test
and
sbb
retf
cwde
jmp
adc
adc
adc
retf
xor
cmp
sbb
jle
aaa
adc
cmp
lods
or
addr16
js
xor
xchg
mov
outs
jl
dec
push
fmul
add
jbe
popf
sub
push
pop
dec
retf
mov
add
jbe
dec
mov
jge
popf
inc
in
mov
iret
sbb
fnstcw
xor
cmp
xchg
mov
sti
mov
inc
int3
popa
test
mov
das
test
cwde
mov
arpl
push
sti
pop
push
(bad)
stos
imul
cmps
test
ror
out
retf
adc
xchg
je
dec
and
push
cmp
jge
push
icebp
ins
adc
xchg
cmc
lods
out
fdivp
outs
mov
in
enter
inc
data16
fisub
push
push
push
cld
lods
mov
(bad)
pushf
call
stos
adc
push
xchg
mov
mov
add
(bad)
hlt
inc
pop
retf
sbb
(bad)
dec
lods
es
(bad)
es
xor
daa
sar
icebp
dec
ds
jg
imul
sub
mov
and
xchg
(bad)
mov
and
mov
jecxz
nop
jno
test
outs
pop
sbb
push
in
loop
into
mov
sub
adc
jno
add
mov
xor
inc
sbb
mov
jbe
mov
ficom
mov
mov
mov
adc
xor
mov
ss
push
xlat
or
aaa
xchg
push
cmps
push
std
pop
adc
dec
add
sub
pop
cwde
push
stos
std
xchg
push
stos
arpl
fdiv
jne
(bad)
push
push
movs
cmp
jne
lea
in
dec
ret
or
outs
rcr
lahf
or
imul
sahf
push
cwde
ja
je
aam
push
pop
mov
mov
stos
lock
dec
add
inc
int
mov
iret
pop
data16
scas
pop
xchg
int
inc
cld
cmp
xchg
hlt
xchg
xchg
mov
icebp
pop
(bad)
cdq
mov
lods
cld
pop
adc
clc
js
mov
call
addr16
loopne
xlat
aam
cmp
sub
pop
stos
jmp
mov
test
push
dec
cmp
push
adc
aam
test
cli
jl
sbb
fnstcw
jg
das
into
dec
out
xor
push
cli
addr16
xor
pop
enter
pop
dec
pop
int3
in
xor
dec
jbe
mov
push
dec
pop
outs
lahf
push
(bad)
push
inc
jl
and
(bad)
iret
mov
sbb
add
into
pop
sub
leave
mov
jns
jmp
xlat
je
push
scas
add
cmp
mov
(bad)
adc
jnp
popf
jp
push
sub
fsubr
(bad)
(bad)
(bad)
aad
mov
adc
xchg
mov
inc
and
adc
imul
nop
jp
gs
cmp
mov
in
xor
fwait
and
jle
mov
repnz
sub
(bad)
adc
push
sbb
mul
test
push
aas
not
fimul
js
mov
push
lock
je
ins
or
loope
add
xchg
shl
adc
cmc
movs
push
sbb
xor
mov
cmp
imul
rcr
push
cdq
mov
sbb
mov
jo
aas
cdq
mov
div
xchg
pop
pop
jg
loop
(bad)
popf
cwde
dec
adc
xchg
xlat
pop
sub
mov
inc
xchg
icebp
(bad)
(bad)
sub
xchg
call
ss
sub
ret
mov
rcl
or
(bad)
mov
push
pusha
arpl
jecxz
stos
xchg
loopne
cmp
aaa
stos
jo
mov
or
jecxz
sbb
jbe
mov
or
xor
cmps
or
mov
clc
stos
pop
xor
fmul
push
rol
popf
rcl
mov
jns
ins
mov
xor
clc
outs
cs
das
in
mov
lods
hlt
movs
fnstcw
(bad)
jb
mov
xchg
icebp
aad
dec
and
js
mov
inc
or
dec
imul
(bad)
sub
and
push
call
xchg
add
loop
adc
xchg
jge
mov
shl
jmp
add
push
fs
mov
push
je
mov
cmp
or
int3
cli
fwait
push
cmp
lds
pusha
sbb
sahf
cld
stc
clc
scas
out
push
or
sbb
push
les
(bad)
cwde
push
retf
(bad)
ja
stos
or
loope
inc
test
shr
(bad)
mov
sahf
jb
or
xor
outs
aad
jp
jb
add
push
loopne
out
dec
in
sub
or
dec
fiadd
or
inc
in
inc
sbb
mov
dec
(bad)
test
dec
jae
pop
(bad)
push
jge
stos
mov
sub
push
push
aam
sahf
stc
sar
sti
pop
push
jo
push
stos
lods
fsub
test
xor
int
fild
or
jp
inc
js
pop
sub
mov
and
inc
mov
jl
or
mov
add
mov
nop
mov
fldenv
call
fisttp
jl
pop
fdivr
lahf
rcl
aaa
and
dec
(bad)
neg
cld
fidivr
mov
into
ret
retf
fwait
(bad)
and
ret
out
cld
in
pop
adc
iret
leave
sub
cmp
dec
sbb
xor
add
outs
mov
mov
mov
pusha
bound
test
push
adc
mov
xor
imul
hlt
fwait
dec
test
push
push
xchg
cld
pop
jp
lods
jb
jbe
loope
jb
retf
mov
or
pop
outs
popa
test
jnp
dec
loop
aas
push
cld
inc
lea
cmp
lods
xchg
test
in
popf
aaa
(bad)
and
sbb
bound
mul
je
add
mov
scas
adc
jbe
iret
mov
add
inc
add
movs
aad
cld
into
fwait
iret
pop
(bad)
push
mov
js
jmp
(bad)
popa
scas
sbb
pop
jns
inc
test
jbe
jl
push
test
sahf
mov
pop
aad
jg
aam
and
lock
retf
sbb
cmps
sti
in
(bad)
xchg
push
scas
aam
pop
mov
cmp
mov
jge
in
cmp
pushf
sbb
xchg
jl
std
imul
mov
add
loop
sbb
jl
adc
sub
icebp
cmp
jle
mov
dec
sub
sbb
fisttp
retf
sub
leave
movaps
pop
adc
add
push
clc
lahf
sahf
retf
lods
lods
iret
outs
pusha
or
(bad)
in
imul
aad
push
lock
dec
(bad)
ins
scas
and
add
retf
mov
fist
add
(bad)
dec
je
or
retf
mov
iret
loopne
mov
jnp
push
dec
ret
and
jns
(bad)
fsubr
jnp
repz
pop
mov
push
jecxz
jg
sub
jno
lods
pop
imul
and
cld
es
mov
sub
sahf
adc
inc
cmp
adc
lods
(bad)
repnz
cmc
jmp
dec
pop
repnz
mov
add
xor
jmp
sbb
xor
dec
adc
dec
jno
mov
(bad)
push
jle
sti
push
lock
cwde
nop
es
push
ror
outs
adc
mov
xor
dec
cmp
imul
push
sbb
mov
cli
or
or
add
jmp
dec
xchg
jecxz
adc
sub
scas
data16
fsubr
lock
xchg
mov
popa
in
mov
jae
or
not
inc
mov
scas
mov
push
outs
imul
inc
and
sbb
add
push
jge
(bad)
jae
push
shr
adc
shl
gs
es
add
test
push
loopne
gs
pusha
mul
xchg
dec
test
stos
stos
ins
sbb
xor
pop
bound
mov
gs
jns
fwait
dec
jl
and
push
outs
cmps
call
adc
test
jb
addr16
(bad)
add
rcl
movs
jge
out
sub
pop
pushf
xchg
push
mov
aaa
mov
adc
xchg
rcr
adc
mov
pop
push
push
(bad)
adc
hlt
scas
sbb
add
enter
ds
adc
cmp
dec
mov
push
cdq
lahf
adc
jmp
fadd
aad
mov
push
cli
push
loop
sub
rcr
sar
shl
push
fwait
sub
push
mov
into
cwde
and
cdq
rcr
and
sbb
inc
mov
cmp
scas
outs
repnz
arpl
sub
mov
push
arpl
(bad)
push
mov
push
dec
pop
dec
pop
cmps
adc
pushf
retf
pop
rcr
js
sub
imul
cmp
call
int
cmp
(bad)
mov
inc
pop
repz
in
push
mov
ret
fistp
aad
jecxz
jg
xor
test
retf
xor
sub
sti
or
xchg
dec
nop
push
cmps
popa
adc
test
cmp
out
mov
aad
movs
in
xchg
adc
repz
daa
push
push
aad
hlt
int
ins
fadd
scas
jl
sub
push
sahf
inc
outs
jg
lahf
dec
aas
(bad)
or
pop
push
xor
in
sub
mov
jmp
out
inc
xchg
mul
mov
nop
jle
je
sbb
add
in
aas
push
xchg
push
mov
xchg
cmp
xor
xor
rcl
push
add
cmps
adc
cli
aaa
xchg
cld
pop
in
or
cli
out
adc
rol
pop
and
mov
sub
(bad)
push
or
pop
adc
adc
shl
sbb
int3
mov
retf
iret
call
cmp
mov
xlat
lock
lods
popf
imul
ja
push
add
cli
xor
jnp
ret
adc
sbb
mov
pop
out
pop
ret
add
stos
push
and
jns
push
(bad)
cld
imul
(bad)
cmps
retf
shl
fisttp
in
fldl2t
pusha
pop
mov
and
inc
pop
pushf
mov
loop
mov
lea
adc
xor
enter
jge
sbb
cmp
dec
cmp
or
and
out
and
mov
popf
dec
fild
mov
imul
clc
scas
or
jp
inc
stos
fcomp
sahf
push
inc
sbb
int3
sub
cmp
jmp
inc
push
mov
ins
or
or
pop
clc
sbb
fisub
or
(bad)
mov
jno
push
call
inc
mov
push
and
nop
int
mov
cld
mov
int3
sbb
call
rcl
(bad)
repz
xchg
je
enter
xor
ror
and
push
aas
pop
cmp
xor
iret
mov
inc
or
sbb
stc
fadd
mov
push
int
rol
iret
xchg
jae
ins
sbb
fistp
ds
pop
test
sub
int
sti
xor
adc
xchg
pop
test
inc
mov
(bad)
int
cmp
mov
fisub
inc
xor
mov
mov
scas
push
mov
pop
je
int
adc
enter
push
sub
not
imul
ins
sbb
(bad)
push
pusha
popf
fwait
jns
and
xor
imul
mov
mov
pop
dec
ret
pop
out
lock
stc
shl
or
outs
jle
jmp
push
sti
push
mov
and
add
push
test
fadd
push
push
or
inc
ror
jo
jb
aad
aad
lahf
add
mov
(bad)
add
nop
or
rcpps
cmp
push
add
ss
and
sub
pusha
fcom
in
lea
inc
stos
addr16
sbb
dec
mov
dec
sub
or
fdiv
push
xor
enter
xchg
lds
leave
in
and
out
and
mov
mov
gs
sub
sub
outs
aam
sbb
pusha
inc
retf
sbb
xor
xor
sbb
repnz
rcr
or
imul
scas
push
out
add
ss
ins
mov
dec
movs
sar
jl
xor
or
test
push
nop
inc
out
fbld
test
xor
adc
jo
ret
cld
mov
cmp
loope
push
test
gs
fxch
je
in
ja
jb
pop
mov
(bad)
mov
(bad)
xchg
xchg
into
mov
addr16
ins
out
sbb
cmps
dec
mov
test
inc
jge
xchg
jg
popf
pop
arpl
nop
bound
jmp
test
in
cmp
retf
push
call
and
je
outs
cmc
jl
call
popf
cmc
sub
and
mov
pushf
ss
mov
lods
jb
sbb
inc
xchg
sbb
xor
jb
gs
mov
and
pop
adc
dec
xor
push
call
pop
inc
and
inc
mov
xchg
mov
gs
in
xor
sub
scas
jnp
loop
xchg
sti
adc
or
pusha
dec
stos
xchg
xchg
xchg
dec
in
iret
fadd
fiadd
jmp
add
mov
xchg
mov
fnstcw
or
xor
in
jnp
mov
jbe
mov
aad
push
je
push
stos
pop
jl
or
rcr
das
cmp
xor
xchg
cmp
push
push
icebp
and
push
aas
lahf
sbb
mov
mov
sti
or
stos
mov
fsincos
pusha
imul
loop
aam
out
sahf
fsubr
fistp
out
mov
inc
jmp
arpl
data16
pop
xchg
rcr
mov
pusha
or
mov
pop
xchg
test
adc
xchg
inc
xchg
mov
addr16
add
adc
add
arpl
adc
fldcw
fld
retf
lahf
xor
adc
jmp
imul
xchg
pop
fadd
fiadd
mov
ins
les
jp
dec
mov
add
mov
dec
jbe
inc
push
push
arpl
(bad)
jmp
mov
cmps
mov
xchg
jo
and
cs
std
popa
mov
mov
fst
nop
arpl
dec
xchg
push
ins
mov
pusha
sti
push
push
sub
into
push
les
jbe
push
dec
mov
add
jnp
jno
mov
mov
pop
xchg
fs
cmps
dec
sbb
ins
push
iret
cmp
into
push
cmp
xor
or
sub
hlt
pop
fstp
mov
pop
ret
push
inc
add
push
aam
inc
rcr
xor
push
aaa
inc
mov
lahf
(bad)
or
int3
daa
das
xor
scas
adc
lock
popf
in
int3
pop
movs
test
xchg
adc
jp
iret
add
and
ins
push
pop
fild
aas
push
push
aam
push
adc
adc
sub
cmp
jg
loope
loopne
mov
mov
jmp
cmp
jnp
jnp
shl
inc
and
dec
mov
cwde
xor
adc
cmp
addr16
cld
dec
dec
ret
test
add
call
sbb
and
pop
pop
out
pop
mov
jl
or
pushf
jno
hlt
sbb
mov
das
adc
pop
mov
pop
loope
jmp
pop
iret
push
fnstsw
cwde
cwde
and
cld
div
lods
mov
mov
in
dec
pop
adc
jmp
xchg
cmp
test
sub
mov
imul
jae
iret
jo
rol
and
stc
mov
retf
inc
pop
and
xchg
repnz
pop
xchg
int3
sbb
and
sti
jnp
sbb
ja
pop
(bad)
aas
mov
aaa
in
fimul
adc
ret
adc
sar
inc
jl
pop
sbb
xchg
mov
hlt
ret
into
push
rol
test
mov
adc
retf
test
pusha
jnp
inc
push
(bad)
adc
ins
pop
push
repnz
into
and
pop
cld
dec
outs
pop
mov
loop
sahf
das
lods
cld
cmps
inc
(bad)
cmp
clc
inc
loope
(bad)
jge
mov
movs
call
mov
xchg
neg
enter
mov
loopne
pop
adc
and
cmp
stos
pop
mov
int3
lods
movs
mov
stos
sbb
das
mov
je
add
push
mov
(bad)
enter
fisub
push
mov
mov
sbb
mov
and
imul
xchg
lahf
je
imul
jae
fsubr
xlat
lods
(bad)
mov
dec
stos
jmp
mov
cmp
xchg
mov
jecxz
bound
jp
cli
or
xchg
mov
mov
xor
jmp
inc
jnp
inc
dec
in
sbb
push
adc
push
sub
frstor
sti
mov
(bad)
jl
xor
inc
sbb
cmp
lea
movs
sbb
in
pop
out
pop
xor
sub
retf
dec
mov
outs
fstp
mov
xchg
cmp
xor
lods
add
(bad)
daa
cmp
loope
pop
dec
dec
mov
jl
pusha
test
jecxz
ins
and
stc
clc
push
fwait
mov
icebp
push
scas
mov
fs
arpl
jge
out
adc
or
and
fidiv
das
cmp
retf
int
push
add
sbb
scas
xchg
arpl
nop
stos
cmp
lock
pop
stc
xor
lods
ins
and
ror
fcom
mov
(bad)
test
jp
mov
dec
arpl
pop
dec
jb
cmp
mov
push
scas
fild
ss
add
into
cmp
adc
scas
mov
jge
jle
adc
cmp
fistp
icebp
push
sbb
inc
mov
fwait
loope
dec
xchg
das
mov
js
stos
add
pushf
jnp
jno
outs
lea
fs
or
xchg
xchg
pop
pop
cmp
sub
cmp
xchg
push
hlt
inc
or
and
pusha
add
xchg
pop
pop
mov
icebp
aas
push
xchg
into
call
(bad)
outs
iret
xlat
mov
ins
data16
dec
mov
push
ins
dec
dec
adc
inc
out
stos
ffreep
or
jg
jmp
and
push
idiv
sub
aas
or
popf
cmp
call
push
shr
out
mov
adc
repnz
arpl
rcl
test
std
or
sbb
repnz
arpl
add
scas
jo
call
jno
and
dec
popa
aad
push
mov
pop
mov
scas
push
fwait
call
(bad)
imul
sub
jle
cdq
dec
nop
jae
add
stos
jb
adc
mov
mov
call
mov
ret
imul
arpl
neg
xor
pop
sbb
adc
mov
enter
cmp
js
push
imul
movs
test
xchg
sbb
adc
adc
inc
adc
or
cli
xchg
int
ret
and
(bad)
stc
cmp
aam
mov
jecxz
jl
push
inc
fild
jmp
add
cmp
fldenv
stc
movs
jmp
pop
into
cmp
mov
call
push
sub
or
arpl
pop
inc
cli
and
fidiv
scas
mov
test
xlat
and
fld
repnz
arpl
cli
cmp
add
inc
sub
lods
popf
mov
movs
lods
fiadd
push
std
jmp
jle
call
adc
jmp
jmp
xor
arpl
push
adc
neg
or
fmul
cmps
sub
retf
sbb
and
(bad)
mov
jmp
(bad)
pop
aam
mov
mov
scas
repz
retf
push
test
sar
int3
mov
or
push
inc
cmp
push
sbb
xchg
rcr
or
mov
mov
dec
cs
fistp
sub
cmp
mov
xor
mov
add
enter
sbb
jecxz
xchg
aad
lahf
mov
cmc
jmp
mov
jg
pop
xchg
test
add
cdq
mov
popf
and
adc
addr16
cs
dec
popf
aad
push
xchg
or
scas
xchg
push
add
pop
es
and
test
loopne
iret
ds
mov
movs
out
dec
test
inc
adc
shl
mov
jbe
scas
(bad)
loop
jl
fdiv
fld
add
mov
inc
push
and
aam
mov
enter
rcr
loopne
and
push
retf
int
xor
xchg
cmp
mov
pop
mov
fsub
push
sub
sub
and
dec
pop
outs
imul
fst
xchg
push
dec
arpl
pop
(bad)
cmc
imul
jp
xor
xchg
ja
icebp
pop
dec
test
je
fistp
adc
sbb
rcl
out
jae
ds
scas
loopne
jno
push
cmp
popa
addr16
jns
xchg
push
hlt
popa
mov
adc
adc
xor
rcr
jmp
sub
dec
xchg
fisubr
sub
(bad)
sbb
test
and
not
mov
test
or
cmp
retf
mov
idiv
push
ret
push
push
sbb
std
xchg
add
es
fstp
add
mov
push
cmp
inc
mov
aas
pusha
mov
jge
in
sub
inc
pop
xchg
and
popa
mov
out
scas
xor
cld
cmc
jg
jb
push
ds
sub
test
xor
mov
jb
cwde
xchg
mov
test
call
adc
mov
cmp
and
cmp
cmp
inc
hlt
xchg
pop
mov
jo
pop
aad
cdq
xchg
mov
sub
add
das
shr
enter
cmp
movs
pop
std
pop
xchg
mov
out
aas
cli
mov
jmp
mov
sbb
aam
jle
jmp
xchg
add
daa
nop
sub
inc
call
pop
shr
scas
adc
lahf
inc
mov
dec
lea
addr16
cmp
xchg
or
push
sbb
fld
sub
dec
push
lds
adc
ds
lods
clc
lods
pop
shr
loope
cli
cmp
or
outs
and
sub
iret
push
mov
int3
std
ret
sub
jecxz
std
jg
test
add
inc
or
pop
xor
imul
iret
outs
sbb
fs
into
add
das
sar
jmp
pop
mov
out
das
add
lods
out
and
pop
iret
loop
repz
mov
mov
cdq
retf
cmp
push
mov
mov
adc
mov
cli
and
pop
adc
sbb
hlt
xchg
cli
sbb
mov
out
push
sub
jle
and
xchg
cwde
arpl
ja
cmp
pop
push
mov
(bad)
loope
and
cli
ds
mov
test
frstor
mov
xchg
and
jg
mov
mov
scas
mov
(bad)
push
adc
jnp
popa
in
call
push
inc
imul
xchg
adc
add
sbb
int3
push
or
out
fistp
outs
sbb
andps
jno
adc
mov
into
mov
and
add
mov
push
sub
mov
inc
imul
push
lods
mov
dec
lea
lods
push
nop
shl
mov
cmp
jo
lods
inc
mov
sar
dec
(bad)
mul
fs
fsubr
iret
fwait
mov
dec
xchg
sbb
xchg
stos
pop
xchg
push
add
jno
cld
pop
cs
jmp
sbb
nop
imul
push
movs
push
sub
dec
pop
cmp
jnp
mov
loope
repz
(bad)
in
push
jg
jns
lock
out
cvtps2pd
call
stc
lds
cs
jge
retf
mov
sbb
std
push
add
jl
sbb
in
mov
mov
mov
imul
imul
pop
scas
popa
jnp
lahf
push
and
jmp
lock
mov
xor
fs
mov
sbb
fidivr
inc
es
fist
mov
icebp
int3
(bad)
fistp
sbb
fld
scas
ins
dec
(bad)
jno
sahf
adc
sbb
inc
sti
call
call
arpl
jo
or
adc
jle
mov
loop
pusha
dec
xor
and
out
rcl
mov
and
push
xlat
push
test
jnp
mov
pop
sbb
jns
inc
xchg
addr16
popf
jnp
inc
cs
retf
mov
leave
jge
stos
cli
mov
dec
inc
or
add
xor
jne
rcr
or
mov
(bad)
xor
pop
mov
jl
xchg
(bad)
sti
push
and
sar
cli
pop
(bad)
rol
push
shl
or
(bad)
sti
aaa
push
stos
sbb
xor
clc
inc
adc
arpl
push
push
scas
and
jmp
lahf
or
adc
es
retf
or
mov
sub
mov
mov
lods
adc
xchg
mov
outs
clc
mov
imul
xor
in
imul
es
jns
leave
push
cdq
fwait
adc
shl
loopne
mov
mul
push
sbb
shr
cmps
das
xchg
mov
push
loop
xor
mov
sahf
dec
mov
jbe
push
mov
call
stos
jecxz
iret
sub
out
bnd
jl
idiv
pop
inc
mov
push
push
loop
shl
test
mov
fs
call
ds
out
(bad)
xchg
call
lea
add
adc
fld
nop
adc
jmp
jle
sbb
repnz
push
cld
push
adc
repnz
popf
xchg
std
retf
jp
fidivr
enter
sub
shr
mov
test
jns
imul
jl
stos
adc
pop
xlat
jmp
sub
mov
sbb
and
in
add
mov
cmp
mov
fnstsw
add
es
add
(bad)
es
add
dec
xor
test
call
pop
and
(bad)
out
(bad)
cmp
jge
ret
sti
movs
jp
in
fwait
sub
inc
adc
mov
and
out
pop
dec
stos
mov
xor
sbb
push
push
ins
movs
or
adc
dec
adc
cmp
xchg
cli
cs
out
jnp
ret
jb
fsub
ret
scas
or
sar
or
sbb
nop
push
aas
aad
fisttp
pop
mov
call
ficomp
jmp
test
test
call
call
and
call
(bad)
cmp
cmps
pop
iret
mov
jae
sbb
rcl
mov
fidivr
xor
not
xchg
xlat
adc
popf
xchg
xchg
stos
mov
test
pop
mov
lods
mov
and
fs
sbb
push
jno
mov
cmp
mov
icebp
fsubr
cmp
fcomp
xor
shr
sbb
mov
jmp
aad
and
mov
adc
ret
retf
dec
or
cwde
inc
in
ja
int
test
fstp
cmp
scas
aas
scas
xor
out
arpl
mov
outs
test
pop
inc
in
or
or
xor
data16
inc
mov
stos
mov
pop
xor
sbb
mov
dec
sub
mov
inc
cs
push
mov
cmp
push
lea
addr16
push
int
dec
add
out
nop
sbb
cld
add
mov
lods
scas
iret
mov
adc
and
mov
mov
adc
fisttp
jge
cmps
jns
sbb
cmp
jmp
gs
or
jmp
dec
popa
and
jp
mov
bound
jnp
pop
pop
jmp
sar
mov
add
(bad)
mov
jmp
mov
jo
mov
jns
pop
push
pop
or
mov
xor
pop
scas
pusha
mov
jmp
dec
fs
ficom
les
stos
adc
mov
inc
jnp
scas
pop
out
dec
pop
dec
leave
pop
mov
mov
jne
xor
repz
aad
and
adc
lss
pushf
test
ja
add
xor
mov
dec
jne
arpl
push
mov
fwait
xor
or
cmps
into
iret
xchg
jg
inc
jl
mov
(bad)
repnz
cs
mov
sub
loopne
std
daa
lea
dec
sti
pop
push
adc
adc
mov
add
or
dec
scas
or
mov
mov
push
sbb
cwde
or
add
push
aas
movs
dec
xchg
pusha
(bad)
jmp
std
mov
aaa
outs
jmp
and
and
ins
aad
daa
push
ins
(bad)
aad
adc
in
scas
fidiv
add
lock
ins
stos
jmp
fild
(bad)
int3
pusha
inc
je
aaa
imul
loop
stos
dec
test
dec
daa
cmc
cmps
test
push
mov
jbe
push
rcr
mov
sbb
inc
xchg
aas
inc
mov
bound
fisttp
popa
pop
mov
push
pop
mov
neg
jl
loopne
popa
mov
cwde
dec
les
(bad)
fdivr
clc
adc
mov
xor
push
xor
iret
dec
out
(bad)
lahf
add
ds
icebp
retf
(bad)
mov
popa
cdq
mov
mov
dec
repz
mov
cmc
outs
or
pop
test
ins
cmp
lds
jo
xor
jo
neg
pop
scas
ds
addr16
dec
ret
pop
xchg
inc
vmwrite
stc
retf
cdq
xchg
add
rol
jb
repnz
and
cmp
push
xchg
mov
push
mov
out
repz
fisub
mov
sti
iret
fcom
sub
pop
jge
dec
push
loope
mov
iret
cs
aam
aam
xlat
or
inc
cmp
jae
cmp
xor
xchg
add
xor
jno
call
aas
ror
mov
imul
nop
xor
sbb
and
inc
dec
ja
push
dec
xchg
out
(bad)
imul
push
mov
repnz
xor
cmp
adc
dec
xlat
xchg
daa
ss
sub
push
or
in
fimul
lea
shl
dec
pop
and
and
jnp
sbb
sub
ror
repnz
cld
pusha
dec
pop
stos
ror
es
out
and
mov
es
pop
mov
cli
call
adc
test
ja
retf
push
dec
test
test
lahf
pop
inc
fstp
add
popf
popa
push
daa
cs
fcom
scas
mov
add
jo
out
pop
mov
or
pop
push
ss
xor
xor
push
jl
sbb
pusha
pusha
adc
fmul
jmp
pop
pop
stc
pop
pushf
dec
or
ds
inc
mov
and
popf
cwde
jb
adc
mov
(bad)
call
push
cdq
hlt
fcomp
scas
inc
xchg
pop
pop
xlat
jl
imul
push
push
pushf
cmp
call
fiadd
mov
sbb
xor
adc
out
sar
xchg
xor
imul
mov
cli
sub
rcr
xor
and
mov
pop
clc
arpl
iret
cmps
mov
jno
inc
dec
pop
lods
pop
mov
jbe
dec
push
mov
scas
cmp
jns
call
lock
cmc
push
mov
jle
cld
xchg
jg
popf
jae
ss
push
inc
mov
jae
int
iret
popa
cs
mov
dec
push
adc
xchg
nop
pusha
ja
add
retf
les
cmp
aam
cli
leave
xchg
nop
push
push
retf
cli
je
das
cld
sub
stos
int3
or
sbb
xor
call
pop
mov
scas
xor
or
popa
pusha
into
pop
(bad)
push
icebp
push
jno
repnz
pusha
push
cmps
loopne
and
fist
shr
repnz
ret
mov
das
or
inc
or
or
xchg
xor
fsubr
mov
les
iret
xor
sbb
movs
sub
sahf
push
gs
call
cmps
jmp
ds
popa
sub
dec
pop
movs
imul
movs
add
mov
fistp
adc
pop
inc
jb
cmp
sbb
cmp
push
or
js
mov
xchg
inc
push
fld
(bad)
mov
cmp
or
inc
clc
outs
je
xor
jle
sub
xor
es
inc
jp
push
jno
cmp
sahf
jno
sbb
pop
pop
mov
repz
in
(bad)
fs
sub
jl
inc
xor
sub
xor
push
adc
cdq
int
mov
xchg
or
mov
mov
mov
mov
daa
call
leave
(bad)
xchg
cmc
sar
or
mov
gs
push
repnz
adc
loop
jnp
sahf
hlt
mov
xor
mov
xchg
sbb
enter
enter
je
sbb
or
daa
rcr
jo
xor
dec
push
inc
ffreep
inc
repz
imul
mov
sti
xor
ret
xor
xchg
dec
push
adc
add
jae
push
js
xchg
(bad)
and
lea
cmps
sub
imul
push
shr
jl
stos
pop
and
inc
in
and
add
fistp
mov
(bad)
out
in
push
or
and
push
int
xor
pop
gs
enter
sbb
sbb
movups
and
cmps
sub
call
scas
xor
in
pushf
std
jp
ret
iret
xor
mov
fnstsw
lock
sbb
in
xchg
test
xor
or
mov
cld
mov
int
jp
add
adc
scas
shl
adc
mov
mov
xor
or
mov
nop
xchg
jecxz
into
imul
sbb
pop
push
add
mov
arpl
lock
push
shl
int
retf
cli
pop
cld
and
rol
aad
imul
push
mov
inc
adc
inc
push
xor
sbb
add
mov
cwde
push
mov
popf
xor
push
mov
pusha
xchg
fcmovu
es
cmp
fmul
(bad)
push
xor
push
inc
mov
add
jp
add
sar
jmp
mov
test
or
int3
pushf
cmp
cmp
ret
ss
imul
cli
leave
mov
bound
pop
test
test
jl
xchg
repnz
or
dec
(bad)
jmp
(bad)
jge
ror
rcr
and
mov
dec
or
adc
jmp
mov
ret
(bad)
pop
in
xor
cwde
sub
bound
dec
inc
inc
shl
jl
pop
pop
jle
pop
cmc
adc
aad
setg
mov
outs
and
inc
dec
xchg
sbb
(bad)
test
mov
stc
pop
or
int3
ja
ds
push
sbb
jecxz
lahf
nop
test
inc
jns
jecxz
rol
inc
push
add
mov
mov
mov
(bad)
mov
movs
outs
jecxz
movs
mov
call
adc
add
sub
ror
test
inc
pop
adc
sub
inc
xchg
int
imul
cmps
jmp
loop
test
mov
mov
mov
and
cli
or
or
add
pop
shr
jmp
stos
adc
jg
imul
test
push
pop
in
mov
push
arpl
dec
mov
idiv
sbb
mov
sub
enter
pop
leave
iret
xchg
hlt
xor
xor
daa
dec
jno
call
or
sbb
aaa
jnp
or
xchg
mov
cmp
not
outs
cmc
arpl
or
ss
pop
retf
mov
push
cli
cs
xor
mov
ficom
in
scas
retf
mov
mov
mov
mov
inc
mov
daa
pop
fadd
scas
dec
imul
iret
adc
add
iret
cmps
loop
pop
push
push
or
cmp
jp
ds
cmps
loop
xchg
mov
nop
jnp
sbb
mov
or
sbb
sub
add
inc
push
pop
cmp
mov
mov
jnp
xor
or
(bad)
add
jbe
loope
(bad)
xor
inc
cdq
cld
imul
xchg
fsubr
retfw
cmp
mov
inc
sbb
and
push
imul
mov
jnp
out
mov
adc
jnp
pusha
cwde
cmp
shl
inc
xchg
lea
not
enter
xor
push
call
sub
movs
adc
push
jl
xor
je
(bad)
fidiv
pop
call
adc
imul
sahf
adc
loop
xor
dec
call
add
sti
imul
sar
paddusb
push
cmp
or
je
push
je
sub
lea
fisttp
fmul
cwde
lock
push
mov
adc
stos
outs
xchg
jns
pop
cmps
cmp
and
mov
and
ror
jb
jecxz
js
dec
inc
sub
ja
es
cmc
imul
fidiv
push
or
test
cmp
stos
push
or
xchg
pop
dec
add
lea
enter
loop
mov
pop
pushf
mov
imul
mov
or
and
mov
pop
jl
fisttp
sbb
inc
and
jmp
outs
mov
mov
push
sbb
cs
pop
sub
inc
xor
pushf
into
xor
push
xor
retf
lods
push
jmp
and
fs
inc
inc
sti
stos
xor
scas
sub
inc
mov
std
mov
inc
sbb
adc
inc
and
push
cdq
cld
and
pop
mov
lahf
xchg
or
call
data16
push
sahf
inc
sbb
push
mov
pop
lock
js
adc
xchg
or
mov
outs
add
jecxz
pop
fiadd
xor
mov
hlt
dec
xor
int
sub
bound
ins
pop
cmp
ins
lahf
aam
call
xor
lds
cmp
je
xor
jmp
fbld
add
push
push
ins
int3
in
aas
pop
rcr
pushf
dec
mov
inc
dec
ins
or
fadd
push
scas
pusha
pop
test
mov
cmp
add
pop
inc
and
or
sbb
dec
fimul
mov
inc
pusha
stc
or
dec
jmp
cmp
mov
xlat
mov
push
sar
dec
sub
int3
pop
xor
mov
mov
adc
mov
mov
jae
dec
iret
dec
sub
mov
push
movs
es
sub
int
dec
fldenv
push
repz
pop
jns
push
or
stc
mov
xchg
cmp
ins
lods
push
(bad)
mov
outs
(bad)
and
in
imul
jbe
(bad)
pop
rol
ds
mov
(bad)
loopne
stos
movs
push
inc
or
xor
jmp
and
mov
dec
add
xor
mov
dec
cmc
int3
pop
cmp
aam
sbb
jno
or
jmp
xchg
fldcw
dec
mov
inc
fwait
cli
js
into
icebp
sbb
or
pop
call
xchg
jo
dec
xor
out
jno
jne
rcl
mov
cmp
mov
cmp
cmps
aam
icebp
(bad)
mov
rcl
jne
pop
clc
aad
jge
pusha
mov
and
sub
jne
inc
and
push
inc
push
push
sbb
push
jmp
out
loope
push
shl
mov
jne
pop
inc
add
mov
mov
out
dec
test
out
into
push
out
mov
retf
pop
ins
cld
pop
mov
and
pop
in
daa
(bad)
dec
sbb
(bad)
js
adc
push
mov
(bad)
cmps
lahf
loope
and
mov
dec
mov
aam
mov
sub
adc
int3
xor
aaa
pop
push
cld
push
xchg
out
sbb
push
adc
adc
add
jb
lock
and
mov
mov
(bad)
mov
and
xlat
int3
test
jns
data16
and
(bad)
cmp
lea
push
fwait
out
fwait
cmp
or
stos
shl
mov
repz
add
sbb
mov
jns
add
xchg
mov
mov
jbe
cmp
fst
daa
push
lods
fwait
fs
pop
fdiv
dec
push
xchg
loopne
or
cs
clc
dec
icebp
push
ds
jbe
mov
lea
out
aas
cmc
pop
sti
cli
test
es
mov
add
dec
mov
xchg
add
xchg
or
out
push
aas
xor
xor
adc
cmp
cmp
sbb
mov
repz
pop
mov
ret
mov
xchg
es
ss
and
cmp
mov
mov
pop
add
cmp
lods
cmp
js
ins
mov
(bad)
mov
int3
retf
nop
dec
les
nop
push
(bad)
out
inc
sti
push
or
addr16
mov
std
or
(bad)
and
in
cmps
mov
out
in
or
shl
sti
xchg
out
cs
mov
adc
(bad)
and
sub
pop
dec
mov
repz
jmp
out
ja
jl
outs
xrelease
aas
add
mov
xchg
je
loopne
aam
pop
push
fsubr
mov
push
jge
fadd
xor
iret
imul
sub
push
das
cdq
(bad)
xor
fbld
loope
shl
shr
dec
jnp
sub
jnp
lods
pop
sti
mov
sbb
sahf
loope
mov
ins
add
retf
in
push
fs
push
mov
dec
in
inc
sub
pop
jmp
jnp
and
sub
and
pop
push
inc
jbe
hlt
push
push
xlat
or
mov
mov
cmp
pop
mov
xchg
sub
or
xlat
lds
pop
xchg
sub
or
jecxz
mov
pop
call
aad
push
xor
inc
or
test
cmc
aaa
mov
outs
lahf
jnp
xor
mov
inc
lods
cli
lock
push
jge
jecxz
sahf
push
or
and
xor
or
test
in
retf
add
pop
mov
jb
or
jns
ret
mov
mov
adc
jmp
jp
dec
lock
cmp
ror
int3
or
mov
aad
adc
pop
ffreep
test
popf
jmp
fld
lods
cs
data16
jmp
out
mov
sub
or
mov
pusha
jg
dec
jl
sbb
dec
and
stos
ins
movs
xchg
in
enter
(bad)
mov
pop
pushf
mov
or
movs
mov
mov
test
popa
fwait
xor
addr16
int3
mov
mov
test
cmp
dec
ss
mov
jae
lea
mov
xchg
and
pop
fstp
xor
imul
push
xor
cmps
stos
sbb
fild
enter
push
or
sti
pop
dec
pop
xchg
sub
fcomp
dec
jl
sbb
out
inc
xchg
stos
xor
mov
imul
jae
stc
mov
dec
cmp
add
mov
adc
ror
push
hlt
push
pop
popa
js
fwait
xchg
sti
cmc
jno
not
xchg
xchg
movs
mov
(bad)
cmc
xchg
shr
cmps
xorps
xor
cmp
sbb
ficom
mov
addr16
jle
pop
pop
adc
ret
iret
xchg
mov
mov
into
sub
jns
test
mov
mov
adc
cmps
and
push
inc
xchg
(bad)
retf
into
dec
mov
iret
pop
xchg
shr
(bad)
push
retf
xchg
sti
stos
mov
mov
lods
jmp
sbb
(bad)
sbb
push
das
xchg
push
cwde
add
shr
test
mov
mov
jnp
jecxz
rol
xor
daa
(bad)
sub
mov
cmc
add
cmps
mov
push
jmp
lods
and
xor
jne
mov
rcr
scas
sbb
sbb
jbe
mul
shr
call
xchg
jg
inc
repz
or
mov
inc
push
enter
icebp
cmps
test
xor
and
div
test
jbe
and
sbb
dec
adc
sub
lock
fdivr
adc
and
jmp
call
mov
mov
shr
xchg
push
add
push
push
(bad)
(bad)
fistp
not
xchg
(bad)
dec
sbb
scas
sbb
data16
sub
fild
xchg
aam
jae
adc
sbb
addr16
sbb
cmp
test
push
add
mov
call
shr
cmp
xchg
pop
pop
outs
int
out
add
xchg
clc
sbb
ins
les
fcom
popa
adc
imul
jno
out
xlat
test
jp
mov
in
push
rcl
jl
mov
pushf
cmp
push
or
push
loope
jp
push
jb
leave
pop
or
push
jmp
fsubrp
shr
ror
pop
adc
sub
mov
(bad)
ins
test
mov
std
and
sub
hlt
lahf
lock
cmp
mov
sub
adc
mov
adc
fld
fdivrp
mov
adc
cmc
(bad)
mov
imul
test
stc
adc
ss
mov
jmp
call
jne
xchg
data16
push
or
add
push
into
xchg
shl
mov
cmps
aaa
leave
fcomp
and
shl
es
icebp
cld
scas
mov
std
sbb
imul
es
inc
mov
sub
lahf
xchg
mov
pop
call
mov
aad
jecxz
adc
jmp
and
and
ror
cli
in
cwde
xchg
xor
lock
and
and
pushf
sbb
jmp
ffreep
loopne
packuswb
ds
sbb
hlt
add
imul
scas
cwde
scas
push
std
pop
ins
scas
and
push
les
or
sbb
outs
mov
jl
xchg
xchg
iret
sti
(bad)
and
push
mov
or
(bad)
(bad)
das
adc
push
imul
ret
test
cli
pop
mov
sub
mov
retf
adc
push
and
mov
sbb
aas
dec
add
xlat
mov
cmp
sbb
fist
ret
cmc
add
sub
dec
cmp
sbb
sbb
sub
out
das
lods
sbb
pop
cmp
leave
adc
mov
cmp
enter
rol
je
fdivr
mov
test
aas
retf
mov
or
xchg
add
cdq
mul
sbb
xchg
push
mov
add
mov
shl
mov
jecxz
mov
div
mov
jecxz
push
rcl
adc
jnp
or
xchg
cdq
dec
pop
popf
leave
inc
pop
add
hlt
xchg
pop
jmp
mov
in
pusha
(bad)
cdq
aaa
fild
add
cmps
mov
sub
pushf
stos
(bad)
xor
scas
nop
sub
sbb
cmp
hlt
outs
aam
jns
cmps
stos
call
push
imul
push
ds
jb
cmp
scas
jo
fisub
add
dec
cmp
fistp
dec
lea
into
mov
dec
outs
sub
and
cwde
pop
sbb
jb
inc
xchg
inc
fcmovnb
adc
jne
arpl
pushf
or
or
imul
sahf
fisttp
ds
iret
(bad)
fdivrp
sbb
loope
adc
hlt
hlt
(bad)
(bad)
jp
fadd
(bad)
mov
push
add
sar
adc
pop
push
jle
cdq
cmp
popf
lock
pop
ins
movs
xchg
and
cdq
sbb
fistp
sbb
pusha
or
push
fild
sbb
das
jp
(bad)
out
stos
dec
dec
mov
int3
mov
mov
pusha
ret
dec
xchg
pop
or
fdivr
mov
call
mov
call
adc
push
f2xm1
shr
js
jmp
cwde
out
sub
ins
call
dec
aas
(bad)
hlt
jecxz
inc
jge
sbb
je
int
ds
out
arpl
jle
test
jge
mov
jp
out
popfw
aad
push
push
add
push
test
xchg
addr16
outs
lahf
arpl
jmp
inc
push
jb
fdiv
test
cdq
js
je
mov
jne
cmp
jmp
fisubr
int
or
lahf
mov
cld
sbb
loopne
(bad)
(bad)
nop
push
xchg
jnp
stos
sub
mov
adc
je
pushf
clc
pop
cmp
pusha
(bad)
jne
sbb
pop
xchg
std
aad
xchg
(bad)
push
fbld
push
outs
call
add
mov
cmps
push
imul
pop
and
mov
cmp
cmp
addr16
xor
(bad)
loop
aaa
jbe
stos
in
inc
stos
xor
es
loopne
test
xor
mov
inc
test
push
out
jg
xor
mov
lahf
mov
cmp
mov
inc
or
push
jl
xor
in
mov
ss
pop
popa
or
test
pop
cmp
adc
fldcw
cli
dec
sub
sub
jmp
cmps
push
popa
into
inc
push
dec
jbe
shl
sbb
dec
out
xor
mov
std
cmps
dec
inc
xchg
jae
jbe
xor
mov
fidiv
cmp
aas
jl
ss
ds
xchg
adc
and
imul
js
fistp
dec
lds
adc
(bad)
js
(bad)
jp
in
fadd
jb
or
adc
es
cmp
push
addr16
test
outs
nop
jp
xchg
adc
popf
add
pushf
call
inc
adc
out
cmp
retf
cs
nop
shl
dec
cs
bnd
js
and
fdiv
jp
adc
scas
(bad)
outs
mov
jge
push
ret
fisubr
cmps
mov
fadd
shl
add
rol
jns
sub
cmp
(bad)
inc
pop
imul
mov
pop
cmp
push
pushf
or
iret
repz
int
popf
xchg
xchg
in
xor
pop
jo
mov
imul
cmp
and
repnz
arpl
sub
je
xchg
call
xchg
dec
adc
push
pushf
jnp
pusha
ss
popf
mov
pop
push
cmc
repnz
mov
xchg
mov
jecxz
mov
mov
out
dec
push
adc
fsub
sbb
fnstcw
lods
popf
mov
push
jmp
push
je
imul
mov
xchg
push
outs
add
sub
inc
pop
arpl
out
cdq
out
stc
fisubr
aad
adc
pop
jb
gs
sub
cdq
adc
adc
fcom
xchg
xchg
pop
adc
rcr
stos
js
push
addr16
(bad)
jnp
and
fsubr
sub
in
idiv
lea
push
adc
(bad)
shr
xor
iret
outs
mov
es
cwde
retf
inc
fmul
and
inc
retf
int
out
push
aad
jle
sbb
shl
popf
push
bound
push
inc
dec
ds
rcl
sbb
jmp
ss
jp
scas
sub
jo
xor
mov
test
ret
mov
aam
push
mov
or
cld
lods
call
(bad)
icebp
sub
data16
(bad)
sbb
push
sbb
xor
jle
push
in
xchg
add
jne
scas
out
xchg
and
jb
adc
dec
fcomp
cli
scas
jbe
adc
mov
jae
xor
dec
in
or
fsub
mov
stos
cmps
push
xchg
mov
ins
sar
lock
fist
loop
ss
enter
lds
xchg
dec
inc
idiv
leave
push
inc
fcom
aaa
test
sbb
xchg
sbb
cdq
adc
iret
sub
xchg
inc
sbb
xor
clc
jecxz
mov
int3
adc
das
sar
iret
cmp
in
fld
call
and
push
call
fnclex
adc
cmp
das
ret
xchg
xchg
dec
stc
cmp
popf
(bad)
retf
fcomp
(bad)
iret
cmc
adc
iret
mov
xor
jbe
xchg
imul
dec
mov
mov
popf
int3
fimul
fimul
inc
ret
aas
inc
xor
add
push
sub
bound
out
fwait
xchg
(bad)
mov
or
stos
aam
iret
cli
add
test
dec
in
pushf
pop
sahf
dec
bound
stos
mov
inc
(bad)
int3
cmp
push
bound
mov
xchg
pop
and
stos
cmps
dec
cwde
lods
jmp
push
jno
ins
lock
adc
sbb
mov
xchg
cld
mov
push
jbe
jo
cmp
cmp
push
ret
stos
xchg
idiv
fst
mov
shr
jno
jns
ja
aad
and
mov
nop
inc
btr
outs
cmc
icebp
loope
xor
rcl
arpl
js
xor
xchg
mov
push
dec
in
mov
(bad)
xor
(bad)
cmp
mov
ds
sti
mov
out
inc
lock
sbb
scas
sub
lods
retf
add
lahf
mov
pop
and
push
mov
pushf
repnz
pop
inc
stos
aaa
mov
or
ret
lock
call
dec
jmp
push
(bad)
(bad)
fwait
and
lea
stos
rol
fcomp
cmps
out
dec
sub
add
xchg
sub
pop
push
jmp
dec
push
hlt
inc
iret
push
imul
cld
imul
inc
icebp
mov
jmp
shl
addr16
dec
sar
push
(bad)
mov
push
pop
jp
pop
xchg
nop
xchg
jecxz
fwait
xchg
test
pop
xchg
std
jmp
sub
mov
jmp
mov
movs
fidiv
in
pop
mov
mov
jmp
outs
or
ficomp
popf
fisubr
pop
xchg
int3
dec
test
mov
fsubr
push
out
push
cli
sub
(bad)
loop
gs
jns
or
ins
call
mov
jmp
cmps
inc
sbb
shl
fimul
in
dec
ffreep
mov
cs
pop
imul
fstp
(bad)
lds
loop
push
push
dec
jp
pop
in
imul
add
jbe
sbb
jnp
adc
inc
add
add
sahf
in
popa
mov
adc
shl
jecxz
fcomp
in
ins
sbb
aas
retf
or
outs
dec
xor
test
jge
xor
jecxz
sbb
out
and
arpl
sbb
jl
dec
stc
pop
and
inc
ret
jecxz
inc
xor
(bad)
lock
mov
ficom
xlat
xchg
inc
lahf
(bad)
pop
push
push
or
aad
fidiv
xor
sub
lds
inc
xchg
aam
dec
or
xchg
pop
xchg
shl
sub
adc
in
adc
push
aad
mov
fwait
sbb
sahf
sub
push
fs
add
sbb
cmp
aaa
inc
and
push
out
dec
loopne
add
pusha
mov
cmps
adc
pushf
xchg
xchg
movs
dec
xchg
cmp
mov
cmp
xchg
cwde
in
push
mov
ret
cmp
push
push
adc
mov
repz
mov
xchg
xor
repz
sbb
mov
sub
push
or
leave
add
fldenv
mov
adc
pop
mov
rcr
cmps
mov
sbb
dec
icebp
inc
jne
ror
hlt
mov
jmp
cmc
inc
aas
ret
mov
loope
pop
ret
and
mov
mov
stos
aad
pop
jae
popa
imul
or
adc
or
add
mov
pop
add
ror
cmp
mov
push
mov
or
aam
adc
xor
(bad)
cmp
cmp
int3
mov
sbb
dec
out
arpl
cld
shl
cmp
mov
or
popa
sub
(bad)
mov
xor
aad
xchg
sbb
or
mov
pushf
and
sti
stc
fmul
push
fwait
jno
xor
fdiv
cmp
or
frstor
jmp
jno
pop
mov
cmp
int
adc
sahf
mov
xor
ins
addr16
jo
jns
loop
add
or
pop
or
scas
jmp
pop
xor
pop
fwait
lds
sti
inc
loopne
leave
and
pop
sbb
jg
das
cld
call
ss
push
dec
jno
leave
pop
push
leave
and
mov
mov
mov
fist
xor
pop
icebp
inc
cwde
enter
xchg
inc
not
dec
scas
adc
mov
jecxz
out
lahf
in
inc
aam
(bad)
and
mov
push
mov
into
pop
dec
jne
mov
dec
jl
pop
sbb
dec
mov
call
sahf
xchg
or
jb
into
fwait
(bad)
std
sbb
sub
jns
test
retf
jmp
daa
scas
adc
xor
fidivr
pushf
fisubr
mov
(bad)
cli
xor
inc
mov
sbb
outs
imul
hlt
add
push
stos
sahf
outs
adc
rcr
push
and
mov
and
mov
pop
repz
pushf
(bad)
(bad)
out
push
imul
iret
movs
sbb
jg
sahf
enter
dec
lock
loopne
dec
cmp
and
cmp
inc
sti
aaa
mov
test
mov
fcomp
adc
loope
xor
adc
lea
repz
cmp
fwait
push
pop
jg
js
repz
sub
cs
mov
pop
sbb
daa
cmps
cmp
lock
jne
(bad)
out
xchg
leave
and
mov
nop
and
or
movs
xchg
and
mov
dec
ins
and
or
dec
mov
pop
inc
push
test
xlat
pop
cmp
pop
dec
mov
inc
jo
sti
dec
or
mov
enter
mov
daa
pusha
hlt
bound
push
push
add
mov
adc
pop
ja
cmp
mov
test
push
lahf
outs
push
add
adc
jnp
in
out
sbb
inc
dec
nop
shl
or
lock
pop
or
push
sbb
mov
aam
push
stos
mov
pop
lahf
mov
cmp
cmc
sub
xchg
cs
adc
(bad)
iret
retf
iret
shl
ret
aad
add
xchg
stos
shl
jnp
ret
loope
sub
pop
mov
sbb
sub
out
sub
ror
mov
push
(bad)
xor
dec
push
popa
push
inc
add
test
sub
xor
dec
add
inc
lahf
imul
push
js
mov
pop
fsub
dec
cmp
mov
int3
in
adc
adc
pop
pop
call
and
repnz
(bad)
pop
push
add
cmp
mov
frstor
jbe
sahf
outs
sub
nop
jle
adc
or
pop
mov
jns
mov
ins
lahf
sub
lahf
mov
pop
fmulp
fldenv
(bad)
pusha
jl
imul
test
mov
stc
sti
mov
pop
push
into
aaa
ds
imul
dec
and
adc
push
mov
sub
daa
jge
pop
in
dec
fisub
call
sbb
jmp
cld
shl
pop
arpl
or
pop
inc
jb
hlt
lock
gs
inc
mov
popa
call
xor
cld
add
js
and
inc
sbb
sbb
iret
mov
or
imul
mov
jb
inc
pop
xchg
jnp
aam
jnp
aaa
inc
cmp
pop
into
fscale
add
sub
cmp
dec
push
popf
cmps
ror
add
sbb
cs
pushf
test
rcr
popf
fs
lds
jne
inc
sbb
sbb
std
adc
jmp
jo
mov
pop
pop
mov
or
neg
mov
sub
dec
push
jg
(bad)
cld
loop
inc
vfrczps
xor
xchg
test
and
sti
idiv
icebp
shr
popf
dec
inc
gs
fwait
in
lods
nop
xor
cs
std
inc
mov
and
dec
cmp
out
jbe
mov
cmp
inc
outs
in
sbb
jb
ins
(bad)
dec
inc
jb
ja
cwde
mov
int
mov
scas
fbstp
repnz
fsubr
mov
xor
adc
ret
shl
jne
adc
dec
mov
push
xchg
mov
(bad)
sbb
mov
fs
jne
mov
iret
ret
int
fisubr
jl
and
or
mov
retf
pusha
popf
mov
outs
(bad)
(bad)
pop
jne
(bad)
cdq
(bad)
push
xor
dec
repz
jge
cdq
int3
sub
dec
test
jle
dec
and
xor
push
inc
mov
lods
stc
outs
out
mov
pop
(bad)
pop
mov
pop
adc
pop
pushf
xor
add
inc
movs
pop
pop
fild
sahf
push
push
test
dec
inc
les
and
test
jp
add
fnstenv
daa
jp
lock
fmul
ss
pop
pop
push
cmp
push
dec
imul
js
push
mov
pop
mov
das
inc
add
cmps
cli
ins
mov
arpl
cmp
mov
dec
inc
aaa
jno
into
inc
cmp
xchg
and
fstp
aad
lea
es
ja
pop
iret
int3
pop
sbb
inc
int3
dec
mov
xchg
popf
push
idiv
mov
mov
(bad)
fdivr
adc
fild
sub
enter
or
mov
test
lds
inc
into
and
add
inc
cmc
add
imul
out
inc
(bad)
or
and
sub
stc
xchg
sbb
fistp
loope
push
call
cmp
xchg
xchg
mov
sbb
mov
jne
jp
dec
leave
mov
mov
fadd
cld
iretw
sti
test
stos
pop
fs
iret
jle
call
call
imul
and
dec
fsubr
jmp
mov
fimul
fcomp
and
addr16
or
adc
add
test
push
and
sbb
in
adc
imul
cmc
pop
(bad)
fsubr
dec
mov
or
out
cs
xor
stc
cwde
sti
pushf
ret
aas
add
movs
ins
es
fimul
sub
sbb
cdq
xor
fwait
mov
xor
in
xchg
pop
dec
xor
dec
inc
sbb
test
test
call
push
shl
in
mov
pushf
and
aaa
mov
jbe
sbb
test
push
stos
loop
or
fcmovnu
test
(bad)
xchg
jge
adc
nop
sahf
dec
mov
add
(bad)
fwait
mov
stos
and
pop
sbb
pop
ins
inc
std
sbb
inc
cmp
fldenv
push
sbb
gs
test
(bad)
mov
and
ins
sub
push
mov
mov
xor
and
cld
mov
pop
js
(bad)
jmp
addr16
call
ins
mov
out
and
jno
and
and
cmp
dec
outs
or
ins
test
push
sub
inc
jmp
jns
cmps
(bad)
loopne
ret
outs
mov
shr
adc
test
test
out
imul
push
dec
neg
xchg
xchg
add
out
mov
(bad)
lock
dec
hlt
out
ins
dec
ficom
test
mov
test
or
mov
xor
pop
add
call
mov
popa
or
mov
mov
loopne
cmp
imul
sub
adc
sub
arpl
lock
sbb
retf
inc
aaa
or
shl
push
pop
add
nop
aaa
jb
not
sbb
jmp
add
outs
sub
add
xor
in
push
mov
stc
mov
add
inc
scas
fdivp
popf
xor
out
jb
mov
ins
xchg
jp
push
cmp
nop
or
ins
fcom
or
test
dec
outs
cmp
inc
bound
adc
out
sub
rcl
int
mov
int3
add
push
out
addr16
jne
in
add
test
xor
ja
sbb
push
in
push
dec
inc
jl
dec
or
push
(bad)
cmps
fistp
aam
(bad)
dec
leave
loope
bound
loop
mov
or
pop
enter
push
mov
xchg
outs
cmp
movs
(bad)
sbb
shr
push
(bad)
cdq
iret
into
mov
mov
xor
je
(bad)
rol
retf
jmp
push
fwait
test
push
fucomip
cmp
inc
pop
or
push
setnp
retf
xchg
add
pusha
xchg
inc
xor
scas
jg
std
or
cmps
clc
jo
fwait
test
jge
xor
add
fsubr
test
jae
inc
adc
or
jg
cmp
lods
dec
inc
xchg
xchg
cmp
mov
rol
mov
dec
out
mov
mov
rol
inc
xor
xchg
add
ret
retf
cmps
frndint
gs
or
inc
inc
jl
mov
ror
repnz
push
and
sub
scas
cwde
add
sub
mov
xchg
cmp
pop
adc
jno
dec
outs
fxch
adc
in
mov
xchg
int3
and
mov
jb
xchg
jge
rep
cmps
fcom
dec
cmp
mov
stos
call
js
cmp
inc
mov
popw
mov
pushf
stos
and
lds
sub
shl
pop
xor
(bad)
movs
adc
fdiv
aaa
in
(bad)
and
sbb
fsub
imul
cmp
lds
imul
and
dec
repz
inc
fnstcw
hlt
ds
adc
jo
pop
mov
scas
jnp
outs
xor
fistp
ins
cwde
das
xor
mov
test
in
xlat
dec
pop
push
push
adc
dec
cdq
add
popa
pop
(bad)
jmp
sahf
pop
stos
aaa
dec
jae
and
mov
shr
out
mov
xchg
mov
xchg
pop
outs
push
inc
mov
xchg
mov
sti
stc
call
mov
xor
push
push
inc
loope
pop
jmp
movs
push
cld
add
push
lock
push
push
or
stc
loope
outs
mov
push
cmp
pop
dec
sub
cmps
loopne
aaa
mov
sbb
jl
(bad)
xor
lock
cmp
icebp
ror
pop
sbb
cmp
mov
int3
cld
cli
fidivr
push
sbb
aas
xchg
pop
dec
sti
(bad)
mov
mov
outs
jmp
xchg
sbb
jae
inc
std
mov
mul
pushf
(bad)
sub
mov
adc
pusha
and
rol
jmp
ins
fld
(bad)
loopne
sti
cli
movs
mov
mov
stc
stos
loop
ret
retf
clc
sub
rcl
iret
neg
sbb
stos
cmp
and
adc
scas
push
xor
arpl
and
mov
aad
mov
mov
or
mov
push
dec
mov
imul
jno
and
cli
daa
pushf
test
sub
cmc
aad
lahf
xchg
cmps
neg
popa
mov
dec
aaa
inc
pop
lods
shr
ror
ret
cmp
int
jmp
(bad)
scas
aad
fucom
mov
and
jecxz
cdq
nop
jo
hlt
add
out
cld
cmp
or
enter
mov
outs
inc
repz
ja
in
jns
sub
enter
jne
sub
pop
repnz
and
test
jns
fidiv
or
rol
inc
jg
not
fnstsw
mov
sbb
lods
fcmove
adc
and
xor
sub
inc
lods
add
jle
retf
aam
sar
xor
sub
or
add
xor
outs
mov
push
push
popa
test
add
pop
mov
fistp
or
scas
(bad)
jno
xchg
mov
dec
loope
call
mov
xor
int
cmp
fwait
call
movs
test
cwde
add
test
mov
jb
dec
inc
sub
xchg
fisubr
mov
ret
cmp
mov
dec
cld
mov
mov
add
xchg
cmc
jge
pop
adc
dec
into
out
fst
call
cwde
inc
sub
mov
loop
inc
jg
xchg
pop
xchg
push
enter
in
fld
mov
xor
cmc
jmp
jne
mov
stc
std
out
ror
lock
mov
ror
mov
into
jbe
or
shr
xchg
rcr
popa
cwde
add
gs
cmp
loop
outs
xchg
dec
fbld
in
(bad)
jb
movs
xchg
fwait
pop
data16
sub
jo
push
xor
adc
call
ret
push
add
les
daa
scas
jno
shr
xor
call
fdivr
int
sub
add
sub
cmp
cmp
mov
pop
outs
push
push
sub
xor
sahf
pop
sbb
pop
pushf
cwde
retf
push
inc
cmp
(bad)
std
xlat
ds
sbb
scas
mov
adc
and
test
jmp
xchg
int3
imul
push
push
pop
in
pop
mov
daa
mov
mov
adc
test
shl
cmp
jae
repz
ds
sub
rcl
jle
movs
bound
fxch
mov
jle
cmp
ret
pop
aad
(bad)
cwde
adc
push
imul
rcl
jg
lock
adc
out
or
pop
inc
mov
mov
jg
jae
fcomp
mov
jne
das
or
(bad)
repnz
rcl
dec
inc
loopne
cmp
imul
fldz
push
retf
dec
je
lahf
or
push
dec
pop
sbb
mov
repz
js
inc
mov
sub
and
jbe
retf
aas
xchg
inc
jae
outs
jb
cmps
dec
push
push
ja
mov
call
dec
mov
fisttp
fstp
mov
adc
inc
mov
and
add
xchg
xor
jmp
fadd
push
movs
(bad)
ror
mov
xchg
iret
or
push
(bad)
loopne
mov
and
ins
ret
jl
sub
sahf
cmp
push
inc
push
bound
cmp
div
xchg
sub
loope
mov
cdq
scas
shl
fnstcw
lods
repz
test
shr
pop
daa
cmp
popf
jg
fwait
mov
or
cdq
cmps
clc
leave
movs
cli
loope
bound
js
or
outs
(bad)
xor
fwait
and
ja
(bad)
pop
add
xchg
mov
aam
or
ins
(bad)
sub
xchg
ret
cwde
sbb
dec
xor
pushf
push
(bad)
shl
movs
sub
adc
dec
dec
stc
dec
push
pushf
or
xchg
dec
pop
or
out
div
jg
sbb
xor
jp
or
shr
lock
ror
pushf
adc
mov
and
nop
cmc
sar
lock
cwde
jb
pop
xchg
and
mov
mov
mov
fstp
data16
repnz
adc
test
daa
std
fucomp
sbb
loope
repz
in
stc
icebp
add
ss
rcr
stos
mov
hlt
xchg
and
push
sub
int
fst
xchg
mov
cld
pushf
inc
(bad)
(bad)
out
sahf
xor
hlt
enter
push
lahf
sets
dec
jp
push
das
or
popa
sub
aas
add
fidivr
out
dec
sti
fsub
cs
dec
mov
stc
jecxz
pop
cmps
push
sar
cmp
jne
loopne
(bad)
rcl
stos
imul
mov
xor
pop
ret
jecxz
and
adc
jge
ret
aam
dec
int3
add
loopne
sbb
push
xor
push
rol
push
daa
retf
fisub
and
mov
xor
jmp
stc
xchg
push
pop
sub
ret
cld
mov
hlt
xchg
movs
adc
outs
mov
pusha
inc
sbb
mov
test
push
jb
mov
xor
inc
add
jecxz
rcr
mov
jecxz
xor
mov
adc
outs
rcl
lock
pop
jmp
adc
loop
add
xchg
mov
scas
push
xor
vmwrite
loop
pusha
movs
hlt
fcom
sub
dec
repz
data16
scas
mov
in
xchg
sbb
call
pop
(bad)
fsub
mov
push
call
into
and
int
dec
je
lahf
stc
or
aaa
dec
pop
(bad)
jb
dec
scas
ja
mov
xchg
call
inc
ins
xor
gs
inc
ficomp
(bad)
retf
jns
and
test
mov
(bad)
rol
(bad)
or
xchg
xchg
push
loope
jmp
xchg
lock
xchg
push
pop
bound
das
movs
ds
shr
sub
aam
fcomp
out
pop
push
mov
std
call
or
int
test
push
mov
out
int
pop
or
rcl
cdq
pop
add
pop
jae
fdiv
pusha
fcom
jmp
jge
out
jecxz
mov
arpl
lahf
icebp
push
pop
mov
pop
jne
nop
dec
adc
les
imul
test
jg
inc
cmp
add
sbb
push
out
mov
mov
dec
xor
push
and
dec
aas
fdiv
lds
addr16
mov
mov
sub
lods
loop
es
lahf
push
in
inc
(bad)
push
pop
(bad)
jmp
jns
sbb
movs
or
mov
inc
xchg
mov
inc
ror
fcom
aas
push
xor
jg
xlat
mov
fwait
(bad)
xchg
mov
dec
mov
out
ds
push
popa
popf
mov
xlat
push
sbb
pop
scas
loop
mov
push
jle
dec
je
in
stos
in
retf
inc
inc
sbb
adc
jno
or
xchg
fs
ret
push
shr
cmp
mov
lea
fisttp
dec
mov
pop
push
cld
and
jge
loopne
stos
in
cmp
retf
cmc
ror
sub
xchg
stos
add
xor
cwde
aam
inc
std
push
jns
out
data16
mov
cmp
enter
ja
repz
dec
lahf
stc
ins
iret
outs
cmc
lahf
scas
fwait
imul
js
neg
push
stc
jo
xchg
or
retf
ficom
outs
pop
es
sti
mov
hlt
cmc
in
pop
fisttp
or
sti
push
retf
gs
and
int3
dec
jmp
psubusw
retf
in
xor
mov
cmp
hlt
pop
mov
mov
cmp
ret
cmp
retf
mov
outs
xor
clc
mov
rcr
pop
ds
gs
das
push
mov
cmp
fwait
cmps
dec
addr16
inc
mov
xor
mov
es
dec
dec
mov
xor
(bad)
push
mov
int3
enter
jb
in
push
outs
imul
jle
retf
das
gs
cwde
sbb
add
retf
pop
and
(bad)
sub
add
das
pop
sub
mov
pop
cdq
std
and
pop
pop
(bad)
mov
ds
push
pushf
jl
loopne
push
mov
cld
jg
loop
cmp
mov
lea
mov
in
nop
jl
clc
rcl
jl
es
dec
popf
std
add
jo
mov
movs
jne
jmp
cmc
call
push
imul
mov
mul
mov
sbb
sub
push
dec
inc
cmp
in
adc
bound
cs
push
daa
scas
inc
iret
pushf
push
addr16
or
cmc
jl
xchg
push
mov
(bad)
call
outs
xchg
les
sub
aas
cs
inc
xchg
push
jge
movs
mov
jecxz
add
retf
xor
inc
and
test
inc
and
push
inc
xchg
pop
xlat
jle
sti
pop
inc
xchg
pop
xlat
jle
in
push
addr16
sbb
mov
dec
cmp
pop
movs
and
and
and
sub
mov
in
out
sbb
ret
hlt
in
sbb
sub
inc
jbe
cmps
movs
popa
add
sbb
cmp
dec
xor
mov
jno
sbb
jnp
xor
fild
sbb
ds
pop
push
ret
jbe
popa
outs
push
sbb
xchg
arpl
push
fwait
scas
call
shl
(bad)
pusha
pop
(bad)
xor
mov
imul
add
inc
xchg
pop
inc
jb
add
dec
xchg
mov
(bad)
xor
pop
inc
push
out
sub
scas
fcmovne
cdq
aad
lods
imul
jne
mov
outs
cli
(bad)
cmp
fimul
pop
push
call
and
mov
mov
mov
sbb
data16
fsubr
mov
push
pop
dec
sbb
xor
pop
addr16
(bad)
adc
fmul
mov
push
out
icebp
aad
or
arpl
pop
inc
arpl
out
cbw
lock
add
or
mov
(bad)
dec
jg
xchg
inc
mov
and
pop
xor
ins
push
push
aaa
(bad)
lds
xchg
xchg
mov
cmps
daa
jg
stc
test
push
(bad)
xor
push
jae
pop
imul
adc
lods
or
sbb
push
cmp
xchg
xor
in
sbb
sub
ins
and
push
stos
xor
iret
cmps
sbb
mov
stos
rcl
jle
js
dec
retf
push
out
mov
jmp
pushf
test
aad
data16
mov
cli
out
xor
icebp
fsubr
fwait
mov
lock
addr16
lock
add
outs
pop
sub
shl
clc
jne
pop
xchg
pop
test
xor
xchg
je
push
xchg
pop
sub
cli
sahf
dec
mov
cmp
sbb
cmp
add
jg
cwde
dec
scas
push
sub
icebp
ins
push
pop
cmp
cs
inc
inc
inc
arpl
sub
mov
repnz
mov
iret
mov
adc
adc
mov
lods
dec
pop
mov
call
out
out
nop
jecxz
mov
lods
pop
cli
lea
icebp
(bad)
adc
imul
xlat
mov
daa
push
mov
arpl
call
xchg
push
push
mov
enter
xor
enter
addr16
and
xchg
or
dec
outs
aam
jl
int3
int3
xor
and
inc
cmp
mov
sub
jbe
(bad)
jns
or
push
inc
inc
cmc
imul
pop
xor
pop
repz
push
rcl
pop
test
push
inc
add
call
inc
cld
repnz
sbb
xchg
mov
std
lods
jb
cmp
int
fwait
push
scas
and
xchg
fstp
jmp
fmul
xchg
outs
scas
sub
sub
mov
ins
stos
mov
mov
adc
inc
fcom
jmp
push
and
mov
das
pcmpeqw
dec
stos
lea
std
adc
mov
pop
and
cld
inc
dec
adc
aad
pushf
std
neg
xor
pop
xchg
cdq
cdq
sbb
ret
cmp
out
sub
enter
into
xchg
pop
pop
ja
pop
inc
div
repnz
inc
xor
stos
mov
mov
ss
fcom
dec
lea
out
call
aaa
sbb
cmps
sub
rcr
sbb
iret
scas
mov
mov
add
dec
cmp
arpl
push
jg
sbb
popf
xor
scas
inc
pop
add
daa
imul
push
gs
mov
xor
cmc
xor
adc
sbb
adc
pop
inc
mov
and
sbb
xor
mov
xchg
test
clc
ins
mov
int3
mov
dec
ins
shl
jmp
lods
hlt
sub
nop
xchg
sub
sub
sub
pop
ins
mul
repnz
push
arpl
int
iret
repz
push
aam
mov
cdq
sub
mov
enter
inc
and
popf
sar
call
and
mov
xchg
xchg
js
test
retf
and
test
pop
icebp
ror
ret
popa
jns
inc
pop
push
fs
dec
pop
push
cmp
mov
sti
fnsave
mov
xor
inc
cld
imul
cmp
jmp
inc
mov
inc
adc
div
outs
imul
iret
push
(bad)
js
popa
retf
cmp
popa
(bad)
pop
pusha
sbb
test
jb
or
cmp
aad
mov
sbb
cs
mov
retf
fmul
xlat
xor
rcr
xor
mov
mov
pop
jb
test
call
repz
fist
pop
mov
dec
xor
pop
bound
cmps
or
push
mov
or
sub
call
shr
inc
mov
int
xlat
cmp
sbb
and
inc
sub
and
mov
mov
adc
mov
pop
xchg
mov
popf
cmps
fsub
(bad)
cli
test
out
pushf
loopne
and
push
dec
(bad)
mov
int
push
sbb
sbb
call
call
and
sub
loop
loop
inc
pushf
dec
dec
push
inc
mov
pop
sahf
gs
cmc
mov
jmp
jecxz
xor
pop
movs
nop
jbe
jge
pushf
pop
fisubr
mov
lods
xlat
loop
test
dec
xchg
adc
xor
adc
jbe
inc
outs
mov
jl
dec
or
aad
adc
test
and
lahf
ret
mov
rcr
jb
or
cmc
test
add
push
out
push
or
or
ret
loope
(bad)
fsubr
inc
cmp
cs
inc
sar
repz
xchg
xchg
jae
sbb
out
jne
pop
test
mov
xor
xchg
mov
(bad)
mov
xor
jg
jge
pop
cmp
jmp
mov
cwde
test
imul
int3
inc
jae
pop
cmp
rcr
pop
xor
in
add
test
popf
sub
into
addr16
stos
fsubr
in
pusha
addr16
jno
popf
lock
das
arpl
push
jns
and
(bad)
cmp
popf
add
das
imul
jl
jno
rcl
(bad)
(bad)
ds
mov
cwde
repz
adc
pop
arpl
retf
iret
fistp
ins
mov
rcr
dec
retf
ins
jae
bnd
aam
das
sub
(bad)
ins
pusha
xchg
jp
dec
xchg
sbb
pop
add
jge
sbb
push
sub
push
push
mov
push
adc
adc
jb
push
mov
aas
cli
mov
add
jmp
pop
shl
push
icebp
test
das
test
mov
sbb
arpl
pop
retf
jns
and
push
xchg
ins
or
fs
out
adc
pop
scas
xchg
push
xor
fcmove
jle
sbb
ss
sbb
cli
mov
call
(bad)
jle
add
push
fstp
inc
sbb
sahf
mov
mov
dec
mov
dec
(bad)
xchg
fmul
stos
scas
pop
sar
lahf
es
push
arpl
popf
or
div
dec
xlat
sar
sub
imul
mov
loop
mov
fstp
in
push
addr16
fimul
dec
or
push
out
pop
jle
cmp
mov
cmp
or
cwde
sbb
fadd
das
xchg
stos
xor
push
jecxz
call
xchg
or
sub
push
mov
cli
test
std
jae
dec
pop
push
and
movs
ret
test
ja
mov
inc
and
cmps
movs
jecxz
fs
mov
std
retf
xor
xor
and
iret
ja
(bad)
and
std
in
cmps
adc
dec
cli
aaa
addr16
push
or
mov
push
jae
fidivr
fisub
push
fiadd
je
js
cmps
mov
add
cwde
repz
enter
in
inc
out
pop
lods
pop
(bad)
pop
xor
or
jge
jg
pop
nop
test
mov
in
(bad)
adc
in
retf
scas
push
popa
sti
fild
cmp
repz
arpl
or
jl
sub
sub
fs
(bad)
std
mov
out
sahf
and
mov
imul
movs
loope
or
scas
lock
mov
cmp
and
les
inc
xor
ins
mov
fwait
push
mov
std
aas
pop
cmp
mov
jp
dec
xchg
mov
xchg
and
cdq
sub
mov
pusha
fwait
arpl
loopne
sahf
pop
retw
cmp
fs
icebp
fadd
pop
and
int
pusha
push
rol
inc
jae
dec
mov
mov
jo
in
xchg
inc
adc
nop
xchg
sub
daa
fcomi
xchg
sbb
(bad)
adc
dec
mov
sbb
xchg
retf
xor
sahf
pushf
jnp
fs
inc
jbe
sahf
mov
fsub
pop
or
mov
enter
cmp
mov
cmp
push
sbb
test
mov
icebp
mov
cmp
push
mov
pop
call
daa
(bad)
repnz
adc
lock
push
push
daa
mov
aad
inc
push
push
jne
sar
cmp
xchg
jne
gs
cmps
bound
das
inc
scas
stos
inc
je
pop
pop
mov
mov
sbb
mov
and
(bad)
jmp
outs
inc
jecxz
jbe
mov
int3
xchg
push
les
sahf
in
int3
mov
sbb
adc
ins
push
mov
xor
xchg
sub
mov
pop
mov
(bad)
test
outs
jae
pusha
jbe
cmp
inc
push
sub
jb
mov
stos
sbb
xchg
rcl
div
out
test
adc
jg
mov
push
sbb
(bad)
cmp
push
retf
mov
(bad)
and
(bad)
test
retf
lea
mov
bound
(bad)
call
xchg
xchg
test
aaa
arpl
pushf
sbb
cdq
arpl
cld
ret
sahf
cmps
sti
add
cmps
loope
addr16
pop
or
cmp
(bad)
retf
adc
sub
aam
jnp
or
push
test
mov
fnstenv
fisubr
push
lds
inc
jmp
xchg
xchg
dec
cmps
aam
sub
sahf
cmp
call
int
(bad)
imul
sub
sbb
(bad)
adc
xor
test
cs
pop
hlt
rcr
movs
adc
aad
sahf
mov
dec
or
push
je
outs
pop
xor
sub
out
push
outs
jnp
push
(bad)
out
mov
adc
ss
into
mov
add
test
aas
shl
pusha
xchg
lods
jo
dec
jmp
inc
bound
adc
scas
and
fadd
xlat
mov
add
ja
fisubr
pop
loopne
arpl
or
std
push
(bad)
pusha
fistp
xchg
fwait
pop
sti
cwd
(bad)
in
sub
(bad)
ins
aas
mul
mov
push
clc
test
sar
pushf
sti
sub
fadd
jecxz
add
daa
sub
lds
jb
std
in
sbb
int
sub
mov
ss
test
push
mov
dec
(bad)
or
xchg
jmp
daa
cwde
inc
call
mov
pop
call
imul
jnp
jge
inc
outs
xor
mov
push
ins
mov
mov
das
sti
mov
fwait
bound
fcom
sub
mov
jp
mov
cmp
scas
jbe
aad
sub
daa
int3
xchg
cld
dec
jnp
sbb
xchg
dec
sbb
pop
call
or
xchg
xchg
icebp
mov
adc
mov
ja
push
cld
sar
nop
push
and
pop
dec
popa
jp
cwde
inc
xchg
cmp
inc
enter
pop
test
dec
fs
add
shr
(bad)
bound
add
repz
addr16
xor
cld
and
popa
loope
pop
retf
push
shr
cmp
int3
mov
or
repz
test
into
cmp
and
jp
repz
sub
pop
addr16
jle
sahf
adc
cwde
int3
in
xor
cwde
aaa
fcomp
add
mov
mov
jae
int
iret
xor
out
xor
aas
xor
fild
dec
push
or
scas
mov
loop
sbb
pop
popf
cld
movs
jo
fs
pmaxub
jecxz
fisubr
ins
inc
mov
test
mov
cmp
(bad)
arpl
jecxz
cli
jl
aas
adc
(bad)
adc
cdq
mul
dec
inc
adc
xchg
outs
inc
inc
sub
dec
sbb
enter
sbb
xor
retf
sub
mov
pop
jl
sbb
pop
pusha
cwde
in
pop
scas
add
sti
ud0
push
xchg
ds
icebp
dec
mov
mov
test
push
add
pop
mov
push
out
outs
lea
sub
test
fcom
inc
dec
jno
stos
sub
adc
sub
push
(bad)
mov
push
lock
add
repz
or
push
aam
nop
es
mov
dec
pop
int3
mov
(bad)
in
cmp
fistp
hlt
pop
enter
cld
mov
out
add
or
or
dec
in
jnp
out
ss
mov
and
xor
push
(bad)
(bad)
aad
(bad)
out
xor
aas
ins
push
sbb
das
fldcw
dec
sub
retf
cld
jo
inc
push
sbb
sbb
mov
fwait
adc
push
push
mov
jecxz
bswap
cmp
fcomp
jg
and
iret
adc
mov
shl
inc
mov
add
repz
or
pop
imul
xlat
call
mov
jnp
push
add
ja
pop
mov
jns
in
aam
pop
ret
dec
outs
hlt
cs
je
cs
mov
and
xchg
push
test
jmp
push
pop
xchg
mov
je
mov
bound
call
(bad)
mov
sub
push
sbb
ret
xlat
mov
dec
jo
les
ins
or
fst
jo
and
and
xor
outs
cmps
sub
outs
cwde
adc
mov
cld
push
jb
adc
pop
mov
arpl
xor
fidiv
mov
xor
or
rol
cmp
mov
jge
rol
and
mov
pop
aam
pop
pop
jo
and
mov
xchg
inc
or
pop
in
out
or
and
jns
sar
fnstsw
adc
adc
fdivr
xchg
call
cmp
aas
mov
dec
or
movs
xchg
mov
or
adc
js
push
or
mov
mov
addr16
(bad)
inc
xchg
cmp
into
jnp
mov
or
enter
sbb
repnz
div
pop
fwait
aaa
fist
ins
test
pusha
leave
popf
xchg
mov
inc
mov
mov
xor
pop
not
out
jnp
xchg
fs
je
cli
jmp
lea
in
push
inc
shr
retf
add
outs
sbb
fsubr
sbb
sub
mov
mov
mov
lods
inc
xchg
adc
push
into
ror
push
fsubr
fsub
aad
mov
xchg
iret
js
imul
xor
or
mov
ins
xor
jae
test
adc
dec
jle
sbb
dec
jl
paddsb
movs
sub
lahf
fsub
pop
sbb
jle
xchg
rcr
pop
(bad)
icebp
daa
pop
outs
jnp
out
cmp
shl
mov
add
jl
sti
push
rcr
jp
add
xchg
or
test
push
mov
or
mov
adc
push
mov
mov
sbb
iret
jb
pop
out
pop
or
adc
(bad)
xor
in
jp
dec
mov
push
ins
mov
sub
sbb
or
in
cmp
outs
mov
adc
cmp
add
cmp
pop
test
xchg
dec
inc
dec
inc
mov
test
push
mov
lahf
outs
fadd
adc
dec
jecxz
ror
lea
adc
pop
dec
fistp
cld
lods
pop
dec
add
jnp
cmp
outs
arpl
adc
mov
and
adc
(bad)
jg
xor
mov
cmovno
addr16
(bad)
repnz
push
mov
jp
push
adc
mov
int
out
cmc
mov
sbb
adc
(bad)
stos
jbe
sub
jb
pop
push
cld
xor
into
dec
in
out
test
scas
inc
lea
sub
call
inc
jnp
add
inc
sbb
iret
push
xchg
inc
sub
xor
in
sub
es
xchg
push
(bad)
sahf
sub
xor
arpl
das
lahf
imul
xlat
loop
add
cmp
push
nop
pop
fld
cdq
test
shl
cmp
pop
into
jno
add
dec
iret
gs
dec
sub
push
mov
xchg
pop
retf
add
lock
jmp
xor
xchg
inc
inc
ret
sub
mov
cli
cmp
mov
cld
dec
loope
sbb
jge
fld
jl
mov
or
test
fiadd
hlt
(bad)
(bad)
sar
scas
pop
dec
or
jg
or
cmp
mov
mov
in
arpl
sbb
in
and
cmp
in
dec
dec
movs
das
or
push
sub
mov
ret
int
fistp
xor
and
sub
jno
ret
cmp
stc
popa
test
pop
lea
adc
push
jae
(bad)
dec
leave
sbb
xchg
pop
(bad)
loop
(bad)
(bad)
jg
cmp
in
cs
(bad)
cld
cwde
es
aas
mov
pop
int3
out
sub
mov
repnz
jg
outs
xchg
xchg
pop
fstp
sub
mov
movs
sbb
xor
enter
sbb
dec
retf
dec
and
xchg
data16
and
dec
jg
out
fimul
mov
hlt
jae
add
sbb
out
in
iret
iret
xor
retf
jns
jmp
mov
in
movs
leave
adc
sub
xor
stos
pop
xor
es
dec
vpmullw
(bad)
mov
or
std
or
xchg
cmps
(bad)
push
jl
pop
ins
jmp
hlt
mov
sbb
(bad)
out
fcomp
sbb
or
(bad)
sbb
dec
pop
sub
aaa
cpuid
pop
pop
inc
xchg
cmp
cmp
adc
xlat
mov
int
cwde
sbb
xchg
pop
repz
mov
imul
sub
(bad)
add
out
aas
mov
push
mov
imul
adc
pusha
ss
bound
jns
cmp
push
outs
hlt
cmc
cmps
rcr
leave
clc
xchg
or
ret
pushf
(bad)
fcomp
out
lods
cmps
adc
(bad)
lea
adc
ficomp
pop
in
sub
jmp
gs
rcr
stos
pop
jmp
loop
jne
iret
sub
push
xchg
add
aas
mov
push
jge
dec
scas
loope
mul
add
adc
bound
ret
fdivr
jg
adc
test
mov
push
mov
mov
xor
cmp
imul
or
enter
cwde
fsubp
je
add
fs
fimul
jp
add
hlt
dec
sbb
adc
retf
loop
pop
mov
ins
xchg
sub
inc
mov
pop
jecxz
add
jecxz
add
jne
cmp
iret
hlt
mov
xor
aas
dec
jecxz
fs
sahf
sbb
(bad)
xchg
movs
repnz
dec
jne
add
dec
aam
int3
jmp
jp
xor
adc
call
cld
test
or
(bad)
mov
ror
loop
inc
push
push
dec
int3
mov
adc
push
stc
aas
dec
jmp
cmp
outs
scas
cmp
outs
les
push
aam
aas
nop
in
in
arpl
outs
(bad)
ficomp
adc
jb
inc
jbe
jmp
sub
cmovne
sbb
scas
addr16
pop
mov
es
in
xchg
lea
(bad)
mov
or
push
mov
cmc
loope
sbb
ss
outs
and
xchg
int3
out
cli
mov
adc
arpl
repz
pop
xor
shr
xor
push
mov
ret
cs
aas
out
pop
sbb
xor
add
mov
mov
adc
mov
std
pop
leave
xor
div
into
sbb
cwde
sbb
mov
sub
push
scas
jnp
inc
dec
jmp
or
les
adc
cdq
jno
loop
jl
jmp
je
call
clc
inc
pusha
xchg
fucomp
pop
nop
adc
imul
cmp
pxor
std
ins
fstp
rcr
sub
test
stos
cmp
push
je
xor
mov
fldenv
es
adc
(bad)
jmp
adc
mov
shl
and
call
cmps
cmps
dec
jae
rcr
and
mov
ret
stos
push
iret
ror
clc
adc
stos
aam
xchg
dec
sub
mov
stos
xor
int3
retf
or
push
push
push
jecxz
sti
popa
cmp
sbb
call
ins
sub
push
jno
je
loope
sar
div
dec
dec
test
pop
pop
dec
cmp
fist
mov
xchg
les
aas
mov
sbb
adc
dec
cli
add
std
imul
jbe
pop
jmp
jb
or
repnz
leave
mov
(bad)
mov
sahf
pusha
ret
push
(bad)
pop
jg
imul
adc
sub
cli
mov
fsubr
repnz
jne
ret
cmp
stos
je
(bad)
les
push
jbe
cmp
and
pop
adc
inc
inc
pop
sbb
xor
cmps
loope
dec
in
aaa
int
xor
cmc
mov
push
cli
xor
das
sub
out
adc
push
cmc
stos
sbb
cli
sahf
call
xchg
pop
stos
add
test
sub
ret
fidiv
fcom
loope
mov
mov
out
inc
(bad)
pop
cmp
sbb
outs
or
scas
mov
outs
and
mov
mul
fdivr
out
lea
xchg
inc
stos
aad
pop
bound
push
mov
xor
push
scas
jbe
mov
fst
ror
(bad)
adc
mov
mov
mov
cmp
outs
cmp
and
jp
mov
idiv
fdiv
repnz
mov
imul
in
faddp
and
pop
inc
jl
xor
adc
push
aam
adc
sub
mov
(bad)
pusha
icebp
jns
or
repz
rcl
call
(bad)
pop
cld
fstp
repz
dec
cmp
mov
and
test
fwait
icebp
outs
out
jb
pusha
(bad)
push
dec
adc
(bad)
sahf
and
test
in
data16
sbb
dec
ret
out
fcomp
mov
and
pop
iret
hlt
test
jns
dec
dec
sbb
retf
enter
inc
lea
or
repz
rol
xchg
leave
mov
arpl
out
(bad)
sbb
dec
sub
dec
jp
pop
jbe
add
arpl
mov
mov
call
dec
inc
adc
(bad)
adc
ret
mov
mov
mov
adc
pop
pop
mov
cwde
jge
inc
add
nop
and
cld
mov
pusha
cmp
icebp
fld
inc
pop
call
mov
push
sub
jmp
pop
or
in
pop
cmps
adc
and
int
outs
(bad)
int
or
sahf
pop
test
into
jnp
iret
push
push
jae
les
movs
das
js
push
xor
repnz
pop
dec
jb
(bad)
lock
mov
dec
sub
cs
ds
idiv
cmp
inc
jbe
ds
cmp
mov
mov
mov
xchg
loop
int3
xlat
fist
in
into
call
stc
mov
ins
push
add
pop
stc
jmp
xchg
iret
mov
add
add
ret
movs
xchg
mov
sahf
idiv
sbb
push
cli
or
inc
jmp
retf
jle
jle
lds
sub
sub
fistp
dec
cmp
mov
jnp
or
fidiv
jb
fadd
or
jl
adc
scas
retf
addr16
ins
ret
daa
mov
sti
pop
add
adc
dec
sti
jnp
ins
dec
xchg
pop
rol
icebp
(bad)
jmp
sar
test
pop
adc
sti
sub
lea
sub
sub
jne
shl
jg
jge
inc
outs
inc
in
fs
cdq
cld
call
mov
add
in
shr
inc
stos
shl
dec
jns
out
std
bnd
out
into
popf
mov
or
sub
cwde
xor
add
cwde
adc
pushf
out
xor
xchg
imul
jl
inc
pop
push
jge
xchg
sub
pop
call
jno
push
xchg
not
bound
or
mov
cmp
stos
sbb
pop
aaa
call
mov
outs
shl
jmp
add
adc
mov
ror
adc
xchg
es
nop
(bad)
mov
int
adc
dec
fisttp
ja
pop
xor
jno
into
test
and
jnp
cmc
jo
adc
and
xchg
arpl
idiv
in
xor
pop
push
cmp
stos
hlt
jge
in
or
test
jno
repz
lods
rcr
ja
sbb
mov
call
ins
cmp
out
in
pop
cld
mov
xchg
adc
xchg
xor
(bad)
inc
sbb
sbb
mov
pop
xchg
call
mov
jne
ror
xchg
arpl
or
dec
inc
jne
xchg
mov
out
mov
arpl
lods
add
xlat
hlt
cmp
push
addr16
jmp
int
inc
xchg
xor
pop
mov
adc
sbb
pop
and
nop
mov
popa
mov
xchg
sbb
mov
and
add
ins
inc
cld
pop
ins
(bad)
fisubr
sbb
neg
mov
jmp
aam
cmp
mov
mov
(bad)
sub
mov
push
idiv
or
mov
in
mov
ret
jmp
pop
mov
fadd
gs
mov
outs
arpl
xor
mov
pop
mov
mov
cdq
(bad)
iret
scas
adc
mov
pushf
jb
cmc
sub
jge
adc
pusha
ret
aas
mov
mov
es
adc
retf
fidivr
and
mov
dec
xchg
sbb
out
outs
mov
push
ret
outs
pop
cwde
sbb
mov
xor
inc
cmps
push
jns
mov
fs
call
push
push
(bad)
inc
movs
adc
xor
push
mov
test
xchg
in
jne
bound
mov
bound
xchg
fist
mov
imul
ror
sar
jl
push
jg
push
jbe
push
mov
inc
and
cld
(bad)
xor
jmp
cld
adc
in
clc
arpl
add
js
and
inc
aas
mov
gs
cmp
xor
dec
push
jmp
dec
pop
cs
ins
mov
and
xor
iret
cld
mov
inc
mov
clc
dec
gs
fs
pushf
in
mov
mov
pop
test
and
test
sbb
sbb
xchg
cwde
lods
mov
mov
push
lds
inc
arpl
sub
sbb
sub
icebp
fwait
out
mov
sub
dec
inc
and
mov
adc
iret
sar
fist
jo
xchg
jmp
fnsave
and
mov
jmp
cmp
aaa
xor
aaa
push
stos
push
addr16
movs
mov
mov
adc
and
imul
cmps
pop
xor
mov
mov
(bad)
imul
push
fadd
fsubr
loop
stos
xchg
lea
or
mov
stos
and
inc
or
in
mov
dec
test
ds
sbb
cmp
test
add
or
repnz
or
xchg
fdivr
mov
arpl
cmps
pop
cdq
jne
mov
dec
xor
aam
imul
fnsave
xchg
inc
(bad)
pop
xor
pop
loop
jb
movs
push
cmps
cmp
iret
lods
jo
mov
mov
test
lods
jns
sbb
addr16
mov
push
or
cmp
int3
jmp
out
int
les
(bad)
ficomp
mov
jns
lds
jb
les
mov
xchg
cmp
les
xor
inc
js
xchg
sub
adc
and
fidiv
push
mov
cmp
fmul
dec
xor
arpl
inc
mov
sub
dec
test
inc
xlat
or
aam
dec
stc
jnp
cdq
stos
sbb
cmc
in
mov
xor
jp
adc
in
outs
sub
jns
jne
adc
push
rcl
retf
arpl
inc
out
std
sbb
scas
sbb
push
inc
cmp
ds
sub
sbb
jno
mov
pop
shl
sub
or
add
test
cmp
mov
jmp
fcomi
aam
fs
xor
dec
in
push
pop
cmps
pop
push
in
dec
sub
int3
jne
xor
jle
cmp
(bad)
scas
sbb
das
aad
add
imul
shl
mov
cmp
ror
add
scas
retf
and
(bad)
aad
and
mov
aam
pop
push
cdq
push
inc
mov
fs
out
push
add
jbe
dec
std
(bad)
(bad)
pop
xor
pop
rcr
pop
clc
xor
adc
push
jbe
das
sbb
dec
cmc
push
cmp
fnstsw
sub
pop
jmp
push
push
bound
jle
in
pusha
pop
pop
or
adc
mov
sbb
adc
or
jecxz
in
fdivr
mov
arpl
cmp
je
(bad)
repnz
lock
and
fisttp
or
dec
jmp
into
fldenv
xor
add
pop
mov
xchg
mov
pop
mov
or
xor
mov
jle
test
lea
sar
cwde
cmp
pop
and
mov
lahf
cld
jmp
jbe
mov
mov
inc
cmp
xchg
jecxz
xor
dec
ins
sbb
add
sbb
pop
pop
mov
push
int3
enter
adc
dec
imul
push
rep
mov
ss
sub
or
fnstsw
rol
cld
pop
jae
or
pop
mov
jnp
enter
mov
push
test
sbb
cdq
sti
popa
sti
pop
mov
sar
scas
jno
enter
fidivr
fs
fwait
sub
inc
mov
js
lods
cmp
inc
mov
stos
sub
loop
push
mov
pop
ins
pop
mov
mov
pushf
clc
xchg
(bad)
add
pop
mov
mov
xchg
std
stos
idiv
jge
push
not
jl
arpl
push
aaa
jne
fld
jle
popa
scas
xor
ins
mov
dec
scas
mov
in
mov
and
fdiv
pusha
mov
cwde
jmp
pop
movq
and
cmp
test
pop
js
mov
mov
les
pushf
add
push
dec
sar
call
mov
mov
fadd
pusha
pop
push
std
push
sahf
scas
xchg
cmp
dec
pop
out
test
push
ins
pop
cmps
jnp
ret
jp
xchg
cwde
(bad)
push
xchg
pop
mov
adc
je
retf
fwait
shr
imul
inc
sar
test
das
lods
shl
mov
mov
jne
cmc
cmc
inc
test
fs
inc
je
cdq
sbb
sub
lds
mov
mov
retf
not
into
fdiv
sub
push
mov
aas
cmps
inc
aaa
stc
xlat
js
imul
push
cli
call
repnz
repnz
mov
jb
(bad)
stc
mov
or
test
and
ins
xchg
xor
pop
xor
sbb
(bad)
add
inc
outs
xor
enter
sub
loope
out
cmp
cdq
mov
xchg
repz
mov
sti
xor
adc
mov
add
push
xchg
hlt
dec
in
ror
sti
xor
xchg
outs
adc
mov
mov
cmp
fidiv
pop
shr
xor
mov
mov
sub
stc
call
fwait
dec
pop
ret
xor
mov
mov
nop
rcr
aam
cld
aas
xor
inc
lock
addr16
scas
push
arpl
retf
adc
pop
jg
lahf
inc
lock
cmp
pusha
push
mov
xchg
lahf
pop
adc
cwde
call
call
popa
call
std
xchg
jle
jge
xchg
mov
mov
mov
out
cmp
inc
in
pop
retf
(bad)
mov
jle
cmp
jnp
shl
mov
mov
jge
and
(bad)
lods
arpl
(bad)
jge
push
jnp
loopne
rcr
cdq
mov
mov
mov
arpl
sbb
jl
enter
out
ror
xor
fcmovne
jne
pop
xor
sahf
lahf
lea
adc
cli
test
and
data16
fild
and
repz
movs
dec
in
adc
ins
push
in
push
pusha
outs
xchg
adc
retf
push
(bad)
push
retf
jno
jno
js
enter
imul
iret
jo
or
cmps
lods
inc
mov
sar
lock
paddw
mov
lods
out
pop
sub
or
stos
call
clc
je
sub
test
in
sub
mov
imul
fwait
pop
push
jmp
ret
inc
mov
or
les
std
in
jns
call
sbb
push
mov
ror
(bad)
cld
mov
pop
test
nop
dec
jmp
sbb
xor
bound
retf
xchg
jge
mov
dec
mov
adc
std
add
add
sub
push
test
push
push
nop
or
pop
jae
movs
retf
cmp
jnp
pop
aam
adc
sbb
pop
je
int3
movs
out
push
push
jnp
jg
xor
dec
je
add
mov
aaa
cmps
out
mov
(bad)
inc
fst
cmc
sbb
iret
bound
test
pop
add
int3
push
push
cli
mov
sar
cmps
int
ror
jl
push
jmp
push
and
jl
ror
pushf
lods
cld
pop
pop
aad
ins
scas
fwait
pusha
clc
cld
jg
into
cli
sub
xchg
xor
xor
mov
fdivr
test
mov
bound
mov
int3
cld
or
jns
popf
jl
jge
cmps
addr16
and
jno
in
in
(bad)
push
ds
mov
cmp
sub
fmulp
push
movs
aam
sti
push
(bad)
jp
imul
dec
jge
xchg
mov
stos
fnstenv
jle
inc
or
(bad)
sbb
cmps
sub
dec
imul
xchg
iret
pop
shl
push
pop
sahf
cmp
ja
stc
lods
pop
fs
xchg
loop
dec
xor
test
test
xor
in
xor
sbb
or
popa
aad
xlat
jmp
enter
fiadd
(bad)
aad
cli
sub
or
xor
sub
clc
jae
ins
jb
cwde
mov
stos
push
arpl
stos
cmp
jno
ins
xor
inc
cmp
loopne
xor
cmp
mov
dec
push
mov
push
fldcw
mov
xchg
inc
xchg
mov
push
xchg
push
fnstcw
repnz
dec
pusha
push
pusha
cmp
fsub
push
push
fnstcw
test
popf
sti
xor
push
and
sar
sbb
js
add
iret
gs
mov
call
jbe
jl
fiadd
cld
xchg
je
dec
jmp
aas
jle
dec
outs
sbb
out
outs
outs
inc
adc
inc
cwde
int
push
aam
in
adc
mov
stos
xchg
cli
cmp
cmp
push
jg
and
push
sar
push
pop
leave
inc
test
movs
adc
adc
(bad)
and
loopne
mov
loopne
xchg
inc
or
bound
popf
pop
ds
xchg
ds
pop
in
adc
push
cmp
push
ins
ins
(bad)
fst
inc
ret
imul
imul
pop
sbb
mov
int3
test
push
sub
shl
pushf
(bad)
cmp
std
inc
add
sbb
data16
and
out
movs
pop
fwait
push
leave
ja
(bad)
cmp
dec
fcmovne
repz
retf
sub
fimul
in
movs
mov
sbb
(bad)
loop
fwait
nop
mov
sbb
pop
(bad)
push
stc
dec
or
and
repz
pop
xor
imul
pusha
in
inc
sbb
pop
jb
adc
push
sbb
add
pop
sbb
dec
imul
pop
sbb
in
arpl
es
pop
ffree
jle
repnz
imul
pop
adc
ja
loop
lock
xchg
mov
sbb
sub
repnz
push
pushf
sbb
xchg
retf
les
rol
push
or
mov
adc
fadd
sub
dec
mov
dec
pop
push
(bad)
ficom
lea
repnz
dec
arpl
ds
sub
push
push
(bad)
or
push
cs
xor
sbb
or
mov
add
movs
cmp
ja
mov
adc
sbb
and
cmp
imul
xor
sbb
inc
push
sub
mov
pop
ins
jne
in
pop
(bad)
in
icebp
mov
mov
cdq
sub
test
mov
or
push
add
fisttp
push
sbb
popf
mov
rol
ret
jb
ins
xchg
shl
loop
cld
adc
(bad)
xchg
arpl
mov
push
dec
mov
jmp
sbb
push
jnp
clc
in
daa
dec
fdiv
out
mov
xchg
shl
adc
sub
das
push
retf
or
dec
mov
pop
push
inc
dec
aaa
push
(bad)
neg
mov
(bad)
or
out
and
ror
jp
add
call
call
pushf
aad
test
jmp
inc
xlat
jb
and
arpl
ss
add
aas
add
dec
push
push
inc
xlat
stos
xor
push
push
lock
hlt
mov
pop
cmp
pop
les
or
lods
add
(bad)
pop
(bad)
jg
repz
stc
dec
xchg
ja
jno
cmc
ret
push
xchg
cmp
frstor
xor
ds
pop
cmp
icebp
test
out
inc
pop
or
dec
and
mov
xchg
mov
jne
push
cmps
jge
push
pusha
inc
(bad)
call
scas
or
mov
in
mov
cmp
les
mov
mov
sbb
mov
mov
inc
test
inc
aad
mov
jnp
inc
fstp
inc
rcr
aas
mov
shl
jo
mov
adc
fistp
loop
out
cdq
fucomi
push
inc
and
pop
les
jmp
mov
iret
jecxz
dec
out
jmp
mov
sbb
femms
mov
xor
rcr
iret
ret
mov
aaa
jo
sub
inc
mov
or
sti
and
push
test
les
ss
imul
sbb
push
scas
and
js
stos
lock
sbb
jecxz
inc
or
xor
(bad)
outs
(bad)
das
cmp
or
adc
mov
in
mov
outs
ja
out
pop
mov
popa
add
gs
mov
fwait
jg
arpl
mov
mov
ins
mov
xor
add
mov
mov
jne
mov
(bad)
push
pop
pop
sbb
adc
lea
out
adc
es
cmovne
loop
sub
add
cmp
ins
ds
repnz
int
inc
ja
and
pop
ins
mov
dec
dec
punpckldq
pop
dec
xlat
lahf
dec
dec
xor
jns
lods
lea
out
mov
or
stos
cmp
dec
test
mov
dec
data16
(bad)
mov
push
sub
add
dec
and
push
bound
mov
jo
pop
or
jl
adc
xchg
lods
ficomp
mov
or
sub
dec
jmp
jg
test
mov
inc
cmps
push
das
test
or
push
cld
or
sub
retf
test
data16
cmp
cmp
adc
ret
push
aad
and
ins
mov
xlat
inc
inc
xchg
mov
outs
push
ss
push
fsub
mov
call
mov
stos
pop
cdq
shl
adc
push
jge
mov
xchg
out
mov
mov
test
xor
dec
sub
jg
push
aam
mov
ds
test
cmp
loopne
imul
pop
mov
mov
cdq
arpl
xor
jl
push
rol
jmp
xor
popf
cld
stos
into
or
(bad)
or
xchg
sbb
sub
sar
in
stos
out
les
aad
div
repnz
data16
pop
gs
pop
adc
outs
or
popa
stos
retf
mov
add
call
aas
pop
enter
pop
jle
add
fmul
stos
popf
enter
cs
cmp
jae
into
hlt
dec
fisttp
sub
fldenv
mov
pop
stos
cmp
pushw
adc
sbb
shl
enter
add
inc
pop
out
iret
(bad)
pop
sub
pushf
iret
cld
loopne
popf
jns
sub
aaa
xchg
pop
push
ret
pop
lods
pusha
scas
sbb
add
push
sub
inc
push
movs
dec
das
(bad)
cld
out
adc
mov
pop
test
enter
movs
pop
dec
or
ins
mov
scas
pop
call
adc
hlt
pop
cld
dec
cmp
push
and
pushf
xchg
(bad)
mov
rol
dec
inc
sbb
jmp
(bad)
mov
sti
cmc
sub
fiadd
dec
inc
sti
or
ins
adc
jmp
imul
aaa
dec
dec
arpl
inc
daa
pop
mov
add
mov
and
sub
pop
mov
mov
jl
xor
and
inc
adc
mov
inc
je
clc
push
inc
icebp
and
sub
push
or
scas
stos
mov
mov
dec
addr16
aas
dec
lods
stos
retf
(bad)
call
mov
jne
or
mov
int
ret
dec
xor
dec
fsubr
imul
dec
rol
jp
and
push
cwde
sbb
cmp
mov
mov
(bad)
cli
mov
shl
mov
and
push
mov
mov
and
mov
jecxz
pop
cli
push
inc
sbb
jnp
fnstcw
leave
aam
inc
rcl
(bad)
and
push
call
mov
retf
shl
or
arpl
jl
xchg
stos
xchg
sub
mov
retf
cld
xor
jne
jae
sbb
pushf
inc
xor
xchg
dec
inc
in
dec
mov
and
out
dec
pop
mov
jns
xchg
cmp
gs
shl
(bad)
ds
enter
xchg
dec
cs
fwait
(bad)
aad
dec
shr
pop
cmp
pop
dec
ss
ja
ja
mov
and
adc
out
scas
add
mov
repz
aam
push
ins
imul
inc
std
mov
int3
mov
aaa
int3
mov
loopne
fistp
dec
xchg
das
inc
adc
loop
movs
idiv
ret
jl
dec
pop
pop
loope
adc
push
test
div
sub
enter
fcom
movs
cld
or
mov
pop
and
xor
into
pop
cmp
push
push
xchg
mov
xchg
pop
stos
cmc
cmp
mov
mov
fsub
xor
repz
aam
mov
mov
fprem1
cmp
or
test
sub
xchg
jl
inc
fnsave
cmp
xor
loop
push
mov
or
and
stos
mov
das
xor
jge
mov
dec
sub
add
adc
xchg
aas
enter
push
push
push
pop
or
dec
call
jmp
bound
mov
push
cmp
ins
adc
loopne
dec
lea
std
pop
test
push
pusha
out
or
mov
int
xchg
xor
jbe
xor
fistp
(bad)
dec
pop
jg
mov
sub
add
in
pop
retf
mov
pop
or
popf
ins
xor
sub
fnsetpm(287
scas
and
xor
std
mov
inc
call
arpl
sbb
dec
punpcklwd
inc
loopne
imul
shl
call
jns
ins
pusha
int3
std
out
xor
pop
inc
jbe
sub
popf
xchg
jns
inc
dec
stos
mov
jb
fwait
xchg
mov
les
sub
sbb
mov
xchg
aam
arpl
cmc
lahf
sub
fst
xchg
ja
ds
cs
int
mov
push
out
adc
add
jmp
xchg
adc
cs
push
sub
mov
enter
pop
sub
jmp
xchg
stos
adc
add
fsubr
iret
cli
fisttp
mov
lds
aad
int
push
cli
sti
mov
mov
js
fistp
stc
xchg
lds
int
cli
shl
es
fisub
ins
push
inc
(bad)
jg
mov
xor
dec
bound
xchg
iret
test
pop
hlt
sub
(bad)
sub
fdivr
fwait
push
cld
neg
ins
shl
add
call
or
mov
adc
jb
into
fwait
bound
push
or
or
in
fimul
aas
pop
fcom
xchg
sbb
es
ins
push
mov
xor
cwde
pop
adc
pop
add
jmp
aas
dec
and
xchg
mov
sti
sbb
xor
or
mov
push
pop
jmp
push
push
xchg
je
out
in
adc
or
mov
scas
and
cmp
adc
or
retf
sub
outs
and
data16
push
imul
outs
or
jge
rcl
or
inc
fs
lahf
jecxz
dec
xchg
retf
rcr
cmp
call
ds
pop
dec
fldenv
sbb
sbb
fisubr
gs
cmp
aam
push
daa
adc
je
jmp
popa
sbb
adc
or
dec
int3
sahf
push
cmp
in
push
fdivr
retf
xor
push
xchg
cmps
idiv
vcvttps2dq
adc
xchg
inc
xor
retf
fdivr
add
lods
not
add
mov
repz
lahf
inc
idiv
push
lahf
sub
in
inc
pop
rcr
scas
inc
add
mov
jmp
les
dec
push
inc
loope
lds
cmp
cmps
jl
pop
mul
scas
or
push
push
idiv
add
les
cmp
mov
dec
mov
jno
leave
fidiv
stos
retf
push
(bad)
adc
xor
imul
or
loopne
(bad)
jb
sub
inc
ja
jae
pop
add
arpl
cmp
fstp
xchg
sub
fcom
mov
daa
retf
and
movs
cmc
push
sti
fwait
xchg
xchg
imul
push
bound
movs
add
ffree
lods
nop
xor
mov
movs
dec
lahf
aad
test
lea
in
mov
pop
in
call
sub
icebp
scas
pop
ins
daa
(bad)
or
jb
movs
inc
je
invd
fidiv
js
dec
psubsb
test
jmp
lods
and
(bad)
fcmove
cmp
dec
cmp
shl
(bad)
cmp
in
add
ja
inc
mov
sbb
(bad)
sub
fistp
retf
addr16
sti
out
cmp
inc
push
pop
hlt
xor
mov
sub
pushf
xchg
leave
es
ror
dec
fild
jb
cmp
push
mov
enter
or
data16
mov
retf
scas
mov
or
cmp
cmp
pop
and
push
inc
or
jecxz
imul
inc
xchg
jp
sbb
sbb
jmp
je
or
inc
push
arpl
cmc
inc
push
mov
shl
in
je
adc
lock
xchg
xor
retf
cmp
xchg
inc
adc
mov
push
call
iret
mov
push
repz
xchg
fstp
mov
out
iret
mov
cmc
jb
sbb
test
and
clc
jnp
test
add
ins
addr16
and
int3
xchg
mov
arpl
inc
clc
bound
push
mov
in
adc
mov
sbb
adc
mov
in
push
mov
inc
mov
imul
fisubr
out
xchg
shl
dec
jg
cmc
cli
addr16
dec
ret
ror
int3
stos
aam
and
dec
adc
inc
gs
cmp
push
mov
stos
sub
pop
mov
and
retf
push
xchg
imul
sub
pop
mov
iret
add
mov
xlat
and
cld
or
add
xor
sbb
sar
cmp
lods
dec
loop
jmp
in
scas
xchg
inc
imul
jns
mov
sub
sbb
mov
out
xor
jge
jns
in
xlat
pop
sub
push
lock
mov
ror
daa
and
neg
inc
pop
and
sahf
icebp
mov
xchg
das
pop
rcl
pop
rcl
and
mov
ficom
out
in
pop
test
mov
aas
mov
scas
push
lahf
sub
adc
add
adc
xchg
(bad)
cli
test
movs
popf
cmp
mov
jbe
pushf
arpl
dec
mov
mov
adc
call
inc
pusha
xchg
mov
call
or
adc
ret
or
mov
push
call
jbe
aad
jl
adc
jmp
into
xor
retf
pop
sar
test
jns
ret
outs
mov
mov
cdq
mov
shl
test
sub
jnp
cmp
int3
adc
fstp
(bad)
pop
retf
pop
stc
push
aaa
out
sub
fisttp
xlat
arpl
dec
xor
dec
cmp
in
sub
ret
stc
retf
adc
(bad)
cmp
pop
jmp
sub
jne
int
jno
pop
in
int
push
jl
sbb
xchg
mov
jns
mov
pop
cmc
xchg
push
inc
sti
mov
jne
mov
in
sub
jecxz
icebp
mov
lods
fadd
lock
cmp
lds
xchg
addr16
(bad)
js
ins
dec
jge
mov
cs
or
jne
cmp
cdq
jge
dec
pop
(bad)
(bad)
push
push
sub
fdivr
mov
jle
cwde
mul
addr16
jl
mov
push
cwde
push
sbb
sub
int3
mov
adc
pusha
cmp
lea
jge
(bad)
mov
stc
fstp
fwait
add
(bad)
dec
dec
enter
imul
mov
movs
int3
das
add
aad
rol
mov
xorps
push
or
(bad)
mov
sub
xor
pop
call
cmc
mov
das
mov
mov
mov
fwait
repz
jne
mov
mov
std
in
call
mov
ss
inc
mov
add
test
dec
icebp
sub
sbb
and
cmps
test
int3
repnz
and
mov
push
or
ja
mov
mov
inc
push
mov
jbe
add
mov
jnp
xor
or
stc
das
nop
sub
not
adc
sub
movs
outs
push
cmp
call
shl
adc
cmc
and
jbe
test
fwait
ds
scas
sub
xlat
xchg
push
ins
cmp
mov
or
maskmovq
and
add
xchg
loop
push
jnp
imul
sbb
popf
shl
cmps
inc
jo
pop
bound
into
pop
pushf
xchg
mov
mov
sbb
aam
sub
test
or
cmpxchg
fdivr
out
push
lods
xor
cmp
das
sub
jbe
mov
adc
mov
sub
int
mov
out
mov
lds
stc
aaa
xchg
pop
jl
enter
or
fcom
mov
ja
inc
or
in
xchg
outs
mov
push
cmps
vrcpss
ret
pop
push
sbb
push
dec
fwait
mov
in
mov
scas
pop
push
mov
clc
out
ret
pop
jo
mov
pushf
aad
call
or
rol
and
cs
inc
push
test
push
inc
sbb
cld
cmp
js
out
dec
jle
lock
push
or
push
lds
ficomp
pop
into
mov
and
xor
lock
inc
xor
(bad)
retf
xchg
push
xchg
lea
xchg
dec
lods
mov
fnstcw
mov
aad
test
cmps
xchg
and
mov
xchg
popf
cmp
and
test
cld
imul
movs
or
push
fdiv
sbb
js
retf
or
sbb
leave
loop
push
xlat
(bad)
in
cmps
and
adc
inc
jne
gs
das
jb
call
fwait
mov
xchg
nop
pand
pushf
xor
jno
xor
nop
nop
not
or
sbb
or
arpl
int3
pop
pop
or
mov
sub
mov
push
test
call
sbb
repnz
xor
jnp
outs
xchg
rcl
sti
mov
push
sub
pop
or
cmp
pop
sbb
xchg
mov
mov
xchg
cmp
jg
and
inc
das
loop
pushf
fst
ja
jns
in
cmp
xchg
xchg
jb
dec
jl
adc
mov
sahf
cs
sbb
ja
popa
mov
ds
mov
into
sbb
pusha
mov
jb
cmps
shr
pop
jae
fisubr
xchg
mov
lahf
pop
xchg
loope
movs
in
idiv
xchg
xchg
bound
sub
sub
imul
jmp
cs
push
jmp
int3
div
jnp
shl
fstp
int3
outs
mov
dec
mov
jp
mov
mov
pop
movs
es
(bad)
pusha
je
jg
fadd
add
pushf
cli
mov
ins
cmp
or
mov
mov
and
cli
cmp
mov
push
pop
out
and
scas
imul
call
mov
sub
mov
call
pop
(bad)
leave
mov
imul
test
sbb
lock
jmp
imul
cmp
pusha
pop
leave
out
jmp
fcmovne
push
fbld
push
xor
xchg
sbb
pop
fadd
dec
fisubr
dec
xor
pop
cwde
dec
aas
mov
sub
and
sub
pop
icebp
xchg
dec
stos
ja
mov
(bad)
adc
mov
sti
in
icebp
(bad)
out
and
push
(bad)
fldcw
jle
daa
cmps
mov
fadd
sub
arpl
jb
je
mov
and
xor
push
mov
push
call
scas
outs
mov
aas
or
jp
cmps
fdivr
add
outs
pop
arpl
loop
push
icebp
xchg
pusha
fwait
mov
retf
xor
sbb
popf
test
imul
int
jl
cmp
(bad)
cs
gs
jl
jns
or
cmp
xchg
inc
adc
mov
push
sub
dec
xor
(bad)
imul
add
jb
add
xchg
retf
sbb
outs
cmp
dec
pop
or
push
mov
in
outs
or
dec
push
mov
xchg
xor
jbe
icebp
clc
cmp
xor
jl
ja
xchg
push
int3
fs
retf
test
mov
mov
and
sub
std
cmc
xchg
jle
pop
pop
test
loop
xor
(bad)
sbb
xor
pop
mov
push
out
and
popa
cwde
pop
cwde
lock
jnp
push
sbb
mov
aam
popa
scas
fs
pop
(bad)
or
sbb
mov
sbb
in
xor
lds
mov
aam
add
nop
adc
repz
push
scas
push
(bad)
cmp
mov
sar
jne
(bad)
pop
retf
sbb
jae
xchg
pop
imul
adc
and
addr16
aaa
mov
or
push
or
ja
inc
dec
ins
pop
in
pop
fst
mov
pop
mov
jp
xchg
sti
xor
cmovp
fnstenvw
cmp
cmc
rcl
push
rcl
push
pusha
dec
dec
mov
jmp
ficomp
iret
xchg
inc
popf
vpsrlw
push
outs
inc
mov
add
pop
jmp
addr16
jmp
(bad)
adc
das
mov
movs
xor
mov
ss
fimul
cld
push
jmp
push
cs
sahf
mov
dec
bound
xor
fiadd
pop
stc
pop
mov
push
mov
push
pop
movs
js
in
inc
adc
fs
rcr
aad
test
push
inc
aad
les
push
bnd
pop
outs
push
add
jo
outs
mov
xchg
jbe
pusha
adc
pop
jns
xor
in
adc
enter
inc
(bad)
cli
mov
push
push
cli
lods
pop
clc
xchg
add
adc
pop
jge
(bad)
out
pop
(bad)
(bad)
sbb
mov
arpl
ror
xor
push
fs
xlat
scas
jle
mov
rcl
push
dec
ret
push
cmp
push
enter
pusha
repnz
mov
mov
out
mov
mov
outs
dec
fisttp
and
lock
loope
mov
or
cmp
mov
sti
jecxz
adc
(bad)
iret
push
pop
push
rcr
jecxz
sbb
inc
std
mov
ins
pop
jmp
cmps
sub
and
xchg
push
movs
jb
or
fstp
pop
nop
fidiv
sub
loope
jmp
clc
pusha
and
js
jge
imul
sub
das
jp
loopne
add
test
inc
jne
arpl
sti
lea
push
pop
xchg
arpl
test
loopne
popf
shr
jmp
lahf
outs
xor
pop
mov
lds
into
adc
out
hlt
repnz
or
retf
jne
ins
mov
leave
push
shl
iret
das
pop
scas
cmp
(bad)
pop
sub
out
(bad)
jno
or
xchg
jmp
fwait
add
mov
je
movs
scas
dec
(bad)
cmp
inc
cs
push
add
out
jmp
dec
in
pop
inc
mov
adc
int
mov
pop
mov
mov
nop
jmp
fs
aaa
cld
cmp
add
test
jnp
sub
sahf
sti
stos
(bad)
mov
or
bound
sbb
ja
xor
cmps
ja
fcom
pop
pushf
loopne
mov
bound
mov
jnp
or
stos
ds
sbb
mov
fld
inc
loope
add
lea
arpl
in
rcr
jge
xor
loopne
retf
ret
nop
push
aas
loopne
dec
adc
jns
out
jnp
dec
ins
push
sbb
shl
sbb
xor
jae
ja
push
(bad)
mov
outs
lods
push
shl
jo
add
fadd
ins
inc
lea
sahf
pop
push
xor
lods
rcr
inc
cmp
push
in
xor
ins
adc
dec
dec
cwde
pop
test
fcmovu
ds
sub
in
sti
mov
retf
pop
movs
jmp
push
dec
xchg
mov
xchg
push
addr16
jne
aam
mov
mov
cmp
outs
into
push
rcr
push
imul
ja
cld
mov
scas
pop
cld
push
cwde
cmp
(bad)
sbb
and
pop
sbb
out
hlt
ins
sub
adc
sbb
pushf
push
in
push
cs
inc
fst
push
adc
out
xchg
sbb
pop
dec
ins
in
mov
push
sti
(bad)
xchg
daa
in
push
imul
pop
pop
mov
cmp
aam
push
ja
sbb
xchg
lods
ja
retf
js
cmp
jb
sub
pop
ret
adc
push
neg
test
xor
(bad)
cwde
add
push
icebp
push
sbb
pop
jg
adc
arpl
sbb
push
lods
fwait
jbe
add
push
push
call
out
push
push
fmul
call
pop
fstp
imul
xor
xor
jno
cwde
mov
jp
outs
ja
cmp
int
iret
push
lods
rcl
movs
xchg
(bad)
pop
jno
mov
adc
sbb
scas
in
push
mov
loopne
xchg
scas
push
push
in
inc
cld
jg
scas
push
xchg
(bad)
sub
(bad)
adc
sbb
cwde
mov
mov
lock
push
fisub
es
aaa
xchg
sub
clc
dec
and
pop
cmp
pop
pop
and
mov
pop
(bad)
cs
push
adc
(bad)
mov
inc
mov
ficomp
jl
sar
mov
pop
xchg
ficomp
shl
in
ins
xchg
mov
sbb
dec
in
out
xchg
ins
mov
lock
adc
push
mov
(bad)
and
ins
lods
sbb
fwait
outs
sbb
fwait
add
ins
pusha
push
jmp
or
arpl
pop
adc
clc
cwde
adc
mov
push
imul
or
rcr
jge
dec
mov
stos
mov
push
push
cmps
leave
(bad)
sahf
push
mov
std
test
pop
je
movs
jae
dec
pop
movs
sub
sbb
sub
xor
call
sbb
test
mov
dec
push
sub
fmul
jp
xor
sbb
aas
lods
sub
retf
lahf
push
mov
push
cmc
out
nop
xchg
movs
xor
cmp
or
mov
xor
sbb
scas
pop
xchg
adc
add
pop
cmps
push
mov
mov
imul
(bad)
mov
pop
nop
popa
inc
or
mov
mov
rcl
in
or
rcr
cmp
ret
inc
mov
xor
cmps
fist
pop
fs
retf
dec
push
pop
mov
fdiv
and
or
fwait
xchg
popf
(bad)
dec
sub
fmul
imul
ret
pop
mov
test
inc
push
scas
xor
or
mov
pop
mov
mov
push
stos
loop
jnp
and
in
cmp
mov
bound
add
inc
xor
or
cmp
and
in
or
jge
push
js
cmps
jp
mov
xor
mov
fsub
bound
xor
shl
sub
sbb
shr
test
call
and
sub
les
inc
inc
push
add
inc
outs
das
rol
cmc
push
sbb
fimul
fstp
stos
out
cld
cmp
xchg
gs
mov
popf
ja
mov
stos
push
aam
jle
push
test
test
xor
push
inc
pop
sub
sub
cld
jge
repz
mov
repnz
xor
ror
push
push
ret
fs
jne
pop
call
dec
fmul
jg
mov
and
or
pop
cmps
xor
daa
mov
cmp
xchg
adc
lods
push
inc
arpl
xchg
je
mov
lds
or
fild
out
fsub
xor
clc
jnp
cmp
getsec
jbe
cmp
dec
mov
jns
inc
loopne
call
imul
jl
int3
mov
cmc
das
das
ins
hlt
pop
pushf
push
gs
jl
sbb
dec
jge
sub
xlat
fsubrp
sub
mov
mov
test
xchg
xor
inc
add
mov
les
mov
jo
mov
das
sbb
in
cmps
xor
and
dec
cli
mov
clc
mov
and
or
retf
add
and
jbe
pop
mov
mov
lock
inc
and
fwait
inc
mov
ja
lods
in
ret
mov
dec
cmp
imul
jecxz
or
jl
jmp
sub
adc
jmp
mov
cmp
inc
xchg
mov
loopne
mov
push
jnp
add
xor
mov
ds
mov
adc
pushf
pop
enter
cmp
pop
and
loope
sti
(bad)
lahf
mov
add
scas
lods
into
dec
inc
jne
(bad)
xor
out
neg
dec
pushf
inc
clc
xor
mov
dec
pop
pop
push
xor
inc
iret
mov
in
leave
or
mov
jbe
mov
stos
xor
xchg
jle
xor
push
sbb
cmps
xor
imul
jnp
pop
pop
mov
push
ficom
jecxz
mov
jmp
in
dec
inc
ins
mov
cmp
jecxz
out
and
jmp
mov
lds
dec
fist
inc
add
dec
retf
add
fnstsw
cwde
and
mov
mov
stc
call
je
and
pushaw
loop
imul
dec
cld
sub
push
push
push
jb
sub
sbb
mov
in
add
add
pop
push
ret
pop
outs
or
fisttp
sub
push
sbb
cmp
inc
out
imul
sub
daa
mov
mov
push
mov
pop
cmp
fsubr
lods
sbb
cli
dec
fdivr
outs
mov
sbb
scas
adc
fwait
lds
bound
outs
scas
sbb
inc
xor
sub
das
lods
retf
mov
sti
mov
aam
or
aam
lock
fdiv
fisubr
sbb
in
jge
cmp
ja
jbe
mov
pusha
pop
mov
sbb
adc
mov
mov
inc
pushf
add
pop
push
xchg
mov
or
cmp
cmps
pop
fs
(bad)
dec
cli
pop
inc
xor
jnp
and
adc
pop
adc
sti
nop
inc
and
inc
popa
mov
sti
mov
test
loope
std
ins
cmp
push
ror
add
aaa
fimul
std
fisubr
dec
dec
outs
cmps
(bad)
leave
inc
xor
(bad)
sbb
mov
test
push
mov
out
aas
adc
pop
push
hlt
mov
outs
nop
test
add
pop
and
movs
call
and
cmps
imul
(bad)
scas
test
in
sbb
aaa
fnstcw
(bad)
stos
cs
(bad)
adc
scas
jne
adc
mov
mov
xor
pop
out
(bad)
out
dec
das
and
movs
xchg
mov
test
adc
in
fdiv
ror
fabs
fsub
mov
movs
push
in
outs
mov
pop
mov
xchg
dec
inc
test
aam
mov
(bad)
aas
movs
mov
fidivr
(bad)
jge
iret
mov
les
xchg
jg
out
in
fld
stc
jae
mov
addr16
loopne
jbe
jg
shl
stc
pusha
aas
xchg
xchg
aad
inc
pop
add
or
nop
dec
rcr
mov
push
sub
aam
xor
ds
dec
gs
out
dec
add
sbb
mov
nop
ds
push
sub
sub
inc
ins
cmp
add
out
sub
inc
mov
jb
dec
pop
sbb
jmp
cmp
xor
or
cwde
pop
fwait
inc
mov
sbb
arpl
imul
xchg
pop
loope
ror
(bad)
aas
xor
add
mov
jno
cmc
sub
pop
add
pushf
call
ret
xor
cmp
pop
pop
dec
mov
mov
pop
das
inc
cmp
cmps
sbb
mov
xchg
xchg
out
jle
cmp
pop
xchg
repnz
pop
movs
ret
xor
dec
pusha
stos
sbb
out
icebp
in
(bad)
push
and
dec
out
ror
clc
and
in
pop
push
cmps
xor
call
or
dec
cdq
mov
push
in
dec
imul
sahf
pop
ss
mov
pushf
xchg
movs
repnz
es
mov
pushf
shl
ins
nop
push
sbb
enter
neg
jle
cld
push
lods
int3
std
jo
xchg
and
push
sub
xchg
sub
mov
dec
(bad)
stc
dec
je
hlt
enter
test
popa
es
sar
(bad)
fcmovu
mov
adc
cmp
pop
sbb
add
jge
dec
xchg
std
inc
jmp
sbb
fisttp
add
(bad)
dec
arpl
push
xchg
sbb
add
rcl
stos
add
jno
ds
push
add
dec
aaa
icebp
leave
xor
stos
pushf
jmp
mov
out
xor
mov
pop
aam
cmps
dec
nop
or
outs
pop
jno
sbb
jmp
cmp
xchg
lods
pop
xor
outs
cmps
adc
pop
xchg
retf
mov
rcr
stos
and
mov
rol
sub
sar
test
test
cwde
mov
sbb
push
punpcklwd
(bad)
fcom
cmp
inc
clc
iret
stos
mov
mov
dec
jne
pop
pop
xchg
and
cmps
sub
mov
add
xor
push
push
sbb
arpl
mov
or
pop
dec
or
cmp
mov
mov
leave
cmps
(bad)
fistp
ss
xor
dec
cdq
mov
(bad)
test
xor
add
adc
mov
repz
(bad)
pop
test
dec
lahf
and
sbb
pop
jno
sbb
jle
pop
and
fst
push
mov
pop
pop
xor
push
iret
fcmovne
xor
mov
out
cmp
dec
popa
lds
xchg
pop
jne
jno
ficom
add
mov
and
stos
lds
mov
sar
test
sub
bound
cdq
cmp
jbe
ins
leave
push
adc
mov
cmps
aas
mov
xor
mov
push
push
fadd
setno
inc
ins
xchg
addr16
loopne
push
push
sub
cs
pop
jl
aad
sub
mov
scas
cmps
pop
inc
outs
pop
cmp
sbb
in
gs
xchg
iret
pop
mov
(bad)
cmp
enter
xchg
adc
sar
mov
cdq
loopne
ins
xor
jl
cmps
jbe
add
or
bound
(bad)
mov
sub
add
rcr
pushf
inc
push
push
pop
arpl
inc
das
mov
clc
fst
adc
mov
outs
rcr
cmp
in
cmp
fmulp
(bad)
xor
nop
bound
or
(bad)
fisttp
adc
fst
scas
daa
outs
and
mov
pop
dec
add
or
stos
add
mov
add
adc
pop
dec
push
inc
rcl
(bad)
mov
xor
ffree
dec
cmps
inc
icebp
ins
ins
lods
data16
test
mov
adc
outs
mov
les
jl
fs
(bad)
pop
mov
stos
ret
mov
pushf
jmp
mov
push
icebp
ins
retf
movs
mov
das
pop
retf
out
or
(bad)
shl
adc
in
repnz
jmp
sub
test
cmp
inc
jge
in
pop
fwait
inc
cmp
popf
push
mov
mov
adc
leave
retf
dec
cmp
jl
pushf
add
push
xchg
scas
movs
stos
lahf
adc
sub
es
arpl
or
jl
push
pop
cmp
dec
sbb
outs
lods
fmul
push
mov
add
xchg
cmp
inc
vpmacssdqh
stos
pusha
or
cmp
and
into
pop
call
repnz
data16
dec
and
shr
outs
mov
pushf
push
mov
call
enter
pop
clc
jle
dec
loop
mov
adc
cmc
pop
dec
cmp
lea
inc
xchg
mov
add
les
cmp
and
and
xor
sbb
enter
push
sbb
inc
mov
les
das
gs
mov
fild
sub
data16
and
outs
sub
les
lods
push
test
repnz
pop
imul
fdiv
pop
xchg
xchg
jg
sub
mov
adc
jno
in
imul
(bad)
std
imul
scas
sub
in
shl
imul
idiv
inc
xor
ds
js
xchg
mov
cwde
shr
sahf
cmc
inc
inc
test
dec
jns
jp
inc
pop
(bad)
pop
ret
xor
(bad)
out
add
fldcw
inc
ins
xor
test
cdq
pop
mov
inc
add
cdq
jo
(bad)
ror
push
dec
xor
jp
call
aaa
sub
or
lds
cmp
adc
dec
xor
in
mov
inc
aam
or
rol
xchg
jmp
jl
cld
leave
adc
aam
ret
sub
push
mov
pop
mov
int3
mov
add
or
xor
jo
data16
mov
cmps
js
js
or
pop
xchg
inc
popf
sub
jge
dec
push
ds
jnp
movs
push
xchg
xor
sub
fisubr
aas
fisttp
cs
push
push
es
test
and
inc
lea
sbb
dec
inc
ret
sbb
mov
cs
sbb
(bad)
push
xchg
mov
fistp
rol
hlt
inc
lds
mov
leave
lds
sbb
movs
jb
sbb
div
xchg
inc
lods
sbb
mov
imul
in
or
das
jns
test
pusha
fmul
jle
inc
rol
inc
lds
sbb
sar
popa
lods
sbb
dec
xchg
jne
mov
test
cld
mov
out
cmp
pop
mov
ins
in
lds
mov
xchg
scas
ins
sbb
add
out
sub
data16
call
test
dec
mov
pop
xlat
dec
rcl
xchg
int
addr16
ins
sbb
pop
fmul
inc
adc
mov
test
adc
jbe
mov
out
sbb
xchg
push
jmp
inc
cmp
mov
adc
or
ror
arpl
(bad)
mov
aaa
or
(bad)
jge
bswap
test
movs
popf
cwde
mov
xchg
leave
daa
rep
fwait
mov
fisubr
fs
mov
mov
inc
cdq
imul
lahf
test
pop
xchg
ins
imul
mov
jecxz
rol
dec
out
dec
ins
aam
fstp
dec
mov
jo
std
cmp
jmp
sbb
inc
or
stos
xchg
push
jno
imul
mov
stos
cmc
jnp
and
repnz
sbb
cmp
sbb
clc
aad
inc
mov
fcmovbe
sar
jo
stos
ret
data16
push
push
enter
xchg
(bad)
cs
xchg
lods
jmp
cmp
or
cmp
mov
clc
mov
popa
dec
sahf
enter
das
call
xlat
mov
adc
arpl
add
cld
xchg
pop
enter
(bad)
ror
push
mov
imul
push
pop
movs
xchg
xchg
pop
jl
(bad)
mov
sar
sub
stos
or
jo
sub
out
lods
dec
mov
xor
adc
pop
pop
and
xchg
sub
mov
sti
aas
sbb
daa
xlat
retf
ins
adc
sbb
pop
bound
scas
mov
imul
das
xchg
sbb
cmp
(bad)
pop
ss
push
fisttp
or
xchg
mov
adc
jb
shl
arpl
xchg
jb
jmp
leave
imul
jecxz
sbb
xchg
fnstcw
stos
cmp
mov
push
vprotq
add
cwde
std
add
sub
push
call
fist
(bad)
push
jg
push
push
pop
jnp
imul
outs
lock
call
cs
bound
ss
test
jae
sbb
(bad)
ret
jl
pop
aaa
jp
shr
clc
xor
and
pop
cmp
call
mov
inc
sbb
or
dec
mov
imul
in
fistp
daa
pop
fisubr
lods
mov
stos
outs
(bad)
lahf
mov
and
jmp
imul
icebp
push
movs
push
aas
mov
jmp
pop
aas
cmps
mov
daa
adc
adc
mov
pop
neg
sar
inc
mov
popa
xor
sub
popf
arpl
aaa
mov
jmp
addps
daa
test
pop
push
dec
lods
inc
xchg
gs
xor
mov
inc
cmp
inc
push
xor
mov
(bad)
out
inc
test
xchg
outs
xor
cdq
loopne
sbb
pop
je
int3
mov
inc
sbb
cmc
or
mov
inc
sbb
cmc
adc
test
lahf
pop
jp
dec
sub
lods
sub
xchg
(bad)
js
lock
push
aad
aas
pop
test
add
into
repnz
ret
xor
adc
push
test
add
pop
or
jge
bound
daa
jne
xor
adc
sbb
cld
or
lds
add
gs
jae
clc
lock
imul
mov
xchg
dec
call
cmps
add
ins
imul
fld
imul
sti
aad
adc
push
and
mov
mov
sbb
(bad)
pusha
cmp
or
jnp
dec
jbe
stos
pop
xchg
or
adc
je
and
cmp
ror
in
sbb
cmp
xor
retf
fidiv
or
xchg
stos
fst
mov
mov
inc
shl
out
(bad)
lock
adc
jge
mov
je
push
call
dec
mov
xchg
loope
xchg
push
pusha
xor
sbb
cmp
add
cli
out
jb
rcr
mov
or
fnsave
loopne
jmp
test
aad
loop
repz
pop
ror
pushf
add
jl
lods
out
aas
stos
lds
xor
popf
fwait
jle
jge
cmps
mov
movs
in
mov
mov
xor
jbe
cmp
lar
sub
pop
retf
outs
push
jmp
jmp
int3
in
fsub
ins
xchg
mov
retf
push
sub
ss
dec
mov
inc
(bad)
xor
(bad)
(bad)
sbb
mov
in
pop
xchg
sbb
aaa
sub
out
xor
loop
es
lds
mov
mov
jge
enter
repnz
mov
push
es
inc
mov
in
and
outs
and
in
out
mov
es
je
jmp
aam
mov
retf
aad
xchg
sub
xor
mov
sub
fwait
(bad)
pop
js
push
add
outs
iret
enter
inc
cmp
scas
xchg
stos
mov
jl
cmp
jl
hlt
mov
(bad)
xor
or
cdq
aad
push
mov
xchg
out
popa
jl
movs
ret
sbb
je
retf
aam
call
aad
pusha
(bad)
fadd
mov
sub
add
mov
adc
dec
push
test
pusha
fcmovne
push
cmps
pop
add
repz
jae
or
jg
push
out
jp
aam
adc
push
and
js
bound
inc
rcl
fmul
int3
ror
jmp
lods
inc
dec
pop
cmc
xchg
adc
and
ins
cmp
mov
(bad)
jo
sbb
rol
xchg
aaa
sub
daa
mov
mov
pop
(bad)
(bad)
out
inc
outs
adc
pop
fisttp
cmc
mov
stos
cld
xchg
mov
adc
cmp
and
js
pop
jl
aas
or
aad
sbb
push
cmp
aaa
inc
retf
ss
repz
xor
sub
scas
add
xor
cld
test
ficomp
jmp
pop
nop
loopne
dec
mov
or
inc
(bad)
xchg
les
loopne
jmp
mov
cmp
enter
adc
scas
push
sti
inc
fst
jbe
sbb
fcmove
or
pop
ret
dec
mov
cld
adc
push
imul
fucomip
fnstcw
inc
xchg
imul
inc
in
mov
shr
jbe
popa
(bad)
sbb
stc
push
jp
mov
stos
leave
es
(bad)
ja
aad
cmp
lods
test
lock
mov
ins
xchg
retf
cwde
rol
xchg
adc
shl
jl
loopne
stos
sbb
push
xor
inc
in
pushf
xor
xlat
test
or
(bad)
cdq
call
(bad)
sti
sub
test
jle
xchg
cmp
dec
adc
call
outs
fs
cmp
aas
das
(bad)
repz
push
jg
push
and
sub
aas
cmp
cmp
push
shr
(bad)
sub
pusha
inc
sbb
movs
xchg
push
mov
cdq
inc
enter
call
movs
mov
and
cmp
aam
ror
gs
xchg
inc
ins
movd
int
xor
(bad)
(bad)
xlat
iret
dec
jmp
mov
mov
je
sar
daa
loope
mov
call
pop
scas
xor
adc
lahf
int3
shr
xchg
sti
pop
repz
clc
adc
dec
sbb
pusha
or
cld
aas
xor
jle
or
into
pop
lock
mov
jp
outs
add
mov
loopne
scas
adc
call
xor
js
pop
adc
cmp
lahf
gs
nop
iret
dec
jns
and
gs
pushf
(bad)
push
fst
aad
or
retf
popf
and
dec
sbb
push
shl
xor
dec
ss
adc
jecxz
jnp
ficom
mov
push
mov
xchg
or
xor
cmp
dec
pop
fistp
lahf
sti
scas
(bad)
out
mov
les
or
add
(bad)
out
mov
xchg
mov
movs
sub
fdiv
outs
(bad)
push
cwde
sti
push
int3
push
jge
(bad)
imul
sbb
loop
jnp
push
leave
xor
mov
xchg
adc
aas
or
cli
cmp
cmp
(bad)
mov
stc
sbb
jg
jne
jae
jbe
inc
adc
pop
aad
scas
loope
std
out
ins
mov
iret
mov
je
xor
enter
dec
loope
shr
scas
and
jge
loopne
dec
scas
cmps
imul
and
jl
xor
pop
pop
jbe
lds
je
jg
loop
push
xor
mov
aaa
in
inc
das
aaa
mov
jnp
ror
or
dec
dec
cmps
and
loop
lea
jle
xchg
cld
ror
les
jle
push
push
in
repnz
fsqrt
pushf
sbb
xchg
ss
sbb
js
jl
jne
cmps
jno
inc
ret
add
xlat
cmp
pop
mov
jnp
xchg
loop
mov
sbb
imul
(bad)
mov
pop
cwde
dec
jmp
daa
addr16
inc
mov
nop
retf
jl
or
dec
push
push
jae
call
cwde
fistp
loope
add
int
out
pop
in
sti
mov
mov
popf
test
enter
pusha
push
pop
push
(bad)
out
jp
add
cli
enter
sub
movs
inc
sub
arpl
push
out
lods
or
add
(bad)
and
mov
jbe
mov
and
daa
lds
xchg
xchg
adc
cmp
in
dec
das
mov
ja
add
and
cmp
sbb
fdiv
mov
movs
inc
or
stos
test
sbb
lock
or
sub
and
loope
mov
daa
jno
pop
(bad)
pushf
sub
loop
cmp
mov
inc
jg
xor
mov
and
div
sbb
repz
pushf
dec
fdivr
inc
fidiv
push
fsub
out
ss
mov
cmp
arpl
cld
fsubr
cmp
inc
xor
rol
dec
mov
mov
outs
aad
jl
or
std
mov
or
pop
pushf
jo
shl
mov
inc
aad
xor
in
int
push
cli
adc
push
jge
std
push
stos
and
sub
dec
mov
retf
cmove
cs
push
rcr
outs
std
fstp
mov
leave
aaa
(bad)
xor
test
movs
jp
sub
pop
popa
cmp
loope
cmp
in
dec
xor
adc
dec
jne
sub
pop
lea
push
scas
xor
jbe
sbb
pop
pusha
hlt
mov
cdq
cmp
jnp
cmp
mov
push
in
cmp
cmp
cwde
inc
cmp
arpl
jbe
cmp
stos
ret
push
mov
sbb
test
shl
outs
mov
(bad)
arpl
cli
lahf
mov
fnsave
add
hlt
cld
js
outs
dec
mov
push
pop
dec
adc
mov
xchg
sub
ss
adc
jecxz
mov
sti
mov
jbe
dec
cmp
mov
dec
or
idiv
das
(bad)
xchg
sbb
xchg
and
dec
nop
leave
jl
ins
retf
cli
ret
cmps
gs
test
test
inc
inc
repnz
and
pop
add
(bad)
stc
push
mov
test
push
pop
pushf
(bad)
mov
mov
(bad)
sbb
jb
jmp
shl
and
mov
adc
popf
mov
adc
test
inc
ins
mov
cld
pushf
sub
push
push
mov
adc
daa
inc
dec
not
mov
and
adc
pop
retf
inc
test
inc
retf
jo
mov
adc
retf
retf
cdq
and
jmp
fadd
das
jno
add
cdq
ror
icebp
fmul
aaa
xchg
nop
push
mov
and
pop
sub
fisub
add
lock
jg
in
popa
es
scas
mov
sbb
test
fcos
adc
and
out
inc
cs
aas
pop
ins
lods
or
mov
cld
repz
int3
not
xor
mov
adc
loop
adc
add
mov
repz
adc
retf
xchg
fsub
mov
sbb
cmps
das
(bad)
mov
rcl
push
jno
push
add
enter
dec
sub
jb
xchg
out
ins
mov
jmp
lock
jmp
int3
pusha
cwde
xchg
in
call
mov
scas
xchg
arpl
lock
xor
pop
and
inc
jnp
xchg
or
add
loopne
pop
xchg
jl
xchg
mov
and
enter
add
pop
mov
bound
shl
add
jns
jae
push
js
(bad)
adc
mov
call
(bad)
xor
and
xchg
inc
pop
cmc
xchg
and
mov
add
and
mov
push
xor
pop
clc
lock
jg
or
add
std
cmc
xlat
outs
add
bound
xor
sahf
mov
mov
mov
call
adc
mov
sti
xchg
in
loope
adc
push
std
or
cli
xchg
lods
inc
js
jne
xor
stos
mov
aas
xchg
mov
jle
mov
xchg
lods
jns
int
cmp
and
adc
arpl
(bad)
ficom
add
or
in
dec
mov
ins
inc
movs
inc
xlat
cmp
aad
mov
retf
push
xchg
xchg
adc
sub
add
(bad)
shr
fwait
shl
xor
repz
fdivr
movs
rep
iret
inc
cmps
loop
shl
neg
push
addr16
sbb
adc
(bad)
fiadd
cwde
pop
or
scas
popf
int
inc
sub
mov
and
pop
mov
loopne
mov
retf
clc
dec
mov
inc
imul
daa
inc
ins
test
dec
push
mov
sub
mov
rol
(bad)
test
mov
push
dec
icebp
sub
cmps
cli
jmp
jmp
xor
mov
imul
mov
or
xor
adc
rcl
pop
inc
push
test
dec
mov
int3
pop
mov
add
pop
jl
js
and
mov
or
pushf
and
adc
and
ss
mov
adc
jns
pop
inc
mov
dec
sbb
adc
inc
cli
or
push
hlt
(bad)
ffreep
test
xor
sub
dec
outs
and
(bad)
xchg
mov
nop
dec
pop
inc
out
(bad)
jne
(bad)
leave
xor
inc
sub
jecxz
and
mov
push
scas
loope
lods
outs
jb
cli
cli
(bad)
rcl
cmp
inc
outs
out
aad
fs
ins
or
(bad)
aas
pop
xlat
inc
in
inc
aam
test
mov
jl
jb
pop
push
call
sub
loop
cmc
shl
or
pop
pop
jns
sahf
loop
cmps
sti
mov
aaa
push
or
sbb
stos
push
add
pushf
pop
imul
push
fcos
inc
push
sbb
mov
popf
push
cs
mov
jge
pop
cmp
push
arpl
dec
cld
mov
aam
or
hlt
or
bswap
(bad)
jmp
sar
popf
imul
call
push
pop
jnp
aad
cmp
aas
inc
add
push
std
aam
repnz
fucom
nop
arpl
fsub
sub
cmp
stos
push
scas
add
cmps
adc
cdq
sub
cmp
mov
cmp
mov
dec
cmp
mov
pop
mov
mov
aas
cdq
rcl
loopne
fneni(8087
inc
and
outs
mov
mov
mov
inc
cmp
inc
pop
enter
rcl
aaa
fbstp
jne
(bad)
cmp
xchg
dec
add
pop
mov
add
sub
inc
or
lods
aaa
ds
imul
mov
out
sub
xor
mov
mov
aam
xchg
mov
mov
leave
jb
iret
lahf
mov
jne
lahf
pop
movs
loope
out
lahf
and
dec
pop
adc
stc
gs
cld
adc
aad
stos
retf
pop
mov
mov
inc
cmps
pop
sti
icebp
rcr
xor
cld
mov
iret
(bad)
push
adc
push
pop
and
neg
not
fistp
or
imul
sub
fs
mul
adc
movs
add
cmp
int3
jmp
push
mov
sub
rol
hlt
(bad)
loop
mov
xchg
das
dec
das
mov
int3
popf
out
and
popa
ds
ins
mov
sub
xchg
(bad)
or
xchg
test
adc
cwde
dec
xor
cmp
cwde
rcl
shr
ror
sbb
adc
or
push
aaa
call
xor
aaa
sbb
mov
fldcw
or
and
movs
rcr
mov
jle
mov
ja
pop
icebp
test
out
lahf
xsha1
cmps
dec
cs
jmp
jb
and
xchg
leave
inc
mov
mov
aam
inc
pop
rcr
pop
imul
sub
hlt
and
test
loop
lea
cmp
sti
xchg
(bad)
cmc
aam
in
push
dec
hlt
pmaddwd
iret
adc
push
out
dec
sbb
popf
push
and
int3
arpl
pop
(bad)
xor
add
aad
xor
inc
cmp
push
imul
or
and
retf
push
jno
mov
push
mov
cld
stos
adc
(bad)
mov
mov
jp
daa
ret
mov
and
mov
xor
inc
das
aam
arpl
xor
inc
in
inc
pushf
adc
repnz
and
dec
mov
mov
or
aad
xor
jge
inc
mov
in
popa
mov
int3
retf
pop
push
jbe
or
out
xchg
je
xor
adc
push
inc
mov
push
popa
sbb
dec
lahf
push
(bad)
call
adc
js
int
loopne
push
nop
cmp
jae
ds
stc
mov
inc
mov
mov
dec
loope
sub
pop
or
pop
cs
xchg
inc
jno
bound
push
push
scas
xchg
pop
jle
lock
push
inc
pop
xor
in
in
jnp
adc
addr16
push
fisub
sbb
cld
fidiv
lds
pop
in
call
popfw
imul
lods
xlat
ror
mov
cmps
jno
ficom
cmp
lahf
push
dec
and
adc
mov
jnp
push
pop
outs
sbb
mov
je
push
pushf
inc
std
inc
xor
jl
jg
aam
adc
test
lahf
fdivr
xchg
mov
and
cmp
xor
jge
dec
mov
dec
mov
fmul
les
pop
mov
sbb
std
jbe
rcl
bound
in
pusha
mov
dec
adc
push
repnz
fs
inc
push
jbe
pop
in
or
jmp
cmp
mov
dec
push
dec
push
pushf
pop
xlat
cs
sub
aam
mov
(bad)
pusha
mov
int
cmp
mov
retf
sbb
(bad)
aad
aaa
mov
test
dec
sbb
push
or
inc
inc
or
ja
addr16
loop
pushf
iret
retf
jle
adc
popf
lods
jae
or
jno
inc
inc
mov
aaa
push
movs
dec
push
inc
popf
fcomip
push
push
sub
fdivr
pop
or
xor
push
inc
repnz
and
mov
lea
jg
out
pop
dec
mov
push
and
sub
mov
inc
dec
xchg
xlat
fmul
adc
stos
out
and
adc
inc
and
push
and
push
mov
dec
scas
lock
adc
dec
push
xchg
sbb
xchg
popfw
xchg
mov
jmp
and
lea
test
cmp
sbb
mov
push
fdiv
inc
jecxz
and
mov
lds
xchg
sub
pop
and
or
scas
pop
outs
jl
xor
fisttp
aaa
sub
mov
imul
jmp
pop
std
adc
cmp
addr16
fucompp
and
mov
sbb
hlt
neg
pusha
push
sbb
inc
out
jp
sub
and
mov
cmp
jns
scas
mov
lock
loopne
clc
outs
jecxz
repnz
leave
jp
jae
dec
test
nop
mov
out
imul
sub
add
add
pop
adc
push
jo
push
jl
push
and
sub
sub
xchg
outs
ds
nop
xchg
int3
sub
sub
mov
arpl
scas
outs
jne
dec
dec
or
xor
pushf
cmp
xchg
iret
jl
push
imul
sbb
and
iret
enter
cmps
xor
push
sbb
nop
push
nop
mov
jno
xor
test
mov
mov
jmp
call
cmp
das
ins
lods
ret
fs
rcr
aad
sub
sar
jl
bound
pop
fucomip
sbb
pop
add
iret
imul
sbb
adc
data16
cmps
cmps
inc
and
mov
dec
add
std
and
aam
fs
out
das
xchg
jnp
lock
loop
cs
in
adc
into
ins
shl
dec
and
adc
inc
dec
(bad)
jp
and
enter
mov
adc
aas
test
jl
and
or
fucomip
sbb
hlt
loope
dec
jb
sub
aad
push
lds
das
dec
xchg
shl
xchg
and
ror
sub
test
mov
inc
(bad)
sub
push
pop
push
mov
rcl
fs
mov
pop
pusha
iret
mov
mov
icebp
mov
stos
repnz
mov
cmp
sub
sbb
fld
stos
arpl
iret
fwait
mov
mov
sbb
pop
dec
jbe
add
shl
rcr
adc
loop
mov
fsubr
hlt
sub
in
push
adc
pop
loop
aaa
daa
add
jg
arpl
imul
or
in
sbb
mov
icebp
ret
xlat
jp
retf
xchg
xchg
sub
add
ins
cmp
outs
ins
out
idiv
sbb
out
stc
push
xchg
aad
ins
popa
movs
mov
xor
cwde
in
test
push
cmps
and
dec
mov
adc
repz
or
int
movs
push
ja
adc
mov
add
mov
or
mov
(bad)
xlat
push
and
fxam
xchg
mov
mov
fstp
jmp
scas
and
dec
enter
cmps
push
aad
xchg
fild
jno
imul
fst
mov
(bad)
mov
retf
inc
scas
mov
dec
fwait
mov
and
(bad)
mov
int
stos
sub
stos
xor
push
pop
or
add
dec
cmp
dec
adc
in
in
fcomp
xchg
and
sbb
(bad)
xchg
or
push
cmp
mov
rol
mov
add
inc
fnstcw
inc
retf
adc
sti
sub
repnz
jl
pop
sbb
pop
mov
add
dec
out
mov
arpl
inc
push
js
gs
and
cwde
dec
sbb
addr16
pusha
push
pop
(bad)
inc
pop
inc
ins
loop
not
rcl
inc
fst
xchg
aas
jmp
mov
mov
push
dec
scas
mov
daa
pop
push
xchg
mov
sbb
push
(bad)
adc
mov
out
push
push
test
fimul
inc
pop
cmp
xor
(bad)
stc
jecxz
push
enter
pop
push
pop
pop
mov
pop
mov
push
int3
and
pop
data16
retf
xchg
fld
fld
stos
jbe
leave
and
sub
into
pop
loopne
call
cmp
and
xor
in
push
jmp
sub
push
hlt
sbb
xor
sbb
dec
add
inc
add
cs
icebp
mov
cld
loope
cmp
sbb
daa
lock
pop
ret
xchg
push
sub
jmp
std
lods
(bad)
push
movs
ins
xchg
into
(bad)
jmp
(bad)
xchg
ror
(bad)
je
sub
shl
arpl
outs
cmps
push
clc
bound
add
aam
or
fdivr
rcl
stos
adc
lea
xor
push
inc
mov
je
xor
imul
pop
lock
xor
jp
or
jb
shr
cmp
daa
xor
sub
mov
push
ins
ds
jno
std
or
push
jmp
dec
(bad)
mov
lahf
add
in
or
repz
fptan
add
sahf
cmp
inc
lods
in
lds
test
inc
ret
pop
lods
jge
cwde
(bad)
and
jae
sub
pop
mov
mov
mov
stos
scas
xchg
push
cmp
and
inc
js
jmp
test
jns
add
imul
adc
cs
int
dec
add
bound
push
pop
pop
xchg
fst
xchg
lds
addr16
ja
jae
adc
push
add
retf
fwait
fwait
das
popf
mov
add
pop
adc
into
mov
pop
pop
pop
pop
pushf
mov
cmp
sahf
ret
sub
call
jge
cmc
dec
test
dec
push
sub
xor
pop
les
mov
pop
cdq
jmp
sbb
ins
arpl
out
push
xor
mov
jecxz
mov
hlt
xchg
dec
stc
cdq
xor
mov
push
adc
fcomp
jge
lahf
sbb
or
xor
cld
retf
dec
sar
ror
jb
push
xor
dec
in
jbe
mov
xchg
imul
cmp
shr
mov
aam
(bad)
in
cmp
pushf
push
arpl
out
inc
arpl
inc
rcr
dec
popa
in
adc
xchg
cld
xchg
in
add
imul
cmps
fwait
icebp
push
or
pop
cmc
push
out
xor
pop
popf
or
dec
cmp
adc
fcomp
push
lea
xor
pop
push
add
add
sub
lods
out
add
mov
and
imul
inc
adc
add
fs
xchg
ins
or
movs
(bad)
dec
jnp
mov
jle
stos
les
sahf
arpl
or
inc
popa
hlt
xchg
int
pop
packssdw
cld
and
pop
iret
retf
pop
dec
jl
xor
inc
out
add
jge
sub
xor
jno
adc
xchg
out
aas
arpl
mov
inc
pop
mov
xchg
iret
sbb
fcomp
jae
scas
xchg
shl
inc
jne
int
repz
xor
push
in
push
xor
or
push
push
inc
out
jo
jns
hlt
fst
aam
inc
sbb
arpl
ja
mov
add
dec
shl
mov
adc
mov
out
dec
jb
int3
pop
retf
lds
push
dec
leave
pop
(bad)
stos
sbb
xchg
sub
nop
inc
(bad)
fsubr
mov
cmps
push
inc
test
sti
or
jg
xor
loop
int3
out
sahf
pop
push
pop
fldenv
in
cmp
and
xor
inc
or
call
test
and
jnp
lahf
aad
jb
pop
sub
cdq
push
pop
hlt
inc
arpl
lea
mov
mov
je
lahf
mov
mov
cmps
aad
sub
sub
jns
mov
fcomp
sub
out
dec
gs
in
mov
adc
mov
in
imul
push
inc
dec
ins
jno
das
out
dec
jne
adc
popa
sbb
or
lea
das
push
(bad)
int
fdivr
shl
xor
xor
jno
fmul
xchg
ins
lahf
pop
pop
arpl
(bad)
and
fisttp
ror
ins
pushf
mov
(bad)
xor
daa
or
xor
cwde
xchg
repnz
xor
frstor
jbe
inc
or
ret
imul
lock
lea
push
mov
in
sbb
inc
mov
push
rol
xchg
jp
cld
sar
mov
and
push
pop
(bad)
mov
cld
sub
nop
add
pop
scas
out
cld
out
xchg
call
mov
xchg
xor
push
das
arpl
(bad)
dec
loope
push
sub
pop
xlat
sar
cmps
sub
mov
mov
sbb
or
cdq
popf
pop
dec
retf
cwde
iret
or
xchg
cli
into
cmp
cmp
push
xor
lods
adc
arpl
ja
les
es
pusha
mov
xchg
adc
hlt
mov
sti
sbb
std
mov
retf
cwde
bound
mov
sub
out
loope
dec
inc
jp
scas
in
lahf
(bad)
(bad)
lahf
pop
or
pop
pop
arpl
cld
mov
fcom
cld
rcl
xor
adc
popf
imul
bound
pop
arpl
push
sahf
(bad)
jnp
pop
retf
pop
mov
ret
(bad)
ds
sub
sub
les
ins
enter
repnz
pop
retf
dec
push
and
lock
jnp
xor
pop
push
sahf
adc
aad
push
(bad)
popf
sbb
fcom
and
fild
imul
fiadd
sub
mov
cmp
inc
push
stos
ret
pop
and
retf
call
sub
inc
sbb
movs
les
int
ds
inc
jo
outs
sahf
imul
fnstsw
jp
mov
retf
sbb
pop
dec
push
push
jae
pop
es
addr16
int
test
sub
sbb
sar
jo
jmp
dec
add
cli
sub
and
shr
fmul
iret
gs
pop
xor
movs
lahf
fld
adc
push
xchg
ror
mov
aaa
pusha
push
cmp
in
imul
out
aam
adc
pop
loope
xchg
sbb
pushf
pop
ret
hlt
imul
mov
aas
idiv
sti
dec
xchg
out
pop
xor
xor
sbb
pushf
mov
jl
sbb
aas
les
call
and
or
ret
movs
xchg
scas
xchg
popa
jmp
pop
cmps
lods
jmp
pop
test
push
test
out
jl
jnp
push
dec
and
(bad)
push
sbb
test
adc
shl
mov
rcl
adc
repz
push
xchg
and
push
xor
retf
jmp
popf
cmovbe
xor
cmp
packsswb
add
xchg
sbb
xchg
es
xor
pop
fdivr
(bad)
jp
or
jl
xchg
xchg
mov
cmp
push
in
and
pop
stos
outs
inc
popf
call
mov
push
sahf
test
mov
push
bound
mov
cmp
pop
and
outs
pusha
push
stos
in
scas
shl
mov
push
not
adc
sbb
push
popf
fdiv
lds
dec
sub
sub
(bad)
jecxz
fs
(bad)
jo
xor
xor
xchg
retf
adc
mov
sbb
pop
and
fidivr
fistp
(bad)
scas
shr
sub
aam
outs
push
pop
mov
sub
xchg
mov
pop
(bad)
pop
mov
inc
data16
neg
dec
test
bound
xchg
and
pop
cmp
ret
mov
push
sar
int
call
sub
push
cmp
sbb
inc
sbb
ret
jo
shl
stos
out
repz
push
jo
xchg
xlat
mov
shr
cmps
sti
cmp
popa
into
mov
loop
cmps
shr
or
leave
or
nop
mov
jb
imul
inc
add
sbb
sahf
push
int3
xchg
dec
push
ins
imul
push
fsub
(bad)
imul
cmp
jnp
inc
sar
push
retf
jmp
shl
xchg
mov
and
push
(bad)
push
xlat
in
xchg
and
jae
test
in
mov
(bad)
in
cmps
mov
popaw
xlat
adc
pop
lea
lds
sbb
mov
xor
dec
push
jge
adc
inc
xor
ja
sub
mov
adc
adc
mov
pop
xlat
jb
cmp
loop
sub
ins
xor
push
add
adc
sub
cs
mov
mov
adc
add
jge
aas
imul
jae
jmp
scas
jmp
pop
adc
push
adc
loope
daa
mov
jge
(bad)
cld
mov
and
add
push
adc
retf
das
dec
cmp
push
ror
dec
aaa
dec
xchg
mov
fs
or
cmps
xchg
rcr
mov
mov
adc
jns
pop
shr
jmp
shl
mov
fist
jmp
cmp
mov
cld
repnz
pop
sbb
fs
out
cmp
xchg
ss
pushf
push
lds
xchg
ins
cmps
cdq
pop
std
cmp
cmps
lea
add
and
ss
pop
xor
jno
es
sub
sar
into
xlat
sar
imul
fcomp
pop
ins
or
gs
pop
adc
mov
or
sbb
mov
outs
scas
call
sbb
mov
push
daa
dec
ror
retf
jg
adc
push
stos
jae
dec
lods
and
adc
adc
dec
xor
ja
push
jae
mov
movs
mov
mov
jmp
retf
push
out
push
scas
int
lea
sub
ds
dec
(bad)
or
jecxz
pushf
pop
callw
adc
ins
ins
push
lods
cmp
mov
mov
push
les
xchg
cmp
push
mov
(bad)
imul
loop
jae
rcr
mov
rcr
and
inc
jp
sub
jl
add
pop
jo
pop
in
shr
ins
jcxz
sbb
into
sub
pop
sahf
dec
ins
push
mov
js
push
add
lahf
inc
fnstsw
sbb
fsubr
imul
aam
push
sbb
cmp
adc
adc
jg
pop
test
mov
mov
cmps
loop
xchg
cmp
dec
jae
lahf
leave
cwde
push
retf
cmps
pop
(bad)
movs
movs
jmp
fs
fst
xor
add
cmp
sub
add
and
hlt
js
and
es
mov
outs
mov
fmul
inc
popf
mov
push
xor
icebp
push
mov
and
adc
daa
jmp
cwde
or
push
(bad)
ret
sbb
iret
lahf
bound
pushf
jne
cdq
xchg
call
lahf
(bad)
outs
(bad)
mov
sahf
inc
mov
popf
push
mov
scas
in
inc
cmp
in
imul
jmp
mov
and
or
call
mov
ja
jo
jmp
ins
in
xchg
rol
scas
clc
lahf
lods
fisub
jl
xchg
xchg
ror
imul
mov
mov
loopne
push
arpl
test
in
sub
rcl
imul
or
ret
fs
fisubr
lods
imul
into
pop
mov
stos
jmp
outs
out
in
dec
bound
shl
jl
iret
bound
les
mov
sbb
sbb
adc
je
inc
jae
mov
sub
dec
push
retf
and
mov
jne
push
mov
sbb
(bad)
xor
lahf
pop
mov
mov
jp
cmps
pusha
out
fcmovnb
adc
aam
outs
sub
scas
sbb
fdivr
mov
sub
pushf
push
mov
popa
jecxz
fbstp
ja
mov
jnp
adc
out
aad
popf
fadd
cmp
mov
mov
and
mov
or
aad
into
das
fistp
lods
leave
sbb
imul
cmc
aaa
mov
fxch
adc
sbb
movs
in
out
pusha
adc
xchg
call
fiadd
rcl
adc
sub
repnz
js
jnp
xchg
cld
and
add
xchg
mov
push
push
ins
les
cmp
pusha
retf
js
bound
fist
pop
retf
push
xor
loopne
sub
jb
out
mov
cs
dec
sub
(bad)
in
xchg
fdivr
cmp
shr
or
in
xor
(bad)
cmps
lea
lock
ret
xchg
pop
mov
xor
pop
popa
fist
cmp
sub
popf
push
loopne
imul
jno
push
add
and
jp
ja
adc
je
(bad)
push
sbb
test
int3
addr16
add
pusha
cmps
dec
fnstenv
sub
push
movs
lock
inc
xchg
es
pop
mov
jnp
fimul
aaa
cmp
sbb
lock
adc
retf
cli
jmp
jl
push
(bad)
into
jb
test
dec
mov
xor
sub
jle
sub
mov
mov
jmp
test
jecxz
mov
test
pop
cmp
mov
js
sbb
pop
mov
jle
popa
dec
xor
push
cdq
imul
(bad)
out
push
popf
lock
pop
jge
xchg
push
cmp
xchg
sub
repnz
or
dec
mov
mov
jmp
sbb
imul
push
xchg
mov
shl
test
lahf
pop
and
js
rcr
pop
cmps
stos
add
jno
ror
hlt
outs
jecxz
xchg
xor
pushf
js
push
jno
gs
sub
push
add
jbe
(bad)
popa
mov
jnp
jge
call
mov
repnz
mov
out
sbb
aaa
lds
push
xchg
mov
sahf
(bad)
xor
add
dec
int
ret
xlat
sbb
or
mov
pop
bsf
(bad)
xchg
or
push
mov
out
sbb
pop
pop
mov
mov
cmp
cs
dec
dec
dec
jmp
sub
jmp
push
in
(bad)
or
mov
xchg
int3
and
xchg
inc
sahf
cmp
cmp
add
stos
mov
xlat
xchg
or
popf
loopne
push
js
sbb
rep
jnp
loope
push
loope
stos
pop
mov
out
clc
push
clc
xchg
mov
mov
out
jno
and
mov
test
je
push
mov
xor
pusha
xchg
outs
adc
in
data16
jmp
call
mov
sbb
push
lods
leave
(bad)
jns
xchg
imul
push
inc
cli
pop
mov
outs
xchg
dec
scas
popa
lahf
hlt
and
sar
inc
mov
movs
lds
push
cmps
lds
push
retf
mov
popa
pop
or
sbb
push
jge
adc
jmp
jmp
scas
scas
loope
lods
pop
dec
sbb
jmp
pop
push
repz
xchg
add
in
jns
daa
and
mov
push
xchg
sbb
or
jle
pop
out
adc
std
or
pop
cld
jae
xchg
data16
jmp
and
jns
loope
lea
adc
xchg
inc
stc
adc
jg
movs
xchg
sbb
loope
pop
push
inc
test
stos
call
adc
stos
imul
dec
push
es
xor
stos
pop
mov
cmp
push
movs
hlt
call
fsub
xor
movs
xchg
cmp
and
stos
jge
xchg
xor
push
rcl
pop
mov
jb
pop
test
sbb
xor
sti
xor
push
jne
in
mov
add
push
push
and
and
push
or
stos
sar
pushf
adc
ss
dec
mov
je
sti
push
cmp
mov
stc
inc
in
push
and
stos
scas
push
lock
fcom
mov
scas
and
sbb
cwde
xor
pop
sar
mov
or
(bad)
sub
jl
aaa
cmps
pusha
cmp
std
stc
jno
jb
jp
mov
scas
rcl
outs
retf
push
adc
push
scas
int3
or
shr
cmps
sbb
lea
or
and
sbb
stos
cli
loopne
xchg
scas
les
xor
test
push
inc
pushf
ins
pop
adc
lods
mov
out
sub
js
mov
push
inc
in
xchg
push
cmp
xchg
shl
in
push
shl
popa
jle
fld
pushf
in
mov
(bad)
fnsave
retf
sub
jp
lahf
mov
ins
cld
mov
mov
cli
pop
div
lods
aas
jecxz
gs
inc
xor
addr16
sub
mov
call
call
dec
mov
aas
mov
sahf
dec
test
cmp
loopne
repnz
push
es
xlat
dec
jecxz
mov
mov
push
fcom
ss
add
aaa
push
xchg
mov
test
sti
push
adc
hlt
(bad)
sub
jecxz
mov
imul
in
mov
leave
sti
fwait
push
and
pusha
adc
call
repz
mov
rol
xor
call
test
add
xchg
jno
jb
or
push
sbb
movs
adc
stc
imul
in
(bad)
or
(bad)
or
loopne
outs
pop
mov
sbb
xchg
mov
retf
fistp
mov
and
je
stos
movs
fbstp
xchg
lods
push
xchg
dec
pop
and
mov
sbb
jbe
jns
inc
jbe
push
pop
mov
push
inc
retf
adc
mov
imul
cs
loop
mov
int3
sbb
retf
rcr
aam
sub
fst
jns
sahf
inc
je
push
outs
push
jb
call
push
xchg
add
mov
mov
jecxz
dec
or
and
retf
retf
dec
pop
cmp
shr
mov
cmp
hlt
push
jo
int3
fcmove
sub
push
cmp
mov
push
in
inc
xchg
jge
mov
sub
rcl
arpl
ss
sahf
scas
loop
dec
push
scas
xchg
scas
adc
ins
cdq
jae
xchg
arpl
sub
xor
dec
adc
(bad)
mov
push
xor
lahf
ja
or
add
or
mov
jbe
mov
sbb
int3
sahf
inc
pop
pop
sub
imul
or
mov
shl
and
lds
push
push
mov
dec
lods
push
or
popa
and
scas
outs
in
inc
mov
cmp
out
or
lds
push
add
fmul
jno
xchg
jne
rcl
sbb
mov
imul
es
mov
jbe
cmp
and
out
repz
sub
push
imul
push
jnp
es
in
mov
ficom
and
in
cwde
fbld
jnp
pop
jle
and
dec
loope
mov
pusha
push
fmul
pusha
jmp
and
jmp
hlt
push
mov
and
test
pop
push
fwait
pusha
rcr
ss
mov
(bad)
repnz
xchg
pop
mov
mov
xlat
addr16
test
shr
inc
add
pushf
jbe
xor
jp
add
jg
push
dec
xor
ds
xor
jecxz
xor
daa
dec
cdq
sbb
aas
jae
ror
dec
(bad)
popf
jge
pop
fdivr
cld
xlat
jae
sub
mov
es
retf
xchg
popa
int
enter
movs
out
or
push
adc
sbb
xor
pop
pop
mov
sub
dec
and
test
and
push
in
adc
hlt
test
jle
bound
push
jae
popf
pop
lea
retf
mov
jmp
adc
mov
push
sub
pop
or
in
fdivr
ds
ret
mov
(bad)
xor
sbb
dec
popf
xor
dec
mov
xor
sub
sti
pop
call
sub
stos
scas
stos
lahf
rol
ror
fdiv
mov
jnp
jmp
(bad)
mov
jb
push
jae
lds
xor
mov
or
movs
mov
pusha
and
add
pusha
cmp
push
out
and
and
ficom
pop
loopne
out
or
inc
aam
xchg
movs
xchg
cs
dec
add
or
jl
adc
fst
mov
loop
repz
(bad)
fcomp
aaa
neg
sub
sahf
adc
sub
cmp
mov
call
fidivr
(bad)
pusha
pop
fucomi
imul
popf
mov
(bad)
push
pop
inc
inc
arpl
pushf
push
pusha
ja
scas
inc
cmc
push
dec
bnd
inc
jo
and
test
outs
dec
nop
fs
call
out
add
push
ss
lahf
in
lahf
pop
mov
mov
jl
and
push
pop
arpl
mov
pusha
jnp
test
mov
arpl
inc
sahf
movs
cmp
jnp
dec
jge
pop
mov
add
cmps
pop
push
xchg
sbb
sub
sub
js
inc
ret
ins
or
sbb
test
popa
dec
jnp
pop
lods
shl
fdiv
pop
pop
jae
mov
push
call
sbb
sbb
xor
pusha
fwait
and
inc
ds
and
movs
push
addr16
retf
fs
out
sbb
or
cmp
push
sbb
xchg
clc
mov
mov
imul
call
mov
sti
or
call
and
test
rcr
pusha
sbb
push
jae
mov
daa
push
adc
inc
dec
leave
push
push
ret
imul
call
aam
adc
out
leave
sub
fnsave
pop
or
lods
xor
aad
push
fcmovb
mov
adc
bound
jnp
xchg
inc
mov
std
iret
xchg
sub
ret
mov
ins
jmp
jl
add
mov
in
or
mov
and
sub
push
cdq
mov
dec
add
add
mov
xor
scas
sbb
sub
ret
or
mov
xchg
lea
mov
dec
outs
xlat
hlt
xor
loopne
retf
lea
loope
loop
dec
sbb
mov
(bad)
xchg
imul
xchg
sti
ror
cmp
cmp
(bad)
lahf
mov
sbb
imul
fist
and
sbb
fcmovnb
sub
icebp
xchg
jmp
sub
ins
shl
mov
cld
pop
shr
ror
inc
jb
retf
mov
sti
mov
or
inc
push
xchg
aas
or
inc
ret
inc
jae
aad
adc
mov
int3
sbb
leave
shr
int
add
rcl
mov
jge
pop
or
sar
xor
inc
cli
push
jmp
outs
dec
sub
fwait
pop
pop
ds
stc
(bad)
inc
pop
push
push
scas
bound
cmp
xchg
inc
push
dec
imul
sub
and
mov
jns
ror
ins
add
fdiv
sub
mov
addr16
lds
ret
xchg
cmc
fcmovne
(bad)
bound
xchg
cmovnp
retf
ds
mov
sbb
sub
cld
adc
mov
call
xchg
pop
mov
rol
loopne
shl
loop
cld
mov
mov
cmp
sbb
(bad)
fld
pop
shl
sbb
push
inc
mov
push
call
fldcw
test
add
xchg
lahf
inc
and
add
xchg
sti
je
data16
sti
sub
add
in
adc
fstp
mov
mov
jnp
push
retf
sbb
into
and
ins
pop
dec
jl
xchg
pop
iret
jl
clc
fidivr
rol
js
std
sub
sbb
jl
or
or
and
and
cmp
test
and
xchg
(bad)
sar
data16
and
into
mov
mov
push
xor
sub
mov
enter
inc
mov
add
xor
jl
cmp
jg
jge
gs
(bad)
mov
cmp
push
loop
into
shl
(bad)
mov
stos
rcr
repz
add
or
scas
rcl
(bad)
aad
out
fs
es
or
imul
(bad)
mov
gs
add
xchg
xchg
(bad)
mov
fsin
out
je
push
jmp
jle
in
aam
retf
xchg
jp
pop
inc
add
mov
lods
mov
adc
cmp
repnz
mov
sub
cmp
loop
pop
sub
push
pop
xchg
mov
bound
out
dec
jg
push
imul
das
ds
loop
mov
movs
jmp
push
xchg
jb
push
inc
das
cmp
pushf
mov
jae
sub
xchg
(bad)
xchg
fidivr
cmc
pusha
dec
nop
stos
push
mov
call
outs
inc
push
or
cmp
das
ret
shr
cmc
xor
xchg
fwait
mov
push
and
jno
dec
enter
cld
loop
inc
ds
sti
lahf
push
push
(bad)
fsub
cmps
jg
std
retf
das
pop
in
setbe
mov
xchg
sbb
movs
and
dec
ret
fiadd
add
aad
pushf
adc
lahf
push
adc
sar
aaa
int3
movs
not
push
data16
inc
adc
movs
(bad)
pop
loop
popa
cmp
das
(bad)
mov
sbb
xchg
cmp
cmp
iret
mov
cwde
cs
sub
in
push
or
push
(bad)
fsubr
imul
js
adc
pop
imul
and
aas
aad
dec
and
add
es
outs
and
and
ror
or
adc
xor
leave
sbb
sub
push
push
adc
add
jl
ror
stos
cmp
sub
xor
mov
sub
jp
push
(bad)
fild
sbb
and
js
fdivr
or
adc
sar
adc
and
mov
scas
into
push
enter
add
pop
je
sahf
mov
repz
push
and
movs
mov
(bad)
movs
ss
cmps
jmp
ret
cmp
mov
sti
imul
es
(bad)
pop
arpl
jno
jecxz
push
mov
retf
and
xchg
sahf
xor
mov
fiadd
or
mov
outs
xchg
and
popf
push
repnz
mov
mov
sbb
jae
mov
mov
out
add
sub
jbe
aaa
mov
fs
retf
das
test
and
mov
inc
ins
push
ja
ins
mov
ficomp
pop
cmp
in
jmp
out
cmc
cmps
push
cli
mov
jnp
jbe
test
movs
pop
mov
and
shl
mov
xor
fwait
loope
lahf
jno
ret
pushf
pop
adc
ret
cmps
repz
loop
or
test
adc
test
mov
sbb
and
xchg
and
lds
xchg
push
pop
or
push
test
cmp
sub
inc
das
retf
aam
outs
iret
mov
daa
popa
stc
adc
into
test
std
jmp
pop
ret
ins
not
or
mov
(bad)
in
jne
movs
lahf
out
xor
xchg
dec
cmp
repnz
adc
std
test
(bad)
push
movs
jbe
repz
and
movs
sbb
aad
dec
ins
icebp
(bad)
mov
icebp
cwde
push
data16
inc
lods
shr
aaa
rcr
and
cli
movs
popa
into
sub
in
repz
pop
mov
cmp
adc
add
fwait
stos
push
cli
out
call
retf
pop
xchg
sbb
aam
jns
push
push
pop
repnz
out
adc
xchg
dec
mov
stc
cdq
cli
or
add
dec
loope
sub
cmp
das
mov
inc
mov
test
xlat
nop
fadd
adc
cmp
js
sbb
fs
mov
ja
push
hlt
push
ror
ror
jge
repnz
out
cmps
or
popa
lods
daa
sti
leave
push
sbb
xor
out
xchg
out
push
dec
mov
jns
mov
pusha
fiadd
or
mov
int3
fistp
add
int3
jb
scas
sub
mov
test
dec
dec
or
cmp
pop
or
imul
sbb
int3
(bad)
cmp
shr
xchg
push
call
dec
and
out
(bad)
imul
das
call
out
loopne
inc
popa
jp
xchg
test
xchg
test
jns
fcmovu
push
shl
(bad)
pop
fst
je
loop
dec
fldcw
test
enter
shl
adc
dec
outs
pop
(bad)
fimul
idiv
pop
das
dec
xchg
jo
fcom
push
dec
cwde
jo
int
ins
xchg
mov
movs
test
iret
stc
pop
in
dec
xchg
call
out
popf
mov
jo
mov
and
fcmovb
inc
dec
ja
xchg
pop
push
iret
pushf
mov
aaa
ret
mov
inc
mov
rcr
adc
jb
jle
fdiv
mov
xor
or
popf
dec
pop
add
sub
and
int3
xchg
mov
mov
pushf
add
out
push
bound
jl
and
mov
cmps
or
enter
sub
lahf
push
inc
fdiv
es
rol
sub
inc
and
sub
xchg
shl
mov
push
fs
dec
(bad)
jle
or
ret
sar
js
pop
mov
dec
add
pop
xchg
out
cld
call
mov
mov
jnp
mov
pop
imul
inc
push
cmp
cmp
inc
es
std
xchg
sahf
mov
movs
mov
sub
mov
pop
pop
cmp
adc
shr
sbb
cwde
push
clc
mov
mov
push
lock
cs
sbb
pushf
add
fdivr
addr16
jno
jo
sub
shl
xor
mov
sbb
push
or
dec
jmp
jnp
jg
dec
mov
arpl
sbb
push
cmp
pop
pusha
dec
mov
repnz
out
jg
xor
cmc
dec
pop
jl
adc
cmp
call
mov
ins
xor
ss
xchg
xchg
push
pop
push
sub
je
cmp
shl
sbb
ss
call
and
pop
gs
cmp
push
dec
inc
lods
aad
cdq
out
add
or
cmp
pop
push
out
cdq
cdq
mov
stos
sahf
ret
jae
push
call
(bad)
pusha
sbb
mov
xor
cwde
and
lds
pushfw
dec
enter
add
sbb
test
push
inc
gs
inc
rcr
hlt
pushf
xchg
pop
jne
add
pushf
in
sbb
jmp
mov
jb
adc
jbe
dec
cs
sub
aas
lods
pusha
jmp
xor
mov
push
mov
xchg
scas
mov
inc
cmp
jbe
scas
add
lock
rcl
pop
push
fist
add
dec
pop
dec
call
bswap
addr16
es
fild
test
adc
sbb
or
dec
popf
xor
stc
jmp
loopne
sbb
call
adc
test
or
mov
mov
mov
in
aam
jmp
mov
sar
loope
lea
dec
inc
xor
dec
mov
int
fs
retf
pop
mov
pop
retf
movs
push
xchg
mov
mov
xor
mov
sbb
and
push
fist
inc
adc
cmp
fwait
push
sub
push
not
ret
jg
js
leave
push
cmp
add
jmp
retf
scas
fdivr
call
lods
outs
repz
mov
jle
pop
sbb
repz
test
mov
and
adc
popf
in
mov
(bad)
dec
loop
sbb
clc
pop
aas
push
dec
add
imul
test
add
pop
fidiv
xor
repnz
inc
sbb
nop
xchg
in
mov
loop
outs
cmp
cmp
jae
call
outs
sub
cmc
pop
cmp
pop
pop
sub
adc
fwait
inc
imul
sbb
jmp
inc
sbb
push
lahf
mov
movs
movs
sub
adc
inc
stos
xchg
adc
shr
leave
fdiv
inc
fld
mov
mul
mov
and
enter
or
cs
js
mov
pop
cmps
dec
sahf
fdiv
iret
shl
inc
push
lds
adc
aad
push
lea
iret
mov
out
mov
test
jb
das
push
shr
mov
xchg
sub
jbe
mov
jae
xor
mov
fistp
ds
fdivr
xor
stos
adc
daa
stos
daa
aam
jb
xor
add
stc
push
cld
mov
iret
ins
or
(bad)
fdiv
or
fs
fisttp
clc
xchg
movs
int
(bad)
pusha
pop
adc
enter
cld
adc
pop
dec
aas
int
fild
xchg
lahf
hlt
dec
out
or
sbb
cmp
or
adc
inc
popa
xchg
loope
pop
or
fs
pop
shr
scas
pop
adc
pop
popa
cmp
adc
mov
xchg
pop
or
rol
jo
pusha
hlt
xchg
nop
inc
outs
popf
iret
das
fyl2xp1
rcl
popf
(bad)
(bad)
cmp
or
push
loop
push
sub
bound
or
mov
ins
gs
repz
sbb
sub
int
mov
jno
movs
or
scas
add
jp
cmp
mov
fild
inc
data16
inc
add
scas
(bad)
dec
daa
dec
pop
sbb
stos
adc
imul
adc
mov
cmc
inc
pop
addr16
jns
ins
xchg
iret
mov
or
popf
pop
sub
ror
dec
cmp
jbe
dec
sub
push
rcl
int3
and
or
popa
bound
xchg
xor
dec
xor
inc
push
pop
aaa
sbb
aam
xchg
jl
sub
push
mov
adc
popf
mov
stos
les
rol
sub
mov
cmp
cmp
retf
(bad)
lods
dec
sbb
scas
and
mov
add
cdq
pop
(bad)
out
stos
inc
(bad)
jp
dec
test
mov
and
popa
or
cld
add
popa
ret
mov
dec
cmps
mov
bound
mov
push
mov
jae
pop
int3
sub
sbb
call
adc
das
xchg
lea
stc
pop
int3
cmp
mov
jae
push
adc
cld
fadd
push
ins
inc
pushf
push
das
mov
ficomp
scas
outs
pop
pop
jmp
iret
aad
pop
pmaddwd
push
adc
(bad)
out
jb
test
popf
jecxz
sub
mov
lea
jge
sub
not
add
sbb
test
(bad)
js
add
pushf
mov
mov
sbb
push
or
and
call
mov
cli
xchg
mov
add
jl
jle
ss
(bad)
(bad)
and
add
test
js
inc
sub
sbb
ja
mov
cmp
xchg
jle
sub
pop
cmps
inc
xchg
pop
cmps
mov
rol
shl
popf
push
mov
es
sbb
cmp
cmc
mov
test
and
add
pop
outs
hlt
xor
jp
imul
dec
mov
inc
xor
mov
stc
outs
mov
scas
jno
adc
dec
xlat
arpl
fbstp
mov
aam
mov
dec
ss
movs
xor
lods
and
xchg
cmp
cwde
push
jno
mov
jne
lea
outs
movs
imul
fwait
rcr
inc
fstp
xor
addr16
lgs
mov
and
jmp
in
adc
xchg
inc
repnz
sbb
mov
(bad)
sbb
sbb
retf
aas
pop
xor
xor
jb
xchg
popa
call
mov
push
ss
lock
retf
arpl
mov
mov
popa
fadd
je
mov
mov
fcmovne
test
scas
test
cmp
rcl
pop
fcom
or
dec
fsub
mov
xchg
repz
adc
out
sub
add
add
add
dec
ret
dec
movs
inc
iret
fimul
loope
xor
nop
addr16
and
mov
xchg
sub
dec
cmp
jbe
fwait
sub
mov
sub
mov
cmc
dec
ja
mov
scas
xchg
push
std
fwait
pop
xchg
test
and
pop
adc
add
ins
jne
push
(bad)
cmp
or
pop
enter
xor
add
adc
jge
mov
bound
ins
ret
ins
xchg
fdivr
fwait
loop
xchg
cdq
fcom
es
out
inc
cmps
div
mov
xchg
mov
shl
inc
push
mov
push
xchg
push
mov
adc
mov
jmp
aad
cmp
in
scas
fnstsw
dec
xor
out
idiv
mov
out
sti
scas
and
arpl
and
pop
inc
push
popf
nop
fs
cmp
pop
movs
js
cmp
inc
or
in
jmp
and
jp
xchg
mov
cwde
sbb
test
lds
inc
pop
mov
push
test
adc
iret
lea
lods
pop
xlat
add
js
in
mov
xchg
pop
jmp
xlat
jo
add
sbb
fild
mov
rcr
dec
pop
test
pusha
jl
mov
js
mov
lock
cli
lods
pop
imul
xor
mov
cmp
xor
adc
sbb
outs
mov
arpl
cmp
dec
je
xlat
xchg
scas
movs
arpl
rcl
mov
or
cmp
pop
jnp
and
ja
leave
cli
inc
dec
aad
pop
ret
clc
sti
repz
jb
mov
mov
test
lahf
cmp
xchg
(bad)
and
fwait
cmc
xchg
sti
sub
mov
pop
mov
xor
cld
pop
mov
sbb
cmp
ins
ins
out
mov
fsubr
pop
jl
out
add
pusha
stos
dec
fcomp
sub
pop
xor
sar
jo
cld
(bad)
jle
sub
cmp
xchg
add
mov
aam
sub
stos
inc
xchg
and
ror
pop
loopne
jl
mov
jg
es
xchg
xor
sub
jmp
mov
into
add
xlat
lahf
(bad)
cmp
bound
fdivr
cdq
pop
pop
js
cld
or
jae
aad
mov
test
jmp
fisttp
jns
pusha
cmp
popa
pop
push
push
pop
mov
xchg
push
lods
cmp
popf
popf
sbb
xor
movs
enter
jle
out
in
repz
movs
inc
cmovno
out
dec
pushf
jbe
or
sar
imul
je
outs
into
arpl
test
fist
or
cwde
pop
xor
xchg
into
sub
(bad)
xchg
sti
retf
pop
sbb
jo
in
push
out
and
pop
pop
mov
or
fs
pop
jbe
test
mov
and
adc
ret
scas
xchg
ss
mul
ret
mov
mov
push
sub
or
retf
lods
xor
out
push
pop
addr16
test
jbe
outs
pusha
loopne
(bad)
sti
mov
lods
and
pop
and
mov
fldenv
test
add
fadd
push
cdq
mov
test
pop
adc
daa
test
cdq
inc
lock
cld
and
push
sbb
shl
inc
lahf
xor
push
test
fbstp
outs
hlt
xchg
jnp
shl
int
sub
fs
rcl
movs
xchg
push
pushf
mov
(bad)
cmp
ror
scas
(bad)
adc
push
jae
in
xchg
inc
xor
add
pop
jo
cmp
mov
ja
jg
repnz
push
and
fst
or
dec
lds
sbb
(bad)
(bad)
mov
pop
fcom
jmp
(bad)
adc
loopne
jne
push
xor
imul
jno
arpl
cli
enter
sub
or
lds
or
push
or
lock
addr16
mov
hlt
(bad)
sti
sub
out
aas
aas
sub
sbb
jae
inc
xchg
fldcw
push
inc
dec
push
test
push
add
mov
and
xchg
call
daa
cmps
mov
int
(bad)
(bad)
enter
sbb
test
arpl
xor
and
sbb
(bad)
ins
xchg
jp
int3
das
stos
stc
loopne
push
into
stos
retf
(bad)
dec
ins
xor
outs
jg
out
adc
sbb
fnsave
sub
mov
call
sub
xor
jno
pop
mov
test
test
and
push
xor
sub
and
lds
fld
idiv
pop
hlt
mov
cmp
mov
or
inc
dec
pusha
call
bound
rcr
xlat
out
jmp
xchg
fsubrp
stos
nop
xchg
inc
push
lea
sub
pop
lock
and
cld
jle
je
dec
inc
lahf
pop
push
inc
jae
int
inc
mov
sub
test
outs
bnd
movs
pop
mov
xlat
mov
inc
stos
in
cwde
jo
(bad)
pop
cwde
outs
ins
dec
or
sub
std
imul
adc
lods
cmp
stc
jecxz
add
mov
jle
js
loopne
dec
and
mov
inc
xchg
imul
mov
and
pop
push
cs
adc
ins
shr
gs
imul
imul
jmp
movs
or
xchg
adc
mov
mov
push
pop
xor
cmp
stc
and
jno
mov
les
shl
pop
lahf
jae
stc
jae
out
(bad)
fisub
arpl
cdq
movs
xor
lods
lock
dec
jmp
(bad)
mov
pop
movs
mov
xor
xchg
sub
and
add
or
repz
bnd
pop
popa
fwait
push
mov
cmp
retf
mov
addr16
leave
add
pop
scas
in
pusha
add
pop
and
(bad)
inc
ins
test
xchg
inc
rcl
scas
test
add
or
stc
stos
add
movs
sub
sub
mov
inc
xor
cmp
push
cmp
pop
out
out
ja
aad
cmps
sub
inc
and
movs
mov
aaa
xor
cmp
sti
int3
stos
repnz
imul
adc
inc
cs
xchg
jmp
scas
out
sub
inc
outs
iret
mov
(bad)
(bad)
mov
nop
add
and
adc
bound
and
inc
sub
and
cmp
push
mov
mov
movs
sub
icebp
enter
fst
mov
pop
sbb
sbb
mov
leave
inc
rcr
outs
xchg
sub
stos
outs
test
dec
sbb
push
mov
inc
or
jecxz
dec
dec
imul
xor
(bad)
and
sar
in
and
or
inc
pop
repz
les
ins
add
jno
retf
es
inc
jl
add
mov
push
in
shr
add
xchg
pop
xchg
int
ret
cmps
sbb
ret
xor
js
mov
stos
lods
pop
or
aad
push
daa
add
adc
fs
in
fisub
cmps
mov
data16
xor
push
mov
fcom
scas
jle
fwait
iret
jle
popa
ins
fcomp
pop
jmp
fcomp
sbb
movs
lods
ds
popf
imul
xor
dec
imul
int
xchg
cmp
ret
xchg
mov
test
ror
push
scas
add
push
sub
xor
js
iret
adc
or
mov
xlat
mov
mov
pop
retf
xchg
jae
mov
stos
enter
push
fcomp
xor
add
xchg
pop
retf
ret
xchg
into
in
xchg
dec
fs
out
fsubr
cmp
adc
bound
rol
int
iret
add
xchg
jmp
mov
xor
jp
std
scas
and
dec
(bad)
push
sar
movs
add
add
(bad)
fistp
push
cmp
jle
cmp
test
bound
add
and
dec
int
sub
xor
add
test
arpl
or
adc
jmp
pop
add
adc
out
dec
adc
push
movs
sub
mov
push
sbb
sub
out
mov
movs
sub
call
cmp
fwait
dec
mov
aad
ins
add
pop
popf
mov
mov
adc
vmaxsd
inc
xchg
adc
xchg
sbb
dec
inc
xor
xor
sbb
mov
sbb
push
push
jge
inc
cmps
fs
leave
pop
aaa
add
xchg
pop
sahf
sbb
ins
adc
mov
add
cmp
and
push
jmp
mov
mov
push
out
push
dec
psubsb
xchg
ins
ins
outs
call
dec
pop
retf
cdq
sub
dec
mov
(bad)
movs
in
sub
test
jge
and
inc
test
imul
cmp
inc
pop
lods
xor
cld
xchg
movs
xchg
dec
cdq
dec
test
mov
mov
or
dec
retf
and
cmps
mov
test
inc
mov
popa
(bad)
fcom
add
push
mov
test
in
ins
push
jo
lods
cdq
mov
mov
into
pop
adc
ret
xor
dec
mov
fisubr
add
(bad)
lock
pop
in
iret
iret
fwait
inc
push
push
mov
xchg
popf
sti
xlat
call
push
into
cmc
enter
stos
adc
xchg
scas
cmp
mov
fdivr
push
dec
jl
push
push
jmp
(bad)
faddp
daa
jb
inc
ret
in
or
push
jmp
cmp
clc
push
mov
sub
xchg
inc
std
cdq
cmps
add
push
inc
inc
adc
xor
push
nop
push
les
sbb
or
outs
sbb
into
ja
sub
jp
jnp
xchg
mov
xchg
mov
pop
jae
sub
push
(bad)
loope
faddp
adc
dec
sub
out
jp
adc
cld
push
push
cmp
daa
ficomp
inc
leave
mov
jp
adc
test
cli
mov
ds
cmp
jae
das
add
aas
fs
cmc
fcom
dec
scas
imul
fs
xchg
imul
call
cmps
sbb
or
add
mov
mov
aam
xchg
daa
int
push
stc
fild
shl
xchg
adc
push
loope
xchg
mov
jb
add
int
cld
add
and
adc
fwait
pusha
fwait
mov
test
xchg
ins
sub
xor
out
lea
mov
retf
dec
fimul
ds
dec
adc
(bad)
retf
fcomp
jo
push
push
mov
push
cmp
cmps
sbb
(bad)
dec
shl
mov
aad
sbb
dec
(bad)
loop
out
retf
vpmuludq
fild
sbb
scas
call
popa
cmp
outs
jno
les
neg
or
adc
rcr
das
movs
je
fsubr
pop
mov
jne
inc
ror
ja
sub
jmp
lea
fidiv
xchg
mov
xchg
push
push
icebp
rcr
imul
xchg
push
or
xlat
xor
sub
out
jmp
(bad)
popf
cmp
cmp
sbb
sbb
stos
sbb
mov
in
les
xchg
mov
and
cs
push
cmp
jnp
movs
and
rol
iret
mov
arpl
out
jecxz
hlt
push
jne
pop
jns
cmp
data16
pop
in
mov
cmp
imul
call
nop
mov
pop
dec
mov
adc
addr16
dec
xrelease
mov
fdivr
xchg
push
push
in
xchg
cmc
add
xchg
(bad)
call
cmp
pop
pop
push
mov
mov
mov
mov
jmp
add
mov
(bad)
call
out
(bad)
loop
cwde
call
out
packssdw
scas
xchg
mov
cmp
ds
push
mov
jg
scas
fs
in
or
mov
jmp
cmp
and
leave
into
or
xchg
das
cmp
push
pop
call
cmc
add
push
mov
add
xor
repnz
rcr
sbb
fsub
stos
jno
xchg
enter
int3
sub
loope
retf
popa
pop
mov
push
je
lods
sbb
xchg
jg
lods
and
sti
dec
test
jle
cld
mov
jge
mov
cmps
cwde
dec
cmp
(bad)
inc
outs
mov
xchg
jnp
mov
sub
dec
jnp
call
loop
out
sub
adc
adc
inc
bound
add
bound
inc
arpl
xchg
into
dec
aaa
scas
sub
and
fisubr
paddw
inc
xchg
aaa
xchg
push
retf
push
jmp
arpl
aam
pushf
ret
movs
movs
ins
arpl
push
inc
jb
sbb
inc
call
jl
xchg
nop
jo
popf
adc
in
mov
pushf
dec
push
stos
push
jmp
(bad)
cmp
jb
push
push
in
imul
fld
sbb
inc
jl
fldenv
cmps
aad
push
inc
mov
aas
xchg
cmp
cmp
(bad)
push
xchg
add
mov
test
test
inc
into
aam
fiadd
ins
cmps
sub
inc
(bad)
jo
pop
xor
aad
js
sub
mov
inc
(bad)
cmc
xchg
sbb
popa
in
(bad)
inc
inc
adc
pop
call
xchg
out
mov
enter
in
add
repz
ins
iret
xor
xor
mov
mov
jne
jg
xchg
mov
jg
mov
push
pop
out
mov
mov
arpl
scas
out
mov
push
retf
pop
hlt
mov
jecxz
push
frstor
sub
loopne
and
fcom
aam
test
xor
cmp
(bad)
stc
shl
mov
pop
cli
mov
rcr
and
ja
xor
adc
dec
sbb
(bad)
arpl
cs
push
add
sub
je
shl
xlat
mov
fs
add
repz
dec
and
add
push
and
push
push
cld
nop
clc
out
pushf
cs
pop
enter
movs
lds
dec
pop
dec
jne
shl
add
inc
retf
popf
movs
mov
scas
add
cmp
xor
cmp
jg
or
sahf
fs
fdivrp
in
cli
shl
add
jecxz
lods
lock
push
fs
sbb
xchg
inc
aaa
pop
hlt
in
mov
shl
mov
hlt
inc
sbb
push
out
xchg
out
mov
mov
pop
iret
ret
mov
jns
jne
icebp
movs
out
cmc
data16
ins
iret
and
xlat
lds
lea
mov
xlat
xor
ffree
adc
jne
int
inc
sub
pop
loop
inc
iret
and
push
popa
mov
sbb
dec
xchg
cdq
outs
sti
mov
pop
sahf
aaa
int3
jg
xchg
jns
and
lods
push
bound
pop
push
movs
add
fcmovnu
nop
aad
sub
dec
push
or
jp
jmp
fs
xchg
ror
and
das
cmp
and
mov
enter
jmp
xor
jecxz
mov
sbb
nop
mov
pop
push
fiadd
imul
xchg
cld
inc
push
stc
cs
loopne
mov
mov
(bad)
add
popf
mov
cmp
inc
gs
push
data16
dec
mov
pop
mov
cmp
fisttp
jge
sbb
dec
mov
sbb
jnp
fsub
test
jle
xchg
add
cmp
pop
call
mov
jo
ss
adc
aas
popa
pop
aam
sbb
sub
out
popa
cld
mov
stc
outs
sar
mov
cmp
outs
dec
(bad)
fdiv
xor
jge
fisubr
jmp
mov
sbb
jge
pop
dec
retf
inc
mov
mov
xor
mov
jmp
cdq
jmp
js
add
or
es
in
mov
(bad)
mul
dec
mov
stc
jl
sub
ret
cld
callw
inc
ds
jecxz
cdq
jge
xchg
jno
mov
or
ret
movs
xor
test
sbb
adc
js
jns
ins
repnz
pop
and
(bad)
xor
sbb
clc
out
jne
ret
mov
push
pop
popf
push
js
data16
fbld
mov
dec
int
pop
test
jb
fmul
mov
sbb
push
push
ins
mov
leave
inc
(bad)
mov
fiadd
xor
sub
mov
mov
stos
retf
push
pop
xor
nop
int
and
ins
shr
xor
enter
clc
mov
imul
pushf
fidivr
rol
mov
mov
imul
add
sub
scas
(bad)
fisttp
jecxz
pop
mov
scas
add
mov
fnstsw
ret
repnz
(bad)
imul
in
neg
imul
dec
sahf
aad
and
nop
inc
pop
mov
(bad)
lea
dec
jb
jbe
xor
mov
psubusw
js
cmps
push
clc
leave
pop
or
ja
or
sub
pop
cli
cmc
xor
(bad)
push
mov
jg
cmp
mov
int
retf
mov
loop
lods
fld
sbb
inc
ss
cmp
push
stc
(bad)
cdq
not
mov
ret
inc
hlt
adc
xor
mov
fistp
out
loop
or
mov
rcl
sub
mov
or
xor
les
adc
add
fdiv
or
pop
(bad)
nop
les
scas
loope
addr16
sbb
sub
lock
mov
mov
mov
jmp
xchg
outs
and
sub
mov
pop
mov
fwait
leave
call
or
out
cmp
outs
sub
sbb
test
mov
dec
and
jo
cmp
xchg
and
mov
xchg
xor
cmc
mov
pop
in
inc
mov
lods
add
adc
xchg
lods
repz
pop
dec
arpl
mov
(bad)
mov
ficom
adc
lds
cs
push
imul
in
dec
dec
test
and
stos
mov
ins
imul
imul
add
retf
cmp
push
mov
lods
jecxz
inc
ret
retf
in
ins
mov
add
mov
lock
sbb
aam
jmp
xor
nop
(bad)
xor
pushf
sub
fisttp
jae
repz
adc
jae
pop
out
jl
fwait
push
pop
dec
xlat
pusha
leave
je
je
retf
or
pop
jle
rol
lods
test
cmp
jo
mov
mov
loopne
or
xor
cmc
dec
xor
xchg
adc
cmp
neg
cmp
push
add
ja
(bad)
mov
pop
or
or
dec
arpl
ins
arpl
cwde
lds
(bad)
(bad)
fcmovne
sub
(bad)
cld
fstp
out
daa
add
cmps
popf
loop
mov
out
mov
cs
fs
jbe
pushf
(bad)
jle
xor
mov
adc
int3
nop
out
or
pop
xor
dec
mov
es
arpl
das
fwait
sbb
push
aad
jmp
arpl
pop
mov
pop
dec
xchg
inc
int
sar
cdq
imul
or
add
and
jp
jo
push
cmp
xchg
mov
pop
arpl
jo
push
jbe
mov
cmp
mov
adc
and
cmp
sti
xor
mov
out
adc
mov
shr
fisttp
sbb
test
jp
or
add
xchg
in
or
cmp
pop
push
fcomi
xchg
sahf
dec
repz
sub
mov
push
adc
xor
dec
ret
shl
sub
mov
sub
inc
daa
arpl
cmp
inc
shr
bound
imul
pop
bound
aas
int3
hlt
push
jge
outs
mov
test
retf
sub
pop
xor
enter
sbb
xchg
stos
xchg
imul
sub
adc
lods
popa
cmp
mov
and
xor
sub
sub
enter
and
push
imul
clc
push
add
mov
lahf
cmps
cmc
or
in
iret
pushf
sub
mov
not
in
fadd
pop
imul
leave
sub
call
scas
test
jbe
iret
push
inc
mov
jl
enter
int
jno
adc
nop
push
int
(bad)
(bad)
mov
fwait
add
or
xor
retf
int
call
or
iret
lea
jo
adc
pop
fnstsw
(bad)
or
call
add
lock
adc
sbb
mov
xchg
(bad)
loop
jg
mov
push
jne
push
imul
ret
(bad)
(bad)
or
fisttp
add
cli
pushf
cli
sbb
hlt
pop
xor
mov
lods
pushf
je
loop
pop
aas
push
in
mov
cs
xor
retf
int3
pop
sbb
(bad)
mov
cmc
jp
mov
aam
fiadd
cs
out
repz
add
mov
ret
push
mov
aaa
adc
fmul
xchg
pop
cmp
or
sbb
out
xchg
(bad)
in
xor
sub
or
pusha
jbe
ins
scas
outs
xchg
dec
(bad)
outs
loope
fisttp
not
xchg
les
je
xor
mov
imul
outs
sti
fcmovu
jnp
in
dec
jo
out
cmp
jbe
mov
cld
loopne
fld
push
aaa
neg
test
push
push
cmps
push
pop
dec
adc
cmps
ins
pop
cmp
xchg
int
out
pushf
xchg
call
(bad)
adc
lea
cdq
push
dec
inc
jne
aam
dec
jb
mov
and
mov
ss
jl
ret
xchg
dec
sub
cs
fimul
(bad)
pop
out
pushf
js
or
movs
mul
popa
cmp
shl
sub
jmp
jp
or
push
test
jae
iret
pop
jl
cmps
(bad)
adc
push
sbb
adc
retf
inc
enter
mov
and
retfw
gs
xchg
or
add
xor
and
adc
ja
xchg
sub
or
call
js
aas
imul
mov
jns
xchg
jl
sub
sbb
pop
scas
add
in
cmp
es
ins
loop
xor
xchg
pop
inc
adc
dec
adc
popf
mov
push
inc
aad
outs
jmp
and
popf
cmp
mov
mov
adc
cmp
push
jae
sub
adc
dec
repnz
mov
pop
push
sbb
cmp
pop
xor
adc
inc
and
mov
jbe
ror
nop
jl
out
fmulp
add
outs
arpl
mov
popf
mov
jns
mov
popf
cmp
aam
out
jl
js
xor
add
inc
imul
inc
add
lods
or
or
mov
fdivr
add
jno
push
and
mov
mov
in
pusha
daa
loope
repz
inc
or
jge
dec
mov
adc
mov
daa
sbb
push
(bad)
js
sbb
fstp
dec
inc
push
xchg
pop
out
je
sbb
test
test
outs
popf
(bad)
jae
into
icebp
popf
mov
and
test
sub
or
cli
test
loop
push
sbb
sti
dec
imul
std
adc
add
iret
call
jmp
imul
fistp
add
add
sub
popa
cmp
(bad)
mov
stos
push
mov
pop
cmp
jnp
pop
pop
mov
leave
xor
mov
div
imul
inc
push
adc
add
lea
and
aad
push
fld
cld
imul
push
(bad)
xor
pop
into
out
iret
push
push
and
in
sbb
pop
ss
xor
add
jns
add
adc
dec
xchg
loope
dec
xor
push
inc
sub
mov
out
push
xor
cmp
fmul
lahf
aam
dec
cld
adc
push
addr16
aas
in
out
scas
(bad)
call
ins
jne
ss
das
lahf
push
inc
sub
sub
mov
(bad)
adc
call
outs
aaa
push
inc
push
mov
pop
mov
sub
mov
cmp
(bad)
gs
dec
push
or
jge
and
(bad)
repz
test
adc
cmps
aam
pushf
mov
ret
push
push
in
cli
and
jo
(bad)
cmp
xchg
jl
xchg
and
pushf
inc
xchg
mov
outs
and
int
retf
std
xchg
sbb
jge
or
es
jne
test
das
(bad)
mov
out
jbe
sbb
rcl
stos
mov
test
or
ins
dec
and
mov
jnp
scas
sar
xchg
xchg
or
test
fld
je
mov
bound
arpl
push
ins
sub
mov
loopne
and
pop
shl
mov
xlat
mov
adc
sub
test
ins
test
push
scas
jle
lahf
inc
adc
aam
add
rol
cmp
pop
dec
daa
ins
movs
jmp
in
jmp
xchg
jecxz
push
jno
or
add
out
mov
cmp
cmc
call
enter
inc
cld
or
pop
sub
(bad)
sub
movs
enter
dec
loope
xor
aam
dec
mov
inc
mov
(bad)
mov
(bad)
fnop
hlt
ja
stos
xor
dec
repz
jns
add
inc
xchg
inc
adc
(bad)
fldenv
fwait
xchg
xchg
fst
les
mov
jo
add
and
add
stos
cmp
in
inc
aad
lea
cld
inc
push
retf
into
push
fwait
sub
xchg
and
dec
pop
cmps
add
mov
adc
sbb
jge
aam
in
or
xchg
pop
retf
jmp
aam
push
pop
(bad)
mov
push
shr
ficomp
push
mov
and
jno
jl
aas
add
sbb
xchg
dec
xchg
xchg
icebp
in
lea
ret
retf
pop
pop
(bad)
nop
mov
inc
ins
aaa
ins
mov
add
out
outs
mov
scas
std
sbb
dec
add
inc
mov
imul
cmp
mov
fisttp
test
cmp
inc
or
add
mov
inc
xor
cmp
jbe
not
lds
popa
mov
mov
out
je
scas
or
fist
add
sar
dec
jno
enter
cli
xor
mov
das
or
popf
jmp
bound
xchg
pushf
test
test
xchg
shl
xor
jmp
jns
int3
dec
jb
(bad)
mov
add
gs
xor
int
scas
add
mov
jmp
sahf
xor
mov
pop
pop
cmp
cli
clc
mov
das
repnz
fstp
test
mov
data16
or
mov
aaa
fmul
gs
mul
(bad)
sbb
xchg
aas
sub
frstor
mov
movs
and
(bad)
adc
xchg
adc
mov
push
xchg
mov
adc
mov
fwait
pop
add
mov
ja
(bad)
scas
push
popa
inc
sbb
jae
retf
mov
pushf
dec
fwait
out
push
inc
sub
push
sbb
pop
xor
xchg
fist
imul
fwait
pop
xor
jg
fdiv
adc
test
cmp
adc
(bad)
pmulhuw
fwait
push
stos
cwde
sbb
test
jbe
into
push
ret
push
cmps
push
movs
repnz
adc
inc
scas
test
cli
jmp
cmp
inc
data16
ds
pop
sbb
mov
sub
(bad)
sar
into
push
(bad)
in
mov
jae
retf
out
cli
cmp
daa
xchg
rcr
push
into
mov
dec
jbe
scas
lods
cld
jl
mov
lock
adc
xchg
gs
icebp
inc
idiv
addr16
xchg
leave
mov
dec
fstp
mov
jno
int
sahf
push
xor
jl
sbb
aad
out
xor
fisttp
cdq
inc
jge
in
lea
retf
pop
pop
leave
imul
push
in
out
push
lods
jne
fwait
rol
into
pushf
aad
xchg
sub
inc
cmp
pusha
(bad)
(bad)
mov
add
imul
icebp
dec
sbb
fld
mov
mov
into
push
xchg
leave
push
stc
adc
ins
cld
xor
mov
sbb
call
and
fistp
push
sti
pop
test
addr16
mov
or
loopne
sahf
push
out
inc
adc
mov
mov
retf
aas
fwait
repz
nop
sub
add
loopne
add
test
call
test
sbb
sbb
push
out
pop
icebp
xchg
fild
sbb
and
popf
out
pop
(bad)
xchg
cmps
cmps
push
xchg
sbb
std
cmp
push
push
sbb
push
inc
lock
cmp
fidiv
push
popf
shl
adc
xchg
pop
push
je
imul
arpl
test
popf
std
mov
adc
call
retf
mov
sub
push
ss
push
cmp
sti
loopne
(bad)
mov
xchg
mov
pop
xchg
adc
fdivr
fwait
cld
or
das
adc
enter
adc
test
jmp
(bad)
scas
(bad)
jb
add
out
cmp
add
repz
int
adc
out
(bad)
out
adc
push
int3
xchg
addr16
add
add
jb
pop
lock
lods
stos
push
(bad)
xchg
xchg
repnz
sbb
xchg
ins
jmp
sub
xchg
xor
mov
mov
inc
or
popf
loop
icebp
xor
xor
loopne
push
shl
repnz
mov
fs
adc
inc
ja
mov
out
inc
xchg
cwde
mov
xchg
js
cmp
cmp
test
mov
hlt
shl
adc
dec
imul
mov
jle
xchg
mov
inc
jp
adc
dec
enter
mov
and
mov
mov
rcr
out
cmp
test
(bad)
sar
pop
retf
add
jo
call
jl
lds
arpl
imul
shl
dec
mov
dec
sub
in
sub
mov
inc
jne
loope
jae
out
cmp
jb
pop
ds
sbb
sahf
adc
jmp
(bad)
sbb
loop
sub
add
xchg
add
pop
iret
sbb
mov
pop
mov
cdq
retf
jge
cmp
(bad)
sub
lods
aad
fistp
mov
leave
add
scas
mov
xor
pusha
adc
sbb
lahf
fisub
mov
pop
add
push
or
scas
xor
cmp
xor
jmp
jmp
shl
(bad)
push
dec
inc
(bad)
jbe
outs
mov
xor
push
das
push
(bad)
xchg
enter
pop
ins
(bad)
and
push
aad
jp
gs
cmp
xor
sbb
inc
out
cld
mov
js
mov
jo
lock
out
push
sub
push
push
repnz
sbb
mov
cmp
push
pop
lea
cmp
icebp
in
aad
daa
or
test
jns
sar
lds
hlt
(bad)
clc
jne
pop
dec
mov
nop
retf
jecxz
es
clc
mov
cmps
test
xchg
or
xor
inc
mov
cmps
push
int3
mov
xor
jnp
aaa
push
aam
cmp
aas
pusha
dec
pop
mov
sti
jo
mov
aas
mov
and
neg
mov
jae
out
ss
jbe
mov
fucompp
rcr
push
jbe
push
aas
mov
in
xor
xchg
dec
jp
(bad)
adc
dec
(bad)
shl
xchg
cmp
cmps
xor
fldl2t
pop
ret
inc
stc
pop
jge
les
hlt
fmul
mov
xchg
push
aam
(bad)
mov
and
xchg
shl
add
adc
clc
inc
mov
mov
rol
mov
adc
lahf
jae
loope
js
mov
mov
hlt
push
xlat
dec
icebp
sbb
jb
adc
pop
add
cwde
jmp
or
sbb
(bad)
and
push
pop
lods
mov
leave
cwde
jno
sbb
adc
cwde
mov
sbb
int3
push
push
cwde
sbb
sti
xor
inc
mov
and
adc
cmp
mov
cmp
in
ss
popa
imul
jle
sub
stos
mov
lahf
repz
cmp
mov
fcomp
in
(bad)
in
ins
mov
cmp
jmp
repnz
int3
mov
push
ins
popa
sub
fs
sub
inc
cs
mov
fistp
push
call
loopne
test
out
pop
mov
sub
jno
(bad)
in
mov
aam
mov
push
jne
xchg
adc
daa
pop
push
push
xor
adc
pop
scas
mov
es
retf
call
int3
aas
loope
jp
cmp
mov
adc
pop
repnz
dec
js
sbb
dec
outs
cmps
daa
gs
pop
mov
js
sbb
rcl
mov
mov
loopne
fucomip
mov
inc
xchg
rol
push
enter
repnz
aam
mov
retf
shr
call
pand
mov
rol
adc
mov
sbb
xor
adc
cmp
mul
jp
test
sub
lock
lods
xchg
push
cmp
test
std
lea
sti
xlat
push
mov
sti
cli
les
push
loopne
cmp
test
push
inc
ret
xchg
pop
sbb
js
mul
aaa
loop
cmp
pusha
adc
and
mov
dec
push
out
pop
aaa
sub
mov
mov
div
add
gs
bound
int
popf
cmp
inc
aaa
js
mov
xchg
out
fcmove
and
and
pusha
push
dec
mov
arpl
or
jmp
mov
or
out
leave
test
ror
or
icebp
in
xchg
mov
movs
ins
jmp
fild
shr
int3
cmp
mov
ret
ret
mov
mov
mov
call
inc
dec
push
add
inc
push
rcl
cmps
mov
or
and
jo
xchg
mov
imul
popa
lock
test
or
aam
jbe
fidivr
es
aaa
pop
stc
sar
sub
ret
push
sub
repz
push
mov
sbb
rep
inc
mov
xor
mov
sahf
cmp
cmp
jg
push
sbb
push
pop
mov
add
adc
xchg
icebp
push
inc
sub
xchg
fsubrp
adc
jnp
inc
movs
mov
repz
add
jp
adc
js
push
out
pushf
dec
mov
mov
jbe
dec
fs
sbb
daa
pusha
push
bound
push
hlt
push
stos
inc
jo
jbe
mov
bound
in
in
jge
lahf
enter
int
sub
or
mov
mov
cmp
daa
sub
ins
mul
mov
xchg
test
push
cmc
repz
adc
fmulp
ret
fcmovnu
cdq
adc
les
ins
popf
push
and
mov
out
xor
retf
sahf
fisttp
push
lahf
retf
add
mov
jne
movs
push
movs
hlt
fild
mov
das
sar
aaa
pop
and
adc
movs
pushf
adc
jmp
push
imul
stos
cmc
jns
sbb
fistp
jle
inc
repz
mov
mov
mov
lea
shr
das
retf
jl
sbb
cwde
sub
cmp
inc
clc
shl
enter
fwait
jecxz
adc
loop
scas
repz
jg
fcmovu
loop
push
xor
mov
cwde
push
aaa
dec
mov
pop
inc
sbb
and
and
popa
bound
mov
retf
xor
sub
jae
pop
lock
fadd
sar
add
or
adc
sbb
scas
(bad)
fldcw
int
pop
getsec
mov
push
push
cmp
push
nop
pop
shl
lock
jl
mov
pop
mov
int
fwait
fwait
xchg
call
jl
imul
aam
repz
addr16
lods
and
sub
push
push
push
mov
inc
frstor
inc
cdq
(bad)
mov
add
hlt
mov
xor
leave
and
not
enter
inc
loope
push
movs
scas
stos
mov
popf
ins
mov
ins
cs
(bad)
xor
add
xor
pop
inc
mov
cmc
adc
into
sbb
cmp
int
mov
sub
or
add
lahf
and
inc
mov
js
ins
sar
into
in
gs
sbb
inc
(bad)
jmp
push
xchg
aam
push
enter
es
repz
xor
jecxz
jnp
mov
jns
mov
mov
sbb
mov
cli
sub
jns
push
scas
jge
retf
mov
repnz
push
enter
xor
xor
xor
mov
jo
aad
lea
push
fcomp
dec
inc
int3
rcr
je
pop
xor
sub
sub
mov
aam
mov
push
es
cmp
adc
mov
test
push
xor
rcr
ss
in
aad
adc
lods
leave
push
retf
sar
dec
inc
cld
imul
jg
hlt
mov
or
cmps
or
dec
jo
je
in
push
sub
fdivrp
outs
cmp
test
fs
or
rcl
sbb
ret
pop
je
cs
pop
cmp
mov
adc
test
aaa
jb
inc
lahf
stos
out
repz
or
imul
sbb
sbb
ins
frstor
outs
clc
ja
ret
loopne
lea
movs
mov
pop
mov
inc
lea
bound
mov
xchg
into
sahf
or
dec
jp
leave
sub
cwde
xchg
mov
ss
int3
and
ja
loopne
xchg
ret
mov
mov
adc
cli
jbe
sbb
arpl
cmc
xchg
stos
rcr
loope
pop
sahf
jae
add
test
sbb
pop
(bad)
int3
pop
push
push
test
jmp
pop
push
loop
xor
or
arpl
xchg
push
call
dec
push
cmp
out
cmp
shr
pop
adc
jge
xchg
sub
fstp
fwait
jecxz
outs
dec
cmp
gs
push
fist
add
mov
and
call
sbb
and
fs
es
mov
xor
xor
jbe
inc
sbb
pop
icebp
ja
jge
mov
(bad)
mov
add
jns
cmp
cmc
int
mov
xchg
shl
mov
mov
int3
or
push
jmp
mov
mov
ins
call
mov
ficomp
outs
ds
adc
pop
ror
dec
lea
sbb
push
iret
es
ja
push
xor
fsub
or
jl
cmp
jns
jge
mov
xchg
fdivr
dec
stos
inc
inc
mov
sub
xchg
pop
and
cld
arpl
pop
sbb
push
pop
mov
inc
imul
and
push
out
sbb
outs
(bad)
mov
movs
icebp
rcr
shl
or
mov
mov
pop
xchg
jge
inc
add
inc
out
and
ins
or
js
push
ret
push
mov
jnp
push
inc
jno
outs
xor
push
dec
ins
or
xchg
pop
daa
push
adc
stos
out
ins
test
cmps
add
mov
jmp
mov
mov
rcl
and
mov
sub
in
leave
shl
ins
arpl
retf
arpl
shl
scas
inc
push
sub
ds
adc
aas
or
xor
ficomp
push
loopne
and
sub
repnz
push
and
pushf
push
mov
sub
call
and
popa
hlt
jge
shl
movs
scas
lahf
push
(bad)
(bad)
loopne
aam
push
and
and
scas
cdq
push
inc
out
inc
jo
lock
sub
or
cwde
imul
sbb
fstp
sbb
mov
mov
lods
hlt
xchg
add
jae
pushf
pop
rcl
aam
outs
sub
xor
inc
mov
movs
in
cmp
rol
daa
(bad)
ss
jmp
fidiv
lds
out
ss
xor
cmc
ins
inc
pop
pop
push
pop
mov
pop
sub
enter
(bad)
ret
sbb
clc
lods
adc
call
imul
lahf
stos
popa
adc
mov
fwait
adc
clc
popf
iret
mov
cld
int3
hlt
jmp
sbb
jmp
xchg
push
jnp
int
mov
icebp
dec
or
fs
push
cld
imul
adc
inc
sub
jp
or
imul
icebp
call
add
xchg
mov
xchg
mov
inc
or
and
mov
retf
jnp
mov
sub
(bad)
xchg
ins
lahf
mov
push
push
adc
xchg
pop
jge
inc
pop
sar
sub
inc
inc
sub
cmps
or
rol
jne
(bad)
jno
loopne
iret
(bad)
imul
mov
xchg
jno
or
cmp
pop
adc
or
cld
scas
push
sbb
xchg
out
mov
lock
mov
shr
lods
jb
or
bound
xchg
popf
cld
xlat
loope
cli
call
mov
cmps
inc
jge
or
dec
aad
movs
mov
xchg
out
inc
or
daa
movs
(bad)
pop
scas
icebp
pushf
loopne
pushf
push
(bad)
jmp
rcr
mov
mov
jne
push
mov
jmp
nop
ins
inc
test
xchg
cmp
mov
sub
cld
mov
mov
sti
(bad)
mov
jle
sub
repnz
mov
fbstp
dec
push
jo
adc
push
es
cwde
xchg
xchg
les
lahf
hlt
(bad)
test
ret
xchg
xchg
jbe
sbb
inc
bound
xchg
pop
jb
(bad)
adc
or
sub
jb
push
test
loope
pushf
xchg
enter
mul
inc
adc
inc
sbb
xor
pushf
push
ins
inc
lea
cli
xor
cmp
mov
adc
or
dec
add
repz
and
fild
dec
outs
pop
mov
cmps
dec
inc
pop
in
outs
in
rcr
idiv
scas
push
push
cs
cmp
push
cmp
enter
adc
dec
xchg
push
xchg
sbb
out
imul
jb
and
xchg
daa
push
imul
add
sbb
sbb
out
out
mov
xor
sbb
mov
sub
lea
cmc
jmp
mov
ins
mov
inc
out
sub
gs
pop
adc
(bad)
push
dec
data16
adc
outs
(bad)
sbb
fidivr
data16
mov
stos
xchg
push
or
pusha
pop
push
fcomp
push
xlat
or
jmp
xchg
repz
jb
fcmovne
lock
aas
dec
dec
cmp
push
and
push
push
dec
jmp
test
(bad)
fisttp
stos
outs
idiv
mov
fst
mov
sub
je
in
push
jmp
cmp
shl
and
aaa
mov
(bad)
xor
dec
jb
mov
jl
add
mov
scas
sbb
xchg
imul
js
xchg
cwde
mov
inc
out
test
(bad)
lahf
enter
(bad)
mov
push
loope
aaa
add
ret
fwait
clc
lea
and
xlat
scas
out
adc
jmp
sbb
inc
jmp
push
shl
rol
stos
cld
imul
enter
adc
lods
repnz
sbb
sbb
and
inc
xchg
inc
dec
and
clc
js
sbb
rcl
mov
cmps
inc
mov
out
inc
mov
out
jo
fwait
pop
mov
adc
in
dec
(bad)
cli
mov
push
retf
jb
rcr
mov
xchg
and
push
repz
clc
pop
imul
das
mov
mov
xor
or
test
xchg
jae
enter
shr
push
js
xchg
out
lea
xchg
push
pop
in
adc
imul
sbb
outs
sbb
popf
push
outs
cmp
pop
adc
adc
mov
dec
test
jmp
arpl
mov
mov
iret
and
retf
mov
sbb
loope
mov
int3
outs
fs
jb
popf
out
or
pop
cmp
mov
pop
lock
lahf
aam
mov
aas
imul
cmp
inc
mov
dec
jg
push
xchg
imul
sub
aad
std
sub
daa
push
bound
fimul
adc
arpl
cmp
sbb
pop
sbb
mov
mov
icebp
fsubr
push
imul
test
iret
cdq
dec
fidivr
popa
mov
ja
and
(bad)
jg
stc
jo
mov
into
ffree
cmp
call
or
icebp
push
call
push
das
or
(bad)
fldcw
hlt
push
fs
mov
push
mov
and
adc
mov
add
(bad)
and
movs
dec
xor
and
js
dec
inc
jge
outs
js
sahf
arpl
ins
paddw
adc
inc
imul
clc
cdq
jmp
adc
sahf
push
imul
adc
cmp
pop
bound
mov
fisttp
sbb
enter
mov
call
inc
sbb
lods
adc
int3
or
and
jp
mov
in
std
lahf
inc
or
adc
pop
cdq
jno
dec
ds
pop
repz
mov
imul
out
sub
lock
lahf
loope
jnp
mov
xchg
pop
cmp
adc
pop
bound
mov
xor
mov
inc
repnz
dec
adc
push
cmp
div
and
aam
sub
retf
fistp
jp
pop
ficomp
shl
adc
sub
xor
pop
mov
and
mov
mov
dec
arpl
outs
jne
xchg
inc
push
(bad)
xor
push
ficom
and
outs
cmp
std
js
std
mov
dec
(bad)
sub
cli
ror
call
pop
jns
mov
pop
ja
cmp
mov
out
stos
test
call
dec
pop
ins
dec
xor
cmp
imul
dec
push
repnz
lods
adc
pop
arpl
dec
or
push
daa
xchg
adc
movs
ins
mul
shr
jge
popf
mov
dec
pop
mov
mov
pop
jmp
call
data16
enter
mov
push
repnz
cwde
pop
imul
pop
pop
call
mov
mov
cdq
xrelease
or
ds
dec
cmp
mov
adc
xchg
push
int
cmp
test
(bad)
or
stc
addr16
enter
iret
mov
or
rcl
fwait
(bad)
pop
xchg
ins
push
jp
imul
dec
arpl
loop
sbb
cli
dec
and
mov
les
xor
stc
enter
std
mov
fdiv
cld
sub
hlt
pop
iret
retf
clc
stc
xchg
in
pusha
mov
push
dec
mov
jge
fcmovnbe
movs
pop
xchg
push
cmp
jle
and
cmps
out
push
popf
scas
shl
push
enter
ss
dec
mov
or
repz
inc
ins
pop
punpcklbw
imul
pop
sub
ret
xor
add
aad
fucom
mov
test
ret
outs
dec
jno
mov
lods
les
(bad)
popf
mov
lock
xor
jp
jg
addr16
or
jecxz
or
cwde
and
jmp
xchg
je
fisub
sbb
jae
ins
fwait
lds
add
pop
fsin
add
xor
jns
sbb
bound
xor
pop
xor
int
cld
rcr
sub
adc
sar
push
das
lods
inc
inc
mov
or
ja
iret
and
js
iret
cs
push
pusha
fcmovnbe
or
cmps
test
loope
cmp
loop
mov
cmps
out
inc
std
jge
push
inc
bound
push
call
xchg
jno
mov
loope
mov
jns
movs
ret
movs
ja
push
shl
or
fisttp
shl
shl
xlat
mov
push
mov
stc
out
push
shl
loope
fidivr
adc
jae
inc
mov
jo
add
xchg
cmp
cld
sti
repz
cmp
sti
push
xchg
ret
int
mov
fidivr
push
loopne
rcl
mov
jmp
adc
mov
out
cmc
cli
ss
cmp
cmps
jg
stos
addr16
das
xor
mov
adc
jl
pop
push
cmps
in
cld
cmc
in
add
iret
ffree
jge
lods
mov
in
mov
int3
inc
mov
xor
cmps
adc
mov
(bad)
(bad)
cmp
imul
call
jmp
inc
fisubr
inc
mov
sahf
int3
cmp
mov
mov
add
(bad)
jo
imul
jecxz
add
pop
mov
pop
push
mov
out
xor
js
xchg
test
(bad)
jnp
stos
loop
test
push
imul
inc
cmp
pop
pop
xor
popa
retf
pusha
add
push
aaa
jb
add
adc
xor
fsubp
pushf
dec
sbb
iret
div
pop
(bad)
mov
iret
xor
stos
or
jmp
pop
imul
sahf
lea
popa
cmp
xchg
cmp
sub
push
cmp
movs
adc
inc
jb
mov
ja
xsaves
hlt
or
fs
xor
xor
std
pop
pushf
adc
xchg
retf
inc
and
xchg
xchg
ss
jge
push
(bad)
sar
enter
mov
mov
mul
sub
dec
jo
adc
pop
push
lahf
iret
clc
lock
jne
or
or
not
leave
or
inc
xor
rol
jle
clc
ds
jmp
imul
or
and
push
jbe
loop
mov
push
mov
ficom
nop
(bad)
out
test
movs
sar
cmp
add
mov
or
sbb
cld
and
fsubr
xchg
mov
aad
xchg
cmp
scas
pop
dec
jns
ja
cmp
std
pop
inc
shl
jle
out
cmp
test
(bad)
adc
cdq
std
call
and
sahf
xor
shr
fadd
clc
jno
jno
xchg
pop
fmul
mov
cwde
enter
cmp
mov
cdq
sbb
lods
clc
pop
mov
xor
call
add
cmp
fmulp
or
xor
lea
test
shl
daa
repnz
pop
mov
adc
mov
adc
mov
adc
jo
sub
mov
jo
xchg
fstp
call
push
nop
out
add
inc
mov
je
fcomp
into
pop
dec
mov
dec
scas
test
cs
jmp
mov
(bad)
leave
in
and
nop
xchg
jg
ret
inc
mov
loope
imul
stos
lahf
jmp
sub
mov
rcr
or
lods
or
cwde
jg
jle
mov
sub
popf
(bad)
hlt
popa
inc
jp
xor
push
cld
push
out
lds
pop
bound
xor
clc
(bad)
xor
nop
ds
mov
inc
ret
ret
push
mov
out
jle
pop
xor
xor
in
or
mov
xchg
and
bound
pop
scas
neg
inc
adc
cwde
test
in
cwde
mov
jle
ja
mov
into
mov
das
aad
mov
pop
scas
xor
pop
ins
sub
mov
mov
sti
inc
push
sub
sub
inc
adc
adc
jge
xchg
pushf
xchg
adc
(bad)
ja
jle
mov
sub
movs
mov
or
movs
ds
idiv
(bad)
mov
ror
and
pushf
gs
lahf
(bad)
cld
and
stc
add
sbb
ja
pop
retf
or
dec
jne
sbb
test
pop
movs
pop
in
es
or
add
jns
xlat
mov
fsubr
pop
and
test
cmp
jbe
or
and
ficom
or
shl
aam
adc
imul
jge
xchg
jno
ret
pop
or
mov
sub
sbb
adc
inc
pop
sub
xchg
xor
inc
cmp
or
xchg
dec
inc
pop
sbb
fimul
and
shl
adc
ds
mul
or
pusha
sub
and
rcr
call
mov
dec
sub
push
pop
mov
inc
ret
hlt
cmc
jmp
inc
(bad)
or
mov
enter
cmp
out
cmps
mov
mov
test
xor
pop
adc
clc
aad
nop
mov
outs
jb
push
loop
lods
cmp
xchg
bound
popf
cmp
(bad)
push
(bad)
lock
xor
push
cmc
pop
xor
out
(bad)
stos
xor
sar
(bad)
outs
getsec
pop
jg
movs
mov
ffree
adc
lahf
stos
neg
inc
std
into
jecxz
and
pop
and
jg
mov
mov
mov
sbb
fcmovnb
repnz
rcl
or
mov
pop
imul
test
cwde
sbb
mov
adc
jl
push
sub
inc
ja
mov
int
aaa
mov
jp
sahf
jbe
cdq
xchg
ss
jmp
cdq
bound
dec
test
(bad)
mul
sbb
mov
cs
mov
adc
sahf
mov
(bad)
jo
push
jl
inc
xchg
ret
pusha
mov
jne
and
cmps
lahf
mov
adc
cmp
pop
sbb
test
rol
daa
iret
add
sub
or
call
or
mov
arpl
into
mov
retf
in
push
movs
xchg
mov
push
test
int
lea
mov
loopne
retf
iret
fsubr
jp
stc
mov
ins
cmps
(bad)
call
pop
icebp
rcl
mov
in
dec
sbb
inc
mov
push
cdq
xor
adc
pop
rol
sbb
mov
pop
rol
xchg
sub
dec
jl
imul
fld
cmc
push
mov
scas
push
mov
cmp
fild
sbb
jno
jne
popf
div
retf
mov
xor
jle
imul
xlat
mov
cmp
stc
adc
mov
fdiv
mov
je
inc
retf
ficomp
ins
push
mov
xchg
movs
retf
mov
sbb
dec
jae
lock
xchg
repz
sbb
mov
(bad)
(bad)
xlat
jae
fs
add
mov
inc
in
rcl
mov
fst
not
js
sbb
push
test
sbb
cmp
pushf
cdq
in
in
jp
push
inc
push
sub
jle
call
xchg
rcr
xor
inc
sub
dec
add
inc
mov
inc
fdiv
push
sahf
les
mov
inc
adc
movs
or
xchg
xlat
push
adc
js
or
jecxz
push
retf
jae
fisttp
call
xlat
es
mov
popa
rol
cmp
xchg
aas
mov
cmps
jge
pop
push
xchg
cmp
sbb
leave
sbb
cdq
outs
xor
add
pop
dec
sbb
adc
lock
push
lods
jno
test
mov
inc
jmp
repz
repz
push
fild
pop
xchg
jmp
inc
push
jle
out
ss
lss
and
add
inc
jp
retf
loopne
adc
dec
xor
mov
frstor
ins
out
mov
pop
jmp
and
sub
clc
das
clc
cmp
push
and
iret
call
inc
adc
xor
adc
jge
pop
cwde
ret
dec
sbb
outs
ror
call
mov
sub
add
cmp
stos
add
sbb
enter
(bad)
push
xchg
retf
xor
dec
scas
cmps
imul
sbb
in
leave
nop
sbb
dec
mov
inc
ss
stc
into
adc
lods
push
push
jle
add
ja
jbe
xor
mov
mov
pop
repnz
cwde
pushf
push
mov
cmp
fs
dec
out
hlt
(bad)
push
out
(bad)
out
in
fstp
aas
int3
push
cmp
sbb
push
xchg
xor
push
into
mov
sub
xchg
pop
jge
push
xor
(bad)
adc
ins
push
and
inc
sub
dec
repnz
test
fsubr
mov
pushf
call
or
mov
jmp
cmp
add
ins
or
xor
lods
test
adc
shl
scas
inc
ins
dec
sbb
jl
out
mov
fild
mov
mov
daa
jb
mov
pusha
ror
(bad)
jmp
or
aam
xchg
mov
popf
in
(bad)
mov
ins
and
test
dec
dec
rcl
ins
imul
and
outs
jo
jne
xor
cmp
push
cwde
mov
stos
push
inc
icebp
dec
out
inc
dec
movs
xor
dec
push
jns
repnz
xchg
add
std
in
cmp
push
repnz
jno
pop
lods
xchg
xor
popf
adc
xchg
cwde
imul
pop
ror
stc
mov
add
lods
mov
cmps
push
jmp
add
dec
inc
dec
imul
push
pop
jae
push
neg
jbe
or
jbe
call
fld
fdivr
out
cld
leave
sub
jbe
jge
fdiv
pop
cmps
cmp
(bad)
sbb
fld
shl
int3
dec
push
in
nop
ret
mov
nop
iret
test
je
pop
sub
pop
cmps
inc
retf
inc
scas
std
and
push
fldl2t
jns
inc
dec
stos
imul
fcomip
popf
xor
shl
minps
clc
sbb
mov
sbb
mov
inc
jp
and
int3
dec
aaa
jo
pop
xor
hlt
xchg
inc
push
out
fisub
mov
mov
jl
adc
popa
and
das
mov
xchg
call
outs
popf
repnz
shl
je
jecxz
adc
(bad)
jge
cmps
dec
push
dec
in
scas
pop
repnz
sahf
aaa
jp
fcmovnbe
shrd
and
test
inc
mov
or
js
imul
push
and
dec
xor
mov
ret
mov
cli
jle
pop
out
in
(bad)
test
into
out
sub
sub
push
call
test
jge
sar
pushf
retf
xchg
test
jp
(bad)
repz
push
retf
cmp
inc
jp
and
test
mov
jp
repz
pop
mov
sbb
in
js
dec
test
bound
xor
repz
in
mov
in
inc
(bad)
dec
jo
sbb
push
mov
scas
add
out
shl
add
hlt
idiv
test
mov
nop
retf
jno
pushf
xor
enter
cmp
in
xchg
fbld
push
inc
hlt
fisttp
test
pushf
imul
xchg
sbb
leave
pop
repz
sti
imul
in
in
stc
es
ret
jb
scas
cmp
ret
shl
sbb
and
lea
sbb
add
or
lods
in
cdq
movs
push
not
push
adc
out
xchg
mov
cmp
sub
jp
cmp
xchg
imul
cmc
(bad)
mov
dec
cmp
icebp
repnz
inc
aad
pop
(bad)
loop
inc
and
sahf
jg
test
sbb
enter
loop
repnz
cld
jle
ffree
call
sub
mov
xchg
jo
xor
fild
add
mov
pushf
push
cmp
sahf
mov
pusha
sar
shl
xor
xor
adc
xchg
and
mov
and
cli
add
mov
call
push
xchg
in
push
enter
adc
mov
adc
cmps
mov
cmp
popa
cdq
mov
rol
adc
adc
mov
addr16
lock
cmp
sbb
lea
aaa
jno
and
mov
inc
mov
sahf
(bad)
js
imul
cmp
(bad)
add
push
cmp
pusha
in
hlt
lea
loop
dec
sub
arpl
retf
mov
and
and
int
ja
xor
hlt
paddq
fneni(8087
popa
loopne
cmp
call
leave
lahf
arpl
mov
push
push
xchg
fstp
jle
in
cmp
mov
push
popf
jl
jp
xchg
mov
aaa
jge
push
mov
jmp
imul
sub
jmp
shl
and
dec
xor
les
mov
and
xor
iret
movs
(bad)
mov
jmp
scas
sti
movs
xchg
mov
add
(bad)
cmp
push
bswap
(bad)
jae
push
clc
sbb
xchg
pop
adc
inc
or
test
inc
ret
dec
dec
(bad)
jo
lods
ja
popa
mov
and
enter
jae
sbb
outs
xor
xchg
enter
inc
dec
push
fwait
mul
movs
add
jle
xchg
and
sub
ja
adc
adc
or
inc
jge
daa
hlt
jl
push
or
shl
sbb
into
das
mov
lods
(bad)
mov
rcr
sbb
xor
jge
ins
int3
pop
mov
sar
sub
cmps
mov
dec
aam
(bad)
pop
pop
and
outs
sbb
arpl
je
ins
fcom
mov
call
jbe
aaa
jle
scas
add
pop
pop
mov
dec
mov
retf
gs
stc
fwait
sub
xchg
or
pushf
inc
and
mov
idiv
es
sahf
rcl
imul
das
xchg
jl
xor
or
mov
mov
or
stos
ffree
mov
push
or
cmps
or
in
pop
arpl
ret
es
jecxz
cli
jmp
mov
scas
fist
enter
inc
jbe
lods
push
push
arpl
neg
mov
mov
pop
sahf
push
cmp
lock
les
mov
inc
add
imul
cmp
jo
and
rol
xchg
icebp
dec
sahf
cs
dec
pop
popa
push
int
sbb
pushf
inc
sbb
sti
test
cld
jo
hlt
or
ss
adc
sahf
mov
jg
mov
jne
cdq
and
ret
arpl
pop
jle
sub
jp
fist
pop
xor
test
mov
sbb
mov
lods
call
aas
inc
mov
imul
xchg
add
es
(bad)
lods
out
aas
(bad)
out
imul
ret
push
pop
outs
fidivr
push
cwde
lahf
xor
pop
out
and
pusha
inc
cmp
mov
cmps
pop
jp
inc
pushf
sub
lods
push
jne
out
mov
push
sbb
rcr
int
(bad)
aaa
fstp
inc
fild
pop
pop
pop
scas
test
ds
xor
ret
mov
xchg
pop
pop
or
cwde
jmp
pushf
inc
dec
or
pop
push
jl
jns
call
xchg
mov
popf
mov
pop
rcl
push
sbb
(bad)
lods
lods
fmul
imul
mov
in
sub
inc
xchg
bound
adc
add
ins
pop
cdq
mov
xchg
pop
sub
pop
add
test
cdq
mov
je
inc
mov
les
daa
call
sbb
jns
mov
sbb
out
bound
jg
mov
xor
aas
xchg
or
ins
inc
cli
sub
xchg
xor
popa
enter
test
push
rcl
jo
pop
into
div
push
jp
das
icebp
push
test
aaa
jae
fistp
imul
inc
sbb
iret
ja
push
mov
push
lods
cmp
push
sar
mov
shr
xchg
imul
mov
(bad)
sti
sbb
jbe
out
fs
adc
call
fst
push
pop
xchg
sbb
ret
push
fdivr
sti
jno
movs
inc
push
(bad)
lock
or
repz
cdq
(bad)
aas
mov
and
jg
push
pop
mov
dec
retf
push
jp
(bad)
ret
xor
push
(bad)
aad
or
pop
retf
das
mov
mov
clc
mov
cdq
lock
pop
or
mov
push
cmp
imul
or
pop
mov
cmp
fist
push
shl
mov
xchg
aad
(bad)
rcr
enter
retf
xchg
sbb
sbb
lahf
das
call
mov
sbb
test
(bad)
cmps
and
pop
and
int3
dec
loop
pusha
(bad)
mov
mov
mov
neg
imul
cld
cmps
lods
xor
sbb
sahf
adc
push
pop
lock
pop
pop
sti
test
inc
mov
fidiv
stos
or
test
xchg
mov
pushf
arpl
and
dec
imul
mov
mov
jbe
les
push
neg
or
mov
pop
(bad)
rol
scas
fwait
sbb
mov
ficomp
add
(bad)
movs
push
jmp
jp
fidiv
cli
sub
idiv
hlt
pushf
pop
nop
push
xor
outs
and
into
(bad)
sub
xchg
jno
xchg
push
jmp
pop
inc
test
inc
ror
ficom
dec
repz
test
pushf
sbb
arpl
sti
shr
(bad)
sbb
and
fwait
enter
js
xor
push
add
dec
leave
js
les
out
jno
add
cwde
call
or
lds
shr
lahf
dec
stos
dec
xchg
push
mov
or
and
and
fidiv
xor
ins
fsub
mov
jb
ds
iret
outs
les
or
xor
add
aaa
stc
mov
test
jg
and
or
fcom
jle
xchg
mov
mov
mov
push
jge
clc
dec
xlat
out
pushf
aad
mov
div
push
lea
push
push
enter
dec
int3
sbb
mov
pop
bound
xchg
daa
(bad)
out
push
cmp
xor
in
xlat
call
xlat
sub
stos
out
(bad)
pop
je
push
aad
add
jmp
fst
jb
out
lods
jge
and
jns
mov
neg
pop
and
icebp
test
mov
pop
add
mov
repnz
dec
xor
adc
add
xor
xchg
adc
cld
movs
pushf
push
ficom
inc
dec
ret
enter
sbb
push
retf
xchg
(bad)
push
mov
inc
and
les
xor
dec
inc
or
rcr
adc
mov
push
retf
cmp
inc
loopne
add
int3
sub
pop
sub
in
cmp
fistp
sbb
pop
jb
out
or
imul
ss
cmp
fbstp
push
cld
fwait
jp
dec
inc
scas
xor
hlt
push
push
push
fisttp
fstp
ds
adc
or
ja
loop
and
dec
arpl
das
dec
rcl
pop
scas
xor
pop
mov
scas
retf
inc
xchg
cs
mov
jae
sbb
xchg
leave
mov
mov
add
mov
lods
ds
(bad)
adc
ins
cmp
in
mov
push
mov
adc
cmp
test
push
xlat
push
ror
data16
aad
pop
or
xchg
push
push
pop
mov
inc
add
(bad)
jl
sbb
neg
es
mov
inc
mov
(bad)
lods
in
add
pop
mov
and
mov
shr
push
cmp
ins
or
lods
sti
pop
pusha
xchg
push
pop
lods
cdq
icebp
pop
lods
cmp
(bad)
sub
fild
not
lods
lock
adc
enter
clc
cld
or
shl
pop
push
jl
adc
fistp
adc
pop
ins
fwait
pushf
xchg
bound
jl
adc
fld
pop
aas
jge
adc
pushf
lods
hlt
cwde
pushf
call
sahf
mov
mov
jle
pop
pushf
jp
in
inc
ins
repz
fild
jo
shr
lock
(bad)
rcr
out
pop
lahf
jl
adc
fcomi
pop
jmp
clc
adc
pushf
pusha
xchg
je
outs
push
gs
jl
mov
jle
mov
pop
push
cwde
pushf
sub
rcr
pop
push
and
jg
mov
inc
ins
mov
dec
fild
dec
push
shr
(bad)
sub
adc
popf
pop
call
and
loopne
lea
jp
stos
mov
sub
int
outs
out
sbb
jo
add
sub
(bad)
or
xor
mov
xor
adc
cld
push
xor
pop
pop
stos
mov
sbb
cs
sar
jl
mov
lahf
or
jl
push
jp
mov
into
cmp
inc
lods
hlt
cwde
or
ss
sbb
fwait
xchg
lock
adc
jnp
icebp
xchg
lock
int
mov
cld
out
xchg
lock
jmp
jle
rol
jmp
popa
les
push
neg
jmp
pop
jae
pop
or
or
repz
pushf
and
mov
pop
pop
call
push
adc
push
dec
fcomp
sbb
lahf
jecxz
add
movs
mov
out
in
lds
adc
mov
cs
cli
lods
mov
out
sub
mov
jnp
pusha
xchg
cmp
push
inc
jnp
pusha
mov
aaa
test
scas
gs
sti
adc
cmp
mov
mov
sbb
mov
js
and
movs
pop
repnz
inc
push
frstor
jb
movs
adc
data16
inc
(bad)
ror
xchg
push
jl
jns
push
fld
adc
movs
rcr
rcr
and
sbb
push
mov
(bad)
fsub
sbb
test
mov
aam
and
scas
adc
stos
das
shl
jmp
test
int
or
out
inc
imul
inc
pop
retf
sub
aaa
mov
inc
(bad)
(bad)
pop
push
mov
cmps
sahf
and
fwait
push
mov
mov
gs
pop
call
mov
dec
xor
int3
cdq
pop
xchg
icebp
dec
adc
cld
adc
mov
retf
nop
addr16
pop
sbb
call
ins
xor
fldcw
pop
sti
xor
push
xor
push
push
push
lods
jno
aaa
arpl
rcl
out
pop
mov
mov
pop
push
jge
sub
not
cwde
pushf
xchg
xchg
adc
call
fs
scas
imul
or
icebp
push
xlat
pop
add
sub
popf
nop
xchg
ins
retf
mov
das
xchg
dec
retf
lock
xchg
mov
and
mov
movs
cmp
ins
(bad)
adc
fldcw
push
adc
lods
lock
jo
pop
ror
pop
idiv
sub
data16
jge
adc
pushf
dec
arpl
loope
mov
jmp
pop
in
pop
and
loop
sbb
pop
pop
sahf
pushf
setae
retf
dec
xchg
lahf
lods
push
pushf
ja
sahf
pushf
jae
sbb
pop
cmp
xchg
bound
jnp
test
fild
push
add
pop
cwde
or
xchg
mov
pop
push
xchg
and
fmul
lock
out
fs
sar
pushf
popf
cmps
rcl
ja
(bad)
movs
ret
push
mov
lock
add
into
std
inc
nop
or
out
pop
cmp
cmp
sahf
pushf
std
jo
inc
pop
mov
xor
gs
retf
js
repnz
inc
xor
cmp
and
neg
outs
adc
push
pusha
jno
(bad)
or
pop
jo
mov
int
pushf
xor
mov
push
pushf
xchg
xor
fisttp
sub
inc
arpl
mov
dec
jns
adc
adc
repz
mov
jg
push
rol
arpl
lahf
push
in
lods
iret
(bad)
cwde
aam
mov
add
enter
sbb
adc
outs
sbb
xor
ret
push
mov
pop
int3
je
jo
out
stos
or
jbe
clc
push
shl
je
inc
or
and
pushf
nop
outs
inc
enter
iret
mov
push
adc
into
xchg
stos
loopne
push
lods
cs
jg
sbb
add
test
repz
sub
jmp
mov
imul
(bad)
loop
retf
pop
jge
dec
mov
mov
lods
cmp
fwait
xor
nop
adc
out
shl
fiadd
mov
jbe
das
sub
(bad)
stc
sub
adc
repnz
pop
cmps
jo
or
sbb
dec
daa
lds
into
out
rcl
retf
int3
pop
add
cmp
sbb
xchg
xlat
jp
cmp
mov
mov
jmp
in
adc
push
lods
inc
movs
(bad)
adc
neg
pop
xor
sbb
gs
loopne
adc
xchg
nop
jmp
push
jbe
in
faddp
dec
in
idiv
xor
fld
inc
pop
(bad)
mov
imul
push
jp
or
mov
(bad)
js
mov
adc
push
scas
xchg
jmp
loopne
adc
jne
sbb
push
stos
fsubr
and
dec
test
sar
lods
dec
cmp
inc
or
mov
test
pop
jns
das
fwait
jo
pushf
lods
test
xor
pop
pop
add
outs
clc
sub
mov
out
cmps
dec
test
jbe
or
xor
jmp
into
pop
jnp
das
rcl
cmp
mov
push
mov
rcr
aaa
retf
pusha
not
retf
jmp
sub
add
xor
push
(bad)
loop
adc
and
and
rol
or
imul
fisubr
loop
inc
nop
dec
dec
(bad)
call
cmp
xchg
fcomp
jmp
sbb
sub
in
mov
pop
jge
sbb
fistp
add
es
mov
scas
int
push
int3
daa
push
dec
mov
dec
cli
arpl
(bad)
jecxz
inc
xchg
jae
ins
cmps
enter
push
cmp
imul
(bad)
jnp
jns
xchg
xor
das
jb
das
jnp
(bad)
jmp
jno
pop
movs
inc
fldenv
clc
xor
mov
xor
jnp
js
add
mov
mov
fwait
mov
out
gs
dec
jl
xor
mov
cmp
sti
aad
mov
xchg
push
call
adc
outs
xchg
sub
ins
and
mov
jge
mov
mov
push
daa
jl
popf
bound
jp
addr16
sti
adc
mov
cmps
aas
(bad)
mov
or
cmovle
jl
mov
imul
pusha
fdivr
repnz
push
movs
sbb
pop
xor
popa
js
or
xor
(bad)
cwde
inc
fwait
adc
ss
adc
dec
dec
movs
sbb
ret
shr
mov
test
or
sbb
retf
xor
mov
pop
jg
xchg
addr16
jg
jp
dec
pop
jle
xchg
enter
test
add
pushf
sbb
nop
dec
bound
iret
jl
shr
retf
imul
mov
fmulp
not
mov
jl
cmp
sub
push
adc
mov
jecxz
dec
adc
xchg
xor
sub
pop
cmp
outs
mov
sti
pop
pusha
xchg
fild
mov
fisttp
push
arpl
push
sub
xchg
loopne
push
sub
xor
stos
cmps
push
add
(bad)
push
sbb
sub
addr16
psadbw
adc
fld
or
test
mov
cmp
mov
jecxz
hlt
scas
mov
stc
mov
fisttp
nop
fs
mov
cmp
das
jb
cmp
sbb
call
icebp
or
xor
sub
ret
jge
push
inc
ins
mov
jmp
sub
inc
addr16
or
sbb
sub
aas
test
pop
data16
stos
mov
push
gs
repnz
adc
cld
mov
call
fs
push
mov
cli
cdq
mov
or
pop
ret
mov
xchg
adc
cmp
popa
aam
sbb
pop
adc
mov
ins
pop
ins
test
clc
dec
jbe
fld
fs
mov
sbb
xor
sub
pop
pop
xor
das
lahf
ins
ins
sub
(bad)
fcmove
mov
sub
ret
das
and
test
outs
lock
and
fistp
les
call
std
pop
sub
push
pop
xlat
add
loop
mov
mov
mov
data16
mov
ficomp
cmps
sbb
jp
cmp
out
repz
sbb
xor
ins
cmc
cmps
mov
mov
mov
xor
call
into
test
and
pop
cli
xor
adc
add
adc
and
cmp
into
shl
push
xor
lahf
pop
pop
(bad)
cmp
paddw
pushf
jmp
call
cmp
int3
leave
inc
jl
arpl
les
pop
ret
add
mov
(bad)
xor
fwait
mov
inc
ss
xchg
clc
daa
push
mov
aaa
cmps
push
sub
data16
mov
xchg
jp
ins
push
lods
int
jle
or
bound
jbe
mov
fdiv
push
push
daa
sub
inc
outs
pop
into
inc
pop
(bad)
cmp
rcl
call
pop
jecxz
dec
dec
imul
sti
pop
mov
or
pop
popf
jns
out
adc
sbb
xor
fild
jle
scas
iret
fidivr
mov
mov
aaa
sbb
xor
inc
retf
repnz
inc
pop
in
jg
inc
std
and
test
je
popa
jecxz
mov
icebp
test
push
or
sbb
or
scas
or
xor
adc
push
test
xchg
imul
dec
ss
enter
dec
nop
push
or
or
stos
pusha
shr
popa
adc
xchg
mov
test
push
or
cs
xor
sub
xor
stos
icebp
push
dec
imul
cs
vminpd
loop
mov
mov
or
push
jae
xor
jecxz
pop
xor
or
fistp
adc
or
dec
cli
push
cs
fld
xchg
les
cmps
pushf
inc
mov
(bad)
adc
mov
fld
movs
cld
push
cmps
and
sti
lds
push
lea
fidiv
outs
sub
movnti
or
sbb
dec
mov
mov
(bad)
aas
mov
mov
ret
nop
gs
lahf
ja
enter
mov
lods
dec
pop
cmc
outs
lods
xchg
sbb
test
lock
mov
sbb
repz
sbb
arpl
call
stos
push
pop
push
pop
fdiv
enter
int
mov
cmp
push
mov
mov
cld
pop
icebp
or
jg
xchg
loopne
fld
jecxz
test
adc
js
push
sub
inc
push
mov
movs
inc
and
sub
fisubr
loop
or
js
int3
push
mov
rep
icebp
dec
push
pusha
(bad)
adc
ds
popa
or
inc
movs
add
adc
jae
repz
push
push
dec
xchg
adc
enter
mov
and
dec
add
loop
loope
lock
sbb
xchg
test
or
cmps
cmps
and
push
and
cld
jg
push
dec
dec
or
push
cli
pop
ret
mov
or
sub
or
dec
test
jae
in
xchg
cdq
adc
push
sbb
leave
lea
ins
aas
out
cld
sub
ret
pop
add
call
or
dec
xor
pop
add
sub
ret
mov
xchg
push
ficomp
stos
mov
mov
push
test
mov
jmp
mov
sbb
or
sbb
cdq
out
push
add
ins
sbb
pop
addr16
(bad)
(bad)
(bad)
or
inc
popf
dec
push
push
and
lods
xchg
push
fcomp
retf
jmp
mov
mov
sbb
mov
lods
es
jmp
push
add
adc
sub
popf
pop
fs
xor
pushf
sahf
loope
xlat
nop
fwait
outs
cmp
mov
(bad)
loope
jmp
jmp
xchg
pop
lods
popf
adc
enter
scas
cmp
(bad)
aad
pop
pop
fistp
cmp
lahf
push
push
pop
push
aas
rol
stos
push
mov
mov
into
jge
sbb
outs
mov
cmp
add
mov
add
retf
sahf
out
and
jge
adc
xor
mov
xor
sub
xchg
mov
adc
shl
jnp
loop
or
arpl
pop
lock
push
sbb
sbb
jle
cmp
or
jecxz
pop
jle
repz
mov
lock
int3
sti
aad
(bad)
xor
adc
xlat
mov
in
xchg
das
add
xor
pop
je
inc
sbb
outs
call
mov
and
add
not
xchg
repz
mov
add
add
stc
dec
dec
dec
(bad)
cmp
sbb
sbb
repnz
adc
das
jbe
sbb
outs
dec
scas
lahf
(bad)
fcmovnbe
lods
repnz
xlat
cld
mov
jno
mov
das
fs
call
call
and
cmp
sub
jmp
mov
or
adc
adc
xor
ins
fs
dec
sub
inc
cdq
cmp
leave
mov
add
dec
das
call
aam
ja
test
push
out
bound
in
xchg
ins
shl
sbb
ins
ins
jae
scas
xchg
pop
inc
and
fild
pushf
nop
push
xor
and
push
lahf
(bad)
gs
into
mov
mov
push
mov
push
std
xchg
cld
pop
add
adc
lahf
dec
adc
sbb
cmps
mov
dec
mov
push
and
outs
mov
outs
push
pop
out
xchg
shl
popf
mov
shr
lahf
(bad)
stos
jne
inc
aam
adc
add
out
add
test
and
std
push
ds
jno
mov
adc
(bad)
(bad)
xor
mov
mul
jle
sbb
adc
shl
pop
leave
dec
rcl
(bad)
cmp
cmp
jae
jns
push
ins
mov
sub
sbb
test
fild
push
mov
dec
hlt
clc
adc
push
cmp
push
cmp
pop
pop
sti
push
sahf
sahf
and
or
popa
retf
pop
int3
loope
fbstp
outs
xor
push
adc
into
call
pop
inc
sbb
ret
imul
adc
jnp
ins
dec
call
fs
cmp
ja
adc
int3
sbb
test
les
cdq
mov
pop
cmp
out
xor
dec
mov
rcr
mov
and
sbb
fs
call
jnp
fs
scas
ins
and
shr
mov
xchg
pop
push
xchg
jp
and
sub
xchg
int
push
mov
xor
mov
or
lods
inc
rcr
pop
scas
addr16
jp
sub
mov
cmp
pop
cli
cdq
jle
xor
cmps
outs
(bad)
in
popf
aam
adc
aaa
(bad)
push
es
nop
add
push
jp
test
and
and
enter
xor
in
pop
rcl
xchg
repnz
ret
xchg
(bad)
cli
mov
neg
cwde
mov
push
xchg
lock
fs
imul
idiv
sbb
jb
xchg
add
adc
push
adc
xor
aaa
xchg
bnd
int
cmp
or
sbb
lods
cli
in
outs
cld
sub
sti
pop
sub
xor
lahf
cmp
mov
out
xchg
mov
xor
xlat
je
sub
inc
jecxz
aad
fs
adc
push
(bad)
popf
les
dec
ror
dec
push
fist
push
fisub
ins
pushf
xor
lods
pushf
and
pushf
cld
std
or
leave
bound
repz
dec
bnd
cmp
or
fdiv
adc
pusha
dec
add
jmp
mov
je
fstp
in
jle
dec
or
sbb
in
fmul
in
jg
sbb
jne
xor
test
in
adc
sub
mov
ins
cli
push
sub
xchg
(bad)
jge
pop
fstp
mov
int3
iret
(bad)
inc
sbb
push
sbb
sahf
in
fs
mov
pop
in
jg
ss
xor
adc
shr
dec
ror
outs
mov
addr16
scas
(bad)
movs
adc
les
xchg
(bad)
retf
cli
shl
sub
xchg
push
dec
add
data16
sub
mov
not
les
sbb
xor
and
inc
ss
rep
cmps
daa
inc
xchg
push
pop
aam
add
and
cmp
test
pop
out
xchg
cmc
pop
rol
mov
push
or
adc
mov
mov
loop
xchg
inc
sub
test
out
cmps
arpl
adc
shl
into
jecxz
jg
inc
push
inc
retf
enter
enter
ret
lahf
push
cmp
(bad)
imul
xchg
sar
sahf
test
shl
loopne
mov
je
add
jecxz
mov
xchg
lock
or
lea
ret
imul
or
push
add
sahf
call
adc
pop
push
push
cwde
jmp
xchg
punpckhwd
and
mov
mov
or
(bad)
mov
cmp
pop
stc
push
das
iret
jle
loopne
push
pop
aas
xchg
sbb
shl
cmp
xchg
and
jno
push
jae
push
jne
cmp
popa
jbe
sbb
lahf
add
cmc
and
loope
mov
and
xor
repz
jmp
call
fs
or
out
add
pushf
addr16
cmp
loopne
aaa
xchg
sub
jle
shr
push
push
add
cdq
ins
or
out
adc
xor
or
clc
fist
sub
jnp
test
xchg
aad
pop
or
lods
leave
and
pushf
cmps
sbb
add
adc
fxch
mov
stos
sub
add
ins
add
jmp
call
movs
dec
push
(bad)
fdivr
and
arpl
mov
sti
or
mov
pop
dec
enter
fcom
cmp
jno
jnp
cs
or
jecxz
push
cli
and
mov
xchg
cmp
rol
cmp
cmp
ins
repnz
xchg
fist
xchg
xor
out
pushf
shl
jg
stos
pop
(bad)
sti
push
mov
(bad)
(bad)
and
pop
rcl
test
popf
ret
lea
mov
xchg
mov
dec
cmp
and
or
fidiv
mov
retf
rcl
call
dec
into
ja
jno
mov
add
shl
lea
mov
pop
pusha
retf
ins
scas
adc
adc
xor
stos
cmps
stc
call
and
push
or
xor
scas
mov
scas
stos
ret
pop
push
xor
pop
aaa
inc
outs
out
mov
dec
mov
sub
and
cli
dec
retf
(bad)
repnz
jecxz
arpl
push
(bad)
xchg
icebp
or
add
jb
sti
inc
push
lea
dec
sbb
push
ret
out
cmp
pop
cmp
mov
iret
adc
(bad)
out
stos
iret
mov
outs
jp
ins
cmp
aaa
arpl
pop
mov
cmp
inc
pop
mov
jp
cli
push
pop
retf
sub
iret
inc
mov
adc
sahf
mov
xchg
shr
and
jbe
test
in
fdiv
pop
lahf
ror
mov
clc
or
jbe
sub
mov
add
sbb
(bad)
retf
sahf
mov
sub
adc
jb
inc
xor
jl
fld
mov
xchg
sub
call
jb
fldenv
scas
push
call
sbb
ror
iret
add
xor
in
dec
pop
xor
jecxz
lahf
pop
in
stos
jnp
cli
xchg
sbb
call
cwde
movs
inc
fucomi
(bad)
loopne
jmp
cmp
sbb
loop
sbb
dec
xchg
frstor
test
dec
mov
dec
cmp
or
cld
dec
or
pop
or
and
sti
repnz
sahf
lods
fsub
or
mov
add
xor
jb
add
hlt
mov
dec
sbb
dec
cs
cwde
loopne
mov
add
rcl
in
mov
mov
bound
test
rcl
or
out
xchg
jo
jp
inc
adc
lods
inc
mov
mov
adc
(bad)
retf
nop
cmps
inc
cmp
adc
in
xor
sub
aad
int3
cmp
push
daa
jle
add
std
loope
and
xchg
je
pop
rol
adc
pop
xchg
mov
push
sub
and
add
dec
mov
mov
sti
outs
je
sar
push
pop
lahf
jmp
fimul
xor
repz
pop
retf
out
mov
and
push
ja
jmp
adc
xor
mov
cmp
pop
push
in
lea
push
mov
scas
xchg
pusha
jns
fistp
add
jno
jmp
mov
ret
shl
das
adc
dec
jns
add
jmp
mov
je
cmp
les
lea
push
mov
cld
push
adc
or
fwait
cli
cs
jl
cmp
ds
dec
movhps
pop
leave
sub
xchg
push
inc
sti
mov
mov
sbb
rcr
arpl
xchg
scas
lldt
mov
sbb
push
pop
jmp
jo
imul
mov
idiv
sub
sbb
xor
cmp
jbe
xor
lar
and
pop
xchg
push
inc
xchg
sti
iret
dec
mov
jg
add
fstp
mov
xor
jg
sbb
add
ret
shr
inc
jne
and
ins
dec
pushf
(bad)
mov
bound
ins
ins
(bad)
push
mov
cmp
fld
cld
retf
in
call
lea
dec
scas
fdiv
pop
out
pushf
mov
mov
sbb
test
popf
xchg
or
lea
shl
(bad)
pop
sbb
push
xor
pushf
cmp
cli
(bad)
fistp
aam
inc
(bad)
sub
hlt
retf
cmps
cmps
push
pop
add
xor
rol
fidiv
sahf
push
pushf
and
repz
rcl
fcom
or
mov
popa
std
xor
mov
fwait
sbb
push
cdq
and
iret
fistp
and
jae
rcr
out
pop
mov
dec
jge
adc
retf
daa
stos
cs
hlt
xor
and
xchg
je
cmp
mov
and
xor
loopne
cmp
(bad)
jge
mov
js
gs
out
mov
cdq
jo
sbb
pop
(bad)
std
call
clc
sar
and
mov
hlt
cmp
mov
aam
mov
jns
inc
aam
push
or
aas
pop
sahf
stos
sar
xor
xchg
rcl
dec
lods
pop
inc
(bad)
xlat
adc
xlat
fst
mov
mov
add
mov
(bad)
int
shl
lods
pop
inc
and
in
enter
gs
jle
add
xchg
repnz
dec
loop
mov
aad
sub
and
clc
in
sbb
or
std
xchg
mov
mov
mov
fist
cs
cmps
scas
into
push
cwde
fistp
push
mov
jmp
mov
dec
jb
mov
mov
xor
adc
repz
iret
dec
(bad)
call
rol
ror
and
pop
adc
sbb
(bad)
pop
mov
and
dec
test
and
xor
dec
stc
push
stc
cmps
std
xor
aam
xchg
dec
fild
pop
xor
inc
retf
or
aad
adc
fadd
pop
(bad)
inc
lods
push
adc
enter
mov
out
push
fsub
pop
fidiv
ficom
int
es
jl
cmp
les
ins
dec
(bad)
sub
sbb
xlat
cmp
sbb
div
rcl
add
xlat
fwait
imul
add
fidivr
rcl
jl
fisubr
ds
lock
mov
nop
sbb
and
movs
cmp
std
imul
sahf
mov
mov
xchg
sbb
xchg
and
xchg
cli
jo
aam
(bad)
ins
sbb
mov
aaa
fmul
mov
sub
push
add
rol
daa
(bad)
enter
push
aad
and
scas
sub
nop
xor
xchg
mov
push
xchg
(bad)
xchg
popa
lods
fsub
sbb
jle
and
xchg
jno
lea
je
cmp
and
mov
call
fisub
mov
cld
or
xor
rcl
mov
adc
or
ret
mov
push
cmp
adc
jmp
cmp
pusha
sbb
xchg
push
or
cmp
xchg
adc
xor
adc
jmp
lahf
or
xor
pop
test
dec
ds
cdq
popf
mov
popf
xchg
xchg
xchg
pop
add
cmp
sbb
pop
jns
and
sub
addr16
xchg
fistp
sub
lods
xor
idiv
and
sbb
xchg
push
push
stos
fwait
lahf
cli
fst
lock
xor
adc
sbb
fdivrp
push
in
sbb
enter
enter
dec
lods
push
dec
adc
popf
(bad)
jg
mov
jnp
cmp
mov
in
retf
imul
call
daa
pop
push
out
jnp
pop
in
retf
das
pop
mov
hlt
and
enter
jb
int
jle
dec
into
jae
outs
pop
adc
out
push
mov
pusha
inc
lea
xor
ret
jmp
movs
sbb
outs
outs
cmp
test
pop
mov
sbb
and
dec
push
into
scas
pusha
mov
push
call
sub
mov
xchg
xor
aad
ins
mov
fcomip
outs
test
repz
sbb
bound
aaa
jbe
mov
mov
adc
or
xchg
jmp
bound
push
pop
lahf
outs
fimul
jb
and
out
cmp
scas
mov
sbb
pusha
mov
xchg
pushf
jl
lods
xchg
xchg
jg
push
jl
add
cmps
sbb
push
pusha
cld
inc
stos
xchg
inc
jb
cli
xchg
repnz
div
xor
fsub
xor
adc
push
pop
pop
sti
push
pop
call
xlat
not
retf
(bad)
pop
int
adc
out
scas
mov
(bad)
pop
mov
imul
in
fidiv
pop
xor
xchg
ins
repz
icebp
mov
xchg
mov
int
iret
cmps
and
inc
sbb
into
ja
inc
idiv
push
idiv
mov
jp
inc
jmp
sahf
shl
repz
(bad)
lahf
test
cld
scas
in
xchg
inc
fwait
push
movs
jmp
popf
pop
jb
xor
push
repnz
rcl
dec
cmp
scas
sub
and
rcr
lea
jb
xchg
cdq
push
sub
(bad)
mov
push
adc
add
add
push
mov
adc
fidivr
popa
test
push
repnz
iret
xor
jae
sub
shr
or
xchg
inc
in
imul
mov
dec
mov
dec
sbb
cs
add
ret
xchg
pop
ins
(bad)
ret
ror
aam
icebp
push
sbb
pop
adc
adc
or
or
sub
sub
add
or
push
pop
shl
mov
test
leave
mov
jmp
or
sbb
imul
sub
movs
mov
bnd
test
pop
int3
sub
test
xor
arpl
ror
mov
adc
lea
(bad)
sbb
sbb
or
sbb
mov
hlt
sbb
mov
lods
xchg
das
and
lods
xor
leave
test
push
jge
mov
mov
in
pop
xchg
nop
sub
pop
pop
js
shl
jecxz
push
jp
jne
enter
retf
add
pop
pop
test
push
fld
mov
jne
retf
stos
ins
nop
imul
push
and
int
cmp
cdq
dec
je
fisub
enter
push
outs
sub
xchg
push
jmp
out
sub
loop
dec
jl
xor
inc
psadbw
arpl
lods
mov
idiv
jno
ret
xchg
push
inc
lods
xor
jnp
cmp
popa
test
mov
adc
outs
(bad)
dec
cld
sbb
mov
xchg
jae
out
pop
push
mov
jns
push
iret
lea
pop
loopne
xchg
xchg
mov
fdivr
mov
sub
ret
outs
scas
ins
jae
mul
or
sbb
aam
add
mov
sub
xor
push
cdq
sub
inc
and
sub
movs
push
push
adc
cmp
enter
frstor
loopne
lods
aad
out
gs
out
call
in
or
mov
mov
das
sbb
repnz
or
mov
sub
jnp
std
xor
mov
ret
xor
leave
fidivr
push
ret
lahf
cmp
popa
fisttp
das
xchg
iret
cli
cmp
and
sub
push
dec
popf
pop
std
clc
fistp
shl
nop
xor
aaa
inc
xchg
imul
scas
or
sbb
or
xchg
leave
mov
jbe
test
mov
push
std
daa
pop
and
mov
xchg
lea
jmp
rcl
int
push
sahf
dec
ins
sub
or
xchg
xchg
enter
cmp
cld
mov
int3
rcr
xlat
in
push
xchg
imul
movs
ins
les
push
push
out
out
stc
add
nop
jp
jp
adc
and
fcomp
cdq
aas
popf
push
mov
xchg
sbb
test
lea
pop
in
adc
adc
test
in
pop
xor
dec
push
in
push
fwait
ins
xchg
test
mov
loope
in
in
cmp
cli
push
pushf
adc
imul
mov
pop
in
idiv
repz
fmul
aam
jge
xor
pop
mov
xchg
add
and
cmp
scas
cwde
inc
push
push
add
and
xor
in
repz
push
rol
cmp
push
and
jbe
mov
jg
outs
jns
mov
adc
push
fsub
push
ins
inc
ret
lods
push
in
pop
std
push
mov
sbb
sub
or
push
or
adc
add
lock
cmp
nop
jecxz
dec
add
cmc
arpl
inc
jbe
leave
retf
and
jmp
mov
test
fcmovnu
out
push
xor
shl
(bad)
jne
or
mov
popf
pop
pop
imul
xchg
int3
ret
inc
in
aam
nop
xchg
sahf
add
fsubrp
mov
add
xchg
arpl
push
aaa
xor
(bad)
test
fisub
jmp
in
data16
and
inc
into
mov
pushf
aaa
pop
fist
push
xchg
pop
jmp
lds
push
push
mov
gs
adc
sbb
in
in
shl
stc
push
push
cmp
pushf
in
push
into
jbe
bound
stc
mov
or
test
fisubr
sahf
cmc
jo
fcomp
xchg
push
(bad)
jb
adc
(bad)
outs
push
xor
mov
(bad)
pop
xchg
psubq
xchg
cmp
mov
jne
push
or
outs
cdq
push
push
pop
jbe
push
shr
adc
and
fisttp
fldcw
mov
mov
mov
scas
pop
(bad)
gs
push
outs
push
mov
dec
adc
push
std
xchg
nop
aas
movs
or
fldenv
inc
jle
adc
fcmovnbe
popa
cdq
sahf
mov
jg
pushf
nop
leave
xchg
icebp
(bad)
and
cmp
lock
mov
cmp
mov
pop
xor
xor
or
inc
and
push
and
mov
pop
jp
gs
rcr
scas
(bad)
adc
cmc
and
adc
gs
dec
test
inc
cmp
pop
push
and
test
aad
ins
aam
cmp
or
repnz
std
(bad)
loopne
mov
adc
retf
inc
out
scas
cmp
sbb
es
bsr
sub
bound
out
mov
inc
and
outs
cld
sbb
rcr
sbb
outs
sbb
cwde
std
sub
jg
sbb
or
xor
fs
mov
cld
xchg
dec
ud2
and
lods
pop
aad
jnp
dec
mov
push
fwait
push
ins
aam
ret
(bad)
adc
test
aam
push
push
add
and
aas
cmp
popa
mov
in
imul
push
mov
sti
or
jnp
imul
stc
adc
das
pop
sbb
jns
out
retf
dec
dec
pop
les
and
sbb
popf
push
xor
sbb
inc
cmp
sub
inc
(bad)
lea
adc
daa
mov
adc
iret
jmp
loopne
call
sub
mov
pop
gs
repz
mov
xor
(bad)
push
cwde
nop
push
pusha
out
ror
xchg
jnp
outs
daa
mov
popf
jb
jmp
cmp
pop
ret
aam
bound
adc
push
in
sahf
push
mov
mov
popa
retf
(bad)
jns
ror
in
sub
lods
nop
fstp
push
mov
xchg
pop
fistp
call
xor
jno
rcl
adc
std
xchg
pop
lock
gs
stos
leave
(bad)
adc
mov
mov
cmp
xchg
add
iret
test
xchg
mov
popf
mov
sar
ret
stos
fdiv
repnz
pop
xchg
call
xchg
dec
jmp
sub
push
mov
popa
int3
int
lea
mov
loop
scas
fnstsw
pushf
push
dec
ficom
pop
(bad)
pop
mov
push
test
ds
push
test
inc
lock
push
mov
scas
addr16
pop
sbb
mov
pop
cmp
cmc
push
mov
xor
out
jl
or
xchg
sahf
fcomp
hlt
lods
cmps
call
test
or
lds
xor
enter
dec
hlt
nop
repz
pop
fstp
aad
mov
mov
test
jbe
repnz
mov
lea
aad
imul
test
mov
(bad)
not
fimul
movs
loopne
and
repnz
fcom
cs
fild
xchg
imul
pop
test
repnz
push
mov
add
sbb
daa
addr16
xor
aam
stos
dec
fistp
icebp
jne
(bad)
pop
mov
jle
pop
rcl
add
rcr
xor
lock
xchg
(bad)
sbb
cld
ret
movs
shr
or
test
lock
test
lock
gs
sub
jmp
mov
(bad)
retf
fcom
pop
movs
jl
std
jmp
push
imul
mov
inc
pop
fwait
imul
pop
in
(bad)
ds
fwait
xchg
ja
sub
pusha
pusha
inc
je
jecxz
clc
or
xchg
and
xchg
imul
stos
pop
sahf
fbstp
jb
or
rol
mov
cmc
mov
fisubr
test
div
test
out
jnp
enter
call
mov
aaa
call
outs
stos
push
hlt
jle
xchg
sbb
or
mov
test
popf
arpl
jnp
pop
or
mov
dec
sub
xchg
push
xlat
push
ds
push
and
fist
hlt
out
loopne
sub
push
push
sub
dec
iret
fs
jl
push
sub
addr16
iret
and
mul
inc
sbb
push
push
add
(bad)
into
stos
push
or
jl
inc
or
or
push
cmp
stos
lahf
outs
loop
or
push
push
cmp
rol
xor
retf
cmp
dec
cmp
repz
pop
arpl
sub
xchg
cmps
aad
int
add
cdq
cld
int
cmc
popa
and
nop
jle
jl
adc
les
inc
dec
xor
sbb
out
stc
inc
je
test
movs
movs
xchg
popf
jae
dec
ror
cmp
jp
out
xor
sbb
mov
dec
sar
mov
ror
in
je
leave
push
jg
xchg
(bad)
jmp
sub
leave
imul
(bad)
jl
dec
xlat
mov
aam
jo
stos
cmp
leave
xchg
ja
pop
sbb
stos
(bad)
adc
(bad)
pop
leave
xchg
cmp
aad
mov
outs
add
jg
(bad)
retf
add
repz
loope
cwde
jb
into
and
push
xchg
add
dec
in
les
mov
test
ss
sahf
cdq
out
push
cmp
add
outs
retf
inc
mov
dec
pop
mov
cs
fwait
lods
cld
shr
dec
or
adc
test
pop
push
(bad)
mov
neg
inc
out
pop
mov
call
inc
and
add
cld
inc
xchg
pop
xor
jp
xchg
mov
sub
or
loope
jl
cmp
js
sub
dec
les
push
ja
xchg
pop
pushf
push
leave
jo
cmp
repz
and
xchg
mov
mov
xor
rcl
jmp
(bad)
cld
lds
adc
xchg
pop
add
and
int3
addr16
aam
jae
rol
movs
(bad)
stc
adc
lods
and
xor
jp
add
retf
ffree
cdq
mov
cdq
push
imul
mov
push
movs
pop
arpl
mov
push
pop
jae
fst
mov
pushf
or
pop
in
(bad)
(bad)
stos
xor
pop
cmc
sbb
pop
ins
cli
and
xor
jne
inc
sahf
inc
mov
dec
xchg
movs
fimul
xchg
enter
adc
and
mov
push
add
dec
(bad)
fcomp
out
jg
mov
test
test
mov
cmp
ficomp
dec
sub
cmp
push
xor
inc
cmp
outs
mov
and
mov
sbb
(bad)
out
aas
jne
aam
sbb
mov
repz
xor
xor
leave
imul
les
ins
icebp
cmc
mov
mov
sub
addr16
clc
pop
cld
xor
dec
data16
jmp
add
int3
out
push
call
pop
dec
add
mov
mov
test
pusha
add
neg
cmps
mov
sbb
mov
daa
enter
ins
lock
(bad)
jp
loop
push
xor
cmc
inc
test
push
mov
or
sbb
ffree
cdq
(bad)
iret
out
add
mulps
xchg
js
nop
das
lods
(bad)
rcr
push
outs
inc
ror
mov
sbb
pusha
cld
pop
popf
inc
add
push
arpl
shr
adc
cmp
mov
mov
pop
xrelease
ss
ins
sbb
rcr
pop
pop
cmps
sbb
enter
loope
add
dec
inc
adc
out
into
sub
aaa
lds
fistp
out
out
enter
xchg
xchg
movs
(bad)
jbe
shr
mov
rcl
daa
pop
test
pop
push
and
idiv
or
pushf
sti
popa
jg
dec
xor
mov
das
sbb
lods
and
aad
add
bound
arpl
stc
test
mov
push
mov
mul
dec
cdq
aaa
enter
stos
popa
cmp
lods
mov
sar
sti
mov
(bad)
(bad)
pusha
test
rol
xor
in
and
loope
aaa
gs
les
pushf
jne
xor
js
repnz
push
adc
mov
mov
pop
xchg
mov
pop
inc
ins
in
xchg
repnz
pop
pop
popf
mov
dec
sbb
xchg
xor
leave
sub
out
adc
xchg
or
dec
aaa
retf
popa
dec
pop
hlt
pop
pop
and
mov
retf
jne
cmp
fistp
cdq
and
ins
loopne
fsub
sub
call
cwde
xor
adc
mov
cmp
mov
loopne
popa
xchg
dec
or
sub
inc
xor
rcr
push
or
inc
fmul
sti
push
or
jp
inc
push
dec
and
and
(bad)
icebp
xor
fisubr
ficomp
and
pop
ret
adc
ds
and
movs
xchg
(bad)
cmp
clc
popw
dec
push
test
jno
idiv
cwde
mov
add
xchg
cld
aaa
or
inc
test
adc
or
sub
push
cmps
in
fcomp
push
rcr
xor
cmc
lods
outs
outs
ret
(bad)
pop
in
or
popf
adc
sahf
dec
cmp
int
shr
fsub
popf
mov
stc
fimul
dec
or
cmps
outs
jmp
out
int3
shl
xchg
cmps
pop
cld
imul
imul
add
and
push
je
pop
arpl
inc
into
mov
test
push
pop
sub
xor
dec
push
sbb
mov
inc
push
cmp
(bad)
movs
sub
xor
out
test
mov
(bad)
mov
mov
xchg
mov
or
stc
cld
fdivr
rcl
mov
dec
pop
adc
cmp
pop
push
add
push
bound
call
popf
push
dec
test
ds
jmp
or
test
lods
cli
xchg
push
ins
xor
mov
jmp
xchg
add
mov
fdiv
(bad)
mov
dec
test
xchg
hlt
imul
mov
imul
jnp
sbb
fdivr
jmp
mov
add
sbb
pop
dec
cdq
sub
jne
mov
adc
cmc
fnsave
aad
iret
cli
inc
(bad)
pop
add
pop
add
out
addr16
dec
dec
lahf
xchg
arpl
test
or
sbb
mov
rcr
in
out
ins
xchg
repz
lods
in
out
or
xchg
in
adc
cmp
xchg
adc
ins
xlat
add
xchg
std
outs
xor
cmp
lahf
in
stos
aam
mov
push
pop
jmp
daa
mov
inc
push
loopne
call
mov
stc
rcr
pop
in
rcr
jns
jmp
std
call
push
popf
fisttp
mov
xor
cmp
outs
adc
test
sub
lods
sbb
adc
mov
jl
add
adc
scas
xor
jg
rcr
sbb
test
push
xchg
sbb
mov
sub
fimul
(bad)
fcomp
movs
push
movs
shl
push
or
xor
dec
ins
fiadd
add
mov
int3
call
movs
xor
jae
add
mov
push
push
mov
xchg
add
jmp
adc
cs
cmp
push
std
dec
data16
cmp
int
and
test
add
or
test
iret
test
je
push
not
stos
(bad)
js
pop
call
retf
pop
dec
sub
inc
fs
mov
stos
mov
in
(bad)
and
fcomp
pop
bound
xchg
mov
lds
mov
out
sub
push
mov
push
adc
pop
outs
adc
add
push
mov
sub
lods
call
push
ins
or
pop
mov
xchg
add
sar
fcom
and
arpl
jae
pop
add
test
(bad)
push
pop
xchg
das
cmc
xchg
ins
sbb
stc
jne
add
sbb
push
scas
jg
xor
leave
mov
std
jmp
sbb
mov
(bad)
gs
inc
out
(bad)
and
sub
pusha
pop
fwait
and
or
adc
xor
jle
(bad)
xor
test
and
shr
dec
daa
es
shl
pop
scas
inc
sbb
jg
adc
popf
scas
js
aaa
ins
popf
or
dec
sub
xor
add
cmp
ss
cld
pop
lods
aam
fsubr
daa
or
addr16
fwait
push
push
push
xor
cmp
add
xchg
push
xacquire
mov
lods
cmc
repz
call
xchg
pop
xchg
enter
inc
call
scas
inc
in
dec
sub
shl
sbb
pop
dec
jg
lds
mov
sbb
jbe
sbb
pusha
repnz
mov
lods
fisttp
adc
xor
sar
mov
addr16
in
inc
ja
jnp
(bad)
and
sub
test
pushf
fwait
daa
pop
lods
scas
xor
pop
ins
out
pop
inc
inc
aas
movs
int
repz
ins
add
mov
jnp
jl
fistp
and
jno
adc
or
add
xor
imul
xor
ror
fisubr
pop
sbb
sub
clc
popf
sub
add
jecxz
pop
xchg
xor
bound
sub
adc
shl
sbb
dec
mov
mov
adc
pop
push
imul
aam
fs
xlat
jnp
cwde
retf
add
sahf
popa
pop
stos
mov
sub
or
fwait
loopne
cmps
cdq
aaa
mov
(bad)
(bad)
popa
jb
jae
iret
dec
imul
mov
cmp
sbb
xchg
arpl
sar
pop
pushf
pop
rcr
push
cwde
xchg
sub
sub
sbb
dec
and
and
jno
jno
stos
std
push
icebp
xor
sar
lods
xchg
hlt
(bad)
cmps
and
loopne
imul
out
mov
xor
pop
pop
adc
pop
jns
cli
dec
aas
dec
cmp
aaa
repnz
repnz
cwde
repnz
xchg
jbe
pop
push
leave
loope
enter
fistp
data16
mov
xchg
and
hlt
jl
aad
ret
xor
aas
cmp
xchg
xchg
push
cmp
xlat
push
adc
ret
psubusb
or
add
mov
rcl
nop
(bad)
lods
fwait
sub
or
push
repz
inc
lods
sub
jo
xchg
ins
stos
in
(bad)
mov
lahf
ret
jl
popa
adc
sub
int3
stos
xchg
pushf
enter
and
outs
push
or
loope
and
cmp
jb
push
xor
push
out
sbb
cmc
or
mov
jle
jp
js
jmp
and
(bad)
aas
retf
lds
ret
inc
mov
cmp
sub
push
in
mov
(bad)
out
add
adc
cmp
push
sahf
sbb
mov
int3
inc
lea
jge
out
and
ds
mov
(bad)
outs
pop
add
pushf
inc
sbb
test
mov
out
push
mov
lock
cli
pop
mov
dec
cmp
aad
push
or
lahf
mov
test
neg
or
ds
std
push
mov
inc
addr16
dec
outs
push
lods
nop
sbb
dec
addr16
lods
or
and
inc
cmps
or
sub
jle
imul
pop
pop
xor
in
mov
aaa
xor
and
aam
fidiv
fmul
jmp
icebp
pushf
mov
or
adc
clc
outs
in
fnstenv
xchg
inc
jno
pop
test
fcmovnbe
dec
xchg
or
aam
fisttp
into
fwait
repnz
scas
pop
inc
fbstp
xor
out
fist
mov
arpl
int3
mov
xchg
out
hlt
fucomi
popf
retf
aad
mov
out
jne
aaa
in
xor
je
fwait
idiv
sti
or
movs
xchg
iret
cmps
retf
(bad)
pop
bound
sub
or
push
cdq
push
jno
inc
in
test
retf
popa
rcl
mov
mov
push
div
and
adc
rcr
push
hlt
xchg
stos
test
out
and
jmp
neg
enter
das
in
add
jno
inc
adc
sbb
(bad)
jmp
pop
call
aaa
fstp
pop
aam
fst
mov
(bad)
push
enter
jb
jb
outs
fs
push
push
pop
pop
fimul
pushf
das
dec
stc
push
nop
ss
rol
inc
jl
outs
mov
xchg
pop
pop
pushf
adc
retf
sbb
shl
call
dec
aaa
imul
jae
inc
fld
jge
sbb
xchg
ins
push
pop
cmp
fld
xchg
jae
cld
pop
adc
mov
gs
sbb
mov
mov
mov
lds
jnp
div
fild
xchg
jge
pop
push
and
mov
sti
xchg
test
sbb
popf
and
pop
adc
stos
repz
xchg
mov
cmp
arpl
sub
mov
mov
stos
sub
adc
inc
ret
popa
ins
mov
dec
std
xchg
test
cmp
fwait
dec
or
cmp
daa
iret
push
or
shl
aad
adc
pop
jae
mov
push
fsub
pop
fcomip
pusha
sub
test
sbb
inc
fldcw
jb
dec
ret
jb
arpl
jg
push
jno
push
dec
ja
cs
adc
adc
fmul
pop
das
ins
xchg
inc
out
xchg
nop
pop
das
(bad)
and
adc
inc
sbb
lea
cmp
push
cmp
mov
cmp
es
retf
gs
ins
movs
xor
enter
(bad)
retf
fstp
pop
clc
mov
mov
pop
xchg
xor
dec
sar
push
push
scas
adc
iret
or
push
ss
and
xchg
or
mov
stos
pop
dec
loope
push
sbb
out
outs
push
xchg
pop
fisttp
push
sahf
stc
pop
hlt
fs
es
leave
out
mov
mov
pusha
sub
and
push
repz
sahf
sbb
sbb
mov
dec
push
push
and
sti
scas
inc
mov
or
sbb
(bad)
arpl
cwde
pop
retf
push
cmp
push
or
rol
cld
mov
sbb
les
sub
enter
xor
fadd
idiv
or
mov
xor
push
ins
ror
scas
test
outs
fnstcw
mov
cmp
pushf
mov
mov
into
xor
sbb
pop
bound
lods
cwde
pushw
imul
cwde
fs
das
cmp
addr16
hlt
in
jno
out
fwait
mov
mov
or
lock
adc
cld
test
cwde
std
sub
cwde
push
test
and
jns
add
lods
adc
push
and
out
sahf
scas
das
sub
mov
and
mov
call
pusha
shr
push
mov
cmp
or
and
push
mov
gs
mov
add
scas
push
mov
jo
(bad)
cmp
fsub
and
push
iret
outs
mov
and
cmp
cwde
xchg
pop
jno
or
rol
data16
xor
push
int3
rcl
fcomp
push
jnp
sbb
sub
cmp
loopne
adc
pop
cli
adc
mov
mov
rcl
js
out
push
sbb
fld1
and
adc
inc
rcr
out
shr
sbb
jb
pop
and
add
je
push
xchg
pop
mov
pop
mov
cmp
inc
outs
(bad)
enter
jno
mov
aad
scas
test
adc
dec
in
pop
inc
jb
scas
push
stos
cli
int
jne
aaa
ret
icebp
adc
push
adc
fprem
hlt
inc
arpl
std
(bad)
out
bound
pop
bound
mov
cld
sbb
pop
pop
xchg
(bad)
adc
test
and
pop
ins
pop
lahf
mov
fisttp
fistp
pop
popa
xchg
or
ret
stos
in
mov
cmp
pop
inc
xchg
jl
or
push
and
pop
(bad)
call
fwait
sub
sbb
in
in
out
sahf
jnp
or
inc
or
retf
outs
xor
pop
bound
popf
stos
sbb
pop
and
push
shr
and
stc
pushf
mov
sbb
xchg
test
push
test
pop
lock
call
inc
bnd
inc
scas
adc
imul
jae
push
mov
jns
jb
jecxz
sub
add
call
mov
mov
out
mov
stos
pop
cwde
xor
stos
pop
xor
mov
fnstenv
popf
mov
aaa
push
js
mov
push
jb
aam
fdivr
inc
call
(bad)
retf
push
xlat
(bad)
rol
fsub
out
mov
sub
jl
int3
idiv
mov
loop
int
push
not
mov
repnz
rcl
cs
cmps
data16
dec
xchg
pop
jne
mov
mov
psubusb
pop
jecxz
inc
fistp
mov
or
test
mov
test
dec
out
cmps
out
mov
adc
out
inc
leave
adc
xchg
dec
mov
push
inc
shr
test
cwde
cmps
sub
cli
aam
adc
dec
pusha
mov
cmp
in
mov
in
out
pop
mov
mov
call
(bad)
xchg
popa
(bad)
mov
(bad)
popa
push
push
bswap
sub
ins
bound
retf
sbb
mov
dec
cli
cmp
es
pop
xchg
rcr
arpl
aam
imul
jnp
cmc
push
addr16
daa
adc
xchg
or
outs
call
or
or
push
push
mov
mov
lahf
pop
dec
xchg
jmp
push
ds
add
cmps
mov
sti
xchg
push
pop
jns
jb
inc
jmp
in
or
mov
mov
imul
pop
jg
or
xor
and
push
mov
jb
or
xlat
jmp
dec
(bad)
mov
jmp
aam
movs
lahf
cmps
mov
add
dec
mov
popf
mov
adc
push
iret
popa
sub
das
into
cmps
push
test
jmp
mov
pop
xor
pop
outs
pop
inc
xchg
int3
scas
das
movs
call
aas
retf
adc
dec
out
jecxz
popa
mov
inc
sbb
jmp
cmp
imul
je
ficom
add
fdiv
push
data16
mov
sub
(bad)
cmp
aam
sbb
push
inc
mov
and
in
adc
and
ret
test
push
cmp
mov
inc
mov
rcr
ins
imul
movs
xor
aam
mul
inc
stos
scas
mov
(bad)
lahf
aam
stos
retf
xchg
cmp
xchg
stos
int3
cmps
nop
test
scas
fsub
dec
aad
stc
test
sar
call
jae
sbb
xchg
pop
dec
imul
loopne
cli
mov
cmp
sub
push
clc
sbb
xlat
mov
xchg
mov
fwait
inc
adc
inc
out
sbb
arpl
cld
and
pop
and
cmp
push
cs
aam
xor
and
mov
inc
sub
adc
in
mov
xchg
call
lods
aam
mov
jb
out
cmp
hlt
outs
call
sar
mov
sbb
cmp
fst
test
inc
fcom
ror
dec
jg
jmp
neg
jmp
cmps
push
movs
jge
pop
jp
push
mov
in
daa
imul
sub
in
xor
les
jmp
aaa
sub
adc
mov
sbb
call
jo
jle
inc
xchg
sbb
add
dec
xor
sbb
int3
jae
das
mov
in
fidiv
mov
dec
ds
int
test
call
fwait
cmp
clc
imul
lds
mov
mov
call
cmp
and
mov
or
das
call
sbb
mov
pusha
in
fld
mov
fcmovne
fcomp
jge
xor
mov
sub
mov
mov
mov
pop
inc
pop
jecxz
fidivr
shr
adc
add
cwde
retf
imul
(bad)
popa
sub
cmp
inc
push
jb
cmp
jnp
sbb
adc
sbb
or
push
inc
aad
and
push
imul
push
sub
jae
dec
fstp
push
xor
xchg
or
push
inc
inc
xchg
xchg
nop
adc
popf
cld
pop
mov
inc
xor
imul
lahf
not
sub
jecxz
mov
adc
cmp
cmps
inc
fsubp
adc
int3
pushf
and
mov
pop
sbb
push
or
fwait
push
xchg
fs
mov
sub
jmp
dec
pop
push
cmps
gs
iret
xchg
arpl
push
cmp
jnp
sbb
test
adc
fisub
fcomp
inc
push
push
and
not
mov
push
(bad)
fsubr
dec
pop
inc
rol
pusha
push
and
lock
pop
shr
jle
dec
inc
outs
imul
das
lods
iret
jo
jb
xor
push
popf
outs
dec
mov
mov
loope
adc
mov
(bad)
pushf
aam
pop
jge
repnz
movs
mov
pop
cmp
ss
das
fst
and
or
fcomip
fcom
in
(bad)
push
clc
add
push
pusha
mov
mov
inc
cmp
jg
cdq
and
ds
cdq
or
cmp
call
inc
out
int
add
lahf
xchg
push
call
push
xchg
aam
adc
sbb
(bad)
aam
cmp
xchg
cmps
pusha
test
pop
xor
fidivr
aad
xchg
outs
lds
cwde
pop
cmp
mov
fsub
movs
sti
call
loop
inc
pusha
jmp
jo
mov
arpl
xchg
jge
push
cmp
or
pushf
add
sub
cmc
xchg
sbb
mov
int
inc
pop
pop
push
mov
adc
icebp
xchg
push
out
xchg
cmp
push
(bad)
fstp
mov
dec
(bad)
jl
mov
fisttp
dec
and
repnz
jl
xchg
dec
popf
push
mov
adc
imul
inc
cld
sbb
gs
out
arpl
pop
loopne
inc
fistp
inc
ss
movs
sub
or
xor
mov
pop
aam
aaa
jecxz
pop
imul
xchg
fdivr
call
in
jb
xchg
lds
test
stos
or
es
mov
xchg
push
mul
or
jnp
cmps
adc
das
out
or
jp
add
pop
add
icebp
stos
test
aas
call
and
lea
fmul
jp
xchg
fs
pop
fimul
sahf
add
mov
adc
loopne
mov
inc
lds
int
pop
mov
mov
adc
inc
in
loopne
xor
in
les
mov
jmp
inc
mov
pop
ds
ret
pushf
push
jg
sub
das
sbb
iret
ins
ss
retf
call
push
int3
pop
adc
pop
push
aas
repnz
(bad)
fstp
pop
mov
mov
push
mov
adc
cmp
sub
je
nop
and
mov
aam
jmp
sub
mov
(bad)
push
neg
test
cwde
das
cmp
and
arpl
inc
push
inc
retf
adc
sub
fisttp
fdivr
sahf
sbb
push
enter
test
xchg
mov
pushf
push
cmps
jg
in
mov
push
pop
rcr
je
add
popa
and
cmps
stos
movs
hlt
dec
hlt
call
rcl
pop
or
(bad)
fidiv
in
pushf
and
pushf
push
rcr
mov
sar
mov
cli
nop
out
pop
pop
mov
ins
add
test
push
and
inc
pop
mov
repnz
pop
or
retf
mov
sar
popa
fcmovnb
rcl
push
push
mov
and
add
addr16
std
imul
sub
(bad)
cmp
enter
cmp
fimul
and
add
sahf
add
lods
in
imul
xchg
cwde
xlat
(bad)
outs
es
gs
adc
movs
dec
pop
imul
in
fbld
cli
push
jmp
es
mov
int
jl
jmp
jmp
push
xchg
add
or
pop
inc
dec
pop
ins
repnz
push
jmp
retf
fwait
aad
test
call
aaa
lods
mov
fwait
shl
mov
pop
inc
hlt
data16
jo
(bad)
clc
mov
push
lahf
push
ja
(bad)
jae
jmp
repz
iret
jmp
fadd
xchg
rcr
dec
push
es
lea
pop
cmp
lahf
out
lock
punpckhwd
jmp
pop
adc
es
dec
retf
cli
pop
arpl
sub
mov
clc
jl
mov
dec
mov
fbstp
in
xor
push
jae
lods
cmp
jmp
xchg
in
call
pushf
sahf
jl
cld
sbb
inc
mov
into
retf
loop
push
jmp
(bad)
pop
add
leave
fwait
ds
jmp
leave
adc
sbb
inc
sti
retf
fidivr
push
scas
mov
xchg
pop
pop
js
clc
sub
icebp
cdq
movs
mov
add
hlt
test
adc
push
iret
cmc
or
pop
mov
lock
pusha
fs
pop
sbb
in
mov
cwde
sub
jb
dec
(bad)
push
outs
mov
fwait
xor
pcmpgtb
pusha
cmp
pop
ret
pop
xchg
xchg
sub
pop
mov
jbe
sbb
mov
and
mov
add
adc
lods
mov
bound
mov
test
lea
mov
add
sub
aad
fistp
pop
or
(bad)
fild
fistp
repz
or
in
jecxz
test
in
sti
pop
nop
and
push
xlat
xchg
add
pop
fsubr
cmp
sub
mov
xchg
mov
sahf
sub
nop
call
mov
add
push
pop
dec
test
outs
jno
jae
xchg
push
mov
imul
aad
test
sub
jge
xchg
out
cmps
xchg
adc
and
je
loopne
call
shl
(bad)
addr16
rcl
cmps
mov
cld
popa
add
inc
out
xchg
jo
pop
inc
add
inc
mov
push
fdivr
in
and
jbe
mov
mov
lahf
aas
fwait
lods
sar
loope
imul
push
jns
sub
pusha
lahf
push
xchg
out
sbb
fisub
scas
outs
test
out
push
jb
pop
dec
add
xchg
lds
push
sbb
sub
data16
mov
fnstsw
xor
push
jb
mov
sti
not
sub
int3
imul
push
in
push
push
fistp
xor
xchg
cli
das
js
xor
(bad)
mov
mov
rcr
repz
cdq
ja
fsubr
fs
jae
imul
dec
fbld
loop
lods
add
fst
cmp
sbb
rcr
popf
mov
xchg
xchg
pushf
push
push
call
bound
lock
push
fnstenv
fs
mov
(bad)
push
or
sub
fnsave
jne
outs
mov
je
or
test
cmp
out
jp
fild
sub
test
fwait
out
mov
inc
cld
pop
pop
aas
mov
dec
mov
xor
imul
outs
mov
mov
outs
push
mov
jge
sub
stos
repz
fldcw
pop
fild
mov
and
or
jle
(bad)
and
cwde
mov
in
hlt
mov
mov
js
fst
inc
push
fs
push
jbe
sbb
jae
hlt
jg
xchg
sub
in
pop
(bad)
das
push
inc
and
push
lock
js
addr16
pop
xchg
push
js
dec
mov
in
fld
ja
sbb
jecxz
push
push
mov
mov
int
jb
sub
icebp
cld
push
and
add
xor
cdq
xchg
enter
push
imul
push
pop
imul
sbb
fwait
and
adc
call
sbb
aas
xor
cld
in
mov
(bad)
popf
mov
enter
loope
and
and
inc
cmps
xchg
test
adc
call
push
xor
lods
call
popa
sbb
or
enter
add
pop
mov
leave
fdivr
jno
pop
or
out
dec
jmp
(bad)
popf
push
test
outs
(bad)
mov
adc
xor
adc
sub
mov
and
add
or
loop
and
xchg
into
test
sahf
adc
adc
fcom
sbb
jo
xchg
xchg
sub
sbb
lock
push
dec
shl
adc
(bad)
adc
mov
push
and
xor
(bad)
mov
int
outs
jno
push
jbe
mov
or
lock
(bad)
out
pop
dec
mov
aad
(bad)
and
pop
aam
add
add
test
sar
push
fdivr
fwait
or
and
pop
fnstenv
fwait
leave
je
mov
fcomp
push
popa
hlt
or
icebp
dec
xchg
push
js
mov
call
in
cli
push
xchg
inc
sahf
sbb
jmp
mov
bound
pop
inc
outs
xchg
gs
jl
out
mov
and
repnz
and
shr
sar
xchg
xchg
or
hlt
lock
jmp
lock
in
loop
into
adc
sbb
inc
xor
fs
cwde
mov
cmp
pop
loop
push
retf
mov
adc
cmps
out
push
imul
pushf
cmp
push
pop
pop
mov
jp
pop
xchg
cmp
and
je
push
dec
cdq
jg
jecxz
xchg
je
adc
xchg
(bad)
jmp
test
sbb
or
cdq
xor
stos
dec
out
add
mov
sbb
in
daa
add
or
cmp
rcr
loopne
jns
mov
lea
cmc
fimul
hlt
jle
sub
in
repz
push
add
fs
jae
test
inc
movs
sbb
push
mov
retf
pop
cmp
dec
lea
cs
fdivrp
inc
call
mov
cmp
jle
adc
inc
cmp
inc
outs
nop
add
jbe
or
and
pop
push
push
cmp
lahf
cli
addr16
fsubr
out
and
ins
cmp
aaa
inc
xchg
retf
add
sub
mov
fcomp
push
scas
(bad)
pop
pop
adc
ficom
mov
pushfw
push
sbb
(bad)
mov
shl
jnp
daa
push
js
fmul
sub
stos
(bad)
std
ja
mov
mov
imul
(bad)
stos
das
test
xchg
(bad)
jl
jne
dec
int
cmp
inc
out
or
jge
(bad)
cmc
imul
pop
sub
lods
push
jnp
pop
ret
fld
into
and
push
jge
shr
dec
aad
mov
add
stos
pushf
inc
(bad)
call
jno
pushw
(bad)
cmc
in
lea
js
aad
push
adc
dec
dec
xor
mov
gs
call
leave
mov
push
adc
aad
add
into
push
mov
xchg
ja
push
or
add
in
xor
jne
pop
stos
ins
sbb
(bad)
adc
ins
fs
xchg
mov
cmc
shr
mov
dec
fidiv
jns
mov
mov
sbb
pop
xchg
stc
shl
add
lahf
adc
and
nop
cmp
fcom
loop
fidiv
cwde
movs
push
or
inc
(bad)
iret
sbb
adc
xlat
sbb
fbstp
inc
inc
ds
jge
pusha
pop
in
cmps
stc
iret
mov
pushf
pop
jbe
mov
in
cld
sti
cli
mov
push
cmp
jg
mov
inc
cdq
sbb
and
clc
fisubr
in
push
nop
cmps
mov
dec
movs
dec
dec
push
mov
inc
jl
mov
xchg
ins
pushf
aam
mov
call
enter
dec
sti
push
and
rol
fistp
xor
shl
push
add
movs
sbb
mov
data16
daa
test
fs
pop
rol
mov
jns
inc
lea
mov
pushf
repnz
push
dec
mov
dec
fldcw
xor
outs
dec
(bad)
cld
pop
push
bound
pop
sub
add
je
inc
mov
inc
iret
iret
outs
and
inc
push
stos
jo
sub
fcomp
outs
out
or
add
mov
add
xor
sub
mov
loopne
mov
in
mov
fisub
sub
xchg
push
sbb
dec
dec
pop
pop
outs
popf
push
adc
cmp
jl
mov
and
cld
daa
fdivp
sbb
(bad)
push
xchg
scas
sbb
dec
cmps
stc
mov
test
sub
test
sub
cmp
cs
cdq
ficom
mov
in
xor
(bad)
outs
xchg
inc
push
les
ins
int
mov
and
adc
push
and
add
aam
xor
jbe
shl
inc
jno
aad
fucomp
(bad)
mov
push
out
push
sub
xor
faddp
imul
sbb
cmp
call
jecxz
push
cmp
mov
xlat
add
adc
into
sahf
mov
je
or
pop
dec
inc
sbb
cmp
jb
imul
mov
shl
and
mov
imul
push
push
gs
mov
out
xchg
jnp
shl
push
pop
xchg
push
repnz
add
movs
adc
dec
cmps
or
imul
inc
pop
pop
mov
xchg
cmp
xchg
inc
add
rcl
inc
test
icebp
ins
loope
mov
add
push
xlat
pop
loopne
add
and
add
xchg
dec
mov
inc
xchg
sub
sub
sub
cmp
dec
aam
pop
stos
iret
out
fild
es
and
cwde
xchg
push
out
jnp
int3
in
retf
pop
xchg
sahf
push
jae
push
sub
cmc
pop
jno
xor
loop
(bad)
shl
xlat
pop
fisub
sub
call
mov
arpl
mov
mov
mov
(bad)
adc
mov
pusha
xchg
lahf
in
cwde
pop
sub
nop
fcmove
lods
jo
mov
out
ret
call
adc
cmp
cwde
jl
sub
cs
clc
loopne
fisttp
pop
arpl
(bad)
mov
sub
jmp
lods
aaa
bound
imul
jmp
mov
xchg
loopne
inc
ret
fld
fld
xchg
jne
scas
fptan
and
repnz
xchg
pop
(bad)
mov
out
int
fist
ficom
sti
call
sbb
fmul
cmp
int
data16
pop
mov
fwait
and
sub
xor
or
pop
fistp
js
mov
lahf
in
push
pop
push
push
mov
rcr
loope
mov
or
nop
fbstp
pusha
push
mov
lock
sbb
das
loopne
pop
mov
call
pop
pop
popf
sub
imul
pop
and
add
xor
push
out
call
inc
lods
push
les
sbb
adc
xchg
sub
lahf
or
pusha
sti
pop
pusha
push
push
loopne
sub
outs
xchg
jle
mov
inc
add
xor
js
addr16
mov
sub
push
cmp
inc
push
xchg
and
cmp
scas
popa
dec
mov
mov
es
jp
sbb
fidivr
ja
imul
adc
sbb
test
fwait
popf
push
mov
pop
adc
rcl
lahf
lods
bound
mov
pop
pop
mov
pushf
pop
jg
aas
ins
aam
mov
xchg
pop
movs
adc
xor
getsec
outs
adc
clc
sub
add
or
shl
dec
cld
rcr
jmp
jmp
sbb
hlt
jl
and
aas
xor
call
imul
xor
sub
push
lods
outs
fcomp
cmp
call
ficomp
mov
lea
xor
lahf
stos
xor
lods
jo
mov
pop
push
lods
movs
test
mov
fcom
lods
jo
push
adc
xor
lods
pop
clc
cmp
call
ss
adc
sub
mov
adc
clc
lods
clc
ret
xchg
inc
cmp
lock
or
mov
out
sub
push
xchg
scas
and
pop
dec
repz
or
cmp
xlat
mov
repz
push
cs
mov
xchg
lea
inc
lea
add
cdq
(bad)
aaa
mov
lahf
pusha
inc
adc
push
cmp
movs
(bad)
stos
mov
sbb
inc
shr
clc
cmp
pop
popf
cmp
cdq
out
dec
cwde
inc
test
sbb
adc
mov
pop
add
cli
sub
jae
data16
jmp
jbe
mov
dec
(bad)
jl
mov
ins
retf
lods
mov
sbb
lahf
mov
fcomp
outs
call
popf
xor
hlt
sub
cmc
mov
jmp
mov
stos
sub
js
jne
push
sti
shr
mov
and
push
pusha
xor
jo
pop
vpmuludq
cdq
mov
cmp
push
call
xchg
in
call
jbe
and
nop
dec
in
pop
xchg
pop
mov
pop
ficomp
lahf
je
mov
lahf
sar
push
sub
dec
mov
pop
xchg
out
xchg
dec
push
mov
cmp
mov
cmc
icebp
jnp
clc
sub
and
jge
push
jl
stos
sub
inc
and
ins
lds
aaa
js
xor
pop
ss
rcl
bound
shl
sbb
mov
ja
or
ins
add
xchg
inc
mov
push
test
pop
cmp
mov
rol
pop
scas
aad
dec
pop
xor
repz
push
stos
push
dec
jno
addr16
rdpmc
ret
ror
ret
pop
pop
mov
out
sti
lahf
cmps
jns
mov
iret
or
retf
jbe
mov
ds
push
push
sub
pop
sbb
fcomp
not
pop
mov
pusha
xor
adc
ins
test
mov
mov
cli
mov
push
push
popf
add
dec
push
ret
jg
push
xchg
add
ins
outs
or
retf
dec
push
mov
mov
ficomp
repz
pop
sbb
pop
lock
fwait
aaa
mov
call
sub
jmp
sbb
mov
stos
loop
dec
inc
jg
sub
push
mov
mov
push
pusha
sub
pushaw
mov
call
inc
pop
push
jae
neg
cmp
shl
cmp
mov
xchg
push
jg
fwait
and
rcl
out
cmp
mul
shl
(bad)
mov
ins
inc
mov
sbb
jge
scas
fmul
cmp
xor
ret
sti
and
in
pushf
add
mov
push
push
push
mov
popf
bound
push
ja
into
popa
cmp
je
add
jb
stc
pop
(bad)
fisub
xchg
out
outs
xchg
(bad)
hlt
push
jle
rcr
test
fiadd
sub
leave
les
test
lahf
xchg
ss
mov
sbb
mul
popa
cmc
mov
ins
fbstp
mov
mov
loopne
ja
mov
push
or
mov
push
sti
(bad)
sbb
pop
mov
fwait
mov
dec
sub
repz
retf
dec
push
push
push
loop
pop
jmp
(bad)
fld
xchg
xchg
push
ja
jns
xchg
out
adc
fimul
mov
jno
cld
call
push
pop
mov
push
clc
repz
xor
mov
scas
ret
sub
pop
push
inc
iret
popf
icebp
outs
les
icebp
sbb
aaa
cld
push
aam
sub
mov
repz
xchg
ret
fld
stos
ss
pop
pop
in
jle
inc
jo
mov
fstp
jecxz
push
pop
pop
push
lods
xlat
jge
cli
int
fs
jmp
and
xchg
int
mov
fsubr
popa
outs
jbe
mov
call
pop
xchg
lds
in
hlt
neg
shl
outs
sub
or
pop
(bad)
xor
add
frstor
add
lods
jp
popf
lods
in
neg
gs
pop
ret
push
unpcklps
fstp
xlat
sbb
pop
in
ss
push
aad
js
fmul
and
scas
mov
mov
ror
es
sub
in
aas
mov
add
xchg
stos
lea
pusha
mov
daa
and
stc
adc
les
mov
sbb
(bad)
pop
ret
cdq
cmc
sbb
and
inc
push
pop
push
mov
jmp
cmp
cmp
test
imul
push
out
push
mov
aad
cs
fistp
inc
int
call
fwait
pop
(bad)
gs
mov
jns
stos
pop
rcr
shl
rol
xor
int
div
cmp
fwait
mov
sub
les
adc
xchg
add
dec
outs
leave
xchg
imul
ds
lea
in
(bad)
in
push
ret
inc
pop
xchg
rcr
fmul
shl
dec
pop
aam
shl
les
daa
lods
aad
outs
leave
sub
sbb
pop
lahf
les
xchg
pop
xchg
lds
pop
stos
das
ret
or
es
or
iret
imul
or
pop
cmc
das
and
mov
jg
jne
push
xchg
iret
ins
sbb
cmp
jmp
jg
in
mov
mul
fadd
xchg
fcom
xor
(bad)
sub
xor
adc
and
sahf
daa
imul
push
test
cmp
and
out
shl
push
mov
jl
lea
sub
cs
cdq
pop
nop
fild
das
retf
rol
repz
cmps
gs
and
pop
call
iret
pop
xor
outs
push
sbb
pop
pop
js
jg
cmp
xchg
mov
mov
enter
fs
xchg
pop
dec
fistp
imul
xchg
movs
es
mov
mov
jae
fwait
dec
out
popf
not
push
bound
js
mov
mov
push
lock
xchg
mov
or
fwait
clc
xchg
dec
imul
test
inc
push
iret
mov
xchg
inc
pusha
fild
xchg
add
xchg
mov
or
mov
xchg
inc
sub
outs
mov
mov
xor
psrad
jo
aam
push
fldln2
(bad)
jmp
in
sub
push
bnd
inc
jle
ret
adc
sbb
icebp
sbb
loop
xchg
mov
aaa
sbb
cmps
pop
fld
sahf
(bad)
or
xchg
clc
cli
pop
inc
call
sbb
pop
jbe
stc
mov
xor
or
ins
fst
xor
push
xchg
pop
push
ffree
dec
hlt
mov
dec
xchg
push
fdiv
bound
sar
adc
jne
std
pusha
cmp
sar
mov
xchg
adc
pop
dec
jo
pop
adc
loope
sub
(bad)
sar
mov
jecxz
pop
mov
push
(bad)
push
cli
mov
jp
xor
xchg
push
push
retf
js
retf
jl
mov
cs
stos
and
adc
stc
and
dec
cdq
push
dec
push
fiadd
sub
sub
(bad)
jmp
xchg
daa
push
popf
(bad)
sbb
popf
outs
mov
cwde
imul
inc
fisub
cmp
addr16
push
and
out
not
ins
mov
xchg
imul
retf
pushf
cmp
dec
(bad)
es
inc
jb
int3
push
pushf
mov
jle
fsub
jl
xchg
xor
aas
sar
sbb
mov
jo
ins
inc
sbb
mov
iret
pop
nop
and
pop
pop
pop
outs
cs
mov
cmp
cmp
inc
lahf
jmp
lahf
dec
jmp
addr16
mov
adc
gs
cld
rcl
or
push
pop
dec
sbb
mov
mov
mov
das
aaa
(bad)
lods
(bad)
adc
cmp
and
mov
add
and
inc
mov
mov
pop
cmp
sbb
pusha
xchg
sub
jge
push
ret
jb
adc
repnz
cwde
call
jb
and
or
test
sub
nop
cmps
hlt
test
xchg
pushf
mov
jbe
push
inc
push
movs
out
jbe
mov
daa
enter
mov
sar
add
push
std
jmp
stc
das
ins
jns
test
mov
xchg
mov
jge
xor
cmps
add
arpl
outs
cmp
inc
rcr
adc
clc
jae
mov
and
xchg
xchg
pop
push
aad
repnz
das
cmp
outs
sti
mov
pop
push
push
inc
inc
scas
cmp
sbb
outs
sub
xchg
push
and
dec
dec
cmp
(bad)
test
dec
mov
sub
in
mul
pop
mov
add
dec
popf
sub
sub
ins
mov
sar
push
sahf
aaa
out
mov
icebp
int
test
fsub
gs
hlt
xor
sbb
outs
cmps
mov
lahf
adc
loop
mov
or
call
dec
sub
or
push
into
xchg
stos
or
jg
cmp
mov
mov
pop
mov
jmp
fnsave
inc
and
out
outs
cwde
repz
or
xor
cmc
shl
push
jp
call
and
iret
jne
dec
sahf
mov
pushf
inc
sbb
jle
not
inc
adc
in
fistp
lock
mov
mov
lahf
add
xchg
push
mov
cs
mov
fistp
mov
stc
dec
mov
jnp
fcmovnb
push
inc
pop
mov
repnz
ficomp
jbe
ins
dec
jmp
fstp
adc
pop
xchg
mov
sub
and
cmp
lock
jl
outs
call
in
out
add
inc
sti
mov
xor
adc
or
lahf
addr16
stc
retf
inc
lods
sub
and
pop
(bad)
mov
cmc
inc
cmp
hlt
xchg
lods
call
sub
dec
std
cmp
bound
ret
fstp
fstp
stc
xor
mov
rcr
sbb
push
mov
push
ins
inc
inc
push
movs
das
jnp
pop
(bad)
push
repz
push
dec
add
(bad)
inc
clc
(bad)
mov
pop
jl
push
mov
dec
fdivr
das
(bad)
(bad)
sar
stc
cdq
cmp
imul
push
push
xchg
rcr
pop
adc
rcl
jecxz
mov
leave
out
jmp
adc
pop
inc
xchg
cmp
xlat
or
or
adc
fisttp
cwde
xchg
cmps
sub
xchg
stos
js
pushf
test
sbb
xchg
mov
fcomp
lods
xlat
fs
xor
jmp
mov
jne
adc
(bad)
out
and
jp
mov
popa
ds
ret
enter
retf
fwait
loop
push
xchg
arpl
and
sub
in
cli
or
into
sub
push
xchg
sbb
arpl
ins
mov
xchg
pop
rol
dec
shl
mov
mov
lahf
jg
ins
fidiv
test
jno
jbe
mov
addr16
ror
mov
sub
test
cld
xchg
sahf
clc
lahf
and
movs
ins
jae
cld
lahf
(bad)
mov
mov
inc
jl
push
fdiv
test
loopne
pushf
lock
jl
adc
in
loope
repnz
mov
push
dec
call
pop
pusha
cdq
popf
pop
add
sub
jnp
sub
push
in
pause
and
inc
push
lahf
mov
outs
pop
push
in
clc
inc
xor
and
stc
xchg
jg
adc
or
mov
cmp
sbb
jbe
into
cmp
mov
jl
push
cmp
lea
sub
sub
sbb
in
dec
mov
xchg
add
and
clc
aam
fstp
sbb
(bad)
cld
adc
xchg
ins
icebp
pusha
addr16
std
imul
mov
jl
pop
sub
fs
mov
sbb
imul
stos
xchg
mov
add
fcmovnb
or
iret
ins
xchg
mov
retf
rcl
rsqrtps
into
and
mov
fimul
and
mov
and
mov
ja
cld
dec
add
jb
cli
pop
test
pushf
shr
mov
pop
push
pop
daa
retf
jbe
jne
ret
cs
xchg
sbb
sbb
pusha
xchg
scas
xchg
cs
movs
lahf
dec
mov
loopne
or
jmp
dec
cli
sub
dec
mov
cmp
pop
adc
mov
mov
in
jle
push
push
sub
add
rcr
rcl
jp
clc
loopne
mov
xor
out
jge
or
mov
and
rcr
xchg
data16
or
cmp
retf
inc
push
or
pop
cmps
push
outs
movs
xchg
sub
jmp
dec
xchg
or
push
sub
retf
push
adc
xchg
add
push
mov
(bad)
cmp
sub
jecxz
jnp
cdq
arpl
sub
xor
push
adc
test
imul
sti
xor
fstp
jne
dec
pushf
sbb
jnp
sbb
les
mov
ret
fcom
pop
daa
fdiv
pushf
add
mov
or
cs
jl
in
and
dec
aam
xor
mov
pushf
or
jge
cmp
sbb
iret
and
pop
shl
in
xlat
jb
pop
adc
add
aad
inc
retf
loop
ins
jnp
hlt
pop
fisttp
out
test
jnp
loopne
dec
sti
push
fs
cwde
(bad)
pop
sbb
inc
adc
mov
mov
(bad)
les
js
xor
xor
aaa
adc
or
push
dec
iret
and
jb
adc
inc
add
je
mov
retf
jbe
bound
xor
add
push
ds
jmp
cmc
dec
push
in
push
call
inc
rol
test
inc
inc
cmp
mov
ds
fbld
inc
outs
pop
cmp
repnz
jbe
daa
in
das
rol
cmps
mov
js
or
ficomp
clc
sbb
pop
add
adc
jmp
shl
dec
shl
fdivr
cdq
jp
mov
daa
sahf
cmp
jle
lods
jle
pop
pop
les
icebp
lahf
mov
or
and
bound
data16
and
or
mov
(bad)
mov
cmps
pop
ret
mov
xchg
out
mov
fs
jg
scas
ja
cmp
mov
mov
or
call
xchg
cwde
out
xchg
cli
jle
mov
dec
cmps
xlat
xor
xor
mov
in
push
stos
sub
and
sub
daa
imul
push
pop
sti
in
(bad)
xor
push
mov
or
ss
gs
push
(bad)
mov
sbb
pop
sbb
fisttp
or
or
ins
test
scas
inc
and
jmp
inc
add
je
add
jmp
sbb
sar
cmp
addr16
push
sbb
sbb
cmp
mov
fsub
sub
out
pop
dec
sti
pop
int3
jl
pop
popf
mov
inc
xchg
(bad)
pop
fldcw
ds
push
jmp
inc
loope
mov
push
test
sbb
std
and
sub
jle
sti
mov
push
dec
scas
loopne
xchg
in
pop
adc
ret
dec
xor
add
inc
jp
adc
dec
cs
scas
lods
(bad)
cld
dec
xor
or
cwde
aam
aas
and
push
push
ja
fst
lock
dec
(bad)
mul
jmp
(bad)
popf
dec
(bad)
shr
js
cmp
push
ja
fmul
or
cdq
pop
jns
and
add
aaa
iret
dec
pop
repnz
fs
or
xchg
pop
dec
into
push
mov
in
hlt
outs
movs
cld
inc
fs
inc
add
call
addr16
stos
jbe
mov
and
jmp
sar
pop
mov
cmps
fidiv
and
movs
pop
cld
push
pop
and
movs
fdiv
push
sub
stc
mov
ins
repz
ficomp
es
push
test
add
rol
fsubr
(bad)
sub
xor
call
addr16
mov
cmps
rcl
xor
sub
jecxz
aad
and
or
or
fdiv
call
bswap
loope
mov
out
add
mov
pop
into
mov
gs
sub
aaa
mov
push
xchg
callw
jge
adc
call
mov
or
cwde
inc
pushf
fld
push
pushf
sbb
push
pop
jge
fdiv
or
pop
stos
into
mov
mov
or
and
loop
out
sti
shr
jl
xchg
sub
jg
call
and
push
mov
ja
mov
int3
(bad)
out
sub
(bad)
jmp
push
movs
fiadd
pop
mov
out
jmp
ds
loope
cmp
jbe
fnstcw
fs
adc
push
xchg
mov
(bad)
int
je
xchg
sbb
push
in
pop
call
loope
out
pop
cmp
dec
sub
cmp
inc
ret
jge
xor
rcr
mov
fistp
push
fwait
inc
sbb
test
cmp
call
int3
mov
pop
lods
push
aam
bound
adc
inc
lods
push
scas
or
lods
add
in
(bad)
dec
add
sbb
mov
std
mov
mov
enter
arpl
jnp
pop
add
cmp
cmp
dec
adc
adc
iret
inc
push
and
jnp
gs
cmp
adc
dec
xchg
sub
pop
call
icebp
mov
les
fcmovnu
add
inc
fwait
test
push
loop
sbb
and
out
bound
pop
cmp
jl
cmp
push
sub
xchg
xor
int3
neg
adc
jge
outs
sbb
cmps
stos
and
or
sahf
sbb
retf
bound
jmp
sbb
push
jnp
aam
push
mov
pop
lods
add
aas
(bad)
cdq
scas
mov
push
into
rcr
mov
fisub
mov
jle
mov
ins
xchg
mov
dec
aam
and
pop
in
xchg
dec
cmp
bound
fwait
loop
add
adc
push
fnsave
sti
sbb
lods
cdq
clc
leave
add
test
xor
nop
push
or
scas
shl
xlat
sbb
inc
call
aam
jle
cwde
xchg
mov
addr16
fwait
pop
sbb
and
test
je
inc
inc
sbb
icebp
mov
ins
std
iret
lds
xor
jmp
and
inc
les
xchg
adc
outs
adc
mov
or
mov
pushf
fidiv
push
test
cwde
sub
les
pop
test
retf
iret
iret
inc
test
push
cmp
xchg
stos
cmc
faddp
popf
enter
sub
fadd
icebp
jmp
xchg
aad
lods
cmp
sbb
test
sbb
std
sbb
pop
outs
lods
push
mov
ror
frstor
mov
mov
mov
out
push
mov
fcom
pop
arpl
push
dec
enter
ins
cld
dec
cld
test
and
mov
xchg
popf
jbe
cmp
fs
iret
daa
repz
out
add
ret
mov
ret
cmp
dec
lods
stos
aad
inc
inc
mov
fdiv
das
push
retf
inc
jl
xchg
mov
inc
adc
cmp
xchg
mov
repnz
fnstenv
iret
cmp
lock
pop
sbb
mov
pop
cld
pop
mov
inc
adc
vmulss
xor
int3
movs
aaa
inc
push
repz
jp
xchg
jbe
and
adc
sahf
dec
lock
popa
xor
sbb
sahf
cmp
popf
adc
sub
pop
jge
mov
mov
je
ficom
or
dec
imul
push
aam
push
sti
jb
sbb
hlt
ficomp
jb
pop
push
(bad)
xor
xor
fs
leave
(bad)
std
add
lahf
mov
int3
and
pusha
push
iret
nop
ret
fistp
jmp
push
sbb
(bad)
dec
imul
icebp
sbb
stos
pop
ret
frstor
les
jns
mov
jne
jl
sbb
jmp
stos
fbld
jno
xor
test
jns
cdq
dec
cdq
call
lock
imul
fsub
push
inc
jns
test
inc
pop
ss
in
sub
push
inc
mov
adc
into
push
inc
cdq
scas
sbb
inc
jle
xor
repnz
or
js
int3
lods
inc
mov
pop
push
mov
push
gs
sbb
xor
cmovne
mov
sub
into
push
sub
cmps
out
ret
mov
scas
jl
in
jle
cdq
iret
in
lock
inc
sbb
jo
in
dec
fisttp
and
fcomp
inc
(bad)
test
dec
in
cwde
mov
(bad)
jmp
mov
push
inc
mov
mov
into
fwait
cmps
popf
lea
mov
popa
nop
iret
stc
arpl
mov
(bad)
ja
or
fmul
pushf
dec
test
stos
xchg
stos
add
pop
jmp
cld
push
mov
pop
push
sbb
shl
add
mov
aam
inc
jmp
cmps
ins
inc
push
stos
mov
mov
dec
out
adc
cmc
mov
pop
out
sbb
movs
shl
add
inc
ret
dec
outs
inc
sub
cmp
out
adc
xchg
xor
das
cmps
mov
or
xchg
jb
and
inc
inc
dec
mov
call
iret
(bad)
mov
ss
(bad)
xchg
sar
cmps
stos
sbb
es
mov
xchg
out
xor
int
inc
sub
jae
push
pop
jb
ins
push
(bad)
or
imul
addr16
stos
int
in
xchg
cld
pop
pop
xchg
(bad)
mov
add
jecxz
push
pop
int3
pop
in
bound
rep
fstp
fwait
jl
movs
cs
or
mov
enter
in
inc
or
fwait
inc
clc
pop
fild
lock
push
jmp
mov
clc
sbb
cli
push
fmul
adc
cmp
int
mov
add
mov
ja
dec
ds
mov
test
outs
sbb
stos
lahf
shr
mov
ret
cmc
vmovshdup
int
push
movs
pushf
leave
adc
das
dec
cmps
sub
sub
xchg
enter
pusha
aas
mov
sub
push
addr16
ja
and
sub
cdq
xor
jo
and
out
retf
fadd
xchg
sahf
scas
clc
scas
adc
fsub
mov
mov
stc
enter
and
fwait
pop
rcl
fist
inc
xlat
pop
mov
mov
pop
popa
push
push
out
jb
(bad)
in
jl
sbb
aaa
pop
in
mov
mov
jge
inc
cdq
jmp
(bad)
mov
mov
lea
dec
pop
push
test
push
jbe
loop
adc
(bad)
or
popa
fs
aad
mov
dec
jo
xchg
mov
mov
iret
push
sbb
test
mov
daa
cmpxchg
pop
out
sub
mov
call
and
mov
sub
jp
xchg
popf
xor
cmp
out
sbb
in
fs
xchg
call
push
adc
mov
adc
nop
nop
stos
and
(bad)
movs
fs
cwde
(bad)
push
jmp
outs
pusha
(bad)
cmp
xor
aaa
sub
js
pop
push
fistp
fcomp
xchg
or
ss
mov
rcl
mov
mov
mov
adc
lods
jle
bound
jne
sbb
xchg
adc
jno
pusha
sub
lds
push
cmp
xchg
mov
(bad)
adc
inc
in
nop
mov
dec
add
jp
sar
jno
mov
ins
div
cmc
xor
pop
xchg
adc
sub
xchg
fcom
inc
in
xor
cmps
mov
xchg
lea
ret
sbb
jmp
rcr
int
int3
or
dec
sub
sub
dec
scas
int3
cmp
xlat
push
push
or
jmp
fidiv
sbb
(bad)
sub
lock
jle
imul
adc
mov
out
sahf
push
xchg
cmp
(bad)
fdiv
int
push
or
sub
xchg
mov
push
adc
ins
pop
cli
(bad)
jecxz
retf
mov
fist
xchg
adc
in
ins
inc
loopne
lds
cmp
add
rcr
xchg
mov
out
mov
mov
stos
pop
fidiv
mov
(bad)
aaa
xchg
and
sub
or
lock
adc
aad
aas
ror
pop
aaa
mov
inc
xor
stos
cmp
jl
sub
(bad)
std
inc
xor
push
cmp
jp
pushf
jp
sub
jg
inc
cmp
dec
cmp
sbb
or
mov
mov
lds
push
xor
leave
mov
mov
leave
dec
mov
pop
or
mov
inc
pop
stos
loopne
xchg
(bad)
pop
jns
pop
pop
pop
or
jnp
aas
cld
cmps
pop
xchg
es
int3
dec
or
xchg
adc
lods
test
or
push
sbb
scas
cmp
cli
xor
cmp
push
test
jmp
xor
lds
xor
ret
add
into
xchg
and
(bad)
(bad)
aas
int
rcl
aaa
mov
sar
push
mov
movs
int3
mov
test
xor
ror
aam
stos
ja
push
pushf
pushf
stc
cmp
imul
or
dec
mov
mov
add
push
sub
pop
jle
loope
cmp
mov
mov
xor
pop
dec
lods
add
enter
cmp
das
in
xor
mov
inc
(bad)
fldcw
mov
std
or
sub
mov
or
in
je
jmp
sar
push
push
lock
int
mov
pop
mov
in
inc
push
pause
jo
mov
mov
test
push
mov
pop
mov
inc
xchg
add
mov
ds
mov
sti
aam
mov
repnz
push
push
jge
mov
dec
xchg
mov
jno
movs
out
(bad)
int
test
and
dec
inc
(bad)
loop
xchg
jp
push
jp
cmp
idiv
(bad)
jp
xchg
cmp
inc
adc
int
mov
mov
inc
cwde
jecxz
sub
cwde
movs
push
test
mov
lods
push
rcl
out
sub
mov
mov
xadd
xor
out
push
jl
mov
mov
sbb
in
(bad)
stos
stos
cmp
or
jnp
(bad)
popa
aad
add
call
jne
in
dec
clc
jne
(bad)
aas
adc
aam
and
sbb
ds
iret
iret
mov
test
mov
fcomp
fsubr
push
mov
int
(bad)
pop
sar
test
ret
ins
jns
mov
scas
inc
ret
jns
int3
jp
cld
mov
jmp
xchg
mov
xchg
pop
jl
pop
adc
test
in
mov
jmp
stos
call
into
mov
push
push
movs
in
leave
(bad)
bnd
or
mov
adc
xchg
outs
dec
ss
or
push
adc
stos
in
ss
mov
sbb
cli
outs
xchg
add
cmps
mov
outs
and
loope
jmp
arpl
fidivr
pop
pop
test
rcr
mov
jnp
aam
add
cmp
and
fs
push
mov
fstp
ins
cmp
xchg
dec
mov
ins
dec
sbb
loop
call
mov
ret
cmc
shl
hlt
jb
mov
inc
cmp
ret
and
scas
sub
adc
dec
push
push
xor
fdivr
ret
aad
dec
seta
push
test
bound
mov
push
retfw
in
rcr
retf
cld
mov
imul
mul
sub
xor
and
push
jmp
add
lahf
aas
stos
jnp
add
sbb
bound
adc
dec
aaa
sub
sbb
push
sahf
cmps
adc
push
test
jle
mov
pusha
outs
in
and
enter
sti
pop
es
sub
mov
push
pop
adc
pop
sub
push
dec
retf
push
sbb
inc
jnp
ja
fimul
call
mov
xor
jl
and
and
enter
and
adc
test
dec
pop
aad
daa
and
add
sub
cld
cmc
add
mov
dec
ds
xchg
mov
jns
or
sti
xchg
shl
lods
fdivr
in
clc
repz
out
push
sub
je
cdq
jl
pushf
add
sbb
pushf
fisubr
push
dec
ins
addr16
jle
test
sbb
adc
mov
stc
loop
stos
push
iret
into
mov
add
aas
ins
call
or
jo
mov
adc
call
mov
(bad)
loope
outs
pop
dec
xchg
push
daa
rol
out
movs
jg
gs
mov
gs
lock
dec
fsubr
retf
xchg
xor
dec
cmp
scas
and
imul
mov
mov
call
pop
mov
in
and
pusha
xchg
cli
pop
leave
mov
cmp
pushf
push
popa
and
imul
scas
fsubr
push
jnp
push
call
push
cmps
js
pop
inc
ins
xor
pop
push
xchg
das
push
cld
xor
mov
lods
test
xchg
sub
inc
(bad)
popf
sub
cmp
cwde
stos
pop
mov
pop
es
push
lahf
and
mov
adc
nop
mov
outs
pop
xchg
mov
xchg
jg
lahf
das
jg
mov
xor
fcmovnbe
mov
and
pop
popa
xchg
inc
mov
dec
pop
push
cmp
sbb
adc
call
shl
es
mov
pusha
cmps
pop
xor
neg
and
push
or
jl
lahf
daa
and
mov
(bad)
mov
jno
popa
les
sbb
ficomp
push
adc
popa
sti
paddsb
mov
pop
shl
sbb
(bad)
push
clc
push
imul
push
and
inc
mov
aad
sub
int
or
pop
jae
je
mov
and
and
(bad)
lods
push
shl
sub
pop
xor
stos
outs
pop
adc
mov
sub
movs
in
mov
test
xor
es
aad
jmp
sub
push
test
out
int3
dec
push
xchg
fiadd
push
cmp
adc
cmc
cmps
int
xor
push
fcmovnu
outs
ins
xchg
mov
mov
push
xchg
xchg
sti
sbb
mov
arpl
mov
popa
sub
xchg
xchg
sbb
nop
dec
ret
dec
add
outs
jo
jp
dec
cmp
xchg
xchg
sub
and
pop
push
bound
into
mov
pop
pop
(bad)
loope
xchg
sub
and
sub
test
sub
cwde
mov
sbb
or
fild
dec
push
mov
fst
fwait
pop
adc
test
cdq
inc
lods
fs
dec
xchg
and
retf
sub
lock
adc
mov
adc
test
rol
repnz
aas
inc
rsm
push
jno
inc
out
jne
cld
inc
inc
sar
adc
jmp
fisub
sti
add
mov
je
je
adc
push
call
sub
call
adc
cmp
jno
mov
pop
cli
xor
inc
pop
or
mov
mov
cs
jmp
pop
xlat
mov
or
test
shr
mov
aam
test
xchg
push
inc
ret
pop
ficomp
out
jnp
mov
jl
push
mov
jge
repnz
sbb
cs
ret
push
mov
sub
ror
push
mov
sahf
dec
or
pop
mov
iret
cdq
jmp
jg
scas
lock
cdq
out
mov
xchg
cld
test
push
mov
(bad)
scas
fisubr
jmp
sub
bound
int3
lods
dec
aad
push
push
rol
xor
mov
fstp
ins
push
iret
or
ja
rcl
nop
nop
push
add
cmp
or
lahf
and
mov
clc
pop
adc
in
mov
adc
(bad)
call
sub
pushf
ins
xchg
fisttp
xor
gs
lods
jns
lea
rcl
sub
in
push
je
jns
push
aas
xlat
or
mul
mov
loopne
scas
inc
and
jmp
je
jo
push
movs
mov
pusha
aaa
ss
xchg
out
retf
int3
pop
xchg
ss
push
ja
stc
add
cmps
retf
int
and
fnsave
xchg
xor
sub
arpl
clc
jno
xchg
fisubr
mov
xchg
ret
push
add
adc
lods
pop
repz
in
jle
inc
lods
or
pop
stc
fsubr
adc
imul
mov
inc
aaa
imul
test
sbb
jmp
test
fmul
out
add
inc
and
das
pop
ret
mov
sub
adc
mov
retf
jae
xor
int3
or
xchg
xlat
js
out
push
xchg
ret
shr
sbb
inc
in
xor
test
in
adc
xchg
pop
inc
or
lock
mov
dec
mov
sbb
sbb
sub
cdq
adc
dec
mov
cwde
push
test
fimul
cld
js
repz
xchg
xchg
test
cmc
cmp
fisubr
sahf
pusha
(bad)
rcl
jbe
ins
jno
ss
xchg
and
jmp
in
dec
stc
sub
jmp
adc
gs
lds
lods
mov
daa
xchg
test
sahf
cwde
int3
jecxz
jl
and
scas
scas
outs
sbb
jecxz
push
sbb
and
aas
push
pushf
lahf
ret
or
mov
mov
imul
pop
sahf
inc
dec
xchg
push
(bad)
hlt
clc
pop
fwait
dec
pushf
cmps
xlat
mov
enter
not
push
sti
push
xchg
add
fwait
push
xlat
mov
or
sbb
in
inc
pop
or
js
repnz
loop
ror
(bad)
std
jmp
jle
mov
xchg
sub
push
add
pop
jmp
adc
and
fild
dec
dec
fimul
xor
arpl
fisub
push
sbb
ins
jns
push
test
dec
and
pusha
out
hlt
cli
cli
jns
fwait
xchg
or
xchg
cmp
mov
leave
mov
sbb
jp
dec
sbb
clc
fld
jmp
jnp
jl
inc
push
xor
test
jge
cmp
push
and
pop
bound
push
mov
sub
push
fcomp
sbb
adc
add
jp
dec
push
mov
sbb
mov
cld
adc
add
adc
addr16
mov
scas
jmp
push
not
mov
pop
or
dec
les
fcmovnu
lahf
sub
mov
popf
adc
adc
cmp
stos
retf
sbb
adc
clc
test
cmps
js
stc
mov
push
cmp
pop
cdq
scas
xor
xchg
repz
xor
push
mov
dec
js
push
not
push
push
mov
lods
pop
scas
aam
jmp
push
addr16
jns
mov
cmps
mov
push
sub
hlt
(bad)
loopne
dec
push
rcr
dec
mov
add
xchg
push
add
dec
push
not
into
dec
push
mov
inc
imul
(bad)
pop
call
or
das
adc
mov
xchg
cmp
pop
test
push
data16
mov
fisub
mov
jmp
adc
cmp
(bad)
xchg
es
mov
call
pop
enter
push
ror
xor
fisub
jecxz
mov
call
dec
dec
cmps
adc
mov
xchg
sbb
push
fucomip
jecxz
arpl
sbb
(bad)
mov
pushf
stos
shl
mov
jns
inc
jge
inc
sbb
pop
fcom
cmc
mov
aad
pop
pop
out
shl
fimul
xchg
or
mov
stos
test
sub
into
or
popa
cmp
dec
mov
inc
xor
adc
cmps
xchg
push
add
in
repz
inc
js
mov
daa
or
aas
adc
int3
mov
mov
sbb
mov
enter
push
enter
jmp
or
add
or
js
int
addr16
inc
call
std
cmp
popf
fidivr
mov
xchg
adc
fnstsw
mov
mov
cmp
imul
fbld
and
imul
mov
icebp
mov
fisttp
(bad)
fs
rcr
pop
rcl
(bad)
push
int
stos
adc
push
loop
imul
dec
jmp
pop
imul
cwde
jp
cmp
shl
push
int
mov
sbb
fwait
jecxz
jnp
outs
push
dec
dec
out
add
loop
adc
ss
je
fmul
inc
add
fcomi
pop
es
mov
xchg
mov
pop
push
aam
call
gs
loope
mov
sbb
dec
std
dec
icebp
mov
xor
ret
je
push
movs
jg
pop
neg
pop
push
sbb
or
push
retf
jg
add
rcl
(bad)
and
scas
mov
out
jmp
cld
outs
cmps
(bad)
fadd
adc
jns
and
push
xchg
stos
out
adc
or
test
dec
or
aas
xchg
adc
mov
iret
retf
sub
lods
outs
adc
add
cmp
adc
mov
pop
xchg
add
or
fstp
lods
inc
mov
std
mov
cdq
adc
test
loope
add
xor
mov
pop
adc
push
icebp
jecxz
dec
ins
sti
movs
lds
jbe
fsubr
sub
repnz
push
movs
cwde
sub
xor
pop
push
enter
xchg
dec
mov
cmp
jecxz
int
inc
clc
add
test
xchg
adc
mov
and
outs
outs
stc
outs
retf
mov
in
outs
stc
adc
out
mov
xchg
mov
es
mov
retf
movs
dec
int
arpl
ins
out
mov
ja
sub
mov
adc
jge
test
shl
xor
sub
sub
pop
xchg
sub
lock
sub
std
fild
pop
(bad)
sahf
sub
push
jns
add
mov
outs
test
xor
sub
dec
stc
xor
push
xor
into
jg
sub
push
mov
fs
hlt
cmp
and
pop
or
cmps
imul
or
into
pop
popf
jl
repz
or
jmp
popf
sub
push
and
adc
arpl
popa
xchg
fyl2x
scas
(bad)
call
ins
loopne
adc
xchg
adc
push
jge
pop
inc
or
adc
sbb
or
xchg
(bad)
sti
xor
fidivr
imul
lock
sbb
add
in
mov
pop
xchg
adc
xchg
lds
mov
add
repnz
pop
test
cmp
fdiv
xchg
bound
dec
jg
pop
hlt
adc
mov
int
daa
xchg
adc
fst
push
test
out
sub
int3
cmps
pop
inc
in
jecxz
mov
xor
out
push
outs
adc
pop
sbb
push
rol
or
popf
bound
sti
xlat
push
dec
ret
dec
shl
test
test
stos
jmp
mov
lock
xchg
ret
cmp
pop
jnp
push
(bad)
dec
push
mov
sbb
cdq
mov
cdq
imul
rcl
adc
or
or
pop
js
in
ins
xchg
cld
push
fcom
sub
xor
push
cwde
inc
es
adc
xchg
mov
adc
mov
outs
mov
int
inc
in
mov
mov
dec
sub
neg
push
mov
push
leave
out
fs
push
push
cld
test
(bad)
adc
movs
aaa
scas
mov
imul
jmp
adc
adc
fucomip
fisttp
int3
mov
xor
(bad)
jp
dec
pop
aaa
call
scas
sbb
mov
jge
cmp
test
or
dec
imul
(bad)
ds
or
sbb
fadd
in
test
stc
jnp
sbb
cwde
inc
mov
mov
leave
cmps
ror
xchg
jmp
dec
in
adc
push
and
sbb
(bad)
jmp
cmps
xchg
rol
inc
and
inc
pushf
dec
or
daa
movs
pop
mov
punpcklbw
cli
(bad)
out
pop
push
push
pop
and
jb
dec
das
jnp
retf
out
pop
add
inc
dec
retf
test
mov
push
and
mov
sbb
(bad)
loope
xlat
cdq
xchg
es
bound
pop
cmps
test
addr16
rcl
push
inc
xor
(bad)
and
retf
sbb
outs
mov
push
into
not
(bad)
aam
retf
cli
jle
xchg
push
add
sbb
rol
aad
push
arpl
add
and
pop
pop
shl
sub
push
sar
add
mov
dec
cmp
lock
(bad)
out
mov
cmp
fmul
lea
aad
movs
pop
push
jmp
lods
ins
xor
and
(bad)
mov
pop
pop
(bad)
repnz
call
xor
cdq
not
je
sub
adc
out
neg
jp
repnz
mov
xchg
ret
call
pop
mov
xor
mov
cs
and
jmp
je
adc
rcr
cs
shr
imul
mov
and
jbe
and
lds
popa
sahf
push
cmp
(bad)
call
fwait
mov
ficomp
(bad)
cdq
imul
sar
dec
bound
scas
adc
adc
xchg
test
sbb
inc
fbld
stc
std
push
rol
sbb
pop
call
out
push
call
test
lahf
adc
sub
xchg
push
aad
mov
sub
dec
icebp
pushf
and
jbe
rcl
cmp
cs
int3
pop
enter
shr
pop
sub
mov
inc
scas
test
ss
stos
xchg
loop
jbe
mov
ficomp
mov
jle
jge
cmc
clc
push
out
lds
sbb
loopne
dec
fcom
retf
add
mov
push
into
cmp
sbb
cmp
mov
clc
int3
movs
add
icebp
pop
add
and
fisub
test
and
lds
enter
out
push
outs
pop
aas
mov
ds
cmps
fisttp
xchg
mov
pop
(bad)
jmp
aam
mov
out
jnp
cwde
or
adc
inc
jno
hlt
cmps
xor
clc
push
fidivr
and
xchg
into
add
sbb
mov
cmp
add
repz
das
lods
icebp
sub
shl
xlat
xchg
pop
popa
cwde
aas
adc
aad
push
in
jecxz
stc
ror
pop
hlt
das
stos
pop
dec
jmp
adc
push
mov
(bad)
pop
call
mov
push
fistp
iret
dec
(bad)
cwde
adc
ja
imul
sub
nop
fcom
lods
ins
and
add
xor
push
add
aad
xor
ficom
push
add
inc
inc
mov
pop
xor
cmp
pop
nop
jae
hlt
leave
add
aam
push
in
inc
mov
dec
lea
sub
jecxz
xor
cmp
sbb
dec
mov
test
sbb
dec
adc
stos
imul
pop
sub
push
fcomp
mov
rcr
mov
inc
adc
stos
repnz
push
out
ins
in
push
sbb
and
push
and
mov
imul
ret
ret
out
adc
sbb
loopne
call
sbb
or
push
cld
popa
jp
out
adc
or
ins
mov
stos
push
jno
and
fcomp
jae
pop
xchg
addr16
xchg
and
repnz
sahf
scas
cld
mov
imul
xchg
pop
dec
test
sbb
fwait
adc
add
sbb
call
loop
cmp
push
mov
fstp
retf
in
fcmovu
cmp
fstp
(bad)
jno
into
aaa
pop
dec
lock
jmp
jle
cmps
arpl
inc
mov
push
mov
push
dec
lahf
std
pop
push
ss
stos
mov
test
mov
dec
jp
(bad)
loopne
fcomp
mov
sbb
mov
mov
cmp
add
mov
or
mov
mov
pop
mov
push
lods
pop
shl
sub
push
stos
fistp
nop
inc
pop
cmps
inc
cmp
or
mov
scas
adc
fld
xchg
idiv
inc
mov
push
daa
stc
jno
cmp
shr
scas
xor
lods
mov
adc
mov
ret
push
mov
mov
retf
test
cld
dec
sub
fild
ficom
pop
(bad)
cmp
fist
mov
imul
mov
push
fsub
(bad)
xor
scas
popf
cmp
imul
int3
cmp
mov
xor
jo
xchg
add
mov
xor
fisttp
cli
sbb
jge
int
fstp
cli
push
aam
int
dec
aad
arpl
(bad)
pop
mov
daa
daa
push
add
push
adc
ret
outs
call
mov
xchg
ins
mov
loope
popf
cwde
fwait
ss
or
jge
das
sub
cld
cmp
cmp
mov
mov
inc
stc
push
or
pusha
dec
dec
mov
mov
cmps
(bad)
mov
popf
xchg
pop
rcl
fs
mov
jno
pop
fst
sbb
pushf
in
mov
call
popa
(bad)
jnp
mov
fsub
xchg
(bad)
xor
fist
iret
sbb
(bad)
sbb
gs
add
ret
sbb
pop
or
or
and
push
sahf
iret
push
shl
aaa
daa
pushf
aaa
imul
jge
inc
stos
xor
fmulp
daa
mov
in
dec
lds
pop
imul
retf
stos
ds
sub
into
bsr
inc
sbb
movsx
cwde
jnp
sbb
cdq
sti
xor
fwait
dec
xor
ret
pop
xchg
push
fistp
pop
pop
ret
or
adc
sbb
retf
pop
test
mov
clflush
out
adc
lock
push
inc
pop
adc
outs
inc
adc
sbb
fstp
adc
cmp
popa
out
add
fwait
test
popa
jmp
jp
mov
jle
xor
sahf
je
mov
je
inc
push
xchg
(bad)
ss
aaa
mov
aad
(bad)
pop
(bad)
mov
sti
je
pop
repnz
sub
dec
cmps
(bad)
clc
push
push
xchg
stos
sbb
mov
call
jge
test
daa
sub
xchg
mov
sub
scas
out
hlt
int
movs
rcr
xchg
hlt
mov
and
sub
(bad)
sub
mov
mov
xor
out
vcvtsd2ss
fstp
pop
scas
stos
stos
(bad)
dec
cmp
loope
xor
gs
es
jge
je
push
rcl
aad
leave
adc
xchg
and
pop
adc
shr
and
ds
or
add
rcr
push
retf
add
push
jne
sbb
repnz
test
pop
out
push
dec
push
sub
sbb
and
pop
inc
test
call
sahf
loop
int
add
ds
cmc
push
test
jnp
in
ret
and
out
push
mov
mov
push
and
ds
rcr
push
pusha
inc
sbb
inc
sbb
push
out
outs
ja
rol
pop
jb
in
jbe
xchg
and
in
aas
pop
push
je
outs
mov
mov
xchg
mov
mov
popf
jns
jp
out
jg
xor
cmp
fs
adc
xor
outs
scas
repz
sub
in
cli
pop
jno
test
sbb
bound
or
dec
inc
dec
fst
jmp
jle
fdivr
xchg
and
retf
push
push
dec
push
pop
idiv
stos
push
pop
dec
mov
sub
jae
push
jne
ret
jl
(bad)
pop
inc
loop
inc
imul
cmp
jae
pop
test
pop
pop
xchg
and
nop
clc
xchg
shr
cld
out
sbb
and
or
pop
pop
sti
push
cwde
cmp
and
sub
mov
out
popf
aam
xor
inc
(bad)
jle
mov
dec
stc
bound
popf
(bad)
out
jne
das
sbb
mov
mov
ja
dec
movs
sub
addr16
mov
int3
sub
sbb
hlt
mov
jmp
sub
sbb
xchg
mov
fild
xor
push
out
sbb
addr16
inc
sbb
sahf
dec
push
mov
fmul
stc
test
cmp
and
sbb
xor
pop
cmp
or
ret
(bad)
pop
sub
pushf
fdivr
fcomp
cmp
mov
adc
xchg
xchg
mov
pop
repz
stos
mov
or
ret
das
adc
movs
cmp
add
fmul
ret
test
inc
call
sbb
inc
lock
add
sub
test
adc
xchg
retf
push
popf
retf
xchg
mov
dec
jmp
pop
call
shr
retf
repnz
xchg
mov
push
sbb
nop
cmp
aas
pop
(bad)
xlat
fnstenv
stos
ret
enter
push
xchg
imul
call
repnz
call
retf
adc
psubusw
addr16
dec
or
push
mov
in
mov
pusha
loope
stc
jmp
cs
push
mov
mov
mov
jb
mov
movs
mov
mov
mov
push
mov
test
jg
jnp
iret
pop
pop
sbb
dec
mov
popa
jmp
aam
jle
ret
cmp
neg
fsub
mov
stos
dec
popf
outs
pop
push
adc
bound
or
imul
xchg
cmp
adc
mov
xchg
scas
or
jo
iret
cs
jl
lods
and
add
gs
push
and
adc
mov
inc
sbb
sti
inc
into
pop
dec
gs
push
fs
and
mov
dec
pop
shl
(bad)
lock
mov
mov
repz
push
scas
jbe
pop
add
(bad)
sti
inc
out
add
test
xchg
(bad)
push
cdq
and
test
sub
bound
test
dec
push
sbb
and
popa
sub
ins
mov
jne
jmp
call
dec
scas
xchg
mov
and
push
in
and
outs
push
and
adc
ror
test
ins
pop
cld
and
rcl
les
fstp
jb
in
xor
jbe
pop
mov
inc
retf
push
sbb
xlat
mov
retf
cmp
shr
loopne
push
xchg
push
imul
mov
daa
cmps
or
xchg
pop
cmp
fucomi
xchg
pop
pop
in
pop
imul
jnp
sub
adc
or
push
jne
fwait
add
lods
lods
xor
dec
pop
fdiv
in
sbb
cmp
jecxz
(bad)
into
pop
imul
sbb
ins
xchg
push
lahf
xchg
int3
add
int3
or
pand
mov
jno
jmp
fld
jmp
sahf
lods
add
retf
pop
lahf
mov
retf
mov
sbb
lahf
xchg
imul
call
or
(bad)
jle
js
je
cmp
push
ret
xor
mov
xchg
mov
sbb
retf
fstp
dec
cmc
jmp
imul
push
out
shr
ins
push
dec
ja
iret
shr
sub
cmp
sbb
adc
out
pushf
sub
retf
stos
mov
in
lds
and
xor
mov
pushf
repz
push
push
imul
dec
xor
xchg
cmp
jmp
xchg
aaa
xchg
add
rcl
pop
mov
in
pop
iret
dec
sbb
or
loop
pop
jmp
call
or
inc
or
outs
xlat
pop
pop
rcl
hlt
dec
mov
push
data16
adc
add
mov
call
scas
jmp
aas
adc
sub
aam
popf
pop
fs
out
jnp
xchg
inc
xchg
into
or
je
mov
add
inc
sub
test
sbb
push
jp
cmp
add
pop
shl
sbb
sbb
cld
pop
outs
daa
rcr
jmp
sbb
xor
rcl
inc
fistp
push
jmp
imul
shl
cmp
imul
(bad)
test
mov
add
sbb
(bad)
and
repz
sub
shl
outs
mov
(bad)
(bad)
jg
pushf
jne
fdivr
shl
jge
jb
je
aas
ins
sub
fimul
adc
movs
sti
aas
pop
imul
test
sub
lock
push
push
sub
sub
push
jle
jg
and
dec
adc
aas
fisub
pop
outs
dec
xchg
pushf
enter
loop
pusha
mov
mov
mov
ror
push
fbstp
pop
jmp
xchg
(bad)
aaa
inc
push
adc
xor
lock
sub
xor
push
int3
cld
in
in
push
dec
adc
xchg
xor
mov
dec
xor
test
pop
mov
mov
sub
push
adc
jae
jo
pop
mov
push
(bad)
jge
add
fwait
pop
cld
adc
sub
jno
push
or
sahf
sti
repz
cmps
push
mov
(bad)
or
cdq
inc
stos
into
movs
sub
cmps
fild
sbb
fldcw
(bad)
aam
shl
clc
enter
cmp
push
retf
and
pop
or
sti
push
push
dec
aaa
push
jp
aad
pushf
dec
pop
aam
repz
adc
cdq
outs
jbe
retf
cmc
mov
jecxz
sub
call
push
cs
cld
dec
ret
pushf
leave
mov
xchg
imul
sbb
div
aaa
call
add
test
sbb
ja
les
push
mov
sub
dec
cs
xor
mov
aaa
fnstsw
and
pop
outs
leave
out
sbb
jge
xchg
inc
ret
xchg
and
jmp
aam
pop
inc
push
mov
add
inc
pop
leave
mov
es
xor
xchg
ins
lahf
rcr
popa
sahf
mov
pop
mov
fcom
xchg
or
rcl
ss
pusha
cmp
xor
fsub
pop
shr
fistp
sub
push
and
fisubr
sub
add
out
mov
add
cmp
js
and
leave
sbb
pop
ret
and
ficomp
fs
or
into
sti
adc
ror
sbb
push
inc
cwde
lahf
mov
jno
xlat
sbb
cmps
inc
enter
xchg
cmp
adc
mov
sub
test
popa
fistp
stc
pop
(bad)
dec
shr
jmp
in
dec
repnz
push
push
(bad)
cs
ins
call
ins
sti
cmc
mov
inc
neg
sbb
mov
cmc
push
fsub
in
imul
adc
fisttp
bound
push
push
test
int3
mov
add
gs
push
xchg
das
and
or
jmp
call
or
push
pop
xor
jecxz
xchg
mov
push
(bad)
aas
into
mov
cmps
aas
inc
dec
cmp
jmp
or
shr
shl
mov
aam
push
lock
popf
rcl
enter
mul
xchg
jmp
pop
lahf
fbstp
nop
sbb
sbb
jns
fwait
out
fwait
mul
in
neg
cmp
push
push
sbb
jnp
adc
stos
mov
add
test
sub
xlat
icebp
mov
inc
cmp
jns
xchg
xchg
cmps
popf
rcr
mov
pop
sahf
fcomp
cmp
pusha
int
push
ds
aad
js
xchg
pop
or
mov
cmp
xchg
fisubr
in
inc
je
cs
mov
cli
sbb
xchg
fdivr
not
sub
fs
cmp
mov
mov
push
iret
sub
sub
adc
lds
or
adc
or
jmp
xchg
fbld
stos
adc
mov
sub
jp
mov
jb
sub
xchg
mov
pop
fist
test
lock
iret
sub
mov
pop
push
(bad)
and
adc
mov
mov
cli
(bad)
xor
sar
(bad)
(bad)
push
pushf
pop
cmp
imul
jno
jle
mov
inc
mov
push
pop
dec
mov
popf
pop
xor
sbb
sub
adc
lods
outs
jmp
cmp
lock
sub
orps
inc
in
jge
repz
shl
sbb
cmp
pop
mov
pop
mov
call
mov
imul
dec
inc
cmc
mov
jecxz
call
mov
pop
(bad)
(bad)
or
push
push
and
fisub
rcl
fstp
cmp
sbb
mov
mov
jle
stos
test
jb
and
dec
sub
mov
cld
aam
dec
in
sbb
pop
fistp
loopne
ss
cmp
adc
lock
and
cs
fadd
mov
and
idiv
sub
ds
xchg
bound
repz
add
int3
add
pop
dec
xchg
inc
sbb
sar
jbe
cmp
push
mov
cs
mov
call
xchg
mov
fdivr
call
pop
mov
adc
adc
data16
adc
adc
xchg
cmp
push
xchg
mov
pop
sbb
call
mov
es
jb
call
ins
lods
sbb
push
push
pop
add
sbb
and
cld
pop
rcl
out
test
dec
and
mov
jmp
je
es
jae
jmp
add
(bad)
xor
lock
sbb
or
inc
xor
mov
je
jae
pop
push
sub
xchg
scas
popf
(bad)
(bad)
pop
leave
inc
shr
in
push
(bad)
dec
inc
fmul
fwait
stc
(bad)
repnz
cmp
and
cld
cmps
jp
push
sbb
inc
jno
scas
ret
or
xchg
ja
cmps
push
icebp
movs
jle
fs
jb
icebp
lock
icebp
xlat
bound
jge
aaa
rol
or
movs
out
mov
dec
ss
pusha
pop
popf
add
pop
in
dec
jnp
repz
lock
xor
pop
sub
popf
sub
cmp
xor
(bad)
sbb
push
mul
nop
stos
and
(bad)
sbb
sub
pop
cmc
(bad)
loope
cmp
cmps
sahf
sbb
add
sbb
xor
mov
push
pop
scas
cmc
dec
pop
sub
or
jmp
jno
loope
lock
js
in
add
into
push
dec
fwait
push
push
aam
ja
(bad)
pop
mov
jg
or
push
sti
es
aam
inc
in
(bad)
in
xor
cwde
sbb
sbb
push
int3
pop
(bad)
aas
adc
dec
retf
ret
mov
aaa
outs
pushf
jp
or
adc
push
sbb
push
jmp
pop
cmp
mov
push
or
xchg
punpcklbw
les
sub
loopne
cmp
mov
xor
or
xor
or
(bad)
sbb
pop
add
inc
pop
cmp
cmps
cld
or
mov
pop
pop
or
cmc
jmp
mov
stos
ret
retf
sbb
sub
dec
xor
push
sub
push
inc
dec
mov
ffree
jns
pop
addr16
ja
outs
pop
out
ins
inc
fadd
sub
lahf
dec
aas
int3
lahf
and
test
mov
or
or
js
out
sbb
mov
sub
add
xchg
fsubr
sbb
mov
mov
xor
dec
mov
mov
popa
fidiv
fistp
ins
arpl
cld
mov
sbb
(bad)
ins
push
sbb
retf
xor
sub
pusha
pop
test
imul
stos
ins
dec
fs
cli
fcom
push
sub
sti
push
and
fild
adc
xchg
shr
and
scas
and
pop
(bad)
mov
inc
xor
adc
sahf
inc
dec
in
or
adc
sahf
xor
mov
bound
js
pusha
repnz
nop
dec
cmp
sub
pusha
fnstenv
and
push
push
mov
aaa
cdq
sahf
dec
xchg
movs
sbb
dec
push
dec
pop
ror
and
xor
data16
pop
sbb
(bad)
loop
inc
pushf
mov
adc
adc
inc
lahf
xor
call
js
(bad)
loope
push
ja
fwait
stos
pushfw
mov
xor
sub
outs
pushf
mov
and
movs
daa
fcomp
xor
ins
retf
movs
ss
sbb
loopne
xchg
jge
into
js
shr
sahf
lea
sub
xchg
ss
jg
mov
lahf
cs
jno
inc
xchg
add
mov
jle
outs
out
je
fstp
add
push
push
test
jle
adc
adc
jb
test
dec
sbb
push
cmp
pop
jmp
pop
fild
imul
and
sbb
fdiv
push
aad
ror
repnz
add
repz
mov
aad
enter
outs
fwait
sub
mov
xchg
push
shr
adc
gs
mov
ins
out
scas
add
fdiv
enter
outs
rol
leave
ret
mov
push
cmp
mov
pop
add
inc
dec
mov
jl
pusha
mov
shl
jmp
mov
icebp
pop
inc
fistp
aam
jle
movs
cmc
inc
inc
and
inc
ds
repnz
sbb
std
(bad)
push
add
jmp
push
inc
imul
cmp
ret
jmp
sub
push
out
push
inc
and
jbe
mov
pop
and
xchg
dec
and
jmp
mov
imul
jns
xchg
adc
sar
sbb
dec
and
call
leave
fisubr
ds
cmp
sbb
cmps
inc
push
stos
hlt
dec
jmp
or
adc
push
fs
jle
dec
in
xor
xchg
test
clc
retf
aaa
add
jge
or
popf
jmp
jnp
jl
scas
movs
in
inc
inc
push
into
dec
and
sbb
cld
or
pop
nop
push
push
add
pop
int3
inc
mov
jp
xchg
jmp
jge
sub
imul
ins
aas
pop
and
sbb
js
shl
mov
leave
cdq
cmp
jb
xchg
mov
or
in
mov
sti
retf
jmp
mov
test
jae
aaa
pop
aad
jge
jnp
daa
adc
sub
ins
inc
sbb
aam
jl
jnp
jnp
mov
mov
push
mov
xor
fcomp
and
xor
sbb
call
and
sub
test
xchg
dec
repz
sub
cdq
dec
dec
int3
sub
add
mov
in
and
adc
inc
push
or
nop
and
mov
xor
push
addr16
push
jo
(bad)
das
jns
and
jno
btr
dec
adc
cmp
sbb
(bad)
(bad)
push
sbb
or
sti
fnstcw
push
add
mov
das
lea
xchg
xor
sbb
jnp
xor
add
repnz
push
dec
dec
add
mov
inc
(bad)
pop
mov
fst
fcom
mov
cmp
mov
mov
push
xor
es
ror
jecxz
sub
imul
cld
cmc
jb
in
push
aam
jmp
mov
cmp
lea
(bad)
ins
rcl
pushf
(bad)
icebp
and
sub
pop
cmp
mov
test
cmp
inc
clc
ins
xchg
inc
scas
xor
xor
or
sbb
add
shr
add
push
or
mov
fiadd
jne
movs
pop
int3
stos
pop
jb
inc
pop
pop
fcom
enter
rcr
push
mov
sti
jle
out
sahf
aas
push
cmp
fwait
stos
push
adc
jecxz
movs
dec
test
mov
sub
into
pop
icebp
cmp
imul
adc
pop
pop
dec
mov
inc
inc
(bad)
sbb
sub
xor
or
sti
daa
mov
scas
repnz
xchg
push
sub
jmp
push
inc
nop
cmc
mov
xor
stc
pop
push
out
retf
mov
fiadd
inc
arpl
mov
or
fisub
or
lods
mov
cmp
dec
cld
dec
repnz
mov
sti
add
mov
repz
pusha
and
fdivr
enter
xchg
fwait
scas
and
or
lahf
rol
inc
cmps
inc
jb
out
adc
std
daa
das
in
jb
and
nop
repz
sub
shl
imul
pop
pop
aam
jl
ins
jl
mov
pop
xchg
mov
not
xchg
sahf
mov
mov
pop
dec
mov
shl
ins
or
sahf
mov
cmp
pop
mul
cmovb
xchg
sub
xchg
mov
inc
lahf
hlt
jne
(bad)
dec
sub
pop
dec
mov
jae
jmp
(bad)
pop
dec
rcl
xlat
retf
lahf
add
dec
inc
dec
mov
enter
cld
sub
adc
xor
mov
push
mov
add
test
xor
xchg
push
jo
repz
ret
push
push
mov
add
es
int
inc
xchg
jae
jae
shl
icebp
fadd
xlat
or
cmp
add
jl
push
cld
lock
retf
cmp
adc
adc
icebp
pop
push
aas
add
and
xor
ja
jae
jns
or
fadd
xor
rcl
sub
mov
cmps
fadd
xchg
cmp
push
das
cmc
clc
sub
je
mul
fimul
neg
je
push
pop
jp
ficomp
std
ret
out
jge
std
inc
in
fidivr
mov
dec
outs
pop
retf
sub
adc
call
mov
xor
or
jae
and
inc
pusha
scas
jae
pop
scas
xchg
jge
cs
cmps
jae
cdq
ja
mov
std
sub
loopne
retf
pop
fdivr
cwde
fiadd
mov
jp
repnz
aam
repnz
pushf
rol
mov
sti
sbb
cmp
mov
pop
iret
mov
push
jl
mov
iret
pop
(bad)
test
sub
sahf
enter
cmp
cwde
ja
ins
jnp
fcomp
out
ja
popf
out
or
popf
cld
cmp
nop
cld
push
mov
pushf
(bad)
xor
sbb
or
cmp
sti
test
popa
enter
adc
jae
in
iret
pop
pop
into
jbe
movs
inc
pop
jo
adc
dec
cmp
add
jg
sub
jne
dec
mov
pop
cdq
adc
push
arpl
les
popf
sub
jl
mov
sub
add
out
jae
pop
xor
ja
mov
pop
mov
cs
xor
stc
stos
pop
jmp
sbb
jge
cld
sti
repnz
mov
dec
dec
pop
push
dec
dec
xchg
jmp
nop
and
push
dec
repz
ret
not
clc
mov
add
aaa
xchg
cmp
mov
jae
fdivr
and
jnp
xchg
fimul
(bad)
mov
pop
dec
add
rol
aaa
adc
stos
jno
ror
xchg
xchg
loope
sub
push
mov
daa
push
imul
mov
mov
ror
pop
fst
xchg
sahf
rcr
outs
dec
cmps
(bad)
arpl
lods
imul
(bad)
(bad)
add
leave
mov
stos
nop
push
out
xchg
pop
cmps
sbb
loopne
stos
jmp
add
dec
ror
addr16
jbe
xchg
mov
dec
retf
repz
mov
icebp
sbb
ror
push
pop
(bad)
dec
es
push
push
lahf
or
and
and
mov
or
loop
mov
imul
pop
mov
sbb
in
cmps
cmp
fcmove
push
jmp
mov
and
sbb
(bad)
outs
pop
scas
pop
cmp
and
cmp
mov
or
dec
push
push
xchg
adc
sar
mov
push
popf
push
push
inc
jge
sbb
inc
xchg
push
outs
push
jno
cmp
sub
xchg
out
cmp
pop
les
aam
adc
dec
jge
cdq
js
add
jbe
sbb
push
lods
dec
sahf
jbe
xchg
jmp
sub
cmp
aam
mov
ja
pop
je
ret
int
sbb
mov
cmp
lahf
outs
popa
xchg
outs
lahf
in
out
sub
push
sbb
fadd
scas
fsub
test
movs
inc
push
loop
or
aam
daa
retf
sub
test
dec
popf
and
pop
into
mov
stos
mov
adc
jbe
cmps
inc
movs
int
pop
cld
cmp
pop
jg
out
pop
jecxz
fstp
pop
dec
outs
sbb
and
cmp
push
adc
or
mov
mov
arpl
mov
and
es
cwde
dec
xchg
out
movs
arpl
gs
fidiv
xchg
imul
and
scas
pop
call
loope
(bad)
mov
mov
stc
and
xor
addr16
cmc
movlps
sbb
fs
out
add
scas
sub
cmps
es
push
in
fwait
imul
or
pusha
shl
scas
push
fcomp
sahf
add
mov
int
mov
push
cs
mov
iret
sti
sub
aas
cmc
ja
mov
sahf
adc
push
ss
pop
pop
enter
retf
mov
mov
add
test
jo
imul
pop
call
out
ins
xor
push
fwait
imul
jo
jne
xlat
popf
pop
mov
scas
aaa
pop
jge
dec
cmp
push
fs
aaa
pop
jbe
imul
popf
shl
sti
mov
stos
sahf
jo
jae
lock
push
or
in
cmp
jo
leave
dec
inc
in
enter
adc
mov
lods
inc
stos
fcomp
out
xchg
mov
enter
fsubr
mov
jo
push
out
pop
outs
mov
jno
ficomp
das
lods
leave
fild
jb
pop
inc
aad
in
leave
cmp
ins
mov
leave
aad
add
adc
sahf
rcl
loope
ret
imul
idiv
mov
(bad)
or
icebp
cld
leavew
push
fwait
retf
cdq
jmp
rol
cmps
pop
repnz
arpl
out
add
test
push
loopne
jae
imul
xor
ficom
add
pop
push
jae
xchg
cmp
xor
and
adc
add
mov
sub
std
call
sub
cmp
out
push
or
push
inc
sbb
dec
adc
imul
mov
or
or
mov
mov
xor
shl
outs
mov
jb
outs
push
into
xchg
shl
shr
pop
imul
call
xchg
pop
mov
pop
and
pop
inc
pushf
inc
jl
pop
(bad)
sbb
cli
mov
mov
aaa
repnz
ins
dec
sbb
xor
aas
push
(bad)
ja
xor
aad
push
fcomip
sbb
ins
fwait
adc
lahf
ret
sti
movs
stc
fidivr
out
push
inc
inc
xchg
jns
cmp
test
or
out
outs
lea
(bad)
cwde
es
mov
xchg
out
sub
push
mov
adc
push
xchg
rcr
movs
fwait
sub
jmp
dec
lock
arpl
pop
in
outs
push
xchg
outs
xor
xor
movs
mov
lods
loop
fs
test
lods
jae
sbb
cwde
inc
rcl
out
push
jmp
or
shl
sbb
sub
icebp
stc
sub
mov
push
sbb
dec
rcr
stc
inc
fdiv
push
adc
xchg
data16
int3
mov
mov
inc
dec
(bad)
cmp
bound
scas
and
mov
add
out
int3
loope
scas
in
xchg
jmp
dec
(bad)
jbe
pushf
xchg
(bad)
pop
jmp
scas
fwait
jp
(bad)
mov
inc
imul
(bad)
in
pop
out
mov
fcomp
and
test
cmc
ds
popa
push
sar
jmp
mov
inc
nop
jo
repz
mov
jns
mov
es
fistp
pop
leave
movs
in
(bad)
scas
dec
jp
and
pop
fbld
into
jbe
pop
pushf
push
call
xchg
aas
add
in
lahf
push
lods
and
mov
scas
mov
imul
ret
mov
das
outs
push
js
add
aad
pop
pusha
push
inc
add
std
cmp
xchg
jnp
jmp
int
xchg
aaa
(bad)
out
sbb
js
rol
aad
mov
dec
dec
pop
adc
push
pop
lds
xchg
inc
mov
hlt
add
mov
in
fwait
addr16
jmp
push
and
push
fnsave
cmp
test
fld
sub
pop
pop
or
xor
lds
pop
jne
or
dec
jg
mov
jnp
daa
imul
jmp
mov
cld
rcr
les
cmc
popa
scas
mov
push
sbb
fbld
in
and
aad
popf
imul
sbb
sub
sbb
std
inc
das
scas
stos
jno
imul
repz
(bad)
xchg
pop
inc
std
push
test
imul
fwait
adc
xor
pop
ret
xlat
pop
inc
dec
leave
sti
push
cs
cmp
(bad)
std
or
adc
shl
retf
jnp
iret
icebp
leave
sub
push
pop
test
test
mov
xor
add
sub
in
popf
xchg
mov
bound
out
sbb
in
xchg
sub
push
das
dec
fwait
xchg
jbe
push
(bad)
cmp
scas
dec
cmp
xchg
pop
in
pop
jmp
pop
and
sub
cs
sub
call
test
push
adc
pushf
sub
mov
cmps
cmp
js
push
inc
sbb
ja
hlt
ficom
out
push
cmps
bound
leave
rol
sbb
mov
ret
ins
mov
stos
es
js
dec
daa
cmp
out
cwde
xor
push
cmp
test
arpl
xchg
pop
push
push
iret
out
ret
xchg
jmp
mov
cmp
sub
sub
adc
jle
fwait
jae
lahf
jb
and
ret
aas
push
iret
lds
xchg
mov
js
fwait
leave
sbb
mov
fisubr
nop
cli
shl
retf
xor
movs
(bad)
in
sub
outs
mov
inc
sub
ret
adc
mov
pop
mov
cmps
mov
ret
(bad)
cld
pushf
sbb
inc
sub
push
cmps
push
enter
mov
jb
fwait
push
loope
(bad)
fldcw
dec
inc
retf
(bad)
jae
rcl
mov
ins
pop
jns
jno
sbb
cwde
and
iret
ds
sub
push
int3
mov
inc
xor
out
mov
dec
cmp
inc
mov
daa
sbb
ins
mov
sub
ficom
in
pusha
ror
inc
popa
jb
dec
ss
inc
outs
in
and
neg
mov
daa
or
movs
arpl
or
sub
addr16
sbb
mov
(bad)
push
sub
jg
mov
jne
xor
dec
cmp
sub
das
xor
imul
jno
out
retf
lock
jb
mov
pop
bswap
sbb
dec
cli
enter
sti
icebp
fbstp
or
adc
je
neg
push
fst
jmp
push
test
add
mov
div
mov
fld
repz
mov
ret
push
or
inc
xchg
int3
(bad)
cmp
ins
shr
stos
mov
xchg
cdq
retf
xchg
jbe
cs
ins
inc
jge
inc
(bad)
fidivr
dec
loopne
push
sbb
inc
dec
mov
cmp
sti
lahf
xchg
ret
xchg
fwait
enter
aam
cmp
adc
lock
mov
add
cwde
ss
aas
ja
ja
add
dec
(bad)
out
and
cs
fmul
push
inc
call
jmp
jge
add
(bad)
push
imul
(bad)
fldenv
and
xchg
js
adc
ret
stos
add
clc
sbb
dec
stc
pop
and
sbb
xchg
lods
adc
test
out
test
push
and
dec
movs
pushf
pop
aas
or
dec
adc
cmc
mov
popa
xor
in
jno
adc
mov
dec
dec
mov
jno
inc
cmp
stos
xor
and
nop
push
adc
mov
sbb
retf
jl
ret
pop
push
stos
pop
mov
inc
xchg
mov
dec
retf
jnp
fstp
mov
jmp
dec
push
and
mov
sti
inc
int
mov
mov
cld
pop
and
push
mov
lods
aas
and
(bad)
push
pop
push
mov
push
cs
push
adc
add
sbb
or
inc
stos
imul
dec
sub
ins
dec
pop
sbb
mov
mov
pop
test
ror
fld
imul
adc
cld
jbe
cmp
loope
mov
(bad)
and
cmp
sub
adc
and
outs
and
jnp
and
jl
stos
ss
inc
arpl
pop
xor
inc
icebp
rcr
sbb
in
sub
jmp
dec
test
jg
in
adc
dec
ror
cmps
pop
aad
pushf
jecxz
scas
jae
or
test
mov
dec
sub
les
cli
call
dec
fistp
add
retf
xchg
call
adc
jmp
xchg
sti
int3
pop
mov
xor
mov
mov
mov
xchg
sub
push
cmp
sub
push
neg
inc
pop
sub
ja
adc
imul
into
push
push
int3
fucomip
push
jae
inc
inc
jmp
jb
fxch
push
sbb
sbb
jge
cmp
mov
or
xchg
ins
aad
jo
mov
cld
jl
stc
adc
xor
adc
jge
sbb
pusha
mov
jae
scas
push
jge
fstp
push
sbb
pop
sub
imul
push
lahf
outs
cmp
jbe
daa
js
aam
push
mov
sti
ins
and
push
clc
jge
mov
aam
fwait
mov
ja
test
aaa
stos
xchg
xchg
pop
ret
mov
or
xor
pop
outs
xbegin
leave
mov
mov
in
adc
in
dec
cmc
mov
sub
sub
bound
sti
cmp
push
xor
dec
test
dec
inc
dec
fisttp
mov
xor
rcr
pop
cdq
movs
pop
or
outs
call
bound
adc
inc
fistp
in
adc
sbb
dec
xchg
lar
push
neg
fcom
(bad)
movs
mov
stos
push
int3
into
sub
inc
dec
adc
xor
adc
dec
outs
jb
adc
lock
fstp
sbb
gs
cmp
add
lahf
arpl
mov
mov
inc
sbb
test
dec
ins
mov
pop
adc
cmp
dec
icebp
js
sub
dec
xor
push
bound
rol
jle
fisttp
fild
cs
ins
popa
or
and
stos
xchg
push
sti
mov
mov
cmc
xchg
(bad)
clc
mov
cmp
push
mov
inc
or
adc
ins
in
arpl
sub
xor
push
cld
jle
movs
popa
nop
add
pop
xchg
pop
sbb
dec
xchg
xchg
jmp
mov
xchg
fcomp
jl
adc
rcl
xchg
inc
cmp
xchg
mov
mov
sti
mov
sbb
sbb
ja
call
pop
mov
aad
sbb
ja
dec
inc
cmp
sub
lea
rol
sub
adc
cmps
sbb
rol
in
mov
lods
scas
(bad)
cmp
and
(bad)
aad
jb
(bad)
jg
aaa
jp
sub
dec
inc
xchg
ret
and
xor
dec
and
sub
and
int
push
test
add
sahf
cld
push
jmp
cmp
cmp
iret
popa
mov
rol
call
js
mov
dec
test
pop
dec
rcl
mov
fdiv
mov
scas
imul
nop
sbb
pushf
popf
mov
xchg
mov
jo
retf
imul
jl
mov
sahf
dec
sbb
lahf
pop
jns
adc
pop
mov
ror
rol
adc
int
inc
or
in
adc
adc
jecxz
pop
sti
sub
inc
cmps
pop
nop
sbb
pop
jecxz
stos
sbb
add
push
sub
clc
push
xchg
push
ficom
shr
adc
leave
(bad)
std
sti
xchg
mov
mov
aad
mov
add
sub
mov
stos
sub
add
cmp
imul
sub
sahf
push
inc
xchg
clc
xchg
rol
movsx
test
sbb
push
scas
and
mov
fisttp
cld
(bad)
sub
addr16
and
movs
pop
sbb
sbb
or
mov
outs
sbb
inc
cmp
mov
dec
inc
int3
dec
mov
push
push
pop
int
ds
popf
jle
and
and
in
jp
pop
icebp
outs
mov
push
ins
pop
sub
push
scas
mov
lds
addr16
nop
jae
addr16
loop
sti
adc
lea
mov
adc
scas
jle
xchg
neg
jnp
imul
and
addr16
je
sbb
xchg
lock
das
adc
repz
adc
jge
das
adc
mov
sti
adc
ja
fild
es
jle
mov
adc
movs
jg
ja
stc
mov
mov
adc
imul
xchg
daa
adc
dec
js
shl
dec
icebp
out
push
push
leave
mov
loop
mov
fwait
adc
and
sbb
fwait
out
out
icebp
mov
not
sub
ficomp
or
outs
jnp
pop
mov
push
mov
and
ins
test
inc
sbb
retf
and
cld
sub
nop
jmp
mov
xor
int
jge
sbb
push
adc
out
js
std
push
sub
mov
jp
push
ret
dec
and
out
adc
push
xlat
push
push
jmp
daa
dec
jmp
or
bound
(bad)
xchg
jmp
mov
add
adc
or
ins
mov
xchg
fwait
pop
mov
sub
pop
sahf
loope
cmp
dec
pop
adc
jmp
dec
xchg
mov
(bad)
inc
mov
ins
sahf
and
cmp
out
arpl
jbe
sbb
pop
sub
push
sub
lahf
jl
xchg
dec
mov
retf
inc
mov
adc
pop
adc
jb
fidiv
push
mov
xor
not
and
cmps
into
xchg
out
cmp
mov
ret
or
adc
ret
call
retf
mov
arpl
hlt
xchg
push
push
pop
push
cmp
xor
inc
jl
js
push
add
mov
movs
test
fsubr
pop
xchg
mov
pop
retf
xchg
mov
or
sbb
pop
fmul
jo
jns
mov
enter
cmp
test
pop
mov
or
shl
or
xchg
jge
and
mov
std
pop
loopne
jge
jb
mov
inc
add
je
outs
push
sub
add
(bad)
adc
(bad)
sub
cld
mov
dec
adc
dec
adc
jge
outs
inc
pop
and
jns
idiv
or
xor
stos
xor
into
pop
sbb
js
mov
popf
cwde
add
or
xor
dec
mov
std
scas
cmp
sbb
sub
sbb
scas
sar
pop
test
(bad)
repz
ud1
pop
push
and
or
push
out
call
xchg
lods
sti
fwait
jns
lods
adc
jge
lods
xor
lods
sub
in
xor
xor
mov
sti
xchg
cld
xchg
ror
sub
pop
out
inc
sbb
pusha
sub
ins
and
(bad)
push
jmp
das
daa
adc
pop
pop
out
mov
pop
adc
pop
fdiv
ds
pusha
adc
ds
jl
hlt
aam
xor
push
jns
int
sub
xchg
sub
or
das
cld
ret
cdq
or
repnz
int
fwait
dec
dec
inc
pusha
jmp
sti
push
xchg
pop
pop
js
inc
xor
lea
inc
mov
fidiv
add
ret
test
push
and
push
scas
mov
xchg
mov
sbb
ret
aad
(bad)
cli
outs
mov
sbb
mov
xchg
out
data16
fsub
sbb
pslld
inc
xchg
sbb
ins
pop
rcr
or
test
mov
ret
iret
sahf
fmulp
push
retf
and
movs
cmp
test
dec
pop
mov
mov
mov
mov
psraw
shl
cmp
in
fadd
jbe
retf
(bad)
jle
bound
loopne
inc
and
test
aad
sub
(bad)
fidiv
dec
and
mov
jnp
sub
push
mov
fwait
and
dec
repz
push
sub
fdivr
adc
xchg
loop
ja
push
mov
and
(bad)
aaa
in
xchg
repz
rcr
pusha
int
in
add
repnz
mov
cmp
push
push
call
dec
cmp
push
int
mov
jmp
adc
cli
pop
lds
cmps
sbb
dec
outs
addr16
cmp
test
sub
into
out
pop
lds
cwde
xor
pop
pop
scas
popa
loope
adc
retf
push
not
mov
scas
inc
fwait
cdq
jecxz
jnp
fwait
jle
mov
mov
jno
repnz
pop
aaa
mov
int3
mov
aas
push
mov
test
scas
cmp
add
call
add
in
cmp
lea
adc
jbe
push
pop
mov
push
sub
and
jge
mov
jl
cmps
or
lahf
data16
pushw
pushw
punpckhwd
pushf
mov
mov
pop
lahf
cli
in
test
dec
push
pop
addr16
jo
fsub
push
sbb
push
adc
pop
lods
dec
in
leave
stos
and
in
rol
push
push
xchg
ror
adc
push
sub
aad
pusha
mov
inc
pushf
pop
mov
lahf
adc
sbb
arpl
or
outs
out
or
aaa
xlat
fild
mov
and
pop
mov
or
inc
out
repnz
sbb
xchg
outs
sbb
mov
pop
outs
pusha
popa
mov
and
(bad)
pop
test
cli
and
inc
pop
and
jno
pop
adc
test
xor
mov
pop
js
adc
add
xor
mov
shl
cdq
ds
les
fild
xchg
js
mov
inc
fisttp
push
add
in
stos
das
sahf
(bad)
mov
jne
mov
nop
ret
push
adc
add
push
push
frstor
lods
(bad)
xor
fsubr
xor
jecxz
and
loop
pop
mov
fadd
dec
cmp
call
addr16
(bad)
pop
xlat
pusha
ins
movs
jne
jge
aas
sub
pop
xchg
(bad)
xlat
test
push
test
mov
rcl
sti
mov
add
lahf
inc
(bad)
mov
jno
imul
test
outs
test
jnp
mov
and
ja
bound
dec
out
cmp
lahf
xchg
popf
and
lahf
js
push
cwde
adc
aad
mov
push
das
icebp
mov
je
inc
aad
not
dec
pop
shl
retf
jbe
push
repnz
mov
pop
inc
outs
ins
inc
pop
dec
cmp
mov
fs
(bad)
sub
movs
fsub
and
cld
stos
daa
mov
and
cmp
xor
lahf
aad
mov
(bad)
pop
sbb
cmp
stos
push
ins
sbb
jle
scas
movs
sub
aad
inc
push
movs
push
pop
popa
fwait
jle
clc
mov
fadd
jmp
and
sti
shl
outs
pop
rol
ffreep
pop
loopne
aas
xlat
pop
int3
lock
sub
xchg
aas
jae
sti
push
rcl
lods
hlt
push
inc
cmps
jl
sbb
adc
dec
fisttp
jnp
dec
push
pushf
ror
sub
shr
imul
or
jl
add
std
add
jmp
mov
pop
push
neg
fcom
jb
repz
rcl
std
and
repnz
sub
scas
mov
cld
bound
cld
cld
jecxz
xchg
outs
nop
pop
ret
xchg
push
pop
lock
hlt
ins
jmp
imul
mov
inc
fisttp
ins
mov
cmp
ins
cld
jl
mov
cmps
sbb
sbb
pop
call
fild
add
in
popa
lea
fisttp
popf
sahf
out
(bad)
std
lds
pop
mov
js
jg
or
push
xor
push
sbb
inc
xor
(bad)
sti
movs
in
scas
outs
lock
mov
je
xchg
in
pop
data16
inc
add
fld
push
stos
mov
lahf
adc
loopne
aad
adc
mov
aad
(bad)
dec
fs
mov
out
xor
mov
rcr
dec
adc
jp
aas
push
push
ror
repz
mov
pop
dec
in
imul
sub
(bad)
rcr
hlt
xchg
es
sub
out
outs
ret
mov
pop
sti
rcr
pop
mov
xor
shl
and
fisttp
in
mov
adc
adc
jp
push
in
inc
ja
add
pop
call
iret
push
adc
fld
fisub
std
imul
push
movs
(bad)
sbb
dec
mov
cwde
enter
sub
std
ins
pop
or
gs
mov
int
inc
add
push
out
mov
jne
cmp
out
jmp
addr16
ffreep
mov
inc
fcom
iret
movs
out
daa
stos
jle
aam
nop
dec
mov
xchg
pop
jmp
push
add
ret
adc
xchg
cli
jge
scas
adc
cmps
and
lods
cwde
xchg
arpl
pusha
in
sub
add
pop
cmp
jmp
pop
scas
dec
mov
add
stc
cmp
mov
lock
sbb
adc
sub
add
pop
jno
xor
(bad)
push
pmulhuw
xor
imul
inc
push
retf
dec
clc
call
lahf
and
fisub
jmp
and
aam
lahf
dec
ja
add
(bad)
jg
test
xor
repz
sahf
mov
push
add
push
push
mov
xchg
and
add
push
ficomp
sub
mov
aaa
jbe
lods
sub
jp
push
iret
daa
popf
in
pop
out
add
mov
pop
and
or
cwde
mov
inc
cmp
cld
ins
mov
sub
arpl
leave
test
sub
cmp
lahf
cmps
mov
sbb
aad
fcom
xchg
lds
adc
js
pop
aam
push
ret
pop
rcl
cdq
xchg
pop
push
or
adc
test
xor
pushf
sbb
push
xchg
int
test
pop
inc
and
push
mov
imul
in
fdiv
xchg
push
call
adc
sub
mov
fimul
sub
addr16
ficomp
outs
mov
xor
data16
popf
mov
mov
push
mov
sbb
clc
pop
lods
fwait
cs
adc
rcr
fstp
xor
pop
sbb
push
enter
mov
and
mov
dec
add
push
movs
or
push
mov
ins
pop
cdq
inc
adc
mov
mov
ror
and
mov
pop
sub
addr16
xor
loop
das
fsub
pop
ja
push
pop
jl
scas
mov
cwde
(bad)
leave
out
pop
mov
inc
in
xchg
sub
aad
dec
push
repz
mov
(bad)
mov
cwde
pop
push
mov
aam
hlt
cdq
xor
mov
in
loop
lahf
popf
(bad)
jg
and
out
js
adc
fcom
enter
and
push
jmp
mov
pop
mov
pop
add
scas
jl
cmps
scas
jmp
aad
call
dec
dec
push
add
mov
mov
and
push
ins
mov
das
xchg
shl
fucomp
std
call
inc
adc
mov
push
pop
mov
cwde
pop
push
mov
aas
sbb
or
and
or
or
ins
adc
outs
shl
pushf
jo
sti
mov
adc
jecxz
xlat
loopne
pop
inc
xor
je
add
stos
aaa
inc
mov
neg
jle
mov
push
out
(bad)
cmps
es
imul
lods
test
pop
retf
gs
cmp
mov
in
popa
push
aaa
fadd
je
pop
fs
mov
(bad)
ror
push
iret
shr
jge
inc
inc
cli
aam
mov
mov
movs
call
pop
cwde
or
out
sub
sub
or
cmc
sbb
fadd
repz
mov
mov
out
out
outs
fcmovnbe
and
adc
dec
stos
lock
std
fisub
inc
(bad)
das
adc
sub
push
and
pop
int3
adc
in
push
retf
push
ret
imul
lods
pop
adc
jne
popf
push
fistp
inc
sbb
and
ror
xor
fld
adc
cmp
jg
adc
imul
cli
and
std
jmp
inc
ins
jmp
add
mov
sub
bound
outs
arpl
add
call
sub
mov
out
add
mov
add
fdiv
sbb
shr
inc
sbb
cmp
push
enter
aas
mov
test
or
push
ror
mov
jb
rcr
mov
fcomi
dec
lods
mov
sti
and
sub
shl
xor
sub
fldcw
rol
push
hlt
xor
dec
dec
adc
fistp
pop
ror
rcr
lods
fnstenv
pop
ins
imul
mov
sbb
mov
inc
test
cmp
int
inc
into
inc
and
inc
jo
or
das
jp
pushf
pushf
mov
inc
jmp
lea
ror
or
xchg
in
ror
jge
add
ss
push
fcomp
sahf
lods
push
or
dec
scas
lods
test
or
mov
imul
inc
adc
adc
sub
mov
xor
pop
int3
std
outs
ds
pop
mov
push
cmp
pop
popa
(bad)
mov
test
pop
inc
std
inc
or
call
neg
xor
dec
inc
es
push
add
bound
push
repz
pop
fisttp
test
outs
mov
out
jbe
push
out
push
shl
adc
jo
mov
out
(bad)
mov
xchg
fcomp
cmp
ret
aas
(bad)
shl
inc
ja
adc
test
lods
outs
push
mov
(bad)
adc
sti
cs
retf
cmp
repnz
iret
mov
xchg
or
mov
test
push
fimul
push
dec
repz
retf
lods
cwde
loope
mov
pop
stos
xlat
mov
pop
dec
pop
test
mov
and
add
pop
fnstenv
aas
or
int
es
out
loope
push
or
inc
xchg
mov
fidiv
mov
es
adc
fs
push
jge
out
push
pop
add
mov
(bad)
fidiv
push
dec
mov
xchg
xchg
rcr
adc
pop
jmp
(bad)
sub
cli
push
mov
les
xchg
jmp
imul
jne
mov
lock
dec
inc
clc
push
fild
jl
push
shl
mov
jmp
xchg
jmp
mov
sub
mov
add
mov
dec
and
xchg
push
outs
(bad)
pushf
sahf
mov
popf
pusha
test
cdq
shr
repz
pop
je
sbb
aas
bound
sbb
(bad)
jg
push
jb
scas
pop
in
xlat
retf
sbb
arpl
cwde
fcmovne
xchg
jb
sub
xor
cli
mov
xor
mov
clc
ins
pop
retf
mov
xor
fwait
push
dec
adc
imul
push
lods
jnp
arpl
add
retf
retf
scas
dec
sti
inc
movs
mul
mov
jl
sub
xor
fild
xchg
xor
or
popf
cmp
or
mov
jmp
scas
dec
or
xor
push
jno
adc
ins
movs
aaa
outs
repz
add
sahf
(bad)
lock
add
adc
jg
lods
mov
mov
rcr
inc
repz
mul
fwait
xchg
sbb
in
iret
mov
add
das
loop
fild
push
mov
xchg
ins
sbb
loopne
sar
xor
fs
scas
dec
jp
mov
fwait
xchg
pop
gs
ins
push
mov
popf
xchg
push
push
mov
sbb
mov
xlat
mov
std
sub
in
lock
shl
(bad)
xchg
sbb
ins
sub
lock
and
loop
call
stos
arpl
mov
shl
pop
xor
pop
aad
out
cmp
xor
fnstsw
rcl
xor
mov
pop
pop
iret
loopne
fs
inc
or
cmc
jbe
sbb
out
mov
adc
enter
movs
sbb
push
outs
cli
sub
shl
dec
adc
out
div
mov
inc
add
imul
ror
add
inc
mov
imul
les
ret
pop
ins
sbb
inc
icebp
fstp
nop
inc
jl
(bad)
jge
ins
aad
popf
scas
sub
hlt
push
jns
cld
daa
data16
clc
imul
add
push
aaa
out
ret
push
mov
(bad)
movs
dec
sti
xor
push
mov
sahf
aad
shl
cmp
cmp
mov
lock
arpl
nop
sbb
dec
push
lea
or
push
je
jb
pop
dec
xchg
pop
xchg
repz
(bad)
in
ds
lahf
retf
pop
rcr
bound
adc
stos
pop
xchg
mov
retf
jmp
jge
fcom
retf
inc
stos
xor
movs
mov
pusha
rcr
fisub
fldenv
sbb
jle
push
push
push
jge
mov
call
push
sub
cmp
fstp
cmp
fwait
mov
in
cli
movs
daa
ins
inc
and
dec
ret
cdq
cmp
call
in
das
mov
xchg
aam
stos
enter
mov
imul
add
es
cld
fsubr
adc
sar
jne
test
retf
pusha
outs
(bad)
adc
push
and
dec
movs
sbb
pop
cwde
inc
retf
shr
jno
push
dec
stos
xchg
add
fstp
xor
xchg
scas
dec
mov
push
or
call
mov
fs
cmp
retf
or
adc
int3
pop
lods
cmp
pop
in
in
jl
(bad)
cmp
fstp
xchg
je
pop
dec
push
fadd
pop
sbb
daa
adc
fnstsw
enter
and
shr
sub
cmp
sar
cmps
cs
lahf
and
or
popf
add
mov
and
dec
out
xor
(bad)
arpl
inc
loopne
imul
rcr
dec
sti
push
sbb
fiadd
adc
and
cmp
int3
adc
loopne
cmp
push
mov
mov
mov
cli
(bad)
mov
xchg
loopne
popf
scas
push
scas
add
mov
jl
sbb
dec
div
push
out
and
and
int
call
adc
mov
scas
xor
sub
pop
pop
mov
ret
sbb
lea
and
jecxz
jp
jle
rol
and
fcom
icebp
pop
arpl
pop
sti
icebp
push
mov
and
test
xchg
sbb
pushf
pusha
push
lods
mov
sub
mov
scas
mov
outs
clc
xchg
in
xlat
aam
pop
(bad)
cmps
sbb
in
dec
sbb
loop
xor
loope
mov
pop
call
mov
aas
(bad)
mov
rcl
xchg
push
outs
or
outs
bound
ret
pop
push
popf
imul
cmp
lods
bnd
ret
push
jmp
ds
aas
add
ds
scas
add
cdq
shr
and
xchg
jnp
mov
fdivr
sar
dec
movs
test
(bad)
cld
adc
xchg
cs
dec
sbb
mov
dec
sbb
aam
aad
ja
push
mov
add
push
call
(bad)
das
(bad)
jg
or
pop
inc
int
in
push
and
adc
call
ret
dec
ret
bound
shld
(bad)
ja
sbb
cmp
fld
jg
xor
pop
shr
(bad)
cmps
mov
xor
cmp
ins
mov
dec
cmp
in
fs
or
popf
cld
ret
aad
jae
mov
jne
(bad)
mov
ror
dec
enter
cmps
jb
adc
retf
xlat
inc
push
lahf
icebp
and
data16
jmp
or
or
pop
push
mov
das
xchg
and
push
push
loopne
imul
jp
sub
mov
ret
fidivr
cmp
adc
jmp
pop
call
pop
sub
fsubr
sbb
sahf
or
outs
push
push
or
push
cld
jo
sbb
(bad)
retf
(bad)
jns
shl
icebp
and
rcl
xor
clc
mov
and
jecxz
xor
loope
sar
rol
call
inc
adc
sub
mov
fstp
push
fdiv
inc
adc
xchg
adc
scas
scas
hlt
test
push
pop
mov
loope
mov
std
push
mov
sti
adc
addr16
inc
lods
loopne
ror
sbb
aad
pop
cmp
dec
cmp
pop
jno
jmp
fs
cmp
gs
push
call
push
jg
and
mov
push
sbb
push
pop
adc
mov
iret
(bad)
mov
cmp
xor
repz
push
fsubr
sub
sbb
fidiv
push
sub
retf
jle
ss
int
dec
push
shl
iret
lahf
aaa
and
in
ss
data16
jle
fwait
shr
shl
maskmovq
imul
and
push
add
pop
(bad)
loopne
js
arpl
and
xchg
sahf
jmp
xchg
adc
adc
xchg
cmp
sub
mov
sub
sbb
mov
xchg
mul
dec
cmps
aad
or
mov
daa
adc
and
sti
arpl
fistp
outs
test
mov
(bad)
cld
sub
mov
rcl
int3
pop
add
xor
pop
sbb
adc
ficom
movs
lods
out
(bad)
jge
test
ins
xchg
sbb
std
repz
jae
mov
in
push
jecxz
jge
mov
adc
call
dec
jnp
cmps
aad
add
nop
dec
aad
pushf
icebp
pop
lahf
adc
addr16
iret
test
sbb
mov
cs
addr16
sbb
xchg
mov
(bad)
scas
dec
shr
or
outs
and
push
ins
scas
cmp
sti
mov
arpl
dec
idiv
xchg
loope
rol
sahf
adc
test
(bad)
xchg
mov
xchg
mov
jle
sub
or
neg
xor
in
lods
xchg
popf
mov
hlt
addr16
fwait
pop
bnd
mov
mov
mov
lahf
mov
cmps
pop
jbe
stc
mov
(bad)
ja
iret
jns
int3
ret
test
addr16
push
push
aad
jbe
jecxz
hlt
push
push
add
jecxz
jl
in
sahf
or
adc
jp
cmps
sbb
jp
sub
mov
push
icebp
cwde
je
in
mov
inc
cdq
or
pusha
dec
(bad)
icebp
iret
mov
xlat
popa
adc
clc
xchg
stos
mov
sbb
xchg
adc
dec
fsub
fcomp
jp
lahf
push
fnsave
sahf
inc
jae
call
sbb
cmp
pop
daa
outs
or
fldcw
test
dec
jp
in
mov
sbb
mov
in
jnp
fldenv
in
jmp
dec
imul
sub
fwait
xor
test
mov
shr
pop
leave
enter
sti
mov
jmp
out
cmp
push
outs
sub
jge
dec
cmps
gs
ret
hlt
mov
jno
push
ret
adc
pop
jmp
xchg
addr16
sub
imul
push
mov
xor
xor
(bad)
mov
pusha
add
xor
outs
and
je
xor
icebp
mov
daa
fcomp
jle
fstp
sbb
lds
imul
push
mov
pushf
add
lock
push
lahf
movs
adc
xchg
mov
stos
jp
outs
sbb
xchg
mov
mov
dec
cld
repnz
mov
push
jae
and
mov
jae
retf
shl
(bad)
in
or
sbb
into
cmp
int3
and
stc
je
aam
pop
dec
sub
cmp
sub
pop
jl
cmp
adc
icebp
cld
xor
or
adc
mov
mov
push
aas
mov
(bad)
sbb
pop
ja
jg
mov
dec
jecxz
jns
add
sbb
xor
adc
dec
pop
loopne
cmp
sub
jbe
push
jecxz
or
mov
hlt
fwait
call
or
dec
mov
jp
sub
imul
xchg
sbb
out
ins
mov
stc
ror
mov
dec
adc
add
ret
div
fisttp
les
repnz
and
jno
(bad)
outs
inc
in
sub
pusha
sar
sbb
sbb
cwde
pop
push
fsub
test
dec
into
sbb
push
sub
lock
out
scas
je
mov
jae
fdivrp
and
out
(bad)
pop
lea
inc
inc
fstp
jae
iret
push
fnstcw
jge
mov
pop
fst
add
popf
test
xor
xor
pop
jb
mov
or
ret
xor
or
mov
mov
loope
sub
jmp
(bad)
xor
(bad)
fcom
lods
and
mov
cmp
in
loopne
(bad)
mov
cmps
add
mov
lods
adc
dec
jg
ins
inc
adc
and
add
ret
mov
std
dec
inc
popf
xchg
cmp
aam
jns
pop
inc
cmp
jns
imul
fld
jo
sub
cmp
sti
add
xchg
jae
outs
adc
out
lods
mov
inc
dec
bswap
test
push
or
dec
call
leave
push
retf
xchg
cmp
aaa
ds
mov
clc
jns
das
cld
ins
pop
xor
cmc
fistp
sub
add
adc
fs
mov
cmp
scas
mov
xor
pop
pop
cld
js
test
pop
mov
mov
jg
cmp
jmp
xor
ss
cmps
les
cmps
pop
ins
adc
(bad)
push
mov
mov
jne
adc
pop
fcom
das
mov
xchg
lahf
cmp
outs
sti
xchg
sbb
out
retf
aam
jle
daa
test
xor
lock
push
xor
adc
retf
jle
and
adc
mov
lea
pop
outs
fwait
vxorpd
addr16
pop
hlt
and
jle
(bad)
xchg
stos
dec
fidiv
imul
aad
or
push
loop
gs
jns
jle
imul
mov
jno
test
stos
and
jmp
and
outs
loop
xor
out
int
in
fwait
pop
xchg
mov
adc
iret
neg
pop
jl
gs
and
scas
(bad)
fcom
mov
xchg
ins
or
enter
cli
fistp
fisttp
rcl
push
xchg
aaa
stos
cmps
sbb
in
push
cmp
add
xor
dec
mov
imul
push
(bad)
repz
(bad)
sbb
clc
sbb
push
lea
inc
outs
pop
pop
dec
xchg
jg
push
and
mov
ror
jmp
xchg
js
daa
pusha
out
dec
cmp
push
pop
mov
or
aam
sbb
or
push
push
gs
xchg
pop
in
std
fsubrp
mov
xlat
lahf
mov
frstor
test
scas
outs
call
out
sbb
mov
fild
sbb
fst
loope
mov
test
xor
mov
xchg
mov
mov
fbstp
test
mov
(bad)
cs
and
adc
mov
mov
adc
push
and
adc
ss
aas
xchg
das
push
cmovne
push
(bad)
mov
test
in
loopne
hlt
jne
pushf
shr
fadd
jmp
inc
dec
mov
sbb
imul
shl
xchg
jmp
not
pop
inc
push
imul
mov
call
lock
sbb
nop
fnstcw
loop
cmp
xor
mov
hlt
enter
push
xchg
xchg
cli
xor
movs
fist
iret
xchg
pop
mov
ficomp
vpsllq
ret
cmp
push
cwde
sbb
mov
jmp
fistp
sub
jecxz
repnz
cmp
dec
repz
sti
call
aam
lahf
pop
cli
aas
mov
sbb
xchg
or
adc
lds
add
call
xor
push
sbb
gs
pop
sub
push
lahf
dec
lahf
xor
pop
dec
fild
add
in
mov
mov
cdq
xor
mov
sbb
lds
mov
in
or
sub
in
aad
hlt
hlt
int3
ins
lds
test
push
mov
sub
mov
arpl
cmps
gs
adc
out
std
ds
lods
dec
inc
lea
scas
retf
into
fwait
movs
dec
push
and
in
stos
popf
pop
mov
pop
xchg
push
cmp
cli
addr16
les
stos
dec
and
jns
lods
inc
test
xchg
and
out
pop
fcom
inc
dec
dec
pop
fwait
push
sbb
retf
jne
fxch
jnp
mov
ja
das
fldz
(bad)
mov
push
sbb
sbb
mov
scas
das
push
pop
sub
fdivr
xor
cmps
das
rol
lock
xor
cmc
js
imul
rcr
mov
push
gs
sar
pop
xchg
and
sar
inc
sbb
arpl
adc
outs
clc
ficomp
in
xchg
sub
mov
mov
inc
into
dec
mov
and
pop
pusha
and
mov
push
mov
push
sub
jge
sub
shl
mov
ins
fwait
shl
ficom
neg
xchg
(bad)
fst
ins
cmp
gs
int3
inc
push
sub
cmps
test
loope
mov
sub
push
or
mov
dec
arpl
mov
xor
add
bound
js
jbe
fnstcw
rcr
dec
xchg
sub
dec
ss
ret
push
jns
xchg
fist
sbb
paddsb
jno
push
fidiv
fistp
xchg
push
sbb
adc
xor
mov
sub
jnp
ss
inc
pop
push
and
push
cwde
call
popa
sti
cli
sbb
pop
(bad)
adc
add
ins
mov
xor
pop
mov
sbb
pushf
loope
xchg
push
push
aas
sti
jge
mov
fwait
add
retf
add
loopne
and
xor
(bad)
mov
mov
adc
orps
jge
dec
ret
sti
aam
sahf
movs
cmp
clc
es
mov
loopne
fild
icebp
mov
cdq
mov
pop
mov
jg
in
jno
int3
jge
mov
sbb
sbb
or
sub
in
cmp
test
imul
mov
js
pop
int3
int
les
jne
gs
push
sbb
loopne
inc
push
stos
inc
dec
fdivr
fidivr
test
adc
pop
jmp
fstp
jne
inc
cli
dec
inc
cwde
in
cmp
scas
add
inc
fistp
outs
rcl
ins
pop
sub
cmp
ja
fwait
cmps
sbb
sbb
adc
ret
sub
push
rcl
loope
ror
scas
mov
push
daa
push
iret
test
int3
mov
retf
cmp
dec
ret
dec
pop
and
mov
rcl
jge
add
sub
fs
int3
ret
dec
mov
push
shr
adc
cmp
rcr
push
push
dec
and
push
lock
js
jle
or
es
dec
inc
aam
dec
out
sub
pop
pop
pop
das
cli
dec
xchg
push
loopne
inc
retf
loopne
(bad)
mov
(bad)
repnz
and
gs
int3
pop
xchg
movs
xchg
ds
cmp
xor
cmp
lods
xchg
retf
xor
or
jmp
push
outs
mov
sub
push
call
jmp
pop
adc
cmp
rcr
adc
xchg
retf
pop
pop
in
repnz
pop
imul
lahf
(bad)
repz
mov
mov
ds
adc
cmp
sbb
adc
pop
test
inc
lea
out
vpshufhw
mov
cmp
ret
pop
mov
jge
push
retf
lods
sbb
fnsave
lea
cmp
aas
ins
adc
mov
bound
outs
scas
rol
mov
mov
inc
nop
fbld
and
mov
iret
xchg
pusha
hlt
mov
pop
sbb
cld
and
jp
dec
sub
sub
pop
dec
jb
mov
shl
in
imul
rol
retf
dec
into
pop
lahf
sahf
test
bound
adc
add
sahf
inc
mov
retf
cmp
dec
jp
cs
mov
repz
push
retf
and
mov
pop
inc
adc
aam
mov
rol
push
mov
gs
jnp
mov
cld
xchg
push
jp
data16
imul
je
cmp
mov
test
mov
pushf
call
pop
ret
loopne
adc
and
pop
test
adc
fisttp
cmp
scas
movs
es
mov
cld
lahf
push
call
call
test
gs
div
adc
mov
(bad)
sub
retf
adc
xchg
js
sub
lods
pushf
and
imul
mov
xchg
das
jge
adc
push
nop
xchg
rcr
sbb
les
push
push
sbb
mov
xlat
cld
or
ins
mov
xchg
lock
(bad)
fstp
repnz
mov
pop
out
push
(bad)
outs
and
dec
ret
mov
push
lods
xor
or
push
xchg
addr16
int
test
mov
sbb
inc
mov
dec
xchg
xchg
mov
scas
mov
mov
int
pushf
cmp
pop
mov
adc
in
fcmovb
jl
and
and
sub
jmp
xor
jae
rol
dec
cmc
xor
pop
xor
inc
loop
adc
icebp
add
(bad)
sub
mov
fsubr
push
mov
jns
repnz
mov
pop
xlat
sbb
sbb
cdq
call
jno
sbb
pop
bound
push
sub
inc
and
xor
clc
xchg
cdq
in
mov
cmp
fdivr
jo
call
mov
sub
adc
adc
(bad)
pop
(bad)
push
push
and
sub
addr16
sub
addr16
sbb
popf
add
je
mov
data16
xchg
iret
sti
lahf
mov
sbb
inc
inc
add
in
inc
not
sti
out
xlat
sbb
aam
and
imul
adc
pop
(bad)
(bad)
les
pushf
movs
pop
dec
(bad)
cmp
xchg
repz
add
in
call
mov
cwde
pop
scas
bound
adc
cmp
dec
jmp
push
and
fdivr
pop
test
arpl
call
jp
shl
repnz
jmp
cmp
push
ss
push
sbb
xchg
jo
push
push
xchg
mov
vpsubusw
adc
push
lahf
cmps
sahf
in
xchg
(bad)
jle
adc
aam
clc
(bad)
push
xchg
in
pop
add
das
test
int3
push
sbb
xchg
pop
retf
xchg
sahf
or
jecxz
pop
out
cs
xor
jb
aam
cld
cs
stos
xchg
push
div
pusha
mov
xor
(bad)
adc
addr16
or
addr16
outs
call
pop
cmp
sbb
mov
jle
inc
push
movs
adc
fs
dec
jecxz
ret
out
jecxz
inc
pop
mov
in
cwde
addr16
(bad)
popf
pop
call
test
or
sahf
sbb
lahf
ja
stos
and
call
mov
outs
jecxz
inc
or
pop
inc
pop
adc
sub
or
cmp
cs
xor
add
sbb
iret
sbb
xchg
jge
int
mov
idiv
inc
sbb
add
push
sub
and
sahf
icebp
pop
loopne
bound
add
push
fld
rcl
fild
cmp
push
adc
rcr
cwde
push
pop
adc
(bad)
push
repz
jnp
pop
test
fldcw
mov
(bad)
movs
ror
xor
pop
adc
dec
pop
xchg
push
xchg
sub
push
xchg
and
addr16
add
xchg
imul
adc
arpl
fwait
adc
aaa
mov
outs
pop
jp
xchg
push
xchg
sub
xor
adc
loopne
jbe
push
in
or
daa
xchg
cmc
les
loope
xchg
repz
push
call
ja
pop
dec
pushf
mov
jno
adc
aas
nop
or
mov
loop
or
dec
push
js
pop
dec
or
push
mov
pop
ss
mov
es
test
shl
(bad)
call
fcomp
(bad)
stc
and
xor
adc
lahf
jg
fst
or
jne
jp
xchg
cwde
or
add
cwde
loopne
mov
add
push
out
mov
hlt
adc
rcl
jb
adc
adc
cmp
pop
cld
pop
xchg
adc
cmps
shl
mov
mov
add
aas
xchg
cmps
mov
sbb
adc
xchg
gs
push
popf
cmc
sub
push
sub
dec
add
cmp
out
add
int3
ret
mov
jge
xchg
cmc
xchg
addr16
je
push
inc
das
(bad)
repnz
inc
push
pop
out
stos
mov
fisttp
mov
cli
(bad)
jb
ins
pop
ins
lock
pop
mov
aam
repz
fbld
(bad)
test
popa
push
or
jge
sub
outs
pop
mov
pop
fwait
ds
push
(bad)
jmp
aad
push
loopne
ds
add
pop
mov
(bad)
mov
inc
mov
mov
test
ss
adc
add
pop
clc
mov
js
(bad)
lock
mov
and
test
imul
adc
inc
rcr
and
lods
jno
popa
and
mov
pop
and
and
fld
fsubr
or
mov
retf
movs
iret
imul
adc
neg
into
retf
inc
xchg
xchg
data16
sub
sar
mov
jo
push
adc
fcomp
icebp
jmp
pop
or
(bad)
xor
mov
daa
aam
push
jbe
push
cmp
out
ins
ins
jbe
cmp
imul
inc
retf
addr16
sub
pop
pop
pop
leave
scas
adc
sub
sbb
mov
aad
xor
sub
and
xchg
mov
rcr
outs
push
add
cmp
sbb
hlt
pop
push
loope
adc
xor
mov
inc
sti
xchg
sub
fucomi
leave
mov
mov
sub
jmp
push
push
and
sar
mov
je
shl
(bad)
cmps
jmp
(bad)
or
cmp
call
jnp
mov
and
and
inc
sbb
and
push
jp
out
int
stc
or
ins
sub
fisub
ret
(bad)
imul
sbb
adc
repnz
adc
xchg
fisub
rcl
addr16
lock
jnp
outs
cs
and
sbb
cwde
test
push
in
and
adc
ins
pusha
call
pop
or
movs
imul
jle
mov
mov
daa
sub
xor
cwde
neg
data16
mov
fldenv
sub
cwde
and
adc
pop
das
add
jae
inc
cmps
cmp
jno
shr
outs
call
bound
cdq
jbe
outs
les
mov
mov
loop
pop
retf
cs
aad
xor
retf
mov
ret
dec
push
fs
mov
mov
das
jmp
dec
adc
div
sub
aam
dec
ds
hlt
push
aam
repnz
dec
sub
xchg
scas
lea
cdq
dec
xchg
or
shl
add
jmp
inc
iret
shl
rcl
cwde
pusha
sbb
std
jmp
adc
jp
and
jmp
dec
ffreep
jmp
sub
pushf
dec
adc
jmp
dec
daa
in
dec
and
mov
jmp
jmp
cmp
push
jecxz
mov
out
outs
sar
clc
mov
call
inc
jmp
mov
out
xchg
bnd
rcr
mov
or
dec
test
out
arpl
inc
add
xchg
adc
cmp
and
test
push
jno
pop
sub
push
mov
inc
jnp
xlat
adc
sahf
sbb
jmp
fild
cmp
sbb
inc
outs
dec
out
push
xor
mov
dec
and
or
add
pop
dec
mov
popa
das
stos
push
add
inc
lahf
cld
retf
jmp
int3
ds
arpl
test
cmps
push
mov
xor
push
xor
call
popf
cld
mov
ja
inc
or
std
add
pop
ins
add
cdq
inc
stos
xchg
mov
or
jecxz
cdq
fwait
xchg
mov
push
cli
mov
not
in
outs
fisubr
xchg
pushf
add
push
loop
mov
cmp
dec
push
out
add
or
jnp
nop
aaa
clc
out
shl
adc
and
enter
pop
imul
pop
and
sbb
mov
mov
xor
pusha
dec
xchg
in
cmp
fwait
pop
js
pusha
in
mov
inc
dec
inc
jp
pop
mov
jnp
cmps
mov
(bad)
mov
mov
dec
inc
popf
pop
pop
fisubr
mov
sub
fbld
cmp
imul
or
inc
(bad)
js
fldenv
into
popf
xchg
lea
fdivr
and
scas
(bad)
jns
sub
mov
dec
sbb
sub
pop
sbb
pop
icebp
out
fimul
jmp
rcr
sbb
into
sbb
fcom
into
ret
ds
sub
popa
jg
je
fyl2xp1
dec
jmp
pop
sbb
sbb
cmc
outs
pop
jmp
fisttp
and
push
xor
ret
jae
jns
pop
cmp
xchg
mov
int
fnstsw
mov
or
dec
imul
retf
mov
fwait
mov
inc
lea
mov
fstp
in
js
test
push
cmp
scas
sbb
xor
push
scas
xor
sub
mov
ins
xchg
adc
int
adc
and
mov
gs
or
adc
mov
jg
xlat
add
jmp
loop
jnp
fadd
mov
rcl
imul
js
ror
stos
cdq
sti
test
mov
retf
xchg
pop
jg
(bad)
cmc
hlt
inc
sar
pop
jg
mov
mov
out
fwait
movs
mov
pusha
inc
push
enter
shld
xor
fadd
jp
in
xor
jae
test
jb
div
popf
fld
add
and
enter
cmc
push
mov
adc
addr16
arpl
cs
mov
ret
pop
or
gs
cmp
popa
ror
shl
jle
adc
retf
jnp
repnz
es
addr16
sbb
push
cmp
cld
mov
xchg
cld
call
js
lock
int3
pop
loopne
stos
cmc
xchg
rcr
mov
push
inc
sub
clc
in
imul
es
jbe
out
sub
jg
inc
dec
lds
stc
dec
jmp
test
jbe
fsubr
aad
fwait
adc
sbb
jo
xchg
adc
ss
jb
bound
ins
cmps
rol
repz
and
xchg
dec
loop
test
fild
xchg
retf
cdq
les
cs
pop
sub
cmc
dec
adc
arpl
rcl
imul
fwait
sbb
inc
adc
or
inc
lea
xchg
pop
pop
outs
test
jge
pop
outs
jecxz
jmp
std
add
jg
sbb
jmp
retf
sbb
loopne
ds
cmp
cmp
stos
push
mov
mov
push
sub
arpl
shl
std
and
jb
push
mov
nop
icebp
jae
push
dec
fstp
cld
sar
fwait
or
pop
mov
fcmovnu
sbb
cmc
adc
push
test
inc
inc
mov
xchg
xchg
pop
popf
shr
mov
dec
movs
adc
mov
pop
push
fiadd
push
add
sub
aad
les
in
ret
inc
cwde
sbb
sbb
es
jno
enter
sbb
ds
cmp
call
loopne
jbe
loop
xchg
jp
push
aaa
mov
cmp
out
cdq
mov
pop
mov
std
xchg
pop
pop
std
jnp
jns
aad
mov
aam
dec
sbb
aam
pushf
push
dec
jb
scas
das
bnd
mov
gs
imul
add
xor
mov
arpl
fsubr
mov
dec
(bad)
imul
mov
int3
mov
in
neg
retf
sti
test
sub
fsubp
xlat
addr16
dec
mov
and
retf
adc
pop
rcr
mov
neg
fisttp
mov
push
push
or
xor
push
mov
es
mov
(bad)
jne
pop
push
cmp
js
aam
adc
adc
pop
mov
xchg
hlt
inc
ss
or
or
adc
dec
fst
cmp
and
dec
ret
cdq
sbb
fwait
por
call
bound
in
mov
ss
adc
scas
sahf
pop
inc
pop
xlat
in
pusha
sub
pop
sub
repz
pusha
and
ficom
xor
and
add
lahf
mov
adc
out
sbb
jne
jmp
ja
cmp
fwait
sbb
ja
push
mov
aas
or
dec
lods
jae
dec
push
fmul
push
js
jmp
(bad)
es
cmp
cmp
dec
sub
scas
inc
(bad)
test
push
inc
fidiv
pop
mov
sbb
pushf
sub
loop
nop
outs
mov
sahf
xchg
mov
jae
(bad)
xor
pop
out
lods
push
mov
loopne
dec
clc
mov
cmps
in
xchg
push
sub
mov
std
aaa
dec
imul
arpl
inc
ins
ret
mov
cs
mov
call
xchg
xchg
jl
int3
pop
stos
mov
and
xor
xchg
pop
push
xchg
cwde
push
mov
std
add
sbb
lods
je
jae
fprem1
shl
sub
mov
mov
xchg
or
jno
addr16
in
out
hlt
pop
mov
add
loopne
jp
ds
repz
(bad)
lahf
lea
lds
scas
(bad)
xchg
mov
pusha
inc
jg
push
js
retf
mov
push
imul
imul
push
sub
inc
pop
cmp
and
jno
jns
out
shr
and
jbe
pop
popf
mov
test
repz
jo
add
fdivr
test
not
add
pusha
imul
jnp
cmps
add
dec
popa
jmp
pusha
cmp
push
cmp
dec
loope
and
and
push
sub
jmp
arpl
test
test
js
ret
push
cmps
imul
(bad)
inc
dec
add
push
stos
push
inc
loope
adc
lods
mov
fst
fiadd
ins
adc
xor
pop
adc
xor
pop
inc
cld
sbb
jge
fild
loop
cmps
sahf
jl
pop
leave
fnsave
ins
mov
test
mov
add
inc
jae
jl
pop
hlt
push
int
out
aam
cmp
cmps
ins
js
xchg
imul
cmp
inc
imul
add
dec
inc
imul
inc
adc
daa
mov
fsub
shl
daa
mov
push
pop
or
push
ret
or
std
cwde
dec
push
xor
dec
xchg
stos
xor
imul
shr
call
jae
pop
sub
cmp
sub
mov
xor
push
add
nop
sahf
ja
popf
jb
pusha
and
sahf
push
lds
dec
add
mov
in
mov
mov
ret
sbb
popa
out
cwde
cli
pop
fs
xchg
inc
pop
pop
cmp
bound
aam
push
shl
lods
xchg
leave
jge
test
repnz
cdq
dec
or
in
inc
pop
test
fisttp
leave
in
and
sub
sahf
test
dec
imul
inc
out
test
sbb
push
dec
pop
cmp
mov
cdq
es
xchg
push
fnstcw
cmc
jnp
test
fucomi
or
gs
cmp
pop
sbb
clc
push
sub
popa
or
int3
jno
sub
cld
sbb
lods
mov
aaa
mov
push
arpl
stos
mov
fcmovnbe
dec
adc
xchg
popf
adc
mov
lods
push
in
xlat
call
daa
pushf
pop
ret
lock
in
sbb
xor
cmp
adc
fsubr
xchg
hlt
inc
fild
dec
xchg
popa
outs
and
mov
sbb
cmp
sar
frstor
(bad)
or
pop
arpl
sbb
push
outs
inc
jge
ret
pop
xchg
ja
and
push
lods
adc
in
mov
sti
imul
leave
ja
and
sub
iret
or
dec
or
lds
push
mov
mov
fldcw
stc
jle
mov
frstor
dec
int3
outs
stos
mov
sysret
adc
arpl
xchg
into
and
jl
jnp
cmc
(bad)
push
jmp
mov
ins
rcl
lahf
jb
ins
sub
mov
fmul
mov
inc
test
sbb
mov
movs
fwait
adc
sti
(bad)
dec
xchg
cmc
(bad)
sub
movs
adc
mov
push
stc
pop
or
ds
xchg
push
ss
stos
popa
pop
retf
(bad)
ja
and
adc
lock
jmp
or
push
mov
cmp
pop
ins
and
push
push
jb
dec
mov
ror
fs
jp
dec
cmp
jnp
push
scas
adc
mov
(bad)
sbb
shr
adc
mov
popf
into
jno
aaa
cld
jmp
shr
and
(bad)
pop
and
push
mov
cmps
mov
in
les
sahf
sahf
mov
scas
aaa
cld
aas
retf
pop
ss
data16
jns
inc
rep
jmp
push
sahf
je
jmp
(bad)
adc
push
mov
push
dec
mov
in
push
xchg
imul
push
or
push
mov
mov
adc
xchg
sbb
cmps
push
mov
aam
adc
clc
jne
fmul
mov
pop
xchg
pop
test
mov
push
xchg
inc
pusha
sbb
retf
ss
(bad)
xlat
fwait
and
pop
jl
mov
in
adc
push
les
stos
aas
int3
push
popf
lods
out
jne
(bad)
stos
shr
arpl
mov
imul
xchg
dec
adc
pop
mov
xor
push
and
pop
mov
out
mov
or
imul
mov
leave
xchg
xchg
push
imul
imul
clc
(bad)
fmul
pop
arpl
fild
push
push
cdq
cld
adc
xor
aad
mov
fbstp
cmp
xchg
fcomp
jb
mov
fs
fwait
add
sahf
das
(bad)
(bad)
jle
xchg
mov
sbb
push
xchg
pop
pop
add
mov
cmp
pusha
jae
cmp
mov
out
jg
adc
dec
sar
add
mov
xchg
stc
push
mov
fsub
mul
fdiv
jecxz
push
xchg
and
into
aam
das
hlt
(bad)
imul
in
call
jmp
js
arpl
jmp
out
pop
mov
(bad)
cmps
add
sub
dec
cmp
fcomp
sbb
loopne
cmp
mov
sub
fwait
jns
fwait
stc
cdq
popa
int3
add
push
adc
shl
cmp
iret
jnp
fldcw
jnp
inc
adc
in
cmps
push
sub
arpl
aaa
sbb
push
shl
mov
inc
std
test
push
mov
mov
test
fld
jne
xchg
push
sub
jb
out
icebp
les
lock
push
add
xchg
xchg
adc
hlt
xor
mov
mov
or
dec
jb
ret
ins
popa
into
(bad)
hlt
sub
xor
mov
mov
fmul
(bad)
aam
push
das
mov
inc
stc
sbb
dec
jg
bound
pushf
sbb
(bad)
in
int3
inc
jns
push
fistp
dec
iret
mov
xchg
imul
ret
stos
call
mov
mov
xchg
and
sub
or
ins
ret
sbb
and
xor
adc
dec
cwde
sti
sahf
icebp
js
xchg
dec
repz
cmp
push
push
dec
cld
adc
stc
fisttp
cdq
inc
mov
push
xchg
push
ins
pop
sti
sbb
dec
jg
sub
sub
bound
shl
fbstp
lahf
cmps
push
iret
(bad)
push
stc
cmp
mov
mov
push
nop
(bad)
mov
out
imul
ja
mov
jmp
and
push
div
or
movs
xor
and
sbb
aam
cwde
push
xor
pop
dec
pusha
xchg
lea
xchg
and
popf
xor
jmp
push
outs
bound
fild
mov
icebp
(bad)
repnz
add
push
outs
pop
ror
repnz
popf
jne
pop
mov
sbb
jbe
mov
dec
loopne
dec
cli
and
add
in
xchg
xchg
pop
outs
in
in
add
pop
outs
dec
xlat
in
mov
push
ret
cwde
push
or
and
mov
retf
adc
ins
xchg
daa
fsub
push
mov
aam
out
adc
out
push
scas
sar
xchg
xor
loope
fdiv
cs
xchg
cs
jnp
shl
pop
fsubp
popa
or
outs
or
add
mov
nop
pushf
ins
aad
out
mov
pop
inc
jo
repz
jle
out
dec
jge
scas
mov
sbb
cmp
sub
test
popf
xor
cmp
pop
lea
jns
pushf
js
cmp
adc
inc
jmp
pop
loop
cdq
push
je
and
daa
out
cmp
adc
rcl
jne
and
dec
test
xchg
inc
mov
mov
cmp
mov
or
push
cs
xchg
cmp
push
jmp
mov
sub
mov
fld
push
xor
jnp
retf
cld
mov
pushf
dec
sbb
shl
imul
psllq
mov
mov
push
vmovaps
cmp
dec
mov
jmp
(bad)
or
fs
add
mov
jmp
sbb
jmp
adc
call
in
sub
mov
sub
mov
out
sbb
retf
cwde
icebp
iret
mov
out
push
and
(bad)
dec
jnp
fsubr
popf
fnsave
pushf
sbb
sbb
jle
loop
(bad)
sub
call
pop
fdivr
sub
dec
cmp
jge
or
daa
inc
movs
mov
cmps
clc
add
lahf
xchg
fcom
sbb
jle
into
mov
xor
adc
push
mov
pusha
adc
jl
lahf
sahf
push
sbb
fld
xor
dec
popf
push
test
jl
pop
mov
outs
out
stc
je
sbb
daa
movs
js
sbb
mov
fdivr
push
jmp
pop
adc
test
pushf
mov
push
(bad)
adc
enter
push
test
(bad)
stos
sub
mov
repnz
lahf
mov
jno
shl
xchg
and
cmp
push
(bad)
sub
in
cmp
fsubr
iret
mov
in
mov
loope
xchg
push
jnp
les
bound
mov
dec
cli
cwde
rcr
cld
ret
int3
ret
inc
cld
lock
push
aad
cmp
das
ins
aas
xchg
outs
movs
stos
sub
nop
sbb
fdivr
sti
js
add
fbld
test
pop
mov
xchg
aad
outs
xor
ret
fcmovnbe
jbe
imul
push
pushf
add
in
pop
cmp
xchg
or
lea
leave
sbb
or
imul
jbe
pop
sub
clc
retf
fdivr
scas
jp
retf
fcomp
jno
cmp
sbb
inc
push
cmp
ins
arpl
push
and
xchg
(bad)
fild
and
jns
xchg
(bad)
fisub
retf
jle
mov
add
mov
and
loop
xchg
inc
push
fldcw
sub
mov
mov
push
jne
mov
jl
mov
stos
or
nop
xchg
ss
dec
xchg
mov
push
push
adc
retf
jb
sbb
jmp
add
xchg
xchg
into
setns
push
push
cmp
rcr
gs
mov
add
jp
fwait
je
sub
dec
pop
xchg
aad
loop
mov
in
push
test
mov
scas
xor
lahf
cmps
lea
cmp
inc
adc
pop
loopne
xchg
inc
or
ret
mov
mov
push
addr16
mov
(bad)
pop
or
pop
fsubr
adc
xor
cs
daa
pop
xchg
mov
mov
arpl
cmc
scas
(bad)
sub
push
sub
jne
test
out
fcomp
fwait
test
xadd
mul
ret
popa
rcl
push
sub
cwde
repz
and
adc
xchg
fst
jb
xor
cmps
cmp
in
leave
mov
or
loop
outs
jns
pop
xor
movs
rcl
xor
jp
push
fs
pop
xchg
clc
ret
(bad)
pusha
pusha
add
sbb
les
test
mov
in
sub
mov
lea
xchg
add
and
(bad)
xchg
aas
mov
iret
jo
stos
jp
push
inc
dec
sbb
cdq
xor
and
sub
lds
test
(bad)
js
je
adc
pop
jg
int3
sbb
push
or
adc
popf
lods
pop
add
cmp
arpl
add
push
outs
push
in
outs
int3
ret
push
inc
add
mov
movs
xor
ins
push
mov
out
popf
inc
mov
lea
int
pop
or
mov
xchg
iret
imul
rcl
aad
jne
sbb
mov
aam
retf
mov
fld
adc
fst
bound
adc
popa
sub
movs
mov
ss
call
outs
dec
scas
mov
add
aam
jne
data16
std
sub
or
inc
mov
cmp
sbb
pop
push
push
adc
sbb
nop
cmp
movs
lss
pop
sbb
imul
stc
stos
mov
ret
push
xchg
mov
lods
pop
sub
mov
push
sbb
sti
int3
fwait
adc
dec
lds
ds
enter
sahf
sbb
aas
ds
jne
aam
scas
dec
mov
push
dec
xchg
jle
inc
cmps
cmp
sbb
inc
push
mov
or
cmps
or
out
sbb
sub
neg
out
jmp
add
mov
call
pop
jmp
jge
adc
jbe
in
nop
mov
fmul
pop
mov
push
js
xchg
test
fnsave
(bad)
mov
mov
stc
xor
out
dec
addr16
jle
mov
lds
sub
xor
cwde
gs
mov
xchg
jo
pop
shl
jg
pop
in
and
clc
jo
test
jle
mov
push
sub
das
(bad)
(bad)
ror
pop
sti
xchg
pop
fnsave
xor
mov
push
cld
(bad)
mov
push
xchg
cli
xor
inc
(bad)
fisttp
enter
xor
(bad)
xor
pusha
fstp
jae
fld
aam
(bad)
push
pop
xchg
sub
adc
and
xchg
add
out
inc
and
fwait
mov
gs
ficomp
mov
fild
and
xor
js
fidivr
inc
dec
mov
std
xor
aam
jnp
jle
push
push
sub
icebp
xchg
scas
or
(bad)
in
mov
xor
es
fst
cmc
cs
jp
in
sub
jg
fwait
and
(bad)
sub
daa
in
pushf
repz
cmp
aaa
fmul
and
fist
add
in
dec
xchg
mov
jle
fwait
jnp
sbb
cmps
fsub
and
test
call
cmp
shl
jp
popf
jmp
push
add
rcr
adc
or
movs
cmp
pop
inc
inc
enter
es
mov
std
data16
(bad)
xchg
test
lahf
int
and
mov
mov
jae
sub
sub
mov
pop
fld
push
mov
scas
and
call
hlt
push
xor
xor
sahf
movs
inc
addr16
xchg
sbb
sub
movs
lods
stc
or
sub
retf
mov
das
sub
jge
xor
(bad)
adc
rol
fs
adc
jnp
mov
je
inc
lds
and
push
xchg
inc
in
data16
loopne
paddusw
aad
and
xchg
repnz
dec
cmps
nop
ins
outs
scas
ds
iret
add
xor
xchg
xchg
inc
ins
(bad)
repnz
(bad)
js
push
fs
xor
outs
jecxz
std
pavgw
shl
outs
hlt
imul
lock
pop
jno
test
adc
xor
pusha
pop
pusha
cmp
inc
push
shl
mov
push
xchg
stos
repz
ins
inc
retf
enter
push
sbb
rcr
push
mov
aam
xchg
(bad)
stos
sbb
push
out
bound
(bad)
and
iret
pop
stc
ret
arpl
es
pop
out
call
fstp
rcl
and
and
jg
es
mov
ins
rcr
inc
mov
fadd
pop
shr
pushf
lock
mov
jmp
pop
int3
call
mov
dec
aam
jp
test
xor
cmp
pop
in
mov
pop
cmp
or
fdiv
xchg
sbb
bound
pop
shl
movs
jecxz
mov
pop
std
mov
syscall
add
sbb
pop
pop
arpl
mov
scas
push
xor
rcl
cmp
add
and
retf
and
mov
(bad)
ror
mov
imul
rol
or
ins
(bad)
add
ins
xor
test
sbb
idiv
lea
outs
sbb
push
and
dec
loop
inc
arpl
sub
imul
xor
enter
adc
je
dec
lds
int
pushf
sub
pop
sti
pop
pop
dec
into
ror
popa
mov
pmullw
fmul
sub
or
sbb
jecxz
jbe
ret
inc
scas
add
push
pop
mov
cmp
xchg
outs
aas
repz
mov
push
test
sub
es
test
daa
pop
pop
cmp
stc
add
mov
sar
out
xchg
arpl
(bad)
(bad)
pop
sbb
into
out
inc
enter
inc
stos
sub
inc
add
pop
xor
pop
pushf
mov
cdq
dec
retf
lea
lahf
(bad)
add
cmps
jae
iret
pop
test
fst
cmp
jle
rcl
sbb
int3
or
nop
adc
(bad)
pop
sar
xchg
lds
pop
mov
stc
ret
cmp
lds
clc
mov
js
cdq
mov
call
push
popa
dec
adc
or
fndisi(8087
(bad)
clc
(bad)
jge
cdq
lds
xor
cwde
dec
cmps
add
sub
cmp
loop
shl
out
mov
mov
or
inc
retf
xor
sar
xchg
jmp
lods
shr
push
xchg
lds
adc
pop
ror
adc
and
xchg
in
retf
arpl
stos
xchg
pop
jnp
icebp
dec
mov
pop
(bad)
loopne
imul
jae
xor
jl
loop
sub
popf
icebp
(bad)
aam
inc
std
aam
push
fpatan
and
sbb
add
call
(bad)
sub
cwde
and
cwde
xchg
jne
xor
jnp
xchg
mov
popf
and
loop
add
lods
add
xor
fidiv
pop
fcomi
mov
gs
in
ret
cmc
iret
aam
pop
enter
lahf
mov
xor
dec
mov
rcl
add
dec
cmc
rcr
jb
aaa
add
adc
rol
jnp
aad
push
dec
mov
cmp
pop
add
mov
retf
fld
mov
ins
xor
and
sub
push
mov
pop
addr16
(bad)
js
xchg
stos
jo
cmp
cld
retf
adc
push
or
mov
ret
adc
sub
sbb
xor
xor
std
adc
sub
mov
cld
xchg
mov
push
pop
(bad)
repnz
xchg
scas
or
cmp
jle
sbb
js
adc
jmp
mov
mov
pushf
inc
and
test
xor
jge
stos
sub
popf
sahf
or
in
mov
outs
cwde
xchg
mov
mov
jmp
sub
sahf
sbb
leave
sbb
cmc
push
jl
mov
push
mov
fisub
ins
inc
daa
cmps
pop
inc
(bad)
clc
and
xchg
xor
test
jae
fwait
in
or
sbb
cmp
aam
lea
and
lea
mov
sbb
push
sub
mov
leave
retf
sti
and
in
jb
sbb
push
in
mov
pushf
push
push
into
lods
xchg
lods
push
cs
ret
ror
gs
cmp
dec
sub
shl
rcl
fst
add
shr
pop
pop
push
repnz
stos
mov
sub
fistp
cmp
aad
add
cmp
add
in
icebp
leave
jle
js
ja
xchg
retf
and
(bad)
test
pop
in
xchg
lea
retf
sbb
push
lea
out
std
sar
aas
xchg
pusha
xor
mov
push
(bad)
test
pop
jbe
jp
cmc
push
dec
add
in
adc
and
sub
ja
neg
jecxz
and
in
movs
ins
sub
dec
lods
sub
outs
add
iret
mov
dec
test
push
inc
or
push
(bad)
cmp
push
stos
jnp
test
pop
mov
sub
push
pushf
ins
adc
fstp
lods
mov
xor
pop
adc
imul
sahf
(bad)
iret
and
mov
test
lds
sbb
jmp
xchg
bound
add
outs
rol
lahf
sbb
cmp
xchg
add
repnz
dec
sub
arpl
push
ds
mov
pusha
fdiv
xchg
jb
pushf
ret
and
(bad)
out
mov
clc
jle
jmp
lods
js
or
in
adc
pusha
int3
mov
mov
dec
add
das
cs
imul
adc
pop
ins
jne
stos
pushf
pushf
add
(bad)
pusha
push
sti
mov
rcr
sub
or
pop
loop
test
cmp
pusha
outs
jae
lods
or
(bad)
dec
hlt
inc
sti
fidiv
xchg
ja
push
sti
ret
push
repnz
mov
adc
pop
mov
dec
inc
in
push
xchg
pop
repz
fadd
or
daa
stos
arpl
pop
(bad)
xor
pop
jp
push
adc
mov
mov
jns
test
mov
mov
push
sub
cmp
and
call
and
std
adc
adc
ror
cmp
dec
mov
dec
movs
dec
aaa
xlat
jmp
retf
cmp
mov
pop
stos
outs
data16
ins
loopne
adc
mov
into
shl
fwait
cwde
push
lock
xchg
dec
pxor
jnp
dec
repnz
cli
mov
pop
sbb
mov
icebp
daa
and
mov
sub
ficomp
pop
push
push
test
ficom
(bad)
pop
ffree
mov
sub
xlat
add
js
pop
fiadd
mov
(bad)
xchg
ins
sbb
fsubr
sbb
mov
sbb
ret
arpl
add
(bad)
loopne
sub
sbb
mov
sub
bound
in
mov
dec
inc
lods
sbb
jbe
imul
ror
fwait
mov
(bad)
dec
jb
das
fwait
scas
sbb
mov
jcxz
xchg
movs
sbb
push
hlt
and
ret
jecxz
push
mov
mov
push
loop
retf
out
sbb
pushf
(bad)
popf
repz
(bad)
cdq
popf
lahf
into
add
sub
imul
xlat
enter
outs
jne
shr
push
stc
cdq
outs
cwde
iret
pop
mov
shr
sti
pushf
loopne
xchg
sub
lods
adc
into
call
sub
fistp
lods
jns
ja
sub
push
ins
fld
cmps
adc
xchg
add
pop
xchg
pop
xor
pushf
cmps
mov
mov
mov
xchg
push
dec
stc
cwde
xchg
push
mov
ja
int3
cmp
adc
pop
mov
pushf
out
test
mov
je
cs
cmp
lahf
push
sbb
(bad)
nop
xchg
push
iret
and
arpl
retf
pop
adc
in
pop
icebp
xchg
mov
and
adc
fmul
dec
inc
(bad)
fmul
ret
(bad)
adc
out
sbb
push
retf
push
int3
sbb
cmp
bound
lea
xor
cs
cmp
and
adc
jo
test
aas
popf
outs
add
leave
outs
and
test
(bad)
push
jp
stos
repnz
adc
lds
lahf
sub
pop
push
push
mov
or
pop
loop
mov
mov
pop
jmp
and
sbb
outs
aas
pop
cmp
pop
ror
cld
xchg
adc
or
pop
inc
fisttp
cli
cwde
in
xchg
lea
sbb
in
imul
sbb
sbb
adc
in
xor
sbb
push
fbld
xchg
pop
add
mov
xchg
gs
xlat
leave
gs
adc
mov
jle
cli
dec
pop
inc
(bad)
test
jmp
lock
mov
mov
xchg
(bad)
inc
out
lea
arpl
sub
cmp
inc
icebp
es
pushf
enter
cmp
adc
add
mov
sbb
mov
cli
je
adc
repz
mov
retf
iret
dec
cld
cmp
shl
(bad)
sbb
push
sbb
dec
out
(bad)
fiadd
sbb
leave
(bad)
scas
adc
lahf
jl
sbb
and
(bad)
push
xlat
mov
arpl
push
cwde
jb
dec
or
cmp
pop
adc
sbb
shr
sahf
sub
push
mov
movs
push
cmp
(bad)
out
and
adc
iret
cmp
(bad)
mov
sub
aad
int3
outs
outs
pop
add
sbb
clc
scas
dec
inc
bound
xchg
sbb
cmp
repz
clc
adc
(bad)
outs
loop
pop
cmp
push
outs
or
cdq
aas
cwde
outs
out
or
dec
add
sbb
jne
int3
int
and
push
jne
inc
fs
push
pop
pop
lods
pop
xchg
adc
adc
shl
arpl
hlt
xchg
into
pusha
ret
xor
inc
and
xor
retf
mov
xor
(bad)
fcmovnbe
xlat
pop
pop
sbb
test
daa
test
push
fcom
iret
ret
push
push
adc
popa
(bad)
push
pop
push
std
outs
mov
xor
in
fwait
mov
pop
out
rcr
out
aas
adc
jnp
pushf
loop
stos
pop
mov
push
adc
xchg
inc
xchg
rcl
lods
sub
jecxz
cmc
cwde
test
rol
xor
mov
mov
push
xor
fstp
push
sbb
enter
add
jmp
adc
pop
adc
mov
fstp
mov
(bad)
fnstsw
fs
cli
js
or
popa
inc
ins
sahf
adc
fistp
cs
cmovbe
sbb
push
add
pop
xchg
adc
call
icebp
sar
mov
xchg
movs
es
std
cdq
in
push
jmp
add
push
scas
or
(bad)
adc
test
mov
push
dec
sub
sbb
imul
fs
cmp
xchg
pop
sbb
xlat
or
and
lods
push
mov
scas
aam
adc
lock
test
push
and
dec
cdq
(bad)
mov
add
or
inc
sbb
sub
add
fdivr
je
pop
cdq
stos
cmc
ds
jmp
mov
mov
pop
loope
xor
fadd
mul
fmul
test
int3
(bad)
sub
outs
ins
mov
jbe
dec
retf
sahf
aam
arpl
sbb
rcl
cld
xchg
out
shl
dec
test
mov
stos
mov
(bad)
sbb
mov
divps
cmp
adc
and
jns
mov
sbb
jb
xchg
or
mov
(bad)
or
mov
mov
jne
add
pop
push
out
jecxz
cmp
mov
retf
cdq
jb
cmc
retf
xchg
pop
fmul
mov
and
lock
xchg
inc
mov
sub
sbb
das
enter
lahf
jne
ja
push
sbb
adc
jp
jbe
adc
fisub
repz
fistp
cmp
xor
and
mov
xchg
hlt
test
add
xchg
pop
sahf
pop
pop
ret
xchg
fwait
gs
enter
cmp
(bad)
xor
pop
ret
or
lock
ror
aad
xchg
xor
jno
lahf
fisubr
mov
ins
shl
sti
mov
and
jge
dec
xor
test
jmp
test
dec
mov
mov
cmp
jnp
mov
cmp
push
outs
out
dec
loop
inc
les
outs
xlat
sbb
inc
outs
out
cmp
mov
das
dec
add
arpl
cdq
retf
push
out
lsl
push
pop
pop
sub
xor
std
sub
pop
ss
das
fst
jl
pop
push
cmp
ins
jmp
add
arpl
int
test
add
les
repnz
bound
repz
add
pushf
sub
jae
fisubr
in
int3
jp
inc
sbb
out
neg
add
inc
mov
mov
and
jmp
sub
mov
test
repz
shr
aam
mov
rcr
inc
out
ins
(bad)
imul
cmp
mov
clc
push
movs
adc
out
out
(bad)
out
je
test
iret
shl
mov
mov
std
and
out
jp
popa
mov
jp
jnp
inc
pushf
repz
mov
pop
and
aad
ins
fninit
stos
ins
jecxz
xchg
ins
jmp
mov
jecxz
ins
retf
sub
mov
mov
dec
add
sti
push
jmp
xchg
cmp
jmp
push
jno
nop
lock
sbb
jp
loop
pop
popf
(bad)
or
add
mov
arpl
fsubr
mov
mov
sbb
add
hlt
xor
push
pushf
and
aaa
scas
ss
in
mov
ds
pop
pop
push
repz
inc
stc
jg
int3
mov
adc
mov
cli
in
jmp
pop
mov
jne
mov
nop
or
jb
adc
sub
cld
sub
adc
ins
pop
add
inc
jp
inc
jge
cmps
daa
mov
xchg
enter
lahf
xor
mov
xor
adc
les
leave
xchg
aam
fsubr
js
mov
aad
mov
pop
pop
data16
dec
lea
mov
call
pop
mov
test
mov
clc
sub
add
dec
or
jge
pandn
sbb
pop
iret
dec
in
sub
movs
icebp
fcom
inc
popa
add
xlat
lahf
add
hlt
and
fistp
lahf
ja
cmps
scas
cld
adc
push
and
dec
ds
cmp
jb
push
cmc
push
mov
test
repz
push
rcl
xchg
adc
cwde
in
or
xor
cmps
or
sbb
mov
push
arpl
gs
out
mov
mov
outs
daa
inc
int
jg
mov
(bad)
imul
jmp
aad
stc
push
jg
call
mov
mov
aas
mov
dec
sub
xchg
mov
fnsave
cmp
ins
ins
cmps
mov
fst
aam
loopne
cmc
rcr
xor
out
pusha
into
rcr
push
sub
imul
dec
dec
push
js
inc
push
pop
mov
aas
push
or
imul
adc
popf
imul
fs
ins
int3
jbe
cmp
mov
rcr
pop
xchg
sbb
mov
fwait
and
mov
stos
sbb
cld
mov
and
cmp
retf
adc
dec
out
aaa
scas
pusha
int3
sahf
(bad)
mov
xchg
fidiv
call
mov
pop
mov
mov
pop
push
adc
aad
aas
push
cld
jge
add
jnp
sub
and
js
scas
outs
adc
enter
push
push
jmp
out
xor
(bad)
aam
xor
dec
jge
enter
mov
mov
mov
test
test
inc
stos
inc
jo
mov
pop
sbb
cs
dec
xchg
and
adc
ss
push
ins
pop
test
mov
dec
aad
push
push
outs
push
stos
pushf
int
or
mov
leave
sbb
cmp
or
movs
js
hlt
fwait
jae
and
mov
mov
mov
mov
add
sbb
push
lods
mov
rcr
fcom
stc
push
or
fisttp
jae
or
(bad)
xor
mov
jmp
pop
into
call
mov
lock
mov
fbld
scas
fcmovnb
sbb
xchg
push
pusha
test
inc
fs
(bad)
(bad)
pop
xchg
rcl
retf
clc
push
ins
sti
dec
into
sbb
mov
imul
cmp
xchg
and
cmp
and
mov
loope
jp
mov
vdivss
cmp
sub
xor
mov
in
ds
pop
cmp
outs
dec
stc
cmp
das
sub
jnp
pop
mov
aam
imul
out
xor
sbb
pop
in
shl
push
loopne
cmp
test
jo
mov
int3
cmp
xlat
popf
jle
xchg
int
cld
or
aas
scas
xchg
popf
xchg
xchg
adc
xchg
fiadd
jne
jmp
lock
cmp
sbb
ret
sbb
ja
fnstcw
xchg
call
fistp
adc
lods
test
(bad)
lods
ror
inc
sbb
rcr
and
mov
imul
sbb
mov
pop
jmp
fist
ins
jae
inc
pop
retf
push
cmps
(bad)
pushf
xchg
jb
fsub
into
movs
xchg
popf
xor
mov
push
xor
xchg
nop
aam
adc
inc
pop
aas
(bad)
sub
mov
push
mov
or
imul
pop
(bad)
cmp
xlat
out
and
test
xor
jno
pusha
lds
sbb
clc
out
xor
imul
add
xchg
and
and
enter
repnz
lds
add
leave
enter
stos
retf
dec
xchg
mov
out
stc
mov
pop
ret
mov
call
cmp
cmp
pop
push
mov
retf
test
cmp
jbe
cli
mov
in
adc
fiadd
lock
fist
sti
out
daa
and
fcomp
lahf
dec
dec
cmc
cmps
fs
adc
les
push
pop
sub
fnsave
je
fs
lahf
xchg
and
shl
cmp
push
retf
hlt
retf
xchg
(bad)
dec
xchg
imul
sbb
shl
adc
ds
data16
fsubr
sbb
in
mov
mov
out
repz
dec
sbb
xchg
arpl
xchg
or
ret
cld
aad
push
int
sar
xchg
fsub
and
mov
loopne
fwait
or
fidiv
xchg
fild
rcr
lods
sbb
(bad)
sbb
adc
cmp
in
jnp
data16
fist
push
mov
xchg
pop
daa
mov
cmp
xchg
xor
ficomp
(bad)
(bad)
dec
lods
lea
int
icebp
shr
dec
mov
in
out
inc
and
cmp
ret
retf
sbb
xlat
add
outs
and
scas
test
cmps
icebp
scas
jl
inc
pop
push
call
stos
(bad)
adc
adc
dec
out
jmp
sub
call
dec
aad
bound
test
rcr
(bad)
ret
sbb
pop
sub
jl
add
test
arpl
movs
mov
mov
xor
fwait
push
jnp
jmp
loop
addr16
pop
mov
and
sahf
inc
sbb
call
stos
cwde
push
sbb
in
dec
pushf
jb
sub
or
push
es
aad
jae
(bad)
out
sti
(bad)
fnclex
rcl
adc
repnz
cmp
(bad)
gs
or
cmc
scas
push
xor
jno
movs
and
fisttp
fwait
gs
push
mov
stos
and
add
fs
sbb
lahf
xchg
mov
retf
xor
mov
xchg
mov
icebp
sbb
or
xor
cmps
mov
adc
push
mov
add
bound
push
adc
iret
int
(bad)
xor
mov
les
invlpg
mov
in
sets
push
inc
xlat
or
lods
mov
xor
xor
push
add
dec
lods
xor
idiv
stc
test
adc
jo
mov
test
je
pop
jmp
add
sbb
mul
sub
inc
fsubr
leave
pop
mov
pushf
pop
adc
xor
cld
cmc
pop
xor
or
mov
and
xlat
call
add
push
ds
lods
inc
jp
jmp
xor
push
mov
(bad)
fidiv
test
mov
mov
(bad)
mov
mov
adc
ret
add
cmp
nop
mov
in
cmp
aas
xchg
adc
jl
pop
xchg
mov
repz
adc
push
push
clc
or
fcomp
jne
shld
sub
mov
jmp
sbb
jo
mov
(bad)
fucomp
aad
mov
rol
add
push
mov
sbb
dec
sbb
mov
pop
inc
pop
enter
test
pusha
lahf
mov
dec
rcl
into
mov
and
lods
jbe
adc
int
mov
outs
mov
retf
fsubr
outs
je
push
inc
mov
add
ins
in
dec
iret
xchg
cmps
push
mov
lods
fcom
and
mov
jo
dec
mov
jbe
call
and
and
test
mov
pop
push
add
mov
mov
movs
js
push
or
xchg
lds
pop
out
js
jge
mov
data16
xchg
(bad)
mov
loopne
dec
sbb
mov
int
and
mov
mov
sub
push
push
test
ficom
add
push
shl
test
xchg
or
inc
sbb
dec
push
(bad)
clc
or
xor
mov
mov
and
push
in
push
ret
and
adc
sub
cs
popf
fadd
imul
repz
je
xor
icebp
cmp
movs
mov
(bad)
nop
pop
lea
ja
in
pop
fucomi
rcl
test
sti
or
jl
mov
xchg
cmc
inc
xor
outs
cmp
fidiv
adc
es
fcmovbe
popf
scas
cld
mov
xchg
jle
add
and
or
inc
sbb
fist
retf
pusha
push
xor
int
xchg
mov
xchg
test
ffree
jbe
mov
xchg
leave
ret
or
test
mov
xchg
enter
sub
cld
xchg
adc
mov
les
scas
lock
data16
push
mov
jmp
jp
aad
out
(bad)
dec
mov
enter
cmp
cmp
xor
push
sub
and
fidivr
cmps
sub
fcom
cmps
shl
cmp
cli
hlt
or
mov
daa
cwde
sub
sbb
aas
push
setnp
dec
aas
leave
out
inc
xor
ret
pop
mov
sbb
adc
out
lods
ret
pop
cs
stc
mov
add
pop
push
shl
adc
push
push
xchg
jo
mov
arpl
test
daa
or
pop
adc
(bad)
cmc
jmp
xchg
enter
ins
out
cmp
xor
add
(bad)
cmp
mov
inc
test
neg
and
mov
inc
mov
(bad)
mov
add
movs
pushf
jge
dec
cs
inc
cwde
add
cmp
sub
lods
pop
push
add
sar
jo
out
loopne
jp
loopne
sbb
loopne
or
fcmovnbe
pushf
push
popf
fistp
add
inc
les
adc
sti
dec
jecxz
push
out
cdq
sub
mov
test
pop
js
xor
adc
add
pushf
cmp
loope
rol
jne
dec
xchg
xor
imul
fisttp
pushf
into
pop
dec
sti
adc
jae
or
push
xchg
lods
fstp
mov
mov
xchg
ror
fcomp
push
mov
int
dec
xor
out
dec
jae
xchg
int
arpl
push
fldl2t
pop
mov
loope
(bad)
test
test
jecxz
loope
movs
xchg
push
or
adc
dec
retf
lds
sar
push
mov
int3
jge
jns
test
sub
(bad)
xlat
ror
cs
test
out
sbb
xchg
jne
lea
rcl
repnz
out
adc
imul
cmps
sbb
push
shr
fwait
popf
adc
push
fstp
(bad)
jae
rcr
sbb
sti
xor
adc
fsubr
retf
pushf
xchg
fst
xchg
xchg
pop
mov
fsubr
outs
mov
fwait
push
frstor
dec
pop
icebp
cdq
pop
sar
pop
nop
xlat
sbb
mov
repnz
fdivr
aad
add
cld
adc
push
sub
jecxz
popa
jae
adc
xlat
lea
sahf
out
mov
out
movs
pop
sub
fst
xchg
ins
icebp
ror
scas
int3
ficom
push
dec
ss
and
push
and
cdq
xor
sub
enter
and
or
pop
sub
jg
dec
movs
ficomp
lds
rcl
and
dec
sbb
mov
stos
sahf
mov
xchg
xchg
fwait
cmps
shr
sub
or
push
dec
pop
(bad)
xchg
adc
dec
jo
sub
lea
add
mov
sbb
cmps
mov
pop
mov
out
popa
fcomp
jecxz
inc
bound
loope
and
push
pop
mov
dec
retf
mov
mov
cmp
mov
ja
lods
test
fcomi
add
neg
sbb
xchg
xchg
cmp
sti
adc
dec
jmp
cmp
stos
bound
call
in
cmp
mov
and
inc
push
enter
pushf
xor
inc
sub
adc
aaa
in
pop
dec
sbb
and
or
mov
add
adc
add
neg
not
fnstenv
repz
push
lds
dec
jle
dec
sbb
cmps
loopne
dec
sahf
jns
mov
mov
(bad)
jecxz
dec
test
leave
into
mov
rcl
sbb
mov
add
mov
mov
and
adc
xchg
dec
aad
daa
add
cmp
icebp
cs
xchg
cmps
jg
cmps
pop
and
aas
or
push
call
add
jmp
test
test
cdq
(bad)
(bad)
mov
fild
jne
push
push
push
sub
jo
push
jge
arpl
mov
sahf
mov
add
jnp
mov
rcl
push
cld
jge
push
ret
test
test
rol
sub
retf
sub
adc
in
test
mov
out
mov
sbb
(bad)
je
popa
pop
in
aad
scas
push
xor
add
repz
into
push
dec
jns
into
dec
loope
aaa
xor
add
outs
pop
pop
fistp
pop
cs
xchg
cmp
pop
into
popf
dec
cmp
mov
or
adc
inc
(bad)
outs
mov
lock
xchg
shl
jb
jne
out
ins
aas
jnp
aaa
lea
sbb
inc
imul
je
out
(bad)
call
fisttp
or
ins
jl
aaa
inc
push
mov
mov
or
gs
or
sbb
movs
ja
into
sub
jb
cmc
lods
jecxz
data16
jo
stos
mov
dec
pop
dec
jp
test
pushf
pop
stos
comiss
popa
and
gs
test
xchg
call
div
lods
sub
mov
scas
sbb
inc
push
add
jae
lods
stos
or
retf
pop
sbb
adc
xor
pop
loop
or
jmp
in
outs
fst
sub
lods
outs
int3
into
into
in
sti
sbb
jns
xchg
cmp
jg
out
(bad)
test
push
ja
fstp
call
ret
xor
push
pushf
retf
pop
push
pop
pop
sbb
xchg
xchg
jo
(bad)
adc
jmp
pop
sub
stos
enter
xchg
cmp
sub
sbb
(bad)
sbb
push
inc
push
xchg
xchg
repz
mov
lock
mov
call
push
pop
cmps
push
lock
(bad)
jnp
icebp
scas
add
push
in
add
out
jne
push
adc
(bad)
push
pop
mov
cmp
jne
aad
fwait
jle
pusha
inc
push
sti
arpl
pop
sub
lahf
pop
jmp
bnd
sbb
fdiv
pop
sti
pop
outs
aam
xor
arpl
imul
test
push
pop
shr
jge
hlt
mov
inc
(bad)
mov
inc
pop
dec
nop
rcl
xor
sub
mov
(bad)
push
inc
mov
sbb
les
(bad)
jecxz
(bad)
(bad)
(bad)
pusha
bound
les
sbb
sbb
adc
cdq
rcl
or
push
int3
cli
and
xchg
(bad)
pop
or
push
sub
imul
jecxz
sti
inc
cmps
iret
pushf
mov
jmp
cmp
fisttp
add
xor
mov
call
(bad)
xchg
jbe
aam
pop
fdivp
aad
and
push
ret
pop
shl
sbb
ret
out
in
ss
hlt
cmove
sub
(bad)
out
cmps
out
dec
adc
or
mov
jl
mov
dec
mov
adc
fcom
jmp
xor
push
imul
sahf
add
jbe
pop
pusha
xor
call
inc
mov
and
lds
and
cli
fild
fdiv
ins
or
sbb
and
add
mov
sahf
or
sbb
adc
cmp
rcr
sub
sbb
rcl
fnstenv
iret
mov
retf
mov
dec
jmp
ins
das
lea
dec
fisttp
lahf
sti
or
adc
fist
push
inc
sub
out
xor
pop
cld
adc
pop
dec
fucom
cli
mov
lea
mov
fimul
fisttp
jmp
lahf
jge
addr16
js
fbld
push
hlt
jbe
xchg
push
xor
cmp
jbe
aad
ins
into
lods
test
or
pop
push
test
int3
mov
mov
sti
div
rcl
cmps
je
inc
call
mov
fmul
sbb
sub
push
push
add
ret
sub
call
dec
fwait
cmp
xchg
fs
sub
dec
arpl
sbb
pop
cmp
jae
fimul
jp
mov
pop
jge
cmp
adc
stc
shl
jmp
mov
ins
pop
push
jae
lods
push
cmp
aaa
sbb
sbb
jbe
shr
jle
jne
push
popa
call
ja
mov
in
adc
out
mov
leave
rol
pop
(bad)
xchg
push
xor
data16
mov
sub
popf
jp
jg
mov
outs
xchg
xchg
repz
sbb
mov
cmps
or
das
bound
mov
cwde
push
fcomp
div
loope
jmp
not
clc
lea
pop
jo
cmp
inc
std
xlat
call
xor
jecxz
fadd
cmp
arpl
outs
mov
pop
loop
adc
and
outs
inc
cmp
mov
iret
fsubr
mov
ror
call
test
sbb
dec
loop
xlat
neg
mov
test
call
sbb
fisttp
dec
mov
(bad)
addr16
stos
cs
and
push
loop
jmp
js
or
aaa
nop
xlat
(bad)
xchg
fwait
sbb
sub
adc
sub
loopne
dec
inc
(bad)
call
dec
(bad)
fldcw
push
adc
fisub
aam
adc
or
push
inc
sti
clc
mov
adc
ficom
cdq
inc
lea
jo
push
dec
mov
pop
out
sub
scas
pushf
call
sbb
mov
out
pusha
add
fsub
sbb
je
repnz
cli
pop
and
mov
fistp
es
add
fwait
xchg
popf
mov
rol
sbb
cmps
scas
pop
pop
fdivr
push
int3
shl
adc
call
mov
(bad)
push
loope
jmp
mov
jl
adc
xchg
icebp
mov
out
or
ret
push
cld
pop
sbb
cli
out
jne
jo
push
cmc
loop
loope
xor
out
fisttp
(bad)
jp
fisubr
inc
in
int
jns
retf
or
mov
push
jno
std
pop
jno
jns
xor
inc
mov
or
lock
inc
mov
push
pop
mov
into
neg
ret
enter
cmps
adc
jb
lea
hlt
call
(bad)
and
xchg
sbb
push
mov
mov
rcl
pop
mov
lea
pop
jmp
inc
das
xor
sbb
call
shl
out
call
bound
adc
(bad)
sbb
push
push
adc
lahf
repnz
cmp
sub
out
sub
sbb
imul
outs
call
sbb
(bad)
mov
mov
push
aad
mov
cli
cwde
int3
jae
xor
jmp
sub
and
retf
loop
sbb
shr
jmp
out
add
mov
dec
xchg
lods
test
mov
and
inc
not
out
out
std
outs
jl
pop
into
push
sbb
cmp
adc
jp
cmp
jno
sub
xchg
push
dec
adc
retf
in
or
adc
retf
mov
cld
inc
cmc
out
imul
popa
mov
rcr
iret
jo
not
inc
xchg
jmp
test
out
cmc
push
sbb
ss
or
out
int
dec
les
(bad)
lea
(bad)
dec
movs
jns
pop
addr16
fwait
sbb
dec
ret
sbb
xor
mov
push
add
xor
aas
adc
pushf
sub
ja
in
out
push
jle
and
or
and
or
xor
push
adc
jmp
adc
xchg
dec
call
ret
neg
push
xchg
ret
adc
push
jb
inc
mov
movs
lock
jp
sub
sbb
cmp
aam
and
add
mov
cmps
call
lahf
mov
dec
or
nop
fdivr
and
xchg
jbe
xchg
rcl
call
call
adc
fwait
(bad)
xchg
xor
xchg
sub
dec
ins
in
cdq
xor
and
std
jl
sbb
arpl
xor
popf
ffreep
or
lock
dec
(bad)
pop
out
test
sub
inc
fldenv
push
dec
cs
push
adc
loopne
mov
call
sub
test
cmps
sub
into
inc
daa
(bad)
pop
test
pop
inc
jae
add
fistp
call
add
xchg
cmc
aad
mov
fild
(bad)
fnstenv
in
(bad)
movlps
xchg
jge
popa
inc
add
adc
out
push
sbb
or
mov
cmps
jae
lods
and
cs
and
xor
aad
pop
retf
adc
add
fidiv
into
(bad)
pop
sbb
xchg
mov
and
push
aad
fdivp
mov
adc
dec
dec
jmp
mov
sbb
call
sbb
sub
ficomp
add
pop
les
dec
xchg
xlat
mov
jg
mov
xor
inc
das
mov
js
xor
sbb
jnp
ret
xchg
pop
(bad)
push
cmps
imul
sbb
mov
sbb
pop
add
test
pop
cmps
lahf
nop
mov
aam
arpl
and
adc
adc
in
pop
sub
pop
adc
xchg
xchg
jmp
test
jle
mov
mov
push
cmc
mov
xchg
push
pop
pop
loopne
nop
inc
pop
je
imul
xchg
xchg
pop
xchg
inc
jmp
das
mov
push
fld
fist
cmp
lea
sti
xor
mov
cmp
inc
popa
push
sti
jge
scas
loop
fsub
outs
xor
ss
dec
cld
aad
xor
ret
lods
pop
loop
ins
push
fwait
lods
pop
xchg
push
xchg
dec
(bad)
cld
add
sub
daa
es
mov
gs
push
nop
push
frstor
(bad)
pop
xor
dec
jne
and
dec
inc
xor
inc
mov
adc
fidiv
cmp
xchg
xchg
aas
inc
mov
iret
xchg
js
setl
cld
and
sbb
lods
sub
or
inc
inc
mov
adc
sub
mov
stc
mov
adc
(bad)
scas
and
(bad)
mov
call
stos
push
dec
and
aad
adc
rcl
(bad)
add
inc
daa
movs
stc
cmp
enter
mov
adc
jp
ret
loop
rcr
fsub
bound
cmp
adc
sub
gs
cmp
mov
mov
out
sbb
cmp
mov
sub
fwait
mov
cmc
movs
mov
hlt
cdq
div
scas
sahf
dec
repz
push
or
and
pop
pop
or
repnz
out
jmp
lea
jnp
cmp
xchg
or
add
push
lock
jo
jae
scas
sub
jmp
test
in
fs
inc
aaa
mov
lock
repz
or
leave
dec
xchg
sti
mov
aam
jbe
and
mov
out
(bad)
fisttp
bound
jne
jae
pop
shl
mov
aam
xchg
push
in
xchg
push
sbb
out
push
sbb
pop
xlat
xor
enter
scas
lock
cmp
fistp
retf
add
pop
scas
jle
sbb
push
push
aas
movs
cmp
sbb
mov
(bad)
fdiv
add
clc
pop
dec
xor
mov
scas
cld
push
add
dec
inc
test
adc
imul
ss
jge
mov
and
adc
adc
aam
add
pop
fs
movs
sbb
imul
aas
test
mov
call
test
jmp
pop
std
push
popa
rol
jb
dec
stos
jmp
jne
dec
(bad)
or
fst
cmp
sub
jl
imul
push
out
fadd
ins
push
cmp
pop
ficomp
dec
pop
add
es
pop
push
sub
pop
js
nop
cmp
int
push
test
fstp
mov
cdq
aas
int3
mov
pusha
xchg
push
scas
xchg
std
adc
sar
(bad)
call
adc
ins
pop
test
retf
(bad)
leave
int3
sub
rcl
test
enter
cmp
ss
lahf
and
test
sbb
mov
icebp
retf
adc
sbb
pop
or
ins
fisttp
or
cmp
ins
data16
scas
jl
es
test
test
adc
push
and
xchg
mov
movs
fisubr
jp
(bad)
je
adc
int
sti
or
fwait
popf
pop
push
retf
adc
jns
repz
fcom
pop
xchg
repnz
jne
add
aas
jnp
popf
and
movs
sub
pop
adc
push
mov
mov
adc
cmp
lods
loopne
les
sahf
sub
imul
push
push
retf
mov
pop
lahf
add
jnp
in
sub
jbe
aas
xchg
adc
ins
lds
dec
pop
pop
fidiv
sbb
nop
mov
pop
pop
stos
aad
jge
iret
add
lods
ss
cdq
test
repnz
inc
xor
test
lods
cmp
push
sbb
enter
push
sbb
pop
mov
xlat
xchg
repz
lock
arpl
(bad)
cmp
xor
mov
test
mov
adc
add
setg
jb
aam
adc
adc
into
jns
in
adc
icebp
jg
jne
mov
pop
cs
push
sub
arpl
sar
cmps
clc
ds
push
adc
stos
dec
jno
fnstenv
in
and
inc
fbstp
enter
and
arpl
mov
rol
retf
pop
jae
cmp
outs
jle
(bad)
mov
jge
sti
xchg
into
lea
adc
pop
ins
cmp
mov
sbb
ds
sar
pop
pop
or
pop
sbb
jne
cmp
push
dec
aas
cmps
sub
test
out
push
sub
mov
jp
jbe
or
loop
xchg
push
enter
and
fdiv
push
aaa
lahf
out
xor
(bad)
pop
mov
sub
sub
repz
shl
cwde
shl
sbb
push
push
push
jne
sub
and
cwde
xchg
xchg
adc
push
addr16
mov
leave
fild
sub
push
(bad)
icebp
inc
lods
pop
sti
push
pop
and
adc
and
js
hlt
aas
push
into
lahf
sub
adc
add
loop
sbb
mov
pop
mov
dec
pusha
sub
jg
jo
shl
xchg
lods
iret
lahf
mov
sub
and
xlat
ins
or
add
bnd
outs
ja
cmp
ret
fnstsw
out
sub
sar
sub
ins
xchg
(bad)
inc
pop
cmp
mov
jb
adc
push
test
push
sub
sti
mov
and
hlt
jle
and
push
push
dec
fimul
jnp
leave
xchg
mov
out
mov
or
cmp
fcomp
jl
in
jl
sub
out
nop
test
mov
add
shl
mov
fsqrt
jecxz
sub
or
dec
ret
addr16
mov
out
adc
out
shr
push
pop
ja
pushf
ins
bound
rcr
in
bswap
add
cmp
add
push
pushf
mov
mov
jo
adc
in
jo
sub
fimul
rcr
mov
push
push
adc
sahf
retf
pop
mov
jno
fist
test
pop
in
push
pop
push
add
js
fwait
mov
popa
xor
jle
jl
out
rep
jl
dec
in
jo
nop
(bad)
cmc
jle
inc
jmp
pop
stos
adc
loope
pop
add
sbb
call
lahf
xchg
leave
int
std
popa
scas
movs
jnp
or
or
jns
inc
sub
fnstsw
inc
mov
shr
cmp
xchg
enter
mov
call
lods
mov
pop
cdq
std
retf
inc
ins
repz
test
mov
(bad)
jl
push
sub
aaa
int
sub
gs
test
es
out
cmps
add
enter
adc
xor
retf
in
pop
xchg
fdiv
mov
xor
ins
arpl
cwde
pop
pushf
test
adc
xor
in
cld
or
jl
sar
push
cmova
inc
loope
jl
in
or
lock
sub
and
and
addr16
scas
addr16
cdq
add
mov
fiadd
cdq
sub
mov
pop
div
mov
and
jl
mov
add
(bad)
pushf
sub
movs
aaa
inc
pop
xlat
mov
cmp
xor
inc
(bad)
in
test
icebp
repz
outs
adc
in
pop
popf
pop
into
js
in
cdq
out
(bad)
rol
clc
and
jge
xchg
push
add
jbe
popa
inc
xchg
movs
sar
dec
cmp
jp
mov
(bad)
jmp
adc
mov
ret
mov
cmp
data16
sub
into
pop
xor
sbb
out
les
stos
add
loop
mov
inc
jae
and
and
jmp
lahf
sti
gs
lods
data16
movs
xchg
imul
inc
popa
repz
imul
push
aas
mov
ja
aam
xchg
cli
jge
outs
cs
cmp
sbb
sbb
push
mov
fistp
sar
push
pop
mov
popf
leave
je
clc
push
lods
out
push
arpl
jge
add
icebp
ins
es
sbb
scas
sbb
dec
movs
or
cdq
jmp
sbb
ret
in
movs
mov
pop
jno
iret
dec
lds
fist
sbb
pop
in
push
imul
sbb
sar
test
sub
outs
enter
mov
xor
add
jmp
rcr
in
js
mov
ins
leave
pop
loope
fild
aad
xchg
ret
xor
sub
stc
adc
push
xchg
ja
jne
pop
mov
(bad)
add
adc
sbb
pop
xchg
jg
adc
out
inc
adc
mov
loopne
hlt
test
in
pop
cmp
xchg
mov
jmp
sub
push
adc
pop
sub
or
cld
call
es
outs
(bad)
mov
push
ret
(bad)
clc
clc
aaa
jge
push
adc
call
jmp
stos
mov
lds
js
push
mov
inc
lods
stos
pusha
sti
lahf
fwait
push
jo
std
mov
or
mov
xor
push
dec
ins
pop
dec
fsqrt
pop
test
lea
cmp
jecxz
push
shr
mov
dec
xchg
xor
or
fs
mov
movs
cwde
aas
loopne
xor
aad
popf
ins
sbb
push
popa
xchg
sub
jecxz
push
into
fldcw
push
sub
sar
call
adc
add
pushf
pop
rcr
outs
clc
test
or
mov
out
fcom
repnz
and
stc
inc
mov
jecxz
push
jecxz
push
lock
mov
pop
push
sbb
push
jmp
cmp
cmps
movs
xlat
or
jp
hlt
or
adc
mov
add
cmps
push
int3
es
mov
push
out
push
outs
inc
or
pusha
xchg
adc
cld
jmp
rcl
ret
fidiv
retf
imul
dec
push
xchg
lods
dec
out
movs
mov
and
jmp
cwde
push
sub
lods
fcomp
fld
adc
sbb
cs
inc
cmp
mov
inc
movs
mov
jae
pop
mov
les
mov
jbe
loop
popa
jb
sahf
dec
sbb
loopne
dec
sbb
push
cmc
dec
fld
fadd
xchg
scas
and
sbb
xor
pusha
mov
call
pusha
xchg
inc
out
aaa
neg
xchg
jecxz
jge
dec
pusha
xchg
and
fistp
das
ror
pop
ror
nop
pop
rdmsr
cmps
out
cmps
push
or
loopne
rcl
or
push
gs
add
ins
(bad)
repz
nop
mov
mov
adc
cwde
xchg
push
call
ficom
mov
cdq
xchg
(bad)
pop
inc
cwde
and
repz
push
jmp
push
sub
sbb
outs
pop
push
cld
cmps
outs
mov
fidiv
adc
push
cs
push
mov
fisttp
xor
ret
xchg
or
test
test
and
loopne
js
and
cli
psubw
lods
jo
cdq
es
in
pop
dec
(bad)
movs
call
jb
dec
jo
pop
fsubr
sbb
(bad)
xchg
ret
xlat
and
or
cmp
retf
pop
dec
jmp
test
xlat
push
pop
jnp
js
cmps
mov
pop
mov
adc
lock
jmp
push
fcomp
shr
daa
imul
fdivr
push
in
xlat
dec
loopne
cmp
cld
mov
pop
ficomp
pop
fisubr
pushf
xchg
call
jno
jge
ror
stos
or
inc
dec
call
jecxz
xor
shl
iret
lea
mov
fwait
pop
add
call
add
mov
fs
push
mov
dec
pushf
sar
clc
xchg
cmc
cmp
pop
sti
(bad)
adc
aam
adc
mov
or
sti
push
in
mov
in
lods
xor
cmps
or
inc
pop
mov
cmp
in
ins
xchg
cwde
and
dec
or
fwait
repnz
gs
int
lds
loopne
dec
pop
adc
mov
icebp
mov
jg
sbb
add
aas
sbb
or
sub
pop
adc
imul
cmp
push
stc
push
push
cwde
lock
mov
adc
xchg
add
xchg
mov
fnsave
sub
dec
push
ins
cmp
ins
(bad)
call
pushf
loope
xadd
xchg
stos
push
sbb
(bad)
add
cmp
and
iret
out
cs
outs
mov
dec
gs
dec
sbb
mov
int3
fdiv
(bad)
popf
push
mov
adc
lods
aas
mov
test
retf
nop
test
mov
xchg
retf
lea
add
in
ds
pushf
iret
pop
mov
sti
jnp
xor
or
sbb
in
xor
lea
gs
outs
lds
mov
mov
mov
daa
sbb
mov
push
or
lods
mov
rol
sbb
ja
rcr
or
fst
sbb
sbb
xor
adc
pop
mov
push
(bad)
cmp
das
mov
(bad)
dec
out
(bad)
test
fwait
aaa
leave
xor
pusha
cmp
fidiv
sahf
jno
aas
pop
sbb
mov
pop
inc
pop
cmp
repnz
nop
in
sub
cmp
or
ret
loop
outs
adc
cmp
push
sti
inc
leave
inc
push
sub
jnp
call
cmp
test
jo
mov
jge
ficomp
jmp
push
and
adc
rcr
dec
adc
xor
rcl
cwde
js
push
sub
lea
cld
push
js
sbb
xor
ins
iret
mov
jg
gs
xor
xor
dec
xlat
test
outs
fisttp
mov
jo
mov
repz
addr16
mov
xor
add
mov
sub
jne
call
sub
loop
and
inc
cs
push
sar
cwde
push
je
sbb
mov
jp
jecxz
bound
mov
dec
mov
jb
sbb
addr16
mov
pop
push
add
stos
sub
fdivp
dec
and
mov
xchg
(bad)
hlt
add
pop
mov
push
lahf
out
test
bound
clc
(bad)
or
out
loopne
jp
scas
fadd
movs
pop
arpl
and
dec
mov
pusha
mov
rol
mov
adc
bound
rcl
add
enter
xor
sahf
push
inc
pop
sub
xchg
and
sub
pop
cmp
ins
dec
mov
push
pop
add
pop
popf
push
jl
sbb
add
jle
sbb
inc
test
scas
jne
sub
outs
inc
(bad)
mov
push
das
add
xor
cmc
adc
aad
test
xor
std
jno
xor
jb
jb
jb
mov
xchg
movs
mov
push
aam
cld
fsubr
ror
lds
lods
in
aaa
je
and
fnstenv
push
and
pop
mov
push
fst
int
mov
adc
repnz
idiv
inc
call
sub
pop
bound
repnz
lock
add
push
jne
mov
lock
jae
and
cmp
fs
mov
pushf
pop
hlt
pushf
xor
xchg
out
fcomi
pop
ss
jecxz
push
stos
movs
sbb
xchg
add
mov
pushf
sbb
cwde
lds
repnz
jns
daa
and
xchg
addr16
test
mov
push
pusha
ss
xchg
inc
repz
jp
retf
aam
mov
(bad)
xchg
xchg
fs
sbb
xor
stos
push
ins
mov
ja
jl
jg
gs
sbb
and
push
dec
add
pushf
clc
pushf
pushf
clc
ins
jb
add
add
sbb
scas
retf
repnz
fimul
sub
sti
idiv
push
outs
jmp
mov
cwde
adc
push
mov
xor
sbb
pop
out
es
or
jo
push
pop
lahf
pandn
popa
sub
stos
shr
imul
das
or
in
int
dec
add
sub
jg
xchg
or
mov
inc
push
mov
jmp
outs
cmp
mov
movs
shr
jbe
bound
add
sahf
cmps
fwait
daa
fdiv
xchg
ss
xor
inc
iret
jb
adc
gs
push
adc
push
loop
shl
pusha
push
jbe
mov
fild
sbb
mov
sahf
mov
mov
outs
mov
retf
adc
sbb
retf
movs
mov
sub
jmp
in
imul
pushf
mov
adc
(bad)
dec
jmp
mov
(bad)
out
xor
and
les
nop
mov
jno
jge
adc
sbb
pop
lds
xor
ror
int
ss
jp
mov
xchg
into
jmp
inc
lahf
repz
mov
fwait
cwde
into
cmp
test
push
mov
arpl
xor
popa
pop
mov
xor
(bad)
mov
fs
inc
fisubr
mov
(bad)
retf
and
mov
fs
(bad)
jmp
dec
sbb
inc
fcom
and
test
mov
inc
loop
or
cmp
sbb
leave
and
xchg
(bad)
jl
add
and
enter
movs
ins
push
outs
ins
inc
adc
jl
add
in
xchg
pop
out
and
mov
xor
pop
in
mov
in
pop
dec
mov
adc
mov
es
inc
fcom
call
push
in
and
push
aas
sub
scas
pop
or
or
clc
jmp
fisttp
into
pop
mov
push
adc
mov
in
xchg
cld
add
dec
div
jae
adc
xor
cmps
sbb
test
inc
iret
mov
xor
or
aad
push
shl
in
icebp
cs
fwait
push
outs
jno
jno
imul
(bad)
cmc
scas
cmp
mov
mov
and
jmp
mov
in
sar
loopne
xchg
in
js
dec
cmp
enter
(bad)
rcr
sub
mov
sub
mov
xor
mov
cmp
ss
into
call
pop
pusha
cmp
or
pusha
and
pop
aaa
shl
retf
or
dec
int3
adc
cmc
out
and
push
jbe
mov
sub
nop
pop
cmp
sbb
stos
retf
(bad)
push
xor
adc
rcr
(bad)
ror
cld
icebp
xor
and
sahf
aad
sbb
inc
jge
mov
dec
mov
fdiv
add
adc
jmp
rcr
xchg
imul
sbb
out
sbb
lods
call
push
daa
call
jmp
enter
lods
fwait
or
fsubr
gs
cwde
dec
ret
lods
ins
sub
pop
les
fsub
lods
jb
cdq
xchg
or
div
js
sub
je
cmp
jge
popf
pop
push
imul
lock
test
jmp
scas
push
jl
push
nop
imul
sbb
cmp
repz
pop
lods
and
test
mov
scas
dec
fnstcw
sbb
iret
lods
gs
std
idiv
lods
or
add
aaa
jmp
xchg
pop
cmp
dec
or
xor
pop
pop
(bad)
aas
mov
and
movs
cmp
in
sub
dec
xor
mov
push
jne
aaa
or
and
adc
sbb
gs
sub
repz
mov
push
fsub
fdiv
stos
imul
pop
jle
mov
adc
or
push
stos
adc
dec
test
pop
cmp
adc
daa
sbb
jb
mov
pop
mov
cmp
mov
fist
bound
jb
and
cdq
mov
rcl
dec
retf
inc
lock
fbstp
sbb
imul
and
sbb
cli
fcomp
fucomi
mov
push
aaa
shl
xchg
dec
fist
push
jp
ret
(bad)
cmc
xlat
push
cs
aaa
in
dec
data16
cld
sub
pop
cmp
cs
stos
push
cdq
xchg
ja
pop
jno
arpl
jg
iretw
cmps
ins
xchg
mov
rcr
sbb
sbb
(bad)
add
fwait
sbb
add
clc
std
test
fiadd
add
in
mov
stos
dec
cmc
and
in
mov
jecxz
and
clc
pop
stos
popf
stos
sbb
out
sub
pop
je
sti
push
sar
fsubr
mov
cmp
xlat
lea
adc
mov
dec
test
jmp
fdivr
jl
jp
fst
lahf
bound
cwde
xor
sub
loopne
popf
out
daa
pushf
pushf
rol
fwait
mov
ins
pushf
sbb
and
sbb
mov
pop
cwde
push
jnp
mov
xchg
xchg
loopne
setl
out
pop
cwde
jl
jge
data16
push
mov
retf
test
adc
lods
or
shl
in
fstp
sbb
cmp
push
scas
lods
dec
adc
pop
cmp
ins
add
leave
gs
xchg
push
sub
mov
call
fdiv
sar
out
mov
clc
leave
xchg
frstor
lahf
xor
mov
gs
arpl
int3
or
push
arpl
stos
dec
dec
xor
pop
imul
push
xor
push
pop
inc
pushf
outs
and
leave
push
pusha
and
or
jle
push
retf
sbb
xor
mov
fld
jge
daa
(bad)
shl
push
and
aas
into
pop
add
fcom
das
sti
stc
movs
ins
dec
scas
shl
mov
imul
mov
add
sub
xchg
push
sub
pop
pop
inc
dec
push
jle
inc
xchg
ror
pushf
dec
adc
adc
xchg
xchg
push
and
popf
pushf
inc
pop
test
push
outs
pop
mov
sbb
fild
fild
pop
sub
pop
cwde
and
retf
ja
lock
sbb
push
sub
xlat
dec
hlt
push
int
add
cs
call
repnz
inc
pushf
daa
xchg
cmps
inc
in
fnop
push
push
aam
cmp
push
jecxz
shr
or
enter
cmp
cmp
jne
cmp
jo
or
pushf
test
test
sbb
or
adc
scas
test
stc
(bad)
les
sub
add
xchg
sub
aaa
ins
mov
iret
rcl
dec
jne
inc
imul
mov
fisubr
mov
dec
pop
sub
jmp
sub
lock
sbb
pop
xor
xor
sbb
mov
(bad)
push
push
mov
test
lea
test
pop
iret
stc
sahf
movs
mov
mov
push
ror
jp
cs
and
and
mov
push
mov
out
rcl
push
les
and
aaa
mov
xor
retf
repnz
xor
mov
call
pop
lahf
ss
(bad)
das
mov
inc
stos
pop
jecxz
xor
(bad)
lock
push
adc
add
aas
cmp
aad
mov
cld
adc
xor
inc
(bad)
data16
xor
mov
cwde
(bad)
cmp
call
mov
ret
pusha
iret
jle
mov
movs
retf
out
shl
ja
cs
mov
xor
push
dec
fcmovb
and
jl
scas
inc
dec
sub
jmp
mov
pusha
mov
sub
push
adc
retf
or
je
aam
mov
sub
mov
and
int3
mov
fisttp
es
imul
aas
mov
mov
scas
sbb
fisub
or
sub
mov
inc
out
lock
mov
push
pop
cmp
clc
mov
push
test
jo
test
inc
pop
imul
(bad)
mov
loopne
pop
sti
call
and
mov
jle
fild
or
sbb
sub
xor
xchg
popf
adc
mov
push
pusha
lea
das
movs
mov
imul
imul
xlat
hlt
inc
xchg
test
mov
jmp
push
and
fcmovnbe
dec
stos
idiv
call
and
(bad)
or
popa
imul
xor
pushf
jbe
add
imul
push
pop
and
cmps
add
pop
mov
clc
nop
adc
lahf
sub
ret
xor
jl
xchg
nop
push
jmp
repnz
lea
call
inc
mov
dec
(bad)
pop
test
jmp
stos
loopne
adc
jb
sub
test
dec
dec
push
ins
(bad)
pushf
lds
lea
mov
xchg
adc
mov
dec
out
aas
mov
adc
jl
aad
adc
scas
push
fild
xor
loopne
sbb
pop
idiv
(bad)
push
shr
mov
ret
aaa
mov
fs
ds
or
hlt
ja
xor
dec
arpl
dec
cdq
sub
stos
inc
aam
es
clc
or
mov
mov
out
dec
add
pop
xor
repz
cld
inc
jbe
sbb
mov
js
and
push
and
jge
sbb
std
enter
xor
scas
out
stos
repz
pop
stos
and
mov
sahf
mov
addr16
sbb
pop
fcomip
mov
dec
pop
mov
xor
cwde
add
adc
and
retf
mov
fsubr
imul
inc
ret
aam
enter
inc
xchg
push
mov
push
jp
cld
and
cmp
adc
jb
cmps
pushf
aas
fcom
imul
out
dec
mov
add
jmp
mov
retf
in
push
popw
inc
mov
mov
sbb
sbb
sbb
pop
mov
fwait
dec
cmp
test
test
xor
int3
xchg
dec
out
call
dec
sar
dec
fild
ror
jnp
dec
(bad)
cld
(bad)
xchg
jne
push
mov
lock
in
loope
add
sbb
enter
cmp
push
data16
das
pop
push
loope
in
movups
jmp
or
fistp
dec
mov
movs
xchg
in
jno
out
aad
aad
stos
fsubr
scas
mov
call
push
or
aam
or
sbb
hlt
popf
mov
jb
cmc
sub
mov
mov
dec
pop
test
les
hlt
das
lahf
push
push
addr16
cmc
iret
pusha
lahf
or
cmp
sub
rcl
iret
aam
mov
jmp
sub
into
sbb
sub
sahf
dec
cmc
mov
push
jae
sar
cli
(bad)
mov
xchg
popa
sahf
leave
out
mov
sub
xchg
jmp
cmp
dec
mov
addr16
ins
sub
push
lods
jge
inc
retf
push
cmps
xor
mov
xor
mov
sahf
lds
adc
mov
pop
pop
jmp
lahf
sbb
fs
inc
arpl
mov
out
mov
xor
cld
inc
jge
pop
xor
inc
push
repnz
xor
add
adc
inc
in
pushf
cwde
mov
fadd
jmp
inc
lea
repz
shr
das
or
fisttp
xchg
push
call
shl
sub
xchg
cmp
loopne
fist
icebp
in
or
xor
in
dec
xchg
(bad)
mov
vrsqrtps
mov
cmps
in
pop
sub
xchg
inc
jo
outs
push
sbb
jno
test
loopne
xchg
(bad)
sub
mov
(bad)
fcomp
push
pushf
mov
mov
jnp
sbb
push
vunpcklps
cmps
adc
and
stos
mov
ins
mov
call
push
cld
lahf
cmps
jno
scas
inc
and
jp
out
adc
outs
dec
dec
jo
mov
mov
adc
push
gs
push
adc
(bad)
mov
dec
push
mov
(bad)
ins
mov
outs
sbb
pop
sub
mov
fsub
xchg
sbb
aas
add
lea
xor
adc
push
push
sbb
or
leave
add
ins
mov
lds
and
adc
mov
ficom
retf
mov
nop
fldenv
xchg
in
ins
add
jle
popa
js
loop
(bad)
icebp
aad
pop
xchg
pop
jmp
enter
popa
mov
clc
or
push
out
cli
lock
(bad)
sbb
sub
sub
jecxz
outs
fnsave
(bad)
movs
pushf
popa
js
mov
sbb
sub
cmps
push
ins
(bad)
loope
pop
cs
sbb
push
jmp
xchg
add
and
and
inc
inc
(bad)
push
jmp
xlat
mov
fsubr
imul
mov
pusha
cmp
sbb
int3
jge
sub
xor
js
mov
or
retf
pop
and
jmp
jo
cs
mov
xor
scas
adc
test
add
cmp
(bad)
loopne
lea
cmp
cld
bound
xchg
adc
jo
sbb
mov
or
nop
pop
jmp
fs
nop
ret
cmp
push
sub
sub
mov
mov
mov
mov
jbe
dec
icebp
mov
adc
or
std
push
sub
cmp
sub
imul
retf
daa
std
fnsave
xor
inc
(bad)
sbb
clc
in
mov
xchg
xchg
push
(bad)
pop
cld
xchg
not
push
loope
rol
adc
inc
jnp
pusha
xchg
xchg
adc
mov
icebp
jb
or
mov
push
xor
push
mov
pop
cmc
push
call
sbb
adc
sub
sub
sbb
imul
ret
ds
outs
lahf
xor
sub
pop
xchg
and
mov
jno
cmp
cdq
jmp
outs
pop
fstp
pusha
adc
outs
sub
xlat
dec
fld
add
sbb
jmp
adc
push
xchg
in
dec
loop
stc
ins
dec
xchg
fwait
sub
shl
or
in
mov
mov
test
call
sti
and
movs
sar
shl
int
mov
and
sbb
stc
jb
mov
sahf
fwait
mov
xor
dec
adc
es
ins
mov
add
mov
and
call
cdq
cdq
push
jl
sbb
loopne
neg
retf
jnp
mov
es
push
cmp
pop
das
sub
out
test
dec
xchg
shl
xchg
stos
clc
push
cwde
fiadd
(bad)
pop
mov
xchg
arpl
pop
adc
inc
iret
(bad)
jno
(bad)
enter
cwde
pop
rol
xchg
imul
jo
int
dec
(bad)
sahf
sbb
mov
and
cmps
and
mov
jmp
outs
cmps
jno
les
push
jbe
lods
sbb
xor
je
pop
not
cdq
mov
sbb
hlt
xchg
ja
mov
fs
fsubr
shr
cmp
test
(bad)
mov
rcr
xor
sub
sti
test
and
stos
mov
lods
or
icebp
ret
aaa
arpl
xor
cmp
xchg
pop
jp
adc
cmps
pop
aaa
jb
jno
lods
aaa
call
cmp
aam
(bad)
pushf
dec
bound
cmp
popf
nop
aad
retf
xor
imul
xchg
sbb
sbb
popa
cwde
(bad)
xor
dec
stc
cld
pop
xchg
dec
jmp
inc
cld
outs
imul
push
jmp
out
cwde
lods
xchg
std
ins
or
arpl
imul
sbb
jge
sbb
xchg
arpl
pop
jmp
int3
out
push
pop
sub
mov
push
pop
sar
mov
mov
shr
mov
sub
data16
pop
stos
xor
fmul
cmp
nop
push
xor
sub
bound
dec
out
inc
xchg
mov
call
(bad)
push
fcom
jne
nop
cmc
sub
test
loop
icebp
cli
pop
clc
xor
mov
xor
sbb
push
retf
xor
mov
stc
popf
xchg
(bad)
test
in
test
fsub
mov
and
dec
loop
jae
jmp
sub
sbb
test
fcomp
jb
xor
cmc
dec
ficom
or
inc
gs
les
and
sbb
int
fwait
shl
mov
inc
sahf
pop
dec
mov
fadd
lods
add
pop
ins
xor
in
aad
jo
mov
fisttp
xor
les
dec
adc
and
int3
fs
sbb
and
out
cs
xchg
push
push
sub
adc
dec
add
ror
scas
jg
pop
inc
popa
mov
loope
mov
aaa
sub
lods
leave
lahf
std
(bad)
mov
(bad)
push
pusha
les
iret
shl
sub
jl
aad
pop
push
or
inc
xchg
sub
retf
mov
retf
jecxz
pop
mov
ins
mov
cmp
fisub
or
cmp
push
pop
jo
mov
pushf
xor
push
outs
lods
fisttp
xchg
and
push
aam
cmp
push
ret
fstcw
int3
outs
sahf
xchg
sbb
mov
push
icebp
(bad)
ficom
addr16
retf
bound
js
xchg
pop
jo
and
cs
ret
lea
mov
aam
int
aad
gs
sbb
pop
rcl
xor
and
nop
fmul
imul
adc
xchg
rcl
cmps
push
repnz
and
add
sbb
in
js
jl
out
mov
lock
leave
pop
sub
int3
mov
enter
adc
out
jb
rcr
adc
aas
mov
fnstsw
icebp
sub
mov
inc
test
mov
in
addr16
nop
sti
leave
lods
mov
fs
xchg
xor
lea
dec
sbb
mov
sbb
push
cmp
ret
fwait
pop
adc
fld
repz
clc
xchg
mov
fmul
dec
mov
ins
sub
sar
test
mov
retf
ja
jb
lods
out
jne
xchg
or
jmp
push
mov
mov
in
mov
ins
imul
push
add
inc
sub
push
bound
aad
xor
dec
shl
pop
je
into
or
je
cli
jmp
ins
mov
sub
jmp
push
sbb
inc
mov
mul
sbb
push
fs
ins
sub
xor
aam
loopne
ficom
ror
call
test
adc
sbb
xor
add
jbe
cdq
cld
int
jmp
xor
dec
xchg
test
lds
in
dec
xor
test
pop
(bad)
retf
(bad)
fidiv
xchg
push
outs
or
test
mov
adc
pop
fcomp
std
xlat
push
push
ss
xchg
and
sub
sub
push
popf
jmp
fistp
test
retf
and
push
sub
imul
(bad)
das
jmp
add
push
loop
pop
fcmovnbe
sti
cld
arpl
xlat
mov
jmp
pusha
daa
pop
sahf
pmullw
jle
mov
add
inc
ret
dec
dec
sub
mov
lock
and
and
aam
mov
sbb
jle
hlt
cmps
or
pushf
sbb
dec
jmp
movs
sub
push
in
inc
jne
pop
mov
lahf
push
xchg
rcl
out
outs
inc
mov
sbb
cld
inc
es
enter
pop
retf
rcr
dec
inc
add
sub
xchg
addr16
and
add
jle
(bad)
xor
retf
je
sbb
(bad)
adc
dec
pop
mov
inc
ja
and
dec
idiv
test
jge
sub
call
sbb
out
pop
jle
cmc
data16
in
dec
jno
cmp
cmp
(bad)
dec
cmps
fild
pop
std
(bad)
dec
call
cli
movs
js
pop
dec
pop
in
push
test
popf
ins
add
mov
pop
ja
dec
ins
xor
test
js
das
mov
js
pop
cmp
sbb
into
cmps
sar
(bad)
out
retf
mov
cwde
fcomp
pop
sub
scas
adc
(bad)
in
add
pop
scas
mov
sbb
push
out
int
ins
pop
call
imul
mov
mov
fadd
pop
fistp
pop
dec
xchg
les
or
movs
retf
lods
pop
xlat
dec
jb
mov
dec
inc
mov
push
jnp
lea
ins
aas
data16
adc
test
mov
cmp
cmps
inc
dec
lds
lea
imul
mov
sub
or
add
ds
aaa
cdq
test
arpl
loopne
lods
in
repz
mov
out
ins
int
scas
cs
test
ficom
xchg
repz
out
pop
out
jbe
pop
sahf
jbe
and
mov
repz
push
iret
and
cmps
stos
pop
fist
and
jl
dec
sbb
ss
inc
(bad)
cmp
jl
rcr
mov
retf
push
addr16
jge
mov
xchg
les
js
lea
(bad)
stos
fbstp
scas
jp
adc
lahf
jmp
pusha
mov
in
sub
push
aad
sar
shr
push
mov
sbb
xlat
sbb
(bad)
enter
or
pop
pop
sbb
jb
(bad)
cmp
mov
loop
push
ffree
test
mov
add
mov
pusha
(bad)
ds
mov
(bad)
outs
(bad)
mov
jg
loop
adc
xchg
out
idiv
jo
cmp
aaa
sti
int
mov
mov
pusha
in
cld
clc
and
inc
xor
out
or
popf
cmp
sbb
arpl
fistp
pop
inc
sar
je
stos
xchg
ret
sub
(bad)
xor
ror
stc
call
scas
pusha
fsubr
fdivr
mov
adc
mov
pop
xor
pop
sub
sbb
outs
adc
(bad)
out
stc
mov
sbb
xlat
sbb
dec
pop
cmps
mov
dec
add
test
and
pop
dec
(bad)
sbb
cmp
lods
push
retf
dec
sbb
adc
pop
jbe
aad
jb
arpl
cwde
push
xor
(bad)
jbe
xor
(bad)
jmp
retf
shr
pop
push
sahf
pushf
call
gs
mov
ret
repz
mov
inc
xchg
sti
jne
cmp
xchg
xor
sti
fsub
dec
cli
sub
out
out
xor
add
repz
hlt
ins
mov
arpl
jo
dec
call
repnz
pop
add
add
mov
jg
sti
aas
mov
jae
in
xchg
(bad)
cld
push
mov
mov
(bad)
stc
lahf
iret
push
addr16
xchg
mov
mov
or
mov
adc
jge
mov
clc
xor
das
mov
hlt
and
inc
hlt
movs
push
scas
in
ret
pusha
fs
dec
jnp
rcl
push
sbb
stc
dec
ja
mov
fisttp
xor
scas
dec
adc
xchg
lock
xchg
jl
lods
and
cmp
pushf
fwait
push
jecxz
dec
or
xchg
pop
xchg
outs
xchg
out
add
in
pop
mov
sub
out
sub
(bad)
movs
inc
pop
repz
test
add
mov
(bad)
jb
nop
lock
or
in
imul
sahf
sbb
(bad)
and
fmul
cmp
jp
ror
sahf
xlat
daa
je
cmp
pop
inc
pop
jecxz
lods
(bad)
ret
mov
lock
scas
jb
sbb
pop
stos
sub
push
ret
mov
dec
inc
push
sbb
mov
imul
pop
ss
call
mov
js
gs
adc
mov
popf
xor
push
mov
movs
gs
(bad)
xchg
hlt
cli
loopne
mov
sub
adc
cdq
bound
outs
gs
ds
fs
adc
daa
mov
test
js
xchg
fcomp
add
(bad)
mov
mov
pop
dec
push
dec
leave
popa
mov
(bad)
or
and
sahf
scas
push
jo
pop
mov
mov
pushf
xor
push
mov
clc
jo
imul
loop
(bad)
cmp
jmp
aam
inc
inc
cmc
push
push
addr16
mov
js
or
popa
dec
(bad)
cli
hlt
mov
dec
or
cmp
fstp
loopne
test
xchg
sub
es
into
dec
mov
sub
push
xor
and
jno
aaa
mov
js
cmps
mov
mov
jle
es
xor
or
outs
pop
cld
mov
in
cwde
(bad)
mov
dec
sbb
out
adc
dec
imul
sbb
jo
stc
xor
sar
cs
das
dec
(bad)
es
push
push
cmp
test
mov
or
pop
outs
pop
mov
push
imul
iret
mov
jb
add
add
outs
dec
adc
outs
cdq
mov
stos
shl
jecxz
dec
cs
int3
mov
fiadd
into
jns
sahf
jbe
imul
ds
ins
stc
jp
sbb
cmp
add
pop
shl
imul
(bad)
fadd
fdiv
popa
add
or
gs
stos
jle
clc
push
gs
cld
adc
ins
and
fist
in
jno
int
and
dec
sub
pop
xor
adc
push
(bad)
popf
fwait
fs
shr
push
mov
rdpmc
mov
loopne
hlt
mov
xlat
scas
sbb
fucomip
rcl
push
in
mov
pop
jp
and
inc
movs
popf
out
int3
mov
xchg
scas
xchg
dec
mov
and
sub
sbb
push
pop
sti
out
retf
fidiv
hlt
jb
jmp
mov
mov
jmp
jge
sub
xchg
iret
int3
icebp
add
(bad)
jmp
adc
sbb
push
(bad)
ins
cwde
stos
cs
xor
add
adc
daa
fistp
fwait
sub
pushf
outs
je
(bad)
lods
mov
pop
jmp
repz
add
mov
and
pop
movs
(bad)
push
push
and
mov
(bad)
jae
outs
push
adc
ja
xlat
out
hlt
dec
repz
jp
imul
int
addr16
pop
(bad)
and
fsub
into
jg
jo
fs
xor
xchg
jp
(bad)
inc
sbb
pop
or
mov
xor
nop
adc
loope
ja
in
das
mov
in
mov
mov
pop
shl
or
leave
aas
std
jge
cmp
outs
mov
cdq
sbb
jle
test
ret
repnz
xchg
bound
lods
ss
std
mov
sbb
mov
xor
out
fs
jns
(bad)
cld
ja
xchg
sub
and
pop
add
xchg
cwde
dec
push
jae
mov
bound
lds
clc
call
push
fwait
cmps
mov
mov
sbb
sub
mov
mov
pushf
push
xor
xor
xchg
popa
jmp
fnstenv
mov
jmp
cs
cmp
stos
movs
dec
xchg
jmp
iret
inc
sub
mov
int3
push
(bad)
pop
scas
sbb
in
iret
adc
outs
push
jge
xchg
adc
sbb
ds
out
fild
inc
out
push
add
in
(bad)
sti
adc
sub
lahf
pop
xor
cmp
add
dec
xor
stos
sbb
sbb
add
sbb
push
enter
out
stos
fisttp
mov
push
bound
lds
and
sub
test
pushf
dec
sbb
xor
daa
rcl
pop
ror
xor
aam
repz
jecxz
push
xchg
jno
adc
ficomp
and
mov
or
and
(bad)
lods
fs
xor
pop
sar
xchg
call
scas
push
xor
fwait
pop
ins
mov
mov
in
imul
dec
and
hlt
xor
or
fist
sbb
cwde
mov
dec
pop
movs
sub
jp
loopne
push
pop
pop
jg
out
pop
sub
xchg
mov
add
cmp
cmp
stos
mov
inc
mov
call
jmp
mov
push
pop
rcl
sbb
(bad)
(bad)
daa
jnp
mov
loope
(bad)
mov
sub
push
loop
daa
pop
xlat
add
aas
mov
rol
or
jl
jl
popa
mov
mov
repnz
mov
(bad)
pop
dec
mov
push
adc
ret
and
mov
sbb
nop
sub
loop
sub
xchg
xchg
xchg
popf
push
test
xlat
cli
fbld
daa
scas
pop
fild
fild
repnz
ss
pop
lea
xor
movs
cli
mov
add
ja
and
fcmovnbe
js
les
xor
lahf
sahf
dec
pop
mov
rcl
sti
jmp
and
loop
pop
popa
(bad)
sbb
xor
push
jmp
cli
out
adc
and
add
jmp
sub
sbb
cmp
adc
xlat
pop
xchg
mov
fs
(bad)
fsubr
test
ins
adc
rcr
sbb
sub
adc
(bad)
ds
cld
mov
dec
mov
and
jge
out
int
add
mov
sub
mov
or
mov
push
dec
fldcw
and
pop
(bad)
sti
sbb
adc
mov
popf
sbb
dec
outs
stos
xor
mov
retf
rcr
sahf
les
adc
sbb
mov
scas
pop
retf
cmp
bound
enter
mov
rcl
call
arpl
imul
inc
sbb
inc
mov
loopne
(bad)
xchg
mov
mov
dec
pusha
sti
dec
in
and
loope
sub
or
ficom
sbb
cs
call
loopne
test
aad
call
daa
mov
int3
imul
adc
mov
sub
(bad)
cld
mov
mov
fst
loop
inc
sub
jmp
fs
pop
push
out
sub
cmp
aam
jbe
xchg
sbb
dec
cmp
ficomp
cmps
push
xor
adc
jnp
and
mov
mov
jnp
imul
pop
mov
lahf
out
punpckhdq
in
adc
fimul
lods
pop
dec
or
sti
inc
dec
jge
mov
mov
fs
sti
aad
or
pop
adc
mov
nop
pop
int3
popa
mov
push
sub
imul
cmp
fcmovu
sbb
sbb
lods
es
dec
or
or
gs
push
add
ror
mov
mov
add
dec
and
mov
jmp
sbb
dec
arpl
xchg
jle
pop
pusha
ficomp
and
cwde
lea
mov
ja
adc
lods
pop
sar
pop
jnp
jne
rol
repnz
in
ds
call
mov
popf
sbb
dec
into
(bad)
aad
hlt
scas
add
arpl
outs
outs
jbe
shr
test
jae
add
(bad)
fisttp
push
inc
lahf
rol
scas
xchg
ss
repz
sbb
lahf
jge
mov
pusha
shr
test
out
dec
lock
cdq
add
xchg
adc
repnz
shr
shr
pusha
xor
aam
sbb
outs
xchg
aam
push
cmp
cs
xlat
jno
inc
popf
int3
xchg
jp
daa
push
sub
mov
cmp
mov
scas
jp
ins
inc
mov
outs
stos
daa
std
imul
mov
adc
adc
pop
xor
cli
inc
mov
jg
sub
mov
test
lods
ror
nop
cli
enter
mov
jecxz
cmc
mov
das
push
out
xchg
and
ret
test
xchg
add
popa
scas
popa
repz
or
mov
in
repz
push
push
ret
xchg
sahf
and
adc
adc
hlt
(bad)
push
add
sar
enter
retf
scas
mov
inc
gs
sar
adc
pop
mov
cmp
adc
push
jmp
adc
xchg
xor
mov
imul
or
push
sub
sub
in
push
ret
cld
lods
retf
jne
cmp
test
cdq
aad
sbb
cld
mov
retf
push
pusha
test
pop
mov
dec
mov
xor
xlat
xchg
or
aad
(bad)
adc
pop
fimul
stc
jp
mov
call
adc
loopne
mov
lods
push
xchg
leave
and
repz
cmp
or
inc
mov
dec
fwait
sbb
push
jmp
fwait
xchg
in
in
gs
xchg
je
pop
pop
add
fld
jae
inc
fcmovb
inc
and
inc
dec
jnp
jecxz
gs
ss
fnstcw
pop
js
pop
jg
lods
sub
das
loop
jle
push
xchg
push
fwait
cli
sbb
adc
outs
push
out
jmp
and
jne
outs
pop
mov
(bad)
jno
je
cli
adc
adc
enter
fs
sub
(bad)
ror
cvttps2pi
fwait
icebp
jge
jecxz
gs
adc
dec
(bad)
loop
pop
iret
and
fcomp
(bad)
adc
mov
pop
xchg
jne
add
push
xchg
pop
xchg
iret
in
int3
inc
(bad)
lock
mov
movs
or
mov
ret
aam
lods
pop
dec
xchg
imul
lahf
mov
retf
xchg
pusha
xchg
pop
fwait
pop
stos
push
nop
(bad)
(bad)
cs
mov
adc
xor
mov
xor
imul
movs
test
mov
shr
mov
rol
xor
call
mov
(bad)
jecxz
ffree
shr
pusha
pusha
pop
fsub
mov
loopne
push
cld
loop
xchg
ret
fwait
mov
movs
dec
repnz
pop
sub
push
call
into
or
dec
xchg
es
add
fldcw
and
inc
lea
dec
mov
ja
les
xchg
push
or
in
sub
addr16
enter
mov
push
pop
mov
sub
dec
cmps
and
jmp
adc
sbb
or
call
fisubr
pushf
aad
xlat
mov
call
adc
fidiv
pop
and
pop
sbb
cdq
sub
pop
mov
mov
js
mov
and
mov
jnp
cmp
cmc
cmc
inc
xor
ret
aaa
movs
add
sbb
stos
lea
pushf
ja
xchg
adc
pop
sub
(bad)
pop
sub
sar
arpl
test
jae
cmp
adc
cmp
or
xlat
xchg
dec
push
pop
xlat
in
and
xchg
or
sbb
push
in
out
aas
cwde
cmp
fdiv
and
ret
mov
jecxz
push
sbb
pop
aad
cwde
jno
ins
pop
fs
sahf
repnz
icebp
outs
outs
mov
scas
fstp
movs
lahf
dec
inc
fdivr
sub
xor
jnp
jb
call
pop
push
and
test
lahf
adc
adc
xchg
outs
push
fwait
lahf
neg
scas
in
into
enter
sahf
mov
push
retf
xor
dec
xchg
sbb
mov
(bad)
ins
(bad)
ficomp
sub
or
in
push
int3
dec
mov
imul
cmp
mov
push
sbb
dec
adc
leave
imul
mov
pusha
ds
pop
jl
mov
push
mov
mov
sub
jb
pop
sbb
sub
jp
xchg
push
out
imul
sbb
push
test
aas
inc
jns
sub
push
inc
xchg
inc
inc
lods
mov
dec
int3
mov
and
mov
jl
pop
pop
xchg
in
cmp
outs
int3
into
sub
ins
push
cmp
stos
inc
jae
std
push
aam
loope
bound
aas
(bad)
loope
fldcw
mov
es
pop
xchg
cmp
jno
sti
cmp
or
fild
pop
ins
mov
arpl
jp
cmp
inc
(bad)
ficom
out
call
hlt
js
push
adc
push
sub
push
imul
mov
in
mov
adc
aaa
mov
dec
test
das
push
repnz
xchg
mov
inc
pushf
sub
pop
jb
call
push
daa
and
jo
pop
inc
imul
sbb
enter
icebp
dec
push
fild
gs
mov
and
push
lods
push
mov
sbb
push
sbb
adc
mov
push
dec
mov
dec
ss
aas
aam
cmps
sbb
mov
repz
cmp
in
(bad)
sbb
(bad)
int3
push
pop
cmp
and
gs
call
mul
test
sbb
call
push
cmp
ret
icebp
je
sbb
sbb
cmp
cwde
adc
sub
loop
ror
or
fwait
fs
mov
mov
cmp
xchg
cmps
es
push
jnp
pushf
push
fwait
sub
or
pop
mov
imul
mov
adc
ficom
xchg
das
(bad)
popa
dec
sbb
sub
fistp
dec
outs
push
add
mov
js
test
inc
sbb
pop
stos
adc
ins
add
ret
dec
stos
fcomp
out
xchg
mov
jbe
(bad)
mov
movs
enter
addr16
pop
mov
jne
adc
add
fsub
rol
and
icebp
int3
fbstp
ja
sbb
int
add
lods
and
mov
mov
ds
fstp
leave
movs
pushf
dec
hlt
adc
imul
mov
xchg
pop
adc
mov
cli
add
mov
add
inc
fcmovb
sbb
loope
add
sti
fld
dec
lods
sub
ds
test
xor
loopne
mov
out
popa
sbb
imul
stos
jae
(bad)
sti
or
(bad)
or
xchg
aas
iret
inc
imul
es
mov
sbb
je
push
in
imul
dec
ins
sbb
and
popf
sub
shl
adc
repz
fwait
push
sbb
cmp
pop
and
cs
mov
sub
pop
lock
inc
push
fwait
pop
(bad)
cwde
jb
rcl
aad
push
cmc
shl
push
dec
inc
or
push
and
mov
cmps
fucomip
adc
dec
xor
hlt
das
in
xor
mov
nop
sahf
and
lahf
mov
jne
std
jle
xchg
je
adc
fstp
popf
icebp
mov
js
dec
add
mov
sub
test
not
stos
adc
(bad)
and
dec
ret
icebp
stos
scas
mov
rol
push
dec
adc
and
jl
inc
dec
add
mov
retf
stos
cdq
dec
comiss
cs
or
mov
bound
ffree
addr16
pop
stos
jbe
adc
cmp
mov
cmp
iret
out
and
outs
popf
lahf
test
dec
out
pushf
inc
ins
xchg
push
pop
iret
fcom
xchg
clc
adc
leave
call
fs
fidiv
and
adc
dec
jne
xor
shl
int3
cmp
ret
not
pop
iret
pushf
jb
pop
mov
punpckhdq
(bad)
inc
sbb
inc
pop
add
test
fimul
sbb
inc
cdq
adc
sti
pushf
mov
push
gs
push
nop
repz
sbb
(bad)
shl
push
xor
popf
sbb
loop
retf
in
sbb
push
cdq
jmp
shl
xor
xchg
mov
or
adc
jl
imul
push
fisubr
movs
mov
push
sub
adc
sahf
jne
loopne
xor
dec
retf
punpcklbw
cli
push
ins
xor
mov
ficom
inc
sbb
xchg
add
mov
nop
ja
imul
dec
in
es
add
repnz
xor
jns
loope
leave
bound
fs
sbb
sar
xchg
movs
scas
jg
sbb
test
cs
push
inc
out
adc
daa
fisub
call
stos
push
test
test
xchg
fisttp
hlt
call
(bad)
push
and
push
call
inc
outs
sbb
mov
cdq
test
gs
retf
fidivr
and
dec
sub
mov
pop
popa
dec
push
std
(bad)
or
shr
dec
cli
icebp
ret
or
nop
in
dec
into
ins
mov
bound
pop
fldenv
add
jmp
cmp
rcr
mov
addr16
mov
mov
xor
dec
jg
scas
sub
jnp
pop
xchg
jl
sbb
jp
mov
and
(bad)
jl
and
repz
mov
fs
mov
popa
xchg
pop
push
inc
or
imul
jge
xchg
push
ficom
xchg
loope
(bad)
mov
add
adc
mov
lahf
add
fisttp
sbb
push
jp
xor
test
sub
test
xor
test
inc
not
mov
enter
es
push
adc
pop
dec
xchg
imul
lock
mov
lds
sub
hlt
jge
cmp
mov
rol
test
push
mov
add
xor
cwde
and
xor
test
aas
scas
add
xor
pop
mov
xor
shr
test
sbb
push
pop
or
sbb
adc
sub
cdq
in
or
callw
adc
repnz
pop
dec
les
ret
dec
sbb
xchg
nop
jae
(bad)
sbb
fimul
daa
in
hlt
repz
sub
pop
sbb
pop
fbld
jb
xchg
mov
test
sbb
out
fstp
dec
push
mov
dec
xchg
mov
pop
xchg
rcl
dec
cmps
and
xor
int3
mov
mov
pop
iret
cmp
fs
sbb
call
cmp
pushf
movs
arpl
cmps
jge
xor
pop
and
cmc
xor
hlt
dec
jo
pop
pop
mov
jmp
pop
(bad)
mov
jo
hlt
jo
sbb
jg
adc
mov
in
pop
icebp
xchg
jno
sbb
arpl
sar
js
div
pop
or
movs
sub
pop
xchg
repz
or
sbb
mov
xor
test
icebp
jno
imul
mov
cvtps2pi
xor
xchg
out
cmp
sub
repz
xor
inc
pop
loopne
dec
mov
jno
xor
ja
into
xchg
repnz
mov
push
jg
lods
sbb
sbb
sbb
in
push
pusha
or
pop
ins
mov
or
outs
sub
loop
xchg
jns
and
and
das
scas
lea
lods
sub
fldl2t
jp
imul
bound
(bad)
shl
stos
call
push
or
cmp
ins
mov
dec
fs
xchg
in
addr16
in
cmc
xor
repnz
scas
movs
sub
cmp
aam
sbb
add
fnstsw
sbb
pop
and
daa
ins
cmp
inc
icebp
lea
ins
add
movs
cmp
movs
mov
push
daa
sub
jbe
jae
xor
test
mov
inc
sub
push
shl
repz
and
ss
not
movs
pop
jnp
jmp
adc
in
lahf
push
stc
(bad)
js
cmp
adc
loope
les
ss
cs
push
cli
cwde
jnp
or
cmp
nop
cdq
test
call
call
xchg
mov
dec
add
dec
fist
and
sti
imul
out
push
js
push
and
adc
sbb
daa
icebp
les
je
out
shr
arpl
cmp
sub
pop
les
fdivr
jl
leave
fisttp
fdiv
rcl
arpl
stos
in
(bad)
into
mov
(bad)
icebp
jg
sub
mov
sub
(bad)
ins
pop
push
or
dec
sahf
std
mov
out
cmc
call
push
dec
dec
xchg
test
icebp
movs
and
setne
lods
nop
sbb
shl
jge
fs
push
cmp
jp
ret
and
pop
mov
sbb
dec
popa
cld
push
outs
(bad)
mov
dec
mov
and
stos
pop
xor
inc
shl
jae
rep
adc
xchg
sbb
(bad)
lds
aad
out
ins
popf
ret
jbe
sub
xchg
test
repnz
or
add
test
xchg
mov
push
loopne
cmp
stos
dec
inc
cs
cmps
outs
neg
test
dec
sub
ja
xor
or
sub
xor
into
xor
dec
std
das
pop
adc
mov
leave
(bad)
mov
jno
jbe
lahf
pop
cmc
sar
cmp
in
int3
jo
dec
outs
fwait
imul
adc
xchg
js
jp
pop
loop
js
movs
out
cmp
sub
jg
test
sahf
popf
(bad)
push
and
das
popf
adc
adc
sub
data16
dec
outs
ss
pop
jl
cs
fst
jl
pop
or
scas
push
je
enter
rcr
sbb
pop
outs
out
cmp
test
mov
mov
pushf
sbb
jbe
push
(bad)
pop
add
mov
pop
mov
adc
fcmovnbe
call
sbb
cmc
sbb
ins
dec
xchg
fld
xchg
add
jbe
sbb
pop
ins
push
jbe
das
retf
ret
retf
ins
aaa
sbb
jbe
push
lock
xor
mov
xchg
or
pop
pop
xor
mov
stos
sub
int
add
aam
in
enter
push
sahf
xor
dec
out
push
and
sbb
sub
add
pop
inc
push
xor
mul
leave
inc
add
shl
pop
push
out
xchg
jl
aaa
mov
mov
and
into
cs
sar
jne
imul
pop
in
scas
(bad)
pop
lods
test
popf
and
inc
int3
sbb
lods
mov
ja
lods
(bad)
fs
mov
dec
aas
call
mov
xchg
xor
add
xchg
test
and
jae
mov
(bad)
ins
xor
call
imul
into
mov
lock
dec
jo
icebp
sub
cli
and
shl
add
jle
cmps
sbb
adc
and
mov
ret
jnp
mov
jnp
cdq
icebp
dec
jmp
jne
dec
call
pop
rcl
lea
xor
les
jmp
fnstsw
mov
push
in
fdivr
adc
sbb
sti
fmul
in
xchg
sbb
push
pop
in
add
enter
sbb
dec
ja
adc
sar
xchg
shr
lahf
ins
bound
push
lock
dec
cmp
pop
ins
add
and
fnsave
adc
sub
ror
jnp
ja
cmp
or
push
mov
pop
mov
popf
ror
push
ror
jo
pop
and
cmp
pop
push
mov
jae
or
loopne
out
and
push
xchg
call
popf
scas
push
lods
dec
sti
loop
mov
mov
push
cmp
lock
arpl
fsubr
push
adc
cmp
pop
xchg
dec
jle
mov
inc
jl
sub
ret
dec
imul
(bad)
rcr
add
xor
cwde
inc
not
xchg
mov
sub
fsubrp
sub
mov
jg
mov
fsubr
iret
retf
loope
push
jle
xchg
inc
fwait
jecxz
jne
(bad)
mov
cmp
push
xchg
jns
mov
lahf
mov
movs
imul
sbb
jmp
mov
and
js
adc
push
adc
xor
mov
ret
cmp
push
sahf
xchg
pop
dec
out
xlat
xor
mov
outs
pop
outs
mov
mov
test
jnp
push
or
dec
daa
push
jl
fwait
out
jecxz
xlat
call
imul
and
push
int3
fbld
xchg
gs
xor
fiadd
jo
inc
cmp
inc
mov
rcl
pop
and
xchg
test
push
mov
cmp
adc
scas
icebp
mov
sbb
xchg
outs
aaa
mov
test
xor
cmp
leave
das
fwait
idiv
int3
in
call
int3
js
mov
mov
push
pushf
popf
sahf
outs
or
xchg
leave
bound
test
add
loope
push
in
jae
mov
test
inc
fwait
aas
pop
je
or
or
jmp
sbb
push
pop
es
xchg
outs
pop
add
sub
add
xchg
or
or
js
es
xchg
add
in
jb
pop
pop
cmp
jbe
mov
loop
push
in
enter
cmp
scas
mov
push
nop
aas
mov
sbb
lea
push
cs
xchg
mov
out
bound
xchg
rep
repnz
pusha
mov
or
push
cld
and
adc
int3
mov
out
adc
add
push
aam
lods
in
outs
xchg
jo
(bad)
clc
fmul
push
test
add
sbb
jg
aaa
mov
ret
xor
fdiv
scas
cld
push
fdivr
fmulp
cmp
push
mov
frstor
push
pop
ins
mov
inc
cdq
mov
imul
cmps
mov
xchg
ret
je
mov
inc
jne
test
es
cmps
mov
cmp
dec
or
enter
jl
adc
sbb
cdq
call
mov
jbe
inc
cmp
bound
xchg
dec
(bad)
cmps
cmp
int3
push
jns
push
push
jns
and
dec
imul
xchg
fisubr
sbb
data16
xchg
aam
xchg
or
jae
fistp
jnp
sbb
lea
jb
xor
mov
(bad)
(bad)
pop
imul
inc
push
arpl
sti
pop
je
push
inc
cmp
int
xchg
push
mov
adc
xor
mov
test
mov
jno
test
mov
mov
adc
adc
jmp
xlat
rcl
fdivr
jns
aas
sti
mov
lods
cwde
out
pop
cmc
and
adc
enter
xor
dec
fst
add
xchg
cmp
cmp
(bad)
ret
cs
ins
push
retf
sbb
es
lds
pop
mov
inc
call
add
call
outs
out
iret
or
cld
rcr
sub
ret
mov
aad
inc
sbb
xchg
pop
out
(bad)
ins
(bad)
popf
mov
xchg
repz
popf
mov
sbb
cmc
leave
loope
das
pop
mov
lock
aaa
(bad)
mov
dec
sub
adc
call
fs
mov
lods
mov
leave
adc
shl
pop
and
imul
fisub
mov
xchg
adc
jne
stos
inc
test
scas
pop
in
jl
ja
cmp
fist
js
(bad)
vhsubps
dec
(bad)
xor
je
mov
mov
jne
sbb
pop
mov
loop
or
mov
mov
jmp
pop
jmp
retf
and
fsub
mov
xchg
pusha
push
or
mov
mov
sbb
imul
ficomp
xor
jbe
push
nop
sti
xchg
(bad)
in
shl
nop
pop
sub
mov
arpl
je
mov
and
sub
int
mov
aas
push
sbb
jmp
cmps
push
(bad)
and
in
fisub
sbb
mov
out
dec
call
mov
sub
fdivrp
and
outs
pop
inc
cmps
add
popa
push
mov
mov
mov
fs
das
cmp
cdq
retf
mov
out
xchg
and
test
ret
add
mov
aas
jo
hlt
rcl
mov
push
push
loopne
das
add
pop
pop
adc
mov
xor
push
das
jb
rcr
add
bound
fdivr
sub
imul
(bad)
push
out
xor
imul
xchg
jns
xchg
std
and
bound
xor
jne
mov
(bad)
push
dec
jge
clc
(bad)
pop
out
call
std
(bad)
sub
mov
xor
ficom
ja
test
jo
int
(bad)
mov
fdivr
sub
adc
pop
jno
pusha
dec
sub
push
cmp
mov
fsub
pop
cdq
mov
or
xor
cmp
sub
loopne
push
arpl
je
cmc
adc
aad
in
xchg
mov
jecxz
in
scas
jmp
out
mov
cld
sub
jle
push
mov
in
scas
lods
(bad)
adc
sbb
shr
push
fidivr
add
fistp
xchg
rol
ins
enter
cmp
mov
imul
call
mov
mov
inc
xor
sbb
call
cwde
ins
fwait
push
cmp
mov
lods
mov
ins
out
stos
lods
add
xchg
inc
imul
pop
xchg
push
xchg
mov
pop
ins
adc
pop
pop
push
(bad)
aas
popf
scas
inc
std
aas
pop
add
adc
ss
pop
mov
jp
bound
in
loope
pop
mov
xchg
(bad)
stos
test
rcr
jo
mov
hlt
rcr
imul
push
jb
pop
adc
xor
jecxz
ss
pop
arpl
aam
adc
xor
push
and
fadd
adc
mov
adc
jmp
mov
ins
xchg
inc
push
cmps
mov
dec
inc
inc
cmp
in
lods
sub
hlt
(bad)
cld
fbld
fwait
mov
adc
fs
popa
mov
or
pop
cli
es
ins
pop
dec
or
pop
sahf
jns
ficomp
dec
es
lods
jp
cld
popf
shl
bound
and
push
mov
retf
mov
mov
push
retf
in
inc
push
and
lods
jns
and
cmp
cs
and
push
outs
sub
jp
mov
aad
jge
cmps
adc
push
dec
mov
jne
sbb
sti
xor
pop
mov
and
xchg
ss
lock
xor
shl
mov
jae
outs
jecxz
cmp
jl
int
xor
sti
dec
inc
sbb
add
sahf
or
icebp
fisttp
inc
cwde
pop
rcl
adc
out
jmp
cld
ins
pop
js
mov
dec
fidivr
xlat
rol
mov
push
or
cwd
(bad)
stos
imul
sbb
jmp
pop
aam
call
jp
jge
xchg
lea
xchg
cvtdq2ps
fwait
(bad)
jne
fild
or
jmp
imul
xchg
stos
xchg
fcomp
push
inc
add
cmp
push
jns
pop
addr16
jg
dec
in
xor
jl
pushfw
js
aam
pop
sbb
xor
cmp
inc
mov
add
mov
fdivr
cmp
mov
popa
leave
cmps
ins
mov
sbb
xchg
or
xor
mov
dec
out
dec
jp
push
xor
add
xchg
into
test
add
fstp
push
das
data16
shl
ins
adc
jae
push
push
mov
and
in
pop
call
jno
shl
xchg
rcr
and
xor
xchg
shl
cmps
jns
sub
and
bound
(bad)
std
fidiv
ds
imul
inc
outs
scas
data16
dec
jo
loop
icebp
ja
bound
push
imul
cdq
xchg
xchg
or
cmp
add
fsubr
adc
pop
call
bnd
or
fucomi
jmp
pop
and
fstp
sub
gs
lds
mov
push
cmp
test
not
inc
out
data16
out
mov
mov
out
mov
mov
xor
xchg
push
fs
pop
and
daa
leave
pop
push
sahf
test
xor
enter
add
leave
in
jp
cmp
fsubrp
test
int3
pop
mov
xchg
xchg
xchg
inc
fist
imul
mul
jnp
in
sbb
rcr
or
mov
xchg
mov
icebp
ins
jmp
scas
in
ds
jbe
xchg
mov
add
mov
mov
add
jo
in
fdivrp
ins
sub
mov
jl
pop
and
test
popf
cmp
xchg
or
retf
(bad)
in
sbb
mov
or
or
mov
mov
stos
xlat
mov
ud2
shl
aas
mov
stc
ret
add
push
adc
adc
cli
bound
dec
adc
add
mov
jmp
mov
add
adc
jb
outs
(bad)
xchg
and
nop
and
(bad)
fdivr
dec
popf
sbb
mov
jno
and
adc
xor
cdq
repz
int3
sahf
push
inc
retf
pop
les
xor
cmp
or
nop
js
cmp
popf
push
int3
inc
(bad)
cmp
in
xor
loopne
inc
sbb
adc
scas
xchg
dec
(bad)
push
loope
nop
pop
repz
adc
inc
js
scas
mov
shr
fcom
inc
sub
retf
scas
jecxz
mov
aam
or
push
mov
(bad)
sti
test
(bad)
icebp
ror
mov
inc
loope
pop
sub
popa
ja
fsub
pop
fidiv
(bad)
pop
loopne
sbb
jno
bound
call
add
sti
sub
mov
in
repz
pop
add
xchg
sub
enter
enter
out
dec
lock
ret
addr16
not
adc
push
cmp
aaa
out
mov
cmp
add
mul
fldenv
mov
enter
sub
(bad)
enter
adc
outs
cmps
ret
scas
out
fst
xchg
pop
outs
and
fcom
and
repnz
hlt
ss
mov
inc
push
test
sbb
mov
cmp
xlat
dec
push
adc
mov
ins
push
or
cwde
stos
sbb
in
jb
push
xchg
pop
xchg
pop
(bad)
mov
pop
test
leave
mov
jbe
std
xor
hlt
cmp
xchg
cmp
mov
outs
mov
cli
test
ja
int
xor
mov
mov
in
das
sbb
adc
(bad)
rcr
sbb
aad
iret
lahf
mov
fucomi
pop
pushf
cmc
sbb
je
xchg
pop
dec
push
test
sbb
pop
sbb
(bad)
xor
das
inc
pop
loopne
sub
call
lods
and
fist
jmp
sahf
adc
xlat
jl
dec
fsub
leave
out
pushf
sbb
push
call
pusha
jmp
jmp
cli
(bad)
jbe
push
dec
add
dec
jae
mov
shr
cmp
inc
mov
popa
push
xchg
rcl
test
pop
lds
call
cmp
aad
arpl
ins
adc
ror
leave
xchg
mov
adc
pushf
iret
lahf
lods
(bad)
(bad)
out
test
(bad)
inc
adc
jle
fld
enter
xchg
sub
xchg
aad
cdq
add
xchg
inc
int3
fnstcw
repz
and
jl
outs
xchg
mov
dec
mov
adc
sar
stc
in
jne
imul
mov
outs
pushf
cmp
test
push
cmp
mov
fwait
cmp
push
inc
call
(bad)
aam
add
mov
leave
cmps
shr
clc
mov
jle
imul
push
and
push
(bad)
outs
in
cmp
xchg
lea
inc
cli
push
adc
retf
mov
jbe
pop
pop
lock
popa
sar
ins
call
jecxz
adc
cmp
sbb
iret
pop
outs
and
sub
lahf
or
outs
lods
pop
addr16
ffree
not
cdq
push
add
(bad)
fidivr
je
in
add
pop
fisubr
or
idiv
adc
fdivr
sbb
movs
sbb
push
jmp
push
xchg
sub
xchg
push
aaa
gs
aaa
sbb
(bad)
push
pusha
xchg
lahf
push
ins
test
(bad)
xchg
icebp
push
push
adc
cmp
lods
jne
mov
sahf
fs
scas
mov
call
sbb
jb
ret
rcl
jne
or
mov
cmp
and
stos
shl
dec
pop
push
mov
mov
test
repz
xchg
je
dec
push
mov
cmps
pop
xchg
mov
mov
sbb
cli
mov
shr
mov
adc
mov
or
xor
jno
dec
fcom
movs
data16
xchg
jl
or
push
(bad)
jo
out
push
push
rcr
clc
pop
dec
lods
pop
jmp
leave
into
rcl
jb
repz
adc
mov
add
cdq
std
xchg
lds
jg
(bad)
mov
mov
pop
fnstenv
shr
inc
xchg
pop
sbb
in
pop
xor
std
mov
mov
(bad)
(bad)
leave
xor
movs
jl
jns
sbb
mov
mov
sbb
mov
fld
es
mov
pushf
mov
or
sbb
ds
movs
push
push
mov
dec
int3
sti
mov
test
rol
adc
stos
push
and
mov
lods
(bad)
repnz
les
out
xor
lods
jmp
int
cs
inc
jmp
(bad)
int
jge
lods
jmp
mov
(bad)
scas
out
lahf
xor
imul
mov
movs
mov
cld
mov
xor
pop
scas
cmp
pop
sbb
pop
out
or
dec
adc
sbb
ss
and
and
lock
sbb
xchg
nop
mov
pop
dec
sub
pop
sbb
adc
and
das
rcl
push
fucomp
retf
repnz
fs
push
arpl
xchg
mov
cmp
mov
inc
fcmovnbe
iret
add
fstp
cmp
mov
retf
repz
sar
imul
push
sub
cmp
ret
aam
xchg
adc
pop
pop
popf
dec
ret
ret
sar
push
outs
jle
adc
jbe
xor
adc
xchg
mov
movs
mov
test
adc
test
imul
imul
test
mov
sbb
xlat
push
fmul
lds
addr16
mov
out
sbb
pop
pusha
adc
lods
mov
xor
cli
xchg
inc
scas
push
fprem
pop
gs
adc
movs
dec
call
icebp
push
sbb
leave
fcomp
mov
mov
std
adc
int
jle
iret
dec
push
outs
call
pop
push
adc
retf
(bad)
retf
cmps
iret
call
sub
push
push
xchg
adc
retf
int
loopne
jge
ins
repz
mov
stos
(bad)
dec
mov
ss
mov
cmc
inc
scas
daa
test
retf
push
inc
mov
(bad)
iret
pop
adc
cmps
push
mov
aad
call
ficomp
sti
sub
fwait
xchg
fs
mov
and
arpl
into
and
mov
data16
arpl
xchg
and
into
or
ja
(bad)
lock
pop
jbe
sub
rol
xor
out
pop
jno
fidiv
scas
jbe
cmp
ds
retf
fs
ins
cmp
inc
sbb
scas
mov
inc
ret
into
cdq
push
ins
rcl
sahf
test
mul
adc
adc
loopne
icebp
out
in
jo
fidivr
xchg
or
cli
sbb
push
or
xchg
mov
sar
scas
xchg
sbb
xchg
daa
call
(bad)
je
retf
out
push
je
adc
jecxz
jle
push
xchg
sub
xchg
pusha
(bad)
cmp
dec
add
sub
fwait
movs
inc
sbb
xor
idiv
cmps
iret
sbb
add
sbb
mov
push
int3
inc
xchg
imul
adc
inc
mov
adc
push
ja
xchg
mov
mov
ss
pop
imul
push
out
fadd
adc
outs
or
or
mov
outs
outs
push
cdq
(bad)
jl
fs
sub
popa
sub
pop
sahf
mov
fisttp
(bad)
adc
adc
mov
pop
outs
jl
das
shl
outs
pop
out
sbb
pop
cwde
dec
lds
adc
pop
mov
mov
les
mov
pop
cmp
lahf
out
cld
add
push
lods
pop
jg
dec
push
push
and
ficomp
xor
ss
and
and
xchg
dec
(bad)
pop
mov
mov
mov
adc
idiv
les
lods
push
ror
(bad)
adc
mov
jle
rcl
cwde
dec
stos
hlt
xchg
out
fs
stos
inc
sahf
cmp
shr
sbb
xor
ret
adc
das
adc
ret
pop
addr16
pop
xchg
aaa
sub
aas
das
sbb
(bad)
inc
xchg
adc
mov
imul
xlat
div
xor
cmps
pushf
add
(bad)
test
lahf
fsubr
js
push
fwait
aaa
ins
push
mov
cmps
movs
push
cs
test
leave
adc
retf
imul
pop
push
ss
inc
pop
mov
pop
xor
inc
xchg
ds
push
jle
xor
mov
leave
xchg
lds
arpl
mov
pop
(bad)
setge
sti
add
pop
mov
mov
push
test
lahf
sbb
push
sbb
inc
ja
mov
sbb
sbb
dec
jle
adc
mov
test
repnz
pop
aaa
xor
adc
sti
nop
jl
pop
test
xor
cmps
dec
xlat
mov
lea
bound
pop
add
inc
rcr
and
push
push
mov
scas
cmp
inc
(bad)
fbstp
out
xchg
inc
stos
cmp
scas
xchg
mov
cmp
rcr
call
jmp
xor
mov
(bad)
fmul
and
mov
cmps
(bad)
lds
mov
in
out
jne
test
test
sbb
push
jle
iret
push
sahf
sub
scas
cmp
test
push
inc
or
mov
test
es
sub
(bad)
push
xchg
jg
cld
xchg
jo
xchg
adc
aas
push
push
jp
(bad)
inc
pop
fs
jbe
inc
adc
aaa
mov
sbb
ret
sbb
aaa
jnp
clc
adc
rcl
cs
xor
rcl
adc
lahf
jle
lahf
jp
fbstp
adc
pusha
push
lods
ins
out
cmp
daa
mov
pcmpgtw
(bad)
mov
stc
jns
stc
push
push
push
iret
mov
stos
adc
stc
imul
in
push
pop
push
pop
mov
inc
push
repz
sbb
cmp
push
(bad)
aas
fdivrp
lds
arpl
imul
fimul
in
jge
adc
lea
lods
sahf
cmp
sub
jle
jmp
mov
test
in
xlat
fmul
push
enter
bound
cmc
sub
push
sar
test
and
xlat
(bad)
jo
fild
test
fcomp
sub
daa
adc
mov
push
push
pop
in
push
jno
mov
fadd
inc
inc
shr
mov
jns
add
call
pop
(bad)
mov
cmps
div
mov
icebp
push
test
cwde
lods
push
out
jg
push
fwait
add
cmps
das
xor
adc
sar
and
adc
(bad)
addr16
leave
mov
jb
scas
int
ret
in
xchg
pop
cdq
loop
jecxz
loopne
iret
out
ret
push
mov
sar
fsubr
mov
lock
rcl
fucomip
cwde
lea
aam
aad
call
out
mov
(bad)
arpl
mov
jae
sbb
mov
mov
mov
push
mov
call
imul
push
loopne
jbe
imul
mov
sahf
dec
mov
and
add
mov
adc
sub
out
arpl
(bad)
pusha
jg
imul
cmp
ins
rcr
xchg
fst
pusha
mov
sbb
imul
dec
push
aad
in
lods
pop
sbb
jge
adc
ret
inc
mov
mov
jmp
mov
aam
mov
xor
ja
shl
jno
gs
or
dec
stos
ss
idiv
bound
cmp
push
sub
ss
add
push
jle
lods
dec
(bad)
or
into
push
mov
pop
ss
xor
adc
sahf
arpl
jmp
dec
cmps
scas
cdq
pop
movs
pop
test
dec
mov
push
test
rol
or
cli
mov
dec
dec
dec
and
lea
push
test
xor
das
jno
dec
jmp
aas
mov
in
sub
scas
sbb
bound
push
mov
lods
je
icebp
(bad)
out
xlat
imul
push
sbb
mul
or
lds
jmp
std
push
call
xchg
inc
in
fdivr
jbe
mov
lea
pushf
cmc
vunpckhps
jno
arpl
cmp
shl
cs
(bad)
push
jae
sbb
out
test
(bad)
fdivr
dec
pop
jge
pop
addr16
push
xchg
sahf
aad
xchg
push
outs
lods
(bad)
(bad)
into
mov
retf
cld
mov
enter
mov
bound
rol
inc
popf
add
or
imul
sub
daa
cld
mov
mov
fnsetpm(287
iret
pop
jb
push
pop
ret
pushf
fisubr
ins
mov
mov
je
dec
mov
pop
mov
test
shl
rol
int3
inc
cmp
and
sbb
mov
outs
mov
(bad)
pop
sbb
adc
jmp
push
mov
jl
fsub
or
push
dec
enter
leave
(bad)
clc
mov
add
ret
popa
(bad)
jecxz
push
jns
sbb
loopne
sbb
cmps
(bad)
xor
imul
stc
idiv
mov
mov
xor
cmp
and
or
mov
cs
aam
stos
ss
jecxz
jl
fisubr
xor
rcl
jmp
movs
mov
aas
sbb
ror
add
(bad)
es
ror
add
mov
jmp
push
xchg
pop
adc
(bad)
repz
adc
push
inc
cdq
clc
xchg
pop
dec
sbb
push
inc
dec
mov
sub
pop
inc
dec
clc
test
pop
inc
cld
xchg
out
icebp
sub
jle
push
push
xor
inc
inc
jbe
cmp
imul
rcl
jo
pop
dec
add
(bad)
adc
shl
pop
imul
aaa
ja
cmp
sub
add
cmp
push
inc
icebp
push
arpl
lods
mov
loopne
xchg
retf
cmc
ja
lahf
jb
ja
add
cmp
imul
fs
xor
adc
sub
cmp
inc
stos
jecxz
sub
fadd
aad
or
mov
mov
jnp
rol
(bad)
mov
mov
dec
(bad)
mov
adc
(bad)
jmp
arpl
inc
inc
es
pushf
sti
rcr
mov
(bad)
data16
imul
popa
mov
jp
inc
ret
sti
jno
and
dec
sub
mov
ins
cmp
push
movs
jbe
and
mov
imul
cmp
xchg
mov
cwde
and
aas
jp
add
retf
jl
pop
out
mov
cmp
mov
pextrw
mov
movs
jo
xchg
mov
xor
ret
sub
push
mov
int
cs
mov
rol
xor
push
in
ins
jbe
xchg
popf
fcom
mov
inc
pop
adc
mov
in
test
push
lock
fstp
sti
aas
(bad)
daa
shl
rcr
push
sbb
inc
(bad)
fiadd
imul
jbe
aaa
repz
and
mov
in
stc
sub
inc
cli
sahf
xchg
stos
pusha
dec
pop
pop
xchg
idiv
fmul
pop
push
pop
sub
jo
push
out
sbb
lea
dec
lds
(bad)
jb
jmp
jge
inc
pop
movs
and
push
fs
sub
(bad)
sbb
int
dec
stc
scas
movs
jne
ror
outs
daa
and
stos
fnstenv
es
js
sbb
pop
ins
inc
data16
fwait
call
ins
mov
xor
mov
test
add
inc
add
js
out
xchg
pushf
jl
test
jns
rcl
dec
and
clc
sti
js
shl
adc
adc
or
fs
mov
cmp
fcomp
mov
or
dec
aam
into
stos
cld
push
jmp
dec
idiv
hlt
rep
ss
mov
in
mul
xchg
xchg
push
sbb
fsub
dec
pop
adc
data16
sub
adc
sbb
test
out
push
sar
loope
jg
mov
push
dec
ja
fst
sub
(bad)
sahf
sbb
outs
fcomip
outs
push
cmp
jnp
fcmovne
test
ds
push
xchg
xor
pusha
stc
xor
cmps
mov
mov
inc
stc
push
push
pushf
cli
inc
sbb
cs
push
ret
sbb
sbb
mov
and
and
sub
and
in
cmp
sbb
or
xor
and
push
xchg
pop
push
stos
test
sub
cwde
dec
adc
adc
lea
jno
inc
xor
cld
pushf
stos
cmp
cmp
dec
scas
jne
(bad)
retf
fs
adc
jge
mov
jmp
mov
and
in
lahf
call
dec
in
gs
lahf
in
rcl
daa
sar
je
inc
adc
push
std
pop
lahf
bound
push
out
cmp
mov
mov
cld
sbb
push
cmp
arpl
jbe
retf
call
icebp
jge
out
repz
test
or
int3
mov
mov
xchg
jecxz
repz
and
fmul
iret
cmc
sub
cmc
shr
mov
outs
cmp
push
sub
pop
jno
call
aaa
ss
mov
mov
xlat
ins
xor
fs
inc
dec
gs
push
inc
jns
pop
lea
and
popa
rol
retf
retf
pusha
lock
pop
call
mov
retf
mov
clc
nop
pop
xchg
dec
xchg
or
nop
or
mov
int3
aad
cmp
adc
std
ror
(bad)
aam
jnp
and
mov
rcr
sahf
add
fisubr
xor
mov
push
arpl
icebp
cmp
loope
in
pop
push
or
adc
cmp
pop
inc
cwde
xchg
ss
and
xchg
xlat
cmp
sbb
out
in
add
fs
arpl
je
or
pop
xor
iret
adc
push
jmp
cmp
test
out
int
push
ret
call
sub
mov
jmp
std
jne
out
jg
pop
sub
ins
add
sub
sbb
xor
dec
mov
pop
repz
inc
mov
and
les
push
stc
push
lahf
jg
lods
adc
aas
mov
popa
sbb
fstp
or
or
pushf
rcr
(bad)
mov
jne
jno
ja
adc
or
adc
add
movs
or
push
or
sbb
es
lds
push
or
arpl
shr
inc
or
int3
lods
fldcw
cmc
cmp
sbb
fbstp
sub
push
bound
clc
retf
lock
and
cs
mov
dec
cdq
pop
cmc
iret
cmp
es
leave
movs
sub
test
pop
popa
mov
pop
dec
jle
(bad)
ficom
adc
jbe
enter
inc
jnp
inc
pop
lds
frstor
(bad)
adc
xchg
stos
adc
int
xchg
test
fldenv
test
dec
cmp
jge
fiadd
lods
lds
xor
push
les
fild
cmps
ins
mov
mov
dec
xchg
adc
mov
jmp
jecxz
mov
sbb
aaa
js
jnp
inc
and
ds
sub
test
cli
push
pusha
(bad)
sbb
mov
xor
inc
and
xor
lahf
pop
mov
sub
push
adc
iret
fild
inc
pop
in
inc
(bad)
mov
lea
sub
es
test
in
std
lds
ret
push
popa
cwde
cmp
repnz
sub
ret
jge
push
in
pop
in
int3
sbb
lods
in
pusha
call
xor
imul
mov
xchg
(bad)
fistp
movs
in
xchg
cwde
test
mov
xlat
pop
(bad)
pop
cmp
dec
into
enter
outs
iret
fisttp
nop
out
test
cmp
sbb
cmp
or
cdq
push
iret
(bad)
and
mov
test
jle
cmps
or
fnstenv
adc
(bad)
push
or
pop
(bad)
outs
mov
xchg
loope
sub
mov
aas
lods
mov
push
inc
fadd
js
sbb
and
rcl
stc
fadd
aas
pop
mov
xchg
cmps
sub
or
fistp
jns
cmp
ret
xor
sbb
mov
mov
ja
cwde
xor
and
test
ins
or
mul
pop
mov
dec
inc
xlat
push
adc
cmp
outs
stc
cli
jmp
int
dec
rcl
lock
loopne
mov
or
inc
pop
int3
aas
jmp
aas
sub
sub
mov
jp
inc
xor
ret
retf
pop
inc
and
adc
pusha
jnp
mov
push
outs
adc
mov
daa
mov
scas
push
pop
cmp
push
xor
dec
jo
gs
jmp
lods
cmc
mov
add
cmp
inc
shl
shl
and
mov
and
sar
pop
jmp
or
bound
sbb
fwait
mov
sahf
jl
add
fwait
xlat
xor
mov
lock
nop
lods
add
add
imul
jne
mov
xchg
mov
fcmovne
pusha
push
push
je
sbb
jmp
leave
es
ins
push
in
push
adc
mov
cmp
mov
xchg
xchg
mov
out
adc
mov
iret
inc
pop
or
enter
mov
dec
adc
fs
jne
fnstcw
loopne
aaa
add
rcr
pusha
ins
fisubr
pop
dec
adc
mov
outs
popf
xchg
aad
movs
xchg
and
add
mov
and
in
mov
jecxz
into
mov
imul
retf
call
mov
popf
jle
mov
and
pop
stc
jge
aam
ja
jns
jae
cmp
push
push
adc
sbb
dec
pusha
out
mov
cmc
mov
or
call
lahf
xor
and
(bad)
mov
mov
cmp
mov
je
and
ret
cmps
sub
sub
popf
scas
outs
pop
push
jo
ins
outs
add
int
xor
xor
mov
push
pop
out
pop
retf
cmps
imul
and
int3
push
out
jl
jnp
ficomp
int3
sbb
push
jle
pop
and
outs
das
add
aam
test
mov
out
(bad)
scas
int
mov
(bad)
fcom
lods
int
mov
cs
call
mov
repz
dec
popa
xor
push
(bad)
ins
cmps
aad
mov
inc
retf
push
shufps
outs
outs
pushf
sahf
push
cmc
or
sbb
add
adc
shl
sub
aas
push
inc
or
nop
sar
fstp
pop
cwde
(bad)
sbb
dec
and
cdq
dec
sbb
retf
sub
(bad)
push
gs
das
scas
sub
jle
mov
nop
sbb
sub
not
pop
mov
push
xor
cwde
daa
push
mov
adc
xlat
aad
dec
fdiv
mov
xchg
mov
jns
retf
mov
push
push
cli
and
ins
loopne
dec
test
daa
mov
sub
sbb
xor
pop
out
cmp
adc
sub
test
push
outs
mov
ret
aaa
stos
sub
inc
or
dec
push
add
loope
dec
(bad)
lods
dec
jg
ins
popa
adc
mov
cld
scas
out
fisttp
arpl
and
push
lock
mov
sub
movs
xor
sub
xchg
pop
enter
sub
adc
pop
pop
pop
push
ins
mov
add
scas
push
pushf
push
xchg
aad
lods
ror
sub
fwait
sbb
ss
cs
mov
mov
cmp
mov
in
(bad)
out
sub
pop
lock
and
and
icebp
xchg
fcmovb
or
std
nop
pop
sub
inc
mov
or
adc
cmp
das
loop
and
mov
fnsave
outs
cmp
lock
cwde
repnz
adc
or
js
push
add
(bad)
mov
fsubr
mov
pop
stos
xchg
out
mov
push
in
fild
mov
sbb
push
hlt
and
inc
(bad)
aam
jle
scas
iret
and
sbb
and
xor
xchg
in
sbb
xchg
into
or
sub
outs
into
stos
add
xchg
test
cwde
cmp
mov
iret
mov
(bad)
into
mov
out
loop
adc
mov
hlt
inc
push
push
scas
and
popf
std
adc
(bad)
lods
test
dec
fcomip
mov
mov
cmc
dec
mov
jle
aaa
loop
ror
mov
aaa
repz
adc
jne
hlt
imul
add
bound
xchg
hlt
and
pusha
inc
scas
xchg
je
js
add
enter
adc
sahf
outs
or
push
cld
aam
jg
in
xchg
mov
je
enter
dec
in
fnsave
fmul
or
nop
out
push
or
shl
aaa
push
mov
mov
xor
or
fwait
mov
jne
cmp
arpl
mov
outs
aad
sbb
cmp
stos
push
cld
dec
lods
pusha
aam
into
out
div
sbb
iret
out
repz
push
(bad)
scas
mov
ret
cmp
or
(bad)
stc
and
jmp
stc
xor
adc
std
cdq
imul
ins
fwait
call
push
sbb
xor
lock
or
jmp
repnz
add
and
mov
xor
mov
ins
push
mov
dec
retf
stos
pop
sbb
call
stc
outs
cmps
(bad)
iret
fwait
push
lahf
mov
jle
inc
cld
fistp
(bad)
sahf
mov
xchg
mov
int3
ficom
xor
and
mul
xlat
imul
pop
sbb
sar
add
and
(bad)
ss
jnp
rcr
ins
inc
sahf
icebp
out
sar
push
fnstsw
xor
loop
shl
adc
fxch
pmulhw
out
loop
cld
xchg
sti
dec
fsubrp
ret
pop
mov
pop
push
mov
add
ds
outs
jl
push
rol
pop
sbb
lahf
cld
scas
sub
scas
cwde
repz
xchg
pop
mov
xchg
cld
mov
mov
mov
jge
cwde
lods
sub
dec
repz
call
push
push
or
dec
std
xchg
or
xchg
cld
mov
call
mov
int3
(bad)
addr16
pop
fs
and
arpl
jae
retf
cmp
and
aas
pop
out
adc
mov
lds
lds
outs
adc
int3
loop
xor
mov
push
and
and
arpl
sahf
cmp
cwde
pop
cmps
pop
loopne
adc
adc
mov
sub
pop
jne
(bad)
push
shr
(bad)
out
lea
sbb
push
out
es
mov
imul
mov
pop
sbb
push
stc
imul
cmp
mov
daa
sub
iret
mul
sti
hlt
arpl
retf
jecxz
pushf
inc
push
push
jp
mov
inc
lods
(bad)
and
mov
js
pop
cmps
das
aas
or
lods
cmp
jl
push
js
mov
loop
xor
and
xchg
stc
rcr
test
push
lahf
es
imul
adc
xlat
xchg
js
jo
xor
test
inc
jnp
jecxz
scas
sub
cdq
pop
adc
mov
shl
call
dec
add
xchg
scas
adc
test
add
mov
call
(bad)
jmp
add
adc
adc
sbb
pop
outs
pop
cmp
iret
test
test
mov
dec
pop
xor
pop
mov
lods
retf
xchg
mov
sbb
jp
fwait
rcr
xchg
pop
mov
xchg
cmps
push
fs
adc
pop
mov
or
popf
jl
or
cmp
adc
(bad)
adc
imul
and
sbb
hlt
cmp
hlt
mov
or
and
setae
sub
or
dec
pop
das
cld
dec
repz
pop
stc
stos
aam
mov
mov
jne
aam
xor
sti
es
mov
mov
sbb
jne
and
inc
dec
js
mov
adc
xchg
push
mov
lds
repz
repnz
aas
jmp
ins
scas
adc
dec
xor
(bad)
stos
mov
mov
pop
sti
fwait
jl
bound
sub
sub
inc
imul
push
cmc
add
push
imul
pop
pop
jae
adc
cld
out
neg
sbb
or
jne
std
ins
shl
repz
and
daa
push
mov
adc
mov
cs
mov
inc
aad
adc
or
jl
add
jl
ror
xchg
add
loope
sub
jle
and
cwde
and
pop
rcr
xor
pop
xchg
pop
jnp
mov
dec
loop
movs
into
add
and
xchg
mov
cmp
pop
jo
xchg
ins
dec
jnp
scas
movq
aas
cs
(bad)
sar
push
fsub
push
push
jge
push
ficom
call
sub
xor
imul
mov
xchg
out
clc
jl
call
pusha
mov
push
push
int
cdq
ret
jge
pop
ss
xchg
sub
call
xor
mov
(bad)
cmp
adc
sar
stos
imul
sbb
sti
jg
stos
int3
xchg
pop
cmp
jg
sub
loopne
push
nop
mov
test
adc
call
sbb
add
jmp
xchg
addr16
ffreep
clc
aas
add
lods
outs
adc
xchg
(bad)
pop
pop
cs
ret
repz
and
xchg
or
or
and
jle
cmps
call
mov
repnz
ja
inc
xchg
push
push
push
fsub
sub
jg
loop
mov
sub
inc
outs
fild
adc
xchg
fistp
das
outs
pop
cmp
rdpmc
cmps
popf
sti
push
call
push
(bad)
hlt
adc
mov
sbb
imul
aas
pop
cmp
sub
(bad)
mov
sbb
outs
sbb
jmp
and
jg
sbb
jnp
loopne
pop
pusha
sub
xlat
out
adc
inc
mov
cmp
stos
popf
int
mov
add
test
jb
push
ror
out
dec
jb
lahf
and
ror
sahf
leave
pop
imul
push
repnz
fcomp
cmps
data16
rcl
mov
add
leave
push
mov
mov
inc
sbb
pop
jno
xchg
enter
loop
sub
cmp
adc
aas
mov
cli
pop
fsubr
cdq
mov
or
fdivp
lods
cli
or
dec
or
xchg
fstp
mov
lods
cmp
push
sbb
pop
jnp
pusha
add
stos
fcomp
mov
mov
cmp
add
inc
push
jb
or
test
xor
push
and
arpl
not
adc
add
push
push
or
clc
test
xchg
cli
sub
push
sub
or
mov
inc
fwait
shl
xchg
pop
repnz
ficomp
pop
(bad)
sbb
pushf
push
arpl
pop
dec
jmp
call
mov
(bad)
jle
repnz
pop
add
xor
sahf
sub
mov
into
mov
push
dec
movs
les
movs
and
add
call
(bad)
adc
jmp
outs
inc
ret
mov
repz
push
dec
inc
and
sbb
mov
data16
neg
or
(bad)
call
loop
stc
or
shl
cmp
arpl
xor
jmp
repnz
dec
mov
xchg
test
jl
leave
sahf
jns
xchg
int
mov
and
inc
arpl
(bad)
add
(bad)
loopne
jle
in
sub
mov
stos
or
adc
cmp
lods
cmp
push
arpl
(bad)
scas
mov
xor
out
sub
dec
lahf
pop
xor
stos
mov
popf
icebp
and
mov
mov
std
cmp
aad
dec
mov
scas
xor
lea
pop
or
dec
xchg
es
push
pushf
sub
lea
pop
fcomp
addr16
xor
cld
push
adc
in
loop
popf
test
loopne
jl
push
cld
int3
mov
xchg
push
push
(bad)
xor
sub
fadd
sbb
push
outs
jl
icebp
adc
rcr
(bad)
in
dec
dec
pop
popa
test
jmp
gs
jae
ret
out
jne
js
jl
dec
dec
jo
add
and
pop
popa
or
pop
jmp
pop
int
jnp
ret
xchg
jae
xchg
jp
mov
or
xor
mov
sbb
inc
inc
mov
or
pop
test
xchg
pop
scas
push
test
inc
aas
jecxz
sub
pop
repnz
fadd
loop
fcmove
test
mov
mov
std
repz
test
repnz
push
repnz
hlt
cmp
mov
xchg
xchg
pop
pop
mov
adc
lock
sbb
mov
cmp
xor
pop
(bad)
arpl
ret
mov
mov
xchg
add
aam
outs
fnsave
jle
bound
jmp
cdq
ror
js
fdivr
xor
xor
adc
mov
or
xchg
loope
xor
inc
xor
loope
int3
mov
clc
int
mov
or
shl
pop
xchg
inc
push
adc
inc
xlat
and
loop
sub
mov
ja
jl
inc
popf
cmp
cwde
(bad)
push
xor
jmp
leave
sbb
clc
jns
jmp
das
movs
das
std
cmps
popa
inc
pop
dec
je
dec
mov
xchg
push
mov
imul
rcr
pop
cmp
ror
scas
scas
es
fmul
out
jg
dec
dec
mov
xor
ficom
popf
xchg
push
js
daa
mov
mov
xchg
aam
mov
sbb
xor
xlat
push
and
xchg
aam
fisttp
sub
mov
mov
rol
test
rcl
jmp
mov
xor
arpl
arpl
jmp
mov
add
inc
cld
pop
sbb
popf
mov
and
xor
rcr
repz
ins
xor
pop
dec
data16
test
inc
mov
add
jae
setnp
push
shl
xchg
xchg
leave
jge
retf
sub
test
jae
jb
or
mov
test
jbe
jmp
and
adc
add
or
add
call
dec
test
mov
imul
cmps
popf
xchg
addr16
mov
cli
mov
je
push
cmps
mov
inc
pop
add
fmul
mov
mov
and
xchg
push
fcomp
xchg
push
pop
lock
jl
hlt
arpl
mov
inc
pop
or
cwde
mov
push
jne
iret
stos
pusha
ds
(bad)
mov
hlt
pop
add
sub
xchg
lds
xchg
xchg
xor
cmc
xor
xchg
jge
pop
pop
push
cs
loopne
popf
push
enter
clc
sub
sbb
idiv
gs
(bad)
pop
cmp
fmul
cwde
dec
sbb
pop
cld
push
fadd
cmp
xchg
mov
xor
scas
(bad)
jl
mov
cmps
push
xor
push
test
jge
cmps
mov
ret
out
mov
mov
scas
push
jmp
scas
mov
icebp
mov
and
loopne
pop
or
dec
bound
fisub
pushf
outs
or
lods
out
and
nop
pop
lods
xor
out
arpl
xchg
inc
jp
aam
gs
cmc
push
mov
(bad)
mov
mov
adc
mov
scas
jp
lds
lods
jo
test
pushf
xchg
mov
test
scas
inc
dec
mov
movs
xor
inc
repz
pop
dec
adc
(bad)
div
cmp
add
cs
mov
jae
push
int3
cdq
ret
mov
sbb
adc
mov
dec
jno
xlat
sbb
mov
and
jmp
mov
cs
pop
push
sub
pop
sti
cmp
and
aad
cwde
and
in
mov
ds
pop
or
and
adc
and
push
jl
test
movs
mov
aaa
inc
mov
sti
and
fbstp
jnp
cmp
mov
imul
(bad)
int3
or
jo
dec
cmp
pop
add
test
hlt
ss
xchg
pop
lds
test
mov
sbb
fwait
stos
loop
sub
jb
push
sub
stos
or
(bad)
sahf
pop
(bad)
xchg
fdiv
ret
scas
add
fstp
mov
xor
xor
push
push
loope
iret
scas
push
or
dec
out
inc
jmp
aas
cmp
mov
push
add
scas
sub
fcomp
pusha
cmp
cmp
xor
sar
xor
add
xor
enter
sub
sbb
push
data16
and
inc
mov
cmps
jmp
ret
fdivp
scas
test
mov
push
sbb
add
sub
or
push
rcr
shr
dec
sub
loopne
xchg
sbb
xchg
pop
addr16
inc
test
mov
xor
int
cwde
mov
xor
jg
stos
enter
ss
test
cmp
sub
and
es
imul
aam
gs
in
cmc
mov
xchg
retf
hlt
pop
sbb
or
push
idiv
movs
inc
outs
and
or
lock
jp
ss
sahf
mov
pop
outs
xchg
icebp
push
cli
push
popa
cwde
(bad)
dec
lea
aad
rcr
xchg
cld
pop
sbb
pop
cmp
jecxz
(bad)
fcomip
call
push
jnp
ret
push
imul
pushf
imul
xor
ret
sti
mov
(bad)
pop
popf
xchg
shr
mov
adc
fwait
iret
mov
sahf
mov
pop
mov
and
inc
xchg
cli
outs
jmp
jne
addr16
xchg
bound
test
pushf
dec
fdivrp
add
clc
fild
jg
(bad)
ret
repnz
jl
hlt
xchg
cmp
adc
xchg
pop
ret
mov
in
push
pop
stos
stos
fst
das
hlt
push
iret
xchg
dec
pop
in
mov
dec
fs
mov
xchg
pop
or
mov
push
or
icebp
mov
inc
xor
pop
mov
jg
dec
jle
push
in
xchg
pop
icebp
or
jbe
sbb
xchg
ret
jbe
test
stc
popa
adc
cmp
sbb
ins
jmp
sub
push
push
cld
(bad)
ds
mov
push
aam
test
scas
fs
cwde
bound
sbb
jne
mov
loope
test
push
pushf
jmp
push
jnp
add
(bad)
dec
repnz
call
xor
loopne
loop
inc
bound
push
inc
call
push
iret
scas
sub
jno
sbb
(bad)
scas
xor
xchg
out
sbb
ss
sbb
or
xchg
aaa
cdq
dec
imul
(bad)
pop
outs
pop
cld
push
scas
sbb
out
sub
sbb
lahf
dec
sar
sub
mov
push
stos
xlat
fwait
sub
imul
cmp
paddsb
nop
cmp
lods
stc
add
pop
sub
pop
daa
out
dec
fist
test
sbb
fdivrp
je
push
pop
xchg
shl
xchg
je
ret
sti
sub
vrcpss
rcl
add
xor
icebp
nop
dec
push
ror
inc
jo
xor
cmp
mul
stos
aam
fld
cdq
inc
cld
sbb
push
add
fstp
mov
push
pop
adc
mov
or
test
bound
movs
ins
push
pushf
lds
xor
xor
(bad)
test
movs
push
jnp
sub
xor
xchg
out
aam
stc
and
std
sbb
jnp
pop
in
stos
fdivr
retf
pushf
push
xchg
lock
mov
sbb
mov
push
dec
repz
test
adc
xchg
mov
ror
outs
mov
daa
fstp
mov
test
pop
cmps
sbb
inc
push
nop
fs
mov
jmpw
stos
fild
inc
pushf
sbb
and
jl
mov
push
or
movs
mov
arpl
call
jg
nop
ja
mov
jl
lahf
dec
pushf
call
sub
dec
mov
push
cmp
imul
leave
or
int3
and
fbld
xchg
adc
icebp
sbb
and
and
pop
mov
sbb
ins
cmp
out
xor
addr16
fnstcw
pop
cmp
arpl
jns
movs
or
ror
jp
into
push
int3
add
mov
push
adc
jl
push
push
loope
fs
pop
test
and
loop
cmps
(bad)
imul
mov
dec
outs
cmp
ret
push
xor
call
cli
jp
sub
or
fild
cmp
xchg
fxch
or
nop
pop
sub
cmp
repz
jae
inc
push
ja
das
gs
aaa
xchg
pop
sbb
jge
mov
jl
cmps
ins
inc
xchg
adc
popf
inc
ja
mov
push
cdq
adc
and
(bad)
cmp
push
(bad)
pop
xchg
dec
mov
mov
sbb
lods
shr
addr16
add
cmps
das
push
push
fdivr
lds
add
mov
lahf
rol
bound
xor
inc
bound
fsub
add
enter
cwde
shl
sub
arpl
fistp
leave
mov
cmp
mov
cmp
add
sbb
cmp
dec
adc
mov
out
mov
jns
xchg
cvtdq2ps
into
out
les
int
dec
lea
pmulhuw
das
push
je
lods
sbb
pop
or
push
arpl
mov
jge
scas
les
jmp
and
(bad)
cmps
or
dec
in
ins
pop
push
push
xchg
std
pop
sub
mov
mov
inc
adc
mov
mov
or
mov
cmp
mov
pop
mov
or
xor
ja
cmp
fwait
pop
pop
mov
or
std
stos
mov
cmp
(bad)
mov
xchg
repz
fucom
cmc
imul
gs
arpl
cmp
xor
loopne
iret
cmp
fnsave
mov
mov
sti
cdq
jmp
outs
adc
daa
xor
adc
add
or
xchg
ja
fcmovnbe
in
in
xchg
out
adc
xlat
lods
sub
das
jle
outs
or
js
mov
lods
aad
sub
dec
mov
aad
fwait
lahf
jp
mul
cld
iret
sbb
jae
adc
pusha
and
xchg
sbb
add
arpl
pop
xchg
jno
pop
pop
mov
mov
std
xchg
xchg
hlt
dec
outs
call
xchg
leave
pushf
cli
mov
add
lea
das
jno
and
cmp
xchg
repz
shl
sbb
enter
dec
push
add
aam
add
add
ret
cmp
push
jnp
imul
pop
mov
mov
pop
jmp
add
jne
mov
push
pop
inc
in
inc
scas
sub
push
mov
enter
push
sub
xor
mov
or
add
imul
sbb
jg
push
and
mov
gs
lods
push
push
mov
sub
xor
cs
movs
in
sbb
test
(bad)
fild
cmps
push
cwde
xor
lods
add
fiadd
add
pop
cmp
hlt
xor
sub
lds
lock
mov
add
bound
xlat
mov
and
movs
add
mov
repz
adc
sbb
jns
jl
outs
fstp
data16
fcomp
sub
call
pusha
xchg
das
cmc
adc
cmp
pop
outs
mov
xor
xchg
add
lock
mov
outs
pop
mov
cmps
adc
push
xchg
retf
mov
pop
sbb
mov
outs
xor
(bad)
dec
mov
ret
push
mov
aam
sar
adc
and
jnp
adc
popa
sub
es
jl
mov
shr
mov
mov
lea
xchg
mov
iret
sbb
fdivr
push
movs
pusha
mov
movs
stc
push
push
mov
and
push
sub
leave
adc
in
call
cmp
idiv
push
out
add
xlat
inc
bound
leave
sub
dec
std
out
cdq
push
xchg
lahf
sub
daa
inc
cwde
pop
popa
test
stos
jno
pop
in
lods
cmp
adc
cmps
mov
mov
jmp
dec
es
mov
push
leave
jo
sahf
outs
push
ret
adc
push
jmp
imul
pushf
mov
fwait
test
imul
cmp
pop
pop
in
xor
call
mov
pop
add
adc
jns
and
xor
xchg
jb
push
cld
out
ss
jne
push
(bad)
fsub
dec
fadd
or
mulps
adc
jns
sub
sbb
add
add
(bad)
(bad)
jb
scas
pop
xor
adc
rcl
stos
adc
pop
sub
popf
mov
jnp
jp
pop
xchg
xor
cdq
dec
push
daa
sub
sub
ins
es
mov
stos
ror
dec
lds
jnp
xor
gs
xchg
cli
movs
(bad)
push
sub
cs
xor
adc
xchg
pop
cmps
aas
and
xor
push
pusha
cmp
lods
jle
pushf
mov
pop
mov
jp
xor
fadd
aam
mov
outs
push
imul
sahf
xor
inc
shr
add
ret
pop
dec
sahf
mov
or
sar
in
imul
and
push
shr
out
sahf
out
bound
fisttp
fcomp
(bad)
jae
stos
cmps
sahf
cmp
in
push
sub
or
ror
xchg
fdivr
mov
lea
push
in
cmps
pop
pop
ficomp
pushf
cmp
movs
sahf
(bad)
mov
out
mov
adc
cli
sub
pop
repz
cs
sbb
gs
push
movs
fucomp
xchg
clc
pop
mov
jg
shl
adc
iret
lock
xlat
jns
sub
out
and
mov
aad
sub
out
push
inc
inc
dec
fdivr
std
ins
sbb
sahf
push
push
xor
imul
enter
mov
mov
mov
movs
stos
das
retf
ss
sti
aad
and
cwde
mov
jns
and
mov
mov
ret
outs
or
push
mov
cdq
jecxz
jno
adc
in
xor
in
leave
jp
lahf
fs
or
ja
not
jl
(bad)
popf
fist
dec
push
pop
jl
out
xchg
push
outs
div
lea
adc
aaa
retf
mov
lds
pop
outs
or
ins
fiadd
loopne
lock
arpl
lea
aad
jns
jo
add
sub
jmp
jg
les
mov
cmp
fisttp
ss
add
sbb
ret
movs
sbb
cmp
retf
sbb
dec
adc
cs
dec
aam
xchg
repz
sub
fistp
fstp
sbb
(bad)
cs
in
test
jl
push
sub
ja
cld
inc
cld
push
(bad)
mov
sub
mov
pop
enter
mov
mov
cmps
pop
out
repz
dec
push
sub
push
(bad)
rcl
dec
ret
sbb
and
imul
ds
clc
and
lods
ret
fisub
or
pop
test
lods
mov
fist
mov
push
pop
int3
outs
gs
inc
cmp
daa
imul
sub
loope
test
ret
cmp
daa
pop
test
into
xor
jns
xchg
push
dec
call
dec
enter
cmc
jp
fadd
xor
cli
cmp
mov
sub
mov
mov
cli
imul
push
idiv
add
je
inc
jmp
pop
stos
mov
add
and
ret
repnz
fwait
add
push
mov
push
sbb
or
call
xor
in
lock
xchg
mov
cmps
aad
mov
and
ret
loope
lods
test
and
dec
aam
ficomp
mov
je
ret
aam
pushf
push
mov
scas
(bad)
mov
sbb
ins
mov
push
call
call
xor
repnz
pop
mov
gs
pushf
gs
imul
daa
push
lock
rcl
enter
xchg
mov
sbb
jb
mov
es
sbb
fidivr
or
adc
sub
inc
js
jno
pop
cmps
push
push
pop
add
sar
dec
sbb
lods
dec
xor
xchg
push
sbb
je
xchg
jle
xor
xchg
inc
cli
push
xor
or
adc
addr16
or
adc
lea
mov
scas
aad
push
imul
xchg
adc
cmp
jge
sbb
mov
test
mov
xchg
in
pop
enter
jg
mov
and
in
jmp
jmp
int3
pusha
ins
mov
sub
dec
push
pop
sub
fldenv
ret
mov
sahf
xchg
jle
movs
mov
lea
jg
icebp
les
cmp
push
idiv
mov
in
ins
push
sub
jns
gs
imul
pop
dec
pop
cmc
push
push
cmp
pop
je
cmps
and
(bad)
fs
jmp
pushf
sub
sub
rol
and
aam
shr
std
push
sbb
sub
pop
scas
mov
imul
fmul
cmc
loopne
cmp
adc
adc
outs
sub
mov
push
add
fist
rcl
(bad)
repz
(bad)
fstp
push
ss
and
pop
arpl
fs
cmp
or
(bad)
xchg
clc
add
dec
jnp
gs
add
sahf
pop
cld
jl
stos
shl
pop
xor
push
adc
ins
ins
dec
leave
pop
push
adc
leave
ffree
in
inc
xor
arpl
push
pop
add
push
sub
fdivp
js
push
jp
jg
popa
inc
mov
pop
xlat
sbb
xchg
ret
adc
setns
movs
jnp
lahf
and
push
xor
push
jg
cmp
(bad)
cld
or
int3
imul
and
ret
inc
cmp
sub
adc
pop
hlt
xchg
xchg
mov
adc
xchg
outs
sbb
mov
sbb
push
sbb
mov
dec
shl
jnp
pop
pushf
sub
lods
movs
sbb
cs
jnp
or
jnp
pop
test
loop
push
adc
shl
jbe
push
scas
je
sub
out
shl
push
ds
xchg
mov
ror
or
pop
mov
dec
fsubr
(bad)
shl
movs
mov
bound
mov
fcom
mov
outs
clc
xor
sbb
inc
pushf
imul
jnp
pop
int3
popa
out
adc
mov
push
mov
in
test
outs
mov
push
pushf
mov
pop
push
mov
ins
movs
sub
xchg
cmp
push
mov
dec
sbb
ins
retf
inc
xchg
arpl
rcr
mov
or
cmp
adc
pop
and
jge
out
sbb
jnp
mov
jge
int
cmp
push
push
rol
cmp
test
mov
xor
and
ds
cld
jge
ins
fsubp
cmp
clc
xchg
mov
push
add
push
or
out
inc
cmp
neg
sbb
pushf
ret
cmp
mul
and
adc
js
inc
cmp
xor
mov
mov
out
test
fistp
js
dec
mov
sub
push
push
ins
aad
jecxz
scas
in
sbb
and
mov
mov
popa
dec
mov
loopne
jle
rol
add
xchg
mov
xchg
pop
sbb
dec
leave
lds
hlt
adc
daa
shr
mov
adc
test
imul
ins
arpl
mov
ds
call
add
pusha
or
inc
iret
aam
arpl
mov
fld
or
sbb
dec
push
adc
shl
jl
pop
retf
shr
pop
cwde
rcl
pop
aam
pushf
icebp
xlat
add
call
and
loopne
fadd
aaa
adc
(bad)
ror
xchg
sbb
and
mov
xor
push
xchg
fnstcw
cmp
or
xor
sub
xlat
sbb
out
pop
mov
sbb
jne
int
xchg
adc
sub
sub
adc
test
mov
adc
xor
mov
hlt
pop
fucomi
fldl2e
xor
retf
int3
or
sbb
jge
out
xchg
ror
sbb
aad
stos
xor
pop
retf
jb
cdq
outs
mov
shr
jbe
jne
sbb
xlat
push
xchg
push
dec
cmp
pop
ret
inc
pop
mov
(bad)
mov
jnp
pop
rep
cmc
fwait
and
call
(bad)
mov
inc
cmps
lock
retf
and
test
push
push
push
jmp
and
jecxz
loope
adc
inc
mov
inc
mov
mov
mov
and
lds
and
inc
pop
cmp
lahf
jmp
fistp
and
inc
and
lods
cmps
xor
cmp
pop
iret
sbb
cdq
in
lahf
ret
push
fucomip
fnstsw
test
pop
cdq
std
dec
enter
adc
lea
push
push
add
stos
xchg
and
add
rcl
repz
and
sub
and
pop
stc
jae
lea
sub
in
or
jmp
or
loope
pop
or
dec
mov
inc
push
in
cmps
xchg
jp
xor
retf
push
out
sbb
jmp
mov
xchg
push
iret
ds
push
leave
repnz
daa
shr
fst
add
pop
outs
pop
jp
pop
sbb
cmp
fsub
adc
lds
xor
sbb
cmc
push
call
enter
faddp
xchg
or
in
popa
push
fwait
das
sub
add
movs
push
fidivr
shr
fst
xchg
je
call
sub
mov
mov
dec
fistp
test
sub
fistp
fbld
cdq
xchg
out
cmc
jle
into
test
adc
sub
fistp
jmp
mov
sub
inc
jo
aam
mov
sub
cmp
jno
ja
and
lds
dec
mov
cmps
neg
aam
sahf
mov
add
sub
inc
pop
gs
sbb
mov
repnz
arpl
mov
or
addr16
cmp
inc
mov
(bad)
pushf
sub
fstp
sahf
in
js
int
adc
sbb
mov
push
mov
adc
xchg
sbb
pop
pop
mov
xlat
xchg
jo
popf
jmp
mov
fcomip
(bad)
adc
cld
loope
xlat
pop
mov
dec
in
repnz
push
mov
fcomp
(bad)
or
inc
adc
ret
and
call
jl
push
int3
push
dec
pop
mov
mov
not
stos
inc
adc
xor
jg
lods
repz
cmc
shl
lock
les
cmps
inc
ret
cmp
ror
xchg
es
ins
(bad)
sub
xchg
scas
or
pop
or
and
or
test
ret
nop
push
sub
scas
add
mul
inc
cwde
ret
inc
fdivr
in
(bad)
cmp
je
dec
jl
inc
pushf
inc
lock
jl
int
fild
popf
adc
mov
mov
add
inc
jl
int
and
push
pop
mov
mov
movs
add
sbb
cmp
aad
cmps
movs
js
jmp
mov
jnp
movs
inc
mov
cmc
outs
lods
into
inc
lods
loopne
pop
mov
dec
scas
and
jb
adc
bound
add
inc
movs
mov
fcomp
mov
sbb
loope
gs
fxch
in
sbb
xchg
les
mov
test
sahf
push
push
pop
xor
ins
stc
adc
pop
je
jmp
fs
sbb
xchg
cwde
div
mov
sub
clc
pop
sub
add
cmps
xchg
xor
stos
mov
aas
and
sub
loop
(bad)
sub
fld
test
(bad)
sub
(bad)
es
hlt
and
xor
call
das
mov
std
ret
xor
mov
sbb
sub
sbb
mov
cld
and
sbb
jns
pop
add
scas
movs
mov
xor
inc
outs
(bad)
cmps
fidiv
rol
sbb
repz
mov
es
setae
cdq
or
cmp
jge
jp
(bad)
pop
call
cwde
push
in
fs
cs
call
sub
call
(bad)
cld
jbe
inc
jl
xor
dec
outs
idiv
mov
dec
sti
iret
inc
push
icebp
push
or
jecxz
popf
add
retf
add
jg
call
jecxz
mov
fstp
lea
mov
repnz
ret
lea
xchg
dec
mov
inc
lahf
pop
mov
imul
out
dec
hlt
or
xor
add
aas
lods
jb
xor
jae
ror
xchg
push
sti
jae
outs
das
add
bound
iret
mov
int
into
adc
data16
rcl
jno
adc
fiadd
mov
stos
xlat
cmp
out
hlt
stos
mov
pop
inc
pop
std
inc
aad
cs
push
and
jl
inc
adc
lahf
out
mov
cmp
mov
scas
aam
ret
xor
pop
outs
imul
call
dec
lahf
add
or
jno
pop
enter
mov
jbe
xor
popa
scas
xor
cli
pop
sbb
lds
pop
popf
arpl
stos
jne
mov
dec
clc
ret
jno
not
or
repz
mov
test
adc
rcr
rol
pop
cld
test
or
pop
or
mov
pop
sbb
mov
push
sub
jle
pop
daa
xchg
push
aad
fadd
fadd
mov
adc
shr
cmp
push
pop
ret
scas
pop
or
xor
aaa
pusha
shl
push
rcr
push
add
inc
scas
out
push
retf
mov
lock
pop
fisubr
out
jp
inc
inc
inc
fst
xor
popf
jl
pop
cmp
pop
add
cdq
sti
aam
push
enter
push
nop
cmp
sub
je
sbb
inc
inc
jge
dec
inc
pop
lea
imul
sub
std
mov
in
sub
pextrw
out
fimul
lods
or
cs
ds
push
mov
jge
int
iret
sub
pop
aam
fcomp
popf
loop
fptan
cmp
ficom
dec
xor
inc
aad
push
mov
in
xor
scas
and
mov
jg
imul
jbe
dec
fs
dec
aaa
nop
push
mov
xchg
retf
mov
(bad)
fsub
mov
mov
add
pushf
popf
fsub
inc
mov
test
nop
sahf
xchg
out
(bad)
mov
lds
sti
sbb
xchg
mov
imul
sbb
ja
dec
jo
cmp
addr16
fst
xor
mov
xchg
and
or
sub
(bad)
mov
xor
popf
bound
adc
adc
cmp
cs
push
je
gs
cmp
test
loop
dec
cdq
xchg
scas
sub
adc
jnp
inc
das
push
inc
adc
jno
pushf
adc
repz
mov
ins
jl
in
mov
call
xor
jecxz
push
out
in
cld
popf
sbb
dec
ret
xor
cmps
in
aaa
mov
popf
sti
mov
cmc
mov
mov
sbb
mov
ins
push
jo
je
movs
xor
mov
xchg
add
cld
dec
in
hlt
sub
or
cdq
fsubrp
fs
jbe
xchg
dec
adc
fwait
xor
cmp
dec
xlat
mov
bound
jge
jp
and
xchg
sub
mov
(bad)
(bad)
and
xchg
inc
mov
scas
lahf
inc
push
aam
lods
pop
cwde
lahf
cmp
lods
dec
jg
cs
adc
ins
outs
cmps
jmp
xchg
mov
lahf
pop
mov
pushf
(bad)
add
(bad)
jmp
xchg
or
retf
or
sbb
pop
sbb
inc
sar
fwait
jns
mov
pop
xchg
(bad)
mov
arpl
xchg
mov
and
adc
mov
leave
(bad)
daa
push
jmp
xchg
cdq
retf
pop
ins
or
or
stos
cmp
mov
sbb
call
das
mov
inc
fsub
mov
popf
dec
ss
adc
aaa
sub
(bad)
popf
mov
shr
ret
(bad)
neg
xchg
scas
xor
cmc
pop
pop
xlat
jo
test
aas
dec
mov
(bad)
pushf
mov
xchg
rcl
pop
xchg
cmp
xchg
test
sub
cmp
jl
ins
sbb
outs
xchg
stc
pop
test
pop
push
sub
retf
js
sbb
xchg
in
cmp
mov
sar
sbb
cdq
ja
jno
cs
pusha
(bad)
cmc
loopne
ins
mov
mov
in
(bad)
imul
mov
dec
jb
stos
scas
push
in
pop
shr
adc
retf
push
push
pop
xor
popf
mov
lea
or
jbe
cmp
cs
sahf
stos
repnz
ins
jae
sbb
pop
ds
out
inc
pop
jge
adc
loopne
fild
fwait
sbb
or
xchg
popa
pop
inc
aas
jmp
into
or
inc
mov
adc
pop
sbb
lahf
std
mov
pop
push
arpl
(bad)
cmp
sar
jno
lahf
xor
mov
cmp
hlt
mov
popf
retf
mov
or
inc
xchg
pop
pushf
pop
lea
fcomip
jae
push
pop
cmc
mov
outs
mov
fnsave
add
xor
cmp
mov
xor
fs
loopne
sahf
mov
pop
das
xchg
adc
mov
mov
push
push
dec
pop
jecxz
adc
fld
cmp
push
ins
push
pop
push
pop
mov
adc
shl
mov
inc
inc
mov
cld
add
cmps
xlat
pushf
jnp
mov
dec
jo
inc
mov
sbb
and
or
sub
cmps
cmp
xor
ss
fstp
pop
pop
retf
dec
in
gs
push
shr
inc
cmps
xor
out
into
daa
mov
es
ins
push
imul
ins
push
and
shl
mov
xor
ret
in
jmp
ret
push
retf
cmp
sub
ins
jg
mov
fsub
pop
scas
dec
retf
daa
sbb
mov
cdq
mov
push
pusha
mov
popa
mov
stos
pop
movs
ds
cmp
pushw
dec
push
std
push
mov
mov
xlat
jne
ss
out
xor
mov
mov
or
je
and
or
sub
cmps
jo
scas
cmp
mov
imul
push
out
dec
hlt
lahf
sar
loope
push
div
add
cmp
sub
dec
lds
pushf
pop
not
mov
jmp
aad
jbe
nop
xchg
adc
mov
cmp
jmp
fs
mov
sub
xor
outs
pop
add
repnz
sbb
xchg
rcl
outs
push
fnstsw
push
pop
xabort
aas
push
mov
push
add
mov
ja
xor
sub
dec
inc
imul
ss
or
out
xor
retf
aam
push
arpl
pop
inc
ror
mov
les
pop
pop
adc
add
ja
fidiv
mov
cmp
ret
xor
or
pusha
add
lss
sub
cmp
pop
call
xor
div
mov
mov
push
fnstsw
pop
(bad)
repnz
cmp
ret
por
in
fcmovbe
test
cmp
sub
push
mov
sbb
jns
popa
sysenter
jmp
aaa
dec
jae
cli
ss
repnz
jmp
cs
iret
into
sub
aad
inc
jnp
sti
and
imul
out
ret
and
push
pop
mov
sub
xchg
hlt
lods
or
movs
mov
xchg
scas
test
mov
stos
pop
stos
test
and
je
adc
pop
push
push
int3
(bad)
ins
cmps
gs
cmps
add
pop
xchg
aam
ret
arpl
repz
fild
pop
push
dec
std
lock
cld
pusha
xchg
dec
lahf
ret
movs
mov
push
cmp
xlat
in
iret
cs
test
push
mov
retf
pop
neg
and
test
stos
mov
add
pop
outs
ret
movnti
add
mov
pop
cli
pop
sbb
aad
jl
cs
sub
pop
sahf
cwde
in
dec
shl
mov
add
pushf
cmp
jmp
rcr
into
ja
aam
sti
push
jmp
push
aad
je
fadd
or
aad
sub
xchg
xchg
stos
pushf
(bad)
xor
in
imul
cli
and
aas
call
pushf
add
sti
sbb
shl
cld
cld
out
mov
mov
mov
(bad)
mov
sbb
ror
sbb
xchg
cli
fbld
add
mov
xor
or
daa
xor
adc
call
stos
sub
adc
jg
cmp
pminsw
int
rcr
mov
pop
loopne
not
test
mov
cmp
push
fmul
mov
add
and
and
inc
(bad)
arpl
wrmsr
jecxz
(bad)
adc
push
fucomi
loop
nop
aad
lock
pop
jae
test
fwait
out
pop
test
mov
xor
pop
loope
pushf
xchg
pop
popf
xor
cmps
fcomp
cld
jecxz
ins
sahf
es
push
fisttp
aas
popf
je
pushf
jle
push
xor
xchg
mov
inc
aas
aam
gs
add
jg
lea
popf
jmp
sbb
xlat
lods
shr
out
test
push
push
inc
(bad)
(bad)
fist
lods
cli
jno
pushf
add
or
mov
pop
push
mov
sbb
dec
jecxz
push
and
aaa
cmps
test
xor
xor
mov
sub
dec
dec
cmp
mov
mov
addr16
add
aas
dec
sbb
jge
dec
(bad)
sbb
sbb
mov
inc
sbb
dec
mov
and
fsub
mov
rcl
sbb
xchg
(bad)
pop
cmps
repz
call
iret
pop
or
jecxz
es
outs
and
or
sub
pop
jmp
sub
inc
push
ins
sub
loope
outs
int
fs
sbb
movs
stos
jo
xchg
mov
int3
test
fdiv
ror
xchg
pop
inc
add
jae
out
shr
sub
mov
xchg
sti
pop
jecxz
(bad)
adc
push
mov
movs
inc
sahf
imul
pop
je
add
cs
stc
or
sbb
(bad)
loop
pop
hlt
out
push
mov
retf
lods
pop
hlt
ffree
icebp
outs
lahf
inc
mov
pop
fdivr
sub
and
push
pusha
imul
push
pop
sbb
movs
inc
cld
imul
xchg
inc
outs
mov
or
sub
mov
dec
in
or
cmp
movs
inc
fimul
fwait
push
fsubr
sub
add
adc
push
add
mov
xlat
push
int
inc
inc
sbb
out
mov
push
ss
dec
add
daa
sub
and
xor
mov
inc
push
or
mov
popa
cmp
dec
xor
mov
imul
int3
jmp
inc
pop
bound
adc
stos
mov
dec
cdq
rcl
stc
add
pop
or
addr16
sahf
mov
arpl
int3
lock
jns
enter
rcl
sahf
sbb
pop
sti
push
fisub
rol
(bad)
cmps
cmp
lahf
push
lea
push
daa
mov
push
xchg
xor
popf
xor
data16
adc
pop
pop
xor
ins
sar
push
sub
dec
ret
sub
das
out
ins
jecxz
js
adc
mov
das
mov
das
push
jmp
shr
aaa
push
xor
ins
neg
xlat
sbb
shr
fistp
pusha
xchg
lods
sti
cmc
outs
ficomp
mov
ret
pop
cmps
pusha
cwde
aas
adc
fist
cli
fwait
aaa
and
adc
jmp
nop
(bad)
(bad)
xchg
mov
jl
sahf
jae
outs
mov
xchg
scas
cmp
in
mov
adc
ds
cmp
push
cmc
enter
rcr
pop
push
fadd
arpl
cdq
inc
and
hlt
inc
test
sub
fs
adc
hlt
loop
(bad)
fst
xor
mov
(bad)
sbb
(bad)
shr
jmp
mov
fcomp
xor
xor
int
xor
xchg
push
xor
das
mov
inc
leave
inc
cmp
in
jecxz
test
xor
mov
xor
ins
jb
subps
push
lahf
popf
push
fist
int3
xor
pop
scas
mov
retf
xchg
test
scas
(bad)
or
sbb
call
sar
retf
lock
mov
xor
or
or
imul
addr16
push
mov
test
pop
call
cwde
mov
test
push
cmp
mov
cmp
jno
popf
enter
mov
test
jnp
pop
outs
jmp
imul
pop
jnp
rol
stos
(bad)
mov
or
mov
cs
inc
add
add
jg
cwde
aaa
pushf
shr
arpl
arpl
jmp
dec
je
fisttp
mov
(bad)
leave
xlat
pop
cs
dec
or
iret
xchg
imul
sub
fdiv
scas
lds
das
mov
mov
sbb
addr16
cmps
cmp
mov
push
psubusb
clc
sbb
sub
and
jecxz
fidivr
cwde
cld
in
pop
mov
retf
jo
xor
jge
stos
cmp
jge
xor
push
ret
(bad)
xor
mov
imul
test
arpl
adc
mov
ins
xchg
enter
jne
sar
jl
jnp
shl
cmp
enter
fisttp
test
sub
loopne
out
push
pop
push
pop
les
stos
cld
shl
retf
cs
das
pop
call
pop
push
xchg
push
scas
cmp
cwde
sub
xchg
lar
outs
dec
mov
out
mov
mov
leave
shl
cli
jno
and
mov
jnp
cmp
cmc
pop
wbinvd
hlt
mov
test
xchg
xchg
sbb
ffreep
fcmovb
dec
sbb
mov
xchg
push
mov
cld
mov
sbb
loopne
(bad)
ficom
cmp
rcr
popf
dec
or
clc
loope
in
dec
push
push
mov
cdq
cmp
jbe
aam
scas
outs
sbb
(bad)
movs
retf
pushf
inc
mov
std
sbb
jb
inc
push
push
in
adc
and
mov
adc
sub
mov
jnp
in
fmul
jl
dec
jl
mov
(bad)
dec
stos
inc
cs
pop
sub
mov
sub
repz
pop
adc
cmp
fsub
(bad)
push
(bad)
and
adc
xchg
cmp
fdiv
adc
and
cs
aam
scas
fbstp
outs
movs
shl
call
xchg
jl
sbb
mov
test
or
inc
mov
pop
call
div
sbb
mov
imul
and
cld
inc
rcl
cmps
movs
push
in
jnp
repnz
adc
into
pop
cmp
inc
jle
pop
adc
jmp
sbb
mov
pushf
add
shr
xchg
fdivr
data16
(bad)
mov
cmps
in
fidivr
jle
jge
sbb
popa
lods
das
jne
xchg
jno
push
aas
and
(bad)
lods
xchg
mov
sub
lock
pop
int
adc
push
pop
dec
pop
movs
dec
ret
jo
sub
adc
xchg
ret
mov
daa
mov
cmps
outs
cmp
not
in
inc
icebp
xchg
test
repnz
dec
dec
jmp
out
adc
and
mov
aas
adc
sub
addr16
hlt
push
xchg
xor
dec
and
xor
rol
add
push
push
mov
icebp
or
add
std
cmp
shr
sub
inc
clc
out
les
xchg
aam
fsub
pop
in
mov
adc
add
jp
sar
adc
or
jns
psadbw
popf
cld
adc
mov
rol
aam
call
(bad)
call
cdq
inc
dec
movs
imul
cmp
fistp
stc
stc
ins
fidiv
cmc
sub
push
and
ret
adc
adc
jno
jmp
xchg
cmp
lods
and
(bad)
push
jbe
bound
outs
test
sar
imul
or
dec
(bad)
xlat
ret
cwde
sahf
jmp
outs
mov
pusha
fadd
lea
inc
sti
imul
sbb
fldcw
popf
ins
cmps
sbb
stos
sbb
cmp
outs
fst
arpl
js
jb
inc
int3
enter
mov
cld
(bad)
cmp
scas
pushf
iret
lods
out
js
jmp
call
cs
xchg
dec
cmp
push
push
push
loope
adc
or
addr16
push
in
mov
ins
ret
(bad)
mov
inc
mov
inc
sbb
ins
push
std
loope
lock
je
sar
iret
gs
in
leave
loopne
mul
(bad)
add
ins
in
jne
repnz
das
call
out
jmp
les
inc
inc
pushf
scas
arpl
cli
imul
sub
out
mov
mov
add
ins
and
fdivr
inc
sbb
add
dec
lods
test
mov
jmp
push
adc
sub
add
mov
adc
or
push
mov
xchg
retf
mov
imul
fnstenv
jmp
sub
and
dec
jmp
add
ja
rcr
inc
push
fcom
pop
or
sub
and
cld
call
(bad)
and
cmps
fldenv
out
sub
cmp
call
xor
sub
or
push
les
xor
lldt
adc
add
test
inc
test
sub
push
dec
mov
shl
fnsave
pop
pop
adc
cld
mov
not
dec
outs
mov
jb
out
aad
out
cld
or
int
fiadd
mov
movs
jl
jae
ret
cwde
jecxz
mov
lds
fst
jmp
xor
push
inc
js
cmp
icebp
bound
jl
or
adc
pop
mov
cdq
fild
jb
adc
(bad)
aad
and
sub
inc
xor
movs
dec
push
call
xor
push
(bad)
jbe
add
xchg
xchg
mov
loope
sub
call
jle
shl
pop
pop
dec
and
add
mov
not
mov
fist
xchg
int3
and
gs
lods
xor
pushf
mov
jno
push
in
sub
push
add
inc
jmp
mov
test
inc
rcr
inc
jae
fldlg2
call
cli
nop
(bad)
adc
sub
cmp
xchg
out
jp
repnz
sub
fs
scas
jo
xor
loopne
dec
stos
and
dec
adc
sbb
cmp
lock
adc
dec
out
ins
jno
inc
jns
bound
inc
push
rcl
sub
mov
imul
pop
call
scas
in
jg
pop
xor
sbb
imul
dec
pop
xchg
in
mov
xor
imul
jae
sahf
mov
imul
call
ja
cld
push
adc
or
in
mov
jae
arpl
and
neg
call
cmp
cmp
jle
(bad)
outs
mov
call
aas
pop
retf
ret
xchg
xchg
jno
xchg
std
add
outs
sbb
ins
add
add
popa
cmp
aad
push
jns
fidiv
cmp
jb
test
arpl
or
jmp
push
pushf
add
jbe
adc
mov
pop
shl
or
pop
ror
xchg
(bad)
fld
sub
ror
mov
inc
int
sub
das
repnz
imul
mov
xchg
add
push
cmp
retf
(bad)
stos
bound
cli
cld
xchg
cmc
pop
sub
repz
cmps
les
xchg
push
inc
ret
fisub
test
cmp
xor
mov
push
mov
dec
xor
xor
mov
sub
imul
mov
jmp
xchg
mov
pop
cld
das
movs
inc
push
imul
mov
jle
(bad)
and
cld
sbb
jnp
mov
cmp
test
cmp
lock
or
sbb
xlat
add
fild
mov
cmp
xor
neg
je
fsubr
jp
or
sub
pop
push
retf
pushf
sub
fdivr
fst
js
dec
jae
ret
aam
sbb
sahf
scas
xchg
ret
imul
jbe
and
xlat
outs
xchg
popa
aad
cmp
out
lahf
retf
hlt
lods
mov
sub
in
pop
sub
or
scas
or
mov
and
sbb
scas
iret
cmp
arpl
enter
xchg
stos
mov
pop
movs
sbb
pushf
out
(bad)
push
mov
test
jb
cmp
cwde
shl
push
and
arpl
pop
mov
xchg
out
sub
mov
call
int
jle
test
pushf
mov
addr16
push
fbstp
retf
sub
daa
sbb
xchg
xchg
adc
(bad)
(bad)
pop
aam
push
ds
les
xor
pop
in
inc
mov
scas
sub
ds
js
mov
aam
pop
adc
fdiv
sub
adc
into
loopne
daa
cmp
(bad)
out
cmp
stos
(bad)
not
jmp
icebp
mov
xchg
push
ror
add
enter
aad
xchg
xchg
dec
mov
(bad)
inc
out
fs
sbb
adc
mov
push
(bad)
iret
in
imul
xor
push
ss
dec
rcl
push
fwait
mov
loop
dec
(bad)
adc
mov
das
lds
cmp
pop
stos
jne
inc
ret
add
out
sbb
mov
pushf
mov
dec
pop
scas
es
das
dec
dec
arpl
leave
addr16
(bad)
es
fcomp
inc
xor
fisttp
je
outs
mov
or
cdq
mov
push
sbb
mov
push
out
mov
repnz
xor
pop
js
inc
dec
xor
aam
sbb
push
(bad)
call
popf
fisubr
rol
addr16
sbb
push
jmp
retf
xor
xlat
and
push
adc
popf
mov
mov
xchg
dec
push
xor
mov
jmp
mov
add
push
or
pop
sahf
push
sbb
mov
outs
mov
popf
dec
dec
cmp
and
mov
aam
sbb
inc
xchg
jl
lods
test
test
or
sbb
imul
xchg
(bad)
shl
jmp
mov
pop
loop
push
fsubr
call
shl
push
xchg
cmc
daa
cmp
xchg
pop
icebp
mov
push
adc
lods
js
jo
out
add
inc
cdq
mov
std
jo
scas
and
or
push
xchg
mov
rcr
cwde
out
fisttp
adc
sub
popf
xor
mov
dec
and
inc
dec
sahf
jp
icebp
pop
mov
ss
call
and
jns
pop
popf
jmp
ins
ja
repnz
push
pop
pushf
aad
(bad)
jno
dec
(bad)
mov
mov
(bad)
sub
sbb
xor
xchg
adc
sbb
scas
and
jl
aam
iret
sahf
jmp
retf
sahf
aad
ret
inc
cmp
popf
cmp
popa
and
push
mov
jmp
shl
call
push
jl
test
sub
pop
mov
into
(bad)
pushf
(bad)
mov
bound
and
call
xchg
mov
sbb
sub
retf
push
mov
xchg
mov
ss
out
stos
push
push
dec
push
jmp
xor
andps
clc
jg
stc
mov
cmp
out
cmp
jns
cmp
sbb
xchg
push
sahf
icebp
push
sbb
cmps
jnp
fsubrp
dec
add
xor
iret
nop
std
jae
fstp
inc
sbb
adc
sti
(bad)
pop
jb
ins
dec
dec
bound
and
mov
stc
lahf
pop
sbb
fimul
xchg
jmp
std
in
cmp
pop
cdq
aaa
cli
xchg
xchg
stos
jo
push
mov
retf
imul
xlat
sub
jg
sub
into
adc
xor
and
cld
jnp
xchg
rol
js
imul
movs
xchg
xor
or
sub
movs
cwde
je
lock
pop
arpl
xchg
lods
es
ja
inc
fwait
mov
dec
int3
xchg
mov
rcl
inc
mov
jnp
ret
mov
push
dec
lods
movs
(bad)
pusha
inc
sbb
cdq
dec
popf
pop
fsub
es
pop
clc
sbb
xchg
mov
sub
int
mov
adc
and
sub
sub
sbb
pop
mov
fstp
fidivr
sbb
imul
test
cmp
adc
test
and
xlat
jg
mov
inc
call
and
jp
jg
xchg
rol
mov
pop
pop
call
shr
dec
sar
sub
rcr
loopne
fbstp
je
(bad)
pop
push
or
xchg
aam
mov
xor
das
pop
pop
jle
in
aam
lahf
ins
ret
dec
mov
mov
mov
push
scas
xchg
adc
and
and
cmp
jle
sbb
call
repnz
sbb
mov
das
mov
out
jb
(bad)
ficom
shr
lods
push
mov
aaa
(bad)
bound
into
aas
pop
fs
jo
push
cmp
das
iret
xchg
imul
rol
ss
jnp
push
fld
mov
push
retf
addr16
fisttp
push
shl
(bad)
ret
inc
add
xchg
mov
push
dec
push
sub
push
rcl
xchg
xor
jo
nop
loop
je
stos
call
or
pusha
cwde
pop
fstp
mov
xor
js
jo
int3
adc
fcom
mov
cmc
cvttps2pi
xor
inc
nop
pushf
data16
movs
lds
inc
dec
push
add
xchg
inc
cld
(bad)
sbb
inc
sub
cmp
sahf
adc
push
(bad)
add
add
jne
adc
scas
add
mov
pop
enter
and
xchg
cmps
(bad)
sbb
adc
adc
div
jb
imul
mov
fsubrp
test
imul
mov
push
out
push
gs
pop
cmp
out
or
retf
inc
push
stos
outs
xchg
pop
xor
ret
ja
int
mov
or
cmp
add
pop
test
push
pop
stc
gs
or
scas
shl
adc
imul
mov
xor
inc
jmp
enter
jle
pop
call
fs
pushf
mov
das
adc
dec
fimul
mov
xor
(bad)
push
jno
and
repz
sub
push
jmp
pop
adc
fldcw
xchg
popa
cmps
cmp
sub
mov
sbb
and
mov
gs
ror
pop
cmps
ret
adc
dec
and
es
inc
sub
test
mov
(bad)
icebp
mov
fsubr
aaa
xor
pop
adc
aas
add
aam
shl
fs
call
shr
in
mov
sahf
in
inc
and
movs
mov
or
dec
mov
jmp
or
lods
dec
push
xchg
cmps
inc
push
div
mov
ror
cld
cmp
sub
mov
mov
ins
shr
mov
mov
out
xchg
out
(bad)
imul
xchg
push
das
leave
lods
pop
stc
ds
add
aaa
push
sbb
mov
mov
out
jg
jmp
mov
or
inc
retf
into
outs
(bad)
(bad)
div
mov
inc
cmp
add
mov
mov
dec
movs
mov
dec
loope
jg
cs
push
mov
mov
cmp
icebp
xor
outs
popf
ror
loop
cmc
dec
push
les
and
sub
add
pop
lods
cmp
push
pop
ret
and
fcmovne
jmp
sar
pop
shl
xchg
inc
pop
mov
push
jle
(bad)
aam
inc
lgs
jmp
and
inc
pop
in
js
outs
cld
inc
in
cld
dec
push
push
add
inc
test
fbld
jle
jmp
ret
leave
pop
push
push
add
sbb
aad
fsubr
idiv
shl
fwait
pusha
sbb
mov
shr
push
xchg
aad
jl
and
mov
repnz
dec
dec
sub
(bad)
pop
jecxz
inc
ins
mov
pop
xchg
sub
jne
push
ds
inc
inc
mov
test
push
push
mov
aas
mov
std
adc
stos
xchg
sti
sbb
pop
inc
sti
pop
dec
push
mov
test
popf
xor
into
(bad)
popf
or
cmp
test
xchg
lock
mov
test
fld
cmps
mov
pusha
dec
push
xchg
test
pop
jnp
nop
add
jnp
xchg
test
push
mov
mov
xor
push
dec
inc
cld
mov
pop
stos
ss
ficomp
je
scas
push
push
sub
sub
stos
push
adc
mov
dec
and
sbb
pop
mov
mov
cmc
je
das
mov
pop
jno
mov
or
push
mov
cmp
sub
repnz
or
or
retf
or
test
sbb
sbb
inc
sbb
xor
loope
std
inc
jmp
mov
pop
mov
scas
xchg
loop
sahf
jecxz
xchg
call
sbb
add
bnd
movs
xchg
push
cmp
mov
adc
pop
imul
and
mov
and
and
lea
cmp
fisttp
pushf
pushf
inc
sti
ret
cmp
pop
cld
inc
mov
xchg
sub
ret
dec
adc
imul
call
nop
push
(bad)
stc
and
test
mov
mov
mov
outs
dec
and
pop
aas
adc
xor
hlt
dec
bound
arpl
cs
outs
call
mov
cmp
dec
mov
retf
xor
jmp
out
xchg
sub
out
or
sub
pop
adc
sub
mov
sbb
repz
scas
mov
pop
pusha
mov
std
outs
or
mov
push
movs
popf
iret
jae
ins
call
nop
dec
pop
lds
and
mov
cpuid
cwde
stos
loope
adc
adc
retf
pop
aad
sahf
cmp
lds
out
stos
xor
jnp
pop
mul
fdiv
cwde
aam
scas
int
jbe
daa
mov
jl
mov
scas
or
movs
jle
mov
fbld
lahf
dec
(bad)
jl
movs
test
je
inc
cmp
test
sbb
into
push
cld
(bad)
cmp
nop
cmp
out
push
hlt
sbb
jl
(bad)
test
push
gs
sub
sbb
and
mov
xchg
pusha
enter
jp
pop
fnstcw
mov
imul
inc
and
mov
imul
nop
call
loope
jmp
mov
mov
dec
mov
xor
retf
popa
enter
mov
dec
ins
push
jmp
cmc
lea
retf
sahf
popf
sub
rcr
ret
sub
inc
xchg
dec
dec
push
jp
and
arpl
inc
adc
jb
and
xor
(bad)
shl
pop
cmps
pop
add
xchg
or
sub
jno
xchg
xor
(bad)
pop
push
xchg
lods
movs
out
fisub
adc
call
sub
das
pop
push
xchg
pusha
int3
lea
dec
adc
lahf
or
das
push
sbb
jnp
adc
loope
mov
stos
dec
xchg
push
inc
mov
xlat
push
in
and
xor
pop
fist
mov
(bad)
and
popf
adc
fbld
dec
or
inc
push
pop
xchg
mov
or
outs
push
or
push
in
or
loope
cmp
mov
in
mov
sub
dec
arpl
mov
fucomi
mov
push
(bad)
fs
xchg
cmps
lock
jl
inc
mov
ror
xor
ffree
jecxz
inc
retf
cli
push
ins
xchg
icebp
and
stos
xor
pop
inc
mov
fld
(bad)
(bad)
imul
add
sahf
jne
mov
aaa
mov
sbb
xor
nop
ss
xchg
push
xchg
adc
in
add
add
add
mul
dec
pop
push
enter
pop
fwait
push
mov
addr16
mov
and
aam
and
and
iret
sbb
jb
ds
jl
xor
les
mov
jg
lea
fild
dec
outs
push
adc
cmps
aad
jecxz
pop
push
and
adc
fs
cmp
push
xchg
or
xor
sub
fcmovne
das
adc
les
(bad)
repz
in
push
mov
pop
fidiv
add
pop
lea
rcl
ins
idiv
push
mov
pop
push
aam
movs
pop
xchg
out
mov
push
inc
jmp
push
scas
mov
jl
push
dec
push
aam
or
and
mov
imul
cmps
or
push
rcr
mov
pop
imul
and
inc
mov
and
mov
les
or
fild
sbb
(bad)
sbb
jmp
inc
mov
mov
stos
xlat
sub
mov
lods
bound
adc
adc
(bad)
dec
inc
xchg
xchg
xchg
cmp
mov
inc
pop
std
mov
sub
shl
pop
sub
fild
and
addr16
fucomi
jno
pushf
iret
imul
xor
daa
add
pop
pop
cmp
push
sub
push
and
mov
adc
aas
adc
retf
arpl
outs
adc
test
rol
mov
inc
dec
ins
jmp
xchg
sub
fdivr
fcmove
inc
fs
in
mov
add
gs
jo
mov
mov
mov
mov
xor
out
test
cmp
and
iret
mov
mov
adc
test
call
bound
cwde
adc
pop
je
inc
div
aaa
inc
and
jmp
clc
std
cmp
into
xor
jecxz
adc
adc
and
mov
sbb
(bad)
xor
add
pop
test
xor
repz
pop
aaa
or
push
push
js
add
popa
ss
(bad)
mov
ins
cli
fwait
xchg
pop
aaa
dec
popa
mov
sti
fsubrp
cmp
fisttp
pop
jne
nop
adc
jns
jge
retf
jle
cld
sub
std
pop
outs
sbb
pop
jp
mov
adc
or
sti
cmp
sbb
sti
bound
rol
dec
push
ins
outs
and
cmps
mov
pushf
ins
or
bound
push
imul
inc
sbb
loop
sbb
add
jne
xchg
sbb
pop
cmp
xchg
xchg
push
outs
and
pop
mov
fimul
and
inc
mov
push
out
test
fstp
into
ds
and
mov
lods
aam
inc
dec
pushf
fist
pop
imul
mov
aaa
ror
push
xor
push
and
add
mov
outs
jbe
dec
inc
sbb
outs
in
fnop
push
xchg
sbb
cld
stos
in
sub
sahf
out
lods
jno
sub
aam
fisubr
adc
jp
into
push
imul
jp
mov
shl
pop
sbb
bnd
popf
cs
lods
mov
jns
or
inc
fcom
into
dec
cmp
pop
sbb
mov
mov
xor
xor
je
pop
hlt
int3
dec
jo
xor
sub
xor
icebp
fsubp
xor
and
pop
sbb
int3
adc
cmp
mov
push
or
stos
pusha
call
gs
mov
push
cmp
push
pop
xchg
xchg
jnp
lods
fisubr
js
push
(bad)
mov
imul
loope
pusha
inc
pop
mov
mov
js
not
out
jge
push
pop
mov
div
dec
ror
sar
stc
(bad)
cmp
xchg
inc
mov
and
pop
or
fwait
(bad)
sub
push
pop
mov
imul
xchg
sar
or
fidivr
test
pop
jnp
sbb
pop
cwde
sahf
push
jbe
daa
mov
mov
pop
sbb
not
aas
js
sbb
inc
ret
pusha
jne
mov
loopne
sub
xlat
les
push
rcl
inc
mov
or
or
jnp
sar
or
je
dec
mov
cmps
xchg
jmp
imul
(bad)
cli
sbb
push
dec
sbb
cwde
cdq
shl
cmp
push
jmp
jl
(bad)
mov
xor
dec
lds
das
push
xchg
xor
sbb
mov
xor
cwde
retf
sbb
into
pop
cmp
lods
push
adc
sub
lahf
cs
enter
mov
adc
out
fs
dec
cmp
cli
shl
xlat
int
sub
test
popf
xchg
aam
jns
and
(bad)
xchg
sahf
cmc
imul
push
mov
jnp
jmp
cmp
and
imul
dec
adc
jecxz
les
push
xor
out
xchg
movs
leave
jmp
test
and
popf
xlat
mov
cmp
push
push
repnz
cmp
xor
xor
fwait
test
int
jb
xor
mov
or
jb
fwait
cs
or
inc
popf
movs
pushf
mov
pop
xchg
xchg
pusha
xchg
outs
xchg
push
push
mov
sub
mov
mov
push
sbb
or
mov
fcomp
cld
and
arpl
xor
push
idiv
clc
xor
push
sar
in
dec
sub
jnp
fcomp
outs
sbb
fst
sbb
xchg
in
or
cmp
retf
jbe
sbb
mov
inc
pop
add
pushf
push
sub
cmc
das
cmp
iret
xchg
push
xchg
dec
and
xor
je
ins
out
enter
lods
or
and
imul
mov
cs
fstp
cmp
sub
addr16
ret
out
mov
movs
pop
jne
jge
push
and
lds
aam
imul
jge
add
lods
sti
les
fwait
pop
mov
enter
mov
push
mov
fwait
shl
sbb
enter
pushf
stos
jno
ret
pop
push
(bad)
or
jno
pop
std
pop
repnz
sbb
sub
pop
pop
dec
das
lds
jo
out
je
mov
and
out
ret
sbb
rcr
bound
inc
sbb
retf
push
nop
pop
scas
pop
stc
push
sbb
jo
pop
cmp
movs
dec
icebp
and
fwait
inc
rcr
(bad)
enter
pop
movs
fs
adc
sub
retf
sub
sub
and
add
jb
push
lods
in
cmps
xchg
add
adc
test
out
in
jbe
add
arpl
fbld
sub
jecxz
sbb
fisttp
jns
jecxz
push
or
or
push
cld
ds
mov
imul
es
addr16
retf
jmp
int
fisttp
pop
test
sub
pusha
mov
xor
pop
shr
xchg
adc
inc
inc
movs
jp
cmc
add
pop
jmp
sub
adc
stos
add
mov
and
push
push
icebp
pop
sub
dec
jl
cmovbe
cmc
inc
and
cmps
data16
ins
pop
js
sbb
mov
fwait
adc
xchg
icebp
or
pop
stos
push
fidiv
or
mov
sbb
push
loop
(bad)
(bad)
(bad)
xor
pop
aam
mov
jmp
sub
cmp
fild
jecxz
aad
or
in
loopne
into
dec
adc
aaa
or
push
pop
rol
add
ins
push
cdq
call
mov
dec
or
outs
mov
xor
jbe
sar
xchg
pop
out
sub
sub
xchg
sbb
dec
xchg
xchg
push
pop
xchg
mov
cld
mov
cmp
fistp
ins
das
add
pop
and
mov
cmp
(bad)
fucomip
xchg
lods
xlat
stc
or
xchg
popa
push
xchg
into
xchg
pop
cmp
push
adc
mov
sbb
shl
push
shr
sahf
leave
pop
ins
shr
bound
mov
push
shl
mov
push
inc
hlt
shl
xor
xor
mov
clc
xor
loope
pop
(bad)
scas
mov
test
mov
pop
mov
ret
mov
sub
jp
loope
pop
(bad)
and
fwait
push
push
call
ja
hlt
test
push
(bad)
sub
sub
and
shr
pop
scas
icebp
sub
and
xchg
fadd
dec
push
pushf
daa
fisttp
cld
xchg
jmp
lods
cwde
movs
xchg
stos
es
daa
mov
push
push
mov
aam
mov
jnp
pop
rcl
adc
out
es
loop
adc
sub
loope
jmp
xor
add
pop
test
mov
push
inc
inc
jmp
sti
fcomip
dec
nop
dec
mov
mov
jo
in
jne
loope
push
inc
cmp
lahf
mov
int
pushf
call
imul
inc
shl
es
cld
icebp
sub
neg
mov
(bad)
aam
clc
mov
xor
and
fdivp
int3
ins
push
pop
call
daa
mov
jmp
xchg
sub
jge
sbb
ins
dec
test
enter
inc
push
cwde
mov
lock
bound
and
sub
jb
cmp
sbb
or
pop
cmp
repnz
jmp
jl
sub
xor
push
repnz
jle
xor
xor
test
test
xor
xlat
lahf
xchg
lea
push
popa
push
out
in
push
pop
xchg
(bad)
sahf
jl
popa
std
ja
outs
pop
add
push
adc
or
sahf
lods
mov
nop
lock
pop
aam
cmc
pop
mov
ins
cdq
jbe
stos
xchg
sub
fdivr
push
jo
sub
mov
push
in
aam
and
enterw
add
enter
fs
sub
fwait
xchg
add
retf
pushf
dec
clc
fsub
(bad)
jmp
shl
sbb
mov
addr16
push
and
mov
lods
xchg
jmp
xchg
sbb
retf
test
fs
sub
stos
jl
inc
jno
push
ins
pop
pusha
repz
and
scas
mov
fcomp
and
cmp
cmps
ja
ds
ficom
mov
not
lock
mov
mov
test
cmp
lea
mov
add
fwait
test
lea
dec
jb
inc
inc
fisttp
cld
aas
jmp
pop
push
or
imul
cli
outs
ins
sahf
and
add
jl
inc
mov
xchg
mov
sub
int
xchg
pop
sub
add
add
lea
dec
mov
dec
hlt
jecxz
ins
imul
push
inc
loop
mov
pop
or
ins
out
arpl
sbb
mov
mov
xchg
loope
fwait
cmp
fld
inc
fmul
dec
fdiv
fs
int3
aad
sub
cwde
in
mov
mov
inc
ret
std
jb
mov
leave
es
sub
cmp
call
loope
pop
push
mov
les
jb
(bad)
repnz
daa
push
xchg
mov
ins
cdq
xlat
jge
dec
xchg
test
addr16
inc
jo
mov
cmps
sub
mov
call
inc
into
addr16
scas
shl
pushf
loope
xchg
js
push
ss
sub
loope
fmul
xchg
shl
cmps
je
sahf
sub
push
add
test
(bad)
jecxz
fmul
add
push
mov
cmp
fstp
pop
push
shl
or
mov
jnp
test
les
xchg
call
enter
mov
xchg
sub
cmp
and
jp
sub
fwait
mov
mov
mov
bound
fs
stos
pop
ja
mov
add
mov
add
sbb
inc
cli
xor
out
xor
icebp
dec
xchg
pop
pop
stos
add
stc
xchg
cld
js
fimul
cmp
lahf
push
pop
jp
add
fbld
js
cs
fcomp
shl
dec
mov
mov
shl
cmp
pop
(bad)
(bad)
(bad)
(bad)
push
retf
in
jmp
mov
add
xchg
scas
fisttp
push
cwde
(bad)
in
not
or
stos
push
(bad)
add
les
mov
lahf
lea
mov
jmp
adc
sti
movs
sub
outs
pop
dec
jecxz
dec
xor
sub
ja
pop
mov
xchg
test
pop
xchg
rol
mov
pop
mov
daa
mov
mov
add
jle
pop
cmp
(bad)
fnsave
(bad)
out
hlt
mov
dec
stc
mov
cwde
cwde
mov
sub
call
adc
pop
or
cli
jnp
push
pop
dec
test
push
addr16
in
xor
and
rcl
push
push
jg
fimul
jnp
jne
ss
mov
xlat
dec
shr
inc
push
in
idiv
mov
pop
dec
pop
imul
fadd
lods
in
stos
inc
int
iret
lds
sbb
sahf
shl
xor
lds
ss
mov
pusha
repz
icebp
out
bound
push
gs
dec
ror
inc
loop
pop
repnz
stos
xor
retf
pop
xchg
adc
inc
sub
jmp
outs
call
xchg
test
mov
pop
mov
call
push
and
cmovne
(bad)
mov
stos
sbb
xor
sbb
xchg
push
jp
outs
aaa
pop
or
inc
js
pop
mov
lea
jnp
inc
js
pusha
jb
cmp
sar
sub
pop
popf
(bad)
mov
out
std
mov
clc
repz
jle
jmp
clc
cmc
sub
mov
or
loop
mov
adc
adc
mov
inc
call
in
xor
xchg
mov
fild
ror
cwde
jae
in
retf
mov
lods
mov
inc
mov
retf
push
jl
pop
push
and
mul
cwde
call
lahf
or
pushf
mul
cmc
and
lea
xor
outs
add
jp
mov
in
inc
outs
and
in
int3
cwde
push
or
addr16
cmps
cmp
fdiv
aam
outs
sahf
(bad)
dec
push
outs
jnp
lock
clc
dec
adc
dec
lea
jb
dec
sbb
mov
add
call
pop
fs
aaa
mov
popf
cli
inc
in
push
fistp
arpl
pop
mov
mov
inc
addr16
mov
ret
mov
mov
pop
lock
adc
test
mov
mov
sub
ja
test
mov
cld
out
loopne
fld
popa
(bad)
mov
outs
pop
inc
leave
(bad)
cmp
add
xchg
dec
inc
push
push
inc
imul
bound
pop
vorps
lock
je
out
mov
out
pop
in
push
xor
enter
mov
bound
lea
or
jmp
add
test
ror
dec
ss
(bad)
sti
int
push
push
retf
xor
pushf
pop
fsubr
xchg
lea
dec
outs
loopne
retf
xchg
push
push
xchg
push
xchg
push
jmp
mov
pop
enter
sub
retf
mov
pushf
xor
loop
mov
and
push
xor
inc
adc
cdq
pop
jmp
out
bound
inc
aad
push
mov
stos
sub
scas
or
cmc
ds
xor
leave
aaa
sbb
adc
dec
pop
mov
pop
ret
mov
dec
mov
sub
neg
popf
ins
xchg
or
sbb
loopne
iret
test
and
xor
imul
add
in
mov
push
sub
(bad)
icebp
mov
push
sbb
in
jg
pushf
push
jmp
push
daa
clc
and
outs
es
pop
rcl
into
popf
push
test
mov
pop
xchg
xrelease
inc
xor
jl
xchg
sub
cwde
cld
lds
push
jns
into
mov
adc
mov
sub
pop
outs
out
mov
inc
call
fucomi
jb
and
xchg
xchg
pop
push
inc
pushf
adc
sbb
dec
movs
jne
push
aad
mov
fwait
pop
scas
cmp
dec
test
jmp
loope
pop
dec
adc
loope
aas
std
push
mov
in
push
push
mul
pop
in
outs
xor
push
sub
mov
add
retf
pop
sub
sbb
sub
int
or
mov
test
aad
push
and
loop
scas
sbb
pop
into
mov
lahf
dec
es
pop
aam
std
sbb
fld
adc
or
mov
push
jl
loope
push
ins
ins
dec
sbb
sbb
xchg
fs
jmp
add
sti
jl
push
call
cmp
fcom
ret
add
lods
loope
popf
popf
(bad)
std
sub
jecxz
cld
xchg
lds
stos
fdiv
test
std
leave
xor
push
push
daa
dec
scas
(bad)
mov
loope
xchg
dec
sbb
cmp
xchg
fld
or
into
aaa
sub
stc
adc
stos
outs
aad
sub
xchg
adc
iret
in
cli
fldcw
shr
out
mov
jecxz
mov
retf
fistp
push
(bad)
cmp
lock
cld
cs
cmp
cmc
in
call
push
and
dec
(bad)
repz
stc
enter
cld
in
cli
push
jno
sbb
enter
ss
sti
fldl2e
cld
loope
inc
inc
ret
call
aam
xchg
mov
sub
lods
xchg
cs
jp
shl
xor
in
(bad)
retf
push
xchg
pop
sub
pop
xchg
xor
scas
arpl
test
js
push
push
push
pop
je
in
sbb
and
cmp
ss
mov
cmp
cmps
push
cli
push
pop
adc
fwait
inc
jns
les
push
sub
cmps
add
call
jns
fild
addr16
fwait
sbb
add
into
outs
adc
popf
mov
push
xchg
xchg
(bad)
mov
jnp
jg
bnd
mov
neg
xchg
cmp
pop
mov
push
or
(bad)
aad
inc
repnz
imul
je
mov
in
stc
push
cwde
pushf
sub
or
sbb
fild
call
out
scas
or
outs
sub
xor
add
out
pop
cld
jle
rcr
movs
push
dec
sbb
inc
addr16
dec
xchg
out
mov
sub
jo
pusha
imul
mov
xchg
xchg
sar
in
(bad)
in
push
jp
sub
and
adc
or
stos
jne
pop
adc
aam
xlat
jge
aam
stos
mov
push
xchg
jo
adc
out
icebp
mov
adc
enter
cmp
mov
fwait
sbb
nop
sbb
ret
imul
jmp
movs
fisub
inc
repz
movs
mov
push
cld
hlt
push
fldenv
test
mov
pop
sub
shr
dec
shr
push
call
adc
adc
icebp
cmp
mov
cmp
les
or
pop
and
sbb
rcr
mov
cmp
lods
aam
push
pop
xrelease
sub
cmps
adc
retf
cmp
shl
jo
xor
sbb
xor
mov
popf
xor
imul
push
cdq
js
fs
movs
dec
inc
sbb
lock
push
call
sar
sub
bound
repnz
mov
lahf
xor
or
sar
pop
mov
sbb
aad
test
outs
jmp
outs
jnp
xchg
mov
in
out
cmp
xor
cdq
repz
inc
sbb
adc
mov
arpl
cdq
cld
sbb
mov
pop
jle
gs
bound
das
and
cdq
scas
mov
and
movs
and
int3
dec
lahf
cmps
daa
aam
out
pop
imul
add
push
xchg
test
lock
fbld
adc
sub
jmp
dec
xor
cmc
xchg
pop
or
das
imul
inc
jmp
pop
xchg
fneni(8087
sbb
in
jbe
ins
inc
xchg
repz
test
cld
sti
loop
imul
push
aaa
jmp
int
mov
imul
mov
and
ins
inc
out
jns
add
push
rcl
xchg
inc
mov
jbe
pop
call
pop
inc
outs
ret
sti
lds
push
cmps
xchg
mov
xchg
adc
je
(bad)
xchg
dec
es
add
cmps
cmps
data16
jmp
out
in
out
rol
shl
sbb
into
shl
(bad)
dec
test
jno
xchg
in
dec
jge
loop
nop
(bad)
mov
jecxz
lahf
cmp
paddq
sbb
mov
int3
or
stos
xlat
bound
sub
ror
bound
loopne
into
dec
and
pusha
test
fcomip
pop
sar
sti
mov
enter
popf
cmps
clc
fist
pop
and
push
mov
pop
push
loop
fsub
dec
and
xchg
call
xchg
jnp
mov
ds
and
out
imul
enter
in
dec
movs
loope
sub
movs
test
jp
mov
lea
add
jb
scas
add
dec
xchg
push
retf
out
das
adc
pop
stos
sbb
and
shl
or
jo
sub
sbb
test
push
out
int
imul
imul
out
pop
cdq
jecxz
push
pop
xor
ret
cdq
repnz
sub
clc
dec
movs
aas
(bad)
mov
call
adc
inc
fcomi
sbb
pop
mov
mov
cmp
js
(bad)
bnd
lods
or
arpl
inc
rol
cmp
push
and
and
mov
xchg
sub
cmps
fdivr
mov
fld
movs
push
test
adc
jbe
repz
aaa
ficom
enter
adc
push
lods
aaa
iret
mov
jp
fdivr
inc
hlt
mov
shl
inc
sub
arpl
mul
dec
scas
mov
inc
scas
mov
and
ins
call
movs
xchg
inc
mov
jbe
dec
xchg
cld
inc
loop
xchg
sub
iret
ss
inc
pushf
shr
into
in
fld
inc
mov
cmps
mov
gs
mov
out
jmp
shr
xchg
mov
mov
pop
push
mov
jmp
dec
pop
ins
adc
lock
xchg
xchg
jmp
sbb
fldcw
xor
jne
nop
cwde
fld
and
fisub
fs
xchg
jecxz
xor
and
inc
push
aas
xor
hlt
das
adc
cmp
xchg
xchg
jbe
sti
jecxz
shr
and
(bad)
daa
pop
inc
jmp
pop
fcomp
jae
leave
imul
pushf
pop
mov
inc
add
push
pop
xchg
pop
and
fwait
inc
jge
out
add
repz
cmp
adc
popf
pop
cmp
cmps
das
cmovne
jne
sub
outs
sbb
pop
repz
inc
jns
out
push
or
lahf
test
not
or
jmp
iret
mov
pop
xchg
mov
pop
push
dec
or
in
cmp
in
lds
mov
sub
mov
aaa
mov
mov
inc
das
sbb
dec
mov
dec
sub
push
xor
cmp
js
test
adc
and
cwde
(bad)
ds
xor
(bad)
pop
pop
bound
fs
sub
in
fist
sub
ror
push
add
xchg
xor
(bad)
sbb
sub
rcl
mov
push
mov
out
std
adc
xor
les
sbb
cmp
sbb
adc
imul
cs
mov
dec
imul
fstp
les
push
aam
adc
out
daa
push
jnp
sbb
adc
push
mov
xor
ins
fwait
nop
or
mov
das
cmp
cmc
popa
push
xchg
push
sahf
pop
xchg
sbb
lea
pop
idiv
retf
jmp
push
lock
sub
push
cmp
adc
xchg
jmp
mov
ja
inc
shl
movs
mov
dec
lods
fild
mov
pop
lea
mov
not
push
pop
mov
jbe
clc
movs
jo
test
or
outs
je
scas
push
fcom
sbb
mov
push
cwde
not
inc
je
sub
adc
out
ins
adc
sub
mov
cmps
sub
outs
mov
adc
cdq
mov
pop
jge
xor
les
jae
sub
es
sbb
outs
sub
aam
dec
xchg
mov
and
xor
ret
dec
movs
lods
popf
(bad)
push
cld
sub
mov
sub
test
mov
cmp
iret
add
mov
sub
push
xor
mov
jb
sbb
sbb
push
sub
ror
dec
outs
adc
lods
cdq
call
aas
movs
dec
sub
dec
movs
mov
outs
js
pop
scas
dec
neg
sbb
les
xor
mov
sbb
cdq
jl
xor
out
xor
pop
push
int
cmp
mul
inc
movs
scas
adc
mov
iret
pusha
push
push
pushf
popf
xlat
lahf
into
mov
outs
repnz
imul
mov
outs
xchg
and
pop
add
stc
push
push
mov
fld
xor
mov
xor
jl
mov
in
xor
jbe
pop
scas
push
jae
loop
(bad)
mov
sbb
inc
mov
xchg
sbb
mov
xchg
xor
xor
cwde
xchg
fsubrp
sbb
cmp
cld
lahf
shl
in
and
out
inc
or
sbb
push
push
popf
jmp
pop
lds
aad
pop
sub
stos
arpl
cwde
or
repz
adc
and
das
lahf
in
iret
xchg
jle
rcl
sti
or
jmp
arpl
fnstsw
(bad)
aas
xor
cmp
ficomp
mov
(bad)
mov
ins
push
ret
popf
test
mov
xor
loop
adc
push
arpl
xchg
sub
repnz
sbb
jle
or
(bad)
sbb
xchg
scas
outs
sbb
push
inc
loope
or
sbb
enter
shl
call
je
out
xor
imul
mov
xchg
adc
jl
sbb
pop
sub
jmp
xchg
pop
sub
aas
cmp
sub
popf
stos
pop
jg
cmp
adc
into
adc
push
in
enter
and
(bad)
lods
mov
test
push
adc
loope
adc
stc
adc
or
pushf
pop
inc
jo
or
out
jmp
adc
mov
retf
pop
dec
adc
xor
pop
push
mov
aam
outs
clc
iret
add
jle
(bad)
icebp
fisubr
cmp
or
into
icebp
mov
mov
add
push
xor
shl
mov
sub
ficom
push
adc
adc
cmps
lods
jae
ins
ret
clc
jo
cwde
xor
in
iret
mov
xchg
icebp
and
ds
push
scas
aam
enter
int3
outs
dec
jl
add
ret
int
push
pop
lock
outs
cmc
dec
or
mov
shl
in
das
lea
sahf
mov
test
or
pop
sub
xchg
mov
or
adc
xchg
sub
ss
repz
jge
call
adc
inc
pop
int3
mov
dec
sbb
(bad)
or
in
mov
or
ins
pop
mov
inc
es
iret
sub
lods
jg
rol
pop
jbe
pop
inc
mov
gs
xchg
push
mov
pop
jmp
loop
in
stos
hlt
scas
jne
pushf
shl
xor
ret
aaa
(bad)
jg
sbb
int3
scas
dec
xchg
rol
xor
pusha
scas
out
cmp
jmp
les
mov
push
add
not
fdivr
add
arpl
inc
int
sub
in
daa
call
stos
dec
adc
cwde
add
sbb
jge
shl
xchg
sub
adc
cpuid
call
stos
sub
pop
pop
sbb
fsub
push
sbb
and
ins
jbe
(bad)
cmp
mov
jmp
jae
repz
jmp
add
xlat
std
sbb
mov
daa
(bad)
scas
cmp
jl
xchg
mov
jmp
outs
xchg
lods
iret
rol
xor
push
pop
cdq
jecxz
mov
int
xor
mov
xchg
dec
(bad)
cmps
push
imul
pop
fiadd
or
jb
push
jb
push
repnz
sbb
sbb
cmc
inc
xor
(bad)
mov
mov
(bad)
iret
test
stos
std
mov
inc
cmp
outs
inc
bnd
and
cwde
or
scas
xor
fs
add
cmp
or
rcr
inc
fadd
mov
cmp
pop
pop
(bad)
xchg
rol
loop
add
sub
mov
mov
retf
push
mov
pop
sub
xlat
add
outs
or
inc
cmc
mov
sub
das
(bad)
pop
icebp
neg
jbe
fs
imul
aam
mov
clc
das
mov
sub
dec
pop
mov
(bad)
retf
inc
sub
or
ins
int3
xchg
fiadd
rol
std
pop
pop
mov
dec
arpl
push
dec
jp
int3
cmp
and
pop
mov
xchg
dec
fmul
iret
dec
sahf
fcomp
addr16
or
push
sub
pop
or
lahf
sub
push
iret
mov
bound
(bad)
bound
dec
adc
pop
cdq
cld
mov
(bad)
les
sub
push
enter
ret
loop
push
mov
std
jno
in
mov
jno
imul
in
lahf
hlt
ins
call
test
inc
inc
mov
cs
pop
lea
dec
push
scas
imul
sub
lsl
push
jne
inc
pop
js
fbstp
add
jge
mov
repz
mov
or
mov
xor
adc
arpl
fs
in
rcl
xchg
jmp
xchg
enter
neg
pop
popf
or
mov
jmp
xlat
add
dec
cmp
sub
and
movs
gs
ins
jg
jecxz
xchg
sub
mov
ror
pop
into
mov
cmps
mov
jg
dec
int3
xchg
sbb
push
adc
idiv
daa
idiv
sub
fcomp
aas
or
sbb
push
call
fst
fnstcw
push
neg
and
in
add
pushf
mov
adc
push
mov
xor
in
cmp
inc
movs
bound
mov
xchg
(bad)
jl
loope
loope
mov
mov
int3
dec
xor
sub
sub
cmc
push
pop
pop
in
mov
loopne
icebp
cmp
(bad)
cwde
jg
aaa
jne
inc
adc
cmovo
mov
movs
mov
cs
add
sub
ss
push
aad
lds
cwde
and
sbb
repz
inc
push
inc
dec
or
push
aas
mov
fs
adc
cmp
hlt
das
std
popf
sbb
pusha
adc
in
call
loopne
sbb
push
scas
ror
jne
fistp
js
stos
mov
pop
ret
inc
and
sub
lea
ins
mov
cmp
xchg
pusha
pop
mov
sub
out
test
repnz
jecxz
ret
inc
cmp
xor
dec
fmul
(bad)
cld
movs
rcl
mov
das
int
aaa
pop
imul
movs
add
ret
icebp
sub
outs
jg
mov
call
push
jle
cmp
in
imul
mov
fstp
push
mov
imul
inc
fs
aaa
dec
in
fild
jge
sub
xchg
int3
jge
gs
add
xor
ins
mov
fisttp
mov
stos
pushf
das
or
or
das
pop
jns
jecxz
nop
(bad)
sbb
ret
out
xchg
aad
xchg
int3
push
neg
mov
push
lds
mov
mov
aas
jecxz
sbb
pop
dec
sub
cmp
lods
add
stos
test
out
push
scas
xchg
leave
movs
push
push
or
(bad)
aad
test
push
pop
sbb
jns
test
fld
cld
jmp
cmps
pop
repnz
mov
out
push
pusha
movs
neg
adc
jg
fsub
cmps
rcr
mov
stos
inc
sti
pop
les
mov
fild
mov
sbb
xchg
(bad)
imul
fldcw
fwait
sbb
mov
call
jp
mov
push
mov
fcom
or
fmulp
cmp
stc
outs
sbb
fs
test
push
mov
sbb
add
sbb
xor
inc
in
fs
lods
sbb
or
add
jbe
pop
repz
fst
ret
mov
and
aam
xchg
push
sbb
fcmovb
mov
cmp
(bad)
icebp
jmp
xchg
mov
iret
jbe
push
xor
add
test
dec
mov
aam
sbb
xlat
test
int3
push
sbb
in
(bad)
and
xor
scas
sbb
fucomip
inc
mov
push
out
retf
cmp
in
push
jno
das
push
xchg
pop
sub
adc
xor
pop
repnz
repz
(bad)
cli
mov
aam
push
or
cmp
xor
mov
inc
inc
sbb
push
jno
mov
ds
daa
pop
cwde
popa
mov
sub
adc
mov
enter
mov
mov
lods
mov
lea
mov
mov
jo
jns
popa
cmps
fcomp
test
jne
(bad)
sahf
(bad)
cmps
mov
fcmovne
fucomi
hlt
or
int
push
add
and
jae
arpl
add
enter
sub
imul
add
into
ins
mov
adc
es
sub
icebp
cmp
mov
test
nop
xchg
sbb
pop
imul
cmps
push
sahf
sub
addr16
xchg
push
mov
cld
cmp
mov
test
add
adc
sbb
je
adc
mov
jl
aas
test
clc
pop
outs
dec
mov
not
dec
fcom
(bad)
mov
sub
es
iret
xchg
fucomi
mov
xchg
cmp
ror
adc
add
mov
and
adc
dec
stc
lock
imul
mov
mov
scas
push
or
cmps
mov
jno
pop
jmp
sub
nop
ins
cmp
cld
shr
cmps
(bad)
test
sahf
lods
jno
mov
rcr
jne
sbb
sub
mov
xor
add
and
xor
ret
push
lds
out
xor
cmp
dec
push
sub
inc
xor
fsub
pop
inc
mov
push
jge
pop
rcl
add
cmps
xor
pusha
sbb
fbstp
inc
fwait
mov
repz
pop
cmp
sub
sub
cli
fnstenv
rcl
cmp
clc
sub
in
lahf
cld
or
push
cwde
fdivr
or
cld
mov
call
mov
mov
xchg
mov
xor
test
mov
mov
fst
sub
lods
and
cs
pop
cmps
add
lahf
jmp
fdivr
mov
push
ror
out
pop
in
adc
cmp
sbb
lahf
xor
pop
in
(bad)
xor
fidiv
(bad)
push
jl
outs
iret
push
pop
pop
(bad)
xor
ffree
stos
mov
push
(bad)
cld
mov
in
mov
xor
add
xchg
jge
das
imul
mov
sbb
aas
scas
sub
pop
ja
retf
fwait
mov
push
lahf
cmc
je
aaa
sbb
cli
add
stc
and
shl
pop
hlt
ret
(bad)
mov
stc
cli
jae
jmp
loope
outs
mov
icebp
aam
fisubr
bound
mov
ror
in
mov
mov
sbb
mov
and
(bad)
call
or
in
ret
(bad)
mov
jo
or
dec
sub
xor
mov
(bad)
xor
xchg
outs
mov
sbb
scas
and
pop
and
test
retf
sbb
in
push
enter
int
stc
(bad)
repnz
rcl
mov
test
mov
mov
xchg
jne
into
je
stos
sub
jns
sub
dec
inc
mov
adc
call
ret
xchg
and
fucomp
mov
adc
jns
sbb
(bad)
loopne
xor
repz
and
push
mov
leave
jae
push
push
(bad)
outs
call
(bad)
imul
cmp
dec
mov
push
mov
inc
js
leave
sub
sub
(bad)
ds
(bad)
popf
ins
xchg
test
int
test
mov
cmp
stos
sbb
or
loope
aas
mov
dec
push
pop
nop
sbb
aam
cmp
or
fld
mov
push
add
mov
fcomp
std
pop
or
(bad)
neg
adc
cs
mov
pop
dec
push
pop
lahf
add
sub
cdq
adc
jbe
xor
arpl
pop
sbb
cwde
or
or
cli
fs
pushf
xrelease
fimul
sbb
adc
sbb
adc
mov
aas
call
ins
adc
xchg
gs
pop
test
and
mov
and
hlt
out
sub
xor
pop
pop
vaddsubpd
clc
mov
adc
adc
xchg
mov
inc
push
fnstsw
pop
lds
jl
test
jno
mov
fsubr
pop
and
push
sub
push
mov
(bad)
lahf
or
das
dec
mov
push
outs
aad
data16
aaa
arpl
mov
pop
int
sti
cmp
add
adc
fild
test
mov
(bad)
push
out
or
pusha
movs
rcr
mov
push
or
rol
inc
les
xchg
jnp
rcl
popa
add
leave
ror
cmp
pop
test
sub
add
ret
sbb
iret
cmp
inc
pop
push
lea
stos
push
push
icebp
adc
pop
aad
mov
push
sub
push
xchg
in
cmp
repnz
out
pop
jle
lds
dec
imul
push
inc
in
xchg
cmp
dec
adc
ret
repz
js
cmp
jge
push
adc
dec
and
xor
sub
lahf
sbb
xchg
xchg
clc
ret
fcmovnu
js
cmp
dec
xor
mov
pop
push
cmp
aad
lea
adc
dec
leave
mov
jl
movs
sub
xchg
mov
neg
mov
repz
clc
fisubr
mov
test
(bad)
cs
sbb
adc
and
add
sbb
jbe
adc
out
fiadd
into
lea
xchg
fsubr
push
adc
lahf
cld
arpl
popa
fistp
pop
repnz
ins
jno
xor
adc
cmp
push
fdiv
sbb
add
mov
pop
inc
jmp
loopne
jg
mov
jl
adc
sub
in
les
dec
jo
loopne
sbb
pop
popf
jp
sub
shl
push
adc
pop
inc
pop
and
loopne
sahf
pushf
mov
scas
loope
(bad)
cmc
mov
test
out
imul
(bad)
dec
push
test
arpl
pop
pusha
dec
xlat
aaa
aam
outs
stos
std
xor
(bad)
adc
loopne
xor
retf
jle
(bad)
dec
lahf
call
xchg
dec
and
loop
rcl
out
js
ins
aas
sub
push
sti
vmovss
test
push
fwait
(bad)
pop
test
dec
ss
jbe
loopne
call
dec
mov
push
adc
js
lods
push
xchg
aas
(bad)
push
xor
stc
sbb
outs
(bad)
mov
jns
xchg
push
sbb
mov
(bad)
data16
call
mov
xor
dec
in
dec
jb
pop
enter
push
das
fdiv
cmp
xor
sub
bswap
pop
sbb
movs
jge
add
push
mov
retf
mov
inc
sub
inc
mov
and
cmp
out
mov
ins
pusha
pop
mov
mov
sub
cmp
sub
std
push
ret
call
loop
ss
jnp
xchg
xchg
aas
std
mov
mov
mov
adc
shl
clc
mov
jmp
(bad)
sahf
or
call
mov
push
pop
jmp
pop
jp
test
cmp
adc
cmp
dec
xchg
popf
gs
add
jo
dec
pop
or
popa
mov
data16
mov
popf
mov
leave
mov
cmp
sub
cmp
mov
and
mov
repz
mov
mov
bound
jmp
pop
das
xchg
stc
and
retf
or
scas
push
sbb
push
loopne
std
into
call
add
push
(bad)
icebp
aas
shr
scas
scas
or
sub
xor
outs
adc
jg
jne
add
xor
mov
in
inc
and
in
fld
movs
(bad)
xor
sub
mov
push
mov
retf
push
in
test
adc
aam
ins
outs
mov
xchg
ja
xchg
add
adc
int3
push
(bad)
adc
mov
dec
mov
xor
ret
das
or
adc
or
dec
scas
inc
push
int3
jmp
adc
add
sahf
add
mov
adc
mov
jp
push
fmul
inc
jge
lods
daa
mov
dec
push
sbb
pop
imul
dec
and
xchg
out
icebp
and
push
inc
cmp
cdq
inc
cmp
push
cmp
or
sbb
std
sub
jo
or
sub
xchg
in
jle
xor
(bad)
jmp
(bad)
cdq
jae
lahf
xchg
outs
ret
xchg
test
pop
xchg
enter
sub
jle
adc
jmp
mov
int
or
xor
ss
sbb
mov
les
nop
stos
and
lahf
mov
call
push
xchg
pushf
mov
mov
mov
test
das
inc
jo
addr16
retf
pop
jmp
and
cmp
pop
es
in
jg
push
(bad)
fst
adc
(bad)
and
push
shr
inc
test
fisttp
nop
pop
std
and
xchg
daa
repz
in
imul
pop
xor
cwde
dec
jo
cld
ja
adc
scas
rcl
xchg
inc
sbb
mov
into
jg
push
cdq
hlt
and
retf
xor
xor
mov
dec
mov
std
pop
cli
cmp
lds
les
pop
sub
fisttp
loope
pop
pusha
in
outs
clc
int3
mov
sbb
sub
xchg
lds
bound
fisub
(bad)
rcl
pop
xlat
xlat
(bad)
cdq
mov
fdiv
sub
or
and
sbb
icebp
adc
push
daa
mov
xchg
push
arpl
cld
lahf
lea
ins
add
push
popa
cli
mov
mov
jg
mov
stc
jmp
push
(bad)
shl
out
xor
jecxz
inc
and
rol
out
jle
fbstp
adc
xor
es
pushf
arpl
mov
jp
idiv
sbb
inc
xor
nop
and
in
pop
pop
mov
dec
in
cmp
(bad)
cmp
mov
or
jmp
ffreep
xor
ret
add
scas
jne
mov
pop
out
cdq
xlat
daa
popf
adc
shr
pop
es
jne
fucomi
xchg
cmps
(bad)
aaa
mov
sar
inc
pop
in
fmul
mov
pop
jo
arpl
ins
(bad)
xchg
jl
retf
dec
call
ins
pushf
pushf
jge
cwde
daa
out
ins
int
repz
sub
mov
mov
test
cmp
arpl
pop
aas
mov
pop
rcl
fmul
cs
adc
imul
mov
mov
call
sbb
pop
adc
xchg
shr
mov
inc
jmp
pop
mov
in
mov
lea
jae
inc
loopne
sbb
scas
hlt
jmp
retf
mov
sbb
fcmove
or
aad
ins
mov
sbb
call
sti
cmc
in
push
das
nop
sbb
add
jae
das
jno
data16
loop
jp
jno
push
pop
loop
mov
inc
jnp
les
lods
fdiv
jmp
add
js
je
and
sub
imul
movs
adc
test
lahf
mov
out
pusha
lahf
out
mov
push
or
dec
iret
out
shl
fwait
outs
sbb
(bad)
push
add
jl
sub
adc
push
inc
pop
jl
(bad)
jg
loope
clc
add
xchg
les
ja
leave
rcr
int
stc
or
mov
fnstcw
aaa
imul
sbb
push
pop
data16
push
push
xlat
arpl
cdq
fstp
outs
fbstp
aas
cmp
xor
xchg
retf
jecxz
cld
fst
leave
sahf
sbb
repnz
mov
mov
push
outs
mov
push
mov
xchg
jmp
pop
sub
test
outs
add
loopne
dec
mov
fwait
cdq
jge
outs
fnsave
mov
jne
jge
jmp
dec
sbb
fisub
push
mov
cld
push
or
pop
int3
mov
jmp
in
or
outs
mov
scas
(bad)
pop
or
jecxz
mov
fistp
es
jo
cwde
push
push
cmp
push
sbb
scas
mov
fadd
sar
sbb
in
adc
in
pop
cli
cmp
inc
pop
ret
imul
adc
loope
pop
push
jmp
and
call
fld
mov
clc
push
pop
pushf
jns
xchg
mov
sti
sbb
dec
mov
mov
mov
mov
fstp
cdq
test
jmp
(bad)
sti
(bad)
sbb
cmp
jecxz
jp
xchg
xchg
pop
dec
sbb
xor
daa
sbb
int3
repnz
in
cmp
dec
mov
dec
xor
in
lea
xor
fbld
(bad)
in
mov
xchg
aaa
adc
fisubr
sbb
js
xor
adc
push
leave
loope
iret
or
sbb
fdivr
pop
mov
lods
bound
jmp
lahf
lods
mov
pop
mov
into
mov
loop
cmps
(bad)
cs
add
sbb
jmp
pop
inc
xchg
gs
or
xor
aaa
sub
repnz
into
(bad)
inc
stos
jmp
mov
push
adc
sbb
mov
ret
pop
out
sti
xlat
aas
lahf
sub
push
cmps
and
cld
cmps
push
inc
dec
xor
ins
mov
xor
stos
cmp
lea
pop
loop
scas
adc
and
popa
pop
push
sub
mov
retf
rcl
addr16
push
dec
int3
mov
inc
dec
bound
add
adc
push
fucomp
aas
(bad)
mov
pusha
inc
pushf
xor
sbb
fld
stos
fimul
imul
popa
xchg
stos
jp
lods
mov
cmp
ins
dec
fisubr
cmp
xchg
sub
cmp
sub
or
movs
adc
cmp
sub
xchg
xor
jb
aas
sub
add
lea
push
ins
add
lea
stc
fldcw
(bad)
xchg
pusha
adc
imul
push
sub
into
stos
nop
pop
rol
dec
in
push
sbb
push
das
test
jnp
cmp
mov
mov
ret
call
xchg
add
retf
test
dec
(bad)
cmp
imul
mov
loop
add
pop
adc
dec
dec
(bad)
cmp
xor
mov
test
pop
test
and
inc
inc
cmps
aam
pop
sbb
mov
sbb
push
aas
call
mov
lods
push
cmp
mov
or
mov
add
sahf
jne
adc
jnp
retf
cld
je
adc
fcmovnbe
dec
in
push
add
dec
fcomip
inc
mov
mov
mov
xchg
cmp
inc
fdivp
xor
ja
gs
aaa
add
fs
inc
and
pop
fmul
push
xchg
mov
xor
sar
and
stos
pop
pop
mov
jmp
xor
test
fadd
fiadd
popa
leave
jb
jl
shr
call
mov
rol
outs
loope
xchg
mov
(bad)
adc
pusha
jbe
xchg
xchg
push
and
and
adc
test
lea
jo
sub
sbb
aad
sub
(bad)
in
pop
stc
inc
das
add
pop
sub
fcmovu
or
aad
push
mov
inc
mov
dec
mov
jecxz
xor
xchg
jp
pushf
ss
popa
cmps
cmc
and
fs
pop
mov
mov
call
dec
xchg
retf
pop
push
cmp
clc
(bad)
cwde
mov
inc
ret
or
and
cmc
out
add
or
push
push
stos
push
repnz
pop
cwde
adc
call
ja
stc
xchg
pop
xor
pushf
jmp
or
and
scas
xor
add
hlt
inc
stos
nop
push
and
enter
jo
lds
test
imul
test
jg
mov
(bad)
push
xchg
jl
dec
mov
dec
mov
shl
xor
push
loope
add
je
add
add
pusha
ret
icebp
dec
fsubr
cld
xlat
add
out
mov
mov
jmp
icebp
test
push
dec
out
sbb
sub
push
mov
mov
test
adc
ret
daa
push
loop
jne
push
rcr
or
or
loop
cld
pop
pop
xor
fwait
xor
jo
inc
pop
test
push
pop
sbb
repz
mov
popf
sbb
std
push
dec
adc
lods
sbb
mov
dec
pushf
add
repnz
sbb
mov
shl
sbb
aas
xchg
jle
fdivr
dec
dec
lahf
push
outs
xchg
popf
cwde
call
xchg
add
loopne
mov
es
outs
ins
repnz
push
loope
repz
cmp
in
lahf
cmp
jae
mov
jmp
ja
mov
das
fcmovne
sahf
mov
mov
(bad)
push
scas
ins
cmps
cs
add
(bad)
xlat
ins
add
mov
sti
ins
fs
arpl
mov
ret
adc
cli
xchg
(bad)
in
mov
das
and
pop
scas
in
mov
hlt
fs
adc
call
lahf
push
xchg
dec
or
cld
mov
je
sub
lea
mov
pop
lods
push
scas
nop
shr
scas
dec
cmovl
stc
ss
outs
ret
jns
out
enter
pushf
cld
mov
dec
aam
or
and
xchg
xlat
stos
outs
out
jl
sahf
pop
idiv
(bad)
push
push
mov
imul
pop
pushf
cmps
xor
lds
cmps
inc
data16
jmp
cld
pushf
adc
sub
jb
jbe
sysenter
sti
lea
sbb
and
lds
sub
sbb
lahf
lods
mov
enter
xor
add
jmp
mov
mov
adc
loop
int
push
aaa
sti
xchg
aaa
les
cld
scas
mov
mov
rol
loope
pop
mov
cdq
mov
cs
xor
iret
and
sti
repnz
mov
(bad)
(bad)
fsub
push
scas
jnp
add
in
call
cmp
mov
xor
hlt
lds
popa
stos
(bad)
or
fidivr
mov
mov
out
mov
lods
mov
pop
mov
mov
inc
cmp
cmp
mov
mov
xchg
jl
sub
add
push
ins
inc
rdmsr
cmps
pop
pop
scas
inc
lock
test
pop
push
xchg
adc
mov
outs
fild
ins
addr16
loop
shr
fisub
or
fsub
jo
and
arpl
idiv
xor
lea
pop
out
inc
popf
and
(bad)
cmp
jmp
cmpxchg
cmp
sub
cld
es
jl
or
cmc
shl
cmp
push
(bad)
shl
movs
dec
fcomp
cwde
jo
mov
cld
aaa
jo
push
scas
jb
ds
clc
pushf
(bad)
adc
mov
adc
out
mov
xor
retf
dec
xchg
mov
jmp
(bad)
loopne
mov
sti
rcl
adc
lods
int
pop
push
xchg
mov
repz
js
test
out
and
bound
push
pop
retf
enter
push
fcomp
push
imul
loop
test
cmp
into
stc
xor
repz
jo
jbe
push
lock
adc
aad
test
fwait
mov
les
push
ins
xor
jns
mov
cmp
rol
xor
(bad)
xor
nop
xchg
das
sar
dec
rcr
pushf
xor
pop
cli
cmps
ror
push
mov
push
imul
xor
inc
(bad)
mov
pushf
jne
cmps
outs
adc
arpl
(bad)
xor
test
loopne
adc
push
push
adc
mov
jmp
aad
mov
xlat
pop
cmp
call
pop
cmc
adc
lahf
jae
int
loop
iret
retf
retf
(bad)
jo
(bad)
(bad)
aad
int3
inc
ret
retf
addr16
rol
mul
cmps
mov
ins
xlat
pushf
xor
not
sub
cli
inc
jmp
xor
sbb
dec
dec
push
stos
iret
xchg
(bad)
test
adc
arpl
add
pop
loope
sub
adc
dec
inc
sbb
jnp
int
rol
ja
jnp
into
xor
sti
dec
dec
(bad)
xor
sbb
cmc
jmp
jg
or
push
ja
icebp
addr16
cli
test
mov
lods
jle
addr16
jo
pop
or
hlt
(bad)
in
and
adc
push
jecxz
movs
and
mov
es
loopne
enter
adc
iret
shl
sub
sahf
mov
push
fiadd
xchg
stos
or
mov
outs
sbb
adc
popa
xchg
std
mov
cmp
push
arpl
mov
sbb
retf
sbb
or
pusha
mov
push
sub
call
xchg
mov
sbb
xchg
ret
(bad)
adc
adc
push
jne
mov
out
ret
call
call
push
iret
pushf
nop
mov
mov
dec
pop
js
jno
imul
mov
aas
mov
xor
adc
cmp
lahf
pop
mov
xlat
cmp
mov
adc
(bad)
jmp
(bad)
retf
mov
enter
js
mov
pop
(bad)
mov
adc
call
mov
add
loop
faddp
call
sub
loop
jae
aaa
and
jae
sahf
and
mov
(bad)
xchg
pop
pop
popf
inc
push
test
lahf
jbe
cmp
and
lods
inc
mov
mov
mov
jl
retf
xor
leave
sbb
in
xchg
pushf
sub
pop
mov
push
add
cmp
push
xor
inc
shr
scas
adc
adc
addr16
cmps
push
loope
mov
push
sub
addr16
mov
std
mov
lock
fidivr
ins
mov
pmullw
repnz
ss
fwait
dec
lods
cmp
cmps
scas
pop
mov
mov
cmp
xchg
test
mov
mov
ret
push
js
daa
mov
pop
add
dec
scas
cmps
out
repnz
out
sub
adc
mov
cmp
push
or
pop
sbb
cmc
enter
lock
mov
ficomp
fistp
repnz
sahf
je
imul
aad
(bad)
jp
xor
lea
arpl
xchg
adc
jp
mov
fild
and
push
sub
ret
jp
mov
pusha
adc
(bad)
(bad)
cmp
rol
repz
loope
pop
repnz
push
imul
jnp
lahf
xchg
xlat
aas
aas
test
scas
push
int3
mov
out
jbe
mov
lock
jl
push
jbe
lahf
cmp
mov
pushf
ss
mov
push
cmp
leave
jno
stc
in
jmp
cmp
sbb
aas
in
punpcklwd
mov
push
xchg
aaa
iret
das
shl
cmps
imul
mov
lahf
dec
sahf
ret
outs
fs
fwait
test
inc
retf
stc
rcr
lods
and
xor
mov
xchg
xor
cmps
and
pushf
jno
nop
push
mov
stos
jmp
and
sbb
inc
xchg
xor
push
sub
inc
mov
out
sub
jmp
mov
pop
cmps
mov
jne
into
lahf
push
dec
cmc
fcmovbe
jo
shr
mov
ret
dec
inc
xchg
mov
adc
xor
add
jb
sub
pop
(bad)
sbb
pop
in
push
jne
inc
mov
jecxz
xchg
aaa
xor
lods
sub
inc
xor
jne
or
pop
mov
imul
sub
fnstcw
mov
add
pop
rcr
mov
cmp
or
aad
sub
sub
mov
pop
(bad)
cmp
push
sahf
adc
int3
mov
lods
or
dec
hlt
and
out
dec
mov
mov
xor
call
fld
dec
push
outs
cmps
jecxz
sbb
jns
cwde
xchg
pop
(bad)
cmc
adc
ror
mov
xor
jge
je
jnp
and
and
xchg
das
into
jne
(bad)
das
lods
imul
daa
aaa
lea
push
jb
push
data16
push
and
xchg
sti
lds
and
test
cs
add
sub
adc
cwde
hlt
add
push
and
lahf
xlat
push
data16
scas
idiv
retf
add
mov
test
js
sar
fmul
or
xor
icebp
add
inc
call
jo
xor
jmp
adc
inc
es
cmp
scas
mov
cld
adc
les
mov
scas
push
add
nop
cmps
add
push
js
push
fs
sbb
push
or
aad
add
aam
out
inc
mov
div
aam
fwait
into
(bad)
test
arpl
test
cld
and
inc
mov
leave
adc
xor
sub
out
dec
mov
repz
not
hlt
scas
push
jle
je
fistp
jmp
xchg
aaa
jp
inc
loope
clc
adc
dec
cmps
fwait
sar
loop
mov
faddp
iret
jne
arpl
lock
mov
bswap
jnp
jo
or
pop
pop
mov
retf
mov
sub
mov
jg
test
(bad)
aas
cdq
or
pop
sub
cs
mul
jae
adc
icebp
dec
cmp
ret
cwde
jecxz
out
add
dec
push
sti
xchg
add
leave
ins
cmc
adc
retf
aam
and
adc
popa
aas
or
mov
pop
jnp
xchg
xor
enter
fdiv
push
shl
xchg
fistp
and
mov
pop
cmp
pop
and
mov
push
sbb
adc
adc
xchg
fwait
xor
sbb
bound
push
pushf
sub
call
aam
fisttp
lock
lods
jmp
call
sub
cmp
push
ror
add
sbb
into
sti
cs
xor
ins
fs
enter
retf
dec
ret
cmp
(bad)
dec
int
imul
cmp
mov
scas
mov
repnz
(bad)
pop
ins
dec
repnz
add
and
push
pushf
inc
dec
outs
mov
cmp
(bad)
outs
sub
push
xchg
add
mov
je
inc
cli
gs
push
(bad)
lods
xchg
into
not
jo
mov
xor
scas
gs
call
xchg
cmp
sbb
sub
pop
inc
(bad)
or
mov
sub
adc
pop
das
inc
rol
ret
imul
sbb
lock
mov
xor
ret
nop
cli
dec
mov
int3
mov
sub
push
mov
xchg
pop
mov
or
push
cmp
cwde
xchg
jg
xchg
ja
mov
and
adc
imul
pop
call
and
jle
mov
int3
add
retf
sub
cmp
jne
outs
imul
es
sbb
sbb
lea
test
mov
mov
punpckhbw
pop
scas
les
clc
repnz
(bad)
cmp
mov
aad
xor
ja
mov
fdivp
js
gs
adc
push
and
sub
sub
je
jnp
push
popa
pop
cdq
add
and
test
jns
xchg
outs
lahf
add
cmp
sub
mov
(bad)
les
into
xor
mov
(bad)
jmp
xor
sahf
popa
mov
sar
inc
sahf
dec
xor
pushf
in
in
pusha
dec
dec
xchg
sbb
push
int
dec
push
xchg
jb
call
dec
dec
popf
(bad)
hlt
int
movs
int
into
loope
jbe
ins
(bad)
cmp
dec
pop
enter
mov
dec
jp
push
add
push
xchg
fisubr
sub
push
jecxz
(bad)
mov
jne
jle
nop
mov
(bad)
lock
mov
sbb
mov
out
test
and
cmp
mov
inc
adc
and
sbb
(bad)
in
test
jmp
cmp
push
pushf
popa
and
fisub
gs
mov
add
dec
cmp
ins
sbb
push
inc
xchg
inc
in
int3
pop
mov
or
outs
popf
dec
push
mov
add
pushf
lds
fidivr
xchg
sbb
sti
pop
dec
lock
sahf
out
push
lods
push
dec
stos
cwde
mov
xchg
jl
xchg
je
ror
inc
add
lea
lds
xor
int
cmp
mov
mov
and
in
cli
loopne
dec
mov
cmps
aam
adc
ins
sbb
xchg
xor
or
push
pop
enter
mov
addr16
lahf
ret
pop
sbb
mov
fimul
sub
mov
xor
sahf
in
pop
mov
cmp
je
and
shl
mov
js
ret
sbb
inc
hlt
mov
loop
(bad)
cdq
test
loop
jae
lea
and
jne
mov
out
or
data16
das
retf
xor
xor
mov
xor
cmp
xchg
pop
or
push
mov
pop
iret
push
int3
xor
loopne
or
iret
in
cmc
dec
sbb
in
sub
sbb
inc
cmc
dec
lock
(bad)
ins
push
cmp
nop
xor
movs
das
call
jmp
mul
mov
sti
cmovae
pop
adc
dec
pop
enter
mul
mov
jmp
pop
xlat
mov
inc
sahf
xchg
bound
rol
sub
retf
scas
pop
push
jnp
pop
into
push
cdq
sub
cli
in
cmps
outs
or
dec
pop
(bad)
cmp
repz
loop
jp
pop
xchg
mov
sti
inc
xlat
je
fmul
shr
bound
(bad)
call
(bad)
sbb
xchg
mov
jecxz
(bad)
outs
xchg
jb
outs
fdivr
push
pop
fucomi
ins
mov
xchg
ret
push
add
and
mov
mov
adc
pushf
(bad)
fcom
in
(bad)
ret
push
dec
call
ins
cwde
jno
cmps
sub
(bad)
retf
push
mov
push
pop
xchg
push
push
inc
cwde
daa
pop
mov
jmp
int
pushf
ins
and
jl
ds
imul
pop
addr16
inc
test
(bad)
aad
sahf
stos
neg
mov
std
cmp
pop
fiadd
sbb
sbb
jno
in
(bad)
sbb
out
cmp
mov
or
dec
(bad)
lods
inc
cmp
ret
jmp
mov
pop
(bad)
dec
jbe
jp
jb
sub
add
(bad)
jg
into
push
mov
dec
imul
jbe
out
mov
or
pop
call
lock
mov
jp
in
sub
adc
mov
xchg
popa
inc
xlat
cmc
fimul
jnp
jb
fild
cdq
sub
sub
aas
mov
sub
adc
mov
call
fbstp
cmp
push
enter
push
stos
fwait
adc
dec
pop
ficomp
cmp
sub
popf
sub
out
aas
(bad)
imul
and
xchg
push
cmp
xor
dec
mov
dec
stc
pop
fisubr
popf
stos
daa
push
and
movs
arpl
inc
mov
inc
bnd
stc
ja
cmps
sub
jg
mov
sub
or
mov
gs
enter
adc
pop
pop
fbstp
jecxz
and
mov
retf
stc
loop
repz
sub
jo
fadd
push
mov
das
je
adc
shr
neg
(bad)
jmp
pop
cmp
jo
lea
loop
pop
dec
dec
fadd
retf
pushf
jb
int
in
dec
sbb
push
mov
cmps
jge
shl
outs
jg
push
icebp
mov
test
push
aaa
jo
sbb
(bad)
push
mov
rcr
lahf
sbb
pushf
xchg
xlat
lea
lea
test
and
sti
pushf
or
sbb
ret
inc
xor
arpl
sub
mov
mov
lock
mov
cld
scas
mov
push
in
aad
dec
or
mov
sbb
mov
pop
xchg
xchg
sbb
aaa
sbb
jnp
jl
xchg
mov
call
dec
cmps
cmp
push
repnz
data16
xor
inc
jne
push
lods
xchg
and
mov
in
push
add
dec
mov
push
push
js
out
in
jp
ficomp
mov
cmp
cmp
outs
rcl
int
iret
sbb
into
aas
mov
cmp
add
push
lock
arpl
pop
data16
cmp
mov
inc
pop
pop
call
push
add
mov
xchg
mov
xlat
in
into
lods
adc
fistp
sbb
xchg
push
ins
shl
ja
or
ins
in
mov
shl
jge
xor
shl
fmul
xchg
sub
inc
mov
xor
sbb
stos
movups
fcmovnu
cmp
cmps
in
arpl
jbe
fdivr
dec
or
pop
call
jecxz
in
retf
outs
fld
inc
inc
sub
dec
scas
cmp
jg
das
(bad)
xchg
ja
pusha
dec
hlt
xchg
pop
std
cwde
fcom
aaa
mov
jge
das
inc
mov
lahf
nop
inc
shl
(bad)
xor
gs
mov
mov
fisttp
pop
test
fsub
sub
sbb
sbb
mov
lahf
retf
scas
cmp
adc
xchg
adc
xchg
push
popa
mov
add
mov
mov
add
loop
mov
outs
inc
cmp
sbb
dec
mov
cwde
into
jmp
push
cmc
mov
aam
push
mov
sahf
inc
fild
adc
ds
movs
inc
mov
out
push
(bad)
dec
call
inc
(bad)
jne
dec
sbb
mov
jp
xchg
xchg
out
adc
jl
jg
or
push
fsubrp
dec
movs
and
rcr
inc
out
mov
push
movs
aad
call
sbb
fwait
pop
loop
cld
jl
gs
inc
addr16
aas
div
into
inc
sar
pop
jae
xor
mov
(bad)
cmp
ins
fidiv
dec
fs
xor
jbe
cmp
mov
jp
ds
(bad)
stos
jnp
lods
fist
pusha
rcr
jmp
(bad)
aad
ins
test
ds
gs
ret
loopne
and
dec
sbb
rcl
or
jne
push
ret
adc
mov
push
cmp
or
mov
lods
ret
imul
(bad)
out
xchg
dec
sti
adc
cmp
xchg
repnz
jmp
fucomi
ins
pop
stos
dec
imul
push
mov
lods
pop
push
(bad)
stc
xchg
jo
dec
pop
call
cdq
add
outs
imul
inc
cmp
or
retf
stos
int
add
call
test
aad
adc
add
fmul
xchg
test
mov
adc
sbb
adc
and
cmp
mov
popa
mov
xor
mov
sub
jb
test
dec
cli
aaa
cmp
jmp
mov
jmp
push
push
jge
ror
cld
pop
sub
in
xchg
imul
outs
mov
int3
call
(bad)
adc
pop
xor
push
int3
sub
pop
adc
and
out
jo
loopne
xchg
call
dec
cmp
js
mov
pop
aam
icebp
aas
leave
scas
sub
fnstcw
push
sub
imul
jecxz
jg
or
cmps
bound
pop
mov
cmovae
push
imul
mov
sub
jl
xchg
outs
scas
adc
aam
out
test
push
test
pop
fs
adc
das
inc
lea
sub
ret
test
adc
cwde
add
xchg
ins
ror
enter
ret
sub
cld
inc
popf
ja
or
aaa
in
adc
push
jmp
add
outs
sub
fldcw
(bad)
push
push
call
push
jne
std
icebp
and
shr
aad
jl
pop
jmp
test
into
sbb
lahf
push
xor
lahf
cmp
(bad)
call
rsm
xchg
(bad)
rol
cmp
js
jns
mov
add
jle
jle
adc
test
sub
cld
fldenv
daa
mov
loope
int
jmp
mul
push
cmp
dec
fistp
mov
cmp
fst
jge
imul
mov
mov
fsubr
bound
int
fwait
mov
dec
jg
mov
loop
add
mov
adc
cmps
xchg
inc
jg
arpl
mov
pop
mov
mov
pop
and
ins
pusha
dec
push
(bad)
mov
cli
out
cmp
(bad)
fsubr
sbb
fs
imul
mov
xor
adc
sbb
retf
jnp
mov
fcmovu
cmp
movs
cmp
fldcw
xor
mov
or
mov
fidivr
gs
dec
fwait
aad
cs
sbb
mov
pop
test
jmp
pop
dec
dec
jns
and
leave
popf
cmp
in
dec
pop
sbb
loopne
test
(bad)
ret
idiv
call
sub
into
retf
cmp
je
sti
jle
or
hlt
nop
sbb
inc
and
push
xor
nop
js
or
cwde
mov
mov
dec
call
mov
xchg
outs
or
cmp
mov
push
mov
imul
sbb
ins
(bad)
(bad)
leave
movs
cdq
stos
dec
push
movsx
dec
jge
test
inc
lea
push
dec
mov
jg
push
enter
ins
out
dec
nop
add
mov
mov
dec
aaa
lea
ror
int3
cld
retf
repnz
test
and
test
adc
imul
adc
jp
scas
mov
mov
mov
aam
add
and
push
mov
cli
loope
push
ja
jbe
jmp
pushw
aad
and
ss
push
cwde
(bad)
push
jo
(bad)
loop
sbb
jp
or
push
rcr
mov
or
ds
sbb
add
and
icebp
mov
scas
hlt
jb
pop
stos
add
add
sar
adc
xor
dec
dec
cdq
cli
fcomp
sub
inc
inc
aas
fsub
jmp
int
mov
push
push
xchg
jl
mov
fadd
pop
fbstp
js
add
ins
cli
mov
add
xchg
cmp
rol
mov
sar
cmp
pop
imul
or
dec
hlt
inc
sar
mov
neg
fisttp
and
cmp
nop
fmul
sbb
(bad)
mov
push
mov
cwde
inc
pop
in
sar
sub
adc
es
mov
xor
add
cld
sub
inc
pop
out
xlat
jmp
pop
into
stos
mov
cmp
inc
ss
dec
(bad)
ror
inc
mov
add
mov
arpl
sti
jb
or
(bad)
xchg
imul
mov
and
stos
nop
sub
cwde
mov
mov
js
retf
out
pop
test
push
inc
jo
repnz
cld
aad
cmp
rcl
mov
jbe
bound
adc
out
cmp
fmul
jbe
sbb
pop
pop
push
movups
cmp
or
jmp
mov
or
aaa
scas
push
(bad)
in
xchg
push
call
test
or
xor
outs
imul
or
pusha
test
jno
xor
mov
sbb
lea
(bad)
sub
xor
adc
das
mov
add
loop
es
fist
mov
xor
(bad)
xchg
push
popa
icebp
adc
fld
sar
adc
mov
xor
bound
add
sub
das
mov
jnp
(bad)
adc
xchg
in
mov
mov
inc
movs
mov
or
dec
ror
addr16
in
xchg
dec
jbe
or
mov
lea
push
push
push
fiadd
add
add
xchg
(bad)
std
cmps
mov
pop
inc
retf
jbe
les
sbb
fild
mov
inc
cs
cmps
ror
jb
aas
pop
mov
jne
or
outs
lds
inc
bound
test
push
(bad)
xor
scas
sar
cwde
inc
idiv
push
arpl
fisttp
scas
xchg
call
fild
iret
push
pop
and
call
inc
jp
test
cs
push
jmp
mov
mov
push
push
sbb
push
xor
mov
pop
cld
adc
call
in
or
test
add
aas
mov
xor
je
pop
js
test
cmp
mov
push
das
in
int3
pushf
pop
fisubr
loopne
aas
sbb
pushf
shl
and
dec
jecxz
les
rcl
mov
dec
shl
push
cwde
xor
cmps
rcl
push
xchg
popf
add
or
in
(bad)
frstpm(287
cwde
int
loopne
and
sbb
mov
xchg
push
push
push
mov
inc
jmp
je
add
jbe
gs
and
and
in
xchg
nop
dec
cld
jns
repnz
inc
les
popa
cs
int3
andps
dec
stos
clc
jbe
and
in
aad
adc
add
pop
lods
ja
les
hlt
sti
jg
and
movs
adc
sbb
mov
xor
int3
add
mov
scas
sbb
test
bound
mov
test
cs
test
add
adc
das
imul
pop
sbb
add
mov
xor
fdiv
(bad)
jp
mov
jle
pop
adc
mov
arpl
lock
popa
xchg
dec
sbb
int3
repnz
or
push
ins
stos
hlt
sti
jne
mov
and
mov
nop
adc
retf
(bad)
push
sub
hlt
xchg
xor
pop
push
pushf
dec
pushf
jg
mov
pop
arpl
sub
push
inc
fisttp
sub
mov
push
jg
jae
sub
and
bswap
(bad)
aad
adc
inc
sar
dec
call
and
dec
and
sbb
or
adc
scas
cli
out
xor
int3
push
push
mov
out
cmps
ins
aad
movs
dec
dec
(bad)
mov
and
mov
jl
xor
pop
jo
xor
sub
pushf
jmp
(bad)
pop
jmp
pop
sub
aaa
inc
push
add
pop
xor
inc
ss
jl
fs
pop
jecxz
cld
clc
pushf
push
pop
xchg
enter
imul
sub
inc
lahf
sbb
pop
pop
or
xchg
js
mov
inc
cld
pop
clc
sbb
mov
pop
retf
mov
iret
dec
div
aas
dec
shr
cmp
sbb
stos
in
or
sub
xlat
mov
cli
es
scas
add
aam
out
test
inc
pop
ja
push
xchg
push
adc
push
mov
push
bound
inc
xlat
test
ja
jb
test
jns
and
inc
and
cmps
sub
fs
fldcw
test
or
dec
inc
sbb
or
sub
std
scas
pushf
imul
rcl
xchg
pop
sti
pop
int3
cwde
cld
stos
mov
push
fwait
(bad)
movs
cmp
cdq
iret
pushf
mov
mov
in
cmp
or
push
(bad)
adc
cmp
je
nop
xlat
jmp
mov
call
inc
adc
mov
or
add
xchg
push
pop
adc
ds
and
sbb
push
pop
ret
cdq
retf
sbb
fbld
add
out
out
pushf
fistp
fadd
adc
lock
mov
and
push
loop
push
call
pop
ret
mov
lea
es
out
ss
mov
scas
mov
shl
mov
pusha
add
push
ffreep
aam
adc
mov
sahf
xor
inc
mov
jmp
popf
push
sbb
push
movs
adc
sub
xchg
retf
test
mov
mov
sub
imul
jns
aad
push
fbstp
mov
scas
add
stos
xor
outs
inc
cmps
sbb
pop
xor
loop
cmp
pop
sub
sbb
jmp
pop
push
xchg
and
xchg
femms
sub
mov
xor
pop
xchg
or
adc
mov
retf
jmp
cmp
ror
pop
addr16
xchg
(bad)
sub
fisub
pop
je
jg
retf
or
ds
pop
cmp
retf
pushf
push
mov
dec
sbb
mov
jo
mov
push
mov
hlt
test
in
sbb
stos
pop
mov
retf
inc
rcr
cmp
dec
sbb
inc
ins
das
push
mov
jge
or
ret
(bad)
repnz
or
ficom
mov
mov
cmp
jecxz
and
popf
cmp
call
fwait
aad
push
out
sub
sub
xchg
call
jge
fsubrp
pop
outs
dec
add
cmc
push
loop
mov
lods
xchg
jmp
sub
vmread
and
lahf
clc
xor
push
imul
call
mov
mov
add
popf
or
push
xor
sbb
enter
rcr
rol
pop
nop
push
iret
fwait
(bad)
arpl
pushf
arpl
jp
test
das
mov
pop
xchg
mov
sahf
enter
or
xchg
out
adc
in
mov
mov
push
or
xor
adc
add
int3
test
test
outs
aam
push
xchg
repz
out
sbb
pop
add
or
xchg
add
pop
outs
mov
pop
sub
loope
faddp
mov
leave
inc
dec
jmp
mov
aaa
scas
or
shr
int3
jge
push
cli
and
cmp
jmp
out
xor
retf
xchg
ja
jp
int3
fbld
movs
cmp
sbb
xchg
mov
popa
aaa
ins
jns
pop
mov
(bad)
jle
ins
inc
add
push
sahf
fistp
popa
out
mov
jne
push
sub
xchg
rcr
cld
or
out
arpl
cld
je
or
inc
sub
mov
mov
sbb
loopne
or
cmps
cwde
iret
push
in
ret
inc
push
cmp
xchg
sub
or
sbb
push
(bad)
retf
mov
outs
mov
fld
les
xchg
fwait
jp
dec
cdq
mov
mov
cmp
lahf
test
mov
pusha
sub
sub
cmp
push
push
sti
mov
movs
dec
call
shr
movs
stos
sub
mov
(bad)
cmp
out
test
sti
lods
das
pop
mov
adc
popf
out
pop
inc
fwait
scas
js
or
shr
mov
lods
sar
mov
mov
imul
stos
packssdw
mov
inc
fidivr
cmps
stc
sti
fist
jb
jmp
sub
cmp
data16
dec
sbb
call
and
mov
mov
retf
mov
movs
dec
ret
repz
aam
clc
add
pop
neg
dec
inc
je
push
sti
xchg
ret
jl
push
xchg
sbb
jo
bound
adc
xchg
mov
ret
daa
and
sbb
adc
stos
push
cmp
call
adc
sbb
xchg
retf
pop
xchg
shl
cmp
(bad)
mov
xchg
mov
xchg
(bad)
loope
mov
mov
movs
popa
pop
movs
and
cld
push
pop
jns
dec
push
sbb
or
adc
sbb
push
mov
arpl
ins
cmp
sbb
xchg
mov
and
imul
sub
add
sbb
push
pop
and
call
popa
lods
pop
shl
(bad)
mov
add
repz
pusha
(bad)
fst
and
lahf
shl
jo
or
aas
scas
adc
adc
xchg
jl
sbb
mov
xchg
rcr
xchg
shr
and
xor
mov
cmp
call
pop
(bad)
pop
xor
int
add
add
pusha
mov
mov
or
imul
fmulp
stos
dec
and
fwait
sub
lock
jmp
mov
lahf
sub
cld
mov
aad
arpl
add
pushf
add
xchg
out
push
push
sti
aam
sub
mov
fstp
pop
repnz
push
dec
ror
not
xchg
xor
xchg
adc
dec
ficom
pop
xchg
scas
dec
arpl
jmp
fwait
pop
loop
xchg
mov
mov
pop
lahf
xlat
xor
dec
cmp
jg
or
out
cmp
fcmovnb
into
lahf
loopne
lods
sub
push
bound
cdq
mov
aas
jmp
xlat
mov
std
xchg
fwait
movs
push
imul
pop
dec
(bad)
repz
sbb
mov
sbb
dec
(bad)
jb
adc
fbstp
pop
(bad)
icebp
ins
sub
or
push
test
jmp
or
fdivr
hlt
int3
pop
fcmovnu
(bad)
add
sub
retf
jl
ja
neg
cmp
mov
shr
cs
fisub
sub
addr16
fimul
push
mov
and
fidivr
in
jnp
and
lea
rol
dec
in
pop
sbb
sub
lods
add
loop
mov
gs
shl
add
loopne
fninit
or
mov
stos
xchg
sbb
lea
jbe
add
pop
mov
out
push
out
cmp
clc
or
lahf
pop
and
js
mov
sub
jns
shl
fild
nop
or
pop
xlat
iret
fstp
jg
mov
lock
movs
popa
repz
addr16
xchg
jp
jmpw
sbb
mov
xchg
sbb
outs
mov
stos
inc
setno
mov
retf
lahf
jle
mov
inc
jecxz
fwait
call
dec
push
xlat
shl
cli
movs
pop
sbb
movs
sbb
sbb
call
jmp
or
data16
cmp
sub
in
mov
push
loop
jl
mov
ret
arpl
dec
xchg
data16
out
inc
dec
fwait
mov
out
cmc
mov
cld
call
inc
inc
test
mov
mov
mov
mov
ret
dec
fdiv
in
popf
add
pop
rol
das
pop
lahf
or
adc
push
movs
inc
and
fbld
xchg
fs
push
xor
outs
mov
jle
adc
and
enter
cmp
aad
xor
mov
xchg
lods
adc
xor
fidivr
sti
jl
or
xchg
jbe
and
das
out
ficomp
fs
lds
mov
aas
cmp
clc
jle
adc
sbb
mov
pop
sub
clc
scas
jnp
pop
push
pop
dec
mov
add
xchg
scas
and
stos
repnz
add
pop
pop
or
adc
xchg
ja
sbb
sbb
pop
dec
stc
out
gs
rcr
adc
movs
sbb
out
push
and
stos
(bad)
sub
add
aas
adc
mov
and
mov
stos
out
inc
out
push
into
call
ss
jmp
xor
and
inc
stc
xor
jae
pop
push
ret
pop
pop
xchg
cdq
add
push
cs
dec
(bad)
xchg
sahf
mov
adc
or
imul
sbb
ret
and
fs
dec
retf
bound
add
xor
adc
jne
pop
not
mov
mov
cmc
call
cld
outs
hlt
outs
idiv
movs
jecxz
sub
(bad)
xchg
jmp
push
push
out
cmc
inc
xchg
jge
and
pop
pop
mov
sbb
(bad)
repnz
mov
add
xor
enter
arpl
xor
mov
jmp
into
rcl
call
xchg
les
aam
add
(bad)
pushf
pushf
xchg
sub
ret
mov
jne
ds
ins
test
imul
test
add
fistp
add
cmps
(bad)
adc
jle
test
mov
dec
sub
js
call
ret
or
mov
dec
xor
nop
shl
retf
popa
int3
(bad)
outs
sub
sti
(bad)
jb
call
dec
test
repz
clc
cwde
sub
mov
add
(bad)
adc
das
and
imul
jmp
xor
pusha
iret
xchg
ret
adc
das
inc
xchg
imul
push
test
aas
das
jmp
jg
ss
movs
sbb
sub
xchg
stos
daa
and
shr
sbb
arpl
test
fstp
jnp
push
cmp
add
les
adc
shl
mov
test
mov
xchg
and
mov
into
xor
xchg
shr
pushf
mov
in
mov
lods
xor
les
adc
int3
(bad)
gs
(bad)
add
mov
test
sar
xchg
(bad)
mov
test
mov
iret
addr16
add
(bad)
int3
pop
dec
push
jmp
jnp
hlt
add
xor
test
lods
jge
outs
lods
mov
repz
arpl
fsub
test
sbb
mov
lods
popf
in
scas
push
not
fistp
mov
and
and
mov
jl
mov
jo
and
and
jmp
fucomip
xchg
retf
lds
std
push
mov
repz
cli
out
cmp
jecxz
(bad)
cld
shl
cdq
cmp
mov
add
and
jb
test
aam
cmp
mov
mov
mov
add
retf
fdivr
xchg
aad
xchg
shl
pop
push
dec
xchg
jnp
sub
fwait
cmp
pushf
dec
pop
dec
outs
sti
adc
jp
jl
mov
mov
pop
ss
sub
cli
mov
bound
jae
pop
mov
lahf
jmp
push
dec
xchg
pushf
sub
int3
sub
ja
xchg
push
lock
jno
dec
sub
xor
mov
inc
and
fbld
jbe
dec
cmp
mov
adc
jp
sbb
jne
and
loop
call
dec
sub
cs
repz
jbe
sub
xchg
push
pop
stos
push
jmp
and
stos
inc
fist
test
inc
jge
dec
and
push
aad
retf
retf
in
aaa
xor
iret
dec
outs
gs
lea
stos
es
inc
adc
outs
loopne
and
mov
mov
inc
lods
popf
rol
pop
aad
sbb
jg
jecxz
lods
loope
(bad)
mov
pop
js
je
rol
adc
pop
inc
ss
call
rcl
mov
pavgb
rcl
cmps
imul
adc
mov
xchg
mov
inc
xchg
jne
inc
inc
mov
xchg
scas
outs
mov
imul
mov
push
enter
inc
dec
out
hlt
out
fistp
and
dec
mov
adc
out
fcomip
pop
xchg
mov
push
mov
aad
sti
mov
call
(bad)
xchg
out
fld
sbb
push
rcl
mov
xor
and
fcomp
mov
add
in
es
daa
in
xchg
(bad)
out
adc
sar
pusha
shl
mov
stc
push
mov
xor
pop
add
aam
sub
pop
push
cli
jl
and
add
mov
mov
das
or
inc
sbb
jb
cmp
mov
xchg
dec
leave
repnz
not
call
sbb
icebp
jmp
pop
ficom
aad
out
pop
shl
movs
test
inc
jge
inc
xchg
xchg
test
or
jl
jmp
xchg
sbb
inc
iret
and
add
adc
xchg
mov
stos
popa
sbb
hlt
int3
mov
xchg
adc
lahf
movs
test
test
(bad)
out
(bad)
mov
inc
xor
leave
fidiv
loopne
xor
fcmovbe
mov
test
push
add
out
push
test
mov
lea
xor
stos
fs
shl
xchg
test
cs
cmps
mov
pop
jmp
int
xchg
adc
les
mov
call
push
xor
cmp
add
pop
push
jmp
or
in
arpl
xchg
ss
es
add
push
scas
aam
sbb
sub
js
xor
cli
in
fwait
shr
bound
test
inc
popf
call
xchg
inc
pusha
cmp
xor
call
test
add
test
ficomp
add
pusha
jnp
push
adc
pop
cmp
pop
jns
call
cmp
jge
pop
dec
loope
mov
outs
(bad)
sbb
(bad)
test
in
imul
mov
std
retf
jge
test
pop
loopne
push
pop
clc
pop
sub
inc
ret
popf
cmp
sahf
cld
inc
in
pop
or
inc
fucom
(bad)
adc
int3
cmps
jg
dec
and
jge
dec
xor
(bad)
xlat
cmps
jg
dec
add
pop
call
xor
iret
(bad)
push
adc
adc
pushf
retf
xchg
pop
dec
call
mov
cmp
jl
mov
jl
sti
push
dec
mov
jmp
bound
inc
xor
xchg
pop
jecxz
hlt
mov
inc
cwde
daa
lods
mov
fnstenv
aad
add
sahf
scas
outs
sbb
xchg
push
pop
dec
and
test
sub
sbb
dec
xchg
lock
icebp
jle
ins
sbb
pop
mov
xchg
xor
rcr
pop
outs
inc
pop
jnp
ins
adc
xlat
sbb
cs
pop
arpl
rol
dec
out
ins
sbb
sbb
and
add
das
cli
sbb
mov
out
mov
xor
or
cld
sar
fst
test
stos
shr
or
in
cwde
aam
pushf
outs
mov
sub
jns
lock
imul
cmp
or
add
adc
arpl
xor
test
add
mov
mov
clc
test
jle
das
into
ficom
xor
bound
sahf
iret
mov
add
rcr
pop
dec
(bad)
xchg
retf
std
pushf
loope
sub
dec
mov
adc
xor
add
xchg
fld
retf
inc
jmp
mov
daa
push
xchg
outs
aad
adc
mov
pushf
mov
movs
sub
aad
bound
(bad)
adc
fisub
outs
jae
mov
out
rcr
sub
arpl
pop
xor
mul
mov
fxch
cdq
xlat
movs
imul
mov
dec
inc
icebp
popa
js
frstor
xchg
mov
sbb
into
outs
or
pop
in
xchg
pusha
pop
in
jne
sahf
fs
sbb
enter
push
sbb
push
xchg
bound
inc
sub
sbb
sbb
mov
movs
xchg
fdivr
mov
adc
cld
push
sub
iret
ds
outs
push
or
cli
adc
loope
adc
nop
push
int3
dec
int
sbb
pushf
push
test
dec
in
test
mov
xor
retf
dec
ja
add
push
aad
jecxz
adc
pop
or
(bad)
sub
sbb
inc
adc
jo
into
repz
cld
(bad)
ret
ror
sub
push
nop
and
inc
in
ins
and
pushf
neg
mov
arpl
arpl
pop
call
push
sbb
pusha
sbb
xor
mov
push
mov
sbb
adc
sahf
pop
and
call
add
mov
out
cli
ret
sub
pop
mov
sub
fild
stos
pop
ins
sar
mov
ss
xchg
jl
xchg
add
inc
and
fmul
mov
aad
int3
into
aas
adc
dec
mov
aaa
(bad)
mov
call
jmp
pop
stos
sti
sahf
ret
cli
sub
add
push
dec
mov
cmp
sbb
mov
pop
jbe
sbb
loopne
mov
push
outs
xchg
inc
pop
int3
xor
call
push
xor
call
xor
mov
push
imul
(bad)
imul
push
jp
fist
pop
mov
push
adc
sbb
fs
adc
push
push
out
and
retf
mov
adc
pop
push
inc
test
sbb
(bad)
lea
and
retf
mov
retf
fcom
into
int
les
xor
mov
fadd
pop
cmp
xchg
test
mov
sub
and
add
imul
mov
pop
jmp
call
xchg
je
and
popf
dec
mov
repnz
out
nop
adc
mov
add
mov
add
or
adc
pop
sub
rcl
push
loop
mov
dec
sbb
outs
push
mov
and
sbb
or
popa
cmp
sub
lods
pop
jmp
xchg
ins
or
mov
test
dec
fnstcw
test
sbb
xor
retf
xlat
sbb
mov
cmp
rol
lods
popa
jae
std
sbb
sbb
cmps
fist
push
mov
xchg
add
ins
retf
mov
inc
sub
not
std
push
jecxz
mov
push
xchg
jbe
jg
fbld
popa
and
xchg
ins
jg
test
jns
(bad)
leave
mov
adc
(bad)
xor
mov
xchg
lahf
out
js
mov
sub
adc
fcom
aas
retf
or
push
clc
fadd
loopne
add
inc
adc
pushf
jmp
ret
dec
mov
or
adc
fsub
sub
adc
cli
fild
lahf
xor
jg
movs
cmps
push
cmp
test
aas
and
aam
push
push
and
test
or
sti
cmps
scas
nop
int3
lods
aam
xor
cmps
mov
push
add
aaa
fistp
mov
adc
sti
inc
push
sub
jmp
setl
inc
arpl
popf
ret
xor
sbb
and
push
sbb
pop
fistp
add
test
scas
push
add
xor
fisttp
js
jns
push
div
mov
cmp
push
mov
and
mov
xchg
rol
cmp
mov
arpl
aam
sahf
loopne
data16
mov
sbb
fist
lds
popf
xchg
fstp
(bad)
jnp
push
hlt
test
into
xor
in
push
inc
test
inc
inc
in
sbb
into
cmc
retf
jmp
and
inc
(bad)
jle
fimul
fistp
sti
loope
es
loopne
or
xchg
mov
and
pushf
mov
cmc
mov
cmps
sub
jecxz
not
test
out
sbb
pop
lea
xchg
stos
sbb
add
or
(bad)
mov
jg
bnd
cs
xor
fs
ror
sub
popf
fcomp
les
retf
push
xor
stc
sbb
cli
mov
jae
out
xor
jae
js
int
mov
push
mov
xchg
xchg
sub
jmp
xchg
cwde
push
mov
aad
fisub
fsubr
das
xchg
mov
xchg
fcomip
xor
inc
(bad)
pop
mov
cmp
popf
aaa
push
imul
or
not
retf
retf
dec
clc
gs
mov
xor
mul
test
div
idiv
movs
pop
pop
(bad)
(bad)
out
push
cwde
frstpm(287
(bad)
mov
stos
adc
sbb
mov
dec
ja
fwait
push
pop
test
push
lods
js
int
movs
scas
add
clc
jns
(bad)
stos
fucomip
cmp
adc
mov
sub
cmps
jae
(bad)
dec
fsubr
(bad)
mov
in
sbb
add
and
sbb
pop
ret
xchg
sbb
adc
adc
sub
dec
and
ficom
cmp
cmp
(bad)
mul
sbb
xchg
add
in
mov
push
shr
aam
jno
cmps
mov
cmp
sub
addr16
std
pusha
sbb
pop
cmp
push
inc
sub
xor
sbb
mov
sbb
pop
jno
stc
mov
pop
(bad)
orps
and
sbb
jge
sbb
fiadd
ss
inc
mov
ret
je
ja
shl
mov
test
pop
pop
lea
pop
movs
pop
lock
fmul
sub
xchg
mov
mov
scas
push
mov
jecxz
shr
jl
pop
lahf
mov
out
pop
das
out
push
add
(bad)
xchg
icebp
jge
cmp
mov
mov
pop
popf
xor
mov
sbb
addr16
mov
hlt
mov
cmp
jmp
sar
fimul
pcmpeqb
or
push
push
cmp
dec
or
inc
mov
cmps
dec
sub
lock
push
add
jb
rcl
jmp
xchg
add
add
jmp
push
mov
mov
sub
mov
repz
(bad)
in
cld
jno
mov
iret
mov
dec
cdq
push
mov
mov
or
push
daa
sahf
inc
imul
sub
adc
mov
inc
xor
and
lds
adc
cwde
ror
xchg
mov
sub
cs
mov
pop
cwde
(bad)
test
push
sbb
jge
(bad)
in
aaa
pop
pop
cmp
aaa
in
pusha
adc
inc
or
fisttp
and
xlat
sbb
into
or
cdq
aam
cmps
div
lods
push
push
cmc
xchg
dec
jno
dec
je
stos
scas
inc
sbb
sbb
aam
dec
test
inc
popf
leave
sbb
test
pop
call
jbe
(bad)
mov
xlat
vpsrld
imul
and
dec
lods
les
pop
repz
pusha
sahf
push
mov
in
sar
xchg
sub
jmp
pop
(bad)
ja
sahf
pop
std
lahf
cwde
sahf
cwde
cmp
into
xchg
jl
push
lahf
daa
adc
xor
inc
mov
and
dec
mov
adc
into
fild
jmp
xchg
inc
sahf
push
in
pop
fs
push
rcl
push
iret
(bad)
cs
ins
lock
in
cld
mov
enter
jo
adc
ins
sbb
inc
into
hlt
jmp
ds
mov
add
imul
mov
ins
(bad)
and
fild
push
mov
ds
lods
stos
pop
jl
ins
xor
xchg
xor
loope
repnz
in
pop
jg
xor
movs
sub
bound
in
test
and
rcr
ret
or
xlat
hlt
xor
or
stos
test
in
jo
adc
xor
data16
mov
fmul
mov
repnz
lock
jecxz
repnz
fcmovnu
movs
faddp
pop
movs
imul
das
test
add
mov
dec
mov
out
dec
(bad)
rcr
test
inc
sti
sub
setl
adc
pop
fistp
cwde
in
aam
xchg
push
in
xchg
jno
mov
cwde
mov
(bad)
fdivr
and
jbe
push
jmp
inc
addr16
call
or
arpl
and
xor
pop
popf
pop
xchg
sti
jnp
lahf
pop
addr16
adc
lahf
pop
inc
jbe
out
jbe
repz
ficomp
(bad)
add
(bad)
cmp
pop
dec
outs
mov
xor
mov
adc
(bad)
repz
adc
cmp
push
mov
arpl
xor
(bad)
arpl
mov
stos
and
setle
mov
and
inc
arpl
cmp
fbld
dec
fwait
loop
push
mov
daa
leave
fldcw
sahf
in
xchg
enter
add
aas
add
test
aas
sub
jo
sbb
movs
stc
fisttp
mov
push
ins
mov
push
pop
xchg
and
or
inc
push
ror
pop
loop
or
(bad)
in
pop
mov
xchg
adc
mov
or
dec
cmc
pop
(bad)
cmp
sub
cmc
lods
sbb
outs
jb
rcl
(bad)
call
mov
push
adc
adc
outs
pop
or
cmp
pop
ins
pop
adc
sbb
pop
push
add
sbb
push
mov
adc
ss
cmps
xlat
jecxz
lods
cmc
std
cmps
arpl
mov
mov
sbb
push
outs
ins
jmp
mov
adc
pop
out
repz
cmp
and
cmp
push
adc
daa
mov
cmp
adc
int
cmp
push
pop
push
stc
aas
xlat
addr16
sbb
xor
or
popa
add
xor
xchg
inc
out
or
outs
(bad)
push
out
rol
scas
cmp
aas
jle
xchg
pusha
movs
int
xchg
scas
push
test
push
xor
cld
dec
mov
adc
pop
test
pop
inc
(bad)
fcomp
sar
in
xchg
cmp
cmp
adc
movs
jo
dec
mov
sub
jecxz
xchg
cmp
shr
mov
sbb
cmp
push
jp
cmovg
and
dec
das
xor
pop
in
iret
std
push
or
ss
lock
sub
mov
ins
stc
adc
in
jb
dec
imul
fmul
ins
sub
pop
ins
in
cmp
xor
push
lods
inc
xchg
aam
sub
push
rcr
cmp
dec
jnp
cdq
push
add
xor
push
je
push
sbb
and
jmp
out
sti
fs
mov
dec
mov
fstp
push
retf
arpl
call
adc
xor
or
push
aad
arpl
cld
dec
(bad)
xchg
xchg
(bad)
fs
(bad)
pusha
mov
ret
sti
inc
in
dec
dec
pop
mov
js
cwde
das
cmp
aam
cs
pop
pop
xchg
mov
neg
push
push
btc
outs
mov
mov
call
in
push
int
ret
pop
sub
sti
and
push
mov
pop
fs
pop
in
lods
dec
fstp
pushf
push
jecxz
stos
pop
loopne
rcl
xchg
dec
dec
cmp
mov
enter
jo
scas
and
shl
mov
cmps
ins
mov
cmp
push
popa
cmp
jp
inc
inc
popa
push
xor
push
cmc
dec
div
nop
xchg
inc
inc
and
add
pop
shr
in
adc
adc
or
fcmovnbe
and
sbb
pop
lods
mov
pop
push
sar
pop
sub
cli
dec
mov
mov
call
(bad)
ins
loopne
enter
mov
icebp
sub
test
push
pop
cmp
aam
and
in
(bad)
pop
or
mov
or
xchg
fcomp
pop
pop
les
mov
push
sahf
aaa
arpl
leave
sub
push
mov
inc
mov
dec
stc
and
in
cdq
(bad)
fdivr
sub
imul
das
xchg
cmp
or
stos
or
jl
fwait
sbb
mov
dec
jle
out
or
add
out
fs
mov
mov
dec
into
pop
mov
dec
add
sbb
nop
jp
das
mov
pushf
pushf
xchg
into
pop
cmp
mov
sbb
sub
aam
mov
push
xor
lods
adc
repnz
add
in
xchg
push
and
and
dec
repnz
mov
ror
enter
pop
push
push
in
int3
sub
stos
cmp
jbe
das
push
stc
pop
fiadd
sbb
adc
test
add
out
sub
jg
jle
sub
call
fidivr
add
in
cmp
pop
push
adc
mov
sbb
push
and
dec
adc
adc
sbb
mov
pop
jmp
enter
sub
(bad)
sub
rcl
pop
jne
jl
jge
xor
repz
test
out
mov
xchg
cmc
jecxz
inc
hlt
xor
mov
sub
add
or
cmps
and
sbb
sbb
add
out
in
loope
dec
dec
add
mov
test
shl
sbb
aaa
xor
dec
outs
add
(bad)
mov
enter
movs
fild
lods
icebp
pop
jbe
fwait
push
pop
lds
pop
mov
(bad)
mov
cs
(bad)
pop
out
pop
dec
push
shl
mov
mov
repnz
ds
cmp
shl
(bad)
xlat
stos
sub
mov
pusha
pushf
jle
les
jns
js
xor
(bad)
fcomp
sub
add
cld
xor
jbe
jno
xchg
loopne
je
enter
pop
xchg
ret
(bad)
push
pop
or
dec
pop
rcr
ins
imul
stos
or
sbb
mov
xchg
jo
jg
cmc
nop
cmp
or
lea
call
es
push
push
les
xchg
rol
vpcomd
sar
mov
cmp
popa
mov
rol
int3
sub
jmp
outs
loope
push
rol
and
push
push
aad
sub
sbb
pop
repnz
sbb
adc
movs
pop
ss
dec
std
mov
in
inc
adc
pop
ja
and
fild
ret
clc
fwait
retf
sub
add
(bad)
mov
outs
std
cmc
rcl
jmp
mov
and
adc
mov
adc
and
je
mov
(bad)
nop
aad
movs
push
sbb
fwait
inc
sub
popa
dec
stc
idiv
pop
sub
xchg
mov
ja
int
lea
dec
xor
cld
es
xchg
shl
shl
cli
dec
xor
sbb
xchg
int
jmp
jle
and
sub
add
xchg
xchg
les
ins
sbb
jne
cs
cwde
inc
stos
sbb
adc
xor
call
jno
push
dec
fs
sar
shl
xor
fwait
and
cmps
pop
fsub
adc
aas
add
add
ins
push
loop
ds
outs
adc
push
mov
(bad)
enter
idiv
inc
xchg
div
dec
lods
mov
in
or
and
mov
neg
retf
mov
stos
adc
adc
mov
add
sub
push
xchg
popf
and
(bad)
addr16
sbb
test
and
xchg
sar
inc
sbb
call
ret
sbb
adc
mov
sub
or
pop
cmps
jp
addr16
fisttp
pop
mov
cmc
xchg
inc
les
retf
push
hlt
iret
aam
enter
mov
cmp
xlat
adc
xchg
jg
fs
je
or
dec
mov
das
and
cs
pop
outs
mov
or
cmp
clc
dec
push
das
mov
lods
outs
xchg
clc
and
jae
into
pop
cdq
pusha
push
enter
cli
mov
cvtps2pd
xchg
(bad)
inc
xchg
sbb
pop
repz
xchg
or
aaa
test
nop
idiv
fsub
push
mov
jb
mov
add
xor
push
das
nop
mov
mov
rsqrtps
addr16
repz
retf
ins
sub
inc
(bad)
out
mov
adc
and
push
mov
scas
cmp
in
call
push
imul
stc
lds
(bad)
enter
push
or
push
mov
mov
mov
ss
fs
sub
retf
xchg
scas
repz
jns
pop
xchg
or
pusha
xlat
inc
cmp
lods
and
xchg
jp
fisttp
sbb
mov
gs
xchg
aam
mov
and
jge
mov
ins
lock
dec
xor
pop
xchg
push
push
fcom
pop
or
or
fdiv
or
pop
mov
mov
loop
sub
lahf
fdivrp
xor
push
dec
ins
mov
daa
push
jns
ins
cmp
mov
cmp
cmc
nop
xchg
jg
jp
call
retf
xchg
cmp
int3
in
dec
sbb
mov
sbb
fdiv
es
sub
popf
ins
push
or
inc
xchg
outs
out
or
xchg
xlat
enter
cdq
sub
aad
addr16
mov
jae
adc
push
loop
fs
push
sbb
hlt
xor
cmc
add
dec
jge
lods
and
arpl
jmp
outs
bound
das
mov
adc
jmp
ret
xchg
push
adc
inc
fdiv
fdiv
movs
sbb
sahf
jnp
inc
out
test
mov
mov
xchg
mov
sbb
es
cmp
xchg
mov
or
icebp
dec
sbb
sbb
push
(bad)
mov
push
shr
mov
out
add
rcr
dec
sar
out
push
(bad)
cmp
dec
pop
mov
test
inc
cld
inc
pushf
outs
div
jg
out
cld
sub
sbb
scas
jns
sbb
jbe
or
pop
mov
fdiv
push
xchg
and
jno
jmp
arpl
mov
mov
repz
movs
test
popf
adc
or
adc
lods
mov
aam
or
xchg
int3
jbe
call
add
jbe
xor
bound
mov
test
(bad)
fwait
enter
xlat
and
fadd
adc
mov
sub
stc
imul
inc
neg
xor
xchg
xchg
sbb
cmps
cmp
jge
(bad)
shr
or
inc
xchg
cmp
rol
cld
hlt
sbb
jmp
push
add
repz
leave
xchg
sbb
mov
mov
sbb
fdivr
or
imul
adc
fwait
push
pop
xlat
jle
int
retf
add
sbb
inc
bnd
dec
lahf
lea
pop
in
push
out
pusha
mov
call
push
repnz
cwde
xchg
imul
mov
adc
or
je
mov
pop
inc
das
mov
imul
jo
daa
cmp
fxch
adc
adc
aas
movs
aam
mov
dec
jne
pop
inc
cmp
pop
and
loop
dec
ins
mov
cli
xor
sub
inc
je
jge
int3
sbb
daa
arpl
std
syscall
push
adc
iret
arpl
push
adc
dec
mov
jecxz
dec
in
cmps
sbb
dec
pusha
add
shl
jns
out
xor
push
cwde
cmp
pushw
jns
pop
inc
stc
and
xchg
popf
sbb
jle
and
ret
push
leave
jle
sub
sbb
cli
ds
js
adc
pop
jge
adc
mov
jmp
scas
or
inc
push
jg
and
and
mov
push
jp
fwait
mov
push
mov
fs
cmp
ror
pop
int
stc
and
push
mov
pop
mov
mov
and
cmps
je
pop
or
test
and
fst
nop
sub
dec
pop
adc
mov
ror
sub
cli
sbb
sub
lock
push
pop
mov
lock
mov
add
fwait
(bad)
in
enter
jae
test
or
fwait
addr16
lds
sti
sbb
cmp
call
add
mov
adc
cmps
add
in
(bad)
das
cmc
mov
iret
mov
(bad)
repnz
xchg
pop
sub
mov
das
out
jmp
cmp
test
jmp
(bad)
repz
iret
pop
addr16
cld
sbb
popf
xchg
jae
inc
aam
addr16
sahf
popa
cld
adc
add
or
outs
inc
pop
cmp
in
rcr
gs
inc
shl
das
repnz
pop
std
inc
mov
fdiv
mov
pop
icebp
dec
cmc
icebp
in
ins
jae
fimul
jge
mov
aam
mov
enter
(bad)
outs
pop
add
xor
xor
adc
mov
outs
fnclex
sub
jl
out
ror
pop
xchg
add
shr
push
arpl
jbe
push
loopne
das
(bad)
shl
(bad)
fist
arpl
mov
push
xchg
sub
pop
xor
outs
mov
add
push
in
mov
xor
xor
daa
jge
imul
sbb
loope
fbstp
pop
dec
sbb
fistp
rep
mov
enter
movs
pop
cmps
fidiv
mov
cdq
sbb
(bad)
loopne
jmp
add
mov
dec
rol
pop
sub
movs
sti
cmc
lahf
dec
test
gs
mov
bswap
enter
sbb
sti
retf
mov
mov
inc
sti
popf
repz
lods
pop
int3
cmp
mov
not
dec
repz
push
adc
sbb
call
cmp
xchg
pop
mov
cmp
xchg
mov
xchg
sbb
mov
sbb
sbb
in
fistp
lods
sahf
clc
xchg
fsqrt
adc
sub
arpl
adc
cmp
dec
sar
jg
pop
sub
bound
jecxz
mov
shl
repz
ret
sbb
mov
sbb
aas
xchg
lock
out
out
pop
lds
xchg
dec
push
inc
inc
xlat
add
outs
out
cdq
cmp
push
in
aam
movs
mov
mov
jle
retf
stos
jae
sbb
pusha
cmp
daa
ss
sbb
or
mov
sbb
mov
mov
ret
repnz
(bad)
loop
mov
enter
mov
xchg
imul
dec
push
scas
sbb
push
jl
or
gs
out
pop
cmps
retf
push
scas
popa
enter
inc
aaa
aam
mov
sbb
sub
or
mov
adc
sbb
fstp
js
adc
lea
sbb
in
cmp
inc
pop
xchg
jmp
push
int3
and
cmp
push
xchg
xlat
fs
mov
or
inc
(bad)
scas
push
mov
add
fisttp
mov
push
or
pop
inc
jbe
and
lods
in
xchg
xor
cmp
mov
sub
rcr
fisttp
call
rol
sahf
push
jg
pop
iret
adc
xchg
in
xor
add
cmp
cmps
sbb
not
aas
pusha
add
dec
ret
sub
outs
xlat
or
rep
adc
mov
and
mov
mov
mov
or
adc
in
and
ins
je
lock
pop
mul
pushf
and
stos
pop
pop
clc
mov
aad
lods
dec
sar
xchg
mov
mov
cmc
fimul
mov
mov
aad
inc
cld
imul
pop
ret
pop
call
clc
cdq
lods
sbb
shr
xchg
mov
sti
rcl
fsub
sub
dec
pop
imul
push
push
or
(bad)
pop
sbb
jp
js
jo
mov
pop
loop
mov
cmp
push
test
pop
mov
cld
push
stos
cmp
mov
cmp
xor
stos
cmps
xor
jbe
aad
push
sti
sbb
xchg
out
push
gs
fnstenv
ins
xor
loop
push
popf
lahf
xchg
jns
cmps
pop
(bad)
nop
aad
add
popa
popf
into
push
and
leave
mov
xor
mov
dec
xchg
test
std
mov
rcr
add
std
(bad)
xlat
cmp
cld
sti
push
lods
add
out
lods
mov
xchg
fnsave
xor
jmp
sbb
not
jno
inc
push
cmc
imul
sub
pop
(bad)
fadd
std
add
mov
sbb
push
fsub
adc
mov
(bad)
out
cmp
sub
add
push
jle
sbb
retf
cdq
jbe
cmp
jmp
push
int
inc
cli
dec
jge
aas
scas
add
cmp
mov
mov
push
hlt
outs
rcr
cld
cdq
ins
leave
leave
in
adc
inc
in
adc
ins
add
js
je
movs
mov
neg
cmp
xor
xlat
ret
mov
mov
fwait
pushf
and
fild
pop
push
dec
fadd
aad
out
inc
xor
mov
push
pop
jno
pop
xchg
xchg
mov
mov
or
js
dec
(bad)
mov
xchg
mov
pop
push
xlat
ins
mov
stos
mov
xchg
mov
lods
add
aam
std
inc
jmp
int3
fcomp
pop
fidiv
sbb
and
cld
adc
popf
in
adc
js
shl
xchg
pusha
iret
push
xlat
or
fild
aas
xchg
int3
add
into
js
jle
imul
xor
out
shl
mov
rcr
rcr
(bad)
mov
shr
(bad)
mov
mov
inc
mov
iret
inc
xchg
adc
aaa
cld
xor
jb
je
out
test
push
pop
clc
lahf
xchg
sbb
pop
inc
xor
adc
fs
mov
mov
scas
pop
sbb
outs
in
xchg
pop
scas
ins
mov
mov
and
(bad)
sub
adc
adc
push
xchg
lods
inc
mov
fucomp
pop
inc
stc
sub
pop
(bad)
and
xor
xor
ficom
adc
mov
retf
pop
jp
into
adc
pop
xchg
inc
adc
aaa
cmp
inc
mov
fldenv
push
sub
xchg
imul
push
arpl
int
jae
or
in
add
mov
dec
lds
adc
aam
add
sbb
jb
in
mov
sti
dec
sbb
sbb
push
add
adc
das
popf
cld
jle
bnd
les
mov
test
cmp
sbb
sub
jmp
mul
ret
dec
mov
stc
mov
outs
cmps
ins
pop
push
retf
push
adc
xchg
loope
jb
fldcw
dec
icebp
adc
retf
fidivr
dec
out
and
adc
push
mov
jno
pop
add
mov
outs
pop
xchg
mov
cmp
lahf
add
push
inc
jae
cld
push
(bad)
fld
xchg
jo
adc
out
dec
mov
mov
or
inc
rcr
xchg
movs
lds
dec
mov
sbb
daa
pop
aad
movs
push
fld
jb
(bad)
sbb
fild
add
lahf
lods
neg
jbe
and
pop
(bad)
cmp
loop
adc
mov
mov
gs
sahf
bound
push
add
bound
push
ins
jl
inc
jmp
in
sub
push
jmp
outs
(bad)
jo
xchg
sub
out
and
iret
fbstp
jl
push
xchg
jge
cmp
not
and
pop
das
js
mov
jo
sub
xor
sub
sbb
push
pop
mov
aas
neg
cwde
cld
mov
push
pop
aad
js
cmps
xor
push
es
cmp
mov
and
mov
and
setge
push
outs
inc
shr
pusha
inc
int
inc
jp
jnp
pushf
cli
mov
add
popf
nop
add
adc
push
cdq
fdivr
xchg
jne
ins
cwde
xchg
push
sbb
out
das
push
push
cdq
out
icebp
in
push
(bad)
js
imul
jne
ret
xor
(bad)
imul
in
jb
pop
cmp
jno
mov
arpl
add
rol
pop
mov
aas
addr16
imul
add
or
std
outs
lds
popa
fadd
bound
pop
movs
pop
push
aam
adc
out
lds
push
lea
cdq
xchg
mov
jmp
push
cmp
mov
cmp
ror
(bad)
or
mov
ds
fld
ret
xor
iret
ror
xor
inc
daa
aaa
push
in
push
mov
cwde
lahf
sbb
sub
pop
retf
mov
jp
push
int
add
cmp
sub
xlat
mov
test
in
cli
jmp
das
pusha
mov
mov
ror
fs
add
xor
dec
mov
das
rol
ss
adc
jge
dec
call
sub
xchg
adc
loop
out
push
dec
jge
rcl
sbb
pop
outs
inc
push
ins
mov
jp
cld
pop
cld
sub
mov
jmp
or
jmp
sbb
or
jmp
fldenv
repz
in
mov
ins
jmp
push
imul
movs
sti
xchg
shl
ficomp
mov
inc
popa
dec
cdq
stc
push
fadd
ss
xlat
jb
and
pop
(bad)
or
test
pop
out
mov
outs
in
shl
adc
f2xm1
into
(bad)
out
pop
mov
(bad)
and
xor
xor
pop
inc
ror
adc
popa
rol
arpl
push
sbb
adc
cmp
xchg
retf
inc
and
xor
imul
mov
adc
cmc
loop
ss
bound
jg
jg
in
not
adc
push
(bad)
nop
daa
adc
fwait
sbb
sbb
(bad)
in
dec
scas
xchg
loop
and
pop
pushf
adc
std
in
aam
cld
adc
nop
add
(bad)
add
xor
xlat
and
ins
sbb
mov
aaa
fs
pop
dec
ret
adc
xchg
or
call
and
push
rcr
(bad)
call
pop
and
loope
pop
ret
cli
cmp
retf
psubsb
or
sahf
mov
xchg
loope
xor
fwait
fwait
clc
jno
popf
out
imul
sbb
dec
inc
fcmovbe
gs
out
(bad)
sub
leave
mov
and
in
sub
and
cs
xor
in
sub
stos
pushf
outs
ud0
scas
push
(bad)
mov
xchg
jne
sbb
pop
out
fadd
sbb
pop
pop
and
xor
(bad)
stos
ror
js
pop
fisttp
mov
mov
pop
pushf
jo
fld
mov
dec
inc
adc
adc
cmp
xlat
cmp
or
jmp
and
ins
jnp
mov
repz
xchg
jb
(bad)
push
mov
dec
jge
jp
xchg
pop
pop
or
test
mov
push
push
jbe
push
pusha
lahf
fistp
imul
scas
push
out
xor
lods
jmp
js
sbb
sbb
call
les
mov
cmp
mov
out
imul
pop
mov
in
stos
mov
in
ret
push
repz
inc
ror
jb
push
call
xor
ds
sbb
xchg
test
pop
in
adc
jmp
add
daa
add
clc
mov
jo
mov
ds
das
cmp
push
add
and
push
out
out
popa
cs
dec
pop
ret
sbb
mov
iret
aam
cs
sti
pop
jae
stc
les
cmp
sbb
pop
push
lods
cwde
(bad)
fistp
shl
addr16
mov
in
jmp
and
loop
dec
mov
or
retf
adc
mov
push
addr16
xor
mov
jmp
inc
std
add
in
cmp
push
shl
aas
cmps
(bad)
repz
mov
or
xchg
imul
xchg
or
lods
dec
mov
popf
fist
pushf
xchg
cdq
lahf
mov
hlt
sub
mov
mov
pop
sbb
(bad)
jb
inc
sbb
rcr
add
dec
inc
dec
sbb
mov
shl
(bad)
mov
mov
dec
fnsave
icebp
jp
out
movs
out
daa
dec
int
cmp
pushf
xor
daa
cmp
shr
sbb
(bad)
xchg
icebp
pop
push
adc
bound
push
aad
in
pop
(bad)
dec
sbb
pop
add
jge
fdivr
pop
adc
fild
cli
sbb
enter
aaa
cmc
shr
dec
jmp
sub
movs
icebp
shr
mov
fcom
dec
pop
and
mov
retf
ret
xor
inc
(bad)
fwait
pop
retf
int
jbe
mov
out
aaa
sbb
mov
pop
cmps
repnz
xor
push
jl
sbb
and
jl
(bad)
mov
ins
into
push
adc
xchg
adc
sahf
ja
bound
mov
cmps
sahf
lds
cs
out
fisttp
shr
hlt
jmp
xor
xchg
xchg
cmp
cmps
adc
call
arpl
scas
shl
adc
fisub
iret
jo
ficomp
jae
lock
inc
pop
lds
xchg
mov
and
aaa
fwait
push
or
cmp
or
xchg
sbb
cmp
xlat
ins
(bad)
in
clc
rcr
mov
xchg
stc
dec
mov
stos
dec
ror
xor
jo
push
mov
(bad)
retf
sub
sbb
xor
push
xchg
jmp
push
ins
int
jnp
cmp
push
fdivr
into
aad
and
cld
popf
ja
in
int3
xchg
aas
imul
mov
ins
outs
scas
add
icebp
fucomip
cmp
xchg
mov
int
ret
repz
or
mov
test
das
xchg
jle
imul
ja
jg
arpl
scas
addr16
push
shr
mov
mov
cdq
jbe
jb
pop
nop
pop
test
ins
gs
pop
mov
push
test
fadd
mov
cmp
lea
retf
clc
imul
mov
ror
jb
cwde
stos
loopne
xor
mov
je
cld
inc
aam
into
imul
cld
xor
lods
(bad)
jb
mov
test
sub
and
(bad)
js
lock
jmp
aaa
mov
jecxz
int
add
jbe
ds
pop
pop
push
push
shl
gs
pop
outs
mov
xchg
dec
dec
sbb
in
mov
push
stos
jmp
test
jno
push
neg
add
jle
mov
test
outs
mov
jnp
fild
cwde
sub
in
imul
test
lds
sub
push
das
mov
xor
movs
cwde
inc
sbb
and
adc
fimul
mov
scas
mov
and
pusha
fisub
push
sbb
fdivr
pop
mov
mov
dec
inc
push
ins
ds
idiv
xchg
pop
cmp
mov
mov
and
outs
setae
into
adc
cs
pop
ret
sbb
jge
(bad)
jo
call
add
imul
rol
neg
inc
dec
jge
and
pushf
lea
sahf
aas
imul
lahf
adc
rcr
pop
out
inc
push
mov
repz
mov
ret
lahf
loope
xchg
mov
pop
pop
fs
xor
aam
aaa
retf
sbb
mov
inc
xchg
fcmove
shl
lds
gs
cld
stos
loopne
add
sbb
sbb
cmps
jmp
cld
jecxz
(bad)
into
mov
xor
xor
inc
scas
push
push
adc
leave
movs
call
pop
and
ins
and
addr16
jns
or
xchg
in
xor
push
xchg
ds
les
pop
add
xor
xor
cmp
in
arpl
jae
(bad)
in
sbb
cs
push
dec
mov
mov
movs
push
push
clc
cdq
rol
fwait
lea
xchg
call
cmp
mov
jbe
cli
add
(bad)
xor
xchg
call
mov
fst
sbb
add
loop
cmp
pop
sub
into
retf
cmp
or
in
cmp
inc
pusha
add
popf
jne
call
repz
mov
or
ins
dec
ds
cmp
psllw
ficomp
inc
xchg
stc
lea
push
dec
jecxz
pop
fwait
sbb
popf
xchg
gs
ret
outs
stos
or
pop
lock
in
pop
cdq
out
movs
cmp
sub
addr16
popa
mov
add
push
jle
in
stos
iret
adc
jno
dec
ins
dec
pop
ss
pop
clc
jge
cmp
xchg
pop
movs
add
push
mov
rcr
mov
sub
cld
adc
xlat
nop
ja
loopne
pop
imul
loop
push
int3
inc
sub
popa
imul
int3
ins
push
jb
in
mov
jecxz
cmp
push
mov
jg
std
cld
mov
scas
cmp
add
mov
ror
push
cmp
test
arpl
fs
xchg
sbb
adc
test
push
pop
mov
clc
dec
pop
fs
xchg
sub
test
ficomp
adc
ins
push
(bad)
jecxz
bound
inc
stos
pop
(bad)
pop
push
cmp
popa
imul
pop
jb
sbb
shr
cmp
shrd
movs
jno
cld
cmp
inc
je
adc
pushf
fwait
pop
sbb
fwait
jmp
ret
xchg
fldcw
mov
rcr
shl
push
jnp
(bad)
cld
jecxz
adc
jecxz
jbe
movs
xchg
jo
repz
xchg
jne
sti
sahf
cmps
test
(bad)
mov
outs
xlat
lock
sub
lods
xchg
fist
out
(bad)
jl
out
imul
scas
pop
fnstcw
hlt
mov
lods
loope
add
ret
jl
int3
scas
ins
dec
clc
xchg
stos
int3
dec
arpl
sbb
stos
test
jl
fwait
mov
jb
adc
mov
sub
daa
stos
fsub
cmp
div
mov
gs
mov
push
lahf
pop
test
popa
test
adc
int
mov
cli
fs
mov
retf
leave
outs
mov
fnstenv
mov
push
adc
push
jg
inc
repnz
ins
ficom
mov
stos
mov
bound
retf
fsub
idiv
sub
das
into
leave
aad
gs
mov
dec
out
(bad)
jo
xlat
pusha
and
test
cmp
jae
pop
sbb
test
inc
pop
mov
cmp
mov
push
dec
sub
js
aam
pop
cld
imul
js
ins
enter
test
push
push
test
sar
sbb
sub
pop
xchg
jg
mov
sub
mov
call
shr
and
les
or
lahf
(bad)
jp
das
stos
fcomip
mov
push
adc
neg
sub
mov
mov
add
cli
mov
adc
xchg
call
mov
add
retf
jecxz
xchg
mov
inc
jge
test
xchg
cmps
fsubrp
or
movs
sub
pop
repnz
adc
aaa
jecxz
shl
lods
jo
pop
idiv
jle
sbb
fucomi
and
push
lods
out
in
dec
retf
push
adc
mov
pop
ja
call
sti
jecxz
fidiv
mov
into
hlt
mov
ins
out
in
push
pop
push
sbb
push
adc
or
shl
pop
fimul
in
pop
ret
je
ret
inc
pop
mov
push
jno
pop
sbb
xchg
sub
sbb
fstp
push
call
adc
(bad)
retf
mov
mov
mov
lock
inc
div
mov
stos
adc
dec
jo
and
loope
xchg
or
sar
dec
jo
rcl
fist
xor
out
sbb
sub
stos
or
and
loopne
xchg
and
les
(bad)
and
aaa
push
inc
inc
iret
jae
(bad)
cmp
push
mov
mov
fidiv
out
cld
jge
cwde
ret
arpl
retf
das
jecxz
rcl
sbb
adc
mov
outs
cmp
push
dec
lods
mov
aad
and
in
dec
pop
push
jbe
inc
int3
adc
sti
(bad)
jmp
scas
(bad)
jecxz
dec
mov
movs
es
jmp
and
adc
jecxz
xor
adc
or
mov
cmps
ret
sub
push
test
adc
fstp
cdq
mov
mov
push
outs
pop
fistp
push
test
neg
fcomp
pop
inc
out
imul
push
jns
jmp
xchg
and
rcr
loop
sbb
sbb
adc
adc
loope
movs
cmps
ja
sub
mov
pop
push
out
jp
stos
cmps
cmc
(bad)
sbb
iret
shl
pop
dec
test
(bad)
sbb
les
mov
pop
test
cmps
sbb
push
push
nop
jecxz
cs
nop
gs
sahf
dec
xor
sub
ss
push
jl
or
mov
add
nop
push
ror
sub
mov
daa
push
add
inc
inc
aaa
jmp
test
add
sbb
jae
add
mov
add
sbb
adc
xchg
adc
fstp
pusha
out
mov
sub
fcos
imul
adc
inc
int3
les
sbb
jg
mov
push
add
sbb
retf
scas
push
push
imul
in
and
aad
call
and
lahf
int
(bad)
fwait
mov
jmp
push
int
jl
mov
pop
out
pop
cmp
sub
inc
lahf
jcxz
mov
sbb
mov
push
lods
fwait
(bad)
clc
int3
dec
movs
stos
add
and
aam
aam
and
push
(bad)
lock
(bad)
push
dec
push
cmps
neg
mov
stos
popa
sbb
sub
xchg
addr16
xchg
mov
cmp
imul
add
int3
loope
inc
shr
jns
imul
jo
or
mov
xor
and
aaa
(bad)
lea
jmp
(bad)
movs
sbb
ror
pop
cld
gs
sbb
mov
mov
push
pop
fmulp
(bad)
mov
sti
enter
xchg
call
dec
xchg
aas
add
leave
and
popf
mov
push
mov
or
stc
xchg
mov
xchg
mov
xor
xor
aas
mov
push
in
dec
repz
jbe
test
dec
out
inc
push
add
adc
adc
ret
add
stos
shl
mul
pop
xchg
div
xor
sahf
into
(bad)
cmc
addr16
push
iret
ins
pusha
imul
sub
scas
sbb
or
scas
xor
mov
cmp
(bad)
pushf
enter
push
mov
pusha
aad
adc
shl
retf
add
or
adc
sub
cld
push
fwait
mov
and
retf
aad
rcl
ins
stos
mov
das
and
leave
fdiv
push
push
fstp
jo
jns
adc
xor
aaa
push
movs
fcomp
daa
inc
push
lods
aas
adc
(bad)
ret
cwde
repz
call
ins
push
lock
lods
jns
inc
jecxz
jl
arpl
xlat
es
pop
test
mov
mov
stos
je
push
inc
arpl
pop
inc
outs
push
push
inc
xchg
aaa
pusha
ja
or
add
dec
push
je
imul
mov
ins
jns
test
mov
mov
cs
adc
cmc
adc
mov
cmp
aas
and
imul
fdiv
add
sbb
jbe
nop
sbb
mov
dec
mov
jle
aam
adc
sahf
sbb
(bad)
and
add
hlt
dec
push
inc
or
retf
lea
imul
shr
fsubr
xlat
mov
pop
xor
xor
fld
jmp
push
push
inc
pop
enter
jp
mov
sti
inc
(bad)
fdivr
sub
daa
adc
xchg
xor
out
mov
xor
push
not
sahf
lahf
int3
and
in
int3
push
loope
push
mov
adc
lea
sub
xor
cmp
push
sub
ret
push
leave
sub
nop
lds
jne
ins
and
pop
pop
mov
xchg
lahf
popf
xchg
mov
dec
mov
jne
sbb
cmps
ja
sbb
dec
int
add
lahf
int3
pop
pop
scas
stos
fisub
fisttp
and
push
sub
in
inc
adc
iret
fwait
pop
sar
inc
scas
imul
add
fadd
jnp
bnd
sbb
cmc
hlt
push
subps
jmp
or
sub
js
cld
pop
jle
push
test
std
mov
ficom
jl
push
xor
mov
and
scas
mov
fwait
adc
sbb
popf
push
ret
mov
pop
pop
xchg
pop
pop
sub
xor
push
mov
leave
dec
push
in
add
jmp
pop
fistp
fisttp
add
fdivr
pushf
sti
repz
push
inc
and
arpl
ja
into
ret
push
test
pop
mov
loop
cmps
mov
aas
dec
pop
xor
jno
retf
mov
mov
scas
scas
aas
mov
dec
push
out
shl
mov
clc
sbb
or
inc
mov
test
mov
jnp
inc
test
pop
pop
bnd
pop
sbb
add
nop
adc
push
lods
cmps
sbb
popa
jmp
add
cmp
idiv
fcomi
call
inc
jb
mov
loopne
pop
inc
and
mov
arpl
aad
mov
in
int3
sub
sub
sbb
push
lods
mov
fsub
jg
dec
shl
jecxz
fbstp
enter
aam
stc
mov
mov
pop
and
mov
dec
pop
test
jae
test
aam
std
jnp
test
push
cs
cmc
imul
push
aam
mov
and
out
mov
xor
pop
rol
(bad)
jns
push
push
shl
dec
test
imul
or
in
sahf
int
mov
in
popf
outs
call
je
adc
(bad)
aam
sahf
iret
shr
add
js
xchg
ja
xor
(bad)
js
pop
aam
jecxz
mov
pop
push
inc
pop
add
sbb
shl
lods
fdivr
mov
add
push
call
cmc
hlt
xchg
cdq
fldz
dec
lahf
xchg
mov
js
icebp
(bad)
in
xchg
jl
cmc
call
and
shl
je
adc
push
js
adc
out
inc
jmp
inc
sub
add
fild
idiv
cmp
repnz
imul
sbb
sub
sbb
bswap
retf
lods
pop
mov
mov
daa
pop
sub
cli
mov
stc
repz
in
cmp
jbe
pushf
fwait
sbb
push
repnz
in
xchg
xchg
xchg
or
or
or
leave
cmp
inc
and
cwde
pop
bsr
bound
fild
out
repz
mov
or
push
ss
cmp
mov
xor
pop
mov
sub
in
jp
cmp
das
or
add
call
mov
adc
jl
sahf
push
push
inc
pop
fild
adc
fwait
mov
and
(bad)
dec
aas
movs
add
jg
dec
cli
scas
mov
and
(bad)
popa
movs
in
sar
or
mov
outs
ret
pop
mov
inc
(bad)
test
jmp
lods
in
jae
in
sub
push
out
dec
push
nop
cld
inc
popa
lods
jb
stos
xor
pop
repz
(bad)
fmul
iret
pop
jp
push
cli
movs
cld
fisub
or
cmp
fadd
in
sub
xor
xchg
sub
push
add
lods
dec
sub
cmp
jle
xchg
sub
push
jmp
in
pop
pop
mov
ror
fdiv
jae
sub
pop
adc
shr
shr
aad
add
jl
(bad)
aad
mov
sub
push
push
sti
lock
lea
mov
and
push
repz
ja
fcompp
push
dec
clc
outs
iret
mov
cmps
repz
shl
push
sbb
repz
cwde
add
jmp
inc
adc
add
mov
int3
stos
arpl
and
fimul
add
nop
pop
shl
mov
xor
or
fisttp
neg
imul
adc
fs
mov
sar
(bad)
jne
dec
or
outs
pusha
enter
aas
iret
mov
or
mov
cs
es
pop
ret
out
ss
sahf
dec
xchg
mov
xlat
sub
fwait
(bad)
pop
or
push
mov
xadd
push
les
mov
icebp
rcr
fstp
int
dec
sub
add
sub
test
dec
pop
hlt
jnp
mov
inc
lahf
fisub
fimul
mov
sbb
in
or
aad
jbe
popf
xchg
pop
mov
je
sar
test
movs
pusha
lock
dec
mov
mov
inc
dec
lea
sbb
fsub
fcmovu
clc
inc
cmp
add
dec
and
test
sbb
fstp
sar
push
push
out
jmp
in
sbb
jmp
inc
mov
fsubr
fcom
xchg
int
ret
adc
retf
jg
(bad)
cmp
push
cld
and
rcr
inc
pusha
in
mov
paddusb
fcmovbe
inc
pop
in
xchg
sbb
sti
adc
jae
mov
into
sbb
add
leave
pop
call
outs
sbb
xchg
movs
push
jmp
ins
lea
sbb
mov
sbb
or
lea
scas
pusha
out
leave
mov
pop
imul
or
mov
mov
push
test
pushf
in
add
iret
xchg
jmp
test
jmp
mov
adc
(bad)
xchg
xchg
and
lahf
loop
sahf
movs
xlat
xchg
mov
test
and
inc
inc
push
mov
and
aas
imul
jmp
inc
in
cdq
xchg
bound
sbb
push
inc
(bad)
and
push
test
jle
xchg
daa
and
imul
dec
sub
or
mov
sub
inc
leave
cwde
adc
nop
movzx
mov
inc
aas
or
push
std
jae
cmp
mov
rcl
paddq
lods
scas
mov
nop
sahf
add
imul
jmp
lds
mov
ins
push
pop
(bad)
cld
add
dec
pop
jns
stos
sub
mov
js
sub
mov
aam
inc
push
(bad)
xchg
push
mov
out
mov
add
mul
cs
(bad)
pusha
inc
shl
pop
outs
out
sbb
xchg
ja
mov
jl
enter
ja
mov
retf
mov
inc
mov
jmp
or
sbb
bound
mov
popf
daa
loop
mov
icebp
sub
sub
mov
les
fmul
sar
rcr
sub
mov
push
cmp
add
inc
and
stos
or
sub
jle
mov
cli
mov
pushf
clc
call
outs
or
cdq
mov
test
std
or
add
push
repz
pop
sbb
sbb
mov
outs
nop
and
mov
jae
sahf
push
pusha
pushf
xlat
outs
data16
stos
mov
mov
retf
mov
rcl
fmul
out
bound
inc
xor
pushf
pop
sub
jge
loopne
xor
in
(bad)
adc
sbb
out
mov
xlat
inc
pusha
sbb
jg
push
enter
shl
mov
mov
cmp
repnz
retf
jmp
int3
int3
or
sub
popa
push
xlat
add
ror
fcom
and
cdq
js
outs
adc
rcr
ret
popf
push
push
dec
add
(bad)
and
fild
nop
cmps
mov
sahf
sbb
cld
inc
cmps
mov
inc
add
imul
out
sahf
mov
inc
and
adc
in
cmp
sbb
movs
pop
js
outs
icebp
mov
mov
xlat
pop
outs
(bad)
dec
inc
dec
es
sub
gs
jne
fcom
push
adc
jo
add
popf
or
cmp
fsubr
pop
mov
rcl
jp
retf
pusha
xchg
jecxz
adc
bound
adc
mov
ins
les
cwde
xor
mov
pushf
and
out
icebp
and
ret
(bad)
jno
stc
mov
pop
in
arpl
jg
retf
add
stos
je
add
xchg
mov
imul
rcl
adc
stos
jp
lahf
jmp
xor
aam
jns
leave
fcmovne
pusha
dec
repz
sahf
pop
fucom
loop
cmc
adc
sbb
push
iret
adc
mov
sbb
cmp
dec
xor
scas
(bad)
jle
mov
and
cmp
inc
jmp
fmul
xor
push
int
fstp
stc
(bad)
aaa
mov
push
jbe
loope
push
lods
(bad)
jo
imul
movs
out
sub
jns
mov
mov
clc
jmp
(bad)
adc
and
mov
ins
xor
jne
add
mov
dec
jp
push
ins
out
scas
retf
cdq
mov
std
xor
pop
mov
push
sub
arpl
sbb
cmp
pop
pop
jbe
or
xlat
jb
outs
shl
pop
xlat
cmp
sbb
aam
retf
inc
push
loop
push
aam
lea
dec
stos
xchg
es
xchg
dec
cmp
data16
ds
pop
jne
xor
mov
shl
mov
push
fnstenv
add
(bad)
mov
or
cli
cmc
and
sub
push
retf
jno
xchg
xor
mov
gs
adc
call
fdivr
jo
aas
sar
out
icebp
and
or
xlat
xor
pop
mov
lea
dec
push
xchg
xchg
jne
rcr
mov
dec
in
inc
mov
ins
jno
mul
adc
movs
mov
scas
lock
fdivr
mov
aam
mov
jl
mov
mov
jmp
sahf
out
fs
in
idiv
fwait
sub
(bad)
push
cld
cmp
(bad)
and
xchg
push
sub
pop
pop
nop
inc
(bad)
mov
sub
in
cdq
adc
in
lock
xor
pop
cmps
cdq
pop
imul
adc
and
sub
arpl
test
lds
outs
jnp
adc
rcr
mov
cmc
push
retf
call
lea
dec
call
adc
mov
fs
adc
sub
pop
adc
inc
shl
push
int3
jno
ds
imul
in
adc
push
xor
das
pop
jo
daa
fcomi
sar
jb
xor
or
pop
xor
add
adc
(bad)
mov
ret
push
mov
cwde
pop
sbb
out
pushf
xor
fcomip
xor
or
into
enter
fisttp
xchg
mov
push
es
xchg
adc
or
aam
rcl
pushf
mov
lahf
loop
out
or
jmp
pop
pop
adc
mov
xchg
outs
add
pop
ret
pop
xchg
sbb
mov
retf
jge
cmp
inc
inc
popf
bound
adc
cld
into
lahf
sub
push
dec
popa
jo
mov
jge
retf
stos
(bad)
push
and
outs
pop
sti
adc
push
add
cmps
sub
enter
mov
retf
hlt
mov
pop
push
lods
sbb
dec
mov
fidiv
loopne
xor
loope
sub
lods
out
dec
out
and
push
push
imul
xor
or
adc
fisubr
shl
pop
xchg
imul
mov
pushf
pushf
dec
mov
test
cli
mov
ds
in
push
and
(bad)
cmp
outs
pop
shr
loop
dec
sub
in
les
xor
mov
(bad)
push
push
inc
test
loopne
addr16
mov
cmps
push
nop
xchg
inc
call
xor
(bad)
pop
bound
movs
imul
cdq
addr16
ss
call
or
pop
retf
or
push
das
leave
mov
sbb
imul
pushf
or
enter
rdtsc
je
neg
(bad)
xchg
imul
inc
stos
fbld
(bad)
ficom
pop
js
jl
mov
out
dec
cmp
xchg
pop
les
outs
std
pop
mov
xchg
es
movd
ins
bound
xchg
xor
jnp
sbb
cmp
arpl
rol
sub
retf
xor
loopne
jb
dec
cmps
loope
movs
das
ds
(bad)
adc
cwde
rcl
fs
add
sbb
adc
jmp
mov
jge
out
cmp
jns
mov
jg
das
das
sbb
sub
xchg
test
(bad)
aam
int
xor
push
in
ffreep
jno
pop
or
add
pop
cs
or
pop
es
ror
(bad)
lahf
(bad)
cmp
fs
into
xchg
pop
dec
jp
xor
in
pop
pusha
mov
add
in
dec
in
loop
jge
and
xor
adc
cmp
jge
jl
out
cmps
(bad)
xor
sub
test
test
dec
lods
scas
mov
dec
pop
neg
(bad)
adc
fldenv
mov
fdiv
shl
stc
test
loop
je
sbb
mov
(bad)
les
or
xchg
cmp
jne
sub
call
mov
adc
and
lahf
dec
or
pop
mov
retf
arpl
mov
ja
jnp
or
xchg
dec
addr16
imul
jge
jbe
mov
xchg
jge
pop
ffree
mov
or
push
or
(bad)
je
mov
cmp
into
scas
lods
sub
and
push
adc
outs
inc
push
fcom
jg
pop
jmp
iret
imul
loopne
cmps
add
mov
neg
(bad)
or
int
xor
leave
dec
(bad)
jne
adc
das
aad
jp
js
jmp
jbe
bound
dec
and
mov
mov
jb
je
xor
cs
xchg
xor
(bad)
rcl
dec
pop
fild
ficomp
data16
pop
stos
xchg
outs
cmp
rol
cli
repnz
mov
pushf
cld
dec
js
mov
xchg
arpl
sbb
adc
or
xor
jmp
aad
push
or
nop
pop
(bad)
and
rcr
arpl
hlt
add
push
cmp
rcr
jae
(bad)
xor
mov
call
pop
enter
sar
adc
idiv
cmp
fsubr
mov
sub
jbe
jge
jmp
lsl
stos
out
xchg
mov
sbb
stos
lods
jmp
cld
sub
leave
inc
ja
jno
imul
jp
sbb
adc
dec
cmp
adc
pop
sbb
push
push
std
push
sti
inc
jo
imul
adc
mov
jbe
in
pop
mov
fwait
movs
or
cli
ins
popf
pop
ficomp
push
dec
rcr
in
mov
fadd
and
push
cmps
inc
push
sbb
cmp
mov
adc
repz
imul
mov
test
aam
push
daa
int
(bad)
je
sub
adc
sub
lea
sbb
stos
inc
mov
sub
and
push
int3
(bad)
movs
in
xchg
dec
repnz
sbb
cli
pop
fwait
loopne
lahf
mov
div
mov
mov
js
xchg
sbb
and
scas
push
cs
mov
fsubr
je
adc
adc
mov
lea
aaa
pop
enter
dec
xchg
and
sbb
fwait
dec
or
lea
popf
int
std
or
outs
arpl
(bad)
out
and
mov
aad
retf
je
fild
das
rcl
pop
sub
out
and
lds
das
xchg
fmul
mov
sub
daa
es
retf
(bad)
lods
mov
aas
jnp
jmp
fsub
fld
mov
sbb
test
fadd
lahf
jmp
ja
repz
mov
outs
jmp
js
push
jae
je
mov
sbb
inc
jmp
fstp
(bad)
lahf
pop
bound
push
inc
in
pop
jb
adc
(bad)
cmps
or
scas
pop
lahf
adc
aas
mov
push
push
pop
mov
xchg
in
movs
add
sahf
aas
mov
popf
push
out
sar
jb
sbb
sbb
scas
push
mov
mov
imul
test
mov
lods
sbb
fcomp
popf
xchg
push
add
mov
imul
xchg
sbb
adc
pop
fistp
jnp
sub
jmp
cmc
push
fwait
sbb
sbb
dec
popf
frstor
cmp
es
jno
adc
or
jmp
fimul
mov
les
sahf
mov
fmul
push
mov
sbb
int3
or
daa
fild
add
add
iret
dec
jp
aam
push
sub
push
pusha
in
mov
ja
sti
push
sahf
scas
sub
jb
and
imul
jmp
jbe
jge
and
jp
push
and
push
arpl
inc
mov
(bad)
int
and
add
push
pusha
dec
jecxz
scas
push
test
cli
test
std
xchg
xlat
inc
sbb
cwde
hlt
dec
inc
fs
test
pop
mov
scas
sbb
push
paddusw
jmp
add
sub
jne
mov
push
pop
xchg
lahf
jecxz
loopne
movs
iret
xor
sbb
sub
sbb
pop
jmp
ret
xor
xor
out
inc
mov
test
mov
lahf
add
push
mov
or
aas
rol
out
push
adc
shr
stc
jae
pop
jle
cmp
pop
dec
mov
and
push
retf
or
clc
adc
adc
mov
mov
icebp
sbb
in
mul
das
into
adc
inc
(bad)
sub
pop
fidivr
lock
add
pop
cli
arpl
bound
aas
and
sahf
pop
sar
or
mov
or
jb
leave
fimul
push
mov
and
mov
inc
sar
test
dec
test
clc
mov
stos
add
adc
adc
cmp
cmc
mov
sbb
dec
jbe
test
xchg
sub
jle
into
dec
dec
sbb
jo
fst
jne
dec
mov
mov
mov
imul
ret
stc
cmp
(bad)
dec
mov
dec
mov
js
pop
mov
sub
sub
test
aam
dec
ja
cmp
xlat
inc
imul
inc
xchg
or
mov
cmp
xor
and
sbb
push
jl
and
lods
add
lea
sbb
fdiv
call
xor
(bad)
jbe
(bad)
jge
lock
adc
ss
sbb
push
fmulp
jmp
out
ins
jbe
gs
bound
push
push
push
cdq
sub
push
and
or
call
and
pop
xor
pushf
fcmovbe
sub
outs
dec
sub
push
mov
inc
xor
stos
rcr
cmp
add
push
scas
adc
adc
lahf
jmp
mov
cdq
mov
jp
mov
popa
add
inc
jp
rcl
test
jg
push
dec
push
xchg
fsubp
mov
push
adc
sbb
popa
icebp
and
enter
xor
in
lahf
jb
pop
repnz
sbb
int
push
je
mov
push
test
aaa
loop
add
outs
sbb
ret
(bad)
jmp
shl
add
ret
mov
loope
sub
push
sbb
pop
pop
cwde
sub
enter
xchg
sub
cmp
out
adc
neg
cld
neg
rcl
push
mov
ins
push
and
das
jg
scas
repz
push
jp
fcomp
and
stc
rep
mov
shl
lods
sbb
arpl
in
mul
mov
fmul
push
xor
cmp
and
loopne
jae
sti
sub
jno
xchg
pop
adc
jg
adc
jnp
aas
adc
stc
mov
push
outs
adc
jl
cmc
lds
in
jge
js
aad
fldcw
cs
into
loop
xchg
clc
sbb
inc
and
ins
es
push
fwait
mov
pop
sbb
minps
lock
inc
(bad)
jecxz
or
mov
sahf
push
and
inc
jecxz
xchg
fst
cmp
xchg
(bad)
jns
out
jp
mov
enter
rcr
lods
xchg
mov
cmp
aam
pop
(bad)
cmp
bound
jge
push
xor
pop
mov
retf
sub
in
push
outs
fsub
sbb
xor
pop
cs
mov
cdq
push
xchg
xor
dec
and
cmp
mov
mov
mov
enter
js
mov
mov
aad
xchg
dec
rcl
cld
out
sub
adc
mov
imul
sub
int3
push
fdiv
(bad)
adc
fistp
or
xchg
pop
out
sbb
cmp
and
mov
lods
mov
mov
sub
inc
dec
xor
push
retf
inc
aad
push
rcl
addr16
into
mov
cmp
imul
ja
xor
inc
cs
in
(bad)
ins
stos
int3
pop
mov
mov
jge
push
cmp
ins
arpl
push
call
and
stos
pop
popa
mov
xchg
cdq
push
jnp
xlat
sar
push
add
je
popf
cmp
lods
outs
push
and
dec
sub
lock
inc
ret
cmc
xchg
(bad)
mov
and
inc
stc
jecxz
sbb
inc
adc
xchg
cld
push
test
cmp
cmp
fs
xchg
add
popa
xchg
pop
rcl
fisub
enter
pusha
add
scas
fnsave
lahf
out
aas
stos
outs
ja
jbe
mov
inc
pop
cmp
fs
push
cmp
cld
scas
(bad)
fsubr
sbb
fmulp
or
retf
fsubr
inc
mov
xchg
sub
popf
fdivr
inc
cwde
lock
sahf
fadd
pop
push
pop
add
jmp
push
(bad)
leave
in
outs
fwait
lahf
xchg
add
loop
rdtsc
pop
ins
std
xchg
nop
cmp
sbb
jae
std
add
add
lods
ret
jnp
stos
dec
xchg
or
dec
fst
dec
in
fcmove
fistp
scas
jne
pop
dec
push
or
mov
addr16
mov
jae
aas
pop
call
jmp
ja
pop
mov
scas
fstp
arpl
push
enter
iret
push
loopne
aas
lods
xchg
sti
fwait
mov
shl
scas
popf
jecxz
sbb
mov
cmp
pushf
sub
retf
lods
and
enter
cmps
mov
mov
push
mov
leave
jbe
adc
mov
push
test
and
and
xchg
nop
mov
popf
lea
popa
mov
cmp
pop
popa
nop
cmp
push
sub
sahf
sub
or
ret
sbb
push
mov
int3
je
(bad)
mov
imul
addr16
fs
sbb
cli
lahf
jl
sub
xchg
xchg
cmps
xchg
push
add
mov
cmps
or
ins
je
fld
mov
(bad)
xchg
pop
adc
test
ret
xchg
xchg
mov
outs
push
fistp
jmp
xchg
inc
arpl
sbb
sbb
and
xchg
mov
push
scas
dec
nop
xor
sub
xchg
lods
aam
adc
in
call
jb
cmc
xor
mov
or
bound
or
pop
adc
mov
cld
test
fcom
cwde
mov
in
or
pop
scas
je
ins
jmp
das
sbb
jl
xchg
sahf
mov
sub
sub
mov
mov
imul
movs
add
jae
mov
retf
mov
add
clc
rcr
add
xor
sbb
pop
jmp
lahf
mov
add
outs
mov
and
or
mov
xchg
mov
fnstsw
ds
scas
pop
sbb
pop
jns
xor
retf
stos
popa
fild
aad
(bad)
idiv
jmp
push
dec
dec
add
pop
test
mov
leave
sub
xchg
cmp
push
ss
shl
add
xor
add
popf
push
ins
mov
xchg
pop
dec
jmp
jg
fwait
mov
pop
aas
add
call
aam
push
dec
add
aam
not
mov
iret
cli
rol
lods
aaa
mov
std
jmp
and
sbb
mov
ss
lock
pop
sub
hlt
jb
pop
cs
jmp
pop
in
inc
jne
add
out
inc
cmp
cld
bound
sbb
xchg
mov
ret
fwait
jae
fwait
aas
ficomp
(bad)
add
cmp
xor
mov
dec
adc
adc
mov
mov
aam
add
out
sub
push
lahf
scas
(bad)
fsubr
(bad)
pushf
repz
jns
push
mov
xlat
inc
push
aas
lods
push
cld
jo
jecxz
stos
mov
jns
or
js
sub
sbb
add
cwde
test
outs
call
sbb
mov
pop
mov
sub
and
idiv
sti
imul
mov
fs
and
dec
push
mov
dec
scas
sub
jmp
iret
loope
pop
adc
jno
addr16
fimul
fs
push
outs
jp
sar
fsub
mov
call
adc
fsubr
cmp
and
pusha
fnstsw
mov
aad
ins
(bad)
sub
mul
ret
pop
stos
cmps
lock
or
push
nop
add
xor
pop
mov
mov
push
cli
add
xchg
arpl
or
xor
out
or
arpl
(bad)
pop
jl
sub
jg
addr16
dec
fcom
cmps
arpl
popa
punpckhbw
or
mov
sub
adc
cmp
adc
adc
xor
gs
retf
dec
into
enter
jb
pop
jge
add
aam
adc
jmp
add
sub
(bad)
scas
int
call
cmp
ja
fwait
dec
sbb
jae
adc
pop
adc
fistp
sub
jle
xchg
xchg
test
lea
fs
sbb
ja
(bad)
sbb
mov
(bad)
add
and
aad
xchg
add
or
mov
pop
scas
aas
jmp
push
outs
mov
jmp
ret
cwde
mov
sahf
adc
(bad)
repnz
mov
aas
out
call
in
cmps
sub
retf
out
push
mov
pop
outs
push
jne
pop
in
and
push
int3
adc
imul
(bad)
sub
cmps
call
test
fcomp
pop
cmp
push
xchg
aaa
push
xlat
aam
(bad)
pop
lds
or
outs
or
adc
loope
aam
push
fsubr
imul
fist
shr
(bad)
(bad)
cld
adc
(bad)
fcmovnbe
pop
mov
aam
das
fs
cli
shl
mov
out
call
cwde
popf
retf
adc
push
aam
or
div
jno
movs
addr16
or
sbb
clc
xchg
jle
mov
cwde
les
or
aaa
dec
mov
adc
pusha
push
inc
mov
inc
sub
and
ret
lea
das
adc
rol
xor
xchg
cdq
mov
jbe
cmp
outs
in
inc
inc
fst
lahf
inc
jb
inc
popf
and
sti
aas
enter
(bad)
jo
push
fiadd
fwait
push
sti
inc
inc
lods
push
sub
daa
dec
out
adc
push
cmp
or
or
retf
mov
repz
pop
imul
inc
cwde
fstp
stos
sahf
sub
in
push
pusha
movs
pop
push
mov
cmp
cmp
jmp
(bad)
xor
or
adc
cld
mov
xchg
inc
test
inc
ss
mov
pop
xchg
or
xchg
mov
inc
cld
(bad)
or
cli
mov
pop
enter
pop
mov
sbb
add
xor
sahf
jmp
data16
(bad)
in
mov
aad
add
inc
cmp
or
mov
fdiv
mov
js
mov
cmp
fnstcw
dec
jecxz
mov
cli
call
mov
stc
fist
and
and
lock
xchg
mov
push
dec
adc
adc
inc
xchg
mov
mov
shl
fmul
lock
idiv
inc
cmp
dec
sub
fsubr
das
(bad)
shl
scas
mov
mov
push
mov
pusha
scas
sbb
jl
in
out
ja
jne
adc
pop
int3
jmp
daa
lock
test
xchg
enter
push
add
pusha
add
mov
retf
and
jns
adc
push
push
pusha
mov
mov
stos
xor
js
cmc
retf
sbb
jl
(bad)
shl
pop
cmp
xchg
adc
xchg
adc
(bad)
out
fs
cmovp
leave
fcomp
sub
add
push
sub
jge
push
scas
retf
cmp
repnz
add
jno
jne
mov
ins
sub
sbb
xor
add
(bad)
aam
fcmove
scas
mov
pop
lods
pop
in
xor
xchg
cli
adc
enter
and
(bad)
push
pop
stc
jne
mov
inc
(bad)
xchg
int3
pop
bnd
adc
adc
nop
add
jecxz
inc
mov
mov
inc
add
mov
jmp
bound
or
dec
inc
iret
dec
mov
adc
push
scas
scas
jl
jno
ins
push
sti
sbb
cmp
jmp
lods
push
fidiv
mov
dec
xor
shr
mov
(bad)
ins
mov
jae
mov
movs
mov
mov
in
and
add
stos
mov
imul
lods
ficomp
inc
cmp
rcr
pop
cld
sub
jg
dec
mov
movs
xchg
xor
add
retf
mov
out
cmp
mov
cmp
xchg
push
cwde
repnz
mov
or
and
push
dec
cli
mov
mov
stos
fidivr
mov
push
push
scas
fcom
ret
mov
repz
mov
sbb
int
mov
lods
test
cld
jecxz
rcl
test
push
inc
aas
test
mov
mov
push
xchg
outs
(bad)
js
jl
xchg
sub
cmp
repnz
and
fld
and
out
or
aam
jnp
int3
add
or
cmps
cmp
pop
retf
jecxz
cwde
or
xchg
push
stos
push
mov
cmps
jns
sbb
xchg
out
dec
cmp
(bad)
cmps
push
cmp
push
adc
rcl
cmps
fldcw
icebp
jp
adc
xor
mov
arpl
loope
cld
inc
cmp
gs
jns
adc
xor
rcr
ret
dec
retf
imul
jl
mov
ds
adc
sbb
mov
imul
retf
mov
adc
nop
sti
arpl
sbb
cmc
adc
scas
dec
mov
aam
mov
test
fsubr
pusha
stos
out
mov
sar
jmp
mov
jmp
jl
or
int3
(bad)
lock
dec
push
(bad)
in
cmp
mov
sbb
scas
lods
cld
mov
mov
aam
or
rcr
adc
dec
adc
mov
(bad)
fstp
sti
mov
add
nop
repz
push
outs
mov
jmp
lahf
push
add
shl
(bad)
not
(bad)
jmp
mov
fiadd
pop
cld
std
push
jmp
mov
pop
pop
fs
sub
push
gs
enter
je
fs
bound
add
push
scas
mov
xor
loop
xor
mov
dec
cmp
outs
xor
xchg
dec
push
push
push
dec
rcl
sub
adc
(bad)
mov
cmps
addr16
and
push
jle
fisttp
cmp
sub
mov
sbb
inc
out
adc
rcr
inc
stos
fist
bound
jb
int3
mov
cld
in
mov
pop
mov
movs
adc
sbb
jl
adc
ficomp
js
repnz
ret
out
ds
test
pushf
movs
jmp
arpl
dec
pop
mov
xchg
pusha
stos
lods
fwait
ds
cwde
lods
sbb
pop
adc
rcr
xchg
pop
ss
(bad)
push
test
push
jmp
pop
repz
jmp
or
inc
imul
pop
icebp
addr16
lahf
xchg
mov
sub
adc
jb
xchg
mov
in
sub
mov
(bad)
adc
bound
in
mov
or
cmp
ror
jbe
loopne
fwait
xchg
or
mov
stc
cmps
aad
or
ret
stos
dec
outs
push
sbb
scas
mov
es
repnz
ret
sbb
add
push
push
loop
popf
pushf
push
sbb
(bad)
(bad)
sub
fdiv
pop
push
pop
jg
data16
pop
mov
out
jg
std
scas
pop
pop
dec
loopne
sbb
adc
adc
sub
jns
bound
sbb
xchg
jge
xor
cli
jecxz
cmc
mov
test
es
pop
stos
addr16
out
cmp
sub
bound
xor
sub
mov
lods
xchg
div
mov
popa
cwde
adc
pop
mov
(bad)
into
out
jno
jmp
mov
out
push
pushf
xchg
mov
sbb
cld
lahf
(bad)
mov
int3
xor
xor
pop
repnz
pop
lock
dec
pop
mov
imul
sub
repnz
or
in
or
xchg
fnsave
cmp
shr
pop
fidiv
(bad)
pop
sbb
xor
dec
bound
jmp
pop
pushf
adc
loope
(bad)
jmp
pop
out
adc
push
add
or
cmp
cdq
(bad)
test
xor
push
dec
or
aad
pop
int
sub
xor
fdivr
fsub
test
xor
adc
test
mov
push
and
xchg
xor
inc
leave
shr
movs
leave
int3
jo
push
mov
push
inc
sti
jge
mov
retf
(bad)
fwait
jle
loopne
fucomp
add
inc
cmp
in
xchg
xor
adc
aaa
test
mov
jae
sbb
addr16
lahf
dec
pushf
ror
jecxz
xchg
and
adc
dec
ret
xor
cmps
ins
inc
fnstsw
dec
jl
sbb
addr16
sbb
adc
std
cmp
xor
sub
sub
and
cmps
fisub
mov
mov
enter
cmps
cmp
sti
pop
cwde
test
cmc
pusha
push
sbb
scas
jp
cmp
push
sub
sub
adc
jg
push
bound
adc
push
xor
push
mov
das
cdq
mov
inc
mov
mov
stos
jnp
out
jbe
mov
jp
in
sbb
addr16
loop
mov
into
push
fiadd
mov
cmc
sar
shr
daa
pop
mov
mov
cmp
pop
test
js
jmp
sub
sti
add
scas
iret
xor
sar
arpl
data16
push
cmp
fdivr
mov
mov
vpaddb
int3
sub
mov
sbb
or
popf
or
pop
icebp
fcomp
jae
adc
ret
jg
mov
jl
mov
push
adc
ficomp
inc
popf
out
cli
cmp
int
push
lds
sbb
std
jmp
jl
pop
and
cdq
mov
or
xor
dec
push
fisub
adc
lock
mov
or
pop
inc
sbb
mov
adc
bound
jo
shl
cmp
dec
sbb
out
fdiv
pop
jle
adc
dec
ret
dec
fwait
pop
mov
mov
movs
in
shr
stc
pop
cmp
inc
bound
pop
or
sbb
int3
js
std
nop
clc
arpl
lock
sub
adc
jle
xchg
nop
jae
lds
loope
stos
cld
inc
jns
test
sub
adc
or
fistp
ret
mov
dec
ja
retf
in
ret
lods
sahf
outs
inc
sbb
test
mov
data16
in
and
xchg
addr16
cmp
sbb
movs
mov
repnz
add
dec
sti
std
xchg
sbb
fsub
popf
cmps
jnp
fidiv
push
pushf
push
dec
popf
or
mov
shl
out
dec
out
(bad)
out
push
movs
xchg
pop
or
add
or
jl
pushf
mov
sbb
jno
(bad)
retf
fcomip
popa
sub
and
xchg
cmp
or
pusha
leave
repnz
pop
inc
jg
push
mov
js
push
fs
jp
jnp
enter
and
mov
call
lods
fldenv
and
inc
jae
cmp
loop
add
pop
movs
test
dec
lods
push
sbb
outs
rol
add
ins
jbe
cmp
popa
xor
jbe
mov
mov
outs
or
daa
dec
mov
outs
mov
push
call
sti
pushf
sub
xchg
jle
(bad)
xor
call
sahf
in
mov
pop
(bad)
cmps
inc
cmps
fwait
cwde
mov
mov
pushf
leave
inc
inc
dec
sbb
in
xchg
cmp
xchg
adc
jo
jge
ins
mov
mov
jecxz
pop
inc
ficom
in
mov
mov
and
push
mov
call
mov
adc
lahf
dec
imul
aad
cmp
bound
cmps
and
mov
mov
test
mov
mov
push
mov
daa
imul
enter
pop
push
loop
mov
xlat
jl
xchg
enter
jle
or
mov
push
and
xor
(bad)
popf
daa
retf
sbb
pop
stc
stos
pushf
in
pop
shr
adc
jl
adc
xchg
lods
pop
xchg
ror
push
pop
jge
sub
cdq
mov
imul
call
and
pop
sti
sbb
pop
out
scas
daa
dec
adc
cmps
sub
cwde
mov
cmp
mov
sub
call
mov
aad
ds
xor
loop
mov
cld
loopne
push
jmp
jbe
les
cs
loop
pop
sti
sub
sub
and
clc
sub
lea
in
xchg
xlat
pop
rcr
(bad)
or
loop
aad
cld
push
pushf
mov
sahf
iret
pop
test
cs
push
jle
test
cs
jge
push
scas
xchg
or
es
adc
and
jp
mov
push
jg
xchg
nop
pop
and
shr
push
pusha
aad
xchg
movs
das
leave
adc
int
mov
add
mov
adc
mov
xor
add
pusha
lock
jecxz
shl
fst
bound
mov
retf
aad
cmp
jo
iret
cwde
pop
rol
(bad)
aam
(bad)
mov
retf
push
sbb
les
div
sbb
pop
cld
ss
test
popa
mov
in
inc
sbb
ret
xchg
pusha
mov
pop
sbb
jg
movs
fisttp
repnz
add
jp
cld
xchg
movs
cmp
(bad)
jb
xchg
retf
out
mov
jle
and
add
call
sbb
mov
stos
xchg
jo
ret
push
fwait
and
sub
add
es
sti
xor
jb
add
xchg
fstp
inc
retf
or
pop
fcom
mov
outs
(bad)
out
mov
pop
adc
pop
dec
cli
xchg
xchg
jle
adc
xchg
dec
sahf
push
ret
mov
xchg
xchg
sbb
pop
pop
sub
dec
test
xchg
mov
data16
xchg
mov
stc
mov
pop
pushf
lock
fstp
xchg
jne
jae
ret
or
ror
mov
add
cmp
out
cmp
push
not
fwait
sbb
mov
mov
ss
xchg
outs
xchg
jp
out
outs
sahf
mov
jnp
test
sbb
pop
scas
pushf
popa
adc
add
call
cs
rcl
mov
std
out
and
jae
inc
(bad)
or
mov
out
inc
pop
sbb
jle
mov
mov
cmp
mov
mov
(bad)
pushf
mov
in
push
lea
push
jecxz
push
xor
stos
mov
jmp
test
jp
adc
int3
fstp
frstor
jmp
pop
mov
jb
sbb
repnz
test
jecxz
adc
das
xchg
inc
shr
cmps
push
pushf
cld
dec
push
sbb
cmp
jmp
repz
mov
jno
aad
mov
push
dec
popf
retf
xor
jecxz
(bad)
lahf
inc
fnstcw
push
and
leave
mov
pop
ret
push
jp
and
push
fst
int3
ins
imul
ds
test
jp
mov
jno
daa
xor
mov
addr16
sbb
sub
jmp
mov
data16
lds
inc
cmp
shl
mov
push
mov
mov
cmp
int
das
sbb
out
jge
xchg
pop
in
inc
sahf
jmp
or
cld
outs
and
in
xor
pop
pop
fcom
jbe
movs
fisttp
mov
cmp
ret
adc
ja
inc
xor
daa
sbb
pop
inc
pusha
jns
dec
lods
mov
idiv
scas
mov
push
cmps
push
pop
mov
les
js
mov
jmp
xchg
mov
dec
or
outs
push
push
(bad)
dec
imul
xchg
faddp
sbb
push
adc
retf
jb
and
dec
arpl
jbe
xlat
leave
adc
cmp
xchg
lds
ins
fstp
fwait
pop
sbb
add
mov
fild
mov
jns
ret
sar
xchg
mov
std
enter
fs
mov
test
or
cmp
dec
dec
outs
add
in
rcr
mov
mov
adc
movs
push
mov
sbb
mov
fdivr
lea
mov
sub
sbb
adc
mov
scas
gs
jbe
xchg
neg
xchg
ss
jecxz
xor
cwde
xchg
outs
mov
retf
iret
cdq
pop
pop
adc
popa
xchg
or
jmp
jb
scas
js
xlat
push
clc
push
pop
fwait
cmp
adc
mov
ss
ss
js
mov
in
mov
pop
rcr
das
adc
push
adc
add
les
fadd
push
repz
scas
enter
jbe
mov
adc
jmp
cmc
pop
ins
ss
dec
push
sub
rcr
add
pop
out
pop
dec
repz
mov
rol
jmp
fwait
sbb
pop
repnz
xchg
push
in
and
pushf
mov
out
pushf
jmp
mov
(bad)
out
cmp
cli
xor
ror
out
(bad)
jg
scas
sub
inc
ds
xchg
add
xchg
push
pop
(bad)
lods
push
dec
jne
pusha
push
mov
and
in
xchg
dec
sti
fsubr
push
pmaddwd
icebp
repz
xor
neg
push
imul
retf
sbb
arpl
push
mov
mov
das
mov
dec
test
or
aas
bnd
leave
push
dec
repnz
push
inc
jmp
sahf
mov
out
mov
sbb
pop
ror
mov
inc
ins
movs
cmc
sbb
dec
bsf
add
aas
xchg
pop
je
sbb
jg
gs
cmp
add
fwait
jbe
and
adc
xchg
xor
inc
out
sbb
inc
jmp
or
cmp
xchg
(bad)
cmc
stc
add
jnp
(bad)
cmp
imul
mov
ret
loope
lods
ret
pop
push
ins
push
pop
jmp
push
push
pop
lock
jmp
mov
in
push
gs
sahf
push
in
enter
sbb
lock
outs
aaa
arpl
and
in
into
das
cs
fcmovnu
pop
into
setb
imul
sub
int
js
out
test
xlat
jbe
adc
fcomp
add
and
iret
cmp
adc
scas
cmc
pop
iret
movs
xchg
xchg
(bad)
cmc
or
ret
mov
inc
in
fwait
aaa
fdiv
ficomp
pop
inc
xchg
ins
push
lods
pop
adc
lods
inc
mov
add
sub
xor
test
inc
cmp
cmp
fild
out
into
inc
movs
leave
sub
push
add
fist
fcmovnbe
gs
(bad)
pop
dec
daa
fcom
jp
adc
(bad)
or
or
fld
and
mov
mov
aaa
ins
sbb
push
push
mov
out
pop
xchg
inc
or
les
sbb
push
pop
rcr
enter
loopne
in
retf
xchg
into
and
mov
loop
fsubr
hlt
sub
imul
leave
shl
add
js
and
gs
(bad)
xchg
sbb
adc
pop
push
sbb
and
cwde
pop
movs
jnp
or
into
aam
xor
test
xchg
sub
and
shl
xor
(bad)
arpl
jg
ins
mov
pop
pop
push
pushf
xchg
iret
loopne
dec
jp
call
push
ins
pop
fist
add
cmps
dec
cmp
movntps
cdq
jne
inc
mov
shl
div
fisttp
xchg
mov
(bad)
daa
icebp
rcl
or
sub
push
hlt
fst
into
ret
adc
jmp
add
jg
(bad)
adc
jb
mov
or
call
ja
mov
pop
adc
mov
jp
mov
jo
aad
mov
mov
xor
mov
mov
xchg
movs
lock
dec
xchg
xchg
cmp
icebp
and
loopne
mov
adc
les
out
movs
scas
or
xor
mov
scas
jl
xchg
cmps
(bad)
test
xchg
cwde
arpl
movs
adc
adc
sbb
fs
adc
into
sar
test
adc
cmp
cmp
cmp
sub
ins
(bad)
lods
neg
movs
add
mov
or
xchg
and
arpl
push
in
fistp
xchg
inc
aad
bound
jp
dec
stos
pop
push
fmul
loop
rol
hlt
adc
test
rcr
mov
dec
popf
push
dec
push
jecxz
loope
into
test
(bad)
es
inc
pop
add
lods
rcr
bound
and
loop
adc
jecxz
cmps
adc
and
popf
loope
jge
fwait
adc
les
js
sub
or
fsub
add
mov
ins
in
jne
or
scas
fadd
ins
hlt
xchg
jl
adc
jp
jne
test
lea
in
xor
enter
pop
pop
push
imul
sti
cld
cld
adc
fldcw
out
pop
popa
stc
or
xchg
lahf
enter
imul
das
mov
mov
push
jb
cld
enter
sub
stos
xchg
imul
mov
imul
xchg
xlat
cmp
mov
cmp
(bad)
arpl
lods
fldz
mov
shl
ret
push
pop
retf
movd
sub
mov
gs
inc
and
pushf
rcr
arpl
or
fmul
out
pop
sar
pop
out
adc
shr
sbb
shr
movs
pop
push
cdq
inc
mov
stos
push
add
jo
sbb
mov
or
rcl
leave
loop
je
jns
sahf
xchg
movs
sbb
stc
xor
in
jg
or
sub
or
inc
sbb
scas
imul
retf
fcom
or
push
test
and
pop
(bad)
jg
or
hlt
pop
jnp
icebp
sahf
ds
(bad)
scas
aaa
xchg
pop
mov
inc
ret
js
add
jbe
lods
push
mov
push
ficomp
mov
mov
lahf
sub
or
lods
push
pop
repz
sbb
icebp
cmp
sub
add
repnz
xor
mov
imul
mov
leave
mov
loopne
punpcklwd
dec
fcomp
mov
fwait
add
sti
mov
lea
push
sbb
push
ficomp
pop
push
mov
mov
add
push
xor
cs
adc
mov
mov
rcr
mov
dec
sub
mov
xor
mov
xchg
xlat
mov
push
push
and
adc
stc
movs
push
es
push
pop
dec
call
xchg
lahf
push
adc
mov
mov
inc
mov
or
sbb
and
cmc
in
aam
mov
push
push
push
mov
xchg
pop
sub
sbb
retf
outs
pop
xchg
das
pusha
sub
rcr
imul
pop
mov
xchg
adc
jne
ficomp
add
retf
sbb
call
cmp
inc
jo
push
stos
js
(bad)
stos
and
shr
and
push
fcmovnbe
imul
mov
scas
add
cmps
pop
repz
in
sbb
mov
out
arpl
in
mov
imul
mov
mov
mov
pushf
push
lock
sbb
xchg
sbb
cmp
(bad)
and
jbe
or
and
fld
mov
mov
ficomp
in
call
movs
out
xor
mov
push
(bad)
mov
in
ror
sbb
mov
inc
xor
add
pushf
int
mov
call
loopne
into
int
jno
pop
and
xchg
pop
in
fcmovnu
adc
rcr
nop
inc
(bad)
rol
cmp
mov
call
pop
push
adc
jmp
or
(bad)
dec
or
and
cmps
sub
scas
dec
cs
sub
xor
mov
pop
stos
in
adc
pop
mov
sbb
add
jae
mov
test
mov
jmp
fsubr
sub
lahf
inc
data16
jnp
mov
(bad)
add
push
dec
ds
mov
xchg
pop
(bad)
sub
sub
loope
push
mov
cld
dec
push
hlt
xchg
cmps
push
pusha
cli
int
xor
sub
push
mov
or
cmp
retf
out
mov
sub
outs
push
test
stc
push
inc
pushf
int
cmp
push
arpl
mov
sbb
gs
retf
out
out
repz
(bad)
adc
mov
int
in
mov
cmp
and
mov
pushf
ret
or
xchg
ffreep
retf
adc
(bad)
fild
je
imul
jle
push
adc
test
fdivr
dec
in
dec
mov
mov
pushf
push
popf
push
xchg
adc
push
gs
arpl
and
push
sbb
(bad)
mov
leave
nop
shr
sub
inc
push
pop
cwde
test
push
inc
sbb
pop
xchg
stc
pusha
inc
movs
test
add
std
jp
pop
retf
dec
sahf
push
xor
cmp
sub
inc
xchg
pop
mov
xor
cmp
aam
jae
or
or
pop
cli
jle
pop
(bad)
xor
cmp
mov
pop
inc
sub
outs
scas
push
dec
call
(bad)
lock
cmps
test
or
push
or
ja
stos
or
cmp
jl
cmp
jl
aas
xchg
dec
add
in
stos
into
mov
nop
pop
retf
cmp
add
in
repz
sub
shr
into
mov
mov
xor
pop
lods
js
jle
sub
push
in
and
sbb
mov
pop
pop
movs
inc
jl
fisttp
std
lahf
or
inc
jg
mov
pop
bound
ins
aad
(bad)
fimul
cmps
je
pushf
jmp
cmp
jnp
ins
or
adc
or
xchg
add
cmc
jno
rcr
push
(bad)
in
xchg
cwde
jle
xchg
mov
xor
divps
int
jecxz
ins
(bad)
cmc
lods
xor
ja
cmp
jg
test
or
mov
push
lock
pushf
mov
push
inc
nop
xchg
xlat
mov
cmp
ins
outs
inc
sbb
cli
xchg
push
aam
cmps
inc
cmp
test
lahf
lahf
loope
xchg
loope
jl
fwait
in
pop
xor
pop
push
daa
inc
call
loop
inc
add
daa
das
sub
push
sbb
push
call
jl
jecxz
and
sbb
xor
mov
pop
(bad)
jnp
or
sbb
ds
mov
lods
push
sub
(bad)
lock
mov
in
adc
inc
sbb
mov
das
push
add
push
cld
xchg
or
(bad)
cmp
ret
xchg
lock
cmp
inc
(bad)
or
adc
imul
scas
jmp
xor
dec
scas
push
inc
(bad)
hlt
pop
or
and
cmp
into
repnz
jo
sahf
fldenv
test
scas
mov
ins
mov
xchg
fxch
int3
rcr
sti
adc
and
mov
das
lahf
push
movs
add
and
xchg
pop
and
jne
cld
fwait
jnp
sub
sbb
jnp
aas
pop
sbb
add
mov
fsub
(bad)
je
movs
(bad)
fs
push
ret
ds
add
add
enter
mov
sub
add
(bad)
and
scas
inc
xchg
add
sahf
sti
mov
mov
arpl
inc
dec
xchg
test
retf
retf
stc
push
mov
inc
aad
add
push
push
(bad)
ins
and
sub
pop
ror
fsubr
call
test
xlat
rol
pop
or
mov
in
stos
pushf
adc
sar
mov
adc
mov
pop
xlat
dec
sbb
lods
in
dec
push
fimul
das
add
push
movs
aaa
retf
daa
mov
cmps
arpl
test
adc
mov
inc
inc
ror
add
mov
pop
mov
je
cwde
push
add
ret
adc
mov
ins
aad
rcpps
add
xor
jmp
pxor
inc
(bad)
je
and
pusha
aad
mov
iret
mov
add
jle
sbb
cmps
adc
fwait
or
xor
dec
sbb
in
fdivp
dec
fadd
xchg
push
push
bnd
push
(bad)
out
inc
rep
inc
int3
ins
imul
push
mov
sub
and
mov
inc
iret
xchg
in
jo
and
out
xor
inc
lods
push
push
push
icebp
adc
sbb
ret
jne
enter
out
fild
sar
and
or
movs
pop
lock
push
jae
popf
sti
imul
in
retf
or
and
ins
(bad)
xchg
cmps
and
out
push
int3
xor
add
cmovbe
addr16
xor
mov
test
dec
mov
imul
or
pop
jmp
out
sub
stos
jmp
jno
pop
das
ins
fucom
aam
lock
inc
cmp
jge
push
push
mov
sub
xchg
inc
pop
sbb
popf
jb
xchg
jmp
movs
call
or
xchg
adc
inc
pop
xchg
xchg
push
mov
fcomp
push
sti
xchg
int
add
jne
fwait
xchg
dec
dec
mov
fld
retf
jae
out
and
cmp
icebp
mov
cmp
jecxz
ret
out
es
mov
out
imul
es
popf
js
mov
push
jle
or
jg
arpl
pushf
and
test
cmp
imul
lahf
push
jl
arpl
cmp
inc
lahf
pop
call
sahf
sub
enter
int
push
ins
push
test
pop
enter
jge
inc
xchg
in
inc
xchg
call
adc
lds
popf
xchg
not
cwde
xchg
cmp
jmp
push
adc
cld
push
out
test
in
fadd
push
mov
sbb
cli
dec
out
test
xchg
mov
jns
jle
jge
xchg
or
popa
lods
out
adc
pop
cld
push
(bad)
push
cdq
ds
or
(bad)
sub
adc
fucom
xchg
mov
fwait
sub
mov
mov
(bad)
jecxz
call
iret
xchg
pop
push
sub
test
push
jmp
leave
push
retf
scas
and
or
movs
adc
pop
jb
mov
and
add
(bad)
mov
test
mov
gs
scas
jmp
fisub
fimul
xor
int
pop
inc
(bad)
call
mov
adc
and
les
adc
xchg
aaa
pop
fistp
mov
out
and
jle
arpl
mov
adc
sbb
add
or
sar
jmp
pushf
int3
or
sbb
push
mov
cld
inc
xchg
or
pop
fcmovnu
movs
outs
shr
mov
mov
retf
call
sub
rep
mov
cmp
aas
imul
sbb
jnp
and
push
dec
cmc
add
adc
lahf
(bad)
pushf
jae
push
push
adc
imul
jmp
adc
imul
inc
sbb
fisubr
fisttp
fnstenv
rcr
or
adc
fstp
push
lahf
adc
xor
dec
pop
(bad)
cs
push
sbb
aaa
lock
sahf
in
retf
mov
xor
fidiv
int3
fwait
mov
add
mov
lds
fisubr
pop
into
loop
push
sbb
jmp
cmp
cmp
add
repz
inc
call
xchg
hlt
or
(bad)
aam
pop
cmp
das
fimul
out
push
inc
in
fst
xchg
fcomp
jg
cwde
cld
mov
inc
and
int3
into
xor
test
stc
cdq
pop
test
test
(bad)
(bad)
sti
mov
(bad)
xchg
clc
push
adc
xor
pop
shr
in
or
lods
lock
fsubr
pusha
push
pop
mov
shl
and
add
test
xlat
in
sub
push
js
call
in
das
adc
sti
outs
outs
stos
icebp
pop
pop
sub
movs
cmp
pop
loopne
push
popa
ds
push
sti
retf
pop
add
sub
shl
in
jns
cs
movs
pushf
sahf
add
cmc
stc
jl
gs
push
or
dec
aas
aaa
sbb
lods
popf
sbb
sub
mov
sbb
push
call
rcr
inc
xchg
movs
int3
div
int
fimul
or
lahf
cmp
mov
test
fs
ins
xor
sbb
and
pop
cdq
sar
push
and
xor
ret
mov
test
and
sbb
sub
fwait
pop
test
lods
and
sbb
mov
pop
fs
jp
fsub
shr
jge
xor
imul
pop
push
mov
cwde
iret
mov
adc
jmp
cli
jle
xor
cld
dec
jnp
mov
sbb
adc
xchg
push
pushf
pop
mov
fidivr
pop
scas
popf
mov
mov
cmps
jl
enter
adc
jge
dec
iret
std
idiv
xchg
xchg
push
xchg
pop
lea
sbb
jg
loope
aaa
jecxz
shl
sbb
xchg
adc
mov
cli
xor
cmp
pusha
mov
into
ja
and
jae
pushf
adc
mov
and
mov
sahf
nop
adc
add
and
adc
stos
shld
xor
xor
jp
and
push
aam
sub
inc
out
popf
adc
sbb
into
sar
sub
lahf
inc
popf
outs
inc
dec
popf
(bad)
int
xor
gs
or
outs
pop
rcr
leave
mov
add
mov
cmp
aaa
mov
popa
retf
fsub
push
leave
pushf
dec
sbb
pop
daa
jae
add
sub
bound
push
adc
cmp
fidivr
or
sbb
add
and
arpl
mov
pusha
pop
sti
dec
arpl
sti
xchg
jnp
je
mov
inc
ror
inc
and
inc
outs
ret
xchg
data16
xchg
jns
mov
add
dec
test
lahf
mov
xchg
xor
mul
sbb
and
sbb
sub
mov
aad
fs
stos
movs
mov
adc
cdq
fcomp
cmc
out
sbb
jo
mov
(bad)
or
push
lea
aad
test
jbe
fldcw
jns
and
mov
adc
sub
inc
fist
pop
ficomp
or
xor
(bad)
std
test
push
add
int
test
push
and
repz
mul
sbb
sbb
fistp
dec
xor
cmp
cmps
into
adc
push
imul
bound
sub
test
mov
lock
in
xchg
cmp
inc
pop
jle
sbb
jnp
push
sub
cmps
test
cmp
pop
or
push
std
push
enter
scas
xor
sub
jo
repz
cld
cmp
inc
aaa
jbe
pop
lock
adc
ficom
mov
lds
les
add
dec
add
push
and
cmp
cdq
cdq
pop
outs
ret
movs
hlt
inc
adc
ins
push
push
imul
xchg
out
xor
sbb
jecxz
inc
mov
fwait
shl
icebp
and
xchg
stos
in
sub
or
adc
out
push
mov
inc
push
sahf
mov
(bad)
pusha
sbb
xchg
or
std
(bad)
fcomp
mov
dec
outs
fcomp
hlt
nop
push
xchg
lea
aas
mov
pop
jne
clc
push
inc
mov
repz
xchg
or
les
fcom
sub
adc
enter
neg
(bad)
mov
popa
pminub
mov
aaa
es
mov
ds
adc
mov
sub
jl
loope
call
call
inc
pop
and
jae
mov
push
dec
repnz
xor
fbstp
inc
push
(bad)
push
fidivr
and
popf
push
loop
sahf
test
call
xor
cld
sub
les
fcmovnbe
cdq
dec
fstp
inc
loop
ret
repnz
out
cmp
add
or
lods
daa
pop
xchg
mov
cmc
(bad)
push
inc
popf
pop
test
pop
pop
adc
mov
movs
sahf
xor
jg
hlt
xor
(bad)
test
rcl
int
mov
sub
jbe
dec
xchg
cmps
popf
iret
and
(bad)
test
cmp
mov
and
dec
inc
sbb
hlt
pusha
les
inc
fiadd
rcr
sub
mov
and
push
fidivr
(bad)
pop
in
cli
push
or
push
fistp
mov
repz
cmp
pop
sbb
cwde
retf
jb
call
pushf
mov
mov
out
shr
aaa
xor
mov
(bad)
push
in
aam
and
out
icebp
jb
jbe
ret
pushf
sub
jecxz
shr
fwait
adc
add
loopne
ret
cwde
stc
push
adc
mov
test
push
mov
xor
pop
cmp
and
ret
add
das
aad
dec
iret
out
in
xor
test
fsub
jbe
retf
inc
xchg
pusha
xchg
in
adc
jb
cdq
(bad)
add
repnz
mov
pop
dec
sbb
pop
lahf
cdq
dec
pause
fwait
jecxz
mov
sub
(bad)
sbb
gs
ret
add
jmp
push
mov
adc
sti
adc
fadd
adc
stc
mov
or
in
adc
mov
outs
mov
pop
push
xchg
cmp
xchg
and
aas
jno
or
das
xchg
ret
mov
ret
inc
js
push
pop
imul
(bad)
push
(bad)
or
or
cmp
push
mov
bound
sti
jne
pushf
popa
jge
inc
les
mov
or
sbb
adc
out
scas
mov
pop
cmp
out
pop
or
cmp
inc
inc
cmp
mov
adc
dec
mov
xchg
(bad)
ins
and
enter
jmp
stos
or
xor
inc
pop
push
fcom
js
push
xlat
cmps
xchg
pop
adc
push
call
arpl
dec
mul
aad
and
iret
nop
js
es
and
cwde
xchg
in
movaps
rcl
cmp
pop
mov
enter
push
sbb
or
pop
mov
(bad)
fs
sub
inc
daa
test
xlat
test
fcomp
jbe
and
mov
cmp
adc
in
jb
inc
imul
jo
sbb
xor
pop
or
cmp
clc
cmc
pop
or
xor
mov
les
das
loope
sti
mov
dec
mov
mov
shr
fs
mov
dec
add
mov
fbld
stos
loope
idiv
stos
ins
xor
jmp
pop
fnstcw
sbb
shr
jmp
jb
or
imul
imul
iret
aaa
or
icebp
mov
xchg
leave
outs
cdq
cld
mov
mov
shl
rcr
xchg
sti
fild
inc
mul
fwait
mov
mov
fs
das
or
jmp
adc
xchg
std
sti
rcr
xor
mov
cmp
cmp
nop
cvttps2pi
cmp
xlat
out
lods
sbb
or
arpl
mov
lods
pop
pop
loop
dec
add
call
or
arpl
cmp
xchg
pop
jns
mov
sub
jp
fnstenv
push
sbb
mov
(bad)
lock
daa
test
pop
adc
call
pop
inc
and
repz
rcr
fld
mov
bswap
lds
jmp
scas
rcr
inc
inc
ins
popf
xor
mov
dec
dec
jp
fwait
aam
fdivr
test
mov
push
out
and
test
gs
std
idiv
fild
(bad)
xor
jbe
jbe
push
div
adc
(bad)
fisttp
(bad)
cmp
pushf
stos
lods
aad
pop
pop
call
mov
or
fmul
lahf
or
jecxz
jnp
sub
dec
mov
add
jmp
inc
loopne
push
push
jmp
pusha
xchg
ret
scas
sub
dec
lods
push
mov
lods
add
mov
iret
xor
jae
adc
enter
and
xchg
repz
jbe
test
mov
inc
cmps
stos
xchg
popf
or
loop
sub
mov
inc
test
cmp
ja
push
fninit
aaa
push
out
test
cdq
mov
adc
jbe
jge
add
fild
or
pop
push
out
jo
mov
pop
(bad)
rcr
repnz
and
(bad)
shr
adc
push
fcomp
push
sbb
sbb
(bad)
lods
lea
iret
int
adc
sub
mov
int3
and
push
or
shl
adc
inc
jp
iret
cli
xchg
sbb
dec
aas
inc
cmp
xor
mov
mov
loopne
jbe
cld
jl
sbb
push
add
sbb
das
inc
pop
loop
mov
int
nop
cmps
cmp
and
retf
jmp
push
daa
arpl
aaa
xor
or
and
mov
mov
xchg
sahf
shr
mov
sbb
add
cmp
mov
das
clc
mov
jb
mov
inc
ins
ja
mov
push
fdiv
pop
retf
pop
push
les
and
pushf
test
je
pushf
inc
out
inc
xchg
inc
jl
jge
out
cli
fisttp
cmps
fdiv
and
mov
adc
retf
pop
mov
xor
add
push
aaa
fcmovb
mov
outs
call
add
sbb
lods
nop
mov
add
jp
out
iret
jmp
daa
mov
xor
jge
movs
mov
fnstenv
push
call
pushf
jecxz
xor
cli
(bad)
mov
sahf
out
sub
neg
add
xchg
popf
imul
inc
dec
sub
pusha
enter
adc
pushf
adc
out
jo
push
inc
adc
test
sub
aaa
xchg
nop
gs
xchg
imul
adc
ins
mov
push
inc
dec
(bad)
pop
dec
leave
out
mov
dec
enter
mov
cmp
and
sbb
pop
popf
adc
adc
outs
std
arpl
imul
std
fucomi
xchg
xchg
cmp
(bad)
mov
lods
fsubr
xlat
mov
fsubr
add
or
push
fiadd
push
adc
add
shl
lods
rol
stos
fisub
push
gs
jno
inc
sbb
sar
and
jmp
int
mov
and
or
push
outs
cmp
mov
xchg
test
jne
cmp
xlat
js
push
pop
in
adc
sub
xor
mov
xchg
int3
in
xchg
dec
jne
adc
and
push
pop
and
retf
adc
adc
(bad)
(bad)
sub
daa
into
sub
push
rcr
dec
xchg
fucomp
arpl
push
sbb
ss
aas
stos
ret
jbe
sbb
outs
jno
fild
and
sti
(bad)
xor
jb
in
lods
fstp
jmp
cmp
push
call
or
jb
pop
adc
adc
mov
sbb
push
add
lds
fmul
stos
xchg
out
jl
jmp
sbb
cmp
mov
test
adc
dec
jbe
bound
out
mov
dec
out
cmp
cmp
aad
xor
rol
(bad)
jle
mov
push
jmp
icebp
dec
cld
aad
mov
ja
jns
test
adc
sub
mov
jl
cmps
cli
ficom
imul
and
pop
into
adc
cdq
sbb
dec
(bad)
add
xchg
xchg
mov
adc
hlt
xchg
cmovg
sbb
outs
sub
adc
(bad)
in
pop
iret
and
imul
xor
inc
cmp
mov
nop
(bad)
cli
cmp
add
mov
pusha
pop
push
adc
aam
jno
jbe
ss
ja
imul
sbb
ja
dec
das
fisubr
scas
mov
inc
jl
and
lds
add
rcr
daa
sub
dec
sub
pop
jl
mov
pop
pop
and
je
call
jno
jmp
retf
js
mov
ror
adc
push
pop
mov
nop
addr16
inc
pop
lods
movs
mov
xchg
sbb
out
movs
pop
inc
inc
sub
es
inc
pop
jp
add
fsubr
xchg
std
adc
hlt
xchg
mov
sbb
push
aad
js
out
push
jmp
adc
sub
and
push
loop
lock
push
(bad)
adc
les
push
inc
xchg
jnp
sub
push
ins
cmp
out
xlat
sub
lahf
jp
imul
and
adc
fidivr
mov
inc
cmp
not
adc
dec
pop
pusha
sub
cdq
in
or
pop
sbb
mov
xchg
dec
mov
pop
jmp
jg
ret
lods
outs
inc
(bad)
out
xlat
add
out
(bad)
xor
mov
repz
repz
int3
mul
mov
add
imul
mov
bound
push
cld
jno
(bad)
lahf
ficom
test
xchg
and
or
pop
in
or
sbb
leave
dec
fs
lea
inc
push
and
xor
fimul
daa
pop
test
cmp
cmp
dec
and
sahf
mov
xchg
call
jl
xchg
sub
retf
ins
add
mov
in
add
loopne
call
fld
xor
ret
stc
inc
xor
fwait
jae
sub
xchg
and
or
xor
icebp
or
jle
cmp
and
xor
push
adc
lahf
sub
mov
pop
aam
and
xor
jg
and
jmp
pop
rol
sbb
push
enter
jmp
adc
dec
mov
ins
xor
xchg
mov
mov
data16
push
addr16
adc
jle
sub
fisttp
cmp
inc
add
mov
mov
les
sub
jbe
imul
jp
lahf
lods
addr16
aad
sub
lock
lods
mov
dec
retf
xchg
lock
sbb
cmp
jl
inc
arpl
add
xor
mov
mov
ret
dec
out
mov
fwait
les
sub
mov
mov
cmp
addr16
add
dec
sbb
mov
cmp
mov
jns
cmc
cdq
sahf
mov
cwde
pushf
cli
cs
lds
test
mov
data16
adc
xchg
push
daa
pop
out
movs
bound
ret
fild
sbb
cmp
or
int3
retf
jno
mov
mov
push
retf
ins
sub
lds
inc
jne
inc
call
xlat
test
sub
cmps
pop
xchg
push
mov
ficom
and
and
adc
in
cmp
aas
aad
daa
int
dec
(bad)
xor
sbb
mov
sbb
xlat
jp
mov
mov
push
outs
daa
sub
inc
jle
icebp
movs
pushf
in
dec
ins
hlt
lahf
cmovl
lock
ss
jg
inc
push
dec
pop
test
jp
in
sbb
jns
idiv
sub
jmp
sbb
sahf
add
push
ret
mov
push
sbb
push
cmp
es
push
pop
cmps
jb
in
(bad)
clc
js
push
add
je
pop
test
int3
retf
sar
push
in
adc
movs
nop
out
dec
jbe
fwait
pop
push
add
xchg
mov
popf
xor
inc
dec
xchg
sbb
call
data16
push
jbe
bound
repz
stos
hlt
push
sub
fwait
xchg
sbb
icebp
pop
(bad)
aad
mov
sbb
pop
test
jo
mov
fcomp
pop
cmp
add
lods
(bad)
mov
or
cmp
outs
les
pop
push
adc
and
add
xchg
cwde
pop
or
mov
call
popf
or
ins
retf
sub
rcr
and
cmp
push
pop
pop
test
inc
cli
jge
adc
daa
inc
or
mov
leave
sbb
sbb
dec
dec
add
test
push
call
jnp
inc
xor
mov
pop
div
nop
movs
push
popf
mov
rcl
sub
ror
out
add
or
(bad)
out
inc
sub
lahf
inc
imul
adc
into
mov
sbb
adc
aam
mov
outs
xor
(bad)
aam
lock
push
cmp
rcr
in
jae
(bad)
repz
xchg
aaa
push
cmp
(bad)
fistp
pop
les
lea
dec
cli
push
dec
pop
xor
push
jg
push
and
mov
ror
adc
ror
sub
mov
pop
jg
ss
mov
int3
movs
dec
inc
fisttp
mov
movs
mov
pop
sub
cmc
mov
push
loopne
pop
push
push
or
sbb
nop
cld
enter
(bad)
fsub
jmp
xchg
pop
adc
icebp
addr16
test
js
dec
outs
into
scas
mov
arpl
cmc
scas
sbb
sbb
push
dec
mov
(bad)
sbb
out
mov
pop
(bad)
or
ret
popa
sbb
mov
hlt
daa
out
push
pop
jmp
stos
or
js
into
mov
sbb
cmp
mov
push
cmps
pop
mov
psubq
mov
sub
scas
sbb
call
lods
fdiv
inc
test
sub
jecxz
or
scas
(bad)
sub
loop
inc
stc
mov
pop
adc
in
sbb
push
jno
imul
sar
push
jmp
mov
fbstp
mov
shl
xchg
and
xlat
mov
jle
(bad)
test
sub
and
jp
inc
mov
add
cwde
mov
mov
imul
adc
inc
xlat
mov
add
inc
mov
jno
popf
inc
sub
jge
shr
sti
sub
xor
(bad)
frstor
sub
mov
rcr
and
(bad)
pop
lods
test
pop
xor
movs
or
and
mov
movs
sbb
in
jne
pushf
xor
fcom
xchg
pop
push
call
(bad)
jmp
lock
jl
xchg
cs
pop
cs
push
out
vpunpcklwd
jmp
aas
pop
cmp
popf
jo
add
push
xchg
mov
int
fcomi
aaa
jae
daa
cs
pop
push
lods
cmp
stos
icebp
inc
mov
cmp
sbb
retf
out
and
fist
pop
sbb
dec
in
xchg
push
or
shl
(bad)
or
ins
pop
lea
jo
pop
mov
or
call
inc
mov
sub
jae
nop
mov
stos
outs
jmp
inc
pop
test
cmp
jb
mov
js
int
mov
pop
push
inc
mov
test
add
adc
outs
mov
ja
fucomip
push
or
mov
dec
push
repnz
mov
jo
call
jmp
push
aam
mov
(bad)
in
xchg
mov
and
xor
mov
xchg
sti
push
sub
js
js
lods
call
repnz
mov
out
imul
xchg
aam
xchg
xchg
loopne
xchg
jbe
cmp
das
lea
mov
inc
sti
mov
mov
mov
cmp
inc
repnz
mov
and
icebp
jns
pop
shr
pushf
jl
sbb
movs
jbe
mov
les
out
mov
adc
aam
fwait
bound
push
xchg
pop
inc
inc
neg
aam
pop
das
sar
push
cld
pusha
(bad)
daa
jae
mov
imul
pop
or
sub
sub
adc
leave
repnz
and
das
addr16
call
scas
adc
or
not
loopne
fisubr
and
push
jae
cdq
lods
mov
imul
mov
outs
mov
adc
pop
repnz
lock
fiadd
shr
addr16
jge
cld
mov
xchg
xor
mov
pusha
and
pop
test
scas
sbb
std
push
xor
fst
jge
mov
sub
xchg
gs
sub
mov
mov
je
ins
aam
and
movnti
adc
pop
cwde
adc
cwde
and
sub
sbb
call
scas
push
mov
cmp
adc
lea
push
pop
movs
(bad)
repnz
(bad)
sar
call
xchg
mov
in
jge
push
out
or
push
sbb
jmp
jl
pushf
rcr
mov
push
jbe
jmp
lahf
cmp
icebp
sub
out
xchg
test
push
call
cmps
adc
mov
jmp
in
sub
(bad)
aaa
call
imul
ins
inc
in
and
pop
push
out
scas
gs
inc
pop
sbb
push
and
xchg
sub
dec
push
ins
loop
pusha
or
std
xor
sbb
mov
xor
in
rol
movs
sbb
inc
and
dec
les
pop
xor
mov
mov
out
outs
cs
xlat
mov
clc
mov
mov
nop
ficom
cli
inc
outs
sub
sub
arpl
push
rcr
movs
leave
shl
popf
shl
repz
mov
pop
pop
push
push
es
(bad)
mov
pop
sbb
sub
js
sub
jne
repnz
frstor
xor
push
bound
(bad)
push
sub
mov
fild
or
pop
inc
inc
mov
pop
leave
fidiv
push
cmp
(bad)
fist
jge
xor
fisttp
rol
or
dec
lea
int
popf
dec
jg
inc
and
addr16
mov
sbb
mov
mov
fwait
rcr
mov
xchg
adc
dec
jo
in
std
pop
into
jmp
pop
loop
fldenv
inc
enter
imul
aas
xchg
call
popf
sub
lods
jo
cli
stos
push
inc
and
imul
ins
cld
(bad)
(bad)
mov
jae
retf
sub
push
xor
cmps
stos
rcl
nop
ficomp
add
bound
adc
sbb
repnz
pop
call
xchg
add
mov
cmps
add
mov
hlt
fisub
arpl
ret
sbb
cwde
daa
jb
push
cmc
xchg
or
mov
imul
ja
lea
popf
cwde
jg
xchg
int3
and
cld
dec
mov
adc
out
shl
mov
movs
rcl
(bad)
or
and
pop
dec
mov
hlt
cmp
pop
shl
cdq
fidivr
jge
inc
sti
cld
cmps
xor
in
sub
sbb
adc
pop
mov
ins
xor
pop
xor
cmps
repz
shl
jge
mul
or
push
fbstp
xor
mov
push
int3
push
mov
pop
jbe
mov
mov
dec
cmp
sahf
outs
cmp
or
inc
xchg
and
and
inc
cmp
sub
mov
xchg
pop
pusha
adc
or
leave
pop
mov
in
cdq
imul
sbb
sbb
sub
mov
push
and
aaa
ins
push
cmc
and
jns
imul
jo
lods
mov
xchg
jg
sbb
mov
push
xchg
shl
mov
push
pop
aam
ins
ficomp
pushf
cmc
or
mov
test
ins
je
cld
cdq
xchg
push
lea
nop
retf
sbb
out
cmp
stc
iret
outs
and
ret
push
jmp
or
dec
push
xchg
push
pop
adc
(bad)
pop
stc
mov
push
test
cmp
jns
mov
sub
ds
mov
sbb
(bad)
stos
inc
lea
clc
mov
clc
ins
xchg
adc
jo
add
sub
sbb
stos
mov
dec
mov
lds
push
mov
push
and
pop
sbb
inc
adc
sub
loopne
aad
ret
jg
dec
out
nop
push
lods
and
cld
jbe
ja
dec
xor
fwait
cmps
std
xchg
xchg
lea
fisttp
pop
bound
lods
addr16
sbb
dec
cmp
push
xchg
pop
push
outs
sub
pop
stc
mov
imul
push
pop
pop
xchg
call
dec
neg
mov
arpl
push
xchg
push
xor
mov
xor
fiadd
in
pop
adc
push
scas
test
clc
or
in
in
lea
(bad)
sbb
xor
xor
bound
lods
adc
dec
mov
int3
les
mov
cmp
dec
cmp
push
lds
xchg
dec
add
rol
cmovns
outs
push
or
scas
cdq
jns
dec
je
das
xor
shr
retf
inc
jge
mov
xchg
dec
call
test
dec
cld
ror
call
fbld
sbb
xchg
cs
emms
std
xor
outs
dec
fisubr
repz
aam
pop
dec
pop
cs
mov
mov
pop
cmp
adc
stos
pop
fs
ss
fdiv
sti
adc
sbb
cli
jl
sub
cmps
stos
jl
popf
pop
cs
cmp
xor
pushf
sub
loope
aad
repz
arpl
shr
jno
fs
jns
jo
inc
retf
loopne
test
inc
mov
xor
mov
in
jo
shr
pop
jae
mov
neg
mov
rcr
sbb
pop
add
mov
or
dec
dec
lea
lock
xchg
repnz
ficomp
call
push
je
into
and
xchg
mov
int
sub
imul
and
push
adc
pop
cli
mov
ficom
test
sub
call
call
js
enter
rol
inc
mov
in
pop
xchg
jle
sbb
pop
out
xchg
retf
in
scas
mov
dec
xor
dec
pop
and
jae
adc
and
xor
sub
push
sbb
sbb
imul
dec
cdq
push
pop
mov
xchg
jne
add
inc
ficom
cmp
mov
(bad)
jge
sbb
sbb
ss
mov
and
(bad)
and
add
sbb
xchg
outs
inc
pop
into
cmp
pop
retf
ror
xor
(bad)
loopne
mov
dec
ss
adc
stos
inc
lds
and
cwde
rol
data16
add
sub
jmp
push
jl
sbb
sub
lock
stc
cmp
retf
or
or
xchg
and
add
inc
popa
mov
mov
push
adc
cwde
mov
ins
popf
out
aas
movs
pop
call
dec
mov
lahf
mov
sbb
dec
(bad)
(bad)
adc
push
cld
mov
jo
lods
aas
mov
(bad)
push
mov
or
jo
pushf
cmp
xchg
inc
je
rol
pop
mov
(bad)
push
cld
inc
cwde
inc
fmulp
mov
jmp
fisub
push
shl
outs
out
cwde
repnz
xchg
mov
mov
push
repz
mov
add
cwde
inc
dec
loope
mov
mov
shl
out
mov
fstp
addr16
and
sbb
dec
pop
les
pushf
inc
ror
adc
jge
(bad)
pop
std
rol
scas
rcl
data16
mov
sub
xchg
adc
add
mov
ret
mov
ficom
jmp
fcom
jmp
xchg
or
lods
retf
pop
ins
(bad)
stc
mov
mov
clc
or
add
inc
jae
sbb
xchg
mov
cwde
je
add
dec
jne
dec
ffree
mov
sbb
sub
cmp
test
inc
pop
inc
mov
pop
sbb
xchg
add
inc
cld
repnz
xor
cmp
and
push
jo
mov
inc
add
imul
pop
sub
adc
hlt
pop
leave
arpl
sub
fidiv
fstp
sbb
push
ds
hlt
add
rol
rcl
daa
cs
stos
sbb
xchg
pop
sahf
loopne
xchg
pop
mov
into
pop
cmp
fcomp
xchg
leave
dec
inc
call
xor
retf
xchg
xchg
dec
sub
stos
mov
and
dec
outs
xor
leave
xor
cli
pop
push
mov
adc
je
and
push
adc
adc
fcom
jmp
cmps
mov
ins
imul
sar
es
add
fcomp
jnp
stos
jnp
frstor
outs
outs
enter
mov
mov
sar
sub
xlat
mov
xor
inc
pushf
scas
(bad)
loopne
xchg
js
in
pop
mov
aam
pusha
adc
cli
sahf
ret
mov
mov
jp
push
popa
mov
add
inc
jp
leave
pop
and
mov
pop
loop
jb
xlat
xor
pop
jecxz
jmp
mov
fmul
sar
sub
jp
adc
popf
movs
std
add
push
pop
pop
or
loopne
mov
sbb
clc
mov
xchg
les
pop
daa
call
lahf
xor
mov
adc
pop
sub
ficom
mov
lods
mov
jg
mov
movs
out
out
sbb
push
dec
lahf
popf
xchg
hlt
adc
stos
push
aad
outs
cmp
adc
nop
pop
je
and
shl
xchg
jecxz
add
lds
add
ror
repnz
push
scas
popf
fwait
pushf
xchg
and
xchg
push
pop
xor
sub
nop
sti
jmp
push
cmp
and
mov
inc
jmp
cmp
cmp
dec
xor
lods
nop
cmps
fisubr
xor
add
mov
mov
dec
scas
sub
pop
push
and
into
mov
idiv
fcomp
sub
or
adc
les
xor
push
lahf
adc
pusha
mov
ss
add
call
ret
ret
loopne
iret
jno
xor
push
ds
fdiv
scas
adc
fwait
dec
jp
mov
and
aad
pop
cmp
cli
jnp
and
add
std
xchg
xchg
jae
adc
rcr
(bad)
fistp
sbb
das
mov
mov
test
lds
sbb
clc
fnstenv
adc
jnp
mov
test
adc
jb
cwde
jecxz
ins
pop
push
fild
(bad)
jbe
and
and
mov
js
in
js
aas
aaa
adc
mov
xchg
aaa
gs
mov
or
ret
stos
xor
jb
pusha
cmp
adc
sbb
pop
pop
cli
mov
cmp
sbb
int3
ret
inc
pop
out
fnstcw
pop
retf
adc
pop
(bad)
dec
and
jne
aas
add
pop
sub
cmp
sbb
mov
in
add
rcr
cmp
aad
cmp
jns
mov
inc
and
add
sbb
mov
rcr
mov
fs
cwde
and
outs
inc
fnsave
adc
push
sbb
scas
int3
and
mov
mov
adc
ins
inc
adc
jmp
jb
ror
bound
fs
mov
into
mov
ss
push
in
push
adc
inc
loopne
into
adc
(bad)
sub
mov
xchg
jmp
mov
sahf
sbb
or
dec
sbb
mov
(bad)
shr
jl
sbb
push
lahf
leave
cwde
inc
out
fdivrp
sub
mov
repnz
les
mov
retf
pop
push
rcr
ss
xor
push
call
cmc
mul
daa
sub
and
jg
test
std
push
jnp
imul
sub
(bad)
fwait
(bad)
push
mov
pop
fist
inc
(bad)
sahf
call
mov
cwde
outs
push
mov
pusha
ja
(bad)
sbb
mov
bound
out
outs
lock
fiadd
in
xor
out
lea
xchg
jle
sbb
rcr
pusha
push
sbb
xchg
mov
lahf
stos
ins
in
dec
ds
loopne
jo
inc
jmp
fcom
ret
push
cmp
je
hlt
pop
sbb
fwait
or
sub
pop
xlat
or
sub
push
sub
nop
inc
dec
pop
fsubr
jne
and
sub
into
test
rol
hlt
mov
loopne
ret
cwde
mov
sbb
retf
mov
dec
dec
xor
pop
or
jecxz
loope
adc
imul
xchg
push
out
fild
mov
dec
pop
cmp
push
mov
or
jbe
xchg
mov
es
sbb
xor
and
popa
addr16
xchg
cdq
adc
clc
ss
mov
push
push
add
and
cld
cmp
imul
mov
dec
pusha
push
xacquire
add
ror
outs
aaa
call
cmp
pushf
fstp
xor
xor
xor
pop
jns
mov
arpl
inc
dec
sbb
call
xchg
pop
mov
scas
jle
xchg
push
adc
mov
scas
lds
mov
add
mov
and
loopne
leave
push
out
cld
les
fmul
mov
imul
sub
inc
arpl
icebp
mov
mov
outs
xor
sub
rcr
rcl
xor
ret
sub
clc
sar
out
fwait
test
mov
jmp
aas
shr
xor
pop
(bad)
aas
stc
imul
jmp
ret
mov
cmp
fistp
js
sub
test
mov
xlat
fisttp
or
jg
les
fwait
ss
mov
mov
xchg
stos
sub
imul
xchg
mov
in
ret
xor
imul
imul
pushf
sub
jecxz
sbb
retf
mov
xchg
and
push
lock
(bad)
adc
out
xchg
sub
ret
call
mov
add
pop
jns
pop
inc
retf
pop
xor
mov
(bad)
and
pop
cli
push
sub
mov
add
mov
jae
popf
jmp
mov
out
mov
fiadd
ret
mov
add
sub
in
pop
jmp
cmp
adc
and
pusha
xor
shr
cli
xchg
and
mov
fild
jns
mov
aam
and
xchg
xchg
aas
lock
xchg
fcmovne
xchg
sbb
fadd
xchg
dec
adc
cdq
push
add
nop
sbb
movs
xor
test
out
jp
fsubr
adc
ds
out
xchg
shl
retf
retf
fisttp
mov
and
pop
test
xchg
push
jge
loopne
test
movs
cmp
dec
daa
pop
test
jg
(bad)
jle
mov
sbb
and
cmovl
stos
add
(bad)
stc
lods
push
inc
or
sub
repz
push
jl
mov
rcr
pop
add
outs
sub
call
xchg
shl
xchg
lods
adc
popa
mov
jmp
outs
enter
mov
imul
std
fistp
sbb
inc
or
repz
push
cmp
test
sbb
mov
cs
mov
fwait
jmp
jecxz
xchg
xchg
sbb
add
fisubr
ret
mov
xchg
enter
sbb
pop
lock
fisubr
add
stc
sub
mov
pop
jne
fmul
sahf
outs
call
ja
xchg
sahf
not
cmps
jle
or
jl
xor
test
sub
dec
mov
mov
jmp
mov
cmps
(bad)
iret
xchg
jecxz
addr16
sti
pop
sub
or
addr16
retf
push
xor
mov
add
sub
mov
fmul
sti
jmp
sbb
push
lods
repnz
aaa
call
or
mov
outs
stc
sbb
ret
aaa
adc
dec
fdivr
cdq
adc
sub
call
inc
int3
daa
sub
ror
ins
imul
cli
iret
movs
sbb
mov
ret
dec
cmp
dec
movs
and
mov
mov
popf
sub
or
int
sbb
in
shr
xchg
fcomip
cmp
popf
cmp
cld
pushf
jae
mov
rcl
cmp
pop
test
lock
xchg
rcr
push
add
xchg
iret
popf
push
mov
mov
aad
std
dec
arpl
mov
in
retf
xor
imul
(bad)
jnp
mov
xchg
hlt
push
cmp
jle
clc
xchg
stos
add
mov
repnz
das
xchg
jbe
dec
imul
jl
xchg
rcl
adc
movs
inc
mov
push
pop
pusha
xchg
pop
ret
xor
movs
retf
lea
mov
push
jno
jae
inc
mov
js
inc
iret
pop
jmp
div
mov
cmp
fisubr
mov
ss
mov
lods
push
imul
jmp
mov
(bad)
repnz
cmp
shr
sbb
pop
ins
xor
cmps
jbe
push
mov
pop
pop
sbb
stos
mov
push
jecxz
or
sub
push
sbb
mov
nop
loop
add
xchg
add
mov
movs
pusha
stos
push
lods
pop
(bad)
rol
mov
cld
dec
pop
sahf
dec
fwait
adc
inc
imul
fcomp
retf
fdiv
imul
fcom
pop
jle
int
fbld
pop
ds
inc
jae
pop
hlt
data16
ret
sahf
fimul
call
lods
push
mov
inc
sub
fucom
or
retf
out
pop
cld
push
adc
push
fwait
jnp
js
pushf
mov
aam
call
xchg
xor
mov
(bad)
hlt
push
mov
popf
mov
xor
jmp
xor
sbb
shl
inc
mov
outs
jmp
stc
test
in
adc
pop
ss
mov
pop
and
nop
das
shl
inc
pop
mov
fsubr
outs
xchg
fimul
sbb
std
inc
frstor
cmp
jae
pushf
pop
dec
pop
mov
iret
sbb
inc
and
mov
push
and
mov
scas
in
fidivr
pop
loop
leave
shl
int
jns
aas
mov
pop
add
mov
mov
int3
cmp
mov
push
test
cmp
pop
cmc
lahf
imul
cmp
cwde
dec
mov
xchg
jb
iret
shr
iret
sub
mov
inc
fcmovne
retf
pop
out
or
fwait
mov
push
inc
in
test
jg
out
out
push
add
addr16
push
adc
sbb
out
fsubr
loop
xchg
jbe
fidivr
and
jmp
inc
sbb
push
in
jmp
mov
int
mov
sbb
stos
fiadd
bound
arpl
push
in
in
pop
iretw
inc
in
ret
bound
mov
popa
mov
jecxz
sahf
cmp
and
ja
xchg
aaa
and
pop
or
sbb
ds
jbe
add
popf
add
and
push
push
xor
enter
dec
repnz
push
jno
add
xchg
xor
sub
cmp
retf
hlt
push
movs
dec
aad
mov
mov
push
fdiv
shl
xlat
mov
cmps
fsub
or
in
nop
cmp
pop
arpl
shr
(bad)
pusha
in
test
imul
sub
xor
pop
xchg
inc
sub
das
int3
pop
jno
sti
cmc
test
inc
xchg
push
(bad)
out
pop
out
stc
sbb
mov
xchg
jbe
das
xor
(bad)
adc
dec
pop
aaa
in
xchg
fisub
dec
div
inc
pop
les
lea
lods
push
mov
test
dec
stc
push
xor
cwde
cld
push
sub
jmp
mov
(bad)
or
push
push
xor
scas
ficom
cmps
scas
mov
sbb
lahf
sub
fwait
das
mov
pop
cmp
and
rcl
sbb
cmps
rcr
sub
ja
gs
enter
test
div
xor
pushw
jb
int3
(bad)
xchg
repz
outs
push
aaa
(bad)
push
jbe
lahf
pop
ja
ret
enter
push
mov
test
xor
cmp
add
scas
xlat
arpl
dec
sbb
ss
xchg
fild
ins
imul
pusha
ins
aad
push
pushf
mov
xor
jns
ror
cwde
adc
enter
sub
jae
sub
(bad)
jge
nop
cmc
jmp
sub
pop
fs
push
mov
popf
shl
inc
mov
int
dec
pop
push
push
push
mov
push
frstor
pushf
mov
cmp
aas
dec
ror
xor
es
stos
daa
sub
jp
push
mov
fsubr
sbb
adc
aam
retf
mov
dec
movs
mov
nop
mov
outs
pop
jbe
les
inc
push
std
(bad)
movs
out
test
jae
inc
pop
(bad)
(bad)
in
ds
sbb
js
sti
lahf
jb
fsubr
dec
pop
push
pop
mul
pop
fcom
sbb
pop
push
dec
xchg
icebp
addr16
xchg
add
pop
jmp
scas
sti
sub
add
xor
ds
jno
pop
sub
pop
sub
cmc
clc
pushf
retf
call
pop
dec
push
mov
stos
push
ss
cmp
aad
mov
call
xchg
push
pop
pop
sbb
or
(bad)
pusha
add
(bad)
neg
lahf
add
fdiv
repz
ror
fwait
push
sub
mov
sub
sti
xor
cmps
adc
in
and
xor
xchg
gs
aaa
and
xchg
adc
inc
bound
es
inc
inc
jg
push
aad
xor
cmp
pop
adc
jmp
or
sbb
push
sub
push
(bad)
jp
mov
loopne
(bad)
shr
xor
pop
fldenv
fisubr
pop
xor
inc
inc
push
cmp
mov
sub
jl
sbb
ret
sub
pushf
int
ror
adc
imul
adc
rcr
xor
mov
dec
push
aaa
stos
aam
push
in
test
fbstp
bound
sub
mov
adc
adc
inc
test
mov
xchg
stc
cmps
jbe
sbb
rol
adc
and
cmps
repz
or
das
sahf
jo
lock
and
in
retf
psubsb
inc
push
mov
shl
xchg
or
sub
loopne
(bad)
sub
cwde
jge
fdiv
pop
fist
in
je
xlat
clc
push
scas
jecxz
mov
mov
lahf
mov
fcom
cmp
imul
jg
pop
xor
adc
out
cmps
dec
cmp
hlt
pop
pop
xor
les
mov
xchg
xchg
mov
mov
out
or
cmp
mov
inc
or
call
movs
jb
int3
cdq
lds
lods
lahf
cli
cmp
(bad)
sub
int3
or
adc
mov
xlat
jmp
push
popa
ret
add
test
aam
xchg
mov
xchg
xchg
inc
jmp
inc
adc
bound
stos
fld
dec
cmp
mov
addr16
sub
into
mov
push
dec
xchg
cmps
or
enter
inc
xchg
lahf
imul
mov
test
dec
cwde
int3
icebp
pop
and
add
retf
enter
xor
dec
dec
push
mov
jno
fdivr
out
stos
inc
mov
jp
xchg
dec
dec
sbb
not
or
sbb
(bad)
xlat
adc
push
leave
inc
fidiv
xlat
jp
xor
jb
push
test
dec
test
mov
shl
fimul
test
icebp
in
fcom
mov
ret
sub
sbb
scas
cmps
std
retf
dec
mov
push
call
repz
call
xchg
and
cmp
push
mov
nop
nop
imul
fnsave
xor
clc
test
jne
repnz
popa
mov
dec
xchg
cmp
sbb
dec
movs
ror
xor
bndldx
clc
clc
mov
adc
and
push
push
arpl
sub
pop
lock
pop
shr
and
js
mov
xchg
xor
lahf
addr16
retf
(bad)
scas
jmp
jno
sub
leave
sti
(bad)
enter
push
mov
movs
cmps
mov
test
push
push
push
push
sbb
pop
(bad)
lock
in
fsubrp
and
sub
add
add
add
or
and
xor
fstp
rol
jmp
or
pop
sbb
push
pop
adc
mov
lods
aad
jae
retf
adc
sti
loope
in
lahf
cmps
mov
aad
in
push
mov
xchg
ins
jnp
xchg
dec
inc
pop
enter
push
pop
sub
fist
dec
push
jmp
cmp
xchg
fbstp
xchg
stos
retf
sub
in
mov
sub
dec
int3
jecxz
and
sub
mov
xchg
dec
sbb
mov
jl
jecxz
cmps
inc
fcom
cmp
(bad)
ret
call
lods
sahf
lahf
ins
retf
std
jmp
ds
stos
cmp
add
ror
in
cmp
int
jne
push
nop
pop
arpl
jnp
inc
mov
imul
pop
jecxz
inc
cmps
mov
int
and
js
xor
mov
dec
cdq
xor
mov
out
mov
in
jo
sbb
mov
sbb
or
jo
in
xor
jge
iret
dec
int3
stc
jbe
jp
stos
cmps
es
ds
ret
rcr
adc
jle
lahf
or
lock
repnz
xor
mov
or
pop
stc
ss
dec
pop
jmp
jge
xor
ss
sahf
push
push
adc
dec
lahf
mov
aad
cmp
ins
mov
sbb
cld
test
xor
push
jae
rol
sti
jl
push
ret
scas
std
cmc
fnstenv
xchg
cs
xchg
push
mov
loope
ins
scas
xor
fs
and
mov
popf
shl
call
test
jl
bound
shr
or
add
pop
dec
mov
mov
mov
or
mov
aam
xchg
xor
sbb
ins
pusha
pop
pop
cmp
push
pop
mov
fs
mov
inc
test
shl
ror
in
pop
jne
addr16
cwde
jmp
pop
sub
push
push
mov
xor
iret
mov
mov
outs
repnz
jle
scas
cmp
xchg
popf
push
repz
cdq
fwait
pop
or
pop
xchg
jmp
pop
fstp
push
pop
lahf
mov
mov
retf
sbb
mov
ds
(bad)
jp
jl
cmp
in
sahf
mov
and
bound
fcomp
ffreep
pop
mov
add
imul
(bad)
adc
fwait
mov
hlt
push
shl
js
mov
sbb
ret
xor
add
sub
push
dec
push
retf
add
adc
adc
addr16
les
in
fsub
mov
enter
stos
dec
and
sti
ins
mov
cdq
lods
cmp
pop
dec
mov
and
stos
sahf
mov
call
push
outs
push
pop
(bad)
rcl
cmp
sahf
fisub
inc
sub
les
fnstcw
arpl
mov
xchg
idiv
inc
pop
shl
dec
mov
cli
(bad)
or
inc
rcl
jnp
js
int
sub
cli
popa
jns
sbb
sbb
inc
jecxz
ficomp
(bad)
push
sub
(bad)
push
inc
cdq
fisttp
stos
fwait
mov
shr
mov
div
(bad)
gs
pop
fcmovnu
in
bound
mov
push
daa
jns
mov
mov
out
fnstcw
mov
les
or
call
dec
jmp
popf
push
xchg
cmp
cmp
(bad)
div
not
loopne
mov
retf
test
or
outs
mov
in
push
out
test
pop
(bad)
fisttp
push
addr16
push
inc
xchg
sub
mov
fmul
xor
jb
dec
(bad)
sub
dec
arpl
sub
ret
es
fist
dec
fisttp
out
mov
mov
mov
scas
outs
stc
bswap
and
loop
mov
jnp
sbb
push
lods
sbb
xchg
fprem1
mov
pop
cdq
and
or
jmp
push
pop
xchg
ret
push
js
push
add
pop
gs
sbb
sbb
rcl
pop
fld
sbb
inc
sub
out
pushf
test
push
jbe
movs
cmp
call
or
xor
fidiv
sbb
or
and
adc
cmp
adc
call
setle
mov
push
sbb
pop
fidiv
mov
fmul
mov
xor
gs
sub
gs
pop
call
cld
popa
icebp
dec
test
(bad)
sbb
test
mov
ror
ins
sub
jp
jl
ret
push
imul
inc
pop
sub
mov
dec
jns
add
mov
lock
mov
cmp
icebp
mov
movs
adc
retf
fcmovbe
jecxz
cmp
pop
jle
sar
aaa
cmp
jge
fsub
dec
stos
inc
iret
jge
call
xchg
or
xor
adc
popa
fmul
scas
xchg
dec
dec
fld
ret
xchg
mov
sub
push
jo
adc
adc
fimul
or
lods
(bad)
mov
mov
sub
push
lods
push
inc
pushf
(bad)
fidiv
dec
setae
mov
add
and
aad
push
xor
hlt
inc
and
rol
(bad)
ds
imul
xor
fucomi
jmp
enter
push
mov
xchg
imul
push
xchg
inc
and
int
in
inc
xchg
ins
movs
(bad)
and
pop
mov
outs
mov
inc
or
and
clc
pop
test
mov
call
xchg
imul
loope
xchg
clc
push
test
loope
out
and
adc
in
pop
test
xor
jecxz
addr16
in
mov
scas
push
mov
mov
lahf
cmp
cmp
adc
inc
xor
push
xor
cs
scas
retf
frstor
add
mov
cli
sub
add
add
ins
mov
in
push
in
bound
mov
or
fdiv
xor
lds
in
call
call
cmc
jg
push
inc
stos
pop
rcl
in
ja
cmp
mov
sbb
(bad)
jl
idiv
mov
fcmovnbe
cmp
aam
cmps
jmp
sub
pop
aas
sbb
xchg
shl
test
add
fld
xor
mov
icebp
xor
xor
pop
jmp
sahf
fimul
into
add
mov
daa
iret
dec
push
push
in
push
call
loopne
adc
les
cdq
lods
pusha
dec
adc
push
jl
cld
mov
lods
int3
into
imul
scas
ins
call
and
test
je
shr
lahf
xor
or
popf
pop
jecxz
(bad)
cwde
in
ja
jmp
sub
adc
sbb
mov
stos
jo
xchg
cli
addr16
out
pushf
adc
sbb
jge
stc
xor
and
sub
add
or
adc
push
xor
push
sahf
sahf
jge
shl
test
push
mov
cmps
pusha
add
std
fcmovbe
sbb
push
xchg
jp
js
mov
cmp
call
hlt
clc
in
scas
jnp
sub
popf
jge
test
std
add
mov
mov
fistp
cmp
push
repnz
mov
gs
add
call
frstor
into
ins
cs
inc
aas
fsubr
or
imul
adc
pusha
ins
pop
test
cmp
jbe
or
xchg
dec
and
mov
mov
inc
jnp
adc
inc
(bad)
fwait
xchg
(bad)
je
inc
push
stos
mov
xor
add
pop
inc
mov
or
sub
arpl
inc
fwait
imul
out
push
mov
jle
pop
retf
push
jbe
enter
imul
or
(bad)
xor
or
jmp
retf
test
jl
xchg
sub
xchg
add
mov
inc
and
mov
ins
scas
adc
cmp
jg
call
fldcw
lock
out
adc
(bad)
xchg
cmp
jmp
fdivr
fist
cmps
xlat
outs
lds
dec
outs
adc
stos
sub
mov
lods
(bad)
leave
rcr
jmp
jge
fnstsw
lsl
sar
mov
jne
into
int3
fs
pop
push
xchg
pusha
fdivr
xchg
out
adc
and
push
add
out
call
sub
inc
xchg
sbb
pushf
neg
repz
dec
cmps
xchg
cmps
aas
movs
mov
or
inc
mov
inc
imul
xchg
pushf
popf
rcl
cmps
aad
(bad)
scas
mul
cmp
mov
iret
sub
lock
pop
sub
sub
xchg
(bad)
sbb
push
aad
jae
cmp
jle
adc
mov
nop
pop
enter
test
sub
mov
test
ret
data16
push
imul
mov
out
(bad)
cmp
nop
pop
push
cdq
jecxz
addr16
aam
test
inc
adc
pushf
adc
test
outs
retf
test
imul
inc
jns
mov
popa
in
pop
xor
pop
or
add
scas
rol
cs
nop
ins
or
(bad)
mov
mov
es
movnti
mov
mov
sbb
inc
sbb
arpl
and
bound
sub
pushf
xchg
imul
repnz
mov
dec
mov
cwde
adc
push
push
pop
adc
test
add
xor
sbb
xchg
mov
data16
jmp
repz
xor
pop
cdq
pop
and
(bad)
fwait
out
aaa
fcom
out
mov
add
pop
push
nop
fsubr
inc
mov
fidiv
call
ja
push
scas
and
out
(bad)
mov
dec
mov
push
sbb
mov
fcom
cld
mov
in
sbb
xor
call
add
mov
in
(bad)
(bad)
add
push
mov
cmps
xchg
and
ins
pushf
pusha
xor
mov
push
imul
pop
adc
lods
inc
fisubr
pop
inc
pop
loopne
xor
mov
adc
data16
and
push
aaa
push
ins
sub
or
adc
xor
adc
inc
pushf
hlt
ror
xor
mov
hlt
aaa
pop
lods
xor
inc
iret
mov
push
out
mov
dec
push
mov
mov
cs
retf
mov
adc
mov
pop
hlt
sbb
xchg
popf
push
mov
dec
arpl
push
cmp
push
mov
and
rcl
pop
mov
mov
rcl
mov
inc
or
sbb
cmc
sbb
popa
(bad)
mov
sub
ss
mov
push
aad
pop
(bad)
aas
dec
add
push
out
out
push
pushf
or
lea
sub
xchg
mov
push
dec
mov
es
sbb
adc
fbld
adc
scas
les
jno
(bad)
jle
jmp
mov
movs
in
pop
xor
mov
movs
sub
jbe
out
in
mov
popf
xchg
xchg
push
imul
add
loop
or
fwait
adc
inc
pop
adc
dec
pop
cwde
icebp
jmp
lahf
outs
mov
sbb
cmp
shl
lahf
std
sahf
imul
ror
out
or
dec
mov
mov
retf
adc
inc
cwde
enter
inc
or
push
add
dec
div
outs
fmul
std
push
outs
jmp
unpcklps
div
sti
(bad)
int
or
and
or
aam
ret
mov
dec
jnp
cmp
outs
push
or
xchg
mov
sbb
mov
pop
cld
jecxz
xor
and
adc
cmp
cmp
cwde
mov
push
sub
ins
ror
or
fninit
test
out
jle
mul
and
jbe
or
jmp
enter
cmp
jp
jb
pop
movs
(bad)
adc
mul
jb
add
mov
adc
loop
inc
sub
mov
call
xchg
and
mov
lods
aas
adc
ret
pushf
outs
push
cmps
mov
rcl
icebp
and
dec
jmp
int3
inc
retf
je
(bad)
push
arpl
into
aaa
leave
scas
xor
mov
jnp
sbb
loopne
jl
movs
sub
outs
jno
pop
mov
ins
xlat
dec
daa
imul
pop
lock
stos
push
fadd
adc
push
pusha
sbb
sbb
sti
mov
mov
mov
sbb
jnp
repnz
es
js
mov
mov
mov
and
ss
repz
daa
mov
pop
pop
lods
sbb
lods
cwde
mov
fld
inc
imul
and
cld
clc
mov
fistp
mov
in
jnp
push
je
cs
add
scas
rol
push
mov
scas
rol
(bad)
adc
test
mov
sahf
das
sbb
and
xchg
add
call
cmp
xchg
push
sub
(bad)
mov
fwait
or
sti
jmp
or
scas
call
dec
mov
call
sub
xor
int3
sub
mov
mov
test
popf
scas
xchg
and
mov
cmc
mov
je
xor
cwde
popf
xchg
jbe
outs
or
aaa
movs
(bad)
push
aam
push
sub
not
jge
in
adc
pushf
nop
cdq
mov
jge
dec
and
inc
adc
mov
lock
xor
loopne
push
xor
xlat
fwait
add
popf
xor
test
xchg
adc
add
in
retf
push
daa
mov
movs
push
pop
xor
dec
repz
cmp
sbb
push
retf
icebp
das
jbe
xor
mov
and
enter
(bad)
frstor
jmp
jl
shl
and
lds
inc
sub
rol
push
rcl
adc
ret
out
arpl
adc
mov
fistp
sti
pop
aam
pop
sbb
pop
fmul
test
fadd
push
push
mov
fwait
lahf
jp
xchg
test
rcr
cmp
div
xor
sub
lock
xchg
push
test
sbb
out
test
fstp
dec
pop
and
cld
mov
(bad)
fwait
aam
loope
ret
push
jmp
aaa
jne
xchg
loop
xor
dec
std
xor
outs
or
xchg
fistp
fmul
mov
retf
mov
stos
inc
(bad)
mov
mov
jge
lea
in
push
mov
lock
sbb
sbb
ins
xchg
mov
cwde
cwde
xor
je
mov
aam
push
outs
outs
cmc
call
jbe
enter
(bad)
icebp
outs
dec
les
adc
jg
pop
adc
les
iret
pop
loope
inc
inc
or
mov
in
add
pushf
div
xchg
jb
dec
mov
jmp
inc
outs
xchg
xor
mov
dec
rcl
int
inc
clc
fnstsw
popf
jbe
test
and
aad
imul
push
jmp
cmp
loope
fdiv
push
add
inc
xchg
leave
or
mov
adc
sbb
xor
in
movs
or
fcom
mov
in
test
mov
sbb
test
push
icebp
mov
add
outs
dec
int3
cmps
or
sub
push
mov
xchg
jne
jnp
nop
out
das
cmps
cmp
cmp
and
in
stos
sbb
in
jl
add
fist
mov
xor
or
jne
mov
daa
push
mov
mov
enter
cld
out
cs
xor
jno
jns
pop
mov
fcomp
mov
cwde
icebp
test
inc
xchg
lods
cld
xchg
cmps
mov
jge
pop
adc
mov
jns
adc
mov
mov
or
sub
daa
mov
and
pop
xchg
jl
xchg
cmps
ffreep
pop
mov
mov
and
sub
fistp
cmp
add
xor
dec
fild
cmps
hlt
rcr
mov
mov
fst
add
movs
sbb
retf
iret
pop
xor
test
xlat
fdivr
test
call
cmp
pop
sub
(bad)
fs
mov
pop
adc
lods
movs
jmp
into
repz
data16
mov
sbb
cmp
aas
out
fdiv
hlt
daa
sahf
xchg
or
sub
mov
mov
aas
jl
mov
iret
and
hlt
ins
daa
enter
scas
adc
adc
mov
sbb
pushf
push
sar
push
fcmovnb
jb
lods
retf
push
pop
int3
in
sti
jg
sub
pop
jmp
push
sub
mov
mov
cmp
adc
cmp
test
mov
call
mov
sub
cmp
inc
sub
in
push
sti
arpl
jns
push
sub
add
stc
das
ret
and
inc
or
xchg
add
inc
fistp
push
push
add
inc
fild
loop
out
rol
pop
arpl
cmps
jg
or
dec
sbb
or
and
icebp
and
inc
sub
jmp
cs
das
mov
popf
jne
jmp
sub
mov
jle
mov
or
test
stos
int3
adc
xchg
jp
mov
fwait
pop
out
sub
mov
aam
stos
fst
ja
lods
xor
mov
popf
and
mov
mov
ret
ja
jmp
add
cmp
xchg
repnz
iret
push
cli
jb
and
push
ret
ret
mov
(bad)
adc
das
daa
pop
lock
mov
add
pop
adc
retf
cmp
and
adc
pushf
xchg
out
and
or
jbe
sub
packssdw
cs
(bad)
loopne
mov
xor
in
jne
push
retf
pop
shl
sub
and
das
fld
and
add
cmc
adc
in
sub
xchg
mov
(bad)
ja
aaa
dec
adc
dec
jmp
repz
mov
and
dec
cmp
cmp
or
adc
loop
cwde
repz
mov
jl
jle
aas
mov
pop
sub
jmp
push
sbb
jmp
jb
push
rcr
data16
sbb
push
push
cmps
add
inc
fistp
sub
push
xchg
xor
and
movs
popa
ficomp
sbb
cs
jo
fs
into
lea
cli
data16
hlt
aam
adc
into
dec
cld
sub
das
pop
es
jmp
std
ins
cmp
out
cmp
jno
cmp
ret
lahf
adc
mov
cmps
fnsave
dec
xor
add
cdq
movs
js
push
sbb
iret
fsub
leave
scas
test
lods
inc
inc
jmp
mov
push
std
(bad)
out
inc
iret
dec
cs
lds
sub
fisub
stos
daa
data16
or
mov
and
imul
sbb
out
xchg
mov
js
inc
in
dec
push
xor
push
or
push
inc
inc
retf
(bad)
lahf
popf
lahf
adc
addr16
not
out
out
sar
ds
push
enter
and
int3
cmp
dec
out
dec
outs
iret
in
inc
dec
movs
inc
inc
cmc
ss
mov
bound
in
pop
dec
hlt
sub
jge
(bad)
cmp
addr16
fisub
popa
xor
adc
fbld
jg
ins
pop
lods
iret
movs
push
popf
nop
mov
xchg
data16
fdivr
aaa
mov
imul
xor
js
add
mov
mov
xchg
mov
sub
(bad)
cld
loop
push
pop
add
dec
xchg
les
pop
pop
jo
std
mov
lahf
imul
pop
cmc
js
out
dec
xor
aam
lahf
push
popf
gs
sbb
sub
ret
lock
arpl
cld
out
push
cmps
adc
cmp
cmp
fisubr
pop
cmp
js
sbb
enter
push
(bad)
push
test
mov
xchg
out
fwait
not
pop
ins
cmp
push
cs
(bad)
mov
sbb
cmps
ds
test
jp
(bad)
fldenv
outs
mov
jns
scas
sub
push
cmp
lds
popf
loop
push
ja
clc
xchg
adc
xchg
imul
mov
test
sbb
jbe
xor
adc
dec
xchg
fdiv
jnp
or
xchg
inc
cmp
mov
jl
jb
push
mov
jb
mov
arpl
fwait
jo
dec
jb
pause
sub
mov
enter
or
gs
(bad)
fcomip
pop
adc
jmp
sub
repnz
pop
pop
cmp
out
push
cmp
lods
and
in
mov
in
push
mov
xchg
(bad)
clc
cdq
or
xchg
retf
pop
outs
inc
fsub
sbb
add
les
or
inc
and
jle
pop
mov
mov
push
cwde
adc
mov
cmp
pop
mov
imul
pop
out
(bad)
js
adc
and
and
sbb
stos
sahf
int
cmp
inc
cmp
mov
jge
stos
mov
fild
ret
mov
das
push
out
xor
gs
or
outs
add
clc
ins
dec
stc
sahf
and
shr
sub
mov
retf
(bad)
pcmpeqw
add
or
shr
lds
pop
push
jl
ret
popf
(bad)
jmp
int
fcomp
ds
inc
jmp
and
cmp
pop
mov
add
sub
adc
jle
and
pushf
sahf
lea
pusha
xchg
push
sbb
or
jmp
xchg
add
inc
push
cmp
cmp
mov
inc
jg
pop
xor
mov
aas
mov
mov
lods
sub
dec
push
xlat
pusha
in
mov
push
lea
cdq
dec
cmp
dec
imul
sub
add
in
mov
push
sbb
cld
ja
push
sti
adc
cmp
das
push
call
cs
shl
imul
pop
xor
cmp
fbstp
mov
movs
cmc
dec
(bad)
popa
fist
movs
int
ficom
sub
pop
mov
das
push
sub
popf
or
add
cdq
adc
mov
xchg
jmp
popf
sub
mov
shr
(bad)
jle
mov
ret
add
push
adc
pushf
(bad)
or
mov
call
inc
adc
leave
or
outs
mov
test
fnsave
adc
mov
xchg
push
leave
in
cmc
sti
pop
xchg
pop
cld
pop
and
adc
jge
ss
enter
daa
mov
push
xchg
dec
pop
jb
sub
jbe
pop
pop
inc
xlat
cmps
mov
or
push
push
mov
stos
scas
jle
sbb
addr16
gs
lock
mov
sbb
dec
sbb
in
dec
loopne
lds
jmp
xchg
inc
not
fcmove
(bad)
js
lods
or
(bad)
je
cmp
push
ror
cmp
dec
adc
xor
lahf
cmp
mov
pop
ror
cmp
pop
adc
movs
icebp
jb
xor
mov
aas
ins
stos
mov
jge
out
popa
dec
pop
and
mov
lock
jl
push
or
mov
sti
jae
add
aad
bound
sar
ss
sbb
outs
jb
mov
in
add
sub
ret
(bad)
lods
jno
nop
test
pop
adc
sub
cmps
mov
push
daa
test
adc
pop
pop
pop
js
jb
imul
add
hlt
imul
fnsave
jo
pop
lea
call
mov
(bad)
fldenv
lock
imul
jmp
out
dec
cmp
cmps
jnp
sar
and
je
sbb
sbb
mov
mov
retf
test
push
loop
cmp
push
mov
jecxz
imul
rcr
lahf
lds
or
jbe
div
loopne
aas
scas
mov
sbb
out
gs
fbld
adc
stos
and
cmc
enter
cmp
sar
adc
fsub
test
ficomp
pop
push
cmp
xchg
inc
imul
mov
mov
inc
xchg
data16
fwait
and
retf
in
pushf
adc
test
push
call
sub
mov
sub
stos
push
add
ror
dec
les
arpl
shl
or
int3
ja
sub
shl
jne
push
adc
cli
in
sbb
pop
popa
(bad)
cmps
aam
add
add
ins
mov
sbb
jl
xor
sbb
xor
sub
adc
push
push
scas
js
cli
fldcw
test
push
add
sub
inc
lock
mov
push
cld
stc
outs
enter
jae
stc
xor
mov
sahf
jmp
leave
repz
sub
push
jns
mov
mov
sub
adc
mov
shl
inc
mov
jnp
jecxz
pop
dec
outs
jne
pop
test
pop
sub
in
scas
out
aas
xchg
xchg
mov
arpl
test
adc
scas
mov
sub
fistp
sbb
pop
mov
call
cmp
jl
sub
scas
std
push
xchg
and
les
hlt
jg
aam
mov
in
pop
ror
ret
adc
cmp
scas
inc
xchg
jecxz
xor
stos
xchg
test
push
addr16
push
shl
cmps
cwde
les
mov
into
cmp
or
xchg
(bad)
xchg
push
inc
or
into
repnz
movs
push
sub
stc
cwde
xor
push
sub
mov
add
add
(bad)
xchg
inc
scas
and
(bad)
in
jnp
in
scas
push
mov
cli
sbb
ins
xchg
add
retf
hlt
or
xor
stos
pop
add
mov
push
jle
daa
add
(bad)
out
xchg
fadd
sbb
xor
mov
and
scas
inc
ror
sti
(bad)
frstor
inc
cmp
scas
push
in
inc
mov
dec
or
mov
sbb
add
jo
xor
js
nop
xchg
adc
dec
jl
and
call
cmp
adc
neg
fs
scas
je
mov
push
gs
jns
(bad)
les
sar
sbb
in
xor
aas
mov
popa
retf
stos
sbb
adc
das
mov
mov
and
fcomp
iret
pop
repnz
xchg
outs
in
pushf
pop
sbb
cmp
in
ja
(bad)
mov
fwait
xor
xchg
cs
push
xchg
mov
int3
sub
fsub
jl
dec
das
cli
fdiv
fcmovnu
popf
add
push
ss
dec
cmp
into
mov
scas
jg
dec
cld
pop
aas
lods
retf
xor
test
cmp
imul
inc
scas
fcom
arpl
into
dec
ins
test
xor
ja
ss
push
pop
inc
adc
retf
paddsb
sub
idiv
ficom
mov
mov
sub
sub
jo
pop
adc
jp
and
cmp
or
in
(bad)
icebp
pop
ins
inc
pop
stos
or
adc
pop
xchg
mov
add
xor
xchg
retf
sub
sub
jle
sub
int
shl
outs
xchg
scas
bound
(bad)
out
xor
(bad)
sbb
adc
jmp
in
sbb
je
sub
sub
pop
adc
rol
addr16
pop
aas
jbe
xchg
fisttp
jl
fsubr
inc
pop
adc
xchg
call
push
sahf
mov
xchg
popf
mov
test
iret
mov
mov
push
test
pushf
shl
aad
jbe
mov
hlt
push
mov
out
pushf
sahf
scas
add
push
lea
or
in
sbb
ret
inc
fdiv
aas
outs
jge
mov
push
movs
xchg
adc
aas
es
mov
mov
sub
cdq
repnz
pop
dec
gs
dec
stos
in
stos
test
or
jg
clc
arpl
int
aam
(bad)
or
xchg
loop
in
test
data16
sbb
xor
sbb
push
fmul
hlt
dec
xchg
inc
jb
jb
popf
ret
or
pop
jae
xchg
sbb
lods
jmp
sub
pop
inc
nop
sbb
int3
lahf
sub
mov
and
push
inc
cld
popf
fisttp
iret
test
retf
lods
test
adc
gs
dec
push
pop
scas
arpl
test
test
xchg
xchg
in
bound
movs
and
fistp
retf
loope
sbb
mov
push
and
sub
adc
push
cmp
enter
mov
pusha
and
aad
bound
int3
in
aaa
xchg
push
add
jmp
outs
fs
sub
adc
inc
ficom
repnz
adc
pushf
retf
cmc
jbe
fadd
dec
adc
dec
lahf
jmp
call
push
ds
pop
cmp
inc
sub
mov
in
mov
push
mov
clc
pop
push
(bad)
out
in
push
mov
out
and
das
xchg
push
push
jno
popa
ss
lock
inc
pop
ja
pushf
add
mov
test
mov
push
pop
sub
(bad)
out
repz
cmp
pop
stos
mov
call
sub
mov
call
sbb
mov
aad
(bad)
mov
xor
pusha
jo
fild
jnp
adc
dec
jp
xor
pop
or
ret
in
pusha
out
adc
sub
imul
pop
sbb
cld
xchg
dec
or
jp
mov
xor
xchg
inc
add
test
out
sub
push
pop
mov
ret
sbb
test
inc
sub
push
inc
stos
rol
retf
std
mov
jo
(bad)
cmp
and
lods
pop
out
shl
imul
xchg
callw
int3
call
push
test
pmaxsw
push
(bad)
lock
xchg
add
mov
fcomp
mov
push
sahf
xchg
cwde
int
stos
jmp
int3
int3
pop
mov
add
cmp
fsub
nop
pop
xor
dec
fstp
in
imul
enter
sub
test
into
loop
leave
jl
ds
xchg
or
jmp
push
or
hlt
int
dec
bnd
fiadd
xchg
(bad)
mov
aam
div
(bad)
jl
add
mov
jno
cmp
in
ret
aad
popf
jmp
ret
retf
dec
and
mov
inc
sub
pop
call
repz
xchg
in
cdq
popf
outs
sti
xor
imul
jl
mov
push
mov
jae
dec
cld
(bad)
cmp
cmp
add
aam
mov
scas
cs
int
clc
loope
enter
clc
mov
push
mov
dec
bound
cdq
lods
imul
push
adc
inc
pop
dec
inc
mov
jl
imul
mov
ret
add
call
pop
arpl
jl
pop
stos
mov
cmps
push
inc
and
mov
mov
sub
xchg
push
lods
jbe
icebp
push
cmps
repnz
mov
movs
push
(bad)
cmp
sahf
mov
mov
sub
push
and
in
repnz
xchg
sbb
adc
xchg
stos
ret
scas
nop
fucomp
or
das
inc
rol
jmp
xor
add
dec
jle
sbb
push
mov
and
and
inc
jno
mov
popf
mov
imul
mov
cmp
xchg
or
cmp
jmp
jnp
dec
pop
jae
push
mov
fiadd
xor
add
adc
add
enter
js
pop
dec
shl
adc
ret
repz
push
inc
pushf
retf
jns
sub
stc
jmp
das
in
daa
pop
(bad)
retf
sbb
cld
dec
fdivp
jmp
mov
fisubr
and
in
shl
in
scas
cmps
(bad)
inc
clc
mov
sti
add
mov
and
and
movs
lock
sub
adc
fldcw
push
into
push
xchg
popf
(bad)
pop
lahf
js
popa
mov
outs
xor
sub
push
dec
pop
test
(bad)
out
call
pop
ins
or
xchg
inc
pushf
push
inc
inc
jg
fs
fsubr
das
movs
xor
retf
jmp
mov
mov
mov
cmp
scas
into
repnz
jge
sub
retf
std
jmp
rcr
xor
xchg
sbb
jg
push
mov
jno
inc
mov
data16
mov
cwde
arpl
pop
or
xchg
xchg
cdq
movs
pop
gs
jle
jmp
fstp
cmp
mov
sbb
fs
sbb
mov
or
(bad)
jecxz
or
movsx
push
add
adc
jns
xlat
jns
enter
push
int3
jl
sbb
jb
mov
(bad)
push
clc
jo
mov
pop
fs
sub
mov
xor
pop
je
xor
cmp
fcomp
repnz
dec
mov
mov
jmp
jge
fcomp
ins
add
pushf
int
jbe
js
out
rcr
ret
jae
and
inc
lahf
mov
inc
dec
xchg
pop
pop
jno
pop
push
dec
push
cmp
sbb
cmp
adc
push
push
popa
fld
adc
jae
fnstsw
movs
fsubr
test
dec
ins
dec
cmp
lahf
bound
pop
icebp
cmp
push
int3
pop
push
jo
lods
or
in
(bad)
lock
js
sbb
pop
loopne
jp
fsub
mov
(bad)
lods
sub
call
push
sbb
mov
jle
ror
scas
lock
lods
es
loop
mov
mov
pop
pusha
mov
jp
jns
cmp
int3
adc
mov
repz
pop
lds
mov
mov
cmps
je
jo
outs
fisub
inc
mov
dec
setno
retf
movs
cmp
sahf
sub
cwde
dec
iret
(bad)
(bad)
in
pop
aas
jae
inc
push
jo
sbb
add
std
fistp
fnstcw
mov
retf
or
pop
(bad)
outs
mov
cmp
jmp
mov
xor
or
adc
and
jmp
pushf
xor
sahf
loopne
fscale
aam
rcl
inc
and
sub
pop
scas
pop
fsubr
or
push
mul
fbld
fdiv
sbb
push
adc
imul
rcr
xchg
cmp
add
adc
ja
aad
sbb
sub
pop
xor
(bad)
aam
pop
fcom
jns
inc
lock
rcl
(bad)
xor
push
inc
sub
push
test
inc
paddb
push
adc
xchg
mov
out
sbb
shr
push
push
mov
call
push
js
pop
aam
push
xor
fidiv
test
jecxz
xchg
out
imul
retf
mov
sub
stos
push
lahf
sbb
ficom
rol
icebp
xlat
cmp
add
lahf
cmp
repnz
sub
daa
popa
fwait
dec
dec
xchg
jge
mov
cmp
mov
mov
push
sbb
xchg
iret
and
or
xor
cld
adc
iret
cmps
in
pusha
hlt
xor
inc
xchg
rcr
retf
(bad)
xor
pop
and
inc
cld
loop
xchg
mov
int
jmp
sub
enter
out
lahf
mov
call
test
push
clc
jbe
mov
imul
in
jp
in
cld
push
fnstsw
dec
lock
gs
xor
adc
sbb
sahf
mov
addr16
jo
mov
mov
mov
lock
inc
mov
or
push
arpl
sbb
xor
pop
push
or
mov
adc
iret
inc
adc
ja
das
xor
dec
mov
pop
pop
test
leave
xchg
lods
stc
frstor
ss
outs
dec
sub
nop
sbb
aas
mov
push
std
fdivr
sub
jg
es
adc
fistp
push
sbb
(bad)
fidiv
pop
jg
xchg
pop
sub
sahf
jg
xchg
xchg
push
or
ins
shr
add
adc
mov
mov
ja
mov
mov
cli
or
mov
jno
adc
jmp
sahf
pop
dec
mov
sub
mov
icebp
jbe
(bad)
out
shl
xchg
sti
and
out
loop
cwde
movs
push
pop
popf
or
out
aas
rol
push
jno
loopne
ds
pop
adc
mov
jge
in
mov
adc
outs
pop
xchg
sub
aam
mov
mov
pop
and
cmp
outs
push
aaa
xchg
push
shl
push
push
fcom
scas
mov
hlt
dec
fcomp
push
xlat
sub
ins
in
int3
inc
sti
sbb
jecxz
push
jmp
sbb
cld
int
(bad)
jns
ins
mov
push
and
mov
mov
sub
into
ret
sub
imul
getsec
pop
sub
inc
aaa
inc
push
in
out
in
lods
sub
test
pushf
mov
cmp
mov
ins
push
mov
movs
push
and
push
sub
int3
push
aam
fimul
mov
sti
stc
push
pop
mov
cmps
shl
push
pop
mov
pop
adc
rcl
loop
jb
mov
fbld
pusha
push
scas
adc
xchg
push
out
ret
int
push
adc
in
mov
test
rcr
sub
jb
push
pop
shr
mov
rcr
pop
ins
aam
bound
jmp
lods
loop
cmp
adc
(bad)
shl
sbb
cmp
ficomp
sbb
out
dec
adc
into
pop
ins
aad
shl
xlat
movs
xor
dec
dec
(bad)
jbe
int
popf
popa
push
ins
(bad)
retf
scas
inc
or
cmp
frstpm(287
and
adc
lods
cld
xchg
cmc
dec
iret
push
in
pop
adc
pushf
or
xchg
ins
rcr
and
in
lods
pusha
(bad)
sbb
push
or
jns
pop
sar
aaa
mov
push
outs
fild
pop
cmp
lods
test
scas
gs
xor
ret
mov
in
jnp
je
out
jnp
adc
gs
and
dec
inc
adc
in
loopne
sub
cmp
rcr
xlat
jl
cdq
out
in
retf
sbb
and
jge
sbb
out
inc
pop
jmp
daa
cld
push
data16
push
pushf
cmp
int3
xchg
push
jnp
xchg
sbb
pop
sbb
imul
mov
push
dec
mov
shl
out
stos
jae
int3
(bad)
sbb
inc
or
xor
jb
pop
fist
sbb
sub
(bad)
scas
push
ins
dec
jle
inc
scas
repz
loope
or
sub
fisttp
pusha
in
shl
xchg
or
add
push
paddw
pop
stos
jmp
cld
sub
popf
mov
(bad)
add
xchg
cmp
cmc
pop
js
aaa
sar
mov
mov
inc
sahf
(bad)
mov
ins
fwait
pusha
pop
xor
cmp
dec
movs
lahf
mov
mov
shl
movs
or
(bad)
lock
repnz
sub
hlt
retf
rol
stos
jns
xor
movs
dec
sbb
and
mov
in
sbb
pop
popa
stos
sbb
lods
push
stos
movs
jmp
ja
hlt
push
(bad)
arpl
(bad)
and
push
push
pop
mov
inc
xchg
lock
cmc
fcom
cmps
jge
sub
out
int3
jbe
sar
movs
stos
sbb
ror
or
(bad)
jmp
push
fsubr
in
pop
repz
jnp
xchg
xor
and
cmp
or
dec
mov
dec
mov
fbstp
mov
ror
sbb
cs
cld
fwait
sar
sub
xor
dec
je
daa
repnz
cmp
int
push
mov
rol
dec
aam
dec
push
sbb
cmp
stos
lea
jbe
mov
push
and
(bad)
ja
adc
cmp
test
dec
adc
adc
repz
gs
jl
pop
(bad)
shl
sub
ja
push
cmc
adc
sbb
nop
jns
push
retf
cmps
das
xor
shl
retf
(bad)
repz
call
fnsave
dec
fs
cmc
and
scas
fdivr
outs
sti
lods
mov
sbb
mov
cld
push
xor
cld
int3
fwait
out
sbb
sbb
xchg
jle
sub
xlat
in
push
push
add
xchg
cld
je
mov
aam
popa
mov
xor
jb
jo
cmps
movs
call
stos
mov
(bad)
sbb
adc
fadd
mov
xchg
(bad)
adc
and
cld
xchg
adc
cmp
pop
mov
add
cmp
sahf
mov
call
movs
jp
xchg
lods
pop
sbb
push
loop
jp
lahf
popa
mov
add
nop
pop
cwde
ret
mov
jp
shl
xor
mov
dec
adc
test
inc
loopne
cli
sbb
outs
cmp
fild
adc
cli
adc
adc
mov
mov
mov
dec
cmp
jle
scas
jnp
push
fcomp
adc
push
add
cmp
repz
retf
(bad)
clc
fmul
fidiv
outs
mov
adc
adc
lods
pop
outs
add
and
aas
jp
push
or
call
repz
nop
retf
push
jnp
mov
push
jo
sbb
fdivr
sahf
pop
rcr
aaa
or
sub
mov
adc
shl
lea
fucomi
pop
mov
sar
adc
movs
outs
inc
xor
mov
dec
xor
pop
popf
test
(bad)
retf
push
sub
sub
cmp
sbb
aam
cmp
ror
mov
and
mov
mov
jle
xor
mov
mov
sbb
inc
sbb
xor
call
imul
mov
pop
outs
or
adc
sti
or
rcr
xor
bound
inc
inc
xor
leave
mov
ret
lds
inc
lock
cwde
jle
jo
pop
xchg
sbb
push
xchg
aaa
mov
mov
cmp
jno
cmps
inc
mov
imul
out
lods
ja
aas
push
mov
fwait
pusha
cmps
imul
scas
sbb
add
sbb
out
push
push
pop
popa
sbb
and
popf
test
test
not
out
mov
sar
test
sbb
mov
or
cmp
pop
mov
jno
jmp
jmp
icebp
(bad)
cmp
cwde
mov
loopne
inc
mul
inc
pop
mov
gs
mov
pushf
dec
adc
xchg
sar
mov
(bad)
arpl
scas
adc
dec
mov
pop
(bad)
jbe
enter
jp
ins
movs
retf
sub
fstp
out
mov
clc
sub
sbb
dec
sub
and
and
aad
xchg
(bad)
jl
inc
sbb
or
movs
dec
std
popf
das
es
pop
dec
inc
cmp
jb
sar
popa
mov
test
ins
mov
fistp
pop
mov
ficomp
scas
(bad)
add
stos
and
inc
mov
push
inc
out
xor
aad
pop
dec
fcom
xchg
mov
jmp
dec
(bad)
cmp
mov
mov
sub
sub
cmp
fcmovb
ret
bound
add
dec
mov
inc
push
outs
test
xchg
mov
dec
test
fxtract
sub
enter
dec
mov
dec
xchg
lea
xlat
add
idiv
out
sbb
scas
sti
xchg
sub
and
movsx
jae
test
test
xor
jno
out
cwde
pop
push
test
pushf
ss
and
(bad)
cdq
lea
sar
jle
push
std
lahf
and
leave
mov
adc
lock
xor
xchg
jp
sbb
jmp
call
test
pop
popf
dec
stos
sahf
inc
mov
call
mov
and
sub
push
shl
in
mul
xchg
sub
repz
into
bound
ss
into
les
leave
loop
int3
loop
lods
inc
rcl
jnp
retf
push
iret
fstp
inc
cmp
fld1
outs
hlt
push
jbe
pop
in
out
mov
pushw
jl
jo
mov
popf
test
and
lds
(bad)
aam
enter
test
push
and
inc
scas
imul
mov
xchg
ja
sub
mov
xchg
sahf
scas
mov
imul
int
adc
rcl
xchg
push
adc
dec
push
iret
mov
and
push
jmp
push
ret
adc
imul
inc
lea
cli
(bad)
sub
sbb
iret
in
inc
mov
je
mov
jg
push
jno
fwait
loopne
and
sbb
leave
jno
cmp
repnz
in
mov
adc
cmp
ret
popa
out
outs
fxch
jl
sbb
enter
sbb
push
mov
xor
xor
pop
pop
aas
lods
psubusw
int3
mov
jno
cmp
sbb
push
ficomp
mov
ss
jmp
les
call
mov
daa
loope
dec
pop
jbe
fdivp
jmp
sahf
and
push
sub
das
addr16
push
adc
jns
sahf
cdq
inc
xor
and
daa
ret
scas
or
xchg
arpl
xor
pminsw
xchg
or
cmps
pusha
push
dec
les
sbb
cmps
(bad)
repnz
arpl
das
aaa
mov
pushf
pop
shl
sar
and
adc
retf
gs
or
mov
pop
jmp
jl
mov
retf
lock
out
mov
sbb
push
push
mov
cmp
ror
or
mov
sti
add
and
call
sbb
fsubr
mov
dec
in
xchg
pop
and
fninit
fwait
call
xor
dec
gs
aaa
(bad)
shr
inc
dec
(bad)
sub
jo
mov
jecxz
pop
xchg
xchg
push
jg
stos
and
jge
scas
xor
add
dec
pop
or
js
and
push
jle
and
jecxz
cmp
sbb
dec
pop
mov
jmp
pop
test
sbb
xor
jnp
mov
neg
aaa
sub
sbb
es
xor
fwait
retf
mov
pop
cld
dec
xor
sbb
sbb
dec
xchg
mov
pusha
mov
and
mov
data16
in
add
dec
test
jmp
pop
out
(bad)
pop
adc
cmp
fadd
sbb
or
hlt
leave
jo
push
rcl
push
test
mov
movs
(bad)
pop
out
out
jmp
loop
xchg
xchg
cmp
pop
push
xor
sub
adc
add
test
ins
icebp
(bad)
cmps
js
mov
mov
mov
xchg
shl
sub
add
(bad)
fdiv
mov
jns
mov
xor
push
cmps
adc
ret
fld
add
mul
xchg
stos
xor
out
or
inc
leave
mov
js
adc
jo
ins
inc
es
iret
fiadd
enter
lahf
and
inc
outs
cmp
xlat
imul
iret
icebp
scas
jl
push
inc
scas
dec
inc
push
add
cld
pop
mov
push
adc
pushf
retf
(bad)
xor
adc
(bad)
jns
mov
cld
cmp
push
push
cmp
adc
sub
shl
leave
sub
cmp
lahf
pop
xchg
inc
cli
and
addr16
movs
(bad)
out
clc
push
dec
inc
inc
jp
cmovae
push
adc
addr16
dec
in
pop
xchg
add
je
ins
loop
xor
in
fs
and
adc
dec
push
scas
push
jo
int
mov
push
jp
cmps
test
inc
sub
xchg
cmp
shl
pop
in
push
outs
int3
add
mov
adc
retf
mov
shr
fs
dec
(bad)
aaa
int3
mov
iret
push
test
fs
push
sub
xor
sar
mov
mov
fdivr
aas
hlt
je
mov
add
js
ret
cmp
inc
loope
hlt
pop
xor
ret
and
adc
dec
(bad)
add
pop
mov
jge
inc
ret
out
mov
jne
push
mov
test
int3
push
jne
sahf
pop
int3
cdq
imul
inc
xchg
mov
xor
sbb
pop
mov
sub
out
stos
test
aam
cmp
psubb
fcom
(bad)
sahf
ss
ss
lock
fs
adc
iret
pusha
adc
lods
shr
nop
fcom
arpl
ret
xlat
movs
pusha
mov
mov
int
inc
sub
dec
repz
ror
xchg
ficomp
loopne
inc
fst
aas
aam
jb
xor
popf
push
mov
fstp
mov
icebp
pop
and
mov
out
ret
or
repnz
cwde
cmc
imul
pop
lds
(bad)
ins
push
jge
pop
lods
and
lods
pop
push
fs
fcomp
cs
out
fiadd
hlt
and
adc
fwait
ja
lds
in
dec
sbb
xor
xchg
and
xchg
iret
sbb
add
jnp
and
movs
mov
xchg
xlat
inc
dec
mov
(bad)
push
test
push
(bad)
pop
sbb
cli
imul
xchg
imul
lods
add
stos
xor
mov
cmp
jecxz
fidiv
aad
sub
mov
jmp
into
cmp
push
cwde
or
adc
inc
movs
jle
mov
mov
cmps
sti
mov
jb
jnp
fstp
mov
xor
(bad)
dec
lahf
hlt
sbb
lods
pop
cld
out
cdq
jae
mov
mov
push
sbb
test
out
mov
add
mov
cmp
ds
sbb
dec
xchg
xor
mov
retf
nop
(bad)
mov
add
pop
les
jecxz
lahf
ror
out
push
adc
icebp
int3
bound
push
shr
pop
and
cli
outs
rcl
gs
pop
inc
scas
cli
addr16
cmc
sbb
xor
int3
jb
add
icebp
or
std
cmp
push
dec
jbe
mov
(bad)
retf
movs
pcmpeqb
xchg
xchg
xor
xor
and
(bad)
xor
push
scas
shl
in
jne
sub
mov
cmc
(bad)
or
xlat
push
cwde
lods
mov
push
sbb
xchg
mov
dec
fiadd
xor
gs
jl
neg
push
xchg
jne
jno
loopne
inc
sub
clc
inc
adc
stos
pop
or
mov
(bad)
and
in
cwde
sbb
loope
gs
mov
mov
mov
push
das
sbb
lahf
sbb
ror
ins
xor
or
imul
sbb
ins
push
push
ret
repz
mov
sti
cmps
addr16
mov
aam
push
repnz
lods
add
pop
es
dec
push
scas
(bad)
fdiv
jnp
or
push
mov
ror
jno
movs
push
adc
call
jp
cs
out
into
lods
into
repz
push
sub
inc
cmp
ja
int3
sbb
and
test
mov
sub
(bad)
jge
int
sub
sbb
xchg
pop
add
out
sbb
xchg
adc
sub
icebp
push
push
popa
(bad)
pop
cwde
loopne
and
push
shl
dec
mov
rol
mov
(bad)
or
scas
scas
add
(bad)
cli
or
jbe
mov
push
test
in
mov
hlt
lea
and
sub
addr16
xchg
add
pop
lods
push
scas
movs
push
int
sahf
mov
sub
push
mov
fbld
aas
lahf
inc
cmp
ins
cmp
dec
add
(bad)
sbb
push
and
cmps
push
in
inc
scas
push
cmp
mov
mov
xchg
mov
adc
bound
iret
inc
push
int
mov
int3
push
pop
adc
idiv
imul
push
mov
fwait
jge
in
fs
and
mov
cwde
je
iret
pop
loope
cmp
test
mov
sbb
pushf
pop
clc
fdivr
outs
adc
mov
pop
and
and
jno
(bad)
push
xchg
mov
das
shl
shl
imul
out
int
mov
neg
xchg
std
sub
or
mov
push
xchg
pop
aam
inc
mov
aas
ror
pusha
adc
mov
aas
enter
sbb
es
mov
push
repz
jmp
fs
jmp
mov
xor
fist
push
outs
mov
sbb
stos
bswap
not
and
pop
popa
mov
lock
sub
xchg
nop
mov
and
cli
sbb
outs
fs
jmp
in
pop
mov
sub
and
test
loopne
xchg
lock
gs
or
xor
inc
jnp
cwde
or
fwait
out
sub
add
sub
js
fadd
pop
mov
jns
or
push
mov
sbb
cmp
and
popa
pop
or
aas
aam
pop
jle
sub
lods
pushf
int
pop
out
(bad)
xor
push
pop
jl
loopne
pushf
inc
or
(bad)
jmp
dec
mov
adc
pop
sub
jno
fistp
jl
cwde
mov
ss
pop
xlat
adc
sub
sbb
mov
lea
jno
in
pushf
mov
xor
and
call
adc
lahf
xchg
mov
add
and
pop
lock
cwde
inc
push
jbe
imul
fidiv
jmp
int
cli
js
pushf
outs
mov
push
lahf
ficomp
xor
mov
icebp
sbb
pop
dec
mov
add
jge
and
aaa
cmps
xor
xchg
inc
outs
xchg
sub
inc
bound
cmp
addr16
push
mov
das
js
sti
fisubr
sar
jmp
sub
mov
mov
sbb
mov
aam
and
push
dec
ins
mov
jo
fcmovu
pop
jmp
xor
xchg
mov
adc
iret
addr16
xlat
pop
repnz
mov
pop
push
adc
pop
xlat
out
inc
pinsrw
xor
pop
sbb
shr
(bad)
adc
push
pusha
and
jge
push
jmp
add
mov
cmps
push
mov
dec
inc
inc
mov
hlt
fsub
jl
mov
clc
jb
ss
(bad)
jmp
fild
ss
or
in
and
bound
and
retf
aaa
add
out
mov
pop
or
ja
in
sbb
adc
xchg
mov
out
xchg
jmp
loopne
jle
(bad)
push
or
dec
js
inc
push
icebp
mov
pop
stc
xor
ret
inc
mov
in
pop
inc
inc
adc
cmp
retf
mov
cmps
fadd
data16
call
stos
je
in
push
cmp
push
ja
in
jb
ins
sub
xor
push
add
iret
test
pop
sbb
popf
inc
hlt
test
mov
inc
call
pop
out
dec
ficomp
shl
push
out
lock
push
rcl
mov
mov
call
fistp
dec
hlt
xor
test
leave
arpl
div
je
sbb
in
sbb
jns
js
inc
shr
mov
jmp
add
push
outs
mov
les
cli
mov
test
push
int3
aas
(bad)
imul
pop
jae
push
pop
fst
mov
mov
fcomp
iret
dec
imul
dec
mov
jmp
cmp
dec
mov
jae
mov
jle
call
pop
adc
adc
test
sub
lods
cmp
mul
push
push
mov
cld
in
test
aam
push
in
xor
mov
ins
cwde
loopne
cli
mov
loopne
push
mov
popa
sub
mov
pusha
repz
pop
jl
shr
and
cmp
mov
arpl
cmp
hlt
pop
jne
sub
fmul
sbb
xchg
sahf
pushf
pop
lea
adc
sbb
pushf
dec
xchg
enter
ret
pusha
adc
fs
lahf
cmp
jg
out
push
push
pushf
addr16
cmp
dec
pop
sbb
sar
lea
jmp
jge
iret
cmp
push
push
int3
jle
adc
in
xor
push
sbb
adc
inc
adc
pushf
fist
lods
retf
leave
lahf
or
fbstp
jns
pop
imul
cmp
and
xchg
in
js
mov
scas
inc
aad
xchg
sub
lea
pop
push
sub
(bad)
xchg
cwde
enter
pop
push
add
sbb
dec
xchg
(bad)
and
push
fdiv
mov
cwde
pop
sar
test
pusha
sub
cld
imul
pushf
imul
aaa
and
ret
pop
sub
lea
stc
xchg
lods
adc
jbe
sub
sbb
mov
addr16
adc
cs
stc
cs
outs
mov
dec
outs
lods
pop
dec
add
cmps
jle
dec
pop
jp
retf
stos
mov
mov
jo
pop
mov
jmp
clc
rol
jbe
mov
sar
sub
lock
int
cwde
push
popa
xchg
fmul
cmp
lods
xchg
xor
cwde
ret
mov
stc
xchg
dec
add
pop
xor
bswap
mov
fcom
cld
out
ja
pushf
mov
js
pop
or
lods
or
jg
sub
sub
mov
js
gs
push
cmps
and
mov
call
imul
enter
dec
mov
sbb
inc
xchg
jle
adc
cs
ret
bound
hlt
stos
fld
push
sti
jmp
mov
fs
cmc
sbb
adc
pop
repnz
scas
sbb
mov
aam
xchg
fcomp
out
les
ins
test
mov
bound
cli
jne
cs
cmps
jmp
pushf
inc
les
popf
mov
lahf
retf
jmp
mov
jmp
add
xor
bnd
sbb
or
adc
dec
dec
pop
not
dec
mov
push
jge
push
xchg
test
adc
inc
sbb
mov
push
cmp
sbb
sbb
mov
sbb
cld
fwait
mov
(bad)
jmp
neg
sahf
into
xchg
sub
jl
in
arpl
lods
nop
jl
test
lahf
retf
mov
mov
mov
fsub
sub
call
bound
xchg
dec
fwait
out
fadd
jmp
push
not
cmp
addr16
xchg
xor
in
mov
jno
cdq
fs
(bad)
nop
popa
sbb
inc
pop
or
cmp
add
xchg
jmp
cmps
daa
ins
ss
dec
out
fwait
adc
jecxz
pop
(bad)
fild
cmp
cmp
xchg
adc
aaa
or
sub
and
and
push
aas
xchg
push
aad
adc
sub
call
xchg
cmp
mov
pop
cmps
mov
repz
fcomip
dec
imul
mov
cmp
fisubr
jmp
mov
stc
sbb
cmp
cmp
(bad)
aam
mov
mov
add
add
sbb
xchg
push
lea
nop
nop
xchg
lea
mov
cmp
sbb
xchg
pushw
adc
ds
dec
jmp
pop
and
pushf
add
(bad)
lahf
arpl
xchg
ins
test
dec
dec
xchg
stos
mov
cmp
mov
push
xor
sbb
cld
xchg
xchg
xchg
inc
jmp
sub
pop
mov
cs
shr
and
fwait
add
scas
aas
into
adc
cmps
inc
movs
and
xchg
das
push
pop
cmps
jo
mov
fwait
jo
loopne
movs
fwait
push
jmp
mov
jns
sahf
test
mov
shl
jmp
push
adc
sub
outs
jge
retf
movs
not
mov
jnp
jle
fdivr
add
call
xor
dec
dec
fistp
xchg
mov
and
add
mov
sbb
lds
and
mul
test
jbe
push
xchg
sahf
icebp
push
lahf
inc
cwde
sbb
push
cwde
sbb
movs
mov
xor
ret
xchg
out
push
addr16
xchg
cmc
(bad)
push
inc
adc
sub
ins
sbb
and
pop
jbe
out
adc
(bad)
sbb
test
add
ins
repnz
jl
call
sub
sahf
inc
xor
pop
mov
stos
fst
adc
and
test
add
ja
inc
imul
pop
ror
or
mov
mov
int
mov
clc
(bad)
jo
out
inc
loope
and
or
jo
adc
std
pop
inc
mov
jns
rcl
add
rcr
inc
imul
pop
ins
jbe
int3
or
mov
mov
xchg
xor
xchg
xchg
dec
pop
aas
xchg
adc
or
xchg
aad
movs
dec
mov
xor
out
inc
scas
push
sbb
aas
push
imul
inc
sbb
xchg
repz
xor
pop
cs
pop
ins
xchg
xor
mov
add
sub
push
in
inc
pop
and
ret
lahf
push
int
sub
scas
push
js
dec
retf
cmp
aam
adc
sub
jmp
test
sbb
adc
sahf
and
sub
ins
sub
pop
cwde
add
pop
mov
shl
out
pusha
gs
jae
or
pop
mov
into
pop
jge
imul
mov
push
and
mov
shr
loop
xchg
(bad)
std
inc
pop
imul
loop
adc
push
mov
mov
mov
cmp
and
arpl
dec
push
push
mov
cli
test
mov
sbb
int3
mov
shl
add
cmp
xor
jne
cli
imul
movlps
ins
ret
pop
dec
fiadd
sub
mov
mov
mov
scas
xchg
leave
mov
inc
jo
ds
pop
js
test
je
shr
ror
(bad)
not
ins
mov
das
sbb
lods
pop
mov
sub
push
sbb
add
jns
daa
mov
cmp
outs
xor
scas
xchg
retf
mov
push
mul
icebp
jecxz
cli
xchg
stos
leave
retf
ins
xchg
inc
dec
aas
inc
sbb
xor
sbb
push
and
(bad)
movs
fnstenv
xor
pusha
mov
inc
outs
cmp
dec
fbld
and
push
sub
fild
icebp
sub
test
cdq
scas
cmc
movs
scas
cs
pushf
pop
pop
push
add
std
xchg
psrld
iret
sbb
js
fwait
cmp
xor
aam
retf
mov
pushf
outs
mov
pop
mov
repnz
pop
cmp
data16
aas
sbb
retf
and
outs
aad
sti
imul
hlt
(bad)
pushf
cmp
xchg
clc
jl
iret
mov
pop
mov
ins
fiadd
das
mov
imul
push
add
xchg
out
ret
lahf
std
jmp
push
sub
nop
jl
cmps
mov
psadbw
dec
gs
xchg
xchg
jnp
lahf
into
push
repnz
mov
jae
adc
fld
fiadd
cdq
or
imul
mov
sbb
leave
ds
add
lods
std
lahf
jmp
enter
cmc
ret
cmp
into
popa
in
rol
call
push
adc
jae
js
js
ins
out
xor
aad
inc
sub
push
aad
jg
jnp
(bad)
xchg
movs
sbb
stos
lock
sbb
mov
imul
cmp
repz
and
ins
adc
cmp
dec
lods
pop
fs
push
xchg
pop
xor
fcomp
inc
mov
lds
in
sub
adc
ins
adc
fsubr
out
lods
adc
cmp
push
aad
sub
inc
xchg
(bad)
aad
icebp
jge
sub
cmp
ins
ret
sbb
mov
or
mov
sbb
in
mov
ror
in
test
scas
dec
jl
sub
mov
adc
adc
add
add
jmp
pop
sbb
mov
adc
arpl
push
adc
push
adc
leave
pop
adc
pop
scas
mov
inc
daa
inc
loop
mov
shl
and
cmps
xlat
dec
mov
mov
call
in
outs
movs
and
or
cmp
mov
xchg
movs
mov
retf
push
push
mov
sub
shr
popf
push
(bad)
lahf
retf
jnp
lea
ss
out
mov
sbb
fidivr
sub
mov
gs
retf
movs
push
jp
or
enter
imul
mov
sbb
out
add
jo
jl
in
sub
xor
pop
fbstp
sbb
and
jle
adc
fwait
jmp
mov
jmp
test
out
and
lock
sub
shr
dec
aam
adc
sub
fisttp
movs
ret
push
movs
movs
pop
sub
xor
push
push
sub
jg
(bad)
mov
pop
into
or
mov
pop
rcl
cmps
js
mov
sub
pusha
sbb
add
popf
cwde
xchg
leave
(bad)
push
sub
adc
sbb
hlt
mov
fmul
inc
fbstp
and
das
mov
push
fild
sbb
jmp
jbe
dec
stos
lock
xor
fild
rol
inc
sbb
mov
movs
mov
mov
mov
int
(bad)
stos
fdivr
sub
int3
shl
std
mov
jns
sahf
xor
repnz
in
xchg
cwde
cmp
aas
ret
and
mov
repz
push
or
scas
inc
xor
in
cmp
and
in
aad
push
jl
loopne
mov
clc
sahf
pop
or
and
repnz
in
mov
test
mov
shl
pop
push
imul
retf
mov
mov
pop
lock
(bad)
loopne
call
xor
js
(bad)
hlt
pop
push
movs
daa
das
sub
and
and
data16
adc
sbb
iret
shl
out
cmp
push
mov
xor
int
sti
xabort
stos
mov
and
sub
rcl
out
ds
xor
imul
or
sub
shr
mov
mov
call
loopne
mov
jmp
arpl
cwde
jl
loop
sbb
(bad)
fstp
(bad)
xchg
stos
je
out
jmp
div
push
ins
mov
jge
push
ds
(bad)
mov
stos
cmp
lds
or
xchg
jnp
test
adc
mov
jns
stos
imul
mov
mov
aas
shl
pushf
jb
xchg
cwde
sub
cwde
in
inc
xor
adc
xchg
aad
mov
add
mov
scas
adc
pop
jmp
rcr
bound
mov
pop
cmp
fadd
sbb
call
push
stos
aam
push
dec
xor
cmp
xor
call
jnp
cli
std
and
or
add
jmp
xor
ror
movs
(bad)
imul
inc
mov
jno
or
dec
or
cdq
rcl
jnp
pop
(bad)
mov
cmp
sub
xor
pop
out
adc
adc
aaa
or
ret
inc
push
sub
into
aas
sub
push
adc
sbb
sub
(bad)
das
dec
jmp
dec
std
push
scas
call
arpl
movs
pop
inc
int3
pop
dec
ss
add
aad
and
cmc
mov
add
inc
arpl
pop
cmp
into
push
jnp
dec
jno
mov
inc
dec
ds
jb
sbb
or
icebp
inc
loopne
inc
jl
in
(bad)
mov
mov
out
dec
out
lds
cld
mov
sbb
jae
or
adc
push
mov
mov
repz
cmp
mov
lahf
jle
pop
fbstp
inc
push
mov
jmp
jmp
fistp
imul
add
mov
push
dec
cmp
nop
ret
imul
mov
lods
and
fcomp
outs
fwait
mov
mov
cmp
outs
add
and
push
pop
cmp
(bad)
xchg
xchg
sub
sbb
inc
jmp
iret
mov
shr
fimul
imul
fst
ins
xor
add
or
pop
es
int3
in
sbb
mov
(bad)
xor
call
sbb
imul
bndldx
and
idiv
cld
dec
das
sar
enter
push
mov
sbb
mov
xchg
jne
pop
imul
fcom
xchg
call
fwait
mov
dec
pop
jecxz
ds
(bad)
mov
mov
ret
fcom
std
adc
hlt
sub
inc
mov
ror
pop
(bad)
stos
inc
lds
shl
or
jmp
arpl
retf
push
es
inc
xchg
cmp
lahf
pop
mov
mov
push
push
into
retf
xor
sahf
inc
jl
in
and
sti
push
int3
cs
inc
stos
shr
jnp
mov
xor
add
add
mov
sti
repz
cmp
inc
imul
sbb
repz
pop
mov
mov
std
sub
adc
mov
stos
gs
push
mov
ficom
fistp
pop
out
imul
test
dec
arpl
jnp
scas
cmp
adc
(bad)
outs
pop
and
xchg
and
movs
jnp
mov
mov
ins
retf
std
xchg
mov
scas
fistp
jle
nop
imul
(bad)
push
xchg
shl
pop
hlt
popf
mov
dec
cld
loop
mov
ins
adc
cdq
mov
sbb
inc
sbb
pushf
cli
jg
pushf
xlat
cmp
inc
mov
jle
out
stos
mul
outs
mov
out
clc
in
jnp
test
mov
add
pop
imul
mov
test
sub
clc
pop
jne
sti
fisttp
jge
add
movsx
ins
jae
popf
addr16
xlat
jb
adc
cli
xor
rcr
scas
mov
fisubr
push
rol
jb
fisub
or
add
fdivr
mov
retf
fnstsw
(bad)
cmp
adc
pop
pushf
pop
rcl
fwait
sub
mov
pushf
sub
out
dec
mov
int
iret
dec
stos
mov
or
(bad)
clc
mov
fidiv
mov
mov
push
xor
or
dec
mov
test
sub
inc
or
inc
mov
mov
fs
call
cmps
clc
dec
dec
xchg
pusha
fistp
push
cdq
mov
mov
fnstsw
inc
fsubr
sub
fucomp
push
mov
jb
pop
mov
(bad)
pop
pop
pop
scas
pop
fwait
add
stos
pop
or
mov
push
mov
fdiv
cmps
into
and
bound
shl
jmp
or
mov
push
aad
adc
iret
pushf
retf
fadd
pop
lea
mov
xor
lock
push
sbb
repnz
rol
mov
aam
ror
mov
sub
jno
push
push
sbb
adc
gs
outs
inc
xchg
fpatan
sbb
in
sub
fstp
fmul
xor
and
mov
pushf
mov
pushf
push
add
mov
ins
cwde
cmp
add
sub
sahf
xchg
jmp
sbb
rcr
or
int3
mov
cwde
popf
setb
jb
stos
push
sar
rcr
out
adc
adc
enter
or
push
inc
bound
lods
ret
mov
ss
fcomp
inc
fiadd
push
cmp
sbb
cmp
mov
es
inc
and
inc
mov
rcr
mov
stc
xchg
push
dec
(bad)
xchg
inc
adc
cmp
ficom
in
mov
test
scas
popf
outs
data16
jae
mov
inc
inc
pop
xchg
fwait
imul
pushf
jp
inc
fwait
mov
div
jle
cli
test
fs
push
mov
and
dec
pop
push
xchg
mov
(bad)
mov
xor
xchg
test
es
cs
dec
sti
mov
cmps
and
aad
pop
ins
xor
pop
jmp
inc
adc
add
int3
into
xchg
pop
cld
mov
sub
sbb
dec
sti
lock
fs
mov
rep
test
push
cmp
cwde
sbb
dec
aas
mov
xchg
and
sbb
jo
xor
pop
cmp
jmp
xchg
imul
sbb
xchg
push
aad
cs
ret
pusha
cmps
call
cmp
jmp
pop
push
fidivr
mov
pushf
inc
test
pop
(bad)
mov
pop
into
jle
adc
mov
test
sbb
jle
dec
jno
cs
jge
add
dec
jg
jl
and
fwait
nop
repz
inc
rcr
std
bound
add
sti
sub
inc
je
inc
push
sub
and
ss
ret
bound
pop
out
imul
xor
xor
jle
(bad)
xchg
mov
je
js
cmp
aas
leave
or
stc
dec
sahf
popf
clc
imul
scas
mov
retf
push
push
out
mov
les
or
mov
dec
mov
pushf
movs
or
adc
xchg
dec
jae
sub
sub
mov
push
sub
adc
xchg
push
dec
sbb
int3
pop
(bad)
cmps
ret
call
jmp
pushf
test
aaa
outs
js
mov
dec
and
into
cs
mov
retf
iret
aam
or
push
call
iret
pop
or
jo
les
loopne
xchg
jb
cmp
sbb
jne
mov
sub
ins
xlat
dec
addr16
pop
xor
int3
xchg
test
push
push
cwde
and
(bad)
sti
pop
jne
sub
cmps
test
cli
not
xor
sub
mov
mov
ret
fcomp
out
pop
into
jle
adc
fwait
fwait
pop
push
cmp
adc
or
(bad)
lea
stos
je
stos
mov
and
movs
je
sub
adc
cmp
dec
jmp
enter
adc
jns
outs
sub
sub
lods
pop
fsubr
ja
inc
fldcw
dec
sti
out
in
pushf
xchg
push
scas
sub
dec
xchg
pop
mov
xor
fbld
sahf
pop
in
cmc
or
push
jnp
sub
cdq
test
push
idiv
repz
add
adc
or
call
stos
sahf
pop
fimul
fistp
fwait
clc
stos
jae
inc
push
(bad)
arpl
inc
sub
xchg
scas
pop
fnsave
dec
jb
retf
sbb
xchg
cmp
adc
sbb
pop
sbb
add
and
std
not
mov
cmc
lods
outs
(bad)
push
cld
movs
hlt
bound
cmp
sti
or
adc
sub
mov
scas
push
adc
hlt
adc
jge
std
call
cld
sub
(bad)
lock
pop
fiadd
xchg
enter
xor
jge
hlt
fsub
(bad)
hlt
retf
pop
mov
sbb
cs
popa
or
or
sbb
or
mov
mov
jl
sbb
int3
cdq
dec
add
xchg
pop
cwde
xchg
int
pop
in
into
popf
push
mov
jno
cld
int3
dec
add
add
adc
lock
cwde
mov
in
test
adc
xchg
retf
ret
or
add
fld
add
push
xchg
cmp
loop
(bad)
and
mov
inc
das
sbb
add
dec
imul
int3
sub
(bad)
jl
xchg
les
pop
(bad)
jo
inc
push
stc
push
mov
mov
movhps
sbb
ds
out
push
ins
jmp
mov
in
push
rcr
xlat
or
stos
outs
jl
pop
pop
push
xchg
and
sbb
(bad)
mov
mov
cld
xchg
jge
or
fs
fcomp
sbb
fist
mov
pop
test
jl
sbb
outs
cld
je
cmp
and
jo
std
cmp
ror
je
sub
fs
dec
out
mov
clc
or
and
mov
xchg
das
sbb
call
int
jge
adc
mov
add
cmp
add
sbb
jnp
xchg
add
adc
mov
fwait
sub
xchg
daa
pop
fwait
scas
lock
ins
dec
xsaveopt
sub
clc
ss
cld
adc
loope
dec
fbld
sbb
test
dec
xchg
pop
stos
and
pusha
je
aad
rcr
jbe
in
scas
in
push
jmp
je
gs
fsubr
pop
push
mov
pop
(bad)
xlat
lods
cmp
pop
sbb
mov
adc
sbb
inc
fsubr
ret
lock
jl
popf
rcl
out
sahf
pop
mov
call
sub
mov
mov
cmp
je
or
push
(bad)
cwde
loope
shr
popf
mov
cmc
adc
fstp
sub
push
scas
retf
push
or
cmp
xchg
or
ret
xor
adc
adc
data16
cmp
fmul
and
inc
ret
pusha
mov
(bad)
stos
push
mov
xlat
(bad)
sbb
push
mov
add
outs
add
xchg
pusha
imul
fcom
(bad)
out
or
scas
mov
inc
sbb
and
sysret
loopne
add
pop
xchg
div
lods
mov
push
aam
sub
jno
mov
jns
mov
pop
and
popf
mov
aam
push
jbe
push
sti
sahf
fldcw
into
int3
jg
repnz
dec
cmp
(bad)
clc
fbstp
xor
and
pop
sub
aas
and
cmp
jmp
jge
jge
mov
pop
cs
pop
jge
fadd
outs
dec
jmp
out
mul
ins
adc
cmp
fadd
sub
push
imul
cmc
retf
fwait
mov
in
arpl
cmp
fnstsw
cmps
aam
sub
mov
scas
xor
and
popf
into
add
icebp
and
sbb
pop
idiv
dec
cmps
icebp
imul
imul
sbb
xor
add
pop
mov
aad
call
bound
inc
push
fcom
xchg
and
mov
fsubrp
dec
cmp
pop
sbb
push
push
pushf
div
cmp
movs
inc
inc
jle
jg
cld
fisttp
mov
test
add
fs
jp
inc
imul
add
ins
es
adc
arpl
mov
daa
mov
push
in
cld
mov
(bad)
shl
imul
mov
fsubr
movs
fisub
push
xlat
push
add
sub
xor
cmp
sub
pushf
pop
in
cs
enter
ins
sahf
outs
popf
cmc
retf
pinsrw
retf
lahf
fisub
ficom
or
sbb
test
cmp
cmc
add
sbb
cmp
push
inc
mov
div
dec
(bad)
icebp
dec
and
mov
adc
pop
cmp
pop
lods
or
pop
mov
jo
cmp
adc
popa
not
das
lock
fsub
std
fneni(8087
imul
push
in
ret
mov
cmc
or
call
inc
mov
enter
and
ins
add
inc
cli
icebp
adc
adc
sub
and
aad
push
push
hlt
mov
aaa
out
xchg
pop
xchg
xlat
mov
push
mov
fisub
mov
outs
mov
pop
aaa
jg
(bad)
pop
ins
mov
push
rcr
xor
out
jl
add
fidiv
cmp
in
mov
jmp
or
sub
inc
pusha
movs
mov
or
pop
loopne
and
(bad)
xor
mov
call
sbb
push
arpl
cmp
ds
lods
jae
adc
aad
push
mov
inc
test
mov
push
xor
pop
dec
adc
aam
loopne
xchg
arpl
and
xchg
xchg
fwait
dec
push
inc
fwait
push
mov
ins
push
jmp
adc
call
mov
adc
or
ficomp
push
call
jg
and
shl
dec
sbb
mov
lahf
fidivr
adc
mov
lock
pop
fist
cmp
outs
out
inc
xor
mov
mov
int
jge
xor
hlt
push
aad
push
addr16
add
mov
retf
pop
dec
lea
sbb
cwde
in
adc
rol
and
adc
arpl
pop
add
scas
sbb
sbb
or
retf
push
jle
in
popa
ret
out
add
jae
xchg
cmp
cld
iret
jle
cli
adc
pop
repz
dec
iret
sbb
cdq
xchg
pop
xor
das
pop
call
xchg
and
loop
enter
fild
shl
test
and
push
lods
and
in
sti
fs
(bad)
sti
add
inc
push
jae
in
mov
add
jle
sub
push
add
and
lods
and
test
clc
ja
imul
pop
mov
or
ins
lds
ins
ins
fcom
sub
pop
out
xchg
(bad)
icebp
sub
imul
push
jne
inc
mov
mov
in
mov
xchg
add
xlat
clc
sub
cmp
sub
mov
add
ins
inc
mov
jb
adc
jne
dec
mov
jbe
inc
mov
ins
sbb
jbe
sub
cdq
adc
cmc
out
mov
jge
sub
mov
adc
ror
pop
sbb
mov
push
fwait
jno
repz
lock
int
adc
sbb
retf
jnp
call
clc
inc
inc
int
or
jl
sbb
add
sbb
imul
adc
sub
out
jae
popa
stos
xchg
imul
inc
es
sar
stos
fcomp
in
pop
push
jno
lods
rcr
cmps
jb
pushf
fisttp
idiv
or
xchg
or
int3
fadd
bound
sbb
sbb
push
pop
aam
aas
push
mul
popf
sar
das
and
mov
in
sub
mov
loopne
js
push
cdq
fcomp
push
cdq
loopne
fldcw
mov
sub
sbb
push
xchg
or
jno
hlt
mov
add
sar
(bad)
adc
out
push
inc
sbb
fcomp
cmp
push
retf
aam
push
sti
add
pop
xor
push
call
das
jbe
mov
(bad)
add
sti
out
je
sub
scas
in
jle
dec
dec
xor
mov
jnp
mov
and
pop
test
jb
mov
xchg
fbld
sub
sbb
lods
or
(bad)
call
fcomp
jmp
adc
xor
movs
enter
fistp
fnsave
add
pop
out
rcl
jno
mov
cmp
xchg
jns
push
xlat
sbb
aas
or
mov
retf
rcl
shr
(bad)
jo
imul
cmc
inc
jmp
sahf
aad
xchg
jmp
cmp
inc
mov
sar
push
je
xor
cmp
(bad)
cli
xchg
sub
ins
dec
jle
aaa
cmc
(bad)
psrad
push
mov
dec
sar
push
js
adc
sub
cmp
out
and
and
imul
and
cmp
cmp
jbe
and
rcr
xor
test
xor
add
clc
stc
cmps
test
popf
out
inc
xor
pop
out
xchg
test
xor
and
aam
inc
adc
ficom
sub
sub
adc
pop
and
xor
xor
pop
xor
jmp
mov
push
mov
push
sbb
out
sti
push
lahf
out
xchg
pushf
mov
sbb
popf
iret
sbb
rcr
stc
sbb
jmp
movs
fbstp
jns
fdivr
push
and
enter
adc
(bad)
jb
jl
pop
mov
jmp
mov
and
cmp
or
xor
sbb
ins
retf
loopne
push
jmp
std
movs
jmp
xor
cmp
mov
movs
movs
adc
fst
iret
push
cmp
adc
sub
js
sbb
movs
popa
outs
add
adc
mov
in
gs
cs
repnz
xchg
aam
retf
cs
xor
loopne
sub
sbb
or
pop
push
mov
push
gs
jae
(bad)
(bad)
popa
pop
imul
push
je
push
jo
mov
dec
in
mov
push
mov
jbe
cmp
xchg
fistp
std
ss
les
dec
lods
cdq
add
cmp
icebp
jmp
test
(bad)
mov
add
pop
ins
and
and
and
or
dec
mov
addr16
das
neg
repnz
push
stos
mov
sar
int3
pop
cmp
xor
(bad)
sub
pop
mov
icebp
popf
mov
xchg
xchg
into
xchg
pop
cmps
sbb
mov
cwde
and
cmp
loope
cmp
push
xchg
test
(bad)
pop
jo
jg
mov
and
sti
jp
in
out
jbe
dec
scas
push
loopne
(bad)
mov
rol
mov
test
fiadd
xor
rcr
out
int3
push
cld
std
aas
mov
jne
data16
sahf
or
inc
jns
std
dec
inc
(bad)
push
int3
and
lahf
nop
gs
loope
add
lock
push
sbb
jmp
cpuid
adc
pop
out
iret
outs
push
cmps
pop
push
add
mov
pushf
(bad)
sub
out
not
int3
(bad)
jb
jbe
mov
pop
js
xchg
adc
fwait
sub
(bad)
dec
imul
leave
xlat
retf
sub
cwde
xchg
adc
mov
fnstsw
ret
add
call
and
or
xor
scas
ret
cmps
adc
cmp
stc
movs
retf
dec
push
lahf
xor
jge
repz
addr16
mov
pushf
pop
mov
mov
mov
dec
sbb
out
sbb
inc
popa
inc
sar
sbb
push
adc
cmp
dec
mov
push
mov
ss
iret
cmp
and
je
and
xor
xchg
jecxz
dec
(bad)
or
inc
scas
rcr
ss
nop
test
jne
mov
inc
out
pushf
cmps
fist
xor
mov
sub
lahf
ins
cld
jle
loope
cmp
xchg
int
sub
jmp
mov
fild
ins
pushf
(bad)
dec
js
jmp
or
pushf
sbb
arpl
inc
pop
jmp
ret
push
xor
mov
addr16
ret
retf
jmp
ins
jl
or
rol
ret
push
lea
jmp
pop
cld
cmp
jle
cmp
je
mov
cmp
sub
push
pusha
js
and
stos
mov
sub
fsqrt
push
dec
cs
push
daa
inc
sub
test
mov
je
sub
jo
outs
out
outs
ins
push
mov
int
adc
pop
xor
test
js
fist
neg
paddb
xor
addr16
aam
loopne
xchg
mov
pop
and
dec
jge
je
call
xor
(bad)
push
fst
xlat
retf
push
add
js
push
ins
push
fist
inc
and
jle
sbb
daa
rcl
aam
jle
ins
jge
inc
cmp
xor
dec
inc
mov
xor
dec
mov
xchg
jp
pop
add
addr16
mov
outs
push
push
stc
or
xchg
lods
scas
dec
sub
mov
in
test
outs
push
jb
in
dec
in
cmc
mov
clc
cli
fdiv
into
sbb
retf
stos
fwait
cli
pop
fbld
sbb
out
movs
int3
fst
mov
mov
fdivr
(bad)
ins
xchg
xchg
dec
stos
jmp
push
sar
ret
mov
fisub
xchg
in
icebp
fsubrp
inc
jmp
hlt
inc
clc
dec
fcomp
in
ret
mov
shr
int3
adc
imul
mov
je
cwde
and
or
push
daa
jbe
cld
lea
cmp
ins
and
fwait
xchg
pop
mov
(bad)
sub
outs
ja
imul
sahf
dec
mov
and
cmp
mov
out
jno
cdq
into
aaa
sahf
scas
fs
push
and
sti
mov
data16
mov
xor
sbb
in
sbb
sub
aad
ins
test
scas
push
dec
outs
sar
mov
ret
into
dec
js
xor
test
mov
and
dec
(bad)
(bad)
nop
arpl
or
jae
loopne
enter
or
(bad)
jns
jb
stos
mov
mov
jo
pusha
xchg
imul
sbb
adc
pop
adc
dec
nop
jl
pusha
jno
pusha
int3
mov
mov
pop
and
fs
push
sub
adc
les
out
inc
xchg
and
push
xor
xor
push
adc
pop
add
(bad)
mov
aas
in
ret
lea
inc
(bad)
je
inc
lahf
daa
ins
sti
sub
jp
int3
lea
into
jge
xchg
test
lods
xor
mov
cmp
xchg
xor
inc
or
fwait
hlt
push
sbb
push
jle
mov
lea
ss
rcr
jbe
adc
xchg
test
pop
xchg
push
(bad)
out
rcr
mov
aam
data16
fmul
inc
inc
jne
sbb
sub
xchg
shl
out
pop
inc
add
pop
into
inc
pop
fwait
adc
fistp
cmp
sbb
pop
pop
mov
ds
outs
test
movs
mov
jg
shl
test
or
jmp
ficomp
es
out
movs
adc
fimul
ror
cmp
arpl
pop
sbb
jge
jg
imul
(bad)
ins
in
ret
lahf
push
repnz
enter
ins
ins
add
rcl
xor
sahf
pop
test
data16
ins
mov
imul
fcomp
sub
sbb
sub
cdq
inc
dec
retf
jmp
push
(bad)
pushf
jl
sbb
shl
fistp
xor
repz
test
imul
call
es
adc
gs
sub
add
cmp
add
aaa
mov
sbb
pop
pusha
std
out
(bad)
sub
jl
aad
push
arpl
scas
push
jg
ficomp
(bad)
mov
pusha
push
jmp
sub
ins
call
sub
sub
(bad)
enter
loope
ins
test
cwde
inc
inc
ins
mov
ds
inc
leave
and
daa
js
sbb
in
popf
repz
stos
out
pop
jb
pop
xchg
push
fld
fcom
or
aas
sahf
lea
cdq
cmp
call
dec
dec
jb
fisttp
push
mov
dec
jno
mov
(bad)
adc
mov
xchg
lock
js
xor
xor
or
push
lock
sbb
iret
sub
or
sub
leave
stos
sbb
jne
or
dec
mov
sbb
stc
sbb
sub
jmp
push
pop
popf
gs
bound
xor
sub
inc
outs
inc
scas
inc
pop
fxch
fs
inc
hlt
or
fld
jmp
fild
cmc
mov
je
mov
or
shr
mov
fsub
ss
xor
cdq
push
dec
sub
ror
and
jg
es
jns
rcr
in
push
out
imul
sub
add
mov
inc
stos
jbe
sub
mov
call
xchg
cmp
jle
and
xchg
xchg
fisttp
fdivr
add
es
enter
jbe
mov
scas
cmp
sbb
in
cs
xchg
fs
jmp
imul
inc
scas
sahf
cmp
push
mov
sbb
ins
shl
popa
(bad)
(bad)
rol
stos
stc
sub
into
fwait
xchg
push
fs
inc
sub
aaa
or
cld
mov
jmp
push
sbb
cmp
fs
aas
pop
cwde
push
sub
arpl
outs
jecxz
mov
push
fcomp
push
pop
and
sub
cdq
imul
mov
jo
int
push
test
imul
pop
xchg
sbb
mov
and
push
cld
or
pushf
jne
jl
sbb
das
cmps
cdq
and
cmp
adc
and
mov
push
mov
dec
pop
movs
loope
test
jno
fdivr
test
mov
je
fidiv
xchg
(bad)
sbb
push
adc
imul
jne
xchg
and
or
loope
add
pminsw
lds
mov
and
mov
movs
dec
cdq
pop
adc
test
pop
push
call
out
fcmovnb
jno
ss
fidiv
push
sbb
and
iret
or
retf
cwde
mov
inc
xchg
mov
xchg
lods
fcmovnb
mov
xor
outs
sub
pop
idiv
pop
mov
xor
into
dec
jl
call
cmp
jmp
push
nop
mov
retf
jae
add
push
dec
(bad)
cmp
sahf
xchg
lock
and
dec
and
jmp
arpl
add
imul
mov
jb
adc
fcomp
sbb
mov
les
add
sbb
retf
sbb
and
repnz
or
xchg
sub
arpl
pusha
fs
adc
pop
jno
or
pop
retf
add
push
xchg
pusha
outs
dec
mov
arpl
push
lds
xor
das
cwde
das
repz
xchg
ficom
or
js
push
clc
cmp
ror
punpckhbw
cs
ins
aas
mov
xadd
js
sbb
push
call
and
ret
in
fsubr
ficom
and
stos
pusha
and
add
aas
leave
jo
rol
ins
or
outs
sbb
inc
xor
cmp
shr
das
(bad)
loope
das
xor
and
push
aaa
out
jecxz
fxch
imul
cmp
loopne
sahf
pushf
cld
sbb
mov
xchg
call
daa
hlt
sub
jl
dec
mov
dec
dec
aas
mov
(bad)
addr16
push
pusha
aaa
sbb
jnp
and
cmp
outs
loop
(bad)
push
sbb
sbb
adc
push
xchg
jb
add
push
test
mov
out
xchg
or
mov
fld
dec
or
(bad)
hlt
add
jge
sub
adc
jecxz
stos
ret
sbb
fcmovu
jle
or
imul
cmps
pop
pop
in
or
or
into
icebp
sbb
sub
jb
(bad)
jge
sbb
push
or
shl
mov
cdq
imul
movs
lods
(bad)
mov
inc
xchg
push
cmp
stos
aaa
cmp
adc
mov
sub
leave
fadd
mov
repz
sbb
sbb
pop
pop
ret
adc
gs
je
mov
jmp
(bad)
cld
jge
pop
mov
push
push
idiv
xchg
or
icebp
popa
movs
mov
ja
mov
push
or
sbb
sbb
retf
xor
gs
(bad)
lock
arpl
dec
(bad)
pop
(bad)
clc
sbb
rcl
fst
xchg
ret
loop
ins
pop
xor
mov
push
fcomp
fsub
pop
(bad)
cdq
mov
ror
addr16
xchg
fisub
fwait
sar
fnstcw
in
aam
push
sbb
in
in
(bad)
lea
sahf
cmp
popf
jb
sub
xor
ror
fdivr
cld
movs
imul
sub
xchg
and
mov
mov
adc
sbb
cld
mov
pop
bound
das
aam
xor
fisttp
test
lock
mov
test
out
sub
sub
sbb
xlat
test
mov
mov
rcr
sub
inc
ins
push
cmp
xchg
adc
pushf
cli
mov
das
jmp
arpl
movs
fucomp
pushf
or
(bad)
popf
jle
add
mov
(bad)
or
cld
sbb
bound
scas
cmp
jg
jmp
jns
nop
int3
iret
xchg
inc
popf
mov
outs
mov
ret
enter
mov
mov
das
mov
out
push
xchg
nop
sar
lahf
adc
xor
mov
sub
fisttp
jge
add
je
test
push
xor
sbb
stos
dec
icebp
xchg
popa
popf
icebp
and
pop
in
push
dec
leave
push
adc
and
outs
dec
clc
push
in
inc
push
sbb
outs
or
mov
scas
or
sbb
xchg
pusha
mov
mov
jb
push
pop
ds
pushf
adc
sub
inc
mov
sbb
sbb
shl
sub
and
ret
mov
push
inc
or
lock
ret
imul
adc
adc
(bad)
cmp
push
test
xchg
cld
imul
inc
cmp
cs
inc
pop
xchg
sub
call
iret
push
push
std
scas
add
retf
push
sti
push
add
pop
sbb
push
xor
imul
pop
mov
cmp
in
cmc
pop
push
outs
bound
or
sub
push
sbb
mov
scas
mov
fisubr
adc
xchg
adc
push
push
fcomp
pusha
(bad)
jmp
lahf
mov
into
xor
and
push
in
test
dec
xchg
add
std
push
mov
mov
ins
add
das
dec
pop
adc
add
aad
sbb
push
fsub
imul
sbb
cld
loopne
(bad)
popf
mov
add
jmp
rcl
add
pop
and
pop
mov
(bad)
cmc
dec
repz
mov
outs
push
pop
test
jo
(bad)
das
js
sub
jl
fdivr
fs
xchg
adc
scas
jmp
cdq
push
aaa
inc
loope
mov
sbb
pop
mov
push
nop
ins
sub
or
stos
xchg
test
sub
mov
into
pusha
xchg
ret
cmc
mov
jmp
xchg
xchg
adc
fisttp
retf
int3
jnp
lahf
sub
or
dec
sub
dec
outs
sub
sbb
sbb
fisub
int3
dec
retf
xor
push
dec
fs
dec
add
xchg
shl
mov
mov
jp
std
leave
ret
push
pop
pop
repz
movs
sbb
es
mov
loopne
xchg
xor
test
ret
mov
pop
mov
pop
push
js
sub
push
fdivr
adc
retf
sub
mov
pop
dec
je
out
pop
inc
sti
(bad)
jmp
jg
xor
jge
sbb
sub
mov
adc
xor
mov
mov
sbb
pushf
push
aad
jmp
ss
rol
outs
add
pop
cmp
pop
popf
mov
out
xchg
sbb
pushf
xchg
jb
jge
div
jecxz
jb
sub
or
std
test
mov
nop
dec
sub
mov
iret
jge
jo
and
(bad)
test
adc
stos
cmp
inc
ins
jnp
mov
inc
sub
ins
dec
cmc
push
fs
jns
push
dec
cs
xor
sub
(bad)
and
mov
pop
jmp
push
add
loop
push
repnz
jmp
pop
(bad)
pop
pop
xor
xchg
xchg
leave
mov
mov
add
push
xlat
cdq
jl
icebp
mov
xor
push
mov
imul
mov
pop
test
dec
data16
test
imul
jne
inc
out
or
xchg
stc
add
jge
xchg
shl
sub
adc
test
fcomip
dec
add
push
test
test
xlat
cmp
cmp
inc
repz
hlt
shl
addr16
cmp
or
cmp
xchg
(bad)
xlat
test
jno
xchg
ror
mov
jg
sub
push
push
repz
stc
sbb
jns
push
repnz
repz
pop
(bad)
fst
int
mov
add
pop
aam
push
cmc
or
pop
lahf
mov
fsubr
xor
movs
sbb
dec
loop
adc
push
or
push
rcr
js
in
movs
outs
mov
or
stc
aam
test
push
inc
mov
hlt
mov
rol
push
push
sar
mov
sub
(bad)
(bad)
fsubr
inc
test
retf
mov
xor
jl
xchg
jb
xchg
mov
cmp
arpl
push
adc
inc
or
inc
xor
popw
cmps
test
inc
mov
sti
push
vpmovm2q
not
pusha
stos
daa
rep
sbb
xchg
mov
jl
mov
xor
fcmovnu
cmp
cmc
mov
xchg
call
lahf
ret
mov
rcr
test
(bad)
jno
pop
push
int3
sbb
xchg
(bad)
dec
ret
sbb
pusha
out
mov
not
jb
xor
pop
or
lods
into
pop
dec
inc
mov
lods
push
mov
fninit
gs
mov
pusha
movs
retf
shr
cdq
mov
imul
rol
loop
shl
adc
mov
imul
in
xchg
movs
scas
rcl
xor
pop
adc
push
add
aam
pop
jae
sub
into
addr16
out
ins
enter
sbb
fstp
pop
icebp
pop
int
sub
out
rcr
test
inc
cmps
inc
push
add
pop
inc
call
out
xrelease
test
fimul
or
mov
retf
fucomi
shl
fnstsw
mov
lea
mov
adc
dec
lods
sub
jp
pop
mov
push
scas
add
push
jmp
movs
sub
xlat
dec
dec
xor
pop
(bad)
in
stos
jne
and
xor
add
aam
xor
mov
pusha
adc
mov
inc
push
fild
cmps
retf
cmp
jb
jl
mov
fisttp
(bad)
in
adc
mov
mov
pushf
adc
sub
out
loopne
inc
and
mov
jnp
or
sub
dec
test
fidivr
mov
shr
inc
mov
jmp
xor
jne
cmp
popa
dec
das
or
inc
mov
xor
xor
sub
or
adc
retf
aam
dec
inc
repz
ins
js
cld
cmp
jno
or
imul
shl
adc
out
fucompp
pop
xchg
shr
pop
call
pop
stos
mov
push
cld
xchg
mov
cld
cwde
mov
scas
lahf
mov
adc
xor
or
es
clc
add
mov
mov
mov
inc
inc
dec
cmps
gs
test
push
outs
mov
dec
cmps
scas
mov
sub
dec
ret
push
mov
push
rcr
xor
pop
xor
std
hlt
mov
jmp
call
sub
sbb
sub
push
pop
hlt
pushf
retf
imul
mov
push
inc
fist
dec
mov
cmp
(bad)
iret
dec
push
sub
mov
scas
sub
push
scas
mov
(bad)
push
enter
rol
in
fadd
xchg
iret
leave
pushf
cs
aas
and
jns
repnz
outs
adc
pop
or
in
retf
fs
arpl
adc
popf
(bad)
mov
repnz
bnd
pop
pop
ins
adc
jno
lahf
jne
cmp
das
jp
pop
sbb
cld
bound
adc
push
add
out
retf
stos
or
pop
sahf
jo
fld
and
inc
mov
les
jbe
xor
cld
mov
cld
pop
jno
sub
dec
nop
in
adc
(bad)
(bad)
mov
adc
test
add
cmp
sbb
pop
pop
repz
or
push
dec
jge
push
jo
add
xor
xchg
stos
sub
inc
inc
and
sub
dec
jl
push
lahf
mov
xor
frstor
mov
mov
push
mov
jge
(bad)
fcom
jmp
push
adc
daa
repnz
push
add
jmp
cmp
cdq
jmp
scas
pop
xor
adc
dec
cs
fcmovnb
aas
lock
and
inc
sub
pop
lahf
mov
std
pop
rol
jne
cld
js
ins
(bad)
cdq
sbb
push
sub
lea
xor
movs
addr16
push
mov
jns
jge
xor
ss
push
dec
idiv
cli
out
pop
retf
adc
mov
cmps
pop
sub
mov
dec
sbb
mov
dec
cwde
lea
cmp
or
jbe
das
and
inc
dec
(bad)
jb
cmp
mov
push
push
dec
push
dec
mov
mov
test
ffree
test
popa
inc
xchg
arpl
cmp
pop
xchg
adc
xor
ror
jecxz
cmp
stc
jne
cwde
xchg
sub
pushf
xor
dec
sbb
and
or
imul
nop
(bad)
stos
(bad)
mov
jg
aad
bound
mov
cli
or
cld
cmp
jbe
arpl
inc
mov
mov
sub
xor
jg
sbb
ins
test
cwde
sbb
std
push
jmp
in
stos
and
push
shl
pop
push
(bad)
int3
push
ds
sub
fcomp
mov
test
cli
loopne
cld
lods
ss
pop
sub
cld
mov
adc
jmp
inc
mov
push
mov
adc
ins
sub
jno
ret
fs
test
jns
or
xchg
pop
fcomp
sub
lods
push
dec
mov
push
sub
xchg
pop
adc
cmp
jg
mov
xor
fcom
fisubr
lods
mov
retf
rcr
jo
jmp
popa
call
cld
jmp
sbb
inc
mov
push
push
stc
add
mov
push
mov
jne
dec
jns
dec
addr16
jmp
jmp
repz
xchg
std
aaa
cmp
push
in
dec
jno
bound
sar
jecxz
(bad)
fcom
cmp
xor
popa
mov
mov
xchg
cmp
jmp
ret
in
mov
or
out
adc
push
mov
jno
test
and
scas
icebp
rcr
repnz
sbb
jg
retf
push
rcr
sub
ja
(bad)
in
mov
lods
test
push
sub
sti
out
sbb
pop
inc
pop
popf
inc
sub
pop
repz
jno
(bad)
in
sub
xchg
(bad)
lods
imul
adc
call
aad
mov
dec
rol
pop
mov
rcr
dec
(bad)
shl
cmp
or
dec
fisttp
xor
lea
test
mov
xchg
adc
or
pop
imul
div
adc
mul
leave
loopne
pop
(bad)
out
daa
inc
xor
push
mov
or
mov
cmc
sbb
push
cld
sub
push
outs
cmc
pop
int3
(bad)
push
rol
dec
(bad)
je
in
sub
adc
(bad)
cmp
out
enter
push
loop
push
inc
cmp
call
add
xchg
repz
and
mov
pop
mov
in
fild
dec
dec
pop
jns
or
repnz
fist
jae
jp
push
(bad)
shl
ficom
xchg
pop
xchg
push
xchg
mov
fisubr
push
sub
out
push
ret
push
scas
je
pop
cmp
not
mov
mov
repnz
xchg
fld
pop
bound
aad
adc
pop
das
or
pop
retf
je
pop
jge
and
rcr
mov
scas
fisttp
repz
sahf
xor
push
ret
xchg
lock
push
mov
sub
inc
pop
push
inc
jecxz
out
pop
inc
fs
lods
jo
(bad)
dec
add
retf
push
cmp
mov
cmp
mov
xchg
jg
mov
clc
adc
fcom
inc
pop
mov
cdq
or
mov
mov
cmps
and
jge
out
jge
and
cmc
pushf
popf
dec
fstp
js
cld
pop
lahf
lods
les
hlt
test
push
xchg
movs
pop
mov
icebp
rcl
shr
ret
imul
sbb
cmps
outs
gs
push
xor
dec
mov
and
in
inc
stos
fld
cmp
pop
xchg
push
cmp
jmp
push
pop
adc
inc
push
or
inc
imul
loopne
inc
add
pop
sub
jmp
inc
aam
xor
xor
outs
xor
ror
test
out
xor
lea
and
lahf
popa
lea
je
sub
aas
or
sbb
cmps
vminpd
push
push
aas
stos
mov
cdq
xor
push
inc
mov
bound
inc
aad
in
cmp
jecxz
pop
test
add
jl
ds
ins
ins
cmp
scas
call
mov
fsub
mov
(bad)
loopne
adc
xchg
neg
cmc
inc
or
mov
mov
mov
movs
cs
daa
cmps
xchg
adc
movs
ror
inc
gs
jbe
mov
pop
rol
(bad)
cmp
push
imul
int
adc
xor
sub
mov
loopne
mov
idiv
dec
push
mov
pop
push
pop
add
mov
push
inc
enter
aam
cdq
jbe
ret
(bad)
pop
sub
shr
fidivr
pop
inc
mov
add
pop
pop
test
sub
not
pop
outs
sbb
adc
jnp
std
nop
adc
out
jb
inc
dec
jp
fstp
repz
pop
mov
pop
mov
ss
into
sub
jmp
dec
cld
dec
and
lahf
imul
bnd
imul
dec
cmp
push
scas
inc
sahf
cli
fwait
enter
push
pop
fisttp
or
in
cmp
ins
jno
lds
xchg
cmp
dec
add
iret
mov
repnz
enter
push
add
or
mov
aas
fcom
jo
fwait
sar
cwde
into
xchg
sub
or
cmp
push
mov
rcl
int
mov
xor
dec
stc
pop
test
cmp
sbb
add
mov
call
adc
add
fdivr
int
xchg
outs
mov
call
daa
push
popf
outs
(bad)
fidivr
push
sbb
mov
push
das
dec
xor
mov
mov
outs
stos
popf
xchg
xlat
jecxz
jge
sub
sahf
jge
dec
push
sbb
pop
ret
iret
mov
ret
mov
mov
xchg
ins
scas
popa
mov
cmp
and
scas
(bad)
std
cmps
lods
stc
icebp
lahf
inc
sbb
push
scas
push
mov
lods
sbb
(bad)
jno
scas
nop
jbe
scas
and
xor
mov
push
fnsave
adc
leave
jmp
or
sbb
jge
jb
fstp
pop
psubb
pop
cmp
cld
sub
adc
retf
jae
sbb
leave
fild
xor
jne
adc
fnstsw
jmp
fistp
mov
sub
pop
ins
loope
inc
or
call
popf
add
ins
adc
pop
push
shl
adc
fistp
mov
push
ins
mov
ret
mov
inc
rcr
cmp
loope
ror
rcr
mov
or
dec
lahf
push
es
xchg
sub
ret
test
lods
in
stos
ja
repnz
rcl
out
ret
xchg
jmp
mov
fstp
int3
jb
sbb
js
xchg
fs
sbb
hlt
out
outs
je
push
mov
xlat
popf
ins
push
xor
idiv
fild
addr16
out
je
jne
ins
xchg
inc
push
inc
inc
sub
cld
cld
mov
mov
sbb
mov
push
clc
frstor
ins
enter
mov
inc
mov
cmp
add
mov
inc
or
outs
xlat
cmps
mov
mov
jns
pop
mov
(bad)
lods
jge
stos
clc
mov
push
es
push
pop
pusha
inc
mov
pop
in
aas
mov
push
pop
(bad)
and
sub
fwait
mov
mov
in
sti
sub
cmps
shl
mov
mov
sbb
shl
outs
adc
aam
dec
push
xlat
les
push
scas
int
in
daa
sub
xlat
mov
mov
mov
jbe
leave
jecxz
mov
gs
jmp
ret
pop
mov
retf
popf
jp
or
pop
lods
pop
dec
movs
(bad)
cmp
mov
sub
sbb
fldcw
mov
xchg
jg
arpl
push
adc
xor
cld
dec
mov
push
ss
pop
inc
retf
sub
das
mov
int
repnz
cmps
cwde
pop
mov
pop
(bad)
push
mov
mov
push
enter
adc
xchg
les
das
loop
and
lods
in
sub
shr
lods
sub
pop
push
ret
jns
and
adc
xor
iret
retf
push
fistp
cmps
ret
jmp
fistp
sbb
mov
cmps
cs
or
sbb
mov
push
aaa
cmps
icebp
sbb
test
xlat
push
add
stos
inc
xlat
mov
popf
cmp
mov
dec
pop
mov
xor
jns
pop
or
push
pusha
in
fsub
pushf
fidiv
xchg
inc
(bad)
fst
pop
and
dec
adc
cmp
pop
mov
mov
mov
push
jge
jmp
scas
aaa
es
mov
das
fmulp
add
stos
(bad)
cmp
es
jg
js
sub
xor
adc
xchg
test
aad
and
jbe
ja
cmp
pop
lods
mov
xchg
fsub
fsubr
mov
rol
test
out
(bad)
xchg
push
aam
and
js
mov
in
sbb
mov
mov
into
and
jno
xlat
pop
mov
hlt
in
sbb
pop
push
cmps
faddp
fs
sbb
fdiv
ins
shr
dec
adc
rol
jo
and
or
push
dec
and
popf
dec
rcr
adc
arpl
and
pop
mov
fsubr
jnp
js
out
in
and
cs
mov
jg
imul
lahf
jmp
sbb
in
idiv
pusha
fstp
out
iret
xor
sbb
sbb
mov
and
sub
sbb
mov
cmps
ret
mov
ins
in
aas
sbb
xchg
movs
sub
push
sahf
enter
sub
outs
jae
jne
iret
add
mov
pop
outs
push
mov
movq
shl
or
das
scas
mov
push
mov
sbb
outs
jp
mov
inc
adc
xadd
jl
add
sbb
fld
cmc
pop
jns
jnp
test
mov
lock
mov
or
cmc
push
xor
pop
movs
jno
lea
mov
cmp
movs
and
in
cmp
aam
sub
and
cmp
lea
pushf
scas
mov
sbb
outs
pop
mov
jns
cmc
inc
jo
dec
dec
or
icebp
fisubr
out
pop
imul
jle
and
sbb
ret
push
les
icebp
and
sbb
pop
stc
es
fdivr
imul
pushf
and
mov
and
movs
mov
out
retf
retf
ins
sbb
jnp
outs
cmp
jecxz
sub
mov
cmps
sbb
ins
add
ror
popa
call
loop
jmp
test
pop
js
(bad)
adc
pop
ret
inc
retf
mov
lahf
cmp
xor
mov
sub
push
push
inc
push
sub
mov
and
stos
ja
test
stos
je
popf
fucomp
jb
pop
dec
mov
shr
retf
jmp
and
aaa
nop
adc
int
push
mov
ret
jb
xor
gs
ins
and
cmc
fs
(bad)
cmp
push
adc
rcl
mov
adc
xchg
in
hlt
adc
mov
ret
pop
int
repz
adc
push
or
test
imul
mov
jg
mov
mov
pusha
mov
cmps
add
push
mov
daa
imul
test
data16
outs
inc
imul
jae
pop
inc
push
push
push
sbb
fwait
inc
aad
xlat
test
cmc
sub
in
mov
pushf
in
inc
inc
adc
push
push
push
(bad)
lods
sbb
cmp
inc
push
stc
ins
pop
jmp
(bad)
pop
sub
sahf
fild
push
inc
push
test
mov
dec
dec
jne
adc
fsubrp
xchg
inc
fidivr
rcr
pop
adc
shl
push
repnz
mov
mov
adc
test
fist
fwait
cmp
mov
mov
out
mov
push
ret
test
aad
adc
ret
jns
mov
mov
aam
rol
mov
mov
std
out
pushf
xchg
out
leave
mov
ficomp
sti
fwait
cmp
and
int
or
ins
pop
mov
fist
aas
dec
stos
and
in
inc
test
dec
fisttp
mov
sbb
(bad)
mov
lock
cwde
imul
arpl
test
retf
mov
lods
sub
popa
(bad)
cs
and
dec
fcom
scas
test
icebp
js
push
dec
jno
das
nop
sbb
sub
bound
cmovp
xchg
cld
xor
dec
jmp
retf
cld
aam
mov
push
sub
popf
jmp
lahf
mov
push
pop
mov
aad
cmps
dec
arpl
jmp
mov
jmp
pop
push
repz
test
shr
sub
das
sub
jle
test
fisubr
adc
xchg
dec
xchg
push
lahf
lahf
jns
fcmovu
or
push
mov
xchg
outs
(bad)
aas
js
mov
xrelease
shl
jmp
add
or
sbb
xchg
iret
sbb
push
or
das
iret
jnp
or
pop
adc
mov
dec
inc
ror
mov
cmp
iret
or
sub
push
cmc
mov
into
(bad)
aad
mov
cld
pop
push
adc
aad
adc
dec
in
xchg
or
jnp
das
sbb
jo
(bad)
enter
scas
xchg
or
mov
xor
push
sub
inc
call
jecxz
popf
aaa
into
shl
pop
jmp
sbb
loop
xor
dec
sahf
mov
mov
adc
pop
sbb
sbb
out
ins
inc
add
pop
fist
cmps
cs
push
movs
cmp
xchg
sbb
mov
inc
clc
rol
xlat
mov
into
addr16
shl
jmp
cmps
cdq
dec
push
xchg
nop
movs
(bad)
and
mov
sbb
in
out
dec
jmp
xor
xchg
leave
and
aad
std
leave
aam
ins
dec
(bad)
cmp
test
fcmovnb
pop
inc
(bad)
ins
out
retf
jae
fdiv
ficom
sbb
(bad)
pop
stos
push
bound
popa
fisubr
xchg
or
imul
xor
or
cmp
push
push
mov
add
adc
aad
adc
sbb
retf
adc
mov
iret
cwde
push
inc
sub
out
repz
mov
scas
pop
jne
jl
mov
fwait
xor
inc
vdivps
mov
mov
cmp
mov
sar
adc
loop
push
in
fnstsw
ror
mov
shl
pop
shr
mov
mov
mov
jno
das
cmps
fwait
stos
mov
push
adc
mov
dec
mov
aaa
and
inc
cmp
movs
int3
adc
mov
mov
in
and
mov
imul
outs
push
shr
mov
push
mov
jo
sbb
jp
push
and
adc
mov
xchg
cmp
sahf
arpl
ins
pop
and
sbb
ja
add
stos
stos
neg
icebp
mov
inc
cmp
fild
inc
jg
sahf
pop
adc
(bad)
in
mov
jne
shr
push
adc
sahf
jl
pop
stos
imul
jae
int
in
ds
std
mov
jbe
das
jle
fwait
bsr
pop
loopne
sbb
sbb
int3
xlat
xor
stos
(bad)
(bad)
pop
inc
adc
or
xor
shl
add
add
pop
cmp
or
retf
pushf
adc
out
fsubr
out
cmps
les
std
jmp
cdq
das
int3
lods
or
jnp
cli
movs
in
mov
adc
ficomp
mov
push
nop
sbb
inc
pushf
adc
pop
dec
jb
sub
iret
mov
adc
inc
retf
jne
nop
dec
sbb
in
test
mov
mov
push
cmp
dec
idiv
dec
sub
mov
add
jecxz
stos
sub
mov
fnstcw
test
push
pop
xor
inc
push
movs
sbb
xlat
push
mov
repz
mov
push
mov
(bad)
into
or
out
pop
into
jecxz
push
mov
cmps
pop
and
fist
mov
cs
pushf
sbb
(bad)
and
mov
call
aas
aam
sub
std
js
(bad)
out
rol
mov
outs
mov
movs
shr
adc
movlps
mov
mov
mov
imul
lahf
sbb
add
mov
out
cmp
int
jg
push
cmc
ficomp
ins
test
or
jmp
push
retf
sbb
xchg
leave
scas
aaa
lods
and
add
inc
jno
pusha
retf
inc
xchg
cli
aas
loope
call
popf
xchg
rcpps
popa
adc
addr16
rcl
jmp
add
cmps
xchg
xor
push
mov
inc
enter
adc
repz
loope
pop
jne
inc
mov
ficom
out
shr
or
out
test
lock
dec
daa
loopne
int3
aas
pop
pop
addr16
push
pop
and
(bad)
dec
inc
outs
push
xchg
jle
pop
daa
xchg
xchg
mov
xchg
add
xor
pushf
xchg
inc
and
popf
retf
push
jne
sbb
sbb
sub
cs
mov
in
mov
sub
imul
adc
push
pop
xlat
sahf
pushf
cli
jmp
mov
test
cli
fidivr
shl
jle
rol
push
jne
sbb
lods
inc
fadd
adc
test
in
into
cmc
scas
pop
push
loopne
in
dec
xlat
xor
test
jmp
movs
mov
xor
lahf
xchg
test
aas
cmp
mov
xchg
xor
fbld
nop
push
jbe
pop
push
rol
inc
mov
sbb
pop
je
cmp
sbb
(bad)
retf
push
jae
into
push
mov
aas
popa
sub
inc
mov
sbb
lahf
mov
int
lods
or
or
mov
ins
imul
push
outs
fbstp
test
clc
gs
aaa
sbb
sti
data16
dec
fisttp
dec
les
add
ja
xor
jmp
xlat
mov
fs
cmp
sub
add
lods
outs
icebp
jno
xlat
in
pop
jmp
add
(bad)
push
or
mov
test
shr
sbb
pop
mov
xor
dec
inc
cmp
mov
(bad)
fwait
pusha
test
int
pop
cmps
mov
adc
jg
xor
jmp
je
retf
loop
sub
imul
cmp
in
mov
fnsave
mov
adc
ret
(bad)
aam
sar
xor
fwait
dec
xchg
test
enter
inc
addr16
mov
sbb
sub
mov
out
mov
je
loop
pop
adc
xor
scas
into
call
cdq
dec
repz
add
div
popa
pop
ficomp
(bad)
mov
addr16
or
mov
inc
mov
cmp
push
or
fstp
and
scas
(bad)
mov
repnz
imul
sub
push
outs
call
(bad)
adc
and
pop
mov
pop
es
mov
sti
cs
mov
hlt
inc
xor
xor
(bad)
out
adc
imul
in
popf
jl
fdivp
mov
add
jge
xchg
xor
mov
(bad)
push
les
jmp
imul
sub
jb
cld
cs
aad
in
call
es
fistp
mov
add
pop
jp
add
cmp
push
outs
sbb
push
movs
xor
loopne
call
shl
push
inc
jbe
sub
add
imul
mov
std
repz
mov
or
shr
mov
in
jbe
stos
out
fistp
mov
shl
add
out
pop
lods
fbld
retf
and
adc
das
sbb
pop
adc
add
pop
mov
sbb
ins
jmp
ret
fdivr
mov
pop
mov
jae
aam
or
mov
loope
mov
lods
cmps
or
jp
dec
jecxz
push
inc
cmps
je
dec
cmp
movups
xchg
lods
(bad)
xor
dec
push
pop
cmp
leave
xor
add
cmps
pop
push
and
ins
cmp
sti
mov
lods
fsub
dec
popf
das
addr16
aas
scas
ret
ds
pop
ins
push
iret
mov
mov
or
jg
cld
dec
jb
or
pop
outs
retf
(bad)
in
dec
enter
xchg
arpl
ins
(bad)
movs
bound
sub
ror
stos
cli
ret
mov
loop
and
or
push
lods
dec
sub
imul
rcr
cmp
sti
adc
pushf
out
mov
das
inc
loop
gs
xor
dec
push
outs
std
mul
jge
je
ins
push
sahf
sub
push
and
aaa
sub
sbb
sbb
(bad)
jmp
jp
test
cmps
in
inc
test
pop
(bad)
(bad)
fcom
ins
dec
jge
lahf
into
popa
xor
(bad)
fisub
ds
(bad)
push
popf
sub
jmp
inc
imul
stos
jg
and
retf
rcl
jns
pop
cmp
xchg
call
fcmovbe
xor
mov
add
xchg
shr
xchg
adc
sub
fsub
xchg
(bad)
ret
nop
cmp
mov
jae
ins
adc
jle
enter
das
and
mov
ins
jo
jge
leave
sbb
mov
push
outs
cmc
sti
shr
sbb
outs
out
popf
xor
enter
ins
pusha
aaa
pop
xchg
xor
enter
fnstcw
jl
hlt
push
ja
sub
adc
mov
xchg
adc
jmp
imul
gs
sub
dec
lahf
stos
xor
dec
arpl
je
scas
or
inc
xor
jmp
sub
ret
fisttp
mov
cwde
add
mov
stos
mov
adc
pop
pop
jmp
cmp
pop
movs
xor
jnp
sbb
push
mov
ins
mov
hlt
loopne
test
fdiv
(bad)
cli
test
loopne
sti
xchg
pop
mov
xchg
jp
jae
pop
pop
test
das
lods
cwde
push
jo
xchg
cwde
enter
jb
enter
push
scas
mov
(bad)
loopne
rcr
add
pop
in
lods
jp
out
mov
sub
jno
gs
(bad)
les
add
fwait
mov
dec
mov
jmp
bound
and
sbb
gs
xor
out
inc
icebp
daa
sbb
fdivr
ja
sti
inc
jnp
ins
into
call
sbb
loop
adc
cmp
into
adc
cmp
std
fcomi
jns
adc
adc
sub
xor
ins
mov
mov
mov
dec
mov
and
lods
movs
sub
jbe
or
dec
jne
imul
ins
inc
and
shr
mov
stos
mov
adc
ret
mov
jecxz
bnd
das
or
out
mov
call
and
rol
fwait
xlat
mov
mov
add
push
adc
mov
pop
call
cmp
lods
push
in
repz
cli
fsubr
sub
jbe
jno
jbe
and
mov
pop
inc
cmp
xor
dec
daa
popf
fmul
shl
adc
jns
ror
cmp
add
adc
xor
xchg
je
sub
iret
fist
jbe
iret
xor
cmps
leave
push
mov
out
fcmovu
cmp
sbb
pop
push
ret
je
sti
test
(bad)
mov
push
ins
push
lods
mov
pop
push
and
fisttp
retf
int3
repz
retf
xchg
idiv
cmp
jmp
mov
stos
(bad)
jp
cmc
daa
xor
call
sbb
jbe
xor
jg
cmp
scas
xor
xor
dec
arpl
repz
mov
test
inc
enter
rol
push
arpl
out
jmp
and
push
dec
cmps
lds
jns
pushf
fldcw
std
and
jecxz
cmp
(bad)
push
shr
shl
cld
mov
cmp
xchg
sub
jbe
sbb
ret
sahf
stos
pop
cmp
scas
mov
dec
inc
ins
add
push
adc
cmp
cmp
inc
sbb
push
fcomi
pop
lods
(bad)
cmps
test
in
inc
mov
mov
inc
push
loopne
xchg
mov
xchg
repnz
inc
mov
int
dec
mov
pop
in
mov
fstp
pop
and
(bad)
and
inc
lock
cmp
aas
xchg
dec
lea
sbb
push
fs
jle
mov
popf
rol
jae
fcmovne
addr16
inc
sub
out
push
xor
lds
and
cmp
(bad)
cmp
pop
mov
lea
mov
pusha
lock
xor
cwde
mov
(bad)
shl
push
or
pusha
loop
mov
arpl
fmul
cdq
sbb
sub
fiadd
inc
jmp
and
cmp
arpl
add
loop
xor
xor
sbb
adc
outs
xchg
(bad)
es
call
jne
inc
jo
fldcw
shl
in
leave
aaa
(bad)
and
jae
ror
fsub
or
(bad)
jle
mov
mov
mov
sbb
inc
and
retf
sbb
dec
das
repz
sbb
jg
mov
int3
dec
sub
mov
pop
cmp
rcl
jmp
mov
add
pop
sub
jmp
pop
test
adc
cmp
mov
jp
xchg
jnp
sub
add
jne
cvtps2pi
adc
in
dec
mov
hlt
dec
out
xor
jns
xchg
jns
xchg
leave
push
and
dec
mov
sub
push
add
retf
sub
add
cld
icebp
aad
repz
cmp
movs
cmp
jp
in
jo
test
dec
cwde
or
ins
adc
bound
lock
fild
sbb
adc
push
ins
push
arpl
stc
shr
inc
jo
sbb
pop
jge
adc
mov
jb
adc
jnp
pop
out
popf
scas
cdq
sub
scas
lahf
cmps
mov
mov
sub
jg
scas
pusha
ss
les
jae
mov
stos
fldcw
jp
add
cmp
push
xor
cdq
inc
gs
mov
pop
and
jge
std
jp
leave
shl
sub
jmp
cmp
retf
xchg
fbstp
mul
mov
leave
arpl
cmp
lahf
sub
int
aad
xor
(bad)
cld
test
outs
out
pop
cmp
sub
js
cmp
hlt
push
in
fcom
and
pop
xchg
sti
imul
stos
lds
mov
sbb
jns
add
ret
mov
retf
mov
ins
xchg
fwait
mov
fimul
pop
inc
inc
or
nop
aam
leave
fsubr
push
mov
add
ficomp
push
cmc
fild
cs
dec
rcr
lock
arpl
jmp
hlt
mov
test
inc
aam
into
mov
lock
mov
loop
enter
jns
inc
push
push
dec
ins
xlat
ficomp
sbb
pop
fnsave
add
inc
and
or
mov
std
sbb
ins
inc
jbe
lahf
xor
push
xchg
(bad)
lock
cld
out
pop
scas
iret
or
popf
jg
fbstp
jmp
sub
dec
fistp
inc
xlat
cmp
call
dec
sub
xchg
jae
pusha
mov
sti
push
dec
cmps
jp
pop
xor
into
jg
pop
int3
inc
iret
pop
and
or
xchg
das
sbb
dec
es
inc
cmp
sbb
xchg
sbb
pop
sbb
repnz
pop
sbb
mov
push
add
sti
cwde
pop
popa
pusha
pop
arpl
and
mov
int3
jp
ins
mov
push
or
cmp
jecxz
sar
jno
inc
cld
push
in
bound
jns
mov
sbb
xchg
xchg
leave
dec
movs
aad
sub
pusha
stos
jp
loope
add
push
fstp
mov
xor
sbb
fs
sbb
pop
lods
jae
adc
jb
ins
das
(bad)
(bad)
test
sub
push
mov
xor
inc
movs
push
mov
cmps
xchg
in
inc
scas
and
test
jmp
jb
and
xchg
or
fcom
outs
jb
inc
lods
jne
inc
mov
ret
stos
push
test
sbb
cld
enter
dec
mov
hlt
sub
xchg
xchg
pop
rcr
xor
out
push
xor
sub
test
test
rcr
or
iret
cwde
push
xor
push
retf
mov
in
xchg
pop
popf
jne
push
mov
dec
jb
fs
pop
cmp
add
mov
dec
and
in
cmp
mov
fs
ins
sbb
jno
rcl
sub
mov
cmps
xor
enter
mov
test
ins
leave
jmp
fucomi
lock
lock
and
lods
ret
xor
sub
cdq
mov
or
out
add
pop
sbb
retf
mov
adc
and
xchg
mov
ret
mov
push
cmps
das
push
sub
pop
inc
ja
mov
mov
adc
test
and
inc
push
add
cmps
jno
rol
pop
addr16
idiv
jle
adc
mov
call
add
mov
sti
push
jne
xchg
xchg
push
scas
cmps
sub
icebp
in
ret
push
lods
xor
jg
adc
loopne
mov
inc
int
outs
cmp
add
pusha
leave
gs
cmc
jno
cmp
bound
pop
clc
cld
loop
dec
aam
cdq
adc
das
and
dec
shr
test
xor
into
pop
jecxz
mov
adc
push
mov
lea
cmp
aam
test
mov
scas
sti
sbb
sbb
lahf
mov
pusha
sbb
jae
sbb
or
mov
pop
mov
pusha
dec
push
test
sub
pop
por
push
call
dec
ret
shl
test
xchg
pop
js
fisttp
mov
test
dec
push
(bad)
outs
test
popf
cdq
ins
cmc
cmc
inc
dec
jp
xlat
fmul
mov
sub
imul
jmp
mov
fwait
hlt
arpl
inc
popf
mov
jns
cmp
gs
sub
xor
rol
sbb
push
add
add
and
mov
sbb
pop
sub
lea
lea
lods
jg
xchg
out
or
jne
test
repnz
push
xor
mov
jge
retf
adc
pop
sub
(bad)
popa
adc
scas
adc
retf
jo
push
dec
sar
cmp
and
dec
loope
xchg
jbe
mov
cli
pop
fbld
jg
or
push
and
retf
das
call
std
mov
test
xchg
adc
pushf
inc
pop
(bad)
pop
dec
mov
or
or
aam
mov
aad
mov
jns
inc
dec
(bad)
cld
fsubr
imul
cdq
sbb
xchg
pop
mov
scas
gs
ficom
push
lods
sub
adc
or
test
mov
jae
pop
or
enter
mov
push
in
lock
clc
shr
outs
or
loopne
icebp
mov
xor
das
loop
fdivr
ret
adc
mov
push
add
lahf
loopne
pop
jp
(bad)
std
mov
sub
mov
xor
xor
mov
add
sbb
retf
sub
imul
repz
aas
aaa
cmp
out
mov
mov
mov
std
dec
(bad)
fldcw
mov
push
int
inc
mov
xlat
call
mov
scas
cmp
cld
bound
pop
mov
inc
je
test
add
fsub
test
and
movs
cmp
jmp
int3
jnp
(bad)
pop
sti
(bad)
ficom
inc
xor
sbb
mov
mov
jmp
fidivr
stos
fcomp
cdq
call
jne
pusha
push
sbb
and
gs
lods
pushf
daa
jo
adc
icebp
fdivr
pop
dec
jmp
cmp
pop
scas
popa
mov
inc
xchg
stos
mov
cmps
mov
pusha
aaa
jge
adc
sbb
sub
hlt
mov
rep
pushf
mov
bound
xchg
test
xchg
dec
pop
and
add
push
into
daa
inc
imul
enter
movs
cmp
dec
fdiv
add
cmc
xor
scas
mov
xchg
inc
int
push
ja
dec
outs
call
add
cmp
fadd
adc
jo
jo
add
bnd
ins
mov
punpckhdq
and
fisubr
aad
or
dec
pusha
mov
sbb
cmps
loopne
lahf
scas
sub
lea
adc
and
mov
cmp
adc
int3
into
in
cmp
mov
dec
cwde
push
xor
cs
xor
arpl
and
mov
sbb
push
pop
cwde
adc
push
loop
pop
xchg
xor
outs
loopne
jl
mov
fisttp
(bad)
cmp
cld
clc
inc
dec
push
sub
push
pusha
mov
and
push
lahf
stos
ficom
lods
je
das
or
pop
cmps
icebp
dec
sbb
cs
jge
sub
push
cmc
push
lock
enter
out
in
imul
sub
mov
es
xor
or
ss
dec
test
sub
and
push
jecxz
jmp
outs
nop
hlt
xor
and
fwait
call
adc
inc
xchg
jmp
push
pop
(bad)
mov
in
inc
mov
jmp
mov
divps
jae
mov
sbb
fld
lahf
and
inc
sbb
out
or
daa
pop
movs
xchg
push
mov
jl
dec
stc
pop
adc
mov
sbb
push
sub
in
mov
xor
sti
aad
cmp
out
scas
(bad)
push
iret
icebp
lock
mov
xchg
push
in
sbb
fwait
(bad)
cmp
adc
jb
enter
ficom
xor
call
push
pushf
jbe
pop
inc
clc
call
ss
jle
sbb
cmp
adc
mov
(bad)
jg
sub
dec
jp
loop
std
int
sub
mov
dec
xchg
and
add
dec
inc
nop
jns
ds
push
pop
mov
pop
in
pushf
adc
in
mov
cwde
mov
les
jmp
das
fs
mov
test
ja
dec
jg
push
mov
in
ror
cli
scas
push
(bad)
push
(bad)
inc
and
xchg
fist
clc
xlat
fwait
jmp
inc
(bad)
outs
jae
lods
jmp
rol
push
jns
inc
push
mov
push
inc
xor
cmp
add
dec
pushf
test
push
imul
mov
gs
jmp
and
or
retf
std
in
sub
cmp
sbb
sar
jbe
xchg
mov
movs
clc
pop
sub
jge
xchg
popf
jmp
or
cmps
and
jl
adc
cmps
xor
mov
and
add
xlat
stc
imul
push
arpl
dec
sbb
(bad)
movs
out
movs
push
sahf
aas
fiadd
adc
dec
sbb
inc
mov
jb
aam
dec
stos
adc
or
sbb
pop
xlat
xor
mov
adc
movs
retf
lea
lds
mov
pop
movs
mov
inc
sub
mov
dec
popf
jne
fstp
lods
push
cs
pop
push
jge
pop
push
adc
xchg
ret
cwde
test
cmp
sub
jp
jge
ret
cmp
fdiv
dec
aaa
pusha
data16
add
pop
idiv
fstp
mov
into
outs
in
xor
jg
unpckhps
pop
xchg
adc
inc
iret
iret
xchg
lea
cmp
sbb
lock
mov
imul
test
aas
aam
(bad)
aam
hlt
jne
xchg
jmp
sti
rol
stos
jmp
pop
pop
jne
push
mov
je
mov
movs
outs
popa
aad
dec
into
pushf
pop
loope
jg
jge
aaa
aad
outs
mov
pop
lds
cmp
int3
pop
ins
push
mov
push
cmp
jae
fistp
fs
out
mov
sbb
pop
and
(bad)
hlt
stos
jmp
pop
rcr
mov
ret
mov
retf
jo
xor
push
dec
adc
sbb
ret
jge
ins
in
and
mov
lahf
test
add
rol
pop
mov
leave
call
mov
ja
jge
xor
mov
popf
jle
adc
push
test
sub
lea
mov
sbb
add
mov
mov
push
mov
paddusb
mov
fs
xor
stos
xchg
adc
xchg
cmp
mov
mov
movs
xor
mov
das
push
jmp
sbb
js
inc
jmp
adc
dec
jp
imul
(bad)
mov
xchg
inc
inc
rcl
xor
dec
fisttp
jmp
mov
xor
icebp
xchg
sbb
repz
mov
sbb
enter
repnz
push
xor
jp
out
mov
mov
sahf
push
popa
call
(bad)
xor
cdq
pushf
mov
cmp
jmp
xor
iret
icebp
xor
das
int3
mov
sub
xor
outs
jno
in
pop
add
popf
jecxz
repnz
repz
mov
fsub
jns
lods
sbb
sar
mov
add
inc
mov
(bad)
jne
push
enter
cli
rcr
iret
mov
mov
pop
popf
repnz
lahf
movs
clc
and
pop
sqrtps
loopne
call
aaa
(bad)
outs
inc
push
sub
sahf
and
adc
cmp
cli
mov
sti
xor
mov
mov
push
cmp
les
mov
(bad)
jecxz
xlat
pop
dec
mov
scas
aaa
repnz
fdiv
loop
sub
sub
jecxz
lea
cmps
gs
mov
xchg
fdiv
jge
cmp
push
mov
sbb
pop
enter
rcr
mov
hlt
repz
add
sub
push
out
inc
and
fimul
mov
aaa
cwde
and
retf
hlt
es
add
sub
fldcw
fs
inc
les
hlt
jecxz
icebp
xlat
or
rol
jnp
jge
push
mov
enter
sbb
dec
sbb
xor
fldenv
shr
repz
lock
rol
int
xchg
clc
mov
lahf
je
fidivr
popf
inc
mov
repz
push
inc
clc
retf
cli
mov
add
or
sbb
aam
popf
adc
scas
popa
shl
and
repz
or
adc
mov
retf
outs
icebp
push
or
sbb
addr16
adc
dec
and
xor
das
call
sub
ins
pop
in
mov
shl
imul
imul
jl
inc
aad
dec
stos
mov
aam
lahf
cs
cmps
inc
shl
xor
movs
test
cs
mov
shl
pop
stc
sbb
aas
(bad)
jecxz
mov
inc
adc
call
sbb
add
pop
push
dec
push
jns
and
cld
mov
inc
sub
push
cmp
sbb
js
xor
or
scas
test
or
sbb
push
outs
fnstenv
cs
adc
dec
add
and
mov
xchg
push
xchg
hlt
divps
adc
fldcw
into
cmp
push
fcmovb
jae
or
jnp
retf
adc
dec
add
mov
mov
xchg
aam
mov
ins
sar
pop
stos
jae
adc
dec
je
hlt
sub
jmp
ret
cmp
pop
or
fwait
dec
adc
clc
enter
into
ins
cdq
dec
and
std
(bad)
push
loopne
ret
inc
std
popa
retf
js
or
sub
jmp
loop
ret
clc
mov
(bad)
push
xchg
and
jo
imul
(bad)
and
or
(bad)
shl
push
jmp
scas
inc
adc
pusha
sub
es
and
outs
arpl
loopne
cli
xchg
icebp
mov
outs
shl
pop
xchg
repnz
or
add
ja
ins
push
pop
ins
stc
mov
sub
ins
xor
push
xchg
cmc
dec
jmp
and
xlat
sbb
dec
repz
jmp
nop
sahf
mov
cmp
jge
jl
out
scas
(bad)
mov
pop
test
adc
sbb
dec
sbb
gs
popa
push
int3
mov
xor
pop
add
aas
jmp
push
inc
fcom
jge
div
scas
adc
xchg
sub
pop
mov
jnp
es
ficom
stos
fucomp
std
pop
mov
movs
sbb
into
or
rdtsc
aaa
pop
jbe
pop
xor
adc
and
das
push
bound
cmp
mov
push
sbb
outs
xchg
dec
repz
adc
xlat
(bad)
addr16
sub
or
repnz
dec
scas
mov
adc
mov
sar
neg
jns
sub
fstp
adc
or
dec
inc
not
jl
cld
int3
rcr
out
push
dec
or
movs
hlt
mov
nop
inc
(bad)
mov
ret
retfw
cmp
dec
or
sbb
(bad)
sub
push
retf
mov
fdivr
test
fld
rcr
xchg
daa
pushf
outs
add
sbb
dec
popf
sub
out
xchg
adc
inc
sbb
xor
mov
mov
int3
lea
dec
cmp
jb
xchg
sub
adc
aad
scas
jmp
add
adc
lds
mov
nop
pop
pop
dec
cdq
dec
and
mov
adc
retf
mov
mov
inc
mov
sub
jb
pop
out
lods
and
aam
xor
xchg
out
sub
call
aad
inc
ins
es
retf
movs
dec
jns
(bad)
mov
jmp
push
adc
cld
jl
xchg
jl
into
call
dec
data16
call
jl
stos
(bad)
cdq
or
ins
fdivr
cli
adc
mov
or
dec
out
nop
cli
ror
pop
(bad)
jl
or
pop
call
mov
jecxz
inc
in
add
cmps
sti
fdivr
xchg
or
adc
mov
loope
(bad)
mov
dec
pop
fs
push
and
ins
fstp
mov
(bad)
mov
inc
in
std
pusha
sub
sub
(bad)
test
sub
xor
mov
sbb
xchg
popf
xor
sub
shl
loope
imul
fcom
sub
add
sub
fcom
jne
(bad)
jmp
sti
push
pop
and
jl
xchg
loop
adc
shl
adc
loopne
sti
scas
neg
bound
out
push
pop
pop
xchg
add
jb
cdq
mov
sbb
xchg
in
push
js
sbb
sti
stos
sbb
stos
das
jb
out
ror
sbb
(bad)
fcomp
xchg
dec
mov
(bad)
rep
pop
clc
into
(bad)
lods
out
mov
rol
xlat
shr
lods
xchg
push
sbb
scas
mov
and
dec
scas
pop
scas
sub
add
fld
jmp
mov
dec
pop
sub
push
sbb
xchg
cmp
pop
sahf
test
cmp
cmp
int3
test
cwde
ret
xlat
pop
or
lahf
fdiv
(bad)
retf
push
cmp
(bad)
or
push
mov
cwde
test
js
(bad)
cld
cmp
retf
sub
push
(bad)
dec
lods
mov
and
enter
cs
mov
mov
mov
sahf
stos
arpl
jp
dec
jmp
xchg
retf
shl
and
into
add
and
jle
movs
dec
xor
sub
push
fild
lods
jmp
adc
xchg
scas
cmp
fsubr
or
inc
pushf
mov
jg
xor
adc
pop
sbb
mov
push
adc
sub
out
xchg
inc
jmp
sub
mov
sbb
call
and
sahf
outs
fdiv
mov
push
sbb
cli
and
jae
movs
push
mov
retf
iret
jb
lods
outs
loope
mov
lods
cmp
(bad)
not
je
pop
es
cmps
mov
inc
cmp
into
pop
bound
pop
and
and
jb
inc
mov
mov
ins
xor
mov
sub
inc
sub
and
sub
xor
mov
addr16
into
test
scas
mov
and
fs
jmp
and
or
(bad)
push
outs
in
xor
mov
dec
mov
stos
stos
fidiv
outs
xor
mov
rcr
inc
cmp
pop
(bad)
mov
lahf
mov
ror
fimul
mov
ret
mov
inc
cmp
jle
and
fsub
imul
(bad)
jmp
xor
test
cmc
jl
jne
daa
mov
and
jbe
dec
jne
ficom
cli
mov
inc
loop
sub
sbb
and
movs
and
test
xor
sbb
idiv
xor
mov
rol
mov
adc
add
xchg
jno
adc
jae
div
fisubr
sti
push
push
je
loop
cmc
pop
les
mov
sbb
mov
jnp
push
dec
sub
mov
in
aad
fcmovnbe
sub
je
ins
jbe
cld
arpl
and
outs
xchg
cmp
(bad)
scas
dec
in
jecxz
(bad)
mov
jmp
adc
inc
das
int
imul
pop
xchg
mov
sbb
(bad)
shl
jmp
mov
adc
enter
sub
bound
les
xor
stos
pop
popf
outs
and
loopne
(bad)
mov
fdivrp
and
xor
mov
dec
in
cld
bound
inc
inc
stos
int
lea
cmp
cmp
cmc
adc
pop
mov
mov
ss
dec
dec
ja
scas
sub
push
jl
daa
mov
popa
xchg
jne
enter
jp
or
popf
in
rcr
fiadd
dec
mov
test
xchg
adc
call
cwde
push
fmul
enter
and
dec
aad
lods
test
fstp
out
fs
dec
pop
stos
repnz
mov
cmps
adc
iret
xor
repz
cmp
lahf
or
push
pop
stos
jne
(bad)
lds
mov
popf
dec
das
div
pushf
leave
add
jmp
pop
lods
or
xchg
sbb
adc
mov
(bad)
ja
gs
cmp
mov
sub
inc
(bad)
dec
cmp
jnp
imul
jge
jbe
test
(bad)
repnz
and
mov
jmp
mov
jmp
call
retf
call
pop
push
out
sub
cmp
mov
out
or
cmp
mov
jo
jb
ins
sub
ja
popa
ss
xor
jg
popa
jp
xor
in
clc
loope
and
lahf
out
mov
sub
mov
fucom
addr16
les
jl
mov
jle
push
xchg
ds
and
lods
mov
xchg
lahf
jecxz
jp
test
nop
push
fwait
arpl
ds
add
enter
cmp
rcl
imul
dec
mov
add
call
imul
pop
data16
pop
pop
mov
hlt
xor
xor
mov
mov
getsec
in
int
mov
jge
mov
or
clc
cmps
lds
mov
in
xor
and
imul
xchg
or
sbb
add
out
daa
inc
jp
ss
dec
mov
(bad)
hlt
and
stos
xchg
call
adc
fwait
mov
sbb
fst
cdq
aam
popa
push
mov
sub
mov
je
push
mov
scas
shl
or
push
pop
lea
or
sbb
xor
mov
add
pop
movs
sbb
sub
sub
or
ret
adc
std
cmp
cmp
js
or
or
popa
es
xchg
pextrw
sbb
or
and
(bad)
fimul
popf
rol
retf
mov
(bad)
xchg
mov
cmps
jae
xchg
jnp
fdiv
repnz
inc
push
pop
aaa
ret
add
call
cmps
das
repnz
sbb
cs
cwde
mov
fild
adc
mov
jne
sbb
scas
rol
push
push
shl
xlat
sub
push
jmp
out
inc
lahf
mov
das
js
mov
popa
xchg
jge
das
mov
imul
adc
jg
xor
imul
aam
and
icebp
fiadd
gs
imul
mov
popf
daa
out
xor
shl
pop
ins
call
inc
int
dec
ror
sbb
sbb
sub
push
into
add
pop
in
sub
fcomp
sbb
pop
sbb
dec
add
xor
imul
push
mov
repnz
cli
fld
sar
sbb
jbe
add
(bad)
sbb
call
stos
sbb
sbb
test
or
sub
add
xor
mov
jo
jmp
jg
test
repnz
outs
pop
scas
sub
mov
(bad)
cli
in
jp
int
push
dec
pop
scas
mov
xlat
cmp
dec
inc
stc
stos
sbb
jecxz
mov
xor
add
adc
xor
stc
xor
movs
idiv
inc
jb
pop
sub
fidivr
mov
push
mov
and
jl
sbb
scas
test
cdq
push
mov
pop
fmul
inc
add
fs
mov
cli
out
add
add
xlat
popa
push
nop
repnz
in
ficomp
jnp
jb
jno
add
push
cmps
xlat
push
sub
into
add
push
les
(bad)
(bad)
ss
cmp
imul
ret
pop
cmp
sub
cli
sub
jle
push
retf
dec
xchg
adc
nop
push
(bad)
fistp
les
imul
xchg
xor
shr
cwde
push
jp
ss
and
sub
loop
xchg
in
jmp
imul
cli
jbe
enter
cmp
into
lods
loop
mov
adc
cld
or
call
push
jnp
xor
fiadd
mov
push
mov
mov
iret
iret
mov
cld
and
jg
mov
daa
nop
jnp
daa
push
push
loop
mov
fs
dec
adc
sub
mov
xchg
push
ins
imul
ret
pushf
xchg
test
les
in
pop
add
mov
add
pop
arpl
pop
lahf
xor
ja
mov
cwde
(bad)
xor
inc
xchg
cmp
dec
iret
sbb
call
std
sbb
and
repz
repnz
je
std
xor
sub
ror
fldcw
cld
add
cmp
xchg
ds
adc
jnp
mov
lahf
scas
push
(bad)
ins
adc
addr16
jnp
fistp
sub
push
pop
mov
dec
mov
jae
repz
cwde
mov
push
sbb
shl
pop
mov
jae
mov
gs
icebp
sub
mov
outs
adc
bound
pop
retf
cdq
push
in
and
es
fnstcw
pop
jge
jmp
inc
test
out
push
and
mov
jno
inc
(bad)
push
repnz
cwde
pushf
mov
sahf
out
sbb
in
and
(bad)
fptan
inc
mov
(bad)
mov
call
add
push
aas
aad
mov
ss
or
outs
out
xor
add
push
or
mov
mov
push
inc
dec
(bad)
out
jp
cmp
aad
rcr
push
mov
pop
es
ds
sub
adc
mov
imul
jne
aas
sub
(bad)
je
sub
mov
not
and
cli
in
dec
outs
mov
imul
cwde
add
aam
or
pop
(bad)
jecxz
rcl
loope
add
and
leave
jno
dec
mov
enter
les
mov
fs
jle
repz
add
jmp
cmp
pop
inc
dec
repz
jmp
mov
(bad)
pop
ret
and
xor
pop
add
pushf
pusha
pusha
into
add
fsubr
test
jnp
mov
mov
fwait
enter
adc
loope
push
sub
inc
inc
int
shr
add
retf
out
rcr
mov
mov
dec
xchg
repz
cs
xchg
in
test
and
mov
and
dec
enter
mov
xchg
xor
inc
pop
cmp
pop
idiv
add
arpl
scas
adc
cwde
lea
loopne
test
pushf
add
xor
aam
adc
mov
and
shl
(bad)
mov
xchg
(bad)
cmp
adc
das
lods
sub
ficom
pushf
das
adc
les
jnp
dec
jle
push
xor
gs
push
mov
jnp
lock
ds
in
retf
cwde
mov
push
and
(bad)
dec
aaa
sbb
jb
mov
jecxz
outs
movs
aaa
(bad)
in
jp
jne
daa
push
or
lods
sub
pop
icebp
adc
or
xor
push
adc
pop
imul
iret
lock
(bad)
adc
adc
test
xchg
mov
jmp
fiadd
jp
push
out
nop
adc
arpl
sahf
sahf
xor
icebp
mov
mov
inc
js
add
sbb
push
popf
xor
rep
sub
sub
int
pop
xchg
imul
push
test
ficomp
icebp
lods
(bad)
ins
shl
iret
and
cmp
jmp
div
fcmovnb
dec
xchg
arpl
and
xchg
mov
loope
sbb
dec
lea
mov
mov
inc
(bad)
sbb
inc
cmp
cmp
(bad)
(bad)
dec
test
into
stc
lods
jg
push
push
cmp
cmps
lahf
aas
cld
mov
jp
or
xchg
inc
mov
mov
scas
push
fs
mov
xlat
outs
mov
mov
cmc
push
and
popf
xchg
cmp
aam
jne
iret
sub
push
push
aad
fst
jbe
pop
test
xchg
std
jb
rcl
pusha
dec
pop
test
ins
sub
inc
dec
(bad)
sub
aam
pop
out
jbe
jne
lea
xchg
mov
lods
xchg
sub
jb
add
pop
mov
movs
cmp
daa
pop
fldpi
repnz
loopne
or
pop
call
das
test
adc
scas
lods
nop
mov
repnz
imul
add
dec
inc
push
les
inc
cli
dec
pop
inc
pop
push
addr16
call
add
mov
push
cmp
test
in
scas
mov
push
xchg
data16
adc
and
or
xchg
sub
(bad)
mov
pop
mov
or
dec
jmp
test
lods
sub
and
in
arpl
sub
(bad)
mov
cli
jne
inc
cmp
xchg
xchg
jae
add
sub
(bad)
adc
adc
push
retf
jbe
std
push
aas
bound
es
fst
shl
aaa
sbb
in
dec
mov
inc
mov
or
std
outs
sub
aaa
popa
popf
repz
jmp
popf
lock
pop
cli
adc
adc
adc
push
std
mov
mov
adc
adc
jp
js
pushf
test
ins
dec
ret
inc
jmp
sbb
xchg
pop
add
push
test
cs
mov
pop
or
cmps
pop
and
fld
jae
popf
pop
and
add
clc
push
rol
pop
in
fcompp
fistp
add
call
sti
pushf
xchg
adc
mov
loop
retf
pop
std
loop
adc
lods
neg
mov
fisubr
or
cld
clc
cwde
xchg
(bad)
lahf
sbb
push
xchg
pop
out
push
jg
test
enter
int
pushf
in
and
push
pop
rol
cmc
iret
fisub
pushf
das
push
sahf
adc
xchg
(bad)
ficomp
aam
mov
jne
sbb
cmp
add
or
enter
inc
pop
mov
xchg
fs
push
pop
sbb
stos
and
or
aad
mov
push
or
cmc
adc
gs
and
js
pop
aas
repnz
out
movs
sub
in
add
sbb
xlat
out
mov
int3
inc
cld
aam
sub
rcl
push
xor
mov
jne
mov
pop
or
and
sbb
xchg
mov
adc
jno
jo
test
fadd
stc
cli
dec
xor
or
pop
in
into
cmps
add
les
push
dec
repz
pusha
and
push
xchg
dec
cmp
cmp
aaa
mov
loopne
or
inc
jle
jp
or
sub
jmp
jne
ret
push
and
mov
push
dec
outs
sbb
(bad)
cmp
sbb
push
xchg
mov
inc
pop
ss
pushf
lds
sbb
in
jmp
pop
leave
dec
retf
sbb
jnp
pop
xor
add
aad
imul
push
aad
js
pushf
fs
push
test
das
and
pushf
or
xor
cmc
push
pop
cwde
jns
fst
and
lahf
sub
ins
and
popa
sub
test
mov
mov
scas
rcl
adc
cmp
out
mov
push
jmpw
sub
jo
xor
mov
inc
pop
cmps
and
xor
lahf
inc
rcl
pop
xchg
jge
mov
enter
inc
imul
sbb
adc
iret
shl
ins
xchg
pop
ins
cmps
lods
(bad)
mov
out
lea
fistp
retf
sbb
in
mov
jb
adc
cs
adc
push
test
sub
ins
push
pop
and
jae
(bad)
jecxz
add
pop
cmp
jl
xchg
xchg
bound
pop
ja
pop
and
test
and
and
pop
inc
dec
dec
xchg
dec
cmp
jb
cmp
arpl
and
ret
and
test
or
add
dec
aad
fs
fild
sahf
sbb
movs
sub
imul
aad
addr16
sbb
stos
dec
or
sub
cwde
pop
ins
jmp
adc
fmul
fbstp
repnz
test
mov
dec
jmp
inc
push
add
ficom
sub
and
adc
ret
jmp
icebp
pop
retf
cmp
ret
mov
adc
movs
mov
(bad)
pop
loope
inc
aam
cmp
repz
std
cmp
push
mov
sbb
jg
shl
sahf
test
lea
lds
cli
sahf
xchg
movs
push
je
cmp
xor
call
loop
mov
lock
push
cli
mov
hlt
adc
sbb
mov
cmps
lds
xchg
pop
pop
mov
or
aas
ror
xchg
mov
shl
pop
les
loope
mov
(bad)
je
jno
mov
pushf
push
mov
push
aad
sbb
sbb
sbb
dec
pop
sbb
hlt
mov
nop
sbb
sbb
clc
daa
scas
push
inc
(bad)
push
jmp
bound
imul
lods
jmp
sub
int
xchg
(bad)
pusha
add
jnp
push
loope
movs
xlat
repnz
xchg
call
inc
sar
jbe
lea
xor
daa
out
cld
mov
and
mov
int
out
sub
or
scas
xchg
mul
les
push
mov
mov
retf
ret
mov
loope
rol
mov
gs
jo
inc
into
xchg
inc
hlt
xchg
scas
add
jmp
mov
mov
nop
arpl
dec
sub
dec
(bad)
dec
popf
pop
fdivr
add
xchg
adc
add
sub
test
sbb
and
mov
dec
or
push
stos
ins
out
mov
std
cmp
stos
adc
syscall
sub
mov
loope
jg
test
inc
sbb
xor
adc
or
ret
ins
fisttp
movs
fstp
mov
and
into
aad
scas
(bad)
fisttp
fdivr
aas
and
adc
int
cmps
rcr
push
xor
cli
inc
daa
push
inc
lock
dec
push
jno
dec
cmp
and
sbb
inc
neg
loop
aam
sub
pop
jg
dec
fst
cmc
adc
mov
ins
icebp
jl
stos
push
dec
and
aam
sub
fmul
cmp
inc
pusha
cmp
pushf
test
inc
jg
scas
test
and
rcr
dec
jg
push
push
daa
adc
mov
cmp
mov
add
lods
js
jns
jmp
popf
xchg
lahf
push
movs
mov
push
mov
fiadd
fild
pcmpeqw
pushf
pop
int3
dec
ds
lods
mov
(bad)
push
into
movs
lock
into
and
jmp
sbb
mov
out
ins
and
dec
les
fwait
(bad)
jmp
popf
call
mov
mov
jg
ret
lea
aas
(bad)
sbb
ror
add
jb
mov
(bad)
pop
cmp
xchg
jmp
jne
enter
xor
adc
dec
imul
xor
mov
push
ret
sub
js
push
push
adc
iret
mov
and
push
push
retf
adc
fs
ret
and
ss
ss
adc
add
push
pop
adc
jb
lock
add
or
call
inc
xor
cmc
dec
inc
jmp
sub
mov
clc
sbb
jae
in
xor
dec
(bad)
into
(bad)
fisubr
aam
fidiv
mov
xor
xchg
or
push
sbb
pop
jmp
pop
fs
pushf
sub
cwde
int3
out
jg
fbstp
mov
ror
icebp
or
dec
scas
pusha
sbb
or
xchg
shl
loop
add
xor
out
push
and
in
cld
movs
in
fistp
fisub
jmp
aaa
sbb
xchg
shl
bound
xlat
xchg
cld
test
xchg
int
das
fcomp
add
cld
or
fwait
pop
mov
mov
inc
inc
les
enter
pop
in
call
push
xchg
dec
and
imul
xor
push
add
dec
jle
in
sbb
into
imul
out
jge
sbb
imul
aas
pop
pop
or
addr16
cld
ds
mov
imul
aas
push
xor
dec
arpl
(bad)
lds
pop
sub
and
ja
pop
jb
data16
ins
push
cmp
inc
test
cdq
mov
(bad)
loop
mov
rol
or
pop
mov
add
in
xor
cwde
inc
or
xchg
int3
sbb
pop
sbb
scas
stos
fwait
xor
jecxz
push
div
push
mov
xchg
cmps
cld
cmp
icebp
test
lock
mov
or
sub
xchg
das
fcom
lods
push
sti
scas
arpl
pop
mov
bound
shl
jle
je
add
cmp
adc
push
out
sbb
or
jbe
inc
mov
je
cdq
shl
mov
adc
dec
push
dec
adc
add
bound
sub
xor
jno
loope
jge
stos
sub
sti
repnz
xchg
mov
je
arpl
movs
bound
out
aad
add
jo
dec
adc
pop
popa
fwait
jp
jl
movs
jl
fcmovnbe
retf
inc
push
test
jae
stos
jecxz
sub
mov
xchg
imul
jne
icebp
popa
into
sub
or
dec
or
jmp
outs
cmp
hlt
loop
test
pop
sbb
pusha
sbb
pushw
xchg
jns
or
test
fs
mov
scas
sbb
lock
xor
aam
cmp
ja
or
sub
push
add
sbb
sub
xchg
lahf
(bad)
cdq
pop
pop
sbb
gs
fwait
test
retf
rcl
pop
outs
js
push
imul
shl
stos
push
push
inc
call
pop
xchg
xor
push
xor
js
adc
cmp
jmp
rcl
fist
test
sbb
push
imul
mov
(bad)
cmp
fsub
and
out
pusha
jge
mov
addr16
or
pop
and
xchg
xor
and
rcr
inc
gs
into
sti
inc
not
aam
lea
mov
(bad)
mov
imul
aaa
repz
sbb
stc
push
adc
cmp
pop
fwait
xchg
push
jmp
icebp
push
and
sbb
(bad)
icebp
ret
test
sbb
mov
mov
(bad)
sbb
mov
ins
mov
push
pop
sub
mov
mov
popf
inc
retf
sub
popa
push
scas
fld
jne
jae
and
mov
pop
movs
shr
outs
out
push
aas
or
add
movs
xchg
push
push
icebp
(bad)
mov
jg
or
cmp
fsub
adc
and
jmp
scas
or
aad
or
pop
(bad)
mov
mov
test
jge
xor
in
out
jecxz
(bad)
cwde
inc
ins
cdq
xchg
imul
sbb
inc
data16
mov
cli
sti
fild
sub
out
dec
pop
jae
mov
and
push
push
push
mov
retf
xchg
push
mov
mov
shl
mov
lahf
dec
ror
mov
cmp
je
cmp
lods
stc
icebp
sar
icebp
push
cmp
adc
mov
push
scas
dec
out
stos
fdiv
xchg
mov
daa
push
into
mov
in
ja
push
clc
pop
jmp
xchg
adc
imul
idiv
adc
loope
add
int3
pop
loopne
ret
enter
idiv
pop
call
and
jbe
div
popf
ficomp
mov
and
ret
mov
cmp
fidiv
inc
pop
xchg
repz
inc
inc
dec
sar
rcl
push
sub
adc
test
cmp
dec
jmp
mov
out
pushf
aad
mov
mov
add
loopne
mov
sub
mov
scas
mov
cdq
pop
pop
test
mov
(bad)
inc
jae
mul
xchg
stos
loope
rcr
cdq
sub
xchg
pop
inc
cmp
fimul
fiadd
dec
scas
ret
lds
int
fldcw
cs
(bad)
es
fbstp
aas
jae
mov
sub
test
imul
pop
fsub
jecxz
push
out
cmp
fimul
xchg
lea
push
aaa
sbb
jno
mov
mov
mov
stos
mov
or
imul
jg
std
add
jl
jmp
scas
lea
mov
jne
jmp
dec
mov
loope
lds
imul
clc
sub
aad
sub
jmp
scas
and
mov
pop
lock
test
scas
cli
xchg
stos
pusha
xchg
daa
adc
or
push
sbb
sub
ins
sub
lods
xor
push
sbb
mov
sub
dec
outs
push
test
push
cmp
push
cmp
sahf
jmp
cmp
and
xchg
push
imul
add
push
pop
imul
dec
add
inc
add
dec
adc
jmp
mov
popf
inc
and
push
jge
cmps
mov
inc
in
ret
in
sbb
(bad)
(bad)
jae
aaa
lds
cs
sbb
adc
rcr
add
push
loope
inc
loop
sahf
mov
test
gs
ja
popa
xchg
iret
mov
aam
mov
jmp
and
adc
xor
pop
mov
mov
in
inc
jbe
pop
js
test
and
pusha
and
mov
adc
lods
fadd
rol
dec
jp
and
xor
push
mov
xchg
push
fcmovu
or
cs
mov
inc
xchg
mov
sub
loop
xchg
cmp
aad
in
lods
dec
jnp
sub
adc
bound
pusha
sub
pop
pop
mov
pop
inc
ret
lods
repz
push
pop
lea
cmps
das
jmp
and
add
mov
repz
test
sti
repnz
arpl
mov
push
or
sub
xor
add
in
jno
fcom
xchg
stos
inc
call
adc
jae
push
rcl
and
pop
add
mov
in
pop
push
jl
pop
mov
out
dec
mov
sbb
xor
fs
out
lahf
call
mov
pushf
cli
jne
fcmove
or
cwde
push
ret
sub
mov
xor
out
mov
mov
xchg
repz
shr
push
call
idiv
(bad)
jmp
jl
push
mov
adc
xor
rcr
shr
push
inc
cmp
imul
imul
in
mov
popf
adc
xor
mov
dec
repnz
fstp
add
push
sti
outs
(bad)
sbb
imul
sub
and
mov
push
cli
mov
and
fstp
mov
jne
add
ret
lock
das
xchg
pop
push
adc
cmp
jle
fimul
into
ret
cli
pop
dec
adc
push
add
or
mov
xor
add
popf
add
pusha
loopne
adc
into
fnstenv
test
pop
(bad)
frstpm(287
push
or
fistp
inc
cmp
mov
repnz
or
dec
xor
outs
lds
scas
lock
scas
stc
pop
sbb
and
jge
jno
loopne
fdiv
retf
pop
(bad)
mov
jns
pop
inc
std
mov
es
(bad)
cmp
mov
es
cdq
es
std
retf
sub
fisttp
sbb
lahf
push
(bad)
push
mov
push
ins
addr16
jp
fisttp
mov
mov
shl
jge
cmps
retf
ss
lahf
pop
data16
sbb
loope
fst
icebp
idiv
pop
push
pop
inc
lea
push
repnz
jmp
and
cmps
or
dec
jno
dec
inc
out
dec
jmp
xchg
sbb
sbb
dec
scas
dec
add
dec
cld
or
pop
test
push
dec
mov
inc
cwde
out
leave
sbb
jne
test
lahf
push
icebp
pop
mov
pushf
cmp
imul
sub
outs
inc
and
adc
push
push
jo
mov
pop
jb
push
into
jb
xchg
inc
scas
ss
fcmovnb
std
xchg
pop
add
rcr
dec
mov
clc
rcr
xor
sbb
std
std
sbb
push
cmc
sub
pusha
cmp
jl
add
adc
jbe
push
lock
arpl
and
fiadd
ds
out
(bad)
cmp
pop
sub
jb
in
pusha
sbb
lea
scas
xchg
rol
sub
xchg
sbb
add
movs
lahf
dec
sub
cdq
adc
mov
lea
retf
sbb
loop
add
xchg
and
std
xchg
pop
and
or
xchg
(bad)
ror
(bad)
iret
sbb
mov
jno
aas
jbe
sub
cli
mov
int3
pop
xor
sbb
data16
cmps
cdq
sbb
cs
addr16
or
aas
cld
sbb
out
rcl
mov
sbb
repz
cld
test
aam
push
mov
movs
push
sub
rcl
sub
sar
and
add
mov
xor
sub
or
popf
pop
fld
into
xor
sub
dec
push
fcomp
ret
push
js
daa
inc
adc
pop
imul
mov
addr16
add
push
ins
lahf
mov
xchg
mov
pushf
test
aaa
idiv
mov
jb
sbb
test
mov
stos
int
idiv
inc
adc
dec
mov
mov
je
mov
cmp
rcr
fst
in
sub
jns
add
dec
dec
push
imul
push
out
mov
and
hlt
pop
ins
cmp
adc
outs
push
jg
jnp
mov
jo
imul
mov
cld
jmp
pop
jnp
sub
sbb
push
add
outs
cdq
cmps
nop
jno
(bad)
pop
nop
ror
sub
pop
jo
mov
sub
lahf
adc
xchg
mov
das
xchg
and
(bad)
adc
add
in
iret
lods
sub
pop
dec
jmp
adc
inc
mov
jbe
(bad)
mov
or
mov
mov
sbb
pop
dec
(bad)
adc
pop
push
or
mov
adc
jno
nop
sub
sub
mov
sahf
test
jnp
scas
push
repz
dec
cmp
adc
imul
psrad
lock
popf
sbb
sub
fs
mov
call
jnp
push
cmp
rcr
cmp
(bad)
call
adc
enter
mov
pop
mul
and
mov
scas
sub
jge
fist
mov
xor
jno
repz
cmps
aad
rep
cmp
adc
out
or
xlat
inc
dec
repnz
ins
jns
dec
shl
outs
mov
adc
cmp
add
mov
sub
leave
inc
lds
jmp
icebp
std
push
cli
xchg
aam
add
movs
xor
retf
minps
js
scas
loop
pushf
mov
mov
enter
in
mov
add
mov
dec
nop
jmp
push
repz
dec
cli
test
and
repz
sub
sub
ds
add
repz
mov
hlt
adc
pop
mov
mov
in
loop
test
sbb
mov
xchg
inc
jp
mov
sub
loopne
arpl
sar
adc
push
pop
inc
push
outs
push
jbe
push
pushf
aam
xor
out
ins
ja
dec
push
xlat
or
sub
popa
inc
sahf
jge
pop
sbb
pop
and
sbb
inc
add
std
dec
retf
fcmovnb
mov
xchg
inc
jns
div
add
push
loopne
fild
data16
fmul
lahf
pop
mov
shl
cld
retf
sahf
neg
repz
xor
or
int3
data16
imul
pop
retf
sbb
mov
mov
mov
cmp
lods
xor
cmps
sub
push
std
jle
jae
jle
mov
lods
jg
jne
lea
inc
and
mov
push
pop
jo
xchg
loope
jne
pop
inc
mov
(bad)
push
idiv
ficomp
outs
pushf
xlat
test
je
adc
sub
dec
lods
mov
call
jns
xor
jne
nop
jno
stos
dec
pop
pop
jno
jp
dec
fstp
das
pop
aad
in
pop
int
jne
loop
jns
jl
adc
xchg
inc
ror
sub
sub
sar
outs
and
jle
push
adc
cwde
xlat
jge
cmp
pop
inc
sbb
neg
xlat
pop
sahf
mov
mov
cli
je
pop
and
in
mov
daa
call
cli
jo
cmp
aas
pop
(bad)
fxch
inc
push
inc
and
adc
dec
rcl
add
fst
pop
das
(bad)
fwait
cmc
or
pop
mov
dec
pushf
sbb
push
xchg
cs
fidivr
(bad)
icebp
dec
push
adc
add
call
sbb
pop
aaa
cmp
sbb
fwait
sbb
pop
in
cwde
sbb
dec
adc
aad
outs
or
sbb
fadd
dec
(bad)
mov
imul
xor
dec
je
lods
aaa
or
dec
cmc
xor
inc
adc
test
retf
movs
jae
gs
dec
addr16
pop
pop
mov
fimul
jne
test
call
repz
fsubr
add
xchg
inc
push
pop
lahf
mov
mov
mov
fadd
jbe
inc
outs
xchg
sub
push
xchg
jae
js
scas
es
fild
cld
xor
jl
lods
xor
jbe
sbb
dec
pop
sub
xor
push
xchg
cmp
mov
ror
imul
pop
push
pushf
mov
push
fbstp
push
xbegin
(bad)
cmp
mov
movs
(bad)
push
das
sub
ds
imul
(bad)
int
or
daa
and
out
ins
mov
jb
and
push
push
pushf
xchg
stos
and
or
jbe
(bad)
mov
mov
sub
sar
scas
(bad)
adc
sbb
mov
(bad)
stc
push
inc
out
xor
push
repnz
out
push
or
push
and
mov
pop
jl
movs
rcr
jb
add
retf
jb
sub
jmp
mov
inc
cld
push
arpl
cli
ja
pop
pusha
adc
xchg
sub
xchg
test
jne
in
call
lods
jmp
scas
jle
sti
gs
ss
cdq
add
sbb
cmp
ret
aam
and
sub
bound
lods
outs
adc
outs
call
and
clc
cmp
add
or
fwait
repz
js
retf
scas
pop
push
movs
bound
push
lods
pop
fwait
adc
and
shl
mov
(bad)
sub
cmc
push
jae
and
test
in
hlt
jl
dec
mov
call
jmp
dec
out
ja
push
push
sbb
ficomp
daa
mov
mov
out
cmp
ins
jle
loope
cmp
dec
adc
iret
aad
mov
sub
mov
movs
sahf
dec
xlat
rep
push
jbe
jp
xchg
popf
cdq
test
retf
aad
cmp
adc
std
arpl
jb
inc
cld
dec
fcomp
jl
jae
mov
ficomp
fstp
sub
or
cld
sub
inc
addr16
push
xor
dec
push
test
xlat
cmp
jb
jl
mov
push
fsub
fnsave
push
addr16
adc
jp
retf
inc
cmps
movs
add
cwde
repnz
sbb
adc
cli
pop
mov
dec
ja
in
popa
jnp
enter
(bad)
mov
je
lock
push
nop
push
pusha
test
adc
das
mov
dec
and
leave
aas
aas
or
cmovg
dec
inc
scas
or
adc
pop
out
add
rol
loopne
inc
push
mov
mov
mov
gs
ror
dec
lods
(bad)
cli
pop
les
mov
out
pop
idiv
jl
add
out
cwde
scas
dec
aad
and
sahf
(bad)
mov
mov
inc
push
popf
mov
call
in
xchg
push
psrld
or
mov
jle
adc
mov
pop
enter
test
mov
and
xor
push
in
add
test
int
jo
cmp
xchg
fst
sbb
pop
enter
(bad)
jo
add
stc
mov
popf
or
xchg
sub
lods
aam
adc
mov
imul
sbb
mov
push
aam
jmp
stos
mov
and
repz
mov
pop
push
js
scas
xchg
adc
mov
fld
jo
aas
xchg
push
sbb
iret
adc
(bad)
in
xchg
mov
adc
push
mov
(bad)
cdq
(bad)
lahf
jno
mov
cmp
je
shr
mov
sbb
inc
mov
shl
jo
mov
lea
jecxz
loopne
jo
sub
mov
push
loopne
or
je
sbb
pop
nop
gs
in
cmp
push
mov
mov
sub
mov
test
pop
lahf
push
and
mov
sbb
cs
mov
inc
inc
stos
(bad)
xchg
fmul
sub
adc
push
mov
dec
and
pop
das
mov
sub
and
add
lahf
in
dec
das
or
inc
cmp
cmp
imul
dec
pushf
ss
fmul
sbb
sub
rcr
jmp
pop
push
bound
xor
cmps
jle
pop
jl
rol
sbb
(bad)
jecxz
jge
xchg
arpl
in
mov
adc
xchg
aad
cmp
adc
mov
cs
jae
imul
push
shr
dec
or
aad
ret
mov
mov
mov
js
ror
mov
adc
and
(bad)
ins
mov
repz
cs
jp
dec
pushf
popf
jp
pop
pusha
sub
shr
sbb
(bad)
cdq
jae
mov
in
xchg
jmp
fcompp
scas
jmp
nop
pop
sub
aas
or
push
sub
ins
dec
and
push
jecxz
sbb
imul
ins
imul
ret
js
test
pop
inc
mov
iret
les
lods
in
or
push
sar
sub
jno
pushf
xchg
sti
dec
aaa
mov
(bad)
inc
mov
add
les
adc
push
(bad)
ret
or
jl
stos
or
sbb
fwait
les
dec
dec
inc
gs
mov
and
adc
imul
xchg
xor
aam
add
push
push
pop
rol
xor
inc
in
lea
sbb
out
loop
outs
das
mov
push
cmc
ret
mov
cmps
dec
es
inc
lods
outs
ins
out
xor
neg
sbb
cmps
pop
push
repnz
loope
sbb
mov
jmp
xchg
mov
mov
imul
sub
push
mov
cmp
push
or
div
add
sbb
fwait
mov
hlt
rcl
adc
cmp
lds
cmp
jge
ja
iret
sub
test
loope
inc
stos
add
push
movs
push
mov
adc
ins
scas
out
sbb
std
ret
jnp
movs
ss
call
leave
and
aad
sub
add
and
or
ins
mov
es
mov
outs
stos
inc
mov
sub
cmps
mov
pop
lds
int3
and
push
shl
xor
xchg
mov
and
lods
and
aad
cli
cli
int3
mov
add
add
jnp
movs
pop
xchg
jl
mov
mov
fistp
sbb
popa
add
xchg
iret
lea
cmc
ds
mov
and
test
popa
mov
cld
push
sar
jno
movs
pop
and
je
pushf
add
adc
ret
push
loop
aad
into
add
aas
push
xchg
fcomp
xchg
pusha
test
fcmovu
cld
mov
mov
lods
in
mov
mov
daa
test
adc
(bad)
popf
dec
int
pop
pop
mov
adc
jle
sbb
push
imul
arpl
js
jp
adc
mov
sub
xchg
xor
rcl
dec
(bad)
sti
ror
sub
inc
repnz
ud1
sub
dec
jbe
sbb
mov
pop
lods
push
xchg
adc
push
jnp
outs
lahf
sub
movs
adc
inc
call
or
loop
leave
out
fstp
int3
repz
push
mov
cld
imul
call
mov
in
push
jbe
ret
push
retf
add
sbb
inc
in
mov
xchg
(bad)
addps
mov
rcl
inc
mov
test
inc
retf
and
js
test
nop
pop
pop
add
cdq
retf
sar
mov
pop
in
sbb
ficom
rcl
call
std
dec
outs
cld
push
jmp
shr
and
mov
retf
push
jge
test
pop
xor
stos
mov
outs
xchg
xor
jns
fidivr
(bad)
stos
push
cld
outs
push
int3
add
int
push
es
inc
push
jae
hlt
fbld
lods
call
xchg
in
sub
movs
(bad)
xchg
mov
add
ins
inc
sbb
call
add
aad
adc
arpl
aas
nop
iret
(bad)
std
mov
repz
jmp
mov
fidiv
push
ins
(bad)
retf
mov
add
xor
xor
repz
sub
retf
jle
fs
fimul
jg
cwde
rcr
dec
dec
sbb
ins
pusha
inc
dec
js
int
cmp
push
sti
into
out
into
jecxz
inc
fwait
inc
lahf
inc
fucomi
add
enter
dec
inc
xchg
jbe
push
fld
mov
sbb
cmc
xchg
xchg
outs
ins
scas
and
push
mov
xchg
or
xor
push
pushf
retf
pushf
inc
sub
dec
dec
jo
clc
xchg
xchg
ret
mov
or
lahf
(bad)
sti
into
imul
in
jmp
xchg
cli
sbb
popf
outs
pop
leave
not
pop
xor
cmp
cwde
cmp
jbe
les
xchg
test
test
ret
jp
mov
pop
pop
cli
pop
sub
dec
stos
or
pop
and
rcl
xchg
fsubr
ret
xor
and
jne
or
movs
xor
movs
mov
int3
stos
test
rcl
sbb
into
inc
push
dec
sub
sbb
cmp
adc
call
ror
jle
call
xor
sub
clc
(bad)
mov
pop
push
push
std
minps
int3
call
dec
je
stc
jbe
lods
loop
iret
cmp
mov
xchg
jae
cmp
in
test
je
and
(bad)
jae
iret
retf
jg
pop
xchg
cdq
retf
outs
mov
mov
and
ret
sti
inc
push
jle
add
(bad)
jl
xchg
retf
ins
lods
and
movs
lahf
xchg
cli
(bad)
nop
sub
test
pop
cmp
push
xlat
sahf
xchg
mov
cld
inc
adc
fadd
int3
bound
leave
jne
and
hlt
mov
mov
adc
jp
test
push
adc
and
cli
xchg
cmp
push
cmc
adc
mov
leave
and
repnz
retf
inc
inc
iret
sub
push
ss
dec
jge
inc
loopne
enter
pop
ds
les
mov
dec
adc
loop
rcl
scas
or
pop
movs
mov
clc
push
fbld
fnstcw
les
inc
retf
sub
ret
mov
cs
sbb
repnz
push
cwde
inc
cmovne
adc
mov
js
jbe
dec
mov
outs
push
(bad)
lods
aad
adc
out
inc
jg
jle
shr
cmp
cmp
dec
bound
mov
adc
mov
movs
xchg
out
repz
les
cmps
mov
dec
sub
imul
(bad)
mov
and
pusha
sub
mov
mov
int3
jns
mov
movs
dec
xor
adc
jae
loopne
push
cli
stos
jl
movs
in
imul
jp
push
ds
icebp
or
enter
mov
inc
or
mov
in
retf
mov
aas
sti
cmp
mov
sahf
dec
sub
cmp
es
(bad)
iret
sbb
jecxz
(bad)
retf
push
pop
(bad)
jb
call
cdq
sbb
lods
sbb
push
imul
dec
lock
and
repz
fsubr
adc
pop
jb
fdiv
cs
pushf
dec
jo
mov
repz
enter
nop
add
pop
bound
inc
inc
shl
movs
sbb
in
retf
jnp
sbb
add
xchg
pop
call
adc
cmp
dec
mov
daa
sub
dec
mov
(bad)
push
cmp
mov
add
pop
out
xor
retf
fwait
dec
rol
xor
sbb
dec
xor
mov
mov
jns
mov
(bad)
outs
xor
pop
lods
ja
cmp
mov
(bad)
sbb
mov
dec
(bad)
cmc
enter
adc
imul
daa
add
push
cmp
xchg
aas
xchg
add
or
adc
adc
and
push
(bad)
in
stos
js
scas
sbb
lods
sbb
add
in
dec
push
mov
and
pop
pop
pop
inc
stos
push
add
arpl
ret
ror
js
fisttp
mov
outs
lsl
shl
loope
jge
mov
mov
mov
cdq
in
sbb
test
stos
inc
hlt
(bad)
addr16
mov
mov
fistp
mov
shr
loopne
inc
dec
pop
ds
inc
pop
mov
in
mov
movs
cdq
test
call
sbb
pop
aam
imul
fnstenv
add
outs
inc
sbb
fistp
test
ja
dec
cmc
sub
or
sub
sbb
jmp
gs
stos
ins
in
popa
xchg
(bad)
fdivr
cmp
xor
into
inc
add
mov
mov
xchg
scas
stos
push
mov
lahf
push
jbe
xchg
cmp
mov
dec
pop
ficomp
jp
(bad)
pop
mov
fild
jns
mov
pop
call
iret
or
xchg
das
xor
lods
adc
out
dec
adc
jecxz
xchg
jle
fwait
sub
jb
cs
mov
pop
xor
pop
or
addr16
sbb
mov
hlt
out
adc
jp
aad
sub
mov
jo
enter
das
ds
or
test
fcom
ret
inc
outs
pushf
outs
adc
xchg
iret
sbb
push
xchg
fidiv
adc
cmp
imul
adc
mov
adc
push
scas
mov
jle
sub
imul
sub
aam
mov
mov
ins
ins
test
jp
outs
xor
ins
dec
rcr
mov
into
cmp
and
dec
adc
pop
sub
dec
addr16
adc
xchg
push
shl
add
ins
push
icebp
and
in
aas
lea
mov
sub
hlt
sbb
outs
retf
sti
and
push
sti
retf
cs
cmp
pop
mov
lds
test
popf
dec
or
dec
(bad)
std
adc
pop
in
mov
aad
pusha
std
sub
fst
dec
push
clc
xchg
jge
ja
jg
out
stc
cmc
jo
fstp
push
xchg
dec
push
iret
cdq
int
popa
or
stos
pop
scas
(bad)
repnz
add
push
push
jl
adc
enter
xor
sub
cmp
fwait
xor
loop
push
and
nop
xchg
addr16
fisubr
mov
cmp
enter
adc
push
cmp
out
daa
(bad)
fstp
mov
inc
dec
mov
fisubr
pop
shr
add
cmp
call
call
and
mov
push
addr16
out
jo
cdq
cli
push
jno
in
clc
xor
test
popf
popf
out
add
test
jmp
and
jae
sub
xchg
sub
push
dec
fisub
inc
fldenv
loope
xchg
inc
mov
jne
popf
pop
lea
stos
inc
inc
xchg
add
ss
push
fs
ror
sub
in
cdq
sub
jp
leave
fimul
cmp
rcl
arpl
xor
popf
in
repz
push
addr16
pop
cmovnp
jl
pushf
daa
je
mov
rcr
(bad)
fbstp
fistp
sti
(bad)
call
push
inc
cs
mov
stos
sar
inc
push
retf
mov
data16
arpl
and
aas
push
into
iret
test
clc
movaps
push
std
test
and
rcr
in
arpl
jns
scas
or
loope
popf
in
ds
inc
idiv
push
sbb
sbb
popf
bnd
or
inc
add
aam
dec
les
call
mov
nop
xor
aam
or
stos
cmp
cmps
push
pop
or
mov
nop
pop
xor
imul
out
dec
push
jae
or
ret
cs
pop
pushf
inc
dec
gs
add
hlt
pop
(bad)
push
or
fisttp
add
jo
dec
dec
add
pop
ins
dec
mov
and
push
ins
dec
cmp
pop
inc
sub
xor
aad
and
shl
pop
mov
and
sti
push
push
popa
hlt
mov
mov
je
push
arpl
das
aas
fstp
test
pusha
jmp
add
mov
pop
addr16
ret
cmp
jmp
(bad)
fstp
cs
arpl
sub
ja
pop
js
pop
sub
movs
sbb
and
jo
adc
iret
cmc
pop
out
imul
inc
das
xor
iret
pop
mov
dec
cdq
sbb
(bad)
mov
std
fmul
fdivr
push
pop
mov
cdq
es
cmp
mov
(bad)
sti
push
hlt
outs
pop
mov
out
cmp
cwde
jl
icebp
or
add
jge
leave
push
ja
inc
jo
sub
ins
xchg
out
pop
mov
dec
rcl
sub
pop
adc
mov
mov
dec
adc
sub
jp
jmp
xchg
cdq
add
aad
cld
cli
repnz
pop
dec
mov
jmp
jne
ds
inc
jp
mov
cmc
mov
mov
push
lds
test
ret
clc
xchg
sbb
(bad)
lods
mov
and
fmulp
sub
in
test
jb
sub
rcl
sub
out
(bad)
sbb
xchg
jbe
int
adc
or
ret
nop
daa
repz
pushf
adc
and
out
sub
xchg
mov
mov
adc
and
adc
repnz
test
mov
pop
leave
clc
(bad)
icebp
push
dec
mov
push
xchg
jg
shl
and
pop
fdiv
rcr
aam
pop
cli
or
sbb
pop
pop
aad
mov
jle
aam
and
mov
shr
dec
and
cmp
cld
mov
sub
mov
pop
out
js
ja
or
and
aam
xor
(bad)
data16
outs
sub
pop
je
test
arpl
dec
xor
pop
cmp
daa
push
retf
imul
fdivr
adc
in
shr
sub
xor
sub
lock
push
and
push
out
sti
mov
dec
cmp
retf
frstor
push
sbb
jmp
test
sub
xchg
mov
sbb
pop
loopne
xchg
dec
mov
xchg
imul
cld
push
xor
or
and
in
add
xchg
das
aas
fs
enter
call
sti
lods
xchg
pop
sbb
add
out
jmp
push
fstp
loopne
je
ins
mov
xor
mov
(bad)
enter
mov
pop
adc
jae
xchg
dec
fild
in
jmp
inc
pusha
mov
pop
(bad)
movs
jae
data16
popf
pop
lock
in
popa
lahf
push
iret
adc
mov
jne
stc
cmp
das
sub
and
mov
mov
jecxz
cli
push
xchg
movs
cs
movs
repnz
clc
adc
inc
fs
test
ins
push
jge
ret
dec
(bad)
fnstcw
loop
xchg
inc
or
int
enter
scas
shr
dec
jmp
stos
or
std
rcl
fisubr
out
test
out
and
pop
xor
sub
inc
std
adc
mov
retf
mov
mov
stos
stc
fst
ja
push
ss
lock
push
mov
mov
push
aam
add
call
cwde
push
fiadd
cld
jo
outs
add
add
rcl
pop
jmp
out
imul
jg
idiv
movs
(bad)
loop
sbb
fnstenv
popa
pop
jns
ins
imul
inc
sbb
setae
sub
mov
sub
stc
pop
call
and
les
clc
jmp
pop
popf
gs
pop
mov
xchg
mov
daa
adc
cld
cmp
pop
in
das
jge
(bad)
fstp
pop
sbb
arpl
push
dec
shl
cmp
adc
pop
sbb
aas
cdq
adc
mov
stos
dec
mov
or
mov
ja
scas
(bad)
outs
pop
and
mov
shl
sub
daa
fcmove
add
neg
push
cs
pop
mov
xor
jl
dec
ins
or
jmp
and
mov
aaa
and
xchg
mov
test
mov
inc
pushf
xchg
mov
jl
aaa
(bad)
hlt
sub
jnp
xchg
jl
mul
(bad)
movs
out
mov
adc
mov
adc
dec
mov
pop
fwait
cmp
fisub
and
cli
cli
pushf
dec
mov
push
sbb
sets
dec
cs
jge
ins
fldenv
scas
jge
sbb
stos
lea
pop
adc
cmps
aam
sub
mov
jae
pop
outs
cld
cmp
data16
into
push
dec
sub
xchg
sahf
out
fstp
add
pop
jp
sub
daa
add
icebp
imul
xor
daa
and
adc
fldenv
nop
cmp
adc
adc
icebp
mov
adc
das
sub
test
sub
inc
lea
pop
and
mov
ins
mov
adc
(bad)
jno
push
retf
daa
jg
mov
mov
xor
jmp
lods
fild
test
jecxz
push
xchg
sbb
cdq
sti
cbw
sti
xor
out
retf
jns
jmp
push
mov
pop
and
pop
std
mov
jb
int
and
les
gs
mov
popf
pop
aad
out
cmp
jle
mov
mov
imul
add
dec
jp
cmp
js
retf
or
mov
jb
or
cmp
sbb
ss
dec
xor
popf
pop
lock
das
cmc
push
xor
or
jb
fadd
push
dec
cmps
mov
out
paddusw
mov
mov
xchg
imul
ss
stos
xor
sbb
sahf
icebp
addr16
ds
and
mov
fwait
test
clc
test
add
mov
sbb
(bad)
hlt
mov
and
push
mov
sub
sbb
sbb
adc
imul
jp
push
fidiv
icebp
shr
mov
pop
std
cmp
and
test
sub
fwait
mov
aad
addr16
mov
add
int
or
pop
sbb
in
ins
jae
mov
outs
or
fcom
mov
sar
adc
fbld
add
pop
out
dec
dec
adc
mov
lods
mov
mov
cdq
adc
(bad)
pusha
mov
push
pop
sub
ret
jmp
dec
outs
dec
aad
(bad)
(bad)
cwde
imul
jae
loopne
add
sti
xor
dec
idiv
iret
mov
adc
mov
sbb
cmp
iret
mov
shl
xchg
not
mov
jmp
inc
add
in
ja
inc
stos
add
fist
mov
lea
ror
aaa
neg
mov
jmp
test
mov
fstp
jmp
mov
call
mov
sub
lods
inc
mov
xchg
jmp
cmp
xchg
jb
jg
cmp
test
or
mov
xchg
pop
pop
mov
add
mov
add
adc
cs
add
jns
inc
mov
imul
mov
cs
pusha
pop
lods
jg
dec
mov
inc
mov
icebp
or
dec
or
fbstp
loopne
sub
das
mov
mov
out
pop
pusha
mov
dec
inc
cdq
dec
outs
inc
xchg
jp
jmp
mov
dec
and
aas
pop
lds
xor
sbb
lods
push
pop
lds
loopne
loop
sub
sar
sar
int3
add
sub
div
push
fcom
mov
xchg
adc
cmc
loopne
out
(bad)
in
cmp
pop
and
repz
retf
test
lds
pop
cmc
nop
cmp
or
fsubr
jg
std
and
mov
pusha
outs
xor
push
stos
mov
div
movs
add
rcr
loope
mov
mov
push
sbb
add
mov
test
push
add
pop
xor
push
inc
cwde
dec
push
mov
stos
cmp
mov
mov
icebp
lea
(bad)
das
jl
sbb
test
mov
sub
je
xlat
lods
pop
push
cld
scas
pop
pushf
inc
jge
loope
lea
or
pushf
sbb
mov
in
xchg
fld
and
or
cwde
dec
ret
stos
aaa
fsubr
es
test
inc
jne
or
fs
jle
aam
lahf
push
js
mov
mov
sbb
dec
lods
push
arpl
test
mov
aas
jp
test
mov
out
pushf
fdiv
pusha
inc
shl
mov
enter
inc
cmp
sub
in
fdiv
lds
inc
sub
dec
and
pop
jmp
mul
inc
aaa
mov
mov
mov
and
nop
mov
mov
jp
leave
sbb
ins
sub
aad
pop
xor
addr16
mov
int3
or
jb
add
es
es
das
sar
inc
ins
daa
shr
mov
xchg
pushf
nop
mov
inc
cmp
lods
inc
cmp
retf
mov
adc
xlat
fsubp
and
test
cmp
xchg
cmp
add
stos
mov
cdq
cmp
mov
pushf
(bad)
sti
inc
xor
lods
pop
mov
jle
leave
xchg
mov
icebp
addr16
mov
idiv
jnp
pop
mov
mov
pop
test
push
pop
add
jle
lds
mov
std
cs
aaa
mov
adc
loope
add
mul
or
lahf
retf
jne
popf
call
es
in
pop
add
sbb
scas
pop
sub
jo
mov
dec
xor
mov
ffree
push
mov
mov
lods
js
cmp
ret
aas
inc
repnz
repnz
ss
mov
sbb
jo
mov
repz
cmp
and
das
mov
sub
repnz
pop
pushf
mov
add
push
(bad)
sub
scas
fmul
scas
dec
xchg
std
mov
xor
sub
fcomi
(bad)
out
dec
ins
jle
sbb
xchg
jnp
cli
jbe
inc
out
add
mov
aas
stos
mov
sbb
inc
out
and
call
pusha
hlt
xor
ins
stc
jecxz
mov
(bad)
xchg
adc
sbb
sbb
loope
imul
mov
and
ret
inc
mov
inc
test
test
cmp
push
call
popa
sub
adc
pop
jmp
das
call
mov
push
lods
mov
xor
sub
cmps
inc
cli
push
mov
push
lahf
cmps
mov
jle
jecxz
(bad)
push
mov
cs
pcmpeqb
ss
scas
mov
icebp
xor
ins
or
add
cdq
pop
cmp
and
mov
pushf
neg
repnz
sub
or
movs
sub
out
push
mov
push
and
in
sub
popf
pop
inc
sub
inc
cld
aad
cmp
dec
inc
(bad)
dec
in
arpl
call
and
xor
int
jo
shr
mov
jnp
lahf
std
xchg
das
iret
jbe
(bad)
mov
lds
scas
inc
fs
inc
xor
scas
retf
div
adc
and
ret
xor
out
mov
mov
cmp
fistp
push
popf
call
enter
stos
in
mov
enter
test
pop
mov
sbb
sahf
nop
add
cld
pop
fist
fldcw
jmp
pop
xchg
movs
mov
fs
sbb
(bad)
push
xor
(bad)
dec
aaa
or
mov
jae
adc
sub
out
gs
xchg
push
outs
das
into
add
icebp
hlt
add
add
cdq
pushf
shl
popa
lahf
in
add
sbb
sub
jb
les
jmp
rcr
xor
shl
adc
in
mov
pop
inc
test
cwde
daa
mov
sub
test
pop
cwde
lock
push
add
fwait
add
xchg
adc
js
call
mov
aaa
lds
xor
xor
js
sub
add
test
imul
mov
push
pop
ret
(bad)
retf
mov
push
fist
scas
mov
out
repz
ss
das
rol
push
push
lahf
adc
fcom
out
lahf
out
or
xor
add
inc
sub
test
test
dec
movs
pop
mov
add
stos
scas
shr
les
inc
sub
or
lds
xor
fiadd
mov
lea
call
and
jge
sar
xchg
hlt
xchg
xor
pop
mov
dec
rol
jecxz
jmp
fld
cld
add
call
sti
pop
mov
imul
jnp
xor
mov
push
(bad)
jge
iret
or
and
cmc
jns
repz
sbb
sbb
adc
adc
dec
call
push
push
xor
xlat
leave
dec
cwde
add
fwait
arpl
jae
(bad)
in
pop
adc
out
test
sbb
push
or
jp
push
adc
sbb
and
and
rcl
call
imul
retf
pop
lods
sbb
js
cmp
ficomp
loop
rcl
arpl
push
sub
rcr
ins
sub
jecxz
push
outs
mov
xor
bndstx
ret
jne
mov
(bad)
mov
sbb
push
cld
daa
sbb
js
dec
sub
inc
mov
mov
lahf
test
repz
jae
leave
(bad)
arpl
push
sahf
aam
and
loopne
mov
psubusw
repz
cwde
inc
mov
or
push
gs
int3
movs
pop
lds
(bad)
fwait
adc
movs
push
sub
(bad)
adc
out
mov
mov
push
and
push
popa
pusha
sahf
mov
aam
xchg
enter
xchg
out
(bad)
aad
imul
(bad)
mov
adc
aam
inc
cmp
cwde
dec
outs
fwait
pop
jl
cld
fist
add
stc
jge
adc
in
mov
call
in
xchg
not
and
(bad)
pop
into
add
xor
xchg
call
sti
dec
cmp
lea
int3
xchg
sahf
int3
in
shr
lea
inc
ins
std
test
enter
sub
in
jle
pop
stos
push
inc
arpl
rol
add
push
jge
cmp
mov
inc
ss
lock
xor
pop
jbe
stos
jmp
mov
or
loop
inc
loop
fdivr
inc
or
xor
aas
mov
in
jae
xchg
pop
sbb
jmp
call
das
jno
cmc
outs
pop
test
cmps
test
aam
(bad)
sbb
(bad)
adc
bound
rol
mov
push
mov
sbb
jl
inc
pop
push
popf
inc
or
outs
or
mov
jmp
adc
mov
mov
inc
out
mov
retf
aam
mov
mov
addr16
aam
mov
cwde
adc
mov
leave
dec
es
cmps
stc
out
fdivr
dec
and
in
sbb
sbb
pop
popa
pop
or
inc
clc
pop
test
pop
pop
setnp
call
cwde
retf
inc
bound
cmps
cmc
dec
cmp
inc
jne
sub
cmp
std
inc
cli
sbb
mov
adc
imul
popf
(bad)
(bad)
lods
int
(bad)
mov
xor
out
sbb
ja
ins
or
lds
inc
lods
push
jle
sbb
xor
sbb
(bad)
adc
xor
loope
repz
(bad)
iret
sbb
and
and
call
cdq
sub
and
and
mov
imul
mov
sub
push
test
icebp
iret
push
shl
xor
std
inc
cwde
int3
(bad)
sbb
std
cmp
sub
sbb
mov
cmp
iret
xchg
jne
dec
push
mov
xor
sub
je
mov
call
push
int
(bad)
sub
fisubr
sar
aad
sub
in
repz
pop
sbb
cmp
fld
loopne
cmp
sub
jg
sti
cmp
jbe
inc
cmp
cmp
stos
mov
stc
or
into
ja
mov
fst
add
dec
sbb
sahf
not
pop
dec
fld
xchg
mov
pop
test
mov
push
dec
dec
fwait
lea
mov
mov
outs
sbb
lods
mul
movs
pop
push
retf
pop
gs
dec
dec
add
sahf
(bad)
jge
popf
loope
call
jle
outs
pop
nop
clc
sbb
xor
push
mul
or
das
sar
push
les
cmp
add
out
(bad)
pop
loopne
test
mov
int
(bad)
(bad)
into
mov
fst
shl
pop
rcl
inc
pushf
push
cld
jbe
xor
jae
pop
push
sahf
mov
imul
xchg
sbb
adc
pop
cmc
or
pop
(bad)
mov
xchg
lods
pop
xchg
sbb
cmp
dec
in
mov
inc
stos
xchg
add
dec
mov
push
shr
in
and
daa
mov
cmp
(bad)
adc
adc
(bad)
icebp
fist
cs
sbb
bound
aam
stc
xchg
adc
shl
js
jnp
scas
sbb
mov
in
fcos
mov
push
data16
sbb
mov
dec
hlt
das
std
pushf
shr
lds
mov
imul
cli
stc
sbb
iret
xchg
sbb
fadd
sub
into
ret
outs
cwde
aad
push
scas
mov
sub
xchg
in
ret
ds
lods
adc
call
scas
push
loopne
jns
xor
enter
sub
out
rol
(bad)
repnz
push
push
mov
sub
popa
gs
mov
int
jp
test
jb
fwait
in
adc
and
xchg
pop
sahf
lods
fwait
imul
test
mov
mov
add
retf
(bad)
jg
je
and
(bad)
hlt
imul
jmp
inc
and
or
shr
imul
pop
pushf
lods
ret
clc
sbb
les
call
lock
xchg
shl
sbb
pop
jecxz
mov
pop
cmp
arpl
adc
sub
xor
add
inc
mov
sub
data16
push
sbb
sbb
(bad)
push
into
push
out
movs
leave
ret
fist
sar
jno
sbb
dec
push
pop
arpl
sub
pop
jnp
or
inc
xchg
icebp
movs
out
js
add
cmp
aaa
xor
push
dec
or
mov
cli
repz
lahf
cmp
icebp
xchg
xchg
mov
add
enter
xchg
rcr
jne
jl
and
loop
mov
leave
sbb
(bad)
fsub
xchg
xchg
ins
je
xlat
dec
mov
or
stos
push
imul
movs
lds
pop
or
mov
push
enter
sub
ss
mov
dec
out
push
mov
jmp
lea
adc
add
mov
xchg
rcr
or
sbb
mov
push
stc
loop
retf
sub
push
rcl
(bad)
sti
mov
push
lds
cli
test
or
arpl
ja
push
fiadd
mov
pop
test
popf
push
pop
loopne
xchg
repz
jnp
push
xchg
shl
mov
push
pop
ja
in
out
fadd
sub
shl
cs
cmc
syscall
nop
push
push
sbb
xlat
das
ds
iret
lods
jecxz
push
adc
(bad)
mov
sub
arpl
fcomp
out
mov
ins
sbb
pop
pop
jb
dec
pop
stos
pop
mov
lods
mov
aad
ins
mov
push
shl
lods
in
inc
and
sbb
out
call
sbb
mov
add
popa
jnp
sub
fs
out
fwait
cmp
rol
sti
push
outs
icebp
adc
ja
fcomp
mov
mov
and
ficom
aas
sbb
(bad)
mov
je
xor
push
daa
addr16
(bad)
jns
pop
xlat
cmp
loopne
call
(bad)
xchg
repz
outs
cmp
mov
rol
call
mov
push
jecxz
ins
xlat
movs
sub
(bad)
push
arpl
lahf
sub
aas
jmp
pop
jbe
adc
sub
movhps
jmp
lods
mov
xlat
xchg
fstp
das
fs
dec
mov
mov
mov
cli
sbb
sbb
loopne
adc
cmp
imul
dec
stos
(bad)
stos
cmps
stos
aas
cmp
pop
js
das
mov
fistp
int3
adc
dec
dec
icebp
push
hlt
mov
push
and
bound
movs
outs
cmp
jge
cmp
cld
std
clc
jl
sub
jg
mov
jmp
xchg
in
aaa
mov
mov
pop
inc
pushf
adc
cmp
jne
fmul
scas
push
dec
pop
(bad)
jle
ins
loopne
push
jecxz
arpl
mov
jmp
mov
or
xchg
(bad)
jae
mov
shld
into
inc
xchg
ins
movs
mov
pusha
add
out
sbb
sbb
test
in
call
jmp
pop
les
pop
xchg
mov
mov
arpl
das
pop
adc
pusha
(bad)
sti
push
shl
scas
(bad)
ds
test
lahf
mov
xor
sub
arpl
fwait
aam
pop
lds
shl
scas
loopne
add
sub
or
and
loop
icebp
mov
push
xor
xor
fisttp
jne
sub
xchg
pushf
les
imul
int3
repz
adc
cmps
sbb
inc
push
cld
js
pop
push
(bad)
test
cmps
jg
inc
int3
(bad)
(bad)
sbb
and
dec
jmp
in
pop
sbb
jl
(bad)
xor
lods
popf
cmp
adc
aam
sub
sub
out
lods
cs
sub
in
das
gs
cli
jecxz
add
sub
lods
inc
das
push
sbb
pop
cmc
adc
loopne
mov
scas
imul
jbe
pop
(bad)
jmp
add
inc
inc
nop
and
adc
add
push
out
jns
test
jecxz
and
lods
and
and
(bad)
push
inc
dec
pop
dec
call
xchg
std
mov
mov
loope
pop
xchg
lods
aad
in
mov
fld
adc
out
daa
inc
mov
repz
inc
mov
or
cli
cmp
mov
cmps
add
imul
inc
and
ja
or
cmps
sub
or
inc
fidivr
movs
pop
mov
xchg
outs
aas
xor
imul
cmps
and
inc
popf
mov
jmp
jp
rol
les
repnz
push
pusha
call
xchg
sti
and
ins
and
js
push
cld
push
(bad)
xor
push
pop
(bad)
jb
pop
cmp
cmps
and
aaa
fimul
enter
ret
jnp
mov
pop
lahf
xchg
pop
push
jo
sar
stos
lds
sysexit
paddsw
jb
cmp
xor
(bad)
mov
cmps
lea
xlat
inc
mov
adc
shl
jmp
scas
and
push
rcr
mov
cmp
adc
fdiv
loopne
ss
sbb
dec
mov
movs
xchg
ins
cld
iret
pop
cmovle
sbb
shl
pop
jmp
push
aad
cmc
or
cli
xor
sub
xchg
(bad)
pop
enter
es
push
test
lock
sbb
mov
inc
jo
stos
in
ret
lahf
xchg
cmp
pop
shl
iret
gs
jmp
jmp
dec
call
fstp
xchg
and
sbb
bound
push
stc
mov
fld
ins
mov
xchg
push
push
xor
mov
cld
inc
xchg
xlat
stos
xchg
add
and
fdivrp
mov
sub
movs
lahf
mov
repz
pop
lahf
xchg
lea
jb
xor
sub
push
repz
inc
jle
add
jg
xchg
inc
enter
in
test
retfw
inc
xor
jmp
in
(bad)
repz
sub
repnz
inc
sbb
arpl
pop
iret
mov
jb
and
xor
stos
sub
imul
cmp
or
cmps
(bad)
imul
out
xor
or
inc
sar
fist
js
add
loop
jmp
out
xchg
dec
adc
mov
jmp
push
jmp
dec
mul
push
xchg
sub
icebp
ficom
inc
and
pushf
xchg
xchg
pop
retf
dec
push
fisub
sub
pop
xchg
js
mov
jbe
les
sbb
mov
xor
mov
cs
dec
inc
les
enter
in
scas
xchg
ja
and
in
inc
push
push
jmp
sub
xchg
cmp
imul
mov
add
in
sbb
call
mov
leave
sbb
call
fwait
lock
push
ins
(bad)
mov
inc
jns
aad
sub
dec
inc
aam
sahf
jnp
mov
dec
xchg
xchg
add
clc
cld
std
jge
cmp
je
jnp
das
xlat
push
je
retf
push
popa
leave
fsubrp
je
or
test
int3
outs
arpl
imul
cld
pop
aad
repz
sub
loop
jmp
shr
jbe
out
xchg
pop
fisttp
xchg
test
xchg
test
in
xchg
mov
test
mov
push
pop
mov
dec
mov
(bad)
lds
jle
jno
pop
mov
fs
leave
adc
out
lods
ret
nop
outs
xchg
loop
mov
inc
aas
cmc
cmp
in
add
fs
jnp
mov
mov
mov
inc
pop
cs
pop
(bad)
gs
add
outs
repz
push
pusha
scas
into
mov
adc
jae
ficomp
jne
jecxz
in
inc
sub
pop
pop
loop
aas
aad
in
out
ins
rcl
test
mov
pop
in
inc
mov
jp
popa
out
mov
retf
push
das
sbb
xor
sar
retf
clc
ins
shl
push
xor
xchg
inc
and
sahf
fst
sbb
pop
outs
xchg
sbb
adc
outs
adc
or
popf
inc
aad
fnsave
fnstcw
fcomp
retf
sub
mov
dec
mov
sub
jnp
jl
mov
or
cmp
pop
ret
je
fadd
bound
mov
mov
adc
pop
outs
push
pop
outs
xor
pop
dec
pop
sbb
adc
mov
jl
cmp
sbb
call
add
fs
push
cmp
add
dec
lock
jne
pop
in
leave
sbb
scas
outs
in
cmc
jae
sub
inc
out
adc
mov
adc
xchg
gs
and
jge
sub
adc
in
adc
pop
mov
and
mov
cmp
popf
loope
sub
cmp
into
cs
nop
call
(bad)
(bad)
jmp
mov
cmp
pusha
push
fmul
movs
pop
arpl
(bad)
push
and
adc
jb
mov
popf
push
aas
ror
std
es
sub
or
ins
ret
mov
out
out
and
jmp
int3
dec
gs
dec
jo
arpl
fs
outs
xchg
outs
mov
mov
mov
fsub
mov
adc
inc
sbb
sbb
repz
call
sbb
pop
daa
ins
mov
pop
or
movs
idiv
sbb
cdq
scas
test
shl
inc
pop
mov
fcmovnbe
push
dec
jp
add
jno
jb
cmp
aam
popf
sbb
cli
cmp
cmp
mov
mov
int3
sti
cmp
push
pushf
push
xchg
inc
add
fs
lods
mov
gs
jl
adc
sub
jns
xchg
push
bound
rcr
retf
dec
push
fcmovnbe
pop
out
cli
sub
dec
(bad)
in
and
xor
pushf
popa
shl
lock
and
or
(bad)
sub
inc
xchg
fild
push
movs
and
pop
inc
test
pop
cld
leave
and
pushf
mov
xchg
adc
xchg
jnp
cmp
scas
sub
scas
lahf
sbb
cmc
push
out
xchg
inc
mov
cld
js
push
inc
mov
test
inc
xchg
shr
dec
(bad)
mov
leave
fwait
mov
pop
adc
adc
pop
cmps
stos
lods
cmp
in
push
cmc
jge
and
outs
push
mov
mov
xchg
(bad)
push
ss
mov
push
es
dec
or
daa
in
dec
ret
aam
mov
inc
test
xchg
push
scas
mov
int3
into
xlat
pop
cld
int
loop
jmp
jne
xchg
pop
jno
sub
sub
jle
out
loope
inc
mov
push
rcr
cmps
imul
add
adc
scas
sub
test
jmp
xchg
cli
das
mov
loop
xor
(bad)
pop
xor
inc
cld
test
sbb
stos
(bad)
ins
(bad)
imul
pop
pop
inc
mov
add
les
int
mov
enter
dec
inc
movs
bnd
xor
sub
mov
xor
je
pop
adc
addr16
sub
movs
rep
mov
pop
sub
ret
dec
lods
shr
fst
sbb
retf
js
sub
xor
adc
arpl
mov
in
(bad)
push
es
pop
lahf
ja
(bad)
cmp
add
cmp
ds
pushf
gs
push
push
pop
mov
fimul
add
mov
mov
retf
mov
test
xor
xor
sbb
xchg
and
stos
enter
add
scas
call
jmp
or
jno
cmp
adc
ins
sub
push
cmp
mov
xchg
clc
idiv
leave
sbb
stos
jl
adc
jne
push
jmp
xchg
xchg
jne
sbb
popf
mul
mov
adc
ins
mov
or
adc
jno
jg
imul
push
fdivp
mov
addr16
fst
and
sub
mov
aas
add
xlat
mov
outs
out
jecxz
ret
data16
shl
push
out
xor
aas
pop
int
cmp
push
add
pop
pop
js
add
or
mov
dec
cmp
(bad)
bound
sbb
jl
ret
mov
in
push
dec
fs
test
sub
ins
jnp
inc
inc
mov
xor
neg
jo
or
into
dec
push
push
fwait
lods
inc
das
xor
sar
out
hlt
cwde
pop
jo
xor
ins
mov
daa
or
ficom
ins
sbb
mov
aas
aam
adc
aad
or
cmps
xchg
jb
pop
popa
inc
je
jle
lods
retf
or
add
dec
sub
in
enter
mov
lds
add
(bad)
jno
cmp
add
add
push
dec
cld
fstp
pop
push
ss
xchg
mov
into
daa
mov
test
sbb
popa
mov
mov
(bad)
cli
sti
or
das
sbb
sahf
pcmpgtw
sbb
push
pop
inc
sub
cmps
and
je
sub
xchg
adc
sbb
mov
iret
inc
adc
(bad)
in
lods
loop
aas
sbb
enter
dec
xor
and
fwait
mov
aam
and
xchg
in
push
push
gs
mov
pop
push
ja
mov
sbb
movs
xchg
xor
cmp
out
adc
mov
ret
xor
xchg
cld
out
imul
in
cdq
dec
data16
daa
cmp
ficomp
in
xor
les
data16
and
lods
cmps
test
mov
or
inc
mov
aam
arpl
cmc
or
outs
pop
or
jge
test
mov
or
je
mov
(bad)
xor
jmp
pop
pop
call
lea
in
in
jl
or
or
cmps
pop
out
jno
loopne
sub
mov
adc
xchg
inc
out
sub
add
and
cmp
cwde
ins
shr
inc
mov
sub
mov
retf
ret
sti
cmp
out
or
inc
aas
scas
push
push
pop
outs
push
shl
(bad)
js
dec
jmp
add
neg
paddd
jge
mov
enter
mov
lahf
in
shl
sbb
jae
xor
aam
inc
dec
shl
shr
cmp
ret
xor
adc
push
sbb
pop
sub
or
fstp
cmp
dec
pop
popa
or
push
xor
ror
add
or
cmp
ins
call
cli
sbb
daa
inc
ret
jns
dec
mov
jo
movs
sbb
lahf
mov
cmps
push
mov
cmp
and
xchg
shl
push
aas
push
cmc
or
dec
push
ja
rol
mov
mov
test
push
out
dec
(bad)
sbb
xchg
iret
push
ins
retf
cdq
int3
ror
rol
fild
in
dec
popa
scas
sub
lahf
fcmovnu
xor
(bad)
adc
mov
mov
ror
jo
test
xchg
xchg
pop
cmp
outs
test
mov
mov
out
dec
mov
loope
jl
push
fwait
sbb
clc
lahf
and
jl
xor
out
inc
mov
xor
bound
data16
dec
dec
cmps
into
push
sbb
out
pop
lock
dec
adc
hlt
dec
xchg
aaa
add
or
xchg
fcom
lods
stos
mov
cmp
add
scas
mov
fld
xchg
inc
and
inc
jp
jns
into
into
adc
aam
xchg
xor
jmp
aam
iret
mov
xchg
mov
sub
stos
mov
popf
mov
arpl
push
xchg
add
jno
sbb
aad
cs
mov
sbb
xchg
lods
imul
movs
fucom
sub
call
imul
add
jne
call
jmp
out
adc
dec
pop
bound
xor
lea
out
std
(bad)
xchg
cmp
sbb
xor
pop
fdivr
mov
movs
jge
xchg
push
xor
retf
inc
dec
sahf
(bad)
add
dec
outs
je
dec
jge
xor
nop
hlt
push
jg
xor
ror
rol
data16
icebp
lds
ins
lahf
stc
cld
cmp
adc
shl
outs
push
movs
add
xor
lock
dec
push
sub
ins
jnp
mov
(bad)
mov
pop
xchg
xor
xchg
and
enter
cld
aaa
pop
push
fwait
imul
les
pop
pop
aas
xchg
xchg
retf
daa
int
inc
jne
jecxz
mov
ins
rol
fisttp
into
mov
jge
dec
xor
lods
pop
push
dec
rol
imul
add
cmps
inc
sub
pop
lock
and
xchg
pop
sbb
pop
jp
fwait
sbb
jp
test
je
push
fnstcw
cmp
inc
sbb
lds
sbb
fcomp
push
add
xor
jmp
push
(bad)
xor
mov
xchg
lods
or
call
test
sti
aam
adc
mov
sti
retf
sub
jb
out
push
(bad)
mov
or
add
mov
sbb
retfw
pusha
mov
inc
mov
pushf
shl
mov
push
pop
scas
rcr
sbb
adc
lods
ins
xchg
inc
in
repz
ffreep
push
inc
push
sub
(bad)
sti
mov
jmp
adc
jl
cvtpi2ps
mov
std
dec
gs
setnp
adc
sbb
fmul
pop
jno
pop
(bad)
cmp
sbb
sub
test
call
mov
fld
cmp
loope
lods
cmp
fucomi
cs
mov
enter
and
sbb
cmp
mov
fwait
add
push
pop
(bad)
mov
pop
mov
adc
icebp
dec
cmp
in
call
xor
movs
aad
cld
pusha
sub
inc
stos
cdq
out
sbb
or
shl
repz
dec
cvtpi2ps
mov
popf
adc
mov
pop
xlat
jae
inc
in
imul
loopne
pop
push
ja
push
dec
test
mov
xchg
inc
mov
jb
cmp
mov
hlt
sti
jns
mov
jge
aam
jle
fcomp
idiv
xchg
int3
not
loope
mov
or
and
jle
test
mov
in
popf
test
xchg
stos
movs
xor
outs
hlt
ds
and
adc
in
outs
lds
cmps
loop
cli
addr16
nop
movs
adc
fcomp
mov
pop
ins
pop
mov
outs
adc
dec
jmp
clc
div
sub
rol
pop
jnp
shl
push
repz
push
dec
popa
xor
clc
fwait
push
fisubr
inc
leave
jp
sbb
hlt
push
pop
mov
(bad)
xchg
clc
sti
test
xchg
adc
lods
xor
or
int
scas
lds
daa
lahf
push
or
stos
adc
out
and
nop
(bad)
fwait
adc
int
in
jo
test
mov
xor
fist
mov
xchg
xor
cld
sub
jle
sub
cmp
xor
imul
enter
arpl
ins
addr16
and
shl
mov
jp
cmp
cmp
and
aad
pop
lea
fsub
and
rol
imul
adc
inc
adc
pop
xor
dec
fld
loopne
movs
jo
(bad)
(bad)
xchg
jge
loop
(bad)
fst
(bad)
jp
xor
punpcklwd
fcom
cmp
cmps
cmps
xchg
ret
retf
cwde
repnz
shl
push
pop
cmps
push
xor
jmp
mov
mov
pop
fistp
add
sub
push
xchg
ja
loope
test
rcl
or
sahf
xchg
xchg
fwait
pop
dec
(bad)
and
popf
mov
xor
fisubr
xchg
call
pushf
adc
add
pop
mov
pop
out
pop
jmp
cmps
jg
popa
jl
xchg
mov
fwait
outs
test
xchg
es
loope
adc
cwde
gs
pop
cs
mov
sub
mov
cmp
sbb
mov
mov
cmps
inc
ins
repnz
lahf
mov
push
ins
into
pop
sub
(bad)
nop
loop
das
pushf
push
add
das
jecxz
cmc
push
call
adc
push
mov
pusha
cmp
clc
lahf
enter
push
add
sub
sbb
lock
stos
or
inc
cmp
repz
call
rcr
mov
rcr
daa
icebp
push
lods
or
cmp
leave
ret
or
fmul
jl
mov
test
cmp
clc
add
out
mov
jl
shl
add
push
mov
xor
cmc
outs
pusha
clc
cld
fild
shl
mov
pop
aad
jmp
fisttp
loopne
adc
daa
mov
xor
out
lahf
outs
hlt
xchg
fistp
jl
and
aam
inc
out
mov
cmp
inc
int3
or
and
hlt
ins
mov
add
adc
and
xor
push
test
cmp
inc
sbb
xchg
stos
inc
adc
xor
dec
xchg
ins
cdq
adc
addr16
mov
sbb
popa
pop
sub
dec
scas
jecxz
adc
sub
dec
xchg
popf
cmovl
jo
push
loope
test
jb
mov
xchg
ins
pop
movs
cdq
xor
pop
mov
xchg
scas
ins
cmc
jmp
or
out
js
xchg
sub
fist
lods
or
adc
scas
inc
aam
mov
sbb
jae
pop
fdivr
adc
jne
jb
test
mov
mov
scas
mov
fld
mov
xor
mov
ret
movs
icebp
lahf
test
cld
sub
adc
jns
sub
pop
scas
jmp
sub
pop
jmp
pop
adc
icebp
xchg
fsubr
jb
cmp
adc
movs
adc
jmp
jno
call
pop
cmp
pop
movs
sti
push
or
ins
int3
mov
inc
sbb
sti
mov
jecxz
(bad)
dec
and
dec
push
das
jmp
pop
mov
bound
fwait
sti
add
das
pop
add
lock
leave
jnp
enter
fsubr
pop
loope
int3
enter
call
js
jae
cld
mov
adc
sbb
and
movs
ror
xchg
pop
rcl
pop
xor
popa
mov
aas
loop
test
arpl
sbb
pusha
xchg
(bad)
ror
fstp
cdq
ror
stos
stc
push
daa
pop
rol
pop
add
cmp
mov
retf
dec
push
push
cmp
or
pop
fmul
movs
pop
jb
adc
in
out
push
adc
(bad)
adc
dec
add
fstp
loop
(bad)
ror
cmp
push
xchg
test
shl
cmps
mov
mov
jb
jno
and
sub
ins
adc
lock
mov
sub
sub
enter
(bad)
xor
and
ins
loop
add
rcr
ins
dec
not
jnp
jns
shl
dec
enter
dec
mov
into
and
mov
pop
jl
scas
int3
out
push
push
adc
jo
and
retf
or
je
adc
stc
in
in
adc
push
test
mov
adc
jae
lock
lea
xchg
adc
sub
mov
jp
je
pop
repz
dec
retf
fld
int3
cmp
fs
xchg
add
or
add
jecxz
xchg
xchg
(bad)
mov
pop
jns
add
xlat
fidivr
test
data16
push
ins
in
scas
xchg
push
sub
xor
jge
bound
jbe
lods
retf
mov
mov
sbb
test
les
dec
fidivr
dec
dec
pusha
xchg
fadd
cdq
push
xchg
sbb
push
les
jl
jle
jmp
loop
xor
js
fimul
sar
inc
dec
inc
mov
add
mul
pushf
daa
or
xor
ds
(bad)
gs
iret
clc
xor
nop
pop
mov
mov
sbb
inc
es
hlt
in
jns
dec
and
out
das
ja
jmp
les
mov
cmp
sbb
add
(bad)
mov
push
adc
adc
sti
pop
daa
(bad)
ins
call
pop
daa
xor
cmp
mov
sahf
call
push
mov
ret
xchg
push
(bad)
or
popa
mov
xchg
xchg
scas
lea
mov
sbb
xchg
xlat
mov
fincstp
or
das
(bad)
test
mov
xlat
mov
outs
outs
sbb
sub
add
inc
pop
pop
fs
js
sbb
bound
mov
dec
aad
inc
cmp
xor
adc
add
fstp
jne
int
ret
mov
pop
outs
jns
repz
cmc
sub
es
in
pop
xchg
push
aaa
xchg
fwait
lahf
dec
test
or
jl
(bad)
cmp
sahf
cmp
cwde
adc
cld
adc
into
sar
jb
push
or
dec
loop
dec
pop
cmps
fcomp
lods
jl
cdq
rol
es
xor
mov
cmp
add
lock
nop
sub
mov
(bad)
pop
pop
xchg
fcmovb
add
cmp
out
push
push
dec
cmp
sbb
or
out
mov
inc
mov
into
movs
cmp
sar
inc
sub
xor
mov
mov
add
sar
push
pop
data16
dec
mov
xchg
test
jge
cmc
stos
outs
mov
inc
jge
or
inc
pop
lods
pusha
xchg
mov
(bad)
pop
mov
retf
loop
hlt
bound
or
pushf
inc
loope
inc
leave
pop
shl
fwait
aas
cmp
sub
(bad)
mov
data16
fist
mov
xor
pop
push
cs
sub
push
sub
hlt
sub
sub
int3
add
icebp
dec
ins
add
lahf
call
pop
pop
xlat
dec
in
dec
mov
loop
arpl
iret
and
ds
js
jp
sub
push
xchg
cli
faddp
inc
std
push
xor
iret
in
lea
js
in
cld
sub
stos
fmul
inc
mov
call
ins
in
loope
outs
mov
sbb
arpl
inc
inc
cwde
push
cld
jne
in
pushf
push
adc
and
cwde
inc
and
mov
into
aaa
inc
cmc
xchg
adc
je
adc
ins
mov
add
push
out
mov
outs
pop
xchg
xchg
out
retf
test
sbb
mov
addr16
push
xor
dec
mov
iret
mov
(bad)
and
mov
inc
xor
iret
out
movs
mov
scas
inc
std
aad
inc
push
shl
hlt
scas
xchg
ret
imul
add
cwde
(bad)
js
sub
data16
fisub
mov
stos
push
out
xor
push
inc
and
sub
stos
mov
and
mov
jb
lods
bswap
popf
(bad)
mov
pop
cli
fdiv
push
push
push
xchg
jbe
mov
test
sti
push
cdq
sti
std
rcl
ins
dec
mov
dec
jp
mov
lea
dec
mov
mov
adc
inc
mov
mov
pushf
inc
loope
iret
push
sbb
lods
pop
add
fdiv
sbb
and
aad
lods
pop
push
or
mov
mov
pop
cld
sub
fisubr
jo
jne
fist
shl
mov
mov
mov
xor
sub
inc
mov
in
mov
adc
sub
repnz
push
sbb
pop
popf
push
cld
mov
mov
mov
or
arpl
shr
das
neg
sbb
and
xchg
test
mov
pop
aaa
cmp
lods
sbb
add
aad
std
sub
push
inc
cs
adc
adc
loop
fst
pop
dec
loope
cwde
ficomp
push
sbb
mov
cmp
cmp
fmul
add
or
cdq
in
shufps
jnp
push
retf
inc
stos
sub
xchg
fs
pop
jmp
(bad)
arpl
int
adc
mov
ja
lea
adc
shl
add
jle
mov
push
sahf
fdivr
dec
xchg
loope
or
and
(bad)
scas
jmp
jge
push
add
add
popa
add
inc
ds
dec
pop
in
ret
or
mov
test
stos
cs
push
mov
xchg
sti
mov
and
rep
inc
arpl
mov
repz
ficom
xor
pop
pop
mov
push
iret
adc
pop
and
ret
out
jmp
push
fcomp
dec
mov
jg
sbb
aad
mov
jg
ins
push
xlat
in
xor
dec
xchg
or
movs
xor
fs
fs
push
sub
(bad)
clc
(bad)
out
push
cmp
ja
and
icebp
jnp
test
and
pusha
cmps
cmp
push
adc
sbb
mov
retf
test
(bad)
sub
mov
jge
jmp
pop
push
stos
hlt
add
sbb
in
sbb
test
gs
movs
mov
pop
jbe
sahf
(bad)
js
push
neg
(bad)
fmul
pop
pop
xchg
push
push
xchg
xchg
xor
push
popf
dec
push
dec
pop
fisttp
cmc
dec
loopne
adc
pusha
mov
aad
adc
mov
inc
push
movs
xor
xlat
shl
scas
aas
icebp
jb
mov
sub
jne
nop
mov
push
and
add
enter
add
xor
int
rcr
int3
outs
sbb
(bad)
cmp
mov
pop
pop
jle
out
cmp
cmp
xchg
lods
pusha
jl
sub
test
jo
outs
jno
mov
movs
in
inc
in
outs
int
mov
add
mov
repnz
mov
sub
ret
mov
es
(bad)
rcr
sar
das
pop
jae
rcl
loope
(bad)
stos
pop
mov
adc
sbb
fcomp
mov
add
push
(bad)
shl
test
mov
mov
imul
sbb
imul
or
retf
and
inc
loopne
inc
mov
and
cwde
bound
enter
jle
cwde
push
push
into
and
call
aad
cmp
cmp
and
lahf
pop
out
fs
fmulp
popf
cdq
xor
add
mov
push
sub
mov
xchg
sbb
inc
push
adc
push
movs
pop
mov
pop
fist
or
scas
add
or
and
cld
jae
aaa
inc
mov
pushf
and
jmp
imul
stos
aas
(bad)
jl
call
stos
mov
adc
inc
ror
mov
xor
test
cmp
push
push
adc
sbb
repz
sub
jnp
and
add
push
call
out
retf
fldenv
call
cmp
dec
cld
adc
imul
sbb
mov
retf
push
sbb
inc
lock
jg
or
xadd
and
dec
daa
cmp
sbb
lods
lahf
(bad)
les
and
test
imul
push
(bad)
xor
pop
add
test
in
dec
inc
and
lods
sbb
mov
mov
mov
xchg
in
dec
cwde
pop
pop
jno
lods
push
or
dec
(bad)
out
ret
bound
in
(bad)
xor
mov
fiadd
inc
or
sbb
cli
dec
lahf
mov
in
add
jbe
push
push
imul
add
mov
jp
aam
jae
mov
pop
pop
adc
sub
cmps
sub
adc
jo
and
sbb
cmp
mov
hlt
push
jne
and
jmp
scas
and
push
xchg
scas
xchg
scas
and
btr
and
dec
add
or
(bad)
jg
mov
repnz
ins
cld
dec
mov
mov
(bad)
repz
ins
mov
ds
lods
sub
cld
pop
repz
pop
push
sub
and
aas
inc
xchg
jns
popf
(bad)
push
retf
cwde
cld
cld
fcomp
mov
add
pop
out
(bad)
js
mov
les
mov
mov
call
pop
cmc
data16
dec
xchg
pop
cmp
int
xchg
das
retf
(bad)
loop
cwde
sbb
call
dec
and
sar
mov
(bad)
xchg
les
ins
push
jge
cmp
jmp
pop
push
dec
pop
aad
or
aaa
xchg
std
push
retf
pop
aad
and
mov
(bad)
fst
into
sbb
sbb
(bad)
push
js
pop
imul
mul
mov
call
pop
mov
call
adc
jne
and
mov
loop
cmc
aam
js
adc
cwde
jne
push
je
sti
xlat
push
loopne
scas
cmp
(bad)
aaa
(bad)
sub
(bad)
mov
je
jbe
ds
cmps
mov
jg
sbb
mov
leave
cmc
out
outs
(bad)
dec
dec
js
push
pop
ss
sbb
loopne
scas
sbb
fcmovu
xchg
jp
sub
mov
push
fst
push
push
or
sar
shl
add
outs
imul
sbb
push
scas
pop
push
jmp
dec
inc
rol
jb
ins
fwait
push
adc
or
(bad)
dec
xchg
cmp
mov
xchg
popf
mov
sbb
fadd
add
shr
add
int
cmp
mov
add
mov
pop
(bad)
hlt
mov
dec
or
cmp
ja
jns
jp
sbb
adc
mov
or
int3
int
mov
shr
fstp
mov
xchg
mov
stc
(bad)
cdq
jmp
xchg
je
mov
sti
icebp
ret
push
stos
xchg
pusha
fild
rcr
jb
mov
adc
inc
mov
addr16
xor
jge
ret
bound
aad
repz
iret
pop
cmps
xor
sbb
mov
push
in
dec
dec
dec
sbb
sub
test
jg
pushf
popa
ins
test
shl
ins
jns
push
hlt
sbb
push
jmp
call
xchg
cmp
xor
and
xor
fwait
xor
sub
jg
mov
dec
cli
repz
stos
push
mov
inc
data16
cmp
sub
fbstp
cmps
pop
mov
or
and
and
xor
fs
adc
mov
inc
sub
movs
aad
clc
fs
test
pop
push
sbb
sbb
ss
jg
fs
nop
mov
push
adc
pop
cld
dec
inc
inc
cld
mov
pop
inc
mov
(bad)
test
inc
adc
lods
retf
jmp
inc
aam
push
popa
rcr
pop
xchg
fwait
cmps
pop
xor
dec
push
mov
fld
or
cld
xor
icebp
push
cmp
push
push
outs
xor
ins
or
or
imul
pop
nop
hlt
mul
jmp
cmps
out
movs
xchg
cld
imul
xor
dec
adc
pop
test
adc
lods
out
adc
pop
sahf
sub
test
ss
mov
fbld
fstp
or
push
fwait
sbb
imul
test
ja
dec
inc
lahf
mov
sbb
fidivr
mov
out
and
push
jmp
mov
imul
dec
cli
xchg
cmps
cmp
xchg
mov
or
out
mov
xor
out
dec
push
loope
jmp
jb
mov
hlt
repnz
mov
mov
pushf
es
pop
outs
cmp
jno
(bad)
fld
call
ins
mov
pop
call
enter
imul
ins
lock
xchg
in
dec
cmp
sbb
rcr
(bad)
sbb
mov
je
(bad)
push
cld
cmp
push
xchg
loope
ss
push
mov
pop
ret
lods
es
lea
in
and
outs
sbb
ja
js
fist
dec
jge
aad
ins
outs
inc
push
push
sub
pushf
jne
mov
fcmovb
dec
mov
es
push
adc
mov
(bad)
xor
ds
test
push
dec
mov
and
push
or
mov
and
xor
xchg
(bad)
cmc
lea
scas
pop
jp
in
test
imul
xchg
inc
lahf
mov
jp
mov
xchg
push
cmp
ret
pop
adc
sbb
(bad)
icebp
xchg
aad
ret
mov
test
shr
xlat
scas
fwait
jmp
loop
pop
adc
mov
mov
dec
jnp
test
lea
test
and
xchg
xchg
test
cli
scas
fadd
and
cmps
dec
into
rcr
inc
xchg
imul
push
push
fwait
adc
xor
lods
dec
pop
pop
inc
xor
cmp
jne
xor
add
icebp
fsub
jl
xlat
dec
mov
cli
cmp
push
and
ret
hlt
xchg
mov
cld
mov
int3
jmp
out
into
in
stos
(bad)
jb
dec
xor
popf
fmul
jnp
ret
xchg
pop
sahf
aad
push
dec
mov
dec
push
or
mov
and
adc
sti
sar
sbb
leave
stos
sbb
outs
or
mov
adc
and
adc
dec
neg
sahf
adc
test
popf
push
ret
retf
fstp
sbb
adc
inc
icebp
mov
xchg
lahf
cdq
loope
std
daa
push
jne
bound
push
adc
jmp
cmp
mov
je
push
inc
jl
dec
add
daa
cmp
push
loopne
mov
fmul
gs
adc
loope
pop
stos
or
mov
mov
cdq
sub
jmp
pop
mov
(bad)
fidiv
cld
cmp
test
retf
or
sub
dec
and
xor
(bad)
mov
scas
ja
lods
pop
retf
push
ins
aam
fwait
out
mov
scas
jb
push
mov
ja
test
xchg
das
scas
clc
ss
ins
or
cmp
int3
loopne
(bad)
aam
or
mov
movs
hlt
dec
mov
stc
out
(bad)
scas
mov
push
push
popf
xchg
fisttp
fs
xchg
cmp
sub
loope
jb
cmc
rcr
push
ror
fsin
sbb
neg
push
jno
loop
in
(bad)
inc
pop
push
mov
mov
je
mov
dec
mov
mov
xor
mov
jmp
repz
inc
adc
pop
jbe
adc
pop
mov
inc
and
mov
sub
sbb
mov
out
in
pop
lods
jl
cmp
(bad)
aad
not
cwde
adc
mov
int3
mov
dec
push
inc
cmpxchg
cmc
div
xor
fdivr
shl
sub
cs
sub
add
out
retf
xchg
imul
rcr
(bad)
adc
scas
sbb
std
sub
stos
ins
test
fcmovu
xor
push
neg
or
jae
pop
and
cmp
out
mov
dec
fwait
aaa
in
pop
inc
sub
in
enter
rcl
push
lods
sub
jae
(bad)
shr
fwait
ds
in
push
ficomp
aam
sub
xchg
pop
jns
pop
jo
scas
mov
dec
jmp
push
jae
stc
mov
jmp
xchg
dec
(bad)
push
push
inc
cmp
retf
ja
test
rcr
or
mov
push
movs
paddsw
adc
xor
mov
jns
(bad)
pop
add
ret
and
push
cwde
ret
stos
add
test
sbb
imul
sub
test
sbb
mov
and
jmp
stos
sub
adc
cmp
push
aas
xrelease
neg
fnstsw
stos
xchg
das
leave
xlat
mov
bound
push
rcl
and
rcr
shl
pop
jmp
dec
push
mov
in
sbb
sbb
pop
or
pop
(bad)
jbe
(bad)
fcom
fist
scas
adc
repz
fs
cwde
adc
xchg
in
fwait
arpl
out
aam
(bad)
push
aas
ret
cmps
(bad)
pop
cmp
cli
push
sti
sbb
fstp
mov
ja
pop
popf
adc
push
cli
addr16
pop
std
sub
repz
xorps
popf
retf
mov
lahf
aad
nop
in
test
das
leave
jb
mov
or
mov
xlat
enter
loope
dec
int
ret
mov
xchg
(bad)
sub
cmp
adc
sub
adc
out
mov
inc
(bad)
cmp
scas
cmp
cmp
mov
dec
sbb
ins
push
mov
shr
jns
cmova
fild
mov
mov
adc
je
fwait
xor
int
adc
jb
mov
pushf
cmps
stc
pop
aad
cmp
push
addr16
loopne
adc
leave
xchg
or
xlat
gs
cmp
jbe
pusha
adc
mov
daa
aas
or
xor
adc
fsub
pop
call
ins
cmp
idiv
adc
jb
and
push
inc
ins
sahf
pop
fwait
adc
push
sbb
jl
adc
daa
pop
jae
push
ins
fild
pop
(bad)
not
mov
or
mov
hlt
push
imul
sub
scas
sbb
scas
mov
jns
fistp
(bad)
pop
repz
int
scas
and
dec
shl
mov
cli
xchg
scas
push
ds
dec
push
sbb
push
imul
movs
xor
dec
jmp
retf
lods
mov
shr
inc
nop
jnp
jmp
(bad)
cmp
call
popf
cmp
push
in
popf
mov
es
aam
jo
imul
lahf
imul
xchg
xchg
sti
pop
aas
(bad)
push
xchg
mov
outs
jg
arpl
dec
mov
sbb
add
and
sub
mov
cli
iret
inc
cmp
icebp
cmp
fs
outs
(bad)
jmp
ret
loopne
or
mov
jecxz
cwde
dec
and
ins
adc
mov
cmp
mov
int
(bad)
stos
pcmpeqd
cmp
es
pusha
xchg
out
sub
sbb
cmp
mov
popf
in
jp
fdiv
data16
rcr
enter
xchg
sbb
std
cmp
mov
aam
or
add
call
(bad)
mov
xor
inc
in
sub
imul
hlt
retf
jb
sub
lahf
ficom
push
fwait
pusha
js
(bad)
fimul
cmp
int3
push
call
pop
ret
pop
(bad)
xor
rcl
mov
lods
loopne
jle
and
sbb
inc
lods
daa
jae
push
into
stc
and
pop
inc
pop
lds
mov
dec
mov
std
mov
xchg
fcom
data16
or
cmp
sbb
adc
movs
ret
push
add
out
cmp
push
push
mov
and
pusha
push
sbb
daa
sbb
repz
(bad)
lock
xor
xlat
lods
daa
repz
xor
stos
fidiv
jp
jp
ja
stos
stc
push
and
cmp
lea
icebp
fmul
and
cwde
ins
adc
dec
xchg
in
bound
jmp
retf
aad
cmps
pushf
popa
pop
dec
jmp
push
mov
jmp
add
inc
inc
or
add
fsubr
pop
fsub
imul
retf
cld
dec
lock
out
push
push
dec
jo
push
xchg
leave
jl
pop
sti
mov
dec
in
fcom
pop
jmp
or
and
cmp
pop
in
bound
icebp
outs
xor
lock
sub
jmp
mov
sub
add
aas
loopne
aam
movs
mov
push
mov
add
aaa
cmp
inc
ins
test
mov
clc
je
nop
mov
(bad)
jno
pop
stc
cld
sub
ret
mov
fs
fs
(bad)
mov
je
les
xchg
push
popa
adc
cwde
stc
pop
(bad)
leave
test
cmp
or
add
rol
push
sbb
push
imul
es
cmp
sahf
push
mov
into
and
dec
cmps
pushf
mov
mov
jmp
call
mov
js
jle
mov
push
cs
jo
mov
pop
inc
and
hlt
ja
dec
mov
mov
mov
jmp
sub
adc
sbb
inc
add
add
xor
sub
loopne
cmp
and
xchg
sbb
fist
xchg
fldenv
ja
popf
sub
enter
pop
xor
gs
sbb
dec
xor
into
jb
sub
mov
pop
dec
jo
nop
ror
mov
push
cld
sub
repnz
in
lods
inc
pop
xchg
rcl
push
jl
test
xchg
jns
scas
pop
sbb
adc
ret
test
fcmovnbe
(bad)
mov
mov
setle
ret
sahf
jns
das
pop
push
adc
retf
retf
push
push
cld
fwait
hlt
mov
xchg
aad
stc
mov
sahf
loop
push
fdivp
xor
xor
mov
inc
pop
sbb
dec
aas
aam
mov
iret
sbb
xor
fsubr
popa
out
repnz
cs
jbe
inc
adc
bound
out
add
jno
push
in
std
rcr
mov
pop
dec
pop
pop
push
arpl
inc
cmp
xchg
jecxz
pop
xchg
dec
pop
lods
scas
(bad)
lahf
fisttp
aas
sub
call
jl
or
pop
xchg
pop
std
loope
loope
mov
dec
ror
add
outs
mov
lock
adc
leave
shl
cld
mov
popf
push
fldcw
popa
xchg
pop
repz
pusha
jmp
or
adc
inc
mov
lea
jmp
pushf
sub
in
add
mov
inc
push
mov
fstp
call
mov
jns
movs
xchg
mov
jae
mov
add
das
and
add
enter
mov
stos
cwde
mov
jno
pop
icebp
(bad)
cmp
jmp
icebp
gs
mov
js
push
xchg
aam
int
pop
xlat
pop
fs
mov
jno
out
aas
xor
pop
adc
arpl
xchg
neg
pushf
mov
or
sub
pop
add
sahf
or
mov
xchg
adc
add
jmp
pop
or
pop
push
retf
out
sbb
add
push
std
shl
push
imul
mov
popf
in
aam
xchg
call
aas
jae
jmp
xor
jbe
pop
cld
fcom
loope
xlat
mov
xchg
mov
mov
pushf
dec
mov
or
out
cmp
cmp
push
int
out
cli
(bad)
(bad)
mov
ins
inc
sub
addr16
mov
adc
mov
cmps
pop
idiv
mov
popa
sub
movs
iret
adc
pop
out
dec
mov
repz
mov
mov
xor
into
lods
add
sti
retf
add
mov
push
fs
(bad)
cmp
in
sbb
mov
mov
enter
enter
scas
push
jecxz
inc
sbb
mov
jns
pop
mul
push
mov
stos
dec
repnz
rcr
jo
mov
loop
xlat
movs
mov
(bad)
out
push
ja
jl
cmp
fidiv
loop
mov
mov
xchg
sbb
jl
and
gs
inc
adc
inc
xor
test
adc
cld
pop
popf
fwait
gs
and
loope
push
xlat
xchg
scas
aas
push
das
mov
cmp
mov
inc
sub
jle
push
push
pop
js
sbb
ret
dec
cli
jbe
das
stc
pop
or
mov
pop
mov
pop
test
cld
mov
push
mov
outs
lahf
xchg
cmp
push
sub
sbb
cmp
lods
inc
ret
mov
add
add
jge
adc
out
sub
shl
cwde
inc
xor
push
jle
mov
dec
sti
call
mov
aas
cmp
repnz
jns
imul
jge
xor
gs
push
mov
push
in
sbb
or
popf
jae
dec
cli
sub
adc
mov
inc
pop
jb
test
imul
mov
in
fistp
push
mov
sbb
dec
cmp
push
lds
ror
fistp
mov
xchg
adc
xor
sysenter
jae
mov
aas
rcr
and
push
hlt
outs
cmp
les
icebp
ret
pop
mov
aad
jmp
pusha
xchg
pop
(bad)
fwait
cmp
popa
and
je
es
xor
jle
adc
xchg
mov
jg
jmp
and
or
mov
sbb
ror
ret
nop
sub
mov
dec
aam
fstp
ds
push
jmp
fstp
sbb
pop
push
push
(bad)
push
xchg
hlt
fsubr
leave
sub
shl
js
push
add
adc
outs
pusha
dec
iret
jge
pop
je
les
xchg
push
ss
loop
dec
jg
repz
jmp
mov
cmc
call
sahf
cmp
pop
mov
pop
cld
test
mov
outs
push
pop
pusha
or
sub
cmp
(bad)
(bad)
pop
jecxz
leave
sub
xchg
fwait
pop
rcr
xor
mov
mov
sub
jmp
(bad)
mov
push
push
loop
call
add
cmp
sahf
pop
fs
out
ins
gs
js
pop
jmp
mov
jbe
lfs
push
xchg
cmps
cwde
inc
jle
call
ja
mov
into
and
stos
jmp
jl
iret
loope
adc
cs
adc
ret
lea
sahf
outs
jnp
cmp
fs
cli
test
fwait
inc
mov
ds
fbstp
adc
cmp
je
hlt
call
jb
(bad)
pushf
cld
or
pushf
(bad)
push
aad
je
or
pop
shl
pop
adc
jo
cwde
scas
pop
sub
xchg
in
fldenv
out
idiv
sbb
jns
pushf
pop
dec
inc
sbb
pop
je
fild
pop
movs
xchg
jmp
dec
pop
push
pminub
test
cmps
fcom
daa
sbb
adc
pop
test
xor
pop
push
jmp
lahf
mov
push
and
pop
sahf
fimul
cmp
(bad)
jecxz
pop
(bad)
jns
mov
dec
pop
lahf
fdivp
pop
push
inc
inc
or
sbb
or
jbe
fst
mov
movs
mov
mov
mov
inc
mov
jp
scas
pop
test
sub
movs
pop
mov
push
adc
bound
pop
adc
ror
inc
sub
mov
xchg
jo
cmc
in
iret
xchg
std
out
jmp
aad
jne
retf
push
sahf
std
les
or
add
inc
mov
cwde
dec
movs
jg
dec
in
arpl
mov
push
xchg
shl
xor
gs
(bad)
out
aad
sub
xor
movs
jne
jg
add
pop
ins
dec
fs
inc
popf
xor
sbb
or
ja
aas
ins
ret
dec
in
jl
xor
push
sub
push
adc
and
ins
mov
sbb
and
dec
arpl
pop
push
popf
into
int
pop
into
xchg
lock
js
mov
cs
aas
mov
adc
cwde
inc
push
jmp
and
mov
std
cld
pop
mov
lock
pop
xchg
cmps
cdq
and
cdq
lods
mov
sub
mov
cdq
cmps
and
xor
jae
fsubr
lea
call
jecxz
and
(bad)
jae
int3
xor
pop
fsub
jle
cmps
stos
loope
popa
jmp
cmps
ins
popf
jae
inc
pushf
mov
mov
and
in
mov
xchg
pop
mov
loopne
dec
cmp
mov
jge
mov
mov
mov
fadd
adc
and
xor
jno
fsubr
dec
js
and
cmps
mov
(bad)
pop
fsub
mov
lea
or
pop
sub
xchg
arpl
sub
(bad)
xchg
pusha
push
aad
mov
pop
mov
imul
fcomp
imul
movs
xor
pop
push
scas
out
sbb
stos
and
pop
cmps
pop
mov
cmp
sbb
push
mov
lods
mov
aaa
add
lds
add
mov
xchg
sar
fbstp
outs
pop
push
push
dec
dec
jne
pop
mov
pop
mov
xchg
ret
nop
jle
add
xchg
jne
addr16
mov
int3
repz
(bad)
dec
pop
adc
sub
cmp
ja
mov
pop
rol
sbb
jmp
adc
cmps
lock
xchg
add
mov
int
pop
fiadd
aaa
int3
xchg
xchg
mov
cmps
lea
mov
int
mov
ret
test
imul
xchg
cmp
jp
stos
push
test
lahf
sbb
mov
ins
nop
cmp
in
(bad)
cs
xchg
scas
int
in
sbb
pop
shr
pop
cli
mov
or
mov
pusha
clc
or
lock
in
pop
xor
add
add
pop
adc
dec
ficomp
pop
call
int
and
inc
fild
retf
js
fdivr
xor
jbe
out
fdivr
(bad)
outs
popa
clc
aam
lock
fcmovnu
jne
mov
mul
push
int3
cmp
aam
iret
dec
aas
sub
mov
shl
inc
push
push
in
dec
cmp
inc
in
std
enter
scas
jle
xchg
repz
std
stc
arpl
xchg
call
stc
adc
and
sti
jg
sar
mov
push
sbb
mov
push
push
fistp
jns
shl
shr
adc
sbb
inc
dec
dec
sahf
fs
pop
mov
imul
pushf
xchg
rol
imul
ret
jne
inc
outs
xlat
lahf
xor
xor
(bad)
mov
sub
rcr
pop
sbb
stos
mov
xor
gs
fnsetpm(287
push
test
out
in
ins
rcl
int
out
nop
rcr
ret
ins
cli
mov
cli
test
sti
xor
jmp
call
(bad)
popf
sub
aad
in
fwait
mov
xlat
push
icebp
in
div
jo
and
ins
sbb
xor
adc
jo
mov
push
ret
pop
mov
retf
jmp
xchg
mov
and
cmps
sbb
push
xchg
mul
jmp
pop
sahf
loope
fisub
data16
sub
test
push
jo
pop
mov
repz
add
pop
cs
repnz
(bad)
cmp
jl
push
rcl
ja
dec
sub
and
test
dec
test
repnz
jnp
retf
and
retf
imul
lahf
imul
cli
or
dec
arpl
aaa
mov
cmc
cmp
stos
pop
mov
sbb
sub
in
popf
jg
pop
sbb
sub
je
jo
dec
lock
arpl
dec
fsubr
in
sbb
sbb
mov
(bad)
vpmaxub
push
aam
or
shr
mov
movs
push
mov
jl
cwde
pop
add
outs
movs
aam
(bad)
fisubr
and
add
mov
fsubr
mov
(bad)
or
and
xor
add
(bad)
stos
sbb
jmp
call
mov
dec
mov
hlt
cs
inc
icebp
jmp
out
scas
(bad)
in
pusha
pop
gs
push
ffreep
test
sahf
sub
pop
in
pop
movs
xor
sub
cmps
dec
jmp
pusha
jecxz
test
retf
cmp
rol
jae
retf
inc
adc
or
cmp
enter
inc
cmp
mov
mov
movs
add
aad
jmp
dec
xchg
add
xchg
fs
cld
scas
in
int3
xlat
jmp
stos
cmp
lods
xchg
aam
pop
call
pop
xor
push
movs
jae
scas
cwde
imul
movs
sahf
ja
cmp
aam
sub
scas
mov
mov
or
mov
rol
mov
std
inc
xchg
push
xchg
(bad)
pushf
dec
dec
ins
mov
jecxz
inc
rcl
pop
inc
push
fld
mov
aam
addr16
push
into
scas
cdq
and
mov
pop
or
fs
sub
adc
lahf
cdq
cmp
jbe
gs
imul
pop
fwait
jae
pop
push
mov
xor
stos
pusha
push
test
fistp
xchg
jno
sub
clc
scas
aaa
or
mov
mov
sub
xchg
cdq
pop
mov
out
js
loopne
push
bound
es
jae
(bad)
mov
ins
loopne
clc
pop
sbb
iret
pop
sbb
xor
hlt
enter
adc
jne
xor
and
xor
ret
sbb
mov
dec
and
hlt
mov
cwde
and
pop
pop
mov
call
scas
pop
(bad)
and
lods
push
xor
and
cld
shr
pop
rcl
cmps
lock
sub
dec
mov
xchg
mov
lahf
fdiv
xor
shr
imul
jae
lods
ins
pop
sahf
les
sub
mov
ret
hlt
adc
sub
xchg
mov
lds
pop
dec
add
inc
add
(bad)
sti
sbb
(bad)
fstp
add
jb
mov
sub
stos
out
mov
in
xor
inc
sub
dec
popf
push
out
pop
hlt
aam
mov
and
addr16
xchg
mov
jmp
std
ret
jae
add
mov
dec
lahf
jg
xor
jmp
xor
xchg
nop
in
push
xchg
pop
and
test
nop
dec
sub
mov
pop
push
sbb
(bad)
pop
clc
call
or
mov
mov
sub
arpl
mov
or
ficomp
mov
scas
push
and
(bad)
movs
aas
lods
and
repnz
jl
mov
mov
cmp
dec
test
(bad)
call
mov
mov
jle
sub
pop
pop
loope
in
add
and
add
push
or
scas
add
sbb
(bad)
scas
sahf
adc
mov
and
mov
pushf
pushf
and
test
and
retf
test
pop
pop
dec
pop
dec
mov
mov
sbb
push
mov
pushf
adc
aam
in
test
shl
jbe
in
scas
and
push
pop
xchg
sbb
xchg
pusha
(bad)
xchg
or
popf
push
jmp
cld
sar
sbb
add
and
enter
sbb
pushf
std
inc
daa
inc
cli
mov
cmps
sbb
(bad)
rcl
pop
mov
test
dec
mov
mov
cmp
movs
cmp
xchg
adc
sub
xchg
in
dec
addr16
retf
jl
inc
mov
cmp
add
pop
add
add
jmp
mov
ret
sti
dec
jae
pop
mov
inc
and
xor
pushf
outs
inc
inc
push
add
mov
aad
iret
push
xchg
call
bound
lods
mov
jp
push
jb
xor
ss
jns
fidiv
mov
mov
dec
ret
je
and
push
mov
adc
iret
mov
cmp
js
mov
ss
pop
ret
shl
xchg
or
ins
in
mov
imul
mov
xchg
push
stos
jmp
sahf
(bad)
adc
or
test
stos
data16
pop
push
(bad)
jle
inc
xchg
ins
jmp
sub
and
inc
out
inc
dec
dec
ja
shl
add
cmp
inc
(bad)
jmp
mov
pop
pop
jge
mov
div
inc
mov
lods
mov
nop
sbb
shr
push
adc
call
int3
sub
mov
cmp
dec
jp
add
(bad)
out
ds
daa
pop
and
(bad)
push
xchg
pop
pushf
sbb
mov
mov
out
repnz
ret
mov
outs
dec
pop
stos
imul
scas
xchg
mov
icebp
mov
sub
test
mov
cmp
arpl
ret
ret
sti
in
jbe
mov
sbb
push
cmps
sub
scas
arpl
retf
rol
dec
cmp
pop
jmp
cmp
xor
ss
ins
xor
jnp
xor
dec
sub
push
ins
aas
call
xchg
sbb
xor
or
lds
out
xor
ins
xor
retf
push
mov
imul
les
or
sub
out
add
mov
cmp
(bad)
js
ins
xchg
xor
jo
mov
add
push
cmp
(bad)
in
xchg
mov
mov
pop
add
cmps
mul
lock
push
xlat
ret
call
(bad)
mov
outs
pop
out
push
out
repz
daa
or
ja
pop
push
cli
pop
push
pop
push
aas
aaa
sub
push
rcr
jmp
sar
pop
fild
into
jo
retf
pop
push
mov
outs
lods
call
adc
mov
(bad)
(bad)
push
shr
add
test
or
(bad)
sahf
repz
push
shl
stos
fsub
popa
outs
cmp
retf
adc
arpl
xchg
pusha
mov
sti
lea
ins
inc
push
jnp
xor
pop
movs
imul
lds
push
mov
rcr
push
pop
fsubp
and
jecxz
mov
test
fidiv
and
aas
fbld
push
sahf
outs
outs
sub
or
pop
sbb
mov
xor
dec
scas
mov
mov
fimul
lahf
into
jg
and
not
xchg
aas
xchg
sbb
imul
pop
(bad)
mov
ss
sub
bound
sub
les
stc
mov
(bad)
mov
int
addr16
or
mov
push
and
inc
iret
rcr
fwait
das
cmp
xchg
push
push
push
inc
inc
xchg
and
in
pop
jle
cmc
aad
adc
adc
fidiv
jo
les
mov
cmp
jmp
call
imul
into
imul
mov
push
dec
sub
sbb
rcl
imul
lods
mov
add
aad
xchg
inc
pop
and
adc
hlt
sbb
sub
out
rcl
retf
(bad)
ficom
push
lea
pop
mov
(bad)
loop
and
adc
jg
cpuid
adc
inc
pusha
xchg
arpl
mov
outs
lea
cwde
sub
jmp
ror
add
jl
jmp
imul
arpl
push
fldcw
mov
aaa
ss
shl
push
sub
adc
lds
outs
push
pop
mov
not
dec
cmp
addr16
mov
gs
fwait
sti
rcr
cli
xchg
(bad)
cmc
cmp
push
in
shl
movs
jmp
imul
or
movs
adc
sbb
ror
push
sbb
test
ret
sub
scas
jnp
sub
jns
adc
mov
adc
and
loopne
jmp
pop
push
mov
mov
dec
adc
mov
cmp
cmp
pop
inc
cmp
dec
jecxz
ins
mov
cmps
in
leave
pop
adc
mov
or
push
and
cmps
pop
inc
daa
dec
push
add
push
add
add
movs
fiadd
or
(bad)
fwait
daa
and
inc
mov
push
lea
retf
retf
xchg
mov
push
shl
sbb
out
inc
repz
xchg
dec
xor
dec
inc
pop
sub
dec
fsub
int3
mov
push
fist
imul
arpl
mov
jo
sbb
ds
int
scas
jmp
call
push
xchg
repnz
push
add
jne
push
repnz
imul
retf
dec
rcr
cmc
js
adc
ret
sub
xchg
call
sbb
jae
cdq
mov
cmc
add
jne
(bad)
movs
cdq
dec
enter
cmp
popf
pushf
shl
(bad)
dec
lods
or
or
xlat
mov
xchg
xchg
neg
leave
cmp
nop
gs
rcr
inc
add
ins
xchg
fldlg2
sahf
dec
dec
inc
push
aam
jnp
test
retf
adc
out
rcl
loope
and
pop
sbb
lahf
fwait
cli
xchg
add
fadd
add
shl
arpl
push
cmp
aam
retf
xor
pop
lea
repnz
imul
ss
in
jmp
pop
inc
inc
pop
add
loope
push
sub
cli
ror
mov
inc
out
push
mov
xchg
ins
mov
shl
mov
mov
adc
adc
daa
mov
or
lods
fcmovnb
(bad)
pop
jbe
std
retf
pushf
cs
sub
pop
out
adc
int
sbb
jo
test
les
bnd
adc
mov
in
and
jns
dec
inc
pop
out
int
or
ss
mov
movs
xor
int
cwde
cmps
jecxz
fdivr
cmp
jbe
arpl
stos
inc
and
ja
pop
test
inc
sti
xlat
mov
dec
ss
inc
cmp
pop
dec
mov
push
(bad)
sbb
jmp
loopne
jbe
push
in
fcmovnu
popa
mov
add
cmc
cli
xor
add
push
and
inc
and
add
jns
cmp
int
fdivr
mov
or
pop
adc
sub
push
xchg
loop
sbb
push
popf
adc
inc
call
lods
cli
mov
inc
std
add
rcr
push
fwait
mov
add
call
mov
stos
popa
ret
mov
add
mov
cli
imul
add
movs
outs
sbb
inc
mov
pop
stos
(bad)
aam
enter
sbb
pop
sbb
ja
inc
rep
push
mov
outs
fcmovnbe
pop
pop
inc
mov
stos
ins
mov
jae
fistp
mov
(bad)
pop
xchg
mov
pushf
inc
sti
fldenv
outs
iret
sub
add
fwait
and
inc
dec
fcom
xchg
fs
dec
loope
arpl
ins
call
fsubr
cdq
push
in
scas
or
adc
pop
ds
adc
fstp
dec
jge
adc
add
pop
pop
jl
sub
ins
call
dec
jmp
push
xor
nop
sub
jl
jo
fmul
(bad)
fwait
and
cmp
dec
push
gs
jo
adc
push
bound
int3
fild
push
pop
pop
repz
inc
sbb
xchg
out
ins
mov
mov
cmp
ds
xchg
add
pop
nop
sti
and
inc
mov
xchg
cmp
call
ret
es
add
arpl
sbb
mov
aam
dec
lds
das
xor
repnz
adc
xchg
adc
or
push
jp
push
cmp
sub
cmps
mov
jge
adc
jle
sub
nop
sbb
xor
push
pushf
cs
adc
out
scas
(bad)
adc
test
call
popf
test
sbb
mov
xchg
and
ins
xchg
jo
fs
xchg
std
test
push
jecxz
mov
sub
pop
das
into
test
div
push
push
dec
xchg
hlt
out
inc
pushf
scas
push
push
adc
ficom
bound
data16
cli
dec
movs
pop
pop
push
fs
(bad)
(bad)
jb
mov
jb
cmp
hlt
pop
js
sbb
pop
cmps
mov
retf
mov
pushf
repz
jecxz
in
inc
ret
jecxz
pusha
in
xchg
cmps
out
inc
mov
(bad)
shl
inc
in
or
inc
jl
fld
jmp
fist
mov
and
gs
xor
nop
mov
gs
or
inc
jmp
sub
rcl
inc
mov
mov
dec
(bad)
xlat
pop
icebp
std
inc
pusha
in
sahf
out
push
pushf
mov
adc
jmp
mov
sub
out
out
daa
or
cmp
data16
xchg
das
cmp
mov
stos
mov
or
gs
(bad)
or
pop
mov
ja
or
xchg
das
sbb
mov
adc
and
dec
sahf
or
out
inc
mov
xchg
add
sar
out
daa
lods
cdq
xchg
cdq
sbb
mov
clc
mov
jns
lods
mov
daa
(bad)
adc
fdivr
loopne
jg
adc
mov
imul
push
xor
iret
not
stos
mov
mov
cmc
dec
in
aad
lea
jmp
cwde
dec
push
sbb
nop
adc
push
pop
jmp
addr16
movs
cmp
stos
mov
shr
stos
cmp
dec
xor
rol
adc
ja
pop
xchg
fld
retf
push
jp
aad
icebp
loop
pusha
rcr
pop
cmps
jge
adc
sub
lahf
not
call
pop
pushf
test
xchg
mov
mov
ret
retf
popf
dec
pop
mov
or
adc
mov
test
fist
mov
xchg
enter
test
test
mul
ss
repz
sub
pop
mov
cmc
mov
outs
xor
push
lock
or
clc
ret
dec
inc
sub
push
retf
fst
mov
add
push
nop
mov
cwde
pop
inc
inc
jle
push
pop
inc
xchg
xchg
out
adc
adc
icebp
add
sbb
xor
sbb
add
stos
and
cmp
clc
stos
ja
sbb
sti
xchg
lods
push
lds
ja
push
popf
xchg
int3
cwde
stos
or
dec
inc
or
xchg
push
sahf
push
rcl
jno
cwde
jmp
xor
scas
and
addr16
lods
add
jl
aas
mov
es
jl
out
dec
fsubr
hlt
pop
ret
or
inc
xor
inc
mov
and
xchg
or
mov
xor
xor
sbb
or
mov
mov
sub
stos
fnclex
mov
cmp
test
rcr
movs
(bad)
outs
mov
cmps
sahf
mov
mov
jmp
pushf
mov
into
or
add
outs
push
lea
sti
sub
xor
dec
push
movs
test
movs
sbb
je
pop
aas
js
pop
sub
pop
out
push
pushf
loopne
test
pop
jo
adc
enter
sbb
pop
xchg
mov
jg
mov
pop
pop
in
test
or
adc
leave
test
pop
pop
pusha
iret
pop
sbb
xchg
test
sub
push
rcr
adc
and
and
shr
(bad)
ins
sub
fidiv
inc
fsub
mov
movs
xor
add
mov
gs
push
test
mov
ins
adc
xchg
lea
adc
and
jo
pop
fwait
mov
out
leave
jmp
inc
fstp
adc
out
sbb
(bad)
jae
push
sbb
imul
ror
(bad)
fidiv
fwait
cmps
repz
sbb
sub
daa
mov
stos
in
jge
jmp
js
sub
mov
jle
icebp
mov
push
outs
xor
cmc
int3
cli
mov
pushf
leave
add
push
fsubr
mov
pop
or
enter
test
or
push
fs
push
jne
ret
pop
jb
fs
inc
test
cwde
pop
jo
xor
and
pop
les
movs
xchg
cli
lods
fwait
fwait
adc
mov
fild
add
push
sbb
scas
loopne
xor
shl
fdivr
sbb
enter
sbb
and
and
(bad)
cdq
push
iret
rcl
aaa
jg
xchg
lods
(bad)
test
push
cwde
push
sbb
out
cmps
jmp
mov
jbe
fdiv
dec
cmp
mov
rcl
pusha
dec
test
fcom
outs
(bad)
jmp
sub
mov
jmp
lahf
addr16
ficomp
rol
dec
fsubr
fisttp
push
(bad)
ficom
pop
pop
mov
sub
(bad)
loop
pushf
enter
mov
xchg
fnstsw
and
dec
xor
(bad)
in
or
test
jge
retf
mov
lock
mov
test
js
shl
les
sbb
cmps
in
mov
sbb
call
jnp
outs
das
push
call
in
rcl
add
push
pop
inc
sbb
loop
pop
popa
pop
adc
into
jno
jecxz
(bad)
and
shl
dec
xor
or
pushf
repnz
mov
rcr
mov
push
pand
mov
mov
xchg
jmp
cmc
das
loopne
jp
sub
jg
repnz
out
push
sub
sub
push
popf
mov
inc
ja
xchg
jnp
mov
(bad)
push
jbe
movs
xor
imul
push
cmp
mov
or
pop
imul
pop
cdq
or
push
cli
xchg
add
pushf
sub
in
mov
adc
jecxz
xor
mov
lock
add
mov
pop
push
sbb
add
mov
fcomp
add
fcom
les
cwde
in
xchg
lock
or
or
push
(bad)
lods
aas
or
pop
call
ins
mov
mov
cmp
mov
mov
retf
sub
jo
aam
sub
ror
fisub
shl
mov
pushf
and
mov
loop
push
enter
xchg
inc
fcomp
xchg
retf
push
stos
sub
adc
mov
or
retf
bound
mov
cdq
mov
sub
sbb
pop
jp
loope
mov
jno
das
fmul
outs
jp
sbb
cmp
retf
pop
sti
jle
movhps
ss
mov
cdq
fbld
sbb
outs
jle
mov
sbb
hlt
dec
jns
pop
imul
add
cmp
and
jg
sbb
sub
xchg
sbb
stos
add
sbb
je
stos
sub
jne
cmps
repz
lds
mov
sbb
sbb
jb
mov
arpl
dec
adc
xchg
push
cmp
jmp
sbb
pop
loope
pop
sub
fist
shr
imul
shl
repz
in
push
mov
adc
sbb
mov
xchg
test
dec
pushf
sub
mov
(bad)
push
call
adc
gs
mov
jo
frstor
cmp
xchg
es
arpl
stos
inc
mov
fs
ins
movzx
aad
pop
mov
icebp
out
push
jne
push
test
dec
push
in
ja
popf
cs
in
imul
jecxz
movs
pop
out
pusha
and
daa
add
shl
data16
imul
mov
lods
push
push
ret
popf
push
and
ret
scas
fimul
adc
aad
bound
sub
sar
push
fmul
pop
xchg
inc
xor
int
bound
mov
dec
mov
imul
add
das
mov
cmp
mov
shr
dec
jge
imul
ficomp
xchg
sub
ds
cld
jmp
(bad)
mov
rcl
xor
arpl
(bad)
clc
xchg
jno
mov
pop
sbb
cli
and
or
in
test
not
icebp
xor
push
daa
mov
mov
or
xchg
and
nop
pop
ror
or
test
adc
lods
jmp
fcos
push
ins
int3
xor
sub
pop
icebp
sub
hlt
mov
cs
push
arpl
sbb
outs
cld
mov
lods
jne
jl
icebp
loopne
pop
pop
dec
jmp
xchg
jecxz
or
icebp
and
pop
ret
out
push
add
scas
mov
aas
int
rep
jle
aaa
or
cld
pushf
imul
shr
test
cmp
pop
sub
sahf
imul
sbb
push
push
test
ds
or
or
mov
push
hlt
or
push
sbb
fsubrp
xchg
jmp
inc
enter
scas
addr16
xchg
pop
dec
data16
mov
das
add
fcom
pusha
mov
jne
sbb
push
scas
js
cmp
sahf
clc
push
(bad)
push
jl
js
lock
xor
loop
add
cmp
in
mov
sbb
cmc
jnp
xor
xchg
sub
jg
mov
jle
xchg
add
adc
xor
enter
sbb
mov
hlt
and
std
mov
sbb
enter
inc
das
sub
mov
pop
adc
call
sahf
add
bound
out
cli
retf
lods
inc
sbb
dec
repz
cmp
test
cmp
out
jg
mov
mov
sbb
sti
push
jae
sbb
sub
or
sub
retf
jnp
repnz
sbb
gs
fld
add
iret
adc
(bad)
test
out
aam
mov
ins
ja
lds
pop
data16
adc
hlt
loop
mov
mov
ins
retf
inc
mov
imul
adc
leave
add
push
adc
jnp
cld
daa
pop
push
and
pop
dec
cmp
or
adc
push
in
jle
pushf
arpl
fcomp
mov
pop
std
dec
push
cwde
and
or
pop
xchg
dec
scas
frstor
fdivr
push
idiv
fdivr
sub
adc
push
pop
dec
add
pop
add
mov
push
(bad)
fwait
xchg
pop
js
push
cmps
mov
nop
xlat
stc
aam
cld
mov
imul
and
pop
pushf
shr
sbb
enter
jge
push
sbb
mov
in
js
cmp
stc
jl
pushf
addr16
repz
ret
inc
outs
sbb
shr
pop
icebp
les
mov
gs
cmp
mov
push
push
adc
leave
mov
(bad)
push
adc
xor
sbb
test
push
sbb
adc
movs
repz
push
mov
or
adc
pushf
push
fmul
fcomp
shr
ret
mov
pop
jl
push
sbb
xchg
ret
jle
ror
fdivrp
int3
sti
jb
push
outs
add
mov
ins
sbb
or
push
dec
mov
mov
test
pushf
mov
or
adc
pop
ds
cli
inc
fcmovne
sub
aam
jge
cs
cwde
ins
in
fistp
addr16
imul
je
shr
call
fs
mov
aas
jp
xchg
test
mov
jmp
dec
mov
add
not
in
ins
or
dec
(bad)
mov
lea
xchg
scas
aas
add
fnstenv
jge
mov
scas
adc
mov
jle
sub
jne
lea
pop
and
sub
ins
fwait
aas
ss
mov
cmp
xor
mov
or
mov
cmp
or
push
repz
in
pop
jmp
pop
test
outs
sbb
aam
xlat
jge
push
pop
cmp
call
pop
std
sbb
sbb
fist
jb
repnz
mov
pop
mov
lea
shr
mov
aam
lods
xor
arpl
nop
sar
jp
jp
repnz
bound
cwde
gs
enter
sub
mov
xchg
push
cld
test
cmp
ins
mov
and
ret
rcl
jecxz
push
call
cmp
pop
adc
imul
mov
jbe
int
add
push
(bad)
mov
call
adc
nop
sbb
mov
xor
gs
call
gs
call
cwde
and
lea
mov
jo
push
aad
(bad)
inc
add
cmp
xchg
sbb
xchg
sbb
push
push
dec
jae
jo
sub
sbb
outs
inc
fucomi
mov
out
jmp
stos
dec
pop
(bad)
out
add
fisttp
or
sbb
pop
sub
and
and
push
sbb
mov
and
ins
mov
aad
or
jmp
das
pop
retf
fild
mov
push
bound
ror
pop
aas
inc
push
add
pop
aaa
dec
and
xchg
fst
mov
stc
(bad)
(bad)
sar
push
or
aad
out
mov
xor
mov
and
adc
adc
mov
aas
mov
fisttp
mov
imul
sbb
xchg
jne
bound
mov
mov
sub
ins
xchg
shl
sbb
call
mov
mov
js
sub
cmp
xchg
add
lds
pop
jmp
push
add
std
push
push
xchg
jb
(bad)
cwde
jae
mov
mov
xor
iret
and
outs
shl
scas
sbb
sbb
adc
push
loop
call
xor
mov
cmp
jns
cwde
adc
rcl
aam
mov
sti
daa
das
imul
jnp
int3
cmp
lahf
js
mov
sbb
shufps
pop
imul
sbb
mov
fmul
mov
mov
jle
scas
inc
stos
ins
mov
stos
cmp
ror
scas
call
jmp
cmp
mov
cli
jle
push
enter
fstp
cmp
cmps
in
out
fadd
fmul
mov
fist
jl
sub
pop
lock
push
xchg
test
fmul
pop
iret
cld
clc
ror
test
inc
xor
pop
sbb
xor
pop
jecxz
pop
ret
lea
jne
mov
dec
sar
push
push
pop
leave
ret
mov
dec
aad
xchg
leave
sbb
inc
mov
push
xchg
dec
xlat
push
test
lods
aad
pop
sub
(bad)
push
xor
std
jle
bound
sub
mov
cmps
cmp
sbb
dec
sbb
(bad)
pop
dec
or
push
das
or
cmp
cdq
add
sar
imul
shr
add
cmps
mov
call
push
ins
mov
out
ja
mov
mov
cmp
fild
dec
xchg
and
mov
add
ins
fwait
cmp
dec
loope
mov
dec
shr
push
cmp
cld
stc
sahf
pop
dec
push
xor
xlat
shl
jmp
push
pusha
add
add
mov
cdq
je
jnp
fidiv
pavgw
jmp
cwde
loop
jnp
test
mov
ret
sub
pushf
inc
loop
xor
jmp
lds
test
mov
test
repz
fwait
sbb
sub
sbb
push
push
xor
mov
addr16
and
xchg
retf
mov
outs
imul
push
outs
ds
sahf
and
cmp
inc
jl
iret
xchg
stc
dec
pop
push
sub
es
cdq
pop
pop
push
dec
sbb
pop
dec
and
add
ss
pop
repz
movs
ins
adc
mov
out
cdq
and
xchg
xchg
sub
scas
push
call
jmp
shl
mov
dec
cmp
jne
push
adc
push
push
pop
(bad)
add
push
cmc
ds
adc
pop
je
popf
pop
inc
std
dec
pop
push
pop
rcl
sub
push
jb
pop
pop
dec
sub
clc
cmps
xor
outs
jmp
pop
mov
or
aas
or
jnp
fadd
jne
jmp
loop
mov
outs
int3
pop
or
sub
mov
mov
loope
cmp
hlt
push
int3
(bad)
xchg
push
test
sub
cmp
inc
pushf
mov
inc
shr
sbb
jne
xor
pushf
iret
lds
push
imul
xchg
pop
mov
mov
or
stos
xchg
(bad)
push
out
out
fs
cwde
jmp
push
adc
clc
jnp
pop
iret
sbb
dec
mov
daa
mov
repnz
into
and
push
adc
cmp
jge
xor
dec
mov
fwait
cmc
pop
enter
xor
lahf
jmp
xchg
bound
or
cmp
call
retf
cmc
fmul
adc
loop
or
rcr
xor
ret
fidivr
dec
jo
xchg
jp
sub
adc
push
movs
lods
(bad)
mov
(bad)
js
(bad)
shl
aad
in
sub
dec
mov
int
outs
mov
cmp
push
xchg
cmp
sbb
mov
and
push
cmp
js
enter
xor
push
into
test
pop
arpl
out
ret
ins
mov
mov
xlat
clc
out
jle
aaa
repnz
icebp
push
out
test
sbb
pop
icebp
enter
call
mov
pop
ins
test
ffree
stos
and
rcl
in
outs
movs
xor
movs
mov
daa
(bad)
adc
(bad)
xchg
icebp
clc
pop
pop
add
push
jmp
push
aam
sbb
ja
sub
sbb
repz
cwde
popa
adc
loopne
mov
fmul
xor
ins
ss
sbb
add
aas
adc
or
jmp
xchg
adc
mov
sub
jmp
rcr
fidiv
sub
mov
fisub
and
dec
jo
jns
pop
ret
retf
mov
jmp
leave
pop
jl
rcl
jge
sub
mov
mov
xor
outs
cli
nop
push
pop
in
call
push
scas
pushf
inc
xor
pop
shl
pcmpgtw
lea
xor
mov
fsubr
jp
pop
sub
and
xor
ret
loope
mov
mov
fs
fild
fnstsw
int
arpl
dec
(bad)
pusha
call
mov
jnp
fiadd
mov
scas
dec
fcmove
push
fldcw
mov
sub
mov
xchg
push
add
aaa
retf
mov
out
mov
in
je
pop
pushf
js
push
mov
jmp
dec
cdq
test
inc
arpl
ficom
mov
and
push
out
cld
push
pop
pop
out
es
popa
xchg
out
ins
jl
xchg
push
xchg
scas
add
pop
and
(bad)
jb
mov
call
test
mov
int
ins
shl
xchg
movs
pop
jbe
movs
cli
mov
imul
lods
mov
cld
(bad)
aas
pop
clc
jp
inc
imul
push
xchg
pop
push
mov
fwait
pop
pop
div
loope
sbb
mov
sbb
out
aaa
nop
pop
jmp
push
fisttp
xor
and
call
sbb
cs
adc
mov
push
xchg
shl
push
xchg
pop
stos
pop
xchg
(bad)
sub
cmp
stos
std
mov
mov
nop
pop
mov
mov
aam
sub
pop
lds
cmps
inc
scas
sbb
inc
inc
aas
test
sti
ss
cmc
fwait
push
mov
mov
sub
mov
push
pop
push
adc
xor
cmp
or
or
dec
movs
sub
dec
push
dec
xor
lds
dec
or
test
hlt
adc
iret
call
fs
pop
mov
out
dec
adc
and
jo
aad
loopne
and
cwde
mov
pop
imul
mov
jmp
cmc
lods
test
sub
cmp
imul
aam
fistp
add
pop
mov
idiv
pop
or
push
xchg
mov
mov
std
mov
lods
call
push
in
xor
sbb
or
in
inc
jecxz
adc
aad
mov
in
adc
outs
idiv
mov
jge
iret
mov
mov
inc
lods
inc
enter
pop
add
sbb
mov
outs
div
sbb
push
mov
sub
nop
inc
test
jp
pop
loop
cs
mov
ror
xchg
mov
in
scas
and
sahf
xor
js
xor
push
lea
adc
fs
add
gs
mov
add
and
cmp
test
mov
push
mov
jo
jg
or
and
adc
cwde
aam
out
stos
arpl
add
icebp
pop
sub
loopne
cli
xchg
ss
aas
fstp
mov
pop
jecxz
dec
jmp
dec
add
es
jno
xlat
xor
(bad)
das
xor
ss
lods
fld
mov
jl
(bad)
mov
or
inc
cmp
fisttp
push
add
scas
out
test
jp
fisubr
ins
mov
push
push
push
cmps
pop
mov
jne
sbb
les
(bad)
fdivr
fs
xlat
pop
shl
cmp
outs
loopne
or
fcomp
add
(bad)
outs
xor
add
rcr
lds
ins
mov
je
add
lock
loopne
int3
hlt
xor
cmp
retf
hlt
xchg
inc
retf
lods
iret
push
test
ficom
fdivr
pop
fxch
mov
and
ins
xor
in
sub
dec
loopne
xlat
jmp
sub
push
not
jo
pop
pop
cld
dec
push
aam
sbb
xor
mov
cwde
test
sahf
mul
push
cmps
pop
dec
jmp
aad
and
mov
ins
or
enter
clc
jmp
test
dec
(bad)
and
lods
imul
das
lods
pop
or
data16
das
pop
xchg
in
bound
cmp
aam
push
or
dec
lahf
movs
es
imul
xchg
pop
cmp
frstor
inc
test
(bad)
cmc
aam
pop
ins
rcl
loop
mov
ficomp
(bad)
pop
data16
pop
cld
jnp
sbb
cmp
inc
mov
dec
(bad)
add
fnstsw
sub
gs
xor
push
movs
imul
hlt
call
or
popa
das
push
mov
mov
retf
jmp
sti
int
clc
mov
jmp
clc
in
aas
imul
xchg
mov
stos
scas
add
std
pop
scas
xor
mov
sbb
(bad)
xchg
inc
(bad)
popa
jae
sub
test
(bad)
ins
mov
xor
add
sbb
rcr
xchg
adc
pop
jmp
or
jp
and
push
dec
pushf
lods
fadd
dec
or
adc
mov
(bad)
inc
xor
aam
mov
rep
je
push
out
jns
inc
ret
xchg
mov
mov
jno
dec
repnz
int3
test
scas
mov
xchg
pop
int3
lahf
xchg
movs
es
mov
frstpm(287
mov
push
xor
dec
ret
cmc
in
cld
add
adc
retf
adc
xor
movs
sbb
mov
jo
js
cmps
rol
xchg
xchg
lock
dec
loope
push
ret
cmp
ret
mov
retf
inc
cmp
cdq
aas
add
out
and
xchg
push
jno
pmaxub
cmc
xor
enter
mov
std
sbb
inc
jmp
fbstp
xor
sbb
in
jnp
mov
cmc
enter
mov
loop
pushf
scas
int
cmp
sbb
iret
inc
mov
push
out
push
scas
outs
repz
popa
push
jl
inc
fistp
scas
es
adc
and
mov
lods
mov
sub
push
pop
cwde
sti
shr
xchg
lahf
and
loop
push
mov
fcmovbe
movs
stc
mov
ret
sub
cld
ja
mov
mov
int3
lea
dec
adc
sti
fstp
ds
sbb
and
push
jle
sbb
dec
aam
push
sbb
push
int3
ja
in
jge
jl
pop
xchg
xchg
sbb
(bad)
enter
jl
dec
add
cmp
(bad)
fadd
push
in
pop
sbb
lock
sti
and
adc
cmps
mov
in
pushf
add
pushf
cmps
cwde
repz
arpl
add
outs
xchg
mov
retf
inc
mov
cmp
add
xchg
cmp
aam
les
sbb
jl
cmp
add
sbb
adc
sbb
ds
(bad)
daa
and
and
lods
iret
inc
jl
ins
push
jecxz
mov
mov
pop
mov
fld
mov
mov
xor
mov
dec
mov
bound
inc
xchg
iret
add
ret
enter
shr
cmp
ds
stc
push
scas
or
call
addr16
jmp
mov
mov
jg
mov
(bad)
sti
inc
and
repz
adc
cs
jno
mov
push
cld
add
push
retf
jp
popf
cmp
jg
push
fbstp
sar
cs
bound
push
mov
and
add
imul
push
je
pusha
arpl
call
sti
mov
dec
sbb
dec
cli
sbb
push
call
push
es
push
hlt
mov
outs
out
jo
xchg
sub
imul
xchg
cld
push
movs
ins
mov
mov
jp
test
nop
das
loope
jne
jbe
sti
jae
pop
retf
jmp
dec
icebp
and
xchg
add
ret
test
lahf
retf
pop
push
pop
pop
test
adc
popf
loope
cmps
dec
pop
dec
xor
add
out
xchg
mov
sbb
jae
xchg
pop
lahf
outs
shl
mov
mov
scas
and
jecxz
xchg
mov
xor
dec
sti
mov
xchg
sub
jl
icebp
pushf
je
sbb
ins
push
stc
xchg
aaa
mov
sub
adc
fiadd
xchg
xchg
sub
push
and
lds
call
sub
xchg
rcr
xor
pop
mov
mov
xlat
sub
xchg
ins
in
mov
test
pop
pop
fimul
dec
pop
test
outs
and
cli
outs
ins
aad
fsub
outs
inc
inc
aam
jecxz
push
in
mov
ret
xchg
add
out
push
cmps
adc
push
pop
cmp
mov
outs
cwde
aad
(bad)
jmp
cld
rcr
adc
(bad)
aad
addr16
sahf
nop
(bad)
jmp
mov
cwde
fidiv
pop
add
ds
enter
pushf
hlt
lahf
in
dec
sbb
push
push
ret
inc
ja
aam
fsub
pop
mov
sbb
sbb
xlat
mov
addr16
dec
pop
inc
inc
enter
xchg
cmp
adc
aam
inc
pop
adc
int3
push
loopne
cmc
dec
jbe
ins
cmp
cmp
sbb
outs
stos
int3
adc
das
pop
aas
ins
mov
adc
mov
arpl
or
mov
in
pop
js
jge
dec
neg
xchg
sti
dec
cmps
adc
std
jb
sti
inc
cmps
adc
push
mov
and
popa
jnp
pushf
sbb
adc
jg
hlt
mov
(bad)
mov
push
cmc
cmc
xchg
loope
mov
aas
sub
arpl
xchg
sbb
(bad)
ins
ins
js
mov
mov
push
into
test
or
sahf
lea
js
into
retf
push
retf
dec
in
or
xor
(bad)
pop
inc
inc
cli
sbb
mov
sbb
or
mov
add
popf
jnp
mov
int3
(bad)
jns
iret
or
retf
add
mov
add
out
jnp
cmp
ret
(bad)
jl
sub
push
jae
push
sub
lods
xor
repz
mov
je
fmul
or
pop
iret
xchg
jecxz
push
adc
sti
stos
leave
push
les
cmp
add
dec
loope
mov
loop
shl
xor
call
or
neg
dec
sahf
hlt
loopne
enter
xchg
cmc
in
pmullw
iret
loop
cmp
sub
add
lock
dec
aam
ds
mov
dec
mov
outs
adc
jg
aas
bound
or
ins
stos
cmp
mov
mov
push
dec
arpl
sub
les
mov
xchg
or
mov
mov
jg
dec
loopne
inc
test
and
hlt
xchg
push
or
and
std
jns
cmp
dec
push
push
push
hlt
lods
cmp
xchg
es
repz
ja
dec
mov
sbb
mov
xor
push
jns
and
mov
mov
or
(bad)
mov
dec
mov
leave
ja
in
sbb
ins
inc
sbb
rcr
sub
jg
pop
(bad)
mov
ins
mov
xor
repz
or
fmulp
mov
pop
push
xor
or
imul
mov
add
stc
mov
test
or
(bad)
mov
mov
int3
xchg
sti
ja
sti
out
out
push
push
out
js
stos
gs
les
cmps
mov
or
mov
bts
shl
scas
jo
ror
mov
mov
les
and
xchg
ja
pop
(bad)
int3
add
mov
lods
dec
pop
sti
sbb
xchg
adc
jns
cmp
and
cs
mov
ins
sub
cmp
les
mov
pop
iret
or
cmp
xchg
mov
aad
fwait
in
or
repz
shr
mov
mov
mov
pop
aad
out
retf
fstp
ss
pop
bound
out
push
dec
retf
or
idiv
sbb
and
mov
pop
stos
cdq
push
or
xlat
push
jmp
jl
xchg
pop
mov
add
ins
xor
dec
popf
dec
and
fsubrp
push
pop
(bad)
(bad)
scas
or
sub
mov
test
js
(bad)
jp
xchg
jmp
and
test
popa
mov
or
or
or
adc
dec
rcr
mov
push
jbe
scas
dec
push
test
lea
mov
push
sub
dec
or
pop
cwde
sub
scas
clc
mov
inc
sub
push
arpl
movs
xchg
pop
scas
mov
sub
sbb
adc
or
imul
iret
mov
cmp
inc
movs
and
sub
loopne
mov
test
add
dec
pop
and
mov
mov
popa
add
xchg
push
dec
pop
fmulp
popf
jb
outs
push
retf
ficomp
imul
cmp
stos
xchg
cmp
push
mov
sbb
cmp
arpl
mov
sbb
xchg
shr
dec
xchg
xchg
fldenv
xchg
outs
xchg
arpl
cdq
adc
js
push
fs
push
jb
(bad)
jmp
dec
fstp
or
jl
sbb
inc
int3
pop
sahf
addr16
imul
fisub
xor
xchg
out
add
jle
xor
(bad)
jmp
pop
loope
inc
adc
adc
pop
enter
ins
sbb
test
jg
fistp
leave
xchg
data16
add
mov
push
xor
sbb
mov
iret
cld
cwde
ins
aad
fld
rol
mov
dec
mov
mov
pop
sbb
jmp
sub
sub
mov
outs
cmp
mov
and
cmp
mov
mov
pop
pop
pushf
dec
loopne
dec
sub
adc
dec
mov
cmc
sub
or
sbb
mul
addr16
iret
push
rcr
(bad)
jb
sbb
in
mov
loope
test
cld
and
adc
les
xchg
scas
and
addr16
add
sbb
or
pop
mov
repnz
pop
jb
outs
pop
or
inc
stos
imul
cmp
jnp
lahf
cmp
and
popf
xor
call
in
sbb
mov
(bad)
dec
push
mov
pushf
jmp
push
pusha
vdivsd
xchg
addr16
push
xchg
sahf
bound
xchg
sbb
xor
add
retf
sub
mov
pushf
les
in
test
and
test
call
inc
test
scas
dec
sub
lods
mov
push
lods
(bad)
hlt
cs
(bad)
mov
mov
sbb
les
(bad)
fwait
push
imul
aam
aam
push
mov
retf
adc
pop
mov
mov
push
fdivr
xchg
lock
(bad)
jnp
pop
retf
jecxz
push
daa
inc
ins
sar
push
cdq
ins
bound
mov
mov
shl
pop
test
cmps
repz
in
ins
test
inc
jno
cmp
(bad)
cli
and
push
dec
ins
cwde
inc
call
ins
(bad)
loopne
sbb
jge
or
ins
sbb
fs
pop
cld
pop
sbb
nop
bound
adc
fwait
gs
imul
cmps
aas
(bad)
xor
push
xor
call
mov
xchg
(bad)
bound
test
jo
aam
pop
in
les
movs
ror
aas
nop
pop
push
test
stc
pushf
inc
cli
mov
inc
push
jl
dec
sbb
sub
xchg
sbb
pop
dec
retf
es
popa
jmp
enter
retf
pop
jg
shl
push
cmc
inc
fisubr
dec
movs
cmc
cdq
push
push
push
cmp
xchg
xchg
sub
dec
fbld
add
dec
pop
mov
mov
sub
out
aam
mov
popf
aaa
push
sti
shl
stos
xlat
cmp
outs
in
add
and
push
shl
test
jb
cmp
mov
and
not
bound
add
leave
fcom
mov
(bad)
out
push
ficom
mov
comisd
rcl
mov
mov
mov
movs
popa
popf
fwait
pop
push
stos
cmc
add
jbe
and
cmp
xchg
imul
stos
adc
or
push
mov
ret
clc
lds
sub
push
cdq
push
scas
call
sbb
jnp
add
inc
into
push
jno
nop
icebp
mov
test
sbb
sbb
add
mul
jmp
adc
jg
loop
call
fild
loopne
xchg
repnz
add
stc
add
pop
in
ins
push
mov
inc
xor
cmc
ins
dec
mov
outs
sbb
jne
pop
in
(bad)
cmp
or
pop
xchg
(bad)
rcr
(bad)
jbe
jns
fimul
xchg
mov
dec
pop
dec
xchg
sti
add
cli
(bad)
xlat
mov
mov
outs
cwde
lods
and
adc
arpl
pop
xchg
das
xor
pop
gs
gs
js
mov
add
xor
popa
jae
add
and
out
arpl
jbe
push
aaa
stos
sbb
and
sbb
push
fsqrt
xor
add
cwde
fdiv
mov
pop
mov
movs
xchg
std
out
into
rol
pop
pop
cmp
outs
rcr
out
and
mov
pop
cmp
push
add
lahf
repz
mov
xchg
in
arpl
or
jnp
ins
sub
ret
jae
mov
(bad)
stc
jbe
les
movs
(bad)
cdq
jo
dec
fldenv
mov
jns
mov
xchg
(bad)
push
lea
int
dec
fcomp
mov
fstp
arpl
fild
mov
popf
aad
outs
(bad)
mov
inc
mov
in
inc
pop
mov
cli
xchg
mov
push
or
mov
jb
fnstsw
pop
pop
sbb
jnp
xor
mov
das
jno
daa
and
fsqrt
xchg
lahf
sbb
enter
mov
adc
test
pop
mov
jecxz
test
sub
or
jge
std
push
icebp
cli
in
adc
add
(bad)
(bad)
sub
fs
pop
pop
sub
add
xchg
inc
add
iret
out
mov
int
pop
repz
mov
mov
inc
out
mov
and
inc
loope
jg
adc
mov
push
iret
mov
leave
cdq
inc
fs
scas
jp
out
mov
push
cs
imul
ret
xor
jle
cmp
mov
fistp
mov
xchg
fistp
jb
loope
lds
pop
lahf
xchg
call
movs
push
movs
xchg
xchg
and
in
mov
pop
lods
cmc
inc
xchg
test
bound
aam
sbb
je
pop
fs
pushf
xchg
cmp
cmc
(bad)
jl
pop
lock
idiv
jge
pop
and
mov
xchg
js
and
push
mov
mov
dec
pop
mov
push
enter
call
daa
and
pop
fnsave
call
(bad)
mov
ja
mov
jle
dec
dec
fwait
push
nop
cli
movs
cmp
mov
dec
je
loopne
mov
xacquire
jmp
sbb
test
jle
mov
xchg
aas
rcr
sub
loop
inc
adc
fmulp
fsubr
pop
neg
fimul
push
test
add
test
scas
pop
mov
clc
dec
les
in
mov
shr
push
js
retf
sbb
lods
mov
dec
cmp
inc
push
xchg
push
sub
mov
out
mov
loope
push
xor
mov
push
inc
pop
int3
pop
test
push
or
jb
stos
aam
scas
test
ja
xchg
xchg
cmp
ins
out
clc
(bad)
push
ins
out
scas
sbb
ds
jo
adc
sbb
test
jmp
sar
jp
xchg
jle
sbb
pop
push
popa
std
mov
fiadd
push
(bad)
imul
sbb
iret
movs
mov
xchg
or
sub
ins
xchg
sbb
ret
outs
inc
push
call
nop
dec
dec
xchg
sbb
cmp
add
shl
push
or
popf
add
push
dec
inc
xchg
dec
sbb
ds
mov
push
int3
arpl
daa
or
(bad)
mov
pop
cmp
jecxz
adc
and
loope
call
ret
lahf
push
push
enter
sub
fistp
retf
pop
dec
adc
inc
ins
scas
and
adc
dec
sbb
add
push
or
sbb
mov
inc
sbb
retf
cmps
icebp
sbb
sub
pusha
sbb
jmp
pop
or
mov
aaa
or
retf
mov
pop
dec
pop
jno
mov
rcl
mov
ret
cmp
jno
push
int3
fwait
into
movs
movs
or
pop
jl
mov
mov
or
or
jb
xor
addr16
into
add
imul
jl
loopne
or
xchg
push
mov
sub
shl
sub
mov
ins
fisttp
int3
fistp
mov
sub
jae
add
or
mov
push
push
xchg
pop
adc
jge
test
cmps
stos
std
lods
or
adc
daa
cmp
pop
test
mov
sbb
sub
repnz
push
leave
sbb
loop
mul
call
mov
aam
cmp
cmp
fcom
jmp
lods
std
adc
add
mov
inc
fsubr
aaa
mov
or
mov
sbb
sahf
mov
jo
inc
xchg
adc
(bad)
retf
add
dec
je
pusha
rcr
add
iret
loope
dec
mov
adc
pop
cld
xor
cmp
add
xchg
loop
call
mov
dec
or
xor
xor
mov
inc
cmps
pop
(bad)
out
dec
in
sbb
mov
mov
fwait
xor
cmps
xchg
mov
lea
inc
popa
pop
pop
mov
lods
aas
std
test
add
push
cpuid
mov
or
mov
stos
test
ds
or
push
(bad)
les
outs
sub
div
xchg
dec
test
(bad)
das
(bad)
fsub
pop
or
sbb
int3
ret
mov
imul
out
sub
jb
pop
xchg
lods
and
fst
mov
xor
aas
mov
out
or
add
sub
aam
aam
lods
xchg
out
sbb
cs
int3
imul
pop
mov
push
outs
(bad)
arpl
push
cmp
push
ins
gs
pop
and
xlat
jb
mov
mov
adc
xchg
cmp
jecxz
retf
or
xchg
inc
imul
(bad)
jb
sub
dec
pop
adc
out
loop
adc
not
fst
ins
sbb
inc
jle
add
push
jae
test
mov
jmp
lods
jmp
lahf
sub
adc
push
xor
mov
sub
xor
lods
aaa
cmp
push
adc
(bad)
xchg
leave
dec
retf
mov
jmp
inc
movs
rcr
push
push
rol
(bad)
sar
inc
inc
mov
test
xor
mov
or
cdq
inc
sub
push
loop
dec
aas
loopne
cmp
lods
fsubr
movs
les
jnp
movs
jb
dec
xor
push
pop
aam
or
xor
cmps
aaa
mov
(bad)
jecxz
push
in
cwde
cmp
cli
mov
xchg
addr16
cmc
xchg
push
pop
pop
fistp
and
aad
inc
cli
xchg
jae
aam
mov
push
pop
fwait
data16
bound
sahf
dec
dec
pop
out
sub
push
lock
push
icebp
push
xchg
cdq
arpl
adc
ja
ins
lahf
jmp
mov
scas
repnz
call
pop
jl
nop
push
cs
aaa
push
mov
sub
fadd
adc
mov
sub
neg
push
dec
jmp
(bad)
das
push
data16
outs
jno
mov
outs
ret
rcr
xchg
dec
stc
mov
stos
shr
dec
jo
mov
aas
retf
xor
push
fs
aas
mov
xchg
push
dec
push
imul
and
pop
lods
cmp
popa
push
push
cmp
sub
sbb
dec
outs
jb
cmp
popf
jmp
inc
in
dec
aam
nop
int3
push
enter
mov
xor
sbb
pop
mov
sbb
lods
popf
xchg
cwde
mov
jmp
inc
jae
fwait
sbb
pop
cdq
xchg
cmp
sub
scas
sub
out
adc
dec
out
inc
adc
fld
jmp
addr16
cmp
add
adc
mov
fldcw
adc
sub
ja
hlt
inc
cmp
push
adc
xor
sub
(bad)
nop
sahf
xor
sti
and
cmps
mov
mov
imul
sbb
scas
jp
es
(bad)
fld
cwde
xchg
sbb
pop
add
cmp
mov
fldcw
xor
loopne
xchg
mov
mov
idiv
xchg
xor
cmp
xchg
add
not
movs
ret
leave
pop
repnz
push
add
jl
inc
cs
xchg
jecxz
ficomp
movs
(bad)
in
jno
in
pop
ss
and
dec
mov
js
stos
out
frstor
jmp
xchg
pop
xor
inc
pop
cld
rol
mov
adc
adc
and
dec
or
mov
dec
retf
sbb
fdiv
cmp
pop
add
cmp
inc
sahf
ror
cmps
dec
je
(bad)
add
sub
call
add
push
in
int
adc
push
std
mov
sahf
and
(bad)
int
in
pop
inc
retf
jmp
xor
and
lds
mov
neg
loopne
call
xor
inc
fsubr
adc
scas
xor
mov
adc
cdq
mov
pop
dec
cdq
call
ja
push
mov
xor
cld
dec
sub
mov
imul
aam
int
push
(bad)
rcl
idiv
push
xchg
xchg
xchg
out
loopne
(bad)
(bad)
pushf
push
ror
push
test
sub
mov
out
dec
nop
push
pop
inc
push
mov
retf
mov
loope
call
xor
lods
mov
mov
test
out
fnstcw
sub
sub
clc
inc
arpl
sub
(bad)
retf
(bad)
movs
adc
push
jmp
or
lods
popw
mov
ret
sbb
adc
xchg
test
lods
push
dec
xchg
add
cld
lods
mov
arpl
cmp
pop
sbb
pop
jge
fsubr
iret
xchg
sbb
arpl
sub
jbe
(bad)
jo
iret
ds
cld
sahf
inc
retf
idiv
nop
aam
sti
cmp
aad
mov
rcl
clc
add
adc
jo
dec
add
loopne
lea
aas
arpl
sub
sub
pop
fcomp
aaa
js
imul
jg
in
mov
lock
dec
mov
repz
neg
es
(bad)
xor
rcl
leave
icebp
mov
cs
shl
clc
xchg
cs
mov
adc
xor
lods
nop
or
adc
mov
mov
dec
adc
arpl
out
pop
dec
cmp
push
div
inc
and
pusha
dec
mov
and
push
jle
jo
push
and
test
fld
sbb
add
mov
dec
add
fld
jmp
sub
xchg
cmp
seta
retf
jbe
and
fistp
adc
xchg
jns
jmp
push
push
(bad)
push
sub
pop
push
mov
push
rcr
push
pop
fcomp
iret
(bad)
jl
cmp
aas
ss
xchg
jnp
scas
xchg
sbb
arpl
pop
pop
pusha
jne
adc
shr
mov
xor
loope
pop
imul
cli
push
icebp
add
dec
adc
add
jno
mov
sub
pop
ins
out
outs
inc
mov
frstor
mov
stc
cwde
jne
jnp
mov
push
mov
push
popf
sub
stos
add
jo
(bad)
pop
dec
jecxz
dec
mov
mov
test
int3
dec
stos
cmp
cmp
(bad)
adc
mov
sub
mov
fsubr
ror
sub
imul
mov
jmp
adc
test
mov
fs
icebp
in
push
(bad)
xchg
push
pop
adc
cdq
in
ficomp
std
pop
dec
sbb
pop
lods
and
(bad)
fdivr
inc
mov
jae
adc
or
sbb
jb
fwait
pushfw
pushf
iret
lahf
xor
xchg
(bad)
shr
push
jmp
sub
pop
stos
xor
jne
push
xchg
pop
dec
popf
xlat
sub
mov
adc
retf
movs
out
push
mov
jno
cmc
pop
jbe
sub
(bad)
fisttp
popa
in
mov
pop
out
or
push
and
mov
xchg
dec
mov
push
lods
test
aam
pop
pop
add
inc
in
iret
cdq
pop
push
stos
js
retf
cmps
mov
pop
shr
pop
pop
xor
fst
cmp
iret
push
and
aam
int
mov
fisttp
sbb
stos
fidivr
push
sub
jge
jge
fwait
or
cmps
xchg
sub
out
xchg
pop
adc
clc
xchg
retf
dec
bound
mov
test
mov
retf
lahf
mov
imul
cmps
xchg
cs
push
sbb
sbb
fxch
mov
nop
cmp
push
enter
aam
sub
sub
mov
cmc
mov
out
push
test
cli
daa
lahf
pop
iret
stc
jno
cli
cmps
cwde
xchg
push
add
push
adc
pop
add
jg
dec
mov
fsub
imul
aaa
pop
or
push
stos
fwait
int3
adc
retf
xchg
add
cmp
pop
(bad)
sub
imul
cmp
mov
adc
int
xlat
ja
imul
cmps
outs
fisub
in
sub
or
cmc
add
aam
jbe
sub
push
jge
clc
sti
cmp
dec
cwde
jo
mov
in
cmp
push
mov
or
cdq
xchg
push
mov
pop
ins
fist
mov
push
fnstenv
xchg
mov
mov
ins
jnp
nop
ins
cmp
jno
or
(bad)
les
(bad)
sti
aas
sbb
and
adc
sbb
pop
lock
dec
(bad)
loopne
push
scas
sbb
cmp
fbld
ret
xor
jg
aas
cmp
popf
and
dec
mov
int3
and
or
sub
jmp
sub
mov
addr16
mov
sub
xchg
adc
test
adc
fimul
pop
mov
mov
and
aam
dec
add
ins
push
mov
cli
adc
push
and
cmc
hlt
clc
push
leave
lahf
ja
jns
xor
int3
push
or
stos
loope
push
cmp
or
mov
xchg
mov
cmp
mov
cmp
xor
jecxz
scas
in
ins
int
mov
push
jbe
jnp
(bad)
jmp
fs
push
mov
mov
sbb
jbe
or
pop
mov
lods
cmps
jae
push
pop
inc
pop
sbb
push
das
test
push
and
cmp
jnp
xor
xor
repz
pusha
jns
fs
inc
inc
dec
(bad)
inc
jbe
pop
aam
jne
fistp
div
adc
mov
jge
jnp
xor
mov
mov
shl
sahf
and
fwait
sub
or
push
sbb
mov
xchg
retf
pop
imul
mov
inc
push
mov
loopne
shl
out
test
mov
sbb
loop
mov
jb
scas
mov
shr
pusha
ficom
jl
lahf
stos
(bad)
fisttp
cld
lea
add
jb
jno
js
les
xchg
test
cmps
adc
jecxz
hlt
push
mov
xchg
mov
test
cmc
mov
js
mov
inc
xchg
push
xor
jle
mov
push
add
jnp
and
cmp
in
outs
rcl
pusha
jecxz
adc
and
pop
fsubp
mov
pop
pop
imul
ss
pop
iret
mov
or
dec
js
sbb
add
into
nop
in
ins
stos
ror
mov
dec
push
adc
sub
shr
adc
push
ins
adc
mov
push
cmp
jo
push
fstp
xchg
cli
pop
imul
rcl
xchg
lods
sbb
(bad)
pop
adc
test
mov
pop
repz
mov
retf
xchg
and
xchg
scas
into
mov
ins
clc
mov
jnp
je
out
out
cmc
lahf
popf
mov
dec
stos
xor
sti
mov
data16
fmul
cs
sub
je
adc
push
and
mov
jne
cs
mov
fadd
push
stos
xchg
cwde
sbb
ins
mov
enter
or
test
push
std
js
test
or
mov
popa
test
mov
pusha
jae
into
mov
inc
sbb
in
stos
push
sbb
enter
or
push
jns
dec
or
and
(bad)
push
mov
pushf
sub
push
add
setl
dec
clc
mov
add
retf
scas
outs
fisttp
dec
scas
mov
xchg
mov
sub
fucomp
pop
cmps
push
scas
xchg
add
data16
retf
imul
push
scas
lea
fcom
nop
fnstcw
dec
scas
arpl
jge
xchg
lods
arpl
gs
inc
cmp
pop
sbb
mov
lahf
bound
in
mov
in
jecxz
cmps
mov
adc
or
hlt
mov
cld
push
ficom
push
sub
cmc
mov
jnp
cmp
ror
popa
and
sbb
test
les
mov
cmp
xor
sbb
adc
push
push
mov
ss
sahf
ret
std
jo
push
lods
sbb
jo
addr16
sbb
inc
adc
adc
push
addr16
daa
(bad)
ret
pop
cmp
(bad)
outs
ins
xor
or
push
jg
inc
fisttp
ins
mov
fs
fisttp
sub
hlt
or
xor
js
cmp
out
sub
sub
xchg
shr
push
int3
push
aas
push
cmp
cld
push
out
fist
cld
shr
(bad)
pop
mov
and
div
xor
das
daa
adc
lahf
fstp
int
dec
cdq
mov
sti
pop
jo
stc
arpl
mov
ret
jo
cmps
out
pop
outs
out
xor
pop
ss
jecxz
sub
imul
sub
enter
cmps
fld
pop
bound
push
mov
push
icebp
mov
mov
and
arpl
movs
fcomp
xor
xchg
enter
cmp
clc
sub
xchg
je
call
push
lock
lods
pop
iret
jle
cmp
out
jo
(bad)
sbb
or
out
xchg
pop
xchg
inc
pop
mov
into
aaa
xchg
popw
loopne
fisttp
adc
call
sbb
adc
lods
sub
(bad)
pop
push
xchg
int
cmp
dec
add
pop
das
pop
scas
cmp
ss
jp
movs
mov
and
cs
shr
pop
data16
loop
dec
enter
xchg
aas
jl
jnp
in
mov
leave
out
push
rcl
das
ret
mov
retf
pop
mov
mov
arpl
enter
stos
adc
fcmovu
das
jp
sbb
bound
dec
pop
retf
mov
sub
ins
pop
jmp
pop
imul
xor
shr
cmp
or
pop
fcmovne
enter
idiv
pop
int
cmps
loopne
or
(bad)
sbb
scas
cwde
xor
xor
push
pop
fistp
bound
mov
clc
add
push
pop
or
push
test
fild
xchg
mov
cmp
out
sub
je
lea
lods
mov
(bad)
dec
sbb
je
lods
rcr
and
cmp
mov
ret
mov
les
inc
mov
push
jnp
jno
or
fstp
test
or
inc
mov
jno
push
sub
dec
retf
adc
stos
dec
mov
out
mov
jle
and
push
shl
loop
outs
and
enter
sbb
mov
movs
pop
xchg
movs
loope
outs
std
push
add
ret
and
test
test
repz
and
jb
arpl
add
ins
xchg
mov
not
in
adc
sahf
pop
mov
not
or
cmp
sbb
jl
mov
dec
adc
lahf
int3
mov
xchg
push
je
nop
in
push
pop
mul
fidiv
xchg
or
jne
call
pop
fs
(bad)
dec
sbb
jmp
loop
push
arpl
push
cmp
inc
mov
push
call
mov
rcr
push
out
lahf
xor
call
cmc
stos
jne
daa
pop
pop
test
fimul
and
sbb
inc
lea
xor
mov
repz
adc
repnz
nop
jmp
or
mov
cs
shr
mov
pop
cwde
sub
pushf
dec
inc
pop
jno
inc
iret
(bad)
mov
aam
sbb
int
jo
xor
push
fcmovbe
pushf
push
pop
add
mov
sub
dec
inc
inc
xor
pop
ret
retf
shr
add
and
(bad)
dec
mov
jp
sti
jmp
loopne
mov
pop
or
add
pop
jmp
clc
inc
jbe
rol
xchg
outs
sub
scas
adc
push
mov
lods
mov
inc
push
nop
in
sar
retf
in
scas
pop
mov
stos
push
ret
jmp
adc
mov
adc
gs
daa
(bad)
sub
adc
ficomp
mov
mov
or
and
cmp
enter
daa
sahf
push
outs
stos
xor
adc
js
fisub
sbb
jbe
ss
mov
xor
ror
pushf
cmp
fcmovne
shl
jb
repz
mov
dec
push
xchg
dec
sti
scas
inc
sub
lods
out
and
ror
int3
pushf
xchg
idiv
(bad)
adc
or
nop
adc
retf
in
loope
mov
(bad)
lods
mov
(bad)
aam
(bad)
xor
shl
stc
pop
neg
scas
loopne
leave
xor
or
out
icebp
int
in
dec
mov
mov
sbb
xor
pop
arpl
retf
lods
sub
sbb
inc
pop
sbb
or
push
pop
arpl
stos
pop
pop
test
and
inc
push
push
or
pop
sar
(bad)
ror
dec
into
sub
sub
ins
fsubrp
inc
call
pop
retf
(bad)
rcl
and
idiv
jae
test
les
xchg
sti
fistp
in
or
(bad)
jne
pusha
or
cmp
or
clc
out
pushf
or
mov
push
push
loop
mov
icebp
mov
nop
cmp
outs
mov
loop
mov
mov
sbb
dec
push
inc
push
sbb
pop
movs
dec
push
jmp
popa
push
shr
fwait
dec
pop
popf
ja
cmp
lahf
and
pop
push
sbb
lods
mov
sti
in
jecxz
sti
outs
sub
in
outs
movs
xor
std
neg
push
out
adc
lea
addr16
push
pop
in
pushf
iret
fnsave
out
jo
sub
loopne
and
inc
aaa
(bad)
(bad)
stc
adc
or
dec
mov
mov
dec
(bad)
add
push
mov
jmp
mov
mov
jmp
repz
(bad)
or
(bad)
scas
scas
mov
push
pusha
fcom
xor
into
retf
dec
(bad)
call
lea
je
pop
rcl
popa
inc
or
movs
popa
lds
inc
add
inc
jo
test
and
cmp
out
bound
rol
jl
sbb
(bad)
fstp
adc
inc
add
xor
imul
scas
pop
fcmovbe
sbb
dec
or
cmp
xchg
call
and
jae
aam
mov
push
test
mov
pop
cld
(bad)
xchg
in
push
cmp
xor
pop
in
xchg
or
adc
inc
pop
xor
in
dec
xor
sub
lahf
mov
stc
mov
(bad)
fdiv
xchg
mov
xchg
fist
fidiv
adc
(bad)
mov
lods
cmp
rcl
mov
into
sub
push
ins
retf
cmps
repz
adc
xchg
outs
cdq
adc
sahf
imul
inc
inc
lods
aaa
pop
(bad)
mov
ins
(bad)
jle
jns
pop
jmp
sar
fldcw
fldcw
test
mov
or
sub
push
cmp
cld
mov
xchg
push
xchg
push
retf
inc
mov
and
pop
aad
es
arpl
mov
call
or
cmp
ss
out
fs
sub
cmp
iret
(bad)
dec
xlat
and
std
mov
stos
repnz
dec
jae
push
ins
fmul
mov
and
jmp
pop
sbb
push
in
ins
mov
pop
pop
test
xchg
mov
aad
and
sub
inc
jo
adc
sub
mov
sbb
fstp
xchg
(bad)
adc
ss
dec
pop
xchg
xchg
pop
cmc
sbb
sti
xchg
dec
in
mov
jb
fild
dec
hlt
pushf
or
mov
add
mov
dec
pop
fidiv
fistp
inc
(bad)
shl
jmp
outs
jbe
push
std
scas
push
(bad)
les
(bad)
jmp
xlat
jbe
pop
not
popa
push
addr16
mov
add
fistp
scas
jae
sbb
push
rcr
push
jecxz
out
das
inc
xchg
stos
sbb
dec
pop
add
test
(bad)
push
rol
fdivr
iret
fldenvw
in
mov
push
(bad)
pushf
push
dec
sub
pop
retf
rol
pop
ins
or
mov
push
pushf
hlt
sub
cmps
cld
test
xor
xor
test
fwait
pop
xchg
stos
push
push
and
mov
fs
jb
repnz
or
pop
sub
mov
xchg
or
loopne
int3
xchg
cmp
cmc
or
xor
mov
test
or
add
jmp
pop
cwde
(bad)
retf
push
and
in
pop
ds
cmc
inc
jne
mov
jns
cmp
popa
aam
sbb
ja
sub
pop
js
mov
aad
mov
pop
jmp
or
xchg
or
mov
cwde
loop
push
pop
cmp
retf
movs
push
fwait
lea
pop
loop
and
popf
fnstsw
outs
jl
dec
(bad)
je
stc
xor
out
inc
fidivr
ror
lods
call
arpl
pop
adc
pushf
xchg
arpl
fcmovnbe
das
push
(bad)
scas
loopne
mov
pop
push
sar
mov
(bad)
jge
int3
in
dec
(bad)
push
mov
push
mov
out
jmp
xor
aam
push
xchg
cmc
out
sbb
push
add
mov
int
lds
call
enter
sbb
xor
inc
dec
pop
dec
mov
add
test
je
inc
xor
and
pusha
inc
lahf
xchg
cmp
ror
(bad)
jnp
pop
fistp
js
add
in
pop
fdivp
sub
pushf
movs
mov
push
cmps
pop
sub
fcomp
jo
adc
dec
jecxz
loopne
jnp
es
into
(bad)
movs
int3
outs
shr
fwait
sahf
stos
xchg
loope
pop
iret
or
sub
lahf
and
jecxz
sub
push
mov
push
push
pop
add
xchg
inc
lea
cdq
in
in
adc
clc
sti
cmp
arpl
retf
ja
rcl
inc
mov
cmp
or
sub
mov
nop
and
cmp
mov
fmul
ins
fs
retf
or
hlt
jl
ja
sbb
add
(bad)
into
stos
pop
cmp
fdivr
push
xchg
sbb
imul
xchg
imul
pandn
fcmovnu
pop
pop
(bad)
pop
cmp
(bad)
sbb
mov
and
adc
shl
mov
loop
sar
mov
dec
sub
mov
out
mov
fldenv
inc
sti
ins
lods
fwait
addr16
jl
and
iret
mov
outs
xor
and
mov
mov
shl
inc
mov
sub
mov
call
inc
ins
dec
ins
loopne
or
call
fs
arpl
inc
pop
xor
sbb
rcl
(bad)
fsincos
repz
inc
dec
ds
gs
push
icebp
and
jno
(bad)
ins
dec
popa
aaa
inc
out
fcomp
shr
loop
or
popf
mov
inc
cmp
shl
xor
call
ss
movs
dec
adc
test
and
dec
pusha
sub
int3
cmp
int3
inc
xchg
and
bound
cmp
cmps
sub
add
aam
or
and
jae
mov
sbb
jb
rcl
jp
jmp
mov
inc
sub
pop
fwait
test
xchg
mov
xor
not
nop
mov
in
xor
xchg
retf
sbb
sahf
pop
cmp
fisubr
sbb
fistp
mov
add
rcl
pop
push
xchg
pop
pop
xchg
dec
std
add
lock
xor
test
imul
pushf
mov
inc
sub
pop
movs
rol
or
popa
call
mov
mov
push
repz
xlat
jmp
call
fwait
jp
outs
pop
jb
xlat
fwait
jl
add
int
jl
out
adc
je
xchg
add
add
sahf
adc
sbb
xchg
call
into
sbb
jle
jmp
jae
rcr
repnz
out
mov
jecxz
lock
call
or
add
pop
push
cld
sub
push
gs
mov
cmc
push
pop
mov
xor
add
mov
test
dec
jl
scas
pop
dec
in
popf
fwait
dec
retf
xchg
sbb
test
push
sti
pop
pusha
push
cmp
xchg
pop
mov
cmp
xchg
retf
adc
ins
jo
pop
push
hlt
xor
pop
add
stos
and
push
cs
cmps
call
not
test
and
jl
xchg
sahf
mov
out
leave
retf
mov
jmp
sbb
lea
popf
cmp
cmp
mov
jae
mov
retf
retf
push
mov
gs
pop
push
xchg
sbb
cdq
push
ins
push
xchg
pop
mov
push
xchg
jg
cmp
int3
scas
sbb
shr
js
jg
sub
iret
ja
inc
stos
es
out
add
in
inc
shl
iret
and
std
xor
xchg
(bad)
mov
repnz
or
xchg
push
popa
(bad)
adc
and
pop
lahf
xor
rcl
add
ror
fld
rcr
js
mov
dec
or
mov
jecxz
sub
dec
fsubr
lds
xchg
enter
jo
xchg
mov
call
inc
push
add
adc
push
cli
lods
jnp
adc
(bad)
fiadd
jmp
mov
repnz
mov
mov
pop
lahf
cmp
cwde
loope
mov
mov
rcr
loopne
(bad)
fstp
pop
push
pop
repz
jbe
idiv
fisttp
push
imul
inc
and
leave
aam
ror
call
xor
push
enter
xchg
icebp
shl
jg
jmp
call
(bad)
pop
and
dec
pop
aaa
jns
aam
stc
mov
lods
sbb
add
cwde
mov
addr16
sti
xchg
add
imul
sub
(bad)
xlat
sub
xchg
hlt
mov
mov
mov
mov
(bad)
cmps
add
aam
jae
inc
dec
dec
jb
mov
mov
rcl
pop
xor
dec
int3
sti
and
test
repz
lock
test
pushf
sbb
adc
stc
mov
movs
inc
std
retf
push
or
fild
sub
gs
push
popf
fsubr
sub
or
add
push
jl
sbb
jecxz
aad
and
adc
mul
cld
add
ror
sbb
sbb
js
retf
jle
repz
loop
jns
rcl
scas
fs
pop
or
mov
jl
add
inc
jl
call
ja
gs
pop
lds
std
mov
arpl
sbb
cmp
fisub
pop
xchg
movs
xchg
xchg
sub
mov
(bad)
xor
mov
rcr
popf
inc
imul
bnd
ins
pop
ins
cmp
mov
dec
mov
push
sub
pop
(bad)
aad
lea
adc
adc
neg
or
push
daa
xchg
je
and
mov
jecxz
sub
js
cld
rcl
aas
sub
cld
sahf
jl
dec
into
mov
inc
(bad)
clc
cli
push
xlat
ss
lock
push
jl
adc
cwde
mov
rcl
jns
mov
pusha
hlt
jno
aad
pop
adc
scas
call
jae
hlt
lods
lds
fild
push
and
mov
loope
jmp
cmp
cld
push
pop
pop
add
loop
jg
mov
jg
in
pushf
ret
adc
pop
sbb
icebp
retf
imul
push
jmp
sahf
mov
push
arpl
hlt
jecxz
and
mov
movs
mov
jmp
in
ins
enter
and
sub
iret
cmp
sub
outs
dec
mov
cwde
push
jmp
push
pusha
shr
shl
sbb
sub
mov
adc
mov
repnz
retf
or
cs
lods
dec
movs
cmps
adc
push
popa
sbb
xlat
scas
fcom
hlt
xor
dec
add
push
fst
sub
(bad)
pushf
mov
xchg
or
data16
loope
jb
pop
and
leave
jecxz
push
mov
popa
(bad)
repz
in
shl
adc
out
pop
bound
js
or
arpl
jg
vmovntps
les
les
sti
xchg
gs
push
arpl
retf
fisttp
mov
jle
xchg
mov
pop
sar
retf
mov
dec
cmc
lods
adc
push
js
fdiv
ror
jo
jne
test
rcl
test
fistp
sub
xor
cmp
xor
ret
mov
test
pop
jmp
cmp
out
mov
adc
sub
inc
outs
pop
sub
(bad)
loope
xchg
xchg
fiadd
xor
pop
dec
fbld
lods
xor
rcl
hlt
ret
mov
es
sub
adc
or
xchg
sahf
pushf
lahf
xchg
fs
push
ftst
mov
ret
lahf
push
fnstenv
cmp
mov
xchg
push
lods
adc
fild
cmp
dec
jno
out
inc
push
sub
or
cs
arpl
shr
jmp
aam
(bad)
cmp
scas
mov
test
dec
jl
dec
push
adc
push
pushf
stos
fmul
adc
fwait
out
ret
iret
imul
sar
fsub
fldcw
inc
in
ret
bound
jl
xchg
pop
(bad)
in
enter
xor
(bad)
pop
inc
aaa
push
sahf
pushf
ror
retf
lahf
xchg
and
adc
jne
(bad)
and
popf
dec
jecxz
mov
add
ror
jbe
pop
sahf
outs
xchg
aam
inc
xor
jmp
shl
call
mov
push
jge
lods
fcmovnbe
repnz
push
rcl
sbb
jae
xor
xchg
retf
in
adc
cwde
fcom
jmp
jmp
pop
jecxz
movs
adc
add
add
shl
outs
fwait
pop
mov
fimul
cmps
and
adc
pop
das
mov
xchg
sbb
mov
xchg
pinsrw
daa
mov
push
mov
scas
adc
mov
cdq
iret
adc
mov
cmp
adc
mov
mov
inc
jmp
inc
outs
stos
pop
sub
shl
or
or
mov
mov
mov
leave
pop
or
xor
mov
xor
mov
in
jmp
inc
and
cmps
movs
push
xchg
jbe
daa
scas
add
push
push
jmp
loop
and
mov
jo
sbb
xchg
jmp
mov
push
sub
mov
retf
jl
sub
in
push
arpl
fstp
mov
(bad)
out
fcomp
mov
out
mov
rcr
jle
clc
sbb
or
fisubr
seto
pop
(bad)
cmp
rcr
mov
push
aaa
shl
gs
leave
fcomp
ficom
and
pop
movs
sbb
push
in
outs
out
ja
bound
stos
and
fistp
jge
sub
cmp
je
cmp
inc
sahf
pop
xchg
dec
cmp
inc
in
inc
add
add
int3
adc
retf
sub
outs
sub
sbb
push
fstp
mov
in
int
push
cmps
rcl
push
dec
mov
or
dec
fldcw
std
inc
les
sub
jle
outs
add
xchg
and
sub
js
cmp
pop
cmps
sbb
cli
loopne
and
sbb
mov
int3
sub
pop
fnstcw
in
inc
jo
retf
aas
out
pop
popf
cwde
add
setnp
not
and
jp
pop
push
jmp
cmps
mov
sahf
in
call
sub
neg
xchg
pop
xchg
pop
inc
pop
hlt
push
aad
pop
ins
sbb
push
xchg
arpl
sub
fwait
cmc
movs
sar
cdq
(bad)
movs
xor
sub
add
pop
and
paddd
fsubr
fs
mov
je
es
pop
(bad)
loopne
and
mov
sub
hlt
xor
sbb
lock
stc
(bad)
stos
fiadd
pop
rol
(bad)
pop
lods
stc
pop
sub
pushf
mov
jnp
movs
pop
rcl
rol
and
pop
aaa
sub
shr
int
pop
retf
adc
pop
push
int3
xchg
mov
les
(bad)
push
je
mov
xchg
mov
pop
cmp
in
data16
fldcw
test
scas
inc
dec
addr16
fbld
push
outs
pop
mov
pop
(bad)
mov
sbb
in
int3
(bad)
ss
push
in
push
jp
dec
add
add
fs
push
in
test
sub
and
leave
sub
ror
fsubr
fistp
icebp
push
sti
data16
ret
pop
jl
adc
adc
data16
mov
(bad)
sub
sahf
pushf
gs
inc
call
xchg
mov
call
cmps
cmp
lock
pushf
cmp
neg
push
mov
push
sub
pusha
sbb
push
xchg
xchg
fdiv
mov
mov
in
pop
inc
push
shr
jmp
popa
rcl
call
sahf
loope
popa
lods
sub
sbb
cli
mov
and
out
lods
iret
test
xchg
fiadd
cli
jle
and
stos
aad
jb
and
pop
add
mov
cmp
cmc
add
jg
adc
mov
push
add
push
jge
xchg
cs
ret
mov
jl
cli
data16
retf
and
mov
push
fldenv
sub
sub
rcl
push
jl
imul
and
es
and
jg
lods
dec
sahf
stc
push
imul
xchg
mov
call
xor
and
sub
cdq
mov
cmp
xlat
call
(bad)
jge
test
xor
cmps
outs
popa
inc
push
pop
inc
inc
lahf
test
adc
dec
cmps
cmps
imul
ss
push
push
mov
or
jmp
push
in
inc
retf
scas
push
idiv
lea
jmp
enter
and
into
js
js
adc
in
cld
fist
pop
push
jecxz
add
sti
sti
jnp
cmp
div
mov
xor
sbb
retf
fsubr
add
scas
jle
cmp
cmp
jae
out
adc
jns
cmps
fstp
addr16
jl
cdq
movs
and
pushf
fsub
sub
mov
cmps
sub
repnz
lods
enter
push
and
sub
jnp
and
lods
test
add
mov
add
imul
and
dec
adc
pusha
seta
and
js
push
sar
lock
cmp
in
loopne
sub
push
pop
push
jbe
adc
fs
fsubr
(bad)
fdiv
inc
inc
cld
imul
xor
xchg
pop
out
dec
jmp
lods
sbb
push
mov
es
xchg
call
push
jno
js
mov
cmp
enter
xchg
push
not
inc
push
jmp
push
int3
adc
std
pop
xchg
ins
pusha
cmp
sbb
cmp
arpl
pop
sbb
stc
scas
dec
out
sahf
pop
outs
icebp
cwde
out
push
test
dec
sbb
cld
inc
add
hlt
retf
icebp
jmp
(bad)
dec
popa
or
mov
lods
pop
xor
and
movs
loop
dec
pop
jmp
sbb
adc
or
and
cmp
add
test
fisttp
cmp
repnz
mov
cmps
ror
cwde
aam
repz
xor
pusha
cli
push
hlt
dec
shl
jecxz
jg
ret
int
xchg
jmp
mov
add
pop
(bad)
push
xchg
jb
xchg
dec
fwait
pop
pop
nop
jge
sub
rcl
es
mov
or
or
sbb
adc
inc
adc
aas
xchg
sub
mov
xchg
adc
add
cmps
(bad)
sti
call
out
mov
arpl
sub
fwait
daa
cmps
dec
adc
mov
test
(bad)
push
push
dec
push
xor
push
(bad)
test
mov
in
jnp
inc
ret
xchg
mov
mov
(bad)
push
cmp
cld
push
iret
mov
(bad)
shl
cmps
ins
aaa
rol
iret
out
push
loopne
clc
dec
imul
push
xchg
push
scas
fcomi
jmp
cmc
rol
mov
and
lods
push
lahf
jmp
(bad)
cwde
scas
fbld
push
fbstp
jle
scas
in
std
xchg
xor
pop
push
add
pop
gs
sub
ficomp
jb
add
sbb
into
pop
xchg
mov
xchg
arpl
rcl
dec
sbb
or
jns
fwait
icebp
add
jl
in
mov
(bad)
sub
sub
xlat
dec
fs
gs
sbb
push
mov
xchg
test
push
mov
sbb
pop
sub
dec
or
jmp
fist
imul
and
sub
or
lds
sbb
xor
jmp
pop
fwait
inc
fidiv
mov
popa
push
rcl
cli
stc
pop
sbb
dec
int
mov
std
push
jae
jge
mov
mov
call
inc
mov
and
push
in
pusha
sbb
cmps
inc
(bad)
int
sbb
pop
xrelease
adc
into
xchg
pusha
mov
xor
push
mov
(bad)
das
mov
das
jg
push
loope
xchg
mov
push
xchg
pop
in
sbb
movs
mov
adc
cld
ret
cmps
and
xor
cmp
xor
call
mov
int3
push
pop
jp
pushf
enter
mov
adc
les
or
push
xchg
out
and
sbb
jb
loopne
inc
test
xchg
jecxz
jmp
popf
mov
adc
sub
mov
pusha
mov
mov
test
pop
into
cdq
xor
dec
mov
cmp
lods
mov
and
ficom
adc
outs
pop
jl
in
pop
cs
adc
xchg
in
retf
into
or
cmp
ins
adc
dec
scas
sbb
xchg
inc
inc
mov
sub
fs
lods
jnp
push
leave
jno
jns
js
out
mov
js
xchg
test
fs
pop
adc
stc
dec
je
sbb
jmp
xchg
and
push
xchg
mov
icebp
xchg
and
jge
adc
fcomi
sub
add
call
and
inc
leave
sbb
pusha
xchg
out
cld
pop
push
pop
shl
cmps
cmp
nop
stc
cmp
call
mov
popf
push
xchg
(bad)
pop
ins
in
adc
mov
mov
sbb
sbb
mov
(bad)
sub
mov
orps
pop
mov
adc
js
mov
sbb
fisubr
cmps
retf
leave
int
ltr
bndstx
fwait
stc
mov
scas
stos
cwde
pushf
iret
lea
cmp
cmp
aam
outs
mov
retf
jl
adc
fwait
adc
jl
test
push
push
mov
loope
mov
loope
fwait
and
inc
out
aaa
daa
jl
call
cmps
pop
push
xchg
jne
ds
test
js
lods
inc
fdivr
sub
inc
repnz
stos
jg
jle
out
add
hlt
mov
rol
test
sbb
mov
aam
cmp
sub
int3
mov
mov
mov
adc
sahf
xor
or
ja
shl
pop
(bad)
adc
pop
mov
sbb
xchg
push
in
ret
sub
mov
iret
loopne
xor
jl
in
cmps
fcomp
sbb
nop
pop
xchg
xlat
das
mov
sahf
jno
push
xchg
fld
pop
call
ja
mov
jbe
retf
pop
push
dec
push
mov
dec
push
mov
push
or
test
dec
pop
mov
nop
mov
icebp
xchg
mov
pushf
lds
cs
ret
neg
xchg
clc
mov
add
je
cmp
leave
int
fidivr
push
std
jne
call
mov
pop
cli
fild
and
jns
fsub
pop
call
fbstp
in
jge
das
loop
out
push
jl
adc
sbb
xchg
push
shr
xchg
sbb
lods
xor
or
rcr
arpl
in
mov
push
lea
test
or
mov
xchg
outs
shr
cmp
mov
popa
mov
mov
arpl
cmp
stos
outs
sub
mov
xchg
lods
fs
test
scas
push
(bad)
mov
int
add
out
push
sbb
mov
cmps
fistp
push
gs
in
in
in
dec
test
push
push
jae
mov
pop
cmp
fadd
mov
js
or
jmp
popf
cli
sub
sbb
js
aam
not
add
in
in
jbe
and
dec
add
rol
sub
xlat
jle
repz
popf
scas
call
xor
stc
xchg
inc
mov
cld
cmps
shl
adc
xor
(bad)
mul
push
jg
aad
push
inc
fwait
(bad)
sti
push
test
push
xor
std
ja
cdq
cs
cmp
xchg
and
sub
xor
dec
lahf
fmulp
lahf
aaa
or
rcl
fcomp
jbe
push
adc
fild
lahf
shl
shl
pop
call
popa
addr16
arpl
adc
mov
pop
aam
es
and
dec
sahf
xor
ret
sub
pop
out
pop
ret
push
mov
dec
fistp
sbb
ja
pop
dec
in
mov
mov
mov
fsubr
cli
pop
adc
ds
pop
and
push
mov
ds
aad
cld
dec
aaa
adc
xchg
std
or
arpl
ficom
les
push
cmp
dec
mov
pop
pop
sbb
add
pushf
jg
inc
out
clc
xor
pop
data16
ja
inc
shr
jno
pop
mov
and
int3
push
push
push
adc
shr
icebp
test
and
push
adc
mov
idiv
(bad)
test
pop
out
cld
pop
ins
call
push
mov
pop
pop
adc
dec
push
mov
pushf
addr16
xchg
fstp
aas
ins
clc
adc
fsub
push
sahf
pop
sbb
leave
fs
daa
sub
sahf
sub
sti
add
neg
pop
lock
sub
addr16
pop
or
out
in
xchg
lods
sbb
push
dec
pusha
pop
sbb
xchg
hlt
cmp
out
mul
pop
(bad)
fild
pop
enter
call
std
rcl
shr
sbb
and
mov
bound
scas
xchg
and
lds
dec
hlt
in
test
jecxz
repz
ret
add
mov
push
pop
sub
and
lods
cdq
push
mov
scas
mov
loopne
and
cmc
adc
xor
sbb
dec
or
ss
sar
fdiv
stc
cdq
cld
inc
jno
dec
cld
sbb
popf
hlt
add
stc
mov
push
arpl
jecxz
arpl
movs
int3
cmps
leave
pushf
retf
pop
push
lods
cwde
(bad)
pop
outs
cmp
xchg
(bad)
mov
xor
cmp
ds
addr16
popf
xchg
pop
cmps
mov
jnp
scas
in
jae
sar
in
cmp
cmp
mov
sub
add
popf
sub
shl
add
lods
inc
cmp
jl
arpl
adc
push
mov
popa
movs
mov
jno
sahf
pop
dec
jb
sbb
inc
leave
arpl
call
mov
cld
stos
pushf
pop
xchg
int3
ja
pop
mov
mov
xchg
inc
xchg
cmp
inc
and
pop
mov
fsubr
add
imul
sub
fisubr
inc
lea
outs
push
int3
xchg
test
mov
and
adc
je
outs
push
push
add
imul
(bad)
lahf
sbb
cld
test
pushf
cmp
loopne
xor
pop
std
mov
xchg
(bad)
mov
fcom
stos
jg
mov
scas
dec
lods
xchg
inc
ins
call
out
adc
popa
pop
fistp
inc
movs
repz
lock
(bad)
idiv
outs
inc
repz
sub
xchg
stc
out
aas
xor
fadd
lea
shl
fadd
inc
push
cdq
ss
int
aaa
ins
into
xchg
cld
cwde
enter
jle
inc
pop
cmp
fmul
in
mov
gs
push
push
in
jae
xchg
inc
shl
sbb
out
imul
xor
hlt
ja
ror
ja
arpl
xchg
or
cld
or
cmp
data16
mov
sahf
jo
mov
sbb
cld
xor
mov
sbb
cmc
mov
(bad)
sbb
push
stos
ror
lods
sub
push
inc
add
sub
pop
in
dec
or
out
movs
js
or
lods
xchg
scas
mov
int3
cmp
pop
je
sahf
pop
or
adc
or
jg
and
daa
adc
pop
outs
inc
(bad)
push
mov
or
mov
jmp
dec
into
or
mov
ins
hlt
aad
stc
or
outs
xchg
loop
push
adc
pop
mov
push
lahf
aaa
inc
loopne
icebp
data16
in
dec
call
mov
xchg
daa
cdq
push
pop
mov
cvtps2pi
or
mov
inc
mov
ret
jg
addr16
jno
rcr
pushf
dec
mov
mov
inc
das
(bad)
in
out
nop
adc
inc
mov
lods
push
jbe
cmp
fsubr
or
sub
in
aad
imul
dec
jae
les
cmps
mov
inc
shl
aas
pop
mov
cdq
leave
enter
cmc
je
sub
pop
xchg
in
repz
jmp
out
mov
or
outs
cmc
(bad)
hlt
dec
sbb
clc
(bad)
out
call
cmp
inc
pop
ins
mov
imul
sar
mov
lods
mov
(bad)
push
mov
in
pop
push
fild
jmp
jmp
dec
pop
cmp
or
jb
jp
mov
in
popf
out
push
pushf
mov
jne
push
xchg
inc
inc
xchg
mov
adc
sar
into
popf
jnp
push
jmp
fs
jg
test
std
and
push
pusha
fcomip
lea
inc
fldenv
daa
xchg
jl
pushf
call
pop
outs
std
aas
sub
mov
sbb
sti
mul
mov
imul
fidiv
inc
mov
repz
cmps
adc
lahf
xor
js
aad
pop
inc
pop
mov
test
and
int3
ror
stc
jle
and
jbe
jnp
jl
das
outs
push
mov
add
inc
pop
mov
xchg
clc
das
test
stos
xor
adc
fcomp
ja
adc
rol
and
inc
xchg
test
push
push
fbld
xchg
jb
push
lods
pop
cmps
sub
add
adc
in
cmp
sbb
xor
sbb
(bad)
out
fwait
ins
std
sar
push
fwait
xchg
xchg
retf
lods
adc
xor
sbb
mul
dec
out
sub
or
outs
inc
sub
into
jp
adc
push
inc
dec
fist
jne
pop
xchg
dec
xor
lods
and
shl
push
jle
(bad)
es
sbb
cmps
iret
aam
inc
mov
in
or
xchg
xor
push
dec
pop
pop
and
pop
aam
and
mov
adc
dec
cld
call
(bad)
inc
jbe
adc
mov
mov
retf
sbb
pop
mov
daa
adc
pop
bound
dec
mov
pop
inc
ss
arpl
out
xchg
leave
cmp
push
xlat
aam
rcr
jge
popf
scas
or
add
cmc
stos
sbb
(bad)
stos
sub
jb
push
pop
inc
add
ins
pop
js
aaa
shl
xor
xchg
inc
sub
int3
into
(bad)
and
or
fstp
fdiv
dec
pushf
dec
sbb
data16
or
inc
ret
repnz
mov
iret
mov
cs
mov
jns
rol
je
scas
add
test
pop
add
jecxz
adc
out
mov
inc
imul
movs
cmp
mov
xor
xchg
or
add
mov
cmps
and
sub
adc
popf
rcr
push
pop
mov
stos
xor
cli
xchg
inc
sub
or
mov
lods
icebp
sbb
inc
push
popa
retf
push
xchg
mov
das
mov
push
jae
mov
and
ficom
ret
lock
mov
cld
or
jecxz
add
xor
mov
cwde
cwde
push
mov
sub
cmp
xor
call
or
jge
cmps
push
sub
in
inc
test
lea
xchg
cmp
jp
push
xchg
ret
lahf
mov
popf
js
lods
scas
pop
outs
ds
jmp
test
pop
out
cmc
in
shl
lock
add
in
ins
jo
pop
and
(bad)
jb
jge
shl
std
jne
cmp
pop
shl
xor
shl
xor
jl
das
xor
je
push
cmps
into
mov
retf
pop
mov
push
mov
out
push
xor
pop
xor
pushf
ret
arpl
stos
loope
sbb
js
sub
ror
sub
xor
push
jp
jne
sbb
jp
inc
cmps
lahf
fnsave
pop
pop
mov
lock
fnstsw
mov
sbb
cmp
rol
xchg
jo
push
retf
loop
lods
test
xchg
rcl
add
sti
hlt
dec
(bad)
loop
stos
xor
adc
cmp
push
jns
test
cld
and
js
fwait
xchg
push
jo
and
stos
pop
and
ret
dec
ins
cmp
dec
shr
push
cmp
movs
idiv
mov
xchg
dec
pop
xchg
call
call
cld
loopne
lea
sbb
ret
je
push
adc
es
cmps
cmp
outs
out
std
aas
iret
imul
add
jl
pop
push
jo
dec
ret
lods
xor
aad
adc
fisub
cmp
stc
sbb
repz
cmp
jo
sti
sti
in
xchg
and
add
or
ds
psubd
xor
sub
aad
dec
rcl
sbb
fsubr
push
fistp
mov
xchg
cdq
(bad)
xchg
lods
lds
call
fst
xlat
jnp
mov
add
pop
call
out
js
mov
xor
push
(bad)
pop
mov
push
(bad)
xchg
mov
xchg
mov
xor
pop
in
sub
test
fldcw
je
xlat
test
daa
sar
adc
jmp
xor
fs
imul
add
sub
cmc
fidivr
pop
arpl
stc
sbb
movs
int3
mov
stos
mov
mov
les
jge
mov
fiadd
sar
data16
xchg
mov
xor
push
adc
cli
cwde
iret
xor
dec
test
mov
clc
(bad)
lea
outs
sub
scas
and
les
add
call
xor
jmp
cld
cmp
mov
and
stc
xchg
(bad)
dec
idiv
cwde
inc
sar
add
mov
movs
into
out
std
push
iret
pushf
movs
leave
imul
pop
push
ins
dec
add
lds
mov
cmp
xchg
out
iret
push
lea
pop
sub
or
push
retf
clc
sbb
xchg
retf
cmp
push
dec
cdq
out
fsubr
sbb
lea
lock
cmp
bound
pop
icebp
fwait
adc
dec
popf
int3
scas
(bad)
fucomip
xor
and
push
pop
push
push
adc
adc
mov
dec
cmps
clc
push
popa
add
aam
adc
movs
mov
(bad)
fidivr
mov
adc
adc
in
and
repz
adc
outs
loopne
mov
fs
and
inc
inc
jne
push
(bad)
fisub
scas
dec
(bad)
fmul
xor
jmp
dec
sub
test
cmp
jg
inc
inc
jl
adc
fisttp
pop
adc
sub
xchg
push
aaa
and
jns
icebp
das
les
(bad)
push
fmul
(bad)
sti
ror
jl
xor
outs
mov
lods
stc
xchg
mov
push
pop
cmp
bound
jb
(bad)
adc
es
sub
pop
repz
cmp
arpl
hlt
(bad)
push
push
arpl
cmp
mov
xchg
add
jg
push
push
les
mov
(bad)
push
xchg
bound
xor
test
test
sqrtps
xlat
cmp
retf
ss
xchg
sbb
cmp
pop
fstp
lock
mov
aad
mov
inc
rcr
ja
xchg
sbb
das
xor
sub
push
(bad)
mov
rol
test
sti
int
push
push
jo
lods
mov
mov
stc
outs
cmp
nop
stc
mov
dec
pop
cmp
cmp
add
pop
ds
sub
push
lea
pop
pop
mov
popf
add
jbe
mov
sahf
add
ins
jbe
lods
cmp
jno
mov
lds
hlt
mov
aad
push
jno
jge
fld
cwde
xchg
cmp
retf
pop
pop
xlat
jp
mov
(bad)
push
adc
(bad)
scas
xchg
pop
outs
loope
adc
inc
lock
mov
inc
retf
pushf
jae
adc
dec
lock
mov
dec
jle
aaa
sqrtps
dec
xor
lods
mov
(bad)
and
fild
jl
and
inc
add
jnp
ins
push
sub
xchg
push
or
xchg
sbb
pop
pop
repz
adc
(bad)
fdiv
(bad)
neg
mov
dec
mov
cmps
jno
cmp
add
scas
pushf
jecxz
dec
pop
cmp
out
(bad)
jl
cmp
or
xchg
(bad)
es
gs
xlat
dec
rcl
push
xor
adc
aad
mov
adc
in
add
mov
and
mov
popa
sbb
pop
(bad)
pop
mov
ins
ins
and
sub
cmp
je
xchg
mov
mov
adc
je
xor
inc
or
iret
mov
push
xchg
inc
inc
sar
xlat
into
pop
sahf
lods
js
bound
push
call
push
dec
(bad)
dec
add
mov
dec
pcmpgtb
loope
cmp
dec
arpl
lahf
push
dec
cmp
fwait
in
mov
jo
outs
lods
clc
in
mov
fsubrp
arpl
cs
(bad)
clc
or
sbb
push
push
sbb
mov
add
xchg
xlat
sub
xchg
retf
aad
add
lea
mov
push
push
(bad)
sbb
in
sbb
dec
fadd
mov
outs
fsub
push
clc
ins
sub
adc
xor
dec
imul
lds
fidiv
jbe
pop
jge
(bad)
rol
cmp
(bad)
mov
push
jge
sbb
jae
mov
jmp
iret
jp
(bad)
mov
nop
xor
lahf
adc
popf
push
sti
or
rcl
icebp
out
dec
imul
and
xchg
push
sub
push
inc
iret
test
xor
mov
adc
inc
ret
neg
or
shrd
sub
sar
popa
test
(bad)
push
shr
out
mov
jle
mov
adc
retf
arpl
icebp
pop
dec
xor
retf
jne
icebp
pop
adc
call
cmp
imul
jmp
jecxz
push
mov
or
mov
ins
pop
sbb
nop
fwait
sub
xchg
xor
daa
cmp
add
jle
js
jnp
xchg
dec
cmp
inc
loopne
les
and
das
into
push
sub
out
aad
or
sbb
sti
adc
test
adc
shr
gs
sahf
pop
add
push
call
pop
xchg
arpl
out
mov
adc
xchg
xor
cmp
jecxz
mov
test
and
out
mov
rcl
xchg
fdivr
sbb
dec
jp
retf
icebp
add
xchg
retf
inc
scas
(bad)
popf
es
test
fsubr
add
xchg
pop
xor
pop
pushf
in
rcr
mov
repnz
std
pop
int3
cmp
adc
mov
mov
retf
out
ret
nop
jno
in
sub
xchg
ss
(bad)
ror
pop
cwde
fcom
(bad)
in
les
pop
push
inc
xor
fld
pushf
jmp
push
in
cvtps2pi
int
mov
or
cmp
sub
mov
mov
inc
js
add
ds
push
push
movs
adc
enter
dec
outs
fwait
int3
xchg
mov
push
jnp
jmp
sub
stos
js
ins
bound
jns
sbb
imul
xchg
sbb
fmul
mov
jno
pop
cmp
mov
ja
aad
fsubr
push
mov
jmp
push
mov
jb
push
and
outs
mov
or
loop
pop
mov
mov
shr
push
leave
cdq
call
jp
in
push
movs
out
pushf
outs
test
push
jg
push
sub
repnz
xchg
lahf
jle
imul
in
idiv
std
add
mov
retf
mov
out
aam
fdivr
xchg
jne
js
jl
or
mov
dec
mov
xchg
es
iret
sbb
mov
popf
xchg
sub
adc
ja
cwde
xchg
out
pusha
test
add
inc
jne
fdivr
pop
and
jle
pushf
cmp
inc
clc
outs
add
mov
dec
fild
pop
fucom
mov
jle
fmul
stc
lahf
ds
mov
out
pop
xchg
out
(bad)
in
aas
cmp
jl
or
cmp
lahf
cli
out
add
push
push
imul
lods
fist
dec
mov
scas
push
mov
jmp
jo
lods
pop
jp
fbstp
aas
stos
pushf
lods
mov
aaa
sar
out
movs
mov
neg
lock
jno
sub
and
xor
gs
ins
sub
dec
iret
fnsave
jle
xchg
mov
mov
daa
xor
add
xchg
adc
sbb
cmp
repnz
mov
xchg
loope
xchg
cwde
nop
and
push
cmp
stos
jmp
cwde
adc
imul
dec
sub
pushf
cs
cmps
push
imul
ins
clc
mov
xchg
rcr
cli
jnp
xchg
xor
jmp
mov
add
xlat
mov
pusha
lahf
ins
sub
ret
mov
dec
xor
sbb
call
cs
sti
loopne
pusha
out
adc
lahf
jnp
jmp
xor
mov
cwde
outs
push
and
pop
test
retf
dec
mov
mov
aas
sub
repnz
popa
lods
jecxz
mov
xchg
sbb
sbb
sbb
adc
inc
adc
das
hlt
sub
xchg
cmp
sbb
fsubr
in
dec
ret
jg
jno
push
mov
jp
xchg
cld
xor
cmp
jecxz
cmc
cmp
mov
shr
aam
in
or
pop
mov
push
cs
push
rcr
mov
in
mov
cmp
rcl
aaa
adc
loopne
bound
fcom
fistp
pushf
ficomp
jmp
in
pop
out
pop
test
enter
sub
movs
xchg
push
xchg
jp
mov
mov
pusha
adc
pop
sahf
popa
xchg
shr
mov
je
push
mov
pop
cs
push
call
neg
and
adc
aam
retf
cmps
popf
and
test
mov
push
sbb
popa
and
inc
ss
mov
push
retf
(bad)
jmp
je
cdq
in
and
leave
cli
sbb
jae
push
iret
arpl
lds
popa
add
out
jp
or
rcl
(bad)
out
test
mov
retf
jecxz
outs
out
dec
dec
aam
(bad)
gs
retf
ss
sbb
sti
sub
mov
ss
test
xor
std
dec
arpl
pop
and
jno
div
dec
dec
repnz
lea
or
jmp
fwait
imul
in
movd
cmp
aas
mov
or
xor
push
int3
lahf
jg
and
lods
sub
call
movs
cmp
(bad)
and
xor
adc
mov
add
test
mov
test
pushf
xor
xchg
fcomp
cld
ins
sti
mov
fdivrp
push
sbb
sbb
cwde
sar
jmp
imul
fsubr
sbb
mov
fdivr
sbb
out
int3
xchg
sar
xor
enter
fcom
pop
jmp
sub
retf
sub
push
jb
jmp
fwait
mov
cld
dec
inc
mov
rcl
fdivr
xor
xchg
ret
cli
adc
les
jno
and
mov
call
and
xor
mov
cli
or
fs
fwait
mov
arpl
push
daa
fcomp
jle
clc
(bad)
pop
sub
push
or
ins
gs
lods
push
(bad)
dec
push
out
leave
in
stos
mov
mov
adc
shl
xor
xlat
lods
in
sub
cmps
add
adc
mov
fmul
scas
sbb
stos
mov
cli
pop
xchg
fdivr
out
jg
push
pop
fcomp
ins
push
xchg
cld
or
call
ror
sub
add
pop
mov
mov
jg
xchg
sub
addr16
dec
rcr
pop
and
mov
mov
cli
sub
rcl
lods
xor
jae
je
arpl
or
arpl
pop
idiv
xchg
nop
add
cmp
sbb
fadd
xor
sbb
aad
into
test
xor
push
imul
mov
pusha
or
test
pop
sbb
mov
call
int3
and
mov
add
mov
test
xchg
aam
or
lods
leave
popa
ret
and
out
xchg
ror
sub
mov
arpl
push
mov
and
add
lock
adc
fwait
hlt
(bad)
jnp
jmp
int3
lahf
dec
aad
cmp
fadd
pop
retf
clc
cmps
pop
(bad)
fdiv
cmp
mov
jg
mov
cmps
iret
mov
jg
mov
lahf
imul
(bad)
out
sub
cmps
jmp
add
or
sbb
pop
sbb
xchg
jnp
int
pop
mov
(bad)
iret
jae
sbb
cmps
fwait
shl
xchg
add
(bad)
retf
cmp
daa
mov
nop
adc
pop
ins
popa
lahf
push
lahf
jg
mov
mov
inc
ss
sbb
mov
push
fsubr
aam
dec
fistp
jg
cs
sub
cmp
dec
jmp
fs
lock
sbb
call
inc
push
cmps
lods
add
stos
mov
cmp
push
cmps
cld
pop
mov
scas
fcomp
lea
cld
scas
aaa
inc
popf
scas
mov
test
xor
adc
shr
inc
push
sub
push
xchg
shr
push
xchg
push
add
push
fsubr
pusha
fistp
pop
into
mov
out
das
mov
push
sub
cli
sub
sub
xlat
lods
les
dec
aam
sbb
jmp
aaa
callw
xchg
xchg
std
lds
sahf
mov
cmp
push
cmp
outs
fldcw
push
add
les
ret
or
call
call
retf
xchg
fisttp
push
xchg
sbb
shl
cmp
lods
psadbw
mov
movs
mov
test
neg
mov
std
cmps
bound
dec
aad
mov
out
jns
inc
clc
cs
cld
je
call
ins
je
test
dec
pop
adc
xlat
lods
xchg
jl
call
push
in
not
fdivr
in
sub
mov
in
push
fsub
stos
imul
or
inc
xchg
ror
pop
repnz
mov
pop
dec
aaa
loopne
stos
popa
lods
mov
retf
ret
pop
outs
out
jmp
jle
out
push
adc
rcl
jne
push
mov
push
rcr
push
in
jns
imul
movs
test
mov
int3
xor
inc
mov
call
and
les
or
fnstenv
cwde
push
js
out
ss
xchg
mov
cwde
inc
jno
jl
pop
imul
sbb
cmp
call
inc
and
inc
out
sbb
sub
fist
sbb
pusha
adc
out
push
in
lock
not
aad
push
fistp
aas
in
pop
and
xchg
jle
mov
idiv
sbb
pop
call
inc
add
adc
pusha
in
(bad)
lock
mov
cld
imul
scas
mov
xor
dec
mov
mov
sbb
sbb
aas
add
sub
fs
fmul
iret
lods
and
bound
mov
std
gs
cmp
int
das
sahf
sbb
outs
rol
pop
jo
xchg
call
dec
mov
dec
pop
stc
frstor
adc
lods
fdiv
jge
enter
int3
fild
mov
in
(bad)
fwait
dec
mov
cs
sti
add
ds
sbb
aad
push
dec
stos
sbb
adc
xchg
call
or
imul
xor
xor
or
adc
xchg
or
mov
inc
iret
fs
out
retf
xor
int
mov
sub
jge
unpcklps
pop
ror
push
sub
cmp
nop
fadd
sbb
(bad)
xor
into
sub
jmp
idiv
dec
xor
(bad)
mov
jge
stos
inc
adc
int3
xlat
outs
mov
push
xchg
fidiv
jge
je
adc
movs
jmp
mov
inc
aas
cmp
mov
push
jl
add
out
stos
lds
mov
xchg
ins
adc
outs
mov
dec
push
jp
xchg
arpl
sahf
pop
nop
std
jno
loope
(bad)
cli
retf
pop
jp
cmp
push
cmc
mov
imul
hlt
je
and
sar
(bad)
aad
movlps
gs
ins
push
adc
ret
fist
rcl
jl
aam
inc
pmulhw
adc
and
call
mov
mov
enter
sub
out
test
dec
fsubr
inc
jb
and
and
fldpi
pop
mov
jbe
push
jmp
(bad)
popf
mov
pop
rep
ins
es
mov
sub
pop
dec
mov
outs
(bad)
call
ins
xor
and
lock
rcr
jnp
push
jmp
js
mov
adc
or
repnz
add
and
inc
outs
mov
or
inc
or
std
not
push
not
add
stos
jge
dec
push
movs
or
std
xchg
xchg
sti
pushf
add
jnp
xchg
inc
mov
enter
add
lods
pop
or
or
bsf
stc
or
out
xchg
cmp
shr
imul
lds
sbb
adc
mov
or
stc
test
lock
sti
ins
cmp
ds
push
loop
fimul
pop
push
pop
and
retf
movs
rcl
jbe
push
lahf
push
sbb
cs
mov
imul
mov
daa
inc
sbb
stos
imul
mov
lahf
test
ror
inc
push
ins
pop
add
imul
gs
xchg
push
scas
cmp
dec
sbb
and
test
hlt
into
and
pop
fldenv
pop
ret
test
ret
fsubr
scas
lods
cmp
cli
shl
fwait
pop
fwait
pop
test
jne
adc
ret
push
rcr
and
or
jae
fsub
(bad)
nop
scas
jmp
shr
shr
into
pop
mov
lea
inc
not
xor
int3
out
clc
mov
push
or
outs
loopne
addr16
cwde
scas
pushf
add
setl
neg
cdq
sub
pop
jno
cmp
std
aas
retf
cmp
or
rcr
fsub
pop
cmp
jo
xchg
das
cwde
jl
je
adc
ficom
adc
push
mov
sub
push
mov
xchg
push
mov
movs
push
pop
popf
cmps
push
mov
cmp
pop
not
mov
cmp
(bad)
ror
pop
lods
int
push
stos
and
pop
shr
(bad)
stc
rol
(bad)
mov
or
jbe
push
cmp
sub
xor
push
fnsave
into
sbb
cld
dec
jl
cli
dec
dec
pop
jne
push
cmp
pop
pusha
cmp
sub
imul
mov
sbb
fsub
or
jp
inc
adc
push
js
add
test
jg
es
and
jl
add
sub
xor
push
shl
xor
and
add
lods
push
imul
sub
outs
inc
xchg
es
sub
(bad)
jnp
fild
pop
sar
xlat
stos
xchg
enter
hlt
retf
jmp
cmp
ret
inc
ret
test
pop
xor
out
dec
movs
aas
sbb
jmp
scas
sbb
mov
adc
(bad)
ficom
rcr
lock
xchg
outs
mov
adc
inc
or
imul
or
adc
outs
mov
pop
outs
test
into
idiv
push
adc
and
into
or
cli
dec
sti
xor
int3
push
ss
push
jmp
dec
dec
push
jp
inc
nop
cdq
aaa
iret
mov
in
in
rcr
sbb
mov
in
jo
sbb
iret
test
fwait
test
ja
fsubr
cmp
fwait
call
inc
mov
push
into
mov
sub
into
rol
xchg
lods
out
inc
clc
cli
outs
inc
mov
mov
sub
sar
xchg
cli
lods
sub
and
pop
mov
das
dec
pushf
cli
repnz
adc
into
xchg
cld
push
arpl
jp
sub
lds
cmp
pop
mov
push
movs
sar
pop
xchg
mov
jne
lock
mov
movs
mov
pop
fwait
(bad)
mov
pushf
sbb
cmp
iret
test
or
fwait
scas
pushf
ja
dec
mov
xor
inc
mov
cs
push
add
in
or
in
push
rcr
sbb
pop
xor
shr
retf
lock
fdivp
adc
test
out
dec
or
nop
cld
inc
scas
ds
ret
iret
or
xchg
addr16
mov
push
sti
dec
pushf
cmp
clc
push
mov
pop
sub
gs
gs
adc
xor
dec
inc
or
or
add
cmp
dec
push
jb
lahf
dec
(bad)
stos
pop
div
cmc
cmps
aam
or
inc
ror
xchg
mov
push
push
sub
and
add
adc
jg
in
xchg
pushf
dec
jmp
cmp
pushf
push
adc
outs
or
or
test
enter
jnp
cmp
fs
mov
mov
test
nop
iret
cmp
movs
or
stos
inc
jmp
rol
sub
aam
add
push
fwait
adc
gs
call
retf
test
xchg
inc
fdivr
dec
(bad)
and
jmp
mov
in
jl
and
mov
jmp
jbe
and
sbb
sbb
cli
lock
and
or
ret
gs
mov
add
or
fiadd
mov
int
les
outs
add
mov
ins
push
jnp
iret
std
jae
int
mul
and
fnstcw
call
push
adc
push
retf
(bad)
fcom
xchg
xchg
popa
(bad)
rep
leave
jge
dec
call
adc
arpl
pushf
arpl
repz
and
fdivrp
jbe
or
xor
add
iret
outs
fcomp
(bad)
xchg
sti
push
rol
inc
adc
xchg
pusha
or
cmc
arpl
not
shl
sbb
mov
cmps
mov
ret
inc
enter
add
repz
bound
ins
lea
enter
retfw
mov
push
mov
movs
push
outs
test
and
cli
icebp
mov
mov
jl
pusha
movs
jp
movs
jp
push
fist
mov
inc
sbb
ret
mov
lahf
ret
inc
mov
and
mov
ror
scas
scas
push
push
out
xchg
aaa
jmp
mov
es
mov
ins
cmp
mov
push
cmp
cmp
jno
add
sbb
mov
movs
fsubr
xor
add
mov
pop
ins
mov
xchg
xchg
push
loopne
rcl
or
pop
fisttp
in
or
lock
data16
mov
sub
sub
iret
jo
or
mov
jae
sbb
cmp
ret
sahf
or
mov
inc
gs
jne
sbb
addr16
cmps
pop
mov
xor
fistp
or
push
pushf
or
(bad)
imul
push
fwait
jmp
mov
sbb
test
xchg
push
jle
and
push
pop
inc
cs
jo
sub
jecxz
in
pop
mov
push
aam
xchg
das
mov
imul
pop
sub
ss
xchg
inc
inc
aad
call
sbb
outs
out
movs
jge
cdq
call
ret
icebp
push
push
sub
mov
cmc
test
fld
pop
lods
es
xchg
imul
out
pop
into
fcomip
xor
lods
inc
cs
mov
jmp
sub
jl
cmp
shr
inc
test
icebp
call
xchg
fucomp
pop
xchg
fidivr
sbb
adc
or
adc
xchg
jmp
retf
add
pop
sti
fldcw
js
xchg
xchg
retf
out
adc
adc
mov
imul
push
(bad)
push
sahf
mov
ss
jb
imul
xchg
mov
sbb
stc
push
jg
inc
pop
dec
xor
adc
enter
in
dec
xor
mov
cs
push
cli
mov
dec
mov
mov
dec
pop
enter
push
bnd
into
jo
cmp
aad
adc
ds
imul
mov
inc
cli
dec
bound
jns
sub
pop
xchg
retf
cwde
imul
div
jmp
pop
jns
sbb
lock
(bad)
pop
xchg
js
or
cmp
jmp
xor
mov
pop
test
push
(bad)
jae
sub
xor
jae
sbb
sar
and
cld
jl
shl
add
das
mov
pop
adc
ror
rol
out
xchg
cmp
jns
xlat
out
push
xchg
fsub
sbb
dec
fbstp
into
in
mov
pop
mov
cld
jp
call
movs
jne
stos
cmp
(bad)
cmps
cld
retf
fcomip
iret
outs
int3
pop
int
push
lods
inc
fwait
bswap
jge
repnz
sbb
xor
adc
pushf
mov
add
sti
dec
neg
pop
nop
leave
cmp
sub
enter
or
jae
fdivr
dec
cdq
pop
(bad)
jl
pushf
mov
leave
add
addr16
xchg
cmp
(bad)
out
adc
mov
jno
mov
je
movs
mov
popa
pop
mov
shr
mov
arpl
ficom
lahf
fld
push
jno
jge
(bad)
fdivp
in
in
sbb
mov
nop
and
mov
mov
adc
pop
repnz
sbb
xor
ficomp
push
sbb
jge
out
mov
mov
or
pop
push
jl
or
add
mov
in
das
jle
or
jg
adc
out
mov
aam
pop
push
enter
ret
out
inc
pushf
ror
cmp
test
sar
cwde
cmp
arpl
xchg
ret
retf
cwde
push
pop
mov
add
dec
sti
pop
repz
fcmovnb
mov
inc
fstp
arpl
movs
mul
test
dec
pop
mov
or
movs
pop
(bad)
mov
lds
sbb
jmp
mov
cmc
mov
cmp
into
mov
xchg
inc
repnz
arpl
mov
mov
fs
fist
ja
push
pop
fnstenv
inc
cld
pop
inc
sbb
int
push
or
gs
cmp
xor
add
das
iret
xlat
mov
mov
mov
push
mov
icebp
dec
ror
cs
sbb
je
sti
cmp
inc
or
pop
imul
sub
cmp
fisub
cmp
push
(bad)
sbb
ret
push
mov
and
bswap
fs
repnz
into
ficomp
pop
cmps
push
cs
popa
dec
mov
rcr
inc
jg
repz
fidiv
xor
das
inc
xor
ins
ins
push
inc
or
iret
call
xor
xchg
stos
test
push
fs
out
shl
pop
retf
stc
fisttp
imul
test
aaa
call
in
inc
sub
sbb
out
inc
cmp
cs
mov
jo
cwde
dec
ja
jnp
push
or
push
clc
or
lds
int3
std
js
retf
add
mov
jl
fidivr
enter
es
jmp
sub
shr
aad
mov
adc
jmp
add
fcmovbe
(bad)
fisubr
pop
cmp
push
dec
dec
std
sub
inc
(bad)
xor
dec
jno
call
ss
outs
or
movs
movs
mov
bound
cmp
icebp
shl
arpl
out
ror
in
xor
mov
outs
pop
daa
and
xchg
pop
popa
(bad)
sbb
fdivp
sar
mov
aam
sbb
or
cli
mov
push
xlat
pop
out
adc
aad
dec
adc
xor
mov
or
adc
pusha
jmp
ss
aam
jl
les
imul
mov
inc
fld
add
push
pop
mov
ror
push
bound
mov
imul
jns
sbb
mov
lods
mov
pusha
push
retf
pop
mov
and
fistp
lock
and
add
retf
mov
mov
pop
jl
and
xchg
jl
mov
mov
inc
sub
jecxz
add
repz
movs
pop
xchg
xchg
pop
mov
sbb
cld
cld
movs
adc
gs
push
push
pop
mov
pop
loop
scas
movs
mov
adc
sub
test
sub
scas
outs
bound
fild
mov
jno
xchg
and
call
sbb
mov
lahf
cmp
push
and
dec
outs
call
jb
or
pusha
pop
pop
enter
scas
mov
aam
data16
imul
mov
scas
cld
push
dec
sub
cmp
ret
jmp
ins
imul
imul
mov
add
and
outs
movs
and
jg
dec
shl
sub
out
retf
pushf
fld
sub
test
mov
es
push
das
int
and
shl
loop
jp
ret
and
mov
push
in
ret
fld
pop
outs
ins
pusha
jae
push
(bad)
xchg
jbe
lods
xchg
push
push
icebp
popf
xor
inc
adc
lahf
cmp
add
shr
jne
inc
jmp
jae
xor
out
push
inc
test
ja
xor
pop
and
call
(bad)
jmp
push
mov
mov
mov
jo
movs
fisttp
stos
and
or
xor
push
push
outs
mov
scas
and
or
lods
xor
push
pushf
add
int3
loop
mov
in
shr
jg
stos
fisttp
test
popf
(bad)
ror
mov
ins
sub
mov
gs
cdq
mov
sub
mov
iret
std
movzx
sahf
(bad)
xlat
pop
sub
jbe
mov
je
iret
cmps
inc
sar
adc
or
lea
out
ins
xlat
and
pop
pop
sbb
out
clc
fmul
outs
rcr
ret
nop
sub
inc
pop
mov
imul
fild
jmp
push
in
sbb
pop
out
mov
adc
inc
xchg
shr
add
inc
jl
mov
or
or
out
retf
and
push
lahf
or
pusha
xor
cli
(bad)
icebp
loop
mov
repz
xor
jg
data16
xor
mov
or
mov
pop
dec
not
fild
stc
pop
mov
dec
stos
movs
out
mov
jne
nop
mov
cdq
aam
fldcw
jp
imul
adc
loop
mov
adc
sahf
imul
pop
loope
sub
add
cmps
mov
jl
adc
fld
adc
ins
mov
xchg
lahf
cmp
pop
in
loop
sbb
cld
pop
out
pop
push
(bad)
xor
or
fisub
adc
repnz
mov
xor
xchg
in
ret
leave
adc
leave
mov
pminub
mov
inc
jge
mov
mov
in
aas
push
push
pop
mov
out
daa
or
sti
dec
imul
cs
call
jmp
stos
lahf
bnd
dec
cmc
fisttp
push
(bad)
jno
sbb
jecxz
test
dec
adc
out
push
ds
xor
lahf
aas
adc
dec
sahf
fsubr
retf
clc
mov
mov
cmp
pop
pop
ds
pop
out
clc
and
retf
push
adc
and
stos
popa
sahf
inc
mov
and
dec
cmp
pushf
mov
pop
fist
mov
dec
pop
cmp
jo
pop
push
js
adc
mov
pop
xor
xchg
cld
jbe
mov
repnz
call
cwde
dec
fwait
jmp
cmps
les
pusha
ss
in
cmp
and
mov
arpl
mov
cld
jge
xor
sub
shl
dec
js
cmp
sbb
mov
mov
sar
xchg
xchg
ficom
lods
es
cmp
push
(bad)
(bad)
leave
mov
test
lea
cmps
inc
sar
test
ffreep
test
aam
int
mov
adc
xchg
cmps
jle
ds
adc
and
in
aas
jl
mov
xchg
mov
push
gs
mov
jmp
inc
icebp
out
cmp
sbb
fild
outs
push
mov
ret
cmc
out
jge
mov
aam
ins
inc
pop
mov
mov
test
(bad)
jno
pusha
mov
jg
jmp
add
sti
lds
mov
iret
or
push
std
(bad)
out
mov
xor
jne
out
dec
mov
cdq
je
mov
rol
xor
sub
pop
pop
sub
sbb
cmp
mov
(bad)
mov
add
pop
leave
jo
mov
push
imul
repnz
lods
pushf
shl
icebp
or
push
iret
dec
fs
ror
mov
push
(bad)
and
in
test
mov
imul
jne
xchg
in
ss
pop
push
gs
mov
jmp
fwait
sbb
sahf
into
mov
aad
retf
push
dec
fnstenv
test
xor
mov
cmps
xchg
scas
popa
fwait
lea
jmp
or
sbb
fnstsw
ret
jmp
push
ret
icebp
fnstsw
push
push
fstp
mov
lahf
nop
ret
gs
add
cmp
aam
mov
mov
fwait
inc
jno
mov
out
rcl
jmp
sub
loope
movs
jae
xor
jle
sub
xchg
dec
out
pop
cmp
add
pop
in
in
pushf
imul
(bad)
cmps
pop
dec
add
inc
cmps
in
lds
mov
sub
or
std
(bad)
hlt
xchg
sbb
imul
mov
stos
popa
xor
dec
cmp
cwde
outs
in
or
data16
icebp
arpl
test
popa
sub
mov
inc
jbe
jns
ror
les
gs
rcl
mov
(bad)
jg
aad
mov
arpl
mov
imul
retf
ret
je
pop
inc
sbb
lods
movs
mov
in
int
sbb
add
test
pop
movs
mov
es
pop
setp
bound
out
jp
ja
repz
mov
pop
loop
mov
dec
retf
test
pop
mov
(bad)
ficom
and
xchg
cs
mov
or
outs
mov
lds
mov
mov
stc
dec
add
popf
add
std
pop
sub
jp
dec
or
mov
xor
cmp
fadd
mov
xlat
mov
mov
push
mov
imul
jbe
lods
jle
bound
repnz
inc
xor
aam
push
adc
movs
and
mov
inc
sub
add
iret
dec
cs
retf
sahf
cmps
mov
push
stc
jecxz
mov
mov
cmp
ror
call
push
push
add
xor
sbb
cmp
push
(bad)
clc
imul
popa
aam
push
outs
cmps
pop
sti
pop
cmp
pop
push
nop
imul
aaa
push
sbb
xor
xchg
jmp
iret
sbb
jge
mov
mov
xor
pop
push
sub
add
xor
add
adc
jmp
fld
mov
movs
imul
(bad)
pop
jmp
iret
push
pop
or
les
jge
in
push
ins
mov
pop
outs
inc
iret
mov
lea
mov
les
pop
call
or
imul
fistp
ficom
push
es
pop
lods
xor
aam
sub
sti
pop
mov
sar
mov
out
movs
push
test
call
sahf
inc
imul
jmp
int3
jb
inc
mov
push
js
add
pop
ins
jb
adc
lea
adc
jg
mov
sbb
ret
xlat
scas
push
cmp
into
mov
pop
test
ror
fs
or
push
mov
jnp
sub
mov
adc
add
xlat
(bad)
scas
repnz
neg
loope
jb
ret
push
jmp
gs
das
nop
and
cmc
or
add
xlat
cmp
jp
pop
ss
aas
ins
mov
or
cmp
(bad)
fs
rol
test
dec
adc
popf
dec
ins
adc
xchg
sbb
and
xor
ins
mov
shl
xchg
push
push
loopne
jl
mov
aam
cwde
cmc
aam
xchg
pop
mov
xchg
xchg
fwait
std
(bad)
cmp
jnp
popf
icebp
push
xchg
xor
adc
push
adc
cmp
ins
dec
sub
pop
xchg
rcr
pop
bound
pop
ins
fsub
cmp
aam
pop
mov
and
pop
push
scas
cmp
sbb
jp
adc
mov
mov
ret
mov
ror
xchg
pushf
add
(bad)
call
ret
xor
fiadd
(bad)
jecxz
shl
shr
(bad)
fmul
ror
jg
or
push
pop
fcomp
int
pop
mov
pop
push
pop
push
pop
cmc
pop
mov
or
mov
(bad)
xchg
lods
mov
cmp
hlt
mov
push
imul
inc
and
daa
rep
stos
or
in
inc
fmulp
xchg
sbb
xor
addr16
js
dec
cmp
xchg
fbld
out
jbe
stos
(bad)
stc
dec
cmp
popf
cmp
or
lods
rcr
pop
int3
pop
movs
fadd
mov
pop
mov
mov
xchg
popa
adc
add
lods
jo
push
sbb
call
adc
xor
pop
push
sub
mov
sbb
cmp
int
xchg
cwde
sar
xor
cwde
jl
pop
sub
dec
aad
lods
movs
aad
imul
add
test
jmp
fprem
mov
aam
pop
sub
cs
mul
cwde
repz
gs
fild
retf
lahf
fist
(bad)
popf
jmp
xchg
mov
pop
imul
ds
call
popa
stos
mov
push
clc
cmp
xlat
jo
and
sbb
bound
(bad)
pop
inc
imul
push
dec
inc
out
dec
lds
out
(bad)
pop
jne
cld
pop
jbe
test
inc
mov
aam
sti
dec
mov
repnz
jb
xchg
sahf
dec
push
rol
add
loope
hlt
cli
adc
dec
pop
add
aad
addr16
mov
xchg
stc
retf
cmps
dec
ficomp
adc
lahf
sbb
sub
jne
repnz
pop
jle
sar
sbb
mov
je
and
dec
test
dec
cmp
fistp
pop
cmp
pop
mov
jp
mov
(bad)
sbb
push
jmp
fisub
popf
push
lods
iret
scas
jo
jne
arpl
into
push
sub
pop
addr16
gs
js
jbe
mov
in
repnz
push
pushf
pop
test
jae
rcl
int3
pusha
pushf
push
arpl
int
inc
pop
rcl
jns
add
sar
mov
cmp
in
test
int3
stos
inc
mov
call
jae
(bad)
jl
dec
ret
es
cmp
neg
pop
pushf
lea
test
pop
xchg
xchg
mov
jl
clc
mov
mov
fild
mov
jo
push
adc
adc
cdq
add
ficom
push
pop
out
inc
mov
stos
push
push
jge
cmp
icebp
sub
data16
fadd
dec
jmp
rcl
dec
(bad)
jbe
inc
xchg
add
inc
repz
xchg
imul
jg
xlat
add
mov
ins
lock
cmc
inc
and
ss
mov
dec
out
push
mov
scas
mov
push
in
or
loopne
cmp
mov
loop
cwde
(bad)
push
sub
or
pop
xchg
mov
push
pop
dec
test
in
inc
inc
lock
xchg
sahf
jl
adc
das
jecxz
dec
rcr
sbb
add
jnp
push
outs
mov
repz
aas
arpl
inc
dec
dec
ret
mov
mov
fwait
fwait
dec
push
push
xchg
sub
sbb
sub
pop
push
cmps
in
ret
test
or
cmps
(bad)
adc
xor
fwait
(bad)
jl
mov
fcomi
mov
das
ins
retf
adc
imul
sbb
aas
out
test
nop
cmp
jle
mov
fild
inc
hlt
test
ins
xchg
jo
inc
dec
pop
pop
mov
mov
sahf
out
fisttp
gs
(bad)
sbb
dec
test
push
dec
lock
pop
mov
cmp
push
and
enter
mov
or
pop
or
add
daa
in
mov
push
data16
dec
dec
mov
fisttp
nop
and
test
lahf
fcmove
pop
call
inc
aaa
inc
jnp
or
mov
mov
les
push
fcmove
(bad)
scas
sub
aad
dec
sahf
xchg
cmp
pop
ret
cli
iret
mov
test
in
shl
or
les
(bad)
mov
mov
ror
shl
xor
mov
add
and
stos
(bad)
int
sti
fmul
stos
or
push
and
fidiv
out
and
push
cmc
mov
push
out
movs
mov
retf
sbb
or
or
or
cmp
fst
(bad)
sub
dec
test
pushf
push
adc
arpl
aam
mov
jae
cmc
lods
pop
push
pop
adc
add
ins
cmp
push
fmul
cdq
call
push
pop
in
adc
ja
cmps
jnp
outs
or
dec
and
mov
jmp
push
add
sbb
imul
imul
xchg
inc
sub
test
cmp
inc
mov
mov
hlt
xchg
loopne
sti
popf
repz
fwait
pushf
and
push
dec
mov
sub
(bad)
lods
cmp
mov
nop
ret
inc
mov
movs
call
sbb
add
je
outs
mov
in
pop
aas
out
push
jl
lahf
xor
dec
adc
fiadd
dec
ja
aas
cmp
jne
retf
aam
js
mov
ror
or
jae
icebp
mov
xchg
nop
fistp
sahf
sbb
add
inc
pop
iret
retf
xchg
test
pop
fsub
addr16
and
xchg
jbe
cs
cwde
mov
mov
sbb
and
sbb
pop
jmp
xor
test
lea
clc
pop
jne
je
add
lahf
js
cmc
ins
push
xchg
jb
xchg
retf
mov
scas
or
aam
scas
arpl
ins
cld
bound
mov
mov
pop
aad
sbb
mov
stos
and
and
(bad)
and
jns
xchg
repz
mov
push
xchg
mov
je
mov
das
int3
sti
xor
sub
fwait
out
stc
jmp
clc
mov
add
test
das
das
mov
pop
lods
cli
mov
cmp
out
jle
adc
adc
mov
adc
dec
clc
aaa
sahf
das
aaa
inc
jmp
push
lahf
icebp
xchg
dec
dec
cmps
mov
cld
lds
(bad)
sbb
inc
stos
or
js
das
inc
cs
bndldx
xchg
push
push
mov
sub
push
adc
and
pop
lods
not
cli
sbb
mov
pop
enter
jp
lods
sbb
push
pop
mov
pusha
xor
stos
mov
cmp
inc
inc
rcr
call
repnz
jbe
ret
mov
pushf
push
dec
cmp
daa
out
lock
mov
cmp
jp
or
jp
loope
into
cld
xchg
cmp
mov
gs
repz
cmp
xor
inc
push
test
xor
adc
sub
jb
cmp
jmp
movs
shl
dec
and
rcr
cmp
adc
enter
or
scas
and
pop
and
arpl
cmp
xchg
mov
jnp
je
div
lods
jg
ins
pop
or
fst
lods
repnz
ret
jmp
imul
push
or
push
ds
(bad)
xlat
icebp
das
test
mov
mov
or
jo
pop
call
mov
jp
and
out
inc
outs
pop
shr
pop
adc
pop
fsub
mov
inc
ins
fwait
xchg
ror
fsub
fwait
sub
imul
imul
in
dec
fisubr
(bad)
icebp
lods
rcr
dec
dec
adc
rcl
out
and
out
jb
jl
iret
es
jbe
ss
pushf
stos
xor
add
jo
xor
test
jle
shl
inc
mov
push
push
inc
or
repnz
(bad)
test
add
add
xchg
scas
jbe
or
pop
iret
push
lods
jg
pop
and
push
in
sahf
ret
sbb
test
xlat
cmp
ficomp
mov
cmps
mov
pop
and
out
out
mov
ins
popa
imul
push
inc
call
xchg
jbe
scas
sbb
gs
lea
call
and
push
inc
repz
mov
mov
data16
pusha
je
cmp
mov
cmp
mov
mov
jle
xchg
jecxz
mul
push
scas
sbb
popf
ret
rcl
push
fwait
sbb
movs
int
jg
das
inc
or
jge
imul
adc
sub
ror
shr
jle
mov
cmp
shrd
push
cmp
movs
ror
ja
retf
push
pop
sbb
mov
imul
pop
retf
pop
dec
xchg
push
dec
aas
leave
pushf
icebp
bound
xor
cdq
scas
ja
cs
jle
repnz
scas
imul
stos
jle
aam
sbb
mov
retf
jmp
sub
add
push
call
retf
adc
dec
pop
mov
sar
jmp
scas
xchg
xchg
aas
adc
aam
test
inc
ja
nop
jp
mov
(bad)
adc
and
jmp
mov
sbb
into
or
cli
ss
dec
mov
nop
test
mov
repz
adc
fwait
push
add
push
out
adc
xor
jnp
cmp
imul
pop
push
arpl
sbb
addr16
outs
inc
into
rcr
cmp
jmp
loop
test
in
pusha
inc
add
imul
rcl
jb
mul
ins
xchg
loope
mov
cmp
push
or
ficomp
jnp
jne
jecxz
stos
mov
add
ins
sub
sbb
add
and
xor
cmps
jmp
mov
xor
js
lds
dec
je
and
fiadd
sub
and
sbb
cmps
pushf
arpl
xor
fld
out
xor
jne
cmp
popf
xchg
pop
pop
mov
push
xchg
neg
and
and
cwde
repz
and
fcom
dec
xlat
mov
lods
in
sub
stc
cmps
fisttp
xor
adc
(bad)
sti
adc
sub
mov
push
addr16
fiadd
or
cmp
xchg
lods
ret
test
pop
mov
popf
int
imul
cmp
pushf
sub
pop
pop
stc
out
jecxz
rcr
iret
icebp
ins
add
adc
and
scas
dec
xlat
icebp
fbstp
pop
sbb
fwait
or
push
retf
add
mov
lahf
xor
push
repz
dec
push
xor
jb
xchg
jbe
cdq
xlat
iret
into
arpl
pop
cmc
into
jmp
ins
push
push
pop
jg
inc
jnp
sbb
and
or
xchg
xor
mov
push
push
pop
sub
add
fsubrp
orps
je
dec
inc
mov
add
cld
retf
mov
jge
add
and
xor
mov
dec
xor
xchg
aaa
cld
loopne
out
fcom
call
ja
(bad)
cld
data16
das
arpl
mov
pop
cmp
push
cmp
cmp
mov
repnz
fwait
cld
sbb
ficomp
outs
cmc
pushf
push
sbb
call
imul
cmp
int
pusha
jg
push
mov
adc
xor
fisttp
out
add
mov
aaa
test
test
sbb
jmp
mov
loope
xchg
push
push
nop
and
repz
pop
push
push
les
iret
fmul
hlt
mov
xlat
stos
xor
bound
and
mov
xchg
in
jmp
test
loope
scas
pop
and
and
dec
rcl
int3
adc
adc
mov
daa
sub
mov
dec
int3
xor
mov
(bad)
in
mov
je
sub
push
das
dec
xchg
xor
imul
scas
imul
out
jl
stos
fmul
sahf
sub
(bad)
pop
xchg
xor
mov
pushf
das
sub
cmp
pop
xor
mov
lahf
xchg
das
pusha
movs
dec
cmp
xchg
sbb
sub
dec
popa
add
lock
je
lahf
das
loop
push
sahf
imul
lods
adc
scas
cmp
push
dec
scas
jl
jb
out
sbb
pop
pop
cs
call
or
jne
adc
fisub
popf
push
(bad)
xchg
jle
cmp
dec
in
icebp
jge
xchg
mov
sub
aas
scas
and
jmp
inc
call
mov
xor
cmp
loope
xchg
mov
sahf
dec
pop
sbb
enter
cmp
sbb
add
test
mov
(bad)
test
mov
cmps
aam
popf
daa
retf
jge
xchg
iret
jmp
test
shl
iret
retf
cmps
cmp
add
add
ins
xchg
jge
pop
or
nop
and
lock
lods
ins
xor
rcl
in
jne
mov
xlat
cmps
adc
gs
in
imul
iret
call
popf
jp
pop
adc
out
mov
nop
xchg
retf
and
adc
gs
(bad)
cmp
push
lock
sbb
mov
sbb
std
scas
inc
aam
test
loop
ss
pop
jmp
xchg
pop
loopne
int
xchg
mov
dec
jbe
push
dec
dec
aaa
sahf
fstp
mov
das
cmp
mov
pop
sub
lock
out
ret
nop
jo
cdq
iret
push
loopne
push
aam
cdq
retf
shl
sub
nop
cmp
or
fcmovnbe
add
adc
sub
fst
cmc
mov
int3
dec
push
out
add
xor
dec
adc
(bad)
fucomp
push
and
sbb
call
add
mov
das
push
push
outs
iret
leave
fbld
sbb
xchg
imul
mov
stos
inc
pop
ret
iret
ja
in
sub
je
and
mov
ret
lock
and
(bad)
fldenv
cld
cmps
test
pop
sbb
test
push
sbb
push
mov
adc
sti
fwait
test
add
mov
iret
xchg
arpl
enter
call
retf
mov
sahf
rol
inc
fmul
call
test
push
fild
ins
sub
imul
xchg
fmul
jp
hlt
pop
adc
out
jmp
jg
or
or
das
sub
cmps
mov
sbb
in
pop
mov
adc
mov
mov
adc
push
push
cmps
js
shl
pop
scas
inc
cmc
(bad)
fs
sub
adc
mov
push
mov
pop
out
dec
cwde
fs
rcr
or
sub
test
or
lock
addr16
std
mov
popf
push
and
xor
and
jne
and
jg
adc
push
sub
or
cmp
cmp
mov
jmp
pop
xlat
lods
mov
fisttp
cmp
push
xchg
out
inc
pop
or
jno
xchg
xchg
test
arpl
dec
inc
jns
adc
dec
pop
adc
jmp
cmp
ins
mov
pop
sar
jo
xchg
sbb
ins
mov
jge
call
sar
and
sbb
inc
dec
pop
call
std
test
xchg
outs
ds
jmp
jl
sbb
fbstp
mov
or
and
es
ror
adc
out
retf
xchg
retf
in
jmp
pop
ret
mov
stc
and
and
inc
dec
inc
loop
adc
push
sbb
icebp
jg
push
cmp
add
and
jb
sti
push
mov
sar
repz
mov
and
int
jg
and
ret
and
xchg
jp
(bad)
shl
xor
pop
scas
ds
inc
xor
ja
xor
test
or
or
cld
jnp
cmp
sub
bound
scas
jg
retf
cs
(bad)
das
sbb
mov
scas
fcom
ss
push
push
sbb
push
pusha
jo
xlat
sbb
fsubp
adc
xor
mov
xchg
mov
pop
std
cmps
push
dec
ins
cwde
fisttp
sub
sub
pop
and
pop
inc
fwait
(bad)
aaa
outs
test
mul
mov
test
push
mov
xchg
addr16
sbb
daa
int
xchg
retf
jmp
sbb
sub
lds
push
jp
sbb
xchg
adc
lods
mov
sbb
mov
sbb
mov
pop
push
fild
aam
push
mov
add
adc
add
and
ret
sub
(bad)
ins
pop
jns
div
or
xchg
add
lods
fdivr
push
push
je
fstp
push
(bad)
pop
xor
sub
daa
frstor
dec
fwait
out
gs
out
jecxz
leave
fsubr
pushf
jmp
mov
addr16
call
jmp
shr
pop
js
std
ficom
xor
fdivr
in
inc
mov
loop
ret
mov
inc
lock
iret
aaa
(bad)
dec
aas
inc
ss
jnp
loop
jmp
(bad)
xchg
cwde
repnz
stos
int3
jne
fcomp
lahf
or
push
outs
mov
call
popf
div
jg
sub
cli
iret
cdq
pop
ror
xchg
arpl
in
xor
cmp
lods
xchg
in
fwait
lock
sub
mov
jns
aas
cwde
pop
or
fimul
movs
jmp
(bad)
out
imul
scas
fiadd
push
jmp
cmp
popf
add
scas
sbb
(bad)
and
(bad)
jg
mov
fimul
pusha
sbb
cmps
dec
cmps
frstor
and
(bad)
pop
loopne
pop
mov
adc
dec
rol
cmc
aam
das
adc
sub
push
popa
sbb
push
cmp
push
or
push
inc
push
out
fistp
sbb
repz
mov
mov
dec
cmp
sar
dec
enter
out
and
sub
pop
pusha
adc
and
fmulp
repnz
ss
sbb
sbb
repz
test
dec
mov
pushf
sub
and
jp
jns
cmp
div
lods
rcr
rol
jnp
push
jns
adc
stos
aam
int
pop
push
jle
or
das
mov
cwde
push
jl
cmp
add
mov
pop
jge
mov
add
add
or
test
sub
sbb
add
inc
popf
xchg
add
je
enter
mov
rcr
mov
adc
fwait
stc
jge
xchg
push
lds
push
dec
mov
mov
xor
pop
movs
arpl
xchg
cmps
adc
cmp
and
mov
aad
fwait
les
push
out
and
push
push
test
lea
test
jl
shr
jp
pop
adc
mov
cli
push
add
jl
sbb
mov
ror
cmp
(bad)
je
push
add
jns
js
mov
inc
and
sti
and
mov
xor
jns
jo
stos
int
jl
adc
inc
lods
inc
sti
push
mov
mov
xchg
push
mov
jb
fninit
mov
mov
gs
dec
mov
ins
mov
std
push
out
std
jmp
cli
inc
std
fsub
cmp
or
popf
xchg
and
fsub
mov
mov
popf
sub
shr
push
imul
push
cwde
leave
call
or
xchg
scas
cld
mov
out
test
mov
retf
push
jbe
ficom
jnp
outs
(bad)
and
cmc
lea
push
ins
fnstenv
jp
sbb
fwait
push
leave
fsubr
hlt
test
icebp
and
adc
popa
jbe
mov
sar
push
sbb
or
push
adc
xchg
cld
in
imul
mov
shl
in
mov
stos
icebp
sub
push
dec
push
inc
dec
mov
scas
adc
xchg
mov
fld
hlt
mov
push
lods
xchg
(bad)
retf
aad
add
xchg
fnstsw
dec
inc
push
fsubr
sbb
in
mov
xchg
sbb
divps
lds
jmp
popa
dec
mov
or
adc
push
cmp
enter
in
jb
adc
pop
xor
pusha
das
mov
call
add
sbb
add
mov
sub
repz
in
sahf
shl
sbb
add
in
ret
outs
pop
pushf
jmp
pushf
out
or
jl
and
call
and
pminub
cmp
push
and
jp
imul
sbb
daa
lods
mov
sub
cmp
aaa
mov
mov
fild
dec
or
mov
xlat
call
div
mov
stc
cli
xchg
inc
fdivr
daa
pushf
outs
je
and
push
aam
mov
inc
push
and
pop
push
sub
clc
push
or
jp
push
and
out
stos
mov
hlt
cdq
stos
into
inc
dec
cmp
imul
dec
std
idiv
dec
jo
jle
jecxz
mov
xchg
(bad)
add
pop
mov
dec
in
dec
je
mov
push
xor
ror
push
sbb
jge
arpl
dec
jne
aas
fwait
sbb
adc
jmp
pop
test
mov
cs
mov
push
data16
lods
push
mov
test
pop
pushf
push
adc
inc
push
xor
clc
push
inc
and
outs
cld
sbb
in
dec
imul
fdivr
inc
mov
mov
pop
sub
rcl
jecxz
sbb
icebp
add
pop
enter
mov
mov
retf
out
push
sbb
ret
arpl
aaa
cmps
ret
scas
sub
fimul
ficomp
outs
ror
aad
dec
adc
repnz
pushf
rcr
retf
and
test
ins
pushf
xlat
loope
inc
stos
sahf
sbb
mov
xchg
or
sbb
jne
mov
xchg
je
mov
or
aaa
cmp
jecxz
mov
pop
js
fcomp
and
dec
test
and
les
push
add
mov
test
push
push
test
mov
retf
ins
jns
movs
std
mov
or
pop
ftst
pop
in
into
stos
sbb
sub
push
and
daa
sbb
inc
or
sbb
pop
add
test
leave
sub
sbb
pusha
cmps
and
pop
lods
stc
cmp
(bad)
shl
addr16
lock
movs
add
jae
xor
and
push
nop
and
aad
pop
neg
scas
popa
inc
ins
xchg
cmp
call
xchg
cmp
push
inc
inc
clc
xchg
stos
push
shr
jle
jmp
cld
in
jl
push
sbb
and
cmp
test
sbb
ins
mov
or
mov
(bad)
rcr
cs
pusha
dec
xchg
pop
out
jae
lahf
xor
mov
inc
and
pop
mov
nop
ss
(bad)
jns
dec
jmp
mov
shr
dec
pushf
scas
jle
mov
xchg
pop
test
js
or
into
fidiv
fidivr
xor
mov
adc
xchg
mov
jb
push
mov
sbb
pop
pop
dec
std
adc
push
shl
inc
loope
scas
dec
iret
xchg
imul
cld
and
and
adc
pop
sti
pop
push
scas
test
mov
dec
jb
sub
or
cmp
out
fcomp
jns
aas
mov
cmc
out
cmps
cmc
sbb
arpl
pop
push
or
out
add
adc
sti
cmp
test
stos
pushf
fld
add
ja
and
sub
xor
movntq
and
stos
inc
shl
add
aaa
xor
sub
das
shl
stos
push
call
sbb
sbb
jmp
(bad)
movs
not
inc
jmp
inc
out
dec
mov
or
push
mov
lea
in
ficom
cwde
jbe
jmp
inc
push
sub
pushf
bound
int
add
repz
sbb
aaa
jne
rol
ds
imul
mov
call
ds
push
imul
add
mov
mov
adc
fwait
setg
cmp
lea
popf
ds
jle
push
bound
cli
(bad)
jge
sub
scas
add
leave
jl
and
aad
xor
xchg
hlt
cmps
arpl
(bad)
das
push
mov
adc
das
ins
push
out
(bad)
cmc
inc
push
stos
scas
and
loop
xor
and
sbb
jmp
in
retf
cmps
cli
dec
jb
in
pop
mov
mov
jbe
and
cmps
stos
dec
push
test
dec
mov
and
call
(bad)
test
scas
jmp
out
sub
stos
and
nop
fdiv
sub
sub
sti
or
ja
xchg
dec
bound
ins
fist
pop
mov
mov
xchg
out
(bad)
int
jne
adc
xlat
scas
pop
scas
mov
cmps
adc
ret
dec
adc
dec
xor
pop
push
fsub
adc
cli
in
ins
dec
fstp
push
iret
mov
cwde
dec
cdq
sub
outs
das
cld
shr
or
(bad)
cdq
ror
push
(bad)
mov
test
outs
xchg
(bad)
outs
mov
frstpm(287
outs
sub
std
add
xchg
sbb
jbe
pop
sar
jg
ins
sbb
pop
ror
or
xchg
cld
dec
lods
ins
loop
mov
pop
jne
push
repnz
sub
sub
mov
out
aam
and
mov
cmp
jmp
or
fwait
enter
mov
ret
arpl
sar
mov
or
jns
pop
jns
fstp
push
and
scas
jne
jge
push
sbb
cld
adc
shr
fstp
fimul
jg
sbb
imul
sub
lahf
push
test
das
add
mov
cmp
retf
or
aam
mov
fdivr
push
mov
outs
push
cld
push
push
cmp
es
sbb
mov
outs
into
jae
clc
push
in
push
mov
addr16
movs
cmps
ins
and
in
ds
mov
lahf
mov
rol
dec
jnp
cmps
inc
jae
jp
jo
jo
cwde
mov
or
(bad)
cmp
cmps
pop
rol
or
das
jmp
into
push
idiv
lahf
repnz
frstor
jle
xchg
dec
scas
jp
inc
cmp
cmp
cmp
cmps
rol
mov
(bad)
sbb
pop
dec
iret
adc
jle
dec
je
fadd
push
cmp
sub
pusha
and
imul
mov
out
pushf
ror
pushf
shl
push
rcr
dec
inc
cmps
cmp
jnp
imul
xor
mov
fcomp
in
idiv
das
push
or
pop
mov
and
iret
in
ja
mov
or
and
loopne
fdiv
push
loopne
xchg
mul
add
ins
sbb
push
cmp
fcom
cmp
pop
cmp
(bad)
icebp
or
outs
mul
clc
jl
sbb
(bad)
fidiv
retf
add
aas
pop
push
jl
pop
jmp
lea
sbb
in
fidivr
mov
lock
inc
jg
jl
sti
rep
dec
test
mov
inc
push
or
and
shl
jmp
aam
and
jnp
pop
xchg
idiv
cmp
movs
xlat
and
fwait
icebp
cmp
xor
popf
fistp
(bad)
int
pop
mov
movs
xchg
xlat
fnstcw
hlt
mov
in
out
loope
xor
sbb
adc
push
push
out
sbb
aaa
add
add
xor
xor
sti
add
mul
adc
and
sub
mov
mov
fdivp
arpl
nop
mov
push
lea
dec
fs
xor
pushf
pop
xchg
adc
jbe
jmp
jnp
sub
out
adc
and
push
lock
dec
out
sub
mov
sbb
mov
mov
jnp
mov
jecxz
pushf
sbb
pop
inc
jmp
ds
inc
or
ret
mov
cmp
inc
lock
mov
ficom
mov
push
jg
or
jecxz
mov
add
bound
lods
jb
dec
or
push
scas
js
sbb
xchg
pop
jb
jmp
repnz
xchg
mov
pop
ins
call
ret
xor
sbb
cdq
mov
mov
add
and
fsubr
mov
pop
jge
inc
sbb
push
jmp
and
fmul
push
mov
lgs
add
or
pop
mov
cld
mov
jb
in
mov
pop
popa
xchg
retf
call
adc
push
or
add
jecxz
xchg
cvttps2pi
mov
gs
call
out
lods
in
pop
popa
and
jg
fcmovnu
mov
pop
and
jbe
mov
pop
jo
aad
clc
into
repnz
push
shl
jbe
jo
cs
xchg
pop
sub
ret
out
jp
or
inc
imul
or
imul
mov
jmp
sub
addr16
fs
ret
sbb
imul
and
stos
cmp
jmp
cmc
add
ret
imul
push
bound
sar
repz
retf
sub
add
loope
sbb
int3
in
sti
call
sbb
mov
jb
test
or
popa
inc
or
lods
dec
fwait
xchg
or
push
mov
movs
ds
lods
dec
sub
inc
mov
sub
imul
cmps
test
test
push
lods
adc
mov
clc
test
sub
outs
fdivp
jnp
pushf
pushf
jge
jmp
xchg
in
mov
aam
out
sbb
sub
push
push
adc
xchg
pop
push
or
outs
cmp
lock
pop
xlat
and
retf
enter
icebp
cmp
outs
cmp
adc
add
enter
icebp
add
in
enter
sti
sti
add
pop
mov
sbb
imul
call
xor
or
aas
mov
jmp
adc
out
mov
pop
popf
ins
push
sub
scas
clc
fmul
cs
adc
cmp
push
mov
std
pusha
sub
ins
and
fsubr
stc
unpcklps
test
(bad)
sbb
aam
jnp
test
jno
pop
outs
mov
jbe
cmp
dec
dec
pop
in
pop
aad
mov
and
popa
repnz
ja
shr
mov
lock
pop
shr
pop
pop
push
outs
or
jmp
cmp
sub
and
dec
shr
pop
mov
or
jp
popf
and
xor
or
or
iret
mov
(bad)
sahf
pusha
adc
dec
sub
mov
sub
inc
rcr
mov
sub
pop
pop
cmp
fld
adc
mov
sbb
pop
dec
pop
dec
mov
cmp
call
fist
pop
bound
fucomip
jge
sbb
pop
sub
test
fdivr
aaa
pusha
lds
rol
jg
mov
or
sbb
test
jne
inc
daa
sub
fist
out
sbb
adc
cmp
iret
cmp
push
(bad)
sub
pop
adc
or
pop
mov
xchg
xchg
ins
cs
sbb
loope
test
and
ds
jo
mov
outs
jg
mov
or
jnp
pop
fdivp
cmp
inc
enter
ins
pushf
stos
dec
in
lahf
xor
sbb
sbb
mov
int
imul
xchg
mov
jmp
loop
fbld
ins
in
rcr
outs
(bad)
pop
add
iret
cmp
and
push
stc
pop
push
test
push
(bad)
sub
push
dec
push
es
test
lods
mov
add
jmp
inc
push
lds
ffree
lods
mov
iret
sub
fnstcw
call
push
dec
dec
int3
std
push
pop
cmps
imul
and
jno
pop
aam
mov
test
cmp
inc
mov
rol
and
popf
or
or
in
inc
movs
add
xchg
push
mov
ficomp
shl
test
jl
dec
imul
(bad)
repz
jle
pop
push
rcr
cmp
lods
in
lock
xchg
cs
call
lock
xor
pop
popa
movs
(bad)
cmps
dec
stos
loope
push
ret
xchg
inc
or
mov
or
int
fdivr
adc
mov
cmp
std
iret
jb
inc
jne
sbb
dec
mul
arpl
popf
jne
and
call
adc
or
pop
in
or
cs
push
outs
inc
fdiv
push
iret
(bad)
sbb
mov
rol
and
out
outs
push
fsubr
int3
mov
cmps
cmp
movs
(bad)
jmp
gs
add
aam
xchg
shl
sahf
sbb
push
sahf
ins
push
aam
imul
sahf
imul
aam
arpl
and
jge
adc
sbb
(bad)
imul
jge
loop
test
adc
outs
and
sub
(bad)
(bad)
jle
cmps
push
mov
xor
cwde
pop
dec
jl
sar
jg
(bad)
ins
mov
and
das
push
jge
fmul
cdq
cmp
and
mov
xchg
stos
sub
mov
push
test
sbb
cmp
lods
aam
sbb
adc
popf
xor
test
mov
test
xchg
lea
sbb
sbb
nop
dec
loop
aas
pusha
xchg
sub
jbe
mov
sbb
add
loop
push
or
sub
jl
mov
adc
aaa
mov
dec
stos
sub
adc
test
call
dec
pop
add
call
cli
stos
push
es
nop
inc
retf
add
popf
sbb
pop
cmp
cmps
mov
mov
retf
bound
pop
movs
or
cld
shl
lock
or
sub
js
adc
bound
inc
fistp
mov
pop
inc
mov
jae
leave
hlt
and
or
out
daa
sbb
pop
jle
mov
jns
mov
sbb
pop
push
sbb
mov
(bad)
or
popa
and
jae
pop
sbb
add
fnstcw
inc
sbb
leave
call
pop
out
sahf
loope
or
inc
mov
popf
mov
xor
mov
jne
push
sub
fnstcw
fisubr
mov
cmp
xor
int
(bad)
mov
inc
arpl
je
push
test
adc
push
jmp
cli
ror
jp
xchg
popf
es
cmps
push
sub
xchg
or
mov
mov
add
ja
pop
xchg
adc
pop
jl
retf
xor
aam
cmc
inc
retf
inc
fwait
or
movs
ss
dec
shl
jno
out
add
jnp
sub
pop
scas
cwde
retf
addr16
or
pusha
pop
(bad)
or
sub
xchg
pop
or
pop
xor
outs
dec
retf
push
push
pushf
mov
cmp
popf
inc
mov
fisubr
popf
and
imul
ror
icebp
adc
ret
jle
das
sahf
mov
xchg
dec
out
mov
(bad)
aad
imul
mov
cmps
and
mov
or
sbb
lods
jnp
jo
mov
cmp
rcr
(bad)
nop
mov
jmp
push
pop
jnp
pop
andps
sub
lock
lahf
outs
out
inc
dec
loop
movs
mov
je
inc
dec
pop
dec
inc
push
retf
out
arpl
(bad)
lods
inc
push
std
dec
sbb
mov
mov
aam
cdq
sub
jmp
push
sbb
iret
lss
test
imul
(bad)
mov
inc
pop
(bad)
loopne
sub
pop
fwait
jge
pop
loopne
(bad)
jge
pop
(bad)
int3
outs
push
inc
xchg
xlat
add
aam
jle
xor
push
movs
push
cmps
aam
push
sbb
arpl
dec
stc
mov
lods
gs
jmp
fld
(bad)
nop
inc
adc
imul
dec
pop
lds
xor
(bad)
pop
ret
out
jle
dec
push
mov
push
cwde
mov
and
mov
lahf
sbb
mov
lahf
aas
push
cdq
mov
adc
iret
jp
jbe
dec
adc
push
arpl
pusha
pop
or
sub
dec
cmp
xchg
lahf
test
add
scas
nop
dec
xchg
mov
mov
cmp
pop
out
nop
retf
outs
in
mov
pop
push
pop
cwde
push
mov
cli
arpl
xchg
dec
push
sbb
jge
pushf
stos
mov
ret
imul
lock
add
add
les
push
xlat
imul
sbb
mov
pop
xchg
mov
retf
cwde
retf
outs
xchg
rcr
adc
xor
shr
sub
xchg
(bad)
mov
cmp
mov
movs
test
xchg
push
jg
sub
pop
fldenv
xlat
lahf
stos
mov
and
sar
pop
mov
nop
dec
mov
push
pusha
ret
sub
rcr
jp
mov
test
leave
xor
shr
pop
jp
mov
mov
mov
(bad)
(bad)
push
bswap
stos
sub
(bad)
pop
push
fsubrp
adc
aad
xchg
jle
sub
movs
les
int
dec
jmp
xchg
adc
aam
and
out
das
pop
mov
sbb
adc
sub
ret
mov
jo
jmp
add
cld
int3
adc
and
loop
into
cwde
js
dec
lea
xor
js
ja
pop
and
mov
xchg
js
nop
in
jg
out
jp
in
call
mov
dec
sahf
or
iret
and
jl
loope
add
pushf
mov
loop
fs
cmp
rol
sub
sub
and
dec
(bad)
into
test
sub
adc
cmp
arpl
ins
arpl
cmp
jnp
inc
pop
sbb
inc
jge
pop
or
jmp
push
test
scas
lods
jle
leave
push
sar
mov
repz
cmp
stc
bswap
cli
out
bound
scas
push
ror
push
aam
dec
ret
sbb
hlt
leave
hlt
xor
mov
not
adc
fsub
cli
mov
sbb
leave
xchg
adc
sub
pop
lds
les
mov
enter
xchg
push
pop
pop
sar
adc
push
or
jp
sub
mov
daa
(bad)
mov
fdivr
jbe
push
push
int3
fdiv
mov
sbb
xlat
dec
in
push
dec
fisttp
out
(bad)
imul
push
adc
jp
ss
jmp
and
jnp
dec
pop
ins
shr
popa
inc
data16
jae
je
jmp
sbb
pop
or
push
pop
sbb
retf
mov
jecxz
mov
sbb
call
(bad)
jmp
pop
das
leave
xor
xor
pop
pop
jb
nop
out
lds
xchg
mov
push
pop
cs
(bad)
popf
add
fcom
sub
lds
xor
pop
adc
mov
mov
outs
sbb
and
dec
sbb
aaa
push
mov
mov
dec
adc
add
movs
xor
arpl
jnp
cli
pop
inc
into
sar
inc
popa
adc
clc
bound
(bad)
cmp
push
imul
mov
dec
data16
push
mov
and
icebp
and
pop
inc
loop
cs
fmul
pop
adc
and
cmp
jae
stos
lods
xchg
in
sti
out
sti
std
push
jmp
mov
iret
cmc
add
xchg
jmp
fst
adc
push
cmps
or
rdmsr
outs
mov
mov
adc
adc
xchg
lahf
mov
mov
xchg
hlt
xchg
push
add
or
or
ret
dec
push
push
xchg
rcl
mov
dec
and
cmps
cdq
(bad)
xor
stos
or
mov
and
bnd
add
or
mov
fdiv
cmp
ja
imul
sbb
in
xchg
or
cli
dec
jno
xor
test
xor
pop
es
shr
fdiv
fdivp
pop
out
icebp
lods
mov
dec
lods
mov
ret
cdq
lock
cmp
sbb
fwait
bound
out
outs
inc
ss
loop
std
sti
fisubr
scas
adc
or
adc
mov
mov
mov
sbb
xor
sub
pusha
mov
jo
mov
dec
lahf
mov
gs
call
sub
xchg
aaa
push
pusha
call
inc
adc
add
sbb
xchg
and
sub
push
imul
push
push
jmp
sbb
cmp
scas
mov
push
imul
xchg
call
(bad)
or
mov
je
xchg
adc
and
pop
inc
adc
dec
and
add
in
or
fs
pop
repnz
xor
pop
cwde
lods
js
xchg
ins
das
test
jae
push
lock
mov
inc
sbb
fwait
sti
cmps
repz
pop
bound
std
fcom
push
sbb
adc
fmul
push
cmps
jle
push
pushf
ds
test
dec
cmp
idiv
adc
jmp
mov
push
lahf
addr16
inc
mov
dec
cwde
mov
mov
clc
in
retf
pushf
xor
(bad)
aaa
push
sub
cmc
mov
cmps
(bad)
or
adc
pop
push
int
not
inc
mov
cmp
or
pop
test
mov
test
fnstenv
int3
nop
mov
xchg
rcr
ins
pop
int3
shl
dec
inc
and
sbb
pushf
sbb
movs
fnsave
les
enter
sbb
inc
dec
pushf
jl
jecxz
sti
jbe
scas
sbb
dec
add
pop
inc
jl
push
ret
int3
sbb
std
pop
loopne
push
mov
int3
lds
cmp
jbe
mov
leave
arpl
das
shr
mov
stos
add
push
ins
in
cmc
jbe
or
jge
dec
enter
push
sar
or
retf
adc
fwait
cli
out
dec
cmps
dec
push
ret
sbb
das
jbe
call
or
push
and
rcl
(bad)
adc
push
fist
add
jb
mov
push
add
add
sbb
sub
add
sub
push
call
sub
dec
adc
pop
ret
and
jecxz
fwait
add
sti
in
in
sbb
shr
push
add
cld
sub
daa
outs
sar
sub
popf
sbb
mov
mov
scas
lahf
mov
ss
call
mov
shl
jl
bound
lea
add
adc
sbb
cmp
sbb
mov
push
rcr
push
inc
mov
sti
jnp
inc
jbe
js
mov
jae
jg
cmp
test
or
lods
mov
into
cmp
test
int
mov
sub
jge
pop
xchg
call
ins
push
cli
adc
or
frstor
repz
pop
or
add
cs
and
mov
push
sti
scas
das
sbb
mov
ins
dec
jmp
js
xor
and
daa
jp
(bad)
inc
lahf
xchg
fs
call
sub
sub
mov
cmp
shl
cdq
mov
lahf
pop
imul
sbb
loopne
or
das
lods
pop
imul
jno
sbb
xchg
push
ret
mov
mov
inc
xlat
je
cmp
jl
dec
mov
jno
xor
xchg
sti
jbe
add
shl
icebp
into
into
enter
nop
push
outs
lahf
xchg
adc
in
jne
xchg
or
jle
jl
push
cld
nop
dec
jge
daa
fwait
sar
jo
pop
mov
cwde
sub
xchg
int3
cld
fadd
cmp
adc
scas
fisttp
cwde
daa
out
lock
popf
mov
mov
fstp
repz
stos
int3
and
xchg
nop
enter
arpl
es
sbb
xor
mov
sbb
call
pop
nop
cmp
and
jnp
addr16
pop
into
cmp
scas
das
push
pop
ja
sbb
les
ret
in
jle
pushf
mov
mov
out
add
sbb
stos
jbe
out
lahf
xor
ins
jge
inc
jl
setge
mul
mov
rcr
ja
cld
stc
pop
cld
dec
xchg
and
and
lods
cmp
mov
(bad)
pop
loopne
enter
mov
iret
sbb
jnp
or
adc
push
or
outs
test
pop
(bad)
sbb
cmp
pop
retf
adc
add
sub
call
sbb
adc
jle
popf
mov
test
ja
ror
arpl
cmp
lods
outs
sbb
inc
aaa
mov
mov
dec
dec
call
ins
or
pushf
bound
in
dec
leave
rol
dec
out
dec
mov
xor
cmp
add
pop
ret
ror
popf
push
loop
int
jecxz
sub
push
sub
inc
outs
clc
push
mov
arpl
push
scas
or
arpl
mov
shl
lock
cmp
jmp
inc
dec
ss
mov
mov
mov
mov
dec
mov
neg
mov
adc
jnp
jbe
ins
mov
mov
jmp
add
inc
jmp
nop
jb
imul
push
mov
mov
loop
adc
sti
call
je
sub
int
je
adc
inc
bound
and
in
cld
xchg
and
cmp
arpl
scas
ror
adc
aaa
xor
loop
lea
inc
xor
cmp
retf
neg
xchg
xor
pop
mov
mov
in
xchg
clc
(bad)
cmp
mov
adc
jno
or
sub
fs
mov
mov
jo
je
or
inc
push
aam
pop
lods
inc
mov
pop
and
xor
iret
jo
lds
rcr
les
rcr
in
outs
rcr
mov
mov
into
retf
pop
scas
sub
ss
sub
sbb
push
xchg
jmp
mov
push
test
pop
cmp
inc
xchg
test
sub
jno
or
xor
loope
fcom
popa
inc
cli
bound
(bad)
(bad)
mov
rcr
jnp
gs
push
dec
out
mov
out
pop
jg
(bad)
ins
inc
xchg
mov
fwait
push
inc
sbb
ins
aam
lea
xchg
sub
sub
xchg
xchg
fmul
jno
mov
xchg
mov
cmp
and
push
int3
retf
out
xchg
push
lods
push
pop
push
and
add
fbld
add
cwde
pop
out
lea
mov
dec
mov
mov
call
repz
or
stos
mov
cmp
push
retf
and
xchg
dec
mov
scas
fbld
add
lahf
js
push
movs
jns
test
mov
xchg
stos
in
jle
jns
push
mov
and
out
adc
lahf
fidiv
in
or
fcomp
lds
add
out
fcmovne
jmp
mov
call
dec
jl
push
jae
push
repnz
mov
test
pop
sbb
test
dec
push
nop
repz
and
cmps
ret
out
dec
aad
sbb
(bad)
jmp
les
add
jle
int
mov
idiv
shl
mov
mov
out
mov
cmc
sahf
add
push
ss
push
aam
cs
inc
fdiv
sti
je
daa
retf
or
(bad)
outs
cmps
call
bound
jg
cmp
stc
cwde
fmul
mov
mov
jbe
cmp
push
scas
enter
jp
das
inc
inc
mov
fs
popa
dec
xchg
inc
mov
mov
xor
sbb
sub
inc
das
xchg
cwde
mov
push
sub
inc
xchg
ret
test
shl
out
movs
pop
cmps
inc
mov
xor
(bad)
sbb
test
shl
or
push
jmp
shl
xchg
pop
scas
fldl2e
jno
dec
jp
xchg
jmp
ins
cmps
xor
sub
repz
je
in
retf
mov
dec
add
outs
xchg
neg
sbb
enter
and
push
pushf
fist
add
mov
cmp
and
and
cmp
sbb
outs
lods
mov
into
stos
sbb
mov
fwait
movs
pop
lock
cmp
fcomp
ss
test
mov
repnz
call
jns
push
nop
add
adc
cdq
jbe
addr16
popf
outs
call
movs
daa
mov
jle
dec
cld
push
xchg
rcl
lock
ins
int3
pop
xor
gs
out
jge
add
mov
ds
add
in
push
cmp
pop
stos
push
add
std
xchg
pushf
lea
push
mov
fnstenv
pop
adc
xor
clc
call
mov
arpl
int
push
cmp
clc
push
in
gs
dec
sar
mov
bound
ret
jno
jo
test
aam
jle
pushf
xor
outs
sbb
(bad)
jne
adc
sbb
cmp
jb
into
xchg
xchg
ror
es
xchg
fisub
sti
fld
dec
add
add
in
fidivr
ins
mov
aas
adc
aas
cld
push
push
mov
loope
sub
(bad)
int3
cmp
mov
rcr
cmp
jne
int
mov
xor
or
ret
xchg
test
xor
cmp
push
jmp
lahf
fmul
mov
jl
pop
xchg
and
sub
and
inc
xor
inc
int3
adc
push
push
loopne
xlat
mov
pop
sti
jle
adc
mov
sbb
aaa
and
xchg
imul
add
leave
pop
dec
mov
cmp
(bad)
pusha
jno
in
mov
push
shl
dec
outs
(bad)
mov
jmp
mov
jl
sbb
sub
fwait
std
adc
sbb
cmp
mov
rcr
sbb
jnp
sub
bound
dec
jne
sbb
push
jo
js
imul
sub
cdq
ror
jo
sbb
jo
std
push
adc
xor
dec
aad
cmc
cmp
loop
or
cwde
and
mov
cli
mov
outs
retf
sbb
mov
push
fst
sti
cmp
mov
test
jnp
jmp
(bad)
fwait
pop
push
loopne
dec
sub
add
int3
movs
sbb
fs
sbb
push
or
inc
push
inc
push
loop
xchg
mov
push
out
pop
xor
ret
xchg
jmp
test
imul
xchg
in
push
outs
inc
(bad)
xchg
xchg
ins
ret
call
mov
mov
xchg
adc
dec
mov
and
xchg
cwde
dec
sub
cs
dec
lods
mov
out
test
pop
js
(bad)
hlt
mov
and
inc
lods
aas
leave
jp
mov
xchg
fimul
pop
add
(bad)
aam
xor
push
jp
jne
add
mov
adc
sti
mov
xor
cli
inc
sub
mov
in
sbb
mov
(bad)
enterw
sub
inc
mov
jle
push
jns
mov
les
lahf
inc
jae
out
pop
and
test
and
and
push
shr
dec
inc
pusha
push
(bad)
ss
call
dec
cmp
int
and
push
lds
mov
mov
out
cmp
les
adc
push
add
aam
or
test
(bad)
sbb
sub
iret
xor
jne
mov
pop
addr16
das
mov
hlt
lods
jl
nop
push
xchg
cmp
ins
ret
cmp
(bad)
(bad)
inc
push
(bad)
out
movs
leave
cmp
lods
das
cs
addr16
rol
popa
dec
ins
sbb
and
daa
sbb
ss
mov
cmp
iret
mov
mov
or
or
sahf
retf
ficom
add
pushf
pop
out
int3
push
cmps
pushf
icebp
fcomp
xor
jge
stos
idiv
sbb
fst
repnz
mov
sub
outs
cmp
inc
ds
imul
and
fs
sbb
retf
fmul
movs
push
mov
fwait
mov
jae
sub
pop
jnp
sub
pop
sbb
cld
iret
adc
jmp
sbb
and
and
mov
scas
adc
or
cmps
int
sahf
pusha
xchg
sub
xchg
inc
(bad)
jmp
lods
dec
bound
adc
clc
imul
ins
and
xchg
jmp
mov
push
nop
pop
aaa
nop
das
mov
sbb
adc
pop
push
js
leave
shl
sub
nop
xor
clc
pop
mov
call
mov
or
lods
rcl
mov
sub
out
aaa
sub
ds
push
das
sahf
in
(bad)
aad
pop
int
xor
xchg
sbb
pop
outs
shl
sub
bound
mul
test
xchg
jg
fisubr
into
pop
mov
inc
stos
ret
fisubr
pusha
sub
enter
lods
cli
sub
fidivr
daa
xor
movs
dec
xor
cmps
and
xchg
cdq
ins
out
or
repz
xor
(bad)
sbb
int
sub
inc
push
mov
je
popf
adc
leave
stos
data16
dec
stos
stc
scas
jl
dec
fsubr
cmp
imul
mov
and
or
(bad)
push
sbb
xchg
scas
inc
mov
xor
shl
out
sbb
in
xor
gs
add
and
into
outs
mov
inc
fmul
leave
fisubr
iret
push
push
adc
push
push
xor
inc
jo
or
sub
out
(bad)
clc
ins
clc
sub
pop
adc
mov
jb
xor
mov
mov
fs
sti
in
call
inc
fst
jge
adc
mov
sub
test
lds
lahf
pop
repz
mov
outs
jp
push
add
adc
pop
fnstsw
pop
or
adc
mov
mov
pop
mov
xor
or
jl
lock
cld
sub
std
out
xchg
shrd
aaa
mov
jmp
imul
daa
retf
xchg
dec
add
cld
jmp
(bad)
sub
xchg
shl
mov
jl
push
ins
pop
xchg
adc
xlat
es
test
add
in
adc
ror
or
popf
or
push
ds
xor
daa
stos
adc
jnp
and
xlat
icebp
into
(bad)
push
mov
in
or
rol
pop
adc
rcl
mov
fdiv
stos
lods
and
ja
ds
les
jecxz
pushf
popf
pushf
inc
inc
or
mov
fcmovnbe
cmps
loopne
gs
xor
ss
stc
add
adc
push
cmps
pop
dec
cmp
mov
inc
and
or
sbb
sbb
cmp
mov
dec
retf
clc
adc
iret
mov
mov
fcomp
pop
adc
xchg
adc
mov
nop
outs
sbb
arpl
and
movs
ficom
fmul
stc
(bad)
and
fdivr
cmc
popa
ror
mov
inc
mov
push
sub
adc
and
jae
cwde
adc
push
aam
jb
pusha
and
xchg
push
(bad)
out
cmps
dec
(bad)
adc
sbb
push
cmp
jmp
xchg
call
pop
bnd
clc
xchg
inc
pop
jns
push
and
loopne
pop
mov
fisub
or
adc
fst
push
adc
dec
mov
xchg
call
out
iret
movs
call
loop
shl
pop
fsubr
sar
mov
mov
mov
mov
icebp
jge
dec
mov
scas
sub
es
cmp
mov
ins
mov
sbb
push
in
sbb
mov
jecxz
cmp
xchg
jp
out
imul
add
sub
js
mov
add
in
mov
out
into
aas
data16
ins
xchg
cmp
mov
cmp
sti
outs
mov
sbb
enter
xor
lea
mov
nop
or
stc
mov
mov
je
iretw
sub
lods
std
mov
test
sub
sub
jns
fimul
jnp
and
call
sub
ja
out
pop
mov
shr
js
sar
dec
(bad)
lahf
lock
push
mov
out
mov
cli
jecxz
imul
sbb
jmp
sub
retf
outs
test
cmp
cwde
jge
dec
add
or
add
mov
ret
gs
repnz
pop
mov
retf
cli
jmp
dec
sub
xchg
adc
aam
arpl
movs
pop
and
xchg
iret
imul
or
mov
pop
retf
ror
aas
popf
mov
mov
cmp
inc
mov
sbb
cli
shr
pushf
or
fst
or
test
loop
call
(bad)
sahf
cmps
xchg
sti
(bad)
mov
mov
jne
mov
retf
and
push
fidiv
pop
xchg
(bad)
aas
adc
fsubr
ror
and
jbe
adc
cmc
jecxz
lahf
pop
aaa
nop
cwde
cmp
dec
test
jge
sti
inc
lods
push
cdq
jmp
fyl2x
stos
sub
or
stos
mov
pop
je
(bad)
js
push
cmp
sub
(bad)
icebp
mov
jne
rcr
push
ins
jnp
and
ins
or
gs
pop
push
lock
pop
ds
nop
add
push
leave
aam
arpl
dec
xchg
jns
push
clc
mov
aam
push
dec
retf
call
cld
daa
adc
jbe
stc
(bad)
rol
in
mov
cmp
xchg
mov
pop
adc
adc
jmp
gs
mov
sbb
or
pop
imul
loopne
mov
fist
jge
pop
push
or
dec
xchg
xchg
pop
pop
ins
iret
push
sub
mov
inc
mov
or
lahf
mov
push
jg
inc
push
(bad)
shl
pop
out
int3
movs
fwait
cmp
inc
sbb
jne
repnz
out
out
test
inc
push
push
xchg
and
aam
push
mov
pushf
jae
sbb
cwde
jge
inc
pop
pop
cld
iret
adc
xor
pushf
(bad)
adc
mov
mov
fcomip
inc
cmp
sub
mov
lods
jmp
leave
mov
inc
sub
mov
dec
jge
pop
pop
sbb
test
shl
aam
loopne
sub
loope
mov
mov
out
arpl
and
retf
fstp
imul
jb
outs
or
sbb
jnp
out
push
(bad)
ficom
shr
bound
iret
pop
sub
sbb
or
lock
adc
lods
sub
mov
or
adc
(bad)
push
adc
pop
mov
ficom
fnstcw
idiv
jnp
pop
jp
dec
out
cwde
mov
mov
ficom
fild
shl
(bad)
mov
fmul
and
jno
xchg
push
fs
dec
clc
sbb
pusha
sbb
repz
or
shr
lds
leave
mov
sub
dec
jno
aad
rcr
jmp
xchg
cmp
pop
ret
mov
jg
jbe
or
in
scas
cmp
frstor
fistp
cmp
mov
adc
cld
dec
adc
stos
inc
pop
pop
fcmovb
outs
mov
std
or
repz
mov
adc
sbb
sbb
mov
adc
mov
sub
cs
push
inc
test
sub
aad
mov
and
add
js
push
xchg
add
push
enter
stos
ins
dec
icebp
arpl
jbe
fisubr
xor
jmp
int
add
sbb
xchg
aam
sub
out
ror
mov
pop
daa
lods
stos
popa
xor
shl
fwait
mov
and
jae
xor
out
and
sbb
gs
aas
jae
(bad)
gs
sbb
data16
out
scas
sbb
mov
or
adc
imul
repnz
lods
sub
and
(bad)
scas
(bad)
out
add
pop
(bad)
adc
mov
or
mov
imul
(bad)
test
movs
arpl
pushf
loop
inc
pop
push
cmp
dec
outs
ins
sub
and
cld
xchg
sbb
in
ret
out
cmp
add
pop
popa
rcl
and
jmp
push
shl
movs
push
xor
rcr
push
mov
and
xor
xchg
out
adc
push
sub
inc
adc
leave
lahf
nop
ret
jl
xor
xor
mov
and
mov
push
push
mov
(bad)
xor
cdq
mov
cmp
mov
test
mov
shl
fxch
xchg
cmp
out
sbb
dec
xchg
jecxz
inc
and
push
xchg
lahf
sbb
std
bound
push
xor
cmps
int
push
loop
fidiv
xor
sub
fnstsw
rcr
mov
mov
add
inc
push
adc
xor
push
adc
jns
mov
fstp
inc
xor
inc
sub
sub
ins
jp
int
mov
es
pop
clc
mov
xchg
out
sbb
cmp
jge
push
out
test
movs
jge
add
(bad)
mov
popf
mov
fiadd
jmp
adc
(bad)
jo
cmp
int
jmp
adc
and
push
jg
jp
or
xor
adc
data16
fmul
cmps
push
imul
mov
stos
loopne
push
fisubr
popf
push
stos
and
lahf
sbb
lock
xchg
jmp
aam
xchg
mov
xchg
push
into
or
in
loope
adc
or
sbb
adc
bound
mov
cmc
or
jbe
pusha
rcl
in
mov
xchg
test
xchg
mov
push
int
cmp
retf
int3
mov
ret
pop
jl
enter
sub
xor
fldcw
mov
mov
into
imul
add
push
in
jo
jae
shl
daa
sar
sahf
call
adc
jae
repnz
mov
sub
jp
mov
jmp
fistp
fisub
popa
push
movs
dec
ins
cmovs
pop
test
push
mov
mov
sbb
xchg
popf
mov
and
pop
sub
nop
mov
repz
ror
fldcw
lahf
jge
sub
ins
outs
xchg
sti
mov
shl
mov
push
pop
cmove
cmp
fdiv
fwait
cmc
icebp
neg
inc
mov
shr
mov
aas
loopne
test
push
xchg
div
inc
lea
push
enter
ret
fdiv
push
mov
mov
fninit
popf
fwait
and
test
pop
ins
sub
jg
inc
pop
rol
movs
mov
mov
ss
movs
lahf
aad
xchg
lods
jmp
push
enter
fstp
and
push
xchg
sub
cwde
leave
je
cmc
sahf
pop
add
mov
sub
dec
and
retf
call
xor
mov
das
ss
mov
and
inc
stc
inc
sti
xchg
imul
push
dec
mov
rol
fwait
jmp
loop
icebp
xchg
(bad)
lea
or
inc
or
sub
xchg
sbb
inc
addr16
or
sti
mov
call
pop
popa
mov
add
sbb
cmp
mov
cmps
addr16
adc
push
sub
les
xor
mov
jg
jnp
jae
rcl
and
mov
xchg
adc
div
lahf
mov
pusha
cmp
cmp
pop
enter
pushf
mov
push
(bad)
mov
xor
jnp
xor
aad
mov
and
inc
pop
lods
cld
iret
ret
mov
sub
mov
sub
xchg
push
scas
push
in
dec
sti
mov
into
jg
mov
push
(bad)
lea
or
enter
sbb
and
adc
je
lea
inc
pop
dec
(bad)
hlt
(bad)
ret
repz
leave
xlat
cmp
jno
pop
sub
loop
xchg
movs
dec
popa
loopne
push
clc
jnp
sbb
push
das
sub
pop
inc
cmps
push
push
je
jle
adc
fs
fidiv
push
xor
fwait
push
jnp
xchg
fstp
imul
(bad)
in
into
repnz
mov
out
out
cmp
(bad)
js
cmp
mov
hlt
lds
adc
jle
xchg
sub
pop
std
iret
ins
mov
(bad)
mov
call
popf
push
fadd
lds
mov
inc
dec
push
sub
mov
adc
pop
call
jno
jecxz
ins
and
cmp
and
jl
and
pop
push
enter
ds
pop
mov
into
jmp
xchg
ret
jge
test
or
cld
fndisi(8087
pop
sbb
mov
mov
fcom
xor
dec
sub
sub
mov
arpl
jnp
stos
lock
cwde
lds
shr
push
adc
mov
lea
sub
ret
push
push
cdq
ror
ror
cdq
enter
mov
rcl
and
test
jb
push
jmp
adc
popf
jno
lods
mov
je
inc
push
aas
imul
cmps
dec
add
pop
jmp
dec
cmp
sub
adc
nop
adc
pop
sahf
jle
cmc
test
cmp
jl
and
pop
cmps
pop
inc
sub
xchg
dec
mov
repnz
into
enter
xor
ret
in
push
fadd
(bad)
jmp
push
adc
jecxz
push
inc
push
in
jne
int
xor
cmps
(bad)
push
cld
loope
daa
adc
jne
sub
ins
cmps
mov
jo
and
jl
cmp
out
idiv
adc
test
dec
das
mov
retf
or
xor
inc
jo
clc
pop
iret
sbb
or
ret
fs
mov
jle
dec
adc
in
xor
push
(bad)
add
pusha
cmps
out
mov
jno
fistp
push
push
push
fmul
stos
add
repz
js
in
or
lock
sub
movs
outs
sub
popf
jg
sbb
pop
scas
addr16
imul
out
inc
rol
inc
fs
stos
cmp
xchg
cmp
mov
push
inc
popf
rcr
jbe
sbb
push
mov
popf
aam
mov
das
(bad)
mov
into
in
and
das
jge
mov
cmp
xchg
sbb
call
inc
cli
fdivp
xchg
repz
inc
sbb
aaa
mov
jecxz
sbb
ins
not
mov
fadd
xchg
push
fs
lods
fstp
ret
sbb
add
dec
push
inc
(bad)
dec
out
and
iret
sar
jb
outs
ds
cli
jge
ja
adc
scas
sbb
fistp
arpl
cld
lea
adc
retf
pop
std
fldl2e
pop
pop
mov
js
scas
arpl
dec
mov
push
cs
xor
jecxz
mov
pop
and
pushfw
repz
test
cmp
lock
sti
ret
xchg
std
ins
fld
sbb
out
lods
int
sbb
add
add
xchg
push
dec
ret
lahf
vorps
xor
xchg
(bad)
jne
fistp
aaa
imul
fwait
ins
xor
or
outs
jo
sar
push
scas
adc
cmp
jge
das
push
rcr
or
leave
fisubr
fistp
mov
inc
jmp
outs
pop
mov
outs
in
ins
adc
jle
jns
fbld
loopne
inc
pop
jne
mov
mov
xor
mov
test
bound
add
rcl
sbb
jae
xchg
xchg
ret
or
jle
xchg
dec
out
jne
xchg
stos
leave
aad
adc
mov
daa
pop
mov
lahf
sub
adc
push
mov
inc
xlat
sub
jl
and
cli
loop
nop
movs
mov
cmp
sub
mov
test
mov
or
fs
jmp
jmp
cmps
dec
mov
jmp
lock
jp
xor
add
jbe
int3
mov
xor
ins
enter
xchg
inc
and
jl
mov
int
(bad)
ins
mov
or
jle
retf
fmul
or
rcr
sbb
shl
push
dec
and
and
fdivr
rcr
mov
cmp
dec
fimul
in
mov
or
dec
xchg
jmp
in
push
sub
imul
stc
push
push
adc
fmul
aaa
push
jne
enter
outs
cmc
movs
loop
movs
pop
fild
test
ficomp
pusha
out
call
imul
(bad)
or
and
mov
and
mov
mov
jns
int3
mov
scas
cs
test
les
mov
cwde
adc
push
push
cmp
dec
div
test
mov
in
bound
push
pop
xor
mov
or
sbb
push
outs
jmp
pushf
rcl
aad
stos
cmp
pop
mov
out
sub
shl
jne
(bad)
and
cmp
les
bound
test
mov
adc
sbb
sub
aad
inc
(bad)
mov
sti
stc
adc
mov
push
jmp
mov
add
pop
hlt
inc
mov
ins
fidiv
stos
and
sahf
push
shl
arpl
popf
sar
jp
rcr
pop
out
cmp
inc
dec
mov
movs
cdq
push
ror
out
and
and
(bad)
mul
mov
xchg
inc
aaa
fild
inc
call
in
adc
cmc
addr16
cld
std
jmp
push
retf
daa
push
fwait
(bad)
sar
(bad)
sub
dec
adc
cmc
loopne
lods
dec
(bad)
mov
mov
inc
test
js
mov
push
rol
lods
lods
sbb
dec
pop
xchg
dec
push
inc
cld
scas
sub
adc
pop
and
int
pop
xchg
cmp
dec
sbb
jbe
pusha
push
dec
clc
pop
setno
mov
mov
add
je
push
mov
bound
scas
jbe
stos
sar
call
dec
clc
fwait
add
xor
test
jmp
xchg
out
mov
pop
mov
or
cmc
addr16
nop
cmp
inc
push
setge
add
pop
in
inc
shr
in
push
lahf
cmp
les
and
sub
fldenv
xor
sub
xchg
mov
adc
sbb
push
sbb
mov
pusha
pop
pop
xchg
jmp
jne
xor
mov
inc
mov
test
(bad)
gs
aaa
inc
(bad)
ins
sbb
xor
dec
jmp
cld
sbb
push
and
pop
in
loope
fcomp
jp
(bad)
arpl
adc
pop
enter
ins
scas
adc
cwde
adc
cmp
fwait
and
movs
push
and
mov
sub
stc
imul
push
push
cwde
sbb
ret
ins
xchg
pop
mov
pusha
loopne
push
int
sbb
lea
pop
push
jle
mov
pop
mov
imul
adc
jp
xor
add
xchg
(bad)
jmp
mov
or
aam
jno
sub
fnstenv
nop
push
sub
mov
push
mov
jo
cwde
mov
jnp
lods
mov
jbe
push
dec
(bad)
push
shl
clc
test
clc
push
sbb
call
jnp
mov
or
jmp
retf
or
sbb
jp
fnstenv
inc
mov
xchg
aad
dec
iret
sti
leave
and
js
add
cmp
aaa
retf
retf
jne
sti
add
addr16
sub
sbb
aam
add
mov
xchg
int
shl
pop
xor
lea
outs
mov
pop
cwde
jns
mov
jmp
jo
adc
imul
les
pusha
adc
push
pop
sbb
adc
loop
mov
cmp
mov
pusha
pushf
test
scas
push
adc
nop
lds
sub
adc
scas
aas
rcr
mov
cwde
pop
(bad)
xchg
call
pop
and
ja
pop
aam
ins
mov
or
xor
lods
gs
jp
idiv
jnp
test
nop
and
xor
jae
rcl
dec
leave
shl
cmc
fisubr
lahf
fadd
rcr
in
scas
(bad)
mov
push
fisubr
sbb
outs
xchg
movs
ret
cmp
xchg
ins
cs
fwait
and
cmps
dec
xchg
push
out
adc
test
push
adc
sbb
jge
mov
sbb
imul
pop
lock
xchg
call
xchg
fs
fstp
test
dec
mov
fist
repz
clc
cmp
pop
or
and
in
mov
sub
dec
sbb
(bad)
aas
dec
test
mov
inc
ret
inc
je
pop
outs
mov
sbb
jl
mov
out
call
sub
ins
pop
pop
adc
pop
dec
push
pushf
sbb
fwait
sbb
cmp
std
inc
int3
bound
pop
xchg
add
movs
sub
rcr
xor
call
ins
push
fs
inc
mov
or
pop
je
dec
pop
cmc
loopne
enter
and
aas
inc
ror
out
mov
sub
jo
push
mov
push
loop
lods
xchg
fwait
nop
mov
test
xchg
cld
call
push
push
out
and
outs
xor
push
enter
scas
and
pop
sahf
push
add
cmp
inc
stos
aaa
mov
add
iret
bound
sbb
inc
scas
repz
xor
in
outs
sbb
push
aas
pop
add
scas
pop
in
fcom
xor
call
mov
(bad)
push
or
sub
mov
xchg
inc
jmp
adc
outs
addr16
ins
arpl
lock
inc
ins
jae
pushf
jl
pop
inc
lea
bnd
jb
ret
les
cmp
addr16
or
push
fstp
int3
mov
inc
stos
dec
repz
(bad)
test
retf
or
and
jl
sbb
mov
dec
cmp
sti
mov
push
add
(bad)
retf
jp
test
cmp
jne
ror
pop
shl
pusha
inc
nop
push
or
lahf
data16
retf
retf
sub
pushf
test
cmp
(bad)
stc
inc
dec
push
cmp
mov
mov
mov
aaa
pop
aad
pop
xor
push
dec
adc
ins
inc
retf
xor
and
das
das
adc
dec
adc
mov
test
sar
add
rcl
push
pop
mov
inc
inc
fmul
(bad)
dec
clc
stc
jecxz
sub
shr
xchg
imul
(bad)
retf
loope
and
int
daa
repnz
mov
test
ret
ret
and
xor
jnp
mov
sub
aaa
adc
pop
add
addr16
push
shl
lahf
les
(bad)
gs
sbb
cmp
loop
adc
scas
js
mov
pop
xchg
sahf
inc
adc
jge
cmc
std
scas
mov
pop
mov
sub
xor
or
pop
cs
out
dec
pusha
inc
pop
lods
(bad)
and
test
in
loope
add
pusha
div
dec
jbe
push
ja
arpl
aam
out
xor
mov
inc
scas
push
stos
jnp
sub
pop
jp
(bad)
loop
in
lahf
jmp
push
rol
dec
inc
cdq
cmp
test
mov
jecxz
sub
adc
inc
pop
jp
or
adc
mov
or
out
in
ror
cmp
jns
inc
or
mov
dec
popa
jmp
rol
mov
sbb
push
mov
xor
test
jb
in
add
xchg
jo
jg
test
imul
add
ins
sub
loopne
call
xchg
inc
pop
imul
and
popf
ret
movs
or
out
add
adc
cld
test
cwde
int
and
pop
pushf
nop
cmps
es
push
push
stos
fwait
sbb
mov
lds
or
or
and
out
retf
mov
mov
mov
push
mov
fisttp
rol
jbe
fs
add
stos
inc
jecxz
xchg
cmp
dec
fstp
sbb
icebp
mov
test
push
adc
xchg
aam
cmp
mov
mov
sbb
fld
loope
pop
fistp
js
int3
out
pop
add
jecxz
push
cmp
stc
enter
jecxz
test
lahf
imul
cmp
push
lods
mov
xchg
bound
(bad)
test
bound
fstp
(bad)
mov
(bad)
and
pusha
mov
fwait
aam
push
mov
jmp
mov
clc
pusha
bound
fnstsw
in
sub
sbb
mov
cld
cld
xchg
pop
cmp
jge
jne
mov
dec
fisub
repnz
(bad)
cmc
lahf
js
xchg
xchg
fistp
ins
mov
mov
dec
(bad)
cmc
outs
pop
add
mov
mov
enter
jl
xchg
retf
test
cli
ins
inc
repz
in
jo
fdiv
hlt
std
lahf
imul
int
inc
jle
stos
add
sbb
or
xlat
pushf
loopne
daa
pop
xchg
and
jecxz
xchg
pop
icebp
add
or
dec
cmc
jmp
xchg
pop
sub
push
scas
xchg
mov
add
movs
retf
imul
jno
pushf
test
mov
ja
inc
xchg
fcmovu
xchg
cmps
test
pushf
in
cmp
push
mul
pushf
push
pop
jae
mov
iret
xor
and
xchg
push
mov
out
iret
bound
leave
pop
jle
push
movs
retf
mov
sbb
xchg
or
stc
imul
cmp
xor
mov
cmp
and
adc
in
rcr
(bad)
out
sahf
xchg
fbld
mov
mov
sti
outs
test
das
imul
cdq
jmp
xchg
mov
mov
and
stos
dec
(bad)
loop
popf
push
je
dec
lock
fistp
dec
icebp
mov
(bad)
fstp
adc
mov
fs
mov
sub
mov
push
bound
je
inc
pop
rol
xchg
mov
adc
out
mov
ins
ins
adc
in
cmp
pop
xchg
add
xchg
dec
dec
(bad)
out
jnp
xchg
mov
or
sbb
cwde
(bad)
xchg
add
loope
pop
or
popf
mul
gs
xchg
das
stc
mov
ret
cmps
popa
aas
dec
pop
and
retf
mov
add
sahf
xor
jns
mov
fstp
add
fcmovnu
aas
pop
xchg
enter
rcl
popf
adc
in
and
inc
ss
sub
mov
dec
fs
enter
retf
mov
test
movs
dec
rol
js
mov
adc
ins
stos
(bad)
stos
sahf
or
ror
pop
rcr
(bad)
daa
mov
mov
pusha
sub
push
dec
and
pop
(bad)
adc
mov
cdq
sub
push
into
push
push
adc
in
mov
cwde
call
in
lea
(bad)
sub
pop
xor
push
outs
or
inc
push
leave
pusha
xchg
pcmpeqb
fcomp
xor
ja
push
mov
sbb
lods
pushf
inc
imul
dec
out
xlat
(bad)
cld
dec
ret
inc
fldcw
dec
movs
push
mov
adc
iret
ror
out
inc
mov
mov
mov
in
inc
shl
popa
retf
repz
iret
or
push
push
sbb
cld
jge
xchg
ret
and
imul
mov
gs
and
or
into
lea
ret
aad
jecxz
hlt
leave
mov
pop
xchg
jo
ss
dec
sub
mov
mov
push
jmp
adc
mov
cli
outs
fiadd
inc
jp
pop
xor
arpl
mov
aam
stos
push
mov
mov
mov
jecxz
adc
push
or
and
xchg
stos
hlt
sbb
adc
fild
inc
dec
neg
in
fwait
mov
mov
test
inc
mov
jmp
bound
shr
fidiv
xor
add
imul
adc
lea
jmp
push
call
jne
out
fwait
test
dec
sbb
inc
in
and
ret
pop
pop
lock
cmp
das
cmp
sbb
push
(bad)
lods
mov
sub
mov
and
adc
gs
arpl
cmp
sub
dec
adc
xchg
loopne
xor
jg
fucomip
adc
sub
ror
mov
xor
sub
iret
call
jg
add
pushf
mov
sbb
and
neg
aam
int3
xchg
fsub
mov
adc
lea
push
mov
jmp
add
mov
push
cld
jmp
retf
add
sbb
push
or
ja
movs
in
jp
mov
or
xchg
shl
adc
ret
push
movs
sub
mov
fs
sbb
xchg
inc
bound
(bad)
bound
cmps
push
pop
cmp
inc
sti
mov
imul
dec
dec
add
mov
in
test
scas
aaa
dec
push
sbb
idiv
fst
push
mov
(bad)
fcmovnu
xchg
popa
or
xchg
xchg
cmp
xchg
mov
pop
lds
cdq
out
sub
inc
retf
cmps
cmp
arpl
ds
mov
cmp
mov
sub
inc
add
(bad)
push
std
jne
dec
mov
out
cld
mov
mov
sbb
stc
pushf
xor
sbb
mov
clc
clc
(bad)
sti
mov
sub
push
sub
in
push
push
hlt
pop
repz
(bad)
loop
sar
lock
js
fild
push
pop
jp
xor
mov
jb
inc
dec
inc
in
retf
dec
mov
xchg
movs
ret
adc
xchg
fst
sub
jp
push
cmp
inc
bound
iret
jmp
bound
repz
dec
mov
ds
out
cli
inc
cli
gs
cmp
fst
jmp
dec
stos
add
pop
mov
pop
adc
mov
sbb
imul
pop
xor
adc
stos
xor
dec
dec
ret
arpl
fdiv
lods
loopne
push
mov
test
adc
xchg
aad
addr16
xchg
xor
(bad)
dec
add
add
sub
mov
pop
cmp
stos
jecxz
jnp
imul
repz
add
xor
cmps
xchg
std
or
add
xchg
aad
or
adc
sub
repnz
sub
mov
jns
aam
popa
hlt
adc
adc
mov
add
in
stos
fadd
xor
fmul
fwait
lea
out
sub
adc
dec
mov
or
bnd
jmp
in
mov
setae
outs
ins
sbb
call
push
imul
das
pop
pop
adc
test
pusha
popa
push
sub
sbb
test
jmp
stos
sahf
jo
mov
xchg
iret
mov
and
in
jae
shl
clc
lahf
cli
xor
es
int3
inc
fxch
and
loopne
fwait
jmp
pushf
test
xor
jmp
mov
retf
lods
sahf
bound
cmps
mov
fisubr
cmp
(bad)
fcomp
popa
fild
cmp
fs
pop
xchg
popf
mov
adc
xchg
cmp
jne
pop
out
imul
pop
mov
aaa
fs
ins
(bad)
rol
add
sahf
dec
fisubr
in
jl
mov
fild
mov
ret
add
cs
fadd
shl
jge
dec
and
aam
mov
imul
iret
test
mov
je
sub
call
mov
ror
fs
les
dec
repnz
push
(bad)
retf
cmp
(bad)
std
xchg
(bad)
adc
and
mov
repnz
in
dec
imul
sub
data16
jmp
imul
fwait
push
push
sub
cld
mov
jb
pop
lock
xchg
pop
ror
arpl
test
dec
sbb
xchg
push
mov
pusha
daa
(bad)
pop
push
adc
arpl
mov
daa
mov
inc
mov
mov
enter
add
push
jo
arpl
sbb
fcomp
das
push
arpl
ss
out
out
ins
jbe
mov
out
aaa
pusha
fist
pop
jbe
fs
aam
adc
das
pop
pop
rol
xlat
addr16
call
xor
xchg
bound
sbb
scas
movs
sbb
inc
outs
sub
out
xor
stos
cmp
dec
jecxz
gs
cld
xor
ss
fdiv
xor
mov
int
(bad)
loopne
mov
inc
mov
stc
cmp
lods
cli
pop
jge
loopne
pop
in
push
jae
or
cmp
xor
ja
in
xor
push
fisub
and
add
pop
sbb
pop
cmps
ins
jmp
lea
mov
push
jp
cmp
ror
and
jo
scas
ins
mov
or
int
outs
jg
dec
add
cmps
inc
push
fild
cmp
fwait
add
inc
ficomp
pushf
loop
cmp
cld
or
aam
mov
les
into
shl
test
sub
aam
outs
aad
movs
dec
loopne
mov
retf
std
scas
mov
jle
ins
pop
or
fwait
and
jmp
mov
pusha
or
xchg
out
pusha
imul
mov
inc
jg
sub
xchg
inc
iret
xor
push
ins
xchg
or
loope
test
and
xchg
ins
or
and
je
ins
fidivr
js
cmp
movs
popf
mov
call
adc
outs
push
cmp
push
adc
add
aaa
scas
in
push
mov
mov
rcl
mov
ds
jo
test
sahf
retf
shl
cmp
adc
sub
cmp
shl
xchg
les
xchg
retf
je
xchg
ins
cmp
sub
cmp
inc
lahf
test
push
scas
out
iret
aas
sub
push
(bad)
cmp
sti
(bad)
push
arpl
cld
mov
daa
push
ss
jno
mov
push
mov
mov
ins
sahf
outs
add
mov
xor
je
jecxz
jle
xor
sbb
push
inc
sahf
pop
mov
fcom
push
dec
(bad)
scas
inc
pop
xor
sti
pop
(bad)
lahf
int
test
jb
pop
ss
pop
push
pop
shl
lahf
jp
idiv
pop
(bad)
mov
push
jecxz
xchg
repnz
inc
lds
sbb
jno
sti
sbb
mov
daa
fst
daa
leave
xchg
add
sbb
(bad)
shl
cdq
push
dec
pop
dec
in
inc
cmp
mov
xchg
and
aaa
ss
sti
push
fiadd
mov
jae
mov
cmp
cmps
dec
je
shl
fdivr
lahf
mov
push
out
clc
cmp
fmul
test
sub
and
xor
int
mulps
fidiv
stc
jb
imul
add
mov
dec
mov
rcl
pop
(bad)
cld
repz
inc
xchg
or
add
adc
loopne
mov
mov
sti
pop
imul
fdivr
fistp
push
mov
fadd
daa
call
mov
sub
ins
les
stos
std
fisttp
call
movs
sbb
sbb
shr
data16
leave
xlat
adc
out
mov
loop
outs
ja
into
xchg
cld
add
nop
fs
inc
push
mov
pop
add
xchg
test
sar
(bad)
xor
ins
sbb
cmps
mov
add
dec
cld
loope
or
dec
popf
and
mov
scas
push
cmp
xor
mov
aas
cmc
scas
push
push
mov
(bad)
mov
mov
jge
daa
scas
outs
cmp
outs
xchg
in
jle
int3
stos
pop
rcr
sahf
push
ret
lods
lods
xor
into
test
cld
pop
out
mov
test
test
repnz
movs
popf
push
sub
loop
lods
ficomp
out
jne
pop
cwde
cld
pop
lods
and
mov
xchg
ins
jp
xor
(bad)
pop
push
xor
mov
lahf
enter
imul
cmp
sub
int3
mov
ss
dec
sub
call
inc
or
retf
pop
adc
pop
cmps
lahf
dec
pop
or
mov
rcr
xchg
fsub
pop
loop
fs
mov
sbb
mov
scas
bound
push
leave
imul
inc
test
mov
(bad)
xchg
cs
sub
call
(bad)
fsubr
mov
mov
pop
shl
or
jb
pop
jnp
adc
push
sub
fbstp
xor
sub
loope
sub
mov
scas
and
mov
mov
daa
sbb
sub
mov
addr16
dec
inc
fisttp
add
outs
scas
sub
cli
bound
aad
xor
jg
pusha
dec
pop
popf
arpl
sbb
xchg
or
jmp
or
add
mov
xchg
nop
mov
or
sahf
repnz
sbb
(bad)
rcl
inc
iret
scas
push
adc
cmp
sar
cwde
sahf
je
mov
fistp
aad
cwde
std
mov
sbb
(bad)
and
mov
push
mov
mov
jle
or
cld
scas
cwde
push
xchg
cmp
(bad)
sub
or
mov
and
repz
mov
jne
mov
fsub
xor
in
(bad)
jge
push
sbb
adc
iretw
push
std
stos
out
mov
dec
xor
cwde
dec
mov
mov
push
sub
mov
xor
and
cld
icebp
cs
fild
pop
pusha
cwde
or
pusha
xor
ret
rol
movs
inc
fldcw
inc
fcmovne
rcr
mov
sbb
mov
cmc
pop
ret
xor
inc
in
add
(bad)
mov
cdq
xrelease
adc
pop
xor
ins
movs
cld
mov
imul
pop
sub
sbb
shl
dec
dec
out
push
xchg
xchg
dec
test
pop
dec
(bad)
fisttp
adc
iret
and
ret
aam
pushf
daa
fsub
mov
xlat
pop
ins
mov
bound
fist
fld
scas
popf
jo
repnz
adc
(bad)
push
lods
mov
(bad)
sbb
push
or
mov
jae
mov
or
pop
ds
(bad)
(bad)
les
jmp
xchg
sbb
lods
add
jg
xchg
sahf
aad
out
add
les
or
jo
das
mov
cmps
outs
(bad)
aaa
xchg
mov
mov
mov
mov
rcr
jle
ins
sbb
imul
jnp
je
call
fs
jne
ss
ds
pop
cmp
jmp
inc
div
pop
mov
mov
inc
cmps
shr
sub
push
dec
outs
mov
das
mov
(bad)
and
mov
repz
or
push
jg
sub
lds
push
sbb
nop
push
frstor
leave
pop
mov
and
cmp
push
inc
xor
sahf
(bad)
sub
in
enter
mov
fs
mov
mov
and
aad
mov
mov
neg
pop
sbb
das
shr
pop
or
or
mov
(bad)
adc
push
jmp
lahf
lahf
mov
popf
fmul
mov
test
pushf
push
ja
mov
mov
pop
mov
scas
xor
test
mov
leave
lea
into
test
xchg
dec
xor
fild
adc
inc
adc
out
cmp
push
jbe
sub
jno
imul
stos
jle
sub
mov
ror
lods
dec
pop
jmp
je
fisub
mov
aas
outs
imul
(bad)
ins
dec
or
sub
dec
jbe
cmp
(bad)
es
rcr
dec
jne
shl
dec
lahf
mov
mov
fs
in
loop
(bad)
dec
psrld
sub
nop
(bad)
mov
scas
data16
dec
mov
sar
fwait
in
std
fadd
sub
xchg
mov
cmc
xor
mov
xchg
mov
cmp
jg
pop
xchg
shr
fdivr
loop
add
int
pop
aad
jmp
in
test
cli
fbstp
sbb
mov
and
retf
pop
in
movs
add
dec
shl
adc
xchg
jo
sbb
int3
push
xchg
scas
pop
pop
push
imul
sbb
bound
sub
add
jge
adc
les
sbb
xor
idiv
xlat
retf
popa
outs
cmp
and
mov
out
scas
repz
(bad)
lock
jo
fisttp
and
lods
pmaddwd
lods
adc
push
test
ins
sbb
aad
add
mov
jns
jl
adc
jp
pop
es
sbb
jbe
mov
sub
cld
jl
imul
mov
out
sub
cmp
sub
push
adc
data16
and
scas
mov
jecxz
add
popa
add
mov
test
cmps
in
cmps
adc
xor
idiv
loop
mov
mov
movs
add
add
jmp
jmp
leave
pop
and
pop
mov
adc
inc
xor
test
stos
cmp
or
mov
pop
(bad)
pop
imul
in
imul
xor
lods
mov
bound
lock
mov
xor
pop
jae
mov
mov
adc
ins
jmp
inc
inc
inc
nop
pop
mul
push
push
icebp
frstor
or
push
jo
lea
outs
mov
out
push
jno
inc
out
jge
(bad)
sbb
inc
cld
jo
adc
daa
pop
iret
jno
jl
(bad)
fwait
mov
sahf
cmp
ins
fwait
rcr
push
jb
or
dec
popa
sub
cs
ins
dec
jbe
sti
aaa
inc
shr
fstp
push
shl
dec
pop
or
and
adc
(bad)
out
das
mov
xor
adc
fwait
(bad)
pop
mov
sub
push
test
out
clc
push
aam
test
sub
push
sbb
int3
mov
ret
fadd
int
add
fisubr
inc
mov
xchg
stos
lock
mov
popa
jbe
inc
lods
mov
scas
cmps
mov
fstp
mov
leave
call
dec
mov
cld
ds
mov
cs
xchg
inc
mov
sti
mov
jge
or
xor
rcr
out
dec
imul
or
out
pop
or
sub
mov
mov
ret
sub
add
pushf
cld
out
xchg
sbb
ffreep
(bad)
(bad)
out
hlt
lds
mov
push
add
daa
in
mov
sub
dec
(bad)
call
mov
daa
pop
jle
iret
jle
scas
push
in
jmp
movs
fbld
fdivr
pop
pop
push
loopne
pushf
push
mov
loop
sub
push
or
mov
add
je
scas
and
push
mov
sub
into
imul
test
ds
jp
das
pop
xor
pop
hlt
fstp
sub
mov
mov
(bad)
aad
pop
push
daa
retf
cli
push
sbb
cmps
cmp
pop
pop
inc
mov
xchg
jbe
hlt
or
dec
jb
cmps
xchg
inc
xchg
jp
mov
mov
movs
aaa
test
call
add
sub
je
mov
out
pushf
fimul
fsubr
pop
xchg
daa
fucomip
cmps
shr
mov
xchg
sbb
jecxz
es
bnd
rol
xor
dec
imul
pop
or
push
pop
fst
or
out
cmp
mov
in
rcr
lods
(bad)
jle
fwait
lock
push
mov
stos
ins
jl
jle
pop
pop
test
dec
jmp
fmul
mov
mov
jae
fs
neg
adc
jge
adc
push
popf
int
pop
push
jno
mov
xchg
loopne
rol
retf
mov
sub
cmp
adc
mov
sub
inc
xor
push
test
push
xchg
and
ret
xchg
int3
cld
mov
cld
mov
std
cli
(bad)
aam
sub
iret
ret
clc
loope
mov
rcl
shl
push
mov
adc
xchg
lods
mov
inc
sbb
lock
mov
fnstsw
repnz
and
jle
sub
jg
icebp
sbb
dec
mov
xor
rcl
dec
mov
lods
mov
pop
jnp
push
sar
inc
push
or
mov
sar
loope
scas
pop
adc
xor
sbb
adc
out
add
add
ja
js
mov
into
inc
jae
les
pusha
dec
idiv
shl
add
jns
popf
xlat
neg
pop
lods
sbb
in
js
pop
cmp
xchg
aas
sbb
test
retf
mov
(bad)
mov
in
cld
xor
sbb
hlt
pop
out
arpl
mov
cld
ret
sub
xor
nop
adc
mov
dec
mov
mov
jmp
push
imul
jo
out
shl
mov
mov
popf
adc
dec
push
enter
addr16
adc
jnp
mov
mov
std
je
sub
stc
movs
xchg
xor
ds
ror
popf
and
cmp
mov
nop
inc
enter
icebp
jge
cdq
push
ins
jecxz
or
push
xchg
cdq
out
dec
shr
or
pop
scas
outs
(bad)
lea
push
sub
rcr
movs
test
pop
mov
iret
jo
sub
add
jo
jge
push
aaa
jmp
jge
shl
stos
pushf
(bad)
dec
(bad)
mov
jb
das
cld
inc
pop
xor
cdq
push
pop
cmp
(bad)
cmp
pop
dec
pop
dec
or
fisub
ds
nop
clc
(bad)
fwait
xchg
and
lods
aad
cmps
xor
out
sbb
cmps
dec
jo
cmp
fnsave
shr
push
or
mov
inc
ja
stos
js
into
push
push
and
xchg
int3
inc
inc
push
cli
out
popf
fld
jmp
ret
daa
loopne
call
ficomp
addr16
cs
cld
dec
lea
sub
int
push
sahf
ja
dec
xchg
cmp
inc
push
fild
into
pushf
inc
mov
sub
mov
pop
cmp
mov
jne
outs
(bad)
movs
sbb
retf
dec
mov
mov
dec
dec
retf
mov
scas
outs
push
in
mov
cmp
cld
imul
mov
mov
mov
in
sub
fdiv
pop
call
mov
lods
xor
ins
bound
adc
es
fs
mov
ret
adc
push
fld
dec
pop
mov
cmp
inc
sbb
cld
ja
je
rcr
mov
mov
je
adc
pop
cmp
jno
push
dec
shr
fst
test
movs
int3
(bad)
lock
retf
xchg
adc
scas
sbb
aas
fwait
int
js
pop
cmp
add
std
push
mov
push
adc
icebp
popf
jge
sbb
push
mov
jnp
and
jbe
adc
ror
mov
pop
dec
aad
mov
xchg
pop
rcl
and
xchg
scas
adc
adc
inc
stos
dec
or
mov
test
push
cwde
push
gs
shl
pop
imul
repz
not
shr
int3
in
lods
cmps
mov
lea
ret
or
mov
lahf
mov
(bad)
aaa
clc
pop
mov
fnstsw
cmp
xchg
outs
adc
cmc
ins
add
sub
orps
xor
in
mov
xchg
pop
fcmovne
ja
int
arpl
pop
xchg
push
and
loop
sbb
or
pushf
clc
fidiv
(bad)
icebp
jmp
mov
cmp
inc
lods
or
call
lahf
push
ins
jno
mov
mov
mov
pop
sub
pushf
les
adc
(bad)
xor
mov
repz
add
dec
or
mov
jo
stos
push
repz
xchg
xor
jge
shl
test
xlat
arpl
xchg
lock
retf
push
outs
test
push
cmps
push
inc
mov
push
jle
loop
mov
(bad)
mov
cmp
cmp
fist
and
xor
cmp
test
fld
pop
hlt
sub
xor
or
arpl
jno
int3
fcmovnb
and
xchg
sbb
retf
dec
(bad)
push
in
cwde
push
imul
pop
retf
cmps
xlat
mov
std
cmc
mov
pop
ret
lahf
xchg
idiv
ffree
das
xor
mov
cmp
or
cmp
rol
adc
xor
retf
out
enter
xor
xor
xchg
or
sub
iret
fs
push
jbe
push
mov
nop
repz
aad
adc
nop
jl
push
cmp
sub
clc
shr
cmp
mov
push
sub
xor
adc
(bad)
retf
ins
jl
jl
push
sub
call
pushf
jmp
fild
dec
cdq
adc
mov
adc
dec
sub
fwait
call
xchg
bound
sub
mov
mov
sahf
in
inc
inc
mov
adc
stos
jg
cwde
mov
jl
mov
inc
fcmovbe
pop
xchg
push
push
(bad)
outs
mov
pop
into
jecxz
xchg
sahf
(bad)
mov
daa
push
stos
cmps
ins
jb
xchg
and
sbb
jge
ins
mov
push
jmp
push
(bad)
pop
imul
mov
jns
sti
xchg
cmp
push
call
lods
pushf
pushw
adc
jne
jns
das
fcom
jno
or
outs
pop
cmps
ror
sub
scas
cmp
lods
push
aas
jecxz
retf
retf
mov
ds
sub
jg
stos
cld
and
nop
jb
mov
leave
sub
sub
les
gs
mov
lahf
cmps
xchg
std
mov
sub
jne
ins
retf
mov
sbb
fs
or
aas
(bad)
lods
push
xchg
jae
and
outs
sbb
pushf
out
jg
sbb
leave
rol
pop
imul
sub
out
pop
ins
(bad)
cld
lock
add
and
sbb
and
push
fimul
(bad)
icebp
fcom
outs
xchg
popf
mov
out
out
ret
cmc
scas
adc
pushf
cmps
mov
sub
sbb
sbb
imul
cmp
fbld
jmp
mov
in
pop
ret
lods
xor
mov
add
repz
cmp
mov
sub
push
mov
rcr
ds
das
repnz
adc
mov
nop
adc
mov
in
test
in
jl
sbb
pop
ds
lahf
je
jb
pop
push
scas
mov
es
pop
mov
push
push
jg
pushf
xchg
jge
xchg
inc
push
cmp
cmps
inc
push
hlt
popa
fs
ins
out
sti
mov
xchg
fsub
pop
cmps
fistp
adc
pop
jle
ss
mov
jmp
sub
adc
push
mov
xor
sbb
repz
mov
push
sbb
sub
ins
fdivr
and
mov
imul
xor
lds
cmp
and
test
sub
dec
adc
and
frstor
out
in
mov
fistp
xchg
lds
daa
ja
sub
adc
imul
jns
xor
xor
cwde
pop
jbe
adc
gs
inc
or
mov
jl
fbstp
rcl
es
adc
adc
sub
sbb
fldcw
arpl
dec
enter
sub
mov
cmps
punpckhdq
gs
outs
cmp
hlt
hlt
test
fwait
push
xchg
pop
adc
sbb
je
mov
call
add
test
pushf
inc
std
(bad)
and
xchg
test
(bad)
bound
ins
inc
dec
mov
sbb
sub
popa
cdq
pop
stos
cmp
nop
stc
cdq
sbb
sub
push
jle
bound
outs
mov
push
pop
test
shr
jg
(bad)
adc
adc
scas
outs
in
xchg
cld
adc
mov
outs
mov
call
cmps
xchg
adc
cmp
cmp
xchg
xchg
ret
push
aam
push
add
and
dec
out
es
lods
adc
mov
sar
shl
aaa
cmps
mov
pop
dec
shl
loop
jmp
xor
inc
ret
sub
push
fs
cld
and
sub
dec
mov
fdiv
mov
cmc
ins
out
aad
ss
or
mov
imul
and
out
or
or
mov
mov
jmp
push
add
cs
pop
into
imul
mov
cmc
ins
mov
xlat
test
stos
mov
int
shl
stos
jmp
out
scas
or
lahf
popf
xchg
mov
and
sub
ins
fcomp
gs
xor
mov
mov
fstp
out
dec
(bad)
aas
mov
pop
lahf
mov
dec
out
push
inc
push
pop
(bad)
pop
ds
and
mov
add
call
mov
sbb
vpmacswd
jmp
pop
sub
mov
(bad)
xor
pop
push
pop
push
loope
daa
jecxz
or
xlat
push
pusha
out
jns
je
aam
shl
xor
add
xor
sbb
xor
dec
xor
ss
push
lea
push
mov
mov
lods
pop
(bad)
jle
xchg
push
cwde
(bad)
cmp
fnstsw
sbb
fcmovne
rcl
in
test
push
out
idiv
cmc
mov
xchg
dec
pusha
inc
jo
cmp
out
jnp
pop
addr16
test
in
mov
stos
fimul
mov
sbb
jg
sbb
std
mov
push
cmp
sbb
cdq
xor
jnp
ins
mov
jae
pop
inc
fwait
sbb
out
out
pop
addr16
lods
das
cwde
xchg
mov
test
rcr
sbb
fs
mov
mov
or
out
and
pusha
cmp
jg
or
adc
dec
popf
(bad)
shl
fwait
pop
or
cwde
xchg
xor
or
fiadd
enter
and
xchg
xchg
pop
xor
mov
jge
ss
mov
cdq
into
fxch
jle
hlt
push
sbb
test
and
in
cmps
jo
fdiv
and
(bad)
adc
icebp
dec
rol
cld
fdiv
dec
aas
repnz
xor
jp
mov
mov
arpl
lods
mov
stos
stc
cmc
cmps
shl
inc
xor
lea
sahf
sbb
rcl
push
cmp
das
ds
cmp
in
in
out
inc
arpl
call
mov
adc
push
(bad)
scas
sbb
ss
int3
push
jmp
test
adc
xor
mov
xchg
push
xchg
mov
xchg
push
out
nop
out
fs
scas
arpl
jno
or
push
add
fcom
aas
sub
popa
xlat
lock
fs
outs
xchg
cmc
cmps
mov
adc
cmp
fwait
(bad)
dec
std
inc
das
mov
mov
out
cdq
in
(bad)
jge
pop
push
ins
retf
movs
call
ret
mov
mov
in
mov
fistp
mov
imul
js
cs
retf
push
das
push
nop
sbb
mov
mov
and
mov
cmp
lahf
adc
fisubr
scas
bound
pop
sbb
xor
jne
retf
xlat
lods
sbb
and
sub
mov
and
popf
inc
mov
scas
jmp
sbb
popf
dec
lahf
adc
add
hlt
mov
fisubr
inc
push
pop
mov
mov
test
inc
and
or
retf
cmps
xlat
cs
cli
(bad)
xchg
(bad)
fwait
xor
add
dec
and
neg
cmps
dec
and
and
xchg
jnp
shl
sub
scas
add
idiv
xchg
(bad)
pop
add
aam
jnp
popa
pop
mov
mov
push
push
mov
adc
ss
fsubr
cmp
stos
call
popw
jle
sahf
pop
cmc
or
cmp
les
out
cmp
fs
ret
jmp
jge
lea
clc
call
xor
mov
fwait
stc
push
pushf
sar
sahf
cmps
shr
push
gs
adc
xor
leave
(bad)
adc
lock
pop
pop
or
mov
ss
push
jae
enter
or
int3
and
in
dec
and
outs
or
(bad)
push
imul
ins
scas
xchg
in
push
jmp
add
or
adc
adc
pop
mov
pop
scas
sbb
and
xchg
call
movs
pop
jmp
jmp
arpl
mov
shl
bound
push
and
xchg
pop
sbb
jb
call
arpl
jne
inc
stc
and
dec
ss
mov
push
sub
adc
jno
fbstp
pop
mov
movs
pusha
xchg
sub
test
sub
push
out
jno
lock
std
mov
add
addr16
dec
jl
cmc
and
mov
cwd
ret
in
cmp
mov
sahf
outs
push
fisttp
push
in
in
lods
jmp
in
pop
xchg
fcom
div
xchg
jmp
addr16
jl
cmps
push
lods
mov
push
jp
mov
push
mov
movs
push
xor
repz
mov
sub
sub
push
mov
mov
or
xchg
xor
push
xor
dec
lahf
inc
and
push
xor
jge
clc
fld
mov
jle
jbe
xchg
xchg
push
cmp
xchg
outs
adc
data16
and
mov
push
cld
cmps
add
mov
rcr
mov
sub
jg
retf
scas
dec
stos
adc
adc
jne
or
xchg
pushf
loop
xor
mov
mov
test
jl
xor
xchg
and
adc
add
sahf
xchg
repnz
std
jnp
pop
ret
(bad)
repnz
push
cdq
adc
adc
pop
es
aam
rcl
sbb
clc
imul
retf
mov
mov
xchg
test
sub
ds
cmp
push
imul
push
mov
test
pop
jge
pushf
clc
or
daa
xchg
sub
sti
inc
call
jmp
inc
mov
fnstenv
mov
popf
pop
movs
nop
(bad)
xor
aam
dec
out
ret
jp
lods
cmp
jo
pusha
cmp
(bad)
arpl
jmp
dec
push
xchg
and
jne
fdivr
ret
inc
jecxz
fmulp
mov
and
test
jecxz
lea
sbb
int3
mov
add
push
enter
jge
dec
test
mov
add
adc
sti
rcr
jp
data16
sbb
push
pusha
(bad)
pop
adc
sub
jg
xchg
shr
jmp
popa
jnp
push
call
or
out
in
loope
bound
sub
adc
ja
cmp
xchg
mov
xchg
push
pushf
jl
mov
aad
mov
movs
add
sub
mov
repz
xchg
out
into
movs
in
test
rcr
shl
mov
popf
push
xchg
inc
mov
cdq
jne
popf
mov
mov
gs
jns
inc
push
loop
cwde
test
xor
or
nop
sbb
mov
nop
pop
neg
mov
rcl
je
cmps
add
fwait
dec
sahf
xchg
mov
mov
mov
gs
mov
jb
lea
xchg
pushf
stos
xchg
dec
xchg
lock
cmp
inc
inc
jl
pop
fdivr
call
jp
mov
jmp
jle
add
mov
and
push
imul
retf
push
jg
ror
call
stos
xchg
(bad)
pop
test
jg
js
fnstsw
popf
sbb
jne
cmp
sbb
in
test
jns
add
adc
cdq
aad
mov
cmc
adc
pop
scas
retf
out
cmp
stos
push
jo
sbb
sahf
stos
xchg
add
inc
in
and
fwait
arpl
shr
sub
and
fwait
mov
and
lods
(bad)
cmps
stos
xchg
inc
imul
jmp
or
xor
mov
cmp
jp
jnp
popf
adc
je
pop
pop
sbb
sbb
mov
pop
jmp
sbb
jl
test
add
popf
in
jo
cmp
push
inc
enter
ror
icebp
mov
dec
and
jnp
arpl
rcl
inc
jae
mov
push
lods
jmp
sbb
mov
and
jmp
movs
(bad)
iret
test
push
stc
(bad)
fs
and
or
popa
bound
jns
pop
adc
jp
ins
sbb
lea
fldcw
cld
dec
push
mov
iret
je
lods
cdq
mov
(bad)
call
nop
aad
mov
mov
cmp
push
stos
jb
ins
jns
arpl
jno
push
js
or
test
daa
jae
pushf
sbb
push
es
sub
das
sbb
ret
mov
pusha
call
mov
push
push
shl
movs
adc
ror
rol
xor
call
xchg
ds
or
push
jb
fidiv
inc
push
cdq
add
not
adc
aad
mov
mov
addr16
xchg
push
in
popf
pusha
into
sub
aaa
out
xchg
loope
mov
mov
sbb
test
cli
neg
jle
xlat
test
mov
jmp
aaa
stos
sub
mov
sbb
es
mov
mov
fsub
or
mov
imul
ror
(bad)
sub
xchg
pusha
mov
mov
daa
ret
mov
mov
mov
inc
xchg
push
add
nop
scas
pop
pop
popf
(bad)
ud2
xchg
sbb
test
ins
out
sub
bound
into
push
arpl
and
movs
add
mov
aad
sbb
cld
test
int3
(bad)
ja
pushf
push
outs
add
xlat
icebp
das
mov
adc
call
pop
popa
push
bound
shr
dec
sbb
xor
and
inc
ret
mov
sar
pop
aaa
mov
jmp
mov
dec
mov
fcom
sbb
and
mov
fs
pop
mov
add
sbb
lods
jae
scas
pop
das
pop
lea
adc
add
or
and
add
xchg
fwait
mov
stos
push
mov
dec
mov
ins
pop
mov
mov
shl
and
icebp
adc
pop
iret
sub
data16
adc
mov
push
in
pop
rcr
in
mov
and
test
jg
xor
and
lahf
neg
jecxz
mov
(bad)
inc
mov
inc
mov
aaa
shl
int3
jge
movs
add
neg
test
xchg
mov
popa
xor
sub
ja
outs
mov
adc
inc
jg
ret
mov
xor
into
fld
add
xor
cmc
xchg
pop
mov
xchg
pop
ins
imul
repz
lock
xor
inc
jmp
mov
add
jle
add
int3
loop
xor
cvttps2pi
xchg
nop
add
mov
mov
mov
in
int
clc
cmps
sbb
jnp
scas
rcr
xchg
mov
add
sbb
js
dec
inc
cdq
les
(bad)
cmp
sub
dec
test
mov
arpl
cmp
xlat
mov
or
lahf
mov
aam
outs
hlt
stc
and
ret
mov
in
cmp
nop
into
xchg
xchg
pop
cmp
adc
dec
cmp
or
dec
outs
gs
or
adc
dec
int
test
mov
sbb
mov
inc
cld
jle
push
inc
shr
and
sahf
adc
nop
inc
mov
jge
mov
cmp
cmp
stos
cmc
loopne
fcomp
pop
cmps
mov
data16
or
and
aaa
mov
xor
outs
setge
inc
je
adc
out
js
mov
dec
outs
lahf
jmp
js
paddd
xchg
imul
push
push
outs
cmp
imul
test
cmps
shr
cmp
inc
xchg
jnp
mov
neg
mov
data16
mov
push
mov
cmp
mov
mov
mov
pop
(bad)
adc
pop
int
push
fcmovbe
cld
outs
fisub
jmp
cmc
pushf
pop
movs
int
jb
fwait
inc
push
test
rcr
or
push
es
pop
test
stos
dec
adc
sub
mov
cli
out
loope
or
call
in
arpl
lods
jbe
and
cmp
push
fxch
imul
push
rol
inc
push
icebp
push
pop
mov
cmps
and
test
popa
dec
popf
and
jmp
rcl
pushf
popf
mov
dec
retf
repnz
out
mov
fucomp
js
jecxz
pop
loope
pop
daa
pop
jecxz
and
mov
inc
jnp
or
jae
push
or
jle
mov
and
adc
jbe
(bad)
repz
sbb
push
pushf
test
call
scas
pop
clc
rcl
outs
stos
mov
cdq
sub
cdq
sbb
cmp
push
hlt
push
(bad)
ret
aad
sub
push
outs
cmc
mov
mov
icebp
and
mov
scas
adc
aam
movs
loope
jae
cwde
dec
xor
popf
and
stos
scas
aad
mov
gs
ins
mov
add
pop
out
fiadd
mov
or
mov
pop
push
or
test
nop
push
jne
cmp
cmp
in
push
jmp
sar
stos
xor
sub
retf
int
sbb
add
dec
pop
ins
cmps
hlt
shl
sub
push
cmc
mov
sub
push
dec
neg
loopne
fdivr
scas
in
inc
gs
std
sub
std
jle
xchg
xchg
sbb
lahf
push
xor
push
cmc
sub
push
pop
dec
xor
or
dec
sub
jmp
sahf
arpl
imul
popf
repnz
in
aad
mov
(bad)
xlat
(bad)
imul
sub
inc
les
adc
rcr
cmp
into
fwait
adc
out
jmp
mov
inc
jmp
cmp
xchg
mov
or
ja
mov
pop
adc
scas
xchg
pop
add
pusha
lahf
cmp
shl
inc
mov
repz
jne
lods
xchg
push
loop
gs
(bad)
pop
sub
jo
addr16
xchg
pop
jge
ss
shr
and
and
add
pop
adc
std
rcr
xchg
aam
add
mov
aad
jmp
pop
icebp
sbb
adc
xor
setg
test
aaa
repnz
jmp
(bad)
ds
lods
add
std
gs
cld
xor
add
push
mov
sbb
dec
das
mov
fnstenv
daa
mov
mov
mov
sub
fwait
sbb
jl
fldenv
iret
sbb
js
sub
pop
(bad)
js
push
dec
mov
aam
(bad)
mov
cmps
inc
(bad)
inc
(bad)
fld
ja
mov
shr
jb
adc
daa
sub
out
scas
out
dec
mov
jl
mov
adc
mov
inc
add
(bad)
dec
retf
sahf
jnp
push
or
int
dec
mov
push
or
jl
mov
jae
jle
pop
retf
add
inc
(bad)
cmp
sbb
cmc
idiv
xchg
imul
add
and
pushf
(bad)
jecxz
aas
add
jle
(bad)
push
enter
ja
sahf
fsubr
sbb
rcr
pushf
pop
add
dec
cmc
cmp
jnp
ds
enter
pusha
push
adc
rcr
cmp
add
or
test
mov
retf
xchg
mov
pop
es
sub
mov
pop
out
in
xor
sahf
sti
mov
dec
and
sbb
nop
out
out
cmp
mov
imul
or
add
jo
push
and
outs
sbb
mov
mov
sar
test
out
adc
fsubr
dec
cmp
les
or
sbb
rcr
std
pushf
xor
imul
ins
lock
jb
loope
pop
ret
jl
mov
sbb
fwait
cdq
jmp
add
add
cmc
imul
jmp
mov
inc
mov
not
(bad)
or
call
adc
imul
retf
jl
mov
mov
aaa
jl
push
xlat
mov
pop
dec
hlt
jecxz
pop
retf
and
sub
dec
out
push
jmp
daa
add
jp
push
adc
cmp
cmp
ret
cld
xchg
mov
mov
dec
xor
js
adc
cdq
dec
cmps
cs
jnp
jb
sti
stc
out
pop
cs
loop
mov
cld
xchg
pop
rcl
bswap
call
stos
mov
popa
and
cmp
lds
adc
dec
addr16
sbb
jne
jl
push
std
mov
mov
cs
cwde
push
adc
dec
add
imul
pop
icebp
add
jns
repnz
and
movs
(bad)
in
fs
push
add
pop
aam
jne
sbb
xchg
xchg
movs
push
mov
int
int3
sub
nop
inc
jge
jl
sbb
sub
loopne
retf
cdq
stos
cmp
pushf
mov
xchg
jl
mov
add
call
xchg
lock
pop
jnp
inc
sbb
lea
movs
ins
mov
or
mov
xchg
or
and
jns
ins
outs
cmps
mov
inc
aad
and
or
loopne
out
mov
daa
pop
xor
xchg
repnz
stos
mov
mov
cmp
cmp
push
mov
mov
xor
or
test
cwde
inc
bswap
dec
jb
mov
push
inc
push
das
int3
(bad)
lahf
(bad)
mov
lock
pop
shl
push
mov
call
dec
cwde
jmp
pop
mov
push
fbld
add
inc
jns
adc
jl
adc
cli
or
ss
push
mov
leave
mov
inc
xchg
pop
add
ss
xchg
popa
push
gs
jbe
push
repnz
pop
pop
mov
mov
adc
in
mov
pop
push
push
pop
sub
scas
(bad)
jmp
das
lds
dec
neg
icebp
pop
shl
adc
adc
inc
sar
mov
adc
fwait
out
pop
mov
xor
shr
cmp
mov
std
mov
jle
push
imul
test
fcmovne
or
fld
mov
pop
adc
and
pop
into
push
cwde
cdq
adc
aam
cmp
dec
es
push
jnp
fst
lea
push
ret
lds
cld
fimul
cdq
jle
(bad)
lock
pop
push
xchg
xchg
pop
scas
xchg
sar
xchg
call
outs
stc
sbb
mov
and
je
push
xor
popf
int
jmp
cwde
cmc
sbb
out
arpl
dec
pusha
inc
push
or
jmp
(bad)
pop
aas
sbb
jmp
mov
int
jb
enter
xor
and
pop
xchg
cs
push
xor
ja
inc
stc
scas
fucomp
stos
rol
inc
lahf
int3
cld
les
xlat
xor
xor
dec
ret
add
stos
inc
inc
jns
aad
cs
dec
arpl
out
mov
mov
fxch
dec
dec
jo
int
stos
sub
mov
ret
mov
aam
jle
pusha
frstor
imul
jns
sub
jl
mov
jnp
cmp
dec
movs
sbb
outs
ret
hlt
cdq
adc
sub
imul
fwait
aaa
ins
inc
sbb
mov
sti
ds
pop
cmps
sti
sub
mov
mov
in
mov
loop
mov
fsubr
(bad)
or
inc
repnz
std
xchg
mov
lods
pushf
pushf
fidivr
mov
dec
jle
inc
mov
and
movs
fmul
cmp
push
call
fild
jle
cwde
sbb
xor
fidiv
fcom
scas
out
sub
ror
dec
jo
icebp
adc
jne
dec
mov
xlat
sub
and
jns
and
clc
(bad)
adc
stos
les
rol
mov
fnstsw
ficom
sti
mov
call
jle
sub
push
jae
sub
(bad)
xchg
mov
add
fild
jae
mov
mov
push
sbb
inc
xor
mov
repnz
test
sub
aam
mov
fnstsw
stos
int3
(bad)
sar
jb
push
jb
xchg
add
jecxz
lods
add
sahf
mov
repz
xlat
xchg
(bad)
mov
in
dec
or
mov
xor
inc
outs
mov
mov
mov
push
adc
sub
inc
repz
ror
fidiv
pop
cmp
mov
mov
mov
mov
cmp
int
xor
push
adc
sbb
aad
fnstcw
je
in
pop
mov
repz
cmps
pop
mov
sbb
mov
jbe
adc
(bad)
xor
mov
lock
dec
gs
shr
push
out
ins
inc
sub
adc
cmp
inc
inc
jge
leave
ins
test
jne
fmul
repnz
int3
fist
scas
outs
mov
outs
das
xor
ror
push
je
push
mov
mov
cmp
sbb
enter
test
mov
mov
cmp
fcom
push
dec
fs
mov
stos
pushf
mov
sub
pop
jge
push
call
cmc
jmp
pop
xchg
adc
fisubr
ret
mov
or
sub
xchg
and
(bad)
cmp
cmp
jl
push
add
ror
or
leave
mov
push
repz
inc
mov
sbb
aas
mov
daa
cmps
fcomp
jp
lahf
or
arpl
out
dec
xor
lods
repz
xchg
push
xchg
dec
bound
jecxz
push
test
test
int3
push
ins
rol
sub
xchg
mov
aas
xor
mov
xchg
lahf
(bad)
push
sub
jge
xchg
jne
dec
retf
jns
or
adc
sbb
add
push
inc
sbb
into
test
and
jmp
ds
js
test
jl
stos
ret
sub
out
stc
out
dec
cmc
fstp
cmp
sub
dec
adc
test
ds
push
push
dec
pushf
cmp
fsubr
cwde
or
ret
adc
mov
ret
add
dec
dec
sub
cwde
int3
cmp
cmp
jae
ss
sbb
(bad)
call
ret
mov
dec
test
push
not
ins
dec
sbb
das
jge
arpl
shr
call
push
adc
jl
test
jl
pop
(bad)
mov
aaa
mov
jmp
and
mov
dec
pop
sub
(bad)
shl
jmp
cld
xchg
inc
dec
mov
ror
movs
cs
and
retf
dec
fld
pop
in
mov
loop
or
jg
xor
addr16
or
lods
pushf
add
sub
nop
leave
cmps
or
outs
mov
sti
jo
in
adc
aas
sub
mov
adc
lods
jge
mov
aam
repnz
mov
in
jbe
retf
cmps
in
adc
cwde
aam
and
jb
iret
arpl
jl
sbb
dec
cwde
int3
and
in
popf
inc
vpmaskmovq
mov
int
sub
xor
add
shl
cmp
mov
mov
enter
out
test
sti
jns
jmp
sti
cwde
inc
jp
stos
add
inc
outs
(bad)
int3
mov
retf
and
jle
movs
push
adc
xor
movs
push
fdiv
imul
and
ins
loop
(bad)
movs
(bad)
pop
and
in
(bad)
ja
shr
xchg
cmp
xor
call
call
sub
popf
dec
addr16
add
inc
repnz
cmp
leave
cmp
push
mov
jns
sub
sub
jmp
pushf
push
dec
jb
inc
lods
sahf
mov
and
or
inc
xor
cld
inc
enter
cmps
and
fisub
or
lahf
and
cmps
std
loope
mov
xor
sbb
sub
mov
add
and
shr
rcl
xchg
dec
shr
loope
push
add
outs
int
dec
pusha
cmp
mov
dec
test
ret
ds
shl
xchg
(bad)
dec
sbb
cmp
or
mov
push
and
test
std
hlt
loop
adc
dec
mov
lock
pop
dec
jle
xchg
dec
fwait
sbb
dec
int
dec
inc
sbb
mov
ds
mov
dec
sbb
cmp
in
fcomp
out
mov
out
and
test
std
aam
xchg
adc
dec
nop
lods
sar
pop
stos
jle
xchg
lods
fwait
cld
clc
scas
int
dec
mov
retf
mov
ds
std
and
sbb
cmp
mov
push
mov
add
and
xor
jbe
xor
sub
push
cs
mov
xchg
sbb
clc
test
aam
xchg
xchg
xchg
and
inc
ds
xchg
pop
dec
sbb
fcom
add
and
adc
xor
or
dec
lods
push
mov
pop
loopne
mov
clc
in
mov
out
mov
xchg
add
and
jecxz
xchg
cmp
mov
(bad)
sub
jns
push
retf
pop
push
mov
or
retf
adc
std
ja
and
icebp
es
cmp
or
push
sbb
sbb
xlat
scas
inc
jbe
push
pop
sub
js
arpl
pop
psubusb
retf
in
pop
cmp
sbb
adc
fucomi
out
push
into
aam
pop
imul
les
ret
or
imul
sahf
arpl
jne
push
pop
mov
push
ins
push
push
xlat
icebp
sti
sbb
gs
into
jo
pop
in
fdiv
in
adc
cmp
aad
rol
sar
jecxz
xchg
mov
popa
fidiv
sub
pusha
fimul
add
(bad)
jo
inc
(bad)
ins
das
dec
xchg
pop
dec
sti
inc
cdq
pop
push
pusha
add
fcomip
xchg
out
jmp
std
stos
(bad)
loop
mov
(bad)
cdq
xchg
movs
push
jmp
aam
pop
das
cmp
jmp
(bad)
mov
or
pop
into
adc
push
mov
jecxz
adc
adc
xor
xchg
mov
push
call
push
lahf
pop
mov
fucomi
mov
jbe
aaa
mov
jo
or
xor
mov
dec
scas
mov
pop
popf
or
icebp
imul
retf
dec
adc
push
adc
push
test
cmps
imul
push
pop
jb
sbb
repnz
aas
gs
push
or
pop
mov
ja
pop
arpl
adc
fdivr
leave
mov
mov
sub
pop
loopne
(bad)
test
cmp
mov
(bad)
mov
adc
pop
xchg
pop
fld
adc
pop
in
push
fld
fisub
(bad)
jmp
ds
xchg
out
dec
mov
sahf
fwait
lea
sbb
pop
fild
or
mov
mov
cmp
sbb
scas
in
add
rcr
dec
jmp
push
lea
dec
jmp
dec
test
mov
xor
sar
jge
pop
jmp
adc
xchg
gs
mov
sbb
xor
mov
sar
sub
test
int
cwde
in
or
cmc
mov
int
inc
add
sbb
mov
aas
and
int
inc
xor
cmp
call
mov
pop
mov
loope
jmp
clc
pop
jbe
dec
shl
sbb
aaa
mov
xchg
push
mov
and
adc
bound
push
or
call
sub
jbe
aam
int
lahf
dec
or
test
lock
mov
pop
pop
sub
xchg
mov
imul
sar
cmp
dec
mov
shl
bswap
jl
mov
je
mov
mov
outs
gs
es
or
mov
ret
or
sar
and
stos
sub
psadbw
addr16
adc
adc
call
xlat
jecxz
and
add
pop
jo
push
test
fwait
pop
cdq
les
sub
pop
std
mov
fimul
push
sbb
adc
dec
out
clc
movaps
jg
pop
mov
cli
imul
sub
push
jecxz
mov
inc
sti
enter
sub
cld
jb
pop
jle
(bad)
iret
add
sti
mov
aaa
cld
int3
mov
ins
arpl
cdq
dec
out
les
test
shr
pop
loop
xchg
enter
je
ja
inc
pop
push
scas
mov
daa
(bad)
cmp
(bad)
push
sub
sbb
cmps
sbb
gs
mov
xchg
sbb
push
xor
ret
xor
pop
stos
mov
rcl
int
cmp
loop
pop
add
jecxz
mov
adc
mov
pop
loop
adc
loope
stos
dec
cwde
dec
or
push
adc
jmp
dec
mov
cmp
scas
fidiv
(bad)
ja
cmp
out
jnp
ins
mov
cmp
sti
imul
(bad)
repz
adc
sbb
push
mov
push
scas
inc
nop
imul
adc
jnp
dec
dec
xchg
push
push
push
sti
(bad)
fs
sbb
cli
rol
fcomp
movs
mov
cld
sti
xor
shr
jg
imul
jp
sbb
(bad)
aam
ja
cs
xchg
std
jae
xor
pop
les
jecxz
aas
push
sahf
and
nop
mov
test
or
dec
(bad)
fwait
data16
fisttp
ins
cmp
and
push
push
cld
push
mov
or
iret
sub
pop
pushf
sub
or
retf
mov
push
push
xchg
sub
out
pop
fwait
xchg
xor
inc
mov
dec
aaa
inc
adc
out
scas
psubw
hlt
xchg
cld
mul
mov
mov
cli
jae
(bad)
xor
retf
dec
and
cdq
xchg
cmp
dec
scas
or
mov
in
pop
adc
push
pop
stos
gs
je
and
mov
xor
jg
js
nop
les
mul
sti
(bad)
cs
sub
fsubr
inc
lods
or
jle
pop
xchg
sahf
fidivr
or
sbb
add
lock
idiv
add
inc
pop
inc
cdq
stos
xchg
movs
sub
ins
into
sub
mov
lods
sbb
adc
mov
idiv
cmp
jmp
movs
dec
xchg
rcr
ss
xchg
stos
push
xchg
sub
jmp
jae
pop
sub
jnp
cmp
stos
add
jg
les
sub
popf
daa
pop
jnp
imul
pop
add
daa
outs
bound
pop
mov
popa
and
sub
adc
xor
ss
int3
scas
fisubr
xchg
pusha
xor
sbb
mov
je
sub
jo
sub
adc
imul
jle
cmp
daa
jle
mov
dec
sbb
js
mov
push
loopne
jg
dec
adc
aaa
xchg
cmps
mov
and
js
mov
xchg
sbb
mov
mov
mov
push
push
or
lock
nop
leave
mov
les
outs
(bad)
out
adc
mov
test
jmp
dec
mov
std
add
lock
das
add
out
repz
mov
cmp
into
movs
push
movzx
ss
mov
or
cmps
push
lock
outs
pop
test
imul
ja
jmp
add
sbb
ror
cdq
mov
sar
xchg
ficomp
pushf
enter
int3
lods
sbb
push
mov
inc
mov
mov
pusha
push
adc
mov
je
jl
mov
adc
sub
and
dec
jl
xor
ja
push
add
mov
xor
outs
mov
xchg
adc
mov
mov
mov
jns
dec
or
repnz
inc
xchg
bsr
out
and
cmps
pop
dec
dec
mov
mov
pop
cmp
mov
das
and
out
mov
jl
jge
(bad)
jecxz
test
mov
inc
dec
mov
and
mov
rcl
int
test
sbb
out
and
std
retf
adc
xor
mov
scas
aas
into
cmp
xchg
dec
sbb
push
xchg
(bad)
push
scas
fstp
sbb
push
adc
xchg
ins
mul
inc
add
in
out
ret
popa
or
xchg
lahf
mov
test
rcl
dec
push
mov
retf
das
lock
mov
stos
sub
out
sbb
loop
cwde
sub
or
mov
rcr
xlat
inc
loopne
stos
sar
cld
mov
or
mov
mov
xchg
mov
(bad)
dec
loope
stc
imul
fsubr
ins
or
fmul
push
out
push
or
inc
xchg
fidivr
mov
test
inc
and
test
ret
out
jns
ja
movs
fcom
lods
call
nop
cmp
mov
movs
cmp
dec
call
fs
xor
cmp
bound
ret
mov
and
xchg
aaa
or
mov
test
inc
lock
dec
fiadd
fdivr
fsub
int3
arpl
adc
jbe
pusha
xor
(bad)
sar
push
std
neg
in
mov
mov
out
jecxz
(bad)
cmp
jl
stos
into
dec
sar
and
cld
popa
or
xchg
sahf
sub
push
scas
sbb
cmp
mov
add
imul
mov
rcl
outs
dec
xchg
imul
pop
xchg
push
ds
div
fcmovnu
mov
call
or
xor
fiadd
ins
adc
pop
retf
dec
cmp
push
outs
mov
mov
nop
pop
jo
enter
out
fisub
retf
in
inc
fcom
push
(bad)
sbb
fisub
push
jnp
call
test
adc
fild
mov
into
fistp
loop
and
cli
outs
sub
inc
xor
lea
(bad)
je
aas
or
cmps
adc
repz
jbe
jl
outs
and
and
push
scas
mov
daa
call
pushf
fistp
mov
mov
int3
sub
dec
inc
in
or
jp
les
outs
repz
mov
lea
dec
jae
dec
ds
(bad)
ins
pop
mov
les
dec
lock
daa
mov
movs
sahf
pop
std
lods
dec
cmp
pop
jmp
iret
stos
fwait
aaa
xlat
jmp
das
fcom
cmp
pop
nop
nop
stos
mov
retf
mov
int
jmp
fwait
or
js
es
cdq
repz
imul
cmp
xchg
xchg
push
mov
xchg
(bad)
pop
cmp
call
test
sbb
push
clc
fsubr
imul
add
mov
pop
push
mov
mov
ins
mov
data16
(bad)
xchg
jecxz
push
lahf
scas
in
pop
arpl
shl
lods
ror
pop
dec
pushf
cmp
add
sbb
fild
out
push
add
cmps
bound
out
pop
cmp
loope
push
jl
adc
or
jecxz
mov
fstp
mov
dec
sbb
or
dec
imul
sbb
js
aad
push
fisub
ror
sar
arpl
(bad)
test
pop
(bad)
jle
xchg
sbb
int
adc
jns
cwde
cwde
xchg
(bad)
xchg
xchg
retf
addr16
xchg
dec
sbb
call
jge
(bad)
sbb
push
sub
or
adc
popf
jmp
push
mov
je
outs
out
popf
imul
nop
popf
add
add
into
fistp
mov
ins
pop
mov
mov
mov
lods
dec
cli
mov
jl
cmp
push
fisub
sbb
xchg
sub
jecxz
sub
or
jmp
and
mov
sub
das
rol
icebp
pop
nop
into
pop
pop
icebp
pop
movs
aad
outs
cmp
pop
and
retf
sub
dec
and
lock
test
pop
sub
inc
mov
adc
pop
mov
and
mov
xor
pusha
(bad)
cmp
test
mov
push
adc
push
mov
sub
cmc
rol
cli
adc
pop
stos
icebp
movs
push
pop
scas
jne
mov
mov
(bad)
std
mov
jmp
pop
(bad)
push
in
push
push
sti
pop
movs
retf
sbb
cmp
jge
adc
sti
xor
sti
enter
xchg
inc
jne
pop
rcr
sahf
aas
xchg
sub
push
xchg
imul
add
pop
push
mov
cmp
iret
arpl
pop
arpl
ss
cmp
das
out
cld
ret
bound
pop
fistp
jne
pop
call
lods
sahf
xlat
loope
ret
iret
push
mov
ret
xchg
jg
fsubr
mov
sub
push
leave
call
ss
lods
and
inc
mov
ftst
mov
cmp
mov
pusha
lea
push
xchg
pop
ret
nop
mov
rol
pusha
xor
lods
mov
inc
mov
fst
xchg
mov
inc
xor
inc
test
inc
push
mov
and
(bad)
fsub
mov
hlt
les
mov
shl
mov
sub
sub
cmc
jb
jge
test
(bad)
and
dec
or
mov
aam
mov
adc
fdivr
cmp
pop
inc
and
fcomp
(bad)
adc
push
sub
cmp
xlat
into
rcr
push
fild
leave
fild
pop
ficomp
mov
push
jne
mov
in
shl
in
fcmovnu
ret
mov
jb
aad
adc
mov
dec
add
add
pusha
push
xor
std
jo
bound
cli
pop
scas
ret
push
fdiv
rol
pop
jmp
and
sbb
arpl
inc
into
dec
movs
scas
das
imul
push
pop
nop
ret
xchg
mov
(bad)
mov
sub
inc
sbb
mov
cmp
jmp
lods
icebp
add
rcr
aad
adc
cld
call
push
inc
pop
nop
leave
adc
movs
mov
jb
lock
fs
adc
cs
scas
push
sub
dec
mov
daa
mov
push
mov
lods
mov
push
sbb
or
scas
adc
popf
xor
sbb
cmp
repnz
scas
repz
cld
or
xchg
dec
xchg
cmp
jno
cdq
icebp
data16
das
xchg
sar
imul
sub
pop
sub
dec
call
push
fisttp
jmp
dec
add
sbb
cmp
mov
cli
mov
test
out
retf
out
nop
ret
in
out
test
fisub
scas
and
push
xchg
dec
cs
adc
inc
pop
and
or
jecxz
or
les
xor
mov
add
cmc
adc
sub
pop
out
mov
push
jecxz
pop
hlt
pop
test
sbb
cmp
cmp
pop
scas
dec
cmp
mov
push
pop
cld
rcl
leave
gs
into
scas
mov
push
jne
popf
vshufps
aas
sti
jmp
inc
push
inc
test
(bad)
dec
push
cmp
sub
repnz
adc
xor
jmp
out
adc
in
xchg
ds
shl
mov
xchg
jg
pop
and
clc
fsub
stc
sub
iret
lea
(bad)
mov
push
lahf
and
int3
xchg
or
push
mov
stos
lds
mov
lahf
jbe
movs
sbb
sbb
mov
scas
pop
inc
ins
pop
mov
adc
(bad)
dec
dec
movs
pop
pop
sub
shl
pusha
cmps
mov
inc
fst
jmp
mov
mov
inc
adc
(bad)
(bad)
rcl
aaa
or
inc
retf
imul
sub
jno
cld
mov
out
pushf
pop
icebp
fistp
mov
call
int
mov
add
mov
jne
inc
(bad)
sbb
loop
(bad)
mov
pop
ret
fisub
mov
(bad)
mov
rcr
cmp
int
jp
push
(bad)
fwait
stos
mov
jl
mov
xor
ins
xchg
popf
jp
sbb
or
mov
retf
pop
cmps
mov
(bad)
cs
push
nop
pop
adc
pop
rcl
pop
mov
and
sub
push
inc
daa
pusha
mov
lock
pop
mov
sbb
test
cld
out
leave
cmp
inc
inc
fbstp
push
jmp
jno
fs
ins
fcomp
adc
addr16
pop
pusha
and
add
rcr
adc
(bad)
xchg
xor
mov
and
lock
pop
popa
sahf
mov
and
ins
call
sbb
or
pop
xor
jnp
push
cdq
xor
jmp
push
inc
test
mov
sti
stc
bound
cmp
push
sub
scas
pop
xchg
jmp
cmp
mov
cld
xor
int3
scas
bound
gs
sub
cs
jne
movs
xchg
dec
push
cmp
addr16
or
sar
cmp
inc
xlat
pop
jns
sub
lahf
cmp
aad
mov
inc
xchg
jno
or
das
int3
inc
inc
addr16
pop
xor
mov
es
or
push
add
call
adc
lods
rcr
fisttp
cmp
jb
jmp
jne
clc
cmp
js
xor
sub
push
xchg
jbe
add
(bad)
mov
cmps
dec
jb
(bad)
neg
dec
xor
(bad)
test
xor
dec
pop
iret
mov
test
gs
imul
add
ret
arpl
add
mov
scas
pop
test
ret
mov
dec
cmp
push
in
xor
fiadd
into
sub
ins
leave
aam
dec
or
push
push
movs
inc
inc
enter
mov
pop
cmp
sub
(bad)
loop
and
ffreep
neg
ins
repz
sbb
imul
adc
dec
and
sar
sub
xor
sub
xchg
(bad)
push
fwait
or
fild
fist
xor
mov
(bad)
adc
loopne
icebp
or
movs
sub
aad
sbb
pop
and
in
add
and
mov
fcom
cld
mov
loopne
repz
cmc
lea
(bad)
cmp
test
fstp
cmp
(bad)
jb
das
mov
aam
cs
out
test
mov
cld
mov
mov
fwait
(bad)
movs
mov
fcmovu
xlat
test
aaa
add
jg
imul
js
call
out
pop
mov
enter
in
or
sbb
aas
shl
test
imul
outs
push
ins
rcr
in
lock
and
cwde
imul
(bad)
sbb
inc
bound
pop
lea
retf
cmp
xchg
cmc
mov
scas
inc
call
ins
test
popa
(bad)
adc
jmp
dec
and
shl
cmp
pop
fistp
jb
sub
or
add
jmp
popf
mov
test
pop
push
sbb
xchg
mov
sub
jno
call
(bad)
xchg
or
retf
jge
xchg
mov
jmp
(bad)
in
cwde
mov
xchg
mov
out
xchg
push
dec
push
adc
fldenv
daa
adc
fild
cmc
outs
mov
std
jge
and
jmp
iret
ins
mov
mov
cmp
lods
mov
fisttp
mov
jecxz
inc
jne
bswap
stos
bound
rcl
push
dec
ins
les
and
enter
jbe
test
mov
push
inc
lahf
ror
push
nop
push
(bad)
and
xchg
pop
repz
sbb
pop
je
xchg
push
dec
(bad)
sub
bound
sti
xlat
mov
(bad)
xchg
push
in
jo
loope
popf
dec
cmp
and
pop
rcr
cld
pop
pop
mov
add
cmc
(bad)
inc
mov
nop
mov
out
fs
adc
ret
fdivr
in
sbb
sbb
push
jo
mov
fbstp
xor
iret
fist
mov
lock
int
sub
ret
and
int
inc
inc
lods
lods
shr
lods
imul
cli
xor
nop
adc
in
lods
scas
sahf
cmp
pop
jl
mov
push
adc
js
frstor
mov
leave
pop
inc
fwait
cwde
or
or
adc
add
jne
pusha
cmp
pop
pop
or
js
pop
add
inc
sbb
adc
pop
and
loope
out
retf
dec
sti
jmp
call
cld
xchg
lods
sbb
pop
aaa
jmp
daa
pushf
cmp
mov
aad
dec
imul
popf
cdq
push
cmp
sub
gs
cmp
arpl
dec
jb
lahf
clc
and
inc
pop
not
mov
cmps
mov
cmp
aad
sbb
mov
arpl
loope
test
clc
stos
sbb
cs
push
test
sbb
popf
pop
mov
(bad)
push
call
pop
(bad)
aas
pusha
cmp
fmulp
and
sbb
sbb
sahf
movlhps
sub
xor
push
jecxz
cmps
adc
xor
fisttp
lea
aad
xchg
retf
dec
or
pop
pop
ficomp
mov
mov
es
pop
adc
cmp
push
mov
fisttp
ret
xchg
pop
dec
sbb
hlt
xchg
add
mov
sbb
cmp
dec
pop
jmp
push
push
xchg
mov
js
sub
loopne
icebp
or
pop
movs
mov
inc
fild
cmp
xor
sub
call
or
popf
aam
xchg
mov
stos
iret
fwait
xchg
jp
mov
ds
push
out
adc
xchg
mov
pop
add
cwde
iret
outs
dec
loopne
push
mov
jmp
dec
mov
adc
fadd
fidiv
pushf
cs
or
sti
adc
jnp
mov
xor
addr16
mov
stos
jo
mov
mov
adc
sbb
pop
mov
dec
inc
dec
xchg
sub
xchg
mov
mov
jae
cwde
add
scas
add
sub
ja
gs
(bad)
out
sahf
arpl
pop
and
popf
cwde
lods
mov
pop
inc
cmps
mov
xor
gs
dec
cdq
popa
fwait
and
push
xchg
pushf
loope
and
mov
sbb
inc
pop
cwde
xor
ret
jns
dec
mov
das
aaa
lods
dec
jle
dec
cmp
push
xchg
mov
lahf
in
xchg
mov
sbb
not
xchg
push
out
popf
pop
(bad)
fld
fild
jge
pop
pop
aas
jmp
into
mov
sahf
mov
push
arpl
jl
adc
cwde
jnp
lahf
out
imul
not
scas
fwait
pushf
or
inc
popf
cmp
jnp
dec
jmp
fidivr
adc
icebp
call
cdq
rcr
mov
ror
sti
in
jmp
(bad)
(bad)
leave
inc
es
setb
loop
adc
pop
sub
(bad)
push
je
dec
xchg
data16
push
xchg
push
test
js
iret
stos
mov
test
mov
cmp
pop
adc
mov
imul
loop
xlat
js
(bad)
mov
aam
xor
sub
aam
(bad)
ins
xor
in
(bad)
cli
repz
leave
pop
add
mov
dec
push
sahf
xor
sbb
sub
add
adc
xchg
shl
sub
aam
arpl
imul
dec
aam
repnz
scas
xor
mov
outs
push
sbb
pop
or
cmp
push
sub
leave
fmul
bound
(bad)
out
dec
fbstp
mov
pop
cmps
jb
add
xor
pop
pop
mov
cld
scas
xchg
sbb
jbe
and
sahf
gs
fwait
test
outs
pop
jmp
mov
pop
loop
in
push
pop
pop
pop
enter
retf
push
xchg
into
jnp
add
clc
mov
imul
shr
rcr
sahf
jb
aam
ret
adc
jmp
push
(bad)
fild
aam
sub
ret
pop
mov
cld
dec
loopne
adc
cmp
xchg
std
int3
and
add
jae
jmp
xlat
push
lock
inc
cli
mov
retf
adc
out
jmp
jge
mov
test
lods
je
out
or
inc
jl
dec
iret
ret
inc
enter
push
int3
sbb
fimul
mov
(bad)
adc
ret
jae
add
repnz
push
mov
adc
jmp
repnz
xchg
pop
push
jle
test
adc
sbb
outs
jbe
clc
inc
imul
xor
add
mov
ins
and
ins
fnclex
dec
lods
adc
pop
add
mov
das
rcr
pop
mov
rcl
jecxz
xchg
les
pusha
cld
outs
pop
pop
adc
icebp
mov
mov
sbb
pop
push
(bad)
(bad)
retf
sbb
inc
pusha
xor
ins
jg
lods
scas
mov
add
shl
fs
adc
repnz
or
fist
dec
stos
idiv
adc
loop
movs
jg
into
mov
sahf
jl
push
fcomp
out
retf
cmp
iret
ret
mul
dec
mov
xor
mov
inc
add
pop
jae
and
test
sti
push
dec
inc
and
mov
mov
xor
sub
ja
push
sbb
outs
fwait
sub
retf
jnp
into
dec
jle
iret
adc
popa
nop
push
mov
inc
xor
mov
not
push
sets
xor
in
sub
cmps
ficom
dec
(bad)
push
dec
fdiv
sbb
iretw
cli
or
in
lods
repnz
outs
mov
dec
pop
pop
dec
inc
dec
xchg
loop
xchg
pop
imul
fwait
iret
pop
sub
mov
sub
fild
pop
ret
cmp
outs
add
jae
and
pop
sbb
xchg
pop
push
jae
retf
fwait
pop
pop
mov
mov
shr
test
call
int3
xchg
imul
ror
inc
out
and
pop
lahf
xchg
jno
sub
mov
xor
cmps
dec
sbb
xchg
mov
and
clc
mov
ret
pop
arpl
gs
repnz
cld
cld
lahf
lods
test
pusha
das
sti
out
arpl
repz
ds
outs
push
sub
xchg
rcr
sbb
xchg
aam
add
cmp
out
retf
cmp
xor
and
adc
mov
fstp
cmp
jl
in
sbb
cmp
cwde
das
xor
pop
mov
ret
enter
pop
retf
sub
shr
scas
pop
scas
adc
cdq
sahf
push
xchg
std
outs
aam
mov
xchg
and
cmps
add
test
stc
pop
popa
pushf
mov
test
std
ja
xchg
ds
addr16
test
dec
sbb
scas
and
scas
cmc
sub
jae
or
jge
adc
sbb
and
pop
stos
cmp
sbb
jns
ds
cmp
push
test
jl
sub
push
pop
addr16
mov
aad
mov
xlat
mov
adc
cmp
and
push
xchg
push
mov
into
inc
jg
aas
mov
mov
jnp
gs
mov
pop
test
mov
or
push
cmp
mov
shl
jae
retf
push
push
push
cmp
jmp
push
cmp
pop
adc
icebp
xchg
movs
sub
jnp
loope
cmps
adc
fdivr
and
fisttp
idiv
stos
sbb
sub
inc
mov
aam
cdq
lods
gs
int
pop
xor
and
data16
scas
add
mov
sub
lock
sub
lahf
clc
xchg
je
fld
repnz
fbstp
enter
popa
ins
cwde
jbe
mov
adc
jno
call
out
inc
mov
sub
sub
pop
movs
jmp
sub
in
js
int
fadd
push
lds
retf
call
jecxz
lock
cmp
lahf
pop
pusha
and
in
movs
sub
aam
sub
jg
pop
aaa
in
mov
in
push
cld
sbb
(bad)
sub
(bad)
pop
in
jnp
lods
ins
xor
std
mov
dec
stos
popf
jno
out
cld
sbb
sbb
adc
cdq
push
sbb
push
push
loop
jge
bound
retf
out
popf
cld
bnd
loope
xor
data16
scas
inc
aam
adc
mov
fcmove
aaa
cld
push
loopne
xchg
jmp
rol
push
arpl
inc
fist
dec
mov
fistp
pop
mov
cmp
mov
fstp
test
xor
adc
(bad)
out
repnz
mov
std
jmp
adc
xchg
jge
clc
mov
ret
adc
mov
or
int
jae
addr16
mov
push
push
movs
adc
adc
mov
fstp
and
sbb
push
lea
push
test
sahf
push
xchg
stos
gs
mov
sbb
fild
xor
mov
cmp
inc
vorps
arpl
ds
nop
or
pop
dec
outs
fwait
mov
test
sbb
cmp
push
popf
sbb
jg
pop
loope
scas
cmp
rcr
dec
mov
popf
aaa
ins
jne
mov
imul
(bad)
cmp
ins
mov
cmp
ficomp
pop
jmp
outs
bound
sbb
test
mov
out
rcl
mov
push
fild
pop
cmc
lods
popa
pop
jle
xor
pop
stmxcsr
js
push
cli
gs
pop
xchg
lods
mov
ins
ja
shl
jp
mov
push
push
mov
lea
and
sti
sbb
mov
scas
scas
push
(bad)
jg
shl
jp
cdq
enter
nop
xchg
dec
popa
fsub
push
sar
popf
not
mov
sub
movs
fild
adc
cld
aaa
pop
int3
loopne
cmp
adc
test
jmp
dec
push
cmp
sub
jnp
pop
xchg
push
xor
imul
scas
push
sbb
push
jne
mov
mov
daa
adc
jmp
xor
mov
pop
pop
outs
jnp
out
mov
jge
idiv
(bad)
aam
push
mov
aas
aad
jnp
ds
call
xchg
sbb
push
fist
or
lods
xchg
rcr
and
(bad)
cs
ror
or
jae
cld
mov
mov
push
(bad)
mov
mov
add
mov
xor
scas
fild
dec
inc
cld
and
daa
pop
cmps
add
scas
cld
dec
stos
jno
and
in
rcr
mov
and
fs
xchg
dec
out
pop
les
aas
fcmovb
cmp
daa
sub
xchg
cmp
ja
scas
sbb
enter
jo
jo
je
pop
call
mov
cdq
add
cdq
enter
and
mov
inc
das
popa
iret
in
mov
and
lock
cmp
enter
out
mov
rcr
and
pop
sahf
xor
stc
je
out
dec
xchg
mov
test
popa
enter
fdivrp
cmp
add
cmp
cmp
pop
jecxz
aas
sbb
and
mov
push
jmp
jge
mov
lea
mov
push
inc
ss
adc
xor
fdiv
shr
fwait
ss
cld
jg
push
ins
jl
mov
push
(bad)
sub
sbb
test
loopne
cwde
and
adc
inc
push
pop
jmp
mov
push
jae
(bad)
ins
pusha
sub
ins
pushf
cmp
punpckhbw
fiadd
outs
xor
sbb
bound
mov
icebp
cmps
and
lea
cmc
retf
xchg
movs
pop
pop
inc
out
mov
pop
or
mov
mov
or
xchg
das
scas
adc
les
dec
lea
aam
cld
cmp
stos
mov
nop
cmp
mov
and
inc
rcl
xor
dec
ret
fwait
inc
outs
push
sti
mov
mov
fisub
jmp
sbb
pop
rol
push
cmps
arpl
test
lea
jae
push
shl
cmps
push
adc
jnp
push
mov
mov
add
call
push
and
or
cld
xchg
stc
mov
mov
xchg
push
jbe
fcmovnbe
rcl
mov
cmp
mov
and
mov
call
pop
pop
push
sub
add
test
ror
out
inc
or
adc
jno
fild
dec
es
movs
test
cli
xor
jmp
out
in
dec
nop
rcl
rcl
mov
xor
ficom
enter
push
fwait
dec
xlat
push
in
jmp
jmp
dec
leave
fucomi
js
inc
jmp
lods
popf
pop
xchg
call
test
pusha
mov
adc
gs
je
adc
or
(bad)
push
sti
mov
repz
movs
call
ins
xor
or
xchg
retf
pushf
hlt
sub
jbe
movs
scas
rcl
inc
clc
fisttp
adc
dec
rcr
adc
nop
clc
clc
(bad)
fdivr
(bad)
loope
push
pop
leave
es
xchg
adc
mov
xor
sahf
call
test
(bad)
mov
shl
xchg
push
hlt
jp
push
mov
xor
add
sub
js
and
dec
jp
pushf
in
jnp
cdq
inc
retf
or
adc
test
(bad)
xchg
rol
fxam
adc
sbb
sub
and
stos
in
jl
iret
fiadd
mov
scas
in
movs
arpl
or
pop
cmp
sbb
bound
lods
dec
out
(bad)
loope
nop
loope
xchg
mov
sub
out
mov
mov
and
mov
retf
in
std
inc
scas
ins
cmp
cmp
cli
icebp
sub
and
add
and
dec
mov
jae
mov
retfw
lds
xchg
cwde
mov
xlat
adc
push
cli
mov
push
mov
dec
dec
xchg
fsub
pop
cmovp
(bad)
adc
xor
lods
stos
push
sar
cmp
aad
xchg
push
xchg
(bad)
jmp
cmp
mov
sub
dec
jno
test
cmp
call
jl
fistp
(bad)
dec
push
pop
ins
xchg
xchg
mov
mov
mov
jnp
xchg
loop
or
pop
jmp
jmp
mov
test
vpcmpgtw
add
xchg
sub
and
pop
lock
outs
dec
ret
outs
in
in
(bad)
inc
pop
shl
jae
iret
shl
mov
pop
xchg
mov
int
aas
mov
and
imul
pop
cmp
shl
in
cmps
in
ds
pop
mov
cmp
and
jo
cmp
inc
int
inc
inc
(bad)
mov
inc
sub
pop
data16
rcr
jne
scas
cmp
pop
push
sbb
das
cmps
mov
push
(bad)
mov
add
std
jecxz
mov
mov
fwait
out
push
pop
popa
xchg
push
imul
int
xor
inc
lock
in
cdq
fcom
jae
push
mov
cwde
shl
iret
inc
pop
imul
xchg
or
lahf
push
fist
(bad)
arpl
xchg
push
sub
push
pop
sub
mov
aaa
aad
mov
push
mov
ss
addr16
hlt
dec
adc
jp
lock
xor
stos
push
aad
inc
sub
das
mov
sti
xchg
xchg
or
xchg
inc
ds
xor
not
idiv
jae
lods
test
and
scas
test
mov
addr16
xchg
xchg
jecxz
push
adc
mov
mul
aam
mov
dec
jns
stos
test
cli
mov
imul
(bad)
mov
(bad)
push
ret
push
mov
pop
push
popa
dec
out
pop
jp
popw
mov
add
(bad)
mov
fs
cmps
adc
sub
mov
mov
xchg
jle
cli
lods
xor
cmp
pop
pop
sub
iret
out
pop
jno
dec
pop
rcl
out
stos
retf
in
scas
xchg
and
js
add
das
gs
stos
pop
jl
jmp
and
push
push
mov
push
fwait
add
lahf
out
push
test
sti
inc
push
cmp
jne
mov
es
ss
push
shr
push
push
xchg
fwait
(bad)
enter
aam
adc
call
repz
out
sub
dec
or
int
sub
xchg
in
mov
aaa
mov
retf
fsubr
ins
sub
pop
pop
cmp
retf
inc
cdq
sahf
push
mov
sti
mov
stos
mov
jle
neg
mov
arpl
push
and
js
dec
mov
daa
or
pop
test
mov
or
aam
pop
mov
iret
xor
jle
daa
jmp
xchg
call
cli
fwait
call
jl
into
movs
push
fsub
mov
push
mov
adc
mov
cmp
xchg
sbb
js
mov
fistp
mov
mov
(bad)
gs
mov
jmp
push
sub
bound
mov
push
sbb
mov
scas
pop
aam
nop
inc
and
call
push
pushf
mov
in
or
lock
sbb
pop
sbb
dec
ja
jnp
fstp
mov
pop
jl
idiv
mov
call
jo
aad
es
and
cmp
data16
leave
fnsave
in
or
jg
push
adc
push
inc
add
push
js
jae
pushf
hlt
push
adc
sbb
push
mov
daa
retf
cmp
push
bound
retf
adc
mov
inc
into
stos
repz
dec
enter
out
mov
dec
cmc
mov
stc
jg
pushf
ja
mov
fidiv
adc
ret
adc
push
cdq
retfw
and
xor
pop
cmp
cmps
mov
xor
push
adc
cmc
popa
lods
adc
push
push
repnz
pop
lods
int3
in
(bad)
pop
fadd
lods
inc
dec
sub
and
ins
add
mov
mov
push
enter
in
push
or
(bad)
sbb
jle
rcl
or
pop
jns
sub
adc
idiv
int3
xor
aaa
pop
call
clc
retf
and
aas
push
clc
or
add
shl
movs
jge
lods
add
mov
sub
adc
daa
pop
fwait
add
pop
push
xchg
aas
cmp
pop
(bad)
push
xlat
fstp
dec
imul
mov
jg
pop
fstp
(bad)
jp
push
or
mov
mov
pop
xchg
or
sbb
cmps
in
mov
add
push
cmp
sbb
stos
dec
pop
fild
rol
hlt
adc
out
pop
(bad)
mov
cmp
(bad)
mov
out
sbb
enter
data16
mov
adc
out
mov
xchg
sub
ss
push
sub
lock
adc
scas
mov
fs
jmp
iret
cdq
push
adc
mov
shl
xchg
jb
ficom
rcr
pop
xchg
pop
mov
shr
push
cdq
div
dec
fistp
(bad)
mov
fwait
gs
and
scas
sub
aaa
dec
popa
lods
test
call
sbb
popf
out
mov
js
jecxz
into
jecxz
sub
sbb
lahf
add
outs
cmps
and
dec
push
inc
fst
add
shl
mov
inc
xor
rcr
jp
call
stos
outs
mov
adc
mov
repz
mov
mov
leave
inc
ret
xchg
retf
push
retf
xor
test
mov
fcomp
xchg
cs
scas
dec
(bad)
jno
adc
(bad)
addr16
lahf
dec
push
sub
mov
sbb
into
mov
inc
adc
jp
cmp
(bad)
cmc
aad
push
hlt
pop
lods
cmp
inc
pop
mov
dec
sbb
sbb
stos
iret
cmps
jno
clc
lahf
xchg
mov
(bad)
jno
retf
inc
dec
aam
sub
push
mov
mov
add
sti
dec
cmc
outs
mov
push
imul
or
into
xchg
lahf
mov
enter
xchg
shl
leave
jle
movs
into
lahf
retf
jae
lea
ror
repz
in
push
cld
jno
inc
xor
clc
mov
iret
jbe
and
dec
outs
arpl
or
push
(bad)
loopne
dec
dec
mov
cmp
cdq
inc
adc
faddp
sbb
push
call
cmps
scas
push
ror
pop
fcmovnbe
ja
mov
(bad)
mov
mov
aad
popa
retf
pop
movs
xor
mov
mov
push
jne
push
fisubr
ins
in
stos
bound
int3
aad
dec
int3
add
call
std
mov
mov
popf
pop
jns
rol
adc
cmp
jge
fdiv
das
leave
inc
outs
pop
pop
push
pop
inc
aaa
pop
test
fmul
in
push
pop
pop
ficomp
movs
icebp
in
and
clc
fmul
cmp
fsqrt
jns
and
inc
repnz
pop
mov
cmp
or
add
ret
xchg
retf
or
sbb
out
cld
jnp
inc
(bad)
mov
dec
xadd
ret
retf
mov
jae
(bad)
ret
xchg
dec
loop
lods
ins
aaa
jbe
ins
scas
mov
leave
fstp
xchg
lea
ret
xchg
mov
shl
sub
jge
adc
pop
test
add
or
xchg
dec
xchg
and
push
add
cmc
les
popa
jmp
pop
jge
sbb
xor
mov
xor
xor
or
cld
jecxz
inc
adc
cmp
or
xchg
xchg
mov
movs
fld
push
sub
adc
aad
mov
adc
or
int3
jmp
mov
enter
lds
adc
mov
sub
and
cs
mov
out
lock
hlt
jge
paddq
fcom
push
mov
xor
mov
cmps
lock
je
int3
retf
fwait
mov
inc
xchg
cli
loopne
pusha
cmp
push
rcl
test
inc
inc
adc
movs
inc
adc
loop
fist
push
test
(bad)
mov
inc
mov
pop
dec
aaa
fadd
mov
pop
jp
cdq
jp
xchg
and
mov
xlat
pop
dec
test
sub
pop
jnp
movups
or
addr16
push
push
xor
push
push
sbb
inc
xchg
icebp
xchg
std
ins
xchg
inc
sub
inc
sbb
xchg
ret
loope
int3
ficomp
out
push
mov
push
repnz
adc
(bad)
jae
xchg
add
hlt
jge
xchg
xor
add
jl
mov
and
mov
mov
inc
sahf
jo
ret
sbb
mov
stos
rcr
and
ret
test
mov
popf
scas
out
in
mov
dec
shr
ds
in
sub
out
jo
pusha
daa
loop
sub
into
adc
imul
add
std
(bad)
in
into
mov
data16
sti
push
int3
xor
arpl
dec
or
mov
sbb
or
mov
aad
in
xchg
fistp
bound
pop
mov
pop
loopne
add
int3
mov
sub
lods
adc
in
adc
pushf
stos
les
jge
aad
sub
in
sbb
mov
pushf
pushf
pop
mov
cld
adc
push
sar
push
sub
fwait
jge
out
aam
cwde
and
mov
pusha
pop
push
fsubr
xor
rcr
shl
mov
mov
sbb
cmp
and
cmps
mov
pop
hlt
fmul
sbb
(bad)
repnz
inc
daa
push
lods
mov
xchg
jno
xchg
mov
jnp
aaa
scas
ins
and
aaa
xchg
adc
leave
xor
cmps
pop
cmp
adc
mov
sbb
je
and
int
sub
retf
push
and
add
bound
cmp
bound
fwait
mov
xor
jmp
dec
retf
or
jmp
or
cmp
add
test
lea
push
sbb
sub
data16
xchg
or
xchg
jnp
mov
xchg
push
or
leave
sbb
xchg
jmp
jbe
xchg
or
test
out
je
retf
fdiv
mov
add
sahf
add
mov
sub
pop
cmp
mov
cmps
cmp
sbb
sub
mov
out
adc
fld
pop
cmp
aaa
xor
imul
pop
mov
pop
dec
jge
test
push
ror
xchg
retf
sbb
xchg
push
sbb
cdq
leave
fnsave
dec
or
hlt
clc
bound
iret
and
icebp
movs
fidivr
(bad)
aad
cwde
pop
sahf
inc
jo
aam
test
sbb
mov
repz
mov
neg
jae
push
neg
adc
arpl
push
mov
cmp
cmp
push
sahf
xchg
push
imul
stos
hlt
push
loop
lods
ins
js
inc
pop
ffreep
cld
add
push
outs
mov
mov
fnstsw
xor
and
and
addr16
jae
test
cmp
(bad)
sbb
ficom
sub
js
pop
lea
mov
dec
dec
fistp
(bad)
repz
out
test
pop
aas
loope
fistp
mov
xor
sti
xor
sub
dec
xchg
popa
out
rol
add
(bad)
stc
sbb
mov
mov
in
mov
call
pushf
mov
ds
push
fldcw
adc
retf
mov
push
sar
or
ja
push
mov
adc
xor
int3
mov
std
cmp
jmp
inc
sti
rcr
imul
je
shl
cdq
mov
cmp
scas
cmp
push
mov
mov
daa
out
inc
ins
sub
sbb
push
out
inc
fld
xchg
sbb
jmp
cmps
inc
cmp
movs
xor
fst
lods
dec
sub
push
dec
jecxz
stc
in
mov
and
out
addr16
sar
push
mov
es
aas
xor
lahf
repnz
ds
sub
push
sub
push
daa
cmp
push
jns
sub
xchg
popf
cli
add
jmp
js
sub
test
add
cmp
lea
jbe
sub
in
jg
mov
aad
aas
inc
sahf
rcl
ins
and
mov
ja
fidivr
retf
stos
jmp
test
(bad)
pop
lea
jecxz
mov
adc
int
jae
cld
push
mov
hlt
jmp
fwait
sbb
fidivr
fucomip
jnp
es
imul
int
retf
jns
push
dec
jl
add
push
imul
and
push
and
shl
sar
out
fwait
dec
push
arpl
or
pop
push
cmp
int
inc
push
xor
aaa
mov
(bad)
xchg
mov
xor
jp
loopne
enter
jnp
jmp
add
(bad)
lea
bound
mov
(bad)
frstor
pop
loop
inc
inc
dec
push
mov
xchg
jg
push
lahf
inc
pop
pop
in
test
notrack
les
clc
inc
xacquire
push
data16
jns
pusha
dec
mov
ins
fstp
out
xor
push
and
pop
retf
stc
jle
mov
retf
xchg
call
xchg
inc
call
push
xchg
retf
ins
lods
in
stos
or
xor
adc
outs
cli
sub
jl
ret
bound
into
(bad)
cmp
out
lock
es
stos
pop
fwait
push
inc
sub
mov
xchg
sbb
push
imul
pop
sub
cmps
xor
xor
xor
mov
cmp
xor
sbb
sub
mov
pop
add
outs
sbb
sub
inc
jbe
fwait
xlat
jge
mov
shl
jle
enter
call
dec
das
test
add
icebp
dec
mul
arpl
rsqrtps
into
pop
push
loopne
imul
fbstp
mov
xor
xchg
push
xchg
push
sahf
in
mov
fisub
fild
xlat
dec
ret
ja
xchg
ss
mov
or
jae
push
sub
xchg
sbb
and
in
xor
out
mov
sbb
retf
push
xchg
and
ins
leave
cmp
jge
pop
inc
(bad)
jmp
call
xor
je
cld
sbb
cli
ret
jmp
in
push
fwait
xlat
inc
call
fnstenv
fbld
out
jl
call
or
ret
(bad)
dec
dec
fs
nop
shl
mov
jb
jmp
gs
mov
push
fdivrp
mov
inc
fdivp
mov
xor
(bad)
mov
sub
fiadd
mov
fist
cmpps
fisub
push
data16
rol
fisub
adc
mov
fs
fwait
retf
call
pop
in
call
push
xchg
clc
lea
cmp
rcl
xchg
mov
pop
cmp
retf
and
push
sub
push
inc
aaa
int3
xor
iret
test
pop
jmp
bound
inc
push
jl
pop
pop
movs
nop
sahf
mov
and
jbe
mov
xor
ins
adc
ret
mov
(bad)
jmp
fcomp
or
js
test
in
fwait
xor
mov
fs
shl
ret
sub
jmp
movs
ret
out
push
cld
xlat
(bad)
xchg
jge
cmp
pop
arpl
pop
or
mov
das
mov
dec
or
mov
push
push
imul
ret
jmp
push
xchg
fild
xchg
cmps
fwait
pop
test
pop
sub
fs
xchg
pop
shl
push
neg
fdivr
out
pop
push
sub
fs
adc
call
xchg
cmp
(bad)
fwait
sbb
adc
inc
adc
sbb
jmp
dec
ret
sti
add
push
jmp
xchg
das
js
repnz
je
ret
mov
or
sar
fs
(bad)
out
mov
lods
mov
cmp
mov
mov
push
mov
push
cmp
or
mov
pop
jmp
in
add
xchg
call
pop
movs
jp
jge
pop
jmp
popf
push
ret
outs
je
mov
les
jge
outs
dec
fistp
jo
ins
inc
lods
xchg
imul
pop
bound
inc
imul
sti
cmps
inc
push
xchg
call
repz
enter
adc
push
xlat
pop
mov
sub
fcom
dec
pop
arpl
xchg
fisttp
sub
fsubr
and
or
cwde
nop
push
popf
xor
and
sbb
xor
inc
dec
pop
xchg
jp
xchg
int3
call
mov
(bad)
jno
dec
cmp
ja
ins
fdiv
jbe
ret
sub
adc
jg
fmul
sbb
mov
(bad)
mov
stos
mov
sub
fcmovnb
(bad)
and
retf
lock
imul
adc
imul
sahf
adc
test
outs
popa
cs
sbb
fldenv
into
pop
inc
dec
lods
pop
icebp
xchg
sub
out
cmp
mov
lahf
push
int
mov
jg
test
leave
stos
and
jl
(bad)
cli
leave
jmp
ret
push
mov
jg
cli
mov
popf
cld
clc
repz
addr16
dec
push
data16
in
sahf
nop
call
leave
nop
adc
xor
aas
jg
aas
test
(bad)
ja
mov
arpl
repz
scas
bound
xchg
xchg
mov
dec
ins
mov
jl
ins
test
stos
(bad)
fldcw
in
mov
mov
jmp
mov
jnp
add
out
sti
out
jecxz
int3
cs
adc
inc
mov
js
mov
mov
or
adc
mov
fbld
out
scas
stos
inc
xor
lahf
das
sub
dec
test
(bad)
js
retf
call
dec
add
sub
adc
cs
fiadd
jns
pop
loop
mov
icebp
rol
iret
out
popf
test
and
inc
cmp
test
out
popf
sub
xchg
cmp
pusha
ficom
mov
jns
sub
lahf
xlat
mov
push
jb
mov
imul
or
mov
push
jns
loope
lahf
lods
movs
or
(bad)
mov
cmps
push
pop
push
sti
pop
or
in
pop
in
pop
mov
mov
mov
movs
enter
push
jae
mov
mov
pushf
movzx
fwait
imul
mov
shr
pop
js
jecxz
movs
cmp
test
mov
jns
sbb
adc
ins
test
xlat
xchg
pop
(bad)
stc
shl
outs
(bad)
mov
stos
enter
das
ficom
add
jno
xchg
jo
stos
in
and
xchg
jns
mov
ja
sbb
push
xor
dec
mov
fild
pop
nop
mov
out
ret
std
push
dec
inc
std
xchg
mov
cld
out
xchg
adc
(bad)
cmp
sub
jp
shl
ret
mov
jne
mov
cmps
or
pushf
popa
retf
and
retf
mov
dec
add
sbb
ja
aaa
xchg
movs
dec
add
arpl
popf
js
xor
int
mov
fnstsw
or
adc
in
sbb
fmul
jmp
mov
out
sub
scas
ins
push
xor
sbb
jno
and
sbb
popf
idiv
lea
inc
sub
mov
or
call
daa
(bad)
enter
sbb
jmp
addr16
loope
fwait
xchg
popf
adc
dec
sbb
mov
sbb
paddusw
arpl
test
jg
ficom
xchg
ds
xchg
pop
lods
iret
div
mov
(bad)
inc
pop
lods
mov
pop
sub
into
and
add
pop
sub
fs
inc
xor
jg
push
(bad)
sub
fsub
jbe
daa
jne
enter
jmp
call
inc
int3
mov
lea
shl
fdiv
loop
imul
imul
lds
fs
sbb
fldcw
pop
sbb
int
xor
aad
gs
sbb
pop
sub
and
sbb
scas
cmp
jl
push
jl
mov
out
jo
les
mov
(bad)
imul
jmp
xor
xor
adc
xor
sahf
sti
inc
mov
push
vpshab
cmp
or
pop
fisttp
mov
call
into
xchg
dec
mov
ss
mov
add
shl
cmp
push
push
les
sahf
lods
stos
mov
std
enter
test
cmp
pop
loop
(bad)
call
int3
or
ror
lods
call
movs
push
sar
retf
jp
movs
jl
adc
mov
movs
inc
sbb
cld
arpl
ss
enter
outs
aam
xchg
xor
sub
test
dec
mov
sbb
mov
mov
ror
push
add
dec
sar
scas
fisttp
sbb
push
jns
sbb
mov
jae
mov
push
adc
xor
outs
fdivr
jnp
cmp
cmp
out
cli
lods
es
aad
shl
sub
jmp
scas
push
dec
cmp
ins
mov
movs
or
cli
out
int
adc
loop
repnz
xor
cmp
ins
jge
mov
and
mov
jecxz
mov
xchg
sbb
bound
push
shl
or
cmp
dec
mov
fdiv
stc
cmp
imul
jno
ss
xor
das
cld
xor
fidivr
xor
cs
outs
(bad)
icebp
movs
call
retf
(bad)
arpl
ins
in
lods
aaa
xchg
xor
fnstenv
repz
or
jmp
into
lahf
xchg
stos
pmullw
test
scas
and
(bad)
ffreep
mov
in
iret
stos
xchg
stos
jg
(bad)
cmp
jecxz
in
shl
jmp
fstp
mov
cmc
xchg
cmps
xor
pop
fcmovnbe
mov
dec
ds
outs
call
sbb
js
xor
pop
ins
xor
adc
xor
pop
push
pop
jns
das
pop
bnd
push
xor
push
out
xchg
xchg
mov
cmovp
sbb
sar
push
mov
dec
out
jae
mov
mov
dec
mov
cmp
jmp
xchg
mov
push
jecxz
mov
dec
imul
in
push
stos
xor
adc
fld
mov
retf
imul
inc
mov
inc
jne
cmp
mov
das
lods
sbb
inc
sbb
xlat
dec
adc
or
rcr
push
mov
xchg
xchg
push
or
pop
mov
mov
push
mov
stos
lahf
lods
and
or
popf
and
mov
inc
adc
(bad)
push
dec
xlat
dec
xchg
pop
lods
mov
xor
push
pusha
jp
push
inc
xor
fisttp
fwait
adc
xor
clc
mov
imul
jmp
adc
mov
pop
adc
jo
es
pop
inc
xadd
mov
fild
push
ds
lods
cmp
lock
cmps
div
or
jno
sti
or
(bad)
lahf
inc
jge
(bad)
add
fdiv
scas
int
sub
dec
mov
in
jmp
es
out
retf
enter
aam
cmp
leave
jge
sbb
in
cmp
sub
xor
inc
movs
int
mov
das
test
push
popf
push
and
dec
ret
mov
xor
mov
sbb
scas
sti
in
or
popa
mov
push
or
add
scas
sub
aas
xor
mov
push
mov
cwde
and
fwait
dec
das
xchg
jb
xchg
xor
out
and
iret
push
jg
jb
mov
(bad)
aas
xchg
mov
mov
movs
push
cli
xchg
push
retf
(bad)
adc
inc
mov
data16
mov
sbb
mov
adc
xchg
jg
add
pop
dec
mov
in
push
mov
sar
(bad)
(bad)
jmp
(bad)
sub
mov
and
retf
or
inc
mov
int
mov
mov
popf
mov
stc
jmp
enter
mov
aaa
shr
mov
mov
xchg
jecxz
push
mov
(bad)
clc
repnz
xlat
fidiv
ss
cmp
bound
out
xchg
test
lock
mov
push
sub
mov
adc
mov
cmp
and
or
mov
lock
add
and
adc
retf
adc
sbb
aas
ds
mov
js
idiv
(bad)
imul
ja
sub
sbb
jb
cmps
shr
push
cli
jp
sbb
adc
nop
outs
scas
cmp
ss
mov
inc
and
stos
mov
xchg
jo
or
xchg
xchg
ret
mov
repz
push
call
popf
jmp
into
jg
push
jno
and
scas
jg
mov
push
in
(bad)
and
cmp
scas
loopne
pop
call
adc
mov
div
sub
mov
xchg
and
sbb
int
aaa
movs
mov
bound
lahf
int
jecxz
push
scas
data16
pop
lods
ror
xor
aaa
movs
adc
enter
sbb
xor
adc
push
ret
das
jmp
jb
clc
pop
retf
adc
add
adc
dec
jns
inc
rcl
shr
adc
adc
xor
or
and
stos
jae
mov
icebp
lods
(bad)
outs
adc
dec
jae
shl
cmp
pushf
ja
pop
popf
xchg
in
push
clc
mov
call
jle
(bad)
(bad)
and
and
xor
xchg
cli
xchg
addr16
dec
sbb
or
fst
and
imul
out
movs
out
or
popa
fwait
and
out
push
outs
jl
std
sub
fdiv
fcomp
fsub
or
xor
mov
in
lds
sti
mov
aas
dec
mov
ret
shr
xchg
jb
inc
xchg
xchg
sub
mov
(bad)
jae
iret
mov
jge
pop
clc
xchg
cli
jg
pop
xchg
loopne
inc
lea
cmp
adc
dec
cmp
retf
cmp
ds
pushf
adc
fisttp
hlt
jno
xchg
(bad)
jmp
push
push
arpl
clc
fcmovnu
(bad)
or
(bad)
ins
cmps
ins
adc
out
mov
xchg
into
(bad)
xor
retf
jns
adc
push
sub
add
xchg
push
jb
shl
lea
sbb
lds
and
cdq
cmp
xchg
fild
push
or
mov
sbb
or
xor
out
repnz
repnz
pmullw
cld
xchg
mov
js
pushf
pop
inc
in
je
pop
cmc
cmp
dec
push
dec
mov
and
stos
dec
popf
data16
jecxz
dec
adc
loopne
mov
mov
mov
mov
sahf
xor
jnp
fbstp
mov
sbb
mov
sub
push
(bad)
std
and
sub
popa
jl
mov
cmp
push
fwait
ins
retf
inc
out
pop
fnsave
adc
inc
add
test
inc
mov
fstp
stc
dec
xchg
cmc
mov
mov
not
xchg
daa
xchg
pop
in
xchg
fcom
cmc
and
mov
cmp
(bad)
adc
mov
push
leavew
push
mov
dec
je
icebp
push
sub
outs
in
dec
and
retf
add
xchg
sub
sub
imul
mov
and
mov
sahf
clc
(bad)
sahf
mov
sub
int3
push
sbb
sahf
setb
ret
push
push
int
fadd
push
pop
neg
mov
push
mov
(bad)
outs
xchg
call
sti
aaa
fcom
mov
add
jmp
jbe
dec
push
lahf
cli
ja
fstp
mov
jecxz
ret
mov
and
jmp
add
(bad)
xchg
jle
cmp
test
and
rol
push
aas
fisttp
mov
jns
pop
xor
and
cs
xchg
inc
pop
and
push
or
inc
out
adc
mov
mov
pop
addr16
scas
fwait
jbe
retf
in
fprem1
mov
out
sbb
ins
push
jmp
int
inc
inc
xchg
mov
sub
ret
lahf
retf
sub
and
xchg
lea
fsubr
int3
lea
sbb
lods
mov
test
mov
pusha
push
jnp
mov
cmps
mov
mov
mov
mov
div
pop
std
mov
into
push
sar
arpl
aaa
mov
mov
ret
ds
mov
adc
sbb
adc
pop
mov
push
es
xchg
push
(bad)
xor
mov
repz
pop
push
ins
cwde
mov
outs
xchg
or
xchg
(bad)
in
lds
and
or
or
aas
ss
push
fcmovb
mov
repnz
push
adc
pop
pop
sbb
or
or
repz
pushf
and
pop
ss
ds
sahf
fs
xor
cli
test
pop
(bad)
push
mov
mov
mov
(bad)
cmp
in
aaa
and
push
shr
add
jp
ja
sar
inc
pop
lods
mov
mov
mov
pop
stos
pop
lahf
mov
jmp
adc
ins
retf
std
adc
adc
xor
dec
ja
cmp
mov
pop
icebp
cmp
stc
adc
or
and
int3
jns
mov
cwde
mov
push
call
scas
fist
(bad)
and
mov
push
movs
jle
scas
mov
pop
nop
push
inc
sahf
inc
pop
sbb
dec
in
loop
mov
(bad)
retf
gs
sbb
dec
cdq
repnz
pop
mov
push
add
sahf
(bad)
into
icebp
dec
sub
xchg
retf
jae
sbb
pop
pushf
aad
sti
(bad)
dec
aas
ss
dec
sbb
cmp
cwde
pop
cmp
mov
rcl
aas
movs
add
les
and
shl
retf
iret
test
jae
loopne
mov
movs
mov
pop
pop
push
outs
loopne
jle
xchg
mov
scas
rcl
js
pop
aad
or
fwait
mov
xchg
sub
int3
inc
xor
pop
lods
cmps
mov
lea
cli
ins
sbb
sbb
push
dec
or
and
pop
and
mov
and
cmp
jp
adc
out
push
jmp
ins
pop
bound
fbstp
add
clc
popa
in
cmps
jle
cmp
loope
add
jmp
pop
shl
icebp
cs
das
aam
inc
pop
xchg
push
arpl
sub
mov
ret
mov
dec
mov
mov
sub
int
cmp
mov
scas
int
jecxz
mov
mov
cmps
xchg
pusha
sub
je
ins
cld
sub
clc
ins
push
pop
daa
inc
cmc
mov
mov
int
jns
adc
jno
lods
test
xchg
sub
sub
mov
inc
pop
push
add
js
push
mov
les
or
mov
jbe
jl
lds
movs
mov
or
cmp
xchg
push
pop
not
fsub
dec
xchg
pop
dec
aaa
test
mov
ins
cwde
or
fst
imul
lea
push
adc
test
push
fdivr
or
stos
scas
adc
cwde
mov
neg
lods
cmp
push
xor
call
add
ins
and
(bad)
in
scas
test
cmp
sub
pop
xor
cdq
cdq
dec
sub
pop
in
inc
pop
call
aam
imul
es
hlt
jg
mov
xchg
pusha
mov
scas
ins
(bad)
dec
arpl
(bad)
mov
idiv
push
enter
out
inc
mov
aad
cmp
mov
adc
xor
aaa
cmps
fs
jp
sbb
pop
(bad)
ficomp
and
lahf
xchg
call
loope
shl
enter
xor
lahf
mov
sub
sub
popf
scas
cmp
stos
fisubr
sbb
sbb
in
mov
addr16
(bad)
jb
mov
ret
js
ret
xor
pop
xchg
aaa
add
push
push
stos
aas
pop
push
lea
inc
test
fs
add
jge
inc
aam
push
int
fcom
pop
pop
outs
call
sub
cli
sbb
gs
stc
pushf
sbb
sar
sub
mov
fldenv
mov
fdivr
push
pop
sar
imul
loop
cmps
cmp
ror
hlt
and
and
pop
aam
sub
retf
pop
jnp
adc
(bad)
(bad)
pop
inc
mov
sub
fist
xor
lea
packuswb
call
cmps
sbb
stc
inc
in
push
or
xor
xchg
adc
shl
push
xchg
int
rol
lock
scas
adc
cmp
adc
inc
movs
push
loope
outs
ins
or
stos
push
or
pop
mov
pop
sub
test
lods
inc
xor
inc
out
outs
mov
dec
mov
inc
enter
daa
out
paddusb
in
lods
fwait
into
stc
dec
jmp
mov
movs
jmp
(bad)
lods
push
fsub
add
jge
cmp
in
mov
test
jo
cmp
pop
push
mov
ds
jp
jg
sbb
scas
and
sbb
imul
push
in
pop
das
push
daa
mov
cmp
jle
mov
inc
pop
or
pushw
push
xlat
dec
cld
leave
fisubr
addr16
ins
jnp
hlt
adc
ins
(bad)
fwait
adc
cmps
ror
push
push
neg
sbb
addr16
call
daa
in
call
adc
push
mov
add
jl
(bad)
xchg
out
xor
and
xor
imul
sbb
ret
mov
xchg
fs
push
mov
ins
pop
mov
fs
shl
fisub
adc
push
popa
or
push
jb
mov
loop
lahf
daa
dec
repnz
sahf
push
jnp
pop
shr
dec
rcr
and
call
jecxz
xor
ss
or
popf
aam
cld
popf
je
js
mov
imul
aas
mov
pop
leave
push
cmp
retf
lods
std
pop
xchg
xchg
dec
push
sub
pop
jle
mov
ret
jb
retf
addr16
aad
stos
aam
mov
test
aam
ret
sub
mov
enter
imul
popa
pushf
stc
jl
cdq
fidivr
les
mov
dec
pop
retf
push
je
and
jnp
sub
fadd
js
add
cdq
adc
enter
rcr
outs
dec
sub
test
outs
scas
ins
pop
std
retf
mov
sub
xchg
pop
jg
inc
pop
pushf
fs
iret
fwait
xor
push
pop
daa
(bad)
adc
(bad)
jo
mov
mov
shl
pop
sub
ficom
and
jp
in
xor
movs
shr
mov
retf
out
add
cmp
mov
sbb
lahf
repnz
dec
inc
out
xchg
cli
mov
not
test
int
fistp
cld
retf
icebp
jmp
jmp
jmp
xchg
retf
call
xor
enter
mov
xchg
inc
adc
lods
and
mov
pop
(bad)
mov
test
push
(bad)
movs
sbb
mov
cmp
jae
lea
test
pop
xchg
lods
pop
ffreep
xor
push
lock
lock
stos
mov
fisub
mov
shl
call
fsub
retf
mov
cs
xor
popf
pop
sub
pop
jl
(bad)
enter
leave
test
ins
ins
call
push
pop
fistp
cli
pop
das
inc
movs
pop
in
(bad)
(bad)
mov
cmp
cli
fwait
call
adc
ins
sbb
inc
push
stos
add
mov
addr16
das
mov
leave
lock
mov
test
int
mov
sub
test
xor
sub
nop
cmps
ret
sub
stos
addr16
nop
test
dec
adc
mov
mov
add
out
movs
pop
(bad)
movs
pop
inc
cmp
sub
rcr
cmps
jb
(bad)
test
bound
ss
pop
es
arpl
xchg
fld
xchg
mov
and
adc
sar
dec
out
stc
fnstcw
sub
dec
mov
outs
hlt
xor
cmp
pop
scas
push
scas
mov
(bad)
adc
push
pop
cmp
mov
cli
push
adc
dec
cmp
jecxz
push
mov
outs
jge
sbb
cmp
xchg
cmp
adc
dec
int3
(bad)
call
in
std
fisub
fdiv
jo
mov
icebp
xor
mov
stos
xchg
fnstenv
mov
js
add
inc
leave
jg
and
cli
push
inc
aas
or
repnz
sbb
adc
mov
lahf
ror
nop
in
cmps
jge
fadd
stc
movs
add
add
int3
mov
call
ret
ds
mov
aaa
add
fst
adc
pop
mov
stos
mov
mov
sbb
xchg
cmc
into
scas
shl
cmovb
repz
(bad)
iret
jmp
adc
in
and
cld
jmp
pop
lock
inc
or
inc
sti
push
out
and
xchg
and
inc
jmp
xchg
rol
scas
sbb
cmps
imul
pop
lods
mov
sub
or
and
arpl
rcr
cld
adc
xor
or
pusha
adc
scas
mov
and
or
aam
popf
jbe
add
sub
xchg
push
bound
shr
jmp
movs
ror
in
jge
ret
add
pop
xchg
fistp
sahf
push
scas
mov
adc
aam
pop
cmp
mov
jle
call
sahf
fisubr
xor
add
add
jbe
fstp
fwait
popf
clc
xchg
scas
pushf
adc
sbb
outs
fs
lea
out
hlt
imul
mov
xor
arpl
push
mov
mov
addr16
rcr
cmp
or
mov
stos
xchg
inc
dec
call
std
into
pushf
cld
pop
mov
jae
lahf
jmp
sbb
cwde
sub
mov
adc
jbe
dec
cmp
pop
xor
rcl
mov
dec
jmp
inc
cli
mov
sub
(bad)
stos
cmp
adc
outs
xor
punpckhwd
dec
stos
outs
pusha
cmp
outs
cmps
and
adc
inc
ret
aam
mov
jb
int3
dec
mov
dec
into
out
dec
jge
mov
xchg
xchg
jns
call
jo
push
scas
aaa
xchg
aas
sti
xor
fcmovnb
in
mov
(bad)
sub
jp
ror
ss
ret
push
sar
out
mov
mov
outs
sub
cld
mov
push
pop
popf
inc
mov
cmp
xor
jno
push
scas
pop
mov
aas
add
adc
(bad)
shr
stc
mov
daa
adc
push
push
push
jmp
(bad)
addr16
(bad)
aaa
(bad)
xlat
and
jmp
retf
push
xor
scas
cmp
dec
xchg
(bad)
lock
cli
sub
jge
mov
push
mov
add
mov
dec
repz
jnp
push
aad
mov
aaa
jmp
jo
sub
ins
jecxz
cld
push
fadd
int
jmp
pop
loope
cld
pop
loope
sub
mov
sbb
xchg
retf
and
enter
mov
sbb
xchg
xlat
pop
sahf
popf
lods
or
cmp
es
shl
hlt
push
dec
das
ss
xchg
jne
add
pop
nop
cmp
mov
fcomp
call
rcl
retf
js
push
sub
and
lods
gs
sub
or
sub
loopne
outs
loop
mov
xchg
in
push
jl
push
and
pop
or
ret
fimul
in
push
add
in
clc
adc
std
mov
pop
sub
jns
fcmovne
retf
dec
adc
xor
pop
cld
enter
movs
in
ins
not
test
push
cmp
cmp
mov
sub
shl
sti
xchg
dec
xchg
jno
rcr
stos
ins
test
bound
es
inc
pop
jne
rcl
sub
sbb
adc
push
xchg
push
inc
das
mov
dec
add
push
stos
xor
or
aas
hlt
inc
adc
push
push
sbb
dec
shl
pop
pop
or
push
xchg
push
mov
ds
adc
test
adc
xlat
lahf
scas
xchg
push
push
ror
test
stos
xor
jmp
inc
and
add
mov
jo
mov
jbe
jo
mov
daa
test
and
ret
pop
das
mov
pop
sub
cdq
nop
dec
push
sub
cli
xor
arpl
adc
cmp
(bad)
ja
pop
idiv
xchg
jmp
int
dec
int
pushf
xchg
xchg
push
sub
fs
xchg
and
xchg
cmp
in
nop
loopne
in
jb
fdivr
outs
and
shr
sbb
lods
push
mov
pop
leave
outs
inc
add
fild
sub
jl
cs
xchg
dec
mov
dec
dec
sub
in
xchg
push
in
xchg
pop
dec
sbb
cmp
dec
fdivr
add
and
shr
repnz
mov
pop
or
xchg
or
pop
clc
push
int
dec
add
xchg
xchg
stos
mov
dec
movs
sub
cmps
std
loope
mov
xor
sbb
sub
mov
add
and
shr
rcl
or
mov
pop
push
sti
xchg
pop
fisubr
mov
adc
int3
repz
sbb
loope
pop
push
and
enter
adc
ds
in
stc
mov
push
and
inc
mov
pop
jmp
fisttp
push
pop
mov
mov
popa
or
push
sbb
rcr
hlt
les
jg
fisubr
(bad)
scas
add
rol
xchg
mov
je
push
adc
hlt
dec
dec
sahf
dec
mov
adc
or
leave
mov
push
mov
xchg
inc
out
hlt
ds
nop
jecxz
push
mov
pushf
cmp
adc
(bad)
pushf
test
loope
gs
adc
inc
cmp
fldenv
cmp
fs
add
scas
push
push
loopne
adc
pusha
push
ret
lahf
fst
jl
pop
nop
mov
xchg
push
retf
pop
retf
imul
rcl
adc
gs
xor
fs
add
mov
sti
cdq
das
adc
mov
fmul
jge
and
xchg
mov
sbb
pushf
cmp
sbb
cld
or
sar
pushf
imul
(bad)
push
xchg
and
mov
popa
and
push
cs
(bad)
ins
ds
sti
popa
pusha
mov
enter
push
mov
xchg
cmp
cmp
retf
sub
(bad)
push
scas
cli
jmp
sti
jns
fist
lods
cs
in
pop
rcr
mov
push
sahf
pop
hlt
jl
fdiv
jge
and
xchg
into
(bad)
sbb
cmp
addr16
sti
fldcw
xor
in
jl
fsubr
jge
and
xchg
dec
(bad)
dec
imul
push
mov
sbb
fisub
pop
dec
push
in
lods
(bad)
push
push
lods
out
loop
in
pop
adc
mov
pusha
or
inc
sahf
jmp
popa
and
push
(bad)
cli
pushf
ins
into
push
sti
push
pusha
imul
scas
adc
mov
xchg
pop
retf
pop
retf
pop
data16
pop
jle
adc
pushf
add
cmps
sbb
fisub
push
mov
push
sar
call
jne
pop
out
lahf
retf
mov
push
fstp
fisub
push
or
outs
sar
adc
fistp
sahf
retf
push
shl
cwde
popf
mov
mov
pushf
xchg
ds
mov
and
push
fcmovnbe
pop
mov
cmp
jnp
sub
pushf
mov
fild
loop
in
pop
rcr
retf
pop
sahf
pop
mov
dec
fdiv
aaa
xchg
ficomp
xor
and
inc
imul
fdivr
aas
mov
mov
fcomp
imul
test
retf
es
aaa
movs
sub
imul
sbb
push
std
add
pop
enter
or
into
int3
add
fwait
adc
aaa
pop
mov
ja
daa
mov
rcr
jae
mov
out
dec
sar
dec
ja
mov
rcr
sti
sub
and
mov
sub
mov
adc
mov
jmp
out
jbe
lea
arpl
jnp
retf
stos
mov
adc
outs
test
test
test
into
int
cmp
lahf
cld
mov
xchg
arpl
xchg
mov
mov
xor
mov
in
dec
fincstp
lahf
jbe
fs
pop
dec
push
pop
into
cmc
aaa
cdq
dec
mov
test
ds
mov
jo
lea
pop
jge
xor
test
mov
jecxz
mov
dec
ret
mov
ins
pop
sahf
xor
jp
dec
mov
sbb
sub
pop
or
call
xchg
jmp
xchg
mov
mov
sub
arpl
xor
neg
fwait
iret
jecxz
std
add
jecxz
or
mov
dec
mov
xchg
jo
xor
pop
ret
cld
mov
fwait
push
lahf
cmp
das
or
mov
mov
xchg
push
cmp
pop
push
mov
sahf
push
mov
xchg
(bad)
sbb
sbb
pop
in
pop
adc
test
neg
mov
mov
cmc
aas
push
sbb
pop
or
dec
mov
adc
fimul
xor
jns
sbb
retf
and
push
(bad)
adc
fcom
adc
mov
push
je
sub
xchg
cmp
pop
mov
mov
enter
xchg
jno
out
and
pop
lock
cld
dec
ja
popa
jnp
add
add
fwait
in
cmp
sbb
mov
sahf
dec
pop
cmp
jecxz
leave
loop
adc
or
sub
(bad)
loopne
int3
push
and
xchg
pop
xor
sbb
aas
and
aas
push
cmc
mov
sub
dec
cmp
add
shl
cmp
mov
and
inc
pop
xchg
add
push
cmp
pop
jns
mov
cmp
call
call
push
int3
fadd
fwait
out
aam
fmul
scas
jl
mov
ror
stos
(bad)
std
les
jmp
(bad)
mov
(bad)
or
imul
adc
lds
sub
scas
xchg
push
into
in
xor
add
mov
fsubr
xor
stos
fmul
in
sub
test
movs
lods
mov
cmp
fwait
or
ror
sub
mov
cmp
les
int3
stc
jo
jge
ret
mov
mov
ror
btr
mov
rol
leave
fsubr
or
sbb
or
nop
mov
dec
dec
and
movs
pop
sbb
add
inc
cmp
mov
mov
xchg
xchg
push
mov
push
or
nop
mov
push
sbb
(bad)
daa
jo
imul
repz
sahf
pushf
leave
stos
push
outs
rcr
push
jns
(bad)
pcmpeqd
push
and
fld
dec
mov
pop
mov
(bad)
and
scas
push
call
not
push
shr
mov
shl
and
cmps
jne
adc
outs
test
jnp
mov
xchg
sbb
aad
cmp
pop
leave
addr16
adc
ins
ret
sbb
pusha
sub
mov
push
jo
mov
pop
ins
inc
(bad)
adc
popf
outs
into
(bad)
push
jmp
mov
sub
push
out
popa
loopne
push
das
in
cli
sub
xor
adc
dec
sbb
sub
jg
sbb
mov
sub
push
xchg
mov
mov
xchg
and
lods
das
inc
es
jmp
lahf
stos
je
data16
xchg
jl
popa
call
xor
jmp
xchg
xchg
lods
xor
jge
inc
mov
xor
out
mov
cwde
aad
div
call
scas
(bad)
push
in
dec
push
mov
scas
pop
xor
fs
adc
in
push
(bad)
pop
imul
dec
aas
push
or
mov
mov
out
das
pop
push
ror
out
out
int
or
sbb
arpl
into
repnz
dec
stos
arpl
imul
ret
stos
mov
popw
or
inc
xchg
imul
and
xor
fsub
xchg
fcomp
dec
or
test
push
fs
inc
fldcw
adc
popf
jg
mov
call
pop
int
leave
loope
test
cld
xor
lods
aaa
xchg
scas
jmp
inc
pop
adc
outs
jl
sbb
xchg
mov
les
xor
cld
sub
repz
jp
cs
pop
inc
sub
xchg
(bad)
repnz
pop
lock
arpl
push
jo
leave
sbb
imul
or
xor
mov
repz
jbe
jle
xchg
ds
mov
push
inc
sbb
or
mov
mov
leave
ficomp
cdq
cmp
(bad)
ins
pop
lea
cwde
inc
jo
pop
mov
into
mov
cmp
pop
push
ds
arpl
cli
xchg
or
mov
mov
sub
jge
retf
fidivr
dec
dec
sbb
popf
dec
ins
adc
ins
sbb
and
aad
push
mov
mov
sar
mov
addr16
sbb
sbb
hlt
xchg
shl
cmps
std
fstp
pop
cmp
movs
cmp
mov
scas
sar
pop
mov
out
adc
retf
xchg
fcmovnu
xchg
push
xchg
cmp
icebp
jmp
or
int3
adc
(bad)
aas
adc
out
sub
cmc
iret
loope
stos
sbb
rcl
stos
stos
imul
loop
movs
popf
cmp
(bad)
lods
jo
fistp
sub
ins
movs
and
mov
cmp
adc
in
jnp
sub
jl
adc
xchg
cmp
cmp
cs
out
xchg
daa
(bad)
retf
ror
cmp
xchg
ret
loop
cmps
popf
(bad)
pop
or
pop
sbb
adc
pusha
jle
test
aaa
cmp
mov
inc
leave
retf
cmps
sub
ins
leave
sbb
cld
(bad)
pushf
push
fdivr
sahf
adc
cmp
and
pop
sbb
xchg
pushf
outs
pop
idiv
xlat
push
pop
push
push
xor
pop
retf
out
xor
movs
imul
push
jmp
sbb
dec
stos
call
ins
pop
add
xor
pop
mov
ins
inc
out
jge
jl
xchg
ror
xchg
scas
xor
out
pop
push
pop
loopne
xchg
xchg
iret
daa
sar
add
adc
aad
push
shl
xor
mov
inc
lods
stos
inc
(bad)
not
movs
fwait
cmp
xor
jle
add
div
iret
mov
adc
or
jne
jbe
pop
ret
xchg
ins
jp
mov
(bad)
mov
inc
rol
jecxz
cdq
mov
xor
and
sahf
pushf
sub
(bad)
imul
hlt
icebp
scas
bound
retf
fsub
aas
cmp
outs
sub
sbb
dec
add
fwait
les
jmp
clc
xchg
cmp
sub
sar
jl
dec
jp
jae
jae
iret
inc
mov
dec
dec
ret
aam
pop
fsub
iret
fmul
lahf
dec
pop
dec
pop
push
das
dec
arpl
push
jp
mov
fcomp
pop
sub
mov
fsubrp
sbb
sbb
js
mov
scas
xlat
jnp
sbb
fucomp
pop
sbb
cs
(bad)
(bad)
out
add
mov
iret
in
arpl
or
ret
sub
(bad)
cmps
bound
ret
and
adc
cld
pop
aaa
push
xor
sbb
adc
sahf
or
repz
call
or
push
or
repz
push
sbb
inc
jl
mov
dec
fwait
gs
cmp
(bad)
in
add
outs
push
xor
sti
xchg
mov
fdiv
shr
sbb
retf
pop
je
sbb
test
push
(bad)
fisttp
fild
lock
cmps
add
adc
sbb
cdq
push
mov
mov
xor
inc
loope
xor
movs
jbe
mov
xchg
xchg
sbb
mov
jne
(bad)
(bad)
fs
pop
sub
loop
loope
xor
adc
or
lock
push
and
add
das
dec
jo
retf
retf
mov
pop
test
test
sbb
push
ds
pop
pop
cld
sbb
mov
inc
fld
pushf
mov
out
add
retf
sbb
mov
test
cmc
fs
loope
xor
cmp
sar
jmp
pop
aad
rol
pop
test
test
xor
mov
xor
inc
jnp
scas
inc
jb
sbb
cmp
xor
sub
in
cdq
mul
sub
or
js
test
std
fild
mov
loopne
rol
ret
push
pop
cld
jo
adc
js
cmp
popf
aad
cmp
rol
adc
xor
dec
fstp
in
pop
xchg
mov
sub
xor
je
sub
add
push
cld
repz
movs
into
in
push
out
ret
pop
xchg
movs
push
xchg
dec
movs
fldenv
mov
push
xchg
xchg
dec
dec
test
pusha
shl
sbb
jl
dec
lahf
xlat
je
jnp
dec
pop
rcr
push
add
dec
dec
sub
xor
mov
jmp
add
or
shl
sub
mov
scas
retf
jmp
loopne
mov
sbb
pop
sbb
cld
jmp
add
in
into
cmp
jmp
xchg
(bad)
pop
sub
cld
out
jo
mov
xor
movs
or
lods
ins
sbb
outs
call
jmp
mov
mov
out
fistp
adc
test
cmps
adc
dec
mov
mov
adc
fidiv
out
daa
out
push
cmp
or
sbb
(bad)
mul
pop
sbb
xchg
inc
lods
out
mov
inc
test
fcom
dec
or
mov
fcom
add
std
dec
arpl
movs
mov
push
dec
fisttp
inc
in
jecxz
hlt
scas
sbb
and
rcl
addr16
inc
sub
mov
imul
pushf
sar
pop
(bad)
sbb
call
mov
add
addr16
ds
call
aam
cmp
push
inc
cmps
sbb
adc
(bad)
add
rcl
repz
aad
in
ja
out
xchg
mov
jb
cmps
into
cmp
push
ja
mov
push
add
pop
fsubr
rcr
dec
dec
ss
or
mov
pusha
sbb
mov
pusha
sbb
sub
inc
mov
jp
push
je
jnp
lods
test
(bad)
jg
sub
repz
dec
jp
adc
popa
popf
mov
push
mov
push
test
mov
mov
pusha
cmp
fs
sbb
jecxz
into
les
jns
push
mov
xchg
je
xchg
retf
dec
(bad)
mov
scas
ss
dec
neg
retf
int3
nop
jne
adc
cmp
sbb
cmp
jne
inc
pop
mov
leave
adc
loop
int3
jnp
jnp
cmps
js
aas
xchg
inc
dec
sbb
and
ror
add
stc
stos
xlat
xor
fcomp
push
add
mov
sub
fwait
(bad)
sbb
popf
push
xchg
test
sub
mov
shl
inc
jb
pop
ins
sub
scas
in
les
jns
or
std
ror
mov
ret
and
jbe
(bad)
fdiv
push
adc
cmps
mov
in
xchg
mov
pusha
push
cmp
sub
fcom
jb
xchg
test
clc
pop
shr
out
dec
mov
cmps
xor
xchg
inc
leave
push
cmc
ds
imul
push
in
mov
cmp
stc
loop
mov
dec
iret
iret
sub
push
shr
lahf
(bad)
std
mov
les
cmps
cmps
mov
(bad)
dec
mov
fisubr
jo
sub
(bad)
push
mov
xchg
cld
imul
in
inc
and
aad
mov
jl
pop
sub
es
dec
popf
add
lahf
(bad)
xor
hlt
xor
sbb
push
ins
pop
cmc
or
in
xor
ret
out
scas
in
ins
retf
mov
cmp
xor
in
(bad)
xchg
mov
aaa
sub
jl
fnstenv
enter
add
xchg
xor
mov
neg
or
fdiv
lds
jo
sub
shr
jmp
int
loopne
nop
je
jns
add
or
enter
pop
add
enter
adc
repz
aas
mov
jnp
jb
(bad)
es
push
xchg
sahf
sub
ror
cdq
mov
push
out
aaa
fist
cmc
sub
jo
xchg
mov
jle
(bad)
sub
pop
in
add
push
pop
xchg
and
pop
leave
call
jo
cmp
mov
je
and
cmps
aam
popa
clc
mov
fcomp
outs
sub
or
push
neg
jno
dec
sar
cmp
or
int
lods
addr16
jl
fadd
loopne
xor
cmp
sbb
stos
cmp
jle
pop
ds
push
jbe
lahf
adc
aad
in
icebp
sub
push
xor
call
sub
outs
ja
and
mov
pop
mov
cmp
mov
out
cmp
mov
(bad)
mov
sbb
xchg
(bad)
sbb
inc
mov
push
adc
cmp
in
pop
pop
push
cld
dec
fsubr
std
mov
sti
jmp
adc
sub
sub
pushf
mov
xchg
sub
push
dec
mov
mov
adc
cmc
cmp
outs
inc
cmps
mov
adc
jns
mov
les
(bad)
jecxz
mov
iret
adc
xchg
fnstsw
int3
out
inc
xchg
xor
mov
adc
mov
cmp
add
pop
xchg
sub
aaa
xor
xchg
retf
and
mul
imul
or
es
and
rdmsr
test
sub
mov
sahf
fs
shl
xchg
adc
rcl
ret
cmc
retf
xchg
shr
sub
(bad)
vunpckhpd
jno
or
sbb
or
xchg
push
popf
js
add
jl
or
xor
xchg
inc
dec
iret
mov
xchg
popa
sbb
jo
xor
push
call
imul
mov
or
fmul
sbb
push
mov
imul
sti
sar
mov
sti
(bad)
sbb
jnp
arpl
outs
mov
call
lods
ret
call
cmp
ins
es
retf
dec
std
sub
add
and
inc
outs
ja
pop
int
push
dec
cmp
inc
mov
js
(bad)
daa
fnstenv
loop
inc
pushf
mov
repz
test
pcmpeqb
inc
and
jl
ja
(bad)
shr
(bad)
mov
mov
rol
sub
xchg
sub
daa
mov
fist
(bad)
das
rcl
neg
mov
fcmovne
xchg
cdq
push
aad
cwde
cmp
cmp
mov
add
sub
in
sahf
push
add
iret
arpl
mov
lods
pop
in
push
imul
add
mov
inc
aaa
scas
fidiv
mov
adc
jp
shl
ror
sahf
lock
and
(bad)
aam
pusha
out
jmp
in
lea
xchg
mov
aas
and
repz
mov
and
out
es
xchg
loope
fisub
sti
adc
adc
arpl
bnd
outs
pop
popa
mov
xchg
fist
out
xchg
cmp
mov
cdq
pop
dec
jne
inc
mov
retf
stos
mov
rcr
(bad)
imul
cmp
inc
cwde
or
and
or
lahf
nop
push
fcmovu
cmp
sbb
mov
or
push
jle
sub
inc
pop
mov
pop
mov
mov
inc
imul
push
add
inc
fist
stos
xchg
adc
aas
push
sar
sub
xchg
lock
loopne
mov
rcr
adc
push
stos
jmp
dec
xchg
loop
in
xor
inc
sahf
xchg
scas
out
or
jnp
lods
icebp
popf
push
or
mov
push
das
mov
adc
jge
stos
push
xchg
icebp
sub
mov
xor
dec
add
pop
jo
into
inc
repz
cmps
mov
rcr
cmp
fadd
jmp
and
imul
ins
mov
movs
mov
pop
fwait
loopne
arpl
enter
enter
jecxz
sbb
cmps
mov
mov
test
shr
or
mov
mov
jmp
pop
daa
retf
xchg
push
or
aas
mov
lods
gs
pop
rcl
pop
retf
fild
mov
mov
maskmovq
test
mov
imul
lahf
adc
add
inc
leave
jl
clc
out
(bad)
fcomp
dec
cmps
mov
scas
icebp
dec
cmps
aad
sub
bound
push
pop
jge
jbe
xor
mov
mov
jle
dec
sbb
gs
ja
nop
out
lods
mov
adc
mov
add
call
mov
and
jno
fnclex
xor
push
inc
jmp
popf
addr16
jmp
xor
adc
pop
stc
iret
inc
sbb
xchg
xchg
lods
add
or
adc
jae
push
sub
rcl
mov
mov
sti
jmp
xchg
(bad)
and
iret
retf
aad
adc
mov
push
lock
retf
add
daa
outs
push
(bad)
or
iret
addr16
xor
inc
adc
xlat
test
sti
stos
adc
mov
loopne
cmc
popa
adc
call
dec
and
mov
sub
pop
jmp
(bad)
dec
mov
int
push
retf
push
push
adc
mov
bound
test
imul
imul
daa
retf
cdq
push
jle
and
ja
xor
aad
cmp
(bad)
push
jp
dec
adc
jmp
mov
cmp
(bad)
sti
mov
sti
xor
popa
mov
inc
push
ins
mov
js
mov
test
in
cmc
cmp
inc
clc
push
pop
jns
mov
dec
pop
enter
lahf
push
sti
pop
loop
fnstcw
clc
or
retf
cmps
and
mov
sub
jmp
jnp
lahf
push
cld
mov
mov
mov
or
cmp
pop
jle
(bad)
out
pushf
push
(bad)
and
push
mov
pusha
imul
sahf
adc
cmp
mov
int
cdq
pop
ror
pop
fild
cmc
mov
inc
popf
xor
xor
push
mov
mov
jo
loop
adc
repz
fsubr
push
mov
xor
jae
shr
sbb
push
sub
gs
js
dec
movs
ss
mov
rol
cmp
push
mov
popa
sahf
in
sar
inc
retf
push
int3
add
test
push
xchg
addr16
cmp
adc
pop
lods
int3
into
pop
xor
or
sub
iret
popa
pushf
shr
add
repz
mov
(bad)
and
lea
lods
jnp
shl
adc
sbb
out
arpl
arpl
jecxz
jbe
(bad)
push
imul
ret
jmp
(bad)
bound
iret
xchg
mov
imul
imul
cmp
stos
mov
sbb
jmp
and
push
mov
rol
retf
dec
stos
sbb
push
add
ret
pop
xor
(bad)
jb
sub
xchg
add
adc
out
pushf
repz
es
test
retf
test
push
js
outs
jmp
bound
in
pop
imul
dec
push
mov
jns
or
sahf
cwde
jo
cmp
call
call
int
adc
xchg
inc
in
add
stc
xor
daa
sub
js
pop
popf
mov
push
sbb
(bad)
iret
push
mov
rcr
xchg
rcr
int
fucomip
int3
fld
ins
in
pop
xlat
mov
nop
js
xor
fcom
push
rcr
lea
lea
retf
pop
sbb
int
dec
mov
mov
xchg
popa
xor
push
adc
into
push
ret
jae
pop
or
pop
(bad)
das
inc
and
scas
popa
pop
jl
aad
jl
cmp
jbe
fsubrp
push
mov
imul
and
retf
inc
mov
lods
in
and
imul
xchg
cld
(bad)
jb
sub
and
mov
pop
loope
jl
dec
push
mov
mov
mov
dec
sbb
mov
in
sbb
xor
mov
push
movs
std
xchg
cmp
push
pushf
bound
jg
dec
sub
int
cmp
pop
push
je
scas
out
add
sahf
sbb
sub
adc
icebp
stos
lods
push
cmp
xor
popa
hlt
mov
pand
fwait
(bad)
xor
jno
pop
iret
cmc
rcl
add
(bad)
mov
cmps
stos
fld
cmp
das
xor
push
or
mov
lods
add
cs
and
imul
xor
fld
out
ret
(bad)
pop
push
iret
pop
fidivr
sahf
mov
fwait
push
loop
nop
clc
mov
xchg
rcr
out
adc
mov
scas
das
out
dec
ror
ret
xchg
ins
jmp
dec
test
icebp
sub
mov
popf
push
cld
lods
mov
arpl
jb
push
loop
fmul
or
mov
cmp
shl
or
inc
dec
sub
pop
ret
and
xchg
jo
and
test
cmp
inc
jge
mov
push
mov
fmul
fimul
js
pop
add
sub
neg
cmps
(bad)
push
and
pop
push
ins
les
gs
je
adc
sub
ret
shl
add
in
mov
loope
add
repz
mov
retf
ds
mov
push
test
xor
adc
mov
pop
or
enter
scas
fcom
in
jbe
inc
mov
nop
out
cld
xor
mov
mov
mov
paddusb
mov
jp
mov
or
push
pop
cld
mov
ds
push
bound
ss
adc
enter
lahf
in
in
fadd
or
fsubr
inc
sbb
lods
popf
pop
shr
dec
pop
inc
or
lods
in
shr
pop
mov
fwait
in
lds
dec
pop
test
loope
cmp
cmps
enter
xchg
retf
mov
fnstsw
sbb
jge
pop
dec
push
ins
pop
pop
pop
dec
mov
imul
jecxz
ins
imul
jl
sbb
or
(bad)
sar
inc
int3
xchg
mov
out
and
pop
aaa
and
dec
sub
lahf
in
fisttp
js
repz
mov
jnp
jge
shl
jl
jge
and
js
dec
add
xchg
xchg
push
adc
(bad)
or
jbe
push
ret
xchg
cld
jmp
sub
repz
xchg
jbe
mov
rcr
cmp
jl
mov
movs
aad
scas
clc
jp
dec
pusha
sub
lahf
pop
dec
cmp
and
jmp
push
into
mov
push
out
pop
push
adc
xchg
(bad)
aas
adc
push
sub
xchg
ins
push
xor
cwde
cld
jb
mov
je
push
(bad)
rcpps
jg
xchg
sar
push
xor
sub
inc
cmp
push
xchg
pop
sbb
test
ss
stc
xor
adc
retf
sbb
fadd
sub
adc
mov
retf
cwde
cmps
xor
aad
inc
call
jnp
scas
sbb
mov
sbb
push
into
jge
ins
mov
or
int
sub
ins
or
mov
aam
jb
mov
dec
test
imul
repz
jmp
mov
add
pop
enter
mov
aaa
adc
fmul
xchg
mov
mov
add
dec
dec
jecxz
add
cli
xor
imul
pop
dec
pop
add
addr16
shl
out
cmp
mov
xor
pop
inc
ficom
stos
xor
xchg
sub
repnz
mov
mov
scas
xchg
call
cmp
adc
sub
pop
sbb
test
rcl
xchg
repz
out
cmp
out
add
pushf
imul
pop
push
push
rcr
and
int3
pop
and
das
pop
sub
and
mov
shr
(bad)
shl
xor
neg
xchg
sbb
sbb
jl
push
xor
cs
adc
movs
xlat
fld
push
sbb
lods
push
sbb
bound
or
pop
and
add
shl
cmp
iret
sbb
xor
sbb
xor
jmp
das
and
out
nop
fcom
jge
mov
lea
pop
push
int
ins
fadd
lods
sub
loop
std
jp
enter
push
cs
div
movs
adc
imul
push
mov
arpl
js
adc
call
xchg
enter
jmp
out
repnz
lea
push
inc
loope
sub
repnz
mov
mov
pcmpgtd
mov
(bad)
jg
fiadd
jbe
sbb
pop
xchg
pop
pop
(bad)
ins
push
ins
inc
sahf
pop
sbb
pop
fcom
retf
fdivr
scas
clc
loope
fdivr
retf
fidivr
scas
out
xor
out
test
jo
mov
retf
jnp
mov
(bad)
ins
ret
pop
sub
and
ret
mov
shr
cmp
adc
bound
les
mov
jmp
jno
std
dec
pop
xchg
and
mov
push
push
pop
or
adc
push
outs
cs
inc
xchg
cmp
scas
mov
ret
and
mov
inc
ja
mov
jns
pusha
fs
movs
dec
sar
out
add
jbe
sub
arpl
xchg
iret
in
jb
push
shr
sbb
pushf
or
mov
popf
std
mov
sbb
pop
popa
stos
(bad)
daa
push
rcl
retf
add
cmp
add
and
dec
xor
dec
lahf
in
mov
or
dec
scas
adc
movs
xor
mov
fisub
retf
xor
or
retf
dec
push
cmp
lahf
lods
cwde
dec
(bad)
hlt
xor
dec
aaa
daa
pop
mov
mov
adc
lods
icebp
inc
and
mov
dec
popa
pop
cdq
ja
xchg
cwde
lea
(bad)
jmp
dec
inc
js
pusha
adc
pop
mov
bound
jl
loopne
mov
cmp
inc
in
dec
das
int3
pop
imul
xchg
sbb
pop
or
(bad)
cmp
push
jecxz
in
sbb
outs
inc
push
fsubr
cmp
pop
in
add
push
cmp
cld
out
jmp
ret
repz
mov
mov
imul
pop
cmp
fbstp
aam
or
sub
add
in
sub
sub
jmp
inc
in
pop
ds
nop
mov
enter
push
jb
mov
jb
adc
arpl
ror
mov
cdq
or
psubsb
arpl
mov
test
inc
out
stos
cdq
xor
add
in
mov
arpl
dec
jmp
cmp
(bad)
clc
jb
jp
setae
gs
aas
jns
cmp
ja
fwait
cmp
stos
(bad)
int3
cdq
dec
mov
inc
mov
sar
add
fcomi
inc
fdiv
(bad)
(bad)
sbb
xor
sub
jge
call
(bad)
lods
dec
stos
imul
push
in
push
mov
mov
loope
in
fld
call
cld
mov
cdq
pushf
adc
pop
mov
xchg
pop
lea
sbb
movs
fisubr
into
mov
push
imul
outs
xchg
retf
jmp
ror
ja
fild
jl
xchg
adc
gs
scas
lock
xor
inc
dec
rol
push
(bad)
dec
pop
xor
sbb
dec
and
pusha
mov
leave
rcl
sbb
call
add
scas
push
add
pushf
out
rcl
mov
mov
pusha
sub
pushw
cli
ror
mov
inc
idiv
xchg
arpl
push
jecxz
sbb
dec
mov
mov
js
push
fnstenv
mov
stc
xor
icebp
inc
mov
sub
lds
push
fucomp
(bad)
push
sbb
hlt
sar
mov
aaa
jl
outs
iret
pop
bound
lahf
and
fidivr
xchg
dec
or
rcr
mov
arpl
retf
ret
jge
hlt
jnp
push
sub
in
and
lock
pop
pop
jo
(bad)
fist
mov
mov
fwait
aas
sub
jp
jp
movs
jmp
xor
xor
add
mov
push
sub
iret
jmp
mov
or
or
shl
fistp
rcl
push
ins
movs
ret
adc
js
fcomp
fcomp
repz
adc
je
mov
push
mov
inc
pop
pop
mov
pop
fwait
pop
fstp
push
ins
lahf
mov
cld
cmc
movs
aaa
pusha
ret
ja
jecxz
cld
jae
hlt
outs
sbb
clc
setae
ss
adc
stos
mov
imul
retf
test
ins
test
or
mov
push
sbb
(bad)
not
iret
out
call
pop
mov
sub
pop
ins
lods
or
out
ret
adc
sub
mov
ror
inc
mov
aaa
jl
popf
repnz
ja
add
jl
(bad)
mov
or
dec
daa
xor
mov
pop
xchg
mov
adc
pop
outs
imul
fisubr
out
popa
xchg
imul
pop
jne
add
mov
popa
and
in
mov
rcl
sbb
imul
mov
ror
push
popf
fwait
jne
add
push
mov
dec
sub
or
xchg
xor
mov
les
pop
jno
pusha
inc
aam
xsavec
xchg
mov
rol
addr16
inc
stos
enter
out
mov
push
arpl
cmp
mov
mov
adc
inc
xor
sub
jp
mov
sbb
cmp
mov
aas
xchg
push
push
adc
sub
lahf
std
clc
xchg
imul
mov
stos
xchg
dec
xchg
sbb
dec
jmp
and
pushf
scas
out
mov
test
lock
mov
push
scas
add
push
sahf
adc
inc
add
fsubr
xchg
mov
enter
push
mov
rol
add
jns
cli
imul
dec
push
pop
jg
xchg
loop
fwait
jns
pop
addr16
sbb
pop
pop
sub
(bad)
xchg
int3
fnstcw
adc
xor
inc
mov
or
adc
dec
setp
fld
mov
jl
xor
cdq
dec
push
outs
std
(bad)
in
xchg
lahf
jmp
and
in
xchg
clc
jl
push
shl
ss
je
dec
mov
push
add
fidivr
fwait
enter
push
scas
pop
nop
jmp
fcomp
or
sub
imul
pop
sbb
cli
aas
push
sbb
rol
jle
cli
pop
imul
pop
adc
ins
ja
loop
jae
(bad)
pop
mov
fst
cwde
sbb
(bad)
call
xor
(bad)
cli
mov
imul
js
nop
rol
jnp
inc
lahf
push
and
pusha
add
xor
pusha
jnp
sbb
xchg
inc
repnz
inc
(bad)
sub
sbb
xchg
mov
scas
pushf
dec
test
int
xchg
pop
push
div
shl
mov
clc
(bad)
repz
enter
int3
sbb
mov
jo
mov
cmps
xchg
xlat
cmp
js
pmulhw
mov
fistp
sahf
retf
cld
push
aad
sahf
addr16
sti
mov
call
int3
scas
push
mov
mov
inc
push
cmp
pop
gs
inc
adc
std
pop
and
out
push
xchg
mov
lock
pushf
popa
push
push
jnp
cmp
mov
push
push
pop
aam
push
sbb
dec
pop
fld
in
pop
jp
inc
inc
push
ret
adc
inc
cmp
lods
push
stos
imul
xchg
and
les
mov
sub
cmp
pushf
std
sar
xor
scas
ins
push
cdq
(bad)
sub
dec
and
(bad)
push
out
inc
clc
push
xchg
ret
mov
jmp
cmc
ror
mov
clc
leave
jle
stos
mov
(bad)
imul
neg
dec
mov
and
scas
mov
adc
sub
mov
cmp
mov
stc
jecxz
rol
push
enter
mov
pop
out
cmp
xor
shl
push
jp
add
jecxz
call
pop
(bad)
mov
inc
xchg
jmp
lock
jp
sub
jg
je
xchg
test
sub
jae
jo
mov
cs
xchg
jb
xchg
loopne
mov
fst
xor
sbb
out
xchg
and
mov
jae
rcr
mov
inc
into
sub
nop
adc
push
sub
jp
imul
div
mov
and
pop
or
repnz
out
sub
pop
push
add
shl
fdivr
mov
inc
sbb
stc
adc
mov
xor
xor
fdiv
jg
jo
sbb
inc
dec
ror
push
repz
fsubr
imul
pop
mov
mov
jg
mov
fstp
lods
stos
lods
sub
pop
push
cli
loopne
jl
sar
mov
test
shr
ja
adc
(bad)
pop
int3
push
xchg
shr
int
adc
aas
pop
inc
cwde
popf
sbb
push
add
scas
xlat
push
mul
xor
push
jbe
jns
arpl
xchg
xchg
sub
inc
add
pop
jmp
inc
adc
rol
mov
inc
sub
push
pop
jbe
aas
clts
aad
sahf
sbb
mov
mov
stc
nop
dec
(bad)
(bad)
loopne
int3
dec
cmp
retf
inc
push
(bad)
(bad)
cmps
out
pop
leave
jns
adc
xchg
das
jno
xchg
push
push
xor
pop
imul
arpl
jne
mov
or
inc
enter
pop
je
adc
daa
fadd
push
test
cs
(bad)
xchg
sub
mov
jmp
cmp
idiv
lods
dec
mov
mov
mov
and
dec
mov
sub
mov
ror
std
div
mov
popf
mov
xchg
stos
pop
jmp
add
and
sub
aas
dec
mov
mov
push
mov
cmp
test
(bad)
mov
cs
jne
sbb
fucomip
fcmovu
sub
sbb
adc
jns
sbb
sub
stos
pop
dec
das
ror
xchg
mov
jmp
enter
rol
xchg
fsubr
mov
sbb
nop
or
sbb
pop
dec
and
adc
jnp
push
xchg
call
push
push
mov
sti
out
cli
fmul
pop
sub
pop
arpl
mov
push
xchg
pop
push
mov
sub
repz
cmps
cmp
pop
out
jnp
or
neg
xchg
add
cdq
mov
cmc
xchg
in
int
sub
in
lods
sbb
push
or
dec
mov
sbb
(bad)
psubusw
inc
or
cmp
jmp
sub
jp
add
mov
(bad)
aaa
push
adc
xchg
imul
jecxz
cmp
(bad)
pop
aad
mov
daa
cmp
jnp
pushf
sbb
fwait
and
jb
aad
push
sbb
pop
fwait
cwde
jbe
pusha
in
adc
pusha
and
into
mov
loop
aam
scas
jbe
sub
lods
shl
push
ins
and
sub
ins
das
(bad)
out
pop
clc
movs
mov
sbb
mov
pop
iret
xchg
cmps
je
adc
out
mov
daa
fs
rcr
pop
leave
out
push
mov
(bad)
outs
popf
sub
out
aad
stos
(bad)
in
jg
pop
pop
xchg
mov
ss
mov
jmp
sbb
pop
xchg
jae
push
dec
push
adc
mov
and
mov
cmp
cmp
jne
dec
mov
inc
push
mov
fisubr
test
push
pop
sbb
sbb
inc
loop
out
cmp
pop
add
(bad)
pop
es
in
sti
shl
xchg
dec
fs
jb
data16
xor
sub
je
pop
data16
push
cld
in
out
pop
push
dec
dec
pop
ds
pop
mov
push
popf
mov
mov
xchg
ins
xchg
push
mov
jl
mov
test
movs
xlat
mov
pop
ins
das
rol
aad
inc
movs
jp
push
outs
push
(bad)
push
mov
pop
imul
iret
pop
lahf
enter
mov
int
sbb
scas
(bad)
cli
imul
xchg
xor
jl
and
xor
add
or
pop
out
inc
fneni(8087
cmp
xchg
int3
mov
add
jb
mov
aad
out
daa
sahf
aaa
pop
and
jb
in
mov
imul
rcl
pop
les
pop
fwait
ja
je
push
add
stos
adc
pop
inc
mov
pop
mov
ins
mov
sbb
xchg
rcr
clc
ins
jl
xor
mov
mov
jae
ds
loope
jne
mov
fidivr
enter
scas
sub
repnz
sahf
lock
imul
dec
stc
inc
test
and
cmps
add
add
sub
push
pop
clc
sbb
mov
iret
cmps
lahf
retf
aam
lds
sahf
das
xchg
lods
xor
test
xchg
xchg
and
push
adc
pop
push
call
in
mov
mov
rol
jg
and
xor
push
test
test
enter
dec
(bad)
adc
jmp
fsubr
xchg
mov
push
sub
sub
call
ins
push
(bad)
push
xor
retf
push
jmp
gs
sbb
dec
mov
icebp
sbb
pop
xchg
hlt
dec
es
pop
push
nop
(bad)
cmp
mov
xor
push
gs
jg
mov
pop
inc
adc
imul
in
fsub
movs
bound
cdq
dec
mov
movs
jmp
in
lahf
mov
int
dec
in
push
xor
inc
icebp
cmps
cmc
shl
lds
push
sbb
and
pop
rcl
mov
fincstp
bound
out
mov
dec
aaa
scas
repz
xchg
jno
push
jnp
clc
xchg
sbb
emms
mov
mov
inc
mov
jle
mov
loop
out
pop
cmp
inc
sub
pop
sub
fcomp
gs
cmps
and
jmp
push
cmp
lods
push
fisttp
jns
xchg
sub
sbb
stc
rol
fldenv
std
aaa
mov
rcl
dec
rcl
call
mov
lods
bnd
adc
dec
scas
dec
std
cdq
or
sbb
retf
or
push
(bad)
ret
fstp
mov
sbb
pop
in
in
mov
in
inc
outs
mov
or
cmp
pop
movs
pop
sti
fstp
and
push
adc
jl
push
and
mov
inc
cmp
int
jo
ret
out
fs
push
mov
aad
adc
push
pusha
fcomi
push
ds
iret
arpl
mov
pop
(bad)
in
mov
pop
push
xor
ror
cwde
jle
test
clc
jnp
mov
int3
inc
fwait
sbb
pop
sahf
inc
test
push
xchg
pop
cmps
push
mov
push
mov
fsubr
sub
and
jle
cmp
jb
aaa
jo
test
shl
inc
leave
clc
mov
or
mov
aaa
mov
adc
adc
scas
cld
lock
leave
adc
js
mov
mov
aam
dec
and
adc
mov
push
jg
pop
and
xor
jle
xchg
in
and
arpl
pop
out
push
adc
sti
outs
dec
add
adc
dec
data16
bound
ficom
retf
xchg
retf
mov
int3
sub
mov
out
pop
lods
pop
dec
stos
outs
sbb
retf
fbstp
adc
in
jge
hlt
js
push
add
retf
mov
lds
fucom
jbe
popa
(bad)
push
dec
stos
sub
popw
and
pop
cdq
les
jl
sub
adc
adc
sub
mov
enter
sub
pop
mov
les
push
test
inc
inc
std
imul
(bad)
repz
sub
iret
rol
push
jmp
adc
shl
inc
cmc
mov
(bad)
into
push
fdivr
out
fwait
ret
aad
dec
push
dec
push
lock
adc
rcr
cwde
cmp
jecxz
mov
xchg
bound
pop
(bad)
scas
sub
mov
mov
xor
int
xchg
cmc
(bad)
call
lahf
xlat
adc
xor
adc
mov
add
dec
xchg
cld
adc
mov
dec
mov
cld
int3
xor
or
mov
dec
dec
(bad)
cmp
jnp
jno
inc
mov
push
push
mov
xchg
test
sub
stos
jmp
clc
pop
dec
dec
clc
test
out
dec
sub
sbb
inc
pop
adc
in
and
sub
retf
test
xor
cwde
(bad)
pop
adc
mov
in
cs
lods
retf
xor
data16
aaa
xor
scas
loope
leave
dec
pop
lea
popf
and
aam
sub
cmp
aad
sbb
ins
mov
fsub
xor
xchg
ss
push
ja
in
enter
aam
hlt
and
dec
in
shl
outs
loopne
pop
push
sbb
xchg
sbb
push
jmp
jo
sbb
popf
and
cld
pusha
inc
sub
jge
sbb
xor
lock
loop
stc
mov
pop
pop
push
sbb
cmp
xor
push
or
xor
cmp
jle
jo
dec
inc
mov
cli
retf
cmps
xchg
mov
clc
out
arpl
scas
test
je
sub
dec
jg
or
sbb
fimul
popf
nop
ins
xchg
inc
ss
cli
mov
pop
mov
mov
and
cwde
enter
or
xor
imul
dec
sahf
hlt
test
inc
add
test
cld
lea
hlt
push
pop
lods
cmp
(bad)
cs
hlt
and
nop
stos
and
lock
int
fsubr
lahf
jge
dec
dec
pop
cmp
mov
fcmovbe
test
push
inc
xor
clc
jnp
fstp
ins
imul
gs
cmps
test
lods
icebp
test
pop
sbb
xchg
arpl
cwde
iret
loope
sti
pushf
cdq
pop
and
fs
cs
inc
out
push
loopne
popf
xor
test
nop
out
in
xor
mov
lock
cld
or
rol
aam
inc
jge
lahf
push
jmp
mov
movs
ret
adc
xor
icebp
int3
stc
jmp
das
dec
mov
(bad)
out
jbe
fwait
and
inc
push
std
add
or
dec
add
sbb
js
cwde
test
sub
movs
lods
arpl
shr
mov
adc
movs
outs
sub
xchg
jmp
mov
sub
adc
dec
or
cli
mov
test
jbe
inc
loop
(bad)
sub
rol
xor
dec
imul
loop
enter
imul
rcl
int
sbb
scas
gs
or
retf
mov
in
fist
hlt
loope
mov
aas
(bad)
in
dec
mov
push
jb
pop
fst
push
in
xor
sahf
jl
lea
xor
sbb
cli
sub
jg
fs
aaa
adc
mov
adc
ins
push
adc
inc
(bad)
mov
jle
mov
call
pop
mov
mov
dec
imul
(bad)
call
jg
mov
push
dec
cs
loope
pop
or
pop
enter
xor
sti
sbb
pop
mov
das
ss
mov
mov
and
dec
cmp
js
sub
leave
sbb
inc
retf
stos
dec
(bad)
fldz
dec
jmp
cmps
mov
inc
movs
push
dec
or
inc
mov
jb
xlat
mov
test
fs
push
or
fsave
lahf
arpl
inc
inc
sub
adc
ss
in
pop
jo
test
cmp
scas
pop
push
xor
pop
xchg
mov
jns
int3
dec
lahf
pop
sysexit
fwait
pushf
pop
xor
(bad)
fdivr
mov
lds
(bad)
ficomp
fwait
jne
inc
movs
jno
fistp
pop
ins
adc
inc
add
shr
lods
jle
sbb
pop
std
jno
xchg
addr16
mov
dec
xlat
push
outs
push
lods
pop
div
and
sub
ret
rcl
clc
call
sbb
enter
inc
pop
or
out
ja
pop
sti
addr16
xor
sbb
shl
sbb
inc
sbb
or
in
or
xor
fwait
sbb
fst
or
sti
push
lods
pop
(bad)
les
xor
jnp
pop
scas
mov
mov
jb
sbb
iret
je
jne
add
xchg
pop
push
push
pushf
and
jmp
aas
inc
xlat
icebp
and
arpl
fldenv
jnp
sbb
push
lahf
xchg
jbe
loope
mov
xchg
sbb
dec
mov
push
cmp
lock
push
imul
mov
pop
scas
les
outs
fs
inc
xcrypt-cbc
cmps
xchg
add
push
addr16
inc
mov
sti
aas
popa
fwait
mov
xchg
mov
sub
out
mov
adc
enter
or
xlat
ret
bound
mov
popa
std
mov
push
shr
bound
pop
inc
pop
into
stc
pop
lahf
in
xchg
or
jo
imul
ss
xor
add
in
in
mov
fld
int
inc
dec
into
(bad)
xor
jmp
push
cmp
sahf
pop
cmps
fwait
pop
push
stc
xchg
dec
hlt
int
test
cmps
popf
inc
cli
aas
out
mov
pop
mov
and
add
(bad)
(bad)
push
xchg
(bad)
pop
mov
dec
sbb
push
sub
pop
push
dec
pushf
imul
inc
stos
in
mov
jmp
mov
xor
fsubr
mov
cmp
arpl
outs
mov
mov
rcl
rcl
sub
jb
xchg
les
mov
popa
xchg
sub
pop
inc
mov
cmps
movs
inc
pushf
outs
sbb
jns
mov
push
pop
mov
clc
nop
repz
sar
cmp
push
pop
add
or
mov
push
mov
test
push
pop
cs
mov
mov
shl
jg
sub
adc
push
pushf
mov
mov
cwde
popf
adc
movups
or
js
or
dec
dec
jg
cdq
xor
mov
xchg
stos
adc
push
into
stos
(bad)
btc
int3
arpl
ja
add
cli
pop
dec
inc
inc
(bad)
dec
pop
arpl
fisttp
add
arpl
and
(bad)
lea
pop
rcl
inc
dec
std
retf
pop
dec
sti
idiv
sbb
pusha
imul
loop
mov
fcomp
dec
pop
dec
fdiv
cmp
mov
jl
xor
or
dec
adc
jmp
pop
mov
adc
sbb
xchg
mov
and
pop
movs
lock
xchg
out
mov
xchg
in
test
pop
shl
inc
cmp
adc
push
adc
xchg
popa
pop
cmp
jecxz
stos
(bad)
je
sbb
test
dec
lock
fild
lods
jp
xchg
cs
jg
into
int
ret
mov
aad
sbb
xchg
pushf
pushf
pop
clc
adc
pop
cmp
rcr
(bad)
iret
jecxz
adc
xchg
inc
sti
lahf
xor
push
push
xor
mov
fsub
pop
sbb
sbb
push
test
mov
push
cmc
test
daa
imul
mov
push
dec
mov
inc
pop
push
popa
(bad)
out
nop
or
jecxz
xor
cmps
loop
inc
daa
pop
push
cmp
jp
imul
jnp
fcmove
or
fs
test
jge
mov
and
loopne
retf
push
ins
cmp
cdq
out
jecxz
in
mov
(bad)
push
test
add
adc
out
daa
push
adc
adc
dec
adc
mov
xchg
jp
jmp
into
and
pop
mov
or
dec
cmp
aam
lahf
xchg
scas
stos
dec
adc
mov
scas
mul
loope
ret
jecxz
js
and
out
retfw
mov
repnz
mov
lods
popf
mov
fst
test
gs
or
or
retf
push
sti
je
cmp
mov
pop
and
js
mov
ss
cs
je
push
cld
ret
shl
mov
jl
jge
popa
lods
stc
lea
pop
cwde
cwde
cmps
popa
xor
cld
sbb
stos
sub
ficomp
pop
or
push
call
xor
stc
gs
jle
je
in
aaa
outs
sub
and
add
cmps
xchg
adc
loop
pavgb
jl
lahf
adc
arpl
or
lock
stos
in
sar
push
movs
push
xor
int
mov
ja
gs
rol
call
and
sbb
mov
pushf
jnp
clc
mov
jg
sbb
jle
rcl
outs
cmp
jo
or
push
or
cs
dec
mov
sahf
mov
cmp
shl
fmul
retf
lods
xor
sti
sbb
add
dec
push
cmp
mov
nop
mov
ja
lock
mov
outs
xor
sahf
ret
int3
fstp
ret
fdivr
(bad)
dec
imul
call
sbb
xor
cld
push
into
aad
in
pop
xlat
inc
xor
and
jmp
sbb
mov
xor
lods
test
outs
pop
mov
sub
out
test
pop
cmps
pop
mov
jmp
mov
sbb
aad
pop
(bad)
push
mov
cmp
mov
dec
hlt
pop
popa
xor
sar
xchg
in
fstp
mul
shl
push
mov
mov
cmp
mov
fistp
xchg
sub
in
cmps
shl
arpl
dec
outs
enter
fs
mov
out
ins
mov
mov
jecxz
push
loope
stos
cdq
pushf
push
jo
cld
sub
jne
pushf
outs
jg
mov
sub
loope
adc
cmps
add
push
ss
pop
jl
ficom
pop
or
(bad)
xor
mov
inc
ins
je
es
js
lock
dec
mov
(bad)
jmp
clc
aas
imul
popa
fdiv
xchg
xchg
xor
dec
(bad)
cwde
add
xchg
call
add
jl
xchg
push
xchg
iret
fldenv
xchg
xchg
xchg
dec
fwait
pop
js
fbstp
clc
scas
xor
jmp
rol
sbb
sub
in
popa
fnstsw
test
pop
aam
repz
jmp
(bad)
daa
sub
stc
sahf
pop
retf
shr
movs
(bad)
mov
xchg
fwait
xchg
and
mov
fsub
sbb
mov
call
or
js
ins
mov
rcr
call
outs
push
(bad)
mul
test
retf
je
gs
stc
dec
jle
jae
rcr
outs
into
mov
mov
dec
adc
xor
dec
ins
jne
imul
out
(bad)
jo
mov
nop
jg
jbe
call
dec
mov
sbb
jge
in
and
fist
cli
fild
les
jle
sahf
out
fcmovnbe
jge
xor
call
fld
pushf
imul
jo
pop
lods
mov
fwait
or
ins
retf
iret
jmp
pusha
mov
pushf
popf
dec
cmc
fld
mov
das
scas
push
pop
cmp
add
je
cmp
lea
stos
test
and
push
test
dec
dec
mov
jae
movs
fnstenv
pop
test
rcl
xor
mov
push
test
cmp
ss
jno
and
lds
in
ret
mov
ret
and
es
inc
mov
lahf
dec
clc
psraw
sub
cmp
(bad)
mov
xchg
shr
inc
fs
mov
xlat
jmp
outs
mov
data16
jns
shl
xor
lahf
retf
outs
push
fimul
pop
or
jge
sub
lea
sbb
test
dec
or
mov
push
jno
mov
fs
sub
fdiv
jecxz
je
xchg
lods
pop
dec
inc
mov
xchg
inc
ret
xchg
push
push
dec
sub
jge
pop
or
test
inc
pop
pop
add
sub
movs
cmp
enter
addr16
in
jmp
sub
push
cld
imul
nop
mov
xor
retf
iret
mov
fld
les
sbb
mov
mov
pusha
jle
and
dec
es
repz
inc
in
xor
out
and
sub
mov
mov
cmp
sbb
fwait
call
test
out
frstor
shr
fwait
(bad)
sub
std
sub
sub
push
xchg
test
call
xor
pop
imul
cmp
jmp
idiv
mov
lods
shl
mov
jb
movs
imul
xor
pop
in
and
adc
jl
clc
(bad)
out
mov
addr16
pop
rol
arpl
clc
dec
fsub
or
xchg
mov
cmp
mov
push
ss
lahf
push
mov
or
push
inc
div
or
pop
(bad)
std
xlat
cmc
inc
cmp
mov
or
pop
lods
mov
xchg
push
and
adc
jmp
(bad)
mov
daa
xchg
aaa
pop
or
sar
mov
dec
sbb
sub
imul
mov
cmp
pushf
lods
clc
fwait
loope
sub
fsubp
clc
arpl
jo
scas
je
mov
mov
push
add
jbe
cmp
sbb
mov
shr
int3
mov
mov
enter
mov
dec
pop
(bad)
loop
stos
cmp
push
lahf
mov
pushf
fs
mov
inc
ss
stos
mov
add
lahf
aaa
xchg
xor
loopne
xchg
test
add
cmc
add
dec
adc
daa
inc
jb
sub
push
push
xor
fwait
aaa
cmp
outs
xchg
test
xor
inc
pop
add
lahf
xchg
adc
daa
test
mov
dec
cmp
and
jno
pop
jecxz
or
mov
add
iret
adc
call
and
mov
mov
xor
cmp
jbe
inc
dec
sub
out
pop
shl
push
adc
outs
inc
punpcklwd
fs
or
mov
ret
sbb
das
cmp
leave
push
into
jge
enter
inc
imul
xchg
add
and
arpl
dec
mov
add
pop
dec
jp
imul
out
out
dec
dec
ins
pop
xchg
pop
xor
push
jnp
xchg
and
fwait
adc
pushf
mov
xor
jo
cmp
xchg
dec
fcomp
sub
mov
mov
mov
push
repz
ret
pop
data16
jp
sbb
in
sbb
loop
pop
mov
mov
sbb
and
jne
stc
push
sbb
sbb
lods
cmp
mov
clc
xor
cwde
mov
std
shl
repnz
pop
nop
push
lods
cmps
xor
and
sbb
call
mov
push
rcr
mov
mov
fdivr
jge
pop
js
in
mov
xchg
test
and
out
fnstsw
fwait
mov
movs
ja
push
xor
push
in
enter
mov
int3
cmp
push
pusha
call
mov
outs
adc
ja
stos
scas
push
lahf
mov
loop
jmp
push
fcom
not
ins
inc
jne
cmp
shl
mov
sub
int3
lahf
les
retf
adc
mov
inc
daa
repnz
cs
das
fs
(bad)
into
fsubr
pop
cmc
jb
icebp
or
dec
dec
arpl
jne
push
stc
dec
xor
inc
cmp
sub
sbb
dec
cdq
test
orps
mov
scas
push
xor
popa
jp
cmps
add
in
out
dec
sub
repz
jl
adc
outs
pop
xor
ds
out
not
mov
mov
sub
inc
mov
or
loopne
les
pushf
jbe
inc
addr16
fiadd
adc
iret
pop
repnz
leave
mov
sbb
inc
mov
pop
fmul
push
mov
sbb
adc
or
stos
cmc
push
retf
pop
fcmovne
fild
bound
mov
push
bound
mov
jge
push
fist
inc
xchg
fsubr
aaa
cmp
movs
loop
dec
(bad)
(bad)
retf
sbb
or
xchg
pop
push
mov
pop
cld
pop
cmps
pop
sub
pop
ret
push
arpl
xchg
jge
and
sbb
sbb
mov
sahf
jecxz
cmp
mov
fld
xchg
mov
int3
imul
aaa
pusha
cmps
dec
ficom
loopne
(bad)
aad
xchg
imul
or
mov
in
or
and
mov
fld
push
cmp
dec
dec
stos
pushf
ret
sbb
mov
inc
fmulp
push
test
pushf
rol
pop
pop
mov
pop
(bad)
and
outs
test
sbb
shr
cmp
or
ret
out
lea
xchg
fst
jo
cld
in
dec
in
xlat
pop
das
inc
inc
sbb
jnp
repnz
ror
jl
push
mov
loope
push
pop
sbb
fisttp
inc
fs
sti
repnz
ja
(bad)
sbb
mov
xchg
movs
push
aam
push
push
jnp
lods
jge
adc
pop
pop
xor
js
xor
ret
sahf
mov
mov
pop
push
in
pop
add
(bad)
sub
inc
out
retf
cmp
push
aaa
mov
pop
xor
jmp
int
pmuludq
test
js
stc
mov
call
mov
retf
inc
test
cmp
sbb
int
mov
out
push
sub
arpl
jecxz
pop
push
mul
ret
mov
and
and
aam
das
in
loopne
imul
push
les
xlat
mov
iret
mov
out
jp
mov
pop
lods
fstp
fldenv
out
es
stc
test
add
call
mov
scas
rcl
or
(bad)
mov
ror
add
pusha
push
popf
xlat
or
pushf
cmp
mov
cmc
iret
int3
ins
xchg
arpl
dec
inc
add
fdiv
cwde
ja
mov
rol
lods
stos
enter
cld
bound
mov
mov
lahf
pop
movs
out
inc
pop
vmread
bsr
pop
adc
sub
add
cld
inc
xor
push
adc
jnp
lods
push
aaa
adc
adc
mov
fisttp
xchg
sbb
sbb
ja
ins
xor
jp
lea
stos
push
cmp
and
sub
mov
fisub
ret
jae
movs
sbb
xor
or
imul
mov
sbb
xchg
push
pop
shr
or
cmc
arpl
add
sub
outs
mov
adc
mov
and
mov
test
push
movs
(bad)
test
hlt
mov
sbb
(bad)
pop
out
xchg
cs
bound
inc
xchg
imul
dec
dec
data16
pop
dec
std
cli
lahf
sbb
imul
xchg
mov
(bad)
and
push
mov
dec
cld
sub
rcl
jb
sub
cld
jle
pop
push
ja
ja
ret
sbb
(bad)
pop
cmps
and
pushf
js
pop
jbe
scas
arpl
pop
mov
sahf
aaa
push
sti
dec
dec
dec
inc
ins
aas
sar
ficomp
rol
xchg
or
lahf
cwde
jmp
jmp
pop
int3
or
inc
lods
xor
mov
shl
out
sub
cdq
or
cwde
ror
jb
mov
adc
sahf
sbb
in
icebp
pop
add
xchg
movs
rcr
sbb
ds
(bad)
and
xlat
and
aad
cld
xor
movs
add
jae
movs
(bad)
mov
dec
sub
lock
xchg
in
call
cs
xor
call
imul
xchg
paddusb
fsub
pop
clc
mov
movs
into
adc
dec
aam
and
mov
mov
push
cs
mov
sub
repz
jmp
mov
aam
call
xor
mov
mov
retf
ins
pushf
rcr
out
sbb
bnd
aam
push
jl
pop
mov
out
inc
out
inc
in
xchg
jl
lock
mov
popa
cmp
retf
push
jbe
xchg
adc
sbb
jg
mov
mov
xor
enter
imul
sbb
sti
and
retf
lahf
push
dec
mov
fs
pop
rcl
push
mov
and
mov
push
or
pusha
or
cmp
movs
xor
inc
scas
std
clc
leave
jnp
imul
test
sti
test
arpl
sub
sbb
and
fsubr
xor
push
pop
push
ja
sub
int
ret
out
adc
xchg
push
or
ja
test
stos
mov
es
add
pop
sbb
pusha
jg
retf
(bad)
dec
jnp
mov
xchg
pop
mov
rcr
pushf
pop
addr16
cmp
imul
mov
mov
xor
push
adc
cmp
dec
nop
pop
retf
xor
pop
sbb
movs
pushf
repnz
clc
cmp
fild
xchg
lods
add
jg
cmp
ins
inc
sbb
fild
xchg
dec
outs
and
out
xor
dec
sti
retf
repz
sahf
ror
cmps
pop
sbb
cmp
pop
push
or
adc
cld
cmp
push
sbb
fild
pop
sti
repz
shr
cmp
outs
push
cmp
ins
mov
fild
(bad)
push
aas
lods
adc
lahf
bound
adc
aaa
fild
loope
xchg
mov
call
cld
stos
arpl
adc
sbb
fild
out
jl
stos
push
mov
pushf
enter
mov
mov
pop
dec
jl
adc
fild
pop
cmp
cwde
pushf
dec
xchg
lock
and
hlt
xor
sti
pop
pusha
pop
push
ret
scas
sbb
xor
rcl
pop
inc
jl
adc
(bad)
pop
lea
adc
pushf
imul
jl
adc
fisttp
adc
int
arpl
sub
es
hlt
cwde
mov
xor
push
in
cmp
scas
loopne
pop
movs
and
xchg
push
pusha
inc
inc
ins
aad
push
pop
adc
sahf
ins
mov
cmp
lods
pop
sti
aas
pusha
aam
pop
lods
pushf
cld
popf
bound
repz
pop
ins
jl
adc
fisttp
pop
inc
jge
adc
cld
pop
aam
push
(bad)
out
pop
(bad)
jl
adc
fstp
js
pop
arpl
mov
ins
in
push
sahf
sti
lea
imul
dec
imul
push
mov
pop
out
test
fcmovnu
pop
(bad)
jge
adc
xchg
adc
mov
pop
in
cmp
aas
pusha
data16
sub
in
aaa
sbb
in
loop
cld
adc
fwait
sti
fdivr
or
lock
popf
pop
stc
nop
sti
dec
ins
adc
fild
dec
cmp
and
dec
jecxz
into
mov
sti
fwait
mov
dec
in
add
cmp
fldcw
les
int3
fdivr
out
pop
push
jl
xchg
or
xchg
js
cmp
xor
fstp
adc
fwait
dec
fadd
or
inc
nop
popf
or
clc
mov
add
in
popf
sbb
xchg
call
js
push
cwde
outs
push
sbb
xchg
in
lahf
cmps
sti
in
fwait
pushf
jmp
sub
fldcw
xor
arpl
out
or
adc
pop
pusha
fist
sbb
in
pop
xor
jle
adc
fcmovnu
push
or
adc
sbb
fs
push
add
pop
xlat
addr16
pop
aaa
mov
pop
rol
mov
cli
or
cmp
lods
test
lods
cwde
out
ins
jecxz
rcl
cmc
sub
jns
cmps
jae
(bad)
retf
jp
cmp
xor
jnp
mov
and
addr16
das
cld
ins
dec
mov
ror
rcl
mov
shl
cmp
rol
retf
imul
mov
mov
rol
test
icebp
mov
inc
and
xchg
cmp
and
in
jo
cmp
mov
loopne
mov
and
jnp
pop
test
xchg
loop
push
fwait
inc
ret
mov
sar
push
xor
(bad)
jle
arpl
sbb
pop
mov
inc
iret
scas
pushf
in
cmps
sti
jg
jg
xchg
xchg
pop
add
mov
ins
in
mov
xchg
xchg
cmp
jno
mov
cmp
aad
out
ja
lods
xor
push
(bad)
jg
pop
cmp
adc
sar
pop
or
or
(bad)
outs
sbb
and
mov
out
stc
xchg
dec
push
sub
sbb
mov
pop
seto
xchg
aas
es
daa
ins
mov
and
ret
push
ret
int
fwait
xchg
sub
and
jg
dec
(bad)
imul
sti
push
sti
adc
or
cmp
push
pop
arpl
sbb
jb
sub
sti
dec
cmp
ss
mov
jg
outs
xchg
xchg
cmps
xor
sti
dec
push
cmp
inc
arpl
mul
pusha
xchg
stos
psrlw
ja
inc
pop
in
mov
cmps
jecxz
movs
add
mov
scas
cmp
add
mov
mov
mov
xor
aas
or
cli
add
dec
jmp
push
(bad)
call
ins
repz
pop
pop
push
stos
push
mov
mov
js
mov
in
je
cmp
jl
repz
or
stos
gs
sub
mov
push
mov
loope
pop
out
and
cmp
ret
ror
daa
es
jg
cli
cmp
inc
dec
aas
xor
mov
fs
xlat
aas
retf
pop
sti
jns
shr
(bad)
iret
dec
push
aas
test
stos
sbb
int3
lock
shl
inc
mov
pop
mov
xchg
sub
cwde
mov
adc
out
gs
loope
sbb
cli
adc
inc
(bad)
mov
pop
sbb
das
jnp
ins
sub
xor
push
shl
fld
and
cwde
sbb
out
mov
das
stos
imul
push
mov
mov
dec
(bad)
cmp
icebp
cld
jb
or
pop
adc
xlat
stos
ret
xchg
scas
xor
clc
(bad)
lods
repz
adc
imul
and
xor
dec
pop
jmp
pop
mov
dec
inc
pop
sbb
xchg
icebp
into
iret
and
jmp
xchg
loopne
jae
outs
repnz
jno
adc
xchg
and
or
sbb
or
fbld
push
and
xchg
movs
push
inc
sbb
js
jb
adc
fstp
xlat
lds
xor
adc
cmp
rcr
(bad)
sbb
and
ins
jbe
repnz
mov
dec
sbb
std
mov
std
pop
sub
popa
pop
data16
pop
mov
cmp
in
cmp
pop
aaa
and
pop
xor
sbb
inc
cmps
arpl
mov
fild
cli
pop
or
mov
ror
mov
es
pop
es
iret
inc
jg
pop
mov
cmp
fdiv
rol
into
adc
push
nop
or
ror
jecxz
test
xlat
push
rcl
into
and
cmp
jg
sbb
push
push
out
ret
dec
xor
mov
pop
add
sbb
push
adc
sahf
jge
xchg
(bad)
mov
dec
cmps
iret
pop
pop
mov
pop
and
fcomp
sub
ja
arpl
(bad)
inc
sar
retf
arpl
inc
stos
push
test
cmp
dec
adc
pop
int3
cmp
cmp
cmp
out
adc
ror
mov
adc
push
loopne
call
(bad)
pop
outs
adc
xchg
add
ins
call
cmp
push
mov
push
mov
cmps
xchg
call
scas
lods
xchg
inc
xchg
xchg
movs
mov
jecxz
xor
stos
mov
lahf
aam
sbb
enter
xor
out
xchg
xchg
in
lods
inc
popa
int3
repz
cmp
lea
cwde
push
cmps
mov
into
popa
inc
pop
xor
into
cmp
dec
test
dec
push
mov
jb
push
fcom
mov
mov
stos
(bad)
xchg
xchg
dec
xchg
and
adc
xor
inc
mov
(bad)
xor
pop
cmps
xchg
repz
outs
push
add
mov
mov
hlt
aas
loop
xor
push
sbb
dec
loope
add
js
imul
rcr
popf
pop
fs
sub
repnz
cmps
xchg
xchg
lea
add
push
cli
outs
imul
xchg
or
ja
jns
dec
gs
sti
imul
adc
int3
sti
into
repnz
cmps
dec
outs
mov
sub
pusha
push
nop
push
cmp
mov
pop
cmps
sub
cmps
adc
and
sub
push
mov
int3
movs
mov
or
inc
idiv
jp
adc
jl
xchg
fwait
sbb
icebp
or
push
inc
mul
add
jmp
stc
arpl
sub
in
cld
je
dec
add
out
mov
rep
sub
cld
sub
fs
sbb
cwde
or
cmp
ss
ficom
sbb
jnp
pop
retf
pop
addr16
mov
push
inc
mov
jp
push
push
mov
adc
pop
std
mov
mov
or
push
neg
pop
add
or
xchg
adc
test
dec
(bad)
mov
push
in
and
shl
adc
dec
ficom
clc
dec
xchg
mov
push
sub
or
mov
aad
jecxz
and
push
out
stc
lock
fdivrp
test
lahf
sar
xor
mov
add
lock
sbb
sub
dec
scas
popf
dec
div
mov
cmp
enter
call
xchg
jb
add
aam
jnp
jg
adc
cmp
sbb
cmp
jg
xchg
jbe
adc
sub
aaa
sbb
sub
aaa
add
outs
imul
sub
mov
mov
shr
cli
ss
dec
ins
dec
jge
inc
cmps
mov
jno
pop
sub
push
cmp
loopne
pop
jl
rol
sub
sub
add
cs
xchg
mov
std
loope
ins
cmp
add
xchg
int3
inc
dec
sbb
es
mov
jp
pop
rcl
and
ror
stc
push
mov
xchg
sbb
outs
push
popf
fwait
outs
das
dec
fisttp
ins
int
scas
jge
cld
lahf
frstor
and
jl
icebp
xchg
jmp
jp
popf
test
je
ds
add
cmp
sub
adc
adc
xchg
cwde
mov
retf
stos
mov
ror
xlat
push
in
sti
sub
das
ds
push
sub
adc
mov
sahf
pop
out
jmp
push
add
lock
dec
outs
data16
push
femms
jb
rcr
pop
add
adc
pop
mov
iret
jg
js
pop
sbb
pop
xor
das
pop
push
enter
ret
aam
jb
scas
jge
push
and
sub
xchg
mov
call
lock
push
out
aam
push
out
xchg
mov
adc
in
mov
push
mov
mul
cwde
sub
scas
(bad)
jo
mov
popa
xchg
retf
adc
enter
xor
xchg
mov
adc
shl
fst
inc
jecxz
add
shl
adc
popf
sar
cdq
out
jle
push
ins
adc
or
jle
jmp
jmp
cmp
xchg
sbb
neg
scas
fs
and
test
ja
sbb
xor
aas
or
push
test
adc
pop
sub
loop
sub
sbb
mov
pop
sbb
push
inc
iret
xor
sbb
ficomp
dec
int3
lds
cmc
ss
test
sbb
pop
rcr
sub
jo
ret
jg
out
ret
sbb
test
inc
pop
jbe
test
xor
mov
mov
clc
push
mul
pop
outs
push
shr
das
inc
js
xlat
pop
pop
jnp
movs
test
mov
dec
mov
adc
pusha
xlat
fmul
mov
mov
mov
lea
je
cld
scas
add
int
outs
fbstp
dec
xchg
push
pop
cmp
push
or
jecxz
in
icebp
pop
and
out
ins
or
push
xlat
lea
dec
sbb
cmc
pop
test
mov
jg
int
xchg
push
and
sbb
mov
out
jmp
je
mov
fldcw
add
movs
mov
imul
jne
repz
sub
aad
sbb
sbb
mov
das
imul
enter
shr
loope
pushf
xchg
call
cmp
into
loop
clc
(bad)
and
xlat
js
cdq
cmp
mov
ja
sahf
je
add
cmps
xor
mov
sbb
and
cli
lock
repnz
mov
iret
cwde
aas
mov
cwde
push
pop
nop
sub
cwde
or
stc
ret
retf
add
pop
push
inc
lock
pop
out
and
jg
cwde
loopne
xchg
jmp
jnp
adc
sub
adc
mov
xchg
lods
push
das
scas
fistp
mov
xchg
jmp
lods
jbe
lea
daa
lea
lea
stos
dec
mov
(bad)
push
pusha
in
stos
(bad)
push
xor
in
fcomi
and
jl
fisttp
jmp
ss
pushf
jp
mov
arpl
nop
push
cmp
cli
sar
mov
call
cmps
imul
xchg
xor
push
mov
loope
jg
aad
mov
cmp
cmps
xchg
jae
jle
out
(bad)
rcr
int3
xchg
add
enter
mov
test
mov
outs
sbb
or
add
sbb
ins
and
je
outs
ret
lods
in
(bad)
mov
je
xor
mov
xchg
dec
retf
mov
cld
push
std
sbb
sbb
xchg
dec
jge
dec
xor
shl
pushf
fwait
bound
jl
xchg
adc
pop
stos
sahf
cli
ret
xchg
xchg
test
rcr
xchg
iret
fwait
das
fcmovu
out
pop
(bad)
sub
ret
std
and
stos
pop
mov
fcmove
xchg
sahf
pop
aaa
sahf
nop
xchg
mov
shr
nop
cld
adc
and
mov
sti
std
jecxz
pop
das
stos
pop
mov
ins
and
les
inc
cwde
mov
mov
std
popf
or
xlat
xor
int
mov
pop
sbb
or
mov
push
cld
sti
dec
push
shl
push
sysexit
mov
sahf
push
xchg
push
xor
out
pop
shl
repnz
bound
scas
push
push
mov
movs
dec
jmp
mov
test
shr
mov
test
aad
imul
les
ins
xchg
arpl
and
mov
and
into
popf
cmp
imul
(bad)
xchg
push
dec
ins
push
sbb
xor
mov
mov
retf
cli
data16
mov
xor
dec
fmul
lods
je
pop
inc
jne
cld
xchg
pop
push
fisttp
jp
nop
xchg
pop
push
xor
mov
scas
dec
jo
daa
jmp
retf
xlat
rol
cmps
aad
fiadd
adc
pusha
cli
cmp
and
(bad)
leave
and
jecxz
pop
cmp
or
jbe
outs
rcl
pop
fwait
enter
ins
jnp
test
fwait
xor
and
adc
rol
daa
repz
retf
and
arpl
or
rol
je
sub
enter
mov
sbb
sbb
sbb
scas
pop
cmp
fnstcw
xor
jo
mov
addr16
test
push
jmp
pop
popa
mov
mov
shl
jo
mov
sbb
jae
fnsave
lods
mov
adc
adc
push
or
cwde
in
cmps
ins
mov
or
cmps
inc
pop
retf
icebp
mov
jmp
jl
adc
push
mov
add
scas
mov
out
sub
repz
aad
ret
and
jnp
sub
lods
jl
mov
icebp
pop
push
call
(bad)
aad
pop
and
fldcw
push
xchg
in
dec
int
or
adc
adc
ret
jmp
lahf
dec
outs
mov
stos
sub
(bad)
rol
ins
xchg
lea
and
and
mov
sar
and
sub
mov
std
cmp
fisub
adc
jmp
sub
mov
rol
or
ret
hlt
arpl
das
jns
mov
cmps
cmc
cli
lock
mov
aas
jbe
lods
loope
fsubrp
ror
push
(bad)
int
(bad)
mov
dec
imul
cdq
or
push
mov
jmp
stos
ror
mov
(bad)
pop
mov
pop
enter
loopne
push
mov
sbb
std
sahf
mov
cmp
or
xor
add
hlt
aas
add
movs
enter
sti
pushf
adc
rep
es
scas
jo
xchg
cwde
cmp
sbb
cmp
jle
sysexit
ficomp
iret
imul
imul
pop
add
xor
test
repz
cmc
xchg
ficom
dec
int
gs
xchg
pop
retf
arpl
jae
adc
cmp
jp
push
xor
cld
rcl
and
mov
mov
bound
pop
and
add
inc
adc
mov
test
cmp
add
les
in
mov
scas
add
dec
cs
je
jmp
inc
aad
call
sbb
push
lock
cmc
ds
rol
jle
stos
xchg
push
imul
push
adc
adc
push
inc
iret
ds
pop
push
fild
xor
retf
mov
cs
jo
shl
cwde
aaa
cdq
mov
jmp
loopne
jbe
test
mov
popa
lea
sahf
and
mov
inc
retf
scas
jnp
std
xor
cld
sub
lods
dec
mov
cmp
stos
sbb
stos
aad
sar
mov
mov
lahf
mov
imul
fdiv
cli
movs
xchg
lahf
mov
sbb
sub
ja
cmps
cmp
into
setno
pop
fild
(bad)
sar
mov
rcr
(bad)
out
nop
imul
in
popa
xchg
inc
sbb
and
add
cwde
sahf
xor
(bad)
repnz
dec
sbb
jb
out
add
jp
push
cs
daa
mov
addr16
cmps
jae
icebp
adc
popf
test
cli
inc
lods
xchg
dec
and
fidivr
mov
pop
imul
(bad)
or
cmp
mov
pushf
ret
push
mov
xor
or
and
arpl
push
cmp
push
mov
lods
jmp
sbb
mov
shl
push
mov
xor
ret
out
cmc
mov
mov
repnz
in
pop
stos
mov
pushf
sub
jl
fdivr
xor
test
and
dec
sahf
pop
pushf
push
das
repz
pop
(bad)
iret
add
into
enter
dec
stc
xor
sti
dec
or
cdq
rol
out
add
jp
dec
cmp
add
mov
push
pop
and
or
fstp
cmp
cmp
inc
push
mov
cld
(bad)
stos
push
leave
inc
pop
popa
mov
out
pusha
inc
adc
adc
test
in
jbe
or
out
pushf
dec
xchg
call
pushf
pop
shr
jae
cmp
pop
jmp
push
aad
pop
outs
test
inc
jp
cmp
pop
imul
retf
xor
arpl
mov
mov
jp
test
push
push
pop
int
ins
jns
in
mov
sbb
fsubr
out
lods
mov
loop
dec
dec
push
movs
(bad)
dec
push
bound
data16
test
outs
popa
les
shl
cmp
jno
bound
xor
popf
fbstp
push
push
sbb
xchg
mov
fsubr
out
arpl
or
jecxz
or
(bad)
int
xlat
pop
lock
inc
jl
enter
jmp
and
cwde
mov
push
ins
mov
sbb
aas
add
(bad)
mov
das
push
sbb
xchg
movs
scas
push
sub
xlat
push
sahf
ret
jbe
cmp
push
lds
dec
sub
aam
fldcw
stos
fcomp
xchg
adc
xchg
adc
sub
mov
imul
cmps
add
cmc
jb
sbb
les
imul
and
rcl
nop
clc
out
sub
sbb
sbb
add
inc
mov
fucomi
mov
and
dec
mov
ror
or
xlat
retf
(bad)
call
xor
xchg
(bad)
push
xchg
aaa
jnp
sbb
call
push
stos
clc
mov
sbb
push
int
in
jecxz
push
and
jns
(bad)
adc
das
mov
fcmove
pop
xor
dec
sub
pop
scas
in
and
sub
sbb
arpl
fisub
pusha
ja
adc
xchg
cmp
mov
pop
ret
dec
dec
inc
push
aam
push
je
fsub
inc
out
fistp
push
mov
push
or
fist
enter
push
sub
repnz
sbb
popa
cmp
mov
add
mov
mov
adc
or
(bad)
pop
repnz
push
mov
test
ins
cmp
nop
cmp
int3
pop
in
les
mov
pop
stos
cmp
mov
jl
sbb
jne
jo
mov
std
pop
mov
enter
retf
push
pop
in
into
test
xor
mov
shr
call
jae
add
clc
add
mov
(bad)
stos
bound
stos
cwde
jge
sub
sahf
xchg
pop
dec
ror
mov
out
xor
or
dec
cmp
fld
mov
xchg
mov
(bad)
test
push
sub
fnstenv
mov
push
pop
push
push
dec
(bad)
push
pop
mov
or
dec
or
cmp
push
repnz
mov
cmp
jmp
mov
mov
inc
jno
and
jg
mov
ds
fild
repz
retf
popf
sbb
lock
adc
lods
leave
frstor
jno
sbb
cld
lock
(bad)
adc
(bad)
(bad)
mov
mov
std
add
xor
or
cmp
jmp
pfpnacc
shr
mov
mov
sub
repz
sbb
sub
mov
adc
lahf
mov
inc
inc
pop
ins
sbb
sbb
and
cmps
jge
cwde
lds
cmp
mov
cli
xchg
push
leave
setl
or
jmp
mov
test
(bad)
cmp
xchg
push
or
jns
pusha
out
pop
sub
adc
stc
fdivp
cmp
xor
jns
mov
pop
push
out
push
or
add
pop
push
js
rol
pushf
xchg
dec
cmp
jge
in
add
sbb
and
lds
cs
add
bound
lock
push
loop
adc
push
cmps
cmp
nop
nop
pushaw
mov
mov
mov
mov
mov
mov
mov
push
mov
xlat
or
mov
aaa
inc
mov
cmp
dec
stos
jle
mov
mov
dec
fstp
aad
(bad)
jmp
jbe
into
aad
mov
adc
dec
dec
xor
ret
neg
std
pop
movs
dec
inc
bound
pop
push
jle
data16
sub
outs
adc
adc
outs
dec
cmp
or
aam
xor
adc
push
mov
sbb
dec
jb
aam
cld
xchg
push
inc
dec
ret
sahf
mov
ins
enter
sti
cmps
imul
adc
cmp
fsubp
cmp
mov
sahf
bound
mov
jecxz
xor
dec
sar
ret
inc
sbb
std
mov
push
fs
mov
jnp
sti
adc
mov
cwde
lods
(bad)
and
mov
xchg
in
(bad)
jecxz
inc
in
mov
cmp
xor
push
cdq
add
mov
jp
xor
and
ss
dec
hlt
mov
fbld
sub
(bad)
mov
xchg
out
call
pop
lea
test
data16
mov
leave
sbb
shr
cmp
cmps
pop
mov
addr16
xor
out
inc
jb
sub
push
sub
sub
retf
loop
sub
ins
pop
inc
and
cmp
ins
add
(bad)
push
call
ror
fcmovnbe
in
lods
pusha
nop
ja
retf
enter
enter
mov
cmp
ffreep
push
sub
je
sub
clc
in
xchg
mov
mov
cmc
mov
add
inc
lahf
sar
aaa
call
jecxz
pop
(bad)
xchg
mov
add
push
or
call
adc
and
inc
lods
xchg
cmp
into
in
imul
jl
int
fwait
outs
ins
retf
mov
mov
adc
inc
test
mov
ficomp
jge
jmp
cmp
retf
mov
mov
test
les
mov
outs
mov
fwait
xchg
xchg
mov
sar
or
add
mov
cld
mov
pusha
mov
xchg
out
fmul
jae
pop
data16
inc
and
movs
repz
shl
mov
lahf
(bad)
pop
out
enter
cmp
adc
sti
xchg
int3
or
sbb
(bad)
outs
cmp
cld
xlat
test
rol
cwde
imul
mov
out
push
(bad)
fnstsw
call
jb
cmps
es
sub
inc
bound
out
lock
pusha
js
inc
sahf
pop
(bad)
sbb
mov
stos
(bad)
dec
add
sbb
mov
jmp
mov
xchg
(bad)
mov
pusha
retf
(bad)
cmp
mov
stos
mov
scas
mov
fmul
jo
adc
cld
pushf
imul
lea
ror
lea
dec
icebp
shr
or
rcl
xor
(bad)
outs
stos
in
mov
mov
mov
mov
sub
pop
inc
dec
sub
into
(bad)
call
mov
in
jmp
movs
out
dec
arpl
outs
add
lahf
mov
retf
adc
repnz
push
outs
jmp
xchg
sbb
pop
rol
and
je
int3
in
into
jnp
pusha
push
sbb
(bad)
jno
outs
mov
or
movs
and
test
xchg
mov
data16
bound
push
xchg
std
push
jne
cmp
mov
int
out
rol
mov
imul
xchg
xor
sub
cmp
mov
pushf
test
imul
popa
pusha
sub
dec
ds
jno
les
pop
jae
push
mov
cmps
not
cdq
pop
mov
fbstp
or
mov
jmp
jge
jmp
shr
sbb
sbb
call
icebp
mov
jae
push
jmp
imul
cmc
pop
xchg
push
fwait
pop
mov
movs
jp
repnz
retf
pop
cmp
jg
xor
sar
(bad)
retf
std
push
repz
or
scas
sub
fidivr
out
test
push
adc
rcr
pop
cmp
cld
mov
ss
call
stos
pusha
or
dec
cmp
push
dec
jmp
data16
sub
scas
imul
dec
xlat
shr
hlt
sbb
pop
adc
ds
pop
ins
imul
adc
mov
add
test
dec
or
mov
arpl
outs
and
push
fldcw
adc
dec
outs
mov
xor
outs
sar
retf
mov
lods
jmp
bound
add
imul
push
mov
stos
mov
lods
minps
outs
(bad)
imul
jo
rcr
or
adc
or
enter
nop
mov
outs
neg
xchg
lock
xchg
stc
mov
aam
cmp
ret
xor
cs
mov
inc
or
push
lea
jl
lahf
call
xchg
int
outs
cli
cld
fisttp
xchg
add
int
xchg
mov
xchg
mov
jnp
scas
ds
jb
sbb
imul
clc
push
lods
cdq
pop
pop
stos
jmp
push
and
or
add
aam
loope
and
push
xor
cmp
loope
mov
bound
movs
sbb
mov
pop
mov
das
mov
imul
push
jge
dec
xlat
mov
ror
adc
ret
xchg
inc
into
and
jbe
push
(bad)
jmp
mov
sbb
nop
lock
sub
test
test
ins
std
dec
jmp
out
iret
rol
ss
mov
pop
jnp
or
or
(bad)
std
inc
push
fidiv
popf
xchg
imul
mov
mov
stos
mov
mov
dec
push
(bad)
aam
and
push
jge
(bad)
jmp
neg
sahf
mov
mov
addr16
sbb
or
lea
sar
jl
jno
leave
or
in
or
imul
and
pop
mov
ds
mov
mov
leave
lahf
int
in
fucomi
shr
movs
aaa
pop
neg
xchg
adc
xlat
hlt
cld
into
or
popf
push
or
add
mov
fbstp
xor
add
jb
push
(bad)
xchg
mov
loope
jo
mov
ret
xchg
movs
lods
mov
aad
sbb
shr
jmp
sbb
mov
lods
dec
ffreep
xor
mov
adc
cs
jmp
cmp
cmovne
mov
dec
dec
(bad)
loopne
or
push
call
xor
fsubr
or
mov
push
xor
inc
mov
inc
sti
inc
loopne
adc
cmp
dec
mov
xor
push
jb
push
gs
retf
movs
and
inc
cmp
movs
sbb
jp
test
and
dec
push
add
xor
js
inc
pop
jl
pop
pop
ins
adc
push
add
es
cmp
mov
xor
pushf
popf
jmp
jecxz
std
jns
clc
adc
sbb
movs
adc
outs
out
retf
mov
push
mov
(bad)
out
mov
mov
(bad)
mov
and
adc
xlat
add
sahf
sahf
cld
pop
aad
retf
repz
sub
clc
dec
xor
and
iret
pusha
sahf
dec
mov
fisubr
inc
cmps
dec
sub
aas
je
out
mov
xchg
lock
inc
and
sbb
outs
mov
je
sti
loopne
leave
inc
ficom
mov
push
inc
(bad)
push
xchg
push
inc
xchg
in
and
mov
mov
js
pop
(bad)
xor
dec
add
jbe
sbb
movs
xor
and
jg
std
(bad)
sar
and
out
sahf
(bad)
aas
popf
mov
sbb
dec
cmp
push
loop
inc
in
sbb
xchg
cmovl
cld
add
push
jmp
xchg
icebp
add
fsub
jb
add
out
xor
outs
(bad)
fsubr
or
cmps
cwde
fdiv
fdiv
btr
lahf
mov
push
sbb
push
ja
jns
sub
jmp
jl
rcl
cli
mov
dec
(bad)
jb
and
xchg
sti
imul
mov
dec
test
cld
repz
xchg
dec
push
inc
dec
sub
test
dec
dec
cmp
and
jb
test
dec
xchg
sub
inc
icebp
pop
sub
mov
sbb
sbb
mov
jl
mov
xor
ja
ds
jg
adc
cwde
push
out
jne
sbb
popf
push
mov
jmp
rol
jae
es
mov
aas
mov
imul
sbb
dec
or
icebp
bound
mov
fisubr
cmps
pop
jmp
aam
aad
popf
popf
mov
cwde
sti
sbb
ja
sub
(bad)
push
sub
xchg
lods
popa
shl
fidiv
ins
(bad)
stos
mov
into
cmc
jge
inc
sub
add
jg
call
push
cmp
stos
mov
cwde
sti
mov
fst
icebp
mov
sub
mov
sub
pushf
je
and
jge
es
scas
popf
pushf
jg
imul
cmp
fnstcw
(bad)
push
push
fwait
mov
les
jg
xchg
call
pop
xchg
shl
data16
jmp
jg
mov
jns
cwde
mov
xchg
adc
mov
scas
lods
push
push
loop
push
pop
jle
and
sysret
push
xchg
retf
mov
xlat
cli
dec
clc
out
jl
mov
out
push
scas
fdiv
lods
cmps
adc
(bad)
cld
jl
xchg
pop
ss
jp
out
pop
ss
xor
stos
adc
jecxz
rcr
push
aam
dec
dec
scas
push
sti
adc
out
sbb
popa
(bad)
mov
jp
lahf
pop
movs
cld
in
push
sub
mov
mov
bound
adc
pop
mov
scas
cmp
(bad)
in
pop
or
stos
gs
sahf
pop
mov
cdq
hlt
xor
cwde
imul
imul
pop
int
pushf
push
scas
push
cdq
xchg
lods
shl
cmc
dec
sti
in
shr
or
jmp
push
and
push
jg
out
push
mov
mov
lods
cmp
shl
(bad)
dec
cs
jl
fcmovnb
hlt
mov
add
jb
xchg
push
lods
add
imul
xchg
push
push
cdq
aaa
mov
xchg
inc
loope
ins
xlat
imul
fldcw
cld
or
cs
sti
sbb
fs
(bad)
aaa
pop
inc
fistp
ss
mov
shr
imul
cmps
rol
dec
pop
push
mov
ret
fistp
cmp
cli
mov
into
clc
lods
das
repz
push
ins
cld
cmp
adc
dec
sub
cmp
jle
pop
push
xor
xchg
and
mov
fisttp
adc
aam
jecxz
int3
call
call
stos
das
sar
jge
pop
scas
xchg
(bad)
in
(bad)
pop
cli
ror
in
mov
movs
pop
paddq
cmp
test
loop
push
fdiv
or
add
jecxz
fmul
(bad)
int
inc
sub
jmp
dec
jbe
ror
arpl
push
not
test
push
pusha
push
jnp
adc
push
(bad)
retf
call
cmp
pop
jp
xor
pop
jecxz
nop
cmps
(bad)
out
dec
ins
pop
sbb
sbb
jl
mov
pop
dec
sbb
mov
or
sbb
pop
or
xchg
dec
lods
je
clc
in
dec
pop
pop
hlt
jae
and
jg
(bad)
movs
push
sub
mov
ror
add
xor
push
cs
cmps
mov
fadd
les
lods
into
test
loop
rcr
mov
out
mov
(bad)
jecxz
dec
ins
mov
pop
neg
cs
inc
call
adc
iret
xchg
add
push
sub
cli
xchg
pop
or
push
or
adc
stos
sbb
cmp
(bad)
test
cld
fisttp
ins
xchg
dec
sbb
cli
out
popf
push
bnd
daa
lods
mov
jl
xor
xchg
lods
bnd
adc
ja
int3
push
adc
(bad)
or
adc
repz
push
jmp
push
into
or
push
test
mov
int
mov
pusha
mov
mov
cmp
aam
cmp
adc
add
(bad)
daa
add
repnz
and
xchg
mov
sub
mov
rol
jmp
cmp
ins
and
cmp
fcmovb
sub
js
ss
xlat
ja
push
les
push
aam
iret
sahf
xor
jl
push
dec
xchg
xchg
xchg
mov
retf
cmp
cmc
push
pop
mov
adc
out
das
push
pushf
ds
outs
or
call
imul
arpl
daa
push
enter
pop
mov
or
leave
hlt
mov
in
popf
jmp
test
push
mov
rcl
fnstcw
add
fisubr
jnp
adc
xor
out
sti
fwait
pop
in
dec
pop
stos
and
adc
adc
sbb
ret
adc
fsub
retf
in
fild
int3
cmp
pop
test
jb
sbb
retf
mov
retf
xchg
dec
sbb
bound
fucomip
addr16
xor
mov
sub
cmp
xor
mov
jle
pop
loopne
mov
daa
(bad)
imul
js
mov
pop
inc
and
jbe
pop
mov
daa
xchg
sahf
pushf
mov
or
and
mov
or
call
inc
shr
inc
xor
adc
sbb
xor
push
pop
cld
mov
nop
lds
dec
unpckhps
stos
mov
push
lahf
xchg
inc
ror
std
in
inc
xchg
jle
pop
rcr
jle
ds
push
stos
out
jns
in
cmp
cmps
mov
scas
jg
scas
pop
mov
out
add
xor
cdq
mov
lods
push
stc
xchg
movs
stos
sub
push
pop
jae
pop
jns
scas
int3
cmp
fninit
(bad)
retf
lahf
test
and
dec
cld
inc
xchg
bound
sti
mov
pop
in
aam
je
or
mov
rcr
xor
(bad)
fsubr
adc
iret
xchg
sbb
cmc
js
pop
mov
(bad)
push
scas
jp
mov
sti
jecxz
xchg
arpl
arpl
cmp
dec
(bad)
int
int3
addr16
pop
(bad)
test
mov
bound
ret
mov
sub
vfpclasssd
std
mov
sbb
adc
mov
jne
cmps
repz
cmp
dec
ja
and
adc
cmp
mov
pop
sbb
in
sub
push
jmp
ss
bound
xchg
jne
mov
(bad)
retf
sub
xchg
sbb
pushf
sbb
sbb
jecxz
repnz
mov
xchg
add
push
scas
das
popa
inc
shr
fucomi
jbe
(bad)
cmp
fstp
ja
out
stos
dec
jmp
pop
pop
or
neg
sbb
addr16
lods
popa
mov
push
cwde
push
pop
retf
cdq
xchg
rcl
mov
pop
mov
mov
(bad)
sbb
fwait
dec
adc
int3
pop
ins
out
inc
popf
addr16
sub
inc
loopne
adc
out
rcr
loopne
inc
ret
icebp
inc
adc
and
inc
pop
fadd
psubusw
xor
icebp
arpl
aaa
xor
imul
xchg
ds
out
add
pushf
mov
pushf
jb
mov
sbb
ins
pop
xchg
ret
shr
fs
or
cmps
adc
add
ss
into
fnsave
out
retf
sbb
pusha
sbb
bnd
push
xchg
push
(bad)
mov
ret
loop
xor
jns
int3
jmp
enter
(bad)
sahf
mov
lods
pop
fdiv
shr
push
lahf
pusha
clc
cmp
jno
fs
outs
leave
ins
out
push
fild
mov
test
test
or
pop
ja
scas
adc
pop
ja
inc
into
test
stos
in
xor
pop
dec
mov
mov
retf
push
lods
dec
out
push
inc
jle
ss
call
pushf
mov
sub
sar
sub
int
pop
ftst
cwde
adc
mov
mov
and
xchg
rcr
xchg
(bad)
in
or
loop
mov
(bad)
push
sub
lds
adc
adc
mov
adc
cmp
xor
(bad)
fnsave
jle
shl
or
aad
js
scas
dec
adc
or
nop
jae
call
add
out
jle
push
test
call
mov
mov
and
jge
pop
jmp
mov
movs
retf
or
or
scas
xchg
push
retf
imul
lock
mov
imul
and
inc
sub
cs
adc
dec
inc
(bad)
loop
mov
push
gs
push
xchg
and
xchg
push
(bad)
leave
push
dec
fmul
sahf
ins
xor
fnstsw
cmp
jo
mov
pop
pusha
jl
cdq
fistp
jb
pushf
push
sahf
jmp
movs
sub
jmp
jo
rcr
test
retf
xor
sub
sub
movs
call
scas
outs
adc
in
cmp
and
out
jp
jge
bound
je
sbb
jle
test
scas
adc
mov
and
jmp
sub
push
add
push
jle
aas
pop
or
ins
mov
inc
push
inc
imul
sti
movs
repz
(bad)
repz
pop
adc
cdq
loop
mov
xor
xor
test
arpl
xor
pop
pusha
and
or
in
xchg
fistp
daa
outs
xor
icebp
add
push
mov
xor
xor
pusha
lods
fs
loop
lds
or
mov
pop
imul
jo
fisttp
push
(bad)
cld
sub
pop
mov
inc
pushf
fucomi
mov
lea
dec
and
sbb
(bad)
jecxz
aaa
push
out
xlat
xchg
cmp
sub
cmp
mov
mov
test
cmp
repz
ret
and
add
sbb
inc
lahf
pop
dec
inc
push
arpl
(bad)
cmp
mov
add
dec
mov
outs
sbb
leave
stos
jno
(bad)
pop
inc
jb
jecxz
aas
add
jb
and
dec
cmc
cmp
mov
mov
fdivrp
out
out
imul
jmp
dec
stc
(bad)
or
pop
movs
outs
pop
in
ficom
aad
jp
and
inc
daa
mov
adc
mov
jecxz
jle
push
clc
cdq
pop
test
out
mul
dec
loope
lds
mov
mov
das
retf
pop
pop
and
call
and
pop
sahf
cmp
add
push
imul
mov
icebp
cmc
popa
adc
(bad)
enter
mov
mov
sub
pushf
push
mov
push
jbe
sti
ss
imul
jmp
mov
dec
call
xor
pop
pop
neg
or
sub
or
out
scas
xor
clc
(bad)
pop
(bad)
outs
bound
pop
push
mov
pop
xor
mov
rcr
shl
mov
cld
sub
rcl
pusha
test
mov
in
fstp
xchg
mov
stos
jecxz
push
repz
sbb
imul
pop
call
idiv
sbb
fidiv
div
mov
lock
enter
popa
cmp
xchg
pop
int
xchg
fisttp
mov
push
push
mov
cmps
pop
adc
adc
out
ret
mov
scas
sbb
xchg
xchg
sub
push
std
dec
mov
jne
cwde
sbb
xor
test
sahf
push
jmp
sub
push
cmps
cli
inc
jmp
mov
es
ror
sbb
mov
out
xchg
or
push
sahf
sbb
push
jne
addr16
test
pop
sahf
add
mov
jp
imul
shl
cmp
sbb
jl
mov
sub
scas
jl
lock
call
mov
lods
add
push
pop
ins
push
bnd
mov
pop
jmp
ins
inc
lahf
xor
dec
inc
mov
push
mov
lods
mov
in
fiadd
ins
jo
fwait
pusha
fldcw
rcr
xchg
adc
jle
xchg
lods
sbb
iret
iret
and
pop
mov
xor
retf
jmp
mov
add
cmp
outs
cdq
ins
and
bound
ret
in
ins
and
(bad)
mov
xchg
sbb
shr
adc
mov
fld
jge
mov
enter
mov
es
in
scas
xchg
push
mov
xor
dec
stc
jmp
mov
mov
pop
cmps
add
lods
cmp
xchg
in
cmp
jo
pop
mov
mov
cs
outs
jo
js
(bad)
clc
pop
fistp
js
jb
jno
dec
call
(bad)
loop
xor
jmp
xor
inc
loopne
or
jns
xchg
(bad)
mov
sahf
fbstp
adc
das
mov
stc
pusha
mov
es
outs
mov
and
enter
mov
fimul
imul
dec
pop
xor
mov
cld
xor
in
push
into
pop
mov
inc
sub
adc
ins
outs
ret
mov
cmp
push
ins
call
popf
ret
lods
push
mov
imul
outs
or
inc
dec
shl
adc
push
jb
dec
inc
inc
xor
jmp
xchg
int
call
adc
pop
loope
cwde
(bad)
push
repz
add
cmp
and
or
out
or
neg
dec
fst
outs
mov
mov
es
into
mov
data16
fisub
inc
aad
xchg
push
add
ins
imul
pop
(bad)
jbe
sbb
test
pop
(bad)
movs
fcmovb
pop
mov
dec
mov
mov
enter
xchg
cs
pop
pusha
rcl
mov
pop
mov
jae
adc
out
xchg
cwde
in
cmps
int
jmp
mov
dec
sbb
jge
mov
sahf
jle
dec
adc
mov
push
pop
add
aas
jae
test
test
mov
test
fwait
push
iret
jge
iret
mov
cmps
and
mov
iret
rol
loop
popa
out
retf
(bad)
cmp
in
ss
movaps
inc
shl
stc
nop
fstp
movs
jmp
push
xor
aad
mov
xchg
popa
movs
cwde
or
mov
cld
mov
cdq
lock
dec
popa
fwait
inc
pop
lods
jmp
jnp
pop
outs
pop
adc
outs
enter
xor
ficom
sub
(bad)
push
(bad)
mov
add
mov
xchg
(bad)
pop
adc
xchg
out
cld
pop
xchg
mov
pop
cdq
cwde
cmp
sub
push
cdq
icebp
cmps
cli
push
cwde
bound
push
das
sahf
push
mov
push
dec
and
sbb
aas
mov
es
js
add
push
dec
mov
sbb
imul
loop
or
sbb
pushf
inc
pop
sub
sbb
push
hlt
enter
popa
fld
dec
push
add
popf
pop
rol
sahf
clc
push
popf
(bad)
jns
sbb
ins
xor
inc
loopne
(bad)
out
out
dec
mov
mov
shr
fs
mov
les
test
xor
(bad)
inc
mov
repz
xor
loope
push
or
adc
nop
ss
lods
push
cmp
fdivr
movs
cs
clc
sbb
aam
mov
jne
cmp
pop
jle
or
int3
mov
aam
push
je
xchg
test
pop
adc
pop
lock
mov
mov
je
in
pop
stc
or
and
aam
sbb
test
xchg
and
test
inc
sub
push
pop
nop
or
add
dec
fmul
cmp
rep
dec
pushf
sbb
xor
cmp
push
nop
push
push
lods
inc
push
sti
and
sar
pop
(bad)
int3
dec
fwait
sub
sub
jno
(bad)
or
fstp
int
mov
je
push
sahf
rcr
sub
pop
shl
icebp
mov
pop
mov
movs
popf
sbb
xor
push
cld
mov
jmp
fsub
adc
jle
and
mov
mov
pop
aas
mov
push
js
jo
outs
cmp
push
cli
pop
fistp
clc
pop
xchg
sti
adc
cs
dec
xor
cmp
stos
pop
or
(bad)
ins
xchg
adc
enter
or
imul
lods
sbb
inc
out
jbe
call
jne
mov
cdq
sbb
retf
adc
pop
push
mov
push
aas
xor
vxorps
stos
mov
pop
(bad)
int
pop
xchg
mov
lods
xor
pop
lods
aam
xor
shl
pop
pop
call
mov
call
inc
cmp
jae
mov
pop
imul
call
pushf
stc
ss
push
xchg
push
sub
pop
scas
jl
xchg
jae
push
mov
mov
mov
xor
out
xchg
pop
cmp
mov
gs
data16
cli
sar
push
cmp
jmp
leave
sub
retf
pop
rcr
out
add
push
lods
loopne
push
fwait
and
adc
sbb
repnz
cmp
dec
test
les
pusha
fadd
mov
movs
aam
movs
arpl
sti
jnp
(bad)
ds
adc
sbb
and
shl
lahf
jae
out
add
dec
xchg
shr
cmp
jp
adc
push
imul
(bad)
js
jecxz
jmp
neg
and
in
imul
xchg
call
test
adc
mov
leave
ret
mov
fbstp
push
push
pop
cld
or
es
loopne
retf
call
jl
adc
es
dec
pop
jle
sub
jbe
repnz
jb
loop
mov
jl
loopne
inc
mov
jns
or
dec
dec
call
outs
shr
ficom
cmp
jo
add
push
pop
nop
jp
push
mov
xchg
inc
ss
or
sub
cdq
inc
sub
stos
ficomp
lods
aam
test
dec
out
fcom
add
pusha
fnstcw
loop
mov
mov
push
mov
lahf
or
pop
retf
mov
push
xchg
sub
dec
inc
and
mov
adc
aaa
fwait
adc
dec
xor
mul
cld
push
dec
xor
retf
cld
jecxz
mov
xor
jbe
dec
xor
cmc
je
(bad)
sbb
out
pop
sub
test
add
push
setb
leave
push
in
adc
cmp
or
std
push
loopne
inc
mov
push
and
lds
mov
jns
retf
(bad)
sub
adc
jmp
aas
cmp
pop
popf
outs
mov
hlt
mov
jmp
inc
mov
cmp
imul
mov
repnz
jns
sub
pusha
sub
xor
js
jmp
out
jb
adc
push
sub
xchg
push
movs
sub
sbb
or
mov
mov
cmc
fs
in
and
addr16
adc
mov
mov
inc
sbb
lea
popa
ins
inc
jg
or
jnp
pusha
inc
inc
popa
fsubr
jmp
lock
inc
adc
mov
mov
(bad)
jle
outs
retf
lea
pop
ror
std
adc
data16
adc
sub
lds
dec
cmp
push
out
xchg
mov
mov
cmps
ret
cmps
lea
xchg
cmp
mov
les
ja
ficomp
fiadd
out
lods
push
fwait
or
mov
dec
sbb
(bad)
jle
mov
pshufw
repnz
loopne
out
add
cmc
sub
js
(bad)
dec
pop
inc
jno
arpl
mov
bound
jmp
xlat
and
cmp
sbb
(bad)
imul
stc
mov
pop
repz
loope
xchg
lea
pushf
jno
xor
jmp
cmp
lods
ror
aaa
and
test
adc
inc
pop
cli
test
jle
mov
pop
push
push
sub
push
fsub
mov
arpl
xchg
inc
ret
jo
ret
mov
(bad)
fmul
sub
cmp
aaa
das
mov
retf
fistp
mov
push
les
cmp
mov
setno
gs
and
int
aaa
loopne
xchg
fpatan
pop
(bad)
mov
pop
icebp
xchg
enter
ja
sub
mov
pop
jnp
fstp
popf
arpl
xchg
ss
or
ins
cmp
jns
add
retf
scas
outs
mov
add
xor
push
into
std
push
sbb
icebp
les
call
push
stos
adc
inc
(bad)
rcr
shl
(bad)
in
push
std
and
or
dec
rol
dec
push
adc
dec
fcomip
test
es
(bad)
into
inc
mov
sahf
cmp
cmp
mov
popa
xchg
or
int
sub
mov
mov
dec
jg
add
push
sub
sbb
fwait
mov
or
cwde
add
test
repnz
mov
push
xchg
popf
push
sub
mov
mov
loope
xor
push
pop
push
adc
mov
data16
jp
mov
or
sbb
inc
mov
mov
mov
pop
scas
sub
scas
push
xchg
ins
mov
mov
fsubr
sbb
sar
cmps
pop
cmp
mov
cld
fs
imul
pop
mov
test
sbb
inc
lods
pop
pop
and
pop
and
mov
push
mov
dec
and
rcl
jne
int3
std
xchg
mov
dec
add
sbb
sahf
mov
add
jne
push
xor
into
in
dec
mov
fs
sub
mov
loopne
mov
add
xor
fist
pop
sbb
push
and
jecxz
aad
fistp
mov
cdq
iret
imul
dec
ret
cmp
xlat
xor
mov
outs
and
mov
jl
jmp
pop
(bad)
js
add
jge
dec
jb
push
mov
mov
ret
adc
xor
xor
adc
xchg
inc
mov
mov
enter
and
(bad)
int3
enter
cmp
jno
xchg
lahf
mov
(bad)
popa
mov
gs
cwde
mov
test
test
sbb
add
arpl
adc
xor
and
mov
adc
push
test
mov
lahf
push
dec
(bad)
cmp
dec
jo
into
call
(bad)
mov
outs
scas
lods
xchg
add
pop
pusha
xchg
push
cmp
push
mov
xchg
mov
mov
inc
fisub
xchg
clc
add
push
jno
stos
mov
dec
adc
pop
pusha
push
es
inc
jmp
movs
sub
mov
adc
push
(bad)
and
retf
bound
jns
pop
xchg
pextrw
cdq
lds
mov
mov
mov
out
stos
adc
cmp
or
sbb
push
mov
ins
mov
lds
pop
inc
mov
xchg
inc
push
xor
pop
iret
mov
in
jne
jg
mov
push
inc
inc
(bad)
(bad)
adc
mov
inc
cwde
popf
adc
cmp
push
jns
push
test
pop
push
addr16
imul
jno
retf
xchg
add
loopne
dec
jnp
jns
fst
and
mov
inc
inc
stos
dec
xor
mov
jge
aam
jae
adc
addr16
xchg
mov
in
jecxz
cmps
mov
call
sub
es
inc
es
iret
lock
pop
jns
jne
jmp
mov
test
je
mov
mov
dec
icebp
cmp
dec
mov
into
xor
(bad)
sar
mov
fwait
or
cmps
test
dec
jmp
cmp
adc
aas
rol
js
popf
lds
and
adc
and
lahf
icebp
arpl
retf
arpl
popf
shl
sub
call
retf
cld
cli
dec
int
push
pop
sar
mov
sub
fimul
div
or
icebp
icebp
test
push
daa
fmul
cli
mov
sub
push
retf
xchg
mov
jp
mov
ss
js
int3
fs
mov
in
addr16
sahf
pop
mov
(bad)
shl
aam
loope
mov
mov
push
or
xor
int3
or
mov
fwait
jecxz
cmp
ins
push
add
popa
test
aas
adc
mov
mov
and
adc
or
sti
cmps
sbb
in
lock
jl
mov
mov
movs
push
(bad)
jmp
pop
add
pop
hlt
mov
jae
lock
lods
adc
mov
mov
hlt
pushf
jne
adc
push
push
push
pop
mov
in
les
sbb
push
test
adc
rcl
and
ret
std
cmp
out
out
push
dec
arpl
das
mov
cmp
or
out
test
shr
nop
dec
mov
aam
pop
enter
add
and
adc
cmp
push
adc
adc
xlat
hlt
sbb
mov
xchg
mov
test
pop
pop
movs
mov
xor
push
mov
inc
jg
push
arpl
inc
icebp
popa
sahf
add
add
jae
xchg
mov
cld
repz
and
add
ja
adc
shr
jmp
mov
xchg
cld
dec
sub
mov
repnz
imul
jmp
pop
sbb
inc
mov
sar
sahf
fmul
sbb
lods
inc
xor
dec
push
dec
ins
jp
jns
shl
out
xchg
int
scas
sbb
dec
adc
enter
mov
dec
call
and
imul
mov
mov
inc
dec
mov
mov
inc
ret
jmp
loop
sub
mov
jne
sbb
repnz
(bad)
imul
xor
mov
sbb
cmps
xchg
pop
and
int
mov
jg
das
sahf
inc
sbb
or
mov
sbb
mov
ret
sub
lods
push
iret
aad
bound
fwait
jge
jp
arpl
jl
add
sbb
ins
xchg
shl
les
std
int
(bad)
mov
rcl
int
stos
dec
jge
add
push
push
jnp
sbb
jge
fisubr
test
iret
(bad)
jns
or
mov
jl
xchg
dec
fnsave
sub
imul
pop
xchg
cli
or
add
int3
adc
adc
clc
ja
jle
xchg
retf
movs
addr16
stos
test
pushf
(bad)
adc
dec
pop
fimul
inc
stos
test
mov
xchg
clc
push
inc
and
mov
mov
cmp
jg
mov
rcl
push
sub
mov
jae
xchg
or
punpckldq
lds
(bad)
nop
inc
jp
scas
int
das
mov
xchg
xchg
sbb
mov
mov
push
sbb
mov
or
or
jmp
jo
jl
push
sub
or
stos
dec
ss
and
push
dec
stos
or
(bad)
sub
push
pop
inc
cmps
sub
and
lea
sbb
outs
sub
rol
dec
int
repnz
and
ja
add
mov
scas
cwde
fwait
mov
xchg
int3
mov
outs
pusha
mov
or
shl
imul
pop
push
push
adc
outs
dec
pop
inc
in
adc
mov
mov
(bad)
stos
mov
out
add
pop
sar
and
lods
(bad)
stc
cmps
mov
push
mov
imul
rcr
test
dec
and
lahf
pop
scas
sbb
lods
imul
xchg
and
push
in
arpl
outs
pop
adc
ins
(bad)
push
fmul
dec
(bad)
mov
cmps
jae
test
add
add
out
dec
cmp
mov
fnsave
cmp
int
(bad)
jb
retf
outs
gs
int3
cmp
dec
out
sub
adc
and
(bad)
mov
xchg
pop
outs
cmc
xor
xchg
subps
push
dec
ins
inc
inc
in
and
adc
mov
cmp
fwait
cmp
retf
lods
sahf
pop
sahf
jb
aas
(bad)
sti
cmps
adc
xor
inc
stos
out
dec
aas
mov
(bad)
mov
xlat
adc
pushf
inc
pop
mov
fnstcw
inc
retf
push
(bad)
cmp
xlat
dec
pop
mov
push
sub
sub
mov
mov
add
cmps
sbb
stc
push
mov
fist
mov
(bad)
cmc
cdq
jns
fidiv
scas
loopne
shl
mov
mov
mov
addr16
adc
xlat
inc
(bad)
retf
jb
sti
pop
rcl
push
sub
in
pop
cmp
jmp
lahf
push
sbb
jg
sti
out
hlt
pop
ror
fstp
jle
lahf
fiadd
dec
enter
aad
call
add
push
cmp
adc
cs
rcl
sti
dec
call
sbb
pop
fnstcw
and
pop
in
mov
loop
or
mov
pavgb
repz
jp
cmp
or
mov
mov
and
int3
mov
dec
enter
pop
and
sub
dec
aad
push
cmp
adc
rcl
dec
sub
mov
jg
cmps
bound
cmp
push
in
in
mov
shl
test
cwde
clc
leave
adc
stos
out
add
xor
es
push
sbb
or
mov
and
inc
mov
or
jl
pop
enter
pop
adc
xchg
out
add
bound
xchg
lds
inc
jbe
inc
adc
adc
aaa
sbb
mov
dec
cwde
adc
push
mov
ins
mov
loopne
and
call
xchg
stos
inc
sbb
dec
cwde
mov
push
jg
add
inc
sar
icebp
push
and
xor
jmp
adc
xchg
pop
xor
retf
push
inc
mov
inc
sub
pushf
outs
pop
mov
nop
ret
xchg
cwde
sti
sbb
sbb
in
and
es
adc
pop
push
xlat
fsubr
scas
gs
dec
inc
mov
fmul
aad
repnz
outs
xchg
div
dec
or
enter
ret
das
pop
fmul
mov
retf
jns
lahf
retf
dec
adc
cli
adc
jl
pushf
sub
ret
adc
jmp
push
fs
sbb
test
es
or
pop
enter
outs
dec
enter
mov
inc
xor
mov
das
ret
cmp
sbb
pop
inc
jo
adc
push
or
push
lock
in
clc
retf
movs
cwde
jp
int
inc
sbb
leave
dec
stos
jbe
stos
add
inc
into
mov
and
inc
outs
ja
int
jg
xor
int
scas
or
and
gs
dec
(bad)
mov
push
add
inc
(bad)
not
xor
retf
jb
fbstp
(bad)
xor
push
and
push
retf
xchg
xor
in
imul
fistp
and
and
push
or
sub
jb
pop
cmps
mov
and
pop
and
int3
rcr
sbb
push
xor
xchg
rcl
push
lea
test
ins
outs
and
icebp
shl
inc
pop
enter
in
test
lods
stos
sbb
dec
fidivr
int3
(bad)
icebp
in
rcl
sub
les
retf
dec
xchg
push
adc
pop
cmp
fistp
xchg
enter
and
xor
js
outs
cmps
mov
js
ins
popa
mov
dec
ror
xchg
jg
mov
xor
dec
fcom
or
fs
sti
out
mov
mov
xchg
enter
add
aas
sub
pushf
call
push
popa
gs
repnz
add
jns
adc
lods
push
sbb
or
sbb
fbstp
scas
div
popf
outs
iret
fistp
xor
pop
jo
and
mov
loop
cmps
sbb
sets
lock
xchg
stos
xor
pop
ret
adc
int3
mov
dec
test
iret
adc
stos
sub
mov
dec
fbld
test
pextrw
xor
mov
ins
xlat
sbb
adc
cld
adc
mov
fst
es
mov
sub
stos
sub
add
mov
mov
jo
xor
jmp
mov
call
adc
scas
lods
xchg
cld
(bad)
hlt
xor
jno
add
stos
push
(bad)
mov
popa
pop
ret
pop
xchg
cmp
fwait
mov
loop
lds
ret
mul
sbb
shl
sar
xor
pop
pop
stc
xchg
adc
sub
sub
xchg
and
push
add
adc
mov
repnz
iret
cmp
pop
jmp
adc
inc
add
dec
adc
mov
and
ds
cmp
arpl
test
xchg
inc
cmp
in
inc
xor
xor
retf
retf
push
adc
jmp
cmp
pop
mov
outs
sbb
(bad)
pop
std
popf
and
mov
outs
loopne
mov
in
cmp
xchg
and
les
stos
sar
imul
repnz
xor
fmul
fidiv
mov
add
fwait
out
fisub
xchg
mov
aam
mov
push
inc
xchg
add
into
sub
ja
outs
and
xor
fs
push
aad
jl
adc
jnp
mov
pop
(bad)
pop
pop
cdq
pop
rcr
xchg
iret
or
adc
jae
adc
push
push
push
lock
jne
aam
in
jb
xor
(bad)
and
jg
imul
into
sbb
add
pop
push
jb
jns
jno
int
dec
js
sbb
retf
fstp
ficomp
sbb
das
jg
pushf
push
jmp
lock
and
ret
sahf
or
dec
fsubrp
inc
lock
or
in
dec
dec
popf
daa
stos
ret
mov
aad
jb
mov
aaa
lods
fmul
lock
inc
rcl
mul
jle
pop
rcl
fs
daa
sbb
rcl
ins
retf
aad
bound
fimul
les
adc
dec
int
cs
inc
sub
or
int
cmp
in
outs
jle
lods
inc
(bad)
mov
sar
cmp
add
lods
hlt
pop
sub
add
mov
dec
sbb
pop
movs
jl
(bad)
xchg
into
jmp
call
and
js
icebp
jge
rcr
xchg
mov
fwait
(bad)
mov
pop
in
(bad)
out
cmps
out
sbb
call
ja
dec
(bad)
js
imul
sub
ds
outs
or
ret
scas
bound
and
xor
fs
je
cmp
cmp
addr16
es
adc
test
adc
sbb
stos
xchg
outs
sub
or
pop
test
(bad)
cmp
(bad)
push
and
imul
loope
(bad)
jb
test
jmp
fwait
aaa
mov
cld
add
jle
xor
or
retf
xchg
xchg
lods
pop
pushf
pop
in
sub
add
pop
fwait
arpl
xor
out
js
dec
add
mov
mov
(bad)
jnp
ja
mov
arpl
dec
enter
sete
mov
ret
adc
cmp
gs
push
mov
sbb
test
(bad)
add
fwait
mov
sti
aam
xor
jnp
aaa
(bad)
(bad)
fdivr
leave
aad
xor
or
iret
scas
int
sbb
sar
cmc
jecxz
mov
retf
mov
aas
sbb
mov
fsub
push
call
push
fidiv
pushf
fdivr
ins
leave
shl
aas
xor
mov
adc
push
push
dec
push
aas
(bad)
leave
mov
mov
jl
pop
mov
cld
or
(bad)
out
inc
pop
and
aam
das
and
lods
or
pushf
jns
out
test
dec
(bad)
not
sub
xchg
addr16
pop
in
mov
sub
or
mov
xchg
cdq
loop
cwde
add
cs
mov
(bad)
pop
imul
in
loop
(bad)
sahf
jmp
mov
leave
shl
adc
cmps
int3
push
xor
aad
out
cwde
dec
outs
mov
retf
in
jecxz
scas
outs
sbb
cmps
add
adc
loop
ja
popa
int
fucomip
pop
dec
aam
sub
outs
out
sbb
mov
mov
lods
xor
call
in
jmp
stos
ja
push
imul
or
jne
xor
pushf
fwait
add
inc
inc
xlat
mov
inc
lahf
and
dec
cmp
pop
test
pop
push
mov
ror
in
or
mov
rcr
lock
pop
(bad)
push
das
stos
retf
adc
pushf
hlt
pushf
icebp
push
sbb
inc
movs
xor
add
xor
call
std
mov
cmp
push
in
imul
jmp
or
repz
inc
sub
xchg
add
lock
add
mov
(bad)
hlt
imul
push
shl
shl
rcr
es
xor
mov
(bad)
mov
sub
sbb
sti
in
pushf
pop
mov
out
adc
dec
test
jb
mov
gs
imul
xor
je
sahf
dec
aas
enter
dec
add
call
ss
in
mov
sar
sbb
popa
mov
sbb
push
push
cli
push
fstp
xchg
xchg
sub
mov
jmp
inc
jb
fcmovb
test
iret
jl
mov
cmp
outs
cmp
movs
or
ret
push
mov
rol
adc
dec
cmp
fldcw
sub
dec
sar
stos
js
in
mov
sub
xor
mov
(bad)
iret
xor
mov
pop
jmp
fidiv
cdq
cmp
push
(bad)
nop
mov
mov
mov
pop
imul
add
or
mov
pop
rcr
push
test
xor
mov
fstp
sti
push
pop
enter
pop
ficomp
push
dec
cmp
push
je
out
pop
inc
inc
or
shl
repz
cmp
mov
scas
xor
cmp
loop
adc
add
cli
fs
cld
sbb
scas
inc
aaa
in
inc
popa
xor
bound
loope
outs
and
cs
addr16
sahf
jne
adc
or
mov
fldenv
fisttp
sub
fisubr
pop
aad
dec
dec
std
mov
jmp
in
mov
cmc
mov
cmp
repnz
cld
cmp
lea
ds
imul
mov
popa
cwde
sub
loopne
in
xor
add
mov
arpl
dec
jae
xchg
pop
sti
push
cmp
push
outs
les
cwde
hlt
icebp
nop
leave
jmp
jae
push
out
xchg
dec
jnp
cmp
mov
xor
fisttp
inc
outs
cwde
jbe
jne
dec
jo
mov
in
pop
cs
int3
gs
jmp
xlat
dec
mov
adc
scas
push
and
inc
ret
icebp
xchg
push
xchg
sbb
jnp
(bad)
xchg
mov
sbb
pop
dec
jmp
sbb
fst
jp
outs
add
lahf
mov
mov
sti
mov
pop
fist
mov
lods
push
test
int3
mov
test
test
xchg
push
adc
cmc
or
xor
mov
fwait
cmp
sbb
xchg
icebp
mov
clc
std
leave
push
pop
xchg
loopne
jae
(bad)
xchg
push
std
test
cmp
mov
xor
ret
pop
das
ins
sub
inc
sti
ins
sub
mov
xor
adc
mov
sbb
addr16
gs
fs
push
ds
in
iret
or
push
fidiv
mov
lahf
loope
ror
mov
cs
je
pop
dec
into
loope
repz
xchg
neg
mov
xchg
mov
pop
pusha
push
sbb
mov
mov
jecxz
scas
ja
jmp
fdiv
xor
scas
outs
pop
mov
retf
mov
ja
mov
xchg
jmp
test
xlat
gs
clc
hlt
dec
jmp
movs
mov
fsub
adc
(bad)
stc
mov
inc
dec
shr
mov
xor
cdq
dec
loopne
cmps
inc
inc
mov
aam
in
lods
cmps
push
movs
rcl
jb
jae
xchg
hlt
xor
test
fidivr
sbb
scas
or
adc
imul
mov
mov
xor
adc
inc
xor
sub
jb
fwait
cld
pop
aam
inc
jle
jp
jnp
xchg
jle
xchg
push
fistp
inc
nop
sbb
ins
sbb
jb
sub
sub
and
les
mov
clc
and
add
ret
adc
inc
xlat
cmp
ja
ss
pusha
out
pop
jmp
jb
cdq
rcl
sar
fisubr
clc
sub
das
mov
in
mov
rcr
je
adc
mov
add
fistp
mov
lock
push
and
jne
or
sub
and
jnp
fldenv
test
jo
bound
retf
stos
xchg
xor
or
daa
xor
push
sbb
shr
mov
out
fwait
mov
xor
push
pop
pop
or
xchg
mov
jmp
or
aaa
cld
pop
jns
adc
jp
jo
adc
xlat
pop
pushf
cwde
dec
fidivr
cli
arpl
loope
stos
cmp
jl
ret
jnp
aad
cli
jmp
mov
push
mov
and
ins
inc
lock
call
sti
clc
push
cmp
fs
cmp
sub
cmp
scas
cmps
(bad)
push
popa
mov
int
ds
das
fs
pop
fst
test
add
ss
mov
repz
xor
jmp
push
pop
xor
or
lahf
or
fisub
push
sbb
and
jmp
mov
aas
adc
in
xchg
inc
inc
scas
imul
cmc
add
push
rcl
pop
pushf
out
xor
rcl
mov
and
(bad)
xor
fimul
push
fisub
imul
sub
and
add
lahf
call
pop
cs
adc
cld
mov
adc
mov
imul
cs
adc
iret
cmp
push
push
xchg
leave
jg
pop
stos
add
and
aaa
or
or
pop
cwde
jo
repnz
aas
pop
shl
(bad)
hlt
pop
test
out
test
ror
popf
jmp
retf
loopne
ss
push
xchg
mov
cmps
dec
pop
dec
ret
fdiv
cmp
addr16
rcr
push
sub
mov
shl
cmp
xor
adc
xchg
std
ins
push
lods
sbb
shl
and
mov
jne
gs
cdq
fdiv
fistp
test
test
cmovl
sub
les
cmp
repz
mov
enter
mov
jo
inc
icebp
fist
cs
les
stos
sub
retf
clc
push
loop
pop
vmovmskps
jge
add
jb
push
cdq
xchg
mov
and
dec
fstp
dec
scas
shl
jo
add
in
pusha
fwait
add
addr16
pop
imul
hlt
jb
and
xor
pop
jle
outs
push
out
out
add
mov
cs
xor
imul
addr16
sbb
scas
nop
pop
pop
in
(bad)
loopne
sbb
inc
fdivr
movs
push
jmp
push
pop
(bad)
aad
push
jns
cmc
ror
and
test
adc
jmp
scas
out
xchg
sbb
hlt
jmp
jp
mov
inc
jae
into
mov
adc
inc
out
in
imul
popf
push
pop
addr16
pop
jae
ficom
or
inc
mov
gs
sbb
xor
sub
scas
mov
shr
xchg
dec
pushf
ss
popa
lea
stos
addr16
mov
cmc
call
out
icebp
or
inc
pop
pop
adc
fs
scas
lea
mov
pop
cmp
lea
outs
pop
out
lods
xchg
sub
xchg
sar
xor
sub
or
cmps
test
inc
and
(bad)
and
scas
fwait
clc
test
clc
test
cmpxchg
test
scas
add
adc
call
xchg
rol
pop
mov
scas
lea
stos
into
and
xchg
bound
(bad)
pusha
pushf
call
into
jns
add
jo
jbe
nop
mov
mov
mov
inc
mov
loop
sbb
cmp
sbb
sar
lahf
jnp
iret
sub
loopne
fwait
push
lods
inc
cld
or
out
iret
fild
add
xchg
test
lahf
mov
add
sub
jmp
adc
pop
push
and
mov
psubb
mov
mov
movs
movs
mul
xor
xchg
dec
fisttp
dec
xchg
adc
repz
ja
mov
mov
loop
rcl
sub
or
scas
and
repz
push
jne
jnp
lahf
or
retf
int
inc
and
mov
aad
cmps
adc
ret
hlt
inc
out
data16
mov
loop
outs
jecxz
sahf
mov
sbb
pop
ins
ret
mov
pop
das
repz
push
cmp
iret
pop
inc
data16
push
scas
loopne
ins
in
mov
sahf
dec
imul
or
inc
sub
cmp
sbb
mov
out
mov
xor
adc
(bad)
scas
stc
enter
mov
or
sbb
jbe
push
lds
sbb
dec
out
jecxz
dec
mov
add
ss
sub
add
dec
pop
or
and
in
sbb
xor
repz
and
(bad)
jecxz
cwde
call
mov
popa
movs
pushf
enter
jg
jge
jbe
xchg
sahf
xchg
mov
ss
ins
data16
mov
scas
into
loopne
inc
add
xlat
jnp
neg
sbb
jle
push
jns
push
pop
inc
cmp
xchg
or
push
sub
adc
ficom
pusha
dec
adc
stos
(bad)
retf
or
xor
or
add
sti
xchg
popf
mov
and
pop
test
and
in
ja
mov
(bad)
xchg
in
xchg
push
stos
lods
sub
inc
sbb
ins
add
pop
fstp
daa
and
xchg
mov
loopne
pop
into
pop
pop
jb
and
sbb
sbb
pop
jns
in
scas
ins
sbb
jbe
dec
push
out
mov
mov
stos
sub
xchg
mov
jne
push
push
and
std
mov
dec
sub
bound
or
or
xor
sahf
das
sub
dec
repz
movs
jbe
mov
sub
push
ins
cmp
jle
cmp
mov
or
and
xchg
aaa
sub
in
pusha
(bad)
outs
cwde
sub
mov
out
jb
cmp
inc
cmps
mov
add
dec
in
sbb
push
mov
(bad)
ss
push
sub
lss
test
mov
ins
das
movs
rcl
inc
pop
cmp
enter
sub
ins
pop
addr16
jne
pop
aas
mov
movs
or
push
movs
and
sbb
mov
std
pop
push
clc
stos
or
sahf
pop
int3
inc
xchg
shl
retf
push
fst
xor
push
and
sti
cmc
shr
je
xor
(bad)
imul
jb
neg
pop
cmp
xchg
cmp
mul
leave
mov
loop
mov
dec
pushf
cwde
(bad)
adc
leave
test
xchg
pop
or
jg
popf
push
out
shl
mov
xor
in
rcr
dec
pop
inc
scas
sub
mov
(bad)
mov
xchg
xchg
cwde
and
in
adc
(bad)
sub
xchg
sub
arpl
aad
xchg
gs
jno
jbe
outs
daa
sub
loope
mov
aam
outs
sub
loope
popa
and
popf
ret
or
jl
sub
jns
aaa
retf
das
fwait
and
cwde
inc
loope
lods
fnstenv
push
es
pop
in
or
test
ret
inc
mov
in
pop
dec
add
dec
loop
into
pop
and
xor
in
stos
jmp
push
push
push
pop
pop
dec
push
mov
jmp
clc
inc
pushf
jecxz
repz
int3
nop
mov
xlat
lahf
sbb
aam
mov
imul
mov
int
ficom
push
mov
inc
mov
pop
repnz
pushw
or
mov
adc
imul
or
push
push
cmp
push
push
retf
retf
push
xor
arpl
mov
jle
mov
mov
and
aaa
stos
mov
cmps
ficom
repz
cmp
mov
pusha
pop
cmps
movs
imul
or
cld
mov
mov
and
sub
push
add
fs
xchg
fldenv
sub
dec
inc
adc
push
in
cmp
ins
cmp
call
pop
arpl
sub
in
mov
inc
xchg
dec
aam
mov
sbb
mov
call
sub
xchg
and
lds
rcl
clc
mov
int3
xchg
aam
dec
mov
scas
out
(bad)
cmc
push
or
adc
out
popa
sahf
cmp
adc
dec
in
mov
cmp
call
pop
jb
xor
aaa
in
sbb
inc
js
cld
mov
adc
jb
or
mov
jge
sub
push
jne
(bad)
cli
sbb
sub
mov
inc
mov
adc
(bad)
call
repz
aaa
clc
xor
je
(bad)
push
jns
pushf
xlat
pusha
mov
and
sub
lea
inc
sub
idiv
daa
mov
sahf
xor
jnp
mov
sub
push
test
ret
and
pop
dec
in
push
mov
pop
push
xchg
xchg
pop
mov
or
mov
push
iret
mov
scas
jnp
and
dec
sti
sar
out
or
dec
out
mov
inc
sbb
mov
das
pop
jecxz
sub
and
int
pop
sti
lods
mov
hlt
pop
jmp
jo
lods
pop
out
or
retf
fcom
dec
xor
mov
sub
dec
lahf
mov
bound
push
int3
ret
ror
outs
inc
pop
push
fwait
cmps
cmp
pushf
into
mov
clc
jb
(bad)
imul
cld
pushf
mov
loopne
sub
mov
es
sbb
ficomp
xchg
cmc
or
dec
inc
mov
xchg
inc
push
or
arpl
vcvtss2si
ins
arpl
movs
push
push
mov
and
ds
dec
(bad)
cmp
inc
pop
jo
shl
pushf
fsubr
jbe
(bad)
es
test
jnp
mov
push
inc
inc
jle
hlt
or
or
mov
mov
push
gs
pop
mov
sbb
cmp
icebp
sub
rol
cmp
cmp
shr
mov
pop
or
rol
loop
jnp
int3
popa
bound
aad
clc
cli
push
out
pop
inc
jg
mov
cs
retf
movs
mov
push
inc
inc
(bad)
cld
jns
int3
inc
pop
and
cmp
xlat
sbb
fwait
pop
fwait
jg
dec
jecxz
aaa
xchg
and
pop
xchg
cs
sub
inc
push
imul
jp
push
in
xchg
inc
fdiv
or
stos
test
push
xchg
cmp
jge
adc
cmc
sbb
ss
lods
push
popf
jl
out
imul
imul
fnstcw
(bad)
not
ret
jns
and
shl
push
sbb
shl
dec
xchg
push
push
outs
loope
scas
push
cmp
add
fcomi
(bad)
scas
jecxz
lods
out
cmp
dec
pop
adc
arpl
cli
and
mov
cdq
iret
inc
cmp
sbb
jmp
adc
mov
mov
pop
call
cmc
(bad)
jecxz
inc
push
aas
cmp
lods
ror
aam
and
mov
cmp
push
fcmovnbe
jns
je
xor
xlat
mov
push
sub
mov
ss
shl
in
je
dec
xlat
das
and
aas
(bad)
push
push
mov
adc
ja
movs
rol
cmps
cmp
cdq
sub
pushf
popf
(bad)
enter
stos
and
(bad)
out
fisttp
shl
xor
mov
push
lods
mov
cmp
les
jmp
push
nop
pop
dec
cmp
cmps
bound
out
jnp
loop
bound
mov
sbb
ror
xchg
add
sub
(bad)
out
test
push
sbb
outs
or
sub
sbb
add
adc
pop
sbb
(bad)
pop
mov
pop
jmp
(bad)
xor
clc
sub
sub
jae
adc
pushf
cmp
adc
push
arpl
jp
clc
aad
pushf
test
popf
adc
mov
repz
cs
popf
jb
out
push
sbb
rcl
add
inc
adc
or
adc
int3
ror
cmps
jp
fcom
push
xor
ds
mov
inc
lods
and
jo
dec
outs
inc
add
sub
inc
repz
cmps
push
js
es
cdq
cld
push
push
add
call
jge
pop
mov
das
pop
sbb
movs
sbb
and
push
pop
mov
arpl
cmp
into
pop
push
adc
mov
push
imul
dec
xchg
shl
pop
test
and
ds
adc
jl
push
not
add
xchg
adc
pop
fs
mov
stos
stos
rcr
sbb
arpl
test
push
xchg
mov
adc
adc
cmp
pusha
mov
push
or
mov
test
(bad)
arpl
sub
sbb
mov
adc
sbb
adc
xlat
inc
pop
jl
sbb
(bad)
fsub
jnp
fs
dec
jbe
mov
pop
push
add
imul
imul
dec
sbb
std
(bad)
and
xchg
sbb
xchg
or
into
xor
push
push
sbb
push
into
sbb
mov
push
enter
sub
daa
call
or
adc
je
adc
rcr
mov
mov
cmp
push
and
xor
jl
cdq
rol
adc
adc
mov
pop
jne
cmp
iret
fwait
outs
test
nop
push
cmp
imul
add
cmp
add
out
and
inc
test
cld
lock
(bad)
cmps
cmp
hlt
int
sbb
jge
pop
sti
mov
mov
add
or
pop
test
add
pushf
mov
test
rcr
test
mov
test
int
sub
sub
jl
push
mov
stos
add
fst
repz
pop
mov
add
aad
push
rcl
mov
cdq
or
outs
call
loop
scas
arpl
and
jno
push
bound
cmp
sub
pop
fisubr
leave
sar
jmp
stos
(bad)
cmc
fcomp
fistp
jmp
mov
push
daa
add
push
inc
or
test
cld
leave
jge
test
cmc
pop
inc
stc
ss
test
rcl
xor
mov
outs
call
push
xchg
aam
push
inc
scas
cwde
popa
mov
push
out
ror
mov
aaa
mov
aad
pop
pop
mov
nop
mov
inc
mov
out
sub
cmp
dec
lock
push
lea
loope
jns
rcl
inc
mul
jg
ins
mov
in
inc
mov
mov
sahf
dec
shl
inc
(bad)
popa
aad
cmp
sbb
xor
mov
cwde
or
test
and
xor
push
and
xchg
push
jbe
ss
lods
jmp
mov
xor
pop
mov
aas
sub
mov
sub
aas
xchg
mov
ret
es
sub
lahf
and
imul
inc
daa
mov
fdivrp
jle
arpl
xor
jne
popa
dec
into
pop
ret
jg
cld
mul
(bad)
mov
mov
mov
pop
cmps
pop
(bad)
pop
mov
push
ret
retf
test
xlat
dec
pop
sub
mov
cmp
std
movs
test
mov
pop
pop
or
dec
dec
stos
add
fwait
test
add
lods
ror
jns
shr
idiv
fcomp
test
fcmove
aad
mov
pop
jbe
lods
jg
pusha
add
(bad)
les
inc
adc
jnp
jmp
retf
cld
je
hlt
retf
arpl
xchg
or
outs
pop
inc
fcom
jbe
sbb
aaa
xlat
adc
sub
xchg
(bad)
rcr
lds
outs
pop
call
cmps
cmp
repnz
sbb
xor
test
xor
std
cli
sub
lahf
sbb
jmp
loop
outs
outs
out
retf
jmp
cmp
jmp
jae
xchg
push
jne
or
movs
adc
pop
in
dec
xor
xor
sub
retf
pop
push
pop
ins
gs
inc
retf
pop
jmp
movs
push
mov
push
(bad)
sub
pop
or
mov
stos
adc
fiadd
pop
pusha
sbb
sbb
jae
mov
dec
mov
inc
pop
enter
fist
xchg
(bad)
dec
lods
ins
mov
ret
mov
pop
mov
xchg
inc
xchg
cmps
cmp
push
push
daa
int3
lods
inc
add
pop
xchg
push
fwait
sbb
inc
push
and
loop
lahf
dec
push
es
loope
and
loope
sub
(bad)
cmp
in
mov
dec
sub
jge
mov
cmp
in
push
sub
push
sar
bound
and
jmp
xchg
push
sbb
test
outs
js
iret
les
(bad)
mov
xchg
or
adc
lea
sub
fwait
inc
jl
pop
rcr
xor
in
dec
lds
sar
data16
fcomi
(bad)
cld
fild
cmp
mov
fsub
push
addps
or
test
adc
cmp
(bad)
cmp
scas
xchg
inc
push
add
pusha
pop
pusha
out
out
xor
icebp
push
add
xor
popa
movs
mov
(bad)
(bad)
pop
retf
inc
shr
daa
js
mov
call
mov
xor
cmps
nop
cld
xchg
mov
in
nop
pop
cmps
cs
(bad)
mov
(bad)
pop
pushf
(bad)
pop
and
and
test
mov
add
sbb
stos
or
pop
shl
test
sbb
mov
jecxz
cld
sti
adc
loop
data16
in
fadd
aaa
stos
jmp
scas
jo
shl
out
jecxz
pop
cdq
aas
cmp
mov
lock
inc
mov
clts
xor
xchg
push
sbb
xor
aad
push
xchg
aas
xchg
sbb
dec
inc
inc
test
lea
retf
lock
xchg
int
int
das
and
cmp
cmps
inc
xor
ja
aaa
int3
or
add
xchg
out
pop
adc
dec
out
lea
and
pop
out
lea
hlt
pushf
jae
cwde
xor
push
out
mov
test
fadd
mov
imul
mov
jmp
and
add
(bad)
adc
loop
jb
pushf
inc
bound
in
inc
xlat
adc
mov
sub
stc
cmp
out
loope
loop
push
xchg
jl
es
test
std
out
jmp
fistp
push
xor
iret
je
adc
and
add
cmps
sbb
pop
dec
xchg
adc
add
(bad)
cmp
imul
push
jmp
dec
mov
xchg
sbb
jle
mov
push
mov
jmp
mov
push
jmp
ins
jmp
pop
sbb
mov
mov
(bad)
pop
or
cmps
aam
hlt
test
adc
in
inc
xor
push
xchg
push
xor
pop
ds
and
sahf
push
imul
jo
call
sub
jl
cwde
cmp
inc
mov
(bad)
ins
sbb
mov
lea
fld
pop
jmp
pop
nop
push
pop
cmc
iret
cmp
loope
and
pushf
push
sub
in
add
cmc
ror
push
in
push
fucomp
push
fisubr
popf
loopne
push
retf
nop
push
add
mov
lahf
ins
repz
sbb
sbb
dec
loope
sub
mov
adc
push
jae
adc
sub
pop
mov
mov
sbb
leave
mov
or
ret
sub
cld
pop
xchg
out
dec
sar
sahf
cld
dec
or
cmp
cld
iret
gs
push
or
fbstp
or
mov
cld
xchg
cmp
jb
dec
mov
sbb
sti
mov
jnp
fisub
repnz
mul
(bad)
jg
dec
mov
(bad)
jno
pop
nop
mov
(bad)
retf
fistp
jmp
(bad)
adc
gs
cwde
mul
dec
mov
push
pop
sub
push
add
mov
leave
rol
call
jne
xchg
daa
ins
add
mov
cmps
call
sbb
sbb
pop
xchg
test
into
cmps
inc
jp
test
push
retf
push
(bad)
cmp
shr
repz
aam
lea
call
hlt
sbb
enter
adc
ja
cld
xchg
inc
out
mov
xor
pop
cdq
mov
pop
pop
std
and
retf
mov
cdq
(bad)
cmp
cdq
loope
jle
in
adc
(bad)
mov
lahf
dec
sub
(bad)
pop
add
push
mov
mov
mov
inc
jge
ret
call
pop
cmp
dec
mov
rol
adc
call
ins
int3
inc
std
push
push
xchg
add
movs
(bad)
inc
and
inc
and
pop
pop
pop
outs
jne
stos
jne
dec
pop
inc
mov
xchg
sbb
mov
outs
push
repnz
and
daa
sar
test
cmp
mov
xchg
xor
scas
int
jns
pop
inc
jle
aaa
adc
lock
lahf
add
call
movs
out
into
push
xchg
sbb
shl
dec
lods
dec
out
sbb
inc
call
jae
pop
push
sub
call
js
jo
addr16
add
push
test
cs
fst
test
and
les
or
in
fist
sbb
(bad)
xor
push
push
push
sbb
dec
imul
inc
sbb
pop
out
add
fild
test
mov
sub
mov
lods
mov
mov
pop
lahf
pop
jmp
das
(bad)
pop
jbe
jl
inc
sub
adc
(bad)
in
push
jne
mov
or
and
push
jl
push
movs
ret
cmc
adc
ret
mov
pop
jb
call
ins
fucomip
aaa
fadd
into
int
dec
mov
adc
rcr
adc
dec
in
cli
sub
gs
xor
inc
popf
cdq
scas
ja
repnz
iret
push
mov
je
inc
fidivr
nop
cmp
jno
xor
fld
adc
(bad)
imul
outs
adc
jle
adc
add
sub
out
dec
scas
dec
das
mov
mov
or
mov
stos
movs
mul
sti
jl
ins
mov
daa
rol
inc
sub
jo
fist
inc
std
inc
dec
xchg
adc
repz
shl
pop
push
push
retf
cdq
jmp
pop
dec
pushf
sub
call
rcr
xchg
xchg
lods
pop
push
cwde
add
sub
gs
push
das
rcr
and
adc
push
mov
pop
and
pusha
inc
pop
or
sbb
dec
sbb
aas
add
push
xor
or
pop
(bad)
(bad)
push
and
ja
add
mov
ret
neg
call
add
sbb
repnz
xchg
cmps
fist
cmp
cmp
js
cld
jno
scas
adc
outs
jmp
xor
pop
test
xchg
in
shl
jmp
mov
pop
cmps
sti
sbb
ss
and
jne
rcr
inc
jo
call
ss
retf
ds
xlat
cdq
dec
test
lds
adc
sub
jmp
adc
push
shl
call
jp
inc
dec
dec
repnz
leave
xchg
jne
dec
dec
sti
inc
and
sbb
xlat
std
clc
sub
sub
inc
ret
add
stc
pusha
jno
mov
popf
popf
adc
xchg
in
sbb
repz
cmp
dec
dec
gs
add
cld
fbld
ret
pop
lods
jle
adc
fcmovne
pop
jle
sbb
pushf
call
mov
jb
repz
pusha
mov
sti
jl
jns
fwait
arpl
push
sub
jns
adc
dec
push
push
inc
mov
sbb
scas
test
dec
js
frstor
mov
out
call
in
dec
jae
mov
not
imul
out
mov
fadd
push
jecxz
repnz
mov
dec
push
xchg
xor
pusha
dec
inc
in
inc
pusha
inc
mov
add
clc
push
sbb
repnz
dec
push
inc
sbb
mov
or
mov
adc
popa
inc
aam
xor
ins
pcmpeqw
aas
fild
jnp
out
mov
mov
dec
and
mov
sub
adc
and
push
dec
mov
or
int
xor
adc
mov
rep
fcmovnbe
out
push
adc
mov
pop
xor
adc
ror
aam
je
pop
ins
sbb
jb
cs
iret
sahf
fistp
test
push
dec
stc
sub
jo
pop
mov
out
test
repnz
cmc
xor
push
jo
arpl
inc
and
aad
adc
pop
sbb
push
mov
jns
add
xchg
inc
test
aam
loop
aaa
pop
out
setns
into
imul
int3
fimul
add
sbb
adc
out
not
xor
cmp
fwait
ja
mov
and
mov
sbb
adc
outs
popw
lea
(bad)
push
mov
dec
(bad)
pop
push
scas
stc
in
cmp
aad
or
int
hlt
loopne
xor
jns
fisubr
sti
xchg
test
xchg
adc
les
mov
push
push
imul
pop
cwde
jns
fsubr
pop
in
push
aaa
into
pop
leave
out
stos
cwde
pushf
(bad)
adc
dec
dec
sbb
scas
add
or
dec
pop
stos
fs
std
adc
scas
fst
or
jb
test
adc
loope
push
push
inc
mov
out
push
or
mov
pop
test
pop
nop
ins
push
cli
cld
call
xchg
mov
ins
cmp
cmc
pop
jg
cmp
cmp
dec
test
sar
mov
and
inc
dec
and
into
scas
fcom
out
int
mov
shl
retf
or
mov
aad
dec
mov
mov
cs
push
rcl
xor
lods
push
jl
jp
pop
in
inc
retf
fldcw
inc
dec
repz
ds
popa
pop
repnz
out
jo
mov
pop
sbb
in
pop
out
(bad)
mov
loop
nop
xchg
es
dec
adc
pushf
repnz
aad
jmp
dec
in
xchg
(bad)
mov
das
sbb
retf
pusha
mov
movs
dec
fnstsw
xor
pop
int
gs
mov
mov
div
sbb
fs
xchg
in
dec
cmp
stc
scas
in
mov
xchg
daa
std
rcr
repz
sub
int
push
inc
xlat
xchg
push
sbb
lea
lahf
daa
push
fnstsw
cmp
xchg
jae
aad
sahf
pop
mov
gs
adc
fisubr
xchg
call
stc
dec
dec
cli
mov
loop
pop
push
ins
jne
fwait
arpl
add
sub
int3
or
es
(bad)
cmps
mov
dec
bound
pusha
xchg
(bad)
mov
jbe
(bad)
(bad)
pop
je
adc
movs
xor
adc
cmp
push
push
mov
fst
nop
in
clc
xchg
xchg
xor
push
iret
outs
in
rcr
push
jae
les
(bad)
and
add
mov
sbb
test
adc
pop
sbb
dec
cdq
in
(bad)
mov
xlat
mov
sbb
cdq
into
pop
jmp
push
scas
add
das
pop
in
xor
inc
test
fild
xlat
adc
jo
xor
sub
jne
mov
dec
push
rcr
in
arpl
sahf
sub
sbb
xor
std
or
inc
repnz
adc
cdq
test
fisttp
sti
faddp
xor
pusha
mov
jmp
lea
cwde
sub
pop
sar
out
js
cs
mov
data16
dec
jmp
cmovle
add
push
or
jle
nop
mov
test
mov
lahf
and
sbb
stos
sbb
jg
imul
inc
xchg
adc
or
mov
mov
fdivr
arpl
cmp
ret
fcmovu
cmp
and
retf
cwde
xchg
inc
adc
aam
and
or
fistp
cmp
arpl
lock
mov
or
mov
(bad)
scas
pop
in
js
outs
out
cld
clc
push
push
jbe
mov
inc
mov
dec
arpl
xor
sub
cwde
push
cld
dec
pop
xchg
cmps
mov
pusha
jecxz
repnz
fcom
test
test
push
test
popf
dec
or
clc
popa
fcom
adc
pushf
dec
inc
push
xor
call
push
or
pusha
test
pop
movs
adc
inc
add
sub
pop
jmp
jg
xor
push
loope
ss
cwde
push
movs
dec
xor
sbb
imul
mov
adc
push
addr16
sbb
jmp
adc
retf
mov
xchg
pop
push
xor
int3
(bad)
jmp
sub
jg
mov
sbb
retf
cdq
sub
cld
nop
std
fcomip
es
hlt
in
out
push
dec
movs
jae
jmp
addr16
add
pop
popa
fwait
pop
lods
jne
push
push
jbe
pop
jg
pop
sub
or
push
aam
push
pop
pop
mov
shl
test
or
xor
xchg
sar
(bad)
jl
xchg
retf
xchg
(bad)
mov
int
pop
mov
movs
mov
or
in
push
movs
sub
dec
and
mov
push
repz
and
cmp
hlt
aad
sub
in
add
push
mov
add
push
mov
push
sub
test
in
xrelease
add
add
push
fs
in
push
add
or
sar
push
pop
popa
dec
pop
jb
je
cmp
(bad)
repz
in
adc
(bad)
call
out
inc
cmps
aas
mov
xor
int
outs
cmp
cld
mov
jns
jl
in
pop
imul
sbb
pop
in
sbb
xchg
dec
loop
repnz
dec
xlat
fcomp
and
adc
add
test
out
push
xchg
xor
mov
hlt
pop
call
stos
stos
rcl
jbe
ss
nop
inc
popa
adc
sub
enter
dec
xchg
out
ss
xchg
aas
popa
jmp
inc
add
push
js
popf
(bad)
test
ret
xlat
mov
movs
inc
push
sbb
sbb
(bad)
ja
pop
jle
add
sub
push
popf
mov
dec
dec
jne
and
or
ja
pop
jle
add
xchg
cmc
push
popf
xchg
std
pop
and
mov
cmp
das
sbb
sbb
sahf
das
mov
std
popa
loopne
je
pop
sbb
inc
and
inc
lods
or
popf
jne
les
jne
and
rcr
pop
xchg
aas
cmp
or
fdivr
sub
adc
pop
int3
adc
sti
out
clc
(bad)
or
inc
adc
add
cwde
xor
scas
cmp
sbb
prefetchw
aad
xor
ror
xor
jne
adc
or
scas
dec
mov
imul
push
inc
dec
xchg
push
ret
out
std
cmps
and
mov
imul
push
inc
adc
inc
xor
int
sub
pop
bndstx
adc
daa
hlt
mov
test
xchg
repnz
enter
fs
push
xor
les
into
sub
mov
xor
cmc
cmp
lea
push
and
jmp
stos
cmp
mov
add
ins
adc
ror
ss
clc
rol
xor
dec
adc
lea
es
into
jno
loop
(bad)
fidiv
std
mov
jnp
mov
and
adc
(bad)
pop
cmp
mov
adc
push
fdivp
xlat
cmp
mov
sbb
loop
add
xor
pop
fwait
add
sub
or
fwait
push
mov
xchg
(bad)
into
jne
das
cmc
xchg
cmp
jno
mov
pop
stc
cmp
inc
nop
cmps
pop
dec
out
push
add
sub
fwait
fwait
stos
popf
mov
inc
and
adc
or
jecxz
mov
outs
(bad)
jbe
xchg
inc
arpl
(bad)
dec
cmp
imul
inc
pop
imul
ins
data16
sbb
sub
int3
lds
push
mov
dec
adc
mov
sbb
pop
mov
pop
loopne
adc
leave
call
cli
je
stos
(bad)
js
sti
imul
xchg
cmp
test
sub
and
xchg
adc
add
retf
stos
xlat
repnz
jno
xchg
cld
sub
adc
jmp
cs
data16
or
jp
fmul
mov
sub
and
(bad)
nop
imul
mov
mov
lahf
mov
dec
fwait
xchg
xor
xchg
imul
rcl
push
mov
xor
fdivr
adc
stos
lods
inc
ja
ja
cli
cmps
lods
inc
jbe
mov
adc
test
jb
test
fbstp
adc
pop
movs
sub
adc
sahf
pushf
push
add
sar
jmp
mov
cmp
cmp
mov
cli
xchg
lods
pusha
jbe
jmp
outs
sti
cmps
jne
outs
pop
int3
imul
enter
jne
call
cdq
dec
repz
je
push
xchg
pushf
push
push
cld
mov
mov
retf
clc
xor
xchg
jbe
not
popa
mov
repz
jnp
cli
scas
lods
cwde
jbe
jmp
xchg
fdivp
arpl
push
pop
in
aad
sub
xchg
jnp
ficomp
loopne
retf
adc
dec
cdq
inc
push
out
jmp
and
call
cmp
inc
push
add
mov
movs
pop
sub
push
shl
and
and
and
push
nop
mov
or
in
ficom
jne
repz
xor
gs
iret
call
call
adc
fs
jbe
sub
cmc
fisub
sti
fwait
jecxz
jbe
out
pushf
and
xchg
call
dec
sbb
mov
aas
pushf
xor
jg
bound
fmul
sub
sti
pop
xchg
pop
les
pop
push
xor
push
ret
rcr
mov
cdq
inc
jb
out
ins
jne
aas
add
inc
test
push
(bad)
jg
cmp
inc
adc
jl
sbb
test
add
inc
xor
mov
retf
pop
xchg
jnp
(bad)
(bad)
test
and
cmp
test
(bad)
pop
lods
xor
inc
dec
call
pop
jl
mov
inc
push
call
dec
cdq
ds
adc
dec
or
sbb
out
or
pop
movs
aam
push
sub
enter
ret
test
or
sbb
xchg
mov
xchg
mov
(bad)
out
dec
pop
jnp
cmp
mov
in
(bad)
adc
repz
retf
cmp
pop
jae
movs
sbb
fwait
sub
and
jmp
push
pop
cmp
iret
nop
sub
and
sub
addr16
sub
xor
fwait
pop
or
adc
mov
add
dec
push
and
retf
cmp
and
push
pop
clc
adc
jle
imul
call
lock
xchg
not
mov
ja
push
sbb
pop
lahf
inc
mov
push
cmp
cmps
loopne
xchg
sti
cmp
mov
jecxz
and
or
in
mov
adc
sub
ret
fcmovne
aas
sub
test
movs
mov
jmp
imul
ficomp
int3
jge
shr
dec
sar
mov
js
mov
sbb
sbb
and
in
pop
arpl
mov
mov
push
mov
push
aaa
retf
sbb
fidivr
xchg
and
sar
aaa
iret
js
push
(bad)
call
add
mov
fwait
sbb
ja
pop
sbb
nop
cmp
pop
mov
pop
stc
das
push
inc
js
jo
ret
mov
fwait
mov
and
cmp
ss
fist
jmp
stc
xlat
test
mov
daa
sub
aaa
jle
sbb
retf
call
aam
cmps
stos
in
push
lods
add
into
sub
push
jmp
mov
mov
jmp
lods
xor
sbb
fisttp
gs
jmp
sbb
fidiv
sub
mov
(bad)
pop
cmps
(bad)
arpl
fs
adc
into
xor
ds
adc
add
fst
xor
sbb
pop
or
int3
shl
out
jge
loope
mov
inc
cli
jo
sub
fst
sub
ins
pushf
arpl
jo
in
hlt
xor
ficom
imul
and
inc
fsub
popf
jnp
mov
xchg
jmp
mov
sahf
add
or
jmp
ds
xchg
sbb
imul
and
sbb
sbb
jmp
in
shl
xchg
ja
or
mov
(bad)
xchg
sar
cwde
ins
sub
idiv
sub
fld
mov
pop
sbb
ins
dec
mov
hlt
mov
mov
pop
mov
sub
mov
mov
xchg
pop
movs
pop
cli
jle
mov
retf
jnp
cdq
xchg
xlat
aaa
loop
sbb
shl
dec
hlt
or
cld
loop
push
adc
and
inc
pop
cmps
jnp
test
ficom
dec
xor
jo
loop
fsub
std
pop
test
push
ret
dec
out
cmp
ret
push
dec
lock
pop
int3
push
in
dec
jae
xchg
jge
sbb
push
inc
iret
sub
dec
push
test
fst
pop
mov
mov
in
sub
sub
lea
int3
push
in
pop
(bad)
xchg
sbb
test
in
int3
fild
scas
les
jmp
pop
fiadd
ds
call
dec
call
scas
pop
and
sub
inc
xor
xchg
sahf
in
xchg
icebp
xchg
pop
je
jmp
xor
(bad)
(bad)
adc
and
sub
shl
push
loop
aaa
into
jnp
jno
mov
pop
iret
push
xchg
push
fwait
pusha
inc
test
inc
and
inc
(bad)
loopne
lahf
mov
mov
in
(bad)
jl
repz
inc
out
call
jl
pushf
xchg
inc
jg
inc
mov
push
test
out
add
inc
sahf
outs
jno
cmc
and
xchg
inc
pop
loopne
outs
stos
inc
rcl
jp
add
ret
jge
mov
mov
ins
mov
push
cmps
mov
clc
jp
or
dec
shl
sub
cmps
fnstcw
or
addr16
arpl
sar
retf
mov
imul
int
push
iret
pop
pop
mov
and
mov
push
imul
pop
push
xchg
sub
cmp
das
xor
loop
mov
dec
jl
dec
int3
sbb
pop
adc
pop
fwait
sbb
sub
out
pop
repnz
cmps
pusha
add
pop
int3
push
push
imul
sti
mov
in
fwait
test
push
pop
jmp
mov
push
outs
sbb
add
pop
in
xchg
jnp
pushf
add
jo
and
popf
cmp
shr
or
cmc
cdq
and
sbb
adc
dec
add
push
movs
xor
loopne
(bad)
cvtps2pd
push
xchg
cli
and
or
sbb
aad
pop
adc
or
sub
data16
inc
in
fmul
ins
push
cmp
in
arpl
out
push
jg
add
sbb
ror
sbb
setge
add
cmps
popf
adc
sub
jns
jmp
jns
lds
jl
add
mov
mov
add
mov
mov
add
sub
mov
int
je
xchg
je
cmc
xor
out
xchg
fmul
shl
cmps
clc
inc
repz
xor
cdq
sbb
shl
inc
jge
cmp
add
mov
push
js
or
cmp
call
sti
ror
cmp
jb
cmp
or
pop
in
stos
cmp
pop
in
or
stc
call
test
imul
add
jbe
pop
ficomp
push
in
xchg
clc
sbb
ror
lods
jbe
popa
cmp
in
push
sub
pusha
sub
push
dec
neg
push
std
mov
arpl
fistp
pusha
fisttp
mov
(bad)
lock
pushf
mov
dec
imul
cdq
pop
into
fistp
inc
sub
sbb
(bad)
push
and
adc
push
cwde
mov
cmp
xor
xor
lds
adc
xchg
mov
dec
mov
nop
mov
push
mov
aaa
sub
das
pop
ds
and
mov
clc
fimul
scas
int3
push
jnp
dec
jmp
out
xchg
pop
(bad)
fs
clc
push
call
(bad)
daa
sub
jmp
jle
(bad)
stc
les
mov
ret
fadd
lds
sub
fiadd
sub
das
mov
adc
mov
push
sub
int3
adc
mov
add
cmp
imul
dec
cmp
cmc
inc
xchg
lods
and
pop
xor
fcomp
in
ror
and
bound
push
fsubr
das
and
xor
mov
stc
xor
call
movs
sbb
inc
add
(bad)
out
mov
cwde
dec
mov
add
mov
jbe
push
out
test
(bad)
int
inc
sbb
pop
mov
fucomip
mov
fsub
shl
pop
in
lods
xchg
(bad)
push
push
push
and
mov
xchg
jb
out
jle
rol
dec
(bad)
das
sub
cmp
mov
mov
shl
pop
je
or
mov
stc
pop
jg
data16
adc
ret
sar
xchg
std
dec
out
xchg
gs
in
repnz
retf
sub
mov
sbb
fs
mov
pop
push
fs
add
inc
test
pop
call
imul
fild
call
sub
fst
repz
pop
and
and
icebp
pushf
push
call
mov
ds
lock
or
and
mov
sub
fyl2xp1
ins
sbb
aad
rol
push
pop
mov
gs
sbb
fidiv
and
enter
or
adc
aas
ficomp
push
cmp
aas
ret
cwde
or
daa
adc
mov
or
mov
repz
sbb
jecxz
pop
jl
cld
mov
rcr
dec
loop
and
mov
mov
pusha
xchg
cmp
mov
cmps
clc
xor
sub
retf
adc
or
cmc
fsubr
stc
xchg
popa
xchg
adc
(bad)
imul
mov
mov
test
mov
adc
cmp
mov
test
ja
push
int
movs
and
push
pushf
test
loope
pop
aas
mov
dec
sbb
mov
cmp
and
inc
(bad)
ins
jbe
cmp
jle
or
sub
cmp
push
xor
pop
cmp
shl
xchg
loope
dec
arpl
ins
retf
pop
rol
cmp
push
dec
xchg
fstp
ret
(bad)
into
js
pop
sub
push
test
outs
leave
xchg
xchg
adc
adc
mov
push
test
lahf
out
push
mov
popf
pop
popf
mov
add
test
adc
jmp
scas
pop
mov
dec
inc
sub
jno
push
push
sub
lahf
push
out
into
xchg
mov
mov
stc
arpl
cwde
push
cmp
iret
pop
jl
test
sbb
mov
adc
aam
add
mov
jl
mov
cs
sbb
int3
cwde
test
(bad)
dec
sahf
pop
jae
movs
imul
fsubr
repz
fsubr
jg
enter
jecxz
test
push
aam
js
push
cmp
test
aam
jle
nop
pop
dec
bound
aam
xor
lds
pop
test
test
cmc
jl
mov
lds
or
and
popf
jle
lock
int
fnstenv
mov
pop
mov
push
cmp
adc
dec
data16
cmp
jae
lock
shl
outs
jg
adc
and
jl
xor
mov
sbb
and
jmp
shl
pop
jo
enter
xchg
mov
scas
in
cmps
push
push
sbb
xchg
adc
clc
pop
sar
pop
test
xor
xor
jg
call
call
ja
add
daa
sbb
(bad)
xchg
mov
mov
xchg
jle
je
ds
in
pop
mov
in
cli
jge
outs
pop
mov
dec
adc
jns
outs
mov
lgs
adc
mov
add
push
test
imul
cmp
jnp
push
add
push
(bad)
push
sbb
cmp
dec
sbb
fs
sub
(bad)
clc
hlt
je
mov
nop
xor
xor
push
mov
mov
mov
bndstx
pop
add
shr
int
pop
xchg
fsub
rcr
mov
xchg
pop
mov
sbb
retf
xchg
sbb
cwde
xor
inc
(bad)
into
retf
pop
lahf
mov
lods
pop
fsubr
sar
mov
cmp
cmp
pop
cli
stos
push
pop
cmc
jns
dec
idiv
gs
pop
pop
push
das
xchg
inc
mov
in
push
mov
test
mov
std
mov
cmp
mov
push
pop
outs
mov
push
fsub
je
loope
test
nop
pop
leave
hlt
shr
push
jmp
jo
fwait
xor
jno
cmp
and
into
sbb
xchg
sub
xchg
xor
sbb
mov
inc
not
leave
pushf
xor
cmps
mov
xchg
aaa
sti
je
cs
or
mov
cmp
imul
push
ins
inc
fstp
(bad)
nop
dec
cwde
mov
fadd
xor
lods
mov
sub
cdq
push
xchg
cwde
cdq
fsubr
push
pop
cmps
sti
scas
cmp
xchg
mov
mov
std
jo
popf
into
lock
xchg
xchg
sbb
ja
jecxz
xchg
out
lods
fcomp
lods
cmp
jns
imul
(bad)
jmp
cmp
pop
adc
bound
imul
aaa
adc
xchg
in
mov
(bad)
sub
dec
xor
mov
dec
cmp
mov
call
(bad)
adc
das
out
(bad)
jle
sub
dec
xor
fbstp
fwait
and
cmp
ret
push
xor
pop
dec
sar
and
jecxz
fucomi
mov
and
aad
adc
fcom
into
xor
fwait
out
xlat
push
pop
fmul
push
mov
pop
xchg
sbb
ss
add
sub
xor
popf
cmps
add
out
pop
adc
fcmovne
dec
call
test
pop
popf
push
push
push
jecxz
sahf
xchg
push
push
mov
push
pop
mov
cdq
(bad)
stos
scas
fsubrp
nop
fsub
mov
test
repz
and
dec
cmp
loopne
lods
xor
sbb
aam
inc
mov
xchg
fld
lea
pop
iret
clc
rcr
ja
rcr
jmp
mov
pop
push
bound
(bad)
dec
gs
(bad)
sbb
lods
in
mov
lods
inc
xor
cs
mov
pop
imul
jne
outs
push
hlt
imul
loope
cmp
mov
mov
mov
pop
fnstcw
inc
push
add
aas
mov
inc
jmp
fcomip
hlt
mov
cdq
jl
jne
ins
outs
sbb
jo
push
mov
xor
out
in
cs
cdq
pop
inc
sub
shl
and
jo
retf
faddp
out
in
mov
xor
outs
sahf
fwait
or
in
ret
sti
inc
icebp
mov
add
sar
xchg
adc
ja
xor
sub
das
(bad)
push
in
fsub
stos
sbb
or
xlat
and
je
js
sbb
sub
and
ins
je
push
adc
les
retf
or
adc
dec
jg
(bad)
fsubr
aam
push
out
sub
ja
add
pop
repz
lea
(bad)
leave
add
leave
add
test
pop
mov
push
retf
ror
into
inc
sbb
les
and
pop
and
bsr
out
dec
movs
xchg
pop
or
and
movlps
xlat
scas
and
and
int3
jl
enter
mov
sahf
jnp
aaa
shl
retf
outs
ins
pop
outs
sbb
ficom
push
bound
in
xchg
sub
cmp
mov
lods
lahf
nop
push
nop
xor
retf
mov
xchg
xlat
cmc
neg
pusha
cli
jmp
lods
and
jnp
pop
pop
xor
xor
dec
adc
adc
sub
push
lods
push
movs
and
xchg
mov
xchg
push
sub
call
sub
ins
fimul
repz
ds
dec
sbb
fs
dec
push
daa
clc
js
and
aad
inc
sbb
hlt
mov
or
in
shl
cmp
pop
mov
pslld
sub
in
xchg
push
popf
mov
fcomp
cmp
add
cli
pop
mov
cmp
xor
inc
je
push
jb
mov
xor
dec
mov
push
jg
fnstcw
mov
ror
test
cmp
xchg
mov
xor
xor
or
mov
ins
sbb
pop
lods
into
mov
movs
sub
sbb
fild
add
das
in
aad
mov
xor
loopne
dec
add
aam
or
xchg
cld
cmps
mov
add
push
repnz
mov
push
push
iret
push
rol
add
daa
cli
and
popf
or
push
test
and
cdq
imul
adc
mov
mov
mov
xor
jg
ins
cmp
das
jnp
push
adc
ins
les
adc
ja
fistp
or
int
data16
out
imul
outs
pop
lds
repz
movs
jmp
inc
push
aad
test
outs
jmp
adc
xchg
shr
into
shl
shl
clc
cmp
pop
mov
pop
out
sbb
sbb
imul
and
bound
jbe
cmp
outs
sbb
push
rcr
(bad)
retf
repnz
push
ficom
dec
mov
ins
cmp
into
cli
fistp
adc
dec
bound
mov
xchg
scas
pop
sbb
jge
rcl
ret
lods
jnp
jp
and
ror
push
mov
or
mov
rol
xor
jmp
idiv
fild
les
jnp
fwait
xor
jmp
inc
sbb
hlt
cmps
mov
inc
mov
outs
jmp
pop
cmps
int3
sbb
mov
imul
add
adc
cmp
jmp
inc
xchg
adc
mov
sbb
push
cmp
ror
add
pop
fs
dec
pop
test
adc
or
outs
test
in
fnstcw
fld
xchg
push
iret
xchg
jb
das
cmp
jmp
loope
cli
iret
in
ins
mov
add
dec
mov
shr
aaa
retf
out
mov
js
in
mov
sbb
mov
inc
mov
stc
inc
popf
bound
mov
aad
fwait
sar
add
jecxz
pop
lahf
or
movs
mov
cli
loope
nop
pop
out
sti
fisttp
bound
add
jmp
test
jae
push
inc
mov
ds
inc
sbb
mov
scas
aam
adc
loope
repz
aas
and
fidivr
imul
adc
in
retf
out
cmp
rol
fsubr
test
stos
cmp
lods
sbb
into
mov
nop
(bad)
aas
out
inc
xchg
fstp
imul
ja
imul
xchg
jmp
rcl
jp
outs
sbb
arpl
xchg
jae
add
pop
out
xchg
or
sub
neg
sbb
sub
out
pop
jae
xchg
rol
fistp
outs
iret
test
pop
push
cli
popf
fistp
pop
push
push
jns
cmp
imul
test
idiv
je
jne
enter
movs
push
pushf
inc
mov
mov
inc
dec
jmp
cdq
adc
mov
movs
std
(bad)
ret
pop
sub
add
adc
imul
popf
mov
mov
das
stc
mov
outs
iret
cld
cmp
fimul
ret
pop
and
out
jb
mov
shr
stc
test
sub
je
push
retf
mov
aaa
into
add
mov
inc
add
push
(bad)
jne
fcom
sahf
inc
les
xchg
or
jns
pop
ret
movs
xchg
cmps
fst
fsubr
mov
cli
lea
pop
test
jge
in
mov
out
test
sahf
adc
push
adc
aam
test
jp
rcr
mov
push
dec
push
add
and
inc
dec
inc
or
aaa
sub
scas
add
pop
movs
les
movs
or
push
ins
xor
retf
cs
push
jnp
mov
jnp
sbb
fisub
ja
scas
push
(bad)
jecxz
pop
cli
cmp
shufps
pop
sub
inc
mov
fwait
aas
scas
and
pop
int3
sub
push
movs
js
ror
jmp
lods
dec
arpl
push
xchg
cmp
dec
pop
cmc
jmp
dec
dec
mov
dec
aaa
jb
and
dec
adc
mov
imul
add
add
mov
lods
xchg
dec
(bad)
popf
aad
rcr
sbb
cdq
push
ds
rcr
adc
scas
(bad)
dec
pop
aam
cmps
xor
retf
pop
xor
pop
push
stc
sbb
fcomp
int3
fist
cld
cdq
test
mov
cmp
(bad)
push
out
xchg
xor
fisttp
jp
shr
pop
push
mov
adc
xor
mov
add
aam
adc
in
inc
test
outs
ss
pop
adc
(bad)
mov
cmps
jnp
mov
sub
mov
std
neg
in
frstor
loopne
or
fbstp
scas
repz
cld
inc
sub
push
xor
mov
dec
add
fld
std
aas
xor
pop
xchg
cli
sub
jmp
loopne
sbb
sub
in
ficomp
inc
mov
enter
push
push
imul
cmc
in
stos
adc
inc
pop
xlat
(bad)
in
leave
mov
(bad)
jl
add
imul
add
cdq
addr16
inc
push
cmp
sbb
clc
in
mov
popf
stos
in
sub
mov
adc
pop
repnz
fwait
jle
and
das
(bad)
push
rol
call
dec
int3
imul
cli
mov
test
inc
lock
sbb
fild
test
int
aam
sub
sahf
arpl
call
out
addr16
fmul
pop
(bad)
or
sbb
(bad)
push
and
mov
sub
sti
sub
sub
mov
adc
jnp
enter
jmp
imul
repz
push
dec
push
les
jo
dec
aad
or
out
sub
push
jnp
adc
in
out
pop
mov
out
mov
retf
or
fist
test
call
sub
ss
sbb
dec
add
enter
sub
push
add
xchg
adc
pop
push
inc
sub
dec
pop
nop
xchg
fidiv
popf
add
cwde
and
xchg
lods
(bad)
out
mov
arpl
fs
aas
cli
frndint
pop
in
xor
mov
add
mov
iret
push
int3
sti
in
sar
int
push
xchg
pop
adc
xchg
lds
cmp
sub
js
adc
int3
pop
pushf
pop
icebp
sub
pop
test
jge
clc
or
lds
repnz
rol
pop
imul
pop
(bad)
cmp
jb
nop
loope
(bad)
adc
and
adc
lock
and
out
arpl
shr
dec
mov
and
inc
inc
sbb
fdivr
iret
xchg
stos
jmp
xchg
sbb
or
sub
push
cld
pop
enter
mov
(bad)
ins
and
pushf
out
sti
push
and
nop
xor
jp
std
nop
fisttp
jmp
pushf
enter
cmc
shl
cwde
pushf
sbb
aad
sub
mov
jno
push
sub
rcl
mov
test
(bad)
and
aas
pop
or
and
sub
dec
inc
jo
scas
dec
jo
inc
scas
addr16
dec
push
scas
and
out
inc
into
ins
dec
add
mov
mov
sbb
popf
test
aad
ficom
jno
stos
dec
cmps
adc
movs
ds
jle
dec
jmp
add
sub
mov
cwde
add
arpl
adc
pop
dec
(bad)
jae
mov
jle
cmp
das
cs
pop
imul
(bad)
fld
sti
mov
dec
mov
pop
mov
(bad)
jmp
mov
push
jmp
fidiv
gs
dec
cld
adc
jne
xchg
xor
ss
in
stos
jbe
clc
clc
jle
xlat
xchg
pop
lock
mov
loop
xor
call
push
arpl
adc
mov
test
fdiv
push
outs
adc
pop
nop
pusha
cli
clc
ins
add
dec
idiv
gs
nop
lods
push
lock
(bad)
sbb
lea
retf
push
ret
test
push
xchg
imul
(bad)
push
arpl
lahf
pop
nop
and
xor
adc
fnstcw
js
sbb
xchg
fimul
sub
jo
inc
cld
add
and
pushf
dec
ins
imul
xor
sbb
into
cwde
fld
cmp
mov
or
into
outs
faddp
icebp
cmp
fsubr
aam
ret
fisttp
popf
cdq
je
mov
jp
xchg
ins
gs
jo
mov
arpl
repnz
push
(bad)
sub
xor
sbb
shl
stos
sbb
push
repnz
call
cdq
lods
outs
mov
clc
rol
push
(bad)
xchg
or
and
cmps
push
sar
sbb
mov
ficom
mov
(bad)
imul
mov
mov
dec
ret
dec
xchg
or
mov
in
pop
push
mov
dec
aad
or
mov
fmulp
or
pop
rol
sti
fwait
pop
xchg
lds
xor
stos
cmc
push
imul
lods
xchg
adc
test
fidiv
lods
sbb
jmp
hlt
inc
cmps
jnp
aam
pusha
scas
imul
xchg
lock
in
std
push
ds
ficomp
ins
xchg
and
in
push
in
jg
sbb
(bad)
dec
retf
dec
mov
xchg
fcmovne
(bad)
push
and
ins
enter
or
inc
and
das
sar
xor
mov
outs
adc
bound
push
fucomi
mov
mov
ja
sub
icebp
mov
xchg
(bad)
sti
outs
mov
xchg
sbb
cmp
stos
out
rcr
in
movs
mov
and
pop
xor
out
pop
adc
mov
sbb
push
jmp
ins
sbb
sahf
(bad)
fsubr
cmp
inc
mov
xor
pusha
sar
pop
dec
cmp
fist
lahf
mov
rcl
cs
pop
add
sbb
enter
jne
imul
ret
ins
push
sbb
jg
pop
leave
dec
xor
ins
lds
sub
fild
ins
xor
push
or
inc
mov
dec
clc
pop
and
test
inc
nop
test
mov
std
pop
iret
xchg
nop
mov
mov
cld
mov
fnstcw
ret
add
std
retf
add
cmp
xchg
inc
repz
sahf
push
clc
xor
test
sti
jns
sub
outs
inc
pop
int
cmp
mov
jecxz
xor
cmp
sub
rcr
mov
loopne
in
ret
sub
cmc
pop
adc
(bad)
mov
xlat
bound
jp
fwait
idiv
imul
call
xchg
nop
mov
mov
(bad)
or
mov
scas
ror
call
dec
xor
sbb
in
fdivr
loopne
xor
sbb
sti
push
push
sti
imul
leave
mov
sahf
cwde
push
(bad)
cmp
sahf
push
mov
push
rcl
lea
sbb
test
fwait
retf
inc
sub
cld
out
dec
mov
mov
xchg
xor
sar
cmps
mov
cli
and
out
dec
add
dec
sub
jae
jl
cdq
shl
movs
repnz
addr16
xchg
xchg
xchg
(bad)
xlat
push
and
add
(bad)
out
xchg
daa
dec
pop
xor
fwait
cmp
aam
mov
jae
int3
push
sti
stos
shl
add
push
sub
int
xchg
aas
push
test
sub
movs
call
jp
sbb
outs
jp
(bad)
in
sub
push
cmp
lods
pop
push
fadd
(bad)
cld
xor
fs
fdiv
enter
std
adc
or
or
jl
mov
and
dec
das
cdq
cmps
adc
test
jp
lahf
sub
out
shl
arpl
mov
scas
out
into
data16
dec
dec
clc
sbb
retf
pop
clc
fcmovbe
mov
cwde
hlt
lahf
addr16
sti
out
xchg
ja
lds
jae
movs
xchg
xor
and
pop
and
(bad)
loopne
outs
adc
call
movups
dec
push
in
mov
pop
jae
inc
loope
bound
enter
fneni(8087
aam
or
xchg
xchg
dec
(bad)
(bad)
popa
shl
rcr
xlat
jl
sbb
jb
clc
les
pop
fdivr
cvtdq2ps
fwait
pop
aad
push
scas
sahf
or
pop
mul
sti
outs
push
jl
sub
push
push
es
sbb
jl
ficom
lea
popa
call
lahf
aad
and
gs
xor
pop
mov
push
ins
bound
fisubr
data16
lods
dec
popf
sub
cmp
xchg
push
push
sbb
cld
hlt
scas
into
pop
aam
sub
ret
add
sub
xchg
sar
jmp
xchg
rol
lea
sub
push
push
mov
psllw
js
push
xchg
pop
cmc
in
mov
sbb
jmp
(bad)
xchg
stos
in
inc
and
cmp
pop
xchg
xor
bound
sub
and
pop
data16
iret
dec
sub
push
jecxz
sahf
mov
in
jmp
jne
in
aaa
add
inc
and
jae
icebp
jecxz
xchg
pop
sahf
loope
xchg
and
jecxz
fsub
rcr
sbb
clc
ret
(bad)
gs
sbb
out
push
lea
mov
test
pusha
out
pop
jecxz
out
ret
jbe
aas
jb
or
sub
push
cmp
adc
(bad)
xchg
cmp
xor
mov
sti
jnp
jl
dec
cwde
pop
cdq
inc
stos
setge
sub
rol
test
push
sub
les
sub
clc
not
out
fist
clc
sub
push
pop
or
pusha
xor
jl
and
ins
cmp
shr
dec
mov
test
mov
sub
jbe
dec
xor
sahf
mov
adc
(bad)
sbb
xchg
cli
js
popf
and
int3
js
jl
push
xchg
ins
test
aam
and
add
outs
inc
repz
(bad)
bound
outs
add
mov
cmp
push
and
mov
fcom
inc
push
icebp
aaa
iret
add
iret
std
cmc
cld
test
(bad)
and
test
pop
mov
lds
xor
cli
pop
sbb
out
xor
cmc
mov
icebp
xchg
ss
adc
hlt
int
mov
hlt
test
mov
mov
jno
jmp
dec
pushf
into
(bad)
cmp
xor
(bad)
mov
push
sti
sahf
out
adc
lods
test
sbb
fistp
inc
stos
ins
sbb
dec
xor
gs
and
ins
mov
jmp
sub
ja
sbb
cmp
retf
jle
inc
push
sub
call
mov
inc
push
xchg
fsubp
cmp
ins
dec
out
mov
mov
dec
in
add
stos
or
pop
and
dec
repz
mov
jno
and
mov
pop
adc
sbb
(bad)
(bad)
sub
je
sub
test
jp
xor
fcmovnb
scas
(bad)
and
pusha
jo
dec
rcr
mov
mov
aaa
test
push
fld
sar
daa
int
or
dec
pop
out
int
jno
jle
inc
outs
into
imul
arpl
addr16
mov
fsubr
inc
fcomp
popa
mov
add
pop
(bad)
es
sbb
std
mov
retf
mov
add
jmp
test
push
jb
shl
js
sahf
or
les
add
test
fidivr
cmp
in
pop
les
push
cmp
mov
xchg
sahf
fld
shl
add
sahf
ror
or
(bad)
hlt
dec
ins
sahf
out
adc
cmp
outs
fcomp
enter
das
xor
sbb
loopne
jle
fcomp
outs
scas
sbb
or
stos
retf
xchg
scas
daa
fsubr
or
jle
repz
(bad)
aad
inc
scas
inc
dec
imul
pop
cld
and
fbstp
arpl
dec
xchg
push
rcr
(bad)
push
hlt
repnz
fistp
aas
mov
push
jns
fsub
outs
ins
mov
cmp
mov
push
imul
push
stos
repz
push
jecxz
dec
pop
xor
sub
neg
xchg
js
lahf
xchg
add
retf
fs
pop
jle
xchg
pop
cmps
and
icebp
xchg
outs
repz
cmp
mov
lods
xor
fwait
bound
cli
dec
lods
or
imul
sar
mov
dec
pop
loopne
mov
sub
cmp
pusha
ret
sub
fistp
in
int3
cmps
fs
cld
out
mov
test
clc
xlat
stos
xchg
fcom
adc
in
xor
or
hlt
push
sbb
mov
test
jae
push
lods
cwde
mov
ror
out
inc
test
cld
out
call
fwait
jmp
mov
rol
push
dec
sub
mul
clc
adc
leave
fdiv
add
(bad)
scas
popa
ins
adc
dec
dec
rol
into
ja
push
ss
cmp
inc
adc
xchg
inc
pop
lahf
aas
idiv
xchg
mul
cs
or
dec
add
pusha
mov
hlt
xchg
and
pop
nop
cld
loope
inc
inc
das
jno
mov
(bad)
fmul
adc
daa
mov
js
mov
pushf
xchg
mov
mov
stos
fs
nop
xchg
fistp
outs
jg
xchg
in
adc
sbb
out
rcl
fild
sub
hlt
packuswb
rcr
movs
std
dec
sbb
lock
jle
stos
pop
loop
mov
push
push
sbb
mov
ins
call
enter
ret
push
mov
retf
push
enter
hlt
js
sar
test
std
inc
jbe
fisubr
inc
add
retf
mov
jg
inc
movs
je
xor
stos
pop
call
enter
sbb
mov
add
adc
in
in
push
xor
lods
mov
pop
pop
hlt
adc
js
(bad)
fcomi
pop
jae
sbb
pop
inc
loop
arpl
out
hlt
fadd
pop
cmps
into
test
ins
xchg
jbe
mov
pop
out
mov
or
call
cdq
pop
fld
cwde
dec
mov
push
or
lea
dec
cmp
push
leave
adc
sbb
cwde
mov
hlt
les
dec
push
(bad)
int
jbe
and
sbb
push
adc
mov
add
pop
enter
fldenv
lahf
bound
jg
cmp
xor
leave
or
sbb
imul
aad
(bad)
sub
pop
icebp
lock
cmps
pop
sbb
mov
stos
mov
xchg
retf
push
outs
sbb
shl
cmp
pinsrw
push
stos
in
xor
(bad)
sbb
add
fwait
or
pop
out
into
(bad)
lahf
(bad)
(bad)
out
mov
fsubr
popf
mov
imul
sbb
and
lods
inc
or
cld
into
jmp
xor
aas
push
xchg
and
pop
adc
test
or
(bad)
pop
cwde
and
int3
inc
dec
pop
xor
mov
jae
adc
lods
arpl
faddp
mov
mov
sub
add
jmp
push
pop
xor
mov
scas
sbb
jbe
mov
sahf
shr
mov
scas
packuswb
repz
jecxz
test
jl
push
mov
dec
sbb
sti
jl
(bad)
loopne
int
lods
inc
xor
push
push
add
jg
sbb
dec
pop
mov
gs
sbb
sbb
out
jp
push
pop
nop
mov
nop
and
mov
sub
sbb
mov
push
in
icebp
(bad)
aad
fisub
inc
div
mov
sbb
dec
add
cmc
mov
arpl
call
lods
xor
mov
mov
dec
xchg
(bad)
sbb
addr16
pop
jne
es
sub
mov
push
jg
xor
pusha
and
push
dec
jmp
push
out
mov
test
jb
cs
shl
add
and
movs
inc
xchg
fcomp
adc
sub
lods
hlt
and
ror
dec
or
icebp
and
add
and
sbb
pop
ins
push
push
or
sbb
mov
xchg
jns
gs
and
sbb
and
addr16
repnz
xchg
inc
test
test
icebp
in
mov
imul
dec
add
pop
mov
stc
inc
imul
in
aam
call
inc
xchg
fs
cli
ins
cld
pop
std
dec
shl
sub
mov
pop
or
and
adc
xor
lods
xlat
ins
mov
mov
adc
jns
fdivr
mov
rep
jg
(bad)
fidiv
call
call
fmul
ins
xor
pop
sti
mov
(bad)
mov
daa
xchg
lock
retf
mov
push
retf
adc
push
add
jge
or
shl
(bad)
mov
repnz
(bad)
xchg
xlat
aas
inc
dec
outs
inc
mov
rol
aam
xchg
jns
hlt
pop
inc
or
sbb
retf
xchg
pop
call
and
ret
cmp
leave
push
inc
and
jecxz
pop
dec
inc
and
cmp
xlat
scas
sbb
(bad)
out
jecxz
mov
retf
sub
stc
xchg
ins
sbb
add
das
out
movs
test
test
pop
cwde
int
mov
cld
jns
aaa
sar
sbb
push
pop
dec
jmp
dec
dec
inc
pop
sbb
std
dec
xor
dec
aaa
xor
jge
rol
xchg
(bad)
jmp
xor
outs
mov
das
xchg
loop
shl
or
(bad)
push
and
fcom
cmp
cdq
stos
xor
xchg
and
and
sbb
mov
pop
inc
movs
pop
jg
push
or
dec
mov
sbb
dec
aas
das
sub
mov
mov
ins
add
mov
arpl
or
and
jmp
xchg
mov
je
ins
fldcw
inc
ds
movs
mov
lods
out
mov
fisubr
clc
lock
in
movs
fbld
icebp
idiv
jae
inc
sub
inc
lahf
test
pop
pop
jecxz
rcr
call
jecxz
push
push
js
into
add
fsub
jmp
fsub
push
leave
jl
jno
mov
ds
test
mov
iret
in
daa
jnp
movs
ins
pop
outs
popw
aam
mov
xchg
daa
mov
(bad)
xchg
sahf
pushf
jmp
das
fbstp
push
mov
out
jmp
jb
rol
jae
xlat
sub
stc
adc
inc
outs
push
mov
pop
adc
lods
or
outs
jmp
xchg
and
sbb
das
inc
stos
xchg
push
or
ret
ins
cmp
inc
repz
bound
fsub
rcr
and
and
inc
imul
push
out
cmp
sbb
fimul
pop
mov
push
test
sbb
sub
xor
mov
jp
sub
mov
sbb
in
push
cmp
jne
or
jnp
scas
ds
and
cdq
rcl
push
xchg
clc
xchg
dec
jg
lds
cld
cmp
cli
aam
cwde
xor
mov
xadd
jns
popa
test
int
fnstsw
repz
dec
inc
mov
test
xchg
inc
shl
add
sbb
scas
dec
pop
pop
add
fcomp
and
(bad)
push
sbb
xchg
call
retf
jns
and
fcomp
fwait
int
fs
sub
inc
nop
or
sbb
pop
jmp
shl
sub
jmp
dec
cmps
pop
mov
sbb
mov
call
sub
mov
ret
mov
jl
sub
shr
sub
push
cmp
scas
sbb
idiv
sar
push
sub
scas
inc
es
fsubr
mov
shl
add
dec
nop
xor
ss
xchg
cs
sub
push
jnp
pop
ror
adc
imul
in
into
cdq
aas
xchg
scas
(bad)
push
rcr
push
out
pop
dec
mov
sbb
or
add
jmp
std
clc
and
jp
cwde
push
jmp
in
ss
mov
mov
push
fimul
push
xchg
sbb
dec
jo
sub
adc
js
pop
call
lea
fimul
call
mov
mul
cmp
inc
loop
popa
fmulp
pop
fstp
scas
cs
imul
pop
dec
push
enter
test
stos
enter
jns
call
jnp
push
imul
sub
adc
es
(bad)
(bad)
push
addr16
inc
jne
mov
jbe
js
das
xchg
sbb
inc
test
xchg
cmc
imul
push
shl
out
fstp
push
fidiv
mov
(bad)
ins
bound
imul
cld
lods
sbb
js
sbb
idiv
fadd
xchg
loop
imul
adc
adc
enter
cmp
add
iret
sub
push
inc
push
(bad)
sbb
push
(bad)
sbb
or
add
sub
pop
pushf
adc
iret
mul
loop
test
dec
ret
dec
mov
call
xchg
daa
jne
and
sbb
sub
mov
inc
in
dec
pop
popf
int
mov
test
xchg
pop
or
sub
bnd
aas
retf
add
inc
jp
and
xchg
sub
clc
fmul
sbb
int3
ins
sbb
push
jnp
mov
add
or
mov
js
test
cmp
clc
dec
adc
sbb
pop
int3
push
popf
mov
movs
jne
mov
fdivrp
and
mov
inc
nop
or
dec
push
in
mov
adc
or
sub
dec
in
int3
stos
adc
popa
fldenv
aad
aaa
pop
dec
adc
rcl
or
pop
adc
and
add
push
hlt
(bad)
cmps
mov
push
xor
pushf
icebp
jl
pop
pop
ror
mov
aam
mov
enter
sub
adc
cmc
movs
imul
xchg
mov
(bad)
dec
add
mov
inc
pop
jo
pop
mov
fidiv
sub
aas
std
lods
movs
dec
das
adc
div
movs
enter
cwde
sbb
jle
cs
icebp
(bad)
or
(bad)
hlt
cld
push
mov
mov
xchg
inc
push
and
pop
adc
jmp
adc
pop
pop
jnp
mov
fsub
clc
push
sbb
jne
mov
sub
and
scas
cld
clc
stos
push
cld
sub
adc
shr
mov
push
lahf
mov
dec
dec
jecxz
out
sar
xchg
js
dec
imul
popf
aaa
push
push
pop
push
jae
inc
inc
mul
pop
(bad)
pop
add
push
call
pop
jl
jp
shl
adc
cld
ffree
and
cmp
cs
loopne
retf
xchg
jle
dec
ret
je
shl
inc
aaa
ja
mov
push
nop
mov
pop
pop
sbb
dec
push
mov
mov
xchg
test
loop
neg
cmp
inc
sub
aad
dec
push
dec
push
push
mov
mov
outs
sbb
jl
pop
inc
je
xor
cli
in
mov
shl
mov
jl
push
mov
data16
leave
pop
mov
jmp
jne
or
ins
mov
push
add
sub
pop
shr
loop
popa
enter
push
jmp
xchg
jne
outs
push
add
xchg
jg
xchg
sub
mov
repz
imul
push
mov
pushf
loope
mov
scas
or
(bad)
xor
push
sti
nop
jae
inc
xchg
xor
jge
pop
fadd
fs
mov
(bad)
cmp
mov
in
aad
push
jmp
inc
data16
and
outs
stos
cmp
inc
lods
ins
pushf
pop
pop
pusha
(bad)
mov
loopne
pop
sub
mov
nop
outs
inc
add
fadd
icebp
clc
mov
jmp
cmp
push
push
pop
adc
std
xlat
imul
push
adc
leave
xlat
test
dec
xor
loopne
dec
fwait
pop
cmp
mov
jne
hlt
ret
mov
adc
inc
adc
mov
ds
mov
into
mov
repz
jnp
adc
into
stos
mov
ud0
scas
or
jp
cmps
idiv
inc
push
push
repz
add
dec
popa
cs
jmp
sub
retf
xor
(bad)
pusha
mov
shl
retf
out
sar
mov
mov
sub
push
xchg
push
jmp
xchg
mov
mov
xor
xchg
shr
xchg
or
dec
ficomp
call
push
dec
xchg
int
adc
push
sbb
xor
call
lahf
ins
aad
push
dec
sbb
popa
mov
mov
mov
sbb
(bad)
addr16
in
pushf
imul
mov
into
push
ficomp
movs
fstp
out
clc
jnp
movs
inc
lock
addr16
rcr
pop
jmp
in
xor
in
test
clc
dec
pop
popa
inc
sti
stos
push
call
dec
arpl
sbb
jns
lea
retf
(bad)
loopne
retf
xchg
shr
aam
frstor
pop
movs
cld
movs
repz
xchg
or
or
fistp
dec
cmp
es
fmul
popa
push
aaa
pop
cs
and
pusha
push
mov
pop
cmps
dec
mul
inc
dec
ror
into
test
test
scas
imul
outs
cmp
jecxz
mov
sub
or
add
cld
mov
push
aad
js
add
xchg
gs
outs
in
xchg
nop
mov
repnz
mov
xor
movs
sbb
fistp
shr
mov
in
ds
pushw
or
sbb
push
dec
sar
in
pop
dec
jb
mov
inc
imul
stos
adc
push
sti
jmp
xchg
(bad)
fs
mov
cmp
sub
adc
dec
jns
jae
test
jp
clc
retf
mov
movs
fadd
movs
adc
push
dec
mov
add
ret
dec
movs
pop
dec
mov
fcom
adc
sub
outs
sub
xor
leave
fisttp
jb
nop
xchg
push
push
fcomp
adc
mov
xor
movs
push
aam
jne
outs
cmc
mov
mov
add
icebp
xor
dec
fdiv
aas
es
pop
and
jne
mov
frstor
mov
cwde
mov
sbb
jnp
dec
(bad)
mov
jg
cmp
adc
adc
fcmovne
pop
adc
xchg
loop
mov
adc
jno
jmp
std
jle
in
xchg
jo
pop
sub
xor
xor
xchg
repnz
xchg
(bad)
or
call
test
inc
nop
cld
mov
dec
adc
jae
push
scas
mov
and
shl
out
jg
mov
and
loop
cmc
mov
xor
xchg
or
popf
ficom
jnp
jne
xchg
aaa
push
enter
mov
sub
jp
push
pop
aad
imul
jp
addr16
int
rcr
js
sbb
popf
sub
in
es
fld
cld
mov
mov
jecxz
cmp
cmp
call
iret
jl
cmp
pop
and
arpl
inc
pop
push
and
popf
clc
popf
cmps
jnp
je
sbb
mov
pop
lea
test
adc
or
mov
dec
push
push
lea
(bad)
std
jnp
xor
(bad)
imul
call
mov
xchg
or
xchg
stos
jge
inc
dec
sbb
sbb
in
je
dec
push
pop
shl
in
outs
xchg
into
dec
imul
jne
dec
dec
and
sub
mov
pop
pusha
out
xor
cmps
stos
pop
retf
sub
jp
(bad)
jl
jle
inc
jnp
outs
fsubp
inc
pop
(bad)
push
jae
xlat
aaa
inc
outs
or
xor
or
(bad)
jnp
sbb
xchg
sti
cmp
loope
pushf
pop
bound
inc
push
cld
dec
push
je
mov
aaa
rcr
pushf
pop
out
lds
bound
mov
fsubr
in
test
jae
add
sbb
sub
jo
push
adc
mov
(bad)
in
sub
std
pop
mov
lea
outs
jns
cmc
sub
div
sub
xchg
es
movs
aad
inc
daa
mov
fadd
adc
xchg
leave
mov
adc
jb
sar
jnp
push
addr16
fnstsw
je
or
cwde
sbb
add
mov
jp
(bad)
addr16
cmp
imul
fs
inc
por
fmul
rcl
movs
pop
fcomp
sub
mov
sbb
les
xchg
shl
mov
jge
cmps
mov
aas
mov
adc
adc
sbb
and
add
add
xchg
je
rcl
iret
adc
aas
mov
jns
jno
inc
outs
pop
xor
(bad)
mov
mov
push
imul
xor
mov
cwde
jmp
cs
or
mov
mov
xor
mov
jl
jmp
lock
mov
mov
jmp
xor
add
lock
cmp
pop
inc
push
je
enter
mov
fwait
aad
sbb
fisubr
inc
ret
push
mov
pushf
jmp
add
lock
mov
jl
and
add
jle
inc
adc
ss
fwait
loope
pop
pop
cwde
ds
jb
sbb
(bad)
jp
adc
cmp
push
inc
ins
add
test
retf
(bad)
sti
xchg
jmp
es
mov
retf
dec
loopne
xchg
in
enter
pop
add
enter
mov
cwde
jmp
movs
xor
fwait
mov
call
cld
xchg
xchg
stos
or
xchg
push
inc
scas
dec
jl
out
(bad)
mov
outs
das
das
sbb
adc
adc
aam
add
ins
ret
(bad)
stos
cmp
xchg
call
cld
jb
pop
dec
jecxz
cmp
xchg
adc
call
pop
out
jl
sub
adc
mov
addr16
adc
jecxz
fld
push
sbb
cs
(bad)
iret
inc
jnp
jns
nop
inc
xor
pop
push
xchg
mov
jnp
jg
and
and
clc
pop
icebp
popa
mov
ror
add
push
mov
mov
fimul
xchg
(bad)
xchg
mov
imul
inc
arpl
sub
das
push
(bad)
jns
pop
push
xchg
pop
aam
dec
aad
popf
mov
cwde
fstp
xchg
out
cmp
xchg
aaa
sub
movs
mov
fsubr
mov
ins
add
lods
lods
push
stc
in
fidivr
arpl
and
dec
sbb
mov
les
push
sbb
call
daa
add
loop
push
and
pop
gs
inc
xor
push
adc
imul
mov
xor
lock
jmp
test
jmp
jns
(bad)
xchg
outs
call
pushf
mov
(bad)
daa
dec
sbb
jbe
rol
outs
pop
cwde
(bad)
mov
pop
je
dec
adc
xor
xor
cmp
nop
mov
inc
sahf
dec
xor
inc
cmp
xchg
into
sbb
nop
pop
adc
sbb
push
gs
pop
jno
mov
call
jle
adc
das
fisub
xor
jbe
sbb
(bad)
dec
les
addr16
pop
push
mov
push
movs
gs
ins
adc
cmc
pop
xor
call
lds
jae
jg
int
push
mov
push
stos
mov
ins
cld
and
rcl
outs
bound
mov
clc
or
jle
and
mov
sbb
outs
and
inc
jl
sbb
or
rcr
cmp
jno
xchg
sbb
push
sub
(bad)
sub
adc
mov
movs
test
dec
fmulp
loop
xchg
push
retf
(bad)
iret
outs
fadd
dec
cmc
retf
pop
or
pop
mov
sbb
mov
and
lea
fist
aas
shl
rcl
lods
cli
stos
jnp
inc
mov
xchg
sub
nop
loopne
mov
inc
xor
int3
adc
fldcw
pop
mov
cmps
call
jae
dec
sbb
repz
mov
rcr
pop
or
jp
push
sub
mov
jle
cmc
dec
shl
push
add
fcmovb
xor
(bad)
dec
mov
ds
pop
jecxz
xor
dec
pop
shr
rol
xor
arpl
push
adc
iret
mov
(bad)
push
(bad)
scas
int3
cmps
dec
sub
dec
jmp
adc
inc
or
mov
loop
cmp
inc
jae
xchg
jmp
cld
ret
test
xlat
mov
cdq
(bad)
scas
aam
sbb
or
xor
mov
das
xchg
shr
mov
ret
cmp
push
(bad)
icebp
out
push
dec
mov
jge
push
adc
mov
cs
pop
fs
retf
push
aaa
pop
dec
or
add
sbb
ret
test
or
sub
(bad)
push
inc
mov
daa
repz
test
pop
lock
mov
lods
lea
out
cs
imul
hlt
scas
arpl
push
mov
sub
into
add
mov
sbb
adc
clc
adc
xchg
frstor
cld
mov
hlt
call
movs
outs
jl
xchg
mov
xchg
pop
fistp
jp
inc
bound
xchg
jle
enter
pop
(bad)
mov
ror
jg
test
mov
cmp
mov
imul
into
mov
cmp
repnz
imul
mov
or
ror
scas
rcr
or
inc
mov
inc
scas
scas
mov
inc
jbe
hlt
or
enter
sub
and
cwde
mov
push
inc
stos
add
fld
mov
in
(bad)
xchg
(bad)
mov
sahf
ins
add
test
fsub
mov
enter
pushf
pop
sbb
inc
aas
loope
pushf
(bad)
dec
xlat
mov
pop
pop
sbb
fild
push
and
inc
push
pop
or
inc
jae
not
sbb
jp
ret
push
dec
sbb
std
sbb
inc
outs
mov
xor
adc
jns
test
(bad)
xchg
pop
mov
xor
pushf
neg
cwde
xor
call
retf
cmps
mov
leave
bound
add
mov
pop
cmc
xor
cwde
call
rol
xor
in
pop
mov
sub
and
cmp
dec
repz
and
xor
jmp
mov
adc
rep
add
(bad)
cld
mov
adc
scas
mov
jne
mov
(bad)
fdivp
sub
sbb
sub
mov
xor
mov
push
call
repz
add
lahf
pushf
cld
jne
xlat
inc
fmulp
daa
pop
pop
sbb
repz
dec
mov
scas
inc
inc
out
into
sbb
pushf
popf
xchg
and
sub
sbb
jg
outs
push
sub
in
xor
jae
test
loop
inc
bound
xchg
cmp
pop
aad
fnstcw
sbb
cld
or
loopne
fistp
xlat
add
inc
xor
pop
aad
aad
fstp
jmp
loop
call
jl
cli
fwait
xor
pop
shl
cmp
pushf
push
(bad)
push
pushf
dec
cmps
or
rcl
pop
xchg
fwait
adc
adc
jbe
ins
popf
sub
mov
sbb
sub
cmp
arpl
push
sub
idiv
cmp
clc
push
fnstcw
jnp
dec
mov
push
invd
out
pop
int3
sbb
mov
adc
cmps
js
jne
pusha
cld
xchg
fsubp
mov
pop
cmps
mov
das
pusha
cmp
lods
lods
mov
and
and
enter
mov
movs
mov
push
mov
in
jg
jle
sbb
xchg
cdq
div
push
push
fsubrp
lahf
jne
aad
mov
into
cmc
cmp
je
jnp
call
retf
pop
sub
or
push
stos
fwait
pop
sbb
retf
pop
fild
pop
push
push
mov
daa
retf
pop
scas
inc
into
cmp
sub
push
fsub
dec
(bad)
jo
rcl
mov
lahf
push
pop
cmp
dec
jg
jo
aas
mov
sbb
lahf
inc
cmps
jmp
into
cmp
xor
nop
int3
or
in
addr16
loopne
xchg
test
mov
inc
std
pop
ficom
sahf
pop
mov
inc
into
mov
mov
mov
cmp
adc
js
(bad)
push
test
cmp
out
dec
push
add
ror
stos
push
ss
sahf
(bad)
jp
pop
lahf
lods
xchg
vorps
div
cwde
nop
imul
shl
push
adc
mov
and
xchg
xchg
and
xchg
sbb
imul
cmp
mov
fcom
cli
outs
pop
push
dec
ret
mov
sti
inc
ins
push
push
jb
out
cmc
xchg
test
cld
jp
int3
(bad)
fcmovnb
xchg
dec
xchg
cmp
shl
mov
adc
fisubr
xchg
pop
sub
mov
xchg
icebp
pop
(bad)
and
xchg
es
out
push
xor
pop
enter
dec
jl
jmp
push
xor
push
jb
mov
bound
int
lods
sub
in
adc
xchg
shl
das
xchg
mov
add
cld
das
pop
jge
mov
xchg
xor
mov
jle
lea
sub
out
cmp
pusha
and
push
out
dec
and
dec
and
mov
jmp
push
clc
(bad)
std
mov
mov
sbb
jnp
mov
xchg
mov
fdivr
inc
inc
cmp
mov
icebp
stc
lea
imul
or
mov
sti
loopne
dec
mov
call
retf
xchg
pushf
ja
pop
int
daa
dec
clc
jb
xor
sub
jg
cld
fwait
aas
xchg
jb
jmp
xlat
out
pop
lds
xchg
jno
out
sar
ins
retf
out
sub
pop
inc
test
(bad)
add
fidiv
jecxz
outs
mov
dec
mov
pushf
imul
leave
cmp
mov
mov
jmp
test
jne
jb
sbb
jecxz
(bad)
lock
loop
cmps
fmul
ja
repz
retf
xchg
movs
cmp
out
add
cmp
xor
jno
adc
dec
adc
push
adc
xchg
jle
and
aad
jle
add
bound
sub
je
popf
loopne
aam
rcr
mov
fcom
test
mov
pop
or
loopne
in
out
std
mov
add
cmp
sub
test
xchg
jbe
sub
jno
or
frstor
push
mov
push
pop
cmc
jp
dec
ficom
popa
dec
bnd
out
add
shl
call
nop
adc
in
add
jp
arpl
in
mov
cmp
sub
mov
ret
arpl
cli
ins
xchg
outs
clc
push
fdiv
sub
test
icebp
xchg
cmps
mul
mov
jp
rcl
ds
pop
fcom
scas
push
push
popf
clc
mov
aam
fs
push
push
test
cmps
xor
lock
pop
pop
int3
adc
and
xchg
dec
pop
fcmovnu
outs
adc
fwait
imul
jo
jl
add
sbb
sahf
icebp
or
sub
pop
arpl
lods
data16
mov
lods
or
adc
mov
stos
adc
jl
std
push
fistp
and
adc
sub
(bad)
pop
bound
push
pushf
or
out
dec
retf
mov
cdq
adc
jnp
data16
sbb
adc
pop
mov
aas
stos
jb
arpl
repnz
shl
cwde
ins
and
arpl
rcr
mov
dec
lahf
ins
imul
lahf
test
fisttp
and
jecxz
adc
fsub
aam
cmp
cli
mov
pop
push
push
fcmovnb
in
push
dec
or
cmp
ins
retf
push
(bad)
stc
cmc
mov
mov
xor
sub
inc
mov
pop
sbb
pop
and
aam
popa
aas
mov
mov
jnp
dec
enter
fpatan
pop
call
ins
mov
xchg
jg
push
ds
jo
mov
je
mov
arpl
sbb
fstp
sbb
ins
push
fdivr
sub
fiadd
popf
cmp
std
jb
je
ret
jg
dec
mov
movs
lahf
test
sub
outs
mov
sti
or
cmp
and
dec
xor
add
push
retf
mov
add
dec
out
push
pop
popa
jae
ret
mov
sub
cld
sbb
mov
stc
adc
ins
push
inc
or
mov
adc
loopne
out
fnstsw
fcomp
shr
dec
sbb
inc
std
pop
ror
adc
sahf
lock
ret
mov
ss
ss
test
icebp
fdivr
sub
imul
rcr
inc
sub
pop
shl
add
mov
pop
jmp
je
and
cmps
sub
cwde
shl
xor
push
dec
or
test
pushf
add
mov
leave
shr
jae
(bad)
cld
(bad)
inc
std
bound
cdq
int3
push
outs
enter
push
rol
sub
mov
retf
sbb
mov
and
xor
adc
pushf
push
xor
rcl
xor
adc
pop
aaa
bound
jnp
jno
shl
push
ins
repnz
sbb
inc
or
test
dec
hlt
icebp
or
pop
movs
popf
jge
adc
call
add
retf
imul
push
dec
ins
cs
std
imul
inc
lea
and
mov
xchg
xchg
mov
ins
inc
jp
sbb
xor
mov
push
push
bswap
aam
(bad)
mov
adc
and
icebp
and
mov
ss
cmc
data16
sti
mul
mov
aam
repnz
dec
cmp
ja
aam
mov
test
lods
ds
fld
rcr
jp
(bad)
psubusb
cmp
push
push
push
push
adc
icebp
scas
(bad)
fld
loope
sar
(bad)
dec
popa
inc
mov
pop
adc
xchg
xchg
imul
stos
(bad)
stos
xchg
mov
loop
xchg
xchg
test
sahf
sbb
dec
sbb
lds
jmp
imul
inc
sbb
mov
fist
jae
ins
rcl
mov
pop
mov
sbb
cmp
popa
movs
jnp
cld
add
mov
test
or
or
adc
pop
mov
pop
jmp
scas
push
lahf
jmp
xchg
lods
scas
sar
and
fisttp
pop
nop
or
enter
cmps
or
test
cmp
popf
dec
aad
xchg
call
sub
repnz
das
fist
hlt
and
sub
loope
in
pop
and
(bad)
mov
arpl
scas
adc
das
pop
mov
push
sub
pop
push
pop
scas
fmul
mov
xor
gs
in
sub
in
hlt
cld
jecxz
push
(bad)
sbb
out
in
daa
js
fimul
and
test
(bad)
aam
jle
mov
pop
ret
adc
mov
(bad)
test
pop
mov
and
pushf
push
bound
fdivr
fwait
sbb
dec
in
imul
ror
sub
sub
loopne
dec
mov
call
cld
jnp
xchg
jo
rcl
cld
scas
mov
pop
cli
sahf
jns
push
jecxz
int
repz
cmp
and
push
out
xchg
xchg
sbb
pop
ffreep
imul
popf
aad
and
scas
rol
or
xor
xor
sbb
add
push
xchg
sbb
and
sub
ss
in
scas
jle
push
hlt
adc
cmp
jne
popf
sub
shl
dec
mov
mov
xor
es
mov
ja
nop
mov
test
mov
cld
and
popa
xchg
test
mov
jno
xchg
xor
sub
push
sub
loop
push
cmp
sbb
sbb
mov
test
test
icebp
addr16
lods
int3
(bad)
push
xchg
push
push
(bad)
movs
aam
and
push
jmp
pop
sub
jns
(bad)
out
push
jbe
lods
cmp
lahf
xchg
mov
mov
js
pushf
inc
out
xchg
addr16
xchg
xchg
push
popa
add
xchg
push
and
fild
pop
inc
test
pop
aaa
jmp
sub
mov
adc
inc
nop
xchg
mov
push
or
loope
imul
ja
data16
xor
scas
les
cmp
cld
xchg
add
sahf
sbb
mov
jp
enter
sub
rcl
cmp
jbe
adc
ins
adc
xchg
arpl
pop
push
popf
popf
shl
in
push
adc
cmp
cld
repz
int3
ret
jp
daa
pop
cwde
aad
mov
sbb
pop
inc
or
adc
sub
clc
adc
clc
in
push
enter
mov
lahf
adc
pushf
inc
cmp
call
jbe
xchg
imul
adc
push
mov
mov
xor
jno
push
dec
push
std
in
mov
push
push
pop
mov
pop
ja
pop
scas
push
pop
ins
xchg
inc
jae
dec
xor
add
loope
imul
fdivr
adc
jae
cmps
sub
xor
bound
inc
loop
outs
jp
call
pop
xlat
leave
outs
pop
leave
push
loopne
mov
std
sar
sub
pop
jmp
mov
imul
jne
fmul
fld
dec
inc
sub
es
stc
dec
cmp
cdq
bound
or
mov
cmp
movs
adc
cli
fisub
mov
sbb
cmp
mov
pop
mov
xchg
aaa
mov
fadd
adc
bound
xor
mov
scas
ins
cwde
xchg
popf
sbb
popa
jge
xor
std
test
call
cdq
xchg
int3
addr16
es
mov
sub
in
mov
sub
das
(bad)
pop
ja
jl
or
fild
test
ret
fs
scas
xchg
cwde
ins
xchg
inc
pop
sub
nop
jae
movs
sbb
pushf
xchg
and
or
stos
mov
aam
bound
call
dec
addr16
out
out
jnp
int3
ret
mov
movs
imul
lahf
mov
cld
addr16
sbb
sbb
ja
add
pop
mov
mov
mov
dec
pushf
cmps
shr
mov
retf
cdq
(bad)
push
jno
jge
sub
add
in
and
arpl
jbe
fs
mov
imul
sbb
xchg
test
mov
pop
lahf
jno
jmp
call
mov
mov
sbb
aad
ins
sbb
add
imul
inc
cmp
repz
mov
movs
adc
cmc
lds
mov
or
leave
mov
(bad)
adc
pop
push
leave
jl
pop
or
push
and
xlat
clc
mov
retf
fsubr
shl
(bad)
jmp
push
sub
in
out
test
mov
in
xor
cld
mov
imul
add
loop
cmp
int3
mov
stos
mov
ins
mov
fbld
inc
retf
add
test
cwde
sbb
sub
(bad)
push
fistp
adc
int3
nop
jp
push
mov
inc
mov
cmps
xchg
push
push
xchg
jne
fcmovnb
inc
push
mov
dec
inc
retf
ins
test
cmps
mov
popa
sbb
pop
mov
mov
jg
inc
dec
sti
fsub
or
(bad)
in
dec
mov
inc
jl
loop
mov
pop
xchg
push
adc
xor
movs
or
sub
sub
movs
outs
mov
mov
cmps
in
int3
sub
push
hlt
clc
imul
cmp
inc
call
test
pop
in
movs
arpl
sbb
shr
jnp
(bad)
jb
and
(bad)
xchg
adc
pushf
syscall
mov
repz
cmp
push
and
stos
push
lahf
ja
mov
xor
ret
ret
push
push
test
mul
mov
mov
imul
mov
xchg
shl
xchg
or
popa
or
mov
add
add
jae
pop
jg
xchg
push
jno
xor
nop
(bad)
sub
ins
push
dec
mov
lea
int3
and
(bad)
mov
movs
push
mov
lea
sbb
and
mov
hlt
xor
in
sbb
sbb
(bad)
into
scas
mov
aas
mov
inc
sub
sub
push
mov
adc
mov
repz
pop
sub
inc
lds
ret
cld
stos
lea
shr
mov
dec
add
outs
inc
js
xchg
inc
outs
and
in
retf
clc
cwde
xor
and
out
ficomp
mov
rcl
push
cmc
retf
(bad)
push
outs
sub
push
imul
lahf
mov
cmp
(bad)
pop
xlat
dec
jmp
and
in
add
scas
ins
stos
rol
ret
imul
rol
ja
push
movs
and
push
jl
pop
cvtsi2sd
push
cld
ret
mov
into
dec
ins
test
loopne
outs
or
mov
dec
pusha
push
(bad)
mov
adc
cmp
cmps
int
jmp
pop
test
ret
ss
test
push
add
push
sub
neg
dec
inc
push
shr
sub
xor
xchg
pop
ror
and
sti
loopne
cli
adc
mov
xchg
shr
jo
sbb
popa
xchg
sub
daa
bound
lods
mov
pop
loopne
mov
and
push
retf
retf
cmps
fwait
lds
fadd
mov
(bad)
scas
inc
rol
xor
call
push
add
pop
es
push
or
imul
je
sar
push
call
push
inc
movs
stc
push
aaa
mov
push
mov
push
cmp
lock
sar
retf
pop
xchg
push
jge
pop
jp
xor
pop
ins
or
xchg
cmp
jae
push
bound
sar
jne
xor
arpl
pminub
and
rcr
pop
iret
js
jne
push
call
(bad)
and
pop
ins
gs
mov
mov
arpl
rol
(bad)
jbe
cmp
gs
jg
mov
fadd
sub
cmp
shr
jno
cmp
cmps
sbb
sub
sbb
loop
shl
gs
sti
inc
stc
push
sub
push
sbb
test
xchg
mov
jle
les
pop
lods
push
aad
int
mov
cmp
xchg
adc
xchg
jmp
js
mov
xchg
mov
pop
rcl
mov
jns
xchg
enter
push
cmp
repz
fidiv
fwait
push
mov
ror
nop
hlt
aas
and
js
shl
xchg
fild
mov
jecxz
mov
push
nop
jbe
or
pop
fdivrp
pop
sub
cmp
fst
fdiv
lock
scas
iret
adc
int3
rcl
outs
(bad)
adc
adc
dec
jbe
cmps
jle
cmps
jb
out
sub
push
push
push
mov
mov
popa
arpl
call
xchg
(bad)
push
cdq
sbb
xor
mov
lahf
mov
push
aad
cmp
sub
fsubr
jne
adc
xor
sub
jmp
cmp
xor
jmp
and
sub
stos
and
push
mov
add
popa
xor
mov
test
(bad)
aad
cmps
hlt
mov
arpl
fst
cmp
push
pop
and
jle
mov
inc
repnz
cmp
mov
inc
xchg
pop
mov
ror
xor
int
xor
pop
jl
fbld
cs
test
push
sub
clc
or
nop
sbb
into
lahf
sub
test
leave
sbb
or
test
arpl
lods
push
dec
inc
mov
or
into
iret
in
jp
div
pop
xchg
jns
xor
jmp
pop
scas
jle
aad
jno
sub
jb
jo
jl
pushf
(bad)
leave
(bad)
or
hlt
retf
(bad)
repnz
fwait
cmp
pushf
xor
dec
sub
xchg
scas
push
inc
hlt
loope
cld
aas
cli
xchg
push
ss
and
(bad)
shr
cmc
jge
cmp
dec
cli
fst
fsub
jns
jmp
sbb
(bad)
fsubr
nop
or
test
sub
jmp
pop
mov
adc
jb
jp
out
fisub
ret
xchg
sbb
fmul
test
ret
or
out
xor
sbb
cmp
dec
adc
scas
jp
adc
and
in
xchg
lods
pop
je
sbb
mov
or
ss
int
mov
inc
(bad)
lock
fistp
mov
jle
out
xchg
cld
xchg
retf
aad
cmp
mov
and
dec
lods
and
xchg
push
es
int
popf
call
lods
add
rcr
xor
jl
sbb
iret
pop
test
mov
push
push
add
aas
cmps
jl
test
and
inc
xor
test
push
cmp
test
(bad)
scas
ret
ret
jg
int
sbb
sbb
jge
and
adc
ret
sbb
in
mov
cmps
mov
mov
addr16
sub
xor
cwde
cmp
cdq
cmp
fwait
dec
dec
and
rcr
repz
or
xchg
adc
pop
adc
gs
jo
test
mov
test
add
ins
jl
(bad)
and
aad
xlat
arpl
imul
fbld
and
lahf
or
xchg
sbb
adc
mov
iret
clc
sti
inc
cld
sbb
sahf
ins
ins
adc
fs
adc
fucom
lock
pusha
jecxz
fist
push
ins
lahf
in
cmps
xchg
sti
xor
jbe
std
jl
add
fist
mov
arpl
popf
dec
lods
inc
std
clc
pop
inc
ins
pop
adc
xchg
in
cmp
jl
sahf
sub
sahf
dec
push
retf
xchg
addr16
cmc
jl
push
daa
mov
adc
mov
push
pusha
xchg
sub
jae
xor
fdivr
jb
jle
rcr
ja
js
sbb
adc
jl
mov
xor
mov
test
shr
dec
pushf
adc
test
(bad)
jl
iret
xor
cmp
push
aad
push
das
cmp
push
cmps
mov
jl
lods
dec
push
lahf
fwait
sbb
fs
out
ins
pop
jl
sahf
inc
and
jno
stos
add
sub
pop
xchg
mov
ret
pop
sub
mov
mov
xor
mov
pop
add
call
fiadd
rol
and
mov
jae
pop
in
push
xchg
cmp
mov
stc
jae
sahf
sbb
mov
mov
mov
in
xchg
mov
jmp
cmp
pop
inc
cld
in
jmp
pop
and
cld
push
jle
vxorps
mov
jmp
adc
add
sar
arpl
rcr
xchg
rcr
adc
and
cld
mov
stos
dec
movs
test
aad
cmc
aad
ins
pop
daa
imul
lock
and
mov
sub
cmp
stos
xor
pop
push
and
aam
leave
sub
pop
add
mov
sub
cmp
ds
cmp
loop
mov
sub
and
or
in
mov
in
pop
dec
mov
push
xchg
out
cwde
add
lods
jge
or
fucom
loopne
outs
test
fstp
into
and
loopne
sub
ret
stos
adc
jecxz
jo
mov
add
int3
sub
or
inc
xor
push
pop
stc
jb
lods
mov
xchg
jge
pop
jnp
sub
loope
(bad)
das
and
add
adc
repnz
pusha
inc
scas
xchg
push
ss
mov
daa
retf
adc
jnp
adc
push
dec
or
imul
xor
xchg
gs
pop
les
sahf
push
(bad)
mov
sar
jbe
in
and
outs
xchg
xchg
xchg
add
jg
or
int
adc
lahf
out
retf
jne
jl
inc
xlat
adc
nop
xor
fcomp
call
add
and
jg
cmp
fcmovb
fs
in
push
inc
shl
fdiv
push
daa
inc
push
cwde
dec
pushw
push
cmps
nop
xor
or
jle
sbb
add
sbb
cmp
sbb
xlat
or
xchg
inc
sahf
ins
dec
scas
sub
clc
xchg
std
imul
pop
sbb
(bad)
ins
ins
push
cld
shl
stos
test
add
pusha
sti
test
mov
stos
int
(bad)
imul
sbb
test
jmp
pop
dec
and
jmp
jmp
int
rcr
dec
pop
jns
ins
jnp
pushf
cmp
into
js
jb
mov
pop
retf
mov
aam
pop
js
lock
adc
movs
lea
imul
ds
popa
add
shr
mov
mov
mov
mov
xor
test
mov
and
test
fdivr
nop
xchg
xor
jae
mov
cwde
aas
and
sbb
std
imul
xchg
push
cdq
inc
mov
push
scas
pop
call
push
pushf
sbb
and
sub
jg
stos
pop
mov
xchg
in
push
movs
cmps
cs
push
nop
jg
pop
out
mov
and
xchg
adc
cs
add
adc
pop
cmp
fcom
and
cs
rcr
ret
in
int3
add
cli
dec
aas
push
lock
jns
mov
push
mov
pop
mov
(bad)
ins
xchg
call
pop
lahf
(bad)
mov
cmp
pop
mov
fisttp
pop
mov
fst
ror
cmp
es
gs
lods
cdq
pop
leave
(bad)
dec
xchg
fistp
inc
push
push
dec
inc
dec
out
rcl
mov
adc
mov
pusha
sbb
out
sbb
pop
loopne
jge
add
enter
push
fisttp
pop
enter
sti
mov
pop
dec
sub
lods
out
xchg
adc
xchg
pusha
cmp
lea
mov
icebp
arpl
enter
test
pop
jnp
jmp
mov
sbb
cmps
xor
mov
ins
mov
cld
lahf
pop
inc
scas
je
sub
xor
and
dec
enter
loope
inc
out
mov
adc
pop
mov
fiadd
inc
or
mov
(bad)
fxch
xchg
(bad)
dec
and
dec
xchg
xchg
adc
fadd
adc
inc
sub
in
cs
pushf
ror
jg
add
dec
push
adc
js
xor
jb
icebp
add
add
adc
and
jbe
pop
mov
mov
xor
addr16
lds
pushf
std
inc
pop
aad
or
stos
push
call
xchg
lock
add
pop
loope
add
adc
retf
mov
outs
inc
popf
outs
aas
jbe
neg
cmp
ret
popf
mov
std
dec
pop
push
jle
push
inc
cmps
fdivr
sub
xor
xor
adc
jmp
mov
mov
fild
in
aad
or
dec
mov
and
std
lahf
arpl
cmp
adc
fisubr
mov
or
in
push
test
mov
sbb
add
dec
push
xor
mov
ins
mov
aam
ret
sti
xchg
sti
pop
cmps
push
lods
pusha
push
inc
mov
cld
fld
gs
fs
and
jmp
pop
sbb
inc
sbb
jg
mov
out
test
icebp
push
test
lock
into
xor
jne
fsubr
push
movs
mov
pop
mov
mov
sub
out
(bad)
sub
popf
pusha
xchg
inc
test
repnz
pop
sbb
xor
cld
movs
sub
retf
adc
fcomp
sbb
test
adc
fwait
arpl
jl
or
xchg
scas
pop
xchg
xlat
lods
mov
sub
rcl
shl
push
shl
fadd
lods
sub
sub
fiadd
data16
jl
xchg
cmp
out
call
lahf
xchg
jbe
jns
rcl
fmul
adc
fist
dec
sbb
jnp
mov
shr
js
pop
mov
xchg
push
pusha
mov
mov
push
cmp
jmp
sbb
repnz
push
aas
in
stos
push
cwde
jne
cld
je
adc
repz
int
sahf
out
ret
ja
push
inc
(bad)
stc
ins
xchg
repz
sbb
cmp
jb
fwait
rol
arpl
(bad)
adc
and
pushf
repz
mov
inc
mov
ror
pushf
mov
cld
shl
sbb
aaa
push
mov
sbb
test
dec
pop
sar
pop
sti
outs
xchg
stos
jns
dec
push
mov
jecxz
call
ror
(bad)
into
bt
inc
xchg
hlt
popf
push
ret
call
shl
pop
push
adc
dec
pop
and
dec
ins
push
adc
lods
or
out
call
or
lea
call
sbb
in
fnstcw
cmps
pop
or
push
mov
cmps
pop
ret
xor
in
sub
pop
out
xor
jge
into
push
pop
mov
mov
outs
push
jp
ins
push
fcmovb
pop
push
mov
sahf
mov
pop
call
loop
fild
xor
fild
pop
bound
(bad)
adc
mov
push
test
je
mov
and
aas
mov
dec
dec
jl
test
aaa
call
scas
xchg
nop
or
sub
xchg
push
ja
arpl
add
xchg
inc
ins
stos
inc
jle
sbb
jecxz
sbb
pop
push
pop
ficom
pop
sub
fldenv
lds
push
repz
mov
sub
jb
test
xchg
jns
jno
jl
imul
(bad)
pushf
jns
mov
(bad)
int
out
jnp
cmps
cmp
jge
arpl
jl
xchg
pop
and
jmp
in
push
xor
and
std
out
hlt
xchg
je
js
ins
mov
ja
jle
dec
xlat
dec
adc
xor
inc
add
mov
push
je
ja
in
inc
xor
mov
push
mov
xor
loop
and
jne
test
sub
cs
nop
jecxz
aam
cdq
es
cli
fbstp
es
and
rcr
loopne
idiv
dec
hlt
mov
or
sub
outs
loope
lock
lods
jbe
shr
fistp
ret
popa
lods
push
mov
jnp
mov
push
int3
adc
ja
and
rcl
jae
je
xor
aas
cli
into
scas
fmul
test
mov
adc
xor
sbb
(bad)
adc
jnp
sub
dec
or
int3
xor
cmp
adc
sbb
inc
mov
(bad)
imul
xlat
iret
push
fstp
mov
pop
adc
adc
mov
(bad)
xor
(bad)
push
aaa
mov
pop
imul
outs
sti
lods
sti
out
stc
hlt
dec
mov
in
pop
mov
pop
jl
push
test
mov
stos
ins
sbb
ja
sub
cld
icebp
lods
or
fs
jne
adc
or
outs
out
dec
ins
sub
ins
jns
push
inc
repz
ins
out
shl
and
xor
sbb
push
pop
hlt
dec
fldcw
sub
lahf
xor
lea
xor
popf
ja
jo
cmps
fwait
dec
dec
push
push
sub
shr
xchg
(bad)
into
out
mov
mov
(bad)
xlat
test
ret
stos
xor
push
push
(bad)
pop
(bad)
jle
adc
dec
jg
nop
adc
stos
sub
inc
mov
inc
add
mov
and
mov
scas
sbb
xor
jge
add
test
aad
(bad)
push
adc
mov
es
sub
mov
std
cmp
jnp
sub
sub
dec
jbe
in
call
cli
outs
adc
pop
cmp
xor
lods
cmp
pop
sbb
pop
sahf
add
fdivr
mov
pop
sahf
ja
ret
add
fldenv
(bad)
adc
mov
add
adc
adc
addr16
jno
push
fst
push
movs
jp
pop
xchg
jno
hlt
arpl
cli
or
(bad)
add
inc
nop
mov
movs
in
mov
lock
inc
cdq
jmp
nop
(bad)
and
imul
popa
push
cdq
cdq
ss
dec
push
jmp
scas
iret
mov
mov
hlt
cwde
and
adc
pop
cmp
xor
aad
cdq
sbb
movs
pusha
enter
or
jo
test
out
mov
fisub
inc
imul
jl
fistp
adc
xor
pop
cmps
mov
mov
inc
push
xor
ins
and
jp
popf
test
cld
push
inc
jno
(bad)
rcl
sbb
and
jle
adc
mov
scas
pop
cmp
push
inc
inc
and
out
test
outs
call
pushf
xor
movs
and
jbe
lds
cld
retf
cld
mov
sbb
(bad)
pop
mov
aas
push
mov
xlat
lods
cmp
out
mov
jle
dec
(bad)
je
popf
pop
lea
cld
xchg
arpl
jb
mov
out
(bad)
loop
mov
dec
icebp
mov
call
adc
mov
test
mov
(bad)
(bad)
stos
mov
dec
sub
push
retf
dec
mov
sahf
pushf
retf
movs
bnd
add
sar
imul
lahf
add
pop
mov
push
inc
popf
mov
jg
aad
std
mov
jmp
sti
or
xor
fdivr
cdq
outs
jle
dec
(bad)
or
cmp
retf
dec
mov
mov
jge
dec
adc
add
mov
jl
js
xchg
movs
daa
mov
(bad)
ud0
mov
inc
inc
mov
je
retf
rol
int
nop
jmp
mov
xchg
dec
jge
sbb
dec
movs
lock
aas
jns
jecxz
push
cmps
dec
mov
xchg
mov
and
lds
in
mov
mov
push
xchg
stos
push
add
out
cmps
push
cs
dec
xor
xor
scas
and
and
mov
push
stos
cld
xchg
ins
cmp
dec
daa
push
shl
ror
lea
int3
cmc
inc
jne
loope
test
mov
(bad)
aaa
xchg
call
out
test
test
xor
cmp
retf
into
fisub
dec
and
fsubr
arpl
cmp
nop
in
test
mov
ins
mov
cwde
xchg
cld
and
addr16
aad
cmp
mov
popf
adc
outs
push
stc
sub
cmp
sbb
stos
(bad)
mov
pop
sti
fwait
rol
jae
jnp
cmp
inc
in
pushf
adc
cmps
inc
std
dec
or
cmp
mov
int
cld
mov
jmp
std
add
hlt
in
cmp
mov
add
push
cmp
pop
add
aad
aam
fwait
pop
into
add
loope
xchg
out
scas
sub
icebp
xchg
jnp
fcomp
push
ins
int
hlt
idiv
add
jne
rol
mov
cwde
sub
in
jne
call
call
sbb
movs
in
adc
inc
cmc
inc
fistp
push
out
cmps
dec
fimul
ret
or
dec
pop
pop
xor
je
out
sub
out
leave
rol
fdiv
jp
inc
fwait
adc
push
push
lock
(bad)
dec
and
push
and
adc
jbe
iret
out
or
(bad)
int3
dec
sub
xchg
int3
push
ss
pop
inc
pop
cmp
or
ins
call
mov
fld
push
fstp
test
ror
js
cli
mov
xor
or
xor
lahf
ds
xchg
and
ja
push
dec
or
fs
mov
xor
mov
pop
mov
xchg
iret
jecxz
sub
call
pusha
sahf
inc
(bad)
xor
mov
lods
cwde
outs
rol
inc
sti
mul
pop
push
cmp
es
aaa
push
mov
inc
out
stc
or
aam
pushf
pop
mov
sbb
addr16
pusha
dec
shr
mov
out
cmp
jmp
mov
pop
add
mov
jecxz
into
pop
sub
adc
fs
add
das
and
pop
jmp
pop
jae
scas
js
cwde
int
cmp
xor
jnp
pop
inc
and
or
sar
cmp
dec
inc
pop
push
mov
leave
mov
pushf
ret
mov
or
stc
fs
xchg
dec
push
shl
int3
xchg
fwait
xchg
ret
pop
sbb
adc
push
popa
sub
mov
xor
imul
pop
push
sub
into
pop
repz
lea
or
inc
push
push
movs
movs
xor
and
test
fstp
aam
and
idiv
xchg
xchg
das
mov
retf
pop
(bad)
and
mov
push
mov
ds
(bad)
ret
jns
dec
ins
mov
xchg
fst
sub
retf
in
stc
ins
mov
(bad)
xor
ret
inc
popf
cs
(bad)
inc
fwait
retf
fnstsw
and
and
fs
cld
mov
mov
fsub
int
and
mov
pop
out
aam
push
ret
test
pop
adc
clc
pop
xor
out
rcl
pusha
and
nop
cmp
and
pop
loopne
mov
push
cmp
inc
jne
mov
sahf
xchg
lods
outs
mov
mov
in
clc
call
pop
pop
rcl
mov
and
fcom
mov
aaa
and
mov
cli
cmc
mov
jns
push
xchg
sbb
push
xchg
and
mov
adc
xor
fs
xchg
and
sbb
je
mov
push
sub
xchg
arpl
pushf
mov
adc
cmp
jne
xchg
loope
fnstcw
cmps
(bad)
xchg
mov
scas
xor
retf
and
pop
stos
inc
or
rol
cdq
or
int3
fimul
call
das
adc
stos
xor
std
mov
xor
inc
xor
outs
mov
mov
sub
sub
imul
jmp
mov
scas
jge
mov
iret
jge
dec
ins
jl
add
pop
fstp
xchg
and
test
pusha
lahf
outs
retf
je
or
sbb
rcl
adc
and
mov
out
pop
outs
hlt
and
stos
inc
pop
mov
xor
xchg
sbb
mov
lods
mov
sub
call
jns
jns
inc
scas
ss
sbb
pop
inc
ins
hlt
jle
aaa
loop
mov
push
popf
and
xchg
sbb
(bad)
sbb
mov
movs
pop
ins
push
pushf
pop
xlat
adc
and
adc
cs
bound
push
sub
out
dec
sbb
pushf
push
add
pop
push
dec
aad
rcr
jp
inc
or
inc
prefetch
mov
jae
in
lods
adc
adc
outs
ret
sbb
aaa
jo
cmp
(bad)
stc
add
imul
pop
push
sbb
cmp
stc
adc
stos
pop
mov
lock
mov
and
push
rcl
adc
int
xor
je
jnp
js
jno
and
ud1
xchg
dec
xchg
cli
xor
imul
jns
jg
stos
mov
lock
adc
jae
jo
add
outs
mov
mov
adc
and
test
jb
jge
stc
stos
call
pop
or
mov
retf
movs
into
push
out
or
sbb
jg
xor
sbb
mov
inc
or
aam
jb
adc
dec
dec
xchg
and
mov
sbb
sub
mov
jae
not
imul
jmp
jge
pop
cli
(bad)
ds
in
pop
stos
push
mov
pop
cmc
cmp
adc
push
data16
outs
and
push
cdq
mov
or
fadd
aad
xor
ret
je
(bad)
gs
push
stos
lds
and
in
pop
cmp
jge
jge
out
in
ret
dec
cdq
icebp
add
jb
es
sbb
test
lock
cmp
retf
sbb
cwde
pop
and
cli
mov
in
cmp
and
xchg
in
clc
xchg
(bad)
repz
fs
add
sub
pop
inc
sbb
inc
pop
xor
adc
add
dec
push
cld
(bad)
push
xchg
cmp
push
jmp
jnp
nop
add
(bad)
xor
jl
aam
pop
jmp
cmc
mov
add
jnp
jo
fbld
call
js
cmps
out
xor
dec
mov
pop
pop
je
jbe
cmp
xchg
mov
cdq
cmps
pop
std
ins
fild
fsubr
jmp
cmps
(bad)
rcl
mov
fisubr
leave
xchg
sbb
lods
mov
mov
sbb
inc
in
(bad)
cmp
xor
cmp
adc
push
cmps
push
cwde
mov
jmp
aaa
dec
mov
jmp
mov
jg
out
enter
shl
ja
(bad)
sbb
xor
adc
int
fcmovnbe
cmps
ins
and
pop
mov
mov
adc
xchg
out
mov
retf
sub
push
clc
sti
lahf
jno
es
loope
int
or
fwait
sbb
arpl
mov
(bad)
es
(bad)
xor
aad
dec
push
test
icebp
mov
enter
in
jge
(bad)
out
into
fbstp
sahf
mov
sahf
sbb
mov
jmp
mov
rcl
adc
mov
inc
pop
jmp
int3
mov
or
shr
or
xchg
sbb
enter
push
mov
mov
das
mov
or
lods
inc
test
mov
lahf
jns
sar
jmp
pop
fcom
sbb
sbb
sbb
ss
imul
pop
jo
fistp
fstp
test
aam
data16
scas
adc
pop
sbb
sbb
sar
clc
mov
test
stc
inc
mov
clc
shl
xor
sub
fnstsw
mov
jecxz
test
sbb
adc
push
sub
and
dec
stos
sub
enter
ret
inc
in
les
pushf
ret
test
fdivr
arpl
(bad)
imul
sbb
jae
pushf
movs
test
jl
and
test
repz
in
dec
jmp
jecxz
push
test
xor
mov
jg
ss
enter
leave
inc
dec
cmp
std
outs
push
push
cmp
fadd
leave
retf
xor
ss
pop
scas
gs
retf
ins
enter
cmp
fisubr
cmp
int
ret
test
inc
push
shl
es
cdq
clc
dec
cmp
scas
sti
hlt
jbe
dec
popf
std
sbb
das
sbb
dec
cs
jge
jg
pop
push
dec
cdq
push
(bad)
loop
mov
lods
into
movs
inc
sub
(bad)
pop
inc
mov
dec
jmp
add
or
xor
movs
xchg
sbb
mov
xor
fcom
add
xor
sti
ja
dec
mov
jmp
call
cmp
adc
dec
inc
and
xor
mov
data16
mov
mov
lods
sbb
sbb
out
sbb
sub
sub
addr16
inc
hlt
add
lods
(bad)
ror
push
jmp
sub
push
ins
mov
jmp
mov
pop
shl
add
mov
test
mov
call
add
jnp
dec
jp
rcl
aas
into
xor
aaa
push
int3
movs
ja
iret
jle
outs
cld
ss
jmp
pop
sub
inc
loopne
mov
stos
push
or
mov
repz
retf
and
or
loop
xlat
rcr
jge
mov
(bad)
fucomip
fsubr
(bad)
retf
sbb
out
arpl
ret
push
dec
push
rol
fld
mov
scas
outs
das
xor
sbb
outs
xchg
in
mov
xchg
cwde
js
pop
pop
nop
out
mov
xchg
inc
xchg
ss
enter
or
aaa
mov
leave
scas
xor
fidivr
pop
xor
mov
or
cwde
icebp
cmp
sub
ret
(bad)
jge
push
push
xor
adc
adc
mov
pcmpgtd
fisttp
sub
xor
popf
sub
jb
pop
(bad)
sbb
push
pusha
fisub
or
lahf
ss
push
and
call
aad
cwde
xchg
loop
pop
stos
jbe
cmp
jp
int
sub
mov
mov
stos
ins
mov
sar
sar
or
call
add
pop
popf
or
rcr
es
sbb
sub
shl
xchg
popf
mov
sub
xor
push
cmps
push
dec
pop
cmps
jbe
mov
into
and
pop
das
jp
int
push
lods
xor
add
pop
pop
jl
mov
retf
outs
cmp
cmp
enter
and
cmp
aas
ror
cs
ffreep
xchg
movs
(bad)
mov
jbe
into
fs
rcr
or
sub
jb
mov
lods
or
jmp
pushf
bound
arpl
pop
mov
retf
imul
xor
dec
jle
xchg
fs
dec
scas
sub
mov
loopne
cli
inc
xor
rcl
push
push
jne
ss
fsubr
jmp
pop
out
ret
sub
je
adc
sti
or
and
and
js
inc
in
dec
call
popa
dec
mov
loopne
(bad)
arpl
mov
test
rol
out
ret
jne
cmps
pop
mov
test
cmp
and
and
adc
or
clc
xlat
inc
fcmovnb
jmp
daa
cmp
push
xor
neg
xchg
mov
je
cmp
mov
xchg
into
mov
cdq
call
dec
mov
xor
sbb
cmps
fs
pop
mov
ds
jmp
inc
jle
pop
push
scas
mov
sub
sub
pop
shr
xchg
jae
mov
jae
test
sbb
or
mov
popa
mov
repnz
inc
hlt
retf
mov
push
and
lds
inc
into
inc
retf
stos
fldenv
xchg
movs
ficomp
shl
pusha
xchg
mov
std
cdq
jmp
push
mov
loopne
mov
xor
mov
sahf
sub
pop
imul
push
sub
dec
cmp
jmp
imul
push
mov
or
imul
fiadd
sub
mov
inc
cli
push
scas
or
(bad)
cs
(bad)
stc
fisttp
pop
lods
pop
arpl
(bad)
sbb
mov
cmps
lea
sbb
fisttp
push
test
scas
cmps
test
jecxz
cwde
mov
pop
pop
rol
loope
ret
xchg
test
ins
cmps
(bad)
xlat
dec
push
repz
cwde
cld
push
cmp
inc
add
jmp
cmp
enter
inc
dec
jecxz
mov
cs
outs
ror
mov
sbb
push
mov
mov
mov
outs
bound
pusha
adc
inc
xor
das
clts
call
pushf
les
fldenv
mov
arpl
fmulp
xrelease
fs
pop
pop
sar
push
xchg
jb
test
pop
fs
pop
(bad)
out
pop
cmp
lock
stos
aas
mov
sub
loop
or
(bad)
ds
test
sub
shl
xor
mov
push
dec
loopne
pop
jb
test
inc
xchg
retf
adc
adc
fstp
mov
push
push
(bad)
pop
lock
js
inc
stos
movs
push
add
ror
fisttp
jge
mov
jmp
call
mov
iret
jns
cwde
sbb
retf
das
xchg
mov
lahf
stos
ja
lahf
das
call
aam
xchg
and
jl
xchg
int3
cli
fstp
std
and
fdivrp
jecxz
test
hlt
xlat
data16
sub
and
pop
jno
loop
cmp
fdivr
es
bound
or
(bad)
call
add
sahf
jno
dec
call
push
jb
out
mov
add
sub
cmp
jg
ret
dec
mov
lods
(bad)
push
clc
test
mov
lods
inc
mov
adc
mov
push
pusha
xchg
push
int
mov
pop
inc
fisub
retf
pop
push
test
leave
sub
loope
xchg
ficom
std
sub
and
mov
loope
mov
push
aad
dec
iret
imul
arpl
lods
arpl
push
out
frstor
shl
push
push
sbb
sbb
push
je
mov
popf
paddw
imul
lea
mov
jmp
pop
xchg
out
inc
in
das
retf
xchg
add
(bad)
push
jl
push
fist
in
sbb
push
shr
rol
sub
add
imul
inc
mov
mov
mov
das
stos
shl
mov
push
js
cmps
sbb
jecxz
jae
jecxz
sub
cmps
lahf
push
and
jg
pop
push
aam
sub
into
pop
or
fisttp
mov
mov
cmp
push
scas
cmp
push
(bad)
cmp
cmc
arpl
ror
lahf
(bad)
retf
daa
cli
lds
mov
fcmovne
xor
jl
bound
sub
xchg
mov
rcr
xlat
shl
xchg
mov
je
pushf
out
stos
shl
and
sahf
xchg
cmp
inc
lock
pusha
and
rol
call
mov
push
rcr
in
cld
pusha
in
cwde
push
sbb
loope
jb
jo
pop
and
jg
pop
mov
jnp
adc
pop
push
and
cli
mov
lds
mov
push
fnstenv
xchg
ret
js
(bad)
(bad)
jnp
outs
aad
cmps
lods
xor
push
daa
sub
xchg
(bad)
jecxz
js
sbb
dec
shr
xchg
retf
or
sar
add
dec
push
dec
ins
ret
and
(bad)
mov
mul
xor
inc
push
xor
inc
das
js
jmp
pop
scas
aaa
adc
(bad)
outs
lods
mov
cmps
mov
or
cmc
lock
rcr
pop
lds
scas
push
xchg
call
outs
ss
pusha
bound
jnp
pop
scas
js
popf
movs
dec
pop
push
xchg
stos
xor
sti
xchg
xchg
sbb
cmp
arpl
pushf
test
xor
(bad)
mov
ds
pop
adc
mov
shr
jle
add
add
sbb
stos
mov
inc
sbb
xchg
movs
push
jl
je
daa
rcl
out
inc
shr
loope
scas
sbb
int
cwde
addr16
pop
rep
dec
xlat
mov
push
push
sub
aad
addr16
or
jg
jo
daa
call
mov
addr16
stos
xor
outs
fidivr
outs
push
and
adc
pop
push
out
jb
dec
imul
aam
jmp
mov
sub
sar
test
pop
sub
or
movs
sbb
push
and
shr
and
jg
push
mov
ins
mov
movs
mov
xchg
xor
sbb
mov
mov
mov
jne
ins
mov
mov
aam
imul
loopne
pop
pop
addr16
and
sbb
add
pushf
dec
push
ins
inc
pushf
loop
sub
jl
fbld
call
clc
das
xor
imul
mov
aam
in
sub
sub
fsubr
adc
(bad)
pop
repz
lods
sub
popf
cmp
push
or
retf
lods
movs
xor
es
push
iret
push
out
dec
mov
push
inc
loope
pushf
mov
ins
or
jmp
xor
movs
imul
(bad)
add
popa
xchg
call
mov
jge
stos
out
(bad)
sti
jp
arpl
or
mov
mul
test
adc
sub
pop
xor
pop
pop
pusha
pop
cmps
ins
jae
inc
fmul
mov
jb
int3
dec
push
retf
mov
shl
pop
cwde
dec
pushf
or
fld
mov
popw
mov
stc
push
mov
aas
fwait
jae
adc
push
or
mov
daa
sub
int
inc
push
sbb
add
pop
scas
pop
xchg
sbb
push
mov
mov
in
inc
fldcw
sar
aas
sahf
jns
cmp
mov
les
outs
shl
mov
lds
sbb
out
or
aaa
ins
xchg
xlat
sub
retf
retf
call
in
ins
rcr
ror
popf
mov
ins
pop
in
cmps
in
jmp
inc
sbb
lods
repnz
mov
ret
jmp
mov
inc
mov
fisub
cmp
call
int
add
jmp
sahf
daa
enter
scas
pop
int
inc
icebp
xor
and
popf
cwde
inc
mov
pop
push
int
mov
sub
fdiv
cs
bound
fist
and
adc
xor
push
sbb
popa
sub
pop
je
push
adc
cmc
or
fnstsw
(bad)
jnp
add
test
mov
sbb
out
pop
adc
outs
(bad)
jae
sbb
mov
(bad)
lahf
call
aas
rcr
cdq
(bad)
mov
(bad)
ret
adc
inc
push
stos
aaa
dec
ins
cld
pop
sbb
ins
cmp
call
sbb
bound
and
or
enter
cwde
imul
outs
add
scas
inc
std
jb
iret
test
imul
into
and
cli
dec
fadd
and
mov
and
pushf
mov
sub
adc
xchg
xchg
push
arpl
cmps
sbb
fs
sub
aas
loopne
jecxz
dec
outs
fist
sbb
mov
pop
mov
jnp
push
loopne
add
popf
in
add
push
sahf
xlat
xchg
cs
jnp
aas
dec
loop
sub
fist
stos
fiadd
mov
push
aaa
sbb
cmp
(bad)
stos
inc
out
inc
fmul
outs
mov
xlat
sub
out
cwde
call
shl
into
dec
call
and
or
inc
cld
fs
or
inc
cmps
in
jbe
push
inc
sub
scas
sub
inc
mov
dec
aaa
aaa
fist
(bad)
mov
push
xchg
paddb
cmp
ja
pop
cmp
(bad)
shl
int
js
adc
inc
pop
push
jno
outs
pop
xchg
pop
inc
lods
mov
xchg
(bad)
fbld
sub
fidiv
push
xor
pop
(bad)
xor
retf
mov
cmp
dec
push
mov
xchg
mov
fistp
int
lods
lahf
xchg
(bad)
dec
std
dec
push
jbe
aam
pop
cdq
mov
aaa
and
inc
in
xchg
pop
inc
sbb
jecxz
out
push
jb
add
pop
fistp
cmps
and
shl
cmp
pop
arpl
push
test
mov
mov
or
cli
imul
add
mov
adc
dec
adc
sub
fsub
mov
inc
movs
clc
(bad)
lea
pop
ficomp
adc
xchg
sbb
and
sti
sbb
sbb
adc
cld
call
(bad)
ins
stos
std
mov
pop
add
mov
lea
lds
cwde
stos
xchg
(bad)
jg
(bad)
xor
adc
in
test
call
dec
iret
movs
or
pop
adc
lahf
ds
dec
psubsb
pop
(bad)
and
xchg
push
cmp
inc
cdq
mov
xchg
jge
ja
mov
or
cs
and
pop
out
mov
mov
outs
pop
cdq
jne
pusha
adc
nop
add
push
imul
aas
mov
sbb
jl
loopne
jmp
aad
pop
ror
lock
cmp
push
xchg
cld
sub
sbb
js
iret
call
dec
aam
out
cdq
push
jo
fidiv
xchg
lea
pop
imul
mov
mov
iret
add
xchg
pop
mov
jnp
stos
das
daa
push
jg
out
sub
xchg
call
movs
lds
mov
push
gs
aad
mov
test
sub
mov
xor
jae
jne
sub
(bad)
xlat
dec
cmp
iret
mov
pop
adc
fist
lahf
fld
and
pop
fs
add
mov
sbb
mov
xchg
jae
and
ret
std
fistp
dec
mov
std
cmc
dec
pop
pop
rol
mov
mov
push
mov
loopne
jne
aaa
les
div
push
adc
fyl2xp1
push
lds
push
out
mov
frstor
mov
pop
jp
push
popf
sub
popf
mov
pop
jno
fld
jns
cmc
ret
xchg
push
cdq
pop
sbb
ins
pusha
jae
pop
bound
mov
outs
sub
fnstenv
and
xor
add
adc
bound
in
pop
dec
mov
aam
adc
cmp
add
repz
mov
xchg
mov
sbb
sub
fistp
mov
push
ins
lods
into
or
popa
scas
inc
push
sar
lods
dec
mov
test
dec
ret
cmps
shr
ds
cmp
and
ins
push
mov
sub
inc
dec
(bad)
les
dec
int3
(bad)
into
xor
jnp
jmp
push
fidivr
not
push
jnp
fs
sub
add
shl
icebp
ret
pop
jo
enter
push
dec
cmp
cli
sbb
test
popa
sahf
dec
sub
cmps
inc
gs
or
sbb
adc
adc
(bad)
push
sbb
adc
pop
cmp
cmp
pop
sub
jns
aas
dec
add
loope
pop
mov
xchg
jmp
xor
sbb
adc
mov
pushf
cmp
dec
xchg
mov
sbb
jb
mov
or
sbb
pop
mov
xor
rcl
cdq
outs
mov
cmp
repz
cs
dec
add
ficom
aad
dec
cmp
fucomip
jae
jne
hlt
jns
or
ins
sbb
or
adc
jge
cmp
sub
repnz
fadd
stc
loop
in
daa
cmp
imul
fsub
mov
add
fistp
in
fsubr
push
push
fxch
iret
sub
push
jno
adc
push
mov
push
push
push
and
push
dec
gs
adc
jge
inc
jmp
shl
cmc
xor
fsub
and
sbb
fnstcw
(bad)
fcomp
ret
mov
mov
sti
xor
jge
jo
mov
mov
cmp
cmp
sbb
pusha
inc
push
mov
jmp
sbb
pop
dec
fild
xchg
stos
sti
stc
jmp
sub
xor
cmp
rcr
dec
popa
fisubr
fcom
test
pop
iret
or
ret
pushf
push
test
aam
adc
rcl
lea
imul
inc
mov
jge
(bad)
pop
dec
ss
mov
push
jp
call
adc
retf
cmp
sar
call
xchg
pop
arpl
dec
cld
jno
(bad)
fsubr
mov
call
mov
cmp
xchg
or
mov
sahf
jae
in
push
cmps
je
jns
adc
push
add
mov
mov
push
mov
mov
lock
in
adc
ins
push
or
and
jno
jge
xchg
push
shl
fild
pop
push
adc
retf
cmps
sub
jmp
mov
inc
jo
mov
call
loopne
cld
fld
adc
xor
fwait
xchg
rcr
repz
xor
fsubr
loopne
test
enter
je
ret
retf
push
int3
xchg
sub
ja
popf
aad
fcom
int
pop
xchg
(bad)
outs
cld
leave
adc
rol
cmp
jns
out
popf
mov
add
lock
lock
xor
mov
mov
push
push
cld
aam
xchg
pop
lock
pop
pop
sbb
aas
sub
popf
mov
clc
sub
lods
xlat
scas
outs
ss
add
clc
mov
and
bound
xchg
jno
mov
pusha
sbb
outs
sbb
jmp
sbb
retf
in
xchg
(bad)
mov
sbb
add
sahf
into
push
cs
jl
jne
movs
out
pop
lock
mov
inc
jmp
popf
nop
fistp
ins
mov
mov
cwde
jo
xchg
mov
in
xchg
fistp
(bad)
lods
cmp
in
hlt
dec
scas
sbb
mov
movs
(bad)
mov
popa
out
loope
iret
and
xchg
stos
ins
pop
test
jp
clc
fstp
mov
jmp
clc
sbb
pusha
popa
into
mov
test
jg
jmp
xor
adc
lock
sbb
dec
nop
sti
sbb
dec
push
push
dec
mov
(bad)
and
das
mov
push
outs
arpl
mov
out
popf
cli
cmp
inc
arpl
mov
jmp
in
(bad)
sar
test
mov
stc
retf
pop
push
mov
je
outs
(bad)
dec
in
aaa
addr16
cmps
mov
data16
pushf
sahf
movs
lods
lods
jns
pop
and
add
sti
clc
bound
lods
cld
jp
(bad)
test
int
retf
xlat
(bad)
out
ret
xlat
push
fxch
sbb
cmps
into
jmp
xor
(bad)
(bad)
sub
icebp
push
(bad)
shl
add
fucomi
mov
jle
inc
push
adc
inc
stos
pop
stos
and
pop
cmps
xchg
scas
fadd
cwde
jl
call
popa
inc
cmp
outs
test
jmp
add
cmp
jge
into
sti
or
xchg
jle
popf
and
add
paddusw
xor
mov
mov
pop
mov
into
mov
fwait
pop
inc
outs
jmp
mov
hlt
stos
add
mov
mov
push
jmp
sub
icebp
rcr
cli
inc
sbb
pushf
xchg
sub
shr
xchg
adc
jne
and
push
pushf
bound
fisttp
mov
into
enter
mov
jnp
xlat
in
lea
xor
dec
adc
jl
sub
shr
xchg
mov
add
add
add
neg
xor
pop
and
cmp
sbb
(bad)
mov
js
ins
call
mov
mov
ret
jmp
fsubr
icebp
mov
lea
push
stos
cmps
push
mov
sub
clc
rol
cli
or
pusha
pushf
and
es
fs
mov
cld
push
dec
popa
inc
pop
in
inc
pop
jg
adc
push
inc
push
arpl
mov
jle
inc
aam
jae
shr
popf
rol
or
movs
xor
push
outs
pusha
inc
mov
leave
and
lds
(bad)
fwait
xchg
push
dec
inc
int3
sbb
jmp
cmp
pushf
cld
aas
mov
sub
fidivr
and
mov
fld
push
test
jle
push
stc
cmp
ins
(bad)
add
pop
push
jmp
jnp
imul
xchg
ds
cmps
dec
push
ja
push
aam
mov
jl
fstp
jno
mov
call
cmp
jae
pop
iret
push
nop
loope
jns
push
sub
mov
js
push
lea
mov
ins
repz
lahf
loopne
jbe
ins
sbb
cmp
mov
jg
int
out
call
pusha
leave
adc
push
adc
scas
sbb
aam
ds
mov
pop
sub
addr16
or
xchg
mov
pushf
xor
cmovs
jno
call
repnz
and
repz
call
jg
jnp
ins
lods
pop
in
add
fdivr
scas
add
sbb
push
in
cld
arpl
outs
xor
cmp
sub
arpl
repnz
jge
adc
into
and
test
retf
adc
mov
sbb
or
cmp
and
mov
rcr
loop
cmps
sub
fmul
aas
inc
sub
shl
imul
mov
ret
fwait
pop
add
int
test
nop
xor
repnz
xchg
imul
arpl
mov
pop
test
mov
pop
sahf
pushf
fsubr
shl
push
jge
cmps
scas
or
inc
jnp
xor
nop
jge
mov
int
dec
loope
push
add
mov
fidiv
pop
mov
sub
in
iret
retf
arpl
imul
pop
jl
in
or
xchg
pop
push
sub
lds
daa
test
pop
mov
or
test
sub
adc
arpl
xchg
repz
sub
sbb
pop
sub
outs
ret
pop
clc
sbb
pop
je
add
jg
les
fmul
mov
cmp
mov
movs
cmp
mov
aas
jnp
jbe
or
mov
stos
mov
outs
mov
jecxz
jle
mov
sbb
push
je
sub
scas
jl
aad
push
mov
and
hlt
into
inc
mov
rcr
inc
push
shr
cld
mov
in
in
push
xor
rep
gs
jnp
dec
jecxz
into
out
call
lods
add
sar
mov
inc
sub
mov
cmovg
push
call
sub
xchg
shr
sub
mov
in
test
mov
and
xchg
mov
dec
cld
dec
jbe
xchg
or
out
out
push
cld
jmp
outs
mov
inc
mov
lahf
push
cmp
cmps
sti
mov
(bad)
pop
cmp
out
jle
mov
mov
(bad)
sub
mov
or
mov
movs
ds
repnz
sub
add
cmp
es
clc
sar
mul
pop
mov
xor
enter
loop
jnp
int
rcr
xor
(bad)
loop
scas
xor
adc
test
test
aam
or
xchg
bound
sbb
xchg
mov
test
jno
adc
adc
jmp
mov
fild
cmps
cld
mov
stos
loope
fisubr
cmc
in
int3
pop
icebp
loopne
in
(bad)
movs
stos
push
retf
dec
mov
adc
cmc
sahf
mov
or
and
xchg
jg
dec
cmp
sbb
xchg
xor
pop
scas
fcom
or
push
leave
sahf
imul
push
aad
mov
call
or
mov
fadd
lds
lea
xor
dec
cmp
retf
and
repz
or
sti
xor
cmps
or
rcr
hlt
dec
and
add
stos
aam
push
mov
xchg
cmp
popa
out
push
dec
das
sub
lods
jns
cmp
loope
cmp
mov
jb
jmp
(bad)
fld
sbb
push
daa
rol
popf
pop
sbb
cmp
dec
fisub
ret
sahf
push
mov
mov
fadd
xor
sti
cs
add
xchg
or
inc
dec
xchg
jne
retf
test
mov
pop
jo
add
cli
xor
sub
jmp
dec
mov
jne
out
sbb
fild
xchg
adc
sbb
test
ror
xchg
dec
stos
test
xchg
mov
cli
enter
(bad)
addr16
adc
call
dec
cwde
pushf
push
cmp
pushf
xlat
xchg
mov
outs
cmp
or
and
dec
out
sti
pop
pop
ret
sbb
int3
sub
fsub
cmp
mov
aaa
popf
push
test
cs
ret
scas
iret
cld
push
cld
scas
jbe
jecxz
test
sbb
dec
imul
xchg
arpl
dec
dec
mov
dec
(bad)
dec
pop
inc
mov
inc
dec
xchg
rcr
or
push
or
pop
call
pop
pop
sub
and
out
fbstp
mov
bound
mov
dec
lahf
aas
mov
mov
xchg
mov
jae
xor
and
fs
add
sbb
test
cld
pop
imul
inc
es
push
lea
inc
ror
mov
ins
js
pop
addr16
mov
push
adc
mov
test
std
sbb
pop
les
inc
sub
mov
(bad)
es
jno
sar
xchg
or
fld
inc
sub
(bad)
(bad)
retf
jnp
(bad)
adc
sbb
je
pushf
sbb
jo
clc
jmp
mov
hlt
cmps
(bad)
(bad)
xchg
pusha
test
sahf
sub
aaa
jo
mov
jae
xchg
lods
jno
pop
rol
push
sub
bound
arpl
adc
jg
fwait
out
jg
fisub
mov
cmp
add
in
add
mov
ret
sub
cmps
jecxz
enter
sar
and
std
ja
call
aam
mov
aad
in
sbb
stc
xchg
es
jmp
fist
xor
sub
cmps
add
adc
inc
push
pop
or
(bad)
push
xchg
imul
pop
jmp
sbb
rcl
push
and
pop
add
das
lock
mov
dec
or
inc
popf
dec
call
lock
dec
jg
ja
cli
add
outs
xchg
sbb
push
ret
movs
xor
sar
outs
or
pop
pop
xchg
fwait
dec
shl
sti
mov
dec
cwde
rcr
scas
test
pop
pop
pop
cwde
popf
loope
xor
mov
movs
sti
jg
repz
pop
sahf
push
push
scas
sbb
add
cli
sahf
frstor
push
sti
out
dec
pop
dec
test
cwde
dec
jge
xor
mov
cvtps2pd
clc
xchg
(bad)
mov
jmp
scas
mov
movs
scas
jg
xor
lahf
mov
mov
cmp
jmp
(bad)
in
xor
jecxz
mov
and
or
inc
mov
sar
cmps
cld
mov
pop
mov
push
loope
push
in
aaa
popa
(bad)
ja
or
not
and
adc
pop
adc
std
pop
clts
loope
cmp
pop
inc
scas
imul
or
stos
cld
pop
outs
out
jecxz
sub
popa
add
sbb
dec
daa
movs
inc
sti
mov
mov
sar
push
aas
ret
mov
mov
mov
bound
adc
enter
pop
inc
lock
adc
inc
or
add
and
stos
enter
push
pop
jg
or
mov
movs
fist
mov
sub
ret
sbb
ret
nop
sbb
add
fdivr
mov
(bad)
jno
mov
ds
inc
pop
pushf
jl
jo
or
pop
fst
and
mov
repz
lods
pop
jo
jmp
add
pusha
aaa
popa
jp
cmp
enter
mov
and
jg
lea
ins
movs
int
inc
inc
leave
adc
add
jne
fcom
mov
mov
jae
repz
push
xchg
mov
add
fwait
xchg
dec
retf
popa
jl
fidiv
jg
xor
sbb
jo
shl
xchg
adc
inc
out
sbb
imul
fimul
repz
fcomp
push
sbb
call
pop
int3
push
fsub
call
mov
ins
fld
test
aas
push
lock
fcomp
jle
loopne
fidivr
fcom
stos
mov
mov
or
ss
add
jo
xor
aam
pop
or
mov
shr
jae
fbstp
dec
mov
fnstenv
in
xchg
add
sti
jae
inc
outs
sub
fild
pop
and
jnp
sbb
xchg
mov
retf
lahf
adc
and
sbb
and
jecxz
sar
jne
adc
pop
push
lods
add
or
fist
ja
fisubr
repnz
out
push
or
cli
pop
jp
inc
dec
rol
and
js
pop
or
jb
and
cdq
push
push
sbb
cmp
inc
add
mov
cmp
fwait
pop
leave
ret
test
hlt
out
out
aaa
pop
cwde
cmp
fidiv
mov
and
leave
mov
add
lods
daa
jo
fwait
in
enter
iret
or
or
pop
push
mov
stc
sbb
and
es
out
and
imul
lahf
mov
pop
inc
stos
dec
sbb
sahf
push
pusha
dec
cmp
loopne
js
and
mov
push
stc
add
jbe
gs
js
sbb
xchg
outs
fcomp
jmp
ret
add
dec
das
gs
jmp
add
shl
test
cmps
push
push
jo
sub
inc
jl
out
cmps
daa
push
jmp
jo
addr16
cmps
xchg
xchg
push
loopne
mov
cmp
ins
mov
mov
mov
sbb
outs
mov
lahf
repz
mov
sub
pop
test
jle
mov
movs
xor
stos
adc
js
mov
pop
fcmovnb
retf
xchg
stos
daa
out
fs
xchg
jge
fistp
ins
xor
jmp
cmp
imul
pop
mov
push
push
pop
into
call
adc
and
add
fimul
xchg
outs
jno
mov
add
xor
mov
int3
pop
movs
or
add
inc
pop
in
shr
pop
jo
xchg
test
adc
in
int
fdivr
lea
sub
sbb
jae
sub
jge
mov
push
dec
ins
pop
out
sahf
dec
jle
add
repnz
pop
push
xor
ins
mov
mov
sub
addr16
xchg
ret
xchg
or
outs
cmp
push
jmp
push
lods
pop
mov
ins
xchg
dec
pushf
and
outs
push
and
or
jl
cmp
inc
mov
mov
movs
jle
adc
rcl
(bad)
addr16
retf
push
inc
inc
neg
sbb
xor
cmp
sbb
xor
into
mov
icebp
inc
loope
pop
into
enter
movs
retf
jp
or
retf
mov
mov
test
mov
jmp
je
fdivr
cli
jl
or
ins
xchg
in
out
out
and
pop
std
xchg
mov
dec
fsubr
mov
push
jne
repnz
shl
imul
jmp
inc
int
mov
xchg
mov
int
test
inc
loope
pop
shl
imul
mov
jmp
jl
aad
xchg
cmp
cmp
xchg
stos
add
xchg
(bad)
mov
adc
mov
mov
adc
cmp
shr
or
mov
popf
int
mov
add
cwde
jmp
(bad)
repz
(bad)
lock
fmul
arpl
(bad)
push
lods
dec
cmp
push
ret
inc
jmp
adc
(bad)
push
out
pop
or
mov
aam
in
ins
lahf
jbe
data16
movs
fimul
mov
clc
aam
scas
addr16
iret
in
aad
mov
mov
sub
jge
xchg
retf
add
daa
add
ret
lock
cli
cdq
inc
jo
add
movs
cmp
and
out
and
cmp
and
mov
dec
cmovnp
sti
icebp
cs
repnz
inc
out
ret
xor
jp
inc
test
mov
add
cdq
push
sbb
sub
rol
out
pop
iret
shl
jg
ret
push
fwait
dec
mov
fild
fimul
js
mov
mov
jbe
repnz
scas
jg
mov
outs
push
inc
cmps
and
cmp
ins
mov
xchg
mov
sub
loop
mov
out
bound
dec
add
jl
and
cmp
adc
sub
jg
push
jnp
pop
dec
push
sub
inc
sub
popa
lahf
out
stos
sti
and
pop
outs
mov
cmp
mov
out
in
imul
clc
test
cmp
push
mov
leave
xchg
(bad)
lods
dec
scas
int
cwde
push
lock
pop
mov
or
mov
jl
jg
jb
enter
jl
xor
outs
push
inc
nop
test
inc
inc
fnstenv
mov
cmps
mov
or
sub
and
cmp
adc
inc
sbb
cmp
and
test
mov
add
popf
push
sti
les
mov
je
lods
and
and
add
or
scas
jl
out
inc
pop
mov
loop
fmul
or
mov
and
and
retf
xor
pusha
push
pushf
add
or
mov
test
popa
into
shr
jae
mov
xchg
(bad)
push
movs
push
cmp
cmp
mov
imul
les
in
jae
sbb
mov
push
lds
pop
inc
lock
jb
sub
imul
or
cmc
mov
inc
std
setb
jp
add
hlt
enter
adc
or
jmp
sbb
push
or
(bad)
mov
inc
cmp
fiadd
ficom
or
cmp
sub
fs
inc
push
mov
fs
mov
or
xlat
or
cwde
mov
pop
ins
outs
ja
pop
repnz
add
push
jne
jle
pop
aam
repz
in
pop
fcom
(bad)
sbb
push
sub
scas
stos
fld
aas
dec
imul
xor
adc
mov
push
push
cmc
fcomp
pop
xchg
sti
dec
call
xchg
sbb
inc
sub
test
arpl
in
or
mov
jo
jmp
inc
cmps
call
dec
sbb
pushf
ret
and
and
(bad)
sti
das
fstp
adc
aad
into
sar
call
and
inc
cmp
fsubr
test
and
fdivr
sbb
and
adc
lea
ins
mov
sbb
cli
fs
fs
rcr
les
mov
lea
adc
mov
xlat
xchg
rcr
fld
mov
(bad)
lea
das
sti
pop
(bad)
mov
mov
push
sub
sar
xlat
sub
daa
fs
into
in
test
dec
xchg
imul
push
or
imul
loope
dec
cld
push
adc
push
loop
inc
shl
stos
test
aas
xchg
pusha
sahf
ja
rcr
pop
sbb
(bad)
movs
in
loopne
cmp
jae
and
push
enter
ror
outs
call
rol
in
clc
cmp
enter
imul
jl
les
js
mov
add
push
pop
cmps
xor
jmp
lods
mov
ret
mov
jecxz
in
mov
cwde
dec
sub
mov
(bad)
ret
add
push
adc
test
lahf
dec
sub
popf
rcl
sbb
(bad)
je
rcl
imul
sbb
push
push
push
ror
push
and
ret
outs
adc
cli
aas
scas
inc
lahf
push
fcom
dec
and
call
mov
adc
sub
mov
imul
shl
imul
pop
in
inc
or
sahf
in
jmp
sbb
inc
sbb
cmps
cdq
fcmovnbe
cmps
pop
mov
adc
pop
inc
cmp
dec
out
cs
retf
mov
test
ror
mov
push
adc
cdq
mov
movs
sub
push
int3
lahf
push
retf
mov
sub
sub
retf
out
push
or
pop
call
cmp
(bad)
test
loopne
pop
or
cmps
ror
push
lods
xchg
pop
imul
xlat
das
sub
mov
push
cld
push
sbb
(bad)
mov
cmp
or
lods
retf
outs
imul
mov
mov
jle
mul
jnp
xor
sar
pop
popa
shr
pop
pushf
retfw
cs
push
push
test
mov
cmp
imul
cld
out
es
shl
dec
daa
sub
pop
inc
lods
adc
into
pop
call
lea
pushf
push
(bad)
out
pop
pop
pop
sti
mov
sbb
push
mov
cld
jge
cmp
and
sbb
sbb
fdivr
adc
cld
sub
fnstenv
ror
aaa
call
adc
adc
push
call
jne
arpl
or
bound
sub
ror
sbb
sti
jae
shl
rcr
xor
push
iret
inc
pop
(bad)
cdq
push
fsubr
xor
repz
ja
push
call
add
(bad)
adc
retf
dec
push
ins
call
xchg
retf
xchg
cld
(bad)
jo
pop
imul
mov
inc
add
xchg
pop
add
cwde
sbb
push
mov
in
or
pop
add
jbe
test
jb
clc
pushf
push
mov
mov
push
inc
sub
mov
mov
lock
xchg
and
rcl
add
mov
sbb
stos
les
sbb
push
mov
push
imul
icebp
cmp
cmp
mov
jns
add
sbb
push
push
test
xlat
jno
xchg
dec
rcr
mov
add
mov
xchg
xchg
mov
mov
jg
add
inc
imul
scas
pop
adc
push
push
imul
mov
jb
jmp
jno
xchg
adc
lock
sahf
repz
sti
sub
mov
push
sbb
shl
pop
dec
mov
js
rol
leave
in
call
sbb
fwait
xchg
test
add
push
push
call
jg
jge
pop
jp
in
fs
and
ficom
jnp
jb
shl
(bad)
adc
repnz
adc
cld
pop
mov
cmc
es
adc
inc
popf
cwde
cld
es
fld
ret
nop
test
out
ror
rol
inc
inc
je
adc
mov
jne
bound
retf
addr16
neg
jecxz
sbb
mov
add
fwait
xor
push
mov
je
cmp
inc
xor
mov
fwait
cmps
mov
jo
adc
and
loope
in
adc
xchg
xchg
pop
inc
cld
aad
lock
int
xor
cmp
imul
outs
sub
ja
sub
xlat
fwait
mov
icebp
je
rcl
xchg
mov
or
(bad)
add
pop
push
loope
mov
dec
stc
or
xor
enter
(bad)
aam
mov
pop
add
jmp
push
lods
pop
test
lds
in
cld
nop
in
mov
gs
jmp
dec
xor
js
mov
in
repz
rol
arpl
lahf
mov
gs
xchg
sbb
adc
cmp
pop
ins
xchg
jns
sbb
jno
js
sub
or
fild
sbb
in
arpl
push
jae
dec
jmp
adc
popf
mov
sbb
xchg
pop
jge
pop
dec
jmp
movs
int3
sti
(bad)
mov
mov
(bad)
cld
fwait
scas
aam
aam
sub
jg
pop
and
pusha
pushf
ret
int
out
pop
pop
fidiv
dec
aas
sub
xor
out
cmp
aam
addr16
outs
jmp
sbb
cmp
fucomi
nop
push
mov
jp
cs
inc
push
dec
imul
ins
fs
push
adc
and
cwde
stos
sub
dec
outs
clc
mov
push
jb
push
pop
call
pop
std
imul
rcr
cmp
adc
ins
bound
int
movs
pusha
sub
xor
and
nop
rcr
sbb
cmp
rcr
call
xchg
imul
pop
popa
jae
xor
xor
push
jge
pop
addr16
inc
jns
(bad)
sar
adc
and
cld
mov
sti
sub
jnp
dec
(bad)
pop
test
dec
aaa
xchg
sbb
xor
push
sbb
sbb
push
fcomp
sbb
push
inc
adc
fld
mov
mov
adc
adc
test
js
sbb
dec
lahf
pop
fmul
or
mov
in
pop
nop
(bad)
mov
add
lea
push
ds
pusha
and
inc
retf
fadd
push
movs
pushf
out
jno
xlat
adc
and
cmp
jbe
push
inc
call
push
mov
out
mov
test
or
cld
ins
push
test
mov
and
sub
push
pusha
sar
pusha
daa
lock
sbb
arpl
retf
aas
mov
(bad)
fisub
out
and
pop
add
mov
stc
and
das
and
mov
bound
dec
push
mov
(bad)
ins
sub
mov
jo
outs
mov
ins
lods
mov
aam
fisttp
nop
in
retf
xchg
and
sbb
bound
jmp
pushf
sub
stos
sbb
pop
jge
pop
jp
jmp
int3
imul
pop
dec
les
bound
(bad)
pusha
test
dec
pop
xchg
inc
push
mov
push
mov
retf
scas
cs
aam
adc
(bad)
in
imul
mov
retf
loop
jb
sub
jmp
mov
sahf
fst
popf
push
ins
cld
cmp
in
jnp
or
sub
int3
stos
(bad)
loop
retf
cmp
pop
nop
out
or
(bad)
adc
inc
pop
fs
imul
iret
mov
retf
lods
out
push
scas
push
inc
adc
ins
leave
call
imul
dec
jno
add
ret
sub
loopne
pop
(bad)
push
scas
push
and
pmuludq
push
das
dec
rol
int
stos
xchg
xchg
bound
add
jb
mov
mov
adc
and
aad
mov
push
ins
cmp
or
repz
xchg
xchg
loop
cld
mov
add
add
sub
ja
in
in
in
push
sbb
retf
sbb
push
cwde
popf
cli
ins
mov
and
test
shr
pop
xchg
push
pop
jecxz
not
or
ja
xor
ret
mov
jmp
arpl
xchg
fisttp
inc
xchg
sti
cmove
xchg
sbb
dec
cmp
adc
lods
outs
mov
imul
sbb
adc
push
push
(bad)
mov
cdq
and
shr
std
jl
sbb
outs
xchg
xchg
pop
mov
mov
sbb
sub
xchg
and
jnp
xchg
stos
or
addr16
adc
ins
cld
cmp
push
push
inc
fsubr
dec
in
stos
in
sbb
add
push
ins
ret
xchg
imul
retf
test
inc
arpl
or
push
call
sbb
pusha
cdq
test
add
jns
pop
retf
jl
mov
cmps
mov
scas
test
pop
lods
inc
adc
loop
jge
xchg
sbb
jno
pop
add
out
jl
push
into
pop
cmp
and
push
(bad)
je
push
pop
lahf
fistp
mov
daa
(bad)
and
and
aam
sub
in
out
cmp
adc
push
xchg
or
fiadd
jmp
cmp
mov
cwde
push
mov
jae
out
mov
loope
xchg
xchg
jmp
inc
jle
pop
mov
pop
test
or
push
sbb
ds
mov
nop
fdivr
xlat
push
pushw
add
mov
push
je
sti
sbb
xchg
xor
ins
nop
cmp
sbb
and
jmp
int
mov
xchg
(bad)
or
jmp
or
jge
data16
pop
or
inc
cmp
pop
inc
or
mov
adc
pop
inc
cmp
sbb
jge
pop
call
sbb
jmp
dec
femms
sub
sar
mov
dec
fcomp
iret
nop
lahf
sub
rcr
mov
mov
movs
outs
nop
push
cmp
popf
retf
loopne
ret
cmp
sti
push
push
shl
mov
call
add
xor
and
mov
mov
cmc
pop
mov
fimul
dec
sub
jmp
pop
sub
and
aas
outs
mov
sbb
(bad)
add
and
fcom
out
fbstp
into
mov
sbb
or
jmp
pop
je
push
inc
popf
push
cmps
jg
cmp
fbld
fwait
int3
fxtract
pop
retf
pop
rcr
fwait
sub
mov
rcl
js
pop
mov
pop
pop
pushf
pop
push
cwde
data16
ret
sbb
jmp
adc
enter
scas
jae
inc
or
push
fdiv
bound
cli
call
dec
push
dec
pop
aas
popf
inc
daa
inc
mov
into
inc
xchg
fbld
sbb
sti
mov
fs
pop
wrmsr
push
dec
pushf
mov
popf
icebp
mov
sbb
push
cmp
(bad)
xlat
stos
movs
dec
repz
fcomp
ins
sub
xchg
rcr
xchg
ins
sahf
xor
popf
inc
ins
add
inc
in
add
test
movs
mov
mov
mov
pop
sub
or
push
xor
push
pop
push
hlt
push
pop
jbe
mov
sti
push
mov
ins
imul
jmp
sbb
cli
jl
movs
fucom
call
sbb
adc
fnsave
pop
in
fwait
mov
or
push
jl
enter
cmp
mov
xchg
hlt
pop
pop
ins
imul
cmp
cld
pop
out
fwait
jmp
sti
adc
fild
push
jmp
movs
and
jmp
fcom
cs
cmps
push
mov
sti
stos
and
test
popf
xchg
in
or
pop
bound
ins
test
jge
mov
lods
pop
sbb
push
bound
jge
mov
sahf
sbb
ficom
popf
(bad)
int3
scas
(bad)
sub
(bad)
scas
adc
sub
jg
pop
sub
adc
in
aam
sub
jg
pop
leave
in
leave
cmp
pop
add
push
fstp
jp
and
cmp
mov
push
jge
pop
test
jmp
int3
push
mov
lods
inc
mov
call
sub
sub
(bad)
in
fsubr
lock
add
and
sub
dec
add
jmp
pop
cmp
stos
xchg
sub
fisub
fld
(bad)
fucom
cmp
(bad)
cmc
stos
sbb
lea
mov
popa
sahf
pusha
sbb
add
(bad)
popf
imul
cmp
ins
out
xchg
adc
or
mov
(bad)
sub
fcmove
(bad)
dec
xchg
cdq
dec
jnp
jle
mov
popf
out
xchg
(bad)
lods
inc
aad
lds
push
clc
movs
sbb
xchg
cmc
jge
test
dec
push
add
aam
pop
cld
retf
or
scas
jg
aam
sub
xor
xchg
xchg
jns
add
and
xchg
(bad)
out
xor
push
dec
jg
push
fadd
adc
mov
nop
cmp
inc
xchg
xchg
dec
mov
inc
dec
pop
inc
xchg
test
or
jg
dec
daa
std
call
loopne
das
inc
es
dec
lock
cwde
sbb
fadd
inc
ss
std
inc
jp
stc
jle
clc
cmp
scas
jge
cwde
sbb
push
add
mov
gs
je
ds
inc
add
psubd
(bad)
idiv
loop
out
in
xor
fidivr
sbb
gs
sbb
retf
popf
adc
pusha
push
bound
ins
sub
arpl
pop
push
mov
fnsave
pushf
fisubr
adc
ins
jnp
cmp
pop
push
mov
dec
pop
ret
pop
cwde
sbb
pop
outs
pop
mov
pop
ins
pop
jmp
sbb
fs
sbb
jmp
dec
(bad)
out
adc
pop
inc
add
push
aad
retf
push
jmp
sub
rol
cmp
ins
mov
push
jbe
mov
out
push
mov
loope
daa
scas
cmp
js
in
add
push
and
cmp
jbe
mov
or
jns
inc
dec
sbb
jp
xor
lahf
jecxz
int
jl
nop
cmps
xchg
mov
xor
jg
push
mov
repz
test
inc
jge
mov
xor
jo
sbb
mov
mov
(bad)
lea
and
retf
shr
jl
adc
dec
dec
into
iret
test
and
dec
cmp
(bad)
mov
js
add
xor
fwait
addr16
push
sub
das
cmp
lahf
sbb
iret
fisubr
xchg
rcr
push
or
xor
push
(bad)
fldenv
scas
aad
std
bound
popf
xchg
xchg
outs
lea
ins
das
sub
sahf
adc
adc
push
hlt
sbb
cmp
add
pushf
mov
add
mov
(bad)
pushf
dec
enter
lods
(bad)
mov
dec
mov
mov
sahf
sbb
sbb
pop
lds
and
add
mov
push
retf
sbb
ja
(bad)
std
jge
add
xor
test
ins
inc
mov
push
or
xchg
pop
jo
jmp
icebp
fs
lods
ret
lahf
div
sar
stos
or
jnp
inc
or
pushf
add
cmps
cli
es
lods
sbb
mov
int3
xor
xchg
(bad)
dec
pusha
int3
adc
ret
jge
push
test
fiadd
or
mov
jge
fistp
sbb
inc
xor
inc
jae
adc
jmp
aaa
outs
jp
add
and
pop
push
fwait
xchg
jbe
and
mov
dec
inc
mov
cmp
aad
pop
mov
push
pop
movs
add
fsub
mov
gs
out
aaa
sbb
pushf
test
mov
test
xchg
push
add
add
mov
jae
ds
add
repz
adc
aam
inc
aas
or
(bad)
fsubr
jo
dec
test
pop
jg
cmp
rcr
outs
data16
movs
jae
adc
adc
test
sub
inc
idiv
ds
fwait
inc
push
mov
int3
push
add
inc
jne
call
imul
pusha
pop
psubb
loop
dec
push
mov
adc
ds
inc
loopne
dec
sti
push
ret
adc
xchg
pop
jo
add
pop
sbb
in
jb
sar
dec
or
xchg
in
jmp
daa
aaa
call
jb
sbb
pop
pop
sub
das
cdq
pop
add
cmp
int3
fiadd
ja
(bad)
pop
push
jp
jo
sub
cmp
xchg
sbb
xor
add
dec
xor
scas
jb
jg
movs
out
dec
stos
repz
lods
lsl
test
retf
movs
rol
call
fisub
dec
and
inc
mov
frstor
int3
outs
push
dec
sbb
ds
pop
sbb
xchg
adc
js
jl
sub
jmp
test
add
cmp
push
and
pop
cmp
outs
sti
pop
add
sbb
(bad)
call
mov
jo
adc
ins
adc
fisubr
pop
repnz
mov
(bad)
cdq
loopne
into
popf
adc
pop
sbb
mov
addr16
or
sti
inc
inc
push
icebp
icebp
sar
cmps
pop
mov
sub
retf
or
popa
jbe
rol
popa
cmp
les
movs
pop
add
mov
cli
loop
push
and
pop
cmp
out
int3
jp
sub
cwde
jmp
loop
pop
test
and
loop
inc
out
dec
enter
fadd
(bad)
push
push
outs
add
loop
push
pop
push
lds
mov
adc
outs
inc
sbb
sub
jbe
les
jge
sbb
retf
mov
inc
xor
or
(bad)
dec
cmp
jo
dec
retf
fstp
gs
test
sbb
sub
inc
fs
mov
lea
sbb
pop
(bad)
xchg
and
push
inc
push
in
mul
out
repz
(bad)
mov
mov
inc
call
dec
xor
rcl
fimul
repnz
cmp
int
fldcw
fcmovu
movs
(bad)
dec
outs
cli
int3
fidivr
mov
mov
sbb
push
cmp
push
inc
aad
call
sub
loope
cmp
fwait
add
daa
sbb
arpl
test
mov
sbb
sub
and
popa
pop
fst
gs
ins
jo
mov
dec
pop
or
aaa
sahf
mov
data16
mov
outs
push
sbb
cmp
jg
dec
jae
mov
adc
add
xor
loopne
and
push
inc
sub
in
loope
xor
jae
adc
fisub
dec
pop
pusha
push
and
adc
dec
mov
jo
aas
cmp
or
add
pop
pop
add
je
out
or
fidivr
xor
sub
lds
xlat
test
xor
loope
fs
jnp
xchg
pop
push
sbb
jae
fwait
or
sub
sbb
pop
das
in
ficomp
jl
cmps
(bad)
(bad)
fisubr
sub
add
pop
gs
and
jne
and
cli
(bad)
adc
mov
rol
dec
inc
xchg
push
sub
adc
add
pop
add
dec
sti
stos
fwait
mov
imul
mov
sbb
inc
push
in
fbld
and
les
ins
or
loopne
(bad)
pushf
mov
inc
jno
cdq
sbb
cmps
enter
jl
in
test
push
arpl
mov
xor
sub
mov
push
mov
icebp
iret
repz
lods
add
xchg
les
inc
ret
mov
cmps
or
aad
cli
ja
push
aad
(bad)
dec
(bad)
ins
jge
nop
mov
cs
xor
pop
ss
and
ret
pusha
ret
dec
mov
push
movups
dec
inc
aaa
add
push
xchg
pop
push
sti
out
hlt
mov
mov
aas
dec
cld
add
sbb
cmps
data16
inc
and
jo
sbb
sub
not
mov
popf
sub
mov
imul
push
out
xor
mov
xlat
cwde
(bad)
movs
ficom
jl
sti
ror
scas
aam
and
push
outs
imul
daa
test
add
jb
mov
add
xchg
ret
adc
adc
out
(bad)
popa
test
cmp
mov
cmp
sub
xor
les
mov
inc
jns
mov
adc
lea
leave
pop
pop
je
jg
inc
adc
or
inc
into
cmp
inc
hlt
cmp
xchg
fdivr
push
and
icebp
rep
cmp
in
fidivr
in
and
hlt
inc
add
(bad)
lock
aam
(bad)
jecxz
fld
jo
push
out
mov
sbb
add
push
test
cmp
jns
dec
cli
inc
jmp
or
and
pusha
jo
hlt
ins
ins
cmc
movs
add
shr
(bad)
fimul
xchg
pusha
xor
daa
xor
or
daa
add
aad
ret
rol
add
das
xor
jecxz
or
push
or
inc
call
popa
sub
jo
mov
test
lea
xor
fnstsw
inc
xor
ret
jo
ret
ret
pop
sbb
loopne
imul
cmp
ret
data16
push
sbb
arpl
fidivr
clc
pop
add
jae
iret
and
dec
(bad)
out
and
or
mov
pop
inc
test
xor
mov
mov
loope
pushf
inc
fmul
sub
in
and
cmp
mov
test
jae
xchg
xor
lds
js
call
or
ficomp
ret
jge
or
jmp
xchg
pop
jae
movs
fnclex
mov
push
mov
jl
movs
and
data16
pop
(bad)
retf
imul
test
(bad)
ja
sub
pop
mov
mov
mov
les
or
pop
movs
mov
pop
lods
add
stc
cmp
int3
aas
xor
add
std
add
fsubr
sbb
cwde
nop
and
shl
jo
les
popa
in
inc
mov
mov
ins
mov
and
fiadd
stc
cwde
mov
lods
inc
cli
jb
ins
cmps
sbb
je
xor
pop
fidiv
push
stos
pop
imul
and
sbb
inc
dec
jo
or
and
int
cmc
xchg
(bad)
dec
mov
jp
inc
or
pop
fcmovu
cmp
aaa
es
or
jae
imul
xor
iret
inc
retf
jns
lea
ror
and
in
(bad)
hlt
aad
in
xchg
jge
jnp
and
mov
mov
in
rol
inc
mov
push
jns
retf
cmp
xor
js
fcom
lods
test
inc
aam
mov
iret
loopne
and
jo
sub
mov
or
inc
cmps
int3
cld
mov
jne
jg
xchg
fimul
retf
pop
(bad)
call
aad
jb
jb
fcomi
sub
out
pop
imul
aad
test
push
test
pop
push
js
mov
xchg
lods
push
je
mov
or
in
push
and
les
jae
mov
sub
loopne
jno
inc
dec
pushf
mov
ficom
std
adc
and
add
(bad)
rcl
in
shl
xor
inc
stos
adc
cmp
sub
mov
pop
fnstenv
test
push
pop
loopne
mul
out
pop
jo
ret
mov
scas
mov
dec
dec
mov
shl
fsubr
inc
add
xchg
aam
lock
cmps
jp
jle
and
mov
xor
or
inc
xchg
cmp
retf
test
cmp
je
stos
push
mov
das
leave
xchg
add
sahf
stc
retf
mul
sub
fdiv
mov
xor
jns
xor
ret
mov
adc
(bad)
js
(bad)
cmc
adc
das
scas
sbb
loopne
shl
xchg
ret
xlat
inc
mul
scas
ret
jae
dec
popa
mov
adc
outs
dec
movs
inc
repz
fidivr
inc
(bad)
push
add
xor
stos
outs
jg
cli
int
add
retf
mov
dec
fisttp
jge
rol
add
push
mov
and
cmp
mov
jge
xchg
mov
enter
pop
pop
sar
pop
mov
xchg
int3
call
inc
int3
out
xchg
mov
mov
iret
test
psraw
cmps
add
lahf
test
push
fcom
mov
sbb
pop
push
or
fist
jp
dec
pop
pushf
pusha
jo
push
push
mov
add
push
fild
enter
test
jnp
gs
or
mov
push
dec
jp
push
imul
aad
aaa
cmp
mov
jmp
popa
fld
pusha
test
ja
xor
and
mov
inc
add
mov
jg
dec
pusha
leave
mov
(bad)
in
cmp
add
pop
lea
ds
mov
daa
sbb
shl
and
cmp
dec
jmp
cmps
dec
xchg
fimul
add
repnz
sub
inc
inc
aad
loope
scas
fiadd
push
pop
adc
inc
jp
movs
stos
je
push
loope
or
icebp
xlat
or
mov
or
in
fisubr
mov
sub
nop
dec
pop
inc
ror
add
xchg
jle
inc
sar
fiadd
push
mov
inc
mov
add
cmps
aaa
or
push
jmp
jo
add
out
sub
or
mov
push
fdivr
jp
xchg
mov
je
inc
pop
popa
les
adc
and
icebp
out
pop
fcomp
pop
add
adc
sub
xchg
fldcw
popf
je
dec
sahf
or
add
ins
xor
cwde
loopne
push
xchg
sub
and
mov
pop
and
popf
xor
rol
scas
xor
fbstp
sbb
add
test
sbb
mov
mov
mov
scas
sub
lea
dec
dec
sub
jns
push
add
loope
sub
out
(bad)
fld
cmp
retf
xchg
xchg
mov
push
pop
rcl
inc
(bad)
in
ror
xchg
or
jb
inc
ret
in
and
ins
pushf
outs
jle
pushf
push
aas
sbb
sbb
push
add
(bad)
ror
int3
mov
ret
adc
dec
mov
jb
outs
jns
inc
rol
test
xor
cmp
loop
sub
dec
or
mov
mov
ficomp
iret
jg
mov
inc
jge
in
add
mov
lods
lahf
ds
xor
call
test
push
movs
ins
push
add
ins
into
int
xchg
inc
fistp
repz
cmp
xchg
xchg
push
cmp
out
int
aad
rcr
push
and
shl
push
inc
dec
inc
sbb
sbb
outs
ins
fldcw
xchg
mov
(bad)
int
in
idiv
adc
mov
pop
jmp
out
xchg
mov
mov
adc
fsub
jmp
paddb
sar
dec
pop
pop
adc
or
mov
push
ja
nop
ret
xchg
call
xchg
(bad)
push
add
mov
cld
mov
push
test
rol
mov
jecxz
fmul
imul
fcmovu
cmp
aaa
(bad)
and
mov
ins
pop
leave
xchg
stc
out
mov
mov
pop
ficom
xchg
mov
pop
mov
pop
ds
les
pop
mov
sbb
movs
dec
jbe
fcomp
loop
pop
hlt
jae
add
sub
cli
and
stos
xchg
out
imul
shl
packssdw
xchg
add
aam
or
fldenv
jne
sub
cmps
arpl
adc
dec
dec
pop
jb
shr
inc
out
int3
std
mov
add
or
(bad)
aam
xlat
stc
leave
lahf
pop
sbb
xor
and
data16
cmp
iret
pop
out
call
jae
pop
ror
jmp
sbb
pop
mov
addr16
adc
add
mov
dec
sbb
pop
loopne
push
inc
icebp
push
fidivr
inc
and
movs
fst
inc
cmp
repnz
adc
jmp
(bad)
gs
jecxz
inc
icebp
out
mov
jecxz
or
jo
cli
xor
ds
pop
add
cmp
outs
or
(bad)
inc
push
mov
sub
cli
lock
jno
bound
jg
pop
adc
cmc
sbb
sti
jb
push
adc
or
lahf
ds
cdq
ss
pop
scas
jae
mov
xor
adc
adc
fiadd
jno
mov
cld
and
pushf
push
call
pop
pop
xchg
stc
mov
inc
mov
stos
push
xchg
adc
jae
in
push
ds
aaa
and
inc
aas
sub
mov
inc
pop
sub
in
jo
nop
ficom
xor
repz
loope
cmp
inc
push
clc
sub
push
dec
cli
dec
jbe
bound
leave
fldenv
jo
ds
rol
repz
cs
adc
sub
jmp
xor
(bad)
xchg
in
inc
arpl
and
xor
pop
mov
(bad)
and
shld
mov
loopne
xchg
cmp
aas
fwait
jae
adc
xchg
dec
loope
mov
mov
xor
mov
add
in
adc
loopne
xor
jo
push
rcr
jnp
cmp
add
jge
mov
ds
jo
sbb
test
push
add
push
push
and
inc
mov
jg
out
and
in
push
daa
in
retf
mov
retf
fs
test
push
jae
mov
inc
adc
cmc
jle
jo
inc
imul
lock
push
and
shl
jmp
or
mov
inc
dec
inc
and
mov
dec
clc
out
in
loop
jns
fs
cdq
repz
push
cld
scas
adc
retf
push
jp
mov
dec
icebp
fistp
push
fdiv
test
mov
cmp
(bad)
nop
mov
xchg
or
lea
frstor
fiadd
pushf
push
xchg
add
jae
sti
pop
bnd
cmp
call
adc
jo
pop
test
cmp
pop
sub
fist
fimul
or
mov
int
jae
mov
test
xchg
hlt
pop
stc
fsub
sahf
cmp
or
inc
(bad)
add
cli
cdq
jle
popf
ret
add
or
pop
imul
push
xchg
mov
xchg
add
pop
test
jecxz
stc
jae
mov
xchg
mov
or
test
test
cmc
rcr
cli
inc
stc
pop
jmp
lods
shr
sub
xor
mov
jge
jo
push
or
push
sbb
mov
scas
or
dec
sbb
pop
mov
shl
xchg
rcl
xor
dec
arpl
adc
xor
jl
stos
sbb
add
sbb
and
div
mov
ds
sbb
out
(bad)
inc
les
inc
jae
and
in
adc
mov
add
push
mov
push
pop
addr16
xor
adc
test
inc
fstp
mov
push
lods
movs
add
scas
test
xlat
fdiv
enter
out
and
add
cmps
xor
add
aaa
or
sbb
push
add
inc
and
add
mov
cdq
xchg
inc
adc
shr
sti
inc
cmp
pusha
sub
int
in
sar
mov
inc
push
addr16
imul
movs
jae
imul
jmp
sub
push
retf
pushf
shl
(bad)
cmp
add
loopne
inc
loopne
add
arpl
sub
out
popf
mov
adc
loop
clc
pop
test
call
adc
push
sbb
inc
inc
cwde
xchg
jo
dec
aas
les
(bad)
loope
shl
fmul
xor
stos
jge
movs
adc
dec
mov
add
ror
or
lahf
fdivr
repz
fmulp
mov
push
inc
ss
xor
cmp
sbb
not
jmp
dec
je
push
pop
iret
push
ins
cmp
imul
inc
data16
in
mov
push
add
jmp
fdiv
inc
lods
jge
xor
je
mov
test
xlat
sahf
pop
xchg
aas
cmc
gs
mov
xchg
mov
sbb
push
ja
(bad)
arpl
outs
mov
mov
test
inc
pop
sbb
mov
je
fld
cld
aam
jge
out
jb
fcmove
out
cdq
ficom
iret
addr16
mov
fiadd
in
and
push
xor
pusha
pop
stos
cli
pop
push
pop
pop
in
pop
test
push
in
sti
mov
aas
mov
fnsave
aad
ds
data16
aad
push
js
push
mov
jp
pop
js
inc
pop
and
jmp
fisttp
jge
pop
xor
and
iret
jg
les
xor
sar
jmp
vmovdqa
mov
push
ja
push
test
add
xor
xchg
dec
pop
jo
sbb
mov
ss
data16
inc
outs
pop
push
pop
fimul
test
imul
pop
and
adc
(bad)
sahf
or
sub
jge
mov
mov
ficom
cmps
mov
push
dec
push
push
stc
add
xchg
jge
sub
test
sbb
jb
ret
ss
mov
outs
and
lds
sbb
jo
jno
and
jmp
pop
cmps
fcmovbe
aam
push
inc
add
mov
(bad)
push
adc
inc
dec
cdq
int
jle
pop
push
outs
fisubr
(bad)
xchg
fisttp
movs
inc
pushf
sub
adc
jo
dec
lods
loope
aas
test
xchg
movs
inc
push
mul
push
out
fldenv
or
inc
inc
cmp
enter
js
add
rol
test
push
cmp
pop
ins
inc
cli
bound
inc
pusha
jge
xor
push
in
bound
loope
or
icebp
retf
ss
shl
pop
jp
push
add
stos
data16
adc
das
mov
jg
inc
rcl
mov
sbb
cwde
xor
jecxz
lods
lds
movs
pop
bound
add
fidivr
mov
shr
out
loope
pop
ins
xchg
ins
xchg
mov
fstp
adc
cmp
push
cs
mov
loopne
daa
out
sar
mov
add
jo
mov
sbb
xchg
xchg
sbb
inc
shl
(bad)
fs
jae
dec
cld
aad
cmp
das
fdiv
and
mov
sahf
sub
inc
ins
and
jae
mov
fist
movs
in
shr
cld
sub
test
xchg
pop
leave
mov
mov
adc
add
jo
lahf
inc
and
popf
popf
push
lea
je
cmp
inc
dec
jno
mov
sub
mov
outs
push
pop
fistp
call
fwait
mov
jo
jecxz
or
cli
fxch
mov
nop
aad
(bad)
push
cwde
(bad)
std
out
iret
inc
dec
mov
jae
push
mov
sbb
movs
cs
xlat
mov
pop
scas
cmps
xor
jnp
je
xor
dec
jmp
add
and
imul
addr16
dec
sub
mov
push
pop
push
xor
xor
(bad)
in
(bad)
xchg
shl
mov
add
(bad)
ret
or
mov
push
std
or
(bad)
add
cmp
hlt
sub
outs
cld
mov
add
(bad)
sahf
xchg
fcmovnbe
popa
ret
push
cmp
fidiv
dec
add
data16
dec
cmps
adc
loopne
int
loope
xchg
sbb
jp
pop
push
imul
popa
mov
movs
mov
call
xchg
inc
push
sbb
add
mov
adc
lods
dec
jae
dec
int
out
xchg
sti
add
pusha
mov
outs
mov
adc
enter
iret
pop
lea
out
mov
fidivr
ja
jno
aaa
add
call
and
jae
push
inc
push
dec
jno
xchg
xor
jae
ja
push
mov
add
sub
loop
add
fldcw
mov
nop
pop
(bad)
div
imul
je
nop
inc
mov
mov
les
loope
test
(bad)
push
xchg
add
pop
bound
push
jbe
fimul
rol
xor
adc
popf
xor
ficom
adc
push
jmp
mov
push
mov
add
cmp
gs
inc
sub
icebp
and
mov
inc
jl
enter
pop
iret
clc
fcmovu
xlat
jl
int3
push
dec
inc
std
push
jb
mov
leave
in
mov
stos
ins
pop
dec
jo
push
jg
fldenv
xchg
cwde
pop
int3
mov
les
fcmovb
shl
lods
(bad)
xor
cld
jo
fistp
adc
rcl
mov
addr16
loope
jmp
adc
push
pop
push
jp
in
ds
mov
sub
xchg
dec
repnz
jns
inc
test
add
xchg
(bad)
ror
mov
pop
retf
jb
adc
jo
or
and
test
cmp
push
ret
adc
repz
mov
stos
dec
fidivr
sbb
jecxz
clc
pop
icebp
xchg
int3
daa
mov
daa
inc
or
dec
add
ret
or
in
bound
add
and
inc
add
push
stc
dec
fimul
mov
push
vcomiss
push
fwait
loopne
xlat
retf
and
add
and
xor
or
pop
push
idiv
ins
stos
into
pop
jle
mov
popaw
mov
fstp
test
push
sub
mov
mov
mov
and
cmps
jp
fsubr
dec
pop
inc
xchg
lods
std
dec
ror
enter
je
push
loopne
das
xor
es
mov
adc
xchg
cli
imul
stos
in
push
add
cmc
sbb
jo
jp
call
enter
stc
and
shl
pop
add
and
or
sbb
(bad)
lock
pop
sbb
jmp
jb
add
or
rcr
sbb
jg
jb
add
xor
retf
shl
pop
jg
loop
fstp
aaa
xchg
hlt
jp
shr
mov
adc
das
inc
shr
xor
jae
xlat
cli
and
icebp
aad
jne
push
jecxz
pop
xor
cmp
and
(bad)
nop
push
aad
mov
ss
pop
and
imul
mov
add
cld
popf
cmps
sub
mov
ror
sbb
inc
fistp
in
call
sbb
add
cmps
imul
push
(bad)
cmp
add
outs
mov
xchg
out
sbb
push
call
cs
lods
jo
(bad)
ficomp
mov
lock
and
les
push
stc
std
clc
es
jb
mov
gs
gs
imul
outs
dec
popf
dec
sub
jae
and
jo
imul
retf
xchg
iret
pop
fisubr
cmp
jb
std
imul
clc
xchg
int
add
mov
mov
(bad)
loope
aad
cmp
pop
inc
inc
cwde
(bad)
mov
xor
out
mov
das
or
sub
pop
sub
out
xor
test
dec
or
ins
dec
loope
int
xchg
sbb
inc
add
jns
arpl
jle
pop
xchg
pop
xchg
movs
sbb
xchg
inc
xchg
cmp
dec
sahf
xor
pop
push
daa
repz
rcr
add
lods
jo
and
ja
mov
in
dec
jl
ret
in
push
xor
mov
push
add
cmps
mov
and
leave
mov
cmc
es
sbb
popf
push
retf
lock
fimul
sahf
or
shl
mov
lds
adc
sub
daa
pop
(bad)
shr
mov
fcmovb
dec
call
ror
test
(bad)
jb
inc
inc
arpl
dec
jae
out
cmp
(bad)
lods
out
shl
jne
sar
sbb
js
stos
pop
js
or
cmp
mov
retf
mov
and
push
outs
mov
push
jnp
dec
xchg
add
xchg
cmps
bound
cmps
lods
shl
rcr
mov
add
add
(bad)
daa
dec
daa
ret
pusha
outs
lods
sbb
lods
xchg
push
pusha
fdiv
mov
jo
in
pop
leave
outs
scas
xchg
sbb
fisubr
hlt
sub
mov
fs
aam
fisubr
push
ins
mov
jmp
mov
mov
dec
xchg
fisub
rcr
pop
add
xor
(bad)
pand
cmp
imul
imul
cmp
test
mov
mov
les
cli
push
inc
mov
ror
cld
jmp
fistp
inc
mov
shl
jo
sub
jmp
jo
shl
jne
fist
add
lds
and
push
mov
popf
jae
pop
mov
inc
lock
test
sbb
fidiv
cmovs
jne
mov
rol
retf
(bad)
add
ja
enter
cmp
xchg
(bad)
loop
loope
jl
loopne
push
dec
add
ss
add
leave
imul
xchg
pop
xchg
int
fiadd
movs
or
pop
(bad)
stos
xor
xlat
fnstcw
out
aas
adc
fwait
inc
xchg
popf
fsubr
inc
sub
jmp
std
xchg
(bad)
retf
mov
or
dec
push
das
cmps
adc
hlt
push
pop
jo
scas
nop
jmp
add
arpl
sub
icebp
xchg
fiadd
stos
cmc
sbb
mov
inc
aas
fdiv
sub
push
test
aaa
fbld
loope
mov
xchg
pop
dec
int
push
add
mov
call
mov
inc
dec
and
jmp
in
and
xlat
push
xor
test
inc
add
dec
push
popf
ficom
pushf
fstp
iret
(bad)
dec
sub
pop
inc
xchg
mov
fcom
or
jae
push
das
out
push
jo
jmp
sahf
bswap
mov
and
inc
into
sbb
test
and
jae
mov
push
pop
inc
test
inc
(bad)
mov
in
mov
ss
fimul
fwait
jecxz
cmp
fimul
and
or
leave
fcmove
and
shl
cdq
add
sbb
es
ins
jmp
adc
popa
mov
loopne
inc
mov
xchg
cld
cmp
sub
dec
imul
fisub
push
fwait
sbb
add
sbb
int
pop
bound
sub
ror
scas
fisubr
mov
jae
pop
push
mov
sbb
inc
sbb
adc
and
xchg
test
mov
pop
inc
push
(bad)
in
sub
adc
inc
mov
mov
bound
mov
dec
ret
sub
adc
mov
int
pop
pop
xchg
xchg
ja
call
arpl
mov
inc
call
xlat
xor
movs
lods
shr
add
lds
inc
fisubr
fadd
or
lahf
ficom
sbb
fisub
fs
xor
dec
mov
add
adc
mov
pop
dec
adc
sub
inc
in
fist
push
sbb
inc
xor
cld
stos
add
loop
(bad)
cld
jae
cli
(bad)
fcom
adc
push
adc
dec
test
pop
cmps
ret
pop
(bad)
cmps
or
out
popa
jbe
scas
ss
mov
ret
daa
sbb
or
loopne
jb
test
and
lahf
ins
out
inc
inc
xor
imul
and
add
adc
pusha
rcr
push
ficomp
ret
jmp
or
adc
sub
pop
and
xor
retf
push
jo
adc
sbb
jae
push
popa
(bad)
ror
cmp
xchg
pop
shr
inc
jle
rcr
loope
xchg
push
arpl
into
fild
jo
jle
inc
faddp
push
call
inc
les
out
pop
jbe
aad
in
sbb
stc
dec
mov
lock
ins
push
(bad)
ror
aam
add
cmp
outs
pop
shr
inc
js
jmp
cmps
mov
or
test
push
icebp
xor
fidiv
and
jmp
inc
jp
pop
fwait
adc
cdq
lea
clc
xchg
jo
xchg
pop
call
pushf
lods
imul
and
stc
jmp
add
retf
mov
cmp
add
aaa
and
inc
es
add
ficom
sub
mov
call
xor
retf
icebp
js
pop
xchg
mov
ds
inc
dec
jns
mov
stc
push
(bad)
(bad)
xlat
push
out
(bad)
xor
ret
add
push
adc
jb
or
mov
popf
js
push
lods
cmc
cmp
and
sub
sbb
call
xor
jns
mov
les
stc
std
dec
jge
mov
fwait
sbb
stos
icebp
xor
push
into
xor
pop
cli
leave
xor
enter
and
fistp
jmp
mov
adc
add
inc
shl
inc
ret
jb
fistp
dec
iret
pop
push
test
clc
and
push
ins
popa
fidivr
iret
sbb
xor
or
test
cmp
cdq
leave
mov
and
add
fadd
mov
out
mov
ret
add
or
ins
(bad)
shl
xchg
inc
popf
mov
inc
int3
or
mov
inc
stos
stc
popa
mov
repz
and
and
std
aad
adc
mov
pop
adc
aas
loopne
sbb
rol
mov
add
and
sub
mov
mov
pop
jne
ins
inc
xor
xor
cli
cmp
stc
arpl
mov
add
mov
shl
repnz
sti
scas
ret
gs
cdq
in
or
icebp
dec
jae
pop
xchg
sbb
jbe
jns
and
inc
or
jae
aam
lahf
es
or
fcomp
ficom
int
cld
xlat
add
inc
hlt
jno
(bad)
push
jo
dec
inc
xchg
push
test
leave
cs
ins
in
stos
popf
xchg
jmp
jmp
inc
stos
sbb
bound
and
popf
lods
mov
xchg
inc
shr
push
push
fistp
daa
mov
inc
xchg
mov
xchg
cmc
jle
cmp
stos
cmp
hlt
fwait
cs
add
sahf
jmp
test
jb
mov
retf
das
add
retf
jbe
mov
nop
sub
pop
ins
jnp
int
out
imul
adc
jo
rcr
lea
cmp
jbe
mov
cmps
test
enter
push
in
mov
stc
arpl
mov
(bad)
rep
arpl
fild
push
ins
(bad)
push
fnstcw
fld
mov
lds
sti
iret
call
xchg
into
jbe
jecxz
pop
push
mov
inc
push
imul
push
jmp
int3
ja
inc
xchg
pop
jecxz
cld
cmp
jle
add
and
push
pop
inc
or
pop
icebp
test
ins
mov
jmp
xchg
mov
cld
pop
pop
out
jmp
xchg
loop
cld
mov
or
add
sub
jg
aaa
inc
test
dec
sub
popf
dec
ins
adc
push
xor
ds
add
pop
repz
jg
pop
out
in
mov
mov
shl
(bad)
popf
nop
(bad)
jmp
mov
sahf
scas
dec
popf
sub
test
push
jecxz
cld
jnp
dec
sahf
aam
sub
in
jecxz
inc
pop
or
push
lahf
popf
call
bound
in
xchg
xchg
lea
inc
test
dec
sub
popf
dec
ins
adc
push
xor
ss
jmp
pop
fcomp
pop
sahf
in
mov
adc
mov
dec
fwait
(bad)
call
pop
fsubr
xchg
arpl
xor
pop
lods
push
adc
sub
in
(bad)
pop
xor
push
cmps
popf
lock
sbb
pop
cwde
xchg
bnd
pop
sahf
das
jmp
int3
xor
cld
imul
sub
jg
pop
(bad)
imul
arpl
popf
xchg
cmp
jge
pop
outs
sub
int3
mov
jmp
push
ins
cwde
cmp
pop
mov
jnp
xor
mov
adc
cmp
sbb
aam
sub
arpl
xchg
pop
mov
pop
or
push
lahf
popf
aam
mov
arpl
push
jge
pop
repnz
pop
int3
das
mov
iret
loop
cld
shr
sub
jg
pop
xor
jnp
(bad)
lea
sahf
jg
popf
call
xchg
cmps
jge
pop
inc
sti
jmp
mov
cwde
nop
xchg
lea
dec
test
dec
sub
test
cwde
int
jnp
mov
push
add
cmp
cs
rcl
xchg
adc
inc
jl
and
mov
or
sbb
stos
das
mov
adc
aam
call
imul
mov
pop
pop
push
retf
pop
(bad)
and
rcr
sar
cvtdq2ps
fdiv
data16
iret
jmp
lock
jle
jae
sar
sbb
push
mov
out
jae
push
sub
xor
je
ficomp
mov
push
push
aam
sar
lods
je
aad
add
adc
push
cmp
xlat
jb
xchg
call
int3
(bad)
mov
dec
push
inc
cmp
je
ffreep
gs
fneni(8087
dec
sbb
(bad)
xlat
cld
mov
cmp
in
jnp
retf
lahf
cli
mov
pushf
aas
fidivr
aad
repz
hlt
sbb
xlat
pusha
push
fnsave
retf
xor
push
int
inc
pop
xchg
sub
arpl
pop
jmp
inc
fnstsw
mov
fmul
jp
shr
xor
push
ins
xor
pop
mov
cmp
xchg
js
push
ins
mov
out
not
dec
mov
out
sbb
addr16
fwait
and
sahf
pop
cwde
aas
shl
add
popf
ret
lods
rol
xchg
xchg
dec
sbb
outs
arpl
cmp
pop
bound
(bad)
push
daa
inc
mov
mov
push
js
retf
xchg
xchg
dec
pop
or
call
aam
mov
fisttp
bound
retf
cmp
movs
sbb
or
sti
sti
jmp
push
adc
xlat
mov
(bad)
enter
fsub
and
aas
xchg
fwait
sub
sbb
aas
lahf
sub
adc
pop
xchg
test
ins
cs
inc
sti
loope
bound
test
std
dec
jmp
or
movs
and
iret
cdq
adc
in
mov
pop
xchg
enter
retf
bound
sti
sub
mov
adc
lock
mov
movs
ins
push
ds
lods
or
fistp
cld
loop
arpl
mov
mov
xchg
push
jl
fcmove
push
call
cmp
cmps
dec
pop
mov
je
sub
imul
ins
movs
sub
adc
push
dec
sub
pop
lahf
scas
mov
scas
mov
ror
dec
cmps
fidiv
cwde
call
in
ins
sti
movs
xchg
push
arpl
xor
cmps
ficom
call
clc
inc
fisttp
push
pop
(bad)
pushf
inc
cld
cmp
pop
movs
mov
cmp
fstp
jmp
call
pop
push
ins
add
adc
retf
sar
daa
in
mov
fimul
leave
ror
mov
cmp
jl
retf
lock
shr
pop
sub
pop
sub
aaa
ret
shl
push
imul
neg
pop
clc
ss
arpl
ficomp
and
ja
pop
adc
dec
jo
ret
mov
nop
mov
sbb
cmp
in
jg
fisubr
xchg
pop
dec
sbb
inc
call
sbb
(bad)
xchg
xor
jle
mov
adc
retf
mov
and
mov
bound
add
xchg
clc
out
int
dec
mov
fcomp
lods
ror
xchg
nop
dec
sbb
cmp
in
sahf
cmp
fist
inc
xchg
es
arpl
(bad)
(bad)
sar
ins
fwait
push
fiadd
movs
sbb
shr
ins
jnp
repz
dec
pop
jecxz
adc
mov
add
not
dec
and
ret
dec
call
push
ins
pop
loope
dec
xchg
imul
xor
mov
shl
mov
fwait
loop
std
stos
loop
pop
push
push
jp
js
push
sub
push
dec
pop
addr16
xchg
jecxz
mov
xchg
sub
ds
mov
loopne
push
mov
jns
or
adc
in
pop
mov
xchg
xchg
fisttp
ds
clc
mov
and
xchg
les
mov
pusha
loope
xor
int3
mov
ret
loopne
jecxz
js
popf
add
jmp
shr
jl
stos
neg
enter
je
in
dec
(bad)
ja
mov
into
pop
retf
adc
xchg
jmp
into
push
jae
retf
mov
sbb
retf
imul
rcr
jmp
outs
sub
jl
sub
push
sub
rcl
push
pop
xchg
cmp
test
push
inc
(bad)
retf
adc
ret
mov
dec
mov
dec
mov
addr16
fdiv
loope
fisttp
pop
fidivr
cmc
cld
pop
test
les
das
cwde
or
add
sti
mov
push
mov
(bad)
in
adc
cld
mov
or
push
ror
mov
in
mov
ror
or
sbb
sbb
jbe
loopne
push
iret
movs
jo
test
std
fwait
sar
scas
(bad)
retf
out
add
jge
lea
mov
es
in
push
test
int
mov
xor
shl
rol
lock
neg
sub
repz
jae
repnz
aam
lahf
jb
frstor
pop
and
retf
mov
sbb
mov
outs
jecxz
cld
push
jno
call
inc
std
pop
cmp
cs
or
int
(bad)
pop
cmp
and
mov
jle
mov
hlt
leave
jge
(bad)
sti
movs
sahf
sub
jnp
cmp
div
repnz
xor
jle
ins
shl
lahf
dec
int3
js
pop
enter
rcl
adc
push
fld
mov
fcomp
repz
in
mov
inc
cmp
shr
sub
cmp
adc
ins
mov
push
(bad)
adc
xor
mov
xlat
jmp
push
jmp
pop
mov
adc
int3
mov
jmp
add
lahf
xor
pop
dec
ja
nop
sahf
sub
ret
pop
xchg
pushf
movs
shr
aam
adc
(bad)
loop
pop
pop
xchg
sbb
push
xchg
adc
sbb
fisub
call
push
xor
jnp
or
adc
(bad)
jmp
cmp
retf
push
sub
(bad)
sub
sub
loop
pop
mov
repz
pop
sub
repz
cwde
jp
lods
dec
adc
and
xchg
stos
cmp
retf
adc
pop
adc
or
jecxz
ss
int
sbb
cmp
cmp
mov
xchg
ret
lods
mov
scas
sub
cli
jl
pop
or
mov
push
int
and
pop
sbb
jp
inc
imul
xchg
les
jmp
jmp
(bad)
lds
sub
pop
sub
or
sbb
cmp
lods
in
mov
cmps
test
repnz
fimul
xor
add
fwait
lahf
ja
ja
call
push
(bad)
cmp
imul
(bad)
arpl
cmp
adc
mov
inc
jae
retf
fcomi
mov
loop
cmp
mov
test
mov
sbb
mov
sub
ds
ins
iret
je
push
adc
mov
jmp
mov
sbb
push
out
iret
test
stos
or
cmp
retf
cmp
push
jmp
out
and
movs
repz
or
cmp
ins
dec
not
cmp
ret
cmp
retf
fwait
xchg
lock
aam
mov
enter
cmc
dec
in
push
cmp
mov
and
xlat
mov
push
lahf
and
mov
xchg
shl
or
xchg
inc
repnz
ins
add
jl
pop
in
pop
jmp
int3
adc
aam
fbstp
jle
inc
ret
lahf
and
or
fwait
adc
les
and
imul
fstp
sbb
and
mov
fldcw
cmp
shr
addr16
fbstp
sbb
dec
ins
sub
dec
sbb
add
dec
adc
pop
inc
dec
ror
push
inc
scas
sbb
pop
lock
sbb
pop
sbb
dec
into
(bad)
sub
mov
dec
rcr
push
out
arpl
aam
clc
sub
(bad)
mov
rcl
adc
aad
mov
rcl
xor
(bad)
mov
rcl
push
sub
(bad)
mov
ror
test
dec
inc
lea
cmp
cmp
jae
inc
retf
sbb
fldcw
shr
mov
add
cmps
rcl
or
ds
mov
rcr
retf
cmp
stc
jg
rcl
inc
(bad)
adc
or
sbb
cli
jge
pop
mov
addr16
ja
fs
ret
cld
ret
scas
pop
mov
iret
shl
add
push
iret
sahf
icebp
mov
jge
push
sahf
ret
pop
ins
push
cmp
sbb
fxch
in
inc
in
sbb
retf
repnz
adc
daa
ret
ret
popf
(bad)
dec
test
dec
inc
lea
leave
in
shr
fwait
pop
mov
jmp
(bad)
cmp
or
push
inc
sbb
ror
imul
jg
jnp
push
fs
cld
fs
rcl
jae
pop
cli
push
rcr
loop
popf
jp
and
push
sbb
xchg
fnstcw
lods
mov
in
call
aam
adc
cld
mov
dec
push
mov
inc
shr
fwait
pop
call
pop
xchg
out
and
cmp
sbb
jns
and
jp
jno
xor
ins
arpl
add
sub
loop
inc
pop
fldlg2
retf
je
jnp
sbb
sbb
ret
ret
stos
pop
dec
lahf
ret
pop
hlt
out
push
xlat
jge
(bad)
arpl
sub
rcl
fwait
fs
ret
dec
ret
lea
nop
(bad)
xor
fnsave
sbb
pop
sbb
xchg
pop
jge
pop
mov
adc
cs
adc
mov
push
mov
popf
mov
or
add
(bad)
aas
das
ror
rcl
fwait
call
shr
gs
sbb
retf
sub
jg
pop
sub
jo
call
adc
push
or
ins
mov
ins
iret
pop
aam
addr16
mov
and
fsubr
jmp
mov
push
sub
mov
pop
mov
daa
adc
ret
jecxz
pop
cmps
(bad)
in
mov
push
fs
pop
fldlg2
pop
push
(bad)
sbb
sbb
xchg
ins
rol
mov
arpl
shr
sub
push
fimul
jle
push
test
sahf
jae
popf
xchg
cmp
les
push
pushf
add
xchg
(bad)
in
into
sbb
adc
and
(bad)
dec
shl
stos
add
adc
inc
mov
push
sub
or
xchg
add
ins
jno
mov
cwde
loopne
fs
cmc
fcom
cmp
pop
or
and
jp
sbb
je
mov
ret
adc
fsub
jmp
ins
push
in
push
mov
pop
mov
xchg
cmp
pop
enter
bound
dec
sti
lea
das
xchg
test
not
mov
call
iret
fs
sbb
cld
inc
scas
inc
ins
push
pusha
inc
in
push
aam
call
cmp
pop
sbb
push
inc
popf
mov
ret
ins
sbb
int3
fadd
jecxz
out
scas
movs
stos
div
sbb
mov
js
pop
jge
dec
sar
rcr
ins
push
xchg
push
ret
out
stos
push
in
push
sub
in
repz
mov
sbb
mov
push
fwait
daa
shr
loop
cli
jge
pop
jbe
gs
xor
ret
and
mov
sbb
inc
lahf
xlat
push
mov
test
and
jmp
mov
sub
pop
xchg
in
test
sub
push
loopne
lds
cmp
jmp
jmp
jl
xor
add
push
fs
sbb
test
jg
and
(bad)
push
and
push
rcr
rcr
sub
jb
(bad)
and
stos
lods
fsub
mov
sbb
xchg
loop
adc
sbb
out
inc
xchg
movs
push
adc
sub
jle
jle
push
xor
push
push
push
sub
push
xlat
jp
mov
into
xor
mov
call
sbb
imul
int3
xor
sbb
pop
fwait
not
stos
fisubr
lahf
loope
fwait
xor
or
mul
shr
test
dec
aaa
mov
push
pop
sbb
push
jo
mov
rcr
and
push
mov
ret
adc
push
lods
fs
imul
ficomp
add
pop
test
pop
into
push
jae
retf
imul
sbb
push
imul
scas
mov
mov
jge
pop
adc
(bad)
xchg
xor
mov
lahf
in
push
cld
fcomip
add
rcr
cli
sbb
sbb
cmps
push
cmp
dec
idiv
arpl
sahf
push
mov
ret
fld
int3
out
mov
addr16
adc
pop
bound
jae
pop
push
ror
pop
out
sbb
sbb
mov
jne
mov
pop
(bad)
jmp
mov
push
mov
sti
scas
rol
aam
sub
jg
pop
data16
inc
cmp
pop
sub
push
jg
jmp
push
pop
sbb
sbb
(bad)
jge
pop
ss
loop
cld
shrd
aam
adc
inc
test
dec
aaa
xchg
inc
sahf
addr16
popf
sahf
ins
mov
sub
pop
mul
jmp
adc
inc
cld
xchg
sub
in
xlat
cmp
aas
bound
jmp
pop
mov
jmp
ja
je
jmp
inc
scas
(bad)
push
pop
xchg
in
sti
cmp
aam
push
lahf
popf
jo
ret
stos
in
dec
(bad)
lea
push
sbb
inc
(bad)
jmp
jg
pop
sub
cwde
pop
data16
pop
cmp
pop
and
push
pop
(bad)
pusha
dec
mov
movs
sahf
iret
ja
jle
js
(bad)
loop
mov
jbe
xor
idiv
pop
add
mov
outs
pop
inc
push
push
mov
jo
aam
sbb
pop
repnz
jmp
fwait
scas
pop
inc
aam
sub
in
sar
popw
pop
mov
popf
loopne
fcmovnbe
cmp
ins
dec
cmp
je
ss
and
jecxz
hlt
add
xchg
sub
jg
pop
imul
jnp
dec
sbb
xchg
ret
inc
lea
lahf
pop
xchg
loopne
(bad)
call
aaa
mov
jae
cmp
lods
inc
push
aam
adc
into
in
mov
js
xchg
ror
xchg
test
ins
inc
cmp
sbb
jb
mov
jmp
pop
sbb
xchg
out
and
inc
test
dec
pop
xchg
pop
sahf
inc
xlat
popf
xchg
ins
pusha
mov
xchg
jg
cmp
lods
dec
push
aam
sub
in
retf
cmp
popf
test
xchg
rcr
ins
clc
cmp
sbb
jge
pop
es
or
push
adc
push
jb
mov
sahf
jg
popf
dec
ins
mov
out
adc
xchg
pop
jp
jmp
aaa
jecxz
cld
(bad)
scas
cmp
pop
push
out
pop
mov
out
sub
ret
adc
dec
push
xchg
rol
das
mov
in
cmps
call
aaa
std
add
jbe
cmp
addr16
adc
sbb
lea
mov
push
or
cmp
data16
jo
or
retf
xor
and
je
test
popf
mov
dec
fwait
(bad)
call
and
fcom
and
add
fidiv
jb
(bad)
mov
lea
jb
cmp
sbb
and
add
pop
sub
sbb
fcomp
pop
loop
arpl
sub
fild
push
cld
pop
fs
ret
xor
pop
mov
jecxz
cld
aaa
lods
mov
jecxz
inc
jg
pop
outs
in
xor
push
outs
xor
sub
pop
mov
add
sub
add
jmp
push
fidiv
dec
jecxz
inc
nop
cmp
xchg
lds
jo
das
jne
lahf
xchg
outs
scas
push
jmp
lods
pop
xor
mov
pop
in
test
mov
aam
cld
ins
loopne
dec
int3
jae
daa
shr
outs
adc
cmp
dec
mov
xor
and
add
push
sub
fcmovu
dec
movs
add
es
jl
pop
loope
call
icebp
into
and
dec
mov
add
jo
mov
cmps
xor
mov
push
lods
fimul
adc
mov
ss
xchg
push
push
mov
xchg
(bad)
ficomp
mov
divps
push
pop
mov
lods
shl
jns
imul
add
jge
or
test
cli
mov
es
sub
rcl
shl
cs
aad
fucomip
add
ror
cmp
lods
add
mov
xchg
xor
stos
test
fstp
mov
ror
aam
(bad)
adc
repz
pop
jb
rol
adc
jecxz
cmp
jae
imul
jle
sbb
sbb
mov
ret
pop
stos
in
jne
and
pop
jecxz
cmps
(bad)
aam
xchg
mov
test
jnp
fidivr
outs
push
push
mov
jae
jecxz
sbb
xchg
jmp
fs
repnz
bound
je
ins
dec
cmp
ror
retf
mov
sbb
dec
jge
pop
sbb
inc
adc
pop
fdivr
xchg
(bad)
sub
jmp
je
call
pop
dec
sbb
push
sti
stos
sbb
and
mov
mov
imul
xchg
mov
into
mov
(bad)
in
push
jmp
lock
xlat
xchg
push
fwait
pop
dec
rol
sti
fcmovbe
inc
enter
mov
pop
jno
mov
sahf
aaa
pusha
jns
sbb
ins
outs
pop
in
add
mov
rcl
jmp
js
mov
xchg
retf
mov
sti
outs
and
sbb
aad
sub
jmp
xchg
mov
add
shr
mov
outs
add
popf
lock
mov
adc
clc
repz
popf
lahf
cmp
sbb
lahf
js
push
sub
add
int
push
shl
imul
das
call
in
dec
and
in
ss
cwde
cmp
cmp
ins
jnp
cmp
imul
jp
cmc
push
sbb
fs
inc
shl
or
fs
std
arpl
push
xor
test
js
rcl
outs
pop
xor
(bad)
cmp
cmp
add
mov
dec
nop
mov
sub
out
fisttp
je
sub
push
in
dec
sbb
dec
mov
in
pop
sub
sbb
jae
idiv
rcl
cli
adc
push
sti
cmp
in
cdq
fwait
mov
xor
and
dec
sub
cmp
ins
fimul
ss
(bad)
mov
xchg
or
xchg
and
push
fstp
pop
pop
jne
sti
mov
cmc
rcr
adc
lahf
icebp
shl
lahf
xor
ret
xchg
sti
in
cmp
movs
mov
push
retf
and
retf
sbb
sbb
stos
push
fld
push
in
pop
sbb
fs
fnstsw
in
xor
in
or
dec
in
repz
mov
in
retf
dec
mov
xchg
stos
sbb
sub
shr
ja
je
inc
add
xor
mov
jmp
add
sar
adc
xchg
xor
xchg
sbb
imul
retf
mov
inc
je
xchg
je
mov
retf
add
cld
stos
adc
dec
dec
dec
int3
fwait
mov
jb
in
lods
ror
retf
in
add
ret
lods
jecxz
stos
in
mov
mov
cmp
fstp
jge
adc
pop
cmp
inc
cmp
adc
jmp
sbb
or
or
cld
xchg
gs
daa
hlt
ret
adc
movs
retf
dec
pop
inc
(bad)
fucomp
mov
aad
mov
sti
fiadd
mov
add
sbb
pop
dec
xor
jle
retf
jecxz
gs
pop
loopne
inc
xchg
xchg
int3
mov
sub
ret
mov
(bad)
test
jecxz
sub
stos
ja
out
ror
and
cmp
or
nop
jne
ins
and
jg
pop
push
jb
mov
adc
add
in
jl
sub
lahf
mov
repnz
pushf
fs
inc
or
jmp
xor
add
ds
jnp
jns
push
xor
shl
ins
in
retf
ret
xor
pop
sub
and
jg
cmc
xor
inc
jnp
aas
sbb
inc
and
dec
inc
cmp
dec
sbb
push
in
xchg
jnp
sub
aas
test
pop
ret
mov
cmp
sbb
sahf
clc
mov
push
cmp
pop
push
hlt
adc
mov
push
test
mov
sub
and
push
int3
sti
ins
rcl
or
iret
aaa
push
mov
add
outs
xchg
in
popf
(bad)
call
sbb
mov
pusha
jl
adc
adc
add
mov
iret
and
dec
addr16
jmp
in
in
aam
and
loop
dec
cmps
arpl
test
cmp
pop
cmp
cmps
or
movs
data16
mov
push
sub
push
fdivr
fisttp
push
mov
clc
out
fs
mov
mov
mov
fcomp
bound
arpl
fstp
sub
ds
int3
mov
dec
mov
and
dec
mov
dec
stos
push
stos
repz
out
clc
jp
sbb
dec
arpl
imul
imul
sub
loopne
in
sbb
pusha
jg
(bad)
pop
dec
sbb
and
or
loop
mov
sbb
push
add
fcmovbe
fnclex
movs
adc
add
inc
iret
adc
push
pusha
push
dec
imul
cmp
rcl
add
je
cmp
test
pop
sbb
adc
(bad)
mov
jbe
call
pop
jp
enter
stos
cmp
jmp
psubb
stos
js
daa
push
std
cld
aas
cmp
iret
cmp
xchg
arpl
rcr
xor
push
cmp
out
jo
add
retf
lods
jne
bts
pop
and
adc
mov
pushf
dec
fistp
push
sti
jae
ins
mov
mov
aas
dec
jecxz
jae
lods
cmp
das
daa
pop
push
movs
dec
cmp
mov
push
fwait
sbb
push
sbb
cmp
pop
mov
aas
dec
aad
scas
scas
in
sub
and
aas
push
push
jbe
adc
jb
das
push
jp
rep
mov
addr16
repz
aad
das
test
mov
pop
jle
push
inc
fnstsw
pop
mov
cmp
ins
pop
dec
sub
bound
and
stos
mov
mov
pop
pop
in
xor
inc
ret
jmp
jae
dec
mov
inc
xor
xlat
push
cld
or
inc
repnz
adc
and
ret
jmp
hlt
out
iret
retf
shl
jae
fist
in
fwait
pop
cmp
int3
mov
ror
inc
and
rcl
xchg
shl
inc
(bad)
hlt
out
mov
ret
xor
push
xor
rcl
xchg
call
in
push
rcr
jecxz
bound
mov
push
xchg
xchg
cmp
mov
dec
xchg
stos
mov
or
sub
scas
add
mov
sbb
fsubr
stos
add
push
xor
aas
dec
int
pop
shr
xor
adc
sub
pop
xor
int3
pop
push
bound
sti
movs
jmp
(bad)
xor
push
pop
ret
sbb
add
outs
sub
xchg
dec
pop
push
dec
mov
xor
mov
icebp
xor
xchg
loop
int
clc
in
das
(bad)
aam
fs
mov
in
ins
cmp
mov
sbb
xor
sbb
pop
(bad)
or
add
sahf
sbb
(bad)
fsubr
scas
outs
in
mov
push
test
(bad)
aas
sub
arpl
imul
sbb
int3
imul
in
xor
cmp
add
scas
pop
mov
push
xor
retf
lock
mov
adc
data16
cmp
dec
sar
sahf
movs
sti
fadd
in
adc
sbb
mov
sahf
(bad)
aad
pop
jno
fst
cmps
(bad)
pop
inc
sub
fwait
mov
pop
inc
push
rcl
shl
adc
mov
push
sbb
mov
sub
cdq
xchg
call
je
pop
jns
stos
sbb
retf
xchg
push
mov
fidiv
fldenv
jo
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
fiadd
pop
.byte
