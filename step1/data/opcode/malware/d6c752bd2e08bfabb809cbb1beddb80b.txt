mov
mov
retf
or
out
sub
adc
imul
add
das
dec
adc
jnp
call
call
sbb
adc
sub
mov
cmps
cmps
stos
sbb
xchg
mov
aaa
jg
icebp
cmps
(bad)
mov
or
(bad)
xchg
sti
sahf
not
repnz
or
shl
not
xchg
lods
dec
fsubr
cmps
cwde
bound
inc
rol
jnp
inc
pusha
add
sub
movs
push
sub
jnp
(bad)
push
inc
push
enter
jle
inc
shl
cli
mov
popf
mov
push
xor
lds
repnz
sub
jns
xchg
movs
mov
and
inc
push
xchg
push
call
or
mov
jg
icebp
scas
mov
sar
jp
cmps
mov
or
jns
and
inc
push
xchg
push
and
lds
push
sub
outs
repnz
sar
xchg
inc
push
xchg
repnz
mov
repnz
mov
je
dec
js
jge
fidiv
dec
mov
gs
push
(bad)
call
or
pushf
in
cmp
or
js
sbb
and
mov
cmps
sahf
(bad)
cmps
mov
or
test
js
or
inc
or
jnp
jle
test
or
adc
loop
lds
cwde
sbb
(bad)
adc
in
xchg
in
sub
mov
(bad)
sub
sbb
sub
sti
shl
sub
xchg
or
repz
mov
push
xchg
shr
aad
rol
add
outs
repnz
mov
adc
imul
fidiv
dec
push
shr
lds
repz
add
xchg
out
addr16
adc
dec
push
adc
enter
xor
xchg
add
sub
repnz
jle
inc
push
dec
sbb
adc
ja
and
adc
idiv
inc
bnd
popf
mov
out
or
xchg
mov
sti
sub
inc
push
xchg
(bad)
xor
mov
inc
push
xchg
stc
fistp
adc
jmp
(bad)
xchg
repnz
movs
pop
test
outs
mov
movs
inc
cmp
or
pusha
movs
ja
xor
or
jnp
inc
icebp
jnp
inc
bnd
sub
bound
lds
imul
sub
mul
inc
(bad)
stos
jnp
mov
or
adc
ror
imul
fistp
push
xchg
or
xlat
vmovupd
adc
adc
in
mov
xchg
lods
add
xchg
inc
cmp
movs
jae
or
cmc
loope
rcr
jae
fadd
hlt
add
inc
xchg
add
daa
jnp
xchg
jnp
or
inc
or
inc
in
sub
bnd
inc
bnd
rol
stc
cmp
adc
jmp
(bad)
jecxz
repnz
in
sbb
pop
jmp
inc
repnz
repnz
xor
xchg
push
stc
pop
push
repnz
in
sbb
add
or
repnz
xchg
or
pusha
movs
mov
push
jmp
inc
js
hlt
(bad)
jnp
scas
pop
cmp
aad
jmp
jnp
call
rol
stc
fist
adc
jmp
out
sub
shr
fs
rol
jnp
rol
stc
ret
push
repnz
jmp
fs
shr
sub
ret
shr
rol
(bad)
hlt
nop
inc
xchg
mov
xchg
fadd
hlt
add
(bad)
inc
sar
fs
mov
rol
jo
push
jnp
imul
loope
push
or
adc
push
adc
push
adc
retf
or
ficom
push
or
adc
push
cmps
sbb
xchg
out
mov
movs
add
mov
adc
fs
shl
sub
fld
cli
mov
cs
movs
add
mov
adc
arpl
mov
or
cli
cwde
inc
scas
cmp
(bad)
lods
into
adc
sar
xchg
std
ror
adc
out
cmps
cwde
bound
sbb
repnz
jns
mov
push
out
jns
jbe
xor
jae
jnp
or
jmp
movs
lds
xor
mov
adc
addr16
ja
xchg
or
out
aas
jnp
scas
fnstsw
(bad)
cmps
out
ud1
adc
repnz
or
push
out
jns
jnp
scas
out
jnp
jnp
or
push
cmc
fndisi(8087
inc
test
or
adc
lods
dec
fsub
xor
jno
fwait
jle
inc
or
(bad)
(bad)
ret
or
jl
push
jnp
mov
push
push
jnp
ja
mov
mov
sbb
outs
mov
xchg
mov
shl
xor
sub
push
scas
out
rcr
xor
mov
retf
iret
sti
sti
jns
(bad)
jmp
or
push
add
cmc
push
push
cmp
shl
inc
shl
push
xor
ret
shr
sbb
cli
mov
sub
and
mov
sar
xor
cwde
add
cwde
push
je
rol
xchg
cdq
xchg
sbb
sbb
xchg
jmp
aad
push
jae
xchg
jmp
ret
dec
fsub
xor
jno
xchg
jle
inc
or
loop
fidivr
xor
push
cli
cmps
mov
push
out
repz
js
out
sbb
xchg
sbb
xlat
fninit
or
(bad)
push
cmp
jecxz
push
pop
mul
inc
ins
sbb
rcl
push
push
add
loope
push
lods
dec
dec
out
cmps
cwde
bound
or
cli
scas
push
jmp
repz
mov
js
(bad)
jns
into
mov
rol
mov
js
jnp
jnp
(bad)
sbb
outs
repnz
outs
sbb
jns
jnp
movs
inc
outs
les
out
js
ss
shl
call
sbb
outs
outs
xchg
xchg
jns
xor
adc
jnp
pop
jnp
lds
xchg
jnp
ins
and
mov
repnz
movs
mov
push
jmp
push
enter
jp
fs
xchg
mov
scas
aad
(bad)
add
outs
mov
sub
outs
mov
sub
mov
out
icebp
sub
js
cli
call
mov
test
push
cwde
inc
lds
xchg
xor
jno
cmps
jle
inc
or
cli
scas
add
movs
push
push
aad
jmp
xchg
repnz
aas
pop
repnz
push
adc
lds
sub
xor
ror
movs
mov
mov
xchg
inc
inc
repnz
jg
ja
sbb
sub
xor
pop
and
push
push
les
xlat
inc
push
repnz
jns
js
out
xchg
or
pusha
movs
mov
push
jmp
inc
movs
mov
mov
xchg
in
mov
mov
sbb
or
arpl
jae
fadd
hlt
aas
sbb
xor
xchg
push
pop
fiadd
rcl
adc
out
xchg
mov
call
(bad)
push
add
repz
push
inc
push
xchg
add
out
jns
jnp
add
outs
mov
sub
outs
mov
sub
movs
sbb
fiadd
sbb
sbb
sub
repnz
test
out
jns
mov
mov
sub
add
lds
or
xlat
vpminsw
jno
mov
or
sbb
lds
repnz
test
adc
stc
or
pushf
ret
call
jns
js
out
cwde
ret
ins
jae
std
xchg
movs
sub
adc
push
adc
sub
jae
sti
cdq
mov
js
repnz
or
xchg
jnp
js
mov
jae
imul
outs
repnz
outs
repnz
push
inc
push
xchg
inc
xchg
xchg
xchg
scas
cmc
jnp
loope
mov
test
mov
and
inc
push
xchg
xchg
add
loop
pusha
xchg
not
xchg
cli
call
movs
xor
push
retf
adc
inc
outs
mov
sub
repnz
out
xchg
push
sbb
iret
cwde
pop
ficom
cwde
add
or
pushf
add
or
lea
repnz
or
or
adc
push
out
adc
xchg
or
sbb
jns
xchg
push
cmc
fcmovne
push
out
jno
sbb
stc
mov
mov
out
shl
mov
mov
push
or
lea
repnz
cmc
ret
leave
push
out
lods
dec
fsub
xor
jno
mov
inc
cmp
ret
movs
or
jg
xor
cwde
jg
or
xchg
ret
test
adc
cmp
push
jnp
repnz
mov
adc
add
pop
add
loop
out
mov
or
sbb
adc
or
cli
pushf
ret
cs
out
mov
fsub
sub
sbb
xlat
or
mov
or
xchg
loop
repnz
jg
or
xchg
mov
lea
push
xchg
mov
adc
sbb
cli
movs
movs
or
jg
xor
sub
cli
xchg
cmps
mov
or
push
imul
loop
repnz
jo
lea
xchg
push
(bad)
lods
into
and
ror
xchg
cli
shl
gs
xchg
out
sbb
adc
xchg
fucomi
push
jmp
in
sub
repnz
inc
repnz
sub
repnz
ret
adc
sub
mov
push
(bad)
movs
xor
mov
movs
xor
mov
or
jmp
xchg
pushf
ret
jnp
inc
add
lds
mov
sub
repnz
or
xchg
inc
repnz
jae
fadd
hlt
aas
xor
jg
sub
and
or
mov
jnp
inc
test
out
jns
bnd
iret
mov
outs
cmps
lahf
adc
ror
out
js
sbb
mov
std
xchg
imul
cwde
adc
adc
lds
sub
or
push
(bad)
out
pop
xchg
or
pop
jnp
or
sub
mov
nop
je
hlt
adc
ror
push
xchg
sub
mov
shl
popf
jg
pop
ror
xlat
inc
xchg
repnz
or
xlat
cmps
retf
adc
adc
lods
xor
sub
ja
(bad)
sub
or
lea
repnz
or
or
in
push
cmc
ret
leave
push
out
jno
jnp
std
xchg
popf
and
push
push
xchg
inc
sar
or
out
add
cli
cwde
inc
push
lods
jg
or
or
ds
jns
push
inc
daa
outs
repnz
inc
popa
jmp
xchg
or
push
xchg
sub
mov
mov
xchg
xchg
cmp
std
xchg
pop
das
repnz
nop
pmaxsw
repnz
add
repz
into
mov
or
mov
out
add
(bad)
cwde
inc
dec
jnp
xor
cmc
add
out
jns
jnp
mov
or
adc
sub
or
pushf
add
or
inc
daa
ins
repnz
mov
repnz
(bad)
push
xor
xor
cmp
xchg
or
xchg
repnz
sub
repnz
movs
ja
js
or
jns
iret
mov
out
jge
push
xchg
mov
aad
adc
ss
sub
fbld
repnz
cmp
or
and
or
out
js
repnz
jmp
xchg
xor
lds
repnz
mov
or
sub
shl
adc
or
push
xchg
or
out
js
ss
xchg
(bad)
add
repnz
iret
mov
out
jge
push
xchg
cmp
js
jno
mov
or
ss
sub
test
outs
repnz
cmp
or
mov
inc
and
out
js
repnz
jmp
xchg
(bad)
adc
iret
mov
out
jge
push
xchg
jno
js
jno
mov
or
ss
sub
test
outs
repnz
cmp
or
ja
ror
out
js
repnz
jmp
xchg
repz
repnz
(bad)
fmul
sub
shl
adc
daa
xor
out
xchg
call
lea
out
js
ss
xchg
(bad)
add
repnz
iret
mov
out
jge
push
xchg
add
aad
adc
push
in
sub
test
outs
repnz
cmp
or
retf
jae
or
out
js
repnz
adc
nop
pmaxsw
movs
stc
cmp
or
sub
shl
adc
daa
xor
out
xchg
(bad)
and
sub
or
xchg
xlat
sbb
xchg
or
xlat
lds
jmp
shr
popa
xor
adc
jns
push
xchg
jnp
xchg
jnp
inc
test
out
jns
repnz
lods
sub
adc
cmc
ret
leave
push
out
jg
pop
ror
xlat
cmps
ja
js
or
inc
(bad)
xchg
sub
dec
out
jns
mov
out
js
jns
js
rcr
scas
cmc
jnp
add
push
adc
sub
or
xchg
xchg
and
or
lods
aas
ror
xchg
jl
xchg
mov
xchg
das
ror
nop
sub
or
xchg
push
jns
mov
out
js
jns
pop
ror
xlat
cmps
ret
xor
pushf
adc
adc
test
out
jns
mov
adc
push
out
jns
mov
sub
sub
push
sbb
ja
sub
out
js
jns
push
ror
xlat
cmps
retf
std
repnz
cmc
ret
leave
push
out
jno
jnp
std
xchg
xchg
sub
adc
test
out
jns
mov
out
js
jns
js
retf
sar
shl
push
sbb
test
or
xchg
pop
ror
xlat
cmps
retf
adc
sub
pop
movs
xor
add
icebp
adc
movs
ja
js
or
cmc
js
or
out
jns
mov
xor
inc
and
test
repnz
jnp
aaa
ror
push
out
jno
ja
or
xchg
inc
jmp
xlat
lea
out
jns
mov
adc
(bad)
xchg
and
or
add
aam
xchg
jnp
js
push
out
jns
jg
jp
or
xlat
inc
xchg
repz
or
xlat
lds
aad
dec
xor
out
test
or
push
test
out
jns
jg
daa
ror
xlat
mov
or
idiv
sub
adc
mov
push
add
retf
xchg
dec
stc
js
or
inc
stos
movs
mov
push
out
pop
inc
xchg
jae
xchg
or
xchg
or
push
xchg
or
add
xchg
xchg
mov
xchg
or
xlat
cmps
ja
js
or
inc
jmp
mov
aas
jbe
adc
mov
xor
add
lock
ror
adc
inc
repnz
movs
sub
movs
ja
js
or
xchg
not
or
test
or
push
test
out
jns
jg
add
or
xlat
mov
or
idiv
sub
adc
pop
or
add
retf
xchg
dec
mov
or
or
in
push
(bad)
retf
add
test
adc
ror
xchg
or
push
xchg
or
add
xchg
xchg
cwde
sub
adc
jp
jns
repnz
add
repz
ror
movs
jae
or
or
jp
jns
mov
xor
push
repnz
jnp
(bad)
or
push
out
jno
jnp
std
xchg
pop
sub
dec
jno
ror
adc
ror
xchg
jbe
xchg
or
movs
out
ror
outs
mov
out
js
sbb
jmp
js
add
mov
je
in
js
std
xchg
or
add
jns
repz
cwde
pop
out
jns
jg
jp
or
xlat
inc
scas
repz
or
xlat
lds
aad
movs
sub
pop
movs
xor
scas
cmp
(bad)
lods
into
adc
aad
out
js
inc
inc
js
or
in
js
jns
jg
or
or
or
adc
sub
jp
or
xlat
inc
stos
repz
or
xlat
lds
xchg
sub
pop
movs
xor
js
xchg
or
jbe
jns
mov
sbb
mov
adc
jns
out
js
xor
add
ja
js
or
out
js
jo
jns
or
out
js
jns
js
cli
call
jns
js
cli
out
add
or
cmc
js
or
out
js
jo
jnp
or
out
js
xchg
inc
test
out
jns
repnz
pop
sub
cwde
inc
cmps
ja
js
or
inc
(bad)
scas
dec
sar
adc
and
push
ror
xlat
cmps
ret
and
repnz
movs
ja
js
or
lds
or
xchg
push
ror
xlat
cmps
ret
and
or
xlat
cmps
ret
and
or
xlat
cmps
ret
and
repnz
movs
ja
js
or
icebp
js
or
inc
pop
jmp
in
inc
push
enter
test
push
mov
sub
jnp
xchg
jmp
jmp
or
push
cwde
jg
adc
ins
movs
(bad)
cmc
inc
push
repnz
ret
and
sub
repnz
idiv
out
fisttp
movs
lds
int
jg
repnz
push
cwde
ret
ins
pop
movs
(bad)
cmc
inc
push
or
int
sub
ror
sbb
ret
cmp
or
pop
mov
adc
ror
dec
fdivr
adc
out
not
shl
pop
test
sbb
cwde
inc
inc
jb
lds
call
inc
repnz
repz
repnz
jmp
stc
imul
aas
fst
xchg
adc
(bad)
fdiv
rcl
movs
pop
xchg
imul
inc
or
cli
test
push
cli
inc
push
in
(bad)
in
or
adc
repz
cmp
push
xchg
push
cwde
inc
scas
xlat
or
ins
repnz
retf
sub
bound
sub
mov
sub
sbb
ret
mov
adc
fnsave
(bad)
sub
imul
xor
or
or
sahf
sti
das
repnz
ja
xor
xchg
mov
sbb
sub
inc
push
xchg
xchg
mov
gs
sub
jae
imul
sbb
iret
das
repnz
and
mov
sub
std
xchg
mov
sub
mov
adc
mov
adc
adc
mov
adc
(bad)
sub
repnz
adc
adc
cdq
mov
jno
jmp
sbb
clc
shr
adc
sbb
adc
fnstsw
pop
and
mov
sub
mov
and
(bad)
fsubr
js
add
lahf
mov
adc
(bad)
out
xchg
repnz
and
mov
sub
or
mov
sub
xor
jne
repnz
and
mov
sub
cmp
(bad)
sub
repnz
ror
out
jno
jmp
sbb
clc
inc
das
repnz
and
mov
sub
call
std
sbb
xchg
or
mov
sub
xor
sbb
in
(bad)
in
jb
lahf
mov
adc
ins
repnz
ror
movs
lds
mov
push
in
(bad)
in
jb
lahf
mov
adc
(bad)
clc
adc
ins
repnz
movs
cmp
dec
movs
xor
xchg
cld
xchg
mov
add
lock
les
adc
ins
repnz
les
adc
ins
repnz
les
xchg
mov
add
retf
sub
repnz
clc
std
adc
sar
sub
mov
sub
repnz
sub
ins
push
xchg
repnz
movs
mov
push
in
jnp
shl
adc
outs
repnz
cmps
xchg
jg
lea
js
ja
aas
outs
repnz
sub
iret
fiadd
rcl
xchg
inc
fwait
mov
pop
and
mov
sub
mul
outs
repnz
test
push
mov
sub
mov
ins
prefetchwt1
mov
adc
in
mov
sbb
mov
adc
(bad)
jmp
inc
les
fldcw
sub
adc
mov
adc
and
xchg
js
and
movs
cmp
data16
mov
push
in
std
cmps
sbb
xchg
xor
xchg
inc
adc
mov
cdq
ret
cmps
ret
rol
movs
repnz
pop
hlt
out
and
outs
xchg
push
cwde
inc
and
adc
xchg
imul
neg
pop
ins
repnz
mov
das
xchg
push
add
ins
jno
xchg
sub
add
lods
(bad)
out
pop
(bad)
xchg
mov
jnp
xchg
jnp
push
fnsave
(bad)
sub
outs
push
xchg
add
cli
fcomi
mov
cmc
xchg
and
xor
mov
jmp
mov
jp
xchg
adc
neg
(bad)
mov
inc
push
fmul
xor
mov
jmp
mov
jp
xchg
test
xchg
neg
mov
sub
add
sub
loope
cmc
push
adc
inc
ins
sbb
push
in
add
sub
cmps
cwde
bound
rcl
dec
mov
sub
mov
push
jmp
adc
cdq
mov
out
and
push
xchg
mov
(bad)
out
ds
push
xchg
dec
out
repnz
lea
push
xchg
pop
out
repnz
mov
adc
adc
cwde
ret
xlat
out
adc
xchg
cmp
sub
mov
out
dec
push
xchg
or
sub
mov
out
jae
push
xchg
sbb
sub
mov
fdiv
rcl
movs
pop
xchg
imul
rcl
jnp
xchg
jnp
js
xchg
cmp
test
push
xchg
mov
lahf
sub
repz
push
out
jno
imul
loope
push
repnz
loop
repnz
ins
dec
in
xchg
mul
outs
repnz
loop
repnz
jo
jnp
pop
movs
xor
ret
adc
sub
adc
outs
repnz
ret
adc
cdq
mov
inc
push
repnz
inc
lods
call
movs
xchg
dec
adc
push
dec
pushf
repnz
dec
adc
sub
mov
xlat
inc
repnz
jge
add
mov
adc
out
adc
sbb
adc
push
cwde
adc
sub
stc
pop
dec
repnz
push
push
pushf
ret
jnp
lds
sub
mov
in
sub
bnd
inc
idiv
rol
adc
sub
sbb
fldcw
inc
push
xchg
xchg
js
push
mov
sub
hlt
nop
je
mov
xchg
dec
dec
out
cmps
cwde
bound
push
(bad)
(bad)
sbb
call
jnp
jnp
mov
push
push
jnp
jg
xchg
in
sbb
cwde
rol
jnp
outs
inc
idiv
inc
repz
ret
pushf
ret
out
repnz
adc
push
or
and
ins
repnz
mov
in
push
push
cmp
shl
inc
sahf
lods
add
out
sbb
xchg
xchg
in
ror
adc
jo
inc
push
enter
jle
inc
or
cli
call
mov
mov
std
cmps
adc
out
xchg
inc
push
mov
iret
out
xchg
inc
push
mov
iret
out
xchg
inc
push
mov
iret
out
xchg
inc
push
mov
iret
out
xchg
lock
imul
cdq
xchg
adc
std
cmps
ret
cmps
sub
lods
lds
retf
ror
sub
inc
add
add
or
xchg
cmp
shl
push
jnp
add
icebp
push
xor
in
inc
pop
pushf
cwde
jg
sbb
mov
pop
lods
push
xor
jp
and
add
jge
inc
fisubr
or
add
xchg
stc
shl
adc
push
jns
xchg
mov
or
test
xchg
outs
sub
jae
mov
or
adc
aad
stc
and
adc
and
inc
xor
cmp
adc
and
js
sbb
js
or
push
xchg
cmps
cwde
jg
jb
sub
jno
test
mov
jg
sbb
pop
adc
adc
add
neg
xor
hlt
sub
cmp
jnp
add
not
xchg
movs
sub
ret
inc
mov
scas
xor
push
sub
adc
adc
fs
or
adc
adc
jno
jmp
mov
movs
or
sub
jno
and
adc
xchg
repnz
sar
xchg
mov
or
xchg
jno
and
ret
not
jg
sbb
xchg
sub
adc
sub
inc
push
aad
xchg
mov
movs
or
sub
stc
test
rcr
fwait
not
mov
shl
adc
sub
sbb
sar
repz
(bad)
neg
xchg
not
xchg
jo
jp
or
rcl
movs
pop
xchg
imul
inc
rcl
mul
outs
repnz
sbb
pop
adc
adc
and
nop
js
icebp
adc
vmovupd
push
repnz
(bad)
repnz
sub
cmps
sar
into
add
mov
jnp
xchg
mov
out
(bad)
mul
outs
repnz
xor
in
sub
sub
iret
clc
xchg
xchg
in
xchg
cld
cwde
pop
cs
or
sub
add
pop
sbb
mov
sub
pushf
ret
xor
call
repz
scas
std
jnp
xchg
repz
push
pushf
ret
xor
call
test
pop
jns
dec
sar
xchg
fcmovnb
push
xlat
repz
xchg
jno
and
or
adc
or
xor
xchg
dec
rcr
jmp
xchg
jno
and
adc
adc
fwait
cmps
add
lock
mov
stos
lods
lds
or
dec
fsub
xor
dec
dec
mov
je
adc
jnp
stc
jns
or
into
js
repnz
aaa
ja
adc
pop
cmc
xlat
add
sub
xchg
je
or
xor
push
pop
nop
adc
js
repnz
and
ret
pop
adc
jno
outs
repnz
aaa
jb
fs
push
xor
jb
or
xchg
xchg
ins
jae
cmps
adc
sbb
mov
dec
and
mov
sbb
adc
test
addr16
ror
sbb
xchg
test
out
mov
mov
int3
fisubr
sub
js
test
mov
pop
test
(bad)
js
repz
xor
cdq
rcr
xchg
mov
xchg
ja
js
or
out
js
std
cmps
adc
sbb
adc
out
push
ins
repnz
sub
sbb
adc
out
push
ins
repnz
adc
sub
xor
xchg
cmp
sub
xchg
adc
adc
or
js
ja
pop
ror
push
xchg
or
pop
inc
into
in
pop
sub
adc
sub
or
xor
sub
sbb
scas
add
inc
retf
lock
xor
mov
inc
sub
outs
in
ror
xchg
pop
ror
adc
outs
repnz
and
sbb
popf
xchg
repnz
push
(bad)
js
or
out
outs
xor
out
js
ss
inc
pop
nop
xchg
and
jns
pop
repz
out
push
div
sti
test
adc
test
call
inc
lods
jg
or
nop
js
not
xchg
nop
js
icebp
adc
sub
add
repz
rol
(bad)
repnz
sub
push
stc
lahf
xlat
or
std
push
sub
call
or
xchg
imul
out
mov
or
adc
sub
js
sbb
fild
repnz
ror
add
xchg
xchg
and
sbb
test
or
cwde
pop
in
sbb
inc
int3
lock
sar
xchg
movs
jle
outs
repnz
(bad)
js
xor
test
lock
mov
sbb
ror
out
js
not
xchg
out
sbb
xchg
or
dec
cmp
stc
daa
jp
adc
test
iret
js
jnp
test
imul
adc
xor
das
jnp
pop
repz
iret
js
jns
pop
repz
adc
ror
out
js
test
or
sbb
sub
lds
or
out
js
out
pushf
add
or
out
outs
jbe
adc
ror
out
js
mov
add
sub
movs
pop
ror
out
js
dec
repnz
ror
adc
cmps
movs
pop
ror
call
sbb
xchg
or
adc
cdq
mov
mov
or
pushf
pop
repnz
into
js
jnp
xchg
sbb
inc
test
out
inc
iret
lock
jnp
jae
or
adc
sub
sub
push
add
adc
and
xchg
sbb
adc
pop
std
xchg
cli
and
repz
sub
or
adc
sar
test
jnp
arpl
or
iret
js
repnz
sub
sub
movs
arpl
or
xchg
mov
fnsave
test
jnp
add
icebp
xchg
mov
fnsave
sub
loope
(bad)
mov
(bad)
aas
out
sbb
xchg
inc
test
or
cwde
xor
push
retf
js
jb
and
or
pop
mov
pop
in
sbb
adc
mov
ja
pop
ror
cli
mov
or
fwait
nop
movs
loop
mov
rol
iret
js
repz
xor
xor
test
or
xchg
mov
sub
into
sub
sub
in
xchg
mov
sub
into
sub
sub
clc
xchg
mov
sub
sbb
mov
or
xchg
cli
and
inc
xchg
je
or
int
ror
out
js
test
js
jno
mov
or
mov
ret
xchg
or
enter
shl
icebp
pop
jnp
jbe
outs
repnz
out
add
sbb
in
ror
arpl
mul
outs
repnz
test
test
(bad)
js
repz
xor
cdq
rcr
xchg
mov
xchg
ja
jl
or
rcl
movs
pop
xchg
imul
shl
or
xchg
push
repnz
or
jg
mov
xchg
xchg
sub
mov
push
out
fcmovnbe
push
js
pushf
cli
cmc
jg
add
repnz
cld
jg
adc
repnz
dec
xchg
les
fcmovnbe
push
js
xchg
ret
xlat
ret
cli
xchg
cmps
icebp
push
xor
sub
cmp
out
add
xchg
ret
xchg
cli
shl
arpl
lahf
jmp
inc
push
repnz
js
sub
cmp
push
add
mov
xchg
inc
push
xchg
xor
xchg
mov
jmp
ret
cmps
les
rol
ins
xchg
mov
jno
sub
jmp
pop
sti
xchg
jg
(bad)
adc
mov
repz
and
sub
push
js
std
cmps
les
rol
sub
jb
js
jae
jg
into
adc
(bad)
adc
sub
sub
in
xchg
jo
js
or
cli
xchg
cmps
icebp
push
xor
sub
cmp
sub
repz
cli
shl
arpl
mov
push
push
add
ror
push
iret
xchg
xchg
mov
xchg
inc
push
js
lods
dec
dec
out
cmps
cwde
bound
shl
loop
mov
test
test
push
cwde
inc
inc
or
jnp
lds
inc
xchg
or
adc
aam
(bad)
ins
and
mov
imul
pop
add
rep
push
lods
dec
dec
out
cmps
cwde
bound
sbb
aad
repnz
rcl
dec
rcr
ja
pop
ror
sbb
or
mov
adc
mov
adc
aad
out
js
xor
out
js
sbb
xchg
ret
out
aad
jmp
dec
out
cmps
cwde
bound
push
add
adc
sar
in
sub
cli
jnp
lds
fadd
hlt
add
loop
sar
test
rcl
nop
push
inc
bnd
sub
cwde
adc
cs
and
repnz
inc
scas
or
repnz
mov
(bad)
xchg
cmps
sub
repnz
sub
repnz
out
jno
xchg
jge
push
outs
mov
adc
adc
ret
(bad)
in
sub
xchg
or
(bad)
cwde
ret
pop
or
cwde
ret
fs
or
mov
sub
mov
and
xor
dec
fsub
xor
mov
scas
jecxz
cmp
ret
xchg
repnz
inc
bnd
sub
cli
stc
retf
jg
adc
jmp
out
js
mul
inc
(bad)
xchg
nop
jo
mov
xchg
jnp
inc
repnz
outs
jle
adc
in
jno
js
jb
xchg
cwde
adc
js
inc
aam
xchg
xchg
push
inc
in
das
call
cmps
mov
cmp
sub
repnz
jnp
jg
mov
push
jmp
fnstenv
rcl
movs
pop
inc
xlat
jnp
scas
or
fs
ficomp
adc
lods
repnz
inc
bnd
sub
cli
stc
aaa
jl
adc
jmp
jmp
add
or
cli
mov
lock
inc
repnz
outs
call
ret
out
repnz
sbb
aad
repnz
outs
and
xchg
or
fdiv
rcl
movs
pop
xchg
imul
sbb
push
fidivr
rcl
pop
xchg
sbb
mov
mov
cli
and
sbb
xchg
mov
xchg
xor
inc
movs
cmps
in
out
push
adc
(bad)
xchg
sub
xchg
and
jge
and
outs
repnz
fwait
jns
adc
cli
push
mov
sbb
cli
mov
not
adc
push
mov
jnp
cmp
repnz
jae
repnz
cli
call
mov
jo
or
jnp
lods
dec
dec
out
cmps
cwde
bound
movs
call
mov
pushf
xor
fs
push
cwde
ret
push
jae
xchg
jmp
ret
sub
repnz
das
jle
adc
sbb
cli
xchg
and
jge
and
outs
repnz
adc
adc
cli
push
mov
or
push
xchg
jo
xchg
in
xchg
xor
jno
mov
movs
inc
cmp
std
test
sub
cs
inc
dec
xor
xchg
loop
repnz
loop
repnz
loop
repnz
cli
fistp
sbb
mov
ds
out
adc
pop
hlt
ja
push
mov
mov
or
out
movs
mov
push
out
std
cmps
ret
cmps
ret
sub
xchg
inc
xor
push
imul
xchg
jmp
xchg
cli
shl
fs
xchg
fisubr
xchg
sub
mov
or
movs
and
and
fdiv
cdq
sub
stc
pop
push
or
repnz
outs
das
jnp
mov
jnp
pop
inc
or
pop
push
or
repnz
dec
xchg
lods
sub
mov
push
out
jns
mov
inc
adc
cli
push
xor
fcmovnb
out
in
lahf
adc
iret
std
mov
or
sbb
mov
jnp
push
sub
cmc
push
out
int
xchg
inc
push
and
std
cmps
ror
std
mov
or
(bad)
push
xor
call
fcmovnb
xchg
call
xor
mov
repnz
sub
mov
pop
xchg
mov
xchg
inc
mov
fadd
(bad)
mov
bound
pop
mov
bound
pop
mov
sub
pop
mov
repnz
push
into
mov
pop
xchg
les
push
bound
pop
out
adc
mov
xor
pop
mov
push
adc
mov
sbb
out
bound
xchg
bound
mov
jge
push
xchg
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
jp
repnz
sub
mov
mov
lds
xor
mov
repnz
sub
bound
pop
mov
bound
pop
mov
mov
pop
movs
sub
inc
mov
and
pop
mov
cmp
jo
bound
pop
mov
bound
xor
bound
mov
bound
pop
mov
bound
lds
bound
pop
mov
mov
pop
movs
sub
inc
mov
and
pop
mov
cmp
jo
bound
pop
mov
bound
mov
bound
mov
bound
pop
mov
bound
pop
mov
jecxz
js
xor
jno
mov
jo
call
xor
xchg
clc
lods
lahf
in
xchg
cmp
adc
movs
mov
push
push
jnp
arpl
loope
sub
repnz
pop
sub
inc
outs
bound
ror
js
call
jnp
jnp
(bad)
hlt
xlat
ret
cli
lods
lds
pop
xchg
or
push
xchg
or
jo
jnp
or
adc
vmread
fwait
xor
popa
cmc
cmp
outs
lock
mov
xor
fcmovnu
(bad)
std
cmps
xor
xrelease
sub
ja
std
cmps
xchg
and
add
cdq
xchg
xchg
fs
xchg
mov
push
push
bound
xchg
sbb
repnz
xor
inc
push
cmc
repz
mov
cmps
jmp
std
mov
adc
sub
jne
jnp
xchg
mov
adc
(bad)
call
jnp
jnp
xor
loope
mov
mov
xor
add
jb
dec
dec
out
cmps
cwde
bound
movs
scas
jo
push
test
vdivps
xor
in
add
jmp
in
or
scas
out
rcr
xor
jo
jnp
pop
movs
xor
mov
sub
sbb
sub
mov
outs
jg
or
ror
das
repnz
retf
xchg
adc
lds
dec
push
xchg
inc
mov
lock
mov
pop
lods
lds
lods
lds
repnz
pop
out
adc
stc
jnp
in
and
adc
nop
mov
test
inc
outs
outs
mov
or
in
push
xchg
leave
test
call
loop
ja
add
or
dec
nop
mov
mov
mov
lods
lds
in
ja
add
ret
add
nop
mov
mov
jno
jg
push
lds
outs
repnz
adc
jmp
retf
cwde
ret
in
sub
std
cmps
js
xor
xor
xor
xchg
and
cwde
mov
lds
pop
xchg
and
jns
dec
and
push
out
std
cmps
push
in
adc
mov
jnp
pop
nop
mov
push
ret
ror
xchg
dec
push
xchg
push
xchg
pusha
retf
xchg
inc
and
cmp
cwde
ret
or
fld
cwde
inc
movs
sub
ret
add
nop
mov
mov
jno
jae
push
fnstcw
outs
repnz
adc
in
sti
push
lds
outs
repnz
ret
push
push
(bad)
loope
jmp
leave
test
call
loop
ret
mov
nop
mov
test
sub
pop
sub
cmp
push
xor
shl
test
mov
or
and
movs
sub
push
xchg
inc
inc
push
mov
jns
pop
nop
mov
push
and
cwde
ja
adc
ret
xlat
pop
push
sbb
jl
xor
mov
aad
outs
repnz
outs
push
push
out
js
ss
sub
cwde
adc
sub
mov
repnz
repnz
ret
adc
push
adc
pop
push
stc
(bad)
repnz
jae
sub
ins
pop
xchg
repnz
jbe
rcl
movs
pop
nop
imul
adc
push
loopne
xlat
lods
sbb
mov
repnz
sbb
xchg
out
out
outs
repnz
ja
add
xchg
loop
push
in
add
sar
fcmovnu
push
std
stos
cwde
inc
scas
xor
test
or
adc
cmp
sub
or
add
movs
xor
ins
in
or
inc
aam
cmp
and
out
jno
out
data16
ror
adc
pop
cmp
add
or
loopne
sub
xor
repnz
adc
out
mov
ja
js
or
test
sar
or
mov
adc
fcom
push
xchg
or
adc
inc
lock
inc
bnd
sub
or
js
mov
adc
test
in
js
jnp
scas
fnstsw
js
cli
test
xlat
lds
sub
add
js
mov
adc
aad
push
xchg
inc
in
ror
adc
push
in
js
sbb
sub
inc
push
xchg
int3
outs
repnz
add
or
js
sbb
repnz
ja
add
jp
or
push
xchg
or
adc
lds
adc
cdq
mov
out
out
adc
inc
aas
lock
or
adc
sub
adc
inc
(bad)
lock
jb
mov
cmps
nop
jno
cmps
adc
out
cmps
cwde
bound
shl
(bad)
ret
cmps
into
sub
inc
push
xchg
xchg
loop
repnz
ret
pushf
ret
jnp
inc
int
mov
cwde
adc
(bad)
out
repnz
repnz
jg
or
dec
shl
fs
mov
js
or
sub
adc
loop
repnz
fmul
sub
sbb
ftst
xor
mov
push
mov
in
push
jmp
xchg
xchg
repnz
adc
jb
rcl
movs
pop
inc
cmp
sbb
jnp
inc
neg
cmp
xchg
outs
sub
adc
jo
inc
push
enter
xchg
adc
mov
jp
adc
push
push
inc
in
sub
bnd
inc
bnd
rol
stc
xchg
mov
xchg
js
jmp
inc
repnz
repnz
loopne
xchg
or
pop
xchg
jnp
xchg
jnp
js
push
stc
push
repnz
out
cmps
cwde
bound
jns
xchg
cmps
mov
loope
mov
cmp
repz
fisub
xlat
sub
push
inc
out
xor
adc
and
pop
xchg
ret
shr
push
lahf
jge
jnp
inc
repnz
repnz
js
xchg
or
pop
xchg
or
pop
xchg
sbb
push
aad
test
add
inc
js
hlt
(bad)
jge
inc
cmp
out
movs
or
jg
xor
push
xchg
mov
xchg
pop
shr
out
jle
adc
shl
jmp
mov
xor
adc
sub
adc
vorps
outs
repnz
inc
xor
adc
sbb
cli
xchg
rol
in
push
outs
repnz
ja
repnz
push
xor
dec
ftst
xor
push
fcomp
xchg
jg
out
mov
push
jge
rcl
movs
pop
inc
aam
movs
call
cmps
nop
inc
cmp
sbb
mov
push
xor
fcomip
rcl
rol
adc
aad
push
mov
lock
aad
rol
add
cwde
inc
push
sub
add
(bad)
adc
or
mov
aad
xchg
mov
cmps
mov
inc
sub
adc
or
(bad)
push
ins
outs
jnp
test
inc
outs
data16
xchg
cwde
inc
and
gs
movs
add
ret
out
repnz
repnz
pop
ficom
cwde
ret
ror
(bad)
adc
jmp
inc
(bad)
sti
cwde
pop
ficom
cwde
ret
rcr
jae
fadd
hlt
add
out
sar
dec
(bad)
fistp
xchg
sub
push
repnz
outs
ret
xchg
test
inc
in
ins
sbb
sub
jns
ja
xor
inc
movs
cmps
loope
fistp
pop
mov
sbb
pop
clc
push
xor
rcl
imul
jg
pop
ja
push
mov
push
xor
leave
cwde
jg
call
out
movs
and
inc
dec
movs
cwde
jg
call
pop
imul
out
in
sbb
push
js
cwde
push
scas
xor
in
inc
test
lds
repnz
out
js
or
xor
sub
aad
mov
lea
repz
js
dec
fnstenv
rcl
movs
pop
test
outs
es
xchg
inc
cmp
scas
add
pop
movs
xor
js
jno
imul
out
xchg
or
stc
(bad)
fisttp
cwde
inc
lods
xor
jno
cmc
and
retf
sbb
ror
xchg
inc
outs
push
mov
xchg
clc
movs
repnz
out
pop
outs
repnz
test
out
jp
dec
or
aad
out
js
ja
js
or
in
js
dec
leave
js
or
out
jp
jg
mov
jp
push
outs
repnz
xchg
test
jo
jnp
push
ror
out
push
out
or
adc
sub
repnz
jnp
dec
ror
out
push
out
jns
(bad)
movs
ja
js
or
out
(bad)
lods
into
adc
inc
cli
call
or
(bad)
ds
js
ss
js
push
xchg
xchg
outs
sub
out
arpl
push
xchg
inc
in
js
or
adc
cli
stc
aaa
push
repnz
xlat
imul
add
lds
or
outs
loop
adc
cmps
mov
xchg
out
scas
or
push
sbb
sub
repnz
fimul
inc
or
push
out
jns
movs
jns
int3
mov
rol
test
jno
xchg
movs
sub
pop
movs
xor
xlat
push
repnz
xlat
imul
add
lds
or
outs
inc
mov
xchg
adc
rol
js
or
adc
cli
stc
lahf
push
repnz
xlat
imul
add
lds
or
outs
sbb
sbb
mov
xchg
out
scas
or
push
sbb
ret
sub
repnz
fimul
inc
or
push
out
jns
movs
jns
int3
mov
rol
sub
xchg
xchg
xchg
or
push
xchg
rol
sub
jnp
mov
jnp
outs
mov
adc
sub
or
ds
ror
push
xchg
clc
lock
or
outs
mov
sbb
mov
xchg
out
scas
or
ds
ror
push
xchg
icebp
lock
or
outs
inc
mov
xchg
hlt
and
sub
repnz
sub
or
outs
ds
xchg
out
jg
lods
jnp
or
rol
lock
repnz
loop
ja
repnz
vmovupd
inc
psllw
sub
pmaxsw
lds
xchg
pmaxsw
rol
out
jns
mov
adc
lds
push
xchg
inc
push
xchg
repnz
jno
adc
daa
outs
repnz
dec
repnz
cmps
dec
in
js
or
push
xchg
mov
sub
dec
(bad)
jmp
ja
js
or
push
xchg
repnz
jno
adc
ja
mov
js
push
out
jns
sbb
and
repnz
sub
or
out
out
push
xchg
inc
in
js
or
adc
cli
stc
mov
daa
repnz
xlat
imul
add
lds
or
outs
outs
mov
xchg
mov
sub
repnz
repnz
jnp
or
xlat
inc
push
stc
jnp
repnz
out
pop
outs
repnz
daa
repnz
xlat
imul
cmp
lds
or
outs
(bad)
mov
xchg
mov
xchg
out
scas
or
ds
ror
push
xchg
pusha
push
xchg
repnz
jno
adc
pop
outs
repnz
dec
repnz
cmps
dec
in
js
or
push
xchg
ins
lds
jno
cmps
sub
repnz
xor
jp
repnz
ret
adc
repnz
repnz
jo
jnp
aas
ror
out
push
out
jno
cmp
pmaxsw
in
or
lods
js
or
out
js
call
cs
lods
js
or
cwde
jg
call
out
scas
xor
movs
or
cmp
ficom
shr
jnp
xor
pmaxsw
cli
jno
out
jg
xchg
test
lds
or
push
xchg
ja
js
or
in
js
repnz
(bad)
or
test
adc
mov
out
js
call
mov
or
faddp
xchg
repnz
sub
or
out
jo
push
xchg
inc
in
js
or
adc
cli
stc
fld
ds
repnz
xlat
imul
cmp
lds
or
outs
push
mov
xchg
mov
xchg
out
scas
or
ds
ror
push
xchg
ja
js
or
out
add
or
jmp
add
or
mov
add
or
jmp
push
sub
adc
out
cwde
add
or
adc
sub
jbe
xchg
stos
adc
sub
ja
js
or
adc
ror
in
js
xchg
xchg
or
adc
mov
jno
js
jb
xchg
xchg
cwde
cmp
or
adc
xor
jge
cmps
add
or
adc
ror
out
xlat
lds
xchg
pmaxsw
lds
js
jno
and
xor
or
or
add
jp
jns
jnp
or
xlat
inc
xchg
icebp
lds
repnz
jmp
daa
repnz
xlat
imul
scas
icebp
lds
or
outs
push
mov
xchg
shr
sub
repnz
sub
or
out
out
push
xchg
inc
in
js
or
adc
cli
stc
inc
adc
adc
daa
repnz
xlat
imul
add
lds
or
outs
into
int
xchg
add
jp
sbb
sub
or
out
movs
ja
js
or
adc
cwde
or
jns
movs
stc
(bad)
fimul
cwde
add
or
push
add
enter
or
out
outs
mov
sbb
(bad)
xchg
xchg
repnz
sub
or
out
jo
push
xchg
inc
in
js
or
adc
cli
stc
cmps
adc
adc
daa
repnz
xlat
imul
cmp
lds
or
outs
adc
adc
(bad)
int3
adc
sub
or
ds
ror
xchg
shl
sub
or
outs
sub
adc
cmc
fcmovne
push
out
sbb
sub
or
outs
xchg
adc
sub
jns
jnp
or
rol
lock
repnz
loop
(bad)
repnz
daa
repnz
xlat
imul
scas
icebp
lds
or
outs
mov
adc
dec
int3
adc
sub
or
ds
ror
das
xchg
int3
das
xchg
repnz
jno
adc
ja
mov
js
push
out
jns
sbb
repnz
inc
and
repnz
int3
adc
sub
or
push
sbb
mov
sub
or
nop
push
out
jns
movs
jns
int3
mov
rol
or
xchg
fcomi
lds
or
outs
and
adc
out
adc
sub
or
ds
ror
sub
sub
std
push
xchg
xor
jp
jnp
out
xor
push
xchg
inc
in
js
or
adc
cli
stc
add
repnz
daa
repnz
xlat
imul
add
lds
or
outs
mov
adc
aaa
adc
rol
js
or
adc
cli
test
jo
jnp
cmp
pmaxsw
out
sbb
sub
repnz
fimul
xchg
jge
pop
out
fst
push
xchg
inc
in
js
or
adc
cli
pushf
add
or
xchg
jnp
or
xlat
inc
lock
lds
repnz
loop
jnp
repnz
daa
repnz
xlat
imul
add
lds
or
outs
ss
adc
sub
inc
in
js
or
adc
cli
nop
inc
mov
adc
sub
repnz
jno
adc
ja
mov
js
push
out
jns
sbb
mov
and
repnz
repnz
fimul
cwde
push
lods
xor
inc
or
push
out
jns
movs
jns
repnz
rol
jl
xchg
pushf
sub
xchg
jno
adc
ja
mov
js
push
out
jns
sbb
and
repnz
movs
ja
js
or
into
lds
or
outs
inc
into
adc
or
adc
sub
or
ds
ror
sub
pop
lock
xchg
jno
adc
ja
repnz
dec
repnz
cmps
dec
in
js
or
push
xchg
cld
mov
cmp
repnz
xor
or
sub
inc
bnd
inc
lock
inc
bnd
sub
cli
stc
call
sbb
jp
jnp
xchg
jnp
js
push
out
jns
sbb
mov
mov
or
in
js
or
in
js
and
xchg
pmaxsw
lds
xchg
inc
in
js
or
adc
leave
inc
outs
and
adc
ror
rcl
movs
pop
nop
imul
adc
lods
mov
jg
or
xchg
leave
cwde
jg
or
js
call
ror
js
sbb
sub
je
lds
or
adc
ror
push
js
js
js
mul
inc
bnd
repnz
out
addr16
adc
ror
adc
imul
xchg
iret
lds
jb
in
or
cwde
jg
or
shl
adc
and
add
movs
or
pusha
movs
ja
jp
or
lea
or
xchg
mov
scas
adc
push
test
in
js
jns
(bad)
cmps
not
sub
jle
js
jnp
jo
jnp
call
or
retf
cli
cwde
inc
scas
xor
rol
dec
xchg
cmps
adc
ror
xchg
or
in
js
sbb
shl
or
adc
jns
adc
movs
mov
or
cwde
inc
jnp
fs
repnz
add
out
js
inc
mov
ror
adc
test
in
js
or
out
outs
jle
adc
mov
jg
lea
jns
jmp
or
adc
jns
adc
movs
addr16
jp
or
adc
sub
repnz
add
add
jnp
inc
repnz
add
sbb
repnz
dec
sbb
adc
lds
xchg
repnz
add
call
repz
out
das
repnz
lds
(bad)
js
jno
mov
jnp
or
les
dec
repnz
or
js
or
jg
xor
adc
test
out
js
mov
out
js
sbb
mov
repnz
xor
inc
cmp
pmaxsw
inc
cdq
jp
or
out
js
inc
mov
ror
in
js
mov
out
add
rcr
js
xor
sbb
les
adc
outs
repnz
add
or
js
sbb
mov
cmp
adc
ror
out
js
mov
adc
sbb
xchg
jp
or
adc
mov
or
adc
fcmovu
adc
aas
ror
adc
push
out
js
repz
lds
js
repnz
cmp
xchg
jns
or
cmp
xor
out
js
sbb
push
test
in
js
mov
out
js
cwde
adc
sub
cwde
adc
sub
or
stc
fistp
repnz
sub
pop
in
js
sbb
mov
repnz
jo
jnp
jecxz
or
movs
adc
or
push
xchg
iret
lds
or
sub
jmp
jp
ror
jmp
or
mov
adc
(bad)
adc
pop
jmp
adc
(bad)
adc
ror
in
js
into
adc
in
retf
call
sbb
adc
(bad)
in
js
repnz
loope
sub
bnd
sub
adc
test
out
js
mov
adc
repz
or
mov
out
add
(bad)
sub
shl
adc
xor
sbb
or
xchg
and
jae
sub
sub
sbb
or
movs
jp
or
adc
sub
rcl
inc
repnz
xor
fsub
and
or
adc
ror
out
movs
ja
jp
or
dec
dec
out
not
shl
inc
shl
mov
adc
xor
sub
dec
jnp
jns
xor
out
repnz
xor
sub
jnp
jnp
xchg
outs
cmp
adc
js
inc
outs
es
adc
js
push
xor
push
xor
adc
inc
inc
jno
and
xor
pushf
ret
cmp
sbb
sub
pop
adc
push
xor
adc
jnp
imul
or
movs
add
(bad)
xchg
xchg
push
fnsave
cmp
mov
repnz
push
rol
out
or
adc
jge
xchg
mov
repnz
repnz
jg
sub
jg
xchg
das
mov
adc
and
jns
mov
and
inc
jnp
and
xor
pushf
ret
cmp
ret
adc
sub
sbb
xlat
inc
repnz
out
popa
cmps
push
xchg
jnp
lds
xlat
in
shl
or
inc
rol
jl
xchg
jnp
arpl
adc
jae
fadd
hlt
aas
gs
adc
sub
scas
sbb
(bad)
fistp
jg
xor
test
inc
jmp
cwde
sub
adc
js
jg
inc
int
out
xlat
inc
xchg
iret
lds
repnz
inc
and
push
add
add
inc
js
ss
js
sbb
mov
repnz
inc
and
or
out
js
(bad)
stc
nop
adc
aad
jmp
mov
adc
js
in
adc
ror
icebp
js
mov
adc
movs
or
jg
xor
icebp
js
sbb
and
or
out
js
(bad)
stc
mov
repnz
ret
xchg
(bad)
cli
sub
movs
or
jg
xor
rcl
movs
pop
test
outs
(bad)
fst
xchg
inc
or
cli
scas
ss
and
push
ret
inc
xchg
jnp
aam
not
xchg
repnz
pop
scas
cmp
(bad)
lods
into
adc
inc
cli
cwde
pop
sub
inc
outs
dec
dec
out
js
sbb
(bad)
loope
jmp
inc
outs
repnz
outs
mov
sbb
fld
into
js
jns
jae
or
pop
outs
repnz
add
sbb
repnz
inc
and
repnz
sub
or
out
fst
push
xchg
or
adc
sub
adc
sub
or
add
in
sub
repnz
fimul
inc
or
movs
jns
repz
or
movs
stc
imul
adc
loop
dec
push
repnz
daa
repnz
xlat
imul
add
lds
or
and
lods
sbb
mov
int3
mov
or
mov
adc
cli
stc
or
repnz
daa
repnz
xlat
imul
add
lds
or
and
lds
xchg
jno
adc
rcr
repnz
dec
repnz
mov
or
push
xchg
or
adc
pop
loop
xchg
int3
mov
or
mov
adc
test
icebp
js
mov
adc
out
ja
add
xchg
repnz
jno
adc
ja
mov
or
mov
adc
cli
jns
int3
mov
or
mov
adc
cli
stc
dec
pop
repnz
daa
repnz
xlat
imul
add
lds
or
and
inc
icebp
lock
or
and
movs
add
ja
xor
nop
adc
daa
repnz
xlat
imul
test
xchg
repnz
mov
out
js
call
sub
sbb
repnz
inc
cmp
repnz
add
sbb
repnz
inc
and
repnz
sub
or
out
fst
push
xchg
or
adc
cmp
adc
add
sub
jns
repz
or
mov
adc
cli
stc
ja
repnz
daa
repnz
xlat
imul
add
lds
or
and
inc
call
xchg
xchg
or
and
lods
xor
out
repnz
aaa
sbb
adc
daa
repnz
xlat
imul
add
lds
or
and
rol
icebp
js
mov
adc
test
icebp
js
mov
adc
loop
jmp
repnz
daa
repnz
xlat
imul
add
lds
or
and
inc
repnz
lds
or
and
(bad)
xchg
repnz
jno
adc
ja
mov
or
mov
adc
cli
test
jo
jnp
imul
out
push
jmp
in
mov
repnz
repnz
fimul
cwde
push
lods
xor
inc
or
movs
jns
repz
or
movs
stc
imul
stc
dec
sbb
repnz
xlat
imul
add
lds
or
and
inc
sub
lds
or
and
movs
add
popa
movs
ja
pop
ror
and
sub
jno
adc
ja
mov
or
mov
adc
cli
stc
out
repnz
daa
repnz
xlat
imul
mov
jb
sub
mov
out
js
call
sub
sbb
repnz
inc
cmp
repnz
add
sbb
repnz
inc
and
cwde
adc
sub
repnz
jle
shr
sub
adc
sub
adc
js
sbb
bnd
mov
or
adc
or
into
js
sbb
sub
sub
cmp
(bad)
hlt
nop
jno
out
xchg
dec
dec
out
cmps
cwde
bound
inc
sar
cdq
call
adc
ror
(bad)
sub
repnz
cli
inc
outs
ret
xchg
lock
mov
jnp
jo
jnp
add
or
mov
fst
xchg
cld
in
ror
out
sub
ja
jl
or
leave
lds
repnz
add
or
pusha
movs
ja
jl
or
jnp
mov
or
adc
sub
or
iret
lds
bnd
sub
pop
out
js
ss
push
das
repnz
sub
adc
ror
in
js
mov
adc
aad
jmp
daa
ror
movs
jp
or
out
js
ss
adc
repnz
lea
xchg
or
adc
ror
out
js
mov
adc
pop
out
js
ja
jp
or
adc
mov
or
adc
mov
adc
push
or
js
xor
out
js
repnz
ror
xchg
cmp
xchg
jmp
xchg
add
jmp
dec
out
js
mov
out
fisub
or
out
js
mov
jnp
inc
bnd
inc
repnz
add
or
js
cwde
adc
fst
xchg
push
add
inc
mov
outs
add
adc
aad
jmp
daa
ror
push
xchg
iret
lds
or
cmp
sub
ja
jl
or
jmp
not
or
xchg
jnp
or
iret
lds
repnz
inc
and
fs
inc
sbb
xchg
repnz
add
out
js
js
lock
or
ror
sub
adc
sub
cmp
sub
repnz
add
movs
stc
ja
repnz
ret
xchg
sub
xchg
or
out
js
ss
xchg
jbe
xchg
or
js
mov
out
add
cli
sbb
jbe
xchg
inc
test
or
out
js
sbb
sub
pmaxsw
or
out
outs
lea
js
xor
(bad)
pop
repnz
jnp
not
or
movs
adc
or
adc
sub
repnz
out
es
xchg
add
cmp
shl
add
sbb
repnz
lahf
pop
repnz
outs
in
js
jno
mov
fisub
out
js
je
js
jno
mov
in
call
sbb
xlat
jnp
movs
adc
or
out
js
ss
xchg
repnz
outs
in
js
repz
aad
(bad)
or
mov
adc
sub
or
adc
movs
ja
jl
or
mov
ror
adc
outs
in
js
lods
dec
fsub
xor
add
loop
sar
dec
(bad)
xchg
mov
push
jae
scas
cmp
adc
lds
push
jg
xchg
xchg
lock
inc
mov
pop
add
jnp
scas
aad
(bad)
aam
sbb
sub
fist
xchg
xchg
aad
shl
xchg
repnz
aad
jmp
jnp
cwde
adc
inc
mov
adc
sub
repnz
inc
inc
or
adc
sub
push
cwde
inc
mov
sbb
repnz
outs
push
aad
xchg
jnp
jo
jnp
ja
xor
rcl
movs
pop
test
outs
mov
adc
cmp
xor
aad
jmp
js
cli
stc
add
push
jmp
out
sub
shr
jmp
out
sar
adc
ror
cmp
pop
(bad)
pushf
add
out
js
sbb
ror
out
js
repnz
outs
xchg
ficom
xchg
fadd
hlt
add
out
cmp
into
in
(bad)
movs
or
pusha
movs
mov
push
jmp
ins
inc
jnp
mov
jnp
mov
hlt
iret
lds
sbb
lods
sub
mov
adc
mov
adc
scas
xor
xlat
inc
or
push
imul
xchg
inc
xor
cwde
adc
outs
repz
ins
repnz
add
push
(bad)
jae
sub
std
cmps
ret
jmp
dec
out
cmps
cwde
bound
rcl
jnp
jo
jnp
jnp
xor
xchg
jnp
inc
bnd
inc
repz
inc
bnd
inc
bound
xchg
cwde
pop
in
cmp
repnz
inc
inc
repz
in
sbb
mov
outs
mov
adc
sbb
mov
outs
mov
add
popa
movs
mov
push
jmp
adc
inc
ret
lods
push
push
xchg
mov
xchg
ret
add
xchg
cwde
cmp
inc
ret
xor
xchg
test
xchg
ret
add
mov
push
inc
repnz
sub
jnp
rol
xor
ins
repnz
mov
repnz
sub
jnp
rol
and
repnz
sub
jnp
rol
gs
repnz
xchg
add
bound
xchg
ret
sbb
or
xchg
ret
(bad)
xchg
sbb
xchg
ret
mov
sub
xchg
ret
mov
push
xchg
cmp
xchg
movs
scas
xor
aas
push
aad
jmp
js
sbb
sub
mov
out
les
xchg
out
mov
outs
push
xchg
mov
in
js
jb
lds
repnz
mov
adc
les
xchg
out
mov
push
push
xchg
fdiv
xchg
fimul
mov
mov
adc
les
xchg
out
mov
ins
push
xchg
clc
xchg
jnp
in
ror
adc
aam
xchg
call
rol
or
addr16
adc
ror
adc
aam
xchg
call
rol
cmp
ins
repnz
cmp
repnz
ror
adc
aam
xchg
call
rol
xor
ins
repnz
pop
or
adc
ror
adc
aam
xchg
call
rol
xchg
outs
repnz
repz
adc
out
cmps
cwde
bound
dec
stos
loope
neg
inc
inc
pop
int3
lds
push
in
js
jnp
out
shr
xchg
mov
or
sbb
ins
bnd
jge
test
mov
adc
jnp
cwde
mov
rol
and
xchg
push
jnp
mov
xlat
cmps
mov
lods
push
cwde
adc
sub
lock
bnd
das
repnz
aam
xchg
cwde
adc
(bad)
mov
sub
into
call
sbb
inc
out
xchg
inc
repnz
jge
aad
outs
bnd
lock
in
sub
repnz
mov
adc
ret
xchg
(bad)
mov
sub
mov
(bad)
sub
repnz
sbb
inc
mov
adc
jge
int
outs
bnd
lock
in
sub
repnz
lea
adc
sub
cwde
adc
sub
call
inc
bnd
inc
out
mov
jmp
adc
inc
ret
sub
xchg
jo
xchg
(bad)
mov
sub
mov
(bad)
sub
lock
inc
repnz
outs
bnd
lock
in
sub
repnz
mov
and
mov
adc
sub
mov
in
cmp
bnd
inc
fidivr
sub
das
push
xchg
int3
lds
xlat
adc
sub
jnp
imul
sbb
xchg
(bad)
push
daa
ins
bnd
inc
and
xchg
bnd
inc
repnz
outs
bnd
lock
in
sub
repnz
mov
adc
sub
mov
in
sub
mov
in
cmp
bnd
sub
call
icebp
mov
out
imul
push
xchg
stc
inc
or
adc
ins
push
xchg
out
mov
ins
push
xchg
out
mov
push
push
xchg
jnp
inc
pop
adc
cs
xlat
inc
lock
bnd
lds
sub
repnz
inc
push
xchg
adc
sub
repz
sub
mov
in
sub
repnz
mov
outs
push
xchg
les
js
(bad)
mov
sub
xchg
mov
sub
bnd
inc
pop
adc
cs
xlat
inc
lock
bnd
(bad)
xchg
bnd
rol
and
xchg
(bad)
jno
outs
bnd
sub
adc
adc
jns
sub
repnz
xlat
inc
lock
bnd
lds
xor
ins
repnz
mov
sub
mov
in
sub
mov
in
cmp
repnz
sub
mov
adc
imul
push
xchg
stc
sub
repnz
or
pusha
movs
mov
push
jmp
(bad)
sub
mov
(bad)
sub
repnz
sub
bnd
sub
cs
xchg
int3
lds
rcl
xchg
cwde
adc
(bad)
mov
sub
mov
(bad)
sub
call
sub
repnz
inc
mov
lds
bnd
(bad)
xchg
bnd
rol
and
xchg
(bad)
push
daa
ins
bnd
inc
movups
sub
repnz
outs
bnd
lock
in
sub
repnz
mov
adc
sub
mov
in
sub
mov
in
cmp
repz
sub
mov
adc
imul
push
xchg
stc
cmp
repnz
push
push
xchg
out
mov
ins
push
xchg
out
mov
push
push
xchg
jns
sub
adc
mov
out
xchg
adc
inc
repz
sub
repnz
pop
pslld
and
push
push
xchg
out
mov
ins
push
xchg
out
mov
push
push
xchg
jns
sub
repnz
sub
push
push
xchg
int
sub
repnz
ret
pslld
and
addr16
xchg
jnp
rol
and
xchg
(bad)
jno
outs
bnd
inc
fidivr
sub
call
int3
mov
out
sub
push
xchg
adc
sub
mov
in
sub
mov
in
sub
mov
in
xor
repnz
sub
adc
inc
repz
sub
repnz
dec
or
adc
repnz
mov
ins
push
xchg
out
mov
push
push
xchg
jns
sub
repz
sub
sub
inc
or
lds
rcl
xchg
sbb
ror
cwde
inc
lds
js
lods
dec
dec
out
cmps
cwde
bound
dec
cmp
mov
test
xchg
int3
lds
mov
js
jnp
out
shr
xchg
and
ror
sbb
ins
repnz
jo
jnp
imul
sbb
cmps
or
adc
push
call
out
add
adc
sub
mov
in
sub
fst
jns
jg
mov
xlat
inc
bnd
inc
repnz
jge
int
outs
bnd
lock
out
sub
adc
xchg
bnd
rol
and
xchg
sub
ret
stc
jecxz
cwde
add
xchg
mov
out
imul
push
xchg
stc
aaa
or
ins
push
xchg
out
mov
ins
push
xchg
out
mov
push
push
xchg
adc
push
mov
add
xchg
inc
in
jl
add
xlat
inc
lock
bnd
lds
jno
outs
bnd
inc
lock
inc
bnd
inc
repz
inc
bnd
inc
dec
adc
sub
sbb
lods
xor
jnp
jnp
and
test
sub
(bad)
and
xchg
(bad)
jno
outs
bnd
inc
xchg
jnp
inc
out
test
adc
inc
ja
lds
rcl
xchg
jnp
mov
jnp
out
push
cs
xchg
jns
sub
adc
sbb
sub
mov
in
sub
repnz
mov
outs
push
xchg
push
push
xchg
mov
mov
in
xchg
jns
sub
adc
sbb
sub
bnd
inc
mov
and
mov
adc
in
adc
sbb
xchg
out
mov
push
push
xchg
adc
cmp
xchg
xlat
inc
lock
bnd
lds
outs
repnz
jg
or
mov
ins
push
xchg
out
mov
push
push
xchg
adc
cmp
jns
sub
adc
inc
ja
lds
in
adc
sub
or
and
xchg
(bad)
push
daa
ins
bnd
inc
jae
xchg
repz
jge
inc
pop
outs
bnd
lock
in
sub
repnz
mov
jge
sub
(bad)
mov
sub
mov
(bad)
sub
call
sub
repnz
inc
mov
lds
bnd
lds
xchg
bnd
rol
and
xchg
(bad)
push
daa
ins
bnd
inc
movups
sub
repnz
outs
bnd
lock
in
sub
repnz
mov
adc
sub
mov
in
sub
mov
in
cmp
repnz
sub
mov
adc
imul
push
xchg
stc
mov
mov
repnz
mov
ins
push
xchg
out
mov
push
push
xchg
jns
sub
adc
retf
repnz
sub
sub
inc
sub
lds
out
adc
sub
jnp
in
sub
mov
in
sub
mov
in
cmp
bnd
sub
call
div
push
xchg
stc
inc
xor
adc
repnz
mov
ins
push
xchg
out
mov
push
push
xchg
jns
sub
cwde
add
xlat
inc
bound
pop
outs
bnd
das
repnz
out
adc
sub
(bad)
mov
sub
xchg
mov
sub
cwde
push
in
cmp
jns
int3
mov
out
sub
push
xchg
adc
sub
mov
push
(bad)
inc
xchg
(bad)
mov
sub
xchg
mov
sub
cwde
dec
in
cmp
jns
int3
mov
out
sub
push
xchg
adc
sub
mov
in
sub
mov
in
sub
mov
in
cmp
jns
sub
adc
xor
jns
div
push
xchg
stc
pop
xor
adc
xor
js
sbb
jae
or
adc
js
hlt
add
jmp
mov
repnz
jnp
imul
xchg
cwde
adc
sub
xchg
outs
sub
xchg
xchg
push
sub
movs
stc
sub
adc
out
jae
xor
adc
lds
or
sub
repnz
mov
mov
xlat
rol
push
xchg
adc
ror
jmp
outs
movs
xor
pop
in
sub
mov
inc
pop
outs
repnz
repnz
idiv
jno
lahf
movs
mov
push
aad
jmp
jg
xchg
push
loop
mov
sub
adc
lds
js
jno
lahf
jb
dec
dec
out
cmps
cwde
bound
inc
rcl
jnp
mov
jnp
push
jmp
jge
sub
repnz
add
sbb
sub
repnz
and
adc
(bad)
jp
js
(bad)
out
xchg
jns
popf
mov
or
mov
adc
push
or
leave
aaa
outs
repnz
add
sbb
lahf
sub
mov
xchg
jecxz
jb
mov
or
mov
adc
push
or
add
add
sbb
nop
sub
mul
ret
sub
or
push
xchg
xchg
out
inc
push
xchg
or
adc
sub
cmc
fs
inc
xchg
mov
xchg
or
push
xchg
xchg
out
scas
inc
push
xchg
or
adc
pop
jecxz
and
test
out
js
mov
adc
push
or
into
outs
repnz
add
sbb
repnz
ja
adc
add
or
js
xor
cli
sar
fs
inc
repz
xchg
or
push
xchg
xchg
out
or
push
xchg
or
adc
pop
jecxz
mov
test
out
js
mov
adc
push
or
inc
xor
sub
sbb
xchg
sub
bnd
div
push
xchg
or
push
xchg
pusha
cmc
js
call
pushf
mov
out
ins
ins
push
xchg
movs
in
js
call
repnz
ficomp
inc
(bad)
shr
shr
shl
call
sub
retf
jnp
xor
test
sub
inc
aam
icebp
(bad)
js
jno
(bad)
and
pop
inc
outs
dec
jmp
out
not
shl
adc
jg
mov
ja
xor
ja
add
lds
or
pop
xchg
repnz
sub
or
js
dec
loop
ror
mov
add
add
sbb
sub
repnz
jnp
arpl
or
lods
je
or
jns
lahf
mov
or
mov
adc
nop
add
js
icebp
fs
inc
adc
xchg
push
or
add
sub
or
jns
sahf
mov
or
mov
adc
nop
add
js
mul
jmp
lds
or
add
sub
jnp
fimul
out
push
jmp
lods
je
or
jns
sahf
mov
or
mov
adc
nop
add
js
cmc
fs
inc
mov
xchg
push
or
add
sub
or
jns
sahf
mov
or
mov
adc
fld
out
sar
pop
nop
add
js
sti
fs
inc
jns
lds
or
add
sub
or
jns
sahf
mov
or
mov
adc
nop
add
js
stc
fs
inc
cmp
push
or
add
je
or
jns
sahf
mov
or
mov
adc
jmp
push
sub
or
jns
cdq
mov
or
mov
adc
nop
add
js
cld
fs
inc
shl
push
or
add
daa
outs
repnz
add
add
adc
or
adc
sub
repnz
push
or
cwde
add
add
loop
ror
lods
outs
fimul
add
add
mov
bnd
lea
out
js
sbb
test
jmp
mov
sbb
test
push
out
js
std
xchg
sub
repnz
nop
push
in
js
enter
repz
ror
adc
ror
adc
xor
add
or
js
call
ror
out
js
sbb
and
jg
or
stc
(bad)
gs
jl
shl
xor
sub
push
scas
out
rcr
xor
jmp
mov
repnz
xchg
mov
sub
bound
pop
outs
repnz
add
or
js
sbb
lahf
sub
mov
mov
sub
repnz
add
or
js
sbb
sub
sbb
sub
ja
jg
or
adc
sub
or
js
call
ror
js
sbb
nop
sub
mov
or
mov
adc
out
add
or
js
sbb
xchg
sub
push
out
js
xor
jg
or
push
xchg
or
adc
sub
or
add
out
fldcw
push
xchg
or
out
js
ss
shr
adc
test
in
js
jno
cmp
nop
sub
or
js
jnp
xchg
jnp
add
or
js
clc
push
add
repz
ror
adc
enter
mov
or
adc
mov
ja
jns
or
adc
ror
adc
ror
leave
jo
or
out
js
frstor
ja
jo
or
out
js
repnz
mov
jg
jo
or
out
js
test
push
fisttp
xchg
or
out
js
mov
adc
test
out
js
mov
adc
loop
add
or
js
sbb
xchg
sub
add
in
jns
or
adc
ror
inc
in
ins
sbb
xchg
sub
or
js
ja
jg
or
jmp
xchg
sub
or
js
sbb
ror
js
jns
jae
or
adc
lds
xchg
repnz
test
jmp
xchg
inc
in
ror
adc
sub
loope
xchg
adc
sub
push
out
js
mov
out
js
jo
js
jno
mov
cmp
or
out
js
jl
xchg
repnz
ins
test
xchg
xchg
add
sub
or
fadd
repnz
push
enter
sub
repnz
jnp
stos
test
out
jno
xchg
jnp
out
mov
bnd
sub
loopne
xchg
sbb
cld
inc
outs
push
jecxz
xchg
stc
mov
repnz
cmps
mov
and
ins
push
xchg
add
cld
js
jnp
inc
sub
adc
ins
repnz
pop
cmp
adc
shl
adc
sub
repnz
jecxz
repnz
lds
call
adc
ror
stc
jnp
repnz
sub
and
pushf
sbb
js
sbb
sbb
cmp
repnz
add
mul
outs
repnz
xchg
repz
mov
aas
call
add
xor
dec
cmp
adc
jl
shl
xor
sub
push
scas
out
rcr
xor
jmp
mov
xor
xor
or
stc
pop
cmp
adc
ror
add
movs
xor
ins
in
or
inc
aam
cmp
and
jmp
xlat
out
add
js
jb
xor
or
mov
(bad)
pop
xor
add
sbb
sub
xor
repnz
ror
push
or
leave
push
out
jg
and
or
mov
sub
repnz
add
sbb
xchg
sub
ja
imul
inc
or
mov
adc
test
std
js
mov
out
or
mov
out
add
jmp
inc
repnz
add
sbb
xchg
sub
repnz
jnp
adc
or
adc
std
adc
sub
bnd
div
push
xchg
dec
add
push
repnz
nop
nop
(bad)
js
jg
xor
adc
or
adc
cdq
sub
inc
bound
pop
outs
bnd
lea
adc
ror
push
xchg
ja
movs
sub
pop
movs
xor
div
push
xchg
retf
lds
repnz
fistp
repnz
nop
adc
js
jg
pop
cmc
mov
ds
repnz
vpmacssdql
lds
bnd
mov
adc
loope
xchg
dec
cld
js
jg
inc
cmc
mov
ds
adc
ror
jnp
inc
idiv
inc
bnd
sub
ins
push
xchg
pop
push
xchg
lock
inc
repnz
outs
out
std
adc
sub
or
push
aas
jge
xchg
xor
or
pop
xchg
or
push
pop
adc
adc
aam
adc
pop
dec
inc
xlat
mov
or
stc
imul
adc
sub
cwde
adc
fst
push
xchg
xchg
xchg
mov
js
repnz
push
inc
(bad)
js
mov
adc
mov
jno
js
jb
xchg
jg
aas
jnp
pushf
cmp
or
push
xchg
dec
inc
in
das
call
cdq
sbb
cdq
sbb
mov
sub
pop
outs
repnz
ret
and
ret
adc
push
mov
push
push
repnz
sub
repnz
ret
mov
sub
ja
push
or
out
js
xor
push
repnz
sub
repnz
ret
push
pop
sub
repnz
das
cmp
sub
ret
adc
and
adc
adc
in
adc
jge
mov
xchg
(bad)
and
xchg
jnp
inc
bnd
inc
bnd
sub
das
push
xchg
int3
lds
loop
xchg
call
inc
repnz
fbld
repnz
sub
or
cwde
mov
repnz
cmc
adc
stc
mov
repnz
push
sub
jge
sub
sub
pop
out
js
mov
sub
pop
cld
js
jns
das
ror
mov
or
out
inc
test
(bad)
js
not
xchg
repnz
test
cld
js
mov
out
js
call
div
push
xchg
adc
ror
shl
sub
jmp
mov
xchg
idiv
outs
repnz
mov
leave
push
out
jg
das
ret
or
jnp
inc
cmp
sub
sbb
sub
(bad)
adc
ror
adc
aad
push
xchg
jnp
lds
xchg
repnz
sub
bnd
rol
adc
ins
repnz
out
repnz
push
arpl
ror
add
cwde
inc
mov
dec
pop
xchg
cwde
adc
push
cld
adc
jb
dec
dec
out
loop
shl
adc
mov
sbb
call
jbe
xchg
or
mov
sbb
(bad)
sub
repnz
sub
repnz
adc
adc
and
repz
sub
repnz
call
div
adc
sub
mov
outs
adc
out
js
ja
jp
or
cwde
add
pmaxsw
xor
adc
push
in
js
sbb
ror
xchg
outs
ror
in
js
mov
out
js
loopne
xchg
ja
xchg
or
push
daa
ins
repnz
jg
repnz
test
in
js
fst
(bad)
adc
pmaxsw
fnstcw
or
call
ja
jp
or
test
or
in
js
retf
shl
cwde
adc
push
in
js
fst
cmps
ja
jp
or
out
js
cwde
adc
sub
mov
outs
xchg
adc
movs
xor
push
xchg
repnz
dec
inc
push
xchg
jnp
xchg
jnp
add
xchg
movs
lds
inc
push
xchg
call
ror
movs
lds
cmc
adc
outs
repnz
fxch
or
push
xchg
jnp
es
mov
mov
cwde
adc
call
xchg
mov
adc
ins
repnz
and
cli
stc
xchg
and
adc
aad
jmp
sub
xchg
jg
or
sbb
sub
mov
repz
adc
adc
adc
mov
adc
sbb
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
and
adc
mov
adc
sub
loop
outs
and
adc
or
js
leave
adc
mov
adc
mov
adc
mov
adc
and
out
repnz
bnd
ror
stc
and
repnz
ret
xchg
or
cmc
jp
or
in
js
mov
adc
test
in
js
sbb
sub
or
xchg
repnz
shl
adc
ror
mov
sub
repnz
cmp
xor
sub
sub
inc
repnz
out
repnz
sbb
sub
repnz
fisubr
daa
xchg
or
in
js
xor
jno
or
popa
xor
adc
sub
repnz
add
and
mov
adc
ror
xchg
mov
scas
or
jae
push
xchg
or
out
js
ss
xchg
jnp
inc
bnd
div
ror
push
push
xchg
mov
xchg
repnz
jg
or
js
or
in
js
mov
adc
test
in
js
mov
adc
loop
js
repnz
test
out
js
mov
push
xchg
or
xchg
or
jnp
inc
bnd
div
js
sub
addr16
xchg
in
xchg
repnz
or
out
(bad)
lods
into
adc
cmp
cwde
adc
retf
xchg
stc
mov
repnz
out
test
sub
repnz
inc
sub
adc
repnz
js
repnz
mov
ror
adc
or
sub
xchg
jns
hlt
mov
in
sub
repnz
mov
addr16
xchg
push
sbb
sub
or
xchg
xchg
or
test
aad
jmp
xchg
or
in
ror
push
xchg
or
adc
shl
adc
ror
mov
sub
repnz
cmp
xor
sub
sub
inc
repnz
sti
and
adc
jb
lds
repnz
mov
repnz
repz
ror
js
xor
out
js
jg
jb
or
retf
lds
or
sbb
inc
or
xchg
xchg
or
cmp
daa
and
repz
js
repnz
inc
bnd
inc
pop
enter
adc
sti
adc
ins
repnz
aas
and
icebp
adc
ror
in
js
mov
adc
test
in
js
mov
adc
loop
js
repnz
test
out
js
mov
push
xchg
int3
sbb
ror
jnp
inc
bnd
hlt
mov
in
sub
repnz
mov
ins
push
xchg
movs
sbb
sub
or
out
(bad)
lods
into
adc
xchg
in
sub
sub
inc
repnz
repz
fimul
(bad)
sub
repnz
or
cli
mov
ror
adc
or
sub
xchg
jns
hlt
mov
in
sub
repnz
mov
ins
push
xchg
adc
xchg
repnz
add
or
js
js
js
or
test
aad
jmp
xchg
or
in
ror
push
xchg
or
adc
shl
adc
ror
mov
sub
repnz
cmp
xor
sub
sub
inc
repnz
cmp
repnz
ror
sub
adc
or
js
repnz
mov
ror
adc
or
sub
xchg
jns
cmc
mov
in
sub
repnz
mov
ins
push
xchg
fcom
xchg
repnz
add
or
js
jg
xchg
or
push
pop
adc
adc
aam
cmps
adc
or
js
xor
movs
or
pusha
movs
ja
jp
or
out
js
xor
out
js
jg
jb
or
retf
lds
or
sbb
movs
or
pusha
movs
ja
jp
or
out
js
xor
jnp
inc
bnd
inc
repnz
ins
repnz
sbb
repnz
test
out
js
cwde
adc
sub
push
out
js
sbb
mov
sub
ret
sub
jb
xchg
cwde
adc
mov
mov
push
xchg
inc
in
ror
adc
sub
or
jns
iret
mov
js
push
out
js
sbb
sub
out
js
cmp
(bad)
lods
into
adc
mov
or
in
ror
out
js
sbb
xchg
or
loope
outs
repnz
xor
or
js
mov
sub
jnp
js
push
out
js
sbb
sub
push
xchg
dec
pop
xchg
cwde
adc
out
sub
rol
sub
out
js
sbb
jnp
inc
bnd
rol
jns
or
adc
and
lds
jb
xchg
cwde
adc
mov
mov
push
xchg
inc
in
ror
adc
sub
or
jns
cmc
mov
js
push
out
js
sbb
sub
out
js
mov
xchg
mov
xchg
repz
in
sub
jns
div
push
xchg
adc
ror
adc
sbb
mov
sub
repnz
jg
adc
out
js
xor
add
repnz
adc
sub
xor
xchg
hlt
add
inc
jp
fs
xchg
test
xor
dec
fimul
mov
push
jmp
xchg
repnz
loop
mov
leave
and
mov
and
mov
adc
not
xchg
add
cwde
inc
push
(bad)
stc
sbb
mov
(bad)
xchg
outs
repnz
movaps
adc
xchg
js
fimul
sub
push
xchg
out
mov
addr16
xchg
nop
adc
scas
aad
(bad)
mov
sub
fimul
sub
push
xchg
out
mov
ins
push
xchg
les
cmps
mov
adc
cmp
neg
stc
out
mov
outs
push
xchg
call
jmp
mov
sub
and
rol
xchg
outs
repnz
jg
repnz
mov
adc
sub
cmps
mov
fucomi
push
jmp
repnz
mov
sbb
mov
sub
(bad)
mov
sub
mov
repnz
xchg
fimul
or
mov
adc
ror
or
fimul
add
or
mov
adc
pop
out
repnz
mov
adc
mov
sub
mov
push
jmp
xchg
cli
loop
sub
repnz
(bad)
loop
sub
repnz
loop
lds
repnz
out
lds
repnz
shl
lds
repnz
fsubp
lds
repnz
ret
sub
repnz
(bad)
loop
sub
repnz
movs
pop
inc
rol
dec
adc
adc
movs
inc
rcr
xlat
sub
adc
cli
cwde
ret
shl
add
(bad)
rol
push
pop
adc
gs
out
push
mov
not
ins
sub
push
cmp
sti
shl
sub
cmps
pop
add
lds
xchg
repnz
outs
daa
sbb
rcr
lods
push
adc
cmp
(bad)
sub
cmp
fcmovnbe
add
(bad)
out
sub
or
(bad)
sbb
ror
out
mov
(bad)
sbb
cmps
mov
add
jns
mov
sub
mov
lds
repnz
mov
lds
repnz
mov
add
sub
repnz
mov
add
sub
repnz
stos
loop
sub
repnz
scas
loop
sub
repnz
xchg
loop
sub
repnz
xchg
loop
sub
repnz
call
sub
sahf
loop
sub
repnz
and
sub
repnz
xchg
lds
repnz
mov
lds
repnz
mov
lds
repnz
jb
lds
repnz
jbe
lds
repnz
jp
lds
repnz
jle
lds
repnz
vpexpandw
js
data16
sub
repnz
push
lds
repnz
outs
loop
sub
repnz
push
loop
sub
repnz
push
loop
sub
repnz
pop
loop
sub
repnz
pop
loop
sub
repnz
inc
loop
sub
repnz
inc
loop
sub
repnz
dec
loop
sub
repnz
dec
loop
sub
repnz
xor
lds
repnz
ss
sub
repnz
cmp
lds
repnz
ds
sub
repnz
and
lds
repnz
es
sub
repnz
sub
lds
repnz
cs
sub
repnz
adc
lds
repnz
push
loop
sub
repnz
sbb
lds
repnz
push
loop
sub
repnz
or
lds
repnz
push
loop
sub
repnz
repnz
sub
repnz
mul
lds
repnz
cli
in
sub
repnz
(bad)
in
sub
repnz
loop
lds
repnz
out
lds
repnz
jmp
sub
out
in
sub
repnz
shl
lds
repnz
(bad)
in
sub
repnz
(bad)
lds
repnz
fsubp
lds
repnz
ret
sub
repnz
(bad)
in
sub
repnz
retf
sub
repnz
into
in
sub
repnz
mov
lds
repnz
mov
lds
repnz
mov
add
sub
repnz
mov
add
sub
repnz
stos
in
sub
repnz
scas
in
sub
repnz
xchg
in
sub
repnz
xchg
in
sub
repnz
and
sub
repnz
xchg
lds
repnz
mov
lds
repnz
mov
lds
repnz
jb
lds
repnz
jle
lds
repnz
(bad)
in
sub
repnz
in
sub
repnz
push
lds
repnz
outs
in
sub
repnz
push
in
sub
repnz
push
in
sub
repnz
pop
in
sub
repnz
pop
in
sub
repnz
dec
in
sub
repnz
dec
in
sub
repnz
xor
lds
repnz
ss
sub
repnz
cmp
lds
repnz
ds
sub
repnz
and
lds
repnz
es
sub
repnz
sub
lds
repnz
cs
sub
repnz
adc
lds
repnz
push
in
sub
repnz
sbb
lds
repnz
push
in
sub
repnz
add
lds
repnz
push
in
sub
repnz
or
lds
repnz
push
in
sub
repnz
.byte
